pop
lock
jle
lock
lock
add
add
add
add
notb
add
inc
mov
add
lock
and
add
add
add
inc
adc
add
mov
lret
add
lods
add
add
iret
xor
add
hlt
xchg
or
add
add
add
pop
call
repz
repz
add
repz
add
add
add
repz
add
add
add
add
jno
add
sub
repz
hlt
sub
push
add
enter
add
testb
out
repnz
repnz
add
add
scas
add
add
gs
add
das
repz
repnz
add
add
repnz
lock
add
dec
shl
add
xchg
add
add
pusha
add
add
pushfw
add
scas
sbb
add
lock
enter
add
add
stos
in
add
clc
xrelease
icebp
inc
add
add
jecxz
icebp
add
nop
cmp
add
icebp
add
icebp
lcall
icebp
add
test
add
icebp
dec
add
add
adc
icebp
add
pop
add
add
repnz
repnz
add
add
cs
add
sahf
add
add
fiadds
addb
add
add
aam
add
add
add
add
add
add
add
testb
lock
add
and
add
cli
int3
add
add
add
add
ret
dec
add
ss
add
cli
mov
sbb
add
pop
add
add
cmp
mov
into
add
add
sarl
add
stc
lret
add
add
stc
add
push
add
push
mov
add
stc
popl
sub
add
stc
add
cmp
add
hlt
das
add
add
das
add
add
mov
add
not
hlt
add
cmc
lods
add
add
mov
cmc
add
adc
add
dec
inc
cmc
add
cmc
and
xchg
cmc
add
pop
nop
add
mov
cmc
pop
add
add
test
cmc
add
scas
out
add
test
add
negb
add
add
mov
add
dec
mov
add
idivb
mov
cmp
jae
add
testb
add
add
push
faddl
add
adc
add
idivl
add
add
pop
cmp
add
testl
push
testl
add
idiv
add
add
adc
testl
add
push
testl
adc
add
clc
add
sahf
xor
add
clc
add
clc
outsb
add
add
clc
add
cmpsl
jl
add
clc
pop
add
clc
add
test
add
loop
clc
add
clc
movl
add
add
je
add
jp
out
add
out
addb
add
mov
out
add
les
out
add
out
jnp
movb
in
out
add
xor
add
in
out
add
out
fwait
add
add
scas
add
add
aam
add
push
repnz
add
out
movl
add
add
in
add
iretw
out
add
out
cmp
push
add
add
mov
lcall
faddl
add
add
add
or
add
enter
add
je
add
add
daa
add
add
xor
add
add
add
add
lret
add
add
in
add
add
mov
add
add
leave
add
add
into
push
add
push
pop
sbb
add
jns
add
add
add
inc
imul
add
jl
add
add
add
mov
add
dec
or
add
add
outsl
jne
je
add
add
mov
outsl
add
add
add
andb
gs
add
add
imul
add
mov
data16
add
add
insb
add
add
add
mov
add
xchg
add
add
pop
add
add
add
add
outsl
jne
jo
add
add
loope
add
xor
add
add
mov
jae
push
xor
add
add
jne
add
add
add
pop
add
add
add
add
je
add
sldt
add
scas
inc
add
add
add
loopne
insb
add
test
add
add
and
dec
pop
add
add
cmp
xor
xor
add
add
cmp
add
int3
add
add
jbe
push
add
inc
add
add
xor
or
add
add
push
add
add
inc
push
outsb
add
add
add
xor
add
roll
add
in
cmp
add
add
add
int
add
mov
inc
add
add
testb
add
add
xor
cmp
add
add
dec
add
add
nop
add
add
inc
xor
add
sub
add
add
xor
xor
add
add
push
xor
add
add
lcall
cmp
xor
add
xor
add
mov
add
add
xor
add
add
add
fnstenv
cmp
add
add
add
cmp
add
add
aaa
add
lea
add
add
insl
add
add
das
cmp
add
add
cmp
add
imul
xor
add
leave
add
add
pop
push
add
dec
or
add
add
add
add
add
sbb
add
add
add
add
add
add
inc
add
inc
add
add
or
push
add
add
add
sub
add
add
add
pop
dec
push
add
mov
lahf
dec
add
push
mov
lds
dec
add
add
add
dec
push
add
add
add
dec
add
cmp
add
add
flds
add
add
inc
add
add
add
sub
add
add
add
mov
add
add
add
scas
dec
add
dec
and
jmp
inc
add
add
add
scas
push
inc
add
add
add
mov
outsl
add
add
test
and
add
add
incb
add
add
outsl
add
add
add
mov
or
add
add
insl
add
leave
add
add
and
push
add
add
add
cltd
ja
add
add
add
loop
imul
add
into
jae
add
add
add
repz
popa
add
add
add
add
add
add
cwtl
jne
add
add
add
out
imul
add
out
add
add
xchg
add
add
add
xor
add
add
popa
je
add
add
add
pop
pop
add
add
mov
inc
add
addl
add
pop
je
add
add
add
pop
popa
dec
add
add
add
mov
add
pop
pop
add
add
pop
xor
add
jmp
adc
cmp
aaa
dec
add
add
ret
add
lea
add
add
add
xor
add
add
lds
add
out
add
add
add
or
add
add
add
pop
add
add
jmp
add
add
mov
movsl
add
add
mov
mov
push
js
add
add
xor
add
sbb
add
add
xor
cs
add
add
xor
xor
add
add
pushf
add
add
xchg
add
add
xor
xor
add
add
int
xor
xor
add
add
rolb
add
xor
add
add
xor
add
add
add
mov
shll
add
cli
add
add
sbb
xor
xor
add
add
add
add
add
jecxz
add
add
addb
add
add
add
xor
add
add
add
inc
add
add
bound
xor
xor
add
add
mov
xor
xor
add
add
rdtsc
add
push
add
add
sub
xor
add
add
add
jno
xor
ss
add
add
add
mov
add
add
cs
add
add
add
repz
add
fiadds
add
add
add
add
aas
add
add
adc
xor
cmp
pop
xor
add
adc
add
add
cmp
add
add
add
add
add
add
incl
add
add
outsb
add
add
test
push
sbb
add
lea
add
add
xchg
add
add
add
add
dec
add
add
dec
xor
add
add
lods
xor
mov
add
add
pop
add
add
sbb
add
jb
add
add
addl
add
xchg
xor
roll
add
mov
add
add
add
flds
xor
cs
push
cli
add
add
jne
add
add
int3
xor
add
add
xor
cs
add
add
sbb
cmp
xor
add
add
js
xor
cs
add
add
xor
add
mov
add
add
add
add
test
xor
ss
leave
aaa
xor
xchg
add
add
movsl
add
add
add
cmp
cs
mov
std
add
add
sbb
xor
xor
add
add
sbb
add
xor
add
add
xor
xor
add
add
add
add
pop
xor
add
push
add
add
adc
xor
xor
xor
add
loopne
add
add
popf
add
add
adc
cmp
xor
add
add
xorl
add
add
fdivl
xor
xor
add
add
sub
aaa
add
add
add
sub
xor
cs
add
add
mov
xor
add
add
xor
sub
add
add
int
add
add
add
add
add
xor
add
pushf
add
add
jl
add
add
xor
add
push
add
add
loopne
xor
add
add
add
test
add
lahf
add
add
cmpsl
xor
add
add
xor
add
xchg
add
add
movb
add
xor
cmp
xor
add
add
aaa
xor
roll
add
add
cmp
ja
xor
xor
add
add
add
inc
add
add
sbb
xor
cs
add
add
leave
xor
add
testb
add
js
xor
xor
add
add
xor
cmp
xor
add
add
movsl
cmp
add
aas
add
add
jp
xor
xor
add
add
xor
mov
add
add
add
incb
add
add
stos
add
add
cmp
add
movsb
add
add
lea
cmp
xor
add
xor
add
add
cmp
xor
add
add
xor
cmp
add
add
xor
ss
lods
add
add
cmp
add
add
add
add
lods
xor
add
push
add
add
lahf
cs
add
add
mov
add
add
xor
add
add
xor
add
add
add
sub
add
add
add
add
add
je
xor
cmp
add
add
fdivl
aaa
add
xlat
add
add
ret
add
mov
add
add
xor
cmp
add
add
pop
ss
add
add
add
mov
xor
xor
add
add
add
add
mov
add
add
cs
add
add
test
add
add
add
add
add
js
xor
flds
add
add
xor
cs
add
add
add
sbb
add
add
xor
cs
add
add
cmp
add
add
add
sub
add
inc
add
add
push
cmp
add
ret
add
add
shlb
xor
xor
jmp
push
add
add
dec
xor
add
iret
add
add
pop
xor
add
fwait
add
add
jno
xor
xor
add
add
das
ss
add
loope
add
add
xor
xor
xor
xor
add
add
xor
add
sub
add
add
xor
xor
add
add
pop
xor
add
rolb
add
add
add
xor
add
add
xor
add
add
jo
xor
xor
add
add
repnz
add
push
add
add
add
xor
cmp
add
add
xor
jne,pn
add
add
add
lahf
add
add
inc
xor
xor
add
add
in
xor
add
xchg
add
add
cld
xor
xor
add
xor
add
adc
add
add
cmp
add
mov
add
add
ret
add
xor
add
add
popa
add
add
jecxz
xor
xor
add
add
add
add
add
xor
add
inc
cmp
add
add
add
clc
add
add
fiadds
add
add
xor
aaa
or
add
add
xor
add
hlt
add
add
shlb
add
xor
pusha
xor
add
lret
add
sahf
xor
add
add
add
mov
pop
add
add
push
xor
add
xchg
add
add
cmpsl
xor
add
incl
add
add
add
xor
add
add
xor
add
in
add
add
out
add
xor
and
add
add
add
add
push
sbb
add
add
fdivrl
xor
cmp
add
add
arpl
xor
addb
add
lods
xor
add
inc
add
add
movsl
add
add
inc
add
add
and
add
out
add
add
lret
add
add
add
add
in
add
add
push
xor
add
or
add
add
xor
add
mov
repz
add
pop
add
add
divb
add
add
push
xor
xor
add
add
jp
add
xor
add
add
xor
xor
add
add
dec
xor
add
out
add
add
xor
xor
add
add
and
add
lock
add
pop
add
add
ret
add
add
js
xor
add
add
add
stos
xor
add
arpl
add
add
xor
add
addl
add
stos
add
add
add
add
xor
xor
xor
add
xor
xor
add
add
add
mov
add
add
add
add
lahf
add
add
mov
xchg
add
add
add
add
add
add
enter
xor
add
add
insb
add
add
test
add
add
xor
add
testl
aaa
add
push
add
add
stc
xor
add
cmp
add
add
xor
cmp
add
add
sbb
icebp
add
add
rolb
xor
cs
add
add
cmc
xor
add
add
aaa
add
add
in
add
or
add
add
xchg
add
add
in
xor
add
fldl
add
add
push
add
add
flds
add
ss
add
add
or
roll
add
mov
cmp
add
lret
add
test
add
add
inc
add
add
sbb
xor
cs
add
add
dec
xor
add
add
add
popl
xor
add
add
xor
add
add
rorb
add
add
add
dec
xor
add
add
add
jo
push
add
add
add
xor
add
imul
add
xlat
xor
add
popl
add
add
add
xor
add
add
xor
add
faddl
add
add
loope
add
add
push
inc
add
insl
add
add
xor
add
cmp
add
add
int
add
add
xor
add
xor
add
add
xor
add
add
push
dec
inc
add
add
add
sbb
xor
add
add
test
add
add
add
add
or
and
cmp
lock
add
movsb
push
push
add
into
add
add
and
xor
add
add
inc
add
add
add
fadds
add
add
add
stc
push
push
add
test
add
add
jle
add
add
xor
add
adc
add
add
leave
add
add
mov
push
mov
add
add
add
imulb
add
add
add
or
add
push
add
jo
add
imul
add
das
outsl
add
add
add
popf
jb
add
add
add
pop
je
add
add
add
out
das
data16
add
add
subb
das
ret
add
sub
add
add
add
stc
cmp
add
add
clc
xor
add
jmp
fiadds
add
inc
jp
add
add
jne
add
add
add
bound
add
and
add
add
scas
add
add
xchg
popa
jae
and
add
add
add
add
inc
add
inc
add
add
in
jb
add
dec
xor
add
add
add
add
add
add
add
jle
add
and
add
add
xor
add
add
xor
add
add
mov
addb
xor
add
add
addl
cmp
add
add
cmp
add
pop
inc
add
xchg
add
add
xchg
add
add
add
mov
add
add
add
inc
add
pop
add
add
addb
mov
add
add
scas
add
add
xchg
bound
add
add
add
outsb
add
loop
add
add
add
imul
add
add
pop
add
sub
add
add
pop
add
add
imul
add
add
mov
insl
add
add
lods
add
add
sbb
lcall
dec
add
jnp
add
add
add
lea
add
add
add
add
add
add
pushf
pop
add
sub
add
add
and
add
add
sub
add
add
mov
or
add
add
pop
add
es
add
add
sahf
add
add
add
test
add
add
add
aaa
add
add
add
add
rolb
add
add
add
add
cmpsl
add
add
sub
add
add
add
ret
add
add
add
add
out
push
add
rcrl
or
roll
add
add
add
jns
add
jae
add
add
testb
add
add
add
pusha
jno
add
mov
add
add
add
add
dec
add
add
mov
add
ja
add
add
test
js
add
cmp
add
add
inc
add
add
ja
add
xor
add
add
test
xor
add
add
add
add
mov
add
xchg
add
add
mov
add
add
popf
inc
push
add
add
add
push
inc
add
add
add
cltd
add
ljmp
outsl
add
add
add
and
add
add
add
pop
jo
jb
add
add
add
add
add
add
lret
add
add
add
decl
outsb
scas
add
add
dec
inc
add
add
add
mov
push
add
add
add
add
add
jnp
je
je
add
add
cmp
add
arpl
xor
add
add
add
jmp
mov
add
add
jb
add
add
add
lcall
je
insb
mov
xor
add
add
push
add
inc
add
cmp
add
push
sub
sub
sub
sub
xor
add
xchg
inc
xor
pop
jg
jo
outsl
or
movsl
xor
add
add
add
or
testb
test
mov
add
cltd
add
pop
jnp
add
pop
add
ds
mov
jecxz
add
dec
add
add
sub
jne
add
add
add
cmp
add
add
add
add
xchg
push
inc
add
roll
mov
outsb
add
add
add
cmp
ja
imul
add
je
add
insb
add
xor
add
popa
arpl
insb
fs
add
add
add
add
add
add
inc
add
pop
push
add
aam
sub
mov
adc
pushw
add
mov
or
inc
dec
decl
in
movl
xchg
jp
add
addl
ret
push
add
into
adcl
push
push
push
add
fwait
lock
push
push
jne
push
push
mov
clc
pop
mov
add
cld
pop
add
jge
adc
add
add
add
lock
add
mov
add
adc
mov
mov
cld
sti
cld
add
push
mov
add
xlat
jne
stc
inc
push
add
push
clc
add
mov
add
dec
jne
add
pop
push
push
add
jecxz
xor
mov
cld
daa
jmp
mov
adc
hlt
lea
cld
pop
push
push
add
jne
clc
xlat
add
cld
movb
sbb
addl
or
push
add
cld
add
add
dec
hlt
add
push
das
push
clc
add
or
dec
mov
je
add
and
pop
push
or
hlt
lea
cld
rcll
mov
adc
add
clc
xlat
add
cld
movb
sub
jmp
push
mov
push
add
push
adc
pop
pop
add
push
inc
xor
add
cmpl
sbb
bswap
add
mov
add
rclb
xor
pop
mov
stc
mov
shll
add
ret
push
dec
dec
add
jmp
jne
jmp
data16
data16
add
or
add
mov
leave
mov
add
out
xor
leave
sbb
sub
add
addr16
add
addl
push
data16
mov
and
mov
lcall
add
jns
sub
add
pcmpgtb
je
add
je
addl
cltd
cmpsl
add
add
repz
add
add
add
add
iretw
andl
push
cmp
stc
add
or
add
mov
leave
jne
push
push
add
or
mov
add
addl
add
andl
push
jg
stc
add
or
add
mov
leave
int
push
push
add
arpl
incl
or
xorl
jle
mov
pushf
adc
add
aaa
inc
iret
add
mov
add
add
cmp
cmpl
andl
push
push
data16
add
or
add
mov
leave
and
add
lods
add
nop
stc
incl
cmp
inc
aam
movl
add
and
dec
data16
test
leave
test
jmp
push
add
add
sbb
divb
jne
js
add
gs
add
gs
add
mov
les
add
adc
aad
movl
add
int3
xor
add
add
jne
incl
enter
add
icebp
mov
add
mov
inc
mov
testl
add
rolb
inc
add
jne
add
jne
cld
adc
data16
std
jne
add
enter
pop
sti
leave
add
push
inc
mov
incl
or
faddl
add
add
pop
add
inc
insb
lock
cmp
add
fcoml
add
add
add
scas
xor
push
add
ljmp
dec
add
add
add
lock
dec
add
add
incl
lock
or
adc
xor
ror
or
iret
in
push
add
in
add
pop
push
jne
mov
enter
jne
clc
adc
mov
in
dec
adc
add
jns
push
mov
clc
roll
dec
sbb
add
xlat
mov
add
add
inc
int3
cld
inc
add
add
push
flds
dec
adc
push
add
decl
add
push
lods
push
decl
add
push
adc
push
add
jne
add
js
add
sbb
xchg
loopne
add
jl
add
pop
add
xchg
ret
jl
and
add
nop
jg
add
add
sub
push
add
call
icebp
add
incl
loopne
add
push
call
xor
add
stc
test
add
lods
aaa
or
call
mov
mov
mov
jmp
add
or
decl
mov
mov
or
lea
lea
add
mov
shr
repz
movsl
enter
add
add
add
add
or
lods
add
adc
pop
add
mov
lcall
lods
add
jp
inc
add
mov
mov
add
mov
mov
or
lea
add
leave
mov
add
fdivp
mov
cmpl
repz
push
xor
call
mov
add
mov
mov
add
xor
int3
xor
or
mov
mov
add
call
mov
add
sbb
add
imul
add
cmp
lea
mov
sar
repz
repz
movsb
mov
add
jo
call
mov
mov
pop
mov
mov
add
incl
popf
sbb
mov
add
sbb
add
add
mov
or
add
add
add
add
mov
add
movsl
nop
mov
push
pop
sahf
xor
mov
repz
push
mov
push
inc
stos
add
pop
ss
ret
add
lret
or
adc
inc
add
push
call
add
stc
out
inc
add
or
add
rolb
add
mov
push
add
push
add
stc
incl
cmp
in
inc
add
mov
mov
add
add
cmp
push
push
sahf
push
push
mov
push
inc
add
mov
ret
sub
add
jle
data16
cs
add
add
push
push
jbe
data16
add
cmp
call
sub
and
jl
and
add
push
push
push
pop
decl
call
xor
inc
fdivrs
and
mov
je
add
add
adc
add
cmp
add
pop
add
add
xchg
je
add
adc
xor
incl
test
shlb
sarb
add
push
movsb
add
add
add
sub
add
add
data16
mov
inc
add
jge
pop
add
push
int
call
add
add
push
add
add
jnp
movl
add
das
add
add
add
cwtl
add
add
cwtl
add
stos
add
add
dec
add
movl
add
or
add
add
add
sbb
call
mov
mov
mov
mov
add
call
mov
or
mov
mov
mov
dec
mov
mov
lea
or
add
add
add
xchg
add
add
movsb
jne
or
add
adc
mov
or
add
add
pop
add
ljmp
test
mov
mov
or
add
add
mov
jp
mov
mov
add
lea
mov
shll
repz
repz
movsb
nop
add
xchg
pop
add
cmp
jl
icebp
pop
add
call
pop
in
xor
cmp
insb
add
insb
dec
and
add
sub
inc
je
add
lret
add
fisttps
add
xchg
xlat
std
incl
incl
mov
push
push
add
mov
mov
push
add
push
add
adc
add
sub
add
add
lea
and
inc
incl
cmp
adc
add
pop
lea
and
adc
add
mov
ljmp
adc
add
test
aaa
inc
adc
movl
jecxz
pop
add
testl
xchg
or
mov
and
or
add
pushl
add
add
je
cmp
or
test
add
out
add
incl
test
nop
and
add
jl
add
xor
call
adc
lcall
adc
mov
cwtl
pop
or
or
faddl
add
mov
add
add
add
jne
imul
add
je
add
sbb
add
incl
sbb
adc
add
movsl
mov
pmullw
add
add
xor
incl
ljmp
pushf
add
jge
test
add
pop
xor
decl
push
add
cmp
add
pop
add
add
clc
xchg
add
mov
xor
add
push
xchg
push
je
push
jmp
add
add
incl
sbb
adc
add
lahf
mov
minps
add
pop
add
add
add
add
pop
cmp
pop
mov
inc
push
add
gs
add
cmpsl
add
add
add
adc
cmp
mov
loope
push
jmp
xor
lcall
add
das
add
add
mov
jmp
adc
cmp
add
mov
sub
sub
test
add
add
sbb
sub
add
add
lods
inc
je
add
dec
and
add
push
adc
incl
and
je
add
loope
xor
inc
xor
push
add
insb
add
add
prefetcht0
push
incl
add
scas
lea
push
fistl
add
out
lea
and
xor
add
sbb
add
push
add
sahf
push
incl
test
or
aam
add
dec
mov
mov
and
xor
add
mov
and
cmp
add
pop
fmuls
incl
adc
scas
and
add
sbb
mov
mov
lea
add
and
add
mov
add
cmpsl
cmp
roll
or
xor
call
push
lcall
or
cmp
mov
loop
push
add
add
rolb
je
push
push
cld
je
jl
inc
add
jo
add
dec
jmp
jmp
or
cmp
mov
inc
je
sbb
push
add
fdivrl
mov
je
push
push
cld
je
jl
incl
and
jo
add
lahf
add
jle
ret
sub
str
add
add
push
add
into
add
arpl
test
add
add
add
sti
mov
je
sbb
add
cltd
lds
dec
imul
push
push
add
jl
add
addl
add
pop
jle
add
inc
add
add
fidivrs
mov
and
je
add
fs
add
in
adc
add
je
add
addl
add
mov
rorl
and
movsl
faddl
add
je
and
add
hlt
cmp
sbb
cld
or
add
out
mov
je
add
adc
push
decl
jl
rcll
and
subl
add
push
dec
xor
cmp
mov
inc
je
sbb
mov
popf
add
add
add
push
cld
je
jl
ljmp
add
jb
add
xlat
xor
sbb
add
rcl
lds
inc
stos
adc
add
mov
add
push
push
add
loopne
or
je
push
lock
and
push
fsubrl
add
ds
add
rorb
push
in
add
jmp
shrl
xor
push
push
je
xor
jmp
push
incl
add
push
add
add
int
mov
mov
je
add
mov
push
xor
add
xor
add
inc
add
xor
add
add
popa
xor
jmp
mov
or
stos
sbb
das
add
mov
daa
add
add
testl
sub
mov
push
add
push
rolb
iret
mov
xchg
push
add
push
xor
incl
add
cwtl
add
es
add
xor
add
add
jbe
fldcw
add
imul
or
adc
add
or
sbb
das
add
ret
add
incl
mov
imull
rolb
cmp
push
add
pushl
rolb
xor
xchg
push
add
or
pop
incl
add
cmc
add
add
xchg
call
pushl
inc
add
stc
add
add
jne
add
add
add
nop
or
add
add
push
add
inc
add
add
cmp
add
add
add
adc
add
call
adc
jmp
add
push
add
call
adc
add
out
jl
add
dec
add
add
les
ret
mov
call
addl
add
push
add
xor
add
sbb
add
push
incl
mov
rep
stos
add
rolb
leave
call
stos
test
std
idiv
push
add
adc
add
add
xor
std
add
xchg
add
addl
add
icebp
add
add
aad
add
inc
sub
lcall
mov
call
subl
jo
add
call
lahf
add
add
jne
add
ljmp
or
je
or
add
add
incl
sarb
add
add
sub
inc
add
cld
adc
cmp
mov
inc
jne
push
fcoms
add
or
add
adc
add
jo
add
jge
or
add
in
movsl
sub
add
in
add
push
xchg
decl
jne
or
inc
add
in
push
add
fldl
add
push
add
push
xor
adc
xlat
pop
test
push
outsb
push
add
adc
add
or
add
dec
or
add
test
punpckhdq
jne
cmp
rolb
jmp
mov
or
jne
add
lock
add
xor
jne
je
or
incl
adc
push
add
hlt
incl
push
push
xor
incl
insb
lea
add
shrb
add
clc
add
ret
call
adc
mov
ret
add
sti
add
add
lea
outsb
add
add
jb
add
std
ljmp
add
cld
push
add
mov
push
push
add
stos
add
add
add
jo
adc
add
mov
js
or
testb
sub
out
add
in
pusha
add
iret
add
xor
ljmp
filds
xor
mov
incl
push
or
add
bound
push
add
rclb
mov
rolb
fnstcw
add
test
rclb
inc
les
filds
add
add
add
add
pop
idiv
add
push
inc
add
lcall
sbb
rolb
enter
mov
adc
add
sbb
je
int3
dec
push
add
test
test
add
popf
incb
add
xor
cmp
mov
add
cld
ret
xor
lahf
fildl
add
xor
pushl
adc
mov
add
test
add
add
call
adc
add
lock
sub
jge
rolb
add
add
bound
cmp
int3
iret
je
add
sbb
mov
mov
mov
add
cs
push
add
int3
incl
push
outsl
adc
add
xchg
je
add
in
push
xor
incl
test
or
dec
add
test
adc
inc
pop
int3
incl
dec
lret
add
int3
incl
inc
or
dec
push
inc
add
lcall
cmp
rolb
mov
incl
call
incl
fcompl
xor
adc
push
push
sub
add
call
xor
inc
inc
mov
add
fs
pop
add
and
mov
and
or
add
push
xchg
addb
pop
push
incl
and
sbb
add
jmp
fnstenv
add
inc
adc
adcl
shlb
cmp
ja
add
add
orb
pop
mov
pop
addr16
mov
adc
mov
je
adc
clc
data16
add
testb
jne
mov
jmp
or
add
idivl
je
sub
or
ret
push
add
test
push
push
push
push
add
test
je
dec
mov
add
sub
mov
add
push
jle
xchg
add
jg
incl
fdivs
add
shlb
add
add
jne
lea
add
add
pop
add
add
fimuls
rcrb
orb
add
add
add
pop
mov
add
jge
mov
add
add
xor
ret
push
add
test
push
hlt
je
add
adc
add
out
push
call
orb
and
mov
aad
inc
add
mov
inc
sbb
add
mov
pop
add
jp
pop
add
lahf
adc
leave
add
scas
mov
test
xor
orl
clc
addl
add
test
rolb
add
jmp
pop
adc
or
mov
add
jno
xor
ret
push
add
repnz
shrb
jge
add
decl
mov
rcl
mov
add
test
add
or
lock
push
inc
add
shr
or
push
sbb
push
add
xchg
divb
mov
sub
add
inc
mov
add
mov
add
mov
pushf
add
incb
pop
add
andl
jne
push
stos
push
jne
call
jmp
mov
add
add
add
add
andb
movb
add
push
pop
add
push
inc
add
mov
add
mov
jne
add
add
call
mov
cld
lret
add
or
add
push
add
mov
mov
dec
mov
cld
leave
mov
add
mov
shr
repz
enter
add
add
roll
add
add
add
dec
jo
add
fiadds
mov
cld
cmpsl
mov
pop
addl
mov
mov
add
decl
or
lea
add
add
mov
add
adcl
add
add
cld
add
or
add
xor
jne
call
xor
rolb
dec
add
add
iret
ret
mov
in
push
add
or
add
xor
add
lcall
or
add
mov
cltd
cmp
add
and
add
sub
je
sbb
push
or
add
flds
call
mov
push
nop
push
mov
add
inc
add
push
push
pop
add
xor
push
add
cwtl
clc
dec
add
pop
add
pushf
jmp
add
mov
inc
call
push
add
add
add
push
ds
push
call
push
add
dec
cld
add
jne
cld
roll
add
call
xor
inc
jmp
add
pop
leave
add
add
push
add
or
add
mov
mov
cld
pop
lfs
add
jne
cmova
adc
mov
addl
add
sbb
sub
je
dec
dec
dec
jbe
push
mov
adc
add
push
mov
add
push
add
or
int
push
add
cld
in
add
out
add
cmp
push
add
pushf
add
push
cmc
call
push
push
push
add
push
call
push
push
push
add
cld
add
mov
add
mov
cld
add
cltd
loop
add
push
rolb
filds
call
incl
cld
jge
sti
add
xor
add
jbe
rolb
mov
rolb
sub
add
push
mov
add
adc
fiadds
insl
stos
cmp
je
addr16
add
dec
cmp
push
addb
add
add
add
dec
add
mov
push
push
add
out
pop
add
push
call
add
add
sbb
add
push
hlt
mov
add
aas
add
adc
inc
add
enter
add
notb
add
add
jbe
sti
add
call
xor
jmp
xor
rcrb
testl
pop
add
push
lldt
sbb
add
insb
mov
cmp
sysexit
test
add
cmp
jns
mov
or
lcall
adc
je
dec
inc
dec
add
jne
pop
adc
inc
insb
decl
test
add
add
push
jmp
pop
popf
add
incl
jne
push
adc
add
xlat
mov
add
xor
add
add
push
push
push
add
call
clc
lea
add
je
add
mov
add
pop
incl
fsub
adc
add
mov
pushf
xchg
add
add
and
dec
jne
cmp
cltd
add
add
les
add
jne
je
push
imul
add
pop
test
add
cmp
inc
push
mov
cmp
mov
add
dec
push
mov
add
add
add
add
add
ret
push
xchg
add
mov
movl
adc
jmp
push
jno
and
call
jmp
add
add
pop
ret
mov
add
push
mov
or
xor
add
ret
jne
shld
or
test
sbb
fildl
add
aaa
push
call
test
add
inc
arpl
addb
outsb
add
je
dec
sti
dec
or
jne
push
push
add
push
adc
add
inc
push
push
push
add
and
in
adc
add
loop
add
mov
addl
clc
add
add
push
push
in
add
sub
cmpsl
add
fcos
cld
add
imul
add
divl
add
mov
push
add
cld
jg
add
add
add
repz
add
pop
ret
push
push
in
add
push
mov
or
adc
jne
cmovnp
or
test
movsb
add
cmp
add
add
jecxz
cmp
add
flds
add
inc
push
adc
sub
je
dec
test
arpl
test
rolb
push
jmp
add
fadds
add
call
push
push
push
add
sub
add
mov
cld
jp
cmp
add
push
add
xchg
add
jmp
push
push
add
pop
adc
add
mov
add
push
inc
mov
add
call
push
popa
call
cld
add
rclb
shl
pop
add
adc
push
add
xor
incb
jne
cld
test
add
cmp
or
add
mov
jne
movsbl
call
test
punpckhbw
mov
add
sub
je
dec
je
dec
jae
js
push
xor
add
fwait
push
xchg
add
add
add
call
jmp
add
fadds
add
call
push
push
push
add
sbb
add
add
push
mov
cld
cmp
cmp
add
je
push
push
add
add
push
lds
add
dec
push
fadds
xor
push
push
mov
add
cmc
cmp
add
wbinvd
add
jnp
push
add
adc
add
call
incl
call
xor
inc
jp
xor
pop
es
leave
add
add
push
add
or
add
inc
cmp
ret
mov
jne
bswap
test
add
call
xor
aaa
dec
add
fwait
add
add
mov
inc
mov
pushf
and
add
lods
or
add
dec
insb
dec
sbb
jne
js
add
add
call
mov
fcoms
sub
inc
push
push
push
add
push
shrb
add
xor
add
add
push
mov
aaa
add
jne
cld
int
push
mov
mov
pusha
add
cltd
add
and
adc
fcoms
add
add
cld
cmp
add
call
incl
cld
mov
sub
jecxz
incl
cld
mov
test
inc
add
pop
xor
pop
in
or
push
jg
push
add
xor
add
loopne
cmp
or
je
add
push
adc
add
mov
xor
add
push
decl
add
aad
mov
clc
cmc
mov
add
adcl
push
incl
xchg
inc
je
call
inc
mov
cld
mov
shr
add
cld
incl
or
lcall
pop
jno
or
and
add
je
inc
inc
add
jl
je
push
sbb
add
add
adc
add
add
push
jmp
incl
push
add
add
add
incl
mov
lahf
test
pop
xlat
pop
or
push
movsb
mov
test
mov
cmp
mov
test
add
add
mov
push
add
push
xchg
adc
inc
add
push
dec
call
push
push
pop
decl
jne
pop
sbbb
or
jl
add
add
inc
shll
mov
xchg
mov
inc
je
add
mov
xchg
add
out
add
add
sbb
push
add
inc
or
add
je
and
add
push
push
add
out
add
mov
mov
add
add
daa
jne
add
push
or
push
dec
je
add
mov
in
push
add
add
incl
push
add
add
add
pop
pop
ret
das
push
push
add
je
and
add
lret
add
out
mov
add
pop
add
clc
aam
add
add
push
add
xchg
decl
push
jmp
add
add
sub
add
ret
push
loop
sahf
add
xchg
je
adc
xor
add
cmpsl
adc
add
push
mov
and
add
pushl
push
or
add
add
add
lret
fadds
pop
das
mov
add
add
testb
jno
add
rolb
add
data16
add
add
or
incl
push
vmaxsd
ret
mov
hlt
ljmp
mov
xchg
arpl
add
adc
mov
add
iret
add
add
cwtl
jne
add
mov
ret
stos
push
testb
insl
and
add
pop
sarb
mov
cmp
jmp
add
mov
and
lea
add
add
push
adc
test
pop
dec
pop
adc
mov
mov
add
mov
test
dec
add
dec
pop
ret
adc
testb
xor
cmp
mov
cmp
jmp
add
jo
and
push
mov
fadds
add
add
je
add
idivb
stos
add
add
mov
adc
add
push
mov
in
add
add
cwtl
push
add
inc
pushf
cwtl
add
add
pushf
add
or
movl
add
mov
mov
inc
add
rolb
add
lods
push
add
aam
mov
add
add
add
hlt
inc
xor
add
push
push
add
inc
fadd
add
add
les
push
pop
add
add
mov
add
fldl
add
push
add
aaa
mov
cld
aam
add
jmp
fadds
add
movl
add
je
cmp
add
add
call
inc
call
in
add
lock
add
lcall
inc
add
add
add
cld
adc
add
add
enter
scas
inc
add
mov
xchg
adc
adc
add
inc
adc
adc
sbb
inc
mov
add
inc
add
add
add
and
add
xor
sub
add
add
mov
inc
inc
add
test
xor
cmp
add
cmp
cmp
adc
inc
clc
inc
add
insl
inc
mov
add
add
inc
daa
add
add
dec
adc
push
add
loopne
movl
add
loop
dec
add
testl
adc
pusha
add
add
add
push
repz
pusha
add
addb
add
add
add
popf
jl
je
cmc
incl
fcomps
cmp
add
sbbl
pop
xor
lds
test
cmc
add
mov
hlt
add
sbb
adc
mov
nop
add
cmp
add
or
stos
add
add
std
ret
mov
testl
add
incl
popw
addl
dec
call
mov
xor
add
mov
lea
inc
repz
fcmovb
lret
addb
add
xlat
stos
stos
add
into
or
add
jl
jne
cmp
call
test
incl
push
push
call
add
jmp
jne
ret
test
add
xchg
push
test
loopne
call
jne
or
pop
add
pop
ret
rclb
cmp
jle
das
inc
add
lea
mov
push
add
pop
xor
int
data16
jne
add
add
add
add
cmp
dec
or
inc
aaa
dec
data16
inc
or
add
add
inc
add
rol
add
mov
in
in
add
xchg
mov
add
cwtl
add
add
push
add
add
jg
inc
add
push
add
inc
pop
add
add
lods
add
add
xchg
add
add
jp
dec
add
imul
add
add
add
rolb
add
mov
movl
add
popl
add
and
inc
add
add
add
aam
add
pop
fadds
add
adc
add
inc
push
add
incl
inc
add
add
inc
mov
or
in
add
mov
push
add
adc
add
insb
add
pop
and
add
inc
mov
xorl
cwtl
or
sub
jl
xor
rol
add
xor
notl
push
in
add
lret
adc
sub
push
cli
mov
add
call
mov
test
add
push
push
mov
faddl
add
add
add
add
add
prefetch
add
mov
je
loopne
add
add
add
addl
push
add
add
lcall
adc
jne
adc
add
fldl
jne
decl
adc
add
xor
add
push
add
xor
cmp
jne
pop
call
or
test
add
add
mov
addl
sub
lock
cld
inc
adc
add
add
add
xbegin
adc
push
add
mov
adc
pop
add
adc
add
lahf
jne
add
call
cli
pop
leave
add
repnz
push
add
push
hlt
jne
ljmp
pop
cmp
je
add
lods
add
dec
inc
push
add
or
push
lea
push
add
add
mov
hlt
sub
cld
add
insb
sub
dec
ret
clc
dec
add
mov
ror
jne
dec
jne
add
cli
adc
add
jnp
leave
add
add
mov
or
adc
sbb
sub
out
incl
fadds
add
adc
jmp
add
add
add
push
add
iret
adcl
cld
pop
push
add
cmc
shl
jne
lock
stos
les
adc
adc
mov
or
add
jne
push
flds
add
call
add
and
push
add
push
rdpmc
add
mov
repz
mov
push
incl
mov
add
add
push
add
into
jne
add
jb
lock
jns
adc
add
lea
addb
lds
pop
add
mov
add
mov
add
jg
pop
xchg
mov
pop
lea
adc
push
jne
call
incl
or
cmpsl
pop
push
add
push
orl
je
add
ret
jg
push
xor
add
dec
call
pop
cmp
ret
icebp
push
in
add
jge
or
push
jne
call
test
jl
adc
mov
inc
sub
push
lea
call
pop
dec
pop
ret
mov
xor
push
add
test
inc
xor
add
mov
ret
in
adc
add
push
add
or
mov
inc
test
jne
repz
dec
rcll
dec
add
call
pop
or
push
stos
mov
push
add
cmp
or
mov
add
jge
imul
and
test
inc
sbb
push
push
add
divl
incl
insl
add
jnp
mov
push
push
mov
call
addl
dec
add
add
or
add
sbb
push
push
pop
call
adcl
out
sub
inc
insl
decl
flds
sbb
stos
mov
lods
jne
add
add
add
sahf
add
add
mov
jne
add
inc
pop
and
mov
adc
mov
cmp
mov
add
dec
rcrb
dec
ret
mov
je
add
popf
je
add
test
je
cmp
add
bound
call
test
rolb
push
test
into
lea
or
leave
lret
jne
add
inc
adc
add
adc
add
push
mov
js
pop
test
mov
push
push
fildl
pop
xchg
pop
add
hlt
add
add
test
add
jbe
or
test
mov
add
lea
cld
and
add
ret
add
pusha
and
add
add
addb
flds
add
add
clc
mov
or
add
push
add
cld
add
push
je
add
mov
add
add
add
inc
add
add
add
jne
or
add
push
add
lcall
dec
rclb
jne
cld
xor
incl
decl
incl
jmp
insb
add
inc
cmp
push
push
push
push
clc
add
fiaddl
adc
add
cld
xlat
add
lock
clc
add
rorl
cmp
mov
jmp
daa
jge
jne
sbb
add
enter
insl
jne
add
add
mov
hlt
mov
or
andl
mov
cmp
mov
cmpl
add
pop
leave
add
add
push
jmp
adc
adc
mov
cmp
push
add
add
xor
call
mov
add
add
push
mov
add
push
mov
add
add
subl
clc
je
push
shrl
add
push
add
sbb
cltd
add
xlat
jecxz
mov
add
testb
pop
mov
sti
add
ja
add
push
cmp
or
jmp
sub
add
sti
push
jmp
add
lcall
add
jmp
adc
or
test
add
add
scas
jmp
add
push
adc
repz
cli
jmp
add
add
add
sbbl
add
mov
dec
nop
add
add
lock
add
add
sarb
add
dec
addl
add
test
dec
add
jp
add
push
jmp
mov
adc
testl
add
mov
add
out
cmp
mov
mov
clc
xor
inc
add
inc
add
mov
incl
push
mov
cmp
incl
mov
test
pop
out
pop
ret
sub
pop
add
xchg
test
pop
push
add
fwait
decl
sbb
adc
add
inc
add
add
fwait
push
add
add
add
push
pop
add
cmp
add
push
jmp
decl
adc
add
cld
add
inc
add
add
mov
xor
push
add
jne
test
add
add
add
dec
fadds
fstpt
movsbl
add
add
add
shl
incl
lock
test
add
xchg
mov
shrb
clc
jne
sbb
adc
and
and
push
call
jmp
push
sbb
incb
call
jmp
add
in
incl
out
push
call
mov
nop
mov
cmpsb
or
and
test
add
jmp
push
adc
add
jmp
add
insl
sub
and
fwait
sub
add
sbb
mov
pop
add
add
stos
add
jmp
add
add
add
jns
add
shlb
push
test
decl
or
add
and
push
add
pushf
pop
pop
add
popa
add
add
adc
push
add
jnp
add
cmpl
mov
mov
add
inc
xchg
add
sahf
adc
add
add
add
or
add
add
mov
rolb
les
add
call
test
push
add
pop
leave
ret
mov
in
in
add
xor
rorb
jge
add
sti
xchg
mov
add
hlt
pop
add
push
test
add
call
add
or
test
add
add
sbb
xor
lea
hlt
aas
call
add
or
stc
inc
push
add
cwtl
add
jne
cld
adc
cmp
mov
dec
mov
or
pmulhuw
add
add
outsw
mov
xorl
add
add
add
cmp
sbb
add
mov
dec
or
jl
fcomps
test
add
jno
clc
add
add
add
outsb
inc
add
push
cmp
lea
push
ret
add
inc
mov
add
jmp
mov
cld
mov
leave
add
push
test
jb
push
push
add
fucomp
repz
sub
or
add
lock
add
inc
cmp
mov
add
add
call
andl
push
add
mov
push
add
xor
inc
aaa
popa
add
jne
call
mov
push
sti
push
popl
add
repz
jno
into
add
mov
adc
jne
call
pushl
icebp
faddl
add
mov
in
addl
jo
mov
or
pusha
inc
push
add
fdivr
rolb
mov
cld
add
and
add
in
add
push
ds
test
addl
ljmp
ret
rcrb
push
add
or
add
test
jge
mov
je
roll
add
rolb
add
call
test
add
rcr
push
add
cld
filds
das
jno
add
add
bound
add
insl
push
add
push
add
push
add
mul
inc
or
adc
inc
add
jp
xor
pop
cmp
add
add
add
pop
hlt
mov
push
mov
out
push
jge
cmp
mov
je
lea
push
add
push
loope
push
inc
add
cmp
add
cmp
ja
pusha
testb
fdivr
xor
sar
add
in
cmp
cmp
add
xbegin
push
add
test
shlb
lahf
xorl
jle
cmp
cld
pop
jb
add
push
ret
je
xor
mov
push
shr
clc
add
xchg
xor
push
add
add
pop
jmp
add
pop
leave
add
add
push
cmp
and
add
add
je
and
add
add
faddl
add
add
add
pop
je
add
incl
add
je
or
add
jno
cld
add
cs
add
inc
add
and
adc
sbb
cld
push
roll
shlb
add
lock
add
add
push
xor
push
incl
and
sbb
add
sbb
add
add
xor
push
xor
add
cmp
add
shlb
add
push
mov
addl
inc
push
inc
add
decl
add
mov
sub
lock
xor
mov
cld
xor
hlt
add
or
add
jne
add
add
cmp
data16
push
mov
in
fsts
add
or
roll
mov
pop
add
pop
pop
add
dec
xor
jne
add
jne
hlt
add
xlat
xchg
add
add
addl
add
popf
jmp
add
das
loopne
add
or
adc
add
xorl
add
jne
or
add
stos
add
call
adc
pop
xor
inc
pop
pop
ret
fwait
push
mov
add
in
and
add
add
add
fnstenv
push
ja
faddl
add
rolb
fisttps
push
push
add
xor
rcrb
or
rolb
pushf
push
in
add
cmp
cmpl
add
cmovae
jge
test
incl
add
jmp
push
xchg
add
lds
je
aas
mov
add
mov
test
xor
sbb
jne
add
jnp
adc
mov
and
cmp
loopne
mov
adc
pop
cmovs
mov
push
push
add
adc
jne
mov
faddl
xchg
add
xchg
cmp
sbb
mov
xchg
add
add
or
je
mov
add
add
fidivs
add
add
mov
add
push
call
pop
leave
add
arpl
mov
adcl
jge
add
xor
add
push
sbb
add
dec
mov
add
push
mov
loopne
incl
jno
cmp
nop
or
add
adc
push
call
add
jmp
push
inc
push
jno
jmp
fadds
mov
mov
cmp
mov
inc
verr
out
setnp
add
add
str
call
call
mov
xor
in
loop
add
lea
mov
add
call
mov
add
xor
mov
or
lea
add
mov
mov
shl
repz
repz
movsb
jae
call
andl
sbb
add
add
add
add
add
mov
push
sbb
add
add
add
add
jbe
add
movsl
dec
mov
incl
cld
sbb
loope
add
cld
add
or
add
call
mov
stos
mov
mov
add
call
mov
add
xchg
mov
cld
add
lods
lea
mov
rorl
add
repz
inc
add
push
jo
add
mov
add
push
add
mov
inc
incl
add
call
mov
add
add
add
roll
add
cld
movsb
mov
jne
lock
or
add
add
cwtl
roll
movsl
fimull
addl
movsb
cmp
dec
add
jmp
add
cld
call
incl
orb
add
inc
cmp
xor
push
add
shll
add
inc
lods
in
add
cmp
add
add
add
clc
add
insl
out
incl
xor
lea
add
add
cld
lea
hlt
cmp
add
ret
add
push
add
sbb
repnz
pop
jmp
add
hlt
mov
ljmp
pushl
push
push
call
clc
add
rcr
add
add
or
inc
popa
repz
push
mov
push
xor
sarb
sahf
inc
stos
add
aaa
mov
add
popf
mov
xor
repz
add
mov
dec
mov
mov
stc
addl
add
add
fimuls
mov
stc
add
test
add
mov
add
inc
les
addl
pop
enter
sbb
push
push
decl
add
add
incl
rorl
add
outsl
add
add
xor
jne
push
jg
add
add
add
add
into
stos
add
add
test
add
push
lock
add
add
adc
push
incl
mov
in
movl
add
lret
gs
add
into
add
bound
add
mov
add
inc
jmp
mov
push
adc
addb
add
xor
incl
insb
lahf
adc
add
lock
test
jne
or
add
insb
add
add
jmp
pop
push
jo
decl
adc
push
in
add
enter
or
add
adc
decl
daa
push
add
ljmp
sbb
add
decl
push
add
or
add
hlt
inc
add
push
jne
add
cli
decl
add
add
add
test
fdivrp
incl
or
incl
in
xchg
push
add
inc
filds
add
cld
je
cmp
call
jmp
push
call
incl
mov
add
pop
or
add
xchg
add
add
and
data16
pusha
jge
stos
cmp
hlt
xor
adc
repnz
add
mov
sub
mov
push
add
push
jne
rep
inc
add
add
add
cmp
add
in
movl
add
mov
aas
push
jne
mov
mov
insb
xchg
in
incl
xchg
mov
test
jl
add
inc
stos
insb
push
add
xchg
add
add
push
pusha
add
in
add
add
dec
adcb
add
xchg
test
add
mov
sbb
add
push
push
add
push
push
add
ljmp
out
add
cmp
ja
lcall
jne
add
and
add
and
add
jne
push
mov
je
subps
add
add
add
lea
push
mov
xlat
push
inc
add
pushl
fistpl
add
or
add
lea
push
add
ja
incl
rclb
inc
add
push
push
inc
add
ljmp
pusha
sbb
add
add
add
add
add
pop
inc
add
lea
push
push
inc
add
call
bound
add
add
addl
mov
sub
test
add
add
cmpsb
add
fdivrp
movb
pop
lea
push
fadds
push
scas
add
push
decl
js
rolb
dec
pop
incl
repz
stos
stos
add
inc
lea
pop
cmc
incl
push
lahf
push
push
add
jp
jne
mov
add
add
roll
rorb
jmp
push
lret
add
ljmp
add
adc
movl
inc
add
lea
jno
call
test
jne
xor
lea
push
incl
dec
scas
push
incl
lea
push
js
call
pushl
push
shr
faddl
lcall
pushl
adc
incl
mov
je
cmp
movsb
incl
mov
mov
xchg
adc
add
lcall
mov
clc
je
cmpl
clc
jnp
add
add
jo
add
or
push
add
push
popf
ljmp
xchg
sbb
add
add
add
push
adc
enter
push
or
add
cli
adc
cmp
stos
je
add
iret
add
add
or
push
add
add
stos
sbb
int3
add
addl
add
ret
jne
add
xor
push
shrl
push
inc
add
pushl
gs
add
pop
add
test
add
add
mov
jge
movb
cltd
xor
add
movsl
add
add
cmpps
add
sbb
add
lea
call
adc
add
sets
add
add
lea
inc
push
add
dec
push
add
inc
add
lcall
call
add
nop
add
add
orl
add
imul
xor
sbb
stos
add
cmp
push
add
ret
push
add
jne
pop
inc
add
add
add
test
cmp
inc
jle
call
test
je
das
push
add
lock
add
pusha
dec
jne
push
sar
xor
mov
out
je
add
fsubl
jne
add
adc
add
inc
cmp
cmp
incl
jne
jo
add
in
mov
mov
add
add
jmp
pop
add
pop
pushl
jmp
adc
pop
pop
add
sub
add
mov
add
rcrb
push
add
test
leave
pop
add
push
mov
sub
mov
jne
out
hlt
add
and
mov
add
add
adc
test
push
ja
push
add
incl
add
dec
pushl
mov
call
ljmp
jl
call
test
mov
or
pusha
mov
mov
pop
add
add
push
mov
mov
je
adcl
push
add
push
add
xor
xchg
movsb
add
test
cmp
push
add
jbe
call
addl
jg
add
jne
or
call
pop
cs
pop
add
cmp
addl
add
aam
in
add
or
push
fcoms
add
push
rolb
cmp
insb
repz
or
orl
mov
add
packuswb
str
add
add
or
add
test
cld
call
add
add
pusha
add
add
xchg
add
cltd
add
jge
pop
add
jae
adc
add
pop
add
hlt
add
adc
add
and
mov
adc
xor
pop
add
arpl
adcl
add
push
or
imul
cmp
pop
push
add
mov
add
push
jle
add
dec
jne
add
fstpt
add
fs
adc
pop
movsl
mov
add
icebp
or
or
add
push
pusha
add
repz
add
jae
mov
stc
add
xor
clc
popf
add
std
enter
fbld
add
sldt
cwtl
cld
add
repz
add
add
sbb
add
push
add
jge
adc
add
adc
add
add
push
and
push
add
addl
incl
add
dec
push
jae
decl
adc
test
jecxz
inc
add
push
add
cmpsl
jae
add
mov
add
add
add
cmp
adc
cmovg
add
add
add
xor
movb
cmc
push
adc
push
push
add
push
add
add
xor
call
adc
call
add
add
add
xchg
xor
push
add
call
jmp
sbb
add
add
mov
add
jne
adc
incl
or
cmp
lock
add
xor
lldt
adc
add
mov
xor
mov
cld
jmp
mov
cmp
je
pop
incl
insb
xchg
adc
add
or
sub
add
je
push
push
jmp
cmp
mov
or
push
add
or
add
add
xor
incl
cwtl
mov
add
xor
jmp
mov
mov
or
push
cmp
test
shrl
push
add
adc
test
rcrb
imul
add
clc
mov
repz
lods
test
incl
mov
push
stc
cld
add
lcall
add
cmp
xchg
add
add
push
cmc
add
test
push
call
test
add
in
add
inc
dec
or
lea
test
add
mov
add
mov
add
cmp
test
inc
add
xor
add
adc
jmp
sub
rdtsc
test
add
rorb
add
sahf
add
sub
je
dec
enter
add
xor
sldt
shrb
or
add
cli
add
rolb
xor
jne
cmp
xor
pavgw
add
add
push
sar
xchg
add
repnz
dec
add
aaa
loopne
add
push
add
push
add
add
or
jl
add
xor
jmp
cmp
pop
xchg
push
jne
clc
adc
push
add
xchg
push
add
add
mov
add
add
add
or
xor
jmp
jge
add
or
jl
arpl
sti
adc
push
add
je
adc
add
push
add
clc
pop
adc
add
mov
mov
sbb
add
push
add
inc
push
add
popf
xchg
icebp
incl
call
push
add
add
addl
add
add
incl
push
mov
xor
push
add
push
add
shlb
pop
add
cmp
add
push
push
mov
and
mov
add
je
and
add
add
push
add
add
incl
mov
or
push
add
subb
add
push
push
add
test
fndisi(8087
add
dec
call
test
pop
push
push
add
lcall
ds
pop
add
mov
call
push
add
popa
repnz
add
mov
push
sub
add
push
incl
and
and
add
or
add
push
inc
push
jmp
cmp
incl
push
add
sarb
and
add
ljmp
push
call
add
and
je
and
call
pop
pop
pop
add
inc
add
add
sub
je
dec
jp
dec
add
xor
test
add
into
mov
add
sbb
addr16
jmp
test
add
xchg
adc
add
shll
icebp
add
mov
add
lea
pop
pusha
add
push
adc
cmp
hlt
cmp
add
mov
push
in
push
mov
add
add
add
mov
dec
add
add
daa
add
cld
add
push
add
mov
inc
jle
incl
out
incl
gs
add
outsl
add
jnp
std
add
xchg
hlt
add
outsl
test
add
aad
add
mov
std
add
add
incl
data16
adc
test
std
pop
in
add
mov
add
add
add
test
std
out
inc
add
std
incl
and
in
incl
add
add
add
std
incl
and
add
add
incl
add
add
incl
test
test
add
pop
and
add
push
test
mov
add
xchg
nop
incl
add
add
add
movl
sub
std
add
adc
add
repz
add
daa
movsb
add
push
test
add
lret
add
test
add
jmp
cmp
add
push
mov
call
xchg
mov
jmp
jmp
add
adc
mov
add
add
mov
add
mov
js
add
ljmp
add
add
jo
add
add
pop
add
out
test
std
movsl
decl
incl
test
push
add
add
push
test
mov
es
add
dec
test
add
lock
add
or
lahf
insl
add
xor
ret
push
add
jp
std
add
pop
or
add
call
cld
add
ljmp
add
jmp
incl
add
ret
add
out
jmp
add
nop
or
decl
add
add
or
jmp
ret
ljmp
add
and
test
dec
ljmp
add
loop
and
add
test
mov
sbb
test
ds
add
incl
and
test
incl
add
movl
add
xor
movl
add
inc
add
incl
test
negb
add
test
xor
add
mov
xor
add
mov
leave
cmp
add
ljmp
inc
add
aaa
incl
addb
ret
add
movl
add
iret
add
incl
mov
mov
mov
xor
add
mov
add
pop
pusha
add
lock
add
sub
mov
xchg
add
xchg
movl
add
nop
add
incl
test
incl
cmp
test
incl
movl
cld
int3
add
in
sti
add
testl
cli
mov
call
incl
add
mov
add
pushf
pushl
test
sti
incl
mov
sti
and
movl
add
ret
add
test
movsb
incl
pushf
mov
add
test
test
add
mov
lods
incl
jno
sti
add
xlat
inc
add
mov
test
add
mov
lcall
add
fcmovnb
mov
add
add
rolb
mov
leave
incl
add
add
movl
add
sub
movl
add
or
mov
aam
sti
incl
test
incl
inc
scas
add
add
mov
test
add
js
sti
add
outsl
mov
add
ljmp
in
add
mov
inc
mov
add
pop
incl
cmp
add
add
mov
add
add
movl
add
das
add
incl
test
or
add
pop
add
test
dec
add
add
push
test
add
xchg
inc
add
mov
test
add
mov
jmp
test
cld
xor
lea
add
add
movl
add
lret
add
cld
incl
test
incl
and
add
test
incl
mov
add
add
mov
out
inc
add
mov
cld
add
pop
movl
add
dec
add
pop
incl
add
rorb
incl
dec
add
das
add
movl
add
sldt
add
incl
add
add
incl
test
incl
dec
inc
add
add
mov
cld
add
push
jo
add
add
dec
incl
dec
add
and
test
cld
jnp
movl
add
jle
movl
add
hlt
add
incl
test
incl
dec
lahf
add
add
mov
cld
add
sbb
cwtl
add
add
mov
pushf
add
dec
incl
dec
add
mov
test
cld
and
movl
add
cwtl
add
add
xchg
add
incl
test
incl
dec
cwtl
add
add
or
cmp
add
mov
cld
add
inc
xchg
add
mov
mov
add
push
enter
incl
add
add
incl
cld
add
repz
xchg
add
mov
mov
cld
xchg
inc
add
incl
add
js
incl
test
mov
add
test
incl
xchg
mov
add
mov
in
incl
mov
cld
add
xchg
push
add
mov
test
add
gs
push
add
test
add
idiv
add
add
and
test
std
sar
push
add
add
movl
add
push
add
add
cs
incl
add
std
incl
test
daa
add
add
xchg
test
add
cmp
add
movl
outsl
mov
add
xchg
sub
incl
sbb
incl
rolb
add
add
fwait
add
add
mov
bnd
movl
add
xchg
add
incl
lea
incl
jo
repnz
fistpl
repnz
xchg
enter
incl
add
and
mov
movl
add
repnz
incl
test
mov
add
test
loopne
add
sub
les
add
and
sahf
add
mov
add
push
lock
add
add
call
movl
add
sub
mov
add
and
incl
adc
or
add
lret
test
add
fwait
mov
add
das
test
add
fsubs
mov
add
xchg
sbb
fdivr
add
add
mov
ljmp
adc
mov
test
repz
mov
mov
repz
movl
add
in
mov
xor
stos
xor
add
test
movl
cmp
add
pop
test
add
stos
adc
add
inc
dec
add
and
push
add
aad
push
add
push
dec
add
int3
incl
add
hlt
mov
call
xor
push
add
movl
add
jb
movl
add
mov
enter
test
push
add
add
fiadds
push
add
pop
test
add
call
scas
mov
add
cmp
jl
inc
incl
add
xrelease
test
repz
incl
push
test
repz
cmpsb
add
stos
add
movl
add
pop
add
incl
test
incl
xor
push
add
test
pushf
incl
cmpsl
mov
shll
repz
outsl
sbb
add
dec
mov
add
or
test
add
add
movl
add
push
add
incl
test
incl
and
push
add
test
incl
test
mov
enter
mov
repz
fstpl
add
mov
repz
out
aam
incl
lcall
add
jae
fadds
inc
incl
add
jo
faddl
jmp
in
lcall
add
add
movl
add
cs
add
jg
incl
add
clc
repz
test
hlt
incl
sbb
test
clc
incl
lock
add
sahf
in
add
sahf
test
add
lods
add
mov
hlt
add
cmc
or
jmp
imul
fadds
add
add
lods
add
in
add
movl
add
stos
add
incl
test
and
add
xor
sub
add
mov
sub
add
dec
test
add
cmpsl
and
add
decl
aas
lcall
add
pop
cmp
push
incl
add
inc
mov
push
incl
and
add
add
mov
dec
push
incl
test
push
incl
mov
add
add
movl
pop
test
add
push
pusha
add
sar
add
dec
fs
scas
incl
add
orb
test
hlt
push
jmp
add
mov
loop
movl
add
js
hlt
incl
add
mov
jl
hlt
incl
test
cmp
and
add
add
jge
hlt
add
lret
mov
test
add
shlb
hlt
add
jae
xchg
add
cwtl
incl
add
jle
cwtl
add
and
test
hlt
sar
nop
add
or
test
hlt
inc
pushl
add
sar
add
add
add
incl
test
sahf
sbb
mov
add
mov
mov
test
add
pop
daa
add
mov
test
add
push
mov
sbb
enter
incl
add
decl
incl
sub
add
test
hlt
sbb
movl
add
fsubr
hlt
incl
add
add
incl
test
adc
add
test
incl
nop
test
add
dec
add
repnz
add
dec
mov
mov
add
sbb
clc
add
and
add
add
idiv
test
cmc
push
pushl
add
mov
mov
cmc
cmp
movl
add
fldl
mov
adc
sub
aaa
sbb
sbb
add
mov
sbb
add
mov
sub
add
call
add
fdivr
pop
add
xsaves
pushl
sbb
incl
sub
test
cmc
adc
movl
add
inc
dec
cmc
incl
add
add
incl
test
incl
cs
add
add
xchg
test
add
lock
add
or
aas
mov
mov
add
lods
pop
add
scas
incl
add
mov
incl
lods
incl
add
mov
into
add
movl
add
cmp
mov
je
cmc
incl
test
push
sbb
add
mov
mov
cmp
dec
test
add
jmp
cltd
test
add
rol
mov
incl
sbb
add
nop
add
popf
incl
add
insl
mov
add
ret
add
adc
test
cmc
inc
inc
add
sbb
add
add
push
mov
test
cmc
incl
test
out
add
test
mov
add
cmp
mov
add
roll
ret
mov
add
rol
rolb
push
incl
add
xchg
mov
add
test
test
cmc
add
jo
add
test
cmc
xchg
inc
add
adc
enter
add
movl
add
movl
cmc
incl
test
fdivr
add
add
test
inc
add
add
cmpsb
test
add
xchg
add
mov
test
add
cs
lock
clc
lcall
add
hlt
add
sar
add
add
incl
aaa
add
imul
inc
add
out
add
add
dec
idiv
add
out
add
incl
test
adc
add
push
add
add
jne
sub
add
std
test
add
sbb
add
mov
testb
inc
and
jmp
je
sub
incl
cmc
call
add
add
mov
xor
idiv
add
push
adc
add
test
cmp
add
lcall
jmp
xchg
mov
incl
test
test
push
add
and
test
testb
add
incl
test
incl
lret
add
mov
pop
incl
pop
test
add
or
add
incl
sub
add
lret
add
sbb
mov
mul
inc
add
incl
add
div
incl
xchg
ret
jl
add
and
int3
add
mov
clc
mov
cmp
add
add
mov
call
test
notb
clc
add
adc
test
mul
dec
add
enter
idiv
inc
add
inc
add
incl
test
movsb
incl
fmul
sbb
add
into
add
add
lret
add
xchg
add
ljmp
mov
sbb
add
mov
add
add
rolb
test
test
test
pop
add
mov
test
imulb
movl
add
add
add
cmp
incl
add
mov
aam
idiv
add
pop
adc
fdivr
add
pushf
test
add
lds
test
add
rolw
add
jmp
add
jp
add
add
movsl
incl
cld
add
pop
add
rolb
add
mov
negb
inc
add
aad
incl
add
add
idiv
add
nop
les
add
test
mov
cmp
incl
addr16
add
jge
add
mov
testl
add
push
lcall
add
mov
and
call
add
add
and
incl
pusha
add
aam
test
notl
movl
add
inc
add
add
idiv
add
add
mov
cmp
incl
test
jbe
add
test
push
test
add
push
cmp
add
movl
mov
insl
push
add
stos
incl
add
add
incl
sbb
add
test
imull
xlat
add
cmp
mov
negl
sub
incl
add
ret
add
or
sbb
add
fdivrs
add
mov
je
add
jns
testl
add
cmp
addb
fdivr
sbb
add
sub
add
add
mov
test
negl
jmp
add
test
test
cwtl
idiv
add
xor
movl
add
add
incl
test
mov
add
add
sbb
fcmovnu
add
xchg
test
add
jp
add
mov
mov
add
mov
mov
incl
add
xor
incl
int3
add
lods
add
faddl
add
mov
mul
inc
add
mov
in
add
incl
test
incl
rcrb
test
aam
add
dec
add
add
sub
imul
testl
add
lods
lcall
add
jb
call
add
add
sbb
test
notl
add
movl
add
mov
adc
incl
add
add
incl
test
pop
add
add
mov
or
adc
jmp
incl
add
pop
mov
decl
incl
insb
add
movl
inc
add
imul
add
dec
add
add
cmpsl
add
incl
test
incl
insl
inc
add
add
mov
and
cmp
call
push
mov
call
incl
outsb
add
ret
add
imul
add
clc
incl
sbb
add
add
incl
add
pop
clc
incl
test
push
incl
outsl
and
add
test
pop
incl
jae
clc
add
scas
pusha
add
mov
out
add
mov
mov
add
mov
incl
add
jge
insb
add
or
pop
decl
dec
add
in
add
inc
add
incl
add
aad
incl
test
test
add
sbb
add
out
add
add
fiaddl
jb
add
decl
nop
lcall
add
mov
pushf
add
or
add
add
add
cmp
add
stos
pushl
add
add
movl
add
xchg
add
add
add
sar
add
je
add
add
flds
in
add
lret
add
add
loopne
clc
add
jmp
dec
incl
add
sub
incl
aam
add
add
out
add
cmp
add
xbegin
add
incl
lea
call
test
add
in
call
mov
add
dec
hlt
add
ret
incl
add
fisttpl
incl
les
add
add
jmp
mov
stc
lods
inc
add
jnp
incl
add
stc
incl
test
adc
add
inc
adc
add
add
add
popa
test
add
dec
jns
add
pushl
and
pushl
cmp
sub
lcall
add
add
sub
pushl
mov
or
test
stc
sbb
movl
add
add
add
stc
incl
add
jnp
incl
test
incl
jnp
add
add
mov
notl
stc
add
loop
add
mov
loope
pop
add
fdivrp
add
add
mov
incl
je
add
test
stc
add
jno
mov
stc
xchg
inc
add
incl
add
add
incl
test
xchg
sbb
add
out
nop
add
add
loop
stc
add
jl
add
mov
test
add
mov
mov
push
lcall
add
jecxz
mov
pushl
mov
test
stc
sbb
jg
add
add
add
jbe
xchg
add
nop
decl
incl
and
jae
incl
mov
lret
add
cli
test
add
mov
adc
test
decl
incl
add
test
lods
add
sar
test
stc
push
add
lahf
add
repnz
mov
mov
stc
out
inc
add
add
incl
test
incl
in
sbb
add
push
into
add
add
mov
in
add
mov
test
add
add
dec
lcall
add
pop
faddl
lcall
incl
add
mov
incl
addl
cmp
test
stc
repnz
add
out
incl
add
add
incl
test
add
add
jae
cli
add
in
mov
test
add
xor
mov
add
jle
or
lcall
incl
add
add
adc
inc
incl
test
add
add
testb
lock
movl
add
mov
js
incl
test
sub
add
test
add
add
std
test
add
xchg
add
incl
sbb
add
cmp
add
add
mov
movsl
incl
mov
add
add
movl
add
mov
scas
cli
incl
add
add
incl
test
incl
mov
add
add
lock
add
cli
add
mov
cli
add
mov
jo
decl
mov
stc
call
movl
add
fadds
mov
adcb
test
add
test
incl
iret
test
add
fisubl
add
jo
cli
add
jmp
add
mov
sbb
cwtl
add
mov
add
add
call
movl
add
mov
mov
incl
test
lods
incl
lea
add
add
sahf
test
add
mov
add
jp
cli
add
incb
add
dec
mov
add
add
les
ljmp
repz
add
add
incl
add
add
mov
movl
add
pop
add
incl
test
fdivr
add
sbb
add
add
add
mov
in
add
dec
test
add
jl
add
mov
test
add
imul
lcall
add
iret
hlt
add
jp
add
add
mov
add
incl
xchg
add
mov
or
movl
add
dec
add
add
insb
sti
incl
add
add
incl
test
adc
add
test
adc
add
cmp
sti
add
xor
add
leave
test
add
xchg
add
mov
loope
and
call
mov
add
mov
test
sti
add
faddl
add
add
add
add
add
movl
add
xor
mov
dec
mov
incl
icebp
push
incl
jae
incl
decl
add
mov
mov
add
repz
pop
add
dec
incl
add
xor
pusha
add
push
incl
int3
add
faddl
test
aas
incl
add
xchg
mov
pushl
movl
add
fiadds
mov
je
incl
test
js
add
test
incl
pop
imul
addb
dec
add
add
mov
lods
adc
add
inc
dec
nop
add
add
add
cwtl
add
add
jne
pop
add
out
enter
incl
add
fs
add
std
incl
cltd
add
or
icebp
decl
incl
test
icebp
add
add
int
incb
jmp
xchg
incb
inc
mov
add
pop
incl
or
add
mov
cli
inc
add
add
incl
add
fs
incl
test
add
lock
add
aam
incl
jae
incl
pushl
ds
incl
cli
mov
pushl
incl
or
mov
pushl
inc
add
popf
incl
add
mov
and
incl
test
sub
add
pop
add
test
incl
push
sbb
add
mov
xor
add
mov
jp
add
mov
incl
call
cmp
mov
mov
xor
add
add
add
push
add
add
int
add
inc
and
add
mov
movl
add
out
mov
add
inc
adc
add
xor
mov
inc
add
cmp
push
call
add
enter
mov
movl
add
str
incl
lea
dec
incl
mov
incb
pushl
add
mov
test
stos
incl
add
sbb
mov
movl
add
fildl
mov
push
test
ret
add
mov
incb
pushl
add
dec
test
add
jecxz
add
mov
mov
add
test
incl
add
add
cmp
test
incb
or
test
incb
call
add
addb
add
cli
inc
add
repnz
incl
test
incl
xor
pop
add
test
incl
pop
in
add
or
add
add
add
add
or
inc
cmp
cmp
add
add
add
add
add
add
xor
add
jo
add
adc
add
mov
add
sbb
add
lock
add
add
add
add
add
add
dec
addb
add
add
add
add
add
add
or
xor
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
xor
add
ja
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
sti
add
imul
add
repz
std
repnz
cli
loope
movsl
clc
rcll
lock
div
rcll
cmpsl
cld
jmp
ds
hlt
in
std
in
roll
clc
hlt
jecxz
cmc
cld
testb
incl
sti
add
cli
repnz
out
xchg
cmc
jnp
cmc
ret
cmc
ret
not
nop
jmp
fldt
shl
mov
ja
cli
loop
mov
in
aad
sti
cmc
out
cmc
cld
testb
incl
decl
cli
loop
mov
mov
xchg
mov
stc
fldt
iret
sti
ljmp
cli
jecxz
xchg
cmc
ret
std
loopne
mov
out
loopne
stc
std
stc
add
incl
cld
in
aam
hlt
mov
mov
cld
in
and
fsubs
hlt
mov
pop
push
ja
sti
loopne
in
aad
repnz
xlat
add
jmp
adc
imul
add
cld
clc
xor
enter
fsubs
sub
rclb
push
mov
pop
push
jl
std
loope
pushf
cld
repnz
lock
in
mov
mov
xor
mov
jmp
jno
sti
testl
mov
pop
push
mov
cmpsl
sar
hlt
in
hlt
repnz
shl
sbb
mov
ljmp
adc
xor
mov
not
xchg
aam
repnz
cmc
shrl
mov
mov
ljmp
aad
lret
add
les
push
push
loopne
cmpsl
push
pushl
cmpsb
adc
jp
imul
cli
loopne
mov
jmp
jg
shrl
fidivs
sub
out
aad
mov
imul
fisubrs
test
and
sub
jmp
ret
test
jns
sti
fbstp
gs
cli
repnz
ljmp
nop
rolb
std
aad
mov
jp
cmp
and
xor
sbb
mov
cmpsb
scas
imul
ret
scas
lods
cld
repnz
fucomp
into
add
mov
add
sti
hlt
arpl
pop
stos
fistpl
ljmp
mov
scas
xchg
insl
rcrb
repz
in
out
aad
shr
leave
and
jo
outsl
rcrl
cmpsl
test
dec
jmp
mov
in
fdivp
fnstcw
push
mov
in
mov
movsb
xchg
mov
jnp
jle
insl
mov
loope
add
mov
js
iret
ljmp
cmp
dec
call
or
into
dec
mov
in
xor
push
xlat
aam
push
mov
dec
ljmp
movsl
fstps
decl
rcrb
movsl
adc
xor
adc
lods
fsubl
xor
stos
and
push
mov
repnz
fistpll
push
fisttps
incl
incl
out
clc
in
or
lds
sub
or
pushl
cmpsb
adc
inc
scas
sub
in
loopne
mov
fildll
insl
rcrl
std
stc
daa
incb
incl
out
jecxz
cmpsl
fstps
inc
scas
sub
das
cmpsb
adc
movsl
adc
xor
sub
xchg
rolb
or
lret
jne
jno
pop
leave
lock
out
sub
std
std
add
incl
in
loop
mov
in
add
les
pop
mov
sub
push
mov
in
outsb
rcrb
icebp
fistl
lock
sub
in
or
clc
in
add
std
add
std
add
add
add
add
adc
add
add
and
add
add
add
add
addb
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
add
incb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiadds
push
add
add
je
outsb
add
inc
add
insb
add
dec
add
data16
add
outsl
add
add
add
add
xor
cmp
bound
xor
add
xor
push
add
add
add
outsl
add
jo
jns
outsb
add
dec
add
insl
add
add
add
push
add
outsl
add
add
imul
outsl
add
jo
jb
jb
outsl
add
add
imul
push
add
add
add
add
add
add
arpl
jo
imul
outsb
add
add
add
jb
push
add
outsl
add
add
imul
outsl
add
jo
jb
jb
outsl
add
add
imul
add
add
add
add
add
add
jae
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ja
aaa
add
jb
pop
add
je
xor
add
add
add
add
add
add
add
add
add
add
add
add
je
outsb
add
add
outsb
add
insb
add
popa
add
add
popa
add
add
js
add
add
add
add
add
add
inc
add
jo
imul
add
add
add
add
outsl
add
add
imul
outsl
add
jo
jb
jb
outsl
add
add
imul
inc
add
add
add
and
add
je
push
add
jb
add
jbe
jb
add
add
add
add
add
add
imul
add
outsb
add
insb
add
add
add
popa
add
add
popa
add
add
js
add
add
and
add
add
jb
jne
add
add
dec
add
insl
add
add
add
dec
add
arpl
jae
outsl
add
outsl
add
add
add
imul
jae
ja
and
scas
add
dec
add
add
add
imul
jns
push
add
add
add
add
add
add
push
add
add
jb
jne
add
add
push
add
jb
outsl
add
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
push
add
add
jb
jae
outsb
add
insb
add
je
outsb
add
add
add
mov
or
popa
cmp
bound
insb
js
jns
jae
insb
cmp
arpl
push
imul
outsl
sub
insl
outsl
popa
cs
jae
and
xor
outsb
popa
data16
gs
jae
imul
or
and
jae
dec
outsl
data16
and
outsb
and
jb
gs
popa
insl
jb
imul
arpl
insl
xor
and
or
and
gs
je
jb
or
and
jb
and
jne
jae
gs
jbe
jb
gs
gs
and
and
and
and
cmp
jae
jne
inc
fs
arpl
outsb
outsl
imul
and
insb
and
jb
gs
inc
imul
jb
je
jb
and
imul
jae
insb
popa
data16
and
gs
jno
gs
inc
fs
arpl
outsb
outsl
imul
and
and
and
cmp
jb
jno
gs
imul
addr16
or
das
cmp
jae
arpl
jns
imul
je
cmp
je
jne
outsl
data16
and
or
jo
outsb
gs
outsb
and
or
fs
outsb
outsb
gs
jae
gs
bound
or
and
popa
cmp
jae
gs
dec
jns
fs
imul
jo
cmp
and
xor
insl
popa
outsb
gs
and
jae
outsw
outsb
imul
insl
outsl
inc
insl
sub
outsb
outsl
jb
insb
outsl
and
and
imul
xor
xor
and
xor
outsl
jb
outsl
jae
jb
jb
push
jb
je
sub
cmp
bound
insb
dec
push
jns
outsl
outsb
imul
bound
arpl
data16
data16
outsb
popa
jne
addr16
cmp
popa
das
cmp
insl
gs
dec
jns
fs
imul
and
and
cmp
fs
outsb
outsb
gs
jae
gs
bound
or
and
outsb
outsb
gs
das
cmp
insl
gs
jns,pt
xor
add
jl
add
cmpsl
test
add
inc
fiadds
add
add
insl
sub
add
add
test
or
mov
add
add
add
add
or
adc
add
add
or
xor
add
add
or
push
add
add
add
js
add
add
or
xchg
add
add
add
mov
add
add
or
fadds
add
add
or
cld
add
add
add
and
add
add
or
inc
add
add
add
add
addb
add
or
jo
add
add
or
loopne
add
add
decl
loopne
or
hlt
add
add
add
decl
hlt
add
cld
add
add
add
decl
or
or
cld
add
add
add
add
decl
and
or
add
or
or
add
add
decl
dec
add
or
or
adc
add
add
decl
insb
add
adc
or
sbb
add
add
decl
mov
or
sbb
or
and
add
add
decl
movsb
add
and
or
sub
add
add
decl
enter
sub
or
xor
add
add
decl
in
add
xor
or
cmp
add
add
decl
adc
or
cmp
or
inc
add
add
add
decl
xor
or
inc
add
dec
add
add
add
decl
push
add
dec
add
push
add
add
add
decl
add
push
add
imul
xor
insb
add
add
dec
add
outsl
dec
fs
imul
jns
inc
add
gs
je
fs
arpl
jb
add
add
push
add
imul
insb
insb
add
add
add
je
popa
jb
insb
add
add
inc
inc
xor
insb
fs
add
add
dec
add
insl
gs
dec
je
imul
arpl
outsb
outsl
arpl
add
add
dec
dec
push
push
dec
push
inc
cs
insb
add
add
gs
push
jne
popa
add
inc
add
push
push
inc
cs
dec
add
dec
add
add
dec
je
gs
jne
gs
imul
inc
js
push
inc
push
push
dec
dec
dec
cs
insb
add
add
inc
je
gs
gs
imul
add
inc
add
dec
dec
xor
inc
cs
insb
add
add
jo
outsb
gs
add
add
inc
push
push
push
xor
add
inc
add
arpl
outsl
outsb
dec
outsb
data16
outsl
add
inc
xor
insb
add
insb
add
add
popa
gs
outsl
inc
jo
je
bound
inc
add
add
dec
dec
inc
inc
xor
xor
insb
add
add
inc
add
gs
push
je
imul
insl
add
add
inc
inc
xor
xor
insb
add
add
inc
add
outsl
push
je
dec
outsb
outsb
jb
insw
imul
inc
dec
push
dec
xor
dec
cs
insb
add
add
gs
inc
fs
outsl
gs
push
jb
add
add
outsl
xor
insb
add
insb
add
add
outsb
push
outsb
imul
add
add
inc
dec
dec
inc
xor
insb
fs
add
add
dec
dec
push
dec
push
push
push
cs
insb
add
add
dec
outsb
je
push
jo
inc
jns
popa
inc
popa
je
insb
imul
dec
test
sbb
xor
test
aas
push
mov
ffreep
iret
mov
fcoml
xchg
jnp
nop
cld
dec
loope
add
jmp
mov
sbb
push
mov
das
mov
add
push
js
sbb
or
mov
rorl
enter
cmp
sbb
sub
jb
pop
ss
and
sbb
adc
pop
sbb
mov
adc
cmp
sbb
je
sti
sub
adc
stc
sub
add
nop
push
pop
stos
repz
cmovs
mov
add
roll
out
or
repnz
adc
enter
mov
cmp
ja
pop
push
add
xor
xor
add
sbb
sarl
leave
jle
stos
adc
loope
int
lret
add
sbb
les
push
sbb
out
lds
mov
daa
jmp
fcom
fldcw
jne
jo
lods
mov
out
sar
gs
add
cmp
sbb
ret
sbb
lret
jecxz
inc
out
shll
sbb
mov
or
incl
std
add
adc
xor
sub
push
sahf
cmpsb
lcall
inc
ret
and
cmpsb
scas
addl
lods
pop
cmp
inc
dec
clc
push
hlt
sahf
stc
mov
cmp
imull
stos
dec
mov
inc
jge
test
cli
nopl
dec
xchg
cmc
sbb
mov
sbb
xchg
inc
add
xchg
xchg
inc
mov
xchg
jmp
pushf
mov
mov
cmp
iret
cwtl
jbe
push
lea
xchg
roll
cmp
mov
push
jmp
pushf
cmpsb
shlb
pop
and
test
mov
mov
adc
sbbl
add
jge
lahf
test
aaa
es
fbld
inc
add
cmp
or
push
inc
add
push
sub
jmp
mov
nop
fld
rcll
adc
repnz
out
lods
fs
shrl
cmp
pop
repnz
xor
mov
jne
rcrb
inc
sub
or
xor
and
setns
pushf
mov
sub
lea
adc
loop
addl
adc
push
fildll
dec
dec
adc
jns
lret
adc
and
or
mov
xor
sub
ror
jmp
js
icebp
mov
int3
fisubrl
jne
push
add
add
add
pushf
mov
jmp
iret
xchg
push
stc
andl
in
sbb
test
jmp
in
adc
adc
addl
adc
leave
pop
test
add
mov
out
or
dec
sub
or
cmp
add
cmp
push
outsl
jmp
and
cmc
nop
in
std
icebp
std
lret
inc
dec
sub
xor
inc
std
jb
xor
sbb
mov
jp
sahf
jge
push
jnp
and
push
nop
cmp
nop
dec
mov
jns
mov
movsb
std
mov
inc
mov
sub
call
and
dec
shl
in
jp
adcb
or
adc
lods
mov
mov
inc
mov
push
push
and
xchg
es
mov
or
jecxz
or
in
xor
scas
add
lea
sub
cli
and
adc
pop
push
push
mov
pop
add
xchg
mov
sub
jmp
fs
popa
pushf
mov
sbbl
mov
nop
aad
cltd
adc
jns
push
adc
or
jmp
lea
pop
mov
sub
jne
mov
add
sub
mov
adc
mov
sbb
adc
jns
sti
inc
pop
add
add
mov
or
aad
rorb
push
movsb
scas
stos
push
jae
insl
sub
fwait
mov
adc
adc
in
stos
jne
ljmp
cli
mov
sarl
lret
in
push
add
sti
sub
push
pusha
xor
adc
dec
mov
inc
add
leave
or
xchg
inc
jmp
cwtl
or
or
xchg
lcall
add
lret
ss
ret
shll
or
xchg
in
and
xor
movsl
loopne
adcb
lea
rcll
xorw
push
mov
out
mov
sbb
add
clc
dec
in
sbb
push
mov
jmp
std
sub
add
inc
pop
dec
adc
add
pand
pop
call
sbb
xchg
lahf
and
lret
dec
adc
adc
or
shlb
mov
dec
pop
stc
or
in
cmp
push
pop
cmp
cltd
sar
push
xlat
in
add
sbb
jo
mov
mov
jb
daa
push
sbb
mov
pushl
cwtl
mov
dec
push
aam
push
cld
push
jb
movl
mov
imull
mov
or
mov
rcrl
xchg
inc
aaa
adc
push
shll
sub
lcall
inc
int
ficoms
sbb
mov
or
sbb
push
lea
sbb
dec
xchg
push
movsb
dec
pusha
and
add
shlb
or
jo
lock
or
pop
push
nop
test
loopne
or
or
test
sbb
out
cmp
std
sbb
cli
add
nop
movntps
push
es
call
jb
dec
push
push
add
call
pop
add
daa
adc
mov
add
or
xor
fcmovne
fimuls
push
fyl2xp1
fwait
and
mov
xor
nop
add
dec
jnp
add
test
push
sbb
inc
jle
es
inc
jnp
repnz
repnz
sbb
outsl
inc
dec
add
cwtl
push
cs
lcall
call
ffreep
sub
mov
push
or
and
xchg
loop
test
or
jb
sub
shrb
inc
or
mov
mov
dec
sub
dec
dec
add
data16
inc
and
jnp
outsb
mov
pushf
xchg
andl
or
shl
push
or
loope
push
loopne
jg
sbb
test
aas
mov
iret
nop
or
add
push
inc
sarb
sub
lret
sub
sbb
shlb
lcall
aaa
push
xchg
jne
and
lcall
negl
push
jmp
or
add
pop
push
shrb
clc
sbb
leave
jno
addr16
subb
movl
pop
pop
imul
xchg
test
mov
push
aas
rclb
add
push
lret
xchg
and
inc
mov
mov
or
xchg
rcrl
xorl
test
jne
inc
stos
mov
pop
ret
add
in
movb
lods
jne
scas
lds
jge
mov
addb
ret
cmp
ja
out
push
nop
repz
mov
sub
lods
clc
pop
cmp
jne
xchg
aas
jns
pop
and
enter
pop
in
inc
data16
lods
fnstcw
loopne
jge
adc
add
add
in
push
test
mov
out
shl
call
add
popa
inc
pop
enter
movsl
mov
jbe
jae
rorl
adc
stc
inc
add
pop
ret
ret
cmpsl
hlt
or
nop
add
call
ds
cmp
es
nop
decb
xor
push
adc
push
mov
clc
push
test
jne
ficoms
test
int3
insb
fimuls
inc
cld
jl
push
adc
cmp
clc
iret
and
rolb
push
add
psubsb
mov
mov
sub
dec
or
or
les
mov
into
mov
jmp
and
pop
inc
cmpl
stos
push
notl
pop
pop
jmpw
js
test
pop
mov
cmp
in
pop
addl
shlb
push
push
cmpsl
bound
mov
xor
loope
in
inc
test
cli
jle
ficoms
mov
or
dec
cwtl
jae
push
sub
dec
clc
leave
or
add
les
loope
inc
add
decl
cli
push
push
mov
icebp
stos
or
stos
into
fidivrl
pusha
xor
xor
addl
pop
mov
pushf
inc
lcall
and
xchg
mov
mov
xor
dec
pop
enter
mov
pop
es
add
xor
push
pusha
mov
mov
hlt
dec
pop
or
mov
push
in
push
fldcw
push
test
mov
mov
sub
insl
decl
dec
popa
sbb
jge
cli
icebp
push
test
push
adc
inc
fs
xor
das
loopne
sub
pop
fisubl
out
inc
aad
or
fisubrl
push
add
or
pop
dec
sub
sbb
ljmp
inc
inc
push
ljmp
xor
incl
push
call
inc
inc
sbb
inc
ret
dec
jmp
inc
mov
inc
mov
adc
inc
mov
mov
lcall
lcall
cmp
dec
jmp
or
sbb
push
rolb
add
or
movl
push
inc
sub
test
or
push
jmp
mov
pusha
mov
data16
xchg
inc
jno
dec
pop
fs
pop
xor
sbb
stos
lds
xchg
inc
jmp
xchg
lods
push
inc
pushf
jne
xlat
cld
pusha
scas
mov
xor
mov
sub
push
call
or
add
pop
repz
and
dec
cld
gs
inc
and
dec
and
jl
lea
movl
mov
lea
jbe
jnp
mov
pop
mov
add
imulb
mov
pop
out
sbb
mov
pop
push
jns
mov
and
rol
es
pushf
dec
mov
aaa
sub
lods
xor
pop
mov
push
add
push
insl
push
jbe
pop
bound
jo
sbb
arpl
popa
outsl
shlb
and
cmpsl
jae
adc
out
mov
cs
sbb
arpl
fnstenv
insb
xchg
xor
je
bound
sti
fs
dec
inc
push
sbb
sub
andb
insb
jmp
mov
xor
dec
stc
sti
in
popa
inc
in
outsl
inc
js
cmp
data16
icebp
cmp
aas
subl
nop
dec
dec
cwtl
inc
ss
mov
jo
push
inc
aas
sbb
sbb
push
pusha
imul
mov
iret
inc
arpl
je
sbb
bound
outsb
inc
or
xchg
mov
xor
or
shr
mov
dec
lret
imul
lea
fwait
dec
lods
pusha
add
mov
and
cld
xor
movsb
call
xor
jae
add
sbb
add
pop
call
add
inc
add
add
add
shlb
aas
aam
stos
call
jne
sub
add
add
jmp
lods
je
rorl
leave
adc
dec
xchg
loopne
lods
or
add
cmp
orb
cld
push
jae
xorl
add
mov
push
sub
mov
pop
movsb
repz
add
inc
ret
rclb
xor
inc
leave
out
call
out
leave
pushl
push
jl
ret
and
mov
and
popa
sbb
add
add
or
mov
add
adc
add
sbb
or
jb
or
call
add
add
or
loopne
or
in
imul
add
mov
inc
push
mov
push
add
or
add
mov
cld
ret
shlb
xor
js
add
add
adcl
push
push
push
push
push
push
cwtl
lea
mov
daa
push
mov
call
add
adc
push
jae
adc
add
mov
decl
push
push
xor
inc
mov
or
dec
inc
ret
mov
or
repnz
add
sar
push
pop
inc
add
push
clc
mov
add
subl
mov
or
mov
aas
test
lock
mov
or
lret
push
push
mov
inc
pop
pop
pop
pop
lcall
loopne
add
add
std
fiadds
add
das
adc
add
mov
stos
rorl
mov
cmpsb
aaa
mov
dec
loop
push
arpl
ds
xor
lock
inc
sbb
cmp
push
sti
movsb
jnp
les
pushw
jp
pop
out
rcrb
dec
dec
or
adc
dec
sub
cmpsl
arpl
sbb
icebp
xor
imul
push
inc
icebp
inc
idivl
gs
notb
nop
pop
sahf
lods
lret
rcll
and
in
sbb
data16
jmp
push
and
scas
ljmp
mov
jle
test
jge
lods
and
fwait
pop
mov
cmc
sub
lret
fdivs
loop
iret
add
push
pop
in
sbb
jmp
dec
mov
pop
aam
adc
push
jge
add
pop
aaa
jae
in
mov
sbb
inc
sub
es
lahf
push
movsl
sub
fiaddl
test
adc
mov
xchg
insb
mov
dec
js
ljmp
xor
cmpsb
add
jns
outsl
cmp
mov
call
push
mov
dec
inc
out
pop
aaa
pop
mov
xchg
icebp
adc
dec
loopne
cmp
jae
push
push
test
or
xor
and
jnp
jecxz
sub
movsl
jne
ret
shll
push
mov
enter
mov
adc
xor
out
int
jb
pop
sahf
xchg
add
andb
jecxz
inc
xchg
xor
fsubp
dec
aas
lock
dec
add
imul
or
dec
xor
xchg
fdivrl
lods
mov
cmpb
daa
jl
xorb
fidivs
pusha
mov
movsb
popa
xchg
xchg
mov
jbe
jae
sub
pop
push
rcll
cmp
cmpsl
clc
xchg
adc
sub
mov
je
xor
push
xchg
iret
xchg
mov
ret
test
xchg
mov
testb
repz
xor
add
lret
xchg
pop
insb
mov
jb
or
dec
shlb
pop
pop
xor
jb
ficoms
cltd
filds
jne
cwtl
das
loopne
int
mov
lahf
inc
inc
mov
or
cmp
bound
inc
outsb
int
jecxz
cld
sahf
push
inc
sbb
jnp
mov
pushf
and
sbb
movsb
mov
xchg
and
outsl
push
bound
add
addb
jbe
add
in
dec
clc
jae
mov
add
sbb
mulb
mov
test
jge
insl
fiadds
adc
sbb
bound
mov
aaa
subb
xor
xchg
iret
enter
je
nop
mov
mov
mov
or
xor
xor
jmp
and
xchg
orb
xor
in
dec
imul
inc
lcall
stos
add
loopne
push
int3
out
gs
sub
lods
shrl
cld
cmpb
daa
and
mov
jmp
jb,pn
jge
rorl
jecxz
dec
xor
dec
and
and
idivb
add
mov
push
jecxz
cmp
mov
je
es
push
pop
lock
jecxz
mov
loopne
cmp
int3
push
sbb
inc
sbb
sub
hlt
js
pop
cmp
mov
mov
xchg
insb
dec
sarl
sub
xchg
jmp
add
jecxz
sub
call
rcrl
mov
sub
and
mov
movl
cmp
jle
or
in
jmp
repnz
out
sub
dec
jmp
xor
xor
cmp
popf
sbb
sbb
xor
ljmp
inc
pop
add
inc
ljmp
popa
jb
sbb
pop
and
jl
pop
xor
fistpll
mov
fiaddl
push
or
jmp
mov
aam
aas
push
xor
sub
mov
push
mov
adc
xorl
xchg
push
inc
stos
add
and
inc
ret
jge
cmp
mov
std
push
push
loopne
pop
mov
out
ja
cli
dec
dec
push
inc
loope
mov
mov
je
cwtl
cmpsl
das
push
jge
fistpl
je
sbb
pop
pop
lods
cs
fcomps
insb
cmove
rcrl
shrb
xor
mov
mov
cwtl
adc
sub
stos
mov
sub
pop
fidivrs
xor
sti
mov
pop
lret
mov
std
mov
subb
push
imulb
movsl
fisubrs
cs
pop
stc
mov
jns
adc
scas
stc
jmp
push
xchg
data16
inc
cmp
aas
addl
fidivrl
cmp
mov
adcl
aam
shl
mov
call
push
sarb
sbb
dec
push
out
sar
in
fldl
lret
in
dec
jne
inc
leave
fucomp
push
ss
xchg
or
call
add
xor
aad
or
icebp
mov
sbb
push
dec
test
mov
cmpsb
jb
ss
mov
sbb
jo
mov
fdivrl
sbb
or
lock
pop
rep
push
jae
pop
outsb
fs
jbe
mov
and
jae
in
mov
and
cmpsl
in
mov
xlat
inc
orb
push
push
fwait
jp
mov
out
insb
es
pop
and
xchg
nop
pop
pop
ds
jnp,pt
cltd
mov
in
mov
lcall
sub
sub
roll
out
test
jl
fprem
aam
rcll
push
lea
xlat
xchg
dec
xchg
push
sti
fldcw
mov
pop
arpl
ret
scas
jae
adc
movsb
test
aad
pop
into
mov
cmp
xor
int3
aad
movsl
pop
hlt
mov
dec
aaa
adc
cmpsb
dec
and
adc
add
adc
arpl
faddl
lret
push
mov
sub
into
lahf
inc
or
test
repnz
call
cmpsw
inc
pmaxsw
jae
imul
and
daa
sbb
shlb
fucomip
fisttps
sub
mov
enter
imul
mov
jbe
pop
jns
or
mov
out
andl
cli
hlt
jne
inc
jnp
sbb
pop
daa
jg
psadbw
loope
sub
mov
xor
repz
into
test
subb
aaa
dec
out
das
mulb
repnz
mov
das
sti
aad
add
xor
sbb
add
aam
push
cmp
ficoml
in
sysexit
sub
iret
int
insl
cld
loopne
jg
jo
nop
jne
inc
push
out
fwait
into
fadds
add
inc
shrb
and
sbb
incl
scas
movsb
iret
lahf
inc
inc
sub
add
sub
ljmp
jne
mov
xchg
repz
push
shlb
dec
imul
addl
shlb
cmp
push
cmp
sbbl
out
test
inc
orb
dec
out
test
push
test
fs
add
mov
jb
adc
mov
xor
add
incl
insb
notb
add
js
push
add
mov
add
add
xchg
adc
mov
add
add
dec
add
add
jge
mov
adc
mov
add
or
add
adc
add
cmp
mov
dec
add
incl
mov
adc
add
roll
jne
adc
add
roll
add
pushl
add
push
push
push
push
add
mov
test
cli
incl
adc
adc
add
mov
sbb
mov
add
cli
adc
push
addb
sbb
sbb
mov
and
push
sbb
add
gs
add
add
add
and
push
add
pop
sar
add
call
jmp
push
test
in
jle
shll
add
add
add
enter
add
add
into
test
add
call
add
lldt
es
jo
add
add
testb
inc
pop
add
bsr
cmp
add
add
add
clc
incl
xchg
cmp
add
mov
inc
str
clc
loopne
or
add
mov
jne
add
add
xor
xor
mov
dec
or
test
add
jge
adc
adc
cmp
ud2
test
add
shrb
add
imul
add
add
adc
mov
jmp
mov
adc
mov
add
mov
adc
add
adc
cmp
xor
push
add
mov
call
xlat
rorb
inc
add
je
add
ret
add
fnsave
add
add
add
scas
enter
stc
incl
mov
leave
insl
test
add
loop
add
aas
incl
jmp
andl
add
add
xor
add
add
jo
enter
add
push
mov
cs
add
notb
mov
incl
call
test
in
add
je
sbb
test
incl
push
mov
test
ljmp
jne
push
dec
push
add
js
push
add
push
pushf
incl
and
adc
in
adc
push
add
mov
push
adc
xor
pop
les
add
xchg
add
push
add
xor
add
add
add
aaa
mov
add
lock
mov
jne
add
add
in
adc
mov
cld
dec
adc
add
mov
push
mov
clc
insl
ljmp
push
out
push
add
push
add
add
daa
mov
add
call
dec
clc
roll
inc
das
hlt
push
push
push
mov
and
dec
add
outsl
add
add
decl
pop
add
add
into
add
adc
push
jne
ljmp
dec
or
xchg
into
cld
add
push
insw
test
add
sbb
dec
mov
or
in
push
adc
add
test
add
movsl
xchg
add
lahf
add
add
push
add
add
jne
clc
inc
add
cmp
mov
cmp
jge
add
add
add
fimuls
fiadds
add
add
clc
add
lods
mov
add
dec
in
push
cmp
pop
add
test
add
push
pushf
push
add
clc
roll
inc
cs
or
push
loop
push
add
xor
mov
push
push
add
test
in
push
add
clc
roll
inc
mov
or
push
stc
lock
push
aas
lcall
inc
mov
int
mov
lock
cmp
add
add
add
imul
xor
inc
add
jl
mov
cld
das
mov
incl
and
cltd
jne
add
test
in
push
add
clc
roll
inc
sar
add
lock
push
mov
sbb
inc
jmp
or
lcall
ja
cld
sbb
add
or
cld
add
pushl
add
lock
lcall
stos
mov
incl
and
lds
add
test
add
push
mov
dec
clc
roll
inc
mov
or
push
xchg
push
add
push
mov
cld
lock
push
xor
adc
test
add
add
push
add
lea
add
add
or
mov
or
push
rcll
add
push
add
clc
roll
jge
in
mov
add
push
add
push
jne
jmp
sarl
mov
and
add
inc
inc
cld
or
push
mov
incl
loopne
push
push
add
unpcklps
lea
call
inc
lret
mov
add
xchg
add
lea
mov
add
ljmp
mov
fcompl
inc
or
push
add
add
push
lret
decl
add
call
fsubrs
and
push
add
sbb
add
test
imul
adc
add
call
push
jmp
mov
das
push
push
add
push
ja
or
inc
aad
or
jmp
push
incl
rclb
test
xor
mov
mov
jne
cmp
push
jne
pushl
incl
xor
adc
add
jl
incl
or
out
add
ss
enter
adc
lea
adc
add
or
inc
add
jns
incb
incl
xlat
adc
lea
adc
add
push
bound
pushl
rolb
add
decl
add
hlt
or
in
push
incl
dec
cmp
add
push
incl
clc
out
push
jmp
jne
add
sar
mov
cld
jbe
push
add
or
mov
incl
or
decl
jl
incl
or
call
rolb
sbbb
add
add
add
add
push
sbb
push
add
cmpsb
add
inc
jne
add
lods
add
std
jne
add
mov
push
pop
ret
push
add
pop
xor
pop
add
push
repz
stos
test
std
push
add
loop
add
xor
movl
pop
add
mov
cld
add
add
test
incl
mov
inc
lea
fadds
push
adc
add
cld
add
pop
rolb
mov
incl
push
repz
stos
test
std
cmp
add
ljmp
adc
add
incl
repnz
push
add
jp
adc
add
test
add
push
cld
add
push
or
cld
pop
out
incl
push
and
add
in
jne
jle
push
incl
or
fstl
add
push
adc
cmp
mov
mov
push
add
lock
pop
add
xchg
or
add
mov
or
dec
xchg
add
cli
mov
cmp
push
push
pop
pop
pop
pop
pop
mov
call
ret
test
add
add
popl
add
add
add
call
add
add
lret
add
cmp
adc
seto
add
xchg
movl
push
mov
push
xchg
scas
pop
fiadds
loop
jmp
cmpsb
add
mov
imul
jecxz
les
sahf
call
push
xor
pop
cltd
cmpsb
xchg
test
aas
cld
arpl
outsl
inc
icebp
rorb
fnstcw
xorb
mov
cmp
cmp
ljmp
cmp
or
cmova
movsl
lock
adc
jns
mov
cld
test
int3
dec
je
int3
lds
sahf
in
aas
stc
fs
or
int
loope
mov
sbb
sub
pop
push
loope
add
inc
insb
sahf
xchg
daa
adc
mov
cmovnp
inc
lods
fnsave
out
sub
frstor
pop
xchg
mov
jle
pushf
pop
sahf
pop
in
dec
inc
adc
and
addr16
cs
jb
inc
xchg
stos
xchg
iret
outsb
cmc
cld
xchg
or
jge
or
or
adc
xor
into
dec
mov
pop
daa
in
inc
insb
sarl
subl
lahf
es
in
pop
fists
out
cmp
addr16
lahf
mov
jge
iret
mov
push
aaa
inc
movsb
pop
sarb
leave
push
adc
out
dec
pop
movsl
jecxz
fwait
in
fdivrl
ss
mov
push
lret
inc
mov
js
or
adc
lret
nop
jne
pusha
fstpt
pop
mov
sti
pushf
mov
inc
test
js
in
mov
sub
jns
inc
sbb
xchg
sti
adc
enter
roll
pop
xor
addr16
std
daa
jmp
mov
or
jl
pop
pop
mov
stos
insl
and
cmp
xchg
inc
mov
out
pop
and
or
icebp
popa
jbe
dec
cmpsb
mov
sub
mov
push
icebp
cld
pop
push
xor
mov
xor
dec
pop
popa
imul
sub
push
stos
mulb
out
mov
aam
jne
aad
cmpsb
movsb
lods
pop
xor
adc
cmp
ljmp
js
xlat
sbb
adc
dec
sbb
leave
pop
cld
adc
in
sub
adc
cmp
mov
and
popa
cmpsb
shld
mov
xchg
jl
aad
cmp
adc
imul
mov
cltd
push
mov
jno
dec
and
push
and
cmc
stos
cltd
sbb
aas
mov
fstpl
add
ret
outsl
in
xlat
mov
dec
call
xchg
cwtl
call
nop
xor
jp
jb
xor
jnp
lods
sub
cwtl
daa
divps
cltd
mov
fs
sbb
jge
jbe
ja
sub
test
ds
mov
mov
pushf
iret
add
hlt
lcall
scas
shr
dec
add
or
movsb
cs
enter
mov
icebp
jno
hlt
js
out
jg
xchg
and
fidivrs
pushf
out
or
jns
dec
sahf
test
iret
xchg
out
gs
dec
inc
jne
push
aam
mov
or
add
insl
jne
add
mov
fbstp
mov
jmp
mov
cs
xchg
mov
rcll
push
dec
adc
mov
sub
cmp
sarb
and
or
push
rcr
inc
or
or
add
nop
push
mov
pop
in
icebp
mov
test
sub
mov
add
mov
sbb
lods
xchg
lahf
inc
cmc
and
stos
fsub
jno
pushf
pushf
add
scas
out
ja
inc
sub
xor
js
mov
jbe
pop
dec
pop
or
test
push
test
stos
fdivs
pop
popa
stos
fcmovnu
popf
push
mov
mov
pop
iret
sbb
jecxz
out
stos
sbb
daa
add
out
xor
mov
insl
pop
dec
xchg
das
sbb
aas
addr16
push
or
pop
lods
out
imul
rcll
loopne
ja
xchg
daa
enter
mov
imul
jg
cmp
ret
cmp
popa
pop
faddp
int
rcrb
or
push
inc
pushf
mov
push
mov
fistpll
orb
mov
sub
fucom
sbb
scas
test
lock
pushf
inc
imul
mov
das
cmc
xor
cmp
stc
subl
mov
std
add
call
outsb
xchg
cltd
movsl
gs
xchg
dec
cli
or
cmc
stos
or
and
xchg
mov
jle
mov
lcall
xchg
ds
loopne
ljmp
es
mov
jns
loopne
test
aaa
push
inc
arpl
aam
cmp
mov
scas
add
insl
inc
es
test
out
test
outsl
pop
dec
push
fldenv
ret
in
jge
push
pop
jecxz
lock
movsb
hlt
movsl
mov
ret
sar
stos
sbb
movsl
mov
gs
stc
jb
xchg
fdivrl
lods
push
jns
incl
test
movsl
sub
push
insb
and
fs
movsl
push
ss
sbb
rcll
sbb
cld
jb
cmpsb
lods
xchg
cmp
jp
icebp
cs
data16
sbb
rcl
push
jno
loopne
sti
in
fdivl
lds
fisttps
adc
sub
cmp
xchg
jecxz
add
add
out
or
icebp
pop
in
dec
xlat
mov
jnp
and
shl
lahf
mov
imul
cltd
mov
leave
pop
aaa
cmpsb
pop
sub
and
mov
cmp
test
push
and
add
push
lods
imul
shl
loopne
add
mov
push
adc
xchg
sub
insb
dec
outsl
adc
push
in
inc
cli
push
je
dec
cmp
pop
cld
xor
mov
adc
push
xchg
mov
and
push
notb
rolb
mov
xor
flds
push
or
mov
aas
icebp
mov
cmpsl
call
inc
sahf
push
push
jne
mov
jecxz
insb
adc
jb
outsb
out
out
add
int3
cmp
add
add
and
lods
adc
and
adc
push
xor
jno
xchg
mov
jl
cmp
js
push
mov
sbb
addr16
and
push
mov
and
lods
push
jmp
and
sbb
mov
roll
js
stc
call
pushf
xor
into
cltd
cmp
xchg
ret
inc
popa
std
push
jbe
lds
hlt
and
mov
pop
cmp
jl
shll
pop
adc
sbb
mov
xor
inc
mov
push
and
dec
pop
mov
test
ficoms
sbb
outsb
jp
adc
mov
dec
mov
fdivs
push
ljmp
add
xor
imul
pushf
fbld
scas
daa
cmp
enter
dec
call
or
jbe
jo
clc
push
pushf
or
lahf
repz
mov
cmp
sbb
adc
stos
add
roll
pop
cli
xor
sub
ret
push
inc
call
mov
out
jge
out
add
ret
hlt
mov
cmp
aas
push
adc
lcall
dec
arpl
cld
cmp
pushf
out
filds
jo
xlat
pusha
adc
sub
push
aam
mov
dec
jnp
ja
or
mov
fsin
test
insl
xor
mov
push
jecxz
jbe
cmp
dec
push
addl
add
popf
arpl
pusha
push
push
insl
sbb
sub
iret
repnz
or
ja
es
das
push
pop
cmpsb
loop
iret
sbb
mov
mov
push
mov
inc
sti
mov
cwtl
daa
mov
neg
xchg
jecxz
leave
jle
adc
imul
in
jmp
dec
stc
scas
sahf
mov
jg
shll
add
arpl
mov
pop
jge
movsb
pusha
push
adc
xchg
push
xor
mov
push
pushf
mov
scas
repnz
clc
out
and
dec
mov
mov
mov
lds
fstps
add
dec
dec
pop
sub
fisttps
sbb
dec
je
rolb
mov
push
jl
push
jnp
push
add
incb
cltd
scas
dec
sti
addl
push
xorb
mov
je
ds
xchg
sbb
push
imul
mov
pop
jle
dec
loop
addr16
xor
mov
int
jns
mov
imul
repz
mov
mov
call
cs
adc
ret
push
repnz
jne
jae
push
dec
mov
int3
cmc
and
sub
cmp
mov
ret
jnp
lds
pop
xor
mov
jns
jmp
lods
mov
xor
dec
add
add
nop
push
lahf
int
mov
aas
call
jo
inc
inc
jae
xchg
ficompl
gs
scas
or
fildll
aam
out
dec
arpl
aad
jmp
and
mov
pushf
push
push
xchg
sahf
fdivs
mov
cmpsl
ret
dec
xchg
test
scas
xor
outsl
not
not
dec
mov
aam
push
loope
ljmp
mov
xlat
orl
cld
xchg
enter
xchg
xchg
pusha
push
dec
mov
mov
cmp
movb
jbe
sub
jp
push
daa
shrl
push
mov
fwait
mov
xor
push
or
scas
xchg
daa
and
pop
add
jp
inc
pop
cmp
adc
add
and
mov
mov
imul
fcompl
sbbb
test
inc
jmp
dec
mov
cmp
dec
and
cmp
jns
rclb
lcall
inc
stc
repnz
cli
pop
adc
sarl
xor
imul
inc
lret
aad
stos
cmp
sub
cmp
daa
fidivrl
jge
inc
out
mov
pop
arpl
mov
add
lods
cmp
aas
xchg
ficoms
ljmp
mov
scas
dec
addr16
jmp
mov
mov
fidivl
daa
sar
or
push
es
or
dec
cltd
ljmp
sub
xchg
fldt
mov
dec
sbb
pushf
xor
jnp
push
outsl
mov
sahf
into
xor
ja
scas
scas
pop
cmp
sti
leave
sti
stc
movsl
inc
inc
lds
lods
mov
ret
jg
shrb
movsb
adc
fnstcw
pop
popa
dec
ret
scas
inc
or
ret
xor
sub
add
stos
add
aam
bound
sbb
mov
arpl
scas
int3
in
popf
cs
pop
cmpsl
in
insb
int
arpl
dec
inc
push
es
mov
rcl
lock
push
inc
sti
movsb
sbb
hlt
inc
sahf
in
in
je
mov
sbb
outsb
cld
outsl
popf
adc
scas
sub
jg
mov
cmp
pop
lods
mov
gs
fistpl
lods
xchg
xor
sbb
mov
push
dec
jae
loopne
xchg
test
pop
cmp
mov
rcrl
inc
pop
aad
aam
mov
mov
and
jmp
add
fcomip
dec
stc
jnp
out
and
pop
and
mov
scas
sub
mov
pand
dec
gs
mov
stc
fiaddl
cmp
add
imul
mov
jecxz
test
loope
fisubrl
dec
mov
inc
scas
lds
jl
add
jl
mov
lahf
mov
jmp
dec
pop
imul
pop
data16
addr16
inc
add
nop
cmp
fdivp
pop
push
imul
in
mov
dec
mov
xchg
xchg
fwait
int
pop
add
push
jl
jb
fcomp
lahf
add
incl
aad
xchg
popf
cmp
dec
or
lds
push
cltd
inc
mov
imull
subb
icebp
push
stc
das
out
cmp
jae
shl
xor
repz
fwait
push
es
mov
popf
mov
loopne
pusha
push
mov
or
stc
inc
mov
sbb
mull
inc
push
jecxz
stos
mov
adc
movsl
es
add
dec
test
jg
add
cmp
js
inc
sarl
dec
lahf
mov
sbb
hlt
inc
or
inc
icebp
dec
push
mov
lahf
stos
cltd
iret
mov
cltd
test
iret
jle
adc
mov
add
movsb
pusha
xchg
xchg
push
lds
pop
mov
shl
and
cltd
push
cmpl
and
push
xor
dec
or
push
std
nop
dec
lea
ret
mov
xchg
jnp
rcr
hlt
ss
cmp
test
xchg
mov
test
bound
mov
fcomp
push
cmovae
push
cli
push
lock
inc
cmp
cmp
pop
shr
cmp
mov
stos
add
cmpsb
pop
daa
xchg
dec
cmp
inc
mov
imul
jnp
in
loope
out
inc
movsl
sub
dec
adc
mov
aas
dec
ficomps
stos
into
movsl
push
sub
inc
bound
bound
faddp
sbb
insl
and
shll
add
dec
jmp
imul
xorb
mov
out
sti
fs
sti
arpl
mov
addr16
dec
stos
mov
clc
mov
dec
cmp
jb
mov
push
cld
pop
xlat
int3
jo
je
jp
push
jno
xor
jno
incb
insb
clc
mov
fstl
ret
and
test
xor
cmc
push
xorb
cmp
or
dec
aaa
jae
xor
add
mov
loope
jae
nop
adc
insb
or
pop
xor
rclb
stos
ss
or
hlt
dec
adc
mov
mov
scas
das
mov
mov
jb
out
lret
aam
cmp
jmp
int3
adc
lret
fiadds
sub
ficoms
in
icebp
out
cmp
cmc
adc
insb
mov
fsubl
mov
sub
inc
shl
xchg
in
cltd
js
sub
lods
icebp
lret
enter
gs
add
cmp
jns
scas
inc
xchg
clc
mov
out
xor
jae
lcall
pop
or
dec
test
xor
and
inc
jno
lods
sbb
sub
stc
ficompl
out
test
xchg
bound
adc
pop
dec
rolb
sbb
stos
pop
xchg
jecxz
xor
das
outsl
dec
int3
or
fmul
lds
pop
or
mov
nop
das
mov
xor
je
xchg
adc
fcoms
push
es
mov
xlat
mov
int3
mov
lods
jl
dec
pop
jb
sub
in
outsl
outsb
mov
subl
test
pop
jecxz
stos
mov
sbb
mov
ss
cmpsb
mov
in
xchg
and
aaa
popf
xor
outsb
mov
or
pushf
sarb
jg
imul
faddl
ret
mov
lds
xchg
ljmp
cmpsl
mov
lret
jmp
jl
or
pop
add
dec
mov
inc
mov
fdivs
popa
inc
adc
repz
cmpsb
aam
dec
xor
mov
pop
push
repnz
adc
scas
mov
rorb
xchg
ret
pcmpeqd
jmp
hlt
sbb
mov
out
std
add
pop
aad
mov
lds
xchg
ret
mov
dec
mov
bound
sti
clc
mov
dec
mov
xor
test
icebp
mov
xchg
sub
sar
add
dec
xor
jmp
sub
cld
into
ja
add
push
cmp
add
shrl
mov
out
dec
mov
dec
jo
mov
icebp
dec
mov
and
fisttpll
mov
mov
loopne
je
cmp
xor
mov
dec
mov
sub
fldcw
les
jnp
rorl
shl
jp
push
mov
fmuls
mov
enter
xor
mov
in
testb
mov
and
lea
loop
adc
xchg
sbb
mov
out
cwtl
movsl
leave
and
adc
and
movsl
sub
scas
in
shr
push
mov
adc
lods
pop
fnstcw
cmp
imul
xor
out
xor
jns
and
push
repz
les
fucom
shl
jo
stc
in
insl
pop
sti
shll
cmp
mov
fildl
imull
xor
popf
pop
xchg
dec
lods
scas
dec
mov
scas
test
mov
fistpl
mov
or
pextrw
jae
cmp
int3
sub
adc
stc
aaa
js
push
imul
push
xchg
add
inc
pop
inc
lock
adc
push
adc
movsl
fimull
les
push
mov
ja,pt
data16
inc
mov
cmp
insb
insl
sbb
leave
sbb
jb
shl
cmpsl
and
sbbb
xchg
sahf
xchg
cwtl
cmp
pop
jbe
or
lret
outsl
mov
dec
dec
loopne
cmpsb
jns
jbe
stc
adc
cmp
imul
outsl
jecxz
push
sub
jmp
bound
lds
cmpsl
mov
mov
cmpb
jae
mov
out
xchg
and
add
lods
lret
mov
cmp
inc
mov
jg
jecxz
andb
pop
sbb
imul
cmc
mov
mov
pop
jne
rep
cmpsb
mov
add
jmp
pop
sbb
data16
push
xchg
cmp
mov
shll
and
pop
popa
aam
out
xor
push
aam
inc
cmp
testb
dec
push
shrl
fistps
addl
mov
jmp
mov
mov
lds
jne
dec
out
out
pop
pop
jmp
pusha
es
lock
fs
xchg
adc
arpl
mov
outsl
dec
arpl
in
es
repz
or
insb
addr16
repz
enter
push
andl
lcall
in
add
stc
push
les
js
into
mov
mov
clc
imul
jmp
out
inc
shll
push
scas
orb
test
jne
das
jo
loop
pop
aam
js
imulb
xchg
hlt
insb
sbb
out
popa
push
shrl
add
inc
sahf
fcomp
test
push
dec
rcrl
in
adc
out
and
adc
dec
dec
jo
sub
fcom
shr
add
inc
and
adc
mov
mov
test
sbb
jne
movsb
aad
int
cltd
jmp
sbb
bound
fcomps
sbbl
fldcw
scas
cmp
xlat
mov
xlat
add
les
sbb
loop
mov
lods
jbe
test
cltd
jg
test
add
push
cmp
dec
faddp
cltd
scas
xor
out
sub
mov
fcmovu
inc
push
addr16
popf
idiv
fbld
aad
sbb
pop
cltd
dec
inc
repz
or
inc
pop
pop
add
out
and
in
xchg
mov
cltd
add
cmpsl
insl
fidivrs
dec
add
in
mov
mov
jg
imul
popf
push
inc
sarb
int3
and
cmp
push
lret
notb
xor
fisttpll
pop
xor
xor
cli
out
jg
mov
and
test
sub
movsl
call
popa
pop
mov
arpl
push
popl
icebp
inc
sbb
lret
push
insb
cmp
mov
stos
or
mov
das
cs
frstors
fsubrl
cmp
scas
mov
lea
add
dec
mov
mov
mov
add
bound
push
mov
aam
cltd
cs
push
das
outsl
mov
adc
push
lea
data16
jns
test
xor
shlb
push
cmpsl
std
push
int3
lahf
lret
mov
mov
fs
cmp
jmp
jb
test
mov
add
fs
int3
and
adc
aad
pop
lods
shrd
int
loope
inc
or
js
lret
inc
in
cmpl
xorl
adc
sbb
lret
push
inc
pop
xlat
fcoms
and
ret
xchg
js
pop
cmp
ds
iret
push
iret
xor
scas
jmp
dec
loope
mov
into
mov
sbb
xor
or
movsl
or
ljmp
hlt
xchg
inc
lcall
sbb
jmp
mov
stos
push
lret
int
jge
out
in
mov
test
adc
or
mov
int3
ret
cmp
adc
and
jbe
inc
push
add
dec
jl
data16
pop
xchg
rorb
outsl
rcr
rcl
jl
mov
xor
insb
or
insb
imul
mov
ljmp
stos
jns
iret
test
pop
mov
sub
pop
arpl
jne
in
cmp
mov
jl
sub
pop
mov
xchg
mov
or
pop
insb
outsl
and
in
mov
dec
push
jmp
sar
add
mov
aaa
inc
lret
icebp
cld
push
addr16
pop
push
add
fwait
insl
mov
add
in
mov
cmp
lods
dec
inc
int
inc
adc
ds
adc
lods
mov
mov
aas
inc
pop
inc
cmp
js
loope
dec
rolb
xchg
orl
ja
pop
sub
out
fidivrl
fmuls
xchg
xor
ret
add
incl
iret
mov
out
or
sub
js,pt
mov
lock
dec
loopne
dec
lods
out
jo
add
fisubl
mov
lahf
jecxz
cmp
js
lods
and
inc
je
sti
pop
and
xchg
fadds
je
and
mov
fcoms
dec
mov
push
outsl
movsl
dec
ret
decl
les
arpl
repz
loope
roll
cwtl
cmp
xchg
mov
sarb
inc
push
js
push
mov
or
dec
inc
es
orb
cmpl
jo
sbb
addr16
sbb
jmp
pushl
jle
ljmp
add
inc
xchg
es
mov
mov
add
pop
cs
xchg
cs
mov
outsl
jmp
aad
dec
lds
and
pop
adc
inc
pop
loope
mov
push
mov
rol
mov
inc
icebp
fidivl
test
mov
faddp
scas
ja
dec
scas
repz
js
arpl
mov
sub
or
cld
aad
jae
cwtl
inc
jp
or
scas
iret
sti
imul
fcomi
inc
push
inc
dec
jnp
ljmp
jp
mov
mov
mov
fildll
mov
movsl
arpl
out
fstl
divb
add
xchg
push
mov
push
pop
insb
cmc
stos
jmp
les
jecxz
push
sbb
dec
int3
and
call
xchg
cmp
jge
pusha
clc
rcr
lahf
and
daa
and
adc
xchg
cltd
sub
pop
add
sub
pusha
mov
or
je
push
insl
popf
stos
jns
in
and
mov
push
xor
call
pop
add
popa
jo
out
mov
into
icebp
ret
sub
arpl
lods
xchg
fisubrl
aaa
adc
sub
adc
fnsave
lea
imul
xor
ret
cmp
push
mov
aad
cmp
bound
rorb
aaa
xor
jl
and
mov
rolb
sbb
jno
scas
or
add
icebp
jae
inc
fistps
or
pusha
xor
dec
cmp
in
sbb
push
jp
in
lea
mov
icebp
aaa
int
out
stc
iret
sub
mov
add
aas
fnstcw
and
adc
fs
adc
inc
outsl
outsb
cmpsl
sbb
xchg
fdivr
call
stos
cmp
or
push
popf
sub
scas
pop
shlb
int3
decb
test
out
mov
pop
lock
mov
adc
movsb
sahf
mov
inc
dec
nop
clc
aaa
repz
pop
pop
int
arpl
fists
addr16
cli
aad
dec
xchg
inc
sbbb
in
jb
jbe
pop
daa
addr16
inc
mov
push
push
xor
in
xchg
mov
stos
jne
daa
popa
and
adc
xor
xchg
pop
push
cmp
jle
mov
and
push
pop
loopne
xchg
mov
sahf
pop
ficoml
ficoml
in
xchg
cmpsl
testb
hlt
mov
shr
test
arpl
mov
and
dec
faddp
int3
push
inc
lock
cld
arpl
xor
sub
pop
pop
test
jmp
jp
cmpsl
xor
xor
jg
mov
loop
pop
fnstsw
pushf
aad
xchg
call
cmc
fistpl
mov
mov
add
mov
test
cmpsl
aas
imul
pop
dec
mov
lds
sbb
pop
scas
fs
xchg
iret
rorl
mov
mov
cmp
std
xchg
into
test
pop
mov
mov
pop
and
or
testb
cmp
cmp
test
shl
js
pop
outsb
and
pop
mov
fldt
cs
jae
cs
cmc
iret
push
pop
js
jns
push
push
or
lods
pushf
push
ret
pusha
fstl
arpl
sub
lds
jno
jl
sub
aam
cmpb
mov
movaps
mov
in
sarl
adc
cmp
pushf
push
mov
mov
cmp
loopne
aam
enter
jg
loope
inc
cwtl
fs
sarb
mov
jle
sub
shrl
jb
mov
repnz
rorb
mov
cmp
int3
loopne
pushf
mov
jne
jge
popa
push
mul
cwtl
arpl
iret
fiaddl
ret
add
subl
pushf
pop
pop
mov
out
pop
sub
test
mov
jne
bound
jo
dec
rolb
push
push
loop
xchg
test
sbb
lcall
cmp
jp
imul
fwait
mov
stc
mov
aad
sbb
out
mov
cmp
jl
fldl
cmp
cmpsl
cmp
daa
rcr
pop
and
sub
push
jae
cltd
adcb
jl
mov
hlt
or
ret
xor
xchg
arpl
sbb
sbb
mov
data16
cmp
lods
rcl
das
add
mov
push
pop
and
add
xor
mov
pop
xchg
in
xlat
add
mov
movsb
adc
in
test
insl
rcr
jbe
jmp
sbb
push
addr16
rolb
cmpsb
sub
pop
and
adc
and
rcr
ret
mov
les
mov
cmp
xor
int
jmp
dec
and
inc
or
pop
cmp
shl
aaa
push
mov
fnstsw
test
orl
and
dec
jl
aad
stos
mov
fidivs
cmp
int
mov
in
jg
lock
ret
sbb
sub
mov
push
out
mov
or
das
sbb
xlat
push
insb
aad
jge
mov
fdivl
ja
or
or
inc
jne
jno
bound
sbb
les
sbb
in
dec
dec
loopne
add
mov
cmpsb
neg
pop
push
mov
push
xor
jp
and
push
movsb
xor
adc
mov
sbb
jge
js
ds
xor
div
inc
nop
out
in
mov
ja
fistpl
cmp
hlt
loopne
in
xor
lock
popa
mov
xor
and
inc
enter
out
mov
xchg
inc
and
movsl
push
daa
outsb
inc
faddl
dec
subl
cmp
or
scas
in
push
sbb
xchg
neg
out
mov
inc
pop
shr
cmp
popa
sbb
out
imulb
add
dec
cld
jbe
movsb
lods
dec
mov
negl
and
push
test
push
xchg
sbb
mov
sti
jne
push
pop
fidivrs
add
shrb
mov
push
dec
daa
stos
xchg
add
das
int3
sub
pop
cwtl
inc
cld
outsb
insl
clc
adc
or
mov
xchg
dec
cmpsb
jb
fnstenv
je
pop
stos
or
call
xchg
jbe
adc
pop
xor
in
repnz
scas
shlb
or
add
dec
clc
and
bound
sub
jns
push
stos
aas
xlat
mov
jge
stos
sbb
xchg
adc
ret
fwait
add
lahf
inc
push
icebp
roll
xor
lahf
mov
xchg
sbb
mov
jne
mov
cmc
data16
int3
pusha
sub
push
mov
xlat
bound
jns
pop
push
lods
cmp
sub
push
mov
shll
rcll
jge
add
push
imull
sti
das
movsl
xor
adc
sbb
aam
mov
div
sbb
ljmp
mov
mov
pop
sub
out
pop
pop
je
scas
fsubrl
lret
ja
xchg
divl
ffreep
mov
hlt
ljmp
inc
xchg
jb
js
cmpb
pop
mov
loope
enter
jno
lret
dec
iret
mov
mov
je
jle,pn
mov
inc
pop
inc
scas
add
inc
sub
sbb
mov
xchg
ds
ror
out
in
jno
imul
shlb
xor
or
lahf
xor
lods
stos
and
scas
add
outsb
lcall
ljmp
jo
add
inc
dec
mov
movsl
mov
outsl
out
adc
das
sarb
and
jno
fbld
cmp
xchg
lods
sub
out
or
adc
dec
pusha
call
call
adc
jns
fdivs
cmp
push
lds
cmp
daa
or
mov
jge
cmp
add
insb
popa
rcrb
or
fsubl
xchg
jp
mov
inc
ss
mov
xchg
mov
mov
dec
pop
pop
loop
adc
int
dec
dec
add
aas
jns
mull
adc
shll
adc
pusha
pop
lcall
xlat
jne
fwait
enter
sub
push
pushf
data16
leave
xor
sub
fsub
in
and
loopne
push
push
movsb
or
mov
xor
jl
lock
mov
or
pop
jno
adc
sbb
jp
negb
pop
subl
repnz
inc
cld
out
pop
push
jo
and
add
cld
sub
cmp
das
jne
mov
cmpsl
lods
push
mov
push
stos
cmp
jnp
lret
push
pop
movsl
js
inc
xchg
lock
cmp
cmp
test
and
jge
and
outsl
movsl
stos
sbb
fldt
or
sub
rcrl
stc
dec
dec
cmp
movsl
dec
aad
pop
popf
inc
xor
push
xor
xor
and
jp
lret
lea
cli
rcr
cmpb
xchg
mull
mov
push
or
popf
cmp
jl
dec
popf
jle
call
test
int
push
outsb
int
dec
ret
dec
in
dec
repz
mov
int
pop
icebp
into
xchg
push
adc
stc
mov
gs
sbb
lods
test
lcall
test
cltd
addr16
dec
mov
movsl
packsswb
or
jp
push
test
xor
lea
or
jno
gs
lea
imul
bound
or
xor
repnz
adc
loopne
xchg
subl
movsb
mov
xchg
adc
shrb
shlb
ja
leave
fsub
fiadds
xchg
sub
pop
loop
jne
jo
dec
mov
orb
push
jno
jg
and
inc
pop
dec
rolb
call
aas
pushf
std
pop
jno
xchg
fisubrs
dec
sbb
cli
call
outsl
add
sbb
xchg
out
adc
cmpsb
inc
push
outsl
mov
jg
out
pop
inc
cmp
mov
sub
pushf
pushf
push
add
inc
scas
mov
add
or
leave
or
lret
xchg
mov
cld
int3
dec
stos
cmp
cmp
xchg
cmp
enter
add
stos
les
mov
mov
cmp
popa
orl
imul
movsb
push
or
mov
insb
out
movsb
lds
pop
xlat
mov
shll
lods
lods
inc
je
mov
mov
icebp
in
fcmovne
incl
aaa
mov
sub
out
ret
mov
int
int3
mov
and
cmp
add
xchg
and
in
cltd
mov
xor
add
iret
jmp
add
mov
mov
bnd
cmpsb
je
popa
lea
push
mov
shlb
or
xor
sbb
mov
sub
nop
cmp
adc
ja
mov
ljmp
cmp
push
sbb
xor
scas
fcoms
push
out
mov
xor
sub
call
mov
fcoml
ret
jp
xor
adc
mov
das
cmpsl
fcompl
mov
mov
xor
dec
mov
jb
cwtl
in
dec
call
add
or
in
mov
sahf
mov
leave
xor
testb
mov
jge
or
lahf
lds
popa
fdivr
jnp
add
push
mov
data16
mov
push
int3
fstpt
mov
pop
add
call
rclb
shrb
dec
jb
cld
je
mov
sbb
xorb
aas
cmp
es
cltd
inc
daa
repz
jmp
jb
test
pop
jnp
add
scas
fimull
test
push
neg
cmc
mov
shl
cs
icebp
imulb
dec
das
jae
iret
ret
roll
and
ror
pop
jmp
sbb
jnp
stos
jnp
stc
mov
ret
xor
mov
nop
lret
sub
or
mov
je
sbb
xchg
xor
mov
and
add
cli
add
arpl
jle
pushl
out
addl
jecxz
aaa
outsl
push
mov
mov
mov
jb
jo
mov
gs
xchg
pop
mulb
imul
pop
push
push
cmp
lods
push
jg
xchg
push
loop
imul
xchg
enter
xor
in
pop
or
or
loop
adc
pop
loop
out
stc
sub
outsb
fbstp
in
addr16
sbb
xorl
adc
popf
std
and
scas
lock
push
mov
adc
push
dec
ja
add
psubsw
lahf
adc
addb
mov
js
mov
data16
mov
fs
fincstp
and
adc
jl
pop
or
push
cmp
aaa
mov
add
call
push
or
mov
sub
aad
inc
xor
push
push
push
xchg
jp
xchg
cmp
subl
fisttpl
popf
in
lds
mov
arpl
push
mov
fs
adc
aaa
test
sub
repnz
inc
mov
int
add
in
push
xchg
testb
dec
fsubl
cwtl
dec
jmp
and
hlt
std
repz
in
repz
cli
cmp
sysret
movsl
aas
mov
in
cmp
sbb
test
sub
jge
cli
xchg
jmp
or
mov
jae
popf
add
lcall
prefetcht1
cs
push
bound
jo
stos
jno
addr16
iret
in
jo
sbb
lods
mov
mov
push
inc
cmp
ror
lds
stos
or
jo
ss
jbe
and
fistpll
repnz
push
mov
cmc
in
gs
mov
fnstcw
add
ja
or
pop
outsb
add
or
xor
roll
sub
dec
pop
notl
rcl
add
bound
xchg
xchg
lods
push
ffreep
sub
scas
clc
xor
sarb
mov
sarb
in
fldt
enter
jno
scas
fldl
cmp
inc
push
dec
leave
or
mov
ds
sbb
dec
cmp
and
ret
out
repz
add
gs
mov
sub
insb
lea
pop
add
repz
outsb
cld
mov
orl
fisttpl
sub
stos
pop
je
push
push
or
enter
mov
adc
mov
lahf
mov
daa
loope
pusha
test
aaa
out
xor
mov
mov
je
xchg
push
push
movsb
dec
shll
and
sti
add
cli
push
sub
dec
scas
fnsave
fcmovbe
loopne
adc
xor
push
mov
pop
pop
dec
mov
inc
fistl
lea
jl
dec
outsl
mov
adc
test
and
imul
jmp
inc
xchg
fsubs
cmp
lret
and
popa
push
repz
mov
lahf
push
cmp
or
xchg
mov
roll
adc
aad
cs
ja
ja
dec
jge
icebp
sti
mov
lret
rorl
mov
js
push
cmp
ds
out
clc
xchg
xchg
mov
in
inc
call
cmp
xor
adc
push
int
xchg
outsb
stc
xlat
push
pop
add
nop
out
xor
out
mov
scas
test
sub
es
test
jno
and
nop
xlat
lds
xor
nop
mov
cmovns
jle
inc
inc
js
lods
scas
fidivl
in
pushf
pop
xor
fldl
push
inc
mov
adc
xchg
adc
or
pxor
adc
sub
pop
xlat
mov
inc
orl
jno
cmp
mov
xor
cmp
movsb
pusha
jno
lret
mov
cmc
sub
xor
mov
or
add
dec
or
clc
dec
dec
fbstp
push
sbb
jecxz
loope
and
dec
sahf
mov
cmpsb
ret
imull
lret
loopne
xchg
pop
jno
cld
sbb
ja
das
lret
lock
cmp
outsb
cmpsl
imul
mov
push
push
rol
sbb
call
repnz
movsb
sub
fsubrs
negl
xchg
cmpsb
jno
mov
loope
cmp
mov
fldt
nop
xchg
insb
fists
push
add
push
inc
clc
mov
jmp
inc
adc
arpl
js
je
mov
xlat
sub
ss
cmp
shr
imul
push
rcrb
adcl
pop
stos
pushl
fs
xor
fcomp
dec
or
repnz
mov
psrld
rolb
sub
mov
xchg
or
xchg
add
xchg
adc
das
sbb
cli
shlb
or
sbb
int3
stos
or
xlat
outsl
mov
xchg
test
je
aam
call
imul
push
cmp
xchg
fistpll
fidivrs
inc
out
insl
mov
or
add
aas
inc
adc
stc
push
bound
mov
sahf
aaa
lret
lret
mov
ret
mov
fistpl
std
or
xchg
jge
cli
imul
sarb
lcall
rep
inc
pop
mov
nop
sahf
pop
cmp
movb
in
xchg
sub
xor
xchg
mov
mov
push
pop
mov
jo
outsl
sbb
or
cmp
sbb
mov
xor
inc
xor
mov
mov
mov
xchg
mov
mov
test
repz
xchg
imul
mov
loop
jmp
sbb
test
in
scas
jg
pop
int3
mov
xor
in
pop
cwtl
pop
jmp
pop
add
shll
push
push
inc
ja
jns
mov
adcl
push
ret
inc
js
mov
ret
add
sub
movsl
inc
cmp
test
pop
cmp
cmpb
je
add
mov
jns
xchg
push
arpl
mov
jae
inc
push
mov
xor
lock
mov
xor
sbb
mov
pop
pop
xor
out
or
pop
ret
push
sub
hlt
dec
mov
test
mov
xor
fcompl
inc
xchg
adc
mov
sbb
decl
sbb
fists
or
add
inc
xchg
or
xchg
and
aas
xchg
push
lret
push
sub
and
mov
fstpl
rorb
inc
gs
mov
pop
adc
and
push
inc
jmp
jne
imul
push
add
je
fbstp
test
and
push
addr16
ret
popa
es
sbb
clc
arpl
add
dec
and
fistpll
loop
push
inc
cli
mov
cld
in
decl
loope
cmpsb
mov
cltd
dec
icebp
inc
mov
sub
in
pop
loopne
mov
sahf
jecxz
data16
xchg
sub
ljmp
je
jo
jle
dec
add
call
inc
pop
mov
mov
xchg
or
clc
push
pushf
pop
add
mov
pop
mov
out
xchg
test
and
fidivl
dec
sahf
mov
pop
movsb
lret
xor
insb
push
xor
pop
push
pop
je
mov
mov
movsb
cltd
repz
cmpsb
decb
push
jo
insb
push
and
mov
ljmp
sbb
ret
inc
lret
cmp
xchg
jg
repz
and
cmp
bound
ja
mov
push
test
sbb
ficompl
mov
fwait
lret
sbb
add
dec
and
mov
pushf
fwait
inc
add
lock
mov
dec
lods
cmc
in
add
iret
push
ja
jl
insl
and
aad
xorl
ds
xor
jnp
repz
hlt
clc
xchg
cwtl
or
je
sub
leave
js
push
loop
lret
fsts
lods
subb
adc
add
cwtl
aas
in
sub
pop
popf
aad
and
lcall
push
leave
add
xchg
hlt
dec
dec
mov
lahf
mov
inc
add
int
pop
sbb
icebp
rorb
aad
mov
loope
inc
xchg
mov
in
pop
sbb
pop
popf
xor
inc
cld
xchg
or
push
xor
sub
lret
push
loop
xchg
movsb
scas
stc
add
push
call
test
ficoml
test
add
stc
mov
or
xor
cmp
adc
mov
adc
ja
adc
fidivrs
aaa
das
rcll
and
jb
dec
xor
mov
sub
movsb
lea
mov
mov
lcall
pop
sub
aas
gs
and
pop
mov
mov
jl
add
or
insb
xchg
inc
out
adc
sahf
cmp
cmp
hlt
imul
sbb
push
call
out
and
ss
sub
xchg
aas
pop
cli
sti
sub
and
dec
push
ss
cltd
icebp
ficoms
xchg
inc
add
std
pop
xchg
stc
jge
out
xchg
mov
ds
arpl
mov
insl
ret
dec
jo
shr
pop
outsb
scas
sub
push
add
xor
fisttps
push
mov
cmp
fcoms
mov
jecxz
mov
fmull
dec
adc
xchg
xor
sbb
dec
cmpsb
nop
and
bound
mov
stc
mov
scas
stos
in
icebp
cld
shlb
jecxz
ffreep
cmpsl
hlt
jecxz
outsl
adc
or
loope
in
mov
mov
sub
adc
ljmp
mov
imul
or
jnp
lock
mov
xchg
xlat
cmp
loop
pop
push
loopne
cmp
fcoml
or
movsb
fstp
mov
movsl
mov
test
outsb
mov
xchg
push
jns
xchg
sbb
mov
enter
sbbl
jge
pop
test
iret
das
arpl
xlat
inc
aam
or
aad
insl
cld
or
jno
sti
dec
imul
je
cwtl
mov
push
cli
aaa
mov
daa
ja
fs
xchg
clc
aam
pushf
lock
lret
xor
xchg
push
fcmovne
ja
hlt
ljmp
int
push
arpl
add
cli
pop
inc
xchg
out
jnp
dec
mov
das
mov
jno
imul
mov
je
dec
pop
cmp
mov
scas
mov
sbb
fbstp
mov
jnp
fcmovnu
test
clc
int
fdiv
lods
sbb
push
and
mov
fdivrl
inc
adc
hlt
lret
data16
and
ud2
dec
clc
push
push
or
mov
jo
mov
pop
mov
test
push
push
mov
test
xlat
test
movsb
sbb
xchg
add
cmpsl
lds
pop
aas
popf
ja
gs
and
jecxz
sub
jl
scas
and
test
pushf
shr
mov
xor
mov
jmp
arpl
and
lods
lock
adc
loop
ret
cmp
test
lcall
popl
out
cli
fnsave
das
pop
lret
dec
movaps
cmp
push
adc
xor
push
lock
add
test
jmp
in
mov
sahf
push
stos
sbb
lods
xor
pop
jns
cmpsl
sub
xchg
stos
insl
push
arpl
xlat
cmp
fsincos
insl
xchg
mov
mov
stos
sbb
cli
fiadds
mulb
adc
pushf
nop
dec
xchg
adc
xlat
into
fidivrl
mov
test
sar
pop
dec
or
jns
fcmovne
add
mov
inc
in
icebp
adc
jmp
lret
in
jae
jge
ljmp
scas
lret
and
lret
cmpsl
push
int3
cs
rcrl
xor
fistpl
xchg
divb
les
mov
dec
xor
jmp
or
sub
icebp
add
mov
adc
fldenv
ret
lods
xor
add
and
jbe
mov
fwait
mov
jge
adc
sbb
in
stc
inc
xor
imul
call
push
sub
aad
out
movsb
or
jbe
xlat
mov
les
lret
or
inc
ss
jp
mov
mov
cmpsl
jge
pop
mov
out
fisttpll
pop
sbb
mov
push
xor
es
pop
icebp
into
and
shll
aas
lret
push
hlt
cmp
fnstsw
mov
test
jo
cs
push
outsl
sti
add
mov
cwtl
in
in
and
sbb
add
mov
pop
add
and
inc
sbb
pop
lea
push
push
jo
mov
popa
outsb
jle
testb
fbld
filds
mov
fcmovnb
fistps
cmp
in
jge
lods
pop
into
add
dec
mov
add
arpl
xor
popa
fstl
aam
adc
mov
int
push
sbb
mov
outsb
insb
mov
cmp
insb
push
fisubs
aam
xor
gs
push
ret
add
repnz
les
in
das
dec
push
jmp
xchg
mov
scas
lcall
out
pop
push
add
pushf
bnd
add
clc
mov
sahf
mulb
adc
loope
xchg
scas
mov
aaa
stc
sub
inc
inc
xchg
xchg
sub
mov
mov
int
jle
jnp
mov
pop
test
xor
cmp
ficomps
rcrb
icebp
mov
fs
and
xor
jl
adc
dec
nop
movsb
pop
sarl
fldenv
xchg
popa
mov
in
fisubrl
cs
xchg
test
enter
ret
pop
outsl
pop
sbb
andb
ss
mov
ret
movsl
adc
mov
adc
mov
leave
adc
dec
cmp
pop
mov
in
ret
jg
mov
dec
mov
mov
xor
vhsubpd
int
shr
ficompl
test
icebp
loope
inc
adc
ret
lcall
pop
nop
dec
xchg
aas
inc
jne
push
cltd
cmp
dec
lahf
inc
nop
enter
test
in
insb
movsl
test
jecxz
pusha
pop
fwait
dec
dec
jle
mov
inc
mov
negb
pop
add
adc
jno
or
cmp
shrl
mov
pushf
sub
sahf
adc
outsb
pop
sar
div
fwait
stos
rcll
push
mov
repz
fs
mov
mov
or
cltd
dec
bound
add
cmp
dec
sbb
mov
mov
or
sub
cmp
push
or
cmp
xor
test
mov
and
in
aas
lock
out
add
das
imul
jl
pop
xor
cmp
jbe
nop
mov
xor
leave
lods
enter
shrl
stc
fdivrs
das
xor
adc
and
add
rclb
push
mov
scas
dec
mov
mov
daa
jo
pop
in
xchg
xchg
cmp
mov
sar
or
push
inc
xchg
ret
and
adc
pop
sub
pop
sahf
sub
repnz
dec
mov
and
cwtl
stos
pop
xchg
mov
mov
mov
sti
popf
xlat
testl
dec
cmpsl
jne
xor
sub
cmp
sahf
mov
enter
jle
inc
inc
int
inc
testb
fiaddl
adc
xchg
and
sbb
or
push
ret
sti
push
xor
push
pop
xor
xlat
push
js
test
shr
sub
push
stos
and
fcmovb
xchg
mov
std
nop
pusha
scas
and
adc
inc
dec
cmc
push
mov
pop
mov
divl
xchg
jo
xchg
xor
into
sub
ss
add
ss
mov
sbbb
pop
pop
ljmp
sbb
test
cmp
pop
cmpsb
pop
and
dec
iret
int
daa
push
cmp
ds
scas
out
dec
or
fsubs
mov
mov
lods
xchg
sub
clc
jne
push
and
mov
sbbb
ja
frstor
ds
loopne
roll
addb
rol
or
dec
sub
into
mov
test
notl
add
shll
shll
dec
cmp
push
adc
pop
sbb
pushf
jae
mov
lds
stos
mov
fdivrs
test
bound
mov
xchg
incl
xchg
fcmovnu
jl
int3
mov
fdivs
or
iret
inc
dec
stos
data16
jae
aas
mov
jno
sub
adc
ljmp
jle
or
mov
add
push
cmpsl
clc
push
mov
rcl
sub
into
icebp
push
or
mov
adc
xor
push
push
mov
insb
and
add
ss
insb
pushf
mov
dec
movsl
ljmp
add
cli
mov
out
insb
fcmovb
das
fldenv
rclb
xchg
fiadds
cltd
pop
mov
test
shl
pop
xor
in
ljmp
inc
push
dec
dec
dec
mov
ja
loop
pop
sbbb
pushf
push
jae
fsub
and
call
bound
xchg
enter
jmp
push
sbb
fwait
movsl
mov
int3
adc
xchg
movsb
gs
jnp
scas
out
nop
dec
xchg
lcall
aas
addr16
psubsw
sbb
xchg
in
in
mov
notb
add
inc
gs
mov
cmp
add
mov
shll
lds
sub
das
pop
jge
fadds
jnp
bound
pop
jge
xchg
test
xchg
mov
adc
fsubl
mov
dec
rcl
std
andl
hlt
loopne
push
jge
cwtl
or
sbbl
cmc
or
push
int
cmp
stos
mov
or
fcompl
xchg
aas
add
addl
mov
push
mov
ret
ds
fistps
mov
mov
and
jae
jge
ret
and
fstl
mov
xor
sbb
xor
bound
repz
test
mov
xor
mov
push
jns
pop
jnp
add
divb
cmpsb
jb
sbb
adc
dec
mov
or
inc
cwtl
je
dec
into
dec
clc
jne
fdivs
jecxz
loop
cli
add
iret
or
jnp
mov
adc
push
test
inc
test
cmc
lods
fisubrl
push
lret
sbb
jb
test
and
fimull
cs
into
jp
push
out
int
cmp
fcmovnbe
out
jmp
outsl
push
lahf
outsb
add
mov
xchg
shll
pop
cmp
rolb
inc
cs
push
and
lcall
mov
addr16
jmp
mov
das
ljmp
push
and
int
pop
pop
pop
jns
lods
js
outsb
rcl
test
cld
xor
mov
js
jmp
push
mov
xchg
adc
sub
xchg
mov
push
ret
ret
call
push
add
insl
enter
outsl
sbb
inc
jbe
outsb
jbe
push
and
pop
sbb
xchg
in
pop
jno
rclb
and
and
inc
adc
test
negl
push
mov
leave
cwtl
scas
dec
inc
outsb
call
cwtl
add
dec
cmp
mov
lds
mov
movsb
jb
inc
pop
mov
loopne
mov
lcall
mov
enter
xchg
jne
sub
add
out
loope
cmpsb
es
cmpsb
xchg
pop
cmp
es
cmp
cmpsl
lcall
push
andl
imul
addr16
pusha
fistl
repz
cwtl
sbb
fsubl
add
or
popa
lea
xlat
int3
push
and
hlt
std
push
insl
stos
push
mov
inc
xchg
mov
or
aaa
pop
xchg
inc
and
inc
dec
lret
in
mov
popf
mov
inc
inc
dec
mov
jne
mov
aam
aaa
push
iret
xor
pop
in
sti
inc
jns
add
cld
movsb
mov
or
cltd
mov
jo
xchg
xor
push
add
sub
fists
mov
call
jns
pop
fnstenv
push
inc
xchg
clc
dec
push
nop
and
notl
cld
int3
mov
jmp
mov
imul
dec
jl
jge
jle
out
push
insb
push
fnstcw
dec
cmp
and
xchg
and
stos
sbb
lcall
fstl
cs
push
inc
lret
mov
das
mov
into
ret
push
sub
xlat
xchg
pusha
xchg
push
aam
fisubrl
pop
mov
cmc
imul
cmpl
js
bound
inc
mov
int
xchg
out
scas
xor
sub
fisubs
mov
xor
sbb
and
sti
inc
pop
xchg
sub
pop
jmp
mov
pop
mov
ret
mov
mov
dec
mov
sub
pop
adc
mov
cltd
pusha
adc
cmp
mov
mov
test
dec
int3
and
les
loop
out
sbb
js
div
inc
mov
mov
push
push
outsb
xchg
ret
inc
adc
jb
movsb
test
pushf
mov
sub
inc
mov
adc
aaa
add
ret
int
push
out
adc
roll
pusha
int
shl
bound
pop
adc
lahf
jecxz
fisttpll
test
and
xorl
push
sbb
adc
call
adc
addr16
insb
loopne
cmp
iret
cmp
outsb
pop
jl
jae
cltd
and
jb
insl
lahf
jp
cmp
cmp
out
dec
cwtl
push
int
jge
pop
mov
imul
cmp
dec
dec
cmpl
xchg
and
pop
call
sahf
jbe
into
les
icebp
rcrl
add
fdivs
into
in
mov
xor
lea
cmp
mov
outsl
cmpsb
enter
fnstcw
dec
or
pop
cmp
stos
xor
sub
aas
jne
mov
aad
push
lods
loop
jbe
in
ss
xor
jae
jns
jno
fdiv
and
cmp
insb
sbb
mov
std
fcmovu
fdivs
xchg
pop
cmp
jbe
mov
or
aas
int
scas
adc
sbb
sub
test
lods
mov
mov
mov
mov
pushf
inc
xchg
test
sub
dec
and
jns
rcr
xor
add
xchg
sbb
cltd
dec
or
ret
mov
fst
jle
lcall
shrl
adc
xchg
icebp
push
scas
dec
cmc
inc
pop
dec
xor
les
pop
jge
xchg
insb
push
and
fsts
mov
mov
mov
xchg
hlt
lcall
ret
mov
dec
lcall
inc
push
pop
pop
ja
lds
movl
dec
sbb
xor
js
into
fistps
mov
sbb
stos
std
and
not
add
pop
mov
sti
add
cwtl
dec
dec
inc
movsl
sbb
mov
lret
and
jb
ss
out
ja
aad
xchg
push
ljmp
out
enter
jle
stos
enter
stc
sub
xor
dec
icebp
sub
push
in
or
add
hlt
push
jne
int
cmpsl
mov
mov
lahf
add
jnp
insl
xchg
mov
std
mov
jb
dec
xchg
pop
mov
movsl
inc
fucomip
test
and
xor
xor
out
sub
and
xchg
popa
inc
cmp
andb
sahf
xchg
sub
test
addr16
pop
outsl
inc
jl
ds
fcmove
mov
aas
movl
mov
int
push
je
xor
andb
popa
lods
xchg
out
fldt
xor
jne
popf
mov
mov
in
lods
fcmovbe
enter
loopne
outsl
jg
add
lds
jle
dec
adc
pop
inc
sarb
xchg
cli
jo
int3
pop
insb
lcall
jle
aas
push
lret
jle
in
pop
les
lods
mov
stc
loopne
repnz
mov
ret
jne
imul
jmp
cwtl
sub
adc
xor
inc
mov
adc
scas
mov
fstpl
fists
hlt
je
in
aas
fcmovnbe
mov
xchg
popa
cmp
xor
push
loop
repz
xchg
push
ja
adc
jb
inc
mov
inc
into
mov
pop
orl
stc
xor
cmc
cmp
lahf
mov
rolb
sti
mov
stc
ss
out
mov
inc
push
jecxz
test
mov
je
ljmp
pop
pop
aam
imul
jo
pushf
mov
adc
dec
mov
enter
cmp
arpl
sbb
xor
push
add
pop
icebp
mov
sub
mov
pop
test
inc
pop
lret
cmp
mov
mov
push
mov
imul
cwtl
shlb
cmp
out
mov
icebp
fxch
jnp
jge
imul
jecxz
fcompl
push
inc
aam
movsl
out
repnz
adc
or
mov
jo
push
jle
movsb
test
cmpsl
iret
fst
sub
pop
rcll
cmp
and
aam
sub
xor
pop
xchg
mov
test
cmp
in
insl
scas
int
and
pop
sub
jns
iret
dec
test
sar
insl
cmp
or
insl
hlt
les
mov
push
or
int
outsb
cmp
cs
int3
xchg
popa
xor
testb
inc
or
int
mov
mov
ret
sti
inc
mov
lret
push
test
mov
neg
push
std
pop
rorb
shrb
push
les
stc
inc
lret
or
frstor
xor
repnz
cmp
in
stos
out
call
outsl
shll
mov
jno
ja
xor
sbb
aam
cmp
sub
in
inc
xchg
push
ds
pop
addr16
lea
popf
add
jmp
xchg
imul
popa
repz
jbe
stos
or
cwtl
jbe
out
cmpsl
mov
scas
mov
adc
inc
test
int
loop
add
jnp
xor
rorb
andb
insl
mov
or
bound
fs
push
jge
pop
and
pop
jmp
pop
pushf
loop
push
xchg
cmp
shrl
mov
dec
repnz
and
stos
cmc
xlat
xchg
sti
aas
mov
hlt
jne
repnz
hlt
fiaddl
sub
dec
in
adc
or
repnz
xorb
gs
jl
cmp
cmc
xchg
mov
or
inc
mov
mov
push
dec
test
mov
inc
adc
fwait
jecxz
repnz
sbb
ret
ds
dec
mov
pusha
pushf
out
push
scas
sub
pop
cvtps2pd
push
aaa
jle
nop
fdivrl
jecxz
sbb
xor
out
data16
je
rcll
test
xor
mov
or
aam
mov
pop
lret
sti
jb
xor
test
into
insl
popf
dec
and
pushf
pop
jl
daa
insb
adc
pop
ffreep
es
inc
dec
fnstsw
dec
sbb
push
nop
jnp
mov
xchg
mov
popf
int3
cmp
xchg
int
pop
stos
and
lds
cmp
sbb
jecxz
sbb
idiv
cli
mov
dec
pop
lretw
xchg
adc
divb
scas
push
cmp
xor
pop
daa
subl
push
or
mov
cld
lods
pop
sub
pop
xchg
dec
cltd
adc
mov
push
out
in
jbe
or
mov
mov
jno
das
shrb
dec
sub
mov
fistps
out
pop
ret
daa
stos
mov
sbb
std
xor
pop
pop
mov
add
data16
imul
shll
lcall
ss
ja
push
js
sub
lret
push
pop
mov
cmp
bound
sbb
or
outsl
fisubrl
fnstenv
jns
jge
add
clc
xchg
mov
stos
in
mov
aam
jb
out
iret
mov
push
mov
leave
xor
lea
xor
inc
mov
jge
lret
movsl
stc
outsl
shr
je
and
in
or
int
and
out
pop
jg
xchg
dec
js
push
sbb
ljmp
mov
imul
xor
or
pop
mov
cmp
int3
icebp
mov
adc
push
push
add
jle
xchg
ret
inc
fsubrl
ss
fstpl
std
dec
xchg
scas
dec
dec
mov
das
in
ljmp
dec
leave
incb
adc
rolb
in
mov
xchg
rclb
pop
dec
icebp
cwtl
leave
or
sub
in
lods
hlt
xchg
mul
lea
in
sbb
cmp
dec
jmp
ljmp
jle
mov
dec
mov
mov
cli
vfrczsd
lahf
adc
pop
sahf
cld
lret
pushf
dec
fwait
add
xchg
lock
stc
dec
pop
out
jg
xchg
mov
push
xor
std
shlb
jp
std
test
lock
add
popf
enter
daa
shl
jno
lds
adc
dec
adc
xchg
lcall
fadd
xchg
adc
add
push
repnz
les
fisttpll
xor
stos
adc
sbb
shr
test
xchg
jb
hlt
cmpb
push
aam
dec
cmp
nop
hlt
sub
sub
jnp
or
popf
or
adc
fldenv
mov
pop
xchg
bound
les
arpl
outsb
lret
loopne
pop
inc
mov
mov
fs
cld
lcall
aam
cltd
jno,pt
lahf
xor
je
pop
mov
push
add
loop
dec
cmp
aam
or
int
push
insb
mov
lods
push
sar
daa
movsb
dec
mov
dec
scas
jmp
xor
rcll
mov
js
hlt
jge
pop
jp
in
in
pop
loopne
lahf
je
mov
int3
push
sub
shll
jl
fnstcw
sbb
test
mov
mov
shll
xchg
fimuls
ljmp
inc
jg
loope
in
mov
mov
mov
sbb
imul
pop
cs
lcall
jmp
jge
sub
subl
mov
sbb
adc
jge
ds
pusha
pop
repz
cmp
flds
xchg
jno
mov
les
push
stos
mov
mov
leave
mov
repz
xchg
xor
mov
data16
popa
xor
inc
frstor
mov
fcomps
pop
mov
leave
mov
push
ret
sbb
mov
inc
xchg
cmpsb
push
mov
rclb
insb
idiv
sbb
imul
xchg
xor
pushf
in
cltd
xor
or
xchg
pop
cli
roll
cwtl
sbbl
mov
leave
push
inc
mov
mov
loope
or
sbb
cmpsb
pop
mov
add
std
cmp
in
cltd
loope
or
jbe
mov
adc
xchg
pop
das
jnp
xchg
cltd
outsl
iret
jle
push
movsb
push
scas
jmp
xchg
icebp
imul
dec
and
mov
cmp
scas
push
bound
and
int3
push
out
xchg
and
push
pop
lea
dec
sub
movsb
in
push
loop
mov
adc
sbb
fmull
mov
aas
out
pop
stc
repz
push
adc
add
mov
fwait
testb
pusha
test
mov
sbb
test
call
movsb
and
divl
inc
lock
sbb
jge
cwtl
cmp
dec
out
dec
rcl
dec
lret
and
jnp
rclb
xor
mov
stos
cli
push
jle
mov
bound
out
jg
ret
daa
out
mov
scas
les
pop
jns
pusha
pusha
test
lcall
xor
jo
insb
pop
mov
pop
push
sub
lahf
repnz
inc
rorb
gs
mov
pop
mov
js
daa
push
adc
fbld
sti
jmp
jb
mov
add
aad
stc
push
mov
jns
sbb
mov
popa
cmp
gs
out
fistl
add
xchg
jbe
sbb
xlat
jne
add
sub
cs
pusha
aam
sub
push
fdivrl
cmp
inc
into
aad
inc
sub
dec
or
cmpsl
and
xchg
sbb
jmp
sbb
jne
jo
xchg
pop
add
pushf
adc
popf
popf
pop
or
and
fwait
add
or
jnp
inc
sub
outsb
jbe
jb
fwait
clc
arpl
addr16
inc
push
mov
adc
test
mov
sub
push
push
and
in
cmp
cltd
sbbl
xchg
movsl
jo
ret
into
lea
push
shrl
cmpsl
mov
dec
outsb
mov
leave
sub
mov
lret
fidivrs
push
pop
mov
ljmp
int
mov
pop
testb
gs
mov
xchg
sbb
push
adc
out
adc
adc
xor
push
inc
sbb
xchg
jl
cltd
add
imul
das
scas
lea
std
fistl
mov
pop
pop
in
add
cmpl
mov
nop
pop
add
clc
lock
dec
push
sbb
sub
pop
adc
lret
xchg
orb
mov
test
test
dec
ss
mov
push
add
pusha
ja
add
dec
aam
mov
mov
arpl
push
push
adc
push
pop
fs
add
mov
jl
sbb
ljmp
mov
pusha
sub
sbb
dec
dec
cmp
ljmp
dec
fs
aaa
cmc
cmc
aad
cmpsl
je
cmc
popf
xor
sarl
sub
or
shlb
icebp
fdivs
mov
js
fld
push
push
cmp
sbb
mov
lds
sub
jnp
jnp
dec
pop
xchg
sub
sbb
aam
xlat
std
inc
test
dec
loop
inc
mov
jle
fsubl
xor
xchg
xchg
sahf
dec
or
mov
clc
sahf
cmp
iret
xor
stos
or
pop
mov
add
out
push
lea
xor
lods
push
and
xchg
xor
xchg
mov
push
je
adc
xor
gs
mov
jne
loop
adc
or
pop
pusha
xor
int3
insl
adc
ret
movsb
imul
es
jbe
cmpsb
or
push
cmpsl
leave
xor
pop
and
mov
shrb
pop
mov
pop
cld
lds
test
dec
cmc
add
sbbl
aad
js
jecxz
add
add
inc
sarb
das
andb
in
lret
int3
dec
lret
pop
lahf
xor
data16
dec
ret
shl
fiaddl
push
pop
cmp
dec
sbb
lret
mov
ja
fimuls
jl
dec
lret
shrb
jle
adc
dec
xchg
sub
xchg
push
xor
push
leave
jne
rcl
xchg
js
push
in
push
mov
shll
jmp
fnstcw
popf
pop
xchg
xchg
call
push
fs
pop
and
addl
adc
loopne
movsb
pop
push
cwtl
mov
or
pop
sub
ljmp
rclb
inc
add
push
and
xchg
fcomps
mov
cltd
and
push
push
push
in
and
dec
loop
dec
test
in
pop
xor
sub
jl
rorl
stos
leave
jne
je
unpcklps
lret
jb
jl
sbbb
jb
mov
dec
xor
mov
cmp
pop
jno
in
xchg
push
scas
dec
out
daa
addr16
mov
mov
mov
fsubrl
jl
sub
sbb
sbb
jmp
mov
test
test
push
lret
mov
mov
add
nop
inc
int
cs
adc
call
pop
loope
xchg
and
cmpsb
ret
mov
dec
sbb
xor
shrl
mov
jmp
xchg
mov
out
mov
add
test
ds
nop
push
mov
popa
mov
mov
sahf
sub
es
mov
push
movsb
orb
jns
lret
xor
mov
stos
mov
pop
mov
lahf
xchg
test
sub
xchg
adc
repz
jbe
je
call
xchg
add
idiv
and
sub
or
sub
mov
dec
cmp
cmp
jns
divl
std
lret
mov
rorw
sub
rorb
inc
xor
mov
scas
pop
fwait
stos
pop
in
stos
stos
insb
pop
mov
jb
add
sbb
inc
repz
out
insb
mov
mov
xchg
imul
movsl
leave
les
push
loope
pop
inc
or
jecxz
imul
shrb
mov
popa
fmull
add
pop
sbb
lret
cs
insl
imulb
arpl
pavgb
push
fiadds
lds
in
xor
sbb
add
daa
add
add
out
adcl
repnz
xchg
out
sub
fldt
imul
sub
xor
xchg
jp
sti
jnp
lret
mov
cmp
pop
pop
xor
outsb
cmc
mov
mov
sbb
mov
fidivrl
pop
jecxz
scas
mov
xchg
inc
dec
call
sbb
cmp
push
mov
mov
popa
nop
mov
in
inc
add
mov
pushl
dec
scas
mov
jae
add
jp
in
cltd
mov
mov
int3
and
adc
push
mov
mov
stc
dec
sbb
data16
sbb
into
add
push
mov
cmp
aam
out
mov
aas
or
lahf
xor
cmpsb
into
cmp
insb
and
mov
mov
push
inc
mov
gs
cld
icebp
ljmp
pusha
in
scas
sub
mov
int
stc
mov
adc
sbb
imul
pop
mov
jge
imul
pushf
ljmp
es
jbe
stos
mov
loop
in
es
nop
inc
shrl
adc
loop
mov
push
ret
rclb
repz
test
mov
sub
lods
push
iret
xchg
addr16
mov
sahf
dec
mov
sbb
xchg
rorb
test
fcompl
or
jp
inc
mov
scas
int3
lret
jmp
push
out
sbbl
pushf
mov
movsl
scas
mov
sti
mov
cmp
add
movsb
adc
or
das
mov
xchg
sti
inc
xor
addr16
fcmovu
aam
cmpsl
or
mov
gs
rcrl
ret
pop
pop
ja
in
or
dec
and
add
fldl2t
mov
cmpb
xor
sbb
sub
and
das
dec
int3
xrelease
cld
movsb
clc
cmpsl
sbb
mov
cltd
push
sub
sub
decl
fstpt
fwait
popa
or
outsl
stos
addr16
push
nop
and
add
mov
pop
insl
push
jb
roll
sahf
fsubs
xchg
pop
lcall
addl
gs
adc
cmp
mov
pop
sbb
push
push
sub
das
imul
out
add
clc
jl
jo
out
push
lods
hlt
jg
jg
cmpsb
fistl
outsl
inc
int3
popa
int3
iret
insb
dec
xchg
dec
mov
sub
push
mov
fcmovu
outsl
cli
mulb
lds
xchg
cmc
or
mov
adc
cmp
push
pop
sub
popf
jp
rolb
sub
jb
jae
pusha
pop
dec
dec
fisubl
in
fwait
mov
push
sub
scas
fnstcw
mov
lret
out
push
loope
cmp
scas
imul
push
stos
hlt
int
int
inc
adcl
loop
jmp
sub
push
jmp
xchg
and
hlt
xchg
arpl
mov
pop
std
inc
dec
pop
gs
sub
jle
mov
pop
ss
das
aad
pop
sub
cmc
int
push
xor
fisubrs
bnd
pop
lea
rorb
loopne,pn
arpl
sarb
jbe
and
stc
fstpl
push
ljmp
mov
arpl
inc
mov
and
fldenv
xor
outsb
and
cwtl
movsb
cmp
out
gs
popf
mov
add
push
pop
and
arpl
imul
mov
xchg
or
aad
ja
shl
or
lahf
inc
jnp
xchg
jecxz
or
hlt
pushf
cmc
idivl
mov
sub
les
xchg
aad
lea
nop
fdivrl
jg
xor
out
add
adc
repnz
xchg
fistps
cmp
inc
inc
lods
adc
scas
and
push
mov
adc
push
dec
mov
mov
jle
or
repnz
das
test
cld
xchg
sub
imul
int
hlt
sbb
adc
pop
sub
inc
mov
in
cltd
cs
cmp
jp
or
stc
jmp
ss
mov
sahf
push
or
les
sub
into
insb
and
fs
popf
and
int3
push
jne
arpl
in
push
outsb
rcrb
add
mov
jo
scas
xor
and
mov
fs
negl
jle
or
icebp
mov
roll
mov
stos
cld
iret
jge
push
or
mov
pop
inc
dec
jnp
rorb
xor
inc
sbbl
jnp
loope
sub
mov
sbb
push
mov
xchg
jg
adc
jge
adc
add
sub
xchg
ss
lahf
cmp
loope
rolb
imul
xor
into
pop
pop
ret
pop
scas
and
cld
fldt
jmp
pop
cmp
movsl
sbb
addl
sub
sbb
gs
fwait
dec
bnd
xchg
or
dec
cs
out
xor
push
fwait
test
mov
pop
dec
or
mov
imul
aam
arpl
nop
es
stos
pop
sbb
hlt
push
mov
pop
sahf
test
sbb
clc
jae
ret
out
pop
icebp
or
in
enter
mov
int
xor
lods
mov
js
and
sbb
adc
ss
sub
pop
aad
push
xlat
ret
das
enter
mov
add
mov
lcall
stos
lahf
sbb
ss
decl
mov
jp
jb
add
mov
push
jo
sbb
dec
stc
push
push
lock
jl
mulb
inc
inc
adc
cs
push
movsl
push
pop
out
xchg
or
add
xor
fimuls
fwait
lods
subb
adc
sbb
and
scas
mov
xchg
sbb
pop
push
cli
jnp
mov
insl
push
shll
xchg
dec
sarb
in
mov
loope
sub
inc
in
fdivs
jnp
aad
cmp
mov
sbb
sarl
pop
test
xor
cmc
mov
xor
das
ret
sbb
mov
test
mov
dec
out
ljmp
xchg
push
and
jb
or
sahf
ja
xchg
mov
hlt
lahf
mov
subb
mov
repnz
sbb
test
shll
ss
lret
rolb
push
mov
pop
iret
jo
push
popf
int3
cmp
inc
orb
shr
xor
aaa
loop
mov
sub
inc
icebp
fcoms
mov
pusha
ljmp
push
adc
lea
sbbb
push
pop
jp
push
into
repz
jg
jl
or
dec
pop
insl
lahf
jl
pop
dec
add
adc
rclb
leave
idivb
cmp
jg
stos
fldl
shl
test
loope
into
push
leave
inc
sbb
sbb
mov
insl
movsb
pop
mov
rorl
xchg
leave
sub
xorb
xchg
pop
xlat
add
cmpsb
test
xchg
and
popa
jp
outsl
mov
jo
test
mov
mov
mov
sub
cmpsb
addr16
and
jecxz
mov
movl
inc
cmp
imul
das
negb
mov
lcall
xchg
lea
jnp
push
cmc
gs
aam
push
xor
das
xchg
js
mov
lret
shll
or
jge
cmp
stc
dec
imul
add
ds
sub
add
out
lock
test
jne
mov
sbb
inc
mov
icebp
mov
sbb
iret
in
mov
or
pop
pop
imul
sbb
test
jmp
movsl
xor
lods
sbbl
fldcw
test
push
add
and
adcb
or
xor
cmpsb
push
jbe
std
sub
sarb
fucom
popa
inc
jno
das
and
sbb
mov
cmp
xor
insb
mov
fcoml
xor
in
push
inc
xchg
and
cltd
sub
outsl
cwtl
add
mov
ds
ljmp
jp
fdivl
inc
pop
inc
add
sub
inc
stos
pop
push
mov
sbb
jae
push
lahf
jne
rcll
adc
mov
movsb
int
cltd
push
cmp
sahf
fisubrl
movsl
pop
in
aad
jmp
sub
add
je
cltd
inc
nop
test
push
das
and
lds
test
jae
sbb
test
mov
popa
push
xlat
dec
loop
dec
sti
cwtl
xchg
cltd
stc
pusha
es
hlt
sbb
xchg
in
jno
jmp
xlat
xor
mov
sub
mov
faddl
pop
adc
pop
jp
mov
icebp
push
popa
insl
mov
jbe
adc
cli
cli
out
das
sbb
fsubrs
pop
cmp
test
mov
xchg
cmp
add
pop
in
pusha
out
stos
cmp
cmpsb
push
mov
adc
shrl
je
add
dec
xchg
aas
addl
jae
stos
xor
lret
xrelease
inc
and
inc
mov
mov
push
inc
cltd
lods
or
imul
jb
jno
fidivrs
lods
shrl
imul
nop
sahf
lods
call
push
js
dec
mov
xorl
lods
daa
dec
push
xor
xor
imull
mov
push
cmp
and
ss
rclb
fstpl
xor
lret
mov
aas
in
rolb
and
xchg
nop
gs
cmp
iret
lods
jbe
sub
scas
adc
inc
faddl
push
jb
cmpsb
repnz
mov
and
fnstcw
or
mov
test
imul
shlb
sahf
ret
xchg
das
out
leave
add
sub
lea
into
lds
out
cmpsl
fnstcw
lret
sub
xchg
ss
pop
push
sub
or
fistpl
ss
aad
popf
ss
lret
ret
bound
push
stc
bound
test
nop
pop
je
adcl
loope
sbb
mov
and
cwtl
pop
rcll
push
daa
and
stc
bound
fnstenv
sub
xchg
pop
cmpb
push
mov
sub
xchg
in
dec
and
mov
fidivrs
loope
loop
push
je
aas
divb
lcall
jecxz
outsb
les
incl
xlat
sbb
ret
int3
cmp
xchg
shlb
iret
daa
inc
cmp
push
shlb
mov
insb
imul
add
inc
iret
movsl
mov
push
push
push
sbb
xor
ficomps
faddp
or
inc
arpl
dec
ficomps
jge
cld
int3
lret
push
ljmp
inc
dec
jp
data16
in
or
pop
loopne
je
mov
pop
mov
cwtl
inc
subps
jno
pause
hlt
push
sarb
shl
pop
mov
push
jae
movsb
xchg
mov
jle
test
in
cs
lods
jle
xor
lcall
test
jns
pop
orb
fisttpll
sahf
jle
fisttpll
cmp
cmpsl
fldcw
inc
gs
mov
pusha
inc
es
outsb
jp
iret
mov
inc
pop
xchg
out
mov
xor
cmpsl
sbb
out
test
sbb
cmp
cld
mov
cwtl
cmpsb
inc
test
xor
in
out
imulb
es
xchg
mov
mov
jb
pop
fcmovnbe
xor
mov
xor
addl
pop
xchg
cmp
aad
in
sbbb
scas
ret
into
adc
and
inc
xlat
mov
lods
out
jo
cld
testl
cmp
repnz
lods
fwait
movsl
sub
adc
push
mov
dec
cmp
fildll
jl
aaa
in
and
lret
jnp
mull
outsl
jbe
into
xor
les
popa
rorb
iret
or
ljmp
dec
ret
xchg
dec
jb
sbb
push
fisttpl
cmpsl
push
mov
xlat
push
or
pushl
mov
jmp
cmpsl
sub
rclb
sub
mov
adc
ret
nop
fsubrl
pop
mov
or
scas
inc
sbb
xchg
pop
mov
mov
inc
sbb
fisubrl
mov
ljmp
js
js
lods
inc
push
jne
add
out
adc
fildl
mov
dec
xchg
daa
mov
hlt
xchg
pop
popa
inc
enter
inc
mov
out
push
jo
jp
inc
pop
mov
ds
add
fnsave
or
outsb
sub
lret
jl
pusha
mov
xchg
frstor
cmp
mov
out
in
sub
mov
dec
and
jne
push
xchg
jnp
sub
jle
adc
mov
loopne
jb
fists
in
pop
sbb
cli
mov
data16
and
out
pushf
sbb
fistl
jmp
dec
mov
pop
test
pusha
xchg
ror
iret
xor
push
rorb
xor
cmpsl
sti
lock
cmp
sbb
sbb
test
mov
or
lret
xchg
inc
mov
add
shl
leave
je
in
pop
scas
mov
sub
pop
insl
lcall
sub
sub
shlb
push
mov
adc
pop
push
add
js
dec
outsl
cmpsb
pop
das
cli
and
jns
lahf
daa
mov
or
lea
pop
lret
int3
pop
insb
mov
pop
add
mov
and
arpl
gs
outsb
cwtl
imul
xor
sahf
stc
xor
test
int3
in
mov
jae
popl
jbe
enter
pop
mov
xor
or
ds
xlat
out
xchg
arpl
enter
jbe
push
fcmovnu
pusha
mov
add
rcll
mov
jecxz
call
push
sub
outsl
popa
sub
sub
sbb
cltd
movsl
inc
adc
xor
sti
or
push
jb
aas
sbb
cmp
and
imulb
bound
aad
lods
push
mov
repnz
les
mov
inc
xor
pop
xlat
rcrl
push
lret
or
push
xor
mov
jo
aad
push
aad
mov
xchg
ucomiss
shlb
movl
cmp
push
imul
xor
in
cmpsl
dec
xor
outsl
mov
movsb
shlb
int
aam
icebp
leave
popf
xchg
lret
cli
pushaw
in
sbb
ret
dec
inc
mov
rorl
stos
cmpsl
dec
iret
test
imul
mov
cld
outsb
daa
adc
sbb
jmp
imul
js
mov
sbb
dec
xlat
in
and
arpl
inc
dec
cmp
pop
xchg
scas
cli
pop
pusha
or
mov
cltd
or
lahf
ret
push
ja
imul
xchg
jbe
mov
or
mov
xor
sub
fisubl
sub
mov
xchg
fldt
loopne
and
mov
dec
push
stos
daa
add
gs
cwtl
push
out
in
fsubs
int3
int
adc
negl
mov
repnz
cmp
push
cmpl
xchg
fidivs
adc
xor
xchg
in
vpmadcswd
rcrb
xchg
rcll
icebp
or
jnp
sahf
dec
push
xchg
mov
mov
out
scas
dec
inc
ds
and
add
test
stos
inc
inc
xlat
jecxz
add
mov
stos
in
ljmp
fsqrt
jmp
fs
daa
fs
hlt
aas
inc
cmp
dec
arpl
mov
flds
xor
stos
inc
mov
mov
and
jmp
mov
aas
push
popa
or
sar
dec
arpl
movsl
pop
mov
out
add
out
aam
dec
out
icebp
cli
dec
loop
aas
mov
dec
xchg
jg
mov
xchg
push
inc
out
inc
jle
das
jb
inc
fdivrp
inc
mov
outsl
pushf
mov
std
stos
add
mov
mov
sti
dec
mov
push
cmpsb
push
cmp
ss
sahf
xchg
aam
push
push
ljmp
repz
xchg
inc
mov
inc
sbb
xchg
mov
aas
mov
adc
aaa
lret
repz
mov
dec
addr16
loop
ficomps
push
fistpl
clc
push
sbb
pop
jb
test
xor
xchg
cmp
push
jmp
int
sub
icebp
or
loopne
xchg
gs
test
jns
out
push
xor
cmp
pop
in
push
mov
adc
cvtps2pd
inc
cmp
fucomi
inc
xor
loop
mov
out
mov
aam
dec
mov
enter
sub
test
dec
dec
pop
aaa
cmp
shrb
jecxz
outsb
dec
mov
pushf
push
fprem1
repnz
mov
jnp
xchg
insl
fsubs
cmp
or
pusha
pop
popf
add
add
cmp
or
pop
jle
mov
in
aas
les
mov
stos
or
icebp
das
pop
insl
stc
sub
mov
mov
lock
imul
sahf
add
and
fcoms
add
out
sub
sbb
jb
pusha
jbe
loop
fst
mov
xchg
add
movsl
pop
nop
push
pop
adc
xchg
mov
mov
inc
dec
imul
or
push
lcall
sar
fld
jl
imul
cmp
shr
or
int3
roll
add
dec
push
movsb
inc
loop
rorb
pop
repz
hlt
out
fimull
adc
lods
cmpsb
in
in
pop
imul
cmpsb
fmul
sti
push
cli
add
xchg
xlat
lret
or
inc
mov
data16
test
and
outsl
or
inc
movsl
dec
lret
adc
xchg
mov
jg
sahf
loopne
jecxz
pop
lcall
ja
add
add
outsb
cmp
sub
xor
or
lret
xchg
mov
pop
pushf
sbb
adc
std
and
mov
xchg
popf
sub
into
out
out
ljmp
jp
inc
push
cli
shr
add
mov
negb
cwtl
dec
jae
call
popl
mov
inc
aas
pop
aam
or
stos
pop
clc
adc
lods
sarl
mov
popf
xchg
sub
push
xor
jo
test
repz
sub
push
mov
notl
push
adc
sbb
and
xor
aaa
movsl
push
cmp
adc
jae
mov
cmp
dec
call
push
jne
addl
push
jge
loop
jg
mov
inc
jbe
push
sti
or
or
sbbb
sbb
fidivrl
arpl
aam
lret
push
inc
xor
les
inc
lds
fwait
jb
mov
adc
mov
adc
sbb
inc
adc
sbbb
or
adc
xchg
ja
xchg
dec
mov
std
mov
adc
xlat
xor
jp
fdivrs
sti
push
bound
or
mov
loopne
pop
scas
or
or
test
mov
bound
jecxz
call
lods
bound
loope
adc
xorl
scas
repnz
loop
in
aam
incb
pushw
std
jnp
mov
sub
inc
mov
cmpb
jne
test
jge
aas
icebp
dec
into
imul
pusha
xlat
sbb
inc
sub
out
jl
dec
les
aas
mov
sbb
push
jae
es
aaa
sub
xchg
repz
sbbb
pop
and
inc
pop
push
stos
hlt
std
add
mov
popf
sub
out
xchg
mov
dec
push
push
xor
ja
pop
test
cwtl
pop
pop
cmc
imulb
mov
mov
pushf
je
mov
stos
xchg
and
bound
movsb
add
jae
inc
or
xchg
popw
movsl
fmulp
rorb
leave
inc
xor
mov
fcoms
pop
lock
repz
sub
jle
cmp
ljmp
push
pop
add
push
scas
and
jno
cld
dec
cmp
call
std
mov
jae
sub
add
out
scas
inc
xchg
stos
sub
add
shll
lret
cld
fdivp
icebp
jo
mov
rorb
push
lea
sbb
push
mov
int3
xchg
xchg
push
out
and
push
andl
mov
dec
aad
push
ret
mov
xor
mov
nop
inc
inc
mov
jne
push
ss
push
cltd
jo
decb
and
je
data16
cmpsb
shll
mov
xor
mov
stos
push
and
insb
roll
sub
lcall
cmp
leave
sub
scas
ret
movsl
mov
aas
in
dec
xchg
mov
cmp
or
loopne
sbb
lahf
inc
jmp
aaa
adcl
mov
lods
cmp
jnp
pop
adc
ja
sub
mov
stc
xor
cmp
test
fisttpl
mov
mov
outsb
jo
test
clc
data16
cltd
adc
adc
filds
lods
and
sbb
lods
pop
cmpl
stos
sti
add
xchg
daa
lcall
push
rol
imul
int3
stos
test
jl
clc
popa
aad
dec
jg
inc
mul
call
jno
cld
loope
and
or
pop
push
or
add
xchg
sbb
dec
icebp
and
cld
sbb
scas
push
fistl
mov
out
dec
lcall
aas
sbb
cmpb
icebp
or
pop
inc
mov
sub
push
loopne
cmc
movsl
sahf
mov
jmp
sub
outsb
into
mov
cld
cltd
jmp
es
xchg
jp
lret
mov
push
fadds
stos
add
shlb
das
hlt
push
mov
sub
push
pop
loope
mov
pop
pop
cmpsl
cmpsl
xchg
in
out
jmp
dec
adc
sub
mov
rorb
arpl
cli
pop
in
xchg
orl
bound
pushf
cmpsl
addr16
jno
xor
xor
jnp
rcrl
add
les
adc
jns
inc
or
mov
lahf
shll
mov
mov
pop
mov
ljmp
insl
and
inc
adc
dec
jnp
jge
jne
test
hlt
mov
dec
jbe
jl
scas
push
nop
test
jnp
xor
cmpsl
loop
push
in
das
cmpsb
pusha
cltd
add
and
push
sti
sbb
insb
lods
ret
inc
mov
add
call
outsl
xor
sbb
ret
and
fstpt
cld
loope
mov
loope
notb
enter
arpl
mov
push
inc
mov
mov
imul
lock
jo
adc
jmp
cmp
fcoml
dec
cwtl
sbb
rcll
int
add
push
sub
inc
gs
mov
sub
sub
or
dec
test
pop
in
jb
fnstcw
lods
in
adc
nop
dec
mov
sbb
mov
cmp
cmp
loope
mov
mov
andl
mov
mov
sbb
ljmp
cmp
lret
push
push
push
fimuls
rcl
dec
pop
sbb
lcall
sbb
push
cs
loop
daa
mov
roll
das
aad
mov
and
aam
jmp
cmp
adc
hlt
stos
sbb
gs
push
mov
repnz
in
jge
inc
popf
pop
fdivl
popf
imul
mov
lods
in
dec
push
cmpsl
fisttpl
and
sub
xor
test
cmp
push
cmp
mov
loope
jmp
add
test
lods
add
pop
lret
mov
rclb
les
sbb
sub
sub
les
and
xchg
inc
pop
xor
popf
stos
test
push
add
mov
xchg
lret
push
jp
loop
fsubrs
xlat
push
and
inc
or
in
and
sbb
mov
les
sub
pop
lock
jb
xor
negl
subl
lea
jne
jl
push
add
aad
xchg
mov
and
mov
xchg
ds
push
out
insb
out
out
jp
or
cmp
push
jno
sub
outsb
arpl
test
addr16
call
stc
xlat
jne
xchg
into
inc
adc
lcall
test
xor
adc
jmp
fmuls
add
js
or
pop
iret
add
test
in
lds
rep
cmpsb
shlb
outsl
cs
jle
popa
mov
mov
js
outsb
aad
adc
test
sub
mov
jecxz
mov
mov
repnz
ficoms
jge
inc
inc
movsl
pop
push
add
je
push
fdivs
mov
mov
cli
mov
mov
push
fbstp
xlat
push
jmp
sbb
jge
js
mov
push
jge
xchg
cld
jg
pop
sub
movsb
inc
add
movsl
scas
jecxz
jns
add
push
push
je
out
aaa
push
mov
fadds
xchg
mov
jge
test
mov
movsb
push
jmp
mov
sbb
push
test
jle
mov
pop
fwait
mov
arpl
aas
js
ss
stos
std
movsb
sbb
mov
and
sbb
jne
push
add
mov
shlb
push
dec
push
stos
pop
push
mov
inc
mov
push
adc
sub
out
mov
adc
pop
xor
mov
jnp
out
std
jmp
pop
fdivrp
dec
lea
mov
xor
mov
inc
in
insb
pop
testb
and
sub
sbb
sbb
cmp
mov
outsl
mov
ret
push
out
or
adc
and
push
jb
adc
jns
mov
subb
sub
mov
dec
xchg
cmp
sbb
fnsave
pop
inc
jns
ror
push
sub
dec
sub
mov
push
or
lods
fimull
and
jp
adc
cltd
push
push
pop
xor
inc
xchg
orl
jle
inc
addr16
cltd
xchg
cwtl
cli
push
mov
jae
pop
push
in
mov
std
pop
mov
pop
add
lahf
xchg
aam
mov
pop
push
imul
in
std
orb
les
xorl
push
cmp
and
je
jnp
popa
inc
xchg
rep
pop
push
jo
cmpsl
xchg
mulb
pop
daa
hlt
sti
lcall
mov
pop
mov
lcall
or
out
xor
dec
or
cmpsl
fld
icebp
std
shrb
fcmovu
xor
mov
mov
das
pop
lods
push
rcr
push
lret
adc
test
ja
insl
in
mov
pusha
mov
fsts
xchg
inc
hlt
rcrb
xor
cmpsb
mov
add
jle
bound
inc
std
ss
bound
es
jl
mov
out
mov
test
mov
mov
std
ljmp
add
cmp
pop
imul
push
ljmp
pop
scas
ss
dec
jmp
jb
loope
mov
loope
inc
jge
cmp
and
sub
sbb
scas
movsl
fidivrl
cltd
jo
add
inc
movsb
lds
cltd
mov
xchg
je
xchg
sub
push
sub
roll
xchg
sbb
subl
jle
and
in
roll
or
roll
int
mov
pop
lcall
out
rolb
fldt
and
adc
aad
dec
into
push
push
cwtl
cmc
cmp
shll
test
adc
shll
adc
jne
sub
in
sub
scas
test
test
xchg
lods
xor
sarb
popa
jp
inc
clc
iret
fwait
rcrb
lds
mov
mov
push
data16
adc
adc
clc
push
xchg
sub
adc
ja
fs
test
ljmp
push
or
inc
std
mov
jle
inc
bswap
sbb
sti
jmp
cmp
xchg
mov
pop
xchg
iret
mov
sub
add
push
sbb
pop
rorb
addr16
roll
cs
loop
and
aas
mov
or
pop
iret
push
shll
add
or
sahf
jle
test
mov
push
mov
dec
std
mov
xchg
pop
and
or
ss
stc
sub
testb
pop
mov
push
gs
in
clc
jne
jle
pop
adc
xor
mov
inc
shrl
gs
mov
or
outsl
sub
call
cmp
push
and
loopne
ljmp
fldcw
outsb
xchg
lret
and
dec
add
sahf
add
repz
pusha
out
sub
les
call
dec
fs
sbb
icebp
push
mov
iret
es
inc
cmp
into
inc
cmc
mov
xchg
test
fmuls
aas
sub
dec
insb
and
adc
dec
lea
push
xchg
mov
movzwl
ja
and
push
int
push
mov
and
icebp
cwtl
jmp
frstor
or
cmc
dec
sub
mov
xlat
scas
test
dec
aam
mov
mov
aas
inc
push
mov
pop
loopne
repnz
mov
rclb
mov
cli
enter
sbb
iret
in
jle
mull
lock
data16
sbb
daa
bound
pop
cmp
call
mov
in
mov
dec
push
es
sub
pushf
dec
dec
sbb
icebp
cmp
dec
pop
rolb
inc
fisubs
rcl
push
jecxz
cmpsb
in
fmulp
add
stc
aas
push
fidivrs
xor
stc
jl
pop
repz
test
das
mov
aam
sahf
dec
in
fidivl
pop
repnz
dec
and
pop
fimull
pushf
loope
pop
pop
loop
mov
sub
xchg
cli
xchg
jge,pt
out
push
cs
repnz
std
cli
mov
xchg
loopne
ret
ret
dec
sub
or
call
xchg
addb
dec
xor
push
loope
inc
cli
mul
mov
lahf
pop
fsubr
push
lahf
mov
add
sti
mov
mov
pop
xchg
mov
ja
std
and
pop
pushf
xchg
pop
insl
dec
out
loop
pop
jge,pt
sti
loop
mov
or
inc
xchg
out
shlb
and
or
outsb
popa
adc
sub
xchg
and
xchg
mov
fcmovbe
arpl
repz
fimull
or
xchg
sub
aaa
sbb
stc
and
out
enter
push
jl
icebp
stos
stos
iret
lcall
stc
movsl
call
idivl
mov
pop
mov
cmp
mov
add
sbb
inc
movsb
push
cmp
jae
es
pusha
in
jmp
lcall
push
and
sub
sbb
dec
lret
add
cmp
mov
pop
or
mov
imulb
roll
jp
lret
arpl
or
or
leave
sub
xor
mov
inc
pop
lods
jmp
fnstenv
pop
xchg
std
dec
and
in
sub
mov
pop
push
push
jle
xor
leave
cmp
sbb
loop
stos
jae
repnz
and
mov
add
cmpl
fdivr
lods
sbb
hlt
ss
mov
ds
shll
call
and
xchg
pushf
enter
xor
flds
mov
fs
pop
mov
add
int3
rcrb
in
inc
cmp
lcall
adc
clc
lods
cli
xchg
push
jae
adc
insb
popf
lea
sbb
inc
dec
pop
fucomip
jnp
lock
add
jmp
and
adc
cmc
lahf
das
js
mov
outsb
adc
mov
mov
adc
in
test
ret
insb
out
in
icebp
dec
xor
jnp
in
push
sahf
mov
icebp
adc
enter
loope
imul
movsb
fiadds
push
out
push
adc
add
es
mov
adc
adc
les
sub
rcrb
mov
iret
enter
enter
jo
call
into
push
cltd
divl
add
sub
arpl
fnstenv
pushf
mov
popa
mov
shll
mov
inc
push
xchg
out
mov
mov
mov
aam
xor
data16
incb
xchg
cmpsl
fisubl
int
push
sub
adc
mov
pop
cmp
repz
out
adcl
nop
inc
push
outsb
mov
sbb
test
ss
iret
push
jae
xchg
xchg
adc
test
fisubs
xchg
int
pop
mov
icebp
cwtl
jle
push
and
push
sbb
or
iret
fsubs
aam
sub
add
in
sbbb
movsl
jns
mov
insl
les
outsb
push
xchg
insb
cmpsb
adc
jnp
jl
out
pop
out
hlt
in
mov
mov
xchg
and
cmpsb
pop
sti
sub
cmpsl
dec
test
xor
rolb
sub
mov
idivb
mov
out
scas
mov
test
imul
iret
repz
sbb
mov
inc
in
pop
jp
jbe
js
out
ret
jp
enter
push
dec
icebp
push
and
andl
mov
jb
movsb
int
sbb
mov
pop
push
movsl
sub
jb
cwtl
jne
out
arpl
das
xor
movb
insb
cmpsl
es
xchg
dec
pop
push
pop
jns
xchg
dec
dec
pop
cs
or
lock
adc
cmp
pop
pop
cmp
and
dec
pop
cmpsl
sbbb
cmp
pop
xchg
jp
cltd
mov
push
cmp
clc
sub
jo
dec
adc
jmp
imul
or
xor
jge
in
sub
dec
mov
subl
jne
push
jo
jb
jnp
jne
imul
aaa
stos
ret
xor
pop
or
test
into
adc
mov
out
std
stos
mov
push
cmpsl
jle
mov
in
inc
cwtl
out
sbb
test
dec
add
mov
push
add
add
push
cmp
sbb
pop
add
test
mov
loop
push
bound
cmc
lret
lods
cmp
jg
addr16
cmpsl
mov
push
cmp
bound
mov
test
push
sub
jmp
mov
aad
or
push
pop
mov
pop
aam
daa
push
push
addr16
pop
test
pop
jne
mov
pop
adc
sbb
loopne
out
sbb
inc
pop
loopne
fidivs
mov
inc
test
cmp
sub
lcall
xlat
and
setl
push
stos
in
dec
test
inc
cmpsl
in
into
sbb
nop
adc
xor
sar
mov
stc
sarl
jo
les
push
movsl
adcb
outsb
shrb
popf
and
inc
test
stc
andb
xchg
roll
jp
and
out
clc
and
fsts
adc
xchg
mov
idivl
shr
xor
sbb
pop
sbb
pop
sbb
stos
lods
ss
xchg
loope
iret
loop
cli
jnp
lods
dec
int
sahf
jns
mov
adc
jl
es
imul
fs
repnz
mov
int3
mov
jae
pop
daa
dec
iret
icebp
jae
insb
out
lret
sub
cs
sbb
test
jmp
xchg
aam
sub
push
cltd
mov
xor
mov
push
jnp
leave
push
fsubs
iret
scas
add
dec
xor
mov
lret
dec
adc
pop
mov
xchg
mov
ljmp
cld
xchg
ja
add
out
in
jno
inc
inc
mov
jp
jmp
xchg
sub
xor
or
dec
push
or
fbld
pop
movsw
das
rclb
jne
mov
sub
xor
mov
lahf
cltd
pushf
mov
jo
xor
lcall
insb
sub
das
in
repnz
sub
lock
aaa
sub
insb
adc
jns
mov
fwait
mov
and
test
push
stos
enter
cwtl
dec
movsl
or
mov
add
cmp
outsb
sbbb
fnsave
popa
orl
inc
daa
cmp
movsl
jo
dec
mov
xchg
cmc
fcmovnbe
inc
arpl
add
out
or
iret
lahf
mov
cmpsl
add
and
inc
fstpl
push
out
jae
and
push
shrl
outsb
xor
popa
rcll
ss
rcl
inc
or
fucomip
push
subl
sbb
and
push
pop
movsl
daa
jae
jge
inc
scas
pop
pushf
xorl
loope
or
lret
sbb
lret
inc
cmpsl
push
outsl
je
pop
xor
cmpsl
cmp
xchg
dec
inc
notl
mov
inc
and
xchg
sarl
scas
out
stc
out
xchg
mov
inc
jle
insb
xchg
shl
cmpsl
mov
iret
pushf
scas
addb
cmp
dec
vmovaps
xchg
jne
sbb
pop
and
and
sbb
jmp
sbb
cld
adc
jl
pop
mov
sbb
std
mov
cmpsl
data16
addb
out
fnstsw
pushf
add
notl
dec
mov
fldenv
ret
rcrl
jmp
mov
xchg
push
jb
scas
lcall
xchg
cmpsl
cmp
lret
mov
in
add
repnz
jo
mov
movsb
adc
aas
pop
jae
xor
pop
jns
xchg
je
movsb
add
xor
xor
lahf
jns
jnp
pop
insb
lock
lock
dec
pop
mov
adc
inc
jecxz
loope
mov
iret
sbb
adc
lahf
out
pop
hlt
dec
fidivrs
gs
add
ss
jnp
lcall
popl
inc
cs
out
ljmp
mov
iret
cmp
jno
int3
and
pop
push
jmp
push
loop
pop
mov
xchg
sbb
test
push
das
movsb
dec
das
cwtl
dec
dec
outsl
or
xlat
xchg
or
orb
sub
or
fildl
aad
loope
cmp
mov
pop
pop
fs
mov
mov
iret
cmp
jnp
mov
lcall
pop
pop
xor
adcl
popa
shr
scas
cltd
cld
fdivrp
pushf
popa
je
test
push
adc
imul
andnps
mov
push
adc
je
mov
mov
ret
sub
lret
aaa
push
into
mov
mov
push
dec
lcall
adc
popa
data16
cmp
mov
lret
inc
pop
jbe
mov
daa
dec
cmp
sbb
cmp
in
sbb
dec
jecxz
mov
lea
push
cmc
or
popa
jne
push
flds
fdivl
inc
add
sub
cmpsb
mov
mov
shll
in
sub
lcall
les
loop
sub
dec
cs
jmp
daa
push
je
lods
testb
aad
sbb
std
outsb
cli
mov
aas
je
pop
mov
sahf
lods
mov
cmp
add
pop
sbb
aam
imul
stos
popa
adc
movsb
sbbl
test
inc
movsb
and
test
es
xchg
jo
and
xor
or
cwtl
and
mov
mov
dec
push
jp
mov
dec
scas
or
mov
push
ret
mov
mov
mov
insl
xor
lds
je
or
xor
ss
gs
jg
mov
gs
and
pop
mov
pop
xchg
hlt
inc
je
mov
cmp
add
dec
inc
lods
add
test
daa
orl
into
push
dec
pop
aaa
leave
mov
mov
push
mov
icebp
and
movsl
or
mul
push
loope
or
roll
cmp
test
lcall
fisubrl
inc
inc
in
fsubp
in
fwait
test
sbb
jmp
int
hlt
xchg
push
call
sbb
mov
pop
pop
cmp
pop
pushf
imul
aas
bound
lret
shl
fdivs
jge
push
sar
sahf
out
aaa
int
lahf
xor
lock
sbb
aaa
push
popf
push
sub
rorl
sub
xchg
out
aas
xor
sahf
jp
pop
hlt
and
inc
mov
fwait
popa
dec
sbb
and
test
jae
pusha
popf
scas
call
xor
xor
sbb
and
mov
pop
push
mov
xor
out
jge
ljmp
lcall
pushf
cmpsb
mov
xchg
sub
xchg
lods
loopne
push
das
inc
push
xchg
lock
adc
xchg
inc
enter
mov
and
subl
xlat
repnz
mov
mov
mov
cmp
psubq
xor
jno
pop
push
dec
sbb
call
jg
fisttpll
js
cmpsl
ret
jns
bswap
test
push
mov
movsb
xchg
rcrb
or
xchg
ljmp
push
mov
std
jmp
out
stos
add
jns
popf
fcoms
cwtl
adc
mov
xor
lahf
dec
js
ja
lret
jl
sub
cmp
jb
push
aam
test
aad
cmpsl
cs
cmpsb
daa
pop
dec
das
into
push
pop
add
mov
imul
hlt
push
jg
mov
cwtl
cmp
add
pop
lcall
mov
test
nop
in
out
jb
test
ds
sbbl
fsubl
xor
inc
or
fmul
test
icebp
inc
add
mov
or
push
xor
mov
psrld
test
sub
or
inc
jns
push
push
push
lock
cmp
xchg
jno
out
lret
adc
mov
xor
jg
in
mov
push
mov
adc
inc
adc
push
fwait
and
inc
mov
push
push
sbb
clc
dec
xor
cld
pop
xchg
aas
pushl
pop
or
and
lds
popw
jp
rcll
loop
mov
out
pusha
lea
mov
mov
adc
inc
shll
xchg
shll
cmp
test
lea
or
out
and
lods
orl
in
test
shll
and
out
fwait
dec
and
inc
and
push
fwait
adc
int
fs
push
aas
adc
mov
ret
dec
loope
pop
and
xchg
sub
les
fdivrl
icebp
idivl
mov
arpl
inc
ja
xchg
xchg
ds
sbb
out
adc
jmp
insl
movsb
dec
clc
mov
dec
cld
decl
xchg
mov
sbb
sub
xchg
outsb
out
cmp
push
add
jle
xor
not
outsb
sti
ret
mov
mov
adc
lea
mov
lock
inc
pop
lock
fwait
adc
xchg
push
out
lret
jp
out
repnz
pushf
pop
jo
std
dec
adc
fdivrl
mov
sub
or
frstor
mov
inc
jb
sub
loop
push
movsb
mov
orl
cltd
push
jmp
mov
rol
out
or
stc
fcoml
test
mov
pop
add
scas
push
int
call
cmp
out
mov
negb
mov
lods
in
push
ja
mov
lret
inc
mov
pop
xchg
pop
gs
sub
jg
imul
aaa
fsubr
out
xchg
pop
jmp
inc
pop
hlt
mov
std
scas
or
push
vmovddup
or
push
jnp
mov
mov
incb
iret
adc
and
xchg
fisttpl
dec
dec
cltd
jb
sub
roll
cld
xchg
add
movsl
movsl
std
lods
and
pshufw
outsl
inc
push
in
rep
push
push
icebp
rcrw
pop
mov
sti
test
popf
and
xchg
psrlq
dec
test
cld
dec
jmp
es
jo
and
mov
pushl
in
in
inc
jb
mov
out
aaa
test
cmp
mov
add
dec
sub
xchg
rorl
push
fistl
cmpsl
dec
iret
repnz
sub
or
arpl
inc
test
jae
add
cmc
mov
pop
lret
pop
popa
fisttpll
in
mov
add
push
sbb
jl
jne
ja
repnz
int3
or
pop
jge
arpl
mov
push
xchg
and
cld
mov
and
loop
cwtl
xchg
lret
jmp
xchg
cmpsl
adc
jle
shll
sub
enter
mov
or
adc
mov
int
jnp
cli
pop
fcoml
jnp
scas
or
mov
cltd
push
inc
testl
cltd
mov
cmp
sbb
jl
cld
paddd
cwtl
jns
push
mov
test
idivb
sub
and
adcl
nop
daa
fucomi
mov
sbb
into
jo
das
mov
out
push
mov
je
mov
jle
dec
mov
je
test
cli
and
dec
pop
and
ss
enter
xchg
jecxz
push
mov
sub
xor
int
aad
arpl
sbb
cmp
dec
xor
movsb
sbb
jge
add
hlt
pushf
movsl
jmp
lds
lahf
std
imul
add
xor
pop
jbe
das
mov
ja
sti
xor
pop
mov
dec
in
ja
inc
adc
sub
lahf
and
es
nop
repnz
cmp
sti
lret
mov
movb
cmp
movsl
loope
mov
iret
movsl
fwait
and
or
push
add
icebp
sbb
int3
pop
pop
mov
adc
sub
repz
jge
loop
test
lods
aam
fildl
adc
jge
xchg
jecxz
hlt
cmp
ja
sbb
mov
mov
jmp
mov
inc
mov
mov
clc
popf
lods
imul
daa
popf
pop
lret
inc
xor
and
movsb
lahf
movsb
setge
inc
nop
loope
fimuls
mov
dec
pop
nop
out
rcll
pushf
std
adc
adc
loopne
clc
fistl
aas
repz
push
test
fistps
mov
sub
pusha
push
jecxz
mov
adc
lahf
mov
insb
pushw
js
repnz
lds
lods
jle
repnz
leave
push
sbb
inc
ret
jge
mov
test
dec
gs
insl
dec
inc
mov
std
jp
filds
mov
mov
cs
mov
int3
xor
mov
pop
adc
lock
ljmp
out
popf
mov
das
bound
xor
inc
aam
cli
pop
insb
insl
adc
jmp
cmp
fdivrs
add
jecxz
lcall
rcr
push
jge
clc
dec
xor
sbb
sarb
push
daa
dec
loopne
rcl
orl
cwtl
xchg
dec
lods
lods
stc
pop
adc
or
mov
xchg
in
and
cmp
cli
mov
fcmovu
ret
call
jbe
repnz
and
icebp
ret
push
pop
dec
pop
ret
daa
inc
and
clc
fstps
inc
popf
test
ss
jnp
icebp
push
stos
notb
test
add
faddl
sahf
lds
loop
jle
mov
adc
dec
popa
xor
pop
leave
out
and
mov
scas
pusha
test
aam
test
xlat
lea
pcmpgtd
or
test
sar
sbb
repz
stc
push
out
and
ss
call
loope
in
and
add
sbb
xchg
mov
or
fcom
in
pop
inc
sub
mov
in
pushf
in
mov
aam
std
adc
jg
ss
add
out
test
xlat
imul
test
cmp
lret
cmp
or
dec
pop
mov
push
add
sbb
test
sbb
inc
scas
sub
iret
fistpll
sahf
push
sahf
mov
or
adc
or
addr16
clc
push
in
mov
pop
cmp
fnstsw
in
mov
pop
cltd
add
push
jbe
inc
std
pop
or
inc
sub
mov
fisubrs
nop
dec
pusha
mov
test
aaa
ficoms
das
lods
movsb
in
push
fisttpl
repnz
inc
repnz
repnz
sbb
cmp
xlat
and
cmpsb
mov
scas
ret
inc
and
mov
icebp
into
add
test
cmp
inc
lods
push
push
stc
lock
shr
or
xchg
cmp
add
cwtl
es
imul
mov
xlat
dec
or
dec
es
jp
fidivs
and
out
xchg
rcr
jnp
roll
jbe
sbb
push
pop
inc
mov
enter
mov
or
fistl
push
daa
mov
mov
insb
sub
xchg
push
xchg
mov
push
insb
sbb
xchg
cmp
push
jp
sti
dec
movsb
mov
test
xchg
jns
push
sub
cmp
or
jo
fnsave
mov
mov
popf
clc
sbb
arpl
icebp
js
test
pop
or
inc
push
add
out
and
fiadds
sbb
rcrb
mov
js
xor
xchg
out
cmc
mov
in
cmpsl
ficomps
ss
sti
mov
xchg
mov
outsl
popf
movsl
sar
adc
add
adc
push
jo
xor
lds
dec
addl
and
jnp
add
leave
cmp
pop
repz
fldl
mov
ret
mov
js
pop
or
adc
sub
add
andl
sub
outsb
pop
xor
clc
shlb
mov
lods
xchg
xor
dec
sbb
in
iret
jns
in
sti
ja
mov
int
adc
gs
test
lea
bound
mov
mov
aam
and
aas
push
mov
sub
cmp
mov
adc
inc
push
shr
lea
pop
or
nop
xor
hlt
dec
mov
mov
cs
mov
push
add
inc
push
sub
outsb
inc
inc
xor
or
popf
push
mov
mov
jp
dec
or
sahf
mov
xchg
test
decl
adc
mov
lods
nop
push
in
push
movb
and
dec
jl
inc
mov
pop
arpl
lds
cmp
icebp
xchg
cld
test
cmc
incb
in
or
sbb
std
cltd
or
outsb
inc
imulb
sbb
adc
mov
cmc
mov
push
lcall
pushf
inc
jecxz
or
loopne
dec
push
lcall
int
jmp
inc
lock
inc
cwtl
mov
inc
sub
mov
dec
jmp
jbe
mov
inc
adc
xor
je
mov
pop
fdivrl
ss
push
add
int3
cli
add
sahf
mov
xchg
pop
xor
nop
mov
mov
add
xor
xor
clc
fcomps
adc
scas
adc
test
addr16
imul
xlat
cmovs
aaa
push
and
call
jo
loopne
iret
loopne
pop
adc
xchg
jp
loopne
loopne
repz
adc
lea
mov
jl
addb
mov
cmpl
arpl
sub
fldcw
ret
into
sbb
mov
outsb
mov
test
push
mov
ljmp
pop
jecxz
pop
leave
cmp
or
push
pusha
lret
or
adc
jbe
inc
cld
cwtl
in
push
mov
cltd
mov
test
jb
cmpb
dec
add
mov
fistl
test
sbb
mov
sub
pop
cmp
fisubl
jnp
cmpsb
cmp
stos
ret
ljmp
inc
insl
imul
xor
sub
lcall
jae
sbbl
out
iret
xlat
xchg
rorb
out
aas
adc
in
test
gs
xor
scas
dec
push
lret
and
xlat
xor
dec
sti
mov
jb
lcall
out
loope
mov
add
xor
add
add
add
push
or
jo
arpl
mov
sub
or
cmp
out
mov
add
mov
push
int
lods
fidivl
mov
xor
lret
sbb
and
pop
lahf
push
pop
jae
inc
fstl
sub
jnp
mov
xor
call
jl
aam
les
sub
lods
fists
aaa
inc
test
fidivs
xchg
adc
xor
jmp
inc
jae
jle
mov
int3
rorb
shlb
jmp
in
and
adc
mov
mov
sub
pusha
sbb
push
outsb
dec
jb
xchg
cmpsb
ret
jo
xchg
icebp
pop
pop
inc
mov
lods
mov
imul
lock
rorb
adc
lds
insl
push
xor
scas
jne
jnp
loopne
mov
adcb
mov
aam
push
jp
pop
adc
ror
mov
sub
pop
sbb
cmp
fisttps
sub
pop
mov
lock
push
mov
mov
adc
jmp
lods
inc
shrb
pop
hlt
bound
jmp
loop
pop
mov
gs
sbb
aaa
pop
push
mov
mov
iret
and
inc
pusha
fldcw
orb
int
mov
cli
xor
xchg
inc
and
pop
push
cmpl
or
fs
sahf
xlat
scas
sbbb
arpl
outsb
sub
and
fldcw
xchg
mov
cmp
insb
test
xchg
dec
mov
notl
inc
andb
jbe
sub
test
push
xchg
and
pusha
loop
sub
and
lcall
add
ret
stos
xchg
ljmp
fadd
out
lock
jae
cmp
xorb
cmp
push
and
lret
dec
dec
pop
mov
pusha
fstpt
push
popf
or
push
xor
jb
lods
stos
inc
pop
lods
pushf
loop
cmp
jg
and
sub
arpl
or
lahf
stc
xchg
out
push
std
xor
inc
in
lock
test
ret
push
lahf
cmpl
sbb
jb
push
fs
fwait
testl
dec
mov
je
mov
xchg
mov
dec
int3
shll
ljmp
popa
cli
mov
mov
sbbl
hlt
nop
ljmp
int
hlt
je
push
pop
sti
cmp
andl
push
stos
out
jl
stc
dec
adc
sbb
test
jp
inc
pop
mov
add
aaa
dec
xchg
fstpl
mov
add
sbb
call
cmpl
aas
ja
and
fwait
adc
push
cltd
mov
dec
jo
cmp
lahf
fnstcw
subl
lods
mov
sub
imul
dec
mov
dec
mov
jo
push
pop
mov
mov
add
std
in
repz
xchg
jno
add
sub
ret
ret
fs
ljmp
mov
and
popf
ljmp
push
adc
clc
pusha
les
lcall
mov
enter
add
cld
repnz
mov
jmp
movsb
sub
orl
pop
daa
pop
in
ljmp
popf
lds
cli
xchg
insb
cltd
cld
jnp
je
lods
or
hlt
shrb
inc
push
sar
outsb
insb
mov
popf
mov
cltd
out
jmp
pop
insl
in
mov
insl
pop
out
dec
cli
mov
outsb
out
test
jp
imul
mov
fcoms
and
dec
cmpsl
lods
mov
filds
inc
paddusw
pop
clc
push
aam
outsl
jnp
dec
push
je
jmp
clc
push
sub
out
repnz
adc
sbb
imul
scas
and
pusha
lock
ret
mov
lea
mov
movsl
insb
int3
xchg
call
sub
add
leave
add
jle
nop
sti
mov
lret
nop
lahf
lret
mov
pop
mov
icebp
mov
mov
mov
and
adc
mov
or
push
rcll
in
or
subl
stc
sbb
aas
enter
xchg
fwait
mov
inc
dec
cmp
out
xor
orb
std
jne
fnstenv
push
mov
pop
pop
outsb
int3
add
mov
aad
std
mov
arpl
pushf
int
mov
xor
inc
jmp
lods
pusha
scas
pop
into
stc
addb
or
jns
inc
loop
mov
jne
addb
dec
rcrb
decl
cmp
cmpsl
and
push
xchg
fsubrs
cld
mov
inc
or
pop
sub
pop
test
rcll
dec
xchg
test
mov
mov
xor
and
aam
jle
xor
or
jo
loopne
test
in
out
jl
clc
stos
mov
std
fildl
lret
sbb
and
xchg
mov
fs
mov
dec
mov
bnd
mov
add
dec
adc
mov
lock
lea
mov
jo
mov
cmp
rcll
int
ficoml
test
or
icebp
outsl
ds
push
fdivs
mov
jno
cmpsb
jne
push
pop
pop
int
into
aam
leave
prefetchw
or
cld
dec
divb
rcl
les
mov
pop
sbb
jne
out
add
push
scas
mov
pop
sarl
xchg
cmp
jbe
movsb
adc
pop
dec
jge
jecxz
cmp
in
push
or
push
push
sbb
sti
jmp
shrb
cmpb
cmp
cmp
mov
dec
mov
shrl
add
es
add
and
imul
mov
test
ds
inc
movsl
popl
scas
out
sub
mov
xchg
jno
and
out
cmpsb
not
loope
pushf
xor
mov
in
outsb
adc
mov
stos
bound
jnp
push
or
push
cltd
cltd
add
int
fdivl
or
outsl
loopne
jae
ret
cmpb
aaa
dec
xor
inc
movsb
sbb
enter
or
jge
outsl
into
sub
into
rolb
push
shll
in
sub
jb
mov
cmp
leave
lret
push
data16
push
enter
inc
push
add
xlat
add
inc
pop
fistpll
cwtl
dec
gs
cmp
int3
fbld
or
jne
cmc
xchg
sub
mov
mov
shll
out
js
out
push
fnop
test
outsl
jns
bound
mov
aam
lcall
aam
leave
test
test
mov
loop
xor
test
insl
jnp
xchg
movsb
or
add
mov
sbb
xor
dec
xchg
add
int3
aaa
in
adc
aas
mov
push
xlat
andb
in
shrl
push
or
jnp
add
out
int3
adc
jl
pop
daa
mov
lds
xchg
push
adc
or
aam
push
mov
push
sub
stc
push
inc
mov
add
pushf
cmp
jmp
xchg
jg
pop
xlat
cli
lock
jno
into
sbb
sub
pop
cmp
mov
cwtl
jge
mov
cmp
into
or
cld
mov
out
adc
inc
insb
push
dec
xchg
out
movb
enter
or
repz
inc
xchg
jmp
rcl
push
lret
xor
xchg
hlt
ds
xchg
jmp
loop
mov
mov
iret
cltd
movsl
cltd
aas
adc
mov
cmp
movsl
je
test
or
lods
stos
dec
cmp
into
stos
jmp
mov
pop
int
movsb
ljmp
jmp
dec
mov
xchg
mov
stos
pop
adc
push
push
xchg
push
xor
pop
jmp
jnp
sub
call
and
inc
data16
addr16
add
cmpsl
scas
cmpsl
scas
scas
imul
lcall
fisttpll
fsubl
outsl
sbb
pop
fidivs
iret
dec
mov
lock
sbb
rcrb
fstpt
pop
inc
xor
cmp
addb
les
mov
push
scas
dec
xorl
push
jp
cmp
jb
das
inc
int
popa
xchg
cmp
adc
les
in
sahf
shrb
fsubs
mov
scas
mov
mov
or
add
mov
mov
or
lret
mov
imul
adc
adcl
xlat
outsl
jb
or
imul
out
lods
clc
mov
aaa
sahf
lret
jecxz
mov
lea
lahf
int3
and
mov
fidivs
dec
cwtl
or
inc
inc
in
pop
data16
push
ret
iret
sub
jo
jg
adc
dec
push
and
push
fldcw
jnp
aas
push
jae
incl
mov
jp
mov
sub
std
adc
push
test
mov
nop
ljmp
outsb
mov
dec
outsb
cs
rcrb
fildll
or
shlb
xor
mov
jge
cmp
cmp
or
and
mov
call
repnz
mov
pop
cld
fcomps
xchg
out
jbe
or
mov
xchg
arpl
orb
mov
cmp
push
insb
rorl
scas
fisubs
stos
inc
mov
out
dec
in
mov
lods
aam
push
int3
cmp
cmp
insb
jnp
cmpsb
jmp
jnp
pop
mov
xor
aaa
mull
mov
loopne
sub
dec
outsl
xor
mov
push
xchg
push
aam
dec
out
in
aam
scas
out
mov
movsl
pop
push
fcoml
pop
sbb
sub
fisttpl
or
test
pop
add
cmp
lock
bound
mov
jle
xor
push
pop
lds
xchg
arpl
lods
pop
imul
ret
dec
out
xchg
push
aad
ds
sbb
imul
repz
xor
mov
sbb
mov
movb
stos
inc
js
cmp
bound
jl
mov
bound
in
jns
jge
dec
add
shrl
mov
std
and
lret
xor
mov
jb
cmpl
push
rclb
testb
jb
das
icebp
xchg
push
test
call
dec
lds
push
pushf
call
add
jns
or
cwtl
and
mov
xchg
sbb
aad
push
rol
addr16
inc
sti
aaa
or
aam
jb
mov
adc
pop
jle
outsl
push
pop
ret
sub
and
jg
aam
xor
mov
out
repnz
pop
and
fdiv
in
std
out
mov
aaa
lods
sbb
dec
in
aam
push
out
sbb
inc
mov
cld
rcll
or
cmp
fildll
mov
jle
lds
decl
pop
fcomps
sub
dec
cmpsb
xchg
inc
popf
push
mov
pushf
inc
jp
cli
stos
std
test
fisttpll
pop
mov
mov
test
push
mov
mov
xor
sti
xor
mov
and
test
push
adc
push
push
enter
jo
pusha
lahf
mov
pop
leave
xchg
js
jp
sub
xorl
xchg
push
aad
cmp
cmp
xor
inc
aam
mov
xor
icebp
cmp
inc
and
cmc
mov
repz
int3
div
test
ret
insl
flds
or
or
divb
or
mov
add
lods
mov
lock
inc
push
fwait
sub
lock
dec
sahf
lret
mov
mov
lds
test
sub
mov
faddl
push
pop
lods
data16
dec
aad
add
ret
jae
dec
cmc
sahf
pop
jl
inc
fildl
inc
or
lds
inc
xchg
cmc
jae
jae
dec
jbe
sbb
xlat
mov
inc
popa
dec
into
xor
pop
dec
sbb
jne
xor
out
dec
das
stc
fimuls
inc
or
xor
aas
jmp
mov
pop
mov
xchg
inc
sbb
out
xor
mov
xor
into
lahf
out
pop
cmp
jmp
sbb
fisttps
orb
in
aad
ret
sbb
out
insl
mov
mov
mov
ja
test
pop
fwait
push
pop
out
pop
test
push
lret
fcmove
std
jp
sarb
movsb
and
ficomps
imul
dec
jl
imul
lret
adc
adc
popa
loope
repnz
subl
xor
inc
push
fistps
pop
sbb
mov
ret
sbb
push
aam
fdivrl
inc
in
lods
xor
sbb
movsb
imul
cwtl
arpl
daa
cmp
adc
inc
cmc
stos
adc
inc
pushf
in
sub
gs
adc
ss
nop
and
mov
mov
or
pop
or
repz
iret
dec
push
fmull
fstl
jg
pop
jecxz
nop
push
cmp
jns
mov
cmpsb
jecxz
jo
adc
test
ret
rorb
jecxz
and
ss
pop
inc
jnp
sub
shll
je
dec
ret
jnp
push
lcall
in
pop
mov
gs
adc
aaa
fwait
out
in
fidivrl
push
or
repnz
dec
in
xchg
fnstenv
sbb
leave
movsl
daa
int3
dec
out
jb
pop
pop
out
and
loopne
lods
addps
dec
shl
imul
xor
loopne
or
pushf
rcll
stc
scas
cmpb
inc
add
push
bound
and
lahf
bound
dec
cmp
scas
add
adc
aaa
cmpb
inc
subl
add
es
loopne
push
xchg
mov
pop
in
rorl
push
testl
lret
pop
daa
dec
js
mov
subb
jg
es
or
cmp
mov
push
cmp
cs
inc
push
inc
dec
andl
mov
mov
es
xlat
into
fsubr
lds
int
aaa
push
adc
xchg
pop
ficomps
cmp
jp
jno
cmp
cmpsb
jg
mov
jecxz
cmpsb
mov
imul
lds
dec
out
and
repnz
pushl
jbe
inc
sub
xor
outsb
lcall
push
push
not
mov
add
pop
adc
fmuls
test
stc
or
rcr
sub
cmp
call
outsb
jp
sbb
dec
mov
mov
jg
dec
stc
add
int
sbb
rorb
mov
sub
int
add
std
pop
testb
inc
and
hlt
jmp
jle
jmp
sbb
mov
inc
not
mov
sbb
sub
sbb
mov
or
ret
mov
inc
sbb
add
mov
push
imul
out
shl
mov
inc
frstor
bound
pop
or
add
mov
xchg
xorl
faddp
sti
inc
jbe
mov
fisttps
mov
mov
cwtl
je
push
jo
mov
xchg
jns
push
inc
lods
popa
adc
cmp
xor
mov
fsts
aaa
fdivrs
jns
xchg
rcrb
lcall
sahf
dec
mov
cltd
cmp
sti
push
xchg
adc
dec
js
cwtl
imul
push
xchg
mov
mov
cmp
in
push
test
add
inc
xchg
shl
xchg
imul
push
mov
jb
and
movb
jne
test
xor
or
rorb
sub
ss
outsb
lods
mov
push
sbb
imul
insl
imul
cmp
mull
out
jmp
adc
std
xchg
loopne
mov
sub
mov
cmp
xchg
test
inc
push
outsl
int
ret
lret
dec
into
adc
jp
call
js
push
mov
jo
out
cmp
mov
and
int3
mov
cs
mov
ja
jae
mov
mov
xchg
jecxz
mov
mov
push
mov
test
xchg
push
es
add
mov
mov
or
bound
dec
mov
jbe
adc
fstps
ret
mov
lds
add
imul
jmp
inc
inc
sti
mov
mov
stos
cwtl
xlat
or
lods
and
mov
js
loope
fisubs
aam
xchg
mov
cmp
push
xchg
xchg
sbb
xchg
or
jae
cmp
mov
mov
pop
out
std
xchg
push
test
shrb
ljmp
inc
enter
sub
imull
divb
testb
ljmp
rorl
in
add
mov
xor
jae
add
repnz
dec
sbb
fistpll
mul
jge
std
or
sbb
xor
jb
sbb
jmp
int3
xorb
arpl
imul
pop
out
fnstcw
or
arpl
in
fists
jle
mov
adc
lock
xchg
sub
pop
cli
movl
repz
push
lds
xchg
into
xor
shl
xor
jmp
fs
pop
test
ljmp
jb
test
divl
sti
jge
jl
mov
inc
mov
shrl
insb
adc
adc
sub
mov
stos
fmuls
xchg
std
push
pop
stos
lret
xor
clc
stos
lds
data16
movsb
arpl
insb
add
xchg
leave
leave
inc
mov
cli
cli
shl
enter
cmp
insl
ret
ret
dec
xchg
movsb
movsl
or
popf
ds
arpl
and
inc
xor
test
movsb
and
mov
out
ret
movsl
xchg
cmc
in
and
test
adc
aas
jnp
jmp
test
bound
or
jnp
mov
jmp
divl
mov
xchg
jmp
into
sahf
xor
movsl
cmp
push
or
movb
jne
dec
clc
xchg
mov
icebp
lock
int
push
imul
imul
push
mov
xchg
jne
adcl
gs
adc
pop
adc
es
add
adc
mov
fnstcw
idivb
sub
aaa
jns
fbstp
icebp
mul
push
sarb
xchg
ret
lahf
inc
cmpsb
into
es
inc
cli
arpl
push
cli
or
or
xor
sub
adc
movsl
xchg
daa
bound
jae
add
sbb
sbb
cmp
cmc
jl
fstps
xchg
push
nop
cmp
dec
js
cmpb
sahf
out
clc
and
out
ret
mov
repz
les
imul
push
dec
fiaddl
mov
sarb
push
fcoml
gs
aad
adc
sbb
jmp
pop
js
shll
ja
sbbb
int
and
and
push
int3
xchg
into
xchg
mov
pop
dec
pushf
sbb
mov
jp
pop
push
push
sub
pusha
cmp
pop
setg
push
inc
rorb
sub
mov
pushf
push
push
rcl
jl
gs
imul
xor
and
andl
das
in
jp
out
js
negl
add
cmp
adc
iret
sbb
nop
inc
sub
and
or
sbb
bnd
repz
je
test
repz
adc
outsb
xchg
popa
adc
or
mov
arpl
lds
pop
jecxz
fs
push
mov
sbb
inc
imul
push
and
jg
jl
pop
pusha
lock
mov
mov
pop
jne
ds
pop
lret
test
mov
std
fstps
cmp
add
lret
dec
or
test
mov
inc
or
in
or
mov
leave
test
ljmp
sahf
push
gs
push
mov
cmp
mov
add
fidivs
mov
fdivs
or
push
mov
push
push
jnp
ja
add
mov
xor
dec
sbb
xor
push
loopne
jl
and
xor
lock
or
or
and
push
xchg
mov
cld
inc
fidivrl
add
xlat
adc
into
sbb
dec
mov
xlat
adc
in
dec
sub
cmp
enter
js
push
scas
das
es
sahf
jnp
aaa
mov
or
add
test
mov
imul
pushf
fcmove
pushf
jae
lea
lcall
icebp
xor
jecxz
setnp
loop
out
inc
test
add
mov
fcmovb
iret
cmp
cmp
mov
xor
sti
sub
leave
sahf
stos
clc
jb
loope
in
add
jge
clc
aas
mov
cmc
fmuls
lods
aaa
mov
xor
fcomi
sub
test
in
pusha
mov
mov
jmp
out
mov
sbb
mov
fwait
std
jae
and
inc
clc
out
loop
pop
in
mov
push
inc
iret
loope
jo
and
inc
pushf
shl
lret
std
adc
outsl
testb
out
sbb
mov
pop
call
adc
loopne
jne
adc
jle
mov
jno
fstpt
dec
push
dec
mov
push
ljmp
loopne
cmp
jo
lock
mov
lock
jmp
mov
cwtl
popa
ret
adc
jge
jae
sahf
adc
sahf
sti
imul
loopne
pushf
xchg
sbb
je
adc
and
incb
or
jns
and
sahf
ja
mov
sbb
mov
sbb
mov
dec
dec
jnp
xchg
stos
pushf
sbb
and
enter
jle
push
mov
or
fbld
mov
pop
fptan
call
hlt
pop
inc
xchg
inc
cld
sahf
data16
pop
pop
adc
cmp
adc
or
mov
jmp
mov
inc
mov
lret
movsl
inc
ja
ds
insb
xchg
cmp
and
jb
mov
stc
rcr
in
scas
sbb
or
ds
or
mov
push
add
fadd
inc
ficoml
add
test
sub
fwait
ret
sti
jbe
imull
les
mov
mov
test
out
mov
sahf
bound
rolb
or
test
lret
inc
cmp
je
fwait
das
and
mov
aaa
shll
inc
jg
nop
js
mov
mov
insl
pop
jnp
fisttps
in
mov
inc
add
push
xchg
movsl
lahf
cli
mov
mov
ror
adc
mov
ds
dec
cmp
fimull
scas
mov
cmc
or
decl
sub
pop
xor
in
mov
rcrb
loopne
imul
sbb
cli
js
adcb
sub
fcmovb
cmpsb
push
xor
jnp
ror
add
in
mov
daa
aas
addr16
dec
mov
xchg
in
in
sbb
rorl
incl
cmp
sub
mov
xchg
rol
sbb
add
pop
pop
jnp
sbb
pop
pusha
jns
push
or
sbbb
je
mov
repnz
dec
jae
test
or
std
std
jne
sub
push
jno
negb
xor
out
std
repz
mov
xchg
shl
ficomps
mov
in
sub
add
or
repz
mov
pop
adc
cmp
add
xchg
shlb
jg
aas
mov
scas
and
dec
and
adc
pop
lcall
movsl
ret
lcall
gs
cmp
data16
test
pop
negl
outsl
or
jecxz
pop
rorb
sub
lcall
push
aam
jp
les
xchg
arpl
test
xor
test
stos
std
jo
and
pop
jg
shll
xlat
adc
inc
xchg
add
or
mov
pop
int3
xchg
jmp
ret
cltd
cmp
push
push
sbb
and
or
cmp
into
xor
jnp
push
mov
scas
push
mov
nop
cwtl
mov
mov
icebp
jae
das
xchg
push
sarb
dec
pop
js
repnz
in
pop
mov
std
adc
div
test
xor
and
xchg
lock
pop
lock
or
dec
fucomp
mov
fisttpll
jecxz
imul
adc
xchg
or
pop
sarb
sbb
dec
bound
bnd
jge
data16
add
xor
jb
sahf
adc
popa
call
in
sbb
sbb
jbe
pop
mov
jp
adc
aaa
sub
jb
loopne
lds
xchg
sahf
sarl
pop
adc
xor
imul
jo
add
cli
mov
popf
jp
fisubl
xchg
mov
call
jge
fdiv
enter
dec
push
inc
mov
mov
push
xchg
dec
and
mov
pop
call
loop
jecxz
pusha
dec
fidivs
mov
jle
jl
inc
call
adc
mov
add
test
sub
inc
out
sarl
xchg
push
js
lcall
dec
pop
test
orl
sar
insl
or
fimuls
dec
jmp
cmc
pop
inc
xchg
and
test
popf
dec
dec
in
add
dec
insb
and
mov
insb
mov
hlt
lods
stc
xchg
cmp
in
movsl
test
adc
jge
repnz
test
inc
fdivrs
mov
add
push
xchg
adc
cmp
sub
cmc
movl
shlb
int
pop
xchg
sbb
mov
dec
loop
imul
push
sub
jl
mov
sbb
xchg
mov
sbb
dec
shll
pop
jecxz
sysenter
mov
and
mov
fiadds
mov
push
icebp
fadds
dec
jb,pt
mov
cmp
xorl
push
aad
push
shlb
out
or
lret
fiadds
cld
scas
jns
jmp
sub
enter
cmp
xchg
dec
mov
add
shrb
mov
hlt
in
push
fidivs
out
sub
lahf
lahf
adc
pop
testb
mov
mov
sahf
fimuls
push
in
push
arpl
cmp
or
add
pop
fs
ja
gs
fisttpll
jns
das
pop
push
xor
pop
xchg
push
mov
call
adc
mov
push
pusha
xor
popf
inc
mov
push
cmc
nop
imul
leave
and
xchg
or
test
hlt
popf
inc
or
sub
test
cli
pop
dec
dec
fisubrl
xor
mov
push
out
orl
inc
and
mov
addb
sbb
scas
push
mov
mov
nop
outsb
push
inc
jae
insb
inc
xor
movsl
lcall
popa
pop
fwait
sub
jb
loop
mov
xchg
xor
dec
lcall
jl
lret
es
cltd
adc
pop
fdiv
jne
out
ljmp
insl
mov
xchg
lea
ds
imul
push
sbb
mov
sub
sub
clc
adc
clc
sbb
cmp
inc
lret
mov
ret
rclb
xchg
leave
iret
cli
dec
int3
mov
movb
sahf
mov
push
push
lea
pop
cmpsl
dec
cmp
leave
xor
mov
jb
rorb
mov
jge
cld
testl
adc
jns
pusha
xchg
sbb
inc
xchg
add
sarl
sti
mov
testl
xor
pop
fadd
jp
jg
inc
jg
jecxz
pop
pop
icebp
or
dec
clc
lods
xchg
std
mov
and
inc
jo
xbegin
jae
xor
lret
lret
add
outsb
add
iret
stos
push
scas
xchg
lds
xor
or
mov
inc
cmp
popa
inc
mulb
or
daa
lret
out
sbb
stos
jge
inc
icebp
lods
rorb
sahf
push
and
pop
push
ljmp
and
psubw
and
cmp
fsubrl
jne
add
xor
sub
std
test
popf
jno
cmpsb
lea
and
mov
pop
jne
xlat
loop
movsb
cmp
insb
inc
js
sahf
xchg
daa
xchg
jmp
mov
lret
dec
sub
mov
jle
cmpsl
daa
or
scas
xchg
adc
xor
xor
sbb
dec
mov
mov
js
jle
pop
pop
mov
jb
pop
repnz
dec
lahf
push
push
mov
and
mov
fiadds
and
xchg
dec
ret
rcrb
jae
cmp
add
gs
mov
icebp
adc
outsl
cmp
sub
dec
xchg
bound
popf
aas
lret
mov
xorl
popf
int3
sub
movsb
sub
pop
ss
loopne
pop
push
sti
int3
out
add
and
mov
stos
stc
cmp
lret
xchg
push
mov
xchg
fildll
fiaddl
adc
negb
push
in
repnz
fsubrl
ds
aaa
in
bound
push
sub
cli
dec
cmp
adcb
mov
jns
and
jbe
outsb
fnsave
adc
mov
mov
dec
or
dec
sahf
sbb
dec
mov
cmp
jno
and
ret
mov
jl
or
sbb
ja
sbb
cmp
dec
rcrl
mov
dec
nop
mov
mov
cmp
lcall
xchg
fldenv
pop
xor
lcall
mov
ljmp
sbb
iret
sbbb
sahf
rorl
push
stos
out
sub
xor
lods
imul
aas
gs
stc
sarl
push
ficompl
inc
or
push
inc
cmp
pop
psubq
in
adc
push
lret
mov
insb
cmpsl
cmovno
push
pop
lahf
pop
or
sbb
adc
dec
push
xor
shrb
rcrb
sbb
call
ljmp
test
jno
and
sub
movsl
test
push
push
adc
and
js
cmp
xor
dec
popa
addr16
jbe
mov
sub
and
popf
push
lcall
adc
aaa
cld
stc
js
call
pushl
sbb
std
call
adc
sub
movsl
lret
adc
jnp
jmp
jp
or
repnz
lock
pop
mov
add
mov
popa
or
cmpsb
loopne
add
pop
cmp
psrlw
xchg
jns
pop
dec
gs
lea
bound
dec
mov
fbld
dec
or
xchg
mull
in
inc
dec
jns
jmp
cmp
mov
pop
xor
sbb
or
jle
pop
mov
mov
mov
fwait
mov
or
popf
dec
decb
push
outsl
pop
xchg
and
stc
mov
push
shlb
mov
std
clc
mov
xchg
pop
ss
xor
cmp
pop
xchg
daa
lds
jecxz
mov
xchg
mov
pop
mov
insb
shll
xchg
aad
and
test
and
mov
imul
xor
aam
mov
clc
add
inc
fwait
mov
dec
fs
push
jo
xchg
data16
std
xlat
cld
mov
lods
add
inc
fwait
mov
mov
test
dec
xchg
jnp
stos
mov
pop
arpl
mov
hlt
roll
inc
daa
sbb
fsubl
inc
pop
mov
mov
cld
sub
shll
xchg
out
and
lods
sbb
xchg
pop
movsb
lahf
inc
es
cmp
rolb
xchg
insl
mov
push
psubw
call
rclb
out
sbb
je
dec
xchg
adc
test
push
das
inc
or
or
shrl
xchg
xchg
adc
xchg
push
fisttpll
sbb
ss
aad
ja
rclb
lock
addr16
add
loop
mov
cmp
decb
dec
subl
push
jbe
fs
mov
xchg
and
xor
lret
sub
mov
shll
mov
jbe
insl
pop
test
mov
ja
lret
lds
xchg
push
fistpl
insb
rcr
out
daa
xchg
sub
rcrb
sahf
adc
mov
stos
dec
fnsave
mov
repz
pop
aam
mov
lock
aaa
xchg
in
xor
outsl
mov
mov
jl
ljmp
stos
add
and
and
enter
arpl
pop
or
and
jmp
xor
add
cwtl
push
sahf
fwait
add
lock
pop
mov
fiaddl
cmpsb
sbb
lds
dec
out
cmc
sub
xchg
sar
fdivrp
scas
outsb
xchg
push
adc
dec
in
aas
jg
mov
mov
data16
adc
mov
popa
imul
fidivs
cltd
lods
sub
fucomp
xchg
mov
adc
mov
mov
cltd
ljmp
repz
cmp
imul
and
cs
pushf
out
jo
and
ja
adcl
mov
sti
add
loop
xor
cmp
cmp
bound
xor
add
cmp
out
mov
and
mov
and
cld
insb
mov
in
rorb
sub
stos
and
dec
sti
in
leave
cwtl
hlt
rcrb
mov
int3
repz
or
fs
mov
out
xchg
xor
mov
mov
fs
sbb
pop
dec
mov
pop
jle
pop
aaa
cli
es
push
jns
ss
mov
dec
test
mov
push
lahf
dec
mov
push
cmp
sbb
dec
pop
adc
pop
lods
pop
adcl
out
mov
dec
mov
xor
push
cmpsl
sub
sbb
scas
inc
dec
or
dec
cmp
fdivp
add
stc
lret
jns
call
nopl
xchg
clc
cld
clc
arpl
lahf
dec
or
adc
pop
dec
test
mov
jl
mov
sbb
insl
add
xor
adc
rcl
scas
mov
cmp
pop
pop
test
out
into
popf
jnp
add
sarb
add
popa
xor
jge
cwtl
jecxz
jge
sar
scas
pop
lret
adc
and
jmp
repz
lret
rcrl
loop
enter
shlb
mov
sar
and
mov
test
cmpl
testl
push
jle
jne
scas
sbb
or
lret
mov
or
lea
pop
lds
dec
movsl
or
sbb
test
fcmovnb
dec
mov
xlat
push
pop
out
hlt
test
or
das
nop
lods
xchg
push
iret
sbb
sahf
js
cmc
fcomps
sbb
mov
sub
movl
adc
mov
sbb
ja
push
push
pop
jne
and
in
fsubrp
mov
popf
pop
cmc
xor
call
inc
call
mov
cwtl
ret
shll
push
mov
pop
enter
stc
fdivrs
add
enter
fistl
mov
sbb
xchg
xor
or
sub
in
lret
in
inc
and
dec
movsb
or
xor
fsubrl
adc
sbb
cmp
in
or
sahf
xchg
xchg
jp
clc
inc
adc
hlt
movsb
sub
ds
andl
inc
dec
jl
mov
iret
mov
andl
dec
pop
inc
sbb
or
addr16
std
fcomps
pop
andb
or
push
cmp
scas
jmp
scas
dec
mov
and
fdiv
or
fstps
mov
frstor
mov
mov
cwtl
push
ret
mov
rcrb
adc
sub
shrl
mov
adc
int3
lods
jne
jge
filds
cli
lds
add
xor
xor
stos
test
nop
fcmovnb
jmp
int
xlat
enter
lock
jb
nop
test
add
rcll
fwait
inc
test
call
jae
or
mov
dec
movsl
in
xor
xor
pop
in
call
xchg
shrl
cmp
cld
nop
mov
inc
mov
cwtl
sbb
dec
shlb
cli
call
dec
pop
push
imul
lods
jno
stos
jecxz
or
loope
adc
or
lds
hlt
xchg
xor
dec
dec
icebp
stos
mov
jnp
xchg
add
enter
mov
inc
or
shl
pusha
ja
inc
cli
cs
sbb
dec
out
hlt
or
and
mov
adc
jg
mov
cwtl
rcrb
cli
mov
ret
and
mov
add
fcmovnb
and
shr
shll
popf
mov
repnz
fcmovbe
and
add
sti
pop
jecxz
push
mov
sbb
cld
fucomi
ret
jge
shlb
xor
mov
inc
xchg
mov
dec
es
ljmp
mov
lret
inc
out
xor
mov
pusha
aad
lea
mov
out
movsb
fadds
jbe
repz
mov
clc
call
scas
jg
lea
fcomi
mov
ror
push
lods
test
dec
rcrb
btc
jge
pop
pop
jmp
ret
pop
add
mov
mov
dec
roll
fdivs
sub
push
pop
les
adc
nop
or
aad
jge
or
add
cltd
hlt
cld
mov
aas
int
inc
mov
jae
add
xlat
std
inc
push
or
xchg
xor
jae
dec
push
xchg
in
sbb
or
dec
mov
add
pop
sbb
cltd
cld
pop
ja
stc
and
inc
push
punpckldq
test
sbb
popa
xchg
mov
loope
mov
testb
mov
push
das
cmc
in
adc
push
std
add
sub
sar
call
cmp
dec
imul
data16
add
fcomps
pushf
xchg
and
xor
or
popa
call
gs
xor
mov
outsb
fmull
rorb
bound
aad
movsl
cmpsl
cmp
add
mov
loopne
mov
and
popf
xor
cwtl
pop
lods
push
and
sti
insl
inc
fcmovnbe
lahf
dec
repz
pop
jo
add
pop
push
and
or
dec
and
push
sbb
push
pop
scas
lods
nop
jno
inc
icebp
lret
xchg
movl
push
test
pusha
sti
cmp
imul
insl
cwtl
cmpsl
cmpsb
pop
in
and
in
push
mov
in
test
sbb
xchg
mov
and
stos
inc
sub
push
rolb
loopne
jl
mov
fcmove
jl
mov
aad
mov
or
faddl
in
lds
nop
push
pop
hlt
push
cmp
outsb
push
xchg
incl
loopne
mulb
test
cmp
sbbl
fadd
movsb
mov
cmpb
aaa
xor
pop
xchg
int3
rol
sbb
xchg
lods
pop
je
and
flds
xor
mov
icebp
mov
lock
jb
call
ret
mov
inc
dec
aam
cld
jbe
add
fadds
mov
jmp
out
and
dec
and
notl
push
dec
andl
int
cwtl
inc
lock
cpuid
pushf
pop
jg
lods
sub
test
popa
push
out
popa
clc
test
std
sub
lds
fisubl
cmpsl
xor
pushf
add
mov
mov
sub
xchg
cmp
push
add
mov
sub
icebp
ss
lds
stos
scas
shlb
mov
or
lahf
das
aas
mov
jno
push
mov
scas
add
aaa
add
pop
and
sub
push
and
stos
clc
ljmp
or
jg,pt
push
insl
push
ret
ret
jecxz
in
sub
sarb
mov
lret
stos
mov
mov
xchg
movsb
dec
movsb
xor
cmpsb
mov
fwait
out
test
and
xor
sbb
rorl
mov
sub
in
rcll
pusha
xchg
or
rcrb
sbb
out
inc
movaps
les
call
aas
cmpsl
sub
cld
jle
push
daa
jp
mov
lret
jnp
push
fcomps
push
pop
cmp
mov
jnp
lods
sub
push
inc
hlt
mov
cmp
int3
push
adc
je
js
hlt
add
rcrl
scas
mov
push
shlb
js
pop
dec
int3
adcb
sub
xchg
cmp
push
rorl
and
jb
xlat
cmp
pop
repz
adc
sarl
loopne
cli
push
enter
inc
lods
or
add
ror
cmp
subl
or
pushw
pop
mov
leave
cmp
and
shll
int
push
pop
push
rcll
sbb
popa
loope
and
xor
mov
jae
or
push
dec
fildll
xchg
or
inc
jbe
vmulpd
daa
cltd
pop
jge
jbe
inc
mov
frstor
jb
addr16
sub
ds
sti
ds
and
sbb
lcall
cmp
push
mov
mov
loop
les
loope
repnz
or
filds
movsl
push
pop
shl
add
je
pop
sub
mov
xor
mov
dec
sub
xor
add
jnp
push
gs
jno
cld
movsl
or
or
mov
inc
pop
pop
fucomi
cmp
sbbl
sti
sti
gs
fwait
hlt
mov
stos
jg
cmp
lock
cmp
fwait
cmpsl
mov
sub
pop
add
mov
mov
icebp
lods
call
xor
sub
roll
pushf
mov
sbbl
bound
push
andb
mov
cmp
push
popl
lcall
push
mov
push
fidivs
fdivrp
xor
jb
scas
fdivrl
les
and
out
sbb
in
aas
and
mov
call
sti
mov
jle
add
in
repz
push
pop
jno
cmp
jecxz
stos
lods
test
dec
arpl
jl
ja
or
inc
push
add
test
pop
andb
pop
xchg
sbb
out
lcall
adc
bound
cmpsl
out
add
testb
les
gs
inc
push
or
cmp
in
popa
fisttpll
jno
add
cmp
add
lods
inc
pop
aam
mov
push
inc
mov
mov
jb
mov
pop
sbb
mov
cmp
nop
sarl
mov
push
ret
xor
orl
mov
or
jge
sahf
aaa
adc
arpl
dec
adc
shlb
xchg
mov
mov
sbb
xor
sbb
push
dec
cltd
dec
add
jae
stc
inc
push
ds
cmpsb
sbb
push
lock
fcomps
scas
mov
jl
fstpl
mov
or
adc
mov
inc
xchg
addl
cmp
sahf
les
and
and
and
sub
popa
sbb
pop
inc
pop
or
mov
sub
std
lahf
xchg
sub
dec
sbb
add
push
loope
mov
dec
sahf
je
call
aas
dec
mov
pop
mov
add
sub
repz
cli
lods
dec
in
xchg
cmp
std
lahf
das
mov
sub
and
dec
mov
mov
add
push
pushf
xchg
sahf
sahf
int
shll
sub
or
das
push
xchg
aas
ret
lds
shlb
popa
inc
lcall
sub
dec
pop
push
cmp
int3
lea
pop
cmc
cwtl
mov
insl
cli
fsubs
mov
inc
lret
nop
clc
inc
mov
js
sarb
js
xor
scas
dec
roll
xchg
jb
es
mov
mov
xchg
test
inc
out
and
xlat
repnz
pop
int3
sbb
cmp
scas
jbe
inc
cltd
xchg
fcomps
loop
jbe
mov
ret
or
push
shlb
test
movsb
les
mov
fistps
jae
lods
gs
jno
aad
divb
in
xor
xchg
nop
jo
and
aad
pusha
sbb
test
bnd
jmp
rorl
push
data16
leave
sbb
hlt
xchg
scas
sbb
cmp
sbb
js
xchg
in
add
mov
movsl
pop
pop
dec
fndisi(8087
or
mov
std
jmp
setge
xor
mov
xlat
inc
shl
xchg
cmp
jnp
lods
fcmovbe
or
mov
sar
and
loope
push
xchg
bound
movsb
and
mov
ret
xor
jo
lahf
leave
mov
aas
lds
pop
clc
jmp
lods
xchg
sbb
aam
jnp
ror
or
aas
sub
sbb
rol
popa
cmp
stos
pop
cmp
jp
in
sbb
popf
xchg
jb
push
ret
mov
or
xchg
ss
jle
imull
loope
out
cmp
add
fldt
pop
xchg
out
je
pop
mov
xor
or
xchg
ljmp
jmp
je
jns
xor
popa
out
sub
ds
mov
push
pop
pushf
cwtl
pop
movsl
enter
ja
mov
shlb
pop
popa
gs
and
xor
inc
std
inc
xchg
mov
mov
mov
dec
inc
inc
jp
adc
lahf
sbb
jp
add
xchg
push
push
pop
ret
std
mov
stc
xchg
aas
in
cmp
lods
jbe
in
sarb
out
add
js
mov
pop
mov
adc
je
addl
ja
xchg
dec
shll
pop
dec
cmp
jo
and
test
lret
mov
shlb
imull
sub
fidivrl
sbb
shrl
lds
mov
int3
dec
lahf
dec
add
pusha
pop
dec
shlb
cs
sub
lods
stos
push
push
aas
cmp
cmc
adc
xchg
inc
cmp
out
push
mov
cmp
mov
xchg
adc
push
lods
fwait
push
cs
popf
data16
aam
or
inc
std
ds
ljmp
inc
iret
ja
out
scas
mov
fcoml
imul
mov
fxch
fdivrl
mov
in
mov
icebp
cltd
mov
stc
adc
mov
push
or
sbb
cwtl
mov
sbb
clc
xor
test
mov
xor
movsl
or
mov
rcll
sub
rcll
cmpsb
out
test
jnp
mov
and
sub
bound
sub
push
sarl
cmp
xor
mov
repz
inc
lea
pop
andb
add
adc
sbb
or
jle
add
xlat
pop
adcb
pop
cmpb
dec
inc
pushf
hlt
push
xor
and
das
xchg
sti
aaa
cmp
and
dec
jo
cmp
pop
arpl
inc
pop
pop
sbb
imul
xchg
push
sahf
scas
lea
pop
mov
sbb
sbb
mov
adc
adc
fildll
loop
add
cmp
out
clc
aas
mov
push
mov
adc
outsl
push
sbb
notl
sbb
mov
sbb
loop
ja
xor
outsl
out
insl
mov
lds
fucom
aaa
lcall
call
jo
jp
sub
nop
pop
cmc
aaa
pop
mov
or
pop
inc
push
daa
out
jmp
sub
sub
cmpsb
call
cli
xchg
fiaddl
jns
adc
jp
jb
ljmp
pop
mov
sbb
fdivrl
iret
or
ret
ja
sbb
fnstsw
push
iret
xchg
ljmp
sbb
jae
pop
repnz
xchg
inc
mov
add
aam
or
or
ja
adc
subb
add
or
jne
mov
or
dec
sahf
lock
jl
loope
test
mov
mov
aaa
sbb
sbb
insb
popa
mov
dec
sbb
pusha
cmpsl
push
pop
daa
cli
sub
push
lea
decl
test
int
xor
inc
pop
xor
lahf
jmp
cmp
mov
rorb
or
repz
sbb
repnz
cltd
jne
and
jo
lea
je
sahf
push
in
lds
xor
sbb
sahf
jg
push
dec
movsl
pop
fsts
adc
scas
icebp
iret
sub
imul
icebp
jb
stc
stos
jbe
lods
jmp
iret
es
inc
xor
jge
leave
popf
fadds
xlat
ds
into
and
icebp
sarl
scas
adc
popa
push
mov
inc
sbb
js
xchg
hlt
enter
adc
xor
xchg
sbb
outsb
js
adc
inc
xchg
mov
negl
lock
inc
les
mov
daa
cmp
lds
lea
add
fcom
or
stos
or
std
aam
mov
inc
pop
push
push
and
xlat
sbb
in
mov
fimull
push
push
cs
lret
pop
into
sbb
fisubl
scas
cmp
push
adc
push
fdivs
pop
pushf
insb
jmp
fwait
xor
inc
push
cmpsl
push
jge
add
mov
rcll
xchg
not
hlt
fwait
mov
les
shr
mov
inc
repnz
xor
fildl
leave
ret
adc
push
popf
shrb
add
xchg
pop
cmc
push
insl
cltd
loopne
sub
mov
xchg
sbb
aam
push
and
mov
into
test
sbbb
jns
ds
in
rcll
call
inc
mov
lea
push
bound
in
dec
ret
fs
bnd
xorl
mov
loope
sub
sub
inc
ljmp
xchg
inc
xor
or
call
mov
mov
je
mov
hlt
and
cmc
iret
clc
jl
ud1
rorb
imul
enter
jne
xchg
xchg
sarl
mov
std
loop
cli
loope
mov
pop
xchg
mov
xor
scas
cmpsl
pop
mov
mov
addr16
xchg
clc
test
dec
mov
sbb
addr16
xchg
pop
push
fstpl
mov
adc
aad
mov
test
jbe
add
imull
bound
add
adc
push
or
mov
or
sbb
xchg
rcrl
dec
in
shlb
pop
mov
pop
add
jge
push
test
bound
pop
popa
or
or
aaa
hlt
popl
adc
stos
add
adc
std
jae
sbb
sub
mov
jns
push
and
jmp
push
xor
call
cmpsl
mov
pop
cmp
loop
scas
test
out
or
pop
sub
push
pop
push
scas
out
leave
mov
leave
lods
mov
mov
sahf
mov
sub
repnz
int
xchg
pop
or
xchg
add
loopne
addr16
and
mov
push
jecxz
xor
add
sbb
aad
xor
sti
fsubrl
movsb
aaa
push
xchg
stos
orl
mov
dec
xchg
jge
pop
inc
sub
je
outsl
cwtl
rol
pop
push
scas
lret
push
push
sahf
pop
and
inc
adc
stos
and
jge
rolb
mov
cmp
repnz
sarl
add
add
pop
pop
daa
jl
jl
cmp
sbb
ss
cmp
sub
dec
pop
hlt
sahf
pushf
ja
rcrb
mov
test
insl
inc
adc
cltd
mov
scas
xlat
mov
lock
ret
mov
mov
dec
popa
mov
push
aas
adc
daa
imul
int
add
push
xchg
cmp
adc
fsubrs
sub
pop
jp
jo
enterw
cmp
dec
cmc
fisttpll
mov
inc
jo
gs
dec
lods
fbld
mov
js
std
sbb
mov
and
mov
lock
inc
lds
jns
sahf
fs
lcall
jl
xor
repz
arpl
sbb
inc
and
xchg
or
or
add
mov
push
insl
test
jne
scas
cmp
and
in
pop
dec
scas
and
cs
aam
daa
push
ficompl
loope
or
cmp
hlt
sub
iretw
shl
daa
loopw
notl
stos
movl
inc
outsb
and
jno
push
out
rcll
fidivl
push
int
popf
fdivs
xor
mov
xor
xor
insl
adc
mov
movsb
out
inc
cli
ds
cmpsb
push
adc
sub
fnsave
movl
mov
rcrb
pop
mov
inc
jae
pop
mov
sbb
cld
or
insl
mov
mov
lahf
and
sbb
xor
jnp
mov
cwtl
shlb
mov
dec
cmpsl
call
pop
int
sbb
xor
int3
jbe
pop
pushf
jo
inc
out
push
cwtl
js
push
std
or
repnz
in
push
lea
sub
arpl
dec
fisubl
cmp
icebp
pop
xor
push
fiadds
or
lods
or
movsb
pop
fwait
adc
das
pusha
scas
mov
shrb
lret
aam
add
mov
shrb
ret
movsb
mov
daa
aas
mov
stc
sub
jge
int3
jmp
fs
lea
into
les
arpl
pusha
adc
and
jecxz
xchg
out
in
jbe
leave
scas
pop
mov
jg
fwait
les
or
and
mov
sti
xchg
dec
mov
inc
add
dec
push
sti
mov
or
adc
cmpsb
sbb
mov
mov
addr16
mov
or
les
dec
inc
ret
cmp
push
push
cmp
push
lahf
sub
scas
dec
loop
testb
push
in
fisttps
cmpsb
mov
fstpt
test
out
rolb
mov
faddl
and
jo
test
and
xor
mov
inc
xor
test
imull
sbb
mull
add
adc
mov
popa
fistps
ds
jge
loop
int
mov
push
or
jge
push
mov
test
xchg
jle
ljmp
xor
xchg
mov
jne
xchg
outsb
jl
imul
push
xchg
nop
scas
inc
cs
test
fdivs
addb
leave
decb
cli
repnz
dec
add
mov
pop
orb
leave
cmpb
add
sub
push
hlt
add
cmc
pusha
push
add
mov
jbe
fwait
pop
popa
mov
sub
movsb
shr
insl
notl
xor
outsb
sub
or
push
push
or
daa
add
cmp
cs
dec
or
hlt
out
shlb
dec
add
repnz
jbe
add
mov
cwtl
clc
daa
push
lock
sbb
mov
sub
push
repz
movsl
bound
in
out
mov
or
xor
jns
mov
adc
push
test
cltd
xor
and
add
or
test
push
jne
mov
dec
inc
outsl
mov
push
mov
pushl
add
js
imul
pop
xchg
or
add
xchg
mov
hlt
enter
in
xchg
mov
mov
sbb
sub
mov
push
sbb
mov
ljmp
lea
add
lahf
scas
mov
mov
sahf
xor
mov
in
dec
into
adc
ret
ret
notl
cmc
xor
mov
call
mull
mov
sub
mov
outsb
dec
ljmp
ljmp
fsubrs
jno
adc
sub
repnz
js
xlat
iret
push
loope
mov
out
fwait
test
loope
jo
pop
out
cmp
dec
loop
pop
int3
push
xchg
pop
dec
sub
shl
sbb
jnp
fiaddl
fstpl
push
dec
mov
inc
and
sbb
and
cmp
pop
imul
sbb
cmp
pop
xor
jo
xor
sbb
adc
and
mov
ret
jne
pop
mov
inc
cli
jmp
lcall
or
or
fnstenv
dec
mov
pop
dec
imul
pop
push
xor
popa
ret
clc
add
dec
push
mov
add
mov
pusha
aas
int3
adc
hlt
push
sub
dec
out
jne
pop
sahf
das
sbb
fbld
data16
xchg
jge
ss
and
jns
cmp
hlt
stc
push
mov
jl
rorb
pop
mov
cmpsb
lea
mov
stos
leave
xchg
je
sub
or
mov
cli
scas
mov
out
cvtps2pd
call
jmp
std
dec
cs
es
daa
xor
cmpsl
into
mov
add
sbb
nop
loopne
pop
decb
sbb
xchg
push
bound
addr16
and
mov
cwtl
jbe
insb
adc
push
mov
jg
push
dec
call
and
and
lahf
inc
push
stos
jmp
adc
fcoms
add
sbb
lds
inc
push
add
mov
cmp
out
idivb
cli
fcoml
pop
mov
dec
inc
mov
and
jp
mov
inc
std
cmpb
jae
int3
dec
int
loopne
test
push
jge
pop
mov
cmp
mov
cmp
in
movlps
dec
dec
cmp
xchg
test
jge
pop
shrb
rcrb
cmpsl
repz
das
dec
mov
mov
mov
iret
jg
or
mov
loopne
lods
lret
in
dec
daa
int
mul
cmp
stos
push
dec
das
add
or
jbe
lods
rcrl
jbe
ljmp
jmp
dec
lahf
repnz
ret
jmp
lret
insl
and
incl
lahf
popa
decb
insb
jp
adc
ret
sbb
xchg
ds
cmp
test
filds
and
cmc
dec
or
inc
mov
loopne
outsl
lds
add
mov
xor
daa
movb
sar
or
jnp
cmp
cwtl
inc
in
push
repnz
sub
inc
dec
ss
sahf
jmp
aam
sar
int
mov
dec
dec
cld
test
pop
adc
dec
fsubrl
push
jg
push
fildl
mov
rcl
mov
test
or
mov
ds
push
add
enter
lahf
cmc
cwtl
test
jns
cmp
insl
fs
pop
daa
cmpsl
dec
pop
mov
sbb
lea
sub
repnz
mov
js
mov
and
push
xchg
inc
push
mov
fmuls
mov
cmp
or
and
in
fidivrs
lret
inc
gs
andl
subl
call
mov
outsl
insb
xor
popf
lods
jo
and
out
arpl
push
cmp
inc
cli
fnstcw
pop
or
ret
into
jmp
mov
hlt
xchg
xor
xor
adc
sarl
loopne
movsb
dec
aas
mov
push
sub
cmp
add
dec
arpl
ljmp
in
and
int3
loope
pop
add
stos
cmpsb
or
xor
rolb
push
jne
sbb
push
das
add
jecxz
fildll
rcl
addr16
sbb
cmp
mov
push
xchg
push
or
pop
sti
mov
jbe
mov
ret
inc
loopne
pop
test
xlat
jo
outsb
or
clc
add
scas
lock
divb
loopne
mov
gs
mull
add
push
arpl
out
fisubrs
cltd
xor
xor
push
xchg
icebp
repnz
shrl
pop
into
add
lret
mov
adc
aam
push
pushf
cmp
xor
add
cltd
and
icebp
jmp
js
notl
into
bound
scas
sbb
push
fldt
push
lret
test
test
loop
sub
in
jbe
mov
and
and
push
call
and
jae
sbb
and
add
jp
jnp
cmp
cmp
stos
cmp
aas
and
jle
mov
lahf
sbb
add
push
int
hlt
push
rolb
xchg
lds
push
fisubrl
jbe
aam
repz
and
lret
and
lret
pop
mov
sbb
imul
pop
notb
lods
jae
out
repz
int
or
lea
and
stc
mov
jecxz
mov
dec
push
and
pop
cld
les
push
aaa
inc
gs
mov
push
dec
scas
push
ret
das
int3
push
push
std
rcl
mov
int
movsl
push
jle
jns
mov
mov
and
mov
pop
mov
inc
fbstp
or
pop
leave
out
iret
mov
jl
clc
cmp
mov
fmul
mov
push
inc
sti
cld
xor
es
insb
sub
call
lock
rcll
add
sub
mov
inc
notl
sub
es
push
inc
mov
les
popf
ret
and
cmpsl
jbe
into
das
and
bound
jle
push
mov
sbb
lahf
imul
les
add
test
and
cmp
loop
mov
add
popa
adc
ds
and
xor
mov
jge
add
aam
out
ljmp
jb
in
out
rep
sahf
mov
sahf
mov
out
out
fisubs
push
into
jae
dec
and
aas
mov
adc
ja
ljmp
cmp
mov
and
sbb
rclb
sub
jmp
jne
mov
push
test
in
mov
jp
shl
pop
vmovapd
loope
mov
xor
fcmove
pop
cmp
cwtl
and
mov
sub
xchg
cmp
int3
insl
and
fcompl
hlt
divl
adc
popf
outsb
movsl
and
mov
mov
xlat
jg
pop
or
popa
inc
xchg
lret
test
jmp
sbb
fnstsw
mov
fildl
push
push
cmp
or
jmp
cld
sub
dec
push
adc
aad
push
and
mov
aas
cmpsb
mov
push
ss
gs
insl
cmc
mov
stc
stos
lret
mov
dec
and
dec
or
dec
push
arpl
dec
sbb
enter
push
je
inc
rclb
pop
pop
je
rorl
jb,pt
sub
sbb
repz
popa
lret
ret
mov
pop
inc
and
dec
jns
popa
add
sti
push
icebp
jmp
xor
cmp
lret
out
pop
test
adc
jp
push
dec
adc
pop
xor
mov
mov
sbb
jmp
js
or
sbb
mov
leave
ss
xchg
or
and
sbb
or
call
loope
jle
jmp
out
push
mov
mov
mov
and
xchg
imul
hlt
xchg
enter
add
in
inc
mov
jo
out
fcmove
aad
sub
das
scas
popf
inc
fstps
jno
cmp
xor
add
sub
lods
subl
bound
call
or
push
aaa
xchg
sub
or
lods
icebp
jp
sbb
push
cli
mov
push
cmpsb
inc
ret
pop
retw
sbb
cmp
gs
and
ret
mov
loope
xchg
sti
pop
or
inc
adc
aaa
mov
xchg
adc
inc
iret
lret
pop
inc
imul
or
into
cmp
in
sub
in
push
or
jle
nop
test
or
pop
faddl
inc
add
adc
xchg
and
inc
out
and
leave
movsl
xchg
stc
mov
dec
js
and
adc
jns
repnz
mov
pop
repnz
cwtl
in
lea
ffree
or
pop
pop
ljmp
faddl
loope
cmc
in
add
bnd
fwait
or
xor
enter
and
cmpsb
orl
sub
inc
loopne
or
pop
jns
fnsetpm(287
push
fists
jl
mov
xchg
jp
arpl
inc
mov
hlt
inc
loope
lea
push
fdivp
or
mov
test
mov
fildl
pop
jg
rcrb
inc
sbb
and
sbb
imul
dec
loope
mov
mov
inc
lret
dec
hlt
dec
out
es
jns
movsb
mov
jns
ja
or
mov
sbbb
hlt
popf
shll
cmc
add
mov
inc
mov
push
pushf
aas
aad
in
jo
fbld
pushf
sbb
push
leave
sbb
xor
rcll
stos
jne
fists
insb
inc
add
jne
mov
lods
loopne
push
divl
rcl
and
test
xchg
movsb
movsl
psllq
call
pusha
mov
push
push
push
cli
cmp
fistps
and
mov
dec
test
xchg
cld
in
sub
les
xorb
sti
sub
test
fisubrl
lds
mov
mov
aaa
ja
cmp
mov
mov
pop
cmp
pop
das
cltd
adc
dec
mul
or
fs
std
int
test
mov
in
movsb
loop
aam
adc
fdivl
and
cltd
test
insl
gs
add
lret
ss
fsubrp
jb
cmp
out
das
rcr
out
and
call
imul
push
ret
jecxz
and
cmp
mov
cmp
cmpsl
or
push
cltd
cmp
gs
mov
mov
jns
test
pop
mov
stos
sub
pop
jle
add
push
ret
xor
shrl
and
shl
xor
lret
inc
cmp
mov
dec
jl
push
jge
cld
inc
cld
cmpsl
leave
sbb
pop
mov
sahf
jmp
xor
lods
mov
sub
inc
push
sbb
sub
daa
inc
xlat
and
bound
sub
int3
hlt
addl
mov
jl
inc
mov
outsl
sub
sub
dec
daa
int3
mov
push
jbe
mov
movsl
mov
repnz
mov
push
les
enter
mov
icebp
add
or
inc
push
or
js
movsl
sbb
mov
pop
test
jecxz,pn
in
push
sahf
add
cmp
mov
fdivl
xchg
fwait
dec
xor
inc
fiaddl
cwtl
jnp
pop
daa
add
sbb
xor
jb
or
arpl
sbbl
rep
sarl
xchg
clc
jle
pop
xchg
lret
adc
flds
sbb
icebp
dec
gs
movsl
xor
cmp
mov
daa
pop
stos
or
aam
les
sbb
call
add
aaa
sbb
sarl
mov
in
in
xorl
mov
cltd
mov
and
sbb
stos
jne
jno
xchg
jge
outsb
xor
jmp
scas
mov
adc
mov
adc
mov
push
std
sahf
sub
or
movsl
push
and
cwtl
sbb
loopne
jbe
pop
hlt
inc
push
sbb
es
sub
pushf
inc
scas
add
in
lahf
push
xchg
pop
dec
sub
and
jmp
shl
outsl
push
aaa
push
mov
xchg
mov
sbb
fnstsw
loope
jb
ds
adc
aas
mov
mov
sub
std
cmpsl
insb
ljmp
adc
loope
cs
adc
movl
mov
mov
sub
jnp
sub
pop
or
rcl
imul
pop
or
jg
hlt
in
pop
cmp
xchg
pop
in
ljmp
jg
adc
sbb
xchg
jbe
insl
outsb
cmp
xchg
mov
out
pusha
call
sahf
jo
mov
lods
cmp
sub
cmp
mov
pop
shr
cmc
cmp
sub
test
stc
push
add
inc
jecxz
pop
push
xor
fdivs
out
and
add
mov
mov
clc
into
ja
les
pop
push
inc
pop
fildl
inc
and
cmp
mov
lock
in
inc
movsl
dec
mov
outsl
push
xchg
jb
jae
lods
cmp
cli
push
mulb
data16
push
xchg
mov
lods
sub
jo
fisttpll
aaa
insb
pop
in
dec
sub
repz
add
jbe
pop
fiadds
dec
sub
or
rol
addr16
xlat
arpl
mov
pop
aad
int
push
dec
jecxz
stos
enter
das
push
or
jmp
jp
scas
repz
mov
dec
jb
inc
xchg
das
into
xchg
mov
push
jno
push
dec
mov
mov
mov
mov
xor
fcoms
pop
test
pop
js
fnstcw
jecxz
pcmpeqw
sbb
and
and
repnz
bound
loope
dec
sbb
gs
xchg
cmp
in
jb
cmp
cld
cmpsl
inc
rorb
dec
push
movsb
jbe
jbe
mov
in
mov
push
or
cltd
inc
jmp
cwtl
ja
jnp
xchg
dec
adc
gs
inc
push
fsubl
shll
pop
ret
xor
jbe
sub
cmp
push
jmp
sahf
mov
lret
stc
push
das
pushf
xchg
mov
jl
fisubrs
aad
push
xor
xor
adc
stos
aam
in
mov
pop
in
ljmp
lock
jbe
xlat
lret
lret
or
dec
sub
or
cmp
shrl
cli
test
fnsave
int3
lock
repz
rcrl
dec
lret
inc
dec
scas
pop
lret
xchg
addb
cltd
dec
imul
add
mov
inc
jno
mov
cmp
pusha
cmp
pop
ret
push
enter
sub
lea
adcl
inc
xor
in
fs
insl
or
mov
fsubl
add
enter
or
xor
out
xchg
ds
cmp
loopne
jbe
push
pop
pop
popf
push
sbb
inc
aas
call
call
outsb
xchg
mov
jnp
int3
sbb
lahf
jnp
xor
pop
icebp
push
sbb
xor
or
jmp
mov
arpl
mov
jge
cs
mov
imul
add
push
xor
insl
mov
mov
sub
and
jle
aam
or
repnz
cmp
repnz
xor
mov
je
push
stos
fidivrl
lret
test
vsqrtss
into
mov
mov
rcr
cmp
xchg
jle
shl
mov
rclb
insl
shrb
dec
out
scas
sub
inc
loopne
xor
push
and
fimuls
jp
add
xlat
aam
imul
mov
xchg
fbstp
dec
push
enter
cmp
adc
pusha
xor
adc
mov
mov
cmp
adc
gs
popf
outsl
aam
aam
int
add
sbb
flds
roll
mov
cli
cmp
mov
popl
in
out
xor
lahf
mov
lahf
xor
push
mov
adc
xchg
jl
pop
aas
fadds
faddp
mov
cmp
sub
pop
ficoml
daa
cs
xchg
mov
lds
mov
andl
pop
gs
aam
test
repnz
lods
fwait
shrb
fistl
xchg
adc
xor
mov
shrl
cmp
pushf
mov
test
flds
push
xor
sbb
es
mov
push
dec
jp
call
movsl
lds
xchg
xor
cmp
repnz
sbb
sbbl
rcl
out
fiaddl
out
pop
cld
push
xchg
movsl
mov
mov
push
repnz
mov
inc
fs
mov
xor
mov
sarl
add
or
or
loopne
sti
scas
sub
aam
inc
sbb
mov
push
adc
fnstcw
jle
ljmp
add
das
cs
cmp
movsb
cld
test
push
std
shlb
pop
xchg
pusha
in
lea
sbb
add
leave
push
sub
int3
popa
mov
in
sub
jge
xchg
mov
pop
outsl
mov
push
lret
pushl
or
pop
int3
repnz
mov
insl
inc
jle
daa
pop
addr16
iret
scas
or
adc
pop
outsl
mov
mov
loope
repnz
jg
mov
movb
aad
lret
push
cmc
push
inc
enter
aas
and
inc
add
test
xchg
inc
mov
cltd
lock
mov
notl
cmp
adc
sub
pop
pushf
fnstenv
fldl
sub
lahf
xor
testl
ja
cli
sub
push
scas
inc
dec
jns
xlat
divb
cmc
jge
cmp
scas
sbb
lret
push
jge
and
fs
pusha
call
pop
fisubrs
es
mov
nop
stos
daa
bound
push
es
cs
in
repz
add
xchg
std
push
jg
sbb
xor
fidivl
jns
hlt
imul
and
fwait
push
jmp
dec
inc
addr16
cmp
dec
jmp
mov
movsl
cmpb
scas
nop
adc
pusha
ja
inc
in
imul
jb
mov
and
insb
ret
mov
imul
push
hlt
add
add
scas
in
inc
push
xor
clc
push
dec
jae
cmp
imul
movsl
sbb
or
jae
jl
fistpll
or
jo
fistpl
cmpsl
sub
pop
cmp
lds
sbb
pusha
sbb
iret
jmp
cmp
stos
xchg
lds
ret
sbb
ja
shll
jne
lret
mov
inc
push
decl
enter
mov
lods
mov
mov
jae
sub
push
sub
hlt
bswap
bswap
fcomip
lds
and
out
jnp
or
mov
mov
push
enter
sbb
add
xchg
enter
xor
pop
add
aaa
lahf
mov
and
sti
lcall
lret
ljmp
addr16
fwait
jno
cmp
sbb
sbb
loope
push
fisttpll
jns
pop
lods
cmp
xchg
aad
mov
ja
or
jae
clc
cwtl
xorb
adc
jg
add
cwtl
sub
push
cmp
cmp
ljmp
inc
mov
fucom
sub
aaa
mov
dec
aam
pop
out
lret
cmp
xchg
dec
push
mov
xchg
cmpsb
cmpsl
in
orb
adc
adc
hlt
xor
xchg
add
jge
lock
mov
leave
int
in
lcall
mov
int
sub
lret
sarl
ret
fs
adc
je
cs
es
dec
lods
cmp
or
mov
rcrl
push
mov
sub
arpl
adc
push
cmpsb
pop
in
and
mov
enter
pushf
or
xchg
cltd
notb
scas
mov
movsl
loop
mov
fdiv
iret
or
inc
fstp
fs
inc
push
cmp
push
mov
pop
imul
jb
enter
or
and
int3
pop
sub
loope
mov
mov
or
out
cmc
ret
stos
adc
fimull
testb
out
xor
ror
aam
cmc
pusha
dec
pop
lret
repnz
scas
add
push
ljmp
call
leave
xchg
inc
iret
pop
ljmp
lods
dec
into
dec
data16
dec
mov
hlt
outsl
inc
xor
and
xchg
mov
jo
push
paddw
dec
popa
xor
mov
sub
rcr
sbb
in
inc
imul
shr
jmp
add
pop
push
sti
dec
and
loope
fwait
cmc
bound
xor
sub
repz
popf
sbb
xchg
inc
call
inc
out
bound
into
sbbb
lds
movsb
pop
bound
cs
adc
pushf
shlb
sbb
test
mov
xor
cmp
mov
add
or
jbe
pop
push
mov
ss
mov
cltd
in
mov
lret
jle
js
mov
ror
mov
les
pop
sbb
push
xor
cwtd
mov
adc
hlt
xor
pop
pop
dec
xchg
cld
inc
jnp
add
jae
ja
inc
push
pop
das
mov
inc
lock
sbb
into
fsubr
xchg
pop
sti
mov
out
fiaddl
mov
push
insb
xchg
and
xchg
mov
add
aas
adc
dec
sbb
xchg
out
sbbl
stc
mov
imul
or
movsb
inc
push
mov
popa
icebp
pop
pusha
add
xchg
xor
push
orb
mov
push
dec
lahf
add
cwtl
test
sub
inc
sub
fimull
jecxz
inc
inc
and
lock
or
sbb
mov
jmp
ss
xor
and
mov
xchg
push
jg
in
mov
xor
bound
lcall
imul
ja
std
arpl
stc
sub
push
sbb
lods
lods
mov
add
jnp
cmp
imul
push
sahf
mov
pop
sub
outsb
test
shll
or
sahf
push
enter
cmc
sub
je
inc
mov
daa
imul
jmp
dec
adc
pop
sub
push
in
scas
aaa
adc
lods
jle
mov
dec
mov
ret
scas
pop
and
add
loope
mov
andb
imul
mov
mov
stos
test
xchg
sub
cmp
push
dec
lock
and
or
sub
jecxz
imul
icebp
daa
dec
pop
clc
clc
sub
pop
in
sub
dec
lods
out
dec
loop,pn
loop
rorl
pop
adc
pusha
mov
xchg
stos
mov
xor
sbbb
and
push
cld
adc
and
in
pop
or
call
sbb
adc
mov
sahf
mov
jno
or
jl
adc
jbe
xchg
and
fwait
dec
xchg
les
sub
mov
into
adc
cmc
mov
int3
outsb
daa
les
cwtl
add
mov
jae
cs
andl
mov
lret
cmp
mov
out
mov
imul
jp
jmp
cltd
test
pushf
ret
mov
push
out
enter
push
iret
in
mov
scas
cmp
lret
test
sbb
xchg
outsl
iret
mov
es
pop
aaa
xor
add
sub
mov
out
fmull
sti
xchg
mov
pop
icebp
push
mov
popf
sbb
sub
stc
pop
daa
out
mov
adc
daa
mov
addr16
movsb
loop
push
aaa
jo,pt
stc
push
fiaddl
inc
clc
and
jae
sti
push
cmp
outsb
aam
test
jne
hlt
or
or
jns
andl
popf
and
ljmp
and
xchg
or
mov
mov
adc
adc
sbb
cmp
xchg
jl
imul
out
jge
or
lahf
insb
xor
mov
cltd
pop
cltd
outsb
mov
in
data16
push
dec
rorl
call
sbb
pop
iret
shll
stos
sbb
inc
ret
jb
js
lahf
push
movsb
aad
fsts
pop
jmp
sti
adc
pusha
test
add
cld
inc
cwtl
rcll
mov
or
inc
call
mov
and
scas
push
or
dec
out
ret
aam
mov
add
xchg
insb
popl
call
fldcw
mov
adc
sbb
xchg
mov
mov
cwtl
cmpsl
cmp
fcoml
in
inc
std
dec
test
sub
bound
outsb
mov
ret
jb
lods
stos
adc
das
cli
insb
popf
cmp
sbb
inc
jecxz
leave
icebp
inc
pop
frstor
in
hlt
sub
xchg
movsb
movsl
sub
xor
daa
pop
gs
mov
dec
lcall
push
stc
inc
in
mov
push
shl
inc
dec
ja
jbe
and
repz
clc
rorl
mov
int
lds
pop
shlb
lahf
push
jno
inc
enter
pop
fwait
stc
pop
lret
movsb
shrl
or
xchg
popf
add
xchg
imul
in
sbb
cmp
mov
push
outsb
mov
pop
xchg
sbb
int
push
jp
cmpsl
mov
inc
dec
pop
sarb
arpl
cmpsl
and
mov
mov
xchg
jnp
or
jl
cld
inc
fwait
aaa
add
pusha
mov
leave
pusha
sbb
pusha
sbb
adc
je
inc
test
sbb
cmp
mov
cs
fistps
fimuls
icebp
xchg
inc
sub
mov
mov
push
aas
push
sti
rcrb
gs
jbe
cmp
pop
fstl
rcr
pop
pusha
shl
mov
push
adc
repz
mov
repz
movsb
imul
pop
fsubs
daa
mov
out
je
adc
adc
sbb
rcrb
inc
push
jo
imul
push
js
adc
mov
jl
mov
jns
jmp
subb
repz
loopne
in
fs
jbe
and
sub
rclb
cwtl
xor
push
mov
xchg
lcall
movsb
and
push
adc
cmc
jnp
jmp
dec
ret
clc
jb
leave
fimuls
in
sbb
outsl
int
cmpb
xchg
addr16
mov
dec
push
stos
addl
pop
pop
push
rcrb
push
xchg
and
adc
xchg
imul
jg
mov
fstps
xor
adc
cmp
jae
push
push
pop
push
int3
mov
push
sti
inc
inc
push
fisubl
mov
push
push
aad
mov
sahf
in
rorb
popf
pop
jmp
mov
add
pop
out
clc
xchg
xchg
sub
cmpsl
sbbl
xchg
push
xor
dec
adc
stc
xchg
add
inc
in
push
push
rorb
jnp
and
dec
test
pop
incl
outsb
xor
xchg
mov
lock
and
inc
dec
imul
sbb
mov
push
and
jb
pop
cmp
jmp
aas
sub
add
shlb
arpl
cs
jo
pop
in
push
pop
scas
fisttpl
insl
lret
lea
popa
mov
or
test
pop
sbb
stc
ja
xor
push
insb
add
and
xchg
cmpsl
iret
test
xchg
cltd
fsubrs
hlt
mov
lods
and
cmp
sti
cmc
roll
scas
test
mov
adc
mov
push
mov
aas
mov
lods
loopne
push
in
out
mov
fsubr
or
mov
sbb
push
dec
jg
cs
in
in
add
and
mov
jg
icebp
clc
xor
xor
lret
call
mov
gs
nop
sub
xchg
mov
jle
insl
cmp
inc
arpl
out
mov
xorb
lret
sbb
push
jmp
and
shlb
push
xor
xchg
pushf
int
push
sub
xchg
lock
jecxz
inc
loope
popa
es
mov
sbb
cmc
pop
xor
mov
xlat
lock
jmp
inc
jmp
push
in
fs
in
fnstenv
adc
fnstcw
out
xchg
js
out
xlat
sub
in
jae
pop
adc
mov
pop
dec
cmpb
orb
int
jge
pop
enter
test
push
sub
clc
rolb
jle
ret
jno
das
jb
mov
inc
or
into
sbb
add
mov
rclb
lds
pop
mov
and
sbb
xor
xchg
mov
xchg
in
mov
loope
dec
imul
push
xor
push
sub
outsb
add
ds
push
scas
imul
shlb
push
add
push
xor
pop
loopne,pt
outsb
jmp
inc
daa
insb
xor
rolb
into
dec
or
or
arpl
pop
jmp
repnz
mov
insb
push
leave
std
push
inc
mov
jp
inc
outsl
sbb
movsl
lret
leave
jp
ss
lahf
jne
in
mov
daa
pushf
add
shld
sbb
push
mov
ljmp
xchg
inc
sarb
stos
hlt
inc
mov
cld
sub
dec
push
jo
repnz
ret
mov
cs
jb
xor
mov
fisttps
sbb
mov
jmp
pop
push
arpl
inc
mov
test
add
out
pop
xchg
notb
pop
mov
test
ds
mov
rclb
scas
inc
push
pushf
and
jle
push
insb
andb
jnp
mov
jecxz
or
shrb
dec
push
sahf
sub
mov
jmp
mov
mov
aad
loope
stos
and
xchg
test
stos
cli
orl
xchg
stos
mov
shll
loop
mov
lcall
dec
lock
divl
aam
test
rol
jmp
jmp
mov
aad
sub
adc
xor
out
fdivs
mov
xchg
ss
outsb
loopne
xor
mov
mov
push
call
les
in
leave
scas
sbbb
adc
int
mov
sub
insb
cmp
mov
lret
xor
rcl
pop
pmulhuw
pop
mov
jg
dec
inc
stos
jns
mov
mov
push
test
jmp
outsb
add
aad
lea
mov
decb
fwait
push
add
push
std
xchg
sub
test
out
ret
xchg
jl
inc
xchg
lret
pusha
lret
std
repnz
add
jo
cmc
shr
jae
les
sbb
aam
cmp
jmp
out
inc
pop
mov
loopne
lods
xor
pop
mov
dec
xchg
lret
sbb
mov
sti
bound
xchg
mov
rcrl
mov
aaa
add
clc
out
cmp
sub
popa
loop
es
or
outsb
jo
orb
stc
bound
inc
repnz
adc
mov
xlat
es
mov
shll
mov
pop
sub
inc
mov
pop
mov
adc
rcrl
in
imul
in
movsl
inc
cmc
aad
ja
mov
push
pop
lcall
loop
adc
loope
and
inc
clc
pop
or
fnstcw
adc
shlb
inc
inc
adc
mov
aaa
xchg
lea
sbb
inc
mov
cmp
lds
sbbb
sahf
pop
cmovp
bound
jmp
cmp
xlat
aam
pusha
adc
jle
lods
outsb
push
mov
lcall
mov
fisttpll
push
ljmp
pushf
int
push
rep
iret
pop
push
aam
lock
cmpsl
dec
and
lods
cltd
inc
daa
sub
push
dec
jl
sbb
push
pop
fsubrs
mov
mov
imul
push
cltd
aam
sbbb
cmp
je
push
cmpsb
mov
movsl
push
add
jnp
pushf
or
insl
test
in
adc
cmp
mov
dec
jmp
xchg
push
lret
pop
add
sti
enter
mov
xchg
or
sbb
mov
cmp
push
push
out
mov
dec
repnz
mov
mov
int3
scas
iret
inc
fwait
jmp
fnstenv
out
push
shrl
dec
jmp
sbb
les
roll
cmp
fdivl
enter
mov
jbe
cmp
mov
rcrl
lods
pop
inc
mov
xchg
cmp
mov
cs
jnp
xor
test
out
push
sub
out
popa
out
lods
ja
pop
jbe
ror
ret
push
cmp
clc
outsl
int3
jecxz
cmpsb
cmp
cmc
mov
jl
mov
cmp
std
imul
cwtl
outsb
jbe
cmp
subb
adc
and
rcr
clc
cmp
xor
inc
es
sbb
bound
hlt
mov
rcl
pop
sub
test
jae
push
sub
fs
bound
dec
orb
xor
pusha
inc
sbb
fimull
push
iret
stc
and
push
fmull
mov
fwait
je
out
shl
or
daa
push
mov
cmp
sti
mov
pusha
movsl
cmpsl
out
scas
mov
repz
add
bound
xchg
fisttpll
dec
loop
mov
jb
lock
hlt
call
sbb
repnz
jmp
flds
ret
std
and
jg
push
jne
push
fsubr
sbbl
fdivs
rcll
cmpsb
dec
int
xor
add
mov
xchg
shll
aam
jbe
daa
in
les
xorl
sbb
jb
jnp
out
push
lds
adc
or
aas
sbb
pop
cmpsb
lods
iret
cmp
mov
leavew
cmp
push
cmp
ficoml
add
inc
add
dec
mov
cmp
dec
aad
std
sbb
lcall
testl
loope
jg
outsb
rol
inc
std
mov
mov
jmp
adc
mov
or
push
xchg
lods
cs
jge
jo
in
repnz
in
jle
jge
jmp
shl
mov
adcb
mov
add
jae
loope
ret
mov
mov
or
bound
jp
mov
add
std
jecxz
repz
jg
inc
jmp
sar
leave
fcmovu
jbe
mov
ljmp
mov
inc
mov
xor
lret
rolb
test
pop
cltd
cmp
mov
push
mov
jle
dec
cmp
pop
xchg
int3
mov
popa
lods
xchg
or
js
aas
sbb
or
out
pop
inc
sub
push
enter
add
lret
ds
push
mov
ljmp
cmp
cmp
jo
das
pop
xor
sub
inc
push
mov
inc
sbbb
arpl
mov
std
and
lods
push
cmc
rcrl
xchg
pop
inc
jge
inc
and
mov
test
xchg
dec
mov
lcall
aaa
jmp
bound
in
pop
mov
inc
push
dec
rcrb
outsl
mov
pop
xchg
insl
es
and
and
xor
pop
inc
mov
jmp
cmp
add
leave
loopw
mov
inc
stos
jbe
push
xchg
inc
mov
mov
mov
mov
mov
xchg
call
mov
mov
mov
cwtl
push
shrl
xlat
push
push
push
adc
leave
stc
shlb
or
je
xor
hlt
sbbl
push
in
mov
sti
jne
out
mov
mov
pop
cmp
cwtl
mov
push
or
ret
xor
lods
sahf
aas
sbb
jg
stos
loop
xchg
inc
shll
fiaddl
cmp
insl
ret
inc
adc
fwait
dec
popf
cld
decl
mov
sbb
sbb
jo
mov
add
or
jo
les
iret
dec
imul
or
dec
stos
aad
ltr
inc
mov
gs
popf
mov
sbb
ljmp
cmp
fstps
ret
int
push
imul
aad
fcmovnbe
inc
jp
lea
das
xchg
popf
mov
push
sbb
dec
lcall
insb
jmp
dec
pop
mov
fistps
cmpsl
sbb
dec
dec
pusha
mov
mov
in
sarb
mov
dec
out
mov
popf
adc
sbb
mov
out
cmp
and
mov
movsb
bound
arpl
les
pop
jecxz
cli
push
inc
xchg
loope
mov
shl
sbb
fnstenv
mov
jl,pn
fbstp
fwait
mov
cmpsb
inc
insl
fs
push
jnp
and
pop
push
aaa
and
pop
push
sbbb
add
push
and
adc
jno
inc
inc
dec
cli
mov
pop
stc
jnp
mov
adc
aas
push
andl
cmpsb
imull
push
inc
test
cld
xchg
mov
push
mov
mov
mov
lods
test
imul
mov
das
push
daa
sahf
mov
mull
data16
xchg
and
ja
sbb
dec
mov
nop
ret
in
pop
data16
xchg
dec
pushf
dec
nop
mov
mov
push
sti
orl
test
out
mov
sti
call
jmp
pushl
fldl
shlb
stos
xor
cmpsl
addb
pop
jecxz
je
sbb
or
leave
mov
in
mov
mov
inc
pop
add
or
dec
xchg
gs
jb
fwait
adc
shrl
jp
or
lds
or
sbb
pop
orl
dec
mov
out
cwtl
cmp
jae
ss
int
out
stos
cmp
and
test
les
cli
sbbb
popa
xor
sbb
xchg
lock
and
sbb
fs
lods
arpl
dec
outsl
mov
adc
bound
pop
xor
stos
cmp
movsl
jae
cld
adcb
fs
ret
fwait
ret
stc
je
js
shll
mov
jae
pop
dec
cwtl
mov
repz
mov
add
mov
inc
jmp
inc
xchg
jns
ficoms
push
into
decb
call
push
clc
mov
mov
sub
aaa
adc
shrl
lret
fdivrp
scas
xor
aam
jmp
movsl
and
fsubrs
xchg
cmp
add
adc
inc
sbb
push
jno
xchg
inc
andb
or
sahf
push
sub
add
mov
xchg
imul
jns
and
shl
add
pop
test
cmp
sub
aad
dec
mov
std
std
mov
iret
add
out
mov
movsl
cld
movsl
xor
ss
mov
jg
xor
int3
dec
inc
push
jg
pushl
mov
test
sbb
jg
out
xorl
adc
xchg
adc
cwtl
jbe
jg
and
adc
adc
sbb
mov
jae
bound
jecxz
xor
pop
stc
xor
mov
mov
mov
rcr
or
xchg
mov
mov
cmp
mov
aaa
fcmovnbe
jle
dec
push
lahf
movsl
xchg
jg
popf
ja
cli
das
sbb
dec
mov
fisttpll
dec
movb
inc
pusha
mov
jbe
pop
jae
push
bnd
icebp
push
ljmp
xchg
repz
ss
lock
lahf
jae
loopne
addr16
fimull
xchg
sbb
inc
sti
adc
pop
pop
fmul
dec
cltd
mov
add
ss
ret
repz
dec
push
cli
loope
or
cmp
jnp
xchg
cmpsb
xor
js
push
cmp
stc
pop
jo
mov
sub
lret
in
sub
cmp
std
call
pushf
mov
push
lcall
or
iret
xchg
mov
mov
add
adc
aam
push
mov
stos
outsb
clc
mov
addr16
out
js
or
lock
jae
xor
pop
pop
dec
fidivs
js,pn
cmp
cwtl
mov
mov
daa
push
std
mov
dec
test
mov
jp
mov
rol
mov
adc
sub
ss
jle
movsl
dec
push
mov
sbb
int3
pop
inc
jb
sbb
mov
or
roll
adc
inc
pop
add
push
ds
push
stos
lret
or
cmpl
subl
jae
into
xor
stos
adc
arpl
sarb
dec
inc
dec
shrl
mov
cmp
mov
paddusw
push
adc
mov
aam
xchg
imul
xor
loopne
std
sub
xor
mov
xor
inc
fistps
sub
lahf
cmpsl
dec
xchg
mov
out
pusha
cmp
mov
push
mov
or
jbe
stos
iret
mov
adc
push
cmc
mov
or
ljmp
pop
mov
pop
jp
into
or
roll
insb
add
ror
push
sub
test
add
sbb
jne
cltd
dec
mov
and
ja
jo
push
fwait
test
sbb
shl
or
out
pushf
fdivrs
decb
xchg
call
call
jb
jl
inc
fisttps
out
jns
jne,pt
lcall
inc
pop
cmp
and
xor
adc
jbe
sbb
lcall
sbb
cmp
pop
mov
inc
decl
inc
fs
sub
das
leave
sbb
xchg
mov
pop
test
lock
adc
push
arpl
mov
dec
aad
cmp
cmp
cmc
hlt
nopl
arpl
ret
mov
or
lods
fcompl
push
cmpps
leave
movsb
mov
in
lcall
xor
sti
out
sub
ret
sub
push
mov
mov
fidivrl
out
push
sti
mov
inc
xor
cmp
leave
xor
add
and
pop
shrb
lret
push
and
ficompl
in
fadd
cmpsl
inc
aad
jnp
movsl
fimull
jp
test
clc
and
and
daa
pop
loop
cltd
pop
jno
stos
leave
mov
loop
push
dec
cmp
or
mov
adc
push
orb
loope
push
sub
jl
clc
loopne
or
aas
aas
mov
jne
sbb
jnp
mov
cli
jle
lods
daa
hlt
ret
mov
mulb
imul
std
call
fadds
lret
lds
add
out
dec
sub
xchg
push
cmp
jmp
cmp
loop
jge
xchg
cmc
scas
jno
jl
cmc
addr16
inc
dec
mov
mov
ror
push
sbb
movsb
gs
sahf
inc
mov
dec
sbb
mov
mov
adc
dec
cwtl
cmp
push
stos
push
cmp
xchg
mov
dec
into
mov
xchg
fsubrl
jnp
in
jg
sub
out
fisubrl
mov
mov
mov
popa
gs
cmp
xor
sub
push
cmpsb
pop
jbe
xchg
push
pop
mov
lea
ja
rorb
lahf
rorl
add
rorl
mov
xor
aas
rcl
adc
dec
sub
dec
shll
jle
lcall
sbb
ret
ljmp
mov
rcrb
mov
mov
sbb
and
scas
movsl
mov
pop
popa
sub
push
push
mov
cwtl
fs
repz
es
mov
xchg
mov
sbbb
ret
mov
pop
add
mov
fisttps
adc
rcl
fs
sahf
cli
rcr
mov
mov
mov
repz
xor
sub
lahf
cmc
mov
sbb
push
xchg
adc
cmp
mov
lret
aaa
aaa
lret
adc
ret
pop
adc
enter
outsl
in
sub
stc
inc
jns
xchg
mov
mov
xor
add
lret
shlb
sub
cmp
iret
xchg
js
imul
mov
xchg
pusha
test
push
pop
fcomps
adc
or
inc
das
push
jo
push
pop
movsb
push
jecxz
pusha
decb
fs
cli
iret
andl
cmp
jmp
xchg
xor
jl
js
or
and
xchg
pushf
mov
loope
add
mov
int3
cli
out
repnz
jbe
es
aas
stos
sbb
or
ljmp
mov
stos
popa
gs
ja
cwtl
cmp
xchg
xor
cmc
dec
add
call
sub
js
inc
cmp
fisttpll
pop
sarl
orl
shll
call
stos
in
sub
jb
jbe
sbb
fistpl
cli
ret
mov
add
testl
adc
stc
pop
jecxz
js
jg
orb
xchg
dec
std
jne
popf
mov
add
fwait
xor
mov
movsl
scas
xchg
jne
xchg
xor
subl
pop
popa
out
mov
pop
fsubrl
dec
fpatan
add
movsl
mov
xchg
add
jo
je
stc
fnstenv
xchg
inc
fiaddl
ret
sbb
dec
movl
cmpsl
push
insb
jb
cmpsb
lahf
jle
in
out
pusha
es
xorl
gs
cmp
mov
sub
sbb
xchg
jl
aam
push
push
sbb
into
dec
insl
insl
or
clc
scas
lret
mov
mov
dec
inc
xor
inc
fcoms
les
fmuls
mov
pop
push
inc
or
push
sti
ds
movsb
and
in
mov
insl
lds
fistpll
push
dec
out
sti
lret
jle
iret
lahf
addr16
inc
int3
cmpsl
popa
cmpsl
mov
or
sbb
mov
or
jno
es
cmp
lock
dec
cmpsb
lret
fsubp
cmp
outsl
jl
pop
ljmp
popf
inc
arpl
aas
push
shlb
mov
cs
jnp
inc
lods
cmp
stos
ljmp
add
mov
in
push
in
pop
add
loop
pusha
add
mov
lds
jp
push
scas
sti
xchg
pushf
aam
ja
lea
js
stos
adc
inc
sub
andb
aas
xor
xchg
pop
sub
inc
mov
push
and
cmp
mov
jns
lds
push
sti
shrb
lret
in
test
lret
test
outsb
sub
and
cmp
adc
and
fs
add
in
sbb
sbbb
xor
jmp
inc
xchg
cmc
sub
pushf
ljmp
lds
je
cmp
cmp
shlb
jae
popf
imul
add
mov
addl
arpl
add
jo
stos
push
mov
adc
jb
cmp
xchg
lea
cmp
mov
out
mov
sub
bound
pusha
mov
addr16
popa
mov
data16
push
cmc
mov
jne
stc
cltd
cmc
adc
fdivs
and
lahf
cwtl
divb
mov
jle
jp
sbb
and
mov
jecxz
stos
push
sti
add
or
into
dec
std
and
lods
xchg
push
xlat
stos
push
xor
xchg
outsl
ss
sbb
fistpll
add
iret
xor
stos
mov
repz
imull
scas
dec
test
stos
xorl
bound
imul
jecxz
repnz
jbe
shl
push
popf
inc
pop
jg
and
mov
push
push
jo
sbb
pop
cmpsb
clc
imulb
add
std
jmp
xor
lret
nop
pop
popf
mov
mov
in
jne
js
cmp
arpl
test
cmc
jae
sub
xor
loope
in
cld
stos
and
icebp
iret
test
popf
repnz
loop
into
in
in
mov
sub
shll
pop
jns
dec
add
imul
repz
pop
mov
mov
aas
ds
sub
xchg
into
inc
into
sub
cwtl
shrl
inc
jae
lea
sub
dec
or
push
arpl
aad
imul
hlt
inc
inc
aas
out
aas
adc
cld
push
sub
sbb
jl
ret
gs
push
pushf
fldenv
mov
mull
stos
scas
jo
in
inc
movsb
jle
mov
or
add
rcrb
push
sarb
test
pop
push
jb
cmp
cmp
scas
scas
movsb
adc
cltd
pop
fs
sbb
jo
test
mov
mov
fwait
push
sti
into
dec
out
mov
xchg
sbb
jg
mov
les
leave
pop
lods
add
mov
scas
ljmp
cmp
push
mov
jp
notl
dec
jae
movl
pushf
mov
jmp
mov
test
or
loope
imul
adc
pop
xchg
xor
pusha
rol
test
jne
inc
add
fcompl
test
pop
mov
dec
xor
sub
lcall
ds
mov
js
scas
mov
std
or
xlat
adc
mov
inc
jmp
xor
test
xchg
es
adc
pop
test
aad
test
cwtl
shll
cmc
mov
rcrl
and
xlat
and
xchg
cmp
cld
int3
addr16
cld
or
xor
dec
xchg
jl
in
jbe
xchg
lahf
rcrb
push
ljmp
filds
add
sbb
popf
sti
int3
fucomip
insb
lcall
xchg
sub
stc
sbb
test
std
fucomp
push
ja
mov
fcoms
add
xorb
pop
ret
pop
adc
jmp
out
clc
xchg
inc
sbb
jno
push
adcl
sti
mov
adc
mov
mov
dec
xchg
insb
lds
iret
lret
sti
sub
test
imul
mov
lret
xorl
mov
data16
and
ja
test
push
sbb
add
sti
or
pop
rol
iret
les
jne
xor
icebp
pusha
or
imul
sbb
in
ljmp
cmpsl
lock
push
add
xchg
xor
popa
push
sub
stos
add
xor
out
lret
shlb
mov
mov
rorb
fwait
jne
push
fwait
xchg
mov
or
push
inc
jmp
push
into
jge
fdivrl
mov
xor
andb
pop
es
iret
int3
jae
movsl
faddl
push
xorps
jmp
inc
sub
inc
sub
inc
movsl
xor
or
xchg
mov
sbb
call
xor
mov
pop
fistl
adc
inc
jno
inc
repnz
loopne
xchg
jle
rolb
dec
jl
xchg
call
icebp
arpl
fmuls
pop
mov
loop
mov
lret
lahf
mov
xchg
adc
lock
dec
mov
sub
mov
xchg
push
ss
or
mov
popa
push
pop
jns
lret
es
xchg
and
and
scas
inc
jae
adc
loop
cmp
outsl
daa
lods
movsb
xor
mov
jle
sahf
mov
adc
mov
mov
lret
jns
jmp
rorl
popa
cld
cmp
xchg
scas
popf
scas
add
dec
ret
xchg
pop
flds
pusha
jbe
nop
lret
sarl
jl
adc
sbb
std
dec
mov
cmp
mov
stos
lea
cmpsb
sarl
jmp
or
in
mov
loope
add
imul
push
enter
adc
add
pop
mov
stos
imul
mov
push
imul
xchg
es
push
jmp
pop
inc
sub
lahf
mov
jmp
ret
cld
or
xchg
add
cmp
fistl
aad
cli
test
loope
lret
arpl
call
or
xchg
dec
movsl
jg
rcr
imul
or
incl
mov
lcall
fstl
push
int3
arpl
cmp
rcrl
jecxz
std
xchg
outsl
xorb
rorl
fcmovb
or
sbb
bts
cmp
push
sub
mov
fsubrl
hlt
cltd
jle
adc
mov
stos
jne
cli
and
icebp
fmul
sub
es
inc
dec
add
adcb
adc
cs
fldl
nop
ss
add
lock
push
push
push
in
mov
or
xor
imul
mov
ja
arpl
icebp
xor
push
fdivrl
pcmpeqw
fadd
jae
lahf
fidivrs
cmp
jo
icebp
mov
or
aas
pop
fmull
pop
sbb
xchg
cmp
push
enter
hlt
mov
dec
sub
add
mov
or
jle
cwtl
adc
xchg
shl
mov
sbb
mov
insb
fistl
je
pop
push
lret
loopne
or
jle
mov
xor
rorb
mov
cltd
sbb
das
cmp
jne
jmp
out
push
sbb
dec
cmp
les
in
push
or
rcr
in
adc
jmp
mov
or
dec
loop
push
cmp
add
les
push
in
cmp
xor
pop
rcll
clc
sub
mov
sahf
cld
xlat
xor
lods
push
scas
xor
mov
fwait
fwait
in
inc
pop
sbb
mov
out
pop
lcall
lret
dec
push
gs
ret
orps
scas
shll
pop
xchg
add
inc
sbbl
jmp
jne
mov
sahf
adc
inc
idivb
xchg
inc
xchg
fsubr
mov
leave
mov
push
pop
hlt
jecxz
sub
push
cmpsl
int
imul
sarb
mov
lods
pusha
mov
jecxz
dec
out
sbb
lea
aaa
mov
fisubrs
pop
dec
das
jecxz
add
xor
push
jo
or
inc
std
gs
mov
push
pop
notl
dec
fs
cltd
loopne
out
cmpsl
sahf
popf
dec
push
push
xchg
pop
aad
insb
mov
stos
insl
dec
lcall
outsl
in
mov
aas
add
es
lret
jmp
dec
repz
and
jmp
fidivl
scas
ja
jae
ficoms
sub
mov
adc
push
pop
aas
xchg
loop
mov
dec
mov
outsb
dec
popf
add
aas
pop
leave
inc
clc
aam
lods
out
fwait
shll
cmp
mov
mov
pop
scas
push
hlt
xchg
or
fisubs
push
xchg
nop
fsubrs
cmp
es
aaa
pop
add
jae
mov
loop
ljmp
cmp
push
dec
aam
adc
sub
stc
outsl
cli
ljmp
lcall
mov
push
push
sub
mov
mov
jo
xchg
and
test
push
pop
outsl
in
sar
imul
stos
stos
iret
lock
test
loopne
push
std
xchg
pop
mov
push
cmp
sub
out
repz
xchg
dec
rorb
aas
inc
fcoml
insb
jnp
mov
pushf
icebp
jns
clc
loop
cmp
mov
out
push
push
scas
mov
inc
pop
xchg
fimuls
in
cmpl
into
lds
or
gs
dec
xor
sub
fnstsw
pop
aam
mov
pop
aad
mov
sarb
or
subl
enter
lret
mov
cmc
stos
imul
sbb
adc
rcrb
mov
add
inc
lahf
xchg
dec
cmc
dec
call
addr16
jecxz
xor
jno
daa
into
inc
lods
js
setne
sub
lock
jge
lret
xchg
nop
sub
bound
jle
cmc
inc
fstpl
and
mov
push
xchg
vhsubpd
push
push
mov
adcl
or
pop
mov
arpl
and
in
repz
pop
rcrb
xlat
aaa
push
mov
pop
data16
testb
pop
std
icebp
sub
out
fstl
rcrb
cmp
enter
and
bound
subl
lret
mov
cmpsb
sub
push
incb
sbb
out
cmc
mov
sbb
xlat
cs
push
cmc
xchg
rol
in
dec
test
outsl
pop
icebp
bts
lahf
jmp
mov
stc
jmp
push
inc
ljmp
jb
ljmp
sbb
jne
outsl
sbb
inc
jbe
fidivl
sub
pop
jae
imul
pop
pop
xchg
mov
lret
dec
shrl
jmp
xchg
jl
mov
pop
and
pop
les
lock
movsb
dec
into
imul
mov
push
sub
push
jb
and
sub
mov
mov
jecxz
lret
dec
push
ds
mov
in
mov
in
jns
push
add
out
cmp
insl
sbb
mov
push
aas
jg
fadds
pop
test
in
out
cmp
cmp
mov
fwait
pop
cmp
adc
int3
jge
jg
pandn
or
mov
cld
push
mov
iret
or
mov
mov
cmp
cmc
push
inc
or
ljmp
or
scas
add
inc
aas
in
stos
in
dec
dec
in
push
rcrb
sub
jmp
pop
push
sahf
dec
sbb
ret
fisttpll
lds
xor
insl
jae
dec
pusha
fstpl
and
xchg
inc
xchg
std
jo
popf
aam
sbb
call
mov
mov
inc
pushf
mov
shlb
bound
xor
or
dec
daa
or
ss
sub
inc
jecxz
lock
xchg
add
or
mov
pusha
cwtl
sbb
mov
inc
add
lea
pushf
or
shrb
ss
sub
sbb
dec
jne
xchg
cmc
outsb
test
mov
xchg
cltd
mov
out
incl
aaa
add
push
subl
and
out
adc
mov
mov
cmp
cmp
repz
pop
push
push
jmp
push
in
inc
clc
dec
sub
mov
data16
mov
lds
or
ja
cmp
lds
jo
sbb
es
xor
xchg
lock
shll
mov
adc
icebp
test
scas
and
ficoml
adc
negb
xchg
dec
ss
pusha
mov
scas
mov
rorl
outsb
or
je
or
stos
shll
add
mov
ja
xchg
sbb
pop
loopne
int3
pop
lods
adc
lds
lods
gs
dec
pop
push
cmp
mov
addb
cmpsl
inc
int
mov
jns
or
mov
lcall
push
jg
push
in
cmp
fwait
mov
pushl
sbb
jle
adc
sbb
imul
aad
mov
movsl
inc
and
pop
xor
push
sbb
pop
cli
arpl
cmp
popa
jl
add
sarb
or
das
cmpsl
rcrl
push
ss
xchg
lock
jmp
dec
mov
lds
add
dec
outsl
pusha
inc
xlat
lret
mov
int
sbb
insl
pop
sbb
out
test
loope
mov
lds
scas
out
mov
adc
jmp
and
lahf
lret
mov
add
mov
mov
lock
lret
xorl
and
push
repz
outsl
jg
mov
mov
jmp
push
cmpsb
adc
movsl
bsf
sub
out
imul
add
mov
sub
psrlw
daa
mov
push
mov
cli
jae
lret
sbb
pop
mov
lods
or
cmpsb
adc
rcll
jne
movsb
mov
inc
fldt
push
push
cli
mov
and
jp
mov
add
xchg
les
pop
sub
out
bound
dec
inc
dec
into
stos
fwait
add
fs
jle
mov
jno
nop
jle
mov
inc
xor
push
sti
stos
rolb
add
mov
je
jnp
or
cmp
dec
je
or
and
mov
push
pop
cli
clc
daa
jne
mov
xchg
or
out
into
adc
adc
bswap
andl
and
cs
xchg
test
mov
mov
jb
repnz
gs
out
es
mov
jle
iret
and
bswap
sub
pop
mov
xorl
mov
movsb
in
inc
push
test
xchg
loopne
call
js
scas
jbe
ds
or
leave
mov
scas
shlb
in
hlt
fbld
mov
imul
loop
and
inc
inc
cld
sbb
mov
jbe
dec
test
cmp
fdivl
repnz
xchg
jno
mov
and
dec
sbb
xor
dec
call
out
rol
mov
and
xchg
dec
in
and
movsl
insb
mov
movsb
leave
push
cmp
rcll
mov
jg
jb
push
mov
fs
fidivs
and
or
xchg
pop
push
sbb
cmpsl
loope
or
push
cmp
adc
sbb
popa
es
pxor
mov
rorl
jg
xchg
fidivs
xor
lret
mov
cltd
dec
xchg
mov
loop
js
cmp
add
scas
cmp
push
xchg
jl
insb
pop
xchg
jp
xor
mov
dec
ljmp
inc
dec
sbb
push
or
es
cmpsl
sarl
lret
das
sbb
adc
push
push
pusha
mov
push
sbb
inc
push
es
fdivrs
fisubrl
addl
cmpsb
in
mov
mov
test
fs
push
pop
pop
test
jns
fstl
jg
adc
lret
js
roll
mov
shl
icebp
or
icebp
cs
and
test
dec
mov
xchg
mov
xor
inc
jbe
imul
xchg
out
sub
or
mov
cmp
xchg
inc
mov
out
popa
ss
leave
sub
outsl
inc
in
popf
nop
sub
pop
dec
sub
mov
lea
and
cmp
adc
cmc
jmp
mov
outsl
inc
mov
call
bound
or
xor
stos
aad
add
lods
and
adc
daa
lock
fs
mov
push
je
fbld
sub
scas
pop
mov
popf
sub
pop
mov
popa
rcrl
out
mov
sbb
cld
inc
mov
adc
pop
stc
shrb
add
push
in
lcall
mov
xchg
cs
in
fdivp
pop
lds
pop
xchg
jae
add
xor
push
loop
fmuls
lods
and
xor
add
push
xchg
pop
idivb
and
orl
mov
loop
pop
and
mov
jnp
in
std
mov
cmp
inc
jne
lock
sahf
fs
in
lret
jle
stos
stc
hlt
aam
ficoms
in
bound
mov
je
cld
cmpsl
mov
push
mov
mov
loope
addb
mov
mov
xor
imul
sbb
mov
std
inc
in
jle
das
insb
jae
push
xor
mov
sbb
cmc
mov
pop
inc
push
lods
and
jmp
stc
rolb
pop
sbb
mov
sarb
leave
out
push
out
in
push
lcall
mov
push
pusha
jbe
lea
xchg
mov
sub
ljmp
pop
xor
lea
pop
daa
stos
movsl
repz
movsl
cli
jo
push
cwtl
push
icebp
shr
mov
pushf
aam
in
jmp
loop
sbb
fiadds
dec
mov
ficompl
divb
mov
cltd
or
push
call
push
cwtl
loopne
test
inc
push
inc
mov
push
or
cmpsl
add
mov
mov
aam
std
mov
inc
xor
xlat
xor
rcrb
lea
mov
fnsave
out
inc
dec
push
fwait
mov
mov
in
mov
push
jae
sti
mov
fbld
inc
jbe
mov
mov
ja
jne
arpl
xor
fisubl
and
xor
fldcw
xchg
lods
mov
int3
xor
int3
daa
mov
jae
test
dec
popf
sbb
add
and
aam
push
sub
sub
mov
das
xchg
repz
mov
out
cmp
fdiv
or
cli
adc
int
cmc
sub
dec
andb
mov
lods
hlt
imul
faddl
inc
mov
icebp
xchg
fwait
insl
dec
cli
xor
gs
pmulhuw
out
adc
and
cmp
push
xchg
inc
daa
cmp
inc
inc
lds
stc
fst
mov
sub
pop
cmc
addl
xchg
mov
push
jns
gs
mov
cmp
adc
lods
or
fs
or
dec
cmp
jmp
inc
pusha
mov
push
adcb
sahf
sarb
mov
scas
arpl
pop
lcall
push
loop
aad
cld
orl
jmp
lock
imul
inc
hlt
sahf
frstor
arpl
sub
push
int
in
push
xor
mov
cwtl
adc
sbb
mov
test
pop
cmp
dec
in
pop
in
lods
inc
mov
push
jmp
jp,pn
testb
into
jae
enter
das
shll
or
jecxz
cmpb
xor
mov
push
cli
xchg
ja
out
sub
inc
in
jge
les
or
stos
loopne
jecxz
xor
out
cmp
imul
movsl
ret
ret
fstl
lods
xlat
roll
iret
xor
pop
aas
pop
dec
in
lret
mov
dec
add
inc
jae
addl
rol
fistps
xor
std
arpl
test
or
movsb
adc
mov
out
jns
icebp
adc
push
aas
hlt
xorb
cmpsb
loope
mov
cmp
adc
jle
aaa
mov
inc
mov
ljmp
aaa
mov
xchg
arpl
faddp
cmp
popa
xchg
in
shrl
mov
sub
xchg
dec
mov
mov
cmpb
fs
cli
and
es
lods
lret
ss
or
sbbb
xor
fcmovnb
add
xor
sahf
loope
mov
cmp
xchg
ficoms
cmp
adc
mov
fisubs
mov
stos
xor
mov
add
xor
cmpsb
cli
push
sub
dec
jp
add
scas
push
in
in
or
in
xchg
sub
mov
rclb
jecxz
inc
icebp
adc
sub
dec
mov
aaa
xor
or
enter
icebp
fisubrl
and
movsb
ffreep
ljmp
rcl
push
in
adc
jle
push
sub
xlat
mov
idivl
jge
mov
mov
popf
pop
jae
les
stos
mov
nop
mov
and
dec
jae
cmp
cmp
push
popa
sub
or
mov
leave
push
les
imul
push
xchg
pop
push
sahf
cmpsb
cmp
orl
insl
or
dec
jge
sbb
push
and
cld
and
arpl
push
repz
jmp
pop
gs
int
data16
sbb
xor
push
je
out
clc
xchg
push
cmp
push
pop
jnp
cmp
or
iret
ficoms
sahf
or
dec
aas
call
sbb
stos
dec
adc
in
inc
movsl
pop
test
aam
ficoml
sub
repnz
sub
xchg
pop
mov
jmp
imul
xchg
inc
lods
mov
pop
testb
pop
testl
in
dec
xchg
insl
push
fcoms
je
stos
mov
or
sbb
test
jle
inc
aaa
xchg
aas
inc
xlat
cmp
pusha
xchg
repz
lahf
sub
out
mov
pop
sbb
push
mov
nop
loope,pt
jb
inc
pusha
xchg
sub
movsb
rclb
mov
mov
movsl
xchg
je
in
rorb
mov
push
cmp
add
dec
sub
push
adc
cmp
in
fildl
push
iret
into
mov
inc
sahf
pop
js
cmpsl
push
dec
or
mov
es
and
or
lcall
testb
cwtl
lods
push
std
repz
arpl
dec
sub
mov
cmp
lret
call
js
lahf
jge
mov
stc
out
negl
lret
push
mov
out
push
or
lock
fwait
or
inc
push
and
push
mov
lds
lock
inc
int
test
sbb
movl
inc
clc
aad
sbb
std
scas
adc
enter
dec
cmpsl
gs
and
mov
in
cmp
cmp
or
cmp
mov
pop
sbb
sbb
xor
fmull
aaa
rcrl
sub
int
imul
pop
lret
scas
mov
sub
mov
imul
pusha
cmp
mov
rol
in
sub
pop
test
pop
mov
xor
jp
dec
sbb
jl
push
test
lods
fisttps
or
out
insb
adc
xchg
or
push
out
or
inc
sub
call
repz
fwait
addr16
movsb
sbb
inc
cmp
sub
jbe
adcb
out
add
imul
xchg
and
rclb
push
fistl
fstl
jmp
xor
add
or
test
and
cmp
aaa
jbe
jns
hlt
mov
pop
sahf
iret
pop
pop
and
in
lahf
rorb
cltd
mov
mov
or
mov
aaa
push
mov
or
dec
fbld
popa
mov
add
jle
in
adc
stos
shll
jecxz
xchg
xchg
mov
sbb
xchg
mov
push
dec
push
adc
or
pop
rorb
push
dec
jns
or
imul
int
mov
sub
mov
les
push
out
aam
pop
aaa
mov
cmp
lcall
and
dec
ljmp
pop
mov
mov
pop
dec
and
xchg
arpl
test
loop
shll
cmp
fsubrp
loopne
scas
bound
addr16
lret
cmpsb
iret
pop
pop
inc
lods
or
insl
jg
pushf
mov
mov
adc
cld
add
and
inc
nop
jno
mov
movsl
int3
inc
xchg
push
into
jb
inc
hlt
shlb
mov
xchg
int3
xor
int3
aad
rcll
mov
enter
sub
loope
xor
jne
and
ret
jmp
inc
rolb
xchg
inc
repz
lds
push
daa
sub
adc
jnp
fildll
movsl
jmp
jb
mov
insl
ljmp
enter
mov
adc
pop
test
mov
out
hlt
fisubl
cmp
ljmp
in
js
shrl
push
ja
cmp
pop
imul
in
frstor
mov
arpl
mov
xor
es
aam
and
sbb
mov
int3
stc
add
xorl
xchg
pop
mov
add
ja
popf
xor
mov
imul
or
mov
insl
ficomps
shl
int
cli
mov
rcr
stos
cmp
jmp
and
out
xchg
aad
lret
movsb
das
adc
pop
mov
or
cmp
hlt
test
sub
dec
jnp
jmp
and
out
and
sbb
inc
cmp
xchg
loop
aas
popf
dec
mov
sbb
mov
mov
jmp
kmovw
and
insl
test
adc
idivl
cmp
sub
push
pop
popa
sub
sub
ljmp
jp
pop
pop
dec
sub
pop
push
stc
mov
imulb
mov
in
mul
loopne
in
bnd
ljmp
mov
or
inc
loope
or
dec
aaa
or
mov
out
int3
mov
pop
cltd
cwtl
ljmp
and
iret
lret
pop
insl
mov
xor
cmp
and
push
aaa
push
mov
std
ss
scas
flds
mov
mov
push
mov
mov
flds
sbb
adc
loopne
shll
rcll
rcrl
sahf
jb
sbb
sbb
adc
loopne
adc
sbb
mov
pop
cmp
jl
call
popa
into
xor
adc
imul
pop
push
cwtl
push
fistpl
dec
xchg
push
jae
cli
push
xor
sub
scas
out
gs
movsb
add
push
push
jecxz
cmc
into
out
and
rclb
or
arpl
mov
push
push
mov
shlb
mul
pusha
lea
and
xchg
jno
js
inc
sub
popf
mov
lret
cmp
int3
aad
pop
push
cmpl
mov
outsb
int
xchg
dec
pop
lods
mov
push
fstpl
stc
add
in
push
xchg
outsb
imul
add
xchg
sub
dec
mov
ja
mov
jnp
fucomp
inc
leave
sarl
add
jae
xor
xlat
xchg
aas
les
lds
xor
ss
add
xor
popa
addr16
jbe
cmp
bound
push
mov
aad
and
iret
pop
or
dec
lock
pop
ljmp
pusha
mov
int
mov
aaa
outsl
push
ljmp
pop
in
jg
daa
mov
mov
pusha
aam
pop
hlt
in
in
and
mov
ficoml
mov
stos
push
adc
pop
negb
lret
in
pop
or
paddb
inc
mov
ds
repz
cmp
lret
mov
mov
inc
inc
imul
adc
jp
xchg
adc
pop
addr16
sbb
roll
das
or
fwait
in
or
mov
xchg
push
add
mov
jno
loope
lcall
in
out
sub
inc
jae
mov
sarl
rcll
fcoml
push
add
enter
mov
and
repz
or
push
jl
and
and
stc
mov
movsl
xor
pinsrw
test
sub
and
in
adc
adc
cmpsb
sub
in
mov
jle
pusha
in
into
imul
jne
lahf
jnp
sub
jle
xchg
mov
in
testl
shlb
or
mov
inc
sbb
aas
xlat
adc
out
cmp
add
jge
scas
insb
lret
mov
cli
out
mov
push
add
lahf
and
leave
jmp
jp
jno
jmp
push
add
mov
mov
xor
mov
mov
push
pop
mov
addr16
jg
movsb
inc
rorl
jbe
divb
pop
bound
notl
lods
sti
int
adc
iret
push
pop
lods
imul
in
lret
inc
sbb
xchg
adc
sub
push
xchg
push
mov
add
or
xchg
call
pop
cmp
mov
or
sbb
jo
jle
pushf
pop
imul
repz
xor
loope
and
xchg
xchg
call
es
data16
xchg
cmp
leave
and
cs
call
jnp
cmp
jb
and
sub
jp,pt
mov
sub
shl
mov
jno
push
xchg
sbb
popa
mov
out
lret
testl
into
add
stos
loope
cmp
cli
adc
jge
push
andl
cmp
js
outsl
sub
push
mov
mov
push
add
outsl
pop
push
cmp
push
mov
movsl
xor
rcrb
cmp
cmp
push
ret
fcoml
mov
lcall
imul
sbbb
sarb
xor
lock
pop
icebp
lods
bound
mov
dec
cmpsb
dec
imul
xchg
jmp
xchg
xchg
pop
cmpb
dec
push
jl
xor
imul
stc
xor
adcb
test
mov
pop
in
add
mov
inc
mov
fdivl
mov
mov
push
dec
ds
mov
push
mov
subl
fldcw
pusha
push
icebp
out
dec
das
shrl
lods
popf
pop
out
stc
or
mov
inc
xchg
cmpsl
pusha
add
loopne
pop
test
aam
andl
daa
inc
jle
aam
aad
je
xchg
adc
insl
data16
enter
or
mov
adc
dec
adc
push
call
xchg
movsl
lock
and
sub
xlat
out
dec
sub
shrl
pop
jo
fst
xor
mov
xchg
das
mov
cmpsl
or
fnstsw
push
faddp
sub
inc
or
rcl
out
frstor
and
or
lahf
ss
imul
loope
jb
sti
pop
in
sub
cmp
ret
and
sub
das
mov
cs
mov
call
movb
test
repz
bound
sub
fisubl
add
sbb
jmp
hlt
push
sbb
mov
mov
sti
cmp
out
mov
adc
add
pop
rorl
add
int3
inc
inc
xor
lcall
sbb
enter
icebp
call
out
call
lock
outsb
hlt
xchg
dec
lahf
imul
in
add
icebp
push
movsb
das
mov
jecxz
sbb
fstl
es
mov
xor
xlat
sub
mov
movsl
pop
sbb
pusha
inc
cltd
insl
nop
xchg
push
loope
xor
pop
in
fnstenv
stos
jge
aam
fcmovnb
cmp
mov
mov
cli
mov
xchg
popa
mov
mov
outsl
into
mov
xchg
cmp
fcmovu
inc
rolb
shr
into
shrl
pop
fisubrs
and
lret
pop
ret
pushw
sub
dec
jns
xchg
out
rcrl
or
push
cmp
add
sub
nopl
movhps
cmp
sahf
adc
insl
pop
cmpsl
push
mov
pop
push
xchg
xor
mov
lcall
test
ret
sar
dec
dec
lahf
jge
sub
sbbb
in
jb
movsb
rcr
sbb
jno
in
icebp
lcall
push
test
dec
fnsave
lret
test
int
mov
jns
mov
addr16
push
data16
dec
mov
sub
sub
cwtl
test
pop
es
sbb
loope
pop
sbb
pushf
stc
sahf
aaa
repz
fsubs
inc
jns
lea
inc
cmp
xchg
daa
inc
sbbl
ja
pop
xchg
scas
lcall
or
test
or
or
in
loopne
sub
out
mov
lock
pop
mov
out
popf
pushf
out
push
popa
sbb
pushf
stos
aaa
iret
dec
mov
or
fldcw
pop
jne
sub
dec
data16
mov
or
out
cmp
mov
aas
js
fldcw
in
popf
xchg
ds
mov
pop
push
add
ss
sub
mov
cmp
test
pop
out
imulb
nop
sub
ret
movsb
xor
push
insl
mov
or
iret
pusha
cmpsb
jg
or
out
outsl
push
outsb
push
mov
out
jg
dec
push
sbb
out
shll
sub
mov
cmp
adc
inc
fisubrs
scas
loop
test
adc
mov
movsb
into
adc
inc
shrb
xlat
jne
f2xm1
hlt
pushf
inc
in
and
jl
sbb
jo
lret
pop
push
sbb
and
xorl
jno
sub
mov
mov
mov
push
and
clc
xchg
inc
subb
mov
fsub
fisubs
sub
jno
int
subb
inc
movsl
sti
xchg
add
xor
mov
pop
inc
pop
jecxz
inc
pop
jge
cmpsl
mov
pop
stos
loopne
or
fwait
or
adc
cltd
mov
lcall
mov
adc
adc
fsubrs
pop
inc
or
lods
ds
jmp
inc
or
push
mov
pushf
es
std
stos
xor
movsb
notb
js
xchg
fidivrs
inc
ret
and
mulb
push
pop
pcmpgtb
addl
jae
mov
inc
sbb
xchg
push
cmpsl
push
nop
clc
mov
or
jnp
xchg
sub
imul
in
mov
fbld
nop
pusha
insl
loop
fstl
in
mov
mov
out
mov
cmpsl
in
stc
xchg
and
scas
sbb
stos
pop
or
ret
in
mov
adc
cmp
adc
push
xorb
dec
jg
lock
rorb
lods
cmp
or
push
int
out
mov
mov
jnp
pop
js
pop
pop
addr16
add
jp
ficoms
stc
inc
cs
ds
bound
sub
shrb
dec
dec
xchg
enter
xor
fwait
lret
cmp
inc
fnstcw
or
aam
clc
sarl
inc
mov
push
lret
loope
jge
xchg
cmp
mov
jb
shll
lock
cmp
pop
dec
pop
lret
pop
repz
push
sbb
test
inc
mov
loop
or
fcmovu
loop
mov
testl
add
shlb
bound
add
addr16
adc
aad
or
and
push
mov
add
jae
insl
mov
movsb
jae
push
imul
jae
fs
mov
fiaddl
mov
push
lods
clc
mov
pop
out
fcom
lock
xchg
cmp
and
aaa
stos
leave
mov
xchg
lret
fnstsw
es
test
xchg
gs
push
sub
xor
out
mov
xchg
pop
fisubrl
dec
mov
test
or
cmp
xchg
insl
push
pop
js
push
lea
test
int
and
mov
mov
jne
jno
xchg
data16
xchg
imul
push
out
sbb
cmp
mov
xchg
fs
or
stos
push
cltd
xorb
es
rclb
fldz
xchg
fimuls
inc
fxrstor
pop
cli
sub
or
daa
scas
sbb
adc
inc
or
jae
cltd
das
cli
mov
cmc
jns
test
jle
int3
test
cwtl
lods
mov
mov
and
fldcw
repz
push
sbb
jl
sub
roll
cmp
insl
lods
test
jp
xor
or
and
flds
mov
mov
xor
inc
loop
cltd
pop
imul
mov
jno
jns
pop
cs
cltd
aad
mov
lret
ja
mov
dec
and
dec
fildll
xchg
test
xor
imul
dec
push
mov
or
lret
pusha
push
inc
cmp
sti
das
mov
jle
sahf
pop
inc
add
shll
mov
jle
out
jg
add
fsubrl
fistpl
mov
add
jecxz
jno
leave
mov
pop
inc
and
stos
pop
insb
cmpb
mov
cmc
sbb
xchg
and
cmpsb
or
push
loop
pop
cli
cmc
gs
loope,pn
mov
adc
add
xor
leave
je
and
mov
inc
movsb
test
shl
icebp
pushf
and
bound
lahf
add
add
xchg
xchg
lods
hlt
inc
inc
pushf
push
cmp
xchg
jle
fbld
lret
fnstsw
jl
out
mov
jne
sub
mov
sub
mov
xorb
push
sub
mov
std
dec
jae
or
scas
push
inc
sbb
xor
xor
push
cwtl
in
insb
add
ror
jl
fwait
jb
inc
mov
faddl
lods
add
xchg
popf
call
cmp
jp
popf
lahf
and
cmp
repz
movsl
mov
adc
addr16
sub
ss
mov
add
cmc
imul
xlat
sbb
jge
mov
sbb
jge
aas
xor
sbb
mov
xchg
out
sbb
ds
xchg
stc
sbb
add
or
orl
and
mov
xchg
cmp
cmp
cltd
pop
push
jno
sub
mov
imul
cmpsl
cmp
add
and
loopne
mov
jo
dec
mov
xchg
loopne
push
xor
cli
mov
or
jns
pusha
bound
sbbl
xchg
inc
sub
xchg
lcall
fidivl
or
inc
inc
xchg
mov
cmp
popf
xchg
pop
test
fldl
jne
data16
test
out
pop
repnz
mov
mov
movsb
push
ret
ljmp
xchg
ret
sub
fimuls
lock
cmc
mov
ljmp
repz
lcall
lcall
dec
pop
cs
xchg
adc
fmuls
push
or
fwait
popa
ret
out
sub
jo
cwtl
dec
pop
inc
mov
inc
pop
mov
scas
in
xchg
cwtl
movsl
lret
xchg
mov
fidivl
jg
sbb
xlat
push
lret
xor
ret
mov
fimull
lea
stos
arpl
fwait
callw
sbb
sub
dec
test
je
inc
pop
dec
jnp
pop
mov
iret
pop
scas
and
mov
sahf
in
mov
test
jl
pop
or
push
rcll
dec
pop
adc
push
pop
ret
adc
xchg
push
lock
ret
pop
stc
testb
push
push
jnp
mov
xchg
dec
mov
out
adc
in
xor
mov
mov
mov
sbb
jl
mov
mov
iret
xor
adc
test
jp
repnz
or
xchg
insb
in
cwtl
pop
sub
xor
sbb
xor
es
inc
fimuls
out
dec
jg
ss
pmulhuw
jmp
cwtl
inc
cwtl
testb
adc
jg
mov
ss
and
add
inc
jae
and
cmp
adc
inc
inc
xor
in
adc
lods
das
mov
cmp
cmp
rol
pop
adc
mov
adc
xchg
push
filds
test
adc
fadds
popa
lahf
add
lods
adcb
cld
inc
fidivrl
clc
gs
nop
dec
icebp
sbb
pusha
test
ss
adc
pop
xor
test
push
js
cmp
mov
mov
lcall
sbb
cmp
or
pop
repnz
in
push
push
dec
stc
xor
pop
pusha
sub
xor
or
pop
sarl
fildll
mov
mov
inc
iret
les
jne
icebp
pop
stc
mov
inc
rol
xor
ret
movsl
add
mov
jmp
ret
pusha
xchg
mov
lret
cwtl
cmp
test
xchg
or
je
inc
dec
mov
adc
es
and
clc
xchg
into
inc
xchg
pop
icebp
cmc
negl
mov
je
inc
mov
add
rolb
jecxz
je
jg
xor
add
lea
sub
mov
sarb
call
popa
orl
popf
out
fidivrs
inc
xchg
inc
out
add
cmc
mov
faddl
lock
test
stos
loop
cmpsl
in
mov
repnz
mov
cltd
dec
mov
in
push
sub
sub
clc
outsl
or
pop
cltd
pop
and
cwtl
push
mov
cmp
rcrb
shr
add
div
jns
and
addr16
loopne
in
mov
cwtl
movsb
mov
sahf
outsb
pop
pop
adc
add
sbb
cwtl
xor
mov
ss
or
jbe
daa
arpl
mov
add
movsb
jbe
dec
xchg
ret
push
adc
and
jmp
jecxz
clc
mov
jp
xchg
iret
movsb
sbb
dec
test
fiadds
xchg
stos
cmp
or
mov
dec
sub
lods
into
mov
or
cmp
jb
sarl
dec
or
mov
mov
and
lahf
cmpsl
jl
cld
je
jmp
xor
ljmp
jne
mov
ret
cs
jae
xor
or
xchg
jmp
sbb
adc
jge
jmp
addr16
pop
cmp
fwait
mov
pusha
add
pusha
xor
jnp
push
fstpl
ret
je
or
jp
cmp
aad
push
cmpsb
ret
mov
and
add
ja
movsl
rorb
inc
fs
das
jmp
ja
cmc
shlb
cmp
mov
fistl
enter
in
int3
adc
mov
mov
mov
dec
lret
push
dec
mov
jg
push
add
inc
cs
sbb
xchg
lahf
es
mov
jp
imul
sbb
add
jnp
lock
cmp
lea
sbb
test
inc
shll
mov
mov
mov
insl
xchg
jnp
scas
fisubrl
scas
push
adc
jbe
cmp
sub
push
fs
sbb
pop
push
xchg
addr16
or
jno
push
aad
jmp
mov
mov
jmp
mov
addl
jl
dec
jg
jecxz
push
mov
or
pop
push
xor
stos
xor
cwtl
mov
mov
adc
ja
adc
ljmp
mov
adc
fwait
sub
adc
leave
pop
push
adc
hlt
push
and
sbb
pop
imul
pop
xchg
push
popa
push
push
push
inc
insb
addl
ret
sbbb
fwait
and
int
add
pushf
jmp
repnz
sub
idivb
in
mov
fisubrl
mov
xacquire
mov
testl
es
or
xor
cld
jl
add
into
jecxz
or
call
ffree
inc
jp
or
insl
add
shrb
rcl
inc
lcall
rol
and
mov
sub
push
test
push
mov
jne
popa
out
subl
jb
icebp
shrl
sbb
mov
cmp
cmpb
mov
cmpsl
pop
hlt
aas
dec
movsl
insb
adc
mov
xchg
idivl
sub
sbb
sti
push
inc
rorb
out
mov
rorb
adc
lcall
jne
bnd
cmp
mov
fwait
cltd
cmp
xor
bound
adc
pop
in
cmpsb
adc
decb
aaa
scas
and
pop
stc
mov
sub
push
push
mov
inc
push
adc
mov
and
pop
daa
dec
mov
push
imul
icebp
gs
jns
sub
call
gs
jns
jp
push
imul
jne
fildll
cli
xchg
add
nop
sahf
fisubrl
addr16
push
push
xchg
movsb
xchg
sarb
push
push
mov
mov
sub
out
jnp
and
xchg
lcall
push
loope
call
pushf
dec
rolb
inc
or
cmp
icebp
jb
lds
mov
inc
sbb
xchg
mov
div
cltd
enter
add
inc
sti
aas
iret
or
cld
pop
mov
insl
rcr
pop
pop
mov
andb
cmpsb
xchg
add
pop
lret
imull
out
push
shll
dec
cwtl
inc
pop
jmp
dec
push
arpl
ljmp
sub
jge
dec
xorl
xchg
push
in
es
jbe
shll
pop
cltd
dec
test
dec
xchg
adc
shr
xchg
xchg
mov
data16
cmp
ficoms
subb
frstor
or
adc
int3
xor
aas
cmpps
in
add
dec
xchg
adcl
movsl
cld
insb
inc
dec
in
pop
into
clc
xlat
push
or
cld
xchg
sub
xchg
cmp
mov
iret
adc
out
fucomi
xchg
sahf
test
cmp
pop
adc
sti
xchg
out
fcomi
push
add
xchg
dec
xor
mov
fistps
aam
js
pop
cmc
cmp
mov
push
inc
mov
pop
adc
icebp
stc
popf
test
xlat
mov
pop
push
adc
mov
jno
push
pop
cmp
pop
idiv
push
loopne
stc
dec
icebp
sti
mov
adc
sbb
pushf
jle
push
rcl
aad
push
cmpl
mov
ljmp
jle
push
addr16
movsl
cmp
xchg
ret
jmp
ds
loope
mov
mov
cmpb
fidivs
mov
mov
cmp
mov
xor
mov
jmp
add
aaa
mov
lret
push
insl
testl
inc
dec
loopne
mov
mov
inc
into
aam
adc
out
mov
dec
adc
dec
ljmp
push
stos
jne
cmp
lcall
xor
out
push
push
dec
hlt
test
xor
mov
sahf
adc
lret
push
pop
scas
lods
jb
sbb
shll
testb
shll
pmullw
call
mov
lods
popa
dec
or
dec
addr16
shr
adcb
sub
rcl
push
pop
int3
jp
xchg
lret
out
mov
xchg
adc
ror
lret
sub
inc
loope
aad
add
jmp
enter
xchg
pusha
or
ror
addr16
cs
mov
out
stos
cli
push
std
xlat
mov
and
and
test
xchg
sbb
scas
sbb
lahf
in
add
test
jo
jae
cmp
cmc
jmp
push
out
mov
or
add
inc
xchg
addr16
je
mov
in
push
lods
jecxz
fidivrs
push
lods
mov
lock
popl
jp
mov
movsb
pop
cmpsb
hlt
imul
and
jns
cmpsl
popa
inc
cmp
lret
adc
fs
jg
loope
inc
clc
cmp
mov
inc
cmp
mov
or
jecxz
sbb
popa
mov
popa
test
dec
lret
ja
mov
xor
fmuls
push
or
push
sbb
imul
fisubrl
jle
in
movsb
mov
dec
add
xchg
xchg
fsub
adcl
movsb
sbb
loopne
out
movsb
push
fsubrs
shlb
dec
lret
mov
jno
nop
js
stos
mov
roll
mov
rorb
cmpsl
dec
mov
test
shll
adc
and
movsl
pop
jb
sbb
stos
or
and
xorb
adc
sub
loop
push
inc
lock
jmp
mov
out
leave
mov
aas
push
push
mov
cmc
cmc
inc
xlat
xlat
data16
xchg
lahf
jl
in
mov
mov
mov
aad
mov
gs
mov
mov
push
test
ljmp
stos
loopne
fnstenv
cmp
stos
pop
lret
aad
mov
into
sarl
stos
or
fbld
mov
push
jo
shrl
js
adc
pop
push
dec
lahf
push
das
inc
sbb
pop
add
out
mov
test
and
je
add
pop
or
dec
ss
gs
push
fdivrs
fwait
pop
ja
dec
shll
cmpsb
inc
dec
xor
jg
hlt
jl
sub
and
jle
addl
dec
dec
fcoml
shl
add
push
rcll
dec
jno
dec
or
mov
bound
shll
xchg
repnz
xor
lds
inc
push
cld
adc
and
sub
fwait
fs
dec
enter
xor
cld
icebp
std
push
movsl
xor
adc
inc
pop
data16
push
das
sub
and
fwait
in
mov
popf
repnz
sahf
pop
add
sub
jle
shl
xchg
lea
add
test
sub
stos
or
inc
call
enter
inc
pusha
sub
push
adc
dec
test
mov
sti
imul
adc
fcomps
inc
jns
xchg
jns
out
unpcklps
cmc
jbe
mov
push
lock
xchg
movsl
cmp
incb
jno
sbb
das
cmpsl
sahf
pop
cld
xor
or
cld
add
stc
andb
aas
stos
lcall
sub
insl
jno
dec
mov
pop
jne
mov
sbb
mov
repnz
xchg
pop
out
inc
lock
mov
or
bound
jle
lock
aam
das
stos
incl
cld
pop
scas
push
ja
push
scas
ds
fwait
call
xlat
cmp
lds
lods
js
je
pop
out
push
lahf
mov
dec
push
push
add
mov
jge
lea
lcall
dec
mov
lret
loop
jmp
mov
and
xchg
cli
mov
xor
sbb
sbb
in
in
outsb
sti
jl
das
lock
repnz
fdivrs
dec
add
es
ficoml
ds
dec
lsl
jne
js
pop
jecxz
pop
std
js
sub
js
mov
mov
insb
insl
xchg
inc
fmull
out
add
cmp
mov
jns
jb
jmp
je
cld
mov
inc
jbe
adc
push
inc
mov
ds
movsb
and
imul
std
int
push
xor
scas
mov
pop
call
cmp
jmp
jge
cmp
or
arpl
jl
in
bound
loopne
gs
addb
or
dec
cmpsl
pop
cmc
pop
aam
test
fidivrl
ds
pop
enter
pop
xchg
leave
lods
xchg
test
test
ficoml
mov
sbb
in
int
outsb
fadd
mov
adc
xlat
mov
mov
ficoml
fisubs
stc
add
mov
sarl
cmp
mov
mov
xchg
mov
insl
iret
and
mov
arpl
test
sahf
xor
xchg
ficomps
add
or
jbe
mov
rcl
dec
dec
dec
pop
lea
sahf
incl
push
add
lds
or
bound
sub
lahf
ret
xchg
clc
int
clc
lock
movsl
jmp
sti
shrl
pop
mov
sti
iret
test
icebp
push
negb
jmp
fists
or
test
add
aaa
lahf
push
push
fst
rorl
dec
in
shl
mov
jnp,pn
fistl
mov
in
dec
sub
xchg
inc
jbe
xchg
fwait
mov
lahf
and
out
insb
test
add
push
mov
or
shrb
inc
loop
mov
pushf
cmpsl
push
adc
dec
inc
mov
mov
pop
out
scas
sbb
dec
jmp
cmc
add
rorl
int3
cmpsb
and
icebp
movsl
push
cli
jmp
aad
daa
push
fistpll
xlat
or
inc
cs
ret
lock
sub
flds
mov
pop
inc
pop
adc
fidivl
scas
ja
adc
cmp
cltd
clc
mov
push
pusha
or
jg
enter
hlt
cmp
loope
cmp
pop
adc
adc
es
daa
sbbb
inc
or
hlt
and
lods
dec
cmp
pop
inc
xor
xchg
dec
fnsave
data16
sbb
jo
push
ret
shl
dec
cmpsl
push
test
inc
je
loop
test
xor
popf
fsubl
mov
stc
mov
or
push
xchg
dec
xabort
adc
xchg
or
add
in
leave
cmp
sti
cli
mov
fcomip
mov
inc
ret
out
test
iret
mov
ds
je
xor
ss
mov
pop
adc
arpl
push
mov
stos
js
jnp
mov
mov
push
push
jb
jo
mov
fidivrs
rcl
xchg
repz
and
adc
movsl
xchg
xchg
adc
cmp
or
fwait
ret
add
fcoms
int
stos
push
cmc
in
and
inc
in
adc
ficompl
sbb
fwait
xchg
aam
jb
inc
scas
ljmp
iret
pop
cmpsb
fbld
test
cli
mov
cmpsb
repz
jae
pop
xor
jle
jns
pop
in
outsb
shlb
aaa
cmp
push
jg
sahf
dec
dec
hlt
cmp
dec
icebp
mov
iret
inc
cmp
jp
fidivrl
push
ret
jo
or
push
lock
jne
sbb
insb
dec
outsb
cmc
jle
mov
cwtl
pusha
ds
out
jle
mov
jne
mov
dec
lret
mov
in
sub
cmp
fcompl
jecxz
addb
cmpsb
jns
int3
xor
jmp
repz
mov
jbe
mov
jl
lds
inc
adc
mov
mov
and
jbe
or
arpl
mov
mov
sub
pop
add
jle
arpl
pop
mov
lods
cltd
lret
jo
mov
pop
cmp
fcoml
jo
jbe
negl
sub
aaa
mov
dec
pop
jge
ds
gs
adc
pop
sti
jbe
dec
mov
mov
inc
cmpsl
imul
aaa
inc
test
inc
mov
pop
ss
dec
mov
out
ds
push
in
in
sbb
ret
push
or
pop
jmp
andb
in
add
loope
cld
push
out
mov
cs
jb
ret
xor
mov
call
add
movsl
or
aad
addr16
xor
lret
mov
mov
add
loop
sarl
ss
sbb
or
aam
out
repz
sti
nop
mov
lods
mov
mov
test
and
adc
stos
push
shr
inc
divl
movl
dec
or
cltd
repz
stos
mov
push
push
mov
int3
push
inc
data16
and
jmp
and
imul
cld
ds
jo
fucomi
add
int
lock
popf
lds
pop
mov
pop
and
sub
mov
rorb
out
shrl
shrl
inc
pop
mov
sub
cmp
scas
sub
mov
cmp
pop
xchg
aas
push
push
fstps
ss
push
test
dec
fdivrl
mov
jl
pop
aas
clc
push
fadds
xchg
stc
fdivrp
mov
jb
push
sti
cmp
fcmovnu
sub
mov
int3
or
adc
out
aam
sti
dec
ja
dec
in
cmpsl
divl
scas
sbb
mov
lahf
pop
push
pop
in
popa
lds
lea
scas
adc
arpl
push
mov
mov
add
push
push
and
lcall
push
jl
xchg
mov
test
or
pop
sbb
push
aaa
or
push
xchg
xor
mov
pop
dec
or
sub
mov
mov
push
mov
cli
cmpsb
dec
fdivrp
std
push
mov
cmp
cwtl
jmp
cmp
cli
repz
fwait
xchg
loop
or
pop
or
inc
mov
shlb
imul
vprotd
sbb
xchg
pop
arpl
clc
ds
add
dec
scas
cmpsl
pop
or
out
push
lea
push
jnp
sub
into
fcmovb
ret
cmp
mov
xchg
sbb
das
mov
and
jle
mov
xor
pop
push
pusha
lcall
mov
lea
das
cmc
lock
jl
xor
jge
cmp
xor
xor
and
push
xchg
pop
cmpsl
or
mov
inc
cltd
stc
and
cmp
mov
mov
fidivs
xchg
scas
and
jo
sbb
xor
pusha
mov
adc
fbstp
ret
icebp
orl
inc
xchg
movsl
mov
mov
ss
fucom
jns
sbb
or
inc
mov
cmp
sub
in
add
xor
adc
ret
xchg
mov
mov
xor
inc
adc
icebp
in
or
sbb
mov
hlt
sub
xchg
mov
jge
add
mov
dec
idivl
mov
pop
fs
adc
xchg
scas
nop
pop
mov
clc
outsl
sbb
sarl
mov
outsl
pop
and
loopne
lret
or
or
lods
into
sub
aaa
xor
push
lea
xchg
sahf
xor
stc
stos
lods
fmull
jb
mov
push
sbb
repz
int3
jle
insl
inc
sahf
mov
stc
ja
pop
shlb
push
dec
inc
push
popa
jmp
pop
cwtl
mov
popa
pop
or
add
rclb
lahf
xor
add
out
cmpsb
xchg
cs
fisubl
sub
mov
sbb
mov
test
sbb
sbb
and
push
mov
movsb
jg
mov
inc
add
stos
xor
mov
xchg
add
and
xor
push
cwtl
push
into
jg
lea
inc
ss
mov
add
add
rolb
jb
xor
cmp
inc
scas
pop
mov
push
mov
into
xor
pop
cmp
iret
ja
imul
test
or
mov
push
cmp
xor
jne
mov
add
fnstenv
lods
mov
aam
jno
xchg
repnz
cltd
mov
hlt
sti
jne
sbb
or
and
sbbb
push
popf
adc
push
sub
adc
dec
ja
std
xor
mov
or
or
lahf
mov
inc
push
ljmp
addr16
std
je
cmc
imul
leave
paddw
add
cmpl
mov
add
arpl
fs
inc
adc
mov
jge
insl
adc
insl
repnz
xlat
movsl
jl
cwtl
mov
cmp
mov
lods
dec
outsb
mov
mov
sbb
pop
xor
push
inc
push
ret
xchg
in
xor
stos
push
xor
add
pop
xor
inc
jb
pop
mov
das
jne
data16
pop
mov
imul
pop
push
xor
in
jne
jae
sbb
sub
dec
xchg
ja
push
mov
lods
xchg
out
push
iret
jno
add
outsb
push
mov
push
aad
xor
in
mov
jge
lret
iret
mov
jmp
je
imul
iret
loopne
and
es
cs
fwait
xor
sbb
test
jae
mov
cmp
xor
fwait
into
icebp
cmpsb
cmp
lock
pop
lds
mov
jmp
lods
mov
idivl
push
into
cmpsb
inc
cltd
adc
shrl
mov
inc
in
pop
pop
gs
xor
mov
xchg
xchg
xchg
add
pop
jns
cmp
pop
cmp
sbb
mov
jnp
mov
jl
cltd
dec
mov
int3
pop
cld
stc
mov
jns
push
je
in
divl
add
xchg
jae
in
enter
sub
roll
test
sub
mov
and
push
sbb
push
pop
rcr
daa
xchg
fstps
mov
push
lret
imul
iret
cmp
dec
xchg
icebp
mov
jbe
mov
hlt
mov
adc
jbe
inc
push
mov
push
sub
pop
mov
inc
cmp
sbb
jle
daa
fbstp
outsb
push
pop
xor
or
fwait
jecxz
and
add
push
je
cmpsl
in
inc
cmpsb
cmp
bound
jge
or
shr
icebp
sbb
xchg
clc
inc
xor
sub
clc
and
ss
add
ret
int
push
mov
mov
loope
je
sbb
sbb
stos
insl
cli
stos
pusha
lret
stc
js
jmp
ljmp
std
push
jl
cmp
inc
test
add
lods
and
lods
push
mov
inc
pop
popf
adc
mulb
push
or
add
cmp
pop
mov
jmp
dec
bound
push
adc
setns
dec
insb
pop
popa
jmp
jbe
dec
and
add
test
sub
repz
sub
shrb
jae
mov
mov
jle
aas
shll
and
xchg
adc
cmpsb
mov
subl
lock
je
jnp
or
mov
ss
mov
mov
movsl
test
fisubrl
ss
outsl
fadds
inc
and
jge
lods
cld
mov
sbb
jmp
out
pop
les
scas
pop
pop
push
test
mov
mov
mov
mov
mov
aad
add
inc
mov
dec
pop
dec
fwait
mov
mov
pop
add
popf
loopne
adc
out
xchg
repz
mov
cmp
ljmp
and
or
push
movsl
pop
cmp
fnstcw
dec
fists
xor
movsl
or
mov
jno
xchg
aas
popa
jg
push
addr16
cmp
pop
rcr
sbb
mov
lea
and
inc
push
out
nop
push
pop
cwtl
pop
repz
cmp
push
stos
mov
xchg
lods
cmp
pop
scas
sbb
mov
inc
std
in
negl
cmp
sub
jmp
or
jl
xor
aaa
int3
jae
xchg
and
pushf
fistpll
nop
ds
and
add
sbb
cmp
push
add
xor
dec
pop
fmuls
push
lret
ffreep
add
data16
sub
outsl
decl
adc
cmc
icebp
cmp
adc
into
dec
mov
leave
pop
add
jecxz
pop
sahf
fldenv
pushl
and
mov
sar
js
out
enter
ljmp
sub
push
movsl
sbb
sub
cltd
shll
or
in
aam
jbe
sub
and
out
loope
mov
sub
push
dec
xchg
mov
or
sub
xor
push
inc
inc
xchg
cs
add
or
in
jbe
cmc
fldl
ss
xor
bound
xchg
loope
push
aas
or
dec
sbb
inc
fisubrl
test
enter
ret
xchg
idivl
sbb
adc
xor
xchg
lea
mov
push
fidivl
cmp
mov
xchg
pop
shlb
or
lds
mov
mov
nop
addr16
shll
or
inc
repnz
pusha
sbb
cmp
cmc
cwtl
xchg
test
sbb
add
xor
ja
imul
ret
inc
cld
push
stos
lret
out
xlat
cmp
mov
stos
pop
lcall
test
or
lds
mov
in
cmp
inc
inc
inc
mov
add
bound
or
fs
outsl
hlt
sub
out
loopne
js
sbb
test
sbb
shl
mov
push
adc
pop
lds
mov
outsl
fdivp
jo
add
std
xor
adc
les
add
aad
add
mov
push
lea
mov
out
and
in
push
sti
mov
push
or
sub
dec
add
sbb
shlb
xor
cmp
adc
hlt
mov
imul
out
fprem1
dec
insb
imul
in
add
push
sti
push
sti
adc
fadd
mov
dec
fcoms
or
nop
sahf
das
stos
lret
stc
ja
movsl
push
push
sahf
xor
test
or
push
bound
sub
pop
clc
clc
mov
fwait
dec
sbb
les
xor
push
adc
stos
clc
notl
std
and
je
arpl
repz
xor
mov
fildll
add
push
mov
mov
mov
mov
lret
cs
push
das
inc
daa
sub
xor
pop
sub
and
inc
xchg
push
in
xchg
dec
scas
cwtl
push
in
jl
enter
and
mov
cli
mov
push
push
in
lods
adc
fistpll
insb
mov
mov
sbb
dec
cwtl
sbb
and
lods
add
push
adc
lds
sub
cld
adc
sbb
mov
lret
add
scas
inc
popf
push
fs
xor
scas
stos
push
mov
popa
movsl
imul
cmpsl
test
add
in
pop
jl
mov
in
addr16
mov
lock
cmp
cmp
fistpll
jmp
test
out
inc
loopne
int3
dec
sbb
clc
jne
mov
je
adc
pop
mov
mov
push
push
popa
jns
test
cmpsl
imul
add
jp
ljmp
add
je
jmp
roll
jns
daa
jnp
jmp
or
loope
add
jmp
add
lods
push
pusha
pop
in
rcl
mov
test
mov
imul
sbb
sbb
dec
dec
iret
lea
mov
sarl
sbb
xchg
mov
lock
push
or
fs
jle
inc
icebp
ss
je
call
data16
adc
mov
ljmp
lahf
mov
xchg
or
sub
lret
push
notl
dec
pop
jge
stos
mov
insb
sbb
or
jge
les
ror
ret
sbb
test
or
subl
add
mov
fnstcw
inc
cmp
jns
xchg
or
in
dec
add
test
pop
icebp
sub
or
test
adc
popf
ror
jg
in
sub
lahf
mov
xchg
lret
aaa
xorb
pop
lock
cmpsb
ds
jmp
jb
push
pop
mov
dec
movsb
jns
cwtl
push
cmp
pop
fnsetpm(287
cmp
mov
and
shll
fwait
mov
ljmp
divb
sbb
cmp
cs
jp
notl
mov
lret
sbbb
mov
inc
or
pop
das
add
xchg
xor
dec
pop
add
mov
mov
xchg
lret
icebp
in
inc
cmp
aas
mov
ljmp
lock
sbb
fwait
sahf
xchg
in
daa
punpckhbw
lods
push
sub
lds
aaa
sub
xor
arpl
jo
and
ja
cltd
xor
dec
pop
xchg
insb
scas
iret
push
mov
or
or
mov
or
mov
adc
mov
ss
mov
jmp
popf
scas
movsl
out
pop
push
mov
add
lret
leave
xchg
scas
adc
xor
mov
mov
mov
in
imul
lcall
cltd
arpl
adc
pop
pop
lahf
xor
ja
nop
inc
jno
sub
inc
cmp
jns
jae
fcomip
jmp
xchg
or
jbe
addb
cmp
inc
scas
jecxz
enter
testb
cmp
mov
pop
cmp
inc
mov
push
arpl
stos
dec
and
shrb
shll
test
loopne
movsl
sub
ja
mov
pop
fwait
xchg
sub
call
fnstsw
in
adc
rorl
jne
mov
in
je
dec
loop
xchg
jl
mov
sbb
ds
sub
push
shlb
pushf
sub
xor
mov
push
insb
xchg
sub
cmp
lods
loope
mov
sub
test
call
rcr
pop
dec
scas
loop
cs
loopne,pt
mov
add
cmp
sub
dec
push
add
sub
dec
sbbl
or
push
cltd
int
xor
rolb
dec
push
mov
pop
into
in
mov
xchg
lcall
mov
sub
incb
aaa
paddq
fdivrs
icebp
jo
cli
fcomp
ss
inc
stc
cmpsb
xchg
clc
dec
jne
ret
sahf
std
mov
push
adc
jbe
jns
sub
push
push
lret
out
add
push
xchg
outsl
movsl
pop
push
jb
mov
push
xchg
sub
jle
or
mov
fstl
jle
fcoml
sbb
add
mov
add
mov
sub
scas
jle
mov
cltd
inc
mov
pop
test
xchg
mov
je
jnp
adc
pushf
dec
sti
mov
ficoms
jmp
clc
pop
ret
ffree
jle
aaa
xchg
mov
pop
or
xor
jmp
or
pop
arpl
dec
repz
adc
sahf
in
cltd
inc
jno
stos
es
mov
mov
jne
jb
bound
push
ret
lds
xor
ret
sub
adcb
jno
push
xchg
xchg
nop
jns
subl
std
cwtl
mov
jmp
sub
mov
push
xchg
aam
mov
jno
pop
mov
dec
movl
xchg
add
push
cs
jo
mov
aad
dec
dec
cmovb
stos
into
inc
dec
mov
popf
jo
testl
sbb
out
out
loop
mov
cmc
cltd
adc
or
test
int3
cltd
test
jmp
cld
jb
mov
mov
es
adc
cld
xchg
or
enter
test
cltd
pushl
sub
xchg
or
cmpsb
adc
dec
scas
cmc
std
sbb
ret
cwtl
sub
lods
cmp
pop
mulb
inc
mov
test
pop
dec
mov
outsl
mov
lds
icebp
cltd
push
cmpsb
add
pop
xchg
mov
add
inc
fisttpll
sub
lock
daa
es
sbb
icebp
out
or
add
xchg
stos
jge
lcall
add
hlt
cli
and
mov
incl
jp
mov
mov
std
mov
mov
shr
add
jl
mov
fwait
and
lods
icebp
cmp
scas
outsb
cmp
rcrl
loop
and
and
loopne
mov
leave
ljmp
fwait
xor
negb
lret
out
or
pop
lods
out
adc
and
and
jbe
and
mov
popf
int3
leave
imul
mov
xchg
jne
mov
mov
xchg
xchg
adc
test
push
movsb
adc
add
dec
add
jne
xor
call
movsl
mov
sbb
adc
fistpl
push
xchg
xlat
jb
jl
jg
rolb
popf
aad
hlt
mov
sti
fisttpll
fpatan
aam
das
push
jecxz
cltd
push
es
into
xor
xor
pop
xor
fcoms
adc
inc
xchg
icebp
jl
push
jg
lods
xchg
decl
pushf
loop
pop
in
push
incb
lea
push
add
inc
sbb
cwtl
fstl
outsb
xchg
in
jno
mov
outsb
xor
push
fucomi
rorb
xor
push
outsb
shl
inc
push
xchg
rorl
in
mov
outsl
fdivr
sub
fisubl
push
lahf
sub
mov
dec
adc
or
stos
mov
and
pop
hlt
lods
pushf
xor
add
hlt
movsl
shl
stc
dec
iret
and
test
inc
outsl
jo
dec
add
inc
addr16
pop
sub
js
lock
daa
pop
pop
cmp
add
dec
insl
xchg
cmc
scas
xchg
das
add
jecxz
mov
sub
insb
cs
jno
mov
clc
mov
movsl
mov
sbb
lcall
sub
mov
or
xchg
mov
hlt
fcompl
into
rorl
es
sub
mov
xor
inc
pop
scas
imul
ret
adc
es
mov
mov
rolb
mov
jge
scas
ret
or
shrb
cmp
jns
dec
jae
xor
inc
aas
sub
cmpb
adc
pushf
jae
mov
repnz
inc
dec
js
jg
cmp
cli
adc
xor
negl
push
cli
pop
cmpsb
fwait
xchg
xchg
iret
or
cld
ja
fwait
aam
adc
xor
movsw
daa
jecxz
lcall
and
push
hlt
inc
cmc
dec
mov
push
call
mov
xor
sbb
mov
imul
mov
lds
lea
dec
mov
and
xor
add
je
ljmp
pop
ficoml
push
fsts
lret
mov
mov
xchg
cmc
dec
ja
or
sahf
push
jo
sahf
aaa
adc
mov
test
push
mov
mov
popa
icebp
aaa
cmc
inc
ficompl
or
or
xor
and
push
sbb
cmp
imul
mov
lret
inc
adc
ret
and
mov
mov
insl
fcoml
push
dec
or
mov
cmp
ror
scas
sub
pop
pop
mov
lret
sbb
xchg
iret
stos
insb
aad
jge
cmpsl
push
in
cwtl
into
xchg
negl
xor
pop
imul
movsl
mov
lahf
sub
subb
xor
aas
negb
push
mul
add
loopne
ret
cmp
inc
outsl
outsl
fcoml
push
adc
mov
and
sbb
cmc
mov
push
ja
cmp
mov
out
les
mov
dec
inc
lcall
aad
scas
lds
inc
rcll
ficomps
leave
mov
push
mov
pop
scas
insb
mov
insl
jecxz
stos
jg
pop
sub
popa
adc
push
jno
mov
sbbb
sbbl
leave
shl
xlat
mov
push
push
pusha
jl
setae
addr16
mov
push
cmp
xor
ret
outsb
mov
aam
ss
aaa
push
iret
and
frstpm(287
jl
adc
roll
lfs
sbb
and
xor
sub
adc
and
dec
fsubl
push
and
cld
pop
add
push
lea
cli
lods
xchg
adc
sub
cmpb
jg
xchg
movsb
loop
std
cmp
jle
int
mov
mov
adc
dec
in
inc
pop
xchg
lret
or
sub
iret
inc
stos
push
or
fcomip
inc
mov
fists
and
mov
or
cwtl
inc
fimuls
push
int
push
mov
sti
cmp
jmp
or
xlat
call
mov
in
stos
adc
push
fs
in
cltd
and
push
fwait
repnz
add
and
fdivrl
leave
mov
loopne
gs
push
pop
inc
push
mov
and
or
imul
das
test
outsb
or
stc
test
cmp
mov
imul
jge
jp
hlt
addr16
xor
or
lcall
mov
js
mov
inc
cmp
inc
enter
jmp
inc
clc
or
ljmp
lret
cmp
sbb
sbb
jns
iret
pop
sub
xchg
je
std
pop
call
pop
hlt
mov
or
add
pop
pop
push
cmp
in
es
dec
xchg
pop
scas
mov
jmp
popf
add
jl
movsb
mov
inc
std
inc
loopne
int3
push
sbb
js
push
xchg
stos
ret
mov
dec
jae
test
inc
sbb
outsl
enter
push
jmp
bound
jne
lods
dec
xor
mov
mov
rcr
subl
cmpsl
jecxz
mov
xlat
cmpb
orb
icebp
cmp
xchg
rorb
pop
popa
test
mov
pop
data16
sub
fidivrl
jnp
mov
and
jmp
dec
or
xchg
jmp
mov
mov
xlat
xchg
in
scas
jae
adc
mov
outsb
mov
fadds
rorl
jmp
add
scas
dec
data16
adc
and
mov
je
dec
xor
and
mov
loop
inc
gs
and
pcmpgtb
add
dec
add
push
ds
mov
fstpt
nop
iret
es
xchg
dec
sbb
mov
xor
xorb
push
arpl
ss
out
mov
dec
jl
xchg
pop
lret
lahf
push
imul
mov
in
mov
fdivl
mov
je
pop
stos
and
xor
cmpsb
push
lock
xchg
stos
fsubrl
sbb
sahf
mov
push
or
jne
sbb
cli
push
adc
aam
pop
xlat
xchg
pop
adc
xorl
xor
dec
lods
or
and
lods
mov
out
jle
mov
ret
jle
cld
push
icebp
cmovnp
jbe
jo
cmp
fildl
rcr
cmp
push
sbb
fbstp
es
dec
mov
cltd
jns
decb
negl
cli
ret
push
mov
int
rcl
cmp
dec
sub
sub
out
push
rolb
push
mov
add
in
mov
loop
mov
imul
orl
or
pushf
hlt
mov
sub
cmpb
or
adc
and
jge
lahf
insb
and
sbb
or
add
or
enter
fnstsw
jae
push
loopne
scas
xor
mov
sub
fwait
imul
insl
mov
in
insb
adcb
loope
xlat
pop
and
adc
cltd
pop
mov
adc
sahf
xor
push
int3
mov
mov
cmc
mov
xor
xchg
imul
push
insl
jbe
inc
jns
hlt
jge
scas
shlb
inc
fnstcw
int3
mov
mov
repz
jnp
inc
cmc
ret
daa
scas
cmpsb
pop
mov
test
or
shlb
push
fbstp
mov
jne
pop
popf
lds
sbb
cmp
cmc
inc
fstl
movsl
fdivs
pusha
pop
inc
mov
lcall
dec
je
mov
add
popa
stc
jl
mov
addb
mov
sub
lret
pushf
in
out
cwtl
sub
js
out
mov
push
in
jecxz
lods
jne
push
mov
aas
loopne
sub
xchg
aaa
pop
mov
xchg
and
add
mov
adc
mov
mov
jmp
hlt
lcall
pop
imul
rolb
filds
inc
push
xchg
sbb
mov
adc
test
int3
sub
push
xlat
mov
mov
sbb
stc
mov
add
stos
cmp
jl
mov
sbb
push
inc
and
adc
jb
movsb
dec
out
or
out
movsl
test
or
test
sar
jno
sbb
rorb
sbb
aad
mov
in
cmp
shl
pop
ljmp
test
sub
jbe
add
push
mov
mov
add
push
push
pop
push
xor
aas
mov
cmc
adc
sbbb
xlat
sbb
xchg
pop
leave
mov
jge
or
imul
out
pop
enter
aaa
pop
test
xor
xchg
arpl
cmp
jbe
xor
and
add
and
test
es
jecxz
dec
push
xchg
imul
call
and
or
xlat
mov
roll
add
mov
sub
sbb
in
sbb
rolb
dec
outsl
mov
mov
inc
movsl
pop
outsl
xor
jle
adc
push
xchg
push
jb
leave
push
push
jno
xor
xchg
mov
enter
stos
pusha
cmp
movsl
pop
sub
in
stos
lds
addr16
inc
cmp
ljmp
and
incb
insl
mov
xchg
pop
mov
sub
add
imul
orl
test
mov
jno
pop
inc
inc
jg
cmp
inc
jne
cs
jecxz
stc
mov
mov
fsubrl
cltd
mov
fidivrl
nop
or
es
mov
cmp
ret
adc
jbe
fists
and
loope
cli
aad
mov
imul
cmp
repnz
cmp
push
and
mov
pop
mov
fnsave
inc
data16
shlb
clc
stos
pop
out
ja
cmpsb
sub
fcmovnbe
sbb
add
add
fwait
or
jp
mov
daa
sbb
frstor
inc
dec
pop
shrb
popf
inc
movsb
pusha
lret
sbbl
aad
lahf
insl
push
and
push
mov
mov
je
mov
aaa
inc
sbb
jno
nop
sbb
inc
and
sbb
fldenv
xchg
stos
mov
ja
fistps
stc
mov
outsl
ja
jp
or
push
dec
mov
inc
and
jb
lret
notl
enter
call
sub
mov
push
in
sub
pop
mov
cwtl
ret
add
iret
call
aaa
adc
ljmp
and
pop
addb
nop
pushf
fisubl
int
add
loope
pop
mov
in
and
jge
lock
aad
js
sti
dec
iret
xchg
std
inc
lret
cltd
loop
hlt
fisubrs
pop
sbbb
xor
xor
out
add
add
sti
daa
cmpsb
sub
push
lret
roll
repz
add
es
push
repz
mov
sub
rcl
faddl
and
mov
sub
mov
lea
mov
push
push
mov
and
loop
pop
add
fwait
adc
mov
out
daa
adc
das
cvtps2pi
cmp
rorb
jo
jg
push
add
dec
inc
outsb
iret
mov
mov
fldt
mov
dec
xor
out
pop
dec
popa
jl
mov
loopne
xor
mov
out
scas
add
out
loopne
xchg
push
jns
jle
clc
mov
mov
jl
stos
lock
jp
inc
popa
adc
hlt
and
mov
lods
push
outsb
lds
jne
cwtl
clc
test
out
idivb
dec
ss
and
and
icebp
int
cmpsb
aaa
or
or
xchg
aas
shl
xchg
lods
into
pop
scas
gs
xor
shll
out
in
xchg
rcrl
jb
dec
cmpl
aad
mov
xor
les
jmp
imul
xchg
popf
lock
and
jmp
pop
rclb
jp
roll
popw
sbb
cmp
leave
pop
add
xchg
gs
addr16
popa
push
sbb
pop
das
rorb
inc
jne
pushf
cmovg
sbb
imul
in
xlat
sub
lret
in
or
cmp
imul
cmp
jp
jno
js
stos
icebp
fistps
mov
jmp
mov
pop
iret
xor
stos
xchg
sbb
mov
push
mov
icebp
dec
push
or
mov
jnp
in
dec
pop
popf
mov
cmp
stos
loopne
int
push
pushf
mov
xor
mov
add
or
mov
pop
js
xor
and
sahf
arpl
push
mov
or
fildl
add
pop
inc
je
daa
repz
push
dec
xchg
cmpsl
add
clc
mov
in
hlt
push
test
in
adc
in
push
ja
cmpsl
mov
sbb
sub
cmpsl
mov
aaa
cmpsl
iret
faddl
in
in
mov
sbb
hlt
shll
cld
jno
adc
aas
jmp
inc
stos
xor
sub
and
jle
push
adc
daa
in
ljmp
mov
cmpl
push
adc
push
nop
mov
imull
out
push
shrb
xchg
xor
out
loop
dec
sbb
dec
xlat
jns
addr16
xchg
adc
aad
jae
mov
cmp
push
push
xor
stos
data16
fprem
rcrb
xor
pop
push
cwtl
mov
pop
stc
pop
sbb
adcb
adc
testl
dec
push
lods
inc
sub
xor
dec
in
xchg
mov
fmulp
pop
push
jge
jg
jae
inc
out
cwtl
push
mov
add
xor
adc
mov
insl
popa
xchg
add
arpl
xchg
out
xor
mov
or
xor
mov
adc
mov
fwait
push
or
dec
sahf
sub
xorb
jne
rorl
add
loope
sub
add
sarl
or
jne
jmp
lret
inc
sub
cmp
mov
sub
orb
mov
push
push
jge
add
insl
jecxz
movsb
inc
imul
xor
sti
or
fbld
fmul
pop
mov
xlat
xor
mov
inc
or
lret
dec
push
pushf
pop
xchg
fidivrs
ja
sti
xor
imul
push
push
jg
stos
jl
ret
xor
jl
or
sub
in
dec
or
addb
pop
repz
xchg
test
je
add
ds
loop
xchg
adc
jne
in
jmp
aas
jb
xor
xchg
pop
xchg
pushf
dec
push
or
je
fs
out
mov
and
inc
mov
xchg
es
mov
insb
push
popa
jl
ljmp
push
cli
push
fucomip
iret
jb
ja
lods
push
mov
int
into
mov
loop
dec
sub
inc
iret
mov
pmaxub
mov
sub
push
cmp
icebp
xor
hlt
mov
leave
cmpsb
jmp
adc
jle
sub
inc
or
inc
imul
xchg
mov
xor
push
or
inc
xor
movsl
mov
stos
xchg
adc
jbe
dec
sbb
jne
fcompp
pop
cmp
mov
test
mov
in
mov
lds
mov
pop
jb
insb
mov
pop
daa
ja
fs
cmc
stos
pop
jno
int3
test
lods
mov
add
fnstsw
push
sub
inc
sbb
jo
repnz
adc
dec
cmpl
sub
imul
loope
inc
push
data16
or
repz
jne
cmp
jb
in
gs
sbb
mov
xchg
adc
sbb
aas
enter
sbb
call
imul
mov
stos
jo
push
pop
jmp
push
sti
jl
jb
leave
jb
mov
fdivs
push
lret
outsb
stos
push
or
fucom
popf
xchg
fwait
stc
pop
stos
mov
xor
mov
xor
adc
imul
lock
jmp
movsl
daa
ja
lds
mov
jb
sub
fsubp
inc
insl
scas
loop
push
add
mov
lds
xlat
fwait
stos
cmp
mov
iret
stc
mov
shr
mov
insb
cmp
xor
lock
js
push
sub
mov
xchg
std
adc
push
daa
orl
aaa
std
in
in
pop
imul
cmp
pop
jmp
lds
repnz
in
jo
daa
xchg
scas
jge
add
aas
loop
fwait
mov
js
cwtl
into
cwtl
mov
cmp
and
sbb
icebp
insb
filds
xorl
rcll
push
fs
mov
repnz
movsb
mov
fsubrl
inc
sub
xchg
mov
dec
mov
cli
sti
icebp
stos
adc
outsb
mov
sub
lods
scas
fdivl
stc
test
stos
pop
add
or
mov
fstl
ja
push
push
add
push
outsb
mov
sub
ret
jmp
pop
push
and
inc
or
lea
pop
out
out
pop
shll
loop
fs
mov
pop
adc
cmpb
test
div
jb
add
and
in
jae
and
dec
lds
pop
mov
mov
pop
fimuls
sub
xor
adc
pop
mul
inc
fsubs
test
mov
jge
movsb
cmp
xchg
mov
jno
pop
ljmp
inc
das
outsl
call
rorl
in
jp
cltd
arpl
incl
scas
test
rorb
dec
insb
mov
or
or
jo
and
or
mov
mov
mull
das
cmc
adc
sbbb
out
cwtl
iret
bound
movsl
out
sbb
movsb
into
fmuls
fisttpl
dec
mov
incb
mov
daa
jns
outsl
jge
pop
cli
xchg
loop
push
fwait
out
jae
push
push
mov
xchg
mov
jle
mov
inc
nop
data16
mov
mov
in
mov
dec
aad
mov
outsl
arpl
lock
ret
jecxz
mov
pop
ficompl
mov
adc
inc
push
fwait
mov
sub
outsl
sbb
push
loope
and
xlat
je
and
mov
xchg
es
fisttpl
mov
iret
dec
pushf
aam
xor
cli
outsl
sbbb
int3
add
jg
into
imul
fdivs
push
sbb
push
lock
ret
and
inc
mov
movsb
bound
jmp
mov
lahf
out
and
push
jg
outsl
inc
pop
cmp
jle
shll
and
add
add
xchg
scas
sbb
xor
lcall
pop
xchg
bound
dec
push
xchg
fisubrs
dec
test
xor
lret
mov
sub
sbb
lahf
int
xchg
fwait
jnp
fs
and
push
int3
push
jg
push
cmp
pusha
cltd
pop
fdiv
pop
pusha
dec
data16
std
push
adc
dec
mov
out
in
test
in
hlt
pop
xchg
xchg
jno
mov
mov
bound
cmpsl
push
std
nop
and
andl
andl
cwtl
dec
movl
fldenv
xchg
or
jecxz
sub
jmp
es
pop
mov
mov
xchg
test
inc
out
das
mov
fwait
pushf
into
adc
idivb
lods
pushl
mov
pop
or
or
or
movsb
mov
xchg
pop
mov
xor
mov
and
inc
mov
dec
pop
sbb
mov
xor
imul
icebp
or
fwait
inc
dec
push
cmpsb
xor
inc
jb
loop
ret
push
mov
pop
pop
and
ja
mov
inc
dec
mov
fwait
mov
imull
je
cmp
rcrb
push
aad
enter
stc
loop
xlat
jle
test
lret
fistps
fs
cmp
adc
jb
mov
and
sbb
xchg
testb
test
stos
hlt
shl
mov
jmp
jbe
cmp
sbbb
inc
sub
mov
or
test
xchg
pop
jp
cmc
cmpsb
mov
js
pop
jae
and
inc
jp
mov
pop
stos
cmp
xor
mov
lcall
fstps
cwtl
mov
jl
stos
outsl
in
or
inc
clc
xor
stos
popf
andb
pop
and
mov
aas
aaa
clc
dec
pop
shl
push
mov
sbb
stos
int3
ret
and
fisubl
jecxz
pop
sub
data16
jmp
mov
cmc
adc
mov
hlt
jmp
mov
cwtl
and
xchg
push
push
out
jle
mov
outsl
add
cmc
std
aaa
and
inc
sub
push
push
stos
fcomp
daa
lret
scas
push
cmp
adc
arpl
pop
out
lret
and
scas
cld
push
leave
shlb
cld
mov
dec
mov
adc
and
clc
pushf
sbbl
cmp
push
inc
mov
xlat
aad
mov
inc
mov
push
and
adc
fmuls
clc
push
fimuls
cld
mov
shll
icebp
push
stc
sub
mov
cmpsb
sbb
sub
add
push
ljmp
cmp
cli
xchg
ja
jecxz
lds
stos
out
adcl
ret
pop
inc
sub
int
jl
xchg
or
sbb
or
adc
bound
into
roll
cwtl
xchg
and
dec
xchg
adc
dec
cmp
mov
xchg
popf
mov
jmp
scas
inc
clc
add
push
dec
shrl
je
test
les
movsb
xchg
mov
mov
sbb
mov
lcall
insb
fdivs
push
lock
push
inc
dec
sbb
xor
out
cmp
inc
movsl
push
dec
sbbb
out
push
inc
sbb
xor
sub
xchg
or
fldenv
lcall
std
jbe
inc
lret
dec
jbe
dec
ret
loopne
and
dec
pop
jle
in
jl
imul
xor
mov
loop
enter
sbb
add
push
inc
pop
xor
inc
jle
rcll
mov
fisttpl
jae
pusha
pushf
in
add
xchg
cltd
inc
arpl
rcr
xchg
fisttps
shl
mov
in
xchg
xchg
lret
shl
add
icebp
cmpsb
sbb
insb
mov
lock
lahf
mov
fidivrs
rorl
push
int
xchg
jnp
sbb
stos
sub
mov
pusha
lea
pushf
scas
mov
mov
sbb
std
jo
aam
mov
inc
mov
lods
loope
out
stc
jg
xchg
repz
fidivl
pop
jmp
int
push
hlt
out
xor
out
sbb
push
js
sbb
inc
mov
fcmovbe
dec
imul
loop
and
es
cmpsl
incb
sbb
mov
rcl
mov
adcl
fdiv
test
xchg
mov
popf
pop
int
cmp
rolb
push
pop
push
std
icebp
or
icebp
push
loope
ss
xor
in
cmpb
pop
nop
or
fldt
mov
or
jl
popf
xchg
ljmp
in
in
add
jl
lea
jge
pop
fld
cmp
out
aam
movsb
mov
xor
add
mov
aas
dec
arpl
cmp
mov
sbb
test
mov
push
scas
add
movsb
jge
pop
xchg
addr16
lock
faddl
xor
push
pusha
or
loopne
pop
and
and
jno
xor
mov
inc
jo
jns
pop
inc
mov
cmpsb
fwait
jle
std
aas
popa
push
and
dec
in
cmp
das
ds
mov
dec
jb
lret
mov
sub
cmp
and
inc
ss
sahf
stos
jge
mov
mov
pop
jae
sbb
incb
mov
cld
ljmp
pop
mov
mov
push
subb
ljmp
mov
push
mov
ss
je
ja
cmp
cmp
cmp
sbb
repnz
ret
mov
push
dec
shll
cmpb
nop
aaa
jg
loope
les
sahf
hlt
insb
out
inc
add
cs
adcl
mov
sub
cmp
cld
jg
fs
addr16
add
or
cmpsl
mov
repz
and
pop
mov
nop
loope
pop
aas
mov
in
dec
push
push
stos
pusha
mov
scas
xor
in
pop
adc
cmp
or
aas
push
mov
stos
xchg
cmpb
adcb
sti
cmp
cli
negb
xchg
pop
fnstcw
outsl
imul
xor
es
lods
xor
sbb
push
icebp
repz
in
or
sbb
cli
cwtl
jne
inc
nop
inc
out
outsl
scas
adc
loopne
lds
scas
dec
out
push
sbb
int
and
out
pop
sbb
pop
inc
add
pusha
sub
pop
mov
int3
push
sub
dec
mov
jle
aaa
aam
ja
sbb
pop
je
inc
xchg
fisubl
add
pop
mov
xchg
sahf
mov
sarl
movsl
sbb
fidivrl
sub
xchg
jb
subl
jno
in
mov
ror
inc
push
jl
pop
inc
popa
fnsave
pop
popl
loope
hlt
and
inc
mov
jp
lret
lcall
loop
repnz
add
push
dec
sarl
or
roll
add
pop
ret
mov
outsl
pushf
mov
cmp
add
test
pushf
sbb
xor
bound
sub
pop
and
aaa
gs
and
sbb
jecxz
cmp
xchg
dec
jnp
xchg
jg
ds
cmp
data16
lret
arpl
f2xm1
and
inc
adcb
inc
xchg
jnp
jb
sbb
dec
into
sub
xor
dec
jecxz
sbb
push
mov
push
mov
push
dec
daa
mov
or
fadds
addb
cmp
test
or
lods
imul
xorl
int3
xchg
imull
fildl
mov
sub
loopne
mov
pop
ret
lret
sbb
icebp
push
pop
in
loopne
or
inc
fbld
cmp
and
jl
mov
mov
lds
mov
cmp
out
cmp
cmc
lock
dec
mov
push
outsl
fldl
int
rcrl
inc
xchg
rcl
insl
iret
adc
cmp
add
inc
pop
fwait
shll
lods
pop
out
adc
ret
push
bound
or
rcl
mov
jle
loope
nop
adc
into
inc
sbb
call
sub
push
lret
dec
fs
sub
cltd
lea
sbb
inc
lcall
and
dec
repz
mov
cmc
pop
ret
lcall
mov
gs
arpl
jl
push
xchg
lcall
mov
cmp
mov
push
xchg
jo
mov
test
out
push
sub
adc
cmpsb
hlt
jno
sbb
out
imul
or
inc
adc
test
sbb
sahf
sub
ds
into
jge
jle
and
and
xor
or
into
insb
adcl
shrb
add
in
cs
adc
adc
xor
clc
inc
pop
dec
sbb
mov
mov
xchg
inc
add
jbe
xchg
mov
sub
lods
adc
jmp
push
fwait
or
stos
aaa
inc
fidivrs
sbbb
adc
popa
subb
cmpsl
dec
dec
cmc
push
xor
lret
jmp
jb
hlt
jnp
or
mov
outsb
mov
push
add
mov
insl
jno
xor
std
clc
pop
sahf
xchg
das
mov
call
pushf
aam
sub
fldcw
mov
xor
sub
ret
dec
mov
outsb
jp
pushw
cmp
into
pop
mov
out
xchg
sub
mov
gs
in
xchg
iret
dec
addr16
or
loope
aad
lret
sub
cmovg
cltd
cmc
jg
lret
test
and
mov
out
cmp
pop
popf
jmp
xor
pop
fistpl
push
movsb
mov
pop
add
cmpsl
fcmove
sbb
jnp
aas
add
dec
and
fldcw
dec
outsl
jbe
xacquire
cmp
jo
daa
imul
dec
pop
icebp
cwtl
in
leave
xor
testb
pop
sub
hlt
or
in
ljmp
ficoml
outsb
outsl
sahf
jmp
pop
or
push
dec
pop
in
incl
dec
sub
insb
add
or
mov
dec
sub
into
pop
add
fwait
push
adc
xor
jecxz
mov
je
rorl
fnstenv
das
sub
xorl
cmp
shr
pop
negl
in
jp
push
inc
mov
dec
fcomp
std
test
fwait
out
inc
aaa
fcmovb
sub
test
jmp
xchg
imul
jl
push
ret
sbb
jb
push
adc
jb
adc
stc
int
mov
arpl
xchg
js
fiaddl
and
jno
js
leave
mov
and
mov
mov
and
shlb
lret
dec
sub
stc
push
xchg
sahf
mov
lods
add
daa
xor
xorb
shll
pop
jmp
lret
jg
xor
push
mov
shrb
add
dec
pop
lcall
cmp
in
or
notl
into
mov
les
ret
mov
fadds
insb
ljmp
jno
leave
and
out
in
sub
xchg
out
shrb
loope
mov
mov
dec
add
stc
stc
mov
fildl
push
icebp
in
xchg
sbb
pop
ror
or
jns
push
jg
xor
and
cs
jmp
gs
out
scas
push
lret
in
movsb
inc
popf
xor
push
pop
pop
fs
lock
repnz
mov
jg
mov
push
pushf
and
adc
mov
inc
inc
xor
hlt
sbb
movsl
xchg
aam
fwait
cmp
das
adc
pop
stc
testb
les
sub
mov
ds
nop
ss
xor
popf
xchg
arpl
xor
test
or
adc
adc
and
mov
addr16
cmpsb
daa
and
and
add
into
jp
out
pusha
inc
pop
mov
icebp
mov
popf
dec
repz
ret
es
pop
mov
mov
outsb
dec
mov
movl
xchg
push
mull
ret
sub
mov
fists
gs
jbe
aaa
js
cmpsb
and
or
inc
fdivr
scas
aam
xor
fsubs
mov
or
sub
pop
cmp
cmpsl
stos
push
jmp
pop
addr16
test
or
call
enter
sbb
in
fcmovb
in
ret
ret
popa
xchg
je
mov
clc
mov
xchg
xchg
add
test
shrb
dec
fdivr
repnz
xor
in
xor
xchg
mov
sub
in
in
popa
mov
jne
fbstp
sub
cli
dec
repnz
fsts
sub
pop
inc
mov
jbe
mov
or
in
in
jno
mov
es
jmp
xchg
jno
mov
mov
in
les
dec
out
push
mov
sbb
inc
test
fdivrl
out
out
hlt
sahf
adc
jns
ret
mov
fwait
push
push
stc
pushf
mov
loop
daa
xchg
jb
movsl
ja
xlat
das
insl
pop
inc
pop
out
xchg
push
inc
mov
cli
jg
mov
or
mov
sbb
xor
outsl
xchg
sub
mov
sub
out
push
jno
push
fidivrs
push
aas
mov
pusha
daa
cmc
pusha
cmpsl
insl
fstl
add
aam
in
gs
push
aam
mov
and
push
adc
mov
add
push
xchg
jns
jle
gs
add
inc
std
dec
sub
sub
xor
xor
daa
stos
sbb
rorb
jmp
mov
shll
into
xchg
dec
jle
clc
es
xor
dec
in
mov
jle
jg
adcl
mov
fnsave
in
ds
mov
testb
sub
xchg
fsubrl
push
daa
fcomi
sub
mov
pop
adc
sub
inc
pop
insb
dec
mov
imul
pushf
mov
xchg
sahf
mov
ret
xlat
mov
call
sarl
hlt
js
push
or
or
inc
xchg
cmp
gs
in
daa
aas
and
sbb
lds
pop
mov
inc
rorl
leave
pop
push
imul
mov
cld
int3
je
xor
inc
in
cmp
xor
mull
repnz
paddusb
jecxz
rclb
flds
js
sbb
cmc
pop
add
imul
mov
mov
mov
mov
and
xchg
xchg
lods
dec
pop
jbe
push
aam
dec
push
sbb
out
xor
sub
fadds
xchg
push
hlt
lock
cmc
mov
pop
mov
aaa
add
or
aas
hlt
rclb
push
shlb
rolb
pop
sub
push
jo
lock
aaa
mov
xor
push
xchg
fsts
inc
jg
add
pop
int3
mov
lock
sbb
lcall
stos
jecxz,pn
loop
outsl
fstl
jg
xchg
test
aaa
inc
dec
cmpsb
aaa
aam
add
mov
fnstenv
and
add
arpl
clc
outsb
jns
ficoms
mov
repz
push
clc
outsb
sub
fisubs
add
pop
in
cltd
fcoml
inc
icebp
rorl
lcall
test
jns
and
jnp
mulb
sti
hlt
call
out
mov
and
in
mov
mov
dec
test
xor
in
movsl
push
jb
outsl
mov
rcrl
xchg
push
mov
rcrb
push
inc
mov
mov
cwtl
jo
fldcw
mov
or
cltd
loopne
jb
pop
or
add
cld
ljmp
gs
sbb
xchg
test
jge
sub
sbb
test
out
or
je
call
jns
fmuls
mov
mov
imul
add
hlt
iret
push
test
test
lock
jge
xchg
dec
add
sub
in
test
insl
xchg
jne
mov
push
or
pop
cmp
sub
and
cmc
sub
shll
inc
mov
daa
pop
fcoms
ret
jecxz
adc
xchg
cli
insb
or
dec
enter
in
outsb
arpl
add
mov
int3
sub
mov
inc
sub
clc
aam
push
jecxz
popf
shlb
mov
mov
dec
test
pop
stos
movl
or
es
mov
int
bound
jge
pushf
cmp
push
xor
inc
lret
xchg
jg
test
pop
call
push
jmp
addr16
outsl
fldt
or
sub
neg
lods
lret
fdivrs
imul
mov
loopne
lock
movsb
mov
divb
jge
mov
leave
rorb
lret
subb
xor
mov
out
hlt
rorl
push
icebp
xchg
sub
xchg
inc
inc
loop
fnsave
movsl
into
scas
imul
xor
scas
addr16
mov
xlat
mov
push
in
inc
dec
push
jo
jmp
je
mov
aas
mov
jle
sub
dec
cli
jecxz
jno
cs
mov
sub
pop
jl
leave
mov
sub
adc
dec
lcall
push
daa
jl
add
ret
cmp
mov
dec
in
sub
sti
sbb
jnp
add
xor
sbb
stc
imul
icebp
les
and
repnz
clc
mov
xchg
jge
cmp
mov
enter
imul
jecxz
cmp
faddp
mov
ret
jge
pop
sbb
sete
rcrl
cli
mov
ds
mov
out
test
mov
push
loope
lods
es
outsl
fdivrl
or
push
test
insb
ret
and
stc
cli
rol
and
rclb
sub
dec
lcall
dec
mov
xchg
pop
sub
lret
dec
cs
in
mov
cmp
scas
or
xchg
iret
push
and
icebp
pusha
out
and
loop
and
insb
push
xchg
mov
and
lahf
cmc
insb
es
mov
popa
and
aad
adc
addl
push
mov
enter
inc
iret
jle
pop
in
dec
lods
in
mov
enter
adc
mov
pop
aaa
dec
cmp
js
pop
aas
mov
push
roll
add
roll
icebp
in
call
arpl
mov
dec
arpl
push
inc
ret
or
add
cmp
lahf
insb
mov
sarb
icebp
add
lds
add
mov
sbb
fwait
dec
add
lods
add
in
inc
outsb
cmp
pop
jmp
push
and
or
rolb
sub
jns
dec
xchg
insw
mov
mull
push
stos
adc
lock
mov
lahf
std
icebp
popf
xchg
and
adc
lock
cmp
mov
decb
popf
insl
xor
xchg
stos
mov
shlb
loope
mov
aam
sub
std
xor
into
add
pop
test
shll
jno
out
loope
lret
cld
movsb
sbb
dec
lods
pop
ss
mov
mov
dec
adc
vcmpord_sss
pop
mov
test
mov
movsl
shlb
and
adc
pop
cmpsb
mov
cmp
sub
push
push
stos
shlb
stos
mov
pop
sbb
push
call
inc
aam
bswap
mov
test
push
jno
aas
add
cmp
xchg
jno
xor
add
push
lret
sub
lds
mov
fstl
lahf
and
stc
or
sbb
pop
sti
lcall
movsl
ret
sub
dec
cmpl
push
aas
jge
and
lods
data16
cmpsb
jb
in
or
jp
cld
mov
dec
mov
dec
cltd
xor
pop
pop
lret
mov
cwtl
inc
push
gs
ror
add
jmp
nop
mov
int
es
mov
push
and
sub
fisttpl
lods
in
lret
mov
iret
sbb
pop
pushf
dec
in
imul
xor
push
xchg
insb
insl
pop
loop
scas
cmp
pop
frstor
jbe
lods
adcb
ficomps
ja
mov
in
shlb
lea
mov
sub
push
push
jns
cwtl
jae
outsl
and
xor
out
scas
outsb
xlat
adc
ljmp
js
lods
mov
dec
js
mov
mov
lock
in
jge
les
or
sub
xor
inc
and
adc
cmp
aas
aad
xchg
nop
incb
cmp
dec
sti
cmc
push
stos
mov
jmp
xor
xlat
jp
cwtl
into
adc
out
pop
sub
scas
loopne
jecxz
sub
into
xchg
mov
xchg
xchg
std
bound
shll
outsb
dec
push
cmpsl
xor
pushf
ficoms
enter
add
inc
mov
and
outsl
cwtl
fsubp
inc
xchg
out
mov
and
xchg
fcompl
jns
sbb
pop
cltd
add
push
adc
insl
cmp
add
jl
mov
adcl
jbe
iret
xchg
loope
scas
ss
das
sub
decl
mov
lret
or
clc
jbe
sub
adc
mov
adc
insl
mov
xchg
jcxz
pop
sti
fwait
cli
test
sub
jae
rcll
mov
cmp
jae
fdivrs
xchg
fildll
jno
push
xlat
das
sbb
push
imul
push
movsb
xor
dec
xchg
aam
flds
popa
into
jo
lods
flds
pop
push
inc
leave
fwait
aad
cmp
std
xor
leave
sarb
fsubrs
clc
pop
adc
sbb
mov
outsb
cld
jle
repz
icebp
cltd
hlt
mov
mov
lods
mov
je
and
adc
mov
das
or
add
fisttps
xor
in
jmp
aam
sahf
jp
or
fiaddl
mulb
jp
adc
cmp
stos
shll
test
aaa
xchg
jecxz
dec
pop
xchg
call
mov
cmc
fcoms
adc
repz
jge
add
inc
inc
jecxz
sarb
xor
pop
sbb
add
jns
xor
daa
scas
lds
ficompl
popa
xor
adc
adc
shrl
adc
xor
insl
mov
sub
dec
dec
push
mov
or
scas
lods
cmpsl
je
add
in
aam
mov
pop
iret
dec
pushf
sub
dec
xchg
dec
sub
call
lds
push
repz
in
ljmp
sbb
mov
add
les
fldenv
mov
jmp
dec
fistpl
push
mov
mov
add
mov
movb
repz
sbb
daa
aam
xchg
mov
insb
loope
cmp
js
scas
cli
xchg
lds
loopne
outsl
sti
dec
and
lods
mul
add
mulb
lahf
test
sub
xorl
nop
push
popa
push
arpl
loope
push
xchg
mov
jmp
insb
inc
push
xchg
in
mov
daa
mov
lods
jbe
xor
jbe
andb
or
adc
loope
frstor
cmpsb
sbb
push
or
sub
das
cmpb
jl
sbb
out
push
jmp
icebp
push
mov
insb
sbb
cmp
mov
inc
and
sub
fisttps
jmp
and
jb
out
and
aas
data16
xchg
adc
push
shr
and
imul
jae
push
jmp
cmp
mov
sbb
in
in
mov
scas
mov
ficoml
stc
or
shll
sahf
out
sbb
mov
push
or
or
xchg
xchg
inc
js
scas
repnz
sub
fwait
sti
cmp
dec
dec
or
cwtl
icebp
jl
into
and
cmpsl
push
scas
mov
sub
jnp
cmp
mov
and
sti
je
int3
lret
mov
lret
sarb
out
pop
xorb
incl
xchg
aam
inc
fstp
mov
sub
sbb
sbb
mov
xor
dec
fstl
jg
icebp
dec
bound
movsl
pop
or
nop
cmp
xchg
pop
sub
pop
xchg
rcrl
dec
das
imul
repz
loop
pop
cs
dec
add
mov
push
imul
lods
push
sbb
cs
into
dec
scas
pop
arpl
cs
adc
xor
ds
iret
cli
cmp
mov
sbb
sahf
filds
leave
lea
jnp
push
sbb
mov
mov
and
mul
mov
ret
fidivs
jb
popa
insb
push
jp
add
jb
js
adc
das
sub
inc
gs
call
and
popa
loop
pop
aam
push
sbb
test
xlat
add
adc
dec
jb
cmc
sbb
mov
cmp
mov
pop
or
jge
xchg
pop
fisubrs
lds
popa
or
add
dec
lcall
push
outsl
xor
mov
or
adc
mov
sub
fildll
test
addr16
add
dec
xchg
mov
or
lock
js
jb
jb
int3
or
push
popl
sub
and
xchg
xchg
nop
shll
and
xchg
fmull
cltd
icebp
pop
inc
rcrl
mov
popf
dec
mov
mov
into
int
mov
dec
scas
jnp
add
stos
ja
ljmp
jmp
imul
jmp
call
pop
pop
mov
xor
in
mov
clc
mov
testb
movsb
pop
imulb
adc
testl
das
repz
xchg
fisubrs
out
jns
data16
mov
sti
jnp
xchg
jge
push
cmp
cmpsb
mov
sbb
dec
fwait
cmp
int
shll
sbb
add
inc
inc
mov
test
popa
inc
pop
adc
dec
push
cmp
inc
fildll
jmp
pop
rcr
sub
imul
xchg
loope
adc
stos
loope
repz
add
cmc
cmc
and
jl
rcrl
mov
hlt
jo
rorl
push
jbe
adc
shrl
clc
clc
xor
inc
mov
sbb
sub
iret
shl
rcrb
popf
xor
sub
dec
aas
jo
popf
push
xor
pop
add
pop
adc
enter
test
sbb
mul
add
roll
xchg
xor
int
push
or
test
cs
sub
push
bnd
aas
mov
mov
cmp
sub
sahf
lret
sbb
shrl
push
ja
testb
clc
test
dec
repz
jecxz
dec
jne
ds
pop
fs
fisubrs
push
das
lods
xchg
mov
ds
jae
insb
andb
pop
lcall
jb
repnz
orb
dec
loop
xchg
test
ret
mov
sti
cltd
hlt
std
in
sub
cmp
jmp
popa
mov
pop
cmp
imul
jb
sbb
in
mov
addr16
mov
add
sub
add
fsubs
imul
mov
fbstp
imul
xchg
in
and
adc
sti
jno
arpl
dec
mov
inc
pop
sub
and
mov
or
mov
xchg
pop
push
rcr
push
dec
fisubrs
leave
in
mov
or
cld
arpl
mov
or
js
jbe
mov
cld
fs
gs
xor
xchg
mov
cli
cmpsl
insl
cltd
pop
xor
add
int3
add
lock
stc
iret
fstps
xlat
mov
and
fcmovnb
sbb
call
sahf
xchg
mov
sub
dec
daa
loop
pop
push
out
rorb
adc
adc
mov
addb
sbb
cmp
xorl
or
add
repnz
cltd
inc
shrl
jae
mov
push
mov
xor
mov
test
dec
fcmovu
and
cs
fdivrs
dec
inc
xchg
push
dec
mov
sahf
lcall
sub
stc
pop
movsb
icebp
in
pop
and
frstor
add
int3
popf
push
xorl
pop
mov
push
popf
cmovae
inc
push
dec
push
push
pop
xorb
mov
sbb
sbb
sbb
and
fnstsw
mov
sbb
inc
dec
in
sbb
jg
push
adc
in
push
fsts
mov
ds
loop
mov
push
hlt
jecxz
jno
mulb
call
ficoms
or
imul
ret
cmp
movsb
push
bound
and
icebp
in
push
dec
dec
aad
daa
mov
mov
jno
jp
cld
inc
js
outsb
sub
lret
mov
loop
mov
adc
pop
mov
in
mov
sti
nop
or
movsb
das
sub
stos
loop
sbb
sub
dec
push
jns
test
in
lods
insb
pop
in
orl
rcll
sub
sub
aam
clc
xlat
mov
dec
push
daa
bound
xchg
inc
fmuls
mov
mov
and
rolb
scas
out
insl
in
sahf
push
mov
mov
dec
mov
push
xchg
shlb
rcrl
lods
push
xor
cmp
dec
imul
jno
jecxz
cmp
mov
ss
popf
fwait
adcl
dec
lea
fisubl
mov
add
add
or
int
cli
stos
sub
inc
mov
jl
inc
add
mov
fistpll
sbb
int3
cmc
fidivs
mov
xor
jo
jo
fwait
mov
sub
mov
jns
sahf
xchg
int3
jae
arpl
dec
int
jae
and
add
sahf
push
fwait
scas
or
mov
shll
xchg
xchg
mov
imul
out
jl
es
inc
dec
test
pop
push
mov
out
jmp
inc
dec
xor
cmp
ljmp
outsl
call
fidivrs
mov
dec
push
adc
push
mov
repnz
jl
push
js
lea
mov
pop
dec
dec
in
add
mov
mov
push
xchg
scas
mov
mov
fisubs
mov
call
or
in
sahf
mov
in
outsb
push
jb
jb
inc
cmpsb
stos
xchg
mov
push
push
aam
insb
mov
imul
or
adc
dec
xchg
fistl
sbb
dec
cltd
in
push
stos
rcll
cld
push
pop
icebp
subb
mov
je
repnz
inc
aam
xor
scas
std
add
cmc
add
dec
je
mov
scas
cmp
faddp
hlt
cmp
repnz
arpl
mov
pop
test
daa
jecxz
push
pop
mov
cmp
push
fs
push
adc
pop
outsb
mov
jbe
int
daa
icebp
in
cmc
mov
adc
loope
or
hlt
xchg
int3
stc
and
dec
std
mov
jle
or
xchg
inc
cmpsb
cmp
dec
sub
pushf
mov
rcll
out
in
cli
fisttpl
mov
pop
xchg
jns
es
cmp
cltd
mov
das
dec
cmp
or
inc
insl
cmc
pop
sbb
jg
es
mov
jb
ficoms
fwait
pop
in
add
dec
lcall
push
add
adc
adc
xor
leave
or
ss
jae
push
test
cs
rcrb
aad
xchg
jp
pop
nop
sub
sbb
lods
addl
stos
xor
and
inc
rcll
in
out
push
mov
adc
mov
or
push
sub
jle
lcall
sub
mov
adc
es
aam
ret
adc
add
pop
cmove
cmp
xchg
lret
pop
adcb
pop
arpl
sub
push
ja
lahf
sbb
push
aam
fucomp
lock
dec
pushf
dec
movsl
roll
hlt
icebp
in
jmp
inc
mov
out
bound
jg
aaa
imul
dec
mov
cmp
fidivrl
lahf
das
ja
fnstenv
imul
shl
cli
lds
jp,pt
lret
jge
and
dec
mov
adc
mov
or
inc
push
adc
cmc
push
fidivs
sbb
sub
fwait
push
fcmovnu
dec
dec
mov
jns
push
pop
ss
lds
je
mov
xor
pop
hlt
xlat
push
lahf
mov
jns
mov
xchg
pusha
mov
push
fldl
jbe
xchg
pop
jge
mov
mov
ds
and
push
les
stos
aad
dec
daa
mov
cwtl
scas
jns
pop
hlt
and
dec
push
push
fbstp
mov
fbstp
fdiv
push
jne
and
add
movsb
xchg
mul
push
fdiv
xor
mov
jecxz
and
dec
pop
sub
cmp
xchg
in
lret
std
add
test
in
mov
or
push
pop
in
push
mov
outsb
cmpsl
std
movsl
pop
scas
lods
add
cmp
imul
scas
mov
enter
fiaddl
aaa
arpl
loopne
xchg
js
push
shlb
inc
push
cli
xor
jno
xor
outsl
aam
addr16
mov
stos
dec
jb
xchg
jle
ljmp
or
int3
imul
sbb
mov
xor
jmp
das
sbb
sub
mov
loope
mov
sbb
shll
pop
mov
jl
or
inc
das
cld
dec
scas
bound
gs
jbe
xchg
shl
fmull
lret
add
repnz
mov
test
jecxz
out
mov
divb
lods
jb
mov
jno
pop
dec
hlt
push
shrl
and
push
loope
mov
and
lret
ja
ffree
jg
sbb
imul
add
aaa
pop
cmp
push
inc
ficoml
add
popa
aaa
popa
lods
jbe
iret
and
insl
popf
sub
ficoms
dec
lcall
repz
mov
and
ficoms
gs
dec
jnp
xor
mov
imul
int
and
cwtl
jo
insl
outsb
or
cmp
jle,pn
js
xchg
inc
cld
aas
inc
fisttpl
mov
push
add
test
daa
lods
stos
fs
test
mov
and
jmp
xchg
cmp
aaa
xchg
setnp
addr16
inc
sub
js
and
fisttps
add
cmp
sti
add
popa
aaa
ficompl
addl
or
or
aas
sahf
rcll
les
cmpsb
xchg
or
jnp
lret
adc
test
inc
subl
scas
stos
push
fs
loopne
push
das
xor
test
mov
push
push
idivb
out
jp
mov
shl
xor
test
mov
sbb
cmpsl
jae
adc
scas
add
lcall
xchg
lret
daa
cmp
add
scas
pop
and
mov
int
cmpsl
je
cmp
xchg
dec
adc
mov
sahf
cmp
arpl
inc
sub
sbb
ds
lea
mov
les
fsubp
scas
sbb
mov
push
push
movsb
int3
mov
cmp
cmpsl
mov
jo
lds
movsb
jno
add
jle
lret
movsl
mov
lcall
mov
lods
rcrb
mov
addr16
scas
jp
jle
pusha
pop
jne
scas
dec
sbb
mov
das
bound
and
clc
andb
add
mov
lods
in
and
pop
ret
fists
mov
pop
popf
xor
ficoml
cltd
adc
or
and
jne
sbb
popa
addr16
push
mov
mov
cmp
fwait
sar
mov
mov
dec
fsubs
mov
int3
gs
out
maskmovq
idivl
mov
mov
in
pop
adc
mov
push
ret
push
sbb
cmpsl
inc
or
fwait
mov
and
jae
test
insl
push
pop
scas
fiaddl
repnz
sarb
arpl
jbe
sub
push
jl
daa
mov
aaa
jge
push
pop
jecxz
mov
popa
mov
xchg
lret
jne
pushf
sti
sub
push
das
in
xlat
add
xor
call
jnp
rcl
adcl
addr16
hlt
pop
repnz
sub
xor
sbb
shr
add
xchg
mov
fisttpl
test
movsb
repnz
movsl
add
pop
cld
fnsave
pop
push
mov
push
or
js
xchg
movsb
rolb
in
add
insl
dec
inc
inc
scas
xchg
mov
sbb
jle
outsb
mov
xchg
test
jg
mov
fmulp
pop
jl
pusha
nop
popa
sub
stos
dec
cltd
ud2
mov
aaa
push
mov
lods
push
push
adcb
test
imul
jnp
iret
in
testb
sbb
jnp
dec
jg
imul
sbb
sbb
push
test
enter
lea
mov
dec
cli
mov
pop
adc
fnstcw
outsb
sub
bound
sarl
mov
add
pop
nop
hlt
ss
aam
xor
std
hlt
dec
out
icebp
sti
in
dec
dec
push
in
loop
pop
xchg
test
jecxz
inc
mov
sbb
enter
shll
xor
add
lea
bound
jmp
mov
mov
aad
and
lret
mov
sbb
push
push
pop
or
aad
movsb
and
test
mul
scas
scas
dec
and
stos
sarl
and
pop
pop
in
push
sbb
mov
dec
mov
fbstp
mov
loopne
rcll
pop
pop
jg
js
negl
je
rcrb
pop
loope
fcmovnb
pop
lret
mov
mov
loop
shlb
fildll
or
std
mov
insb
pusha
in
ja
fistps
out
add
pop
pop
push
cmp
inc
fildll
out
lods
sahf
or
xchg
adc
fst
jmp
cwtl
movsl
pop
cmp
dec
push
arpl
xor
or
add
and
pop
shl
pop
inc
pop
lds
fisubrs
pusha
xchg
sbb
lock
or
bswap
fwait
jno
repnz
cmp
mov
iret
addb
test
and
inc
mov
into
sub
mov
push
mov
mov
inc
fdivrl
inc
sub
imul
and
xchg
bound
leave
xor
pop
dec
dec
push
scas
xor
stos
pop
stos
pop
movsl
push
jecxz
dec
mov
test
imul
lret
bound
and
lcall
hlt
enter
mov
dec
xor
add
jp
xor
xchg
jmp
and
outsb
dec
ret
icebp
sub
aaa
sub
call
push
lahf
addl
fdiv
frstor
loope
and
popf
sbb
lcall
xchg
sub
mov
push
inc
push
in
and
shll
shlb
jle
iret
dec
add
pushf
ret
in
out
and
sub
enter
ficoml
push
int3
mov
iret
insb
xchg
jae
xchg
call
mov
les
popa
and
xchg
mov
cmovbe
dec
cmpsb
adc
lret
jl
mov
or
in
jle
xor
les
clc
and
pop
push
cmp
jnp
xchg
adc
and
xor
and
addb
scas
lds
xor
lods
xor
jg
aam
insl
loop
push
pop
mov
lret
sbb
push
and
movsl
xchg
fbstp
jl
gs
xchg
ss
adc
sub
xchg
je
pop
and
test
frstor
movsl
jae
inc
cmpsl
fidivrl
addr16
loopne
sbb
push
mov
int3
xchg
add
jo
movsl
xorl
push
mov
pusha
mov
mov
mov
imul
shrl
jns
push
push
iret
adc
lcall
ds
lret
aaa
inc
xchg
xchg
push
pop
lods
push
cmp
cmpsb
imul
pop
jns
mov
adc
lcall
stos
loop
mov
inc
data16
cli
in
leave
xchg
fiadds
in
pop
mov
sub
mov
aam
pop
or
push
aaa
xor
or
dec
leave
jecxz
push
addl
sbbb
or
cmp
push
sbb
xor
add
lret
pop
mov
add
lahf
sahf
adc
dec
loope
dec
sbb
sbb
and
adc
cmp
cli
jne
in
adc
mov
push
mov
mov
mov
popf
cld
sbb
xlat
in
test
sbb
mov
mov
adc
out
cmp
out
stos
mov
pop
shlb
xor
aas
dec
mov
ret
push
cmp
inc
les
jb
ss
daa
fsubl
lahf
lcall
mov
pop
divb
xor
push
sti
enter
jge
imull
into
and
jb
adc
sbb
aas
call
xchg
cmp
cmp
loope
and
push
aaa
movsl
negb
jp
cmp
mov
adc
mov
mov
scas
pop
push
fisubl
adc
ds
test
pop
dec
push
inc
dec
or
inc
jecxz
es
rorb
push
xlat
mov
mov
in
lcall
mov
enter
sub
mov
mov
pop
adc
das
and
push
xchg
addr16
pop
daa
pop
mov
pop
bound
push
in
leave
xor
jmp
inc
jb
es
sub
ds
xor
mov
fcom
cld
xchg
imul
cltd
vhaddps
das
mov
xchg
dec
mov
out
pcmpeqd
dec
xor
push
xor
inc
in
js
in
pop
jbe
mov
mov
push
cmp
mov
mov
jge
cmp
shlb
stc
sbb
hlt
pop
mov
cmp
fs
cltd
stc
popf
in
pop
rcl
push
aaa
clc
adcb
lret
pop
add
mov
outsb
cmp
mov
inc
cmc
mov
dec
cmp
xor
adc
dec
nop
sub
gs
in
and
sahf
sub
xchg
inc
rcrb
scas
imul
add
inc
sub
mov
clc
sbb
in
gs
loope
dec
xor
mov
pop
sti
in
mov
int3
arpl
popf
jno
pop
imul
sbb
outsb
add
fldt
mov
in
mov
xchg
pop
rorl
pop
jg
push
pop
xor
into
or
lods
xchg
fbstp
xor
pop
movsl
shlb
cli
pop
jns
push
cmp
dec
sti
inc
std
xchg
jne
pop
pop
out
jae
sbb
in
lcall
sub
mov
pop
dec
sub
xchg
mov
stc
aad
sar
movsl
roll
cs
rolb
inc
dec
cmp
sub
sub
pop
mov
adc
jp
shrl
cmp
arpl
inc
stos
fsubs
jo
insl
bound
dec
fldl
mov
out
pop
inc
xor
jno
cmc
adc
imul
or
int
dec
and
scas
or
xorb
pop
in
loope
jmp
xchg
and
addl
js
inc
movb
jns
ja
and
or
add
and
xchg
sub
ja
dec
pop
lods
xor
cmp
push
lds
fs
fstl
gs
xor
and
das
aam
shrb
mov
jl
jl
dec
mov
dec
jnp
mov
add
mov
cwtl
es
cmp
push
sbb
push
push
pop
push
sbb
mov
int
pusha
scas
lods
not
fcmovnu
in
cmp
add
jmp
push
adc
scas
insb
jle
xchg
dec
push
push
js
cwtl
jbe
sbb
cmp
imull
movsl
loope
fs
sbb
orl
sbb
stos
fiaddl
xor
out
push
in
mov
xor
sub
push
sarl
movl
sub
shrl
pop
pop
pop
popf
cmpsl
add
jnp
std
jp
pushf
mov
lret
pop
xor
pop
xchg
jo
int
popl
call
pop
sub
pop
int3
hlt
pusha
test
pop
arpl
cld
fwait
mov
loope
sbbb
loopne
add
xchg
int3
jmp
xchg
sbb
push
xchg
scas
repz
mov
in
fidivrs
lds
push
inc
cmpsb
dec
pop
inc
sahf
scas
bound
or
inc
in
loop
in
sbb
jb
scas
into
movsl
insb
stos
mov
in
jno
test
cmp
sbb
and
inc
int
je
mov
mov
insb
add
mov
sahf
movsl
xchg
add
out
lahf
mov
jg
clc
mov
sub
xchg
test
xor
daa
add
lock
push
les
and
or
mov
jmp
jbe
sbb
scas
jno
cmp
popf
xor
mov
aam
sbb
cmc
or
sub
pop
ss
pushf
imul
push
dec
mov
in
test
add
pusha
pop
fldt
lods
out
push
sbb
sbb
out
insl
popf
cmp
push
int
mov
mov
inc
push
popf
out
das
mov
inc
add
movsb
popf
xchg
mov
call
cmp
fsubs
xlat
loop
sub
lods
pop
xchg
sbb
cmpsb
sti
cmp
out
shr
js
in
sbb
fmuls
mov
jmp
into
jae
mov
sub
inc
mov
clc
xchg
xor
xchg
pop
push
adc
push
cmc
mov
mov
push
cmovs
rcrb
dec
adc
into
out
aad
xchg
mov
xchg
sti
adc
dec
in
xlat
call
and
data16
mov
loopne
pop
pop
loope
cs
dec
popa
outsb
dec
in
add
test
fcoms
ja
xchg
cmp
je
ret
outsl
test
and
movsb
inc
add
sar
insl
dec
xchg
push
jns,pt
ljmp
pop
cmp
fldt
xor
mov
pop
dec
mov
add
fsts
dec
jno
rcll
sub
jo
inc
insb
jne
sarb
cmp
mov
jne
xchg
shll
pop
dec
scas
pop
or
out
push
jmp
outsl
cli
pop
data16
imul
mov
rorb
ds
pop
add
xor
add
loopne
arpl
ret
cmp
xchg
ja
sub
mov
js
add
mov
sub
lret
inc
push
scas
jle
xor
push
divl
jne
std
lods
adc
inc
push
and
and
sbb
bound
cmp
outsl
out
add
sbb
pop
in
and
pop
mov
enter
inc
es
xchg
ret
ljmp
rolb
scas
jle
cmp
mov
hlt
in
dec
cs
mov
notl
rcl
cwtl
das
xor
ljmp
mov
xchg
add
leave
xor
or
arpl
mov
test
daa
sbb
jg
scas
repz
xor
gs
xor
mov
mov
xchg
popa
xor
imul
mov
test
adc
jle
icebp
and
jo
dec
outsb
outsb
dec
pop
jle
and
lock
loopne
pop
js
roll
and
or
ss
jns,pt
pop
dec
enter
jb
in
push
cmpsl
push
push
dec
aas
add
lods
jno
dec
fnstsw
sub
inc
cs
xchg
pusha
fwait
pop
mov
sub
arpl
jg
xor
mov
loope
push
movsl
sub
add
cltd
gs
cmpsl
fwait
divb
sarb
int3
mov
xorb
inc
pop
dec
sbb
orl
in
lcall
push
mov
imul
arpl
repz
and
aam
push
mul
push
shll
adc
xlat
xor
xchg
std
ret
das
inc
insb
adc
xchg
aaa
fwait
dec
adc
pop
push
push
and
test
push
push
mov
inc
xor
in
fcoms
outsl
ds
mov
or
lahf
cld
in
adc
mov
pop
movsb
push
ret
sar
xchg
jno
xchg
mov
pop
dec
fwait
arpl
dec
int3
sahf
in
repnz
js
dec
fwait
jns
sbb
xchg
aas
ret
test
cmp
icebp
fsubrl
pop
daa
sar
es
dec
outsl
dec
adc
cmpsb
inc
and
and
jns
mov
les
push
stos
xchg
stos
jp,pn
call
or
das
push
pop
mov
dec
loopew,pt
jns
inc
test
cmpsl
fcmovbe
ficoml
and
popf
lret
es
js
sub
into
sub
dec
cltd
js
jae
push
sub
test
mov
add
mov
jecxz
shll
xor
push
push
sbb
addb
imul
jecxz
in
sub
clc
dec
fidivl
hlt
cmp
xchg
int
dec
loop
sbb
sbb
adc
push
mov
mov
and
xor
jb
mov
cli
adc
dec
cmc
mov
in
dec
push
push
addr16
fwait
sbb
xchg
mov
fwait
imul
fidivrl
in
sbb
push
jp
jne
cmpsb
cmpsl
loopne
fistl
pop
dec
into
jno
push
cwtl
rcll
dec
adc
dec
adc
je
jae
js
jno
mov
ret
fists
dec
sub
pusha
repz
aam
clc
lods
inc
or
mov
movsb
daa
mov
pop
dec
sbb
cmpsb
mov
xchg
mov
cmpsl
scas
cmp
mulb
jg
rolb
jecxz
lahf
mov
scas
call
shr
pop
lock
dec
jne
aaa
in
bound
sar
mov
mov
xchg
mov
mov
mov
movsl
sahf
sub
stos
insb
jmp
mov
sub
out
jnp
bound
les
or
mov
xchg
xor
mov
xor
xchg
scas
lcall
mov
xchg
test
into
mov
push
or
sbb
pop
inc
add
inc
outsb
sarl
xchg
shlb
or
cmp
int3
cmpsb
clc
out
jecxz
jbe
test
jmp
pop
mov
mov
insb
arpl
out
dec
adc
push
sub
je
jecxz
loop
cltd
push
inc
movsl
xchg
mov
mov
add
push
cmpsl
mov
or
add
cli
fimull
pop
inc
cmp
cld
push
mov
dec
push
sub
xor
stc
xchg
mov
and
sub
stos
fucomip
mov
xor
iret
xor
fs
outsl
es
mov
pop
sub
imul
pop
movsl
fwait
xlat
mov
sub
jnp
and
cmp
sbb
xchg
pop
data16
and
sahf
xchg
mull
xor
data16
lret
pop
push
gs
daa
push
dec
cmp
xchg
insl
out
inc
ret
in
add
iret
mov
pop
or
pop
pop
cmp
enter
icebp
mov
and
sti
aas
and
mov
orl
sub
loope
mov
cmpsb
xor
or
test
hlt
ss
jb
sbb
andb
insb
cmp
push
adc
bound
data16
pop
loopne
push
cwtl
sub
dec
xchg
and
cld
dec
jne
jg
imul
xchg
ss
mov
jl
mov
ljmp
mov
std
pop
xchg
ret
scas
aas
jb
or
mov
dec
pusha
pop
fwait
shl
and
cmp
sarl
xchg
xchg
notb
int
mov
jmp
cltd
cmp
sub
test
cwtl
pop
pop
and
ljmp
push
cmp
sub
icebp
daa
xchg
mov
fldt
add
cs
and
xchg
adc
sbb
shl
mov
mov
imul
bound
idivb
ret
adc
sbb
inc
lods
mov
or
push
lods
fdiv
mov
std
jno
pop
sub
int3
mov
mov
adc
push
sub
mov
jno
repnz
fnstcw
mov
push
jne
movsb
jecxz
gs
jmp
insl
jmp
cltd
sbb
fimull
ds
jbe
xchg
push
xor
call
sbb
insl
faddp
jnp
enter
ret
xchg
andb
push
dec
lahf
icebp
push
into
gs
lds
jle
xchg
xor
mov
xor
arpl
fbld
dec
shr
cmpsb
cmpsl
sub
adc
xlat
or
inc
cmpl
and
test
mov
mov
xlat
pushl
inc
lods
jge
sub
push
mov
sbb
pop
pushf
loop
popf
jo
or
mov
fstps
mov
fdivp
imul
repz
sub
cmc
mov
sahf
dec
jo
cmpsl
pop
mov
jmp
mov
mov
cmpsb
pop
sbb
cwtl
pusha
cltd
pop
addr16
add
push
cmpb
jecxz
loop
inc
mov
inc
idivl
and
inc
adc
mov
out
or
adc
mov
or
nop
cmpl
ret
xchg
and
xchg
mov
insb
rolb
dec
sahf
scas
pop
ljmp
push
lret
mov
xor
and
pusha
jmp
cmc
cli
xchg
ret
cmp
push
shl
popf
repnz
ficompl
jp
jne
or
sbb
mov
dec
out
jae
cmp
dec
and
ljmp
fs
jnp
mov
clc
lahf
cs
cltd
into
push
xor
ret
mov
adc
push
inc
xchg
xchg
cmpsl
test
mov
sar
adc
hlt
xor
jb
mulb
es
inc
popf
cmp
jns
addr16
and
iret
pusha
fwait
inc
jp
cmpsb
repz
adc
test
lea
mov
cmc
mov
incl
mov
int
pop
mov
and
pop
xchg
mov
lods
cli
cmp
push
js
or
cmc
push
or
push
cli
pxor
add
adc
icebp
mov
add
mov
shlb
sti
mov
ljmp
mov
pusha
loope
dec
mov
fsubrl
pop
push
pop
daa
clc
iret
cmp
fldenv
sbb
sbb
sub
dec
sahf
test
jne
xchg
mov
into
inc
xor
sbb
mov
inc
xchg
push
mov
lods
xchg
je
cwtl
add
pop
bound
add
add
add
test
push
sub
fbstp
iret
xchg
and
fcos
cs
jne
xor
cmp
dec
mov
xchg
or
jno
fs
add
test
ljmp
out
cmc
mov
clc
mov
pop
lret
lods
inc
sbb
lock
or
inc
pop
mov
mov
adc
loop
lods
dec
hlt
cmp
mov
pushl
inc
enterw
cld
or
add
aad
pop
and
mov
int3
stos
mov
add
jl
lret
jo
jl
mov
jns
data16
xor
out
pop
pop
cmp
or
pop
xchg
dec
inc
xchg
out
out
out
in
enter
imul
push
adc
jg
dec
and
dec
test
inc
add
inc
mov
jmp
stos
into
xchg
int3
xor
xor
cmpsb
out
loope
mov
adc
xchg
jne
pusha
xor
ja
mov
push
cmp
xchg
xchg
cmp
xor
adc
inc
sub
pop
call
rcrb
jbe
roll
pop
mov
fsts
or
or
xchg
mov
std
cmpb
and
mov
xchg
leave
dec
mov
xchg
repz
add
cmpsb
adc
or
xchg
jge
loop
nop
js
outsb
mov
das
fldcw
ja
push
xchg
dec
orb
dec
or
xchg
testb
insb
cwtl
or
out
test
jp
add
in
repz
pop
xor
inc
subl
fiadds
sbb
popf
popf
dec
popf
ret
repnz
stos
fwait
xor
lea
loop
roll
call
sub
pop
xor
fisttpl
xlat
ljmp
loop
cs
mov
loop
push
out
mov
sub
popf
and
ss
push
movsl
sub
lret
leave
jl
arpl
push
clc
cld
xlat
sbb
jg
push
ret
pop
jmp
jo
out
js
mov
and
inc
add
rolb
fs
inc
and
or
add
in
push
add
cs
mov
or
and
and
sbb
fs
mov
ret
xor
movsb
out
shll
pop
push
mov
cs
mov
xchg
mov
loope
adc
add
jo
xlat
or
xchg
into
push
icebp
dec
mov
push
xchg
aam
mov
cmp
xlat
mov
xchg
mov
jp
push
fisubrs
pop
jae
outsl
sub
fwait
jmp
mov
dec
xchg
cmpsb
repz
and
sbb
mov
ljmp
fsubrl
gs
scas
push
push
sub
mov
adc
adc
in
sub
scas
push
jne
imull
jb
ljmp
xchg
cmpsb
push
cltd
sahf
mov
stc
sub
pop
imul
ljmp
xchg
mov
cmp
pop
outsl
adc
aas
push
divb
add
mov
ret
and
sub
shll
pusha
adc
xchg
xor
leave
ret
mov
jl
inc
in
rol
ljmp
adc
pop
dec
push
push
cld
xchg
gs
ljmp
xchg
fcomip
out
inc
mov
sahf
or
aad
cmp
rcll
mov
mov
cmp
adcb
and
cltd
test
dec
hlt
mov
xor
xchg
imul
rcll
mov
sub
or
push
mov
ljmp
adc
adc
pcmpgtw
ja
pop
pop
pop
mov
fadds
pop
pusha
nop
testb
sub
int
cmp
mov
inc
pop
xor
xor
out
lods
dec
mov
shrl
imul
pop
mov
add
jae
bound
add
mov
adc
or
jns
nop
in
ret
pop
sbbb
lret
js
scas
cmp
jno
shll
sub
test
insb
jnp
popf
rclb
sub
ret
sub
and
pop
push
stc
addr16
pop
mov
jg
sbb
outsl
mov
sti
or
xchg
repz
sub
sub
cmp
xor
mov
fimuls
or
mov
dec
add
cld
and
fstpt
stos
pop
movl
add
shl
bound
outsb
mov
paddd
testl
js
int
pop
outsl
xlat
mov
fwait
cmp
push
cwtl
mov
push
xlat
in
xchg
repz
jne
push
pop
xchg
rorb
shl
popa
push
es
outsb
xchg
sub
jne
mov
jg
and
pop
fnstsw
fimuls
in
cltd
popa
leave
push
xchg
cmp
dec
out
std
in
int3
enter
call
pop
sbb
push
repnz
arpl
jno
and
sbb
repz
inc
fmuls
jle
sbb
sbb
push
repz
movsb
in
mov
lods
push
add
pop
das
push
shl
inc
cmpsb
jp
lahf
cmp
adc
sbb
mov
dec
sti
cmc
push
mov
pop
leave
cmp
aad
rorl
and
pop
imul
cmp
test
test
pop
or
syscall
adc
and
jl
repnz
scas
xchg
xorl
and
stos
ljmp
xchg
dec
pusha
adc
push
popf
rcrl
inc
sti
mov
xor
or
cld
dec
clc
or
adc
dec
std
out
fcoml
jno
insb
leave
xor
rolb
mov
and
pop
sub
push
xchg
inc
xor
aad
jle
testb
mov
mov
subl
xchg
dec
push
xchg
and
dec
dec
stc
xchg
out
lahf
jne
push
pop
cli
repnz
scas
mov
add
and
movsb
and
js
pop
sbb
fucom
or
gs
mov
scas
imul
sub
xlat
popa
leave
idiv
mov
dec
jne,pt
mov
mov
popa
cs
ja
js
adc
test
adcl
pop
sub
out
pop
fcmovu
inc
rorl
aam
cmp
dec
inc
js
std
sarb
sbb
jae
xlat
ret
push
xchg
inc
jno
mov
imul
sbb
and
mov
sarb
or
test
inc
out
loop
out
cmc
pop
stc
xor
jae
jg
sub
movsl
adc
adc
inc
leave
mov
dec
xchg
addb
push
jecxz
jo
or
bound
push
sub
loope
mov
ljmp
das
push
sub
pop
jl
es
fldt
mov
dec
ret
aaa
and
pusha
and
jg
lods
cmpsl
hlt
stos
adc
push
daa
lret
cs
push
push
xor
loope
ljmp
dec
out
mov
add
cli
stc
lods
test
xor
mov
xchg
int
sub
sahf
jbe
out
daa
imul
push
mov
add
in
mov
adc
sub
je
outsb
shr
jle
nop
stos
sub
mov
and
js
cmovge
test
loopne
fwait
jne
dec
push
push
xchg
jge
adcb
and
fwait
mov
mov
adc
jmp
fldcw
push
out
cwtl
xchg
aas
shrl
idiv
cli
jg
inc
adc
stos
mov
inc
pusha
mov
inc
iret
or
out
roll
int3
gs
lahf
jp
std
rclb
mov
and
push
cmp
mov
mov
ljmp
push
int
fs
arpl
xchg
mov
call
cmp
stos
loop
fcoms
inc
arpl
adcl
out
and
push
sub
mov
dec
lods
pop
mov
xor
jnp
dec
les
cld
mov
lea
jne
mov
push
mov
push
xchg
xor
cmp
andl
pop
sub
in
pop
xchg
adc
dec
adc
push
movsl
push
ljmp
mov
pushl
mov
loopne
shlb
push
pusha
sub
add
jecxz
adc
mov
jle
sbb
sbb
xchg
mov
push
rol
ja
xchg
sbb
pusha
dec
mov
jae
das
sbb
jle
out
ret
enter
push
lods
gs
adc
test
push
clc
ret
cmpsb
xorb
mov
xor
jmp
mov
cwtl
dec
push
loopne
sub
fs
push
dec
lods
add
and
mov
add
xor
xchg
test
push
pop
jmp
fcomi
add
out
and
adc
sbb
jl
jno
xor
stos
enter
gs
int
push
mov
or
scas
add
sbb
shlb
adc
inc
jne
aaa
adc
pushf
cmp
xchg
jbe
adc
clc
jae
sub
push
or
call
fwait
and
mov
loope
in
lahf
lds
out
jg
push
cs
jg
cmp
add
inc
lahf
jb
fistps
and
into
neg
jecxz
call
xchg
or
and
shlb
inc
insl
popf
imul
aaa
add
aaa
pop
movsb
adc
sbb
rep
mov
loopne
ja
cltd
jecxz
mov
fnstenv
push
test
xchg
push
jnp
sbb
in
adc
cs
mov
xchg
daa
rcrl
arpl
cmc
lds
add
ds
iret
insb
push
and
mov
mov
cld
add
lret
dec
mov
es
and
loop
bound
data16
mov
in
sti
shll
imul
ja
mov
clc
mov
dec
dec
jecxz
jmp
scas
sbb
and
jne
dec
sub
mov
jp
push
aad
out
dec
setle
mov
jp
mov
mov
push
cld
and
ret
test
notb
push
addr16
xor
mov
ret
dec
mov
sub
mov
bound
fcmovnb
scas
pop
mov
popa
sbb
stc
lahf
add
pop
clc
pop
xor
std
adc
movsl
fadds
insb
mov
jecxz
les
ljmp
pop
stos
adc
arpl
loop
rolb
sbb
ss
push
inc
cli
sahf
cmp
push
or
inc
das
adc
mov
mov
clc
mov
push
sbb
jmp
push
test
xorl
les
enter
in
lock
inc
test
dec
int3
jge
orb
mov
insl
and
xorb
lret
sbb
faddp
daa
mov
xlat
and
sub
mov
rorl
iret
cmp
inc
cs
je
add
shll
call
adc
test
ficoms
xchg
jle
push
cmp
in
outsb
bound
std
cmp
xor
mov
and
or
bound
adc
cmp
pop
sti
dec
and
mov
push
data16
jae
pop
cli
dec
idivl
mov
xor
leave
nop
clc
movsl
adc
sbbb
lods
sub
daa
xor
in
push
sub
add
push
lret
or
xchg
push
mov
xchg
mov
idivb
jns
into
jmp
stos
mov
mov
inc
out
test
sub
pop
xchg
lret
sbb
mov
cld
hlt
fcmovb
push
mov
imul
mov
leave
mov
sbb
stos
popa
add
iret
lahf
jl
inc
xchg
lds
push
mov
call
push
push
lcall
stos
push
lret
mov
idivl
ret
les
sbb
das
in
mov
ret
test
test
mov
je
dec
sbb
int3
sbb
std
push
xor
dec
mov
mov
fwait
popf
cmp
test
push
mov
imul
fbstp
mov
jmp
and
cltd
mov
test
sar
and
out
xchg
popf
mov
xchg
mov
loop
push
pop
movsb
clc
lcall
add
in
test
repnz
or
imul
scas
sbb
fmull
or
xor
mov
daa
aas
lcall
lcall
rol
xor
mov
sub
pop
pop
incb
fwait
mov
imul
or
ret
shlb
push
xchg
hlt
test
stc
ficompl
pop
cld
or
push
and
jbe
and
imul
daa
adc
or
clc
jl
ds
loopne
test
pop
adc
push
jl
adc
mov
xor
data16
mov
mov
fcomp
jne
inc
add
jl
xchg
push
lock
mov
ja
xchg
mov
adc
mov
lods
cld
insb
jns
jle
fwait
dec
stos
cs
jl
scas
int3
add
sarb
sbb
lock
fdivrs
xchg
push
jae,pt
pop
inc
push
cmp
fisttpll
xchg
push
inc
jae
pop
aaa
pop
or
mov
fsubrs
sub
je
and
cmpb
push
stos
push
sbb
dec
mov
mull
cld
pusha
rorb
pop
ret
ss
push
sub
xchg
adc
mov
mov
jbe
xchg
dec
bound
dec
call
scas
fmull
inc
fwait
mov
in
sbb
stos
or
mov
outsb
push
lret
lahf
int3
out
out
mov
into
mov
sub
sub
pop
imul
and
push
push
dec
xlat
iret
popa
pop
sbb
mov
inc
pop
aaa
dec
shll
sbb
jae
or
dec
nop
xchg
sub
jb
mov
inc
je
adc
daa
lret
jp
sub
hlt
xchg
loopne
mov
jmp
jmp
stos
mov
push
push
loop
mov
sub
mov
inc
xchg
add
testb
hlt
xor
or
dec
in
ljmp
and
mov
out
mov
xor
mov
ds
cld
into
mov
fcoml
push
jbe
inc
subb
push
into
mov
fs
mov
mov
cmp
pusha
or
insl
mov
loop
cmp
insb
mov
int3
xor
stos
mov
je
popa
in
sbb
jno
push
ja
mov
je
call
in
mov
mov
ds
cmc
cltd
inc
rcrb
insl
sub
cld
out
jmp
dec
repz
movb
adc
dec
dec
mov
fcoml
pop
xchg
jns
and
push
test
push
lock
lcall
xchg
lea
dec
shll
mov
lock
inc
test
imul
add
mov
dec
lahf
sub
arpl
aad
sbb
jl
int
dec
loope
dec
ja
pop
aad
xor
ffree
inc
adc
sbb
sbb
pop
stc
das
stos
adc
in
xchg
pop
cmc
xchg
mov
bound
dec
add
xor
inc
inc
lret
in
push
sbb
push
push
pop
xchg
ja
bound
ret
xorb
sub
testb
mov
and
xor
scas
lahf
sbb
les
add
icebp
shl
jns
imul
sub
in
inc
clc
inc
xlat
adc
mov
adc
stos
add
shll
lret
mov
cmpsl
outsb
dec
lock
ret
mov
push
repz
sbb
lods
jg
sbb
sbb
jne
mov
nop
cwtl
fidivrl
jle
add
aad
out
leave
sub
outsb
dec
adc
cmpl
and
cwtl
xchg
out
lock
sbb
sub
outsb
inc
mov
adc
cmpsb
xchg
push
das
decb
adc
aaa
loopne
xor
movsl
jb
inc
insl
cld
loop
push
cmp
mov
cmp
cmp
icebp
jmp
enter
aad
dec
mov
faddl
mov
and
cli
loop
fs
mov
out
stos
push
adc
lock
jge
aaa
les
test
ljmp
dec
into
mov
imul
icebp
mov
xchg
out
adc
cmp
lcall
mov
mov
shlb
inc
mov
outsb
sbbb
lods
fwait
add
pop
xor
xor
out
mov
adc
xchg
lea
push
icebp
mov
mov
ja
sahf
cwtl
and
roll
arpl
xor
int
insb
cmpsl
jo
das
enter
mov
fwait
mov
sub
fwait
add
or
dec
int3
mov
rcrl
sbb
sbb
popl
test
sbb
aam
ret
xor
push
xchg
mov
lea
sub
lcall
pop
mov
fimull
xchg
sbb
mov
imul
pop
pusha
xor
insb
scas
xchg
andb
scas
push
cs
test
jo
les
xchg
sub
push
adc
push
and
mov
mov
jo
fisubl
add
inc
scas
dec
inc
shlb
mov
mov
and
cltd
or
test
movsl
jne
cmpl
sete
inc
int3
jl
mov
ds
lods
xchg
scas
inc
inc
and
sub
mov
fadds
std
leave
add
movsl
call
fisttpl
cld
vpaddw
mov
loope
test
sub
push
jno
inc
imul
jp
loop
es
inc
inc
loopne
aam
push
cwtl
pop
or
js
xor
mov
jno,pn
std
pushf
add
test
dec
movsl
dec
popa
int
mov
test
fcompl
sbb
lahf
xor
jmp
dec
or
or
cmpsl
cmp
mov
pop
pop
mov
pushf
cmpsb
sub
adc
cld
lock
in
adc
or
push
es
or
adc
jecxz
repnz
mov
stos
inc
ja
cmp
pop
xchg
nop
lahf
pop
cltd
xor
lods
sbb
sahf
fsubrs
mov
imul
push
lds
mov
adc
scas
jne
out
out
bound
in
ret
aam
jo
mov
xor
in
loope
sahf
loope
std
jns
and
or
pop
or
ret
cmpsb
xchg
lahf
adc
xchg
movsb
leave
cmpl
push
popf
cmp
mov
pop
int3
aas
jle
loopne
fldcw
jg
test
pop
flds
push
in
mov
movsl
adc
sbb
fwait
jns
dec
pop
and
jnp
mov
and
fiadds
sub
xchg
mov
pop
call
hlt
pop
xor
outsb
aad
loop
mov
call
in
testl
jns
aaa
in
jne
fwait
pop
fs
add
ss
in
pop
leave
repz
jbe
pushf
fsub
or
in
enter
or
addb
sbb
shr
sub
mull
mov
add
jmp
inc
ffreep
mov
inc
xchg
xor
jle
mov
das
jo
jp
lods
cmp
ljmp
mov
mov
or
neg
fs
cmp
or
pop
arpl
test
jecxz
inc
movsb
cli
dec
push
adc
xor
in
sbb
or
bsr
out
or
pop
in
cmp
in
test
xorl
movb
xlat
hlt
ror
outsb
xlat
notl
sbb
jo
sti
pop
movsb
loopne
faddl
cmc
jnp
ss
adcb
xor
adc
inc
pop
jnp
mov
xchg
pushf
stos
push
es
sbb
mov
jp
aaa
adc
cltd
jg
mov
cmp
adc
mov
pop
mov
cmp
push
les
in
test
fsts
push
push
add
inc
stos
mov
cs
jmp
sahf
into
jl
and
pushf
xchg
pop
loop
loopne
push
aad
or
lock
loope
jl
adc
pop
rorb
je
sarb
lret
push
loope
clc
sub
andb
dec
data16
imul
inc
jmp
xchg
xchg
popa
jmp
dec
fldt
sahf
pop
xor
sbb
adc
js
and
call
sarb
loope
dec
inc
push
out
or
lret
adc
std
and
sarb
jmp
mov
inc
adc
fstpl
and
ss
adc
push
cld
sbb
ret
rclb
mov
xchg
lods
cld
mov
in
push
movl
sub
jp
addr16
mov
pop
or
enter
xchg
xchg
loopne
enter
sbb
in
jge
lock
pop
cmc
cld
mov
sbb
enter
pop
mov
in
nop
push
sub
imul
sub
aad
imul
jns
or
push
mov
jb
lcall
or
xchg
pop
xchg
inc
xchg
mov
push
add
pop
test
mov
xor
fsubrs
daa
inc
leave
adc
test
sub
nop
ja
cmpsl
push
push
shr
pop
outsb
pop
notb
out
lret
push
adc
sub
incb
mov
push
pop
xor
push
shll
lea
mov
mov
cvtpi2ps
lods
dec
ja
ljmp
out
mov
inc
lods
das
add
cmp
sub
jnp
inc
push
pop
stos
jl
sti
jae
popa
outsb
lcall
insl
cmp
jle
mov
jmp
xchg
mov
cmpsl
sbb
lds
cmp
push
cmpsb
mov
adc
adc
inc
notb
mov
jl
leave
sub
fidivrs
and
mov
mov
aad
push
mov
xchg
jge
faddp
idivb
stos
mov
or
cmpsb
inc
bound
call
adc
in
call
sti
fwait
and
nop
mull
dec
pop
pop
push
mov
push
xchg
iret
ficoml
je
subb
mov
rclb
push
sub
mov
call
cmp
lods
push
ss
add
dec
jae
ficoml
test
push
sub
in
into
cmp
cmp
xor
and
bnd
mov
mov
sahf
test
cmpsb
es
push
iret
or
movsb
mov
push
push
sub
mov
adc
and
insl
mov
imul
jl
ret
mov
jmp
mov
repz
sub
inc
or
mov
and
aaa
fwait
pop
push
fwait
jo
lcall
sub
ret
mov
lcall
and
sub
in
sbb
cwtl
cmpsl
in
mov
addl
sub
dec
mov
cmp
shlb
push
jo
adc
mov
in
mov
cmc
sub
stos
out
xor
out
dec
shlb
xor
fdivl
aam
sub
cmp
push
leave
faddl
push
pusha
mov
xchg
xor
xchg
imul
jno
adc
xchg
lods
mov
pop
subl
fdivrs
clc
sahf
int
jmp
pop
in
cli
and
push
inc
xchg
fbstp
push
xlat
dec
movsl
pop
aad
rcrl
in
sub
and
dec
sbb
fst
mov
aaa
sbb
mov
or
dec
leave
add
pop
sub
mov
sub
push
into
cmpb
lcall
out
dec
sbb
hlt
das
sub
bound
enter
add
dec
jg
test
mov
and
xchg
in
add
std
push
dec
mov
cmp
ret
rclb
rcll
mov
sub
cmp
imul
mov
jp
rorb
je
jae
out
cmp
std
loop
jo
call
pushf
mov
cs
xlat
jbe
jb
loopne
cmp
loopne
xor
push
mov
stc
bound
fwait
inc
iret
addr16
cmp
add
adc
fisttps
dec
mov
xchg
lods
lock
mov
iret
pop
out
hlt
mov
mov
dec
mov
adc
testb
enter
les
pop
xchg
mov
icebp
push
adc
sbb
pop
pop
cmpsl
sub
mov
xchg
push
cmc
adc
dec
rorl
push
lods
add
push
out
add
or
jecxz
in
testl
cmp
clc
js
mov
out
mov
add
sbb
addr16
test
mov
shl
mov
jo
and
fmull
xchg
cmp
pop
in
and
in
inc
sbbb
ret
push
test
jl
mov
push
pop
xchg
cld
out
xor
cmp
aaa
out
frstor
nop
mov
xchg
enter
gs
cmp
leave
ss
div
mov
add
js
adc
inc
icebp
sub
mov
jns
jecxz
xchg
insl
test
icebp
das
xchg
xchg
and
pop
fcomp
ret
pop
jl
cmp
cmpsb
es
jle
ret
insb
xor
movsl
xchg
les
pop
das
insl
fstps
mov
lret
dec
stos
das
insb
or
lods
pop
add
rorl
jp
sbb
lret
mov
or
out
or
adc
lret
cmpsb
jns
adc
sbb
aad
cwtl
je
and
outsl
lret
push
and
scas
test
and
xchg
mov
dec
daa
iret
jo
cmpsb
fisubrs
fisubrs
add
jnp
mov
inc
xor
jno
dec
sbb
mov
mov
and
bound
fistl
cmp
mov
out
cmp
cmp
dec
or
lahf
mov
loop
shrb
inc
dec
mov
rcrl
and
push
cmpb
sub
leave
ss
pop
sub
clc
js
out
dec
mov
sub
push
sub
insb
fildl
aam
mov
test
out
loopne
lods
cmp
rcr
ja
cmp
dec
adc
jae
or
inc
shl
stos
outsb
xchg
mov
cmc
scas
scas
jb
mov
fnstsw
jle
fidivl
inc
scas
jb
out
int3
xorb
mov
icebp
outsb
xchg
in
bound
xchg
inc
js
or
push
mov
adc
loope
add
loopne
dec
or
and
push
add
xor
inc
repnz
int
lret
stos
adc
ja
lea
and
add
loope
data16
jp
and
fsts
and
das
jne
imul
insl
xchg
add
push
dec
sub
daa
jecxz
test
ss
pop
adc
out
popa
dec
sbb
inc
jb
jns
daa
mov
mov
or
sub
xchg
movsl
cli
pop
jl
fwait
out
stos
daa
inc
push
int3
dec
cmp
ljmp
icebp
jmp
mov
cmp
cmpsb
into
in
loope
and
and
add
xchg
pop
xor
mov
sbb
data16
sub
push
or
mov
repnz
xor
out
sbb
or
dec
aaa
enter
jno
adc
lret
out
pushf
xchg
mov
mov
std
fcmovnbe
sub
push
xor
gs
popa
roll
inc
mov
rcll
mov
cwtl
or
arpl
dec
pop
rorl
and
les
ret
pushl
es
pop
xchg
xor
mov
xchg
lock
lret
pop
loope
mov
mov
mov
inc
push
mov
and
int3
push
jecxz
rcll
into
ds
aam
daa
pusha
dec
nop
ss
pushf
int
icebp
scas
inc
hlt
nop
mov
mov
into
adc
push
icebp
add
pop
hlt
sbb
inc
ljmp
and
bound
je
mov
mov
ret
sarb
mov
add
repnz
or
ret
xchg
faddl
enter
xchg
cmc
push
insl
scas
push
sub
ss
addr16
test
mov
inc
dec
cli
xchg
pop
pushf
fsubr
in
addr16
pop
into
dec
and
jg
mov
scas
adc
jle
lahf
and
loopnew
ficoms
dec
push
mov
lcall
and
lahf
xor
xchg
test
add
lock
mov
aaa
push
insb
cmpsb
and
icebp
cli
fnstcw
insl
lds
ret
jle
das
loope
push
js
adc
mov
jo
pop
fcmovne
rcr
mov
ret
jle
pop
lea
inc
push
jmp
sub
pop
xchg
and
shll
stos
adc
cmp
mov
sbb
xor
lcall
push
lcall
and
xchg
dec
jo
jnp
inc
pop
hlt
and
and
add
cltd
xor
fnsave
sub
rclb
xchg
sahf
xor
enter
lret
inc
int
mov
mov
testl
stos
stos
cmp
cmpsb
imul
sub
dec
cld
add
sub
adc
push
add
inc
inc
and
mov
mov
cs
stos
fdivrs
push
stc
rorl
out
mov
outsb
inc
fwait
sbb
sub
mov
adc
cmp
dec
iret
addr16
stc
lock
fwait
jl
in
ja
add
adc
add
ljmp
push
and
in
into
mov
addr16
jns
fadds
pop
xchg
js
outsb
mov
inc
adc
dec
shlb
xchg
js
add
cmp
loopne
daa
pop
ret
fisttpll
mov
mov
icebp
clc
pop
pavgb
adc
push
add
xor
inc
roll
cmovg
sbb
sbb
pusha
popf
pop
dec
stos
dec
push
dec
fsubrl
jbe
pop
xchg
jno
mov
leave
loopne
add
ljmp
mov
insl
inc
jle
dec
cmp
fcmovbe
mov
outsl
adc
xchg
ljmp
pop
pop
inc
repz
lcall
out
ret
popf
in
mov
and
sti
loopne
mov
arpl
aad
mov
loopne
lcall
aas
pop
stc
xor
push
jnp
mov
sbb
xor
pop
dec
and
sbb
lods
mov
pushf
faddl
push
inc
dec
jno
cmp
cltd
scas
inc
mov
out
xchg
icebp
mov
popa
push
mov
mov
adc
mov
out
sub
add
cmpsb
adc
mov
mov
pop
inc
jg
cmc
movsl
int3
jbe
mov
and
stos
divb
xchg
sbb
cltd
scas
leave
cmp
fisttps
imul
fisubs
loop
sbb
xchg
aaa
scas
xchg
popf
jmp
adc
sub
das
push
and
stos
dec
pop
mov
aad
or
lock
cmpsb
dec
sbb
hlt
and
xchg
mov
xchg
hlt
dec
pop
and
clc
cmpsl
cmp
icebp
icebp
xor
loop
jb
sti
and
cmp
xor
sti
or
push
and
pop
aam
ja
jns
iret
lock
lret
and
xchg
push
dec
push
dec
repz
sbb
aad
sub
iret
mov
or
jbe
xor
adc
or
ja
pop
js
arpl
lret
mov
fdivl
gs
cmp
fcomps
mov
outsb
mov
fwait
imul
xchg
adc
xlat
and
addr16
mov
das
ljmp
cmp
out
fists
je
jp
xor
xchg
cmp
leave
stos
mov
daa
jge
sub
hlt
pop
sub
sub
lret
sub
xor
pop
lods
cli
repz
cmp
add
cld
xorl
std
inc
adc
adc
das
dec
int3
rclb
mov
add
xchg
push
fiadds
mov
lcall
xchg
dec
sbb
pusha
sahf
stos
cmp
pop
ret
insb
inc
mov
fcompp
adc
jmp
sbb
stc
dec
cld
insl
pop
add
les
jae
mov
pop
ja
adcb
shl
jae
les
addr16
jp
iret
xorl
pusha
cld
cltd
dec
mov
xor
jno
jnp
stos
jbe
pop
pop
lods
push
cltd
cmp
pop
xchg
push
sub
dec
mov
sub
dec
adcl
mov
shlb
jo
lea
adc
ja
icebp
xchg
xchg
pop
shlb
mov
adc
mov
jno
adc
flds
and
jns
ja
xchg
mov
mov
mov
adc
cmc
sbb
rolb
andl
sub
lods
stos
out
xchg
pusha
ror
add
push
das
push
aaa
sbb
lock
sub
inc
out
mov
inc
mov
push
in
stc
popa
jle
mov
fstl
mov
inc
lods
mov
add
xchg
dec
les
xchg
jmp
out
add
push
pushf
test
sbb
xchg
dec
mov
pop
je
aas
sub
or
negl
jle
enter
insl
jge
out
jne
mov
or
loope
sbb
jl
cmp
xor
adc
adc
test
int
sub
inc
movsl
ret
cli
idiv
jnp
jae
scas
cld
inc
xor
addr16
sahf
es
out
xlat
pop
inc
pop
mov
insb
pop
andl
add
mov
jg
dec
fwait
cmpsl
dec
sub
je
fs
fwait
arpl
rorl
movsb
push
or
adc
and
pop
xrelease
jmp
mov
or
cld
fcoml
mov
push
push
add
insb
or
in
push
adc
lods
rorl
repnz
int3
sbb
pop
mov
mov
push
dec
std
dec
inc
add
je,pn
mov
push
sahf
ffreep
out
xchg
or
or
add
jb
ds
xor
jge
push
sub
mov
xchg
jno
cmp
lea
loope
imul
pop
xchg
sub
push
and
dec
int
and
cltd
jmp
imul
xor
icebp
sbb
ja
push
inc
js
outsb
popf
xchg
dec
aam
mov
inc
movsb
jmp
loopne
iret
jae
popf
rcrb
jo
popf
jno
aad
mov
shrl
shrb
add
pop
inc
mov
inc
cld
popf
mov
mov
popa
pop
sbb
dec
cmp
aas
push
jp
push
or
push
mov
fadds
aaa
mov
cltd
mov
jb
dec
call
xor
shll
xchg
jecxz
into
mov
or
xor
jne
mov
mov
cs
in
lds
xchg
lret
scas
and
xchg
mov
xor
pop
movl
lret
jbe
sub
subb
jg
ror
pop
push
lds
out
dec
jmp
lret
scas
stos
push
xchg
les
mov
jb
pop
popl
jle
jl
ss
leave
ss
jecxz
cmp
cltd
cmp
xchg
cmp
inc
dec
mov
aaa
mov
jbe
inc
test
cwtl
mov
adc
xchg
dec
fisubrl
lods
xchg
push
pop
aad
and
call
sub
loop
subl
fcompl
lock
pop
subb
cmp
shrl
push
clc
cltd
pop
jno
bound
sbb
imul
clc
mov
cli
pop
jno
or
lcall
sbb
inc
add
loop
cltd
shlb
adc
mov
ret
inc
push
mov
nop
cmp
daa
push
popa
rorb
ret
stos
out
mov
loope
mov
dec
xor
pop
popa
out
addr16
mov
test
sbb
jne
mov
mov
mov
xchg
das
out
fnsave
jbe
jb
pop
test
out
pop
outsb
loope
stos
js
arpl
jmp
push
faddl
mov
addl
push
call
loop
pop
jb
inc
mov
xchg
push
add
cmp
cmp
inc
add
shlb
push
scas
dec
mov
rolb
xlat
inc
aaa
xchg
lock
out
in
lods
fs
fs
repz
sbb
or
jnp
mov
into
adc
mov
rorl
xor
adc
fisubl
push
mov
das
mov
loope
nop
mov
adc
inc
cmp
dec
fwait
push
call
pop
adc
sti
pop
orb
jbe
insb
aas
push
popf
pop
xchg
cs
xchg
aas
jno
ja
mov
mov
sbb
dec
in
xor
aad
daa
shlb
pop
sub
sub
jne
aaa
inc
mov
popf
shl
daa
xchg
sub
pop
mov
enter
aam
ret
scas
mov
das
addr16
repnz
aad
push
dec
adc
jns
pop
adcl
jmp
xor
add
sbb
popf
push
sub
mov
pcmpgtd
dec
xchg
pop
hlt
fidivs
push
lret
inc
addr16
mov
and
aam
pop
cli
mov
push
dec
fnstenv
sub
lods
jl
inc
sbb
mov
jno
adc
inc
push
js
or
xchg
xchg
adc
dec
stos
push
ja
mov
sbb
push
fsin
popf
sub
cmpsl
or
imul
cmp
push
push
cltd
cmc
test
loop
mov
in
push
icebp
and
rcrb
dec
inc
xchg
mov
ret
mov
xor
cmp
mov
call
or
inc
xor
and
cs
lods
pop
mov
cmp
loop
pop
pop
loop
mov
sbb
scas
and
test
repz
jb
xor
imul
lea
loope
inc
push
xchg
out
fldt
adc
inc
sbb
pop
mov
in
insl
std
stc
mov
lods
xchg
push
ss
or
in
scas
xchg
mov
mov
sub
xchg
sbb
and
in
bound
mov
mov
sbb
adc
fwait
stc
add
sahf
frndint
xor
cmpsl
outsl
leave
cmpsb
loopne
push
mov
dec
pop
inc
lds
sub
xlat
sub
mov
movsl
push
mov
mov
adc
movsl
push
inc
stc
add
int
movsb
pushf
jns
inc
add
sbb
adc
in
lods
sarl
stos
add
out
inc
jns
xchg
ret
orb
sub
mov
repz
inc
daa
cmp
inc
fisubrl
mov
out
sub
sbb
adc
lock
mov
stc
pop
jmp
add
test
or
insl
push
icebp
push
cltd
mov
xchg
pop
ret
dec
lea
mov
cmp
aas
xchg
adc
bound
lds
cmp
mov
loope
nop
sub
mov
repz
imul
push
clc
sub
loopne
add
jae
in
test
lock
cmc
sub
lahf
sbb
mov
xor
frstor
sub
xor
adc
ss
not
sub
push
loopne
push
lret
sbb
adc
outsl
push
inc
test
xor
and
repz
pop
lret
adc
push
fs
add
ret
lcall
pop
adc
mov
inc
xor
int
sbbl
stos
inc
jbe
sub
test
aam
and
and
rcrl
cmpsb
lds
bound
fsubs
add
pop
sub
push
pop
out
ret
push
adcb
cmp
jecxz
mov
mov
mov
aam
mov
and
in
mov
or
and
pop
mov
cs
stos
insb
inc
push
dec
xchg
fcomp
das
fnstcw
jg
and
mov
popf
dec
out
popf
sbb
loope
push
jl
push
test
or
testb
xor
cmpsl
xor
cmp
test
pop
xchg
xlat
add
jp
movb
cmp
sub
inc
lock
sbb
pop
jge
sub
push
mov
jno
rcll
dec
cmp
pop
loopne
mov
addr16
jnp
dec
lods
pusha
push
push
mov
jp
push
pop
mov
scas
imul
imul
mov
mov
or
call
adc
scas
icebp
mov
sbb
add
repz
jae
xor
enter
stc
mov
lods
pusha
xor
aaa
push
shll
rolw
dec
imul
in
mov
fs
cmp
or
mov
andl
xor
jbe
sub
and
nop
cmp
pop
add
scas
add
mov
hlt
in
mov
stc
out
or
dec
iret
ss
or
push
enter
lock
les
xorb
stc
fists
fnclex
js
insb
divl
adc
inc
jmp
add
xchg
sub
fimuls
les
dec
pushf
push
sub
push
je
fcoms
inc
adc
fisttpl
mov
subb
sub
dec
push
jl
sbbl
push
or
in
jecxz
xor
mov
jnp
push
mov
and
sbb
notb
mov
sbb
xor
out
repz
loopne
push
negb
xchg
push
pop
pop
mov
imul
ficoml
imul
add
jnp
mov
push
cmpsl
pop
pop
out
cmp
mov
mov
in
inc
stos
pop
pushf
add
xchg
inc
mov
imul
aas
imul
jae
cwtl
cli
orb
in
cld
pop
lds
in
fmul
inc
sbb
rolb
jno
fwait
cmpsb
lods
adcl
xchg
cmp
clc
push
mov
dec
mov
cmp
jmp
mov
cmc
sub
stos
mov
cld
imul
xchg
ret
inc
adc
inc
pop
test
das
push
cltd
inc
cmp
fisubl
jge
icebp
push
push
cmp
hlt
movsl
ja
das
jg
out
jl
mov
push
pop
or
push
fsubrs
jae
scas
dec
andl
nop
divl
sub
and
in
daa
fbstp
mov
mov
inc
aad
mov
adc
sarb
mov
add
push
pop
jecxz
pop
cmp
je
push
jp
dec
cwtl
mov
enter
pop
popa
jmp
inc
xor
mov
insl
scas
xchg
lcall
shll
out
pop
add
mov
mov
pop
aam
push
scas
lcall
data16
adcl
test
outsl
lcall
push
lock
shl
pop
je
out
mov
mov
out
mov
jecxz
arpl
dec
outsl
adc
inc
jnp
dec
movsb
jae
shll
push
mov
lret
scas
mov
bound
lret
adcl
and
cmp
jge
sub
inc
or
xor
sub
repz
cli
dec
push
or
xchg
cmp
aam
lcall
push
scas
xchg
stc
dec
jge
dec
inc
mov
das
lret
sti
push
rcll
dec
cmc
jle
outsl
inc
clc
movl
int3
sub
test
cmp
fnsave
adc
repz
popa
lcall
push
jp
sub
or
xlat
inc
xor
les
aas
cltd
pop
mov
mov
jl
test
mov
or
push
or
enter
mov
cmp
mov
inc
faddl
fdivrs
dec
call
sbb
inc
pop
roll
mov
test
jb
add
rcll
jmp
push
xchg
sub
mov
mov
xor
mov
sbb
jl
mov
pop
dec
mov
or
dec
pop
mov
dec
outsl
add
inc
cs
lds
pop
or
popl
fucom
inc
lods
pop
fsubrs
adc
xchg
sub
xchg
jne
jl
sahf
mov
inc
dec
loop
pushf
stc
out
in
mov
es
and
int
adc
icebp
jmp
xchg
movsl
dec
pop
mov
ror
data16
sbb
sbb
icebp
add
sbb
daa
roll
push
mov
fcoms
mov
fwait
in
jge
jge
sahf
or
dec
loope
jno
filds
in
lods
mov
in
or
jb
mov
mov
sbbl
jp
popa
xor
mov
add
mov
sbb
and
or
in
and
push
nop
inc
shll
lea
push
jns
push
inc
sub
xor
aaa
call
and
repz
mov
add
add
xchg
aam
cltd
sub
popa
mov
ficoml
mov
xor
mov
push
aam
jp
imull
push
je
pushf
ficoml
xor
jle
test
les
mov
mov
fnstsw
ror
adc
fmulp
mov
and
cmp
ds
loopne
push
or
mov
xchg
pushf
sti
pop
loopne
test
decb
repz
bound
ret
out
or
ss
outsb
mov
fisubs
push
push
je
pop
outsl
adc
in
mov
sub
out
mov
jecxz
stc
out
push
inc
xchg
mov
repnz
jae
jnp
pop
fwait
push
xchg
clc
pop
aaa
mov
push
and
lret
pop
pop
dec
test
pushf
pop
movsb
mov
hlt
mov
repz
inc
jmp
mov
adc
and
sbb
sub
imull
scas
mov
and
dec
inc
mov
shl
cltd
push
negl
lds
xchg
mov
or
mov
xlat
or
pop
mov
negl
jne
add
and
mov
in
add
jl
sub
cmpsl
ss
das
lcall
mov
sti
out
jnp
push
dec
sbb
jbe
aas
xor
inc
cmp
shrb
adc
mov
mov
sub
ret
and
push
sbb
pop
test
xchg
inc
js
sbb
push
loope
xchg
xor
in
negl
ret
in
bound
call
rcll
sbb
jnp
test
jmp
out
mov
int
popa
insl
mov
lock
mov
sbb
pop
repnz
xchg
adc
sub
push
nop
and
inc
lods
cmpsb
lahf
arpl
sbb
movsl
mov
or
ret
cwtl
mov
cltd
jbe
or
sarb
rclb
push
ds
lret
sub
add
xchg
popf
int3
mov
dec
fcomps
adc
je
cmovg
icebp
stc
lcall
xor
pop
mov
enter
add
jo
push
jb
sahf
cli
sti
or
pop
or
cmp
xchg
frstor
movsl
inc
dec
jae
and
cmpsl
dec
xlat
cli
lea
mov
sbb
adc
xorl
pop
lds
loop
xchg
pop
shll
jg
std
fidivrl
lds
dec
jmp
jecxz
js
out
sbb
hlt
mov
sub
and
xor
cld
inc
xor
out
scas
add
test
and
call
sub
cmp
inc
in
shrb
add
push
pop
dec
push
cmp
sbb
push
dec
data16
pop
in
imul
mov
fildll
sti
aas
js
or
sub
stos
imul
ret
pop
add
mov
add
enter
pop
repnz
outsl
cmp
mov
js
inc
mov
js
ja
sub
push
addb
in
in
pop
cmp
jne
xor
stc
and
add
nop
lahf
mov
mov
dec
inc
in
out
icebp
leave
inc
cmpsb
xchg
sub
dec
cltd
cmpsl
inc
stos
xor
dec
pop
orb
jbe
push
fnsave
mov
cltd
ret
gs
into
mov
clc
or
adc
and
mov
setle
cmp
jle
icebp
mov
into
and
gs
push
jbe
subb
out
std
roll
loope
fwait
inc
adc
mov
lea
orl
inc
inc
dec
mov
cmp
clc
push
jne
insl
pop
xchg
or
xor
jnp
xchg
das
inc
stos
add
test
lret
int
ja
test
shl
dec
scas
scas
rcrb
scas
cmp
leave
add
or
out
aad
pusha
or
mov
mov
mov
pop
xchg
addr16
sbb
lahf
push
orl
dec
cmp
hlt
out
repnz
ljmp
inc
test
in
and
aas
pop
push
fdivs
int3
xchg
nop
add
stos
add
loop
ret
jecxz
movsl
rcll
mov
loopne
stos
jge
lods
dec
aad
or
rcll
mov
lcall
push
and
lret
clc
lret
aam
testl
sub
imul
sahf
push
loop
mov
out
jno
pop
mov
mov
jecxz
in
std
xchg
dec
into
test
jno
dec
fcoms
pop
push
add
push
push
push
push
or
ljmp
pushl
nop
cld
fadds
pop
cli
sbb
push
xchg
les
pop
lcall
ds
fmulp
aas
pop
or
mov
loop
jmp
mov
push
push
imul
and
cltd
adc
bound
mov
in
dec
into
and
testb
add
xor
popa
push
imul
notl
jg
scas
cmp
sarb
pop
in
into
pushf
sbb
jbe
inc
imul
stc
inc
xor
jge
sbb
xor
iret
mov
push
cmc
pop
mov
and
je
movsl
out
mov
out
pop
aam
xchg
jnp
lock
invd
or
fisttpl
cmpsb
out
lcall
daa
mov
sub
or
fnsave
jecxz
clc
lret
sahf
sub
loopne
adc
mov
cwtl
adc
jb
mov
cmp
sbbl
pop
aas
test
mov
enter
in
push
xor
ret
adc
bound
data16
or
lea
shrb
lock
mov
inc
popaw
lods
iret
xchg
fmul
mov
mov
mov
call
and
jns
jae
mov
mov
adc
fisubrs
sarb
ljmp
jge
or
repz
inc
or
add
dec
repnz
pop
push
jp
adc
into
popf
aad
sbb
mov
fnsave
or
add
sub
mov
sub
rclb
shr
push
test
rcr
mov
dec
dec
mov
mov
xchg
cmp
xor
loopne
xor
sub
nop
push
movsl
dec
jecxz
dec
filds
add
test
add
or
hlt
into
sub
scas
pop
xor
pop
cld
or
out
fbld
repz
divl
test
stc
mov
out
push
or
and
clc
stc
loopne
mov
fists
jge
clc
xchg
jge
stos
pminub
mov
and
aas
rcrb
js
or
clc
push
inc
mov
xchg
icebp
ja
inc
out
mov
dec
lods
aad
mov
sbb
pop
jns
mov
scas
fsubs
xchg
lods
dec
nop
dec
lods
lahf
cmp
or
mov
mov
mov
inc
and
or
cltd
or
stc
add
push
xchg
sbb
dec
or
leave
dec
shrl
shl
mov
sar
jae
push
add
jo
out
push
loopne
cmp
into
iret
daa
mov
subb
fcoms
pop
in
loop
push
mov
mov
cs
jmp
push
and
inc
repnz
push
flds
cli
xor
jo
adc
iret
xchg
dec
shr
lds
ja
js
pop
lods
inc
xchg
mov
aaa
leave
je
dec
test
jecxz
in
xchg
mov
lods
mov
mov
jne
incl
fdivl
mov
mov
outsb
xchg
stc
jno
mov
push
mov
and
ret
icebp
clc
jmp
push
push
mov
sub
divb
add
sti
cmp
inc
lret
dec
push
adc
adc
xor
add
and
adc
pop
xchg
or
popf
cli
jp
and
xchg
ds
cmpsl
call
mov
cltd
or
js
pop
cli
and
mov
mov
mov
scas
stos
in
stc
jmp
pop
push
cmove
adc
mov
in
out
shlb
jle
cmovno
adc
gs
add
insb
cmp
imul
adcl
cld
sti
leave
pop
mov
xchg
lea
add
in
in
cmp
outsl
push
inc
shll
int
mov
je
mov
addr16
xor
dec
xchg
shlb
mov
cmp
fsubrl
shll
fbstp
stos
insb
cmp
cmp
pop
cmp
clc
push
mov
pop
sub
and
imul
pop
inc
mov
ret
lds
jbe
scas
pushw
cmc
sub
jge
sub
aas
jnp
push
scas
sub
lret
mov
movsb
fcomi
ret
and
push
arpl
jle
test
cli
mov
pop
in
xor
push
ja
fs
mov
sbb
divl
imul
movsl
cli
cmp
adc
push
mov
adc
inc
xchg
push
rolb
ja
cmc
mov
in
dec
pop
insb
test
sbb
xlat
ljmp
mov
cmp
inc
les
outsl
cmp
in
ret
mov
lret
enter
xchg
inc
insl
pop
jo
scas
push
rolb
ljmp
and
fs
enter
mov
push
mov
ja
hlt
gs
adc
or
push
decb
push
cmp
mull
or
add
ds
scas
nop
pushf
fidivrs
push
cmp
ja
adc
les
xorl
inc
pusha
adc
cmpsb
mov
pusha
and
mov
mov
mov
add
jecxz
adc
mov
call
setns
push
sub
pop
sbb
adc
inc
xchg
add
cmp
dec
cmp
mov
stos
and
inc
cwtl
out
jo
aad
leave
cld
in
and
cmp
sub
ficompl
test
push
mov
loopew
mov
sub
xchg
xchg
mov
pusha
roll
sub
mov
mov
or
in
fmulp
lock
dec
roll
push
xchg
mov
shrl
xchg
jnp
mov
push
dec
mov
jecxz
xor
mov
push
dec
loope
push
xor
adc
or
jp
xor
leave
les
shrb
mov
and
pop
lods
aam
pop
ret
pop
aad
inc
push
jb
mov
mov
es
inc
ret
lods
and
ja
push
sbb
call
adc
mov
lcall
mov
lock
jns
aaa
inc
sarl
fdivs
cld
loopw
xor
sbb
xchg
or
imul
ret
jne
loopne
jmp
inc
ss
xchg
je
es
stos
jb
cltd
cmp
mov
sbb
lea
outsb
mov
pop
inc
jl
xor
xor
push
inc
xor
inc
mov
sub
sub
xchg
cmp
push
pushf
test
loope
les
mov
push
sbb
push
jecxz
cld
in
jb
daa
in
jmp
icebp
shlb
ja
fidivrl
les
das
sbb
aad
sti
mov
es
jbe
addb
cmc
je
sbb
xchg
pop
stc
stos
mov
cmp
xchg
xlat
mov
mov
gs
adc
xchg
out
and
push
xor
push
int3
stos
cmp
sub
dec
mov
repz
jbe
add
mov
fldcw
in
xchg
jae
pushf
repz
xlat
fwait
mov
sub
loope
push
lahf
scas
int3
loopne
addb
adc
sbb
add
pop
imul
sub
repz
pop
js
sub
mov
aad
jmp
pop
imul
mov
ja
push
lods
testb
pop
aas
sbbb
and
cltd
decl
stos
dec
loopne
inc
xor
mov
lock
xor
mov
ss
mov
lret
inc
movsb
mov
push
daa
xchg
aas
fisubl
into
nop
pop
mov
movsl
not
data16
pusha
loope
pop
or
jno
sub
mov
les
jle
popa
and
mov
stos
add
adc
pop
iret
jae
sahf
adc
jnp
insb
clc
add
push
popf
testb
fisttps
jbe
out
xlat
orb
add
push
cbtw
dec
lea
mov
pop
jnp
dec
dec
cwtl
rorl
testb
hlt
sti
cwtl
pop
push
push
loop
sub
cli
inc
dec
adc
ljmp
sbb
dec
addr16
mov
mov
mov
jns
aas
mov
arpl
nop
iret
popa
mov
faddl
pushf
addr16
and
cmp
into
je
push
imul
xor
cmp
vpsubq
push
hlt
dec
jno
lods
jne
insb
out
xchg
arpl
je
cmpsl
iret
mov
jnp
ja
lahf
arpl
stc
xor
call
out
mov
sbb
mov
xor
fwait
imul
mov
popf
inc
dec
shr
sbb
fs
jmp
jo
rcr
and
enter
ljmp
insl
mov
lea
xchg
shl
mov
push
pushf
add
jge
bound
jmp
ja
insb
pop
repnz
ds
mov
scas
push
mov
ljmp
aad
sarb
mov
fldenv
fmull
dec
xchg
or
jmp
jg
adc
mov
pop
push
adc
xchg
test
cmpsl
cmp
push
fmuls
or
lods
inc
call
fwait
out
rolb
xor
aad
leave
cmp
les
xlat
aad
or
and
sbb
push
aaa
outsl
xchg
movq
in
mov
mov
mov
test
push
pop
cli
fldl2t
andb
insl
mov
aaa
add
inc
test
out
and
adc
mov
mov
dec
loopne
pop
adc
mov
arpl
pop
xchg
or
xchg
nop
std
test
inc
fadds
ret
inc
sbb
mov
test
lock
js
adc
ret
xchg
pushf
les
sub
xchg
jno
cmpsl
inc
fiadds
pop
arpl
xorb
outsl
push
and
push
xchg
fsubs
sbbb
loop
in
inc
mov
push
jno
movsl
ja
push
into
rcrl
jecxz
shrl
inc
ljmp
push
imul
and
jae
mov
cmp
or
cmpsl
push
sbb
divb
add
push
stos
pop
or
cmp
push
aad
mov
mov
xchg
notl
xchg
imul
dec
js
andl
mov
enter
sub
dec
jecxz
push
jmp
jmp
dec
into
lcall
or
sahf
insb
jg
int3
out
mov
or
rcr
lods
outsb
test
mov
mov
shrb
inc
ljmp
fidivl
bnd
xlat
cmpsl
hlt
and
fmuls
mov
inc
cmpb
loop
shr
sub
shrb
sbb
sub
xchg
mov
sub
in
mov
inc
push
out
add
es
aam
out
jbe
sbb
add
jae
data16
das
int
mov
inc
sbb
or
jp
and
rcrl
fildl
fdivs
daa
push
lock
xor
xchg
add
push
aas
jno
mov
cwtl
insb
pop
daa
and
fcomi
adc
lahf
sbb
pop
jl
sti
fcmovne
dec
jae
das
sub
cli
inc
push
mov
out
jmp
ret
int3
mov
das
mov
or
into
lods
dec
sti
push
repnz
sahf
loop
addr16
lret
imul
dec
aam
ret
xchg
daa
adc
sbb
and
mov
loop
push
mov
lret
dec
mov
jmp
in
mov
or
enter
stos
int3
inc
mov
fidivrl
sbb
push
rol
aaa
or
mov
and
sbb
mov
mov
jge
cmp
pop
lret
fndisi(8087
and
inc
imul
sahf
cmp
ret
loope,pt
pop
int
je
hlt
aad
hlt
pop
jecxz
jbe
insb
arpl
into
or
fwait
xor
and
mov
out
cmp
ljmp
insb
insb
mov
mov
inc
pop
fcmove
mov
and
and
lds
mov
push
add
insb
xchg
inc
jns
sbbl
sbb
cmp
sbb
enter
aam
mov
and
inc
mov
lock
fdivrs
or
es
sti
movsb
sub
ja
stc
inc
into
or
mov
adc
inc
in
imul
int
mov
loopne
adc
and
out
rcrb
push
xchg
xor
cmpsl
mov
mov
fmuls
out
mov
xchg
jo
fnstenv
gs
push
adc
xor
pop
dec
and
push
mov
xorl
movl
dec
jle
and
hlt
dec
jne
xchg
addr16
cmp
jg
movsl
lods
repnz
shrl
ja
sub
cld
sbbb
js
pop
in
push
sbb
test
xchg
repz
push
inc
xchg
xchg
mov
das
rolb
fidivs
imul
xor
mov
xor
cmp
cmp
xchg
push
xorb
aam
adc
sub
adc
mov
push
fs
cmc
not
xor
sarl
std
test
jmp
push
fcompl
pop
adc
pop
lret
lock
stos
out
lds
pop
clc
and
popa
mov
js
xchg
js
xor
push
loop
mov
leave
jge
call
add
cmp
js
call
sub
aas
add
jl
inc
cmp
ja
sub
pushf
mov
xchg
inc
jnp
jae
fildl
ficomps
and
std
aaa
pusha
ret
outsb
icebp
lcall
ljmp
mov
cmpsl
cwtl
inc
aam
fwait
xor
and
mov
test
sbb
test
sub
clc
negl
repnz
sub
xor
mov
mov
and
xchg
pop
xchg
mov
pop
dec
movsl
sahf
pushf
imul
lea
mov
cld
cmp
adc
cmpsl
adc
insl
fs
add
addr16
sbb
fmuls
lods
dec
or
push
xchg
adc
xor
addb
scas
aam
add
movsl
fnstenv
nop
push
int
fnclex
ret
pop
jbe
sbb
mov
imul
imul
mov
add
xor
dec
and
xor
mov
cmc
adcl
cs
loop
jmp
mov
or
push
xchg
loopne
or
icebp
dec
xlat
test
scas
mov
cmpsl
jge
jne
pop
es
imul
repnz
popf
inc
mov
jo
push
push
fdivs
push
xchg
hlt
testb
nop
push
lret
cmp
xchg
unpckhps
out
stos
mov
popa
mov
loop
adc
pop
and
adc
in
bound
int3
dec
or
pop
out
out
es
sub
andl
int3
stos
cmp
enter
fsubl
lcall
scas
mov
mov
fldl2e
adc
rep
clc
jae
fistl
ds
sti
add
xlat
ss
dec
insl
cmp
shlb
js
popf
jle
lcall
xor
fsubrl
or
sbb
aaa
push
gs
inc
ja
jns
mov
cld
jns
dec
fildll
out
cmp
repnz
mov
sbb
popf
int
arpl
fildll
sbb
rol
jmp
mov
int
in
aaa
pop
xor
mov
or
bound
les
xchg
sbb
mov
jl
xlat
movsl
shlb
fdivl
call
iret
jecxz
sbb
cltd
hlt
sti
je
sbb
mov
mov
in
cli
mov
test
mov
cmp
dec
sti
mov
in
test
insb
push
outsb
adc
cwtl
mov
jg
sbb
inc
ljmp
mov
pop
movsb
add
data16
dec
cmp
das
xor
test
test
mov
jg
test
in
pop
add
xchg
xor
xor
insb
pop
sti
cli
inc
aas
xchg
add
nop
cmp
out
inc
cmp
xor
pop
mov
push
mov
das
fildl
insl
shlb
jb
leave
mov
sbb
cltd
out
pusha
jge
push
das
sbb
std
sub
out
mov
jge
sbbb
and
and
inc
fstl
push
stos
push
addr16
pop
mov
outsl
mov
leave
ss
sub
in
push
or
or
adc
sub
cli
sarl
dec
push
cmp
stos
xchg
hlt
insb
cmp
movsb
xchg
mov
ret
loop
mov
aam
lea
push
emms
dec
in
xor
mov
in
xor
sbb
out
fdivs
sar
stc
mov
mov
jb
es
hlt
xchg
pop
pop
jmp
cmpsl
dec
adc
test
mov
sbb
popa
and
test
add
mov
imul
push
jl
adc
xchg
xor
fwait
outsl
or
aas
pop
fs
pusha
insl
ret
mov
shr
cmp
test
cld
inc
pusha
nop
cmpb
loope
repz
out
rclb
in
pop
mov
orb
push
pop
ret
sub
ljmp
inc
mov
jg
outsl
fcmovnbe
and
ret
in
in
inc
fstpl
js
or
loop
sbb
les
pusha
or
hlt
out
lock
inc
inc
mov
add
mov
stos
lcall
push
out
or
fildl
xlat
pop
cmpsb
inc
or
imull
inc
mov
or
push
lret
ret
cmp
pop
pop
pop
jle
leave
aas
out
mov
mov
cmp
add
aam
pop
cmp
jno
jnp
lods
inc
add
and
pop
les
or
jl
popa
fcoml
flds
mov
add
xor
cmp
subb
out
cmp
mov
lea
aam
out
imul
das
fdivl
repz
xor
outsl
leave
mov
jmp
jg
cmp
std
push
mov
lahf
and
loope
repnz
xor
outsb
mov
adcl
pop
outsb
inc
aas
stos
stc
inc
int
pop
lds
dec
mov
jo
sub
sti
call
cmc
outsl
in
cltd
sar
mov
add
mov
dec
fcmovbe
mov
int3
js
or
or
into
ret
mov
inc
mov
jae
adc
add
aaa
test
push
push
add
sbb
mov
lock
xlat
daa
scas
or
cmp
inc
out
insb
sub
push
pop
pop
lods
push
lods
pusha
nop
insb
mov
ja
pcmpeqw
addr16
push
lock
push
sbb
mov
les
xlat
dec
pop
js
adc
jge
into
xor
bound
inc
xor
jg
cmpsb
test
xchg
cmp
lods
jno
test
stc
sbb
jnp
xchg
add
mov
cmc
inc
les
sahf
fwait
das
insb
mov
popa
fdivl
jbe
push
lock
enter
adc
cmp
loop
jbe
test
and
ljmp
and
sarl
fiadds
pop
pop
outsl
sahf
loope
jb
mov
clc
ret
or
pop
sbb
cltd
mov
and
pop
mov
aam
rolb
jmp
add
dec
jecxz
test
std
jle
xchg
sbb
loop
rcl
lcall
gs
stos
fcmovb
in
rorl
enter
xchg
dec
jecxz
enter
add
xor
out
cmc
cmp
scas
push
mov
enter
stos
push
sub
xchg
pop
movsl
stc
lcall
cmc
imul
add
fdivp
rclb
mov
jb
cli
mov
ret
mov
push
dec
jmp
addr16
out
push
imul
inc
mov
fbstp
bound
ljmp
sbb
addb
cwtl
sbb
mov
pop
repz
sub
xor
negl
sarl
or
or
sbb
test
cmp
and
lods
gs
xlat
test
je
xor
dec
addr16
int3
or
xor
test
cwtl
pushl
ljmp
xchg
pop
loope
cmp
mov
fwait
push
sub
lock
xor
mov
jb
stc
adc
fimull
mov
sarb
dec
xchg
pop
sbb
iret
push
add
add
mov
mov
sub
popf
sub
cmp
mov
inc
test
xorb
sbb
clc
nop
mov
sbb
imul
inc
movsl
pushf
cmp
and
and
and
adc
cld
xchg
push
xchg
dec
ss
repz
jb
xor
jnp
iret
xchg
or
insb
int3
stc
inc
dec
fildll
dec
adc
sub
adcl
or
pop
xchg
and
xor
inc
icebp
test
sbb
and
jp
pusha
xchg
mov
popl
sbb
pop
push
dec
mov
jg
jbe
lock
clc
rcll
movsb
dec
cwtl
ja
xor
sbb
lcall
cmp
sub
sbb
jp
mov
andb
fwait
call
das
clc
cmp
mov
ret
cmp
lcall
shrb
inc
push
icebp
divl
inc
lahf
jmp
mov
push
rcl
cmp
dec
pushf
xchg
bound
sbb
and
pushf
push
pop
xor
mov
mov
in
and
mov
xor
les
stos
xchg
imull
dec
popa
movsl
subb
les
xchg
in
mull
mov
addr16
mov
lds
push
add
enter
mov
outsb
mov
cmc
fs
push
push
lds
js
icebp
jle
mov
insb
cltd
je
push
insb
in
negl
and
mov
xor
scas
popf
mov
in
bound
and
inc
lea
int3
fwait
lret
or
inc
int
mov
fisttpll
sub
pop
jl
iret
int3
or
pop
sub
sub
inc
ljmp
cmpsl
add
popf
int
in
hlt
add
mov
sarb
cmc
dec
jp
test
test
jmp
pop
aam
in
mov
mov
mov
sub
push
or
inc
and
mov
cmp
xor
push
jo
insl
or
add
in
push
js
scas
xlat
inc
or
adcb
ds
pop
mov
and
jge
sub
outsb
inc
and
stos
sbb
mov
sbb
dec
repz
pop
push
sub
jecxz
dec
xchg
pop
cmp
test
cli
xchg
push
lahf
add
loop
mov
adc
sub
hlt
xchg
test
test
push
pop
mov
dec
jo
xchg
add
in
fistpl
xchg
neg
pop
jbe
out
out
ret
clc
push
gs
jp
mov
divl
imul
jns
sbbl
lahf
jmp
or
cmpsb
js
fdivs
cmp
sub
xchg
jge
pop
pop
enter
mov
xorb
popa
xadd
and
xchg
adc
scas
and
mov
test
int3
mov
lock
mov
stos
or
dec
lods
ret
shrl
jae
xor
mov
dec
lods
xor
jle
xlat
lret
xor
pop
loope
mov
sbbl
pop
pushf
int
ljmp
inc
leave
addr16
xor
pusha
mov
kandw
mov
adcl
inc
push
sub
push
insl
mov
je
and
mov
hlt
jl
pop
hlt
call
ja
shl
xor
popf
push
jns
push
xchg
dec
xchg
lds
mov
adc
mov
lods
cmpsb
loopne
scas
xlat
jns
dec
inc
cltd
lods
fst
xor
xor
orb
dec
xchg
fcoml
js
mov
lea
sbb
dec
push
jmp
dec
jmp
je
and
leave
sbb
mov
ljmp
cmp
cmpsb
cltd
xchg
jns
xchg
int
fsubrp
gs
mov
pushf
dec
add
js
cmpsb
mov
addr16
fs
lret
cmp
roll
pop
mov
incb
jo
or
decb
xor
div
insb
add
mov
sarl
icebp
pusha
fsubs
jae
arpl
call
fistpl
add
add
pusha
jb
sbb
nop
je
data16
adc
arpl
int
rcrb
mov
nop
fwait
cmp
outsb
insl
leave
pop
lods
shll
xchg
and
push
lea
inc
inc
mov
lods
int3
mov
jb,pt
out
lods
jle,pt
int
in
or
push
adc
in
addr16
imul
or
xlat
or
fistpl
cmp
push
jp
adc
mov
repnz
cmp
sub
pop
loop
sbbl
mov
and
sbb
and
xlat
movsb
jp
cmp
je
je
inc
shr
movsl
movl
in
add
test
xor
aam
sub
insb
jne
stos
mov
xchg
lock
jns
push
lahf
icebp
in
mov
cli
jnp
mov
ret
cmc
bound
mov
movsl
iret
lret
cmc
iret
jg
mov
nop
cmc
or
sub
js
mov
push
ret
sbb
cmpl
test
pop
xor
push
inc
outsl
mov
lock
divl
es
lds
repz
pop
andnps
loopne
pop
loope
jo
dec
sti
mov
packuswb
push
scas
sub
mov
push
in
pusha
sbb
jg
shlb
adc
aad
mov
xlat
sub
mov
xor
push
adc
xchg
mov
cmp
ucomiss
fisubrs
lods
dec
sbb
pop
push
shll
test
xor
test
icebp
lds
inc
enter
xor
dec
pop
sbb
stos
fdivrp
in
popf
dec
imul
lret
test
out
jnp
into
and
add
inc
or
lahf
aad
stos
sti
dec
xchg
loope
mov
pop
lcall
push
dec
dec
ss
femms
popa
aam
xor
test
jmp
into
mov
stc
xchg
sbb
mov
arpl
lods
mov
push
sbb
push
lret
cmc
mov
lret
sbb
push
xchg
cs
aaa
lret
mov
jo
inc
movsl
jbe
push
lods
push
cmpsl
adcb
xchg
cld
jbe
stos
inc
pop
pusha
mov
adc
push
adc
call
dec
hlt
and
fs
int3
pop
les
sbb
insb
lret
fistl
add
sbb
loop
sub
jg
xchg
std
sbb
lret
outsb
inc
sbb
or
sbb
fldt
cmpsl
sbb
jg
pop
jns
jg
push
cs
xchg
xor
and
jmp
jb
sbb
in
cltd
sbb
mov
mov
out
adc
pop
xchg
mov
jne
jb
cld
sbb
xor
fucomp
jno
int3
bound
inc
lret
rcrl
test
sahf
notb
mov
rcl
dec
movsl
dec
imul
lods
adc
shrb
clc
mov
push
adc
and
sub
repnz
outsb
cmp
test
cwtl
outsl
dec
das
mov
sbbb
les
repnz
in
shll
ljmp
xor
mov
ret
in
loope
repnz
dec
sub
sub
inc
test
pop
aaa
mov
jmp
scas
jp
ds
lods
and
jmp
lods
push
std
stos
loopne
or
shll
out
push
pop
xchg
dec
jg
aas
jecxz
sub
xchg
jb
insb
daa
cmpsb
or
pop
inc
cli
popl
leave
jmp
jno
out
and
cmpsb
pusha
jl
out
mov
dec
and
lahf
insl
lea
push
faddl
mov
mov
cmp
fnstsw
xor
jmp
pop
mov
inc
call
adc
lock
lret
dec
pop
adc
push
mov
aad
call
test
xchg
mov
adc
sbb
pusha
sbb
mov
mov
or
mov
sub
loope
adc
jb
movsl
xlat
add
pop
inc
imul
cmpsb
leave
mov
xchg
xor
rcrb
ret
movsb
es
xor
pop
lret
mov
shrb
push
sbb
xchg
cmpsb
mov
shlb
xchg
sub
mov
pop
mov
xchg
lea
jo
adc
jmp
mov
aam
jbe
repnz
clc
outsb
inc
test
es
adc
in
and
mov
je
pop
stc
cmpsl
xchg
sub
pop
lods
sub
dec
decl
mov
ljmp
push
jl
inc
outsl
adc
xchg
jnp
dec
sbb
in
mov
mov
rorb
jns
xor
xor
in
cmc
pop
fidivs
sbb
push
es
test
jl
hlt
xchg
cmp
sbb
mov
mov
dec
cmp
fimull
out
lock
jne
rol
pop
es
or
push
enter
xchg
push
loope
movsl
aaa
dec
in
dec
sub
cmp
scas
test
shrl
add
fisttpl
aaa
jbe
jge
jo
lock
jae
cmc
add
adc
pop
or
leave
push
repnz
or
cmc
pusha
dec
test
popa
shl
mov
lock
jo
or
shll
cltd
jb
in
xchg
jmp
mul
sahf
and
movsl
mov
push
sbb
popf
out
jae
mov
addr16
adc
mov
enter
outsb
mov
out
shll
cmc
lahf
push
xchg
loope
test
test
stos
mov
lds
mov
push
pop
nop
shlb
lcall
push
rcrb
shr
fstl
lret
dec
pop
leave
jg
leave
das
push
bound
dec
push
fs
xor
xchg
mov
cmp
hlt
sub
pop
cmp
add
popf
inc
cltd
aas
add
jecxz
ret
jae
in
adc
sbb
stos
cmp
stc
push
fcoms
mov
push
or
pusha
cli
mov
mov
jge
imul
jns
mov
ficoms
xchg
dec
cmp
lret
mov
fmul
rcr
jb
jp
mov
fistpll
or
mov
mov
and
lcall
push
jecxz
add
jb
pop
sub
test
inc
sar
pop
pop
ret
dec
sbb
jae
add
xor
push
in
push
push
loop
cli
pop
gs
xor
pop
xor
dec
xchg
push
test
loopne
sarb
std
mov
jne
cmpsb
pop
mov
xor
jle
mov
lahf
mov
jo
xor
jbe
and
es
jno
or
push
push
insl
movsb
cmp
cmp
std
fisttpll
add
push
adc
pop
sub
loopne
arpl
call
fmuls
and
add
add
pop
fldcw
push
stc
gs
aad
or
inc
iret
add
push
sahf
fbld
cmp
sbb
sbb
cs
arpl
mov
and
fldl2t
mov
sbb
jge
jno
mov
push
arpl
test
decl
mov
cmp
fnsave
push
xchg
xchg
push
fildl
addb
and
int3
adc
daa
adc
mov
lahf
data16
ret
mov
pop
push
sti
xchg
dec
ret
out
sub
cmp
arpl
mov
flds
repz
sub
dec
test
aad
mov
jno
mov
lret
popa
mov
stos
popa
adc
mov
pusha
mov
adcl
cmp
dec
pushf
rcl
adc
jl
test
mov
arpl
xor
adc
ret
daa
push
ss
push
adc
or
sbb
adc
push
mov
ss
xchg
stos
jmp
add
dec
in
inc
mov
adcl
xchg
adc
sub
add
cltd
jno
cmpsb
push
lods
dec
xor
mov
out
cltd
out
push
call
cmp
pop
sahf
jb
mov
xor
xor
test
xor
push
jl
jnp
jl
mov
iret
pop
mov
fcomip
mov
push
xlat
pushf
adc
adc
dec
out
sbb
call
cwtl
in
movsl
outsl
testl
insl
pop
test
xor
mov
and
add
clc
xor
pop
lock
push
sub
jno
loopne
cmp
loopne
fbstp
push
loopne
adc
or
xchg
es
inc
ds
pop
fdivl
mov
mov
push
ficomps
mov
jo
or
enter
dec
nop
imul
jecxz
scas
cmp
add
xor
fwait
xchg
call
xor
inc
jecxz
arpl
test
subl
adc
cmp
add
daa
dec
dec
mov
cmp
mov
jle
dec
hlt
and
mov
pop
in
orl
loop
dec
loop
cmp
adc
notb
call
jle
movsb
ds
push
mov
fwait
ljmp
shll
sub
mov
out
sbb
lahf
cmpsl
call
and
out
clc
sbb
mov
in
mov
xchg
shlb
scas
iret
ljmp
sub
push
pop
pushf
xchg
cmc
jns
and
pushf
jge
push
insl
sbb
shlb
adc
cmp
mov
test
xor
jmp
dec
aas
dec
sbb
test
mov
enter
cwtl
mov
sti
jmp
mov
data16
xchg
xlat
or
xchg
xchg
adc
adc
popf
inc
cmp
pop
cmp
sbb
icebp
adc
xchg
lret
lret
pop
aas
mov
fcoml
inc
out
ret
jp
sub
jp
mov
dec
or
jbe
inc
jp
xchg
push
cwtl
in
pop
mov
adc
pxor
push
adc
dec
sbb
jo
mov
inc
test
shll
into
imul
dec
jne
fxch
push
mov
mov
mov
pop
mov
jbe
ds
pop
fldz
shlb
fdivs
add
movsl
pop
lret
sub
push
cmp
add
cmp
cmc
ffree
mov
xor
dec
sub
dec
mov
fwait
pop
xchg
nop
dec
lds
lret
outsb
rcrl
ret
fcoml
movsb
ljmp
push
mov
js
scas
xor
sbb
inc
lret
mov
pop
imul
jp
mov
add
enter
pop
incl
lock
and
dec
add
cmp
bound
add
adc
das
push
mov
arpl
mov
add
adc
and
ret
push
aas
stos
xorb
push
in
test
adc
imul
mov
clc
jge
mov
mov
mov
movsb
mov
arpl
jecxz
mov
jl
pusha
adc
das
cmp
jmp
outsb
xchg
jo
mov
in
ss
mov
roll
int3
mov
inc
insl
imul
mov
test
test
les
and
dec
xchg
or
movsl
clc
inc
xchg
shr
mov
mov
adc
mov
cli
add
in
sub
mov
imul
xchg
pop
sbb
test
mov
int3
xchg
arpl
sar
push
stos
push
cli
popf
adc
negb
mov
cld
cwtl
js
jle
inc
leave
dec
sahf
xor
xchg
popf
jno
and
aam
inc
jb
mov
add
pushf
lods
push
xchg
loop
popf
and
mov
pop
ljmp
sub
aaa
push
call
jo
xchg
insl
gs
add
mov
sub
dec
and
cwtl
push
push
bound
sbb
xchg
cmp
lret
andl
mov
sub
add
dec
inc
loopne
and
das
stos
outsb
hlt
mov
outsl
xorb
cmpsl
imul
in
stos
xorl
popf
or
in
sub
insb
pop
fwait
cmpsl
xor
sbb
ret
and
into
push
push
imul
dec
push
arpl
mov
pop
sub
push
inc
fcmove
sarl
adc
dec
stos
add
test
dec
sbb
jb
cmp
cmpsl
push
insl
loope
das
push
insb
stc
xor
out
and
cmpsl
cmpsl
jbe
xchg
fidivs
mov
xor
push
xchg
cmp
lea
dec
in
test
sarl
enter
fiaddl
out
imul
cmc
hlt
popf
sbb
inc
in
xor
fcompl
mov
jbe
pop
scas
rcl
and
or
sti
repz
mov
sub
stos
mov
pop
popf
sysenter
jg
inc
aam
xchg
add
lods
inc
dec
xor
jmp
fldcw
xchg
test
cmp
mov
sub
push
lds
ds
mov
sbb
or
inc
sbb
das
je
popa
or
dec
jne
bound
scas
stos
adc
js
pop
mov
sub
pop
xor
xchg
jl
mov
lret
loope
add
pop
sbb
dec
clc
pop
jns
mov
js
pushf
lret
cmp
cmp
add
mov
repz
jge
mov
xchg
mov
js
xchg
add
inc
fstpt
and
iret
jno
test
mov
arpl
popf
es
jecxz
mov
inc
xchg
adc
dec
adc
xchg
jecxz
add
sbb
or
sub
into
pop
stos
andl
push
and
cli
ss
or
lods
popa
or
mov
aas
aad
or
pop
push
cltd
fs
stos
jne
pop
fldl
pop
cltd
lret
mov
adc
sahf
mov
mov
cld
repz
sub
inc
lahf
add
loop
sub
fisubrs
xor
mov
ffreep
jecxz
dec
fnstsw
adc
mov
scas
jg
out
jne
ret
orb
repz
jg
je
dec
inc
in
sbb
push
insl
xchg
fbld
bound
push
fsubs
dec
popf
icebp
mov
mov
js
insl
jecxz
mov
pop
pop
sbb
cmp
mov
pop
jge
les
cmc
mov
cmp
mov
in
aas
daa
iret
fwait
in
mov
dec
leave
loopne
shll
je
cli
inc
das
js
scas
addl
cmp
add
fcomps
insb
and
dec
lahf
aad
sub
int3
or
addl
push
mov
test
mov
filds
jp
sub
loopne
push
push
je
lahf
sbb
xchg
cmpl
outsl
push
cmp
push
aad
xor
cmp
or
cld
mov
out
dec
stc
ficomps
sarl
lahf
shlb
testl
imull
mov
test
or
jns
sub
pop
pushf
dec
xchg
mov
frstor
mov
outsb
sbb
aam
mov
scas
jno
push
icebp
stos
jg
jge
xor
pop
jbe,pn
or
test
seto
nop
push
mov
dec
fmull
insb
jge
stos
incb
mov
mov
push
jo
push
sbb
hlt
xor
mov
xchg
clc
and
jb
fstl
test
inc
pop
outsb
cmp
mov
lret
xor
xlat
pop
test
arpl
insl
cmp
div
sub
repnz
add
mov
lods
xor
sub
lea
scas
in
popf
inc
pop
lods
mov
movsl
mov
mov
cmpsb
imul
pop
sbb
xlat
fs
scas
mov
std
mov
sahf
mov
rcll
subb
subb
lods
cmp
lods
xchg
pop
out
mov
lods
cs
leave
int3
popa
jo
add
iret
or
inc
loop
ret
fldl
sbb
pop
js
sub
movsl
test
pop
test
pop
aas
mov
aaa
pop
pop
mov
or
push
nop
popa
cmpsb
lock
xor
cmp
cmp
std
cmpsb
jmp
ja
stc
repnz
popf
jp
out
orb
or
xchg
jne
hlt
je
dec
cmc
stos
or
jp
ss
mov
mov
popa
mov
adc
popf
std
roll
cmp
enter
jbe
int
push
mov
sub
mov
fbstp
pop
movsb
jge
lret
shrb
dec
test
ljmp
cwtl
in
scas
ret
aad
dec
mov
mov
cmc
jb
mov
es
add
jnp
pop
dec
inc
cli
mov
and
mov
pop
movb
inc
xchg
mov
aaa
sub
fimuls
lds
scas
xor
mov
mov
jmp
cmp
jg
stos
xor
gs
aam
int
sbb
jecxz
xlat
adc
mov
push
test
add
pop
mov
rcll
mov
add
add
xchg
mov
ja
call
adc
ror
xlat
leave
es
inc
roll
in
dec
or
add
dec
imul
push
push
jmp
rclb
add
daa
out
cltd
nop
mov
mov
movsl
sub
inc
sahf
leave
xchg
push
push
lret
inc
negb
out
pop
je
loop
jnp
push
sub
test
jle
mov
fadds
jecxz
fsubrs
sbb
mov
insl
mov
outsb
pusha
dec
inc
hlt
xor
sarb
daa
popa
lock
jo
std
or
push
mov
adc
loop
pop
mov
dec
stos
jnp
sbbl
jge
inc
call
aas
push
pop
pop
nop
jg
mov
or
or
call
mov
sub
push
clc
cli
jle
ja
addr16
addr16
xchg
bound
sbb
call
int3
test
cmpsb
add
push
lcall
daa
mov
jb
fs
fwait
cmc
fistpll
orl
xor
shrb
leave
shrb
mov
cld
mov
sub
sbb
fadds
fisubs
xchg
scas
pop
pushf
pop
out
test
jp
lcall
xchg
hlt
inc
js
jb
mov
mov
mov
xchg
shlb
cmpsb
loop
mov
or
test
ret
xchg
mov
movsb
pop
pop
xchg
aas
cld
int
push
add
clc
cwtl
sub
jnp
xor
sbb
bound
ret
sub
nop
jl
xchg
movsl
push
mov
fs
push
nop
shll
mov
cmpsb
sti
dec
jno
cmpsl
sub
sahf
push
or
jmp
pop
push
jl
in
add
sbb
pop
sub
stos
loop
adc
loopne
lret
bsf
sahf
xor
sub
mov
inc
pop
aam
sahf
in
pusha
stos
or
mov
ficoms
out
lret
adc
adc
xchg
cmp
arpl
inc
push
dec
xchg
aas
and
push
loop
fsubl
sahf
jecxz
repnz
test
cli
fwait
ret
sbb
movsb
lea
inc
sbb
rcr
push
xor
fwait
lods
mov
cld
cmp
outsb
push
jmp
or
xchg
into
adc
clc
push
mov
cmp
bound
imul
push
adc
hlt
pop
add
daa
and
mov
lret
push
mov
cli
iret
sahf
imul
pop
aas
inc
jne
stos
popa
call
fmull
dec
clc
and
cmp
ljmp
cmpl
inc
pop
das
in
mov
add
xor
mov
jge
pop
jmp
push
fistps
jp
test
pop
data16
xchg
sti
imul
ja
imul
and
push
xor
cld
pop
cmc
std
mov
inc
jecxz
pop
pop
add
sbb
xchg
pop
pusha
sub
mov
cmc
fistpl
popf
rorb
gs
xchg
dec
pop
fidivs
shll
add
sub
outsl
shlb
int3
in
int3
push
dec
mov
mov
rorl
in
adc
jge
xchg
popa
out
mov
sbb
dec
fwait
stc
fldcw
cmpsb
and
xchg
lret
jns
adcb
sti
xchg
xlat
or
pop
or
dec
mov
cmp
adc
imul
outsb
jbe
push
fsts
cwtl
shrb
sbb
rclb
adc
dec
mov
jge
mov
fisttps
or
movb
mov
cmc
test
xlat
scas
int
rcr
stos
bound
dec
mov
popf
pushl
or
in
push
movsb
jbe
sahf
add
shlb
dec
mov
js
cmp
mov
mov
repnz
je
mov
and
adc
fcomps
scas
in
inc
icebp
xchg
sub
add
fwait
mov
fsubrs
enter
mov
dec
popa
xor
mov
mov
dec
sahf
jmp
dec
orl
loopne
in
mov
xlat
cli
inc
jnp
je
pop
mov
insb
pop
rolb
xor
xchg
jle
arpl
gs
sbbl
dec
sbb
mov
mov
sub
adc
inc
mov
mov
mov
sbb
popa
push
stos
cs
adc
mov
inc
jl
loop
pcmpgtb
test
pop
adc
mov
or
cmp
jae
push
adc
outsb
popf
in
fdivs
popf
outsl
adcl
fildll
in
aas
mov
cwtl
cmp
cli
std
xor
and
mov
rcrl
and
xlat
jo
fiadds
imul
repz
cmpb
fdivrl
sub
int3
addb
outsb
mov
xchg
xchg
xchg
mov
movsb
jmp
mov
mov
xchg
in
scas
cwtl
add
xor
movsb
mov
dec
dec
mov
mov
jl
jns
aas
cmpsl
mov
nop
xlat
hlt
lock
mov
pop
sub
arpl
outsl
and
cmp
dec
mov
pop
ja
data16
push
sub
and
add
outsb
inc
mov
cld
iret
shlb
movsb
adc
pop
xor
push
add
mov
mov
ficompl
dec
fmull
pop
dec
mov
push
sub
lahf
mov
stc
cmp
into
in
stos
and
lret
cmp
pop
daa
call
out
dec
icebp
ret
mov
stos
nop
push
and
sbb
xor
inc
sti
shlb
sarl
mov
mov
add
in
mov
lods
mov
jbe
xor
repz
loop
push
bound
dec
push
dec
popf
dec
jecxz
sbb
repz
mov
inc
and
mov
cmp
enter
jo
cwtl
xchg
fucom
daa
jp
popf
sbb
orb
shrb
out
pop
sahf
fwait
adc
mov
mov
sbb
test
adc
sub
adc
push
jbe
dec
mov
xchg
sbb
pop
xor
mov
xchg
cmp
xor
aam
jnp
xor
lods
nop
nop
dec
cmp
pop
test
fisttpl
mov
sti
insl
dec
pop
adc
mov
and
ds
add
jns
int3
scas
sbb
dec
inc
fidivs
test
dec
fnstcw
mov
mov
push
jbe
mov
dec
stc
jne
lret
cmc
fldenv
sub
in
movsb
push
sbb
cmp
orl
addl
jnp
push
lea
xor
hlt
pop
mov
pop
and
inc
jg
jnp
jge
cmpsl
test
mov
jbe
cli
ss
imul
or
cmp
je
pop
imul
out
test
sub
push
std
jno
xchg
icebp
ss
push
scas
popf
push
movsb
adc
xchg
cmp
into
push
ds
pop
rcll
mov
pop
mov
test
sbb
sub
dec
divl
push
repnz
cmp
test
inc
sbb
test
xchg
or
cmp
cmp
adc
or
mov
jmp
lgs
test
ret
test
sahf
mov
sarb
xchg
loopne
push
adc
shlb
sub
jo
mov
mov
cli
rclb
stos
fwait
outsl
jnp
icebp
push
repnz
add
lods
daa
in
push
xchg
sbb
fwait
out
loope
pop
lods
outsb
cmp
lods
sub
clc
adc
fsubs
pushf
add
push
xchg
rcr
data16
movsb
push
aas
mov
pop
inc
rcrb
mov
jge
in
sub
fsts
jb
jle
xor
mov
xor
stc
or
xlat
push
or
pop
mov
or
and
push
mov
and
in
test
lcall
inc
and
xchg
sbb
fs
jge
lret
xor
aad
insl
adc
mov
cmp
icebp
push
adc
cmp
outsl
mov
and
inc
mov
aam
shlb
jnp
mov
sub
and
jae
or
pop
xchg
dec
lock
and
xchg
jne
decl
cmp
aam
dec
clc
and
cwtl
mov
jg
andb
push
mov
pop
adc
into
stc
xor
push
test
mov
fistps
xorb
js
das
sti
cs
mov
es
xor
pop
jne
mov
stc
out
cltd
push
adc
pushf
negb
push
xchg
paddb
sti
inc
adc
dec
jle
xor
movsl
xchg
mov
roll
pop
js
dec
popf
mov
xor
jecxz
or
sub
es
dec
fldt
mov
add
loopne
add
add
dec
insb
adc
stos
std
pushf
icebp
int3
pop
outsb
or
movsb
adc
leave
rcl
cmp
xchg
cmp
jg
icebp
mov
inc
lods
pop
sbb
mov
jne
pshufw
iret
push
fstpt
pop
inc
gs
loope
loop
mov
and
cs
repz
adc
mov
inc
stos
sub
mov
push
mov
lcall
popa
cld
in
orb
int3
loopne
sub
call
imul
cmp
mov
sub
jg
sti
aam
jae
and
cltd
pop
xchg
adcl
arpl
fs
dec
jmp
inc
dec
in
mov
fiadds
fnsave
cmp
inc
stos
enter
ja
imulb
pop
fstps
bound
in
ljmp
mov
adc
fsubl
pop
fiadds
out
jmp
push
and
rorl
inc
lret
cmpsb
or
mov
mov
mov
adc
sbb
fdivl
popaw
notl
fs
lods
lods
shll
add
inc
jns
pop
jp
xchg
nop
cwtl
ja
pop
inc
jno
mov
mov
into
or
mov
sbb
out
or
jg
sbb
push
push
vunpcklpd
mov
cwtl
adc
les
sub
mov
mov
xchg
aam
or
sbb
adc
cmc
pop
add
leave
jle
leave
push
repz
mov
sbb
jmp
mov
movsb
xchg
rorl
inc
adc
scas
or
mov
jg
mov
or
push
inc
hlt
bound
in
adc
xchg
popf
cmp
pop
xchg
in
enter
dec
sub
inc
dec
mov
icebp
push
mov
lea
xchg
pop
lds
icebp
sarl
jge
shrb
dec
sbb
mov
add
or
dec
push
mov
pop
xchg
lock
sub
ret
in
xorl
push
dec
jge
mov
mov
ljmp
ret
push
mov
mov
shl
mov
lret
enter
add
movsl
push
jge
iret
rcll
es
xorb
ljmp
push
mov
push
dec
dec
call
repnz
test
adc
pop
mov
inc
dec
les
mov
inc
mov
ljmp
sbbb
or
scas
rcr
cmc
pop
mov
lea
in
fisttpl
prefetch
loop
mov
mov
lea
fnsave
push
ss
cmp
xchg
lea
cmp
push
repz
clc
outsb
fcmovnbe
dec
inc
test
stos
pop
leave
mov
repz
js
jno
repnz
xlat
addl
jb
fwait
mov
and
sbb
call
mov
addr16
insl
pop
je
and
xchg
jg
imul
mov
ja
lds
movsb
xchg
shrb
insb
mov
jmp
lea
mov
roll
jmp
and
xchg
pushf
pop
dec
pusha
sar
adc
scas
loope
sbb
push
pop
dec
into
aam
add
cmp
fmull
add
dec
js
and
mov
sbb
sub
xchg
jo
pop
sub
cmp
les
ret
lods
add
adc
xchg
xor
jle
pop
insb
insb
out
cmp
outsl
arpl
shlb
in
pop
int3
out
fdivrl
iret
xchg
aas
jb
push
sbb
xlat
ss
pop
in
mov
mov
cmp
push
xorb
cmp
xchg
out
xchg
aad
or
sub
aad
pop
or
xor
mov
shlb
ja
cld
pop
out
fmulp
add
dec
add
push
inc
adc
adc
pop
jns
or
sbb
das
repnz
ret
sub
jb
push
xorb
mov
pop
adc
repz
or
xor
outsb
filds
std
sbb
mov
clc
xchg
add
push
pop
jae
lds
aam
dec
shrl
mov
stos
loopne
js
mov
stos
and
popf
mov
sbb
int3
push
dec
jns
enter
out
adc
mul
pop
xchg
out
or
sbb
mov
je
mov
stc
or
clc
int3
ss
popf
xchg
xchg
loopne
xchg
test
mov
sbb
xor
test
stc
lea
adc
aaa
cmp
jmp
sbb
shlb
jmp
pop
imul
xorl
cltd
test
xchg
jnp
inc
inc
inc
add
pushf
dec
xchg
jg
adc
sub
ret
call
pop
pop
arpl
mov
adc
pop
in
jo
xor
xchg
pop
leave
push
sbb
rcrb
add
jns
cmpsl
jmp
lret
cmp
pop
mov
sub
sub
push
shll
mov
mov
mov
int3
aaa
push
test
repnz
clc
lahf
mov
aad
fldl
btr
lcall
push
test
push
subl
xlat
inc
mov
test
cmp
je
adc
jne
xchg
push
xchg
subb
fidivl
iret
dec
rcrl
es
xchg
xor
pop
inc
xchg
jecxz
xchg
jne
lret
loope
stos
out
adc
xlat
add
lcall
adc
dec
xor
repnz
cmp
fadds
jmp
mov
fisttpll
cmp
or
je
idivl
insb
shlb
andb
insl
sbb
ret
shrl
in
andb
sub
into
pop
scas
jle
jae
cmpsl
mov
mov
xor
daa
mov
jnp,pn
xorl
push
fsts
fiaddl
lret
xchg
push
stos
bnd
mov
xchg
dec
sub
cs
pop
lcall
push
dec
pop
mov
push
insb
push
std
push
js
dec
int3
std
mov
ret
lret
daa
mov
orb
jno
pop
mov
sub
nop
lahf
push
sbb
mov
inc
cmp
scas
incb
xchg
jg
rorb
jmp
push
and
fisubrl
sub
out
mov
push
pop
mov
enter
add
int
neg
push
add
mov
scas
cmp
mov
popf
pop
imul
jg
mov
fadd
xlat
aad
idivl
mov
mov
fwait
xchg
cmp
orl
mov
in
sub
sti
aad
ret
inc
data16
jb
stos
jl
repz
test
out
cmpsb
test
out
xchg
or
add
mov
pusha
jecxz
pop
push
or
sti
fwait
lahf
jge
and
pop
cmc
sbb
stos
movswl
std
lds
ja
dec
push
out
adc
test
mov
adc
inc
mov
data16
icebp
movsl
jne
into
pop
sar
lock
pop
jmp
mov
jle
jge
std
nop
inc
add
in
test
icebp
mov
sbb
je
push
mov
pop
inc
adc
cltd
fbld
aad
sub
add
test
cmp
cli
xor
in
rcll
arpl
sbb
pop
lock
sete
mov
int3
imulb
pop
repnz
imul
or
or
out
and
fildll
xchg
loopne
rclb
xlat
fs
les
mov
lods
push
dec
lret
data16
in
xor
fxch
div
mov
mov
sbb
jmp
push
adc
enter
daa
sbb
lret
xchg
mov
add
popa
jns
add
not
mov
shrl
and
fsubrl
stc
outsb
lods
xor
js
adc
std
in
cltd
sub
pop
jnp
add
loopne
cmp
ret
mov
mov
add
add
dec
pop
shlb
sbb
mul
xchg
push
in
int3
mov
getsec
popf
ret
add
clc
addr16
xchg
jge
icebp
int
scas
bound
mov
add
and
add
push
jp
add
jne
stos
cmpsb
jl
pushl
fcoml
roll
jno
pop
mov
outsb
push
popa
bound
adc
test
mov
add
lods
das
stos
jno
sarl
dec
xor
xchg
lds
push
add
pop
mov
or
ljmp
icebp
rorb
in
imul
jo
push
and
dec
sbb
pushf
repz
sbb
sub
stos
sub
inc
ss
hlt
cmp
cmp
jle
mov
mov
iret
lahf
or
push
pop
cmp
clc
popa
out
xchg
sub
push
xor
rorb
lods
ss
cmpsl
pop
sub
jg
inc
sti
inc
dec
mov
sbb
mov
shlb
arpl
shll
out
inc
dec
mov
push
jmp
test
sarb
jecxz
sbb
scas
addr16
rorl
jne
divl
fs
fldenv
fwait
sub
cmp
add
in
jae
shll
cltd
xchg
les
sbb
inc
and
lock
lock
ret
add
jnp
inc
add
idiv
mov
ss
cmp
lret
jbe
rcr
mov
jbe
xor
xchg
xor
nop
mov
xchg
cwtl
xchg
dec
ret
ds
cld
cmpsl
test
sub
xchg
mov
mov
out
or
push
jp
push
arpl
mov
ljmp
xchg
iret
imul
xor
int
sbb
aad
push
push
inc
adc
popf
gs
sub
xchg
jle
xchg
dec
dec
sbb
sbb
xchg
inc
dec
js
mov
push
add
jg
fsts
sbb
pop
lea
and
add
jmp
ss
lcall
lods
nop
repz
pusha
mov
sbb
add
les
xchg
xor
dec
push
jmp
call
in
stos
in
dec
mov
push
sub
popa
subb
mov
es
mov
cs
lret
cli
sbb
aam
adc
or
or
jo
lahf
mov
adc
aaa
inc
cltd
and
punpcklwd
shl
dec
fdivs
ret
cmp
pushf
xlat
adc
ss
xor
test
push
fildl
and
mov
fcmovnu
mov
pop
repz
push
lock
loop
lods
sbb
pop
stos
push
push
cmp
rol
mov
lea
aam
lods
fisttps
popf
sbb
imul
jo
mov
xor
and
test
jo
out
jle
hlt
bound
scas
push
adc
je
shl
push
clc
movl
test
jnp
insl
add
sbb
lock
xchg
out
mov
and
test
cli
sar
or
mov
fcoml
sub
imul
jle
or
movl
dec
cli
or
push
faddl
cmp
jge
rorl
add
pop
test
inc
out
cmp
ljmp
loope
rcrl
cmp
xchg
pop
sbb
icebp
imul
inc
cli
sbb
je
push
adc
push
adc
jp
push
or
mov
ljmp
mov
jmp
xchg
push
jo
lcall
pop
sbb
mov
loop
mov
fidivs
jns
lock
sbb
jne
xchg
or
icebp
sub
mov
jbe
ud2
mov
jns
sub
sbb
sbb
mov
push
in
xchg
xchg
adc
imul
add
lret
fcompl
xor
mov
or
arpl
sahf
fildll
dec
sbb
add
inc
shll
mov
jge
lcall
scas
xchg
fcomip
mov
out
mov
into
or
mov
fimull
jnp
dec
cli
xchg
push
or
jmp
mov
fbstp
imul
push
imul
cld
imull
xor
cmp
insb
lock
xchg
stos
mov
mov
jmp
pop
mov
or
mov
jne,pt
xchg
ret
mov
cltd
add
psubusw
xchg
iret
fcompl
pusha
cltd
jns
mov
pop
int
push
lods
push
imul
jno
xchg
sbb
mov
mov
pushf
push
jb
mov
cmc
jae
js
xchg
les
clc
or
fs
pushf
out
sub
insb
mov
and
jnp
xor
add
and
outsl
cmp
and
sbb
inc
rolb
mov
mov
sbb
mov
daa
out
mov
dec
lds
in
les
cmpsl
xchg
add
ljmp
xchg
insb
jns
pop
sub
popa
std
sub
shll
cmc
and
push
mov
mov
shl
std
popa
jno
cmp
enter
dec
aam
dec
mov
leave
xchg
adc
shrl
push
xchg
test
into
insl
dec
nop
imul
jle
js
and
pushl
cmp
rorb
mov
sbbl
cmp
js
xchg
sub
jnp
and
push
jne
ret
mov
and
int
stos
fcomi
lahf
addr16
lret
adc
ret
sarl
xor
imul
nop
out
jns
pop
rcrb
pop
mov
xor
add
or
mov
adcb
dec
outsb
dec
es
jb
xor
lock
mov
add
je
mov
gs
add
jb
add
inc
inc
sub
mov
push
mov
push
pop
lods
push
lcall
push
out
das
xchg
sub
pop
es
gs
pop
repnz
jo
fdivrs
push
cltd
das
addl
imul
in
cld
xlat
inc
dec
cld
mov
mov
mov
inc
push
dec
stos
jno
in
and
xchg
push
jo
or
insl
mov
cmp
out
notb
in
mov
cwtl
jno
mov
mov
xchg
inc
or
gs
in
dec
adc
jl
rcrl
dec
out
mov
sti
inc
bnd
mov
mov
push
decb
sub
mov
cmp
out
xchg
jo
pop
ret
xchg
pop
adc
sbb
pop
pop
xchg
scas
push
into
sbb
pop
push
and
fmul
and
imul
clc
xor
adc
fistl
cmp
inc
mov
into
inc
dec
dec
cwtl
adc
inc
ret
xchg
xchg
xor
xor
lods
xchg
lret
lods
popa
inc
jnp
add
push
addl
cmc
frstor
pop
popf
aaa
and
enter
pushf
cltd
dec
repz
sbb
and
lock
cmp
xor
pop
xchg
into
xor
cmp
lret
stos
sub
mov
or
mov
in
mov
pop
out
imulb
ja
xor
pop
icebp
lret
dec
clc
push
inc
aad
mov
std
mov
fisttpll
imul
les
sti
push
or
movsb
mov
out
imul
and
cmp
repnz
lea
jne
pop
adcl
pop
fs
test
shrl
pushf
std
push
pop
aas
mov
adc
movsb
rorb
xchg
imul
insl
mov
cmp
aas
mov
fisubs
lcall
cmp
add
mov
lret
cmp
leave
and
bound
ror
int3
mov
gs
mov
jg
and
int3
dec
ret
mov
push
inc
popa
fadd
test
push
stos
xor
shrb
dec
cmp
xor
pop
les
xor
push
and
or
or
xor
scas
adc
pop
jno
cli
rcrl
rolb
pushf
stos
stc
aam
dec
and
notb
je
lret
mov
and
in
inc
jb
sbb
sub
arpl
test
xor
lret
test
test
push
push
test
inc
cltd
add
xor
push
inc
sbb
sub
fldl
sub
pop
out
outsb
data16
gs
mov
aam
icebp
jae
addr16
sub
fistpl
or
xchg
sbb
and
sub
and
test
push
sti
gs
pop
ret
fwait
cmp
jbe
jmp
call
push
mov
rolb
aas
lea
and
fwait
cmpsl
cltd
pushf
insl
mov
sbb
enter
test
sahf
in
add
jge
sub
jae
mov
test
fstpt
xchg
jecxz
int
out
inc
mov
ret
mov
and
outsl
addr16
lock
mov
adc
testb
leave
sbb
add
aas
jnp
dec
mov
leave
imul
std
jle
popa
xchg
cmpsl
in
mov
push
or
jo
push
sbb
mov
ret
or
xor
xchg
adc
dec
ss
push
adc
add
add
das
sbb
movsl
inc
sbb
fcoml
out
fdivrl
adc
popf
adc
and
popf
inc
test
xor
movsl
pop
shlb
sub
bound
fidivs
push
sti
xchg
fwait
push
sbb
cmp
movsb
and
fbld
rolb
out
pop
jmp
pop
mov
adc
mov
pop
fcoms
shlb
adc
idivl
pop
das
lods
inc
pop
xor
pop
pop
and
cmp
xor
aam
int3
jge
xor
mov
push
push
cmp
fdivs
xlat
mov
adc
test
roll
into
jae
sbb
mov
xchg
pop
adc
jne
daa
insl
int
and
out
pop
and
in
call
repnz
adc
stc
sbb
xchg
xchg
sti
push
ror
dec
mov
divb
or
mov
outsl
sti
mov
jmp
mov
enter
pop
mov
adc
push
dec
xor
push
imul
cmp
push
add
jl
jmp
je
test
ret
sbb
es
je
subb
cmp
inc
sub
pusha
xor
sbb
adc
mov
cltd
push
dec
jg
dec
jp
and
mov
cmpsl
movsb
das
inc
insl
cwtl
ljmp
movsb
aaa
sub
mov
sahf
cmp
clc
stos
testl
imul
xchg
add
pop
pop
and
push
jp
pop
insl
in
jb
inc
popf
add
adc
mov
add
loop
lods
int
ja
xor
add
iret
les
outsl
call
sahf
inc
repz
lock
pop
enter
adc
cmp
push
daa
push
ljmp
mov
pusha
jnp
rorl
adc
pop
fldt
popf
lret
push
mov
ficompl
imul
jno
stos
jge
pusha
repnz
scas
js
dec
clc
and
mov
addr16
mov
imul
repz
out
fimuls
add
scas
into
scas
mov
scas
loop
or
add
data16
jno
push
push
xor
or
pusha
and
js
jne
into
xor
jp
and
and
mov
mov
mov
insl
fadds
jl
ljmp
pop
cmc
ret
loop
adc
add
daa
cmpsl
imulb
mov
dec
fiaddl
and
out
inc
jecxz
jge
das
arpl
push
mov
and
stos
shl
mov
test
mov
lock
es
aam
popa
pop
or
fstl
dec
push
mov
adc
jle
std
xlat
ljmp
das
mov
add
test
cmp
and
daa
pop
fsubrl
sbbl
mov
in
es
out
lret
add
sbb
xor
prefetch
xor
xchg
imul
inc
push
fwait
jae
xchg
add
sub
sub
sbb
loope
les
sbb
test
imul
rcrl
movsb
mov
xchg
sbb
testl
xor
push
out
mov
lcall
cmp
sub
lcall
ja
mov
sub
mov
push
outsb
dec
ret
divb
inc
hlt
push
adc
fisttps
xchg
fnstenv
xor
int3
inc
jmp
rol
dec
and
add
xlat
or
jb
dec
or
je
outsl
movsb
mov
out
scas
add
into
fcomps
repnz
xor
xor
xchg
imul
mov
mov
fdivs
inc
testl
pop
test
cmp
and
sub
shrl
leave
pop
jmp
sbb
ds
push
lods
test
jbe
in
aam
enter
decb
stos
cmpsl
cmc
xchg
xchg
popa
fcmovu
push
inc
add
and
dec
dec
xor
clc
loope
inc
mov
div
dec
lcall
ja
dec
and
mov
popf
cli
sbb
fbld
sub
mov
rep
adc
mov
adc
es
pop
test
cmpsb
sub
xor
pop
pop
sub
cmp
mov
inc
push
outsl
mov
mov
jns
fnstsw
push
mov
in
dec
cmp
loopne
sarl
xchg
outsl
jae
rdpmc
mov
or
or
outsb
std
xor
cmp
xchg
int
mov
decb
mov
cli
test
enter
jnp
push
mov
out
rcll
push
xor
out
push
and
inc
mov
cmp
push
mov
cmp
mov
icebp
ljmp
mov
aas
xor
stos
adc
pusha
icebp
xor
test
js
lods
pop
sub
outsl
cmp
mov
dec
pop
jp
mov
jno
es
sub
les
bound
jne
or
hlt
xor
add
loopne
popf
in
mov
xchg
dec
xchg
pushf
xchg
fs
fs
jbe
add
inc
mov
adc
rcr
ss
or
mov
add
fisubs
mov
dec
pop
in
out
testb
pop
and
arpl
jg
lods
sbb
std
stos
sub
rclb
adc
enter
cmp
add
sbb
jb
mov
outsl
sub
cs
dec
xor
xchg
into
pop
mov
insb
jne
loop
cmpsb
push
jp
mov
cmc
test
aam
sub
scas
es
fmuls
or
dec
rcr
inc
mov
push
jo
test
pop
paddsb
cmpsb
lcall
xchg
popf
insl
imul
mov
xor
int3
in
insl
in
icebp
sbb
push
je
orb
xchg
sbb
sahf
pop
je
movsb
mov
lds
cli
adcl
out
popa
xor
cltd
in
pop
inc
jecxz
in
mov
test
xchg
adc
sub
pop
jl
stos
clc
push
jns
stc
push
insl
fisubrl
mov
fmuls
add
dec
stos
add
push
or
dec
std
faddp
add
rclb
mov
pop
test
mov
gs
xor
xchg
icebp
mov
out
nop
adc
push
mov
jecxz
inc
aam
or
sbb
lahf
and
cmp
stc
lret
jbe
in
add
cli
movsb
aam
imul
pop
mov
fistl
or
shl
xchg
cmp
sbb
inc
divb
pusha
mov
arpl
aaa
jmp
cmc
push
popa
cmp
fmuls
outsl
not
fcoml
sbb
push
jae
popa
mov
jb
jge
jl
push
push
movsb
scas
dec
inc
insb
fwait
xor
add
test
cmpsb
xor
mov
je
lret
adc
movsl
cs
insb
stos
std
mov
or
std
cmpsl
and
adc
leave
lcall
mov
xor
lods
xlat
rorb
int3
stos
imul
pop
cmpsl
ret
jbe
test
ret
dec
mov
dec
dec
push
clc
jne
mov
jae
mov
push
xchg
mov
dec
push
movsb
bound
jecxz
or
cmp
cmp
pop
loope
and
rolb
or
fildl
shlb
test
mov
mov
cld
inc
loopne
pop
xchg
mov
mov
push
or
shlb
cmp
jb
xchg
lahf
ljmp
inc
fisubrl
aaa
fst
testb
in
inc
stos
je
xchg
xor
lret
negb
sbb
mov
sbb
stc
cmp
arpl
lret
dec
or
aas
ds
mov
push
push
xor
ret
loope
xlat
adc
mov
dec
jne
and
cmp
inc
cmp
sbb
inc
pop
mov
clc
mov
add
es
xchg
dec
in
pop
adc
pop
stc
stos
inc
cmp
cmpsl
xchg
cltd
mov
test
xor
into
shlb
jne
out
insl
mov
gs
outsb
push
mul
inc
mov
rclb
mov
outsl
lods
sub
loope
cmpsb
pop
pop
jb
adc
in
mov
push
add
dec
out
fxch
cmp
lock
cmp
adc
fcompl
into
arpl
lret
push
cmp
popf
les
test
jp
int
sbb
cmc
cmp
push
dec
rcrl
or
test
fldl
sub
sub
es
das
mov
dec
imul
rcll
mov
jbe
mulb
xchg
je
fdivp
inc
popa
push
dec
ja
sbb
sub
jo
popf
push
ds
cli
aaa
push
mov
sub
mov
stc
push
xor
mov
outsb
into
loope
xchg
jae
ljmp
mov
sbb
icebp
addr16
xchg
cmp
or
call
xor
dec
jmp
cmpsl
iret
mov
push
cltd
loopne
rcr
push
mov
das
pop
cmp
out
lods
out
and
scas
adc
dec
xchg
push
add
xchg
pusha
jg
jae
fwait
sarl
xchg
orl
sub
int
lds
jbe
push
jbe
pop
ss
push
add
in
push
jb
sub
push
add
rorb
lea
mov
mov
mov
push
jbe
repnz
popf
pop
mov
aam
js
or
mov
pop
stos
into
jnp
aas
sarb
jae
pushf
or
cmp
xchg
mov
mov
xor
jl
icebp
aas
movsl
xchg
push
adc
stc
mov
add
cmp
nop
in
ja
dec
xor
add
push
enter
vpaddd
mov
or
fistpll
cmpsb
fwait
cmp
test
jl
xchg
dec
mov
jae
idivb
add
push
adc
lea
push
sbb
cltd
in
and
mov
inc
movsl
push
jp
stc
push
fldl
sub
push
sbb
das
push
jae
shrl
pop
fidivrl
mov
lods
mov
mov
push
push
cmpsl
and
js
sub
cmp
ja
popf
ljmp
aam
sbb
sub
outsb
jno
mov
js
xor
es
push
faddl
and
cmpsl
out
rcr
add
out
aas
inc
aad
rcrl
aam
sbb
xor
imul
test
gs
dec
daa
mov
sti
jg
or
xchg
je
jbe
jge
and
test
fnsave
push
mov
pop
gs
lds
in
xchg
loop
dec
sub
add
xchg
out
in
lock
add
sub
arpl
push
jg
addl
jae
or
or
mov
xchg
inc
push
adc
xchg
sahf
xor
or
adc
lret
add
mul
pop
push
mov
fstl
data16
mov
push
xchg
dec
jae
mov
add
stos
popa
and
lods
push
pushl
aam
push
ret
add
mov
imul
outsb
cwtl
dec
or
or
add
cli
cmpsl
ds
into
aad
push
fisubl
scas
cmp
xchg
pop
movsl
pop
xchg
aaa
cwtl
add
into
jns
adc
enter
push
mov
pushf
sub
clc
scas
daa
rcl
and
mov
jmp
mov
sbb
and
dec
loope
fxch
loop
ret
ss
sub
mov
stos
outsb
les
mov
fsubl
sbb
imul
pusha
xor
lods
mov
sub
or
pop
pop
fcmove
mov
jmp
xchg
scas
dec
adc
adc
pop
gs
mov
xchg
ret
fadd
jno
sti
jl
imul
out
jge
cs
cmpl
ljmp
mov
mov
int3
nop
cmp
and
clc
jae
mov
mov
ror
mov
jecxz
pop
mov
fsubrp
cwtl
inc
ss
loope
mov
inc
mov
sub
rorl
adc
adc
imul
cmp
stos
call
dec
in
mov
enter
stos
push
adc
test
nop
fstpt
mov
sahf
ror
and
lret
sti
rol
cwtl
fldcw
scas
dec
or
sbb
jmp
arpl
fcomip
or
pslld
loop
mov
fildl
or
xor
push
mov
lods
xchg
popf
adc
sub
sub
aaa
or
idivb
push
jl
add
lock
adc
gs
pop
in
mov
push
push
lds
dec
xor
pop
or
cli
adc
scas
sbb
sbb
jnp
inc
pop
jp
jns
icebp
push
scas
aam
imul
mov
adc
adc
or
into
pop
mov
inc
fsubr
sbb
mov
pop
iret
orl
mov
mov
pop
cli
mov
shl
pop
test
test
xorl
sub
lret
clc
inc
xor
icebp
inc
rclb
loopne
notl
xor
jnp
sub
push
out
pop
cltd
sub
arpl
cmpsb
out
jg
mov
mov
and
imul
call
in
addr16
test
jb
cltd
and
popf
outsb
cmp
arpl
out
ret
std
aaa
adc
jmp
nop
cmp
dec
mov
ret
adc
rcll
lds
jo
or
outsl
mov
xor
sbbl
adc
adc
repnz
pop
fwait
sub
leave
add
rcrl
sub
and
lcall
jle
stos
mov
sbb
lret
ja
add
sbb
jmp
mov
lcall
lds
or
adc
mov
std
inc
orl
jnp
dec
jo
clc
inc
mov
das
std
loop
dec
out
mov
pop
cmp
dec
lret
sbbb
cmpsl
ljmp
sbb
sbb
enter
icebp
dec
mov
popf
add
push
sub
lret
dec
xchg
or
pop
lds
jb
and
cltd
xchg
cmp
dec
mov
movsl
scas
ret
out
pushf
rcrl
int3
aaa
jle
xchg
inc
sbb
stos
mov
push
adc
adc
mov
dec
repz
testb
xchg
push
ja
insb
inc
xchg
sarl
out
rorl
js
jle
sbb
or
adc
fwait
ror
js
icebp
imul
pop
leave
mov
jle
fisttpl
xor
in
push
push
sub
jg
sbb
mov
nop
pushf
cmp
mov
shll
xchg
stc
cmp
push
pop
leave
test
mov
mov
test
push
jecxz
scas
push
mov
sbb
ljmp
mov
fnsave
or
js
sub
mov
lcall
dec
pop
push
pop
addl
cmp
sub
lods
mov
rcrb
nop
jmp
fwait
adc
push
test
andl
sbb
xor
adc
mov
dec
fildl
pop
imul
mov
dec
aam
cs
imul
scas
adcb
or
adc
into
inc
push
xchg
push
pop
andl
insb
pop
cmp
push
stos
jae
xchg
loopne
push
fidivs
fldenv
or
fnstcw
sbb
aas
je
repz
xor
ficomps
and
mov
inc
dec
mov
and
mov
aaa
out
jl
filds
mov
leave
add
add
dec
xor
push
and
fisubs
fistl
mov
cwtl
push
jns
cmpsb
pop
mov
aam
push
xlat
mov
jo
in
ret
mov
fdivl
add
pop
incb
jne
movsl
dec
int
rorl
data16
lods
fsubrl
push
pushf
mov
int3
adc
mov
cmp
pop
iretw
and
jecxz
xor
repz
and
js
or
mov
jp
enter
pop
not
push
push
mov
test
icebp
mov
cwtl
push
jp
mov
in
aad
arpl
pop
ret
sti
out
cmpsl
push
call
cld
mov
mov
pop
pop
enter
ret
mov
jns
test
mov
mov
xor
test
je
add
jg
xor
das
in
dec
inc
jecxz
inc
mov
stos
mov
sbb
mov
xor
bound
stos
sarb
sbb
out
mov
je
negb
xchg
mov
pop
lahf
add
adc
sub
push
xchg
sub
and
lock
push
into
and
insl
xor
lods
adc
xchg
mov
jnp
lahf
ljmp
sahf
mov
adc
cmp
in
inc
sbb
movsl
mov
dec
add
or
pop
add
xchg
lret
push
fmuls
mov
mov
arpl
lods
or
push
jecxz
aam
sub
ss
in
or
push
push
pop
test
cmc
fnsave
or
jmp
or
jg
loop
and
inc
add
pop
push
mov
scas
les
and
and
sub
negb
pop
inc
xor
mov
add
or
std
cmp
pop
push
lret
dec
push
movsb
add
sbb
repz
aam
mov
in
jns
xchg
xchg
repz
int3
xchg
fimull
fisttps
pop
xlat
cmp
xor
jno
pop
insl
jno
ret
es
sbb
xchg
sub
imull
mov
lea
pop
sbb
jnp
repnz
mov
aad
adc
add
idiv
push
pop
movsl
push
mov
jle
pop
cmp
imul
ss
in
jbe
scas
xor
fnstcw
in
mov
adc
dec
movsb
out
gs
sub
lock
xor
ja
shl
hlt
adc
test
imul
cli
push
lods
pop
jbe
ljmp
xchg
mov
mov
aas
jmp
lret
divb
cmp
popa
adc
hlt
sbb
or
in
mov
loop
dec
xchg
add
stos
xchg
jb
sti
jmp
sbb
jo
xchg
xor
icebp
lcall
fiaddl
or
ret
lods
pushf
xchg
or
movsb
cmp
xor
add
pop
popa
mov
or
adc
adc
bound
pop
nop
jmp
out
push
xchg
scas
cwtl
ljmp
call
fstl
mov
aas
nop
shl
les
or
rorb
jnp
adc
call
pop
push
loop
sbb
inc
in
and
mov
jne
add
jne
out
fwait
xor
xor
xor
int
cltd
pop
mov
out
pop
dec
inc
cmp
push
sub
sbb
push
and
xchg
sub
cli
lahf
mov
mov
pop
xchg
repnz
jg
xor
js
mov
or
sti
daa
lcall
jbe
inc
mov
movsl
adc
or
xchg
sub
out
out
xor
std
dec
adc
outsl
dec
mov
add
xchg
sbb
fndisi(8087
ret
cmp
adc
jmp
outsb
scas
or
ret
cmp
dec
lods
mov
cli
jno
and
mov
fidivs
cmpsl
cmp
mov
mov
or
imul
icebp
sub
mov
dec
ss
jcxz
pop
mov
or
cmpsb
out
bound
xor
cld
psubw
pusha
dec
mov
dec
jl
incb
rcl
decl
shll
in
push
mov
inc
cltd
xchg
mov
xchg
cmp
push
movsl
mov
jns
mov
fnstsw
daa
lret
sbb
in
call
xchg
mov
push
push
imul
push
cmpsl
push
lods
mov
sahf
cmp
cltd
fsubrp
sub
test
push
jle
dec
cld
test
ljmp
pop
mov
fcoml
sbb
in
gs
icebp
mov
lock
fs
inc
testb
iret
mov
adc
dec
inc
jg
loopne
or
push
cmpsl
daa
jecxz
or
cmp
ja
push
lcall
packuswb
iret
and
jns
xchg
stc
dec
cmp
lods
cmp
imul
shl
xor
or
jnp
or
push
xlat
xchg
and
mov
jne
xor
hlt
aam
sbb
jb
loope
xchg
jns
addr16
add
movb
rol
mov
js
dec
mov
int3
jns
stos
filds
movsb
lds
scas
movsl
dec
sbb
in
mov
ja
addb
lods
push
inc
pop
jmp
push
dec
push
bound
je
mov
aaa
clc
adc
leave
sbb
jecxz
pop
sbb
or
push
lds
hlt
daa
test
lds
pop
mov
mov
sbb
inc
xor
add
imul
dec
push
jg
je
dec
nop
or
sub
mov
outsl
test
cmp
out
call
mov
pop
mov
jb
cmp
sti
cmp
nop
outsl
sub
mov
mov
stos
insb
lea
add
gs
test
lcall
sub
cld
icebp
mov
xlat
rorl
push
or
cmp
lcall
test
cmp
add
jle
mov
adc
aad
dec
xor
mov
cmp
push
dec
push
clc
xlat
and
pop
add
cmpsb
out
clc
dec
int3
orb
pushf
dec
pop
lea
sbb
sbb
popa
outsl
xchg
cmpsb
jecxz
xor
dec
dec
jno
incl
mov
jl
cs
pop
xchg
jmp
add
cmp
or
dec
xor
xchg
add
push
inc
popa
je
scas
sub
jae
test
call
into
xor
xor
aas
sub
daa
push
leave
aad
xor
add
push
xchg
cmpsl
xchg
pop
je
lods
movsb
xchg
or
or
daa
dec
ds
mov
and
push
fidivs
insb
pop
jnp
pop
in
pop
push
mov
cmp
sti
aam
add
test
inc
cmp
ds
push
and
shl
mov
dec
push
or
add
jne
xor
dec
inc
xchg
and
xchg
fstps
arpl
int3
mov
mov
pop
mov
add
or
xlat
outsb
enter
loop
cwtl
loopne
iret
imul
leave
imul
in
ss
pushf
cli
mov
and
add
xchg
insb
mov
icebp
pop
out
push
mov
test
adc
dec
push
sub
out
dec
push
fldcw
jne
popa
jmp
js
push
jo
fs
mov
pop
imul
xorb
repz
sbb
mov
dec
sub
pop
push
and
mov
loope
cmp
inc
pop
jle
mov
fpatan
or
gs
mov
sbb
into
push
cmpsl
pop
in
add
outsl
mov
xor
xor
mov
mov
sub
sbb
xchg
bound
dec
and
ret
mov
cmc
psubq
ds
test
scas
jnp
enter
sbb
lret
pop
mov
jecxz
fcmovbe
xchg
lcall
pusha
hlt
pop
xor
dec
es
loope
or
jns
enter
aam
rcrb
ret
add
add
pop
inc
pusha
sub
xchg
push
cmpsl
lds
mov
xor
mov
mov
cmpsb
pop
mov
popaw
lcall
out
ds
in
and
cmp
jnp
fmul
and
push
mov
pop
cmp
ss
push
add
xchg
shr
fidivrs
and
push
icebp
scas
push
add
popa
jle
aad
cmp
mov
sbb
iret
int
int3
imul
cmpsb
adc
subb
add
dec
in
inc
mov
pop
jg
int
jb
pop
push
out
cmp
inc
jl
mov
pushf
jg
lcall
mov
mov
stc
into
jnp
test
lds
lret
jb
and
xor
mov
sub
dec
cmp
ret
add
sub
int
add
fnstcw
inc
cmpsl
and
imul
aas
inc
push
jl
cmpsl
pcmpeqw
loop
xor
ljmp
mov
add
aad
fbstp
outsb
aam
lods
xchg
ss
and
test
sbb
nop
jmp
xor
call
xor
fistps
in
xchg
arpl
push
lret
sbb
sub
add
fwait
pushf
shrl
jg
sub
push
outsb
sub
cmp
add
add
les
xlat
jns
adc
movsb
aam
sbb
jb
mov
loopne
testl
movsl
out
sbb
sub
loopne
shl
lcall
push
mov
sbb
rclb
in
popa
fsubrl
xchg
gs
pop
jmp
adc
inc
xor
xor
adc
xor
push
inc
cmp
fs
push
clc
mov
cmp
daa
insl
insl
xchg
jmp
int3
clc
fildll
xchg
icebp
cmp
cmp
sub
adc
mov
mov
jae
push
sarb
pop
push
inc
loop
jnp
dec
addr16
pop
jge
mov
cmp
das
lock
cmpsl
inc
cltd
fs
inc
lds
xchg
rorl
xchg
xchg
ss
je
dec
mov
adc
and
mov
js
mov
and
mov
fstps
jnp
les
cs
ss
scas
aad
in
cmp
add
sbb
push
xchg
mov
cld
sbbl
adc
popa
sub
repnz
out
mov
data16
out
int3
jle
add
cwtl
sub
xor
dec
adc
jle
aam
test
cmp
mov
push
mov
popf
cltd
jl
shlb
xchg
and
mov
dec
test
xor
out
lahf
jne
pop
loope
stc
pop
cltd
dec
mov
aas
mov
ja
adc
fisttpl
xchg
mov
mov
aad
jne
imul
arpl
sbb
stc
imul
pop
mov
pushf
out
aaa
testb
pop
xlat
jns
push
xchg
push
pop
inc
js
out
call
jmp
ljmp
outsb
das
loopne
jnp
sbb
pop
jns
fwait
lret
cmp
inc
xchg
jge
mov
repz
js
arpl
xchg
xor
jle
inc
sbb
nop
int
mov
iret
movsb
and
xlat
pop
cs
dec
iret
pushf
inc
sbb
mov
sti
pop
out
pop
dec
and
push
iret
loopne
cwtl
imul
sti
pop
ss
js
mov
nop
fs
fwait
in
daa
dec
xchg
push
xchg
or
lods
aad
lods
pop
push
cmp
push
leave
sbb
lock
imul
mov
loopne
scas
pop
xor
stos
jne
mov
in
mov
sbb
sarb
aaa
sub
xor
movsb
imul
sub
jg
test
cmp
mov
rclb
jge
or
mov
pusha
mov
add
out
mov
testb
jns
cmpsl
das
jmp
out
push
jnp
jnp
push
decl
jb
xchg
jnp
leave
fs
loop
push
fistps
cmpl
xor
jno
xor
xor
pop
sahf
push
add
jae
lods
and
mov
scas
call
je
inc
outsl
inc
and
dec
sub
mov
push
insl
cmpsl
lods
cmp
stos
jno
inc
pushl
movsl
mov
nop
repnz
push
mov
sti
mov
jl
xor
sahf
cmpsl
inc
xchg
pop
test
jmp
mov
rcrl
out
int3
pop
stos
xorl
fists
sbb
sarl
inc
ss
xchg
ret
pop
jbe
fwait
mov
add
or
dec
test
ficompl
std
add
push
cmpsb
inc
in
cmp
sti
inc
movsb
pushf
loopne
push
hlt
jne
int
xor
and
sbb
jb
or
fsubs
pop
dec
xor
mov
scas
mov
add
push
adc
in
rorl
inc
movl
mov
pop
sti
or
inc
pop
push
rclb
in
cmp
repz
or
push
push
or
sahf
std
add
ljmp
sub
xchg
scas
sbb
jg
fldcw
test
mov
pop
sub
mov
movsl
mov
dec
je
jge
scas
or
lods
shlb
sahf
shll
repnz
cld
ljmp
cmp
pop
ss
dec
sbb
xor
sub
in
ret
imul
sub
adc
fdivl
add
lret
push
clc
pushw
jne
loopne
out
inc
cmp
cld
lea
rcrl
mov
mov
mov
out
add
in
inc
cmp
xchg
xchg
inc
inc
pushf
jbe
mov
test
movsb
in
sub
adc
or
or
fisubrl
xchg
cmpb
cmp
inc
mov
insb
cld
mov
lods
mov
push
push
add
in
and
fildll
jmp
adc
scas
mov
jmp
dec
negb
sub
hlt
addb
fstpt
inc
cmp
jae
xchg
lock
mov
jns
das
in
jno
cld
out
mulb
in
stos
cmp
outsb
hlt
add
push
and
mov
lds
sarl
or
jecxz
sti
cmp
cmp
loop
imulb
enter
mov
dec
pop
jb
cmpsb
pop
out
daa
lods
shrb
and
pop
test
mov
lahf
rcrb
in
inc
push
insb
lcall
push
pop
je
inc
imul
flds
lods
mov
mov
jg
fwait
mov
lods
ljmp
dec
mov
jb
dec
mov
inc
mov
mov
xchg
jae
out
rcll
mov
mov
mov
cmpsb
ss
fadds
js
arpl
mov
popa
mov
les
popf
cmpsl
mov
mov
cld
adc
add
insl
dec
cld
fadds
scas
outsb
aaa
aad
aam
inc
das
pop
pop
or
enter
inc
loopne
mov
cltd
jge
fiaddl
xlat
mov
fs
or
and
leave
rorl
loope
pushf
pop
roll
push
cmp
jg
pushf
aam
dec
in
add
mov
xchg
inc
in
ss
imul
test
dec
adc
mov
test
outsb
fiadds
adc
mov
push
mov
xor
inc
cmp
in
add
movsl
cmp
ljmp
and
inc
adc
dec
movsb
sbbl
insl
inc
mov
adc
insb
sbb
adc
sub
jp
roll
adc
cmp
insb
imul
push
jmp
in
rcll
aas
jno
mov
pop
mov
insb
fstps
lcall
fiadds
test
aam
test
jno
dec
call
movsl
outsb
mov
gs
ljmp
pop
test
ja
idivb
dec
adcb
dec
push
jnp
insb
dec
pop
in
push
mov
adc
movsl
jae
pop
lds
test
mov
in
in
mov
sbb
ds
adcl
in
sbb
adc
bound
fildll
push
test
gs
push
xchg
adc
enter
mov
fimuls
dec
sub
lcall
hlt
push
xchg
and
loope
xchg
imul
inc
jge
jle
stos
std
and
loope
in
stos
out
shlb
enter
sbb
cmp
cli
mov
outsb
xor
cmp
add
push
sub
fsubr
push
xor
outsb
icebp
push
in
addr16
hlt
or
test
or
pop
cwtl
clc
adc
and
cwtl
lea
push
cli
adc
pop
pushf
stc
daa
xchg
enter
jo
or
push
xchg
lods
mov
test
adc
int
stc
test
int
xchg
lahf
fcmovnu
out
mov
rcll
push
movsl
mov
in
orb
push
jl
rorl
or
pop
lods
cwtl
and
not
push
in
iret
lret
and
lea
hlt
jecxz
xchg
mov
insl
jl
fisttpll
cli
pop
popf
xchg
lock
xor
add
cmp
pop
xchg
in
repnz
xchg
pop
jb
aas
shrb
and
insb
cmp
add
or
icebp
adc
and
dec
push
pop
out
scas
lret
pop
mov
pushf
bound
fwait
dec
pop
in
pop
fwait
cmp
stc
and
adc
lcall
xchg
push
pop
jle
pop
dec
je
lret
xchg
jno
inc
arpl
imulb
pushf
push
sarl
dec
xchg
jp
sti
pop
in
cmp
fidivrl
mov
test
repz
sbb
clc
fistpll
xchg
imull
jl
rep
and
ficoml
data16
mov
pop
cli
es
pop
xor
les
ss
in
into
ljmp
fwait
cld
pusha
jne
js
jne
mov
popf
sbb
or
mov
std
nop
call
mov
mov
mov
in
mov
fistpl
xor
or
lock
cmp
fidivs
sub
and
add
adc
int
stc
jne
insl
push
loop
or
aaa
mov
in
mov
or
mov
cmp
push
pop
test
lcall
push
cmpsb
adc
dec
adc
hlt
sub
movl
push
mov
arpl
sti
sub
inc
push
add
mov
out
loopne
cmp
mov
add
cwtl
int3
or
nop
push
aas
pop
xchg
xlat
mov
push
pop
xchg
frstor
sbb
push
scas
mov
ffreep
xlat
inc
cld
sbb
or
sub
inc
cmpsl
pop
loop
mov
inc
dec
jg
jbe
jmp
push
das
pop
mov
push
push
sti
enter
jp
mov
stos
andb
int
enter
cmp
jne
imul
lea
pop
jle
sub
hlt
and
je
add
loope
ds
imul
daa
cmpl
cs
lret
add
mov
add
pop
loope
xor
pop
mov
inc
movsl
xchg
mov
pop
mov
push
inc
or
inc
call
and
or
shlb
dec
fnstsw
dec
lds
inc
pop
mov
sub
push
mov
mov
jecxz
add
fxch
idiv
in
ficoml
nop
add
cmp
mul
ja
hlt
movsl
scas
mov
loop
clc
sbb
lahf
xchg
std
je
pop
adc
pop
adc
and
ss
addb
aaa
je
mov
add
lcall
cltd
stos
in
inc
xor
je
mov
ds
dec
mov
stc
mov
lods
lret
lret
pop
pop
dec
jmp
mov
in
cwtl
sti
mov
test
andb
cmp
lret
decl
adc
pop
cmp
pushf
inc
jb
mov
xchg
in
imul
pop
nop
loop
or
lcall
aaa
fcoms
rcr
sub
xor
aas
loopne
aam
sbb
inc
and
fstp
sarb
xor
xor
inc
gs
out
pop
ret
inc
pop
xlat
xor
mov
into
in
std
ficoms
int3
pop
dec
jecxz
es
gs
mov
ds
loope
loopne
sub
ret
xor
lea
sub
rep
out
sbb
in
pop
out
imul
out
iret
fwait
cmp
stos
jo
nop
xchg
xor
loop
push
clc
mov
add
mov
mov
arpl
mov
ret
mov
sub
add
jne
inc
ja
icebp
mov
in
in
jmp
dec
aad
clc
and
mov
xor
sti
cmp
sbb
or
xlat
pop
push
mov
xchg
clc
mov
insb
and
stc
hlt
iret
push
pop
ds
xor
add
xchg
xor
dec
mov
adc
inc
ja
shlb
push
add
leave
ds
dec
xchg
fcoms
pushf
dec
dec
inc
xor
inc
movsb
xorl
cwtl
mov
cltd
cmpsl
sbb
mov
loop
cmp
push
push
push
imul
call
lds
xor
or
jb
jo
xchg
and
in
mov
pop
negb
mov
daa
lods
adc
xor
mov
or
push
sbb
push
jl
aam
xchg
jbe
movsl
dec
jge
arpl
dec
rorl
fiadds
xchg
fwait
arpl
repnz
lds
in
adc
out
or
lods
cmc
stos
in
orb
mov
insl
das
sbb
dec
imul
push
xorb
cmp
dec
cmp
mov
shll
mov
test
inc
mov
in
sbb
adc
stc
out
pop
lods
repz
test
jge
jmp
dec
aas
bound
iret
jg
fstl
mov
or
and
mov
scas
cmc
test
pop
adc
mov
nop
push
mov
fwait
aaa
lods
dec
out
cmc
jbe
push
mov
push
jg
cld
fmuls
pushf
jecxz
movsl
loope
cmc
repnz
js
ljmp
cmp
das
test
lods
out
pop
and
mov
into
and
dec
mov
dec
decb
pusha
inc
pop
or
mov
mov
inc
es
cmp
mov
mov
outsl
stos
xor
test
or
cmp
jle
sub
pushf
jb
aas
mov
daa
in
inc
les
push
sbb
mov
mov
inc
cmpsl
fisubrl
shrb
push
mov
cmp
stos
mov
bound
push
data16
sub
push
je
inc
add
dec
ret
stos
sbb
cmp
mov
sbb
xchg
mov
pop
mov
in
xor
movsl
dec
sahf
inc
cmp
loopne
dec
dec
cld
ret
sbb
sar
cltd
dec
fstpt
push
aaa
fld1
loopne
fistpll
mov
dec
loope
into
mov
mov
nop
bound
lret
test
call
xchg
sub
inc
xchg
mov
cld
stos
cs
test
add
test
add
in
xchg
into
mov
bound
jno
dec
in
lods
mov
inc
mov
mov
test
mov
xchg
cmpsl
jb
cmp
mov
arpl
test
lock
imul
lods
lds
pop
das
mov
sbb
jle
sbb
aas
mov
fistl
xor
dec
push
ret
fisubrl
adc
std
stos
imul
mov
mov
pop
xchg
pop
mov
into
lock
stos
rorb
dec
lods
jno
fistps
sbb
or
pop
in
jb
stc
stc
add
jae
lea
dec
mov
sbb
scas
int
hlt
sbb
sub
imul
xchg
arpl
push
cwtl
movsb
mov
dec
jmp
inc
mov
pop
fsubrs
leave
inc
sub
xchg
test
mov
repnz
movsl
and
sub
fadd
inc
repz
inc
jbe
stos
dec
in
and
fnstcw
push
lods
cmc
xchg
out
lock
fldt
nop
sarb
xor
pop
add
cmc
loopne
lock
cltd
xchg
outsl
dec
into
xchg
pop
rcl
and
outsb
or
jo
pop
mov
and
repz
pop
or
fldl
scas
xor
sbb
xchg
in
sbb
in
sub
pop
inc
xor
lds
das
pop
push
movsl
clc
stc
dec
sbb
mov
cli
fisttpl
addb
shlb
inc
inc
in
sbb
aam
popf
icebp
add
push
add
xchg
dec
jl
cmc
sub
das
dec
mov
imul
ja
adc
aaa
aad
mov
adc
pop
hlt
loop
fidivrl
mov
das
pop
stc
int
lahf
mov
shll
inc
pop
dec
lods
jg
nop
sub
stc
add
int3
scas
inc
mov
inc
test
into
adc
xor
divb
cmp
lcall
cwtl
scas
mov
pop
orb
scas
iret
push
inc
dec
xor
popf
and
les
sar
xor
ret
jae
addr16
pushf
jnp
ret
mov
pushf
cld
sbb
and
jno
movsb
cli
loope
jmp
or
inc
aam
imul
or
test
test
add
mov
adc
leave
xor
adc
dec
add
clc
aas
cmc
scas
mov
pop
mov
mov
lcall
push
popa
mov
inc
test
inc
cmpsb
clc
jbe
clc
fists
leave
or
xor
ss
lahf
inc
jecxz
mov
and
xor
xchg
jo
dec
scas
cmp
pop
shr
pop
mov
mov
int
call
pminub
daa
aas
pop
cwtl
sub
dec
mov
sbb
in
or
or
jae
sbb
addl
dec
jb
ret
jae
mov
lds
inc
pop
dec
sbb
dec
pushf
jo
lods
mov
arpl
into
mull
jbe
das
rcll
cli
jne
dec
pop
int3
sbb
test
sub
lods
shll
mov
stc
nop/reserved
test
in
adc
add
push
fstl
fmuls
int
cs
in
mov
add
or
jge
sbb
in
cmp
push
cmp
mov
pop
mov
inc
sub
and
clc
repz
test
bound
dec
gs
ljmp
je
test
ljmp
gs
stos
mov
clc
add
xchg
jmp
out
subl
dec
xchg
add
shrb
pushl
mov
fcomi
dec
jns
push
mov
mov
xor
sti
movsl
xchg
les
xor
cld
lods
insl
popa
add
add
mull
int
ds
cmpsb
pop
movsb
je
jg
psubsw
and
or
call
jge
mov
pop
cmp
add
mov
adc
test
imul
add
inc
dec
push
stc
mov
adc
xor
mov
xchg
sbb
cmp
or
sub
mov
jbe
fldt
mov
int3
push
pop
xor
cmp
lret
lahf
mov
aad
out
leave
mov
jmp
push
jo
cmp
insl
out
or
jp
repnz
lods
mov
pop
lret
and
mov
cmp
hlt
xor
sahf
je
xor
mov
and
fsubrp
adc
nop
or
push
add
xor
je
lahf
or
icebp
adcb
mov
cli
fwait
pop
outsl
jbe
nop
imull
loop
dec
jns
std
insl
sbb
loopne
jecxz
arpl
push
jno
cmp
lret
popf
mov
imul
and
loop
sub
pushf
je
ds
nop
scas
pop
mov
imul
mov
daa
sbb
pop
das
pop
sub
adc
push
cmp
lret
push
pop
shl
das
faddl
xor
xor
lret
jne
xchg
adc
mov
lds
jle
add
sti
fs
sbb
lret
mov
shll
mov
cmp
vhsubpd
je
outsb
sahf
pop
inc
popf
fwait
out
and
sbb
pop
scas
out
adc
add
in
cmp
bound
mov
adcb
and
sbb
subb
sbb
jecxz
lods
fwait
popa
mov
mov
mov
sub
sbb
fdivrp
ja
or
mov
andb
leave
in
adc
mov
stos
scas
cmp
lods
add
xchg
das
sbbl
outsl
push
fisttps
mov
movsl
es
notl
inc
xor
leave
leave
scas
pop
add
mov
add
fs
hlt
add
jle
adc
pop
dec
fs
sbb
push
pop
loope
push
mov
jp
mov
out
and
sub
ret
cmc
pop
sbb
dec
hlt
ss
mov
loope
and
xchg
lds
mov
lods
cmc
sub
push
ds
test
xchg
in
notl
iret
hlt
xor
das
push
pop
push
fcmovu
sbb
lret
pop
addr16
lret
outsb
adcl
mov
lret
aaa
pop
mov
add
mov
push
aas
pusha
lret
xor
mov
insb
enter
xor
js
test
adc
xchg
and
int
pop
mov
addr16
jmp
inc
scas
lock
inc
pusha
int3
sbb
lods
add
mov
dec
out
shr
icebp
or
and
js
das
push
xchg
and
fidivrs
ja
dec
mov
insl
fisubrs
mov
pop
inc
ss
cmp
ss
insb
mov
out
jmp
in
jl
jb
cltd
mov
sarb
mov
addb
ret
stc
pop
add
imul
scas
inc
pop
test
push
icebp
lcall
je
mov
mov
or
mov
testb
push
xchg
jecxz
movsl
push
sub
inc
cmpsb
xchg
adcb
lock
or
lods
add
insb
mov
inc
decl
sub
in
pop
sub
repz
sbb
xor
das
in
or
lds
jno
and
sahf
daa
push
pop
dec
inc
mov
aas
inc
ficomps
popa
rcrb
js
loop
addb
add
jp
xor
out
mov
jle
and
lret
mov
lock
cmp
insb
jle
mov
and
adc
or
test
inc
pushf
ficompl
xchg
jge
aad
movsb
jbe
cmpsb
mov
jnp
call
out
pop
lds
popf
xor
or
subb
jmp
add
or
fsubrl
inc
out
pop
imul
inc
inc
outsl
mov
dec
cmp
lgdtl
mov
ljmp
ljmp
adc
mov
fsubl
jbe
ret
mov
shl
pop
push
in
or
jo
jno
out
outsl
insl
jmp
sbb
pop
inc
inc
sub
sti
mov
mov
push
sbb
sti
test
lahf
jb
mov
lahf
stos
mov
mov
in
cmp
pusha
out
dec
cmp
mov
mov
mov
cmpsb
ret
lret
sbb
cmpb
fldenv
lds
rolb
pop
cmc
nop
cmp
adc
dec
pop
mov
cltd
mov
add
mov
jmp
outsb
ss
push
dec
or
mov
in
dec
incl
inc
dec
lret
jle
out
sub
inc
int
jmp
xlat
scas
aad
jnp
lret
fwait
push
mov
jmp
add
fisubs
fildl
add
xchg
mov
add
or
addr16
push
xchg
je
ljmp
xchg
and
jg
xor
xchg
pop
xor
test
loop
xchg
pop
test
in
mov
push
push
jmp
test
aaa
inc
hlt
mov
pop
cmp
insl
adc
aam
fcmovne
inc
and
adc
int3
mov
mov
xchg
add
es
jg
dec
sub
or
lods
cli
push
lahf
xchg
adc
incl
cld
stos
sti
inc
and
sub
mov
xor
dec
inc
in
cmp
push
in
dec
cmp
and
or
mov
jecxz
cmp
iret
arpl
je
movsl
inc
adc
jb
dec
js
jp
das
bound
sub
out
insl
out
imul
je
test
or
and
mov
mov
aaa
fmulp
js
lahf
and
fistps
out
aad
push
fsubl
add
fcmovnb
jmp
clc
loopne
or
xchg
and
js
xor
lea
out
inc
inc
dec
mov
leave
imul
mov
adc
jae
lret
jmp
dec
fs
je
mov
mov
mov
nop
jns
adc
into
cld
dec
pop
fistps
pusha
mov
and
test
jecxz
lcall
mov
jmp
jmp
roll
lahf
test
sahf
testl
mov
fs
cs
call
push
jecxz
add
xchg
or
push
ret
int
loope
inc
shl
mov
clc
shl
inc
aas
pop
in
sub
adc
scas
mov
clc
pop
or
incb
mov
pop
or
aad
lods
sub
and
cmpl
pop
push
and
sub
das
test
lock
dec
aaa
out
je
das
roll
pusha
mov
outsb
jp
mov
xchg
jb
cmpsl
adc
daa
dec
jp
rcr
sbb
cmp
aaa
mov
sti
daa
fsubl
outsb
mov
mov
pop
in
dec
push
sub
test
scas
sbb
pop
mov
repnz
adc
mov
shrb
hlt
movsb
pop
mov
mov
loope
sub
sub
adc
jae
lret
inc
xor
jne
fwait
popa
dec
fdivs
pop
scas
pop
outsb
xchg
fists
mov
xchg
ljmp
pop
mov
push
hlt
cmp
adc
mov
inc
add
mov
hlt
in
nop
dec
or
mov
stos
andl
scas
mov
cld
inc
pop
push
inc
shll
or
adcb
dec
push
mov
lods
es
cmp
loop
jo
stos
scas
dec
fdivl
ret
mov
inc
in
push
leave
xor
xchg
ljmp
int3
iret
mov
sbb
dec
or
stos
sbb
pop
cmp
cltd
mov
xor
push
mov
and
xlat
push
mov
cwtl
lret
js
adc
lret
sbb
popf
add
push
aaa
push
lret
cmp
lret
push
out
cltd
lds
sbb
fidivl
stc
cmc
add
ret
adc
cs
sub
mov
std
stc
fsubp
sbb
dec
call
and
scas
push
dec
aaa
cld
ret
push
inc
mov
xchg
push
ret
aaa
mov
sbb
sub
fwait
dec
ja
or
mov
xor
popa
add
xchg
aas
push
adcl
out
push
orb
hlt
mov
pop
loop
add
cld
aam
dec
jo
xlat
add
mov
cmp
test
dec
cmp
mov
out
fsts
inc
loope
jmp
mov
sbb
mov
cld
loopne
pop
sti
pop
pop
pop
push
and
mov
pop
ja
adc
arpl
lcall
cltd
xor
jge
shll
pop
xchg
ds
mov
xor
sbb
rorl
lods
pop
jp
lods
and
fcomps
cmovae
orb
push
clc
fcmovb
or
ret
repnz
mov
out
xchg
sub
test
fadds
pop
mov
cmp
wrmsr
stos
shlb
mov
mov
mov
int
mov
movsl
data16
adc
inc
xor
add
push
mov
mov
pop
icebp
movsl
jmp
clc
adc
mov
stos
aad
jg
psubsb
aaa
jb
cli
inc
dec
xor
pop
dec
sahf
stos
pop
fwait
or
or
pop
pop
cs
or
adc
push
subb
and
jbe
sub
pop
fmull
lods
sbb
aaa
jne
jp
loopne
in
mov
push
fdivl
mov
xor
adc
pop
rcl
mov
mov
xchg
cltd
and
jae
jb
aas
mov
pop
jb
fsubs
sub
pop
in
xlat
fdiv
jnp
sbb
cmp
lahf
xchg
shlb
sbb
shll
dec
pop
push
xor
push
loop
movsb
mov
les
scas
insb
push
shrl
mov
stos
ja
cltd
pushf
fiaddl
and
test
xor
cmp
lods
pop
mov
xor
mov
sar
dec
xchg
cmp
inc
mov
outsb
push
jb
pop
push
mov
repz
pop
mov
gs
shlb
js
mov
add
jle
js
pop
adc
xor
call
mov
pop
cld
mov
jge
cmp
add
addr16
imul
mov
mov
cmp
jne
fistpll
leave
xchg
or
lock
xor
cmp
jns
dec
imul
cs
mov
cmp
into
cmp
jmp
fucomp
or
push
mov
jecxz
and
and
xchg
xor
mov
popf
mov
sbb
jb,pn
je
enter
pop
push
rcl
sbb
and
push
push
dec
inc
pop
repz
pop
xchg
lret
adc
enter
xchg
daa
or
lock
mov
call
in
add
fisttpl
repnz
sbb
scas
je
xorl
mov
lahf
push
mov
xor
aad
pop
sub
fcmove
out
roll
xlat
add
mov
std
ljmp
push
mov
and
shlb
push
cmp
sub
add
loop
iret
jnp
push
jbe
cmp
aad
incl
pop
xor
push
scas
mov
pop
sub
pop
mov
xlat
imul
pop
cmpsb
insb
mov
jle
fdivrs
sbb
out
cs
outsb
push
sbb
jge
in
jp
popf
jns
insl
fnstsw
stos
and
sti
jno
mov
and
dec
hlt
ljmp
repz
dec
cmp
xchg
xchg
jb
push
or
add
mov
mov
mov
fimull
sub
xchg
jbe
jae
push
out
or
jg
xor
or
add
jmp
lahf
xchg
sbb
mov
and
and
fistpl
mov
adc
and
or
lods
add
jge
dec
dec
jge
adc
cmp
lret
dec
inc
in
out
pop
sub
test
ds
sub
mov
fdivr
jmp
push
fstps
or
dec
loope
xor
ja
addr16
xchg
xchg
dec
push
icebp
or
fcoml
shll
mov
sarb
adc
push
pop
push
sub
outsb
pop
out
std
imulb
push
stos
jb
push
xor
push
push
add
gs
sbb
add
adc
xchg
sbb
add
cmp
adc
popa
jo
xchg
out
xchg
push
jbe
fdiv
push
mov
jno
pop
stos
jle
mov
adc
xorb
mov
mov
jbe
leave
add
mov
pop
jle
out
sub
clc
imul
fnstcw
lods
lcall
daa
jp
movsl
popf
pusha
pop
mov
lcall
dec
mov
leave
pop
xchg
jno
fimuls
mov
pusha
mov
pop
popa
push
inc
mov
inc
sbb
sbb
mov
and
loop
cmp
cmpsb
xor
scas
pop
fnstcw
dec
and
adc
jae
shrl
add
arpl
sti
lods
mov
and
xor
mov
das
add
sti
mov
jae
mov
addb
and
lods
or
push
inc
in
cmp
dec
mov
xchg
and
rclb
add
jno
cmpsl
xor
and
push
pop
xchg
sti
insb
and
mov
fmuls
inc
repz
or
jns
fmull
fimuls
add
into
std
inc
test
fstpl
in
xchg
das
add
cwtl
jge
movsl
lret
notl
xchg
xlat
pushl
mov
add
loop
in
pop
idivl
xor
sbb
sub
fbld
push
push
repz
in
hlt
lret
mov
mov
fiaddl
bound
ret
push
mov
cmp
out
int3
imul
cli
xor
ret
cmp
mov
xchg
adc
lcall
outsb
aaa
or
mov
popf
ret
dec
jo
outsl
jp
out
rcll
sub
mov
les
fisubrs
insl
sti
inc
cmp
inc
mov
jp
dec
daa
adc
loopne
inc
outsb
lret
push
das
mov
inc
push
inc
inc
mov
pusha
aad
and
fs
or
inc
mov
sub
mov
bound
mov
cmp
in
rcrb
push
sub
jp
mov
out
sbb
push
lret
mov
mov
std
dec
ret
divb
cltd
aad
xor
mov
or
cmpsb
movsb
loop
lcall
arpl
mov
adcb
mov
fcoml
mov
lret
inc
in
roll
call
insl
or
mov
je
fisubrl
insb
mov
in
outsb
xor
push
push
mov
cwtl
cmc
push
mov
call
test
or
out
aaa
or
mov
adc
xor
mov
ret
sbb
mov
push
jo
inc
insl
push
vmread
pop
outsb
inc
shr
and
rcrb
test
mov
dec
sbbb
loope
mov
cmp
mov
sub
add
js
clc
lock
inc
jb
or
fsubrp
jg
push
mov
jne
xchg
out
stos
insb
les
imul
jmp
mov
xchg
push
inc
daa
and
mov
int
leave
mov
jge
push
and
out
shlb
sub
shll
mov
sti
out
lds
lods
and
pop
das
inc
loopne
xor
or
xchg
clc
sbb
int
push
inc
jmp
fisttpl
mov
ja
pop
dec
mov
enter
mov
out
adc
xchg
sahf
addr16
or
xchg
enter
pop
out
and
jne
scas
arpl
outsl
repnz
insb
mov
push
jmp
inc
jo
pushf
mov
push
mov
insl
ja
mov
out
jns
iret
mov
dec
push
cmp
in
jecxz
push
lea
push
cmp
push
and
lock
leave
xor
arpl
xchg
scas
test
mov
xlat
xlat
jge
jns
das
fwait
arpl
mov
xchg
data16
mov
out
cmpsl
pop
xchg
push
and
push
pop
mov
fwait
mov
push
pop
insl
pop
jns
jnp
cltd
out
shrb
lock
or
inc
movsb
mov
push
arpl
sarb
loope
jns
ja
mov
and
ja
mov
cmpl
scas
inc
sbb
movsl
int3
ja
jne
movsb
mov
pop
rorb
cld
dec
xchg
leave
jno
or
mov
ret
dec
mov
testb
into
adc
fxch
iret
ja
out
lret
loop
push
push
cmp
fildl
shll
sbb
push
xchg
daa
mov
or
cmpsl
mov
ret
or
or
xchg
xor
es
shl
adc
clc
or
into
in
cmp
add
into
std
sbb
and
xor
imul
call
xor
inc
fldl
mov
sbb
out
aaa
rcll
aaa
fnstenv
xor
sub
cs
xchg
xchg
add
xchg
int
jo
daa
inc
imul
or
scas
ret
sub
iret
je
fisttpl
push
and
cmp
cmpsb
push
xchg
arpl
xor
xlat
loopne
ret
xor
push
leave
ss
sbb
outsl
pop
cmp
sar
and
xchg
in
nop
fldl
fwait
xor
lods
fistpl
mov
lahf
scas
pushf
scas
add
mov
jb
pop
push
sub
cmpsl
icebp
cwtl
fwait
popa
sbb
scas
xchg
and
sub
xchg
jecxz
inc
out
mov
das
cmp
and
in
xchg
test
cmp
mov
sbb
push
inc
sbb
jmp
push
push
and
pop
lods
jns
inc
pop
jp
stos
cmpsl
jns
es
and
push
and
dec
icebp
dec
inc
and
and
dec
or
mov
cmp
test
add
in
mov
movsb
int3
xor
inc
pop
adc
or
push
fnsave
pop
std
push
in
and
cwtl
jle
mov
mov
xor
lods
mov
push
clc
roll
push
cmpsl
mov
cmpsl
cmp
push
fsubs
push
dec
clc
inc
inc
xchg
adc
lcall
shll
dec
jne
or
clc
inc
jg
mov
sub
push
push
and
sbb
fisubs
sbb
call
in
push
mov
lcall
mov
jg
jl
ficomps
xor
mov
dec
pop
jge
test
push
or
inc
cwtl
arpl
pushf
pop
sub
and
addr16
cmp
outsl
fisubl
shlb
xchg
dec
xlat
es
inc
js
sbb
pop
shrl
stos
aas
cmp
cmpsb
fcmovne
je
push
orl
adc
pusha
cmp
bound
das
cmpb
sbb
add
arpl
jp
shlb
mov
daa
push
cs
inc
push
push
mov
test
xor
aaa
movsl
loope
sarb
jl
into
int3
dec
mov
sub
push
cli
mov
jne
rorb
jmp
jo
ds
shrb
loopne
or
push
xchg
scas
sub
add
inc
aaa
fwait
lods
inc
std
mov
sbb
fdiv
mov
and
cmp
jb
das
out
sbb
iret
repz
xchg
sbb
lock
pop
add
sbb
es
xchg
xchg
cmp
mov
xchg
adc
dec
insl
add
dec
inc
dec
cli
push
mov
nop
push
xor
cmp
inc
add
sbbb
stos
pop
mov
xchg
daa
or
shrb
nop
add
cmpsl
test
in
fildll
dec
sub
mov
or
into
stc
scas
add
inc
xor
pop
push
xchg
and
push
or
lods
push
dec
dec
push
lea
cmp
push
mov
arpl
and
mov
or
movsl
and
xchg
jecxz
mov
and
add
movsb
hlt
cmp
std
cmp
cmp
aad
xchg
or
int
lahf
insl
mov
lahf
rcrl
dec
rcl
dec
stos
or
cmpl
adcb
pop
and
add
lds
pop
movl
jb
mov
and
addr16
cmc
push
jnp
adcb
cmc
fnsave
test
mov
mov
cld
imul
test
aaa
popa
in
adc
sub
leave
arpl
stos
jmp
or
pop
or
bound
jmp
xor
cmp
movsb
mov
mov
or
jg
aam
fdivrl
and
or
scas
fs
add
pop
jae
adc
pop
lcall
sub
xchg
pop
inc
jle
fadd
ljmp
mov
pop
je
inc
jecxz
rol
imul
pop
gs
dec
xchg
sub
pop
adc
aad
bound
loope
jmp
fwait
and
data16
or
cld
adc
ss
dec
cmp
cli
mov
addr16
add
adc
cmpsb
fadds
lods
xchg
mov
shlb
adc
es
push
div
pop
aas
gs
sub
xchg
pop
mov
iret
dec
and
mov
mov
sub
or
insl
xchg
scas
mov
and
fcompl
scas
sbb
push
jbe
loop
mov
out
or
loope
push
push
and
fildll
cs
ret
inc
sub
jb
cmp
push
sbb
outsl
mov
ja
gs
mov
ljmp
cwtl
or
ret
aas
jg
popa
push
mov
lcall
loope
call
in
pop
sbb
in
pop
jns
jle
push
xor
or
cwtl
test
dec
mov
fnstenv
cld
sbb
popa
aad
sbb
mov
popf
stos
xor
adcb
xor
fsubrs
mov
insb
mov
std
cmp
xor
add
jo
sub
subl
movsl
loop,pt
fstpl
scas
mov
aad
jmp
sahf
ret
push
rcll
mov
and
ljmp
and
addr16
cld
xchg
jecxz
or
mov
daa
xchg
sbb
in
sbb
jecxz
add
out
or
sbb
push
jg
insl
or
adc
sub
mov
xchg
mov
inc
inc
sbb
lcall
divl
mov
in
push
ds
insb
mov
mov
push
ljmp
mov
imul
js
dec
daa
call
clc
pusha
adc
mov
ret
int
jne
aas
ljmp
stos
pop
stos
insl
fwait
dec
fnstsw
jb
loop
nop
int3
pushf
lret
outsl
scas
outsb
rorb
pop
lret
cwtl
aad
mov
push
scas
stc
and
mov
jbe
cltd
mov
stos
mov
jl
jnp
cmpsl
shll
add
insl
xchg
les
or
arpl
scas
test
mov
sub
mov
sbb
jns
inc
push
pushf
lods
enter
dec
jle
push
xchg
jge
enter
imul
fiadds
imul
adc
jne
cmp
clc
and
cmp
cld
stos
mov
push
subl
inc
enter
ljmp
pusha
pusha
mov
insl
loope
inc
rcpps
mov
adc
sahf
mov
subb
jnp
notb
inc
in
cmp
scas
add
add
dec
and
add
dec
insl
mov
xchg
daa
push
jmp
ja
out
not
mov
sbb
pop
pop
ds
xchg
inc
xlat
jae
cmp
xchg
xor
inc
adc
insb
jne
nop
imul
push
xchg
mov
mov
fs
xchg
inc
aad
pop
daa
lods
xchg
pop
test
mov
ret
jno
push
enter
and
out
sti
sub
cmp
lea
push
add
out
loope
push
mov
test
sarl
sbb
in
xchg
push
and
in
in
push
fildll
push
mov
popa
add
push
dec
cmp
mov
daa
ss
cld
sub
push
movsb
cli
aas
adc
in
push
cli
push
pushf
sarb
rclb
inc
cmp
xchg
aad
repnz
out
or
adc
add
add
xor
fsubs
mov
outsb
and
xchg
aaa
and
xor
pusha
sbb
jge
psubb
xchg
test
push
fstpl
mov
out
mov
xor
jae
dec
addr16
pop
push
cmp
inc
in
dec
sub
mov
js
clc
mov
or
stos
mov
mov
shlb
mulb
fstpt
xchg
cltd
add
rcrl
mov
or
add
inc
adc
xchg
dec
add
jle
sbb
daa
dec
imul
push
mov
fsubrl
push
test
pop
fistl
sbb
cld
fidivrl
daa
rcll
jmp
es
jns
adc
popf
js
and
je
jne
cmp
in
enter
push
inc
xor
push
xchg
push
mov
jns
int3
adc
js
scas
ljmp
scas
mov
loop
push
push
sub
xchg
sbb
lahf
xchg
fnsave
mov
loop
pop
mov
loop
xorb
jmp
cmp
mov
sbb
pop
jge
outsb
fimull
shrl
xchg
mov
push
mov
jno
pop
adc
ja
pop
xchg
cmc
dec
jmp
mov
cwtl
std
nop
or
cmpsb
pusha
pop
imul
mov
cmp
outsl
inc
and
jg
inc
cld
fidivrs
mov
push
in
sub
sub
mov
sub
dec
and
call
imul
mov
bound
shrb
movsb
insl
mov
unpcklps
into
push
dec
mov
mov
je
mov
clc
mov
mov
pop
jno
cmp
and
addr16
adc
sbbb
test
pop
pop
ja
jns
sbb
js
or
and
add
out
push
ret
add
dec
aaa
ret
stos
outsl
lea
inc
jl
cs
sub
cmp
pop
add
sub
mov
jb
sbb
fdivrp
outsb
hlt
push
popa
xor
xchg
outsl
xor
mov
inc
xchg
push
inc
push
mov
adc
xchg
rorl
cmp
lret
je
in
jecxz
pop
xchg
call
mov
pusha
addb
mov
dec
adc
add
icebp
mov
dec
push
pop
xchg
lahf
dec
decl
push
or
out
stc
xchg
inc
das
stos
std
ds
shlb
pop
inc
xchg
fwait
nop
inc
mov
aad
lcall
and
les
int3
stc
or
pop
rcr
out
clc
loope
pusha
cltd
and
cmp
js
xchg
fdivs
cltd
lods
sbbl
rcrb
inc
fstpt
dec
and
adcl
inc
mov
fldcw
and
in
faddl
sbb
xchg
test
or
sahf
mov
das
pushf
jp
lea
into
test
adc
inc
sub
push
xlat
imulb
in
int
mov
sub
adc
xchg
sub
pop
mov
dec
cmp
mov
push
mov
add
add
push
cmp
cmp
mov
jecxz
loop
jnp
xchg
popa
mov
add
sbbb
movsb
xchg
mov
rorl
mov
pop
or
sar
out
ret
adc
sbb
and
push
inc
add
sti
fldcw
out
lods
cmp
sub
cwtl
push
jno
jg
dec
sub
arpl
push
incb
inc
jg
push
mov
les
pushf
outsb
fstpl
dec
fnstcw
dec
out
mov
mov
xor
in
jp
mov
mov
scas
push
adc
das
repz
pop
es
jecxz
sbb
imul
sbb
xor
xlat
sbb
add
repz
or
andl
pop
xor
and
test
sub
cli
or
leave
and
stc
dec
adc
add
shr
hlt
mov
in
out
ds
jb
mov
xor
or
sub
mov
out
loopne
jb
xchg
xchg
sbb
pop
jmp
icebp
rcll
add
imul
dec
sbb
movsl
pop
jge
gs
push
cs
mov
push
adc
pop
lock
mov
inc
xchg
mov
ret
fistps
sbb
jge
fs
inc
and
sti
out
mov
sbb
dec
orb
movsl
ret
cwtl
or
sbbb
dec
das
stc
cmpsl
mov
adc
subl
fs
or
push
in
pop
bnd
fs
aad
scas
cli
rol
mov
mov
insl
mov
shll
fmuls
ja
out
ds
ret
fimull
cld
int3
dec
ljmp
xlat
pushf
ljmp
sar
xchg
xor
andb
lahf
jne
imul
lods
lods
xor
push
popf
push
and
js
gs
iret
or
mov
jne
in
add
jp
daa
inc
sbb
int
aad
rorl
clc
mov
addr16
jp
xor
cs
shll
test
fwait
js
fistpll
inc
shll
pop
hlt
hlt
xor
cld
mov
xlat
cmpl
leave
cmpsl
andb
xchg
inc
push
sub
enter
sub
jle
sbb
ljmp
add
stc
push
incb
fs
jmp
xchg
loopne
sbb
movsl
adcb
out
cmc
scas
pop
mov
dec
out
mov
in
pop
push
jl
fwait
ret
mov
outsl
mov
inc
outsb
xchg
dec
outsb
clc
movsb
jmp
cmp
jg
ret
mov
out
dec
mov
in
sub
aas
out
je
adc
sahf
ds
andl
out
sbb
fiaddl
loopne
pop
gs
cmp
xor
inc
inc
mov
push
dec
xor
scas
pop
inc
lret
push
mov
lea
iret
adc
or
xchg
xor
xor
and
jmp
call
add
jp
loop
jecxz
sbb
lods
sbb
and
in
pop
xchg
das
outsb
lahf
push
xchg
and
int
arpl
adc
in
iret
out
xchg
stc
dec
or
push
adc
testl
sarl
js
fdivrs
loope
stos
cmp
adc
push
fistps
cmp
mov
je
add
nop
and
ror
je
std
cmpsl
pusha
lcall
cwtl
xlat
mov
dec
sbb
add
into
loop
cmp
push
stc
lret
loop
cmpb
dec
push
iret
das
sbbb
clc
and
out
lahf
inc
and
inc
xchg
push
call
test
ss
add
mov
lret
call
mov
push
bound
loope
stos
insl
fnstenv
mov
lret
ret
and
ja
lret
ds
andl
loope
push
sahf
sub
pushf
mov
dec
jne
sub
jne
cmp
or
push
mov
fildl
xchg
mov
fs
ja
mov
inc
mov
ret
into
aam
adc
out
aas
in
iret
jle
ficompl
dec
scas
icebp
cmp
sub
dec
push
and
ret
xchg
ret
ljmp
xchg
scas
and
fsubr
js
sbb
std
cmp
jle
fs
in
xor
push
repz
pushf
and
and
xchg
mov
dec
movsl
ror
fwait
pop
cmp
cs
loopne
pop
test
aas
pusha
pushf
insl
mov
lds
pop
push
and
test
cli
pop
dec
xor
mov
ds
pop
sahf
les
ficoms
arpl
andb
js
loopne
lret
adc
sbb
dec
std
dec
xchg
fisubrs
push
imul
int
hlt
out
sahf
cmpl
xchg
dec
dec
pop
cmp
addl
and
out
ljmp
loope
lret
addr16
jmp
inc
cld
pop
adc
into
sub
cmc
mov
sub
clc
sti
stos
jno
push
xor
dec
rcr
xor
inc
xlat
xchg
mov
cltd
mov
xor
addr16
or
lcall
sbb
popf
lcall
mov
jge
stos
je
mov
xor
push
mov
jecxz
inc
push
shl
fnsave
or
xchg
jg
fcmovnbe
inc
inc
sarb
dec
mov
push
dec
jae
insb
mov
int3
push
bound
test
fsts
ss
mov
xorl
stos
lock
mov
sub
stc
jns
mov
mov
shrl
xor
mov
dec
iret
sub
popf
fnsave
addr16
and
jge
lds
cmc
cmp
test
xor
add
outsb
mov
xor
sub
inc
fcomps
insb
addr16
dec
pop
mov
repz
fisttpl
jo
add
mov
fsubrp
into
adc
cmp
lret
das
rorb
xchg
popa
out
sbb
in
mov
clc
ret
jmp
into
orb
enter
jmp
cmp
mov
pop
rclb
mov
cmpsl
dec
mov
cmp
lahf
mov
aam
pop
mov
cmc
xchg
pop
aas
pop
xchg
xchg
test
push
test
mov
rcll
pop
cmc
shrl
sti
jmp
push
cmp
cli
cmpl
cmpsb
and
fldt
or
dec
xlat
popl
cmp
pusha
ret
sahf
pop
cmc
jp
loope
jb
aas
xchg
push
aam
dec
push
and
jp
adc
lcall
in
xchg
loope
mov
xor
lcall
jns
or
mov
rclb
outsl
test
jo
mov
fistps
mov
stos
movsl
push
in
fists
cmp
scas
fistps
cmp
dec
lods
rorb
sbb
sub
pushf
bts
aam
cli
xor
sub
iret
adc
and
nop
xchg
in
int3
and
ds
inc
pop
or
sub
imul
lods
arpl
iret
add
pusha
mov
jno
mov
add
scas
enter
xchg
and
inc
dec
add
mov
mov
repnz
adc
or
daa
cmp
movsl
psrlw
nop
stc
enter
loop
mov
insb
mov
jg
adc
push
jle
out
in
adc
clc
sub
stc
cmp
repz
aam
shlb
push
pop
lret
xchg
fld
lods
jb
shrl
xchg
xor
mov
dec
sbb
mov
out
mov
lock
mov
cltd
and
in
and
cmpsl
mov
mov
imul
push
out
decl
dec
int3
pop
mov
xchg
sbb
in
cmp
es
lods
mull
adc
pop
xchg
xchg
cmc
popa
gs
mov
loope
sub
nop
cli
enter
adc
fisttpl
push
addl
inc
in
mov
out
lcall
add
mov
gs
fsubl
scas
out
push
in
or
or
or
dec
arpl
loopne
stos
ljmp
xchg
push
aas
adc
scas
movsb
and
clc
add
push
clc
mov
in
test
inc
ffreep
push
rorb
adc
fldenv
daa
push
lock
std
call
repnz
inc
pop
xchg
movsb
sti
fwait
pop
pop
xor
or
cmp
cmp
jp
loopne
xorl
es
xor
addl
ret
jbe
jae
dec
mov
js
out
mov
cwtl
in
pop
mov
jg
loop
sbb
pop
ljmp
xchg
orl
jle
stc
iret
add
fdivs
push
inc
mov
aad
push
xor
addr16
paddusw
xchg
loop
lret
mov
insb
mov
std
lret
or
imul
cmp
and
pop
popa
push
psubd
loop
xlat
add
mov
jnp
mov
mov
in
push
dec
aam
pop
xchg
fiadds
mov
das
adc
jl
push
pop
nop
fdiv
aas
mov
pop
mov
scas
in
and
cs
movsl
adc
andl
js
sub
add
push
adc
mov
dec
jae
xchg
adc
ljmp
jb
and
stos
jmp
push
mov
call
fbstp
dec
std
jnp
loopne
mov
les
js
push
inc
mov
mov
lret
out
add
or
inc
dec
stos
mov
mov
push
sbb
and
and
dec
push
dec
or
cld
stc
adcl
divl
sti
jp
mov
sti
dec
mov
sahf
test
sub
xchg
fnstcw
fisubl
rcrb
dec
pop
test
fbld
shlb
cli
jmp
adc
dec
mov
jle
push
lahf
or
addr16
pushf
mov
shll
in
ss
rorl
push
dec
pop
lret
and
inc
mov
jb
cmp
lock
mov
sbb
pop
popa
daa
cmp
rol
pop
lods
adc
mov
sub
scas
loope
lods
jbe
les
mov
js
jb
xchg
mov
test
inc
mov
xchg
sub
sarb
push
jle
lods
pop
dec
push
rclb
xor
mov
jge,pn
push
ss
push
and
mov
lods
rclb
sbb
cmp
cltd
scas
loopne
and
xchg
test
mov
cmc
cs
rorl
insl
shrb
test
mov
sub
ficoms
popf
inc
stos
cltd
add
out
dec
shlb
iret
xchg
cmp
dec
ret
xor
mov
inc
int
cmp
into
cmpsb
mov
lods
test
jae
push
xlat
lock
cmp
lahf
cmpsl
sbb
push
pop
and
std
cmp
in
and
rcrb
enter
lods
jb
push
and
mov
test
out
hlt
mul
cs
sub
lock
dec
xor
push
or
push
xchg
cmp
mov
lods
jg
push
ret
pushf
ret
repz
outsb
sbb
adc
mov
and
movsb
inc
or
xor
sbb
cmp
xchg
mov
imul
mov
pop
iret
sbb
lahf
loopne
test
push
test
hlt
jg
std
test
inc
lret
mov
push
mov
outsb
leave
inc
push
cmp
push
es
xchg
xchg
sbb
ljmp
xor
and
mov
pop
push
sbb
push
fistpl
scas
jns
shll
jge
sbb
sti
jg
push
mov
ret
mov
jecxz
rcll
xchg
xlat
imul
ret
xchg
sbb
js
outsl
add
movsb
pop
sarb
pop
jl
dec
xchg
or
adc
sahf
xchg
xlat
add
shrb
shrl
push
in
ja
jne
ret
jo
arpl
aaa
cmp
mov
mov
adc
or
aaa
fdivrl
sbb
mov
xchg
fcmovb
or
sbbl
jno,pt
xchg
hlt
and
flds
out
out
clc
jbe
cltd
sub
hlt
mov
movsl
mov
fsubl
test
pop
mov
das
inc
popa
leave
mov
pop
lahf
shrb
repz
ljmp
dec
sbb
pop
scas
stos
vpmacswd
xchg
ret
bound
dec
jge
outsb
add
lret
roll
and
test
jno
sbb
pop
out
arpl
ret
cmp
hlt
xchg
sub
jmp
dec
insl
mov
jmp
out
ljmp
or
push
adc
les
pop
jmp
jo
lea
test
xchg
lret
mov
int
je
adc
outsb
add
fbld
jecxz
pushf
insl
loop
orl
movsb
dec
sub
sbb
inc
or
xor
in
or
pusha
mov
mov
inc
add
or
cmp
jo
inc
cmc
sarb
push
sub
bswap
and
and
xor
je
cmpl
mov
xor
cs
or
mov
out
mov
jns
pop
xchg
ds
jae
lock
fnsave
pop
aaa
pop
sbb
jl
mov
pop
mov
sub
mov
xorb
popa
in
cli
adc
imul
add
mov
cmc
push
lret
lahf
fsubrs
add
cmc
stos
push
lcall
pop
jo
fwait
jle
out
and
sub
jl
dec
jnp
xor
int
icebp
mov
xor
dec
arpl
cmpsl
data16
push
pop
cmp
aad
jbe
hlt
push
dec
ljmp
dec
ja
mov
jno
or
rcr
popf
fcom
or
inc
or
push
sbb
jns
jecxz
jnp
gs
adc
fxch
push
jp
mov
shl
mov
xchg
and
mov
jp
scas
stos
nop
push
push
push
das
push
dec
test
iret
fimull
add
or
adc
movsb
test
and
mov
add
fdivrs
mov
es
int
mov
jns
int3
leave
jle
fwait
jno
lods
adc
fs
add
and
into
mov
mov
roll
adc
xchg
mov
in
jl
mov
ret
sahf
dec
jmp
add
and
lahf
lret
not
dec
lea
xor
in
dec
sbb
adc
mov
imul
cmp
pusha
inc
ret
insl
fisubrs
test
stc
test
mov
fxch
mov
jbe
insl
popa
pop
xchg
add
hlt
cwtl
cmp
cmc
mov
inc
mov
push
cmp
in
jmp
mov
lcall
xor
fstpl
or
push
or
jne
leave
xchg
fsubrl
aaa
pop
xor
sarb
mov
dec
int
mov
lock
pop
loopne,pn
mov
or
jnp
enter
es
cld
pop
inc
je
ror
jnp
push
cmp
je
jns
xchg
push
sbb
cmpsb
push
cltd
int
aad
push
aam
cmp
mov
xchg
into
test
xor
mov
mov
adc
or
push
sahf
scas
push
and
jle
je
push
cmp
movsb
dec
mov
jnp
xor
lahf
out
pusha
inc
outsb
repnz
cmp
add
mov
xlat
clc
mov
ret
aaa
jns
jg
inc
xlat
and
cwtl
pop
ljmp
hlt
mov
repz
insb
shr
stos
scas
decb
test
into
mov
out
andb
cmp
push
jo
test
xchg
pop
mov
push
mov
sub
mov
test
dec
cmp
dec
cmp
int
arpl
and
int
clc
ret
sarb
je
adc
enter
decb
ds
ret
loop
shlb
or
cld
mov
xor
cmpsb
pop
fsubl
cmp
push
cwtl
push
repz
int
push
inc
adc
out
repnz
xchg
lret
sub
repnz
sub
cwtl
or
movsb
mov
push
xchg
jns
lods
scas
xchg
xchg
test
pop
shll
test
jp
xchg
and
mov
mov
mov
insb
mov
xorb
dec
sbb
mulb
aaa
cmc
lahf
ret
std
cwtl
shll
test
jmp
mov
mov
xchg
aad
sbb
add
sbb
adc
mov
out
fwait
stos
add
jge
mov
push
ror
in
sbb
fldl
hlt
mov
int
lahf
mov
xor
aaa
stos
lds
add
cmc
out
scas
pop
adc
rcrb
push
leave
sub
stc
mov
in
test
stos
xor
jnp
fdiv
in
jg
aam
mov
sub
push
mov
mov
xchg
sbb
and
scas
inc
repz
andl
add
jg
repz
xchg
dec
ja
out
mov
ret
movsb
jp
or
shlb
out
shrl
rclb
sub
in
adc
jae
mov
sub
xor
shll
or
test
das
sahf
xchg
jno
scas
sbb
lret
sbb
cmp
xchg
pop
test
loope
icebp
inc
call
adcb
les
mov
sub
cmp
gs
adc
adc
pop
mov
inc
sbb
loopne
subl
push
cmpl
out
push
sahf
sub
mov
xlat
mov
fcoml
cmp
rcrl
adc
push
insb
in
mov
mov
adc
xchg
xchg
add
cli
mov
jge
je
add
call
aas
call
fsts
stos
test
xor
sub
inc
lock
insl
scas
push
iret
and
inc
iret
push
leave
pop
imul
sub
fdivp
jmp
mov
pushf
or
adc
and
xor
jl
jns
cld
cltd
fmull
and
mov
in
mov
icebp
adc
jmp
nop
xchg
cmpsl
cmp
rcll
sbb
inc
fwait
leave
adc
sarb
rcrb
rclb
dec
mov
mov
leave
and
nop
dec
pushw
ljmp
int
lret
mov
push
and
std
and
shll
scas
add
jns
jmp
mov
mov
mov
ja
les
pop
int3
inc
push
sarl
in
inc
jnp
mov
pop
add
xor
imul
xor
mov
fsubs
lods
cmp
sbb
and
shlb
xor
popf
js
mov
testl
arpl
dec
out
rorl
aaa
add
stc
mov
dec
out
dec
jg
sbb
ds
or
movb
into
sbb
sbb
xchg
sbb
sbb
pop
push
call
test
xor
ret
mov
outsl
enter
xor
jo
dec
lret
in
jno
lock
or
leave
jp
popf
adc
lock
inc
pop
outsl
xor
jbe
adc
in
popf
out
and
push
scas
rcrb
out
mov
das
jnp
mov
lods
jmp
aam
jne
xchg
jecxz
push
enter
xor
cmpsl
adc
xchg
nop
in
dec
adc
gs
mov
bnd
pop
jecxz
aaa
xlat
jg
cld
sbb
mov
mov
sbb
js
adc
mov
inc
mov
cltd
popa
rol
dec
rcll
inc
mov
push
out
jmp
mov
mov
xor
shrb
sub
add
lahf
mov
inc
mov
xchg
adc
xchg
movsl
and
pop
jno
push
je
pop
add
xchg
daa
pushf
or
cmp
in
addl
xor
cltd
ficomps
inc
lds
enter
loop,pn
push
pop
push
jg
dec
stc
fucom
mov
pop
lods
filds
add
lret
pop
test
fcoms
jp
cmp
cmp
fnstcw
push
inc
pop
pop
push
lret
stos
xchg
imull
dec
inc
out
or
mov
insb
xchg
fdivl
and
inc
mov
dec
inc
dec
aam
mov
xchg
test
cwtl
jnp
mov
cmpsl
xchg
inc
add
mov
insl
stos
xchg
xor
or
and
pop
lcall
in
notb
jmp
cmp
int
popa
xchg
cmpsb
test
add
add
xrelease
or
adc
sbb
nop
cld
shr
in
pop
dec
xor
mov
sbbb
clc
cwtl
mov
or
shll
movsb
call
aam
cwtl
test
jo
cmp
mov
cmc
aam
jne
xchg
rclb
add
mov
aad
cmpb
xor
jge
cmp
add
loope
xorl
lret
adc
data16
inc
sub
mov
and
out
jbe
adc
or
pushf
mov
adc
sbb
mov
imulb
mov
lcall
jle
jno
divl
rcl
pop
mov
dec
ljmp
jge
mov
mov
mov
ss
leave
sub
cld
dec
xchg
cmpb
mov
mov
xlat
std
lock
sbb
dec
and
daa
lahf
and
or
mov
sub
and
das
inc
push
add
andb
or
pop
ljmp
jp
int
xchg
push
out
les
fistl
imul
add
cltd
jae
icebp
sub
aad
imulb
mov
mov
arpl
lods
fadds
fldl
dec
push
pop
repnz
movsl
mov
pusha
cli
dec
ja
lock
ds
pop
push
mov
mov
je
pop
imul
xor
pop
movsl
and
test
iret
or
xchg
jnp
imul
outsb
imul
push
lods
xchg
mov
push
push
jno
add
enter
mov
rcll
dec
jl
push
sub
push
mov
sub
stc
jns
push
lods
mov
xor
mov
jp
push
push
mov
pop
idivb
mov
aad
shll
xor
icebp
testl
cmp
das
xchg
stc
outsb
das
mov
mov
adc
push
push
and
mov
mov
arpl
in
fwait
mov
test
lods
fisttpl
imul
jne
std
pusha
push
jecxz
and
sub
test
enter
push
mov
adc
cwtl
sub
mov
add
pcmpgtd
fs
fucomip
int3
js
push
test
fiadds
sub
xchg
cmpsl
mov
sti
xor
aam
insb
mov
lock
cmp
insb
pop
cmp
cli
jle
dec
je
and
pop
add
lret
fstl
mov
or
call
fsubrs
and
pop
cmp
mov
xor
imul
pop
xchg
jge
mov
pop
cs
js
loopne
adc
and
test
repz
pop
aas
es
jbe
pop
fsubrl
xchg
mov
fs
sbb
inc
das
fdivrs
jmp
nop
push
inc
sbb
clc
into
cmc
jne
or
or
dec
aaa
jns
lock
sti
dec
loopne
int3
mov
les
and
mov
jge
push
sbb
sub
sar
ljmp
push
stos
sbb
test
mov
cmp
jno
mov
fcomip
outsl
sbb
sbb
push
mov
adc
arpl
jl
xchg
sbb
and
cmpsl
mov
sub
mov
inc
adc
pop
cmp
mov
int3
sti
mov
adc
in
jg
inc
add
lods
fistpl
pop
jo
loope
in
aam
fcoms
test
into
movsb
cmp
repnz
adc
test
stos
mov
imulb
mov
inc
cwtl
test
repnz
push
push
sub
out
xlat
or
jmp
clc
xchg
fcoml
repnz
sbb
cmc
inc
xchg
stos
bound
fisubs
ret
xchg
mov
and
ret
scas
gs
out
sub
push
xorb
lock
in
jl
push
idivb
xor
and
or
repz
adc
sbb
jmp
or
je
dec
cli
loopne
pop
inc
pop
cld
pop
lods
mov
outsl
sbb
in
ss
clc
or
sbb
ret
xor
and
inc
outsb
int3
sub
mov
ret
nop
sbb
sub
sbb
cltd
out
mov
jnp
int
dec
aaa
ja
fldl
mov
je
outsb
js
jo
xchg
aam
inc
mov
mov
out
dec
mov
xor
mov
loopne
ret
dec
daa
inc
into
sbb
insb
or
outsb
popf
sbb
push
mov
fidivrl
cmpsl
sub
mov
dec
stos
jae
push
int
sbb
push
bound
mov
sub
pop
imul
fcmovnbe
or
add
rorb
fldenv
loopne
xchg
call
mov
push
mov
xchg
ret
lea
mov
std
add
adc
es
into
mov
mov
jge
orw
movsl
int3
js
stos
pusha
sub
call
push
ret
cmp
or
push
add
cwtl
add
or
testb
ret
add
or
lcall
adc
mov
outsb
das
jl
enter
mov
jnp
inc
jl
lock
jle
stos
aaa
xchg
xor
andb
fmuls
cld
insb
popa
gs
cmp
jae
stos
cmp
fcmovu
fs
xor
jecxz
mov
inc
sti
cmovg
into
subl
jnp
es
scas
pop
nop
mov
xchg
dec
mov
insl
shl
cwtl
addr16
jns
mov
and
cli
aam
sbb
test
movsb
dec
pop
enter
pop
dec
pcmpgtb
out
cmp
in
cmpsl
push
jmp
lock
in
movsl
xor
fmull
xchg
mov
or
sub
clc
adc
sub
sub
xor
pop
push
adc
mov
fisubrs
lret
rolb
or
imul
hlt
xchg
insb
pop
mov
pop
test
push
cli
cmpsb
dec
cmc
xor
add
and
mov
xlat
outsl
icebp
lret
outsb
int
push
sarl
mov
mov
jge
pop
daa
adcb
out
cld
jnp
sub
movb
outsl
cmp
mov
dec
adc
ljmp
add
sarb
std
mov
mov
xchg
adc
or
test
mov
in
mov
inc
or
push
xchg
add
fstps
aas
mov
mov
rcr
xor
icebp
and
push
iret
dec
sbb
mov
scas
rcl
jmp
decb
sub
mov
jmp
mov
adc
add
loope
test
cli
cld
popf
cmp
cmp
xor
notb
bound
jb
dec
xchg
lret
inc
cld
mov
or
xchg
xchg
dec
bound
mov
cli
push
out
jnp
movsb
xorl
or
xlat
mov
cli
fcmovu
dec
adc
lahf
xchg
aaa
enter
xor
andl
mov
jae
cmpb
in
xlat
fimull
lahf
jne
fisubrs
into
aam
adc
push
testl
test
sub
out
imulb
out
mov
addl
shlb
data16
mov
sbb
mov
mov
ja
cwtl
addl
add
add
test
imul
aaa
mov
sub
xor
das
leave
dec
xchg
cld
jo
pop
sbb
sub
enter
mov
and
insl
imul
push
loopne
push
test
pop
mov
lods
pop
dec
enter
mov
int
hlt
out
fbstp
pushf
and
jnp
mov
or
cmp
les
lods
jl
cmovne
ljmp
xchg
lods
or
jae
jo
dec
add
mov
iret
jns
jb
lods
pop
jo
idivl
xor
mov
leave
and
das
pop
fs
ret
push
negl
push
jmp
sub
repnz
mov
xchg
push
lock
and
and
mov
lods
sbb
inc
roll
mov
cld
sbb
ja
mov
push
das
pusha
mov
cs
sub
add
adc
jge
inc
fcoms
fadds
int3
sub
js
or
or
insl
push
mov
insl
push
mov
or
mov
jmp
inc
lods
push
int
call
xchg
and
rcrl
lock
inc
cltd
sti
sbb
bound
lods
gs
sahf
aam
pop
xchg
cmc
jmp
mov
mov
pusha
lds
imul
push
pop
sub
ss
jbe
push
inc
inc
jg
xchg
adc
insl
or
xchg
outsl
or
mov
xchg
pop
sbb
aaa
aad
adcl
sub
mov
and
repnz
push
mov
imul
ret
js
in
jg
jmp
rcl
dec
jl
pop
in
out
hlt
xor
xchg
lret
cmc
dec
jg
dec
inc
jbe
icebp
pop
mov
aad
ret
inc
clc
xchg
add
or
loope
mov
hlt
les
mov
mov
sub
xchg
adc
push
shl
imul
mov
adc
pusha
mov
int
push
xchg
xor
testb
sbbl
clc
cmp
gs
iret
mov
mov
test
or
or
lcall
xor
ljmp
inc
or
cwtl
jmp
imul
add
pusha
dec
adcl
and
add
stos
ficomps
outsb
mov
je
sub
push
pushf
lret
xchg
pusha
mov
ficoms
aaa
mov
bound
adc
mov
das
mov
mov
mov
sub
push
adc
sub
sti
push
mov
ror
fnsave
xchg
pop
xchg
and
jle
mov
xchg
sti
sbb
mov
nop
lahf
das
outsb
cmpb
add
xor
cli
clc
adc
fcoms
loop
jae
int3
aas
mov
push
mov
lods
repnz
int
cmc
cmc
or
pop
test
jl
xor
aaa
jne
fbld
cmc
mov
adc
jbe
in
adc
dec
push
mov
dec
sub
bound
jmp
pop
dec
testb
aas
xchg
sub
inc
stos
movsl
lret
out
pop
and
adc
push
ret
add
push
ljmp
pop
cmp
sbb
sub
lret
dec
sub
ret
aaa
push
mov
imul
psllq
loopne
iret
jge
adc
in
clc
stos
cmp
in
pop
and
jecxz
cs
jbe
les
sub
aaa
lods
mov
push
lea
jge
int3
mov
push
pusha
mov
addr16
ja
and
and
sub
inc
sub
inc
cmpsb
dec
xchg
sbb
mov
dec
add
mov
lcall
cmp
dec
pop
cvttps2pi
mov
cmpl
ljmp
lea
mov
pop
sub
jg
pop
imul
test
sbb
push
sbb
or
inc
lcall
mov
sti
sub
daa
cmpb
cwtl
push
push
jb
and
push
or
jp
out
pushf
jle
leave
inc
aas
xor
popf
lea
movsl
addr16
xchg
dec
test
dec
push
pop
mov
mov
repz
fnsave
in
mov
rolb
jbe
inc
pushf
test
and
stos
mov
mov
inc
arpl
cmp
jge
and
imul
add
jecxz
push
addr16
fs
aas
aad
sbb
mov
inc
adc
mov
ljmp
mov
mov
imull
xchg
arpl
fadds
lock
icebp
sub
cmp
negb
mov
pop
mov
in
xchg
inc
add
lds
fwait
lods
popf
aas
movsb
pop
daa
xchg
aad
clc
xchg
cmc
loope
cs
shlb
xlat
fs
dec
fdivrl
in
adc
dec
adc
mul
jge
add
add
inc
jne
pop
std
cli
ja
add
cmp
jle
loopne
inc
mov
add
mov
push
add
int3
xchg
jnp
pop
popf
aaa
pop
lds
adc
sub
stos
xchg
andl
sub
inc
pop
add
cmp
icebp
adc
jmp
mov
pop
mov
sub
sti
scas
mov
cmc
dec
lods
addr16
imul
pslld
sbb
mov
mov
stos
pop
sbb
stc
mov
pop
pop
xor
aad
mov
scas
xchg
mov
xchg
lcall
stos
fisttpl
dec
inc
lret
loopne
jae
lods
and
les
call
dec
xchg
xchg
test
xor
or
loop
fs
hlt
out
mov
xchg
jle
mov
sub
xchg
cmp
scas
gs
ret
xor
mov
mov
outsb
xor
push
jge
mov
icebp
add
push
push
stos
xchg
popf
sub
mov
call
ds
mov
pop
mov
test
lods
lahf
out
fs
jb
shl
inc
add
scas
mov
inc
mov
negb
sti
scas
orb
ljmp
insb
pop
aas
and
cmp
aad
lahf
mov
add
repz
dec
ljmp
fcompl
cmc
sub
jge
jns
loopne
gs
dec
push
pop
xor
xlat
add
and
xor
fucomp
mov
add
sbb
ficoms
xchg
cmp
stos
xchg
pop
int
mov
pop
xor
sbb
fidivrl
mov
sub
pop
out
mov
div
cmp
cltd
aam
cwtl
popa
jne
out
mov
jge
pop
movsl
arpl
ret
or
lock
mov
adc
or
test
ret
xchg
mov
jno
xor
mov
ljmp
mov
ror
rcrl
subb
cld
sbb
scas
lock
clc
ficompl
lcall
mov
out
shrl
xchg
xchg
xchg
xchg
jle
mov
cltd
enter
mov
daa
movsb
orb
jl
divl
xor
loopne
adc
scas
mov
push
loopne
cmpsl
jg
push
jno
lods
mov
pop
lret
cmp
push
cmp
cmp
xor
cmp
xchg
in
pop
icebp
test
scas
adc
div
jbe
push
icebp
dec
test
insb
popa
inc
jge
pop
xlat
pop
xchg
mul
xchg
fimuls
dec
push
xchg
push
call
mov
into
xchg
mov
les
popa
mov
xor
dec
sub
xchg
out
mov
jne
sub
fldl
add
jecxz
jb
sahf
push
popa
test
iret
push
in
mov
xor
mov
adc
mov
pop
mov
mov
cld
or
push
sub
fnstenv
xor
int3
enter
movsl
mov
sbb
sbbl
inc
sub
jne
in
mov
pop
stc
add
mov
jns
push
sub
sub
sub
dec
and
sbb
std
in
adc
cmp
inc
insb
imul
cmp
data16
jo
shll
push
outsl
addr16
or
icebp
mov
mov
jae
inc
dec
xor
lock
dec
sub
jl
pop
gs
cli
xchg
dec
mov
sbb
cmp
sbb
nop
popf
push
xchg
pop
mov
insl
data16
xchg
sub
mov
dec
or
xchg
ss
jmp
pop
sti
dec
sub
or
cmc
in
aam
push
fisttpll
ret
ret
xchg
shll
aaa
jg
xchg
and
push
inc
and
mov
icebp
xchg
subb
push
dec
mov
pop
repnz
jg
mov
xchg
and
enter
bound
or
inc
enter
je
lcall
jb
lahf
push
or
mov
or
pop
dec
ret
add
data16
push
outsb
rclb
das
dec
cld
sti
loopne
inc
sub
cmc
repz
and
mov
icebp
imul
mov
cmc
xor
ficoml
mov
xor
cmc
push
cmc
mov
insb
sbb
decl
sub
sahf
adc
aas
jae
call
in
loope
ficoms
ds
js
pop
sub
fbstp
pop
jo
mov
sub
jbe
cli
dec
scas
dec
das
pop
pop
fistps
imul
jp
loope
pop
mov
xlat
fsubl
push
pop
repz
or
mov
push
xorl
pusha
push
mov
add
mov
xchg
fcomps
and
outsb
xchg
jl
mov
rcll
inc
add
push
pop
shll
hlt
xlat
adc
sbb
fisubs
je
xor
popa
xchg
test
xchg
pop
and
cmc
cmp
inc
fcmove
and
adc
in
sbbl
scas
and
or
or
mov
clc
lret
and
popf
sub
sub
sub
mov
pop
stc
add
jbe
add
movsl
adc
or
nop
dec
jmp
jmp
int3
adc
sub
js
xchg
mov
lahf
push
xor
pushf
and
inc
out
popa
or
xchg
cmp
sbb
jbe
icebp
fcomps
repz
xor
pop
add
cli
imul
add
rorl
inc
call
mov
das
xlat
dec
out
push
scas
dec
inc
inc
repz
clc
mov
mov
js
push
jg
xor
fdivs
mov
inc
ret
cmpsl
and
fs
xchg
cmpsl
shlb
ds
and
movsb
mov
cmpsl
adc
mov
lret
mov
mov
arpl
adcl
cltd
fimuls
add
mov
jecxz
pop
lock
enter
add
popf
sbb
test
ss
adc
jb
add
aam
push
aas
shll
out
add
lcall
add
sub
imul
dec
daa
lret
xor
fs
push
sub
or
loop
add
div
jecxz
and
xor
adc
pop
shlb
fmulp
shll
push
and
jnp
cmpsb
mov
mov
f2xm1
dec
in
dec
div
mov
leave
or
sbb
and
repz
jmp
inc
add
jb
inc
inc
sar
and
sbb
out
movsl
mov
sbb
mov
sub
xchg
cmpb
mov
mov
sub
sbb
mov
rolb
mov
sbb
jo
xchg
scas
and
mov
sub
cmp
dec
mov
push
cli
sub
sti
jge
data16
jae
leave
fiaddl
in
cmp
sti
jle
orl
or
add
enter
imulb
push
pusha
and
and
mov
add
out
sub
xor
cli
sub
out
xor
or
push
data16
and
pop
divl
or
push
or
icebp
pop
and
xchg
hlt
pusha
mov
sti
cmp
or
dec
mov
lods
dec
sub
fadds
scas
je
faddl
sub
sub
int
hlt
ret
scas
fstps
mov
popf
out
in
adc
pop
adc
decb
cmp
pusha
pop
xchg
ror
call
mov
or
mov
lret
test
pop
outsb
jno
cs
push
ret
xlat
push
loopne
sub
adc
sbb
inc
shr
cmp
fistl
push
shlb
daa
pop
data16
pop
and
lods
sub
aam
stos
mov
pop
mov
cli
int3
movsb
pop
jle
push
fmulp
sbb
sbb
dec
jns
pmaxub
inc
xchg
orl
jmp
push
pop
roll
pop
int
sbb
fisubrl
sbb
aas
lock
push
jno
stos
mov
xor
pop
fs
daa
and
mov
jns
outsb
loop
xor
leave
dec
dec
fnsave
mov
ret
sti
icebp
jne
movsb
mov
fadds
and
jg
popa
sbb
mov
xchg
shlb
push
imul
jmp
mov
popf
popa
in
push
dec
bndstx
sbb
lret
fs
ret
jmp
push
popf
sbb
sub
pop
pop
fnsave
mov
xchg
push
insl
mov
and
popl
cli
add
push
xchg
shlb
mov
cld
ret
pop
sbbb
dec
mov
in
mov
mov
gs
mov
cld
jp
pushf
inc
or
mov
or
notl
mov
mov
push
cmpsb
inc
gs
xor
jne
aam
enter
inc
dec
mov
pop
sub
iret
icebp
fcmovnu
mov
pop
adc
call
insb
add
es
jno
mov
lods
pop
xlat
inc
loop
jo
add
jno
fldl
cmpsb
or
dec
ds
lahf
pop
loope
clc
fdivl
sbb
xchg
call
adc
popf
enter
jnp
xchg
idivb
in
dec
fdivl
sti
add
movsl
movzbl
aas
mov
pop
xchg
pop
fs
xor
fcmovb
jecxz
lret
lea
test
ss
imul
mov
ret
repz
pop
sbb
ret
mov
fdivl
mov
pop
jnp
mov
inc
or
or
adc
cli
sbb
adc
jle
cs
andb
loope
fdivrs
fmuls
arpl
mov
push
ret
rcll
sbb
lock
outsb
mov
lret
sub
xor
sbb
out
in
cwtl
add
mov
rolb
jno
ret
lret
and
add
xchg
jle
adc
adc
mov
push
adc
shlb
jge
lcall
add
inc
sub
push
dec
mov
jo
sub
xlat
jle
inc
je
pop
lret
and
xorl
sub
mov
cwtl
dec
jnp
fsub
inc
sbb
mov
jl
nop
jmp
or
pop
cmp
adc
adc
mov
repz
test
popf
sub
icebp
push
dec
mov
push
decl
sti
fs
push
mov
xor
out
iret
adc
pop
or
aam
mov
sbb
insb
cmp
mov
cmpsl
or
mov
mov
xchg
das
leave
jmp
push
std
push
je
mov
mov
cli
fwait
inc
es
push
and
pop
les
xchg
jg
cwtl
fsubrp
pop
fmul
jns
insl
pop
lds
cmpsb
rorl
fs
xor
mov
and
outsl
pusha
adc
fdiv
fidivs
jns
inc
xor
and
lahf
cmpb
jnp
into
fidivs
out
gs
iret
or
xor
movsb
mov
ljmp
mov
jne
ss
or
sub
ss
fstl
shrl
jle
jo
jecxz
xchg
lods
rcrb
push
icebp
pop
in
fs
pushf
push
jns
xor
push
inc
ljmp
lea
and
in
into
mov
stc
addl
stc
cmp
daa
nop
into
add
call
push
clc
push
packuswb
xchg
sbb
mov
jge
mov
leave
subb
xor
data16
xchg
xchg
inc
sub
pop
popl
sub
dec
call
inc
pop
pop
pop
mov
xchg
fmuls
pop
mov
iret
dec
pop
test
push
mov
pop
mov
add
and
pop
push
cmp
jle
negb
or
stos
add
js
cmpsb
lods
pop
jnp
std
mov
scas
lret
add
shl
lret
aad
inc
mov
or
idiv
xor
mov
inc
mov
nop
mov
push
rep
push
in
inc
dec
pop
mov
adc
scas
shlb
push
enter
sub
sbb
int
fsubrs
sub
sbb
in
add
cmc
in
or
jecxz
aaa
push
out
mov
es
adc
inc
jmp
xchg
jle
push
pop
add
cmp
popf
xor
sbb
sbb
cs
pusha
xor
mov
cmp
adc
dec
mov
push
arpl
mov
xchg
sub
lods
je
jne
sub
sarb
leave
lock
lea
ffreep
cmpb
pop
mov
out
fisubrl
lret
sub
and
or
xor
mov
jo
ja
dec
push
add
imul
fimull
lret
stc
shrb
mov
insl
shrl
cmpsb
scas
sub
sub
push
fidivrl
icebp
shrb
cmp
mov
xlat
nop
fldl
enter
fldt
clc
insl
aas
mov
and
lock
test
dec
push
jg
hlt
pop
int3
cmpb
pusha
xor
pop
aad
fldenv
pop
je
test
lods
inc
out
sbb
lds
ret
fisttps
jp
lods
lds
mov
clc
xchg
in
icebp
inc
or
mov
or
push
or
popa
fwait
mov
in
jle
mov
insl
daa
gs
mov
dec
push
mov
xor
and
insb
jb
orl
add
sbbb
or
sbb
imul
or
ljmp
shrb
ret
cmp
dec
mov
jne
dec
cs
shrl
xor
mov
dec
xor
dec
mov
lods
les
cmp
dec
cmp
pop
and
and
je
mov
les
sub
jbe
stos
std
pop
adc
xchg
sbb
jge
and
inc
add
std
in
cmpsl
xchg
sub
repz
icebp
cmpsl
and
and
mov
bound
mov
cmp
xor
cmp
cli
nop
mov
jno
shlb
push
test
xor
inc
pop
jmp
push
sbb
mov
mov
push
in
cmp
outsl
xchg
xchg
popa
cltd
sarb
xchg
fnsave
mov
lret
fimuls
dec
sbbl
rcll
int3
decl
sbb
jnp
or
lret
sti
mov
mov
mov
repnz
bound
lea
popa
xchg
dec
jns
cmpl
push
xchg
xor
shr
add
fst
inc
push
push
pop
stos
push
lcall
lahf
pop
push
push
sar
lods
add
repnz
call
add
repnz
mov
nop
xor
clc
push
mov
jae
fs
imul
mov
or
push
xor
inc
addr16
bound
lods
or
call
jo
ficompl
out
jne
push
jnp
aad
add
pop
push
not
icebp
jbe
sbb
popa
jle
out
inc
mov
pop
cmp
mov
cld
lret
xchg
xor
mov
mov
pop
repnz
add
ret
push
and
jb
clc
inc
repz
xchg
push
ret
or
stos
pop
lcall
mov
jbe
or
call
imul
sub
std
or
adc
sub
pop
jb
stos
xor
or
mov
ficompl
inc
fidivrs
push
sahf
xchg
jl
inc
stos
mov
cld
push
cmp
mov
or
cmpsl
lods
adc
xchg
ficompl
jmp
ja
adc
sbb
xor
incl
lods
mov
aas
data16
rcr
push
jne
les
add
add
into
dec
loopne
push
jno
cld
adc
inc
fwait
jmp
mov
cmpsb
adc
sub
inc
xor
rolb
xor
das
xorb
add
rcll
dec
aam
out
and
nop
adc
cs
jns
loopne
sub
inc
add
push
or
xchg
jp
stc
xchg
scas
in
shll
push
inc
shl
inc
cmp
push
flds
sbbl
push
nop
jl
pop
sti
or
cli
in
ret
outsb
mov
xchg
addb
or
jnp
or
fsubrl
pop
scas
outsl
push
clc
mov
mov
jmp
outsb
stos
xchg
xchg
xchg
js
fs
add
pop
xchg
orb
dec
pop
and
push
insl
ficoml
stos
popa
hlt
outsb
loope
sub
cmp
pop
or
mov
dec
jno
dec
cmpsl
dec
out
popa
out
fnstenv
iret
mov
mov
pop
xor
pop
les
push
jbe
xor
inc
bound
icebp
jbe
mov
cld
pop
div
repz
sysenter
xchg
popa
sahf
or
xor
sarl
jae
repz
clc
ret
scas
popf
push
inc
sub
jle
popa
loop
jb
icebp
xchg
movsl
xchg
ss
add
pusha
jl
jo
mov
dec
insb
mov
out
xor
data16
mov
push
xchg
pop
cld
dec
jne
in
push
inc
adc
cmpb
dec
sub
mov
inc
mov
cmp
sbb
jae
and
mov
cmp
aad
add
xchg
lds
inc
mov
stos
or
ret
rcr
fldenv
and
xor
jmp
add
jae
in
push
xchg
roll
mov
xorb
sbb
cs
lcall
cli
movsb
or
pop
test
mov
into
push
jnp
cmp
jle
inc
pop
cmpsl
mov
out
inc
mov
mov
xchg
sahf
xchg
rcrl
push
js
jge
xchg
das
mov
testl
add
hlt
rcr
sub
mov
dec
push
xchg
lods
sti
fcmovbe
add
loop
es
je
movsl
push
in
ja
xor
mov
dec
popa
mov
aad
sbb
sub
daa
jnp
dec
sbb
xchg
push
stc
enter
cmpsl
cs
test
cltd
aam
addr16
jmp
push
sub
mov
adcl
test
loopne
push
mov
mov
push
pop
adc
into
lods
add
add
popa
or
lock
xchg
lock
imul
xchg
xchg
and
cld
lahf
out
lods
icebp
mov
cmpsl
fldenv
fs
inc
sub
into
sub
xor
jae
cmp
ja
jmp
lea
or
push
enter
pop
jnp
xchg
insl
jge
out
sbb
sbb
dec
mov
inc
cmpsb
std
xor
movb
pop
push
mov
push
cmp
xchg
pop
mov
dec
sub
xor
add
enter
cmp
ljmp
pushf
cmp
add
fbstp
fimuls
mov
lcall
fisubs
cwtl
das
mov
xchg
in
into
aad
xchg
pop
ds
ret
push
sbb
gs
cmp
xor
sub
stos
icebp
mov
pop
test
test
enter
push
xchg
sete
test
fldt
xchg
fiaddl
imul
mov
cltd
test
jbe
daa
jae
ja
pushf
sbb
inc
pop
jno
in
sub
sub
rorl
and
sub
jle
sbb
mov
mov
sub
dec
xchg
cmp
shlb
aas
lods
imul
stos
loopne
out
adc
out
inc
sbb
adc
cld
lock
loopne
jns
daa
inc
mov
mov
or
push
mov
lods
in
imul
gs
dec
mov
lret
cmp
addr16
and
add
mov
xchg
xor
dec
das
rclb
add
push
xor
andb
icebp
test
out
shl
inc
out
aam
mov
aad
inc
mov
lret
sub
insb
stos
scas
jbe
mov
jle
and
jmp
mov
jge
push
mov
loopne
or
xor
loopne
popf
fldcw
mov
adc
in
lret
mov
mov
add
adc
movsb
fsubrp
pop
jo
je
andb
and
mov
push
inc
xor
ret
sahf
jno
push
xchg
push
push
sbb
cmpsb
shr
mov
dec
or
pop
popf
mov
lods
xchg
jae
xchg
fsubrs
mov
imul
sub
jb
icebp
lret
xorb
into
call
bound
fidivs
sbb
clc
pop
jecxz
dec
out
xchg
push
fs
js,pt
mov
scas
push
inc
inc
push
xor
cmp
jo
cltd
cmp
aaa
sub
adc
mov
je
push
hlt
sbb
and
xchg
out
jle
roll
outsb
fs
dec
push
sub
xchg
lods
add
inc
pop
ret
loope
dec
popa
or
mov
sub
xchg
add
aad
mov
mov
mov
and
aaa
push
imul
jge
movsl
clc
jne
sub
rorb
xor
call
mov
mov
das
adc
out
cmp
arpl
mov
mov
or
and
ljmp
daa
add
call
add
add
sti
sbb
arpl
adc
sahf
and
ljmp
pop
and
cmpsb
push
inc
daa
xor
push
adc
fadds
out
dec
les
cld
test
test
mov
jno
mov
add
sub
cwtl
xor
pop
dec
sub
dec
loop
enter
mov
imul
push
mov
sub
and
add
loope
repnz
inc
mov
sbb
jae
in
pop
test
gs
mov
je
pop
push
jno
inc
loopne
movsl
fisubl
xor
cltd
idiv
repnz
push
paddusb
iret
lock
pop
cmp
cwtl
jne
cltd
das
push
xchg
push
dec
adcb
dec
push
mov
jle
fistl
mov
lds
lods
inc
mov
mov
lds
pop
mov
jbe
adc
jmp
imul
adc
lods
scas
stc
arpl
cmp
insb
adc
or
xchg
aas
fwait
and
data16
out
sub
sti
les
dec
nop
push
mov
push
ja
or
inc
mov
in
out
mov
dec
jge
push
dec
dec
into
mov
inc
pushl
popa
sahf
push
stos
imul
jo
sub
test
add
fisubs
or
mov
shll
in
call
rcrb
pop
pop
subb
cmove
movsb
sbb
cmp
vcvtps2pd
inc
mov
mov
int
push
cmpl
das
xchg
por
sub
sbb
xlat
jmp
pop
sub
jg
pop
out
sahf
push
mov
jb
xchg
xchg
dec
testl
daa
adc
daa
pusha
dec
add
test
mov
mov
dec
rcrl
divb
mov
push
and
add
add
iret
cmpsl
jae
xchg
xchg
mov
and
loope
mov
testb
aad
loope
outsl
jmp
mov
adc
dec
sbb
iret
ljmp
xor
imul
sbb
push
popa
fs
imul
cmp
jae
iret
pop
loope
lcall
pushf
negb
shrl
mull
sub
out
push
scas
push
lret
outsb
xchg
adc
push
sar
push
test
adc
mov
mov
addr16
xor
imul
jns
cmp
out
push
push
das
and
mov
call
fisttpll
dec
pop
into
push
inc
into
cs
jno
fidivrs
sbb
aam
xchg
or
sub
ret
jg
imul
inc
mov
dec
ret
pop
adc
lods
fimuls
push
inc
fcmovnu
ljmp
adc
sub
loop
pushf
sub
inc
adc
or
adc
decl
pop
push
in
inc
ret
or
xchg
idiv
dec
faddl
push
cmp
adc
jge
push
lahf
mov
pop
rcrb
cli
int
xchg
pop
inc
xchg
ds
pop
jg
or
fdiv
shrl
outsb
outsb
xor
xor
dec
jp
lret
testb
inc
outsl
ja
and
and
jl
pop
sbb
cli
sbb
lock
std
sbb
stos
mov
out
imul
cwtl
out
or
adc
fbstp
lods
cltd
movsl
pop
xchg
cmc
mov
mull
aaa
in
aad
fisttpl
push
sbb
pop
cli
adcb
ret
fimull
in
rclb
push
mov
dec
pop
mov
mov
imul
sbb
or
stos
lahf
imul
es
aad
cli
push
std
je
jl
daa
filds
pop
cmpsl
pop
adc
into
testl
fisttps
jae
testl
or
cltd
push
outsb
cli
add
xor
dec
lret
iret
sbb
clc
sbb
cmpb
fcmovb
nop
movsb
fistpl
jecxz
out
aaa
outsl
push
jl
sahf
sbb
inc
and
sarb
gs
je
cmp
in
fsts
inc
or
mov
dec
jle
push
outsl
pop
jb
pop
test
inc
pop
xchg
jne
in
fsts
push
inc
imul
leave
add
pusha
sbb
push
in
xchg
jbe
or
add
sbb
add
or
loopne
iret
and
pop
sbb
push
push
jbe
push
neg
dec
adc
insl
and
ss
mov
leave
scas
push
cmp
xorb
push
mov
mov
inc
leave
sub
push
jbe
mov
daa
sahf
cwtl
xchg
out
sbb
mov
jnp
fsts
adc
dec
sub
out
insb
int3
inc
or
cltd
fs
insb
sub
mov
mov
sahf
insl
inc
inc
int
loopne
mov
and
ja
xor
dec
dec
ds
mov
push
gs
mov
pop
outsb
xchg
dec
push
xchg
bound
adc
adc
gs
mov
pusha
adc
cld
cmp
pop
dec
or
lahf
stos
popa
mov
cmpsw
test
out
fistpll
pop
adc
sub
cmp
mov
jecxz
cpuid
mov
mov
mov
mov
mov
mov
pop
sbb
fcoms
adc
mov
mov
data16
movsb
sub
and
sub
ret
insl
jae
lret
cmp
loopne
std
adcb
pop
js
int3
roll
cwtl
inc
out
or
mov
das
pop
mov
ficoml
mov
push
lcall
int
push
popf
or
rclb
mov
jne
jns
vaddsd
leave
mov
mov
sti
lods
fdivs
pop
cld
repz
xchg
adc
aad
push
pop
sub
mov
mov
repz
push
sub
aas
xchg
mov
xor
mov
jg
clc
xchg
ljmp
loope
fldt
sub
jnp
sbb
iret
icebp
pop
rcrb
sub
sbb
xor
sbb
outsb
addr16
push
movsl
adc
add
mov
dec
sub
xor
nop
outsb
outsl
push
mov
aam
inc
pop
mov
mov
sub
mov
lret
mov
cmp
jns
out
test
into
dec
mov
mov
mov
add
sub
mov
enter
inc
xchg
mov
in
push
mov
ljmp
and
push
xchg
rclb
fidivrl
jl
fstl
and
jae
out
push
adc
or
inc
insb
addr16
sbb
xchg
test
cmp
lea
push
loope
or
out
and
mov
ret
adc
push
jnp
sbb
iret
xchg
stos
and
sub
fucom
jp
push
xor
iret
rorb
xor
adc
mov
cmp
or
mov
stos
inc
mov
scas
dec
pop
pop
sbb
push
dec
cltd
imul
arpl
jp
scas
sbbl
fcmovnu
insb
inc
subl
jge
push
or
push
mov
dec
xchg
fdivl
movaps
inc
xchg
clc
adc
add
movb
add
cmp
sub
sbb
mov
add
insl
cwtl
hlt
and
stos
dec
jo
inc
pushl
ret
adc
out
cmp
sti
xchg
sti
mov
push
add
pop
dec
or
sub
jg
in
imul
inc
pusha
je
mov
aas
jmp
dec
nop
fistps
test
stos
scas
and
out
add
stc
arpl
push
idivb
push
insb
cmp
adc
xchg
xor
fmull
mov
iret
and
push
xchg
cmp
mov
inc
mov
lods
mov
jle
or
sub
ret
push
stos
adc
fs
inc
sbb
mov
push
insl
inc
fs
xchg
ljmp
or
mov
or
jb
pop
adc
sbb
sbb
push
mov
bound
je
and
sub
sbb
test
and
pop
pop
adc
insb
sbb
pop
add
movsb
adc
push
cltd
sarb
xchg
and
inc
imull
addr16
or
mov
xchg
mov
push
inc
lds
in
and
add
mov
rdmsr
mov
xchg
push
lret
aas
mov
shl
stos
cli
mov
xor
xchg
adcl
sbb
pshufw
cwtl
outsb
jnp
dec
mov
mov
and
insb
lock
cli
jge
push
cmp
sbb
movsb
push
pop
push
lods
and
sub
adc
es
dec
mov
repz
xchg
pusha
jno
pop
bound
dec
repz
inc
int
pop
shll
enter
and
mov
adc
shlb
sti
push
loopne
cmp
pop
aaa
lods
dec
xor
pop
or
mov
xchg
pop
rolb
cmpsl
mov
and
lea
lods
push
js
xor
ret
or
vpand
pop
xlat
push
clc
ja,pt
scas
iret
int3
into
and
sbb
dec
mov
in
in
test
not
fisttps
popa
or
cmp
cmp
mov
pop
xlat
xor
mov
fldcw
aad
stos
inc
mov
or
sub
int
call
mov
mov
and
push
pop
movb
jge
insl
ljmp
mov
pop
dec
add
adc
adc
sbb
xor
push
pushf
dec
ds
dec
add
push
dec
sti
icebp
dec
push
mov
cmpl
sbb
arpl
lret
idivl
cmp
movsl
pop
mov
add
jnp
mov
mov
push
stc
mov
rcl
cmc
fs
icebp
xchg
pop
inc
push
std
push
mov
mov
xlat
xor
je
popf
je
dec
rcr
movsl
sarb
adc
jns
mov
loope
ss
rcll
mov
xchg
movsb
cmp
mov
scas
cltd
push
sarl
push
and
mov
jecxz
pushf
ds
sbb
sahf
pop
lret
fmull
mov
loopne
icebp
mov
es
jg
loopne
pop
xchg
sub
decb
roll
cmpl
xchg
loop
ss
lcall
jle
mov
inc
adc
xchg
and
adc
lock
and
divl
outsb
iret
push
js
repnz
lock
mov
xchg
lret
pop
jne
test
push
ljmp
dec
dec
insb
mov
imul
out
cli
lcall
jmp
mov
mov
xlat
mov
cmp
jle
clc
ljmp
mov
push
ja
lods
sub
test
sbb
xlat
jae
popf
pop
sbb
lods
mov
jp
test
test
daa
push
dec
std
rorb
icebp
int3
add
bound
insl
mov
fistl
push
nop
sbb
jg
add
hlt
or
cmp
jl
cmp
das
into
movsl
imulb
mov
push
hlt
and
mov
adc
sub
cmp
mov
out
xor
push
fwait
into
call
jno
out
mov
mov
xchg
decb
xchg
sub
sub
jae
inc
sub
pushf
lret
aam
rcll
lea
pop
mov
dec
js
add
push
xor
sbb
sahf
push
gs
jmp
mov
sub
loopne
ret
jne
cwtl
out
mov
sbb
scas
cltd
lods
sbbl
lea
jle
call
repnz
mov
sub
cmp
in
roll
cmp
ja
cli
sti
clc
ljmp
test
jbe
das
pusha
lock
stc
fsubrp
cmp
dec
shr
mov
and
dec
cmpsb
and
jg
xchg
inc
ja
fistpll
dec
jno
aas
cmp
imul
aad
jge
cmp
movsl
sbb
cmp
mov
adc
sbb
out
adc
push
mov
dec
ja
dec
sahf
or
mov
data16
cld
mov
bound
push
outsb
orl
je
fmull
push
jns
cmp
sub
pushf
dec
dec
mov
lods
stos
stos
call
jno
lods
orl
ret
in
mov
lret
or
sti
call
neg
add
mov
bound
xchg
call
outsl
sub
mov
add
cmp
fucomip
cmp
sbb
std
cmp
cmpsl
mov
mov
repz
mov
insb
sbb
jp
pop
clc
and
add
imul
push
mov
stos
ret
addl
cld
and
mov
xchg
add
lock
xor
xchg
arpl
jecxz
mov
push
mov
pop
adc
mov
or
stos
sti
adc
add
movsl
mov
mov
dec
rorl
dec
adc
in
add
push
inc
dec
dec
icebp
xlat
pop
dec
cmp
xor
test
and
iret
icebp
testb
out
lea
mov
xchg
iret
int3
lea
mov
fdivrs
loop
push
jmp
adc
js
and
sub
imul
adc
inc
xchg
imul
dec
pusha
insb
jl
mov
cld
fs
je
xor
test
fnstcw
leave
and
lahf
and
jge
xchg
or
push
rolb
push
mov
ljmp
inc
xor
inc
orb
test
cmpl
lods
pop
push
ds
les
pop
mov
push
outsb
dec
mov
mov
inc
mov
pop
xor
inc
aam
fucompp
adc
cmpsl
mov
mov
mov
bound
mov
andl
int3
inc
cli
ljmp
ret
cmc
jbe
in
test
jmp
or
mov
clc
sub
cld
cwtl
and
mov
xor
inc
sbb
sbb
xor
xchg
fiadds
or
dec
ret
mov
lds
or
stos
xchg
out
push
lock
xchg
into
mov
sbb
mov
loope
inc
mov
stos
adc
sti
add
xchg
xchg
scas
imul
push
mov
sub
mov
es
leave
jge
or
inc
cmpsl
mov
out
int
and
fsts
mov
xor
pushl
sbb
aam
ret
jo
xor
ret
xchg
mov
cmp
in
loope
enter
lret
sbb
ljmp
and
outsb
leave
popa
mov
add
ss
jle
cmp
ds
imul
mov
adc
test
mull
movsb
cmpsb
push
sub
fiadds
outsl
inc
call
das
sti
out
mov
or
xchg
jne
pusha
cli
test
dec
jbe
fwait
sub
ret
push
repnz
js
fwait
dec
icebp
movsw
cmp
fisubrs
movsl
xchg
mov
movsb
dec
ret
sub
test
aas
mov
mov
movsl
xor
push
push
lret
xor
jno
std
sub
pop
jno
call
xchg
push
push
rolb
mov
cwtl
daa
push
push
jno
sbb
cmp
jmp
jo
push
jo
or
lods
loopne
dec
add
adc
sub
mov
and
dec
mov
adc
sahf
lahf
nop
in
mov
popf
mov
add
jle
addr16
add
icebp
ja
insl
dec
movsl
add
repnz
xchg
mulb
pop
insl
cltd
stos
leave
mov
iret
cltd
sbb
idivb
mov
int3
loopne
push
mov
xchg
cmpb
stos
dec
adc
out
jmp
mov
push
and
repz
popf
jbe
mov
pop
pushf
pop
sbb
mov
mov
dec
sbbb
cwtl
adc
jb
fldt
repz
and
out
mov
inc
repnz
bound
push
add
xor
jns
cmp
out
sub
push
jg
es
into
into
cld
jb
pop
adc
dec
lds
push
test
daa
pop
sti
aam
push
mov
je
clc
ds
sub
lods
add
test
push
or
xor
and
std
xor
or
imulb
pop
scas
inc
ficomps
addb
push
cmp
jo
or
outsb
addb
addr16
bound
push
and
daa
jno
add
scas
mov
cmpsl
mov
jg
sahf
mov
sbb
dec
xor
xor
adc
add
sub
pop
cltd
pop
leave
js
jno
push
mov
dec
fs
adc
xlat
fldt
inc
push
stc
shll
push
adc
adc
ds
popf
enter
in
mov
in
and
test
shll
adc
mov
or
lea
fs
gs
xor
sbb
fiaddl
jp
mov
cmp
sbb
fisubrl
shrb
int3
call
xor
jecxz
mov
adc
mov
xor
jge
mov
xor
pop
pop
and
fcompl
leave
dec
dec
daa
and
jno
adc
mov
or
mov
sbb
mov
and
lds
out
or
xchg
stos
push
pop
jne
xchg
roll
mov
test
outsb
fildll
xlat
jg
jne
xchg
movsl
icebp
fmuls
subb
push
cli
fcompl
lret
rcrl
mov
stos
xor
in
gs
popa
ret
or
push
scas
sbb
push
dec
add
pop
sbb
dec
rol
mov
xchg
stc
add
jns
pop
jl
cmp
cmp
scas
mov
adc
xor
jle
or
pop
inc
push
and
add
in
aam
cmpsl
cmc
jg
xor
push
mov
and
dec
mov
loop
pop
jp
mov
sub
mov
dec
mov
shr
xchg
das
push
ja
int
enter
add
mull
loopne
js
shlb
add
bnd
and
push
gs
lods
divb
dec
subl
push
inc
pop
and
adc
pop
mov
mov
test
xor
inc
popf
push
test
sahf
and
pop
jae
clc
mov
mov
les
xchg
cmp
aad
adc
jl
cmp
push
add
dec
std
xor
lret
pmaxub
and
insl
add
mov
loopne
jge
aas
imul
aad
pop
rorb
test
mov
jbe
addb
in
or
mov
mov
inc
jnp
lods
dec
push
cwtl
or
fnstsw
pop
loopne
add
push
dec
dec
in
repnz
and
fsubrs
add
fcompl
cld
pop
adc
dec
pop
mov
xchg
shll
sub
lock
ficoms
test
nop
or
or
and
scas
sub
mov
push
mov
rorl
loop
mov
pop
push
into
adc
pusha
jp
cmp
cmp
jo
rcrb
je
ret
mov
inc
out
wrmsr
pushl
or
fldenv
cmpb
or
cmpl
pusha
outsl
or
lret
push
mov
out
sub
cld
or
xor
addr16
pop
xchg
outsb
cmp
hlt
rcll
loope
push
mov
ljmp
cltd
clc
sbb
pop
dec
ja
adc
pop
inc
mov
leave
out
or
mov
mov
pop
mov
jecxz
scas
jecxz
repnz
movsl
bound
adc
push
call
outsl
mov
mov
adc
and
inc
lods
ss
testb
mov
cwtl
jo
inc
rolb
pop
add
rol
mov
jns
push
mov
bound
fldlg2
cmpsb
lock
inc
mov
adc
ja
jne
mov
sub
out
cmovne
mov
je
push
jns
sbb
fnsave
adc
and
test
xlat
cmpsl
popa
sar
test
dec
and
out
dec
fnstcw
xchg
jnp
mov
std
mulb
aad
fdivrl
enter
stc
outsb
pop
push
call
push
sbb
pusha
insl
pop
adc
test
lea
scas
or
lods
push
testb
and
mov
jge
inc
pop
sbb
sbb
out
xchg
shl
dec
fidivs
xor
ljmp
mov
int
xchg
inc
add
xor
push
sbb
sub
mov
jmp
cmpl
cmp
sub
fcompl
lret
call
xchg
cmpsl
add
xor
cmp
push
push
in
mov
cmp
dec
inc
dec
test
imul
xlat
and
lea
leave
mov
outsl
jp
lahf
cmp
outsb
inc
inc
jbe
icebp
dec
xorb
enter
mov
ror
dec
shll
js
push
call
xor
cmpb
ficompl
or
jmp
add
sahf
push
jno
fidivs
sbb
xor
repnz
fidivs
sarl
dec
mov
aas
push
pop
xchg
fldt
rorb
mov
int
dec
je
int
push
int3
aad
scas
icebp
ss
and
cmpsb
fcmovu
push
aam
push
jp
sarb
push
add
pop
inc
daa
test
pop
sub
out
cmp
enter
pop
data16
xor
or
orb
icebp
mov
fwait
or
push
cld
or
lret
inc
dec
adcl
inc
mov
aad
and
mov
ret
jo
cmp
xorl
jbe
ret
pusha
mov
jnp
idivl
push
pop
hlt
xorb
leave
dec
xchg
push
scas
loope
std
xchg
add
jno
jns
or
push
inc
mov
insb
sbb
jno
xor
mov
dec
lock
xor
dec
or
imul
inc
scas
cmp
xorb
fnstenv
mov
push
mov
call
adc
subb
cmp
mov
push
fcomp
add
add
fidivrs
mov
pop
jmp
aaa
rcll
xor
and
push
cli
push
pusha
xor
ljmp
xlat
jp
lahf
xor
dec
je
sahf
leave
jb
lret
cmc
enter
sub
pop
xor
fidivrs
jmp
in
out
xor
dec
jg
outsb
test
adc
imul
xchg
xchg
pop
inc
insb
fwait
dec
or
clc
mov
rcll
or
sti
add
cmp
jp
loop
or
out
xchg
hlt
mov
movb
push
fcoms
lret
pop
lock
bound
xchg
aas
sarl
xor
dec
xchg
inc
pop
call
popf
xchg
shlb
adc
push
jns
out
jae
ja
pop
imul
or
out
pop
cmc
imul
push
jbe
dec
cwtl
dec
xchg
adc
dec
pop
add
sti
dec
fs
outsb
into
jp
jge
mov
loop
sub
int
lcall
push
movsb
sarb
mov
jmp
add
into
hlt
lahf
iret
stos
xor
inc
imul
xlat
mov
aaa
lods
xlat
into
lods
cmp
into
lahf
and
xchg
adc
int
shlb
inc
popa
jae
cs
idivl
cmp
jle
enter
inc
mov
jp
cmp
lret
imul
popa
test
and
test
pushl
jecxz
lods
fldl
pop
xor
inc
ss
bound
sub
outsb
push
push
xchg
mov
adc
mov
rol
jmp
push
daa
jbe
pop
jae
xchg
sbb
adc
fimuls
adcl
iret
push
pusha
dec
sti
push
jmp
adc
lret
mov
jge
inc
inc
into
pop
inc
cmpsb
jne
push
mov
clc
add
push
pop
push
xor
stos
mov
sbb
out
call
inc
mov
std
mov
mov
dec
sbb
xchg
cld
shlb
push
lds
sbb
cld
daa
mov
stos
mov
jbe
pop
es
mov
lock
mov
fldcw
test
push
pop
pop
outsb
cli
mov
push
xchg
push
cs
xor
rcrb
imul
dec
int
stos
out
in
and
mov
in
cmp
std
cmpsb
in
mov
xchg
sbb
mov
pop
xchg
fdivr
es
lret
das
mov
arpl
in
mov
test
leave
gs
out
pop
into
sub
adc
loopne
les
sahf
in
les
mov
ja
push
sti
imul
int
add
int
xchg
out
hlt
and
pop
mov
xlat
call
sub
jmp
push
push
xchg
mov
fisttpl
jp
into
test
les
xchg
mov
lret
xor
test
pop
lcall
jmp
inc
pop
add
add
fdiv
in
cmp
inc
sbb
or
pop
xchg
cli
dec
sub
arpl
popf
lret
dec
call
mov
dec
fdiv
push
jl
pop
dec
and
fnstenv
loop
ss
mov
loopne
cmp
mov
stos
add
pop
cmp
fmuls
cld
mov
negb
das
movsb
ljmp
ljmp
xchg
sub
mov
arpl
push
imul
push
jl
dec
mov
mov
arpl
mov
inc
cmp
pop
test
jl
mov
das
std
xchg
ss
pop
cmp
mov
lcall
nop
jbe
popa
aam
push
mov
push
cmpsl
sbbb
lods
and
add
daa
or
dec
fnstenv
mov
mov
dec
rorl
pop
bound
jmp
rclb
adc
insb
sub
mov
mov
sbb
les
sub
loopne
popa
test
inc
mov
icebp
sbb
hlt
xchg
inc
mov
cmp
mov
ds
notb
in
lds
mov
xchg
dec
cmp
lahf
sub
cmp
movl
push
dec
push
test
incl
inc
jae
pop
mov
push
dec
nop
loope
outsl
in
jg
xor
mov
ja
adc
push
scas
or
inc
arpl
push
push
loopne
ljmp
lret
aad
xchg
out
sbb
adc
push
inc
js
outsb
call
cltd
xchg
into
adc
je
mov
insl
mov
inc
and
int
sbb
sbb
dec
adc
out
outsb
and
jne
dec
mov
sarl
or
and
int3
int
ret
mov
imul
sahf
js
addr16
jp
jb
sbb
and
sub
repnz
push
addb
sub
xchg
lcall
adc
push
pop
ret
lahf
pop
std
enter
sub
sub
enter
jge
and
std
lock
xor
dec
dec
adc
cmpsb
push
mov
pop
push
lods
inc
scas
pop
adc
fidivrs
lea
lcall
or
push
fsubrl
inc
mov
cmpl
pop
dec
or
arpl
int3
aad
add
test
push
inc
dec
push
testb
rcr
ss
sub
aas
add
dec
inc
pop
dec
mov
mov
jge
sahf
cli
add
or
xchg
rdpmc
xlat
add
stos
and
jge
mov
sub
iret
rorb
stos
int3
aam
lahf
mov
rclb
in
cmpsb
adc
and
mov
and
lea
sbb
mov
loop
addr16
sahf
popa
xchg
mov
cmp
cmp
or
dec
ss
inc
roll
jo
adc
dec
sbb
push
xor
xchg
pop
pop
ficompl
lahf
bound
out
push
xchg
shlb
sti
mov
lods
imul
sub
daa
outsl
and
js
and
pop
test
roll
fld1
adc
outsb
push
mov
or
cwtl
out
jno
add
aam
lcall
xor
les
mov
scas
inc
icebp
inc
sub
add
out
mov
es
out
mov
pop
dec
aas
pxor
inc
insb
and
ffreep
pop
iret
xor
mov
sbb
push
fdivrp
push
fildll
aam
jo
scas
sbb
pop
push
xor
aaa
aaa
jp
or
inc
outsb
mov
xor
fistpl
and
push
fsubr
mov
test
cmp
sbb
mov
lahf
mov
jle
sbb
es
out
pop
inc
fdivs
adc
lret
loopne
dec
sbb
out
dec
push
push
fistpl
dec
inc
outsb
xchg
sbb
inc
cltd
mul
push
out
mov
cmp
aam
cmpsb
loopne
push
lret
incb
imull
mov
ret
data16
pop
pop
mov
scas
fistl
lods
fsubl
leave
inc
adc
stc
xchg
int3
xchg
mov
repz
fs
lods
fld
inc
mov
imulb
int
sbb
jg
in
jb
dec
subps
mov
jbe
or
aam
xor
and
cltd
repnz
nop
lret
sbb
aas
mov
xor
es
mov
add
or
cmpl
outsb
inc
lahf
mov
pushf
aam
dec
jg
pop
dec
pop
pop
iret
jns
in
mov
les
fnstcw
sti
leave
sbb
pushf
xor
sub
sbb
xchg
and
jns
jne
popa
lcall
int3
roll
jl
jne
sub
mov
cpuid
fsts
mov
add
mov
cmp
nop
inc
jo
add
inc
lahf
mov
shlb
je
mov
lea
push
aas
dec
sub
adc
or
jecxz
mov
sub
pop
mov
arpl
stc
arpl
sub
ja
lds
faddl
fnstenv
xor
mov
push
xchg
dec
inc
jle
fwait
mov
cmp
xor
push
lea
add
lcall
jae
inc
push
fiaddl
in
sbb
mov
clc
leave
mov
inc
out
stc
lea
cwtl
je
cmp
push
sarl
in
or
mov
cltd
xchg
jnp
cmp
mov
lods
push
repnz
and
adc
or
dec
push
punpcklwd
jnp
aad
fnstcw
sbb
ja
adcb
movb
fadds
and
and
push
fstpt
xlat
push
rcr
push
add
dec
mov
call
cmp
push
dec
xor
or
pop
jb
je
push
or
loope
mov
cwtl
xchg
cmpsl
pop
push
stc
add
ret
lds
add
push
repnz
loopne
in
mov
pop
ja
cmp
xlat
jae
fnstenv
in
in
sti
or
sub
idivb
pusha
mov
je
rcrl
int
add
lods
cmp
mov
xchg
xor
pop
push
mov
lds
mov
imul
mov
rcrb
sbb
test
pop
or
sbb
ret
pusha
mov
pop
pusha
test
ret
jmp
in
dec
popa
scas
jbe
xchg
add
mov
pushf
cmp
lds
mov
loopne
mov
repz
push
cmp
sbb
jb
jno
mov
inc
cltd
jmp
pop
xchg
sub
or
cltd
cltd
loope
mov
jnp
xchg
pop
mov
cmp
dec
gs
and
xchg
mov
xchg
mov
in
xor
sarl
cmpsl
jp
sbb
in
pop
adc
dec
cmp
insl
mov
add
outsb
push
push
xor
dec
aaa
cli
adcl
fdivl
mov
ret
xchg
xchg
int
fsts
ljmp
mov
test
jns
xor
cs
bound
data16
push
iret
jae,pt
hlt
mov
push
in
xchg
lods
outsl
xlat
add
ror
sti
mov
out
inc
add
inc
ret
inc
mov
rclb
jecxz
fs
and
push
mov
xchg
sar
dec
and
stos
mov
pop
lcall
xchg
lea
repz
push
dec
xchg
push
or
ss
daa
lods
pop
adc
arpl
arpl
test
xchg
cltd
mov
out
adc
test
dec
xchg
imul
pop
and
mov
mov
mov
shlb
out
push
push
arpl
or
pop
into
inc
ja
jns
xchg
push
ret
xor
lods
xchg
jo
add
sub
bt
push
adc
jns
lea
xchg
push
bnd
mov
out
mov
pop
adcl
fbstp
fs
xchg
sahf
enter
pusha
dec
lds
or
xchg
ret
xlat
xchg
adc
and
cld
push
clc
or
jae
mov
cmp
ret
jp
jnp
mov
das
out
mov
or
test
loopne
cwtl
lods
pop
mov
rorb
sbb
out
add
fisubs
add
push
clc
ret
fdivrs
inc
sbb
sahf
fnstcw
mov
out
lret
xchg
xchg
js
and
sbb
and
adc
jnp,pn
mov
imul
cmp
div
sbb
lret
das
mov
cs
cmp
movsb
jnp
mov
and
jns
int3
shrb
daa
fwait
scas
pop
jb
xor
xlat
test
popa
fsubrl
mov
or
arpl
sub
inc
sbb
xchg
std
or
mov
clc
sub
jmp
pop
outsb
pop
icebp
fs
ja
sbb
popa
dec
test
call
xchg
pop
jmp
ficoms
stos
add
test
mov
shll
xor
pop
insb
cmpsb
push
cld
mov
pop
cmp
outsl
fwait
mov
adc
xlat
add
cli
fstpt
sbbb
lahf
add
lahf
pushf
push
popa
or
mov
pop
mov
or
or
inc
add
mov
inc
and
mov
aas
add
js
jne
insb
movl
shr
leave
mov
push
cmp
clc
gs
loop,pt
test
inc
in
jae
lret
fcmovu
dec
addb
dec
mull
mov
mov
imul
and
push
je
sub
xchg
add
js
mov
mov
mov
inc
sbb
and
lahf
mov
xor
xchg
pop
pop
dec
movsl
jno
dec
and
rcrb
addb
jno
cli
jmp
mov
sub
mov
sub
sbbl
xchg
cmpb
ljmp
mov
flds
cmp
fnstenv
mov
cli
jns
mov
dec
jle
idivb
adc
cli
jo
pushf
data16
out
push
sub
fistps
dec
icebp
mov
pusha
mov
dec
cmp
daa
adc
or
lret
sbb
std
add
lahf
pop
iret
jbe
jo
xchg
popa
mov
repz
adc
push
mov
icebp
cmp
repnz
sbb
ja
jnp
jbe
sbb
mov
push
repnz
mov
bound
pusha
jne
pop
inc
push
inc
add
repnz
std
dec
push
dec
das
dec
dec
push
dec
jecxz
sbb
mov
xor
popf
jl
pop
shll
mov
iret
test
or
outsl
xlat
les
int
shl
xchg
inc
out
shrl
adc
and
xor
cld
adc
aad
decb
arpl
insb
push
lods
lock
into
push
je
and
popa
mov
ret
mov
pusha
loope
sbb
addr16
stc
pop
stos
cmp
push
or
std
pop
xor
sti
mov
or
mov
pop
dec
mov
inc
or
and
arpl
nop
mov
push
test
and
movsb
test
mov
insb
test
xchg
aad
mov
jmp
orl
mov
xorb
in
and
dec
test
push
ljmp
aam
addr16
and
xor
pop
shrb
out
and
cld
jmp
inc
insb
movsl
xor
cmp
addr16
int3
inc
sub
push
rolb
test
movsb
or
outsl
ret
arpl
pop
lods
push
pop
inc
cmp
and
mov
lock
jo
mov
cmc
icebp
scas
dec
mov
pmaxub
mov
out
lds
aaa
scas
xchg
movb
xchg
fimuls
dec
das
push
daa
das
inc
pusha
nop
aad
ret
jecxz
xlat
xor
or
test
flds
push
pop
xor
mov
jg
push
mov
loopne
jle
inc
mov
in
jmp
hlt
xor
std
dec
test
push
pop
mov
in
stc
pushf
jne
subl
test
jecxz
mov
and
mov
cs
test
jg
test
xchg
mov
add
push
shlb
push
adc
inc
pop
add
sbb
dec
mov
fsubl
movsb
aas
cmp
and
cmp
mov
ljmp
push
xor
fadds
outsb
cmp
add
lret
clc
cwtl
loop
push
xor
lods
push
hlt
gs
ds
add
ret
mov
jne
cmpsl
cmp
jmp
mov
xlat
lea
ja
or
jb
insb
pusha
fwait
out
fisubl
stos
jge
cmpsb
adc
mov
icebp
ret
inc
dec
mov
push
enter
inc
shlb
mov
pop
mov
dec
and
jg
push
or
jb
pop
xchg
cwtl
les
inc
out
movsl
adc
mov
sbbb
ficoms
icebp
shll
mov
inc
mov
lcall
dec
mov
int3
xchg
jnp
sbb
repz
ljmp
mov
fidivrs
fidivrs
cld
and
add
pop
inc
cmp
js
inc
mov
add
aas
jb
outsl
mov
sbb
movsb
mov
loopne
mov
bound
mov
shll
fstpt
xor
sti
push
out
out
cmp
outsl
mov
or
int
outsl
xchg
cmp
xor
inc
mov
xor
pushf
aaa
into
adc
push
sub
dec
jmp
sub
les
xchg
mov
push
or
std
xlat
cmc
pop
xchg
fsts
test
pop
arpl
mov
xchg
cmpsl
ljmp
out
or
cmpsb
pushf
mul
incl
mov
inc
sbb
outsb
sub
push
push
ss
ror
jne
push
mov
stos
or
in
sbb
xor
insl
cs
inc
push
mov
ret
call
into
xor
hlt
repnz
push
inc
cltd
jbe
inc
mov
pop
inc
cmp
mov
inc
push
repz
test
divl
fisttpl
mov
cmp
popf
repnz
fdivs
xchg
arpl
mov
cmp
pop
jae
ja
xor
pusha
cmp
xlat
jae
aas
cli
aam
xchg
sub
imul
fisttpll
dec
pop
pop
clc
data16
and
xor
xchg
fisubl
out
je
out
sbb
sub
aad
xchg
and
xor
add
outsl
or
push
and
mov
xchg
out
jl
sbb
sbb
pop
adc
jl
or
mov
xor
cld
mov
loop
mov
mov
mov
or
sub
sbb
fiaddl
dec
jmp
sub
pushf
add
jecxz
fstps
int3
xchg
dec
mov
push
rorl
push
loopne
mov
sub
adc
dec
pop
cmc
push
sbb
test
cmp
insl
xor
xchg
dec
push
mov
outsl
push
cmp
es
fidivrl
cwtl
mov
mov
aam
dec
lods
std
aad
enterw
sub
iret
icebp
inc
jno
jge
xchg
pop
mov
ss
push
aad
aam
arpl
cltd
lods
pop
mov
bound
xchg
outsl
jns
test
dec
adc
icebp
pop
cmp
jno
pop
loopne
xchg
jle
push
fadd
xchg
test
mov
pop
or
pop
pop
sti
adc
and
cmp
andl
inc
xchg
sahf
inc
out
frstor
sub
movsb
add
push
or
adc
ds
testl
sbb
xchg
clc
jno
pusha
sub
test
lods
out
hlt
dec
mov
ret
sti
rcll
lea
addl
inc
ds
stos
jl
aam
mov
xor
cmpsl
jae
lock
push
cmpsb
push
dec
sub
pop
xchg
fcomi
ffree
cld
out
cs
test
scas
lret
adc
mov
jp
movsb
scas
inc
xchg
inc
adc
dec
fbstp
aas
mov
xor
fisubs
cmp
or
mov
and
mov
lods
call
add
mov
ss
lock
imul
jno
rcrb
fwait
imul
pop
js
aaa
cmc
lret
fildll
sti
mov
push
mov
mov
sbb
inc
aas
or
mov
or
sbb
inc
mov
mov
sbb
jge
fsts
mov
push
jecxz
lds
out
addr16
popf
sti
or
ret
xlat
dec
out
mov
pop
scas
test
mov
sar
jns
ds
loop
xor
sbb
jnp
mov
xor
and
pop
xor
xchg
loopne
and
popa
mov
ret
mov
pop
sbb
pop
adc
movlhps
xor
arpl
mov
mov
mov
pop
flds
je
pop
push
lods
fwait
inc
arpl
adc
test
ret
fwait
jge
jno
mov
in
jae
pop
dec
cmp
mov
jo
hlt
push
aaa
daa
adc
push
ret
iret
pop
pop
loopne
repnz
push
jb
jecxz
adc
test
xchg
and
mov
cli
jne
mov
rolb
or
lret
inc
pop
dec
xchg
push
sub
out
push
xor
shl
shrb
clc
mov
push
sub
or
and
js
xchg
ljmp
mov
iret
enter
popl
pop
es
inc
icebp
lock
xor
sub
mov
sbb
xchg
outsb
or
cmp
xchg
imul
sbb
xchg
jl
and
xor
add
pop
pop
xchg
cmp
lock
mov
mov
je
loope
or
cmp
sub
pop
pop
fnstcw
push
and
sti
pushf
stos
xchg
lock
adc
xlat
pusha
lock
mov
lds
movntq
out
mov
lock
pop
adcl
ffree
ds
mov
jle
jae
iret
sahf
lods
sbb
lcall
xor
les
frstpm(287
pop
aam
rcrl
mov
jge
mov
sbb
inc
and
or
cmp
lods
mov
mov
jns
push
imul
loope
sbb
aam
dec
jnp
jmp
mov
aam
aaa
jecxz
pusha
int
sarb
dec
mov
in
push
lahf
clc
scas
xor
ljmp
lcall
in
dec
adcb
jge
mov
stos
pusha
adc
xlat
add
xor
in
stos
in
inc
leave
lcall
jns
inc
and
push
fwait
sbb
test
dec
sbb
out
xor
data16
ds
imul
dec
jle
push
jns
cmp
xchg
sub
push
iret
rorl
lods
sub
jl
cmpsl
mov
jo
les
int
repz
aad
in
mov
jae
imul
jbe
data16
imull
rcll
jns
xorl
jge
jno
xlat
cmp
shlb
cld
rolb
fimull
xchg
or
mov
sbb
ss
cmp
jo
pop
jns
nop
push
ret
std
out
icebp
inc
test
gs
bound
andb
movsb
imul
lods
mov
lods
xchg
inc
inc
pop
out
dec
std
lods
jne
fidivrs
pop
mov
lods
lahf
pop
stc
or
or
out
mov
imul
cs
mov
mov
cmp
in
cmc
mov
push
in
mov
dec
cli
pop
xor
js
daa
shll
inc
sub
fnstenv
cmp
mov
dec
ljmp
popa
cwtl
cmp
cmp
xchg
pop
jno
arpl
mov
mov
addl
lods
push
xchg
lea
aad
sub
sbb
inc
insl
loope
adc
jb
into
add
insl
xor
scas
lret
aaa
test
pop
pop
scas
insb
push
data16
call
popa
clc
fs
xor
mov
jecxz
jo
aam
push
enter
xchg
into
xlat
pop
repnz
icebp
and
adc
bt
je
xchg
sbbb
aaa
movsb
mov
adc
cmpl
mov
ljmp
pop
push
mov
xchg
or
gs
sbb
frstor
mov
jl
mov
and
mov
call
jp
enter
lods
mov
xorb
fwait
js
in
int
push
mov
sub
fwait
xchg
inc
dec
mov
mov
and
mov
sub
push
lods
loope
jbe
pop
aaa
lock
ja
jbe
dec
adc
jge
stc
push
sub
aam
xor
dec
mov
call
in
xchg
push
adc
sub
sub
inc
add
xor
hlt
add
aas
int
mov
hlt
cmp
shrb
xor
out
movsb
xchg
testl
divb
mov
ret
fnstenv
fcompl
int
movsl
sbb
or
insb
ja
lahf
dec
fs
inc
test
dec
mov
stos
test
sbb
pop
dec
int
mov
insb
gs
pop
pop
aas
in
lahf
xchg
sub
push
xor
jb
test
out
popf
mov
les
fiaddl
mov
insl
xlat
jl
pop
bound
push
cmp
jmp
int
test
jp
mov
fwait
sbb
jecxz
mov
push
jg
in
and
push
std
call
adc
mov
push
and
pop
fisttpl
fs
lds
stos
sub
inc
inc
xor
jb
or
sti
loop
loope
bnd
xor
enter
push
sti
test
mov
out
test
or
sbbb
and
stos
loopne
lret
sub
cmp
mov
or
sbb
aaa
lods
xor
jns
aam
sti
loop
cmpsb
test
or
aam
mov
adc
mov
fwait
adc
jne
xor
fsubr
nop
cmp
out
ffreep
nop
mov
jnp
mov
lock
rcrl
lea
ret
lock
insb
inc
jnp
gs
dec
xchg
les
cmc
push
mov
mov
mov
std
jmp
nop
dec
sub
or
mov
and
sub
pop
sub
insl
xchg
mull
mov
data16
in
lret
mov
scas
dec
aas
add
pop
mov
lds
sbb
mov
int3
pushf
push
cltd
sub
imul
dec
pushf
sbb
cmp
ja
out
or
inc
push
add
aam
ljmp
mov
es
push
adc
mov
nop
inc
add
sbb
in
cmpsl
nop
xchg
or
cmp
shrb
arpl
notb
ret
cli
das
adc
int3
lods
decb
in
int3
cld
lods
jno
scas
call
inc
lea
xchg
xchg
je
nop
sti
out
add
into
and
xor
pop
in
add
mov
xchg
mov
stos
aam
dec
dec
loopne
jp
adc
push
out
les
sbb
aad
movsl
orl
mov
fldl
dec
pop
lea
imulb
dec
mov
and
adc
adc
test
rep
fistl
push
into
mov
movsbl
mov
aaa
pop
inc
stos
push
mov
out
lret
mov
xchg
stos
jecxz
inc
dec
cld
xor
inc
rcll
mov
nop
xchg
or
lods
and
lods
scas
xor
fwait
sbb
and
adc
push
jae
scas
movsl
insb
push
scas
rcrl
push
mov
shl
fbld
jno
dec
std
loop
ret
mov
sbb
stc
lret
dec
addr16
lret
not
mov
sbb
jbe
push
divb
sarl
in
adc
stos
mov
mov
outsb
mov
inc
lock
and
mov
adc
es
sub
scas
cltd
loope
xor
nop
or
dec
das
dec
adc
inc
lods
fildll
insl
xchg
xlat
psllw
movsl
mov
mov
jp
imul
sub
orb
dec
sbb
movsl
je
xor
iret
adcl
rcrb
daa
test
sub
xchg
cmovb
arpl
bound
fsubs
pusha
outsl
cmpsb
jg
adcl
pop
out
push
enter
out
xor
shlb
xlat
xchg
clc
addr16
add
sub
ljmp
stc
xor
dec
mov
inc
repnz
in
cs
addr16
sbb
call
dec
add
pop
popa
adc
xchg
adc
push
xor
sbb
jge
rcr
rolb
and
pop
fnstsw
pop
imul
xor
ja
dec
dec
into
fwait
into
loop
int3
pop
mov
sbb
int3
cmc
das
sarb
inc
ss
leave
mov
sub
fnstsw
jl
stos
lret
pop
fiadds
rcr
in
stos
mov
int
mov
dec
aas
pop
popa
scas
dec
adc
push
jae
mov
or
or
mov
or
enter
sbb
andb
xchg
fwait
popf
mov
dec
pop
cli
fmull
int3
xor
hlt
lret
dec
std
insl
dec
mov
mov
jo
outsb
lods
out
cmp
sbb
and
xor
arpl
adc
push
cmpl
adc
lea
loopne
mov
and
inc
push
or
std
push
adc
test
cmp
stos
push
ljmp
jae
xchg
sbb
arpl
pop
cs
pop
jae
jo
sahf
test
rcl
lock
adc
pop
clc
or
or
and
pop
clc
pushf
adc
mov
cmpsb
dec
data16
mov
int3
mov
in
hlt
mov
jmp
xor
subb
fiadds
rep
sbb
repnz
lock
std
xor
mov
dec
fwait
mov
js
jae
add
faddl
ss
repz
sbb
aaa
mov
or
imul
mov
inc
xchg
sbb
pop
and
imul
lcall
sti
pop
push
lock
mov
pop
jp
fbstp
addb
sub
add
xor
inc
pop
add
insl
sbb
shrb
popa
repz
out
add
idiv
enter
shrl
mov
add
push
sbb
cmp
fbld
shll
cmp
repz
push
sub
sub
mov
push
dec
sbb
mov
push
mov
cli
aam
mov
mov
rclb
add
xchg
dec
lahf
jnp
leave
sbb
jns
mov
pop
or
ficomps
test
mov
into
pushf
out
imul
jmp
add
lret
into
xchg
adc
sbb
push
dec
add
or
inc
pop
popf
add
push
push
adc
mov
adcb
pop
add
add
xchg
sbb
loope
scas
jp
test
faddl
push
cli
or
pop
movsl
jno
loop
push
fs
sbb
push
adc
aaa
lret
xchg
mov
ljmp
repz
data16
cltd
mov
pop
mov
repnz
int
fisttpl
mov
enter
dec
sub
sahf
js
push
stos
notl
inc
push
inc
pop
adc
and
roll
pop
icebp
aas
ja
xchg
insb
or
and
lahf
sbb
in
ret
adc
es
insl
fisubs
sub
push
dec
cmpsb
cwtl
mov
in
add
insl
stc
loope
jge
stos
cmp
jmp
imul
push
mov
leave
sub
rorl
cmp
add
ja
cs
nop
scas
xlat
scas
xchg
xor
es
inc
mov
in
stos
jle
shld
jg
das
or
sbbl
mov
jo
sub
cs
cmpsb
push
lcall
stos
jbe
fbstp
popa
add
loopne
sbb
mov
aas
cmp
jmp
loop
rorb
push
pop
cs
adc
inc
je
pop
movsb
hlt
nop
mov
xor
dec
jmp
add
jle
loopne
dec
or
scas
xchg
xor
jle
scas
cmp
das
leave
fldl
push
jg
gs
jl
mov
test
lret
scas
dec
sbb
push
nop
xlat
push
push
cld
iret
inc
xlat
shrl
cltd
xor
arpl
into
and
mov
pop
es
data16
cmp
inc
ja
sub
hlt
pop
xor
outsl
cmpsb
xor
mov
scas
into
aas
sub
ja
or
or
pop
dec
scas
jne
push
xchg
xchg
enter
mov
lret
ret
sbb
push
xorb
sbb
and
xchg
outsb
mov
stos
test
sbb
repz
sbb
dec
in
pop
sub
xchg
pop
punpckhbw
in
push
fiadds
hlt
inc
mov
mov
adc
rcrb
enter
cwtl
arpl
clc
pop
mov
add
sahf
jnp
in
and
loop
shlb
or
jae
aad
fildl
pop
shlb
inc
sbb
xor
mov
jp
xor
inc
and
enter
shlb
inc
movsl
add
mov
xor
cmp
jg
cmp
xchg
fcoml
and
sarb
or
mov
inc
xchg
mov
mov
mov
sbb
add
push
sub
sbbb
lea
inc
and
rorb
aad
adc
das
or
repnz
pop
mov
movsb
inc
add
or
test
movsl
stc
add
in
das
push
bound
pop
pop
fcomi
ljmp
jae
inc
cmpsl
cld
sub
addr16
or
adc
shrl
mov
rcr
sub
fildll
fiaddl
sub
push
push
mov
aaa
sub
movsl
rcll
push
stc
push
push
cltd
fldcw
sahf
out
xorb
into
mov
jg
divl
jle
jmp
add
ljmp
movsl
inc
pop
jecxz
icebp
outsl
mov
gs
cmpsl
outsb
sarb
pop
fildll
scas
pop
leave
hlt
push
in
std
test
and
movsl
add
jbe
icebp
mov
sbb
push
and
jae
push
sbb
loopne
scas
stos
ja
notl
add
xchg
icebp
sub
adc
xchg
push
fstl
xchg
push
into
sub
mov
cmp
dec
loope
mov
inc
adc
insb
outsl
push
fs
inc
cmp
mov
push
outsb
inc
cmp
sub
in
jno
push
stc
out
sbb
sbb
push
mov
sub
or
sbb
scas
sbb
lods
sub
xchg
sbb
fwait
xorl
imul
push
das
cmp
jo
mov
mov
out
popf
mov
movsl
cwtl
push
or
popa
mov
pop
sub
sbb
sub
test
adc
jmp
and
pop
dec
into
mov
incb
dec
lea
addr16
stc
mov
xchg
or
cmp
dec
jge
cmp
incb
sub
jb
mov
or
pushf
aad
pop
mov
pop
ret
fistpl
fiadds
or
add
mov
inc
ret
inc
stc
fcompl
fisttpll
xchg
lea
scas
cmp
movsb
xor
lahf
adc
mov
jne
jecxz
mov
repz
inc
mov
inc
sbbl
or
aad
repz
dec
adc
cmp
and
dec
adc
mov
lahf
test
mov
add
push
sub
mov
jae
repnz
fs
fisubl
mov
jne
push
jle
dec
dec
push
ljmp
ror
ror
and
ds
in
mov
dec
adc
ljmp
push
adc
cmp
push
xchg
js
jnp
adc
sar
sarl
rcrl
je
push
cmp
mov
xor
push
aas
mov
and
mov
dec
sbb
mov
pop
cld
jo
sahf
inc
adc
pop
or
iret
mov
inc
jge
adc
push
push
mov
adc
scas
mov
dec
lds
sub
pop
xor
cmpsb
cltd
jae
or
fildll
mov
xchg
xor
std
cmp
incb
sbbl
push
jp
xchg
in
lcall
dec
scas
xchg
inc
and
cmpsl
imul
stos
in
jecxz
lods
data16
fiaddl
mov
hlt
inc
mov
sub
xchg
or
or
test
adc
loopne
adc
mov
mov
and
adc
nop
lock
sub
cli
dec
adc
inc
stc
int3
xor
dec
fsubr
ss
xor
sub
pop
jmp
jl
inc
push
add
imulb
push
loope
xchg
sub
mov
cmp
daa
repz
sbb
into
xor
jae
subl
xchg
push
out
insl
adc
out
call
pop
sbb
inc
jnp
xor
icebp
inc
repz
mov
push
repnz
push
sbb
cmp
sbb
subb
mov
and
stos
add
mov
xlat
pop
mov
mov
jl
mov
outsl
cld
sar
dec
pop
xor
mov
pushf
insb
push
fcompl
pusha
mov
icebp
mov
addb
jge
inc
movsl
lcall
adc
lds
iret
cltd
xchg
inc
xchg
and
inc
push
sub
cmp
mov
subl
js
cmc
prefetchnta
mov
loop
dec
mov
or
push
outsb
dec
adc
fwait
push
jno
dec
add
jb
outsb
lret
sbb
nop
dec
dec
adcb
sbb
and
repnz
dec
stos
es
jae
mov
push
je
popf
jg
push
iret
aam
pop
pushw
sarl
sahf
cmc
addr16
ljmp
push
in
and
hlt
repz
fmull
test
push
jnp
mov
daa
jbe
mov
test
cmp
inc
cmc
aaa
cmpsb
ds
adc
add
cmp
les
push
add
xor
mov
stc
xchg
xchg
mov
mov
fwait
sbb
pop
shr
cwtl
cmp
mov
xchg
cltd
mov
sbb
insb
sub
cmp
cs
mov
icebp
out
testb
arpl
adc
xchg
mov
test
dec
dec
sbb
test
xchg
outsb
into
pusha
cmp
adc
aaa
scas
mov
adc
add
xor
call
mov
int
rcll
in
inc
enter
cmpsl
sbb
lret
insb
in
fnstenv
enter
xchg
cmp
xchg
ss
jmp
jbe
ss
nop
sbb
jecxz
xlat
in
xorl
or
dec
and
shlb
stos
and
dec
inc
xchg
sub
adc
inc
mov
repnz
sbb
leave
lret
fadd
clc
inc
sbb
cld
adc
iret
mov
out
push
push
sarb
add
push
jne
pop
adc
inc
test
mov
mov
pop
mov
fcmovu
mov
dec
lret
movb
lds
test
aas
imul
inc
test
mov
pop
movsl
mov
xor
mov
add
cmp
test
loop
jp
cmpsl
dec
adc
cmpb
xchg
call
lods
or
xchg
mov
js
jb
es
cmpsb
scas
mov
xor
jle
mov
pop
ret
lret
movsb
xor
sahf
lea
inc
enter
aam
inc
into
fcmove
pusha
addb
testb
dec
into
aam
adc
je
aaa
clc
inc
mov
out
out
leave
test
fldl
and
in
or
test
roll
insl
sub
insb
cmc
enter
inc
xchg
cmc
sbb
mov
add
mov
cmc
mov
mov
lods
lock
push
dec
test
lock
out
std
ds
movsl
push
jb
daa
dec
testl
inc
ja
cld
cmpsb
cmp
outsb
mov
testl
xor
fiadds
mov
int3
fs
bound
push
lock
fcomp
in
or
xchg
nop
ljmp
shl
dec
sarl
shl
mov
orb
pop
xor
outsb
test
xchg
inc
shlb
in
sub
add
call
lods
sbb
xor
sahf
loopne
rcrb
pop
inc
sub
sbb
inc
mov
cmp
xchg
movb
in
ret
mov
sub
xchg
aas
enter
jbe
add
xor
insb
xchg
mul
ljmp
dec
dec
aam
lock
adc
insb
sub
inc
xlat
cmp
int
mov
in
jo
add
lods
pop
out
push
cmp
out
fstpt
inc
ljmp
stc
outsl
dec
movq
xchg
clc
wbinvd
sarb
mov
pusha
inc
mov
idivb
ss
sti
fisttps
mov
fiaddl
cmp
add
inc
repnz
and
fwait
test
repz
aad
xor
ficoms
xor
cli
aas
leave
leave
push
jns
adc
scas
sbb
nop
lea
cmc
bound
push
jecxz
xchg
jns
fildl
js
je
cltd
je
adc
es
mov
inc
push
adc
push
jnp
lcall
lock
cltd
gs
jne
sub
neg
cmpsb
dec
push
pop
scas
push
dec
std
cmp
insl
iret
test
cmpsb
push
aas
sub
xchg
sub
jo
dec
mov
lock
test
lea
inc
mov
push
and
jg
outsl
dec
push
mov
loopne
add
out
out
test
sub
sti
sarl
pop
andl
pop
cmpsb
push
shrl
sub
cli
fs
lods
lret
mov
mov
andb
lcall
adcl
mov
pop
mov
outsb
xor
repnz
mov
adc
push
aam
cmp
sub
mov
ret
add
imulb
iret
sbb
xchg
mov
cli
scas
xchg
enter
fs
call
out
data16
js
into
mov
mov
out
daa
mov
loopne
xor
jmp
pop
inc
mov
movsl
push
insl
and
cmpl
jae
xor
dec
push
xor
pop
jnp
cmp
movsb
pop
mov
jge
sub
out
in
mov
inc
jae
insl
incb
filds
imul
loop
pop
sub
std
andl
repnz
push
adc
or
inc
arpl
cli
stos
sahf
fstp
in
loope
mov
pop
push
sub
insb
insb
test
hlt
xlat
mov
shrl
adc
loop
sti
xor
sbb
lea
inc
push
dec
aad
test
outsl
fidivl
mov
dec
add
loopne
pop
lds
push
add
xor
stos
pop
call
in
and
in
shlb
mov
push
addr16
mov
cmp
or
inc
rclb
mov
mov
mov
or
xchg
roll
les
xor
and
inc
mov
roll
xor
nop
loope
ficoml
mov
xor
shrl
sbb
jnp
push
mov
leave
or
nop
xor
cmpsl
das
les
ficompl
aam
rcrl
cwtl
mov
divb
dec
sub
test
stc
xor
mov
inc
xchg
jne
fmull
xchg
dec
push
dec
mov
rcrl
loopne
cltd
push
dec
add
mov
fdivrs
fisubs
mov
jg
pop
sahf
lock
out
sub
pmulhuw
lret
popa
mov
dec
ret
xorl
cmc
push
repnz
xchg
dec
push
jecxz
push
xchg
test
das
add
fisubl
jbe
int3
jnp
mov
cmpsl
inc
data16
imul
out
sbb
push
adc
lcall
push
repz
sbb
adc
out
and
or
addr16
adc
scas
fstpt
pop
pop
inc
das
pop
addr16
jge
imul
mov
pop
sbb
pop
leave
push
mov
or
lret
lcall
xchg
scas
pop
xchg
push
out
or
data16
mov
jno
test
cli
push
dec
cltd
jg
push
jno
inc
add
notb
idivl
jno
enter
lds
jns
rorl
xchg
xor
sub
nop
lds
enter
xor
aam
add
sub
xchg
test
jge
sbb
cld
ficompl
xchg
mov
mov
adc
int
dec
out
xchg
cmp
pop
lret
or
jecxz
pop
and
add
xlat
lcall
sbb
outsb
icebp
pop
aas
test
gs
repnz
lods
mov
ja
mov
aad
mov
mov
lea
sbb
lcall
stos
pop
fwait
nop
sub
stos
int
sbb
cli
fistps
mov
mov
test
adc
and
std
and
mov
xor
cli
xor
jge
popf
pop
or
mov
push
sbb
mov
je
cmp
cmp
and
xor
js
mov
in
jge
xchg
jne
push
xor
stos
sbb
test
ds
cmp
andl
jge
mov
push
mov
pop
mov
cmp
mov
outsl
lret
fs
scas
das
mov
mov
mov
cmpsl
dec
add
mov
xor
cmp
inc
ret
xor
jbe
mov
imul
jb
seto
add
mov
scas
lods
outsl
jge
dec
fnstsw
xchg
pop
pop
cmc
int
jno
push
cmpsl
leave
add
shlb
ljmp
hlt
sti
push
xchg
rcl
sbb
mov
pop
cld
in
push
xchg
cltd
mov
dec
pop
das
insb
enter
jmp
lock
sub
add
pop
lods
and
clc
int
imul
dec
rorl
ljmp
aaa
xor
dec
mov
add
mov
mov
xchg
jne
inc
in
push
nop
mov
jne
cmp
dec
or
js
jnp
xchg
cs
bound
incl
inc
shll
andl
mov
or
mov
mov
daa
add
adc
je
push
pop
cmp
leave
xlat
pop
sbb
cmp
imul
mov
inc
cmp
movsl
and
dec
lret
cmc
jmp
sbb
aad
lock
call
jnp
in
ds
lahf
push
pop
sbb
test
repnz
subb
pop
nop
rol
jmp
in
loope
jo
pop
cmp
or
mov
test
pop
loopne
push
jnp
mov
mov
cmpsb
pusha
adc
lods
and
sbb
push
or
ds
ds
enter
outsb
sub
fcomps
lea
movsl
push
jbe
adc
adc
scas
ljmp
mov
inc
lods
fisttpll
sbb
loopne
push
pushf
mov
push
fs
jle
test
mov
and
cmpb
or
xchg
js
std
xor
cmp
in
mov
pop
repz
je
out
xchg
fwait
pop
and
adc
mov
sahf
fs
mov
insb
pop
adc
out
leave
adc
daa
nop
std
and
xorl
push
mov
adc
addr16
mov
scas
xlat
bound
sbb
mov
lods
jo
inc
sbb
sub
jg
mov
outsl
pop
es
fstl
push
or
loop
sarl
and
flds
mov
outsl
push
dec
xor
dec
fisttps
cmpsl
pop
inc
enter
std
iret
sub
leave
loope
mov
and
and
sbb
mov
mov
push
in
test
iret
add
mov
scas
push
jecxz
mov
inc
into
adc
rcll
pop
rcrb
jge
cltd
in
inc
or
daa
ljmp
mov
and
mov
icebp
popa
mov
in
loop
sti
cmp
adc
cmc
adc
or
stc
xor
scas
cmp
mov
sbb
les
mov
scas
fmul
mov
pop
cmpl
pop
mov
ror
lea
ret
push
add
cmpsb
pop
bound
cmpsb
adc
xchg
push
jae
lahf
shlb
insb
jne
mov
out
mov
jno
mov
jge
push
push
adc
sahf
in
pop
icebp
sbb
cmp
test
adc
jae
lret
xchg
movsl
jg
add
test
dec
mov
mov
push
pop
insl
lahf
into
retw
in
mov
mov
daa
lods
xchg
adc
lods
jge
sar
out
pop
and
push
arpl
xor
ds
out
mov
pop
lea
cld
lea
into
sbb
ret
push
repz
pop
jbe
lock
inc
lret
int3
ret
jne
or
out
inc
adc
stos
mov
xchg
sub
rcrb
dec
pop
out
inc
pushl
adc
nop
lcall
movl
sbb
mov
sbb
rcrb
sbb
mov
pop
pop
mov
fcompl
lret
lds
js
gs
inc
push
bound
sbbl
fucomi
dec
sbb
stos
mov
adc
ret
pop
adc
test
cmc
movsb
pop
dec
in
pop
dec
insb
pop
or
dec
dec
inc
imul
lods
pop
mov
adc
xor
adc
cmpsl
fnsave
cmp
fisttpll
in
test
and
sbb
pop
ss
lods
mov
in
and
iret
out
loop
mov
and
cmp
push
lcall
sub
sub
rcrb
jo
daa
ds
push
jnp
inc
sub
repnz
iret
inc
unpckhps
and
xchg
push
addr16
adc
ficomps
sti
repnz
mov
add
cmp
add
push
add
test
dec
sahf
dec
rclb
fidivrl
jge
addr16
mov
loop
mov
dec
dec
test
adc
dec
int3
sub
pop
jbe
lret
xchg
imul
inc
push
jecxz
push
mov
andl
ss
add
pop
add
pop
mov
popa
loop
dec
cmp
add
shrb
and
mov
outsl
xor
push
dec
pusha
repnz
xchg
xchg
mov
mov
nop
pop
arpl
fsts
out
push
je
add
pusha
rol
cmc
pusha
pop
repz
inc
dec
mov
subb
scas
mov
adc
inc
jne
fdivr
pop
sti
stc
rcll
dec
add
out
pop
into
shrl
lds
imul
mov
xlat
sarl
ds
es
call
cmp
enter
fs
sbb
pusha
inc
mov
inc
sbb
xlat
fwait
dec
cmpb
pusha
sub
int
jmp
je
inc
dec
mov
inc
movsb
jnp
xchg
int3
addr16
lods
add
mov
repz
rcrb
test
imul
lret
pop
cmp
mov
insl
push
xor
jno
insl
mov
pop
and
xchg
cmp
jb
addb
xor
test
out
mov
mov
add
mov
xchg
sbb
cmc
sub
pushf
adc
xor
movl
mov
xchg
or
cwtl
fidivs
xchg
in
sahf
sub
stos
adc
sub
add
mov
sbb
mov
pop
mov
out
xor
mov
fcoms
xchg
popa
jae
push
inc
ljmp
and
out
mov
mov
loop
sbb
mov
rclb
cwtl
push
aad
popa
lods
xlat
dec
in
fiaddl
jl
enter
dec
ret
call
aad
mov
mov
or
je
sub
sbb
out
mov
pusha
lret
ja
push
inc
and
jne
incl
push
sarb
jne
aas
pop
add
iret
aas
mov
jmp
jae
adc
mov
inc
xchg
repnz
lods
fsts
mov
loope
test
pop
gs
js
jnp
mov
cmp
and
scas
mov
mov
fs
push
cmp
and
xor
pop
xchg
rcll
in
lock
inc
cmp
push
jg
and
testl
inc
or
mov
mov
scas
pop
xchg
cmc
xchg
jmp
enter
adc
into
jmp
out
jns
rcrb
xor
in
adc
mov
ljmp
inc
pop
sahf
xchg
fucomp
out
fnstsw
or
call
out
insb
repnz
mov
push
xorl
push
jg
movsb
cmpsb
in
mov
aam
pushf
mov
and
push
sub
cs
mov
sub
test
cmc
cltd
js
inc
nop
shl
icebp
xchg
or
loope
adc
and
push
ss
faddl
aam
pop
dec
jbe
xchg
pop
jb
sti
xchg
dec
in
ret
fisttpl
in
mov
jo
repnz
dec
pop
sub
lcall
fnsave
sbb
cmp
pop
mov
sbb
push
inc
push
sub
outsl
ljmp
int
dec
mov
insb
inc
cmp
sbb
jmp
mov
fmul
mov
mov
pop
pusha
cmpsb
pop
push
aas
mov
add
stos
jle
cmp
dec
dec
in
adc
jmp
je
std
push
pop
lods
test
xor
or
stos
mov
std
stos
mov
xchg
mov
sbb
adc
stc
rorb
addl
and
loopne
xorl
mov
sbb
and
test
ljmp
mov
imul
cmp
cmpsb
loope
jp
popa
arpl
stos
icebp
sub
imul
xchg
mov
and
nop
cmpsb
in
jbe
fdivrp
jp
faddp
lret
cmp
addr16
cmp
or
popf
xchg
arpl
sub
popa
iret
add
stos
dec
and
ret
ljmp
add
scas
xor
pop
into
ljmp
cld
mov
divl
iret
iret
adc
add
push
add
popf
cmp
sti
cld
loop
in
pop
dec
push
lds
fidivrs
push
pop
test
ss
mov
cvtdq2ps
cli
push
stos
adc
cmp
test
enter
fcomp
inc
addr16
jg
dec
js
dec
sub
pusha
mov
aaa
ret
xchg
and
sbbb
add
pusha
and
aad
sbb
ret
pop
daa
push
push
pushf
push
decb
in
dec
andb
xchg
je
fcmovu
pop
xchg
push
outsl
inc
mov
je
jae
sbb
inc
xor
xchg
lods
scas
inc
subb
es
cmp
gs
dec
mov
test
xor
icebp
fstps
pop
les
add
dec
repz
jnp
jl
dec
je
test
in
adc
js
dec
xor
adc
add
lock
fdivl
iret
int3
mov
inc
stos
dec
lcall
decl
or
int3
sub
mov
mov
and
jge
jle
sbb
mov
jg
imul
dec
fmull
sti
and
and
push
sahf
shll
adc
cs
subl
inc
cmpsb
push
inc
jae
push
adc
push
scas
aam
fwait
mov
mov
daa
add
testl
les
icebp
jae
ss
push
mov
mov
popf
inc
les
pop
cltd
xchg
aaa
loop
xchg
imul
in
pusha
jae
cmc
insb
andb
adc
scas
cmpsb
lods
stos
ss
loopne
jae
popf
push
mov
dec
jg
jmp
mov
pop
roll
mov
in
push
or
out
mov
pop
sub
jg
cmc
xchg
pop
mov
adc
mov
xchg
cmp
rolb
stos
iret
nop
imul
and
loop
dec
and
pop
pop
push
hlt
dec
popf
int
push
mov
or
adcl
pop
and
scas
movsl
add
int3
adc
push
or
repz
loopne
and
xchg
loop
js
pop
mov
nopl
ret
subl
mov
inc
in
sub
fbstp
mov
push
jae
stc
sbb
xor
xchg
mov
mov
ja
out
mov
pop
int
sbb
fs
dec
repz
or
out
cmc
nop
pop
add
or
cwtl
cmp
nop
lahf
popf
sahf
cmpsb
aas
ja
lret
and
push
jb
pop
fucomi
addr16
jae
inc
call
pop
adc
push
mov
fldcw
insl
and
in
mov
std
mov
mov
rclb
mov
rcrl
cmp
xchg
ret
lret
jge
cmp
mov
sbb
dec
int
into
roll
jno
arpl
xor
testb
loope
jmp
pop
add
testl
aaa
adcb
mov
scas
insb
stc
shlb
sahf
je
push
stos
sarb
dec
mov
sub
jle
push
mov
sub
push
in
xchg
mov
addr16
lcall
or
fimull
add
leave
mov
cmp
jne
pop
std
pop
and
mov
ja
shll
mov
dec
lods
fisubrs
adc
aas
test
jae
cmp
push
psrld
loop
into
mov
mov
inc
mov
in
xchg
rcl
dec
xor
sub
sbb
int3
stos
or
and
pop
xor
sub
nop
mov
cltd
loop
outsl
mov
cli
repnz
daa
lock
mov
push
pop
stos
pop
jmp
mov
jl
or
je
jge
dec
jl
fists
add
mov
cld
lods
repz
fildll
push
adc
push
inc
jmp
push
mov
imul
mov
mov
insl
loope
mov
and
ljmp
hlt
jg
push
mov
sbb
mov
pusha
dec
mov
js
xorb
ret
inc
cmp
sbb
sbb
lock
sub
lcall
cmp
mov
inc
outsb
jg
add
add
test
js
mov
jno
mov
pop
cmp
aad
xchg
rclb
push
jg
enter
in
xor
lds
pop
sarb
mov
xor
mov
pushf
mov
leave
repz
adc
xlat
or
mov
push
and
outsb
lret
push
stc
pop
std
cmpsb
lods
add
push
mov
fwait
sbb
scas
mov
dec
inc
xchg
push
dec
xchg
loop
ret
cmpsb
mov
fiadds
in
cltd
jae
out
mov
sti
add
dec
xchg
fildl
outsl
dec
sub
adc
test
test
add
push
movsl
pop
xchg
popf
fldl
inc
lret
loop
inc
xor
imul
mov
mov
ds
out
dec
movsb
mov
push
mov
fnstsw
aaa
cmp
xchg
xor
jecxz
nop
or
push
jg
inc
mov
xchg
push
js
adcb
sti
mov
scas
mov
lret
in
sub
sbb
or
jo
xor
rcl
fneni(8087
add
inc
mov
lea
mov
jle
xor
sbb
lcall
inc
xor
mov
out
call
testb
imul
pop
sbb
sub
jns
mov
jb
ja
dec
int
ret
rorl
je
inc
mov
scas
cmpsl
adc
loop
subb
out
imul
pop
insb
push
mov
sbb
hlt
addr16
fldt
lret
outsl
push
add
outsb
pop
sub
push
mov
jno
fscale
jecxz
mov
fs
pop
mov
mov
jg
sub
mov
dec
arpl
jle
in
in
movsb
loop
jmp
xor
ret
int3
mov
nop
sbb
adc
jecxz
xchg
out
fcmovnb
mov
xchg
repz
mov
scas
faddp
push
pop
pop
test
mov
cmpsb
adcl
jecxz
dec
inc
ret
mov
push
mov
std
inc
das
xchg
loop
inc
or
test
into
in
aad
adc
xor
xchg
jg
pop
test
and
and
push
dec
aam
push
sahf
aad
pop
mov
std
push
lods
test
xor
repnz
xchg
int3
cmp
and
sbb
mov
dec
stos
xchg
repz
cmp
dec
mov
jmp
movsb
fildl
inc
adc
sub
mov
ss
jo
inc
push
dec
mov
mov
jg
jecxz
ljmp
clc
loope
imul
fstl
push
sbb
cmp
sbbl
cmc
add
addr16
mov
and
into
in
sbb
or
sahf
lcall
data16
insl
pop
pusha
popa
dec
inc
pop
out
aad
out
cltd
jnp
push
jge
ljmp
mov
js
adc
outsl
push
jge
sbb
aad
or
test
cmp
sub
data16
mov
fwait
push
call
cld
outsl
call
or
mov
outsb
sbb
mov
adc
fbld
xchg
ret
cmp
mov
call
ud2
loopne
cs
test
popf
cmp
stc
andl
lret
pushf
push
push
pop
call
or
jle
sub
adc
inc
das
mov
and
mov
movl
ds
push
push
cwtl
shrd
adc
jmp
jg
ret
mov
ljmp
call
ficompl
add
mov
hlt
push
jae
mov
xchg
xor
xchg
dec
push
add
mov
mov
std
imul
and
ljmp
jge
xorl
ss
pop
rcll
stc
jle
hlt
xchg
ss
add
cmp
sbb
mov
testl
inc
mov
enter
std
push
xorl
test
pusha
jl
hlt
test
outsb
fwait
push
mov
push
stc
cltd
jl
loope
pop
rcrl
aas
mov
arpl
aas
push
mov
and
mov
in
mov
ficompl
outsl
mov
xor
xchg
sti
gs
push
insb
xchg
sub
mov
std
insl
sbb
aad
das
push
into
fwait
movsb
cli
sub
dec
cmp
nop
push
dec
mov
lods
xor
adc
sti
clc
mov
aam
mov
xchg
mov
filds
das
mov
repnz
xor
shll
filds
ds
adc
xchg
fsubrs
les
jb
cmp
jbe
cmpsb
out
sbb
inc
pop
xchg
adc
mov
cmp
cmp
clc
sbb
fstps
sbb
addr16
movsb
cld
cli
xchg
xchg
pop
dec
cmp
cmp
pop
mov
in
pop
adc
sahf
mov
pop
mov
cld
test
and
push
lret
stos
mov
daa
inc
test
lret
pusha
xor
cwtl
pushl
push
xchg
fsubp
test
sbb
xchg
ds
frstor
or
mov
cmp
test
loop
pop
ds
pop
push
xor
mov
xchg
pop
cs
mov
mov
in
rcrb
imul
mov
into
aaa
xchg
in
jbe
js
sbb
mov
adc
lret
jne
imul
std
jbe
mov
arpl
ficomps
jno
xchg
xorb
enter
mov
sti
xor
pusha
je
jo
mov
add
sbb
push
daa
sub
mulps
or
jecxz
je
rclb
in
dec
and
addr16
mov
xchg
cmp
mov
dec
lret
sub
fisttpll
cmc
xchg
les
shl
lret
mov
adc
xor
call
xor
jb
xchg
inc
cmc
xchg
push
cmc
adc
leave
lret
xchg
mov
mov
out
in
xchg
sti
mov
xchg
into
dec
popa
jl
in
leave
sub
mov
mov
vhaddps
jge
cmp
sbb
cmc
mov
test
sbb
mov
shl
ljmp
inc
push
cld
clc
pminsw
dec
jle
xchg
jnp
lcall
bound
mov
mov
stos
add
pop
push
sub
or
xchg
and
arpl
xor
pop
fdecstp
insb
mov
jno
insb
lea
fsubrp
mov
jle
aas
cmc
outsl
jge
stc
dec
fdivl
mov
decb
fildll
xor
fcomps
mov
mov
jbe
sub
mov
into
inc
mov
inc
xchg
sbb
sti
push
push
imul
pusha
add
adc
clc
imul
cmp
fsubrl
jle
outsb
dec
mov
or
and
push
out
lods
pop
stos
aas
cs
mov
jnp
int3
xor
push
std
mov
or
ret
mov
mov
push
test
jecxz
inc
lret
in
mov
mov
jl
adc
xor
fcmovnbe
cmp
mov
ror
mov
sub
push
jo
popf
cs
inc
out
ja
lret
repz
xchg
mov
cmpl
xchg
mov
test
mov
sbb
in
jmp
rorl
aaa
jae
add
cmp
mov
syscall
pop
mov
mov
dec
add
es
mov
sbbl
mov
in
movsb
or
or
fdivl
sbb
mov
push
mov
mov
sub
dec
rcrb
xchg
imul
jle
loope
scas
add
nop
ret
jecxz
daa
imul
pushf
and
jp
into
loope
sub
insb
nop
imul
sub
adc
xchg
mov
fistpl
pop
out
inc
add
and
xlat
or
cmp
sahf
pop
xor
mov
imul
xchg
loopne
sbb
jmp
out
adc
mov
inc
mov
ds
or
mov
loope
shlb
jno
mov
sahf
stc
add
fldcw
cmpl
mov
inc
cmp
xchg
mov
push
lret
push
rcrb
out
mov
lock
add
aaa
jbe
mov
push
ljmp
jns
mov
push
rcr
adc
mov
je
xor
test
mov
dec
xchg
pop
or
lea
push
pop
pop
xchg
sahf
aam
int3
sbbb
jo
imul
lods
pop
add
roll
dec
cmp
subb
pop
adcl
ret
in
rclb
movsl
insb
adc
cmpsl
jecxz
push
mov
mov
ss
ja
mov
cmp
aaa
js
ret
mov
int3
cmc
sbb
repz
cmpsl
ja
cwtl
xchg
cmp
std
mov
ret
pop
ljmp
push
fimull
jb
jecxz
daa
leave
je
jp
dec
cmp
lock
sbb
or
ljmp
cmpb
xchg
test
cmp
fisubrl
jle
das
add
jnp
pop
push
ja
popf
fmull
fistpl
rcll
push
adc
movsb
cwtl
mov
imul
shlb
add
pop
js
leave
mov
out
scas
repnz
xor
out
pop
xor
mov
fadds
and
and
lock
push
cs
mov
int
cmp
out
aas
mov
xchg
hlt
sti
xchg
inc
xchg
dec
ja
mov
je
call
cmp
mov
jp
pop
imul
pop
enter
icebp
mov
ljmp
push
int3
insl
bndstx
or
daa
inc
push
loop
xor
mov
mov
mov
cli
mov
bound
and
jns
xor
push
dec
test
jne
push
mov
outsl
sub
test
js
push
movsl
pop
inc
xchg
xor
jns
inc
les
daa
pop
in
sbb
mov
aam
pop
in
cli
das
push
roll
cmpsl
mov
jnp
push
mov
jmp
dec
mov
xor
pop
adc
jne
or
int
div
push
mov
lock
mov
sub
jnp
hlt
xor
mov
add
aam
sub
xlat
inc
lret
sarb
add
mov
mov
xor
mov
mov
dec
stc
sub
sub
push
shlb
add
lret
pop
cltd
xchg
jae
push
scas
and
jb
or
daa
xor
push
xchg
pushf
xlat
mov
adc
lcall
sahf
sbb
cmpsl
in
mov
adc
lods
cmpsl
pop
data16
mov
fadds
inc
insb
cli
cmc
xor
sub
out
cmp
and
jle
mov
je
mov
dec
repnz
fisttpl
lahf
lea
sbb
into
das
ss
mov
push
xor
mov
xchg
fstl
orb
lock
add
iret
jmp
inc
cmpsl
sbb
push
dec
pop
xchg
pushf
flds
roll
push
xchg
test
sti
insl
push
and
out
lods
mov
add
inc
and
nop
fldenv
movb
add
jb
cli
in
cltd
shlb
add
inc
jge
inc
rcrl
or
xor
inc
test
jmp
out
push
in
jo
xchg
pop
and
dec
pop
sub
push
lret
dec
push
jb
jecxz
jmp
shrb
xchg
pop
in
and
lret
cwtl
xor
imul
xlat
sbb
mov
les
gs
and
pop
sub
fucom
outsb
in
sbb
xor
sbbl
push
out
pop
out
test
notl
mov
push
lds
jl
shrl
adc
fisttpll
dec
adc
push
push
adc
outsb
testb
and
or
shlb
xor
fs
loopne
or
es
mov
hlt
dec
scas
xchg
mov
push
popf
jecxz
loope
insb
out
hlt
lods
ret
cmp
decl
push
pop
jne
xchg
loopne
stc
sub
lahf
fmuls
rcl
push
daa
icebp
adc
mov
std
pop
int
mov
xor
dec
out
stc
sub
xchg
ja
dec
cltd
pop
inc
xor
inc
fisubl
pop
push
pop
cld
ret
jmp
jo
sub
in
clc
repnz
or
push
inc
dec
out
inc
imul
ret
popf
fcoms
sahf
outsl
lret
stos
pop
mov
sub
sub
jb
decl
pop
inc
jne
xchg
push
rcl
pop
push
mov
iret
or
stos
xchg
jl
pusha
jo
insb
andl
hlt
outsb
cltd
lds
pop
mov
mov
testb
or
xchg
fnstcw
enter
arpl
sti
inc
repz
addr16
shrb
addr16
hlt
mov
xchg
mov
inc
pop
hlt
aam
sbb
cwtl
pop
test
and
mov
iret
mov
fidivs
xchg
dec
jno
lret
pop
aas
jne
pop
outsl
sbb
or
sub
test
fs
push
pusha
jb
adc
mov
in
test
mov
aad
daa
mov
jl
xchg
loope
push
sbb
stos
sbb
sub
cmp
in
adc
xlat
or
mov
popa
or
aad
das
mov
loop
int
cmpps
lahf
adc
sub
push
mov
fsubrs
pop
int
pmaxsw
leave
cld
jae
jns
mov
mov
gs
mov
or
adc
mov
mov
push
pop
dec
xor
jbe
popf
dec
hlt
fdivs
push
movsl
xor
cltd
popa
dec
repz
pop
jnp
dec
cmpsl
jo
fs
sbb
nop
lods
stos
out
pop
repz
or
outsb
iret
mov
js
ss
mov
fsub
cld
aad
mov
subl
outsb
mov
inc
jo
out
jecxz
call
xchg
push
ret
shrl
dec
cmp
push
cmpsb
ja
xchg
add
mov
push
ds
dec
and
subl
cmp
scas
xor
loopne
pop
stos
xchg
sub
add
arpl
and
push
mov
dec
enter
rorl
pop
mov
ss
data16
ret
incl
jnp
stc
cltd
aad
cwtl
pop
mov
fdivr
idivb
loop
or
inc
ds
sub
jl
stos
negl
sub
out
and
nop
fdivl
outsb
mov
pop
mov
xchg
adc
push
loope
cmp
xor
arpl
push
adc
dec
cmpsl
dec
sbb
mov
lahf
xor
rcr
mov
or
outsb
out
and
adc
xor
inc
mov
xorl
dec
jg
in
cmp
divl
jle
xor
loope
cmp
push
daa
in
mov
mov
adc
out
push
jns
mov
in
jns
dec
xor
mov
pop
lea
cmp
ljmp
jno
ficomps
jo
push
data16
js
js
sti
fstpt
stos
jbe
cmc
int
mov
inc
lods
adc
inc
push
inc
call
enter
imul
aad
add
fisubs
mov
ljmp
adcl
stc
out
pusha
cmp
test
fnstcw
push
in
mov
in
xchg
das
inc
iret
lcall
mov
pop
mov
pusha
fwait
cld
movsl
cmp
jecxz
pop
lcall
push
or
test
mov
daa
frstor
clc
xlat
lret
mov
and
inc
lcall
das
test
or
sub
push
sbb
mov
push
pop
mov
test
jge
push
jl
lret
loopne
in
and
call
clc
adc
out
push
and
cmp
jne
pop
into
fistpl
pop
dec
xchg
jp
xor
fldl
mov
mov
or
sub
push
cs
mov
pop
push
data16
ret
cwtl
test
dec
mov
or
mov
mov
loop
xor
inc
into
ret
addr16
adc
dec
in
xchg
fsts
push
inc
sbb
mov
lahf
cmc
cmpsl
outsl
mov
cld
aam
rolb
insl
and
out
ret
ret
adc
pop
inc
adc
xor
add
shlb
in
rol
sub
mov
jle
dec
ficoms
xchg
sub
mov
cmp
movsb
les
dec
testb
stos
gs
mov
lock
jnp
faddl
aam
adc
out
pop
je
mov
stc
inc
rorl
mov
adc
ror
stos
ds
in
sbb
push
movl
xor
xchg
addr16
enter
lds
adc
mov
gs
lds
jne
inc
cs
fwait
xchg
xorl
fucomip
mov
adc
mov
push
loopne,pn
push
rcrl
inc
mov
leave
je
and
mov
es
dec
call
pop
push
jae
pushf
imul
xor
pop
adc
sbb
hlt
nop
push
decl
outsl
cmp
jns
hlt
and
jne
loopne
push
or
test
adc
mov
mov
mov
inc
daa
jns
cmp
add
insl
or
clc
push
clc
jnp
subb
es
push
fdivrl
sbb
repz
imul
iret
jns
mov
push
bound
push
xor
jno
pop
add
cmc
aaa
sbb
mov
pop
cmp
mov
or
pop
inc
or
inc
xlat
add
xor
dec
or
out
fs
sub
cmp
and
je
mov
xchg
dec
xchg
fsubp
lods
dec
addl
adc
dec
jl
ret
or
sbb
sub
dec
out
adc
or
cmp
imul
jecxz
xchg
xchg
dec
jae
push
xchg
dec
hlt
and
int3
mov
test
jo
mov
popa
push
inc
subl
inc
jg
jmp
mov
in
shll
fstpt
jae
pop
into
sbb
and
testb
inc
loopne
adc
iret
pop
add
inc
test
cld
mov
mov
dec
arpl
mov
mov
cmpsb
das
cltd
fidivrs
add
ret
mov
mov
jl
push
getsec
enter
call
or
mov
xchg
pusha
cmp
rcll
adc
pop
jnp
inc
and
xor
dec
pop
out
pop
loope
into
pop
test
push
call
push
scas
push
mov
pop
push
xor
pop
lahf
or
xlat
adc
pop
cmpsl
in
mov
push
dec
and
sbb
dec
inc
dec
lods
xchg
cmp
shlb
mov
sti
adc
dec
push
hlt
leave
aas
jle
dec
ret
outsl
lahf
xor
aad
cs
sahf
mov
adc
add
and
xchg
push
sub
pop
and
dec
xlat
jns
in
aas
movsl
imul
inc
in
sahf
scas
dec
dec
jge
setge
xchg
subl
push
sbb
xchg
or
lahf
fstpl
insb
xchg
iret
setne
aaa
cs
dec
nop
push
xor
and
dec
sub
nop
faddl
xchg
paddb
out
dec
int
and
pop
xchg
xchg
or
subb
push
aam
outsl
jb
jmp
popf
push
and
ljmp
lret
popf
xor
push
repnz
and
mov
xor
and
adcl
pop
roll
sbb
mov
insl
pop
pop
fiadds
cmp
arpl
dec
xchg
std
jno
ficomps
nop
adc
jle
test
and
pop
mov
test
push
call
push
int
shlb
xor
jl
in
stos
push
xor
aad
xor
addr16
dec
xchg
add
repz
add
and
push
cwtl
enter
fincstp
hlt
and
pop
outsl
mov
pop
xchg
pop
push
adc
sbb
jnp
stos
add
mov
push
inc
mov
aam
xlat
sbb
int
cmp
lods
jg
sbb
in
pop
shrb
jb
imul
shlb
ja
or
xchg
xorl
popl
or
sub
lds
mov
cwtl
imul
xchg
enter
shl
mull
imul
imul
scas
xchg
pop
sub
or
push
outsb
test
and
outsl
push
scas
stc
pusha
push
xor
xchg
push
and
mov
mov
int
into
sbb
mov
dec
repnz
xor
out
call
mov
dec
fdivr
add
push
jbe
ficomps
aas
mov
movsb
addl
loop
mov
add
sbb
push
jnp
jb
daa
add
imul
sbb
adc
mov
nop
mov
pop
movsl
fbstp
call
mov
das
andl
xchg
adc
sub
int
push
cmp
xor
or
pop
inc
or
ds
or
nop
mov
negl
xor
outsl
jb
addr16
in
es
push
test
pop
mov
and
add
cmp
popf
inc
mov
pop
adc
mov
lock
sub
push
adc
jg
loopne
xor
push
out
loop
cmp
imul
std
lods
dec
hlt
movsl
adc
pop
push
cmpsl
imull
cmp
adc
lds
or
inc
fimull
aad
cltd
add
lds
cmp
das
lock
lahf
add
mov
adc
xor
lock
in
mov
movsl
sub
out
mov
sub
jl
push
and
ret
ficoms
mov
jae
mov
xchg
mov
mov
stos
cli
push
push
nop
lods
and
repnz
call
addl
and
fstps
mov
adc
xor
andl
das
mov
arpl
pop
inc
pop
adc
cld
inc
xchg
and
jg
das
mov
push
sbb
jle
jmp
mov
lahf
pop
in
or
inc
jl
shll
cwtl
cmp
mov
ja
ficompl
mov
je
repz
je
cmp
mov
jb
add
jg
jns
stos
adc
add
out
mov
sti
lret
mov
push
or
push
jmp
out
icebp
xchg
fcomps
rorl
outsl
push
and
add
pop
adc
int
or
imul
mov
pop
and
cmpb
xor
or
imul
adc
pushf
add
test
add
pop
fwait
mov
sub
sub
add
in
cli
nop
cmpsb
cmp
mov
mov
and
fdiv
imul
enter
sbbl
in
lret
in
mov
dec
aad
and
test
pop
loope
cmpsb
push
xchg
push
cmp
cmp
jp
call
fstpl
scas
cmp
pop
lods
push
lods
ja
pop
pop
out
jp
divb
xor
in
es
cmp
int3
push
ror
jnp
je
sbb
insl
sahf
add
mov
sub
popa
stos
icebp
add
mov
divb
jge
inc
enter
and
in
inc
fidivrs
sti
or
rcr
mov
mov
shrl
adc
icebp
or
test
mov
fcmovnbe
cld
fwait
mov
out
inc
fstps
dec
sub
sub
adc
mov
fcoms
test
jge
aad
cmp
scas
sbb
aaa
xchg
and
mov
push
jno
aas
repnz
daa
xchg
dec
mov
and
iret
sete
add
mov
fiaddl
jecxz
xchg
jae
xor
out
xor
mov
mov
jg
xor
pop
shlb
sub
imul
cs
ds
dec
lret
xchg
push
fstpl
shll
leave
jle
add
fldl
idiv
adc
repz
cltd
outsb
adc
lcall
fldt
out
imul
loop
sub
lods
out
jae
inc
pop
xor
sahf
sub
imul
mov
xor
int3
shrb
xchg
sub
xchg
adc
fistps
sub
and
data16
nop
sbb
pop
stos
addb
mov
fists
and
stc
dec
inc
std
cmc
sub
test
mov
or
pop
aam
jecxz
lret
adc
pop
xor
outsl
jbe
sub
mov
cmpsl
inc
mov
ss
scas
and
push
rorl
cli
or
scas
mov
xor
fistpll
mov
test
xor
or
add
inc
arpl
sub
shlb
push
test
adc
cmp
dec
fcmovne
mov
in
fwait
movb
push
mov
pop
mulb
test
sbb
pop
into
stos
leave
push
lea
push
jno
mov
aad
add
adc
sbb
sub
pop
repz
arpl
in
stos
pop
aam
dec
cmp
xchg
sbb
push
mov
mov
cmp
xchg
into
dec
push
fistl
cli
push
mov
repnz
adc
add
mov
loop
jnp
add
es
lock
hlt
lret
sbb
xor
cmp
ljmp
dec
push
lods
icebp
cwtl
or
inc
inc
or
adc
xchg
leave
int
pop
jo
inc
adc
xchg
jns
xor
out
cmp
gs
or
repz
mov
into
movsl
jnp
aas
mov
mov
hlt
mov
jno
mov
loop
push
sub
mov
xchg
int3
jg
pop
mov
fisubrl
cmc
icebp
pop
fstenv
sbb
inc
fld
inc
xor
fcomip
adc
mov
and
pushw
fdivs
jb
jle
add
lock
add
or
sub
jecxz
lahf
lahf
mov
incl
lods
or
mov
lods
push
cmp
xchg
cmp
push
pop
jecxz
push
mov
pusha
add
fcmovbe
or
ficomps
clc
clc
mov
adc
dec
sub
push
arpl
loopne
jle
push
inc
rorl
push
stos
sub
lea
mov
mov
outsb
sub
push
sbb
scas
push
inc
stos
andb
stc
cmp
adc
or
lret
inc
rorb
into
pop
sbb
leave
push
jg
push
lcall
mov
fldt
outsl
ljmp
rcll
jl
insl
insl
sbb
cmp
test
jle
and
push
sbb
xchg
mov
jmp
pop
int3
pop
xchg
movq
dec
imul
cmp
adc
sti
mov
cmp
cltd
inc
cs
xchg
pop
outsb
adc
pop
stos
fldenv
mov
ficomps
cmp
jns
push
inc
insb
or
and
cmpsb
dec
push
roll
shlb
add
inc
les
jnp
mov
inc
pop
push
mov
cmp
dec
cmp
out
mov
jle
xor
rclb
stos
xchg
mov
sbb
insb
ljmp
push
push
xorl
ds
lret
push
mov
cmc
ljmp
test
ret
mov
sub
out
pop
push
mov
mov
sbb
lock
mov
in
sub
or
mov
push
jl
shll
add
ret
dec
push
inc
je
scas
js
test
push
stos
sbb
sbb
rolb
faddp
aaa
iret
xchg
cwtl
jmp
jecxz
hlt
nop
dec
xlat
push
jl
out
mov
loopne
loopne
test
ja
je
xchg
or
push
and
cld
fstpt
popf
inc
nop
xor
jle
xor
repz
dec
ret
dec
pusha
fxch
mov
pop
xchg
fdivs
mov
mov
jo
fs
jl
mov
pusha
ss
lea
push
jge
cwtl
jp
jg
xchg
xor
mov
ret
cltd
mov
or
fidivl
and
bound
cmp
incl
fdiv
mov
lret
testl
add
addr16
fs
mov
sub
xor
mov
ljmp
dec
pop
cmc
mov
sbb
adc
pop
loopne
mov
mov
jp
jb
cmp
push
test
sub
add
js
dec
movsl
jae
jb
dec
ss
jnp
pushf
dec
xchg
aad
fcoms
pusha
jle
cmpsb
shll
jno
addl
xor
xor
mov
pop
xchg
dec
push
push
dec
xor
das
and
mov
lock
ljmp
clc
fs
movsb
xor
into
ret
imul
sub
adc
mov
cmpsb
cmp
test
dec
es
arpl
int
outsl
xorl
ss
repz
sub
jle
dec
stos
adc
movsl
mov
divb
js
mov
dec
push
nop
mov
or
imul
mov
or
xchg
lods
in
sahf
sbb
mov
clc
push
ljmp
mov
xor
lock
push
imul
ret
lret
in
pop
data16
out
mov
dec
jno
xor
imul
test
jl
pop
jmp
adcb
ds
ret
xchg
repz
lock
xor
lahf
xchg
push
mov
sarl
ss
cmp
dec
in
out
push
xor
les
pop
or
pop
xchg
js
imul
push
or
es
jo
xor
aam
popa
bound
xchg
add
and
iret
movsb
push
cwtl
aam
inc
add
sar
leave
pop
cmc
mov
pop
xchg
jg
jnp
fcomps
cltd
adc
les
and
scas
sahf
xchg
daa
add
mull
stos
in
jb
and
popf
arpl
rcl
lret
div
lods
adc
mov
sub
cmp
roll
xor
cmpsb
add
or
inc
xorb
outsb
ljmp
das
sarl
sub
pop
daa
pop
push
popw
lods
ficoms
scas
push
pop
outsl
insl
add
mov
out
xchg
cmc
imul
push
cmp
pop
adc
inc
pop
rol
icebp
decb
sub
jmp
outsb
decl
xlat
inc
jg
add
int
cmp
pop
cmc
shlb
and
mov
adc
repnz
pop
lret
add
adc
aam
mov
mov
push
int
stc
int
and
mov
or
aas
rep
cmp
scas
dec
lcall
sbb
arpl
or
and
cmova
inc
mov
fsubrl
adc
pop
gs
out
dec
or
inc
dec
movsl
lods
cld
sbb
and
push
lret
and
lds
xor
into
inc
loope
das
xor
add
cmp
adc
ret
jno
cmp
adc
dec
aas
lcall
popa
ljmp
es
idivb
jo
inc
mov
imul
out
lea
insl
and
mov
jge
mov
fadds
xor
leave
push
sbb
push
divb
xchg
pop
adc
and
cmc
xor
cmc
sbb
test
pop
jge
mov
jns
pop
lcall
mov
in
aas
mov
stos
shr
cwtl
pop
loopne
inc
fs
sub
xchg
add
ficompl
jge
sahf
sub
adc
roll
insb
push
xchg
cmp
dec
data16
or
xor
icebp
ja
push
outsl
jne
ds
and
push
dec
fisttpll
fsubs
dec
pushf
add
cli
mov
jge
movsl
aaa
clc
mov
mov
in
fstpl
cmp
rcrb
in
adc
or
sbb
loopne
inc
adc
or
sbb
mov
adc
mov
push
stos
push
sbb
repnz
mov
repnz
test
pushw
rclb
mov
movsl
push
iret
aam
icebp
je
arpl
dec
dec
push
mov
fst
pusha
sbb
xchg
dec
jb
bound
bound
out
xchg
dec
xor
and
insb
mov
xchg
stos
fsubs
xor
dec
aad
and
or
ret
adc
out
dec
xlat
sub
jmp
pop
shl
leave
addr16
dec
push
leave
adc
out
icebp
out
std
std
lahf
jecxz
sub
stos
inc
fidivs
cwtl
popa
outsb
outsb
lret
cltd
pop
adc
sbb
sub
and
push
dec
ljmp
mov
cli
stos
pushf
push
xor
outsl
pop
mov
cmp
mov
out
xchg
test
cmc
sub
sbb
mov
fldcw
fdivl
cli
cmp
mov
xchg
in
rcrl
flds
into
pop
cld
jmp
xchg
shrl
outsb
fwait
mov
sahf
sbb
faddl
outsb
mov
stos
jae
add
shrb
push
xchg
clc
inc
mov
ljmp
inc
sbb
adc
sub
scas
sub
push
push
cmpsb
jo
inc
mov
scas
jo
lret
jl
mov
push
mov
mov
mov
in
and
daa
cmpsl
lret
mov
and
add
or
pop
addr16
shrb
adc
mov
mov
jle
insl
xchg
addr16
shr
imul
jns
add
into
hlt
popf
mov
sub
movsb
pop
jg
inc
mov
lods
jl
imul
lods
pop
push
jle
jg
adc
mov
cmc
imul
lcall
push
xorl
les
out
nop
std
rorl
push
pusha
pop
inc
neg
fdivrs
ds
enter
shl
test
ffree
xor
dec
in
fistpll
popf
add
daa
mov
sahf
sub
popf
mov
aam
hlt
icebp
imul
in
daa
xor
add
add
hlt
lock
jnp
stos
enter
clc
jnp
push
jg
add
dec
sub
adc
dec
jp
jne
or
sbb
mov
sub
mov
pusha
loopne
push
ss
jnp
sbb
ja
stos
imul
xchg
ds
data16
cltd
pop
and
push
je
test
or
shll
mov
inc
push
xor
lea
jecxz
dec
sbb
gs
icebp
mov
cmp
hlt
stos
in
ds
out
sub
and
mov
scas
or
int
int3
aas
sti
adc
enter
xchg
push
cmp
mulb
dec
sub
cs
popa
adc
inc
rcll
rorl
pop
add
jp
mov
jno
xor
jbe
lds
sbb
adc
jg
jnp
mov
aas
arpl
mov
xchg
test
out
ret
pop
ss
es
and
add
bound
jg
push
push
int3
imul
dec
clc
or
dec
jo
push
cmc
mov
hlt
loope
jno
pushf
rcr
addr16
xchg
and
or
mov
dec
xchg
iret
test
out
inc
pop
adc
scas
rorb
into
inc
or
pop
into
xchg
pop
lods
ret
mov
pop
inc
arpl
loopne
jns
leave
movsl
push
mov
mov
push
mov
sbb
sbb
sub
push
inc
and
cwtl
imul
scas
ss
push
sbb
jmp
pop
inc
in
pop
add
in
cmp
dec
ja
push
imul
addb
scas
cmp
push
mov
xor
add
dec
mov
mov
int3
aaa
adc
lahf
rcpps
push
bound
je
int
push
or
cmp
gs
push
dec
mov
jmp
adcl
push
xor
gs
test
int
lret
sbb
rorb
push
mov
ljmp
add
cmp
pop
sbb
sbb
inc
fs
inc
xor
mov
jge
jle
add
je
inc
push
adc
mov
mov
sbb
xor
jmp
ficoms
orb
cwtl
notl
jo
mov
push
cmc
mov
lret
mov
les
jb
mov
sbb
enter
pushf
mov
or
add
pop
mov
inc
aad
popf
xor
imul
fwait
jecxz
jo
adc
in
loope
sbb
xchg
insl
sbb
outsb
xchg
adcl
in
scas
xchg
ret
xor
mov
sbb
decl
xor
les
cmp
outsl
mov
xlat
loope
cmc
add
dec
add
rolb
mov
xor
xor
jle
std
scas
xchg
xchg
movsb
pop
inc
mov
scas
push
inc
nop
adc
pop
fsts
out
fisttpll
pushf
sub
call
dec
call
scas
cmp
out
into
mov
fnstenv
jp
lock
mov
adcb
repz
fisttpl
push
subl
lcall
and
sbb
rep
ret
cli
xchg
jb
addr16
jp
dec
mov
test
cmc
fnstsw
insb
push
lahf
mov
adc
inc
sbb
out
dec
movsb
mov
outsb
scas
in
fsubrp
divl
inc
dec
mov
or
test
adc
mov
fsub
push
sub
mov
call
out
adc
inc
movsl
sub
fimuls
std
pop
push
adc
cmpsb
loopne
lret
mov
jno
xor
sub
loopne
testb
cmp
jg
cwtl
push
stos
in
jmp
mov
sbb
sub
movsl
lods
repnz
sub
cmp
in
fnstcw
pop
push
stc
psubb
dec
out
movsb
stc
push
shll
fwait
daa
aaa
cmp
pop
pop
xchg
sahf
int
iretw
mulb
frstor
add
fsubr
fwait
jmp
rcrl
add
sbb
inc
jbe
jecxz
adc
clc
mov
clc
mov
sti
push
or
and
mov
loop
mov
add
mov
or
ss
mov
push
inc
xlat
xchg
and
sbb
ljmp
pop
dec
movsb
test
mov
jmp
xchg
pop
fmul
in
cmp
iret
push
mov
enter
rcll
mov
sahf
aaa
fwait
nop
cld
frstor
leave
bound
gs
call
mov
loopne
jne
cwtl
xchg
sub
cmp
xlat
add
ds
ss
sbb
xor
pop
jmp
xor
aam
les
lds
jmp
cmpsl
incb
jnp
adc
sub
mov
and
aas
dec
cmp
and
xchg
pop
mov
rol
adc
test
pop
flds
fsub
cmp
push
pop
jbe
mov
arpl
aad
dec
mov
xor
clc
popf
mov
mov
mov
mov
and
sbb
ret
pop
loop
cmpsb
insb
cmpsl
aas
xchg
add
sub
test
js
sub
xchg
and
jmp
adc
addl
sub
in
mov
mov
in
xor
adc
pop
push
cmp
outsl
pop
lret
inc
jns
adc
addr16
adc
pop
mov
sub
cwtl
push
lods
xor
ret
add
jge
push
sub
lcall
fcmovnu
hlt
xor
ret
nop
jne
or
and
lcall
inc
jnp
cmp
pop
sbb
mov
ljmp
mov
lret
and
mov
movsb
scas
and
add
in
sarl
fcmovne
mov
loop
mov
push
cmp
inc
aam
jnp
out
mov
adc
fwait
xchg
inc
fwait
jnp
jecxz
ja
add
adc
popa
inc
sbb
push
pop
test
and
lods
push
jne
pop
cmc
shll
fwait
subl
mov
jg
out
add
lea
fsubrs
dec
and
mov
adc
lahf
out
pop
addr16
sbb
mov
xchg
jne
insb
fwait
or
jno
pop
jae
pop
mov
jo
jg
xchg
adc
stos
popa
push
or
mov
sub
popf
insl
mov
push
cmp
out
scas
push
jae
push
mov
shl
xor
add
aaa
pop
lock
push
lods
int3
wbinvd
cltd
cmp
test
lock
xor
xchg
fidivl
mov
xchg
adc
dec
pop
adc
pop
mov
inc
aas
dec
fcmovne
inc
xlat
lods
jecxz
mov
das
jb
arpl
jo
sti
add
mov
or
lds
dec
outsl
sti
mov
xor
lods
inc
or
cs
mov
push
movsb
aam
in
daa
mov
dec
sub
hlt
xlat
stc
lret
push
xor
psllw
xor
lds
fcmovbe
and
inc
adc
arpl
xchg
cwtl
jo
out
ret
jecxz
das
out
hlt
cli
insl
pop
push
sbb
repnz
je
nop
add
fsubl
std
orb
cmp
mov
push
push
mov
sbb
adc
inc
push
xchg
xor
jnp
in
jne
add
push
cmpb
cmp
and
nop
mov
in
inc
mov
sub
xor
mov
shl
repnz
mov
cld
adc
cmp
pop
lods
cmp
xor
cli
bound
scas
stos
lods
es
push
or
and
cmp
inc
into
cmp
outsl
mov
xor
test
add
xchg
test
dec
push
sub
rcll
inc
cmp
jae
xchg
push
push
shlb
xchg
inc
lcall
pop
or
lret
mov
mov
inc
out
push
add
daa
xor
out
in
mov
fs
loop
gs
pop
adc
je
xchg
mov
call
xchg
lods
xchg
inc
loope
push
nop
sbb
pop
fcmove
cmc
xchg
mov
hlt
pop
jle
push
imul
icebp
cmp
pop
sub
out
jg
add
jbe
aaa
popa
adc
clc
ljmp
pop
inc
cmpsl
les
cmpsl
sbbl
xor
pop
cmp
jmpw
pusha
fstps
repz
and
cmc
rcrl
cld
sbb
sub
mov
pop
mov
jp
inc
mov
mov
loope
jmp
aam
nop
sub
lret
cmpsl
imul
cs
ror
adc
cmpsl
sbb
rolb
leave
cmc
xor
pop
gs
add
dec
stos
sbb
sub
sbb
pusha
sub
in
pop
adc
adc
loopne
cmp
lock
sbb
sbb
dec
popa
scas
movsl
jecxz
jecxz
sbb
sbb
xor
push
pop
je
hlt
les
or
int
inc
stos
dec
test
pop
push
xchg
cmc
in
ret
lcall
inc
push
neg
xor
jne
loop
mov
lds
loop
bound
inc
pop
test
xchg
movsl
dec
adc
lea
or
or
adc
pop
sub
js
or
and
push
xchg
rclb
xchg
inc
adc
ret
mov
mov
insb
dec
test
sbb
xor
lret
imul
push
pop
mov
sub
cwtl
fwait
cmp
dec
mov
test
xchg
dec
daa
mov
pop
push
mov
popf
mov
adc
lock
les
lcall
dec
nop
pop
ja
test
stos
push
adc
sarl
adc
jmp
jno
sbb
into
gs
dec
outsb
add
adc
les
js
into
in
sub
jge
xlat
mov
and
or
subl
ret
xchg
and
sbb
push
jne,pt
in
sahf
lret
rcrb
xor
cli
test
hlt
xor
ljmp
cmpsl
adc
int
push
push
aam
in
loopne
es
ret
mov
bound
ds
jmp
adc
std
addr16
xor
vmwrite
fildl
stos
push
xlat
movsl
add
outsb
pushl
dec
inc
cmp
mov
cmc
xchg
pop
xchg
adc
mov
pop
cli
lods
in
roll
fwait
dec
std
push
add
mov
pushf
and
iret
js
pop
repz
out
test
cwtl
xchg
fldt
jb
add
jp
mov
das
jbe
dec
add
js
pop
mov
mov
gs
test
inc
xor
subl
dec
pushf
je
cli
insb
jle
fcomip
je
je
insb
ss
lahf
jae
add
cltd
push
sbb
jne
add
mov
rolb
mov
dec
aad
inc
cmpsl
jmp
cwtl
leave
push
stos
pop
in
sub
adc
sarb
data16
pop
or
je
faddl
pop
stos
insb
cmc
ror
push
xor
mov
cmp
sti
jp
sbb
sub
push
xor
cmp
fwait
iret
and
shlb
mov
test
inc
int
sub
mov
xchg
loope
or
out
enter
mov
sti
adc
inc
xchg
or
add
rclb
popf
sub
pop
idivl
rcrl
ljmp
imul
in
dec
loopne
dec
mov
sahf
push
or
sub
mov
aam
pop
ret
adc
roll
or
push
jae
pop
in
pop
fninit
xchg
sub
aad
pop
int3
outsl
mov
adc
ja
jge
popf
loope
mov
repnz
lods
jmp
pop
push
sbb
in
xchg
les
int
insb
mov
adc
aad
xor
add
lds
add
fs
push
pop
sbb
out
pop
out
jp
ret
std
push
repz
dec
lcall
sarb
dec
jmp
cltd
xchg
sub
in
mov
xchg
out
in
inc
scas
addr16
adc
out
mov
pop
clc
cmp
leave
fwait
xchg
call
in
inc
outsb
cmp
pop
sbb
out
scas
mov
or
mov
repnz
push
mov
ss
jne
mov
mov
or
or
pop
pop
in
mov
inc
rclb
add
dec
out
xchg
mov
cwtl
rclb
or
sub
addr16
mov
mov
xorl
sub
xlat
popa
shr
jb
imul
fidivs
lods
and
xor
cmp
mov
inc
push
push
xchg
pusha
inc
xchg
push
push
inc
in
imul
loop
fsubs
and
push
xchg
daa
xchg
jb
push
fdivl
fisubs
mov
add
adc
xchg
inc
mov
cld
cmp
popa
mov
jnp
inc
fidivrl
in
sub
shlb
clc
push
jecxz
pop
cmp
sub
iret
cmpsb
lcall
scas
in
adc
jl
bound
or
dec
shlb
dec
imul
je
push
popf
push
jge
rcll
lahf
leave
test
cmp
push
push
aaa
jmp
cltd
jmp
push
xchg
repz
dec
cs
mov
adc
dec
inc
cmp
dec
pop
in
or
add
adc
lret
xchg
add
xor
out
ja
xor
inc
dec
add
repnz
in
out
add
std
stos
jo
xor
xchg
sbb
testb
sbb
shrb
int3
sbb
push
fsub
cmp
mov
sub
lcall
fidivl
fwait
xchg
xchg
es
int
mull
mov
jns
test
shrb
jmp
mov
jge
ja
or
dec
fistpll
sti
movsb
sbb
pushf
jmp
imul
push
aaa
and
shlb
std
lret
sub
mov
je
jns
dec
mov
in
add
fwait
scas
gs
gs
push
daa
mov
in
inc
push
sbb
test
insl
test
adc
dec
icebp
lret
inc
popf
frstor
dec
push
mov
xor
xor
ljmp
adc
idivl
adc
jo
int
aas
testl
lahf
and
inc
lods
dec
pop
and
in
test
das
xchg
les
pop
out
mov
fucom
insl
mov
push
xchg
rcll
or
mov
hlt
mov
fdivrl
and
fimull
jae
add
in
icebp
push
loop
aaa
imul
aaa
xorl
adc
repz
push
pop
xchg
repnz
ret
adc
add
pop
in
xor
fistpll
push
jmp
mov
sub
mov
arpl
lds
mov
xor
mov
bnd
xchg
mov
imul
mov
in
lods
imul
pushf
push
sti
mov
sbb
dec
dec
xor
leave
xlat
push
xor
cmp
adc
daa
cmp
jge
js
push
lcall
fs
lds
jle
cmp
lods
call
test
xlat
xlat
or
pop
xor
arpl
add
mov
mov
mov
and
cmp
cmc
or
mov
mov
jne
cmp
sbb
xorl
gs
cmc
sbb
shrb
jle
outsb
icebp
and
testb
sub
dec
cmc
mov
or
dec
fimull
add
pop
xchg
pushl
or
jl
adc
lcall
push
mov
inc
iret
sub
lret
mov
les
clc
push
pop
into
js
das
push
roll
pop
insb
ds
and
lock
sbb
mov
mov
hlt
add
mov
push
aam
stos
mov
and
and
mov
ret
out
pop
orl
adc
inc
jge
xlat
ds
adcl
jns
push
sbb
xlat
cmp
mov
mov
sti
inc
or
iret
lcall
dec
mov
test
pop
jno
xor
dec
int3
lcall
ret
pop
sahf
mov
cltd
aaa
andnps
add
test
xchg
orb
aad
adcl
push
jge
add
sbb
lahf
clc
ja
push
mov
mov
adc
lcall
and
adc
jb
pop
outsl
mov
inc
add
aam
or
rcll
xchg
aam
repnz
ficoms
sub
add
sarb
cld
xchg
jecxz
lds
daa
dec
ja
imull
xchg
mov
test
mov
test
mov
daa
adc
fstpt
sbbl
xor
and
cmp
cmc
jmp
in
and
ljmp
sahf
mov
add
mov
xchg
lds
inc
adc
arpl
pop
movsl
cmp
fidivs
test
ss
mov
sti
mov
loope
lret
pop
fsubl
inc
in
inc
push
pop
fwait
repz
lret
imulb
lods
dec
inc
mov
mov
pop
push
ret
xchg
push
lock
push
jo
cli
sbb
jbe
subl
jmp
and
xor
pop
pop
sbb
rolb
pusha
mov
inc
fs
test
push
sbb
inc
loopne
fldcw
imul
mov
ja
adc
je
jno
test
add
mov
sbb
sub
in
insl
and
fistl
pusha
fs
rorl
adc
pop
mov
xchg
sbb
sbb
jae
movsb
mov
test
mov
insb
fbld
outsl
mov
and
push
add
ficoml
nopl
shrl
inc
test
in
outsb
scas
daa
addr16
dec
sbb
pushf
sti
mov
add
popf
daa
lret
roll
sub
or
pop
arpl
stos
lret
and
in
mov
out
adc
lret
arpl
pop
insl
addr16
fwait
sbb
cmp
pop
icebp
push
xor
insb
pusha
pushf
ret
xor
and
pop
test
out
sub
mov
daa
xor
arpl
jns
mov
mov
in
ss
insl
mov
call
ss
out
in
jns
inc
or
or
bound
bound
mov
das
jno
rorb
ljmp
stos
orb
xchg
test
sarb
cld
inc
or
xor
mov
dec
jb
lahf
mov
nop
mov
push
imul
sbb
mov
sbb
and
and
push
inc
adc
pop
lret
test
sti
scas
dec
mov
stc
push
lea
adc
pusha
rcrl
cltd
mov
jg
popa
stos
sbb
test
inc
pop
test
sarl
push
mov
insb
dec
xor
mov
xchg
xor
shrl
out
add
filds
pop
mov
lret
sbb
stc
or
pop
push
mov
add
out
dec
test
push
push
loope
and
xchg
hlt
rcl
out
aaa
cmpsb
fstps
fmull
jle
ret
mov
lcall
jmp
sbb
xchg
dec
adcl
mov
xchg
in
mov
xor
ss
jge
and
mov
push
out
icebp
pop
call
sbb
pop
mov
fiaddl
bound
mov
push
pop
jnp
push
fs
mov
xor
fldenv
jae
pop
or
or
shlb
clc
cmp
loope
push
cmp
sahf
mov
fstps
bound
loop
xor
shll
inc
ja
push
mov
mov
mov
leave
dec
orl
out
andl
dec
pop
or
icebp
sbb
inc
pop
enter
push
outsb
jge
push
mov
shll
pop
cli
add
xchg
and
push
in
pop
lods
inc
icebp
shr
out
in
xor
je
and
lret
adc
mov
repz
loope
shrb
dec
push
gs
mov
das
and
aaa
xchg
sar
push
aas
or
stos
lcall
addr16
lahf
mov
mov
and
aad
lds
sbb
pop
lods
cmp
repz
js
daa
inc
js
ficoms
mov
pop
mov
leave
adc
rol
xor
mov
aad
aam
int3
jo
insl
loopne
adc
jl
shrl
pusha
sbb
pop
and
out
inc
cli
into
and
outsl
cwtl
mov
push
ret
jb
fs
aas
int3
adc
mov
push
dec
nop
imul
adc
inc
push
sbb
sub
mov
fstl
mov
or
xchg
dec
cmpsb
fs
testb
jb
repnz
call
sbb
popf
in
enter
adc
mov
adc
mov
repnz
jne
xchg
pop
xchg
adc
push
mov
xor
push
jnp
pop
je
and
rcll
pusha
or
add
punpcklwd
dec
mov
jg
out
in
add
out
xchg
pop
lcall
or
lods
fxch
cwtl
or
jb
mov
rcrb
in
lock
pushf
mov
sub
daa
mov
addl
outsb
bound
sbb
and
mov
filds
mov
mov
leave
sahf
fwait
jmp
sbb
push
jecxz
mov
int3
out
mov
rcl
cmp
ret
push
and
and
or
inc
and
sub
mov
inc
push
pop
cs
xor
das
jno
fbstp
jno
ljmp
imul
mov
push
push
xchg
or
ljmp
js
push
mov
or
rcrb
sahf
out
push
sahf
lods
wbinvd
sub
lock
in
ja
mov
pop
inc
dec
fcmovnu
push
loopne
imul
and
pop
cmp
lcall
cmpb
jo
push
rcl
mov
addr16
mov
ljmp
in
pslld
popa
aaa
nop
xor
pop
mov
in
je
jle
ds
xchg
jl
inc
stc
push
imul
cmpsl
cltd
into
add
lret
push
sub
ret
orl
adc
hlt
cmp
mov
out
xor
mov
je
lock
push
fnsave
inc
les
jnp
sti
pop
pop
xlat
inc
sbb
stc
inc
pop
shrb
mov
jo
pop
in
mov
test
movsb
aaa
jae
ret
mov
incl
mov
sbb
movsb
aas
aas
mov
lock
mov
fucomp
adc
sahf
std
add
push
adc
sub
cmc
push
fists
push
pop
mov
adc
arpl
fisubrs
nop
sbb
or
daa
xchg
sbb
xchg
inc
and
and
flds
xor
or
inc
inc
rcrb
rorb
mov
mov
adc
popf
dec
in
inc
push
scas
jb
lcall
xchg
repz
xchg
pop
inc
pop
fstpt
sbb
out
sarl
aaa
mov
and
xchg
sbb
fmul
cmp
xor
or
push
sysret
das
dec
sarl
bnd
push
mov
ljmp
pop
addr16
or
cltd
je
fucom
fcoml
call
iret
xchg
addr16
adc
dec
jmp
add
inc
mov
cmc
sbb
les
test
lahf
addb
and
shl
orl
rcl
xchg
dec
and
sub
loopne
inc
inc
test
fdivl
or
pop
cmp
sub
or
std
insl
cwtl
nop
test
add
and
rolb
andb
test
lret
push
cmp
movb
in
lret
sbb
les
icebp
gs
aad
mov
ljmp
jg
pop
add
stos
mov
je
adc
lock
pop
scas
aas
xlat
fisttpl
lock
pop
push
adc
pop
or
dec
pop
pop
mov
add
daa
ljmp
outsl
in
mov
inc
xchg
adc
lcallw
sub
fdivs
fwait
test
das
push
xchg
lods
daa
ret
dec
aam
rorb
jecxz
and
aam
adc
ja
mov
jbe
ror
mov
test
adc
push
dec
lret
out
and
mov
les
test
mov
mov
jns
cltd
lock
cmp
ficompl
mov
repz
dec
cmp
sub
mov
pushf
push
xchg
popf
inc
ss
ret
push
fadd
ss
mov
dec
ljmp
inc
cmp
test
in
es
lcall
cwtl
repz
outsb
jmp
xchg
in
or
shl
pop
shrb
mov
push
shll
imul
scas
adc
data16
sub
in
inc
mov
pushf
add
lahf
jmp
add
popa
jl
ljmp
mov
lcall
fcmovbe
insl
or
sbb
shrl
int
in
mov
dec
xchg
mov
and
push
xor
cld
mov
inc
push
dec
xor
cmpb
xchg
push
adc
int
sbb
out
cmc
add
adc
negl
and
negb
aas
in
iret
outsl
mov
mov
inc
into
add
mov
in
pushf
lret
loop
cmpb
ljmp
add
inc
test
ret
aam
addr16
test
out
mov
insb
int
test
mov
inc
sub
scas
ja
push
daa
sbb
xchg
or
xchg
push
or
pop
fadds
mov
or
and
cmp
clc
test
push
jl
call
inc
out
adc
mov
fcomps
sub
ss
in
pop
dec
lock
mov
xor
push
inc
scas
fsubl
jecxz
cltd
xlat
inc
fs
xor
pop
aas
push
dec
sbb
cmc
test
lahf
cli
cmpsl
xchg
rcrb
mov
sti
and
push
jno
rcrb
jp
loop
cli
dec
xor
fstl
xchg
jg
orl
sub
sbb
or
sbb
fisttpll
xchg
push
jp
add
mov
arpl
sbb
mov
adc
cmp
das
repz
rorb
push
out
mov
jb
and
add
cmpsl
pusha
ret
lock
dec
sbb
mov
leave
fwait
adc
inc
sub
lock
cltd
enter
mov
mov
sub
xchg
pop
jae
or
negb
and
xchg
pop
inc
sbb
jmp
push
syscall
ror
js
xor
pop
jbe
or
fistl
call
dec
fwait
repnz
dec
testb
repnz
or
inc
popa
out
and
and
ret
repz
and
in
inc
fs
mov
or
xchg
fnstcw
inc
cltd
or
jmp
xor
js
into
out
xchg
pusha
jae
in
aaa
cmpb
mov
cwtl
stos
cmp
jecxz
cmp
dec
add
stc
loope
es
cmc
sbb
pop
std
sbb
pop
xchg
js
orl
mov
push
dec
cmp
shll
fmul
pop
loopne
sub
dec
mov
cmp
and
out
pushf
sarl
jecxz
repz
add
inc
call
add
mov
dec
cld
addr16
shll
bound
pop
xchg
mov
push
dec
das
cmp
xchg
pop
add
xor
je
je
divl
jbe
push
mov
xchg
je
es
fsubl
or
push
outsb
sub
pop
negb
sarb
mov
inc
mov
cmp
aas
and
jl
jne
push
xchg
aas
pop
sub
imul
hlt
xchg
lods
jl
add
negb
push
iret
daa
xchg
mov
and
jns
in
pop
xchg
push
jge
addr16
loop
negb
popf
adc
imul
lahf
add
cmp
mov
sub
insb
or
test
mov
mov
mov
lret
jae
dec
imul
adc
lods
test
testl
jb
jl
mov
xchg
or
repnz
and
jecxz
ffree
or
inc
xor
lock
xor
jb
pop
and
cmp
fisttpl
xor
inc
call
xor
int3
add
lods
cmp
cmc
sahf
hlt
pop
test
int3
xor
cld
jns
jmp
jae
rdpmc
jae
cmp
jge
dec
cmp
in
push
add
nop
pop
movsb
pop
out
dec
movl
jb
pop
lcall
pushf
movsb
inc
lods
cmpsb
ja
or
outsl
adc
dec
outsb
out
xchg
or
or
orl
jo
jmp
pop
mov
test
jecxz
popf
rorb
cmp
in
pop
in
xlat
mov
dec
xor
mov
lcall
dec
add
fadds
test
lea
dec
pop
inc
ja
ret
cmp
pushf
ja
lret
add
mov
push
js
pop
xchg
inc
and
add
aad
inc
mov
stos
fisttps
sub
imulb
das
mov
jns
xchg
adc
out
leave
enter
in
lods
scas
loopne
jnp
pusha
xchg
cmp
or
jle
add
push
mov
lcall
push
xlat
pop
sbbb
mov
in
das
aad
and
pop
pop
pop
xor
adc
cmp
jle
jne
sarl
mov
fidivrs
rolb
repnz
jno
leave
jl
lcall
and
mov
and
and
test
andb
jno
jl
mov
lock
sahf
mov
cltd
add
out
cmpsb
in
xor
repnz
cmc
pop
and
xchg
jno
ret
push
das
das
shlb
jo
stc
pop
mov
lock
pop
cwtl
cmp
mov
and
out
subl
xlat
or
mov
cmp
jb,pn
jg
mov
and
pop
dec
mov
pop
jp
mov
loopne
addr16
test
dec
ja
jbe
inc
jo
bound
mov
xchg
lock
jnp
mov
enter
push
cmp
mov
xchg
pop
sbb
dec
jmp
mov
pop
sub
rolb
dec
mov
xchg
es
sub
rorb
leave
popf
jge
sub
sti
xor
ds
add
cmp
mov
pop
jg
pop
mov
test
dec
jb
gs
ss
sarb
ljmp
jne
scas
fs
add
daa
vmovaps
addr16
fcmovu
bound
xchg
jle
call
push
enter
decl
fxch
push
sbb
ljmp
jbe
rorl
notb
inc
xchg
sbb
sbb
into
ljmp
mov
mov
insb
lds
imul
push
push
stos
push
bound
insb
je
call
dec
popa
andl
out
or
rcl
xchg
sub
cmp
test
mov
sbb
or
pop
pop
in
push
push
popa
xor
xchg
inc
mov
jecxz
nop
and
add
nop
jp
lea
xchg
jmp
pop
pop
xchg
bound
aad
les
fistpl
incb
aad
mov
pop
mov
xor
gs
pop
movsl
ja
sbb
mov
and
out
lahf
mov
outsl
decl
inc
push
fdivl
dec
mov
cmp
lahf
mov
in
data16
ja
jecxz
cli
cmp
and
mov
rcrb
fildll
xor
out
in
jmp
int
mov
ljmpw
pop
dec
and
inc
xchg
mov
rcrb
push
pop
push
mov
mov
gs
mov
loopne
mov
jle
imul
adc
and
popf
or
test
lock
ljmp
mov
outsb
ljmp
lret
std
cs
popa
insl
rclb
or
repnz
sbb
adcl
mov
repnz
movl
adc
test
add
dec
popa
push
outsb
adc
ja
lret
leave
call
dec
push
push
pop
sub
push
push
cmp
jmp
testb
lds
dec
lods
lea
push
cmpsl
lock
test
lock
outsl
adc
int3
push
leave
mov
mov
mov
pop
adc
sub
fmull
cmpsl
jne
decb
ss
mov
add
fs
mov
cs
idivb
xchg
outsl
adc
imul
ljmp
push
mov
inc
iret
add
push
stos
jb
xor
in
movsb
sti
or
cmp
push
inc
shl
je
repz
adc
ja
dec
dec
popf
data16
je
notb
adc
mov
dec
rorb
lret
xchg
fbld
mov
test
sbb
loop
inc
jbe
jp
sub
inc
orb
inc
and
pop
mov
add
sbb
or
xchg
jp
push
adc
jbe
mov
ds
ljmp
in
cs
push
xchg
jb
bound
or
fisubrl
rcrl
das
imul
movsb
mov
stos
sbb
loope
mov
faddp
popf
push
addr16
jo
adc
sahf
fiaddl
jb
xchg
movsl
xorb
xor
push
ret
lret
out
add
repnz
cmp
sub
addl
mov
adc
loop
fsubs
push
dec
dec
jp
mov
dec
add
mov
ljmp
fbld
out
push
mov
sbb
mov
test
adc
mov
mov
in
mov
pop
enter
lods
adc
cmp
sub
fistl
out
fldcw
xor
xchg
and
movsb
mov
movsb
jae
dec
jecxz
loope
pop
pop
fistpl
cli
inc
sarb
push
enter
test
inc
mov
jb
or
dec
push
cwtl
in
jns
mov
mov
and
popa
mov
lahf
pop
dec
push
or
cmp
sti
lcall
cmpsl
pop
jbe
inc
mov
and
mov
xor
pop
sub
mov
ss
cltd
pop
dec
jns
cmp
mov
mov
xor
cld
mov
and
lea
loop
addr16
dec
adc
dec
jge
out
mov
test
clc
clc
add
sbb
mov
gs
xchg
dec
ret
cmp
pop
cltd
adc
outsl
push
mov
add
lcall
adc
lods
push
add
sbb
pop
test
add
pop
adc
or
sub
sbb
inc
push
lods
xor
dec
xchg
shlb
movl
fists
decl
mov
insl
add
ret
cmp
mov
ret
pop
jbe
xchg
jae
xchg
stc
xor
sbb
push
mov
sub
fwait
test
push
jmp
insl
jno
fistpll
lret
and
loopne
jnp
insl
pop
cmpsl
pop
nop
push
sub
mov
lret
sbb
cmp
rorb
jne
test
cltd
jmp
and
das
int3
sbb
pushf
cmp
and
inc
clc
or
sbb
inc
dec
bound
inc
imul
ljmp
adc
jno
stos
push
jle
clc
inc
pop
in
out
mov
inc
cmp
or
cmp
pop
inc
ret
int3
push
sarb
xor
xchg
lods
adc
pop
out
pop
shrl
add
fiaddl
fdivrs
cmpsb
loope
ljmp
jle
xchg
lods
negb
clc
imul
xchg
lea
je
adc
xchg
out
and
nop
sbb
fisubrs
fwait
push
jne
loopne
dec
nop
into
sbb
jns
lea
test
rclb
test
fstpt
sbb
xor
jnp
jb
aas
cmp
mov
cmc
lods
hlt
popa
adc
jl
or
je
push
bound
jnp
sbb
sbb
mov
cmp
mov
and
insl
movsb
sti
jns
push
inc
outsb
pop
xchg
sub
cmp
pop
fsubrs
or
cmp
movsl
hlt
cmp
scas
cmp
dec
outsl
sub
sahf
xchg
imul
pusha
sahf
or
or
xor
jecxz
loope
ja
aad
push
ljmp
data16
int
lock
sarb
dec
cmp
mov
inc
xchg
push
adc
in
sub
sarl
sbb
sbb
mov
cmp
lcall
nop
mov
in
clc
cmpsl
or
xchg
jae
mov
sbbb
rcrl
dec
pop
mov
jne
addr16
dec
add
cmpsb
lea
inc
insb
mov
xchg
pop
jp
mov
inc
ds
cli
mov
fisubrl
lahf
loopne
and
xor
mov
cld
xlat
mov
fwait
stc
fcom
cli
cmp
ja
in
ss
add
dec
cmp
xchg
lret
stos
popa
jnp
mov
popa
inc
mov
enter
clc
movsb
xor
mov
mov
sbb
sti
push
xchg
mov
aas
xchg
test
pop
mov
ds
mov
sub
mov
jp
shlb
xor
xchg
ret
mov
leave
cmc
inc
push
dec
jnp
push
adc
inc
lock
fchs
lock
mov
in
imul
mov
xchg
fiadds
fisttps
xor
push
inc
clc
and
in
sbb
dec
cmp
faddl
jno
push
stos
inc
inc
push
push
xchg
stos
mov
cwtl
xchg
xchg
pushf
mov
sub
pop
mov
das
mov
push
lret
xor
push
sub
movsl
in
mov
mov
or
outsb
inc
jne
sbb
sbb
adcl
mov
fisubrl
ret
rcrl
int
mov
sti
ficoms
fists
mov
push
out
mov
scas
cmp
pop
in
loop
sbb
jbe
jp
inc
adc
loopne
sbb
mov
dec
nop
lret
inc
icebp
push
out
ss
call
xchg
inc
int3
add
idivl
jle
hlt
jnp
mov
jns
sahf
rcrl
outsl
sub
out
daa
fwait
rcll
sbb
repnz
inc
mov
inc
dec
dec
lods
push
mov
rcrb
pushf
cwtl
fwait
mov
filds
pop
push
dec
mov
xchg
mov
jae
mov
cs
mov
push
insb
pop
cwtl
std
mov
repnz
repz
addl
in
inc
or
xlat
cltd
xor
push
in
xchg
js
aad
and
fistl
aam
mov
or
cmp
lds
pusha
inc
mov
fldl
jno
orb
and
out
and
adc
ljmp
mov
mov
fsubrs
int3
mov
out
xor
pop
jbe
out
inc
aad
jns
sub
pushf
inc
inc
and
rcrb
add
or
inc
mov
mov
xchg
sarb
in
pusha
xchg
fsubrl
xchg
push
and
cmp
dec
shrb
movsb
lock
fistpl
pop
sti
push
xor
sarb
sahf
inc
cmpsl
pop
jb
or
das
scas
mov
cmp
mov
loopne,pt
lock
cmc
cmp
or
push
movsb
sub
pop
pop
jne
add
mov
xchg
or
sbb
dec
vmread
inc
sbb
mov
xchg
xor
and
es
in
push
out
mov
stc
subl
sub
adc
or
stc
fs
push
sub
daa
jg
mov
xchg
rolb
stos
xor
insl
or
push
test
push
rcll
or
loopne
popf
sbbl
dec
add
dec
push
mov
or
aam
jbe
or
hlt
jl
stos
mov
mov
test
ss
cmc
sbb
ret
pusha
jae
jb
out
pop
fwait
insl
mov
pop
push
xchg
iret
and
movsb
pop
jne
pop
dec
cmp
inc
pop
loop
lock
jp
mov
out
push
or
mov
pushf
or
fbld
aas
movsl
lea
cwtl
jno
cwtl
cmpl
and
and
jge,pn
dec
mov
ret
adc
dec
aam
or
popa
sbb
outsl
push
insl
xor
cs
ret
gs
enter
out
jns
jne
jl
cmp
popa
and
dec
mov
cmpsb
adc
xchg
stos
in
les
jo
cmpb
xchg
repnz
filds
mov
ret
pop
mov
pop
ss
test
lds
lret
dec
xor
push
cmpl
or
shrb
lcall
addr16
adc
and
xchg
mov
and
arpl
cmp
roll
adc
adc
add
jmp
pop
mov
fstps
sub
mov
test
rep
jae
scas
adc
leave
je
lret
adc
cmp
mov
push
orb
lds
rorl
std
mov
movsl
aam
and
mov
enter
mov
xchg
jae
icebp
jge
ret
and
nop
jle
add
push
sbb
dec
mov
mov
sub
jmp
mov
shll
imulb
cmp
in
push
jge
add
mov
iret
mov
jbe
cmp
jne
add
stos
xchg
push
jl
push
adc
jp
xor
rorl
addr16
shl
inc
push
jns
je
sub
fwait
test
aam
xchg
and
sbb
mov
cli
jnp
cmp
inc
pusha
sub
xchg
lahf
or
add
pusha
ret
xor
xchg
fucomp
push
stc
or
mov
pop
int
xor
pop
rcrl
push
sbb
insl
xchg
cmp
inc
pop
out
push
shl
jle
cmp
mov
call
pop
lea
jno
inc
out
xchg
pop
rcl
lret
insb
rcrl
aas
enter
or
or
fwait
mov
inc
xor
mov
lret
xchg
mov
test
cmp
jle
dec
jne
jle
cmp
aaa
push
stos
xchg
insl
jmp
and
insb
add
mull
sbb
xor
xchg
add
mov
repz
pop
inc
jmp
dec
imull
aam
add
add
shll
sahf
dec
sbb
pop
cmc
xor
or
mov
mov
dec
data16
enter
jg
fimull
mov
incb
scas
push
pop
adc
mov
rorb
xchg
insb
lahf
adc
adc
outsl
xchg
ja
cmp
lret
jae
pop
addr16
and
les
loopne
pop
sbb
les
sbb
or
std
sub
cmp
pop
fisttpl
add
fdivp
dec
jge
xor
sbbl
stc
in
sub
and
mov
addr16
in
jne
lods
sbb
sahf
in
jbe
pop
inc
loopne
sarl
popa
les
lcall
orb
mov
xor
adc
dec
test
sub
push
call
xor
loope
and
fs
pop
int
outsl
rclb
sahf
orl
mov
xchg
jno
jmp
mov
sbb
repz
sti
pop
addr16
sbb
mov
sbb
mov
jo
and
repz
cmp
push
dec
push
sti
fidivl
rcrb
mov
fnstsw
je
loop
jecxz
rcrl
sub
stos
adc
sub
push
push
in
xchg
lods
int3
out
jo
mov
and
mov
je
cltd
jo
or
dec
arpl
ret
add
push
mov
icebp
iret
cmp
icebp
jns
imul
das
and
repnz
mov
cs
in
add
int
push
das
popa
lds
or
mov
push
repz
or
cld
dec
lock
das
pop
js
xchg
mov
pop
pushf
das
cmpsb
push
push
inc
loopne
out
add
sub
and
repz
jg
rol
adc
lahf
subl
test
or
loop
icebp
imul
stos
mov
testb
rolb
jns
dec
pop
sahf
clc
lret
jmp
push
test
mov
sbb
mov
jl
inc
adc
imul
jbe
jno
mov
out
push
das
adc
loope
and
in
fcomi
cs
das
dec
cmpsl
out
fcoms
xor
aas
sbb
mov
les
dec
xor
inc
push
mov
rolb
mov
idiv
mov
dec
and
in
or
push
enter
call
shll
pushf
or
pop
bound
jno
idiv
jnp
xchg
sub
jge
sarl
add
sbb
out
sahf
push
aas
mov
out
inc
push
sub
cmpsl
dec
int3
mov
addr16
add
sbb
dec
mov
mov
jbe
aaa
mov
lret
jns
clc
pop
lahf
ffree
sar
inc
lcall
or
and
adc
es
test
add
bound
xchg
push
int3
push
dec
add
ficoml
cmp
test
push
xchg
jle
sahf
jbe
push
neg
push
stos
addr16
testl
in
sbb
pop
adc
push
rcl
cmp
cmpb
sbb
mov
outsl
lret
jo
jecxz
std
jmp
cmp
xorb
icebp
dec
adc
testl
js
test
out
jg
cmp
dec
mov
pusha
das
pop
aas
sbb
push
sub
cmp
xlat
mov
jbe
mov
fiaddl
mov
loope
and
idivb
ret
rorl
cmpb
inc
fwait
xchg
rorl
ja
dec
shr
out
loop
in
push
push
inc
dec
pushl
das
repnz
es
testl
or
lret
dec
dec
mov
push
lea
stos
mov
jp
data16
jb
out
daa
inc
das
cli
sbb
out
mov
enter
mov
movd
pop
test
push
xor
clc
adc
inc
dec
es
push
mov
cmp
xchg
and
jnp
adc
test
fwait
insb
insb
push
je
adc
adc
mov
cmpb
les
enter
or
test
lahf
or
push
xchg
subl
cld
lret
pop
adc
add
add
shl
pop
xchg
ds
jns
xchg
fmuls
dec
sub
repnz
jbe
leave
icebp
mov
bound
loope
into
scas
pop
or
jmp
mov
mov
sub
jp
nop
int3
das
xchg
and
addr16
ljmp
lock
call
fldenv
pusha
push
adc
push
movsl
jge
in
xlat
sub
sbb
mov
pushf
leave
in
pop
es
movsb
adc
push
adc
adc
imul
cltd
mov
push
and
out
jl
jbe
nop
pop
and
cli
mov
jp
ret
mov
ds
pop
sub
shll
inc
in
loop
sbb
add
sbb
mov
clc
jecxz
icebp
in
orl
addl
addr16
push
or
in
fnstsw
rol
jge
dec
and
inc
loop
aas
test
sbb
mov
pop
mov
mov
add
ds
mov
js
jae
or
add
clc
repnz
ljmp
cltd
push
movsb
repnz
scas
xor
nop
mov
push
or
push
xchg
dec
xchg
frstor
pop
insl
adc
jle
jae
iret
outsb
pop
cs
mov
sub
cltd
jae
loop
fimuls
ljmp
pushl
adc
les
lods
jae
sub
ja
mov
fmull
add
int3
jmp
lret
das
test
leave
aam
int
mov
push
mov
sub
xchg
fnstcw
rclb
iret
push
subb
movsb
enter
cmp
dec
add
xchg
jns
popf
lea
scas
call
pushf
inc
mov
xor
sarb
inc
jnp
mov
test
jge
pop
xor
cmp
fwait
mov
jge
sahf
add
xor
ds
loopne
movsb
lret
fwait
sub
dec
lock
lret
pop
mov
repnz
mov
jle
mov
jl
xor
movsb
notb
push
popf
fcomip
test
mov
notb
inc
jne
call
mov
sbb
into
hlt
sbb
fdivl
xor
add
jle
je
fwait
push
push
sbb
push
repz
in
sbb
leave
sub
cmp
pop
ss
adc
nop
xor
xchg
and
in
jne
scas
fildl
pop
dec
mov
or
and
aas
sub
jbe
jns
sbb
fwait
xchg
push
mov
fwait
arpl
popf
sbbb
ljmp
xor
push
inc
sub
mov
roll
inc
xchg
test
pop
cmp
jg
add
xchg
inc
pop
push
js
shlb
push
lcall
push
fldl
in
sub
inc
adc
sahf
mov
mov
and
hlt
pop
fdivrp
push
outsl
insl
fsubrs
jo
js
xchg
repnz
adc
cmpsl
scas
mov
mov
daa
stc
nop
jle
push
sub
push
inc
mov
xlat
dec
xor
sub
lea
in
cwtl
jo
sub
call
mov
ja
sbb
das
inc
loop
jns
fwait
lods
sbb
pop
lods
mov
push
inc
jnp
les
scas
pop
ss
sbb
int3
sub
out
xchg
in
mov
mov
loop
pop
cmpl
or
xchg
sti
sarb
pushf
loope
jecxz
call
xchg
mov
fists
fadd
aam
mov
inc
lret
mov
add
mov
in
outsb
add
push
in
aam
nopl
fistpll
fwait
dec
scas
cmp
xchg
dec
pop
mov
std
fcomps
enter
jnp
mov
mov
mov
arpl
cmp
xchg
es
out
or
dec
sbb
jmp
xor
sti
out
paddd
cmp
add
or
les
mov
mov
dec
add
test
jnp
pop
aaa
ret
and
shl
pop
sbb
ljmp
mov
fs
cli
lds
movsb
sbb
rcll
inc
rolb
sti
ret
fs
fiadds
fbstp
mov
out
cli
or
cmp
mov
js
dec
jge
push
push
pop
cmpb
push
inc
rorl
dec
rorl
repz
orb
push
inc
sahf
dec
mov
aas
sbb
and
sahf
mov
add
das
aad
cmp
sbb
enter
cmpsb
cld
test
push
stos
or
xchg
test
daa
mov
mov
imul
adc
push
cmc
jle
sbb
push
mov
lcall
xchg
push
or
adc
xor
pop
push
xor
push
ljmp
mov
lock
push
mov
aas
sar
lea
sub
in
call
mov
mov
out
sbb
mov
in
fisubl
js
or
negb
pop
push
rorb
out
mov
dec
xorl
cmp
or
cmp
and
and
jne
fsubrs
js
adc
aam
aam
xchg
pop
sub
in
bound
adc
jae
sbb
xchg
dec
popf
fisubl
ja
mov
mov
inc
int3
stc
mov
outsb
adc
cmovnp
shlb
mov
xor
mov
bound
rcrl
ss
jge
inc
rclb
js
lock
mov
nop
jne
adc
mov
pop
pop
dec
add
es
mov
sbb
xor
subl
leave
sbb
or
les
sbb
call
int3
fsubr
repnz
shlb
pop
pop
jb
xchg
call
call
push
push
pushf
mov
inc
stos
jnp
roll
mov
pop
inc
incl
and
nop
punpckhdq
cmp
movsb
test
and
dec
add
mov
add
fstps
xchg
lea
ret
cmpsl
ljmp
lds
jae
sub
sbb
dec
jbe
add
add
add
clc
jge
arpl
cmp
or
mov
popa
ljmp
cltd
mov
push
sahf
outsb
or
lods
popf
stc
push
mov
adc
cmp
idivl
mov
dec
movsb
outsb
loopne
out
add
push
xchg
cltd
adc
adc
xor
adc
sub
filds
inc
ljmp
out
mov
push
ds
pop
pop
sbb
insb
lahf
imul
enter
jl
mov
dec
outsb
mov
ret
cmp
test
addb
mov
jne
sub
push
mov
cmpsl
out
jns
jno
aaa
xor
dec
mov
mov
mov
mov
test
lds
negb
dec
hlt
mov
mov
mov
orl
jecxz
inc
mov
push
dec
cmpsb
out
push
mov
adc
gs
jge
inc
cmp
je
out
fcomps
into
mov
push
sub
jmp
dec
fcompl
stos
repnz
cmpsl
data16
xchg
andl
js
out
dec
mov
fs
cli
dec
scas
pushf
sub
sti
dec
adc
dec
mov
adc
lods
icebp
outsl
sub
imul
dec
dec
xor
jno
xchg
je
rol
fstps
lahf
mov
sbb
fcoml
push
popa
aad
incb
sahf
fimuls
mov
lods
push
ret
orb
push
enter
scas
sbb
xchg
mov
fmull
fstps
pushf
outsb
jne
mov
addb
mov
adcl
shlb
into
sbb
mov
loope
xlat
cmp
mov
mov
dec
cmpsl
shll
pop
aas
nop
mov
inc
cmc
pop
cmc
inc
cs
jecxz
popf
cli
xor
mov
xchg
bound
sub
aas
xchg
jmp
imul
cmp
jnp
push
pop
mov
xor
in
mov
pop
jmp
inc
pop
cmpsb
mov
jnp
loopne
popa
out
xchg
xlat
ljmp
cmp
pop
cmpsb
adc
jmp
stos
mov
pusha
add
lret
push
fidivl
mov
or
inc
mov
push
pop
inc
ffree
ret
pop
mov
lds
shr
fstpt
adc
adc
cmc
xchg
pop
lret
xchg
mov
add
sahf
mov
ss
movsl
sub
inc
push
xor
lds
xor
add
movb
lea
dec
hlt
jb
pop
ss
dec
loop
movsl
and
add
inc
fidivl
test
outsl
or
jnp
xorb
lds
jno
rcll
mov
aam
daa
push
std
loopne
mov
mov
into
fistpll
xor
xor
xlat
pop
popf
sti
loope
mov
lods
repnz
adc
pop
jns
push
mov
jecxz
daa
mov
pushf
adc
push
lret
xchg
push
ret
push
cltd
enter
mov
jnp
fcmovnb
in
add
or
cmp
sti
jb
dec
cs
jbe
imul
add
es
push
ljmp
xchg
out
fisubl
add
jb
jo
inc
mov
mov
and
or
cmpsl
aam
push
icebp
adc
cwtl
sahf
rcrl
fildl
fldl
and
stos
dec
es
or
lcall
and
orl
jns
insl
inc
in
test
testl
lcall
mov
jno
mov
insl
push
jecxz
jle
xchg
data16
cli
and
jnp
idiv
into
movsl
cmp
xchg
je
scas
adcl
mov
xchg
es
mov
je
push
sti
mov
outsl
movb
or
leave
lods
rolb
mov
in
lcall
push
xchg
mov
mov
jp
lret
adc
sub
xchg
mov
mov
stc
lock
icebp
inc
cltd
pop
mulb
test
pop
and
fisttps
dec
or
mov
mov
sti
or
icebp
out
pop
adc
jl
xorl
cwtl
sbb
ljmp
pop
test
out
cmp
adc
sti
inc
sub
cltd
fs
mov
inc
jns
cmpsb
mov
inc
mov
idivl
sub
xchg
adc
mov
sub
xchg
test
bnd
and
pop
mov
sub
nop
pushf
lcall
js
xchg
lods
mov
lods
or
outsb
roll
sti
xlat
mov
ficoml
sub
outsl
sub
adc
dec
mov
push
scas
xor
jae
mov
scas
test
sbbb
mov
mov
cmc
xchg
jno
in
shlb
cmpb
xor
ror
xchg
test
dec
test
repnz
sub
in
cwtl
imul
shll
mov
icebp
dec
gs
mov
mov
or
lods
pop
jae
mov
dec
xchg
adc
sub
sbb
xchg
lea
notb
or
or
dec
inc
cmpl
push
cmp
push
mov
dec
mov
jns
bound
repnz
pop
pop
xchg
bound
xchg
xchg
or
loop
verw
daa
and
fiaddl
push
or
daa
aad
pop
pop
leave
mov
mov
outsl
mov
icebp
and
pop
jge
push
xor
addr16
pop
mov
push
mov
sbb
xchg
aam
mov
leave
rcll
inc
adc
sti
xchg
mov
ja
lds
mov
incl
inc
outsb
push
mov
popa
hlt
xorb
ret
cltd
rcrb
shll
js
jmp
orb
dec
sub
sbb
xchg
or
and
ja
stc
dec
mov
mov
movsb
mov
jle
outsl
pushf
jb
jl
adc
xor
inc
jns
fwait
push
icebp
paddd
and
jne
sbb
test
repnz
push
push
cwtl
aas
add
push
orb
in
notl
lcall
cmp
mov
cmp
mov
xor
inc
mov
ljmp
jle
pop
mov
or
sub
cmc
lods
adc
lods
addr16
xor
enter
fs
push
shl
mov
dec
xchg
mov
stos
push
pop
mov
pop
in
sarb
jo
stos
js
dec
or
pop
inc
cli
stos
pop
call
and
in
fidivrs
or
add
dec
lret
mov
bound
mov
mov
lods
xlat
xchg
ja
in
cmp
or
imul
xchg
jns
mov
mov
and
nop
pop
call
jno
ja
leave
push
xor
adc
lea
js
rcrb
les
pop
or
out
mov
outsb
stos
out
jae
xor
jno
jge
js
repnz
icebp
inc
call
mov
stos
sub
pop
arpl
test
jbe
ljmp
ror
mov
add
pop
sbb
add
call
cmp
or
push
inc
mov
add
filds
ja
aam
push
mov
cmp
pop
and
add
movsb
push
push
loopne
push
repz
pushf
xchg
sub
movsb
rcrl
pushf
add
cmpsl
stos
hlt
frstor
jp
xor
and
gs
adc
leave
xor
cmp
xor
inc
mov
add
push
sub
push
in
js
push
sub
and
shlb
pop
and
and
fiadds
jns
les
jmp
les
out
stos
or
mov
insb
add
enter
push
xor
cmp
hlt
mov
mov
popa
out
adc
les
outsb
and
dec
mov
or
aas
in
hlt
rorl
addr16
aad
dec
inc
jae
add
sub
pop
shlb
pop
lahf
aaa
dec
std
mov
cmovge
into
mov
mov
movsb
mov
loop
fstps
jl
cmc
mov
dec
and
inc
xrelease
mov
fisubl
sahf
jp
push
popf
aas
mov
xor
dec
es
push
mov
jecxz
add
out
mov
dec
push
push
mov
mov
out
inc
test
cmpsl
lods
call
insl
cmpsl
out
fisubrs
adc
addl
mov
xchg
les
jg
sub
mov
add
ljmp
jg
push
cli
push
mov
or
leave
and
lcall
adc
sbb
fists
pusha
aaa
dec
enter
lock
fdivrs
int3
xchg
fwait
push
js
pop
mov
mov
insl
pop
pop
add
or
adcl
int3
movsb
xor
sbb
and
int3
in
and
xorl
aas
pusha
divl
ror
sti
ljmp
div
xchg
or
in
fstpl
subb
inc
mov
xchg
cmp
jge,pn
mov
lock
fwait
xor
mov
cmp
xchg
sub
lret
dec
leave
out
push
add
xchg
into
enter
or
pop
paddsw
cmp
lahf
adc
sbb
popa
clc
xorl
movsb
sbb
jg
mov
sbb
daa
mov
xchg
lcall
int
dec
inc
or
repz
adc
and
dec
loope
iret
sub
jb
jmp
lods
std
inc
insb
xchg
jb
das
outsb
fstpt
repz
mov
std
in
outsb
adc
inc
or
movsl
ja
jp
outsb
js
pop
dec
pop
insb
jg
mov
jae
lret
lahf
cmpsl
js
jbe
push
or
or
pmaddwd
loope
sub
test
mov
inc
mov
push
dec
cmp
lcall
movsl
fnsave
sbb
fcmovne
fwait
insl
nop
sti
sbb
scas
outsb
lret
fwait
test
mov
lret
push
mov
imul
and
xor
sbb
jp
bnd
jae
jl
mov
xchg
ret
out
mov
out
nop
hlt
dec
lock
imul
pop
mov
xchg
and
cmp
in
repnz
int
xorb
inc
js
iret
lock
pop
jnp
or
mov
jae
popa
adc
test
or
dec
adc
hlt
dec
arpl
ret
ret
mov
mov
sbb
or
stos
sbb
mov
add
mov
push
xor
mov
inc
inc
sbb
sub
push
aaa
add
lret
int3
add
lock
ret
stos
scas
and
mov
jne
push
pop
push
dec
jo,pt
mov
int
pop
xor
mov
mov
jne
aad
adc
out
mov
inc
push
inc
mov
bound
and
sub
cld
rolb
pop
mov
aad
scas
jo
lods
mov
sub
inc
mov
add
xchg
pop
jge
inc
daa
add
xchg
and
inc
cs
jle
adc
sbb
lcall
mov
js
dec
lahf
lahf
jge
fs
fs
pusha
or
xchg
xlat
or
cli
xor
daa
mov
adc
push
xor
icebp
jns
arpl
fadd
js
daa
pop
inc
xchg
adc
std
cmp
call
jp
xor
aad
dec
xor
sub
cld
mov
outsb
in
add
insl
das
lret
negb
cmp
pushf
pushf
mov
std
or
rcr
push
mov
dec
fsubr
fs
adc
cmp
sahf
push
push
cli
ret
fstps
ds
jl
scas
std
popf
sub
cmp
repnz
sub
xchg
rol
rcrl
imul
pop
mov
xor
jecxz
jnp
rep
shrl
mov
dec
fcoms
lock
inc
jg
adc
cld
push
or
jl
scas
inc
popa
pop
mov
cs
mov
and
cs
orl
mov
hlt
jp
lea
ljmp
icebp
mov
movsl
mov
roll
ss
cmpsl
jecxz
shl
push
cmc
cmpsb
dec
loop
push
xchg
dec
ret
or
push
jl
imul
cmp
and
int3
enter
or
test
pop
into
ja
sub
sub
arpl
fadds
out
xchg
add
dec
sbb
outsl
xor
lods
or
sub
add
jbe
dec
cmpl
inc
cmpsb
bts
outsb
lock
in
movsl
divl
xor
push
mov
jo
mov
insb
nop
cmp
bnd
insb
push
sahf
adc
dec
cmpsb
loope
int
imul
xchg
xor
adc
jno
mov
mov
scas
lcall
test
out
mov
mov
lret
add
adc
pop
dec
add
dec
fists
test
pop
pop
or
aad
loopne
lea
sar
xlat
push
sbb
push
sbb
pop
idivl
iret
dec
jp
adc
jle
or
sub
pop
sbb
scas
and
sub
adc
adc
in
cmc
pop
push
lahf
and
lret
loopne
push
insb
inc
mov
adc
ret
jmp
repz
out
je
inc
pop
idivl
xor
nop
lds
xor
movsb
sbb
out
rcrb
sbb
mov
pop
gs
adc
sub
or
roll
jns
daa
stos
test
movsb
jg
flds
outsl
and
daa
add
push
and
cmp
add
push
pop
sbb
jae
fdivrs
bound
pop
dec
jo
repnz
mov
jne
repz
dec
add
rorl
andl
sti
ret
mov
test
jecxz
add
sbb
hlt
push
imul
add
xor
xchg
in
lcall
pop
fcomps
in
xchg
mov
or
and
xor
test
mov
xchg
imul
addr16
lret
xchg
out
xor
popf
and
repnz
outsl
fisubrs
sarl
pop
lret
lret
add
rcrl
cmc
fwait
dec
or
lea
push
push
cmp
aam
sub
xchg
pop
xchg
inc
jmp
arpl
les
iret
mov
repnz
stos
add
movsl
stc
enter
nop
pushl
add
mov
push
imul
add
in
shlb
out
ja
js
mov
imul
fidivrs
pop
push
push
ds
iret
xor
int3
mov
dec
fs
xor
loope
fwait
or
pop
sbb
dec
mov
push
add
lods
aaa
mov
cs
int3
lds
jb
lcall
xor
push
or
aas
cmp
sbb
int
mov
mov
push
pop
push
fisttpll
inc
loop
ficoml
adc
mov
push
and
imull
cmp
cmp
adc
js
insl
pop
mov
cs
in
jle
sbbl
js
pop
jmp
sbb
test
and
sbbl
mov
out
pop
lcall
les
xchg
test
lock
push
sbb
repz
sub
sub
sar
iret
sahf
fidivrs
out
mov
fidivs
or
and
mov
subl
int3
call
stc
pop
jnp
loop
and
pmaxsw
mov
pop
inc
mov
inc
dec
sub
jecxz
push
daa
sub
jne
cmc
ss
outsb
cmc
movsb
pop
pandn
into
xchg
sub
xor
mov
sbb
dec
pop
xchg
int
or
mov
jo
jg
mov
mov
inc
inc
dec
pop
mov
mov
push
xchg
cwtl
cld
sub
repz
mov
pusha
cmp
sbb
pop
xchg
cmp
jl,pt
sbb
xchg
jge
push
push
nop
pop
pusha
es
or
jmp
sahf
sbb
gs
fimuls
rorb
jno
out
cmp
popf
cmp
mov
out
mov
shlb
out
shrl
call
repnz
addl
push
dec
jns
icebp
daa
or
and
nop
rcrb
out
dec
lock
test
or
test
fnstsw
fwait
sbb
add
dec
lea
add
fsubs
inc
inc
xchg
fs
cmc
mov
sub
sbb
mov
lods
dec
bound
adc
cltd
push
push
push
sbb
inc
fcomi
flds
int
push
jb
adc
hlt
imul
mov
push
dec
cmp
xchg
aad
bound
jge
stos
pop
loop
pop
jns
rcrb
mov
pop
into
insl
inc
adc
and
andb
aad
sarb
loope
jl
inc
jge
jge
cmpsb
addb
inc
pop
fsubrs
jle
clc
cmc
mov
adc
push
pop
mov
and
xchg
pop
pusha
jnp
pop
movsl
rorb
imull
gs
push
mov
outsl
mov
hlt
mov
or
in
out
int
jne
daa
xchg
test
push
dec
push
push
inc
cmp
push
pop
mov
scas
dec
or
andb
pop
and
add
test
add
ds
nop
jl
aas
cmpsb
add
push
out
push
xor
push
cmpsb
xchg
jbe
dec
jne
xchg
mov
lods
rorb
pop
xchg
std
das
popf
movsl
insb
sub
xchg
fs
enter
into
sub
inc
repnz
prefetcht2
stc
repz
and
sahf
sbb
call
in
fbstp
lods
sbb
jbe
ss
test
daa
push
mov
sub
int
pop
adc
pop
adc
subl
cmp
ror
jmp
pushf
xor
xorl
or
addb
jo
fcmovnu
ss
adc
rcll
or
push
push
mov
mov
sbbb
cltd
sbb
sbb
gs
cmpsb
xchg
dec
jne
clc
and
jns
shlb
cmpb
jns
xchg
insb
mov
lds
ds
les
in
jo
mov
pusha
popa
push
in
js
push
push
je
pop
mov
jno
into
arpl
aad
adc
push
jge
ss
mov
push
andb
push
mov
mov
jmp
dec
cs
inc
cmpsb
lcall
adc
shlb
jbe
icebp
movb
push
cs
test
dec
test
dec
cld
sbb
push
or
test
outsl
mov
insl
xchg
sub
hlt
sub
and
adc
scas
push
jp
mov
pop
jbe
dec
push
xor
pusha
ljmp
cmpl
sarb
xchg
notl
cld
scas
das
cwtl
inc
mov
ficompl
into
adc
or
push
repnz
cmp
mov
fidivl
out
jno
cltd
ds
push
push
jg
xor
xchg
bound
movl
in
pop
movsb
sub
sti
mov
test
jne
scas
in
xchg
in
jne
mov
push
les
aad
sbbl
repnz
and
and
pop
xchg
xchg
sti
test
mov
icebp
lds
js
mov
xchg
mov
out
aaa
stos
push
jns
cmp
or
mov
ss
fisttpll
orl
mov
in
mov
xchg
xor
adc
enter
cltd
dec
cli
adc
fistpll
push
arpl
andl
add
cmp
pop
repz
pop
sbb
jnp
add
lret
push
jge
test
fwait
mov
adc
mov
and
and
out
jl
ret
in
fsts
sarl
mov
mov
out
imul
xlat
das
daa
in
xchg
mov
jg
imul
sub
inc
movsl
mov
cmc
xorb
adcb
clc
mov
arpl
lea
je
cmp
or
sbb
test
int3
pushf
lods
es
sub
push
mov
pop
adc
aam
xchg
and
mov
addr16
jo
movsb
inc
sbb
stos
dec
iret
pusha
cmp
jmp
cli
cmc
test
mov
movsb
cmpsb
movsl
testl
xor
xor
pusha
aam
push
gs
fidivrl
pop
xor
test
mov
cmpsb
mov
mov
popa
sub
push
jge
sub
int3
fwait
lock
mov
pop
cmpsb
popl
sbb
inc
scas
push
jo
ds
mov
cmpsb
shrb
into
cwtl
daa
mov
fcmovnbe
testl
or
int
fwait
daa
xorl
xor
mov
xor
imul
clc
add
mov
sbb
xor
ljmp
and
rcll
mov
popa
out
cmpsb
or
or
and
test
lcall
pusha
push
rcll
inc
jne
sub
pop
jns
lods
dec
push
int
jb
fcomps
loop
decb
jmp
xchg
fcomi
jg
ret
and
stos
div
ss
icebp
aad
push
xchg
ret
or
add
xchg
or
imul
mov
fldt
add
cmpsb
pushf
mov
mov
push
dec
das
add
ja
push
aad
push
xchg
cmpl
jns
adc
imul
sbb
test
add
shlb
pop
dec
sub
mov
loopne
dec
movsl
xor
mov
adcb
pop
adc
fstps
fstp
das
test
lcall
jg
outsl
inc
or
cmp
jo
shlb
mov
icebp
or
test
push
push
mov
jmp
lods
js
nop
movb
dec
mov
mov
mov
pop
inc
or
aad
jmp
sub
sub
inc
mov
jmp
jecxz
aas
sbb
sbb
adcl
in
scas
int
pop
imul
cli
sbb
jmp
popa
pop
sti
cmp
push
mov
call
push
sbb
stos
out
pop
jmp
pop
lret
jmp
aaa
push
sub
aas
pop
cmc
filds
mov
lds
data16
fdivrl
rcrb
mov
pop
ljmp
adc
inc
adc
push
cli
aas
ret
mov
pop
add
inc
jnp
dec
push
ret
rcll
jne
add
pop
cmp
insb
orb
add
mov
adc
icebp
pop
stc
lea
icebp
leave
push
int
xchg
call
test
fadds
add
aad
les
sub
sub
pushf
xchg
punpcklwd
mov
mov
or
jno
xchg
jne
pusha
stc
in
inc
jle
inc
lods
sbb
aaa
mov
jbe
cmp
ljmp
push
lea
push
test
inc
fs
lcall
outsl
add
popa
enter
push
xlat
jo
pop
mov
cmc
scas
jmp
orb
sti
or
stos
cmpsb
cli
int3
enter
int3
jb
or
aaa
imul
sub
and
adc
and
aam
out
mov
lret
daa
xor
out
inc
xchg
es
fidivl
xchg
imul
adc
mov
jge
sti
sbbb
xor
insb
sub
adc
iret
jbe
test
imul
mov
arpl
xchg
shl
popf
add
out
jmp
mov
jge
mov
loop
cmp
stos
in
xchg
imul
jmp
je
inc
add
jbe
jae
fidivrs
jb
sbb
pop
in
ret
adc
add
and
push
pop
push
push
inc
js
inc
cltd
xchg
outsl
cmp
lods
pushf
mov
cld
sbb
and
out
sbb
pop
pop
sub
pushf
test
pop
cmp
add
mov
dec
rorb
mov
mov
inc
mov
cmp
mov
loop
fldl
xchg
jo
push
lahf
or
ss
std
mov
arpl
jnp
cld
std
es
cmp
lret
dec
popf
sub
xor
out
cmpsb
and
enter
mov
pop
insl
jns
jg
fwait
mov
mov
loope
jnp
push
mov
mov
stc
dec
push
cmpsl
and
push
cld
cli
mov
jl,pn
mov
stos
or
les
dec
mov
xor
lea
in
jg
js
ss
lea
fnstcw
iret
dec
lcall
gs
push
inc
add
gs
repz
lea
push
scas
insb
push
pop
movzwl
xbegin
js
pushf
add
fidivrl
inc
movsb
imull
pop
ds
mov
cli
xchg
aam
fimull
cmp
jp
mov
lock
xlat
loope
dec
lahf
jae
mov
cmp
jae
test
pop
icebp
or
xor
es
sub
scas
mov
insb
scas
push
push
adc
jo
popf
loopne
inc
jne
jbe
int3
mov
cli
xchg
pop
inc
int
mov
mov
and
sub
sub
aad
inc
cs
xor
sub
jb
mov
sub
add
ret
cli
cs
in
inc
jno,pt
adc
xchg
loop
test
cmp
or
jb
mov
popf
fsubl
pop
or
or
cmpsl
js
push
or
dec
add
and
adc
add
xchg
scas
ret
jb
adc
rorb
push
or
mov
pop
adcb
orb
inc
dec
jle
insl
adc
mov
xor
popf
push
sbb
pop
dec
sbb
rclb
out
mov
scas
and
sbb
inc
les
rorl
ret
cmp
cli
push
movsl
xchg
xor
jne
and
cli
xor
push
insl
or
jmp
cmp
sub
outsl
mov
imulb
cli
and
mov
pop
outsl
stc
push
mov
xor
sti
pop
dec
imul
jle
adc
or
repnz
pop
mov
or
push
int
or
sbb
loope
push
insl
out
nop
sub
xor
xchg
dec
movsl
shlb
pop
jne
jno
or
movsb
daa
mov
push
cmp
repnz
loop
xor
pop
inc
dec
jnp
loop
xchg
add
arpl
xor
test
incb
repnz
mov
push
push
ret
jg
repnz
xor
sub
pop
add
hlt
mov
aaa
push
sub
fisttpl
mov
leave
aaa
jne
inc
xlat
adc
ret
fs
dec
inc
outsb
sarb
in
lock
imul
xchg
lods
cmp
out
add
cld
gs
jns
pushf
cs
int3
aad
jb
stos
mov
sbb
mov
push
push
pop
fs
sbb
jnp
movsb
out
and
sub
xlat
inc
sub
ret
stc
push
mov
sub
icebp
push
jmp
xchg
ljmp
lods
adc
mov
in
fidivrl
insb
icebp
inc
callw
mov
push
mov
out
test
add
pusha
fcoms
sbb
int3
inc
hlt
fdivp
cmpsb
adc
cld
sbb
aam
sarb
jge
and
xor
adc
stos
sti
push
push
xor
sub
cmpsb
shll
test
popa
call
adc
xor
test
fsubl
cmp
sub
es
mov
ret
xlat
shl
jl
jmp
push
dec
dec
pusha
push
mov
pop
sub
lods
idivl
push
test
lretw
out
sub
pop
or
mov
roll
cli
sub
inc
xor
xchg
fbstp
out
jecxz
jg
jb
fldl2t
sarb
pop
mov
jle
bound
xor
cwtl
scas
mov
lcall
mov
lods
inc
mov
push
out
lods
inc
or
cmp
mov
lods
les
and
add
xchg
sti
jo
inc
fsubrl
es
nop
lcall
cld
fbld
cmpsb
rclb
push
mov
into
xchg
xchg
lcall
sbb
mov
roll
sbb
add
xor
pop
cltd
or
adc
xchg
xchg
mov
imul
pop
mov
fmull
ret
and
faddl
std
pushf
inc
clc
xor
mov
int
xlat
int
aaa
fs
insb
jge
aad
hlt
cwtl
jb
ja
sub
pop
push
enter
stc
sub
adc
jge
cwtl
das
mov
int3
sbb
adc
repnz
jns
lret
or
clc
outsl
adc
push
ret
dec
xchg
pop
and
iret
repnz
pop
jbe
lcall
aam
adc
sahf
clc
pop
lret
call
xchg
push
ja
test
pop
fistps
adc
mov
and
xor
pusha
movsb
mov
sub
test
hlt
sahf
add
hlt
sar
pop
adc
cmc
mov
ss
mov
iret
pop
sbb
scas
jge
bswap
loope
mov
aam
mov
ret
adc
push
loop
mov
adc
test
lahf
cmp
inc
inc
lock
js
outsb
sub
xchg
sbbl
mov
les
push
lahf
or
xor
rorb
popa
cmp
popf
aad
xchg
mov
jae
jo
stc
mov
popa
dec
mov
fdivl
dec
sbb
icebp
dec
shrb
xor
adc
movsb
cmp
mov
cmp
push
repz
push
xchg
and
or
cmp
mov
mov
test
fisubs
jae
ds
mov
xchg
dec
mov
iret
dec
jmp
cwtl
cmpsl
sbb
test
or
push
sbb
gs
xor
orl
or
leave
push
sbb
ret
dec
jns
adc
or
in
push
repz
adc
pop
fdivl
outsb
dec
and
ret
loop
cmp
pusha
fldt
sub
fdivp
inc
sarb
daa
xor
leave
adc
ficoml
adc
int3
inc
stos
mov
push
jl
imul
sub
inc
inc
xlat
inc
xchg
loop
xor
mov
sbb
js
mov
lods
shl
std
or
js
and
insl
pop
and
push
outsb
fcomp
cli
mov
in
cltd
push
fwait
inc
cwtl
int3
jb
mov
and
or
mov
insl
sub
out
mov
orb
mov
xchg
scas
or
cmp
add
inc
imull
cmp
lret
in
sti
jae
out
repnz
mov
repnz
mov
arpl
rolb
xlat
inc
pop
mov
ja
sub
pop
inc
cmp
inc
pop
xchg
icebp
cwtl
mov
dec
fldenv
iret
dec
mov
movl
jmp
idivl
mov
xchg
or
bound
int3
cmc
mov
jecxz
adc
mov
andl
xchg
xchg
out
fisubrs
test
dec
aas
scas
outsb
mov
and
sbb
sub
add
adc
fistpll
sbb
sbb
data16
inc
jno
mov
pushl
xchg
add
mov
sahf
push
xor
imul
push
lea
jl
imul
mov
pop
cwtl
into
or
repz
scas
int3
push
add
or
bound
scas
xchg
push
rcl
push
mov
cmp
jge
daa
xchg
mov
js
stc
jecxz
pop
cld
push
sbb
push
sub
in
add
push
cmp
ja
inc
je
fwait
add
mov
loope
dec
push
cmp
sbb
popf
mov
loopne
mov
mov
dec
lea
mov
or
insb
add
jae
sbb
cltd
jnp
cmp
scas
or
jge
cmpsl
in
dec
push
fstpt
outsb
sub
je
jg
sub
dec
sub
mov
and
cmp
mov
lods
scas
rcrb
or
jno
push
or
mov
daa
shll
xchg
push
xchg
data16
inc
sub
rcrb
lock
imul
andl
sub
cmp
test
push
lock
iret
imul
rcll
adc
and
cld
and
popf
cmp
sbb
out
inc
sahf
aad
cmc
out
jmp
ss
mov
pop
out
mov
mov
ljmp
jae
push
addr16
xor
or
mov
out
ljmp
dec
sti
jb
cmpsl
call
jmp
mov
cmp
cmp
or
pushf
sti
addr16
pop
xchg
lcall
loope
or
or
cli
add
xchg
and
sub
xchg
xchg
push
adc
addr16
pop
xor
loop
pop
and
push
or
insl
pop
pop
mov
std
in
testb
jbe
mov
adcb
lcall
fcmovnb
js
popf
mov
call
outsb
mov
adcb
fneni(8087
les
rcrb
aad
orb
sbb
test
mov
mov
jo
sbb
jl
jns
orb
lret
push
push
scas
mov
jl
fists
jp
mov
sbb
mov
mov
sub
mov
jne
daa
negl
jo
mov
pushf
outsb
mov
jge
cs
push
jbe
loope
inc
sbb
xor
push
shrb
xchg
iret
pop
rol
repnz
repz
push
stos
daa
inc
adc
mov
pop
mull
add
jb
push
sbb
bound
out
cmp
xchg
adc
imul
mov
mov
dec
imul
pop
push
inc
adc
push
push
movsb
mov
sti
loop
jg
cli
inc
mov
shll
or
mov
jno
bound
int3
js
xchg
cmp
rcll
addr16
mov
hlt
outsb
push
adc
mov
stos
fs
out
out
or
enter
dec
mov
push
jmp
les
sbb
inc
enter
dec
xor
pop
jl
dec
mov
xchg
aaa
mov
adc
mov
jne
pop
shr
int
xor
push
and
insb
sbb
in
adc
insb
das
fistpll
sub
fnstcw
scas
mov
dec
pusha
pop
push
xchg
rolb
push
xchg
pop
fcomps
aaa
pop
dec
pop
inc
dec
inc
or
loop
sub
imul
aam
and
push
sub
in
ret
imul
mov
xchg
mov
sbbb
and
leave
xchg
sub
test
fsubrl
dec
dec
and
pop
sub
in
fistps
gs
pushw
mov
push
es
mov
cld
loop
fisubs
cwtl
int
mov
popaw
cmc
out
sti
jp
fistpl
inc
jo
mov
mov
pop
adc
pop
pmulhuw
aas
aaa
xchg
out
dec
and
rcrb
dec
out
imul
in
push
aaa
sti
lret
movsl
jp
lret
mov
in
sub
sbb
xchg
sbb
popa
inc
rcrl
in
jae
stc
fwait
out
jnp
sahf
mov
pop
test
push
push
xchg
ret
out
movsl
xor
ljmp
and
js
sbb
pop
adc
jae
ja
add
add
xlat
mov
push
dec
push
inc
adc
clc
sbb
jp
sub
insl
jnp
in
and
mov
lods
jae
xchg
mov
std
lcall
sbb
repnz
das
mov
mov
push
out
mov
in
fnstenv
mov
push
or
cmp
call
cwtl
ljmp
lret
int
push
out
mov
sti
lahf
std
popf
push
jo
sbb
insb
jb
imulb
lods
dec
clc
lods
ja
jb
clc
out
into
jne
nop
insb
jmp
cwtl
repz
mov
xchg
dec
loopne
fidivrs
es
cwtl
sbb
dec
ss
mov
pop
inc
xchg
jmp
pusha
and
or
pop
mov
cmpsb
popf
jo
xchg
jnp
je
sbb
orb
jne
test
arpl
add
xor
nop
inc
push
xchg
mov
call
dec
jl
jle
sbb
sub
xlat
mov
inc
cmp
adc
push
pop
sbb
hlt
loopne
mov
add
xor
mov
mov
pop
sbb
sbb
dec
mov
jmp
inc
and
das
or
add
jmp
sub
ja
ror
sub
push
sub
in
fwait
aas
sahf
xchg
jne
or
jnp
sub
sub
jge
push
fwait
scas
push
push
lock
aam
jae
aaa
insb
adc
add
imulb
fisubrs
sub
add
idivl
clc
mov
das
inc
inc
sub
loope
es
ljmp
jge
lods
lock
add
mov
jecxz
stos
inc
movsb
sub
dec
sbb
sub
pop
mov
out
test
out
mov
out
sub
pop
sbb
jae
sbb
push
dec
notl
arpl
cmpsb
xor
in
stos
mov
mov
xor
adc
fwait
push
ljmp
lds
sti
in
lcall
lea
scas
mov
shll
out
mov
stc
or
call
mov
popa
daa
aas
es
xchg
clc
jnp
xor
in
inc
jecxz
mov
pop
xor
pop
cmpsb
test
ds
and
jl
test
mov
je
dec
cmpsl
in
inc
mov
in
sbb
cmp
cmp
adc
sub
sub
push
inc
nop
mov
mov
popa
push
mov
pop
dec
imul
adc
imulb
push
inc
push
xlat
movsb
pushf
xlat
inc
mov
inc
das
dec
push
add
lods
inc
or
jae
orb
dec
mov
xchg
pop
sbb
pop
mov
out
push
out
sub
lock
push
into
nop
push
loop
rol
inc
js
sub
lcall
cmp
cld
call
mov
stos
and
out
adc
inc
jle
cmpsb
daa
loopne
in
shlb
rorb
leave
lret
xchg
insl
jb
mov
adc
daa
cs
adc
repnz
xchg
jns
lea
mov
insb
add
fbstp
adc
dec
mov
out
cmc
bound
pop
mov
xchg
cmp
dec
mov
mov
outsb
pop
mov
inc
xor
sbb
mov
jg
cwtl
divl
aam
xchg
pop
mov
pop
dec
push
loop
cmpsb
xchg
or
pop
fnstsw
std
mov
sbb
and
mov
outsb
negl
in
xor
pop
and
mov
orb
arpl
sbb
dec
insl
adc
or
fistl
fisttpl
xchg
dec
sbb
out
pop
cs
add
insb
pop
enter
shlb
ret
stos
adc
lds
mov
cmp
js
sbb
jge
mov
or
cmp
sarl
mov
mov
xchg
aas
mov
gs
ds
imul
mov
adc
and
xor
add
push
inc
rcr
mov
cmpb
xor
sbb
test
imul
mov
inc
mov
std
cmp
fmull
lret
mov
mov
imul
daa
dec
dec
lret
leave
add
xchg
mov
pusha
into
test
mov
stos
or
jg
shl
rol
test
mov
inc
mov
pop
pop
mov
sbb
test
mov
lock
or
imul
jae
mov
push
mov
pop
dec
push
imul
loope
pushf
imul
xchg
pop
add
adc
xchg
pop
stc
fisubrl
mov
cmpsl
nop
pop
mov
pusha
jnp
push
push
addr16
arpl
sbb
lret
cmp
ficompl
xchg
movsb
mov
inc
addr16
clc
push
sub
xchg
test
mov
add
or
cmp
pop
cmp
xchg
test
loop
outsb
mov
xchg
sbb
jge
stc
inc
stos
xor
mov
mov
sbb
js
xchg
nop
aas
pop
lods
mov
pop
movsl
cld
cmp
sbb
dec
mov
dec
enter
and
add
mov
fdivs
pop
push
dec
ret
mov
stos
pop
psubusb
out
insb
test
stos
and
dec
push
jne
out
cwtl
leave
stos
jg
mov
inc
sbb
movsb
xor
mov
xchg
jl
xchg
and
mov
mul
jns
dec
adc
inc
loope
fnstcw
int
and
outsb
fcoms
cmp
movsl
xchg
sbb
xor
pop
icebp
jmp
jnp
fldt
loopne
add
cmp
xor
fcmovnbe
pop
repnz
adc
jns
addb
mov
jo
es
pop
scas
aam
lea
sbb
sbb
cmovge
scas
mov
jle
test
test
add
xchg
movsb
mov
xor
sub
mov
cmp
mov
sub
or
call
mov
enter
cltd
shlb
scas
popf
dec
not
clc
arpl
test
lret
push
push
fistl
mov
xchg
pop
push
add
clc
sub
ss
not
dec
sarb
jg
adc
in
and
ds
iret
push
and
mov
stc
jo
push
sbb
dec
sahf
jnp
push
out
test
mov
cltd
mov
stos
jb
fdivrl
decl
into
add
insb
mov
adc
push
jae
fwait
popf
push
inc
ror
sub
or
pop
sbb
jmp
push
arpl
clc
push
mov
pop
xor
lea
xchg
sbb
neg
xchg
cwtl
or
inc
and
mov
sbb
sub
jnp
push
into
nop
dec
pop
aaa
jecxz,pn
adc
pop
sti
xor
xor
ja
cmp
popf
sub
xor
negb
leave
mov
je
mov
or
aaa
dec
pop
mov
adc
pop
jb
mov
push
push
adc
add
clc
data16
push
loope
pop
arpl
push
je
jne
sub
fwait
fwait
or
in
cmp
sub
movsl
xlat
cmpsl
add
or
adc
add
mov
idiv
mov
jl
lret
cmpsl
ror
fdivrl
dec
mov
mov
push
xchg
mov
fidivs
dec
and
stc
adc
cmc
mov
outsb
xchg
inc
push
jne
sub
xor
fildll
and
out
add
dec
xchg
push
push
jno
fwait
xchg
shrb
loop
hlt
call
xchg
leave
arpl
jp
dec
aam
mov
inc
dec
jmp
add
aad
das
push
jnp
dec
insb
popa
mov
or
pop
shll
scas
and
fmull
rclb
dec
dec
mov
mov
stos
lcall
or
xchg
mov
xchg
xchg
or
es
shlb
les
xchg
lcall
pop
push
mov
lods
xchg
je
push
jb
xor
fwait
cli
leave
xor
out
jb
jno
lea
mulb
dec
push
ret
call
sbb
or
push
repz
shll
sbb
mov
fisttpll
out
push
jecxz
dec
push
mov
pop
push
adc
leave
mov
dec
int3
cmc
lahf
lret
push
xchg
fisubrl
mov
cmpsb
mov
xchg
mov
xchg
mov
jle
hlt
jle
xchg
and
js
or
test
jecxz
fs
lods
and
gs
insb
addl
popa
lds
sbb
rcll
dec
enter
jg
push
mov
sbb
out
dec
lds
inc
aad
sbb
outsl
xchg
shll
jae
dec
lock
xchg
push
outsl
insl
leave
insb
jo
fiaddl
dec
inc
pop
in
lret
sub
lcall
and
jmp
adc
jge
aad
arpl
cmp
xor
stos
sub
mov
xor
cmp
fcomps
push
stos
xchg
cmc
movsl
or
aas
jmp
bound
adc
lahf
pushf
mov
xchg
stos
gs
insl
mov
popl
sbb
and
mov
mov
into
add
adc
mov
test
ficomps
loopne
aaa
stos
aaa
adc
lcall
pop
fmulp
test
sub
aas
shll
icebp
inc
mov
movsb
jl
cmp
sub
pop
rcll
je
ss
pop
dec
addb
negb
fisubrs
mov
ja
and
cmp
fwait
repnz
jle
sahf
and
push
dec
xchg
inc
pop
mov
and
adc
xchg
es
adc
test
inc
dec
frstor
ds
icebp
jnp
xlat
fnstcw
jmp
xchg
sbb
inc
test
out
int
mov
sub
lahf
mov
sbb
ror
int
inc
ja
lret
pop
sbb
leave
lret
test
inc
sub
mov
mov
jns
mov
push
mov
jbe
xchg
test
es
pop
add
outsb
sub
cld
repnz
sarl
xchg
push
outsl
stc
push
push
pop
xor
movsl
dec
sub
outsb
and
test
push
out
fsubrl
stos
loope
ss
inc
test
mov
not
cmp
ljmp
pop
mov
jb
jne
push
jbe
push
mulb
or
cmc
inc
das
xor
add
or
adcb
ss
repnz
ljmp
adc
inc
jl
push
lods
test
arpl
add
mov
jns
mov
jl
sahf
cwtl
stc
pxor
repnz
mov
jl
dec
sub
mov
cltd
test
mov
imul
jno
sbb
fwait
mov
aam
out
pop
pop
jg
int3
sahf
in
jp
popa
fst
ss
pop
popf
inc
hlt
dec
sub
and
ja
mov
icebp
xor
jl
and
jle
test
pop
movsb
inc
lods
xchg
jmp
jb
gs
in
mov
sbb
mov
sti
mov
inc
cmp
sbb
addr16
sbb
cmp
adc
jbe
push
or
dec
xchg
lods
or
into
aam
out
and
cmpsl
inc
addb
fwait
gs
pop
dec
or
cmpsb
jge
fcoms
mov
pop
push
imul
adc
mov
mov
mov
xor
outsl
ss
pop
or
xlat
or
xchg
out
jmp
and
xor
jle
sub
jne
aam
dec
test
jecxz
imul
jae
mov
cmpsb
jp
popa
inc
scas
add
stc
xor
push
out
jp
jge
mov
addr16
les
jae
cmpsb
sbb
fimuls
xor
push
dec
pop
inc
ljmp
dec
and
sbb
or
xchg
dec
daa
sbb
ljmp
jmp
ret
jno
dec
cmp
pop
repz
insb
adc
clc
mov
cmpsb
in
push
xchg
sub
sub
and
sub
cwtl
ret
repz
hlt
lret
sbb
nop
out
jne
sub
int3
js
aad
xchg
cld
adc
mov
arpl
sub
jp
popf
sbb
jecxz
mov
js
xchg
shrl
in
add
mov
mov
and
js
jp
lahf
sub
dec
stos
xchg
or
mov
cmp
jge
cmp
outsl
mov
adc
sub
sbb
sbb
inc
xchg
jg
cmpsb
daa
inc
mov
int
out
pop
out
imul
mov
mov
aad
cmp
inc
arpl
and
pop
jge
add
pop
xor
inc
add
cmc
cmpsb
mov
subb
and
fisubrl
jmp
mov
jae
sahf
loopne
mov
lahf
mov
scas
notl
je
bound
xlat
fnstenv
mov
and
mov
js
or
and
lods
fdivl
imul
jno
in
mov
enter
pop
aaa
out
push
js
shr
cmp
rcl
imul
fdiv
xchg
hlt
mov
cmpl
pop
xchg
mov
add
add
xor
out
std
test
dec
mov
inc
mov
jne
push
icebp
xchg
inc
add
mov
jg
xchg
lods
dec
fst
into
pop
push
in
adc
scas
les
xlat
or
jmp
in
lds
dec
loopne
pop
and
mov
push
out
out
add
imul
sub
je
aad
mov
subb
lods
add
out
and
push
pop
in
cmc
mov
jl
sti
pop
shrb
xlat
and
sbb
xchg
cmp
sub
push
cmp
pop
test
mov
in
mov
bound
arpl
add
sub
add
push
shrb
mov
inc
xchg
clc
cmpsb
movsb
fcompl
js
or
xchg
pusha
jecxz
fldcw
push
xchg
inc
xchg
out
outsb
lret
pop
adc
add
repnz
cli
dec
mov
push
dec
fnsave
fwait
sbbb
cmpsb
mov
pop
or
ss
xchg
jne
aas
js
mov
cs
push
das
shrb
loope
add
dec
imul
popf
cs
gs
mov
mov
push
lcall
or
dec
jne
inc
or
test
jne
pop
mov
lret
ja
mov
and
adc
push
pop
mov
test
inc
leave
push
cmp
pushf
icebp
and
in
inc
cmp
nop
rclb
dec
cmpsb
push
sub
addb
or
and
inc
mov
les
js
add
mov
test
pxor
inc
mov
mov
pop
sahf
popa
and
sbb
fimull
sbb
pop
test
mov
and
into
and
shrb
movsb
lods
outsl
adc
outsl
xchg
pop
leave
cmp
test
aaa
in
popa
or
dec
dec
neg
fcomi
or
or
test
mov
outsl
or
jne
sub
mov
mov
sahf
adc
jae
pop
je
add
inc
in
call
xchg
xor
add
cmp
or
out
or
inc
leave
cmp
jb
inc
xlat
mov
xchg
lcall
daa
daa
and
mov
sbb
jmp
lea
sahf
inc
mov
les
push
js
sub
sti
xor
je
out
popf
cld
inc
xor
or
in
jae
cmp
and
xchg
lret
inc
add
xchg
or
sub
scas
ret
xor
jmp
testl
hlt
dec
cmp
and
inc
mov
push
repnz
cmp
vpackuswb
or
not
aad
inc
shll
jg
mov
mov
adc
jne
mov
inc
sub
mov
rsm
cmp
add
xlat
cli
fdivrl
inc
mov
lea
cmp
mov
jnp
mov
and
mov
inc
sub
arpl
aaa
add
lods
cmc
lcall
jae
jl
xchg
inc
push
aad
mov
dec
movsl
and
cmp
loop
insl
push
cwtl
xchg
movsl
lret
jecxz
scas
bound
repnz
les
jmp
mov
outsb
pop
sub
out
imul
mov
je
cmp
push
popf
adc
cmc
jne
rol
stos
fiaddl
jecxz
lahf
inc
and
subb
xchg
les
add
dec
ljmp
data16
sbb
cmp
das
stos
sahf
dec
icebp
dec
pusha
push
inc
inc
fsubrs
mov
jg
pop
mov
negl
in
subb
js
mov
and
andl
popf
adc
push
ss
outsl
mov
stos
or
xchg
cmp
jns
jg
pusha
ja
cmp
mov
xlat
repnz
sub
lods
pusha
mov
adc
mov
pop
ja
hlt
cmpsl
nop
cmp
jae
sub
or
pop
jl
decl
repnz
leave
repnz
inc
cmp
sar
negl
icebp
sysret
lahf
and
xchg
add
push
xchg
ds
add
pop
inc
loopne
mov
data16
fadd
push
out
scas
insb
pop
push
sub
sub
test
into
pusha
scas
mov
outsl
sbb
jg
rol
add
rclb
lods
outsl
test
mov
push
mov
sbb
sti
adc
add
and
mov
push
jge
mov
imul
test
dec
jp
mov
loopne
and
dec
add
aam
or
fwait
dec
data16
inc
aas
or
xor
push
or
lods
jl
mov
lock
mov
jne
add
add
xchg
jae
pushl
insl
jmp
cmpsl
mov
test
test
fwait
in
cmc
cmp
insb
jb
leave
jl
fstl
push
mov
dec
adc
out
xchg
mov
jge
adcb
enter
out
fcmovnbe
mov
lds
repz
mov
rol
pop
cli
push
and
lea
cmp
out
fisubrs
xchg
int
mov
jp
mov
or
lret
pop
push
addr16
stc
dec
cmp
aad
in
xor
xchg
push
dec
dec
out
aad
inc
xchg
aas
popa
ficomps
pop
pop
dec
daa
bound
mov
sbb
les
mov
jge
mov
sub
mov
adc
pusha
xor
hlt
cmpsb
mov
pop
or
jp
andb
iret
xchg
stc
subl
fisubrl
popa
and
mov
sarb
movsb
push
mov
mov
test
loop
and
push
pusha
and
jle
add
cmp
popa
rsqrtps
cli
mov
mov
xor
or
cltd
je
xchg
cmp
push
add
pop
add
pusha
loope
adc
out
push
lahf
and
dec
xor
fcompl
fidivrl
cmpsl
ljmp
dec
fists
movsb
movsb
or
ds
jecxz
in
scas
sbb
mov
clc
jae
adc
and
stos
and
sub
es
xor
movsb
aam
loop
or
add
divl
iret
jmp
inc
adc
addb
inc
testb
and
es
leave
xchg
and
rcr
inc
lret
fbld
les
mov
into
lret
cld
xor
push
pusha
sbb
shrl
lahf
push
clc
cmp
mov
xchg
or
and
mov
in
mov
loopne
int
sub
or
cmp
inc
ljmp
and
push
call
pop
pop
mov
mov
jecxz
fldcw
jbe
out
push
cmpb
mov
or
pop
mov
int3
mov
pop
sub
pop
jnp
movb
and
mov
inc
or
cmp
or
xor
adc
mov
jmp
arpl
jns
mov
inc
aaa
fsubl
popf
xor
jae
mov
fstps
scas
cmpb
inc
out
aam
dec
into
andb
mov
sbb
sbb
fsubs
or
sbb
fs
jg
jns
cmpsl
sbb
je
xchg
inc
mov
dec
dec
scas
cmp
push
or
imul
push
test
mov
lods
fsubr
mov
not
ss
jmp
add
add
adc
sub
inc
cmpsb
shll
mov
insb
fistpll
mov
loop
les
pop
pop
out
cmp
nop
sub
adc
movsl
jb
insl
loopne
imul
les
scas
lcall
imul
mov
fcoms
loope
sub
leave
je
aam
dec
and
mov
push
dec
test
inc
daa
pop
sbb
mov
loopne
xchg
and
dec
es
repz
fsts
jl
mov
inc
xchg
xchg
mov
fwait
popa
push
jp
jmp
test
cmp
xchg
cmp
mov
pop
push
push
sbbl
cwtl
and
aas
cli
push
movsl
jb
fiadds
cmc
adcb
test
dec
test
xorl
fsubr
call
fcmovnb
call
aad
dec
jne
unpcklps
xchg
dec
mov
inc
cmpsl
cwtl
ja
enter
and
sarl
mov
mov
pop
xchg
stc
mov
jae
xchg
and
movsb
jnp
push
les
imul
test
lock
mov
dec
mov
ljmp
push
push
idivb
pop
jb
fdivs
push
insb
loop
scas
push
movsl
not
test
nop
sbb
popfw
daa
adc
and
insl
inc
mov
and
aaa
push
xor
and
mov
mov
roll
push
sub
fidivrl
inc
or
or
cmp
mov
ds
lcall
ja
out
xchg
sbb
inc
insb
fs
xchg
int3
pop
pusha
jb
cmp
fstl
lds
mov
lea
mov
std
stc
shr
int3
inc
jp
sbb
jle
cli
test
mov
add
movsb
jp
push
xor
lods
cwtl
push
and
sahf
and
pop
std
pavgb
lret
call
pop
jne
sbbl
mov
test
aam
movsb
aad
mov
adc
loopne
mov
mov
ss
pusha
nopl
push
mov
fistpl
push
inc
scas
jbe
movsb
mov
push
sbb
adc
xchg
sti
push
fisubs
xor
clc
fiaddl
pop
sbbl
in
shlb
xchg
ds
jmp
and
lcall
in
inc
lcall
xchg
out
jl
jns
lret
lock
paddusb
mov
es
dec
pop
test
dec
imul
sub
mov
cmp
outsl
in
flds
cltd
pop
xlat
pop
pop
sub
jno
sbb
and
sti
sarl
daa
std
or
iret
outsb
push
stos
popf
hlt
lock
cmp
imul
jp
xorb
dec
negb
jne
adc
pop
lods
push
fisubrl
repz
or
fwait
mov
inc
gs
mov
int3
out
mov
mov
aam
pop
loope
test
ja
xchg
dec
mov
daa
popf
xor
ja
xor
dec
or
ror
inc
and
xor
jo
cmp
ret
mov
enter
int
and
insb
test
adc
push
cmpsl
in
mov
xchg
xchg
pusha
aad
inc
pop
mov
pop
lahf
xchg
xchg
hlt
sbbl
sbb
lds
mov
and
cld
out
or
lahf
ret
push
test
push
cmp
cltd
adc
stc
ror
cltd
orl
mov
rdmsr
push
xchg
push
adc
testb
addr16
clc
cmp
jno
sbb
dec
xchg
mov
xor
pop
push
sahf
testl
into
push
push
sub
xchg
pop
mov
scas
sub
aaa
sbb
ret
es
rcrl
ljmp
xchg
xor
stc
and
fisubs
lods
jle
jo
mov
jo
xchg
lock
loop
inc
bound
push
ljmp
mov
sar
add
fbstp
shll
jmp
jge
push
cltd
cmp
in
pop
add
ret
test
fsubs
aas
fs
mov
lds
mov
repnz
fstl
jae
loopne
div
out
repz
stos
std
stos
push
cwtl
xchg
dec
xchg
pushf
arpl
pop
into
lods
scas
sub
xor
cmpb
push
mov
hlt
jo
mov
ja
sub
fstps
leave
dec
mov
shr
mov
xchg
bound
icebp
push
cmp
fnstcw
cmc
push
cmp
loop
mov
xchg
notl
or
sbbb
stos
sbb
jbe
lret
pop
dec
mov
stos
sub
clc
data16
lret
out
outsb
mov
jmp
mov
dec
fbld
pop
inc
pop
stos
mov
repz
inc
addr16
cmp
imull
add
xor
shr
fmull
xor
data16
xchg
inc
movsb
jl
xchg
out
imul
mov
cmp
jg
and
cld
push
xor
nop
jmp
scas
in
ja
or
ljmp
push
mov
fsubrs
jp
dec
inc
loop
cltd
repz
dec
xchg
and
sbb
cmc
shrb
sbb
out
and
xchg
dec
xor
cs
insl
mov
jo
or
sub
ds
pop
vsubps
ljmp
popf
push
mov
stos
push
and
cmpsb
sti
pop
test
mov
lcall
aad
nop
cmpl
loope
or
pop
rorb
insl
cs
test
cmp
popf
adc
sub
dec
push
imul
xchg
fcom
lahf
rcrb
repz
jo
push
adc
push
xor
sbb
aaa
lcall
xorl
mov
mov
xor
mov
jg
dec
jbe
das
in
in
push
subb
cmpsl
xor
push
imul
imul
inc
mov
mov
jbe
test
imul
mov
add
add
pop
mov
xor
and
push
jbe
out
and
sti
adc
xchg
test
and
cwtl
jne
jbe
es
mov
inc
das
clc
stc
pop
loop
mov
in
or
push
cs
xor
cwtl
mov
cmp
mov
jg
mov
cltd
scas
popf
icebp
in
push
ljmp
nop
gs
aas
cmp
adc
xchg
sbb
add
das
orb
jl
pop
mov
push
adc
push
lods
mov
cld
and
notb
sbb
popf
fwait
mov
xchg
pop
sub
dec
pop
imul
lods
xchg
mov
xchg
mov
ljmp
xor
mov
inc
pop
lock
xor
jmp
or
or
shrl
cmp
ret
add
push
add
xchg
scas
mov
mov
push
aam
xor
adc
loopne
jp
cwtl
icebp
xor
je
pop
sahf
pop
pop
arpl
jge
lahf
pop
dec
adc
or
fidivrs
aad
dec
rolb
mov
orl
sub
xlat
or
xor
sub
negl
or
fldt
inc
clc
subb
enter
ljmp
or
jae
sbb
rcr
scas
shrb
jmp
sbb
scas
mov
iret
push
cmp
pop
mov
in
push
pop
into
hlt
stos
shlb
cmpsb
pop
jns
and
and
xchg
or
mov
mov
cmpb
test
sbb
out
lret
or
shr
arpl
inc
scas
in
outsl
int3
test
icebp
xor
mov
inc
nop
dec
pop
or
mov
lods
inc
mov
cmp
adc
sub
cmp
test
cld
add
ds
je
lods
push
jp
push
fldt
xchg
inc
sbbb
rcrb
and
push
cmpsl
xor
aam
mov
mov
loopne
inc
and
sbbl
fidivrl
push
sbb
add
sub
adc
icebp
js
mull
push
mov
cmp
out
mov
fisttpl
mov
out
leave
push
cmp
das
xchg
sarb
sbb
mov
push
push
pop
gs
bound
adc
ss
in
push
cmc
jns
mov
dec
mov
enter
lds
repnz
aas
dec
aaa
andb
mov
fsubr
mov
bound
or
push
test
xorl
xor
and
pop
hlt
dec
or
enter
dec
xor
xsave
fisubrl
inc
rep
out
xchg
push
and
xor
lcall
mov
inc
mov
pop
mov
stos
ss
aad
imul
je
pop
movsb
cmpsl
pop
gs
push
cmpsb
aam
mov
adc
cmpsb
lock
pop
add
movsb
roll
sbb
push
adc
sbb
cmp
stc
ret
dec
sbb
adc
imul
mov
in
inc
mov
movsl
push
in
add
aas
mov
or
xor
sbb
loop
test
pop
mov
xchg
int3
into
fucompp
addr16
mov
sbb
jo
sbb
push
mov
cmpb
jg
pop
hlt
sub
repz
cmp
inc
out
cmp
pop
pop
aad
pop
pop
test
loope
add
push
outsb
add
jge
stos
or
leave
int
push
adc
inc
in
popf
nop
push
xchg
pop
sbb
mov
jecxz
inc
or
cmp
js
xor
sbb
popl
mov
ret
int
or
sbb
cmpsb
cli
push
adc
loope
enter
imul
fs
fcmove
js
movsl
push
add
mov
and
popa
mov
in
mov
cmp
adc
movsl
insb
out
add
out
cmp
sub
stc
cmpl
nop
icebp
pop
testb
adc
sub
popa
ljmp
dec
cmp
push
dec
add
js
add
mov
inc
inc
ljmp
or
loop
scas
sub
adc
sub
mov
jmp
sbb
test
daa
mov
jmp
push
outsb
ficomps
shl
dec
lret
jmp
sbb
outsl
repz
inc
cltd
je
pusha
xchg
adc
sub
inc
and
jl
cmpb
or
hlt
dec
aaa
ss
and
pop
xlat
inc
clc
adc
push
pop
mov
xchg
repz
sub
or
xchg
lods
mov
jmp
mov
or
xchg
dec
mov
mov
ja
sub
cmp
lcall
or
xchg
push
xor
xor
cs
xchg
mov
sbb
xor
or
jmp
jge
cmpsl
mov
sbb
add
sti
adc
les
in
call
push
sti
push
gs
imul
push
and
sbb
aad
adc
sbb
mov
ret
xchg
inc
fwait
xchg
repz
or
dec
out
and
sti
sub
das
insl
cmp
add
stos
fnstenv
xchg
mov
cmp
pusha
mov
push
test
mov
out
mov
jnp
jecxz
shl
push
add
outsb
dec
out
push
dec
orl
es
sub
dec
int
push
loope
mov
dec
std
loopne
das
jmp
mov
and
push
or
stc
call
in
mov
xchg
mov
repz
and
sub
mov
add
add
inc
add
sub
lcall
in
scas
and
pusha
push
xor
js
xor
and
jbe
cld
push
xchg
add
inc
jo
shr
nop
popf
pop
lahf
xor
dec
inc
xor
xchg
rcl
mov
adc
mov
jne
mov
imul
jo
xor
nop
repz
pop
jl
nop
add
jo
push
push
sbb
lahf
xlat
adc
pop
movsb
adc
jb
xor
and
bt
xor
loop
xor
cli
stos
cmp
or
mov
and
mov
dec
pop
xor
imul
adc
bnd
adc
test
mov
pop
mov
orb
jg
sub
insb
xorl
jbe
dec
bound
mov
add
sti
xlat
out
outsl
mov
hlt
arpl
jg
xor
adcb
dec
add
rol
dec
mov
mov
adc
rclb
xchg
outsb
inc
mov
js
fdiv
cmp
int
lahf
popa
shl
push
sub
repz
in
jo
ljmp
insl
cltd
out
fistpl
fld
test
or
insl
cwtl
jmp
cmp
push
lods
dec
mov
jae
cmpsl
mov
push
repz
add
add
mov
movsb
pop
inc
in
sub
fsubrs
testl
cmpsb
jecxz
fld
shlb
movl
icebp
pop
sbb
or
je
mov
push
mov
sub
adc
inc
and
push
je
dec
sbb
lods
and
pushf
imul
dec
dec
out
lds
jp
inc
and
and
xor
cmp
pop
push
movl
movsl
hlt
inc
dec
dec
cwtl
in
xchg
xchg
data16
add
or
and
scas
into
jno
ljmp
sarb
in
jp
mov
jns
xor
enter
and
testl
and
inc
xor
rorl
cmp
jmp
dec
je
push
jge
sub
lods
push
pushf
ss
pop
xlat
mov
mov
pop
push
popa
mov
mov
and
pop
dec
or
aas
int
loope
loop
test
push
or
vmovups
xchg
jo
fmull
mov
mov
aaa
cmp
in
mov
call
mov
out
inc
xor
int3
inc
dec
repz
pop
mov
ljmp
test
push
sarl
xchg
loop
inc
aas
out
and
outsl
or
sub
lods
stos
in
dec
jns
test
fwait
jae
cmp
push
jne
xor
and
out
push
shll
or
sub
cli
mov
cmp
or
push
sbb
dec
mov
je
lea
imul
mov
dec
lea
cld
inc
repz
sbb
lock
cmc
and
xchg
ret
bnd
js
lahf
dec
sub
shll
out
adc
mov
clc
mov
push
lods
inc
movb
test
mov
add
xchg
sbb
je
push
push
push
cli
daa
dec
push
into
push
orl
xchg
pop
mov
xchg
fisubs
adc
mov
stos
aas
in
mov
repz
adc
test
jne
inc
pusha
addl
ret
mov
mov
mov
ss
ja
mov
ret
in
insb
int
int
sbb
lds
cld
ds
call
mov
adc
lds
cmp
adc
nop
jle
cmp
in
jbe
and
mov
mov
push
sti
mov
mov
cmp
stos
dec
xlat
xor
jae
lret
mov
lods
sbb
jae
cld
dec
pop
leave
movb
dec
mov
cmp
cmpsl
test
xorl
sbb
sub
fildll
mov
out
xchg
push
ror
sub
pushf
xchg
xchg
or
mov
dec
ret
push
test
dec
in
in
adc
imul
lahf
jno
xchg
sub
or
test
pop
fistpl
xchg
jle
jnp
or
pop
lea
shlb
ret
mov
mov
ret
mov
lahf
shlb
hlt
cwtl
iret
cltd
out
xor
pop
shll
push
rolb
jne
sub
push
adc
mov
call
les
in
dec
dec
sbb
xor
push
mov
shrb
push
push
sbb
sub
adc
lea
ss
in
das
es
iret
loope
xchg
test
repnz
movl
arpl
push
jnp
cmp
jbe
mov
test
sub
bound
jo
xchg
inc
jecxz
mov
or
aas
adcl
subl
rcll
xor
cmp
push
push
out
cmp
push
pusha
sub
aam
push
insb
pop
fucomi
in
and
xchg
fwait
pop
xor
fstps
pusha
add
sbb
jmp
cmp
mov
pop
fs
outsb
ror
fs
mov
shrb
add
inc
xchg
or
push
rcrl
shl
mov
pop
xor
mov
add
or
mov
mov
fistl
and
cmp
push
rcll
std
loope
xor
scas
aam
push
mov
outsb
dec
mov
or
pop
sub
outsb
push
mov
inc
insl
mov
dec
dec
cwtl
inc
add
ds
pop
cmc
mov
mov
nop
sbb
mov
inc
shlb
jecxz
cltd
xor
sbb
movsl
test
out
in
fwait
push
lods
bound
jecxz
dec
push
and
mov
outsl
inc
inc
fadds
sahf
out
rcr
sub
dec
pop
cmp
mov
pop
rorb
aaa
inc
int3
arpl
xor
or
addl
push
pop
fs
bound
ss
into
std
mov
mov
and
test
and
gs
mov
stc
orb
mov
sbb
inc
popf
scas
loope
mov
pushf
mov
sbb
movsl
pop
mov
aaa
xchg
test
xor
dec
cmpsl
ljmp
adc
add
test
cld
insb
jno
mov
cmp
xlat
pop
movsb
push
js
sub
cmpsl
std
mov
repnz
inc
loopne
loopne
ja
dec
xchg
ds
and
lret
stos
mov
je
push
mov
ret
loopne
fsubrl
out
xchg
cld
add
pop
das
mov
xor
fs
cmp
sub
test
lea
add
push
dec
or
and
adc
dec
push
adc
add
push
cs
loope
fimull
xchg
mov
sbb
add
cmpsl
push
test
jg
fdivrs
mov
sbb
and
push
pop
cmp
mov
fstl
lods
test
jb
push
mov
pop
imul
push
aaa
adc
fcmovu
jno
mov
or
jbe
push
sbb
cmc
xor
ret
mov
add
cmp
adc
or
push
add
cmp
and
stos
in
sub
sub
and
test
out
test
in
mov
popa
movsl
outsl
stos
das
aaa
pop
jle
std
sbb
test
and
aam
fs
push
cs
out
inc
lea
in
mov
sbbl
xor
xor
das
por
cmc
jo
mov
dec
inc
enter
fwait
imul
adc
mov
es
xchg
lods
sbb
fs
inc
jnp
pusha
popf
in
pop
pop
cmpsb
test
hlt
jp
pop
sarl
push
sub
cltd
add
into
sbb
testl
or
sbb
or
adc
inc
inc
out
or
pop
pop
mov
inc
lods
jecxz
int
test
mov
xchg
cld
jns
jbe
mov
test
or
into
adcb
xor
add
adc
dec
sub
lret
pop
jbe
std
scas
mov
jecxz
adc
sbb
int3
fisttpll
andb
shlb
and
andl
mov
adc
mov
popa
pop
dec
mov
pushl
xor
xor
mov
orb
push
cltd
into
int
adc
cmpsb
clc
jb
mov
mov
gs
in
fsub
jo
insl
push
mov
aas
les
and
fcmovnb
jns
fld
data16
shrl
push
js
or
je
push
xchg
mov
push
insb
in
push
add
das
xchg
mov
inc
mov
ret
in
add
mov
or
scas
mov
out
ret
fldcw
adc
jge
push
dec
movsl
xor
ja
aas
cmpsl
lret
bound
in
inc
push
js
mov
out
push
lahf
movlps
incb
pop
pop
bound
sbb
pop
ds
and
jne
and
cmp
fnsave
fildll
and
ds
in
fiadds
xor
pop
jnp,pt
inc
scas
mov
jns
add
inc
lds
mov
pop
mov
jbe
xchg
test
int
out
fildl
push
push
cs
cld
stc
sarl
scas
scas
movsl
cmovo
xchg
fildll
xor
dec
mov
loope
push
push
icebp
jo
sbb
push
dec
jbe
and
ret
dec
adc
mul
xchg
orl
loope
repz
xchg
pop
pop
mov
nop
mov
scas
mov
mov
jmp
lds
inc
push
mov
fs
mov
dec
outsb
mov
shll
or
lods
xor
sub
adc
or
mov
repz
ret
daa
mov
sahf
sbbl
rol
rcrb
lock
inc
or
enter
adc
adc
test
add
cltd
lahf
xorb
js
xor
cmp
je
orb
push
and
mov
and
js
cld
out
nop
and
cwtl
es
push
xor
aam
lret
cmpsl
mov
pushf
push
mov
test
repnz
dec
out
addr16
dec
icebp
xchg
daa
adc
fimuls
mov
adc
pop
imul
jle
mov
lods
test
xchg
and
push
dec
mov
jecxz
jle
jns
scas
fisttpl
ljmp
scas
inc
sbb
aam
dec
cmpsb
or
push
mov
cld
adc
movb
shrl
rorl
aaa
xorb
jecxz
cmp
mov
inc
nop
fisttpll
mov
pop
mov
inc
sbb
adc
sbb
mov
popa
ficomps
push
mov
inc
add
push
imul
pop
les
jp
in
push
fsubr
xor
mov
jno
shl
and
stc
les
loopne
ficoml
nop
loope
adc
lds
xchg
xor
mov
out
mov
jp
insl
pop
lret
pusha
and
inc
test
lds
xchg
jo
fldt
scas
dec
inc
dec
inc
jno
fists
repz
adc
iret
inc
dec
mov
dec
outsb
jno
sbb
mov
jecxz
mov
inc
push
hlt
mov
nop
jne
sti
and
or
mov
inc
and
xchg
dec
fsts
sbb
in
inc
mov
nop
lods
jno
sbb
and
push
mov
cmpsl
lods
or
repnz
ss
in
shlb
inc
mov
mov
ret
sbb
xchg
or
or
outsl
and
jle
dec
lods
aaa
incb
push
cltd
cmp
popa
cmp
mov
aam
adc
out
xchg
inc
add
fstpt
int
cmp
sbb
mov
lret
adc
mov
jl
xor
or
shlb
pop
out
xchg
fucomi
jne
mov
lret
push
fadds
bound
add
cmp
in
imul
lcall
ror
das
sahf
sti
push
mov
pop
sarl
xor
cs
push
push
push
js
popa
xchg
popl
cmp
lds
and
fcoms
sbb
and
add
dec
mov
into
jno
cltd
test
jne
mov
test
cmc
cmp
and
cs
or
aaa
js
dec
add
in
xchg
pusha
push
add
and
bound
in
push
lds
pushl
add
mov
arpl
push
aad
jnp
nop
jb
pop
fmuls
sub
icebp
fstl
jae
xchg
sbb
push
push
pop
daa
add
push
repnz
imul
mov
mov
les
in
rcrb
dec
punpckldq
sbb
mov
cmp
mov
mov
inc
jns
mov
lea
fdivl
xor
out
mov
push
cmp
adc
cwtl
xor
mov
lock
test
xchg
add
cmp
icebp
push
add
dec
insl
jb
ds
dec
inc
sahf
loopne
jecxz
sub
inc
mov
sti
dec
cmp
xchg
cmp
out
call
fmull
jae
stos
lahf
mov
in
pop
xor
and
xor
adcl
das
inc
fmuls
push
and
out
mov
and
imul
pop
sar
lcall
sub
je
lret
lods
mov
cmpsl
mov
adc
enter
ret
test
pop
dec
out
fdivrl
dec
jae
sub
mov
fdivrl
push
inc
sub
andb
movsb
sbb
inc
jg,pt
fwait
jmp
xchg
xchg
ja
into
adc
pushl
loop
adc
arpl
mov
xor
cmc
sub
orb
sbb
shrb
mov
arpl
rcll
pop
sub
daa
cmpsl
iret
test
leave
rolb
dec
mov
cltd
lret
inc
les
pushf
and
stos
mov
pop
xor
pop
hlt
dec
push
jecxz
push
testb
aaa
mov
sti
jl
adcl
inc
mov
rolb
mov
cli
inc
fimull
and
and
cwtl
lahf
cmpl
sti
adc
pop
cmp
test
push
lcall
lods
cmpl
cmpsl
out
push
in
xorb
adc
cmp
jl
scas
or
and
mov
ja
mov
or
popf
pop
cmpsl
loope
stos
test
sarl
pop
icebp
cmp
pop
push
cmpsl
mov
add
adc
sub
or
add
and
pop
mov
inc
cmc
mov
imul
test
and
add
mov
ljmp
lods
and
imul
repnz
lret
xor
inc
jne
inc
loope
mov
nop
mov
or
sbb
fcomps
sub
inc
mov
mov
out
lock
sarb
into
sahf
in
loope
std
dec
mov
push
sbb
scas
adcl
in
add
pminsw
sub
dec
mulb
adc
in
rcl
jno
mov
cmp
jl
xlat
jg
mov
rcl
je
mov
xorl
mov
jge
xorl
leave
ss
or
add
pop
aad
popa
xor
inc
lods
mov
pop
inc
fwait
adc
out
jl
inc
cwtl
fadds
sbb
negb
jecxz
jg
jbe
add
jecxz
xor
pop
repz
das
xchg
cmp
ljmp
js
push
fcompl
push
push
inc
sbb
arpl
imul
call
in
data16
mov
mov
mov
jp
popa
popf
adc
sub
dec
mov
mov
sti
push
ljmp
cmp
jg
lock
in
imul
shll
mov
mov
dec
lods
je
mov
xchg
and
pop
pushf
out
mov
cmp
movsl
push
dec
lods
sbb
cld
movsb
or
adc
sub
xchg
insb
sbb
push
mov
inc
jne
xor
sti
leave
std
and
or
les
add
loope
mov
add
ljmp
and
orl
repnz
mov
test
outsb
sub
sbb
nop
data16
movsb
notl
mov
sub
dec
lahf
test
and
sub
xchg
addr16
cli
stos
insb
mov
out
sub
ret
xor
mov
lret
adc
sbb
outsb
fadds
add
leave
insl
aam
lods
mov
mov
xchg
shrb
cmc
rorl
lods
jge
xchg
notb
and
and
fldenv
jo
cmp
mov
popa
xor
adc
fildll
mov
lock
sub
jmp
orb
xorl
pop
std
lahf
mov
aam
mov
inc
mov
jle
mov
pop
lea
add
sub
jmp
xchg
mov
arpl
int3
fnstcw
or
out
push
sbb
in
movsl
jmp
movsb
pop
xor
lds
fsubs
mov
or
cmp
and
fistps
pop
push
push
loope
jmp
mov
lahf
adc
repz
mov
xlat
xchg
push
cmpsb
inc
add
ret
icebp
push
cmp
mov
mov
test
mov
icebp
bound
jb
jno
fists
outsl
aam
add
daa
enter
push
jl
pop
xor
imul
push
inc
insl
adc
aad
pop
pop
iret
int3
fstpl
sbb
mov
or
mov
cmp
das
pusha
dec
aad
cwtl
xchg
cmp
pop
ljmp
mov
cltd
or
lods
cltd
mov
movsl
nop
sub
add
orl
jg
lock
mov
out
cmpsl
pop
inc
inc
sub
nop
xchg
pop
pop
mov
inc
sbb
into
pop
push
insb
out
inc
sub
pop
pusha
and
stos
mov
popa
in
repz
adc
push
out
push
dec
dec
lcall
popfw
pop
mov
adc
mov
sbb
faddl
aam
cmp
outsl
movsl
xchg
mov
lock
mov
mov
cmpsb
sti
imul
mov
mov
inc
aad
imul
mov
mov
push
dec
popa
jb
cmp
adc
mov
add
int
cmp
ja
icebp
xchg
mov
inc
add
add
push
xchg
mov
adc
leave
loope
pop
cmpsl
mov
shll
push
lods
add
faddp
dec
mov
dec
cli
inc
mov
xor
jno
imull
sub
cmp
rolb
lods
test
lds
out
arpl
movsb
lods
test
cmc
pushf
nop
cmp
iret
cmp
xchg
test
lea
imul
mov
jno
es
out
jae
test
stos
mov
pop
adc
or
jmp
push
insl
xchg
and
shll
fcoms
sar
xor
fsubs
push
lods
pop
scas
mov
jae
and
js
cmc
out
push
inc
addr16
inc
cmp
pop
mov
push
xchg
dec
push
sbb
mov
push
std
mov
cmpsb
imul
or
adc
or
cli
adc
repz
sub
sub
outsl
shll
xchg
jo
jo
inc
and
mov
adc
rcl
unpcklps
rcll
xchg
and
pushf
push
movsl
mov
and
icebp
or
int
dec
push
cmp
fsubrs
push
jecxz
mov
inc
sarb
arpl
fwait
jo
add
pusha
xchg
test
inc
into
mov
pop
hlt
or
or
cltd
or
into
out
xchg
stos
cmpl
dec
das
hlt
cmp
mov
outsb
jne
out
sbb
into
cmp
xchg
pop
xchg
jecxz
mov
mov
popf
inc
fcmovb
and
add
lcall
stc
lret
pop
jo
shlb
pop
pop
outsb
sub
out
hlt
outsl
lods
ds
cmpsl
inc
scas
andb
rorb
test
fcomp
inc
adc
adc
jmp
xor
into
in
mov
or
incb
rcrb
pop
arpl
rcrl
imul
inc
roll
subl
pop
inc
mov
lret
sbb
jno
test
adc
jge
sarb
leave
mov
jg
imul
fbld
or
call
in
lea
dec
or
decl
imul
cld
ds
pusha
fcmovnu
imul
sti
cmp
xchg
pop
aam
rcrb
mov
in
repz
aad
pop
test
mov
test
xor
push
rcrl
test
push
add
insb
xchg
inc
or
sub
jl
and
mov
mov
sti
lret
popf
cmp
rorl
push
jp
shl
cmpl
dec
push
sbb
or
repz
and
mov
pop
dec
sub
outsl
in
jb
push
jo
lods
mov
lea
ljmp
pop
subl
movsl
add
pop
clc
adc
mov
mov
outsb
mov
push
jo
je
ds
gs
fdivs
mov
xor
inc
cmp
jbe
mov
and
imul
daa
ja
inc
dec
push
xchg
dec
leave
jae
or
jb
fs
mov
pop
into
test
mov
pop
insl
xor
lcall
js
cwtl
pushf
mov
fwait
cmpl
shll
insb
inc
jno
cmpsl
or
push
shll
fidivrl
fsqrt
and
jecxz
xchg
dec
out
sbb
adc
fistl
aas
pop
xlat
loopne
lret
cmc
add
mov
add
push
dec
je
lret
jle
or
std
jecxz
jge
mov
sbbb
xchg
fisubrl
out
arpl
outsb
test
sbb
jae
pop
fisttps
lock
mov
xchg
sti
sbbb
movsb
dec
dec
xlat
mov
lret
or
or
andl
or
sub
push
and
scas
sub
aaa
or
stos
orl
adc
decb
rcr
mov
xchg
dec
inc
sbb
mov
popf
or
cmp
sub
add
cmp
mov
mov
shl
pop
aad
lock
push
roll
adc
call
jbe
mov
adc
popa
or
add
pop
mov
jb
dec
xlat
cmp
dec
fcmovne
and
addr16
nop
mov
fs
stos
jmp
shll
push
xchg
pop
mov
xchg
ficompl
insl
mov
sbb
sahf
pop
mov
std
adc
iret
dec
add
mov
call
vaddsubps
hlt
mov
xchg
xchg
inc
xchg
rcrb
daa
or
movsl
mov
mov
test
pop
fst
cmpsl
pop
cli
push
push
dec
jge
imul
test
inc
movsb
mov
mov
int3
daa
pop
xor
out
push
lret
leave
jno
xor
sub
lds
dec
push
repnz
imul
dec
cmp
sub
add
shlb
daa
add
sarl
xchg
pop
fcoms
mov
jl
add
repnz
mov
cmp
into
popf
and
xor
iret
mov
repz
sub
push
clc
or
mov
mov
into
add
imull
dec
loopne
add
adc
push
sub
mov
shll
inc
push
cs
pop
inc
jmp
mov
mov
idivb
push
lret
sti
add
stos
add
mov
xor
cld
or
fs
inc
or
fwait
jne
adc
loop
inc
adc
pop
sbb
mov
in
xlat
int
pop
sbb
cmpsb
insb
cmpsb
pop
jbe
push
lods
sbb
push
and
mov
xor
lods
mov
fimull
dec
out
int
pop
xchg
sbb
jp
dec
inc
cmpsl
lods
jp
nop
xchg
inc
mov
out
push
je
repnz
mov
dec
ret
jmp
sub
xchg
add
dec
mov
gs
push
or
cmpsb
rorl
xchg
push
movsl
inc
inc
fstpt
icebp
fstpl
pop
xor
jne
sahf
mov
test
fildl
push
mov
mov
push
cld
and
inc
mov
cmp
inc
pop
cmc
fisubrs
push
jle
fnstenv
in
sbb
mov
xchg
test
popa
fimuls
inc
push
pusha
rclb
sub
xchg
mov
mov
mov
mov
jl
test
into
push
cwtl
movsb
mov
adc
dec
mov
je
rcr
jno
lret
inc
fisttps
mov
aam
xchg
adc
jnp
shrl
ljmp
sahf
jmp
jne
xchg
dec
xor
sub
icebp
sbb
cli
mov
iret
out
out
dec
jnp
stos
aas
mov
pop
pop
nop
icebp
cs
dec
repnz
sub
adc
orb
lods
lods
cmp
cmp
lea
adc
cli
loopne
adc
sub
mov
sub
pusha
aad
stos
sub
lock
test
adc
scas
mov
rcr
aad
add
stos
sbb
mov
pop
add
and
cmp
mov
sti
lds
dec
and
lods
xchg
push
pop
sbb
push
insl
xchg
pop
jmp
or
ss
cmc
pusha
mull
push
loop
mov
das
or
popa
loopne
jge
inc
push
adc
push
dec
adc
outsl
and
mov
je
shlb
shl
dec
je
pop
pop
jmp
xchg
loopne
incb
imul
cmp
ret
in
out
test
add
mov
out
sub
mov
sbb
ror
mov
push
mov
inc
dec
jnp
jns
fwait
sub
rorb
mov
scas
idivb
xchg
push
lods
gs
jo
movsb
and
shl
fisttpll
notb
xchg
stos
pop
lods
dec
fstpt
in
in
into
xchg
andb
mov
repnz
push
adc
pushf
adc
mov
movsb
arpl
cmp
out
mov
push
int
push
jae
sbb
adc
fbstp
test
pop
das
aas
jmp
or
or
pop
mov
xchg
cltd
leave
inc
cli
cli
imul
jl
sub
das
mov
leave
jge
repnz
mov
mov
lea
inc
push
jnp
pop
lods
dec
stos
xor
jmp
push
inc
adc
std
scas
dec
in
push
inc
imul
fcomi
adc
fldt
repz
mov
push
std
stc
cmp
dec
adc
leave
push
out
fdivrs
xchg
arpl
cmpsl
and
mov
mov
daa
adc
scas
push
sub
pop
call
xchg
push
loope
jg
cmp
xor
test
cmp
push
clc
push
mov
push
lret
jbe
and
out
push
push
pop
jmp
add
iretw
dec
mov
sbb
add
mov
pop
scas
roll
scas
insl
push
stos
in
test
xchg
jns
pop
dec
adc
jbe
jg
jns
and
out
outsl
sub
push
ret
imul
fsubl
lea
push
pop
in
cmp
xor
mov
jecxz
or
into
adc
mov
jbe
and
dec
mov
or
or
int3
pushf
ljmp
adc
lret
fnstsw
pop
inc
jecxz
test
jo
scas
test
pmaxub
adc
and
call
shlb
in
push
pop
push
xlat
jecxz
inc
mov
cmpsb
mov
mov
imul
in
xor
outsb
mov
sub
mov
gs
pop
lock
dec
movsl
cmp
insb
popf
pop
lods
jo
fsubrs
jo
sbb
jo
repnz
xchg
pop
xor
fstpt
mov
mov
mov
xchg
popa
repnz
push
xor
sub
xchg
jmp
clc
jmp
push
adc
xchg
xchg
dec
out
lods
or
and
push
decb
push
add
rcrb
xor
jle
sub
jae
in
scas
or
test
add
and
mov
enter
xor
inc
int3
stos
jmp
movsl
mov
dec
push
jb
sbb
cltd
mov
jp
data16
lods
xor
fistl
push
test
roll
cmpsl
mov
fsubs
mov
leave
inc
xchg
xchg
sahf
jl
xor
mov
in
jmp
cmp
mov
dec
lods
lahf
mov
jl
fdivs
stc
and
or
decb
and
pushf
adc
sbb
aam
inc
lds
xchg
das
hlt
cmp
or
jb
push
mov
mov
inc
mov
mov
and
add
stos
or
ja
lods
push
lea
ret
jp
lock
std
scas
lds
cmp
cmp
dec
out
test
mov
mov
cwtl
mov
mov
push
xor
scas
mov
mov
push
cmpsb
faddl
sub
mov
out
bound
aam
mov
jnp
sub
cltd
dec
outsl
xchg
and
push
out
dec
popa
sub
popf
xor
mov
aam
xor
scas
hlt
jne
out
fcoms
sarl
mov
dec
cwtl
punpcklwd
jg
fistl
pop
jmp
ljmp
scas
jg
inc
mov
les
mov
test
cmpsb
push
push
and
mov
and
mov
lcall
pop
sbb
ret
xchg
cs
add
ljmp
dec
or
or
xchg
fbstp
xchg
and
or
icebp
adc
and
lds
or
jl
hlt
pop
adc
mov
mov
cmp
hlt
sahf
push
push
push
inc
jmp
mov
fwait
fs
scas
cmp
pusha
cmp
leave
push
sub
pop
les
fs
shlb
push
xor
dec
sub
or
push
push
cmp
and
sbb
clc
lret
and
insl
lods
fildl
inc
gs
jmp
adc
dec
lret
sbb
or
mov
mov
inc
pop
cmp
mov
ja
leave
mov
js
pop
into
out
in
sti
add
dec
out
add
int
push
rcl
subb
xchg
aam
fdivrs
sub
jns
out
int3
mov
jp
cmpl
fwait
sub
mov
repnz
sub
pop
or
adc
ljmp
jns
xchg
lret
and
es
fisubs
iret
sub
aaa
dec
ja,pn
xchg
rclb
stos
mov
sbb
enter
push
vpmacsdd
ret
arpl
push
add
or
in
popf
cmp
loop
sti
cmp
dec
push
sbb
push
sub
test
call
mov
sti
pop
mov
or
aad
iret
int
or
jns
inc
and
imul
mov
stc
stos
mov
repnz
mov
lock
mov
ss
mov
in
movsl
sbb
sub
cmc
cltd
mov
cmovle
ds
xchg
mov
sbb
cmpsb
in
outsl
mov
iret
sub
jno
dec
inc
pop
out
xchg
or
inc
lods
imul
das
addl
das
pop
inc
add
sbb
outsb
insl
popf
cmp
in
clc
push
pop
sub
and
xor
sub
std
adc
cmpsb
daa
bound
or
xchg
imul
xor
fsts
cli
mov
dec
stc
adc
or
cmp
sbb
cmpsl
sub
mov
lds
add
insb
loope
push
clc
mov
mov
pop
dec
push
xchg
jmp
adc
jge
inc
int
jo
fistl
cld
imul
movlps
and
mov
dec
sub
inc
add
sub
mov
enter
jns
fsin
enter
and
stos
bound
fsub
mov
enter
push
push
repnz
std
xor
xchg
mov
arpl
fcoml
repz
and
cli
lea
repz
icebp
jb
add
xor
adcb
ficoml
or
sti
push
and
in
bound
push
imul
mov
jmp
insb
pop
rorb
jmp
test
add
mov
fisubl
ret
out
mov
add
iret
lods
icebp
pushf
xchg
sub
push
lret
cmp
scas
arpl
fisttps
push
mov
stos
incb
loop
cmpsb
std
test
xchg
pop
sub
jno
lcall
les
add
cmp
jp
pop
inc
js
incb
push
sub
adc
in
outsl
imul
out
in
pop
push
sub
or
stc
ss
repnz
xchg
xchg
jnp
movsl
scas
es
adc
imul
arpl
mov
aad
inc
aas
cld
out
push
xor
je
lods
cmp
in
les
dec
jecxz
sarb
iret
xlat
dec
out
xlat
mov
clc
push
lods
repz
xchg
dec
mov
fsubrp
push
xor
ret
sub
mov
loope
or
lahf
repz
add
andl
repnz
add
cmpsl
aam
rcr
jg
inc
pinsrw
mov
out
repz
aam
cmp
jnp
and
nop
sub
lret
inc
stos
jnp
pmullw
in
jns
cmpsl
les
sbb
or
mov
sarb
insb
sbb
jecxz
stos
lcall
dec
jp
ljmp
push
shlb
cltd
pop
jle
mov
push
dec
adc
pop
iret
ss
data16
adcl
xchg
movsb
incl
sub
push
xchg
sub
cltd
mov
popa
fsts
cmp
push
nop
pop
out
mov
add
stc
and
jl
push
sbb
mov
pop
inc
daa
pusha
dec
pop
adc
aad
lods
adc
xchg
xor
mov
sub
je
mov
jecxz
lahf
jmp
add
sbbb
xchg
outsb
pop
jo
push
or
shl
aad
xor
std
push
and
rorl
jmp
scas
mov
push
mov
adc
sbb
cmp
mov
inc
adc
cli
and
mov
jge
pop
xchg
setae
pushf
ret
pushf
lds
mov
imul
xor
pop
ds
aaa
fists
sbb
sub
ss
mov
std
fisttpl
jnp
sarb
and
into
rcl
jle
push
outsl
mov
dec
dec
daa
repnz
gs
out
sahf
in
ja
imul
sahf
aas
dec
sub
pop
xchg
or
mov
aas
pop
mov
test
stc
jno
jg
clc
into
inc
notb
cmpsb
pop
dec
and
test
popf
call
dec
jae
leave
lods
pop
cmc
imul
dec
adcl
mov
jle
fmull
mov
dec
push
mov
inc
dec
mov
aad
mov
fdivs
std
cmp
fwait
mov
lret
cmpw
add
loop
cmpsb
dec
push
faddl
sbb
add
lret
xlat
xchg
in
into
adc
loopne
fs
out
xor
imul
rorb
jecxz
xchg
ds
es
mov
push
insb
call
nop
mov
add
dec
scas
scas
mov
xchg
mov
dec
dec
jb
or
dec
sbb
jne
out
inc
incb
sub
cltd
fs
out
mov
mov
pop
inc
mov
hlt
push
mov
test
sahf
f2xm1
fnstenv
dec
loopne
push
cmp
subl
in
dec
in
pop
lret
push
push
cmpl
notb
xchg
dec
insl
fistl
and
cmp
mov
add
popf
mov
jmp
dec
mov
mov
and
dec
ret
cmpsb
filds
ret
and
pop
sahf
sbb
cwtl
dec
daa
mov
fidivrl
mov
shll
and
mov
push
stos
xor
lcall
pusha
ds
sahf
out
out
in
and
mov
es
subl
xchg
jb
cmc
das
cmpsb
adc
negb
je
xchg
mov
adcb
mov
fcoml
xchg
inc
pop
lret
iret
jg
jno
stos
or
dec
popf
cwtl
pop
xchg
in
jl
sub
push
mov
jbe
ljmp
sub
cmp
xchg
push
mov
xor
pop
outsl
shrb
or
ds
jns
cmp
cwtl
cwtl
pop
inc
xor
and
lcall
mov
mov
jnp
repz
fstl
xchg
repz
sub
test
shl
cmp
push
pop
sbb
movsl
push
repz
ret
mov
sub
adc
push
mov
inc
movsl
pusha
scas
pop
cmp
jns
and
insb
mov
ljmp
adc
mov
and
mov
jmp
jle
sub
lods
js
lahf
mov
fnsave
jo
mov
push
daa
frndint
push
push
push
pop
rol
push
lds
xchg
mov
pusha
outsl
cmp
rcl
mov
inc
or
or
inc
jo
xchg
xor
inc
cmp
xor
jmp
shll
dec
lea
mov
aam
aaa
into
inc
lds
mov
ss
mov
lods
xchg
mov
fimuls
cmp
jbe
sub
cwtl
mov
insl
js
xor
and
mov
xchg
push
push
fists
inc
lods
fisubl
mov
and
movntq
mov
push
les
ds
lret
lcall
aas
pop
xchg
fildll
je
mov
dec
mov
or
cltd
lds
jg
inc
popf
sub
jp
loopne
test
divl
xchg
jae
sarb
into
sbb
jnp
and
or
cmp
stc
stos
xchg
icebp
cmp
inc
test
fwait
std
daa
xchg
adc
pop
and
pop
icebp
mov
sahf
outsl
ja
mov
adc
xor
xor
jbe
cmpsb
aam
mov
pop
mov
test
xchg
xor
jmp
jle
divl
push
stos
mov
clc
jnp
aas
sub
scas
fbld
aas
mov
cmpsb
mov
mov
xor
or
je
xor
ss
push
jmp
xchg
dec
push
lcall
jno
add
test
jg
xor
xor
adc
adc
xchg
rolb
test
xor
ss
push
adc
xchg
mov
jmp
lock
add
icebp
mov
nop
xchg
fstl
mov
rclb
jo
repnz
ror
jo
popl
testb
xchg
int
cld
jb
dec
lcall
shll
imul
sbb
pop
mov
xor
pop
push
jo
andb
xchg
xor
and
sub
sub
mov
inc
mov
gs
inc
ret
cld
negb
into
sub
out
sbb
pop
lahf
loopne
xlat
push
imulb
adc
mov
dec
je
push
movups
sahf
cmp
jnp
cmp
dec
sbb
xchg
mov
xorl
dec
pop
icebp
jle,pt
or
vmwrite
and
mov
in
adc
jp
jne
mov
ret
sti
cs
dec
imul
loop
orl
gs
jnp
imul
aad
sti
fdiv
pusha
cmp
cmpsb
dec
dec
push
rcll
repz
or
jecxz
sub
popa
cld
dec
cmp
stos
movsl
mov
repz
push
adc
sbb
adc
cmp
inc
in
sti
mov
push
and
xor
add
popa
mov
sbb
pop
bound
fstp
mov
mov
movsb
in
imul
mov
lahf
jge
xlat
mov
or
sbb
inc
adc
lret
int3
vpunpcklwd
xor
push
pop
push
test
andb
jp
sbb
fcom
xor
adc
stos
or
or
lods
lea
cmp
dec
or
in
in
mov
imul
mov
inc
stos
ds
test
inc
mov
scas
rcl
imul
test
jae
sbb
fistpl
pop
pop
cmpsb
ljmp
test
xlat
inc
fidivl
pop
pop
pop
mov
pop
add
adc
cmp
mov
fwait
sub
movsb
push
jbe
mov
push
or
lock
fistl
xchg
dec
mov
xchg
lcall
push
inc
and
mov
cwtl
out
dec
add
ret
fcoms
xchg
lods
and
int
lods
jecxz
mov
push
sub
lret
int3
loopne
movsb
popa
adc
xchg
test
sbb
lcall
mov
xor
test
shll
mov
mov
iret
and
insb
and
int3
inc
es
jg
mov
and
or
popa
pop
sub
nop
dec
test
jno
xchg
call
pop
gs
pop
cmpsb
loop
sub
into
movsb
jnp
pop
sahf
ffree
adc
pextrw
inc
stc
jmp
jns
stc
or
push
rorl
mov
or
mov
sti
lcall
and
into
outsb
ret
fs
mov
fmuls
sbb
test
stos
cs
xchg
sub
scas
mov
cmp
outsb
dec
jae
movsl
cmp
mov
loope
mov
fnstenv
jae
dec
xchg
add
hlt
mov
mov
rcr
rcrl
bound
cmp
in
lcall
jmp
movsl
lods
and
ljmp
pop
xchg
sbb
shrl
pop
and
sbb
test
pop
inc
add
out
push
cmpsl
cld
mov
pop
pop
dec
dec
jb
xor
js
jle
cmpsl
xor
mov
mov
lret
push
gs
mov
movsb
or
inc
popa
rcrl
push
in
loopne
xchg
es
mov
lds
test
mov
sahf
mov
xor
ret
mov
fistl
dec
jmp
repz
nop
push
pusha
lods
jo
sahf
pop
scas
mov
inc
xchg
jecxz
adc
pop
cmp
std
mov
sbb
or
imul
pusha
arpl
icebp
xor
loopne
sub
cwtl
in
mov
popa
lret
jns
lret
push
sub
mov
cld
xor
daa
xor
or
mov
dec
popf
hlt
mov
mov
daa
jmp
push
loopne
push
and
dec
roll
dec
in
stc
andb
cld
jnp
cmpsl
sbb
adc
jno
dec
mov
dec
jo
ficomps
mov
lods
push
ret
dec
gs
lcall
xor
inc
push
icebp
xor
push
pop
inc
or
cmp
inc
or
outsb
bnd
cmp
sahf
cld
inc
add
adc
dec
push
xchg
js
dec
orl
rolb
fs
sub
mov
fidivrl
or
push
pop
popa
inc
mov
je
aad
mov
jno
push
dec
inc
jle
mov
out
in
icebp
hlt
cmp
cmp
jl
cltd
push
lock
push
dec
movsl
ds
push
lret
movsb
mov
push
fcoms
repz
cmp
dec
call
outsb
xor
dec
push
jae
pop
pop
pop
push
dec
fiadds
shr
xchg
jmp
sub
inc
test
dec
mov
add
cwtl
or
lret
out
pop
xor
sub
in
sahf
or
loope,pt
testb
pop
aad
push
add
xor
jnp
jo
sbb
mov
mov
in
and
jmp
cmc
call
or
enter
js,pt
jge
insb
jg
inc
std
mov
dec
mov
mov
std
or
fistl
mov
cmpsb
push
xor
or
or
loope,pt
cli
push
push
je
mov
jl
push
or
jns
mov
stos
cmpsl
test
jp
mov
sub
pop
jno
inc
dec
arpl
loope
xchg
mov
lcall
lds
cmp
call
jmp
push
shl
xchg
lods
jp
mov
rolb
fisubl
cmp
xchg
loope
xchg
hlt
daa
pop
adc
cmpsl
inc
push
jne
jns
sahf
aad
push
xchg
jecxz
cmp
nop
sarl
lods
ljmp
imul
add
test
jno
arpl
xchg
push
pop
ficomps
clc
mov
inc
insl
xchg
lods
push
in
and
cmp
ret
clc
inc
xlat
jb
xchg
popa
outsl
fdivl
dec
adc
scas
fisubs
inc
popl
popf
dec
cmpsl
lret
clc
jge
mov
fldl
les
push
push
cmp
push
pop
sahf
sbb
pop
or
les
scas
cmp
sbb
sub
mov
cmp
pop
jbe
and
or
testl
hlt
push
dec
mov
mov
nop
jecxz
mov
or
test
fucom
jne
cmp
push
mov
out
je
or
pop
or
in
fisttpll
sbb
popl
cmp
and
mov
notl
lea
out
lcall
stos
xchg
rclb
rorl
sub
xor
shlb
jno
jl
inc
dec
push
stos
leave
pusha
js,pn
jb
test
sub
or
push
in
test
nop
push
push
cld
push
movsb
adc
xchg
pop
stos
sahf
adc
ret
clc
mov
mov
lods
inc
insl
ljmp
sbb
fsts
fcoms
aad
hlt
cltd
pop
adc
cltd
popa
sbb
mov
add
addr16
sbb
out
cli
pop
aam
push
test
mov
popa
fwait
add
rcrl
fnstsw
mov
push
mov
rorl
sub
int
cmp
lods
mov
mov
arpl
loope
inc
sbb
mov
test
mov
icebp
arpl
xchg
outsb
rcll
in
leave
repz
xor
outsb
mov
pop
gs
pop
adc
push
rcll
inc
sbb
push
fsubrs
je
mov
xor
daa
lcall
inc
pusha
jp
int
cmp
arpl
sbb
cmp
idivb
daa
js
cwtl
adc
xchg
or
dec
cmpl
or
inc
mov
shrl
test
loopne
mov
inc
neg
cmc
pop
xchg
xchg
lea
es
add
aad
test
lock
xchg
adc
jo
jns
mov
loope
daa
stc
sub
xchg
js
dec
mov
out
and
dec
nop
and
or
jns
and
lock
shl
mov
push
xchg
movsl
loopne
jmp
rorb
xchg
jg
inc
popa
mov
push
int
xchg
rcrl
cld
pop
mov
inc
into
jmp
addr16
pushw
xchg
xchg
lret
sub
pop
icebp
cmp
cmp
xchg
cmp
popf
jnp
push
ljmp
pop
push
mov
adc
loope
mov
xchg
icebp
test
cmp
push
push
dec
out
lods
enter
push
inc
lahf
in
lahf
push
loop
jnp
les
cltd
scas
push
or
icebp
jno
mov
mulb
cmp
les
inc
add
pusha
xchg
sbb
add
fsubs
and
ret
pop
push
enter
call
loop
xchg
xor
push
repnz
std
roll
pop
ljmp
jge
pop
sub
or
mov
jb
stos
xchg
sbb
xor
ljmp
xor
std
dec
into
mov
inc
push
dec
or
push
jle
xchg
and
push
stos
inc
insb
jne
cmp
nop
das
push
mov
and
sub
or
ljmp
cli
or
sub
fdiv
push
ljmp
dec
xor
test
push
mov
mov
je
out
or
add
and
xor
js
push
fildl
insb
gs
jne
notb
into
or
icebp
mov
sbb
fdivs
test
xchg
cli
inc
and
jl
pop
cmpsb
xor
push
xor
stc
push
cli
and
and
dec
into
outsl
iret
push
inc
sub
dec
dec
xor
addr16
dec
lods
sahf
pop
jnp
pusha
movsb
mov
xor
jle
mov
mov
jecxz
fucom
jbe
mov
xor
xchg
lods
aaa
popa
lret
cwtl
mov
test
lret
imul
pand
lcall
rorl
xor
and
aad
and
test
jnp
imul
pop
jmp
js
jge
fwait
adc
cmpsl
call
out
inc
sbb
jge
mov
in
rcl
xor
rcr
fs
mov
ret
sbb
and
mov
pop
sbb
je
cmp
scas
inc
sub
lds
enter
xchg
jno
outsb
out
insb
lods
cltd
xchg
adc
mov
xor
pop
push
sahf
sbb
xor
push
push
out
pop
fidivrs
dec
repz
adc
xchg
pop
mov
jnp
sbb
in
mul
sti
scas
xor
int3
cmp
in
jp
lock
jns
mov
inc
lret
push
adc
push
out
repnz
call
scas
add
popa
ret
movsw
cwtl
jno
and
pop
cli
stos
inc
inc
push
fiadds
sub
lods
dec
in
lods
xor
inc
adc
cltd
fsubl
test
push
xlat
das
das
popa
jmp
push
pop
daa
movsl
pop
out
cmpsl
loope
jns
inc
aam
inc
xlat
push
sahf
addr16
sub
dec
mov
dec
or
stc
xor
add
sub
push
pop
imul
movsl
jle
xchg
cmpps
xchg
flds
push
lock
sbb
inc
push
lods
jno
fcoml
fiadds
push
sbb
and
pop
test
push
mov
mov
je
loop
mov
add
in
loopne
jmp
xor
scas
mov
call
ja
test
fdiv
hlt
adcl
sbb
sub
test
lret
out
out
push
mov
mov
cmp
cmp
mov
xchg
dec
es
repnz
cmp
movsb
scas
and
mov
loope
inc
imul
xchg
inc
aam
lods
cmp
data16
jbe
mov
lcall
mov
movsl
mov
insl
cmpsl
std
repz
aaa
cmpb
int3
icebp
and
fldt
dec
inc
push
je
sbb
add
add
stc
xchg
out
rclb
xchg
mov
bound
sysret
in
ret
push
adc
jle
lock
or
mov
push
fldt
daa
add
adc
aam
mov
repz
mov
in
popf
cmp
xchg
xchg
into
adc
das
xlat
xor
mov
inc
sbb
in
push
adc
cli
sub
pop
lret
mov
mov
std
roll
decl
or
pop
fistps
stc
in
aam
rcll
push
repz
xorl
or
stc
fwait
lods
dec
cmp
and
and
add
mov
andl
ret
loope
mov
sbbl
mov
loope
in
mov
inc
mov
shrb
inc
cmpsl
sbb
cmp
fwait
sbb
mov
scas
test
lods
mov
rorl
int3
inc
in
sub
ja
mov
cli
cmpsb
ret
push
fs
leave
rcll
jecxz
adc
mov
add
mov
rclb
shlb
xor
divb
sti
in
xchg
loopne
sbb
sub
in
icebp
pop
rorb
dec
xor
fidivl
xchg
inc
rolb
or
pusha
mov
rcl
jns
mov
notl
lods
mov
dec
lret
inc
dec
ljmp
dec
ror
lock
or
lcall
adc
jnp
mov
jne
push
cmp
outsl
test
pop
xor
cmp
fimuls
mov
xchg
mov
fs
xchg
jnp
dec
pop
loop
dec
hlt
push
jbe
fs
jge
lock
jg
push
mov
movups
fdivrl
aad
and
mov
sti
sbb
lcall
in
mov
lret
add
push
cmpsl
aaa
lods
jne
adc
inc
add
int3
inc
mov
cmp
loopne
xor
and
sub
xor
pop
mov
in
shrb
mov
shr
cmp
stc
dec
loopne
sbb
mov
dec
jmp
pop
xchg
cltd
mov
fs
lods
mov
xchg
lcall
mov
lahf
imul
mov
loop
mov
dec
fld
cmpsb
pop
push
mov
cmp
and
repnz
pusha
xlat
out
call
test
bound
dec
hlt
aad
sbb
fs
iret
jae
addl
pop
flds
add
mov
dec
fwait
xor
xorl
or
or
mov
pop
in
in
mov
cld
xchg
and
aam
fsubl
dec
jmp
cmp
push
cmpsl
sbb
lods
sub
cmp
lret
das
pop
leave
cmc
and
mov
pop
repz
lds
sti
cmp
js
in
iret
insl
dec
mov
pop
into
pushf
mov
insl
push
xchg
push
shrb
movsb
mov
inc
in
movsb
es
pop
emms
fdivrl
xor
std
fwait
aaa
or
xor
ljmp
or
jne
jae
rcrb
shrl
test
clc
aas
xchg
dec
sbb
sub
sbb
lods
in
iret
ret
fmull
sbb
cmp
out
insb
mov
jmp
sub
mov
mov
push
mov
dec
xorl
mov
cmp
or
cmpsl
xlat
pusha
jbe
mov
cli
lds
push
insl
shlb
inc
icebp
loope
out
out
pop
inc
mov
ret
lock
popf
cmp
repz
mov
stc
out
push
movsl
sub
cld
lods
sbb
enter
insl
mov
and
testb
out
push
jbe
rcr
in
loop
mov
jmp
in
bound
sti
mull
hlt
mov
sbb
mov
test
push
mov
arpl
mov
jns
aad
pop
sub
push
sub
ds
jp
scas
sub
cmp
jbe
imul
add
mov
aas
sahf
std
mov
ret
jae
aad
in
movsl
out
sbb
push
pop
ds
pop
adc
sub
scas
cld
inc
test
cmpb
stos
pusha
cwtl
jl
aaa
inc
cmp
sbb
pop
add
shrb
and
dec
jmp
push
jo
xor
cpuid
jmp
scas
mov
aaa
fs
scas
push
xor
jbe
stc
cmovae
leave
sub
pop
icebp
dec
mov
or
jmp
push
jmp
mov
sti
mov
pop
push
push
daa
dec
and
inc
cmpsl
cmp
stc
lock
sbb
push
pop
inc
nop
stc
aad
cld
jl
aad
adc
jb
mov
add
hlt
daa
movsb
or
adc
and
sbb
rcll
mov
out
fwait
sarl
movsl
imul
add
mov
xchg
cs
jnp
cmp
insl
pop
xchg
fistpll
aad
jg
add
sub
cmp
sub
clc
jo
cli
call
inc
push
xchg
mov
iret
in
push
xlat
cmp
inc
mov
push
jge
cmp
dec
sarb
aas
dec
je
xchg
aas
sbb
into
adc
loop
xchg
xor
rcrb
dec
sbb
iret
sti
cli
or
and
fsubrl
mov
adc
lahf
nop
xchg
aam
jle
mov
mov
xchg
fldenv
cmp
mov
jb
jnp
fisubl
mov
sub
shl
jge
add
rorl
dec
or
cmpl
ja
negl
sti
ds
mov
insl
dec
sbb
mov
repz
xor
cs
fs
js
les
push
lret
sub
mov
or
mov
sahf
push
fs
mov
adc
negb
xchg
jmp
sub
iret
mov
and
dec
jge
dec
pop
mov
scas
dec
lods
push
leave
jecxz
jle
xchg
setbe
and
call
add
into
outsl
cmp
xchg
mov
out
out
mov
and
pop
sarl
jg
inc
add
mov
out
jmp
iret
inc
subb
cmpsb
add
lds
mov
adc
stos
mov
mov
adc
je
inc
xchg
fisttpll
cmp
push
pop
inc
xchg
add
sub
cmp
loope
cmp
nop
lret
loopne
repnz
loope
sub
mulb
inc
mov
jecxz
test
rclb
popf
cmp
inc
push
push
call
mov
pop
repnz
and
pop
sbb
cld
mov
inc
jae
adc
mov
test
jmp
push
ret
leave
xor
addr16
ret
icebp
bound
mov
into
sbb
imul
fstps
test
xor
sub
clc
xchg
cltd
and
pop
adc
mov
xor
inc
xchg
sbb
xor
dec
mov
or
mov
lock
loop
xor
pushaw
clc
jp
lods
hlt
sbb
mov
xchg
testl
dec
imul
fmull
jmp
lock
out
lcall
in
cmp
and
ss
sub
pop
icebp
inc
nop
pushf
fldt
push
daa
sahf
es
lods
mov
xchg
test
lcall
das
pusha
mov
xchg
mov
mov
dec
mov
repnz
jg
adc
sahf
sbb
cld
mov
mov
add
ffree
cmc
and
push
xchg
lock
pop
fcmovnbe
aaa
xor
dec
movsb
mov
or
xchg
sub
sub
pop
into
paddsb
je
out
out
cmpsb
cld
test
sbb
inc
adc
nop
xor
push
sub
xor
std
fcompl
js
dec
xor
cmp
push
add
cld
cwtl
jg
mov
es
cmc
xchg
inc
dec
andl
add
sahf
cltd
je
cli
mov
xchg
mov
or
test
push
popf
scas
ss
mov
faddl
inc
cwtl
xchg
lds
jno,pn
dec
repnz
js
ret
stc
mov
dec
cmpl
pusha
xchg
aad
les
pop
ficompl
inc
lret
pusha
or
lret
bound
fwait
push
push
imul
loopne
xor
jle
add
fdivrl
mov
bound
dec
push
negb
outsb
jbe
into
shlb
push
mov
fwait
loope
in
call
cmp
jb
mov
repz
insl
adc
xor
aas
or
or
shll
mov
mov
ss
add
jnp
sbb
gs
add
rclb
in
jne
adc
rcr
add
pushf
imul
inc
dec
or
sbb
pop
pop
outsb
add
mov
push
dec
bound
sarb
gs
dec
mov
xor
mov
ret
mov
fwait
jge
mov
mov
jle
or
mov
dec
mov
and
jo
mov
rcrl
inc
and
inc
cwtl
xchg
imul
lods
push
xor
jmp
dec
loopne
fildl
or
or
imul
jecxz
add
aaa
cmp
mov
aad
in
les
leave
test
push
add
cli
jnp
push
push
push
or
mov
adc
push
shrb
lods
aam
mov
das
or
sub
cli
enter
in
in
dec
test
icebp
jge
cmp
jbe
inc
arpl
mov
xchg
or
push
fsts
mov
push
cmp
jbe
xorl
inc
fistl
mov
ljmp
out
mov
jmp
cmp
imul
icebp
or
lcall
adc
stos
mov
clc
je
mov
jg
rcll
and
loope
or
cwtl
adc
test
and
or
fwait
punpckhbw
add
popa
adc
xor
xchg
inc
or
lds
cltd
in
rol
fbld
mov
repz
out
into
pop
int3
stc
test
sbb
mov
or
cli
jo
cmp
xchg
in
imul
insl
add
dec
jg
std
lahf
aad
fnstenv
push
or
shll
pop
mov
fisttpl
scas
je
and
sbb
mov
lds
das
xchg
lret
cwtl
add
mov
lahf
lock
rcr
dec
rclb
push
cli
jnp
shl
sarb
sub
pop
mov
das
idiv
mov
sub
and
cli
mov
fcompl
sub
mov
and
jmp
loopne
and
repnz
pop
clc
neg
xor
and
stos
xor
int3
dec
or
xchg
sti
lds
add
sbb
cmp
out
or
or
adc
iret
test
cwtl
fsubrs
cmp
xor
sub
data16
or
outsb
xchg
add
rcl
sahf
pop
xor
int3
xor
dec
xor
test
sub
push
outsb
sub
add
outsl
jge
cmc
dec
cwtl
aam
xchg
cmp
or
data16
cmp
pushl
shlb
in
arpl
insl
mov
out
lret
inc
inc
inc
test
dec
clc
xchg
out
jns
and
fdivr
std
push
outsb
xchg
push
or
adc
out
mov
jmp
enter
lods
pop
test
call
pop
cld
inc
bound
xor
jb
dec
shlb
or
fstpl
push
push
cld
pop
dec
adc
repz
sbb
xchg
jns
mov
and
add
leave
xor
bound
insb
add
xchg
jp
xchg
in
pop
outsb
push
rol
pop
push
jno
cmp
outsl
sahf
push
dec
jmp
test
insl
xor
add
cmc
mov
mov
es
sub
ret
and
add
inc
xor
jge
sub
push
ror
in
sbb
in
adc
cltd
pop
xor
int
imul
jge
outsb
stos
jmp
adc
cmp
mov
cltd
gs
xchg
and
ror
scas
sbb
dec
and
jle
push
mov
sti
add
cmp
jp
sub
jp
in
lret
inc
jae
push
imul
adc
int3
cmp
in
inc
out
sahf
lds
cmc
mov
inc
push
and
in
mov
push
push
dec
push
jbe
mov
adcl
adc
out
xchg
cld
rcrl
out
add
addl
pop
sbb
mull
fcmovb
fdivrs
scas
xlat
lds
jbe
mov
popf
aas
cmpsb
push
test
cmpsl
xchg
jo
outsb
out
add
xor
jp
pushf
xchg
jl
cmp
icebp
xchg
gs
lock
fistpl
jg
add
adc
mov
ficompl
cmp
mov
sub
jle
dec
enter
pop
adc
dec
ret
pushf
mov
es
es
mov
xor
mov
fimuls
adc
and
scas
mov
dec
mov
shlb
mov
cwtl
mov
arpl
lods
out
insb
adc
fbld
int3
mov
mov
mov
inc
xchg
pop
movsl
cmp
jp
imul
jg
les
fdivl
loope
or
outsb
add
pop
loopne
push
push
sbb
negl
gs
out
mov
mov
pop
push
insl
shlb
out
mov
pop
push
mov
xchg
xor
push
pop
dec
mov
sbb
dec
adc
out
out
push
insb
aam
mov
mov
out
sub
stos
cmc
inc
es
inc
cmp
mov
inc
jnp
fucomp
sahf
lret
dec
mov
lcall
and
call
mov
inc
outsl
cmp
mov
clc
pop
call
repz
loopne
fstl
sbb
test
js
aas
pop
sub
xor
repz
mov
pop
out
int
in
mov
jl
mov
sub
clc
inc
mov
adc
sub
scas
push
mov
stos
jo
inc
and
dec
imul
or
scas
movsl
and
frstor
mov
xorb
stos
mov
ja,pn
push
dec
push
arpl
or
cmp
pop
push
adc
lcall
gs
sub
push
cmp
jno
out
cmp
outsb
mov
fsubs
test
push
mov
js
pop
fdivl
imul
sub
addl
jle
inc
mov
xchg
xor
clc
push
sahf
jge
in
sbb
movsb
adc
push
push
inc
jae
arpl
lea
hlt
mov
cmc
mov
xchg
add
xchg
mov
add
ja
cmpsb
hlt
mov
jns
out
stos
mov
xchg
sbb
dec
arpl
icebp
in
shrl
inc
dec
ds
cs
or
sub
daa
jp
pop
sbb
cmp
lock
mov
cli
pushf
loope
repnz
cmpsl
lahf
fstpt
ljmp
mov
incb
dec
cmpsl
test
outsb
add
inc
mov
or
pushf
fsubrs
arpl
fwait
out
push
mov
push
jno
stos
sbb
jle
lahf
add
shlb
orb
xchg
fcomps
inc
fstpl
orb
js
push
popf
sti
xor
bound
dec
mov
push
cmpsb
imul
sbb
in
xor
imul
inc
dec
in
xor
or
cmpsl
je
jns
out
mov
adc
mov
popf
movsb
cs
scas
mov
push
xchg
mov
lret
cmp
ljmp
push
aaa
jb
insb
imul
jg
mov
out
outsl
mov
xchg
jp
mov
stos
mov
jb
add
push
cmc
rcrl
sbb
pop
push
xor
add
or
fwait
sub
cld
sub
sahf
shrb
inc
ja
in
jne
mov
lods
outsb
mov
mull
in
jnp
lahf
inc
fisttps
shr
pushf
push
pop
jl
cmpl
mov
pop
mov
insb
test
shlb
ret
scas
movsl
jmp
add
dec
push
in
xor
mov
sub
adcb
sahf
scas
jae
inc
cmc
mov
fcmovnu
test
shll
icebp
inc
mov
fmul
mov
jnp
mov
int3
or
and
js
adc
rcrl
or
loop
repnz
aaa
notl
outsl
setl
cmp
lret
adc
jp
dec
inc
cmpl
add
dec
mov
int
xchg
ret
xchg
sub
test
jle
pop
pop
add
inc
in
cld
out
enter
cmp
popl
stc
popa
jmp
pop
add
imull
xchg
out
inc
add
loop
sub
push
hlt
and
jmp
fwait
ret
repz
imul
lcall
imul
xchg
je
xlat
push
push
std
ja
cwtl
xchg
xor
inc
mov
mov
pop
and
data16
test
lock
jo
movsl
cwtl
inc
mov
stos
dec
into
out
pop
dec
aas
incb
rcrl
cwtl
pop
or
adc
or
fistpll
fs
sbb
mov
das
inc
push
sti
cmc
test
std
sub
push
icebp
and
mov
cmpsl
push
jnp
sbbb
dec
jecxz
loop
sub
imul
add
loop
js
das
sbb
cmp
bswap
push
popf
sbb
ja
dec
sahf
cmpsl
push
cmpsl
outsb
cmp
mov
pop
cmpsb
xchg
xor
clc
sbb
and
lods
cmpsl
outsb
fs
sub
push
pop
shrb
cwtl
repnz
enter
sbb
push
repnz
push
push
push
ljmp
inc
cmp
ljmp
or
dec
pop
cmp
xchg
xchg
sarl
gs
xor
negb
and
pop
adc
jecxz
test
mov
imul
sbb
sub
lret
in
imul
sahf
shll
das
popf
and
out
notb
push
lds
scas
xor
test
push
cmpsl
pop
scas
push
xor
pop
imul
clc
push
push
push
push
rcl
loop
dec
or
cmc
pop
mov
and
xchg
das
jl
mov
lret
dec
xchg
cmp
inc
add
jno
mov
push
lahf
jo
repz
cmp
add
sub
dec
iret
adc
fwait
lods
mov
inc
inc
clc
jle
jne
pop
dec
dec
sub
fidivrl
fs
sbb
pop
xlat
enter
mov
or
insb
addr16
jno
addb
arpl
popf
or
lcall
adc
cmp
xor
mov
movsb
nop
push
mov
loop
int
mov
dec
jae
or
movsl
push
outsl
stos
or
lahf
mov
es
test
add
test
ror
mov
mov
push
js
ret
dec
test
ljmp
cli
andl
shrl
jmp
sbb
aam
sbb
pushf
sbb
xor
das
mov
xor
je
imulb
leave
push
jno
scas
inc
out
ret
ja
pop
out
jg
inc
mov
or
and
mov
shrb
sahf
fscale
test
mov
fnstenv
lahf
jno
push
pop
iret
mov
sbb
jge
scas
test
pop
clc
fisubl
lods
insb
rcrb
rorb
sub
mov
cmp
xor
mov
adc
adc
iret
sarb
scas
or
mull
bound
jbe
cmp
dec
into
pop
ret
outsb
fcmovnu
fwait
leave
cmp
loopne
insl
repnz
cmp
adc
sbb
push
push
lock
push
int3
jae
cmp
push
and
add
je
adc
cmp
imul
test
sub
test
pop
and
ljmp
mov
pushf
lods
inc
insl
jp
and
push
in
idivb
out
dec
add
fwait
clc
outsl
daa
pop
xor
popa
add
fmull
push
cmpsb
test
divb
push
lods
jge
push
insl
mov
cmp
or
dec
faddl
jb
out
xchg
push
icebp
mov
lret
xchg
xor
in
cld
add
mov
inc
leave
or
scas
jle
lcall
test
stos
dec
ror
cmpl
lock
lods
jle
inc
aas
jbe
cli
mov
push
in
mov
xchg
and
arpl
push
test
lret
inc
ljmp
xorb
popf
or
int
loop
loope
inc
xor
mov
ret
stc
lods
daa
adc
repz
mov
nop
adc
push
lods
mov
mov
jns
pop
repz
inc
xchg
push
xchg
pop
push
dec
lods
push
aas
ja
or
xchg
repnz
insb
into
xchg
stc
sbb
addb
mov
add
adc
out
mov
sbb
add
out
in
das
arpl
scas
push
cmpsl
inc
adc
and
adc
int
and
cmp
cwtl
adc
xchg
cmp
pop
mov
andl
pushf
lods
xchg
inc
fdivrp
les
xchg
inc
jnp
dec
movsl
jge
jae
insl
inc
jo
lock
bound
or
mov
popf
sbbb
scas
les
push
lea
and
lods
pop
push
ss
pop
xchg
push
push
pop
push
xchg
mov
pop
sbb
pop
sbb
sahf
lcall
into
cltd
lods
sbb
rorb
mov
iret
fsubs
outsl
or
js
push
and
ret
inc
cmc
pop
mov
pop
dec
and
sar
ds
xchg
jl
dec
cld
ret
jge
arpl
push
pop
sub
cmp
xchg
dec
xor
inc
dec
add
loop
and
mov
je
sub
push
ret
cmp
push
pop
popf
sbb
and
addr16
movsl
imul
push
mov
sahf
cmp
add
aas
dec
pop
add
shll
add
pop
aas
jl
adcl
inc
xor
fbstp
lock
cmpsl
dec
add
inc
dec
imul
fisttpll
jb
loopne
mov
insb
aaa
cmpsl
xor
and
gs
add
fcmovnu
xor
xlat
out
xchg
inc
xchg
ret
sub
pushf
mov
inc
inc
jl
xchg
outsl
cmc
aas
jecxz
stos
sbb
inc
push
inc
pusha
mov
fisttpll
push
in
cmp
sub
adc
mov
or
in
jecxz
fs
inc
enter
subl
outsl
mov
sub
fiadds
ret
push
fisubrl
insb
ljmp
lods
dec
add
push
sub
roll
loope
mov
adc
mov
rcll
fimull
sbb
aas
rorl
lods
filds
sbbb
rorb
imul
mov
or
jecxz
fyl2x
ljmp
sti
mov
lea
dec
bound
lods
js
mov
pop
in
jp
add
sub
mov
xchg
lods
sbb
pmaxsw
lret
sbb
js
cmp
pop
in
lods
testl
sbb
icebp
jb
in
cmpsl
outsl
and
pushf
xchg
clc
mov
jge
mov
push
rcll
lds
dec
push
fistps
imul
cli
xlat
and
inc
lods
push
pop
sub
das
fisttps
daa
enter
sbb
psubw
into
fcoml
jae
out
xchg
xchg
pop
mov
mov
outsb
pop
mov
mov
sbb
scas
push
xchg
mov
cmp
push
mov
or
pop
sbb
popa
pop
sbb
push
es
jge
jo
aaa
mov
add
fcoms
out
pop
sti
xor
add
jb
fdivs
or
mov
and
pushf
cmp
xchg
insl
pause
add
add
mov
or
inc
push
mov
dec
xor
mov
push
stos
sub
scas
xor
adc
lods
idivb
outsb
or
xchg
dec
lahf
jmp
scas
xchg
dec
scas
xchg
dec
loopne
inc
out
xor
cmp
jg
mov
bt
sub
push
and
cwtl
jae
pop
scas
daa
and
nop
cwtl
cmp
mov
or
sbb
imul
test
sti
loope
mov
leave
or
mov
sub
and
lods
hlt
push
add
aad
jle
xchg
dec
push
jecxz
push
xor
cmp
popf
jl
sub
pop
mov
mov
stc
pop
aaa
repnz
insl
jbe
mov
adc
dec
dec
or
cmp
fmull
inc
mov
inc
push
sbb
and
sahf
or
inc
rol
nop
mov
pop
test
xor
shlb
pop
and
lods
dec
sub
cli
push
mov
cmp
andl
mov
jl
pop
sub
clc
xchg
mov
mov
mov
add
out
sbb
and
mov
fbld
lea
adc
mov
sub
int3
jae
mov
in
sbb
aam
out
and
mov
mov
enter
pop
scas
and
mov
les
mov
rol
add
fldt
decb
push
aaa
shll
roll
sbb
scas
jmp
pushf
shrb
rcrb
cmpsb
ss
cmp
jg
dec
and
out
nop
cs
and
push
es
inc
out
jbe
mov
and
pop
inc
push
rcll
and
inc
and
adc
mov
cld
mov
data16
jl
pop
mov
pushf
shll
mov
leave
and
enter
mov
ror
out
or
stc
ret
dec
or
inc
arpl
push
mov
cmovnp
es
test
xor
jns
sbb
xchg
push
scas
mov
stos
test
mov
bound
cli
insb
int3
mov
insb
mov
out
mov
xchg
cmpsl
je
mov
cmpsl
cmp
clc
int3
cs
sub
mov
scas
call
in
mov
int3
inc
push
sub
flds
sbb
inc
cmp
inc
daa
test
adc
mov
inc
stos
hlt
gs
mov
pop
mov
insl
addr16
mov
or
mov
adc
inc
push
adc
inc
shll
nop
xchg
and
shl
adc
cmp
adc
scas
dec
jmp
dec
rcrl
xor
pop
mov
dec
cmp
je
mov
mov
in
and
mov
outsb
push
xchg
fbld
add
ffreep
imul
pop
mov
lret
sahf
adc
sahf
inc
lods
adc
shll
lock
shll
mov
outsb
in
mov
adc
out
out
faddl
fcomip
mov
icebp
and
xchg
adc
pop
push
ds
mov
loopne
xchg
inc
mov
pop
dec
push
xchg
or
and
and
bound
es
scas
xchg
out
dec
inc
imul
ret
dec
pop
repnz
push
rorl
sub
insl
xchg
stc
mov
push
mov
and
mov
in
shlb
bound
out
lock
fildll
sub
aaa
inc
sub
push
enter
iret
js
mov
jp
or
adc
testl
aad
gs
push
or
mov
imul
les
fistpl
dec
dec
movl
stc
dec
dec
xchg
out
and
pop
je
aas
pop
mov
xor
push
mov
add
mov
ret
comiss
cmp
fdiv
outsb
pushf
xchg
leave
cmp
xlat
push
and
jle
outsl
pop
arpl
push
in
sbb
xor
int3
xchg
dec
into
or
sti
mov
mov
add
xor
add
clc
xchg
mov
test
dec
fstps
mov
or
or
scas
aas
outsl
popa
push
js
ret
aas
cld
dec
in
lods
cmp
pop
lcall
and
xchg
pop
popa
aad
fisubs
inc
addr16
mov
loop
mov
xor
push
in
jp
sbb
xchg
xor
mov
xor
pop
dec
sbbb
inc
adc
shll
arpl
insl
xor
fcompl
inc
sub
in
mov
and
mulb
xchg
jne
pop
and
jmp
orl
jl
repnz
mov
int
dec
imull
push
push
dec
xor
stc
cmpsb
or
in
fwait
lds
fmuls
idivb
fisttpll
xor
adc
fcmovu
adc
cmc
inc
lcall
mov
icebp
cmp
sub
loope
adc
icebp
call
push
sti
aad
jg
push
and
sub
lcall
cld
dec
or
fcmovbe
mov
hlt
xlat
outsb
push
imul
ljmp
mov
pop
movsb
mov
ficoml
std
test
cld
jmp
mov
cmp
daa
ss
in
enter
mov
dec
outsl
and
ljmp
lret
das
jmp
arpl
xor
xorb
dec
out
inc
cmp
jl
and
movsl
push
mov
orb
inc
sbb
or
jns
shll
or
ret
xchg
rcrl
imul
add
sub
cmc
cmp
mov
pop
push
mov
bound
aad
ror
fidivs
movl
mov
les
bound
cmp
ret
xor
add
imul
inc
outsl
push
cmpsb
imul
or
outsb
sub
sub
inc
or
fsubrp
hlt
lea
xlat
cmpsb
jecxz
clc
xchg
mov
push
icebp
out
dec
test
jle
or
test
sub
dec
and
cli
cli
test
incl
push
and
out
mov
outsl
ret
es
pop
add
sti
jnp
adc
stos
mov
je
mov
mov
mov
push
shl
stos
push
scas
pop
lock
jnp
icebp
push
js
popf
les
in
inc
pop
mov
cmp
and
push
outsl
or
icebp
popf
insl
add
pushf
bound
fidivrl
or
in
jo
sub
loop
mov
sbb
clc
dec
les
cmpsl
aas
inc
push
inc
xor
sbb
mov
ret
in
scas
clc
dec
in
sub
nop
pop
cmc
push
orl
mov
daa
cmpsl
fsubs
adc
pop
aas
xchg
imul
mov
sbb
rcr
mov
xor
repnz
sbb
or
push
sub
xor
xchg
gs
gs
jae
int3
sub
jnp
mov
cwtl
test
scas
adc
repnz
aas
dec
mov
and
jno
push
lods
mov
or
and
rcll
push
sbb
or
rcr
rorl
dec
adc
jecxz
add
cmp
lock
inc
cs
mov
lahf
cld
lds
and
mov
test
cmpsl
and
cmp
mov
out
int
fadds
fwait
sbb
fisttpl
sahf
dec
mov
repz
movsl
jmp
xchg
xor
ret
pop
cmp
dec
push
mov
repnz
rolb
jp
or
out
pusha
adc
jmp
and
cmp
inc
lds
lret
testb
les
pusha
mov
cld
mov
adc
mov
das
sbb
jmp
add
sub
xchg
sahf
pop
lods
sbb
pop
cmp
aam
fsubl
mov
outsb
jg
mov
pop
stos
inc
mov
mov
cmpsl
inc
add
test
push
lea
cs
adc
shrl
pop
inc
jo
jg
cmp
sub
stos
inc
or
push
outsl
xchg
lret
popf
nop
subl
imul
sahf
jbe
or
lds
mov
push
adc
movsl
jo
lret
iret
xor
shlb
mov
aam
daa
xor
and
aas
sub
xlat
popa
cmpsb
clc
jns
cmp
roll
add
loope
dec
fcoms
inc
push
xor
dec
adc
xrelease
adc
push
jnp
jo
pop
inc
xchg
mov
mov
out
and
lret
or
aam
xchg
push
xchg
jge
xchg
dec
mov
adc
jmp
push
sub
xor
sub
sbb
cmpxchg
pusha
add
daa
sbb
xchg
pop
fisttpl
and
or
call
decl
mov
std
xor
jmp
lret
out
ret
adc
rcr
mov
jge
fdiv
push
gs
out
and
fldcw
pop
leave
or
lock
cltd
fisubl
jb
mov
rcr
cmpsl
jne,pn
jge
mov
mull
fmulp
jecxz
and
adc
fwait
fs
sub
adc
insb
jae
xor
pop
xchg
stos
cmovle
pop
adc
xchg
jle
fnsave
pop
insl
int
cmp
mov
stos
roll
pusha
jle
cmp
out
jns
inc
fwait
push
aas
jge
cmp
push
loope
orl
push
mov
fwait
and
lds
cmp
mov
dec
or
and
jno
outsl
dec
int
hlt
rolb
push
in
out
pop
or
shll
sbb
sbb
jle
mov
inc
mov
or
jo
cltd
lods
ficomps
push
cmpsb
repnz
cs
cli
pop
out
mov
lahf
popf
lds
add
lock
xor
jnp
xorl
push
jle
xchg
inc
je
push
icebp
outsb
imull
addr16
pop
rorb
push
jns
lea
stos
xor
mov
inc
imul
jnp
xchg
xchg
scas
aad
push
xchg
or
pop
fsubl
pushf
clc
pushf
push
mov
cmp
inc
adc
jae
orl
mov
mov
lds
stos
pop
mov
adc
pop
fcmovb
gs
in
data16
jge
mov
inc
popf
loop
les
push
aas
mov
push
inc
xor
enter
xchg
loope
stc
cmp
jg
inc
mov
rolb
fidivs
mov
and
fsubs
adc
push
gs
mov
mov
ss
testl
jae
add
jbe
xchg
pushf
dec
jnp
dec
sbb
adcb
dec
mov
adc
data16
mov
cli
cmp
je
pop
xchg
mov
jecxz
cltd
fisubl
mov
push
adcb
cmp
int3
or
test
test
and
xor
aaa
xor
popf
lea
mov
out
push
fdivrs
jnp
movsl
jbe
call
push
shll
outsl
xor
jno
mov
arpl
or
xlat
jg
sub
addr16
shll
mov
sub
ucomiss
int
jmp
shll
insb
sub
jne
adc
fstpt
pop
ret
das
cs
jb
call
popa
pop
lahf
mov
mov
xchg
xor
xorl
sbb
sbb
mov
mov
mov
ret
loop
movups
pop
fldenv
imul
int3
xchg
inc
mov
scas
ret
movsl
mov
ja
lds
inc
sbb
adc
pop
int3
or
rcll
mov
mov
mov
pushf
jnp
loop
imul
hlt
nop
xlat
push
movl
out
or
cltd
ss
bound
mov
pop
pop
cs
sti
ljmp
sbb
ficomps
xor
sbb
cmpsl
mov
pop
inc
test
iret
dec
lods
aad
mov
iret
loope
lock
mov
and
xor
stos
js
in
sbb
ret
outsl
add
aaa
jbe
xchg
js
or
jmp
lcall
movsb
ss
neg
jno
movsl
or
aad
call
lea
mov
jbe,pn
sti
ret
mov
gs
sub
movsb
cmp
jecxz
lds
sbb
xchg
mov
ja
jecxz
xor
fnstenv
push
dec
bound
pop
cmp
push
lods
xchg
jmp
mov
fsubr
and
push
loope
aas
mov
inc
jp
dec
imul
and
pop
push
and
inc
push
xor
push
push
shrl
jle
sahf
sbb
in
insb
test
rorl
aas
or
lods
inc
and
xchg
arpl
inc
in
mov
mov
int
sbb
in
or
jecxz
nop
push
repnz
in
lcall
sbb
xchg
jmp
std
fs
and
roll
pushf
push
in
mov
lods
sub
es
mov
imul
es
fstpl
jo
ret
insb
xor
mov
mov
jb
sbb
xor
xchg
sahf
xchg
js
sub
xlat
dec
cmp
scas
fcompl
aam
push
jp
mov
std
push
push
adc
lret
fcoml
add
sarb
and
mov
stc
inc
mov
mov
inc
bound
adc
andl
mov
or
xchg
add
pop
ljmp
mov
cmp
scas
pop
mov
jp
dec
in
sbb
jp
inc
inc
test
in
aad
inc
jb
out
rcrl
leave
add
xchg
xor
outsb
sbb
std
mov
xchg
repnz
push
mov
dec
add
jns
popa
fiadds
pop
push
mov
mov
jge
push
mov
popa
add
jp
ret
sbb
xorb
xchg
sub
out
adc
roll
lret
sbb
cmp
sub
fwait
in
lods
jmp
sti
sub
add
push
nop
dec
mov
mov
and
cld
mov
lea
fidivl
cmp
xchg
and
mov
mov
mull
push
xchg
iret
pop
mov
sub
xchg
push
push
push
into
cmpsl
xchg
jb
sarb
fdivs
jge
cld
xlat
jnp
lods
out
pop
xchg
ret
sub
in
cmpsl
mov
mov
cmc
mov
mov
test
push
push
push
cltd
cmp
aad
add
cli
jg
mov
adc
pop
sub
bound
adc
int
or
inc
adc
xor
sbb
bound
xchg
ja
nop
jbe
test
lcall
lcall
test
add
int
subb
xor
jp
outsb
cltd
cmp
repz
dec
mov
ja
inc
stos
ss
hlt
ljmp
iret
pop
sub
and
or
cmp
jp
outsb
mov
ret
ret
mov
aaa
xchg
push
cli
mov
lock
ficoml
xchg
hlt
and
repz
push
fyl2x
cmp
inc
inc
cltd
jb
loope
sbb
mov
adc
pop
sbb
in
pushl
scas
gs
push
and
push
jle
testl
out
xor
pop
sbb
mov
es
dec
lea
mov
sbb
jno
inc
adc
xchg
sub
inc
movsl
movsb
or
lcall
mov
divb
or
dec
int3
push
jbe
sti
lods
sbb
mov
adc
lret
mov
or
pushf
mov
sub
jae
stos
imul
xor
cmpsb
fldl
ss
adc
jne
or
lds
divl
inc
xchg
mov
cwtl
adc
jo
pusha
das
fs
cld
sti
mov
test
jp
inc
neg
mov
jecxz
cmpsl
popf
std
test
push
dec
adc
add
mov
jb
mov
imul
lds
out
f2xm1
loop
ror
xchg
xchg
sar
sub
push
repnz
mov
rorb
push
xchg
xchg
add
dec
scas
push
rcrl
mov
inc
aam
aas
dec
lock
push
push
lock
mov
fidivrl
mov
lea
fisttpl
and
jnp
or
and
jmp
ss
pop
addb
leave
jne
inc
pop
daa
test
test
sbb
flds
insb
jnp
jecxz
movsb
and
es
jmp
jns
mov
pop
inc
xchg
sbb
imul
mov
or
cmp
sbb
std
adc
fwait
xor
lret
pusha
jb
xlat
mov
call
aad
rcll
cmp
lds
pop
cmova
pop
xor
or
iret
out
xlat
push
inc
pop
repnz
sti
dec
inc
push
mov
aas
daa
push
movsl
jmp
add
stos
push
ss
in
adc
and
jb
sub
mov
or
xchg
add
or
xor
cmc
arpl
and
daa
or
repz
ljmp
ret
adc
jecxz
int
popa
aad
std
lds
add
jns
dec
fsubrs
pop
jmp
jge
jmp
bound
sbb
jmp
pop
lret
cmpsl
loope
test
dec
out
lret
inc
les
jbe
sbb
pop
jmp
pop
iret
std
push
pop
popw
pop
loop
xchg
and
jmp
clc
sub
enter
icebp
jae
cwtl
popa
jae
fadds
mov
mov
mov
mov
ret
mov
inc
sbb
in
mov
test
pop
in
stos
idivl
xor
fisubrl
and
mov
cs
or
cmp
push
sarb
pushf
fisttps
or
divb
xorl
test
inc
mov
xchg
mov
out
jl
jb
sbbb
jl
mov
jno
outsb
leave
iret
xchg
sahf
hlt
loop
pop
jnp
xor
addr16
pop
outsl
mov
jp
xchg
jg
sbb
notl
ds
jno
dec
inc
and
xchg
cmp
int
in
call
ds
jge
sarb
pop
idiv
scas
push
or
or
leave
addr16
rcpps
fsubrl
pop
sbb
inc
sti
inc
fs
js
arpl
cmp
nop
dec
or
push
imull
orl
mov
daa
pushf
xor
dec
loopne
and
clc
push
mov
movsb
cwtl
aad
ja
leave
sub
jge
mov
cmpl
mov
push
push
adc
mov
punpckhwd
int
mov
adc
mov
cmp
ljmp
jle
sbb
aad
pop
fwait
mov
jbe
js
sbb
into
scas
ficompl
fldt
sbb
mov
push
movsl
mov
scas
add
sub
popa
popf
xor
stos
lahf
sbb
call
rorb
outsl
shl
dec
pusha
mov
scas
sub
inc
sub
add
in
xchg
lock
push
out
out
jle
pop
test
sbb
lods
cmpl
fwait
aam
in
xorb
xor
insb
jo
rolb
dec
ds
dec
test
adc
jge,pn
jmp
fildll
inc
rorb
pop
or
dec
add
jae
or
movsb
cli
lods
and
add
out
xchg
push
xchg
xchg
fbld
jo
dec
adc
pop
adc
push
lods
dec
sub
adc
cld
push
arpl
aad
adc
and
repnz
fisttps
mov
jno
fwait
xchg
fdivr
dec
sub
ret
call
sbb
and
sbb
cmc
mov
and
mov
int
xchg
into
sbb
lcall
std
mov
fs
pop
xchg
push
addr16
and
add
xlat
popf
xor
pop
in
adc
test
imul
sahf
sbb
testl
sub
xchg
leave
pop
shlb
xchg
sbb
pushf
popf
push
repnz
lahf
fsub
bound
nop
pop
rclb
mov
add
pop
mov
jno
dec
insl
negb
in
pop
inc
jbe
adcl
jmp
cld
ljmp
mov
xchg
xor
jae
xchg
xor
std
cmpsl
test
clc
mov
dec
xchg
xor
push
shlb
int
dec
jge
push
aam
scas
rcrl
xchg
mov
inc
jge
and
sub
rorl
dec
sbb
divb
sti
pop
mov
inc
or
sarl
jmp
mov
fs
iret
sbb
sar
out
sbb
ds
lea
aaa
movsb
pusha
xchg
jo
dec
je
inc
jns
adcl
das
lcall
insl
jns
notl
js
adcl
mov
fs
cltd
ficoml
xor
push
lret
push
xor
inc
repz
gs
pusha
stos
std
sub
mov
cwtl
movsl
rclb
rolb
pusha
mov
and
ljmp
cmp
movl
test
dec
mov
push
sbb
test
and
repnz
inc
dec
shlb
pushf
call
outsl
mov
lahf
fists
mov
pusha
popa
mov
test
push
hlt
xchg
xor
ret
mov
cmp
jmp
pop
lret
pop
repnz
loop
rol
cld
push
push
pusha
stos
mov
cmp
adc
ficoms
xchg
in
adc
imul
in
scas
in
ret
dec
mov
hlt
add
divl
push
jl
repz
lods
and
lret
pop
pop
mov
ficoms
sub
aam
mov
cld
sbb
pop
and
add
dec
bound
outsb
jnp
pop
adc
gs
cmpsl
push
mov
rclb
lcall
adc
gs
scas
cmc
cmc
pop
jnp
add
xchg
pop
mov
lahf
inc
dec
push
aas
nop
movsl
scas
cmp
lock
inc
daa
and
mov
mov
xchg
push
push
dec
add
scas
out
jl
aad
jecxz
ret
adc
pop
loopne
sbb
idivl
mov
add
add
mov
ret
test
rol
add
cmp
imul
pop
xchg
push
and
pop
lods
loopne
out
mov
adc
call
cs
adcb
andb
jge
loope
pop
loop
push
jb
cs
sbb
cli
mov
enter
mov
pop
test
enter
stc
hlt
mov
ljmp
pop
xchg
mov
xchg
sahf
popf
jnp
inc
data16
rorb
jp
mov
into
xchg
rol
inc
cs
sub
mov
inc
mov
scas
add
mov
flds
pop
cmpsl
insl
mov
pop
loop
dec
movsb
data16
add
in
gs
movsb
lcall
lods
mov
ds
jle
inc
push
js
clc
jae
jns
jp
cmp
je
out
jle
cmpsb
sub
sbb
xor
jmp
add
and
lahf
in
push
jl
jb
sub
stos
pop
notl
outsl
pop
lahf
or
jl
lcall
inc
ss
stos
pop
fcomip
lcall
pop
aam
add
cwtl
rcr
sub
lea
stos
push
add
scas
pop
sbb
cmp
insb
inc
lods
test
lock
mov
data16
sbb
xchg
mov
fisttpl
pop
imulb
mov
daa
lcall
or
fnstenv
loope
mov
add
or
orb
xchg
sbb
pusha
fwait
xor
push
ret
inc
sbb
sbb
mov
xchg
push
fsubs
in
dec
jmp
cmpsb
mov
dec
dec
mov
out
test
sub
clc
loope
adc
adc
pop
mov
shlb
test
and
jg
mov
rcrw
movsb
fcomps
sbb
stos
nop
jb
dec
in
adc
add
adc
add
or
xor
xor
lcall
dec
pop
aam
jl
cmpsb
daa
xor
push
adcl
scas
pop
subb
jg
stos
cli
ss
xchg
pusha
ja
std
adc
mov
pop
xor
dec
mov
inc
add
rcl
mov
ret
add
push
andl
les
add
inc
aad
stos
dec
and
xor
mov
loop
jo
mov
daa
in
call
mov
cmpl
dec
mov
fisttpl
sbb
cmp
repz
loopne
inc
stc
fildll
mov
int3
enter
out
scas
fimull
repnz
adc
mov
mov
xchg
aam
sbbb
cmp
xchg
add
cltd
aaa
mov
scas
add
or
int3
sbb
dec
repnz
dec
xchg
inc
jb
cmp
repz
xchg
cmpsb
ret
inc
add
ja
imul
sub
test
add
fdiv
aam
test
inc
out
jbe
pop
dec
cmpsl
dec
roll
aad
jno
stos
pop
in
int
xchg
stos
jb
adc
ret
orb
arpl
pop
aas
sbb
fiadds
jne
lods
adc
andl
xchg
lock
and
enter
or
push
dec
xchg
mov
std
sbb
loope
add
or
popf
and
mov
add
or
mov
cmp
lock
jp
test
and
or
push
clc
jg
xlat
mov
cmp
movb
je
loop
xorl
enter
adc
and
and
push
pop
rcll
mov
dec
add
loop
scas
dec
xorl
and
pslld
push
mov
lea
ljmp
pop
cmp
cmc
stos
aam
cmp
mov
xchg
inc
cmp
pusha
mov
fnstsw
mov
xlat
sub
lahf
sub
sub
mov
mov
pop
mov
push
adc
mov
add
in
pop
push
jmp
hlt
mov
and
xchg
adc
sbbb
mov
stc
popa
pusha
sub
and
movsl
inc
sbb
xchg
mov
loop
mov
cmpsb
xor
add
ja
ss
pop
out
push
add
pop
out
lods
xor
aad
xor
fwait
sub
jmp
sarb
and
pop
push
out
sub
cmpsb
cmpsb
test
or
add
sub
cmp
pushf
sub
sbb
dec
call
loopne
pop
out
mov
adc
adc
add
or
mov
in
loopne
cmp
fs
cltd
jno
sub
sbbb
popa
ficoml
dec
jge
data16
icebp
sbb
mov
fisttpll
shrb
shl
xchg
sbb
mov
sub
fistps
and
mov
cmp
fdivs
outsb
les
add
shrl
out
mov
in
sub
mov
dec
addr16
imul
clc
stc
repnz
sti
test
pop
mov
xchg
in
into
dec
icebp
inc
pop
ficompl
or
add
loop
sti
mov
jbe
jbe
aad
fldl
sub
cmp
icebp
mov
cs
aam
or
xchg
dec
in
sub
out
int
jl
push
cmp
lret
popf
ljmp
or
mov
outsl
fdivs
movsl
bound
jp
call
gs
adc
xchg
sbb
out
sbb
jne
adc
xchg
mov
mov
adc
fisubrs
jnp
cmp
movsb
pop
call
je
mov
sbb
pop
xchg
pushf
stos
jno
cmp
xor
ret
jb
arpl
es
pop
stc
fcomps
xor
jg
int3
test
roll
lea
sahf
inc
pushf
mov
mov
sarl
add
mov
stos
rcr
js
jb
test
push
scas
mov
and
pop
andb
and
stos
out
es
pop
out
push
test
stc
xor
mov
ret
call
loope
add
cmpb
lret
ret
out
bound
sub
int3
inc
insl
rcll
cmpsb
inc
or
lods
fwait
shr
rcrl
popa
js
orb
mov
inc
fmuls
xchg
sbb
push
push
pushf
loopne
and
jne
cltd
or
and
mov
and
jb
sti
stos
dec
ret
xchg
mov
aad
scas
sarl
lea
push
jne
nop
xchg
neg
push
cmp
fnstenv
addr16
repnz
mov
test
stos
adc
xor
fisubl
inc
jno
pop
fcompl
faddp
stc
repz
pop
les
jle
jo
ljmp
cmp
mov
pushf
jle
ret
push
call
cltd
mov
test
shrl
insb
out
leave
gs
mov
cmpsb
das
mov
ficompl
mov
adcl
pop
jg
das
loopne
mov
mov
and
sub
clc
cmpb
mov
mov
inc
ret
call
aad
inc
mov
negl
scas
inc
sti
scas
dec
mov
push
and
inc
ret
lds
xchg
xor
push
enter
enter
or
insl
lcall
gs
and
xchg
push
testb
aam
xchg
push
cwtl
mov
jno
aam
bound
xlat
fwait
je
push
or
stos
jge
imul
idiv
dec
mov
lea
xor
decl
sub
dec
push
fcmovbe
pop
push
and
fidivl
ficomps
and
inc
and
das
xchg
add
pusha
lock
or
rcrl
push
adc
mov
xor
clc
ret
sbb
sub
das
adcb
sbb
sub
ret
mov
dec
jmp
pop
push
insl
lahf
jecxz
xor
jns
out
rclb
popa
and
and
das
enter
sarb
push
fwait
xchg
int
sub
test
setb
les
push
popf
clc
push
push
add
ljmp
add
cmpsb
add
cmp
fwait
pop
inc
mov
sbb
or
push
and
xlat
or
insb
push
ficompl
mov
sbbl
mov
adc
lcall
mov
mov
jb
push
leave
scas
mov
ljmp
sub
sti
xchg
repnz
bound
jbe
cs
js
in
pop
cs
test
je
add
inc
jb
popa
add
cli
or
xchg
push
out
bound
popf
xor
stc
shr
mov
push
clc
clc
mull
das
lock
jae
nop
mov
aad
sub
jo
rorl
roll
loope
adc
rolb
inc
loope
inc
xchg
lods
insb
adc
mov
clc
das
inc
je
pop
mov
ja
sub
notl
rcrl
addb
and
xchg
imul
cmp
pop
out
inc
mov
lea
sub
out
jge
mov
cltd
fisubl
or
cmc
inc
ficompl
or
ljmp
cmp
pop
fsubrl
cmp
xchg
or
xor
sbb
dec
or
and
mov
mov
pop
out
fsts
dec
adc
jmp
jne
and
negl
dec
sub
mov
iret
lret
vpmaddwd
mov
sahf
movsl
mov
dec
sub
les
inc
cwtl
mov
adc
jge
mov
pop
aas
fldcw
mov
test
es
dec
add
insb
xor
cmp
outsb
or
insl
xor
mov
je
pushf
repz
aas
xchg
cmp
insb
push
scas
xor
jp
in
test
mov
stc
outsl
xchg
mov
jmp
dec
lds
int3
adc
stos
fdiv
dec
xchg
adc
push
out
aaa
mov
aas
pop
ret
adc
inc
cmp
sarl
xchg
and
into
mov
fadds
push
lds
aad
repnz
mov
xor
shll
repz
xchg
cltd
test
pop
out
xor
pop
into
mov
insb
cmp
pop
xor
fisttpll
ds
cmp
mov
cmpsb
xchg
stos
push
dec
addl
repz
pop
sub
push
js
xchg
rol
or
jns
mov
std
lods
sbb
cmp
mov
sub
out
pop
rcll
adc
lds
xchg
in
cld
out
xor
loopne
mov
push
xchg
insb
or
arpl
les
insb
sub
imul
daa
iret
add
dec
aas
cmpsl
test
jns
stc
loop
popa
ficoms
inc
cwtl
rep
and
lods
sbb
jo
insl
lret
inc
ret
xor
mov
in
nop
sbb
lcall
ljmp
mov
add
out
pushf
jns
popa
jb
and
test
orpd
ret
xchg
xchg
int
or
cmp
inc
out
mov
dec
call
std
inc
or
push
lods
movsb
jae
jns
jecxz
in
jne
insl
and
in
scas
dec
scas
and
cwtl
dec
push
mov
xchg
movsl
arpl
push
and
inc
and
inc
ror
ds
xchg
sbb
in
fnstenv
jae
and
lret
sar
andl
add
mov
jmp
and
popf
cli
dec
inc
mov
xchg
jge
test
shll
clc
ret
loope
shr
adc
push
or
dec
xchg
bound
pop
dec
fwait
icebp
jmp
js
cs
push
add
or
sub
out
ljmp
fisttpl
pop
xchg
gs
jge
xlat
out
sub
sbbl
es
xchg
or
clc
xchg
comiss
xor
rclb
inc
add
iret
cmp
pop
fs
repz
dec
mov
inc
pop
mov
mov
fucomp
mov
xchg
xchg
dec
in
mov
dec
jmp
mov
iret
sub
sbb
rcll
dec
xor
add
jno
scas
fiadds
sub
into
and
sub
mov
cwtl
push
pop
leave
push
iret
pop
out
mov
mov
test
cmp
test
mov
jle
jns
or
imul
fistpl
ds
daa
scas
fcmovu
cmp
xor
cld
das
push
jne
pusha
xchg
jl
divb
rol
sbb
je
push
scas
js
xor
clc
cmp
mov
insb
sti
sbb
mov
cwtl
in
jg
cmp
ljmp
pop
out
lods
into
jnp
lret
push
or
xor
cli
arpl
push
mov
adc
jmp
jbe
out
lods
fistpl
adc
inc
push
push
mov
pop
enter
cmp
mov
push
fnstenv
jp
sub
adc
cli
pop
mov
adc
mov
cwtl
add
repnz
mov
js
adc
fmull
int3
jbe
addl
les
subl
or
push
push
xchg
ja
pop
mov
xchg
sub
aam
faddl
ret
xchg
stos
sbb
roll
nop
lahf
jge
mov
jp
mov
cmp
leave
fcoml
push
cs
leave
orl
push
cmpsb
adcb
into
call
sub
push
push
jl
mov
arpl
lret
mov
aaa
outsl
into
out
repnz
nop
loop
outsb
xor
jno
jne
xor
or
popl
push
inc
mov
add
jns
adc
push
xor
sub
ror
push
jmp
repz
push
push
arpl
je
in
jne
pop
xchg
dec
nop
mov
mov
mov
lds
hlt
pop
fdivrp
mov
sbb
add
daa
and
xor
mov
les
enter
call
xchg
hlt
test
add
sbb
loop
das
mov
push
loopne
mov
push
jo
in
jae
outsl
orb
stc
ljmp
stos
rolb
inc
jno
stc
in
cmp
jl
insb
push
xchg
push
pusha
push
faddl
or
mov
or
push
inc
add
add
inc
iret
xchg
lret
jno
mov
ja
inc
adcb
jmp
xchg
sbb
test
pop
dec
jg
jae
dec
iret
dec
call
push
jb
js
fldcw
daa
insb
out
imull
push
fs
mov
or
push
sbbb
lock
popf
ret
mov
and
mov
sbbl
push
aaa
dec
adc
or
test
aas
cmp
push
xlat
call
mov
repnz
xchg
int3
test
push
leave
pop
sti
fcompl
ja
sub
dec
lret
pop
mov
test
and
jle
sub
sub
ja
mov
add
xor
add
push
inc
int
out
jae
into
out
in
xchg
rolb
pushf
pushw
xlat
and
push
popa
pop
repnz
cmp
in
inc
add
fisubl
mov
es
into
adc
fnstsw
inc
int3
inc
nop
cmc
jns
mov
add
lret
cmpsb
popa
sub
dec
sbb
push
orl
push
xor
icebp
fwait
or
sbb
mov
xor
cltd
addr16
out
clc
jp
lcall
sarl
ret
lock
adc
mov
jge
adc
xor
xor
negb
daa
clc
loop
into
gs
sti
dec
mov
pusha
mov
es
ficompl
cli
ret
enter
mov
cmc
aam
inc
mov
daa
outsl
adc
pop
mov
lock
xor
xchg
jl
jp
pop
mov
adc
pop
sub
adc
mov
mov
fisttpll
jne
sub
adc
aam
mov
dec
inc
ljmp
jne
cmp
int3
mov
add
add
inc
out
getsec
ja
push
and
lods
fistpll
pop
jmp
out
adc
or
jne
sbb
into
repnz
mov
shrl
pop
or
imul
lcall
jmp
mov
adc
push
movsb
push
jecxz
mov
or
cli
orl
cmc
stos
lods
jl
xlat
xchg
inc
lret
cmp
andl
xor
mov
test
in
mov
lcall
mov
inc
mov
movsb
ds
sub
shr
push
fdivrs
mov
and
lcall
data16
sub
push
out
add
or
jle
pop
and
out
push
cltd
ds
bound
xor
jb
mov
jns
mov
add
lea
dec
dec
xor
into
mov
inc
outsl
leave
xchg
adc
sub
xor
outsb
jecxz
push
in
cmp
xchg
xlat
jae
mov
dec
mov
jae
mov
dec
fstps
decb
and
xor
lods
sbb
shrb
push
loopne
cmp
push
loop
rcrb
push
ret
sbb
mov
jmp
jecxz
cwtl
es
sbb
and
dec
xor
adc
dec
inc
mov
jns
jne
or
enter
mov
mov
movsb
ret
inc
add
lret
or
adc
stos
test
rol
or
xchg
mov
and
lret
mov
sbbb
xorb
mov
adc
or
sub
rorl
dec
es
dec
sahf
pop
outsl
jno
sbb
lock
cmp
or
int
adc
cmp
push
inc
mov
fs
insb
fisubl
into
popf
imul
jbe
mov
fisttps
adc
rclb
inc
cmp
les
mov
xchg
jne
push
clc
out
sub
jg
insl
rolb
fiadds
cmp
iret
pop
cmp
xor
add
adcb
idivl
mov
scas
stos
into
sbb
pop
lods
pop
iret
xor
inc
push
aaa
into
pop
loop
stos
push
js
pop
mov
pop
xchg
pop
or
mov
xchg
cmp
les
arpl
fbld
inc
xchg
insl
bound
into
pop
enter
pop
cmp
sbb
pop
mov
scas
scas
nop
iret
xchg
pushf
ljmp
or
shrd
dec
xor
sub
imul
repz
fstps
and
fimuls
push
repnz
jecxz
xchg
cmp
mov
fcmovnbe
or
lods
push
out
popa
push
repz
and
mov
je
xchg
push
mov
xchg
sbb
arpl
mov
mov
test
sbb
shrb
or
jae
xorl
pop
js
scas
adc
cli
pop
dec
cmp
pop
push
xchg
test
scas
out
xor
cmp
pop
inc
pushl
pusha
sbb
aas
loope
cli
jbe
push
xchg
rorl
addr16
pop
inc
ret
sub
test
test
mov
pop
or
scas
xchg
jmp
jno
cmp
mov
adc
adc
or
xchg
mov
pop
pop
outsl
repnz
fildll
push
mov
cmpsl
push
sbb
adc
test
cmp
call
pop
ret
leave
and
into
lahf
xchg
pop
insb
dec
mov
add
cmpsl
dec
lods
outsb
outsb
mov
pop
enter
stc
outsl
jg
lock
and
xchg
mov
push
and
add
add
stos
inc
pusha
jl
dec
rol
cmc
inc
xor
cs
dec
pop
mov
jns
in
pop
leave
jb
rol
cmp
sub
das
mov
not
fidivrs
stc
dec
cmp
mov
int3
jne
pop
enter
out
xor
xor
repz
aad
ja
lret
dec
jae
shrb
test
pop
adc
inc
cmp
in
fists
sbb
adc
cmp
xchg
lds
cmp
scas
aam
mov
sub
dec
xchg
jb
push
adc
sbb
in
ljmp
enter
push
stos
loopne
aad
or
adc
lret
insl
stc
aad
push
jns
in
in
dec
sbb
loop
mov
pop
cmp
and
sbb
and
and
adc
aam
add
iret
and
psubusw
cmp
add
pop
mov
jl
aaa
jns
inc
jns
xchg
jne
testl
mov
jbe
mov
movsb
test
push
cmpsb
inc
adc
pushf
movsl
cwtl
xchg
jg
push
shll
scas
addr16
jle
mov
popf
cmp
into
popf
push
sub
lea
cwtl
addr16
je
out
jo
fcoms
cld
sahf
cmp
lahf
sbb
test
or
test
fmul
call
pop
rol
inc
orb
mov
aaa
shr
ljmp
movsb
dec
cmp
nop
jge
and
lea
mov
jne
call
mov
inc
jg
fisttps
les
ss
cwtl
ljmp
dec
xor
roll
adc
sub
mov
inc
aaa
fcomi
fcmovnbe
mov
clc
out
push
repz
fisubs
pop
sub
push
xchg
jo
mov
mov
cmpb
frstor
mov
inc
push
ret
dec
and
pusha
jmp
mov
xor
popa
mov
push
inc
insl
pop
adc
adc
fistpll
jl
je
aaa
jb
or
push
cltd
jae
test
and
xor
test
push
jecxz
mov
or
or
js
das
rclb
dec
sbb
jns
push
mov
ret
les
data16
shrl
aas
fnstsw
cmp
jmp
daa
nop
mov
cmovne
xchg
push
imul
mov
cmc
cmp
jg
nop
sub
in
mov
cwtl
out
sub
adc
shl
sbbl
int3
mulb
aad
loope
xchg
mov
mov
fwait
stos
mov
jb
cmp
and
push
test
int
jp
gs
scas
jle
add
jnp
xchg
cmp
xor
imul
mov
push
mov
cmp
dec
cmp
into
mov
out
stos
fldcw
int
daa
int3
outsl
rorb
pop
mov
add
pop
lret
mov
pop
xor
mov
iret
dec
gs
gs
fsubrs
hlt
mull
cmc
test
or
icebp
mov
pop
mov
popf
sbbb
cmp
std
sbb
or
add
push
sbb
mov
mov
jae,pn
stos
xchg
pusha
pop
inc
adc
xchg
cmp
and
cld
lret
fcoms
rcr
jno
insb
shlb
fsub
movsb
aas
fs
and
std
pusha
adc
push
lds
cmp
adc
push
arpl
ret
adc
or
mov
lock
push
dec
fs
ds
mov
fildll
sub
inc
sbbb
mov
xchg
pop
mov
push
pop
icebp
add
add
in
pop
pcmpeqd
test
sbb
das
and
jno
mov
add
or
pop
call
out
ss
lcall
xchg
leave
xor
push
pop
add
hlt
ret
into
jo
mov
insl
inc
sbb
cwtl
add
pop
push
xor
jle
mov
pop
mov
xlat
dec
mov
ja
add
jae
xchg
pusha
cmp
adc
mov
xchg
lods
pop
sti
push
ds
loopne
ret
cltd
repnz
or
xchg
pop
jmp
jnp
inc
decb
std
mov
ret
iret
xor
testb
bound
pop
cmp
loope
jmp
add
sahf
jge
daa
mov
jns
shlb
jno
inc
subb
mov
sub
cltd
fwait
add
std
iret
sbbl
inc
test
inc
mov
jbe
cltd
test
pop
imul
xor
divl
loopne
cmc
aas
ret
or
nop
sahf
std
xor
loop
aam
mov
and
lcall
add
outsb
test
imul
imul
sbb
xor
mov
repz
dec
cmp
mov
jmp
aaa
inc
push
imul
call
or
pusha
fcos
add
push
aas
push
aas
add
mov
movsb
xchg
repz
lcall
imul
out
sbbb
xlat
outsl
jecxz
sbb
and
mov
adc
push
cwtl
pop
pusha
jle
test
nop
push
push
xchg
sarb
fs
std
xchg
and
dec
lea
lds
aam
push
mov
cmp
pop
cmp
in
adc
mov
or
xchg
imul
or
orl
push
pop
enter
mov
push
and
imul
sbb
mov
imul
and
push
jbe,pn
cmp
push
and
sub
es
lods
xchg
ds
ljmp
push
mov
mov
mov
popl
mov
mov
lds
push
mov
jp
mov
mov
in
sbb
sub
dec
push
out
xor
out
stos
add
shrb
mov
jns
sbb
dec
xorl
stos
fwait
cmpsb
addr16
adcb
icebp
js
test
mov
mov
dec
ljmp
sub
lods
pop
adc
push
sub
bound
lds
mov
push
and
adc
ds
mov
xchg
cmp
aas
and
jecxz
out
and
sbb
ja
mov
in
mov
mov
pop
cmp
mov
pop
nop
xchg
fidivs
leave
cmp
adc
push
sub
mov
and
fmull
aas
mov
rcl
arpl
push
mov
jle
cmp
popf
lods
scas
and
aaa
jns
mov
mov
add
inc
push
loopne
cmp
push
dec
pop
adc
pop
xchg
mov
ret
gs
popa
aad
xor
add
outsb
ljmp
xchg
mov
loopne
mov
hlt
jmp
pop
int
in
dec
call
outsb
sbb
sarb
insl
test
lods
lret
lea
pmuludq
arpl
ljmp
sarb
iret
movsl
psubsb
mov
jno
inc
rolb
cmc
push
repz
jbe
ljmp
icebp
mov
adc
stos
push
jbe
int
sahf
cmp
fsubs
and
lods
and
inc
inc
cli
jae
repz
inc
and
pop
mov
int
xchg
or
jp
or
int3
and
repnz
adc
stos
push
cltd
push
ret
popa
mov
mov
ret
out
icebp
push
out
fstl
mov
mov
xor
hlt
ljmp
and
imul
testb
xchg
jns
pushf
aaa
daa
lods
cmp
aad
loop
mov
aaa
push
stos
sub
and
stos
mov
in
mov
sbb
mov
addr16
pop
sub
sar
mov
mov
cltd
ljmp
je
rclb
pop
sarl
aaa
enter
sbb
cmp
sahf
pop
inc
push
mov
mov
mov
pop
dec
xor
mov
jle
iret
insl
inc
inc
mov
mov
mov
mov
jmp
xchg
adc
jg
jmp
jnp
out
aaa
inc
xor
test
or
push
bound
cs
mov
gs
jp
sub
dec
shll
in
and
sub
push
rcl
into
jo
and
inc
xchg
bound
jecxz
out
push
fnstsw
and
mov
cld
pushf
mov
jns
pop
inc
xor
pusha
mov
shlb
cmp
imul
or
out
pop
mov
xor
pushf
adc
fsts
jo
mov
test
jo
fsubs
dec
dec
xor
es
mov
incl
push
mov
rcr
call
adc
cltd
hlt
cmc
je
dec
xchg
or
in
aaa
jne
jp
dec
jge
es
lahf
push
sahf
pop
mov
and
into
test
popa
or
pushf
in
cmc
loopne
rcr
xor
add
stc
in
xor
jnp
adc
and
imul
in
sub
fsubrl
xlat
push
ljmp
dec
push
icebp
pop
sub
cmpsl
mov
lea
pop
adc
ds
mov
je
push
or
ret
fsts
aas
push
xchg
dec
mov
out
pop
das
fmuls
add
cmc
jmp
push
outsl
push
xchg
outsl
jecxz
jae
cli
jle
fwait
push
leave
mov
test
ljmp
mov
jne
mov
mov
push
aas
sbb
into
jp
push
jle
push
lret
push
mov
pop
jns
push
mov
addr16
rorl
sbb
push
test
negl
xchg
adc
aam
scas
lds
in
stos
add
leave
or
xchg
xor
sarl
insb
stos
out
xchg
lret
push
lods
hlt
int
mov
xchg
push
xchg
icebp
ds
pop
stc
adc
add
out
or
mov
push
clc
mov
fnstcw
loop
add
pop
mov
push
cmpsb
jo
xchg
push
dec
movsl
frstor
and
imul
mov
push
je
add
in
and
cmp
scas
and
lea
sahf
and
into
out
rolb
stos
inc
dec
lcall
inc
jo
ja
jecxz
out
insl
dec
movsl
mov
mov
clc
pop
repz
push
leave
push
cmpsb
jle
lret
adc
jno
aas
jmp
rorb
fdivp
push
stos
std
and
shlb
mov
out
and
fcomi
mov
jmp
addr16
addr16
xchg
inc
aad
sbb
test
or
dec
add
sarb
xchg
pop
inc
pop
and
jp
sbb
pushf
int
mov
dec
filds
inc
lds
daa
mov
ds
xchg
jg
loope
clc
xchg
xor
das
mov
outsl
dec
xchg
mov
push
jg
cs
sti
xor
jle
sbb
lods
xchg
sub
pop
sar
push
mov
sbb
cmc
mov
add
pushf
imul
and
pushl
mov
arpl
repnz
repz
inc
int
mov
ret
jnp
sub
repnz
push
or
in
and
movsl
fmuls
mov
testb
not
aaa
dec
cmp
jmp
nop
cmp
pop
jns
push
inc
mov
mov
call
mov
movsb
dec
ja
mov
mov
cmp
lds
pushf
xchg
jne
pop
ret
cmp
gs
fstps
mov
mov
xor
xor
jp
mov
jmp
les
out
adc
lods
mov
sbb
jbe
es
dec
mov
mov
dec
rol
fbld
repnz
aaa
pop
jmp
adcb
add
xchg
fs
sub
imul
shll
cltd
addr16
dec
aad
ret
xchg
or
fnstsw
inc
xor
add
sub
push
add
shlb
pop
add
stc
aaa
mov
fists
add
mov
xor
pop
in
pop
mov
adc
mov
jns
cmp
fcomp
jmp
lock
insl
repnz
jb
mov
xchg
push
pop
into
setg
out
rorl
or
pusha
es
iret
mov
add
jno
ret
stos
lret
jge
and
scas
std
pop
int
mov
add
inc
imul
push
mov
cmpsl
cmpsb
mov
mov
lods
scas
or
jl
mov
adc
mov
push
popf
out
fsubrs
outsb
push
icebp
dec
int
jmp
inc
and
sub
dec
push
out
mov
fiaddl
xchg
sarb
cmp
sbb
popa
xchg
shll
add
add
mov
jecxz
pusha
cld
add
mov
int3
xor
ljmp
flds
adc
sbb
cmp
ds
dec
jecxz
cwtl
mov
mov
adc
sbb
xor
bnd
gs
xlat
enter
inc
inc
out
mov
fucomip
dec
xchg
js
rclb
sub
mov
and
leave
lret
lods
rorl
dec
insb
pop
adc
xchg
imul
cmp
pop
cli
push
pop
loop
je
ret
mov
loopne
and
push
or
xor
or
xlat
push
mov
sub
imul
inc
loope
mov
xchg
out
mov
fs
incb
int3
and
outsl
loop
inc
xor
xorb
cwtl
divb
pop
stc
jo
lahf
mov
pop
add
xchg
sbb
push
mov
xor
sub
add
xchg
push
mov
into
and
popa
mov
ficoms
in
jl
jle
sub
dec
mov
push
push
aaa
mov
inc
adc
jns
pop
mov
jmp
cmpsb
sar
rcrb
addl
adc
call
mov
lret
adc
je
int3
loopne
rcll
mov
popf
mov
mov
test
pop
xor
jno
fs
push
addb
movsl
mov
shrb
sbb
shlb
xlat
stos
adc
aas
add
movsb
cmp
inc
ficoms
cmp
clc
call
add
out
cmpsb
sahf
lcall
aam
pushf
clc
or
or
stos
stos
mov
inc
loop
notb
inc
jnp
inc
scas
mov
sbb
mov
aas
clc
push
add
sahf
out
push
xor
test
and
scas
adc
or
mov
cld
dec
dec
add
or
cmp
andb
adc
ljmp
sub
pop
neg
sbb
mov
stc
lods
pusha
sbb
arpl
adc
push
xchg
jno
mov
pop
mov
cmp
pop
lret
pop
pop
or
rsm
adc
hlt
dec
clc
jle
and
push
adc
cmpsl
mov
jecxz
std
dec
movsb
mov
and
push
and
sub
inc
mov
repz
xchg
sub
dec
mov
sub
push
scas
xchg
sarb
mov
sysret
xchg
cld
add
jnp
clc
ret
pop
or
insl
jnp
aaa
push
and
stc
es
iret
mull
push
sarl
das
jno
icebp
pop
leave
jmp
xor
out
in
jb
je
xor
pop
shrl
pop
or
add
push
cmpb
pop
cmc
dec
mov
inc
jo
inc
movsl
repz
ficompl
jo
dec
mov
pushf
jae
mov
test
pop
js
inc
inc
stos
cltd
cmpsb
aas
ja
add
xor
inc
out
jge
push
popa
aam
push
repnz
mov
push
outsl
cld
dec
sbb
das
sbbb
loopne
or
jmp
push
xor
xchg
sbb
mov
gs
movsl
mov
or
jb
mov
les
lret
jb
jmp
sbb
fwait
loope
mov
dec
js
and
aas
stc
sbb
fisubs
jae
push
out
jne
mov
sub
int
lds
ja
aam
hlt
mov
fmuls
outsb
pop
mov
push
adc
inc
clc
jg,pn
repnz
push
pop
lods
add
cmp
mov
sub
repnz
into
dec
adc
ret
dec
adc
mov
inc
mov
mov
sub
and
push
jns
inc
scas
pop
dec
mov
sbb
aam
inc
jecxz
adc
or
ret
cmp
fstpt
fbstp
add
xor
pop
lcall
rcr
and
jnp
push
pop
rol
call
scas
and
leave
cmp
cld
dec
and
mulb
mov
mov
ljmp
addr16
add
scas
jle
hlt
cmpsb
sub
cmpsl
ret
mov
aam
gs
pop
mov
cwtl
cs
mov
repz
mov
inc
hlt
push
rol
jg
cld
data16
lock
dec
cld
push
mov
scas
pusha
insb
out
icebp
push
mov
pop
sub
push
or
test
mov
jge
jnp
mov
xor
xor
aad
cmp
aaa
ljmp
shl
inc
sub
cld
fstpt
xlat
xor
mov
pop
test
inc
dec
or
push
xchg
sub
jmp
pop
rolb
pop
ret
adc
sbb
inc
and
addr16
sqrtps
imul
push
movsb
fsub
dec
cmp
jnp
xlat
mov
mov
loopne
mov
filds
aam
bound
jg
sahf
shll
pusha
jge
mov
jmp
cmp
xor
dec
lea
loopne
mov
jecxz
gs
loope
test
popf
in
cmp
sti
int3
push
leave
jae
and
stc
adc
adcl
into
or
cmp
hlt
mov
shl
push
cmpsb
fcmovnbe
fwait
iret
shl
stc
inc
aaa
xor
add
lret
test
scas
outsl
test
dec
xor
push
jle
out
fcomps
repnz
int
xor
insl
sbb
sbb
inc
inc
lret
sub
ljmp
inc
test
aas
rcl
adc
fdivl
aam
ss
sbb
push
cmp
xchg
push
cmp
push
bound
shrl
loopne
out
cmp
leave
jmp
aad
jp
flds
cmp
push
jnp
daa
adc
mov
popf
xor
sbb
mov
hlt
shrl
push
adcb
adc
cld
inc
icebp
rcll
mov
xor
xchg
cmp
add
divb
mov
pushf
pop
inc
xor
pop
xlat
dec
cmp
jmp
pushf
xchg
fsubrs
push
loop
push
fcomip
cmc
aaa
sbb
pop
and
cmp
sub
outsl
inc
xchg
dec
cmp
lcall
pop
pop
mov
pusha
imul
sbb
mov
xor
jg,pn
leave
mov
push
and
imul
and
add
jp
sti
pop
inc
arpl
imul
imul
testb
scas
js
jecxz
mov
mov
lods
data16
or
bound
inc
dec
loop
sub
jge
xchg
jmp
in
addr16
in
mov
fldcw
cmp
ja
mov
mov
mov
mov
push
xor
scas
fs
ljmp
pop
fmulp
jecxz
mov
stc
mov
xor
lret
xlat
icebp
stos
cmpsb
sub
mov
push
clc
rolb
cmp
int
in
push
lock
in
jnp
stc
xlat
adc
leave
ss
fdivrs
aas
out
lret
std
lcall
mov
add
pop
insl
add
xchg
dec
imul
popa
mov
mov
inc
mov
adc
mov
insl
ficompl
xor
faddl
idivl
testb
mov
out
adc
mov
and
popa
aad
xchg
mov
pop
xchg
fimuls
mov
lods
cmpsl
int
mov
test
sub
insb
fimull
adc
call
xchg
pop
jmp
mull
xor
and
cltd
in
or
loope
add
jne
fidivl
push
popf
mov
ficompl
mov
into
xchg
arpl
hlt
push
and
sbb
xchg
jl
out
xchg
retw
stos
sbb
std
cmpsl
aaa
arpl
xchg
ret
mov
push
push
xchg
loopne
mov
in
shr
mov
into
iret
imul
jns
xlat
mov
popf
mov
lock
sub
jne
lds
sub
add
mov
std
imul
bound
xchg
repnz
iret
ja
mov
out
vmovss
imul
push
mov
sub
nop
dec
ficoml
fwait
in
inc
dec
push
pop
scas
sbb
xchg
call
aas
js
mov
xor
testl
test
xor
mov
or
out
mov
pop
and
jge
push
test
lds
scas
push
in
shlb
cmp
adc
dec
inc
les
xor
pop
mov
cmp
cmp
stos
ja
data16
mov
sub
in
movsb
mov
and
cmp
fistpl
gs
test
stos
mov
fsts
lds
xchg
adc
and
out
rcll
or
jo
xor
cmp
in
mov
xor
mov
xor
pop
repz
popa
gs
ficomps
mov
jns
fcomps
cmp
fs
mov
mov
push
repz
popf
icebp
mov
mov
inc
aad
stos
push
mov
mov
lods
push
sub
add
in
pop
mov
lahf
push
ret
out
lcall
jge
push
data16
xchg
mov
aaa
pushf
mov
mov
add
sbb
inc
cmp
xor
jns
mov
and
dec
lock
xor
push
dec
dec
hlt
xchg
add
inc
pop
aad
stos
and
or
je
loopne
mov
out
inc
or
jl
fisubs
test
xor
inc
sbb
out
aas
inc
icebp
xchg
jnp
mov
cmpsb
shl
or
lods
dec
pop
inc
xchg
mov
jl
fisttps
dec
pop
fwait
loop
xor
icebp
jb
and
ds
jne
xor
cmp
adc
loopne
add
test
fdivr
and
lret
pop
lcall
dec
hlt
xor
and
lods
mov
lcall
mov
cmp
lods
add
int
pop
outsb
repz
dec
sahf
popa
pusha
xor
cli
cmpsl
mov
push
rorb
aas
movsb
movsb
mov
icebp
mov
cs
push
lret
dec
xor
cmp
mov
test
jle
out
aad
in
sub
xchg
and
jle
inc
mov
je
add
rolb
fldt
icebp
data16
jecxz
xchg
les
aaa
data16
mov
sub
cmp
fimull
hlt
loope
or
loope
mov
xchg
scas
test
xor
mov
and
and
mov
sahf
fdivr
fisubrs
or
sub
popa
sbb
cs
ljmp
jg
xchg
push
addr16
out
mov
inc
sub
arpl
fwait
adc
dec
aad
inc
xor
enter
pop
and
dec
jno
and
and
out
andnps
das
je
push
cld
mov
adc
mov
adc
imul
loop
movsl
flds
cltd
jns
mov
jge
aam
pop
subl
sbb
in
add
movsb
sti
sub
scas
sub
sbb
in
or
lods
sub
mov
cmpsb
rcll
or
mov
adc
mov
test
cmpsl
dec
adc
push
lea
jg
aas
cmp
mov
pushf
dec
pop
cmp
sbb
imul
dec
aam
xorb
mov
push
push
cmp
ja
or
gs
mov
orl
stc
dec
or
test
or
addr16
lea
jecxz
add
mov
test
mov
mov
xchg
es
lret
das
ljmp
repnz
mov
shll
jge
sahf
mov
loop
push
pop
aad
mov
icebp
jmp
dec
flds
lret
mov
loope
add
mov
popa
popa
mov
jno
in
mov
mov
fistpll
ret
adc
mov
scas
pop
push
lcall
pop
pop
mov
mov
incl
dec
in
xchg
sub
xchg
hlt
mov
mov
cld
ret
dec
dec
data16
sahf
sub
outsb
mov
inc
push
iret
iret
testl
cmp
adc
mov
ljmp
mov
push
lods
fisubrl
push
das
popf
scas
mov
cltd
loop
xor
jno
push
sbb
push
mov
clc
nop
xchg
lock
xchg
shll
pop
jo
test
rol
and
int3
mov
adc
add
push
push
scas
nop
add
jnp
test
es
pop
nop
cmpsb
out
mov
xorb
pop
sub
sbb
and
pop
in
in
pop
dec
out
and
xlat
jo
push
fs
jbe
shll
ds
cld
mov
mov
dec
sbb
lea
add
fcoml
push
push
pop
dec
mov
dec
stos
xchg
gs
adc
lods
lret
lahf
jecxz
rorb
mov
mov
aad
es
orl
nop
pop
push
jno
push
nop
inc
mov
mov
imul
scas
gs
cmpsl
adc
mov
push
xor
into
mov
cld
insl
ss
pop
push
enter
or
push
and
add
repz
lret
lcall
xchg
push
cmp
fisubs
dec
in
jecxz
add
fldenv
pop
push
std
push
stos
mull
sbb
mov
dec
cmp
rolb
dec
and
mull
jge
jp
push
mov
push
testb
pop
adc
pop
mov
bound
pushf
in
jl
jnp
add
lret
fsubs
repnz
dec
shlb
cwtl
dec
pop
adc
out
pop
addr16
adc
adc
fdiv
jg
pop
sub
lcall
or
shrl
inc
popa
pop
cmp
pushf
test
or
ss
pop
cmpsl
roll
repz
push
jg
jge
xor
adc
js
mov
xor
mov
cmpsl
fdivl
inc
movsl
inc
lret
outsl
jmp
push
insl
movsl
xchg
mov
je
or
push
dec
inc
dec
negb
pop
mov
mov
stc
test
push
cld
xchg
lcall
sub
in
lods
cmp
cmp
imul
pushf
frstor
sbb
ficomps
ja
sub
outsb
pop
push
aad
or
sub
xor
stos
adc
push
inc
mulb
nop
popf
push
mov
inc
cld
xchg
mov
pop
sbb
scas
sbb
sbb
hlt
jne
xor
and
in
sub
push
jo
push
test
or
push
mov
in
stc
js
sbb
jo
sti
jae
xchg
jge
xor
mov
aad
fnstenv
xchg
andl
fsubrp
loopne
inc
mov
jp
adc
imul
xlat
mov
xchg
movsl
in
clc
outsl
fmuls
mov
fstl
cs
jno
pop
stos
sti
cmpsl
loop
mov
adc
fwait
lret
idiv
out
mov
aam
inc
insl
push
xchg
addl
clc
push
movsl
xchg
xchg
xchg
xchg
sbb
test
ss
ds
cmpsb
lahf
cmpsb
mov
xor
mov
cmp
jge
pusha
jnp
mov
insb
sbb
out
test
rcll
push
es
jmp
mov
insl
ret
movsl
clc
aam
mov
sbb
dec
mov
inc
faddp
fiadds
in
inc
movsb
fcmovu
pop
call
or
sub
or
out
cmpsb
sbb
mov
xchg
jmp
stc
sbb
mov
cmpsl
lds
pushf
add
inc
lea
inc
xchg
stos
mov
call
scas
sub
inc
add
adc
insb
cld
jae
pop
and
stos
mov
sahf
cmp
imul
fistl
jmp
lret
xor
loope
xchg
in
int3
xchg
cmp
inc
movsb
int
push
inc
cld
orb
mov
dec
fimull
sahf
mov
push
lahf
xchg
add
aaa
test
test
mov
mov
jge
pushf
mov
push
push
scas
loopne
repz
sub
sbb
pop
divb
ss
mov
out
push
cwtl
lods
push
jbe
pop
pop
lods
aaa
inc
add
push
outsl
adc
cltd
mov
out
jae
xchg
sub
xor
in
pop
in
leave
mov
aas
loope
lret
or
and
jp
jo
push
int3
xor
push
dec
sbb
sbb
movsl
jle
rcr
pop
xor
mov
xchg
mov
loope
ror
insl
mov
enter
add
iret
jno
outsl
rclb
nop
pop
sarl
cmp
mov
pop
ljmp
or
mov
jecxz,pn
out
je
cmp
scas
xchg
sbb
mov
das
cmp
xchg
and
scas
cmc
dec
fidivl
jns
mov
scas
sbb
mov
mov
adcl
mov
or
cwtl
lret
out
loopne
inc
inc
insb
mov
push
mov
popa
aad
lret
rorb
mov
arpl
hlt
in
cltd
push
sub
add
or
adc
pop
scas
jle
in
rolb
xchg
shlb
xlat
dec
xchg
shl
xor
aas
jns
mov
pop
repnz
push
es
push
jecxz
in
fcoml
inc
mov
imul
adc
jecxz
mov
mov
and
jle
cmp
stos
dec
xchg
shrd
and
lret
mov
test
dec
mov
jp
pop
or
and
fidivrs
shll
xlat
movups
pop
ja
push
out
into
sahf
adc
jge
cmp
mov
aad
rcl
inc
fwait
mov
fisubrs
jne
jns
or
hlt
sub
inc
add
jg
rcrb
jecxz
dec
inc
and
add
dec
mov
adc
addr16
dec
adc
mov
clc
popf
int3
imul
sub
fcomip
push
mov
add
aas
lds
dec
xor
inc
ljmp
mov
fadds
cmp
out
sub
push
cmpsb
mov
fistps
xchg
cmpsl
mov
pop
shr
push
icebp
decl
call
fldt
cld
popf
lods
mov
dec
jle
lods
cmpsb
insl
into
scas
jmp
mov
icebp
adc
jo
aas
jnp
call
mov
setp
popa
imul
out
sbb
or
cs
mov
lods
mov
push
jns
scas
mov
mov
mov
test
xor
iret
adc
fldcw
xchg
pop
scas
ret
ret
dec
cld
cmp
jle
sub
mov
inc
xchg
test
and
fsubl
sub
fildll
push
pop
pop
cmp
sub
addl
cmp
sub
mov
mov
jp
mov
scas
sub
inc
clc
repz
aam
jp
dec
xor
out
popa
mov
imul
push
out
jg
inc
ja
jmp
lret
aaa
mov
imul
or
je
mov
cmp
add
cs
scas
jg
mov
mov
js
pushf
inc
add
test
xchg
pop
insl
add
rcrb
sbb
aaa
dec
ret
add
pusha
add
pop
inc
add
ret
push
and
leave
andb
nop
ds
lcall
xchg
dec
sbb
ja
iret
sub
rep
sub
mov
repnz
jo
mov
push
cmp
imulb
mov
stc
jns
ds
loope
scas
push
xchg
in
loopne
ficoms
test
in
xchg
sub
mov
cmc
fbstp
mov
movsl
sbb
push
jb
sbbl
add
pop
xchg
stos
mov
aam
push
or
mulb
or
lahf
xor
insb
stos
ja
cltd
mov
jp
stos
cmpsb
sbb
add
add
xchg
xchg
addr16
sub
ret
aad
push
cmp
push
imul
pop
inc
loope
xchg
jo
sbbb
fistpl
daa
adc
outsb
out
mov
dec
xlat
out
push
outsb
add
sbb
dec
loopne
push
mov
cs
ss
xor
push
lahf
cmpsl
ret
inc
les
icebp
cmp
and
jnp
pop
adc
aas
in
aas
mov
loop
pop
mov
insb
lcall
icebp
scas
mov
test
scas
inc
xor
movsl
mov
imul
nop
sub
outsl
es
mov
rclb
shll
subl
arpl
aaa
inc
dec
xor
js
mov
add
es
cmp
cltd
roll
outsl
hlt
mov
repnz
in
xchg
jp
addr16
xchg
rolb
adc
mov
xchg
enter
xchg
movd
lret
mov
xor
rcll
mov
sarb
outsb
lcall
test
mov
out
xor
out
lahf
adc
stc
push
popa
push
insb
in
loope
add
mov
in
movsb
pop
mov
clc
cmp
cmp
ss
ds
add
push
jns
test
les
sarl
pop
ljmp
lret
jg
aam
pushf
or
lods
popf
xchg
addr16
xchg
mov
mov
idiv
out
icebp
or
cmp
ret
pop
mov
mov
test
add
ffree
idivl
scas
rolb
mov
push
lock
call
cmpsb
push
sbb
lea
push
lahf
push
ja
out
aaa
test
out
lret
lods
loope
jecxz
xor
clc
pop
inc
js
mov
push
push
cmp
adc
or
cmp
and
outsl
cltd
test
loopne
xor
inc
xchg
sbb
push
fnstenv
xor
pop
and
hlt
push
mov
pop
test
cwtl
cmp
sbb
fsubr
das
push
daa
lcall
pop
sub
ret
mov
aas
fldt
negl
lahf
mov
cmpsl
lret
inc
inc
inc
cmpsb
mov
xchg
sub
add
sub
mov
mov
pop
fsub
mov
push
or
mov
mov
jne
icebp
ss
mov
dec
push
jne
or
push
loopne
fdivs
cmp
les
cltd
push
sbb
push
dec
mov
jo
sub
out
ret
add
daa
push
sub
cmpl
cmc
pop
jbe
imul
xchg
fimuls
std
pop
ljmp
mov
inc
mov
pop
fnstenv
mov
and
jg
mov
adc
pop
add
add
fcomps
inc
test
xor
lret
push
jmp
in
mov
dec
movl
xor
outsb
xor
and
mov
js
ss
mov
in
push
ret
sarl
rcrb
sub
stos
push
or
cmpsb
test
jnp
sub
int
dec
fidivl
lahf
inc
jge
lock
outsl
cmp
and
frstor
sbbl
jns
aam
fsubr
test
pop
aad
jb
xor
and
sahf
push
subl
ds
pop
stc
dec
push
fdivrp
out
shll
pusha
inc
or
mov
mov
lret
and
pop
iret
out
add
pop
lret
pop
addr16
mov
ficoml
iret
into
xchg
daa
call
cli
cld
cltd
cmp
pop
pop
outsl
inc
or
ret
mov
mov
push
bound
mov
or
dec
cs
bound
ds
ljmp
xorl
dec
stos
cmp
adc
out
inc
jae
sub
or
and
mov
add
test
inc
add
lods
mov
sbb
add
push
sub
jecxz
sbb
pop
aaa
nop
insb
mov
mov
negb
in
cld
imulb
mov
inc
jl
fidivl
bound
or
fldenv
cmp
enter
and
fldl
sbb
sub
fwait
jo
cmp
inc
xlat
bound
and
pop
jl
pop
scas
pop
scas
and
and
xor
dec
push
dec
call
shlb
lcall
sbb
cmp
sub
mov
adc
movsl
ret
mov
pop
push
notl
movsb
jno
adc
outsb
aam
dec
out
sti
sbb
inc
lods
popa
aaa
xchg
pop
pushl
adc
adc
xor
sbb
les
testb
bound
testl
push
ljmp
xor
push
mov
loopne
and
lret
xchg
and
iret
mov
mov
jmp
inc
std
outsb
mov
into
cmp
inc
sbbl
lea
cwtl
cmpsl
repz
aaa
shl
pcmpgtd
ljmp
aam
inc
push
xchg
adc
xor
sbb
cmpsl
mov
adc
fwait
int3
in
mov
xor
dec
or
sbb
ja
mov
stos
cmc
pop
jbe
lea
mov
int
clc
and
mov
and
insb
pop
inc
pop
cli
sub
scas
je
cwtl
cmpsb
xorb
fdivr
xor
scas
inc
mov
lret
lods
ret
fldl
cltd
inc
and
pushf
cmpb
cmp
jmp
std
mov
das
insb
or
adc
fbld
iret
out
sub
add
es
js
mov
sbb
add
adc
cmpsb
xchg
fs
mov
mov
mov
ljmp
and
shrl
xchg
ds
pop
testl
ss
and
cmp
push
jno
scas
sbb
pusha
imul
xor
jbe
add
fmuls
je
xor
repz
push
push
or
mulb
mov
arpl
lods
xor
push
lds
xchg
pop
sti
pop
jb
mov
or
nop
mov
fucomp
mov
push
cmpsl
mov
mov
mov
mov
icebp
mov
cmp
sbb
pop
mov
cli
pop
lret
shrb
int3
mov
jbe
out
jnp
sahf
cltd
dec
data16
rorl
mov
adc
and
mov
sbb
cs
push
lcallw
sti
xchg
dec
les
inc
mov
ret
testb
adc
dec
adc
and
push
ja
pop
mov
jae
sbb
push
stos
push
imul
xor
outsb
and
sbb
jmp
pop
push
repnz
push
sub
inc
pop
fidivrl
or
xlat
fs
lret
xor
sahf
sbb
or
or
jle
cli
clc
hlt
or
sub
pusha
sbb
xor
mov
mov
outsl
dec
dec
js
or
mov
add
sub
jecxz
movsb
or
int3
mov
jmp
sub
or
add
in
add
xchg
xchg
mov
dec
cmp
aam
fsub
movsb
cli
ljmp
sub
arpl
sbb
pop
addr16
sbb
testb
psraw
mov
dec
jbe
leave
jae
push
sbb
or
orl
cmc
ret
mov
daa
cltd
mov
int3
dec
adc
add
in
lcall
dec
in
aas
scas
test
fucomip
mov
cmpsl
jge
jne
mov
adc
sub
js
sub
xor
pop
lcall
dec
cmp
loopnew
mov
test
ja
xor
out
mov
mov
mov
jo
mov
repz
out
popf
mov
into
xor
xchg
test
adc
stos
popa
jecxz
push
mov
sarb
push
mov
rcll
sub
add
lahf
fisubs
clc
movsl
cmp
loop
mov
sub
ds
inc
pop
imul
pop
stos
adc
push
lcall
xor
das
fdivl
fcoms
scas
aaa
das
and
push
mov
pop
idivb
ljmp
test
mov
sub
adc
out
imul
sub
add
pop
inc
int3
jmp
scas
inc
mov
imul
orb
pop
cli
test
insl
loope
fisubl
je
cmpb
dec
mov
int
pop
pop
popf
ja
out
xlat
dec
leave
pop
lods
inc
mov
add
cmpb
pop
popa
or
popa
xchg
xchg
dec
cmc
cmp
jmp
mov
or
add
fxam
fwait
bound
cld
sub
and
add
or
lret
pushf
jo
fmuls
inc
or
sbb
cwtl
cld
mov
lods
or
and
int3
in
xchg
jbe
cmp
mov
in
xor
xor
testl
mov
xchg
xchg
mov
out
adc
sub
jp
stos
bound
push
or
mov
sbb
out
and
cmp
sbb
fs
cli
cmpsl
xor
adcl
pusha
inc
pushf
inc
mov
mov
popa
lods
sbb
xchg
dec
inc
mov
filds
test
mov
pusha
inc
lahf
pushf
inc
lock
or
jmp
cs
sub
pop
push
sub
jne
add
jge
push
xchg
ljmp
push
jge
push
or
mov
push
mov
sti
in
aad
pop
mov
sbb
ror
fnstsw
mov
pop
ret
lret
scas
imul
data16
stc
xor
dec
inc
mov
test
push
lods
loop
sub
sbb
or
scas
ljmp
xor
push
aaa
in
xchg
adc
push
jb
adc
scas
das
xchg
jno
out
adc
xor
pop
ja
xchg
fcoms
pop
and
inc
pop
sub
inc
lret
dec
bound
push
mov
xor
in
pop
imull
mov
repz
or
xchg
ljmp
test
and
or
icebp
cltd
out
call
mov
fnstenv
inc
xor
arpl
or
jb
xlat
in
push
pop
push
popf
clc
nop
sbb
sti
mov
mov
mov
cmp
and
loopne
test
jg
cmp
inc
outsl
shl
or
push
mov
mov
adc
add
out
fadd
pop
aad
mov
xor
adc
ror
sub
cmpsl
sarb
cld
mov
cwtl
decl
add
xchg
test
test
adc
inc
xchg
lcall
popa
hlt
sbb
push
dec
add
gs
fstps
shlb
xchg
arpl
and
mov
ljmp
sbb
mov
int3
sbb
xchg
jb
movsb
jnp
notb
xor
imul
leave
inc
popa
mov
sbb
jecxz
push
mov
pop
xchg
pop
mov
push
and
inc
test
rclb
ss
mov
push
add
mov
lahf
dec
jmp
xchg
stos
leave
jae
sub
sbb
cmpsb
push
mov
or
mov
cltd
cmovge
outsb
push
jae
and
out
inc
or
out
sti
mov
mov
mov
and
xchg
lods
or
adc
fucom
sub
test
jb
testl
sbb
out
and
xor
cmpsl
shrl
mov
into
dec
popa
test
push
mov
jns
sbb
push
jo
jp
mov
push
inc
push
leave
adc
add
scas
testl
push
sub
pushf
les
push
pop
loope
call
imul
push
adc
int
add
push
sbb
leave
cmp
fdivrs
xchg
scas
stos
leave
popa
xchg
sarl
jo
test
insl
pop
stos
in
gs
or
into
orl
cmp
xchg
jne
xchg
or
mov
mov
add
daa
dec
push
pop
jno
mov
repz
mov
loope
mov
jns
fwait
mov
stos
loope
gs
mov
jp,pt
outsb
js
xchg
mov
mov
cmpsb
mov
mov
and
out
mov
xor
ja
mov
dec
repz
mov
enter
jp
aam
xchg
pop
xchg
lret
lea
sbb
mov
inc
xchg
pop
xchg
test
dec
cmp
mov
hlt
inc
sbb
sub
aad
fs
daa
cmp
pop
stc
adc
xchg
sbb
push
xchg
nop
jmp
fistps
test
push
mov
cs
flds
fmulp
jbe
cltd
adc
mov
xchg
insl
cmp
int3
rcl
pop
insl
imul
js
and
xchg
repz
dec
ja
mov
outsb
sub
rol
dec
xchg
sbb
in
xchg
enter
cmp
pusha
jb
add
pop
ret
sbb
inc
mov
jmp
test
gs
addr16
pop
mov
lcall
stc
int
mov
mov
adc
inc
jne
iretw
mov
mov
cmpsl
inc
stc
mov
xlat
std
push
ljmp
or
mov
or
arpl
pop
fsubs
pop
clc
pop
mov
pop
push
int3
call
int3
and
aas
jne
dec
sbb
in
or
cmp
mov
mov
adc
daa
out
jnp
pop
mov
roll
not
mov
aaa
inc
push
or
mov
mov
and
xchg
add
ss
fcompl
jg
lret
shlb
mov
push
dec
in
pop
popa
aam
lods
popf
push
inc
shrb
sbb
addl
lods
and
hlt
or
adc
shl
iret
sbb
sahf
pop
repnz
js
mov
out
xchg
bound
and
fwait
and
push
inc
aas
adc
sti
lahf
and
push
add
outsb
and
lock
jp
fnsave
and
add
adc
push
mov
mov
push
dec
xchg
das
mov
push
lods
lods
cmp
not
sti
sbbl
cmpsl
aas
mov
mov
xor
out
cmpsb
dec
push
aas
test
movswl
mov
push
push
stos
xchg
xor
adc
ror
add
xchg
pop
add
xchg
push
and
adc
insb
jmp
adc
cmp
enter
cltd
jmp
imul
pop
add
ds
adc
adc
lcall
cmpsl
ret
jbe
inc
push
je
push
fnstsw
dec
jae
loopne
lret
push
mov
rcr
fisubl
incl
idivl
xchg
jbe
arpl
out
adc
xchg
movsb
ret
gs
jl
stc
mov
adc
dec
and
jl
rclb
test
mov
cmpsb
pop
sarb
ja
sbb
xor
sahf
call
inc
mov
inc
movsl
jmp
inc
aad
adc
push
insb
and
mov
add
cmp
js
cmpsb
aad
not
insb
stc
push
stc
les
data16
movsl
sub
stos
push
and
xlat
push
jno
fcompl
mov
jecxz
inc
push
into
lds
mov
mov
in
sub
xor
js
mov
arpl
fsubrl
pop
das
insl
aad
in
mov
xor
movsl
fsubl
fimuls
test
xor
xor
call
in
pop
movsl
pop
outsl
shlb
push
ss
lods
shrl
push
leave
sbb
out
sub
dec
cld
cs
fcoml
mov
pop
and
and
mov
inc
fwait
push
or
fildll
inc
fsincos
adc
popa
push
cmpsb
outsl
inc
or
push
fsts
lret
sbb
sti
les
std
mov
sub
out
push
xchg
cwtl
sbb
mov
movsb
or
lds
loope
xchg
mov
addl
int3
jg
sbb
pop
pop
mov
shrb
dec
cwtl
mov
adc
bound
mov
sbb
loope
das
xchg
jg
outsb
fldt
dec
push
xor
andl
fimull
mov
out
sbb
leave
jno
mov
test
sbb
mov
pop
sub
mov
subl
adcb
mov
dec
mov
jle
lods
pop
mov
xchg
mov
sbb
inc
ret
cmp
orl
shrb
int3
sbb
ljmp
pop
mov
lcall
rcr
lods
outsb
sub
pop
cld
jb
test
mov
bound
popa
pop
dec
adc
or
mov
mov
fwait
lods
push
mov
push
das
in
insl
xchg
cmp
add
jmp
sub
and
push
lods
fstpt
add
push
mov
lcall
add
push
sub
cmpsl
rclb
out
inc
pop
add
pusha
movsl
mov
add
or
adc
cmp
ljmp
cmc
fs
fucomp
mov
aam
cmp
adc
mov
js
lods
iret
out
push
out
sahf
sub
cld
scas
hlt
rclb
inc
mov
add
xchg
push
jae
sbb
es
sahf
push
xchg
addr16
push
jmp
xor
mov
loop
sbb
add
fwait
sbb
fistpll
sub
sbb
mov
out
out
arpl
adcb
jns
int
je
dec
in
cmp
shrb
dec
inc
add
in
mov
lret
out
push
and
imulb
xor
lret
xor
mov
hlt
jmp
push
ffree
negb
pop
data16
sbb
xchg
fcmovbe
ja
jo
es
nop
sbb
add
sub
xchg
cmp
jecxz
mov
push
fnsave
mov
jne
nop
mov
push
xchg
cmp
mov
es
and
jb
iret
cmp
mov
or
mov
pop
sub
es
inc
les
push
imull
out
dec
ja
movsl
popa
fiadds
jecxz
cltd
cwtl
xor
aad
inc
scas
fwait
mov
xlat
lret
adc
leave
pause
out
lea
lods
pop
loopne
fs
mov
aaa
loop
lds
xor
imul
pop
inc
fildl
mov
sub
ljmp
add
and
jg
nop
or
testb
out
pop
rorl
call
sub
loopne
cmp
int
mov
fnstsw
adc
mov
addr16
xchg
in
mov
sbb
pop
sub
in
andl
mov
pusha
sti
jg
sti
adc
mov
jecxz
push
ret
ficoms
aas
add
insb
pop
jne
in
xchg
cmp
loop
xchg
outsb
push
xlat
call
cmp
es
stos
cmpsl
cwtl
loope
loope
fs
into
adc
jmp
and
aas
cmc
jb
sub
xor
aas
and
mov
jmp
mov
sbb
adc
adc
mov
inc
flds
push
dec
adc
or
push
xchg
shlb
loopne
push
shlb
jno
lcall
adc
bts
cmpsb
cmpsb
stos
cmpsb
xor
insb
sbb
stos
aas
add
loope
lret
rol
xchg
dec
add
in
leave
xlat
xor
mov
push
and
cli
mov
mov
movsb
jl
bound
sub
fmuls
inc
out
sub
lods
repnz
ficompl
adc
pop
sahf
mov
test
mov
adc
cmp
out
movsb
cltd
sbb
and
xor
jno
pushl
pop
pop
fnstenv
pop
inc
rcrl
mov
roll
pop
and
mov
xchg
shrl
jp
push
leave
filds
xchg
or
lds
push
xchg
mov
cltd
push
inc
imul
cmp
aaa
shll
jbe
xor
test
add
faddl
pop
sti
lods
jl
jbe
ret
movsl
lret
adc
test
addr16
loopne
sub
cli
jb
rcr
into
add
imul
pop
arpl
adc
add
stc
jl
mov
adc
inc
in
lcall
adc
xor
outsl
shr
fnsave
xor
dec
rorb
cmp
clc
lret
ds
leave
dec
mov
dec
andb
pop
sbb
xchg
testl
mov
pusha
cld
mov
pop
mov
adc
cwtl
and
pushf
mov
add
xchg
mov
mov
int
xchg
repnz
pushl
ficoml
push
cmp
pop
je
shrl
mov
add
or
dec
xchg
xor
in
and
jmp
pop
icebp
sarb
cmpsb
fsubs
xchg
cs
pop
sub
inc
dec
lods
xor
cmc
imul
sub
xor
pop
sbb
negb
pop
icebp
xchg
and
pop
fldt
jecxz
testl
lds
aaa
push
imul
adc
push
pop
cmpsb
outsb
subb
cs
pop
fwait
movsb
pop
aas
mov
lock
xchg
or
add
jno
mov
in
out
xor
jge
pop
mov
imul
fs
or
cld
call
icebp
fisubrl
mov
lcall
leave
xor
sbb
pop
cltd
lock
sub
call
rep
test
fcompl
insb
ds
push
adc
push
lods
pop
dec
fisttps
das
lcall
add
inc
cmp
out
xchg
cmp
mov
lcall
dec
cltd
xor
dec
cmpsl
mov
icebp
sti
add
stc
jae
call
push
jae
leave
fnsave
and
adc
push
test
imul
jp
cmpsb
in
fwait
cmp
jb
mov
mov
and
pop
push
add
imull
aam
lret
clc
jle
out
dec
test
mov
ret
xchg
inc
sbb
sub
cmp
mov
jne
mov
mov
loopne
shrb
mov
loop
mov
stos
cmp
cmpsl
arpl
lret
cwtl
sahf
int3
jae
popa
add
xchg
cmp
jb
mov
push
or
data16
mov
es
cld
stos
inc
mov
mov
das
lods
lods
les
ljmp
cwtl
bound
or
sub
mov
sbb
cltd
mov
xor
aam
xchg
or
insb
push
inc
and
dec
mov
test
shr
test
cmpsl
xlat
call
loope
icebp
adc
push
and
fdivl
mov
das
adc
xchg
mov
ret
jbe
cltd
sub
movsl
shrl
add
push
dec
push
fsts
pop
lret
or
pop
add
pop
imul
nop
scas
out
mov
inc
movl
mov
jnp
test
ds
pop
in
pop
and
scas
in
divb
mov
push
loope
arpl
stc
mov
push
shll
dec
push
xchg
add
pop
push
mov
rolb
into
ja
xchg
mov
rolb
mov
lahf
cltd
pop
out
test
insl
ja
hlt
mov
es
dec
clc
push
xchg
scas
lods
mov
pop
int3
shlb
test
loop
cwtl
adc
xchg
cmp
ret
xor
dec
mov
pop
inc
xor
xor
aam
dec
mov
and
mov
or
gs
in
mov
cmpsl
dec
cmp
push
ret
xchg
fs
and
push
lock
inc
lods
jne
pop
or
fimuls
js
imull
out
ljmp
jle
and
jle
test
fs
push
pop
jp
push
popa
and
das
mov
jae
mov
repnz
add
cli
sbb
push
mov
aas
push
inc
das
lods
stos
shl
push
addr16
pop
or
leave
xor
inc
add
jl
cmp
inc
clc
lcall
sbb
inc
pop
jmp
inc
adc
pop
fs
dec
xor
xchg
ljmp
sbb
push
jbe
push
movsl
packuswb
xchg
mov
das
cs
cmp
cmp
outsb
lods
rcll
pop
arpl
rcrb
out
scas
fildll
xor
fsts
addb
test
pop
xor
bound
xchg
loop
cld
adc
xchg
data16
xchg
icebp
lock
xchg
in
pop
mov
clc
jnp
adc
push
dec
mov
mov
leave
sti
das
mov
cmpsb
sti
jne
icebp
cmp
mov
shlb
push
sbb
push
test
mov
mov
and
jb
jmp
inc
mov
loope
cli
imul
shll
in
fiaddl
sarb
jp
jnp
sub
and
pop
lahf
lods
sbb
dec
push
test
hlt
cld
aam
int3
lahf
or
push
icebp
cmp
outsl
dec
cmp
jb
mov
jns
ljmp
xor
icebp
xor
sahf
in
icebp
mov
inc
ss
ror
ljmp
in
ja
xchg
jns
adcl
enter
xchg
loopne
sbb
push
ds
mov
cmp
dec
adc
cli
ficoms
out
xchg
pop
dec
push
push
push
pop
pop
popa
cwtl
cmp
inc
jecxz
jae,pt
jp
mul
repnz
push
in
mov
outsb
xlat
fidivrs
je
nop
pop
lods
xchg
not
jl
pop
mov
cmp
js
outsl
fisubrl
mov
or
mov
push
fiaddl
outsb
das
jl
mov
lahf
xchg
sub
mov
and
ret
inc
mov
add
orb
push
or
sub
lret
sub
shll
inc
outsb
xor
mov
mov
xchg
aam
add
mov
or
dec
push
cs
shl
leave
cmpsl
pop
les
or
popa
jl
loop
mov
sub
jo
mov
mov
inc
imul
sbb
nop
sub
insl
jp
sbb
stos
dec
test
add
lret
mov
pop
mov
fisubrl
loope
daa
out
xor
jmp
or
out
xchg
call
rcrl
addr16
inc
negb
jle
daa
cld
addr16
push
ja
ss
push
arpl
xorl
sbb
lods
lahf
add
ljmp
inc
dec
cmc
aam
movsl
ret
sub
stos
mov
push
fcmovnb
mov
pop
and
pop
movsl
jne
sub
repnz
and
xchg
ljmp
push
add
and
in
lcall
mov
and
test
cmp
xchg
xchg
and
pop
push
dec
push
in
pop
out
dec
repz
pop
push
icebp
gs
stos
daa
outsl
mov
test
sahf
test
inc
sbb
sub
mov
jp
int
cmp
pop
mov
dec
out
push
inc
cmp
imul
mov
sarl
scas
add
or
inc
xchg
pop
sub
pop
xchg
rolb
loopne
jg
push
pushf
repnz
idivl
call
push
xor
ss
jb
gs
mov
inc
sub
dec
neg
push
cli
push
and
jbe
dec
andb
push
mov
xchg
mov
loopne
sub
int
push
ret
out
xchg
xchg
cmpb
imul
test
cmpsb
mov
rcrb
add
sbb
push
es
xchg
addr16
lea
and
jp
cmp
cmp
int
push
mov
push
mov
sbb
in
aas
stc
lcall
hlt
mov
sbb
cmp
xor
lret
test
lock
mov
ljmp
xor
pop
divb
jl
sbb
arpl
sti
sbb
and
pop
cmpsb
cmp
mov
jecxz
and
icebp
repnz
dec
xor
cmp
mov
cs
sub
cs
mov
les
pop
into
test
icebp
roll
addr16
and
pop
push
mov
push
jle
jne
pusha
out
mov
inc
push
mov
stos
and
mov
cmp
xor
mov
out
xor
ljmp
imul
mov
stc
mov
orl
xor
pop
sub
pop
pop
xchg
sbb
pop
scas
out
jae
dec
vmovss
adc
bound
outsl
jnp
bound
into
adc
aam
mov
fbstp
or
sahf
xchg
unpcklps
adc
addr16
int3
loopne
jp
imul
mov
daa
es
mov
sbb
jae
sub
mov
pushf
and
fildll
jo
mov
fistl
ficoms
push
ret
fwait
push
and
out
dec
addl
pop
or
iret
xlat
and
js
dec
push
mov
sub
jl
xchg
sub
xor
test
stos
hlt
shll
inc
and
add
ret
pop
arpl
pusha
and
cwtl
ucomiss
inc
pop
ret
loop
mov
in
push
es
leave
test
insb
aas
xchg
jns
pop
rcrl
daa
in
jne
in
cs
dec
xchg
inc
loop
gs
cltd
dec
sub
lea
inc
add
lock
and
imul
xchg
or
add
aam
outsl
adc
pusha
fimuls
pop
pop
mov
aad
jl
ficoms
mov
sub
mov
xchg
in
leave
xor
stos
lret
loopne
repnz
shrb
aad
js
and
dec
pop
mov
cmpsl
sahf
sub
imul
loop
in
sbb
or
or
into
dec
popa
fistpl
movsb
push
movsl
sub
sub
cwtl
out
lods
ret
out
xchg
jns
mov
lcall
cwtl
xor
dec
aad
loop
loopne
sti
dec
out
in
scas
imul
pextrw
sub
test
inc
hlt
leave
imul
jo
ja
out
call
repz
dec
sub
je
and
addr16
pop
sbb
dec
cmp
out
jl
fsubl
xlat
xchg
cmp
dec
jmp
sub
mov
mov
pop
clc
inc
icebp
adc
daa
jne
out
ds
fimull
rcl
and
sbb
int3
std
out
popf
fsubl
repz
bound
bound
leave
sub
data16
popl
sbb
or
inc
dec
jo
dec
cltd
jg
out
hlt
dec
jl
call
xor
xor
sub
test
pop
mov
dec
mov
rcrb
out
adc
sahf
lcall
sbb
xor
mov
push
in
xchg
sub
into
or
inc
and
inc
cli
rorl
push
jo
lock
lock
arpl
je
ret
stos
das
push
add
or
push
std
lret
xor
daa
jecxz
mov
je
cltd
repz
pushf
sbb
aad
cmpsl
pop
add
int
jmp
sbb
dec
stos
cmpb
das
xor
add
addr16
jp
push
shll
sbb
out
jge
cmpsl
jmp
out
cmp
xor
aam
adc
dec
push
jae
mov
jmp
cmp
add
mov
cli
cwtl
popf
cltd
movsb
loop
fcomps
ret
and
mov
mov
adc
fdivs
sbb
pop
lret
push
jg
lret
cwtl
popf
mov
ret
sahf
stc
data16
jbe
outsb
dec
cltd
jl
pusha
mov
in
xor
int
add
cmp
loopne
pop
into
mov
lahf
dec
sub
cli
mov
and
adc
inc
ljmp
mov
fsubs
scas
aaa
outsb
push
xor
mov
add
stc
inc
push
leave
bound
stc
jnp
pop
daa
cld
pop
filds
xor
push
jnp
mov
jns
cmp
lea
xchg
cmpb
mov
jae
mov
push
xchg
sub
push
lods
outsl
inc
fisubrs
xor
sti
pop
ret
xchg
jae
fcmovnb
je
outsb
sbb
jno
push
xor
stos
pop
cmp
iret
and
add
movsl
dec
cmpsb
inc
stos
lahf
jns
repz
xor
out
orl
rcr
stos
lds
shlb
fcmovnbe
test
loop
rcl
aas
orb
jl
stos
jno
daa
fistl
dec
aaa
andb
test
cmpxchg
push
popa
lahf
mov
or
pusha
cwtl
in
push
ss
mov
les
pop
fwait
sub
inc
sahf
call
ss
inc
mov
mov
mov
cltd
jno
loopne
or
sub
mov
xchg
js
jno
mov
xchg
push
sub
cmp
adc
jl
mov
mov
mov
imul
rolb
sbb
and
push
popa
lret
dec
cmpsl
mov
inc
push
xchg
pushf
stos
cmp
fwait
cmpsb
inc
in
lret
xor
leave
jp
xchg
cld
jmp
in
push
mov
sub
fstpt
cmp
mov
in
mov
js
movsl
fidivl
mov
aas
cmp
mov
and
adc
in
jo
sarl
sbb
xor
sub
out
push
pushf
xor
or
push
fcomps
imul
cmp
repnz
mov
cmpsl
inc
mov
cltd
imul
inc
or
mov
inc
stos
or
cmp
pop
imul
negb
jge
mov
mov
call
js
pop
push
sub
gs
cmp
mov
mov
stc
xchg
arpl
ror
mov
sub
and
mov
dec
lea
or
xchg
popf
mov
mov
jae
js
cld
call
shr
int3
stos
popf
xchg
ret
xor
dec
pop
scas
test
fsubrs
inc
adc
fbld
mov
xchg
push
mov
mov
outsl
mov
cld
xchg
or
stos
push
sar
loope
mov
jbe
cmpsb
lods
imul
test
adc
dec
jb
rclb
pusha
arpl
push
xchg
or
sbb
mov
jno
mov
int
xchg
repz
negl
jl
pop
addr16
add
mov
and
mov
xchg
and
and
cwtl
jb
dec
shlb
cmp
jl
fwait
in
push
std
push
sub
sbb
add
insb
adc
xor
je
filds
lea
xor
ftst
push
add
fnsave
int3
xchg
pop
popf
fnstenv
mov
mov
cs
lds
and
nop
jnp
cmpsl
mov
mov
scas
ja
xchg
jge
jne
adc
dec
stos
sub
cld
cmp
sub
mov
jecxz
mov
lea
push
cmp
lret
xchg
shlb
xchg
inc
in
pop
inc
mov
sarl
push
or
jb
aad
aas
and
sbb
fcmovnbe
out
jb
stc
adc
sub
leave
jne
int3
mov
sbb
orl
xor
dec
add
jae
cmp
push
cs
push
pop
sbb
push
ja
ljmp
inc
jb
xchg
notl
pop
jae
std
xor
ss
jae
dec
rcll
ss
daa
imul
scas
loope
xchg
cmp
lds
inc
out
or
pop
subb
xchg
push
push
dec
sbb
cwtl
sub
movsb
insl
jno
out
inc
repz
outsb
cwtl
mov
pop
jb
clc
cwtl
aas
sub
inc
int3
jl
sbbl
mov
sub
out
sub
rolb
loope
rolb
cmp
js
lock
pop
js
faddp
ficomps
dec
adc
lods
jns
jbe
sub
lret
mov
loop
call
add
xlat
and
cmp
ret
add
mov
lret
fnsave
or
push
mov
in
mov
in
fadds
cmc
jecxz
pop
add
in
sub
ret
adc
addb
cs
adcl
cld
sbb
pop
js
test
sbb
add
push
jae
dec
pop
lcall
xlat
pop
add
cltd
sbb
and
xlat
xor
jg
jne
leave
vpunpckhqdq
xorb
gs
mov
icebp
sub
pop
ljmpw
out
clc
mov
mov
sbbb
inc
xchg
push
insl
sub
movsl
dec
lret
clc
rcrl
jae
daa
cmc
xchg
rcrb
fs
lret
push
sbb
cmc
mov
test
pusha
or
loopne
pop
mov
push
mov
in
pushl
inc
enter
pop
ret
and
push
call
in
pop
add
push
test
mov
sub
rolb
jae
pop
and
xor
inc
adc
lods
mov
inc
sbb
lods
or
mov
repz
push
jo
loop
adc
mov
in
pusha
xchg
add
xor
xor
jbe
sbb
or
ja
jl
mov
jp
pop
xchg
pop
dec
cmpb
hlt
es
cmpsl
pop
jp
outsb
mov
pop
shrb
dec
xor
mov
sub
cld
dec
jb
sbb
int3
mov
mov
push
sbb
push
lret
xorb
pop
loop
outsb
incb
mov
and
enter
pop
mov
sbb
fadds
paddw
dec
les
into
jmp
out
and
mov
scas
gs
xchg
lahf
or
lock
sub
dec
scas
cld
mov
adc
stos
jbe
inc
xor
and
pop
cwtl
sbb
mov
jns
pop
subb
cmpsb
cmp
leave
cwtl
and
stos
adc
inc
mov
and
pop
data16
scas
cmp
pop
fistpl
mov
adc
xchg
mov
mov
xor
fcmove
lahf
jne
int3
mov
xor
mov
dec
jecxz
inc
mov
fmuls
xchg
ss
add
insb
push
ror
iret
jg
out
xlat
loop
cld
sbb
faddl
sub
push
and
adc
stos
popf
or
ds
xchg
xchg
or
js
fs
fmull
inc
pop
shll
leave
or
xor
mov
and
add
aaa
sub
push
lea
mov
and
adc
imul
mov
or
mov
jo
inc
sub
dec
ljmp
jmp
add
mov
mov
repnz
push
sbb
pop
push
movsb
lods
mov
push
xchg
pop
inc
je
cmpsb
std
cmp
push
lds
sbb
mov
cmpsb
push
sbb
sbb
aaa
aam
mov
push
leave
addr16
sbb
es
aad
nop
js
loop
lcall
addr16
cld
xchg
mov
cmpsl
pop
in
jne
jo
and
push
out
adcb
aad
mov
movsb
and
out
cmc
add
cwtl
or
pop
in
gs
mov
sbb
add
mov
and
jbe
pushf
sarb
cmp
push
repz
mov
pop
mov
sub
fdivrs
in
xlat
cmp
adc
adc
test
cltd
ss
fstpl
out
cwtl
mov
jmp
lret
mov
pusha
push
pop
loope
cmp
fsubr
in
hlt
sti
jo
sbb
mov
stc
pop
sub
hlt
add
xchg
shlb
shlb
daa
lds
rolb
dec
out
dec
mov
add
add
data16
jmp
jge
sbb
and
mov
outsb
in
nop
repz
fisubs
jne
push
add
ljmp
lcall
pusha
push
mov
in
nop
jle
inc
mov
xor
repz
lods
mov
pop
pop
js
cmpsl
jae
jmp
loope
ret
or
xchg
outsb
mov
pop
xor
cld
ja
jle
xor
inc
enter
xlat
or
jge
cmpsl
lret
ja
bound
cmp
cs
imul
add
test
out
lret
test
popa
repnz
pop
push
pop
sub
cmpsl
cld
push
fildl
xchg
cltd
inc
cmpsl
movb
jge
xchg
dec
jg
xchg
mov
sbb
or
fsubs
bound
add
mov
mov
out
imul
push
pop
ja
add
stos
data16
cmc
insb
xchg
mov
adc
popa
cmp
out
bound
push
imul
and
pop
push
int
fiaddl
sub
xchg
stos
fildll
testb
or
add
fimuls
xor
fstl
call
cmpsb
ss
rolb
and
or
add
sbbl
mov
jo
and
adc
fwait
and
imul
mov
aad
test
or
popf
push
xor
in
jge
or
pop
outsb
orb
dec
leave
les
sub
cmp
mov
popa
fstpl
sub
das
fxam
and
ljmp
pop
lock
in
inc
repz
add
jns
stos
out
xor
push
sti
and
and
outsl
dec
add
and
dec
push
repz
adc
jne
fisttps
int
call
pop
test
mov
add
or
ljmp
cmp
lcall
mov
mov
fs
lret
cmc
push
jmp
mulb
daa
imul
negb
adc
mov
xor
mov
and
adc
or
sub
push
fldt
bound
pop
xchg
shlb
sbb
ds
nop
out
aaa
dec
stos
mov
mov
in
mov
into
push
enter
mov
cmp
sarb
mov
push
sbb
mov
loopne
xchg
push
pop
sbb
test
into
push
pop
lods
mov
mov
js
jo
fsub
add
aas
jae
repnz
mov
mov
push
je
push
mov
mov
test
les
mov
xchg
enter
stc
jecxz
and
data16
insb
and
insb
pushl
mov
push
test
sub
mov
push
stos
rcll
por
fildll
mov
mov
inc
jne
cmc
testl
jae
sub
enter
lcall
mov
mov
jbe
and
cwtl
jae
jl
loop
or
sub
addr16
xchg
data16
jno
test
test
inc
push
pop
sahf
mov
popa
fldt
cmp
sbb
mov
sahf
lcall
xor
je
dec
xchg
or
mov
andb
pop
fistpl
push
test
out
mov
mov
in
or
inc
push
adc
dec
inc
ja
insl
inc
dec
std
adc
and
jae
cli
pop
pop
outsl
lcall
orl
out
dec
aam
repnz
rclb
aaa
ss
shll
add
xchg
pop
stc
int3
cmpl
or
loopne
lock
ss
pushf
mov
pop
push
add
mov
arpl
inc
data16
or
out
mov
popa
add
adc
test
daa
in
popa
dec
adc
jmp
pop
or
sub
sbb
enter
or
test
cmp
push
inc
cli
loop
pop
movsb
mov
push
clc
jle
or
adc
inc
xchg
jle
int
cmpsb
lahf
lret
xlat
inc
popa
lcall
xlat
ja
sbb
xchg
arpl
dec
mov
sbb
icebp
cmp
jae
dec
push
iret
int
ret
push
or
aaa
or
mov
mov
xchg
inc
mov
ja
rclb
xchg
and
ds
push
jge
pusha
call
mov
insb
rcrl
push
xlat
lods
mov
sbb
enter
test
xchg
push
aas
lods
push
push
cmp
test
out
add
or
int3
stos
cli
icebp
inc
mov
stos
cmp
mov
push
push
andb
pop
lea
ja
or
jge
dec
mov
ja
mov
push
inc
sbb
mov
movsb
aad
jbe
cmp
sbb
loope
or
xlat
xchg
xchg
mov
push
inc
or
fnsave
xor
nop
sub
stos
inc
push
adc
mov
adc
imul
inc
outsl
add
imul
xchg
add
lret
mov
call
das
iret
idivb
xchg
cs
dec
orb
xchg
mov
aas
pop
lret
mov
xor
fs
jne
in
scas
aas
pop
int3
repnz
dec
cmp
mov
adc
lds
adc
jg
xchg
stc
sub
imul
jge
mov
fcoms
xor
js
fsubs
mov
sahf
adc
push
pusha
mov
inc
andb
dec
mov
add
push
cmpsl
inc
sub
xor
mov
fisubl
mov
mov
shlb
pop
aam
fnstenv
xchg
sbb
movsb
and
movsb
movsb
in
or
sub
scas
dec
push
sarl
mov
cmp
cmp
push
nop
sub
mov
dec
ret
arpl
cmpsb
cmc
jnp
pop
mov
push
fwait
orb
mov
bound
xor
or
cmp
scas
lods
lret
pop
push
pop
mov
test
mov
fisttps
inc
rol
in
mov
pop
test
roll
xchg
ret
pop
jg
mov
loopne
imull
pop
ret
fimull
sahf
or
jo
inc
xlat
xor
ficoml
out
and
sarb
or
stos
cltd
mov
enter
mov
cmp
mov
pop
push
fs
jg
pushf
mov
mov
shll
rorb
xchg
push
push
mov
popf
enter
ljmp
mov
jp
cmp
nop
data16
add
sbb
pop
sti
xor
jae
push
les
adc
pop
push
out
rorb
and
in
test
sbb
xor
adc
shrb
dec
aas
and
mov
xor
push
outsl
das
mov
lahf
ret
daa
mov
add
lds
dec
mov
pop
popf
push
sub
inc
in
movsl
out
clc
mov
into
imul
clc
push
ret
mov
shlb
adc
cltd
imul
js
mov
fxch
jno
jne
sub
cs
pop
push
popa
enter
sahf
out
mov
bound
inc
jnp
xchg
or
data16
outsb
sub
int
add
sbb
aaa
cmpsb
jb
imul
out
and
dec
dec
out
adc
mov
adc
cmc
cmp
test
jg
push
lret
mov
mov
in
addb
mov
ljmp
xchg
cmp
sub
jae
ja
inc
js
mov
jg
adc
push
pop
repnz
add
adc
dec
pop
outsl
bound
fwait
js
out
in
imul
or
pop
fsubl
and
push
rcrb
cmc
inc
call
push
push
cmc
loopne
or
or
pusha
aaa
fst
js
lods
test
clc
pop
sahf
jle
pavgb
mov
mov
repnz
xorl
cmp
iret
or
test
inc
xor
xlat
fst
das
nop
bound
sub
imul
gs
cmp
roll
movsb
fsubl
inc
mov
loopne
cs
enter
adc
xor
mov
and
or
or
cltd
push
xchg
dec
inc
inc
and
push
jb
jbe
addr16
xor
flds
sub
mov
mov
mov
fildll
rorl
out
xchg
push
add
cld
popa
lret
pop
mov
sbb
repnz
push
and
das
mov
aaa
sarl
cld
cmc
in
pop
das
daa
das
andl
adc
sub
mov
sub
mov
push
jo
cmp
popa
idivb
dec
mov
clc
sti
mov
fs
mov
lock
es
adc
mov
loop
test
push
das
mov
mov
cmpb
ja
negl
enter
push
data16
mov
pop
leave
mov
sti
push
adc
lods
ret
cmc
gs
clc
aaa
adc
and
push
hlt
jo
pop
popf
addr16
js
xor
mov
jmp
sub
int
bound
out
add
jle
mov
lock
pop
mov
pop
test
cmpsb
cmp
cmp
int3
das
mov
mov
lret
xor
je
gs
xchg
push
dec
out
scas
loopne
test
icebp
lcall
data16
mov
ds
bound
xor
sub
repnz
and
fucomi
pushl
insb
xchg
ljmp
and
mov
int3
xchg
stos
jns
dec
add
in
es
xchg
rorl
fsqrt
test
mov
adc
sub
jl
fmuls
addl
fwait
or
ljmp
xchg
lcall
sub
sahf
push
das
andb
into
outsb
add
sbbb
movsl
stos
addr16
dec
xlat
jno
cltd
mov
mov
pop
adc
jo
jne
dec
mov
addb
adc
lret
or
dec
mov
mov
and
fnstsw
adc
lret
fidivrl
mov
scas
sub
sbb
hlt
xlat
repz
bound
iret
fdivrl
mov
and
add
adc
addl
mov
xchg
imul
push
ss
add
repz
mov
ds
pop
arpl
imul
enter
gs
or
rcrl
out
movsb
outsl
adc
arpl
inc
and
mov
stc
sbb
movl
inc
xor
sbb
jg
and
stos
mov
sub
sub
outsb
push
je
mov
aad
add
imul
and
shl
scas
jnp
push
jbe
loop
movsl
imul
loope
jno
dec
dec
call
test
fidivrs
xchg
mov
insb
fnstcw
mov
mov
fs
test
pop
imul
fsubl
fisubrl
and
xor
popf
cmpsl
shl
cmp
movsl
xor
and
xorl
negb
jne
fadd
sub
ror
test
add
sbb
out
dec
jmp
mov
les
push
mov
mov
test
stc
stos
sbb
cmpsb
xor
mov
aas
mov
mov
insl
push
and
and
lahf
das
mov
arpl
sub
push
add
popa
mov
cmp
mov
outsl
cmpsb
sub
xchg
and
aam
into
dec
stc
std
sbb
mov
iret
adc
pop
cmc
mov
imul
mov
cmp
popa
jbe
js
out
faddl
pmaxsw
inc
fisubs
call
jecxz
mov
push
cmp
xor
cmp
add
sbb
icebp
ja
lea
mov
mov
int
xor
add
fnstcw
or
and
xchg
hlt
sbb
fs
cli
jae
fmuls
xlat
out
or
imul
out
sbbl
popa
scas
xor
adc
ljmp
out
xchg
aad
stc
aad
jae
lods
pushf
pop
xlat
pop
jecxz
lock
jo
movsb
xlat
movsl
and
cld
cmc
mov
jp
ret
mov
cs
aaa
aas
add
lahf
xor
loope
push
mov
cmp
shr
push
mov
rcl
pop
shr
aad
and
xchg
mov
xor
dec
pusha
sbbl
test
mov
jbe
add
mov
cld
icebp
jmp
xor
push
push
adc
adcb
lea
fs
out
out
or
mov
xor
push
dec
out
movsb
fidivrl
push
and
xchg
adc
aam
sti
push
xor
jmp
ret
bound
leave
leave
aam
outsb
shlb
sbb
jns
lcall
jge
add
cwtl
mov
adc
xor
mov
pop
lahf
ss
sbbl
jbe
aas
push
rolb
call
jns
inc
mov
mov
xchg
sub
inc
loopne
pusha
popa
sub
adc
inc
xchg
xor
icebp
in
pop
adc
addr16
andl
adc
push
fcmovnbe
add
mov
mov
lea
mov
pusha
insl
in
dec
std
xchg
fnclex
inc
lods
cld
inc
push
mov
mov
iret
fnstenv
cmp
add
popf
push
pop
icebp
xchg
mov
xor
xlat
out
xor
loope
bound
gs
add
movsb
fsubrp
pop
or
fsub
fs
mov
loope
sbb
pop
loope
clc
and
mov
fnstenv
and
cld
cld
ljmp
inc
pop
out
out
test
xor
inc
adc
sti
xadd
lods
ret
out
xor
jle
mov
icebp
dec
notb
gs
pop
insl
xor
mov
mov
xor
js
mov
rolb
add
pop
inc
inc
and
sti
mov
sub
sub
mov
mov
cld
inc
adc
out
push
aaa
aaa
lods
scas
jmp
jno
adc
adc
sub
sub
inc
fld
push
cmp
sbb
xor
push
outsb
imul
test
cmpl
popa
inc
mov
addr16
or
mov
add
adcb
loopne
jno
jge
xchg
pop
and
sbb
outsb
or
sbb
test
das
ds
sub
mov
lahf
pop
inc
push
sbbb
cwtl
inc
jmp
fsubr
mov
fs
ds
xor
adcl
shll
xchg
jp
les
push
or
push
clc
cltd
push
cmpsl
lret
outsl
xchg
and
mov
mov
cmpb
mov
sub
dec
dec
add
xor
int
idiv
sub
xchg
adc
cmp
pop
lods
into
mov
add
fistpl
iret
and
in
sub
cmp
movsl
mov
add
xchg
lret
leave
sub
xchg
xor
inc
outsl
arpl
mov
adc
popa
mulb
push
sahf
imul
mov
mov
mov
cmp
adc
dec
cltd
inc
jmp
add
push
sbb
mov
and
fdiv
xchg
sub
adc
int3
push
mov
ss
sti
pop
fs
lods
pop
push
dec
and
mov
imul
pop
cld
sub
fimull
repz
sub
mov
or
into
call
mov
add
mov
jae
ret
dec
adc
into
fwait
push
decb
in
aam
jbe
xor
xor
lock
nop
xlat
xor
pop
inc
loope
outsb
clc
hlt
xor
stc
loop
mov
fldl
push
mov
inc
adc
shrl
add
ret
jbe
jl
aam
sti
cmp
mov
adc
pop
fmuls
inc
or
push
push
sarl
or
inc
push
pop
pop
jecxz
cmp
dec
cld
add
and
push
mov
mov
dec
fcomi
and
dec
pminub
cmp
sbb
push
pushf
pushl
jno
repz
sbb
fisubrl
mov
sub
ret
xor
aas
fdivrl
xchg
lock
out
scas
push
pusha
in
pop
leave
stc
dec
lret
xchg
jae
aas
test
mov
fbld
std
mov
inc
cmp
test
arpl
push
xchg
lods
addr16
xchg
mov
movsb
cld
mov
or
push
mov
dec
idiv
mov
negl
jbe
pop
inc
mov
add
dec
mov
mov
enter
or
leave
xchg
and
adc
xor
dec
aas
pop
or
loop
lods
and
out
adc
cli
push
dec
jecxz
test
mov
jo
push
mov
loop
movsl
arpl
out
call
mov
mov
stc
sbb
jg
adc
sub
enter
lret
and
testl
into
in
aad
movsl
inc
inc
pop
testl
mov
jge
mov
pop
adc
outsb
lret
aad
in
mov
push
push
xchg
sub
movsl
into
repnz
pop
loop
pusha
ret
je
ficoml
pop
out
add
cmp
mov
sbb
dec
ds
ss
pop
or
cltd
addb
push
mov
shlb
mov
adc
loop
or
stc
jge
out
jno
cld
pop
push
aam
mov
mov
fdiv
rcll
xor
es
jmp
mov
rolb
ljmp
mov
std
xlat
mov
cmp
push
mov
outsb
or
dec
mov
imul
decl
jns
bsf
and
jge
scas
repnz
xor
pusha
and
xchg
xor
mov
ljmp
adc
out
mov
pop
push
lret
rcll
push
xor
sbb
xchg
leave
enter
mov
cmp
pushf
sub
nop
das
inc
mov
imul
jle
sbb
pusha
lods
mov
loope
mov
xchg
and
scas
jecxz
shll
sub
iret
mov
aas
or
jg
nop
imul
sti
sbb
cltd
sub
or
cmp
sbb
adc
fldcw
mov
in
psubusb
sbb
repz
pop
and
ret
scas
xchg
cli
push
test
mov
call
xor
mov
in
lods
push
push
adc
mov
mov
mov
pop
xchg
ljmp
adc
gs
push
les
mov
sub
xor
or
xchg
cmp
filds
sub
inc
cmc
or
fisubrs
leave
fucom
push
push
sub
mov
lahf
adc
ja
jp
and
stos
bound
pop
mov
lock
pop
js
popf
out
or
xor
loopne
jne
add
cltd
push
xchg
je
imul
add
out
cwtl
jmp
aaa
outsb
movsb
cmp
cld
mov
add
xchg
sbb
mov
mov
lret
and
sbb
pop
sarl
ret
fcomps
loop
push
aas
into
in
pop
inc
addl
aam
rcll
mov
mov
jno
rorl
int3
outsb
xlat
sbb
mov
and
int
addr16
mov
mov
popa
xchg
out
loop
mov
add
lock
pop
fistl
mov
xchg
fs
cltd
std
xchg
mov
aaa
gs
add
ljmp
inc
xlat
lods
add
lahf
mov
jo
cmpsl
push
push
or
les
jle
dec
jo
mov
push
cmc
push
ficoml
jb
loope
sub
add
jl
inc
sub
ds
mov
shll
mov
out
sbb
test
je
cmpsb
jmp
jmp
fnstenv
pop
jp
mov
xchg
and
xchg
xor
out
pop
cmp
sbb
enter
insl
pop
cli
dec
sub
in
xchg
inc
adc
push
or
jns
shll
daa
xchg
mov
shrb
and
pop
shll
lcall
push
cltd
sbb
daa
repz
jg
push
sub
jae
push
sub
jb
mov
pop
out
lahf
cld
fnsave
ljmp
push
lret
or
in
mov
push
inc
fiadds
pop
add
sbb
into
add
cmpsl
push
cmp
pop
jae
ss
fcompl
mov
and
push
xor
std
pop
insb
cmp
dec
sub
push
cld
push
loope
mov
gs
xorl
push
in
add
pop
xchg
loopne
inc
mov
outsl
adc
mov
pop
add
divl
jmp
sbb
mov
repz
sahf
testb
mov
or
cltd
andl
int
xchg
ljmp
out
and
in
loope
pop
les
jmp
mov
repnz
push
mov
and
cltd
ret
int3
lahf
xlat
incl
imul
invd
mov
js
and
sbb
xchg
popa
jne
dec
testb
and
jo
pusha
xor
fistpl
adc
es
and
jne
mov
push
test
mov
lret
rorl
mov
in
jecxz
or
lock
lcall
adc
sub
jmp
adc
mov
mov
out
add
cli
and
shlb
out
cld
lret
pushf
push
xchg
loope
cmp
dec
pop
or
adc
leave
or
stos
negb
inc
mov
clc
inc
mov
lods
xor
cwtl
aaa
push
push
xchg
stc
cmpsl
repz
test
add
sub
sbb
mov
push
dec
lds
hlt
xchg
aas
jmp
ret
jne
mov
push
mov
out
sbb
jge
lods
test
cmpsl
sub
pusha
rorb
test
subl
push
cmp
sahf
and
and
arpl
imul
push
jae
adc
cmc
adc
adc
test
loope
or
rsqrtps
or
xor
movb
rclb
fisubs
sub
and
filds
enter
jge
pop
les
jns
inc
js
xor
lcall
data16
out
fcmovu
imull
jae
and
inc
mov
ss
add
adc
rorl
adc
mov
mov
jge
out
imul
mov
insl
mov
lds
fidivs
mov
leave
xlat
push
mov
push
jge
pop
fisttpl
mov
jge
and
cs
adc
sub
push
ljmp
dec
mov
in
push
add
dec
dec
dec
fwait
cmp
mov
stos
out
testb
out
adc
ret
ljmp
sbb
sub
mov
outsb
xchg
out
jle
xor
add
add
xchg
mov
in
and
dec
xchg
imul
insb
into
cltd
loop
lods
aad
xchg
nop
pop
popa
xchg
test
adc
testb
mov
pop
bound
xor
push
dec
fxam
test
xor
sbb
adc
adc
inc
jns
lret
gs
xchg
push
add
pop
in
outsb
lods
ficompl
mov
rcrl
fdivr
shl
mov
insl
mov
ret
inc
inc
add
push
fnstenv
loope
roll
vmovsd
mov
outsl
inc
dec
or
jp
mov
sbb
jmp
pop
jns
bound
or
or
fs
movsl
pop
movl
incl
jl
out
or
insb
sbb
subl
and
xor
cwtl
std
pop
or
enter
in
mov
aam
roll
lea
test
mov
sub
stos
imul
cli
dec
out
mov
rcl
push
fistl
arpl
scas
inc
scas
xchg
add
mov
add
int3
add
mov
cli
push
mov
jge
addl
sub
dec
in
popf
adc
add
stos
adc
push
lds
cli
stos
cwtl
jae
es
test
pop
rcll
push
dec
cmp
ljmp
xor
shlb
xor
inc
sbb
fidivrs
stos
outsl
in
gs
jp
repnz
mov
jecxz
jnp
and
aaa
adc
iret
pop
inc
mov
mov
lea
mov
mov
rcll
pop
lods
push
ror
mov
fcomps
fcomps
xor
mov
shr
jno
std
shrb
push
mov
dec
mov
dec
or
daa
pusha
pop
int
aam
inc
mov
sub
jg
push
inc
xor
sub
lahf
loopne
jle
outsb
or
cmpsl
adc
pop
out
jl
testl
xor
cmp
mov
xchg
movsb
jge
xchg
call
and
stc
adc
out
inc
in
inc
mov
push
addr16
or
mov
push
pop
notl
mov
push
pushf
cmpsl
sub
leave
sub
test
xor
ficoml
mov
cmp
cli
mov
jnp
es
or
aas
in
jns
pop
mov
pusha
enter
stc
pop
inc
mov
sbb
push
and
cmp
insl
jbe
in
loop
xchg
loope
cmp
leave
dec
in
xlat
adc
sti
outsb
fucomp
sbb
div
lret
push
add
popa
shrl
jp
mov
movsl
xchg
dec
xchg
mov
mov
addr16
rorl
xor
shlb
sub
mov
xorb
test
inc
add
std
in
rcrb
je
out
pop
push
ret
fucomp
push
jb
sub
pusha
cltd
js
jp
mov
push
ficomps
mov
shlb
mov
lahf
mov
pop
fwait
push
dec
mov
mov
iret
les
ret
shlb
fucomp
jno
fs
daa
cmp
shll
loopne
stos
or
mov
rcr
and
test
mov
pop
jbe
push
int3
in
cwtl
enter
cltd
xlat
sti
call
iret
test
lea
push
push
jne
je
sbb
mov
test
int3
jno
adc
divb
xor
xorl
test
jbe
push
mov
jmp
imul
or
ja
cltd
xchg
int
out
jno
xchg
inc
loopne
push
jae
sub
mov
add
dec
movl
andl
or
cmp
lea
xchg
sbb
jg
in
adc
push
loopne
xchg
jg
mov
mull
cmp
lret
add
scas
pop
aad
cmpsb
adc
popf
insl
fistpl
in
and
xchg
neg
daa
pop
fnsave
or
xor
xor
sbb
mov
lds
testb
cmp
mov
in
pop
sub
ret
jnp
icebp
dec
sbb
out
adc
inc
int
mov
iret
dec
fcomps
jae
lods
dec
and
push
lds
leave
adc
jmp
lea
fsubs
and
sub
adc
adc
loopne
cmpsb
sbb
pusha
add
jo
ss
mov
movsb
movsl
out
jecxz
fnstenv
popf
ja
test
call
pusha
leave
shr
adc
das
adc
pop
mov
cld
sbb
xor
lds
enter
insb
push
pop
push
rorl
test
mov
adc
test
dec
arpl
dec
es
flds
xchg
add
inc
pop
jp
in
push
sub
jae
insl
inc
cwtl
sbb
inc
add
mov
pop
out
sub
push
lret
in
sub
leave
push
dec
das
jg
add
hlt
adc
fcomps
mov
adc
clc
adc
pop
jb
cmp
sub
add
mov
ljmp
out
test
adc
jnp
aaa
and
dec
jmp
xor
inc
mov
lea
push
testb
pop
mov
and
rclb
xor
jo
test
pop
mov
inc
in
xchg
gs
test
adc
leave
fldl
out
scas
mov
push
ja
push
push
adc
mov
mov
xorl
cs
aaa
mov
outsl
adc
adc
push
xchg
scas
pop
sbb
inc
pop
cli
ja
lcall
mov
int
mov
and
sbb
fwait
outsb
push
les
pop
test
ja
cmp
call
popaw
adc
jnp
sub
add
ret
lods
mov
pusha
popf
sub
cmp
aas
inc
xor
iret
fimuls
push
sub
sub
iret
in
ret
push
mov
fcoms
and
push
mov
dec
pop
rcll
pop
ret
xor
pop
inc
cmpsb
arpl
scas
inc
sub
ficompl
in
mov
je
and
loopne
test
movsl
inc
or
fdivr
mov
mov
cmp
push
dec
int3
lock
fisttpl
xchg
in
add
lret
test
adc
lret
mov
or
add
call
stos
mov
cmpsb
inc
add
aad
divb
dec
arpl
mov
shl
scas
in
and
add
pop
xchg
aaa
xlat
xchg
rcr
cmp
push
add
mov
push
nop
enter
jle
adc
mov
push
adc
data16
jb
popa
iret
das
cli
jne
fwait
add
pop
scas
mov
mov
pop
xor
lea
mov
mov
and
popa
inc
adc
out
cli
mov
push
pusha
mov
ret
mov
insl
and
cli
ficoml
outsb
mov
cmp
mov
cmp
outsl
in
int
or
sbb
mov
mov
push
shll
adc
dec
movsb
pop
js
sbb
jbe
leave
inc
data16
sbb
jl
adc
rclb
stos
or
xchg
lds
or
repz
inc
enter
jbe
dec
dec
sti
inc
or
leave
outsl
pop
cli
out
push
ljmp
mov
shrb
pop
loopne
push
mov
add
mov
imul
and
ret
fstp
sub
jecxz
ljmp
ja
pop
lods
xchg
sbb
imul
dec
andl
scas
inc
inc
out
lcall
stos
insb
and
icebp
leave
cmp
push
mov
mov
push
or
add
dec
lcall
cs
test
dec
lahf
cmpsb
popa
lret
repz
popa
fmulp
jb
imul
out
add
xchg
xchg
lods
aaa
lcall
dec
cmp
mov
stc
jno
cltd
inc
mov
call
es
icebp
insb
jne
icebp
jmp
sarb
test
sub
pop
test
into
mov
add
mov
sub
ret
inc
mov
xor
in
jbe
sub
mov
push
test
mov
push
in
cld
adc
inc
out
test
inc
sbb
int3
add
pop
mov
sbb
aad
dec
ret
jnp
inc
test
xchg
dec
ljmp
adc
stc
repnz
test
lds
fisubrl
pop
xor
int3
jg
icebp
es
insl
cmc
movsl
xor
addr16
adc
add
inc
insb
and
dec
cmp
fstpt
lret
cmc
hlt
es
jbe
mov
outsl
mov
mov
call
sar
repz
adc
xorl
enter
push
push
clc
lret
mov
lods
hlt
lock
sbbl
shlb
sbb
pop
mov
push
out
add
mov
enter
mov
out
outsb
stc
cmp
mov
xchg
lcall
jo
mov
jbe
loop
pop
mov
aad
out
insb
push
adc
mov
mov
jge
nop
loop
fs
sub
lcall
adc
inc
jbe
pop
out
mov
es
sub
insb
xchg
xchg
in
cld
outsb
ror
cmp
inc
incb
xor
add
and
adc
xor
xor
jl
lret
jns
call
xor
cmp
xor
scas
jle
imul
mov
push
pop
pop
les
fs
in
lds
mov
pop
aam
test
pop
insl
xchg
jae
data16
ja
jle
cmpsl
fisttpl
gs
dec
inc
inc
xchg
xor
mov
dec
jae
jbe
pop
mov
sbb
ds
lock
pop
test
cmp
fcoms
test
sbb
pushf
rol
or
test
loop
push
addr16
mov
in
push
xchg
into
daa
mov
lds
sbb
popa
adc
fildl
dec
test
push
xlat
imul
std
push
push
inc
ja
int
inc
arpl
scas
jo
jecxz
pop
add
add
movsl
xchg
fwait
push
pop
fimuls
cld
pop
xor
rorb
jno
add
sbb
xor
imul
dec
imul
xlat
aaa
aam
mov
mov
xlat
lcall
push
inc
incb
xor
push
flds
sbb
dec
test
lock
cwtl
sub
sbbl
int
xchg
daa
stos
lods
stc
jp
arpl
add
add
pop
fucompp
lods
orb
sub
and
inc
cwtl
jge
icebp
in
inc
mov
out
mov
lea
lods
stos
iret
out
out
loope
inc
ds
or
lods
mov
insl
gs
ret
jge
stos
arpl
push
out
out
lahf
adc
jle
pop
cmp
add
mov
add
out
jns
shlb
cmp
data16
xchg
and
testb
adc
rol
cli
jl
xorl
stc
pop
push
sbb
pop
paddsb
xor
lret
popa
adc
lret
pop
xchg
lds
stos
mov
mov
sub
test
pop
icebp
cmpsl
mov
cld
inc
mov
mov
and
fadd
hlt
mov
mov
rolb
ja
xchg
scas
std
pop
rcll
movsb
ror
imul
jne
rcl
test
or
mov
sarb
mov
sbb
cmpl
cs
xchg
int
fstpl
mov
or
xchg
cs
sar
lret
xchg
mov
fnstsw
push
fldcw
cmp
push
mov
cmp
stos
in
push
cld
aaa
fmuls
ret
nop
mov
dec
cmp
call
stos
and
cmp
repnz
sub
mov
into
and
mov
pop
dec
in
repz
fsubrs
pop
fisubl
inc
test
sub
inc
xchg
movsl
cmp
es
and
mov
xor
cltd
xchg
ds
mov
testb
les
pusha
push
jbe
mov
push
mov
test
jle
dec
pop
adc
mov
daa
dec
dec
mov
popf
push
sbbl
lods
jae
sahf
inc
inc
ja
rcrl
loope
or
jl
push
pop
pop
fdivrs
mov
inc
fdivrl
cli
imul
lock
stc
cld
adc
or
std
ds
adc
hlt
rclb
cmpsb
and
lcall
push
int3
jnp
add
jne
cmpsb
ss
and
popa
pushf
jo
mov
ja
fwait
test
pop
mov
pop
add
mov
mov
pop
pop
mov
out
jle
bound
add
adc
inc
lods
sub
dec
mov
pop
or
aam
mov
mov
scas
pop
push
movsl
dec
fs
push
jle
or
lahf
icebp
jbe
xchg
cltd
rcrl
int
adc
shlb
jae
pop
cld
inc
sub
rol
stc
inc
jns
add
mov
and
sti
adc
add
orb
dec
add
clc
in
mov
repnz
push
or
or
ja
shlb
sbb
mov
loope
popa
push
ljmp
mov
les
popa
into
mov
icebp
jns
ljmp
into
int3
pop
mov
dec
and
shrb
call
push
cmp
inc
sub
mov
loope
lret
arpl
xor
push
enter
cmpsb
xor
fbstp
cmp
push
andl
arpl
pop
add
xchg
push
or
vcmpss
stos
icebp
int
pop
dec
mov
push
pop
rorl
loope
and
xor
icebp
mov
dec
inc
inc
mov
push
js
jnp
mov
bnd
gs
or
lods
xchg
mov
push
pop
sbb
xchg
sub
xor
jg
xchg
lods
arpl
push
inc
and
js
mov
pop
mov
mov
or
sub
mov
mov
cli
fiaddl
cmovo
in
sub
xchg
cmpl
test
sub
leave
int
sbb
les
xchg
mov
xlat
mov
sbb
jle
pop
dec
xor
into
in
push
icebp
cmp
rcll
xchg
jo
outsb
int
mov
adc
pop
lods
decb
rol
ds
add
cmp
xchg
mov
cmp
adc
stos
pop
or
loopne
inc
add
stos
add
pop
sti
dec
and
icebp
and
or
cmpsb
fimull
lcall
inc
fstpt
fadds
cld
push
sbb
mov
in
pop
data16
sahf
int3
cmpl
cld
mov
scas
sub
std
cmp
push
xor
cltd
sbb
adc
push
aam
xchg
push
cwtl
stos
or
lds
or
aaa
lock
loop
adc
mov
pop
jge
jno
js
sbb
sbb
scas
rcl
popf
cmp
test
jbe
pushf
pop
lcall
outsl
or
jns
lahf
push
or
and
sbb
lods
lds
aam
mov
into
push
sub
jbe
xchg
sub
push
or
mov
std
xor
shl
test
js
fisubl
lret
aaa
xor
dec
lahf
cmp
mov
push
xor
out
lcall
fmuls
in
aad
cld
aad
mov
adc
lret
fadd
scas
sub
mov
pop
je
push
pop
rcll
mov
mov
into
jb
lret
cld
shll
mov
adc
iret
shll
imul
and
xor
int
pushf
push
sub
sbb
shlb
mov
mov
jno
push
in
mov
ficomps
nop
iret
push
fiadds
call
dec
leave
hlt
add
repnz
icebp
xor
out
cmp
xor
sbb
inc
mov
loopne
outsl
movsl
popf
mov
lcall
push
mov
sbb
mov
arpl
inc
mov
xor
call
aas
test
push
jg
fstp
add
repnz
or
jecxz
shlb
nop
and
es
ja
sbb
subb
push
add
ljmp
cmp
inc
inc
lret
dec
lods
inc
aaa
mov
jmp
xchg
jns
xchg
enter
push
ss
or
or
int3
lret
mov
and
or
xchg
fstps
sub
movsl
stc
jl
sub
mov
push
icebp
and
push
ja
xor
add
xor
sub
dec
mov
push
add
inc
mov
fwait
cmp
sbbb
dec
das
sbb
es
ja
int
fucom
cwtl
xchg
push
xor
in
lret
inc
jg
fcoml
cmpl
pop
stos
pop
in
hlt
or
mov
pop
cli
push
jbe
sbb
in
scas
or
pop
inc
movsb
xchg
movsl
add
inc
dec
test
insl
xlat
cmp
imull
fldl
lds
cmp
xor
scas
pop
rol
or
push
lock
mov
sub
adc
ljmp
in
adcb
filds
jne
pop
adc
repz
loope
hlt
pop
push
movsb
imull
xlat
scas
sbbb
in
or
pop
ljmp
scas
sub
pop
add
adc
jo
pop
movsb
std
pop
out
cmp
mov
std
sbb
fidivs
xchg
mov
dec
fistl
mov
int
add
pop
adc
and
addb
pusha
stc
mov
scas
inc
fsub
pop
out
push
in
dec
lret
mov
rol
xchg
push
test
mov
push
in
jmp
or
loopne,pn
ret
scas
cwtl
dec
add
add
mov
add
mov
push
into
sub
imul
data16
or
std
xchg
ja
lods
fbld
int3
and
adc
and
divl
mov
push
push
jg
dec
in
movsl
mov
scas
cmpsl
lods
jo
lcall
movsb
ja
dec
push
test
or
jnp
or
rorb
jle
dec
movsl
shll
lock
scas
jo
mov
incl
jg
movsl
enter
mov
adc
clc
xchg
mov
mov
rcrl
mov
mov
adc
mov
clc
insb
pop
repnz
dec
out
imul
inc
outsb
ja
jmp
fstpl
mov
popf
repnz
pop
out
jb
scas
xor
xchg
rclb
cltd
pop
push
dec
sti
sbb
mov
jb
pop
sub
adc
lea
fistpl
jne
xchg
idiv
imul
addr16
in
push
call
pop
pusha
sahf
mov
testb
mov
ja
push
and
sbb
inc
pop
or
insb
stc
sub
sarl
rclb
push
pop
and
pop
jmp
sub
push
or
jmp
or
xchg
cs
inc
cmp
add
push
dec
aaa
or
add
fsubr
sub
insb
orb
rcrb
ja
jp
fdivrs
stos
mov
mov
cli
or
push
rcrl
imul
push
jb
imul
xchg
cwtl
fcoms
repz
cltd
sub
imul
mov
imul
pop
lret
in
sbb
in
adc
aaa
subl
jecxz
jecxz
push
rorb
add
push
sub
sub
lea
mov
mov
xchg
jp
cs
xor
push
and
xchg
stos
and
adc
cld
sbb
jg
xchg
mov
sub
in
movsb
sbb
mov
sub
repnz
pop
pop
jecxz
aas
ja
popa
leave
inc
cli
lret
jb
inc
insb
fisubs
clc
jnp
pop
jge
arpl
lock
dec
mov
icebp
mov
mov
xor
mov
fwait
out
pop
int
sbb
add
lds
pop
mov
xchg
or
dec
fisttpl
push
pop
xor
mov
iret
hlt
jg
cmp
lret
adc
dec
inc
test
xchg
std
outsb
pop
stos
jne
sub
out
mov
push
push
scas
lods
add
inc
push
push
into
lods
in
dec
push
xchg
sub
xchg
ret
aaa
mov
jle
daa
cltd
cmp
add
fisubs
or
jg
pop
popf
push
loop
inc
mov
jb
pop
xor
out
xchg
or
mov
xor
fldt
imul
sub
sub
daa
in
mov
aam
ret
aad
xchg
mov
ss
xchg
fidivl
fcoms
mov
push
push
je
xchg
ja
push
rcrl
imul
push
ja
pop
ret
leave
sbb
jle
popa
or
inc
dec
mov
and
xchg
add
hlt
mov
xor
jnp
pop
popa
xchg
and
xchg
jmp
lods
arpl
addb
int
xchg
pushf
adc
insb
sbb
stos
mov
pop
push
movsb
outsl
mov
out
sarb
pusha
ss
in
ja
dec
pop
or
mov
mov
into
and
push
cmpsl
sbb
sbb
or
out
es
sarb
aam
push
adc
or
and
call
call
nop
inc
xchg
mov
mov
outsl
mov
jnp
out
inc
mov
cmp
imul
jmp
push
rcrb
test
jae
inc
mov
pop
cmp
jecxz
fxch
lods
push
and
int
mov
jae,pn
mov
andb
ret
adc
std
jns
pop
testl
bound
loope,pn
mov
rcll
push
inc
pop
jns
mov
dec
gs
xor
pop
sub
clc
test
sbb
mov
inc
loop
or
adc
jecxz
ficomps
mov
hlt
sbb
cltd
push
pushf
cltd
dec
aas
xlat
pushf
adc
cmp
jecxz
stos
push
cwtl
sub
xor
aam
daa
scas
jno
xor
cltd
xchg
inc
addr16
ficoms
in
in
mov
sbb
xchg
xchg
adc
jle
in
or
arpl
mov
inc
xor
mov
mov
push
pushf
cmc
adc
fists
ret
mov
xor
ss
xor
push
mov
rcll
mov
into
pushf
aam
xchg
pop
sbb
int
lods
leave
stc
cld
lret
xchg
mov
add
inc
lea
out
cmp
mov
pop
xor
loopne
nop
sbb
out
std
xchg
mov
inc
inc
stc
fsubrl
scas
xor
das
scas
notl
inc
js
imul
in
pop
fbstp
mov
sbbl
mov
xchg
and
ss
test
mov
sub
int
pop
sarb
and
pop
inc
mov
cmp
cmc
rcr
cmc
loopne
dec
repz
jno
ret
mov
add
std
mov
cmp
mov
xchg
test
lret
ret
jo
mov
push
pop
adc
dec
mov
push
movaps
icebp
jmp
cmp
sub
fsubrl
in
notl
mov
int
sbb
js
adc
sub
pop
or
imul
dec
sahf
in
daa
sbb
ljmp
stos
jo
cmp
or
outsb
stos
rorl
or
data16
popf
aas
xchg
push
xor
xor
rol
cltd
stos
mov
int3
sbb
pop
mov
lret
sub
or
push
int
jb
stos
pop
push
pop
movsl
dec
out
adc
inc
rcrb
test
fnsave
mov
rol
mov
xor
popf
inc
pop
pop
cwtl
push
mov
and
add
or
sbb
stos
je
inc
shl
sub
sbb
into
popl
pop
and
imul
cmpsb
in
lods
sbb
les
sub
sub
fsts
xchg
or
aaa
int3
mov
aaa
test
test
xchg
mov
addr16
inc
std
rolb
or
add
cwtl
pop
mov
jge
dec
inc
imul
in
insl
add
clc
lret
push
pusha
loope
out
add
dec
mov
aaa
mov
adc
lahf
in
stos
jne
push
cltd
imul
dec
mov
cmpsb
xchg
jne
jbe
jmp
icebp
cmp
jo
jl
inc
push
test
call
icebp
cmp
test
inc
or
sarb
push
dec
pop
mov
ret
jae
scas
pop
loopne
xchg
xchg
ljmp
pop
or
sbb
mov
push
test
push
popa
push
out
aas
rorb
or
and
pop
insl
rcrb
adc
xchg
movsl
mov
jmp
jg
stc
pop
inc
mov
push
repnz
jne
mov
or
xchg
popa
hlt
lret
es
inc
mov
out
outsl
out
mov
jle
inc
inc
dec
xor
lret
fildl
inc
inc
fnstenv
stos
mov
ja
leave
mov
add
in
push
inc
pop
mov
mov
outsl
inc
sbb
xchg
icebp
xchg
sbb
leave
mov
mov
jne
leave
lcall
lret
fs
inc
push
aad
xor
arpl
clc
xchg
add
loope
mov
cld
es
cwtl
rcrl
mov
jge
je
fwait
xor
imul
adc
jnp
popa
mov
ficomps
call
inc
mov
aad
cld
sarb
inc
lea
pop
jmp
lods
daa
movsl
cmp
iret
in
cmp
cmp
cltd
std
jne
and
jno
fldcw
adc
jmp
xor
pop
cld
jmp
scas
sub
int
xor
jmp
out
inc
lcall
mov
cmpsl
sbb
popf
popa
jne
outsb
mov
das
xchg
jl
dec
outsl
sbb
push
and
addr16
bound
loope
cmp
fsubr
inc
dec
jae
inc
test
lahf
stos
jmp
cmp
jge
rorb
sub
mov
pop
or
ret
sbb
test
mov
pop
and
or
ljmp
daa
and
jecxz
jmp
mov
cli
dec
cmp
adcb
add
dec
jg
cmp
out
in
movsl
xchg
xchg
cmp
and
jp
dec
fsubl
jge
xchg
dec
and
and
pusha
sub
sub
mov
cmp
xchg
outsb
int3
adc
or
pop
mov
js
dec
adc
inc
adc
loop
lret
popf
push
mov
leave
call
jmp
inc
cmp
and
mov
push
pop
dec
std
xlat
adc
xchg
push
push
xchg
xchg
js
sub
mov
and
push
mov
mov
or
jge
pop
clc
or
rolb
add
sti
mov
test
pop
jae
jmp
adc
shl
push
mov
mov
push
inc
mov
ss
mov
and
mov
in
mov
adc
fisubrl
sbb
xchg
push
cltd
mov
pusha
in
mov
pop
and
xor
in
push
inc
repz
lea
pushl
stc
les
pop
jp
mov
push
and
sub
js
push
andl
repz
js
dec
mov
dec
test
outsl
and
xchg
in
mov
push
jmp
mov
iret
das
lds
int
lahf
sbb
cmp
xor
pop
xlat
xor
push
pop
outsl
xchg
repz
cmp
fwait
sbb
das
push
cmpsl
shrb
das
lea
fisttpll
notl
js
lods
lock
cmc
lea
dec
xchg
ja
mov
xchg
sbb
jnp
add
inc
xchg
arpl
rcrl
imul
sbb
push
pop
lcall
jp
add
push
adc
sbb
sbb
xor
mov
mov
ret
lret
jo
xchg
cmpsl
mov
fmuls
cmp
pop
push
mov
lahf
adc
js
mov
cmp
fwait
mov
cmp
test
adc
fstl
test
lcall
push
hlt
cmc
mov
push
sbb
push
sbb
jo
lcall
push
cwtl
ds
xchg
dec
adcb
stos
out
fcmovnbe
or
sbb
pusha
das
dec
adc
clc
clc
mov
movsl
fs
xor
push
push
lahf
add
loope
inc
add
xchg
xchg
pop
jmp
ret
jge
mov
mov
pop
mov
shl
aas
adc
mov
lahf
mov
push
jnp
fwait
jp
adc
negb
fwait
pop
aas
pop
movsb
xchg
pop
dec
leave
pop
testl
pop
pop
mov
cmpsb
test
adc
mov
ja
sbb
hlt
or
ljmp
jmp
mov
inc
jo
popa
xchg
rcl
popa
popa
mov
nop
push
jmp
mov
in
mov
fisubl
sbb
mov
clc
in
and
inc
pop
or
cld
ss
sahf
int3
int
popl
int
add
daa
pop
inc
scas
and
jecxz
add
mov
pushf
or
mov
mov
jmp
push
mov
jbe
or
jl
sub
inc
mov
mov
jnp
out
xor
in
mov
pop
mov
jns
mov
xchg
and
adc
ret
cwtl
andl
jl
or
cmp
loope
push
pop
popf
adc
stos
jecxz
mov
jmp
jnp
or
push
jle
adc
mov
push
mov
sub
adc
push
xlat
push
arpl
out
sbb
les
cmp
sahf
mov
jnp
les
enter
insl
arpl
loopne
cmp
imul
mov
insb
mov
push
dec
mov
mov
xor
in
in
mov
xchg
test
imul
cmc
cmpsl
ljmp
push
push
mov
adc
pop
dec
mov
jb
ret
jns
dec
xchg
shlb
ja
in
jp
adc
inc
mov
mov
int3
xchg
dec
adc
cmpsl
inc
orb
and
fcmove
add
repz
sub
into
inc
sub
add
push
lret
pushf
div
adc
mov
test
out
orl
inc
testl
loop
ficoml
mov
xchg
scas
cwtl
cmp
adc
mov
inc
out
inc
push
jne
cmpsb
iret
sbb
leave
pushf
xchg
insb
push
cli
xchg
shll
lods
aam
sub
loope
and
xor
sbb
and
pop
add
jecxz
or
arpl
sbb
add
aaa
or
jle
aaa
xor
pop
cld
or
loopne
cwtl
call
jmp
adc
jp
sbbb
jb
push
pop
push
js
dec
fwait
adc
dec
mov
xchg
insl
jp
inc
add
ja
shl
push
shlb
dec
sub
inc
roll
aam
mov
and
jecxz
push
push
dec
dec
lods
pop
pop
dec
xor
inc
hlt
jg
or
jo
int
div
pop
xlat
and
jp
rorb
add
xor
int
adc
imul
mov
out
dec
cli
rcr
ja
nop
jl
rolb
orb
adc
negl
mov
int
in
sahf
test
in
jmp
xlat
imul
filds
test
leave
roll
je
cs
int
inc
inc
popf
repz
lret
lods
mov
mov
xor
jge
outsl
iret
xlat
jo
sub
adc
sbb
jge
pop
popfw
ffreep
out
and
push
sbb
pushf
rdmsr
dec
push
outsb
std
xor
into
subb
sbb
xor
js
loope
pusha
leave
inc
je
repnz
ret
or
adc
les
pop
andl
fnstenv
and
das
xor
ror
cs
cmpsl
in
xor
xchg
push
dec
rolb
mov
test
cmp
lret
fwait
loopne
mov
sti
out
pop
std
lds
adc
shlb
inc
sub
outsl
push
shrl
popa
mov
add
mov
idivb
loop
je
mov
jo
mov
leave
addr16
push
xchg
ds
ja
lock
rcrb
xchg
sbb
xor
mov
mov
popa
mov
loop
inc
sti
cmp
loop
and
arpl
pop
push
mov
and
out
xor
lret
pmullw
xor
clc
es
leave
je
lds
leave
mov
cmp
in
push
push
dec
mov
ficoms
cmp
and
adc
stos
inc
mov
repnz
lcall
pusha
lret
sub
dec
divb
in
cmp
or
test
dec
push
or
in
dec
pop
repnz
aam
and
lea
jno
daa
xchg
enter
adc
mov
inc
jl
rcl
mov
and
lds
or
inc
enter
sub
xlat
push
rclb
sahf
mov
inc
nop
jno
add
ret
xchg
xchg
js
sub
add
fists
or
nop
dec
loopne
and
data16
add
sti
sub
in
fmuls
jl
xchg
fldl
push
cwtl
mov
jge
adc
dec
push
jns
jno
dec
xor
and
scas
cmpsl
rclb
into
jp
pop
mov
inc
leave
cmp
inc
leave
jae
jbe
in
addb
sub
or
lret
cmc
pop
repz
cwtl
pop
xchg
rclb
sub
add
mov
ret
div
mov
in
dec
js
hlt
cmp
rcll
dec
mov
add
cmpsl
shrb
sbb
imul
push
in
sub
addb
sbb
scas
inc
adc
dec
add
jecxz
jne
aad
mov
jmp
icebp
jmp
outsl
mov
stc
sbb
sahf
imul
sub
jae
sbb
pop
jnp
inc
call
or
cwtl
divb
repnz
push
pop
hlt
fdivrl
inc
leave
arpl
mull
sbb
popa
test
jno
mov
dec
test
std
icebp
mov
mov
xlat
out
mov
arpl
or
xchg
adc
lret
or
es
cmp
pop
xchg
rolb
sub
jnp
roll
push
push
mov
cld
fildl
xchg
sub
lods
inc
scas
jb
stos
xchg
pop
aas
dec
aad
push
xchg
dec
or
cmp
call
add
insb
and
fdivs
xor
popf
mov
notl
inc
lods
mov
xchg
jmp
test
movsb
pushf
pop
decb
push
mov
lods
push
dec
push
jmp
mov
pop
in
imul
data16
mov
or
xchg
xchg
xor
push
aad
inc
orb
scas
filds
cld
mov
gs
adc
rcr
fldcw
movsb
mov
test
inc
mov
xchg
adc
mov
jl
mov
movsl
lcall
insl
mov
pushf
xlat
shrl
cmp
lods
and
js
icebp
inc
inc
fs
cmp
fmul
filds
cs
in
shrl
test
push
movsl
xchg
xchg
cmp
push
push
xchg
mov
daa
outsl
sbbl
andb
loop
push
xchg
xchg
mull
xchg
dec
xchg
sbb
ljmp
mov
push
sub
and
add
lret
out
sbb
pop
sub
mov
adc
lea
pop
push
xchg
jecxz
inc
mov
jne
push
dec
cltd
xchg
mov
and
xchg
mov
mov
jnp
aam
and
movl
leave
xorl
add
andl
xchg
lods
ljmp
roll
outsl
sbb
aam
jnp
sub
cmp
pop
addb
adc
lcall
fisttpl
je
sub
pop
mov
les
cmp
bound
aaa
add
cmp
icebp
dec
fldenv
sub
push
repnz
push
lcall
xlat
push
xchg
jne
scas
or
hlt
leave
pop
stos
push
movsl
clc
cmp
jmp
movsb
jl
mov
mov
xchg
data16
int3
scas
fwait
stos
push
enter
adc
les
mov
push
scas
jecxz
ret
inc
mov
loop
mov
xchg
add
mov
xchg
movsb
sub
xlat
and
xchg
sti
in
lret
mov
ret
lret
xchg
fldcw
jecxz
jge
push
xchg
or
lret
daa
adc
mov
sub
jbe
test
push
mov
mov
cmpb
jge
mov
test
int
jp
in
into
inc
mov
ficoml
rolb
lods
push
outsb
inc
pushl
mov
aaa
popa
sarl
push
sub
cmc
lcall
je
or
push
xchg
in
dec
enter
mov
mov
add
or
pushf
inc
or
gs
cmpsb
pop
rorl
addr16
ja
shl
mov
sbb
dec
sbbl
mov
adc
ja
xor
sub
xchg
xor
adc
add
mov
and
cld
pushf
pop
fadds
fmul
movsl
leave
cli
pop
jo
jo
in
orl
push
dec
fdivrl
sub
cmp
test
sub
faddl
in
pusha
iret
sbb
adc
rcl
push
mov
pop
ljmp
inc
sub
ret
sbb
inc
adc
sarb
or
cld
pop
adc
movsl
xor
fdivrl
mov
mov
into
out
mov
jae
mov
push
add
stc
mov
aas
cmp
lds
mov
cmpsl
and
mov
nop
mov
xor
jo
shrl
mov
fnstcw
movl
lahf
pop
dec
rcll
jp
and
nop
out
fnsave
sbb
invd
shl
xchg
repnz
or
push
mov
loop
fdivrl
out
popl
sub
pushf
mov
stos
cmp
mov
imul
adc
mov
repz
xor
orl
mov
daa
push
in
cmp
sbbb
loope
push
and
imul
fcmovbe
test
cmp
dec
jno
cmp
insb
dec
test
jns
inc
push
jp
add
imul
aaa
and
stc
dec
dec
adc
outsb
jmp
stc
add
add
test
jno
nop
mov
pusha
inc
sbb
andb
add
cmp
loope
push
daa
push
and
or
and
jnp
inc
lret
mov
mov
int3
mov
inc
mov
jne
out
push
fsts
xchg
lahf
out
pop
gs
jne
test
cmpsb
mov
je
mov
sub
imul
cwtl
or
sbb
adc
jl
repnz
fs
nop
je
dec
adc
cmp
and
es
lret
test
sbb
or
add
push
sub
jmp
into
mov
push
stc
jns
or
stos
xchg
dec
xor
pop
mov
shrl
orb
push
js
popa
lods
mov
data16
clc
sti
xor
icebp
xorb
cltd
dec
movsl
xor
pushl
jl
and
mov
mov
fidivs
in
xor
push
out
stos
xchg
push
adc
pop
mov
jb
xor
dec
xor
cmp
insl
js
dec
sbb
scas
sbb
sub
into
call
xchg
movsl
insb
rorl
jnp,pn
jnp
cmp
pop
cmp
mov
loope
xchg
inc
inc
iret
test
inc
call
je
sub
xor
mov
jae
lock
cmp
stc
cli
mov
and
add
mov
cs
push
popa
orb
push
inc
sbb
das
sbb
lahf
and
push
and
jle,pt
outsb
in
inc
jle
fisubl
cmp
jo
outsb
inc
test
mov
cmp
popf
or
aam
popf
pop
sub
scas
cmp
cmc
mov
outsl
pushf
jl
and
xlat
ficoml
jge
jne
rcll
sahf
mov
sarb
sbb
daa
sbb
jge
repnz
lods
sbb
sub
sahf
xor
stos
jae
dec
test
adc
pop
int
cmp
jecxz
aad
jecxz
test
fbstp
das
mov
daa
rcrb
pop
adc
mov
jecxz
data16
add
cld
aaa
popa
jle
and
inc
hlt
dec
es
in
add
in
lock
aad
mov
add
or
pop
sub
xlat
fiadds
mov
stos
or
sub
xchg
jl
cmp
test
xchg
lcall
inc
and
out
nop
leave
aad
je
sub
call
mov
mov
subb
mov
add
mov
cmp
sub
lret
cmpsb
add
and
dec
out
mov
push
rorb
xlat
cmpsl
pop
xchg
dec
int3
jns
inc
mov
pop
pop
mov
push
add
lret
out
mov
imul
jl
xchg
jns
push
fidivs
test
in
test
es
bound
jno
ds
mov
mov
arpl
push
aaa
mov
daa
pop
shlb
ja
iret
xor
iret
or
shl
mov
flds
or
xor
imul
xchg
pop
outsb
loope
cwtl
movsb
xchg
clc
stos
pop
mov
cmc
icebp
into
outsb
roll
push
xchg
es
lret
bound
push
fmuls
jne
and
lcall
adc
shl
aaa
gs
fdivl
test
sub
push
ret
lcall
test
dec
xor
xor
daa
fwait
mov
scas
popf
dec
out
movsb
xor
pushl
rcll
sbb
mov
jns
iret
imul
xlat
mov
out
mov
addr16
or
xlat
mov
cmp
xor
mov
cltd
dec
cmp
cmpsl
mov
pop
sahf
in
sar
addr16
mov
and
aam
cmp
imull
rcrb
frstor
call
inc
jne
je
xchg
cmp
shlb
inc
and
and
in
outsl
addr16
push
ljmp
xor
push
xlat
loope
and
fildl
mov
fisubl
mov
out
cmp
lock
loope
push
push
ss
cmp
in
push
ljmp
adc
jae
pusha
loope
push
cmp
xchg
cwtl
popa
lds
xor
xor
or
dec
and
ja
sbbl
mov
bound
xor
mov
push
notb
jne
dec
sbb
aam
sub
mov
jecxz
lret
cltd
xor
cmp
push
dec
roll
int3
lahf
popf
fnop
mov
testb
fs
mov
sbb
cs
ds
shll
mov
inc
jmp
hlt
pop
test
cmp
mov
sahf
jb
decl
or
in
js
cltd
inc
lret
push
dec
sahf
leave
xchg
fwait
mov
mov
mov
sbb
and
into
push
lea
push
jmp
inc
aad
dec
jge
mov
mov
fistps
loope
lods
push
insl
adc
scas
sbb
ss
inc
pop
mov
fcmovnbe
mov
int
arpl
and
inc
mov
sar
ds
adc
mov
cmp
dec
xor
sub
jg
xchg
sub
jns
sbbl
lret
mov
popf
dec
lods
cmp
hlt
outsl
add
and
push
fs
ret
pop
dec
out
xlat
dec
insb
into
lods
inc
jge
inc
sbb
ror
andl
dec
push
int
jae
and
mov
insl
xchg
lods
push
jmp
icebp
mov
push
shrb
xchg
imul
push
adc
jns
loopne
shr
in
lods
and
adc
jo
nop
or
into
pop
flds
mov
mov
xchg
sbb
sub
sub
repz
fs
mov
rcrb
test
cwtl
cli
addl
in
inc
shll
push
sub
xor
inc
dec
testl
jg
mov
pop
movsb
shll
dec
jbe
mov
lret
cs
inc
pop
stos
imul
dec
adc
iret
clc
int3
test
ja
shlb
xor
inc
pop
fisttpl
add
adc
pop
xor
mov
dec
adc
stos
movsb
or
pop
pushf
adc
pop
pop
lock
push
scas
mov
jns
adc
gs
insl
push
lahf
push
mov
inc
xchg
repz
js
daa
or
pop
cmp
enter
push
ds
cmpsl
jb
mov
xor
out
cli
cmpb
mov
sbb
cmp
cmp
cli
xlat
sbb
cs
lea
jo
jp
call
lahf
test
fsubl
adc
xor
mov
push
sar
mov
cmp
sbb
pop
pop
in
mov
push
cmp
push
jmp
inc
sbb
push
and
dec
movsl
mov
xlat
xchg
push
call
jo
dec
loopne
flds
lock
leave
pushf
test
fs
addr16
enter
call
movsb
rolb
mov
jbe
cmp
arpl
repnz
loope
int3
push
mov
push
nop
push
scas
outsb
mov
mov
jle
cmp
test
cmp
insb
fcomps
mov
clc
js
inc
add
lods
jmp
je
in
sbb
pop
xchg
ljmp
test
sub
arpl
inc
test
das
inc
sub
gs
das
jg
push
shrl
xchg
ds
add
mov
adc
dec
sbb
cmp
ds
xor
pop
dec
orb
mov
dec
add
lock
scas
std
imul
out
sub
add
pop
iret
add
jl
lret
imul
pop
jne
icebp
in
jp
mov
sub
int
and
iret
outsl
xlat
js
jp
or
leave
xor
into
dec
pushw
adc
stc
mov
sti
dec
mov
mov
lock
or
fldl
jno
add
leave
sbb
loop
scas
leave
add
inc
pop
std
in
repz
dec
dec
in
cmp
movsb
sar
pop
enter
insl
push
loop
cmpsb
iret
pop
push
or
test
subb
cltd
jg
xchg
fiadds
push
ljmp
push
lea
and
lret
dec
insb
xor
or
ja
inc
jo
mov
mov
push
in
jg
mov
sub
adc
pop
jo
xchg
int3
xchg
push
jb
xchg
push
in
int
sbb
push
idivb
fisubrl
jge
push
mov
push
lods
mov
xchg
int3
push
xlat
ja
dec
dec
xor
pop
rcrb
lret
imul
ret
jecxz
out
xlat
xchg
inc
sti
insb
fwait
jmp
imul
cmpsl
out
std
pop
jg
cltd
cmpsl
mov
les
mov
iret
rolb
dec
sub
addr16
lahf
add
sub
mov
xchg
sbb
icebp
push
sub
cmp
xor
cmp
ljmp
mov
addr16
cltd
in
adcl
xor
repnz
xchg
aad
idiv
mov
pusha
lea
sub
loope
sbb
push
xchg
sub
push
rcrl
xchg
add
push
pop
shlb
icebp
push
roll
ds
jmp
in
lods
stos
ficoml
adc
mov
lcall
mov
mov
pop
dec
loopne
mov
cmp
movsl
adc
into
add
shr
xchg
inc
test
sub
cmp
shrb
mov
leave
subb
push
cmp
lods
in
out
cmp
mov
pop
xchg
roll
roll
push
inc
cmp
popa
std
incl
pusha
pop
mov
nop
or
add
jns
inc
xchg
ds
shlb
xchg
mov
dec
sub
ss
xchg
cli
ds
loope
cld
dec
gs
sbb
add
add
fnstsw
cmp
and
stc
call
xchg
adc
es
and
call
xor
mov
arpl
aas
stos
mov
iret
jl
dec
into
dec
inc
xor
xchg
in
xor
pop
fadds
xor
jb
cmp
cmp
and
into
popa
dec
mov
dec
cltd
dec
into
mov
in
cltd
test
lock
jmpw
fisubrl
add
ds
dec
lds
ja
rorl
test
pop
xchg
aam
daa
cmp
fmuls
ljmp
xchg
jnp
shl
pop
pop
pop
pop
leave
subb
arpl
or
pop
shr
cmp
dec
pop
cmc
cmp
leave
or
adc
push
fcomps
repnz
cmp
adc
push
daa
imul
xchg
daa
jno
xchg
jmp
pop
inc
cmp
lcall
mov
pop
mov
cmpsl
push
pushf
dec
xchg
or
pop
loop
popf
mov
out
jno
adc
out
mov
shlb
loop
jnp
scas
or
mov
arpl
xchg
gs
cmpb
adc
fimuls
adc
xchg
sbb
pop
lahf
fldt
mulb
ljmp
repnz
mov
loope
mov
adc
cmp
jo
and
mov
xchg
mov
mov
dec
test
push
mov
sub
out
inc
clc
int3
dec
sub
int
loope
popf
shll
add
jp
mov
repz
cmp
pop
xchg
std
inc
xlat
in
scas
clc
nop
pop
jbe
lds
jns
mov
inc
stos
test
jp
repz
loopne
fimull
adc
or
pop
push
ret
and
cmp
in
push
movntps
and
fs
jmp
je
mov
jnp
jnp
cwtl
or
pop
fwait
jae
add
adc
aam
mov
repz
push
test
jnp
popa
ds
pop
fisubrl
mov
xor
mov
or
adc
out
movsb
aaa
dec
sti
xchg
jl
push
push
sub
js
loop
sbb
pop
movsl
aad
outsl
mov
lea
imul
push
mov
jo
jae
sbb
cmp
js
mov
insl
mov
or
adc
pop
adc
or
insl
pop
mov
inc
adc
inc
daa
fmuls
leave
outsl
push
orl
add
add
cmc
fscale
orl
cmp
neg
jb
arpl
pushf
iret
sub
and
mov
cs
xchg
repz
sbb
jbe
scas
clc
mov
mov
xchg
sbb
mov
dec
enter
xor
inc
lods
pop
xor
sub
cmp
cli
adc
jne
gs
mov
jecxz
push
in
out
fdivr
mov
cmp
adc
xor
int3
push
pop
cmp
push
cmp
add
xor
shrb
mov
adc
ret
inc
jp
or
fwait
sahf
or
cmpsl
movsl
mov
xchg
and
jns
xchg
mov
stc
mov
in
mov
pop
mov
mov
add
loop
or
mov
cmc
sub
sar
movsb
cmp
fucom
jmp
push
or
mov
stos
jae
or
mov
add
mov
cltd
iret
aad
sti
int
stos
enter
dec
or
addr16
divl
xlat
xor
jg
jp
inc
icebp
into
iret
dec
pushl
jbe
std
and
push
pop
loopne
sbb
xchg
cmp
jmp
or
jb
cmpsl
pop
mov
or
cmp
mov
ffree
data16
popf
int
jmp
push
xlat
push
dec
cmp
pop
fcomi
pop
push
mov
inc
popf
imul
loope
jns
ds
add
fbld
dec
xchg
or
push
cmp
rcl
pop
sub
sbbl
insb
aam
les
fstps
push
clc
cmpsb
cltd
mov
xchg
mov
leave
ret
pop
rcll
rolb
xor
inc
icebp
decl
xchg
push
ret
stos
and
pushf
sub
bound
mov
xchg
lret
gs
mov
daa
out
inc
test
mov
loop
xor
cmp
jbe
test
mov
jmp
sbb
in
add
mov
call
cli
incl
mov
push
mov
incl
mov
mov
incl
shrb
add
adc
pop
incl
rcr
rolb
je
enter
enter
cmp
roll
leave
ror
dec
enter
imul
add
cmp
enter
enter
fwait
inc
add
test
leave
incl
ret
movsl
inc
add
add
leave
add
jno
incl
les
or
dec
lret
lds
lret
lret
lock
incl
aam
movb
inc
lret
add
dec
lret
incl
jb
movl
add
es
incl
enter
add
pop
enter
je
incl
enter
add
xchg
enter
add
incl
leave
leave
add
push
leave
int3
add
arpl
incl
lret
lret
or
insb
int
add
call
test
mov
loop
add
clc
sar
add
xor
pop
mov
ret
scas
and
scas
add
inc
mov
ljmp
mov
incl
scas
inc
ljmp
mov
incl
scas
cmp
scas
add
call
adc
cmp
mov
incl
scas
lcall
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
rolb
jg
incl
mov
pushl
rolb
mov
push
pushl
rolb
es
mov
pushl
add
add
incl
mov
pushl
add
push
sar
mov
pushl
roll
int3
sar
mov
pushl
roll
aaa
sar
mov
pushl
roll
mov
incl
mov
pushl
ret
arpl
incl
mov
pushl
ret
hlt
ret
mov
pushl
ret
add
pushl
ret
aad
incl
mov
pushl
ret
dec
ret
mov
pushl
ret
add
mov
incl
mov
ret
push
mov
ret
incl
mov
ret
cmc
mov
ret
incl
mov
ret
xor
ret
incl
mov
ret
dec
mov
ret
incl
mov
ret
push
mov
ret
incl
mov
les
add
add
les
les
pushl
mov
mov
les
jmp
incl
mov
cld
mov
incl
mov
les
push
incl
mov
icebp
mov
incl
mov
lds
mov
mov
lds
call
sar
add
sarb
incl
xchg
push
dec
jle
add
outsl
movsl
incl
jle
incl
mov
incl
mov
mov
jp
incl
movsb
and
movsb
add
incl
jmp
mov
incl
cmpsb
aas
jmp
mov
incl
cmpsl
or
cmpsl
add
incl
incl
test
ljmp
mov
incl
test
mov
jmp
incl
stos
inc
ljmp
mov
incl
stos
nop
ljmp
mov
incl
stos
aam
stos
add
aam
incl
lods
mov
lods
add
decl
xchg
ljmp
mov
incl
lods
insl
ljmp
mov
incl
scas
scas
add
ljmp
mov
scas
add
incl
jne
mov
mov
call
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
rolb
fcmovnb
incl
mov
pushl
add
or
pushl
roll
cld
sar
mov
pushl
ret
bnd
mov
pushl
ret
iret
ret
mov
pushl
ret
popa
ret
incl
mov
ret
add
lods
ret
incl
mov
ret
int
ret
add
xchg
ret
incl
mov
les
incl
mov
les
les
pushl
add
in
mov
incl
mov
lds
mov
mov
out
mov
incl
mov
movb
incl
mov
sbb
movb
mov
incl
mov
mov
incl
shlb
rol
push
incl
rorb
rolb
inc
ror
jl
incl
shrl
roll
or
enter
enter
inc
inc
add
aam
enter
enter
cmc
inc
add
sbb
leave
add
cs
incl
ret
fwait
inc
add
xchg
leave
add
pop
leave
incl
cld
inc
add
xor
lret
pop
lret
lds
inc
add
jb
lret
or
inc
add
xor
lret
add
mov
incl
movl
incl
xor
enter
enter
mov
incl
enter
add
pop
enter
ret
add
cmp
leave
add
pop
leave
int3
add
in
int
add
mov
lret
das
lret
call
sar
rolb
mov
je
out
mov
add
sar
add
add
int3
ror
push
ret
scas
cmpsl
ljmp
mov
incl
scas
ud0
mov
incl
scas
ljmp
mov
incl
scas
inc
ljmp
mov
incl
scas
sbb
sti
scas
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
rolb
add
incl
mov
pushl
rolb
cltd
sar
mov
pushl
rolb
push
sar
mov
pushl
add
stc
sar
mov
pushl
add
mov
incl
mov
pushl
add
aaa
sar
mov
pushl
roll
add
add
rcrl
add
test
pushl
roll
clc
ret
mov
pushl
ret
in
ret
mov
pushl
ret
dec
ret
mov
pushl
ret
arpl
incl
mov
pushl
ret
sub
incl
mov
pushl
ret
stos
ret
incl
mov
ret
loope
ret
add
fwait
ret
incl
mov
ret
pop
mov
ret
incl
mov
ret
daa
mov
ret
incl
mov
ret
ud1
add
out
ret
incl
mov
ret
into
mov
ret
incl
mov
ret
icebp
mov
incl
mov
les
mov
incl
mov
les
les
ljmp
incl
mov
cld
mov
incl
mov
les
add
dec
incl
mov
les
add
incl
mov
les
jmp
incl
mov
lds
push
mov
lds
or
incl
mov
or
incl
mov
movsl
stos
jle
add
adc
incl
jle
jle
mov
cltd
mov
incl
mov
mov
call
jmp
add
mov
jbe
movsl
add
mov
jmp
mov
incl
cmpsl
outsb
jmp
mov
incl
test
ljmp
mov
incl
test
mov
mov
dec
ljmp
mov
incl
stos
out
stos
add
mov
ljmp
mov
incl
lods
mov
lods
add
stc
mov
ljmp
mov
incl
lods
push
lods
add
ds
ljmp
mov
incl
scas
sahf
ljmp
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
rolb
xadd
add
pop
mov
add
push
sar
mov
pushl
roll
lods
sar
mov
pushl
ret
ret
mov
pushl
ret
dec
ret
mov
pushl
ret
mov
movsb
mov
ret
add
out
incl
mov
ret
jp
ret
add
xchg
ret
incl
mov
les
les
call
incl
mov
les
les
ljmp
incl
mov
idivl
incl
mov
lds
lds
jg
incl
mov
mov
incl
mov
sub
movb
mov
add
cld
mov
incl
mov
mov
faddp
incl
rcl
rolb
push
rol
pushl
out
rolb
dec
ror
jg
incl
shll
ror
decl
enter
mov
ret
inc
ret
decl
incl
ret
ds
add
mov
leave
add
add
incl
ret
cmp
fs
leave
add
ret
leave
incl
les
inc
add
jae
lret
push
lret
lds
lds
lret
lret
aaa
lret
incl
dec
inc
add
lock
lret
add
hlt
lret
incl
push
inc
add
aaa
lret
add
in
incl
enter
add
je
int3
add
xchg
int3
incl
enter
add
pusha
enter
adc
and
leave
add
adc
int3
add
cwtl
int
add
cmp
lret
push
lret
fxch
incb
enter
add
jmp
mov
loop
add
jmp
les
int
ror
inc
ret
scas
xor
xor
mov
ljmp
mov
incl
scas
mov
fildll
mov
ljmp
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
rolb
mov
pushl
rolb
lock
mov
pushl
rolb
arpl
incl
mov
pushl
add
ss
mov
pushl
add
rol
incl
mov
pushl
add
test
incl
mov
pushl
roll
xchg
sar
mov
pushl
roll
scas
sar
mov
pushl
roll
xor
incl
mov
pushl
ret
push
ret
mov
pushl
ret
aad
incl
mov
pushl
ret
mov
incl
mov
pushl
ret
mov
add
ret
ret
jg
incl
mov
ret
inc
mov
ret
incl
mov
ret
and
dec
mov
ret
add
jmp
incl
mov
ret
mov
insl
ret
incl
mov
ret
jmp
jp
incl
mov
ret
jne
ret
add
or
inc
mov
les
incl
and
mov
les
ljmp
incl
mov
les
mov
incl
mov
fnstcw
incl
mov
les
xor
incl
mov
les
add
lahf
mov
lds
call
incl
mov
lds
cmp
incl
mov
movb
incl
mov
repz
incl
mov
movsl
out
movsl
add
pusha
movsl
incl
jle
jle
cmpsb
sub
mov
jmp
mov
incl
movsb
jge
movsb
add
ljmp
incl
movsb
mov
movsl
add
jmp
mov
jmp
mov
incl
cmpsl
out
jmp
mov
incl
test
ljmp
mov
incl
test
mov
mov
in
ljmp
mov
incl
stos
pop
ljmp
mov
incl
stos
test
stos
add
cmpl
push
lods
mov
incl
lods
cltd
ljmp
mov
incl
lods
xchg
ljmp
mov
incl
scas
scas
add
pushl
incl
scas
clc
ljmp
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
rolb
xor
incl
mov
pushl
add
push
sar
mov
pushl
roll
cmpsb
sar
mov
pushl
ret
cmp
incl
mov
pushl
ret
cltd
ret
mov
pushl
ret
rol
incl
mov
ret
or
ret
incl
mov
ret
add
ret
incl
mov
call
leave
incl
mov
les
mov
incl
mov
out
mov
incl
mov
lds
jg
incl
mov
adc
incl
mov
arpl
incl
mov
mov
incl
mov
cli
mov
incl
rcl
rolb
xchg
movl
add
xchg
inc
add
sbb
ja
incl
rcrl
ror
call
enter
ds
add
into
ret
fxch
incl
ret
cld
inc
add
xor
leave
add
ja
incl
ret
xor
les
leave
jl
leave
add
lcall
les
lret
lret
mov
incl
lds
lret
lret
mov
dec
inc
add
fs
lret
add
push
lret
incl
movl
mov
lret
add
mov
inc
dec
add
clc
enter
and
incl
enter
add
out
int3
add
and
adc
leave
add
in
int3
add
cs
add
ds
add
lcall
incb
enter
add
jmp
mov
loop
add
inc
sar
add
mov
sbb
enter
ret
mov
ljmp
mov
incl
scas
outsl
ljmp
mov
incl
scas
imul
scas
mov
incl
scas
lock
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
rolb
cmpsl
sar
mov
pushl
rolb
ds
mov
pushl
rolb
push
sar
mov
pushl
add
test
incl
mov
pushl
add
test
sub
mov
shrb
add
push
sar
mov
pushl
roll
call
test
sub
sar
mov
pushl
roll
pop
sar
mov
pushl
ret
aam
incl
mov
pushl
ret
test
incl
mov
pushl
ret
ret
add
ret
ret
pop
ret
mov
pushl
ret
adc
incl
mov
ret
mov
ret
incl
mov
ret
pop
mov
ret
incl
mov
ret
std
mov
ret
incl
mov
ret
adc
ret
incl
mov
ret
out
ret
add
imul
mov
ret
add
stc
ret
incl
mov
les
mov
incl
mov
les
and
incl
mov
les
incl
mov
les
les
lcall
incl
mov
enter
ljmp
incl
mov
les
mov
lds
lds
jmp
add
fidivrl
incl
mov
mov
movb
data16
incl
mov
bound
incl
mov
cmp
incl
mov
movsl
dec
jle
add
jl
incl
jle
jle
movsl
mov
cmpsb
add
jp
incl
mov
mov
push
mov
jmp
add
and
jmp
mov
incl
cmpsb
sbb
cmpsb
add
ljmp
mov
jmp
mov
incl
test
ljmp
mov
incl
test
mov
lcall
mov
ljmp
mov
incl
stos
mov
stos
add
les
stos
add
cmp
ljmp
add
cmp
lods
add
js
incl
lods
or
lods
add
pushl
pushf
ljmp
mov
incl
scas
cmp
scas
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
rolb
mov
incl
mov
pushl
add
js
incl
mov
pushl
roll
lock
mov
pushl
ret
and
incl
mov
pushl
ret
mov
incl
mov
pushl
ret
fcmovnb
incl
mov
ret
push
mov
ret
incl
mov
ret
sub
ret
incl
mov
les
mov
incl
mov
clc
mov
incl
mov
les
les
lcall
incl
mov
lds
mov
mov
fidivrl
incl
mov
mov
movb
enter
mov
sarb
incl
mov
gs
incl
rol
rolb
jbe
movl
add
inc
inc
add
cmp
enter
enter
scas
inc
add
or
sbb
incl
ret
ret
mov
jg
incl
ret
mov
lock
leave
add
pop
leave
incl
ret
and
les
leave
loop
leave
add
leave
incl
les
clc
incl
lret
lds
lds
lret
lret
mov
incl
sub
movb
jne
lret
add
sbb
incl
mov
push
lret
add
outsb
lret
incl
enter
add
stos
enter
pusha
int3
incl
enter
add
xor
sbb
incl
leave
xchg
dec
add
cmp
ja
incl
lret
lret
repz
ljmp
incb
enter
add
jmp
mov
loop
add
incl
incl
mov
enter
mov
or
scas
add
lcall
mov
ljmp
mov
incl
scas
ja
scas
add
fnstsw
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
rolb
sar
mov
pushl
rolb
mov
incl
mov
pushl
rolb
into
sar
mov
pushl
add
movsb
sar
mov
pushl
add
test
pushl
roll
das
sar
mov
pushl
roll
jge
incl
mov
pushl
roll
insl
sar
mov
pushl
ret
test
incl
mov
pushl
ret
mov
mov
js
ret
mov
incl
mov
pushl
ret
pop
ret
mov
pushl
ret
add
incl
mov
mov
ret
add
mov
incl
mov
ret
and
ret
incl
mov
ret
dec
mov
ret
incl
mov
ret
sarb
ret
incl
mov
ret
mov
ret
incl
mov
ret
ret
add
add
add
les
adc
lods
mov
les
call
call
in
les
dec
incl
mov
idivl
incl
mov
xlat
mov
incl
mov
les
mov
incl
mov
lds
lds
incl
xor
mov
lds
ffree
incl
mov
movb
sub
adc
mov
movb
sbb
incl
mov
cmpsl
mov
incl
mov
movb
incl
mov
cmpsl
push
andb
add
jle
movsl
jae
movsl
add
mov
jmp
mov
incl
movsb
cmc
jmp
add
pop
mov
jmp
mov
incl
cmpsb
loop
cmpsb
add
dec
mov
jmp
mov
incl
test
ljmp
mov
incl
test
mov
incl
das
ljmp
mov
incl
stos
sub
stos
add
sbb
stos
add
mov
ljmp
add
fdivrl
lods
add
lods
mov
ljmp
mov
incl
scas
cmp
scas
add
jmp
and
scas
add
call
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
rolb
pop
sar
mov
pushl
add
and
incl
mov
pushl
roll
xchg
sar
mov
pushl
ret
imul
pushl
ret
jecxz
incl
mov
pushl
ret
mov
inc
mov
ret
add
lcall
mov
ret
add
push
lret
add
mov
pinsrw
mov
out
mov
incl
mov
les
les
incl
incl
mov
lds
mov
mov
push
mov
incl
mov
and
movb
and
incl
mov
sbb
incl
mov
mov
scas
incl
shrb
rol
out
incl
rclb
rolb
es
jmp
enter
mov
roll
add
enter
enter
inc
add
push
ret
jmp
add
sti
inc
add
pop
ret
leave
add
jno
incl
ret
mov
les
leave
lahf
leave
add
sub
incl
les
mov
lret
leave
lret
lds
mov
lret
incl
icebp
inc
add
or
lret
add
xchg
lret
incl
test
mov
arpl
incl
enter
add
xor
int3
add
pop
int3
incl
enter
add
xchg
enter
sbb
incl
leave
xor
leave
add
or
add
cmp
incl
lret
lret
sbb
int
decl
sti
rolb
in
mov
add
push
mov
loop
add
dec
sar
add
sar
lds
int
ror
pushl
incl
mov
ljmp
mov
incl
scas
test
scas
add
call
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
rolb
sahf
sar
mov
pushl
rolb
test
incl
mov
pushl
rolb
cli
sar
mov
pushl
add
iret
sar
mov
pushl
add
push
incl
mov
pushl
roll
gs
mov
pushl
roll
test
incl
mov
pushl
roll
outsl
sar
mov
pushl
ret
aaa
ret
mov
pushl
ret
mov
ret
add
or
ret
faddp
incl
mov
pushl
ret
xor
incl
mov
pushl
ret
dec
ret
mov
pushl
ret
add
ret
ret
incl
mov
ret
xor
ret
add
incl
mov
ret
sarl
incl
mov
ret
jo
ret
add
lods
ret
incl
mov
ret
or
ret
add
out
incl
mov
ret
xor
ret
add
jge
incl
mov
les
add
inc
incl
mov
les
mov
incl
mov
les
les
cmp
incl
mov
les
out
incl
mov
les
les
ljmp
xchg
mov
les
ljmp
incl
mov
lds
lds
decl
mov
lds
mov
mov
lds
lds
call
add
mov
movb
lock
incl
mov
sub
incl
mov
fnstcw
incl
mov
jne
movb
outsb
incl
mov
mov
inc
movsl
incl
jle
jle
movsl
jle
add
adc
decl
mov
incl
movsb
sar
movsb
add
ljmp
jno
movsl
add
lcall
dec
jmp
mov
incl
cmpsl
stos
jmp
mov
incl
test
ljmp
mov
incl
test
mov
lcall
stos
add
outsl
mov
ljmp
mov
incl
stos
adc
stos
add
or
incl
lods
mov
lods
mov
incl
lods
mov
lods
add
sarb
add
call
incl
scas
test
scas
add
call
incl
scas
ret
add
pushl
std
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
rolb
test
add
imul
pushl
roll
xchg
sar
mov
pushl
ret
cmp
incl
mov
pushl
ret
insl
ret
mov
pushl
ret
adc
incl
mov
ret
or
ret
incl
mov
ret
cmpl
mov
mov
les
out
incl
mov
les
sub
stos
mov
les
incl
push
mov
lds
decl
add
out
movb
fcmovnb
incl
mov
mov
inc
incl
mov
sarl
incl
mov
aam
movl
add
test
rolb
jae
movl
add
das
inc
add
jno
enter
enter
ja
roll
push
ror
cmp
incl
ret
ret
loop
enter
enter
dec
inc
add
jecxz
leave
add
test
incl
ret
xchg
inc
add
mov
mov
incl
les
faddp
lret
lds
lret
lret
mov
test
shufps
incl
lret
incl
out
inc
add
push
lret
add
add
incl
enter
add
cmp
int3
add
pop
int3
incl
enter
add
dec
enter
dec
int3
incl
leave
ja
leave
add
sbb
int3
add
aas
int
add
out
lret
adc
int
jmp
incb
enter
add
jmp
mov
loop
add
incl
sar
add
adc
lds
int
ror
decl
incl
mov
ljmp
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
mov
incl
mov
pushl
rolb
push
sar
mov
pushl
rolb
jo
incl
mov
pushl
rolb
sbb
incl
mov
pushl
add
add
incl
mov
pushl
add
xchg
sar
mov
pushl
roll
add
add
add
filds
and
add
xchg
or
add
add
add
leave
arpl
inc
dec
add
add
cmp
add
add
add
add
jae
add
add
add
add
add
add
loop
xor
add
add
add
jae
cmpsl
add
add
add
add
add
add
sbb
push
add
add
add
pop
pop
add
add
add
add
add
xchg
incl
decl
incl
incl
incl
incl
add
aam
add
add
add
add
aas
xor
add
jg
add
dec
xchg
add
add
push
add
add
pop
incl
add
add
add
adc
push
add
lods
add
add
sbb
add
add
fldl
add
lcall
add
add
incl
add
add
add
dec
add
add
add
add
add
add
and
add
add
ja
add
add
pushf
add
add
add
imul
add
insb
pop
add
pushl
add
add
incl
jmp
add
add
mov
roll
add
sbb
popa
add
dec
add
add
mov
cmpsl
add
add
roll
incl
incl
incl
gs
add
add
xor
data16
sub
add
add
add
incb
add
add
add
cmc
add
add
insl
incl
imul
add
add
add
rolb
add
add
add
add
mov
add
add
add
add
add
add
inc
add
add
add
add
jo
add
or
add
add
add
add
addl
add
incl
add
add
add
push
pushl
xor
add
add
add
add
roll
add
fildl
add
add
incl
js
add
add
aad
sub
add
add
add
add
add
inc
add
add
ja
add
add
add
add
add
add
cmpsb
add
add
roll
add
add
jl
add
add
mov
add
add
add
add
lea
add
add
add
add
lds
add
add
lods
add
add
dec
add
add
add
add
pop
add
add
ret
mov
add
add
incb
popf
inc
popf
add
sub
mov
sahf
add
decb
mov
add
mov
lahf
mov
xchg
mov
add
mov
lahf
mov
sti
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
lock
incb
add
add
add
add
add
add
ret
add
add
inc
add
add
cmp
add
add
pop
add
add
pop
add
add
xchg
add
add
add
das
add
add
xor
inc
add
add
jno
add
add
add
add
and
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
ljmp
add
add
add
add
mov
fildl
add
add
add
add
xchg
add
add
jle
add
add
dec
add
add
mov
add
add
lock
add
dec
add
add
imul
add
add
popf
add
add
push
add
add
jne
add
add
add
add
mov
inc
add
add
repnz
add
lds
add
add
and
lods
add
add
les
add
add
add
add
add
add
xor
add
jo
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
call
add
add
add
orb
add
sbb
add
xor
add
add
add
add
add
dec
add
addb
add
add
add
pusha
add
addb
add
add
add
js
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
or
push
add
add
add
add
add
add
or
sub
add
cwtl
pushf
or
fmuls
add
mov
add
test
or
push
add
add
add
add
mov
add
add
insb
mov
add
add
add
add
adc
add
sub
add
xor
add
pusha
add
add
add
add
addb
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
add
add
incl
add
incl
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
insb
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jbe
data16
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
addr16
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
data16
data16
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lret
mov
mov
data16
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
data16
data16
int3
int3
int3
int3
int3
int3
int3
int3
lret
mov
mov
data16
int3
int3
int3
int3
int3
int3
int3
jnp
mov
mov
jbe
data16
insb
int3
int3
int3
int3
int3
int3
lret
mov
daa
mov
addr16
data16
int3
int3
int3
int3
int3
mov
mov
ja
mov
data16
data16
insb
int3
int3
int3
int3
lret
mov
stos
cmpsb
imul
mov
sub
int3
int3
int3
int3
mov
mov
addr16
mov
xor
push
data16
int3
int3
int3
int3
cmp
stos
stos
data16
imul
stos
data16
int3
int3
int3
mov
stos
stos
stos
push
mov
mov
stos
stos
push
data16
int3
int3
lret
mov
xor
sub
mov
stos
cmpsb
cmpsb
data16
int3
mov
stos
stos
stos
stos
addr16
xor
stos
stos
stos
push
data16
int3
lret
xor
xor
and
sub
add
ja
data16
int3
lret
cmp
stos
stos
stos
push
xor
stos
stos
stos
stos
and
data16
int3
jae
xor
stos
stos
cmpsb
arpl
sub
jnp
insb
int3
mov
xor
and
stos
stos
cmpsl
jp
stos
stos
mov
data16
int3
aaa
mov
cmp
xor
add
stos
stos
stos
stos
stos
stos
stos
and
ja
data16
int3
mov
cmp
add
stos
stos
stos
stos
stos
stos
and
jnp
data16
mov
mov
mov
xor
sub
and
mov
mov
addr16
cmp
mov
mov
cmp
add
stos
stos
stos
stos
stos
and
ja
ja
jl
jnp
xor
cmp
stos
stos
stos
stos
stos
addr16
mov
int3
mov
xor
add
stos
cmpsb
jnp
imul
jl
jnp
mov
xor
stos
stos
stos
stos
stos
push
mov
mov
xor
stos
stos
stos
stos
stos
stos
cmpsb
cmpsb
jnp
mov
addr16
lret
jae
cmp
cmp
sub
sub
mov
cmp
mov
xor
stos
stos
stos
stos
mov
cmpsb
cmpsb
jnp
mov
int3
int3
lret
jae
xor
xor
and
and
stos
stos
push
mov
int3
mov
xor
and
add
add
sub
mov
mov
add
stos
stos
stos
stos
mov
sub
mov
cmp
add
stos
stos
stos
stos
and
xor
add
stos
mov
int3
int3
int3
lret
jae
add
and
mov
mov
int3
int3
int3
int3
jnp
xor
and
cmp
xor
int3
int3
mov
add
sub
cmp
mov
int3
int3
int3
jnp
xor
and
mov
mov
int3
int3
int3
int3
ja
add
and
mov
mov
mov
xor
int3
int3
int3
int3
int3
int3
mov
xor
and
cmp
cmp
cmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
int3
int3
int3
int3
int3
int3
int3
int3
ja
xor
mov
cmp
cmp
cmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jnp
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jnp
jnp
jnp
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
incl
add
incl
add
inc
pop
incl
add
cld
add
incl
add
lock
jg
add
inc
add
pop
incl
add
addb
ud0
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
jg
add
add
add
aas
add
loopne
add
add
add
rolb
add
pop
add
rolb
add
pop
add
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
sldt
addb
add
sldt
addb
add
sldt
rolb
add
pop
add
rolb
add
pop
add
loopne
add
add
add
loopne
add
add
add
lock
add
jg
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
addb
ud0
add
rolb
pop
incl
add
lock
jg
add
cld
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
addb
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
add
add
incl
add
incl
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lret
jnp
data16
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jbe
data16
int3
int3
int3
int3
int3
int3
int3
mov
data16
int3
int3
int3
int3
int3
int3
mov
mov
data16
int3
int3
int3
int3
int3
mov
imul
data16
int3
int3
int3
lret
mov
mov
ja
data16
int3
int3
int3
lret
mov
sub
stos
data16
int3
int3
int3
mov
cmpsl
mov
xor
int3
lret
mov
sub
or
int3
lret
xor
and
sub
int3
lret
xor
and
stos
stos
imul
stos
stos
stos
jbe
int3
jae
xor
and
stos
cmpsl
xor
data16
cmp
xor
and
stos
stos
stos
stos
stos
mov
mov
and
add
data16
jae
mov
xor
stos
stos
stos
stos
and
jbe
int3
mov
add
mov
mov
int3
jae
mov
xor
stos
stos
stos
stos
stos
jnp
ja
int3
jnp
cmp
xor
cmpsb
addr16
xor
xor
stos
stos
stos
mov
mov
xor
stos
stos
stos
mov
cmpsb
jnp
int3
mov
sub
and
int3
ret
jae
and
stos
stos
and
add
stos
and
xor
and
and
xor
jae
and
and
mov
and
cmp
jo
and
cmp
xor
add
int3
ja
xor
add
cmp
xor
jnp
int3
int3
int3
int3
lret
ja
add
mov
mov
mov
int3
int3
int3
ja
xor
cmp
mov
int3
int3
int3
int3
int3
int3
int3
int3
aaa
jnp
jnp
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
ret
jnp
jnp
int3
int3
int3
int3
int3
int3
jmp
pop
incl
add
incb
add
clc
add
jg
add
aas
loopne
add
loopne
add
rolb
jo
add
pop
addb
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
pop
addb
pop
addb
pop
rolb
pavgb
add
loopne
add
lock
aas
clc
add
jg
add
incl
add
jmp
pop
ljmp
add
add
add
add
add
add
add
add
addb
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
add
add
incl
add
incl
add
int3
int3
int3
int3
int3
int3
int3
int3
lret
data16
int3
int3
int3
lret
mov
data16
int3
int3
mov
ja
jbe
int3
lret
xor
int3
ret
or
int3
mov
stos
cmpsl
or
sub
xor
mov
xor
xor
xor
sub
ret
add
int3
xor
int3
int3
jae
or
and
xor
int3
int3
int3
int3
aaa
mov
pushl
imul
stos
data16
int3
addb
and
add
int3
add
xor
add
mov
stos
cmpsb
addb
int3
addb
and
pop
cmpsb
ja
rsm
stos
clc
aas
insb
int3
sub
add
sbb
add
cmp
add
add
and
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
cmp
or
cmp
or
aas
aas
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incb
incb
add
add
add
add
add
add
add
add
jle
jle
dec
dec
dec
sbb
push
push
dec
fs
cltd
jo
insb
pushf
arpl
cmp
sbb
inc
or
or
add
add
add
add
add
add
incl
incb
incl
add
add
add
add
add
add
add
add
add
add
incl
incl
incb
incb
incl
add
add
stos
stos
stos
add
pop
and
xchg
imull
cltd
xchg
cld
mov
jp
loopne
dec
dec
test
or
sbb
add
incl
incl
incb
add
add
add
add
add
add
add
add
add
add
incl
incb
add
add
add
add
incl
jle
jle
push
jno
ja
jns
xchg
xchg
std
scas
push
scas
fs
ljmp
subl
popf
xchg
cld
mov
pop
mov
or
or
add
sub
incl
incl
incl
incb
add
add
add
add
add
add
incl
add
add
incb
incb
incl
incb
mov
jnp
xchg
addb
cmpsb
cmp
movsl
xor
jmp
inc
sbb
stos
push
sub
mov
pop
mov
xchg
call
push
push
mov
pop
pop
pop
adc
stos
stos
add
incb
incl
incl
add
add
add
add
add
add
incl
add
add
add
add
incl
incb
js
jns
ja
jne
xchg
jle
fsubl
and
mov
sub
movsb
xor
add
mov
dec
sbb
mov
dec
mov
mov
lea
dec
stos
push
pop
pop
inc
or
incl
incb
incb
add
add
add
add
add
add
incl
incb
add
add
add
add
lahf
lahf
sahf
or
jl
lea
gs
movsl
sbb
jmp
add
movsl
sub
jmp
ss
mov
ds
stos
dec
sbb
mov
push
ljmp
jge
in
aaa
cmp
sub
sub
incl
incl
add
add
add
add
add
add
incl
incl
add
add
jg
jg
xchg
mov
movsl
movsb
jo
mulb
or
movsl
adc
add
mov
xor
jmp
cmp
movsl
cmp
adc
scas
pop
daa
mov
fs
cmpsb
fwait
mov
gs
sub
sbb
push
add
add
add
add
add
add
add
add
add
incl
incb
incl
mov
subb
test
test
or
jmp
adc
jmp
sub
jmp
xor
add
cmpsl
cmp
or
mov
cmp
call
push
push
test
push
pop
push
or
incl
add
add
add
add
add
add
incl
incl
mov
mov
mov
test
add
test
adc
jmp
es
cmpsb
cs
cmpsl
ss
cmpsl
ss
cmpsl
cmp
ljmp
push
sbb
mov
inc
ljmp
jl
sub
jo
adc
sbb
jg
add
add
add
add
add
add
add
incl
incb
xchg
xchg
xchg
push
xchg
test
test
cmp
test
add
ljmp
adc
cmpsl
and
cmpsb
sub
jmp
ss
cmpsl
aaa
add
test
inc
or
stos
inc
or
lods
push
push
ljmp
lea
test
and
dec
pop
add
add
add
add
add
add
incl
incl
js
js
lea
gs
test
sbb
test
push
or
test
sysret
test
push
ljmp
sub
cmpsl
xor
cmpsl
xor
add
test
add
cmpsb
cmp
test
pop
jmp
outsb
jo
xor
xor
adc
add
add
add
add
add
add
incl
jg
jle
jb
jae
xchg
fsubrs
sbb
pop
ljmp
or
test
adc
or
cmpsl
daa
pop
jmp
xor
movsb
ss
cmpsb
xor
add
movsl
aaa
add
cmpsl
ss
test
ja
decl
dec
dec
xchg
sbb
sbb
add
add
add
add
add
add
incl
stos
stos
stos
add
jp
pushf
mov
jmp
sbb
ljmp
adc
test
pop
adc
test
and
ljmp
sub
add
jmp
xor
movsl
xor
jmp
gs
xchg
cmpl
pop
pop
mov
push
sbb
add
add
add
add
add
add
incl
imul
xchg
mov
dec
sub
test
pop
ljmp
and
ljmp
pop
and
stos
and
test
daa
sbb
test
adc
test
ud0
sub
add
cmpsl
cs
movsb
xor
jmp
dec
sub
lahf
jle
outsl
insl
insb
lret
and
and
add
add
add
add
add
add
incl
arpl
pop
xchg
xchg
mov
stos
push
das
ljmp
aas
sub
lods
cmp
ljmp
cs
stos
sub
and
ljmp
es
test
es
ljmp
sub
jmp
jo
pushl
jae
cs
push
add
add
add
add
add
add
jle
jg
fs
subb
push
xor
ljmp
push
inc
pushl
dec
dec
pushl
inc
inc
ljmp
sub
stos
sub
ljmp
pop
or
jmp
sbb
jmp
sub
jmp
jne
loopne
xor
add
add
add
add
add
jg
jg
fs
mov
je
lods
arpl
ljmp
gs
pushl
insb
popa
pushl
gs
mov
pop
pushl
aas
ljmp
push
ljmp
push
or
test
adc
jmp
and
jmp
ja
loopne
xor
add
add
add
add
add
jg
jg
fs
jg
lods
push
pushl
je
mov
push
mov
test
mov
je
mov
pushl
inc
inc
ljmp
and
test
adc
ljmp
ud2
ljmp
arpl
jl
jbe
xor
xor
add
add
add
add
add
add
jg
push
arpl
popl
pushl
subb
mov
mov
lahf
cltd
mov
mov
pushl
dec
dec
ljmp
sub
ljmp
sbb
ljmp
adc
jmp
ja
loopne
xor
pop
add
add
jg
jg
data16
cltd
xchg
xchg
mov
mov
pop
pushl
test
mov
cmp
mov
stos
mov
cwtl
xchg
pushl
imul
push
push
ljmp
xor
ljmp
and
ljmp
push
sbb
lods
xor
ljmp
jns
loopne
xor
add
add
add
add
add
jg
data16
xchg
xchg
xchg
mov
mov
jge
mov
jb
mov
ja
mov
mov
movsb
mov
cltd
nop
mov
jno
pushl
dec
inc
ljmp
aaa
sub
stos
ss
ljmp
jne
ljmp
jnp
fldl
ds
add
add
jg
jg
arpl
pop
jp
jns
xchg
nop
repnz
pushf
lcall
mov
nop
mov
sahf
xchg
mov
xchg
xchg
mov
jne
mov
arpl
mov
push
ljmp
dec
ljmp
insl
arpl
mov
cmp
lcall
cwtl
xchg
xchg
divb
mov
add
add
incl
jg
jg
dec
dec
dec
cmp
push
addb
stos
cmpsb
movsb
mov
pushf
mov
mov
mov
imul
jne
pushl
push
push
ljmp
xchg
xchg
sti
test
outsl
mov
push
push
xchg
dec
dec
dec
push
imul
incl
incl
pop
pop
pop
or
inc
adc
dec
daa
push
push
push
dec
gs
cwtl
cwtl
cmc
mov
mov
pushl
jl
pushl
js
pushl
mov
cwtl
stc
test
imul
dec
cs
dec
dec
adc
jg
jg
incl
incl
incl
incl
incl
jg
jg
push
push
push
push
dec
dec
dec
dec
addr16
mov
mov
pushl
jb
mov
mov
scas
cmpsb
mov
icebp
gs
push
push
dec
and
jg
jg
jg
incl
incl
incl
incl
incl
incl
incl
incl
incl
jg
jg
dec
dec
dec
pop
push
push
push
and
outsb
jle
jg
movsb
sahf
pushf
hlt
mov
mov
std
test
mov
ficompl
pop
mov
inc
xor
inc
or
jg
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
stos
stos
stos
add
dec
sbb
push
dec
outsb
outsb
insl
mov
mov
jbe
push
push
push
pop
inc
inc
inc
and
data16
incl
incl
incl
incl
incl
incl
incl
jmp
pop
lock
add
add
jo
add
xor
add
xor
add
jo
add
xor
add
xor
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
xor
add
xor
incl
cli
cli
incl
repz
jecxz
incl
rol
add
cmp
sbb
cmp
lret
jge
sti
stos
stos
ljmp
and
or
add
mov
sbb
pushl
add
pushl
add
ljmp
add
xor
add
incl
or
add
incl
mov
incl
fcomp
incl
repz
lcall
call
decl
decl
incl
cld
incl
out
incl
mov
decl
and
xchg
inc
inc
call
fs
addb
jmp
test
adc
adc
add
and
sbb
pushl
add
mov
add
jmp
add
pop
add
ljmp
add
incl
add
incl
incl
incl
out
out
incl
std
std
decl
decl
call
call
cmc
cmc
jmp
jo
decl
call
dec
dec
call
gs
jne
decl
fwait
cld
addb
add
add
mov
and
ljmp
add
pushl
add
mov
add
jmp
add
jmp
add
incl
cmp
xlat
incl
icebp
icebp
incl
sti
sti
incl
incl
decl
call
jmp
std
std
cmp
int
jge
ss
inc
inc
clc
dec
dec
push
push
call
jmp
jge
call
ja
adc
adc
add
pop
mov
daa
daa
ljmp
add
pushl
add
mov
add
jmp
add
lcall
ud0
lods
lods
incl
jmp
incl
hlt
hlt
incl
stc
stc
incl
clc
clc
incl
cmc
cmc
incl
cmc
cmc
incl
stc
stc
lcall
cld
cld
cmp
cld
lcall
ljmp
inc
inc
incl
incl
decl
ljmp
incl
imul
add
add
mov
xor
adc
test
add
lods
add
pushl
add
decl
add
decl
pushf
pushf
incl
incl
out
out
incl
div
incl
clc
clc
incl
div
incl
in
in
incl
jecxz
incl
incl
out
incl
hlt
hlt
ljmp
cld
cld
call
std
pushl
aad
test
pop
call
inc
inc
push
xor
cmp
lcall
pushl
jmp
pop
pop
loop
push
push
push
add
add
inc
inc
ljmp
add
add
movsb
add
jg
add
xor
add
add
scas
incl
in
in
incl
div
incl
stc
stc
incl
sti
sti
incl
stc
stc
incl
out
out
incl
incl
rol
add
enter
or
cmc
pushl
std
ljmp
jnp
ljmp
das
das
decl
jmp
dec
dec
dec
lret
sbb
add
add
xor
dec
ljmp
or
incl
add
jmp
or
incl
lcall
add
out
incl
clc
clc
incl
cld
cld
incl
cld
cld
incl
cmc
cmc
incl
jecxz
incl
popf
popf
incl
xor
jle
add
sar
loope
incl
stc
stc
ljmp
cld
call
hlt
jmp
mov
lds
aas
aas
decl
ljmp
sbb
sub
xor
add
mov
dec
loopne
ds
add
call
ss
mov
incl
int3
int3
incl
in
incl
hlt
hlt
incl
sti
sti
incl
stc
stc
incl
out
out
incl
mov
jmp
add
incl
add
incl
jo
incl
movsb
movsb
incl
mov
incl
cmc
cmc
call
repz
out
cmp
and
in
cmp
jmp
ss
and
add
add
add
add
mov
cmp
mov
dec
call
adc
call
add
incl
push
incl
xchg
xchg
incl
mov
incl
int
incl
in
incl
repz
repnz
in
decl
mov
ljmp
add
sub
add
add
or
add
stos
incl
mov
incl
fcomp
incl
mov
or
fisubl
and
cld
xor
xor
cmp
cmp
and
and
stos
sub
dec
frstor
daa
daa
ljmp
or
incl
add
incl
data16
xchg
xchg
incl
mov
incl
lret
lret
incl
incl
loope
incl
mov
jmp
add
lcall
add
adc
add
add
incl
xchg
xchg
incl
test
incl
mov
incl
nop
incl
add
mov
sub
jmp
ss
inc
inc
inc
pop
addb
add
push
lcall
and
sub
incl
add
incl
data16
xchg
xchg
incl
scas
scas
incl
rol
add
or
inc
add
mov
add
pushl
add
incl
add
incl
data16
nop
nop
incl
jp
cmp
add
stos
or
jmp
pop
pop
push
xor
mov
push
push
daa
addb
add
mov
pushf
inc
inc
jmp
and
decl
add
incl
addr16
xchg
xchg
incl
mov
jns
popa
add
pushl
add
inc
add
jmp
add
ljmp
add
or
add
or
ds
cmp
add
movsb
or
fstpl
in
xor
dec
ss
addb
add
add
add
inc
lods
mov
pop
lcall
sub
pushl
adc
or
add
pop
incl
data16
add
call
add
mov
add
mov
add
ljmp
add
dec
add
lcall
pop
jmp
sbb
sub
int
xor
xchg
dec
dec
inc
addb
add
add
add
aas
mov
mov
cmp
decl
pushl
or
jg
push
ljmp
add
pushl
add
mov
add
ljmp
push
push
pushl
and
xor
xor
mov
dec
dec
inc
cltd
cltd
cltd
rsm
stos
stos
add
incl
pushf
add
add
dec
fisubrs
dec
dec
decl
xor
ljmp
sbb
pushl
adc
inc
sbb
inc
sbb
dec
and
dec
sub
call
xor
call
xor
loope
xor
lea
js
mov
incl
movsb
daa
daa
xor
cmp
xchg
scas
dec
dec
loop
push
push
mov
dec
dec
mov
inc
inc
inc
ds
cmp
inc
dec
inc
inc
call
ds
xor
sub
dec
xchg
xchg
xchg
adc
or
incl
cmpsl
and
pop
scas
das
das
addr16
cmp
mov
dec
dec
cli
dec
dec
cli
lds
jmp
ds
sub
jo
xor
sub
fisttps
incl
incl
incl
add
add
aas
loopne
add
rolb
pop
addb
pop
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
pop
clc
add
pop
incb
add
incl
add
adc
add
and
add
add
and
add
add
sbb
and
adc
cmp
or
inc
add
add
add
add
add
add
add
add
incl
jl
inc
cs
xor
lock
insl
repz
xchg
repz
mov
mov
adc
pop
add
add
incl
cmp
pop
sub
fildll
sub
mov
inc
in
push
push
jp
lcall
mov
call
test
jmp
add
add
add
add
incl
mov
cmp
sbb
lock
ss
mov
pop
pop
cld
jg
decl
xchg
push
mov
aas
lea
add
sbb
add
add
pop
pop
sbb
adc
frstor
add
pop
dec
dec
call
decl
push
push
fildll
lcall
sub
jmp
icebp
icebp
decl
mov
stos
ljmp
add
pop
pop
jp
add
call
sub
incl
into
into
incl
out
cmp
std
ljmp
out
mov
cmp
incl
mov
aas
incl
scas
scas
lcall
add
sbb
lods
add
cmp
add
add
incl
enter
out
incl
call
imul
add
out
incl
cmc
cmc
incl
cmc
cmc
jmp
jecxz
mov
nop
nop
loop
add
xor
mov
add
cmp
add
add
ret
ret
decl
out
out
jmp
jecxz
incl
incl
lcall
outsb
incl
xchg
xchg
out
xchg
xchg
repz
add
mov
push
repz
add
mov
add
ljmp
add
pop
aaa
aaa
incl
call
cld
decl
lcall
ds
pop
fmull
std
pop
pop
jp
clc
xchg
inc
lods
and
out
add
pushl
add
call
add
push
pop
pop
incl
lock
stc
stc
incl
clc
clc
lcall
leave
leave
pushl
cmp
call
push
outsb
outsb
repz
adc
scas
ss
mov
add
cmp
or
add
stc
incl
cld
cld
incl
out
out
incl
rcl
incl
in
pushl
clc
clc
ljmp
decl
cmp
fmull
fists
adc
pop
mov
jae,pt
pop
pop
pushl
or
incl
scas
scas
incl
in
incl
clc
clc
incl
std
std
decl
jb
lcall
adc
incl
mov
fdivr
pop
div
cmp
int
loopne
xor
mov
xor
add
movsl
inc
inc
fildl
incl
dec
dec
incl
lret
add
in
add
sar
push
add
incl
ret
ret
incl
mov
and
fnsave
xor
addl
add
add
add
add
inc
inc
out
inc
sbb
incl
push
push
incl
into
into
jmp
cmp
mov
add
cmp
add
or
call
fsubrs
sub
test
incl
mov
cmp
cmp
pushl
aas
aas
incl
push
push
mov
pop
pop
call
sub
fidivs
incl
test
adc
test
inc
inc
ljmp
cmp
lret
daa
jnp
pusha
pusha
sbb
incl
lock
pop
xchg
adc
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
incl
add
incl
add
incl
add
loopne
popa
incl
add
add
add
adc
add
add
add
or
add
add
and
add
add
call
add
adc
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
add
add
adc
add
add
add
add
or
add
movsb
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
pushf
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
fiadds
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
add
je
push
add
add
and
push
add
imul
and
push
add
jae
je
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
je
add
outsb
add
insb
add
popa
add
add
add
add
jae
add
add
add
js
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
jbe
jae
add
add
add
js
add
add
add
and
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
scas
add
add
imul
outsl
add
jae
scas
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
insl
bound
fs
je
je
or
and
jb
imul
xor
xor
xor
or
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
and
insl
gs
jb
jae
data16
push
imul
inc
imul
inc
push
push
push
inc
push
push
push
and
and
gs
xor
and
or
jae
jb
jo
imul
jb
jae
data16
inc
imul
popa
jns
push
outsl
imul
je
das
fs
jb
jo
imul
fs
outsb
fs
arpl
or
and
gs
outsb
fs
je
jae
gs
bound
or
and
and
and
jae
gs
bound
fs
je
je
or
and
and
and
and
and
gs
xor
and
and
and
and
and
and
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
or
and
and
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
and
and
and
and
and
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
and
and
addr16
addr16
or
and
and
and
and
ds
and
fs
outsb
fs
je
jae
gs
bound
or
gs
outsb
fs
arpl
or
jae
gs
bound
or
add
push
pushl
call
mov
neg
sbb
and
push
mov
push
pushl
call
xor
cmp
setne
push
push
pushl
call
mov
cmp
je
xor
cmp
push
setne
add
push
push
push
push
call
mov
neg
sbb
and
push
push
pushl
call
mov
neg
sbb
and
push
push
pushl
call
xor
cmp
setne
push
push
pushl
call
orl
push
call
pushl
call
test
pop
mov
jne
mov
push
push
pushl
call
push
push
push
pushl
call
push
pushl
call
pushl
call
jmp
cmp
je
push
push
pushl
call
cmp
mov
pop
pop
pop
jne
mov
mov
add
ret
mov
call
sub
push
push
push
mov
push
pop
xor
xor
mov
lea
rep
stos
push
pop
xor
lea
rep
lea
push
movl
call
cmpl
jne
cmpl
jb
lea
push
call
test
je
mov
test
je
and
push
call
movl
pushl
call
mov
pushl
mov
call
test
je
pusha
popa
pusha
popa
pusha
popa
popa
call
ret
pop
sub
inc
lea
lea
sub
shr
mov
mov
add
add
lea
add
cmp
je
mov
add
dec
add
jmp
lea
lea
sub
shr
mov
mov
add
add
lea
add
cmp
je
mov
add
mov
dec
add
jmp
jmp
ret
mov
pop
inc
sbb
add
add
add
addr16
push
nop
add
popf
nop
inc
nop
add
push
nop
les
inc
nop
xchg
jnp
add
cwtl
nop
imul
popf
nop
inc
nop
add
inc
nop
push
nop
popf
nop
inc
nop
add
movsb
nop
inc
nop
adcb
nop
adcb
nop
adcl
nop
add
add
inc
nop
push
nop
test
rclb
nop
inc
nop
push
nop
xchg
add
push
nop
add
rclb
sub
adcl
nop
out
inc
nop
push
nop
add
rcll
add
jne
pop
nop
test
jno
pop
nop
call
nop
les
inc
nop
push
nop
sub
add
test
cmp
jne
ret
nop
add
add
add
add
add
add
add
add
out
nop
rclb
nop
les
inc
nop
push
nop
enter
adcl
nop
add
add
inc
nop
call
inc
nop
push
nop
mov
nop
add
test
lea
push
nop
inc
nop
add
nop
and
pop
nop
mov
nop
push
nop
pop
nop
mov
push
nop
lea
sub
jle
push
nop
mov
adcl
nop
inc
nop
inc
nop
test
add
inc
nop
add
rclb
nop
mov
mov
mov
lea
nop
mov
nop
push
nop
add
clc
nop
lea
adc
ret
nop
adcb
nop
jg
add
nop
inc
nop
push
nop
sbb
inc
nop
call
xor
adcl
nop
test
jmp
adcl
nop
adcl
nop
popa
nop
les
dec
nop
add
pop
nop
mov
dec
nop
add
or
inc
nop
push
nop
add
ja
call
push
mov
call
inc
nop
push
nop
add
test
mov
add
nop
push
mov
call
inc
nop
add
nop
test
test
popf
nop
dec
nop
add
push
nop
push
mov
call
inc
nop
mov
adcl
add
sub
mov
dec
nop
add
add
add
add
add
add
dec
nop
add
add
cmp
add
pop
nop
adcl
nop
mov
or
inc
nop
mov
xor
inc
nop
je
push
nop
mov
mov
pop
nop
inc
nop
ret
nop
mov
mov
mov
add
pusha
nop
inc
nop
pause
call
nop
mov
add
inc
nop
add
mov
nop
adc
nop
nop
mov
nop
loopne
pusha
nop
xor
mov
mov
xor
popa
nop
add
add
pop
nop
dec
nop
mov
fistl
add
or
add
add
and
xor
xor
push
nop
adcb
nop
add
or
loop
rclb
nop
xchg
add
and
nop
loopne
mov
add
add
call
dec
nop
add
pop
nop
mov
push
nop
popf
nop
dec
nop
add
fcoms
je
lea
jnp
seto
nop
mov
mov
dec
nop
add
add
jne
mov
push
nop
jne
seto
nop
add
add
leave
nop
pop
nop
jmp
ret
nop
gs
jne
popa
nop
imul
insl
nop
fs
insb
nop
outsb
nop
fs
insb
nop
fs
insb
nop
add
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
nop
int3
mov
add
inc
add
add
pop
insb
or
add
add
add
or
add
add
cwtl
pushf
or
xor
add
add
add
add
and
add
push
add
add
add
add
add
add
push
add
add
add
adc
add
cld
add
mov
call
pushl
push
call
push
push
call
push
call
pushl
call
push
call
xor
inc
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
push
xor
xor
cmp
je
cmp
je
mov
cmp
je
mov
sub
je
dec
jne
push
push
push
push
call
push
push
push
push
mov
call
push
push
mov
call
push
jmp
push
push
push
push
call
mov
push
push
call
push
call
push
call
xor
inc
jmp
xor
pop
pop
pop
ret
push
push
xor
cmp
push
push
je
mov
cmp
je
cmp
je
mov
sub
mov
je
dec
dec
jne
cmp
jne
push
push
call
mov
cmp
je
push
push
push
jmp
cmp
jne
push
push
call
mov
cmp
je
push
push
push
push
call
cmp
lea
mov
je
push
call
mov
jmp
push
call
mov
mov
sub
je
dec
dec
jne
cmp
jne
push
push
call
mov
cmp
je
push
push
push
jmp
cmp
jne
push
push
call
mov
cmp
je
push
push
push
push
call
cmp
lea
mov
je
push
call
mov
mov
jmp
push
call
pushl
push
pushl
call
jmp
xor
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
xor
xor
cmp
mov
je
cmp
je
cmp
je
pushl
call
test
jne
mov
mov
sub
je
dec
dec
je
dec
jne
push
push
push
jmp
push
push
push
push
call
push
push
push
push
mov
call
mov
push
lea
push
call
jmp
push
push
push
push
call
push
mov
call
pushl
push
call
pushl
call
push
mov
call
xor
inc
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
xor
xor
cmp
mov
je
cmp
je
cmp
je
pushl
call
test
jne
mov
mov
sub
je
dec
je
dec
jne
push
push
push
push
call
push
push
push
jmp
push
push
push
push
call
push
push
push
push
mov
call
push
push
mov
call
push
call
pushl
jmp
push
push
push
push
call
push
mov
call
push
push
call
push
call
pushl
call
xor
inc
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
xor
xor
cmp
mov
je
cmp
je
cmp
je
pushl
call
test
jne
mov
mov
sub
je
dec
je
dec
dec
jne
push
push
push
push
call
mov
push
push
call
jmp
push
push
push
push
call
push
push
push
push
mov
call
push
push
mov
call
pushl
jmp
push
push
push
push
call
push
push
push
push
mov
call
push
push
mov
call
push
call
pushl
push
call
push
call
pushl
call
xor
inc
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
xor
xor
cmp
mov
je
cmp
je
cmp
je
pushl
call
test
jne
mov
mov
sub
je
dec
je
dec
jne
push
push
push
push
call
mov
push
push
call
jmp
push
push
push
push
call
push
push
push
push
mov
call
push
push
mov
call
pushl
jmp
push
push
push
push
call
push
push
push
push
mov
call
push
push
mov
call
push
call
pushl
push
call
push
call
pushl
call
xor
inc
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
push
push
xor
cmp
je
cmp
je
push
mov
push
push
push
mov
push
pushl
call
push
push
push
pushl
call
cmp
mov
mov
jle
push
pushl
push
pushl
call
cmp
je
incl
mov
cmp
jl
jmp
push
pushl
push
pushl
call
pop
pop
pop
leave
ret
cmpl
je
mov
test
je
push
mov
test
je
push
mov
push
push
push
pushl
call
push
push
push
pushl
call
mov
test
jne
pop
pop
ret
push
mov
test
je
mov
test
je
push
mov
test
je
push
mov
push
mov
test
je
push
push
push
push
call
push
push
push
push
call
mov
test
jne
pop
pop
pop
pop
ret
cmpl
je
mov
test
je
push
mov
test
je
push
mov
mov
cmp
je
cmp
jne
push
push
push
pushl
call
push
push
push
pushl
call
mov
test
jne
pop
pop
ret
push
push
push
pushl
call
mov
push
push
mov
push
push
call
push
push
push
push
call
pop
pop
ret
push
push
push
push
pushl
xor
call
mov
push
push
mov
push
push
call
cmp
je
push
push
push
push
call
mov
pop
pop
mov
pop
ret
push
push
push
push
pushl
xor
call
mov
push
push
mov
push
push
call
cmp
je
push
push
push
push
call
mov
pop
pop
mov
pop
ret
push
mov
test
je
mov
test
je
push
call
andl
push
pushl
mov
call
push
call
pop
pop
ret
mov
xor
jmp
mov
jmp
mov
cmp
je
mov
test
jne
mov
test
jne
ret
push
xor
cmp
jne
xor
jmp
push
mov
jmp
mov
jmp
pushl
lea
push
call
test
pop
pop
je
mov
test
jne
mov
test
jne
mov
pop
pop
ret
push
xor
cmp
jne
xor
jmp
push
mov
jmp
mov
jmp
pushl
push
call
test
pop
pop
je
mov
test
jne
mov
test
jne
mov
pop
pop
ret
push
lea
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
test
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
lods
ljmp
ljmp
ljmp
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
pushl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
test
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
lods
ljmp
ljmp
ljmp
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
.byte
.byte
