sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
push
call
lea
push
push
call
test
je
push
push
push
call
mov
lea
push
lea
push
call
test
je
push
push
call
mov
add
mov
push
push
mov
push
call
push
push
mov
push
call
movb
call
mov
movb
movzwl
cmp
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
mov
push
call
movl
jmp
movb
movb
push
mov
push
call
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
call
movb
mov
add
mov
mov
movl
mov
push
call
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
call
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
push
mov
push
call
adcb
stc
imull
pop
add
orl
sub
mov
xchg
jg
inc
adc
push
test
push
and
push
jne
das
hlt
pop
movsb
jg
cmc
hlt
xchg
push
adc
xor
xor
aaa
xlat
add
pop
testb
mov
cmp
sahf
popf
sub
in
cli
cmp
sbb
mov
mov
loopne
out
cmp
insb
push
jbe
mov
push
fucomi
out
outsl
fldenv
pop
mov
jp
push
mov
enter
ds
jbe
loope
adc
sbb
mov
xchg
mov
ljmp
push
jge
xor
fisttps
mov
and
shlb
pop
lds
test
cmpb
mov
mov
jno
pop
movb
outsb
mov
mov
scas
xor
popf
lcall
outsl
xchg
push
scas
addr16
sbb
es
mov
icebp
fcompl
loop
stos
inc
sub
mov
jg
loop
lret
lcall
push
lret
test
imul
jns
sbb
add
adc
cmp
aaa
cli
cld
adc
daa
sti
inc
pushf
jl
push
ret
fistps
fdivl
mov
cwtl
repz
pop
jno
movsl
aad
test
lea
and
xchg
stos
mov
inc
jns
xor
popf
lret
fwait
cmp
fwait
pop
addr16
fscale
or
add
scas
sub
shrl
mov
jne
imul
mov
fldenv
cmp
popa
push
mov
mov
sub
pop
aas
lea
mov
pop
add
and
cmp
sbb
out
mov
pop
xchg
loope
sub
cmp
test
push
hlt
mov
cmp
dec
inc
cmovbe
push
fdivs
mov
and
scas
negb
movl
andl
or
and
mov
jns
scas
ffreep
out
fcmovu
out
xchg
cmpsl
and
aaa
inc
in
pop
scas
popa
outsl
call
xchg
and
xchg
lock
sbb
cmpsl
addb
lock
cmc
pop
imul
dec
ss
push
pop
ss
push
and
push
or
cmp
aaa
sbb
aad
ror
clc
rcl
sub
sahf
cs
mov
out
add
aas
sbb
pop
add
xor
lock
hlt
stc
sub
adc
inc
repz
les
pop
add
fnstenv
pop
data16
and
dec
jmp
das
sbb
in
pop
sub
add
cmp
iret
add
movsl
pushf
lods
add
inc
stos
scas
sbb
rcrb
insb
arpl
loop
mov
call
fists
dec
cmp
and
jmp
dec
fisubrl
rorb
xor
and
subl
and
sbb
mov
lret
mov
or
arpl
jae
mov
mov
mov
lret
aad
imul
jg
fisubl
cmp
and
or
repz
dec
rcrb
jae
mov
cmp
fsubl
idivb
mov
xor
dec
xor
pop
adcb
jge
imul
stos
bnd
pop
bound
cli
enter
repnz
sahf
xlat
jnp
icebp
cld
outsl
add
add
jle
sub
mov
out
jl
out
sbb
mov
mov
mov
cmc
in
push
mov
pop
jle
bswap
or
mov
sub
lea
jbe
inc
cmp
cld
test
push
mov
loopne
aaa
lcall
test
psubq
insb
sbb
adc
aad
inc
lods
lret
fdivs
lahf
out
popa
push
inc
and
hlt
adc
mov
cmp
pop
xchg
or
out
dec
jmp
loopne
loopne
pop
mov
jo
sbb
outsb
fidivl
mov
or
loop
dec
movsl
and
jg
out
popa
mov
std
jo
lcall
test
int
negl
sbb
rcrl
pushf
movsl
adc
xchg
add
addb
dec
shll
jmp
push
jb
clc
pop
xchg
xor
pop
push
cmp
mov
mov
pop
or
insb
add
dec
mov
mov
aad
test
jne
xorb
stc
fildll
insb
stos
cli
dec
hlt
bound
orl
aad
pushf
mov
add
cmpsb
sub
leave
sub
divb
pop
xchg
push
push
xlat
jl
add
push
outsl
popf
or
or
mov
fwait
leave
addr16
jnp
lods
xchg
notl
nop
test
or
leave
adc
in
rcrl
fisubrs
push
cmp
stos
xchg
mov
inc
rcll
outsb
inc
popf
sub
add
gs
mov
cmp
add
pop
cmc
mov
test
or
aaa
iret
inc
out
and
lods
frstor
mov
and
repnz
mov
jb
stos
hlt
cmpb
movsb
inc
bound
hlt
fstpt
shr
xchg
jb
or
into
mov
sub
shlb
sahf
sbb
pop
cmp
push
shr
add
dec
xor
sbb
dec
pop
js
mov
sub
mov
aam
ds
xor
sub
pop
dec
movsl
jle
push
leave
mov
leave
mov
sub
mov
xchg
lods
push
xchg
daa
pushw
push
xor
sub
or
int3
mov
inc
addr16
in
in
addr16
outsl
or
pop
pop
ret
mov
and
ljmp
test
push
inc
cltd
push
inc
lds
push
cmp
scas
xchg
mov
jp
loop
lret
jo
fmul
jmp
hlt
mov
sbb
or
sarb
movsl
push
or
cmp
mov
ljmp
pop
arpl
iret
imul
negb
mov
pop
clc
adc
add
adc
lea
imul
sbb
jle
sub
cld
adc
dec
ret
test
ss
ret
dec
jne
arpl
push
shrl
xchg
in
inc
mov
cmp
mov
sbb
outsb
gs
loope
ja
daa
icebp
in
pop
push
loope
sbb
push
cmp
cwtl
loopne
addr16
cmp
cwtl
push
cmp
adc
xchg
sbb
std
in
sbb
sbb
testb
jo
nop
push
pop
bound
fwait
push
dec
dec
mov
lock
fistps
mov
push
sbb
outsb
sbb
lods
lods
test
pop
movsl
pop
js
cmpb
xchg
in
adcl
movsb
stos
in
xor
ret
push
stos
arpl
ds
add
out
lock
adc
mov
cmp
or
test
pop
mov
js
cmpsl
or
nop
call
xor
into
mov
jbe
imull
sub
les
daa
icebp
fistpll
mov
dec
dec
xor
jbe
aas
add
fs
subb
jecxz
popa
adc
adc
mov
call
hlt
nop
out
push
jecxz
mov
dec
dec
or
loop
fbstp
jbe
dec
cmp
mov
or
add
fldl
xchg
mov
testb
or
das
xchg
iret
xchg
and
or
cli
popl
lock
int3
push
std
scas
dec
stos
xor
lds
aaa
and
push
adc
jmp
shl
pop
jo
jge
sub
in
mov
or
imul
sub
and
insl
leave
iret
jmp
bound
jb
mov
push
mov
mov
pop
cmp
add
xchg
or
mov
repz
fbld
stos
adc
jmp
sub
inc
xchg
ja
clc
or
frndint
aaa
mul
idivb
loop
or
xchg
add
call
push
pop
jno
add
cmp
push
test
push
repz
xor
int
in
mov
aaa
ret
test
repnz
or
cmp
or
out
dec
inc
mov
data16
fcmovbe
cmpsb
dec
filds
cmp
stc
negb
xchg
add
test
push
in
filds
jge
pop
sub
daa
lahf
and
mov
test
sbb
aam
or
pop
mov
mov
outsb
cwtl
stos
sbb
cmp
pop
ljmp
sbb
pop
push
in
call
cltd
pop
shll
push
push
push
add
mov
ror
stc
or
mov
stc
cld
cmc
jmp
das
and
jp
cld
cltd
repnz
notb
incl
push
jmp
inc
lds
lcall
mov
ljmp
add
mov
sbb
ret
jne
aas
aaa
add
cmp
lods
inc
std
hlt
adc
fcomps
lods
push
roll
cld
jge
and
or
adcl
daa
fidivs
xor
fs
xchg
enter
or
mov
into
gs
pushf
mov
add
int3
icebp
xchg
ja
cli
mov
lret
das
sarb
dec
into
xchg
or
mov
mov
out
enter
jnp
add
aas
sub
fdivl
or
sbb
or
xor
into
or
cli
inc
aad
push
cmp
and
test
cltd
dec
dec
xlat
pop
xchg
in
mov
xchg
add
orb
fisttpl
cmp
push
dec
adc
int
xor
mov
mov
jb
add
lcall
pop
in
int3
enter
fldt
jae
movsb
push
das
mov
sar
push
adc
xchg
inc
pop
mov
inc
or
push
aaa
sbb
jmp
mov
imul
add
mov
sub
push
mov
lcall
mov
ficoms
fiaddl
xchg
aas
scas
sti
xlat
loop
push
daa
popa
xor
push
ja
cmp
pushl
stos
mov
adc
popa
pusha
out
dec
or
pop
fwait
gs
or
adc
out
aad
rcrl
xchg
cmp
hlt
scas
mov
mov
push
and
scas
rolb
mov
fistpll
mov
mov
mov
test
popa
daa
repz
out
jno
pop
mov
pop
loop
mov
cltd
jl
andl
cmp
cmpsb
das
mov
daa
rorb
or
sub
ljmp
ljmp
dec
xchg
xchg
pop
jb
gs
pop
test
xor
lret
sbb
push
mov
pop
lcall
sub
ret
sbb
jle
cmp
xor
sub
gs
mov
repnz
outsl
mov
sbb
cmp
scas
fidivs
mov
mov
scas
jnp
mov
jle
adc
jno
enter
sbb
mov
pop
adcl
xchg
orb
sub
mov
test
add
xchg
pop
cmp
std
js
lcall
xchg
repnz
pop
add
inc
cmp
xchg
mov
loope
xor
pop
int3
mov
mov
scas
movsl
je
mov
jno
jecxz
mov
cltd
call
jb
test
cmp
cltd
nop
ljmp
lret
orl
scas
cmp
pop
push
scas
push
xor
pop
cmp
mov
pop
mov
jbe
int
pusha
jl
stc
cmp
test
orl
filds
cmp
xchg
pop
mov
es
adc
ljmp
xlat
lret
add
divl
cmp
cltd
xlat
dec
dec
cmp
dec
xchg
cmp
lret
clc
ds
mov
sub
in
xor
and
push
out
movsl
out
loop,pt
fwait
call
adc
xor
ret
inc
pop
lret
loope
repnz
pop
lcall
add
jo
sbb
cmc
jb
inc
jnp
out
jo
adc
les
cli
push
add
aas
aad
mov
pusha
or
push
dec
negb
out
gs
loop
and
adc
push
push
hlt
fimuls
pop
lods
sahf
sti
addr16
dec
repz
test
cmp
pop
add
sbb
and
cwtl
xor
and
gs
add
xor
hlt
dec
push
mov
daa
out
fcom
test
popf
jae
xor
push
shl
cmp
mov
fwait
sub
cld
ret
push
stc
fmuls
filds
ret
lret
jecxz
cmc
dec
mov
mov
ficoml
jge
cltd
mov
add
dec
lock
mov
push
insb
xchg
dec
sub
xor
les
in
dec
adcb
xchg
lret
push
lds
add
cmp
xor
out
cs
or
add
jo
mov
mov
pop
adc
scas
dec
inc
jecxz
xor
mov
mov
cmp
mov
cmp
push
aaa
mov
xor
sub
push
fnstcw
in
push
dec
inc
sbb
mulb
push
adc
jne
daa
call
cld
movsl
dec
aaa
pop
mov
rcll
pop
and
cs
dec
lret
enter
push
pop
xchg
mov
push
test
jg
pop
push
sub
scas
aas
mov
xchg
mov
cwtl
inc
mul
aad
fnstsw
mov
cmp
pusha
and
pop
lret
leave
movsl
sbb
addr16
xchg
cltd
lods
adc
fidivrl
jmp
imul
jne
test
push
repz
out
mov
cmp
adc
stos
iret
sbb
sub
add
inc
jo
daa
sub
lcall
stos
xchg
push
jnp
shlb
scas
inc
mov
pop
push
fcompl
push
insl
xchg
and
xchg
insl
inc
gs
adc
inc
cmp
xor
add
ficoms
dec
sbb
xchg
fisttpll
pop
repz
cmpsb
cmp
iret
xchg
mov
cmp
xchg
leave
in
repnz
flds
dec
add
jbe
stc
imul
xchg
xor
mov
in
stos
jle
pop
pop
ja
enter
cwtl
xchg
popf
fadd
fcoml
jp
sub
lock
or
out
lcall
lods
lds
push
stc
std
push
xchg
inc
dec
repnz
and
push
leave
inc
and
loop
shl
cwtl
push
pop
xchg
dec
jns
es
sbb
sbb
inc
hlt
mov
sub
xor
ljmp
ffree
lsl
sub
lret
loope
dec
repz
sarl
jg
cltd
dec
paddsb
call
inc
movsl
jbe
push
sbb
mov
push
jbe
es
cmp
negl
dec
icebp
jg
push
fs
pop
or
dec
test
cmp
xchg
fdiv
data16
pusha
xor
xor
fcmovbe
mov
repnz
sbb
pop
and
pop
mov
das
cld
mov
cld
test
mov
cmpsl
cmpsb
or
ja
dec
sub
stos
sbb
mov
cmpsl
cmpsl
icebp
cmp
jge
dec
nop
inc
inc
sub
pushf
mov
popf
mov
add
sarl
jecxz
cs
leave
enter
push
subl
lods
test
jg
daa
xchg
in
dec
pop
xchg
xor
pop
mov
int
enter
lods
push
adc
mov
pusha
jmp
inc
add
insl
or
sahf
lret
adc
pop
lret
jne
add
xchg
cmpsl
movsb
loop,pt
jge
xor
std
rorb
sub
mov
les
sti
xor
repz
push
xor
or
fwait
cmp
jg
testl
jns
push
stos
push
lods
xchg
add
push
jmp
add
je
pushf
mov
jno
lock
inc
add
lahf
fsts
ja
and
bound
mov
cs
and
fwait
jmp
ret
aam
or
loop
or
cmp
test
cld
cltd
inc
mov
es
dec
pop
pop
push
pop
lret
pop
push
aaa
test
lock
in
sub
cmp
push
fsubs
rcll
jmp
fdivrl
adc
push
gs
push
add
lock
and
repnz
mov
std
ffree
scas
movsb
leave
mov
cmp
jmp
stc
ljmp
out
jmp
je
repnz
mov
ja
imul
jl
adc
and
mov
mov
ret
cli
decl
xor
push
jp
lods
pop
hlt
adc
arpl
test
add
xchg
jg
xor
adc
pop
cli
test
push
xor
fs
add
add
idivl
fidivrl
fisubl
inc
mov
cld
pop
test
mov
jecxz
sub
add
addb
cwtl
fsub
insb
cmp
add
fbld
mov
sbb
dec
dec
adc
mov
shll
jae
pop
adc
push
push
aaa
cmpsb
hlt
scas
add
jbe
fsubrp
mov
cmp
jecxz
lret
jg
jnp
cmp
out
push
sub
mov
xchg
sbb
push
test
push
cmp
sub
insl
inc
mov
vpshab
xchg
mov
cs
arpl
ret
jnp
jae
sub
ja
enter
movl
loope
jge
ret
mov
lock
inc
es
sbb
or
adc
js
mov
and
stos
sbb
mov
xorb
rcrb
addr16
xorl
mov
and
xor
addr16
mov
lock
mov
push
stos
adc
cmp
rorl
dec
add
or
cmp
stos
add
std
mov
sub
out
bound
jp
cmp
in
jnp
bnd
in
sbb
jmp
shrl
add
fwait
cs
sbb
dec
adc
call
pop
xchg
mov
add
shrl
inc
jne
mov
jae
xor
push
sbb
ret
aad
jne
fisubl
les
bound
in
push
or
les
mov
popa
pop
fnstenv
push
test
lea
out
mov
fs
jecxz
inc
sub
sbbl
loopne
adc
pop
inc
mov
jbe
scas
push
or
repz
sbb
sbbb
or
out
xor
cmp
jge
das
sbb
jg
push
sub
sbb
aaa
rclb
xchg
imul
mov
lret
inc
sub
icebp
xchg
mov
inc
add
es
add
sarb
rorb
clc
ja
push
xchg
pop
adc
lock
dec
dec
push
push
pop
push
xchg
rcl
bound
fmulp
addr16
sub
les
jle
sti
jmp
int
cmp
add
inc
adc
jecxz
ds
dec
sahf
and
xchg
jno
cmp
int
scas
and
in
test
xor
stc
jnp
mov
test
call
push
outsl
aad
mov
xor
inc
adc
pop
test
mov
movsb
jecxz
test
popa
sub
mov
out
mov
jbe
in
inc
jmp
je
enter
in
arpl
mov
ljmp
and
lcall
or
daa
fdivrs
fmuls
mov
sub
and
hlt
jno
mov
cmp
mov
dec
movsl
leave
imul
and
out
or
or
stos
fsubs
dec
pop
fucomp
pop
add
gs
sbbb
cmp
and
pop
sbb
inc
inc
or
mov
sub
add
lret
scas
shl
push
dec
mov
clc
xchg
push
cli
lods
rcr
push
mov
insb
sahf
xor
nop
sbb
jp
and
into
pop
test
lds
xchg
xchg
frstor
cwtl
dec
jno
pop
push
arpl
add
aam
cmp
lret
dec
mov
sub
lods
addr16
clc
push
mov
inc
pop
sbb
sub
sub
mov
mov
pop
scas
jg
cmp
cmp
addb
push
mov
push
inc
cmp
cmc
sub
dec
push
cmp
add
cmp
push
inc
pop
cmpsb
inc
sbb
rorl
jp
and
hlt
fwait
adc
or
and
mov
sub
jae
inc
stos
roll
add
jecxz
jnp,pn
out
and
pop
in
insb
dec
out
mov
xchg
fsub
incl
sub
dec
or
enter
lods
inc
inc
dec
imul
cli
arpl
fadds
mov
out
sbb
pop
push
xlat
push
insb
push
inc
lret
add
cmp
jmp
jb
cmpsb
and
sub
xchg
or
dec
mov
imulb
dec
jmp
mov
call
pop
mov
shl
dec
mov
cmp
es
or
sbb
push
scas
out
js
jge
mov
inc
sbb
loop
and
or
inc
call
mov
addb
mov
and
fildl
ljmp
fld
jmp
loope
insb
pop
mov
add
subb
addr16
lods
push
mov
sub
ljmp
iret
dec
xor
test
gs
jg
fbstp
xor
fistps
or
mov
dec
ficomps
xchg
sahf
xchg
cli
sub
xchg
mov
push
pusha
jl
dec
pusha
lcall
sbb
insl
sub
sarl
sarb
adc
das
outsb
dec
aam
js
cli
jmp
sbb
dec
dec
mov
adcb
test
or
xchg
testl
js
sbb
and
add
dec
fwait
jno
loop
bound
xchg
inc
stos
cwtl
fs
xor
out
fmuls
imul
neg
loopne
lret
hlt
mov
imul
dec
idivb
outsl
pop
popa
add
fcompl
mov
xchg
inc
push
sub
mov
and
fscale
mulb
test
xchg
gs
ret
xchg
mov
jb
sahf
dec
ja
xchg
roll
xchg
testb
icebp
cmc
outsl
stc
loopne
push
aam
cmpsb
aaa
mov
push
mov
sbbb
or
sbb
fadds
insb
mov
jg
popf
mov
lea
scas
das
mov
xorb
dec
push
sub
fidivrl
mov
and
xor
push
mov
cmp
dec
ja
jmp
inc
xchg
adc
sbb
test
jbe
arpl
or
int
sub
in
and
stc
jae
inc
cmp
jbe
pop
out
add
and
pop
test
adc
jl
and
mov
mov
cmc
xchg
mov
push
fcomip
xbegin
jno
dec
xchg
add
bound
xchg
jge
mov
loop
ds
lret
xchg
sbb
vpmuludq
mov
adc
test
sbb
nop
cmpb
icebp
stc
pusha
imul
mov
outsb
add
sahf
lds
loop
xchg
ret
dec
push
cld
pushf
mov
mov
cmp
stos
test
add
cmc
jecxz
sub
iret
or
push
aas
xchg
dec
and
or
push
mov
incl
idivb
sub
and
xchg
in
mov
jle
pop
shl
add
pop
cmpsb
mov
cmp
jo
into
scas
mov
loope
mov
xlat
iret
mov
lcall
cmp
mov
movsb
popa
movsb
pop
in
clc
sub
inc
sub
dec
lock
sarl
movswl
jnp
jb
std
mov
repz
push
inc
xchg
cwtl
jmp
or
mov
out
es
fwait
or
and
mov
xchg
jmp
jecxz
imul
or
sub
imul
dec
xor
fldl
movsl
nop
arpl
notl
inc
xor
push
jl
fs
mov
xchg
jl
push
xchg
dec
lret
notb
mov
mov
ret
icebp
in
mov
mov
out
and
shrl
andb
test
mov
jecxz
sbb
push
les
repz
push
jns
mov
hlt
xchg
dec
sub
lods
cltd
cmp
addl
enter
mull
popa
xor
int
arpl
repz
sbb
mov
stos
es
data16
je
pop
pop
ljmp
jge
xor
scas
cmp
fidivl
pop
ud0
scas
push
xor
jnp
push
mov
imul
cmpsb
lcall
lcall
sbb
push
fistl
std
jne
push
adc
ret
xchg
xor
out
add
mov
jl
push
mov
ss
fistps
cmp
sbbb
push
sti
mov
xor
ja
mov
outsl
xchg
sub
sbb
push
sub
nop
in
jmp
out
out
push
inc
dec
and
movsl
adc
adc
mov
mov
jle
incb
jl
jp
loopne
mov
dec
test
mov
mov
mov
add
outsb
cld
inc
cmp
xchg
icebp
sub
loopne
out
push
lret
in
mov
je
dec
test
aad
mov
push
push
jno
dec
lods
cwtl
ljmp
jg
popf
cmp
push
mov
push
shrb
or
fidivl
cmp
push
or
fisubrl
data16
adc
int
or
les
pop
rorl
jp
xor
enter
mov
mov
ret
pop
shr
loopne
repz
mov
in
add
pushf
das
or
sbb
fcompl
sbb
pusha
adc
jmp
iret
mov
or
iret
inc
inc
aaa
push
sbbb
popf
aad
pusha
xor
rcll
xor
leave
mov
ljmp
adc
in
mov
loop
jne
les
ficompl
sub
arpl
lods
scas
hlt
jge
mov
out
push
xchg
adc
mov
push
pop
je
fstps
cmp
pop
je
mov
adc
in
fnsave
pop
nop
je
jne
push
mov
add
scas
rcrl
jg
addr16
xchg
dec
mov
pop
and
mov
dec
andb
fcomip
neg
pop
pop
xor
dec
push
jno
sti
jno
or
pop
dec
pop
fs
clc
push
mov
push
mov
sti
test
pop
jno
and
inc
mov
clc
push
push
sbb
sbb
xchg
dec
or
loope
sub
push
inc
shll
mov
ret
fadds
hlt
fcmovne
int3
ret
xor
daa
mov
dec
sbb
pop
arpl
jne
ss
push
fistl
ss
lahf
mov
and
and
dec
mov
xor
test
lds
dec
scas
cli
mov
insl
je
sbb
aaa
or
mov
push
cltd
dec
sbb
jno
cmp
enter
push
out
mov
jo
lret
repnz
sub
shl
insb
sarl
cmc
xchg
sahf
loop
jle
insl
adc
lods
leave
cld
int
sahf
push
out
adc
loopne
xchg
xchg
adc
cmp
push
out
cmp
adc
pop
xor
fnstsw
ja
std
movups
in
add
mov
push
inc
pop
sub
mov
dec
xchg
inc
call
arpl
sub
call
xor
mov
jle
dec
inc
fistl
repz
add
push
les
sbb
sahf
mov
inc
mov
pop
mov
test
cmp
ret
std
lods
nop
aas
loop
pop
movsl
loope
xor
jbe
mov
mov
test
xchg
ss
mov
fwait
mov
and
inc
setne
xor
and
scas
imul
adc
ljmp
nop
mov
insl
mov
aad
test
dec
insb
loope
and
xchg
mov
adc
mov
testl
insl
and
sbb
aam
pop
fisttpl
lret
scas
cmpsb
push
ss
sahf
sar
bnd
xor
fsubs
push
sub
aas
xor
testl
xchg
adc
sub
sub
sbb
xor
fcomps
or
push
mov
xchg
loop
dec
mov
loope
mov
sbb
lea
add
mov
es
sbb
les
pushf
mulb
ds
ja
aad
inc
ss
add
out
test
rcrl
data16
jge
mov
mov
sbb
xchg
stc
loope
jnp
inc
popa
or
jge
and
mov
sub
jl,pt
xchg
fsubr
insb
jno
test
iret
js
sbb
xchg
jl
xchg
cmp
leave
and
sub
test
insl
pop
adc
cmpsl
stc
idivl
loope
sbb
mov
mov
shl
pop
jmp
xchg
push
dec
jle
fcmovu
push
adc
jge
out
push
js
movsl
rep
repz
cmp
add
fisttpll
push
popa
cmc
imul
fdivrl
sub
mov
sbb
aaa
xchg
icebp
out
and
iret
jg
lods
push
mov
xchg
adc
in
lcall
mov
cmp
dec
leave
inc
jb
push
out
cmpsl
out
push
jecxz
jge
jle
icebp
pop
rol
mov
ret
cmp
cmpsl
pushl
movsb
add
mov
out
out
out
and
in
je
inc
imul
fcom
pushf
scas
xchg
jne
fcomip
xchg
mov
and
aas
arpl
or
pop
data16
cmp
movsl
pop
push
mov
aas
lods
pop
cltd
sbb
inc
int
aas
cmp
in
adcl
push
and
insl
popa
lds
ja
or
shll
jbe
mov
mov
nop
mov
arpl
pusha
call
sub
jle
lods
call
dec
sbb
aas
jmp
ret
ds
adc
cld
xchg
sbb
pop
adc
mov
jo
pop
pop
mov
adc
mov
push
popa
pop
sti
push
mov
mov
mov
xor
jbe
daa
add
push
rorl
xlat
xlat
shll
push
push
push
and
loopne
jne
push
hlt
lahf
jae
mov
testl
jns
jecxz
and
cmp
cmp
rol
test
push
addr16
jb
jb
cmpsb
lods
lock
xchg
mov
lahf
cld
dec
mov
insl
and
add
scas
cmc
push
pop
dec
jne
icebp
mov
mov
mov
cwtl
cmpsb
xchg
movsl
aas
stos
xorb
mov
jle
adc
pop
cltd
sub
stos
push
or
jns
xchg
cltd
ficompl
addr16
stos
lds
xor
mov
jbe
fsubrs
add
sbb
mov
mov
mov
jg
cmpsl
jbe
cmp
jmp
cmpsl
rol
mov
pop
testl
and
dec
imull
icebp
cmpsl
dec
adcl
inc
fidivrl
sbb
inc
and
dec
out
in
cmp
es
movsb
test
imul
xor
pop
fmull
add
push
subl
sub
shl
or
xbegin
decb
push
sbbl
icebp
push
pop
cmc
push
and
push
mov
mov
xor
clc
dec
std
cmc
mov
pop
out
mul
jbe
inc
mov
xlat
xchg
add
cli
mov
out
cs
jb
in
push
sbb
aas
mov
mov
call
es
pushf
cld
jecxz
repnz
sbb
push
lods
leave
push
sub
lret
ret
pop
xor
arpl
xchg
movsl
mov
rcr
xlat
or
xchg
xchg
cmp
scas
negl
lock
icebp
push
out
adc
loop
mov
enter
pop
pop
sub
lds
scas
int3
mov
dec
mov
int3
repz
adc
dec
lock
or
sub
xor
pop
push
int3
adc
dec
movsb
test
jmp
mov
dec
push
rclb
sbb
xor
xor
std
dec
or
mov
out
sbb
xchg
sbb
out
into
ss
add
loop
pop
std
pop
add
bound
xchg
movsb
cmp
and
push
fisttpl
and
jb
gs
mov
xor
fstp
into
cmp
sub
jbe
popa
push
push
cmc
repnz
push
pop
cmp
ljmp
pop
fucomi
jae
push
repz
fwait
test
test
insl
add
mov
arpl
call
mov
mov
cmp
mov
mov
xchg
lret
jae
cmp
mov
pop
xlat
push
and
jge
mov
jb
call
imul
sub
mov
or
xorl
pushf
lret
iret
les
lret
push
xchg
inc
sbb
repnz
add
cmpsb
mov
andb
mov
add
pop
push
fldcw
add
inc
jns
out
jle
xchg
cmp
lock
ret
sbb
mov
jne
pushf
data16
xchg
pusha
inc
insb
lods
dec
add
js
fs
mov
dec
das
mov
icebp
inc
mov
mov
xor
cmpsl
jl
dec
push
mov
mov
rcrl
push
movsl
jmp
add
xor
push
rcrb
pusha
icebp
pop
inc
int
jg
and
and
sbb
jg
sub
fstps
inc
je
xchg
xchg
jg
xchg
mov
mov
pop
shlb
push
shrl
lret
mov
rcl
scas
push
fisttpl
ficompl
mov
pop
jp
in
mov
sbb
pop
mov
mov
in
pop
ficomps
xlat
push
mov
pop
push
push
mov
push
adc
lods
mov
das
mov
js
nop
jb
jo
and
es
es
jle
mov
leave
push
loopne
dec
xchg
in
inc
dec
add
push
lea
lahf
mov
loope
loop
mov
fistpll
mov
adc
mov
cwtl
fwait
xor
or
and
add
mov
cwtl
push
daa
aad
inc
push
cld
sub
xchg
cld
push
adc
test
or
mov
jnp
or
jge
mov
cltd
mov
movsl
int3
movsl
sub
xchg
or
push
loop
leave
and
in
jbe
icebp
jo
adc
sbbl
out
fcoms
out
cltd
mov
rdmsr
sahf
pop
xor
stc
stos
dec
dec
pop
int3
mov
xchg
in
mov
cmpsl
stos
in
stos
icebp
out
cmp
fcmovnbe
jae
mov
sti
shll
in
jo
ret
mov
mov
fucomi
and
iret
mov
pop
mov
mov
xchg
xchg
lret
cmp
movsl
test
sbb
mov
data16
inc
inc
loopne
ljmp
sbb
das
cltd
fistpll
bound
xor
sbb
insb
mov
lods
insl
aam
push
bndldx
dec
nop
dec
add
cwtl
test
aaa
out
add
cmp
xchg
iret
dec
sub
pop
inc
aaa
bound
ja
jae
mov
int3
rcrb
xor
push
mov
loope
idivb
add
xchg
jno
inc
pop
mov
fimull
jl
leave
push
pop
xchg
roll
lods
jnp
fnsave
repz
mov
jns
clc
jle
adc
or
shll
lods
pop
insl
cld
or
push
repz
repz
mov
or
lods
xor
inc
jecxz
add
sbb
mov
cmp
pop
push
loop
push
add
lock
cs
xor
into
sbbl
sbb
ja
notb
mov
aam
jae
push
insl
or
mov
mov
dec
lahf
xor
jecxz
sub
in
xchg
in
in
aaa
jge
cmp
popa
aas
and
mov
push
std
outsl
mov
jne
ljmp
cmp
xchg
pop
arpl
call
loop
mov
cmc
mov
adc
mov
xor
cmc
and
in
mov
in
js
test
or
mov
mov
mul
hlt
or
sub
xor
mov
mov
lahf
icebp
jge
dec
repnz
aaa
inc
cltd
xchg
cmpsb
adc
add
lret
pop
pusha
mov
xlat
cwtl
or
push
xchg
pop
and
mov
cmp
cmp
push
repnz
stc
data16
ljmp
mov
jg
divl
out
sub
out
lds
xchg
mov
dec
arpl
shlb
jb
adc
xchg
sub
xchg
pop
push
pop
out
jmp
sbb
int
jecxz
jbe
lahf
ficoms
mov
iret
mov
cmc
cmpsb
ljmp
sub
cmc
testb
mov
mov
cltd
mov
ja
mov
xchg
xchg
jmp
xlat
or
mov
or
stos
xchg
jp
dec
mov
dec
jnp
inc
pop
xchg
pop
roll
push
mov
outsb
gs
dec
inc
mov
iret
jo
mov
aas
mov
mov
push
sub
mov
cld
or
or
iret
aas
mov
xor
mov
shlb
lods
sub
repz
xor
sti
push
mov
call
pop
fisttpll
frstor
cmp
cltd
daa
cmp
lock
into
dec
les
lret
and
pop
cmp
data16
scas
dec
addr16
cmpsb
insl
int3
popf
cmp
cwtl
js
pusha
call
repz
stc
or
push
xchg
add
in
fsubrl
aam
movsb
xchg
pop
fnstsw
lcall
int3
mov
pop
xchg
cmp
ret
xor
fidivs
popf
in
jno
dec
sbb
rorl
cvtps2pd
sbb
mov
jbe
mov
jae
pop
xor
xor
aaa
cmp
hlt
xchg
aas
pop
arpl
outsb
mov
ds
or
lock
cmp
push
push
bound
das
aas
in
cmc
push
jl
xchg
lds
cmc
int3
orl
sub
sbb
sar
xor
sarb
aad
xor
mull
pusha
inc
xchg
test
cmpsb
jb
mov
and
mov
mov
lods
pop
mov
or
mov
pop
stos
dec
xor
mov
push
lahf
fs
mov
shrb
sub
ss
push
sub
pop
mov
jmp
rorl
push
cmp
sbb
aam
sbb
push
push
out
lahf
popa
jp
iret
pushf
and
and
xor
lods
jns
and
or
out
jg
pusha
and
loopne
mov
je
pop
xor
sub
mov
loopne
mov
adc
push
cmpsl
hlt
push
andb
dec
addr16
push
in
into
jno
xor
lahf
cmp
dec
jae
cmp
push
stos
mul
xchg
inc
fcompl
mov
lods
mov
mov
lock
push
adc
stos
sub
popa
cmpsl
push
popa
mov
inc
jge
aaa
pop
sub
add
jo
ss
aaa
xchg
pop
jo
lock
cmpb
adc
es
sub
out
mov
ja
mov
adc
mov
jno
xor
imul
push
sahf
test
inc
add
popf
sub
addr16
jns
call
dec
cmc
mov
dec
inc
sbbl
ficompl
inc
pop
pop
or
pop
push
adc
fcmovne
cmp
es
xchg
or
xchg
iret
in
enter
cmp
leave
jno
dec
mov
out
cmp
in
pop
cmpsl
pop
aas
call
pop
int
repz
mov
je
mov
jg
inc
mov
jmp
sbb
jge
push
out
sbb
flds
add
xor
xor
mov
sbb
mov
cmp
inc
in
xchg
adc
push
cltd
add
icebp
ds
lcall
daa
and
jae
sub
inc
test
or
dec
popl
daa
ljmp
add
fnstsw
push
cs
xchg
imul
sahf
aam
sub
lret
inc
stc
rorb
insl
add
outsb
icebp
ret
mov
mov
test
stos
mov
into
cwtl
cld
ljmp
test
das
insl
rcll
inc
pop
xchg
aas
sbb
sub
ljmp
push
jae
cltd
out
add
lahf
or
pusha
inc
xor
nop
dec
stos
in
cmp
push
sbb
and
sub
mov
add
outsb
iret
test
or
xchg
pop
int
mov
jno
ret
sbb
ss
aad
mov
jno
push
hlt
push
repnz
mov
jne
stc
pop
and
xor
jecxz
icebp
stc
mov
adc
lods
in
fdivr
push
dec
mov
and
sti
loope
faddl
sti
mov
adc
imul
mov
jns
mov
sub
sbb
out
imul
push
mov
push
push
out
rcrl
add
fs
cmp
jl
ret
ret
cmpb
dec
lock
cmp
xor
aad
mov
or
inc
mov
jb
xor
arpl
sub
outsb
es
sub
add
aam
cmpb
pop
repnz
movlps
mov
pop
add
movsl
xor
add
jmp
fisttpll
cmp
js
icebp
sbb
sbb
mov
call
fwait
pop
add
xor
stos
sbb
xchg
jns
add
jl
add
scas
cmp
orl
jbe
leave
mov
clc
out
push
ret
or
scas
jbe
fcom
sbb
es
xchg
cli
outsb
roll
nop
pop
shll
and
repz
push
test
pusha
inc
clc
loope
jbe
jecxz
test
lods
fs
call
xor
mov
or
pusha
jns
mov
pop
jnp
in
clc
mov
gs
jnp
cmp
popf
pop
test
dec
mov
shrb
mov
add
or
xor
mov
xchg
shrl
sti
add
and
es
stc
pop
inc
jno
xchg
inc
mov
cmp
mov
shl
cmpsb
out
inc
add
insl
xchg
mov
dec
push
subb
adc
sbb
or
jbe
movsb
sub
out
je
inc
adc
dec
xchg
fs
inc
ret
cmp
imul
ljmp
roll
fdivr
in
pop
call
repnz
sub
push
or
jo
push
sarb
xor
sar
push
xor
jl
jmp
jp
daa
dec
lods
push
mov
mov
shlb
or
test
movsb
adc
into
jae
popf
jnp
mov
ljmp
scas
cmp
jnp
scas
cmc
jae
or
pop
xchg
push
dec
sbb
push
pop
cmpsb
test
pop
mov
dec
jo
adc
dec
ljmp
iret
push
repz
sbb
cmc
ljmp
int
xchg
int
or
and
call
sub
sbb
pop
lret
stos
adc
lahf
loop
and
pop
ret
into
jne
loop
lods
shlb
shll
sbb
push
and
lock
jle
lds
cmp
ljmp
mov
jge
add
test
inc
stc
call
repnz
push
gs
dec
jl
negl
and
lahf
xchg
shlb
add
dec
pop
cltd
insb
adc
adc
mov
mov
loope
xor
cmp
push
movsb
enter
shl
nop
icebp
fs
ret
add
lea
daa
call
push
mov
subb
pop
cmp
sbbl
sti
push
mov
int
push
mov
push
add
outsb
and
pop
pop
inc
orl
or
push
mov
mov
dec
jmp
sub
sar
movsb
rcr
inc
sbb
in
pcmpgtd
xchg
icebp
xchg
cmp
fisubrl
adc
mov
int3
cmp
rcrb
mov
jmp
cmp
cli
push
ss
inc
mov
dec
push
xchg
xchg
cs
in
mov
sbb
lds
negl
addr16
arpl
mov
adc
fldcw
or
ja
xor
fcmovb
mov
insb
mov
push
push
stos
inc
and
xchg
push
mov
iret
add
lret
dec
shll
es
fldl
ja
lods
ljmp
jbe
iret
pop
data16
sahf
jb
test
test
jns
inc
xchg
cs
in
xor
ret
push
adc
cmp
mov
ss
nop
hlt
push
mov
cmp
cltd
jae
leave
and
pop
dec
inc
push
add
mov
push
fistpll
insb
and
jo
jns
test
jle
push
popf
or
or
mov
jo
or
scas
mov
push
or
icebp
cmp
ss
push
push
mov
xor
or
jne
sub
jae
cli
jne
jmp
cmp
mov
pop
lods
stos
mov
dec
xor
test
scas
lock
pop
pop
or
call
movsl
hlt
push
outsl
cmpsl
dec
inc
scas
out
jle
dec
out
or
inc
sbb
hlt
daa
or
loopnew
call
data16
cwtl
movsb
sbb
pop
pop
and
insl
jnp
or
gs
movsb
mov
neg
xor
and
jl
mulb
aam
fldt
sahf
sbb
aam
clc
xchg
dec
hlt
cmp
dec
cmp
cwtl
mov
push
cmp
xor
sub
scas
test
out
enter
outsl
hlt
xchg
mov
jne
test
pop
jne
mov
inc
call
push
or
ljmp
push
or
mov
pop
mov
loopne
mov
shrb
fwait
sub
ret
test
fcmove
xchg
mov
jl
aam
xchg
fwait
push
stos
mov
xor
jnp
sub
xchg
push
js
roll
pop
rcrl
repnz
adc
and
cmpsb
fs
cltd
andl
jns
adc
test
in
es
mul
adc
mov
cmp
xchg
cs
je
popf
jmp
mov
xor
mov
sub
jbe
xor
jno
fs
mov
ret
ds
gs
data16
fiaddl
cs
sub
js
mov
movsl
call
xchg
ss
mov
sbb
dec
in
inc
mov
sti
and
dec
nop
lcall
inc
mov
sbb
out
bound
gs
jecxz
outsb
and
inc
and
mov
jno
sahf
mov
push
movsb
int
mov
and
js
scas
out
out
push
sbb
sub
mov
push
les
sub
push
je
jecxz
jbe
sti
mov
lods
lods
stos
rcr
cmpsl
jnp
arpl
jecxz
cmp
jae
mov
fnstsw
xor
or
aas
popa
adc
mov
addr16
sub
nop
dec
ret
gs
clc
cmp
push
fisttps
dec
cmpsb
mov
jl
xchg
or
cmp
ret
insl
adc
cmp
rcrb
inc
rol
in
rcrb
xchg
pop
in
mov
and
xor
rdmsr
lods
into
pop
mov
ja
inc
or
out
and
jg
xor
sbb
or
and
lock
dec
aad
xchg
push
mov
andb
push
mov
ljmp
mov
aam
mov
les
xor
je
data16
add
sub
xor
cmpsb
lea
out
fisttpll
push
nop
movsb
jp
xor
repz
jnp
and
cmp
jbe
inc
mov
mov
inc
jmp
xchg
negl
and
mov
lahf
nop
pop
push
in
inc
mov
jae
mov
stos
mov
bound
xchg
pop
jecxz
cmp
nop
or
inc
add
dec
or
xchg
or
lods
lret
lcall
iret
fbstp
add
int3
inc
out
mov
mov
or
lods
or
adc
jns
hlt
mov
fldcw
inc
iret
jl
mov
add
cmp
aas
addr16
icebp
cmp
add
pushf
sbb
roll
lcall
adc
mov
xchg
and
mov
xor
aad
sbb
mov
rorl
shrl
dec
sub
mov
nop
out
ljmp
loop
mov
push
xlat
pop
cs
jg
pop
mov
arpl
mov
inc
arpl
movsl
scas
jnp
jne
outsb
aas
cmpl
pusha
in
stos
push
or
testb
lock
cmp
mov
ds
mov
add
sti
mov
data16
pop
inc
imul
in
ret
push
pop
loop
movsl
inc
imul
mov
push
sbb
out
sti
mov
addr16
loopne
cmpsb
pop
dec
dec
repnz
clc
push
mov
jne
movsb
loope
xchg
mov
and
mov
sub
and
jb
dec
rolb
pop
leavew
lcall
dec
xchg
push
inc
inc
xor
jae
mov
xor
or
dec
mov
jno
jmp
int
xlat
push
or
gs
imul
mov
mov
cld
in
ret
loopne
cmp
sbb
loop
push
jnp
push
mov
lcall
scas
sarb
jg
pop
mov
outsl
push
les
push
loopne
xor
xchg
xchg
ja
sbb
add
and
cmc
scas
fmulp
cld
xor
mov
mov
vpshad
jae
or
xlat
sub
mov
lcall
arpl
pop
mov
popf
fsubs
out
data16
lahf
push
cmp
imul
push
sbb
pop
rcr
out
inc
imul
xchg
lahf
dec
test
mov
clc
pop
pop
aas
mov
jbe
adc
dec
scas
lea
pop
cmp
xchg
ss
sbb
add
and
lahf
js
or
mov
pop
cmpb
pop
les
std
pop
jb
mov
push
dec
jg
mov
inc
adc
bound
cmp
mov
jecxz
cld
in
mov
add
inc
jno
sbb
cld
and
imul
lahf
pop
cmp
jno
fdivs
in
stos
movb
faddl
mov
sbb
ficomps
or
inc
xchg
imul
leave
and
aad
dec
mov
jns
imul
mov
cmp
xchg
push
pusha
fs
loope
shll
decb
notl
mov
inc
cmp
call
mov
push
mov
outsb
int3
xlat
add
popf
pop
daa
cmpsb
xor
jmp
push
test
repz
add
xchg
ret
dec
adc
jbe
push
sbb
mov
popl
fadds
push
dec
push
push
mov
ds
xchg
inc
fmuls
test
cmpsb
and
jae
dec
in
sub
aad
push
movsb
inc
shl
bound
iret
fadd
fidivrs
cmc
movsl
gs
adc
xchg
sbb
mov
jmp
xchg
ror
ja
mov
push
imul
jo
dec
dec
andl
test
pop
aaa
mov
pop
inc
fdivl
dec
lret
lret
popa
jle
or
dec
testl
insl
int3
xlat
push
nop
cmp
test
pop
fiaddl
xor
and
aam
inc
aas
dec
insb
pop
pop
fs
jp
inc
shl
dec
scas
ficoms
push
cmpsb
mov
mov
add
add
and
adc
imul
or
es
mov
pop
jecxz
push
sbb
push
loope,pn
lret
lahf
in
mov
cmp
das
ret
iret
xchg
jae
jbe
xchg
jns
cli
mov
in
lcall
insb
test
fimull
repz
pop
sti
mov
or
xchg
add
sub
ret
out
mov
cmp
in
das
repnz
call
cmpsl
sbb
test
cmp
mov
sub
notb
in
xchg
mov
and
fwait
cmp
in
out
fistpll
movsb
jno
lcall
xor
mov
subb
out
jg
mov
fidivs
jne
lcall
dec
xor
daa
test
lret
addr16
pop
jo
lock
xchg
jmp
test
mov
stos
pop
ss
fidivs
pop
mov
pusha
add
add
push
jae
sbb
adc
dec
pushf
mov
hlt
mov
jg
call
sbbb
rclb
popa
ss
adc
sbb
js
sbb
jle
scas
fidivrl
adc
shlb
ffree
jg
mov
and
fmull
xchg
or
jb
mov
imul
js
imul
stos
test
push
sbb
call
and
out
push
pop
lret
mov
shrb
pop
aam
leave
cli
sbb
stos
adc
clc
cmp
into
and
inc
xchg
cli
inc
push
xchg
add
bound
jae
lock
sub
lret
sbb
das
je
ljmp
mov
loope
and
xor
out
pop
or
push
mov
mov
popa
hlt
int
sbb
mov
mov
push
pop
mov
mov
mov
add
shll
and
or
or
in
insl
cli
loopne
jmp
out
lds
shlb
repnz
fcomps
stos
dec
sahf
push
daa
movsb
mov
pop
pop
stos
xchg
adc
cli
std
testl
or
fwait
xor
lds
das
ja
push
shr
inc
dec
out
push
fiadds
movb
dec
mov
clc
sbb
pop
xlat
daa
sbb
in
lods
hlt
and
xchg
or
or
or
adc
fldt
ja
push
pop
xchg
mov
xor
xorl
inc
stos
mov
cli
pop
mov
scas
arpl
pop
inc
and
das
sub
adc
push
popf
mov
les
mov
mov
mov
jno
mov
es
test
rcr
in
sbb
stos
int3
scas
popa
sahf
sbb
lock
aam
loopne
fxam
in
jns
scas
sub
imul
js
inc
arpl
mov
fwait
mov
jb
push
fmull
jae
sbb
out
push
dec
ficompl
aad
sub
adc
fs
lcall
imul
test
jne
xchg
inc
lcall
enter
in
gs
ss
jg
push
stos
mov
fstpl
sha1msg2
add
dec
jnp
out
push
lcall
or
cld
inc
and
xor
out
jno
cld
push
jbe
lret
or
pushf
repz
sub
inc
mov
jb
pop
enter
pop
cmc
mov
cmp
rol
std
jnp
jmp
scas
mov
lahf
mov
aas
inc
xor
push
adc
sahf
into
scas
jo
adc
cmp
sbb
xchg
jl
roll
mov
inc
out
mov
jecxz
stos
addb
mov
data16
cwtl
data16
jae
push
sub
jp
adc
lahf
mov
lock
jae
cmpsb
sub
int
ficompl
mov
aam
adc
adc
mov
jo
mov
andl
add
in
or
adc
push
xchg
lret
out
test
repz
push
fidivrs
loope
inc
roll
mov
push
xchg
push
and
repnz
cli
mov
push
cmp
mov
sub
jl
or
lds
xchg
xchg
out
test
add
scas
in
adc
imul
sub
jne
js
cmp
out
sub
test
mov
jle
inc
mov
test
jge
jge
and
jle
fwait
add
repz
std
dec
repz
inc
mov
loope
and
int
stos
mov
stc
out
adc
xor
mov
mov
mov
pop
dec
jmp
adc
js
mov
idivb
mov
imul
lcall
cmp
push
or
subb
rcr
mov
inc
cmp
jmp
insl
push
or
mov
xor
cltd
xlat
in
mov
in
stos
outsl
js
int
mov
bound
add
ret
stc
pop
jge
stc
js
push
pusha
mov
movsl
das
mov
out
xor
mov
fyl2xp1
shl
inc
in
cwtl
iret
fwait
mov
jl
dec
lret
stos
jl
enter
pop
in
and
inc
sub
imul
lret
xchg
and
add
sub
jge
ja
push
adc
repz
fcomps
inc
sbb
addb
lcall
je
jg
jne
test
pop
push
lcall
push
or
dec
xchg
push
aad
mov
sbb
ret
cmp
outsl
xchg
and
dec
add
in
enter
into
jbe
cmpsl
add
cvtpi2ps
jbe
pushf
in
or
or
js
fsub
sbb
aas
xlat
lahf
enter
sub
mov
xchg
or
mov
jb
xor
mov
lds
add
lods
push
daa
dec
daa
mov
mov
add
sub
jnp
test
and
inc
xor
lods
xor
rclb
or
push
test
dec
enter
repz
jl
pop
mov
or
enter
rol
jne
lds
int3
add
and
jb
les
outsb
add
scas
popf
sub
movsl
out
pop
add
sub
mov
into
dec
add
cmp
cli
imul
iret
xor
push
jo
outsl
insl
mov
ja
jle
xor
lcall
outsb
dec
insl
rolb
clc
in
std
fs
in
out
imul
and
push
lods
jmp
push
xchg
stc
xchg
mov
sbb
pushf
paddq
push
int3
ja
popf
lret
fsts
adc
ja
dec
subb
and
seta
daa
jo
loop
push
ret
push
fildll
mov
shl
lods
clc
in
xor
pop
adc
pop
jno
mov
cmp
mov
sub
roll
enter
cmp
arpl
xchg
mov
hlt
mov
jo
lea
mov
add
lret
inc
jno
jnp
mov
push
xlat
cmp
mov
xchg
into
and
aad
and
jb
add
ja
pop
fildll
cld
fsubrs
add
aas
cmp
inc
loopne
mov
push
and
mov
xlat
dec
lret
arpl
adc
jb
inc
icebp
dec
jge
movl
aad
xchg
mov
cmp
sarl
scas
cs
fs
outsb
mov
jne
pop
icebp
shlb
inc
rolb
sub
xor
mov
popa
dec
movsl
out
ss
fwait
addr16
and
sub
lcall
into
lock
fs
mov
adcl
mov
fdivr
leave
hlt
pop
mov
add
mov
mov
lods
xorb
mov
push
scas
inc
loopne
stos
adc
fistl
inc
mov
jb
mov
push
and
push
adc
or
pop
mov
jno
lods
ja
mov
jecxz
push
fcompl
mov
inc
pop
std
or
pop
push
pop
mov
imul
popa
add
push
inc
inc
add
xor
inc
enter
fwait
stos
push
pushf
dec
sub
jg
inc
pop
loope
or
mov
mov
fdivs
pop
in
sbb
fcompl
int
stos
xchg
jl
cmp
faddl
fbld
dec
adc
mov
or
out
bound
repz
xor
lret
das
sub
pop
rcr
cmp
sti
ljmp
push
fnstsw
mov
mov
gs
sbb
lea
out
mov
je
sub
mov
es
mov
jne
adc
lret
sbb
sub
push
or
jns
pop
inc
mov
mov
sub
xchg
lods
add
sub
cmp
mov
idivl
pop
jns
loope
mov
addb
cltd
stos
dec
aad
repnz
mov
data16
hlt
jp
in
push
ss
leave
cltd
xor
imul
es
sub
cli
inc
sti
add
sahf
mov
xchg
aam
gs
sbb
inc
dec
incb
repnz
in
push
xchg
mov
sub
dec
pop
jp
test
imul
jmp
jbe
lcall
aad
pusha
xor
adc
cmp
es
mov
imul
lea
rol
push
add
leave
lock
movsl
loopne
js
aas
out
cmc
pop
imul
dec
jle
outsb
es
xor
das
inc
mov
adc
in
cmpsb
jae
inc
test
inc
sbb
inc
sub
adc
pop
cmp
fbld
jb
aas
or
loope
rcrb
out
inc
les
dec
into
or
pop
push
cli
mov
xchg
sub
xchg
lods
fidivrl
sub
arpl
mov
mov
mov
jmp
and
movsb
out
adcb
loop
int
xor
bound
pusha
mov
and
shll
jo
add
push
daa
jp
cltd
jp
fcomps
insl
adc
lods
adc
or
fsubrs
cmp
add
add
xor
cmpb
mov
xchg
lret
in
test
xchg
sbb
cmovne
jmp
subl
xor
cmp
daa
dec
inc
fistps
jge
fidivrs
es
outsb
mov
push
mov
cwtl
lea
jns
and
jne
je
mov
into
sbb
js
add
ss
lea
loop
cs
das
fidivl
in
pop
insb
insl
dec
mov
jp
jl
xchg
outsb
add
mov
add
mov
pushf
lods
mov
mov
imul
int
mov
outsb
test
mov
mov
std
arpl
jmp
lea
inc
int
dec
cmp
fs
movsl
push
in
leave
nop
test
aas
jae
rorb
hlt
scas
or
dec
icebp
sarl
test
sbb
lock
pushf
stc
cmp
andb
movsl
mov
enter
iret
fisttps
jno
pop
cmp
and
jns
xchg
loope
cli
cmpsb
pop
xchg
cli
adc
loope
fisubrl
mov
int3
dec
test
nop
addr16
nop
dec
xchg
ret
mov
out
sti
xchg
cmp
mov
sahf
mov
push
mov
negl
pop
jecxz
jnp
cmc
pop
cwtl
shlb
stos
xchg
das
imull
mov
rol
cmpsb
es
loopne
pop
jno
pop
pop
das
mov
cltd
add
sbb
in
cld
in
into
jmp
or
push
mov
in
cli
movsb
mov
enter
pushf
jbe
fdiv
cs
mov
scas
add
insl
mov
pop
mov
sbb
ja
pop
mov
sti
aaa
test
mov
insl
cmpsb
outsb
xchg
add
rol
push
xchg
aaa
ret
or
in
mov
sbb
mov
cmpsl
imul
std
jle
jo
or
fcomps
xlat
or
dec
pop
dec
pop
xchg
aas
cmp
scas
jle
push
bswap
push
mov
mov
pop
push
imul
jl
jg
mov
mov
adc
adcl
sub
inc
mov
ja
or
es
cs
mov
ss
pop
mov
pop
cli
mov
fwait
imul
pushl
push
mov
or
adc
test
icebp
imul
jge
into
dec
aam
stos
pop
adc
cmpsb
loope
sarb
repz
mov
xchg
push
subb
cmp
loopne
or
mov
xor
stos
insl
adc
pop
sbb
push
jne
shll
add
xchg
in
lock
xchg
scas
xchg
and
fdivrl
push
nop
mov
lahf
mov
pop
aas
push
add
adc
iret
movsl
rolb
int
test
fsubrs
shrl
hlt
jecxz
cmc
sbb
xor
in
mov
sbb
js
inc
jecxz
and
push
pop
int3
pmullw
cmp
rcrb
cs
dec
mov
mov
int3
fimull
ret
std
sbbl
or
out
dec
iret
inc
pop
pop
push
dec
pop
dec
lret
cmpsb
push
sub
adc
dec
push
js
rcl
ficoml
fdivp
inc
jne
aam
adc
pop
mov
push
pop
das
out
nop
pop
jo
xchg
test
mov
lods
fistpll
inc
lcall
add
push
push
dec
xchg
rolb
stc
push
or
or
xor
andl
cmp
out
cltd
loope
mov
imul
mov
cmp
das
lods
sbb
cld
sbb
and
mov
cmp
andl
push
fisttpll
adc
call
das
mov
cmp
jg
ljmp
fld
jae
pop
stos
mov
dec
sub
gs
and
inc
and
mov
pop
addr16
filds
mov
push
loop
mov
mov
cmp
jge
in
dec
xchg
push
call
idivl
imull
cmpsb
and
lahf
repnz
dec
xchg
stc
ja
imul
insb
lea
test
dec
xor
xchg
fnstcw
out
mov
rcrb
div
cmp
or
cli
lea
mov
mov
fwait
jno
mov
mov
sbb
out
push
sbb
insb
cld
enter
out
fisubs
decb
mov
test
adc
sub
bound
jbe
bound
movsl
push
nop
adc
or
xchg
jns
inc
setno
shlb
stc
out
sub
xor
mov
lret
lret
sarb
sub
or
in
mov
loope
mov
xchg
add
mov
mov
nop
xchg
lods
add
dec
aas
inc
lcall
test
mov
test
ss
mov
mov
adc
das
rcr
popf
mov
lgs
cmpl
lea
jbe
and
out
adc
push
and
cmp
pop
sbb
jmp
adc
mov
xchg
pop
or
mov
ss
push
dec
lods
sub
addb
push
mov
rorl
mov
dec
jp
lock
clc
sbb
lahf
xor
repz
mov
mov
mov
addr16
jnp
adc
xchg
mov
jnp
push
or
mov
inc
mul
gs
add
ret
jl
mov
adc
xchg
mov
bound
jmp
rorl
sub
jecxz
jb
in
jmp
aaa
pop
xchg
jns
pop
jmp
arpl
pop
int3
push
cmp
mov
lcall
pop
daa
push
aas
scas
test
xor
cmp
iret
loope
jae
sub
jle
les
mov
mull
popf
push
outsb
nop
lea
push
cmp
insb
sarl
fst
outsb
push
adc
mov
aaa
or
notb
lods
sbb
lret
mov
mov
cli
mov
cmp
ss
sbb
xchg
xchg
shlb
sub
mov
orb
or
out
xchg
sbb
ljmp
test
test
and
cmp
negl
or
push
call
or
or
xor
cmp
stos
sti
addl
jle
or
mov
je
loop
mov
cld
shl
push
loopne
xor
jns
jg
push
mov
pop
ret
andl
mov
lea
sbb
shll
idivb
mov
gs
mov
loopne
movb
dec
xchg
fldcw
fs
ret
cwtl
lds
jg
es
mov
push
aam
loope
cwtl
shl
adc
pop
pop
add
or
iret
es
call
xchg
mov
mov
lods
pop
sub
outsb
and
mov
mov
ret
cltd
shll
sub
mov
outsl
cmp
shlb
jmp
loope
stc
xor
cmpsb
out
sbb
sub
jl
mov
aam
pusha
pop
stc
sbb
xor
mov
aad
dec
mov
aam
lock
adc
push
sbb
jne
mov
in
xor
xor
push
push
xlat
add
adc
pop
fmull
ljmp
mov
icebp
inc
and
mov
pop
sbb
and
and
addr16
cld
xchg
push
fcompl
xchg
adc
inc
dec
in
push
pushf
negb
sub
mov
sbb
mov
leave
imul
push
push
mov
mov
xor
pop
les
dec
mov
xor
cmp
push
or
setge
xchg
cmp
inc
dec
dec
add
push
lods
in
mov
pop
adc
xchg
and
mov
imul
adc
inc
fiaddl
inc
outsl
popa
fildl
push
sub
test
ljmp
mov
mov
adc
xchg
repz
lahf
fildll
das
int3
xor
pop
stc
ss
shrl
fstl
jne
fcomps
dec
aaa
stos
cmpsb
cmp
test
lods
cmp
inc
pop
es
sub
or
mov
movsl
add
and
cs
inc
hlt
idiv
fst
xchg
mov
push
mov
jo
push
xchg
or
xor
or
mov
imul
out
dec
pop
cmp
sti
fdivl
push
clc
jae
sbb
shrb
aaa
inc
mov
orb
fwait
xor
add
jmp
jmp
inc
adc
xchg
pop
aaa
fs
or
jns
cmp
and
into
sbb
js
xlat
daa
sbb
sub
sbb
pop
mov
mov
dec
xchg
out
pop
idiv
sub
sub
bound
lds
cmpsl
jg
cmp
pop
negb
shrl
nop
cmp
push
rcrl
or
cmc
xor
clc
mov
scas
fwait
js
adc
cmp
hlt
jno
data16
std
test
int3
cld
adc
out
sbb
and
xchg
mov
sbb
pop
or
mov
pop
movzbl
jle
fnstsw
ja
aam
fmuls
mov
cmp
mov
call
rolb
adc
xor
pop
dec
cs
aaa
in
fst
packssdw
mov
scas
mov
lods
mov
add
jg
aas
fsubp
inc
pop
xchg
rcrb
iret
mov
mov
lret
scas
stos
and
stos
aam
mov
mov
ja
add
push
jp
jl
ret
rclb
jbe
jmp
ja
jo
daa
mov
xlat
sbb
pop
jb
insl
arpl
push
jp
push
imul
out
jb
lock
cmp
sbb
dec
loop
push
cmp
mov
pop
insl
sub
insl
cmp
jl
sbb
jg
incl
inc
scas
imul
inc
cmpsb
lods
fdivl
hlt
int3
sub
mov
dec
jg
popf
and
das
sub
lcall
movsb
iret
xchg
daa
or
sarl
add
movsb
aaa
cmpsl
insb
jg
into
stc
xor
inc
ja
ljmp
popa
movsb
jbe
and
adc
flds
inc
or
add
rclb
outsb
cwtl
sub
test
loope
sub
out
test
xor
xchg
pop
jmp
inc
sub
nop
inc
inc
loop
je
aad
mov
inc
mov
sbb
repnz
loope
pop
pop
or
xchg
rcrl
sub
aaa
mov
fadds
mov
push
les
cmpsb
mov
jmp
push
or
add
lcall
fldt
cmc
rcl
cwtl
pop
push
mov
jno
aaa
xchg
push
jne
mov
push
push
subb
inc
pop
mov
cmc
lea
fstl
pop
bswap
ljmp
scas
test
in
dec
adc
pop
int
push
cmp
xchg
cmp
push
adc
into
xor
xchg
leave
cltd
pop
movsb
mov
imul
cli
and
pop
mov
lcall
das
push
hlt
cmp
mov
or
cmp
add
movsl
scas
scas
adc
inc
jge
js
mov
xchg
push
sub
and
add
xor
negl
iret
stos
hlt
inc
pusha
lock
pusha
stos
fwait
fistpl
mov
lcall
push
cltd
pop
jnp
dec
fidivl
int
ja
scas
loopne
sahf
and
xchg
lahf
sti
mov
mov
out
dec
lret
pusha
sub
xchg
call
rorb
xchg
jns
xchg
cmp
xlat
and
in
add
inc
mov
insb
pushl
inc
dec
inc
adc
dec
mov
fxch
mov
inc
ljmp
das
out
pop
push
aas
cmc
test
icebp
cmp
fisubl
mov
sbb
mov
or
cmpsl
fs
aam
xor
jb
pop
mov
and
mov
ds
jno
jo
fs
mov
mov
inc
pop
pop
ds
mov
arpl
lock
adc
clc
adc
imulb
cmp
pop
fcomps
je
cmp
pusha
nop
dec
aam
mov
dec
mov
fnstsw
jl
push
outsl
push
or
loop
mov
xchg
scas
rorl
xchg
xlat
pop
adc
lock
es
or
inc
rcr
adc
jns
xchg
push
cmp
add
push
xlat
xor
in
jno
cli
fildl
je
lods
inc
gs
push
daa
mov
jge
enter
xchg
add
out
fsubp
mov
mov
dec
repz
rorl
jb
jne
sbb
cld
stos
test
mov
push
and
inc
clc
jnp
mov
adcl
mov
push
bound
dec
xchg
push
fldlg2
out
aas
sbbl
test
outsl
test
jge
xchg
jnp
mov
pop
or
jle
pushf
popa
inc
in
mov
or
stos
out
jb,pt
pop
iret
xor
cmpsb
test
jmp
enter
cs
cltd
lahf
pusha
pop
pop
or
add
push
xchg
shrl
cs
insb
jp
and
pusha
fsubrl
dec
ja
dec
sarb
pop
push
cmc
add
and
or
movsl
pop
inc
into
cld
pop
leave
pop
shlb
pushf
into
leave
hlt
xchg
sub
pop
gs
sbb
stos
fimuls
sbb
cmp
popf
pop
rcrb
rclb
nop
pop
mov
pop
jmp
js
pop
les
data16
mov
lret
mov
sub
lea
and
or
roll
orl
int
or
fidivrl
add
push
rcrl
adc
scas
adc
pusha
repz
or
jmp
xor
mov
pop
nop
xchg
daa
cmp
mov
ret
lock
frstor
adc
push
adc
out
imul
ds
jbe
push
or
fstpl
ds
sbb
cwtl
add
sbb
ss
leave
mov
mov
add
stos
jp
test
mov
call
add
cmp
lcall
and
jo
dec
aam
insl
in
jg
scas
xchg
push
cmp
arpl
pop
lods
scas
stc
test
ret
add
call
loope
leave
or
jbe
leave
cmp
mov
into
xlat
pop
adc
mov
mov
jno
stos
add
mov
daa
push
subl
dec
pop
push
push
lahf
sarl
lahf
push
rcrl
in
std
dec
push
rcll
jl
ds
pusha
mov
push
dec
or
dec
in
xlat
push
dec
jmp
movsl
mov
negb
in
js
sub
xor
popa
jecxz
into
dec
xorl
gs
mov
adc
pop
pop
mull
xchg
inc
andb
lcall
mov
cmp
iret
decb
sbb
push
cwtd
xchg
imulb
mov
mov
jae
cmp
roll
or
jmp
jns
cmpsl
mov
ja
das
cs
pop
leave
cwtl
ljmp
je
mov
sub
lcall
jnp
sbb
jmp
loop
mov
dec
mov
xchg
push
and
mov
insb
and
and
mov
sbb
or
mov
dec
xchg
aad
in
fistl
mov
mov
mov
cmp
in
pop
pop
mov
cld
cmp
pop
pop
jne
mov
jns
mov
push
jmp
add
mov
rcr
mov
rcl
mov
pop
lret
xchg
mov
adc
push
insb
not
pop
push
in
xchg
rorl
imul
pusha
add
jno
in
adc
mov
ret
sub
sub
insl
scas
pop
into
adc
sbb
sahf
xor
mov
lds
fsubrs
dec
mov
push
cmpsl
xor
push
inc
push
mov
add
xchg
or
clc
pop
aam
xor
test
sbb
loop
cmp
push
outsl
out
xor
lahf
or
das
in
and
jb
out
lock
mov
jbe
mov
jne
ds
je
faddl
cmpsl
cmp
jb
cmp
hlt
mov
dec
loopne
movsb
movsb
in
ljmp
jns
push
cmp
pushf
dec
cli
and
popl
lds
mov
mov
inc
push
fsubrl
cmp
push
arpl
mov
aad
inc
test
insb
loope
push
call
int3
sub
xchg
je
das
mov
or
test
insl
lea
and
mov
jbe
and
xchg
rcrl
arpl
test
or
xchg
ret
inc
sbb
adc
jae
jecxz
push
mov
insl
fucom
fwait
xchg
push
jno
stos
jns
cs
cmc
push
xchg
and
mov
sahf
sub
push
and
mov
and
dec
mov
cld
nop
cld
or
xor
div
outsb
or
test
cmp
mov
mov
fnstenv
cld
fld
out
cmpsb
in
ja
xchg
int
ja
mov
xchg
xchg
scas
test
adc
into
jns
jle
insl
sub
cwtl
movsl
mov
push
jno
sub
mov
daa
xchg
clc
enter
shrb
push
shrb
sub
popa
je
bound
fucom
sbb
aas
subb
mov
or
addr16
test
int
add
fnstenv
pop
pushf
add
rolb
sbb
dec
and
ret
push
mov
jne
lcall
out
subl
push
jo
lods
clc
xor
xor
rcll
mov
shlb
jne
inc
cld
mov
pop
outsl
je
add
ja
mov
clc
into
movsb
lea
mov
enter
sarl
in
fmull
test
cmp
push
sbb
xchg
clc
adc
mov
hlt
mov
es
cmp
sbb
jb
pop
sti
into
inc
sub
sbbl
sbb
mov
divb
sbb
cmp
das
aas
jp
pop
sti
xchg
es
xor
inc
mov
fldl
sar
lahf
ds
int
cmp
push
popa
dec
lods
pop
test
loope
and
push
mov
adc
jle
nop
ret
and
fxch
mov
fistps
out
out
xor
inc
push
xchg
mov
mov
mov
call
pop
mov
and
fists
lret
bound
cmp
pop
ds
clc
mov
out
adc
xchg
xchg
mov
add
push
popf
xchg
mov
mov
mov
or
or
data16
ja
fsubl
mov
adc
mov
cmpsb
cld
mov
xor
pop
das
jle
mov
enter
cs
adc
push
or
xor
bound
dec
push
insb
lods
push
daa
enter
pop
into
sub
xlat
pop
insb
mov
pop
mov
cltd
scas
rolb
shrl
movsb
and
sub
and
gs
jecxz
mov
gs
xchg
or
test
cmp
inc
jmp
mov
sub
daa
idivb
inc
addl
add
lods
xor
incb
mov
xchg
out
lret
out
hlt
ds
rorl
rol
loope
fadds
out
mov
into
into
pop
jl
aas
sub
and
dec
loope
pop
scas
mov
inc
enter
insb
inc
adc
clc
hlt
mov
inc
mov
mov
test
jb
dec
adc
call
cmpsb
inc
inc
cld
jbe
adc
les
mov
push
mov
dec
jg
inc
cmp
lods
mov
insl
clc
push
data16
rcrl
or
out
mov
push
in
inc
sbb
push
pusha
and
or
fcoml
jp
fistl
scas
rolb
cwtl
mov
repz
inc
mov
fsubr
pop
mov
loop
dec
xchg
dec
mov
jg
adc
aad
mov
mov
enter
mull
es
and
sub
adc
arpl
nop
sub
cmc
test
xchg
mov
sbb
sub
xor
jbe
add
imul
fisubrs
inc
push
mov
mov
add
xor
in
outsl
jp
jns
fldenv
aad
xor
popf
xor
test
gs
sbb
repnz
enter
jns
adcb
mov
sbb
dec
xor
rolb
pusha
sbb
mov
and
xor
enter
mov
stos
mov
nop
adc
lds
enter
lods
inc
cmp
cltd
cmpsl
ficomps
fcomps
stos
hlt
pusha
xor
pop
jge
xor
iret
push
es
sub
lret
adc
mov
ret
xor
push
and
hlt
ret
mov
or
mov
xor
cmc
call
repnz
sahf
sbb
sub
sar
lcall
std
jns
pop
and
sbb
out
mov
call
out
hlt
les
cmpsl
bnd
incb
scas
pop
push
stc
mov
dec
mov
int3
cltd
movsb
scas
xor
push
in
xlat
ds
pushf
jge
push
das
cwtl
xchg
xlat
movsbl
and
das
or
hlt
sbb
in
es
sub
push
mov
sbb
jle
add
add
test
ljmp
inc
outsl
leave
jns
popw
xchg
out
and
lods
push
cmc
mov
test
nop
fsts
mov
inc
jne
xor
ds
ret
push
test
sti
movsb
outsl
lds
arpl
cmpsb
es
adc
inc
cwtl
sbb
or
pushf
jg
das
xor
in
dec
and
fs
sbb
jno
and
shl
xor
gs
pushl
inc
adc
jmp
std
dec
or
sbb
insb
jbe
push
sbb
pusha
lock
pop
movsb
not
int3
xchg
scas
xor
xchg
shlb
jecxz
mov
pusha
push
sub
fists
xlat
mov
cld
stos
add
pop
inc
gs
ds
xor
mov
rcrl
movsl
or
push
sub
mull
inc
push
pop
movsl
stos
mov
cmp
mov
push
or
and
push
daa
sub
in
in
adc
sbb
fs
sbb
repz
cwtl
jae
cmpsl
cmp
in
in
pusha
mov
mov
dec
sub
mov
or
dec
int
adc
lahf
sarb
notl
mov
in
xor
push
or
xchg
sbb
fs
add
lods
mov
jle
fs
lcall
stos
mov
sbb
out
in
sub
cld
cmp
xchg
mov
in
push
aaa
mov
jno
mov
fucomip
mov
push
jo
daa
incl
int3
sub
ss
jge
lret
inc
xor
scas
cmp
imul
jg
lret
std
inc
push
sub
mov
test
loope,pn
jp
xor
adc
mov
xchg
ret
dec
ljmp
das
xchg
mov
aad
jno
daa
adc
andb
inc
sbb
or
push
cmc
jo
orb
mov
ja
and
mov
fdivs
daa
jnp
jns
sub
ja
sbb
and
popf
push
add
jno
push
xchg
std
pop
mov
mov
shll
pop
pop
push
enter
nop
imul
dec
xchg
js
inc
dec
dec
fsubs
jge
xor
add
cmp
aas
mov
js
dec
push
jae
dec
test
jge
jns
mov
cli
sbb
insb
enter
dec
dec
and
push
jg
pop
xorl
outsb
ja
ja
adc
mov
test
out
ja
fwait
outsl
inc
mov
cli
sub
add
mov
xchg
dec
addr16
fnstsw
dec
mov
adc
cmp
mov
mov
icebp
pusha
daa
mov
jno
and
xchg
aad
lret
shl
cmp
out
sti
jns
mov
orb
mov
negb
in
pop
pop
cmp
insl
and
cmp
and
rorl
test
popf
pop
inc
jle
lock
cmc
or
xchg
mov
ds
inc
jg
ss
add
add
lcall
xchg
cmpsb
inc
and
gs
test
xchg
faddl
mov
lcall
lahf
adc
jecxz
cmp
rcll
jb
sbb
shrl
or
sub
xchg
xor
add
sub
and
sbbb
gs
gs
pusha
and
mov
jge
sbb
fxch
mov
push
mov
pop
or
out
mov
fstps
es
sbb
rclb
in
test
movsb
pop
sbb
adc
inc
mov
sti
inc
mov
mov
shlb
cmpsl
jl
xlat
rcll
xchg
inc
sti
cltd
pop
lds
jo
xlat
push
iret
cmp
or
or
mov
out
bsf
inc
scas
inc
adc
addb
pop
pop
out
pop
pop
adc
lds
sbb
xchg
das
mov
loope
outsl
xchg
sbb
adc
adc
or
imul
sbb
dec
ljmp
fcomi
aad
test
neg
xor
mov
pop
mov
outsl
enter
dec
jno
je
inc
inc
xchg
nop
add
adc
and
mov
pop
in
add
inc
sti
add
push
js
dec
dec
lret
icebp
mov
pop
mov
xchg
pop
xchg
dec
fsts
pop
sub
popw
push
push
jecxz
inc
adc
int3
cmpsb
xor
lock
fucom
pop
xchg
fcmovne
push
insl
mov
push
mov
cmpsl
loope
mov
adc
add
in
ds
or
cld
jns
sub
cmc
sahf
push
nop
jle
sub
cmp
es
sbb
jecxz
sahf
cli
push
sbb
mov
out
mov
lds
xchg
mov
ljmp
sub
orb
jno
enter
outsl
dec
jg
inc
test
add
cs
inc
xchg
fisttpll
fstps
inc
mov
scas
xchg
lret
jg
lahf
in
or
xchg
pop
in
xor
cmc
adc
xchg
les
sub
sbb
push
add
arpl
dec
call
rcr
sub
inc
and
jge
push
xchg
pop
add
mov
int3
rorl
add
sub
popa
mov
std
sbb
flds
out
sbbl
push
inc
add
push
pop
mov
call
int3
mov
xchg
add
mov
popf
outsb
sti
mov
fistpl
cmc
call
mov
fidivl
dec
push
out
adc
xchg
mov
daa
fnstcw
or
mov
and
xchg
in
pop
push
pop
rorl
pop
enter
les
adc
stos
jl
icebp
test
int
test
sbb
inc
xor
jmp
jns
xchg
sub
mov
mov
daa
inc
mov
lock
mov
dec
sbb
jp
imul
jp
add
mov
imul
fsub
inc
scas
out
sub
dec
or
xchg
sbb
call
xor
mov
mov
jge
lahf
repnz
pop
aas
dec
out
push
mov
out
andl
outsl
mov
xor
mov
or
push
xlat
loopne
aam
leave
adc
pop
push
ds
or
xlat
cmp
dec
subb
xchg
scas
jl
mov
xchg
test
xchg
ret
repnz
adc
iret
pop
xchg
jno
scas
mov
and
lcall
inc
adc
pop
rcrl
add
imul
xor
out
loopne
or
sbb
push
into
dec
pushf
pop
shr
movsb
mov
popf
push
rolb
insb
mov
sti
movsl
hlt
lret
outsl
iret
dec
cmp
adc
adc
addb
pop
mov
out
cli
pop
hlt
sbb
inc
adc
in
fs
out
adc
imul
imul
jle
cmpb
xchg
iret
adc
hlt
ror
lea
cmp
ljmp
loopne
pop
jg
ljmp
test
into
mov
jg
add
adc
gs
cld
in
lea
ret
push
subb
movsl
inc
lods
orb
xchg
mov
sub
shl
in
je
rorl
loope
shll
cmp
dec
test
fldenv
cltd
cltd
pop
xchg
fcmovu
lea
jno
repz
xchg
shrb
sbb
std
pop
movsl
enter
mov
jp
test
lds
rolb
mov
lahf
pop
loope
jp
jae
loope
or
cwtl
jmp
das
or
mov
jl
jno
or
in
out
push
push
int
insb
fldcw
mov
out
lahf
leave
add
popf
fnstenv
mov
loope
in
test
mov
ja
out
stos
cld
ss
dec
call
lret
xor
push
leave
std
sahf
jecxz
or
mov
add
pop
pop
popa
inc
and
fwait
pop
pop
sarl
cs
push
inc
jecxz
sub
popa
notl
test
out
dec
adc
xchg
ror
xorl
and
pop
outsl
cmp
clc
or
mov
and
pushf
mov
xor
cli
repnz
je
and
fmull
lret
ret
bound
or
dec
fwait
push
ficoms
aad
in
xchg
pop
mov
pop
in
inc
push
cltd
imul
push
out
test
pop
cmp
shrb
ds
inc
mov
ret
mov
repz
xlat
mov
xchg
std
cmp
aaa
inc
push
add
sub
fsubs
outsb
add
or
cmp
dec
mov
dec
test
sub
test
pop
or
sub
xchg
inc
jmp
ret
ljmp
dec
xchg
orl
mov
jp
inc
sbb
jge
and
movsb
dec
inc
cmp
xchg
push
lock
mov
dec
sub
pop
je
xchg
push
xchg
mov
add
sub
mov
and
pop
and
out
xchg
nop
push
sub
mov
mov
push
fld
pop
lea
cmpsl
inc
pop
push
sti
cmp
mov
mov
push
dec
xor
xor
sub
mov
js
sbb
cmp
or
pop
flds
xor
inc
mov
lcall
jle
inc
pop
outsl
test
jg
mov
adc
add
sbb
push
sti
mov
pop
dec
jecxz
fs
rorl
mull
push
addr16
inc
movb
js
sbb
stos
xor
addr16
xor
out
inc
push
or
sub
ss
push
jecxz
jg
pop
sbb
jno
inc
sahf
mov
int
lock
xchg
mov
lahf
add
sub
jge
mov
outsb
aam
stos
movzwl
and
mov
push
cmp
mov
cmpsb
xor
mov
mov
fxch
roll
int
icebp
sub
popf
fwait
and
adc
jno
das
fidivl
stos
int3
push
pop
mov
fldcw
nop
aaa
in
xchg
ret
je
xchg
pop
push
mov
lret
outsl
aas
xchg
int3
jmp
cmpsl
sahf
or
and
out
in
adc
int3
add
dec
add
jno
ja
xchg
repnz
into
lods
and
jg
leave
add
test
popa
cmpsb
in
jno
push
das
mov
loopne
pop
push
je
inc
mov
je
add
push
andb
cmp
add
mov
inc
jmp
mov
mov
sahf
or
cmc
stos
insb
mov
ja
xchg
addr16
rorb
push
pop
fucomp
mov
sbb
jl
sub
sbb
shrb
scas
mov
cmp
mov
dec
ds
add
popa
sbb
lods
mov
frstor
test
xchg
jb
jmp
out
addr16
jmp
dec
rorl
jmp
in
cmpsb
lods
mov
jb
test
pop
push
lods
nop
test
cmpsl
mov
jmp
in
loop
pusha
sbb
mov
daa
xor
sahf
fs
pusha
cltd
sbb
dec
dec
scas
mov
jnp
adc
lds
mov
mov
daa
pop
ljmp
adc
lcall
xchg
subb
and
dec
mov
stc
jb
push
sub
lcall
lcall
loop
mov
clc
sub
insb
jnp
xor
rol
mov
stc
mov
aad
loop
dec
fsts
or
add
sub
imul
cli
mov
int3
pop
shlb
movsb
popf
mov
js
sbb
fdivrl
or
jnp
imul
test
mov
pusha
mov
inc
xchg
cmp
cmp
repz
xor
mov
lea
cs
test
in
mov
andl
push
in
ret
fisubl
sti
add
dec
cwtl
xchg
and
jecxz
sub
sub
mov
popa
mov
bound
mov
popa
push
mov
mov
loope
outsb
push
and
and
fistl
inc
repz
push
loopne
andb
xchg
sub
jno
and
mov
js
popa
pop
mov
adc
pop
sub
or
jns
dec
sahf
adc
fsubr
inc
xchg
fwait
pop
xor
jb
xchg
out
xchg
cmpl
or
jae
xchg
cmp
adc
mov
pop
daa
aam
sbb
adc
lahf
mov
js
aam
add
adc
jmp
cs
lods
mov
push
fidivl
xchg
dec
xchg
mov
push
xor
scas
cmpsb
or
cmp
and
popa
cmp
inc
dec
lds
sarb
inc
movb
jo
xor
mov
cs
mov
xchg
push
lret
inc
jg
cmpsb
xor
fwait
int
mov
mov
imul
jbe
lret
sbbl
mov
loope
sub
adc
xlat
call
lods
push
rcrb
and
or
dec
hlt
push
repnz
or
repnz
mov
out
adc
pop
dec
adc
push
shrl
push
rcrb
repnz
test
adc
aaa
jno
ret
xor
pop
jp
outsb
xchg
push
dec
testb
les
rep
inc
pop
xchg
mov
lods
jecxz
jne
les
mov
jecxz
jno
subb
in
cmpl
fldenv
mov
and
jl
test
cmp
movsl
movsb
mov
jae
sub
mov
cltd
add
push
dec
mov
je
mov
sbb
sbb
add
into
cltd
mov
pop
fisttpl
jecxz
ljmp
dec
sbb
xchg
mov
push
ret
leave
dec
mov
mov
xlat
push
mov
imul
lods
insb
inc
addr16
loopne
cmpsl
scas
pop
dec
sub
and
push
pop
inc
test
sub
mov
pop
ss
jmp
movsl
pusha
jnp
mov
je
cld
test
leave
sub
xchg
and
ja
lods
mov
and
dec
pop
mov
xchg
sub
sub
add
xchg
adc
xchg
cli
cmp
cmp
rorb
outsl
fnstenv
pop
inc
aaa
and
mov
loopne
les
jecxz
xor
mov
dec
jnp
mov
jbe
jnp
std
cli
mov
push
mov
push
pop
mov
scas
pop
pop
mov
ds
and
popf
sub
mov
push
cs
cmp
nop
jae
int
fs
cmp
mov
adc
jle
in
fsubs
jle
inc
xchg
push
jae
out
and
rol
hlt
fwait
push
sub
movsl
sarb
sbb
out
std
pushf
push
stos
mov
push
mov
and
ret
mov
jno
aaa
sub
sbb
or
mov
shl
mov
and
sbb
sarb
mov
sub
cmpsl
or
lods
push
add
push
std
aad
mov
cwtl
jno
clc
lcall
rclb
xor
sub
aas
outsb
mov
test
mov
sbb
aas
out
pop
push
repnz
push
cmp
rorl
jnp
sarb
out
inc
int
lea
jne
cmp
mulb
xor
mov
nop
push
lds
rol
xorl
mov
nop
aas
pop
out
cltd
movsb
rorb
cs
mov
popf
inc
fidivrl
and
adc
dec
mov
and
adc
push
fst
cli
cwtl
sarl
pushf
push
lahf
mov
jmp
call
sub
and
cmp
and
dec
imul
jns
mov
fcmovb
mov
mov
shll
pop
mov
push
jno
lret
jae
setae
push
imul
imul
push
roll
pop
cmc
jle
mov
jmp
pop
sub
xchg
outsb
popa
mov
dec
mov
jle
lea
pop
stos
sub
push
dec
jmp
cmpsb
call
sbb
push
aaa
movsb
dec
and
pop
ds
lds
push
mov
sti
jnp
hlt
pop
push
xlat
inc
or
mov
aaa
popa
mov
and
incb
xor
push
sahf
scas
mov
pushf
les
stos
mov
dec
out
ret
sbb
push
imul
push
xor
dec
xlat
and
xlat
or
cwtl
addr16
jae
lahf
ss
add
pop
and
jbe
jno
das
mov
jo
loopne
xchg
push
mov
mov
cltd
pop
iret
aaa
push
cmp
inc
idivb
repnz
xor
movsl
sub
sbb
push
xchg
pop
mov
addl
lahf
dec
xchg
icebp
jb
jl
ljmp
hlt
ja
in
jp
push
xchg
and
push
aas
cs
fidivrl
scas
repz
shll
pop
cltd
lret
ret
pop
mov
sub
adc
cmp
cmp
inc
push
jl
test
enter
sub
sub
jns
imul
cmpsl
inc
mov
mov
jp
cli
sub
jge,pt
fwait
inc
mull
and
insb
dec
repnz
mov
popa
and
dec
fldcw
outsb
push
xchg
das
cmpsl
orb
pop
mov
jae
and
pop
js
jns
mov
idivl
sti
jge
and
push
inc
imulb
lahf
mov
mov
pop
inc
fldt
adc
in
icebp
xchg
es
shlb
xchg
mov
cwtl
aaa
jmp
cwtl
jnp
ficoms
add
mov
out
dec
movsb
clc
fs
enter
sbb
cwtl
inc
movsb
arpl
dec
mov
mov
sub
or
stc
mov
push
cwtl
loope
sub
push
or
arpl
xor
in
cltd
sbb
jecxz
mov
add
push
xchg
cmpsb
push
pop
pop
ficoms
fisubrs
mov
ret
mov
dec
pusha
call
dec
and
in
stos
cmp
sahf
jp
dec
inc
inc
mov
inc
test
test
xor
xchg
fimuls
and
adc
adc
addr16
xor
and
cmp
stos
aas
inc
cmp
pop
arpl
xchg
fistl
and
vmread
inc
or
xchg
xchg
test
insb
roll
pop
mov
pushf
push
roll
mov
rol
test
rcrl
mov
add
cmp
push
lods
cltd
sub
jne
lods
aam
xchg
mov
xor
test
push
add
inc
mull
ljmp
cmp
lret
in
push
lret
shll
and
cmp
and
inc
addr16
scas
jbe
pop
xchg
or
push
xchg
inc
push
cmp
push
adc
repz
pushf
sub
call
adc
flds
mov
pop
ja
jnp
mov
lret
in
cmp
jecxz
popf
mov
rcll
jp
bound
dec
push
or
dec
cmp
pop
mov
xor
mov
jp
and
cltd
lret
ret
mov
mov
xlat
adc
sub
cwtl
cmpsl
cmpsl
xor
leave
daa
sar
dec
push
jbe
pop
fsub
jle
lcall
mov
dec
xchg
inc
dec
xor
icebp
jg
sbb
rorb
mov
fwait
jbe
icebp
or
sub
ljmp
hlt
pop
mov
cltd
xchg
and
xchg
mov
insb
add
cld
push
add
xor
and
mov
cmp
jle
ret
dec
xchg
int
in
mov
xor
xchg
scas
lds
fisubl
dec
loop
pop
xor
sub
or
in
imul
cmp
mov
push
bound
or
xchg
out
adc
jp
fistl
pop
push
outsb
fidivrl
mov
push
pop
icebp
icebp
lods
fidivs
mov
data16
dec
lods
iret
xchg
jmp
cs
jg
cmp
imul
push
jno
mov
jmp
push
les
cltd
xor
cld
popa
imul
fnsave
mov
jmp
cmpl
dec
roll
aas
out
xchg
sub
and
push
and
adc
inc
dec
sub
cli
cltd
neg
lret
dec
imul
lods
fwait
inc
jne
push
sbb
pop
jno
adc
push
jne
insb
jo
cmpsl
pusha
mov
xchg
jp
mov
or
sbb
push
les
lds
and
inc
and
sub
bound
add
out
and
xchg
rolb
shll
mov
mov
jnp
adc
push
shll
nop
std
out
out
repz
jp
push
inc
subb
jle
mulb
dec
lret
sbb
mov
in
xchg
push
test
sub
sbb
fcmovb
lds
insl
or
stos
jp
push
xchg
cmp
push
jae
scas
or
or
aad
jle
or
inc
push
scas
sahf
dec
outsl
xor
mov
fcmovnu
filds
bsr
inc
mov
aam
fwait
test
in
ds
mov
jae
sbb
pop
testb
mov
icebp
xor
pop
cwtl
jb
push
lcall
push
lea
xlat
fnsave
movsl
push
les
add
adc
mov
filds
inc
jg
and
push
push
je
mov
gs
add
push
pop
insb
and
nop
push
inc
testl
dec
adc
roll
popf
ds
loop
pop
jnp
call
xlat
movsb
pop
sbb
mov
push
fdivrs
lret
jnp
daa
and
pop
sub
push
dec
dec
psubusw
rcr
stos
jne
dec
jle
pop
sbb
cmpsl
cmp
out
and
mov
add
cltd
test
dec
xchg
or
mov
in
jne
outsl
sti
sahf
repz
mov
aas
gs
pop
lahf
and
pusha
stos
cmp
fildll
out
hlt
sbb
je
mov
push
and
or
ret
in
sbb
mov
sar
roll
cmp
sbb
aam
pop
xchg
sbb
and
pop
xchg
popf
push
fs
cld
inc
mov
sub
mov
xor
idivl
push
push
jnp
mov
xchg
sub
ds
dec
pop
mov
pop
mov
or
ja
pop
outsl
pop
les
testb
aam
stos
adc
cmovp
pop
add
add
aad
mov
or
pop
repnz
jg
mov
jae
lea
inc
lds
in
mov
gs
sbb
dec
fisubrl
lds
bound
xchg
sub
xchg
jns
aaa
xlat
int
add
mov
orb
cmp
sahf
mov
jl
add
adc
das
mov
add
inc
jmp
cld
loop
adc
xchg
aad
mov
fs
mov
fsubl
pop
loop
int
xchg
dec
in
mov
clc
adc
ds
add
ljmp
jg
std
jl
dec
nop
movb
adc
mov
mov
dec
jge
cmpsb
rorl
shr
in
jg
jmp
rorl
daa
in
rcrb
adc
aam
mov
xlat
adc
push
not
sbb
data16
test
repz
jge
call
add
pop
xchg
xchg
out
aam
jae
push
lods
fimuls
nop
mov
or
lea
jb
test
adc
mov
cmpsb
and
mov
lds
push
sub
adc
clc
mov
push
inc
out
and
fadds
add
mov
scas
push
push
push
xor
or
xchg
push
or
jns
mov
aad
jg
shll
shll
cwtl
test
ret
in
cmp
inc
stc
aam
mov
sbb
cmp
lret
int3
jp
inc
pop
inc
mov
cmp
cli
popa
push
xchg
mov
and
inc
test
bound
lds
dec
xor
xor
repz
cmp
aas
movsb
insl
xchg
sbb
mov
xlat
mov
jmp
sti
xor
and
jbe
pop
pop
inc
cmpsl
mov
pop
ja
repz
pop
out
jo
test
shl
adc
ret
push
outsb
inc
data16
mov
mov
ret
and
int
out
add
pusha
jbe,pn
xor
in
popf
or
pop
test
add
push
pop
sub
iret
cmp
shrb
pop
xchg
cld
inc
hlt
push
sbb
fstl
pop
sbb
test
xor
cwtl
mov
add
adc
daa
jle
rcll
mov
stos
or
ljmp
add
cwtl
loope
sbb
adc
mov
rclb
ja
mov
int3
sbb
fimuls
inc
aaa
jae
mov
jmp
stos
xchg
mov
icebp
outsl
cmc
and
in
sbb
xchg
test
sbb
in
lea
in
jecxz
fucomip
mov
dec
or
loope
jle
dec
push
fnstsw
mov
or
insb
mov
mov
adc
insl
fwait
mov
xor
xor
popa
pop
jecxz
inc
test
adc
xor
push
cs
sub
xchg
inc
fisubrs
mov
push
fstps
jg
xor
insl
rolb
adc
gs
cmp
fisubl
les
jb
enter
sub
dec
leave
imul
mov
out
jne
dec
test
out
dec
cmp
jge
sub
jnp
mov
vrsqrtss
faddl
cmpsl
out
or
push
mov
pop
addb
rclb
in
js
xor
rol
adc
loop
and
pop
dec
cmc
push
mov
sbb
xchg
test
push
inc
fsubr
add
fmull
not
addr16
pop
pop
cltd
add
adc
scas
sbb
push
dec
mov
push
cli
jo
stos
in
imull
xor
or
scas
cmp
ds
fsubs
cs
sub
into
loope
popf
pop
add
in
push
ja
imul
dec
cmpsl
push
inc
sub
inc
jle
sti
out
push
jl
outsb
jbe
xchg
add
fwait
mov
jg
adc
in
sbb
jmp
xor
das
dec
sbb
push
sub
sub
rcrl
or
movsl
cmpsb
fcomp
and
pop
sbb
sbb
lock
movsl
rorb
jp
sarl
lock
sbb
arpl
in
and
lcall
xchg
add
mov
xor
vmovaps
cmp
mov
mov
and
lret
cmpsb
mov
cwtl
scas
pop
inc
inc
jb
mov
ljmp
xchg
js
xchg
cmpsl
scas
fistl
mov
cmp
xor
popf
sub
and
inc
call
dec
pause
xor
pushl
mov
rorb
pop
xchg
je
dec
mov
push
mov
jg
mov
adc
jmp
inc
mov
sbb
jecxz
addr16
dec
xchg
aas
clc
das
xor
or
cld
sbb
mov
rolb
lds
jae
jae
fsubl
cltd
jnp
and
jle
sub
arpl
pop
push
stos
negb
inc
add
lret
jo
pushl
fsubrs
jns
sub
aad
cwtl
xchg
mov
popa
shrl
adc
add
push
insb
out
cli
xchg
mov
es
and
sub
ljmp
adc
aaa
ds
xchg
testl
sub
inc
xchg
mov
cmp
mov
cmp
sti
adc
push
cmc
sub
and
pop
imul
mov
inc
gs
sbb
out
push
addr16
push
subl
push
das
and
test
xor
fiaddl
xchg
and
int
mov
xor
pop
cmc
cmp
ret
dec
dec
loop
pop
xchg
jbe
push
mov
addr16
sbb
repz
insl
aas
and
xor
pop
pushf
inc
cmp
mov
jbe
scas
shlb
aad
int
adc
hlt
or
mov
mov
inc
mov
enter
cmp
pop
mov
mov
jl
sub
int
lea
out
movsb
repz
mov
icebp
mov
cmp
lret
xchg
mov
testl
jbe
add
cld
pop
sbb
xor
push
fbld
stc
aas
scas
sub
ljmp
mov
cs
adc
push
rcrl
or
out
push
cli
fnstcw
loope
or
es
and
insb
inc
pop
sub
push
and
cmc
aad
adc
adc
std
sbb
jae
ds
mov
ds
aad
mov
lock
jne
insb
outsl
jno
jmp
sahf
repz
push
mov
mov
mov
dec
jne
cmp
sbb
sub
or
shrl
mov
iret
xchg
dec
add
incb
stos
aad
add
adc
push
push
mov
pop
cmpsb
cmp
arpl
adc
aad
sbb
xchg
pop
inc
mov
jns
jbe
push
cs
inc
sub
sbbb
sti
dec
popa
repnz
inc
sbb
dec
shll
push
fiadds
loope
inc
jp
fmuls
xchg
aaa
fdivl
adc
stos
or
stos
movsl
rorl
orb
das
push
pop
cmp
xchg
xor
push
jns
cmp
sar
xor
inc
mov
push
rclb
fwait
xor
gs
pop
jmp
int
sbb
cmp
aas
push
out
lcall
popf
cld
add
xchg
inc
addb
pop
pop
dec
adc
xor
xor
xor
pop
insb
and
std
sbb
cmpsb
mov
sbb
and
movsl
sub
stc
std
mov
in
fwait
loop
ja
pop
jnp
xor
lcall
faddp
cwtl
outsb
fistpll
cmpsl
les
xlat
dec
push
arpl
push
jp
push
push
mov
push
shr
fwait
mov
jns
fwait
dec
shll
mov
popf
repnz
out
jp
mov
xchg
pop
or
xor
or
ja
jmp
inc
cs
inc
cmpsl
lret
inc
and
das
repnz
xchg
jmp
outsb
sbb
push
xor
ljmp
add
cmpsb
out
xor
adc
and
mov
or
fdivrs
add
xchg
push
xor
and
scas
mov
cmp
movsl
pop
dec
mov
dec
arpl
stos
or
sti
call
pop
cmc
xchg
pop
iret
sub
and
xrelease
mov
pop
add
cmc
push
sbb
popf
bswap
subl
fwait
push
mov
xor
pop
lods
mov
lods
sbb
xor
aad
lea
stos
jbe
push
daa
add
cmpsl
push
inc
je
imul
sbb
std
cwtl
dec
mov
loop
movsl
sub
in
clc
push
mov
sub
mov
dec
adc
inc
xor
rcr
aad
mov
cmc
lods
jae
xchg
iret
lcall
pop
in
push
sbb
dec
mov
mov
cmpsb
mov
sub
jl
pop
adc
or
jns
lea
sbb
lods
mov
outsl
pop
dec
hlt
mov
js
ret
jl
cmpsl
dec
ficompl
fnstenv
adc
in
imul
dec
les
xchg
mulb
cmpsl
clc
sahf
add
adc
clc
out
or
cmp
insl
lret
sub
sahf
lcall
sbbb
movsb
inc
sbb
rorb
loopne
lcall
or
out
xor
sub
or
sub
jmp
sbb
call
test
sahf
add
les
jne
repnz
lret
jmp
leave
xor
stc
data16
fisubrl
out
xchg
jne
xchg
pop
push
and
jo
sbb
dec
divb
rcrl
cmp
lret
dec
cmpb
push
mov
aas
push
addb
das
xchg
movsb
int3
push
mov
outsb
jnp
sbbl
leave
xchg
pop
pop
mov
fnsave
pop
pop
pushf
sahf
stos
out
fcoms
aam
popa
getsec
addr16
mov
xchg
pop
push
sbb
test
sbbl
dec
cwtl
cmpsb
jp
cmpsb
in
mov
fidivs
mov
inc
sub
lock
int
lret
mov
push
mov
pop
outsl
dec
inc
push
jnp
hlt
bound
jmp
dec
in
mov
mov
mov
clc
std
pushf
lods
inc
mov
mov
xchg
or
push
push
mov
es
or
in
ret
jnp
ret
scas
push
je
sub
adc
dec
xor
lahf
repz
lcall
addl
cmp
sub
xchg
repnz
and
mov
mov
insl
sub
mov
in
fstps
pop
int
cltd
andb
lret
mov
sbb
loop
push
icebp
xor
and
or
add
lods
dec
cmp
in
gs
movsb
mov
in
cwtl
inc
popf
adc
sbb
test
movsb
lods
movsb
in
jae
dec
js
dec
mov
mov
fs
and
jl
inc
aad
pop
imul
pushf
aam
sahf
sub
pusha
or
push
xchg
cmpsl
in
jecxz
lods
loope
lods
and
dec
mov
test
inc
xchg
mov
dec
mov
out
and
cld
mov
stos
fiadds
xsaveopt
pop
inc
xchg
cwtl
pushf
push
pop
cltd
mov
lods
jbe
das
dec
xor
in
rcrl
test
shr
dec
test
inc
xor
jg
push
jbe
sub
test
mov
push
fsubs
lcall
out
sub
mov
es
sub
jne
fdivr
vcvttps2dq
pushf
xchg
dec
pop
xor
xor
xchg
jae
ficoms
mov
aas
shl
loopne
cmp
jg
xor
loop
sub
mov
mov
and
cmp
test
dec
pop
pop
mov
push
mov
std
jnp
call
popa
adc
popa
rcll
faddl
fs
cltd
sbb
mov
stos
xchg
mov
mov
mov
js
testb
inc
scas
andb
movsb
sar
and
ret
inc
mov
stos
push
jne
arpl
sahf
mov
out
pop
mov
nop
mov
sub
shlb
outsb
je
jg
inc
jg
loopne
pop
in
icebp
iret
pop
inc
loope
in
xchg
cli
dec
stc
and
jmp
adcb
xor
clc
imul
sub
mov
inc
adc
orb
sbb
in
out
cmp
outsl
gs
pop
mov
push
push
std
push
pop
sbb
push
scas
imul
sarl
jno
dec
stc
adc
stos
mov
js
push
push
rolb
xchg
cmpsl
repnz
jnp
add
stc
sbb
int3
jl
sub
mov
movsl
push
mov
xorl
or
jmp
inc
pop
jge
cmc
dec
add
dec
add
ds
mov
dec
push
mov
xchg
jo
jnp
cli
test
ret
mov
shlb
push
push
rol
jmp
inc
mov
adc
push
shlb
jno
scas
std
pop
std
orb
mov
sbb
push
dec
mov
lea
in
cmp
mov
dec
and
cmpsl
rolb
aaa
stos
mov
stos
jl
insb
and
or
lods
xor
mov
mov
jmp
rcl
imul
popa
cli
xchg
cltd
and
sbb
adc
call
lret
cmp
xor
rcr
repnz
nop
mov
mov
clc
lcall
cmp
sub
push
movsb
out
gs
aad
ja
mov
inc
jne
add
js
and
in
inc
icebp
rcr
xor
mov
cli
adc
insb
mov
stos
ds
cwtl
jmp
pop
scas
je
adc
jo
mov
inc
mov
add
dec
aad
mov
xor
test
out
xor
add
pop
inc
ja
push
dec
je
sub
mov
mov
cwtl
stc
out
aaa
add
insl
lret
xor
pop
pop
xlat
ret
xchg
sbb
call
inc
jne
cmp
cmp
lret
lds
movsl
into
sbb
push
das
xchg
sbb
adc
into
xchg
hlt
cs
sbb
pusha
movb
add
inc
add
xlat
mov
push
add
cmp
aam
movb
in
sub
pop
popa
ret
push
int3
arpl
fisubl
fistps
scas
fucom
hlt
xor
leave
and
fwait
dec
lds
dec
imul
pop
push
dec
scas
mov
xlat
test
xor
addb
shlb
insb
insl
and
stc
outsb
testb
push
ret
adc
or
xchg
fimull
mov
jno
push
imul
je
lahf
mov
stc
hlt
lret
inc
icebp
sub
and
mov
ret
fsub
jp
inc
shl
loope
sub
lea
ror
notl
sub
push
in
sub
insl
les
cmp
inc
or
push
stos
aaa
dec
outsl
ret
cmc
push
add
ljmp
cld
or
icebp
sbb
xchg
in
bound
es
sub
dec
push
push
inc
in
push
popf
ret
loop
js
lea
addb
lcall
xchg
inc
cmp
cltd
jae
jns
pop
aaa
icebp
push
dec
sbb
lahf
iret
mov
xlat
sub
and
fs
push
leave
cmp
ficoml
inc
push
aam
imul
and
lea
popa
inc
dec
dec
std
mov
out
lahf
pusha
mov
push
adc
pop
jnp
cli
into
push
sahf
push
inc
repz
or
sub
bnd
push
jl
int
in
sub
adc
or
incl
sahf
cs
lahf
add
add
popl
mov
sub
pop
or
pop
xor
mov
and
lahf
inc
outsl
adc
cmp
loope
xorl
mov
cmpsb
dec
ret
stos
pop
lds
out
cmp
rcrl
jb
data16
mov
mov
lods
ret
pop
lahf
jecxz
or
adc
lock
outsb
lahf
repnz
cmpsb
xor
inc
push
mov
sbb
xlat
aam
xor
clc
loope
mov
scas
ret
mov
rcrl
test
iret
lods
jge
cmp
and
xchg
push
roll
out
push
inc
popf
pop
and
xor
bound
stos
addr16
stos
xchg
xor
or
mov
add
ds
adc
xor
cld
jmp
wrmsr
jnp
push
ret
into
push
dec
divb
inc
add
les
jne
push
xor
pop
mov
xor
mov
mov
inc
sbb
cmp
and
mov
mov
pop
cmp
cmp
pop
lret
imul
sub
loope
fnsave
clc
cmp
mov
mov
sbb
aad
outsl
fcompl
xchg
fistpll
cld
xchg
mov
cmpsl
ds
negb
xchg
fmuls
dec
push
shl
imull
adc
pusha
popf
and
lods
roll
cmp
pop
les
or
mov
jge
xchg
fistpll
stc
xlat
mov
xor
mov
xchg
push
push
test
sub
jae
sbb
inc
insl
xchg
push
daa
adc
or
rorl
push
enter
inc
hlt
aas
inc
sbb
sbb
push
out
std
dec
imul
bound
xlat
pusha
and
sub
jbe
jns
outsl
aam
inc
dec
es
inc
outsb
mov
pusha
mov
pop
repnz
dec
inc
jmp
nop
lret
mov
sub
pushf
test
cs
enter
sbb
ds
mov
dec
mov
push
jmp
enter
xchg
push
mov
or
lock
push
jo
and
fidivs
ljmp
cmp
jno
pushf
jle
jne
pop
cmp
push
push
das
mov
loopne
and
push
int
mov
cwtl
mov
imul
cmp
jle
sub
sbb
sarb
xchg
dec
in
pop
adc
daa
cmp
aad
aam
repnz
pushf
mov
pop
mov
scas
or
mov
pop
mov
xchg
testl
jb
call
push
mov
push
sbb
imul
mov
sbb
test
cltd
lret
adc
lods
add
int
mov
loop
push
ret
movb
lods
xchg
jno
inc
out
arpl
mov
imul
rep
sbb
ja
or
adcb
and
push
push
test
dec
mov
pop
inc
or
inc
jg
scas
and
and
adc
inc
mov
insl
and
in
ret
stc
xor
pop
lods
pop
mov
cld
mov
push
cmc
shr
les
nop
fsubs
lret
sbb
and
pop
push
pop
mull
mov
mov
push
aas
push
push
stos
sbb
jne
inc
std
pop
repz
sahf
imul
push
xor
mov
lea
mov
int
mov
insl
repz
stos
dec
cmovns
daa
mov
pop
call
lods
test
jns
cmp
cmp
mov
fistl
das
movsb
jecxz
cmp
push
mov
jecxz
mov
mov
lret
mov
daa
dec
ja
mov
sbb
das
sti
mov
dec
inc
adc
lret
sub
adc
inc
xor
adc
mulb
stc
xchg
mov
adc
sub
inc
jb
test
xchg
scas
mov
push
stos
arpl
es
mov
mov
jmp
mov
mov
push
sbb
dec
xchg
xor
in
clc
push
pop
fidivs
pop
xor
enter
movsb
xchg
call
lahf
pop
jne
test
xor
push
jl
cs
inc
repnz
cltd
fwait
xsha1
cmpsb
or
xor
cmp
rcll
or
rolb
in
mov
jecxz
lods
lcall
movsb
pusha
xchg
rcrb
sbb
inc
jbe
stc
adc
sbb
adc
jecxz
imul
out
jae
inc
pop
lock
sub
leave
cld
popa
add
mov
ljmp
inc
btc
mov
inc
xor
push
iret
mov
fs
sbb
jns
enter
cwtl
and
jns
sti
lret
mov
icebp
loope
frstor
mov
daa
imul
mov
imul
mov
inc
dec
leave
lods
add
call
pop
stos
pop
jbe
inc
addb
jb
mov
push
cli
push
mov
jo
scas
pop
sbb
mov
sub
repz
mov
jge
ret
mov
ret
mov
js
aam
cwtl
enter
stc
test
lods
int3
jmp
adc
cmpsb
lods
mov
test
push
push
pop
pop
ret
mov
lods
in
add
in
and
sbb
dec
or
repz
pop
sub
nop
insb
mov
sub
test
push
aaa
mov
das
jne
pop
push
jge
call
repnz
sub
dec
jnp
mov
fcomi
and
xchg
cli
loope
pop
in
sub
pop
test
or
dec
push
inc
adc
xchg
inc
jne
dec
push
aaa
lahf
mov
jnp
mov
jbe
nop
aas
xchg
cs
shr
mov
scas
js
jmp
mov
push
loopne
mov
test
cs
jecxz
jle
loopne
addb
call
lds
cwtl
jb
mull
sbbl
lahf
mov
test
mov
xchg
enter
add
and
xchg
jp
popa
dec
repz
imull
out
stos
in
push
cmp
loopne
or
jb
pop
pop
adc
lock
pop
mov
mov
sti
addr16
cld
dec
test
lret
mov
dec
dec
pop
rcll
sub
adc
mov
in
push
mov
fidivl
xor
test
jg
and
mov
stc
mov
sub
and
addr16
or
rcrb
inc
inc
adc
ljmp
insl
ficoml
sub
rcll
add
cli
out
xchg
into
bound
call
push
jnp
cmpl
mov
jbe
lret
inc
cmpsb
faddl
clc
pop
pop
ret
xor
inc
in
pmuludq
sub
out
icebp
mov
sti
fsts
sarl
mov
or
xchg
or
insb
in
loope
fwait
pop
push
cmc
mov
cmp
jbe
sbb
xor
loop
xor
addl
aaa
push
adc
xchg
clc
ja
jecxz
aas
insl
cmp
add
sub
jle
dec
scas
adc
sub
adc
sbb
pop
mov
push
jecxz
in
push
repnz
aaa
out
xlat
insl
mov
fcmovb
bound
daa
or
xorl
insl
lret
jmp
jae
jbe
dec
xchg
push
stc
fwait
pop
pop
or
std
pop
adc
jp
pop
sub
mov
mov
xor
jnp
mov
out
into
mov
icebp
cs
dec
fmull
clc
addb
pop
lcall
and
pushf
mov
cld
xchg
cmp
mov
je
shlb
addr16
aam
ret
pop
mov
clc
xlat
inc
out
js
movaps
arpl
sub
push
inc
mov
shlb
lahf
adc
pop
notb
cmc
cmp
es
out
test
in
push
push
arpl
and
jp
adc
or
mov
mov
pop
mov
jb
xlat
loopne
adc
rcll
fisttps
rorl
roll
cmpsl
lods
xor
adc
dec
mov
pop
call
aas
dec
xor
cwtl
andb
mov
dec
aam
cmp
xchg
icebp
and
xchg
imul
pop
jmp
lret
sub
xchg
popf
js
jno
dec
scas
mov
dec
push
cmp
pop
adc
pop
and
cmp
add
mov
cmp
or
push
loop
test
les
cmp
xchg
cmp
pop
jecxz
dec
push
and
xchg
and
lock
leave
je
push
jne
push
out
negl
jns
mulb
ret
xchg
inc
shrl
shll
fs
insl
repnz
add
icebp
stos
inc
push
stos
cmp
mov
int
adc
imul
adc
outsb
cmpsl
pop
testb
iret
loop
adc
test
shlb
fmull
dec
dec
cs
shlb
daa
dec
in
push
push
jle
mov
test
imulb
sub
daa
icebp
aad
mov
pop
mov
mov
ljmp
inc
mov
push
mov
es
xchg
mov
jle
jg
mov
pushf
rorb
call
xor
call
imul
cmp
lods
jbe
les
fimull
gs
xor
push
nop
push
sub
inc
icebp
orb
imul
cmpsl
lods
fcmovne
xor
add
adc
nop
fbstp
push
and
je
push
pop
fstl
int3
xchg
xchg
lds
xchg
or
mov
and
pop
mov
sub
add
adcb
xor
cmp
xor
xchg
dec
loope
sbb
out
sbb
push
add
out
mov
cmpsb
lods
daa
mov
mov
dec
rcrl
imul
imul
push
repnz
gs
fldenv
repz
popa
push
mov
pop
jnp
lds
sbb
sub
outsb
insl
les
cmp
dec
adc
mov
test
cld
sbb
mov
sbb
shll
subb
sbb
shr
mov
sub
or
arpl
xor
sub
lea
xor
dec
fidivrl
enter
notl
mov
pop
mov
subb
adc
in
sbb
int3
push
cltd
xchg
inc
ja
add
fimull
cmp
cli
movsb
add
inc
test
pop
shll
push
dec
dec
clc
daa
test
fs
cmp
fidivrl
jge
rorb
dec
xchg
imul
mov
out
xchg
mov
addl
push
jo
jmp
cmp
add
movsl
and
mov
out
adc
stc
mov
mov
push
aam
jmp
aam
xchg
cmpsb
inc
outsb
add
mov
mov
lock
sbb
xchg
adc
jo
inc
ror
jb
dec
cmp
jnp
loope
cli
dec
mov
mov
call
cmp
xor
cmpsb
xlat
pop
add
inc
dec
in
cmp
mov
sub
lret
fsubrs
pop
push
rcl
mov
jp,pt
outsl
fsubr
test
pop
mov
rcl
and
xor
pop
adc
push
movsb
xor
pop
adc
mov
mov
jmp
mov
cwtl
daa
dec
push
orb
inc
into
jo
call
dec
negl
mov
mov
fldcw
sub
jmp
xor
dec
mov
dec
out
pop
jns
sti
inc
lea
adc
out
cwtl
fwait
add
inc
add
sub
adc
jmp
iret
or
loope
push
sub
mov
mov
sbbl
and
push
push
popf
popf
sub
inc
enter
movsl
test
mov
inc
pop
jg
xor
adc
inc
mov
ljmp
mov
fwait
mov
and
mov
in
bnd
pushf
imul
mov
jne
sbbb
mov
imul
sar
rorl
mov
push
inc
out
jae
pusha
iret
dec
mov
scas
jbe
dec
imul
bound
fdivrs
lea
xorl
pop
mov
adc
sti
sbb
or
pop
aaa
pop
jp
sub
pop
rcr
lahf
sbb
mov
mov
cmovl
int
cmpsb
repnz
mov
xchg
fistps
imull
mov
imull
lods
ds
xchg
mov
cmp
pop
ss
mov
xor
std
aaa
es
xor
dec
cmp
imul
mov
outsb
push
iret
sahf
pusha
sbb
cwtl
sbb
sub
sub
pop
mov
leave
xchg
mov
call
fcoml
repnz
push
adc
xorb
jnp
cmpsl
mov
ret
into
dec
push
jl
repz
and
imul
or
xor
aam
outsb
mov
xor
xchg
pop
xchg
jb
sub
shrb
mov
pop
int
inc
lods
mov
inc
imul
hlt
fmul
mov
mov
xchg
sub
pop
and
mov
out
or
pop
rolb
xorl
test
xchg
xor
insb
mov
in
je
push
std
out
jns
in
mov
sub
movsb
cmp
push
popf
and
es
push
adc
loope
sub
popf
push
push
mov
sub
in
cmp
add
cmp
inc
fidivrs
dec
cmpsl
pop
mov
jns
push
call
fst
cmp
mov
sbb
cmp
xor
mov
mov
mov
cs
xor
outsl
push
les
mov
popf
xor
leave
arpl
fwait
sub
sbb
adc
mov
roll
xchg
leave
mov
inc
int3
addr16
sahf
mov
lret
jae
aad
jbe
stc
adc
adc
out
xor
jle
pop
sbb
outsb
mov
and
fmuls
mov
xchg
call
add
sub
scas
repnz
sbb
pop
push
mov
aas
jle
jl
addr16
out
lock
ds
mov
jmp
daa
ss
daa
and
insl
cmpsl
and
pop
push
add
clc
dec
lahf
jg
xchg
mov
outsb
sti
and
adc
adc
push
sub
push
xchg
fldcw
pop
std
lret
stos
arpl
lcall
pop
fisubs
add
fisttpl
stos
mov
pop
mov
adc
mov
push
xchg
aad
addr16
mov
out
mov
sbbw
xchg
sbb
mov
loopne
xchg
test
sbb
push
les
mov
repnz
mov
cmp
mov
rclb
int
cmp
cmp
adc
mov
cs
push
push
pop
aaa
sub
sti
inc
sbb
pop
adc
cltd
mov
test
cld
cltd
pop
cmp
cmp
js
popa
or
out
xor
cmp
or
clc
repz
inc
aas
les
push
hlt
xchg
shl
inc
push
pop
shlb
mov
push
sti
adc
mov
lods
jns
dec
or
shll
pop
inc
xor
enter
repz
adc
loop
fwait
xchg
notl
pop
pushf
cmp
jae
imul
add
xor
inc
cli
clc
xchg
sbb
in
pop
cmc
adc
js
arpl
lods
sub
sahf
popf
jmp
xor
dec
xchg
jg
add
xor
notb
or
xor
sub
xor
rolb
enter
jae
pop
xor
pop
pop
movsl
jne
fucomi
xchg
scas
addl
imul
outsl
punpckhbw
mov
std
test
dec
ja
insl
aad
sbb
lcall
cmpsb
add
adc
mov
and
sbbl
and
mov
stc
mov
sbb
inc
push
mov
roll
xorl
push
add
lods
sti
add
mov
pop
test
dec
aam
std
ret
push
test
mov
jp
xor
sub
inc
inc
std
xchg
fdivs
or
stos
and
ds
push
test
jg
aaa
movsl
push
xchg
push
jo
xchg
out
pushf
push
outsl
dec
ret
jg
in
add
lods
jae
stos
mov
shr
mov
sbb
addr16
adc
insl
outsb
mov
shlb
in
adc
cmp
inc
or
mov
movsb
outsb
imul
mov
jmp
jg
and
or
jg
aad
xchg
repz
mov
pop
lds
scas
shrl
inc
sub
into
movsl
hlt
jecxz
and
dec
lods
ret
in
data16
js
push
jg
push
mov
pop
add
push
adc
int3
repz
cltd
out
loope
cmpl
cmp
sub
insl
rcrl
lcall
lahf
push
add
gs
jae
inc
sahf
adc
outsl
jp
ret
loop
out
into
enter
ja
pop
je
sbb
push
jb
movb
fnsave
les
loope
inc
enter
xchg
pop
outsl
lods
push
dec
mov
adc
inc
pusha
inc
sbb
stos
das
mov
orl
cs
stos
and
fcom
or
jno
cmp
lock
push
jg
insl
lahf
call
nop
mov
iret
pop
inc
sahf
xor
cwtl
dec
jb
sub
xchg
das
dec
xor
imul
push
les
adc
mov
mov
push
lahf
ss
hlt
dec
cmp
xchg
gs
inc
fdivrl
notl
xchg
fadds
in
inc
int3
in
outsl
push
push
cmp
pop
push
sbb
jmp
call
adc
lods
inc
rclb
lods
mov
sbb
jg
cmp
mov
jnp
fucomi
cmp
xor
sub
or
mov
cmp
and
mov
pop
push
jae
lea
out
leave
scas
jecxz
sti
fdivrs
daa
mov
cmp
iret
fstpl
addr16
pop
xchg
dec
cmc
popa
pop
push
xor
jnp
and
inc
aas
pusha
into
and
or
adc
inc
inc
mov
aad
fnstcw
push
dec
fsubs
addb
lds
add
jns
ret
inc
sub
mov
and
cmpsb
or
xorb
fnstcw
add
mov
jne
leave
sub
mov
xorb
cwtl
jmp
jno
jp
mov
adc
mov
aaa
ret
mov
adc
test
cmpsl
data16
mov
mov
xor
inc
jg
loop
popf
add
pop
mov
inc
mov
mov
sub
adc
popa
sub
pop
mov
xchg
mov
js
lods
mov
lea
adc
filds
mov
jae
mov
mov
mov
popa
push
xchg
jmp
add
jecxz
repnz
cld
fisubrs
mov
cmp
fisttpll
lds
fcomps
dec
andl
pop
sub
loope
in
cmpsl
ret
int
pop
mov
mov
cmpsb
dec
pop
sub
cli
clc
inc
jmp
in
bnd
pusha
adc
cltd
lds
std
sub
repz
repz
aad
out
cmpsb
push
imul
jle
lods
lcall
pop
mov
mov
out
inc
aas
rol
fsubp
in
push
jl
pop
ljmp
xchg
dec
add
cli
out
jp
mov
adc
outsb
dec
pusha
mov
inc
icebp
inc
es
pushf
mov
daa
test
sbb
cmp
push
mov
mov
mov
fcoms
mov
mov
ret
or
cltd
mov
rorl
add
fiadds
cmp
sub
xchg
mov
clc
xchg
les
or
fildll
sub
mov
xchg
lock
out
jg
mov
das
jge
das
jmp
pop
xchg
ret
sbb
jmp
mov
xchg
mov
jb
fmulp
sbb
pop
mov
inc
popf
mov
sub
stc
xchg
push
leave
xor
stos
pop
inc
fs
sbbb
loope
mov
cmc
xor
fsubrl
aam
or
jno
bound
mov
pop
xchg
dec
pop
sahf
mov
sbb
dec
cwtl
mov
xchg
sbbb
xchg
cli
cwtl
ds
call
or
sbb
inc
out
or
inc
stos
fistpll
xchg
sub
enter
in
mov
movsb
repz
pop
in
rcrl
and
test
mov
mov
push
std
rcpps
mov
outsb
xchg
jmp
ja
fcomps
divb
out
xchg
pop
sbb
mov
inc
popa
mov
mov
imul
insl
push
je
lock
xlat
jo
cltd
int
pop
mov
jnp
aaa
test
sbb
push
inc
cmp
sub
sub
lcall
push
xchg
aas
jne
adc
push
jne
pop
adc
bound
sti
cmp
insb
cmp
push
cs
test
mov
mov
mov
leave
test
jmp
fstl
test
popa
mov
and
xlat
iret
inc
gs
arpl
out
mov
pushl
cs
sub
out
xor
jp
adc
rol
pop
aas
mov
popa
enter
mov
cli
jno
repz
cmp
push
dec
ret
jge
jecxz
mov
mov
loopne
addr16
add
out
std
dec
mov
repz
inc
dec
clc
daa
adc
cmp
inc
mov
adc
xchg
sti
push
jg
xor
les
xor
and
xchg
push
jg
lds
mov
scas
loope
cwtl
loop
inc
pop
fmul
test
mov
jbe
sti
lahf
js
sub
mov
in
or
cltd
xchg
fnstenv
jbe
in
test
vphaddubq
dec
xchg
jp
imul
call
and
repz
sub
icebp
jp
sbb
inc
sub
icebp
cwtl
push
add
mov
or
cwtl
aad
dec
adc
pop
fwait
mov
leave
xor
shrb
stc
out
cmp
loope
aam
dec
adc
cmp
pop
mov
movsb
outsl
xor
rcrl
testb
dec
add
repz
mov
jb
bound
aaa
outsl
divb
les
inc
test
insb
push
fiaddl
cs
popf
scas
sbb
pop
push
stc
out
add
dec
xchg
out
inc
sarl
mov
or
pusha
mov
mov
mov
and
or
call
cmpsb
jae
lret
fcompl
pop
push
lods
nop
sahf
adc
fimuls
pop
loope
mov
mov
imulb
push
das
mov
jbe
into
mov
ret
sub
push
pop
movsl
cld
dec
push
adc
sahf
jne
fmull
mov
inc
adc
fcompl
or
adc
movb
jae
outsl
or
inc
and
decl
and
push
mov
out
lock
sub
loop
sbb
xchg
mov
outsl
sti
fistl
add
mov
loope
adc
adc
jb
cmp
outsl
ljmp
push
popf
push
loop
fs
lret
loop
sahf
adc
jl
xor
enter
pop
dec
inc
mov
jno
jge
cmp
pop
fwait
jno
addr16
call
arpl
sub
and
aaa
cwtl
mov
xchg
insl
sbb
pop
or
xor
clc
push
mov
leave
or
mov
int3
js
cmpsb
rclb
mov
xor
in
data16
ljmp
cli
scas
popf
fidivs
jno
test
adcb
aas
arpl
sbb
loope
dec
cmp
jg
aad
out
mull
insl
sub
out
cld
pop
in
or
pop
fwait
xchg
fnstenv
mov
pop
dec
lret
push
pop
sub
hlt
cltd
shl
push
cmp
push
jo
lahf
xchg
out
aad
sahf
sub
insb
pop
repnz
push
cmc
in
lds
pop
pop
je
in
lds
test
outsl
inc
push
and
dec
dec
movsb
cmp
push
pop
add
cmpsb
mov
and
incb
mov
sbb
negl
pop
push
and
stos
aam
sbb
repnz
in
orps
mov
mov
jne
arpl
xchg
in
scas
push
in
out
xor
sar
gs
rdpmc
mov
cli
and
inc
cmp
mov
scas
repnz
push
into
adc
jne
cmp
mov
pop
mov
aaa
xchg
fnstsw
or
sti
inc
scas
jbe
fucomp
test
cltd
push
pushf
mov
mov
sub
or
push
mov
add
into
sbb
sub
js
adc
shrl
jb
test
shld
mov
jnp
inc
jecxz
adc
jmp
bound
jmp
push
push
in
jbe
shr
dec
add
add
mov
mov
jb
mov
test
gs
sti
dec
nop
lret
in
scas
dec
adc
mov
mov
pop
or
nop
pop
icebp
das
sub
sbb
xorb
dec
add
lret
jbe
cmpsb
test
out
pop
call
daa
mov
cltd
xor
and
xor
and
test
test
addr16
outsb
int3
sarb
push
pop
jno
xor
in
pop
jecxz
lock
xlat
pop
dec
jae
ret
dec
jmp
out
icebp
mov
insb
sbb
in
xchg
sbb
fiaddl
stos
push
mov
inc
iret
cs
mov
out
mov
cmp
mov
popf
jae
cs
inc
ss
or
inc
xor
cs
ds
movsb
and
and
push
dec
mov
mov
pop
add
push
movb
push
int
jae
cmp
ljmp
enter
sti
jbe
or
aam
cmpsl
adc
xlat
pushf
hlt
and
pop
inc
call
dec
jo
sarl
stos
clc
mov
ret
pop
xor
xlat
mov
int3
xlat
bound
xorl
mov
movd
das
push
adc
loop
fldcw
mov
mov
pop
jecxz
push
js
testb
stos
cli
inc
cmpsl
pop
adc
lcall
or
mov
insb
sbb
scas
mov
pop
mov
xchg
lret
cmp
cmp
lahf
or
adc
add
call
test
xor
and
insb
outsl
add
imul
jecxz
jp
xchg
stos
repz
pop
dec
rcll
jno
in
push
mov
stos
push
xchg
and
lods
inc
mov
mov
das
push
pop
fistpll
fwait
pusha
out
jle
lods
and
outsl
fnstsw
int
cmp
inc
fiadds
mov
cmp
sub
xchg
mov
cs
mov
inc
ss
sar
push
inc
fldt
loope
xchg
jb
cmp
std
pop
mov
stc
cmp
fcmovnu
mov
call
add
lahf
lret
pop
xchg
or
pop
scas
bound
push
test
fdivs
fimuls
and
sbb
daa
mov
stc
pop
subl
and
rorl
pop
push
enter
push
cmpsl
or
mov
cwtl
mov
dec
ficoms
cmpsb
sbb
mov
pop
sub
dec
cli
inc
inc
push
push
lds
add
test
and
ja
pop
mov
xchg
stc
push
jecxz
out
xorb
push
movsl
enter
mov
data16
in
nop
push
add
add
scas
sub
adc
iret
ret
out
cmpsb
fidivrs
pusha
xor
cmp
in
ss
scas
dec
sbb
outsl
mov
mov
cwtl
xlat
cmc
jb
nop
rorb
inc
imul
stos
ss
daa
xor
jae
cmp
jle
clc
in
inc
dec
ja
shrb
mov
pop
rorb
test
adc
cmp
xor
add
icebp
inc
sbb
out
jb
jl
test
sub
xrelease
std
inc
jle
aaa
icebp
bound
xchg
push
xchg
xor
shrl
popf
mov
in
mov
fld
orb
lret
pop
adc
mov
mov
adc
mov
aam
sbb
imul
push
and
int3
sub
inc
mov
stc
cmp
dec
scas
imul
out
push
jbe
popa
je
jg
mov
int3
ja
rolb
or
shrb
aad
add
or
aam
xchg
jo
shr
push
inc
xlat
xor
mov
add
sbb
lret
movhps
push
and
mov
mov
push
imul
fsubrl
cs
xor
inc
and
dec
pop
cmp
pop
xor
xchg
test
out
iret
xchg
pop
and
sub
test
jl
scas
xchg
lret
iret
test
mov
std
and
pop
dec
sub
push
cwtl
add
lret
mov
sub
ja
add
out
sbb
inc
dec
jnp
sbb
aas
ljmp
ljmp
xchg
ficomps
lock
add
pop
ficoml
fsubrs
scas
cltd
cmp
mov
fildl
and
adcb
sbb
add
xchg
push
lock
push
aam
xchg
inc
lcall
add
xor
xchg
daa
adc
dec
dec
adc
and
xchg
cld
js
imul
dec
mov
pop
in
lahf
fstpl
jns
stc
test
fs
and
add
fwait
lea
shrb
rcl
mov
test
in
dec
lahf
inc
add
dec
aas
lcall
subl
mov
je
clc
outsb
mov
jbe
mov
scas
addr16
xchg
es
sbb
test
fwait
popa
mov
mov
mov
lods
mov
test
mov
pop
pop
pushl
push
mov
ret
jle
in
jo
in
pop
cmc
jns
add
inc
inc
lea
mov
jg
mov
push
aaa
add
and
sahf
xor
fisubl
sbb
shlb
es
pop
subb
jecxz
mov
xor
push
xor
adc
fiaddl
push
incb
add
add
mov
lock
fldl
je
sbb
mov
and
repnz
ret
mov
xchg
cmpsb
fistl
mov
xor
xor
fbld
ljmp
sbb
push
inc
fwait
sub
out
mov
or
pop
in
insb
cli
icebp
jle
pop
je
data16
dec
lock
dec
bnd
pop
adc
call
outsl
xor
sti
lds
push
gs
shr
cmp
fcompp
aaa
test
mov
out
in
hlt
jnp
imul
xchg
pop
in
insl
imul
sti
es
out
cmpsl
pop
dec
push
mov
sub
jle
sub
push
je
inc
lock
scas
daa
ss
enter
fdivrl
aad
test
mov
fwait
hlt
mov
push
dec
mov
xchg
mov
js
nop
sub
scas
mov
pop
daa
jbe
push
stos
scas
lods
insb
cmp
sub
in
sub
pop
jg
jle
xor
pop
aaa
lahf
into
enter
popf
push
or
lock
pop
test
xlat
fists
mov
inc
xor
movsb
aaa
mov
xchg
xlat
dec
and
sub
cmp
pushf
int
ret
mov
jp
movsb
push
sti
adc
ljmp
pop
ss
jnp
subl
mov
mov
subl
repz
push
xchg
data16
push
and
pop
and
ja
push
insb
mov
subl
pop
fcoml
scas
imul
and
aas
add
inc
xchg
imul
or
xchg
pop
xchg
dec
leave
out
pop
add
subl
or
sarb
nop
iret
sti
cmp
pop
push
cmp
or
or
dec
sub
sbb
sarl
mov
adc
es
xchg
mov
adc
mov
imul
xchg
add
in
fcmovbe
push
jo
cli
add
lret
pop
cs
jmp
insb
aam
jg
fmulp
aad
lret
imul
loop
fistl
decb
ss
sti
mov
lret
lds
outsl
out
call
cltd
mov
pop
nop
sub
stc
in
pusha
jno
sbb
popa
mov
imul
add
and
adc
adc
sbb
cmc
andb
push
jmp
adc
aad
sbb
imulb
mov
push
mov
ret
sbb
mov
insb
inc
and
testl
adc
stc
xor
mov
mov
sbb
sub
rcll
mov
or
stc
out
sbb
inc
aam
lea
test
push
push
lahf
push
jno
mov
cmp
add
inc
lock
push
ficomps
out
cmp
loope
sbb
inc
inc
push
mov
aaa
enter
mov
xchg
std
std
lods
xor
stc
and
add
push
jnp
into
mov
fidivrl
leave
inc
fmul
mov
in
inc
dec
mov
shl
das
cmpsl
rcl
jbe
sbb
inc
cld
push
outsb
lea
xor
mov
pusha
push
inc
lret
adc
or
inc
mov
inc
fwait
mov
inc
iret
movsl
dec
fwait
addr16
mov
arpl
mov
ret
andb
xor
fcoml
pop
xchg
dec
sub
movsl
mov
cmp
ret
and
pop
xor
test
push
push
xor
pop
aaa
push
mov
inc
mov
xorl
cmp
push
pusha
mov
xchg
mov
or
add
test
xor
dec
jae
and
ds
dec
inc
add
test
adc
jecxz
add
push
ss
pop
cltd
mov
repz
sbb
mov
fidivrs
outsb
pop
pop
mov
push
mov
or
aam
fisttpl
mov
fbld
dec
xor
push
cmp
cmpsl
inc
pushf
aad
add
pop
pop
mov
mov
pop
sbb
lcall
fwait
lret
test
out
jnp
jne
jne
idivb
xchg
jl
in
pop
stc
addb
movsl
and
mov
push
stos
ja
pop
cmp
lods
sub
xchg
xchg
jbe
jno
and
xchg
cld
mov
das
into
loopne
daa
rcrl
fsts
inc
jle
adc
enter
test
in
and
arpl
inc
repz
fimuls
movsb
pop
lea
add
cmp
cli
xor
nop
mov
adc
scas
fists
push
adc
mov
movsb
outsb
push
push
sti
jge
pusha
popa
add
cmp
xchg
mov
shl
mov
scas
in
cmpsb
xchg
dec
js
xor
jmp
inc
jnp
test
mov
inc
pop
inc
out
push
test
fs
push
jg
push
sub
lods
insl
addr16
inc
imul
rorl
mov
cmpsb
repz
pop
into
jecxz
push
addr16
out
aaa
adc
dec
out
leave
movsb
mov
test
pop
dec
repz
ret
mov
push
push
popa
xchg
push
inc
jne
jmp
lods
push
test
cmp
mov
xor
xor
es
xor
push
xchg
mov
popf
int3
mov
push
mov
movb
xor
sbb
push
int
aad
add
adc
xor
cmp
xchg
cmp
push
test
ljmp
add
es
sahf
push
cmp
aas
dec
mov
aaa
push
andl
orb
cmp
xor
and
cmc
movsl
sbb
add
fists
daa
iret
xchg
aaa
imul
sbbl
inc
cmp
movsl
lret
sbb
jne
jb
aas
mov
mov
aas
iret
pusha
xor
subl
xchg
stos
xchg
ds
mov
adc
xor
cmpsl
pop
aad
popf
xor
icebp
lods
mov
cmp
insl
mov
jo
mov
fld
xchg
sub
mov
cli
mov
iret
ret
sub
loopne
adc
mov
mov
xlat
xor
ss
jns
in
adc
divl
and
jne
ljmp
je
outsb
mov
push
insb
xchg
cld
ffree
jae
call
in
xlat
ret
and
sbb
xchg
sub
test
and
dec
add
pop
sub
pop
mov
loope
out
inc
icebp
stc
addr16
pop
mov
cmp
outsl
xorb
imul
sub
pushf
mov
cmp
icebp
jle
mov
call
or
mov
sbb
cwtl
stos
jns
pop
inc
lea
mov
jle
js
add
negl
mov
inc
xlat
push
or
lods
in
push
or
jecxz
adc
test
aad
jg
notl
xor
push
push
adc
test
xor
sbb
iret
std
cli
or
fcmovbe
pop
aad
movsl
insl
push
lahf
test
mov
fwait
gs
or
fstl
fnstenv
mov
movl
ret
sub
add
pop
cmp
add
sbb
mov
xor
pop
inc
or
sbb
out
mov
les
mov
dec
sub
sbb
push
pop
mov
xor
frstor
xlat
jno
jae
repnz
mov
sti
stc
pushf
dec
xor
inc
cmpsb
cmpsl
insl
mov
pop
add
lods
les
jge
nop
sub
inc
pop
inc
push
leave
jp
jle
test
jp
lods
test
repnz
data16
pop
jcxz
faddl
sub
leave
push
sarl
mov
xlat
lods
xor
pop
add
xchg
stc
enter
fwait
sbb
adc
mov
dec
pushf
xchg
out
sahf
cli
or
loope
arpl
ror
push
loop
aam
inc
arpl
xor
xchg
and
ss
adc
aam
pop
push
xchg
xor
dec
popa
stos
inc
imul
jb
xchg
xchg
add
push
dec
jle
jnp
mov
mov
xlat
dec
ret
insl
mov
sbb
fs
fadds
cmp
int3
add
mov
orb
pushf
jle
loope
mov
popf
jg
and
push
mov
adc
pop
adc
sub
jmp
pusha
sub
roll
dec
movsb
popa
xchg
call
pusha
mov
mov
adc
pop
fwait
mov
jle
stc
xor
push
outsl
lods
in
shl
ds
push
mov
jl
inc
adc
or
lods
aaa
sub
scas
lds
inc
clc
xchg
sbb
idivb
xor
test
pop
add
enter
outsb
ret
push
fs
loopne
mov
dec
sti
sbb
cmpb
push
ret
pop
fnstenv
push
lcall
mov
out
mov
xchg
xor
gs
mov
imul
jne
push
loop
and
xor
ret
test
add
test
repz
dec
cltd
rcrb
in
sub
mov
int
mov
inc
jns
sub
and
mov
jge
in
add
inc
jle
sti
xchg
int3
adc
mov
sub
add
stos
add
mov
stos
scas
mov
or
data16
adc
pop
mov
adc
sbb
data16
dec
aas
push
add
lds
jno
addr16
leave
mov
add
sti
es
add
test
sarl
sbb
jo
and
repnz
mov
mov
cmpsl
mov
cmpsb
movsb
shrl
dec
clc
dec
popf
pushaw
flds
rcll
or
xlat
or
pop
loop
sub
jbe
push
jns
mov
aam
pusha
fsubrl
jl
xor
push
pop
xchg
pop
pop
jmp
daa
pop
mov
aad
in
lock
pop
mov
mov
cmp
fnstenv
or
out
sbb
fistpl
stos
fwait
push
sbb
orb
aas
js
ljmp
push
test
mov
mov
sub
pop
cmp
xchg
lret
repz
pop
pop
in
rcl
cmp
pop
cmpsb
xchg
sti
mov
pop
xlat
mov
sbb
xchg
dec
xor
xlat
ret
inc
cltd
mov
cmp
shlb
imul
jmp
mov
mov
sub
jne
popf
push
movsl
scas
xchg
orb
add
mov
jp
xchg
mov
je
loope
dec
lret
lcall
add
jmp
xor
cli
negb
cld
rolb
or
das
addr16
and
mov
loope
int
push
bound
xchg
sbb
lods
pop
cmp
dec
imul
add
cmc
dec
or
out
lock
dec
sti
jmp
cli
xor
pop
scas
jns
push
ja
mov
sub
and
fnstsw
xor
es
mov
mov
sub
xchg
es
mov
push
fwait
dec
sbb
push
pop
jl
hlt
test
dec
lret
cmp
dec
jg
push
mov
pop
xchg
shrb
lods
inc
cmp
icebp
negl
sbb
inc
mov
aam
or
jne
ja
ss
jnp
add
mov
leave
pusha
dec
pop
jo
outsb
sbb
push
mov
sub
cwtl
push
xor
mov
mov
popa
call
mov
aam
iret
and
mov
cmp
dec
in
repz
ret
and
and
in
pushf
ret
out
dec
cmp
inc
data16
in
cmp
insl
sbb
adc
mov
jl
mov
mov
fsts
inc
into
and
fldl2e
or
pop
sbb
in
iret
dec
mov
adc
pop
daa
push
and
mov
sub
add
pop
out
jne
jmp
in
mov
mov
jno
test
fnstenv
test
inc
fimuls
or
call
add
dec
int3
push
call
adc
sub
jmp
inc
lea
push
mov
shll
mov
adc
pop
and
leave
fs
xchg
mov
and
pop
in
inc
fwait
popa
dec
dec
mov
mov
inc
lcall
cmp
lcall
addr16
daa
cmp
mov
dec
sti
add
mov
mov
into
adc
test
roll
movsl
in
icebp
push
aaa
dec
xchg
es
dec
xor
or
adc
inc
js
lods
dec
ja
lods
lcall
sub
arpl
insl
stc
mov
sbb
lds
addr16
mov
ja
add
dec
ljmp
rcl
dec
fldcw
loope
imul
xchg
imul
lret
mov
xchg
mov
add
popf
in
xor
cmc
cmp
dec
jb
xchg
out
sti
ljmp
cmp
dec
in
leave
push
sbb
mov
in
lea
in
popa
inc
stc
cs
mov
mov
stos
inc
out
pushf
jl
bound
in
cmp
pop
inc
iret
mov
add
or
add
cmpsb
sbb
adc
js
enter
out
xchg
jg
add
mov
and
ja
aam
and
sub
adcb
sti
test
cmpsl
pop
push
rcrb
xor
xchg
pop
pop
pop
or
movl
cmc
mov
push
pop
sbb
mov
push
pop
ficomps
lods
add
ficompl
jo
xchg
cmpsl
out
imul
icebp
repz
movsb
cmp
inc
mov
out
mov
out
test
int
pop
repnz
mov
adc
sub
stos
ja
mov
add
xor
in
mov
push
lret
loop
push
dec
das
insl
push
je
mov
or
lds
push
lods
dec
lods
stos
dec
mov
mov
pop
lods
push
jmp
and
mov
insb
test
mov
loopne
ljmp
es
jp
mov
test
jecxz
test
loop
push
lret
icebp
xor
pop
pop
mov
add
in
mov
adc
cmpsl
iret
jns
int
mov
jmp
icebp
jge
jg
ljmp
outsb
sub
movsb
in
lods
ret
int
sbb
or
repz
adc
mov
insl
cld
adc
je
sbb
test
push
cs
mov
push
adc
andl
dec
adc
cmp
mov
imul
mov
mov
outsl
and
fwait
mov
imul
out
rorb
repz
xchg
imul
adc
imul
jp
dec
imulb
xchg
xchg
inc
and
push
movsb
js
testl
cltd
cld
mov
cld
int
jl
test
xchg
pop
inc
ds
negl
xchg
xlat
insl
or
jecxz
ds
mov
xchg
mov
inc
inc
xor
add
sbb
or
mov
jne
cmp
adcb
lcall
inc
xchg
iret
sub
adc
fidivs
push
fucomip
cmp
out
mov
add
lods
jno
arpl
addl
jg,pt
mov
test
inc
push
adc
inc
insb
mov
into
stos
cmpsb
jnp
push
fdivrl
int
xor
mov
fistps
pusha
mov
stos
cmpsb
pop
mov
test
lea
stos
pop
insl
stc
inc
dec
insl
push
lds
pop
inc
pop
cmp
nop
pop
lcall
cmc
shlb
fmull
push
cwtl
and
pop
mov
jg
jno
divl
dec
jo
add
cmp
sbb
das
lods
aam
daa
aaa
es
notl
mov
or
sub
push
lret
sbbl
cmp
cmc
scas
sub
popa
sbb
dec
ss
dec
cld
sub
push
xor
test
mov
xchg
mov
int
or
lret
imul
cld
sub
or
in
adc
mov
clc
scas
fdivr
add
into
data16
sbb
cmpsb
sbb
jb
dec
add
adc
jg
lds
xchg
dec
dec
orb
fwait
or
rorl
jbe
add
xor
xor
imul
add
aad
ret
repnz
pop
out
out
arpl
cs
divb
and
and
pop
stos
dec
mov
cltd
ds
dec
insl
cli
jo
rcrl
fwait
lahf
lods
inc
into
loopne
fnsave
mov
mov
inc
cmp
xor
xchg
xlat
arpl
mov
add
adc
inc
pushf
iret
cli
cs
mov
in
jge
in
dec
in
das
cld
mov
sub
clc
scas
clc
cltd
jo
and
in
sti
or
dec
inc
xchg
fsubr
out
cmc
mov
cmp
imul
pop
cmc
xchg
pop
cmc
jne
sarb
mov
std
add
cmp
shl
jb
xchg
inc
mov
jge
mov
mov
fmull
jmp
and
not
in
xor
mov
mov
push
jb
xchg
movsb
lods
icebp
fwait
add
adc
lods
iret
push
ror
pop
xor
jno
push
xor
pushf
sub
adc
or
dec
rep
push
lret
fidivrs
inc
rcrb
mov
or
add
inc
call
pop
dec
jp
add
xchg
mov
sbb
sub
jo
xchg
or
mov
mov
mov
fwait
inc
test
and
insb
mov
sub
xor
dec
test
mov
mov
inc
sbb
mov
xchg
xor
outsl
sub
dec
mov
push
mov
stc
inc
dec
loopne
mov
xor
imul
jge
jo
push
rcl
mov
push
incl
mov
scas
push
dec
mov
or
sub
push
repz
jp
sub
aas
push
push
cmp
movsb
push
dec
mov
jae
nop
adc
sbb
push
aas
add
fmul
jbe
aaa
or
jl
scas
add
xchg
xchg
icebp
pop
bound
out
xor
leave
fadd
xor
adc
push
inc
pop
push
cld
outsb
dec
ja
jecxz
les
std
int3
ljmp
aaa
dec
outsb
out
jle
je
test
add
lahf
jle
or
xchg
or
int
mov
std
xlat
enter
inc
icebp
or
cli
jne
mov
addb
jmp
cmp
clc
sbb
push
xchg
mov
jge
inc
jbe
dec
jbe
and
sub
pop
int3
andb
fcmovnu
cli
or
aad
mov
fmull
test
add
fs
push
scas
jns
movsl
in
mov
or
mov
stc
es
das
jecxz
push
sbb
std
mov
mov
xlat
mov
push
cmp
ret
aas
inc
xor
cmp
mov
xchg
int3
fstpt
jle
mov
add
in
int3
cld
add
adc
clc
dec
add
loopne
arpl
insl
add
arpl
add
clc
adc
pop
or
sub
lods
cs
das
out
adc
jb
jl
xchg
xlat
cwtl
adc
addr16
out
repz
dec
pop
repnz
adc
out
mov
scas
inc
repnz
pop
adc
push
inc
or
out
dec
mov
loop
dec
inc
mov
mov
cmp
int
sbb
dec
cmp
sbb
push
or
jmp
and
mov
cmp
cmp
das
jmp
mov
mov
xor
ljmp
xchg
shrb
lods
push
ds
cmpsb
sbb
inc
ljmp
inc
fisubrs
inc
adc
adc
sbb
aas
adc
mov
or
dec
push
mov
mov
mov
mov
jl
cmp
xchg
push
xor
cli
test
mov
bound
add
negl
sub
movsb
std
repnz
incb
mov
inc
addb
in
orl
pop
mov
dec
sbb
xor
test
or
dec
les
cmpsb
xor
dec
push
in
mov
adc
xor
repnz
push
inc
addr16
cmp
fs
insb
xchg
imull
ss
push
imul
aaa
mov
xchg
lods
aad
test
fs
push
adc
scas
test
mov
call
fdiv
dec
sub
pop
cltd
in
daa
int3
jno
or
jno
ret
movsb
shlb
sub
in
shl
push
push
sbb
comiss
cmp
bound
mov
inc
sub
sub
jo
pusha
int
fisubl
mov
lods
xchg
nop
dec
stos
hlt
out
leave
out
gs
or
push
cmp
call
enter
pop
shrb
xor
dec
sub
pushf
in
dec
movsb
leave
mov
test
or
hlt
mov
nop
lret
pushf
popa
shl
inc
js
cmp
push
sbb
adcl
mov
in
jno
out
lods
mov
xchg
mov
and
or
fwait
mov
xchg
insl
xor
adc
push
jecxz
inc
loopnew
aam
repz
push
mov
mov
das
movsb
cmp
dec
jb
inc
bnd
xor
call
ljmp
jp
dec
dec
ret
shrb
xor
lea
push
sub
clc
xor
or
in
or
subl
ljmp
lret
scas
fmull
in
inc
imul
addl
push
clc
jge
mov
rcrb
loopne
clc
add
test
insl
sub
retw
inc
add
mov
dec
inc
fwait
xor
lahf
shrb
jo
sub
sub
jbe
mov
or
das
inc
int3
sbb
inc
xchg
sbb
leave
dec
dec
inc
and
push
ljmp
cmp
pop
out
cld
sbb
insb
mov
or
lods
lcall
std
sbb
adc
pop
lds
sbb
sbb
sbb
push
xchg
gs
inc
pop
xor
mov
iret
in
mov
loopne
fcoms
push
ja
and
pop
or
mov
xor
out
dec
outsb
insl
mov
outsl
push
mov
xchg
dec
lock
cmp
add
pop
add
stos
arpl
int3
push
add
sub
repnz
rcll
add
adc
push
data16
mov
fbld
xchg
push
cmp
or
mov
pop
inc
mov
js
jno
adc
pop
inc
aas
pop
xor
int
mov
sbb
lock
jl
in
das
hlt
rcll
and
cmp
mov
rol
push
xlat
mov
pushl
dec
mov
jbe
rol
mov
popf
aas
push
jo
or
hlt
fisubl
sarl
vpaddq
test
jbe
lock
cli
dec
lods
hlt
lret
mov
jg
push
into
jns
xchg
jns
iret
lods
rclb
cli
aad
mov
push
lds
dec
pop
add
push
or
adc
neg
out
les
scas
mov
pop
mov
push
and
dec
xchg
out
jge
inc
dec
out
pop
mov
cmpsb
xor
int
jnp
push
fstpl
stc
push
and
jae
outsl
in
das
push
imul
xor
es
or
pop
and
jmp
daa
scas
push
call
testb
mov
push
jmp
lods
cmpsb
cmp
in
nop
pop
inc
insl
adc
cmp
and
pop
mov
aad
jb
jne
xor
inc
les
fnstcw
cmc
inc
scas
es
sbb
pop
stos
sti
daa
cmpsb
lds
push
mov
aam
mov
xchg
out
icebp
add
push
das
pop
je
pop
pusha
shll
push
inc
mov
mov
adc
pop
mov
rcrb
pop
stos
and
je
dec
out
mov
imul
shrl
negb
ja
xor
cmpsb
cmp
cmp
popf
arpl
push
push
push
scas
adc
out
sub
insl
loopne
ja
xchg
out
push
add
loop
pop
pushf
lahf
sbb
je
sbb
adc
addr16
pop
jmp
mov
cmpsb
pop
pop
nop
or
push
icebp
mov
mov
xorl
popa
fildll
sbb
cmc
cld
xchg
movsb
mov
fisttpl
cmp
lock
mov
jns
loope
nop
mov
fldenv
cmp
mov
pop
iretw
pop
push
push
mov
sbb
test
xchg
jp
and
lods
mov
jb
and
jmp
jnp
add
fisubs
sti
add
inc
gs
adc
inc
push
call
sahf
xchg
fmull
mov
adc
std
dec
xchg
shl
push
pop
aas
inc
out
lret
shlb
jl
mov
je
add
sub
cmp
push
mov
sbb
int
cmp
jnp
xorl
or
dec
imul
sub
xchg
ja
mov
and
push
aaa
jge
xchg
jle
xchg
in
inc
adc
push
andb
jl
arpl
test
sbb
dec
mov
and
adc
pushf
sbb
cmp
test
xor
pop
ret
sbb
pop
insb
add
shlb
push
and
int3
and
pop
mov
xchg
sub
inc
ror
push
loopne
dec
imul
arpl
jne
pop
mov
mov
cmp
push
xor
pop
or
dec
in
sub
arpl
sbb
xchg
lret
cmp
xchg
int
cmp
pop
mov
mov
jl
and
fadd
repz
lcall
sbb
outsl
scas
add
icebp
dec
xchg
and
lea
ss
jge
lret
push
aas
jg
icebp
test
adc
dec
jle
lret
loope
and
ficomps
push
mov
repz
stos
sbb
and
add
cmpsl
addl
cmc
dec
mov
idivb
cmpsl
add
pop
jnp
jg
je
or
inc
in
sbb
mov
mov
xchg
enter
idivl
inc
inc
xchg
mov
cld
adc
sbb
dec
roll
pop
pop
inc
gs
sbb
inc
inc
mov
inc
push
cmc
movsl
dec
inc
ljmp
std
imul
hlt
mov
mov
add
test
xor
push
add
pop
daa
movl
outsl
or
enter
pusha
in
jno
sarl
ljmp
jne
mov
shr
mov
mov
mov
lods
cld
ss
add
mov
jge
mov
popa
bswap
and
cmp
jecxz
lcall
ret
mov
leave
jns
push
or
ror
mov
lds
push
push
mov
pop
sbb
xchg
sub
ja
add
in
push
adc
loope
mov
inc
dec
arpl
jnp
lea
push
add
jmp
pushf
adc
mov
jl
mov
inc
mov
dec
adc
push
in
std
lret
mov
adc
loopne
popf
jbe
movsl
push
mov
jge
jne
or
mov
inc
fcmovne
pop
or
out
dec
pop
sub
rcl
dec
mov
cmp
fs
ret
nop
xchg
jne
ja
cld
lret
adc
mov
lret
repz
xchg
sub
add
mov
pushf
je
xor
aas
pusha
sarb
out
inc
in
lahf
dec
adc
jmp
cltd
and
ljmp
add
pop
adc
jnp
pop
adc
outsl
pop
in
sub
cmpsb
dec
mov
pop
fsqrt
outsl
mov
mov
mov
push
cmp
mov
jmp
xlat
sbb
lds
clc
je
cwtl
jns
test
in
lods
jb
adcl
repnz
push
push
and
fnstenv
ds
add
pusha
push
cmp
lods
loopne
cmp
cmpsb
xor
push
sbb
mov
add
inc
mov
outsb
push
xchg
aas
cwtl
repnz
stc
xor
pop
jbe
and
and
cmp
out
imul
add
es
jb
les
cmp
pushf
jle
push
jl
inc
test
adc
aas
clc
adc
push
xor
pop
cmc
mov
ss
xor
je
dec
dec
call
mov
mov
sbb
push
dec
loope
sub
dec
enter
pop
lods
sbb
mov
pop
ljmp
lock
dec
mov
or
in
popa
pop
scas
mov
push
or
jl
cmp
add
nop
div
loopne
call
xor
subl
inc
dec
mov
jl
push
test
rcrl
adc
dec
rorl
and
mov
push
and
mov
mov
lret
mov
pop
jb
inc
call
movsl
add
out
jne
add
adc
rolb
loopne
mov
fcom
pop
cmc
or
push
notw
mov
sbb
popa
cmp
push
popf
popa
cltd
clc
adc
fwait
mov
mov
jecxz
mov
cmp
inc
lds
in
sbb
divl
sub
xchg
sbb
cmp
pop
sub
loop
xor
xchg
or
imul
inc
pop
dec
iret
clc
mov
gs
push
mov
enter
or
sbb
stos
xchg
mov
mov
add
add
mov
push
std
sbb
ja
mov
xchg
test
inc
fiaddl
outsl
adc
loop
pop
pop
mov
xlat
data16
dec
sub
lret
negb
sub
std
fadds
inc
jae
cld
cmc
fidivl
movsb
in
out
mov
mov
ss
stos
jmp
int
nop
or
dec
inc
fs
push
stos
mov
mov
xchg
rorb
adc
inc
and
add
add
ret
inc
xchg
faddp
shll
rcrl
adc
sbb
arpl
or
add
dec
adc
xor
and
jne
nop
repnz
lods
push
fdivs
and
add
test
xor
addr16
ljmp
inc
out
lea
mov
mov
sub
fcomps
pop
sbb
mov
mov
push
movsl
mov
in
rcll
xchg
test
jnp
xor
add
dec
mov
pusha
adc
cmp
push
cs
sbb
outsb
ds
lock
cwtl
mov
stos
mov
popf
pop
aam
pop
sbb
pop
sub
fldt
dec
push
push
test
xchg
icebp
dec
mov
xlat
push
sbb
fildl
js
mov
jle
in
add
pop
xchg
filds
inc
insb
movsl
xor
xchg
cli
pop
jno
in
xchg
pop
mov
add
or
mov
scas
and
xchg
pop
stc
sarl
sarl
scas
iret
in
stos
or
bound
ror
gs
and
sub
sub
pop
sbb
dec
or
stos
cmpsb
xchg
or
popf
pop
adc
insb
dec
push
not
sti
jbe
cmp
in
test
ds
dec
inc
pushf
inc
mov
popa
shr
pushf
inc
test
sbb
and
xchg
mov
divl
xor
fldt
lds
call
sbb
mov
rorl
enter
rorb
xchg
xor
scas
shrl
pop
jle
mov
aas
imul
push
and
test
and
in
xorl
pop
mov
xchg
addr16
push
and
and
aas
pop
lahf
ret
jle
adc
inc
inc
lds
sahf
pop
or
stos
pop
or
xor
ljmp
xchg
pop
or
mov
sbb
jno
in
sbb
pop
test
jns
pop
scas
mov
jne
adc
xchg
adc
shrl
icebp
dec
inc
imul
test
movsb
mov
jecxz
cld
or
pop
sub
je
popf
std
jge
and
inc
xchg
mov
inc
mov
es
clc
add
cmp
dec
fimull
pusha
outsb
sbb
test
ficoms
pop
stc
sbb
loope
loopne
push
loop
mov
pop
sub
push
push
shrl
cltd
pop
stos
dec
push
and
and
mov
xor
adc
loop
push
xchg
xor
or
pop
aam
lds
movsb
sub
fmul
mov
cmp
sub
and
mov
cmp
mov
dec
out
pop
inc
inc
fs
aaa
lret
test
jno
clc
ljmp
inc
filds
push
jnp
pop
and
icebp
int
push
sbb
sub
and
jnp
fwait
mov
shlb
std
lods
fsubs
loopne
cld
test
dec
icebp
mov
call
push
pop
sbb
fwait
pop
pop
sub
imul
pop
ja
jecxz
in
cwtl
test
scas
mov
fsts
jmp
xor
jle
inc
sub
lret
adc
lds
movsl
in
add
scas
js
xchg
xor
ja
lods
add
push
scas
ja
add
adc
inc
push
lods
addl
xor
xor
iret
mov
shl
cmc
mov
sub
fwait
cmpsb
mov
xchg
sub
cmp
out
cmp
sbb
je
jne
je
cmpsb
or
sbb
movsb
sub
dec
dec
push
pop
scas
jmp
shr
add
cmp
call
jle
testl
sbb
in
jbe
cltd
clc
addb
sub
mov
adc
mov
fldl
dec
jbe
jno
enter
fbld
shl
insb
stos
mov
jle
xchg
mov
push
mov
lea
mov
mov
lods
cmp
imul
pop
mov
inc
add
add
pop
xchg
xor
leave
xchg
adc
push
or
mov
xor
arpl
push
jae
hlt
arpl
pop
xchg
rcrl
gs
and
cmpsl
or
pop
int
jbe
or
nop
adc
mov
adc
cwtl
daa
aam
into
push
aas
notl
fldenv
jbe
iret
das
lahf
out
bound
cmp
push
ror
xor
cld
inc
add
mov
scas
and
out
test
or
lcall
fistps
pop
inc
mov
imul
scas
ds
fsubl
xor
scas
scas
lahf
arpl
popa
ljmp
inc
aad
push
aam
inc
ja
dec
sbb
add
lahf
mov
and
rolb
sbb
push
mov
pop
push
sub
les
pop
push
movsb
fadds
xchg
mov
je
xor
lret
or
std
call
scas
or
rcll
push
cltd
and
leave
push
inc
add
adc
out
push
xchg
cltd
call
pushf
mul
out
inc
int
aaa
bts
addr16
cltd
jbe
jmpw
mov
shr
fs
into
sbb
dec
xor
les
sub
hlt
in
mov
out
cmp
ja
adc
data16
les
xor
mov
xor
xor
inc
jl
fdivrl
out
int3
decb
lahf
std
push
stos
bound
lods
mov
xor
mov
xchg
mov
pop
stc
js
add
movsb
cmc
sbb
push
fsubr
sbb
fmull
push
fsubs
cs
subb
pop
cmp
out
cmp
mov
aam
cmp
xor
stos
aad
and
xor
or
cltd
test
fbld
test
call
ljmp
xchg
scas
fldl
push
inc
outsl
pop
pop
enter
cmp
xchg
xor
aaa
sub
ljmp
andb
and
push
in
fwait
and
sub
or
data16
inc
out
pop
scas
lahf
arpl
inc
pushf
pop
decb
sub
push
pop
inc
lret
sub
cmp
out
add
es
out
sti
loope
xor
movsl
and
jb
je
loopne
push
rclb
add
add
pop
jmp
add
mov
sub
lea
sbb
js
push
fildl
negl
pop
xchg
pushf
sub
rcrl
mov
in
cmp
adc
rcrb
add
js
dec
mov
jns
orb
adc
test
das
in
mov
dec
fstpl
fwait
nop
jb
or
xor
loopne
rorb
adc
cmp
and
je
inc
mov
ljmp
into
mov
or
mull
inc
xchg
arpl
cmc
notl
jno
sarl
sub
out
xchg
adc
add
scas
addl
movsb
je
pop
arpl
mov
add
push
out
jl
add
mov
popl
cmp
mov
xor
in
add
sub
mov
push
inc
mov
sub
cwtl
add
jmp
mov
pushf
cli
mov
lds
push
loop
mov
sbb
imul
inc
cmpsb
sub
cmpsl
sbb
jle
sbb
xchg
std
cli
lcall
or
cmp
addr16
negl
jmp
mov
sub
cs
pop
es
inc
pop
pop
pop
inc
outsb
push
inc
cmc
std
push
lock
int
add
int3
cld
cltd
arpl
jns
mov
jo
xor
rcrb
js
xor
imul
cmp
and
mov
insl
cs
adc
xchg
cmp
sub
leave
cld
mov
sub
ret
out
jp
dec
sbb
xchg
xchg
jle
inc
mov
js
jns
xor
gs
add
mov
jp
push
bound
mov
mov
cmp
xchg
adc
cmp
add
push
jecxz
in
dec
push
mov
cmp
mov
jns
rorl
jp
lret
jnp
xchg
es
cwtl
xor
sbb
dec
test
push
popf
les
pop
inc
divb
or
jo
ret
cmp
lods
outsb
sub
jle
fwait
dec
mov
push
mov
cmp
fiadds
ds
test
jecxz
jb
mov
adc
pop
pop
dec
xlat
cli
push
dec
cli
ds
cmpsb
cmpb
mov
add
ret
cmp
mov
movsl
add
lcall
push
pop
dec
imul
adcb
shll
out
in
sbb
stos
push
out
mov
call
cmp
dec
mov
mov
xchg
rcrl
cltd
jecxz
lret
mov
fstps
mov
loope
pop
and
notb
pop
dec
push
sbb
or
sarb
mov
je
mov
cmpsb
mov
push
lock
push
std
adc
xchg
mov
sbb
test
jne
and
mov
imul
cmp
in
mov
sahf
scas
test
adcb
cmc
mov
adcb
dec
cmpl
and
adc
shrb
ficompl
sub
fwait
imulb
and
fisubs
imul
jge
outsb
jno
fisubrs
jo
notb
arpl
cmp
or
fs
arpl
repnz
loopne
fsubrs
shl
loopne
arpl
and
push
imul
xchg
pop
mov
xor
dec
enter
aas
xor
in
mov
mov
out
js
aaa
jmp
frstor
es
daa
sbb
fldcw
pop
enter
push
insl
xchg
lods
movsb
mov
and
cli
aad
pusha
dec
mov
push
pop
movsl
notb
sbb
xchg
enter
sub
lret
jo
aas
lcall
inc
ja
xchg
push
loop
jo
dec
xlat
fwait
test
test
dec
aas
jo
jo
rcrb
popa
addb
loop
push
adc
addr16
popa
sahf
shlb
jge
rorl
clc
sbbb
push
sarl
ljmp
mov
push
adc
push
dec
rorl
out
fldcw
sbb
test
fcoms
popl
lods
pop
rorb
mov
fwait
xorl
lret
cmp
cltd
loopne
int
fwait
inc
jmp
mov
jno
push
call
rol
inc
pop
dec
mov
sub
dec
lahf
or
xchg
xor
test
mov
or
push
nop
test
stos
insb
sub
lods
sub
jbe
push
xchg
push
pushf
notb
xor
and
pop
push
popa
fucomi
and
fnstcw
push
adcl
leave
cmp
push
pop
inc
lds
xchg
mov
and
dec
lahf
icebp
mov
jo
mov
mov
fwait
add
sbb
leave
xor
icebp
pop
loop
mov
xor
mov
xlat
shrl
test
dec
ljmp
bound
mov
adc
xchg
insl
mov
je
or
xchg
and
pop
das
loop
push
sub
or
cwtl
mov
imul
cmpsl
bswap
pop
jbe
shll
stc
loop
clc
xchg
add
hlt
int3
sbb
jae
dec
loop
sub
mov
adc
insl
cld
dec
xchg
cmp
sub
push
mov
push
sub
lods
xchg
les
and
imul
dec
sbb
mov
fld
outsb
xchg
jno
jg
fsubr
movsl
mov
test
outsl
sbb
add
mov
mov
outsl
in
push
adc
and
inc
int3
mov
mov
es
lock
xchg
ss
lods
daa
xor
fisttpl
mov
mov
sub
loop
add
push
dec
movsb
ret
inc
outsb
inc
dec
andl
js
push
mov
aad
mov
int3
mov
sbb
lods
mov
test
shlb
loopne
iret
jecxz
fsubrs
lret
adc
adc
ds
add
jl
fucomi
cmpsl
fsts
enter
or
sub
sbb
data16
mov
jbe
test
jae
dec
sbb
pop
scas
mov
cld
sbb
sub
test
scas
fs
adc
dec
add
sub
add
push
push
lahf
push
addr16
inc
dec
mull
rorb
push
adc
out
and
daa
xlat
ficomps
sahf
int
dec
mov
xor
pop
xchg
mulb
xor
sub
push
mov
fsubs
addb
arpl
add
fldpi
add
or
cmovs
cs
ja
loop
inc
aam
movl
ja
inc
mov
ret
sbb
in
notb
sbb
fiadds
and
dec
sbb
or
enter
cmp
std
stos
and
push
mov
push
popa
leave
push
loop
movsb
js
sub
jmp
mov
addr16
adc
sbb
mov
jecxz
in
xchg
xlat
fstpl
rclb
push
cmp
dec
xor
cmp
pusha
sub
test
lds
jecxz
fcoml
or
clc
and
cmp
jmp
mov
dec
es
in
inc
icebp
and
jne
loop
lock
loop
je
into
lret
mov
push
and
xchg
sti
test
sarl
inc
sub
subb
mov
pop
outsl
and
cmp
popa
pop
stos
icebp
jae
enter
fst
pop
dec
xchg
lret
je
notb
pop
cmpsl
aad
aaa
pop
pop
mov
sub
int
movsl
inc
push
sub
mov
jmp
push
or
lock
jg
repnz
xchg
cli
test
mov
cmp
mov
mov
popf
xchg
mov
xchg
add
fidivrs
stos
push
insb
dec
dec
mov
cmpsb
repz
ja
shlb
adc
or
ret
fcmove
fbstp
out
jmp
xlat
aaa
das
or
jge
bound
hlt
push
iret
sbb
adc
mov
int3
mov
cltd
mov
in
add
xchg
and
and
arpl
arpl
jg
sbb
cmp
nop
push
cmpsb
pop
repnz
mov
xchg
inc
mov
int3
mov
addr16
jnp
cmp
cltd
enter
mov
sbb
lahf
imul
pusha
incb
add
push
movsb
cmp
mov
jno
call
fwait
jle
mov
cmp
jmp
inc
cmp
mov
xor
stos
les
cmp
inc
and
jg
pop
cltd
cmp
mov
and
and
pushf
jb
sbb
sbb
in
lea
ss
dec
test
inc
imulb
jl
xor
flds
inc
jge
mov
fidivrs
enter
mov
aam
xchg
int
jecxz
inc
pop
mov
fisubl
mov
das
scas
adc
xor
push
shrl
adc
mov
fimuls
sub
rclb
mov
fldt
ret
dec
movsb
jnp
xor
and
test
data16
inc
jecxz
and
xchg
mov
ret
loope
call
mov
pop
insb
fcoms
or
das
out
js
add
sarb
xchg
and
pop
and
or
ret
mov
in
lods
cmpsb
mov
in
dec
ljmp
add
cmp
adc
pop
xor
hlt
dec
adc
mov
xchg
mov
imul
mov
dec
xchg
adc
xchg
cmpsb
mulb
ret
mov
fistl
in
aam
push
xchg
mov
into
stc
sbb
xlat
jbe
aas
pop
lret
stos
jno
adc
pop
push
jecxz
dec
arpl
pop
es
mov
call
or
das
add
in
movsw
ja
add
leave
adc
filds
jg,pn
mov
adc
pop
ljmp
mov
icebp
imulb
jl
je
push
andl
lea
divb
mov
push
aam
das
mov
aaa
lahf
arpl
sbb
roll
xchg
push
sbb
icebp
insb
lods
test
stc
cwtl
mov
adc
dec
xchg
jp
test
dec
pop
lods
scas
mov
push
ret
dec
xchg
wbinvd
js
imul
or
sbb
mov
lcall
notb
or
lea
dec
and
mov
and
pop
dec
dec
cmp
mov
int
or
mov
xchg
les
sub
dec
push
mov
xor
test
xchg
cmpsb
xchg
xlat
adc
int3
out
fwait
sub
jo
sahf
cmp
cmp
data16
aad
push
jge
jae
insb
enter
fwait
adc
fwait
mov
mov
int3
mov
dec
data16
or
pop
je
mov
shl
mov
or
dec
call
aam
rolb
push
cmpsb
in
pop
aaa
pop
call
hlt
jne
cmp
repnz
in
gs
loopne
lods
xchg
outsl
jecxz
cmp
mov
loopne
mov
rcr
mov
stos
insl
mov
xor
das
push
xacquire
xchg
ret
dec
mov
clc
push
lahf
imul
cld
push
scas
imul
hlt
xor
push
dec
insl
es
test
scas
add
push
fldl
loope
adc
pop
loopne
pushf
dec
xchg
and
or
pop
subl
rorb
and
sahf
cwtl
inc
xchg
ret
pushf
or
and
data16
xor
es
add
jns
orl
and
sbb
je
mov
aas
mov
bound
mov
mov
fwait
aas
mov
cmp
mov
jl
call
adc
movsb
push
out
iret
pushf
dec
mov
mov
sti
cmp
xchg
lods
enter
mov
push
pop
push
adc
lahf
pop
pop
mov
mov
ljmp
pop
and
jmp
stos
roll
sub
adc
leave
ja
and
mov
hlt
cmp
adc
add
popf
sbb
leave
push
fistl
std
mov
movsb
xchg
ds
xor
es
sar
lods
pop
push
adcl
negl
push
into
nop
ss
lods
xor
or
jae
cmp
fisttpl
je
lods
add
fisttpll
mov
add
adc
popa
mov
mov
jge
test
imul
dec
sub
es
pushf
pop
insl
or
jo
cmp
xor
stos
cmc
scas
out
dec
addr16
push
sub
imul
clc
dec
loope
sarl
dec
xchg
int3
jge
xchg
sub
daa
push
add
cmpsl
rcl
jo
cmp
insl
fldt
adc
adc
xchg
scas
push
xchg
outsb
mov
lock
and
lcall
push
xchg
push
sub
mov
xchg
out
cmp
mov
add
mov
in
xchg
inc
or
jb
push
nop
push
mov
inc
out
mov
int3
cmpl
fwait
sahf
push
sub
dec
es
jp
or
fimull
icebp
adc
and
add
test
fstl
and
pop
fdivs
mov
jmp
and
call
mov
sub
mov
sbb
je
inc
test
cmp
fdivr
sub
add
test
adc
or
not
aad
daa
pop
mov
ret
addr16
sbb
lock
out
loopne
aad
ror
add
dec
inc
addr16
pop
sub
call
repz
xorl
aas
sbb
mov
sub
int
sti
mov
mov
aaa
les
jmp
sahf
jb
arpl
and
sti
xchg
jbe
lcall
dec
das
fidivrl
das
push
mov
cs
ficomps
push
test
jmp
ljmp
push
jns
lcall
test
mov
ret
divl
les
pop
cmpsb
jmp
loop
fiadds
fwait
sar
das
xchg
fs
push
pusha
pop
mov
stos
xor
mov
jmp
scas
jbe
pop
xchg
jae
xlat
js
mov
int3
daa
test
sub
addl
add
adc
inc
inc
pop
sbb
xchg
pushf
and
sub
movsb
mov
dec
adc
in
dec
xchg
adc
inc
cmp
adcb
jo
arpl
test
orl
cli
dec
es
pushf
pop
lods
mov
xor
hlt
out
inc
notl
jo
inc
cmpl
ljmp
xor
jne
xor
cld
sub
and
xchg
cmpsl
je
sbbl
popa
in
dec
aam
ficoms
mov
sub
cmp
aaa
out
in
cltd
adc
pop
sub
cmp
mov
mov
das
sbb
mov
xchg
xor
pop
xor
and
mov
cs
movsl
lods
sbb
mov
fs
jmp
sub
lcall
mov
inc
pop
aam
out
cwtl
pop
jmp
jb
push
out
jo
lcall
and
pop
sub
jmp
dec
sub
idiv
jp
push
aas
nop
insb
adc
jbe
jmp
test
mov
adc
and
dec
addr16
gs
mov
insl
jmp
leave
hlt
pop
or
adc
mov
mov
fldl
or
xor
push
and
popa
pop
jne
aas
andb
pop
nop
insl
outsb
cli
push
test
clc
lar
shll
loop
dec
jno
xchg
lock
icebp
pop
fdivr
fildl
ja
je
or
mov
in
sub
push
aaa
cmp
mov
sarb
mov
sbb
adc
outsl
fwait
in
xor
push
addr16
cld
int3
dec
mov
jnp
test
jp
and
xor
mov
fmuls
adc
pop
jle
sub
cmp
cmp
mov
lahf
pop
jmp
arpl
lock
lret
sbb
aaa
mov
mov
sub
and
push
jle
adc
or
pop
sub
mov
aas
fnstsw
sub
fsubp
scas
adc
mov
jge
out
lret
sub
push
pop
aad
sbb
pop
pop
sarb
pusha
test
lods
dec
lods
dec
lods
mov
dec
push
pop
loope
das
push
xchg
dec
jb
fisubl
aam
mov
ds
mov
push
jl
inc
js
mov
pop
insl
std
addr16
call
xchg
lock
xor
jecxz,pt
mov
pop
test
stos
lahf
bound
jle
stos
cmp
fmuls
les
mov
xor
and
sub
push
adc
imul
dec
add
pop
or
mov
out
loopne
dec
dec
mov
push
int3
loopne
call
sbb
les
mov
sub
dec
test
mov
add
cli
jmp
adc
sarb
jge
xor
and
aas
inc
mov
pop
pop
inc
aam
jecxz
add
sbb
int3
mov
imul
ret
shrb
popa
ds
es
and
mov
pop
icebp
jb
mov
lods
add
sub
mov
sbbl
sbb
mov
mov
mov
ror
int3
popa
rcrl
push
pusha
out
sub
mov
xchg
test
add
out
pop
push
pop
rcrb
sbb
mov
mov
xchg
xchg
mov
call
pop
xchg
jne
cmpsl
insl
lea
jp
iret
je
cmp
push
pop
inc
cmp
sub
lock
idivb
sub
and
adc
inc
pop
adc
leave
repz
mov
mov
pop
dec
cmp
popa
ja
cmpsb
in
xor
cwtl
cli
je
sub
xchg
loope
xor
cltd
popa
adcl
dec
dec
ss
dec
dec
cmc
scas
cmp
pop
ficomps
push
mov
sbb
sbb
or
jno
jnp
es
push
push
les
inc
int3
lret
dec
sub
xor
cld
lret
xchg
push
rcrl
dec
gs
lret
jge
popa
or
mov
mov
das
jg
lea
cmpsl
mov
add
out
cmp
mov
movsl
xchg
add
dec
imul
pop
imul
sbb
mov
and
xchg
xchg
arpl
sub
fstpl
inc
mov
cli
dec
lods
mov
cmp
lret
cmp
cld
cwtl
repz
add
cltd
inc
loope
push
push
movb
and
ds
jae
stos
jg
out
cmp
mov
dec
dec
lds
ljmp
stos
mov
movsb
fcmovnbe
jo
xor
cmp
lcall
fucom
mov
or
fcomps
xchg
daa
fstl
in
mov
fldcw
dec
push
sub
sub
out
cld
xchg
fwait
xchg
test
cmp
mov
call
imul
rol
gs
fistpl
xchg
xchg
sbb
xchg
paddb
pushf
test
js
mov
inc
add
insb
fdivl
nop
aaa
es
lods
aam
push
xlat
das
jle
mov
data16
and
pop
aas
mov
jmp
xchg
mov
push
enter
test
out
mov
int3
or
inc
mov
dec
ret
sub
lret
pop
cmpsb
xchg
sbb
pop
push
test
cmpsl
sbb
stos
js
mov
push
nop
ret
fidivl
inc
and
data16
cmpsb
cmp
lahf
sbb
cmp
mov
cltd
xchg
or
mulb
sub
sti
js
mov
enter
xchg
lret
push
stos
faddl
xchg
sub
pusha
jns
cltd
mov
sbb
jmp
sub
daa
jnp
aas
mov
inc
xchg
and
sbb
mov
sbb
sub
ja
fwait
mov
sub
sbb
into
fs
xchg
outsl
xchg
pop
sbb
dec
sub
ja
pop
push
sbb
pop
rolb
adc
inc
add
mov
push
enter
popf
jge
leave
mov
dec
in
pop
les
add
inc
mov
filds
rcr
adc
fcomps
test
repz
adc
data16
sbb
andb
lods
add
or
cmpsl
jb
shrl
imul
pusha
inc
jmp
or
adc
inc
decb
xchg
xchg
pop
mov
jo
jmp
pop
test
push
not
push
std
push
cltd
jns
int
scas
test
pushf
dec
popa
mov
leave
insl
add
sahf
and
ds
mov
xchg
sbb
fxch
test
push
pand
cmp
xchg
and
sti
or
mov
fisttpll
jmp
push
add
push
adc
fbld
pop
sub
sub
push
fs
aad
xchg
inc
cs
xor
sub
decl
inc
mov
imul
and
xchg
lcall
lret
mov
dec
xor
icebp
and
and
into
inc
mov
out
arpl
push
stos
leave
push
sub
dec
pop
adc
test
stc
xor
cmp
lea
test
mov
leave
addr16
rclb
sbb
cltd
sub
fiaddl
je
mul
ficompl
and
fldenv
out
push
ret
inc
iret
xor
ss
jae
inc
jns
sbb
mov
out
mov
xchg
adc
jecxz
gs
lock
dec
aad
stos
je
xor
xchg
mov
inc
dec
xchg
push
mov
mov
cmpsl
inc
cwtl
xor
add
clc
mov
iret
pusha
repnz
es
bound
stc
jle
mov
adc
jg
sbb
xchg
push
mov
xor
add
enter
movsb
add
aam
dec
dec
mov
mov
mov
inc
arpl
dec
sbb
jne
andb
push
daa
stc
dec
cmp
mov
dec
out
jo
les
shrb
fwait
mov
mov
xchg
lock
aad
xorb
insl
and
mov
or
pop
inc
xor
lret
loopne
mov
cmp
dec
mov
ret
jo
xchg
aaa
rorl
mov
fmuls
cld
aam
jmp
xchg
or
mov
imul
call
pop
and
jg
or
adc
cmp
adc
loop
xlat
icebp
mov
add
daa
ljmp
outsb
bound
add
cmp
cld
inc
mov
loope
out
xchg
mov
int3
clc
movb
daa
or
sub
shrl
jnp
push
xor
int3
cwtl
xchg
scas
aaa
xchg
neg
inc
jnp
lahf
jp
ret
mov
in
dec
dec
popf
mov
test
add
lcall
jp
lds
sub
xlat
shll
mov
jo,pn
push
loope
jmp
jl
cmp
in
jmp
mov
and
enter
dec
mov
es
mov
daa
cmp
icebp
cmp
inc
jno
push
loop
mov
push
imul
inc
or
jb
jp
dec
popf
jbe
ss
das
fcoml
daa
repnz
movsl
jae
sbb
out
mov
mov
pop
inc
ds
jb
fdivrs
fdivrs
sub
mov
jo
sbb
and
orl
mov
sbb
pop
sarl
push
push
sbb
dec
or
mov
and
pop
pop
push
inc
fists
fisttpll
jl
jmp
scas
xchg
ja
or
js
rclb
loopne
xor
ja
popa
mov
xchg
xchg
stos
fs
fnsave
daa
rcrb
xchg
and
lret
pushf
aam
cs
test
push
inc
push
aas
push
js
add
push
insb
pop
mov
imul
mov
push
mov
jle
and
mov
or
rol
xor
sub
cwtl
adc
inc
sbb
notb
or
cmc
fcoms
xor
scas
negb
stos
fcmove
icebp
mov
pop
jne
push
lock
pop
push
decl
add
in
push
mov
js
hlt
lea
shll
insl
xlat
ss
mov
inc
and
lea
rclb
lret
call
push
clc
xor
outsb
call
out
jo
add
stos
rolb
mov
int
cmp
sbb
xchg
dec
sbb
nop
dec
mov
xchg
jo
cli
sub
or
pop
push
jbe
mov
icebp
cmc
mov
mov
cmpsb
jecxz
cltd
cli
ret
dec
loopne
adc
sbb
xchg
xchg
or
push
pop
jge
outsl
lds
jl
cld
test
cmp
mov
daa
sbb
mov
jbe
test
and
jb
push
cmp
aam
jne
or
pop
fldenv
sbb
fcompl
mov
leave
mov
cmp
jne
lods
insl
dec
daa
pop
mov
inc
aad
and
sub
mov
stos
and
mulb
cwtl
jecxz
xchg
outsb
inc
addr16
ja
jl
and
push
or
cmpsl
sbb
xor
dec
sub
insb
fnstenv
add
imul
xor
xorb
loope
movsl
fisubrl
lret
je
ja
aaa
xchg
mov
idivb
loope
stos
push
insb
ret
pop
lret
cmp
adc
inc
mov
cmp
into
and
xchg
push
fiadds
fstpl
xlat
push
adc
cmp
jne
fidivrl
sti
mov
je
sbb
and
int3
mov
iret
out
adc
sbbl
fcom
and
mov
jbe
rclb
mov
nop
int3
mov
es
ds
mov
jp
into
cmpsb
bound
fcoms
movsb
push
push
lods
mov
sbb
aad
je
adc
daa
je
dec
fwait
sub
sbb
push
pushf
add
xchg
push
jg
fwait
push
sub
adc
test
cmpsb
mov
jnp
jecxz
daa
mov
dec
dec
aam
sub
les
add
mov
sar
xchg
test
aad
jnp
sbb
xor
dec
add
repnz
jge
cltd
push
insl
lock
imul
mov
sbb
sub
bound
out
lret
lds
mov
pop
subl
iret
ja
mov
add
cli
jle
pmaddwd
je
fndisi(8087
in
jno,pn
aaa
lock
mov
out
fwait
jmp
ds
negl
mov
jb
xchg
xchg
mov
loope
jbe
inc
pop
xacquire
in
loope
imul
arpl
cs
test
pcmpgtd
je
stc
daa
push
jb
sub
shll
ror
cwtl
inc
jns
inc
jp
in
pop
ret
imul
test
inc
lahf
out
dec
adc
mov
into
cltd
and
sub
daa
loope
pop
dec
add
mov
or
and
push
aas
add
loop
xor
or
test
or
les
cmp
repnz
fs
shl
jne
adc
ja
or
xchg
not
fidivs
push
sti
pop
dec
push
test
xchg
sub
and
das
mov
jg
adc
scas
sub
push
and
repnz
insb
jl
out
je
mov
sbb
and
xor
push
jg
sub
inc
fcomip
xor
adc
and
sbb
lock
sbb
sti
je
data16
ret
call
sub
outsl
cmp
cmp
subb
imul
jg
sbb
jg
adc
jnp
jge
fsts
and
movsb
or
jb
sub
lods
hlt
jae
pushf
mov
xlat
push
pop
mov
add
icebp
addr16
bound
ds
and
jecxz
enter
sub
adc
xlat
mov
mov
pop
add
mov
pop
jl
jae
bound
mov
leave
ret
stos
jecxz
xchg
pop
fcomp
inc
xor
loop
mov
in
mov
in
inc
push
stos
icebp
out
fistl
mov
mov
or
sub
mov
or
push
lods
jo
xchg
dec
add
inc
xchg
sbbb
cmp
mov
lret
sti
add
mov
push
ror
pop
dec
cwtl
gs
cld
ret
iret
repnz
push
dec
or
fildl
ds
ljmp
jmp
cmpsl
inc
fs
leave
sub
out
push
ret
outsb
pop
sub
and
jmp
popf
fsubrp
lcall
ret
rcll
inc
mov
jbe
mov
push
fmull
out
daa
imul
dec
xchg
enter
mov
push
mov
test
mulb
dec
movsb
mov
cltd
outsb
mov
outsb
imul
cmp
cmp
jne
jge
push
push
cltd
adcb
outsl
les
or
add
xchg
lds
sbb
popf
or
leave
jb
sub
jo
dec
pop
movsb
dec
pop
sub
imul
dec
sbb
movsl
inc
pop
jo
pop
adc
ds
xchg
and
inc
xor
jp
cli
mov
mov
cld
xchg
sahf
or
mov
xor
ja
popw
lods
cmc
mov
jmp
xchg
sub
sbb
add
dec
inc
ja
xor
aam
cmpsb
stos
xor
push
enter
outsl
dec
cltd
lods
je
out
or
mov
mov
mov
imul
and
pop
adc
test
dec
ljmp
in
sub
mov
sub
pop
bt
fildl
mov
mov
adc
mov
mov
xlat
dec
xchg
repnz
scas
clc
push
rorb
and
or
sub
imul
xchg
lahf
xorl
fiadds
leave
lea
push
or
outsl
int
sbb
fimull
sub
sarb
shrb
push
push
leave
adc
call
fucomi
ffreep
pop
fisubl
mov
cs
sbb
or
cmpsl
adc
push
mov
dec
jle
jne
insb
cs
das
xchg
test
mov
mov
fsubrp
sub
dec
xor
loop
in
insl
ret
jno
or
push
lahf
lahf
call
into
mov
movsl
jnp
stc
popa
cmp
mov
out
jbe
xchg
fildll
and
push
xor
dec
adcl
and
xor
sbb
hlt
mov
dec
filds
ja
aad
mov
int3
inc
and
imul
pop
jmp
fs
lret
aas
push
addb
les
and
xchg
cwtl
add
outsb
sub
test
mov
mov
les
es
gs
or
insl
jl
mov
lahf
mov
sub
gs
dec
maskmovq
mull
fisttpll
xchg
cmp
dec
jnp
inc
rcrb
and
lock
aaa
or
cwtl
xchg
aam
popf
push
add
scas
mov
sub
xor
push
push
cmp
ljmp
ret
dec
or
cmp
or
inc
movsb
sbb
xchg
adc
add
cwtl
ficoms
and
xor
pop
mov
xor
jp
mov
dec
aaa
popa
dec
pop
mov
mov
mov
aad
int3
cmp
cmp
outsl
pop
cmc
mov
lds
cmpsb
dec
push
mov
inc
dec
and
dec
or
jmp
aad
dec
mov
stc
das
sub
andb
mov
negb
push
ficoml
push
lcall
xchg
fstps
scas
sbb
adc
push
ficoml
push
or
or
imul
and
xchg
xlat
ds
ljmp
call
or
lcall
sti
std
stc
outsb
mov
sti
inc
lds
lret
lret
mov
outsl
rep
es
stc
mov
cltd
scas
sub
cmpsb
add
jns
fdivs
pop
adc
xlat
imull
gs
xor
pusha
sbb
jno
jl
fistl
inc
adc
sbb
xor
das
jg
jae
xchg
fmul
xor
fsubl
ret
dec
jle
pushl
arpl
sub
sub
mov
inc
daa
push
pop
inc
aas
cltd
hlt
mov
fidivrs
push
mov
aaa
and
daa
mov
mov
or
cmc
pop
mov
mov
dec
xor
shrl
cmp
cld
pop
push
push
cwtl
sahf
loope
pop
js
xchg
jp
out
test
inc
sbb
pop
sbb
aad
mov
mov
or
je
test
jmp
ss
mov
pushf
scas
insl
push
push
sub
inc
inc
fwait
int3
fisttpl
decl
jl
jbe
sbb
adc
aas
add
mov
nop
into
add
aam
mov
jbe
and
movsb
shll
mov
lods
arpl
bound
leave
sub
or
jle
sahf
test
mov
cmpsl
mov
sbb
scas
push
cs
pop
int
jp
sub
xchg
ljmp
jecxz
add
mov
xor
insl
mov
mov
xchg
rcrl
mov
fs
jp
add
xchg
xor
in
scas
pop
cs
add
cmp
pop
sub
lock
dec
arpl
mov
jmp
stc
out
lods
push
jmp
push
ja
add
dec
jge
sub
lods
and
das
push
popa
lods
cmp
movsl
pop
sub
mov
sub
mov
scas
pop
push
xchg
cs
cmp
rolb
xchg
popa
push
xor
mov
push
mov
js
xchg
sbb
mov
int
or
fiadds
jle
lret
out
hlt
push
lods
lock
mov
movsl
and
adc
stos
mov
xlat
mov
popa
popf
adc
push
pusha
fcom
push
movsl
mov
cli
jmp
adc
out
jmp
insb
or
addb
mov
add
xor
sub
scas
jle
xchg
sub
mov
jp
push
loop
mov
mov
dec
push
xor
push
imul
subb
pop
movsl
pushf
xchg
adc
xor
repnz
loopne
mov
mov
out
xchg
loope
sub
add
inc
bound
test
jecxz
outsl
pop
mov
adc
add
sub
jg
aaa
cmp
scas
mov
lret
aam
cmpsl
out
and
roll
rcll
and
std
pop
mov
cmp
pusha
mov
xor
push
inc
pop
iret
and
das
pushf
ja
incb
inc
mov
aas
shrb
arpl
or
pause
bound
fwait
stos
add
and
in
test
push
out
jns
rcrl
mov
into
xchg
mov
mov
pop
lods
pop
fisubrs
adc
lods
std
dec
out
sbb
mov
ret
dec
sti
mov
ret
mov
push
addb
lahf
mov
cwtd
jge
dec
cmp
notl
sbb
orl
pop
add
rcr
add
std
push
call
cmp
or
jge
and
hlt
mov
les
inc
or
mov
testl
sbb
jae
cwtl
scas
sub
mov
lods
stc
cmp
xor
fldenv
lcall
inc
call
mov
xor
imul
leave
sbb
xchg
stos
insl
mov
lret
xchg
dec
outsl
insb
iret
mov
aad
or
ret
nop
dec
adc
jl
fwait
loop
cmp
and
sbb
or
mov
clc
dec
ljmp
mov
mov
xchg
add
fmuls
in
shll
jno
and
adc
fwait
dec
inc
sub
nop
cltd
jmp
cmp
orl
and
nop
fadd
subl
pushf
xchg
ja
cmp
fcmove
mov
inc
dec
fists
in
pop
sti
push
mov
jnp
mov
add
adc
test
idivb
mov
dec
xor
adc
ds
pop
push
dec
cld
push
dec
mov
jbe
sub
js
mov
sub
and
inc
test
xchg
mov
movsb
fimull
cmp
mov
inc
mov
insl
es
out
lret
pop
adc
and
cmc
subb
jmp
cs
add
sub
cmpsb
xor
roll
pop
push
or
fnstenv
push
es
int3
ret
jl
sbb
push
pop
outsl
mov
sub
cmp
dec
cli
adc
add
dec
cmpsl
xchg
lods
adc
jecxz
loop
add
enter
push
pop
lea
adc
inc
pop
cli
adc
ficomps
or
shlb
dec
jle
popl
out
lods
pop
pop
adc
call
push
pop
and
xchg
jns
and
push
sub
cmc
sbb
pop
mov
lods
add
push
int
xchg
cmp
out
out
pop
xor
pop
cld
or
xor
xchg
nop
pop
inc
adc
mov
cmp
mov
jne
pop
pop
or
jno
jge
sbb
and
daa
mov
dec
fstpt
adc
jmp
cmp
mov
jno
cmpsl
jp
and
inc
inc
dec
or
je
daa
xchg
loop
fnstsw
mov
subl
xchg
ss
movq
mov
add
jbe
lcall
andl
push
enter
mov
popa
sbb
pop
jecxz
pop
inc
xorl
roll
or
pop
sbbl
push
das
cmp
cmpsb
insl
in
cmpsb
mov
mov
movl
xchg
xor
jl
xchg
adc
push
inc
xchg
pusha
pop
jl
adc
shll
stos
pop
pop
cmp
out
fildll
xor
push
fdivrs
pop
jmp
inc
sub
out
lret
pop
inc
add
jo
inc
jg
data16
jp
lods
sub
outsl
ret
xorl
push
fld
add
and
jbe
fnsave
mov
jmp
xor
imul
push
ficoms
push
dec
cmp
or
push
insb
pusha
or
dec
scas
shrl
nop
fistpl
arpl
enter
dec
sbb
aas
repz
mov
and
dec
xor
mov
dec
xchg
sub
xor
dec
mov
xchg
loop
ret
fadd
lret
ja
add
out
pusha
pop
adc
iret
mov
jbe
sub
mov
aas
in
cmc
addb
inc
adc
dec
rcrb
mov
loop
dec
inc
sub
mov
pop
js
push
mov
mov
pop
push
insl
vpcomub
inc
rcrb
sbb
xor
mov
mov
ds
cmp
scas
xchg
outsb
shl
push
pop
fwait
lahf
or
or
jp
mov
inc
inc
inc
add
ss
jbe
dec
push
mov
loope
loope
out
in
sub
cmp
pusha
add
xor
shl
mov
xor
sub
cmpsb
imul
push
xor
rcl
lret
dec
or
and
leave
mov
and
mov
shl
lcall
push
bound
fdivl
cmp
or
lret
cvtps2pd
mov
sbb
push
push
mov
out
sbb
xchg
xchg
jge
gs
clc
pop
xchg
pop
pop
fsubrs
fistps
das
pop
mov
cmc
push
dec
out
sub
dec
je
ljmp
pop
sbb
test
testb
outsb
mov
imul
pop
mov
push
xor
xor
aas
cmp
ret
mov
jns
jp
push
or
mov
sub
sbb
rcr
xchg
stos
push
dec
movsb
fstpl
sbb
iret
mov
mov
loope
js
cmp
cltd
mov
inc
cmp
xor
sbb
xchg
imul
fninit
shlb
popf
aad
cmpsb
adc
iret
aad
sahf
mov
or
mov
sub
popf
pop
xor
mov
push
mov
mov
hlt
sub
fld
mov
jbe
in
inc
sub
pop
mov
inc
inc
shl
push
dec
out
sbb
scas
dec
in
push
rolb
push
add
ror
xlat
pop
test
mov
push
es
sub
mov
adc
ja
mov
cltd
enter
push
mov
add
cmpsl
dec
fiadds
dec
xor
or
pop
loop
rcrb
mov
inc
mov
mov
sub
pop
mov
sarl
dec
push
mov
loope
pop
popl
sbb
jmp
lahf
outsb
dec
mov
inc
jo
inc
repnz
shlb
lcall
inc
dec
mov
lods
pushf
loop
scas
push
lea
xor
repz
std
inc
or
ss
bound
lahf
outsl
inc
cmpsl
jp
sti
mov
sbb
jbe
inc
fwait
lret
jb
jns
mov
inc
or
mov
jmp
fadds
stos
pop
lahf
mov
sahf
push
fsubrl
jecxz
mov
aaa
sbb
popf
aad
fbld
mov
dec
or
inc
xchg
shrl
loop
pushf
sub
les
sub
rolb
mov
out
cli
mov
and
ret
out
xchg
or
mov
test
popl
test
mov
lds
mov
sbb
cmp
or
xchg
pop
dec
jb
out
outsb
mov
test
mov
push
xchg
incl
push
jp
jp
arpl
mov
or
daa
push
sub
fs
mov
sub
adc
lret
jae
pop
ret
add
clc
sbb
cmc
inc
adc
into
into
sbb
es
iret
negl
sub
xchg
dec
mov
jecxz
sbb
mov
insb
add
subb
xor
mov
mov
or
cmpsl
mov
and
stos
fdivl
sti
fdivp
loop
repz
repnz
cmc
fcmove
mov
scas
test
loopne
add
mov
in
int3
xchg
cmpb
jae
loop
lock
xchg
xchg
xchg
shrl
int3
or
xchg
shl
fnsave
sbb
xor
pop
cmpsl
mov
fldl
test
mov
movl
rolb
imul
sub
jmp
aad
lods
mov
in
pop
icebp
sub
or
popa
jp
mov
pop
xchg
sahf
inc
stos
or
inc
mov
or
movsl
sbb
mov
loope
gs
pop
add
iret
lods
and
out
mov
shl
or
dec
or
data16
stos
and
sti
xchg
mov
push
paddd
shlb
mov
test
jno
sub
mov
push
cmp
fnsave
cmp
cmp
pop
push
ds
xchg
xor
inc
movsl
mov
cmp
push
jns
lock
cld
idivb
mov
nop
xor
fisubl
sbb
push
cmp
hlt
inc
sti
push
push
xchg
fisttps
arpl
sub
adc
jecxz
cwtl
shll
lcall
jecxz
sarl
je
lock
xor
dec
sti
lahf
inc
jb
xchg
jne
out
repnz
dec
dec
inc
ds
jle
aad
and
jb
jle
xchg
out
loop
es
loop
sbb
lret
lds
lock
ja
mov
insl
xchg
lea
xlat
insl
mov
mov
ds
mov
and
add
call
add
mov
push
adc
dec
sub
dec
pop
add
jg
pop
cwtl
scas
jne
shl
inc
jle
outsl
adc
and
adc
cmpb
jge
xor
xchg
leave
inc
xchg
mov
test
cmp
repnz
push
rol
bound
push
rcl
mov
push
sub
dec
fnstenv
mov
inc
scas
mov
adc
sub
cmp
icebp
sbb
add
insl
stc
sbb
inc
dec
xorl
pop
mov
and
add
push
push
adc
and
mov
cmp
sbb
jae
mov
xlat
lahf
mov
pop
lds
push
or
jmp
mov
sub
jmp
dec
sbb
adc
push
xor
into
pop
lahf
push
outsl
jp
dec
popf
lcall
xor
push
xchg
stos
je
add
jae
iret
and
dec
mov
stc
pop
adc
sub
lret
and
xchg
int3
icebp
jge
mov
out
sub
xor
movsl
jns
jno
imul
push
xchg
ss
fstps
push
movsl
ds
sets
pop
xchg
je
dec
xor
test
cwtl
imul
test
inc
mov
mov
dec
sub
clc
xchg
test
inc
xchg
cmp
es
aaa
ret
lea
into
loope
in
xchg
jmp
cmpsl
or
sub
push
in
ret
adc
outsb
pop
pop
test
roll
mov
add
stos
adc
mov
mov
lea
int
mov
sbb
pop
mov
fstpt
add
dec
es
sahf
xor
jne
and
xor
adcb
popa
into
iret
in
movb
sbb
fisubl
cmpb
cmp
adc
push
dec
mov
inc
mov
dec
jecxz
movsl
popa
sbb
xor
xor
inc
lcall
xorl
scas
or
mov
pop
dec
movzwl
xchg
hlt
insb
in
pop
popf
push
les
lcall
xchg
sub
push
in
adc
enter
mov
xchg
and
jg
std
jno
dec
push
lret
aas
mov
int
mov
pop
mov
sub
xor
mov
sub
mulb
mov
fimuls
pop
in
aaa
cmp
sbb
and
pop
pop
addr16
popf
pop
and
cmpsb
sbb
in
mulb
jbe
inc
sbb
outsl
jl
enter
xchg
dec
dec
div
shlb
fcmovbe
in
inc
dec
mov
adc
jmp
dec
out
pop
fwait
sub
mov
fstl
cmp
sub
cli
mov
or
aam
jp
ljmp
cmp
stc
jb
imul
je
cmp
clc
repnz
icebp
pop
jge
xchg
push
inc
inc
sbb
repnz
cmp
cmp
in
daa
cli
inc
repz
mov
insl
push
dec
mov
lahf
sbb
into
inc
xchg
push
or
lds
sahf
or
cmp
loop
popa
mov
cli
push
das
addl
aam
push
mov
addr16
frstor
inc
mov
in
iret
pop
dec
jg
adc
adc
sbb
push
add
adc
sahf
lret
shl
sbb
jae
fs
divps
cmpl
rcll
shl
rcr
sub
fstpl
mov
cmp
add
stc
pop
mov
repz
rcll
rclb
es
int3
xlat
mov
cmpsb
adc
xchg
xchg
jae
movl
dec
daa
jae
push
mov
and
ja
xchg
fstl
inc
fwait
xor
push
and
mov
ds
sub
fisubrl
fldt
cmp
or
pop
cmp
push
dec
es
pop
mov
jmp
jle
push
xchg
cmp
jno
push
xchg
push
xchg
rcl
movsb
ret
dec
or
arpl
clc
pop
sahf
dec
add
sub
push
sarb
dec
pop
out
and
jne
mov
mov
adc
in
mov
mov
hlt
dec
cmp
xlat
push
sub
ja
ja
dec
mov
pop
pop
push
and
bound
dec
shll
inc
dec
jnp
add
jge
jbe
mov
movsb
mov
lods
cmovo
loop
jnp
orl
fucom
sbb
jle
adc
in
xchg
loopne
scas
scas
pop
aam
insb
aam
je
push
jo
aas
test
add
inc
int
xchg
sub
push
pop
jecxz
inc
or
mov
in
outsl
sahf
mov
lret
cmp
loop
gs
adc
and
scas
jmp
mov
pusha
testl
es
cltd
aas
ficoml
leave
or
movd
into
mov
cs
sbb
pop
ret
mov
jecxz
lock
push
add
and
addr16
cli
das
xchg
stos
xor
push
divb
lahf
xor
repnz
sub
sbb
leave
lods
dec
cld
fnstcw
orl
test
jns
xchg
dec
mov
outsb
loopne
cs
dec
cmp
add
pop
jge
mov
mov
pop
sub
inc
ja
sub
cmp
mov
data16
dec
dec
adc
outsl
xchg
jb
int3
icebp
add
adc
mov
subb
xchg
mov
push
add
xchg
aas
lea
sub
dec
jns
outsb
out
dec
call
jecxz
mov
jle
popf
push
fildll
and
jb
mov
and
jae
clc
pop
popa
fists
mov
push
sbb
fidivs
bound
incl
rcrb
popa
decb
push
fdivs
xor
dec
jnp
xor
inc
in
mov
fs
insl
add
xor
dec
loopne
jnp
pop
lea
sub
jecxz
xchg
mov
and
lock
and
rcrl
call
mov
stos
clc
das
pop
add
faddl
sub
cs
popa
and
jge
leave
loope
adc
inc
pushf
shlb
sbb
mov
cwtl
cltd
lock
loope
stos
fwait
xor
add
lock
scas
mov
jbe
leave
sbb
pusha
xchg
inc
fs
and
mov
lret
stos
inc
mov
dec
mov
xchg
loopne
lahf
sbb
sahf
lahf
xor
cli
repnz
push
shrl
ja
pop
push
orb
test
push
in
push
jmp
in
xchg
je
jbe
int
push
jno
mov
stos
cmpsl
test
lret
pusha
aaa
nop
dec
sbb
ljmp
gs
out
jl
cmp
push
push
popf
cmp
jns
idivl
jns
lock
ret
inc
roll
scas
inc
les
push
sub
test
cmp
jnp
shll
ss
or
ljmp
dec
fldcw
push
xchg
les
mov
jg
mov
test
in
jb
out
mov
sub
dec
lods
jo
popa
out
xor
xchg
xchg
push
imul
mov
dec
and
loop
inc
rol
xchg
push
push
xor
clc
add
scas
iret
mov
and
cmpb
adc
pop
jge
cmc
ds
mov
out
loop
push
dec
cltd
lret
mov
dec
pusha
aad
adc
repnz
scas
pop
aas
scas
mov
jae
stos
sti
ja
pop
jl
jo
jmp
push
adc
les
insb
aam
cltd
cmp
xchg
mov
arpl
repz
call
adc
push
loope
dec
out
ret
push
cmc
jae
and
inc
cmp
hlt
and
dec
mov
xor
js
push
adc
xchg
xor
inc
push
mov
sti
mov
and
jne
push
push
add
or
shll
js
loop
push
or
mov
jg
arpl
xchg
jge
and
div
ret
xchg
xor
sbb
pop
call
inc
xor
out
fwait
popa
xchg
loop
inc
sarb
adc
pop
lods
push
movsb
aad
sbb
mov
xchg
mov
and
movsl
aaa
mov
movsl
dec
shr
mov
jg
fcompl
mov
lock
sub
int
push
sbb
inc
test
rcrb
pavgb
cmp
jmp
fisubrs
and
cmpsl
sbb
fimuls
rorl
jmp
fs
movsl
and
mov
stos
lret
mov
sbb
adc
scas
push
das
pusha
mov
loopne
xor
push
mov
hlt
xchg
lahf
jae
inc
mov
enter
lea
push
nop
adc
adc
cmp
jmp
sub
repnz
adc
and
lcall
testb
cmp
xchg
out
lret
lcall
jecxz
xchg
jge
pushf
cld
cmp
or
and
lods
cmpsb
push
ret
into
push
lret
xchg
lds
sub
mov
mov
js
sbb
popf
mov
arpl
dec
add
jb
mov
imul
push
cmp
imul
into
sub
cmp
dec
daa
loop
jns
or
clc
cmpsb
imul
dec
push
sbb
lock
sbb
loopne
push
lcall
lret
cmp
cmpsl
or
jle
cwtl
cmpsl
mov
sbb
lea
inc
bound
jo
mov
aaa
pusha
popa
cmp
repnz
lcall
cwtl
iret
les
aaa
lret
shll
lret
daa
in
test
fidivs
outsl
pop
inc
jae
cmp
lret
pop
sbb
lret
pop
clc
iret
pop
lock
in
push
mov
daa
pop
jl
fs
cmpsb
mov
fs
mov
popf
shlb
push
mov
inc
ss
sub
inc
imul
lcall
test
shrb
cmp
mov
mov
in
insb
in
les
pushf
negb
sahf
pop
pop
imul
dec
sar
mov
or
mov
js
out
pop
lea
add
add
pop
andb
pop
andl
mov
into
cmp
lods
ret
or
test
cwtl
cli
pop
sahf
jle
imul
mov
sarb
pop
xor
cltd
arpl
into
divl
ljmp
out
enter
es
cmpsl
popa
sub
sub
sub
pop
xchg
jo
fistpl
push
fstps
mov
sbbb
xchg
fs
or
hlt
sbb
push
add
je
jecxz
rdtsc
or
stos
nop
sbb
jne
jle
nop
pop
mov
cltd
adc
cwtl
cs
clc
jnp
dec
and
popf
inc
mov
and
insb
nop
jl
or
repz
jecxz
mov
fisttps
imul
cltd
add
fstpt
icebp
das
push
mov
mul
sti
mov
dec
cmp
jbe
adc
mov
gs
fnstsw
arpl
or
mov
inc
push
pop
sub
or
stos
cmp
daa
lods
decb
dec
add
or
mov
and
cwtl
test
insb
or
inc
rorl
inc
daa
popf
clc
call
test
and
stos
lret
loopne
daa
imul
adc
cmp
or
sub
pop
mov
fnsave
push
push
xchg
sbb
fs
popa
pop
loopne
je
push
arpl
fisttps
mov
mov
or
xchg
adc
dec
les
jno
scas
push
cvtps2pd
fists
pushf
or
loop
mov
popf
cwtl
push
insl
std
pop
sbb
cmp
mov
ja
rcr
pop
ret
xchg
mov
add
ret
sub
pop
divl
mov
mov
dec
mov
push
xchg
int3
or
xor
subb
dec
push
lret
xchg
push
aaa
fisubs
pop
mul
jmp
in
pusha
xchg
test
dec
fidivrs
mov
sbb
xchg
pop
mov
jnp
jecxz
rcll
test
pop
fstl
jb
or
mov
imul
daa
pop
mov
sub
or
loope
mov
ficompl
dec
test
and
test
daa
fcom
cmp
xchg
cmp
add
imul
fstp
cs
dec
adc
jecxz
pop
in
xchg
xchg
fidivrl
ret
lea
mov
jp
mov
push
mov
sub
dec
xchg
jp
addr16
xorb
xchg
icebp
fidivl
mov
push
or
mov
stos
mov
data16
popl
sub
stc
sub
cmpsl
mov
cmp
je
adc
call
xor
push
scas
lcall
push
in
jbe
outsb
cltd
jle
inc
jne
xchg
and
xlat
mov
mov
push
add
add
pushf
rclb
pop
shll
mov
arpl
xchg
test
sbbl
and
dec
cld
adc
out
push
push
nop
mov
push
push
fs
decb
or
frstor
jbe
gs
mov
mov
push
add
cwtl
fs
cld
push
or
sub
lods
lods
outsl
imul
into
call
leave
adc
ja
push
sbb
inc
cltd
inc
cmp
rcrl
out
scas
js
xchg
lds
arpl
loope
cmp
mov
sarl
stos
das
cs
cltd
sub
jae
je
sbb
push
lahf
popf
pushf
xor
and
cwtl
aaa
cld
addb
js
cs
adc
mov
imul
js
fdivs
fildll
out
outsl
mov
outsl
mov
and
cmp
mov
xchg
push
out
mov
add
jg
in
and
xchg
aad
sbb
int
fsubrs
popl
sbb
mov
fsts
push
call
ljmp
rcll
decb
mov
enter
pop
pusha
stos
xchg
ja
and
adc
in
mov
pop
sub
icebp
clc
push
push
adc
and
dec
les
negl
push
dec
mov
sub
shlb
cmp
xchg
nop
jecxz
jno
xchg
lcall
xlat
xor
push
out
or
pop
push
mov
mov
lods
pop
jno
clc
pusha
xlat
shll
or
lods
stc
icebp
or
adc
fnstenv
pop
call
aaa
repnz
cwtl
xorl
movsb
sub
lea
inc
and
faddl
cmp
mov
rcr
inc
add
jno
push
jmp
xor
das
aas
sbb
in
hlt
cs
daa
sar
sti
lock
xchg
shll
push
loop
out
mov
adc
popf
mov
in
xchg
cmpsl
fs
stos
xchg
fucomi
inc
int3
jmp
mov
jecxz
and
sbb
and
shr
mov
jmp
ja
pop
movsl
and
fs
scas
cwtl
push
dec
outsb
subb
hlt
mov
fwait
stos
mov
mov
xor
hlt
aad
lret
dec
sbb
popa
xchg
ficomps
scas
and
jns
cmp
or
outsb
push
cmp
sub
fldl2t
jne
dec
divl
xchg
rolb
inc
lret
popf
rcr
call
adc
fistpll
or
lods
xchg
mov
sub
cli
add
leave
iret
cltd
das
xorb
jno
mov
mov
insb
in
test
sub
and
inc
leave
sub
ret
or
inc
mov
nop
in
ss
jmp
sub
adc
test
int
scas
sub
lock
lcall
cmp
mov
and
movsb
or
xor
jno
lret
push
shlb
pop
push
rcr
ja
mov
push
das
cwtl
adc
aam
and
pop
jno
and
pop
daa
cmpb
mov
sbb
int
inc
lret
jle
mov
push
gs
imul
fs
pop
jecxz
pop
call
and
dec
xchg
pop
mov
push
adc
mov
push
enter
and
jp
lods
fucom
jecxz
call
xchg
or
rol
inc
fcmovnu
pop
imul
push
sub
insl
and
add
cmc
jnp
out
jmp
jmp
mov
sub
adc
lods
lcall
dec
and
out
sbb
and
aas
loop
iret
outsl
inc
pop
cs
adc
negl
ljmp
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
movl
call
mov
push
push
push
push
mov
call
test
jne
push
push
call
push
push
push
call
push
push
push
push
push
call
test
je
push
call
mov
call
mov
cmpl
jne
push
call
add
push
call
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
sub
push
mov
push
push
call
push
push
call
push
push
push
call
lea
push
call
call
cmpw
pop
push
je
push
push
call
push
call
add
call
jmp
push
push
call
incl
lret
fucomi
xchg
iret
or
jle
repz
clc
fucomi
xchg
lret
or
ds
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
xor
es
adc
push
inc
jo
and
jae
push
iret
pop
adc
xor
stos
fwait
clc
lods
jp
adc
outsl
sbb
stos
scas
leave
cmc
scas
sub
sub
xor
adcb
rolb
push
fs
fucomi
xchg
lret
or
jns
lock
mov
pop
add
jl
and
dec
into
test
add
in
or
pushf
mov
mov
ret
push
push
cmp
jecxz
dec
sbb
push
sahf
jno
rol
mov
pop
add
jge
push
mov
pop
roll
in
push
addr16
int3
and
xchg
insl
je,pn
hlt
jmp
jecxz
xor
adc
mov
lret
or
jle
or
pop
inc
les
lds
mov
fucomi
xchg
sub
and
pop
inc
sub
jmp
jle
or
pop
std
fucomi
xchg
or
jle
or
pop
add
xchg
lret
or
out
or
inc
fucomi
xchg
into
or
jle
or
pop
inc
inc
shr
xchg
iret
or
ret
fisttps
jnp
inc
les
xchg
fisttpl
outsb
out
or
pop
push
xchg
lret
or
jle
sbb
pop
inc
fucomi
xchg
lret
or
jle
bound
sub
fucomi
xchg
sti
add
mov
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
je
mov
or
pop
in
jnp
inc
fcmovnbe
xchg
lret
or
jle
pop
sbb
xchg
jmp
jle
or
mov
hlt
lret
or
jle
or
pop
jo
fucomi
lret
or
inc
ljmp
jmp
jle
sub
pop
mov
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
jle
or
pop
inc
fucomi
xchg
lret
or
in
push
pop
inc
aam
jmp
sbb
and
fstl
sub
add
push
push
or
sbb
xor
pcmpeqw
lret
xchg
in
scas
scas
sub
sbb
pop
neg
push
add
fidivl
cmpsl
jle
sbb
xchg
jns
mov
dec
nop
test
jge
iret
inc
fneni(8087
addb
xlat
mov
jae
repnz
lods
jge
mov
out
cmp
mov
adc
and
push
mov
out
negb
push
xor
pop
stos
inc
and
into
movsb
and
sub
mov
ljmp
sbb
jne
push
push
out
aad
and
shlb
rorb
sbb
sbb
adc
cmp
int3
mov
add
pushf
repz
mov
push
idivb
cltd
lahf
mov
sbb
and
push
mov
adc
push
pusha
xchg
pmuludq
or
imul
rcll
ret
push
pop
and
cs
aaa
in
push
push
xor
fimull
mov
ret
xor
xchg
jmp
jmp
jge
push
rorl
adc
sbb
inc
jecxz
iret
xchg
insl
stc
cwtl
mov
mov
js
mov
data16
shrl
xlat
jmp
mov
stos
and
xchg
sbb
lcall
ss
adc
xor
dec
rcl
pop
cmc
mov
dec
mov
cltd
push
sbb
dec
cs
jae
push
out
stc
movsb
hlt
sub
imul
rcrb
jne
pop
loopne
cmp
jge
sub
xor
pop
sahf
lahf
lock
push
repnz
cltd
sub
cmovno
mov
inc
inc
imul
xchg
outsb
pop
fs
insb
xor
lea
fldt
or
rorb
dec
lds
hlt
stos
dec
ret
and
sbb
rcrb
add
jle
scas
outsb
lea
mov
or
sub
mov
adc
pop
dec
sub
push
das
add
clc
in
addb
ljmp
movsl
loop
pop
dec
xor
ret
mov
sub
mov
notl
or
stos
daa
lret
aad
out
pop
xchg
jecxz
or
fsts
xor
dec
push
popf
loope
jl
outsb
xor
nop
mulb
aas
adc
sbb
adc
test
in
aam
push
inc
jle,pn
popf
jg
jo
enter
lock
xchg
mov
sbb
or
icebp
add
jns
cwtl
inc
cmp
mov
xchg
pop
insb
or
and
scas
adc
mov
fisubs
leave
pop
cmp
lahf
adc
adc
add
xchg
int
pop
sub
fnsave
sub
pop
fstps
adc
outsl
pop
sub
xlat
sbb
jne
or
xchg
xor
cld
mov
aad
pushf
std
push
test
es
fwait
adc
lock
adc
fisubrs
cs
pop
push
adc
lcall
jno
lods
push
dec
shll
and
in
sbbb
insl
xlat
js
sbb
xchg
jl
mov
out
ffree
push
das
outsb
sbb
cmp
xor
jp
or
cmp
loop
negl
jae
xor
sub
xchg
or
add
fisttpll
push
mov
and
mov
jae
push
push
cmc
pop
daa
xor
sbb
nop
out
push
fucomi
test
mov
xchg
addr16
rolb
adc
jbe
dec
insb
xor
sub
outsb
subb
sbb
loope
inc
sbb
cmpsb
mov
mov
and
lock
movsb
add
cli
or
jne
mov
mov
and
and
imul
jmp
jo
out
cmp
lods
pushf
mov
mov
ss
sti
push
leave
or
push
jmp
scas
test
adc
adc
cmp
inc
movsl
cmpsl
xchg
xor
test
pop
jnp
call
mov
in
cmc
je
mov
kmovw
or
mov
jecxz
jb
or
cmp
pop
mov
sti
ss
leave
mov
mov
in
cmpsb
je
decb
std
scas
xchg
cmc
inc
movsb
aaa
call
sub
cmp
fimuls
jmp
and
cmp
sarb
dec
cmp
pop
jb
push
mov
mov
out
incl
jp
push
arpl
add
mov
pop
outsl
lods
rcll
dec
dec
out
cmp
int3
in
mov
roll
cmc
xor
mov
ja
cwtl
mov
mov
imul
adc
xor
push
pusha
outsb
sbb
add
push
in
jno
data16
mov
mov
cmc
in
repz
inc
mov
inc
jo
pop
inc
xchg
testl
pop
dec
sbb
sbb
xchg
push
test
mov
xor
mov
aas
bnd
mov
or
clc
adc
xor
sub
lods
push
cld
js
fsubrs
inc
jge
add
jg
ret
push
loop
ja
jae
cli
sbbl
push
push
push
daa
or
sbb
fnstenv
std
or
inc
inc
mov
add
shll
outsb
push
clc
push
adc
add
jns
bound
cmp
in
push
push
call
mov
leave
jnp
fwait
or
xchg
fs
mov
ficompl
mov
mov
jge
push
aam
mov
sub
cmp
les
ljmp
xor
or
mov
jl
cmp
fdivr
sub
add
js
dec
movsb
lahf
mov
cwtl
stos
divl
rdpmc
les
push
cmc
jbe
repnz
mov
inc
push
mov
into
ds
mov
fnstcw
movsb
test
cmpl
adc
add
jnp
in
nop
inc
sarl
punpckhdq
lods
lds
ds
movsb
pop
pusha
bound
into
aas
pusha
scas
adc
inc
mov
mov
xor
mov
test
lea
push
jp
pop
ja
lcall
mov
mov
lods
xchg
repnz
outsb
mov
mov
lcall
jns
mov
pop
mov
sti
jmp
mov
sbb
into
in
arpl
jae
loop
push
xlat
sub
mov
xor
sbb
ja
sbb
add
out
iret
fistpl
fcomip
jne
ds
iret
cmp
cmpsb
dec
aaa
imul
xchg
jo
pop
rdtsc
xchg
jmp
adc
or
sub
push
loope
orb
aas
pop
fcomps
mov
mov
std
in
das
and
push
add
push
addl
outsl
pop
mov
subb
shll
hlt
ss
inc
sbb
out
ficoms
dec
leave
push
daa
push
xor
xchg
rcl
or
pop
pop
xacquire
roll
fcoms
or
lcall
jmp
jmp
sub
das
mov
int
sbb
lods
mov
add
sbb
push
int3
adc
ficoml
adc
shlb
ljmp
fisttpll
fimull
ret
and
xchg
add
mov
outsb
rcll
jg
mov
lods
dec
pop
in
out
pop
test
iret
imul
add
les
xchg
and
rcrl
pop
sbb
addr16
imul
or
lds
out
ja
fstpl
sbb
dec
and
cld
shlb
cmp
xor
loope
shr
rol
xor
pop
or
ljmp
mov
in
cs
popf
mov
sub
cmpsl
repz
jbe
hlt
mov
mov
clc
bound
fstps
mov
cmp
dec
jb
jnp
aas
xor
xchg
outsl
xor
int3
imul
ds
outsb
adcl
and
push
adc
push
mov
aaa
loopne
insl
dec
popa
addr16
lcall
mov
mov
jle
sbb
push
adc
or
pop
xchg
sbb
fbstp
sti
jo
sahf
cli
ljmp
jno
mov
mov
fwait
mov
or
cwtl
hlt
jp
jge
cmpsb
jecxz
sub
mov
out
icebp
test
aaa
sub
js
rorb
or
push
pop
dec
scas
push
push
mov
add
cmp
in
mov
repnz
sub
in
adc
adc
enter
jl
xor
push
mov
pop
test
cmp
scas
scas
loopne
negl
inc
and
ret
sub
sbb
test
push
fistpl
inc
or
scas
cmp
cltd
push
ffreep
jno
sbb
orb
les
pusha
and
and
sbb
fisttpll
dec
cld
push
idivl
sbb
or
mov
pusha
shrl
fistl
ljmp
lret
sub
das
loop
scas
mov
push
push
mov
loope
mov
fs
adc
outsb
pushf
sub
fisttps
aas
fwait
aam
loop
cmpsb
inc
mov
lods
clc
lds
lds
gs
in
mov
dec
ret
add
outsl
clc
pusha
dec
jb
cmc
icebp
out
dec
enter
into
mov
jle
fdivl
jecxz
into
adc
jg
mov
jnp
ret
dec
push
xor
nop
in
jg
xchg
add
repnz
push
jecxz
dec
cmpsb
je
ror
cmpsb
xor
inc
cmp
lods
xor
and
adc
ficomps
aad
orb
add
sahf
sbb
add
push
push
loop
dec
mov
pavgw
aaa
push
or
inc
push
sub
adc
orb
mov
ss
push
stos
jno
scas
xor
lea
stos
ja
jge
cltd
add
jl
ret
sbb
add
in
xchg
ds
aaa
sbb
lahf
pusha
xor
das
pop
mov
inc
mov
call
sbb
push
enter
cwtl
dec
bound
sub
loopne
jge
lahf
push
shl
inc
cltd
adc
mov
test
and
lods
push
sub
fwait
lahf
shrb
stos
in
loopne
rcr
fiadds
mov
fiaddl
call
jae
mov
mov
mov
scas
pop
xor
push
iret
test
adc
cmp
jns
mov
xlat
cmc
testl
shll
xor
jnp
aam
or
push
dec
movsl
les
shll
fcmovu
or
aas
pcmpeqw
xchg
fsubl
pop
shl
mov
mov
ficoml
lock
sbb
sbb
add
inc
cmc
insl
lahf
mov
outsl
jae
popf
or
inc
shll
out
insb
lock
mov
cmpsb
loopne
fiaddl
in
cmp
lods
push
push
testb
xlat
leave
outsb
jg
ret
hlt
mov
pop
aad
dec
push
in
sbbb
int3
dec
neg
add
movsb
outsl
mov
add
jl
adc
outsl
sbb
sete
out
ja
repnz
inc
mov
out
sub
aam
push
and
cld
sbb
cmp
push
lods
stos
pop
pushf
dec
jo
adc
lret
cmpsb
or
imul
cltd
std
jmp
mov
enter
iret
mov
sti
cli
in
fidivl
out
and
lock
sbbl
and
cld
xchg
xchg
mov
jmp
into
fmull
cmp
adc
pop
sbbb
out
sahf
push
lock
xlat
mov
push
lds
cmp
insl
sbb
mov
decl
loop
mov
test
in
lret
add
adc
loope
xor
sub
sbb
dec
cld
mov
sub
jo
cmp
in
lret
or
jns
loope
or
insl
cmp
icebp
std
cmp
int3
inc
subb
rolb
dec
imul
and
add
sub
mov
sahf
insl
or
sbb
repnz
mov
xor
lods
inc
insl
jl
mov
pop
mov
out
and
jle
in
xchg
mov
mov
jecxz
ret
insl
enter
faddp
push
out
pop
dec
mov
cltd
xchg
cmp
fldcw
inc
push
or
stc
in
aad
movsb
jb
das
stos
mov
loope
or
mov
daa
cmpsb
int
gs
test
mov
lret
jbe
and
pop
push
sub
dec
sahf
jnp
dec
cmc
sbb
mov
imul
adc
add
push
and
and
test
mov
adc
push
pop
dec
jnp
dec
push
and
mov
dec
insl
outsl
popf
xchg
xor
pop
inc
mov
mov
inc
setl
xchg
es
fwait
xchg
jle
rcrb
inc
or
push
inc
xchg
cld
push
lret
inc
movsb
ljmp
call
mov
test
repnz
rcr
push
mov
pop
xchg
or
pop
sub
push
ret
add
mov
cmpsb
int3
cltd
test
arpl
loope
mov
je
rcrl
mov
jo
and
jbe
imul
or
adc
movsl
ficomps
mov
ficompl
add
sbb
je
mov
mov
inc
out
pop
lret
jae
mov
jo
inc
mov
xorl
dec
fstpl
ja
push
mov
ds
sbb
ds
xchg
push
scas
out
xor
popf
hlt
ljmp
and
sub
adc
insb
xor
in
or
mov
inc
pop
popa
ljmp
dec
ljmp
pop
movsb
push
sub
inc
fdivrs
adc
jmp
add
cmp
lret
notl
lahf
mov
mov
fisubl
dec
adc
cmpsb
mov
jno
jnp
je
mov
or
inc
jmp
and
adc
and
mov
push
call
push
push
push
call
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
bound
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
bound
nop
bound
mov
add
bound
jo
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
bound
aam
inc
add
bound
hlt
bound
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
arpl
nop
arpl
mov
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
fs
add
fs
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
test
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
test
nop
test
mov
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
test
aam
inc
add
test
hlt
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
test
nop
test
mov
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
xchg
addb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
