push
fistps
lahf
cmpsb
push
dec
add
leave
shlb
cmovl
xchg
add
cmpsl
out
sub
scas
jge
xor
and
mov
push
pop
fidivs
scas
aas
mov
add
mov
mov
lea
popf
pop
mov
xorb
je
sbb
fisttpll
popf
jp
xchg
fisubrs
aam
in
shl
and
adc
cmp
jb
movsl
pop
pop
cmpsb
int
jo
into
pop
clc
push
inc
add
gs
mov
lea
sbb
addr16
push
jl
es
pop
stos
sub
popa
std
inc
gs
shl
inc
in
cli
mov
sti
mov
cld
loope
in
pop
ret
add
dec
mov
mov
imul
xor
out
into
mov
xlat
sbb
lahf
shll
inc
dec
mov
aaa
ficompl
inc
cmp
aas
mov
shll
cltd
fisubl
outsb
stos
jmp
fcoms
push
inc
cmp
aad
rcrb
leave
gs
loop
inc
pusha
lods
aam
addl
movsb
and
rcrl
mov
sbb
shl
imul
in
pop
and
bound
mov
dec
push
add
mov
or
test
add
push
in
mov
movsl
mov
test
das
mov
pop
repnz
daa
test
push
lods
sub
dec
shlb
dec
jb
addl
jns
xor
push
cmp
pop
push
xlat
jmp
repz
lgs
ja
jne
out
int3
mov
scas
mov
pop
aaa
cmpsl
clc
test
outsl
jg
sbb
fcmovb
das
dec
jnp
add
jae
int3
dec
jmp
adc
mov
aas
imul
shrl
xor
js
mov
out
add
cmpsb
ret
shrl
popl
cmpl
in
cli
inc
or
and
and
mov
fcmovne
cmp
jns
sar
xor
mov
icebp
stos
add
dec
cmp
cmpsl
testb
mov
jbe
adc
mov
push
mov
icebp
xchg
mov
pop
lds
cmp
clc
push
and
mov
loop
cld
mov
cltd
mov
inc
or
test
shlb
or
ret
pushf
lahf
xchg
insb
mov
jmp
jae
imul
mov
std
js
xorps
jb
cmp
popf
mov
jb
cwtl
push
aad
daa
push
jmp
shll
lods
push
in
pop
in
add
xor
pop
andl
ss
fistpll
cmp
jb
pop
inc
jbe
dec
icebp
leave
xlat
xchg
push
ds
cmpsl
insb
mov
fs
dec
push
test
push
lds
cmc
pop
lods
cld
popf
mov
iret
ja
scas
out
mov
push
xchg
xchg
xchg
pop
xchg
popa
jl
xchg
pop
inc
sub
cltd
lods
pop
sbb
adc
mov
lods
andw
mov
xchg
rclb
adcl
xchg
loopne
adc
sbb
mov
and
arpl
rcll
icebp
jmp
bound
pop
fimull
jbe
ja
or
or
mov
push
pop
xchg
push
add
adc
pushf
sbb
inc
ficoml
push
dec
mov
fndisi(8087
push
push
mov
sbb
aas
hlt
icebp
push
fstpl
adc
pop
shlb
insl
mov
mov
outsb
and
cmc
sahf
xchg
cmp
nop
flds
leave
xor
push
aas
and
inc
add
fidivrs
insl
sbb
mov
fidivl
cmpb
int
cmp
enter
inc
inc
push
push
dec
shlb
aas
loopne
sub
pop
jecxz
shlb
addr16
hlt
lds
cmc
mov
arpl
aad
cmpl
ret
out
mov
loop
mov
idivl
cs
pop
xor
stos
test
pop
out
add
sub
sub
or
lret
cld
stos
jno
stos
int
add
test
cmpb
inc
inc
ds
ret
lods
mov
xchg
bound
ss
sbb
sbb
pop
test
fimuls
push
mov
adc
pop
notb
mov
and
xor
lret
adc
scas
or
pop
cld
or
push
aam
pop
out
fsubs
xchg
mov
fsubr
insb
shlb
or
into
cwtl
mov
inc
ss
or
ds
pop
xlat
pop
negl
imul
cmp
iret
xorl
push
push
xor
xchg
adcb
ucomiss
into
pop
push
mov
pop
jg
or
sbb
inc
xor
loope
out
dec
stos
call
jns
popa
adc
adc
cmp
sahf
pop
add
sbb
mov
lods
out
cli
and
outsl
jno
jnp
arpl
mov
add
pop
in
pop
shrb
mov
data16
sbb
lock
jl
fldcw
insb
adc
lcall
cmp
sub
sahf
jl
cmp
inc
dec
out
adc
inc
std
xor
stos
mov
ss
fmuls
push
mov
fs
call
out
cmc
xchg
pop
inc
cmp
mov
nop
loopne
sti
loopne
push
mov
add
fildl
call
sub
dec
popf
inc
divl
iret
loopne
outsl
cmp
pop
adc
insl
insl
dec
add
cld
cli
push
push
imul
dec
add
pop
mov
jecxz
cmpsl
sbbl
sahf
loopne
sub
adc
push
jb
xor
jnp
push
fimuls
cmp
adc
adc
mov
pop
or
sbb
adc
adc
aaa
mov
ds
inc
push
test
fldt
icebp
xchg
push
inc
pop
mov
fs
inc
inc
subb
adc
dec
arpl
pop
test
icebp
pop
jns
xor
jl
and
mov
call
pop
rclb
dec
insl
lods
sbb
mov
push
cmc
popa
adc
jne
mov
xchg
fnstcw
popa
or
out
fdivrp
or
jmp
dec
sarb
mov
cmpsl
or
jecxz
inc
push
shrb
dec
call
mov
sbb
les
aam
cmpl
adc
dec
mov
mov
mov
andl
push
cli
enter
lret
adc
dec
adc
out
out
out
lcall
push
popl
jb
jno
rclb
gs
addl
insb
ss
mov
cmpsl
fisttps
pop
or
push
sbb
fnstenv
mov
pusha
imull
dec
and
mov
lcall
fadd
icebp
scas
sbb
ds
push
xor
bound
inc
test
cmp
testb
sbbb
inc
jmp
es
mov
jge
mov
mov
pop
and
lea
in
fstpl
mov
jb
out
enter
dec
lods
ljmp
jp
inc
cmp
mov
mov
adc
mov
insb
jmp
out
imul
xor
dec
ljmp
push
arpl
and
xor
push
jb
pop
adc
dec
aaa
movsl
call
cmc
add
mov
push
arpl
xor
push
adc
test
mov
scas
hlt
inc
mov
out
mov
dec
imul
mov
out
adc
or
add
cmp
iret
js
gs
lcall
out
and
into
xchg
loopne
lret
jno
mov
and
ja
jp
and
jecxz
sbb
bnd
jg
lea
nop
pop
mov
jl
outsb
ja
sbb
es
je
ds
mov
es
js
jp
subb
and
push
and
int
mov
and
cmpsl
leave
inc
xor
mov
mov
jge
test
loopne
int3
ret
mov
int3
fsubp
outsb
ja
jg
idivb
push
or
shl
xor
inc
add
in
das
jnp
std
inc
pop
or
lods
mulb
in
outsb
fdivs
mov
out
loope
leave
movsb
fldl
repz
cmp
pop
fdivr
outsb
xchg
ret
ljmp
mov
pop
jno
roll
cmp
popa
dec
data16
xchg
push
pushf
xchg
aas
in
mov
iret
aad
filds
test
jecxz
sub
movsb
push
or
adc
in
loop
sbb
pop
jg
movsl
xchg
insb
test
rorl
dec
pop
add
stc
cmpsl
sbb
pop
gs
call
and
xchg
push
popa
sub
insb
mov
adc
xlat
cmp
inc
jnp
in
inc
dec
push
test
dec
and
xor
mov
into
jge
cmp
fcoml
mov
sahf
push
fstpt
mov
sbbl
mov
fcoms
mov
add
test
cmpsl
stos
add
inc
insl
sbb
aas
cmp
push
cld
cld
push
outsl
or
ja
daa
add
imul
aam
mov
sahf
insb
subb
sub
arpl
add
fstpl
jle
daa
push
stc
pop
repnz
in
or
stos
add
xor
xchg
mov
test
loop
adc
and
ficoms
repz
xchg
xor
or
and
outsl
mov
adc
inc
jb
inc
cmp
inc
das
mov
xor
or
push
pop
pushf
xor
scas
sub
adc
cmp
push
push
sbb
psraw
stos
shl
out
pusha
lock
aas
and
and
enter
cltd
dec
jns
add
cld
push
hlt
shrl
aas
inc
cmpsl
fdivr
pop
aam
das
mov
rep
xchg
xlat
mov
test
add
or
pop
repz
and
dec
mov
icebp
mov
lahf
sbb
dec
xchg
js,pn
lea
js
sub
adc
pop
push
in
insb
inc
rcrl
ljmp
in
filds
or
sub
outsl
addr16
bound
orb
les
pop
inc
das
adc
popl
sub
stc
loope
and
fists
sbb
cmp
pop
movsb
sbb
xor
mov
sub
adc
mov
lcall
lods
or
addr16
cmp
enter
in
adc
and
xchg
xor
fisubrl
test
add
stos
sub
xchg
stc
or
rcl
scas
cmpsl
ds
xor
xor
test
jle
dec
mov
dec
fcomip
pop
shl
inc
lods
pop
xchg
jecxz
pop
scas
dec
push
dec
lods
gs
scas
or
push
or
dec
add
mov
sahf
or
int3
dec
pop
push
pop
mov
inc
adc
or
xor
lock
xor
in
imul
sti
sarl
idivb
pop
add
dec
jb
add
int
int
sahf
and
sahf
mov
pop
adc
mov
adc
dec
jecxz
ja
out
or
int
ss
call
mov
aad
xchg
das
jae
sbb
ds
loopne
fnstcw
lea
add
imul
jne
outsl
jns
sub
mov
inc
pop
push
movl
or
add
in
mov
jns
dec
add
roll
lods
ror
aad
push
pop
lods
mov
leave
xchg
mov
subl
cld
repnz
push
testl
xor
sbb
push
mov
test
dec
or
mov
shrb
ja
jo
add
xchg
fsubl
or
into
push
mov
hlt
xchg
jne
stc
rcll
ret
imul
jno
jae
js
rolb
and
dec
imul
mov
stos
or
push
mov
scas
in
pop
pop
icebp
push
fists
ja
lds
adc
movb
fxtract
sbb
or
inc
push
add
scas
sbb
add
cmpsl
push
adcl
xchg
mov
hlt
jmp
push
mov
inc
lea
arpl
xchg
jo
push
test
outsb
cmpsl
lcall
iret
ret
lret
test
cltd
pop
sbb
ficompl
cmp
push
jb
jns
outsb
int3
jnp
outsb
adc
or
push
cwtl
fcoms
outsl
test
movsb
sub
outsb
mov
cmpsl
jge
and
xchg
or
xor
addb
and
nop
call
and
xor
pushf
fdivl
push
ja
loope
xor
out
pop
mov
out
mov
add
fiadds
enter
mov
push
adc
mov
fwait
cmp
sub
stos
mov
jo
iret
push
es
sub
leave
lret
sbb
xchg
cmp
mov
mov
mov
mov
repnz
jle
js
enter
lds
or
mov
cmc
gs
enter
add
es
movb
mov
loopne
movsb
mov
adc
jp
sbb
sbb
fisubrs
push
aaa
adc
lret
or
cmp
ret
shll
inc
daa
adc
rorb
mov
cmc
or
iret
gs
andl
adc
xchg
dec
lods
in
add
sbb
pop
int
cmc
mov
adc
ss
lods
repnz
cmovbe
mov
loope
or
pop
xor
sahf
ljmp
push
test
dec
add
push
cmp
aam
icebp
jge
mov
inc
rcrb
out
popa
inc
pop
cwtl
cmp
jb
setp
in
enter
in
jb
out
push
xor
loope
inc
loope,pn
jg
xchg
in
and
scas
jb
lret
xchg
mov
xor
mov
mov
xor
fnsave
rcll
jp
fcmovnu
ss
cltd
andl
cmp
movsb
clc
lods
xchg
adc
mov
add
pop
clc
sbb
mov
dec
lock
xchg
cmp
pop
pop
sbb
or
and
xlat
pop
pop
fdivr
and
jo
dec
repz
mov
std
jmp
dec
into
lods
add
mov
aaa
and
xor
insl
lds
push
call
jmp
js
xchg
test
andb
fistl
aad
dec
jecxz
adc
sbb
decb
rcrb
jmp
xchg
insl
cmpsb
in
icebp
pop
stos
push
pop
shl
rolb
mov
cmpsb
add
cmp
orb
inc
mov
loop
fwait
inc
push
pop
pop
lock
sub
inc
and
mov
andl
icebp
dec
lock
sbb
add
ss
mov
push
sarl
xchg
in
cmp
and
cld
mov
test
mov
xlat
iret
cmp
pop
cmc
aaa
pop
in
mov
push
loopne
mov
mov
mov
pop
iret
and
pop
js
mov
cmp
nop
fidivs
shrb
cmc
push
fmuls
push
mov
xchg
xchg
sub
jne
sub
stos
push
mov
fs
push
pop
sti
xchg
mov
jns
test
push
dec
inc
jno
lret
insl
jo
arpl
sbb
adc
lret
jle
jne
enter
cmc
and
dec
sbb
stos
inc
push
dec
mov
xor
cli
mov
test
aad
dec
jo
pop
adc
xchg
shl
xchg
out
fs
stos
cltd
cmp
fisttps
push
mov
cli
jne
xlat
into
aad
mov
xchg
test
cli
je
je
ret
in
sbbl
lods
jg
lea
aaa
mov
lea
adcb
loope
and
adc
hlt
popa
pop
addr16
ret
leave
lods
mov
sbb
dec
fdivrs
mov
out
sbb
lret
arpl
mov
shr
mov
bound
cld
adc
sub
jne
or
test
imul
aas
and
cmp
push
fldz
mov
adc
data16
mov
filds
sbb
iret
and
mov
lea
fisubrl
fstpl
dec
jno
popf
jb
jge
add
push
add
mov
fadds
add
pusha
repz
xor
scas
bound
sti
sub
sub
mov
cmc
negl
cmpsb
int3
cmpsb
aam
pop
hlt
and
ljmp
shl
dec
shufps
daa
pop
enter
sub
lods
push
adc
inc
imul
repnz
lock
in
test
cmp
popa
inc
in
xchg
out
jne
jmp
inc
data16
mov
lcall
or
sbb
lods
addr16
dec
jecxz
cmp
ja
pop
ret
sti
cs
aam
adc
pop
jbe
mov
sti
dec
inc
popa
icebp
xor
adc
sbb
fwait
pop
jecxz
dec
dec
pop
lahf
push
fsubp
imul
dec
add
xor
imul
xchg
test
and
scas
movsb
outsb
xchg
scas
cmp
test
lret
test
xchg
mov
lahf
xchg
daa
mov
inc
dec
push
xor
stc
jnp
inc
sar
roll
sub
xchg
inc
adc
jle
loop
aad
sbb
hlt
int3
dec
add
js
xor
pop
pop
cmpsl
xor
push
jmp
push
fs
jae
sbbb
imul
das
mov
inc
xor
pop
sbb
fbld
sub
pusha
iret
xchg
pop
cmp
push
sahf
repnz
and
shll
xchg
inc
mov
dec
pop
aam
in
mov
cmc
push
xchg
insl
adcl
ficompl
call
pop
in
popa
call
and
adc
sub
das
aad
jns
outsl
sahf
xorb
sub
test
fwait
sub
clc
into
sub
jge
js
fs
popa
addr16
rcrb
xor
and
jne
test
or
std
cld
movsl
in
roll
pusha
aaa
push
adc
nop
loope
ds
sahf
xchg
push
dec
jecxz
dec
je
outsl
mov
xchg
mov
arpl
or
and
xor
inc
xchg
repz
push
mov
add
mov
adc
out
ljmp
add
mov
pushf
fidivs
adc
outsl
dec
in
inc
jb
mov
rcll
rep
mov
cmc
lds
cmp
ds
mov
sbb
pop
daa
jno
repz
es
adc
xchg
gs
imul
sub
rol
call
pop
mov
not
cmp
nop
call
rcll
daa
jne
or
xlat
mov
arpl
jmp
inc
lret
pop
mov
shll
sbb
pop
subl
cs
dec
add
lcall
lods
xor
shrb
rol
popf
pusha
hlt
push
in
xchg
pop
pop
mov
scas
pusha
subb
push
insl
test
mov
push
jo
sbb
mov
popl
cwtl
test
sarb
jno
test
test
pop
popf
cmp
sbb
cltd
scas
xor
cmp
js
js
xor
sub
repz
mov
mov
retw
dec
dec
imul
dec
cmp
test
fldcw
clc
ret
test
stos
lods
lds
rol
das
jecxz
mov
iret
inc
cmp
repnz
test
inc
in
imul
and
sbb
or
mov
push
insl
jge
or
and
dec
pushf
dec
push
mov
push
inc
out
xchg
inc
pop
das
rol
xchg
add
scas
adc
in
ret
cmp
daa
scas
xor
add
jb
in
cmp
or
push
pop
or
push
cmp
loope
or
mov
inc
push
jmp
add
inc
cmp
pop
sti
addr16
adc
mov
or
sbb
jl
stos
or
cmc
pop
movsb
aaa
mov
into
push
sub
lahf
adc
jbe
push
je
stos
adc
pop
fs
jae
or
popl
inc
lahf
ljmp
out
mov
hlt
and
xor
sbb
xor
movsb
inc
inc
cmp
and
push
stc
mov
jno
daa
mov
sub
shrb
mov
pop
hlt
jg
in
mov
adc
cltd
inc
fisubs
add
adcl
andl
fwait
dec
addr16
push
push
dec
in
pop
push
pop
pop
cli
lret
enter
loop
stc
into
mov
mov
les
ja
sub
adc
lcall
mov
mov
lahf
outsl
push
hlt
push
mov
cmp
push
xor
es
shrl
pop
scas
jp
lret
cwtl
aad
jp
ss
xor
in
mov
push
incl
cmpsl
cltd
cmp
dec
lcall
mov
mov
mov
inc
cld
inc
sbb
inc
xchg
movsl
xor
mov
mov
cli
lods
cmp
push
imul
aaa
gs
fwait
repz
mov
jmp
mov
push
push
ja
xchg
pop
cmp
or
dec
sbb
xchg
adc
add
and
cli
cmp
xchg
mov
push
add
dec
es
pop
stc
mov
jae
xor
ljmp
dec
je
popa
mov
sbb
push
and
jge
sbb
fcmovnb
imul
xchg
nop
or
shr
fstps
out
fcomps
inc
nop
scas
pop
call
xchg
lret
in
ffreep
insl
imul
sub
imulb
ljmp
stos
cmp
jecxz
ja
mov
out
add
push
shrb
xchg
or
adcl
stos
jl
pop
rorl
aas
rorb
push
and
rorb
mov
dec
pop
addr16
mov
xchg
xor
andb
cld
mov
cmc
xchg
xor
divl
in
sbb
mov
mov
mov
xor
mov
pop
mov
clc
adc
ds
jmp
adc
data16
movsl
mov
out
add
mov
xor
or
sub
pushf
js
pop
mov
dec
aam
push
adc
insl
cmp
stc
mov
xchg
dec
testb
sub
cmpl
xchg
and
jecxz
jae
or
pop
push
mov
ret
xor
mov
sbb
xchg
inc
aaa
push
xor
cli
int
inc
movsb
xchg
ja
rcll
popa
es
pusha
clc
mov
insl
out
mov
push
movsl
pop
pop
add
test
out
mov
ljmp
mov
xlat
jo
nop
cmp
cld
or
mov
or
in
enter
xor
sbb
addr16
sbb
xor
sbb
mov
sti
sub
out
fistl
pushl
dec
mov
lahf
jg
or
jae
enter
data16
sbb
fdivrs
push
push
in
call
lock
mov
mov
adc
push
lds
sub
xchg
jbe
mov
iret
out
out
cmp
pop
mov
out
cld
push
loopne
push
jecxz
mov
hlt
int3
mov
leave
sarl
cmp
jmp
loop
sbb
pop
dec
xchg
into
cmp
push
inc
fdivrp
cmp
sti
or
xlat
movsb
scas
rcl
andb
fs
cld
cmc
push
push
mov
fisttpl
jo
sbb
pop
dec
negl
lahf
sbbb
hlt
mov
shll
loop
sbb
mov
ret
sub
pushf
lcall
or
and
in
cmpb
add
loopne
pusha
inc
jle
jne
fnsave
inc
inc
ficoms
bswap
xor
ja
and
in
mov
add
fwait
insl
out
push
clc
mov
inc
call
mov
into
mov
imul
out
cmp
das
rolb
negb
loope
push
jb
sub
mov
dec
jg
mov
mov
mov
scas
add
pop
sti
sub
mov
inc
fcmovbe
mov
mov
xor
mov
dec
ja
fucomip
sti
gs
in
mov
out
data16
add
push
loope
adc
in
cmc
jno
jge
and
insl
pop
js
nop
shl
rclb
ljmp
cmp
arpl
pop
test
mov
xor
add
loope
cld
sbb
sub
inc
xchg
pop
xchg
sub
test
mov
iret
xchg
mov
or
pop
mov
xchg
pushf
inc
sahf
ret
dec
mov
arpl
jp
lea
adc
dec
mov
push
dec
mov
movsb
xor
xor
insl
inc
aad
nop
mov
xchg
mov
cmp
sbb
das
out
mov
add
cmp
jl
cli
sarl
pop
fwait
fwait
jl
pop
pop
xor
repnz
xor
repz
and
sub
in
cmpsb
stc
jns
out
push
loop
out
add
mov
shrb
pop
fdivr
pop
sub
dec
lahf
jbe
xchg
add
lock
sub
sahf
pop
xchg
cld
cs
lock
out
aad
pop
xchg
test
popa
push
mov
mov
sti
pop
jecxz
iret
lods
adc
in
das
mov
push
jnp
lods
dec
in
ss
cmp
add
push
test
daa
iret
std
and
inc
loop
mov
movaps
sbb
xor
stc
add
jbe
or
idivl
add
int3
dec
lcall
pop
in
or
mov
cli
xor
mov
f2xm1
dec
shl
in
dec
push
jl
fwait
movsb
loope
lock
mov
xlat
in
cmp
xchg
jl
xchg
xchg
add
stc
lods
dec
cltd
insl
xchg
lea
incl
fld1
roll
xor
jp
push
xlat
out
inc
in
jle
jmp
ficompl
add
mov
fnstcw
scas
adc
dec
rorb
fistpl
int3
mov
int
aas
ret
jns
lcall
sbb
sub
mov
rol
or
xor
cmp
xchg
or
push
sbb
push
adc
rorl
aad
in
out
lret
xchg
cld
cmpsb
cmp
inc
mov
xchg
loope
and
int
xlat
cltd
popf
loopne
jb
fistps
adc
fwait
and
ss
out
stc
inc
xchg
lods
mov
mov
jle
push
mov
mov
movsb
cld
or
ds
loope
ss
inc
mov
daa
sub
out
inc
xor
add
mov
fs
lahf
mov
std
add
jbe
adc
fnstenv
jp
outsb
and
xor
imul
xor
jne
push
xchg
mov
pop
xchg
pop
lods
push
or
dec
cwtl
jl
jl
cwtl
pavgb
sbb
cld
jbe
cmc
adc
jecxz
sub
push
std
clc
les
xor
lods
jo
sbb
ja
dec
mov
sbb
push
arpl
sub
lcall
xchg
lods
cmp
lcall
xorl
jl
lahf
mov
popa
ret
or
scas
dec
divb
sahf
pop
push
xchg
and
cmpsl
lods
mov
xor
mov
loope
add
cs
push
inc
loope
xor
cmp
xor
mov
pop
stc
jbe
pop
add
mov
fld1
dec
xor
push
cwtl
imul
or
ss
push
idiv
das
mov
xchg
inc
cmpsb
in
add
loopne
pop
fmulp
lret
and
push
push
filds
dec
xchg
and
fstpl
ljmp
inc
stc
lock
push
xchg
leave
jno
icebp
push
shll
lcall
sub
es
add
daa
ljmp
mov
aad
xor
xor
jns
inc
in
cli
xor
jnp
ror
nop
addr16
xchg
mov
jae
ljmp
jns
or
sub
jnp,pn
les
insl
getsec
add
jg
stos
pop
lcall
dec
ds
mov
mov
fcmovbe
insl
dec
ret
mov
inc
and
in
jb
stos
sar
mov
or
stos
loopne
mov
jge
inc
cmp
jbe
sub
fstps
pop
dec
scas
push
fldt
xor
lcall
adc
pop
repz
lock
pop
std
xor
cmpsb
mov
ljmp
pop
dec
shl
push
inc
data16
and
aaa
outsl
jo
pop
icebp
cmpsl
sbb
outsl
clc
roll
imul
test
sbb
sbb
dec
mov
icebp
inc
daa
imul
negb
std
out
lock
cli
cwtl
dec
push
sbb
mov
or
push
or
in
into
cwtl
sbbl
int
inc
pop
jmp
push
sub
mov
ss
add
dec
dec
cmp
mov
cltd
ret
cmpsl
nop
pop
mov
nop
movsb
mov
adc
loop
push
mov
pop
mov
sub
add
and
out
subb
leave
mov
enter
hlt
sbb
push
shll
sub
mov
xor
outsb
mov
pop
shl
ret
sbb
testl
lock
imul
jb
and
inc
mov
test
enter
call
mov
sbb
rol
dec
mov
in
in
dec
xorl
mov
mov
into
fyl2x
fcoml
mov
xchg
mov
clc
mov
sbb
lret
xchg
cmc
push
movsb
loop
ja
jnp
mov
xor
loop
sbb
jnp
repnz
push
jns
lea
xchg
push
decl
xor
in
inc
xchg
pop
lret
inc
shr
push
and
add
adc
popa
and
pusha
hlt
popf
outsb
fistl
and
jle
mov
insl
push
mov
mov
push
repnz
push
ret
int
ret
mov
stos
lahf
cmp
dec
stos
lods
sub
movups
push
rorl
pop
push
xchg
adc
jge
iret
jae
mov
mov
sub
enter
xor
cmc
mov
add
fisttps
xor
jns
cmp
adc
xchg
pop
pop
movl
ljmp
call
movsb
xor
mov
mov
mov
loopne
mov
insl
les
cmp
rcl
dec
pop
sbb
fistpl
out
daa
bound
sbb
jmp
retw
out
outsb
iret
pop
add
fldenv
shll
sub
mov
adc
sbb
js
mov
xchg
and
dec
cmp
test
dec
inc
push
test
leave
inc
push
out
pushf
mov
test
push
ljmp
mov
shrl
sbb
stc
sbb
call
inc
sbb
imul
pop
and
call
in
out
push
add
popf
cmp
int3
xor
lahf
mov
and
in
je
cmp
xor
xchg
icebp
jmp
sbb
scas
int3
imul
pusha
pop
mov
test
xor
movsb
sub
xor
mov
fcompl
inc
pop
outsb
push
pop
xor
mov
repz
mov
stos
loope
jg
push
cmp
sahf
push
aas
pop
ret
add
jb
aad
movsl
popf
lock
sbb
mov
dec
mov
pop
and
std
sub
pop
icebp
xor
shlb
stc
test
movsl
mov
cmpsb
ss
pushf
sub
sbb
and
insl
repnz
cltd
fcompl
jno
mov
test
jns
jne
jmp
xchg
fs
cld
into
repz
sbb
jbe
adc
scas
pop
jae
popf
ss
mov
repnz
jmp
mov
add
cmpsb
int3
xor
fistpl
test
xchg
add
imul
mov
mov
push
push
xchg
push
or
jo
inc
xchg
aas
pop
mul
xchg
shrl
fisubl
pop
adc
into
ds
shl
and
adc
cmc
testb
divl
movsl
cmp
cwtl
movsl
cwtl
xchg
jp
bnd
sti
popa
cmp
xchg
pop
add
jl
add
mov
jge
cmpsb
push
cmp
xrelease
std
adc
js
or
sub
dec
in
jo
call
dec
fld
lret
mov
imul
icebp
dec
mov
jmp
pushf
decb
mov
frstor
add
aam
popa
or
ret
xchg
out
in
jmp
mov
dec
sbbl
push
outsb
fcoml
aad
xchg
xor
xchg
or
outsb
jmp
sbb
jne
test
pusha
push
dec
pop
or
mov
inc
xor
gs
xor
mov
inc
and
jne
daa
addb
cmpsb
inc
in
push
clc
cmp
pop
mov
sti
pop
test
jl
cmp
pushf
mov
jg
or
js
xchg
dec
add
push
popf
mov
jle
popa
mov
xor
pop
jo
sub
xor
leave
stc
cmp
push
jecxz
mov
and
bound
push
dec
loop
mov
pop
xchg
test
shlb
js
add
adc
jne
scas
lret
data16
jmp
dec
subb
add
cmp
push
pop
sub
ljmp
sbb
jmp
andl
adc
push
add
jbe
aaa
jne
push
jl
and
popa
cmpsb
divl
push
adc
mov
outsb
stos
inc
in
pop
mov
dec
mov
mov
sub
jecxz
sub
cmp
aaa
fidivrl
movsb
jle
mov
cld
mov
add
cwtl
mov
xor
sbb
fwait
inc
sub
imul
jnp
js
cmpl
inc
out
fisubrl
dec
xchg
aam
out
icebp
mov
lret
or
std
cmp
pop
cmp
xchg
inc
dec
insb
enter
leave
stos
dec
xchg
xchg
ficoml
mov
icebp
cmp
adc
dec
fwait
push
xchg
xchg
xlat
int
ljmp
sbb
lods
pop
mov
mov
sub
fisubrl
dec
xor
xchg
icebp
add
stos
push
push
mov
and
add
mov
mov
inc
and
popf
push
mov
rcrl
dec
cwtl
and
das
popa
adc
mov
cmp
cs
mov
fsubl
ds
mov
cmp
push
gs
cmpsl
cs
scas
je
xchg
inc
scas
jns
pop
mov
xchg
xchg
jns
lods
test
adcb
test
sbb
sti
xchg
sbbl
popa
flds
mov
subl
xor
adc
pop
sbb
push
stc
cmc
mov
pop
jge,pt
add
cmp
inc
or
xchg
pop
push
cmp
mov
or
and
sahf
stos
lods
cmp
jae
mov
and
cmpl
adc
mov
scas
cmpsl
cmp
xchg
dec
pop
arpl
mov
scas
jecxz
xchg
push
dec
sbb
mov
aam
outsl
xchg
mov
sbbb
bound
out
mov
jbe
add
adc
shl
scas
jge
lret
inc
popf
dec
or
ret
inc
sub
adc
and
daa
out
out
sub
in
ror
loop
cli
mov
pop
sub
xchg
xchg
jl
dec
push
jle
or
push
lock
pop
pop
cli
int3
pusha
mov
push
or
cmp
loop
add
adcb
push
pop
xor
inc
jbe
jnp
jae
mov
push
aaa
subb
pop
fwait
pop
imul
es
insl
leave
or
fwait
gs
and
cmp
cmp
loop
cmovo
mov
div
frstor
aaa
inc
sub
pop
sub
fbld
leave
lret
or
mov
jge
fistl
imul
fnstenv
pop
aam
adc
mov
gs
jg
mov
hlt
or
inc
add
xor
add
pop
lret
push
mov
into
imul
test
adcl
fcompl
cld
xchg
rolb
shll
add
sub
add
pop
or
mov
cmp
rolb
jge
test
sub
mov
and
xchg
inc
inc
jmp
push
fdivs
mov
dec
xchg
into
sahf
and
cltd
mov
fbld
dec
fsts
imul
jbe
loop
dec
repz
mov
das
sub
insl
push
mov
pop
arpl
stc
fdivrl
cmp
arpl
push
sub
mov
jecxz
jb
pop
pop
and
xchg
stc
movsl
mov
push
xor
dec
dec
adc
push
adc
dec
iret
xor
mov
icebp
cmp
inc
inc
pop
test
cmp
inc
and
fmull
dec
cmp
xchg
xor
push
sub
dec
xchg
lock
dec
mov
inc
lret
and
gs
pop
lahf
stc
xor
pop
jecxz
js
int
pop
fiaddl
xor
call
sarl
loopne
and
lret
popa
pop
mov
dec
mov
movsl
pminsw
mov
cld
popa
lahf
cld
pusha
pop
mov
mov
mov
sub
push
leave
fcoms
hlt
jae
jecxz
shrb
inc
push
rol
arpl
push
fidivrs
addb
cmp
push
test
test
aam
imul
addr16
add
decl
fxtract
sub
xchg
ret
cmp
xor
mov
dec
mov
adc
cmpsb
mov
fisttpll
sub
cmp
mov
movsb
mov
gs
mov
bound
outsb
into
lods
jb
xchg
aad
mov
sbb
aam
ret
cmc
cwtl
sbb
mov
dec
test
ret
shl
outsb
and
decl
and
adc
sti
shrb
push
push
jns
fmuls
mov
stc
push
add
fisubrl
ret
lcall
pushf
mov
mov
addr16
clc
jae
cmp
out
jp
jnp
enter
nop
mov
and
xchg
lds
mov
sub
sbb
pushf
mov
lock
mov
scas
pushf
add
scas
ficoms
pop
inc
adc
mov
xor
lea
sub
pop
fsub
mov
gs
dec
mov
pop
jno
xor
fists
aad
repz
je
aam
jns
div
push
loopne
jae
lods
aas
push
sub
xchg
hlt
bound
cli
in
fimuls
repnz
js
jo
insb
movsb
js
push
insb
xor
adc
addr16
fwait
out
ret
add
loop
loope
imul
popa
lds
jge
add
push
shll
add
lahf
fbld
xchg
stos
mov
fsubrs
dec
enter
iret
setnp
leave
dec
insb
adc
adc
xor
js
xchg
adc
adc
and
cli
or
js
mov
jmp
and
popa
pop
loope
or
mov
push
cli
mov
mov
inc
jmp
fisubs
shll
xor
jp
pop
int
dec
cmp
push
iret
dec
das
ja
mov
dec
mov
popf
aaa
sub
push
lea
jne
out
push
sbb
cwtl
xor
cmp
pop
ret
and
loop
or
aam
jnp
sub
sbb
cmpsb
iret
sbb
out
stos
inc
rcr
mov
nop
xchg
xchg
ss
loopne
or
mov
loopne
inc
mov
imulb
pop
or
enter
cli
into
cmp
ficoml
jno
and
ss
adc
xor
and
push
adc
fwait
out
cltd
push
or
sbb
push
xchg
sbb
stc
add
sahf
sbbb
inc
sub
inc
test
outsl
cmp
xorl
sub
inc
xchg
dec
clc
test
out
dec
inc
push
adc
pushf
mov
mov
sub
fdivr
push
inc
les
push
stc
jo
jb
push
test
mov
test
push
popf
fxch
lret
inc
push
imul
dec
inc
mov
int3
xor
in
jecxz
xchg
mov
sbb
jge
cmpsl
mov
insb
pop
sahf
mov
rol
xchg
pop
mov
in
adc
push
mov
sbb
lds
dec
mov
rcrb
sti
test
test
xor
pop
iret
bound
cmpsb
pop
out
mov
imul
data16
out
fistpl
sbb
adc
cwtl
rolb
pop
dec
shrl
mov
add
sub
fnsave
and
push
pop
out
in
pop
mov
sbb
push
and
inc
cmpb
in
in
jae
cmpsl
addl
fsubr
dec
and
sbb
cmp
cld
xchg
inc
push
pop
mov
xchg
ret
ficoml
push
das
psubd
rcr
xchg
adc
xlat
adc
je
scas
decl
mov
lret
inc
fnstcw
add
pop
push
mov
mov
sbb
push
out
push
and
xor
clc
or
imul
jb
add
iret
lock
pop
xchg
adc
shrb
nop
test
jge
cmp
es
std
imul
test
test
pop
jo
pop
adc
daa
stos
loope
jp
or
popf
lods
cmp
mov
mov
mov
mov
outsb
mov
xchg
mov
cmp
and
lds
push
jb
inc
test
sub
cld
aad
xchg
cmp
sarl
inc
sub
pop
cmpsl
mov
jge
ficompl
insb
inc
sbb
sbb
xorl
pop
mov
mov
mov
fs
xchg
aaa
in
cwtl
into
add
in
test
pop
pop
sbb
mov
shl
lcall
fcomp
jno
and
mov
ficompl
jp
sbb
stos
pop
mov
add
push
pop
sahf
mov
cld
inc
jg
outsl
jg
rorl
sub
xchg
mov
shlb
idiv
xor
xchg
rorl
add
adc
sbb
pop
cmp
and
stos
sub
cmc
sbb
mov
sbb
cmp
mov
push
sub
mov
mov
dec
push
lcall
mov
sbb
mov
ret
add
cwtl
mov
lods
into
imul
push
roll
add
and
and
stc
das
loop,pt
push
imul
sbb
push
cmp
lret
cwtl
sbb
call
fnstsw
xor
jnp
cmpsl
bound
aaa
add
push
mov
cmp
inc
sbb
mov
xchg
add
xchg
mov
fidivl
inc
int
add
fisubs
int
jle
mov
cmp
subl
xchg
cmc
xchg
and
push
xor
jl
jecxz
jb
enter
dec
aam
dec
xchg
mov
cmp
sbb
lea
inc
and
mov
dec
cmp
frstor
push
push
pop
push
sub
and
lock
adc
dec
and
adc
mov
add
jecxz
dec
mov
xchg
loopne
sarb
or
xor
clc
add
shrl
andl
leave
arpl
jne
jbe
dec
xor
popa
js
jbe
test
jne
das
into
addr16
push
or
repnz
scas
mov
pop
in
jbe
dec
sub
jns,pt
loopne
push
push
fsubl
adc
and
xchg
je
sub
sarl
push
xchg
mov
insb
push
inc
adc
aas
lret
out
cs
jl
in
int
mov
mov
aad
pop
subl
adc
dec
dec
test
xor
dec
sti
sub
insl
aam
bound
mov
mov
add
inc
push
push
ror
stos
es
clc
loope
popf
mov
and
sbb
ds
or
into
js
cmp
std
ljmp
cld
push
lea
andl
fisttpl
cmp
xchg
push
ljmp
shrb
xchg
mov
sahf
pop
fisttpll
daa
jge
cwtl
insl
ljmp
fwait
pop
ret
sbb
lock
das
or
repnz
js
adc
ljmpw
je
mov
pop
xchg
sbb
adc
mov
or
sub
or
outsl
dec
pop
mov
xor
cmp
jle
ret
mov
arpl
outsl
pop
in
fisubrs
xchg
aas
pop
and
das
test
bound
jb
insb
mov
shrl
mov
pop
mov
negl
pop
aam
mov
or
xor
lds
test
add
mov
in
xchg
fs
idiv
mov
lea
or
mov
out
cmpsb
sbb
sbb
dec
lret
and
cmpb
fiadds
aam
jge
add
ds
mov
in
dec
imul
sar
xor
insl
dec
rcrb
jge
add
push
arpl
insl
outsb
inc
ret
add
lods
xor
dec
into
jle
pop
mov
insl
or
push
pop
movsl
orl
das
mov
push
int3
fwait
test
jns
shl
cmp
and
mov
xor
xchg
insb
mov
fwait
jge
push
sub
mov
cltd
lea
or
je
cmpsl
daa
mov
pop
arpl
sbb
shll
inc
into
jl
outsl
inc
pop
rorb
pxor
sbbl
mov
pop
jb
jne,pt
cltd
mov
ret
sbb
mov
popf
add
scas
popf
and
jl
in
hlt
stc
add
mov
test
pusha
push
dec
bound
invd
add
add
mov
cmp
gs
repz
insb
rorl
arpl
cmp
js,pn
xchg
xor
adc
pop
mov
dec
andb
outsl
inc
fwait
push
ret
cli
divl
fcoms
mov
mov
jg
hlt
daa
mov
cmp
movsl
test
pop
les
sbb
cmp
dec
stos
fcmovnb
call
xchg
fs
and
cs
mov
push
shll
int3
aam
btl
lret
ss
ja
nop
xchg
nop
mov
leave
in
jmp
mov
pop
mov
in
jmp
mov
cmp
jne
imul
cmpsl
xor
sbbl
mov
cmp
ficomps
cmp
notb
sub
aam
sub
push
sub
sbb
push
arpl
jb
lds
pushf
inc
add
cs
or
loop
mov
or
leave
inc
inc
sub
mov
mov
adc
dec
add
jbe
cltd
inc
jle
popa
mov
sar
or
or
jl
dec
xchg
cmp
or
xchg
fadds
fcompl
ret
and
daa
shlb
pop
xchg
and
xchg
cmpl
and
enter
or
lods
frstor
lods
xor
jle
subb
xor
faddl
clc
jmp
ret
mov
xchg
loopne
stos
and
pop
ja
and
mov
inc
sub
sbb
jb
fdivr
mov
lea
mov
fcmovne
xchg
push
and
mov
mov
lret
ljmp
aad
sbb
cltd
jle
xor
or
dec
inc
push
jmp
ss
incb
jle
sub
cld
popa
insb
jp
fs
test
cmp
into
adc
inc
cltd
cmc
addr16
popf
fs
inc
mov
push
loopne
jmp
roll
sbb
stos
divb
test
int3
xchg
pop
jle
stos
pop
sbb
mov
adc
and
and
jge
mov
cmp
out
xchg
push
outsb
jmp
push
sub
loopne
push
xlat
pop
sub
neg
adcl
mov
push
daa
or
das
adc
xchg
pop
popf
xlat
scas
adc
lds
int
je
push
aas
cmp
jb
cltd
push
push
rcl
push
pop
movsb
subl
loop
xchg
lcall
dec
daa
shl
sub
mov
lea
mov
aam
fsubrl
xchg
sub
xor
inc
push
xchg
or
sahf
scas
add
dec
push
adc
cmpsl
inc
es
ljmp
fwait
push
add
jl
add
mov
fdiv
mov
and
lahf
andb
mov
pop
outsl
call
lock
push
cmp
sub
inc
sbb
mov
loope
jle
sahf
cltd
mov
iret
test
cmp
ret
jmp
or
rep
pop
push
je
pop
or
jl
lahf
xchg
or
mov
jg
pusha
xor
sti
sbb
mov
ret
pop
movsl
mov
mov
lods
push
lds
adc
mov
adc
fdivrs
jg
orl
push
in
lahf
adcl
call
stos
mov
dec
pop
xor
or
mov
ss
fsubl
add
lea
sbb
fnstenv
pusha
and
int3
test
or
xor
inc
push
and
clc
insb
out
pop
mov
push
push
loope
imul
sti
mov
sar
add
ss
add
in
jl
pop
pop
add
mov
sbb
sbb
push
ret
inc
or
lret
shll
hlt
test
je
push
ret
cltd
imul
pop
pushf
mov
pop
aam
enter
dec
pop
jmp
sub
lods
in
sahf
fcomps
cmp
sbb
into
dec
xchg
pop
lret
aad
shll
iret
push
pop
dec
jg
cmp
mov
xlat
dec
xchg
repnz
cmpb
jbe
dec
sahf
push
int
out
lret
xchg
mov
jno
or
popf
cmp
fs
mov
rorl
addr16
jns
int
cmp
leave
jne
add
call
mov
fidivrs
and
clc
daa
inc
mov
or
pop
jne
inc
xchg
dec
push
mov
cmp
dec
aaa
fcmovb
aad
lock
xchg
push
xor
jbe
sbbl
ds
roll
mov
cmpsb
shrl
popa
roll
jno
out
icebp
roll
xchg
test
movsl
pop
aam
addr16
notb
bound
push
dec
adc
pop
icebp
lcall
dec
shrb
xlat
dec
xor
mov
sbb
lea
cmc
cmp
xchg
sub
daa
push
dec
and
push
inc
mov
mov
adc
pusha
sbb
pop
dec
gs
mov
lods
jb
aad
das
aas
ds
iret
rorb
cmp
loope
jp
inc
pop
cld
jb
in
loopne
xchg
sbb
rcrb
je
aaa
sbb
push
dec
mov
iret
movsb
in
and
std
cmp
sub
jbe
xor
lds
xchg
hlt
add
test
push
iret
pop
inc
testl
das
outsl
or
dec
sbb
addb
sub
push
imul
fildl
push
pushf
fistps
cmp
out
push
enter
outsl
neg
das
popa
ss
jmp
loope
fisttpl
cmpsb
popa
xchg
or
push
dec
lret
jg
pop
aam
stc
inc
sahf
mov
out
pop
icebp
xchg
xor
jl
sub
ljmp
loop
sub
push
shl
cmc
xor
leave
mov
sahf
stos
popa
lock
arpl
sub
addr16
ljmp
pop
mov
cwtl
in
jl
and
dec
lods
inc
lcall
push
out
repz
imul
test
and
stc
scas
add
iret
out
les
fs
add
imul
decl
dec
aaa
fs
pop
push
lods
xchg
mov
sbb
or
xor
dec
lea
sub
adc
fwait
aam
xchg
shl
lcall
jl
xor
cmc
or
xchg
cmp
mov
les
imul
dec
xlat
andl
or
dec
rclb
pushf
fsubr
clc
sbb
out
inc
mov
into
xor
jg
adc
push
aas
mov
in
fdiv
mov
mov
or
jl
lea
dec
xor
jecxz
hlt
and
shrl
add
into
scas
dec
cs
adc
mov
icebp
inc
push
fwait
mov
je
loope
adc
ds
xchg
mov
out
popf
xor
push
aam
sub
mov
jecxz
rorl
mov
mov
jg
fistps
dec
jl
dec
sbb
out
sub
cld
adcb
shll
cmp
hlt
push
out
xor
adc
clc
or
fildll
std
push
repnz
notb
pop
pop
xchg
out
aas
insl
std
movsb
pusha
push
inc
add
insl
sahf
shlb
lret
sti
push
jno
imull
stc
jns
mov
clc
add
mov
scas
pop
ja
or
loope
pop
xchg
pushf
mov
push
cmp
insl
addb
xchg
or
pop
popa
mov
xchg
stos
imul
icebp
adc
mov
in
xchg
sub
outsb
jle
enter
dec
pop
pusha
inc
jb
aam
pop
jae
xchg
push
adc
lock
cmpsl
jbe
test
sbb
adc
shll
aas
mov
dec
scas
aaa
sahf
jns
and
mov
xchg
add
lock
lret
and
mov
mov
in
or
aam
or
cmp
cmp
pusha
cmp
pop
pop
push
jno
xchg
add
inc
xor
xchg
pop
and
cmc
xlat
outsl
fbld
inc
out
ror
xlat
and
stos
jge
lcall
inc
ret
push
jns
add
sub
add
into
gs
adc
loopne
mov
addr16
mov
add
in
xor
icebp
cmpsl
xor
add
adc
mov
lods
cld
pop
pop
in
call
xor
int3
push
mov
test
xchg
and
add
push
jecxz
jmp
push
cs
repnz
in
xor
rorb
mov
and
add
orl
das
sbb
idivb
nop
xchg
sbbl
outsb
stos
or
xor
test
rorl
es
imul
push
out
aam
lcall
xchg
sbb
repz
pop
arpl
mov
cmp
fidivs
cmc
or
xlat
mov
jg
xchg
sahf
sbb
xchg
xlat
out
push
mov
inc
enter
xor
push
outsb
push
push
xchg
out
imul
mov
fs
fisubrl
jnp
sub
jns
into
das
dec
adc
fisubrl
lret
jle
pop
popf
into
cs
jl
orb
lret
out
mov
push
jne
lcall
push
pop
pop
push
mov
loopne
notb
xor
lods
add
add
add
add
stos
adc
je
in
fsubl
sbb
shl
test
or
repz
and
add
adc
pop
cmc
repz
xor
pop
jnp
hlt
cmc
stc
imul
jge
ret
adc
into
sbb
aam
repnz
dec
test
xor
int
arpl
xor
faddl
sub
jno
jmp
adc
mov
xor
jne
dec
and
mov
out
pusha
pusha
decl
shr
test
xor
push
or
add
push
dec
es
lret
push
cmp
mov
sub
es
jno
repnz
movsb
mov
or
fcomps
adc
stc
jns
je
mov
das
mov
mov
add
sub
or
add
clc
fldt
sbb
adc
fsubr
and
jmp
aad
cmpsb
lea
ficoml
jo
int
scas
jae
mov
flds
xor
adc
mov
and
and
fistpl
add
ret
insb
je
push
data16
out
xchg
pop
jae
in
cmp
loopne,pt
pop
cmp
dec
ljmp
imul
mov
cmpl
xchg
int3
mov
jecxz
dec
mov
inc
rcll
ss
push
int
cmpsl
pop
gs
movsb
mov
aam
adc
mov
pop
sub
movsb
enter
or
sub
out
icebp
int
imul
fnsave
addr16
mulb
sbb
adc
pop
mov
adc
push
cmp
pop
insb
int
pop
mov
insl
cmp
adc
mov
push
ja
xorl
and
adc
out
cld
dec
dec
std
inc
xor
scas
pushf
push
add
cltd
xchg
icebp
pop
adc
and
int3
adc
cmp
sti
mov
push
mov
add
gs
imul
loope
enter
inc
movb
adc
lds
testl
call
cmp
repnz
movsb
pop
mov
outsl
sbb
xchg
push
jnp
cmp
ds
add
dec
ja
dec
rolb
notb
push
sbb
xorb
subl
dec
mov
sahf
cwtl
push
mov
xor
outsb
nop
shlb
call
xchg
push
jmp
ret
push
add
aam
stos
or
mov
lods
push
scas
leave
jmp
xchg
inc
repnz
out
negl
pop
jg
mov
outsl
test
xor
add
les
pop
mov
test
les
inc
lods
mov
push
pop
adc
out
repnz
mov
stc
aas
je
xchg
data16
jge
mov
mov
cmc
fisttps
mov
inc
orb
adc
mov
mov
sub
jo
add
dec
aaa
adc
daa
leave
mov
sbb
enter
aaa
ds
cltd
mov
mov
pop
fs
mov
nop
pop
out
sahf
pop
cmp
xor
jns
insl
fldcw
pusha
pop
cli
xor
scas
mov
mov
das
lret
adc
mov
mov
icebp
jge
adc
popf
in
or
sti
sar
jne
lods
nop
and
repz
sbb
hlt
mov
lcall
aam
arpl
or
cltd
add
movsw
adc
jne
int
dec
sbb
lret
fdivl
ja
addr16
arpl
mov
jnp
cltd
pop
ret
stc
cmp
xlat
xor
lods
lds
xchg
hlt
mov
ficoml
into
xor
lds
push
mov
sahf
push
sysexit
xchg
adc
mov
es
mov
ds
jo
lcall
push
cmpb
test
fistpll
dec
nop
jae,pn
sub
fwait
jp
push
jl
arpl
fwait
cld
pop
call
clc
movsb
out
jb
or
es
jmp
into
push
idivl
xchg
inc
adc
enter
mov
cmp
mov
mov
stc
xor
out
mov
and
dec
cmp
mov
cmp
or
icebp
mov
iret
rcr
fwait
sarl
mov
mov
mov
inc
xchg
xchg
pop
or
cmp
incb
repz
pop
iret
cmp
cwtl
pop
xor
pop
xor
jae
dec
scas
sbb
in
rcrl
les
in
test
mov
sub
sub
leave
xchg
pop
push
pop
xor
js
gs
add
lods
cs
push
ds
scas
out
aaa
pop
and
rclb
xchg
mov
xor
sub
icebp
mov
loop
inc
ds
pop
and
xchg
sti
lea
mov
js
insl
ficoms
adc
ret
popa
pusha
cmp
sub
mov
sbb
mov
add
loope
sbb
inc
sub
adc
jg
enter
pushf
pop
dec
add
and
mov
mov
mov
push
rolb
rcll
cmp
cmp
and
mov
inc
jge
sbb
cltd
and
ret
mov
push
cmpsl
insb
int3
sub
int3
pop
enter
sub
mov
add
xchg
sbb
ret
ds
fimuls
dec
or
jo
and
xchg
hlt
and
lcall
xchg
popf
mov
pushf
push
jno
outsb
sbb
loope
dec
cld
ljmp
aaa
jne
iret
jo
jmp
mov
test
jl
orb
add
adc
adc
imul
hlt
push
loop
lods
movsb
shr
sbb
pop
dec
xlat
cmp
fwait
mov
setae
mov
int
mov
sub
ja
mov
lahf
cmp
or
fsubrs
imul
jmp
push
pop
out
dec
jae
jns
decb
push
rcl
pop
das
iret
and
jmp
adc
ret
cmp
ja
mov
sub
fnstcw
add
cmp
jmp
cmp
cmp
hlt
mov
push
clc
xchg
jl
and
push
lds
clc
ret
fcomip
jmp
repz
imul
lods
sbb
dec
aaa
lret
xchg
push
popf
add
sahf
iret
rcll
mov
mov
test
mov
xor
sbb
notl
push
jmp
cmp
js
out
mov
push
adc
inc
mov
xchg
jne
push
pop
push
add
jbe
jmp
imul
push
cmp
mov
push
outsl
pop
and
repz
aam
data16
loop
xor
pop
xchg
int
jno
nop
jmp
es
fwait
arpl
jl
ljmp
data16
mov
dec
pop
leave
addr16
jg
lods
pop
pop
out
adc
dec
outsl
cmp
imul
and
mov
sbb
lahf
dec
stos
das
cmpsb
mov
mov
ja
or
ret
xor
jle
pop
gs
mov
or
je
out
movsb
ret
loope
jno
iret
add
addr16
jbe
add
popf
aaa
cld
xlat
add
jl
or
test
mov
mov
push
cmp
leave
sti
push
adc
sbb
aaa
push
sub
out
adc
dec
mov
mov
mov
push
mov
test
les
ret
push
mov
push
les
cmp
xor
mov
mul
pop
jnp
cmpsl
stos
lock
cltd
pusha
jle
xchg
xor
cld
cmp
roll
inc
aad
adc
test
es
adc
inc
mov
cmp
xchg
das
mov
aad
les
movsb
cmc
bound
iret
dec
scas
sar
mov
aam
loop
push
push
hlt
dec
adc
mov
sbb
sbb
pop
in
xor
test
cmpl
iret
call
rcll
add
cmp
mov
jmp
pop
push
mov
fwait
call
jmp
scas
lods
lds
ss
jmp
lcall
xor
fldl
dec
out
hlt
sahf
sub
dec
xorl
push
jnp
out
pop
fstpl
and
out
push
xchg
add
dec
mov
cmp
lea
nop
js
adc
std
rol
stos
cmp
add
pop
stc
mov
add
mov
push
cltd
pushf
ja
mov
inc
nop
into
and
push
xchg
ljmp
mov
test
dec
pop
adc
adc
jne
fnstsw
out
test
pusha
inc
cmpsb
test
flds
insb
scas
fildll
aad
orb
cltd
movsl
rolb
enter
js
or
jg
push
cmc
fdivl
pop
sub
inc
popa
sbb
or
sub
repz
cmp
or
adc
inc
add
out
das
clc
cs
ss
cmp
ret
jl
fwait
nop
dec
push
lret
out
pusha
iret
add
jp
lcall
call
je
push
or
aad
pop
loop
mov
xchg
pushf
mov
inc
cmpsl
pop
out
and
nop
jae
sbb
xor
mov
pop
mov
out
cmp
and
cmc
jg
lods
pop
pop
sub
or
shlb
imul
add
in
scas
jecxz
jecxz
cmpsb
lahf
pop
cmp
mov
ss
add
dec
dec
inc
mov
loope
pop
loope
jp
mov
jge
ss
cmp
aad
movsl
out
cld
xchg
jnp
xchg
into
in
jno
daa
enter
xchg
xchg
sbb
jge
cmp
or
sbb
mov
jo
cmp
das
test
lods
rolb
mov
pop
pop
or
add
cld
pop
pop
cmp
mov
xchg
inc
ret
js
mov
int
xchg
movsb
xchg
popf
and
fistl
lret
or
clc
dec
xchg
outsl
lods
lds
repz
push
in
lods
stos
lock
mov
fisubrl
fcmovnu
inc
push
xchg
rcrl
dec
lcall
outsl
push
xchg
in
cmpl
rolb
push
jle
jge
inc
mov
dec
or
lret
or
divl
and
inc
pop
movsl
sahf
lea
into
push
mov
cld
mov
das
roll
inc
dec
mov
loopne,pt
rcl
adc
mov
jae
insl
jne
out
xchg
sub
and
sbb
add
jae
xor
adc
xor
cmp
and
cmc
js
and
aam
icebp
push
push
fcoms
clc
mov
push
out
in
ds
andl
mov
add
push
ret
das
addr16
jo
in
imul
pop
mov
mov
test
dec
repnz
lds
test
cld
xor
add
outsl
lds
ret
pop
fimuls
decl
or
and
cmc
lret
addb
clc
movsb
cwtl
mov
lods
push
mov
adc
loope
cmp
dec
icebp
cli
adc
xchg
push
mov
lcall
sbb
mov
or
in
das
jl
daa
push
and
decb
inc
fwait
cs
jmp
jae
add
adc
insb
adc
jecxz
sbb
push
inc
jecxz
adc
fstpt
xchg
mov
movsb
adc
sub
int
cmpsb
insl
push
and
orl
push
pusha
push
xchg
pop
sub
stc
fs
into
jge
test
popa
pop
loope
dec
shrb
jmp
pushf
popa
mov
xchg
sub
insb
xor
mov
sbb
cltd
dec
pop
xchg
or
loope
jnp
mov
push
out
lcall
pushf
adc
mov
or
pop
daa
push
mov
cmp
xor
pop
cmp
inc
cmp
cmc
incl
xchg
mov
mov
nop
mov
pusha
das
fadds
xor
ja
mov
arpl
ret
outsb
dec
and
cmp
cmp
or
test
out
mov
in
jg
addb
adc
push
mov
arpl
cmp
lahf
or
inc
ja
or
movsl
sbb
push
in
scas
push
popl
lds
and
insl
mov
add
in
push
xor
stos
filds
je
mov
or
lret
xbegin
subb
mov
aaa
sub
lahf
pop
add
jg
insl
xor
les
dec
mov
call
ss
div
adc
mov
mov
test
in
mov
cltd
shl
fadds
pop
jl
lods
clc
lret
les
mov
loopne
stos
and
xor
xchg
push
add
sahf
xchg
cmp
call
mov
adc
xchg
inc
pushf
dec
or
stc
popf
cmovle
push
aaa
add
xor
cld
push
stos
add
and
add
sbb
dec
stc
call
std
clc
push
fcoml
sti
loop
fisubl
popf
sub
mov
and
adc
push
pop
lea
xchg
pop
filds
adc
adc
pop
rorb
orl
pop
pop
movsb
mov
pushf
jge
lcall
rcll
push
push
pushf
mov
les
ljmp
adc
and
inc
aam
cmp
mov
repnz
push
inc
push
ret
icebp
xor
adc
mov
cwtl
push
pop
dec
mov
fwait
adc
ja
jo
sbb
dec
inc
inc
push
lods
add
xor
out
inc
enter
lds
sarb
mov
mov
fidivrl
int3
fistpl
jge
fs
hlt
lods
daa
rcrl
out
popa
push
hlt
dec
in
push
les
adc
and
mov
lock
push
adc
or
ss
jbe
popl
into
mov
push
imul
ss
or
mov
fidivrs
mov
and
xchg
xlat
sbb
test
shlb
add
xor
aad
xchg
inc
sub
loop
aas
shrl
pop
popl
pop
lcall
xor
sahf
and
and
jne
jb
sbbl
adc
jg
jl
roll
stos
mov
cmc
andl
in
push
pop
sbb
popa
jno
loope
xor
sbb
aaa
xor
outsb
test
repnz
fadds
jl
test
inc
ret
mov
scas
fsubs
add
cmpsl
push
je
loop
mov
ja
cs
cmp
inc
fldcw
inc
inc
aad
inc
pop
mov
cmpb
aaa
shr
mov
arpl
push
jle
lcall
jae
lods
je
pop
stos
mov
mov
cmp
incb
cmp
rclb
dec
pop
insb
push
push
scas
addb
push
pop
push
int
je
testl
out
mov
aam
arpl
cmc
adc
mov
fiaddl
pop
mov
adc
fsubrl
or
add
aaa
in
scas
je
jge
testb
pusha
mov
cmc
sub
int3
sub
mov
pop
or
lret
fisttps
rcrl
or
iret
push
mov
fisttps
pop
out
pop
pop
scas
dec
adc
jle
jmp
push
jne
adc
aam
sub
rcr
jb
inc
ljmp
das
imul
mov
repnz
jb,pn
mov
shl
jp
test
or
inc
fildll
std
mov
sbb
jae
xor
jg
inc
decl
sbb
scas
test
fcoml
xchg
xchg
std
mov
shlb
js
dec
xor
cld
bound
mov
or
mov
sbb
push
addr16
je
xchg
jno
stos
cltd
pushf
mov
add
push
out
clc
jecxz
sbb
push
sbb
and
fs
push
push
iret
gs
pop
dec
mulb
jne
dec
add
add
push
and
clc
cmp
push
nop
push
push
xchg
mov
into
xor
sub
insb
sbb
sahf
push
mov
mov
dec
adc
imul
pop
cli
inc
imul
in
xor
xorb
push
adc
pop
push
cli
pop
jg
arpl
jl
mov
xor
addr16
pop
lcall
mov
xor
pop
jne
xchg
rolb
int3
nop
xchg
insb
xor
test
jp
adc
roll
mov
pop
cmovp
rep
ret
nop
jp
jno
mov
sub
and
pusha
push
push
pop
jp
enter
and
inc
jnp
aad
pop
push
mov
in
fstl
cmp
push
shl
add
frstor
icebp
iret
fldt
leave
pusha
sub
jl
cmc
inc
and
data16
fnstsw
xchg
xrelease
test
mov
mov
push
mov
dec
ficompl
cmpl
jge
lock
xchg
fstl
pop
cmp
aas
jecxz
jns
cli
mov
adc
mov
leave
fldl
jne
xchg
mov
rep
xlat
push
test
cmp
cli
inc
aaa
jo
in
and
sub
out
lret
pop
cli
and
xchg
adc
dec
adc
inc
xor
sbb
rclb
lret
repnz
add
xchg
mov
and
imul
mov
push
xlat
sub
sbb
cmp
pop
cmpsb
add
jne
and
gs
mov
insl
data16
push
les
xor
mov
mov
adc
ss
push
jne
out
jo
psubusw
and
xchg
sbb
lods
push
mov
sub
out
sub
jmp
push
rorl
xor
mov
dec
leave
xchg
inc
sbb
ret
scas
aaa
cmc
sbb
sbb
jl
pop
inc
idivl
js
std
cmc
sbb
lock
pop
repz
push
lret
adc
aaa
jl
sub
and
sarb
xchg
push
loop
int
add
lea
cmpsb
nop
fstpl
ds
mov
fwait
js
out
cmpsb
movsl
add
pushf
shrb
push
xchg
pop
sbb
mov
mov
xor
mov
jecxz
pop
sbb
rcl
lret
cli
incl
movb
and
xor
sbb
sub
sti
mov
jecxz
push
in
repz
cmp
scas
push
and
clc
inc
cmpsb
ficoml
and
mov
pop
lret
cmpsb
insb
jp
dec
jg
leave
xor
push
jae
mov
enter
dec
and
fisubrl
shrb
pusha
shrl
loope
fstpt
gs
lock
je
mov
jae
mov
outsl
fs
push
test
add
ss
loopne
mov
std
push
sbb
inc
inc
into
and
dec
jbe
insb
inc
mov
xchg
fwait
jmp
ret
adc
sbb
mov
fcompl
mov
jg
aad
sub
mov
mov
pop
std
xchg
das
inc
mov
jae
shrl
xchg
mov
imul
push
push
inc
push
sbb
push
jg
negl
adc
cltd
cwtl
mov
test
xchg
xchg
jbe
xor
aas
and
xchg
mov
dec
ja
int
lret
inc
ja
std
loope
enter
mov
sub
jbe
xlat
popa
dec
pop
stos
cmp
xchg
and
in
or
push
dec
ds
stos
push
cli
sbb
test
sbb
stos
jle
xor
xchg
sahf
fcoms
and
andl
pop
adc
int
mov
rorl
mov
fdivrs
sub
in
jne
pop
shrl
mov
lds
in
repz
push
add
jl
jecxz
push
and
je
test
and
inc
mov
xchg
sub
bound
xchg
adc
cli
pop
shll
dec
clc
cwtl
mov
flds
pop
jmp
xor
ret
or
jmp
sub
xchg
cld
fwait
ds
dec
jo
push
insl
clc
callw
cmpsl
lcall
sbb
xor
xor
fcmovbe
loop
aad
or
jmp
rcr
arpl
push
adc
pop
out
fisttpl
scas
mov
out
into
push
test
fcom
sbb
or
or
unpckhps
mov
shll
sbb
loopne
mov
aad
dec
sar
mov
lds
adc
dec
xchg
adc
cmp
and
xor
add
aad
xor
insl
mov
sbb
pop
fcompl
mov
mov
pop
sub
mov
mov
dec
mov
stos
sub
pop
loopne
lds
outsb
pop
dec
imul
xor
jmp
fimull
lods
sbb
stos
dec
pop
stc
aaa
jnp
nop
or
inc
out
pop
cmp
adc
stos
in
adc
xor
repz
call
pop
or
cmp
cmp
mov
outsl
jmp
add
sbb
sub
popf
jno
xchg
add
sbb
mov
adc
int3
sub
mov
sbb
decb
mov
test
sub
inc
mov
jp
mov
add
rcr
mov
mov
jg
stos
dec
xchg
jo
insb
leave
xchg
subl
in
add
int
inc
mov
outsb
popa
fldpi
movl
cmp
pop
dec
sub
les
inc
xchg
mov
push
adc
xchg
imul
cmp
mov
sti
add
mov
stc
fwait
enter
jecxz
pop
aas
enter
pusha
lcall
adc
and
movsb
mov
jno
or
lahf
push
rol
in
cltd
aad
icebp
dec
pop
inc
mov
push
adc
cmp
push
sub
jmp
test
test
imul
xchg
in
xchg
test
js
jo
mov
sub
sub
subb
push
lret
mov
mov
adc
jo
gs
xchg
cltd
leave
in
push
adc
add
stos
lock
jns
jae
jmp
sahf
pop
icebp
arpl
push
sub
sub
in
outsb
mov
dec
cmp
pop
jo
js
mov
test
cmpsl
add
shll
mov
js
dec
adc
aas
jg
inc
cmp
in
sbb
rorb
push
adc
fisubl
mov
xchg
cmp
sub
les
roll
xor
lahf
ja
add
add
lods
sbb
pop
adc
lcall
lds
add
pop
add
mov
ficompl
imul
les
sti
add
mov
xchg
rorb
enter
ja
mov
ret
inc
or
mov
jmp
ja
scas
pop
mov
icebp
mov
sbb
cmc
popa
jns
and
arpl
pop
mov
rol
aas
cmp
loopne
xor
adc
jbe
int3
pop
cmp
in
jmp
in
ljmp
pop
cmp
into
cmp
testb
in
shlb
or
repnz
imul
adc
popa
pop
es
stos
push
dec
int3
pop
adc
std
or
mov
and
movsl
mov
add
push
push
rorb
jbe
adc
and
fs
mov
cmp
lcall
rorl
xor
xchg
pushl
je
outsl
cmp
orb
add
dec
bnd
adc
in
push
lds
or
cld
xchg
call
sbb
push
xor
inc
xor
jmp
mov
std
inc
sub
dec
nop
pop
add
jl
call
xor
push
lock
adc
lcall
imul
nop
cmc
xor
add
xor
push
fidivrl
mov
jne
adc
xor
mov
xor
sub
push
push
popf
data16
lods
sub
notb
and
jge
std
ret
mov
mov
dec
out
adc
dec
stc
std
push
lods
inc
mov
and
adc
outsb
loop
int
lcall
and
mov
mov
or
inc
or
repnz
std
popa
das
shl
cmp
cmp
out
mov
pop
push
push
cmpsb
xor
cmp
fmull
lock
sub
fstps
sbb
add
mov
push
adc
fsubl
arpl
cwtl
fs
insb
jnp
push
jg
insb
sbb
faddp
jb
push
repz
lcall
inc
jnp
adc
jg
sbb
pushf
inc
jne
dec
sub
imul
arpl
pop
repz
in
jo
icebp
imul
cmp
xor
sub
xor
push
test
pop
aad
add
notl
mov
push
fldcw
and
push
int3
outsl
inc
push
adc
ja
imul
dec
gs
xchg
into
repz
test
nop
sahf
cs
gs
into
push
repz
js
push
sbb
shll
dec
loopne
subl
outsb
outsl
lcall
adc
test
jne
mov
sub
std
cmp
dec
jmp
mov
cmp
jne
mov
mov
mov
in
cmpsl
shlb
aas
adcl
xchg
lcall
lahf
mov
dec
pop
xchg
cmp
movsl
or
hlt
xor
lret
call
fcmovnbe
loopne
fdivs
sbb
rorb
jo
insb
repz
mov
push
xor
aam
dec
or
mov
ret
xor
daa
sbbl
scas
xlat
xchg
test
add
outsl
pushf
push
cld
xchg
jle
cmpsb
xor
ret
jb
sbb
pop
adc
aaa
lret
jge
in
dec
xchg
mov
and
or
xor
nop
out
dec
hlt
mov
mov
xchg
nop
insb
cmp
aam
pushf
shrl
sbb
scas
test
xor
adc
cmpl
sub
sar
jo
push
les
push
fidivl
lods
bound
dec
push
xchg
push
ds
dec
inc
mov
cmp
cli
pop
daa
lea
out
xor
inc
popa
sbb
lret
cmp
xor
fs
jp
aas
cmp
leave
push
push
xor
testl
outsl
adc
fnsave
roll
push
es
test
add
pop
clc
clc
test
outsl
adc
and
nop
movsl
and
call
cmpl
fcompl
or
iret
mov
xor
xchg
push
icebp
ds
lods
push
dec
mov
int
ss
jno
sub
dec
arpl
shll
fdivrs
cmp
in
mov
loope
icebp
dec
rcrb
xchg
out
inc
mov
jecxz
cmp
ja
fs
ds
hlt
call
icebp
rcll
xorl
shlb
inc
mov
test
popa
mov
cmp
ja
cmpl
pop
and
sti
insl
gs
pop
js
das
mov
mov
cmpsb
xor
out
inc
xor
test
xor
push
pop
add
mov
les
icebp
daa
adc
jnp
movsl
sub
lahf
inc
test
jno
add
jno
xchg
lret
mov
cmp
imul
cs
pop
jge
lcall
inc
ret
loopne
mov
inc
nop
gs
repnz
cmp
hlt
ret
jo
and
in
jg
repnz
jae
sub
push
jmp
rcrb
xor
test
adc
push
fbstp
orb
int3
cwtl
pop
je
loop
or
in
sti
pop
sub
pop
es
ret
add
jns
imul
ss
outsb
push
xchg
adc
pop
popa
cmp
add
cld
scas
out
mov
sub
scas
daa
add
filds
inc
pop
push
adc
jne
xchg
inc
hlt
cltd
scas
arpl
dec
jl
iret
mov
rol
mov
in
imul
in
call
sub
cmp
fisttpll
xchg
dec
fcoml
or
das
sbb
hlt
aas
jecxz
xchg
push
in
sub
push
lea
add
sarl
testb
dec
aam
in
loopne
xor
jp
xor
icebp
insb
adc
call
sub
orl
mov
jae
adc
inc
or
mov
nop
addb
sub
or
daa
push
jmp
orb
stos
jl
fcoms
inc
mov
mov
cmc
push
add
inc
out
xchg
mov
push
xchg
dec
mov
jmp
lret
add
cmp
pop
cld
dec
rsm
mov
jecxz
sbb
xchg
adc
xlat
das
mov
mov
adc
push
ficomps
ror
insb
inc
jl
pop
push
mov
enter
jp
in
xchg
xorl
test
sbb
adc
dec
dec
or
dec
mov
aas
inc
adc
cld
push
bound
sub
scas
lret
fs
in
sub
jo
xchg
outsb
cmpb
sti
cmp
lret
or
adc
mov
popa
pop
test
ds
loope
popa
adc
and
and
cmpsb
scas
shll
sub
mov
push
xchg
les
and
stos
js
js
or
xor
pop
scas
push
sbb
mov
sbb
fisttpl
fidivl
pop
repnz
inc
mov
jle
lret
sbb
add
int
cmp
jmp
mov
dec
fcom
cmp
pop
ja
cmpsb
add
add
fmuls
cmpsl
pop
call
fildl
add
test
jmp
lahf
mov
mov
push
gs
dec
mov
add
in
push
add
push
bound
ret
adc
pop
and
imul
sbb
and
or
jle
push
ss
mov
scas
movsb
sbb
and
sub
inc
sub
adc
nop
inc
mov
cltd
xchg
pop
out
add
and
repz
fmulp
push
xlat
andb
mov
sub
fsubrl
push
loopne
pop
or
and
daa
loope
pop
into
ss
pop
push
dec
daa
outsb
pop
addb
xor
fisubl
sbb
mov
cs
repnz
sbb
andb
stos
and
adc
jge
fsubs
lods
hlt
cmpsb
popa
bt
shrb
xchg
test
pop
out
dec
xchg
lahf
inc
jecxz
inc
mov
stos
data16
shl
shl
xchg
jae
pop
xchg
mov
cmpsl
jmp
imull
cmpsl
bnd
jb
jo
loope
add
pop
aas
fistpll
lods
mov
mov
sar
adc
jle
out
loop
push
fimull
add
mov
cli
fwait
stos
xchg
pusha
ja
push
mov
aad
into
jl
sbb
sub
mov
call
ret
cmpsl
push
pop
mov
xor
pop
mov
sub
loopne
mov
push
adcl
sub
xor
mov
or
adc
jo
sarb
xchg
push
lret
out
out
jno
repnz
xchg
ja
xor
sub
sbb
sbb
popf
into
test
pop
mov
jge
xor
xchg
cmp
ret
aad
aam
leave
and
cmp
xor
adc
movsl
lea
cltd
mov
mull
sbb
lods
mov
sub
mov
mov
inc
out
clc
inc
mov
call
ror
in
divb
cld
push
prefetcht1
mov
stos
or
rorl
pop
enter
mov
sbb
xchg
jbe
insl
sub
lcall
and
fdivl
pusha
hlt
mov
lods
aam
dec
ret
sbb
lock
int3
push
neg
iret
add
jg
test
xchg
lods
cltd
rclb
into
xor
dec
jl
adc
dec
shlb
roll
cli
cli
lock
js
xchg
sbb
add
popa
push
xchg
leave
in
repnz
loope
jns
cltd
stos
dec
into
or
cwtl
sbb
imul
mov
arpl
mov
jl
adc
add
and
test
jmp
jns
push
sbb
pop
popa
xchg
mov
out
xor
add
mov
lds
sahf
mov
int
or
js
repnz
nop
and
pop
or
arpl
sbb
repz
lret
mov
loope
or
lcall
lods
notb
mov
imul
pop
mov
mov
pop
or
push
push
rclb
daa
fdivp
pushl
pop
inc
or
es
dec
es
jb
xchg
pop
pusha
mov
andb
push
dec
cld
push
jne
outsb
xor
pop
adc
int3
xor
lahf
push
inc
fsubrp
and
add
mov
fbstp
xchg
popf
fwait
pop
adc
push
sbb
ss
sbb
ror
push
insb
iret
mov
into
sbb
add
negl
mov
rorb
push
and
pop
aaa
and
aam
test
fldenv
xchg
std
pop
test
mov
notl
and
mov
dec
movsb
jp
jmp
scas
sub
lahf
jno
jp
rcl
cli
loop
int
imul
out
mov
call
push
movb
test
int
push
cmc
imulb
scas
inc
ret
xor
bound
pop
in
leave
hlt
into
add
mov
fsubl
mov
aad
pop
movsb
push
jge
xchg
iret
cmc
push
sbb
mov
test
lods
dec
dec
xchg
xor
sub
sbb
jp
sub
out
xchg
push
incl
adcb
pushf
pop
pop
sub
rcl
bound
xchg
lahf
push
dec
nop
daa
jae,pn
cmpsb
and
aad
aam
shrb
mov
mov
sub
cltd
popl
xchg
pop
stos
lret
ja
jg
popf
jge
in
inc
mov
xchg
lahf
loopne
dec
mov
js
stc
pusha
lahf
sub
mov
jp
test
and
jecxz
cmp
sbb
jo
int3
jns
test
push
iret
push
stc
lret
jno,pt
xchg
shrb
xlat
and
xchg
sub
movsb
es
fcmovu
sub
and
push
sub
pop
mov
mov
lcall
sbb
xchg
mov
cmp
ja
jno
sub
mov
push
in
mov
inc
or
stos
adc
mov
push
lret
and
lret
cmp
lea
lock
and
sbb
jb
daa
or
int3
push
lcall
jo
je
xchg
dec
push
shll
nop
mov
out
and
or
gs
mov
push
out
inc
test
adc
imul
iret
jb
mov
fldt
icebp
mov
push
inc
adc
push
inc
xchg
ret
add
jmp
in
jp
jne
mov
sbb
mov
xlat
push
loope
adc
sub
cwtl
adc
in
mov
scas
mov
cwtl
mov
nop
pop
lock
fistpl
cmp
test
jmp
or
dec
push
jg
jnp
xorb
jle
addr16
jg
jnp
aad
sbb
or
rolb
push
and
sub
lret
pop
outsl
vxorpd
ljmp
inc
cmc
add
outsb
stc
mov
sbb
mov
sub
pop
insb
mov
incb
jno
pop
mov
rolb
adc
int
add
push
cli
adc
out
sbb
adc
ret
sub
cmpsl
xchg
jecxz
or
push
imul
dec
mov
push
sub
mov
mov
rolb
sar
add
addr16
pop
inc
push
movlps
lret
push
xchg
in
mov
sub
cmp
pop
cmp
cmpl
aas
test
jo
dec
lret
fwait
addr16
jg
cmpsb
pop
in
aam
xor
inc
inc
notl
inc
sbb
pop
mov
jecxz
lock
cmovo
jnp
mov
call
sbb
notl
dec
and
enter
hlt
xchg
adc
dec
das
mov
in
inc
xor
out
adc
push
xchg
xchg
inc
cmp
cmp
imul
imul
pop
pop
push
mov
loopne
mov
pusha
int
movsb
dec
aas
push
mov
mov
or
sti
mov
out
imul
mov
adc
push
inc
fnstenv
dec
nop
shrl
inc
adc
inc
roll
sub
mov
fnstsw
stos
sar
aad
pusha
jae
or
popa
add
mov
xchg
add
movsb
sti
jbe
shr
mov
scas
icebp
aam
dec
pop
and
push
sub
ljmp
int3
jmp
insl
leave
outsb
sub
mov
bound
iret
leave
and
dec
rorb
xchg
lea
cmp
loop
xchg
mov
out
add
adc
jbe
mov
ss
mov
and
dec
incb
inc
outsb
nop
ss
into
cmp
mov
lcall
mov
out
xor
dec
loope
pop
pop
xor
dec
mov
arpl
xchg
inc
xchg
xor
mov
repz
or
ret
push
stc
cmp
or
insb
ror
fs
adc
and
xchg
adc
push
cld
dec
sub
loopne
arpl
xchg
sbb
fbld
in
bound
sbb
rorl
mov
packsswb
sti
fwait
pop
nop
inc
imul
cmpsl
test
gs
dec
mov
loope
mov
xchg
or
lods
mull
mov
add
dec
stc
int3
xorb
in
xchg
sbb
sahf
dec
pop
mov
push
call
pop
jle
mov
mov
jo
addr16
stc
lret
and
jle
aas
ret
hlt
clc
stos
mov
pop
pop
aad
cmc
int
cwtl
sbb
cmp
repz
arpl
shll
ret
les
in
cmp
mov
mov
clc
pop
and
ljmp
mov
aaa
iret
cmp
push
sub
jg
hlt
jo
sarb
repnz
sbb
dec
outsl
sub
inc
fcompl
and
ljmp
pop
lods
xor
cld
aas
xor
mov
bound
aad
adc
cld
lret
push
sub
mov
mov
jmp
mov
aad
mov
loope
jp
cs
or
xor
fwait
pop
mov
rcrb
movsl
pop
jnp
decb
mov
fiaddl
sbb
mov
fwait
sub
pusha
push
leave
adc
mov
lret
pop
push
test
inc
adc
mov
test
push
mov
in
jns
popa
mov
add
sbb
xorb
dec
jmp
inc
fldenv
push
lock
inc
scas
fsubs
inc
sub
xchg
fwait
inc
mov
fucomip
imulb
mov
clc
lea
pop
jnp
addr16
mov
and
mov
sbbl
jo
sbb
fdivrs
sub
ljmp
adc
loope
fmuls
movsb
mov
add
stos
mov
or
xchg
gs
cmp
sub
add
icebp
mov
andb
test
sbb
add
jne
push
inc
add
jo
mov
daa
add
lret
adc
or
mov
lret
and
jo
and
mov
mov
sub
sti
movb
push
out
add
loope
add
popf
mov
xchg
add
push
cmp
lods
adc
insl
mov
out
stc
push
push
out
inc
fimull
dec
js
and
cmp
push
cli
add
pop
xchg
clc
cmpb
xor
add
stos
mov
fists
dec
inc
mov
iret
xor
shlb
pushl
outsl
jp
sbb
cwtl
test
mov
cli
ljmp
lahf
mov
xchg
xchg
les
iret
ja
imul
push
ss
clc
add
loope
shrl
sbb
mov
cmp
lods
jae
test
fbstp
fwait
push
lret
or
sub
dec
and
mov
mov
ja
xlat
cltd
sbb
pop
cmp
pop
xor
icebp
push
test
je
cltd
repnz
mov
mov
adc
gs
mov
xlat
repnz
ljmp
fistl
push
orb
add
pop
shll
addb
int
fadd
mov
out
stos
lcall
mov
inc
or
repnz
xchg
cltd
divb
mov
jo
int3
add
rcl
xor
push
sbb
inc
out
aad
push
sub
fcomi
pop
scas
pop
in
leave
xor
or
sbb
insb
inc
xlat
out
cmp
ficompl
xchg
orb
inc
or
jne
int3
leave
rcrl
loopne
inc
into
outsb
mov
mov
jge
push
pop
add
dec
aas
pop
xchg
xor
sub
fwait
push
mov
cmc
imul
cld
sub
je
mov
lock
mov
inc
jle
cmp
mov
sub
pop
fimull
mov
lods
add
jg
cmp
xchg
test
sbb
jae
add
sbb
add
mov
dec
mov
faddl
pop
repnz
insl
cwtl
inc
stos
pop
negb
cwtl
icebp
jmp
xor
mov
lea
push
jbe
imul
sbb
jmp
pop
mov
jecxz
insl
jnp
lahf
repnz
or
sbb
mov
pop
sub
hlt
or
into
test
outsl
fidivl
mov
mov
cs
add
imul
add
add
mov
loopne
loopne
adc
inc
mov
fwait
test
lock
aaa
stos
cmc
jae
iret
testl
inc
rcrl
push
popf
clc
sbbb
das
jb
jbe
in
jmp
jge
repnz
cmp
aaa
mov
aaa
xchg
jo
in
pushf
and
in
fcompl
nop
cwtl
dec
pushf
adc
push
mov
xor
mov
push
cmc
pop
xchg
mov
sub
inc
scas
popl
sbb
push
pop
xchg
das
ret
cmp
cmp
xor
dec
jg
out
movsb
sti
xchg
test
daa
push
push
and
lcall
dec
fldcw
dec
lcall
jne
and
test
add
lods
test
sub
mov
stc
int
testl
loopne
shrl
les
mov
sbb
mov
adc
out
loop
sbb
nop
push
cmp
mov
sub
aam
sub
testl
xorb
das
clc
vmovntps
push
pop
mov
adc
stos
addr16
jle
repz
fs
addr16
cmpsb
inc
cli
pop
loop
xchg
sub
mov
test
inc
cmp
add
test
cmp
jno
sub
mov
arpl
aaa
imul
jnp
mov
adc
cli
js
cmp
in
das
sbb
sbb
push
aam
push
sub
pop
bound
adc
das
push
pushf
cmp
push
adc
or
pop
shlb
ss
cltd
outsl
xchg
lcall
es
shr
push
sbb
imul
imull
ljmp
dec
mov
and
mov
adc
sub
sbb
mov
in
fdivrs
ss
and
fs
insb
lock
jnp
and
add
lea
mov
aaa
ss
mov
sbb
dec
cmp
pop
sti
ljmp
pop
cmp
shll
imul
jp
mov
mov
out
sbb
pop
jmp
add
imul
lret
stos
rcrl
inc
ds
outsl
sub
subb
adc
pop
mov
push
dec
ficompl
and
xor
mov
adc
adc
mov
roll
add
testb
call
pop
aas
xor
adcl
cmpsb
xchg
mov
cmp
pop
push
push
aas
xchg
push
add
call
and
push
sub
jp
dec
fiaddl
rcrb
cmpsl
shll
aad
sbb
fcomps
mov
inc
fisubrl
subl
sbb
fs
push
out
in
cltd
fs
arpl
dec
push
jo
ss
push
shr
cmpl
mov
pushf
or
sub
test
fwait
inc
call
add
rol
ret
out
outsb
jmp
call
cmp
pop
stos
and
hlt
sub
adc
jge
in
cmp
sahf
add
fists
add
adc
mov
push
pop
pop
mov
adc
or
inc
xor
cmp
pushf
xchg
mov
ja
mov
imul
loopne
out
scas
xor
pop
xchg
test
lds
notb
inc
gs
and
inc
mov
fucomp
dec
mov
sub
nop
es
adc
fcmovu
and
push
sub
xor
xor
cmc
pop
nop
pop
sti
cmpsb
mov
sbb
or
dec
pop
dec
lahf
sbb
sub
or
dec
jecxz
mov
mov
jo
insb
mov
cmp
inc
sahf
ljmp
inc
int3
sahf
xchg
notl
xor
mov
mov
xchg
pop
push
jbe
adc
movsb
cmp
pop
test
push
popf
mov
addr16
add
scas
outsl
clc
scas
adc
push
dec
add
pushf
stos
mov
shlb
sbbb
dec
sbb
mov
sub
out
pop
scas
dec
icebp
repz
cld
and
cmp
ljmp
imul
movsb
pop
adc
hlt
lret
shufps
lcall
sub
imul
inc
mov
es
rcl
dec
jnp
rcll
int
jae
test
xor
add
pop
sti
in
in
push
cld
iret
mov
sbb
ja
repz
push
pushf
push
fists
sub
xchg
daa
mov
data16
jbe
movsl
add
sub
jne
enter
imul
pop
into
lds
xlat
jae
xor
movsb
and
jnp
ret
xchg
push
add
aam
lret
jne
pop
out
pop
jecxz
dec
subl
cltd
insl
mov
les
stos
or
aas
add
ret
sbb
ror
or
add
jmp
loopne
push
inc
fldl
push
lock
stos
cmp
pop
in
lods
fisubrs
lret
pop
inc
cmp
das
mov
popf
add
mov
shrl
mov
insl
test
stc
fwait
pop
cmpsb
mov
ret
fistpl
inc
pop
mov
insb
cmp
mov
push
xor
inc
out
shlb
decb
aam
ret
subb
roll
cltd
dec
movsl
lods
jge
icebp
scas
sub
test
push
add
add
ja
int
push
push
call
ret
rolb
cmpsl
sbb
ret
mov
push
add
and
sub
add
stc
scas
aad
inc
andl
mov
cld
jge
cmp
mov
lea
mov
ficompl
sub
fsubrp
jae
aad
adc
adc
push
out
out
pop
cmp
scas
dec
js
cmp
jle
jb
pop
pop
pop
mov
ss
js
insl
inc
shrl
add
lret
lret
fwait
add
sti
jle
add
sbb
out
jl
jmp
lahf
out
sbb
test
ds
fcompl
das
pop
lock
repnz
enter
lret
ds
iret
mov
out
insl
or
xchg
sub
push
jp
lods
pop
pop
adc
in
fnstsw
rcrl
test
mov
movsb
loope
imul
int
dec
sbb
push
gs
das
icebp
inc
adc
xor
test
frstor
push
mov
lock
dec
cwtl
in
idiv
sub
lret
adc
and
loope
inc
lods
pop
daa
xchg
aas
mov
mov
cmpsl
cmp
test
jae
adcl
mov
lret
fdivrl
andb
and
gs
cltd
aam
mov
gs
mov
aam
in
int
jge
xor
mov
jle
xor
enter
incl
cli
mov
fwait
and
adc
stos
cmp
fdivs
stos
sahf
mov
test
decb
mov
and
xor
mov
sbbb
mov
popl
push
das
in
arpl
orb
cmp
adc
xor
jmp
pop
je
cmp
mov
ljmp
mov
mov
out
dec
mov
out
pop
cltd
adc
negb
sub
sahf
popaw
xchg
sub
xlat
fadd
clc
sbb
inc
fwait
xchg
xchg
push
repnz
cli
or
dec
aas
lock
xchg
hlt
hlt
into
pusha
jno
and
mov
jb
pop
outsb
loopne
scas
cmp
push
mov
xchg
mov
mov
inc
mov
inc
in
and
jae
dec
les
jge
and
push
xor
test
xor
sbbl
add
push
or
cmp
push
sbb
mov
push
pushf
cmc
aad
aas
mov
fildl
rolb
add
sarl
dec
add
or
hlt
adc
push
adc
cmc
pop
sbb
and
scas
lcall
sbbl
in
test
ss
jb
jle
cmp
aam
loop
ret
and
test
lcall
sub
pop
lods
pop
push
test
adc
out
mov
sti
sbb
jecxz
push
or
lret
and
popl
jbe
cli
push
imul
test
cmpsb
cmp
pop
lods
sub
xorb
popf
inc
test
xchg
fsts
push
dec
mov
out
insl
dec
jae
pop
mov
dec
dec
push
shrl
fisubs
jmp
mov
jo
cmp
out
add
or
xchg
mov
inc
xor
in
and
xor
and
jnp
cmp
movsl
inc
dec
sbb
push
int3
out
fwait
inc
dec
dec
mov
pop
nop
pop
ds
clc
cld
jo
add
xchg
dec
loop
push
pop
add
lock
lds
cmpsb
in
mov
dec
xchg
fisubs
aad
xor
out
push
mov
inc
hlt
leave
fwait
push
cmpsl
mov
fdivs
shrd
jb
out
adc
test
dec
push
pop
cmp
lea
xchg
lahf
shll
xor
or
mov
sub
push
out
push
mov
inc
scas
dec
jb
outsl
rcrl
and
mov
inc
jg
or
cmp
mov
je
mov
xchg
lea
xor
ds
jle
hlt
dec
mov
sbb
mov
xor
test
ljmp
push
mov
pop
arpl
aad
inc
pop
fwait
mov
xor
mov
mov
push
movsb
jmp
jg
jecxz
and
cltd
arpl
icebp
jnp
fcoml
mov
subb
inc
sub
mov
adc
test
pushf
jne
movsl
or
popa
and
dec
jmp
flds
inc
add
mov
dec
or
inc
enter
dec
mov
rcr
cmc
push
jge
fucom
enter
popa
xor
mov
push
jae
and
pop
and
f2xm1
xchg
and
lcall
test
cmpsb
std
mov
nop
fadd
pop
mov
dec
sti
pop
ror
jo
inc
cmp
stos
inc
jmp
rol
and
daa
les
imul
mov
cmc
stos
pop
jne
es
sub
shll
in
dec
je
mov
je
jne
jl
sub
jo
rcl
mov
add
aam
xchg
pop
push
pushf
add
push
in
mov
test
sar
dec
dec
dec
dec
push
sbb
xlat
jne
cltd
push
fistps
fcomi
adc
enter
mov
jl
inc
adc
aaa
push
rorb
cmp
jle
clc
cmp
fnstcw
dec
sub
out
push
sub
sbb
or
mov
rolb
mov
pop
test
test
jb
outsl
enter
mov
out
mov
mov
dec
pop
xor
pop
adc
orl
mov
repz
pusha
es
enter
sub
out
pop
das
add
cmp
add
dec
inc
and
icebp
arpl
and
lods
push
mov
or
xor
lock
in
in
jne
out
daa
fcmove
inc
negb
mov
push
mov
outsl
sub
push
les
imul
shl
js
orb
cmp
push
push
sti
test
dec
pusha
pavgw
fnstsw
mov
push
mov
lahf
iret
pop
addr16
dec
fcoml
test
out
push
fmuls
jo
inc
xor
lds
enter
jge
sti
ss
repz
xor
add
out
sub
mov
pop
rcll
xor
mov
add
mov
lock
test
push
test
mov
das
add
cltd
les
or
cli
in
push
popf
pop
mov
cmpsb
ret
shl
mov
in
test
mov
sub
into
xchg
jno
xor
test
mov
push
xorb
xchg
jmp
mov
mov
cmp
or
out
jbe
mov
xchg
popa
pushf
outsb
scas
jns
adc
or
jo
outsl
xor
repnz
pop
mov
leave
int
cmp
mov
fcomi
aam
test
sar
ljmp
dec
push
ret
je
adc
pop
gs
pop
mov
ss
lds
shrl
sub
and
ret
clc
scas
mov
loope
add
push
adc
fwait
out
push
pusha
sub
mov
pop
push
mov
lret
add
mov
or
scas
testb
popf
mov
fsubrl
push
mov
inc
ret
stc
mov
fsts
jg
daa
fs
mov
mov
pop
lock
loop
mov
sahf
xchg
cmp
adc
dec
add
jmp
pop
mov
fwait
or
adc
or
adc
pop
sbb
or
loop
add
xor
aaa
fldenv
cmp
fidivrl
sbb
fdivr
xor
mov
out
adc
mov
bound
test
inc
lret
or
mov
out
lds
lret
mov
xor
test
shrb
mov
jnp
push
outsb
xlat
inc
jg
stos
rcll
je
iret
xchg
pop
add
cs
rorb
inc
in
pop
and
push
out
lods
mov
jnp
icebp
test
sbb
pop
test
cwtl
movsb
stc
dec
pop
mov
dec
add
pop
sbb
push
xchg
fnsave
mov
jmp
jnp
add
dec
fbld
xlat
stos
mov
insb
addr16
lea
add
cmp
roll
or
insl
cmpsb
dec
sbb
or
arpl
push
aad
jbe
stos
imul
adcb
addl
bound
mov
dec
pop
daa
mov
rcrb
fcomps
pop
cmp
push
pop
cmpsb
mov
or
pop
xchg
mov
les
adc
nop
or
shrl
out
xchg
jnp
inc
cmpsb
pop
test
jle
nop
jbe
imul
imul
loopne
nop
cld
xchg
jmp
cmp
sbb
or
sbb
mov
out
sub
cmp
je
pop
mov
movb
jo
cld
stc
mov
and
aad
daa
lcall
jge
mov
addr16
xchg
push
adc
sub
pushf
dec
repz
loopne
lods
inc
mov
xchg
add
dec
sub
mov
ja
psrad
push
xchg
fmuls
fisubrl
in
movsb
ss
push
inc
jp
je
dec
add
add
sbb
addr16
or
sub
fwait
int3
in
lcall
notl
stc
lcall
cmp
divl
les
cmp
jo
out
loope
in
push
xor
mov
xchg
sub
cmpsb
dec
cs
dec
adc
je
jmp
stos
lock
sbb
sub
decl
jo
xor
mov
xor
sbb
push
jne
cli
jmp
std
sub
stos
mov
rcr
lods
movsb
jmp
lods
mov
xchg
and
stos
xchg
lods
mov
sub
xchg
or
pop
xchg
pop
orb
in
into
sub
int3
xorl
and
fldt
in
jp
xchg
xor
push
add
cmp
fists
jge
subl
add
idiv
lcall
jns
in
or
mov
xchg
sub
imul
add
leave
flds
and
dec
xchg
pop
fs
sub
imul
xor
popa
add
inc
lahf
test
test
dec
jmp
and
xchg
sub
push
and
mov
lahf
fsub
arpl
sbb
hlt
mov
or
icebp
or
fisubrs
stos
mov
scas
sbb
adc
push
fsts
pusha
ljmp
movsb
test
sahf
add
dec
cmp
ret
xchg
gs
xor
mov
pop
and
or
dec
sub
inc
mov
or
dec
pop
test
pop
int
ss
pop
jl
cltd
push
sbb
xor
popa
sbb
and
aaa
push
xor
push
and
xchg
ds
adc
insl
cmp
mov
sbb
cmp
sbb
aam
std
lea
xorl
rorl
or
add
cs
int
xchg
or
lea
test
lock
cwtl
ds
adc
mull
mov
sar
mov
rclb
xchg
loope
pusha
mov
push
mov
cmpsb
mov
out
inc
mov
es
cmp
cmp
out
leave
fimull
ss
in
movsl
in
lods
sbb
fnstsw
cwtl
and
fildll
testl
pop
clc
iret
sub
xchg
inc
pop
inc
lcall
hlt
mov
in
mov
sub
sbb
jns
xor
or
mov
enter
sub
aam
rclb
mov
jmp
int
fidivl
pop
mov
cmpsl
sub
stos
mov
out
adc
push
roll
movsl
cmp
mov
cmp
les
cmc
fwait
xchg
repz
adcl
pop
pop
out
in
or
mov
and
pusha
inc
iret
mov
jp
fstpt
ret
jge
pop
shr
sbb
push
inc
int
jmp
push
mov
inc
js
fbld
adcl
jl
ja
mov
and
pushf
fisttpl
js
ret
ja
adc
movsl
lock
lods
sbb
mov
dec
nop
pop
test
arpl
shll
call
cltd
out
stos
fcomp
push
push
xor
jg
addr16
cmp
push
jecxz
out
xchg
lahf
in
stos
pushf
xchg
fcomps
ds
enter
pop
add
jg
scas
cmp
jmp
mov
mov
imul
adc
test
popf
loop
adc
or
shll
mov
xchg
and
dec
adc
pop
je
lret
sub
out
and
hlt
scas
pop
ret
out
mov
popa
jb
lret
in
data16
daa
sub
mov
xor
mov
negb
int
dec
pop
mov
inc
pop
jb
xchg
xor
xor
mov
in
shr
pop
add
inc
xchg
pop
jg
xchg
ds
push
pop
cmc
or
js
or
mov
rol
mov
jne
pop
fwait
or
jmp
dec
pop
xchg
jg
icebp
jecxz,pt
testl
testl
pop
xchg
mov
push
jecxz
fnstsw
dec
jo
cltd
sub
sub
mov
xor
push
mov
push
ret
inc
and
sbb
inc
fucomi
pop
mov
sbb
sub
pop
lods
movsl
mov
push
push
adc
orl
xchg
inc
sbb
xchg
mov
dec
ret
or
aam
jge
test
addr16
inc
pop
fstpl
inc
and
sbb
daa
movsl
cmp
jmp
mov
repnz
mov
nop
or
fs
push
mov
xor
and
and
sub
mov
pop
outsl
pop
or
pop
into
shr
daa
out
mov
dec
dec
cmpl
syscall
clc
test
jbe
repnz
push
inc
pop
popa
xor
jbe
xchg
inc
call
or
outsb
ret
push
pop
fstpt
or
or
dec
add
jno
and
shll
mov
inc
pop
sub
cld
daa
mov
and
inc
rcll
jl
jp
lret
cltd
sub
outsb
arpl
testb
push
hlt
xor
add
xchg
scas
or
add
leave
xchg
dec
add
fildll
dec
iret
mov
xor
inc
cmpb
in
lds
inc
pop
addr16
ret
dec
daa
pop
cld
lahf
adc
mov
or
mov
adc
xchg
inc
xchg
lock
mov
fstpl
mov
adc
jecxz
gs
push
lahf
or
pop
sub
faddl
cld
nop
and
das
das
lcall
movsl
xchg
lock
outsl
pop
je
iret
mov
das
push
movsb
inc
mov
push
dec
sbb
push
xor
lods
adc
mov
or
shr
rcl
xchg
sti
mov
cmp
xchg
adc
jnp
adc
cltd
fildl
mov
stos
iret
dec
sub
js
add
adc
idivl
jnp
fisubl
sbb
jle
ljmp
lret
and
add
popl
pop
fxch
sbb
mov
adc
mov
pop
xchg
mov
test
lods
fsubrs
daa
sti
push
mull
xchg
xchg
jg
inc
fcompl
mov
jmp
pop
mov
pop
and
cwtl
pushl
push
dec
pop
scas
adc
movsl
fs
sub
aam
push
sar
stos
mov
jae
push
push
inc
or
gs
jb
xchg
sbb
mov
xlat
xchg
add
int3
sub
ss
fmuls
push
xchg
pushf
mov
xchg
xlat
and
and
pusha
mov
insb
xchg
xor
adc
pop
add
loopne
mov
stos
dec
icebp
clc
ds
ret
out
xchg
jg
dec
xor
push
js
cld
lahf
incb
sbb
adc
xor
lock
cmc
and
add
loop
leave
sub
xlat
movsb
out
inc
repz
jle
adc
les
imulb
repz
shr
cmp
fisubrl
loope
jae
push
dec
push
icebp
lock
jae
push
jp
sbbb
pop
cltd
test
cltd
push
and
push
shlb
sbb
jo
loop
in
xor
sbbb
shr
pop
dec
jg
iret
adc
int3
mov
cmp
add
into
aaa
jp
push
and
lock
rcrl
insl
mov
repz
sub
shrl
notl
jnp
cltd
jl
cmp
cmpsl
mov
adc
lcall
cmc
adc
push
sub
dec
ja
into
icebp
iret
addr16
mov
jno
ds
jge
xor
jb
jo
pop
or
pop
pop
loope
adc
inc
lahf
pop
fcomps
add
iret
cmpb
xchg
adc
mov
das
dec
sub
sti
je
movsl
cmpsl
mov
inc
ret
inc
xchg
mov
cmpsl
and
scas
das
loopne
mov
and
ret
shll
fcmovnbe
add
inc
lods
push
xchg
les
pop
xchg
mov
popa
or
fsubr
jbe
cwtl
xchg
enter
xchg
arpl
mov
lods
dec
and
xchg
aad
mov
imul
repnz
fucom
incl
scas
lods
cmp
pop
push
jge
mov
sbb
stos
arpl
stc
add
cmp
push
stc
scas
xchg
sub
pusha
ljmp
pop
pusha
sbb
mov
inc
ds
jne
fistps
test
lahf
mov
stc
cmc
lret
push
outsl
fcmovu
xor
pusha
mov
mov
int
adc
stos
push
data16
adc
dec
in
enter
loope
xlat
int3
jle
adc
xchg
mov
xchg
cltd
cmp
lds
push
add
inc
push
and
out
and
inc
aad
imul
and
aam
repnz
mov
leave
ja
adc
call
sub
xchg
insl
fadds
mov
cmc
add
xor
sbb
inc
add
in
addr16
stos
sub
cmp
dec
cli
nop
aam
test
sbb
mov
mov
cmp
lret
aam
sbb
scas
aam
pop
aam
pop
inc
nop
mov
dec
mov
pop
sbb
testb
push
rcrb
lret
cmc
leave
add
lcall
dec
push
adc
mov
hlt
or
pop
lock
add
lds
jecxz
ja
and
adc
xchg
ljmp
inc
pop
xchg
xlat
cmp
xor
aas
cmc
and
jb
mov
jp
inc
mov
mov
dec
dec
pop
roll
insl
sbb
pop
test
add
fwait
mov
movb
mov
jmp
out
std
dec
mov
scas
mov
mov
scas
xchg
cwtl
orl
shll
into
lcall
and
mov
push
inc
scas
imul
test
mov
push
movsb
push
mov
pop
pop
cli
shrb
enter
ret
sbb
and
dec
xor
rolb
jno
pop
dec
pop
jp
lods
cmp
int3
and
sub
cs
sbb
jg
lock
xlat
dec
popa
jge
sub
mov
lret
dec
imul
push
mov
stc
inc
fs
ret
jecxz
int3
popf
push
repz
lock
cwtl
sbb
lret
jl
pop
mov
ror
xchg
inc
sahf
je
xchg
fistpll
or
add
aaa
adc
jnp
inc
movsb
xchg
aam
outsb
push
adc
mov
rclb
cli
fs
repnz
mov
fsts
sbb
fstpt
jmp
arpl
fcmovb
hlt
pop
fimuls
ret
jb
lea
fwait
ljmp
daa
push
jmp
sbb
outsb
add
lea
inc
jmp
subl
insb
ret
pop
xchg
and
cmpl
inc
jge
call
add
popf
orb
xchg
cmpl
add
adc
icebp
aas
and
cld
adc
imul
push
ror
cs
test
and
and
insl
sbb
je
mov
fcompl
xchg
mov
out
xchg
adc
aad
cmp
repnz
out
xor
mov
cmpsb
bound
and
xchg
inc
movsb
jno
mov
dec
fs
inc
xlat
mov
pusha
mov
arpl
dec
fs
jo
inc
mov
mov
call
and
jb
into
jle
jnp
sbb
sub
jns
sub
jb
outsb
cmpb
pushf
xor
and
mov
call
xchg
out
jae
mov
fldl
jne
sub
ret
cld
outsb
cmp
xchg
push
jo
hlt
insb
mov
stos
mov
adc
xor
mov
into
and
lahf
or
xor
pop
sub
adc
aam
out
ja
cmp
lret
aad
cs
test
bound
cmpl
sub
inc
outsl
and
mov
shl
cltd
adc
lcall
xor
int3
daa
inc
std
sbb
or
jp
lahf
xchg
pop
pop
adc
mov
cld
stos
int
insb
mov
and
dec
rolb
dec
push
imul
xchg
xor
mov
cmp
ljmp
rorl
or
aas
dec
xchg
jl
into
test
jmp
mov
mov
xor
push
insb
je
push
mov
mov
add
xchg
stos
into
pusha
adc
inc
fmulp
aaa
in
mov
cmpsl
push
fisttpl
mov
lods
mov
add
push
sti
xor
in
pop
push
push
mov
xchg
xor
jno
sbb
push
xor
stos
adc
stc
push
sbb
xchg
sbb
outsl
jge
out
or
dec
pushf
bound
in
cmpsl
pop
cmp
sub
imul
arpl
xor
andl
push
push
xor
imulb
fsubrl
leave
add
sbb
sbb
dec
stos
out
mov
mov
outsl
fcmovb
lds
idivb
fisubrl
pop
cmp
push
ret
pop
pop
jecxz
xchg
inc
imul
js
push
mov
pop
rcrl
jae
mov
stc
ds
sbb
aam
or
ljmp
mov
push
mov
adc
push
xchg
jne
ds
pop
roll
or
and
repz
jno
sti
mov
sub
xchg
dec
ret
mov
mov
fcoml
or
mov
jl
imul
jp
push
sub
cmpsl
loope
xor
push
sbb
shll
push
mov
pop
add
push
cld
push
mov
data16
mov
sub
cmpsl
nop
mov
adc
out
ret
daa
push
in
insb
int
test
add
popf
and
sbb
stos
filds
outsb
jo
mov
mov
jb
rcl
ret
push
xor
jnp
xchg
test
arpl
popa
pop
xor
mov
cmp
and
cmp
pop
ds
xor
mov
ja
popf
xor
clc
inc
mov
mov
andl
xchg
pcmpgtd
mov
jns
aam
out
add
aaa
int
shrl
cmp
push
mov
sbb
enter
stos
insl
lock
cmp
fwait
pop
mov
add
int3
in
stc
push
ja
shlb
les
lock
dec
sub
pop
xor
push
jae
jb
test
xor
mov
xchg
int
inc
scas
sub
stos
cmp
loope
cltd
xchg
xchg
lcall
ret
and
inc
sbbl
push
imull
testl
arpl
mov
and
imul
xor
jecxz
adc
cmpsb
je
push
add
stos
sbb
inc
pop
jle
daa
jg
pop
insl
scas
dec
pop
push
mov
mov
sbb
aam
jae
sbb
stc
ror
cltd
icebp
mov
adc
push
in
mov
sub
ret
ljmp
lcall
cwtl
push
or
stos
pop
pop
lea
cmc
movsb
and
xor
adc
test
in
adc
cmpsb
lea
sub
jns
fwait
add
or
push
push
sub
mov
mov
pop
popa
mov
adc
xor
imul
or
or
lods
pop
das
out
sbb
pop
jo
push
mov
adcl
test
inc
loope
mov
or
pop
and
mov
in
incl
pusha
imul
lods
push
pushf
int
dec
cmp
fistpl
into
xor
cmp
mov
cmc
lret
push
add
insb
jecxz
xchg
xchg
stos
cmc
loopne
aam
popf
lret
mov
cs
or
enter
lods
sub
mov
stos
sbb
shll
int
repz
gs
and
ja
std
and
aaa
cli
dec
es
xor
jl
and
xor
sub
xchg
inc
orb
dec
mov
dec
jmp
sti
xor
rorb
pop
popa
push
jb
push
push
call
push
gs
loop,pn
cld
je
inc
sbb
negl
ror
dec
push
inc
sub
mov
loope
pop
imulb
test
xor
xor
cmp
mov
mov
push
pop
cwtl
insb
bound
or
xchg
repz
inc
inc
repnz
pop
cld
sub
xor
pop
cmc
jge
movsl
xor
cmpsb
push
ja
dec
data16
mov
sahf
xchg
inc
scas
push
or
inc
mov
add
push
sub
scas
fadds
cs
sahf
stc
xchg
sbb
sub
outsb
or
xor
xchg
pusha
cmc
into
lea
dec
fdivs
sub
jns
xor
test
xor
lea
dec
ret
int
dec
mov
bound
pop
lds
rolb
cltd
jns
mov
jns
jbe
das
xchg
pop
sub
test
dec
andl
adc
pop
dec
inc
sbb
stos
xor
call
xchg
bound
push
popa
mov
inc
les
lock
sub
and
pop
hlt
aas
ss
out
fildl
pmullw
xchg
rcrl
test
clc
popf
lods
repnz
cmp
sub
adc
inc
adc
or
sub
fs
lahf
les
push
cmpsl
adc
insb
mov
loope
shr
xor
mov
adc
pop
push
in
pop
push
adc
mov
mov
lcall
push
repnz
jmp
lods
in
out
ret
mov
adc
cmc
push
rcrl
cmp
js
ds
mov
push
push
inc
cld
push
adcb
gs
dec
or
in
loop
stos
data16
mov
mov
test
loop
inc
xor
and
and
mov
in
sbb
mov
fs
out
icebp
mov
repnz
sbb
adc
pop
cmp
adc
and
jmp
mov
cmp
xlat
adc
inc
pop
addl
popf
clc
movsb
loopne
pop
sbbl
iret
mov
push
outsl
add
sbb
mov
aam
dec
outsl
jae
mov
inc
mov
jmp
in
push
dec
sub
pop
mov
lahf
fwait
jb
mov
mov
push
rcrl
jmp
or
lods
push
sahf
xchg
mov
push
pusha
jne
loop
enter
add
dec
mov
mov
mov
test
fbld
push
push
mov
pusha
pushf
push
fldl
icebp
mov
aam
mov
mov
and
xor
add
leave
pop
sbb
stos
jne
push
jg
mov
outsl
cmp
je
movsb
insb
ja
lock
dec
fldcw
jb
arpl
dec
jo
adc
mov
push
nop
sbb
cmc
mov
jae
fs
jmp
jb
xlat
test
dec
es
mov
addr16
fbld
jmp
insb
inc
lcall
or
pusha
loope
mov
rolb
std
fucom
push
rcrb
lahf
ret
mov
jle
inc
or
inc
notb
call
je,pt
inc
jecxz
lods
mov
add
icebp
lret
xor
jae
jns
dec
lock
pop
shlb
add
ret
lcall
push
sbb
inc
sahf
rclb
aaa
out
les
dec
mul
je
pop
sub
mov
pop
mov
dec
add
cmpsb
sub
jbe
scas
inc
xlat
push
push
xor
imul
shrb
sub
outsl
xchg
test
jb
sub
das
aaa
jno
and
fcomp
xchg
cmp
lret
push
cltd
lock
add
push
pop
adc
insl
in
xlat
xor
and
cs
sub
sbb
xchg
push
aam
xchg
cmp
mov
test
call
sub
ss
sub
lds
lret
pop
gs
nop
lcall
daa
pop
ss
adc
sahf
push
outsl
ret
adc
lods
mov
sub
in
or
ljmp
add
es
pop
stc
push
xchg
or
dec
sbb
nop
push
add
xchg
test
out
es
lcall
push
into
inc
pusha
dec
xor
mov
or
fldenv
dec
inc
stos
sahf
sbb
daa
mov
popf
popa
js
lahf
insl
insb
loopne
sbb
dec
add
call
dec
or
into
subb
fs
sbb
int
movsl
repnz
mov
xor
clc
mov
pushf
sub
jne
lret
sbb
jbe
in
push
fsubs
add
and
inc
inc
lret
in
into
aaa
mov
jl
cmp
or
xchg
or
sub
mov
sbb
sbb
and
xchg
ret
das
sub
mov
je
cmp
arpl
frstor
cld
sub
loope
inc
ja
divl
mov
xor
fmuls
sub
cwtl
mov
test
xor
int3
in
test
mov
sbb
mov
add
xchg
in
jle
push
ljmp
cmp
jns
jl
push
ficompl
adc
cmp
sbbl
in
leave
jp
and
lahf
mov
scas
and
das
adc
sub
inc
les
arpl
or
arpl
pop
xchg
adc
mov
test
leave
jg
mov
jmp
cwtl
cmp
pushf
fldt
call
xlat
xor
lret
push
xchg
pusha
ret
cld
sbb
outsb
ret
sbb
mulb
cmp
hlt
push
cltd
ret
jp
mov
shl
daa
mov
xor
fildl
hlt
addr16
mov
add
and
fcmovu
ja
cmpsb
sbb
jno
mov
in
out
stc
out
pop
arpl
out
lock
pop
gs
push
or
mov
mov
sbb
mov
out
ffreep
inc
insl
fs
push
repz
sbb
stos
mov
dec
lahf
andb
and
adc
xchg
mov
push
outsl
and
loop
xchg
inc
or
add
and
pusha
pop
jo
xchg
call
std
adcb
outsl
lcall
jmp
mov
cmp
xor
bound
fsubr
lret
test
enter
pop
or
sbb
mov
cmp
jp
and
imul
sbbl
bound
test
pop
cmp
ret
push
gs
lea
outsl
ss
push
jb
xchg
aas
popa
jle
cmp
scas
jnp
mov
dec
mov
bound
int3
or
inc
arpl
popa
cmpsb
pop
mov
mov
jmp
cmp
pop
cmp
jnp
mov
sahf
mov
fs
imul
pop
xchg
add
push
jo
ret
xor
push
and
jl
push
sub
aaa
pop
dec
inc
mov
fwait
push
clc
fisubl
leave
into
pop
xchg
jbe
sbb
lock
sub
mov
call
lods
aam
addl
shrl
and
orb
or
pop
xchg
sub
lret
sarb
ljmp
jb
icebp
sbb
xchg
mov
or
out
xchg
jmp
lahf
push
rorb
and
call
inc
or
mov
add
ret
mov
movsl
add
fsubl
fwait
ret
sub
je
inc
pop
imul
test
enter
pop
in
add
lods
imul
cmpsb
in
jp
inc
pop
inc
xchg
jle
jbe
sub
lcall
xchg
in
imul
pop
shll
inc
fs
fsubl
mov
scas
ret
push
lock
add
xchg
nop
lcall
sarl
and
clc
inc
inc
dec
sarb
ljmp
push
mov
sbb
ss
loopne
sahf
lods
jns
loope
or
iret
jae
jl
test
imul
cmpsl
mov
add
xor
xchg
fs
jl
int3
rorl
mov
repz
and
cmp
shl
push
pop
int3
xchg
jle
je
mov
ds
inc
mov
fsubrs
jo
or
insb
les
cmpsl
lea
adc
push
dec
mov
scas
pop
or
das
repnz
fs
ja
lret
aad
xchg
jg
inc
inc
xlat
fwait
xchg
scas
stos
fwait
mov
in
xchg
loop
in
mov
pop
jbe
rcr
mov
xor
imul
mov
or
or
mov
outsl
sub
push
and
jg
dec
orb
call
imul
shll
dec
mov
cmp
mov
orl
cmc
stos
pushaw
lea
in
mov
cmp
ret
movsl
hlt
in
mov
cmp
cli
faddp
pop
inc
adc
xchg
mov
fnstcw
mov
inc
pop
mov
into
xchg
dec
xchg
ret
loop
aas
scas
out
sub
int
push
mov
add
jo
xchg
mov
push
pop
sub
daa
cli
xchg
pop
lock
enter
push
xor
andb
int
dec
aaa
inc
jmp
cld
rorl
sub
jnp
aaa
pop
push
gs
pushf
dec
aaa
mov
cli
inc
int
inc
pop
dec
sbb
es
or
das
mov
outsb
xor
pop
or
dec
push
jo
arpl
shll
adcb
jb
std
cmc
mov
in
repz
gs
out
int3
mov
inc
cs
push
sub
mov
hlt
loopne
call
and
and
data16
adc
sti
push
es
out
cli
jns
test
ss
xchg
je
divb
push
jbe
es
mov
xor
mov
out
and
add
mov
divb
cmove
mov
imul
xchg
mov
dec
subl
push
ds
or
or
es
std
add
add
mov
loop
stc
jno
lret
pshufw
aaa
mov
dec
dec
daa
jnp
sbb
fidivl
dec
xchg
movsl
outsb
data16
imul
test
into
lods
lret
test
cmpsb
push
fs
lcall
sub
pavgb
fdiv
and
je
stos
testb
jmp
or
adc
mov
fxch
cltd
clc
mov
inc
loope
cmp
cmp
iret
cmc
dec
cs
insl
pop
adc
xchg
loope
xlat
pop
mov
or
cltd
data16
xchg
mov
xchg
out
imulb
push
cli
test
js
mov
and
xor
int3
pop
aaa
sbb
fucomp
push
push
int
sbb
mov
sahf
or
popa
mov
inc
sbb
mov
ror
push
scas
mov
scas
dec
cmpsb
pop
push
sbb
fisttpl
repz
jle
inc
js
popf
mov
rcrl
fadd
iret
inc
xchg
pop
sahf
dec
and
pop
test
xor
imull
push
stos
call
in
jnp
shrl
jmp
jp
repz
mov
mov
dec
icebp
mov
cmp
test
movsl
ret
jae
push
iret
daa
or
dec
add
hlt
add
sbb
shr
insb
pop
pusha
adc
ret
sbb
inc
xor
mov
sarb
popa
sbb
sub
fwait
stc
jbe
ficoms
or
lcall
or
movsl
push
dec
xchg
ret
leave
push
ret
xor
and
mov
add
ret
jecxz
in
mov
lock
mov
imul
cmp
dec
mov
ret
push
mov
mov
push
outsl
shrl
int3
sbb
add
cmp
test
dec
out
push
ds
or
cmc
outsb
jnp
push
mov
adc
dec
or
les
addb
or
xor
cmp
xor
push
xor
loopne
jo
shlb
pop
cli
loop
enter
leave
out
and
xchg
mov
add
inc
ja
clc
out
testl
jmp
jp
mov
inc
fwait
movsb
popl
xchg
movsl
sub
or
ljmp
jno
nop
push
cld
je
xor
cmpsl
push
test
pushf
test
test
pop
test
iret
rcrl
jl
or
out
lret
clc
ds
xor
jbe
sbb
jge
repnz
jge
mov
jne
inc
stos
es
add
out
scas
daa
lcall
add
cmp
sub
rcl
cltd
sub
sbb
mov
xor
sub
add
inc
cmc
adc
out
stc
out
cmp
pop
add
pop
jecxz
lahf
pop
stos
pop
sub
aam
aaa
pop
pop
fiadds
jo
mov
loopne
cmp
sbb
test
xchg
aas
pop
addr16
inc
mov
pavgw
imulb
mov
push
loop
iret
cli
adc
das
jbe
hlt
data16
xor
adc
mov
push
xlat
push
bound
mov
mov
enter
and
inc
cld
jg
mov
call
push
or
dec
cmc
dec
call
incl
std
sbb
xchg
sahf
out
int3
stos
flds
dec
lds
out
in
push
lods
dec
or
xor
adc
ja
into
nop
push
test
mov
cld
dec
in
negb
or
cmc
mov
lods
jp
jns
movsl
dec
pushf
mov
xor
out
fsubrp
mov
ret
fcoml
add
xchg
mov
loope
add
loope
lods
popa
nop
bound
inc
pop
adc
loop
cltd
out
cli
es
cli
scas
mov
test
pop
and
adc
sub
add
dec
cmp
adc
adc
pop
test
rcrl
mov
jg
orl
or
aaa
sbb
lcall
and
or
loopne
xor
mov
scas
loopne
in
fs
push
pop
int
xchg
push
adc
adc
setb
invd
push
cmpsl
mov
mov
pusha
and
sub
hlt
cld
push
and
pop
cmp
les
mov
das
dec
or
mov
dec
add
jle
ret
lock
xlat
xchg
dec
and
sahf
xlat
out
daa
shrb
mov
call
addl
repnz
adc
jb
stc
popf
pop
and
xor
lock
adc
cld
and
lods
aas
xor
push
inc
dec
adc
mov
scas
fwait
add
xchg
pop
es
pop
clc
xchg
sbb
pop
or
sub
mov
inc
icebp
pop
adc
mov
sti
repz
xor
or
je
mov
add
lahf
xor
sub
mov
push
sub
dec
add
cmp
leave
gs
and
sub
sbb
pop
pop
and
pop
inc
dec
inc
mov
clc
leave
mov
stos
xor
inc
fs
ljmp
adc
xor
sub
or
jne
test
xchg
pcmpgtw
mov
loope
lret
jbe
jle
jno
xor
insb
fdivs
mov
loopne
xchg
je
dec
xor
push
or
shlb
andb
mov
lret
push
loope
cli
or
mov
or
loope
sub
and
and
xchg
es
ljmp
sbb
adc
sar
enter
pop
and
xchg
jnp
mov
cmpsb
inc
jp
ss
mov
gs
add
mov
arpl
mov
pop
mov
les
xchg
pop
rolb
scas
add
mov
pop
cld
pop
das
in
insb
jp
push
add
test
cmp
nop
je
iret
and
movsb
aad
xor
and
in
enter
mov
shrl
xlat
sub
divl
repz
push
inc
enter
inc
xchg
jg
mov
fidivrl
es
cmpsl
mov
inc
popf
sbb
jecxz
add
mov
in
inc
pop
add
fildll
inc
jns
sbb
ret
les
push
sub
or
clc
ja
insl
hlt
inc
dec
sub
jae
inc
pop
cmpl
sub
mov
sysexit
push
mov
mov
sbb
push
and
pop
aam
mov
mov
pop
cwtl
cmp
push
push
pop
jbe
stc
or
mov
xchg
sbb
mov
loope
sbb
pcmpgtb
push
fimuls
inc
or
test
pop
and
xchg
jp
je
loopne
aam
jno
pop
adc
jae
in
std
cmp
repnz
xchg
stc
fimull
pop
test
test
push
sbb
pushf
imulb
ret
jp
xchg
lea
popa
int3
and
pop
dec
or
in
mov
lcall
iret
pop
fsubl
aaa
push
fstpt
xor
mov
add
into
dec
cs
mov
scas
fs
xchg
mov
call
into
push
ljmp
pop
loope
push
adc
lock
pop
pop
lds
mov
xor
xchg
push
cmp
in
je
jmp
scas
jno
cmp
dec
ss
insb
and
xor
push
popa
lods
jp
rorl
stos
test
fadd
pop
add
lahf
sarl
andl
sbb
add
pop
mov
daa
leave
and
mov
xchg
jecxz
add
fcmovnbe
fcomp
mov
aas
lods
ficoml
insb
cmpsb
inc
mov
shrb
and
insb
mov
stos
leave
cmp
cmpb
or
push
sub
fistl
inc
push
cld
sbb
enter
push
fistpll
jge
sbb
xchg
test
dec
mov
fidivrl
dec
fdivl
lahf
xchg
out
jmp
push
cmpsb
mov
ret
pop
sbb
adc
push
xor
adc
jecxz
push
dec
jbe
dec
cmpsb
push
add
and
lret
icebp
mov
mov
movsl
add
fucom
sub
pop
insb
es
mov
loopne
mov
push
adcb
insb
lods
push
jge
cld
stc
mov
repnz
mov
movsb
jg
and
cmc
jecxz
jns
mov
sub
negb
insb
shlb
and
test
sub
adc
jmp
leave
fcmovb
mov
movsb
out
dec
mov
mov
scas
push
loopne
xchg
lea
in
jl
in
test
xor
movsb
cmp
inc
cltd
lods
movsb
cld
insl
test
dec
int3
fidivrs
pop
or
sub
xchg
pusha
inc
daa
ret
mov
xor
fwait
add
fcomps
cmp
jne
mov
push
aam
addl
mov
sub
jmp
andl
mov
xchg
cmp
mov
inc
add
mov
cmc
shrb
shlb
loop
inc
cmp
rcl
clc
hlt
jge
pushw
jg
adc
push
add
cs
sbb
pop
jnp
repz
pop
mov
push
rcr
and
pop
loope
inc
sub
cmp
fisubl
adc
pop
sub
push
sbb
or
xor
adc
adc
faddl
pop
ljmp
fstpt
adc
mov
jne
fmull
cmpsb
and
fcoml
sbb
lods
mov
sub
cmpsl
icebp
mov
std
rorb
negb
in
push
sub
mov
adc
repz
cld
dec
mov
rolb
or
popf
pop
dec
fistpll
sub
and
push
mov
and
jb
mov
add
add
pop
push
ss
scas
fs
lahf
fldt
jmp
push
in
fsub
push
xchg
shll
popf
dec
or
push
and
dec
loope
adc
xchg
sbb
push
jno
mov
ja
fiadds
and
xlat
dec
mov
into
aas
aas
rol
sub
pusha
sub
inc
add
adc
mov
aam
sbb
cmc
dec
aad
into
testb
mov
cwtl
fwait
xlat
int
sbb
pop
ret
cmpl
sbb
push
scas
shlb
scas
roll
lock
aam
lock
fcmovnb
pop
push
test
mov
movb
out
lock
pop
js
aas
cli
insl
xchg
or
adc
ret
js
dec
enter
jmp
lods
dec
jae
xchg
sti
lods
scas
pushf
adc
inc
inc
pop
mov
sbb
xchg
out
xlat
stos
jne
push
xchg
sbb
xor
imul
sbb
xor
mov
or
pop
push
or
clc
fstps
pop
push
push
outsl
adc
arpl
paddb
pop
stos
cmp
sub
xchg
test
jl
out
repnz
mov
adcb
je
push
aad
test
ret
scas
sub
aas
or
xor
jmp
and
jae
mov
fdivrp
pop
jo
cmovnp
mov
and
leave
fidivrl
dec
jle
push
mov
sbb
test
pop
mov
insl
lea
scas
mov
dec
dec
xor
xor
push
into
movsl
pop
ret
jg
and
movsb
dec
dec
sub
dec
into
dec
xchg
push
mov
and
daa
pusha
xchg
out
xchg
js
and
pop
mov
outsl
lds
mov
sub
cmpsb
sti
adc
fs
mov
jb
shll
mov
mov
jecxz
call
add
adc
js
xor
icebp
xor
jns
lahf
sbb
bound
jg
inc
les
test
xchg
out
fdivs
push
mov
inc
inc
inc
daa
cltd
ret
ja
jno
sqrtps
cmp
repz
inc
mov
es
pop
cwtl
jo
movsl
cmp
in
pushl
stos
ja
mov
jl
push
adc
lcall
fwait
sbb
lea
out
adc
mov
addr16
cmp
pusha
mov
adc
fnstsw
int3
cmpsl
mov
call
or
push
push
pop
jcxz
inc
cmovbe
pop
dec
adc
jno
jge,pn
sub
mov
xchg
mov
sti
fcoms
mov
ja
out
sbb
inc
cmp
mov
xchg
mov
jmp
mov
xor
cmpsl
mov
mov
aaa
jp
fucomip
push
lods
inc
scas
data16
andb
mov
gs
fst
add
and
sub
push
dec
icebp
sbb
or
xor
xchg
mov
icebp
add
mov
or
inc
inc
ficoml
push
add
jp
fwait
insl
aad
leave
aam
ret
repz
popa
popa
stos
enter
mov
fidivl
mov
ret
push
xor
pusha
jne
fstps
loopne
loope
outsb
orb
inc
sti
jecxz
repnz
pop
inc
and
das
or
cmpsl
add
lret
cltd
sub
adc
rcl
inc
aam
push
push
push
cmp
pusha
xchg
fadds
sbb
lret
fcompl
andl
stos
inc
jp
jle
popf
outsl
xor
cmc
std
fs
out
inc
xchg
push
xchg
or
dec
sbb
pop
rcrl
fisubrl
adc
fstpt
inc
loope
push
inc
inc
sbb
repnz
adc
jbe
mov
jg
mov
popf
pop
mov
cmpsb
dec
add
mov
mov
std
inc
push
jae
fwait
cltd
cmp
xchg
sbb
mov
ljmp
mov
push
rcr
or
in
fld
and
sbb
dec
lret
arpl
mov
cmp
scas
mov
push
pop
mov
dec
sbb
cli
insl
and
movsl
push
jb
popl
cmp
out
jecxz
gs
push
pop
loopne
push
xor
jg
add
pop
or
shlb
add
push
out
mov
cmpsl
ljmp
dec
lret
adc
inc
mov
scas
in
pop
lods
out
clc
or
iret
push
xor
or
dec
add
mov
icebp
fwait
cmp
xchg
iret
stos
mov
orl
ret
inc
insl
es
daa
jle
xchg
cmpsl
add
stos
xchg
mov
je
add
sbb
cmp
jecxz
shlb
jle
insb
dec
mov
ret
pusha
inc
test
jmp
insb
mov
mov
mov
pop
dec
lods
or
fwait
sbb
dec
fstl
popf
adc
dec
ljmp
inc
jle
loop
std
and
stos
repz
popa
xor
xor
test
mov
loopne
jecxz
jbe
stos
fwait
mov
jnp,pt
cs
inc
dec
fwait
ret
sbb
sub
add
leave
push
and
das
into
daa
rol
cmp
dec
sbb
les
push
gs
mov
dec
movsb
add
mov
sub
mov
outsl
add
imul
daa
mov
push
rcl
add
sbb
sahf
xchg
icebp
fnstenv
in
xlat
push
pop
into
sbb
pusha
mov
xor
mov
inc
in
jle
fs
sahf
faddp
or
inc
mov
xchg
insb
sarb
add
xchg
stos
xchg
pop
cltd
popf
xor
lods
loopne
pop
shl
push
inc
loope
mov
leave
mov
and
mov
sub
popf
repnz
sub
int3
mov
dec
test
cmovo
adc
sti
jne
cmp
mov
xchg
dec
aad
push
je
mov
add
bound
nop
arpl
add
sub
jo
sti
dec
jmp
addb
sub
dec
xchg
mov
pop
into
or
add
loope
imul
movsb
dec
push
sbb
add
cltd
xchg
inc
imul
add
jne
pop
jge
mov
push
xor
ja
add
inc
and
mov
mov
mov
imull
cwtl
orl
test
popf
jne
jmp
shll
pop
aam
jb
inc
shlb
insb
pop
jns
xor
xor
cmp
test
jne
xchg
and
and
sub
cwtd
adc
pop
mov
or
pop
adc
or
fdivl
addb
jne
sbb
inc
mov
frstor
in
fiaddl
jmp
pop
xor
add
jnp
iret
xchg
bound
xchg
mov
fcmovu
pop
imul
lcall
cmp
hlt
leave
xchg
jns
jp
sbb
xchg
pop
add
cli
inc
mov
push
pop
or
cld
lds
lea
pop
cmc
or
lret
in
jnp
inc
push
outsl
in
int
fsubs
jmp
push
pop
ret
aam
sub
into
loopne
xchg
jbe,pt
sub
mov
out
xchg
cmpb
loop
cltd
and
xor
cwtl
call
mov
cld
xchg
iret
adc
adc
loopne
adc
xor
cmp
out
sub
stos
js
or
sarb
mov
stos
or
xchg
xor
inc
loopne
test
lahf
lahf
jecxz
cld
clc
mov
addr16
test
cwtl
ja
mov
add
das
adc
xchg
roll
popf
pop
out
out
xchg
push
repnz
test
push
jmp
and
sti
data16
cmp
cmp
pop
add
xchg
das
pop
mov
imul
lods
push
pop
xor
fsub
pop
aaa
loopne
push
adcl
mov
jae
aam
xchg
jae
dec
xor
dec
inc
dec
shll
sub
mov
hlt
push
inc
sbb
dec
mov
xor
mov
ret
punpckhbw
fimull
cmp
icebp
fwait
inc
mov
jbe
adc
mov
mov
gs
dec
lock
ret
inc
add
repz
mov
pop
sbb
insb
xchg
adc
rcr
pop
aad
xchg
push
mov
dec
mull
cmp
xor
xor
xor
adc
out
sub
cmp
mov
jbe
sbb
push
cmpsl
lret
mov
mov
clc
mov
ficoms
cmpsb
stc
jg
mov
xlat
rol
or
fadd
pop
mov
aad
mov
pusha
ja
add
jnp
out
nop
sbb
movsb
and
aas
lock
push
inc
mov
sub
jmp
das
jp
adc
and
scas
inc
ret
hlt
lahf
adc
std
dec
sbb
leave
sub
mov
insl
xor
add
lea
adc
out
aad
mov
fidivrs
scas
add
push
mov
mov
addl
dec
push
mov
dec
sbb
push
pop
push
stos
dec
icebp
add
pop
lret
fidivl
in
subb
mov
mov
ds
insl
xchg
orb
jecxz
and
pop
cmpb
shr
pop
push
xor
repz
test
ja
xlat
sbb
sub
cmp
mov
test
dec
inc
jg
scas
inc
lock
inc
mov
ret
sub
jmp
xor
pop
call
push
fmuls
ja
xor
xlat
cmpsl
sbb
cmp
mov
push
xchg
fs
sbb
and
fs
ret
dec
push
movsl
dec
je
dec
cmp
cmp
repz
xchg
add
aam
pop
mov
pop
pop
sahf
pop
scas
push
bound
lret
add
jo
sbb
xchg
and
pushf
sbb
fld
xchg
imull
sbb
pushf
lahf
jne
out
sarl
xor
xchg
cli
mov
clc
jg
cmpsb
mov
jne
pop
cmp
push
lret
mov
jb
xchg
test
shrl
into
mov
pushf
inc
jbe
addr16
sub
and
mov
out
jb
cmpsb
mov
or
cli
fcomp
sub
negb
rorl
lret
fsubrs
outsl
popa
dec
jmp
or
xor
xchg
mov
call
push
push
mov
nop
ret
into
adc
mov
adc
pop
mulb
push
and
es
fstpl
scas
arpl
lret
xor
imul
fwait
popa
cmp
push
arpl
int3
add
or
imul
inc
lret
inc
push
std
fadds
sub
out
cmc
lea
xor
in
nop
sbb
pop
dec
hlt
pushf
pop
mov
movsl
sbb
stc
arpl
lock
shrl
pop
testb
lea
fimuls
pop
adc
test
xchg
cli
xor
mov
stos
addr16
inc
lcall
lcall
std
mov
xchg
fcomps
ss
add
fdivrs
nop
lahf
clc
ds
add
ficoml
movsb
jae
jp
mulb
sbb
std
push
dec
loop
les
rolb
cwtl
shld
mov
in
or
aas
adc
fs
add
lret
out
call
notl
ljmp
dec
imul
aam
in
sub
adc
sub
or
add
push
es
mov
cmp
inc
jnp
sbb
sbb
data16
jecxz
je
imul
push
jmp
or
mov
je
mov
in
push
hlt
inc
cli
xchg
stos
cmp
or
mov
push
stc
cmp
jle
mov
adc
mov
mov
and
jns
in
test
mov
mov
mov
sub
out
pop
push
pop
popf
jnp
mov
sub
pop
aas
stos
xchg
jp
xor
mov
mov
cmpsb
aad
incb
out
shrl
cmpl
rorl
add
or
out
test
pop
pop
stos
cld
cmp
aam
nop
jnp
shr
jmp
mov
aaa
push
adc
mov
mov
cmp
daa
or
mov
mov
pop
lods
mov
aad
aam
insl
fnstenv
in
jmp
out
pop
mov
sub
hlt
test
int
jge
push
push
sub
loop
push
je
pop
insb
sbb
xor
ljmp
dec
mov
popf
mov
js
mov
adc
into
push
sub
outsb
xor
xchg
mov
adc
jge
jmp
mov
cwtl
jg
ljmp
rol
scas
mov
dec
std
je
scas
imul
jne
sarb
clc
lea
adcb
pop
push
cwtl
out
sbb
and
xchg
dec
sti
pop
les
pop
jne
mov
cmpl
inc
sbb
ret
ljmp
mov
fidivs
pop
adcb
fmull
xor
in
xor
fistpl
int3
sub
sub
mov
cmp
xor
imul
mov
and
jg
in
mov
insb
and
daa
es
adc
push
xor
mov
jae
and
push
sbbl
add
pusha
fucomp
popa
ud2
lods
mov
xchg
adcl
gs
jne
arpl
jne
enter
push
xor
negl
imul
pop
ja
sarl
movsl
sbb
je
adc
push
rcll
scas
scas
xchg
cmp
daa
pop
add
cltd
jl
sbb
cmpsl
les
or
cmp
mov
out
push
call
push
adc
jae
icebp
jbe
scas
cmc
or
inc
mov
sub
cmc
pop
pop
xor
mov
add
repnz
loope
pop
rclb
xchg
fadds
and
fldl
mov
repnz
mov
dec
aas
add
roll
aas
lea
cmp
pusha
mulb
sbb
add
dec
orb
scas
adc
out
push
stos
adc
gs
in
and
xchg
sbb
je
push
mov
cmpsb
int3
mov
cli
cmpl
xchg
adc
mov
adc
int3
lret
mov
mov
scas
or
es
mov
mov
fwait
gs
je
shl
lret
sbb
jne
mov
pop
or
adc
pop
dec
imul
xor
or
adc
jnp
cmp
orl
xor
enter
test
push
cmp
pop
loop
ja
aad
mov
popf
rorl
jecxz
lret
push
lods
mov
mov
test
test
jge
and
mov
lods
jae
jle
mov
das
lods
fcmove
out
js
xor
fnstenv
ja
dec
imul
stos
mov
pusha
test
xchg
mov
lods
adc
push
bswap
mov
out
mov
sbb
loop
adc
mov
sbb
ds
nop
push
dec
out
pop
pushf
imul
inc
cmpl
les
mov
insb
xor
push
aaa
mov
mov
jno
gs
xchg
sub
inc
add
gs
outsl
jl
bound
jmp
aam
jmp
xchg
push
shll
nop
iret
lds
cmpsb
xor
jns
int3
lds
xchg
xor
ret
jb
xor
mov
stos
call
and
gs
into
adc
mov
adc
and
add
xchg
jecxz
rolb
xor
sti
cs
adc
push
sbb
push
dec
mov
out
cmp
ret
jp
xchg
jb
mov
jg
out
stos
pop
stc
xchg
je
int
add
add
sub
pop
push
ret
adc
call
inc
sub
mov
arpl
jb
push
out
inc
rcrb
bound
cmpsl
testl
pop
or
adc
icebp
adc
ljmp
scas
mov
push
in
and
in
xchg
test
insl
aam
push
ftst
insb
xlat
mov
pop
inc
mov
jne
inc
jo
shlb
addr16
daa
xor
lds
das
adc
push
aaa
into
out
xchg
dec
stos
push
out
sub
sub
les
call
sbb
les
inc
aam
dec
outsb
add
insb
test
jecxz
repnz
add
xor
adcl
sti
gs
mov
pop
push
cmp
dec
aad
pop
pop
jbe
sub
flds
inc
ja
pop
and
ds
push
lods
movb
int3
fdivrl
cmp
push
hlt
jbe
jmp
mov
aam
cli
mov
in
jns
inc
xchg
lods
push
test
pop
out
pop
divl
mov
lcall
addr16
mov
push
sub
pop
insb
pushf
test
xchg
dec
push
push
in
inc
jg
jno
stc
icebp
mov
mov
push
sub
or
and
scas
xchg
add
shlb
mov
sbb
lcall
xchg
dec
ret
mov
hlt
imul
xlat
and
sbb
into
mov
sub
push
mov
pop
leave
test
icebp
shr
mov
dec
pop
insb
addl
xchg
lahf
call
mov
dec
adc
insl
mov
rcll
ljmp
leave
divl
xchg
jle
mov
mov
dec
inc
mov
cmc
and
imul
call
ficoms
add
xlat
push
adc
sti
insl
aaa
pushf
movsl
cmp
fcomp
cmc
in
movsl
xor
test
push
push
addr16
leave
int
popa
sahf
sbb
movl
int3
and
insl
rolb
imul
sahf
jae
add
mov
adc
test
jo
rolb
push
dec
ret
xor
stos
rcl
xor
pop
clc
xlat
out
fldcw
movsl
adc
lea
leave
jge
aas
in
loopne
test
mov
pop
pop
cli
sub
int3
push
cmp
int
dec
cwtl
outsb
sbb
fisttpll
jo
sarb
sarl
mov
rol
push
stc
lock
mov
xor
adcl
rcll
cmp
cmc
mov
int
outsb
mov
test
mov
daa
xor
cmp
mov
loope
das
iret
push
jmp
add
or
sub
inc
sub
jmp
or
ror
xchg
ja
pop
icebp
lret
jg
dec
orb
lea
std
ret
push
cmp
icebp
add
imul
mov
loop
mov
loope
mov
xor
xlat
negb
cmpsb
insb
pop
stos
test
lahf
out
ds
repnz
je
js
add
jns
inc
cltd
mov
inc
add
add
inc
or
mov
in
scas
mov
push
sbb
sarb
les
jne
dec
sub
or
mov
daa
shlb
outsb
xchg
dec
std
sbb
lock
flds
leave
jno
cmpsl
add
test
and
sbb
or
popf
mov
adc
push
xchg
cmp
lods
bound
push
into
jne
pop
push
xchg
push
arpl
xor
push
jbe
sbb
les
int
stc
gs
pop
dec
sub
pop
shrl
call
addb
jb
repnz
cmp
adc
xchg
jb
subl
int3
aad
mov
cli
lds
jmp
jmp
in
sbb
push
lds
icebp
inc
imul
mov
imul
pop
inc
sbb
rcrb
jo
xchg
lcall
xchg
pop
leave
sub
int
cwtl
jnp
ret
int
jno
sti
or
mov
xor
xchg
push
out
sbb
inc
inc
mov
into
jmp
enter
stc
mov
adc
sub
xchg
ret
push
mov
pop
inc
rclb
pop
xchg
or
push
das
adc
mov
scas
mov
mov
mov
jmp
push
fs
xor
push
into
mov
mov
cmp
push
testb
jb
scas
add
movsb
bound
or
xchg
insl
or
mov
cmp
adc
push
test
push
cmpsl
jb
aam
ficomps
lahf
ja
nop
in
jbe
psubd
adc
out
pop
and
clc
lock
add
jl
pop
mov
mov
in
cltd
fdivs
ljmp
sbb
pop
inc
test
arpl
imul
hlt
dec
fnsave
cwtl
into
mov
xor
sub
scas
xor
loopne
jmp
aaa
adc
test
rcr
jo
xchg
pop
cmpsl
shl
inc
adc
stc
add
lds
mov
inc
xchg
dec
inc
pop
cmp
in
lods
fsubl
pusha
mov
in
loope
push
mov
sbb
rcrl
mov
movsl
aaa
cmovae
jp
cmpsb
push
inc
xor
pop
adc
cwtl
out
and
daa
sti
inc
loop
and
or
jbe
mov
cmp
ja
push
inc
cmpsb
cmovs
dec
xchg
nop
cli
in
add
lock
sbb
add
jge
clc
and
lcall
adc
xchg
xchg
mov
mov
pop
cld
dec
int3
aam
aaa
pop
dec
loopne
sbb
imul
jp
pop
int3
mov
in
cmp
inc
insb
jb
inc
cs
push
dec
inc
repz
jns
mov
pop
xchg
mov
jns
jns
data16
jns
outsl
xor
adc
mov
sti
mov
xor
xlat
lods
inc
pop
dec
and
imul
ret
orb
faddp
in
cmp
and
and
repnz
inc
or
notl
xor
iret
aaa
sbb
adc
jmp
add
stos
push
pop
leave
mov
out
mov
sbb
fildll
rcrl
add
movsl
test
inc
pop
push
je
cmp
loope
sub
jecxz
pop
fs
xor
add
xchg
ds
fwait
mov
pushf
in
rcll
loope
and
test
adc
out
jno
lea
mov
jg
movsb
jle
sbb
lret
sub
sub
mov
adc
push
nop
jecxz
out
sub
scas
inc
xchg
push
push
mull
and
push
in
arpl
test
mov
test
out
push
adc
daa
negb
mov
movsb
xchg
or
push
lods
fstl
cmp
pop
sahf
int
incb
mov
lahf
das
mov
call
dec
mov
sub
jns
call
adc
repnz
js
imul
mov
pop
aam
adc
fildl
test
inc
ss
pop
jmp
stc
ret
std
rcr
fbstp
incl
fstl
push
pop
mov
mov
outsb
jg
pop
sahf
lods
adc
mov
and
jmp
cltd
jmp
cmc
stc
push
push
das
mov
sub
xchg
into
imul
icebp
push
xchg
ljmp
add
bound
pop
mov
mov
rcrb
icebp
add
aaa
jmp
cmp
loop
pop
pop
imul
mov
xor
test
in
push
incb
int
fwait
and
loopne
cltd
xor
aas
cmp
es
xchg
or
inc
outsl
jge
bswap
jae
pop
es
stos
cmp
jl
repz
jno
fbld
jmp
mov
xor
adc
scas
jl
or
push
add
mov
sarb
mov
dec
xchg
cli
lock
xchg
lret
mov
push
fisttpl
in
mov
notb
inc
inc
mov
and
push
adc
cmp
rsqrtps
and
inc
push
addr16
hlt
dec
xchg
add
aam
out
lcall
in
lcall
sbb
cmpb
inc
cmpb
call
push
ja
dec
mov
dec
mov
adc
popa
imul
jb
xor
fcomps
daa
xchg
jo
rolb
mov
sub
mov
movsb
cwtl
push
fidivl
mov
mov
add
xor
in
jne,pt
jbe
movsb
sub
out
je
cmp
loop
into
mov
cmp
adc
push
mov
ljmp
lods
popf
hlt
sbbl
testb
mov
loopne
lds
jg
pop
shll
add
and
outsb
jb
mov
jnp
pop
addr16
stc
movsl
push
stos
mov
mov
xchg
cmp
js
mov
dec
cmp
dec
mov
aaa
jnp
cld
addl
scas
imul
and
sti
mov
mov
in
sub
mov
sub
push
inc
xchg
in
jmp
gs
frstor
pop
std
cmpsl
lods
clc
cmc
daa
xor
mov
pop
xor
call
aaa
xchg
mov
xchg
jnp
add
into
notl
adc
sub
cmp
push
cmp
test
push
into
mov
or
dec
in
jae
aas
mov
sbb
pop
shlb
dec
leave
mov
das
sub
cli
xchg
ja
jmp
stos
dec
mov
xor
clts
sbb
stos
jp
xor
push
in
sbb
jmp
mov
dec
xchg
aam
cwtl
out
fldl
add
sub
add
add
std
fwait
mov
hlt
setb
push
in
mov
sbb
push
adc
scas
decb
popa
jns
out
and
inc
sub
fsubr
xor
stos
push
or
xchg
scas
dec
xor
sub
or
xor
mov
sbb
inc
ds
ljmp
movsb
imul
xchg
jb
push
pop
idivb
xor
incl
sub
call
push
jbe
ficoml
xchg
push
xchg
outsb
cmp
jno
pop
call
leave
mov
cmp
leavew
lds
inc
xchg
test
adc
shll
or
fsubrs
push
ds
outsl
push
mov
in
sbb
repnz
movsb
push
xchg
rcll
xchg
mov
and
mov
xchg
fcoml
xchg
or
call
push
cmp
mov
dec
xor
push
jle
cld
popf
clc
shrb
mov
mov
sti
out
clc
mov
xchg
jno
in
pop
out
jge
jg
sub
push
mov
stos
cmpsb
pop
ds
jp
ret
sub
outsl
sbb
xchg
add
cmp
fdivrs
insl
les
mov
jl
jle
adc
add
sbb
das
daa
in
and
xor
jne
dec
sub
inc
push
push
lcall
pop
pop
sbb
inc
cmp
test
mov
and
shll
pop
sti
mov
cmp
in
xlat
jg
xchg
dec
xorb
int3
inc
xor
iret
cmp
lret
mov
imul
popa
ret
pop
push
inc
mov
sbb
loope
inc
addb
and
or
stc
mov
mov
ljmp
xor
or
popa
test
lods
movsl
js
mov
inc
mov
movl
rol
xchg
or
stc
jbe
jo
pop
imul
shlb
lds
in
jecxz
push
mov
popa
and
mov
pop
pushf
and
adc
andl
loopne
adc
outsb
mov
add
inc
jg
popf
dec
dec
and
xor
pop
xor
cltd
xchg
shl
int3
fstpt
sub
add
inc
aaa
xchg
les
dec
aaa
mov
imul
add
push
stc
xor
aad
xchg
ds
xchg
adc
mov
call
fcomps
fwait
iret
rorl
rorl
jo
or
push
jnp
sub
out
ss
inc
jno
scas
je
movsb
rolb
int3
cmp
stc
mov
sbb
test
and
bound
pop
cwtl
cmp
shrl
imul
pushf
adc
sub
jno
subl
jl
mov
outsb
mov
in
or
add
sbb
pop
pop
lcall
or
fsin
mov
ljmp
test
in
mov
jmp
lret
add
fwait
cmc
add
xor
xchg
jae
aad
cld
rcll
pop
xchg
mov
xchg
insb
push
cmc
fcomps
inc
add
xchg
cmpsl
mov
faddp
insb
jmp
arpl
sub
pop
jg
sub
xor
in
adc
pop
inc
adc
sbb
cmp
sbb
mov
rorb
call
xor
gs
dec
cmpsl
and
pop
mov
sub
in
cs
ror
cs
mov
aas
adc
mov
pop
mov
lds
insl
inc
lea
adc
inc
sbb
out
push
mov
lahf
jg
sub
inc
cmp
adc
ds
mov
enter
xor
push
sub
les
ja
cmp
ret
dec
jp
adc
and
cs
mov
iret
les
fdivp
movd
push
insb
sub
ljmp
inc
fwait
bound
adc
push
push
push
fstpl
lods
es
call
sub
rorb
int
cmp
jecxz
fildll
mov
pop
notl
adc
xchg
xchg
xor
jle
les
jecxz
imul
sub
out
sbb
movsb
sarl
int3
pop
movzwl
xchg
ror
lcall
pop
or
addr16
rcll
sub
mov
pop
dec
hlt
inc
jecxz
push
jns
icebp
sub
int3
pop
xor
push
jp
fcomip
xchg
dec
fs
sti
loopne
dec
lds
mov
data16
imul
ja
cmpsl
mov
sbb
xor
ljmp
adc
test
mov
mov
fildll
or
adc
ret
rclb
inc
mov
daa
adc
jmp
addl
test
pop
inc
mov
push
cmp
xor
adc
dec
stos
or
mov
sbb
mov
cli
ja
add
gs
scas
arpl
cmpsb
push
addr16
adc
ja
sub
stos
rcll
and
push
out
lock
xchg
pop
push
pop
pop
xchg
test
cmp
aam
add
pop
mov
mov
inc
test
cli
add
sub
es
dec
fcompl
jg
addr16
or
cmp
mov
out
push
insl
jb
stos
inc
pop
mov
xor
or
adc
ss
push
adc
mov
and
sbb
cmp
int
in
stos
stos
imul
mov
mov
fidivrs
mov
mov
bound
mov
push
ss
ds
xor
lods
movsl
std
sub
lods
push
repnz
pop
push
movsb
cmpsb
cmpsl
add
mov
lods
scas
sbb
push
sub
pop
fdivrl
lcall
cli
out
pop
mov
rcrl
aas
aad
push
inc
mov
push
jmp
leave
shl
adc
shl
loope
fstl
push
add
fidivl
int3
cwtl
sbb
inc
cmp
stos
addr16
outsb
dec
es
popa
cli
sti
jbe
sti
push
ja
or
mov
adc
push
mull
out
imul
leave
cmp
pop
dec
loopne
fdivp
xor
aad
pop
test
cld
daa
mov
aaa
shlb
sbb
mov
or
cmp
insl
testb
cmp
dec
test
sbb
rcrb
mov
mov
loopne
jae
popf
addb
dec
and
loop
popf
lods
sti
jno
aas
lea
xor
dec
pop
cmc
test
xchg
loopne
mov
shrb
shrb
scas
lods
std
pop
push
or
std
xor
and
dec
subb
inc
gs
das
or
jmp
stos
inc
dec
das
test
mov
xchg
or
in
inc
jo
cmpsb
sti
adc
nop
stc
testb
js
std
lcall
jecxz
push
mov
ljmp
in
cld
mov
sub
test
imul
icebp
cmpsb
dec
cmpsb
imul
pop
xchg
mov
mov
repnz
cwtl
ds
lods
cltd
leave
or
les
mov
fs
lahf
pop
cmc
inc
jbe
fdivr
negl
fmulp
push
mov
out
das
cmp
push
and
loopne
sbb
sbb
rorb
mov
shlb
rolb
outsl
les
clc
dec
fstpl
sahf
stc
jmp
mov
or
sub
je
xchg
fdivl
push
sbb
out
and
stos
adcb
rorb
loop
mov
fistpl
test
pushf
out
pop
jmp
mov
pushf
push
ret
mov
xor
cs
fdivrs
sti
in
add
out
push
cld
xchg
imul
out
aam
push
test
or
mul
inc
popa
push
mov
inc
ljmp
cs
jl
push
mov
int
fnsave
mov
push
inc
mov
loopne
fidivl
sub
push
pop
jne
movsb
pusha
pop
into
pop
lcall
aad
sub
rcrl
add
mov
ss
or
cwtl
inc
sbb
scas
cmp
mov
push
inc
add
add
or
jno
push
add
adc
test
xor
jmp
ljmp
add
outsb
loop
add
sub
push
ja
adc
mov
imul
pusha
shrb
test
sub
xchg
jecxz
mov
jne
repz
push
mov
mov
inc
addr16
sub
outsb
dec
scas
aad
stos
jbe
out
or
inc
sbb
mov
test
mov
rcrb
jl
scas
ljmp
mov
adc
loop
sti
mov
out
or
jge
cltd
adc
xchg
ja
lahf
cld
xor
push
sub
xlat
bound
scas
pop
xor
xchg
sahf
mov
jecxz
xchg
mov
call
je
dec
mov
cmp
cmp
pxor
bound
adc
mov
rcl
push
sahf
mov
xchg
adc
popl
push
bound
aad
sbb
aas
je
pushf
push
adc
push
cmc
mov
mov
jo
scas
jns
and
xchg
roll
jle
test
in
rol
xchg
lahf
cmc
out
xchg
jnp
inc
push
push
imul
cld
add
cmp
or
fnstenv
sbbl
shll
addr16
jb,pn
fistl
test
outsb
lea
pop
loope
mov
mov
jg
cmp
aam
pop
sbb
les
xchg
cltd
mov
push
shll
or
push
dec
in
int3
mov
subl
incb
int3
sub
scas
psadbw
pop
xchg
xor
rcll
push
enter
ss
popa
icebp
sbb
std
out
add
fcoml
cmpsb
cmp
sub
sbb
jmp
fmuls
push
xlat
lock
fcmovb
arpl
pop
jno
out
jle
mov
pop
mov
mov
adc
jns
push
aad
jge
test
lcall
aaa
test
dec
xor
or
scas
and
and
xchg
mov
in
outsb
das
ja
sub
dec
in
add
push
sub
push
enter
inc
loope
gs
push
loope
ret
inc
stc
push
pop
into
xchg
add
cmpsb
pushf
ds
cli
lret
repz
jb
fs
xor
jb
mov
and
inc
arpl
mov
leave
inc
xlat
mov
int3
push
test
or
inc
adc
xchg
iret
in
cmpsl
sbbl
mov
in
push
xlat
mov
mov
or
lods
shrb
sbb
loopne
push
ss
or
pop
out
jl
es
bound
icebp
jmp
sahf
xor
lea
rcr
xchg
xchg
mov
pop
loop
push
inc
push
pusha
adc
and
repz
xchg
fdivrs
xor
das
xchg
test
pop
insl
in
jecxz
test
arpl
scas
add
sbb
adc
mov
cmpsb
rorb
out
mov
mov
mov
sbb
scas
sub
push
or
fdivr
imul
mov
mov
mov
sub
and
rclb
cmpsl
stc
push
pop
je
gs
popa
jg
pushf
ja
mov
lds
lret
sub
cltd
push
imul
lock
or
aam
jb
mov
xchg
outsl
bound
pop
pop
jo
mov
cmovp
pop
mov
push
test
in
scas
leave
sub
add
pop
inc
aam
mov
mov
and
aam
push
test
pusha
pop
mov
add
arpl
add
add
mov
push
mov
imul
cmp
mov
mov
inc
sarb
sub
cmpsb
mov
jnp
sbb
in
jnp
shr
cwtl
push
loopne
imul
cmp
cmpsl
sub
push
push
inc
cwtl
push
or
mov
dec
jne
loopne
in
inc
mov
mov
sbb
xor
rolb
sub
sub
test
out
std
mov
imul
nop
cs
inc
adc
lret
cmp
mov
pop
in
pop
aas
mov
aas
jge
push
ror
jge
or
cwtl
jp
lods
mov
push
test
bnd
sarb
ss
jge
call
test
jb
inc
mov
fmull
pusha
sub
cmp
popa
xor
ja
sbb
ja
pop
fxtract
mov
sub
daa
cmp
jp
xlat
outsb
and
mov
push
xchg
dec
inc
arpl
pusha
mov
sbb
pop
cli
xchg
push
push
ret
shlb
push
sub
lcall
sub
jle
es
cmpsl
cmpsb
xchg
sub
dec
mov
cli
push
dec
cs
inc
in
pop
out
xchg
aam
in
lret
shlb
add
jp
fwait
icebp
mov
mov
test
mov
outsl
pusha
sub
push
dec
push
xchg
repz
jnp
loop
out
aas
xchg
sbb
xchg
movsl
cmpsl
in
es
pop
gs
ret
lret
aam
cwtl
jb,pt
xchg
mov
fisttps
ficoml
sub
imul
mov
mov
mov
scas
pop
sbb
sbb
cmpsb
push
adc
mov
inc
xchg
xor
push
ror
fwait
icebp
or
mov
adc
into
mov
pop
and
mov
mov
popa
movsl
aam
repnz
jmp
mov
gs
aas
arpl
xor
shlb
mov
mulb
es
stos
or
inc
sbb
aas
mov
int
cli
cmp
xchg
inc
or
push
filds
mov
pop
jmp
jnp
seta
mov
sbb
leave
cmp
mov
adc
ss
and
adc
jle
inc
sbb
mov
dec
aam
push
fisttps
mov
inc
bound
xchg
movsb
mov
jecxz
movsl
insb
inc
ljmp
and
ret
dec
sti
inc
add
fcmovb
mov
push
mov
dec
xchg
fsts
fsubrl
mov
repz
std
push
cmpl
push
cmp
mov
mov
xchg
xor
je
push
cld
xchg
cli
mov
inc
and
jne
xor
xchg
or
daa
js
je
xor
cmpsb
sahf
mov
out
adc
fs
shrb
xor
mov
stos
jno
mov
xchg
add
sub
ss
es
xor
push
pop
jno
subl
jne
out
push
dec
das
sub
mov
ret
pop
inc
pop
sub
cmpsl
movsl
dec
cmp
jns
daa
aad
mov
popa
aaa
in
add
pop
fld1
adc
rorl
out
popf
movsb
shll
nop
push
call
pop
push
mov
cmp
es
cwtl
mov
pop
gs
mov
mov
dec
pop
insl
cmpsb
repnz
jmp
stos
sbb
stos
shll
inc
push
push
aad
xor
mov
fsubrs
daa
in
inc
xchg
mov
mov
out
std
outsb
aam
jle
push
add
and
fwait
xlat
mov
xorl
push
mov
scas
loopne
icebp
or
lcall
sbbb
repnz
scas
daa
jp
clc
mov
sarb
mov
mov
jmp
iret
sbb
and
int
jnp
aam
fadd
test
test
lret
push
push
insb
mov
or
push
and
sub
fistpl
js
adc
and
sbb
mov
push
push
stos
push
jo
lods
into
inc
rol
or
pop
or
rcrl
dec
push
cwtl
pop
roll
mov
sub
xorb
pop
dec
mov
mov
jl
jo
cmp
mov
cmc
mov
mov
xor
fidivl
jecxz
dec
mov
ds
xchg
sbb
daa
lcall
mov
push
pop
aam
add
cwtl
push
fcmove
inc
jns
mov
mov
pop
sbb
or
icebp
mov
inc
bound
insl
ret
imul
aas
out
insb
cmp
out
out
sub
loope
cmp
call
xor
jo
inc
xlat
fcoml
movsb
push
enter
lret
adc
es
xor
pop
dec
mov
lea
in
jecxz
sub
imulb
xorb
sbb
mov
xchg
into
xor
add
pusha
mov
pop
push
call
cs
fisubrs
pop
pop
in
sub
imulb
enter
subb
insl
notl
sub
jnp
mov
mov
sbb
pop
cmp
movl
xchg
bound
push
das
mov
testl
inc
inc
cmp
fisttps
test
cmp
sub
lea
and
ljmp
mov
sub
pop
mov
add
stos
scas
loop
dec
or
cwtl
xor
pop
xchg
mov
or
xchg
push
mov
or
lock
std
jae
inc
jle
xor
fs
xchg
pop
roll
or
push
pusha
jecxz
lret
mov
inc
push
out
push
jno
les
mov
jb
xchg
pop
push
out
dec
js
jmp
mov
cld
push
push
or
sub
inc
enter
xor
loope
xlat
das
jb
out
xlat
pop
xchg
add
jl
ljmp
cld
mov
ficomps
xchg
or
sub
insl
jmp
add
lret
nop
mov
cmp
jge
cld
or
out
movl
dec
testl
iret
fdivl
int3
pop
inc
or
mov
lods
mov
js
pop
inc
cmp
imul
mov
movl
push
rcrb
or
xlat
add
jns
adc
repz
pop
iret
mov
stc
stos
sub
stos
shll
jl
popa
cmp
pushf
adc
jecxz
adc
fisubs
pop
cmpsl
inc
mov
pop
pop
or
xorl
imul
dec
sub
orb
outsb
sbb
sahf
inc
sub
cli
xchg
ficoms
test
addb
push
mov
repz
sti
subb
cmc
leave
mov
xchg
mov
dec
lahf
and
mov
aad
xor
rcr
adc
loop
pop
inc
lcall
std
jle
sub
inc
faddl
pop
movsb
out
jno
xor
outsl
push
xchg
lahf
mov
adc
jg
sbb
rcrb
add
adc
ss
add
xor
repnz
mov
or
sbbl
shl
lcall
mov
stos
or
mov
ficoml
lret
in
call
ja
jmp
and
in
mov
mov
cmp
pop
jae
xlat
inc
negb
in
xor
sbb
and
outsl
cmpsb
mov
sub
sahf
xchg
add
sub
jle
and
insb
pop
push
adc
in
stc
inc
or
and
scas
mov
ret
cmpsl
cmp
mov
jns
outsl
add
xor
inc
outsb
pop
or
lods
mov
push
orb
lods
aam
mov
addr16
jae
ret
or
dec
mov
pop
xorl
pop
pop
mov
and
or
inc
xchg
mov
add
ficoml
into
jo
rcr
jnp
and
push
and
mov
pop
mov
scas
movsb
push
scas
test
fildll
int
rorb
sbb
ss
sar
fisttps
mov
into
clc
fnstcw
aas
dec
iret
arpl
repz
push
pushf
mov
cmp
gs
das
and
dec
fstpl
sbbb
dec
and
in
xchg
mov
inc
subl
ret
dec
repz
ds
xlat
scas
mov
inc
jg
lea
shrl
mov
mov
scas
test
cld
jb
and
pop
int
ficoml
sbb
jle
ret
adcb
add
nop
lods
ret
mov
daa
mov
pop
sbb
ficompl
lcall
js
jae
mov
fnsave
mov
ror
clc
add
int3
je
popa
shlb
push
fcmovbe
sahf
test
mov
xor
push
xor
clc
push
or
pop
out
jo
xchg
xchg
dec
repnz
leave
sbb
iret
or
shr
dec
test
jno
dec
sub
xor
xor
scas
in
push
xchg
and
lret
xor
xchg
int3
adc
jmp
inc
jmp
test
cmpsl
pop
test
pop
xor
push
add
add
jecxz
mov
idivl
and
pop
sbb
mov
push
jo
fmull
pop
jl
mov
jno
sahf
jl
mov
xchg
mulb
lods
push
jnp
scas
inc
mov
out
dec
xchg
push
cmp
rcrb
popa
inc
imul
xchg
jo
stos
adc
sub
rorl
out
sub
sub
or
pushf
rclb
lea
pop
jge
and
int3
mov
dec
cmpsl
push
das
lret
jecxz
setl
imul
stos
jno
or
fisttpl
mov
cmc
fsubrs
pusha
dec
shr
inc
and
sbb
push
cmpsl
push
jno
scas
push
push
sbbl
sbb
cmp
es
ljmp
inc
stc
je
in
fs
cmpsl
or
repz
rolb
or
jb
repz
fdivrl
and
mov
stc
cmp
bound
loopne
xchg
sti
lahf
xor
add
ss
fsubrp
add
mov
jbe
sub
subl
stos
xchg
add
xor
cmp
aad
loope
enter
dec
outsl
cli
cltd
enter
lods
shll
outsl
xor
xchg
xchg
sub
or
les
pop
hlt
cmp
mov
sahf
xchg
rolb
push
sbbb
cmpsb
mov
sub
decb
cmp
sbb
je
pop
sti
inc
push
jp
leave
stos
add
cmc
xchg
outsb
dec
mov
xchg
pop
xchg
push
pop
cs
rclb
pop
popa
adcb
mov
mov
mov
fs
mov
stc
or
jg
lahf
push
ja
jnp
dec
jno
gs
xlat
dec
icebp
or
mov
test
inc
pop
aaa
or
out
fwait
movsl
clc
add
or
outsb
enter
arpl
cld
pop
sub
pop
or
push
adc
xchg
mov
mov
xlat
add
fnstcw
ljmp
jns
push
notb
insb
insb
push
jne
sbbl
jge
add
cmp
xor
jno
pusha
cmp
mov
jp
push
sbb
xlat
jp
out
imul
gs
mov
rcrb
hlt
lds
adcb
fdivrs
push
outsl
push
mov
push
pop
test
inc
clc
inc
jle
cmp
notb
pop
inc
stos
push
mov
stc
out
jecxz
jecxz
ss
cmp
sub
loop
push
fsubrs
gs
push
mov
jb
lods
imul
fucom
and
ret
out
adc
cltd
push
mov
jae
push
cmp
adc
jp
nop
subb
lods
push
mov
dec
cmp
inc
mov
jne
sub
push
fisttps
mov
sub
cmp
in
sbb
lods
or
inc
and
lea
sub
mov
clc
sarb
mov
bound
cmp
dec
xchg
test
sbb
fildll
push
mov
stos
or
dec
mov
sti
push
movsb
filds
icebp
fsubr
cwtl
stos
xlat
in
pop
pop
sub
into
test
jecxz
fstl
add
testb
nop
imul
pop
scas
lds
add
fwait
pop
sahf
cmpsl
pop
repz
mov
outsl
fwait
imull
push
shrl
pushf
sbb
push
sbb
push
inc
pop
mov
pushf
roll
notl
dec
mov
fs
cli
sahf
mov
std
sub
hlt
hlt
xchg
out
and
hlt
stos
xchg
or
push
or
and
pusha
popf
mov
and
js
xchg
xor
xchg
ret
pop
or
dec
dec
hlt
loope
or
arpl
pushf
mov
cs
adc
push
fcomp
aam
mov
outsl
clc
jge
dec
divb
jl
shrl
sub
shrl
adc
lods
cmp
aas
inc
lret
ficoml
and
neg
sbb
dec
add
ds
mov
scas
and
je
pop
ficoml
rolb
adc
std
mov
mov
jne
movb
out
adc
data16
movsb
jl
mov
imul
push
insl
loopne
mov
mov
faddl
xchg
cmpsb
loop
pop
dec
out
mov
bnd
cmc
fstl
jb
daa
fsts
mov
cmp
test
jmp
leave
inc
mov
dec
mov
sbb
lret
pop
or
lods
out
push
das
lods
sbb
scas
mov
mov
test
je
jo
dec
pop
push
inc
adc
mov
andb
add
sub
jo
mov
xor
je
inc
mov
add
inc
repz
in
sti
add
and
cmp
dec
icebp
xlat
cs
pop
shrl
jne
shrl
add
inc
mov
imul
sub
cwtl
cltd
and
popf
xor
dec
cwtl
out
push
jmp
dec
jle
jbe
jns
leave
mov
jne
in
and
pop
add
adc
mov
stc
dec
les
push
andl
arpl
xor
jecxz
incb
jl
xor
inc
out
ja
sbb
loope
icebp
movsb
cmc
stos
es
inc
es
daa
mov
adc
mov
stos
jecxz
pop
sti
ds
mov
cmp
pusha
dec
or
xchg
push
mov
les
add
pop
mov
dec
push
inc
cmc
push
push
adc
mov
fnop
into
and
cltd
add
and
sbb
mov
xchg
push
lock
and
and
xchg
mov
cmp
leave
scas
push
lret
sub
add
lods
mov
aas
cmp
adc
cmpsb
jl
ret
mov
punpcklbw
sbb
in
test
adc
cld
rcl
cltd
imul
xor
push
sti
mov
mov
gs
cwtl
sti
in
in
or
and
test
lods
and
popa
icebp
adc
xor
mov
aad
shlb
sub
add
sub
mov
xchg
testb
dec
mov
fildll
push
cmp
imul
add
sbb
cli
jne
imul
xchg
mov
jae
xor
dec
daa
pusha
or
xlat
movsb
push
pop
adc
std
outsb
cli
mov
adc
fdivr
push
cmp
or
enter
and
in
fisubrl
out
xor
enter
jno
push
mov
mov
data16
or
lods
data16
mov
inc
xchg
leave
and
frstor
push
cmp
test
cmp
pop
and
leave
addl
mov
outsb
addr16
and
lahf
int3
inc
popa
pop
or
lahf
dec
rcrl
inc
push
adc
and
push
push
cs
js
xchg
xchg
dec
pop
cmp
jns
shr
movsb
roll
stos
or
ss
and
jb
or
arpl
repnz
lods
int3
sbb
rcrb
push
loopne
iret
mov
dec
rolb
decl
ljmp
fwait
xchg
cmc
loopw
cltd
add
jp
xchg
xor
adc
bnd
cltd
and
test
add
mov
dec
mov
mov
or
jae
inc
or
mov
sbb
sbb
mov
cmp
inc
popa
xor
es
int
or
movsb
aas
cmp
loope
in
sbb
leave
enter
sbb
bound
dec
xor
rcll
mov
fninit
in
arpl
add
jae
std
subb
pop
or
push
dec
jo
xchg
and
mov
push
lret
cmc
or
jo
sub
inc
jle
push
out
imul
push
xchg
mov
mov
fistl
jecxz
arpl
outsl
lock
les
push
sub
xchg
into
cmp
mov
test
sub
sbb
hlt
lds
cmp
xchg
xor
iret
cmpsl
add
cmp
fildl
loop
or
jge
rolb
clts
lock
stos
xchg
jle
orb
xchg
sti
push
pop
int
or
dec
or
jg
sbb
xor
or
adc
jbe
imul
lcall
aam
das
or
and
mov
or
push
adc
andl
ds
mov
in
mov
pushf
sub
inc
stc
add
out
push
dec
push
cmp
es
test
inc
sub
fsts
mov
jne
stos
push
js
outsb
lea
inc
pop
push
insb
push
pop
add
jecxz
shrb
and
xchg
jo
mov
outsb
xor
dec
and
jecxz
adc
mov
fwait
mov
xlat
rcll
test
loope
cmp
dec
and
into
lret
mov
and
xor
pop
icebp
and
mov
jg
inc
mov
pusha
dec
dec
ror
push
or
imul
pop
mulb
sbb
lret
cmp
mov
add
test
mov
pop
ja
or
call
xchg
cmp
or
fwait
push
fcoms
push
int
mov
js
cmpsl
cmc
cmpsb
int
pop
and
xor
jp
sbb
xchg
mov
mov
push
sub
notb
lcall
into
adc
push
test
dec
test
out
mov
adc
mov
repz
jl
notb
fisubs
and
jae
sarb
lea
scas
push
add
imul
out
call
sub
mov
sarl
pop
cmp
add
pusha
inc
jmp
push
pop
xor
scas
cli
inc
stc
xorb
cmp
scas
inc
repz
dec
cmp
cmpsb
xchg
mov
add
out
pop
sarb
xchg
mov
dec
pushf
mov
jnp
inc
inc
lahf
pop
xchg
in
pop
fidivl
dec
and
sti
push
jnp
outsl
push
imul
sbb
mov
mov
push
out
push
xchg
rorl
lods
add
cmp
push
sub
nop
and
sbb
pop
sahf
jge
inc
sbb
mov
fwait
iret
aam
sub
test
ljmp
mov
out
movl
loopne
lcall
in
add
jb
sub
lahf
lfs
add
pop
into
push
jbe
push
out
sahf
mov
pop
bound
adc
cmp
in
gs
aam
mov
pop
or
pop
push
icebp
pop
ret
mov
inc
adc
pop
lahf
enter
je
jo
hlt
ja
mov
mov
pusha
je
cmpsb
bound
test
test
cmp
dec
fcomps
sbb
xchg
call
pop
popf
cld
mov
out
jae
pop
jecxz
and
xchg
das
arpl
pop
decb
push
sub
and
add
cmp
subb
mov
pushf
int3
jle
mov
xchg
nop
test
adc
mov
mov
dec
sarb
mov
push
mov
and
es
cmpsb
and
pop
mov
or
mov
xor
loopne
or
mov
imul
iret
orb
push
lock
mov
inc
jnp
fldcw
cmp
aad
dec
push
jmp
push
aaa
or
std
aad
or
add
mov
gs
push
stos
push
inc
jle
mov
daa
cmp
pop
rcrl
rclb
cld
cmp
push
mov
dec
mov
mov
idiv
addr16
xchg
mov
push
dec
out
and
int3
movsl
roll
pop
mov
lret
jecxz
xor
cli
orl
lcall
mov
mov
xor
leave
xchg
push
pop
orl
dec
loop
cwtl
fmull
xchg
lods
hlt
jae
push
sarb
testb
dec
and
call
and
inc
pushfw
pop
aad
lret
mov
es
xchg
inc
jnp
dec
test
dec
popa
push
cld
inc
inc
aam
subl
inc
ss
and
jae
xor
xor
inc
mov
in
aaa
mov
or
jnp
dec
mov
mov
xor
in
int
and
inc
mov
das
insl
lods
rcr
repz
and
jl
popl
scas
dec
pop
jmp
mov
stos
push
mov
orb
movsl
pop
inc
push
imul
jle
inc
int3
pop
leave
in
sbb
arpl
in
jae
mov
push
jmp
and
push
xchg
call
jne
inc
dec
pop
fstl
xchg
cli
test
push
pop
jno
test
jo
lods
pop
fildl
xor
pop
pop
cmp
loopne
inc
addr16
xchg
inc
push
imul
shrb
jb
pop
fstps
fisubl
rorb
xchg
xor
push
inc
pop
xchg
pop
jmp
pop
jle
hlt
xchg
push
jnp
movsb
adc
adc
xchg
dec
fimull
cmpsl
hlt
std
xchg
stc
or
cmp
subl
push
xchg
mov
xchg
fbstp
or
rcrl
and
and
imul
dec
nop
fidivl
aas
lea
add
push
jg
add
outsb
out
and
les
and
sbb
aaa
sub
test
hlt
shrb
adc
jge
xor
in
mov
inc
loopne
cmp
pop
loop
lcall
pop
sub
mov
std
push
push
sbb
fsubrp
mov
js
mov
mov
cmp
ficoml
je
mov
inc
out
test
push
mov
sbb
repz
and
test
and
test
lahf
mov
outsb
ljmp
ss
vaddsubpd
xor
ja
or
jbe
push
in
mov
push
jns
cmp
jge
rcr
sub
xor
cmp
sahf
ss
mov
mov
dec
ffree
and
flds
loop
je
or
pop
mov
stc
outsb
cmp
mov
hlt
flds
sub
add
int3
add
in
or
ja
xchg
aad
jle
test
shlb
out
mov
sahf
jae
add
bndldx
in
xchg
loope
cltd
cmc
xchg
in
push
mov
rcll
xor
fsincos
mov
loope
insb
mov
aaa
leave
cwtl
int
ret
leave
aam
inc
jmp
lods
pop
mov
push
jg
adc
jecxz
xor
xchg
pop
xchg
push
add
sub
test
adc
xchg
push
add
mov
sub
dec
test
cmp
add
cmp
ret
cmp
dec
or
and
mov
cld
scas
adc
loopne
mov
pop
fcoms
cmpsb
add
jbe
in
or
icebp
loop
enter
in
mov
cmp
mov
stc
ljmp
push
xchg
lea
pop
adc
lcall
movsl
xlat
in
inc
fcomip
pusha
jmp
in
hlt
adc
jmp
cmp
pop
out
inc
jne
mov
jnp
mov
in
and
leave
or
ss
ret
lods
mov
xchg
fstpl
cmp
pop
lods
cmpsb
shr
mov
test
sysexit
adc
jg
mov
inc
es
and
stos
pmulhw
dec
fstp
lock
jno
subl
and
popa
pushf
cs
xor
jns
scas
pop
ljmp
dec
and
cltd
mov
mov
pop
sbb
xchg
imul
pusha
addr16
jge
jo
xor
pushl
cmp
out
or
mov
adc
push
lock
insl
pushl
xor
push
push
lds
jge
xchg
or
adcl
sbb
push
mov
bnd
dec
out
inc
cmp
sti
pop
mov
jge,pt
test
mov
aaa
fldcw
pushf
dec
scas
jecxz
or
stc
add
xlat
mov
cmp
repnz
sbb
mov
inc
mov
sbb
fwait
adc
nop
scas
out
jl
jmp
popl
push
filds
mov
jb
sub
call
pop
push
outsl
aas
inc
sbb
jg
cmp
aad
adc
push
daa
ja
dec
test
push
hlt
xchg
repz
es
mov
sub
aaa
ret
xchg
stc
les
adc
pop
out
addr16
mov
pop
xchg
pop
lret
mov
dec
sub
xchg
dec
jmp
aam
sub
scas
mov
dec
jle
cld
push
lret
notl
imul
scas
fnstenv
jle
jno
mov
enter
out
icebp
add
sub
ja
add
iret
stos
mov
add
rorl
fildll
xor
decl
push
cld
jge
fstps
jmp
repz
sub
and
enter
call
out
adc
or
pop
mov
aam
sbbl
xchg
push
sub
pop
lea
mov
and
push
pop
mov
mov
mov
nop
mov
pop
dec
mov
gs
xor
push
mov
mov
xor
xor
pop
mov
mov
sbb
mov
std
loope
cmp
xor
into
icebp
fadds
fwait
and
xchg
adc
pushf
fnsetpm(287
pop
outsb
pop
and
fcompl
mov
xorb
fsubrs
cmp
shlb
cmp
rorb
lret
xchg
push
inc
mov
popf
jae
xchg
jmp
mov
ljmp
ljmp
push
lahf
mov
sub
cwtl
adc
leave
js
fisttpl
add
arpl
dec
insb
xor
out
gs
cmc
push
mov
ror
add
lret
cli
cmp
jnp
repz
sub
sbb
pop
aas
sbb
pop
shll
cwtl
in
sbb
test
fistps
add
jecxz
addl
xor
inc
sarb
push
sarb
sub
icebp
lock
and
testb
leave
bound
push
xchg
out
test
push
roll
push
or
ficoms
jp
xor
xchg
adc
out
add
adc
dec
xchg
cmc
into
inc
adc
lcall
aaa
xor
xlat
xchg
mov
pop
mov
notb
das
ds
bnd
in
imul
femms
push
dec
push
loopne
notb
sbbb
add
jg
iret
push
mov
sbb
lock
dec
add
les
mov
jle
mov
leave
xor
clc
jle,pt
loop
or
or
dec
int3
insl
sahf
sbb
rol
into
movsl
repnz
movb
test
mov
pop
jbe
jecxz
rcl
outsb
mov
add
ror
push
dec
adc
mov
sub
scas
pop
jns
jns
adc
pop
aas
dec
cmp
pop
xchg
loope
sub
in
push
xlat
cwtl
int3
sahf
inc
or
loope
jae
mov
pop
push
sub
push
fs
aad
loop
jns
bnd
shr
lret
jge
movsl
loopne
addr16
dec
mov
pop
es
jmp
cmpsl
sub
xchg
and
xlat
sub
inc
inc
mov
pop
aaa
inc
and
pop
inc
movsl
daa
flds
test
mov
mov
mov
int
cmp
xchg
xchg
xchg
ss
out
or
dec
mov
pop
aas
loopne
mov
arpl
mov
xchg
movsl
dec
pop
xchg
rcll
mov
mov
mov
sbb
sbb
cli
sub
mov
int
fildl
pop
imul
xchg
add
jle
fucomi
xor
or
movsl
adc
mov
shll
xor
mov
movsb
inc
sub
negb
push
xchg
and
jmp
stc
add
icebp
and
xor
lret
lods
pop
fsts
insl
push
aam
aam
in
aas
ljmp
in
test
in
dec
out
shrb
lahf
mov
fisttpl
mov
loop
and
cmp
sbb
fcompl
arpl
gs
aad
mov
mov
jne
mov
pop
jae
movsb
iret
sub
pop
or
mov
sbb
lret
je
and
xchg
fldenv
push
lcall
or
inc
add
subb
mov
mov
loop
pop
and
jbe
aas
in
ja
xchg
test
push
jecxz
in
mov
addb
adc
dec
enter
push
jb
std
cli
and
and
cmpb
in
pop
sbb
fistpll
shrb
in
imul
insl
pop
inc
and
push
gs
adcb
movl
or
push
jae
add
sti
pop
mov
fistps
push
adc
ror
xor
inc
cwtl
or
mov
sbb
pop
fwait
pop
cmp
add
xor
cmpsl
xchg
insl
xor
mov
cmc
ja
aaa
inc
sbb
shrl
cs
cld
or
les
cmp
adc
adc
mov
clc
add
pop
sub
sub
cmp
shr
dec
mov
icebp
sbb
jg
adc
ret
pop
xchg
and
out
cld
enter
lods
and
scas
fnsave
jnp
call
stos
xchg
xchg
lcall
mov
mov
rcrb
adc
mov
lret
lret
inc
andl
mov
adc
push
mov
jnp
icebp
and
jae
xor
jo
mov
push
mov
fdivl
cwtl
pop
ret
addr16
ds
or
pop
xchg
ret
or
sbb
pop
js
rcll
mov
add
mov
js
jp
jae
fs
imul
cmp
xor
jnp
or
pop
mov
push
jo
lock
imul
xchg
loopne
pop
ljmp
dec
sbb
cmp
or
push
or
jmp
int3
xchg
jnp,pt
inc
insb
mov
cmp
leave
ret
xchg
mov
lret
and
ror
pop
mov
cmpsb
pop
pop
mov
clc
movsl
pushf
out
out
lods
mov
or
inc
cmc
stos
sbb
or
cmp
fisubrl
les
mov
mov
add
add
xchg
lods
fmuls
mov
dec
adc
mov
push
jg
and
out
xor
in
scas
add
clc
xchg
pop
mov
pop
mov
push
jnp
inc
adc
addr16
push
pop
sub
xchg
and
scas
inc
cs
lea
mov
aas
dec
pop
imul
jecxz
push
jmp
adc
mov
fdivr
xor
rcr
call
xorps
int3
mov
shrl
divl
inc
aaa
out
or
leave
pusha
pop
imul
and
jg
in
into
bound
orl
cmp
xor
dec
adc
xchg
sbb
in
mov
dec
pop
xorl
rorb
push
sbb
adcl
adc
jp
into
fdivrl
cld
cltd
sbb
test
rclb
adcl
movsb
cli
aas
test
seta
lret
decl
test
insl
ja
mov
dec
pop
pop
addr16
out
nop
test
int3
adc
pop
imul
jo
addl
xchg
pop
iret
aas
mov
pop
and
ja
adc
insl
cmpsl
adc
rcr
inc
push
mov
arpl
mov
xlat
mov
das
adc
pop
fst
xchg
shrb
test
xchg
inc
into
lods
or
push
adc
mov
adc
bound
mov
push
xchg
outsb
gs
imul
dec
fwait
ret
fwait
les
in
xchg
add
into
adc
fisttps
lods
and
adc
lret
pop
in
orb
cs
xchg
cmp
add
jbe
dec
fwait
imul
mov
nop
dec
sub
and
movsb
pop
pop
mov
xor
adc
fadds
or
ds
add
inc
xor
sbb
push
in
dec
mov
push
lods
lea
and
cld
loopne
arpl
or
mov
fbld
roll
rcr
and
enter
shlb
pop
enter
lock
mov
push
stos
add
mov
sbb
adc
cmp
jb
lret
dec
in
cmpsl
sub
add
arpl
mov
shrb
mov
sub
stos
dec
or
push
addb
adc
aaa
ret
mov
test
cld
arpl
dec
cmp
ret
in
pop
push
dec
xchg
and
in
mov
dec
cli
dec
bts
das
adc
sbb
add
jno
movsb
adc
sahf
pop
mov
xchg
inc
add
jge
loop
adc
pop
aaa
or
inc
xchg
xor
inc
fidivrs
mov
sub
cmpsb
mov
mov
jp
push
insb
aam
test
jl
mov
hlt
or
pushf
sbb
or
xchg
hlt
fists
pusha
insb
push
xor
sbb
or
shlb
jne
in
notl
mov
xor
mov
add
adc
mov
imul
mov
cmp
movsb
fnstenv
cmp
pop
inc
std
stos
mov
jle
sbb
inc
out
fistpll
mov
movsl
dec
mov
iret
bound
mov
adc
mov
mov
push
mov
or
scas
nop
mov
inc
and
in
enter
stos
push
cmp
pop
fidivl
jne
xor
cmp
sbb
btc
or
cmp
iret
sub
test
pop
jb
xchg
mov
jae
pushf
loope
mov
das
xor
cmpsb
imul
mov
mov
or
das
push
xchg
imul
movsl
inc
lret
mov
insl
push
outsb
scas
and
dec
scas
mov
push
scas
fwait
rcll
divb
pushf
test
mov
filds
or
sahf
cmp
dec
daa
ss
dec
mov
dec
inc
xor
sbb
mov
or
pop
xchg
mov
mov
js
adc
push
lods
jl
mov
leave
das
lahf
daa
daa
xor
aam
sub
lret
pop
sbb
outsb
push
mov
xor
sbb
sub
inc
int
mov
leave
dec
insl
xor
pushf
es
aam
mov
jo
aaa
or
and
jbe
icebp
push
dec
outsb
xchg
arpl
les
pop
xor
int
fdivp
cmp
or
movsb
insl
xchg
es
mov
scas
lret
daa
push
jg
dec
sbb
xor
lret
mov
cld
push
test
fs
mov
xchg
jbe
outsb
lea
push
push
mov
shll
icebp
mov
sahf
mov
orl
mov
mov
mov
adc
lods
testb
fisubrs
and
jl
push
adc
push
and
pop
mov
nop
popf
mov
pop
mov
das
sub
lret
push
out
rdtsc
or
jne
jo
fdivp
test
out
into
dec
jp
pushf
xchg
pusha
mov
ficompl
cli
pushf
repz
sub
mov
es
xchg
jbe
test
int3
adc
cmp
inc
cmp
stos
xchg
add
inc
fmul
mov
cli
les
sub
cmp
adc
mov
inc
or
dec
pop
push
divl
fwait
jae
or
add
jmp
pop
das
inc
jg
push
insl
dec
int
aam
adc
pop
imul
push
mov
test
cmp
call
js
cmp
movsl
jne
push
ds
ror
sbb
test
imulb
push
bound
xchg
jg
jg
xchg
xchg
adc
inc
xor
mov
stos
pop
js
sbb
pop
addr16
test
adc
das
fcoms
dec
sub
mov
jle
inc
imul
in
icebp
or
cmp
outsb
js
int
lret
sbb
mov
mov
xlat
dec
call
sub
in
mov
fnsave
shll
pop
shlb
jecxz
mov
inc
lcall
pop
aam
fsubs
testb
repnz
shl
lods
sti
scas
xchg
or
cmc
iret
cwtl
outsl
inc
cmpsb
js
imul
cltd
push
jo
mov
mov
mov
cmp
push
dec
mov
rclb
orl
cmp
adc
notb
in
mov
repnz
cmc
cmp
add
inc
xor
icebp
out
xchg
xchg
adc
xchg
fbld
jbe
or
jne
push
imul
test
fstpt
adc
je
hlt
dec
jle
sbb
add
lcall
imul
dec
jg
enter
test
out
mov
loopne
int3
cld
dec
cltd
orl
stos
lea
push
pop
les
rorl
das
cmp
jb
mov
and
sarl
pop
pop
mov
cltd
and
push
sbb
sti
xor
mov
mov
lock
jo
cltd
mov
cs
mov
ror
push
daa
mov
lret
lds
rclb
push
mov
inc
pop
inc
aas
dec
mov
xor
and
mov
jno
pushf
pop
stos
jecxz
pop
push
add
push
loope
xlat
mov
and
loop
movb
fisttps
sub
xchg
jns
imul
xor
and
rorl
push
lock
scas
adc
out
arpl
fisubrl
lret
mov
dec
fadds
and
pop
push
shl
jb
shlb
fs
lods
inc
xorb
fisubl
movsb
outsb
mov
insl
xchg
sub
lea
mov
sbb
movsb
pushf
lods
fstl
test
jg
push
cmpsb
jbe
dec
nop
dec
dec
lock
clc
test
insl
shrb
cmpsl
cmp
jg
ret
movsl
push
inc
es
ja
sub
js
mov
cmp
loopne
je
and
mov
inc
leave
sub
cmp
push
mov
and
clc
mov
or
push
movsb
cmp
jp
fxch
fwait
out
cmpsb
lods
add
push
mov
push
dec
lcall
jle
loop
mov
pop
push
daa
or
inc
adc
fldenv
ret
loopne
aad
mov
js
adc
leave
mov
ror
sarl
lods
pusha
stos
mov
aaa
xlat
mov
jecxz
sbbl
adc
movsb
jnp
cli
jle
imul
aam
lret
push
add
roll
jp
ss
aaa
xor
les
or
jge
rcr
jl
mov
sahf
rclb
sbb
and
in
and
test
shrb
xor
inc
lret
xor
push
xchg
fs
mov
or
sub
dec
pop
and
cs
fisubrl
nop
into
xchg
scas
std
jl
adc
std
cmp
mov
mov
xor
ret
leave
in
adcl
movsl
mov
roll
outsb
cmp
xchg
mov
push
sbb
push
popa
ljmp
jne
mulb
mov
push
repnz
push
mov
arpl
xchg
aad
outsl
incb
das
jbe
jne
add
lahf
mov
or
inc
arpl
jle
jle
sbb
mov
in
out
push
xchg
out
jbe,pn
xorl
pop
shl
cmpsl
mov
xchg
pop
in
dec
int
stc
lods
inc
cld
stc
mov
cli
rcrl
xchg
or
into
aad
mov
adc
mov
xlat
ljmp
cmpsl
lods
ljmp
les
pusha
mov
jle
pop
test
jle
xor
fwait
jmp
jmp
mov
xor
loopne
outsb
dec
ret
add
xchg
adc
bound
and
cli
jecxz
int
dec
into
and
or
es
cld
es
insb
les
adc
xchg
push
cmpsb
fs
aas
stos
in
fimuls
cs
pop
lret
adc
add
mov
daa
inc
dec
in
sub
outsb
push
rolb
dec
push
dec
mov
lcall
cmp
cmpsl
fwait
xor
pop
or
and
jb
pop
cmpsl
jmp
outsl
aad
mov
popf
push
jae
sub
xchg
mov
pop
out
popa
mov
cld
push
mov
jns
jno
int3
inc
and
adc
adc
lahf
mov
cmp
es
push
inc
mov
fsubs
cmpl
push
jecxz
cmp
add
stos
movsl
ja
cmpsl
and
mov
out
cmp
repnz
aas
inc
icebp
lret
mov
xchg
fwait
mov
sub
xchg
sub
hlt
xchg
stos
push
pop
jmp
ds
add
pop
and
xchg
in
psraw
dec
mov
pushf
xchg
iret
jp
flds
push
jecxz
push
add
jmp
lcall
aad
or
mov
mov
fldl
mov
out
test
jp
movsl
adc
pop
and
pop
addr16
popa
jmp
ljmp
addb
out
xchg
or
mov
imul
rcl
lods
dec
cmpsl
mov
dec
pushf
mov
jb
cmp
sbb
int3
dec
iret
xchg
add
mov
and
test
jle
xlat
jmp
cmpsb
out
repnz
rcrb
rcl
mov
fdivrs
jecxz
jecxz
icebp
enter
lcall
jl
inc
out
jo
gs
sbb
aad
mov
mov
arpl
sar
je
dec
adcb
push
cmp
xor
fdivrs
mov
js
and
ljmp
movsb
sarb
jns
call
inc
filds
sbbb
jb
insb
push
sub
fisttpll
aad
or
sub
mov
or
jns
mov
jnp
sbb
sub
mov
sbb
imul
add
cmc
mov
leave
pop
mov
mov
shll
mov
ss
call
movsb
outsl
or
jb
loopne
out
inc
cli
negb
cli
rol
fsubrs
lcall
fwait
sub
and
lret
sbb
fsubrs
push
lahf
push
fwait
lock
leave
push
adc
sahf
cld
push
arpl
push
cmpsb
lock
cwtl
cmp
push
push
out
push
jmp
pop
mov
pushl
icebp
mov
push
sbb
pop
repz
dec
frstor
jae
cmc
add
mov
out
hlt
xorl
js
movsb
push
push
sub
add
and
push
xor
mov
loope
ret
mov
mov
add
rorb
out
ret
sbb
adc
fisttpll
jl
and
jg
push
push
fdivp
adc
or
test
call
fcoml
std
lahf
int
addr16
fcmovbe
outsb
mov
fucomp
lret
mov
aas
lret
mov
xchg
mov
int
andl
inc
cmp
shl
pop
imull
fidivl
inc
or
xchg
or
clc
out
rep
mov
iret
lret
sub
and
cltd
lods
sbb
sub
jp
jbe
je
and
lds
pop
fiaddl
pop
in
xor
pop
jle
dec
das
xor
fnstcw
sub
ficompl
movsl
jge
xor
inc
popa
fsubrs
stc
push
sbb
inc
daa
imul
les
adc
sbb
dec
cmpsl
fwait
mov
icebp
stc
aam
adc
mov
mov
fisttpll
sbb
aad
pop
fldcw
xchg
add
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
pushl
int3
dec
icebp
dec
call
cmp
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
or
out
icebp
test
incl
outsl
dec
dec
movsb
or
xchg
testb
and
lcall
sub
insl
lcall
es
mov
mov
cmc
dec
call
mov
mov
inc
stos
aas
iret
repz
xor
call
sbb
cmp
jp
jno
ret
lcall
lea
arpl
xchg
mov
inc
stos
aas
into
repz
push
pop
push
add
push
push
mov
push
pop
inc
lods
sub
int
add
fldl
stc
or
xchg
xor
mov
cmc
dec
call
mov
dec
cmc
in
cmp
test
adc
clc
jmp
int3
dec
dec
dec
call
out
cmp
int3
pop
cmc
dec
call
inc
neg
dec
cmc
dec
ljmp
test
lock
jmp
incl
icebp
dec
call
std
test
int3
dec
in
call
call
cmc
dec
call
incl
cmc
dec
call
in
popa
test
add
stc
jecxz
test
int3
dec
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
shl
pop
mov
daa
push
stc
jecxz
test
sbb
dec
in
pop
test
mov
call
pop
stos
adc
call
pushl
test
cmc
dec
call
incl
cmc
dec
call
jmp
test
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
call
incl
cmc
dec
xchg
stc
int3
incl
push
xchg
cltd
mov
aad
shlb
mov
fwait
sub
je
movsl
int
fcmove
lret
out
dec
shr
pusha
xchg
or
dec
int
mov
xchg
int3
jl
sub
sarb
cld
and
aad
out
not
cmpsb
xchg
xor
xchg
pop
fsubl
lds
dec
cmp
leave
fiadds
cwtl
out
inc
movsl
inc
decb
loop
les
push
xchg
inc
mov
mov
addr16
cmp
xchg
js
and
loop
or
push
stc
sub
push
mov
lock
adc
test
lds
shrb
adc
lock
push
orb
sub
xorl
sbb
mov
loopne
push
aad
mov
sbbb
xchg
lods
jno
adc
xchg
sub
jecxz
mov
ret
push
mov
and
xor
dec
gs
fwait
sub
push
sysexit
imul
in
pop
popf
pop
fcomip
or
push
inc
dec
aam
and
movsl
adc
fadds
jl
lret
mov
psubsw
ret
out
dec
dec
mov
ss
sbb
and
roll
push
insb
fdivr
out
nop
not
cltd
mov
sbb
stc
xchg
fdivl
jne
inc
jno
inc
inc
cltd
mov
shl
xor
ljmp
daa
lds
ds
cmp
sub
jnp
test
das
sbbl
out
out
sbb
call
pop
mov
in
xchg
sub
add
mov
inc
inc
pop
xlat
sti
cmpsb
outsl
std
bound
leave
pop
xchg
pop
aad
pushf
aad
fwait
jne
xor
mov
mov
imul
jp,pn
addl
lods
daa
mov
jge
pusha
or
popa
pushf
cmp
cmp
add
jecxz
in
inc
repnz
popa
cli
repnz
stos
sub
test
add
xor
hlt
push
jp
push
movsb
sub
push
push
cmc
sub
fimull
into
lret
out
loope
and
lcall
pushf
inc
lcall
and
or
xchg
popl
lcall
das
cltd
xor
sbb
xor
jge
adc
jge
or
push
setbe
icebp
jne
cmp
pop
mov
into
sbb
leave
aaa
jno
mov
fsubrs
push
call
and
add
inc
mov
mov
mov
arpl
out
ret
gs
dec
cs
xor
pop
mov
push
lcall
dec
xchg
gs
xchg
mov
cmp
fwait
int3
insl
cmpsl
xor
cld
adc
loope
loop
sarl
xchg
movsl
loopne
int
cmp
insb
fcoml
imul
xorw
aam
adc
xchg
mov
out
call
insb
aas
adc
push
mov
test
repnz
mov
inc
or
lods
fldt
mov
rclb
ja
add
popf
out
or
scas
negl
jno
inc
dec
pop
xchg
pop
mov
fnstcw
ret
pushf
and
add
mov
arpl
out
adc
add
repz
mov
imul
bound
xchg
mov
test
push
mov
nop
or
and
mov
out
sbb
push
les
notl
or
addr16
std
or
pop
shl
daa
and
sti
je
inc
jno
or
and
loop
mov
std
xor
cwtl
xchg
xchg
js
sbb
mov
dec
push
jnp
aaa
or
jns
inc
popf
mov
jae
shr
or
pop
ja
cmp
sbb
inc
pushf
rclb
sbb
dec
add
in
stc
movsb
cmpl
adc
lock
jno
scas
movb
sbb
popf
jb
adc
fwait
pop
loop
xchg
jg
ss
in
int
iret
sbb
mov
jae
cs
jbe
cmp
rclb
in
js
pusha
sub
icebp
pusha
inc
pop
xchg
rol
jmp
xchg
pop
sti
aaa
outsl
in
mov
add
test
sbb
mov
jl
in
jmp
test
insb
mov
popf
mov
in
fmull
lret
cmc
pop
mov
fldcw
inc
frstor
jae
jg
or
iret
out
int
lock
cmp
xor
into
sbb
insb
adc
sub
mov
out
fnstcw
frstor
sti
adc
pop
and
enter
inc
xor
inc
ds
das
inc
int3
and
data16
cli
test
ret
adc
mov
js
shll
popf
out
hlt
and
inc
ja
dec
mov
jae
xchg
ja
nop
mov
push
or
outsl
inc
mov
pusha
je
aad
lahf
shlb
cmpsl
jns
cmpsl
adc
out
test
das
dec
in
cmp
mov
popa
jo
jne
cmp
in
jno
or
sbbb
jle
jl
jbe
jbe
push
sub
and
push
mov
ja
and
hlt
pop
inc
xchg
ss
rcrl
ficomps
push
sub
imul
cmc
cmp
int3
mov
mov
pop
add
add
fs
cltd
fucomi
adc
or
mov
cmp
xor
lret
sbb
mov
sbb
inc
mov
andb
out
ret
sti
mov
fidivs
lret
out
cmp
pop
ja
mov
add
xchg
push
and
sub
lds
inc
test
dec
mov
hlt
mov
mov
jno
dec
repnz
inc
xor
push
mov
sbb
aaa
imul
mov
or
pop
lds
jo
sub
mov
pop
rol
xor
in
pushf
ljmp
xor
mov
inc
jge
ret
sbb
jne
xchg
loop
add
or
add
hlt
cmp
pop
mov
inc
scas
in
or
lret
xor
dec
mov
dec
jecxz
xchg
mov
push
imul
mov
lock
adc
shll
lcall
inc
fistpll
push
ja
jno
dec
sub
mov
fbstp
inc
jg
mov
shlb
les
pop
lock
shlb
xor
cltd
ja
mov
leave
sar
pop
cmpsb
xchg
mov
cmp
lods
mov
aas
inc
mov
pop
xor
pop
inc
cli
es
popa
sbb
push
push
mov
call
push
dec
cmp
inc
mov
mov
pop
out
add
mov
sub
ss
sti
mov
push
mov
sbb
push
fiadds
and
push
sub
jns
movsb
insl
xor
loope
sub
aaa
stos
scas
sub
sub
cwtl
push
push
mov
aaa
js
out
xchg
mov
push
ss
pushf
or
adc
daa
popa
xor
sbb
mov
popa
push
mov
sub
xor
adc
ja
mov
push
jl
enter
sub
arpl
xchg
add
jge
pop
ret
xlat
pop
jle
push
out
scas
and
mov
popf
jg
cmp
subl
je
fidivl
and
ss
lea
sbb
sbb
push
daa
lds
daa
mov
pop
mov
jns
jb
cmp
in
adc
dec
push
pop
cmp
and
dec
mov
push
mov
test
mov
adc
mov
je
cmpsb
cld
lcall
inc
inc
arpl
out
sub
fdivrp
push
push
cwtl
scas
mov
mov
inc
lock
mov
adc
in
sbbl
jmp
cmp
xor
push
jne
fisttpl
sti
and
mov
jecxz
insb
mov
and
push
inc
pusha
stos
addr16
int
ss
mov
pop
cmpsb
das
pop
adc
pop
out
insb
xchg
loopne
repnz
out
xor
adc
xor
sahf
mov
sub
testl
imul
xor
xchg
sarb
shll
insl
inc
loope
movsl
and
dec
outsl
xchg
scas
imul
push
push
mov
xor
orb
ljmp
rorb
movsl
mov
lods
adc
inc
mov
dec
push
lcall
adc
xor
out
xor
inc
stos
jle
pop
or
add
xlat
clc
imul
adc
int3
ret
xchg
jbe
jmp
pop
mov
shll
xchg
jmp
jecxz
or
sub
inc
out
pop
adc
dec
jmp
cmp
arpl
mov
fistpl
jnp
negb
xor
jb
movsb
xor
push
ret
pop
imul
cmp
jno,pn
int
xchg
sbb
dec
inc
mov
ret
and
xchg
insb
jge
test
inc
shll
lret
andnps
mov
aam
dec
adc
scas
es
mov
jg
mov
int
xchg
push
or
xchg
addr16
rcr
arpl
lret
xchg
and
rcrl
arpl
jecxz
aaa
mov
dec
call
jmp
cli
clc
mov
mov
sub
popa
es
jb
adc
add
mov
or
nop
xor
sub
daa
inc
and
fcoms
xor
addr16
pop
adc
daa
add
push
rcr
addr16
push
insl
and
ss
add
dec
mov
repnz
and
data16
rorl
inc
push
insl
stos
imul
pusha
cmp
rcll
repnz
push
mov
rcl
outsl
xor
clc
js
lods
jl
sbb
jo
out
inc
dec
fisubrs
hlt
fisubrs
movsb
push
repz
pushf
cld
outsl
adcl
aad
js
dec
rorb
xor
aam
fisubl
jbe
xorb
popf
in
inc
cmp
enter
mov
bound
xchg
push
call
fnstenv
aad
or
jl
outsb
cmc
test
adc
pop
push
and
cmp
loop
mov
jae,pn
shlb
mov
xor
sub
mov
cmp
clc
mov
rcrb
lret
jg
ja
js
daa
enter
leave
int3
in
mov
repz
fisttpl
dec
rcll
mov
fbstp
cmc
cmp
imul
into
mov
sbb
out
andl
push
push
das
pop
insb
or
sbb
push
cmpsb
int
lea
jbe
and
push
or
imul
mov
test
scas
repz
push
jne
lods
push
addl
cmp
push
testb
mov
pop
stos
pop
loope
jmp
pop
fnstcw
leave
jl
rorl
and
leave
mov
xchg
xor
pop
repz
mov
mov
push
lea
cmp
in
je
das
mov
icebp
adc
xor
dec
or
cmp
and
pop
dec
pop
mov
in
sarb
xchg
pop
sti
test
push
addr16
jnp
jnp
flds
adc
insb
mov
cmc
enter
adc
xchg
mov
push
pop
mov
mov
ja
push
inc
xchg
loopne
adc
out
xor
mov
or
popa
out
cmpsb
icebp
subps
xchg
or
es
mov
rolb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
