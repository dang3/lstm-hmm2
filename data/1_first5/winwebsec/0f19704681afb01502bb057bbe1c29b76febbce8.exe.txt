push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
aaa
shr
outsb
add
push
cwtl
js
push
mov
xor
rcrb
push
xorl
push
jae
sub
int
push
stos
pop
leave
jle
xchg
cltd
jp
rolb
mov
jno
sbb
pop
repnz
outsl
out
xor
pop
roll
arpl
addb
sti
loop
ja
and
cli
ror
test
popa
xchg
faddl
out
rcl
popa
add
mov
mov
xchg
pop
movsl
mov
mov
lret
jecxz
jle
mov
pop
or
icebp
pop
mov
lahf
pop
mov
xor
rorl
add
or
mov
in
in
daa
dec
arpl
inc
call
inc
out
hlt
ret
in
adc
jb
daa
dec
jge
or
pop
or
add
insb
out
add
cwtl
std
jo
and
pop
mov
rclb
fwait
cmp
cmp
sbb
testb
xchg
sbb
mov
fisttpll
cmpsb
mov
lret
push
popf
or
pop
cmc
mov
mov
mov
cmc
repz
pop
adc
mov
cmp
cmpsl
in
jecxz
int
adc
xor
test
or
imul
fildll
or
or
repz
xchg
xor
add
sub
mov
jmp
add
nop
cmp
dec
or
outsl
adc
sarb
lock
pop
movsl
jg
imul
xchg
mov
mov
fmuls
add
std
sbb
adc
addr16
mov
out
or
inc
inc
add
icebp
and
mov
xchg
sub
scas
add
shl
push
push
pop
arpl
jbe
sub
sub
repnz
lahf
pop
jmp
pop
jne
js
das
adc
sbb
jne
jg
or
push
lret
sbb
imul
dec
dec
sub
or
loope
and
jnp
out
or
xchg
ja
dec
int
xor
movsb
sbb
insb
or
lahf
out
bound
insl
and
inc
ret
cwtl
or
dec
xchg
push
ss
mov
mov
fs
sub
jle
repz
cmp
lods
cmc
loopne
lret
cmc
lods
jno
into
outsb
xchg
add
dec
dec
add
jmp
sub
or
daa
in
push
sub
pushf
adc
aaa
inc
loop
pop
jnp
imul
pop
loop
mov
xor
add
mov
loopne
cmp
ds
push
fisubs
or
mov
inc
stos
mov
movsl
xor
leave
inc
ret
pusha
mov
in
dec
adc
push
mov
jbe
scas
sbb
adc
add
decl
pop
cmc
dec
lock
push
out
jge
cmp
cmp
adc
sbb
xchg
out
xchg
inc
jl
push
dec
shlb
jb
mov
sti
mov
inc
push
data16
pop
in
adc
push
cmp
leave
xor
pop
andb
push
cmp
fdiv
popa
popf
cmc
or
ja
or
mov
or
daa
cmp
and
outsl
jbe
cmp
sbb
jae
cs
adc
pop
mov
shrl
add
pop
in
and
xchg
cmp
push
cwtl
inc
jbe
jne
push
mov
popf
xchg
mov
inc
shrb
stc
cmp
xchg
fsts
inc
or
sbb
mov
sub
in
jnp
jmp
mov
outsl
dec
iret
adc
loop
sub
pop
ror
and
test
inc
inc
fcompl
cld
xor
loop
push
cmp
sub
sahf
ja
sbb
mov
mov
mov
dec
test
cmpsl
aas
adc
adc
jg
sbb
mov
push
cmp
add
movsb
inc
pop
sbb
cmp
mov
sbb
aad
imul
int
adc
das
xchg
jbe
ficoms
cld
jle
dec
lods
bsf
dec
xchg
fadds
insl
ret
inc
inc
lea
outsl
xchg
inc
xchg
or
dec
pop
pop
inc
pop
jo
jae
repnz
int3
stos
push
push
cmp
mov
test
sbb
shrb
rorb
xchg
mov
pop
je
les
mov
pop
push
mov
out
fadd
daa
xchg
ret
je
lods
and
jg
cmp
aad
sub
outsb
lahf
cmova
sbb
cmp
pop
and
or
cmp
adc
out
fbld
add
popfw
icebp
and
xchg
arpl
inc
cmpsl
hlt
add
jle
push
push
jmp
test
xchg
sbb
clc
outsb
leave
imull
xchg
cmpsb
and
arpl
sub
sub
jl
jl
sub
lock
mov
mov
mov
mov
imulb
incl
lea
mov
call
mov
out
mov
add
push
pop
mov
and
das
adc
jp
aaa
mov
cmp
xchg
mul
aad
jne
addr16
sub
adc
out
popw
jnp
out
xor
leave
mov
adc
add
pop
fwait
dec
pusha
xlat
test
ds
sbb
lret
xor
pop
out
int
incl
cmpsb
cmp
xchg
or
add
mov
out
adc
push
std
jns
rcrb
mov
lds
cmpsl
push
fwait
and
das
sbb
adc
jbe
int3
outsl
mov
add
inc
pop
inc
xlat
jl
scas
jge
cld
aad
popa
mov
lcall
pushf
cmp
daa
xlat
rcll
int3
inc
cmp
gs
xor
jae
ss
mov
clts
cltd
push
icebp
sub
call
dec
fnstenv
insl
add
out
testl
bound
scas
pop
sbb
scas
jae
and
fucompp
jne
out
sub
fstl
and
out
push
push
stc
add
sbb
filds
mov
mov
cld
dec
fcomp
mov
jns
scas
adc
cli
aad
xor
aad
imul
addl
or
adc
adc
jae
ret
cmp
sbbl
rorl
or
cmp
jecxz
jae
pushf
inc
adc
push
pop
xchg
stc
sub
stos
shrd
pop
inc
mov
xor
push
xchg
jl
popf
subb
cmp
mov
or
xchg
iret
in
push
jb
in
cmp
subl
sbb
push
sti
inc
mov
dec
loopne
out
mov
cld
bound
jle
or
loope
xlat
imul
inc
incl
lret
iret
test
arpl
jle
sbb
mov
mov
and
arpl
jmp
nop
imul
ret
ja
out
push
adc
fldcw
stos
scas
dec
dec
sub
push
sub
push
andb
cs
mov
xor
inc
les
cmp
test
lar
lret
shlb
xchg
sbb
das
pop
cmp
das
out
pop
xor
cli
addl
stc
and
adc
inc
int3
mov
fnstsw
stc
data16
cld
clc
xor
sub
out
push
lea
gs
push
addr16
mov
mov
aad
mov
in
aas
push
movb
xor
repnz
lcall
sub
bound
fiadds
mov
adc
add
inc
add
in
outsl
inc
ficomps
aas
xor
aas
das
fistpl
dec
pop
fcompl
sbb
fistpll
cmp
cld
aad
lret
movb
sahf
inc
arpl
jl
cmp
xor
test
insb
and
data16
test
pop
cmp
mov
xor
pop
leave
neg
inc
jbe
cmp
sub
jae
push
sub
ret
mov
js
jg
pop
cli
addr16
loope
xor
cmp
lret
mov
ss
xchg
cmp
inc
imul
stos
lea
je
and
sbb
pop
add
sti
cmp
hlt
push
push
mov
lahf
and
fwait
push
inc
setae
pop
out
cmp
pop
repz
cmp
cltd
icebp
pop
sub
pop
movsl
sbbl
into
or
in
adc
mov
pop
add
cmpsl
cmp
imul
mov
enter
out
adc
stos
xchg
dec
out
into
cmpb
add
jne
test
or
sbb
stos
sbb
insl
mov
mov
jp
inc
stos
shr
sbb
fildl
push
add
xor
vmwrite
xchg
pop
sub
pop
mov
into
cwtl
ret
mov
add
mov
xchg
pop
mov
lods
push
ja
push
fisubs
and
vmovupd
dec
push
loopne
xor
or
sbb
cmp
lods
sbb
xchg
inc
stos
repz
popl
stos
push
sub
push
int3
out
cmpsl
lock
inc
xor
and
pushf
mov
add
sar
or
leave
add
out
mov
shlb
xchg
mov
jne
loopne
mov
cli
mov
pop
fcmovnb
or
lcall
push
adc
scas
movsb
xchg
mov
loop
xor
and
cmc
mov
cltd
sbb
in
inc
insl
lock
ret
icebp
mov
dec
repz
xchg
jg
sbb
jmp
jne
fildll
push
jns
push
rclb
in
rcrl
call
icebp
push
or
sti
lcall
hlt
cmp
hlt
js
pop
dec
or
inc
and
dec
sti
inc
out
mov
fimull
pop
insb
shlb
stos
ss
push
push
adc
mov
aam
or
add
test
pusha
cmp
repnz
jne
xor
mull
mov
pop
cmp
ret
mov
testl
pop
daa
mov
mov
fwait
inc
push
lea
jmp
fwait
mov
add
jb
test
movsb
fcoms
jge
ljmp
stos
sbb
daa
rcl
cmc
notl
dec
sbb
push
mov
jg
cmc
mov
ja
xchg
jl
sbb
fistl
add
testb
sub
xchg
dec
fs
jge
jnp
add
mov
push
adc
cmp
rcrb
mov
mov
shl
hlt
imul
pop
vandnps
inc
shlb
leave
imul
mov
lcall
jno
mov
or
jecxz
or
shll
push
pop
test
pusha
xor
mov
xchg
mov
xor
xor
push
cmp
mov
nop
sti
lods
mov
sub
sub
xor
pop
cli
pushf
or
jle
and
inc
jns
insb
insb
icebp
push
inc
lods
sub
sub
adc
setnp
mov
out
pop
icebp
lock
stos
aaa
sub
cmp
cmp
lret
mov
push
loope
xchg
fsubl
lcall
push
cwtl
or
clc
lock
idivb
xchg
in
data16
mov
mov
mov
jae
inc
sti
lcallw
dec
je
sbb
mov
push
jge
repz
data16
xor
push
repnz
mov
sahf
test
ror
mov
add
enter
fdivrl
dec
cltd
dec
repnz
leave
pop
mov
and
cwtl
test
or
repnz
sbb
ds
lret
insb
notrack
add
scas
xor
mov
xor
jne
call
mov
and
cmpsl
dec
adc
lods
mov
fnstcw
das
and
xor
xor
pop
or
shr
pop
insl
cltd
aaa
loope
mov
push
sbb
in
mov
mov
mov
shll
xchg
fisttpll
arpl
adc
movsb
sub
jno
or
in
inc
ret
insl
xor
daa
mov
les
cld
int
lods
xorl
pusha
mov
in
andb
daa
jne
mov
and
es
sbb
mov
imul
sbb
gs
stc
push
das
push
lcall
rcrl
sbb
xchg
mov
out
aad
ret
xchg
lods
enter
fs
and
imul
out
xchg
ficompl
ret
push
fnstsw
jmp
cs
insl
add
pusha
out
dec
sbb
adc
adc
sbb
xlat
push
adc
ljmp
shll
jne
mov
lds
sub
lret
inc
xchg
leave
mov
sub
js
scas
jp
fs
push
sbb
adc
adc
mov
lret
inc
adc
jmp
int
sbb
xchg
iret
lods
les
sahf
sub
roll
iret
cmpsb
mov
iret
mov
pop
sub
xor
or
das
loopne
mov
lods
xor
fstl
mov
pop
or
cmp
cmp
popf
mov
mov
mov
push
mov
sbb
ficompl
insb
xchg
aas
test
xchg
push
fwait
dec
push
and
scas
mov
shlb
add
jo
mov
and
mov
loope
adc
stos
mov
sub
xor
inc
bswap
adc
add
mov
loopne
cmp
cmp
inc
xchg
jmp
add
and
mov
pop
mov
sar
pop
leave
jge
xlat
test
mov
add
xchg
mov
fdivl
cltd
andl
and
dec
sahf
jno
push
xor
add
jmp
ffree
ja
adc
mov
pop
sbb
outsl
out
jp
pop
ss
and
fnstenv
jmp
dec
xor
jmp
adc
xchg
jecxz
add
mov
rcr
dec
call
jae
cld
je
aaa
push
cmp
mov
mov
mov
ret
lret
cltd
dec
inc
subl
mov
xchg
insb
nop
ficompl
cmp
jb
add
int
cmpsl
mov
inc
repnz
outsb
leave
rolb
mov
jge
mov
ret
lods
dec
jl
mov
gs
and
lods
pop
sbb
mov
dec
add
enter
cmpb
sbb
cltd
xor
je
inc
mov
call
scas
jno
movsb
adc
ss
cld
je
ja
outsl
out
cmc
mov
pop
sub
iret
xor
scas
or
dec
adc
cli
js
scas
mov
mov
dec
xchg
pushf
leave
into
sar
mov
mov
push
push
mov
fsub
int3
fcompl
aad
ficoms
mul
lahf
jl
cmpsl
or
leave
mov
pop
xchg
pop
sbb
movsl
and
adc
aam
shrl
push
and
imul
outsl
adc
int
sub
inc
outsb
push
xor
xchg
pushf
xchg
loop
sub
into
mov
mov
cs
mov
push
cltd
add
es
xchg
push
jle
mov
mov
jae
xlat
push
cmp
lcall
nop
mov
in
pop
dec
fnstenv
aam
adc
mov
jecxz
pop
arpl
pop
dec
lds
mov
adc
in
adc
out
test
inc
xor
sub
dec
popf
inc
and
out
pop
test
cmpsl
sbb
cmp
cmp
pop
scas
xchg
jg
mov
cltd
jae
mov
popa
xchg
aas
mov
jp
mov
add
add
inc
dec
lret
popf
icebp
cmc
je
sbb
mov
out
aas
and
fsubl
add
les
stc
cmp
ds
xchg
lock
and
adc
adc
ja
adc
dec
cld
dec
or
adc
mov
push
inc
fldenv
adc
dec
fisttpl
sbb
aaa
nop
mov
mov
enter
mov
cli
pextrw
test
lock
adc
push
movsb
in
or
inc
mov
jmp
data16
hlt
or
push
and
push
push
or
adc
call
jnp
xlat
inc
in
loope
aas
cmpsl
inc
rolb
add
bound
daa
shrb
push
in
or
mov
jmp
pop
jo
mov
sbb
adc
test
inc
jo
test
shrb
es
cltd
je
je
jp
push
mov
cmp
aaa
clc
scas
mov
into
and
out
mov
push
fs
repz
jge
stos
sbb
cmp
inc
sbb
adc
aam
mov
push
roll
movsb
add
adc
or
jecxz
inc
test
jp
xchg
stos
lcall
je
xchg
jns
inc
cmp
mov
inc
ret
icebp
leave
les
fimull
mov
nop
pop
pop
jle
and
or
mov
push
jne
insl
sbb
pop
lods
dec
pushf
rcrb
call
rorl
mov
jmp
mov
rcrb
in
push
inc
push
push
sbb
sub
inc
mov
leave
jns
ficoms
dec
add
cmc
adc
lea
jnp
inc
push
insl
ret
xor
pop
mov
xor
ret
mov
and
inc
gs
es
xchg
inc
adc
sbbl
push
mov
je
push
cmp
mov
mov
lock
pop
or
in
repz
int3
aam
mov
out
push
mov
pop
cmc
or
dec
inc
push
stos
je
xor
mov
mov
cmp
mov
test
or
xlat
pusha
movl
fisubrl
and
dec
jns
sbb
or
cli
push
cs
adc
aas
xchg
push
rorl
xor
pop
lret
std
xchg
xchg
mov
jecxz
adc
lret
out
push
fcomi
push
movsb
shlb
subb
movsb
fstpl
push
pop
pop
mov
ds
cmovnp
adc
jecxz
cmp
pop
pop
test
jmp
inc
push
je
dec
iret
lds
adc
cmc
sar
hlt
rsm
shrb
lss
cltd
dec
sbb
out
jb
rolb
icebp
mov
in
pusha
aad
addb
push
xchg
adc
fnstcw
imul
decl
hlt
fisttpl
mov
sub
sub
daa
and
cld
dec
inc
stos
daa
adc
out
cmovae
jns
cmp
adc
outsl
add
ret
mov
cld
adc
adc
jnp
xor
dec
sysret
push
ss
xchg
cmp
sar
mov
sarl
mov
pop
jmp
push
add
out
add
inc
sbb
loop
sub
clc
sbb
pop
in
in
mov
mov
xchg
addr16
sbb
lret
out
push
jb
sahf
cmp
lahf
ds
aaa
cmc
dec
mov
pushf
rcrl
iret
and
in
jmp
mov
pusha
and
and
daa
pop
cmp
mov
clc
nop
and
mov
out
cmc
pop
fbld
push
jmp
cmp
push
lods
jl
adc
push
mov
das
mov
mov
icebp
mov
mov
adc
jl
scas
jp
leave
push
outsb
adc
repz
pop
inc
inc
mov
ljmp
notl
subb
or
xor
in
gs
jo
dec
and
clc
mov
jp
aas
pop
enter
push
out
add
sbb
and
outsl
xor
mov
jl
enter
mov
xchg
xchg
cmp
icebp
cltd
cmp
shll
ror
cmpl
rcrl
pop
mov
add
nop
xchg
cli
add
pop
push
aas
push
cmp
jbe
dec
push
sar
mov
int3
xlat
inc
pop
mov
inc
adc
adc
dec
popa
push
inc
in
mov
mov
stc
jle
out
fwait
add
ret
jg
dec
jle
out
pop
loope
dec
jb
stos
or
das
loopne
push
jge
dec
arpl
mov
frstor
dec
pop
pop
xchg
or
pop
pushf
fbld
or
add
mov
sub
lahf
inc
mov
mov
xchg
jle
dec
pop
fdivrl
pop
push
scas
movups
out
lret
lods
jecxz
sub
dec
inc
out
inc
stos
decb
cmp
inc
pop
outsb
aad
in
mov
adc
aam
mov
sub
aaa
or
sub
cltd
mov
in
xor
test
jecxz
xor
fsubrs
addl
cmp
loopne
in
add
es
dec
jp
mov
aaa
cmpb
movsl
shr
icebp
inc
je
lahf
movsb
js
std
xchg
lcall
jmp
mov
outsl
inc
xor
in
inc
inc
andl
xor
dec
xchg
int3
sub
jge
mov
mov
jl
xor
aas
testb
mov
add
lock
xor
and
pop
cmp
jecxz
out
push
addl
jge
aam
popl
or
imul
sub
inc
or
mov
in
ja
jp
push
cmp
xor
jbe
aam
fsubrp
sbb
cmc
adc
sub
aam
push
aaa
push
add
cli
xor
ret
loope
mov
dec
xchg
jecxz
insl
jb
nop
push
sub
aas
pop
scas
cmp
dec
or
jl
pop
lret
mov
mov
popa
in
and
fistpll
and
cmp
pop
lds
or
jae
cmp
sti
sub
insb
in
loopne
xchg
sahf
in
dec
ja
out
imul
jmp
lods
vcmpss
cs
pop
push
cmc
mov
and
popf
cmp
pop
lcall
pop
cmp
fstpl
and
pop
mov
faddp
aad
daa
inc
and
jp
push
jmp
mov
cmp
cwtl
xchg
adc
sahf
xor
enter
aad
jne
inc
xor
jnp
repz
mov
gs
lds
or
das
adc
jo
fwait
push
jno
push
mov
dec
in
jle
add
cmpsb
jmp
pushf
pop
fwait
push
nop
loop
rcll
mov
js
push
cmc
inc
jmp
dec
or
push
rorl
jns
cld
jmp
pop
stos
sub
sub
repz
cltd
ja
fwait
and
mov
mov
xor
xor
inc
or
lds
addb
xor
mov
lahf
dec
dec
outsb
stos
cs
jge
rcrl
fbld
lret
jl
xor
movsb
imul
add
mov
sbb
lock
mov
jb
cs
pop
inc
mov
es
bound
les
adc
adc
pop
lds
fs
cmp
mov
pop
call
pusha
cmpsb
loope
stc
xchg
adc
jnp
clc
bound
sub
dec
ret
adc
sbb
shr
jg
enter
movsl
rorb
push
cmpsb
push
inc
arpl
movsb
lods
fdivl
les
jbe
push
fidivs
push
pushf
repnz
div
fildll
cmp
mov
mov
mov
jnp
out
or
pop
in
fldenv
fwait
loope
fisubrl
iret
jbe
addr16
insl
inc
or
testl
add
jle
insb
pop
mov
xor
call
rorl
dec
outsl
lahf
lock
aad
xor
push
jne,pt
test
hlt
outsl
jno
in
loopne
aad
ret
push
and
cmc
lods
scas
fcoms
mov
push
dec
mov
fdiv
pop
sub
cmp
icebp
mov
daa
dec
fcoml
inc
js
adc
das
aam
jno
mov
mov
jecxz
call
push
jp
lock
jmp
lock
inc
das
xorb
pop
adcb
out
insl
sbb
inc
fnsave
popa
mov
in
imul
cmp
cmp
cmc
loopne
or
and
push
jne
cmp
jmp
pop
mov
cmp
addr16
neg
jnp
xchg
push
loop
mov
mov
xor
xor
push
and
lret
into
xor
xchg
bound
mov
mov
mov
call
mov
sbb
repnz
daa
iret
xor
jl
sub
clc
ds
rcll
rorb
outsb
int3
push
pop
and
js
lcall
fucomp
adc
cltd
hlt
rep
leave
jle
out
lret
stos
int
inc
pop
sahf
cmp
dec
push
mov
pop
rolb
push
sbb
out
inc
test
jb
test
popf
lret
jle
rcrl
xchg
or
mov
jns
sarl
push
sti
aad
and
in
lcall
loop
xchg
das
mov
mov
bound
xor
out
jp
imul
ret
int3
adc
pop
shl
int
enter
jbe
cmpsb
rorl
bound
lock
xor
pop
push
jge
sub
push
ret
sub
lret
push
outsl
cmp
or
sbb
fxtract
xchg
add
je
int3
mov
mov
cmp
sbb
out
das
out
dec
cs
inc
std
in
sti
shl
rcll
daa
cmpsl
cmp
roll
push
aaa
sbb
pop
sub
inc
push
push
repz
sub
ret
daa
push
sub
cmp
jae
cmp
and
push
sbb
fcmovnu
push
ret
add
and
les
add
fadds
mov
cmpsb
mov
push
add
dec
icebp
mov
sbb
mov
push
es
cmp
addb
push
lock
clc
mov
mov
out
or
int
jge
lcall
jl
ret
mov
mov
scas
jne
inc
push
mov
imul
into
adc
in
mov
jecxz
es
insb
outsb
test
pop
cmpsl
lea
xchg
sub
push
in
mov
es
clc
push
in
cld
add
cmpsb
std
rorb
xchg
lret
cmp
dec
push
bound
add
lods
into
mov
push
xor
mov
sbb
testl
scas
cld
xchg
in
cwtl
fists
aam
mov
pop
adc
out
out
cmp
or
ja
mov
pop
mov
jnp
mov
adc
dec
daa
mov
cmpsl
pop
pop
cli
outsl
nop
pop
or
mov
push
mov
sti
cmpsl
dec
pop
jbe
push
les
adc
dec
add
shrb
sbb
rcrb
lcall
data16
xlat
fstl
xorb
mov
fsubs
cmp
adc
dec
lahf
test
rcr
and
push
fists
call
jb
push
cli
dec
mov
sbb
add
mov
test
mov
cwtl
mov
test
xchg
inc
sbb
cwtl
int
rorl
cld
test
roll
push
xor
out
out
stos
dec
sub
and
pop
pop
loop
dec
push
pop
pusha
ret
push
push
cld
dec
movsb
loopne
iret
pushf
pop
push
adc
sbb
push
sti
xchg
sahf
jg
sahf
icebp
push
add
adc
fwait
mov
cmp
lea
or
out
xor
jnp
movsl
or
sbb
jae
inc
sbb
pop
jmp
adcb
push
dec
jmp
xlat
nop
jo
cmp
or
enter
adc
mov
ja
repnz
add
cmc
or
mov
push
jmp
pop
rcr
adc
inc
mov
out
enter
dec
std
aas
ljmp
out
push
jno
push
xchg
pop
push
movsb
adc
lods
imul
push
ljmp
inc
add
mov
xor
push
add
les
push
stos
lcall
imul
pop
mov
mov
int3
popf
pop
test
mov
cmp
out
aaa
pop
out
push
push
lahf
mov
push
clc
xor
xchg
xchg
xor
xlat
aam
stos
inc
xor
sbb
sbb
loopne
lock
cmpsb
xor
mov
fisubs
or
adc
pop
imul
call
fsts
stos
test
push
xchg
cmp
or
mov
adc
mull
aaa
xchg
jb
adc
call
inc
shrb
mov
jp
add
stos
xchg
add
test
dec
mov
or
xchg
cmp
xor
testb
pop
movsl
loop
cmpsl
out
sahf
xor
inc
inc
aam
inc
mov
inc
xor
mov
sahf
cmpsb
xchg
cmp
jp
into
cmpsl
fs
add
jg
dec
sbb
cmp
xchg
cs
or
out
test
adc
xor
pop
dec
loop
rcrb
repz
xor
add
or
std
inc
ds
ja
sbb
jne
scas
dec
push
and
pop
adc
cmc
jp
enter
sbb
inc
mov
cli
cs
xchg
xor
hlt
sub
xchg
mov
mov
sbb
xor
lcall
aas
enter
jae
xchg
pop
cmpsb
mov
push
xor
mov
lds
aas
mov
pop
xor
fisubl
sub
shrb
in
lea
or
aad
mov
dec
outsl
lods
mov
sbb
mov
bound
xor
adc
and
mov
pop
in
stos
and
scas
mov
ret
insb
mov
jnp
pop
leave
lea
ss
fbld
or
xlat
ljmp
xchg
or
mov
cli
mov
or
mov
or
cli
dec
and
test
push
sub
pusha
mov
xchg
aaa
idivb
dec
addr16
enter
xchg
out
out
test
ja
fistl
loope
push
addl
test
or
or
push
stc
aas
xor
test
fiadds
mov
mov
fbstp
lahf
out
iret
dec
fwait
pop
adc
sub
xor
int
pop
movsl
cmp
in
add
leave
sbb
xor
pop
jp
and
mov
inc
shlb
bound
mov
xor
cmc
hlt
mov
jae
cmpsl
cmp
add
ja
pop
pusha
data16
ds
or
clc
cmpsl
mov
cmc
ljmp
xchg
inc
leave
pop
add
stos
mov
push
in
fwait
in
push
cmp
ror
xlat
dec
int3
fdivrl
in
iret
or
call
xchg
mov
popa
adc
push
sbb
out
movsl
or
mov
outsb
xchg
pop
xor
jle
xchg
notb
mov
xor
outsb
lcall
xchg
pop
test
es
sbb
data16
push
into
mov
xor
fimull
mov
sbb
addr16
inc
addr16
cmp
mov
call
pushf
fs
cmp
push
in
push
xor
outsl
dec
xchg
fcomip
mov
hlt
rolb
mov
data16
jae
lcall
jo
and
and
inc
lods
rcrl
cs
and
incb
inc
xlat
pop
loopne
sahf
sub
push
cs
mov
and
hlt
imul
fucom
ret
adc
xchg
dec
movsl
adc
mov
and
push
or
mov
inc
fdivp
jae
rcrl
stos
cld
out
jge
dec
mov
xchg
pushf
ret
into
adc
mov
pop
xor
popa
icebp
xor
cld
not
dec
cmpsl
fbld
add
sbb
fsubs
inc
dec
pop
out
dec
lcall
lcall
lret
cmp
pop
movsl
mov
mov
inc
inc
lods
jle
or
mov
lret
cmpsb
out
lds
inc
inc
push
adcb
repnz
imul
pop
flds
mov
sub
aas
stos
inc
push
inc
jbe
dec
arpl
push
lret
imul
and
cwtl
xor
repz
nop
inc
ja
fidivrl
in
jno
fadds
insb
or
sbb
jb
aad
xor
xor
sbb
in
inc
cmp
xchg
dec
sub
push
js
mov
and
or
xchg
fwait
sahf
xchg
add
push
mov
leave
mov
adc
fistpll
cld
pop
int
mov
push
sbb
push
bound
imul
adc
les
xor
adc
xor
jno
sbb
sbb
jno
pop
inc
lcall
je
cmpl
xchg
lret
xchg
fisubrl
cmp
daa
mov
loopne
mov
inc
fs
stos
sahf
fimuls
cmc
mov
jle
and
inc
imul
shll
inc
orb
bound
pop
mov
xchg
push
repz
mov
fwait
or
pop
js
imull
lock
push
add
and
cs
ljmp
stos
cwtl
fnstcw
cld
cli
jne
or
sbb
mov
popf
pop
int
in
sub
shrl
scas
jp
movsl
inc
out
cmp
xor
cld
inc
push
inc
data16
sti
in
sub
jb
int
or
mov
repz
stos
es
jmp
mov
mov
das
in
sbb
inc
lret
push
inc
lock
jbe
mov
fisttps
and
js
dec
pop
inc
dec
daa
dec
fadd
inc
sbb
dec
sarb
push
lcall
aad
andb
icebp
dec
rcl
pop
push
insl
lods
daa
or
xor
inc
push
dec
ds
popa
xor
clc
xchg
cmp
arpl
dec
aad
push
jno
imul
filds
sub
jp
ds
mov
pop
test
push
xor
xor
inc
insb
int
in
dec
mov
pop
mov
mov
ret
push
loopne
dec
aaa
sub
sbb
aam
cmp
mov
nop
add
rorl
in
rol
pop
sub
xorl
dec
enter
mov
daa
adc
push
push
int3
into
pop
mov
pop
or
xor
gs
inc
inc
inc
xchg
out
jg
aas
pop
loop
out
lret
fs
cmc
pop
lock
outsb
cwtl
push
loope
out
xor
cmp
xchg
push
pop
fnsave
fisttpl
dec
xor
jne
sbbb
or
lea
outsl
mov
cs
sub
popa
lcall
cmpsb
cmpsb
cmc
or
inc
fwait
mov
dec
add
test
outsl
mov
pop
add
repnz
jmp
pop
push
fisubrs
mov
ds
dec
imull
mov
adc
pusha
ljmp
out
or
not
loope
add
mov
pop
push
dec
adc
fidivrs
adc
insb
bound
sbb
add
gs
sti
data16
cmpsl
cmpsb
mov
mov
repnz
arpl
xchg
cmp
out
icebp
pop
mov
pop
push
fs
sar
test
icebp
leave
mov
sbb
and
fisttpll
aaa
adc
or
or
jg
add
inc
push
mov
mov
inc
pusha
dec
nop
xchg
mov
jae
cmp
xchg
incb
jecxz
popf
lds
xchg
leave
push
xlat
out
cli
jp
and
adc
das
mov
fisubrl
gs
leave
jae
mov
movsl
call
pushf
clc
adc
push
inc
in
out
push
jns
in
mov
shrl
outsb
mov
js
in
xor
addr16
out
and
push
subl
cs
test
das
cmp
dec
cltd
push
xor
sti
std
mov
jmp
or
inc
out
inc
mov
dec
mov
mov
jns
mov
lretw
insl
aas
out
adc
cmpb
mov
cmc
xor
lahf
jge
mov
icebp
jb
sbb
push
xchg
mov
dec
mov
ja
or
jbe
dec
or
dec
or
pop
mov
aas
mov
add
leave
imul
xchg
js
fnsave
jmp
rcrl
dec
ds
decb
bound
in
out
mov
repnz
test
cli
jnp
cli
jnp
ret
and
mov
data16
in
shlb
dec
cmp
clc
mov
xchg
dec
or
mull
dec
addl
or
imul
insb
lock
loope
call
add
xor
in
inc
and
shlb
mov
aam
xor
push
jbe
sti
add
sub
lock
and
shll
jecxz
rcl
bswap
xor
popa
adc
mov
das
nop
addr16
insl
sbbl
lds
mov
outsb
aaa
jno
mov
mov
jae
push
les
sub
clc
mov
out
add
push
je
jo
adc
mov
in
out
arpl
sbb
leave
jbe
jle
je
mov
cmp
lahf
and
mov
mov
sahf
sub
cmp
iret
xor
div
sti
loope
adc
stos
mov
into
pop
push
dec
int
inc
mov
push
insb
cltd
daa
les
xor
cld
les
rcll
sti
es
pop
pusha
push
and
sub
cmp
or
sbb
jae
cltd
jp
in
sub
dec
repz
test
mov
add
mov
jge
mov
out
fcoml
pop
pop
adc
popa
jecxz
jnp,pt
pushf
addr16
scas
out
dec
adcb
leave
aas
dec
jmp
mov
repnz
mov
push
mov
xchg
sub
xor
stos
rorl
es
xchg
ror
dec
xchg
lock
mov
std
movsl
jg
or
mov
or
data16
sarl
outsl
xor
jae
push
gs
fists
xchg
mov
in
fdivr
cmp
or
int
hlt
mov
add
hlt
popf
pop
stos
jmp
cmc
xor
or
mov
in
mov
in
add
pop
lods
rcrl
ja
fidivl
push
loop
fidivs
lret
xchg
xor
js
sbb
push
scas
or
mov
xchg
inc
outsb
dec
popa
sub
push
cltd
scas
aad
cmpsl
fiaddl
sar
xchg
jecxz
ja
mov
fldt
bound
push
ret
add
shrb
mov
add
fsubrl
jecxz
add
rclb
in
adc
pop
out
mov
inc
xchg
filds
cmp
sbb
cmpsb
stos
dec
aad
hlt
xchg
adc
jp
hlt
cmp
sti
nop
mov
into
xchg
mov
mov
cwtl
xchg
fnstcw
xchg
mov
repnz
push
cs
pushf
jmp
cmp
adc
or
ljmp
out
insl
mov
cmp
loopne
mov
jae
adc
xchg
adc
lcall
cmc
lahf
mov
fcomi
in
andb
xchg
jo
jp
les
or
mov
arpl
stos
sbb
pop
dec
push
inc
jmp
rcr
pop
lock
scas
loop
jg
lret
scas
fsubrl
push
push
lahf
dec
jl
adc
cmp
push
pushf
cmp
andb
xor
xchg
lods
cmpsl
adc
rcr
sub
mov
arpl
sub
sub
xchg
pop
dec
or
popa
fisttps
xchg
loopne
sbb
call
insb
push
ljmp
iret
or
enter
les
mov
or
xchg
push
sbb
pop
mov
addl
push
mov
mov
mov
ljmp
cmp
ljmp
jbe
cmpl
fstpt
adc
adc
jge
or
inc
inc
dec
fwait
or
dec
fidivs
shrb
inc
mov
xchg
dec
repz
add
lahf
insl
jb
push
popa
push
int
pop
mov
mov
repz
int
imul
in
shlb
repz
int3
js
stc
or
adc
daa
arpl
es
pop
cmp
sub
fisttpl
adc
jnp
sub
add
aaa
shrl
je
pop
push
dec
pop
jmp
jle
lock
mov
mov
enter
test
xchg
inc
clc
out
jg
mov
fistpl
mov
sahf
pop
push
fnsave
mov
pop
int
loopne
cmp
das
sub
dec
jae
inc
jmp
xor
les
xor
add
mov
fwait
jge
inc
mov
lds
jp
adc
out
xor
inc
xchg
sub
and
sti
andb
mov
or
push
fstpt
les
push
xchg
adc
xlat
jecxz
xor
pop
mov
xor
pop
jno
push
or
and
and
cmp
push
rolb
dec
aas
inc
sbb
jo
sti
sbb
pop
fld
cmp
popa
cld
js
andl
lret
les
pop
lret
jae
jne
mov
adc
dec
adc
les
clc
pop
enter
dec
sbb
push
pushf
add
push
cmpsl
jge
sub
dec
movsb
jne
pop
ret
testb
inc
sub
mov
sub
arpl
subps
mov
pop
inc
test
lods
mov
aad
cmc
out
std
sbb
iret
rep
inc
rcr
aad
add
adc
jmp
jecxz
pop
in
jne
out
in
sbb
cmp
sarb
mov
push
lcall
mov
je
mov
inc
jmp
jp
cs
inc
lock
addr16
ja
mov
push
pusha
movsl
in
cmp
out
outsl
jns
rorl
test
mov
inc
and
push
xchg
dec
cs
mov
enter
icebp
mov
add
xchg
sub
lea
ss
add
insl
jg
push
jmp
cwtl
push
les
mov
pop
shll
mov
jmp
adc
in
lea
clc
push
cwtl
xor
stos
ss
sub
ljmp
jmp
fnsave
sbb
jnp
push
test
cmp
push
cmp
orb
fisttpll
add
cmp
lock
adc
mov
imul
icebp
das
cmp
ds
clc
jns
dec
mov
sub
int
push
scas
push
cmpsb
xchg
test
push
mov
push
jle,pn
jae
mov
sbb
adc
pand
pop
movsl
fstps
xor
mov
mov
outsb
scas
outsb
ss
ljmp
inc
popa
mov
scas
and
and
and
pop
scas
ja
stos
pop
ret
mov
stos
ja
es
bound
lahf
jne
xchg
cmp
int
mov
push
or
dec
push
or
mov
stos
xor
lods
push
loop
dec
pop
fwait
aam
out
adc
mov
inc
lcall
pop
aas
mov
aaa
mov
xchg
sub
mov
sub
imul
dec
fimull
loop
add
mov
sub
or
insb
cmc
pop
es
test
xor
decl
mov
push
xor
js
inc
cmpsb
mov
push
add
ficoms
shr
mov
lcall
fcom
or
push
cwtl
out
out
fstps
insb
loop
or
xchg
mov
test
push
stos
test
push
xchg
inc
sbb
stos
loopne
js
dec
mov
cmp
mov
scas
test
xlat
jbe
pop
xchg
mov
out
ljmp
lods
adc
add
lcall
out
data16
ret
scas
mov
ljmp
mov
subl
or
dec
lods
fsubs
int3
jmp
in
jb
push
or
push
stos
js
or
push
mov
clc
in
pop
pop
dec
jmp
daa
inc
xchg
aaa
pop
xor
aas
int
inc
jb
or
mov
in
cltd
xorl
jp
scas
add
mov
inc
mov
pop
push
push
out
cmp
or
pop
mov
inc
arpl
mov
sbb
test
mov
mov
outsb
xchg
inc
dec
mov
add
cmpb
int3
mov
dec
xchg
push
cmpsb
mov
cmp
mov
bound
or
sahf
lods
push
xor
push
and
xor
pop
pop
dec
fcmovnu
cmp
and
push
repz
xchg
inc
loopne
fxch
mov
cwtl
mov
push
dec
arpl
jp
imul
add
push
xchg
inc
mov
xchg
fyl2x
add
cmp
xchg
insl
scas
data16
jnp
gs
cmpsb
pop
push
fisubrs
pusha
test
mov
cli
enter
je
pop
popa
stos
and
mov
stos
sub
into
bound
jnp
movsl
fildl
fwait
stos
aaa
imul
lret
gs
mov
inc
mov
mov
daa
sbb
ret
lahf
pop
adc
mov
lock
jb
loop
adc
pop
ret
pop
inc
das
adc
mov
incb
movsb
pop
mov
mov
fildll
mov
sub
repnz
in
dec
idivl
pop
push
xchg
mov
inc
shr
mov
es
and
outsl
cmp
daa
sub
lahf
out
push
out
push
add
mov
adc
pop
ret
pop
mov
sbb
jl
fld
inc
loop
cltd
arpl
xchg
adc
mov
jl
aas
jo
inc
mov
aam
fstps
mov
sub
xchg
pusha
jns
xchg
cs
test
pusha
clc
sbb
fldt
bound
cmc
mov
push
and
mov
jecxz
xchg
clc
in
push
testb
ja
adc
ret
addr16
stc
jbe
cmp
call
inc
nop
fisttps
pop
cs
mov
pop
faddl
and
call
inc
mov
cwtl
adc
and
sbb
push
sbbb
dec
xor
xlat
mov
movsb
jb
mov
mov
or
dec
ret
fcomi
add
lock
dec
cmp
mov
leave
stc
dec
xchg
mov
jns
cmp
xchg
cli
cmp
movb
mov
mov
push
js
push
push
jb
push
and
push
fistpl
popf
inc
pop
lret
cltd
xchg
push
std
hlt
jle
add
mov
cltd
mov
sub
out
cmp
mov
inc
loop
or
inc
movsl
out
pop
pop
xor
adc
pop
flds
cmpsl
xchg
jp
lock
aad
test
nop
push
push
mov
add
mov
xchg
fdivrs
xor
stos
rcrl
pusha
fs
out
mov
cmp
insl
or
jno
dec
cwtl
adc
pop
xor
es
xor
adc
or
and
xchg
adc
push
sub
lods
pop
ja
sub
out
cmpsl
xchg
nop
xchg
push
adc
add
jge
nop
mov
push
push
mov
outsl
lahf
lcall
pop
aas
gs
mov
add
mov
sub
sti
addr16
iret
in
adc
aad
xor
xor
mov
xchg
mov
pusha
loop
jg
push
sbb
jmp
popf
sbb
out
mov
pop
mov
cmp
jmp
dec
test
mov
call
fists
cli
mov
arpl
push
mov
push
repz
ret
outsl
call
add
shll
insl
mov
cltd
cwtl
mov
add
call
loope
and
inc
popa
mov
fs
mov
dec
mov
mov
outsl
adc
jmp
xchg
adc
mov
or
pop
int
pop
fsubrl
pop
out
pop
in
adc
xchg
and
mov
jae
bound
stos
inc
int3
push
mov
stc
pop
jae
shl
arpl
mov
clc
pop
sub
insl
in
dec
fwait
xor
test
xchg
leave
cmp
stos
sub
lcall
mov
sbb
shrl
movsb
mov
push
add
addr16
xor
cmpsl
cmpsb
das
push
adc
popf
sbb
nop
dec
xchg
push
imul
scas
jns
sbb
sti
nop
fisubs
imul
aad
mov
or
enter
adcb
je
dec
loope
mov
push
and
js
pushf
adcl
imul
js
jecxz
dec
enter
call
cmp
cli
or
xchg
xchg
jb
mov
pop
xchg
stos
leave
adc
fildll
stos
lcall
ja
sub
fsubr
and
mov
jb
fdivs
aad
cs
mov
mov
cmp
jecxz
pop
iret
inc
pop
push
mov
jge
int3
cmp
mov
into
outsl
xor
cltd
or
pop
add
lds
rcrb
test
ljmp
sbb
and
lea
pop
int3
xchg
push
add
cli
inc
sbb
icebp
mov
es
mov
or
xchg
mov
mov
push
lea
inc
jo
push
mov
or
mov
xchg
jne
or
sbb
shll
clc
ret
and
mov
je
aam
sbb
imul
jmp
add
inc
and
sbb
popa
insl
mov
sbb
in
pushf
fmulp
insl
frstor
mov
mov
mov
cmp
in
lock
xor
pop
repnz
xchg
push
inc
dec
inc
out
fisttpll
cmp
push
mov
imul
jmp
mov
jo,pt
inc
adcl
orb
adc
sub
xchg
loopne
fcom
int3
inc
mov
test
inc
jmp
call
or
mov
adc
imul
div
test
or
in
inc
popf
xorl
mov
push
jb
testb
adc
dec
lock
adc
cltd
mov
ljmp
push
out
lds
xor
fildll
dec
dec
bound
in
outsl
or
mov
popf
fidivrl
jg
test
out
inc
push
aaa
rorl
adcl
pop
add
cmpsl
jge
loope
add
pop
pop
out
dec
or
or
not
push
sbb
cmp
pusha
pop
aas
pop
jnp
sub
lods
sti
icebp
adc
loop
aad
inc
lahf
sub
jb
in
cli
enter
cmpsl
sahf
leave
ret
div
pushf
push
inc
arpl
cmpsb
pusha
inc
mov
push
repnz
cmpsb
ret
aad
pop
call
pop
jmp
and
std
stos
ja
mov
out
add
push
and
and
sbb
lcall
inc
mov
incb
movsb
test
mov
dec
xchg
inc
push
sub
xorb
mov
xchg
movsb
lds
and
ljmp
scas
pop
or
rcrl
jne
fldt
push
mov
mov
inc
pop
sbb
orl
sub
cmp
xchg
stos
push
out
pop
xor
xchg
movsb
gs
cmp
adc
dec
cmpsl
in
mov
adc
pop
aas
and
adc
loope
mov
pop
aaa
push
xor
mov
int3
loop
inc
sarb
popf
mov
movsb
xchg
mov
mov
or
jne
jae
xchg
cmp
dec
fsubl
movsb
fucomip
cmp
or
push
and
lods
loopne
jb
and
sub
xor
mov
pop
push
dec
cmp
cmp
test
add
cld
adc
xchg
dec
dec
xor
xchg
daa
mov
mov
cmc
sub
movl
adc
add
xchg
xchg
xor
add
dec
repz
jns
push
sbb
notb
in
xchg
into
mov
dec
dec
mov
push
cmp
shlb
pop
mov
mov
outsl
mov
in
dec
or
sti
stos
aad
je
loopne
movsl
movsb
or
and
xor
and
pop
es
popf
mov
fldcw
jo
xchg
push
sarb
pop
pop
ja
in
lea
int
sbb
mov
xor
xchg
mov
out
mov
push
adc
ret
mov
dec
inc
out
dec
pop
xchg
add
cli
jle
cmp
aaa
pop
adc
jae
adc
or
sbb
sbb
popf
and
pop
clc
mov
in
mov
out
xlat
jo
mov
dec
or
clc
rclb
add
sbb
stos
insb
dec
sti
es
mov
and
iret
loop
cmp
cwtd
xchg
call
mov
or
inc
int3
jecxz
push
push
pop
fldt
lds
nop
push
mov
test
int3
int
sbb
mov
rclb
movsb
cmp
rcll
adc
mov
and
jbe
mov
inc
dec
iret
lahf
xchg
push
add
sarb
insb
cmp
lahf
outsl
lea
lds
fsincos
in
lea
sub
ret
mov
outsl
jae
loop
adc
xor
cwtl
mov
lcall
pushf
push
mov
lods
out
cmp
sti
dec
xchg
add
add
pop
add
pushf
call
add
cs
adc
shl
cld
dec
and
not
jno
mov
stos
in
jge
xchg
fcomps
dec
ret
cld
jecxz
adc
aam
mov
stos
inc
sbb
add
push
push
bound
push
or
insl
sbb
leave
fnsave
lods
sbb
cmp
jnp
pop
mov
jle
mov
sub
add
cmp
lea
mov
ret
jns
add
or
adc
dec
mov
popf
cmp
sbb
testl
and
mov
fwait
add
leave
add
sbb
sbbb
shrb
push
mov
insl
in
mov
mov
cmp
pop
and
inc
and
popf
mov
mov
sahf
xchg
gs
je
push
adc
push
sub
cltd
inc
insl
push
dec
push
xchg
test
clc
js
lock
mov
cmp
fstps
adc
addb
lea
es
leave
jne
cmp
dec
incb
mov
inc
lock
jmp
pop
ret
jns
jb
or
add
fidivs
rcll
push
cmp
in
or
pop
xchg
mov
pop
xchg
or
lret
andb
imul
xor
in
mov
and
jo
or
ds
fcompl
cmp
xchg
jns
sub
mov
mov
add
pop
mov
scas
cmp
or
mov
mov
ja
mov
popa
sahf
divl
std
mov
fnstenv
call
lahf
notb
add
mov
mov
stc
sub
sub
ja
mov
push
cmp
lcall
addr16
scas
add
inc
ja
out
aad
jb
fwait
cmpsb
cmpsb
add
push
or
rorb
xchg
mov
push
and
push
mov
mov
cmp
mov
fidivs
jmp
cmp
push
adc
dec
aam
nop
das
jns
xchg
lock
xchg
in
xlat
scas
pushf
imul
lcall
fdivrl
inc
loop
fildl
jp
or
lods
pop
sar
test
nop
cmp
ret
data16
mov
push
dec
mov
or
or
shll
mov
mov
adc
outsl
adc
mov
and
xor
int3
ljmp
push
cmpps
dec
add
pop
and
and
pop
cmp
adc
outsb
shrb
adc
adc
pop
pop
xchg
jmp
ret
ret
sarb
leave
negb
add
stos
xchg
jb
push
xchg
cmp
aad
pop
pop
stos
clc
inc
jbe
mov
out
jo
jp
xchg
fisttps
int
mov
test
push
fnstenvs
aas
test
cmpsl
popa
pop
xor
xchg
pop
pusha
ljmp
popa
xor
mov
inc
out
cs
jae
ljmp
ficoml
push
sub
sti
fists
jge
cmc
in
cwtl
les
sti
sbb
inc
or
fbld
xchg
es
cltd
cmp
arpl
add
push
cmp
jg
shlb
mov
pop
mov
fisubl
dec
fstpt
mov
popa
scas
push
or
dec
pop
sbb
push
fwait
adc
in
in
mov
jecxz
lahf
add
iret
add
sbb
fdivrl
push
jne
mov
push
or
out
pop
xchg
push
shlb
add
inc
repnz
out
clc
sub
mov
pop
hlt
imul
inc
add
mov
jno
lds
jmp
mov
lahf
xchg
cmp
push
mov
xchg
inc
sub
movsb
push
jb
lcall
mov
jae
sbb
je
sub
arpl
xchg
outsb
add
rcl
popa
jo
push
in
push
and
jmp
jae
ret
sti
into
arpl
xchg
cli
insl
testb
mov
jae
mov
pop
ds
mov
cltd
mov
call
xchg
shl
hlt
adc
push
cmp
ret
sahf
xor
sbb
xchg
filds
inc
adc
pop
mov
jmp
into
cmpsb
ss
or
rcrl
jno
andb
dec
cmpsb
add
adc
xchg
test
cltd
push
sbb
dec
mov
test
jecxz
push
rcrb
ss
or
mov
pop
dec
pop
je
mov
daa
int3
jo
repnz
dec
jne
ljmp
xchg
fildll
jae
mov
xor
imul
push
xor
test
arpl
mov
mov
aam
cmpsl
adc
push
inc
xchg
inc
fistpl
rclb
xchg
aad
and
aas
push
fucomip
ja
iret
popa
inc
pop
enter
leave
divb
bound
test
fs
pop
div
cmpl
fnstsw
add
roll
sub
aas
stos
repnz
jmp
xchg
aaa
push
fisubl
repnz
xchg
jo
ds
lock
mov
mov
frstor
mov
and
cmpsl
ss
mov
inc
mov
mov
in
adc
movsb
movsl
pop
lret
pop
xchg
fmull
cmpsb
out
pop
lahf
repnz
das
dec
xchg
mov
push
ret
lahf
outsb
sbb
inc
add
mov
icebp
jp
bound
jg
cwtl
pop
pop
dec
mov
inc
pop
mov
push
pop
jne
mov
pop
adc
ret
push
or
lea
subb
rcll
pop
sbb
dec
lea
and
mov
fsubrs
and
sub
pop
xchg
dec
inc
cwtl
jmp
pop
xor
adc
insl
imul
test
jns
cmp
sahf
addl
rorl
xor
std
nop
movsb
inc
pop
cltd
call
jge
push
push
std
ret
nop
xchg
stos
jnp
nop
mov
cmp
insb
mov
addl
int3
repz
call
inc
shlb
iret
in
sbb
and
lret
jecxz
and
pop
cmp
icebp
jne
mov
mov
enter
cli
dec
or
pop
dec
mov
pop
xchg
lods
arpl
ss
sbb
add
loope
arpl
jb
push
mov
inc
mov
test
in
add
aaa
sub
sbb
fs
lcall
cmp
lea
pop
iret
sub
adc
enter
subb
les
fnstsw
push
out
popf
movsl
pop
xor
sahf
mov
leave
jns
fwait
xor
in
cmp
adc
push
mov
pop
inc
jge
xchg
leave
fidivrs
add
jo
dec
mov
mov
pop
mov
jp
pop
gs
ljmp
sub
rorb
iret
mov
lds
jg
cli
mov
lcall
jp
adc
jno
mov
int3
push
in
xor
push
fldenv
ljmp
xchg
sbbl
adc
pop
popf
cmp
inc
pop
inc
or
or
push
fwait
cmc
stc
xchg
jnp
jmp
int
or
lret
jg
mov
rol
dec
push
inc
jae
ja
cmp
xor
nop
outsl
fisubs
outsb
pop
out
inc
insb
ds
imul
jnp
dec
lock
in
shrb
xor
mov
pop
inc
cmpsl
bound
ja
xchg
in
scas
out
fisttps
cmpsb
cmpsl
inc
push
or
sub
sbb
nop
fs
and
test
jbe
test
lock
lock
je
push
out
mov
ret
rcrl
out
sbb
mov
or
or
gs
mov
fisttps
xchg
clc
adc
mov
lahf
mov
daa
ret
jmp
sbbl
jle
jo
into
lcall
fbld
popa
or
je
scas
mov
jle
sbb
lahf
push
jecxz
jp
insl
cmp
xorl
iret
sbb
xor
shrl
push
lcall
or
andl
loope
lcall
jns
pop
cmp
les
testb
jae
lds
pop
sub
cmp
dec
push
pop
mov
shll
sub
es
pop
in
cmp
fsubr
insb
cltd
xchg
cmp
mov
and
xor
inc
xchg
leave
or
mov
ret
cs
out
aam
adc
loopne
xorl
ret
scas
lock
cmp
cld
cwtl
loopne
jmp
jmp
mov
lea
fstpl
cmp
inc
pop
jp
xor
std
test
aas
inc
or
insl
leave
in
dec
insb
or
stos
pop
or
push
mov
stos
cmp
and
xchg
sbb
pop
stos
dec
pop
dec
call
mov
std
mov
mov
bound
test
fs
or
pop
xchg
and
push
mov
pop
cmc
xchg
fstl
int
scas
jg
and
and
lea
dec
push
mov
imul
js
jecxz
lcall
fldcw
adc
jle
or
mov
xor
pop
out
mov
sub
enter
imul
gs
inc
fidivs
mov
pop
js
pushf
push
nop
dec
sti
aaa
popf
aad
mov
xor
add
jmp
mov
mov
cli
push
push
sub
aaa
cmp
sub
jecxz
mov
fwait
enter
xor
sti
mov
sar
xlat
pop
push
je
sbb
sarl
push
jmp
push
pop
int3
inc
sbb
out
inc
lock
ljmp
pusha
lcall
mov
push
js
mov
xor
pushf
and
jge
ljmp
add
fmul
adc
push
lods
push
cwtl
mov
cltd
dec
in
jle
mov
cltd
pop
imul
jnp
stos
add
pop
out
mov
test
sahf
push
and
cs
aad
push
pop
cmp
xchg
pop
mov
add
mov
inc
mov
out
inc
idivb
jo
lock
and
mov
dec
roll
mov
or
jp
cmpsl
jecxz
mov
pushf
mov
sbbb
cmp
cld
fcom
push
aas
fs
repnz
pop
mov
fabs
lret
sti
outsl
adc
sub
movsb
add
nop
les
shlb
addr16
call
push
inc
mov
mov
push
jmp
repnz
push
jl
pop
mov
je
test
sbb
mov
out
aam
lods
icebp
ret
pop
ja
scas
dec
inc
sahf
add
in
test
out
mov
mov
jecxz
lds
push
mov
mov
cli
jnp
and
sbb
push
cltd
xor
js
lds
or
sub
or
dec
les
mov
in
iret
cmp
mov
out
jg
cmpsb
sub
mov
xor
ret
pop
mov
jnp
fsubs
notb
cmp
ret
and
cwtl
xchg
add
imul
pop
mov
xor
js
in
pop
rorl
fists
int
xor
xor
lods
inc
pop
mov
mov
xchg
repnz
loop
or
aaa
arpl
gs
jle
fcoml
bound
cmp
inc
mov
push
jle
sub
push
icebp
push
mov
lcall
jmp
sti
mov
dec
icebp
das
mov
mov
pop
int3
add
gs
jb
dec
inc
lea
loope
inc
fs
mov
xchg
daa
ret
enter
gs
rcl
lret
xor
fistps
or
repz
inc
xchg
scas
fdivrl
inc
push
mov
xor
xor
nop
enter
push
sub
and
xor
ds
jmp
cmp
or
mov
add
xor
nop
or
cmp
sub
dec
mov
push
sub
lcall
ret
jae
enter
inc
lock
inc
scas
mov
push
arpl
icebp
dec
movsb
push
xchg
xchg
shl
sbb
dec
pop
or
in
rorb
repz
mov
outsl
lds
push
into
mov
orl
int3
mov
out
fucom
fyl2x
rolb
lcall
dec
aas
jnp
jnp
call
adc
cmc
sbb
dec
xchg
add
inc
push
inc
test
dec
cld
aad
ficoms
daa
test
ret
sub
icebp
and
xchg
fs
inc
int
xor
pop
pop
lret
movsl
movl
outsl
out
in
pop
sbb
aas
daa
test
add
mov
ret
and
pop
pop
xor
pop
call
popf
sub
js
lcall
aad
insl
cmpsl
addr16
les
jle
pop
xchg
orb
inc
mov
sbb
in
sub
mov
ficompl
lods
or
jbe
mov
fisubrl
ret
insb
pop
xor
or
lret
push
mov
and
jae
insb
mov
xor
fisttps
insb
or
mov
ret
shrb
pop
shll
ljmp
dec
sbb
ja
fwait
sub
imul
imul
rorb
mov
popf
scas
lods
and
mov
out
dec
into
adc
and
sbb
jno
and
popf
mov
add
jno
arpl
add
xor
jnp
sbb
cmpsl
mov
push
and
lret
pusha
loopne
add
nop
or
add
xlat
popa
icebp
mov
xchg
insb
pusha
ja
inc
mov
mov
ljmp
out
ljmp
orb
addl
mov
cltd
jl
cli
cmc
or
or
shrb
pop
rcrb
fstpl
add
std
fwait
leave
jmp
mov
cmp
xchg
dec
inc
mov
shlb
imul
sub
lds
outsl
push
imul
loop
pop
xor
adc
je
sub
pop
out
cld
xor
in
add
leave
and
jp
mov
xchg
arpl
pop
jp
imul
xacquire
add
shll
cmp
ds
scas
nop
adc
pop
mov
cmc
sub
mov
aas
outsb
arpl
mov
test
dec
daa
movsb
add
test
jg
and
add
adc
bound
cli
xchg
icebp
add
xchg
push
or
out
lea
mov
dec
arpl
stos
fistpll
sahf
mov
ret
xor
pop
mov
adc
mov
mov
ret
pop
jbe
push
jns
sub
adc
cmc
ljmp
push
sbb
jbe
fdivrp
sti
push
loope
int
mov
pushl
xor
scas
scas
es
pop
and
pop
subb
inc
jbe
das
in
test
jb
or
bts
hlt
cmp
test
rcrl
mov
divl
aas
dec
inc
xor
push
add
inc
sbb
sbb
add
in
fisttps
fcmove
movsb
lea
or
cmp
mov
clc
push
lcall
sbb
popf
push
xchg
sahf
xchg
mov
xchg
dec
pop
cmpsb
add
cmp
cmc
xchg
pop
mov
in
adc
js
leave
inc
or
stos
add
test
ljmp
aaa
out
xlat
es
push
adc
mov
dec
push
mov
cmpb
mov
sbb
pushf
add
arpl
xchg
stos
hlt
and
mov
xchg
popf
loopne
icebp
pop
xor
mov
enter
jl
jo
adcl
sub
pop
rorb
xchg
pop
cli
push
adc
lds
lods
and
in
shll
popf
jmp
and
and
push
jnp
xchg
nop
xchg
and
push
outsl
ficoms
add
rclb
rcll
int
mov
lds
fdivr
out
push
js
jg
push
mov
or
mov
stos
push
jp
les
adc
lea
dec
fcoms
gs
xchg
pushf
push
insb
mov
inc
adc
cli
int
popa
inc
jmp
jecxz
mov
mov
insl
sub
nop
and
scas
aaa
int
fwait
lcall
iret
or
inc
into
cwtl
loopne
sub
cmp
jns
ficoms
add
icebp
int
push
push
fdivr
fcoms
stos
lcall
sub
std
jno
gs
addr16
mov
xchg
andb
ja
aas
rorb
push
xchg
outsl
xchg
sub
jae
inc
outsl
fldenv
add
es
pop
pop
insl
mov
movsb
icebp
sub
ficompl
xchg
insb
out
je
std
mov
lock
mov
xchg
das
test
fadd
pop
mov
mov
inc
sub
dec
xorb
mov
pushf
xor
repz
push
push
add
adc
fsubl
test
jle
mov
and
mov
xchg
push
pop
iret
out
or
stos
xchg
rorl
or
adc
popa
sar
mov
xor
insb
fldt
loopne
sbb
in
ja
dec
sahf
push
int3
mov
push
test
adc
inc
sbb
push
and
push
in
insl
ja
loope
outsl
sbb
test
mov
scas
inc
jnp
imul
jae
lods
jp
aad
scas
cmp
dec
adc
es
mov
jnp
dec
cmc
loopne
push
mov
nop
sar
push
mov
push
mov
cld
inc
push
mov
sti
nop
sbb
and
lods
push
jo
loope
aaa
lret
mov
xor
adc
inc
daa
std
repz
xor
cmc
dec
add
rcrl
inc
jle
dec
icebp
mov
jns
fcom
lea
add
test
ret
add
aas
pop
ret
xorb
xchg
lahf
test
cltd
dec
sar
insb
insl
jmp
mov
pop
push
lret
cs
xchg
aas
dec
negb
push
hlt
stos
mov
xlat
out
mov
lret
adc
cltd
and
mov
jbe
dec
pop
mov
js
dec
cld
pop
popa
int
fldenv
xchg
add
pop
dec
arpl
xchg
push
adc
mov
cltd
and
jl
push
xor
lds
xlat
or
fstpt
push
dec
push
imul
ret
mov
jmp
sub
mov
insl
sbb
pop
adc
mov
jg
dec
in
cli
cmp
out
and
aas
mov
xchg
xor
es
test
add
mov
das
arpl
adc
pop
pop
pop
icebp
in
dec
and
sahf
sub
sub
xor
popf
and
sbb
pop
pop
addb
fists
cmpsb
sti
pop
mov
sbb
cli
orl
pop
pop
bound
mov
push
push
shl
flds
dec
pop
mov
sbb
dec
popf
cmp
or
cmp
xor
lret
push
nop
push
movl
mov
jbe
psubq
fnstenv
push
mov
mov
and
fsubrp
sahf
mov
or
in
dec
ficoms
imul
int3
incl
dec
mov
loope
jne
test
jg
mov
jnp
sbb
pop
bound
cmc
sbb
push
sbb
outsl
cmpsb
scas
in
and
xchg
jl
jmp
xor
mov
xchg
pop
or
xchg
mov
outsl
ret
andl
popa
ja
push
out
mov
repnz
nop
cwtl
or
fs
sti
sub
cmp
xor
push
int
xor
inc
pop
out
mov
imul
mov
and
adc
mov
scas
lcall
xor
movsl
in
std
mov
out
mov
pop
dec
sub
pop
mov
movsb
bound
add
sti
pop
ljmp
sbb
mov
push
testl
jne
cltd
xchg
jns
aas
pop
movsl
out
mov
or
cmp
aam
test
pop
into
stc
and
push
aaa
mov
cmp
add
roll
mov
add
lea
subb
xor
inc
mov
adc
mov
pop
in
loop
mov
xor
mov
xor
leave
jo
pusha
sarb
stc
cli
mov
jmp
inc
push
pop
fs
fisubs
pusha
pop
jl
jo
mov
sub
addr16
mov
dec
dec
ror
pop
add
lock
sbb
pusha
dec
repz
insb
adc
xchg
hlt
adc
leave
pop
pusha
clc
mulb
adc
cmp
flds
stos
outsb
repz
dec
aaa
icebp
inc
mov
loop
jle
das
into
jl
inc
inc
repnz
jnp
xor
aas
dec
add
dec
fistpll
sbb
test
leave
lock
mov
cmp
xchg
jmp
in
inc
inc
or
xchg
into
adc
or
cmpsl
cld
cmp
sub
adc
lock
or
sarb
lret
nop
fmuls
rcll
cmpsl
sbb
or
push
dec
sub
insl
test
ljmp
jecxz,pt
cmp
xchg
ret
ficompl
mov
push
cwtl
inc
xor
movsl
or
push
mov
cli
inc
fisubrl
mov
or
scas
mov
push
rorb
sbb
xchg
andl
icebp
lock
insb
pop
in
call
sub
notl
fdivl
test
cmp
les
xlat
and
mov
or
data16
jp
inc
fbstp
int3
cmpsb
xor
dec
mov
cmpsb
dec
outsl
mov
and
sbb
mov
cwtl
ja
push
in
xchg
jecxz
add
jecxz
mul
and
push
aam
mov
aaa
cwtl
loopne
push
adc
xchg
cmp
int
sbb
xchg
add
inc
inc
and
or
ret
jl
push
out
lret
mov
adc
jge
adc
pop
dec
jb
dec
sub
daa
push
sub
dec
mov
xor
clc
pop
ret
hlt
sbb
clc
imul
xor
or
icebp
jns
push
xchg
adc
fists
es
cmc
mov
mov
movsb
adc
lods
pop
fst
lret
push
in
out
movsl
mov
mov
add
vpshlb
lods
scas
stc
inc
xchg
insl
es
adc
js
mov
fldt
into
mov
cmp
bound
movsb
xor
dec
je
int3
sahf
sbb
inc
pop
mov
pop
mov
or
and
scas
pop
aas
adc
out
lods
mov
push
pop
lock
aam
jecxz
mov
pop
jns
pop
and
imul
inc
add
pop
shrl
xor
mov
push
int
dec
gs
pop
testb
and
cmp
addr16
and
in
dec
and
add
pop
xchg
fs
pop
xchg
mov
and
cmp
popa
aad
sarl
push
jle,pn
cli
dec
xor
pop
imul
cmp
sbb
outsl
inc
sti
into
xlat
cmpb
shlb
ds
fnstsw
fisttps
pop
icebp
shlb
pop
aad
jle
loope
arpl
leave
mov
push
or
adc
add
mov
hlt
lret
jp
pop
dec
rcr
cmc
and
arpl
pop
lock
push
mov
sub
js
adc
xor
sub
push
jmp
in
push
pushf
aaa
or
fnstcw
mov
sub
jb
aaa
iret
fnstcw
mov
push
js
and
lods
cmp
mov
push
or
popa
gs
mov
xor
stos
popa
pop
mov
mov
or
sub
out
inc
pusha
xor
xchg
pop
push
in
xchg
and
inc
push
xchg
inc
scas
imul
sbb
and
outsl
into
and
inc
lea
inc
jp
imull
xchg
xchg
mov
scas
insl
sbb
xor
and
xor
out
or
sahf
test
data16
mov
rclb
js
pop
push
mov
pusha
repnz
and
push
lods
and
and
jbe
arpl
jno
or
cmpsl
aam
sar
push
and
jo
push
or
call
jecxz
push
cmpsb
cmp
add
add
rol
pushf
push
arpl
lods
rcrl
sub
sub
ljmp
in
inc
dec
das
or
dec
push
rolb
mov
frstor
sbb
out
push
xchg
pop
mov
dec
push
lcallw
pop
in
mov
cltd
out
adc
pop
lds
aam
or
inc
shlb
mov
jns
jmp
ficomps
adc
inc
jno
pop
dec
cmp
pop
xchg
jbe
cli
xor
mov
outsb
add
ja
aaa
rcr
mov
lahf
adc
or
inc
lds
jae
jle
mov
scas
jmp
push
andl
push
mov
or
xchg
push
mov
xchg
pop
pushf
mov
leave
xor
ror
dec
lds
mov
shl
add
lods
mov
lcall
inc
je
sub
les
fistpl
sub
or
sbb
jns
dec
jmp
gs
jno
mov
pop
aas
add
pop
lcall
movsl
cwtl
or
jmp
adc
jmp
push
leave
push
imul
repz
imul
pop
mov
dec
lret
stc
push
dec
int3
lretw
mov
stc
fs
data16
mov
and
xchg
stc
sbb
filds
add
loope
ficoms
push
mov
mov
mov
lds
addb
push
sbb
or
test
in
insb
loope
iret
sub
or
xchg
xchg
jne
mov
leave
shrl
lods
jle
mov
xlat
loope
mov
call
sbb
ret
cmp
xor
and
or
xor
clc
jb
sub
mulb
sbb
dec
and
mov
aas
fwait
ja
and
das
or
push
sbb
pushf
dec
int3
mov
xchg
rorb
add
lods
mov
mov
in
js
pop
test
jl
das
mov
sahf
inc
push
pop
mov
jl
xor
push
pop
jmp
repnz
fadds
pop
xchg
outsb
in
add
dec
push
add
jno
js
js
sahf
fiaddl
in
lods
xor
outsb
fists
mov
push
push
ss
xchg
imul
push
cmovne
inc
adc
or
jg
jp
test
and
mov
push
xchg
xor
sti
mov
push
mov
pop
leave
and
mov
es
repnz
sub
adc
in
or
add
jb
jae
rorl
loopne
call
iret
addr16
outsl
test
add
imul
inc
jnp
lods
lret
dec
scas
ret
in
fistpl
jge
incb
sub
push
xchg
sarl
scas
dec
xor
cwtl
test
iret
and
pop
add
popa
in
cmp
push
loopne
pop
xor
movsb
jae
daa
sub
stos
bound
dec
loopne
jns
lahf
fidivs
testl
jne
jnp
pop
xlat
iret
pusha
stos
add
iret
pop
mov
mov
out
clc
lahf
test
mov
sbb
mov
mov
add
add
pop
stos
shll
jne
jl
aas
sti
pop
shl
test
mov
ljmp
push
shll
test
gs
js
xchg
inc
jb
and
mov
cmp
pop
aas
cmp
cmp
jne
pop
sbb
lret
cmp
sbb
aas
xor
inc
jns
fsubs
sbb
cmpsb
lods
std
inc
movsb
mov
pop
scas
cmpsl
mov
xchg
mov
loope
pop
push
std
adc
sbb
ret
jno
sarl
jne
popa
lds
aaa
jl
arpl
cmp
test
or
push
adc
arpl
jbe
stos
inc
adc
pop
jb
sahf
push
imul
je
xchg
sbb
stc
mov
hlt
mov
adc
pop
in
inc
adc
stos
test
or
addl
nop
inc
imul
cwtl
sbbl
scas
mov
movsl
lds
jns
mov
and
bound
into
pop
iret
fwait
and
stos
cltd
sbbl
push
sbbb
push
jmp
or
sbb
pop
inc
mov
cmp
mov
jl
pop
mulb
lahf
lock
mov
pop
fs
mov
jb
out
in
bound
rclb
aas
mov
bnd
cmp
les
js
mov
movsl
and
ret
jbe
mov
les
push
push
int3
arpl
mov
cmp
add
xchg
adc
es
loopnew
or
ss
or
pop
loopne
mov
push
aas
push
pop
dec
sbb
inc
push
aam
lcall
xchg
pop
lahf
in
sti
dec
scas
add
sbb
or
call
mov
mov
mov
inc
and
cmp
or
outsb
and
orl
cwtl
add
xchg
mov
aas
nop
fidivs
xchg
pop
sub
sub
repz
adc
xor
cs
fstps
mov
push
push
push
iret
jge
insb
inc
hlt
popa
sarb
adc
stc
clc
jae
lods
inc
cmovae
sub
aaa
out
dec
lods
loope
decb
dec
dec
loopne
stos
popa
dec
gs
mov
and
mov
leave
inc
and
adc
jmp
mov
jns
mov
mov
and
ret
add
and
test
jb
dec
adc
les
enter
cld
cltd
insb
mov
mov
fnsave
adc
xchg
iret
push
and
inc
in
fbstp
and
xor
push
mov
pop
pop
daa
ljmp
or
add
pop
arpl
mov
jne
sbb
add
cli
dec
je
push
push
ss
cli
adc
cmpsb
arpl
cmp
out
jmp
sbb
lret
pop
scas
mov
xchg
and
shrl
out
out
decl
cmp
popa
enter
pop
push
rorb
popf
add
ret
sbb
xchg
lret
push
scas
ss
out
repz
mov
movsb
or
cmp
lock
jae
jno
inc
sub
mov
jmp
mov
mov
or
es
out
add
add
push
sbb
shrb
add
clc
adc
pop
incb
ja
mov
mov
pop
orb
cbtw
adc
ret
dec
testl
lahf
xchg
mov
mov
xor
ret
mov
cmp
inc
shrl
imul
cli
xorb
fldt
ljmp
push
mov
punpckhdq
loope
aad
dec
or
xchg
push
mov
loopne
inc
cmp
sub
mov
jb
test
cli
mov
adc
dec
clc
push
add
pushf
mov
fcomp
test
ds
cld
popa
shr
stos
pop
mov
flds
cmpsb
jge
dec
push
rorl
into
test
filds
jbe
hlt
inc
push
movsb
mov
fs
imull
js
dec
popa
jne
cli
daa
bound
xchg
jno
int3
aaa
or
xchg
xchg
les
xor
sbb
test
jo
out
scas
push
push
pop
mov
outsb
adc
icebp
push
mov
push
lds
icebp
or
mov
xchg
lcall
ret
jo
jne
repz
mov
fcmovnbe
out
dec
mov
in
ljmp
filds
aaa
mov
ds
pop
or
push
mov
push
push
mov
push
and
pusha
shlb
test
or
sub
push
mov
call
cltd
xchg
xlat
cmp
xlat
jo
jmp
or
and
in
adc
pop
repz
outsl
push
push
dec
mov
rclb
hlt
xchg
test
mov
push
leave
clc
shrb
loope
cmc
xchg
push
mov
jle
mov
push
pop
mov
xchg
vpavgb
mov
sbb
sahf
xchg
mov
lds
pop
jmp
hlt
jno
jbe
fbld
lods
push
mov
andb
pushf
fnsave
movsb
ret
push
repnz
ds
sbb
js
cmpb
cltd
hlt
xchg
or
pop
push
adc
fs
jb
inc
sub
sbb
dec
int3
flds
dec
repz
jl
enter
addr16
orb
xorb
push
inc
or
movsb
icebp
and
pop
add
cmpsb
stc
loope
lea
loop
ret
push
loopne
imul
mov
pop
xchg
iret
nop
mov
jbe
add
add
pop
loope
adc
xchg
push
pop
ds
sbb
jge
imul
adc
pop
scas
lahf
mov
test
mov
inc
add
ds
mov
jmp
imul
jge
xchg
cs
fcmovb
mov
outsl
mov
or
cmp
jne
shl
daa
xchg
sub
dec
mov
out
mov
cwtl
adc
lret
imul
sbb
jp
out
pop
leave
enter
dec
ljmp
lret
sub
repz
jns
xor
mov
push
push
sbb
int
or
aas
cmc
cmpsb
push
jbe
test
data16
xchg
jne
xor
pop
or
stos
sub
lret
pop
out
arpl
cmp
sti
bnd
out
add
mov
ss
nop
lcall
xor
cmp
cli
jl
into
xor
div
ds
mov
jecxz
bound
stos
bts
xchg
movaps
or
fildl
sbb
sbb
das
sbb
cwtl
or
loope
xchg
adc
xor
dec
mov
rolb
popf
sbb
pop
dec
enter
inc
mov
dec
push
jne,pt
xchg
mov
cwtl
js
fldenv
lds
fcmovnbe
inc
and
add
loopne
les
add
xchg
lahf
fists
pop
enter
cmp
jbe
add
push
jg
lea
je
out
pop
aam
mov
popf
sbb
icebp
sub
mov
cmp
push
mov
sub
popa
in
insb
jl
mov
pop
aad
jg
cs
aad
pop
add
sbb
pop
sbb
cmp
js
push
push
push
shl
clc
adc
popa
cmpsl
adc
imul
js
andl
loope
push
stos
dec
push
xchg
sbb
mov
cmpsb
clc
adc
xchg
adc
xor
test
int3
xor
cmp
insl
aad
inc
dec
adc
adc
adc
shr
iret
ja
nop
pop
or
inc
add
mov
lods
sub
dec
icebp
push
iret
add
mov
pop
jg
sub
mov
int
test
icebp
jge
jne
cmp
sbb
add
clc
in
pop
pop
lds
mov
push
adc
and
or
andl
and
test
stos
adc
xchg
pusha
adc
xchg
pop
leave
das
es
cwtl
stos
cwtl
lock
push
aam
sub
mov
push
mov
or
or
or
pop
adc
xor
aad
push
movsb
mov
int
dec
loopne
xchg
xor
jg
out
add
cmc
pop
fmulp
jns
cmovo
lods
ucomiss
aam
sub
dec
test
xorb
pop
adcb
cmp
hlt
lcall
int
fsub
movsl
cmpsl
xchg
fdivrs
dec
fists
xor
cli
movsb
movsl
fcmovnb
lock
bound
or
jo
out
mov
sahf
mov
mov
cmp
lcall
add
mov
fsubl
add
adc
xor
inc
lock
dec
sbb
sub
icebp
and
mov
cli
sub
es
fnstenv
xor
enter
xor
std
movsb
clc
cmpsb
pop
je
add
xchg
je
jl
mov
xchg
pushf
push
push
js
lods
fs
push
jno
push
cmp
ja
pop
sbb
fnstenv
xor
xchg
cltd
pop
adc
mov
mov
xorl
dec
dec
cmp
cmc
mov
movsb
pop
or
mov
mov
pop
xor
push
subl
icebp
mov
mov
ret
mov
xlat
ret
hlt
clc
shl
adc
repz
mov
cmpsl
and
mov
lahf
mov
sbb
sbb
repz
sbb
mov
or
or
adc
adc
movsl
dec
ret
sub
mov
push
outsl
pop
adc
gs
in
fmull
add
xor
jl
out
stc
test
xchg
aaa
call
test
adc
fxsave
mov
leave
ret
dec
insl
std
adc
or
mov
lcall
popa
neg
xchg
in
ss
lock
cmp
in
jmp
add
cmp
cmp
mov
cmp
add
loopne
cmc
notb
xchg
data16
pop
xor
jp
cmpb
adc
inc
dec
insl
push
rcrb
mov
mov
pop
or
call
xchg
pop
jmp
inc
repz
leave
xchg
push
mov
mov
inc
insb
aam
insb
mov
mov
and
jl
in
mov
fadds
int
xor
lret
push
push
add
add
add
cltd
jnp
sub
xchg
xchg
mov
or
fdivl
stos
and
hlt
mov
lret
movsl
insb
mov
sub
loope
and
sub
lods
mov
scas
loopne
dec
adc
mov
add
inc
popl
cmp
xchg
aam
stc
insl
mov
xchg
and
pop
pop
ret
jns
sbb
and
xchg
adc
cmpsl
cmp
fwait
adc
into
sbb
ja
lea
jg
add
test
hlt
fs
popf
popa
loop
sbb
add
inc
and
sub
iret
mov
mov
popa
pop
xchg
cmp
es
add
xchg
xor
inc
clc
push
fstl
lds
inc
test
scas
jle
aaa
mov
or
sub
lea
mov
and
les
inc
cmc
in
ljmp
fimull
mov
lea
ret
les
sbb
fs
xor
lods
xchg
loop
jbe
daa
pusha
jmp
fbld
ret
sub
ror
test
ja
jns
dec
dec
and
shl
jl
stc
push
test
mov
les
sub
out
and
xor
push
insb
add
xchg
jno
gs
pusha
out
fdivs
sub
repz
sbb
pop
mov
aad
pop
test
cli
inc
add
fistpl
clts
add
imul
or
loopne
cmp
and
out
xor
imul
inc
mov
sbb
test
js
jp
add
sub
sub
sarb
popf
xchg
xor
lods
leave
push
outsb
dec
inc
sbbl
dec
imul
dec
and
cmp
jg
jp
out
addr16
frstpm(287
sarl
jns
push
xchg
mov
sbb
push
fwait
dec
pop
rclb
cli
sahf
inc
arpl
inc
mov
loopne
adc
mov
lea
das
pop
jmp
fidivrs
cld
outsl
clc
sahf
rcl
leave
push
clc
in
mov
popaw
mov
mov
or
rcll
mov
stos
sbb
and
stos
pop
cmp
cmp
popf
fidivrl
lods
jne
fisubrs
into
pop
out
add
pushf
dec
stos
mov
push
imul
loopne
and
sbb
xchg
and
cmc
sbb
pop
mov
xchg
out
insl
jae
iret
mov
in
push
sarb
outsb
add
cmc
jg
xchg
xchg
sub
push
pop
cmpb
addb
jmp
jp
test
sbb
cmc
das
jo
jge
rcll
mov
xor
mov
ja
ret
push
inc
pop
mov
push
rolb
ss
adc
jb
insb
or
outsb
addr16
ss
mov
js
repnz
loope
adc
xchg
pop
leave
xor
arpl
or
in
push
mov
lods
into
enter
call
push
sbb
in
inc
mov
and
adc
mov
out
xor
icebp
and
mov
push
cmp
adcb
fidivrs
xchg
jo
add
mov
fs
fstps
inc
pop
jp
daa
ja
sub
add
loope
nop
aaa
xchg
xor
add
addr16
cmp
insl
icebp
pop
mov
aaa
fsubrs
imul
iret
ja
adc
pop
pop
sub
aas
ret
inc
push
sbb
hlt
pop
add
popf
jmp
pop
sbb
sbb
sub
arpl
jb
cmp
push
mov
and
insb
imul
ljmp
lea
in
xchg
jo
pusha
bound
rclb
aad
add
sub
iret
push
jbe
inc
jae
add
mov
mov
aam
xorl
mov
sbb
mov
xor
jle
repz
popl
cmp
jb
xchg
inc
outsb
aad
movsl
jae
repnz
jp
xor
jno
ja
pop
repz
popf
ss
es
xchg
cltd
jnp
mov
mov
jecxz
mov
insl
adc
adc
rcl
jno
xchg
mov
movsb
push
dec
repnz
xchg
xor
sahf
sub
lret
sarb
dec
add
ljmp
jne
pushf
xchg
cmc
fstps
add
sub
or
shlb
xor
dec
xchg
mov
jbe
mov
sub
cltd
cwtl
ret
pop
sbb
push
cs
loope
sub
popl
shl
jno
xchg
aad
or
lods
sub
push
cmc
popa
clc
out
addb
mov
es
sbb
test
mov
fs
xor
cld
adc
mov
xor
into
outsl
hlt
sub
divb
dec
mov
jg
int
or
out
mov
repz
mov
sub
rep
inc
push
repz
out
cmp
out
icebp
push
repz
insl
dec
cmp
rcrl
bound
xlat
fstl
mov
dec
mov
aas
fistl
shl
jl
call
inc
fldenv
dec
mov
mov
pop
std
sti
mov
pop
in
cmp
jnp
inc
ficompl
dec
mov
aaa
jnp
into
push
imul
cmpsl
push
std
in
mov
outsb
inc
shrl
mov
push
pop
test
xchg
aas
push
xchg
inc
or
mov
cmp
adc
jle
xor
mov
jnp
sbb
fwait
mov
xchg
mov
roll
hlt
sti
or
jmp
add
pop
stos
inc
ds
adc
lods
jmp
adc
inc
cmp
scas
lret
jne
iret
sarl
sbb
std
sub
addb
jnp
pop
enter
adc
xor
stc
jns
in
lret
ret
loope
cli
adc
addl
mov
xlat
push
pop
in
dec
cmp
lods
sti
add
lock
icebp
outsb
pop
sub
mov
add
pop
aaa
daa
jp
sbb
sbb
inc
add
push
test
hlt
inc
add
test
mov
pop
pop
adc
icebp
pop
scas
adc
and
in
test
sbb
and
pop
lods
sub
push
je
and
inc
dec
sbb
fcomi
pop
out
bound
pop
fldenv
in
push
pushf
mov
xchg
insl
jge
dec
std
mov
pop
in
jge
movsb
sub
push
clc
ja
mov
stos
adcl
cs
cmp
insl
data16
data16
jl
leave
mov
sahf
cmp
or
outsb
ret
jmp
idiv
test
add
mov
xchg
and
lcall
ret
xor
movsb
add
insl
aam
cmp
or
aam
sub
jge
scas
je
sub
scas
inc
mov
xchg
xchg
pop
cltd
in
icebp
cmp
dec
popf
fsubrs
pop
cs
cmp
mov
cld
ret
jp
lods
js
push
incb
jns
push
call
xchg
and
cmp
pop
mov
pop
sub
imul
mov
in
xor
addr16
nop
inc
loopne
inc
dec
lods
js
in
cmp
testl
xchg
int
pop
test
add
test
xchg
cmp
add
cmpsl
dec
lods
out
bound
mov
push
fistpll
into
sub
sub
sub
push
pop
inc
mov
orl
outsb
dec
dec
adc
mov
jmp
inc
add
sub
mov
orb
jbe
lcall
gs
jae
mov
xchg
xchg
pusha
inc
push
and
je
mov
ss
lods
fisttps
rcll
out
dec
or
cmp
mov
mov
pop
enter
xchg
inc
adc
jge
inc
icebp
test
nop
mov
aad
adc
cld
loopne
loope
shrb
pop
ret
inc
mov
ljmp
add
mov
cmp
mov
shlb
cmpsl
xchg
push
jns
pop
pop
loopne
addr16
dec
and
cmp
cmpsl
sub
negl
mov
push
rcr
repz
test
loope
lcall
scas
mov
sti
adc
shll
test
xchg
and
out
enter
shrl
inc
xorb
imul
mov
insl
pop
data16
stos
arpl
inc
or
mov
dec
cmpsb
jl
mov
mov
icebp
hlt
movsl
xchg
faddl
inc
rcr
pusha
mov
sub
daa
data16
sub
test
push
fsubl
jmp
adc
shlb
into
xor
and
sub
adc
mov
repz
out
in
sub
icebp
push
cld
dec
mov
fucomp
dec
jb
and
adc
pop
push
dec
and
xchg
push
mov
inc
adc
lods
ficoml
sub
aam
pop
lds
or
xchg
cli
ss
popf
xor
push
ud1
lock
mov
add
fs
loope
icebp
stc
jo
lods
sbb
sbb
mov
mov
hlt
jbe
xchg
sti
or
leave
xchg
xor
push
ljmp
adc
pop
loope
jb
mov
sbb
xor
sbb
fwait
add
xchg
hlt
fs
insl
and
and
xchg
loopne
shll
movsb
insb
test
dec
sub
mov
into
mov
movsb
mov
adc
es
cwtl
je
outsb
cmc
cltd
cmpb
pop
subl
insl
mov
xchg
push
mov
cmp
mov
cmp
push
mov
inc
aas
add
int
popf
movsl
inc
jge
fistl
fldenv
nop
xor
push
mov
js
sbb
rcrl
imul
dec
inc
outsl
daa
and
ret
out
cld
push
std
cld
push
scas
cwtl
divl
in
and
add
loopne
jne
add
push
and
out
sahf
or
pushf
scas
cli
pusha
orb
roll
fisubrl
mov
xchg
cwtl
movsb
mov
idivb
pop
shll
nop
insl
inc
mov
ret
test
scas
mov
pop
and
lods
incb
pop
jb
pop
enter
testb
push
add
pushf
dec
lods
fwait
es
push
sub
popa
hlt
mov
call
mov
lds
lods
movsl
out
adc
push
into
sub
std
push
mov
mov
mov
push
lret
loop
xchg
mov
outsl
call
jecxz
xlat
xor
xlat
cltd
jns
dec
lock
push
pop
jno
push
mov
sub
fldcw
loopne
shr
in
mov
push
push
aas
mov
das
mov
or
inc
pop
push
jb
inc
icebp
stos
pop
mov
mov
jge
push
jp
adc
gs
pop
mov
cmc
popa
jecxz
loop
push
or
fwait
outsb
or
push
int3
mov
xlat
stos
shl
out
jmp
mov
fcmovnu
sbb
push
icebp
andl
icebp
arpl
add
jge
mov
stc
movsb
dec
out
sahf
lret
sub
jg
mov
es
jb
lock
mov
call
inc
adc
adc
xor
add
movsb
ds
arpl
addr16
dec
rol
jno
lcall
stos
mov
jnp
push
pop
jne
add
pop
sti
loop
int3
es
mov
outsb
cld
pusha
rcll
jo
jne
repz
pop
xchg
daa
subl
aaa
shrb
leave
call
and
mov
lahf
xchg
in
or
lods
out
aaa
xchg
and
rcrb
and
mov
stc
out
dec
outsb
pushf
jo
xlat
cwtl
jne,pt
lahf
lods
jnp
aam
pop
xchg
push
cli
ja
dec
xchg
test
fldcw
out
pusha
call
out
dec
mov
mov
cmp
cmp
push
rcl
fcoml
xchg
stc
movd
mov
jge
inc
pusha
sarl
jae
outsb
mov
aam
add
rcr
mov
xor
int3
mov
add
insb
cld
and
jbe
sbb
jmp
ror
mov
les
test
in
jl
sub
fmuls
xchg
int3
sub
mov
rcrb
pop
mov
and
mov
mov
adc
fsubrp
xor
ficoml
shlb
ret
and
stos
jbe
ja
jnp
push
lock
sub
inc
mov
jecxz
add
into
dec
stos
outsb
mov
inc
jae
mov
adc
xor
sbb
mov
mov
mov
pop
xchg
subb
mov
mov
mov
dec
mov
jnp
outsb
push
loope
popf
inc
movsl
std
sub
leave
pop
add
ss
outsl
or
adc
es
scas
push
push
movsb
les
jo
inc
and
jne
mov
and
iret
popa
add
mov
mull
mov
or
jnp
pop
sahf
icebp
pop
adc
add
int
in
loop
call
int3
mov
jno
push
psrlq
pop
cmp
and
stos
xchg
inc
mov
dec
push
pusha
in
into
cvtpi2ps
in
and
xor
mov
lea
or
out
inc
adc
push
pop
fsubl
mov
fsub
mov
cmpsl
add
xchg
mov
es
rorl
adc
cmp
fmull
inc
adc
dec
xchg
and
je
repz
sub
loopne
lret
adc
xchg
cmp
clc
mov
add
mov
pop
dec
rclb
xor
mov
jg
lret
out
enter
or
inc
xchg
mov
xchg
cmp
insb
mull
les
pop
cs
and
iret
addr16
and
jmp
cmp
jge
sub
dec
and
outsl
mov
push
arpl
adc
es
sahf
sub
mov
or
daa
pop
dec
pop
gs
lods
cmp
loopne
mov
addr16
add
jl
cmpsb
cmpsl
je
inc
and
lret
pushf
mov
lret
jg
or
push
xchg
loope
std
mov
cmc
pop
andl
cmp
lds
cmpsl
sbb
xor
repnz
fwait
mov
cmpsb
jge
adc
xchg
and
sti
popf
dec
add
js
mov
lock
je
sbb
femms
jecxz
roll
pusha
pop
out
imul
ja
add
movsb
sbb
mov
fiaddl
subl
mov
sub
xor
inc
sbb
mov
insb
sbb
movsb
in
mov
std
push
stc
cwtl
in
jl
push
mov
pop
mov
and
and
jmp
adc
xchg
pop
jle
in
xchg
sub
push
push
insl
dec
push
rcr
and
ja
push
and
jg
mov
testb
movsl
jl
dec
mull
test
cld
leave
cmpsl
xchg
pop
in
xchg
cmp
movsb
pop
cli
jne
fcomip
sub
cmpsb
fistps
mov
sbb
cmpl
jge
dec
push
jle
push
cmp
subl
mov
ss
xorl
loopne
lea
hlt
cs
call
jb
lea
adc
add
lock
cmp
adc
add
pop
pop
adcl
loop
jl
push
lahf
shlb
cli
add
xchg
fiaddl
xor
pop
repz
hlt
insl
xchg
push
out
shr
icebp
lret
repnz
jns
pop
cltd
lret
pop
mov
test
imulb
dec
scas
leave
inc
adc
jo
jmp
lahf
imul
test
and
ret
jecxz
or
cli
fimuls
inc
jb
or
std
xchg
sarb
loope
lods
lret
aaa
ljmp
test
insb
sbb
negb
mov
mov
sbbb
cmp
xor
pop
in
paddd
int
mov
or
dec
mov
mov
sahf
fbld
insl
adc
cwtl
in
das
adcl
mov
and
jge
add
imul
scas
xchg
arpl
inc
out
lcall
out
inc
jmp
hlt
cmp
mov
pushl
movsb
add
arpl
xchg
xchg
xor
jle
test
xchg
inc
xchg
mov
imul
mov
les
test
rclb
inc
add
ljmp
dec
bound
fs
inc
dec
bound
xchg
push
shlb
xor
fnstsw
int3
xor
out
jb
mov
lcall
push
or
inc
pusha
mov
in
inc
xor
rolb
sub
aas
dec
out
mov
dec
fisttpl
mov
xchg
scas
stos
push
movsl
sub
xchg
mov
and
lcall
fstpl
dec
xchg
adc
addr16
cwtl
repnz
negb
push
sbb
and
sbbb
lret
xchg
xor
mov
inc
add
xor
loopne
adc
ja
enter
into
cmpsb
add
xchg
mov
push
dec
add
push
and
adc
and
lret
xchg
cwtl
and
sahf
adc
cmpsb
and
into
push
sbb
sahf
push
inc
incl
out
fists
xor
fwait
or
inc
and
pop
jo
enter
pop
daa
pop
add
imull
push
dec
push
lret
ja
aad
dec
daa
xchg
mov
lret
or
lahf
pop
out
pop
cld
test
xchg
add
or
pop
mov
sar
int
fs
je
ja
mov
push
arpl
cmp
cld
repnz
outsl
mov
subl
push
jbe
mov
and
sub
ljmp
stos
sub
lcall
mov
cmp
adc
adc
jmp
jle
dec
sbb
push
aad
mov
repz
mov
cmp
jge
push
movsb
mov
ljmp
outsb
jp
jle
out
push
mov
adcb
sbb
rorb
push
sbb
jae
arpl
mov
xchg
jmp
cltd
cmp
dec
push
adc
xchg
jno
addb
lods
xchg
and
adc
mov
imul
repz
dec
or
pushf
push
mov
fldcw
popf
lret
sub
sub
jno
inc
imulb
ds
adc
popa
lock
mov
xchg
sub
into
adc
mov
mov
jbe
icebp
jbe
repnz
push
push
push
add
test
mov
xlat
in
and
push
xchg
int
push
movsl
and
jge
movsl
rcll
fdivr
gs
icebp
movsl
les
mov
xchg
jl
arpl
popf
popa
and
adc
test
xchg
pop
stos
xchg
push
lret
dec
dec
not
jp
adc
inc
dec
lods
mov
ret
add
nop
mov
out
push
add
jmp
or
test
mov
add
xchg
arpl
mov
stc
cmp
fdivrs
ret
icebp
in
shr
mov
jp
sbb
jmp
int3
xchg
pop
adc
es
hlt
cmp
xlat
imul
dec
jl
jle
pop
les
mov
imul
ljmp
mov
lods
sub
jne
aaa
cmpsb
adc
add
sbb
std
sub
in
add
das
int
add
out
cmp
ljmp
in
mov
push
cltd
mov
cmpsb
sbbb
adc
push
insl
sbb
lahf
add
insb
mov
iret
and
dec
lods
cwtl
mov
call
imul
fdivrs
mov
in
call
jl
push
mov
cmp
cmp
cmpsb
clc
or
adc
lock
jecxz
push
cld
xchg
jg
or
enter
stc
jae
sbb
add
cwtl
and
adc
iret
frstpm(287
inc
mov
add
fnstenv
xchg
divl
dec
mov
subb
ja
mov
or
add
inc
mov
sbb
dec
int3
dec
jbe
lods
stc
pop
and
mov
punpckhdq
jns
xor
fildll
sbb
mov
rorb
dec
fbld
aad
mov
scas
in
mov
adc
jecxz
fisttpll
out
stc
mov
mov
and
pop
dec
jp
inc
repz
adc
sti
arpl
cltd
fldt
or
add
fs
jecxz
ljmp
cmp
out
adc
mov
sub
lahf
xchg
cs
stos
lock
call
lret
das
push
insb
inc
sub
lcall
lods
mov
mov
adc
sarl
pop
subl
xchg
in
cmp
rolb
pop
mov
xor
inc
xlat
aam
add
test
insb
sub
cmc
mov
jne
call
int3
or
xchg
mov
xlat
jb
inc
fs
lods
inc
sbb
jne
in
cwtl
sbb
add
xchg
movsl
pop
inc
ss
orb
lcall
and
mov
ffreep
or
mov
xor
adc
aad
cmp
ja
in
pusha
subl
pop
lock
push
adc
lds
inc
mov
mov
cmpb
fisubs
das
jge
jp
push
out
lock
pop
xor
popf
mov
mov
dec
ds
mov
inc
xchg
push
push
mov
test
xor
fistpll
std
mov
push
or
lds
cltd
xor
mov
dec
aaa
lret
xchg
xchg
test
in
les
ss
xchg
cld
in
nop
pop
rcr
scas
arpl
lret
cmp
cmp
push
mov
movsb
aad
in
pusha
mov
dec
lods
pop
add
lock
mov
xchg
idivb
test
pop
test
aaa
ljmp
add
cmc
adc
cwtl
cwtl
inc
fistl
inc
sbb
mov
mov
and
mov
int
mov
insl
bound
sub
jp
mov
dec
adc
or
cld
mov
rorl
cmp
inc
jmp
cli
mov
fstpl
sahf
mov
addr16
inc
xchg
dec
cltd
jg
and
cmpsb
xor
or
adc
or
mov
or
xchg
rcrb
pop
or
test
lahf
dec
subb
mov
pop
cmc
pop
aam
add
fs
test
dec
test
jg
pop
and
in
hlt
jbe
adc
popa
test
out
test
stos
sub
mov
inc
in
or
pop
xchg
mov
test
das
push
cmp
adc
or
push
popf
gs
in
mov
add
sub
xchg
insb
popf
adc
mov
lcall
adc
cmp
pop
insb
adc
xor
add
repz
jnp
pop
jbe
lahf
xchg
xor
cld
sbb
mov
pop
mov
mov
jo
stc
imul
and
fwait
gs
mov
test
push
push
das
jmp
fstl
or
int
or
sahf
add
mov
add
arpl
jg
bound
fwait
pop
mov
mov
add
push
sbb
dec
mov
int3
mov
enter
cwtl
out
xor
add
arpl
mov
sbb
mov
lods
jl
fcmovnu
mov
mulb
jae
and
fcom
jg
xor
cli
mov
xchg
testb
mov
xchg
xchg
in
mov
adc
scas
jb
pop
icebp
xor
dec
out
stc
fstpl
aaa
addr16
sub
inc
movsb
push
loop
mov
and
enter
outsb
dec
pop
push
int
hlt
pop
add
sbb
cmc
cli
in
and
out
hlt
insl
mov
adc
loope
mov
mov
outsl
sahf
addb
js
icebp
stc
fidivrl
testb
test
push
adc
popa
jnp
loopne
in
jns
push
ret
sub
loopne
ret
call
xlat
mov
inc
mov
xor
in
or
add
fs
repz
pop
pop
in
daa
mov
dec
pop
aam
xchg
xchg
das
scas
shrb
xor
mov
jmp
mov
mov
pop
repnz
mov
fimull
aad
es
repnz
and
jecxz
xchg
call
cs
push
add
stos
cmpsb
jmp
sbb
jle
jo
into
pusha
aas
and
stos
pop
arpl
sub
sbb
mov
aad
test
es
insb
add
jbe
inc
fwait
adc
sbb
inc
jecxz
rorl
push
fisttpl
xor
mov
push
outsb
repz
cmp
push
jo
sbb
mov
mov
pop
in
pop
or
shl
push
pop
inc
adc
cld
jnp
and
nop
mov
mov
jb
mov
aad
pop
inc
lret
sbb
aam
xor
add
out
fs
mov
push
push
rol
addb
adc
scas
mov
cli
fdivl
aad
mov
scas
jg
std
repz
lret
repnz
jp
inc
cli
aas
xchg
jecxz
loope
cltd
jl
cli
fwait
sar
mov
sbb
mov
popa
mov
and
jno
lret
or
cmc
jns
jb
pop
adc
mov
fyl2x
out
imul
test
sarb
nop
popf
push
mov
mov
jmp
xor
add
push
or
adc
out
rcrl
jmp
xchg
inc
hlt
mov
mov
or
andl
popf
mov
out
sbb
lods
aaa
imul
clc
outsb
bound
jl
mov
sbb
arpl
jle
mov
mov
stc
xchg
mov
stos
aam
fistps
out
stos
testb
out
push
mov
mov
pop
jno
cltd
cmp
and
in
lock
adc
int
jbe
adc
mov
stos
clc
sub
enter
add
or
cmpsl
call
jle
leave
xchg
dec
cmpsl
pop
std
je
sahf
jmp
pop
jnp
sub
addl
xor
pop
cmp
mov
mov
and
dec
dec
scas
or
test
stos
inc
shll
repnz
mov
dec
inc
jno
mov
mov
ss
icebp
fistpll
out
cmp
push
push
repz
mov
shrl
fadds
jnp
iret
aad
cmp
cwtl
imul
and
pop
stos
aas
inc
push
mov
pop
mov
les
in
outsb
adc
in
scas
cwtl
insl
aas
xor
jo
adc
jge
mov
outsb
stos
loop
mov
mov
test
adc
pop
in
adc
scas
das
imul
or
sbb
in
pop
cmp
mov
fistpll
imul
mov
into
add
sub
jmp
in
dec
push
jecxz
int3
out
les
hlt
xor
pop
mov
mov
sub
adc
sub
dec
push
pop
sbb
std
push
push
push
leave
cld
inc
repnz
and
mov
fwait
dec
pop
adc
test
pushf
sbb
rcl
sbb
mov
dec
add
movsb
sti
test
xlat
mov
bound
push
rcrb
sub
adc
outsl
and
stos
dec
outsb
imul
inc
dec
ja
sbb
and
inc
popa
xor
sub
arpl
test
sbb
fwait
pop
add
or
scas
jl
lcall
and
mov
data16
xchg
enter
xchg
loop
mov
cltd
aam
loope
pushf
pop
pop
fistpll
movsb
mov
mov
lock
inc
add
inc
ret
dec
pop
pushf
cwtl
mov
xor
loop
popa
lea
adc
inc
fdiv
mov
inc
push
add
mov
push
inc
fildl
fdivs
dec
lea
jae
inc
xor
lcall
call
sub
test
and
xchg
cmc
push
cmpsl
sarl
lea
shl
jae
movsb
js
adc
push
inc
or
into
xchg
shll
mov
or
sbb
pop
xchg
cmpb
dec
stos
mov
mov
xchg
xor
and
cmp
sbb
inc
fwait
inc
test
jecxz
push
lds
pop
sbb
push
sbb
loopne
pusha
and
test
dec
and
clc
xor
mov
aad
xchg
and
inc
pop
sub
hlt
popf
outsl
jns
mov
or
aaa
xchg
cmp
mov
cmpb
push
jbe
out
iret
mov
mov
add
dec
inc
xor
xchg
je
inc
sahf
repnz
das
push
push
adc
xchg
js
cmpsl
pop
sbb
mov
xchg
sbb
fwait
add
mov
pop
inc
xor
outsl
cmpsl
addb
jl
pop
dec
mov
dec
daa
jmp
cmpsb
mov
pop
cmp
das
adc
add
mov
xor
addr16
lret
cmpsb
jp
cld
adc
push
orb
adc
cmc
pop
clc
insb
push
push
ljmp
cmp
xlat
fimuls
movl
adc
adc
fstps
fdivl
leave
mov
divb
cld
inc
das
inc
test
dec
xrelease
mov
and
sbb
imul
addb
repnz
in
call
xchg
xchg
popa
clc
or
iret
push
ja
stos
inc
push
in
pusha
stos
sbb
lods
js
icebp
cmp
clc
push
jo
testb
dec
out
aaa
frstor
mov
mov
mov
loop
push
ljmp
inc
outsl
std
add
std
push
in
fistps
mov
movsb
test
out
test
mov
lods
movsb
dec
jb
push
popa
gs
sub
xor
sub
xchg
scas
shl
jg
test
loop,pn
mov
sti
mov
jg
jo,pt
movsb
cli
dec
jg
imulb
push
and
ja
mov
insl
test
out
imul
lock
fdivl
lea
andl
xchg
mov
lods
outsb
xor
push
iret
cmpsb
idivl
jo
xchg
js
push
pop
mov
mov
xor
mov
mov
iret
repnz
es
xchg
mov
out
pop
push
and
jmp
pop
jg
or
stc
mov
push
push
and
mov
xchg
push
in
cwtl
mov
inc
je
cmc
outsb
xchg
xor
test
jge
fiaddl
es
int3
or
xchg
pop
mov
mov
or
int3
lret
cmp
lret
mov
cwtl
mov
adc
inc
adc
sub
inc
ret
cltd
call
loop
lea
xor
pop
jg
push
fisttpl
clc
xor
cmp
inc
push
fs
dec
je
dec
fsts
pop
lods
out
push
xor
add
sub
add
int
sub
jg
mov
cmp
cmp
xchg
inc
mov
clc
leave
movsl
dec
sub
push
mov
inc
pop
jg
and
inc
iret
int3
mov
push
cwtl
loopne,pt
pop
cli
cmp
outsb
nop
pop
cld
stc
notl
pop
push
je
mov
add
les
shrb
xchg
lods
inc
xor
inc
in
push
bound
push
jns
pop
push
and
fcoml
and
psubsw
add
in
mov
sbb
pop
sbb
test
mov
push
adc
jl
fimull
mov
cmp
fs
push
sbb
rdmsr
loope
jg
loopne
pop
pop
mov
dec
add
sub
cmpsl
mov
insb
call
sub
fbstp
cld
data16
sarb
mov
shll
lods
push
sti
testl
subb
adc
dec
test
in
enter
pushf
scas
mov
push
lcall
cmp
mov
jo
or
pusha
or
test
xor
fimuls
sub
ret
xor
out
test
js
and
or
mov
add
mov
sbb
lret
je
mov
cmpsb
fstpl
jmp
push
mov
xor
sbbl
jp
or
xor
cmp
das
leave
mov
aaa
sub
cmpl
ret
scas
mov
popf
xchg
sub
ljmp
int
push
arpl
pop
je
and
les
pusha
ret
push
stos
dec
dec
fwait
mov
jmp
repz
mov
jge
xor
xlat
add
dec
int
lods
xor
pop
fidivrs
pop
stos
stos
daa
adc
ret
out
or
mov
cwtl
fwait
mov
pmaxsw
fsubl
xchg
nop
cld
fcomi
dec
lea
add
push
imull
dec
or
dec
or
outsl
mov
les
popf
fcomps
push
nop
and
adc
mov
lcall
mov
add
aaa
mov
in
bound
and
sub
pop
jecxz
loopne
jmp
and
push
je
fdivrs
and
loopne
mov
mov
xor
fstps
mov
push
testl
xchg
pop
loope
adcl
sahf
aas
aas
mov
hlt
and
mov
fs
imul
pop
cltd
mov
inc
sbb
mov
cmp
movsb
xor
sahf
push
jl
es
xchg
mov
ret
out
ret
jae
bound
lret
int3
pop
int
xor
pop
and
pushf
sahf
jecxz
jnp
cmp
jbe
in
jge
aaa
push
lock
and
cmp
cltd
or
enter
outsl
add
dec
xchg
push
mov
cmp
fistpl
cs
out
inc
out
outsb
inc
cmp
in
test
sbb
mov
add
stos
pop
jno
push
sahf
xchg
or
stos
inc
adc
jg
mov
dec
lret
cmc
pop
dec
das
lock
inc
pop
out
and
jmp
aaa
mov
outsl
scas
test
mov
lock
add
xchg
pop
or
push
add
cwtl
push
cmp
sbb
shll
sti
cmp
imul
xchg
dec
mull
imul
bnd
add
out
xchg
dec
mov
push
test
xor
sbb
outsb
pop
aas
hlt
loop
xor
inc
dec
inc
jl
lcall
and
and
jge
dec
aas
cmp
ret
fmull
xchg
pop
ja
mov
pop
cld
out
out
leave
cli
adc
add
pop
cmc
cmpsb
lds
jb
mov
call
js
loope
pop
lret
sub
lea
fisubs
cld
les
loop
push
pop
push
dec
mov
sahf
inc
testl
cmc
xor
addl
pop
hlt
inc
mov
inc
fs
or
add
sbb
inc
lods
and
call
and
mov
bound
pop
jae
test
test
push
in
test
cmpsb
push
lret
pop
dec
cwtl
fsubs
pop
aad
add
ljmp
int
inc
jp
mov
dec
fdivl
inc
ljmp
je
es
xlat
lret
iret
cmp
rolb
loop
xchg
and
inc
cs
dec
clc
add
ja
out
sti
push
bound
push
popf
push
mov
mov
dec
xlat
cli
pop
adc
mov
lds
mov
push
loope
dec
mov
xchg
sti
sbb
mov
mov
loope
jp
arpl
dec
popf
or
cmc
clc
sbb
jg
ds
out
sbb
adc
callw
cld
jne
jnp
sbb
jecxz
sub
stos
sahf
fstps
jecxz
stc
mov
nop
add
lcall
fsubr
cmp
fnstenv
inc
push
push
aad
lret
outsl
mov
aam
sbb
sahf
jecxz
aaa
push
addb
pop
vcomisd
fistpl
adc
dec
je
dec
iret
repnz
inc
and
jmp
inc
les
or
outsl
jo
jp
jns
into
hlt
add
xor
mov
push
sbb
aad
rol
mov
ja
ret
push
push
int3
mov
mov
mov
mov
cld
sbb
pop
outsb
add
mov
jmp
loop
add
loope
mov
push
enter
pop
xchg
pop
iret
sbb
jle
cld
push
pop
fildll
jno
or
xchg
mov
adc
out
push
data16
test
out
or
outsb
aam
cltd
dec
popf
adc
jle
rcrl
or
adc
adc
enter
push
or
adcl
push
dec
push
cmpsb
mov
test
cmc
and
repz
push
push
push
mov
fiadds
cmpsb
mov
adc
mov
mov
subl
addr16
lds
push
jne
sbb
ljmp
sahf
popf
call
jge
xchg
xchg
push
mov
push
mul
ret
sub
test
or
mov
jb
or
daa
add
or
out
dec
aas
xor
idivl
mov
pop
sub
test
scas
scas
xchg
pusha
insl
push
pushf
pop
xorl
loop
vpshlb
dec
push
lods
mov
xlat
repnz
movsl
es
lcall
pop
pop
add
and
cmp
push
roll
inc
pop
sub
xor
sub
pop
xchg
sub
mov
shlb
and
ja
cmp
mov
rcl
gs
dec
mov
movsl
sbb
shl
xchg
subb
mov
pop
repnz
loope
push
in
int3
sbb
cmc
push
ret
mov
push
xlat
std
and
xlat
mov
imul
shrb
popa
addb
add
jecxz
dec
cltd
and
cld
dec
inc
stos
or
push
arpl
jmp
xchg
cmp
fnstsw
push
and
cmpsb
lahf
xchg
mov
negl
jns
mov
jne
les
cmp
mov
pop
lds
xor
pop
mov
xor
mov
mov
fs
cmpsb
jb
cmp
cltd
push
mov
dec
inc
loopne
xchg
rorb
imulb
push
cld
fdivl
cs
xchg
pop
add
xor
f2xm1
adc
cmp
push
jp
sbb
ljmp
in
jge
or
mov
pop
jbe
in
pop
pusha
sarb
adc
pop
sbb
xchg
popf
int3
jae
test
mov
mov
cmpsb
push
out
add
pusha
nop
call
pop
mull
dec
test
pop
fildl
push
pusha
nop
std
and
xchg
clc
cs
pop
icebp
fldcw
mov
xchg
cmp
gs
pop
mov
xchg
dec
and
movsl
inc
mov
dec
inc
mov
xor
daa
pop
outsb
or
jmp
das
int3
jl
in
mov
push
and
xor
xor
sti
jmp
sti
mov
in
bound
shrl
ja,pt
nop
adc
dec
xchg
jp
or
xchg
sbb
jmp
cmpsb
push
rorb
push
mov
lods
xor
mul
pop
inc
and
js
pop
xchg
pushf
cmp
fstpl
jbe
push
das
jl
daa
mulb
ljmp
int3
adc
add
mov
out
mov
ss
sbbb
bound
stos
mov
pushf
cmp
popa
push
add
ret
test
jp
popf
dec
or
dec
jbe
test
dec
add
inc
stos
fmuls
and
inc
sbb
add
movsb
add
adc
jmp
test
jnp
fidivrs
mov
in
clc
mov
nop
int3
and
cmpsl
add
mov
sbb
and
sbb
out
shrl
lods
movsb
loopne
test
push
mov
ljmp
pushf
xor
mov
xor
mov
cmp
test
les
call
xor
fwait
mov
mov
fwait
outsb
adc
adc
mov
mov
cmp
rclb
inc
pusha
cli
nop
sub
pop
jae
into
iret
or
ja
or
shlb
popa
mov
mov
push
mov
cmp
outsb
out
jno
jne
xchg
dec
mov
xor
inc
pop
mov
into
mov
outsb
flds
out
icebp
and
pusha
adc
mov
cltd
fldt
out
out
xlat
or
insb
or
lea
mov
cmp
pop
cli
pop
inc
movsb
push
loope
xchg
add
cltd
sub
mov
lock
jge
pop
jbe
xchg
xchg
je
jp
jl
mov
mov
xor
jo
and
push
mov
mov
test
jmp
movsl
ja
inc
cs
add
inc
jg
sub
in
mov
mov
or
add
imul
orl
sbb
cmc
mov
sbb
adc
paddsw
push
aaa
push
mov
and
dec
and
in
pop
fwait
outsb
and
add
imul
movsb
stos
and
adc
fimuls
mov
inc
test
popa
xor
jns
outsb
mov
jb
mov
cltd
out
call
push
dec
inc
mov
cmpsl
pusha
fwait
xchg
xor
cmp
mov
aad
loope
xor
cwtl
jecxz
das
lods
or
lret
jo
inc
mov
inc
dec
xchg
or
mov
out
inc
test
lods
cmc
push
adc
rclb
icebp
xchg
and
mov
fildll
mov
rclb
inc
adc
mov
xor
dec
cwtl
xor
fyl2x
adc
mov
mov
popf
aad
xchg
xchg
inc
shlb
les
cmp
lcall
lret
icebp
inc
lahf
int
sbb
dec
hlt
lods
test
lods
dec
jg
cmc
lods
fistps
sbb
dec
cmp
jp
adc
inc
gs
aad
and
pop
imul
fiaddl
es
in
aaa
cld
mov
sub
out
je
pop
cmp
scas
dec
rorb
pushf
lock
adc
outsb
clc
push
xchg
in
subl
mov
mov
movsl
mov
in
xchg
lcall
inc
lock
pusha
aaa
ds
jno
mov
jae
addb
mov
ret
js
xchg
sub
mov
imul
mov
outsb
std
rcrb
xor
fs
inc
fs
ret
push
outsb
add
pop
js
cltd
popf
sarl
lea
js
loop
sahf
jmp
test
push
mov
mov
cmp
in
lock
mov
aad
mov
adc
push
push
and
push
mov
xchg
mov
ret
jmp
and
bound
add
adc
adc
inc
out
sub
stos
rcrl
jecxz
je
pop
add
pop
cmp
sti
lods
adc
daa
xchg
inc
push
int
sbbb
jle
test
or
cmp
push
xor
and
lret
fs
jmp
push
sbb
xchg
divb
out
bound
inc
mov
push
jnp
fs
adc
test
mov
cmp
adc
js
dec
movsl
cmp
push
mov
cmp
lret
nop
jne
mov
pop
les
and
mov
shlb
jp
jne
ljmp
lret
pop
push
inc
xchg
int3
imul
leave
mov
outsl
cli
lret
mov
cmp
cwtl
pop
or
cli
jmp
aad
ljmp
in
call
push
xor
or
mov
mov
xorb
scas
je
sub
jns
shlb
pop
dec
std
pop
sub
jbe
dec
gs
push
lea
jbe
fsts
push
aaa
push
ja
pop
mov
or
push
scas
pop
mov
pop
in
stos
jg
cmp
dec
inc
dec
jmp
stc
adc
jb
xchg
enter
jne
repnz
push
jg
loopne
outsl
filds
or
movsb
das
inc
ret
cmp
into
test
test
mov
cmc
pop
repnz
orl
xor
mov
add
adc
and
stos
loope
or
dec
mov
dec
dec
mov
aad
lods
cmp
cmp
dec
and
mov
enter
outsl
inc
fs
inc
sti
nop
jp
jl
cltd
movsb
incb
stos
loop
fxch
pop
repz
mov
pushf
xorb
add
repnz
jne
shrb
or
ret
sub
xor
push
mov
repnz
mov
pcmpeqw
mov
inc
lcall
sar
and
xor
jb
out
pushf
adc
add
fwait
subl
jo
mov
ja
or
push
xor
pop
jecxz
sti
sbb
jns
push
mov
fistpll
repnz
xchg
mov
repnz
shlb
adc
adc
and
shl
add
lcall
rol
pop
decl
inc
jae
jg
mov
je
jge
mov
pusha
scas
push
xor
addr16
leave
stc
sub
mov
inc
in
mov
xlat
and
push
dec
stc
repz
lods
sbb
adc
mov
andl
inc
ljmp
sahf
sub
jp
in
cmpsb
lret
aaa
inc
or
sub
orl
adc
inc
cmpsb
andl
cmpsl
add
sub
std
cmp
ds
mov
js
cli
movsb
or
pop
mov
push
xor
jle
rclb
push
adc
pusha
dec
icebp
mov
je
cli
aaa
nop
and
cmp
cmp
fs
cmpsl
jbe
push
mov
insb
mov
orb
cmpsb
adc
mov
mov
outsb
or
int
testl
mov
imulb
out
mov
stos
jmp
cmp
jmp
mov
mov
jns
dec
push
push
in
pop
fistpl
jmp
imul
dec
pop
mov
sbb
mov
scas
jno
push
or
test
lret
pop
mov
repnz
outsb
imul
mov
cmc
sub
sbb
and
fisubrl
std
and
lcall
cltd
inc
std
dec
add
shrb
cmp
hlt
jns
jnp
insb
push
cmp
pop
push
repz
push
cmpsl
cmp
xor
pop
inc
mov
adc
aad
insb
test
pusha
xchg
sub
cmpsb
sti
shlb
shlb
xchg
or
lcall
cltd
pop
mov
and
adc
movl
jmp
xor
in
mov
sub
xor
mov
cmp
jl
ja
test
pop
fildl
fs
lahf
out
lretw
ja
push
adc
dec
jl
sbb
mov
sub
push
push
ret
aaa
mov
xchg
aaa
movsb
xlat
sub
and
ror
mov
outsb
xchg
popf
or
sbb
push
popf
sahf
lods
fsub
mov
jp
popa
pop
push
sub
jge
ljmp
inc
lods
and
sbb
loopne
sahf
mov
xor
icebp
add
fstpt
cmp
push
jp
dec
lret
stos
pop
mov
int
icebp
jg
mov
xchg
xchg
shlb
std
mov
pop
sbb
xchg
add
in
sub
pop
int
lret
sahf
nop
loopne
lret
cmp
pop
adc
push
int
pop
imul
mov
mov
push
neg
mov
cmpsl
ss
jl
dec
push
fbstp
out
sbb
and
sarl
cli
push
hlt
dec
arpl
fldenv
adcl
fcomps
xchg
push
inc
or
inc
mov
adc
lods
fst
ljmp
jb
cli
outsl
xchg
repz
pop
pop
int
and
cmp
jp
cmp
data16
dec
dec
mov
fcmovnbe
sub
faddl
pushf
sbb
fs
lds
arpl
adc
jl
mov
pop
mov
sub
sbb
sub
xchg
pop
xor
push
sbb
push
pop
test
jae
mov
jecxz
xchg
xchg
insb
enter
xor
or
mov
ret
lock
sub
jge
cmp
dec
pop
pop
sub
icebp
aas
mov
dec
or
movups
int3
loopne
push
adc
adc
jnp
push
lea
or
int
cmpsb
ljmp
testb
or
mov
popf
push
dec
pusha
mov
leave
jl
cs
and
jmp
and
into
ret
fstl
cmp
xchg
pop
cmp
fs
pop
push
mov
fwait
andb
js
clc
xor
mov
sbb
mov
push
dec
and
add
sbb
xor
pop
outsb
add
out
mov
fmul
pop
iret
jmp
pushf
inc
add
movsb
test
and
xor
movsb
out
jns
repnz
dec
fdivp
mov
imul
fistl
xor
mov
jl
jg
and
fwait
js
mov
test
aaa
pop
or
nop
movsb
xor
stc
popa
cmp
movsb
cmp
sbb
xor
xchg
mov
dec
sub
jbe
lea
imul
inc
scas
test
rorl
push
or
in
outsl
inc
into
inc
cs
jne
dec
add
xchg
push
icebp
fs
mov
inc
and
adc
sbb
sbb
repnz
or
dec
sbb
mov
fsts
test
out
xchg
mov
loopne
mov
js
sahf
push
mov
pop
pop
mov
fdivp
add
flds
jne
mull
sbb
cmpsl
fs
into
and
dec
add
addr16
orl
inc
enter
add
mov
testl
movsb
std
lds
aam
lea
or
mov
jns
pop
xchg
mov
adc
jl
insb
or
scas
ds
pop
mov
int3
jl
nop
enter
inc
iret
mov
push
jno
mov
rcr
pop
and
sti
and
push
sbbl
or
lret
scas
and
mov
loop
sbb
sbb
lock
pop
mov
shrb
sbb
pop
movsl
ss
lods
inc
cmc
sub
daa
push
iret
ja
arpl
faddl
pushf
mov
outsb
call
pushw
mov
xor
jae
movsb
test
push
mov
outsb
data16
add
shl
scas
test
call
xchg
mov
in
int
cmp
movsb
int
pushf
aas
xor
daa
cmp
push
loopne
out
xor
lret
lods
shlb
push
jge
xchg
sahf
cmc
push
daa
jae
fisttpl
lcall
shrl
outsl
push
pop
into
jns
mov
sub
sar
push
xchg
test
push
sub
ret
xor
int3
arpl
sbb
mov
jb
bound
stos
mov
adc
rcrl
inc
popf
xlat
int3
or
movsl
fwait
mov
xor
inc
mov
imul
stos
clc
nop
insb
adc
add
ror
stc
mov
sti
sbb
xchg
leave
mov
xchg
jo
adc
ds
mov
cli
push
jecxz
loop
adc
in
sub
jmp
push
push
push
adc
cmp
fiadds
mov
add
and
fstl
or
popa
and
sub
aam
outsl
and
sbb
sar
xor
cmpsl
xor
xchg
test
jmp
pop
movsl
cld
xchg
pop
ja
lahf
sub
adc
fwait
imul
jae
sahf
shrb
cmpl
sbb
ror
pusha
jmp
push
lock
jne
xchg
mov
ljmp
mov
call
ss
jmp
xchg
movsb
jmp
insb
cmp
inc
jne
mov
stos
mov
xor
lea
mov
int
rcrb
hlt
gs
mov
stc
mov
jb
jo
movsb
mov
les
mov
js
or
movsb
mov
aaa
push
sub
inc
stc
pop
mov
mov
adc
gs
ret
push
inc
jbe
dec
clc
cs
mov
sub
sub
out
jno
lret
aad
bound
sub
test
movsl
push
arpl
mov
sti
jp
lock
int3
mov
cmc
push
cmp
adc
cld
test
sti
xchg
xlat
pusha
xor
scas
test
sbb
push
inc
test
popa
loope
pushw
xchg
in
dec
pushf
daa
push
scas
jb
repz
xlat
mov
jle
fs
ds
push
xor
call
jecxz
adc
inc
popa
or
fildll
add
xlat
mov
icebp
fucomi
fdivrp
das
pusha
mov
lods
xchg
and
lcall
push
in
sbb
jp
xchg
je
bound
xchg
incb
iret
lock
add
inc
sub
adc
push
ret
flds
push
xchg
in
sub
outsb
ret
pushf
add
sti
addr16
cmp
data16
push
sbb
cmp
bound
push
scas
pand
mov
shlb
xchg
aad
push
cli
push
ss
gs
int3
push
or
mov
jns
and
js
adc
nop
or
and
scas
xor
mov
inc
mov
je
movsb
repz
push
imulb
clc
pop
hlt
fisttps
jg
mov
sub
aam
sub
jnp,pt
aas
mov
jbe
rcrb
and
push
pop
pop
icebp
pop
loop
cmp
data16
dec
stos
andl
cmpsl
cli
sti
shll
xchg
fcompl
and
fiaddl
push
add
mov
mov
mov
xor
dec
vcvttss2si
jnp
or
xlat
hlt
pop
pusha
cmpsb
fidivl
in
rcll
jle
jne
lretw
jg
roll
dec
lahf
push
mov
or
inc
mov
mov
sbb
xchg
lret
and
rcrb
rcrl
mov
xchg
adc
mov
jge
dec
mov
and
add
cmp
xor
movsb
xor
arpl
ret
xor
jp
loopne
adc
mov
xlat
mov
xlat
arpl
push
jmp
inc
cmp
daa
jl
lock
insb
pop
movsl
lret
mov
cmp
sti
call
imull
cmp
sub
jne
test
jbe
dec
in
mov
xor
lret
push
adc
xchg
pop
mov
aas
push
orl
lea
fxch
pop
inc
mov
push
fmull
scas
xor
jge
jae
mov
mov
push
add
mov
andb
mov
or
lds
insl
xor
shrl
dec
xchg
push
push
outsl
push
push
lea
iret
jmp
cwtl
stc
ret
cld
and
push
shr
pop
adcl
and
outsb
inc
sub
sbb
jo
adc
jo
test
outsl
in
inc
sbb
inc
sub
imul
pop
xchg
arpl
fisttpll
pushf
cmp
repz
dec
pop
jno
mov
popa
push
xor
pop
jae
out
repz
cmp
stos
jb
pop
jnp
xor
add
mov
lods
pop
mov
or
hlt
in
negb
xor
pop
out
or
mov
mov
mov
push
daa
add
call
adc
mov
mov
aaa
cli
addb
jl
imul
sbb
inc
sarl
cmpps
jae
repz
inc
fstps
mov
xchg
fsubl
lret
adc
adc
out
sub
not
pop
fiaddl
fs
out
add
xchg
xor
dec
idivl
or
xor
dec
and
push
mov
call
jg
pushf
ja
xchg
xor
pop
in
addr16
popf
outsl
aas
sbb
notl
mov
fcmovne
lret
out
inc
insb
clc
xor
pushf
iret
jecxz
int3
loope,pt
das
in
and
xchg
inc
dec
mov
push
data16
pop
or
lods
out
pop
rolb
in
cmp
adc
or
cmpb
shlb
mov
mov
mov
mov
jle
pop
icebp
outsb
mov
mov
pop
repnz
rolb
call
mull
les
test
or
and
outsl
and
sub
in
or
cmpsb
sahf
je
mov
mov
or
fbstp
fnstsw
fimull
in
push
or
xchg
and
lea
testl
cmp
xor
dec
jbe
fidivl
test
repz
jge
repz
xchg
jmp
lret
fidivl
mov
lods
es
fstp
shlb
xchg
out
sbb
and
mov
inc
sub
push
rcrl
cmp
std
mov
adc
or
add
cmpsl
cmp
gs
xchg
rclb
mov
add
pop
dec
or
inc
sbb
xchg
adc
loope
test
pop
lahf
push
rorb
jo
dec
addr16
maskmovq
xchg
mov
pop
xlat
sub
xor
arpl
jb
or
icebp
scas
lods
jno
into
dec
fists
lcall
aam
ret
fcmovnbe
pop
shrl
stos
movsb
sti
ljmp
or
pop
lret
addr16
out
xchg
icebp
push
lea
les
sub
sti
ja
adc
lahf
flds
cltd
pop
adc
ss
out
jo
sbbl
cmp
mov
adc
jb
hlt
cmc
mov
pop
lahf
negl
pop
mov
dec
cmp
fcomps
sub
push
mov
jmp
lahf
mov
lret
clc
aam
jp
add
imul
es
add
mov
mov
xchg
jl
sub
lea
inc
adc
mov
jg
and
sub
pushf
clc
nop
insb
cmp
push
or
cmc
add
mov
cmc
add
in
mov
nop
out
jne
cmp
mov
pop
pop
ljmp
out
movsl
ret
or
gs
jecxz
daa
lea
lcall
andb
inc
sbb
pop
sub
das
sub
add
inc
push
xchg
jne
ds
xchg
loop
push
notl
push
push
scas
jne
imull
and
or
mov
popf
mov
lods
inc
or
stos
mov
jge
pop
bound
xor
sbb
dec
mov
pushf
pusha
insb
cmp
push
lea
je
icebp
cli
mov
outsb
fnstsw
das
sub
push
cli
or
in
push
insl
outsl
add
negl
mov
lea
mov
stc
add
out
cmp
inc
insb
xor
fldcw
inc
xchg
insl
mov
ja
pop
sarb
inc
pop
push
pop
xchg
divb
insl
jg
jle
mov
pop
ja
push
sub
lods
iret
add
push
into
stc
push
addb
mov
mov
pushf
jmp
or
lods
mov
sub
out
fsubp
inc
aam
lock
xchg
je
mov
les
dec
adc
ljmp
inc
icebp
sti
and
push
rorb
xchg
insl
cmp
jb
loop
push
hlt
xor
push
bound
inc
jmp
or
dec
inc
aas
lea
xor
adc
mov
fadds
sti
in
cmp
cmp
daa
inc
cltd
fisttps
int3
sub
jnp
and
inc
std
sbb
aam
loope
push
xchg
in
mov
lret
outsl
xchg
mov
sahf
stos
dec
pop
pop
cmp
xchg
add
mov
dec
dec
adcl
repz
sbb
jle
push
dec
std
mov
ja
adc
adc
sbb
shl
dec
aam
int
jg
dec
testl
jbe
mov
and
sbb
dec
sbb
xor
mov
imull
push
xorl
and
inc
subb
jp
fstp
or
and
pop
jne
into
sbb
mov
xchg
jno
and
sub
dec
mov
mov
lods
imul
clc
scas
test
mov
repz
adc
mov
and
orb
in
mov
sti
cwtl
addr16
in
hlt
push
mov
adc
and
jp
inc
pop
in
xchg
add
in
xor
pop
mov
mov
jmp
rolb
mov
inc
dec
clc
sub
xchg
fnstsw
mov
mov
aaa
push
movsb
xor
xlat
sbb
inc
adc
pop
lret
xor
pop
push
pop
imul
into
pop
xchg
mov
std
scas
inc
nop
mov
test
dec
pop
xor
mov
out
lea
pop
jecxz
jl
imul
cwtl
pop
test
repz
sub
pop
sarb
aam
push
sbb
mov
out
pop
add
movsb
in
rcrl
or
mov
jl
dec
imul
mov
leave
and
pop
xchg
mov
mov
cltd
jge
adc
data16
bound
jo
stos
xchg
xchg
aas
inc
lea
or
xchg
lahf
mov
inc
nop
adc
add
push
push
push
jne
into
cs
dec
in
pop
jo
pusha
push
cwtl
push
xchg
ret
cmp
ffree
fadds
or
ret
das
aam
dec
or
in
jb
das
subl
mov
cmp
push
test
imul
shl
jp
int
in
into
jmp
adc
jp
popf
rolb
push
adc
xchg
fiadds
inc
sub
subl
push
fisubl
push
sahf
inc
cmp
sbb
jg
push
jbe
fnstsw
data16
cmp
test
and
mov
pop
jge
imul
int3
xchg
push
es
jecxz
jnp
cmpsl
add
lcall
or
xor
mov
push
push
cmpsl
sti
mov
scas
mov
xor
adc
mov
imul
mov
and
push
cwtl
shlb
and
adc
std
sbb
push
and
lcall
push
orb
xchg
mov
jo
out
inc
inc
cmp
repz
fs
push
inc
stos
sbbb
push
cmp
push
cmpb
sub
push
mov
loop
sbb
repz
movsb
daa
adcb
mov
mov
adc
fadd
lcall
stc
hlt
push
lret
add
pusha
mov
sahf
imul
test
mull
lock
jb
dec
sbb
std
jne
loope
loop
pop
pushf
leave
jle
test
xor
in
dec
loop
lret
inc
popa
cmc
js
aas
roll
add
push
lods
push
ljmp
cltd
loopne
xor
add
das
test
sub
xchg
add
out
ret
jl,pn
fstps
mov
push
or
ret
adc
mov
jno
testb
aam
and
push
cmp
inc
aam
shll
imul
xchg
movsb
int3
fwait
out
icebp
adcl
or
bound
or
les
imul
scas
cmpsb
jecxz
mov
das
cld
or
cli
mul
ret
jne
jo
mov
pusha
test
sarl
outsb
and
shlb
rorb
jno
xchg
inc
sbb
pop
mov
push
or
push
cli
imul
lcall
mov
js
pop
leave
cmp
decl
inc
push
add
into
fidivrl
in
das
push
push
aad
push
mov
lret
or
adc
es
xor
cld
and
scas
mov
aas
mov
mov
xor
dec
mov
cli
daa
push
fstps
repz
mov
add
lock
jnp
out
jl
push
pusha
sbb
sub
popf
fwait
loopne
cmpsb
inc
jmp
add
lret
push
sbb
enter
clc
jmp
pxor
add
clc
sub
sbb
xchg
mov
adc
pop
loopne
iret
xor
xchg
pop
sub
dec
add
push
cmp
inc
decb
add
inc
int3
test
jb
aaa
bound
mov
iret
dec
sbb
fs
cmp
pop
stos
inc
xor
inc
xor
in
aaa
xchg
stos
movsl
cmc
add
in
push
fistl
push
lds
inc
lret
scas
sub
jb
dec
push
xchg
in
jae
xchg
call
or
inc
sub
cmp
add
arpl
aas
int3
ror
lds
and
mov
aad
sbb
insl
xchg
aas
add
inc
push
add
daa
adc
ljmp
dec
jmp
scas
inc
cmp
js
aam
ds
push
mov
push
insl
cmp
jne
xor
inc
and
mov
sbb
sub
cs
jns
push
xchg
dec
inc
mov
add
lock
mov
xchg
jmp
jo
cmpb
jp,pn
cmp
xor
ljmp
jae
jle
pushf
add
adcl
in
fimuls
add
and
rcll
cmp
adc
into
ret
enter
adc
cmp
sbb
stc
jb
shrb
inc
inc
or
addr16
sub
dec
mov
pushf
mov
adc
cltd
and
add
mov
cs
fldenv
ja
ds
sub
push
dec
std
mov
aas
mov
ret
mov
or
mov
pop
lret
dec
sbbl
inc
pop
dec
lea
xor
mov
scas
roll
mov
mov
cmp
clc
decb
nop
xor
lahf
and
sub
daa
mov
lcall
shlb
ret
insl
add
mov
push
xor
pop
iret
mov
inc
bound
pop
add
xor
cltd
fs
dec
negb
xchg
in
or
enter
mov
add
insl
sbb
insb
xor
jbe
cmp
or
cmp
arpl
ds
xchg
adc
jle
in
xor
aas
or
jp
mov
cwtl
or
inc
mov
mov
out
push
push
out
mov
or
pop
jg
movsl
jnp
imull
xor
lea
popaw
xorb
rcl
xchg
test
push
and
outsl
mov
pop
je,pn
lret
adc
add
mov
daa
add
jno
ljmp
aam
fisttpll
mov
mov
xchg
mov
xchg
popf
in
jno
stos
pop
sub
jmp
cmc
sbb
cmpsl
aas
sub
in
jp
dec
xor
sub
mov
dec
dec
loop
cmp
cld
pop
jne
dec
mov
xchg
inc
push
repnz
stc
sbb
mov
push
aas
adc
sbb
xor
inc
fcmovnb
out
hlt
add
dec
enter
dec
int3
inc
mov
decl
fs
xor
ffree
cmp
dec
lea
jmp
mov
or
adc
push
xchg
dec
pop
iret
xor
cmp
inc
xchg
xchg
jp
push
and
pop
jmp
adc
shl
xchg
rcl
xor
cmp
aas
fcompl
mov
cmp
clc
imul
js
mov
mov
ret
mov
bound
mov
cmp
mov
popf
int3
stos
pop
jae
jb
aam
outsl
inc
and
pop
inc
jge
rcrb
bound
ror
movsb
shr
enter
ss
mov
movsl
icebp
xchg
mov
push
xchg
add
or
fneni(8087
leave
psadbw
rep
xchg
xorl
sbb
xor
xor
mov
sti
add
mov
mov
dec
pop
pop
mov
cmp
fsubr
pop
adc
clc
push
repz
sti
insl
or
sbb
out
xor
adc
jecxz
call
ret
adc
stc
in
jne
mov
je
into
mov
mov
in
xchg
scas
mov
mov
jae
push
loopne
mov
jbe
jbe
mov
stos
or
dec
arpl
imul
sub
lods
sbb
fcomip
sub
lahf
sbb
test
push
call
sub
roll
adc
imul
xchg
cmpsl
stc
and
or
jae
push
push
push
movsb
in
idiv
sub
adc
fsubrl
xchg
mov
clc
adc
or
inc
pop
nop
in
or
inc
sahf
sub
jl
jno
mov
sub
push
xor
ret
out
mov
xchg
and
and
out
pop
cmc
loop
xchg
mov
aas
insl
popa
pop
out
and
pop
in
testl
dec
xor
jg
jb
sub
test
sti
cli
and
dec
adc
cmpsb
lds
sbb
incb
push
pop
fldl2e
imul
sub
sub
push
push
je
sahf
or
test
lock
cld
pop
mov
pop
jmp
sbb
lcall
or
jge
addr16
fists
pop
lcall
fxch
in
ljmp
je
out
lods
leave
mov
inc
dec
mov
xchg
xor
push
pop
es
bound
cli
das
fucomip
mov
lret
jg
push
xchg
jg
mov
sub
shlb
inc
mov
inc
loop
push
or
pop
or
mov
mov
sub
cmovo
cwtl
pop
fucomip
push
and
movsb
dec
or
or
test
mov
mull
mov
negb
pop
fdivrl
mov
cld
xor
mov
and
adc
adc
rep
mov
adc
pop
scas
pusha
test
popa
mov
es
dec
das
loope
inc
sub
adc
jmp
mov
jns
les
mov
cld
pop
pop
int
les
loopne
lahf
mov
mov
dec
fdivr
je
out
xchg
jle
push
add
sbb
aas
lcall
dec
mov
rcrb
aaa
or
mov
pop
aam
aad
lcall
adc
subl
mov
insb
cmp
les
mov
js
push
ds
or
pusha
and
ljmp
pop
call
into
adc
call
xor
out
or
lcall
xchg
adc
mov
sbb
iret
jecxz
mov
mov
ljmp
inc
mov
fs
jns
adc
xchg
or
repnz
sub
out
rol
mov
fdivs
imul
daa
je
nop
jg
push
mov
adc
repnz
das
add
leave
movsb
xor
cmp
jnp
clc
es
adc
inc
jg
test
jnp
xchg
push
fbld
cmp
dec
push
iret
jp
test
mov
inc
ljmp
push
fs
nop
sbbb
push
outsb
loope
pop
sar
xchg
and
pop
xchg
fisubrl
rcrl
jae
lock
mov
or
insl
inc
xor
pusha
mov
lret
cs
aaa
mov
cltd
mov
ss
inc
dec
mov
xchg
push
add
mov
mov
push
bound
fcmovu
dec
int
cmp
in
hlt
pusha
sub
pop
sub
sub
jno
addr16
rcrl
dec
mov
gs
in
xchg
pop
call
xor
xchg
inc
subb
dec
inc
imul
lods
mov
rcll
in
imul
and
loop
and
cmp
dec
xchg
cli
mov
xor
cmp
in
out
sbb
out
pushf
pop
shrb
inc
push
imul
cmp
sub
sbb
inc
sbb
sub
add
jo
popf
mov
outsb
hlt
xorl
or
or
bound
addr16
loopne
out
cmpsl
pop
mov
pusha
push
dec
cmpsl
cwtl
aad
pop
and
daa
mov
pop
push
lcall
jle
test
jns
test
or
inc
std
shll
mov
cli
ss
inc
sbb
add
rcrl
lock
or
pop
test
and
cli
mov
xor
xchg
sti
jecxz
dec
adc
pop
insb
dec
lcall
add
or
scas
inc
push
pop
push
inc
leave
aaa
cld
or
loop
jae
rcl
inc
loope
aad
mov
push
inc
push
call
mov
js
dec
in
jg
pop
pop
xor
test
out
xchg
inc
enter
or
hlt
jecxz
pushf
int3
std
push
push
idivb
inc
pop
sbb
lea
enter
lret
ja
dec
insb
das
sbb
fnstenv
in
cmp
push
iret
mov
fmull
enter
jmp
sahf
clc
sti
push
pop
mov
lods
inc
xor
push
cwtl
adc
in
xchg
push
cmp
jns
push
push
push
popa
fwait
std
dec
mov
scas
js
or
or
je
rcll
into
xor
mov
je
test
mov
add
rolb
sub
mov
movsb
fs
inc
cli
add
outsb
ja
xchg
pop
sub
in
dec
stos
mov
add
popa
ss
mov
mov
pop
call
mov
pop
sti
xchg
aam
cvtps2pi
add
js
add
rclb
inc
mov
sti
rorl
sbb
insl
lock
repz
dec
mov
shl
arpl
out
repz
addl
cli
xor
jns
push
fsubrl
push
or
xchg
mov
fistpll
fisubrl
daa
lret
addl
lock
xor
xorb
xor
lock
in
cmpsb
rcr
rcr
pusha
push
mov
ficoms
mov
and
pop
jge
inc
or
inc
add
popf
mov
rclb
les
add
fcomi
xor
xchg
mov
loopne
pop
sub
cmpsb
in
inc
sbb
gs
aad
sub
mov
lahf
push
inc
pop
add
fisubrs
sub
lock
insl
fnstsw
cld
jbe
out
jae
inc
add
ljmp
arpl
aas
leave
aaa
xchg
or
pop
lods
lods
add
xor
fdivs
mov
push
or
sbb
hlt
imul
imul
arpl
jns
cwtl
mov
lahf
mov
rorb
sub
stos
movsl
push
test
mov
xor
inc
sbb
cmc
ds
aas
int3
aaa
aam
je
or
sbbl
ja
push
jmp
xor
jae
sbb
scas
lret
add
jle
sti
repnz
cmpsl
in
ret
mov
add
bound
out
gs
int
push
xchg
movsb
pop
lahf
test
imull
cli
mov
ud2
or
ficompl
push
inc
leave
add
ja
mov
inc
les
jnp
or
lea
pushl
dec
rcll
xchg
xor
fiaddl
jno
mov
in
xchg
mov
test
shrb
fildl
pop
mov
sbb
mov
mov
cwtl
push
push
jo
fisubs
push
ljmp
test
iret
je
jo
push
fwait
fs
lock
fwait
outsl
lds
jle
push
shr
js
js
imul
adc
lods
mov
jae
pop
xlat
xchg
sbb
aas
enter
cmp
jnp
fildl
mov
je
sbb
out
adc
cwtl
dec
jae
js
jb
inc
ljmp
adc
clc
dec
mov
bound
in
rcr
push
jg
in
pop
pop
das
adc
mov
shlb
push
pop
int
psubusw
sub
rcrl
out
mov
push
mov
cmp
push
imul
imul
lret
sti
cmpsb
mov
push
mov
push
jl
or
bsr
mov
cli
mov
xchg
adc
xor
jo
mov
dec
test
sub
bound
push
cs
sub
cmpsb
cmpsb
jns
mov
nop
jge
cmp
push
fildll
jp
mov
sub
adc
setg
mov
push
xor
mov
mov
jno
call
adc
dec
mov
lea
and
xchg
out
pop
pop
dec
scas
push
cs
jb
push
out
or
sahf
cmpsb
cmp
mov
push
testl
idiv
adc
jb
das
mov
mov
lcall
add
jge
cmp
in
pop
cmp
add
and
fistl
xor
sub
in
loop
sbb
decb
or
clc
jno
jnp
sbb
xlat
arpl
fwait
mov
xchg
loopne
and
sbb
adc
xor
jp
xchg
stos
popf
sahf
pop
xchg
cmpsb
lea
jg
addl
testb
punpcklbw
jne
sub
testl
rcll
or
dec
mov
dec
nop
jno
clc
incb
jne
movsl
sub
push
into
addr16
xchg
int3
add
dec
in
pop
test
dec
mov
jp
cmp
xorl
sbb
aam
dec
arpl
outsl
mov
insl
push
arpl
mov
ret
ret
cmpsl
mov
jae
pop
mov
sub
mov
fs
sbb
push
sbb
les
sbb
stos
lcall
and
ret
jp
mov
mov
xor
inc
sbb
scas
testl
mov
test
test
pop
lret
push
ljmp
or
cltd
inc
das
pushf
into
rorb
add
mov
push
loop
movsl
sbb
int3
add
xor
mov
jp
nop
mov
aad
scas
add
jns
leave
insl
scas
mov
xor
jne
mov
out
adc
push
pop
sbb
push
imul
cmpsl
add
push
mov
andb
add
pop
push
sub
js
jo
xchg
mov
aam
add
xchg
add
pusha
dec
jmp
aaa
data16
mov
gs
fs
xchg
ret
test
cld
jb
jge
mov
cmpsb
pusha
out
dec
push
stos
imul
push
in
mov
adc
jp
dec
add
ss
lcall
jnp
mov
roll
mov
dec
mov
mov
cmp
xchg
add
mov
jle
lcall
cmpsb
push
adc
mov
repnz
vsqrtps
pop
stc
popf
andb
outsl
jl
adc
shlb
sbb
jnp
aad
std
xchg
or
mov
push
add
xor
jno
or
jp
dec
sbb
cmp
std
jno
lcall
cld
jo
push
call
inc
mov
je
lret
push
lahf
dec
jo
loope
xlat
sbb
sahf
scas
jge
iret
pop
mov
das
pop
jg
fs
or
dec
sbb
insl
jbe
pop
mov
push
xchg
sbb
cltd
pop
fmuls
lret
cmp
iret
inc
sub
jbe
mov
xchg
stc
cli
jge
arpl
bound
sbb
arpl
jge
push
out
xchg
xor
ja
fucomp
shl
in
enter
arpl
push
es
inc
popf
push
dec
sbb
add
aam
push
dec
test
jae
sbb
sub
js
xchg
or
xchg
inc
scas
xorl
insl
cmp
in
clc
lock
cld
stos
shrb
das
inc
jne
adc
push
pop
call
imul
pusha
inc
les
out
lds
pop
movsb
and
aaa
xchg
daa
leave
mov
pop
and
enter
adc
sti
mov
jl
adc
push
popa
jmp
leave
dec
imul
sti
and
mov
cmpsl
mov
fmull
xor
mov
mov
ret
pusha
jge
insb
mov
jno
cmp
call
mov
mov
push
in
aad
push
stos
mov
sbb
sar
lea
rclb
test
mov
jmp
cmp
mov
push
sub
scas
rcr
sub
pusha
cmp
sbb
mov
cwtl
cmpsl
popa
lea
mov
pusha
pop
decl
pusha
mov
adc
mov
test
pop
daa
fabs
out
and
outsb
sti
jp
mov
leave
ss
fisttpl
out
add
loop
inc
lret
sbb
jbe
cmc
cmp
jp
pop
insl
rep
inc
repz
fsubp
aaa
xor
cmpsl
pop
push
stos
out
mov
rcll
imul
xor
icebp
mov
mov
fstps
popf
adc
dec
cwtl
in
pop
hlt
xor
fcmovu
fs
xchg
enter
sub
pop
addr16
sbb
cli
mov
repz
divl
out
and
cmp
dec
data16
add
push
push
sub
movsb
xor
int
add
pop
mov
pop
outsl
push
add
add
lods
pop
pop
movsb
sbbb
cld
push
hlt
rcrl
lods
mov
push
mov
shlb
insb
lock
sbb
mov
jb
out
xchg
adc
fwait
xor
andb
dec
push
cmpsb
lds
mov
fldcw
rclb
jb
cmc
cs
int
leave
xlat
cwtl
rolb
imul
enter
adc
andl
orb
out
dec
cwtl
mov
inc
out
push
movsl
cltd
scas
xchg
test
aad
xor
jle
ja
fdiv
xchg
jb
adc
sbb
mov
fistps
mov
xchg
pop
jbe
rcr
push
cli
insb
lret
imul
movsb
add
repz
jns
jmp
jecxz
outsl
fwait
adc
mov
inc
mov
sti
idivl
mov
add
cmp
add
pop
mov
and
mov
add
scas
mov
sahf
dec
add
mov
sub
sub
imul
cwtl
in
add
or
insl
xchg
movsl
pushf
push
aam
sub
mov
pop
imul
scas
sub
add
out
add
les
popa
jg
xor
sub
sub
xchg
adc
lret
adc
rorb
mov
xlat
and
dec
movsl
dec
movsl
mov
or
cmc
enter
fcoms
cmp
mov
das
fcmovu
pop
lcall
mov
adc
fcmovnu
jmp
dec
sub
jg
sbb
cmp
aaa
mov
mov
popf
or
pop
xor
sarl
and
out
test
jbe
jo
in
call
fistpll
mov
mov
cmp
pop
inc
iret
mov
fwait
push
in
je
or
dec
jno
int
push
cmc
les
cmc
repz
cmp
mov
in
mul
bound
loop
pop
dec
xchg
sub
rcrb
mov
pop
or
sub
mov
inc
inc
pop
pxor
adc
leave
jns
test
mov
into
hlt
lahf
ja
and
pop
imul
pop
mov
jae
sahf
sub
mov
fdivs
dec
mov
outsb
shr
cmp
cld
pop
and
add
adc
and
stc
and
imul
into
mov
xchg
loopne
cmp
dec
push
fincstp
xor
jb
in
sub
xor
das
mov
or
adc
add
mov
nop
sahf
mov
sbb
movsl
leave
andb
outsb
ds
shl
iret
jbe
sub
mov
lret
mov
push
cmp
ret
pop
test
pop
dec
inc
stos
xchg
out
addr16
rorl
xor
std
push
inc
clc
mov
inc
add
pushf
rorl
scas
fisubrs
add
dec
mov
insl
sub
pop
cmp
jns
icebp
stos
sti
inc
out
pop
push
jo
mov
test
jno
add
mov
aam
loope
call
fbstp
not
or
jp
lret
push
je
jb
iret
mov
mov
jmp
subl
jg
push
mov
push
insb
fbstp
jle
xchg
aad
jg
and
test
es
jns
rorb
ret
and
mov
push
arpl
testl
jge
xchg
scas
xchg
cmp
xchg
lods
mov
sahf
add
lahf
adc
insl
arpl
cmp
bound
inc
mov
mov
fstpl
cmp
addr16
mov
add
xchg
mov
call
je
aad
dec
xchg
fmul
and
pop
dec
fstps
inc
push
clc
call
xor
mov
push
or
xchg
mov
push
rcll
inc
leave
arpl
mov
insb
out
jnp
icebp
out
cmp
xchg
in
les
pop
adc
xchg
pushf
xchg
jmp
xchg
test
orl
cwtl
decb
iret
xchg
pop
jb
test
jbe
xchg
sbb
jne
out
push
movsb
and
adc
ret
mov
lea
shl
and
movsl
and
mov
nop
cmp
cmp
dec
cltd
fs
cmpsb
sub
jg
sahf
mov
rolb
stos
ja
dec
insb
popa
dec
js
jo
pop
outsb
xor
ffreep
fsubrs
mov
ds
and
dec
cmpsb
and
test
gs
pop
push
mov
lds
jb
inc
sbb
jp
gs
shr
mov
jle
push
into
pop
xor
stos
andnps
jns
mov
mov
xchg
cmpsb
push
inc
cli
loope
call
jp
mov
movb
mov
lahf
dec
dec
dec
in
sub
and
rolb
fstl
test
idivb
bound
dec
jg
iret
enter
jo
and
out
je
scas
xchg
push
cmpsl
jb
dec
cmpsb
jne
dec
and
inc
sahf
add
repnz
inc
push
lds
out
jae
mov
cltd
sub
bound
sbb
leave
add
pop
cmp
scas
test
sbb
inc
imul
sar
loopne
popa
push
es
scas
add
mov
jno
sarl
das
adc
nop
xor
jnp
xchg
mov
mov
fbstp
scas
cmp
or
icebp
rcrl
mov
pushf
adc
xchg
imul
stos
lock
decb
pop
xchg
gs
int3
push
mov
jbe
xchg
ja
je
das
stos
jbe
in
repnz
mov
cld
movsl
stos
mov
std
movsb
dec
adc
or
mov
mov
mov
dec
push
push
mov
jns
cmp
push
sbb
in
into
pusha
filds
test
movsl
xchg
daa
sbb
arpl
xchg
jnp
data16
jmp
fld1
leave
and
int3
clc
sti
sbb
pop
add
jmp
loope
mov
stos
sbb
test
cld
cwtl
fadd
pop
aas
outsl
imulb
xchg
push
cmc
mov
inc
fld1
sti
xchg
insl
outsl
pop
daa
lret
dec
mov
jae
test
adc
xchg
push
scas
mov
jg
jg
push
xor
jmp
sbb
add
stos
loop
add
cmp
int
jl
sbb
imul
ret
cmp
nop
scas
test
mov
test
cmpsl
inc
fs
std
xor
adc
mov
adc
fcoml
clc
fdivs
pop
mov
jne
sar
pop
sbb
mov
sbb
aas
and
out
lcall
jno
popa
out
mov
int
jne
push
inc
sbb
hlt
shr
fldcw
imul
mov
ret
aaa
es
cmp
pop
je
push
lds
dec
arpl
mov
int3
pop
les
jg
jno
jae
pop
jecxz
push
imul
lahf
popa
cmpsb
push
decl
ret
xor
aas
add
test
mov
jmp
insb
pusha
add
adc
test
addl
scas
stc
fcomi
fstpt
dec
xchg
movsb
cltd
roll
inc
dec
ljmp
test
inc
dec
or
js
add
and
sbb
lods
rorl
bound
xor
icebp
dec
pop
dec
in
pop
mov
fistpll
aad
aas
scas
mov
sbb
lea
push
fadds
popf
push
andb
jnp
push
out
test
gs
dec
mov
cld
cmp
mov
pop
push
std
fcoms
pop
outsl
shll
data16
sbb
xlat
addl
stos
mov
aam
flds
sbb
aam
mov
iret
shl
mov
mov
push
xchg
jge
push
insl
hlt
int
cltd
scas
movsl
repz
cmp
pop
sbb
aaa
jbe
sbb
popa
icebp
xor
lock
shl
push
pop
jns
jno
inc
or
out
decl
adc
aam
mov
stc
push
or
cmp
cmp
hlt
xchg
mov
sub
fisubrl
pop
stos
dec
and
les
aas
cmp
in
ficompl
aaa
lds
mov
add
shll
loop
push
addr16
jl
inc
inc
jne
inc
in
push
jecxz
movb
pop
imul
adcb
xor
jle
cmp
fcmovu
les
jbe
jb
jle
pop
dec
aad
adc
lods
dec
mov
inc
xchg
shr
aaa
in
xchg
jae
push
out
dec
inc
movsb
xor
inc
out
pop
xor
mov
in
rorb
jne
pop
or
repz
cwtl
mov
les
rcll
or
roll
loopne
mov
sbb
xor
sbb
leave
pop
and
out
push
mov
inc
imul
mov
jge
push
ljmp
insb
lock
vcvtsi2sd
adc
push
or
mov
push
lds
decb
sahf
pop
orb
out
enter
sbb
orb
frstor
es
xor
jne
jae
out
outsb
mov
data16
clc
push
mov
in
bound
cltd
fldln2
clc
push
lret
dec
aaa
popa
sbb
outsl
mov
jnp
lahf
pop
mov
xor
mov
jns
aad
es
sahf
lret
fdivs
out
lret
cmp
movsb
mov
lret
lods
and
pop
cmp
jns,pt
cmc
xchg
cmp
in
mov
mov
mov
cs
fnsave
sahf
mov
jle
jle
das
pop
sbb
orl
push
cld
mov
cmp
push
into
add
xchg
jle
pop
or
xlat
jmp
mov
and
outsb
and
out
sub
xor
push
hlt
out
add
inc
sbb
sbb
cmp
mov
sti
mov
lods
pop
mov
mov
mov
adc
sbb
and
out
dec
outsb
add
loope
or
mov
push
mov
jecxz
je
mov
and
stc
inc
jno
dec
jge
cmpsl
movsb
dec
push
jns
mov
jnp
sbb
add
or
mov
and
pop
adc
push
rcl
ljmp
jmp
mov
insl
enter
push
aaa
in
int
in
cs
mov
pop
adc
out
std
in
stc
ss
cli
mov
es
testl
mov
mov
ficomps
into
xchg
movsl
ds
xor
mov
fidivrs
xor
stc
andb
outsl
add
addr16
adcb
add
dec
movq
or
pushf
dec
add
cmp
enter
push
call
decb
pusha
pop
mov
into
pop
pop
adcb
sbb
push
cs
mov
xchg
push
fbstp
dec
mov
jmp
cmp
add
fmull
mov
mov
stc
sbb
mov
and
adc
mov
or
pop
inc
fsub
push
push
fdiv
add
out
add
into
xchg
enter
push
pop
mov
mov
imul
aaa
mov
sbb
popf
hlt
out
sbb
mov
fiadds
je
stc
dec
les
fcomps
xor
gs
inc
jnp
rorl
fdivrp
cmp
shll
shrl
ret
mov
mov
pop
sbb
loope
xor
mov
inc
mov
jae
jo
into
sbb
ja
jb
inc
mov
mov
mov
notl
clc
add
jbe
push
ljmp
in
add
fimuls
out
mov
pop
outsb
inc
pushf
and
adc
rcrl
mov
ja
xor
andb
pushf
push
nop
outsb
repnz
pop
test
cmp
xchg
mov
vpsubd
dec
mov
gs
jmp
gs
je,pt
pop
aam
fld
dec
dec
xchg
and
stc
add
inc
push
mov
jnp
mov
fisubrl
orl
pop
stos
lahf
stos
and
pop
inc
sbb
mov
or
push
jmp
lret
dec
add
insb
rsqrtps
push
sbb
loop
aaa
and
popa
lods
mov
pop
movsl
jle
mov
test
and
cmp
adc
dec
xor
fstl
lock
dec
dec
xchg
fcmovne
jo
cli
jmp
cmp
pop
sbb
leave
xor
pop
push
add
inc
inc
scas
mov
xorl
and
pop
frstor
decb
jno
and
iret
ljmp
mov
xchg
mov
pop
cltd
pop
pop
outsl
aaa
jb
jb
pop
bound
mov
xchg
mov
inc
xor
add
mov
in
or
repz
out
sub
lock
inc
out
dec
xor
enter
aam
jp
test
dec
iret
mov
movsb
pushf
dec
mov
xor
dec
orl
shrb
push
push
push
push
inc
and
repnz
xor
lret
xchg
ss
sub
pop
out
pop
cltd
jnp
xchg
cli
popl
cmp
cmc
cmp
push
cmpb
sub
add
ret
aas
sbb
ja
xchg
stos
mov
adc
mov
call
or
xchg
arpl
lea
and
in
lods
mov
rorl
cmp
nop
pop
cli
aad
faddl
imul
in
int
pop
xchg
scas
in
stos
adc
popf
ret
xlat
add
cmp
sub
movsl
repz
fmull
add
fdivl
subb
lret
jle
mov
sub
repz
jg
pusha
sbb
push
or
adc
jo
insl
cmc
icebp
das
dec
mov
fisttpl
and
xchg
mov
push
outsl
cmp
outsl
add
mov
bound
add
sub
cli
lea
and
outsb
push
pop
jp
push
aad
adc
dec
pop
sbb
scas
sub
pushf
loop
aam
das
test
clc
sbb
popa
push
sub
and
pop
rclb
mov
daa
test
cli
cmp
insl
or
mov
mov
call
lods
clc
pop
call
clc
scas
or
mov
rclb
sbb
aas
test
ret
pop
inc
aam
add
push
inc
in
jecxz
stos
jle
leave
mov
jle
fmul
cltd
lea
adc
cmp
mov
pop
jo
fsubrs
dec
icebp
clc
sub
into
inc
dec
xchg
fwait
xlat
adc
jbe
fmuls
cmp
fldenv
mov
subl
sub
test
in
mov
pop
pop
xor
idiv
inc
fcomp
popf
jne
stos
fidivrl
sub
mov
imul
xor
jne
pop
cmp
std
xchg
pop
adc
adc
mov
lret
xchg
pop
dec
sarl
aad
cmp
fdivrs
je
sbb
bnd
mov
mov
and
inc
out
popa
add
jmp
mov
subl
mov
add
inc
xchg
push
adc
push
sub
gs
cmp
lahf
push
jnp
addr16
pop
push
adc
das
cltd
push
roll
sub
xor
push
popa
sub
in
inc
jno
fidivl
rcrb
imul
sub
dec
mov
mov
jmp
mov
pop
mov
inc
fildll
or
push
jecxz
sub
fnstsw
sbb
sbb
lods
pushf
adc
repnz
jge
lds
lods
paddsb
aam
and
and
adc
jp
ret
xchg
scas
xor
add
pop
rcl
cmpsl
cmc
stos
dec
mulb
repz
test
out
pop
pop
jge
insl
inc
add
addr16
and
addb
add
mov
lds
adc
aas
and
int3
push
sbb
call
inc
mov
mov
sbb
arpl
and
cmp
jmp
popf
lods
mov
push
inc
imul
and
pop
xor
jb
in
mov
xchg
pop
inc
clc
mov
fistpl
test
ror
adc
mov
pop
in
push
std
push
mov
or
pushf
jg
arpl
fmuls
int
out
ljmp
sahf
hlt
xor
mov
out
cmpsb
xor
imul
sbb
mov
frstor
stos
hlt
cmp
loop
push
cmp
hlt
fiaddl
popf
sub
xor
mov
jg
xchg
mov
and
fdivs
push
mov
inc
int3
pop
ja
push
outsl
jecxz
out
imul
lods
fwait
ret
rorb
sbb
cmc
repnz
fidivrs
jge,pt
xlat
in
pop
mov
jle
scas
fdivl
subl
ffreep
or
inc
sub
ficoms
cmp
repz
stc
inc
ret
jl
push
mov
inc
jecxz
pop
dec
push
push
out
out
mov
cmp
pop
loopne
inc
push
outsl
call
push
push
shl
pop
xchg
dec
flds
rcll
push
adc
mov
ror
mov
popf
andb
sub
push
sbb
and
add
xchg
add
jl
cs
enter
inc
jno
das
mov
sub
arpl
sub
sub
bound
js
mov
js
pop
inc
pop
mov
fwait
js
insb
fidivrs
xor
adc
aad
in
cmp
pusha
notb
mov
imul
repnz
xor
fldl
les
jnp
add
inc
lock
shrl
xchg
scas
je
jne
shll
pop
or
lret
dec
push
mov
addr16
and
sti
cltd
dec
stc
jle
add
rorl
cmpsl
clc
stos
lds
inc
pop
jg
mov
int3
les
inc
jl
sub
cmp
mov
fbld
add
insb
inc
inc
test
push
or
shlb
test
xor
pusha
shl
fisubrl
add
arpl
movsl
popa
scas
test
inc
negb
push
insl
fsts
rclb
jle
cmp
jnp
or
inc
and
add
dec
inc
mov
fistpll
mov
xchg
inc
in
movsl
dec
out
js
or
or
loop
mov
xchg
push
cltd
jo
sbb
push
in
add
shlb
xchg
mov
addr16
pop
dec
lock
loopne
jmp
or
movsl
or
je
pop
mov
shrb
adc
jae
dec
sbbl
push
pusha
lcall
mov
or
jge
fcomi
rcrb
mov
out
cld
xor
pop
jmp
or
pop
inc
enter
adc
adcl
imul
xor
inc
hlt
into
outsl
aas
dec
out
sbb
cmpsb
popf
dec
test
mov
mov
outsl
jmp
dec
data16
add
imul
or
jle
xchg
sbb
and
push
arpl
in
pop
dec
or
je
loop
adc
jb
cmp
xchg
jne
leave
or
jmpw
push
jmp
xor
loope
jg
lahf
sub
in
mov
adc
daa
inc
shll
test
or
xchg
cld
repz
cmpsl
ret
out
xchg
xor
mov
aad
jne
daa
inc
cld
mov
pmaddwd
stc
std
shl
daa
xor
cmp
push
add
mov
mov
adc
push
dec
fchs
int3
and
pop
and
in
gs
mov
movsb
dec
mov
mov
mov
mov
xchg
jb
dec
stos
cmp
cmp
mov
sbb
outsb
popf
push
ret
jo
outsb
mov
imul
sbb
cmp
mov
jns
sbb
xor
cltd
xchg
mov
mov
incl
cmp
inc
repz
sbb
ljmp
mov
outsb
push
push
les
and
adc
inc
pop
adc
adc
pop
sub
xor
sub
cs
imul
notb
push
pop
imul
dec
fdivrl
sbb
rorl
sahf
or
mov
mov
and
and
dec
or
push
dec
lods
or
jle
and
repz
sub
push
aam
divl
cli
add
cwtl
mov
inc
daa
xchg
push
ret
jecxz
jb
enter
sub
shrl
pop
into
cmp
or
jp
shr
lcall
pop
push
jb
sbb
cmp
pop
push
push
xchg
sbb
pop
lahf
add
push
pop
add
mov
rol
cli
mov
or
xlat
mov
ror
jae
aam
cmp
cwtl
dec
arpl
ss
and
xchg
xor
int3
adc
in
pusha
push
cmc
and
pop
or
xor
mov
sub
mov
sub
stc
cld
popa
insl
push
test
lret
daa
dec
push
or
lahf
push
lret
mov
sub
jno
push
jmp
into
and
jae
and
idivb
insb
dec
jg
fisubrs
cmpsl
ret
or
ret
add
mov
push
sub
fisubs
add
fdivrl
ret
pop
xor
roll
in
xor
imul
or
add
push
cs
and
dec
push
insb
dec
imul
inc
cwtl
bound
fisttpl
xchg
dec
out
cmp
sti
sbb
lods
jle
dec
hlt
sbb
lahf
mov
lock
add
jae
nop
jmp
dec
jbe
paddw
adc
sub
xchg
adc
sti
lock
push
jmp
insb
push
aad
sub
xchg
aam
xor
shll
pop
pop
and
imulb
decl
jp
insb
shll
les
sub
mov
int
fisubrl
in
out
push
lds
addb
jae
call
mov
or
lea
xchg
jb
and
jg
or
nop
add
lods
in
lcall
test
stc
fsubs
adc
sub
fsubl
xor
clc
sub
xchg
into
shlb
int
cld
xor
es
sbb
sbb
push
pop
pop
and
xchg
jl
jmp
adc
fcoms
or
in
aad
xchg
jo
xchg
cmp
ss
mov
outsb
jnp
push
pop
sbb
test
add
data16
jo
cwtl
adc
sbb
pop
jo
jecxz
aas
xchg
fwait
not
or
sbb
add
push
out
jbe
fsubp
test
ljmp
push
mov
cmp
or
mov
mov
xorb
dec
push
mov
and
cmc
adc
dec
pop
inc
jb
test
repnz
dec
stos
push
push
test
jae
push
mov
or
dec
lret
sbb
cmc
jno
jge
fistl
cmc
add
test
pop
lods
je
jbe
cltd
dec
stos
xchg
cs
sahf
decb
sbb
mov
fisttps
aam
push
xor
data16
mov
ret
xor
mov
sub
fists
fists
mov
mov
jb
mov
les
jbe
mov
push
cmp
test
addr16
mov
xor
cmpsb
and
xchg
pushf
fs
dec
jns
lods
push
aad
adc
imul
xor
sub
icebp
loope
das
cmp
out
xchg
sarb
insl
out
insb
cmp
popa
inc
and
sub
inc
xlat
mov
mov
cwtl
pop
jecxz
add
cmp
jecxz
leave
dec
daa
jbe
push
mov
ficompl
call
lret
mov
sbb
out
es
push
jmp
loop
mov
test
fnsave
xchg
dec
les
adc
out
push
or
fldl
orl
sbb
or
pop
push
mov
jns
sub
sti
rcll
arpl
test
cmp
xchg
inc
int
xchg
sti
les
adc
cmpsl
lahf
or
dec
cltd
mov
ffreep
pop
push
dec
pusha
cltd
push
push
dec
xor
xor
pop
push
push
popa
push
lahf
fcomps
nop
outsb
outsl
enter
cmpsl
and
fdiv
inc
psadbw
push
inc
pop
rdtsc
mov
stos
inc
call
in
pop
push
xchg
divb
into
fcmovne
xor
xor
push
data16
aad
dec
and
pop
movsb
icebp
mov
test
fistl
pushf
fcmove
stos
fucomip
popf
pop
sub
push
dec
xor
insl
and
jns
pop
jnp
inc
sbbb
dec
dec
add
lcall
pop
mov
xchg
inc
mov
stos
dec
push
pop
xor
xchg
scas
dec
push
and
mov
stos
mov
mov
push
adc
das
aam
jg
enter
adc
cmpsl
xchg
leave
mov
fcos
lods
sti
insb
mov
fmul
dec
xor
xchg
cltd
inc
not
push
test
adc
enter
cmc
test
sub
add
loope
enter
stos
push
dec
pop
clc
cmpl
and
inc
pop
adc
xorl
jmp
clc
mov
jb
mov
add
add
xchg
hlt
daa
adc
xchg
ja
pop
in
ret
ret
es
call
push
out
mov
stos
jmp
ret
add
sbb
fwait
fs
lahf
stos
xchg
lea
icebp
imul
repz
pop
pop
rcr
mov
jl
xchg
rorl
repz
push
test
adc
cmp
xchg
addr16
movsb
addr16
arpl
sbb
dec
pop
ja
outsl
jmp
jae
ljmp
pushf
add
pop
into
fidivrl
test
xor
mov
test
lods
nop
cld
lahf
push
in
add
sub
and
xchg
sub
push
mov
inc
repnz
push
cmp
fbstp
xchg
push
into
mov
xor
ret
pop
mov
mov
add
inc
jmp
sahf
and
testl
mov
addb
inc
push
ljmp
je
xchg
fcmovb
out
rorb
add
cmp
js
or
dec
jge
data16
push
jecxz
pop
sbb
test
pushf
stc
mov
mov
outsb
daa
mov
inc
or
fiaddl
ja
adc
bound
andl
dec
dec
cmp
mov
orb
dec
mov
test
inc
jmp
sub
fistpll
mull
mov
add
ret
pop
enter
sarb
jp
xor
sar
lea
shrb
mov
inc
loop
iret
call
dec
mov
in
xchg
imul
dec
filds
std
lds
jns
xchg
inc
imul
jmp
imul
jbe
test
mov
mov
adc
or
adc
sub
push
sub
clc
rolb
add
aas
mov
imul
xlat
pusha
nop
dec
push
dec
jp
std
in
fwait
cmc
aam
mov
jne
adc
loope
movsl
test
ja
inc
pop
dec
movsb
test
pop
add
rcr
sbb
cwtl
ljmp
clc
fwait
sahf
inc
insb
cmp
pop
test
sbb
lcall
bound
xor
out
xor
sbb
sarl
xor
es
rorl
jl
push
push
jle
pop
inc
mov
lods
stc
jl
test
jl
dec
and
adc
add
sbb
jg
cmp
mov
push
jl
ljmp
pop
jle
dec
sbb
jae
xchg
ds
rol
jmp
adc
test
cltd
and
push
xchg
cld
sub
leave
push
mov
xor
cli
adc
mov
int3
or
pop
loope
pop
dec
ret
cwtl
pop
cmp
adc
add
xchg
inc
pushf
xor
xor
jp
xor
or
cmp
fnsave
ja
call
mov
data16
ja
addr16
lods
inc
add
loop
xchg
stos
popf
push
ror
mov
aas
out
aam
mov
arpl
in
arpl
push
mov
adc
adc
shl
in
push
add
lods
and
js
inc
xor
ret
lret
shlb
dec
xlat
adc
jae
xor
aaa
dec
or
xchg
sar
and
pop
pop
xchg
ss
and
mov
movsb
mov
out
test
mov
mov
shr
jp
xchg
and
aas
lds
add
push
mov
cmp
push
push
xchg
lods
imul
daa
scas
pop
or
jo
adc
cwtl
jnp
ljmp
fisubl
cmp
hlt
xor
adc
shr
fildl
dec
or
adc
das
add
inc
inc
cmp
jbe
mov
add
mov
in
es
sbb
mov
push
mov
cli
adc
dec
iret
test
insl
dec
and
pop
pop
movsb
loope
and
sub
cmp
push
popf
lods
outsb
mov
push
gs
aas
mov
xor
gs
das
int3
cltd
push
mov
cmp
or
mov
xchg
rcr
shll
sub
lret
xchg
clc
push
call
data16
sahf
or
mov
int
ret
or
loope
mov
adc
andb
scas
xlat
out
mov
popf
xchg
xor
adc
mov
add
sub
or
mov
shlb
arpl
pop
das
dec
adc
arpl
mov
or
dec
loop
cmpsl
leave
fisubrs
icebp
pop
sbb
dec
sub
stos
add
jp
nop
repz
add
rorl
scas
push
out
and
pop
aam
shlb
int
inc
mov
push
orb
pop
or
jno
or
in
movsl
enter
xchg
lds
bound
int3
inc
xchg
lock
jnp
mov
sub
ljmp
xchg
ret
lahf
cmp
jne
enter
daa
dec
mov
push
xchg
test
arpl
das
xchg
xchg
scas
pop
lock
ss
mov
or
jbe
mov
icebp
inc
leave
inc
or
sbb
mov
mov
jno
ljmp
lret
add
cli
inc
pop
cmpsl
pop
in
sbb
arpl
xchg
xor
mov
push
xchg
cmp
sarl
mov
fmuls
mov
fistpl
mov
bnd
nop
xor
inc
inc
cmp
aaa
cmp
das
fisubl
in
dec
mov
dec
jge
sub
cld
dec
int
jecxz
aas
mov
iret
xlat
xchg
aad
lahf
mov
enter
sub
adc
xchg
pop
aas
push
pop
rclb
cmpsb
xor
and
ss
dec
fwait
stos
cli
and
comiss
data16
hlt
daa
ja
and
or
jnp
jmp
lahf
and
xchg
cltd
mov
mov
lahf
repz
or
loop
pushf
xchg
xchg
pop
mov
sar
or
fwait
ljmp
test
inc
xchg
sarl
push
add
dec
andl
shll
mov
sbb
mov
ret
sub
jl
xchg
cwtl
imul
arpl
nop
add
pop
clc
dec
mov
sbb
cli
inc
gs
movsb
lret
pusha
or
sub
adc
rcrl
andl
hlt
sub
adc
jp
cmpsl
daa
ja
insb
std
sbb
lods
jns
pop
mov
inc
inc
sbb
push
dec
lret
xor
fiaddl
sub
inc
pop
insl
cli
sahf
adc
inc
flds
clc
fdivl
jmp
lods
mov
aaa
test
mov
jg
stc
mov
cmpsb
xchg
pop
jg
mov
jae
xchg
fbld
sbb
stc
sbb
shrl
arpl
mov
and
jne
js
inc
pop
into
jne
fcoms
out
or
pop
popaw
xchg
push
pop
dec
pop
popa
adc
push
or
mov
mov
dec
mov
fnstsw
test
pop
push
lock
xchg
cli
or
jo
aas
mov
insb
cmp
push
aad
mov
frstor
mov
aam
pop
lods
rsqrtps
nop
cltd
rcrb
inc
in
fstl
dec
add
jecxz
dec
push
mov
mov
cmp
sub
mov
xor
pop
cld
dec
mov
insb
add
test
fwait
jbe
stc
fildl
ja
mov
mov
push
push
mov
data16
xchg
adc
in
lea
ljmp
cmp
jl
add
jle
pop
jbe
pusha
mov
movsb
or
je
outsl
loopne
cltd
sub
jno
push
loop
xchg
fsubrl
popf
sub
jge
dec
xchg
jne
jo
mov
pop
mov
push
iret
dec
mov
inc
xlat
xor
das
mov
adc
lcall
mov
ret
rcrb
dec
addr16
out
aam
adcb
out
mov
jge
pop
popa
push
nop
mov
jp
je
ss
in
and
mov
pop
xor
jmp
fldcw
add
xchg
adc
push
push
rcr
pushl
xor
orb
dec
cwtl
jge
sbb
in
push
adc
leave
fcompl
mov
sbb
and
mov
sub
fs
sbb
push
mov
mov
mov
lods
sbb
test
add
mov
rcll
aaa
call
sub
sub
jb
or
fcoms
or
or
mov
inc
cmp
into
ss
fnstsw
push
dec
fbstp
sub
dec
movsl
je
xchg
mov
int3
sbb
and
lock
mov
xchg
test
jmp
ja
popf
ljmp
sub
pop
addr16
adc
jns
pop
push
cmc
aad
xchg
insb
fistps
clc
incb
pop
mov
pop
inc
or
test
mov
mov
lods
mov
xor
push
sbbl
lods
fcomps
stc
mov
mov
dec
mov
push
popa
pop
xchg
ja
mov
inc
mov
shlb
lahf
and
push
inc
fwait
repz
fdiv
incb
xchg
fisttpll
and
stos
xor
mov
add
inc
ret
je
out
pop
neg
cltd
mov
es
pop
jmp
jo
sub
lahf
push
pop
aas
xchg
hlt
cmp
cmp
jnp
cmp
psubw
xor
mov
dec
addr16
mov
push
mov
xchg
scas
nop
out
mov
sahf
inc
push
cmp
dec
cmp
xchg
xor
es
xchg
nop
hlt
cmp
aam
fldcw
stos
adc
out
push
imul
cld
das
xlat
jge
pushf
lea
dec
xchg
or
outsl
cltd
lock
mov
or
aaa
mov
mov
fcompl
aas
shrb
mov
enter
in
fadds
dec
add
cmp
shll
pop
and
into
sti
jg
cmpsb
mov
cmc
push
pop
or
mov
jle
int
jbe
int
inc
mov
mov
push
push
and
mov
fwait
cltd
xor
push
pop
orl
xchg
sub
cmp
andl
rcll
enter
inc
push
xchg
lods
mov
and
shll
push
notb
jmp
sbb
jnp
pop
jne
test
dec
sbb
sub
and
fstps
loope
out
sbb
push
sbb
cmp
mov
and
inc
add
xchg
hlt
adc
push
push
push
sub
xor
cmpsb
lea
add
or
mov
push
pop
inc
pop
pop
push
add
testl
scas
repnz
dec
inc
jb
push
and
inc
adc
in
xor
fdivr
jno
enter
dec
out
and
lea
fisttps
xchg
daa
cmc
repnz
mov
loope
sahf
mov
pop
mov
mov
les
insl
sbb
inc
xchg
push
movsl
sub
dec
jb
pushl
xlat
sbb
push
sub
js
sbb
imul
lahf
mov
test
js
test
ja
mov
pop
lods
pop
sbb
push
inc
mov
xor
mov
lcall
out
rol
push
fisubrl
push
pop
sub
inc
xchg
movsb
lock
pop
sbb
imul
push
pop
fbstp
call
out
xchg
jmp
or
cmp
mov
scas
aad
ret
sub
lfs
ret
push
cmp
fdivl
stos
idiv
add
outsb
inc
dec
das
loopne
test
pop
dec
andl
aas
mov
mov
hlt
mov
dec
pop
and
inc
and
pushf
ret
in
add
jl
adc
cmp
les
test
jne
push
push
movsb
cwtl
mov
sbb
aam
jbe
adc
and
mov
jmp
mov
mov
xor
sub
ret
cmp
jecxz
dec
rcr
xorb
push
mov
or
dec
es
inc
imul
mov
or
xchg
pop
pushf
mov
or
fsubl
sub
in
aad
ds
rclb
mov
dec
push
loop
mov
jg
mov
fs
sbbb
cmp
push
test
lds
lods
xor
test
aaa
pop
mov
cmpsb
cmp
push
or
dec
sti
mov
add
mov
jecxz
icebp
out
xorl
faddp
pop
mov
jp
push
dec
cmp
dec
sahf
mov
sub
mov
xor
popf
and
cmp
push
xorb
stos
int3
les
imul
fmuls
add
adcl
push
dec
test
pop
jno
nop
mov
lret
add
xchg
pop
enter
dec
lods
test
test
mov
nop
loope
jae
cs
popf
int3
sarb
xor
pushf
add
dec
mov
aaa
lock
clc
out
ljmp
pop
out
dec
mov
cli
adc
mov
cld
push
push
adc
in
mov
push
leave
push
xor
sbbl
jle
rcrb
js
push
adc
fs
scas
lret
xchg
mov
sbb
frstpm(287
pop
push
dec
pop
xor
sbb
pop
lahf
scas
pop
cltd
cmp
dec
and
and
or
test
ljmp
inc
lods
and
aas
and
sahf
mov
xchg
xchg
mov
adc
xor
das
cmp
cmpsb
fwait
enter
or
xor
inc
or
repnz
dec
data16
add
mov
fisubs
jmp
pushf
divl
movsb
shlb
jbe
push
xor
or
cmc
push
pop
pop
test
insl
dec
xor
cltd
adc
js
push
hlt
addr16
fs
sbb
xchg
imul
mov
jns
mov
dec
fstpt
and
mov
sub
js
sbb
xor
ret
and
lret
xchg
jg
adc
shll
and
and
enter
mov
movsb
lret
stc
or
imul
fwait
movsl
lds
aaa
xorl
stos
lods
testb
mov
cmpsb
decl
scas
lcall
xchg
dec
mov
jae
push
mov
ljmp
icebp
cwtl
cmp
pop
repnz
xor
cwtl
gs
xchg
mov
cmpsl
and
cmpsl
cmp
loop
sarb
jnp
mov
jmp
add
jns
jecxz
xchg
dec
adc
mov
iret
sbb
cwtl
xor
lods
out
das
mov
sub
jbe
push
test
incb
dec
sarb
out
mov
xor
inc
fs
pop
les
or
stos
pushf
outsl
outsb
mov
imul
jno
gs
jne
mov
mov
ret
dec
jne
add
dec
in
pop
xchg
add
es
int3
shrl
push
xor
and
inc
jge
or
nop
mov
xchg
pop
scas
icebp
test
int
jge
popf
shlb
cmp
sbb
pop
cmp
int
in
mov
cmpb
mov
cwtl
push
mov
negb
outsl
mov
fstpl
jecxz
push
xchg
pop
ret
loopne
test
cmp
ret
not
sbb
lret
movb
jmp
jb
and
pop
loopne
cmp
pushf
outsb
sub
pop
nop
push
add
xchg
arpl
mov
enter
inc
xchg
in
xchg
scas
or
subl
pop
sub
adc
xor
adc
xchg
mov
pop
mov
testl
pop
test
std
ret
int3
movsb
dec
dec
xchg
in
pushf
outsl
inc
xchg
fmuls
movsl
test
sub
enter
movsb
jns
xor
cltd
insb
enter
out
jle
and
ret
insb
jb
cli
and
ljmp
mov
popf
int3
sub
mov
xchg
popf
mov
rorl
in
scas
aas
or
jo
ret
or
and
xor
push
push
sahf
aaa
pop
cmp
loop
out
out
sub
or
and
sbb
adc
inc
sub
aad
sub
or
sub
fwait
push
mov
ss
adc
push
in
fists
les
je
xlat
nop
push
sub
int
js
adc
enter
sub
or
or
mov
jnp
cs
daa
dec
add
imull
ss
mov
dec
sahf
or
dec
pop
mov
xchg
pop
ficomps
outsl
arpl
adcb
ja
ja
insl
xchg
fildll
mov
adc
pop
dec
sub
bnd
dec
arpl
push
sbb
movsb
push
int3
popa
cmp
push
fwait
pop
fs
push
cmpsb
sbb
aaa
sub
mov
add
rcl
rcll
icebp
pop
pop
cld
pusha
xor
xchg
out
cmp
adc
orl
xor
adc
hlt
adc
xor
jno
repz
rcrb
xchg
mov
pop
jne
cwtl
sbb
dec
inc
mov
cmp
repz
rcrl
sbb
adc
or
mov
test
stos
data16
mov
jno
jmp
jecxz
nop
xchg
cs
and
dec
lock
stos
mov
fcmove
cmc
mov
movsl
inc
mov
cmc
lods
scas
add
xor
inc
cs
aas
aas
jge
jo
and
mov
cltd
and
jae
pop
jns
jno
xor
div
rol
aad
push
fidivl
int3
in
test
sbb
dec
out
add
sbb
pushf
aam
pop
jnp
fcoms
icebp
mov
pop
repz
add
outsl
out
mov
sbb
cli
cwtl
call
in
pmaxsw
xlat
in
jnp
push
outsl
and
test
insb
mulb
fs
shll
lods
push
pop
or
nop
adc
out
jl
popf
iret
cwtl
lret
cwtl
dec
inc
fsubl
pushf
push
push
ret
data16
es
or
fcoms
test
fwait
jbe
into
addr16
faddl
fdiv
iret
loopne
cmp
mov
dec
in
scas
adc
jecxz
out
xor
mov
push
lret
add
push
push
mov
je
test
sbb
shll
push
mulb
jge
sbb
lea
jb
lahf
aas
mov
push
test
aas
xchg
jb
ja
mov
adc
mov
dec
dec
sbb
adcb
js
jo
jmp
add
mov
adc
cmp
jb
pop
pop
aad
pop
cmpsl
add
mov
pop
push
cmp
imul
arpl
mov
cmc
std
xor
xor
scas
jp
push
dec
push
shr
movsb
inc
xlat
jg
mov
mov
sub
cld
pop
push
leave
push
xor
add
xchg
cmp
xchg
mov
jg
dec
pop
icebp
jns
loope
test
inc
popa
mov
lret
repnz
mov
sarb
insl
popf
outsb
loopne
inc
pop
mov
repz
in
shr
and
dec
loopne
mov
mov
rorl
fildl
push
xchg
xchg
push
jge
add
js
aad
mov
jmp
out
sub
mov
imul
and
imul
andb
aam
dec
mov
mov
cmp
fndisi(8087
rcl
sbb
jae
xor
fcomps
outsl
aas
lds
mov
push
and
push
call
adc
fdivrs
add
data16
loop
mov
sub
test
cli
and
fs
pop
inc
pop
jg
add
or
aad
push
lret
stc
sub
add
mov
mull
push
push
or
out
in
and
repnz
push
jns
sahf
pop
jle
test
test
xor
jns
js
sbb
shlb
dec
dec
test
pop
pop
add
dec
xor
xor
leave
bound
pop
fld
js
jnp
mov
movsb
scas
cmpsb
pop
xchg
pop
push
add
and
jl
ja
xchg
sbb
lahf
aad
inc
inc
pop
mov
in
add
mov
in
dec
movsb
or
adc
int3
ja
pop
mov
push
out
lock
movsl
lret
pop
mov
cwtl
mov
sbb
sub
lret
add
loop
push
fstpl
pop
adc
imul
pop
or
leave
mov
ds
dec
in
gs
nop
loope
push
adc
sub
cmp
or
jl
mov
adc
cmp
rcrl
dec
jb
jb
push
sarl
les
mov
jno
inc
xor
xchg
mov
in
shrl
or
nop
push
jbe
fcomps
sub
cmp
sub
mov
js
mov
pop
inc
xchg
push
je
sub
pushf
mov
push
mov
cmp
pop
add
mov
mov
aas
mov
sbb
loope
or
adcl
jbe
imul
push
pop
inc
test
jno
ljmp
add
cmp
js
mov
sub
fwait
test
dec
notb
cli
cmp
dec
inc
push
xchg
cmc
adc
stos
cmpsl
or
sub
orl
scas
fstps
pop
jge
xchg
or
jge
mov
pop
sbb
punpckldq
push
dec
scas
ss
les
popa
in
push
jb
sbb
mov
xlat
mov
ja
mov
sbb
adc
cmp
in
insl
lds
push
daa
dec
push
inc
testl
xchg
dec
jns
lret
push
or
bound
dec
out
pop
mov
cld
jns
lock
lcall
test
lea
test
or
xchg
cli
cmp
lret
int3
insl
xor
fmuls
iret
insl
hlt
fs
repz
mov
xsha256
cmpsb
xchg
sti
idivb
mov
insl
mov
or
lahf
mov
dec
jge
std
iret
test
mov
jb
dec
je
mov
fdivl
stc
test
jl
mov
outsb
addr16
lock
mov
pop
push
movsl
jp
add
add
arpl
mov
int
inc
es
inc
scas
fcos
pop
jnp
cmp
mov
mov
jl
jb
xor
jge
stos
dec
xor
fisubs
mov
xchg
mov
clc
test
cmp
hlt
mov
cmp
add
inc
xchg
sar
inc
jge
cld
jmp
add
mov
mov
jmp
dec
mov
popf
daa
shlb
pop
xchg
hlt
ja
scas
xchg
shlb
adc
iret
out
sbb
mov
sub
rclb
jae
cmpsb
cmpsl
pop
jmp
cwtl
pop
scas
xchg
jmp
push
pushf
insl
repz
scas
stc
inc
sbb
fcomip
inc
add
inc
push
mov
imul
imul
loopne
rolb
sarb
and
push
mov
loopne
mov
or
in
ret
lret
ret
scas
cmpb
mov
or
and
scas
mov
pop
daa
jo
push
mov
loope
fcmovnb
arpl
outsl
out
lahf
imul
aam
cs
pop
filds
adc
lods
lds
inc
jg
xchg
int3
outsl
jb
pop
sub
pop
mov
mov
add
hlt
push
nop
mov
pop
cmc
push
mov
fbstp
mov
ret
jg
mov
mov
push
xorl
pop
and
fucomp
dec
loope
xchg
mov
pop
pop
adc
test
les
xchg
add
xorl
test
pop
push
mov
add
mov
mov
nop
sbb
sub
lahf
js
mov
or
add
dec
movl
pusha
jg
mov
cmc
subb
out
arpl
push
push
fstps
enter
loopne
movsl
xor
mov
call
mov
xor
mov
sub
shrb
andl
enter
pushf
cmc
sub
dec
dec
push
sbb
add
cmp
mov
mov
pop
aad
and
and
inc
mov
roll
mov
mov
add
imul
inc
dec
mov
push
int3
fwait
popf
mull
pop
push
mov
jp
aad
push
movl
fidivrl
add
es
or
rorb
movsb
out
pop
aaa
mov
jle
or
dec
pop
test
or
mov
pushl
addr16
jae
or
scas
cmpsl
mov
test
out
das
push
out
sti
sub
pop
pusha
in
inc
and
adc
cs
inc
push
mov
cs
or
pusha
mov
xor
fnstcw
lds
mov
xor
repnz
movl
jp
shr
stos
mov
repnz
lds
sbb
loope
mov
or
adc
test
bound
mov
mov
and
mov
cmc
sbb
jl
fld
das
sbb
std
pop
popa
fcmovbe
jno
shl
lea
aas
mov
mov
push
mov
dec
xchg
movsb
stos
dec
lods
ss
sbb
fucomip
outsb
jne
mov
jae
push
pusha
outsb
xchg
inc
ret
sub
and
jl
adc
or
sbbl
add
adc
insl
stos
or
aaa
pop
lods
cmp
and
push
out
xor
fisubrs
pop
popf
repnz
shrl
aaa
pop
adc
test
test
pop
iret
sbb
cmc
rcll
xor
loopne
adc
xor
xchg
and
add
cli
ret
xchg
pushf
add
addr16
inc
loop
in
adc
jno
leave
xchg
mov
scas
call
push
sbb
scas
cmp
test
mov
fnstenv
mov
jae
and
daa
xchg
hlt
loope
mov
pop
popf
push
mov
pop
cmp
out
inc
out
scas
jl
inc
into
sub
mov
mov
jno
testb
push
in
jo
mov
push
cmp
loopne
and
sub
and
push
dec
rcl
pop
adc
loop
and
inc
arpl
jecxz
cmp
xor
fcmovbe
loope
scas
add
add
or
ljmp
jae
push
mov
test
fwait
orl
data16
xor
jbe
push
stc
inc
popa
jle
cltd
add
pop
test
mov
adc
jp
sbb
push
mov
add
lock
das
stos
lds
pop
fdivl
cmp
pop
repnz
jns
gs
gs
cmp
imul
pusha
test
pusha
int3
jb
jne
pop
cltd
ficoml
push
sbb
insb
or
mov
mov
adc
notl
sbb
movsb
mov
adc
xchg
xchg
in
popf
dec
adc
mov
mov
mov
mov
enter
or
inc
cmp
ret
sub
fwait
mov
int3
rorb
lahf
lahf
insb
inc
aas
cmpsl
xor
sbb
xor
ja
pop
add
lea
mov
push
and
fists
push
pop
xor
popa
adc
or
sahf
popf
icebp
movsl
cmp
pushf
pop
pusha
xchg
imul
je
add
sbb
add
inc
and
pop
inc
pop
arpl
add
rorl
push
je
clc
jl
mov
das
ja
inc
mov
mov
push
imul
es
pop
or
stos
jno
cltd
xchg
out
mov
lea
xlat
orb
pushl
imull
inc
or
pop
pop
loopne
adc
xchg
xor
ret
inc
adc
idivb
mov
push
rcrb
sbb
push
fnstenv
mov
imulb
jne
rclb
movsb
mov
pxor
daa
mov
pop
or
push
bound
xlat
jns
jne
stos
xchg
sar
inc
ret
xor
mov
les
sti
lahf
imul
mov
push
xor
cmp
sahf
mov
sub
mov
ja
test
mov
ss
into
hlt
mov
push
shlb
in
push
mov
dec
add
inc
insb
xchg
mov
inc
js,pn
mov
fwait
cmc
int
xor
jnp
in
dec
jno
rorl
test
popa
ret
dec
add
sbb
fimull
cmpsb
aad
add
fwait
mov
rorb
mov
andl
push
scas
jne
and
outsl
lods
xor
jae
inc
add
shll
inc
popa
cmp
lods
mov
mov
into
in
mov
addl
adc
movsl
dec
ljmp
cmp
pop
pop
pop
or
cmp
lahf
sbb
mov
leave
pusha
push
mov
movsb
hlt
adc
gs
ficompl
decl
adc
xchg
mov
mov
insl
fsubrl
pop
adc
shlb
daa
outsl
lods
ljmp
dec
inc
stos
sarb
mov
clc
cmp
movsl
adc
stos
xor
movl
movsl
adc
aas
leave
testl
sti
inc
mov
mov
hlt
sbb
jmp
xchg
out
push
jg
rcll
cmp
xchg
stc
imul
out
aam
dec
adc
jae
sti
ficomps
sub
sbb
dec
adcl
ds
lods
or
out
sbb
push
pop
lods
or
mov
into
or
cld
dec
sar
aaa
out
sub
cwtl
rolb
pop
pmuludq
ret
push
inc
movsl
mov
mov
mov
cmpsb
mov
pop
mov
shll
mov
and
aam
cmp
sub
and
mov
test
and
dec
xchg
jbe
hlt
in
add
xchg
les
jp
mov
xor
inc
test
jecxz,pt
ljmp
cmpsl
xchg
lahf
inc
outsb
xor
fs
ret
test
xchg
xor
jnp
and
stos
movsl
jge
fmulp
in
scas
pop
cmp
sbb
add
outsb
or
stos
adc
adc
adc
add
jb
mov
mov
in
push
nop
iret
aas
pop
sub
add
dec
push
or
pop
jecxz
push
mov
and
sub
pop
sti
sbb
adc
and
pop
cmc
cmp
sbb
mov
rorb
mov
cltd
dec
stos
leave
fstl
movsb
fsub
stos
cmp
and
xchg
xor
mov
push
popa
xchg
out
push
ljmp
cmpsb
sbb
adc
cli
out
stos
push
push
xchg
push
cmp
repz
xchg
lahf
loopne
mov
jns
mov
xor
mov
testb
repnz
aas
mov
movsb
arpl
pop
rcrb
mov
cltd
cmpsl
adc
sbb
add
pop
push
push
mov
mov
jbe
sbb
cs
imul
pop
fstpl
out
and
lods
xorl
xor
mov
mov
popf
movl
test
pop
gs
imul
pushf
push
mov
cmp
mov
arpl
mov
xor
and
and
and
dec
lcall
and
scas
adc
mov
add
xor
out
sub
adc
mov
out
xor
rclb
icebp
in
jmp
leave
lret
mov
rclb
jno
and
jne
mov
int
iret
mov
adc
xor
je
loop
ficompl
in
push
lods
inc
es
into
inc
pop
fisttps
xchg
mov
mov
sub
mov
subb
cmp
mov
ss
push
pushf
jecxz
push
stos
popf
std
fwait
jecxz
fidivl
mov
insb
aaa
outsb
das
inc
mov
mov
jae
negb
push
orl
loop
es
xor
arpl
aam
lret
in
xor
cmpsb
cmp
lods
or
push
add
dec
pop
dec
jle
dec
imul
insl
add
xor
repz
sbb
and
insb
addr16
push
bnd
ret
stc
sbb
pop
mov
cwtl
pop
mov
xchg
jo
and
mov
add
mov
push
call
je
mov
shr
shrb
jns
outsl
lods
scas
je
stc
pop
inc
mov
pop
push
inc
insb
test
imul
xchg
stos
xlat
adc
ljmp
cmp
xor
imul
int3
addb
add
jns
sbb
jg
sub
arpl
xor
cmp
sbb
iret
stc
lods
cmp
fmuls
xchg
stos
and
cmp
jge
mov
sahf
jge
cmp
jne
cmp
xchg
and
repnz
push
testb
mov
and
mov
stos
cmp
pushf
pop
add
push
jno
repz
stos
dec
xor
stc
sbb
jae
push
xchg
inc
sub
and
xor
cmp
fdivr
cmp
je
mov
jns
mulb
xchg
or
enter
jmp
xor
enter
fs
test
inc
and
mov
testl
mov
xlat
inc
test
or
mov
add
pusha
xchg
sub
js
push
fwait
mov
lods
rcrb
jne
adc
mov
sbb
push
xchg
push
dec
pop
sub
scas
jbe
mov
int3
sti
in
push
in
inc
cli
into
jns
pop
pop
cmp
lock
mov
aad
stc
xor
fdivr
mov
add
cmp
sub
xor
insl
mov
xlat
push
mov
in
mov
test
insb
mov
adc
mov
mov
push
sahf
ds
sbbl
shrb
add
rcr
xor
mov
bound
loope
cmp
xchg
fildl
das
cmp
or
adc
cmpsl
ljmp
test
mov
leave
outsb
imul
test
cmpsb
cmp
sti
iret
push
fwait
xor
fbld
frstor
dec
add
jge
jnp
movsb
test
scas
add
mov
push
add
ror
mov
addl
xchg
and
iret
sbbb
lahf
mov
call
adc
jb
adc
mull
push
lret
es
popf
xchg
jae
mov
push
mov
dec
cmp
in
inc
stos
mov
or
loop
mov
cli
dec
pushf
mov
mov
xchg
or
mov
aam
add
jo
sahf
jb
add
leave
test
jnp
in
xlat
add
mov
xor
out
nop
mov
add
push
mov
adc
cmpsb
and
lods
push
lcall
push
xchg
popf
in
loop
popf
jl
xor
mov
jnp
incb
out
sbb
xchg
ja
add
push
scas
sub
mov
hlt
xchg
shrl
add
add
push
outsb
dec
hlt
fistps
stos
dec
das
jge
in
fidivl
mov
stos
dec
ret
lcall
sbb
pusha
call
sub
push
and
pop
jg
sti
into
jo
fs
dec
lret
jae
adc
pop
cmp
fnstsw
mov
loop
repz
add
lcall
or
iret
cltd
xor
dec
jmp
jno
or
lcall
add
pop
or
jp
test
andb
mov
adc
pop
stc
lret
orb
int3
out
cmpsl
gs
aaa
pop
idiv
or
les
rorl
test
sub
or
mov
lret
pop
sub
out
fmull
imull
push
mov
popa
shrl
aaa
cmp
ficomps
sahf
xor
push
in
jbe
push
inc
or
sub
mov
rcl
add
xor
mov
scas
orl
cmp
sbb
out
aad
push
push
xor
int
mov
in
test
cmp
push
rep
lret
jmp
es
or
es
cmp
sub
fldcw
pushf
dec
pushf
enter
pusha
mov
push
daa
push
xor
aas
pop
adc
popf
fisttpll
negl
lock
clc
sbb
xor
testb
jae
out
imul
mov
repnz
loop
push
jnp
aad
mov
out
xchg
mov
jge
xor
icebp
xor
or
out
mov
lret
cmpsb
fldenv
in
sub
push
cmp
xlat
pop
jae
xchg
bound
mov
mov
lcall
mov
loope
popa
dec
jecxz
mov
arpl
push
movlhps
or
sbb
cmp
xchg
ss
adc
clc
inc
adc
ret
jmp
jne
ss
mov
cmpsb
jmp
push
jno
lcall
jns
ja
int
xchg
mov
xchg
cs
lahf
int3
jno
sbb
leave
orb
and
stos
out
or
adc
push
clc
pop
loope
in
rcl
and
dec
mov
sahf
sbb
push
xor
stos
mov
and
xlat
lods
cs
fnsave
push
jmp
popf
int3
jb
repnz
cmp
jmp
and
or
mov
jnp
gs
out
mov
mov
fmuls
arpl
mov
popl
call
jl
sub
out
jecxz
jns
push
fcmovne
test
loop
dec
fdivrl
mov
xchg
add
fdivs
enter
xor
adc
sarl
and
xchg
xchg
or
or
inc
inc
inc
sahf
adc
and
mov
jle
mov
test
mov
shrl
insb
adc
or
xchg
sarb
and
add
mov
mov
xor
in
add
lea
stos
xor
xchg
and
pushf
or
xor
adc
sbb
mov
je
popa
in
rcrl
push
adc
icebp
scas
lcall
mov
inc
mov
jbe
mov
stos
repz
add
jg
or
gs
in
test
insl
sub
add
push
sbb
enter
pushf
aaa
loope
cmp
fcoms
icebp
pop
inc
scas
fiaddl
cltd
nop
push
aam
xchg
push
inc
test
faddl
xchg
xor
sub
notl
in
cmc
sti
pop
das
sub
cmp
mov
jbe
lret
dec
scas
sbb
enter
mov
cld
adc
xchg
mov
add
ficompl
xchg
inc
das
fs
push
test
outsb
shlb
pop
pop
sbb
sub
test
imulb
movsb
mov
adc
pop
pop
pushf
adc
imul
stc
scas
xor
push
add
test
dec
movsb
je
cmp
and
mul
popa
inc
and
arpl
loopne
push
mov
test
in
sub
popf
add
cmpsl
das
adc
and
or
cmpsl
dec
xor
inc
mov
clc
lret
movb
fnsave
sub
roll
xchg
pop
lret
adcl
xchg
xchg
jge
mov
nopl
mov
sbb
lods
push
sbb
lods
xor
shl
push
in
xor
cmpb
sbb
and
mov
xchg
push
inc
pop
add
ret
or
jle
sbb
push
mov
cltd
mov
sub
mov
inc
mov
cwtl
dec
adc
in
cli
movl
jnp
mov
jae
shrl
loop
out
add
addb
addr16
xor
out
imul
dec
mov
cwtl
lret
and
xchg
xchg
call
imull
sub
aas
adc
dec
fisubs
xor
add
xchg
stos
and
subb
movsb
jp
or
lock
cwtl
xor
jbe
cltd
repnz
aas
cld
ljmp
mov
fwait
cmpsl
pop
and
mov
loopne
sub
jge
scas
sbb
orb
mov
adc
sub
dec
lods
lcall
imul
sbb
mov
ret
insb
adc
and
stc
push
ss
mov
or
dec
jecxz
adc
outsl
lcall
cmp
pop
or
lock
leave
inc
pop
into
or
add
dec
dec
dec
mov
lcall
fcmovb
jmp
nop
pop
dec
test
js
mov
add
push
cmpsl
shlb
out
movsb
nop
fbstp
clc
outsl
push
xlat
add
fsts
sbb
push
stos
int
pop
lret
mov
pushf
or
jnp
jp
and
aad
int
mov
cmpsb
mov
pop
fcoms
sub
sahf
sbb
mov
xchg
mov
fisubrs
sbb
rcrl
dec
out
ja
movl
push
xor
pushf
in
adcl
sbb
mov
dec
lahf
daa
push
daa
aam
cltd
aad
jns
jmp
xor
popa
das
inc
aaa
mov
out
adc
notb
mov
es
xchg
or
xchg
dec
loopne
fidivrs
addr16
or
mov
pop
cwtl
mov
jecxz
push
mov
test
mov
add
xchg
xchg
sub
test
int3
adc
in
mov
mov
in
pop
scas
psrld
and
lods
jmp
outsb
cmc
jae
sub
sahf
mov
xor
imul
mov
rclb
lret
xor
or
test
jmp
mov
pop
cmp
or
loopne
sbb
adc
adc
xchg
sbb
enter
inc
jno
les
arpl
es
les
or
xchg
lods
lock
sti
cmp
insb
pusha
div
fmul
xchg
addr16
push
leave
ljmp
push
js
loopne
bound
mov
cmpsl
inc
add
lds
xchg
mov
repnz
lock
pushf
popf
leave
cwtl
push
icebp
jns
inc
sub
rcl
mov
adc
stos
dec
jb
mov
fwait
mov
add
out
inc
movsb
fistpll
pop
mov
inc
mov
gs
cld
jl
imul
lcall
dec
inc
sbb
out
dec
pusha
xorb
pop
push
fldt
jl
push
or
or
pop
addb
push
pop
adc
sbb
inc
push
and
cmc
pusha
adc
fldcw
stos
sub
xchg
mov
add
push
sub
mov
lret
pop
lcall
pop
or
inc
shld
mov
nop
or
cmpsl
cmc
scas
mov
cli
and
pop
fs
or
jno
adc
mov
test
add
xor
int3
xchg
dec
addb
imul
sti
popl
jmp
adc
and
xor
adc
aaa
mov
dec
mov
loope
aad
xlat
loope
or
mov
dec
dec
fmul
adc
pusha
adc
arpl
lret
add
mov
ds
and
clc
adc
pop
out
idivb
lret
fistpll
jp
dec
jecxz
ret
incl
mov
or
inc
fcomps
lret
sbb
push
lea
out
mov
and
out
mov
jl
les
mov
xchg
jns
out
mov
adc
ret
cmp
adc
jae
and
sbb
push
js
mov
jl
xor
cmp
pusha
andb
ljmp
push
psrld
insb
jns
lods
lods
cmpsb
adc
movb
add
add
mov
loopne
jb
sub
ja
cmp
push
shr
xor
push
inc
sti
jp
add
mov
ss
adc
cmp
jnp
jns
mov
sbbl
xchg
fcompl
rolb
jb
and
sbb
jne
stc
movsb
fs
fstps
jnp
test
dec
jle
jno
adc
jecxz
mov
push
xor
and
hlt
ret
xchg
jne
xchg
add
jns
sahf
iret
imul
jmp
out
test
sub
sbb
dec
sub
xchg
pop
push
cmp
cmp
pop
iret
inc
subl
sbb
cli
push
stos
in
leave
xchg
dec
mov
out
mov
jle
insb
and
or
mov
mov
pop
in
cmpb
xchg
mov
outsl
xchg
fadds
mov
int
scas
outsb
pop
faddl
stos
dec
aaa
lock
sub
cmp
mov
add
jl
out
cwtl
rcrb
mov
stos
jle
les
mov
cmp
add
out
fistl
jle
pop
or
lock
lret
and
test
push
pop
xor
lds
fwait
inc
xchg
sahf
mov
popa
push
aaa
cmp
adcb
dec
clc
xorl
add
gs
xor
and
xchg
push
inc
xchg
fsts
push
dec
add
dec
and
es
movsb
adc
mov
mov
sbb
into
xchg
jbe
add
fcmovnbe
fwait
imul
sahf
in
pusha
and
inc
mov
sarl
sti
stc
cmpsb
pop
psubsb
or
int
pop
push
js
adc
fcmovu
loop
dec
xchg
mov
and
xchg
cs
mov
sbb
sbb
ret
xchg
scas
xchg
fwait
push
jge
sbb
and
mov
dec
sub
repnz
loope
jg
outsl
mov
add
mov
rcl
cmc
sti
sbb
stos
dec
xor
js
jno
in
lock
sub
xchg
imul
mov
inc
std
sub
push
and
mov
jle
dec
sahf
ljmp
or
fnstcw
add
lret
sbb
int3
cmpsb
mov
jecxz
xchg
cmpsl
notb
cmp
jnp
clc
jns
jecxz
lahf
and
pop
lret
test
adc
adc
in
insb
test
add
push
lahf
mov
lds
xchg
scas
jno,pt
mov
cwtl
mov
jae
mov
popa
mov
and
cmp
mov
sub
pusha
outsb
leave
mov
jbe
cmc
mov
imul
out
sub
cmp
repnz
xchg
shlb
mov
andb
loop
sub
and
das
xchg
push
shll
cmp
sub
xor
repz
add
and
insl
adc
push
adc
pop
jg
mov
mov
mov
das
cwtl
leave
mov
fiadds
in
hlt
adc
outsb
popf
cmp
mov
push
notl
sub
or
mov
push
sub
jl
pop
and
sarb
add
sbb
cmpsb
mov
dec
add
shll
mov
ss
mov
or
shr
or
cmp
mov
rcrl
stos
movsl
mov
mov
sbb
add
xor
jp
mov
mov
add
stc
and
inc
mov
sub
inc
es
or
fnstsw
mov
test
popa
inc
cli
adc
lds
push
cmp
fidivl
sbb
push
push
gs
adc
inc
lret
ret
xchg
subb
aaa
popf
push
cmpsl
cmp
xchg
popf
mov
icebp
push
shll
xchg
inc
lahf
pop
pushf
inc
push
inc
or
lods
rclb
or
out
fnstsw
mov
ss
jmp
adc
neg
pop
aas
lds
jo
insb
xchg
inc
loopne
adc
jbe
mov
call
lret
push
xchg
adc
mov
pushf
and
stc
sbb
cltd
dec
ror
mov
adc
pop
inc
xchg
jae
lods
test
test
iret
mov
movsb
fwait
mov
and
inc
mov
jne
xchg
inc
cli
cmp
dec
shr
add
call
sub
jb
and
mov
sarl
xorb
and
sub
jge
negb
jmp
and
pushw
sub
cltd
cmp
push
mov
cmpsl
test
lods
pop
push
sub
cmp
invlpg
lcall
mov
adc
xchg
xor
mov
dec
mov
jno
inc
pop
mov
je
pop
jg
insl
xchg
lds
add
inc
fwait
dec
je
cmp
push
xchg
inc
inc
add
movsl
dec
mov
leave
ret
ljmp
mov
xlat
stos
jo
mov
arpl
das
sbb
and
cltd
js
rorl
sbb
jno
pop
loope
mov
ret
jecxz
lods
inc
mov
push
pushf
into
or
pop
xor
cmp
inc
xor
adc
test
imul
lcall
dec
hlt
adc
pop
add
jno
pop
pop
or
subb
sbb
stc
pop
jb
mov
scas
and
and
arpl
mov
inc
scas
icebp
add
or
fs
inc
mov
hlt
cli
sbb
xchg
xchg
fbld
mov
out
stc
inc
mov
js
arpl
stos
shll
icebp
pop
jmp
mov
mov
popa
inc
fimull
stos
and
add
jae
mov
or
cltd
xor
cmpsl
push
and
leave
addr16
inc
lds
into
or
push
fldt
and
lcall
cmp
hlt
shl
mov
inc
push
mov
std
pushf
sub
sbb
inc
ss
xchg
push
scas
sub
cmp
xor
ss
xor
and
nop
pop
inc
dec
sahf
mov
cmpsl
lods
cmpsb
dec
mov
movb
cmc
lods
fucomp
divb
and
or
jbe
pop
adc
fcomps
lods
or
mov
loopne
test
insl
rclb
push
pop
fldenv
push
xchg
xor
scas
pop
push
stc
call
mov
stc
mov
insb
add
mov
xchg
out
fcoms
sub
in
outsl
fadd
xchg
popf
int3
repnz
imul
mov
out
pushf
movsb
pop
xlat
sub
ffree
out
test
aas
fwait
push
mov
stc
inc
dec
nop
dec
inc
rcl
xchg
stc
cmpsl
sbb
xchg
cs
mov
daa
push
xchg
mov
jle
cli
incb
lahf
push
aaa
ret
xchg
mov
pop
insb
ss
xchg
push
mov
sahf
dec
sbb
add
xchg
dec
mov
fcmovnb
test
push
or
in
ljmp
nop
xchg
mov
rcr
sahf
mov
dec
mov
sti
adc
es
dec
and
inc
push
out
into
cmc
pop
rorl
sub
jg
ja
mov
mov
push
fidivl
mov
push
testb
jbe
add
cs
fmull
push
scas
popa
push
xchg
sbb
xchg
pop
jno
add
mov
add
ljmp
push
xchg
js
out
les
jg
adc
outsl
fistl
add
das
jnp
ret
inc
jnp
push
pop
lcall
adc
imul
dec
pop
dec
sti
incb
aas
fxch
fildl
into
in
xchg
cmpsb
shr
mov
test
jmp
mov
aam
shrb
pop
in
mov
inc
xor
lret
in
pop
sti
imul
mov
sbbb
fnstenv
outsb
xor
roll
sbb
into
jge
cmc
jge
ret
lods
or
negl
dec
lods
jno
inc
or
bound
insb
push
int3
jbe
mov
pop
dec
stos
or
icebp
mov
popa
adc
dec
adc
fmull
pop
daa
in
add
xchg
cld
add
ds
xchg
aam
iret
and
or
cmpsl
cltd
pop
rcrl
jno
loope
fdivl
cli
mov
nop
mov
imul
and
and
and
or
add
rolb
mov
fmulp
mov
fs
scas
enter
into
dec
pop
mov
test
and
pop
lods
dec
adc
pop
stos
mov
ss
mov
cmp
cwtl
adc
cmp
bound
jnp
xchg
lock
lds
cmpsl
std
insb
je
int3
outsb
mov
dec
add
sahf
subl
test
js
lods
jge
pop
rol
jae
test
xor
xchg
push
mov
jnp
push
cmovbe
mov
bound
sub
mov
jmp
fstpl
cs
xchg
es
and
dec
cli
nop
dec
dec
cmpl
fistl
rcll
pop
addb
or
hlt
loope
out
jb
and
cmpsl
int
loopne
gs
push
or
pop
cmc
push
movsl
mov
addr16
push
mov
pop
sub
insb
in
jbe
pop
pop
in
dec
push
lret
stc
addr16
push
mov
jp
popf
insb
push
pusha
inc
or
shrb
adc
or
jl
lea
gs
lahf
stos
lds
mov
push
lock
mov
add
dec
lcall
sub
stos
iret
cmp
lahf
fimull
xchg
jp
push
mov
out
or
divl
inc
cli
adc
mov
ret
sub
or
dec
loope
xor
fstpt
in
in
add
loop
jno
cmp
leave
sub
subb
jge
add
mov
mov
dec
stos
and
mov
push
testl
mov
cmpb
aaa
sub
ss
fisttpll
xchg
jo
loopne
sub
dec
imulb
add
cld
ljmp
daa
push
out
in
rcrl
push
mov
stos
or
icebp
fdivp
dec
into
jno
or
cmp
pop
pushf
jno
cmp
pusha
jbe
dec
in
pop
xor
loope
adc
outsl
and
inc
test
lahf
sbb
shll
call
dec
pushf
mov
inc
dec
xor
xchg
sbb
int
mov
sahf
add
or
cmp
lcall
pop
push
mov
cmp
xchg
cmp
das
pusha
ljmp
add
mov
mov
sub
popf
inc
call
fwait
pusha
adc
push
and
xchg
dec
pop
mov
mov
jae
jl
leave
pusha
out
cltd
bound
je
loopne
sbb
icebp
outsb
lds
inc
and
pop
nop
mov
pop
mov
aas
pop
ja
arpl
push
jle
fs
insl
xchg
mov
nop
in
mov
popa
sbb
xor
jb
adc
cld
packsswb
sbb
push
pop
jnp
or
xor
sbb
decb
add
xor
pop
cmp
into
stc
imul
mov
out
mov
pusha
push
aad
insb
lret
leave
into
jo
mov
test
sbb
minps
ret
inc
xor
insl
outsl
stc
mov
cltd
movsl
push
and
lcall
outsl
pop
cmpsb
mov
and
aas
scas
out
mov
inc
jl
inc
mov
dec
sub
pop
outsb
es
loopne
and
jp
int3
int
push
and
cmp
xor
fldenv
repnz
js
cmc
scas
les
lds
dec
jno
dec
test
out
mov
and
popf
leave
bound
pop
dec
cwtl
ret
enter
cmpsb
stos
ret
insl
test
in
pop
pop
mov
cli
mov
loop
pusha
adc
cmp
mov
jl
icebp
mov
gs
testl
pop
imul
cltd
lahf
bound
pop
loop
add
pop
in
adc
mov
add
out
test
mov
sbbl
scas
jb
subb
push
aaa
sbb
lcall
cmp
xor
sbb
mov
es
and
ds
xchg
add
xor
ljmp
mov
mov
es
inc
in
jno
out
es
sbb
push
mov
jmp
stos
xor
insl
and
out
bound
test
inc
jecxz
addl
movsb
xchg
mov
shrl
das
mov
push
and
xlat
mov
int
push
cmpsb
icebp
gs
fnstsw
dec
or
iret
mov
sahf
jne
jl
push
movsl
push
into
mov
in
and
xchg
leave
and
cmp
popl
icebp
sub
into
out
push
shlb
pop
repz
outsb
sub
add
mov
stos
sarb
sbb
test
or
fnsave
pop
jecxz
cmc
pop
mov
mov
out
stos
loopne
pop
inc
cmp
jno
sbb
iret
cltd
or
ss
mov
adc
inc
shld
mov
rcrl
inc
filds
clc
adc
pop
xlat
shlb
lret
xchg
scas
outsb
sub
arpl
stc
and
popf
loopne
mov
mov
std
cmp
fdiv
aad
inc
dec
in
lods
out
aaa
fwait
dec
cmc
ljmp
push
dec
filds
insb
xchg
aas
test
sub
mov
cmp
adc
out
leave
mov
mov
xor
sbb
cli
xchg
popa
jno
sbb
test
aaa
leave
ror
sahf
mov
test
stos
cmpsb
es
xor
pusha
notw
pop
into
dec
sbb
test
sbb
int
mov
push
push
sahf
dec
jle
jo
and
gs
mov
imul
mov
push
cmp
sbb
int3
jecxz
mov
ret
adcl
mov
add
loopne
cmp
fldt
leave
nop
adc
aam
xor
jo
pushf
or
outsl
dec
aam
pop
sbb
cs
sahf
mov
jl
mov
xor
jle
insb
lock
xor
rclb
jmp
mov
push
into
ret
adcb
popa
insl
ja
mov
rcrb
sbb
aad
xor
cmp
sub
mov
jge
popa
out
mov
je
insl
in
stos
movsl
in
or
pop
loop
add
sbb
add
lock
cmp
addr16
jo
fcoml
imul
movb
stc
dec
jle
and
mov
xor
repnz
movb
inc
repnz
iret
push
mov
out
or
fisttpll
jle
mov
mov
push
pushf
stos
jns
icebp
cmovbe
pop
push
fdivr
pushf
call
mov
jmp
sbb
xchg
xchg
mov
pop
xlat
ret
outsl
leave
aad
adc
lock
ret
in
mov
dec
push
andb
inc
pushf
insb
cmp
cltd
fwait
scas
idiv
push
test
mov
popf
test
add
sub
jg
sbb
je
jno
ss
push
xor
je
cmpsl
adc
sub
and
sbb
ret
clc
movsb
inc
inc
adc
push
aad
jp
mov
lea
xchg
pusha
jns
dec
and
pop
idivb
xchg
mov
xchg
sbbl
and
movsb
rol
dec
and
enter
iret
inc
clc
icebp
call
inc
ja
ja
out
xor
inc
out
pop
adc
lahf
dec
ljmp
out
sar
xchg
inc
cmp
ret
mov
mov
ljmp
push
jnp
fstps
xor
dec
movsl
dec
xor
test
lcall
xchg
push
pop
pop
fiaddl
lahf
pushf
push
xchg
sub
sub
jbe
adc
push
les
xor
int3
sub
ljmp
int
stos
sub
inc
mov
mov
add
dec
mov
icebp
xchg
enter
fmuls
test
aad
mov
jecxz
xchg
icebp
in
inc
mov
test
pop
dec
jae
es
lret
jae
adc
roll
adc
jmp
hlt
xchg
out
add
push
add
xchg
movsb
pop
lret
imul
pop
push
mov
addl
xchg
inc
jne
and
lahf
xchg
sbb
ljmp
lea
push
cmc
dec
std
loopne
dec
jecxz
icebp
xchg
cltd
out
adc
scas
insl
push
shlb
mov
in
xor
mov
mov
push
test
xchg
lds
test
aaa
jae
int
or
outsl
loopne
rolb
jbe
pushl
ret
add
jno
les
fcomp
daa
ret
add
mov
push
fnstcw
jae
imul
jp
nop
in
lods
sub
jb
mov
dec
cmp
sub
fs
stos
mov
sbb
ror
insb
shr
outsb
fs
divb
and
mov
repz
je
enter
adc
sbb
mov
stos
scas
fildl
sbb
or
pushf
aad
push
nop
cmpsb
xchg
inc
ret
mov
fsubs
xchg
mov
lods
test
test
arpl
test
jbe
shrb
add
pop
mov
or
cli
cs
xchg
cmp
shl
xchg
add
ljmp
pop
pop
stc
push
add
mov
lods
push
out
je
lods
fs
add
push
sbb
xchg
stos
mov
ror
inc
sub
std
sub
shlb
test
scas
hlt
xchg
push
ret
ret
cld
xlat
mov
pusha
fistpl
inc
jmp
call
add
add
sub
clc
scas
jae
repz
rol
inc
repz
jbe
inc
fdiv
scas
mov
clc
je
test
out
and
sbb
cli
xor
imul
fwait
adc
mov
xlat
push
dec
mov
jl
rcr
rcrb
xchg
jnp
loop
icebp
mov
iret
xor
xor
mov
das
aaa
inc
adc
cmp
lods
add
push
popf
xor
sti
add
xor
push
stos
ret
xlat
test
pusha
outsb
out
loop
enter
push
pop
aam
cld
pop
subb
notb
mov
pop
mov
inc
push
push
movsb
imul
prefetcht0
fnstsw
mov
jmp
push
pop
sub
pop
and
mov
xor
push
sub
rcrl
ljmp
les
cmp
mov
mov
push
sub
ret
jp,pn
sub
push
jbe
std
push
xor
aad
mov
aas
fiaddl
jmp
fs
rcll
or
es
xchg
enter
ret
subb
enter
vunpcklps
imul
ror
loope
out
xchg
pop
aad
inc
push
test
fildl
lock
nop
pop
fisttpl
push
adc
sbb
lea
mov
add
lret
ror
jmp
add
adc
in
pushf
cmc
push
dec
call
stos
rolb
add
das
xor
shl
mov
cmpsb
movb
decl
mov
rcll
mov
inc
das
sarl
jo
dec
clc
stos
cltd
mov
xlat
push
daa
jb
sar
add
fisubl
cmp
test
jne
out
clc
add
lock
xchg
and
pop
incl
xchg
inc
fwait
cwtl
cmc
xchg
cli
inc
pop
rcrl
bound
fsub
stc
push
pop
mov
dec
pop
adc
mov
std
lret
jmp
scas
sbb
cmp
xor
inc
cmp
imul
fcomp
jl
aaa
jl
cmp
sti
or
jb
mov
add
scas
mov
repz
or
mov
xor
out
inc
out
adc
pop
sub
out
cmpsb
icebp
lock
push
popa
mov
push
shrl
push
add
aas
aad
mov
or
push
icebp
adc
and
arpl
sub
test
test
scas
into
add
mov
test
cmp
mov
in
sar
or
adc
sub
sbb
sub
inc
ja
push
rolb
push
and
roll
xchg
jne
es
and
cmpl
cltd
mov
or
push
push
pop
lea
fisubrs
or
test
aam
lds
and
mov
call
pop
repz
lods
in
lret
and
push
push
sbb
cs
sbb
in
scas
push
aam
xchg
stos
sbb
fldt
inc
pushl
mov
and
js
xor
cmpsl
or
jnp
lret
daa
je
stc
jnp
xchg
inc
repz
mov
push
cwtl
push
mov
outsb
dec
lret
or
std
cld
aad
sub
jmp
ljmp
pop
jo,pt
and
xlat
cld
in
lea
push
clc
iret
cmp
roll
xchg
or
jmp
sub
push
xchg
jns
shrl
fcmovb
cmp
sub
cmpsl
dec
push
xchg
fldenv
fwait
repz
movsl
outsl
xchg
pop
test
mov
aas
dec
mov
xor
mov
and
movsl
fimull
jb
notl
rolb
or
mov
sub
cmpsl
pop
out
out
mov
xor
or
mov
and
hlt
imul
pop
and
imul
pop
pop
addb
jle
mov
adc
std
jno
dec
in
or
push
inc
push
arpl
lret
sub
inc
push
add
test
popa
fwait
icebp
std
imull
lea
lret
cmp
aam
pop
xchg
sub
dec
sbb
jp
or
stc
mov
lret
jmp
fistl
mov
dec
ret
icebp
jbe,pt
fs
insb
or
and
mov
and
testb
fdivrl
add
hlt
call
seto
inc
stc
xchg
fsubl
push
xor
jno
cmp
sbb
or
ja
lret
nop
mov
lock
mov
or
sub
jmp
push
cmpsl
repnz
cmp
js
push
pop
mov
jns
aas
mov
push
lret
outsb
adc
insl
xor
cltd
rcrl
jge
adc
leave
lcall
pop
into
xlat
arpl
dec
cltd
insb
jno
or
cmp
fwait
mov
inc
outsb
mov
jle
add
in
cmpsl
mov
and
add
xchg
ja
sub
mov
push
pop
mov
mov
xor
sub
mov
inc
pop
lcall
rcrl
mov
insb
ss
test
push
xchg
cltd
addb
pop
xchg
xor
sti
rorl
aaa
aam
mov
es
cmp
sub
data16
divb
nop
or
xor
imul
insb
dec
mov
sti
mov
ja
cltd
scas
aaa
lods
cwtl
dec
push
shl
xchg
rcr
aaa
jmp
mov
in
pop
push
sbb
aas
mov
inc
outsl
sub
cmp
mov
js
lods
pop
pop
mov
xchg
lea
sarb
mov
xchg
stos
xor
incb
sti
inc
aam
jl
jecxz
jnp
push
ljmp
and
rcrb
popa
dec
pop
mov
lods
call
mov
pop
jbe
cmp
inc
das
lods
inc
jo
popa
adc
cmpsb
les
dec
and
adc
push
mov
adc
outsl
nop
xchg
dec
xor
pop
gs
pop
enter
dec
mov
push
sar
mov
jnp
cs
pop
aas
shr
and
cmp
pop
stc
orl
pop
sbb
push
jle
cltd
stos
cmp
rclb
fadd
sbb
dec
bound
js
pop
lahf
push
sbbb
cs
rcll
mov
cmp
add
mov
jo
aam
jmp
into
inc
adc
push
add
jbe
lods
cmp
xchg
arpl
jge
jecxz
adc
mov
in
push
subl
mov
mov
jne
shlb
adcb
and
cld
push
and
sub
jp
or
sbb
addl
mov
push
jae
daa
sub
sub
rclb
jg
hlt
mov
mov
push
xor
idivb
jae
xor
loop
ret
into
push
hlt
sarl
loopnew
jno
outsl
mov
in
inc
shrb
mov
jnp
or
lret
xor
mov
in
sbbb
stos
add
mov
mov
repnz
lret
lret
insb
sahf
sbb
aam
aam
js
pop
lea
or
test
mov
sbb
xor
jg
aas
jl
js
out
out
pop
or
jno
fnstcw
and
stos
push
and
push
sti
cwtl
push
jecxz
dec
jne
adc
repz
add
imul
je
push
pop
jl
lds
jnp
jb
mov
xor
cmpsb
enter
xchg
pop
jle
dec
cmpsl
sbb
push
inc
js
mov
mov
aad
inc
arpl
cmpsl
test
mov
popf
data16
sarb
lahf
dec
sbb
sbb
mov
xor
xorb
cmp
movsb
xchg
dec
ss
push
loop
out
sbb
pop
cmpsl
orl
cs
insl
shrb
xor
int
lcall
sub
movsb
inc
int
xor
inc
call
ds
mov
sbb
fidivrl
xor
iret
jle
push
fcmovbe
inc
movsl
xor
or
cmc
push
cmp
pop
dec
sarb
lods
popf
pusha
test
test
mov
sbb
xchg
or
lret
lahf
aaa
int3
mov
lret
aad
insb
or
mov
push
sti
cmp
lret
fcmovnb
fists
dec
insb
cmp
mov
outsb
lods
pop
call
fildl
jg
jnp
imul
mov
mov
or
jb
lcall
cmp
jge,pt
mov
rcll
xchg
in
test
dec
push
outsb
inc
fcomp
in
insl
das
pop
inc
fmul
mov
fbstp
adc
cld
and
xchg
push
inc
adcb
sub
movsl
mov
leave
adc
jae
hlt
push
lods
popf
jno
enter
sub
pop
xchg
sub
mov
xor
outsl
fadd
addr16
lods
mov
ror
pop
div
or
sti
push
je
mov
xor
scas
inc
mov
test
test
inc
ljmp
ja
xchg
adc
sub
xor
push
mov
scas
or
lods
xor
scas
in
loope
inc
mov
dec
adc
out
jecxz
and
sbb
adc
lods
xchg
and
sub
inc
dec
mov
cmp
mov
repnz
in
and
fucomp
sub
test
xchg
mov
xchg
pusha
lock
jl
pushf
pop
dec
inc
into
test
cld
stos
push
stos
sti
icebp
and
push
gs
js
sub
sahf
ja
and
stos
sub
or
cwtl
imul
in
pop
jge
cltd
rcrb
mov
sbb
pop
jmp
outsb
cmp
lds
jb
jno
inc
mov
jns
ljmp
decb
jmp
push
in
popf
jp
in
jmp
adc
mov
adc
popa
sbb
jno
imul
xlat
in
leave
and
mov
push
aam
lds
in
mov
dec
mov
sub
jp
pop
push
dec
in
mov
lcall
sbb
loope
dec
in
sbb
pop
mov
mov
jb
sub
mov
xchg
iret
test
in
daa
mov
cmp
mov
lcall
jge
loopne
sbb
aam
ja
aaa
lea
jns
ss
mov
cmpsb
clc
xor
inc
sub
adc
lock
xchg
jo
cwtl
leave
shl
es
lock
dec
push
mov
jl
fwait
test
fwait
sub
fcoml
int3
mov
addr16
repz
loop
jnp
ljmp
lret
outsl
jnp
mov
clc
mov
outsl
jo
in
scas
shll
insb
loope
lret
pop
jl
sub
mov
lea
dec
lret
lds
mov
data16
imul
or
fdivl
push
xchg
das
xchg
ret
and
mov
nop
imul
fldt
adc
clc
iret
pop
test
jnp
mov
das
xor
xchg
adcb
jge
fisttpll
mov
hlt
cmp
sbb
sbb
pop
leave
push
jno
inc
testb
test
cmp
mov
pop
sbb
lods
arpl
mov
mov
sarl
add
stos
imul
dec
cmpsl
cmpsl
sbb
push
inc
ja
jne
xor
shlb
scas
addr16
fisubs
push
inc
insb
xchg
cmc
mov
out
inc
loopne
cmp
insb
dec
nop
sbb
jno
mov
mov
lds
icebp
into
inc
out
pop
mov
ret
dec
jg
fwait
push
in
aam
or
das
les
mov
dec
outsb
pop
lds
jne
insl
pusha
mov
mov
add
lea
or
rclb
or
push
fimuls
outsl
les
sub
ja
mov
outsb
inc
addl
pop
iret
ds
and
add
pop
imul
and
inc
mov
rorl
das
daa
je
jmp
and
cmp
das
cmc
or
cmp
lods
or
je
movsl
int
push
add
fwait
pushf
jl
jp
icebp
inc
shr
bound
in
jge
repz
outsb
inc
fwait
loopne
mov
loope
stos
pop
add
lock
sahf
int3
ds
ss
lods
pop
lret
out
push
out
sub
and
cmp
stos
xchg
popf
pop
imul
sbb
cmc
push
jo
mov
jnp
je
sub
into
mov
pop
scas
lds
jo
mov
fsub
stc
inc
and
es
dec
ret
xchg
xchg
lahf
lods
sub
testl
sub
and
fsubs
or
pushf
call
or
pop
mov
sub
in
push
sbb
lods
cmpsb
pushf
bound
jo
rcr
popf
xchg
push
mov
icebp
jb
sahf
out
inc
lods
and
and
adc
cs
jg
mov
ljmp
push
loope
fimull
fs
inc
push
lcall
push
inc
add
adc
sub
push
inc
out
jle
cmp
mov
js
ret
jno
fs
cmpsb
imul
xor
andl
mov
out
imul
lods
adc
jae
pop
outsl
or
sub
fisubl
pop
cld
out
jno
leave
mov
or
dec
or
test
cmpsb
mov
and
popa
popa
scas
popf
jp
and
enter
lcall
lret
push
testl
lock
pop
in
imul
popa
sqrtps
cmc
sub
dec
mov
cmp
mov
gs
dec
mov
dec
pop
popf
cli
clc
cmpsb
in
addr16
insb
mov
je
lods
push
cmp
mov
push
xchg
sub
dec
bound
mov
xchg
cs
je
sti
lods
enter
mov
pop
or
mov
fildll
lods
cmp
jmp
sahf
pop
cld
inc
fadd
mov
test
xchg
and
sub
pop
pushf
and
cmpb
push
call
hlt
mov
jge
xchg
add
dec
lods
shlb
test
xchg
and
pusha
mov
inc
mov
cmp
sub
cmp
add
jp
add
push
lret
pop
xchg
pop
fcmovu
ja
and
pop
popa
shr
pop
arpl
push
adc
enter
push
add
inc
insl
mov
lods
jg
test
test
cmc
push
neg
aad
sbbb
and
rcrb
sarl
xchg
stos
xor
cmpsl
pop
add
adc
popf
adc
aad
mov
lds
movsb
lret
pop
or
movsb
pop
xchg
imul
mov
outsb
ljmp
mov
push
lds
pop
iret
cmp
repz
enter
push
mull
or
xchg
pop
mov
cmp
adc
ja
dec
jle
and
mov
push
jg
mov
fidivrs
repnz
or
xor
ret
stc
loop
test
xchg
je
out
leave
lret
cmpsl
add
lods
dec
call
repz
jle
rcr
pop
movsb
jle
sbb
sbb
sub
and
jbe
push
mov
or
add
lcall
je
and
push
mov
lret
xchg
mov
pop
mov
in
mov
loope
loopne
test
push
adc
xchg
in
jecxz
cld
mov
adc
mov
pop
mov
mov
and
jns
andb
mov
dec
cwtl
pusha
sarl
sbb
push
lods
test
adc
mov
mov
into
cmp
arpl
sbbl
add
frstor
mov
jbe
add
jmp
fnsave
fdivrs
pop
cmpb
imull
lock
adc
lcall
mov
or
dec
mov
xlat
call
jg
scas
and
adc
or
clc
push
leave
push
sub
sahf
outsl
leave
sbb
mov
push
testb
sti
push
ds
cmp
add
iret
push
fcmovb
int3
movsl
fs
clc
mov
pop
js
fdivrl
aaa
bsf
mov
es
push
dec
mov
or
pop
cmp
xor
clc
push
push
lds
shlb
fsubl
out
jne
imul
icebp
cmp
imul
pop
divl
int
lea
repz
pop
scas
adc
lock
lods
rcr
data16
sbb
sarb
int3
jecxz
xchg
fwait
in
adc
test
jno
int3
stos
cmpsb
data16
ret
ret
sbb
rcr
pop
ds
jg
jge
xor
or
loopne
cmc
std
or
js
cmp
push
cmp
fbld
loope
ljmp
test
or
ljmp
aam
stos
scas
rdmsr
and
sub
lret
bound
mov
mov
jae
xchg
cmp
mov
adc
mov
push
add
or
nop
push
mov
sbb
mov
inc
adcl
jp
repnz
pop
add
fbld
div
lds
dec
push
pop
pop
lea
scas
jbe
dec
lods
imul
jl
jb
dec
push
xor
mov
bound
fs
push
xchg
sti
ret
xchg
mov
mov
sti
jmp
jmp
add
pop
inc
xchg
jo
aad
cmc
add
lcall
pusha
jae
dec
xor
sub
cmp
push
popf
xchg
mov
scas
mov
sub
jbe,pt
or
jp
xchg
cld
add
jg
mov
aad
jns
dec
cld
ficomps
mov
push
fld
adc
push
mov
es
mov
stos
mov
jbe
xor
in
test
mov
cmp
add
test
inc
les
adc
push
fldcw
dec
cld
dec
cmc
mov
into
sub
fisubs
mov
and
jno
dec
sti
call
sbb
imull
xchg
sti
mov
in
stos
push
fwait
test
adc
jecxz
push
add
insb
mov
mov
rcll
mov
xchg
inc
push
daa
lds
inc
int3
inc
pop
pop
scas
js
and
outsl
cwtl
sub
sub
insb
icebp
mov
push
js
inc
out
es
pop
movsb
and
push
dec
push
orl
jnp
adc
popf
stos
daa
fsubp
add
lds
xlat
mov
clflush
test
popa
insl
adc
es
ret
mov
mov
adc
addb
sub
scas
xorl
repz
dec
and
cmp
mov
out
enter
dec
lret
and
fsubs
cmp
jb
and
fstpt
mov
stos
je
fimuls
scas
shr
insl
hlt
sbb
mov
ret
movsl
stc
test
jmp
push
xchg
inc
pop
or
icebp
xchg
es
jbe
mov
scas
rcrb
sbb
inc
ret
or
das
mov
jbe
lret
shlb
xor
fstl
mov
pop
mov
out
cs
xor
sub
scas
ficompl
das
std
cli
stos
and
dec
andb
cmp
stos
gs
ds
out
mov
jle
jle
adc
insb
cmp
mov
mov
insl
mov
ret
ret
mov
outsb
outsb
cmc
mov
adc
jmp
cmp
or
sub
adc
sti
repz
aas
pop
xchg
jae
cli
lcallw
lds
xlat
push
dec
pop
sbb
mov
outsl
sub
cli
lods
ds
movl
adc
hlt
out
cmp
xchg
stos
inc
lcall
xchg
xchg
mov
fs
ss
sbbl
fadd
aaa
cmp
mov
mov
dec
repnz
stc
cmp
jge
pop
mov
jl
add
inc
pop
lods
pop
sbb
pop
je
daa
je
push
jecxz
inc
outsl
sbb
rcl
push
pop
adc
ljmp
ss
test
xor
fstps
cltd
cmc
sub
loop
pop
iret
mov
mov
das
rorl
cmp
pop
jae
mov
ja
jno
mov
cmp
sbb
jo
fiadds
jne
xchg
push
stos
xchg
movsl
aam
inc
adc
xor
mov
iret
jle
pop
cmp
add
shlb
in
xchg
popl
shl
mov
nop
lcall
pop
testb
xchg
insl
mov
ljmp
fsubrl
popa
push
push
inc
aas
in
dec
and
imul
sar
sbb
mov
inc
movsb
sbb
jnp
jae
es
adc
pop
push
in
push
arpl
loope
mov
aam
ficoms
dec
lea
jecxz
jecxz
pop
push
and
je,pt
inc
cld
adc
fwait
imul
popf
or
aad
sub
adc
iret
push
adc
pop
jp
repnz
inc
jmp
dec
pop
and
push
inc
mov
sbb
lods
mov
stos
fistpll
mov
mov
or
add
cmc
test
inc
mov
lds
stc
subb
ss
jl
jne
xchg
push
mov
mov
xchg
das
xchg
inc
mov
mul
lret
adc
test
jnp
mov
call
dec
cmp
insb
inc
push
xchg
mov
pop
out
pop
test
jmp
rolb
mov
add
push
sbb
mov
pop
ds
xchg
in
inc
lea
dec
mov
cmp
out
jnp
pop
jg
mov
inc
int3
lods
dec
fistpll
fsubs
movsl
rcl
fistl
mov
sbb
mov
push
xor
adcb
pop
faddl
leave
and
mov
mov
jl
cmp
inc
fwait
pop
pop
mov
clc
das
sub
popa
inc
mov
pushf
addb
mov
cltd
and
pop
sti
ss
cli
bound
repz
push
jbe
push
inc
push
pop
je
jbe
out
cmp
cmp
in
clc
sti
mov
xor
and
insb
pop
repnz
aaa
mov
or
int
and
rclb
inc
or
inc
inc
mov
sub
sbb
iret
xchg
fnsave
test
mov
mov
xor
repz
push
jae
stos
xchg
fdivs
lods
mull
addb
out
ds
insb
push
inc
addb
and
arpl
xor
cmp
fwait
sub
test
rcr
ja
push
roll
js
push
dec
jecxz
mov
dec
cltd
pop
imul
and
notl
xlat
aad
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
out
adc
add
push
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
sbb
cmp
cmpb
repz
test
data16
xchg
pushl
enter
test
or
out
mov
movsl
dec
insb
in
xchg
idivl
cmpsb
in
movsb
movl
addr16
jns
int3
cmp
jbe
mov
sbb
roll
inc
sti
pop
loop
and
dec
inc
jae
pop
mov
xlat
js
movsl
mov
sub
rol
jns
int3
cmp
jbe
sub
sbb
add
mov
ljmp
sub
dec
sub
pusha
sub
sti
das
sarb
mov
push
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
jo
movsb
int3
add
imulb
xor
push
test
test
mov
stos
jmp
dec
push
push
stos
jmp
mov
add
jmp
imulb
xor
push
stos
jmp
negb
xor
push
stos
jecxz
test
xchg
sub
stos
stc
addl
xchg
repnz
push
stos
jmp
imulb
xor
push
stos
jmp
scas
imul
repnz
sbb
movl
jmp
imulb
mov
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
orb
stos
pop
mov
add
notb
rolb
xor
push
stos
jmp
fcomps
jb
xchg
xchg
push
stos
jmp
arpl
andl
add
imulb
xor
push
stos
jmp
push
inc
jae
sahf
std
jne
jmp
testb
repnz
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
xor
push
stos
jmp
imulb
sbbl
stos
movb
mov
cwtl
sti
test
cli
push
cli
pop
lret
lret
les
jo
or
xor
call
mov
sahf
sub
jle
mov
sub
shl
xor
pushf
loope
lock
jae
std
sub
std
sub
bound
loopne
ret
insb
inc
jbe
imulb
jo
mov
sbb
int
adc
push
xchg
adc
pusha
gs
cmp
sbb
lahf
pop
addr16
push
fnstsw
repnz
mov
fmuls
dec
push
inc
and
popf
inc
popf
cli
inc
ffree
imul
mov
xor
hlt
cli
or
enter
pop
arpl
add
and
push
or
pushf
mov
cs
jb
mov
add
cmpsb
mov
dec
les
mov
or
and
subb
push
ret
push
xchg
faddl
int3
sub
dec
mov
sub
push
cmpsl
test
loope
inc
inc
sti
mov
lea
sbb
orl
sub
andb
mov
mov
and
sbb
fimuls
pusha
fadds
pop
scas
inc
mov
jno
aam
arpl
sbb
or
cmp
iret
aas
xor
xor
pop
sar
shrl
jecxz
imul
mov
movsl
repnz
dec
repnz
outsl
sbb
arpl
pop
push
add
cmp
test
sbb
xor
jne
jmp
scas
insb
mov
dec
fcomi
out
and
pusha
pop
mov
or
clc
jmp
in
xchg
adc
pushl
cmpsl
add
fwait
cmp
mov
mov
ficoms
xor
jle
push
std
cli
xor
aaa
clc
sbb
sub
xlat
pop
imull
inc
adc
rclb
ds
fwait
pushf
outsl
stc
mov
xlat
dec
idivb
sub
xchg
sbb
loope
lods
add
negb
andb
xor
jl
sar
int3
in
dec
popa
gs
add
lock
jae
mov
mov
mov
jge
cmp
jge
inc
insb
dec
pusha
pop
mov
mov
push
cmp
call
sub
scas
mov
jne
outsb
mov
jo
out
es
imul
lods
popf
or
inc
mov
es
adcl
mov
ret
mov
cs
out
inc
lods
mov
cwtl
test
inc
shll
xor
imul
dec
jnp
mov
test
push
int
push
inc
inc
enter
roll
mov
xchg
outsb
inc
movsb
inc
adcb
mov
or
cli
fnstcw
shrb
outsb
xchg
out
lahf
pop
icebp
lcall
sti
sbb
js
pushf
push
call
push
mov
and
ja
or
xchg
pushf
div
sbb
sbb
inc
cld
lock
xor
inc
insl
jne
clc
icebp
loope
cmp
mov
push
adcl
ss
mov
iret
push
stc
xor
arpl
js
xor
dec
lea
int
fucomp
inc
xchg
mov
outsb
lcall
outsb
cmpsl
lods
sbb
and
insl
mov
add
test
jnp
ficomps
sub
in
jb
push
inc
cwtl
fistpll
mov
cmc
dec
mov
sub
shlb
shlb
lcall
imul
insb
mov
mov
clc
jp
inc
ss
and
cltd
jns
pop
stos
idiv
dec
es
scas
inc
test
dec
push
lds
imul
imul
ret
mov
push
adc
ss
mov
xor
movsb
scas
lods
mov
inc
loope
cmp
jns
loopne
pushf
xchg
push
add
mov
pop
jo
push
xchg
mov
stos
jo
jno
push
rcll
dec
push
cmp
sbb
imul
mov
fsts
imul
decl
pop
incb
data16
shll
pop
sbb
inc
jo
fstps
add
in
adc
sub
or
lods
insb
test
sub
lea
pop
fildll
clc
cmp
xchg
ja
xor
adc
jb
xchg
arpl
mov
stos
repnz
imul
mov
fldt
and
jge
xchg
fisubrl
bound
pop
popf
insb
xchg
pushf
mov
mov
or
sahf
insb
es
fwait
mov
repz
cltd
lret
sahf
ficomps
leave
xchg
pop
js
repz
mov
bound
ret
lds
and
adc
rorl
dec
adc
add
pusha
push
mov
stc
stos
js
xor
mov
mov
push
and
jge
add
jp
jmp
dec
xchg
cmp
lcall
xor
call
mov
cmpsl
sub
push
inc
popf
inc
inc
cmpsb
lret
das
rolb
mov
cld
fnstenv
rol
pushf
in
in
sub
insl
loope
lcall
aas
or
cld
and
push
jge
push
ja
cmp
and
mov
sub
xor
add
add
fidivrs
ret
jne
out
mov
pusha
pushw
ja
sub
inc
imul
and
imul
sarl
imul
sbb
js
out
mov
mov
xchg
adc
arpl
mov
fisubrs
xor
inc
in
push
arpl
cmpb
das
xchg
test
sub
mov
arpl
push
sbb
add
repz
ja
cmpsb
and
shrl
cmpsl
jl
and
adc
lods
mov
or
adc
cmp
xor
inc
adc
lret
and
int
sub
or
sti
jp
notl
sbb
lret
xlat
cld
cmp
das
mov
loop
cmpsb
pop
jmp
call
jl
sahf
or
and
in
lahf
jae
fistpll
push
inc
push
and
cmp
lahf
dec
sbb
divl
add
or
add
jle
jo
ret
repz
out
es
push
jp
dec
jl
xorb
rolb
rorl
jno
fistpl
push
ficomps
mov
dec
sub
add
mov
ss
cmp
insb
das
or
xor
mov
xchg
dec
aam
pop
into
push
clc
mov
xlat
test
rcll
shrb
fs
lret
add
adc
out
pop
adc
add
jns
enter
fisttps
fisttpl
mov
jb
cmp
jle
mov
dec
jmp
mov
popf
ss
lahf
lcall
fwait
test
pop
push
sub
add
add
inc
aam
in
sbb
adc
addb
ret
aad
shl
out
pop
dec
xor
sbb
popa
cmp
sub
mov
inc
rcrl
sbb
in
xchg
inc
mov
movsb
es
sub
pop
rorb
mov
shll
stos
iret
xchg
addr16
andl
and
mov
aad
je
imul
movb
popf
mov
stos
lret
pop
popa
xor
mov
pushf
orb
test
jp
in
sub
dec
and
or
lret
xchg
test
mov
loop
lea
out
fnstenv
mov
aas
js
mull
add
cld
inc
aam
mov
inc
ret
inc
add
pop
sub
cmp
outsl
loope
xor
out
das
out
dec
out
test
xchg
test
sbb
ret
clc
pushf
imul
fs
div
xchg
test
iret
les
jb
int
out
pop
and
loopne
lahf
in
orb
xchg
inc
lahf
cld
mov
xchg
and
daa
cwtl
clc
ror
mov
xor
jle
outsl
push
test
push
push
jmp
jne
fcomi
mov
lods
lcall
inc
xchg
mov
lahf
aad
in
lods
repnz
outsb
popf
pop
add
insb
jg
mov
mov
xor
push
sbb
outsb
int3
mov
cs
mov
pop
xchg
pop
add
xchg
xchg
push
arpl
sar
sub
mov
out
popl
mov
pop
cltd
inc
push
inc
insl
inc
pushf
jb
push
push
fidivrl
push
or
repz
cmp
or
sub
xchg
push
pop
push
push
clc
call
mov
icebp
shlb
push
dec
sbb
imul
shll
test
mov
out
or
push
cli
adc
lret
adc
pusha
lret
addb
pusha
xchg
adc
jae
sub
sbb
xor
xor
aad
ljmp
out
jno
out
pushf
adc
mov
xor
adc
fld
push
push
je
xor
dec
adc
push
insl
pop
push
nop
mov
iret
ret
aad
dec
sub
dec
cmp
loope
jmp
sbb
lret
inc
adc
fidivrl
iret
mov
cmp
xchg
mov
sahf
jp
rcrl
in
loopne
cmp
pusha
test
mov
outsl
fsubrl
js
jge
xor
repnz
xor
das
add
mov
cs
jmp
xchg
sbb
mov
jge
mov
push
sub
xor
repz
and
clc
les
jg
insb
sbb
sub
push
ss
xor
mov
jecxz
mov
cmp
lock
mov
imul
rep
pop
sti
loop
in
add
dec
or
shll
lock
pop
int
xor
push
xor
cmp
mov
icebp
popa
aad
neg
mov
mov
xor
outsb
and
mov
insb
in
xor
ret
xchg
pop
mov
ja
popa
pop
lea
mov
jb
xor
mov
sbb
scas
push
cwtl
add
lahf
ljmp
mov
inc
daa
imul
int
push
add
sbb
lds
inc
std
xchg
pop
pusha
xor
push
ror
pop
inc
fdivr
cmp
push
cli
push
jo
adc
orl
dec
cmp
hlt
inc
das
sub
cmpsl
and
sub
ret
mov
addr16
xchg
ss
in
lret
insl
cmp
stos
insl
pop
popa
imul
jmp
mov
add
cmp
push
pop
dec
push
mov
out
xlat
jmp
xchg
les
push
mov
mov
pop
aaa
jne
arpl
push
fsts
dec
mov
and
mov
ret
push
arpl
stos
push
xor
outsl
adcl
outsl
inc
add
xchg
or
inc
mov
inc
mov
into
loopne
pop
shlb
push
icebp
enter
push
xchg
fidivrl
jne
cld
xor
jb
loope
and
ja
cwtl
cmpsb
cmc
mov
imul
ss
popf
jno
mov
mov
arpl
cmc
stos
mov
jae
dec
pusha
mov
movsb
orl
nop
std
stos
adc
loop
movsl
pop
push
jle
cmp
icebp
adc
xor
push
lcall
lea
sti
pop
lods
iret
cmp
pop
sbb
pop
das
or
sti
es
mov
adc
mov
jb
mov
push
cltd
subl
imul
inc
arpl
xor
mov
mov
test
pextrw
subw
xlat
ds
iret
je
lds
mov
jmp
adc
xchg
sub
aam
pop
mov
mov
decl
outsl
hlt
pusha
jo
xorl
loopne
arpl
dec
hlt
push
iret
pop
cmp
jle
jmp
jl
jne
rorl
mov
dec
pop
sbbb
push
pop
pop
mov
inc
push
arpl
cwtl
leave
enter
imul
adc
push
xor
pushf
cmpl
sub
adcb
and
out
pop
mov
bound
push
jo
sub
pop
clc
or
outsb
ret
fcoms
hlt
jb
sar
ja
imul
cmp
cwtl
call
pop
in
shlb
cld
imul
mov
clc
add
add
mov
jge
aas
mov
lock
mov
notl
icebp
out
add
jae
ret
ror
mov
cs
adc
xor
jne
sahf
add
xor
imul
lods
pop
mov
push
mov
jmp
mov
jb
jno
lds
sbb
add
add
jg
dec
xor
dec
orb
rorl
sub
adc
mov
mov
push
js
cmpsl
xchg
xor
push
mov
push
mov
inc
or
xor
dec
out
into
sbb
lcall
inc
in
pop
or
xchg
into
mov
ret
insb
cmp
push
push
movsl
lss
push
jbe
dec
pop
out
cmp
sbb
jmp
int
push
mov
lock
lea
jmp
inc
in
aas
cltd
popf
mov
stc
mov
in
and
xchg
cmp
insl
daa
test
pusha
or
sub
mov
dec
lds
jns
dec
cmp
push
test
pop
adc
fcoml
fldcw
push
add
inc
jns
cs
jb
mov
stc
aas
hlt
ret
bound
mov
jnp
in
xchg
repz
fistpl
mov
shll
mov
cmpsl
cmp
xor
shll
mov
lea
xor
and
movsb
data16
jns
or
mov
ljmp
movsb
jo
xchg
or
cmp
mov
js
aaa
in
mov
push
sub
out
stos
insb
mov
add
sub
fiaddl
das
push
jecxz
cmp
xor
jecxz
mov
pop
mov
push
push
pop
cmp
leave
push
push
lcall
setne
into
les
fnsave
push
mov
in
cmp
mov
icebp
mov
and
das
or
mov
xchg
xor
out
mov
and
ret
lods
and
scas
movsb
adc
or
xchg
and
sub
in
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
