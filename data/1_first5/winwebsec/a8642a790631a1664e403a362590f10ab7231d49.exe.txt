and
sti
data16
jmp
mov
jnp
cmp
xor
push
mov
cmpb
addr16
mov
call
inc
mov
sub
frstor
std
aaa
sbb
dec
push
xlat
pushf
jmp
inc
mov
dec
jne
add
jne
aad
sarl
inc
in
mov
pop
push
nop
pop
mov
mov
lret
mov
push
ja
in
lock
mov
adc
or
int
enter
int3
mov
bound
test
sub
and
cmp
std
push
push
or
pop
jge
lods
adc
mov
mov
lcall
xor
call
inc
push
dec
push
call
sbb
mov
or
jmp
xchg
ret
in
bnd
and
outsl
mov
out
jno
insl
pop
xchg
mov
pop
add
pusha
movsb
jp
test
cmc
mov
fisubs
into
ret
inc
pop
je
sbb
jno
ds
fsubs
jp
movups
and
ss
sbb
mov
sbb
fnsave
stos
sbb
mov
imul
sbb
mov
xchg
pop
dec
inc
int
push
nop
or
cli
jae
stos
inc
mov
les
inc
out
and
scas
mov
jo
adc
add
leave
fsubrl
cmp
fnsave
pop
hlt
or
shll
jbe
jp
fadds
mov
sub
lret
lcall
stos
addr16
loop
lods
cmpsl
popf
or
les
add
sbb
xchg
fwait
or
cmpsl
lock
rorb
shrl
imul
stos
ja
mov
ja
add
pop
pop
rolb
aad
shr
sub
cmp
cmpb
imul
icebp
xchg
xor
rolb
loope
pushf
mov
push
fwait
test
dec
pextrw
push
cmp
out
call
inc
fdivp
bswap
lret
jnp
add
jecxz
inc
cwtl
fs
ja
outsl
popf
mov
xchg
test
and
adc
nop
pop
push
cld
loopne
rcl
es
mov
push
call
ss
mov
imul
mov
pop
loop
call
xchg
xchg
xchg
cmp
sub
push
daa
pop
test
ror
push
insl
adc
push
sub
dec
iret
sub
subb
xor
inc
rclb
repz
mov
shlb
and
test
xor
int3
ljmp
mov
int3
push
popf
push
dec
jno
jbe
jbe
mov
push
popf
aaa
xchg
mov
cmp
mov
fcoms
pop
pop
dec
ja
mov
or
pop
aad
in
lods
jns
aad
cmpl
mov
mov
pop
icebp
sbb
add
push
mov
repz
rclb
xor
movsb
fimull
into
ror
lock
or
or
int3
xorl
mov
mov
lock
ficoms
lods
fwait
inc
adcb
sub
sub
sub
mov
pop
mov
inc
fbld
ja
jmp
jb
sarb
rsm
jo
test
imul
cmpsb
mov
xorl
mov
movsl
push
repnz
mov
lcall
push
lahf
cmp
lds
sub
jb
adc
insl
aas
les
pop
fstl
mov
add
outsl
ja
mov
subl
lock
mov
dec
xchg
aas
loope
push
sbb
sub
pop
pop
jle
sbb
xchg
xchg
lods
push
jge
imul
pop
cmp
cmp
xor
movsl
imul
xor
jecxz
pop
jle
jp
incl
push
add
xlat
adc
cmp
push
enter
loope
mov
inc
in
xor
cwtl
jp
mov
out
andl
fnstcw
jo
mov
insb
add
scas
mov
pop
pop
arpl
and
add
shl
push
mov
pusha
arpl
mov
popa
or
xchg
adc
jmp
sub
ficoml
cld
inc
je
lods
lods
pop
mov
and
push
sub
lret
ret
fidivrl
jo
sahf
ror
bound
mov
or
jp
mov
dec
pop
es
mov
push
fdivrp
stos
fldcw
int
scas
dec
insl
je
jo
add
test
mov
sarl
jge
ja
jmp
js
sbb
mov
nop
sbb
adc
out
es
xchg
jecxz
jnp
inc
push
push
pushf
add
mov
adc
cmp
cmpl
add
and
shl
das
push
loop
cmp
mov
jb
sbb
js
cmp
call
jg
loop
cmc
fs
aas
pop
inc
imul
or
push
mov
clc
scas
nop
inc
into
cmp
ja
sar
or
or
pop
mov
dec
xor
push
add
mov
xchg
cmp
mov
lods
outsl
sbb
push
mov
pop
pop
push
loopne
sub
add
mov
mov
pusha
mov
int3
push
pop
add
lods
das
ret
pop
test
mov
pop
adc
pop
je
sahf
sbb
iret
stos
or
sub
movsb
inc
pop
gs
in
or
dec
ja
cmp
dec
testb
bound
push
push
sub
lret
xor
pop
out
mov
mov
mulb
lcall
inc
out
push
dec
pop
aaa
nop
xchg
mov
aas
cmp
pop
fnstcw
add
push
xor
mov
cmp
cmp
inc
mov
fst
xor
es
cmpsl
jnp
cs
int
adc
mov
das
jnp
mov
ljmp
in
out
mov
fiadds
sahf
fsts
add
in
cwtl
out
stc
jno
xchg
jb
jae
test
ret
pop
fs
gs
fiaddl
fnstsw
xchg
inc
shrb
aaa
or
mov
add
mov
repz
sub
cmp
out
push
xchg
fmull
and
add
daa
inc
add
push
dec
mov
outsb
fwait
imul
aad
das
sub
xchg
cmp
scas
pop
fs
outsl
xor
mov
stos
xor
aas
int
ja
rcrb
or
jno
pop
mov
outsb
cmp
push
inc
leave
cmpb
testl
mov
outsb
sbb
in
out
and
sbb
jne
data16
out
repnz
sbb
cltd
or
jb
rcll
scas
sub
mov
lods
sti
mov
xor
ljmp
lods
mov
push
lock
pop
sub
imul
mov
adc
aam
xchg
in
xchg
and
dec
and
mov
and
sahf
cld
xchg
lods
fwait
and
cli
scas
push
add
inc
out
in
sbb
push
sub
jl
mov
or
das
cld
loope
sti
add
arpl
cmp
push
jle
cs
movsb
adc
jg
rolb
cli
inc
pop
lcall
adc
rclb
test
scas
dec
cmp
addr16
ljmp
xor
fst
ret
es
shrb
cmp
push
pop
or
or
into
out
addl
enter
cmp
out
adc
sub
pop
gs
and
pushf
push
sbb
and
and
ret
popf
fisubrs
outsb
or
test
xor
sarb
enter
push
outsl
sub
cmp
in
cld
into
mov
add
or
cli
push
fistpl
insl
ja
nop
adc
ja
jp
movsl
arpl
pop
jb
push
hlt
jl
mov
push
lock
inc
pushf
scas
pushf
or
fs
es
sub
data16
imul
seto
popa
in
icebp
or
aas
sub
jnp
push
sbb
or
in
adc
xchg
movsl
sbb
jbe
jmp
mov
xchg
xchg
ja
mov
clc
sbb
sbb
xadd
ds
mov
dec
cmp
testl
ss
lock
mov
pop
mov
jnp
sbb
push
jbe
out
sub
mov
sbb
xor
mov
adc
xchg
mov
popa
mov
imul
mov
push
push
xchg
addl
imul
in
lods
xchg
rcl
or
or
push
lods
push
test
lds
push
dec
and
idiv
sbb
jb
xor
lods
push
jne
mov
sbb
jg
into
mov
cltd
rcrb
mov
ss
and
fs
dec
fs
cltd
sbb
mov
adc
jecxz
pusha
inc
testl
hlt
hlt
push
add
mov
pusha
icebp
into
ret
lods
cmpsl
push
adc
sub
cmp
xchg
sbb
repz
xchg
jb
jle
ss
mov
sub
movsb
mov
sahf
inc
pop
test
in
clc
in
jle
jg
mov
mov
cld
int
sbb
mov
sbb
mov
mov
mov
sti
pop
jl
and
or
lcall
cmp
test
hlt
xchg
mov
pop
jge
addr16
cmp
imul
cmpsl
xchg
stos
mov
loope
int3
jp
or
add
adc
pop
mov
test
fcomps
fistps
pop
ffree
push
inc
xor
pop
push
cwtl
sub
inc
ja
pmuludq
lahf
in
dec
or
lock
mov
sub
out
push
loop
test
hlt
fs
or
sbb
sbb
mov
cmp
adc
sub
dec
pop
xchg
mov
cmp
mov
jne
imul
pop
imul
out
xchg
iret
pop
cli
mov
mov
pop
aas
xor
inc
dec
movsb
ljmp
leave
cli
cmp
fdivr
sahf
xchg
fists
push
sbb
sub
fwait
mov
arpl
addr16
cmpsb
adc
out
aad
sbb
add
xchg
lods
xorl
ds
bnd
addr16
sahf
ja
in
push
adc
push
sbb
adc
rcll
pop
fists
fcos
and
or
les
xchg
and
xchg
das
cmp
mov
and
pop
xchg
dec
push
pusha
jge
sbb
mov
nop
notl
sti
cmpsb
imul
xor
repnz
mov
into
or
mov
mov
lock
mov
inc
adc
add
adc
ret
cmc
in
cltd
sub
xchg
ret
scas
mov
pushw
ror
jae
add
outsl
call
push
xchg
loop
mov
aad
outsl
lcall
push
pop
rolb
xchg
fndisi(8087
adc
fsubrp
ja
loopne
fwait
cmp
imulb
lods
mov
mov
inc
or
xchg
loop
sbb
stc
push
jp
mov
mov
mov
clc
fnsave
xchg
add
sbbb
andb
je
jo
mov
xor
jecxz
enter
hlt
mov
cltd
add
mov
stc
adc
inc
xlat
mov
test
ljmp
jo
in
xor
icebp
fs
push
and
xor
dec
outsb
frstor
out
icebp
les
sti
pop
ret
sub
enter
aas
call
push
jo
mov
xor
in
mov
xor
jne
cmpsb
add
xor
pop
sbb
push
testl
shrl
inc
push
enter
inc
fwait
loop
outsl
in
sbb
jge
lods
ret
test
in
mov
popf
xor
or
enter
jmp
xor
xlat
incl
adc
scas
mov
test
jb
lret
inc
inc
pop
push
cmp
add
add
lret
roll
mov
push
jne
pop
sub
shlb
push
xchg
ss
int
hlt
js
cli
push
push
mul
sub
sbb
lock
cwtl
mov
pop
lcall
jecxz
jae
jle
jle
jae
mov
cmp
jmp
xchg
mov
xor
jle
push
xchg
and
negl
push
pop
pop
or
out
pop
pop
cmp
scas
clc
mov
call
inc
dec
jnp
mov
add
rclb
icebp
pop
pop
xchg
xor
jne
or
mov
test
xchg
inc
imul
aas
add
jmp
sub
mov
fistpll
push
jecxz
fimull
pop
push
fpatan
pop
incb
jp
mov
ljmp
add
jmp
push
fisubrs
outsl
pushl
add
test
out
bnd
push
mov
dec
add
jne
repnz
nop
repnz
push
fisttpll
subb
fs
out
popa
cmp
data16
mov
fcmovb
movsb
sub
nop
sbb
xchg
sti
adc
xchg
pop
inc
pusha
je
out
or
cmp
inc
dec
jo
fcomps
dec
loopne
pop
push
mov
lahf
leave
loop
xor
cmp
xchg
jp
pop
cmp
push
push
outsl
notl
and
xor
lods
xor
sbb
scas
sti
sbb
mov
enter
in
addr16
aam
or
mov
jle
in
insl
push
sarl
xchg
fisttpll
test
xor
pusha
xor
iret
rcrb
loop
iret
sub
mov
jno
inc
aad
mov
mov
in
jo
nop
aad
pop
xchg
aad
xlat
mov
iret
mov
mov
outsb
cmpsl
fistpll
scas
insl
mov
sbb
mov
mov
sahf
lcall
clc
xchg
mov
push
jecxz
inc
inc
xchg
xor
rcrb
gs
cmc
xchg
outsl
and
mov
addl
xchg
jecxz
dec
dec
imul
sub
je
sbb
aam
popw
dec
xor
in
push
dec
ljmp
lds
mov
dec
stc
adc
mov
stc
xchg
repz
xor
mov
xlat
mov
add
sbb
in
xchg
mov
pop
jno
or
sub
jno
adc
cmp
fwait
dec
xor
jp
push
stos
jns
sbb
pop
jns
jbe
mov
sbb
pushf
xlat
lea
cmp
into
aad
xlat
dec
mov
xchg
jo
hlt
inc
js
aad
scas
xchg
lcall
lret
jmp
int
mov
inc
xor
dec
test
stos
jo
cli
sbb
fs
outsl
pop
pop
adc
add
add
mov
lods
inc
cmpsb
out
add
jp
pop
lret
xor
sbb
push
lods
pusha
mov
popf
adc
aam
adc
out
les
clc
pop
or
sarl
push
inc
cmp
cmc
or
je,pn
movl
fstpt
sub
inc
mov
jmp
stos
daa
pushf
mov
sbb
int
stos
mov
adc
ljmp
and
stos
mov
fiadds
push
dec
out
cltd
repz
mov
sbb
shlb
push
stc
inc
sub
cli
sub
inc
sar
out
sub
and
pop
or
sub
xchg
insb
sti
sub
push
and
jno
sub
jecxz
ja
dec
leave
xor
repz
or
adc
loopne
jbe
or
and
adc
lcall
mov
xchg
dec
and
xchg
jno
ret
ja
aas
pop
mov
pushf
inc
push
rcr
shlb
pop
ss
mov
xchg
push
inc
add
aad
enter
jmp
mov
mov
sub
sti
out
pop
clc
mov
jb
faddl
dec
cli
sti
outsb
mov
cwtl
pushf
sbb
inc
out
test
mov
xlat
push
mov
scas
cwtl
lea
mov
inc
scas
cwtl
pushf
push
fidivs
pop
insb
pop
mov
mov
adc
or
aam
adc
mov
imul
xchg
push
arpl
fldenv
mov
leave
mov
push
or
xchg
xor
lods
jnp
jae
imull
mov
pop
arpl
arpl
and
lret
add
mov
iret
icebp
mov
and
je
dec
or
repnz
jl
lret
or
mov
or
and
insl
into
cmp
dec
jnp
mov
cmp
dec
dec
cltd
es
sub
into
pop
push
es
dec
cmp
sti
and
push
jp
fcomp
push
ja
xchg
loop
xor
jmp
jbe
and
jne
fbstp
lock
cmp
push
test
stos
ds
clc
inc
sub
rcl
scas
sbb
fucomp
xor
xchg
or
fwait
sahf
mov
out
lods
adc
shlb
or
jnp
cmpb
adc
and
gs
enter
inc
mov
cmpl
cmp
out
fcmovnb
lock
das
sbb
je
or
nop
mov
out
icebp
mov
xchg
outsb
lea
push
mov
fdivrl
inc
out
test
lret
maskmovq
divl
dec
jg
gs
cmpsl
jl
loope
pop
aaa
mov
lahf
push
iret
push
enter
cmp
leave
and
pop
adc
push
jo
enter
pop
mov
jb
jns
test
arpl
xor
or
xor
inc
sahf
je
enter
cmpsb
fadds
mov
adc
inc
xor
fs
push
les
pop
inc
push
fnstcw
xor
pop
jmp
fadd
mov
push
outsb
add
or
pop
bound
call
push
or
jmp
add
cmpsl
and
cwtl
push
mov
cli
dec
add
rorl
lcall
ficompl
dec
insb
subb
sti
and
xchg
add
mov
push
lods
mov
std
mov
xor
ficoml
inc
jecxz
pop
mov
jbe
sbb
xchg
push
pop
or
std
pop
pop
int
cld
xchg
scas
shll
cltd
mov
xchg
sub
adc
adc
fbld
push
dec
xchg
adc
pop
add
cwtl
test
adc
das
mov
lahf
mov
xchg
movsb
dec
jle
xchg
mov
out
cmp
in
nop
insl
mov
and
add
mov
bound
mov
lret
mov
mov
dec
xchg
adc
loopne
ret
fbld
or
jp
push
mov
pusha
xor
push
sub
add
leave
pop
or
and
pop
mov
dec
add
mov
neg
or
pop
xchg
in
aad
dec
insb
adc
cli
in
push
adc
adc
jo
jo
fwait
xchg
jle
pop
dec
sti
popa
movsl
punpckhdq
fidivs
aam
mov
roll
in
dec
sbb
or
push
xchg
mov
pop
sub
push
mov
mov
je
cwtl
stc
sbb
jle
and
sbb
jmp
test
xor
push
jne
push
fdivl
xor
xor
pop
or
test
cmpsb
dec
or
cmp
cvtdq2ps
movsl
dec
call
lock
loope
xchg
and
inc
inc
pminsw
cli
jecxz
and
or
dec
lea
pop
mov
xor
imul
adc
xor
or
aas
adcl
inc
fimuls
sbb
jl
shll
fwait
lret
sbb
xchg
sub
out
pop
icebp
sub
jns
sbb
in
fnstsw
cmp
or
fmuls
test
adc
cmp
lret
inc
mov
testl
sub
mov
pushf
mov
cli
aas
xor
sub
popa
popf
out
loop
test
icebp
jnp
imul
push
push
pop
pop
fists
or
in
daa
mov
icebp
jecxz
inc
sarb
add
imul
ja
shlb
adc
fbstp
call
sub
inc
into
movhps
outsb
cli
xor
push
cmc
andl
inc
sub
out
lock
jp
and
in
add
sti
adc
leave
or
movsl
cmc
arpl
aam
jae
mov
lret
insl
and
sbbb
adc
mov
jno
sub
jns
movsl
or
pop
dec
jbe
push
shrl
cld
jmp
rcrb
hlt
pop
jb
cmpsl
dec
xor
push
mov
test
mov
jb
and
aas
das
cmpl
mov
jno
or
rcrl
fnstsw
outsl
mov
xor
sub
or
dec
push
mov
mov
cwtl
popa
ljmp
mov
lds
mov
hlt
dec
daa
cmpsb
cmp
sub
arpl
insl
push
cli
pop
add
push
aaa
clc
xor
int
dec
pop
dec
rcr
out
ja
xchg
rorl
andl
out
push
push
lods
outsb
ds
sbb
movsl
mov
cmp
jecxz
sub
lock
std
movsb
sub
test
jbe
iret
push
into
scas
aas
xchg
push
mov
dec
insl
mov
xchg
mov
sub
sbb
gs
xor
incb
inc
pop
and
movsl
and
cltd
mov
arpl
out
addr16
mov
push
rclb
aas
je
movsb
int3
sub
add
lods
stc
frstor
movsb
andb
insl
xor
outsl
jae
shrb
pop
xor
call
shrl
jbe
mov
add
push
xchg
vandps
push
xchg
int3
push
lock
cmpsb
jns
dec
mov
inc
mov
mov
sub
sbb
stc
jne
jg
popa
icebp
xor
out
pop
movsl
or
in
push
push
cmp
out
sbb
int
scas
mov
cmp
lds
or
mov
in
or
pop
scas
pop
lret
mov
inc
adc
mov
imul
xchg
je
nop
lahf
dec
mov
aas
sub
fidivl
pop
xchg
cmp
mov
mov
nop
into
pop
stc
jae
mov
add
scas
aad
mov
cmp
in
push
fwait
jle
add
call
sbb
shlb
push
fnsave
and
aaa
push
stos
loopne
or
test
aad
stos
das
pusha
movsl
lret
mov
loop
cwtl
cmpb
xchg
pop
jns
cmpsb
mov
outsb
outsb
lcall
add
rcrl
aaa
dec
xlat
test
popf
jb
pcmpeqb
xchg
les
test
lret
std
mov
stc
ficomps
xor
testb
push
ss
hlt
sahf
out
inc
mov
inc
mov
lock
dec
or
cltd
adc
dec
lods
xchg
movsb
mov
and
jo
in
lcall
popa
adc
dec
cwtl
ret
jo
outsb
mov
inc
inc
testl
pusha
mov
xor
iret
cmp
gs
add
mov
mov
xchg
fwait
jg
adc
jns
cltd
jecxz
push
out
lret
aas
cld
adc
xor
shll
mov
cs
lcall
mov
mov
sbb
pop
dec
daa
push
movsb
inc
outsb
xchg
xchg
mov
daa
arpl
loopne,pt
sub
xlat
in
out
loope
xchg
or
cld
iret
mov
or
cmovb
adc
xor
das
sti
sti
and
daa
lds
dec
stos
es
mov
je
and
mov
sbb
in
outsl
rcl
mov
xor
pushf
xchg
mov
xchg
adc
adc
mov
pop
push
mov
in
dec
pop
stos
sti
ret
iret
inc
inc
data16
mov
or
jbe
scas
cltd
ljmp
movsb
pop
rclb
fsubl
cmp
outsb
pop
jne
sbb
lahf
jge
or
xchg
inc
pop
sbb
int3
fsts
incb
mov
sub
jecxz
and
pop
jl
jnp
stc
cmpsl
mov
outsl
cmp
jno
enter
fldenv
out
inc
mov
cmp
cmp
repz
push
in
es
in
stos
xchg
cmc
pop
mov
mov
dec
aad
sbb
or
sub
out
repnz
mov
jp
and
mov
adc
hlt
jecxz
cmp
mov
cmpsb
test
pop
mov
cli
add
jge
outsl
mov
and
pop
and
int
mov
negl
mov
jl
lods
pop
jnp
adc
jb
inc
mov
pusha
xor
xchg
push
imul
lret
cmpsb
sub
push
push
push
mov
jb
inc
mov
loope
sbb
fldl
int
pop
push
in
cmc
in
out
sub
xchg
xchg
roll
push
shlb
lahf
mov
cmp
and
sbb
movsl
movsb
mov
rcrl
mov
fcomps
inc
aad
mov
push
cltd
lock
lods
cmp
adc
sub
and
lret
idiv
data16
loop
cs
idiv
loopne
jns
mov
mov
and
cwtl
mov
mov
lahf
dec
dec
jecxz
jno
cmpsl
mov
sti
cmp
xchg
rorb
das
lahf
repz
cwtl
xorb
cmp
mov
out
fcomps
xor
mov
dec
cmp
inc
les
pop
addb
pop
imul
into
jns
je
xor
sbb
sub
pop
sarb
int3
inc
vmulpd
sbb
pcmpeqd
adc
mov
outsb
int
sti
das
movsb
pop
mov
inc
sub
std
aas
mov
jmp
jmp
cmpsl
xor
cltd
std
mov
and
fcoml
cmpsl
xor
mov
stc
cltd
loop
xor
sbb
cmp
sub
mov
jmp
cmp
sbb
mov
fxtract
and
nop
cmp
rolb
das
adc
loop
ret
or
repz
push
aas
std
mov
jbe,pn
jg
mov
dec
es
xor
lods
lret
adc
movsl
lods
stos
jge
push
std
das
jns
jl
adc
push
cmp
inc
insl
insl
push
stc
push
jb
das
call
xor
mov
cmp
je
outsb
jae
outsl
call
je
aas
sbb
insb
outsl
loop
loop
roll
stc
xchg
adc
insl
lods
mov
push
mov
push
jmp
xlat
lods
dec
and
ja
inc
adc
push
sub
cmp
adc
inc
inc
insl
and
loopne
dec
aas
pushf
arpl
xchg
xor
mov
repnz
sti
inc
dec
sbb
pcmpeqb
cmp
jp
aam
push
sub
sbb
xlat
cmc
jne
cmc
stos
test
ss
scas
push
sub
rorl
inc
scas
int
sbb
out
push
push
hlt
rolb
lret
call
in
mov
mov
fwait
imul
push
aas
ds
cltd
mov
push
xchg
adc
lcall
fcompp
adc
test
ret
lret
or
sub
mov
sub
cmc
nop
lods
lds
jmp
mov
sbb
pop
mov
cmp
int3
jecxz
mov
clc
addr16
sub
jl
mov
mov
test
jle
and
incl
xchg
push
sahf
leave
out
xorb
das
mov
lea
int
outsb
jp
popf
cli
repz
mov
mov
in
insl
js
scas
fdivrs
or
lea
std
push
stos
pandn
adc
push
lret
mov
mov
mov
push
jnp
scas
lock
cmp
dec
sbb
adc
mov
sarb
mov
subl
add
mov
push
movsb
cmp
inc
sbb
push
dec
dec
sub
xchg
ljmp
imul
xchg
test
ds
and
stc
or
push
lods
jae
repz
nop
push
mov
cmp
jbe
xchg
or
cs
xchg
sti
mov
iret
fmul
add
cmp
push
adc
xor
inc
lret
push
rorb
scas
test
sti
or
pusha
rclb
xchg
xchg
nop
in
cs
pushf
in
jbe
cmp
fcompl
xchg
js
xor
inc
mov
mov
push
inc
arpl
xchg
out
push
loopne
pushf
push
ret
sarb
das
xchg
pop
xchg
aam
out
sub
push
jmp
aas
mov
adc
sub
jle
cmp
lea
mov
adc
mov
fistpl
insl
and
in
fimuls
xor
sbb
bound
icebp
push
push
lret
mov
pushf
ret
lods
lods
lahf
sbb
in
sbb
lods
jle
inc
outsb
cmp
inc
jecxz
in
icebp
dec
mov
insl
add
xchg
incl
xor
dec
sti
cli
jg
xchg
dec
inc
popa
jbe
adc
cli
call
sbb
cmp
addr16
and
hlt
popa
mov
std
push
pop
or
pop
add
xchg
mov
negb
xchg
xor
mov
cmp
testb
jbe
and
ret
dec
les
pop
push
mov
xchg
push
clc
nop
push
or
lret
xchg
ror
push
sbb
movsl
inc
xor
fcompl
inc
lret
pop
xchg
cmpsb
call
fdivrl
icebp
dec
pusha
jnp
loopne
jns
mov
cwtl
ja
scas
in
scas
jae
loop
add
icebp
mov
sbb
add
repz
or
sbb
cwtl
iret
dec
inc
push
outsb
outsb
inc
jnp
xor
and
ds
lret
xor
pop
outsb
incb
jb
aas
mov
jg
imul
repz
adc
push
mov
test
pop
mov
sahf
mov
jl
rcl
and
fbld
fs
dec
add
inc
subl
add
in
movl
jecxz
mov
xchg
sbb
fsubs
dec
dec
dec
jne
or
push
dec
push
or
enter
repz
lcall
jae
pop
insb
mov
mov
inc
fmul
pop
roll
push
push
mov
sbb
sahf
popf
aam
movsb
dec
dec
inc
int
sub
pop
sbb
pop
sbb
fwait
add
fcmovnbe
mov
rol
mov
shll
insl
outsb
or
cmp
je
cmp
mov
xor
push
fldl
repnz
push
sti
subb
pop
pop
push
lcall
dec
out
in
imul
or
icebp
push
inc
xor
mov
and
loope
idivb
imul
nop
dec
xchg
xor
adc
adc
lods
jp
add
sti
mov
mov
movsb
xchg
push
cmp
push
sub
lods
lret
xchg
dec
das
out
inc
adc
lods
aam
jmp
stos
ja
loope
mov
mov
sahf
mov
xchg
jecxz
sub
stc
out
call
and
xor
xchg
sbb
incb
xchg
enter
loopne
push
sti
incl
pop
xor
imull
and
dec
nop
mov
shrl
adc
fs
clc
mov
xchg
notb
mov
out
and
jns
lds
inc
mov
cs
pop
les
in
call
les
in
and
and
mov
ret
pop
aad
add
dec
loopne
cmc
fnstenv
and
pop
rclb
leave
or
popa
mov
das
popa
push
sub
sbb
xor
mov
cmp
testl
lods
push
pushf
pop
jb
in
aad
mov
pop
imul
inc
cmp
xchg
push
push
mov
pushf
or
push
mov
push
lods
lds
fldl
pop
jge
jno
pop
or
cmpsb
gs
pushl
inc
mov
sub
xchg
fs
in
mov
pop
lock
les
enter
mov
jp
sub
lods
fsts
ss
daa
sbb
je
push
pop
jns
imul
cmovae
push
lea
lret
clc
bound
out
fldt
mov
and
push
stos
daa
and
xchg
mov
bound
cs
data16
imul
push
jnp
mov
mov
and
pop
add
xchg
add
fld
loopne
sahf
loope
repnz
add
test
jecxz
and
dec
jne
out
ja
cltd
mov
cmp
sbb
xchg
call
xchg
jae
testl
push
or
insb
and
daa
push
mov
mov
pop
pop
mov
mov
out
sbb
jecxz
mov
cmc
gs
inc
scas
mov
push
lods
enter
sbb
daa
inc
push
push
lcall
pop
sbb
je
jnp
xchg
in
dec
jbe
cmp
in
sahf
sub
je
in
fwait
lret
inc
push
in
daa
pop
repz
cli
jge
js
stc
lock
cmpsl
jmp
fcompl
stc
and
push
jne
sbb
enter
jg
inc
out
and
jp
adc
xchg
std
mov
mov
sub
fmul
or
cmpsb
gs
mov
xchg
mov
push
out
cmovl
pop
mov
jle
push
xchg
inc
adc
inc
ja
idivb
dec
jns
gs
repz
icebp
xchg
call
mov
cld
pushf
or
dec
sub
aad
loop
data16
int
testb
jb
xor
in
stos
sbb
xchg
inc
mov
jg
repnz
inc
jge
inc
ljmp
and
xor
add
jbe
je
and
push
xchg
lods
lods
into
push
icebp
fiaddl
xor
int
nop
shl
xchg
xchg
data16
test
push
sbb
stc
inc
push
ret
adc
lea
push
mov
xlat
and
rorl
sub
xchg
cmp
mov
xor
pop
sub
or
adc
in
scas
lea
insb
sub
sbb
push
inc
das
xor
enter
je
add
mov
je
push
xchg
stos
lahf
repz
lods
cmpsl
pop
mov
out
cmpsl
pop
jecxz
int
shl
pop
dec
sbb
push
fldl
pop
iret
mov
mov
test
push
mov
pop
bnd
pop
jne
pop
jbe
push
dec
xor
dec
add
fimuls
lock
push
mov
mov
cmc
and
mov
pop
rorl
lds
sahf
sti
sub
into
mov
scas
mov
faddl
xor
stos
lock
cmp
jns
mov
arpl
or
xchg
mov
pop
and
add
arpl
push
jl
out
or
inc
fs
clc
out
imul
cltd
dec
sub
rcl
and
and
pop
std
cmp
xchg
mov
ret
adc
fbstp
ficoms
into
and
int3
cmp
or
xor
out
inc
xor
push
test
jmpw
dec
push
fsub
push
or
into
test
lcall
test
ss
je
push
xchg
sub
fsubrs
ss
push
lea
mov
loop
ret
jns
scas
les
or
insb
movsb
idivl
jbe
mov
cltd
jmp
sbb
cltd
sbb
sbb
mov
das
mov
data16
pop
sahf
xor
add
sbb
pop
jg
int
or
cmp
ljmp
xchg
dec
mov
mov
iret
push
cmp
add
jmp
jbe
insb
xchg
inc
loop
scas
sub
aad
cmp
addr16
cmc
inc
jno
mov
test
sti
cmp
jo
imull
push
mov
xor
stos
xchg
shl
push
andl
inc
dec
leave
loope
adc
add
add
fildll
jmp
int
mov
ror
imul
ja
pop
jecxz
adc
adc
xor
mov
loop
leave
mov
imul
sub
and
sub
gs
lret
sub
cmp
mov
sbb
push
leave
inc
sbb
cli
ret
jb
push
jp
sbbl
aaa
mov
ret
into
mov
cmp
int3
adc
aad
aam
mov
sbb
add
js
mov
cli
mov
ficompl
ds
push
lea
mov
hlt
scas
mov
bound
push
jnp
pushf
push
call
mov
mov
xor
jg
aad
and
pop
lock
into
mov
mov
mov
cli
or
or
jno
add
and
inc
pop
movsb
jle
add
mov
movsb
and
sbb
imul
jge
push
loope
xchg
mov
ljmp
inc
lcall
popf
inc
scas
fidivs
push
mov
dec
test
mov
mov
nop
imul
out
sub
inc
movsb
sbb
sub
jnp
mov
lcall
sarl
jg
lret
cmp
inc
or
std
and
dec
dec
inc
movsb
dec
xor
jns
lds
imul
add
pop
adc
test
fsubrs
aad
inc
mov
dec
jmp
push
arpl
sahf
out
fcomps
shlb
cmovs
in
xlat
icebp
cld
sar
pusha
xor
addr16
sbb
mov
test
mov
push
or
lods
addr16
mov
push
gs
sahf
and
pop
jne
push
jmp
repz
ljmp
dec
dec
lret
sub
out
or
iret
popa
mov
pop
ficoms
not
and
jp
mov
ja
cmp
in
popl
mov
aad
and
nop
jb
and
jno
xor
lods
ret
out
aas
or
sbb
nop
std
jae
xor
ja
andb
sbb
cmpsl
bound
test
mov
jmp
mov
mov
pop
xchg
push
xor
loop
ret
sbb
xor
pop
mov
jo
cld
ffree
mov
pinsrw
mov
shrb
jno
xchg
jg
mov
jbe
out
aad
and
jmp
inc
jle
sbb
dec
mov
int3
bound
fstps
jge
mov
or
fmuls
int3
test
int3
push
jl
adc
push
inc
repz
rcrb
das
test
sbb
into
mov
popa
pop
pop
inc
cwtl
sbb
add
lods
negl
shrb
mov
fidivl
lret
push
int3
lret
or
jmp
pop
mov
jno
test
dec
or
dec
pop
imul
ret
mov
lcall
fcomps
int
xor
mov
xor
and
hlt
sbb
push
aas
mov
iret
add
cmpsb
icebp
xchg
xchg
cld
add
mov
pop
stc
inc
mov
add
inc
mov
popl
sbbl
test
outsl
cmp
flds
sub
jne
push
es
add
pop
add
sahf
mov
ret
jge
out
pmullw
jae
inc
test
jbe
or
je
mov
xchg
in
ret
push
icebp
int3
rorb
lods
xor
mov
push
and
lret
fldenv
es
fsubrp
insb
loop
push
cmp
or
push
hlt
repnz
pop
aam
add
fwait
mov
outsb
dec
arpl
push
scas
inc
daa
sahf
push
xchg
or
inc
int3
mov
dec
xchg
frstor
mov
mov
dec
bnd
in
ds
int
std
ja
pop
cmpsl
test
pop
xchg
mov
in
popf
insl
insl
sbb
rep
mov
je
or
sbb
fcmovnbe
sar
mov
jl
aas
outsb
std
jg
std
out
push
daa
or
mov
adc
ja
enter
and
pop
gs
add
cltd
pushf
out
fnsave
pop
jp
pop
pop
add
adc
sbb
in
pop
dec
jl
mov
pop
jl
xchg
sbb
cmpb
sbb
js
sbb
xchg
rorl
cmp
mov
int
sbb
or
mov
cmp
sub
subl
daa
push
movb
mov
cmp
mov
incl
dec
cs
les
push
push
in
xchg
das
mov
xor
mulb
sub
and
js
adc
shll
cli
loopne
out
mov
xchg
dec
shl
out
push
cmp
insl
mov
fdivs
dec
jge
adc
outsb
stos
inc
mov
notb
out
sahf
sbb
jp
mov
mov
mov
xchg
scas
jns
out
outsb
loopne
push
aam
loopne
pusha
test
xlat
fdivs
cltd
in
xchg
out
mov
and
xor
or
pop
sbb
loop
mov
mov
aas
dec
fdivs
mov
lcall
or
arpl
lods
movsb
mov
mov
cmp
pop
lods
test
jecxz
shll
out
lldt
mov
ja
add
push
adc
repnz
xchg
xchg
aaa
xor
and
ds
add
ret
lock
mov
mov
adc
data16
adc
cmp
adc
push
scas
cmovbe
mov
dec
sar
mov
jno
out
mov
mov
ss
xchg
clc
pop
fprem
subl
outsl
pop
lods
lods
jo
push
jo
jo
popa
nop
ljmp
fdivrs
push
test
sub
xor
dec
test
out
imul
imul
insl
fstl
and
ret
mov
icebp
in
fadds
leave
xor
fistpll
test
lock
push
and
cmp
shr
insb
fstps
cli
cmpsb
lods
push
stos
popa
dec
xchg
cmp
jne
cmp
push
rol
insb
add
or
pop
popa
push
aam
sahf
push
not
sbb
add
adc
sbb
push
jecxz
cmp
enter
push
cmp
ret
or
call
mov
xchg
and
js
movsb
ja
pop
sbb
movsl
cmp
rorl
test
lcall
push
frndint
out
mov
shrb
and
pop
call
pusha
aaa
jmp
sbbl
adc
in
int
pop
cmpsb
dec
jmp
out
cmp
test
inc
movsb
ds
push
jo
mov
jmp
xchg
loop
iret
pop
sub
outsb
cmp
addr16
stc
sbb
and
setnp
dec
inc
jl
pushf
leave
xor
push
aaa
xchg
hlt
and
xor
push
sub
lods
in
mov
xor
shlb
dec
cmp
xchg
sbb
scas
insb
arpl
mov
popa
pop
mov
outsb
call
push
and
jb
adc
xor
jge
hlt
add
arpl
mov
lcall
jns
cmp
cmp
inc
iret
adc
sbb
inc
and
mov
mov
xchg
aas
ret
fwait
ljmp
mov
sub
mov
cmp
pop
sahf
xor
inc
subb
jno
movsl
dec
push
outsb
ljmp
dec
xchg
push
mov
sub
push
jmp
or
ds
dec
and
ret
push
dec
pop
ja
mov
sub
xor
inc
mov
loopne
pop
mov
cmc
mov
and
add
mov
mov
add
push
sub
outsb
and
mov
jle
pop
inc
inc
loope
repnz
xchg
sbb
cmp
ljmp
inc
lret
ja
jne
das
jno
xor
je
jecxz
jbe
fisttpl
sub
and
or
mov
xchg
sti
in
mov
scas
dec
stos
out
or
jb
pop
loope
xor
cmp
sub
popf
fcoms
push
cmpl
jl
test
and
xchg
fs
fists
and
out
dec
or
fucompp
movsl
jmp
aaa
fildl
jl
jp
imul
jb
out
sbb
dec
adc
dec
jb
jbe
test
sbb
lret
sti
jmp
es
mov
xchg
pushf
or
je
cmp
rcrb
test
jo
mov
je
xor
pop
sub
adc
out
int3
lods
xor
cmp
push
ljmp
arpl
inc
scas
add
clts
pushf
leave
mov
sbbb
test
jle
cltd
pop
scas
adc
dec
les
loopne
nop
and
xor
fidivrl
sahf
je
imul
in
jb
sbb
mov
daa
daa
mov
inc
inc
cmpsb
aam
dec
jne
mov
inc
lock
dec
test
lcall
lret
lcall
and
push
push
insl
es
mov
inc
add
and
mov
jne
mov
clc
mov
push
jmp
adc
add
mov
xor
push
jb
adc
ror
pop
jns
xchg
inc
lods
std
imul
nop
arpl
das
loop
fcmovnbe
jae
mov
lods
jl
push
loop
popf
incl
xor
nop
inc
loop
adc
scas
xchg
por
xor
movsl
scas
jl
xchg
mov
int3
push
sub
inc
sub
cwtl
push
int3
sub
test
mov
xchg
int3
rcll
insl
or
sub
sbb
pop
mov
rorl
jle
stos
mov
je
mov
test
scas
ja
pop
add
pop
mov
test
push
cmpl
outsb
and
test
fdivrl
imul
stos
and
push
push
sbb
cs
and
add
lret
or
dec
outsb
pop
popa
scas
clc
push
sbb
pop
add
push
popf
mov
mov
add
xor
and
cli
mov
fwait
xchg
outsb
mov
xor
or
movsl
jnp
clc
add
fadd
push
adc
xor
pushf
inc
and
ljmp
fdiv
rcll
loop
aas
inc
and
les
mov
push
ds
pop
pop
or
mov
push
enter
mov
mov
mov
stos
mov
loopne
jg
out
and
call
push
in
in
popa
loop
les
aas
jno
icebp
inc
ss
loopne
bound
lahf
adc
pusha
mov
xlat
sahf
cli
aaa
fucomi
fs
sub
ljmp
jmp
push
mov
ficoms
mov
stos
add
cld
push
shrl
scas
shll
inc
iret
movsl
jne
cli
lret
fs
cld
out
into
sbb
pop
push
aam
lods
or
jns
out
sbb
mov
mov
aam
and
pop
push
lock
adc
test
or
into
cmpsb
ret
sbb
int
mov
push
pop
fwait
popf
js
cmpsb
insl
maskmovq
testl
pop
adc
sbb
clc
adc
lods
aam
jecxz
jg
lods
sbb
ret
fs
mov
cmp
mov
add
pop
movsl
pop
imul
adc
adc
andb
mov
mov
stos
mov
shll
mov
sub
pop
and
lds
or
dec
and
jp
clc
sub
push
cwtl
cld
idivl
into
mov
push
jns
xchg
xor
leave
mov
adc
cmpb
jg
dec
push
imul
ds
or
mov
xchg
mov
rcr
data16
mov
cmp
idivl
mov
and
in
inc
fucomi
xor
enter
cwtl
or
jecxz
scas
clc
fwait
cmp
xchg
dec
clc
test
cmpsl
sbb
xor
insl
int
cmp
jecxz
fisttps
orl
push
repnz
sti
xor
data16
outsl
sub
data16
insl
jg
cld
fsubrs
leave
loopne
es
sub
stc
sar
push
or
push
dec
jae
mov
xchg
pusha
push
push
add
and
and
rclb
dec
lcall
mov
jecxz
fsubr
dec
and
cmp
jp
sub
push
shl
aaa
sti
mov
fsts
aaa
cmc
xor
rcrl
and
push
or
cmpsb
lock
inc
fsubrp
mov
mov
dec
stc
pushf
sub
insb
fistpll
das
mov
shll
fwait
dec
pop
sub
mov
cltd
test
add
mov
js
test
pushf
or
cmpsl
mov
jno
push
pushf
mov
pushf
fadds
jecxz
das
notl
push
jnp
mov
xchg
out
jecxz
push
ror
fisubl
pop
and
lret
jns
add
or
pop
add
mov
cli
add
push
je
imul
lret
xchg
ss
mov
mov
clts
mov
mov
push
pushf
push
int3
add
cmp
std
xor
push
ds
mov
and
aam
jae
jno
pop
add
lock
adc
into
das
mov
repnz
dec
jne
mov
aad
push
int
aam
mov
sti
sub
fmull
mov
push
and
lods
orb
dec
mov
cmp
cmpsb
push
mov
cmpsl
and
pop
add
cmpsl
xor
xchg
sub
push
push
or
mov
aas
loope
adc
xchg
negl
jo
and
adc
jmp
push
sub
mov
aam
cmp
sahf
out
shr
imul
flds
je
cwtl
ffree
sub
cmp
in
lea
sbbb
xor
cmpsl
adc
das
out
movsl
fbld
test
aam
or
fnstenv
test
push
cmpsl
scas
sahf
adc
or
sti
mov
pop
jg
jmp
pop
aaa
cwtl
sahf
hlt
imul
pop
test
xor
dec
fiadds
mov
mov
cmpsb
xchg
mov
mov
lret
mov
lahf
dec
pop
rorb
cmp
insb
js
or
cmp
in
out
leave
jge
mov
dec
sub
inc
xor
push
mov
rcr
dec
add
xorl
ret
stos
andl
mov
xlat
out
xchg
jnp
loop
insl
or
or
jmp
pop
xor
add
xchg
and
adc
mov
pop
xchg
mov
imul
sbb
movsl
jp
sub
xchg
std
pushf
mov
in
mov
arpl
fidivl
add
pop
cmp
xchg
xchg
cmp
shll
fs
push
sub
cli
dec
rorl
mov
jge
or
test
xchg
adc
aas
dec
pop
push
enter
adc
popa
xchg
and
loopne
jecxz
sarl
add
adc
neg
xor
adcl
add
inc
sbb
out
pusha
lods
xchg
rcrl
push
inc
shlb
xchg
scas
push
decb
test
xlat
xor
adc
pop
xchg
mov
fwait
into
orb
stos
movsb
enter
popa
nop
mov
mov
retw
clc
movsl
pop
popf
sbb
sbb
jmp
or
loopne
outsl
mov
pop
testb
shll
and
adc
push
xchg
stc
das
mov
sti
xlat
jbe
cmc
sbb
cmp
sub
mov
lea
cwtl
lahf
pop
movsl
outsl
loope
mov
dec
std
data16
test
or
mov
adc
sub
sahf
and
adc
push
int3
add
pusha
adc
mov
and
jl
ljmp
jo
jmp
jne
sbb
inc
xchg
pop
pop
xor
int
dec
es
mov
jae
mov
adcl
sbb
out
sbb
test
add
mov
js
xor
fmuls
out
enter
xor
int3
lea
jne
jmp
cmp
ja
sbb
cmp
jecxz
or
mov
clc
in
insb
ss
fcompl
mov
lds
movsl
enter
cmp
addr16
dec
into
sbb
mov
cmp
int3
cmpsl
jge
movsb
or
rorb
mov
jbe
cmpsl
pop
shlb
add
lahf
pop
pop
or
fucomi
in
dec
push
dec
addr16
xor
out
push
adc
dec
xchg
cmpl
push
mov
mov
lock
lds
jp
es
fdivr
push
push
pop
ret
sub
loop
xchg
adc
and
addr16
push
ror
mov
inc
out
ret
out
jl
imul
xor
pop
addr16
arpl
inc
jle
push
shlb
add
ret
mov
mov
cmpsl
movsb
mov
inc
mov
outsl
dec
jb
xor
arpl
ljmp
inc
cmp
jne
xchg
cmp
lcall
pop
leave
int3
dec
adcl
pop
lahf
jp
mov
fwait
jp
sbb
push
dec
xor
repz
loopne
arpl
popf
xor
jp
lcall
cmc
out
loopne
mov
cld
loope
hlt
jl
fs
inc
mov
jmp
std
scas
inc
inc
popf
aaa
repnz
je
es
outsb
sbb
pop
ret
mov
xchg
daa
xchg
sahf
cmp
addr16
jmp
jp
outsl
jecxz
mov
push
jno
jne
lods
and
inc
xor
inc
aad
mov
repz
rorl
lds
das
fsubrs
ret
cmp
fdiv
xor
rcll
xchg
mov
sub
add
in
int
cmpsl
shrb
lahf
xchg
arpl
mov
bound
jge
mov
mov
mov
xchg
xchg
mov
adc
inc
dec
jmp
dec
sbb
mov
jb
mul
icebp
xor
out
es
das
test
div
int3
cmp
aaa
cmp
fldcw
ljmp
stos
mov
fstl
add
arpl
mov
xchg
pop
scas
mov
sbb
in
int3
jnp
cmp
out
or
fsubl
addl
cmpsl
js
mov
push
mov
mov
pop
sti
inc
pusha
cltd
jg
inc
mov
push
cmp
xor
dec
mov
dec
mov
or
inc
or
daa
inc
es
cmp
popa
cmp
jge
mov
into
sahf
mov
inc
movsl
xor
dec
stos
in
cltd
lods
nop
sbb
loope
fs
xlat
push
aam
lods
lcall
cmp
xchg
mov
or
clc
add
jg
fstpl
push
bound
xor
loopne
adc
pop
mov
adc
and
lret
mov
adc
pop
sbbb
bound
es
insb
push
cmpsb
out
cld
push
int
and
arpl
jl
cmpsb
push
mov
jecxz
ret
scas
insb
outsb
leave
push
inc
pop
das
push
insl
mov
fisttpl
jnp
xchg
les
pop
fwait
jmp
filds
push
stos
xchg
pop
jae
jmp
pop
sub
fnsave
mov
aaa
mov
outsl
lret
outsb
xchg
loope
testb
mov
lds
popf
ss
jb
cli
in
bound
fdivs
jge
js
lcall
fists
sub
add
mov
out
xchg
push
mov
dec
ret
xor
push
dec
imul
sub
cmp
out
mov
pop
ja
icebp
les
push
aad
mov
mov
pop
add
xchg
xchg
cmp
movsl
jmp
iret
fistpl
not
out
lds
out
movsb
jp
mov
cmp
outsl
lods
xlat
aas
loope
lea
or
adc
dec
in
icebp
mov
sub
push
add
mov
sbb
jmp
and
mov
push
adc
dec
mov
cmp
add
push
out
push
je
cwtl
jno
add
cmpl
arpl
out
inc
lds
clc
call
adc
aaa
mov
jl
add
mov
jno
popf
push
push
push
inc
xchg
dec
sahf
or
xchg
jo
cld
popa
pop
or
mov
imul
cltd
mov
fcompl
insb
mov
sub
stos
mov
sub
test
mov
xchg
imul
jno
dec
popf
mov
push
push
add
lods
pop
lahf
lds
add
ds
pop
popa
mov
cmpl
roll
lret
rolb
add
jle
ds
cmc
and
ds
jecxz
jmp
adc
in
addr16
push
add
or
pop
mov
mov
push
adc
adc
ljmp
ljmp
sbb
sub
mov
ffreep
or
js
pop
sbb
fisubl
pop
icebp
push
shll
mov
shlb
icebp
push
and
outsl
fstl
dec
sub
cld
loop
mov
fs
out
xor
or
push
sti
fs
popf
jg
mov
dec
xchg
call
mov
mov
xchg
mov
push
inc
imulb
sbb
stos
out
aam
xchg
xchg
out
sub
and
inc
cld
daa
out
xchg
fistl
data16
sub
insb
or
in
orl
fidivl
push
loopne
shlb
pop
loopne
jns
jmp
out
lods
repz
jmp
mov
cs
or
notl
mov
adc
cld
ret
rolb
sub
int
stc
jecxz
aam
push
sbb
in
jecxz
mov
xor
inc
cmp
fstpt
in
rolb
cltd
out
repz
xchg
ret
pop
fisttps
int
int
into
cmc
shrb
jnp
sub
les
sbb
pop
xchg
sub
fcomps
fsubrl
or
cmp
inc
lods
int3
dec
push
inc
pop
imulb
and
push
and
xchg
add
scas
leave
adc
nop
sbb
dec
shr
push
sbb
pop
mov
icebp
scas
mov
xlat
ret
pusha
add
mov
pusha
dec
and
cltd
scas
mov
xor
cmp
cmp
push
jnp
daa
xlat
iret
fisubs
pushf
dec
stos
int
inc
lock
fnstenv
jbe
cwtl
sbb
shlb
leave
ljmp
fsubrl
pop
cmp
inc
add
je
sub
dec
mov
sub
jbe
dec
std
and
out
es
and
aad
fldcw
jnp
jns
inc
sti
cs
add
jo
pushf
cmpsl
out
out
es
jbe
mov
mov
ficomps
adc
fdivrs
xchg
ret
cld
and
cmp
ljmp
cli
pop
xchg
loop
or
fmuls
das
dec
mov
jle
cltd
mov
insb
or
movsb
or
shlb
fsubs
std
jl
or
aad
mov
mov
xor
push
in
pushf
jmp
subb
fsubrl
sub
pop
cmp
mov
push
push
sbb
or
popa
divl
lahf
shlb
pop
hlt
or
jno
movsl
addl
fs
mov
add
jge
jnp
push
sub
std
inc
movsl
aaa
les
sbb
push
rorb
fcmovne
inc
xor
rcl
pop
mov
xlat
lods
sub
mov
mov
push
outsl
ljmp
push
fs
movsl
in
push
ret
sahf
movl
cmpsl
idivl
jne
mov
fwait
adc
fiadds
add
popf
mov
leave
mov
pop
call
add
xlat
mov
lods
negb
fisttpll
add
mov
scas
jl
sub
pop
xchg
mov
xchg
in
pop
fsts
jns
fadds
sbb
sub
out
inc
dec
popa
xchg
jmp
stc
pop
sarl
insb
mov
ret
dec
jle
out
mov
jno
dec
mov
hlt
push
mov
mov
and
mov
int3
je
sti
sub
xor
lcall
nop
push
cs
sbb
aad
popf
and
jnp
mov
int3
and
insl
arpl
pop
iret
addr16
sub
mov
mov
icebp
into
neg
fistps
cmpsl
cli
sub
lds
jp
adc
jae
loope
or
mov
in
xchg
mov
xlat
mov
mov
mov
test
aaa
push
push
test
adc
mov
lret
cmp
or
jle
or
je
imul
and
cwtl
dec
mov
mov
or
loopne
dec
dec
sbb
adc
imull
mov
fidivrs
xchg
cmp
cmp
push
xchg
sbb
mov
lcall
cltd
sub
test
and
mov
test
sbb
or
or
push
ss
aad
or
mov
mov
sub
sbb
scas
cwtl
imul
jmp
mov
pop
jne
je
mov
inc
and
push
out
lret
nop
jle
and
mov
adc
jns
dec
mov
add
inc
mov
xor
data16
jns
mov
add
popa
ja
mov
leave
lea
jb
movsb
xor
adc
int
jbe
or
or
cmpsb
data16
test
dec
in
repnz
cmc
scas
test
mov
push
clc
mov
xchg
jp
xor
aam
mov
pop
mov
sbb
pop
add
xor
lret
jne
shlb
int3
out
movsb
test
push
and
xchg
stos
jnp
sub
push
pinsrw
or
inc
imul
inc
insl
xor
je
sbb
lds
jne
jl
into
mov
xchg
insl
mov
ficompl
mov
xchg
enter
lds
add
push
dec
daa
pop
push
in
pop
imul
das
and
int3
push
push
aad
imul
gs
fsubrp
push
mov
aad
push
and
aad
xor
out
pop
cmc
cmp
pop
mulb
icebp
loop
repz
pop
cld
adc
scas
pop
shr
or
clc
mov
xchg
mov
int
pop
xchg
dec
test
cld
das
pop
mov
dec
mov
or
icebp
inc
aam
mov
lahf
pop
in
mulb
push
stos
mov
fwait
dec
sub
loopne
in
mov
loopne
shr
add
movsb
xchg
mov
in
lahf
fists
inc
adc
sbb
icebp
fwait
mov
mov
cmp
inc
xor
popf
cmp
cwtl
lds
mov
aas
aas
mov
sarb
fwait
sbb
int3
jae
sub
push
cli
imul
in
sbb
shrb
lcall
jns
icebp
push
adc
sbb
mov
mov
cmc
lea
insb
rcrb
bound
andl
mov
xor
sub
aaa
lea
adc
fcomip
adc
xchg
std
loopne
mov
pop
adc
pushl
push
jns
ja
cli
aam
cmpsl
gs
fstl
xor
dec
add
lret
mov
sti
out
xchg
fimull
ljmp
out
sub
rcrl
or
scas
push
testl
jmp
cmp
sub
mov
mov
push
xlat
dec
dec
or
mov
je
pop
push
lods
mov
mov
mov
std
std
nop
xchg
add
outsb
mov
jge
loop
pusha
shlb
xchg
mov
test
jge
mov
pop
push
inc
pop
pop
pop
cmpsb
loop
enter
adc
sbb
testb
inc
inc
popf
mov
fwait
push
aas
xchg
push
mulb
xor
pop
adc
adc
flds
rcrb
adc
mov
cmp
dec
or
cmpsb
adc
or
or
into
lahf
inc
les
push
outsb
daa
sbb
sub
std
int
sbb
scas
cli
bound
out
leave
scas
push
push
inc
adc
mov
into
repnz
clc
rorl
mov
jnp
test
cmp
sub
fwait
push
daa
cmp
dec
es
bnd
jae
pop
inc
shll
mov
insl
cmp
stos
test
dec
std
jp
push
das
dec
sub
or
les
roll
mov
mov
push
das
test
dec
lret
movsl
ret
loop
ja
pop
dec
xchg
sub
loopne
inc
ljmp
call
in
pop
mov
mov
lds
movsb
push
das
out
mov
jbe
or
push
cmp
push
scas
lds
push
outsb
add
int3
das
notl
cmp
mov
add
sbb
mov
jge
cmp
pop
loopne
jnp
mov
hlt
into
jecxz
fnsave
js
dec
push
sub
lahf
out
xor
xor
out
ljmp
imul
rcrb
lds
and
and
scas
pop
pop
pop
sbb
jno
daa
or
test
imul
mov
sub
xor
mov
pusha
xchg
paddw
mov
out
mov
ret
idivb
dec
lcall
imul
iret
sub
stc
popa
aaa
xor
mov
rcll
test
dec
mov
and
pop
cmpsl
fwait
dec
jle
out
and
mov
rcr
flds
sbb
arpl
in
lods
lret
push
add
les
stos
xor
mov
stos
sahf
sbb
movsl
mov
ljmp
loopne
sub
jle
sarb
jmp
jae
jae
lea
dec
mov
fstl
or
imul
jne
jnp
cli
out
pop
mulb
cmp
dec
ljmp
mov
loop
dec
xchg
and
jbe
fldenv
add
mov
adc
add
mov
dec
repnz
shr
adc
adc
dec
mov
adc
jbe
pop
in
ds
inc
roll
jne
xor
iret
and
fcoml
lahf
add
ss
les
push
mulb
jno
push
mov
sbb
pop
aad
mov
xchg
and
into
and
xchg
pop
mov
jno
pop
stos
xchg
mov
aam
jno
and
aaa
das
push
fists
pop
test
jae
cwtl
out
and
push
mov
rcrb
ficoml
movsl
nopl
mov
dec
mov
sub
hlt
maxps
int
movsl
push
bound
ret
ret
das
mov
popf
cmp
sbb
jo
leave
lret
mov
pop
stc
mov
dec
imul
pop
cmp
mov
inc
adc
pop
inc
test
in
lods
lds
inc
popa
shll
push
and
and
jmp
dec
and
or
jmp
push
or
mov
xchg
inc
scas
mov
mov
inc
aaa
xor
popf
mov
or
lcall
es
clc
in
add
sub
jno
xchg
xchg
lock
fnstenv
xchg
adc
cmp
fiadds
popa
xchg
aas
stc
or
aas
push
dec
mov
cli
iret
xor
decl
ss
push
popw
into
xchg
xchg
lcall
pusha
or
movl
inc
in
dec
aas
fs
adc
mov
mov
inc
cs
ror
add
mov
mov
pop
enter
sub
adc
fists
sbb
mov
adc
adc
ljmp
enter
jbe
mov
jg
stos
push
dec
daa
pop
insb
jg
fisubrl
dec
mov
push
xor
dec
xor
cld
xchg
adc
xorl
cmc
daa
mov
je
pop
push
test
out
adc
pop
cmp
lahf
repnz
pop
adc
mov
mov
clc
or
dec
inc
nop
ds
ja
xchg
aaa
mov
adc
ror
cmpsl
rorb
xchg
lock
test
je
xlat
cmp
mov
mov
rcll
add
movsl
cmpsl
xchg
arpl
pop
test
shlb
sub
pop
subb
imul
xor
ss
sarl
mov
adc
push
mov
dec
shrl
mov
or
sbb
inc
sbbl
mov
aaa
mov
cli
dec
xor
inc
or
xor
arpl
mov
xchg
sarb
fidivrl
repnz
test
sbb
jbe
aad
cmpsl
inc
sub
xchg
repz
sbbl
mov
adc
jle
int
adc
stos
pop
jge
lret
mov
ficoml
xchg
scas
mov
scas
xchg
inc
aad
cltd
push
dec
jmp
repnz
in
inc
sbb
cld
xchg
cwtl
cmp
pop
inc
sarb
mov
inc
out
sahf
in
adc
lret
adc
adc
idiv
testl
inc
sbbl
gs
fisttps
push
pop
inc
outsl
xor
push
adc
mov
mov
and
jo
inc
scas
scas
xchg
lea
mov
pusha
adc
mov
test
and
jl
loope
or
leave
movsb
lahf
mov
xor
aas
nop
fbstp
jp
pop
mov
jle
loope
xor
xchg
aad
push
js
mov
mov
xchg
add
data16
lea
pop
mov
mov
jle
adc
inc
cltd
into
loope
lret
cmp
adc
cwtl
inc
push
xchg
or
jbe
out
call
cmp
push
movsl
sub
hlt
mov
fwait
insb
pop
pop
xor
sub
xchg
ljmp
fistl
cmp
pusha
mov
fsubrs
pop
or
je
in
mov
cmp
cmp
pcmpgtb
idiv
ficompl
pop
lods
call
imul
out
xchg
add
add
jae
dec
in
stc
inc
and
or
xor
sub
inc
cli
pusha
ja
adc
gs
aad
adc
dec
sub
sbb
repnz
jo
mov
inc
ret
negb
jb
dec
vpcmpestri
dec
dec
imul
push
gs
dec
out
pushf
insb
das
fldl
cld
sub
dec
cmp
cltd
out
lcall
ja
pusha
inc
cmp
arpl
mov
or
sbb
movsl
xchg
aad
stos
jo
call
add
clc
out
push
push
jb
in
add
mov
pop
aaa
cmpsb
push
jl
repz
ret
fstps
mov
mov
ret
cmp
xor
jbe
adcl
in
shlb
sub
imul
sub
or
aas
push
sub
mov
leave
sbb
ss
cmpsl
nop
cltd
push
lods
popf
or
repz
adc
mov
enter
jno
into
test
jl
xchg
inc
lcall
aad
shll
shlb
scas
fsubr
mov
out
aas
push
dec
int
inc
int3
sub
shrl
xchg
push
clc
lahf
cwtl
mov
inc
imul
xchg
into
fwait
cltd
test
ds
fsubp
push
pusha
sub
inc
mov
jnp
imul
sbb
faddp
lahf
adc
sti
xchg
mov
jle
popl
loop
jp
xchg
lahf
mov
and
inc
fcmovne
inc
sbb
mov
das
jecxz
pop
daa
les
sub
call
jmp
cs
cmp
adc
adc
push
jns
insb
test
cmp
inc
push
cmpsl
pop
loop
andb
pop
lock
cmp
fmulp
pop
cs
insb
insl
hlt
ljmp
adc
xchg
inc
jecxz
fs
in
add
into
es
xchg
sub
and
adc
xchg
les
enter
gs
loope
les
and
popa
and
and
out
push
adc
rcrb
mov
repz
cmp
or
lods
pop
movsl
and
dec
loopne
inc
std
icebp
mov
in
push
jb
fs
shrb
call
ja
mov
dec
mov
push
add
pop
scas
lret
pop
aas
add
push
out
ja
inc
push
jns
loopne
rol
push
in
mov
mov
in
out
mov
mov
cs
jge
cmp
outsb
stos
es
sarb
jbe
stos
lods
sbb
sub
inc
rclb
mov
inc
std
sysexit
test
fs
sahf
jns
cmp
fisubl
and
out
push
xchg
outsb
inc
repnz
mov
mov
notl
in
push
pop
adc
push
and
add
inc
add
addr16
cmp
stc
xchg
push
mov
stos
or
rcrb
jge
pop
mov
xor
add
jns
and
mov
ss
repnz
adc
and
cmp
mov
inc
mov
and
xor
jbe
cmp
cmc
out
push
cmpsw
pop
mov
pop
mov
clc
mov
cmp
adc
xchg
dec
lahf
les
cld
add
das
cwtl
data16
xchg
mov
sti
fld
mov
push
mov
sti
inc
or
adc
aas
jg
xchg
imul
sti
popa
loop
inc
xchg
lock
in
cmp
decb
loop
mov
and
xor
cmp
outsb
lods
jp
mov
cmp
xchg
sbb
addr16
stos
outsl
insl
xor
and
les
mov
push
add
mov
lods
xchg
rcll
into
mov
inc
jmp
xchg
mov
clc
test
push
iret
repnz
inc
les
cld
pop
adcb
daa
out
mov
hlt
sub
sbb
mov
in
lcall
cs
push
fwait
rolb
mov
pop
mov
sbb
dec
dec
pop
scas
std
pop
mov
push
aam
sbb
or
sub
enter
int3
mov
sahf
push
cmpsl
cmpsl
cmp
pusha
ljmp
ret
cmpsb
call
into
mov
sub
add
psubsw
cmpsb
inc
add
dec
fisubrl
xchg
mov
pop
add
xchg
js
test
xchg
sub
xor
inc
pop
repz
jns
das
adc
out
mov
jmp
jg
jg
data16
inc
xchg
dec
ret
mov
pop
stos
loopne
mov
stos
mov
icebp
inc
nopl
jecxz
daa
mov
test
jle
mov
std
jl
xchg
pop
fsubrs
add
popa
jns
sarb
fiaddl
inc
pop
call
bound
into
fbld
or
xchg
or
mov
add
pusha
mov
xchg
enter
mov
rol
adc
jns
add
or
dec
lea
into
loopne
movsb
loopne
mov
mov
insl
xchg
cmp
jbe
lret
ret
push
pop
mov
stc
mov
pop
sbb
popf
xchg
movsb
cmp
in
imul
shll
inc
jecxz
mov
aas
push
div
mov
pop
rep
dec
lds
jbe
inc
add
pop
pushf
cs
and
dec
cmpsb
and
sbb
lods
lock
fstpl
enter
das
or
sbb
mov
loop
pop
mov
xchg
lret
push
data16
cmp
mov
sbb
ja
jge
mov
jg
pusha
subb
adc
dec
or
test
sub
sahf
lret
bound
jo
cmp
xchg
jmp
sbb
adc
mov
in
jecxz
ss
test
dec
dec
cmp
mov
mov
jno
lret
lcall
insb
xchg
sbb
enter
inc
dec
ja
das
push
inc
pop
idivb
jmp
movsl
adcb
imul
es
or
pop
jg
or
and
or
pop
inc
mov
enter
jmp
mov
pop
pop
cmpsl
or
lret
pop
cmp
jno
rcrb
cmp
out
stos
pushw
out
lea
dec
addb
out
sub
loop
lock
and
and
out
or
ret
fsub
sbb
stos
fstl
in
adc
push
xchg
pop
je
cmp
jne
cmp
jge
jne
clc
insl
fmul
jle
imul
movsb
mov
or
nop
jge
outsl
adcb
test
popl
rcrb
xchg
pop
fdivs
loopne
add
sti
push
xor
mov
or
jnp
aad
push
push
jge
je
dec
pusha
sahf
or
scas
and
xlat
cmpsl
int
mov
stos
jnp
in
adcb
rcll
out
cld
push
test
out
sub
adc
mov
sub
repz
dec
inc
jl
daa
xchg
ss
loopne
fwait
add
aam
push
adc
ret
adc
incl
push
xor
adc
mov
inc
xlat
inc
js
in
mov
enter
sbb
sar
adc
cmpsl
and
xchg
sub
sbb
daa
pushf
mov
gs
xor
ret
dec
sbbb
ljmp
fisubrl
pushf
or
in
aam
jmp
mov
or
xchg
movsb
out
outsl
cmp
pushf
push
daa
and
push
add
inc
lods
mov
adc
mov
cld
std
test
inc
fidivs
and
cmc
cwtl
push
and
pop
xchg
inc
test
or
push
mov
pop
pop
xor
sbb
pusha
out
push
adc
inc
stc
or
xchg
push
int
lret
cmp
hlt
cmpsb
or
fidivl
cmp
mov
das
sbb
ljmp
cmp
push
cmc
jge
sbb
arpl
push
stos
jne
test
push
outsl
out
push
rep
in
inc
shll
inc
pop
leave
adc
loope
iret
jl
fsub
ja
andl
xchg
mov
aas
cld
push
in
mov
add
in
test
mov
add
cmpsb
cmp
stc
test
cmp
out
gs
out
cltd
divb
push
push
ret
arpl
add
cld
into
xor
fwait
mov
mov
daa
std
int3
add
xor
push
pop
lock
hlt
call
cmc
jp
pop
or
iret
pop
xchg
jl
mov
lahf
and
std
jae
jae
push
pop
mov
in
sbb
cs
sbb
sub
mov
mov
and
cli
sbb
cmp
pop
mov
cmp
jg
nop
mov
jne
mov
cli
and
push
into
inc
ja
pop
xor
popf
aam
out
aas
imul
and
int
sbb
shrl
xchg
dec
insl
in
or
loopne
ss
push
insb
jecxz
push
jle
popfw
push
ss
pop
shrl
sbb
push
cltd
add
je
dec
adc
xchg
movsl
jl
push
pop
sahf
jne
and
adc
inc
imul
xchg
cmp
or
add
out
xchg
ret
xor
jae
mov
pop
bound
lret
lods
out
inc
out
es
dec
fwait
clc
add
adc
mov
adc
cmp
cmp
jg
int
and
and
mov
xchg
rcll
xor
jae
out
stos
push
xchg
mov
ljmp
sub
or
je
mov
push
pop
test
in
and
add
cmp
pop
ds
sti
sub
mov
add
repz
add
repnz
scas
pop
mov
int3
jge
aad
ds
or
icebp
jmp
mov
or
stc
test
lret
pop
cmpsb
ret
scas
loop
dec
js
cli
sbb
aaa
pop
xchg
mov
jb
retw
movsb
cmova
imul
adc
mov
ds
aam
cltd
sbb
add
push
cmp
xchg
add
xchg
jmp
mov
xchg
push
ret
test
sub
jmp
stos
pop
cmc
imul
cmc
fwait
imul
cmp
sbb
std
ret
xor
fs
std
lock
sub
fmulp
cmp
dec
subb
jle
popa
or
movsl
mov
int3
jle
mov
adc
and
pop
mov
dec
sbb
rclb
lds
test
cmp
daa
inc
mov
imul
sub
outsb
int
cmp
das
push
cld
xchg
jg
fisttps
aad
push
push
or
jne
fwait
cmp
cmp
and
sahf
data16
cmpsl
fimull
push
jp
pop
jbe
stc
imul
add
leave
pop
ja
sbb
test
inc
shrb
jnp
test
push
jo
data16
cmpl
test
or
sbb
test
jne
cmp
aad
and
fildll
fisubl
call
jge
enter
sbbl
pusha
imul
push
mov
iret
jge
mov
xchg
les
fimull
stc
jne
lds
dec
adc
insb
mov
mov
pop
dec
jp
out
inc
adc
ret
mov
loop
das
iret
inc
repnz
sbb
pop
shlb
repz
daa
xor
sbb
aad
flds
test
pop
pop
cmp
in
in
imul
inc
mov
cmpb
jo
adc
lret
stos
xchg
sbb
push
fdivrs
dec
outsl
sbb
mov
and
rcl
add
dec
sbb
lea
jns
push
pop
xor
in
aam
jnp
jnp
pusha
sbb
mov
xlat
test
jl
fimull
add
jmp
je
adc
xor
pop
or
fwait
addl
out
in
out
cs
sbb
add
rcrb
mov
insl
ds
jns
aam
push
rcrl
cmp
mov
lahf
cmp
push
cmp
cmp
fimull
loope
lods
cld
jge
cmp
adc
push
aaa
test
and
xlat
ss
add
pop
add
stos
mov
lret
mov
fiadds
stos
mov
or
cmp
movsl
out
shlb
jnp
and
dec
and
mov
mov
push
pop
jns
jno
mov
xchg
push
jne
pop
jge
stos
jb
xor
cmpsl
mov
out
sbb
or
lret
pop
in
mov
sub
stos
dec
xchg
stos
call
pusha
jne
adc
hlt
inc
stos
cwtl
mov
jp
es
rolb
xchg
dec
inc
pop
cmc
fiadds
insb
xor
jb
jp
and
mov
fbstp
jb
mov
mov
push
mov
bound
das
inc
adc
es
test
aad
mov
push
js
mov
push
xor
test
rcrb
insl
pop
mov
mov
jmp
pop
cmc
inc
scas
push
push
fiaddl
jnp
push
lods
hlt
out
mov
leave
mov
pop
inc
movsb
shlb
dec
mov
pop
mov
add
hlt
pop
xor
cmp
rep
aas
add
iret
xor
sbbb
dec
pushf
into
cli
push
cwtl
cmp
fldl
sub
xor
fstp
inc
out
adc
insb
aaa
into
add
test
out
pusha
mov
xchg
and
test
xor
jne
cmp
test
lock
push
test
hlt
add
aam
jnp
ss
dec
mov
jo
or
xor
std
fstpt
ljmp
lock
ja
xchg
sbb
xor
or
lcall
std
jge
repnz
xor
loope
push
aad
sbb
xchg
adc
or
fisubs
mov
test
mov
div
cmp
mov
movsb
int3
inc
into
frstor
xchg
test
ficoml
cmp
incb
loopne
mov
repnz
jno
sub
out
fs
test
push
mov
mov
popa
es
sbb
out
pop
xchg
cwtl
push
popw
lds
xchg
rcrl
repz
xor
cltd
xchg
int3
mov
iret
aam
jnp
imul
rclb
cmp
mov
or
xchg
jmp
mov
movsl
add
adcl
cmp
inc
mov
fistpl
cmp
aas
xor
popf
imul
scas
stos
jmp
not
add
ljmp
xor
xchg
push
jnp
xor
mov
pop
pop
outsb
sub
ds
rcr
roll
stos
push
test
ljmp
in
pop
cmp
xor
add
jbe
andl
xor
decl
xor
mov
pusha
sahf
push
jb
data16
or
adc
push
mov
int
pop
call
push
andb
iret
enter
jmp
clc
in
xor
inc
push
xchg
add
mov
pop
sahf
xlat
fldl
repz
repz
xchg
out
rorl
xorb
cmc
mov
push
mov
fdivp
and
mov
add
fcoms
adc
cmp
xlat
and
dec
movl
popl
mov
aaa
xchg
sahf
xlat
fwait
mov
cmp
jnp
xchg
loope
mov
xchg
sarb
mov
dec
fsubl
jg
cltd
bound
adc
insl
push
adc
add
and
fistpl
xchg
dec
xchg
mov
stos
xor
cmp
xchg
filds
push
sti
insb
rclb
sbb
sbb
fdiv
jbe
sub
sbb
sbb
jbe
icebp
notl
pop
add
xchg
xor
sarb
das
mov
in
lcall
stos
or
ret
push
add
mov
xchg
sbb
jge
cmpsb
loope
repz
push
out
idivb
in
gs
dec
mov
mov
subb
in
repz
xchg
inc
in
and
xor
pop
cmp
lods
jecxz
cs
movsl
xchg
mov
inc
hlt
fs
rcrl
loop
movsl
mov
xor
test
and
xor
mov
out
aaa
adc
push
mov
pop
les
dec
lret
mov
mov
mov
jmp
xor
leave
stc
push
xchg
jge
sbb
imul
aas
xor
orl
jne
lret
pop
insb
push
int3
scas
pop
push
shll
dec
jbe
add
out
hlt
inc
adc
push
shrb
push
sub
scas
push
lock
jmp
mov
xchg
xchg
mov
push
lcall
xor
jmp
aam
test
dec
xchg
lock
pop
mov
mov
leave
add
pop
scas
out
out
repz
in
lret
call
xlat
bound
outsb
mov
push
les
adc
inc
cli
lea
pop
popa
lret
out
jo
das
mov
cmpb
mov
inc
ja
cmp
mov
cltd
cmp
pmaddwd
insb
mov
cmpsl
push
mov
mov
cmp
popa
xchg
inc
repz
push
or
pop
lss
shll
mov
stos
dec
jmp
rcll
jns
jmp
add
mov
push
jl
xorb
inc
inc
in
mov
mov
fsubrs
insb
xchg
xor
pop
insl
jge
xor
ds
leave
hlt
sub
jno
roll
lea
or
xchg
data16
xor
int3
loop
repnz
out
into
xchg
dec
xor
sbb
ds
adc
scas
out
adc
mov
popa
xchg
out
gs
and
cmp
hlt
test
dec
mov
js
push
bound
mov
test
inc
push
cld
pop
push
fisttpl
adc
jmp
sub
or
jbe
enter
xchg
jle
inc
bound
mov
jecxz
and
int3
push
ds
sarb
cwtl
sti
push
lods
add
inc
aaa
cmp
inc
push
mov
push
jmp
fstpl
xchg
dec
push
and
cvtpi2ps
inc
push
cmpsb
rcll
bound
mov
cmp
fld
dec
pushf
push
iret
int
cmp
push
es
lret
loope
and
dec
and
jp
pop
jecxz
dec
mov
ljmp
sbb
loope
jne
stos
mov
pop
pop
in
cmc
jo
ja
ss
gs
imul
mov
mov
xlat
cmp
sarb
mov
mov
mov
or
jo
icebp
push
stos
jl
mov
scas
mov
fbld
int3
jo
adc
lcall
test
js
or
stos
pop
xchg
add
stos
mov
dec
jbe
das
dec
out
out
mov
and
test
dec
push
adc
jno
sub
lods
ret
push
push
mov
sbb
jbe
push
dec
lods
cmc
call
pop
mov
pop
hlt
xor
jb
pop
je
test
pop
xchg
pop
cmp
hlt
xor
outsb
push
mov
aam
mov
and
out
xor
and
jae
popf
pop
push
and
mov
mov
mov
pop
sbb
mov
rcr
pop
xorl
repz
mov
les
lods
stos
aad
fwait
lret
scas
dec
aaa
je
pop
repz
sub
sub
stos
dec
xchg
add
jmp
movsl
in
decl
pop
adc
jae
mov
arpl
aaa
xor
cmpsl
daa
insl
add
lcall
xor
mov
roll
fldl
jl
mov
lea
xchg
testb
mov
data16
add
pop
popa
shlb
sbb
dec
or
sub
nop
popa
lret
add
lret
cmp
adc
test
fimuls
cmp
inc
sti
lds
mov
lds
pushf
pop
cmpsb
ficompl
dec
mov
repz
cli
dec
loopne
sahf
mov
dec
sbb
mov
sub
push
call
lock
enter
or
mov
daa
bound
jae
ljmp
xchg
arpl
mov
fldenv
aaa
ds
cmp
cmp
inc
mov
arpl
sbb
shrl
sub
jg
cmp
or
add
adc
xchg
mov
divl
push
inc
in
mov
out
inc
sub
fldenv
sahf
je
add
pushf
adcb
mov
push
test
inc
jbe
fistpll
lock
mov
call
testl
cmp
jo
mov
jmp
cli
sbb
arpl
xlat
pusha
sub
mov
add
loopne
cwtl
adc
daa
adc
aam
xchg
cmc
ss
das
je
imul
mov
movsl
ret
sub
inc
jo
or
push
cltd
jmp
pop
mov
sbb
xchg
arpl
push
jl
adc
cmp
pop
sbb
mov
inc
inc
or
mov
mov
push
fs
inc
sbb
cwtl
in
testb
daa
pop
xchg
xor
icebp
sub
scas
loop
mov
arpl
sbb
mov
out
push
data16
cmp
pop
frstor
in
mov
mov
test
pusha
sar
adc
jmp
xor
lcall
xor
fcoms
xlat
adc
arpl
adc
popa
sub
sub
xor
loope
jo
xchg
in
jne
xchg
jecxz
xor
push
insb
sbb
xchg
sbb
xor
outsb
lcall
jecxz
cld
into
scas
pop
pop
push
pop
mov
or
push
rcll
mov
xchg
shl
int3
ds
adc
rol
sbb
mov
dec
not
dec
mov
ss
fisubrl
dec
insl
jae
fistl
inc
lods
enter
mov
aam
adc
mov
es
push
push
shlb
test
sub
lret
jge
hlt
or
push
push
cmp
into
push
xor
lret
xchg
jg
in
lret
stos
test
fs
sub
bound
dec
scas
jg
or
das
sub
push
sub
mov
sbb
mov
inc
icebp
push
scas
out
int
add
adc
push
fcompl
dec
rcrl
pushf
lock
rcrb
popf
pop
cmpsl
ds
scas
mov
stos
idivl
adc
mov
mov
mov
jp
inc
cmc
out
fs
leave
mov
push
loop
pop
xchg
mov
mov
add
pop
add
fmul
jge
jge
shlb
shll
xor
iret
mov
int
xor
imul
jmp
pop
jns
movsl
out
cmp
inc
adc
test
in
fwait
mov
ret
mov
pop
mov
lret
cmp
aas
xor
clc
cmp
in
push
cltd
inc
les
gs
dec
cmp
scas
call
rclb
mov
fidivrs
cmpsl
mov
jmp
xor
and
add
sbb
repnz
adc
mov
adc
jb
jbe
pop
jns
in
mov
jbe
mov
sbb
xchg
aaa
jbe
out
fucomi
test
out
cmpsb
push
je
jmp
jo
push
xchg
pop
dec
lcall
push
push
jecxz
jb
insl
jne
add
xchg
ljmp
js
fnstcw
dec
and
fimuls
jg
insb
push
scas
push
imul
jle
pop
and
push
and
sub
push
jb
test
shr
dec
aaa
pusha
lods
push
mov
mov
addr16
fs
mov
mov
addr16
push
jmp
lds
cmp
mov
mov
ret
out
std
or
adc
test
mov
jo
push
jbe
into
jo
mov
fnsave
xchg
xor
lcall
add
test
lds
ds
dec
loopne
pop
test
test
mov
mov
push
mov
xor
mov
and
leave
cli
mov
inc
into
cmp
push
in
mov
lea
dec
insl
push
call
inc
rcll
inc
sub
cmc
push
lcall
xor
cld
dec
imul
sbb
dec
jmp
pop
and
mov
iret
stos
mov
cmp
insb
pop
cwtl
cltd
js
xchg
lea
in
scas
xchg
push
xlat
insl
jmp
jae
mov
pusha
xchg
icebp
stc
andl
add
cmp
lods
out
cmpsl
fsubrl
add
push
mov
push
mov
add
divb
lcall
dec
mov
bound
pop
repnz
mov
mov
cld
ret
fistl
or
pop
mov
inc
push
adc
repz
fsubr
xchg
loope
push
mov
insl
inc
int
pop
iret
pop
insl
lock
or
add
loope
stc
sbb
jp
or
pop
call
jbe
cmp
int
fdiv
xor
nop
jecxz
mov
adc
xchg
jae
jb
sub
fildll
in
sub
shrl
xchg
bound
mov
fwait
insb
xchg
cmpsb
and
test
dec
stos
fisttps
add
push
push
ficoml
test
sbb
inc
fisttps
repnz
stos
mov
xor
ds
fwait
xchg
leave
fcoms
push
xchg
dec
mov
pop
ficoml
and
fmul
add
xor
fimuls
and
inc
or
jp
stc
adc
xor
and
dec
or
or
push
adc
cmc
scas
and
mov
dec
push
icebp
sbb
sbb
or
or
mov
ljmp
mov
lret
cli
mov
cmc
xor
mov
test
xlat
js
or
or
jle
negl
mov
roll
adcl
sbb
pop
scas
jno
fistl
dec
leave
push
test
popf
in
pop
dec
or
adc
jg,pt
in
xor
pop
popa
add
mov
andb
aas
xorb
shrl
and
not
sbb
rcrb
cmp
sbb
jle
and
xor
cld
push
lea
iret
cld
pop
enter
fsubrp
mov
dec
mov
lock
test
lahf
sbb
ficoms
outsb
inc
mov
pusha
pop
shll
sub
sahf
rorl
inc
lahf
push
fsubp
mov
mov
cmp
dec
mov
xchg
sub
fisubrs
hlt
es
jne
fsubs
repnz
das
cwtl
fsubl
mov
inc
inc
test
jns
mov
inc
and
mov
rclb
pop
in
insb
push
dec
adc
aaa
lods
cmp
jbe
xchg
mov
repnz
jne
push
movl
movsl
sbb
sub
dec
mov
jl
mov
fcompl
ss
inc
shl
add
sub
lea
fs
xor
scas
rclb
nop
mov
xchg
add
shlb
and
mov
sbb
jo
je
imul
arpl
js
movsb
push
add
inc
push
jmp
cli
mov
mov
rcrl
outsb
fsubrl
sub
sarl
add
pop
inc
inc
cmp
sub
fisttps
mov
imul
in
stc
notl
pushf
ret
mov
gs
ja
cmc
push
rol
lods
cmpsb
je
xchg
mov
xchg
lds
fwait
jg
pop
loopne
sbb
movsb
loope
stos
xchg
inc
mov
xchg
insl
pop
stos
inc
add
enter
lock
dec
mov
jne
cld
mov
je
ss
cmp
add
pop
movsb
fwait
mov
jmp
std
inc
jg
ror
push
js
adc
jle
jl
push
icebp
xor
hlt
pop
and
add
xor
jp
and
xchg
jnp
and
sbb
les
clc
dec
icebp
pop
fwait
pop
out
cmp
cwtl
sbb
xor
mov
sbb
dec
int
inc
aas
decl
lret
mov
mov
in
xor
inc
movsl
or
mov
fcmovb
iret
orb
mov
push
xchg
push
jmp
sar
popl
dec
std
sbb
out
mov
imul
pop
mov
into
js
dec
push
dec
pop
and
push
call
lods
iret
mov
jp
cltd
jl
jge
in
stos
dec
insl
jne
out
mov
push
mov
lret
call
mov
adcl
lahf
rsm
or
cmp
inc
cld
adc
xchg
dec
sbb
ss
jmp
add
adc
lock
sbb
shll
dec
cli
fcompl
add
or
lds
sahf
jge
lea
into
nop
adc
lds
jo
das
push
idivb
out
fwait
and
test
pop
mov
sub
mov
jge
jae
pusha
and
int3
sbb
mov
jo
inc
stos
mov
dec
sbb
push
xor
es
inc
or
push
repz
hlt
leave
imul
loop
mov
and
lret
pop
dec
hlt
mov
push
or
iret
cmp
mov
push
call
aam
sub
pop
or
xchg
sub
in
mov
orl
push
shll
outsb
or
ret
jns
addr16
mov
outsb
inc
cmc
sub
outsl
int
cmp
test
stc
xor
std
pop
sbb
xchg
mov
pop
rcll
test
mov
fstpl
aaa
xchg
cmp
in
gs
push
imulb
sbb
and
mov
int3
cltd
xchg
fisubs
ljmp
nop
fcomi
out
mov
aam
cmp
sti
repz
inc
repnz
jg
adc
or
incb
aad
push
lret
sub
cli
fdivp
lea
pushaw
lds
cmp
nop
add
mov
jnp
dec
stc
sbb
jg
loop
mov
mov
jb
mov
cmp
pop
notl
adc
movsb
cltd
adc
push
adc
sub
push
sbb
dec
repz
or
pop
std
adc
ds
xchg
imul
push
daa
push
ds
mov
fwait
and
cmp
jnp
jno
pop
ljmp
imul
dec
scas
pop
in
sti
push
je
mov
mov
repz
jns
ja
ficoms
fs
lds
jns
int
sti
mov
imull
push
fwait
xchg
dec
pop
sbb
push
pop
mov
sub
cmp
lods
lret
or
mov
jnp
dec
stc
stc
mov
lods
shl
dec
lahf
inc
sub
jnp
lcall
scas
arpl
lea
lods
sbb
mov
pop
cmp
or
dec
lods
fsubr
sub
out
xlat
arpl
aad
cmpl
sahf
dec
das
test
inc
and
xor
loope
xor
sahf
sbb
mov
jl
insl
mov
ret
mov
stc
das
adcb
nop
pop
adc
cld
mov
iret
cmp
out
lods
std
pop
push
data16
jb
sub
pop
adc
roll
dec
mov
push
ss
xchg
push
push
mov
incl
mov
nop
cli
inc
arpl
xchg
jb
jno
lret
xlat
push
in
adc
pop
fcoml
das
out
cmp
sub
jbe
rolb
std
lock
push
std
in
mov
iret
cwtl
int
aaa
les
daa
hlt
ja
leave
add
mov
sbb
dec
add
ret
pusha
push
or
mov
ret
orl
popa
fwait
cwtl
or
jmp
xchg
arpl
iret
movsl
lds
push
es
sub
iret
mov
int3
sbb
and
xchg
mov
mov
call
xchg
popa
cltd
xchg
pop
pop
lock
fadds
mov
ret
jns
daa
pop
mov
or
cmpsb
or
insb
mov
lods
pop
fiadds
sbb
mov
dec
shrb
loope
loope
shll
and
or
imul
jg
push
adc
out
jne
inc
ljmp
jae
mov
je
dec
fisubrl
jge
jp
mov
je
out
daa
or
dec
arpl
fidivrl
idivb
pop
add
mov
je
jg
popa
jae
jmp
lcall
cmp
inc
inc
loopne
insl
dec
mov
mov
xchg
sarb
adc
das
bound
mov
cwtl
inc
mov
push
cmc
nop
fistps
sub
dec
jmp
pop
mov
arpl
jns
cmp
imul
dec
outsb
sahf
xchg
cmp
pop
jmp
pusha
jnp
jg
dec
dec
and
and
jecxz
jmp
mov
and
push
xor
jecxz
mov
dec
jnp
stc
dec
into
mov
mov
shl
mov
inc
mov
add
inc
adc
fbstp
rcrb
ja
fldl
mov
stos
mov
add
cmp
lret
dec
mov
leave
int3
and
inc
jge
push
loopne
push
bound
jns
repnz
jnp
lret
aas
xchg
ds
repz
es
mov
pop
iret
push
mov
popa
ret
jo
imul
xlat
and
sbb
aad
fidivrl
out
xchg
adc
pusha
movsl
ljmp
hlt
or
jns
fcomps
in
cli
cltd
arpl
dec
gs
dec
scas
jno
mov
inc
and
sbb
addr16
gs
push
jp
jns
mov
aam
test
inc
mov
icebp
test
scas
dec
adc
imul
arpl
push
xorb
js
pop
inc
cs
mov
lock
gs
ret
adc
addr16
leave
inc
movsl
jl
leave
xchg
ret
cmp
fld
insl
dec
or
ss
sti
mov
and
shlb
jns
scas
push
lcall
inc
mov
push
stos
xchg
dec
xor
test
ftst
mov
dec
mov
mov
js
jae
loope
ficompl
push
jg
xlat
jmp
and
sahf
aad
test
inc
data16
push
cmp
and
sbb
cli
jle
mov
dec
dec
in
ret
lea
inc
mov
ljmp
movsb
pop
test
ljmp
or
inc
mov
lea
mov
sub
lods
xorb
into
xor
mov
jg
ret
ret
pop
dec
cmp
lods
and
mov
lret
fdivrs
xchg
inc
cmp
dec
cmp
stos
ds
outsl
cmpsl
cli
loop
mov
insl
ja
mov
pop
or
cmc
mov
inc
cmp
out
in
mov
push
fstl
nop
cmp
popa
aam
push
mov
fidivs
inc
hlt
push
jnp
push
sbb
add
mov
lock
dec
shll
pop
pop
mov
push
jae
aad
das
and
inc
push
jo
and
cmp
roll
outsb
idivb
add
test
sbb
movsb
sbb
into
sub
clc
inc
or
outsl
daa
pop
dec
xchg
push
sub
inc
mov
ret
xor
push
mov
leave
mov
stos
sub
cmp
adc
iret
mull
add
outsb
jmp
dec
sbbl
inc
cmp
cmpsl
mov
mov
jns
jmp
or
inc
out
lahf
or
xchg
pop
testb
xchg
mov
mov
jmp
fdivrl
in
test
push
push
lods
push
cmp
mov
fwait
test
mov
sub
sub
adc
pop
push
cmp
hlt
push
jle
sub
sbb
in
fistps
lret
or
jp
and
dec
xchg
sarl
aam
movsl
xor
mov
jae
repz
sub
xchg
cltd
sar
and
and
xchg
mulb
fwait
mov
insl
clc
adc
daa
shrl
xor
jl
add
inc
bound
mov
dec
mov
mov
loopne,pt
es
dec
mov
inc
leave
cs
call
and
outsb
pop
sti
loop
cwtl
mov
insl
mov
pop
outsb
add
mull
inc
movsb
pop
test
fdivr
popa
add
ja
addr16
lret
or
ret
popf
lret
fisttpll
outsl
aam
push
andl
fiadds
fwait
xor
jge
shrl
stos
mov
or
cmp
cmp
and
andl
sti
mov
ljmp
adc
dec
es
add
test
rol
nop
xchg
vzeroall
clc
cmp
jmp
xchg
pushf
xchg
cmpsl
sahf
fcoms
aas
sbb
rorl
jae
jmp
daa
test
ss
cmp
cmpsl
fdivl
repnz
insb
and
adc
fldenv
pop
lret
adc
add
xchg
inc
popf
xchg
xadd
and
loope
mov
mov
mov
pop
jmp
ret
mov
add
pop
stc
outsb
lods
jo
push
jp
sti
cmp
ret
test
insb
push
lods
xor
fstpt
push
jo
cmp
cmpsl
push
leave
ret
push
xchg
aas
xchg
cmp
das
xor
push
mov
ss
or
jo
xor
push
adc
sub
hlt
xchg
xchg
lods
loope
dec
sbb
das
popf
cmp
dec
pop
push
mov
pop
lock
jbe
mov
popf
sub
xchg
out
cmp
dec
test
inc
cmpsb
int
test
or
jnp
pop
mov
or
int3
daa
test
jbe
outsl
aad
mov
mov
lcall
cmpb
mov
pop
fisubs
or
shl
pop
push
sahf
enter
int3
cmp
and
fcmovbe
xchg
je
push
and
mov
add
xlat
pusha
dec
push
pop
or
dec
mov
lret
jle
test
jae
nop
push
sbb
and
ret
pop
stc
cmp
xchg
xor
ss
pop
xchg
lcall
dec
sbb
xor
scas
std
pusha
mov
dec
out
or
jns
mov
call
mov
insb
jo
adc
mov
or
stos
cld
mov
mov
adc
clc
inc
mov
jno
outsb
inc
adc
xchg
cmpsb
add
test
imul
jle
inc
cwtl
in
mov
xchg
clc
sar
jl
outsb
push
pop
daa
sub
push
pop
mov
ljmp
xchg
vshufpd
bts
pop
mov
rorb
das
xor
lret
lods
stos
lock
mov
sahf
push
pushf
sub
pop
mov
cwtl
inc
enter
and
out
je
sbb
or
pop
loopne
shr
xor
xchg
add
sbb
push
cmp
popa
std
in
mov
push
out
cmp
and
mov
aas
or
stc
test
test
dec
les
cs
int3
aad
sub
scas
adc
pop
and
push
jae
xchg
in
and
jns
popa
pop
lret
push
mov
aam
scas
ret
aas
gs
push
add
jbe
in
add
pop
sbb
inc
inc
ljmp
xorl
loope
sbb
adc
or
xchg
xchg
fidivs
shrb
push
mov
ja
fistps
xchg
lret
mov
out
clc
xor
xchg
and
sti
rdtsc
fmuls
movsl
xchg
pop
stc
daa
loopne
int3
xchg
fldcw
bound
cmp
dec
xchg
aas
outsl
jg
push
imul
ret
xor
mov
addb
dec
sub
movsl
inc
insl
mov
mov
aas
pop
in
inc
in
sbbl
lods
add
xlat
cmp
jbe
push
imul
push
je
cmp
enter
pushf
sub
mov
add
mov
ss
test
jp
inc
mov
dec
inc
call
add
cmp
xchg
ja
cltd
imul
dec
sub
xchg
mov
ja
sbb
cmp
adc
inc
and
mov
jp
fwait
testl
dec
test
pushf
xor
clc
data16
neg
inc
xchg
xchg
sbb
daa
inc
adc
push
mov
adc
aam
add
cmp
aaa
pop
add
push
lret
mov
mov
sahf
mov
xchg
stc
lret
sahf
xchg
mov
pop
out
fcoml
jmp
loope
enter
je
and
cs
cmpsl
daa
jp
shlb
je
jbe
test
xor
xchg
mov
daa
push
mov
pop
pop
sub
jns
bnd
mov
mov
jo
xchg
test
push
iret
inc
cld
lcall
ja
sbb
xchg
fnstcw
and
out
test
jp
jns
stc
out
xchg
sbb
testb
xor
jle
jp
jbe
mul
imul
or
jbe
rol
adc
inc
mov
ljmp
mov
xchg
mov
add
das
ljmp
mov
pop
push
mov
push
in
inc
cld
int3
sub
lds
xor
jne
jmp
ljmp
lcall
mov
fldl
xchg
ficoml
push
xor
enter
fbstp
xchg
cltd
mov
push
xor
dec
clc
cmp
push
xor
and
aam
adc
lods
xchg
mov
jle
shlb
fistps
dec
jns
xchg
push
push
in
mov
mov
sbb
in
jnp
mov
rcl
pop
cmpsb
test
inc
jl
ret
and
lods
or
mov
mov
adc
popl
cmp
xchg
insl
insb
dec
inc
int
lods
sub
xchg
js
aad
fadds
cmp
jle
sbb
sbb
sbb
pop
movsl
rorb
aas
mov
dec
inc
add
jns
movsl
das
insb
dec
shll
gs
outsb
shl
mov
adc
insb
rorl
movsl
ficompl
mov
hlt
xchg
mov
push
aas
or
push
sub
xchg
push
popf
std
fdivr
lds
xor
leave
dec
in
push
xchg
sbb
mov
mov
pop
dec
sub
int
mov
divb
sbb
lock
push
pop
stc
sbb
adc
jl
sti
pop
adc
pop
in
cmp
iret
or
mov
jbe
rorb
push
add
pop
mov
in
call
and
lods
fldl
xchg
lds
les
inc
mov
pop
mov
xchg
mov
dec
test
setg
leave
xor
push
lea
outsb
fucomp
out
push
sarb
bound
adc
mov
pusha
mov
cmpsl
std
fistpll
sub
jns
and
jne
xchg
sbb
fcompl
fwait
mov
hlt
cmc
rcrl
lret
sub
out
dec
sub
stos
xchg
mov
sti
push
es
sub
xchg
sbb
lock
lahf
jb
pop
xor
cwtl
test
pop
adc
ja
ret
dec
mov
rorl
xchg
xchg
enter
test
mov
and
lret
popf
cmpsl
push
stc
outsl
sbb
push
and
dec
cmpsb
mov
push
fidivl
dec
or
xchg
lods
pop
and
les
jns
loop
icebp
in
cmp
jle
stos
sbbl
xorb
pop
mov
loop
jle
insl
lahf
fdivrl
xorb
mov
xor
mov
mov
jle
test
into
das
mov
and
xor
mov
fnstenv
jge
dec
jnp
add
adc
mov
jle
mov
xor
and
int
jmp
mov
std
and
or
sub
idivl
fsubl
mov
stos
hlt
xchg
sbb
inc
dec
sahf
mov
sub
mov
lds
push
cmpl
inc
sbb
add
sub
fs
je
or
stos
jmp
leave
mov
sub
movsb
add
sbb
jnp
nop
mov
push
fnstsw
inc
inc
xchg
dec
pop
cs
orb
ja
cmp
punpckhbw
loop
mov
fistpll
and
pop
mov
push
movb
add
iret
sbb
std
cmp
xor
pop
jecxz
pop
sbb
enter
in
int3
lret
or
dec
fisubrs
leave
mov
in
push
daa
sbb
jecxz
or
test
fsts
inc
int3
iret
cmpsb
xorb
xchg
dec
sub
mov
sub
mov
xchg
leave
int3
xor
sahf
imul
jmp
sbb
pop
adc
push
add
imul
in
xchg
dec
cmp
jecxz
rcll
cli
sbb
decl
dec
sbb
arpl
cmc
jbe
daa
sub
pop
lahf
mov
popl
xor
or
shl
imul
mov
iret
lret
scas
call
rcrb
jbe
xchg
pop
mov
stc
inc
mov
adc
cmp
push
mov
lock
lcall
lock
andl
mov
sbb
mov
jo
leave
scas
fisttps
and
es
xchg
jmp
mov
or
add
jae
jb
imul
xchg
jp
jno
xchg
mov
adc
mov
jne
and
loop
mov
sub
int
and
inc
cs
ficompl
sti
jne
xchg
jl
pop
mov
test
mull
push
addr16
adc
ljmp
push
cs
movsb
scas
mov
xchg
push
fwait
adc
bound
xor
lret
dec
ss
rcll
jge
mov
pop
data16
imul
inc
js
ljmp
pop
mov
push
shl
mov
cmpsb
cmc
rcrl
aad
push
sub
xor
test
xlat
jle
shl
inc
jg,pn
jb
ret
sbb
clc
jg
adcb
jmp
xchg
lahf
xacquire
xchg
xchg
inc
pushf
hlt
lret
and
and
ds
jle
ljmp
mov
popa
xchg
decl
dec
popf
aaa
test
sti
int3
xor
cld
adcb
arpl
movsb
dec
mov
cs
jmp
add
mov
in
jg
inc
pop
fldcw
repz
add
dec
popf
xchg
xchg
scas
scas
pop
jae
jl
mov
pop
aad
icebp
sbb
mov
inc
xchg
inc
outsb
enter
into
in
sbb
dec
mov
out
sar
int3
adc
mov
test
lds
roll
ficompl
int3
out
sub
mov
xchg
lds
or
or
leave
aas
aam
aas
or
mov
fidivs
je
idiv
adc
iret
push
cmpsb
add
mov
add
jno
inc
and
imul
mov
push
dec
faddl
not
push
or
mov
ret
pop
jle
lock
mov
ljmp
test
lret
repnz
pop
push
jae
push
mov
lods
aam
adcb
insl
movsl
lea
pop
inc
mov
sub
dec
das
xor
mov
jecxz
xchg
into
cmpsl
cmp
int
outsl
mov
aad
push
xor
pop
push
inc
dec
mov
push
jmp
mov
push
mov
or
sbb
movsl
sbb
inc
push
mov
and
dec
sbb
mov
loopne
adc
pop
add
cmpsl
sub
leave
cmpsb
loop
jmp
cmp
std
push
xchg
mov
fldcw
insl
or
inc
repz
out
pandn
pop
cmp
fistps
lods
and
mov
out
xchg
inc
mov
mov
adcb
mov
xor
mov
sbb
xor
mov
jp
cmpsl
sub
xor
imul
in
mov
test
fcomi
bnd
arpl
aam
fstps
insl
aad
cmp
and
or
flds
shr
xchg
add
sub
mov
xor
dec
sbb
or
arpl
xchg
ror
loope
xor
mov
dec
insl
inc
daa
out
push
mov
xor
inc
stos
leave
inc
jge
out
je
out
cmpsl
call
je
mov
adc
call
pop
lds
fldcw
cmp
into
dec
pop
aaa
xchg
cwtl
adc
enter
add
sub
add
sub
jb
fsub
dec
inc
sahf
ret
xchg
movsl
test
int3
xchg
or
ljmp
dec
or
mov
dec
xchg
pop
out
mov
imul
dec
stc
pop
stc
sub
imul
lods
add
and
scas
xor
ja
test
movsl
jns
xlat
and
adc
arpl
or
jb
int
in
imul
xor
enter
fcomps
nop
testl
int
pop
mov
cmp
std
jge
movmskps
ret
cld
test
fistpl
sub
jo
pushf
stc
cmp
sti
cmp
cli
xlat
hlt
outsb
imul
xchg
and
push
cmpsl
dec
stos
daa
fs
sbb
js
cmp
mov
imul
test
jno
push
and
popa
dec
pop
nop
xchg
leave
mov
fdivs
mov
shr
movsl
push
inc
imul
push
data16
mov
adc
xchg
sbb
aad
add
mov
dec
mov
cmpsl
and
add
icebp
out
nop
mov
movl
mov
cli
or
enter
cmpsb
adc
pop
cltd
stos
cmp
xor
xchg
sbb
push
pop
adc
movsb
pop
lds
es
push
out
lret
xor
cmp
pop
stos
shr
pop
fs
push
ret
inc
mov
adc
ror
inc
cli
frstor
iret
lret
cmpsb
lret
mov
xor
daa
push
in
loope
ret
pop
stos
rorl
popf
repz
fimuls
ja
mov
dec
add
lret
xchg
pop
mov
addr16
sbb
cmp
sbb
lcall
mov
loope
std
jbe
mov
lahf
mov
cmp
jne
dec
insb
xchg
xchg
mov
jle
popf
cld
popf
mov
loopne
cmp
inc
popa
sarb
aam
inc
decl
inc
cmpsl
mov
sub
aas
xor
jae
rcl
scas
mov
inc
pop
sub
mov
lcall
popl
addr16
pop
jnp
ret
in
mov
int
push
mov
inc
data16
test
or
gs
mov
adc
ds
jp
std
out
jecxz
push
xor
dec
or
cs
sub
mov
pop
pop
lds
fwait
aad
movsl
xor
test
cmp
sahf
mul
fsubrl
and
mov
add
mov
adc
mov
pop
fldenv
sti
lods
xchg
mov
lods
mov
scas
pushf
cmp
ret
add
jp
filds
movhps
dec
minps
jge
shrl
sub
sbb
ja
ret
push
dec
sbb
mov
mov
and
loopne
sbb
bsf
movsl
js
sbb
fnstsw
loop
push
shl
sub
rcrl
push
sub
xlat
inc
lods
dec
jmp
js
add
dec
nop
mov
out
mov
fcomi
fcomps
nop
cmp
pop
cmp
imul
pusha
lock
das
cmp
inc
jge
mov
dec
fiaddl
lret
inc
lods
inc
push
hlt
js
add
shl
mov
and
loope
push
aam
sbb
pop
xor
adc
pop
clc
fldl
fs
add
dec
push
mov
subl
pop
adc
clc
xchg
push
lods
cltd
outsl
dec
mov
dec
mov
and
mov
sub
sub
dec
orb
inc
cltd
lret
mov
test
push
adc
jle
mov
mov
lret
fcmovnb
dec
sub
in
test
ffreep
sti
dec
jno
cwtl
pop
fistpl
pop
pop
cmpsb
inc
and
js
gs
arpl
xor
xchg
movsb
mov
mov
jo
adc
ret
addb
shll
xor
icebp
sbb
pop
cmp
and
mov
fldt
leave
movntq
dec
adc
jno
out
mov
and
enter
pop
in
scas
jae
or
mov
jo
cmp
je
cmp
cld
icebp
clc
cli
ja
out
dec
pushw
out
repnz
cmpl
mov
imul
fmuls
cmp
out
daa
addr16
and
vcvtsd2ss
je
test
lods
adc
hlt
daa
hlt
jbe
jno
loope
jecxz
ficoms
imulb
sahf
xor
rorl
jp
inc
adc
jmp
inc
into
mov
lret
std
in
fsubrs
ss
add
mov
iret
cmpsb
inc
push
ret
mov
fimuls
and
and
lods
or
les
rcrb
rcll
inc
imul
xor
mov
xchg
fisttpl
fildl
test
xchg
addl
fs
nop
inc
out
movsb
xor
jecxz
push
popa
dec
out
cmp
push
negl
adc
idiv
jmp
or
lea
mov
iret
fimuls
add
dec
mov
cmp
mov
inc
mov
jo
sti
js
push
jmp
mov
and
sub
stos
jo
std
ljmp
ljmp
ret
cmp
out
lret
add
dec
mov
inc
test
and
insl
mov
movsb
hlt
xor
jg
cmp
mov
mov
push
lahf
dec
lods
insb
lods
aad
mov
cmpsl
pop
pop
sarl
repnz
jno
int3
adc
ret
cmp
sbb
mov
ret
mov
es
and
test
cmpsl
jmp
ds
call
fisubrs
adc
mov
xchg
leave
jmp
jle
data16
sahf
pop
repnz
mov
pusha
in
jmp
push
jle
out
mov
jne
xor
jnp
add
inc
push
loop
das
lret
pop
adc
jle
bound
sub
outsb
gs
mov
sub
and
test
pusha
shl
rorl
jo
out
lret
fdivrl
rcll
push
jnp
mov
add
mov
sbb
daa
in
loopne
xchg
xor
push
xchg
je
aad
aam
pop
pop
sbbb
lods
add
aad
mov
inc
sti
aas
ljmp
jne
lods
out
lods
das
out
aad
pop
mov
popf
mov
insl
and
jns
fistps
cmp
mov
adc
cltd
popa
sub
inc
and
add
js
aas
pusha
inc
stos
pop
xchg
cmpsb
push
push
cmp
movsb
ss
fistpl
mov
or
dec
xchg
jl
imul
and
or
imul
adc
add
lret
movsb
and
xchg
mov
sahf
mov
sub
outsb
jne
data16
jno
scas
clc
popa
push
xchg
pop
and
push
sti
add
in
popf
jo
ficomps
jg
pop
dec
sbb
sub
jmp
jnp
push
add
add
ljmp
dec
repnz
inc
sub
xlat
sbb
dec
push
imul
sbb
pusha
jbe
jo
pop
mov
pop
mov
add
push
mov
fists
psadbw
clc
sbb
insl
imull
sbb
jae
out
push
push
enter
inc
mov
leave
out
lods
aaa
test
sbb
and
add
pushl
xchg
inc
lods
push
jnp
int
cmc
dec
inc
mov
adc
cmp
test
stos
or
xchg
adc
sti
mov
inc
jb
stc
push
push
cmp
stos
and
icebp
add
shll
in
xchg
iret
mov
dec
movsb
inc
pop
cmpsb
add
sub
sub
mov
test
cmp
jmp
xchg
into
xlat
lds
hlt
enter
xchg
stos
ret
inc
push
dec
jl
aas
add
cli
fisubrs
imul
mov
loopne
sbb
pop
cli
cmpsl
cli
xor
push
mov
push
icebp
push
mov
daa
xchg
in
cld
jnp
push
stc
pop
je
lods
mov
jle
pop
subl
sub
mov
test
insb
pop
push
or
int
inc
lods
lods
xor
outsl
mov
rcll
inc
ror
aam
and
push
rcr
decl
sbb
xchg
sbb
dec
mov
xchg
movsl
xchg
push
xchg
or
pushf
fcmovbe
add
popa
pop
addr16
adc
test
pop
or
jle
add
fnstenv
mov
xor
gs
mov
lea
sub
mov
xchg
xchg
adc
addr16
cmp
imul
scas
jmp
lds
jae
int
repnz
insl
add
pavgw
idiv
out
andl
mov
loopne
stos
sub
nop
mov
imull
sub
pop
add
les
xchg
in
stos
cmc
out
pop
movsb
aaa
add
out
rcrl
hlt
xchg
repnz
pusha
adc
mov
ficoms
jecxz
xor
dec
lahf
xor
cmc
rorl
cmp
mov
inc
je
fisubrs
pushf
or
mov
pop
loopne
rol
arpl
adc
lds
adcl
dec
sub
bound
mov
xlat
or
dec
mov
sub
mov
dec
cmpsl
xchg
push
mov
mov
cmp
xchg
push
fadds
fstpt
push
pop
bound
mov
inc
call
and
inc
adc
push
mov
in
xor
or
into
or
test
add
inc
movsl
mov
orl
xchg
push
mov
dec
jno
fiaddl
js
inc
cmc
jne
jbe
das
popa
out
sub
push
or
aas
inc
stos
sbb
stos
fucomi
sti
pop
mov
cmp
add
pop
fisttps
setbe
cmpsb
fiaddl
mov
push
aam
sbb
xorb
mov
xor
js
mov
lcall
das
mov
and
xchg
adc
sub
sub
xchg
lret
mov
movsl
push
xor
jle
les
xchg
adc
push
inc
in
pop
mov
cmp
movsb
mov
jge
cmpsl
fsub
call
xchg
test
xchg
pop
mov
jmp
aam
std
inc
stos
add
mov
jp
mov
and
fldl
inc
jnp
mov
std
sbb
in
popf
leave
hlt
mov
add
xchg
add
stos
dec
jnp
push
rcrb
test
jne
or
std
add
sbb
stos
xchg
test
les
jb
jle
inc
push
mov
pop
cmp
sti
mov
insb
and
lods
dec
cmovno
mov
and
sbb
adc
mov
shlb
and
rorb
xor
cmp
lahf
and
inc
in
jecxz
adc
popf
repnz
pop
xorb
imul
std
add
fwait
int
pop
cmp
dec
lcall
jno
pand
cmp
xchg
stc
sbb
pushw
test
insl
sub
mov
out
pop
fucomip
in
loopne
dec
mov
dec
in
pop
mov
cmpsb
jmp
mov
mov
ss
je
cltd
nop
sub
cmp
mov
nop
mov
sbb
les
adc
sub
bound
lods
sub
add
cli
ret
pushf
pusha
adc
lock
push
pop
stos
and
arpl
andl
add
sbb
adc
xchg
inc
rcrl
cmp
mov
jge,pt
and
orb
rolb
insb
and
xchg
loopne
ret
lar
xor
in
mov
mov
in
out
pop
loopne
mov
push
test
mov
mov
sub
jle
lcall
test
xor
jns
jae
jl
add
xlat
sbb
enter
sbbb
aas
jae
mov
inc
shll
jnp
outsl
aas
decl
jb
cmp
or
dec
cmpb
les
out
lock
cmp
add
xor
aaa
dec
int
sahf
mov
dec
inc
inc
stos
data16
dec
xchg
push
mov
pop
inc
daa
or
adc
arpl
repz
and
sti
testb
cmp
out
sbb
or
int3
lock
or
shll
adcb
dec
inc
xchg
sbb
and
dec
inc
ljmp
push
adc
cmp
mov
sub
orb
push
into
sbb
int
pop
int3
jo
pop
push
sarb
rclb
lret
test
cmc
mov
ret
cmc
pusha
fildl
mov
add
pop
sbb
outsl
stos
mov
sub
in
xorl
leave
xchg
jbe
outsb
xchg
es
mov
xchg
inc
jo
cmp
sbb
lret
aas
xor
shll
sub
icebp
stc
cmpsb
loopne
and
mov
pusha
aad
sahf
pop
jecxz
in
stos
pop
jl
inc
adc
das
data16
jg
mov
sub
and
push
jb
pop
test
ljmp
push
out
sub
mov
ret
xchg
pop
pop
pusha
xchg
inc
push
out
push
mov
add
mov
test
dec
push
push
iret
cmpsb
and
add
push
lea
sbb
and
lock
stos
xor
icebp
jge
pop
jno
mov
mov
mov
fstpt
mov
insl
movsl
or
in
popa
gs
pushf
mov
xor
xor
lss
jno
jno
aaa
sti
aas
int
cltd
sub
jle
push
arpl
push
sbb
cltd
dec
jmp
mov
cli
das
dec
inc
fiaddl
fimull
jae
adc
xor
mov
dec
add
xchg
roll
cmp
add
fcomps
pop
call
add
stos
cmp
fnstcw
push
mov
enter
int
or
and
jg
loope
xchg
imul
inc
ja
and
aam
jg
xorl
dec
lret
lahf
cmp
mov
mov
fldcw
in
sbb
jle
xchg
mov
add
ja
mov
cmpsb
fcmovbe
add
push
in
stos
mov
stc
sub
mov
sahf
cmp
cmp
or
jl
out
insb
in
mov
addb
cmc
call
mov
in
mov
sbb
push
dec
insl
test
lea
push
imul
inc
mov
aad
jae
mov
inc
jecxz
sub
cmp
pop
sub
mov
int
jae
pop
push
jp
lds
jg
int
xor
pop
out
ds
imul
nop
gs
mov
stc
jl
cmp
gs
lret
iret
and
mov
and
mov
hlt
push
sub
dec
mov
or
cmc
adc
pop
inc
add
xchg
push
cmpsl
mov
rcrb
icebp
gs
push
push
pop
xchg
adc
scas
mov
out
sbb
mov
rorl
mov
cmc
into
mov
push
outsl
mov
xor
or
cmpsb
jo
sub
subb
sbb
mov
loopne
and
inc
lods
cmp
mov
inc
pop
fcomip
sbb
cmpsl
lahf
xor
jmp
and
sbb
shll
lock
not
xchg
dec
pop
testb
lahf
xor
dec
imul
dec
cmp
mov
pop
or
jecxz
out
xor
push
cmpb
dec
aaa
mov
adc
and
mov
xlat
nop
in
adc
outsb
lods
insb
or
xor
add
mov
int3
std
gs
adc
mov
je
pop
cmp
sti
and
ja
adc
mov
test
js
cmp
push
popf
xlat
or
lret
push
cmp
adc
sti
sub
mov
iret
inc
outsl
pop
pop
mov
imul
inc
mull
mov
adc
or
movhps
push
popf
or
jl
int
add
pop
hlt
addl
mov
test
or
pop
add
fldlg2
test
pop
sbb
pop
into
xchg
mov
dec
repnz
ss
dec
add
shll
adc
push
scas
xchg
popa
rcr
jae
lcall
xchg
cs
adc
notb
pop
fmul
adc
pop
inc
cmp
mov
jb
fwait
xchg
cmp
cli
std
div
sub
sub
pop
loope
in
mov
ret
pop
sub
mov
mov
jge
sub
jns
push
jno
into
insb
jmp
and
xchg
jmp
xor
adc
out
in
adc
ds
push
inc
repnz
mov
push
mov
scas
and
das
leave
push
fnstsw
sub
jo
test
sahf
mov
sbb
sbb
pop
push
bswap
inc
out
movsl
mov
notl
test
add
sbb
sahf
test
or
rolb
loope
popa
xor
dec
xchg
subb
or
lods
in
aam
xchg
test
mov
mov
mov
into
dec
mov
or
mov
jnp
push
lahf
bound
mov
cmp
in
jle
xchg
xchg
jns
repz
sub
adc
pushf
std
fisttpll
cli
jno
lea
mov
stc
mov
xor
cmp
cmp
js
pop
aad
pop
jmp
cmpsb
outsl
ret
scas
cmpsl
sbb
add
xchg
subl
pushf
cmp
mov
cwtl
add
test
scas
pop
nop
adc
adc
push
xor
push
cwtl
lret
fldcw
jg
outsb
push
cmpsb
cli
ret
cwtl
jg
fsts
fnstenv
movsb
jb
xchg
push
cmp
add
nop
lret
je
jns
xor
pmulhw
mov
inc
jle
adc
test
pop
push
cmp
in
mov
test
std
mov
pop
shlb
popf
scas
and
mov
je
in
sbb
enter
xchg
hlt
mov
ljmp
inc
jbe,pn
or
and
xchg
cmpsb
jl
js
pop
xchg
jae
sub
pop
fwait
int
cmp
jns
imul
push
and
rolb
fstpt
inc
daa
repz
push
adc
nop
sbb
xor
aad
xor
ss
adc
dec
out
or
sti
lret
push
das
mov
movsl
call
mov
inc
cmp
loop
xchg
mov
lods
xchg
mov
outsb
sahf
fstpt
imul
outsb
arpl
and
clc
ja
sahf
lret
loop
mov
ja
inc
sbb
and
cmp
sbb
sti
pusha
cmpsl
xchg
in
mov
xchg
ffreep
mov
push
mov
aad
bound
cld
test
insl
jg
push
fistps
or
je
pop
pop
push
and
mov
imul
inc
xor
addr16
xchg
jp
dec
mov
xchg
lret
mov
xchg
adc
dec
mov
inc
stc
fs
movsl
add
xchg
orl
sub
sub
hlt
ss
sub
dec
mov
xor
or
and
out
xchg
inc
mov
mov
insl
roll
xchg
call
and
shll
rep
xchg
and
jmp
pop
jecxz
inc
cmp
rorb
push
pop
test
jnp
mov
jno
and
out
nop
adc
pop
xor
scas
push
ss
arpl
int
xor
xchg
pop
xchg
mov
enter
sub
xchg
iret
xchg
icebp
dec
adc
lret
mov
loop
loope
or
ja
xor
iret
jne
out
cmp
push
jne
jge
push
sahf
mov
push
rolb
xor
imul
pusha
popf
adc
jb
outsl
mov
cmp
inc
mov
mov
push
mov
pop
and
nop
xor
sub
lcall
outsl
fisubrs
mov
push
clc
push
imul
shlb
push
mov
pop
movsb
movq
cmp
or
adc
add
ret
lods
and
add
lds
or
xchg
adc
mov
or
lea
lahf
gs
sbb
cmp
mov
and
cs
xlat
dec
call
push
push
test
cli
add
loopne
lahf
addl
jmp
loopne
mov
insb
dec
imul
xor
xchg
cmp
adc
in
test
fiaddl
addl
mov
cmp
jne
push
out
dec
ljmp
aaa
adc
adc
xor
in
jle
jge
fwait
add
shrl
fbld
sahf
jo
leave
jecxz
cmpsb
pop
sbbl
loopne
lcall
or
ss
fs
sub
jmp
gs
or
pop
in
mov
mov
divb
test
loop
and
lcall
insb
xor
lahf
inc
add
sub
and
push
stos
pop
mov
add
push
int
cmp
jecxz
mov
pop
stos
push
test
and
lods
loopne
xchg
pop
frstor
fucomp
and
sahf
mov
lock
repnz
add
push
mov
sub
insl
and
push
or
mov
jo
hlt
add
dec
loop
aaa
jo
mov
aad
fsts
or
out
flds
cld
into
fmull
out
fxch
mov
add
adc
xchg
jbe
inc
dec
push
sub
add
or
mov
cmpsl
pusha
rol
lods
mov
pop
sbb
stos
je
insl
sub
int3
inc
out
ficoml
add
movsb
push
gs
jecxz
jg
out
int
jno
mov
mov
jbe
jmp
or
inc
pop
jge
dec
ljmp
add
jle
cmpsl
xor
add
stos
popf
lret
and
dec
xchg
test
sti
push
fimull
ljmp
mov
inc
or
imul
jl
js
jg
sbb
nop
push
nop
and
or
inc
jl
int
xchg
xlat
rclb
fldenv
pop
add
pop
rcl
dec
jecxz
mov
cmp
loopne
ds
and
mov
lods
je
cs
subb
mov
bound
mov
sbb
addb
daa
in
repz
and
cmpxchg8b
ret
cmpsl
ja
lds
jae
sub
xor
mov
out
push
fisttpl
stos
sahf
inc
mov
mov
mov
pop
mov
sarl
shll
int3
ficoml
xchg
cmp
sti
jp
pop
or
jle
jg
imul
adc
cltd
aaa
adc
adc
mov
sti
ljmp
xor
xchg
cld
das
dec
lods
or
out
mov
xor
ret
mov
fs
and
loope
adc
imul
fcoms
xchg
ss
mov
pop
mov
push
sub
push
cmp
cli
and
mov
push
aas
xchg
inc
dec
leave
icebp
hlt
inc
push
inc
cmp
loopne
pop
lea
inc
pusha
mov
aas
sub
frstor
ret
movsb
cmp
jl
and
and
divl
js
in
mov
sbb
je
incb
inc
std
inc
pop
bound
xchg
loope
mov
push
jecxz
cwtl
clc
popa
and
in
inc
fldt
cwtl
inc
adc
cmp
adc
ficoml
jg
pop
pop
fildll
mov
xorb
sub
xor
sbb
fwait
cwtl
out
pop
in
add
add
aam
xor
cmp
dec
sub
sahf
fiaddl
arpl
push
mov
push
xor
xchg
ret
gs
addl
fwait
ret
mov
sub
pop
gs
jl
arpl
rep
jo
mov
xchg
add
dec
push
mov
adc
adc
sub
sbb
nop
mov
hlt
cmpsl
jp
adc
js
xchg
push
ds
cmpsb
or
fimuls
int
aaa
adc
sbb
movsl
sbb
movsl
push
add
dec
stos
cs
push
or
lds
add
add
jmp
add
call
jnp
es
sub
xor
enter
sub
inc
adc
cmpsb
mov
clc
push
mov
js
aam
inc
in
sbb
pop
aad
out
cli
xchg
movsb
pushf
xchg
mov
push
loop
mov
cli
cs
imul
adc
hlt
mov
xor
pop
mov
or
add
jle
clc
imul
push
xchg
sub
std
ljmp
xchg
ret
fidivrs
aam
out
pop
or
subb
push
stos
pop
lds
and
pop
jecxz
popf
add
adc
fildll
lea
cmpsl
iret
xor
outsb
inc
les
mov
dec
dec
add
xor
aas
test
add
dec
adc
xchg
or
jne
xchg
mov
mov
iret
mov
pop
jnp
push
xor
out
jl
jno
nop
mov
adc
lock
inc
push
and
mov
cmc
sub
xchg
ljmp
dec
inc
lods
jo
mov
in
in
jmp
test
ffree
call
ja
cmp
mov
push
nop
stc
adc
and
dec
mov
mov
sbb
cmpsb
cmp
jg
nop
mov
dec
adcl
imul
cmp
xchg
xchg
aad
mov
push
mov
cs
cmp
xor
add
jge
iret
shl
pusha
xchg
xlat
fadd
fdivl
imul
cli
gs
xor
inc
pop
nop
pop
addr16
mov
iret
dec
std
cmp
cmp
outsb
cmp
icebp
jne
mov
add
push
and
repnz
cmpsb
dec
push
dec
jmp
xchg
jg
inc
cmp
cmp
jp
jo
pop
imul
push
xorl
sub
sub
push
xchg
cmp
movsb
dec
enter
pushf
dec
cmp
bound
sub
and
add
sarb
repnz
test
inc
mov
in
add
dec
test
dec
push
mov
add
imul
nop
call
inc
jbe
in
sub
sti
mov
inc
push
stos
dec
xor
stc
mov
mov
icebp
and
fldenv
add
sarl
cmp
mov
es
rcrl
or
dec
xchg
ds
mov
mov
pop
loopne
inc
xchg
insb
push
rolb
mov
dec
mov
lret
or
jbe
lods
lcall
out
xchg
movsl
add
mov
std
sarl
mov
cmpsl
ss
dec
nop
inc
xlat
adc
shrl
or
std
dec
nop
daa
jnp
outsl
mov
les
addr16
push
ficomps
lods
sahf
push
push
or
lret
cmp
mov
mov
mov
mov
jmp
in
sub
jns
dec
pop
jle
jne
movsb
stos
mov
inc
pop
add
push
xchg
stc
ss
pop
pop
sbb
pop
sub
dec
test
sub
outsl
fistpll
xor
mov
push
mov
sbb
outsb
push
jmp
add
dec
inc
push
push
and
xchg
mov
mov
pusha
mov
xor
call
test
scas
mov
add
stos
push
test
int3
mov
xor
adc
call
test
lds
dec
loop
mov
out
outsb
mov
sbb
scas
push
adc
outsb
daa
leave
popl
push
loopne
into
push
sbb
mov
inc
ror
mov
xchg
xchg
push
push
cmpb
in
jecxz
push
fwait
xor
push
add
popa
mov
jb
mov
push
out
iret
daa
movsb
aad
and
pusha
mov
xchg
and
xor
imul
stos
push
mov
nop
cmp
push
inc
lret
aad
test
dec
ja
cmp
xchg
and
lret
pop
incl
cwtl
dec
pop
xor
inc
lret
movsb
xchg
cwtl
xchg
lods
dec
sbb
or
mov
into
add
mov
ja
xchg
cmpsl
test
icebp
inc
sahf
dec
stc
mov
loopne
add
fisubs
les
aam
adc
into
punpcklwd
sbb
pop
dec
roll
sub
into
pop
dec
in
lds
jl
and
aaa
shr
fs
ret
into
xchg
les
js
sbb
push
rorb
dec
daa
or
aad
and
adc
in
fs
adc
pop
std
jp
mov
ss
pushf
aam
rol
das
imull
fs
xchg
dec
movsl
cli
jb
xchg
mov
sbb
push
inc
sub
and
call
cltd
lock
inc
sbb
mov
mov
xchg
insb
stos
out
push
xchg
ljmp
cmp
aam
cmp
adc
ss
mov
lcall
cld
movsl
pop
add
sub
std
jnp
ljmp
xchg
test
push
in
add
jo
xchg
push
test
jg
fmuls
aas
aam
or
sarb
sahf
notl
xor
outsb
sbb
cmp
hlt
add
sti
mov
or
aaa
xor
scas
and
inc
and
repz
xor
push
push
cmc
mov
push
insl
pop
dec
std
jne
xchg
xor
dec
mov
mov
and
inc
sahf
inc
sub
and
pop
jmp
jl
pop
mov
add
cmp
inc
xchg
mov
inc
lds
push
mov
or
insl
sub
rcrl
sbb
dec
addb
xchg
fcmovbe
insb
xor
mov
dec
fistpll
mov
out
pushf
rorl
test
push
jb
pop
mov
stc
aas
mov
pop
sub
test
data16
movaps
add
cmp
pushf
mov
outsb
pop
sbb
jl
mov
or
imul
stos
mov
aad
mov
repz
add
insl
daa
testb
arpl
cmp
out
and
cmp
aas
cltd
test
imul
add
cwtl
mov
test
cli
int3
pop
cmp
xchg
lods
push
loope
fwait
jb
push
sti
test
jl
loopne
sbb
hlt
add
aam
xchg
stc
sub
rcll
in
jns
mov
mov
rolb
mov
iret
jmp
sbb
pop
lds
xor
cs
movb
pop
pop
xchg
push
cmp
xchg
arpl
sub
subb
nop
and
sub
push
mov
mov
ljmp
cli
adc
sbb
push
orl
lret
jne
shlb
jns
xchg
pop
sbb
scas
call
lcall
adc
decb
cmp
inc
mov
sbb
and
pop
cli
leave
insl
scas
sub
lret
sbb
pop
pop
mov
stos
sbb
pusha
pop
jns
out
or
lahf
outsb
mov
xchg
add
inc
jns
mov
mov
jmp
test
and
loopne
sti
inc
inc
lods
adc
adcl
outsl
dec
in
lods
daa
jecxz
mov
rclb
pushl
lcall
xchg
xchg
mov
std
push
lahf
test
mov
mov
add
repnz
cld
negl
rep
sub
jmp
arpl
jg
aam
bound
add
xchg
shlb
push
enter
and
mov
jg
push
mov
mov
cmp
and
scas
jae
adc
xor
fucomp
lcall
cmp
sub
and
jl
jecxz
mov
sbb
nop
pushf
push
inc
stos
jb
outsb
pop
or
jg
xlat
push
test
mov
dec
adc
pushf
in
lcall
out
cmc
jne
cwtl
inc
mov
xlat
int
sbb
in
outsb
mov
and
add
test
lret
or
sub
test
pop
mov
movsl
dec
xlat
insb
popl
les
pusha
pop
push
push
sti
jbe
sbb
push
gs
popf
gs
int3
sbb
push
dec
add
loop
xor
push
and
mov
lcall
add
dec
popa
mov
pop
xlat
xor
fcoms
aad
insb
pop
and
gs
xchg
fbld
scas
daa
mov
mov
push
mov
dec
mov
dec
jns
out
inc
lods
imul
fcompl
data16
fucomp
pop
in
push
sub
js
mov
inc
push
mov
in
xchg
jg
cld
mov
shlb
aas
jp
notb
bound
xor
cmp
je
clc
dec
int
inc
xchg
loopne,pn
mov
dec
push
adc
mov
stos
mov
and
in
test
pop
mov
mov
pop
aaa
js
or
sahf
dec
pusha
inc
es
inc
xlat
in
push
aam
mov
pop
mov
pop
shlb
sbb
out
in
add
js
rolb
shrl
fwait
aas
pusha
adc
pushf
pop
jl
xor
xor
or
jle
adc
scas
hlt
in
nop
negl
imul
fists
addl
xor
ficomps
je
jb
and
popf
push
push
sub
outsb
js
jo
movsl
or
mov
gs
sub
jne
mov
jmp
xor
aam
cmpsb
dec
leave
test
dec
lcall
insl
mov
in
add
mov
lock
and
jo
pop
fucomp
mov
jle
outsl
jge
icebp
ljmp
mov
xor
pop
mov
push
jne
mov
jne
movsb
stos
test
pop
mov
les
xor
adc
mov
mov
and
push
cld
in
push
inc
loope
enter
aaa
fwait
cmp
jne
add
mov
lahf
cmpsl
sub
and
push
cmp
jge
pop
adc
xor
hlt
in
dec
push
mov
jecxz
push
mov
inc
mov
in
jae
cltd
mov
jne
into
mov
cld
or
add
fsubr
mov
cmp
into
mov
dec
push
insl
insb
lcall
scas
shrb
dec
dec
lahf
mov
test
iret
adc
sub
mov
dec
pushf
outsl
addb
shrb
lret
mov
stos
rcrl
adc
cmp
sub
test
and
lcall
pop
mov
or
out
imull
xchg
ja
inc
push
dec
push
stc
or
adc
jecxz
jge
lods
fdivrp
aad
pusha
xor
cwtl
push
stos
data16
lods
out
mov
scas
nop
stos
loop
jno
inc
inc
ja
jnp
mov
push
sbb
and
cs
sti
dec
pop
pop
ljmp
jns
mov
push
mov
inc
out
nop
jbe
lret
cli
movsb
or
in
sub
loop
pop
xor
hlt
fnstenv
inc
aam
test
movsl
push
mov
in
or
aam
mov
cmc
push
cmp
loope
out
adc
push
xor
sub
lahf
arpl
pop
inc
xor
out
sub
and
push
insb
leave
pop
es
mov
bound
cld
and
int3
adc
mov
push
outsl
adc
dec
xlat
faddl
sbb
lahf
add
mov
pop
popf
xlat
popf
pusha
pusha
and
jecxz
shlb
lea
ja
repz
mov
test
dec
mov
aad
les
mov
push
scas
add
push
inc
lds
or
fsubrs
dec
mov
movsl
inc
fs
xchg
push
xchg
leave
call
mov
test
jo
jns
mov
add
dec
jl
daa
outsl
sub
repnz
mov
scas
pop
arpl
mov
icebp
cmp
inc
add
xchg
mov
cmp
inc
xchg
adc
loop
insl
pusha
iret
push
iret
enter
cs
xor
xchg
out
adcb
inc
fwait
or
imul
lahf
xor
jns
pop
rorl
mov
pop
jmp
gs
aaa
adc
jo,pt
pop
xor
aaa
lods
fdivrl
push
and
js
cmc
bound
sbb
mov
pushf
cld
mov
cwtl
cmpsb
pop
or
xchg
jb,pt
jae
aaa
cmp
je
mov
dec
in
rcl
or
xchg
sub
mov
dec
fs
sbb
add
lahf
flds
fisttpl
das
mov
pop
shlb
jne
pushl
lcall
jb
cmp
leave
dec
add
inc
das
fcmovnu
mov
addr16
imull
mov
mov
fsubs
int3
and
cltd
push
fdivr
mov
fsubrl
xchg
pop
in
flds
nop
arpl
adc
mov
lods
xchg
dec
push
mov
dec
test
cmpsl
call
filds
sub
sub
xchg
int3
adc
pushf
outsb
sub
xor
cmp
cmp
xchg
lods
push
mov
push
and
mov
mov
mov
mov
pop
sbb
cmp
cmp
jge
mov
jne
shlb
jno
sbb
xchg
out
add
dec
jl
test
push
dec
stc
push
adc
fldt
jno
test
pushf
xor
popf
cli
cmc
cmc
mov
push
adc
rolb
mov
loop
add
xchg
xlat
arpl
adc
sti
stos
dec
sbb
jo
jmp
pushf
iret
or
jnp
mov
ss
aas
mov
pop
lea
leave
dec
sbb
arpl
data16
movsb
inc
mov
test
bound
in
ja
pop
test
or
sti
stos
popa
aas
imul
sbb
push
mov
sahf
mov
push
fidivs
nop
push
insb
sub
or
pop
and
je
cmp
lods
dec
sti
fistpll
shrb
scas
in
sbb
and
stos
pushf
xorl
std
adc
mov
loop
mov
adc
test
or
dec
or
lods
fnstenv
ljmp
call
loopne
faddp
sbb
mov
aad
adc
std
repnz
xchg
jne
dec
std
push
cmp
or
movsb
push
jge
mov
push
frstor
repnz
mov
test
mov
jg
xor
data16
push
xor
int
js
or
cmp
fisubl
mov
push
daa
lahf
push
jb
mov
filds
test
inc
pop
adcl
add
lea
and
push
and
add
clc
adc
out
mov
enter
inc
mov
inc
push
push
fldt
jb
out
popf
popf
mov
in
andl
mov
sbb
inc
dec
stos
icebp
inc
xor
lret
test
bnd
jp
repnz
scas
std
mov
leave
call
pop
loope
sub
mov
and
jno
pushf
ss
mov
icebp
xchg
mov
in
shl
clc
cmp
mov
push
test
das
jmp
xchg
jae
popa
push
push
pop
in
mov
add
mov
dec
mov
ud2
pop
mov
mov
cmp
fadd
xchg
inc
sub
xlat
sbb
repnz
das
inc
in
outsb
push
jb
mov
xor
rol
jnp
faddl
dec
arpl
push
jle
cmp
push
scas
out
sbb
xor
sti
mov
dec
pop
xchg
lods
sub
shll
sbb
lods
jmp
pop
popa
sahf
int3
cmc
dec
bnd
sub
mov
imul
aaa
add
lahf
movsl
out
rolb
or
and
cmc
jnp
outsl
imul
jl
pop
sub
insb
sti
push
adc
fdivrl
dec
outsl
lcall
addr16
sub
jae
test
aas
jns
xchg
shrb
in
push
cwtl
adc
add
cmp
and
mov
jb
sbb
adc
sub
test
add
dec
sbb
xor
xchg
pop
xlat
mov
jmp
enter
das
pop
les
imul
or
xor
pop
sub
pop
sbb
popa
ret
and
int
data16
push
mov
cmp
or
lods
nop
out
adcb
mov
out
mov
daa
sti
add
scas
jne
pop
jo
lcall
mov
adc
push
mov
and
push
insb
push
xor
jp
or
sub
frstor
outsl
inc
or
mov
add
mov
sarl
mov
call
jg
xor
es
jno
adc
loopne
mov
ds
fwait
jae
jge
das
inc
mov
movsl
popa
aas
mov
xchg
cmp
cld
rorb
mov
idivb
mov
jmp
es
rorl
aad
fcomp
add
and
push
sub
data16
cmpsl
leave
xchg
inc
call
adc
repnz
mov
inc
mov
add
in
mov
dec
aaa
les
scas
push
popa
andl
shll
aas
xchg
xor
insl
cmp
or
jle
sbb
sbb
rclb
push
xchg
cmp
std
out
push
add
decb
ljmp
pop
jmp
push
inc
xchg
scas
mov
pop
jecxz
cmc
jno
mov
pop
ds
fnstsw
filds
cwtl
adc
inc
leave
in
lahf
sar
sub
enter
je
sbb
movsl
int3
inc
xor
jge
sub
push
sbb
cmp
xchg
aam
addr16
and
into
in
aaa
push
mov
inc
test
mov
dec
stc
popf
add
repz
call
fdivrp
fsubrs
lds
lret
rcll
mul
pop
int3
test
xchg
stos
xor
imul
lret
pushl
pop
cmp
mov
dec
jmp
fldcw
dec
sub
push
ret
test
adc
mov
nop
shrl
xchg
inc
adc
cmpsb
jno
and
jecxz
lods
lock
pop
mov
stos
rdmsr
cmp
cwtl
dec
xorb
insb
adc
xchg
int
les
xchg
pushf
xchg
fadds
mov
adc
pop
cltd
sbb
cld
in
fdivrs
dec
flds
scas
jo
lods
repnz
call
push
pop
xchg
and
mov
xchg
mov
ljmp
pop
pop
and
fildl
sti
and
addr16
fdivrs
lock
mov
push
int3
sahf
push
or
xchg
adc
lods
aad
insl
lcall
jb
mov
adc
mov
sub
sahf
lcall
jecxz
pop
mov
lock
outsb
pop
and
rcr
pop
gs
sbb
out
inc
ss
jl
xor
lret
mov
sub
js
enter
mov
test
or
mov
mov
pushf
loopne
mov
mov
jmp
imul
leave
std
or
mov
sub
test
lock
negl
insl
pop
dec
xchg
dec
mov
dec
sbb
mov
xchg
imul
aaa
push
dec
mov
xor
xchg
jbe
jge
pusha
enter
inc
add
ret
sbb
push
and
sub
in
pop
fmuls
and
dec
pop
or
push
and
int
stos
outsl
and
scas
push
xchg
or
fsubr
mov
jecxz
or
jbe
and
dec
mov
imul
push
adc
popf
jmp
adc
add
mov
ljmp
incb
push
dec
mov
lock
aas
into
out
adc
hlt
test
nop
mov
or
lods
xor
sub
push
add
lcall
imul
aas
and
mov
push
mov
mov
pop
loope
das
cld
iret
pop
sbb
subb
mov
dec
push
pop
push
popa
push
cmp
fmuls
jnp
imul
inc
push
push
mov
rcrb
imul
jmp
loope
add
pop
addl
into
and
rolb
sbb
into
ret
inc
shl
add
adcb
push
add
cmp
xchg
xchg
sbb
adc
cmc
pop
int3
push
cmpsb
insb
mov
in
std
arpl
inc
mov
loope
popf
or
fs
test
fdiv
mov
jmp
push
jle
pop
sbb
dec
inc
xor
idivb
comiss
aam
call
leave
pop
pop
lret
dec
out
ja
sbb
out
cmpl
adc
lds
mov
lret
out
xor
loopne
mov
dec
xchg
cli
ret
test
shr
cmp
lods
xor
xor
lea
push
xor
mov
aas
sbb
xor
mov
lock
or
xlat
mov
les
out
clc
loopne
jo
test
movsb
jge
rcl
fmull
insb
jno
repz
pop
inc
loope
pop
loopne
or
cmpsb
int
out
jno
divl
js
scas
xor
push
push
int
arpl
in
dec
loop
or
int3
mull
icebp
test
pop
jl
jmp
vmread
les
into
xor
movsb
fwait
ds
sbb
insb
insb
and
cltd
mov
sbb
daa
fcompl
gs
jbe
std
mov
push
and
orb
jecxz
aam
or
ja
xchg
andl
fs
mov
pop
insb
sub
xor
shl
cmc
ss
push
inc
lcall
and
sbb
pop
push
pop
xchg
xchg
mov
inc
cmpsl
pop
popa
mov
xor
adc
cmpsb
sti
push
bswap
inc
stos
sub
add
scas
sbb
in
arpl
jge
mov
ror
stos
mov
test
ret
cmp
or
adcb
inc
pop
lahf
inc
xor
repz
fstps
sbb
stos
popa
xchg
ret
push
movsl
push
test
dec
ja
mov
outsb
and
add
sub
and
or
out
add
sub
loop
inc
xor
jne
xchg
mul
adc
sahf
enter
out
mov
push
shlb
fsub
jns
sti
insl
push
jle
jns
fisubs
xchg
push
ret
fwait
inc
clc
jg
inc
rcr
test
lods
call
or
or
and
test
jmp
iret
xor
push
arpl
jnp
cmp
adc
std
cmpsl
cmp
in
iret
dec
pop
mov
outsl
dec
cmp
popl
jl
inc
cmp
shll
push
repnz
fstpl
rcr
fsubrs
jp
mov
push
rcl
enter
stc
add
iret
stos
sbb
or
out
in
xor
mov
iret
popf
cmp
jns
mov
mov
cmp
nop
xor
xchg
add
aas
mov
out
inc
mov
lret
into
add
ds
mov
push
imul
icebp
fnstenv
inc
in
das
daa
push
arpl
cld
je
inc
push
sbb
mov
jne
push
in
ja
fwait
out
subl
pop
push
adc
or
pushf
out
cmp
fimull
mov
mov
add
push
test
icebp
sub
lret
or
sub
sbb
popa
xlat
mov
pop
jmp
add
in
xchg
mov
shr
arpl
jge
repnz
aam
insl
pop
sahf
roll
out
fdivr
aam
lret
in
mov
fld
daa
lds
mov
sub
cmp
fadds
arpl
enter
add
repz
dec
pop
jo
ljmp
cmc
xor
mov
std
push
sub
es
inc
fdivl
dec
ds
outsb
adc
push
pop
stc
adc
aam
jg
cmp
sarl
cmc
int
addr16
ja
and
aas
ja
sti
and
inc
xchg
test
call
push
pop
and
loopne
cmpsb
es
insl
mov
das
mov
cmc
mov
cmp
jle
out
mov
adc
mov
mov
mov
xor
inc
xchg
push
xor
loopne
and
sti
sub
push
pop
popa
scas
cmp
inc
iretw
pop
pmaxub
pushf
nop
int
xor
mov
ljmp
andl
mov
cltd
inc
iret
outsl
sub
xor
ljmp
enter
or
dec
ffreep
daa
mov
or
sahf
xor
addr16
int3
in
and
outsl
into
movsl
or
cli
movsl
fisubrl
cld
fdivrl
ficoms
dec
sbb
adc
bound
dec
xor
pop
cmp
lea
xchg
or
fldt
fdivrl
xlat
lds
sbb
or
mov
js
xor
pop
pop
sahf
push
jb
add
or
sti
xchg
mov
or
push
mov
mov
xchg
jecxz
sbb
mov
inc
mov
enter
mov
das
inc
mov
push
mov
std
addr16
push
mov
dec
leave
or
test
fisubs
push
jge
jbe
mov
lret
add
xchg
sub
imul
lret
mov
mov
rolb
cwtl
fs
dec
cld
rcrb
push
jnp
cli
inc
test
lock
aas
or
in
test
fnstcw
mov
cmpsb
adc
outsl
add
shll
jo
addb
pop
jg
and
shll
inc
pop
cli
cmp
addr16
cwtl
hlt
mov
andb
mov
push
mov
jg
or
rorl
or
dec
repz
sub
adc
xor
jns
orl
push
insl
rorb
xor
pop
in
jnp
adc
sbbl
jo
push
lods
ret
in
sub
pop
iret
push
mov
cmp
ja
iret
sti
adc
and
loope
popf
jp
adc
mov
inc
out
push
in
xchg
push
adc
enter
jb
mov
xchg
or
js
fisubs
stos
push
add
mov
inc
fwait
ror
stos
mov
mov
je
outsb
rol
hlt
adc
scas
push
dec
clc
add
notb
adc
mov
imul
je
dec
inc
and
leave
adc
addl
sbb
mov
fidivrl
loopne
and
lds
inc
bound
xchg
insb
dec
or
fstpt
stos
leave
dec
aam
dec
or
rorl
pop
dec
mov
rcll
iret
jns
and
ljmp
adc
out
jl
jnp
loop
stos
jmp
dec
mov
jp
in
pushf
sahf
je
push
mov
or
jmp
push
repnz
out
dec
stos
mov
or
push
fidivrs
je
cs
dec
lret
sbb
mov
push
ret
ss
cmpsl
jne
dec
sub
xchg
mov
aad
popa
fmuls
lods
mov
dec
test
aad
cmp
and
cld
ret
fsubrl
jb
mov
or
xor
mov
shrl
hlt
xchg
les
jne
sbb
mov
mov
xchg
mov
cmpsb
inc
js
sti
in
push
mov
or
fidivrs
or
das
loop
or
jg
pop
outsl
xchg
das
shlb
rcrl
push
fdivr
scas
dec
jb
test
add
mov
popa
cmpsb
pop
mov
adc
and
clc
or
pop
sbb
mov
or
test
ds
bound
ss
popf
js
aad
testb
mov
lea
clc
push
xor
mov
pop
stos
mov
sti
lcall
loopne
cmpsl
test
jmp
mov
and
sub
xor
lods
xchg
sub
xor
dec
jns
inc
sbb
cmp
in
shrl
cs
int
mov
pop
out
icebp
push
lds
and
dec
pop
subb
add
daa
lcall
jecxz
iret
aam
push
arpl
or
xchg
cmpsl
lret
outsb
dec
lods
pusha
add
dec
jl
xor
stos
xchg
adc
xchg
pop
jnp
js
mov
fisttpl
xchg
jg
xor
loop
in
xchg
adc
cmpl
jmp
aaa
xor
clc
bound
leave
xchg
out
das
shrl
pop
rcrb
popf
daa
push
push
data16
pop
inc
cmp
scas
fadds
xor
popf
dec
xor
ret
push
jecxz
loop
or
aaa
mov
cltd
xor
xchg
mov
mov
adc
fstpl
or
inc
outsb
lahf
add
inc
jmp
and
sti
repz
push
int3
or
cltd
xchg
mov
dec
jae
jmp
cmp
jbe
inc
and
pop
decl
std
jbe
aam
mov
cs
testl
push
out
inc
add
subb
repz
lret
fiaddl
cli
sbb
stc
push
jnp
cli
movsb
push
outsb
jp
push
dec
jns
daa
push
stc
cmp
inc
mov
out
mov
rcl
movsb
mov
sbb
add
inc
pop
data16
push
lcall
test
add
in
or
shll
cmpl
sarb
aad
das
imul
std
in
sbb
into
pushf
xor
test
js
sbb
sbb
in
xchg
fwait
push
pop
jnp
xlat
mov
lahf
jmp
loopne
push
leave
mov
addr16
int3
call
ret
xchg
add
test
mov
sarb
jl
mov
pusha
sub
jecxz
adcb
inc
std
xchg
flds
fistps
sar
push
mov
mov
ficomps
pop
in
sahf
shlb
xchg
xchg
mov
pop
cltd
shlb
dec
cmp
or
movsb
movups
daa
repz
ss
in
or
jo
mov
or
jmp
pop
or
jmp
and
push
mov
inc
jmp
call
dec
xlat
bound
mov
xor
push
fimuls
out
mov
push
sub
add
jo
arpl
loopne
pop
mov
jmp
stos
mov
movsl
iret
push
test
lods
adc
inc
hlt
and
mov
mov
or
out
sub
lahf
dec
or
pop
xchg
xchg
stos
jmp
mov
iret
mov
mov
add
pop
fs
jle
cmpsl
cs
jno
cltd
in
cwtl
and
xchg
jg
decb
gs
adcb
dec
xor
lret
sbb
insb
mov
jecxz
mov
push
push
ss
stos
stos
push
dec
stos
lret
xor
idivl
xor
cli
push
outsl
sub
call
add
pusha
adc
mov
cmp
je
adc
in
lcall
inc
pop
cmp
rolb
xchg
stc
sub
ja
out
cmp
mov
fstp
sbb
sahf
mov
cld
cmp
cmp
pop
sbb
xor
test
adc
push
call
jg
cli
mov
stc
inc
lcall
cli
lods
shrl
cli
repnz
and
jne
sti
pop
and
scas
shlb
inc
repz
adcl
je
subb
jno
enter
xor
xchg
cmp
adc
mov
shrb
push
mov
stos
jge
testb
cltd
jno
add
mov
mov
add
subb
mov
xlat
cmp
add
add
jbe
inc
xor
in
jecxz
bound
cmpsl
fistpll
bnd
test
pop
mov
adc
pop
jne
cmp
add
jb
adc
jb
dec
pop
add
repz
lods
std
or
push
sub
enter
iret
int3
cmpsl
pop
jo
sbb
das
jmp
inc
adc
sbb
lcall
mov
jns
repnz
mov
pop
imul
adc
test
push
ljmp
movsl
jle
mov
pop
mov
int3
das
sbb
stos
mov
mov
push
cltd
or
insl
movb
inc
jne
adc
pushf
push
sahf
mov
mov
xchg
sbb
sub
pop
out
dec
sti
cmp
mov
hlt
test
mov
xor
jg
hlt
mov
jl
or
lahf
sbb
les
adc
and
in
stos
dec
stos
bnd
push
pop
or
lods
loopne
mov
xchg
std
fwait
add
shll
sub
subl
pop
bound
or
pop
out
popf
and
pop
cwtl
into
pop
sbbl
sti
mov
repz
out
leave
lods
sub
pop
ds
pop
lock
addr16
jg
adc
mov
enter
fildll
adc
xchg
push
push
jg
jns
shll
inc
and
scas
sbb
add
cmp
adc
mov
push
pop
stos
push
mov
loop
pop
push
mov
aaa
int3
clc
sbbb
dec
into
and
imul
jmp
inc
add
test
dec
or
dec
mov
gs
mov
jb
xchg
mov
push
xchg
push
mov
mov
int3
inc
xor
cmp
data16
xor
jbe
and
bound
mov
out
xorb
test
push
cmpsl
jns
mov
mov
dec
sbb
mov
imul
test
or
inc
sub
xor
xor
loope
cmp
aaa
add
xor
or
stc
sbb
fisubs
into
mov
data16
addr16
mov
clc
lds
dec
loop
rcl
add
push
pop
cmpsl
ret
jno
testl
adcl
push
jo
shll
mov
pusha
flds
test
aaa
xlat
push
push
leave
movsl
inc
ja
lds
imul
aad
inc
jecxz
mov
imul
je
stos
and
xchg
cmp
push
pop
testb
loopne
addr16
pop
cli
xchg
dec
sbb
cmp
imul
sbb
cmp
aas
sbb
pushf
and
ret
lret
pop
lahf
jns
xor
push
idiv
mov
fistpl
loopne
lods
xchg
mov
outsb
jecxz
outsb
add
les
arpl
outsb
stc
pop
push
shlb
sbb
jl
mov
mov
imul
mov
out
lea
jge
dec
es
dec
ds
test
jne
inc
push
cmp
mov
int3
mov
movsb
jb
imul
adc
ficomps
repz
adc
insl
add
pop
mov
inc
mov
loop
xor
stc
mov
insb
inc
aas
push
cmp
push
mov
mov
push
cld
pop
add
xlat
sub
fnstcw
jno
insb
pop
fisttpll
sbb
xlat
mov
mov
mov
add
ljmp
daa
push
sub
xchg
xchg
popa
out
sub
jbe
push
sbb
pop
push
adc
test
sub
mov
sahf
jge
lods
rcl
cmpsl
cli
imul
inc
clc
xchg
clc
adc
shlb
xor
andl
mov
imul
nop
xchg
test
fnstcw
adc
je
shrl
mov
les
push
sub
imul
add
enter
xchg
jbe
inc
lcall
orl
loop
push
hlt
loopne
xchg
stos
mov
dec
inc
adc
int
sbb
cmp
pop
pop
test
jmp
sub
imull
data16
sub
test
clc
jbe
lahf
mov
mov
jecxz
ret
cmp
lea
movsl
pop
push
out
and
mov
lret
dec
pop
add
lret
cmpsb
mov
and
mov
dec
fstpl
popa
fmuls
xchg
xchg
mov
in
mov
mov
or
cmp
mov
add
sub
jb
xor
out
pop
mov
outsb
lcall
mov
loop
xor
jbe
xchg
jmp
ret
and
hlt
jle
leave
jmp
and
adc
push
adc
mov
fs
pop
pop
outsb
mov
js
in
xchg
shrl
nop
mov
push
movsb
xchg
loope
stos
scas
test
adc
repz
sti
movsb
xchg
fidivrl
out
incb
out
xor
push
jno
arpl
sbb
mov
addr16
lcall
pusha
push
xchg
in
adc
fmuls
movsb
fwait
or
xchg
insl
xchg
xor
stos
push
push
int
movsb
pop
mov
jle
arpl
mov
sbbb
xor
dec
and
fstps
jb
movsl
jmp
addr16
pop
test
in
sub
test
jo
jbe
pop
out
test
test
mov
add
push
lock
fwait
mov
loop
sbb
cmp
fpatan
and
jmp
cmp
insl
ror
sahf
xchg
notb
fdivrl
fstl
push
popf
push
mov
dec
outsl
push
aam
mov
jb
lret
cli
fwait
mov
pusha
arpl
call
mov
xchg
push
js
call
push
mov
sbbb
fistps
roll
leave
adc
inc
repnz
add
add
das
mov
inc
mov
push
loop
ss
add
lods
sbb
xor
hlt
dec
xchg
pop
mov
enter
push
cmp
lods
clc
andl
loopne
jp
out
outsb
ficomps
xchg
mov
xchg
cmpl
dec
mov
fcomp
jbe
cmpsb
lods
xchg
mov
push
mov
xchg
jp
push
add
xor
cmp
dec
dec
and
jne
imul
add
mov
insb
into
daa
out
aas
ja,pn
fwait
in
lar
repnz
out
cltd
pop
mov
aad
daa
call
dec
push
xchg
mov
out
add
or
into
out
adc
dec
adc
jbe
hlt
cmp
scas
in
xchg
rcrb
clc
fistpl
jecxz
xor
lahf
cmp
pop
lret
cmp
xor
sub
ret
inc
xchg
xchg
dec
insl
popf
add
and
mov
popa
dec
adc
push
pop
adc
aad
out
push
fidivs
mov
fcmovu
xchg
sub
dec
nop
fucomi
nop
adc
repnz
hlt
mov
mov
scas
sbb
popa
icebp
stc
pop
cmp
push
enter
inc
sbb
stos
fisubs
in
and
push
loopne
jo
bnd
xchg
and
mov
addr16
mov
mov
xchg
fucomip
les
mov
lcall
mov
add
ret
std
out
mov
push
jnp
mov
clc
cmpsb
and
loop
test
pop
ja
add
push
popa
aam
sbb
cmpl
xchg
jge
dec
sbb
push
xor
push
pop
pushf
inc
jmp
popf
mov
cmp
mov
mov
stos
mov
mov
into
jno
fcmovnb
out
imul
inc
scas
sub
les
mov
sub
ret
ffreep
add
and
aad
xor
sbb
aam
mov
pop
enter
or
jge
popa
pop
and
push
popf
cmp
add
push
xchg
add
sti
icebp
mov
sbb
or
out
mov
into
and
mov
test
scas
cmp
push
inc
mov
xchg
cwtl
mov
xor
fwait
pop
mov
mov
iret
sti
jge
and
sub
push
and
mov
dec
mov
inc
fmul
popf
push
mov
xchg
sar
ret
push
pop
jbe
testb
xor
imul
jle
xlat
sub
sahf
cld
jne
test
cltd
ret
inc
mov
sub
daa
mov
mov
clc
jp
cmp
lods
das
aaa
mov
add
movsb
fwait
rcrb
je
leave
mov
pop
and
mov
pop
push
pop
jg
mov
mov
dec
sarl
xchg
sbb
jnp
pop
out
fmulp
mov
jbe
push
call
dec
inc
adc
mov
xlat
or
and
cmp
cmp
mov
pop
mov
enter
js
stos
mov
ss
inc
int
cmpsb
xor
out
out
xor
sbb
loope
mov
lea
cwtl
cmc
in
cmp
das
cmp
sub
jnp
pop
xlat
pop
cmp
jne
cltd
xor
into
ljmp
jae
aaa
je
dec
dec
xchg
imul
lcall
push
pop
sbb
add
cmp
cmpsl
lea
inc
stc
in
ret
decb
filds
lret
popa
push
mov
sbb
dec
fstpt
and
js
xchg
or
dec
and
jle
xor
push
mull
enter
stos
jb
xlat
mov
xchg
popa
leave
call
into
imul
sbb
and
mov
daa
aaa
call
or
jge
lds
mov
jg
sub
lea
mov
adc
mov
cmpsb
add
orb
repz
and
pop
out
sbb
pop
nop
pop
psubusb
div
frstor
inc
add
push
ror
xor
mov
mov
mull
xchg
sarl
fdivs
lods
fstpt
icebp
mov
xorb
popa
shrb
dec
cwtl
jae
sahf
adc
out
add
iret
frstor
sbb
mov
push
mov
push
cmp
xor
sub
lahf
nop
add
dec
push
xor
pop
xor
outsb
test
xor
add
mov
push
push
daa
mov
lods
adc
mov
pop
sub
pusha
clc
jne
adc
add
test
sbb
cmp
dec
sub
push
mov
mov
test
cmpsl
sbb
fdivs
jnp
sub
clc
pop
in
dec
dec
inc
cmpsl
idivl
in
add
jle
mov
cwtl
pop
test
pop
iret
mov
mov
cltd
mov
dec
xor
sbb
mov
int
in
mov
test
add
pop
das
movsb
pop
inc
push
sbb
decb
xchg
jge
popf
xchg
sub
inc
and
sub
clc
addr16
mov
cmovns
js
mov
sub
mov
xor
sub
jp
and
sbb
xchg
push
int3
mov
sahf
std
mov
xchg
adc
outsb
repnz
xchg
jle
cmpsl
lods
lods
fists
dec
ret
popf
nop
ror
or
push
cmp
add
in
sub
add
jns
out
pushf
mov
lds
mov
xchg
popf
adc
test
push
lea
stos
and
xor
ss
out
fsubrl
mov
add
out
sarb
inc
push
aad
jecxz
loope
pop
lret
aam
cmpsl
in
mov
lea
mov
std
ljmp
mov
negl
popa
movl
xchg
or
inc
push
xor
pop
insl
outsb
xor
jne
sbb
adc
loope
imul
mov
fnstenv
ja
rcll
jb
leave
inc
hlt
push
movsb
dec
sub
sbb
arpl
dec
xchg
mov
in
mov
fldt
push
pop
push
fcoml
mov
push
adc
hlt
mov
push
sbb
mov
mov
or
adc
mov
adc
push
xorl
loope
xchg
mull
jge
sub
outsb
roll
inc
push
jecxz
lahf
je
int
inc
popf
pop
add
cwtl
filds
sbb
imul
sub
dec
adc
jb
jge
test
out
out
dec
inc
push
std
outsl
ljmp
mov
ds
cmp
popf
inc
leave
mov
dec
daa
mov
jp
sbb
jne
lea
pop
cmp
cmpsb
stos
adc
xor
outsb
cmp
imulb
jmp
mov
stos
lods
popa
jbe
mov
dec
insb
pop
and
push
andl
scas
jb
lret
leave
ficompl
jle
cmpb
adc
pop
aad
js
insb
cmp
cmp
aaa
dec
test
scas
fistpl
pop
push
and
mov
scas
mov
je
xor
dec
xor
adc
cwtl
into
les
cwtl
cltd
test
fs
sbb
loope
jb
jmp
jnp
xor
fisubrs
mov
lods
jl
cmp
lods
repz
mov
cwtl
sbb
dec
mov
movsl
les
movsb
xchg
lods
and
mov
inc
sbb
cmp
ss
imulb
cwtl
sub
movsb
cmp
xchg
cli
scas
fdivr
push
push
and
xchg
in
inc
lcall
scas
in
mov
or
fistpll
loope
dec
dec
fisubl
mov
bound
movsl
pop
mov
lds
rcr
lods
lahf
leave
mov
test
out
lds
push
mov
adc
jbe
or
jge
data16
pop
fcomi
xor
jg
popa
outsl
out
ljmp
inc
sbb
aam
shrb
sbb
pop
mov
dec
inc
sub
aaa
mov
or
jb
pop
xlat
xchg
ss
push
pop
call
arpl
ret
daa
pop
inc
lret
cmp
outsl
pop
out
xorl
pop
xchg
out
fnstenv
loope
mov
xchg
test
imul
cli
add
test
adc
adc
mov
inc
pop
xchg
push
int
in
insb
mov
std
sub
cmp
mov
pop
jle
ror
aas
lcall
mov
ret
mov
mov
inc
mov
xchg
and
xor
mov
inc
mov
dec
es
cmc
jns
mov
jnp
dec
or
dec
lea
push
int
or
ljmp
push
sub
cmc
out
jnp
and
popa
push
rcr
psubw
xor
dec
or
inc
mov
aad
dec
cli
and
xor
jmp
lret
out
movsb
leave
jnp
jle
xchg
vmread
mov
sub
cmp
call
or
dec
adc
out
cli
pop
je
js
push
into
nop
imul
jns
jp
jo
notb
push
js
shlb
rcr
push
loope
js
adc
mov
xchg
jg,pn
push
je
or
jno
out
fisttps
sub
xchg
cmc
mov
test
jge
adc
xchg
repz
pop
xchg
imul
mov
std
xchg
xchg
lret
or
adc
dec
in
fcomps
bound
daa
mov
int
cmpsl
fwait
scas
push
aas
xor
xchg
mov
cmpb
adc
mov
test
push
mov
mov
enter
jge
in
pusha
sbb
negb
sbbb
imul
sub
out
fptan
jg
lahf
pushf
xchg
push
cmp
adc
mov
and
fadd
test
scas
xchg
cmpsl
mov
sahf
cmp
push
or
sbb
fldl
jl
add
xchg
sbb
loop
je
mov
inc
dec
push
in
cmp
sahf
jb
stos
mov
jbe
xor
mov
xchg
into
or
lea
loop
push
pop
jecxz
add
test
xchg
out
push
jae
pop
inc
mov
cltd
jne
cmp
cs
fcmovu
je
rorb
or
pop
pop
rcrb
and
push
imul
pop
push
pop
mov
mov
mov
mov
movb
arpl
dec
push
lods
jnp
lea
les
pop
xor
push
aam
andb
sub
mov
push
cmpsb
in
inc
aaa
push
cld
lea
std
cmp
pop
dec
std
je
les
ja
sbb
das
mov
in
lahf
jp
adc
mov
cld
ljmp
js
dec
leave
xlat
mov
repz
mov
add
bnd
andb
jo
xchg
iret
push
inc
repz
ret
imul
xor
jle
insb
shrb
dec
push
mov
adc
leave
insl
int
lret
push
xor
repz
or
jle
into
push
arpl
lods
mov
in
sub
out
mov
cmpb
inc
rcr
popl
push
xchg
fldt
push
mov
mov
or
stos
adc
int3
std
arpl
das
fdivp
movsb
xor
xchg
mov
jg
mov
fistl
imul
loopne
out
mov
arpl
nop
push
popf
jo
js
sahf
adc
movsb
pop
popf
and
popf
mov
add
or
or
push
adc
icebp
cmc
in
imul
out
or
inc
lock
inc
inc
cmpsl
pop
aam
adc
adc
xchg
fimuls
mov
sbb
inc
out
xor
and
push
popf
jns
dec
cmp
jge
mov
imul
daa
mov
out
std
adc
fadd
or
imul
add
sbb
mov
jbe
fstpl
jnp
fadd
jno
adc
jo
push
std
mov
stos
adc
cmp
mov
push
fcomi
inc
mov
pop
xor
cli
out
incb
push
in
lock
out
cltd
test
jb
add
jb
pop
ss
and
lret
repnz
mov
icebp
lds
xchg
cmp
xor
pop
enter
push
adc
jns
sub
xor
jmp
addb
fstpt
ja
xchg
icebp
xor
xchg
mov
push
xchg
mov
aaa
out
lods
push
xchg
pop
sub
mov
xchg
and
ds
cli
jae
sbb
movups
lret
adc
add
jbe
andb
mov
mov
mov
pop
mov
leave
call
fdivrl
add
rcrl
pop
cmp
dec
push
lods
les
xchg
cli
and
and
test
enter
mov
je
stc
add
ficomps
sbb
sbb
sbb
insl
xor
sub
push
cmp
mov
in
lods
fnsave
adc
xchg
js
ja
ss
imul
std
in
outsl
subl
cmp
and
js
dec
cmp
jg
mov
cmp
pop
jle
std
dec
aaa
popa
shl
shl
sbb
test
mov
and
cmp
pop
add
cmp
lds
insb
sub
push
mov
dec
jb
ljmp
sub
int
es
xlat
insb
inc
repnz
andl
sti
popf
jge
inc
outsl
shrb
out
and
aas
insb
test
pop
insb
cmpsl
mov
outsb
cmp
add
mov
xchg
stc
mov
les
aam
lea
mov
cmp
lcall
jge
mov
test
pushf
or
iret
gs
jae
add
and
mov
cwtl
pushl
mov
cmpsl
sbb
fwait
data16
pop
andl
fildll
pusha
jnp
dec
sbb
push
ja
sub
dec
xlat
cmc
mov
adc
or
int3
mov
outsb
es
add
mov
mov
test
loope
imul
ss
out
fwait
mov
add
repnz
les
cmp
faddp
or
dec
push
loop
add
es
cmp
bound
std
pop
mov
xchg
aaa
adc
fisttpl
pop
arpl
out
popf
xchg
jge
js
adc
xor
lds
pushf
inc
pop
es
xor
pop
lods
adc
leave
mov
notb
sub
and
adc
push
sarl
imul
pop
pop
xchg
mov
test
loope
push
mov
add
sahf
xchg
and
push
sbb
das
add
lret
inc
outsl
repnz
repnz
xor
xor
or
xchg
or
data16
mov
test
xor
adc
loope
mov
outsb
stc
jb
lret
mov
pop
cmpsl
aad
sub
jae
push
hlt
adc
cltd
or
aad
jbe
mov
pop
xchg
out
inc
in
ficompl
xor
lea
rcrb
adc
loopne
lahf
mov
adc
imul
push
inc
pusha
mov
xchg
fisttpll
mov
ljmp
addb
les
je
mov
pop
add
movsl
insl
push
cmp
loop
fdivp
dec
pushf
std
add
jecxz
xor
and
fdiv
dec
cwtl
jno
xchg
imul
or
jg
xchg
clc
icebp
mov
dec
dec
repnz
loop
mov
movsb
dec
jp
push
push
mov
sbb
pop
repz
or
in
jns
xor
push
aad
in
sarb
mov
jecxz
jge
aas
hlt
pop
shlb
sarb
lock
pop
jnp
sbb
shll
push
outsl
test
in
cmpsl
call
inc
jbe
add
push
jae
hlt
std
sbb
gs
mov
mov
addr16
lcall
test
sbb
pop
fisttps
mov
call
movsb
outsb
push
insl
and
xchg
fcompl
ja
in
sar
repnz
push
inc
call
pop
ret
dec
push
mov
imul
xor
mov
and
movsb
cmpsb
mov
mov
in
stc
bound
fstl
sub
shrl
push
mov
shlb
jecxz
or
xchg
daa
xchg
paddq
mov
mov
mov
outsl
arpl
ss
loopne
pop
popf
mov
imul
xor
mov
fwait
cmp
fcomi
jnp
jge
sub
jo
jmp
fwait
dec
xchg
addr16
push
mov
adc
iret
xor
lock
cmp
in
mov
scas
add
test
xchg
fisttpl
shl
adc
mov
lahf
jne
push
jmp
ret
cmp
jno
mov
jno
sahf
mov
sbb
xchg
mov
int3
push
or
lods
jae
mov
movsl
add
push
insb
test
insl
add
lds
jge
fmulp
inc
subb
lahf
dec
jno,pt
pop
lea
push
lock
cmp
scas
cmp
sbb
inc
push
addr16
scas
pop
in
test
fstps
jp
aaa
sbb
fdivs
dec
ja
dec
sub
jecxz
mull
pop
lret
pop
inc
sub
shll
adc
fwait
popf
xor
cwtl
jbe
push
sub
insb
push
push
lods
cmpsl
out
ret
andb
adc
xchg
jnp
pop
inc
mov
and
sbb
jne
sub
call
sahf
jbe
push
rorl
movsl
mov
sbbb
repz
xor
mov
addr16
inc
pop
cmp
es
xchg
dec
and
push
adcl
inc
mov
add
in
jl
lds
mov
test
mov
inc
adc
inc
jnp
inc
pop
pop
shlb
lds
inc
cmpsb
dec
lret
or
cwtl
jbe
add
aaa
mov
std
cld
adc
lock
movsl
repz
out
rolb
or
push
out
sarb
dec
popf
push
cld
repnz
aam
rcll
stos
aaa
pushf
push
jecxz
inc
pop
mov
enter
push
xchg
repz
dec
xchg
shrl
mov
ficomps
mov
bound
sub
push
and
dec
sti
or
and
dec
hlt
lock
in
pop
jp
pop
push
negl
dec
pop
xchg
inc
pop
ret
cmp
mov
fdivrp
pushf
adc
lock
jl
mov
lock
and
xchg
push
std
or
cmpsl
notl
idiv
jb
insl
adc
jae
jns
jns
test
idivl
mov
jae
xchg
movsl
fldenv
xor
mov
daa
jno
dec
inc
loop
popf
mov
cmp
dec
cmovl
mov
dec
out
sbb
xor
jno
and
jmp
jge
lret
lods
push
jp
sar
test
sbb
icebp
ja
pop
imulb
in
in
dec
pop
push
mov
lods
add
mov
adc
mov
or
pop
stos
data16
xchg
cwtl
aam
inc
add
mov
pop
testl
mov
int
out
sbb
movsb
loopne
roll
lock
movsb
sbbl
pop
pop
imul
push
test
inc
rolb
mov
cmp
inc
shl
sarl
ret
cld
out
adc
mov
cmp
cltd
in
jl
aad
fs
or
test
sbb
jae
popf
xor
pop
pop
mov
xchg
popa
insl
mov
test
adc
aaa
enter
nop
add
and
mov
sarl
loope
add
mov
push
movsb
or
or
je
xchg
mov
wrmsr
mov
out
sti
mov
imul
andl
xor
out
pop
insb
or
mov
xchg
jae
jecxz
fs
add
or
push
pop
jbe
xlat
int
das
inc
cmpsl
push
orb
inc
jns
push
push
pop
data16
xor
insb
add
xor
sbb
mov
pop
sbb
ja
mov
pop
push
imulb
ret
and
adc
stos
and
sub
jns
and
clc
pop
movsb
out
and
cmpl
or
push
jmp
jae
adc
xchg
nop
add
xor
xchg
fs
and
fnstsw
mov
xor
push
lahf
fisttps
cwtl
roll
mov
dec
popf
mov
daa
mov
les
pop
lods
mov
push
loop
push
mov
pop
push
ljmp
into
sti
jmp
mov
ret
sbb
cmc
subb
cmpsb
push
xchg
pop
jecxz
push
mov
mov
sbb
push
mov
mov
dec
and
xor
mov
push
std
push
jae
aas
arpl
jb
sbb
jmp
test
popa
push
push
sahf
or
adc
push
fstps
or
pop
vprotq
mov
sbb
cmp
push
push
jbe
sub
jns
nop
call
clc
push
imul
loope
inc
xor
stc
pop
add
cmpsl
mov
dec
mov
mov
aad
mov
xchg
mov
scas
and
sbb
or
inc
and
mov
jle
mov
dec
dec
in
gs
inc
sbb
push
add
adc
sbb
test
cmp
repz
push
aad
jp
ret
stos
mov
inc
lock
pop
sub
cmp
push
out
adcb
mov
cmp
dec
sbb
je
repnz
mov
pop
test
inc
xor
fisubl
outsb
and
sahf
aas
sub
bound
mov
test
scas
add
fildll
mov
jb
pop
ljmp
mov
xchg
sti
imul
mov
lahf
jnp
sbb
jbe
jmp
inc
das
adc
hlt
shr
loop
ret
cmp
mov
xlat
xor
mov
in
jmp
ja
loopne
clc
mov
out
pushf
dec
jns
mov
add
jp
fwait
dec
mov
data16
divb
test
sarb
in
popa
sarl
add
sbb
sub
shrl
outsb
dec
add
aad
cld
sbb
out
sub
lahf
bound
outsb
xchg
sbb
fimull
inc
mov
int
add
and
inc
gs
push
cmp
pop
fimuls
mov
fadds
mov
xchg
dec
mov
cltd
popf
cmp
pop
push
leave
push
jp
inc
fimull
sub
rolb
ret
add
inc
fcomps
add
aam
fcomps
mov
lods
cmp
lahf
jnp
sub
xchg
pusha
dec
roll
cli
ljmpw
push
cmpsb
cmpb
push
insl
pop
sarl
push
adc
mov
push
add
test
cmpsl
hlt
into
dec
sbb
xor
fstl
adc
or
sub
std
scas
lcall
add
xchg
mov
adc
loop
sbb
mov
mov
push
out
clc
inc
scas
testl
cli
jno
pop
mov
xlat
inc
or
inc
andps
cli
fdivs
xchg
dec
sub
or
out
inc
das
test
or
xchg
xor
xor
movsb
mov
std
sub
test
or
sbb
test
rcll
imul
shlb
cli
je
je,pt
in
test
call
in
pop
cmp
push
iret
xchg
jmp
xor
test
push
sub
lds
sar
hlt
cmp
dec
ljmp
inc
mov
sbb
inc
and
xchg
ret
mov
movsl
out
sub
insl
or
and
adc
sbb
jle
mov
jecxz
inc
loopne
sub
dec
inc
inc
js
cmpl
dec
int3
adc
push
rclb
push
in
cwtl
lods
lahf
gs
imul
jl
pop
inc
jns
popa
sub
inc
cltd
test
insl
push
add
insl
imul
sbb
clc
mov
adc
scas
push
push
mov
outsb
jne
out
pop
fdivs
fnsave
inc
aas
cld
cmp
jnp
jnp
popa
push
std
mov
push
adc
push
icebp
sbb
daa
pop
shrb
adc
lcall
mov
cmpsb
fxch
in
sbb
pop
out
inc
mov
shlb
lcall
scas
adc
adc
ss
xchg
call
and
jne
aam
ja
add
ljmp
fldlg2
ss
mov
aad
and
adc
frstor
test
cmp
orb
imul
pop
orb
das
arpl
loopne
xor
xchg
or
cmp
sets
adc
jge
repnz
mov
dec
test
in
popf
sub
xor
inc
xchg
rorl
out
or
rolb
mov
sub
mov
loopne,pn
inc
pushf
scas
mov
int3
inc
aas
std
loopne
and
pop
stos
iret
sbb
adc
adc
pop
jno
mov
push
dec
adc
mov
jno
ret
mov
test
cmp
pusha
jmp
mov
mov
dec
fisubrl
mov
mov
push
lsl
inc
fwait
pop
and
outsb
push
sbb
cld
pop
cltd
fsts
addr16
test
popa
mov
jae
test
or
fadd
loopne
and
rclb
jmp
adc
loope
jl
dec
mov
mov
dec
inc
mov
insb
dec
xchg
xor
das
inc
sbb
mov
pop
mov
aad
push
dec
mov
mov
jbe
mov
mov
cltd
inc
punpckldq
push
ficoml
pop
mov
jp
sahf
sarb
sbb
outsb
push
clc
dec
ljmp
fsubrl
jg
xchg
pop
int3
push
push
je
xchg
mov
mov
inc
sub
stos
jo
cs
aas
sub
je
jno
mov
push
dec
xchg
pusha
mov
push
push
pop
mov
xlat
loope
int3
inc
lret
mov
popa
mov
jb
int
jp
lock
insb
fldt
lods
or
nop
adc
pop
mov
sub
in
mov
test
xchg
jp
fdivl
sub
ja
out
push
xchg
jecxz
xchg
xchg
cmp
idivl
mov
add
mov
jmp
jo
je
dec
inc
push
test
rolb
jmp
cmp
sbb
ss
mov
or
cld
clc
pop
lret
loopne
aaa
lods
clc
adc
test
push
pop
xchg
dec
aaa
rorl
les
decb
out
leave
test
jecxz
mov
mov
mov
repz
or
mov
mov
inc
sub
or
scas
pinsrw
in
in
js
in
fsubs
out
dec
pop
call
les
movsb
arpl
popa
xchg
cs
mov
mov
aaa
es
int
testb
jne
mov
enter
ffreep
mov
in
cs
and
sarl
sbb
loop
scas
mov
popa
mov
cli
pop
daa
sub
subl
mov
out
data16
dec
xor
mov
inc
pushf
or
pop
and
mov
or
add
aas
sahf
pop
leave
inc
arpl
xchg
jno
inc
mov
add
imulb
push
xchg
cltd
xor
gs
xor
mov
pop
lods
pushl
mov
data16
or
or
movsb
sbb
mov
aas
cmpsl
pusha
dec
or
gs
gs
movups
and
repz
jbe
aas
aam
inc
and
pop
stos
std
jge
mov
cmp
dec
cmpb
rcrl
mov
cwtl
rorl
dec
ret
and
push
jns
push
insb
mov
clc
pop
cmp
or
jae
int3
jne
and
sub
js
push
inc
aad
nop
mov
shll
push
push
and
daa
out
sbb
out
jp
dec
subb
or
sub
out
pushf
mov
cli
fidivs
clc
sti
xlat
notb
roll
cmp
adc
cli
or
jae
cmp
fisubrs
or
adc
stos
in
mov
lahf
pusha
xlat
push
stc
pop
frstor
jo
in
test
inc
ja
push
push
fs
inc
sub
arpl
sbb
stc
push
adc
rep
jg
in
inc
sbb
or
stc
data16
sbb
movsl
in
inc
mov
cwtl
cmp
rcll
or
mov
pop
pop
cmpsb
test
jns
pushf
add
roll
push
jns
jbe
jae
js
push
mov
jle
push
jg
pop
mov
inc
ss
push
sub
mov
or
cwtl
jnp
inc
jl
sarl
outsl
icebp
mov
stos
sbb
mov
add
aaa
fstps
jb
mov
fs
test
ret
insl
push
mov
jbe
mov
lahf
cmp
imul
pop
idivb
mov
sbb
stc
fistpl
sbbb
push
sub
cmpsb
dec
mov
or
idivb
pop
push
dec
push
movsb
and
jnp
mov
add
inc
mov
clc
stc
xchg
test
std
and
fmuls
inc
fcoms
mov
mov
mov
insb
cmp
or
out
sub
cld
aam
pop
pop
sbb
repnz
stos
in
lods
testl
out
test
pusha
xchg
fsubs
out
aam
cmp
mov
dec
adc
push
fsubrl
fcoml
and
lret
shr
lds
out
adc
cmp
or
add
adc
sbb
test
out
sbb
lea
adc
out
lods
pushf
jnp
jo
jmp
mov
call
int
test
dec
and
sbb
mov
fmull
push
gs
cmp
jecxz
pop
movsl
jecxz
and
shll
push
sub
enter
jecxz
sbb
adc
test
mov
int3
sub
add
and
test
lods
jno
or
push
jno
lods
xorl
and
sub
sub
or
mov
mul
mov
mov
or
mov
cmpsl
sub
adc
ja
mov
adc
pop
outsb
andl
add
jmp
sub
ficoms
test
push
ret
std
rcr
jmp
fsub
and
mov
ret
push
add
ljmp
cmp
movsb
dec
pop
aad
int
mov
pop
std
sub
jnp
pop
dec
sub
movsl
pushf
pop
dec
pop
in
push
aaa
add
das
xchg
bound
dec
cmp
in
sbb
imul
ja
out
orb
sbb
add
xor
js
mov
add
sub
mov
add
xchg
push
roll
repnz
fs
and
aaa
incl
sub
mov
mov
jns
loope
sahf
ja
imul
pop
popf
jmp
jae
xlat
ds
fdiv
mov
xor
and
mov
cmp
sub
rolb
push
push
arpl
js
mov
dec
lahf
sub
in
sbb
pop
scas
sub
push
mov
push
cmpsl
xchg
in
lods
inc
jmp
out
mov
pop
inc
cmpsl
xor
iret
mov
jns
push
cmp
mov
sub
incl
add
cmp
jbe
jo
shrl
mov
fistpll
out
lahf
andnps
aad
cmp
jb
out
je
aaa
cs
cmp
cmp
test
push
pop
aam
mov
jge
sbbl
fnstsw
les
fildl
in
test
cmp
add
push
mov
inc
fnstcw
jbe
clc
lods
cmp
add
imul
shlb
andl
push
rorb
inc
sub
jne
xchg
jge
xor
fxtract
adc
adc
jae
fs
jns
mov
stc
imul
daa
ljmp
sbb
mov
cmc
inc
lcall
mov
pop
add
mov
pop
popa
mov
es
xchg
shr
fcmovnb
rcll
xchg
loope
xchg
and
and
jle
adc
popa
lods
std
fs
imul
pop
cld
sahf
in
pushf
and
adc
movsb
xchg
xchg
lahf
testl
rcr
lea
sbb
or
mov
mov
push
shr
jno
lods
cli
pop
cmpsl
mov
aaa
leave
gs
xchg
sbb
flds
rcr
outsb
push
inc
ret
movsb
xchg
jbe
sub
pxor
cwtl
sar
shlb
pop
insl
sub
jp
cmp
imul
ja
push
pop
cmp
outsl
sbb
jge
dec
push
mov
jne
out
lds
or
aam
add
ljmp
loope
lahf
pop
fucom
pop
inc
lahf
pushf
ss
in
pop
into
push
dec
jg
sub
and
sub
xchg
out
jge
in
dec
dec
xchg
imul
mov
pop
data16
imul
cmp
jl
in
outsl
pop
lock
repz
rep
and
inc
and
cwtl
xchg
cmpsl
adc
rorb
pop
rcr
je
push
test
loop
imul
xchg
push
mov
mov
cld
dec
data16
mov
cmpsb
leave
imul
xchg
inc
lret
add
adc
jo
icebp
std
inc
lahf
sbb
sub
test
stc
enter
push
mov
cmp
push
test
mov
shrb
scas
cmp
sarl
add
cmpsl
and
add
ret
stc
lret
icebp
test
or
arpl
or
inc
data16
jo
icebp
jns
add
push
pop
insb
pop
ja
adc
out
cmc
or
scas
in
mov
sub
push
movsb
popa
addr16
mov
push
bnd
aas
pop
repnz
and
sub
cmp
shl
out
imul
cmpsl
inc
ret
dec
cltd
inc
pop
dec
mov
dec
adc
rcrl
and
mov
xchg
sbb
pop
add
or
outsl
fstps
mov
outsb
pop
ljmp
or
mov
pop
xor
ret
fimuls
in
mov
sub
xchg
dec
ret
sbb
sub
nop
mov
rorb
into
std
les
out
and
mov
out
imulb
jmp
mov
lods
mov
push
jecxz,pt
stc
out
test
popf
cmp
or
sahf
jecxz
das
fildll
sbb
jo
verr
jo,pt
fdivl
in
decl
inc
inc
mov
addr16
or
cmpsb
popf
gs
out
jno
in
mov
sub
mov
push
pop
pop
jno
jb
cmp
pop
pusha
lret
test
sbb
test
hlt
sbb
adc
rolb
scas
ret
pop
rcl
push
gs
orb
into
push
cmp
jae
shll
mov
pop
gs
or
sub
push
sub
pop
mov
ja
sahf
jmp
mov
dec
rorb
dec
outsb
adc
adc
std
push
fnsave
jne
pop
adc
dec
and
jae
inc
push
cmp
enter
iret
mov
push
inc
shll
mov
repz
lahf
adc
in
out
push
fdivl
dec
fcmove
cs
push
iret
loopne
cli
inc
jae
sahf
cli
cltd
inc
bound
mov
aas
jbe
push
pop
lods
mov
loope
cmp
xchg
addb
insb
cmc
int
adc
jns
andb
daa
mov
cmp
sti
aas
push
pop
mov
iret
lea
cmp
sbb
xchg
mov
jmp
xchg
les
ret
rclb
jg
dec
fsts
shlb
rorl
pop
xchg
fadd
xchg
push
pop
lds
push
add
lea
ss
push
xchg
addr16
dec
or
and
or
fisubrs
jmp
shll
push
testb
fldl
inc
jns
add
mov
sar
imul
mov
lret
insb
jae
dec
lock
push
fcomip
inc
and
in
mov
or
popa
push
cvtpi2ps
flds
int3
cld
and
into
pop
in
cmpsb
outsb
cmpsb
push
dec
sub
adc
int
push
rclb
cld
inc
or
mov
sarl
movsl
xor
mov
mov
jae
into
adcb
and
cltd
orb
daa
cmp
push
mov
and
adc
mov
push
add
mov
and
je
sub
cmp
jo
xchg
xchg
xor
std
cwtl
pop
push
add
cmc
dec
sbb
jle
jno
add
loop
fsts
scas
xchg
lcall
adc
xchg
xor
shrl
push
fdivrs
fsubl
jl
push
daa
sub
jmp
pop
in
dec
out
sti
movsb
push
cmp
sbb
out
push
in
cld
push
mov
roll
pop
adc
xor
xchg
inc
testl
and
orl
sbb
adc
sti
ret
lret
inc
pop
sbbl
add
into
xchg
or
push
nop
jns
push
rcr
push
dec
lea
mov
cmp
inc
adc
xor
inc
inc
mov
sbbl
xchg
fsubl
insb
xchg
push
shll
and
and
jecxz
daa
lea
popa
pop
mov
addr16
cmp
pop
mov
pusha
pop
pop
sti
hlt
mov
mov
sahf
fisubrs
daa
or
out
and
xchg
dec
aam
cmc
sbb
push
xor
mov
mov
cmpsl
clc
mov
scas
js
xor
xlat
xor
mov
sti
sub
into
cmpsl
or
imul
dec
sbb
out
dec
sbb
jns
cmc
and
nop
clc
aad
sbb
in
or
jle
clc
icebp
arpl
lret
scas
mov
and
std
lods
mov
shlb
xor
rorl
cmp
jl
addr16
sbb
cld
orl
cwtl
out
xorb
sbb
cmp
movsl
mov
mov
je
mov
xor
sub
rorl
sbb
inc
and
dec
test
subl
mov
das
lret
stc
adc
cltd
jge
jp
stc
pop
mov
fwait
jge
sub
dec
jecxz
int
ds
mov
test
mov
into
mov
nop
cmp
sbb
movsl
sub
loope
shll
mov
fidivs
dec
push
out
call
shll
in
movsl
add
addr16
mov
cmpsl
mov
fsubrp
dec
cmpsb
and
aas
mov
jo
adc
sub
jne
adc
call
push
mov
mov
cs
cli
jle
jecxz
pop
bound
cmpsl
cmpl
cwtl
hlt
adc
xlat
aam
fisttpl
mov
sar
xor
xchg
idiv
inc
xchg
and
cmp
lcall
add
push
mov
lock
lret
fdivrs
aad
xor
xor
cltd
pop
test
ret
out
ror
add
scas
mov
dec
fdivl
dec
mov
and
fiaddl
xchg
mov
aas
pop
or
jp
and
fmuls
xor
leave
push
in
push
adcl
and
cmc
sub
call
out
adc
pop
loop
xlat
clc
push
sti
mov
cwtl
movsb
ficomps
aam
cmpl
fidivrl
add
in
mov
xor
sbb
imul
dec
movsl
fstpt
fcoms
sub
addl
jns
movsl
cmpsl
xchg
mov
add
pop
push
mov
inc
fstpt
rorl
cmp
or
cli
cmp
push
mov
dec
mulb
pushf
dec
cmc
fldcw
jae
cld
cmp
lcall
fwait
cmpsl
aad
jl
fsubrl
push
pushf
stos
jecxz
fs
sub
loop
mov
mov
pop
pop
adc
or
and
jnp
test
mov
aas
xor
jnp
xor
xchg
in
xchg
jl
dec
sub
sub
cltd
mov
push
or
repnz
jge
sarb
jnp
das
mov
jle
lods
adc
subl
enter
inc
mov
mov
dec
ja
nop
xchg
xchg
adc
sbb
cld
add
inc
dec
cmpsl
jecxz
lret
and
mov
outsb
test
jp
adc
or
fsubl
pop
add
ds
fildl
jge
daa
notb
jl
inc
aas
adc
and
fwait
in
addb
or
xor
repnz
mov
shrl
dec
js
or
repz
push
push
jno
imul
cmpsb
clc
lret
lcall
test
pop
out
mov
aas
add
pop
jge
add
ss
jmp
xchg
movsb
shlb
loopne
sub
mov
ss
sub
and
add
test
jecxz
jne
add
mov
into
or
aaa
pop
xchg
fistps
orb
mov
pop
jb
repnz
dec
add
pusha
push
ds
mov
in
andl
adc
xor
insb
rcrl
lods
xchg
cltd
sarl
add
out
into
jecxz
or
mov
lret
movsb
add
stc
mov
movsb
cmp
cmp
movsb
xchg
pop
mov
mov
addr16
fst
lock
mov
icebp
arpl
mov
push
mov
inc
cwtl
lods
and
xchg
sub
roll
dec
jae
mov
loope
push
mov
and
pop
ss
inc
icebp
fwait
in
pop
arpl
popa
fsub
sub
push
pop
adc
xchg
sbb
add
xchg
sar
inc
jnp
xlat
add
xor
push
addr16
fstpt
outsl
std
inc
dec
push
dec
inc
or
sub
stc
xchg
out
mov
lock
aam
dec
sbb
xchg
sbb
call
lea
clc
fs
fdivrl
and
add
sub
mov
xor
ds
sbb
mov
mov
cmp
cmp
inc
fimull
out
les
jmp
pop
scas
ljmp
cmp
fldcw
mov
mov
and
sub
jg
pop
aam
mov
jno
xor
or
divl
pop
js
sub
test
loop
xchg
mov
ljmp
sbb
mov
stos
sbb
sahf
lds
out
xchg
ret
cmp
or
push
mov
movsl
adc
fsubl
cmp
pop
stos
fidivrs
fmuls
xchg
loop
iret
inc
stc
gs
cwtl
sub
sbb
lcall
or
sbb
mov
mov
push
hlt
mov
movsb
inc
loope
jno
addr16
mov
loop
xor
inc
in
pushf
lods
sbb
test
push
xor
push
xchg
ljmp
ret
dec
stc
mov
jnp
adc
pop
push
test
rolb
add
cmp
int3
push
xchg
in
inc
insb
jp
outsl
mov
dec
int
pop
dec
gs
loope
mov
lods
push
dec
lods
add
fwait
dec
mov
mov
sub
push
push
imul
incb
jnp
adc
push
pushf
add
scas
subb
hlt
push
jg
pop
jns
mov
mov
dec
addl
add
call
mov
rclb
mov
hlt
or
das
or
push
sahf
xorb
add
scas
push
cmpsl
daa
movl
popa
decl
mov
cld
pop
jmp
popf
fwait
lods
out
cmp
or
cmc
loope
sub
leave
xlat
or
and
scas
add
rol
xor
test
mov
mov
pusha
push
mov
stos
ret
addl
outsb
pushf
mov
pusha
idiv
jae
scas
aas
cmc
es
mov
xchg
lahf
rcll
pop
mov
push
sbb
enter
out
in
xchg
push
arpl
cmp
inc
in
lret
xchg
insb
in
push
sub
xchg
ja
push
in
inc
pop
popa
outsb
jmp
push
outsl
mov
pop
mov
add
pop
mov
jae
test
inc
or
dec
imul
insb
popa
sbb
jnp
ret
cld
xchg
add
idivl
inc
sub
clc
mov
repz
push
sub
mov
mov
pop
rclb
ficoml
js
push
cli
jl
cwtl
xorb
and
and
mov
movsl
inc
xor
pop
lret
test
or
out
pusha
cmc
inc
in
xchg
movsb
bound
sub
incl
cs
loopne
loop
inc
mov
dec
cmp
sbb
aad
cmp
pop
into
pop
cmpsl
xor
scas
xor
arpl
lock
cmpsb
lds
xchg
mov
lcall
in
dec
add
cwtl
test
or
mov
jae
mov
scas
inc
int
iret
std
jge
jp
sub
in
aam
aam
jecxz
sub
int3
mov
cmc
push
lea
jns
mov
ret
jbe
adc
mov
test
jmp
add
mov
rorb
lds
push
in
cmp
or
cmp
mov
sahf
dec
mov
jmp
dec
cmp
xchg
cmp
jno
jno
cmpsl
xor
adc
sbb
mov
test
loopne
inc
lret
ds
inc
clc
xchg
popf
insb
push
xor
mov
mov
pusha
push
xor
fmuls
cmpsl
jbe
push
adc
iret
cwtl
sti
sub
jnp
lock
pop
xchg
insb
add
test
fsubr
push
ja
fdivrl
sub
fwait
notl
andb
fldenv
adc
sbb
dec
jge
fcompl
hlt
jns
cmp
add
lods
adc
sbb
cmp
dec
hlt
es
sub
mov
in
nop
movsb
jle
aaa
push
in
arpl
insl
out
xchg
imul
test
stos
leave
daa
mov
jo
mov
xor
fidivl
repnz
mov
xchg
aam
cld
mov
das
fisubs
mov
jge
nop
xchg
mov
jg
mov
pop
aaa
lret
and
mov
fldcw
mov
pop
mov
xorb
pop
inc
mov
add
clc
push
scas
sbb
pop
cmpsb
mulb
fnstenv
dec
jbe
call
jl
mov
jg
cmpsl
push
sbb
push
jmp
jg
mov
scas
stos
and
faddl
push
sub
arpl
jo
inc
lahf
addb
push
or
adc
lahf
jp
sarl
or
jb
enter
movsb
cmc
push
jge
mov
dec
sahf
mov
pusha
dec
je
aaa
fidivrs
add
jl
roll
mov
test
or
xlat
jmp
mov
lret
cmp
scas
xchg
jecxz
pop
mov
xor
mov
lahf
add
xchg
mov
xchg
mov
mov
arpl
call
cld
jno
insb
dec
nop
dec
dec
movb
or
pop
andb
stos
pop
inc
imul
movsl
lahf
or
xor
mov
jnp
xchg
popf
shll
rolb
or
xchg
outsb
std
dec
mov
cmpsl
mov
out
cmp
stos
adc
arpl
movsb
jae
mov
stos
push
jb
icebp
cmp
test
inc
pop
inc
icebp
test
clc
sbb
stc
adc
in
adcl
data16
cs
mov
leave
nop
lret
mov
lock
mov
inc
loop
pushf
hlt
cmp
pop
push
mull
ss
aam
push
insb
imul
mov
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
jmp
negl
loopne
cmpsb
sahf
push
lods
cmp
lods
pop
xchg
cmpsb
sahf
push
test
and
stos
lods
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
push
cmp
pop
and
adc
call
xchg
mov
in
cmp
dec
inc
dec
in
int3
loope
cli
sarb
push
stos
mov
loope
shr
int
lds
inc
jmp
mov
sahf
push
test
and
pop
push
hlt
int3
sbb
lods
mov
stc
data16
mov
push
ret
cmpsl
pop
rol
das
jmp
insl
xor
push
sub
outsl
cmp
xchg
lods
lods
cmp
arpl
push
mov
sbb
mov
repnz
pop
or
lock
sub
xchg
test
push
scas
sub
leave
pop
lods
sahf
push
test
and
loopne
ljmp
mov
cmpsb
sahf
push
dec
cmp
cmpsl
loopne
mov
and
pop
xchg
cmpsb
sahf
inc
test
and
mov
test
and
loopne
cmpsb
sahf
push
lods
cmp
lods
loopne
stos
sahf
push
lods
cmp
lods
loopne
es
push
mov
stos
lods
lock
cmpsb
mov
and
loopne
cmpsb
sahf
push
test
and
mov
and
stos
lods
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
xchg
lock
push
test
and
into
stos
lods
lahf
loopne
cmpsb
dec
push
test
and
int3
rol
jmp
and
into
out
in
aaa
test
and
adc
cmp
lods
loopne
cmpsb
sahf
push
test
and
add
cmp
lods
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
and
loopne
cmpsb
sahf
push
test
dec
into
stos
orb
or
push
inc
cmp
nop
jbe
sbb
inc
push
inc
lock
jp
sub
push
inc
push
xchg
xchg
mov
push
lcall
fisttpll
das
xor
jecxz
sahf
mov
mov
xor
xchg
mull
out
adc
mov
push
pop
xchg
cmc
mov
int
scas
movsl
or
mov
mov
popf
cmp
adc
xor
cltd
or
xchg
lret
rcrl
lods
fistl
mov
xlat
cli
sbb
test
sub
dec
fists
fucomp
jb
or
adc
adc
cwtl
sub
and
pop
gs
test
and
pusha
dec
dec
ja
jl
repz
mov
rclb
ds
and
lock
in
mov
inc
dec
ret
iret
jne
and
fs
popa
jp
je
loope
add
dec
popf
lods
pop
cs
not
popa
push
sub
adc
je
shrl
mov
sbb
sbb
mov
inc
cmpsl
testl
inc
shrb
shrl
pop
shr
dec
or
in
pop
sbb
push
push
adc
push
imul
js
xor
push
sar
cltd
mov
xlat
std
test
sub
mov
xor
out
push
std
test
fdivs
outsb
cmpsb
es
shrl
aaa
pop
mov
out
xchg
xor
loopne
mov
or
and
xchg
push
xchg
fcomi
sub
out
rorl
mov
inc
fistpl
lods
sub
or
rcrl
jb
mov
mov
cwtl
xchg
repz
insb
jmp
mov
cmp
mov
iret
pop
jmp
and
iret
fiaddl
in
enter
cltd
push
ds
fldcw
dec
pop
or
insb
pop
ja
and
jmp
add
and
jecxz
mov
xchg
and
insb
adc
mov
in
pop
into
sarl
shll
dec
xchg
push
mov
cmpsb
dec
daa
jl
inc
mov
and
add
inc
mov
outsb
cld
inc
rcrb
pusha
add
xlat
cmpsl
enter
mov
outsl
iret
mov
mov
mov
pop
ret
pop
lock
in
pop
into
push
xor
push
repz
out
adcb
popa
jmp
sub
in
push
jge
pop
arpl
out
je
mov
or
fidivs
inc
xchg
out
and
mov
fimull
cltd
lock
out
mov
mov
movsb
in
sarl
adc
cs
sub
cmp
ljmp
cmp
mov
lret
inc
leave
xor
sti
adc
xchg
mov
aad
add
jae
push
and
daa
cltd
cmc
xchg
jl
repz
arpl
sti
xchg
inc
sbb
fwait
outsl
inc
adc
out
fadds
add
xor
adc
mov
es
and
jae
push
pop
mov
aaa
movsb
xlat
xchg
and
and
repnz
sahf
mov
push
in
jmp
cltd
cli
das
bound
cs
test
mov
in
les
es
or
push
jl
and
dec
gs
ret
testb
clc
hlt
push
mov
jne
xor
int
fistpl
cs
jo
mov
mov
stos
mov
xchg
bound
push
test
or
andl
push
jle
sub
test
clc
or
dec
mov
aam
mov
cwtl
sub
add
inc
push
cmp
mov
lcall
inc
xorl
aaa
push
and
inc
inc
lea
dec
dec
mov
nop
imul
pop
add
jg
xor
mov
aam
mov
jl
sbb
xor
pop
xchg
adc
imul
push
es
cmpxchg
cmp
mov
scas
jge
jno
cmp
jl
jmp
pusha
les
adc
mov
dec
xchg
fnsave
imul
xorb
xchg
cltd
icebp
fcoms
das
sahf
sarb
cmpsl
rcr
pop
and
int3
and
jb
inc
adc
popa
xchg
xor
jmp
rep
inc
fcoms
mov
test
cwtl
mov
mov
xchg
lea
sti
push
cmp
std
loope
lods
sub
xchg
shl
imul
dec
fcoms
cwtl
jbe
mov
push
mov
ret
xor
test
inc
cmc
mov
je
outsl
sub
jae
xchg
add
lods
movsl
mov
imul
scas
xchg
jns
scas
xchg
les
adc
lcall
jne
in
cmp
xchg
mov
sarb
int
pop
aam
lret
push
js
cwtl
adc
pop
aaa
xchg
sahf
push
ret
cmc
cmp
in
inc
mov
int
jg
sarb
push
out
in
js
fwait
stc
aam
push
xchg
sbb
mov
and
push
leave
xor
and
mov
cs
popa
mov
push
sahf
cmpsl
jmp
mov
outsl
and
cltd
jle
and
aad
scas
repz
lea
pop
mov
add
scas
insl
cs
push
addr16
stc
out
lret
and
stos
and
mov
sbb
and
test
push
cwtl
push
jnp
pop
mov
inc
arpl
repz
or
sub
cld
mov
mov
adc
xchg
push
cmp
pop
adc
or
xor
cwtl
rclb
xchg
or
rorl
cld
mov
out
cld
inc
mov
mov
sub
test
pop
loopne
lods
mov
bswap
jl
dec
mov
push
pushf
sub
addb
jecxz
lahf
int3
mov
mov
jne
xchg
lods
cmp
stos
fldenv
jb
ljmp
mov
adc
mov
fsubr
dec
aam
in
pop
leave
inc
adcl
xor
pop
push
add
mov
frndint
stos
jg
dec
aas
fwait
pop
xchg
xchg
mov
lret
cwtl
and
sbb
sbb
and
ret
adc
imul
mov
or
roll
int3
xor
mov
mov
lds
mov
cmp
in
ljmp
cwtl
mov
lods
adc
push
mov
stos
mov
dec
mov
in
stos
xchg
outsl
ret
and
pop
sub
adc
repz
lds
fucomip
dec
sub
jno
fcoml
cli
xor
mov
or
push
or
xor
push
pop
add
sub
add
test
xor
mov
xchg
pop
hlt
scas
icebp
jnp
adc
push
gs
out
imul
jne
in
sbb
and
aaa
imul
fidivs
sar
sbb
cmp
jbe
and
mov
das
jae
stc
add
ljmp
test
fs
aaa
cmp
insb
sarb
adc
fdivs
pusha
cmp
jl
pop
mov
or
and
aas
fs
dec
inc
mov
ret
sub
rclb
lret
jmp
push
dec
jp
addr16
cmp
push
ret
inc
adc
push
mov
das
adc
in
sbb
pop
mov
std
int3
aad
sub
mov
sbb
fstpt
scas
cmp
js
loope
cmp
pop
bound
addr16
jle
sbb
dec
xchg
cwtl
dec
sub
inc
ret
sub
jle
mov
jp
xor
jae
dec
and
pop
xchg
imul
inc
xor
and
jp
jp
mov
enter
es
lea
lret
cmp
inc
adc
inc
mov
pop
cmp
sbb
jl
je
in
test
fwait
inc
push
and
xor
shrb
mov
xor
and
psrad
lock
incb
jmp
push
xor
ds
popa
addr16
push
pushf
xchg
sahf
movsb
lea
testl
xor
jle
jg
jp
jbe
bound
ret
lret
movsb
mov
jge
shrl
daa
das
cmpsl
mov
cmpsb
pop
and
adc
push
jae
add
cmp
rorb
jae
stc
stos
add
mov
jne
sbb
int3
dec
sbb
loopne
out
scas
jne
daa
mov
jg
xor
lret
jmp
loope
and
mov
scas
in
cmp
dec
dec
adc
xlat
out
aad
or
gs
jge
rclb
adc
inc
rorl
fmuls
adc
sti
ja
mov
ja
dec
xchg
inc
std
dec
inc
mov
icebp
rclb
fs
jge
sbb
jne
add
dec
les
sub
mov
dec
push
push
and
cmc
mov
cmpsl
in
orb
test
fldt
fadd
add
mov
fimuls
jbe
or
fiaddl
fwait
inc
fcoml
dec
pushl
mov
sbb
pop
pop
mov
ss
xchg
aam
das
fisubrl
lock
cmp
lcall
scas
fistl
add
inc
adc
bswap
ds
adc
andl
pop
mov
hlt
cltd
xchg
rolb
loope
mov
push
ljmp
movsl
out
loopne
jns
jbe
xchg
mov
jecxz
int
or
or
clc
cwtl
shl
jp
fs
inc
mov
mov
nop
and
xor
xor
xor
repz
leave
in
test
js
cli
nop
dec
xor
pushf
int
mov
sub
shrl
call
mov
mov
inc
fsubrl
sub
sbb
fdivrs
scas
or
movsb
mov
in
iret
mov
in
jg
rorb
sub
or
sbbb
loopne
shrb
push
nop
outsl
adc
mov
nop
fwait
in
mov
mov
push
roll
cmp
fsubr
adc
insl
or
in
leave
cmp
mov
call
mov
aaa
fsubs
and
les
out
sti
xor
imul
mov
imulb
mov
cmp
into
lret
sub
cs
pop
dec
pop
int3
std
into
and
xchg
lahf
sub
lods
lods
inc
xor
cltd
mov
xchg
xchg
jb
jns
shlb
lahf
jecxz
and
xchg
add
pop
shrb
scas
sbb
inc
lea
ret
rorl
out
lret
jb
movsb
jmp
lahf
cmp
push
das
outsb
das
mov
out
shll
cld
nop
aad
pop
and
call
mov
pop
loope
jmp
push
xor
and
xlat
lahf
mov
xchg
adc
jg
mov
mov
test
xor
push
mov
push
in
stos
rorb
int
inc
cld
aam
andl
int
inc
ja
adc
or
call
adc
jecxz
in
in
cld
sub
mov
gs
in
add
cmp
shrb
xchg
gs
jmp
push
pop
rol
fsub
jbe
icebp
jbe
test
jle
dec
pop
jnp
jecxz
xor
test
fs
push
mov
pusha
or
aam
add
jns
sub
add
les
loop
test
pusha
mov
or
push
inc
mov
mov
push
xchg
ss
subl
push
movb
xor
rorb
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
