push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
push
push
call
lea
push
lea
push
push
call
test
je
push
push
mov
push
call
mov
add
mov
push
push
push
mov
push
push
call
call
mov
movzwl
cmp
jne
movl
movl
movb
movl
movl
jmp
movb
push
call
mov
push
push
call
push
call
mov
pushl
pop
mov
push
call
mov
push
call
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
push
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
mov
push
call
mov
add
mov
mov
mov
push
call
push
call
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
push
push
mov
push
call
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
push
push
call
mov
pop
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
push
push
push
mov
push
call
lea
push
call
call
mov
push
lea
push
call
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
call
push
call
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
push
push
call
movl
mov
mov
movl
mov
mov
push
push
push
call
call
push
push
push
push
call
test
je
push
call
push
int3
inc
cmpsl
and
clc
leave
ljmp
movsl
rcl
test
jns
cwtl
lock
mov
andb
ficoms
lock
cmc
jp
jnp
out
pusha
enter
xchg
cmp
mov
lahf
in
add
les
loopne
popa
xlat
cltd
push
mov
or
inc
rclb
jmp
pop
xor
jne
dec
lcall
mov
mov
out
shrl
inc
adc
in
les
pop
clc
test
mov
cmp
fisttps
ss
pop
mov
jb
xor
and
inc
iret
sbb
push
lds
and
jge
popl
ja
cmpsl
sbb
iret
push
xchg
repnz
int3
in
mov
call
outsb
mov
jae
xchg
sbb
cs
inc
and
pop
lret
mov
rorl
rcrl
jo
pop
call
xchg
bound
mov
imul
mov
shl
pop
push
cmpsb
test
fcoml
dec
inc
pop
xor
imul
test
test
mov
mov
add
push
jne
lods
cs
sub
jmp
sbbb
jge
adc
xlat
sbb
push
push
and
aad
jmp
xor
iret
test
pushf
cmpsb
and
mov
add
mov
mov
cmp
std
dec
test
iret
sub
int
dec
and
xor
xor
jg
push
test
imul
mov
scas
enter
mov
cmp
pop
cmp
pop
or
iret
stos
add
xchg
pop
mov
jno
clc
repz
cmpsb
jmp
inc
push
push
dec
mov
jnp
add
pop
int
loop
repz
rcl
int3
cmc
xlat
jmp
into
icebp
dec
jmp
js
pop
cli
mov
push
addr16
es
or
out
lahf
add
sbb
das
ja
cmp
xor
scas
icebp
mov
jp
add
add
int3
popl
repz
inc
clc
in
ja
aam
adc
pop
pop
push
stos
mov
ja
insb
xlat
and
jb
shl
push
mov
out
push
cmp
sub
cmc
pop
gs
mov
stos
aam
xor
mov
sbb
jmp
int3
gs
dec
sub
cmp
test
inc
cmpsl
mov
mov
sar
hlt
sbb
jnp
popa
subl
or
lahf
inc
test
xor
pop
and
xchg
push
mov
sbb
jno
sbb
add
in
xchg
or
or
not
push
data16
imul
jno
aas
and
movlps
inc
lcall
push
lret
and
push
jecxz
inc
cmp
xor
push
lds
leave
dec
es
call
dec
mov
mov
inc
jb
mov
lds
dec
mov
out
cmp
cmpsl
cmp
xchg
mov
das
mov
outsl
push
dec
sbb
sub
in
inc
mov
out
jno
dec
jb
xchg
lret
movsl
lods
pop
dec
jge
ficoms
sbb
popa
jge
imul
and
sbb
lcall
pop
ja
pusha
popf
addr16
hlt
out
push
mov
add
ss
ljmp
push
xor
nop
loopne
testl
sahf
xchg
insb
lods
ret
mov
pop
aas
inc
or
test
ja
in
mov
jnp
and
cmpl
cld
decb
mov
enter
daa
xor
cmpsl
sub
hlt
dec
jp
adc
int
sub
mov
scas
pop
shlb
fldt
shl
fs
pop
ds
in
inc
sarb
bound
mov
mov
sti
std
cmp
mov
xchg
mov
sbb
cld
dec
aas
mov
hlt
cmp
mov
xor
xor
dec
arpl
mov
negl
shlb
lods
sti
pop
aam
or
xchg
je
xor
imul
xor
pop
or
jae
and
jae
add
inc
jl
adc
xchg
lcall
mov
sub
test
aaa
in
aaa
jl
adc
in
enter
sbb
xor
jns
mov
cmp
divb
fld
in
sub
push
add
xor
cwtl
popf
sub
pushf
out
into
sbb
jb
push
divb
mov
or
sub
adc
jae
pusha
cli
ret
mov
pop
loop
stc
lock
in
or
lock
pusha
mov
jle
scas
rcr
sub
lds
pop
insw
mov
inc
push
fnstenv
in
sbb
mov
add
insb
scas
enter
sbb
push
mov
mov
notl
pushf
pusha
pop
fdivl
fidivl
fidivl
fptan
outsl
stos
lock
pop
add
inc
lret
leave
inc
inc
cmp
adc
xlat
mov
push
adcb
pop
or
lcall
call
daa
inc
sub
fistpll
mov
leave
mov
rorb
push
dec
pop
mov
jp
xchg
ds
inc
jl
pop
dec
mov
or
addb
daa
inc
xchg
adc
xor
andl
addr16
mov
and
add
add
cmc
add
popa
loope
or
fisttps
push
and
mov
cmp
insl
dec
loope
call
aad
outsl
call
add
jns
sbb
or
jne
push
xchg
out
and
movsb
ss
icebp
pop
fiadds
or
mov
fdivl
or
xchg
ja
inc
mov
or
cld
pop
and
jb
or
cmc
jnp
popf
arpl
push
testb
repnz
pop
sub
xchg
xorl
sbb
fsub
cmpb
xor
cli
jge
cmc
pop
or
jecxz
fimull
mov
test
cli
dec
fidivrl
in
xchg
repz
dec
inc
push
xor
jno
dec
inc
and
jno
xchg
mov
shll
lcall
jmp
lret
jg
adc
arpl
out
lock
pop
cmp
cmp
test
fdiv
adc
enter
mov
rol
int
push
imul
jb
mov
in
lahf
arpl
cli
data16
out
scas
insb
pop
out
fstl
lcall
jp
mov
aam
jge
mov
fucomip
jo
xchg
or
push
push
xchg
jmp
cltd
cmp
imul
sub
cmp
pop
pop
cmpsb
xchg
sarb
mov
movsb
movsb
cmp
inc
lods
sahf
aas
ret
jbe
add
push
xchg
pop
shll
cli
fldt
pop
jmp
xor
aad
pushf
int3
stc
cltd
jae
test
addr16
test
adcl
imul
push
ljmp
pop
mov
not
sub
popa
rcl
movsb
mov
sub
ja
add
cwtl
mov
loopne
data16
cmp
and
xor
insb
xor
negl
sbb
adc
loope
pushf
push
lds
aaa
rclb
cwtl
fadds
loope
aad
and
aas
lods
insl
mov
shll
push
popa
or
std
pusha
gs
or
mov
ja
xchg
es
into
cmpsb
sbb
ficompl
mov
jge
cmp
in
call
adc
xor
push
jg
or
xor
sahf
daa
mov
inc
sti
cmp
js
mov
sbb
shlb
fildl
jmp
call
push
and
pop
aam
in
int3
and
dec
pop
xchg
xchg
xchg
arpl
into
push
xlat
mov
or
in
je
outsb
mov
xor
outsl
rcrl
fisubrs
push
sbb
jecxz
ja
ja
aaa
xor
in
inc
xchg
fcmovu
adc
jbe
popf
or
mov
add
iret
mov
imul
jnp
push
das
mov
pushl
rcr
clc
cltd
and
push
rcll
es
jb
insl
dec
and
adc
sub
push
shr
sub
pop
clc
inc
aam
and
pop
jb
ljmp
jge
in
and
sti
add
mov
or
fdivl
rcrl
xchg
adc
xchg
repnz
hlt
cmp
call
inc
mov
mov
lock
inc
popa
movsb
aam
inc
pop
add
push
jb
xor
insl
out
and
xchg
pusha
out
pop
mov
xchg
mov
roll
js
daa
mov
enter
or
xor
ja
push
mov
add
in
jb
xor
divl
pop
add
insl
mov
insl
cwtl
xor
es
nop
insb
push
sbb
xor
or
push
add
sbb
or
fldl
and
mov
scas
pop
adc
rcl
cmpsl
sub
or
pop
dec
imul
add
and
dec
out
mov
or
outsb
sbb
mov
ljmp
xchg
or
mov
mov
cli
lretw
mov
xchg
pop
out
jb
sahf
cmpsl
or
fstl
sarb
and
pop
stos
xor
xor
sub
in
loope
in
int3
icebp
push
fdivrl
inc
xchg
test
jns
pop
movsl
push
cmp
movsb
pop
sbb
inc
repz
aad
sub
add
cmp
mov
mov
cmp
cmp
xchg
hlt
jne
mov
mov
push
mov
jl
cld
pop
sar
or
mov
xchg
push
mov
mov
cmp
push
and
mov
insl
in
inc
mov
movsb
repnz
loope
cmp
add
pop
jo
cmp
and
add
lret
in
push
in
cmp
shrb
sbb
inc
stos
xor
shll
mov
cli
mov
mov
inc
hlt
aas
sbb
add
jns
lods
inc
daa
addr16
pop
and
mov
loope
ljmp
movsl
subl
rclb
mov
jecxz
insb
mov
sub
jne
out
sbb
dec
push
test
fsts
call
in
mov
les
lds
daa
lea
pop
fnstsw
xchg
out
rcrl
pop
imul
adc
xchg
mov
or
rolb
in
cs
ret
inc
into
jg
testl
add
add
add
data16
dec
movsl
xor
sub
push
add
mov
js
push
ret
inc
push
pushf
inc
fstl
jg
popf
inc
inc
sti
mov
mov
push
cmpsb
je
xchg
mov
in
xor
sbb
fcomps
test
inc
fwait
inc
cmp
jo
je
jo
sbb
dec
loopne
pushf
lds
xlat
add
adc
les
mov
ret
mov
mov
and
adc
lock
cmpsb
insl
mov
insl
into
sahf
cmp
pop
jp
fcoms
inc
dec
shlb
push
roll
ljmp
pushl
ljmp
ret
sub
lods
pusha
xor
xor
lods
pop
adc
in
cmp
dec
adc
cmc
pop
popa
jmp
or
mov
jnp
push
ljmp
icebp
jp
lret
loopne
ret
xchg
fidivl
xchg
data16
adc
sbb
lret
test
xor
into
mov
sub
adc
sti
and
push
outsl
mov
jge
test
pop
mov
out
cltd
push
or
clc
mov
or
insb
xchg
and
jg
sbb
sub
pop
ret
push
hlt
call
push
aaa
mov
jg
mov
push
inc
sub
lods
lcall
or
xor
mull
or
mov
lock
mov
sbb
push
lock
push
pop
mov
push
sub
jns
pop
sahf
shll
mov
mov
mov
push
pusha
outsb
pop
or
setae
popf
int3
pusha
sub
mov
dec
int3
and
shrb
cmpb
and
add
jecxz
outsl
and
test
mov
add
mov
daa
mov
lret
pushl
movsb
imul
sub
lret
push
push
xchg
mov
xchg
cmpsb
or
mov
cmp
cltd
pushf
add
in
cmp
pop
mov
pop
jno
mov
pop
push
dec
orl
cmpsb
hlt
fstpl
js
stos
sub
jns
fwait
aaa
aam
pop
subl
inc
cmove
mov
jb
adc
shlb
stc
in
mov
jmp
adc
mov
ja
mov
dec
add
rcrb
bound
mov
aad
shlb
sbb
and
je
icebp
sbb
pop
outsb
lret
push
repnz
pop
push
aad
jne
xchg
inc
pop
jne
inc
cli
adc
loop
cli
mov
pop
inc
loopne
test
push
sbb
cmpsl
test
stos
ds
sbb
push
dec
pusha
cs
lods
mov
mov
imul
or
mov
mov
sbb
inc
or
xchg
cmp
dec
clc
rorb
adc
mov
lea
mov
xchg
shrl
test
jo
xchg
lret
dec
or
outsb
int
push
in
push
cs
hlt
mov
shrb
pop
mov
sbb
les
fnstenv
sbb
imul
aad
jbe
sub
or
mov
fsubrl
jnp
jmp
adc
pop
test
jae
imul
sbb
dec
fstpt
or
out
into
enter
xor
cmp
pushf
pause
faddp
in
jle
aam
test
cmpsl
lock
or
dec
sbb
push
test
sbb
insb
jo
adc
push
sbb
xchg
das
cmc
mov
cwtl
pop
xchg
or
pop
in
push
mov
cmpsl
inc
sub
pusha
fbld
push
mov
stos
mov
aas
mov
pop
push
add
push
sbb
sar
out
jmp
sahf
es
lea
fs
xlat
and
filds
pop
aaa
jbe
jg
or
aas
outsb
lea
sti
add
xor
dec
test
iret
sti
sbb
xor
add
out
sti
push
fstps
pop
in
xor
dec
xor
pushf
dec
arpl
or
sbb
jle
and
hlt
clc
add
or
in
stos
dec
bound
sarl
mov
fsubr
out
xor
mov
mov
sub
mov
add
push
scas
jmp
push
xor
inc
cmp
dec
jge
int3
dec
pop
pop
cmpb
das
push
push
mov
mov
sbb
fsubrl
movsb
jnp
mov
lods
les
leave
pop
xor
int
pusha
lods
sbb
nop
push
test
inc
ret
jmp
fiaddl
sbb
xchg
pop
ljmp
pop
cmp
and
xchg
cmp
stos
sti
test
jb
pop
scas
push
mov
adc
popf
and
dec
adc
stc
push
or
dec
mov
xlat
loop
stos
bound
nop
push
repnz
bound
rclb
jbe
push
lock
inc
pushf
jp
popf
or
dec
daa
xor
imull
hlt
xchg
aam
or
pop
or
frstor
inc
repnz
xor
scas
test
jl
jne
es
loopne
mov
dec
out
mov
cs
mov
dec
xor
testb
adc
or
or
mov
js
daa
jmp
out
cmp
insl
shrl
inc
and
mov
std
xor
pcmpgtw
sbb
push
and
repnz
movsl
push
mov
and
cmp
mov
lret
sbb
movsl
xchg
jmp
adc
and
adc
movsl
ds
bound
ss
sub
stos
adc
fs
insb
push
push
es
add
data16
incb
insb
xchg
repnz
push
lahf
sbb
mov
push
xor
call
jle
or
jmp
ds
es
xchg
adc
cmp
iret
xchg
xchg
sbb
dec
ds
mov
lret
xor
pop
cmpsl
xchg
das
loop
push
and
mov
mov
mov
adc
adc
jbe
or
cmp
loopne
test
hlt
icebp
inc
cltd
push
mov
hlt
mov
jg
push
enter
jne
fmulp
push
cmp
pop
xor
add
dec
pop
stos
xlat
add
push
push
pop
and
mov
ljmp
pushf
ficompl
lret
cs
add
stos
insl
mov
adc
xorl
pop
jp
pusha
sub
shll
dec
xchg
or
rcll
dec
nop
mov
xchg
movsl
pop
jecxz
or
push
dec
mov
mov
xor
rorb
inc
stc
dec
pusha
test
ss
or
mov
add
int
xor
jmp
hlt
fchs
jb
aas
push
mov
in
and
xor
sbb
in
mov
stc
out
out
lods
rorl
jne
sbb
shlb
fsubs
push
pusha
pop
jecxz
lock
sub
cmpsb
and
cmpl
cmp
scas
push
dec
cwtl
movsb
mov
data16
push
xchg
pop
sub
bound
sbb
mov
mov
aam
xor
jne
call
mov
cmpl
jne
mov
push
call
add
push
push
push
call
push
call
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
jmp
jmp
jmp
