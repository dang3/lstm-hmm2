rcrb
cmp
pushf
stos
imul
icebp
in
cmp
cmp
mov
cmp
inc
mov
mov
repnz
xchg
je
pop
cmp
arpl
add
in
xor
pop
xchg
icebp
sub
add
fwait
adc
dec
adc
sbb
pop
ret
push
stos
es
and
imulb
dec
pop
std
jnp
cltd
ja
enter
add
loop
sbb
cmp
push
outsl
lcall
out
xor
mov
pop
inc
mov
cs
popf
lahf
xor
jecxz
cltd
sub
mov
in
insl
jp
dec
mov
mov
add
dec
inc
xchg
cli
loopne
out
pop
and
shll
adc
or
inc
stos
fs
xor
jne
jl
dec
shrb
jbe
loopne
fidivrl
loope
and
sti
fcompl
pushl
inc
outsb
in
sub
or
and
jb
fldl2e
adc
push
sbbl
cmp
jl
xchg
or
sub
jl
adc
push
fcomip
push
xorb
dec
lods
jmp
mov
fistpll
ds
mov
xor
shlb
loopne
mov
cltd
mov
int
xchg
mov
mov
sbb
out
add
subl
arpl
lock
cmpsl
fwait
in
xchg
les
mov
inc
xchg
dec
imul
into
ds
sub
ffree
out
mov
aam
push
xchg
popa
cmc
cmp
test
mov
adc
adc
nop
dec
data16
pop
push
xchg
cmp
and
fsubl
mov
pop
sbb
nop
call
xchg
mov
gs
lret
and
icebp
std
and
push
pusha
jae
mov
jb
lea
add
stc
lds
cmp
int
or
fwait
jp
jge
dec
fcomps
dec
imul
dec
add
jecxz
xchg
adc
neg
icebp
inc
inc
push
leave
mov
and
ljmp
and
sbb
mov
hlt
shrb
in
aaa
xor
imul
mov
mov
add
or
and
call
add
movsl
hlt
adcl
jp
ljmp
xor
out
mov
pop
shrb
shl
jnp,pt
jg
lcall
sub
mov
divl
mov
add
jmp
repz
cli
out
dec
adc
stc
mov
notl
cmp
imul
mov
cwtl
jle
imull
sbb
es
imul
mov
inc
movsb
cmc
lret
inc
cmp
in
dec
pop
xorb
fidivrs
filds
movb
icebp
imul
dec
pop
iret
cmpb
cwtl
int3
push
pop
ds
add
xchg
stc
cmp
stos
sbb
add
cmp
add
imul
pop
dec
dec
fsub
mov
loope
mov
pop
daa
cmpsb
mov
mov
dec
jle
loope
xchg
xchg
mull
das
mov
xchg
fnstenv
sbbl
pop
insl
repnz
mov
xchg
pop
pusha
and
xchg
pop
ds
jb
push
mov
lods
sbb
loopne
lods
icebp
imul
aad
fdivl
mov
lcall
ds
cmp
mov
sti
lcall
stc
insb
inc
lock
sarl
jl
lret
pop
jecxz
das
ret
int
stos
pop
aad
lahf
fwait
jp
mov
push
cmp
repnz
cmp
adc
pop
stos
shlb
pop
push
fcoml
clc
jae
xor
loop
bound
adc
movsl
out
push
xchg
movsl
push
lret
xor
xor
cld
xchg
mov
push
dec
sub
mov
call
test
filds
das
pop
ss
add
test
mov
mov
clc
daa
cld
fbld
lock
push
push
xchg
inc
xchg
mov
popf
sbb
dec
push
cmp
movsl
lods
push
mov
fiadds
push
fstpl
or
mov
cld
xchg
lods
xorl
mov
lahf
repnz
push
lret
mov
jp
or
out
jbe
gs
sbbl
cltd
iret
les
add
jle
fs
add
add
push
sub
xchg
xchg
and
inc
in
mov
mov
aam
or
in
push
sbb
jns
js
scas
jns
fldt
and
popa
or
jp
and
xchg
out
outsl
pop
pop
movsl
pop
push
inc
push
std
inc
js
ret
mov
mov
outsl
int3
adc
sbb
test
aad
or
mov
or
push
testl
mov
cltd
stos
pop
or
idivb
fiaddl
dec
adcb
pop
lods
xchg
add
push
stos
adc
xchg
jp
in
lods
gs
in
mov
lahf
loopne
imul
add
push
dec
incb
inc
sarl
test
mov
cld
xor
stos
frstor
enter
add
in
mov
cmc
pop
jmp
ds
aad
push
mov
cwtl
add
in
and
xchg
xchg
adc
andb
mov
push
mov
mov
jns
jmp
jge
add
xchg
loope
pop
loopne
jp
xlat
dec
movsb
ret
dec
add
inc
movsb
or
adc
jmp
ret
or
scas
mov
sub
aaa
adc
ja
fwait
xor
inc
or
cwtl
xchg
jbe
mov
pop
out
adc
jmp
dec
cmpl
addl
jecxz
push
dec
mov
add
mov
sti
repnz
push
stos
or
in
lret
cltd
sub
push
mov
addr16
dec
rcl
xor
test
jecxz
cmc
inc
xor
orb
cmp
dec
push
pop
negl
stos
shll
ja
icebp
mov
push
dec
pop
ljmp
pop
ret
sti
in
and
xor
pop
fwait
sbb
pop
inc
shll
daa
aad
jae
sbb
mov
cmp
cli
dec
or
lret
pop
into
leave
add
cmp
sbb
insl
push
mov
mov
and
fsubrl
fwait
daa
or
icebp
cmovp
popf
pop
aad
pop
add
mov
fisubrl
or
ss
inc
mov
out
imul
rcrl
arpl
mov
or
scas
loope
daa
aam
in
in
hlt
insl
dec
xor
loope
push
jbe
lods
shll
sti
xchg
movsl
cmc
sbb
inc
lock
dec
mov
rorb
and
movsl
std
inc
stos
mov
leave
imul
leave
rcll
push
negb
mov
cmpsb
nop
sbbb
lods
mov
xchg
dec
dec
xor
mov
push
rcrb
stc
sub
adc
pop
lea
pop
cs
arpl
mov
add
enter
orl
xor
test
stc
iret
cmpsl
daa
pop
shr
or
jnp
dec
rolb
pop
adc
fs
xchg
sbb
pop
clc
add
cmp
call
jno
in
jns
mov
iret
push
jae
mov
js
movsl
or
inc
rcll
push
push
jmp
xchg
cmp
out
clc
inc
leave
dec
jp
into
enter
lcall
cmpsb
xor
jnp
jge
lahf
cmp
xchg
sbb
bound
mov
out
call
pop
in
xor
push
fstl
ret
sarl
push
std
stos
js
jo
mov
dec
jl
in
in
dec
cmp
test
out
les
cli
pop
inc
push
jnp
arpl
jg
cmpb
sub
idivl
mov
fists
fdivr
lret
je
dec
clc
cmp
in
data16
push
mov
das
pop
push
jae
adc
inc
xchg
fs
dec
pop
jge
jp
push
cmp
rcrb
and
cmp
mov
popf
mov
aam
add
cli
out
adc
or
unpcklps
mov
out
and
in
xchg
xchg
pop
or
mov
movsb
scas
jne
icebp
int3
shlb
jge
jno
sar
int
in
pop
sub
dec
cld
inc
imul
xor
cmpb
mov
mov
nop
sbb
and
data16
jecxz
negl
mov
pop
cwtl
lds
inc
in
mov
aad
int3
outsl
jle
push
jae
and
out
add
shll
fs
lods
cld
and
sbbb
xlat
lcall
mov
xor
jge
inc
add
inc
xchg
cmp
jge
xchg
adc
rcrb
pop
shll
jb
jbe
shlb
popa
mov
scas
cmp
repz
cmpsb
icebp
out
xor
adc
test
jmp
cli
and
mov
sti
or
aas
xchg
xor
sbb
lods
in
sub
mov
mov
cs
push
pusha
inc
aaa
pop
mov
adcb
les
xchg
test
insl
jle
or
cmpsb
push
into
outsb
mov
out
cmp
jecxz
add
ficoml
dec
pop
sbb
push
xchg
out
sub
lods
xchg
pop
addr16
aaa
or
pop
pop
dec
pop
mov
and
lods
stc
jecxz
pop
out
cld
int3
cmp
ljmp
leave
test
ficompl
sbb
nop
sub
pop
add
das
jmp
dec
cmp
out
sub
scas
and
aad
std
sub
mov
clc
ficomps
adc
bound
jns
rcrb
or
neg
stos
mov
xchg
cmp
or
lret
adc
mov
add
pop
stos
into
dec
pop
sub
aas
fimull
jg
push
orl
mov
aam
ljmp
scas
nop
cmp
xor
sbb
mov
insb
xor
jno
push
data16
add
adc
sub
cmpsb
xchg
out
roll
dec
test
ror
jo
add
flds
or
lcall
in
jge
outsl
div
rolb
clc
xlat
add
xchg
adc
jb
adc
xchg
sets
aas
out
jp
jmp
mov
pop
and
or
sub
leave
rcrb
pushf
dec
push
fsubs
xchg
inc
mov
aas
idivl
add
leave
push
nop
pop
ljmp
push
sub
and
aas
dec
jle
jg
pop
loopne
mov
inc
movsl
out
loopne
xchg
mov
xor
data16
push
mov
test
rcrb
push
add
jp
cmpsb
pop
dec
pop
xor
cwtl
sub
testb
sub
aad
fisttps
fwait
orb
sub
mov
jl
enter
sub
repnz
pop
mov
pop
push
push
sub
dec
jmp
pop
ljmp
sti
jle
dec
jg
repz
sub
sahf
movsl
push
push
cmp
inc
push
jne
mov
mov
pop
lahf
dec
es
adc
add
add
mov
xchg
scas
notl
call
add
dec
out
repnz
dec
mov
ss
mov
cmp
js
jbe
push
mov
dec
xchg
test
int
adcl
xchg
jmp
rorl
push
sub
push
idivb
push
out
outsb
dec
jb
add
cli
lods
out
fistl
cmp
mov
orb
pop
dec
dec
inc
mov
leave
cmp
mov
cld
arpl
sub
movsb
lret
adc
cmp
test
cmp
jg
into
push
push
mov
and
aad
inc
sub
jmp
jbe
scas
pop
test
sub
and
jns
insb
push
xchg
cmpl
and
add
cmp
bound
sub
es
xchg
popf
jmp
add
jb
xor
sub
inc
out
popf
pushf
test
les
sub
cld
rol
outsb
ss
mov
mov
sub
jno
xchg
cmp
aas
aas
inc
rolb
mov
jno
add
sub
mov
gs
ret
cld
push
mov
sbbl
adc
lret
push
stos
mulb
leave
cmp
mov
mov
aam
pop
stos
fdivl
sub
fiaddl
in
aad
push
in
jg
xchg
mov
cltd
fldt
aas
pop
addr16
xor
jg
pop
mov
fstps
movsb
in
sbb
or
fdivs
sbb
ret
sub
sub
inc
out
and
cli
dec
dec
cmp
xchg
enter
pop
inc
lds
dec
bound
cltd
lret
sub
in
lcall
arpl
mov
or
xor
cmp
in
loope
and
xchg
jecxz
mov
dec
jle
arpl
stc
dec
decb
adc
push
test
ret
or
das
insb
dec
es
iret
out
push
ret
pop
sub
fidivrs
pop
xchg
add
cltd
push
cld
cli
adc
dec
jne
adc
les
and
cwtl
jne
enter
aam
adc
and
hlt
out
mov
cmp
cs
push
adc
ret
fstl
shrl
inc
stos
inc
in
push
insb
xlat
jle
stos
and
pop
je
jl
test
std
jbe
mov
call
push
or
xchg
jns
mov
pop
mov
ret
cmc
mulb
fwait
jnp
or
xchg
cwtl
lcall
sbb
jae
push
enter
adc
jl
out
jp
int
fsubl
enter
call
out
ret
test
and
imul
sbb
das
imul
or
sbb
imul
mov
push
add
in
bound
ja
mov
mov
aaa
loope
pop
push
inc
rcr
shl
inc
out
adc
idiv
negl
mov
ss
mov
mov
push
rorl
push
pop
sahf
cmp
pop
sbb
and
insb
mov
insl
outsb
xchg
jmp
dec
xchg
lock
mov
outsl
mov
or
lcall
dec
imul
stos
sub
ret
and
sahf
add
jmp
push
out
dec
cmp
inc
vpsubsb
pop
popa
loope
xor
xor
xchg
sti
mov
cwtl
cmp
cmp
dec
std
fisubrl
ja
adc
lret
xchg
gs
arpl
cmp
and
arpl
dec
push
pop
in
shrl
aad
sub
or
adc
enter
xchg
inc
xchg
add
stc
icebp
in
mov
cmc
shrl
mov
sahf
pop
in
push
clc
ja
jmp
pusha
mov
icebp
sub
out
lods
or
aaa
outsl
hlt
leave
sub
jne
mov
out
and
iret
callw
cmp
pop
add
mov
dec
fucom
out
popf
fcoml
mov
sub
pop
jns
notb
xchg
mov
sbb
loope
aad
adc
push
ficomps
stos
jp
push
add
xchg
xchg
faddl
aaa
cmp
adc
mov
pop
pop
inc
test
loope
sub
aam
pusha
icebp
arpl
mov
mov
test
cltd
add
out
aaa
loopne
leave
xchg
pop
pop
rolb
fcomps
outsl
pop
sti
outsb
push
jo
mov
leave
out
or
or
aad
jle
in
cli
push
and
aas
inc
push
scas
data16
adc
pop
cs
jle
out
test
mov
push
mov
inc
pop
cld
mov
cltd
jg
add
es
fwait
mov
jl
jo
pusha
push
xor
cli
and
cmp
push
fmul
sarb
jbe
outsl
xorb
jnp
mov
xlat
inc
dec
add
lea
iret
add
jl
push
adc
stc
jbe
mov
pushf
inc
and
loopne
call
outsl
je
dec
ja
push
inc
add
movl
inc
imul
icebp
adc
mov
lret
pop
sahf
mov
jne
cli
mov
outsl
xchg
dec
gs
addr16
fidivrl
decb
ljmp
mov
inc
dec
or
mov
xchg
mov
dec
sahf
push
fdivrl
dec
stos
iret
fwait
outsb
inc
or
je
adc
jg
clc
push
mov
xchg
lcall
lret
loopne
std
cmp
adc
ficoml
lods
push
stos
mov
cmc
popa
cwtl
inc
js
dec
mov
rcrl
xor
push
mov
test
push
dec
mov
movsb
xchg
ds
mov
cltd
jmp
loope
icebp
fisubrs
cmp
aas
ficoms
xor
movsl
cs
ror
rol
push
inc
mov
cwtl
xchg
arpl
sub
inc
loope
pusha
push
into
jno
inc
pop
or
lcall
loope
jbe
arpl
imul
sbbb
pop
in
jmp
add
push
jecxz
mov
lahf
fidivrs
int
xchg
mov
mov
daa
dec
mov
loop
fistpll
aaa
xor
mov
ljmp
ret
aas
jg
inc
iret
ja
dec
xor
pop
ucomiss
mov
push
xchg
pushf
imul
push
sti
lods
out
icebp
sub
sub
jo
mov
pop
push
addl
int3
sbb
inc
lcall
roll
add
add
add
adc
leave
test
ja
sub
ret
imul
stos
mov
scas
into
pop
out
jecxz
je
shll
dec
mov
imul
jle
nop
sti
sub
jnp
xchg
adc
sbb
dec
lods
das
push
jb
xlat
sub
notb
fcomps
je
jl
adc
xchg
inc
cmpsl
cmp
cmp
mov
inc
aam
sub
fisubs
and
imul
arpl
xchg
add
mov
cmp
or
pop
out
pop
and
and
dec
out
sub
jnp
js
and
jmp
shrl
sub
repnz
loop
dec
cmpsb
das
cld
xlat
pushf
inc
or
arpl
and
dec
sbb
int3
jl
xor
add
pop
fucom
popf
mov
jl
out
push
inc
mov
mov
sbb
in
push
imul
mov
jge
xor
or
cld
inc
imul
shr
icebp
loopne
mov
mov
decb
add
pop
fimull
pop
cld
int
insb
ja
xor
pop
inc
lods
jns
lahf
out
rclb
sbb
pop
rorb
sub
sbb
add
mov
insl
jae
sub
cwtl
js
lds
or
arpl
cmp
xor
aaa
add
mov
push
out
daa
arpl
dec
mov
data16
sar
shrl
icebp
sbb
add
sub
jmp
pop
sbb
add
mov
jb
push
in
xlat
inc
and
mov
js
adc
mov
push
push
fbld
cmpl
rorl
push
aas
or
loopne
pusha
sub
sub
xchg
fcomp
notl
insl
dec
mov
loop
mov
mov
adc
data16
add
lret
inc
push
sbb
jp
sbb
out
shll
fucom
or
inc
imul
les
insb
stos
xor
xchg
xchg
dec
jge
mov
mov
pop
add
xor
mov
mov
xor
xchg
push
mov
cmp
push
fwait
xor
sarl
jg
cmp
dec
sar
inc
push
aam
inc
xor
dec
ret
xchg
inc
out
aam
xchg
hlt
jmp
in
clc
push
pop
clc
mov
out
mov
push
xchg
fsub
rcrb
mov
inc
test
es
imul
xchg
std
mov
adc
addr16
and
sbb
insl
stos
sbb
jnp
or
jmp
dec
into
mov
cltd
stos
jmp
jg
in
cmc
add
fcoms
ficomps
push
sub
test
cmp
je
mov
test
lea
imul
xor
jbe,pn
sbb
and
hlt
subl
xchg
jnp
push
call
outsl
lret
mov
sbb
repz
test
insl
cltd
add
jmp
jecxz
clc
pop
outsl
push
jnp
sbb
leave
mov
test
xlat
cmp
push
sub
adc
adc
push
stos
cltd
mov
sti
imul
xor
dec
rcr
jne
and
cmp
adc
loop
loope
pop
mov
or
into
aas
sbb
addr16
and
dec
popf
js
jbe
cmp
inc
mov
and
lret
orl
inc
add
cmp
cmpsb
aaa
xor
mov
andb
or
out
gs
ljmp
adc
push
out
loop
or
pop
push
outsb
insl
xchg
jb
cmp
jmp
xchg
int
aas
int
sbb
cmp
inc
lcall
cli
out
sti
and
or
push
inc
jecxz
jge
jb
push
push
outsb
lds
xor
xchg
fimuls
add
cmp
shl
scas
les
push
test
adc
jne
xchg
scas
mov
fnstsw
dec
mov
rcrl
addr16
adc
arpl
cmp
sub
or
out
ficomps
dec
or
imul
jmp
shlb
sub
adc
xor
testb
lret
mov
pop
jae
lcall
inc
shrl
nop
push
xchg
and
or
mov
ret
push
ficoms
jno
jo
jle
not
nop
jo
mov
lcall
jg
dec
fs
lcall
scas
add
sbb
js
icebp
inc
aas
xchg
mov
jo
test
xor
scas
jp
lcall
cmpl
xor
fisttpll
sti
in
xor
push
popf
add
adc
jl
lock
jmp
dec
push
lret
mov
inc
lods
push
mov
insl
in
jo
sbb
data16
inc
and
int3
sbb
adc
das
fwait
inc
or
daa
mov
inc
jmp
cmp
in
xor
and
mov
sub
cli
xchg
xchg
pop
lcall
ds
cmp
and
int3
mov
xor
lods
gs
cld
sar
sbbl
dec
pop
push
xchg
mov
adc
adc
inc
add
lcall
adc
sub
add
xchg
popl
inc
pop
lods
adc
cmp
adc
mov
sbb
xchg
push
cmc
in
adc
dec
test
daa
dec
ficomps
popa
mov
cltd
jp
leave
pop
push
lcall
addr16
incl
xchg
stos
add
push
jne
jmp
mov
push
lcall
dec
adc
adc
sub
dec
mov
insl
loopne
aad
inc
outsl
push
lods
sub
mov
add
mov
push
pop
test
add
dec
adc
and
arpl
jle
test
mov
rorb
xlat
imul
pop
pusha
xchg
pop
dec
pop
adc
in
fildll
movsl
adc
xchg
adc
sbb
fsubs
stos
sub
stos
das
shll
jbe
bound
mov
or
lret
daa
adc
dec
or
xor
add
sbb
fwait
in
testl
jmp
push
xchg
push
js
aad
imull
xchg
enter
xchg
xchg
repnz
ds
xchg
orb
sbb
jne
inc
pushl
xor
or
xor
xor
pop
adc
repz
dec
jmp
xlat
lock
les
loopne
cltd
cmp
fwait
pusha
push
fsubl
adc
insl
jmp
mov
sub
stc
pop
lock
aam
cmpsb
aad
fwait
mov
test
jge
sub
test
adc
adc
dec
mov
xlat
push
sbb
mov
sub
xlat
cmpsb
push
imul
dec
inc
xor
mov
lods
std
cmp
das
push
ror
jmp
loop
sbb
stos
add
rorl
and
cli
inc
sub
mov
push
sub
cmp
or
test
pop
mov
cmp
sbb
inc
js
in
adc
mov
daa
push
pop
insl
lods
push
add
dec
sub
mov
scas
pushf
push
inc
cmc
jne
dec
push
scas
and
movl
push
fcomps
roll
fdivl
xchg
std
subb
adc
loopne
xchg
sub
adc
lahf
fistl
pop
aad
out
push
push
repnz
inc
jle
shl
pcmpgtw
pop
mov
stos
mov
adc
ljmp
adc
mov
mov
xchg
and
les
xor
mov
addb
inc
adc
inc
lahf
lcall
stos
cmp
fistpl
dec
leave
sar
jns
cmp
inc
out
mov
popl
cmp
jmp
testb
in
sar
push
push
icebp
mov
nop
test
mov
jnp
pop
jp
cmp
test
push
or
sbbl
outsl
or
je
rclb
lock
dec
mov
idivb
mov
xchg
test
punpckhdq
cmp
push
insl
fisttps
sahf
fs
stc
les
push
jae
pushfw
sar
movsb
xchg
xor
mov
mov
rorl
test
je
cmpsl
mov
mov
mov
and
out
aad
test
push
fidivrs
ja
lea
imul
mov
test
push
sarb
dec
dec
imul
movsl
xchg
aad
dec
pop
inc
fcmovnbe
push
sub
ss
mov
and
mov
inc
add
xchg
fldt
pop
in
das
cmpsb
aam
stos
rcrb
mov
outsb
ficompl
inc
mov
or
pop
jp
outsb
jae
push
clc
pop
and
cmp
mov
addl
xor
lret
fdivl
push
adc
xchg
pop
insl
mov
push
shlb
int
aaa
pop
mov
mov
xchg
mov
inc
cmp
daa
jecxz
push
js
push
xor
pushf
scas
mov
jnp
icebp
sti
decl
fnsave
lock
mov
dec
mov
movsl
loop
lods
leave
jae
insl
ror
repnz
icebp
int3
roll
mov
jns
subb
negl
xor
lret
pop
adc
mov
or
in
lea
mov
push
jo
enter
call
dec
jp
jae
jb
jmp
fwait
scas
test
aas
xchg
and
sbb
arpl
add
dec
dec
or
adc
jecxz
sbb
jmp
jnp
mov
sti
lret
jp
push
lods
sub
cmpsl
shr
cmp
xchg
jmp
jo
or
cmp
lahf
blcmsk
push
fcom
js
ss
cmpsb
ja
add
sbb
inc
je
cmp
mov
sbb
dec
lock
jnp
push
int
cmpb
jae
lods
xchg
sbb
push
icebp
bound
mov
stos
in
bswap
lock
lcall
shrl
adc
pop
or
xor
mov
clc
das
jmp
add
dec
lea
inc
mov
sbb
cwtl
insl
add
sbb
jo
xchg
daa
or
jecxz
add
dec
mov
or
add
inc
and
mov
dec
insl
or
push
adc
push
add
aas
ljmp
in
xchg
pop
out
push
pop
jmp
shrb
pop
sub
add
mov
or
push
stos
push
and
divl
inc
std
add
orl
xlat
jle
and
lea
cmp
cmp
lods
in
sbb
repnz
not
mov
mov
pop
mov
or
ljmp
outsb
jbe
in
data16
adc
je
mov
pushf
insb
pop
ja
cmpsl
jb
mov
cmp
xor
push
movsb
cmp
sub
in
xchg
inc
adc
sbb
cld
movsl
addr16
lods
jle
mov
xchg
cmp
leave
jg
scas
dec
mov
divb
mov
imul
nop
or
gs
and
idivb
sbb
dec
or
mov
shrb
out
push
cmp
sbb
and
push
adc
adc
das
fbld
cmp
movsl
jle
sti
lret
nop
ret
xchg
es
hlt
nop
les
sub
cmpxchg
insl
add
idivb
insb
sub
or
mov
add
push
dec
xor
mov
xor
pop
stos
fnstcw
adc
jb
add
ss
push
stos
mov
adc
add
popa
int
or
sbb
adc
int3
xor
inc
adc
adc
rorb
adc
rcrb
in
pusha
sbb
mov
mov
stos
in
leave
ss
arpl
fcmovnbe
adc
sub
mov
or
std
das
fs
outsb
adc
loop
int
sarb
inc
jg
dec
pop
pusha
xchg
push
push
mov
outsl
fwait
xor
icebp
test
mov
les
daa
shlb
push
sub
xor
and
popa
insl
jne
jmp
and
in
pop
xchg
and
aam
les
insb
loope
inc
xchg
pop
sbb
cmp
push
cmc
in
jns
adc
fnstsw
and
ss
and
orl
outsl
and
jg
jl
add
lret
dec
or
stos
mov
shlb
or
and
mov
testl
shl
mov
add
xor
adc
icebp
hlt
push
or
jl
aad
sbb
xchg
int3
pop
push
xor
decl
xchg
aas
mov
pushf
into
xchg
push
mov
xor
sti
or
dec
and
jmp
clc
sub
sub
outsl
and
fs
mov
mov
or
xchg
cs
loope
and
cmp
data16
sub
leave
mov
scas
cli
aam
xor
lret
hlt
mov
shr
mov
aam
cs
mov
movsb
jg
rol
sbbl
inc
mov
lahf
lahf
mov
pop
iret
xchg
in
lret
insl
mov
pop
lcall
loope
and
inc
rorb
rep
fs
arpl
pop
sbb
in
ljmp
cld
js
adcb
stos
xor
negb
or
lods
xchg
leave
enter
jl
lods
jge
pop
pop
shl
add
xchg
and
insl
repz
aaa
adc
cmp
lods
push
or
dec
jmp
fwait
xor
xchg
pop
jp
or
imul
imul
jl
sub
std
repz
mov
andl
mov
push
shlb
xchg
adc
in
arpl
pop
ljmp
ret
dec
pop
hlt
ucomiss
mov
sahf
and
stc
and
insb
mov
test
popa
xchg
mov
les
inc
stos
out
mov
les
movsl
xorb
mov
sbb
inc
and
pop
mov
mov
out
pop
iret
mov
push
ja
pushf
xor
and
nop
jl
es
pop
in
mov
dec
pusha
repnz
xchg
push
cmc
adc
lds
stc
xor
fdivl
ja
rorb
inc
mov
push
xchg
add
push
pop
daa
je
push
mov
mov
cmc
cwtl
fisttpll
pop
into
call
xor
ds
inc
sti
jge
push
fcmovnu
test
lahf
pop
stos
jge
and
in
mov
mov
cmp
pop
push
mov
test
fwait
xor
xlat
ljmp
imul
cmp
jae
xorl
hlt
lcall
js
add
push
xor
cmp
adc
pop
and
mov
lret
xchg
push
daa
inc
flds
adc
adc
sti
outsl
iret
lret
aam
sub
add
js
mov
sub
lahf
sahf
test
adc
xchg
cltd
jmp
ljmp
mov
int3
fimull
sbbl
jb
insl
push
rol
or
dec
call
mov
les
fld
push
cmc
sub
mov
add
or
or
or
sub
mov
and
in
lret
adc
push
cld
inc
sub
scas
insb
pop
inc
sbb
inc
dec
mov
mov
mov
jp
daa
iret
rcrl
arpl
test
aaa
vucomiss
inc
mov
dec
popa
or
mov
loop
scas
and
sbb
and
loopne
imul
cmp
xor
sbb
es
nop
push
push
test
push
mov
mov
out
imul
add
scas
std
mov
pusha
lret
pushf
dec
sub
xchg
xchg
cs
fs
out
in
jnp
fimuls
daa
js
loop
and
cmc
aas
and
cltd
dec
lret
out
dec
xchg
xchg
cmc
dec
xchg
inc
jle
cmp
jge
xchg
sahf
ret
daa
imull
arpl
jno
jp
adc
mov
out
out
mov
in
ja
pop
mov
gs
test
jns
add
pop
xchg
test
mov
ret
fldenv
mov
loop
push
fcomi
sub
test
scas
jbe
push
out
dec
fdiv
jmp
fidivs
xlat
sbb
xchg
mov
and
outsb
jno
cmp
dec
add
push
rcl
test
sbb
pop
jge
cmp
pushl
lcall
shlb
sbb
inc
sbbb
sbb
hlt
jo
pop
mov
nop
test
mov
iret
and
jns
bound
adc
adc
mov
dec
lods
or
lret
add
ret
movsl
jle
and
dec
push
pop
rcll
pushf
dec
push
push
xor
jbe
gs
ljmp
lock
bnd
or
js
push
pop
push
mov
insl
adc
mov
shl
lcall
and
xor
xchg
xchg
xchg
lret
sbb
sbb
movsb
cmpsb
es
ret
fidivrs
outsb
enter
push
in
xor
xchg
or
xor
push
adc
push
iret
add
sub
mov
mov
add
jle
fiaddl
adc
sub
adc
mov
clc
add
push
mov
push
out
jle
xchg
push
mov
xor
sub
push
leave
outsl
ret
test
pop
stc
jbe
xchg
cmp
cwtl
lods
jle
jp
rclb
arpl
inc
repz
cld
daa
sbb
push
pop
adc
pop
movsl
dec
push
in
movsl
stos
fldcw
xchg
sub
dec
xor
xor
or
fildll
fs
stos
pop
es
sbb
stos
dec
mov
insb
mov
sub
inc
cmp
push
dec
fldcw
inc
in
roll
mov
mov
ret
pop
movlps
sbb
xlat
sahf
dec
enter
arpl
push
test
or
leave
shlb
pushw
fmull
imul
sub
out
mov
xchg
imul
call
cli
sub
inc
fsubr
xchg
xor
dec
ljmp
scas
cmp
mov
pop
and
dec
lods
mov
sbb
imul
mov
xlat
shlb
dec
ret
aam
adc
sbb
jae
mov
cld
xchg
in
pushf
and
rcrl
movb
mov
push
movl
push
jp
or
xlat
arpl
sub
and
mulb
jl
mov
mov
jno
mov
aam
repz
cltd
pop
xor
idivb
pop
or
fcomps
scas
adc
mov
movsl
and
xchg
shlb
xor
loopne
adc
push
xchg
in
ja
xor
pop
pop
xlat
testb
hlt
in
lret
hlt
inc
cmp
add
mov
mov
mov
sub
dec
nop
jmp
outsb
fwait
adc
movsl
loope
dec
cmc
loopne
mov
stc
fsubr
push
fsubs
lods
out
mov
mov
insb
and
lods
test
enter
jb
jbe
int3
and
insl
jae
scas
ficompl
lahf
cli
fcomps
cmp
daa
jb
mov
out
sarl
rcrb
fcmovbe
add
mov
add
push
jno
fdivrs
mov
ljmp
mov
adc
pop
rol
jo
push
jo
jl
js
pop
and
jg
out
xchg
jg
mov
aad
stos
sub
cmp
in
ret
inc
sub
out
add
jecxz
mov
xchg
or
add
adc
jne
sub
cs
mov
outsl
pop
mov
out
xlat
cmpsl
stos
lret
xor
leave
sbb
sub
or
je
jecxz
xor
das
lea
daa
cli
mov
jns
pushf
mov
ja
movsb
std
jecxz
mov
lea
int
pop
or
push
fldenv
test
faddp
cld
pop
xchg
jmp
xchg
xchg
mov
out
push
sahf
std
sub
fsubs
iret
pop
popf
mov
mov
mov
test
mov
jl
inc
push
lods
mov
out
mov
testl
hlt
sbb
test
mov
mov
stc
mov
inc
test
mov
rcl
adc
loope
cmp
test
lcall
xchg
mov
push
into
inc
aad
test
sar
pusha
mov
in
jns
icebp
lods
rcr
add
shlb
testb
cmp
mov
xchg
jge
adc
add
les
push
mov
pop
fcompl
dec
mov
mov
std
lods
mov
mov
fistps
movsl
jne
addr16
lret
ljmp
popf
lcall
lcall
jmp
push
les
mov
pop
insb
pop
and
push
xor
xlat
pusha
pop
pop
pop
pop
les
jo
seta
sub
rcr
dec
and
mov
and
inc
lock
jne
rcll
test
lret
lcall
jecxz,pt
xor
mov
inc
outsb
pop
add
inc
daa
xor
addl
cmc
mov
push
cmp
out
xchg
lret
jb
test
dec
inc
mov
stc
dec
jne
stos
sub
imul
sub
jl
lock
sbb
test
mov
rolb
xchg
scas
lds
cmp
jg
int3
jg
mov
push
xor
daa
xchg
adc
in
fisttpll
icebp
inc
test
shlb
mov
pop
scas
xchg
mov
test
add
adc
mov
in
call
push
xor
movsl
xchg
mov
mov
mov
js
mov
xor
and
mov
inc
mov
call
jns
cli
jne
fidivl
mov
pop
push
push
repnz
dec
sbb
sub
jg
aas
xchg
sub
add
inc
mov
int
mov
gs
pop
pop
inc
dec
xor
push
jbe
mov
dec
fistl
jnp
jge
xor
inc
push
lcall
sarl
aam
mov
movsl
loop
enter
outsl
pop
xchg
lcall
mov
enter
cwtl
lds
mov
adc
ret
add
psrlw
xor
int
cmp
enter
popa
addr16
out
pop
sub
mov
sbb
pusha
call
ret
jbe
test
pop
pushf
popa
push
or
ljmp
push
ja
jb
jbe
ret
roll
std
loop
push
push
gs
mov
mov
xchg
or
sub
and
repnz
aas
inc
inc
jmp
mov
jmp
stos
jnp
cli
mov
lods
jns
enter
jg
mov
aaa
push
dec
mov
dec
push
int3
sub
cmp
dec
dec
cli
sbb
fwait
mov
inc
sbb
push
inc
xchg
mov
jmp
add
test
sti
scas
mov
out
mov
jmp
mov
push
ret
pop
sbb
ret
pusha
fld
xchg
fstpt
ja
nop
push
or
inc
aam
lcall
jmp
push
rcr
repz
adc
lahf
jmp
lods
mov
inc
mov
mov
je
adc
pop
hlt
ja
lcall
push
sbb
mov
dec
rcrl
dec
popf
sbb
and
sarl
int3
into
lret
xor
push
mov
mov
pop
xchg
jge
sbb
popf
sub
cmp
pushl
mulb
sti
sarl
fs
mov
push
repnz
repnz
test
leave
push
push
add
push
xchg
mov
or
push
push
mov
pop
sub
in
xor
dec
mov
ljmp
js
fidivrs
insb
add
in
ss
sub
xchg
dec
mov
pop
sbb
out
xchg
xor
jns
ja
pop
or
sub
std
sbb
pop
mov
add
fistl
pusha
testb
mov
fwait
push
insb
xchg
jmp
cmc
das
insl
xor
jle
into
mov
pop
xchg
dec
adc
push
sbb
lods
dec
insb
push
cmc
pop
gs
pop
add
sbb
jb
int3
inc
fs
jp
shll
ja
movl
fmul
loope
int
arpl
std
mov
jne
sbb
push
jg
cmp
inc
test
xchg
mov
lods
or
or
popf
mov
xor
mov
int
clc
xchg
je
scas
xchg
pop
stos
add
push
add
xchg
dec
enter
inc
xor
js
push
adc
ljmp
outsb
mov
pushf
repnz
sbb
lods
sub
test
mov
xchg
adc
push
loop
imul
and
hlt
or
mov
rclb
mov
popa
pop
xchg
ds
mov
pushf
add
rorl
sbb
cmc
sbb
mov
test
xor
leave
mov
jge
cmp
stc
orb
je
mov
jp
pop
xor
jo
jle,pn
push
inc
fiaddl
cmp
ss
and
xchg
mov
push
pop
mov
call
mov
cmp
xchg
popa
rcr
push
add
jmp
daa
test
flds
cli
mov
jae
test
pop
out
push
dec
inc
sbb
js
pop
loope
and
lea
fidivs
std
cmp
lahf
cmpsb
popa
push
test
repnz
jp
push
cmp
cmpsl
mov
mov
pusha
sbbl
push
into
shll
jns
or
jmp
xorb
jno
dec
out
xchg
mov
ret
addr16
mov
icebp
loope
xor
shll
sbb
sbb
rorl
pop
jmp
cld
inc
outsb
xchg
mov
xchg
loop
pop
lret
xchg
and
das
cmp
dec
je
rclb
mov
dec
push
lds
and
cmc
cmp
aaa
fnstcw
xchg
or
dec
lods
cmc
mov
mov
mov
mov
pop
por
test
repnz
add
rorl
pop
push
in
or
push
sub
push
and
stos
imul
or
subl
bound
scas
bound
in
outsb
pop
pop
lahf
daa
pop
lret
sbb
dec
int3
icebp
jnp
jno
jno
addl
xor
mov
sarb
or
rolb
jne
loopne
popf
xchg
shlb
addr16
dec
mov
mov
ds
ds
loop
mov
sahf
jo
fiadds
xchg
sbb
sub
in
fdivp
xchg
nop
jmp
fisttpl
icebp
les
cmp
jmp
loop
jmp
pop
stc
je
xchg
mov
or
sti
cmc
ss
mov
push
pop
xchg
or
lods
add
in
iret
clc
sub
sbb
pop
or
fldt
sub
jne
push
aaa
orl
stos
lcall
das
xlat
popa
outsl
xor
and
outsl
pop
pop
adc
cmp
fdivl
jmp
inc
int3
mov
inc
jne
or
and
andb
mov
aaa
out
pop
add
mov
xor
enter
push
rclb
in
add
aam
jle
lods
xchg
jl
sub
inc
lea
pop
scas
or
test
testl
rcl
mov
dec
mov
popf
into
inc
mov
add
or
arpl
stos
cltd
jb
hlt
insb
sbb
lret
cld
popf
fsts
lods
mov
cli
pop
lcall
movsl
aam
cmpsb
adc
je
jnp
invd
into
mov
out
adc
rclb
jnp
cmovl
or
mov
call
dec
inc
insl
jle
mov
cwtl
int3
sub
or
pop
xchg
pop
xchg
dec
pushf
add
adc
mov
fidivs
and
cmp
pcmpgtd
sbb
loopne
dec
push
data16
outsb
leave
adc
mov
add
les
sub
xchg
add
or
daa
xor
push
loop
es
pop
pop
loop
imul
aaa
ret
or
jl
jne
cld
and
lock
mov
cmp
sbb
sub
and
icebp
loopne
jbe
insb
push
sbb
negb
or
sub
pop
js
jmp
scas
lret
loope
or
call
aas
sti
mov
sbb
mov
loope
mov
aaa
sub
pushf
mov
lds
mov
mov
xor
mov
scas
push
pusha
mov
ret
lods
enter
and
stos
imul
into
scas
data16
xchg
dec
xchg
in
pop
sbb
stos
sbb
add
mov
add
cmp
cmpsl
xchg
add
sbb
iret
mov
call
std
jl
daa
lock
faddl
stos
sbb
mov
or
fbstp
cli
andb
subb
in
xor
cld
push
scas
cmp
rcll
into
xor
aaa
mov
mov
shlb
ss
or
xchg
pop
mov
fdivs
jle
mov
adc
es
or
dec
insb
lea
sbb
aad
and
inc
rcrl
jns
mov
fildll
mov
cmp
rcrb
gs
jle
clc
adc
jne
inc
xor
dec
inc
xor
push
mov
inc
fstpt
call
outsl
fcmovnb
push
sbb
lcall
testl
cmp
xor
xor
shl
push
mov
enter
dec
push
aam
sti
mull
mov
xchg
pop
jae
popa
push
cmpsb
ljmp
lret
pop
shl
adc
push
addr16
xchg
insb
lret
lods
fst
ja
mov
test
jns
hlt
gs
push
bound
pop
add
jl
int
fistpl
mov
bound
movsb
mov
in
mov
ss
andl
sbb
insl
lea
push
push
mov
push
outsl
fbstp
push
and
sbb
jge
xchg
mov
xor
adc
pop
addr16
inc
mov
jecxz
int
hlt
push
cmp
aam
cs
sub
or
js
mov
jmp
sarl
mov
jmp
leave
jmp
jp
outsl
lahf
push
adc
les
pop
adc
mov
addb
adc
push
out
pop
adc
loope
sub
or
fidivl
idivb
xor
test
cmp
sub
fistl
xchg
push
mov
and
lds
inc
push
fcompl
rorl
pop
xor
adc
cmp
cltd
sub
leave
xor
push
sbb
sbb
jecxz
mov
shlb
push
mov
in
test
jno
sbb
insb
xor
test
outsl
pop
rcrb
fisttps
shl
jae
sbb
fsubp
inc
fwait
or
jno
pop
mov
add
in
pop
loopne
push
incb
aam
andl
sar
inc
sub
notb
repnz
pop
pop
daa
cmp
nop
inc
xchg
xchg
add
inc
scas
pop
adc
sub
xchg
popf
xchg
adc
mov
lcall
add
xor
cmp
fbld
add
test
popf
cmpb
push
xchg
cmp
mov
push
cmp
inc
popa
subb
mov
or
xor
sub
jb
cmp
cmp
xchg
sub
insl
xor
xchg
sub
mov
sub
mov
popf
inc
mulb
xchg
sbb
push
rorl
mov
cmp
inc
repnz
lods
mov
sahf
xlat
mov
into
loopne
inc
lret
das
and
adc
push
es
les
lcall
pop
imul
outsb
jg
pop
xor
push
xchg
xlat
inc
hlt
jp
outsb
ret
xchg
push
push
mov
daa
adc
mov
test
inc
push
mov
in
jecxz
nop
push
dec
cli
jae
out
add
aam
or
adc
and
stc
mov
mov
mov
jo
add
sti
adc
daa
outsb
in
jle
fs
jg
pop
pop
cwtl
push
gs
mov
jecxz
addr16
jo
dec
ds
std
rcrb
in
mov
outsb
jle
push
jno
mov
icebp
ja
add
ffreep
std
or
mov
sub
daa
out
addr16
nop
lea
push
lahf
jnp
jg
jne
push
imul
mov
cmp
add
sub
int3
or
shll
aaa
cmc
int
dec
mov
ret
int
sti
sub
dec
out
fbstp
lods
or
test
shll
rol
push
push
inc
xchg
iret
xchg
sbb
je
cmc
or
push
sub
or
sahf
and
lods
test
sub
repz
insl
test
adc
push
test
and
mov
cmp
popl
jecxz
and
daa
insl
js
cmpsl
divb
incl
stc
jo
pop
mov
jae
mov
fsubp
mov
pop
mov
faddl
jb
scas
sub
or
dec
fimuls
adc
bound
dec
mov
out
inc
outsl
repnz
push
xchg
or
outsb
leave
test
arpl
adc
fstpl
pop
push
js
xchg
outsb
and
outsb
in
lret
mov
pop
les
insl
pop
es
fs
in
push
into
pushl
test
inc
nop
lods
or
cmp
ss
movsl
ljmp
ret
mov
dec
add
js
jge
sub
inc
lea
data16
int3
and
pop
push
xor
pop
outsl
jne
das
xorb
aad
lods
pop
push
test
jnp
lods
outsl
cli
xchg
minps
decb
push
mov
mov
and
nop
int
out
push
ficoml
into
scas
xchg
jb
mov
test
mov
cwtl
push
adc
scas
xchg
xchg
mov
into
movsb
cmp
cmpsl
push
lcall
and
aad
loope
test
add
cmp
xchg
sti
and
stos
jae
or
xor
imull
push
xor
mov
or
and
je
loop
cmp
inc
push
shrl
arpl
and
loop
popa
jecxz
push
pop
jmp
fldenv
ret
xchg
inc
rclb
lahf
mov
lcall
sysenter
mov
mov
call
cltd
dec
outsb
in
mov
sbb
jg
fsubrp
inc
mov
test
jb
outsl
out
daa
mov
leave
mov
add
sbb
int3
test
pop
adc
xlat
cmp
jl
jae
mov
add
sbb
rolb
iret
adc
ror
aad
imul
stos
and
aaa
add
or
add
inc
addr16
lcall
push
roll
les
dec
into
rcl
cld
adc
out
pop
xor
mov
out
push
imul
push
sbb
jnp
jnp
std
imul
rolb
ret
and
stos
sbb
fadd
idivb
push
bound
je
mov
fcoml
addr16
test
cmp
out
xorl
push
pop
aad
popf
sub
xlat
xchg
movsb
jge
pushf
popf
push
mov
lock
jecxz
ret
les
stc
loop
sub
lret
out
cmpsl
mov
mov
shr
push
jnp
push
fcompl
and
jb
xor
xor
out
add
pop
mov
or
push
dec
outsb
int3
xchg
xchg
push
cmp
aad
xchg
or
test
enter
aam
jne
push
aaa
rclb
cmp
inc
jle
stos
jmp
movsl
and
and
imul
xlat
cwtl
jecxz
mov
xchg
xchg
into
in
push
shll
popf
adc
shll
out
lret
push
mov
cli
pop
xor
ret
outsl
mov
jns
xchg
add
nop
jl
cmp
pop
scas
pop
scas
or
jmp
fnsave
mov
dec
dec
sub
or
sub
mov
pop
out
insl
add
nop
jae
clc
mov
sub
clc
and
addl
xchg
cld
fidivl
repnz
or
dec
insb
das
push
scas
inc
pop
cmp
orb
fdivrl
into
add
inc
and
dec
xor
and
mov
fldl
test
mov
adc
push
push
bts
dec
filds
push
xchg
xchg
sbb
jo
sbb
add
lcall
inc
insb
lcall
hlt
xchg
adc
pusha
xchg
jne
shll
dec
xor
fistps
mov
decl
xchg
movsl
xlat
push
dec
pop
cwtl
xchg
test
mov
addr16
adc
dec
mov
jmp
lea
xchg
inc
lcall
adc
psrld
fdivs
and
inc
xchg
xor
shr
clc
lret
aad
and
les
test
push
xchg
lret
movsb
push
icebp
sbb
adc
xchg
nop
leave
hlt
adc
mov
lock
xchg
arpl
mov
mov
shll
xchg
test
aaa
hlt
xchg
dec
add
jb
mov
enter
adc
hlt
in
das
add
mov
leave
or
stos
insl
inc
mov
dec
mov
loope
cld
aaa
outsb
pop
call
movsb
push
xchg
dec
sbb
hlt
adc
je
mov
mov
mov
testb
push
add
loop
clc
les
not
dec
jp
enter
mov
fiadds
add
aaa
pop
frndint
xor
jbe
add
lock
mov
scas
mov
jns
ret
or
adc
rorb
sbb
add
mov
push
mov
gs
xchg
sar
aad
gs
fdivl
mov
sarb
sbb
mov
pop
fldenv
leave
sti
lcall
mov
fidivrs
enter
xchg
or
into
insb
sbb
addr16
in
xchg
push
pop
fucomip
dec
das
xchg
call
test
mov
stc
mov
shlb
fnstcw
pop
int3
dec
cmpsl
sub
enter
cmpsb
ljmp
loopne
aas
sub
test
xchg
fstp
dec
out
movsl
neg
mov
test
test
cmp
sub
mov
fadds
add
into
mov
lock
cs
add
mov
xor
shrl
mov
cmp
add
loop
popa
ficoms
out
cs
addr16
sbb
and
push
and
mov
push
hlt
adc
test
pop
dec
xchg
mov
dec
in
sbb
jo
xlat
cmc
push
adc
mov
cwtl
cwtl
mov
das
jnp
cmp
push
fidivrl
mov
test
push
dec
jae
lret
movsb
push
xor
leave
test
mov
mov
and
xchg
pop
dec
sub
gs
mov
test
mov
sub
xchg
das
cs
xor
add
xchg
ret
cmp
jp
push
or
aam
scas
imul
dec
push
lret
inc
movsl
flds
and
nop
mov
sahf
dec
ret
out
mov
test
mov
leave
mov
jb
add
xor
mov
pop
aad
into
out
push
es
mov
pop
sub
call
mov
fwait
push
je
inc
or
ret
mov
repz
mov
lods
loop
and
mov
aaa
ror
mov
sbb
jns
cmp
pop
jp
cmp
repnz
adc
push
or
push
fcomps
mov
cld
adc
xor
adc
adc
xchg
jb
adc
fnstsw
je
out
dec
sub
rcrl
lret
loopne
inc
push
clc
lea
cmp
jg
xchg
xchg
dec
jbe
pop
push
sub
out
int
adc
cmpsl
jo
fstpl
out
mov
lods
xchg
sahf
mov
aad
scas
inc
adc
pop
mov
xchg
cli
dec
mov
sbb
mov
cmp
loope
rcrl
sbb
fidivs
je
mov
pop
cmc
sub
xor
adc
aas
xchg
jo
mov
and
and
mov
dec
inc
and
jl
stos
jae
enter
mov
shrl
jae
pop
dec
push
or
out
popf
fs
xchg
notl
outsl
mov
lahf
aas
pop
sbb
leave
arpl
adcb
ljmp
jp
mov
fs
mov
insb
stos
ficomps
add
add
out
sub
inc
cmpsb
jo
orl
pop
sbb
cmpsl
int
clc
pop
jbe
ds
xor
call
mov
popa
pop
add
push
add
and
mov
cmpsl
mov
inc
sahf
mov
out
mov
mov
inc
fildll
xchg
rolb
insb
or
dec
lret
xlat
stc
pop
push
pushl
sub
je
nop
pop
dec
jmp
test
idiv
ljmp
xor
sbb
add
xchg
addr16
xchg
bound
push
shrb
out
leave
cmpsb
mov
jge
or
jae
jo
js
jbe
or
sbb
jne
std
adc
add
int
mov
ret
lds
add
clc
pushf
cmp
lds
cmp
add
cmp
fidivrl
test
mov
push
test
rolb
nop
and
pushf
push
popf
adc
jmp
sub
sub
test
call
push
jns
pop
adc
das
or
fs
in
bswap
das
push
imul
push
pop
pop
imul
in
sub
dec
in
fdivr
shl
or
stos
or
loopne
je
lret
imul
sbb
mov
orl
das
jb
jo
fisubs
and
xchg
lcall
add
dec
js
out
mov
lods
movsl
aas
shll
ljmp
loopne
lock
xchg
sbb
mov
lret
scas
adc
mov
cli
mov
inc
add
mov
cltd
fdivl
inc
idivb
xchg
cs
sbb
cmpsl
inc
in
addr16
sti
addl
out
or
jo
pop
or
fdivrs
imul
gs
mov
xor
sbb
xor
and
inc
mov
mov
push
adc
addr16
inc
hlt
les
lcall
notb
stos
adc
loopne
shlb
pusha
icebp
imul
imul
test
int3
mov
loop
dec
sub
xor
imulb
pop
shrb
xor
aam
decb
add
inc
inc
js
dec
xchg
bound
jl
jle
fistpl
sbb
dec
repnz
jmp
xorl
rcrb
test
andl
popa
leave
or
movsb
lret
nop
addr16
in
sub
pop
push
inc
lahf
adc
push
inc
xchg
lods
test
sbb
aam
add
jecxz
push
xchg
sbb
push
ds
jno
mov
jo
push
add
push
push
pop
xor
into
in
inc
adc
adc
cli
sub
mov
pop
mov
fimuls
in
mov
pop
dec
mov
aas
adc
sbb
cmpsb
pop
es
jb
testl
dec
sarl
jmp
push
outsl
jecxz
js
clc
lret
ret
sahf
adc
mov
push
clc
shrl
das
mov
jb
cmpsb
movsb
push
pusha
cld
das
aam
mov
fdivp
popf
faddl
cmovnp
lahf
cmpsl
hlt
bound
adc
push
jnp
lods
flds
and
cmpsb
vpunpckhbw
sbb
push
js
lcall
xchg
cmp
pop
movsl
gs
mov
js
std
mov
sub
je
test
mov
pop
test
rcrl
out
pushf
or
addr16
mov
dec
and
rol
and
pop
xchg
cli
cmp
jecxz
jo
lret
testb
pop
jns
les
ja
nop
cmpsl
fwait
adc
popf
aas
cli
and
clc
sub
movsb
fs
inc
dec
test
outsl
test
add
push
dec
dec
mov
add
rorb
mov
data16
mov
lcall
and
nop
pushf
xchg
arpl
stos
mov
mov
jle
stos
pop
add
mov
xchg
cmp
imul
mov
jge
rcrb
jns
int
jg
ljmp
ror
roll
jno
xchg
lods
arpl
pop
lcall
cltd
inc
data16
pop
clc
fmul
loope
add
je
inc
mov
pop
sahf
mov
data16
lea
or
mov
inc
rclb
cmp
inc
daa
repz
iret
fistpll
xor
shlb
and
dec
lcall
sub
or
xlat
adcl
movsl
push
push
pop
nop
pop
loop
jbe
movsb
push
push
jg
flds
loopne
dec
sbb
xorl
add
pop
mov
jb
addb
sbb
mov
adc
mov
test
mov
loope
mov
adc
cmpsl
and
arpl
sbb
pusha
jp
and
jns
in
lods
adc
xor
mov
shl
mov
ret
shll
clc
xchg
xor
sub
xor
cmp
subl
rcll
in
cld
pop
sti
or
dec
outsl
pop
sahf
cmp
cli
inc
cmc
xchg
pop
mov
jae
mov
aam
xchg
cld
xor
sub
adc
fsub
rep
in
pushf
adc
out
pop
and
sbb
mov
cmp
ret
mov
sbb
sti
add
ret
mov
ljmp
je
or
cmpsb
push
mov
mov
push
fisttps
std
popf
or
push
adc
lods
push
xchg
cmp
cmp
aas
ret
mov
test
cltd
dec
xor
mov
push
popf
leave
mov
mov
nop
mov
inc
fimuls
shr
cmp
insl
add
sub
movsl
mov
lods
pop
inc
imul
jo
push
push
adc
push
subl
movsl
insl
mov
dec
lods
shrb
test
das
and
and
jge
aas
in
stc
cmpsl
push
aad
scas
cmpb
loope
or
stos
inc
fisttpl
pop
lret
fildl
xor
mov
dec
mov
adc
push
sar
outsl
add
mov
adc
cmp
mov
ss
xchg
stc
xor
xor
adc
cmp
push
test
or
cltd
dec
clc
ljmp
cld
xor
push
mov
mov
scas
lcall
and
jb
cmp
lahf
push
sahf
mov
add
mov
push
pop
stc
int
call
fdivs
sub
cmpsb
jg
loopne
inc
cltd
jmp
fcoml
jae
push
jne
loopne
or
fs
mov
cmp
sub
je
mov
imul
out
addl
inc
dec
inc
shrl
lock
dec
scas
inc
aam
test
mov
mov
mov
cld
mov
aaa
ss
jg
adc
sub
and
mov
sub
daa
fisubrs
imul
fnstsw
cmc
fcompl
and
adc
inc
divb
fstpl
mov
inc
mov
xor
outsb
inc
repnz
cmp
jns
mov
inc
jp
mov
imul
add
loopne
mov
dec
push
js
mov
out
fildll
fisttpll
sbb
sbb
aas
sbb
add
enter
and
sub
sahf
mov
pop
repz
in
pcmpgtw
mov
test
outsl
mov
sbb
enter
sbb
std
movb
test
lret
scas
cs
jnp
xchg
scas
pop
jae
pop
shrl
ficoms
jecxz
popf
adc
push
mov
push
aaa
outsb
shlb
mov
sub
cmp
lahf
into
fsts
test
mov
test
xlat
pushf
and
jns
mov
fsubrs
push
cs
mov
cmc
sub
inc
dec
jg
mov
in
scas
fwait
shll
mov
push
sti
xor
cmp
xor
inc
dec
xor
mov
in
rclb
lret
and
cmpsb
push
push
jb
xchg
scas
inc
or
push
push
push
out
sub
movsl
xor
mov
imul
mov
sbb
mov
adc
and
enter
jns
xchg
xchg
mov
cmpsl
inc
ja
leave
and
or
in
cmp
stos
push
mov
cmpl
jmp
push
mov
or
leave
in
xchg
add
add
mov
mov
mov
mov
xchg
push
xchg
dec
add
imul
xchg
fistpll
dec
je
sahf
mov
or
repz
sti
rcrl
inc
pop
fadd
lahf
in
jecxz
adc
cmp
mov
into
mov
mov
sub
popa
arpl
icebp
call
fisttps
imul
jmpw
xor
ds
mov
ljmp
insl
addr16
xor
loope
dec
add
adc
fnsave
addr16
and
mov
ljmp
cltd
push
xchg
mov
mov
or
inc
mov
aas
push
fwait
sub
lret
stos
rcll
and
fs
jecxz
das
jns
in
aad
aad
call
jbe
inc
add
xchg
stos
add
or
subb
push
inc
lahf
xchg
xor
leave
jg
adc
sbb
ret
and
mov
jge
inc
test
jmp
jecxz
setl
mov
add
mov
sbb
test
xchg
test
pop
push
daa
cli
popa
cmpsl
scas
inc
in
jmp
aam
daa
iret
fs
and
repnz
push
mov
hlt
out
xchg
mov
lcall
fwait
mov
cmpsl
repz
cli
repz
mov
sbb
push
pop
push
pop
mull
push
and
jns
popa
outsl
jp
push
add
lods
pop
addr16
int
push
leave
ja
jae
pop
test
mov
ret
pop
dec
mov
mov
push
xor
ja
mov
mov
je
cwtl
fimull
inc
or
fistpl
xorl
movsb
inc
mov
ffree
es
call
mov
cmp
out
adc
data16
fsts
pop
mov
xchg
mov
adc
mov
inc
mov
pop
loope
xchg
push
and
pop
cmp
mov
and
jmp
pop
jl
addb
les
push
inc
fistps
sbb
aad
pusha
test
pop
test
jo
mov
mov
push
inc
jb
andb
xchg
pop
fs
pop
jecxz
out
mov
js
xor
inc
mov
test
mov
cmp
push
call
push
inc
mov
mov
jnp
sub
fimull
mov
sub
inc
jno
inc
into
sub
push
jp
pop
js
inc
add
add
aad
mov
arpl
call
xlat
jo
scas
loop
dec
cmp
movb
jg
xchg
gs
es
mov
sub
fidivs
stos
iret
cmp
dec
into
dec
add
inc
jbe
mov
outsl
call
call
add
lock
mov
pop
push
sub
dec
arpl
sub
cmpsb
or
and
pop
cmp
pusha
fsubrp
mov
ljmp
and
iret
mov
adc
shr
pop
push
orl
sbb
mov
add
inc
popf
rolb
ds
xor
outsb
and
aas
sbb
rcl
imul
xchg
mov
fbld
jae
mov
sbb
lods
inc
push
mov
sbb
or
jbe
dec
adc
imul
ss
das
in
inc
sti
int
arpl
add
rcll
sub
pop
push
cmp
into
sub
insb
decb
inc
aad
gs
fwait
sub
mov
mov
xor
mov
xor
mov
jns
hlt
lock
jle
nop
cwtl
jne
testb
inc
decl
jmpw
push
and
mov
mov
push
mov
xchg
jns
cmp
xchg
pop
ret
sbb
add
repnz
in
ljmp
les
orb
push
sub
inc
in
sti
test
test
std
icebp
or
loopne
outsb
jmp
scas
insb
xor
pop
leave
cmc
aam
and
sbb
insl
pop
pop
daa
push
jl
cltd
int
stc
movsb
bound
test
push
mov
mov
gs
ffree
subps
cmpsb
pushf
jle
rcll
jns
mov
xor
punpckldq
dec
ss
test
push
xorl
sub
or
push
cld
addl
cli
movsl
or
mov
pop
fnsave
push
xor
or
mov
lret
rcrb
pop
push
ss
loop
lahf
into
adc
cwtl
mov
loopne
bound
loope
mov
shll
xor
icebp
mov
sbb
mov
fsubrp
mov
aad
add
std
xor
mov
mov
cltd
rorl
mov
mov
sbb
ficompl
mov
lret
cwtl
popa
in
dec
xor
fs
xchg
ret
sbb
jge
in
jp
push
pusha
iret
lods
xchg
jne
push
je
pop
adc
jns
cmp
leave
out
test
movsl
sub
ja
add
and
sti
xor
dec
js
sbb
cmpsl
sbb
jo
xor
cmpsb
nop
lret
pop
repz
stos
cmp
pop
hlt
cmc
dec
add
lock
outsb
xchg
xchg
add
fbstp
sub
sahf
ljmp
xchg
pop
jle
aaa
xchg
js
jl
add
frstor
and
leave
lea
ds
xor
mov
mov
in
mov
cwtl
mov
mov
push
out
sub
mov
loopne
mov
jge
add
popf
in
aaa
mov
mov
adc
push
pop
dec
repnz
pop
dec
cmp
pop
adc
mov
inc
je
in
insl
push
or
pop
xor
add
ljmp
movsl
jecxz
andl
push
mov
aad
loope
or
jo
cmp
inc
xchg
lret
and
or
or
mov
ror
out
imul
movsb
cmp
test
inc
cmp
gs
popa
dec
pusha
mov
lahf
lock
int
or
fmuls
push
xor
mov
sbb
or
pop
jne
jo
push
mov
sub
xor
out
loop
add
mov
pop
xchg
inc
or
loope
in
sbb
jp
fucomip
mov
sbb
sbbb
push
mov
sbbb
stos
cld
clc
mov
out
mov
stos
gs
inc
and
pop
xchg
lcall
cmpsb
dec
mov
shrl
jnp
and
repnz
out
mov
and
mov
dec
and
adc
lret
in
out
push
ja
enter
jne
pusha
dec
repnz
out
adc
mov
xor
push
sbb
test
pop
xor
pop
jmp
jns
xor
lds
mov
mov
lock
dec
inc
cmp
in
jae
jg
xor
or
test
or
lods
mov
rorb
push
repnz
mov
jg
sti
mov
add
mov
or
add
stos
jb
dec
add
xor
fnstsw
lea
into
xor
mov
ret
jmp
push
or
inc
sbb
mov
sbb
es
xor
mov
std
lds
mov
adc
or
push
xchg
push
fistpll
jle
stos
inc
add
or
test
sub
or
in
add
test
xor
data16
mov
pop
in
lahf
pop
mov
stc
add
insl
pop
pop
add
sbb
fcoml
xchg
inc
je
mov
repz
sti
stos
fs
xchg
push
pop
pop
mov
aas
cmpsl
test
mov
or
sub
lcall
popf
push
sahf
or
cmp
push
fcmovne
dec
sbbb
xor
xchg
in
xchg
dec
in
dec
outsl
into
mov
ja
jae
loope
lods
ret
mov
pop
stc
mov
cmp
inc
les
aas
in
test
movl
xor
rorb
hlt
loop
push
lret
sub
je
push
inc
test
ret
pusha
sbb
lds
rol
mov
pop
loop
in
fldenv
dec
push
popa
sbb
enter
out
push
add
fs
loope
pop
cwtl
mov
mov
cmpsb
mov
ficoml
sub
repz
stos
sbb
out
js
xchg
push
sub
xchg
lods
je
mov
mov
out
lcall
sar
adc
imul
mov
sub
repnz
pop
ds
not
mov
arpl
pop
cmp
loop
out
adc
daa
cmpsl
push
pop
jns
push
xor
subb
pop
jnp
xor
mov
add
jo
lods
xor
push
mov
shlb
ficoms
cltd
inc
ja
xor
in
or
xchg
mov
lret
outsl
jno
iret
mulb
and
push
inc
jne
inc
mov
hlt
adc
jo
xchg
mov
call
fdivl
pop
cmc
sub
nop
push
mov
jae
mov
and
dec
stos
adc
wrmsr
pushl
mov
stos
stos
js
inc
adc
mov
or
push
cmp
inc
ss
jo
fwait
rcll
sub
bswap
iret
lcall
xor
lret
jecxz
pop
add
sub
xor
out
fsubrl
mov
mov
cmp
mov
dec
je
cmp
and
lock
mov
sahf
sbb
mov
add
pop
jns
lods
mov
adcl
mov
in
inc
mov
hlt
mov
out
mov
je
jp
test
sbb
or
push
popf
xbegin
test
shrl
repz
add
push
add
jnp
sub
and
bound
lret
in
rol
xor
faddl
lret
pop
mov
pop
out
xlat
sbbb
jno
sub
mov
lock
sbb
add
dec
out
add
lds
add
inc
imul
scas
addr16
ljmp
leave
push
fxtract
mull
xchg
jmp
pop
or
xchg
inc
fiadds
sbb
cmp
inc
add
sti
xchg
inc
fnstcw
adc
in
jmp
jnp
pop
das
cmp
sbb
cmpsl
addr16
xchg
scas
cmp
push
inc
mov
ss
xchg
lods
lods
stos
sbb
stos
sbb
xchg
popa
lret
nop
or
les
adc
mov
lret
jge
inc
les
sub
lahf
and
movsb
cmp
xchg
mov
xor
sbb
inc
mov
test
push
sub
sahf
and
sbb
mov
or
jne
scas
clc
iret
push
xchg
cmc
sti
xchg
pop
xor
imul
mov
push
mov
push
xchg
lock
dec
pushf
mov
rcr
push
loop
add
hlt
mov
xchg
fnstsw
sub
sbb
sarb
lahf
push
negb
mov
mov
inc
mov
arpl
add
je
daa
and
xor
gs
xchg
dec
jo
and
mov
sbb
popl
xchg
mov
insb
bound
pop
fs
jbe
add
leave
mov
outsl
add
out
iret
hlt
in
repnz
sbb
add
sub
dec
xor
xchg
sbb
mov
push
out
pop
notb
and
mov
mov
or
sub
js
arpl
mov
movsl
lock
lods
jmp
xor
jge
stos
scas
inc
das
cmpb
xchg
adc
stos
loope
lahf
cmp
cld
cli
fsubr
push
mov
test
into
mov
int
or
aam
pop
pop
or
das
mov
popf
xchg
sar
lea
daa
sti
out
adc
enter
cmp
mov
cmp
outsb
daa
jmp
adc
pop
mov
int3
add
dec
and
ja
out
cmp
repnz
mov
loopne
push
sbb
jge
mov
sbb
push
pop
loope
and
into
icebp
jo
mov
mov
dec
rcl
fldt
imul
test
call
jle
fimuls
fldl
xchg
jae
dec
push
mov
cmp
test
movsl
mov
xchg
ret
dec
cli
cmp
mov
lret
push
pop
xlat
ja
add
call
cli
cmpl
les
xchg
adc
push
cmpsb
les
xchg
movb
sub
push
shr
xlat
fldt
dec
mov
inc
repz
mov
mov
out
dec
ret
repz
cmp
xchg
and
aad
push
in
dec
push
insb
and
and
ret
repnz
fidivl
fidivrs
outsb
push
ljmp
mov
hlt
mov
cs
lock
jl
outsl
mov
mov
out
mov
dec
mov
jge
mov
sbb
inc
out
outsb
pop
mov
add
jns
mov
mov
lret
push
and
iret
ja
cwtl
je
jb
pop
pop
aad
ss
stc
int
repnz
xchg
xor
repz
sbb
cs
xor
and
add
cmpsb
lods
daa
dec
lcall
je
inc
cmc
xlat
lea
popf
cmp
xchg
enter
jbe
xorl
cld
or
inc
ret
and
xor
insl
fsubl
xor
lods
jl
mov
das
xor
mov
cs
aaa
sub
and
mov
int
cmpsb
xor
popf
sahf
xor
xchg
xchg
sub
data16
lods
setne
pop
inc
pop
jg
fbstp
test
shrl
add
xchg
out
cmp
pop
outsb
outsl
enter
test
push
inc
aaa
add
xor
mov
lods
inc
jle
or
test
sbb
shl
xor
add
mov
or
sub
or
dec
or
shl
jge
sub
sub
push
ret
mov
insb
xor
and
pushf
jno
ret
add
imul
into
mov
cmp
lock
adc
jle
and
jnp
push
lret
mov
jae
cmp
ret
cltd
xor
insb
leave
aam
mov
xor
push
js
lods
hlt
xor
fimull
lea
negl
cmp
sbb
lock
sbb
dec
pushf
loopne
ret
xchg
mov
and
push
push
add
cltd
mov
sub
dec
lock
js
adc
mov
mov
leave
sahf
push
push
cmp
add
push
adc
stos
hlt
cs
adc
mov
data16
in
xchg
pop
dec
cld
ja
dec
lahf
adc
add
dec
jns
mov
scas
lret
xchg
mov
mov
pusha
fwait
inc
adc
stos
sarb
jb
xor
or
sub
dec
cmp
outsl
lds
ret
out
pop
shlb
andb
or
or
js
mov
out
scas
lahf
push
jge
xchg
pop
cmpsb
movsb
es
jp
cmp
dec
testl
andb
outsb
adcb
jb
and
test
lret
mov
notl
sbb
jmp
movsl
jnp
inc
jb
adc
mov
movsb
dec
testl
add
cmp
xchg
mov
popa
sub
pop
mov
stc
mov
sti
mov
lcall
in
pop
cmp
mov
stc
xor
mov
and
test
push
daa
test
lret
lcall
test
in
and
in
ljmp
pop
popa
mov
cmpsl
repz
mov
and
ss
pushw
xlat
xchg
ror
lahf
loope
xchg
sarb
jp
adc
mull
lods
enter
aas
inc
jno
hlt
mov
enter
loopne
jo
lock
push
xorl
cmp
mov
loopne
lret
mov
fdivl
xor
xchg
test
arpl
sbb
jbe
lret
mov
add
addr16
outsl
or
fmull
pop
cmp
cmp
hlt
popa
xchg
mov
xchg
mov
push
sahf
xor
fsubrl
fidivrl
mov
cmpl
dec
pop
jo
mov
mov
mov
lock
add
adc
sub
test
pop
cmpsl
jge
test
and
mov
cltd
shld
push
xchg
std
out
mov
insl
mov
xchg
sub
rorl
out
push
add
in
pop
push
pop
sar
and
and
adc
pop
dec
rcl
xchg
pop
pop
xchg
int3
mov
or
pop
lods
sbb
shrb
adc
lods
push
add
inc
cmpl
mov
mov
push
cmp
pusha
mov
insb
in
and
jnp
lds
xchg
repnz
pop
inc
and
mov
decw
out
clc
jge
sub
stc
dec
pop
rcll
push
mov
push
pop
loope
fidivl
faddp
add
mov
in
insb
mov
xor
jno
pop
adc
and
sbb
jno
jb
xlat
xchg
movsl
movsb
fsts
lods
dec
dec
pop
shr
ljmp
cmp
icebp
add
cltd
fs
fadds
sbb
cld
adc
and
or
test
and
inc
cmpl
loope
sub
xor
pop
mov
and
scas
adc
loope
mov
push
fdivl
pop
push
aas
daa
les
dec
punpckhwd
aaa
push
loopne
mov
push
scas
cmpsb
add
rcr
notl
mov
test
clc
fildl
push
test
arpl
inc
cmp
es
incl
into
shrb
sbb
cli
nop
lds
mov
dec
jecxz
xchg
out
adcl
imul
popf
mov
xchg
or
xchg
push
iret
inc
aam
ja
shll
mov
dec
push
lea
inc
push
outsb
stc
push
mulb
jge
les
pop
daa
dec
scas
dec
in
sub
scas
out
inc
xchg
inc
pop
mov
loope
orb
jae
into
cli
lods
sub
faddp
push
icebp
cmp
in
lods
add
out
xchg
stos
js
cmp
adc
jns
sbb
lods
hlt
jnp
lcall
cmp
mov
push
jp
mov
ss
nop
pop
pop
add
or
cmpsl
sub
pop
adc
add
xor
mov
pop
sub
sbb
dec
daa
aas
movsb
fmuls
pop
in
cmpsb
pop
dec
push
xor
or
xchg
xorb
leave
orl
insl
fistl
ret
lret
adc
jg
fwait
ja
pop
pop
pop
loop
je
outsb
xor
rol
sub
push
jno
incl
and
fsubrs
leave
cmp
inc
imul
or
jge
cmp
pushf
xchg
push
iret
sub
dec
cld
or
jbe
xchg
fldt
inc
dec
mov
push
mov
cwtl
xor
imul
pop
push
mov
loop
in
nop
lock
cmp
test
loope
cs
cmp
xchg
test
xlat
imul
lahf
and
dec
xchg
jbe
in
fidivrs
negb
call
mov
adc
or
movsl
xor
xor
test
sbb
jae
xor
cli
or
sbb
sub
sub
jg
and
mov
push
gs
mov
imul
mov
mov
repnz
cltd
fstps
lock
enter
daa
gs
push
ds
subl
repz
daa
fs
xlat
arpl
ja
mov
loopne
pop
sub
dec
sbb
ret
jno
cld
pop
rcrb
xchg
adc
lcall
out
je
mov
xchg
outsl
inc
imul
imul
cli
xchg
or
or
test
fistps
inc
push
xchg
daa
mov
arpl
mov
cltd
mov
mov
mov
add
adc
mov
or
out
dec
mov
movsl
pop
testl
aad
popa
jge
xor
and
sub
push
dec
pop
enter
aam
lret
mov
mov
adc
or
sbb
or
jmp
xor
clc
sti
test
sub
sbb
pop
loop
and
ja
shrb
lret
lret
fisttpll
scas
cltd
ds
sub
test
clc
pop
jp
loop
mov
mov
dec
and
fs
aaa
push
fld1
lret
inc
stc
xchg
imul
roll
jno
loopne
pop
push
jb
jne
test
aad
repnz
pop
call
or
sbb
pop
jne,pn
mov
out
jo
mov
xchg
notl
clc
adc
call
flds
dec
imul
mov
mov
hlt
aas
lret
ja
and
jns
test
or
push
sbb
jmp
enter
hlt
faddl
cmpsl
inc
add
push
pop
call
pop
sub
or
mov
mov
je
leave
xor
icebp
jnp
fistps
imul
add
mov
pusha
aad
push
mov
js
mov
mov
roll
push
out
mov
out
dec
hlt
pop
dec
xorl
jne
lahf
pop
jo
aad
dec
or
loop
rorb
jle
int3
pushf
pop
insb
ja
repnz
imul
pop
mov
sbb
ja
jne
mov
shrl
inc
ja
repz
sbb
mov
hlt
mov
data16
cwtl
inc
add
mov
cld
pop
dec
shrl
cs
insb
imul
add
mov
enter
filds
dec
test
pop
sti
iret
outsb
out
inc
and
sub
inc
sbb
inc
xchg
aam
shl
pop
test
pop
addb
dec
and
psraw
stos
cmpsl
push
xor
sbb
test
leave
mov
test
push
sub
arpl
fyl2x
mov
inc
cltd
push
scas
add
cs
aas
add
int3
adc
sub
jne
movsb
mov
adc
loop
jp
in
subb
out
popa
call
sahf
fmuls
imul
arpl
bound
push
cmc
rolb
cli
fiaddl
repz
mov
mov
add
pusha
fsubrl
sti
scas
xorl
std
les
pop
rorb
addr16
sub
push
icebp
sub
cmp
push
pop
sub
xlat
mov
push
mov
add
pop
cmp
mov
mov
and
test
cmp
lcall
sub
jne
or
push
mov
dec
pop
jmp
adcb
mov
aad
test
inc
dec
or
mov
push
mov
sub
add
mov
jb
or
lret
cmp
andb
xor
sti
call
dec
mov
and
add
enter
out
insb
cmp
xor
or
in
cmp
and
pop
lods
and
sub
cmp
inc
hlt
pop
xchg
out
in
loope
imul
lahf
lcall
add
add
jmp
popf
out
pop
push
out
stc
idivb
xchg
xchg
sbb
jecxz
mov
mov
sahf
mov
mov
out
scas
out
xchg
add
dec
testb
ss
fstpt
xchg
test
enter
inc
jo
add
xor
mov
data16
aaa
sbb
stos
out
pushf
imul
mov
in
mov
into
insl
lcall
lea
push
and
stos
cmc
sbbb
push
xchg
xchg
daa
jnp
jge
or
mov
mov
jno
mov
loope
push
fdivr
repz
push
addb
stc
cltd
fsubrs
lods
cwtl
xor
push
movsl
sti
jne
pop
nop
inc
push
mov
sub
push
into
fsub
pop
inc
cmp
or
xchg
or
std
push
popf
xchg
ljmp
repz
outsb
jb,pt
or
cwtl
xor
cs
sbb
jle
loopne
int
in
sub
mov
or
rcll
ret
mov
rorl
je
push
gs
xchg
jle
rol
xchg
aaa
adc
sbb
sbb
sahf
sti
cmp
pop
mul
movsb
or
lods
mov
xchg
shl
jmp
dec
lea
mov
xor
pop
xlat
mov
lcall
mov
jae
mov
mov
pop
bound
jecxz
inc
fiaddl
addr16
add
nop
mov
pop
sub
fisttps
nop
je
sub
cmpsl
icebp
adc
sbb
jle
sbb
cmp
outsb
cmp
push
push
mov
lods
inc
mov
and
popf
jno
arpl
or
in
fcompl
and
lea
push
pop
mov
xor
pushf
cmp
bnd
maxps
add
push
hlt
push
inc
addb
iret
sub
xchg
sub
int
sbb
cmp
pop
loope
jmp
loope
call
insb
aad
mov
mov
mov
dec
push
push
je
outsb
and
or
sub
push
push
pop
daa
push
mov
adc
add
mov
scas
lahf
mov
mov
outsb
jo
add
push
cmpsl
cwtl
scas
adc
les
or
fsubl
scas
mov
daa
pop
es
mov
or
and
lods
mov
mov
lods
lods
sub
stc
pop
scas
icebp
mov
dec
hlt
pop
xchg
leave
xor
inc
adc
inc
mov
mov
xchg
gs
imul
loope
mov
arpl
test
stos
cmp
jne,pn
aam
fwait
sub
rorb
jmp
fsubr
mov
adcb
fdivp
wbinvd
jmp
lock
daa
sti
nop
sbb
sub
cli
sub
lock
inc
mov
push
inc
pop
sub
inc
js
scas
sbb
mov
sub
sbb
sub
scas
test
andl
sub
popl
pop
or
testl
mov
sub
mov
dec
stc
xorw
push
mov
add
es
pop
fdivrs
outsl
mov
pop
push
fdivrs
pop
movsb
dec
and
mov
adc
pushf
and
xchg
out
inc
mov
mov
sahf
loop
int
rorl
push
test
or
fwait
add
sub
jl
xchg
mov
xchg
push
ss
push
or
mov
out
push
cmpsb
adc
cmp
lds
out
flds
in
ja
add
ret
ret
aaa
aam
mov
cli
sahf
push
mov
iret
gs
into
mov
mov
push
mov
cltd
jg
xor
inc
dec
add
scas
xlat
out
cmpsb
sahf
int3
es
cld
dec
stc
or
testl
pushf
inc
dec
jg
dec
jmp
daa
cmc
xor
fldpi
xor
pushf
lret
pop
fnstcw
les
in
hlt
jge
dec
push
mov
mov
push
vmulss
jecxz
lret
daa
ret
pushf
loop
mov
cmp
mov
insb
dec
jne
daa
push
pop
ficoms
in
out
adc
fsubrp
and
es
adc
adc
daa
in
fdivr
cs
sub
sub
jne
pop
popf
push
xor
pop
negl
clc
jns
mov
inc
nop
push
xchg
jno
fidivs
repz
jmp
dec
sub
mov
out
push
popf
fnstcw
inc
mov
add
loop
out
loopne
ds
imul
sbb
xchg
aaa
mov
mov
dec
lds
shlb
movsl
addb
push
leave
mov
xor
and
xlat
icebp
cltd
mov
aaa
fiaddl
out
jnp
xchg
loope
sbb
out
je
push
jle
orb
call
xchg
mov
leave
and
add
jmp
mov
dec
into
incl
xor
add
test
outsl
xchg
fcomps
dec
adc
dec
push
mov
push
mov
int
stc
cmc
mov
add
mov
les
cmp
out
add
mov
subl
xor
xor
xor
mov
divb
aad
pop
jae
push
jmp
sbb
mov
push
cmpl
or
lods
mov
push
popa
stc
ja
cld
mov
popf
dec
mov
int3
jns
lcall
mov
sub
mov
aas
xchg
mov
pop
hlt
movsl
push
xor
dec
rcrb
icebp
adc
out
in
scas
jge
jo
dec
pop
xchg
lods
dec
out
inc
xor
fidivrl
mov
iret
iret
enter
mov
pop
xor
dec
fisubrl
mov
add
cmp
dec
inc
fimull
aas
outsb
mov
push
dec
movsb
push
add
std
clc
loopne
cmpsl
xchg
cmpsb
push
mov
ja
push
xchg
fimull
cwtl
outsb
push
push
sub
mov
or
icebp
lahf
addb
xchg
ja
in
sub
repz
jb
dec
dec
xchg
fisttps
mov
adc
add
fcoms
xor
cmp
or
fidivrl
sub
cli
addr16
into
lock
das
sar
adc
push
lods
lods
mov
sbb
jnp
fdivrs
adc
add
loope
call
xchg
dec
pop
jo
mov
hlt
outsb
insb
jmp
ja
call
mov
scas
adc
jnp
loop
ljmp
scas
mov
pop
pop
loop
add
mov
inc
popa
cltd
in
test
jo
notl
fucomp
xor
xor
xor
mov
inc
mov
arpl
ret
stc
int3
inc
jp
cmp
aad
popa
push
es
xchg
xor
cmp
pop
fcmovne
repz
push
jne
pop
std
inc
push
jae
in
cwtl
xor
push
ss
mov
and
push
daa
int
inc
cmp
lea
lcall
stos
adcl
test
mov
add
pop
outsb
pop
fidivrs
je
xchg
add
test
cmc
fisttps
mov
lds
cmp
xor
int
cmp
mov
dec
pop
mov
add
je
in
mov
push
or
xor
xchg
sub
mov
sbb
lcall
and
cmp
test
push
outsl
fmull
xlat
or
ret
jbe
adc
xlat
stos
jns
mov
sarl
pusha
or
and
loopne
insb
and
clc
lcall
and
mov
mov
cmc
inc
in
adcl
cmp
mov
dec
pop
lahf
call
xor
mov
ss
fimuls
inc
or
cwtl
mov
sub
adc
xchg
test
push
xor
sub
mov
cwtl
stos
jnp
ja
xor
data16
adc
sbb
imul
and
out
repnz
dec
cmpsl
cmpsb
pushf
inc
aad
adc
pop
or
inc
cmpsl
cmp
bound
xor
pop
pop
jg
pop
or
int3
fucomip
scas
or
fsubrp
add
jae
lock
adc
int
adc
stc
bound
out
add
loop
mov
pusha
sbb
test
mov
jne
nop
or
jae
adc
faddl
mov
js
iret
mov
mov
sbbb
pushf
jns
cmc
shlb
cmp
and
adc
jbe
mov
xchg
aaa
xchg
cld
sub
ret
cmp
out
dec
sub
es
pop
rol
pop
movsl
mov
add
ret
ljmp
xor
dec
inc
inc
xor
mov
push
sub
push
shll
mov
xstore-rng
cmpsl
ret
xchg
dec
jl
mov
and
fstpt
cwtl
repnz
mov
mov
dec
out
mov
xchg
sahf
inc
and
xor
pop
sub
in
sbb
inc
cmp
notb
push
insl
or
dec
decl
jnp
jne
mov
push
mov
or
sub
mov
inc
push
mov
mov
mov
add
lea
and
dec
dec
subb
dec
adc
bound
bound
pusha
subb
push
cmp
orl
pop
inc
and
xor
or
or
pushf
les
stc
mov
imul
addr16
inc
fucomi
add
popl
push
pop
inc
fwait
push
cmpsl
push
daa
adc
je
and
out
in
mov
in
fcompl
fs
cmpsb
jp
push
pop
and
in
cld
add
icebp
movsb
sbb
dec
scas
sub
xchg
pop
cmc
dec
inc
sub
mov
xchg
ss
bt
leave
or
lods
cld
pop
adc
push
les
and
cs
fs
ret
mov
dec
cli
je
test
bound
fadd
js
adcb
xchg
testb
and
divl
hlt
inc
cli
dec
jp
push
cmpsb
das
adc
cmp
sbb
jg
gs
in
push
jbe
fsub
sbb
or
addr16
icebp
xor
and
sbb
test
dec
xchg
pop
push
adc
and
push
arpl
mov
dec
leave
pusha
stos
pop
and
mov
lret
ja
fstpt
fs
pop
es
mov
ljmp
mov
movsb
ss
shlb
dec
mov
sub
gs
jae
inc
cmc
mov
jo
popa
ljmp
decb
mov
lcall
push
mov
push
xchg
cs
divl
hlt
rcrb
inc
stos
int3
movsb
mov
insb
sub
mov
fisttps
mov
cmp
clc
dec
fcmovu
xlat
dec
inc
inc
ljmp
enter
fwait
notb
das
adc
mov
mov
out
dec
mov
jnp
push
inc
dec
push
inc
fwait
mov
cmpsl
cmp
lea
hlt
sahf
pop
pop
movsl
cld
adc
cmp
cmp
in
popf
leave
mov
add
fsubs
pop
jg
mov
cmp
subb
flds
and
pop
cld
inc
ja
push
push
ljmp
dec
lret
pop
mov
mov
clc
leave
xchg
mov
dec
out
xchg
int
cmp
popa
shr
dec
popf
adc
movsl
outsb
xor
mov
xor
lret
dec
or
dec
cli
daa
and
sbb
pusha
shll
xchg
dec
lret
negl
imul
sti
pop
outsb
pusha
inc
xor
dec
or
xchg
popa
addl
std
enter
push
scas
arpl
or
into
cli
lret
jns
movsl
cs
addr16
rorb
les
mov
pop
insl
fiaddl
inc
sbb
fs
xor
mov
or
ss
insb
lods
xchg
sbb
pushf
or
xchg
lea
int
push
sbb
loop
or
outsl
jp
push
adc
fcoml
fstl
jge
pop
aad
push
inc
add
orb
ret
mov
pop
cmc
lock
call
inc
add
push
leave
dec
lcall
pop
std
mov
dec
and
mov
out
cltd
jo
cmp
out
in
dec
out
mov
sub
fidivs
cmp
adc
loope
push
mov
sbb
enter
test
ror
lock
test
jp
dec
stos
pop
mov
int3
stc
hlt
fisttps
pop
lock
mov
fwait
xor
jg
xor
push
lds
dec
es
xor
sub
push
push
jl
jne
popf
je
sbb
jb
pop
jl
mov
mov
imul
stos
mov
loop
andps
test
mov
jbe
mov
loopne
push
push
xchg
test
dec
sub
mov
rclb
aad
xor
xchg
imulb
imul
jp
pop
sti
bound
push
imul
adc
and
sub
inc
cs
call
mov
lds
pop
fcomps
mov
dec
mov
mov
sbb
cmp
mov
subl
fldt
fdivrs
lret
fimuls
or
into
sbb
std
push
jle
adc
xchg
push
outsb
mov
and
xor
xchg
test
or
ret
adc
shlb
push
push
incl
mov
cmp
mov
aam
mov
insl
bound
xchg
sub
xchg
jno
movsb
dec
sbb
adc
jl
inc
cmp
sub
pop
xchg
push
stos
jecxz
leave
lods
dec
insb
cmpsb
fbstp
cwtl
out
dec
js,pt
scas
hlt
xchg
cwtl
xchg
loop
lds
add
add
mov
push
cld
addl
jne
dec
push
dec
stos
out
fstpt
cmc
jge
data16
xor
fsubp
jne
ss
or
jl
or
adc
cmpsl
lods
cmc
subb
sub
dec
push
pop
sbb
dec
ret
add
sub
cmp
idivb
jp
inc
mov
push
xor
add
enter
mov
xchg
mov
push
fldt
lea
xchg
xchg
insl
fimull
movsb
vsqrtps
jle
data16
cmpsl
ret
sub
push
lock
in
sbb
in
lods
or
xor
jae
xchg
jo
out
adc
sub
lods
enter
pushf
jg
and
imul
jmp
jbe
push
pop
cmc
mov
sar
mov
adc
popf
orb
pop
cmp
push
clc
mov
cli
xlat
push
movsb
xor
sbb
in
leave
xor
adc
push
cmp
jg
repz
popf
xchg
nop
out
imul
add
mov
mov
shrb
push
cwtl
sahf
jp
sub
leave
call
es
mov
cs
cli
push
or
sub
dec
inc
call
jle
dec
mov
xor
jbe
adc
inc
divl
xlat
sti
pop
ds
imul
or
push
call
xchg
leave
push
push
push
jo
fsubr
sbb
xor
mov
dec
fistps
enter
pop
jecxz
rcl
ss
sar
lret
or
dec
icebp
inc
das
mov
jl
and
popa
jno
and
xchg
scas
xchg
add
je
mov
cmp
pop
mov
fisttpll
popf
push
jo
inc
sub
mov
jb
fimull
mov
ds
xchg
jmp
icebp
movups
in
mov
arpl
mov
sub
mov
outsl
cmpsb
out
dec
testl
in
pop
cs
sbb
and
or
shlb
push
loopne
xor
or
clc
xchg
xor
adc
hlt
in
dec
test
adc
mov
aam
jmp
cmp
add
outsl
inc
inc
aaa
lcall
pop
in
push
adc
in
data16
jge
adc
or
fs
adc
std
inc
pop
lret
in
or
mov
cmp
jmp
dec
pop
test
jecxz
xor
or
jl
fdivp
or
push
in
mov
and
fimull
cltd
pcmpeqw
cld
pop
push
mov
mov
push
js
out
cmp
adc
cmp
popf
mov
and
sbb
dec
jae
loopne
pop
push
and
adc
xchg
ja
cmp
and
pusha
fisubs
daa
loopne
mov
jo
insl
popl
xor
inc
imul
inc
loopne
sbb
int
popa
pop
pop
std
lahf
outsl
out
mov
cmp
ja
outsb
loope
popa
fisttpll
rdmsr
xlat
sbb
cld
dec
int
sub
dec
mov
add
jns
or
push
icebp
lock
out
lret
mov
jp
mov
cmp
mov
xchg
ret
sbb
mov
int
daa
mov
xchg
cmp
jns
std
adc
enter
popa
sbb
xchg
xchg
std
cmp
dec
loope
daa
lret
mov
mov
sbb
xchg
call
xchg
add
jne
xor
test
jmp
ljmp
clc
sarl
jecxz
lods
cmp
inc
lcall
jle
into
fdivl
std
push
scas
movsl
jmp
in
jl
stos
and
mov
sahf
idivl
mov
push
mov
insb
lcall
lds
xor
aaa
sarl
outsb
adc
enter
xchg
addr16
out
and
xchg
mov
repz
insb
int3
insl
popf
stc
addr16
or
inc
xor
es
pop
xor
inc
pop
aad
adc
dec
aam
mov
repnz
out
popf
arpl
bound
dec
jmp
dec
xlat
sbb
ljmp
mov
insb
xchg
popl
sbb
loope
popa
and
or
pop
pop
pop
ljmp
sub
outsl
sub
cmc
scas
test
pop
cmp
dec
xchg
lcall
cmp
or
sub
or
ret
mov
sahf
rcr
cmp
sarb
fiaddl
movsl
addps
xor
mov
scas
add
and
flds
jp
movsl
jb
and
mov
gs
imul
pushf
popf
and
mov
lock
mov
jbe
xor
popa
jae
insb
ss
mov
test
mov
aaa
lcall
xor
lret
mov
or
jb
test
jns
adc
clc
cmp
cmp
outsb
in
adc
out
scas
loope
stos
xchg
shlb
js
pop
and
push
mov
sbb
sbb
sbb
dec
and
pop
sbb
dec
mov
xchg
xchg
lock
fbstp
cld
ljmp
or
test
or
push
insb
loopne
mov
jge
xchg
in
pop
cmp
fdivrl
push
iret
jne
sub
add
push
mov
mov
pop
mov
cmpsl
imulb
neg
cwtl
add
cli
cmp
aaa
fiadds
lods
stc
sbb
mov
iret
and
mov
fildll
mov
adc
pop
arpl
pushf
dec
mov
orb
enter
fmuls
push
xchg
pop
jno
es
test
test
pop
aam
outsb
scas
dec
fiadds
mov
loope
lret
jbe
add
push
dec
adc
sub
mov
fisttps
jno
adc
mov
faddl
xor
test
cli
add
shrl
mov
stc
inc
fwait
fs
subb
ficompl
mov
mov
aas
xlat
mov
cmovs
mov
repnz
jp,pt
dec
dec
imul
pop
imul
pop
mov
lock
dec
inc
fst
test
pop
rorb
cmp
xchg
fmull
adc
mov
out
mov
and
pop
jg
xchg
jmp
lods
stos
mov
push
cmp
dec
cs
insl
xor
lret
dec
cmpb
popa
and
stos
les
insl
negl
aad
lea
jmp
jnp
jbe
lret
push
gs
fsubl
mov
data16
and
cmpsl
sub
outsl
out
cli
rcrl
dec
xor
clc
pop
lcall
sbb
lock
int
or
lret
mov
andb
iret
iret
ss
add
ret
lods
out
push
pop
pop
mov
inc
mov
adc
xor
sbb
std
cmpsb
adc
shll
mov
cmp
push
dec
push
sbb
pop
pop
fs
ss
mov
xchg
xor
and
jo,pn
stc
sub
xor
lds
jo
and
sub
xor
cltd
mov
addr16
dec
jmp
arpl
adc
sbb
mov
lret
insb
scas
add
pushf
push
pop
push
ficoms
or
popa
add
mov
shll
mov
stos
lret
es
fwait
xor
mov
mov
xor
shlb
mov
inc
sbb
and
mov
or
repz
movsb
out
daa
mulb
subl
sbb
clc
les
jl
mov
and
cs
push
mov
xchg
pop
sub
cmp
fdivrp
xchg
adc
aam
mov
pop
xchg
fisubl
addr16
inc
jb
cmp
adc
lods
movsb
cmc
cs
xchg
stc
out
popf
cwtl
cmp
xchg
cwtl
nop
sub
sub
stc
ja
dec
fbstp
js
and
out
lahf
sbb
sbb
xchg
es
adc
adc
lret
aaa
sub
sbb
lods
fisubl
jmp
aad
pop
sub
adc
or
add
add
insl
jl
xorb
cmp
add
adc
xchg
mov
sub
mov
push
and
enter
push
push
adc
xor
dec
xor
inc
pop
ja
sbb
push
and
sahf
aad
call
into
scas
dec
jmp
mov
lods
pop
ret
stc
add
dec
jae
xor
add
loop
mov
sti
pop
fs
repnz
jmp
sbb
pop
jne
out
sub
aad
pop
lds
mov
adc
jmp
jle
xchg
fnstenv
ret
loope
push
jne
data16
nop
xorl
test
sbb
cltd
cltd
pusha
or
stos
inc
mov
push
movd
add
aam
shlb
inc
scas
int3
push
sbb
xchg
ret
fsubrs
daa
xor
mov
mov
aam
sub
xor
jle
icebp
or
imul
je
jecxz
in
xor
jae
adc
imul
ds
jb
dec
pop
int
xor
add
xchg
jg
inc
push
daa
notb
mov
les
dec
fwait
rcll
sub
test
lods
cld
xchg
push
dec
mov
aaa
in
cli
and
mov
sahf
stos
outsl
xchg
sti
std
or
movsb
sub
int
repnz
cs
jge
aas
cmpsb
test
cmpsl
cli
push
out
insl
icebp
jl
imul
lahf
popf
xor
jns
sbb
pop
xlat
lcall
push
and
xchg
out
scas
or
and
xor
std
jg
add
sub
adc
sbb
mov
xchg
inc
xlat
scas
cmp
mov
or
cmp
cs
insb
xchg
jmp
sbb
push
aaa
dec
xor
ffreep
mov
xchg
cmp
lahf
and
jge
xor
sbb
push
xchg
cmp
mov
sahf
mov
incb
pop
loop
jmp
jecxz
aad
orl
sub
test
xor
inc
pop
adcb
shll
dec
lods
fwait
clc
pop
xor
and
mov
test
pop
lcall
sti
pop
lret
adc
dec
ficompl
jmp
leave
inc
clc
push
adc
xchg
es
cmp
sub
repnz
leave
sahf
and
test
sbb
pop
jecxz
mov
sub
es
xor
icebp
pop
lcall
inc
xchg
mov
add
cmpsb
add
out
xlat
mov
inc
ss
nop
push
testl
or
call
ret
pop
loope
bound
push
xor
jo
clc
sub
into
cmpsb
sarw
ds
fldl2t
mov
frstpm(287
cltd
lcall
rcl
divl
mov
stos
in
shlb
scas
mov
xchg
cmp
cwtl
adc
pushf
je
mov
test
jge
dec
and
movsl
push
xor
cmp
ret
popf
out
repnz
repnz
dec
mov
xor
arpl
mov
add
or
jae
ret
addr16
test
xlat
shll
js
mov
cmp
pop
or
adc
adc
gs
pushf
jae
arpl
enter
into
mov
pop
cmpsb
cmp
mov
dec
imul
std
std
in
idivl
mov
jae
out
mov
in
insb
pop
addr16
push
test
test
test
mov
xchg
dec
scas
negl
mov
pusha
rcll
jno
dec
pop
mov
pop
cmpsb
std
jmp
pop
mov
mov
cmp
add
adc
jg
mov
cwtl
loopne
jae
jne
sub
ljmp
dec
and
imull
nop
sbb
lods
xchg
lcall
inc
jae
jg,pn
daa
push
jl
xor
into
lahf
sub
test
mov
in
or
imul
fldenv
outsl
cmpsb
fstpl
aas
or
rorb
push
and
call
aad
fwait
dec
and
enter
push
or
popa
aas
test
add
mov
xlat
jne
and
adc
or
adc
into
std
mov
cmp
inc
negl
fsubs
lds
mul
inc
or
fstpt
pushf
and
and
sub
shrl
push
mov
out
xor
mov
stos
loop
lret
pushf
cld
add
negl
xchg
idivl
lds
mov
movsl
outsl
popf
imul
jbe
loop
sub
ret
mov
sub
adc
insl
xor
or
xchg
cmpsb
jbe
inc
cmpsl
push
nop
fcmovb
sbb
ja
xor
cmp
mov
imul
movsl
in
popa
xchg
mov
lea
stos
imul
add
test
lea
xor
imul
arpl
or
jb
adc
sbb
add
mov
outsl
lahf
mov
mov
ret
lock
in
stc
data16
mov
ja
outsl
pop
dec
xchg
int
jg
call
fidivrl
xchg
icebp
pop
lods
int
xchg
mov
adc
pop
push
xor
jl
xor
sbb
bound
mov
inc
lods
mov
and
hlt
dec
mov
aad
nopl
xor
cltd
lods
fs
cltd
in
adc
inc
stc
aaa
push
rol
xor
rolb
jo
mov
pop
and
into
mov
push
push
fs
fst
or
call
mov
and
aaa
lret
shl
xor
leave
outsl
dec
rcll
mov
idivb
sub
in
ds
dec
imul
and
icebp
subl
aas
push
repnz
add
loopne
lret
arpl
testb
loope
mov
mov
lret
adc
leave
cli
xchg
jnp
sub
xchg
jl
inc
repz
subb
lret
cmp
push
lret
daa
pop
cmp
sbb
subl
pop
aam
testb
scas
rol
sti
cmp
push
inc
in
aad
rclb
sub
rol
inc
lahf
flds
push
push
pop
mov
push
xchg
shlb
sbb
push
out
cmp
ret
inc
ljmp
cmp
aad
jb
mov
xlat
xor
jbe
mov
mov
loopne
and
cld
xchg
push
sub
mov
shlb
movsl
jno
jecxz
fcom
cli
out
jle
mov
xlat
lahf
push
out
xor
sub
add
aad
mov
add
jl
popf
push
and
dec
cwtl
in
mov
mov
pusha
dec
inc
add
pop
popf
or
testl
hlt
stos
movsb
add
sub
pop
icebp
aad
cltd
sbb
mov
cs
sbb
jp
mov
pushf
xchg
sbb
push
gs
lcall
movsl
mov
shlb
inc
js
pop
lret
sub
and
adc
hlt
jb
push
int3
pop
hlt
mov
pop
mov
mov
ret
insb
and
mov
ret
cld
xchg
dec
test
or
adc
lcall
xor
jp
sub
cmpsb
fcomip
data16
push
cmp
fidivrs
rorb
int3
xor
push
fnsave
in
push
shll
xchg
outsb
rclb
mov
fdivp
xor
xor
jnp
mov
adc
aad
mov
pop
mov
push
leave
std
cmpsl
popa
ja
jo
lods
mov
pop
cmpsl
sub
scas
pop
iret
add
dec
xchg
loop
sub
mov
sub
mov
in
add
xchg
adc
mov
xchg
and
jo
xchg
fs
je
inc
hlt
or
xor
subl
addb
mov
jmp
notl
adc
lea
mov
xor
cmp
pop
cmc
repz
push
and
jae
movsb
popa
mov
and
hlt
mov
xbegin
xchg
imul
insb
xor
or
imul
lds
lods
push
adc
cli
pop
xchg
mov
and
xchg
test
pop
pop
sahf
into
aad
adc
lea
nop
insb
mov
and
adc
lret
and
inc
fisubs
scas
js
stc
pop
jle
mov
mov
test
xor
xor
jno
push
push
je
loope
xchg
in
and
arpl
divl
and
outsl
aas
mov
arpl
sbb
stos
dec
iret
sahf
xchg
add
and
nopl
mov
loop
rdpmc
int
mov
arpl
jno
test
and
xchg
mov
movl
enter
xchg
cmpb
xchg
xchg
xchg
inc
jl
shll
les
ficompl
mov
scas
or
cmp
mov
pop
jno
adc
dec
jg
dec
add
in
mov
pop
je,pt
repnz
jno
mov
icebp
out
dec
sbb
push
lods
iret
je
jecxz
andb
mov
xor
cmp
lcall
dec
add
clc
data16
pop
xchg
sbb
jo
adc
pusha
jmp
pop
jge
mov
add
fadd
pop
pop
mov
call
push
push
or
push
mov
and
leave
dec
testl
fcmovu
sub
mov
xchg
mov
cs
shr
push
or
jle
mov
outsl
daa
pop
jb
cmp
test
sub
lds
or
jle
ret
dec
mov
hlt
xchg
add
mov
hlt
mov
sbb
lahf
stc
dec
nop
repnz
out
push
cmpb
add
inc
mov
test
les
xchg
lods
divl
loopne
push
mov
leave
mov
adc
pop
pop
or
mov
pushf
test
sub
lock
imul
xchg
in
jg
sub
xchg
xor
sbb
adcl
adc
mov
bound
sbb
push
push
add
cmp
sub
or
dec
sub
fcmovnu
outsb
mov
pop
xor
jne
into
leave
jb
imul
sbb
ror
push
adc
mov
pop
nop
imul
mov
pop
mov
add
lods
aad
js
jno
leave
popa
xchg
inc
jne
cmp
or
sbb
mov
xor
push
xchg
mov
fistpl
sarl
stos
enter
shrl
jns
push
sbb
xor
fsubp
stos
push
jg
sbb
sbb
test
jp
in
test
ret
xchg
or
cld
push
outsb
and
testb
inc
fstpl
aam
sub
push
mov
inc
fwait
sub
lock
cmpb
ja
mov
and
push
adc
loope
push
mov
mov
mov
insl
dec
iret
cmp
shlb
pop
out
fwait
jge
cmp
sub
pop
sub
push
jae
pop
cmpsl
mov
stc
jecxz
enter
sbb
adc
jg
jae
aam
scas
rorl
xor
in
ja
lret
loope
shrb
add
pop
push
mov
inc
les
push
cmc
in
mov
ds
test
in
dec
jb
pop
and
in
sbb
int
cwtl
sbb
imul
in
jbe
xchg
movsl
mov
sbb
jmp
pop
decl
adc
and
jg
inc
dec
cs
int3
aaa
adc
scas
dec
movsb
xorl
cmc
scas
xor
sbb
mov
mov
push
pushf
xor
inc
or
adc
inc
add
aaa
dec
mov
fwait
xchg
push
cmp
imul
or
sahf
push
jno
pop
push
xchg
aas
xor
outsb
and
addr16
rcll
push
pop
mov
daa
mov
pop
ret
xor
test
fcom
popa
sub
ja
ja
es
orl
mov
orl
adc
xchg
rcr
jae
data16
add
notl
pop
das
nop
mov
mov
jmp
test
test
mov
mov
sub
sub
fstl
ja
fbld
pop
cmp
mov
jae
or
fs
fmul
fmull
fdivrl
rorl
test
lods
mov
xor
xchg
mov
dec
xor
jno
push
ret
sahf
data16
xchg
divb
inc
cltd
int
addl
xchg
pop
xor
pop
movsb
popa
add
jae
pop
and
roll
mov
bound
out
push
inc
roll
xchg
scas
push
mov
and
cld
adc
adc
mov
add
imul
popf
jns
leave
mov
inc
adc
das
dec
pop
das
fsubrl
in
fwait
jns
or
sub
xor
in
ficoms
nop
rclb
mov
ja
sbb
imul
std
mov
mov
xchg
xor
ljmp
pop
in
or
mov
dec
add
sbb
xor
add
loopne
xchg
lret
sahf
sbb
dec
pop
filds
jl
jo
xchg
sbb
xlat
inc
mov
insl
add
pop
enter
stos
xor
mov
rclb
mov
mov
xchg
fwait
adc
sbb
mov
and
xchg
xor
test
jo
push
es
ja
and
sbb
push
fldl
mov
pop
and
mov
add
mov
daa
repnz
loopne
ljmp
js
mov
jae
cmp
mov
int3
cli
out
aam
mov
adc
jno
out
jne
or
ja
add
sbb
jo
mov
push
jns
push
xor
fwait
jno
add
xchg
xchg
add
stc
imul
xchg
aam
mov
sbb
cmp
pushf
sbb
test
decb
pop
or
push
push
cwtl
xchg
sbb
pop
xor
test
lcall
inc
jge
js
sarb
aad
push
adc
aam
nop
mov
mov
dec
mov
enter
in
xchg
nop
push
and
out
out
jo
add
sbb
mov
scas
cmp
xor
mov
push
jg
mov
scas
pusha
mov
vpsubw
sbb
mov
stc
lea
iret
imul
popa
pop
pop
xlat
bound
test
pushf
leave
jno
scas
mov
sti
loope
cmp
loope
movsl
incb
mov
iret
lret
push
sbb
sbb
push
enter
pop
dec
or
lret
add
insb
scas
and
jbe
jnp
shlb
daa
mov
cmp
es
lods
movsb
lahf
sub
adc
and
imul
adc
adc
dec
xchg
lods
in
out
pop
pop
cmp
in
call
scas
mov
and
iret
jb
cmpsb
idivl
or
cld
in
fsubl
pop
sbb
stos
imul
jo
jae
pop
lret
lret
addb
push
jg
mov
lock
pop
stc
cmpsl
pop
pop
mov
cmc
adc
cmpsb
cmpsb
into
xlat
push
xchg
aas
std
mov
sbb
arpl
scas
into
pusha
mov
orb
loopne
sbb
rclb
jle,pt
sbb
movsb
jge
sub
ss
pop
fyl2x
dec
sahf
xor
jne
and
repnz
outsl
jno
mov
dec
jle
push
xor
or
insl
dec
pop
outsb
iret
ja
inc
shlb
dec
fstps
ret
push
sub
jmp
dec
push
imul
in
pop
pop
shl
aas
xor
adc
jmp
cmp
dec
in
xor
sarl
sub
pop
fmul
jo
mov
fisubrs
outsl
cmp
rcll
bound
mov
test
mov
sahf
popa
xor
popf
popa
jno
subl
es
or
inc
dec
jmp
shl
adc
sub
imul
lods
xor
cmp
cmp
add
pop
push
cmc
cld
pop
fcoms
mov
je
adc
mov
stc
and
fcom
push
fistpl
mov
stos
loopne
ffree
daa
clc
dec
std
jge
pop
rcrl
mov
repz
add
add
push
sub
cmp
out
popf
je
test
dec
andl
or
xchg
and
adc
cmpb
rcrb
adc
inc
inc
test
mov
js
incl
xorl
inc
adc
iret
jae
pusha
mov
xchg
xlat
and
test
je
or
daa
into
jle
inc
jns
add
jno
loopne
lock
loope
adc
jae
xchg
out
xchg
sar
and
add
popf
jmp
imul
mov
fisubrl
shll
movntps
pushf
lret
out
cmp
mov
aad
pop
nop
faddl
mov
mov
shlb
orl
cmp
pop
stos
insl
xchg
push
aas
mov
cmpsb
add
pop
repz
fcmove
je
jmp
fdivl
xchg
xchg
call
aam
jae
add
push
dec
mov
mov
mov
or
in
sub
jl
xor
and
or
pop
push
jne
cltd
cmp
into
mov
xchg
lea
sbb
fsubr
sub
or
mov
lcall
mov
arpl
bound
dec
mov
jae
stos
rolb
dec
rol
mov
dec
mov
insb
xchg
sub
cs
nop
cmp
pop
and
add
push
fidivs
leave
mov
std
shll
pop
pop
ds
mov
mull
sbbl
adc
es
xchg
sbb
sbb
mov
or
test
out
daa
mov
dec
sbb
in
jp
pop
sub
inc
sub
bound
add
mov
icebp
enter
aad
iret
pop
andl
pop
mov
arpl
push
shlb
pop
ja
aad
je
pop
push
add
std
mov
mov
dec
sar
push
rclb
sbbl
inc
fldt
and
add
sbb
loop
mov
pop
bound
fildl
add
push
ljmp
and
ja
jnp
cmp
adc
adc
das
psrad
out
imul
dec
xlat
ds
or
sub
sbb
rcll
cmp
outsb
inc
jl
adc
shrl
in
idivb
mov
rcrl
pop
test
dec
lock
in
ja
push
aaa
dec
and
adcl
xchg
and
or
test
ret
adc
ljmp
movsl
mov
adc
fistl
sub
add
mov
jnp
pop
scas
mov
xchg
adc
js
or
jp
in
mov
xchg
cmp
inc
sbb
mov
xchg
lods
jae
cmpl
sbb
xchg
push
mov
xchg
ljmp
or
cmp
movl
loopne
sbb
lds
jge
mov
icebp
ret
add
xchg
andb
mov
mov
iret
mov
sbb
rcll
aaa
inc
pusha
stos
test
inc
out
xchg
test
sbb
pop
lret
pop
andb
repz
and
jecxz
mov
jb
pop
cs
mov
aam
lahf
out
mov
repz
sub
test
sbb
jl
lcall
mov
popa
sbb
and
xchg
imul
clc
stos
daa
int3
sub
dec
mov
push
aad
sub
sub
out
mov
in
sbb
pusha
and
popa
adc
inc
xor
and
sub
push
pop
dec
mov
sarl
sub
pusha
stos
mov
push
sbb
outsl
insl
xchg
mov
loopne
in
dec
shrl
cld
dec
mov
adc
sti
out
nop
out
mov
mov
cmpsb
cmp
xorb
andb
jb
int3
cmp
loop
in
add
dec
fs
push
push
sub
ds
dec
shlb
fdivl
notb
xor
add
dec
jl
mov
out
xor
xor
int3
ja
mov
or
sahf
fwait
xor
retw
sub
push
push
pop
stos
mov
jecxz
inc
ficompl
insl
out
xchg
xor
inc
mov
adc
test
fisubs
mov
mov
sub
mov
mov
dec
mov
pusha
shlb
add
add
outsl
and
vfmadd132ss
inc
dec
cmpb
jb
out
and
data16
and
in
orb
mov
jmp
gs
enter
jbe
aaa
int3
mov
adc
add
ret
jecxz
rcrl
pop
lahf
mov
add
in
out
dec
je
dec
mov
pusha
add
mov
xchg
mov
add
pop
mov
orl
mov
fildll
mov
mov
jno
xor
fcmovnu
ss
dec
lods
stos
sub
mov
es
push
jge
divl
jmp
lods
imul
test
stos
ja
xor
into
cmpsl
outsb
pop
xor
or
push
imul
cmp
mov
icebp
pop
push
mov
daa
loop
mov
jno
mov
push
mov
lods
lahf
push
cmp
and
jg
loopne
in
jns
test
pop
mov
mov
sub
jnp
pop
mov
push
adc
pop
xchg
mov
out
fnstsw
insb
adc
push
test
push
fmuls
inc
inc
mov
jbe
mov
test
push
sub
popf
mov
fbld
call
lcall
test
mov
inc
jo
jecxz
inc
imul
push
iret
mov
ja
aas
or
out
shll
xchg
cmp
cmpsb
clc
dec
jbe
subl
dec
ret
sub
jo
push
xchg
arpl
cld
sbb
in
shll
mul
js
sub
int
cmp
movsl
jmp
mov
push
aad
xlat
fldenv
cmp
shlb
pushf
cmpsl
mov
sub
aas
jbe
outsb
jg
adc
dec
pop
xchg
scas
mov
add
cmp
inc
dec
dec
mov
pop
push
mov
lret
cmp
mov
xor
jg
jne
cli
imul
cld
movsl
fstps
sub
sub
or
xchg
mov
adc
lret
std
mov
mov
popf
roll
cmp
test
dec
pop
ja
sub
popa
push
xchg
das
sub
jg
cmc
cmp
dec
in
add
xor
sub
mov
xor
aam
mov
jae
xchg
add
bound
cmpsb
add
bound
pop
jo
rcr
dec
sbb
push
aad
jae
ljmp
gs
mov
test
flds
mov
mov
jecxz
lock
test
popa
ds
pop
ret
aaa
lret
push
das
xchg
mov
lock
lcall
repnz
pop
idivb
xchg
mov
mov
inc
jbe
inc
ficoms
rolb
cld
fsub
xchg
push
fistpll
and
fbstp
insl
lcall
test
dec
popa
aas
cmc
inc
js
cmp
add
movsb
mov
mov
fstpt
testl
push
xor
cli
icebp
mov
adc
mov
jno
popf
pop
pop
cmpsb
cmpsl
and
mov
les
movsb
inc
xchg
push
jbe
cmp
mov
insl
pop
jmp
mov
add
push
bound
jne
lret
push
test
std
adc
mov
pop
xor
fbstp
int3
or
mov
rorl
aas
arpl
xor
fdivp
lods
mov
push
fsubr
outsl
cmpsl
or
adcb
daa
cmpsb
fs
xor
mov
shll
imul
call
ja
xor
dec
fisubrs
jbe
sub
pop
xchg
mov
dec
mov
addr16
push
mov
jmp
jmp
and
icebp
jbe
cmp
jmp
adc
lds
pushf
push
in
hlt
js
inc
stos
cmp
and
dec
je
fwait
dec
and
or
xlat
inc
or
cmp
push
push
push
pop
nop
enter
adc
cmpsl
inc
add
ljmp
and
movq
push
test
push
ret
xchg
inc
gs
and
mov
sti
les
push
loope
mov
insb
inc
pusha
shlb
stc
jo
adc
add
icebp
or
mov
lock
movsl
jnp
mov
int
movsb
scas
sub
add
int
and
mov
push
jecxz
or
mov
xor
test
int
adc
inc
or
jae
add
cld
push
test
lret
lcall
add
sbb
xchg
shll
repnz
sbb
fwait
and
jl
push
sbb
xchg
ret
fisubs
mov
mov
loope
dec
movsb
push
sub
sub
repz
xor
in
dec
push
push
pusha
cmp
movsl
cmpsb
jmp
aad
or
push
fldt
mov
je
xor
or
add
pop
hlt
fildll
xchg
or
cli
dec
outsb
imul
mov
nop
mov
add
repz
dec
icebp
dec
adc
ljmp
lret
xchg
inc
and
inc
xchg
mov
mov
dec
fwait
aad
test
out
arpl
push
cmp
push
mov
mov
cwtl
xchg
xor
cmpsb
fwait
inc
fsub
jbe
loope
mov
xor
push
sbb
in
into
jo
and
stc
loopne
fadd
mov
jnp
loop
jecxz
sti
jno
sbb
dec
mov
movsl
jg
pop
jbe
pop
xor
stc
push
insb
into
mov
push
fisttpll
scas
sbb
xchg
xchg
sub
fstpt
mov
xor
mov
out
ficomps
pop
dec
pop
push
dec
mov
dec
sbb
cmp
into
cmp
mov
rcl
dec
xor
mov
das
xchg
popf
testb
mull
in
mov
or
mov
aaa
pop
add
jecxz
mov
daa
in
sub
add
add
clc
and
dec
jns
dec
mov
push
cmc
addr16
stc
loop
aaa
ds
mov
xchg
adc
mov
or
sbb
outsb
inc
test
dec
in
sbb
sahf
push
shrl
bound
jb
dec
sub
addr16
pop
pop
imul
jb
pop
jle
ds
sub
loope
cmc
dec
loop
inc
icebp
daa
inc
movsb
mov
scas
pop
cmp
cmpsb
aam
lcall
test
xchg
or
aad
test
and
push
mov
pop
or
mov
sbb
xor
mov
lret
jno
lods
mov
xchg
adc
hlt
xchg
mov
cmpsb
mov
cmp
inc
cltd
loop
jg
sbb
mov
mov
add
enter
pop
mov
cmc
inc
and
adc
jne
dec
cmc
pushf
icebp
mov
leave
and
adc
cmpsb
paddw
jo
shr
cwtl
mov
and
shlb
dec
jmp
jnp
xchg
and
je
lea
insl
test
pop
ja
inc
xchg
icebp
outsb
or
ficompl
rclb
movsl
push
mov
cld
fdiv
aad
mov
add
std
xchg
ret
js
fnstenv
push
or
loop
mov
mov
mov
jbe
pop
add
cmp
inc
icebp
sub
jg
cmp
arpl
xchg
or
aad
mov
aam
mov
cmp
fiaddl
loopne
out
jecxz
sbb
inc
lock
add
inc
sub
lock
jb
dec
fmull
repnz
push
aam
cli
mov
xor
jae
sahf
leave
or
inc
lahf
fbld
cmpsl
outsb
xor
mov
je
inc
inc
test
xor
and
pop
pop
dec
dec
mov
mov
je
jnp
gs
lcall
sub
adc
and
test
pop
jns
inc
ljmp
inc
inc
add
mov
test
mov
bound
add
xchg
push
test
ficompl
mov
lahf
mov
jb
adc
xchg
in
mov
movsl
sbb
pop
inc
add
pop
xchg
stc
jl
push
outsb
sub
mov
pop
stc
sahf
sarb
fbstp
pop
enter
ljmp
aaa
popa
pop
mov
in
jle
mov
jmp
lret
das
out
push
dec
ljmp
jle
stos
jge
sub
shrb
aaa
rcrl
daa
add
jecxz
sub
ror
inc
out
popf
add
dec
pxor
or
pop
cltd
mov
adc
push
mov
imul
test
jmp
jg
daa
or
imul
scas
add
push
mov
jmp
leave
cs
pop
jno
jle
mov
in
adc
lds
pop
xor
js
cmp
xor
sbb
sbb
mov
xchg
rolb
mov
jg
push
das
pop
inc
mov
inc
iret
sti
ja
jmp
lret
ljmp
pop
rol
mov
sbb
repnz
mov
mov
stc
xor
xchg
jb
pop
lahf
push
cs
int3
stos
call
fcoml
cmp
pop
mulb
cli
cmp
mov
pop
pop
cltd
mov
xlat
mov
popa
lock
mov
mov
test
mov
jb
mov
pop
out
test
fistl
add
adc
inc
mov
and
or
mov
sbb
jp
mov
xchg
insb
jb
in
aas
jnp
adc
push
sahf
and
dec
mov
pop
es
cltd
push
add
rcrb
or
jp
xchg
es
xchg
les
fidivl
push
pop
notl
iret
mov
and
imul
sbb
push
imul
test
jnp
jbe
sbb
mov
sub
fisttpll
je
out
nop
and
sub
outsb
or
aas
push
mov
out
sbb
or
push
repz
lahf
es
jb
xor
jge
rorl
pop
jns
bound
and
testl
dec
xorl
add
repnz
aas
test
inc
xchg
std
cwtl
mov
repz
mov
jne
push
add
jp
cmp
pop
mov
ja
ficoml
mov
hlt
dec
and
jmp
jp
xchg
les
in
loop
inc
popa
xchg
and
xor
pop
jb
sbb
push
mov
mov
cli
mov
ficomps
sahf
dec
mov
insl
inc
pop
pop
sub
inc
push
mov
mov
add
iret
shl
lahf
imul
out
sub
popf
inc
or
add
or
cmp
jge
int3
sub
dec
inc
test
pop
jae
mov
sahf
add
es
shl
mov
jg
bound
insb
ds
add
dec
jbe
push
pop
aad
dec
adc
out
or
pop
inc
clc
push
js
mov
pop
dec
in
add
loope
mov
ret
jecxz
fistl
subb
les
ljmp
mov
xor
mov
cmp
in
lret
test
sbbl
movsb
add
jle
outsb
dec
jecxz
lock
in
out
dec
arpl
mulb
xor
mov
cltd
and
adc
and
sbb
mov
mov
jns
jnp
mov
inc
out
sbb
insb
pop
mov
push
addr16
pop
mov
imul
pop
push
push
add
dec
pop
ficompl
push
mov
add
pop
dec
pop
sbb
jmp
fstps
adc
call
xor
ret
jno
in
jbe
test
xchg
sarl
loop
xchg
in
cmc
loopne
and
mov
inc
sbb
inc
stos
push
add
insl
adc
jns
or
mov
xchg
adc
xor
jo
add
std
das
enter
outsl
aaa
cmp
adc
sahf
fadds
lods
lock
jbe
inc
imul
addr16
stos
daa
dec
les
jmp
nop
inc
push
mov
mov
cwtl
adc
aad
jnp
xchg
xchg
and
shlb
aaa
aas
ret
mov
cwtl
out
sub
xchg
loopne
xor
sbbl
jecxz
mov
push
daa
dec
andb
repnz
xchg
sbb
les
sbb
push
pop
gs
dec
jae
jo
js
xchg
or
xchg
sarl
or
sbb
fildll
or
dec
jno
loopne
cmc
add
fmul
mov
and
ja
push
les
mov
lret
jns
jne
incl
leave
xchg
clc
cmp
into
sarb
sub
xor
adc
cs
les
adc
mov
in
cmp
push
adc
out
push
ja
stos
xchg
mov
orl
mov
mov
cmp
notl
sub
or
fmull
setg
stc
adc
xor
fs
and
lret
sub
pop
in
add
push
xor
cli
loop
jle
repnz
cli
imul
and
sub
out
jmp
dec
cld
xor
aaa
jl
pop
ret
xchg
cmpsb
jns
mov
inc
dec
scas
daa
and
push
sbb
test
fwait
pop
lds
icebp
loop
ljmp
sarl
xchg
and
cmpb
inc
aad
fninit
inc
cmovae
mov
dec
cs
add
add
popfw
fimuls
or
fsubl
jg
mov
push
sahf
inc
test
ret
adc
push
or
popf
xchg
les
stos
sub
fisubl
sub
mov
shl
dec
mull
pushf
popf
xor
dec
jp
ja
mov
xchg
loopne
or
daa
pop
jecxz
adc
xorl
insb
dec
dec
mov
pop
cmc
xchg
add
fidivrl
stos
cmpsb
out
stos
dec
or
mov
pop
dec
add
into
sbb
xlat
cmp
mov
cwtl
mov
int
adc
rcrl
jne
enter
aas
cmp
sti
adc
or
and
cmc
jmp
ret
mov
cmpl
pop
stos
xchg
mov
loope
scas
jbe
in
jmp
mov
outsl
sbb
xchg
inc
je
xor
lods
adc
movb
sub
imul
sti
and
xor
in
adc
insl
xchg
mov
lods
mov
shlb
cmpl
arpl
jae
stos
adc
mov
push
lret
mov
shrb
pop
mov
mov
mov
cmp
jl
cld
hlt
daa
sahf
pop
ljmp
mov
jae
lret
sub
cmp
inc
enter
sbb
lods
iret
pop
scas
cmc
pop
jns
inc
pop
or
add
mov
xchg
lcall
cmp
push
xor
lret
ss
in
and
inc
cld
or
jmp
add
push
inc
mov
setae
sahf
into
mov
and
jle
movsl
jge
jecxz
mov
xor
bnd
rclb
cmp
movl
dec
es
ljmp
pusha
cmp
decl
or
mov
popf
add
add
pop
outsl
sub
loop
xchg
gs
fwait
inc
inc
fldcw
sub
dec
cmp
or
call
jp
dec
push
mov
call
push
cwtl
loop
faddl
dec
out
fisttps
pop
adc
mov
data16
or
jle
or
dec
ret
sbb
xor
inc
inc
sbb
dec
aad
pop
movsw
xchg
ficomps
push
pop
adc
mov
mov
jno
outsb
xor
popa
pop
lahf
nop
loope
ret
ficomps
push
push
into
clc
syscall
push
shlb
mov
inc
xorps
cltd
lods
ss
sub
pop
jge
xchg
push
movsl
jno
daa
out
insb
mov
jb
fwait
pop
ds
sbb
push
inc
mov
xchg
cmp
rorb
mov
xor
dec
inc
popf
add
mov
jle
test
scas
add
adc
mov
sbb
cvtps2pd
in
jge
add
xor
cmc
dec
xlat
mov
push
and
repnz
fldt
xchg
adc
lds
lcall
pop
cmp
mov
sbbb
xchg
ss
clc
testb
inc
out
jl
push
xchg
inc
imull
push
std
xor
outsl
inc
xchg
pop
lret
cli
xchg
sub
insb
dec
cmp
fisttpll
sub
loop
int3
out
nop
xor
or
lret
dec
nop
sbb
icebp
popf
add
and
clc
insl
add
hlt
mov
sti
jbe
insb
mov
data16
xchg
cmp
pop
lahf
icebp
cmpsl
mov
xor
aam
xchg
push
rcrb
jp
adc
mov
insl
cmp
inc
js
and
ljmp
cwtl
nop
push
out
xor
ror
xor
stc
ret
cs
inc
paddsb
cmp
iret
sub
cmp
dec
lea
and
out
adc
mov
out
xor
fldenv
lret
dec
push
filds
into
sub
jno
or
imul
inc
cmp
test
cmp
cli
xchg
xor
in
adc
loop
pop
push
roll
andb
sbb
fwait
mov
das
jmp
xchg
dec
mov
insb
je
xchg
mov
sub
sub
push
mov
sub
add
je
inc
push
mov
lods
add
pop
mov
sbb
xchg
xor
nop
mov
and
scas
icebp
fimull
aad
fs
pop
jnp
lds
outsb
fidivrl
shlb
jmp
xchg
or
in
popa
push
popa
push
pop
aas
jge
fsubrp
dec
sub
mov
hlt
aad
dec
inc
mov
ss
sub
arpl
inc
inc
int3
xorb
aaa
and
jnp
sub
pop
mov
cmpsl
shrb
dec
xor
jge
or
andb
push
fsubr
out
mov
rcrl
rcrl
mov
test
movsb
adc
or
popf
stos
adc
lcall
sbb
pop
sbb
inc
ret
or
dec
dec
add
insb
mov
xchg
jge
shr
xor
xor
add
ljmp
inc
movsb
inc
mov
xor
adc
push
dec
ret
dec
mov
push
cld
rclb
insl
fmull
inc
push
lock
imul
add
popa
and
xchg
out
mov
and
mov
jae
movsb
add
iret
dec
cmpsl
leave
push
dec
adc
mov
xor
enter
jb
popf
mov
in
sub
push
cmp
rcr
add
int3
pop
adc
jnp
pop
in
cmp
mov
into
cwtl
lock
insb
ljmp
mov
xchg
pop
mov
push
jecxz
jle
test
or
shll
push
xor
sbb
sub
jge
mov
pop
xor
add
imul
out
lret
lock
jecxz
cmp
add
jge
daa
inc
inc
sub
ficoml
xchg
adc
cmpb
rcll
aaa
sub
pop
dec
test
lret
sbb
in
std
in
dec
xor
cmpsl
enter
leave
push
lea
jns,pt
loopne
std
cmp
fmuls
add
lahf
sahf
bound
dec
mov
xor
cmp
inc
fistps
sti
movsl
adc
pop
ret
add
mov
jnp
mov
cmp
out
mov
outsb
push
inc
ja
xorl
in
push
jmp
std
mov
out
loopne
pop
rolb
adc
xchg
shll
arpl
sti
jmp
inc
repnz
xor
adc
sbb
cld
or
push
mov
into
mov
xchg
push
imul
es
jge
pop
dec
fwait
or
add
sbb
test
testb
loope
out
aad
or
cmp
cltd
mov
mov
pop
sbb
in
rcrb
mov
dec
sub
pusha
outsl
insl
adc
jle
xor
sub
mov
add
pause
push
dec
mov
and
mov
lods
cld
repnz
and
loop
push
cwtl
popa
xor
push
int
aas
jae
cld
push
ficomps
sbb
mov
xchg
fcomp
subb
inc
out
es
mov
sahf
jle
pop
mov
orb
test
mov
dec
ds
or
mov
clc
push
xor
testb
mov
or
dec
fwait
ljmp
scas
out
add
iret
popl
cmc
jle,pt
pusha
inc
or
jg
push
adc
scas
mov
sub
pop
mov
add
pop
cmpb
add
adc
xchg
jmp
out
dec
jnp
adc
lea
lret
mov
lret
js
icebp
mov
das
fmull
das
mov
xchg
aas
nop
pop
call
test
lock
xor
pop
and
jl
insl
inc
xchg
xchg
mov
add
inc
cmp
cltd
clc
mov
lret
adc
and
pop
imul
cmp
nop
inc
push
cmp
ds
jp
jmp
test
xor
pop
pop
adc
into
lcall
mov
sub
pop
lret
fdivrp
sbb
mov
xchg
sub
orb
or
fdiv
sbb
inc
fimuls
inc
or
add
add
xor
push
shrl
addr16
mov
push
mov
mov
xor
imul
xchg
sbbb
inc
cmp
push
sub
or
or
mov
bnd
stc
addr16
jne
adc
mov
dec
pop
stos
sub
imul
cmp
fstpt
pop
adcb
xor
jb
cmp
dec
pop
jnp
andb
and
mov
add
nop
jne
loop
or
leave
pop
add
mov
das
jo
inc
adc
loopne
je
movsl
push
aaa
imulb
scas
pop
inc
mov
test
sete
jo
pop
repz
mov
dec
test
mov
jp
imul
hlt
fdivl
fistpll
mov
xchg
add
les
xchg
inc
rcll
xchg
and
test
ficoml
or
lret
in
mov
ficoms
clc
inc
test
xor
dec
inc
fdiv
fs
xor
push
cwtl
icebp
mov
cmp
cli
sbb
push
in
mov
jge
mov
in
pop
mov
aas
jge
pop
and
out
ret
popf
inc
or
add
imull
ss
xlat
pop
push
mov
mov
jno
xor
mov
pusha
cmp
and
int3
or
xor
std
aad
xchg
int3
mov
xlat
int3
push
ljmp
in
out
xor
sub
les
jns
lea
stos
add
jae
xor
cmpsl
cmpsl
mov
jb
pop
and
mov
add
cmc
gs
mov
mov
mov
in
in
daa
mov
adc
inc
jp
lret
mov
mov
insl
je
lods
sti
push
lock
jae
fisttps
mov
or
xchg
lds
into
push
mov
scas
bound
fidivs
inc
mov
into
jno
ds
in
hlt
xor
out
hlt
mov
adc
push
es
mov
push
pop
adc
cli
cli
mov
xlat
out
out
dec
add
xor
div
push
sbb
mov
jmp
test
sti
clc
inc
mov
jb
mov
fxch
pop
pushf
mov
inc
ret
lret
insb
aas
subb
rcrb
ficoml
cmp
mov
xchg
jecxz
adc
and
bound
out
xchg
or
loopne
sub
mov
stc
mov
ds
fs
dec
add
jno
lds
insl
std
loop
sub
mov
xor
rorl
push
fnstenv
pop
in
lahf
xlat
mov
pop
testl
jnp
adc
insb
outsl
jne
xchg
cmp
stos
loope
negb
sbb
adc
pop
adc
fwait
sbb
daa
mov
xchg
bound
xchg
adc
int3
sahf
fs
rcrb
push
mov
dec
and
dec
jl
call
aad
insb
sti
stc
bound
enter
sub
mov
adc
int3
lock
fs
das
push
push
dec
ljmp
stos
mov
adc
xor
scas
add
lahf
sub
in
sbb
cmc
or
aad
cmp
jb
fs
or
cmp
aad
gs
push
push
out
pop
in
dec
pop
sar
or
idiv
xlat
inc
sbb
or
inc
fidivrs
and
mov
pop
jmp
push
sbb
pop
and
jle
mov
pop
movl
dec
ss
jo
lret
int3
and
nop
inc
addr16
es
push
dec
pop
out
jne
mov
and
sub
stos
pusha
rclb
mov
xor
dec
pop
leave
and
and
dec
jbe
xchg
xlat
mov
adc
dec
sbb
add
call
push
into
mov
sbb
enter
push
test
outsb
cmp
sbbb
add
jbe
cwtl
fimuls
lret
sbb
xor
add
mov
cmpsb
jge
imul
push
mov
mov
sub
ret
inc
js
mov
jbe
aam
repnz
cmp
pushf
sub
cmp
mov
movsb
cmpsl
les
jns
test
lods
jnp
push
push
mov
lret
addr16
in
mov
push
mov
scas
push
mov
pop
push
fisttpll
xchg
mov
in
push
mov
or
mov
mov
inc
adc
mov
mov
lods
arpl
cmpsl
mov
and
xchg
push
xchg
mov
push
adc
and
inc
or
leave
push
mov
fimuls
jno
test
jne
dec
fnstcw
or
loopne
and
push
cmpsb
fisubl
mov
xor
idivb
sub
cwtl
scas
push
dec
adc
xchg
cmp
or
stc
cltd
ja
jg
mov
mov
lods
ret
adcb
jg
imulb
xor
rcrb
int
sbbb
push
outsb
popa
lret
inc
or
cwtl
jmp
sbb
cmpsb
pusha
sub
xor
aas
decb
xchg
data16
sub
insb
shrb
rorb
xor
push
cmpsb
adc
adc
jl
sbb
add
ljmp
sbb
int
xor
movsb
pusha
adc
jg
popf
sub
adc
inc
shrl
pusha
setns
jbe
jecxz
jnp
bound
cmp
cmc
out
shrb
push
rolb
fisubrs
cmpsb
mov
iret
push
scas
jnp
xor
jle
stos
inc
arpl
lds
out
jbe
or
sbb
and
push
lcall
and
arpl
orb
mov
sar
sti
mov
lods
nop
test
out
rcr
push
push
loopne
leave
xchg
jmp
lock
hlt
adc
jno
xor
add
add
adc
pop
or
subl
outsb
mov
push
pop
sub
or
push
sbb
dec
xchg
mov
in
jbe
cmc
mov
shrb
in
outsl
paddd
movsb
push
mov
fcompl
iret
lods
adc
nop
push
js
aam
ret
cmp
add
loop
notb
imul
and
mov
rclb
loop
bound
shlb
or
pop
cmp
push
mov
mov
xchg
std
or
ja
fcoml
fld
jbe
cmp
in
repnz
fildll
test
pop
stos
lea
and
adc
nop
mov
xor
jae
xlat
not
pop
movsl
ds
mov
add
adc
pushl
inc
lahf
adcl
xchg
inc
mov
dec
inc
sbb
jne
sub
cmp
jo
popf
arpl
into
push
inc
inc
or
cmp
fldcw
cmp
loope
and
hlt
dec
pop
adc
ret
jns
insb
cwtl
out
mov
sub
pop
and
inc
lods
push
fxch
je
icebp
or
mov
add
mov
repnz
pop
sbb
lret
lret
dec
fcoml
hlt
sbb
sub
xor
pop
push
test
cltd
mov
or
sti
addr16
push
hlt
sbb
add
cwtl
sbb
fstps
sbb
inc
loopne
pop
add
data16
into
fbld
test
mov
adc
in
fistpl
mov
push
push
xor
inc
aaa
call
push
mov
div
or
jb
jae
lahf
push
icebp
roll
rolb
xor
mov
arpl
push
cwtl
ret
xor
sbb
sahf
fisttps
ret
cmp
out
icebp
mov
into
xor
dec
cs
rorb
sbb
sti
mov
cmpsb
insl
push
sbb
jmp
dec
jb
mov
sbb
movsl
or
xlat
lret
dec
adc
and
push
inc
sub
xchg
test
xchg
dec
outsl
xor
pop
aad
sub
xlat
adc
cmc
lds
mov
mov
aaa
xchg
or
fstl
mov
and
mov
push
cmp
jae
xor
pop
mov
xchg
pop
push
xchg
mov
or
ficompl
aam
fadd
shrl
pop
inc
cld
fadds
fidivrs
out
divb
jae
aaa
gs
push
jge
mov
ja
mov
cwtl
pusha
xchg
in
cmp
sub
shlb
cmpsl
enter
mov
jbe
xchg
xor
sub
add
aam
inc
cmc
and
cmp
js
and
mov
pop
jmp
mov
into
pmaxsw
fildl
inc
jg
mov
gs
cmp
inc
scas
mov
daa
push
stos
cs
sub
cld
int3
insb
sti
push
fxch
sahf
jbe
xor
fbld
mov
popa
imul
js
call
out
addr16
scas
inc
xor
gs
pop
rep
imul
and
pop
cs
test
lcall
stos
mov
mov
mov
xchg
ljmp
dec
adc
xchg
popa
xchg
scas
sbbb
cs
mov
and
adc
mov
sarl
add
mov
ss
mov
dec
addr16
sbb
std
stos
sbb
iret
sbb
mov
push
in
fucomi
cwtl
shrb
icebp
xchg
int
sbb
int
outsb
mov
mov
pop
dec
mov
pushf
lret
outsl
int3
jle
jecxz
lcall
add
test
dec
xorl
dec
enter
add
test
cmp
mov
mov
leave
mov
test
jno
push
sbb
pop
pushf
pop
call
leave
push
clc
mov
sub
ficompl
ficoml
inc
xchg
inc
xchg
loopne
pusha
cmp
ud0
sbb
lock
movsb
mov
cmpsb
clc
icebp
ja
xlat
out
or
repz
pop
mov
lds
add
cli
xchg
push
jb
jno
daa
or
test
xchg
or
sbb
fsubs
push
subb
inc
lds
ljmp
pusha
roll
in
jno
hlt
cmp
push
mov
inc
jge
jge
dec
data16
xor
pop
mov
outsb
imul
adc
inc
sub
jp
pop
push
les
hlt
mov
add
jbe
jl
push
mov
inc
jmp
repz
aaa
popf
andnps
sbb
sbb
test
subb
pusha
out
inc
mov
leavew
adc
and
mov
bound
in
xchg
mov
test
ret
mov
pop
or
push
push
outsl
push
arpl
inc
pop
hlt
bsr
push
test
xchg
lret
and
inc
aad
jb
sahf
mov
pop
push
loope
jge
scas
or
fiadds
jg
xchg
xchg
gs
mov
aaa
in
mov
les
cvtps2pd
push
cld
clc
jmp
jg
cs
movsb
mov
sub
sbb
rcrb
and
cs
flds
outsb
pop
xor
push
xor
addb
out
lahf
jae
ror
cmp
roll
push
jns
repnz
add
bound
and
imul
push
xor
mov
xchg
nop
add
movsl
pop
pop
repnz
xchg
test
fisubs
add
jne
hlt
pop
sub
leave
mov
xchg
stos
popf
fidivl
dec
fs
mov
mov
mov
jmp
pop
inc
movsb
lock
imul
pop
into
shlb
popf
push
lretw
jmp
cmc
push
xor
pop
movsl
mov
fcmovnbe
sbb
pop
nop
push
lret
cmpl
sar
popf
fisubrs
in
sbb
jle
add
mov
mov
cmpsl
mov
aad
pop
add
lods
push
inc
hlt
push
inc
pop
adc
dec
push
mov
stc
add
mov
mov
add
inc
dec
jne
lahf
mov
ljmp
or
xchg
mov
iret
mov
dec
cltd
sbb
pop
xchg
leave
mov
stc
mov
and
mov
test
loopne
call
mov
scas
js
pop
out
out
dec
std
xchg
mov
cs
mov
mov
js
pop
rclb
ljmp
in
push
pop
push
shr
lret
mov
test
or
lret
jmp
or
outsl
ja
js
cltd
fstps
push
and
fs
push
push
sbb
out
adc
sbb
in
js
popa
std
push
cmp
faddl
lahf
leave
dec
jb
ja
jmp
daa
movsb
mov
arpl
push
movb
cmpl
insb
cld
into
mov
push
mov
movsl
cltd
xor
js
into
mov
fisubl
dec
ljmp
cmpsl
out
scas
add
ss
xchg
mov
cmpsl
sbb
movsl
mov
push
or
push
negb
test
push
fadds
xchg
push
mov
aad
add
outsl
xchg
loope
insl
pop
sbb
iret
xchg
push
mov
sub
roll
orb
jp
push
and
frstor
andl
roll
mov
mov
mov
pop
xchg
mov
jae
int
pop
push
aas
scas
sub
sahf
or
pushf
ds
cmp
lods
xchg
sbb
dec
mov
js
rorb
push
sti
pop
inc
scas
int
in
aam
std
dec
inc
rcr
insb
dec
pop
fisubs
enter
and
out
js
fnsave
add
rolb
mov
clc
pushf
in
xor
scas
xlat
es
xchg
jbe
inc
arpl
repnz
sbb
mov
mov
dec
or
push
scas
mov
das
js
xlat
and
icebp
jge
out
test
ficoml
mov
inc
mov
cmp
test
aaa
sub
jecxz
nop
call
ja
enter
jnp
and
stos
test
out
into
jp
ss
xor
imul
dec
pop
ret
in
filds
loopne
cli
scas
jecxz
repnz
dec
sub
mov
push
pop
lret
push
lds
es
xchg
or
rorb
fistpll
rclb
into
adc
jmp
shrl
and
inc
cwtl
xchg
push
cld
push
inc
rcrl
mov
stos
les
adc
aas
xchg
outsl
movsb
addr16
jae
in
sbb
jecxz
movsl
cs
arpl
imul
icebp
cmp
test
and
add
cmpb
inc
ja
jbe
outsl
popa
pop
push
stos
es
mov
clc
pop
mov
inc
jp
or
out
sbb
fldcw
or
movsl
imulb
inc
aam
in
xor
clc
xor
das
inc
adc
roll
movsb
stc
pusha
pop
popf
into
mov
dec
or
imul
add
jb
and
stos
mov
arpl
sbb
and
xchg
pop
sti
popf
and
sub
sbb
icebp
sbb
lds
mov
pop
int
cs
ss
sbb
icebp
mov
sbb
popa
sub
ror
out
gs
lea
fiadds
and
mov
mov
mov
mov
adc
imul
dec
xor
mov
xchg
add
lcall
xor
stos
insb
popf
aas
shl
or
aad
cmp
inc
fcmovne
mov
dec
mov
loope
mov
or
sbb
push
pop
add
and
jnp
repz
mov
aaa
fcoml
call
dec
mov
xor
sbb
ret
push
push
ja
mov
popa
outsl
mov
inc
addb
or
mov
sub
fimuls
xor
jp
repnz
outsb
and
fdivrs
and
ds
xor
xor
and
in
mov
xor
mov
pop
mov
lret
das
pop
sbb
jno
lret
es
out
fcmovbe
cs
push
mov
das
jae
scas
xchg
xor
add
movsl
cli
jecxz
jb
mov
pop
gs
imul
shlb
lret
js
popf
mov
lret
sbb
in
out
dec
cli
les
xchg
inc
clc
inc
pop
mov
xchg
mov
dec
or
fcompl
fcomi
scas
scas
pop
std
push
out
sub
pop
adc
sbb
sub
push
push
xor
cmc
xchg
mov
push
dec
and
push
scas
add
out
and
test
push
fld
call
inc
adc
jp
sbb
out
or
leave
jb
inc
fs
imul
xchg
mov
insb
fdivrs
mov
xor
rolb
lret
jg
in
mov
pop
jl
xchg
mov
inc
test
pause
adc
xchg
stos
out
ss
ret
popa
dec
cmp
arpl
jb
std
pop
adc
mov
jne
push
pushw
fmul
xchg
mov
gs
cmp
mov
insl
and
stos
add
in
out
and
sub
fnsave
mov
or
int
fisttpl
dec
lock
in
or
in
lods
inc
aaa
fstl
or
add
js
dec
push
pop
jns
nop
sbb
push
mov
xchg
and
mov
or
pop
iret
fbstp
rorb
lock
mov
push
movb
dec
cltd
sbb
mov
ds
call
pop
jecxz
mov
jmp
cwtl
pushf
mov
shll
int
xchg
das
push
inc
pop
sahf
test
hlt
jp
popa
clc
maskmovq
imull
pop
and
cs
sub
xchg
call
into
cmp
lcall
mov
fucomi
popf
mov
test
popf
jae
cmpsb
xchg
xchg
mov
addr16
sbb
cltd
add
dec
lods
je
scas
out
mov
repz
mov
mov
iret
mov
mov
adc
imull
mov
ret
pop
stc
subps
sti
xchg
mov
jb
pop
cmp
dec
aas
in
and
pushl
xchg
popf
mov
shll
sub
sub
in
in
add
push
mov
fs
adc
orl
cltd
movsl
or
mov
push
lds
cmpsb
or
iret
push
cld
inc
data16
out
das
jns
stc
jae
lret
adc
lods
ret
jl
ret
and
mov
or
ret
movsl
hlt
cmpsb
stos
xor
jne
int
das
out
sub
inc
mov
das
and
push
cli
int
cli
test
dec
xchg
movsl
out
xchg
cmpsl
clc
pushf
stos
push
es
into
repz
test
lret
addb
jle
mov
mov
cmc
push
mov
sbb
jge
mov
out
inc
lret
stos
lahf
rorb
jno
nop
test
inc
loop
mov
roll
cltd
out
into
mov
fucomi
add
sarl
ret
jnp
leave
out
outsb
dec
cmp
aam
gs
inc
xor
fadds
sbb
pop
add
mov
popf
imul
jp
jnp
insb
and
aad
aam
int
mov
jne
test
adc
sahf
dec
push
lods
fucomip
daa
sub
fstpt
jne
mov
pusha
iret
test
push
push
in
adc
ds
pop
add
add
arpl
and
cltd
lret
fldcw
lret
jl
sbb
dec
and
or
mov
inc
cmpsb
pop
popl
arpl
add
arpl
les
gs
out
jne
aas
scas
cltd
mov
push
rol
dec
and
xchg
popf
cmp
es
mov
in
jmp
mov
pop
pop
insl
cmpsb
es
fbstp
fidivrs
or
jecxz
xor
aas
lcall
loop
mov
or
jp
insl
roll
add
js
aaa
mov
mov
ja
xor
sub
xor
sbb
aam
add
fdiv
dec
scas
dec
fildl
in
adcl
mov
lcall
ja
sti
sub
xor
push
adc
nop
hlt
mov
ret
xor
outsb
test
mov
sbb
cwtl
ds
sbbb
dec
das
cltd
xchg
ja
test
cmpsl
addb
add
mov
aaa
add
icebp
test
notl
popa
cmpsl
mov
mov
pop
sbb
xor
sub
pop
popa
addr16
test
dec
and
adc
push
into
aam
jo
jcxz
adc
cmpsb
rorl
or
xchg
mov
mov
stos
push
jae
mov
enter
mov
adc
mov
movntq
or
insl
jge
sti
or
inc
loop
ret
inc
in
leave
ficoml
xor
loop
in
and
push
sbb
scas
xchg
das
iret
insb
aaa
fidivs
outsb
push
sbb
sbb
mov
popa
pop
add
insl
dec
xchg
lods
jae
adc
mov
gs
inc
xchg
pop
or
mov
sbb
fsubrl
nop
popf
incl
jge
cmp
mov
daa
movsb
pusha
jbe
adc
insl
not
pop
repnz
mov
mov
adc
mov
mov
xchg
ret
and
lods
xor
fdivrs
data16
fwait
add
cmp
mov
jbe
loope
cld
pop
dec
shr
gs
outsb
jge
mov
rclb
js
pop
into
jmp
sarl
nop
xor
jl
lods
dec
mov
in
mov
loopne
into
or
mov
and
stos
psubsb
loopne
int
add
lret
push
sti
les
shrl
std
movsl
pop
add
fwait
xchg
hlt
iret
lcall
sub
mov
sarl
outsb
ret
ss
xor
cmp
jl
loope
mov
cmp
sahf
mov
scas
lods
push
and
out
shrl
pshufw
lahf
movsb
mov
out
xchg
sub
push
jmp
inc
sub
and
pop
test
dec
adc
dec
inc
ja
shrl
sahf
fdivrs
cmp
xor
je
shll
idiv
push
loope
pusha
xchg
pushl
cwtl
xchg
mov
js
jo
cltd
mull
arpl
fs
cmp
cmp
inc
int
popa
xchg
inc
dec
xchg
xor
cwtl
dec
sub
mov
pusha
xor
mov
and
mov
leave
lods
addr16
loop
mov
fs
add
jns
out
or
das
outsb
rolb
fistps
lret
data16
lcall
test
dec
mov
gs
mov
movsl
or
test
test
mov
mov
mov
jle
mov
or
push
bound
rcrb
lcall
cli
sahf
pop
mov
lea
test
adc
mov
out
leave
dec
mov
std
imul
mov
mov
out
mov
dec
jne
bound
cmp
arpl
jl
mull
pop
lea
inc
or
mov
rclb
and
push
repz
addr16
pop
adc
lock
aad
test
push
fildl
add
mov
pop
int
test
orl
push
daa
repz
fsubl
jo
in
and
rclb
xchg
aam
sbb
or
mov
cmp
mov
stos
popa
or
inc
jns
bound
repnz
dec
popa
mov
loop
insl
incl
cwtl
pop
out
pop
mov
mov
fwait
jne
inc
and
mov
out
adc
pusha
jmp
shll
jle
dec
enter
lods
iret
jns
xchg
add
inc
aaa
clc
pop
fsubrs
mov
xor
adc
add
mov
mov
and
cmp
sbb
pop
jo
push
stc
sub
xchg
stos
stos
dec
or
jecxz
push
cmp
xchg
movsl
adc
sbb
mov
sbb
dec
cmpsl
xchg
pop
aam
pop
scas
in
push
xor
stc
xor
inc
xor
incl
addr16
ljmp
cmp
dec
mov
lock
or
iret
push
jns
shr
cmp
addr16
sub
jnp
pop
inc
mov
loop
mov
loope
inc
and
mov
sub
xchg
xor
test
out
rclw
adc
or
cmp
cmp
mov
add
loop
insl
mov
adc
dec
mov
lahf
inc
mov
pop
sub
push
xchg
gs
jecxz
pushf
clc
iret
icebp
and
xchg
stc
mov
fistps
jns
scas
xor
push
movsb
push
js
fisubs
gs
or
jmp
in
les
push
mov
jae
jge
sub
mov
sbb
mov
mov
aad
test
popf
lret
mov
icebp
add
dec
mov
das
jne
cltd
xor
popa
dec
pop
popf
cmpsb
pop
push
insl
mov
gs
push
pop
pop
or
test
fildll
cmc
fcom
in
or
xchg
je
test
icebp
mov
iret
add
or
cltd
mov
mov
jmp
push
es
mov
and
push
in
loope
sub
or
or
mov
out
insb
test
dec
stos
insb
icebp
mov
pusha
mov
jle
push
dec
add
pop
int3
pop
push
gs
fs
rorb
incl
cs
fs
in
fstpl
out
nop
push
or
dec
sbb
imul
popf
inc
lods
imul
cmp
or
dec
out
out
shlb
scas
clc
and
cmp
fdivs
inc
daa
mov
cmpsb
cmp
dec
aad
xchg
out
jg
mov
mov
xor
daa
stos
or
cld
movsb
outsb
jle
insb
mov
lods
xor
mov
jne
std
imul
push
adc
jae
popf
test
into
push
add
push
fstps
mov
adc
cmp
insb
inc
xor
add
fsubl
pop
pushf
inc
sub
outsb
int
xor
leave
jbe
dec
add
rcrl
pop
dec
sbb
repnz
test
pop
ret
imul
sahf
sahf
push
dec
fcoml
mov
pop
int
mov
jg
fildl
gs
push
enter
movsl
rcrb
push
rclb
xor
push
pop
std
movsl
dec
inc
mov
shl
test
setns
sbb
sub
sbb
lds
jo
or
into
xor
sti
add
push
pop
sar
mov
pop
push
xchg
aad
xchg
mov
mulps
outsl
gs
rorb
xchg
cli
popf
xchg
movsb
and
or
icebp
add
jge
and
fidivl
cmp
mov
jl
jp
into
repz
mov
sarl
adc
lods
sbb
xchg
adc
cmpsb
add
movsb
cmp
cmp
ficompl
insb
ficoml
inc
hlt
scas
popf
mov
rcr
jns
cli
sbb
xchg
js
sub
xorl
push
adc
pop
jecxz
mov
dec
lret
mull
mov
pushf
sub
ljmp
dec
ljmp
aas
push
mov
int3
pop
or
mov
icebp
inc
lret
shlb
enter
icebp
stos
out
add
xchg
xchg
adc
add
inc
xor
mov
or
dec
es
add
leave
jae
or
int
incb
mov
fcomip
dec
out
xor
sub
test
adc
or
mov
jg
xor
xor
dec
fsts
xor
rolb
push
std
loopne
xor
scas
or
arpl
inc
fsubrl
loop
sbb
notl
rcll
sbb
in
out
xrelease
stos
mov
and
add
jnp
xchg
fidivrs
mov
inc
or
iret
mov
in
and
cltd
sub
sub
xor
mov
sbb
jbe
ja
and
or
pop
jo
aaa
mov
iret
lahf
pop
and
cmpl
mov
mov
nop
pop
ja
loopne
fcomp
icebp
adc
jne
mov
push
lds
mov
mov
pop
fcompl
inc
inc
rcr
push
mov
xchg
sbb
stos
ja
mov
pop
fisubl
mov
outsl
out
mov
fcomp
mov
icebp
and
movzbl
adc
insl
lahf
ja
xor
icebp
call
shll
jo
push
and
and
fcomps
and
or
sbb
add
fdivrp
push
out
ret
inc
lar
xor
push
xchg
in
data16
inc
das
inc
adc
test
das
mov
or
aam
jae
sub
fadd
pop
das
inc
jp
push
mov
lds
into
jecxz
xchg
fwait
push
cmp
rcrl
adc
lret
pavgb
jl
push
leave
cmp
push
bound
and
push
call
fcompl
dec
or
mov
mov
cli
daa
xchg
js
leave
mov
mov
xchg
xor
jmp
xor
push
and
clc
cli
inc
sub
fs
jecxz
push
xchg
jno
dec
jmp
lock
and
push
or
or
cs
dec
xchg
jle
mov
test
inc
push
xchg
emms
push
dec
ss
mov
aad
pushf
in
adc
pop
lods
pop
sbb
pop
lret
test
cltd
add
mov
aaa
jp
lds
dec
mov
sub
mov
insl
in
aam
in
mov
lcall
fwait
jle
movsl
adc
dec
or
mov
mov
mov
inc
mov
jne
into
mov
adc
sub
mov
pop
cmp
xor
stos
fst
or
addr16
adc
stos
rorb
in
mov
int3
pop
add
js
out
rep
popa
clc
iret
enter
adc
cwtl
sub
in
or
test
mov
test
or
inc
lcall
adc
xchg
xchg
in
cli
adc
jle
adc
inc
xchg
in
cmp
ret
pop
scas
outsl
jge
mov
mov
adc
or
fdivp
sub
and
pushf
mov
shrb
pop
into
scas
leave
bound
cmpl
push
pop
in
mov
cmp
adc
fdivp
mov
jae
sarb
xor
in
xchg
xchg
inc
inc
sub
imul
mov
cmc
jl
dec
cmp
xor
pop
pop
ret
lods
js
dec
roll
jp
notb
xchg
in
xchg
scas
ror
mov
shll
pop
and
mov
pushf
int3
xchg
negb
aad
fs
rcrb
js
ret
pop
add
sub
mov
aaa
js
cwtl
xorl
imul
fimuls
xchg
jae
scas
scas
sbb
notb
call
sbb
pop
or
cmp
pop
fbstp
add
sub
jae
jecxz
sub
and
out
push
dec
jae
jle
orb
scas
cwtl
js
arpl
jp
and
sub
punpckhwd
xor
push
jae
xor
and
pushf
rcrb
or
mov
addl
jmp
cmpl
bswap
clc
sahf
lock
or
loopne
jne
dec
arpl
stos
loopne
arpl
notl
jmp
lods
incl
adc
int
xor
nop
jbe
movsl
xlat
lea
mov
jle
in
push
out
push
cli
dec
int3
xor
jbe
sbb
pop
adc
sub
jecxz
clc
test
push
and
xchg
in
mov
fwait
jecxz
scas
pusha
xor
sbb
push
lret
ret
cmp
aad
adc
cmpsl
mov
jle
pusha
sub
xor
mov
sbb
test
xor
btr
mov
pop
jp,pn
mov
sub
mov
jno
pop
dec
add
jp
test
or
insb
lahf
sbb
mov
adc
rorb
out
fstl
cmp
push
loopne
pop
imul
dec
sub
leave
rolb
jo
stos
cmp
out
push
mov
jl
add
int
pop
mov
mov
arpl
repz
int3
add
js
and
idivl
inc
addr16
pop
loopne
lret
lcall
imul
sarb
lahf
sub
fwait
mov
popf
mov
and
lds
cmpsl
pop
dec
jp
jp
call
gs
jp
jp
sbb
push
insb
lods
pop
or
je
leave
xor
sbb
lret
xor
ret
cmp
dec
andb
bound
sub
ret
pop
lret
pop
mov
mov
clc
mov
test
jb
mov
cmp
mov
test
out
sti
jmp
jo
and
adc
fisubl
test
push
sub
dec
gs
mov
lret
fcompl
xchg
dec
sbb
cmp
mov
push
sarb
enter
add
loop
xor
xchg
cmp
add
adc
lods
adc
cmc
mov
xor
rolb
xchg
cmpsb
fmull
cmpsl
addr16
xlat
fcomip
mov
cmp
mov
mov
insl
nop
or
idiv
xchg
push
jno
adc
sarb
addl
faddl
inc
mov
or
mov
pop
aam
scas
pop
test
cmpsb
ljmp
sbb
jmp
sub
dec
xorl
ret
enter
cld
stos
xchg
cmp
inc
pop
mov
cmp
subb
push
adc
test
pop
test
mov
dec
test
out
xor
or
int
jne
xchg
sbb
adc
shlb
pop
icebp
xor
iret
pop
mov
les
out
mov
adc
xor
out
imul
ret
add
push
xchg
arpl
into
sarl
jl
inc
add
imul
and
xlat
mov
movsl
mov
movsb
scas
sub
dec
in
pusha
sbb
call
lret
mov
sahf
dec
add
cmp
fadd
fists
mov
inc
ret
test
jae
inc
aas
aam
adc
flds
movsb
mov
xchg
and
xor
adc
jns
xor
pop
xchg
pop
adc
add
les
in
icebp
dec
adc
clc
sub
lock
in
lds
in
div
imul
jne
in
add
imul
xor
idivl
gs
and
and
out
imul
or
jg
fwait
lods
shl
pop
lea
out
std
jne
lods
jo
imul
push
sbb
hlt
dec
lcall
in
fisttpl
ret
xchg
jno
pop
sbb
xchg
sub
rcll
add
in
dec
and
adc
jecxz
push
mov
adc
data16
cmc
in
pop
test
pop
mov
cs
mov
fdivl
jge
jle
mov
out
mov
mov
in
pushf
dec
xor
pusha
pop
mov
adc
mov
loopne
aad
jo
lds
jo
pop
fptan
mov
cmp
popa
mov
xor
rolb
stos
cmp
mov
mov
popf
dec
adc
lret
sub
jl
sbb
xor
mov
push
movsb
pop
icebp
sahf
into
je
rcr
insb
out
pop
fwait
das
dec
jmp
scas
mov
dec
lret
and
xor
xor
aaa
sbb
test
sbb
std
xchg
xchg
and
jb
cmp
sbbl
push
lds
and
fldl
xchg
shrb
popl
in
push
or
ret
or
into
push
mov
sub
or
xor
ret
jg
hlt
loop
dec
cs
mov
fstpl
cmc
pop
into
mov
mov
jne
xchg
xchg
insl
push
mov
or
dec
sarl
rcll
imul
out
pusha
dec
jge
adc
fs
jmp
jp
lock
insl
cmp
push
negb
push
adc
lret
push
scas
and
pop
int
mov
xorb
imulb
shll
push
add
int3
push
dec
push
lret
nop
push
imul
xor
iret
data16
cmp
pop
fcomps
das
dec
repnz
cmp
outsb
inc
inc
fsubrs
sar
lcall
fsubrl
movsb
cmp
inc
sub
push
add
test
js
mov
push
xchg
hlt
xor
xor
pusha
mov
adc
add
and
dec
sub
aad
cwtl
movsb
mov
icebp
iret
mov
mov
iret
xor
imul
jp
mov
xor
jo
push
mov
dec
inc
sub
fucomp
movsb
jge
data16
ds
jecxz
pop
leave
ret
add
adc
jo
arpl
jge
out
mov
mov
sbb
shll
outsl
cmpsl
inc
or
aaa
jecxz
dec
out
jle
lret
hlt
pop
insb
mov
add
cmp
inc
or
jge
add
mov
nop
jb
ds
pop
xor
jecxz
mov
dec
xchg
xchg
inc
test
sbbl
js
pop
in
out
and
es
push
lcall
jmp
flds
cmp
add
lcall
mov
lret
loope
adc
loopne
mov
jecxz
jnp
repnz
in
mov
sbb
insb
arpl
outsb
push
and
in
insb
xor
sub
push
jae
mov
test
mov
sbb
aas
cmpsl
xlat
loopne
fstps
movsb
xchg
sbb
or
enter
jne,pt
xchg
pop
and
jae
jne
imul
jo
scas
stos
xchg
cmpsl
sbb
mov
xor
pop
jns
and
and
mov
daa
mov
cmp
lcall
jl
mov
icebp
cli
sub
les
mov
push
lea
or
xchg
adc
outsb
xchg
imul
fwait
sub
stos
jae
mov
push
pop
cli
loope
adc
popl
sub
sbb
dec
add
ret
mov
mov
jb
scas
je
or
mov
fs
pop
pop
pushf
aas
in
mov
inc
xchg
stos
mov
push
mov
pop
cmp
loope
popl
inc
in
mov
std
bound
sahf
decb
inc
inc
leave
pop
insb
pop
add
hlt
test
repnz
adc
adcl
lods
add
push
test
leave
mov
inc
rcl
push
outsl
xchg
sarl
push
iret
fsubl
imul
lods
lds
icebp
cwtl
je
jnp
call
inc
out
push
mov
lea
mov
ja
mov
push
or
or
je
imul
int3
or
bound
or
xor
pop
jge
dec
in
data16
mov
mov
inc
pop
pop
jmp
inc
stos
jae
imul
add
xchg
daa
lcall
out
push
outsl
cmp
mov
out
icebp
mov
cmp
test
push
imul
ret
cltd
lock
push
cmp
xor
pop
cmp
mov
push
mov
xchg
fistpl
sbb
lret
inc
xchg
inc
pop
add
or
pop
xor
mov
roll
rcrb
int3
stos
inc
rorb
fdivrl
das
scas
or
cmp
inc
or
push
iret
cwtl
push
andb
inc
ljmp
cmp
fwait
pop
int
std
imul
in
ret
fidivrl
popa
xchg
xchg
mov
mov
les
add
mov
ja
xor
adc
cld
movsl
stos
pop
lods
add
fcomps
fidivl
fidivl
xchg
dec
popa
rorl
inc
mov
mov
mov
add
jno
test
cmp
push
scas
orl
push
sub
sub
int
into
loope
pop
nop
push
or
stos
cmp
cmc
cli
vmread
mov
push
movsl
bound
or
sbb
test
mov
sub
mov
inc
addb
in
xlat
nop
push
mov
mov
into
ljmp
fcmovbe
dec
xor
pop
fmuls
mov
adc
cmp
pop
fbld
cmp
aam
sbbl
or
loop
out
xchg
orb
test
enter
aas
lret
inc
sub
into
xor
repz
sub
out
lahf
arpl
pushf
mov
xchg
sub
aam
cmc
mov
add
xor
js
orb
fmul
jb
mov
pop
push
test
into
jae
sub
cmpsl
add
inc
mov
lock
mov
sbb
sub
aam
adc
sub
or
dec
push
push
cmpsb
pop
xor
xor
add
leave
rclb
or
lret
jne
cmp
mov
lret
loopne
jne
xchg
cs
std
cmc
jbe
lock
ja
lahf
push
pop
lcall
aaa
aas
mov
std
aad
and
xor
jg
lock
jge
dec
xchg
sbb
js
mov
add
ret
das
mov
dec
lods
dec
push
cmpps
fists
push
xchg
pushf
fisubrs
repz
popf
lea
dec
clc
jecxz
pop
pusha
push
dec
aaa
adc
inc
cltd
cmpsb
js
clc
movsl
mov
mov
adc
push
call
mov
std
xor
cmc
mov
cmp
xchg
push
movsl
daa
lods
cmp
clc
sbbb
lds
dec
xchg
shlb
push
call
jb
lahf
and
rorb
stc
lods
dec
pop
sub
sbb
xchg
lcall
and
sahf
sti
rclb
data16
inc
fidivrl
mov
pop
xor
lret
int3
pop
loop
sarb
xor
jae
inc
xlat
call
das
fadd
leave
popf
add
fstpl
repnz
jne
cmc
lret
in
xchg
das
ljmp
mov
out
cmp
fwait
cmp
cmc
pop
icebp
cld
sbb
iret
lea
mov
cld
flds
scas
and
push
test
push
popf
xlat
jne
shrb
insb
cld
mov
std
cmp
dec
xchg
mov
push
loop
add
cmp
test
push
fisubrs
sbb
gs
in
xor
dec
stos
pop
adc
bound
mov
imul
int
loop
scas
pusha
fsubs
xchg
stos
lahf
jmp
push
xchg
adc
ljmp
sahf
mov
pop
inc
mov
xchg
lock
push
jmp
sbb
filds
out
inc
imul
push
xor
jmp
addr16
clc
stos
cmp
popf
and
push
jge
mov
mov
pusha
in
sbb
pop
shlb
mov
lea
push
fnstcw
mov
cmc
into
fsts
mov
pop
cmp
fldl
xchg
jbe
int3
pop
sarb
lds
into
inc
fimull
pop
lods
aaa
mov
mov
cli
adc
arpl
aaa
mov
roll
push
xor
push
andb
out
or
mov
test
xchg
call
push
inc
xchg
insb
sub
in
jns
testl
and
enter
sbb
call
das
int3
push
popa
xchg
cld
sbb
ja
xchg
xchg
mov
lock
inc
pop
std
cld
add
inc
or
adc
mul
adc
pop
lods
jl
mov
xor
stos
mov
insb
pushf
and
ja
pop
fldt
gs
jecxz
cmp
in
push
repnz
das
filds
popa
adcb
popa
sahf
idivb
cmp
inc
adc
pop
out
ja
fnstcw
inc
bound
jp
cmp
push
sahf
add
cltd
inc
or
mov
inc
hlt
nop
or
jg
xor
xor
in
dec
in
pop
sbb
adc
dec
stc
cmpl
movsb
jp
mov
lock
cmpsb
scas
lret
adc
cmp
pop
cmp
loop
fistpl
or
mov
push
dec
cmpsl
lea
push
popa
inc
stos
mov
in
push
adc
dec
and
insb
and
cmp
and
jnp
out
sbb
xor
dec
sbb
imul
mov
sbb
jmp
sbb
sarb
aad
sti
jg
inc
push
xorl
add
orb
fsubr
pop
or
mov
add
xor
rorl
xchg
mov
test
xor
mov
push
dec
cli
jnp
and
or
xor
sbb
cmp
xor
outsl
lret
cmpsb
cmc
fnsave
or
push
addr16
add
scas
and
loope
out
idivb
into
flds
rcll
loop
push
ja
sbb
mov
pushf
jp
insl
fstps
dec
cli
dec
out
cmpsb
sahf
lahf
cli
cltd
sti
fwait
lcall
lea
adc
push
insl
sub
orl
add
xchg
inc
repz
mov
cmp
inc
mov
xchg
xchg
or
xchg
lahf
cli
pushf
shl
aam
repz
mov
xchg
mov
pop
lods
out
lret
lcall
or
sub
and
jo
mov
push
cmp
nop
movsl
pop
inc
dec
push
bswap
xchg
out
push
sar
sub
add
mov
inc
and
subl
push
test
jbe
lods
sti
push
in
jmp
nop
xlat
loopne
ds
lods
or
cli
push
fmull
xchg
mov
repz
sbb
and
adc
scas
fldenv
jno
loope
fstl
call
ja
mov
lds
xor
push
imul
adc
vpcmpeqw
movsl
insl
xchg
into
nop
pop
add
jl
cltd
stos
or
dec
inc
and
scas
pop
sbb
lock
or
les
sbb
in
jno
js
jp
push
data16
push
mov
mov
jmp
mov
cwtl
cli
and
addb
stos
push
sub
pop
int
rcrb
dec
ret
sub
pop
pop
fstp
pop
xchg
xor
add
mov
mov
inc
test
lods
xchg
xchg
jecxz
dec
xchg
inc
cmp
das
hlt
lods
lods
lret
mov
pop
pop
lock
mov
xor
repz
push
xor
xchg
fnsave
fnstcw
fcoml
sub
or
adc
or
adc
jp
nop
push
daa
rcll
and
test
inc
dec
pop
or
test
xlat
shld
in
or
mov
jp
mov
push
push
ja
pop
jge
add
pavgw
stos
mov
loope
movsb
arpl
scas
xor
adcl
mov
pop
xchg
fwait
push
or
xchg
mov
cmpsl
cmpb
adc
lods
mov
lea
in
sbb
adc
in
jp
lds
push
mov
pop
lret
test
push
add
add
mov
rorb
dec
repz
xor
loope
ret
cld
in
jno
xor
dec
outsl
in
inc
fimull
inc
jno
lods
jmp
in
jnp
ljmp
lcall
pop
aas
mov
jns
add
adc
out
arpl
das
pop
iret
push
dec
in
lret
pop
cld
xlat
aam
leave
or
dec
enter
leave
sbb
inc
xor
xor
push
mov
and
mov
jae
push
sub
sub
movsl
lock
mov
rolb
icebp
xchg
inc
test
rclb
sbb
rcrb
add
and
jns
outsb
and
pop
sbb
fwait
push
insb
jmp
jne
pop
jle
mov
jmp
pop
pushf
mov
push
xchg
inc
jl
xlat
cs
adc
in
imul
out
mov
cmpsb
push
clc
gs
or
xlat
cmp
shl
push
adc
leave
std
jl
imul
shrb
cmpsb
sbb
sbb
push
in
outsb
in
jle
mov
lock
cs
mov
cmp
and
pop
mov
push
push
aad
cld
adc
sbb
lret
movsl
or
scas
ret
fdivrs
lret
xchg
iret
les
js
inc
jecxz
mov
in
leave
add
xor
inc
xchg
dec
adc
pop
inc
or
push
pop
push
sbb
jnp
out
lret
xor
xor
dec
cmp
mov
mov
push
cmp
movsb
insb
repz
rorb
and
mov
fidivl
out
sbb
cmpb
pop
sbb
sbb
fs
jbe
xchg
or
cmp
sub
sbb
lds
pop
test
je
push
cmp
inc
les
cmp
inc
idiv
adc
mov
pop
pusha
mov
push
out
ret
insb
mov
cmpsl
jge
stos
js
sti
xchg
sbb
fidivrl
sbb
imulb
dec
ss
mov
add
pop
cmp
incb
loope
push
pushf
lods
mov
aam
dec
sbb
fstpl
jle
and
ss
mov
gs
jbe
jo
add
rol
rorb
outsb
adc
pop
add
mov
jge
out
lock
sub
lcall
sbb
int
or
sbb
andb
push
icebp
inc
das
jns
mov
xor
mov
fcmovb
dec
call
pusha
cmp
pop
jp
addb
xchg
cmp
cmp
out
fadds
xchg
lea
mov
jno
fs
aas
shrl
add
mov
cmp
push
jle
iret
bound
testl
adcl
jl
jp
pop
push
and
dec
fnstcw
daa
ficoms
int
mov
inc
pushl
push
pop
leave
sub
enter
and
dec
repnz
orl
cwtl
hlt
scas
mov
jno
ja
mov
push
mov
jge
fld
push
popa
aam
addb
xor
adc
int
out
sbb
out
rcrl
aad
inc
push
movsl
fstps
mov
dec
shl
es
dec
nop
lds
aad
and
xor
sbb
call
sar
aad
inc
aaa
cmp
add
orl
push
out
sub
xchg
cmp
lds
sub
cmp
push
or
rcrb
call
adc
cli
mov
inc
dec
mov
inc
cli
push
sahf
popf
xor
dec
mov
cmpl
fidivs
cmpsl
ss
hlt
sub
test
xor
push
mov
std
jo
and
sub
pop
aas
iret
nop
or
mov
addb
lret
movsl
sarl
lahf
insb
fimull
dec
out
mov
mov
mov
mov
mov
jns
insl
push
mov
or
fdivr
mov
cmpsb
fldt
jmp
popa
cmp
jge
jmp
and
test
push
or
pop
in
xor
sbbb
loopne
push
icebp
and
dec
push
and
xchg
push
xchg
sahf
sub
lds
outsl
pusha
lcall
les
pop
jle
push
aaa
cmp
adc
fbstp
mov
pop
std
aaa
movsl
leave
cmp
jmp
xor
ss
push
popf
mov
xchg
test
filds
and
jb
inc
adc
fwait
mov
xchg
in
xor
adc
into
in
sub
lods
in
out
adc
cmp
popa
aad
fs
lds
cmp
xor
je
daa
fisttps
iret
mov
or
jle
xchg
add
je
cld
jecxz
sbb
mov
sub
je
mov
sbb
loopne
mov
lret
fsubrl
inc
xor
add
xchg
fiadds
cmp
ret
rep
cmpsb
lea
push
out
inc
addr16
ljmp
cltd
test
mov
xchg
xor
lahf
mov
mov
shll
in
jmp
fstp
push
pusha
ret
lcall
pop
adc
sub
in
pop
leave
cmp
xchg
push
mov
popf
dec
addr16
push
xchg
or
sub
cli
add
into
fbstp
fidivrs
fidivs
pop
add
movsb
lahf
idivb
sbb
push
sub
out
stos
les
or
dec
popa
lea
mov
mov
cwtl
sti
subl
add
push
mov
sub
stos
lea
nop
jne
dec
or
mulb
nop
mov
in
stc
pop
out
daa
pop
pop
or
jae
lret
dec
sub
pop
icebp
jg
insb
cmp
pusha
fidivl
sbb
lds
nop
jne
adc
adc
lret
mov
adc
roll
jnp
daa
jo
sub
iret
and
or
mov
adc
or
test
add
lods
jnp
jmp
ja
xor
xchg
pop
mov
push
or
jne
out
test
popa
pop
pushf
jp
jge
mulb
adc
cmpsl
in
jg
adc
es
mov
inc
xchg
aaa
dec
mov
inc
pop
mov
in
lcall
es
sub
and
cmc
inc
test
cmp
push
dec
mov
and
or
lods
jg
push
jbe
push
fs
ds
xchg
lret
cmpsl
out
testb
pop
pushf
clc
incl
lds
xor
loopne
cmp
into
sub
push
mov
insl
int3
cmp
mov
inc
pop
pop
cld
jns
inc
cmp
and
arpl
push
insl
or
pop
mov
jle
inc
fnstcw
ret
inc
xlat
xor
fcompl
aas
ror
jmp
out
sub
mov
sub
pop
sbb
cmp
ret
arpl
add
xor
sbb
mov
push
dec
test
push
xor
push
filds
les
pop
arpl
jbe
aam
adc
pushf
mov
aas
mov
inc
in
mov
bound
and
add
xchg
aad
shlb
xchg
adcl
aam
mov
insl
cmp
mov
paddsw
add
decb
pusha
inc
into
scas
mov
imul
sarb
jecxz
pop
fbld
mov
cmp
mov
mov
ja
inc
jmp
dec
inc
add
adc
pop
out
xor
xor
cs
fs
add
out
jns
inc
cmpsb
sub
lahf
sub
imul
inc
repz
cmp
ret
add
lds
mov
adc
cltd
xchg
push
out
fs
sbb
mov
repz
xor
sub
push
test
lock
xlat
test
jle
loope
out
add
xchg
in
fcoms
pop
ret
cmp
daa
out
ljmp
scas
push
ss
or
call
jg
jge
lahf
mov
xchg
add
dec
sub
and
pop
in
cs
cld
adc
gs
sbb
cltd
inc
and
adc
std
sub
sahf
jnp
lahf
test
pop
xchg
in
fsin
pop
cmp
je
fstl
mov
enter
inc
fdivl
jp
pop
and
lods
add
mov
dec
and
jmp
jnp
test
loop
jge
mov
push
gs
movsb
pop
scas
fldenv
hlt
push
fwait
or
hlt
jp
mov
mov
add
inc
push
push
lret
sbb
add
cmp
mov
loopne
ljmp
lock
movsl
add
jge
stos
mov
push
jnp
fisttpll
pop
xor
or
sahf
movsb
insl
cli
mul
es
jb
inc
out
repz
imul
imulb
enter
addr16
dec
jecxz
aas
popf
adc
sbb
mov
popf
mov
adc
lret
xorb
or
lock
aas
jnp
rolb
sub
push
imul
xor
dec
lret
add
test
pop
add
lcall
std
in
cwtl
jo
lcall
clc
movb
jae
fsubrs
mov
lahf
sbb
dec
test
clc
dec
dec
mov
lret
dec
hlt
dec
popf
pop
adc
fistpll
lahf
or
or
xor
fisttps
sub
adc
adc
mov
xor
rorb
out
sub
fbld
icebp
cmp
dec
mov
or
sub
stc
faddl
inc
les
adcl
aaa
push
fcmovnu
mov
mov
mov
mov
xlat
dec
testb
mov
mov
xchg
cmpsl
fistpl
insb
hlt
dec
inc
rclb
cld
cmp
outsl
pop
pop
mov
hlt
icebp
push
mov
mov
fldlg2
pop
sub
fildl
jg
popa
fwait
mov
outsl
ja
xlat
mov
pop
cltd
mov
mov
mov
or
pop
mov
inc
cwtl
in
dec
in
xor
shll
arpl
inc
pmullw
xchg
shrl
insl
in
push
rcrb
repnz
push
inc
and
lret
fisubl
add
cli
mov
test
push
test
jbe
adcl
movsl
pop
rcll
inc
jle
xchg
cli
leave
pushf
jnp
lahf
cmpsb
cs
push
jl
dec
push
das
cltd
sar
pop
js
and
jno
jae
and
or
out
flds
inc
mov
xchg
aaa
mov
adc
pusha
sahf
mov
dec
mov
mov
sub
or
ljmp
push
jns
push
sub
imulb
xchg
test
jno
sub
cmp
jp
dec
scas
pop
mov
jmp
shlb
das
aam
or
fcomps
out
sti
xlat
xor
insb
rol
and
jo
inc
xlat
jle
ret
ret
dec
sbb
movsl
xor
aad
dec
inc
mov
fwait
test
stc
add
lret
inc
sub
and
cmp
aam
push
jbe
add
mov
mov
fadds
adc
movsb
cmpsb
push
jo
lea
adc
in
out
aas
mov
aam
in
inc
fnstcw
sti
mov
pusha
out
xchg
ja
fiaddl
xchg
mov
mov
inc
out
xchg
fwait
jmp
out
sti
cwtl
pop
xchg
dec
lods
add
or
lcall
and
mov
daa
in
cwtl
sbb
movsl
sbb
js
shll
or
xlat
stos
sbb
int
add
fcomps
rcl
cmp
cwtl
push
arpl
in
mov
xchg
dec
lods
test
cmpsl
pop
popf
out
lock
mov
fmuls
shll
cli
jl
push
adc
ss
jae
jl
pop
cmp
mov
jp
pop
ret
fs
test
xchg
mov
push
mov
lea
fsts
jnp
or
mov
push
jno
sbb
mov
out
bound
aaa
sti
pop
mov
dec
jne
lahf
push
jmp
and
int
cltd
mov
jge
ss
popl
ret
cmpl
push
lcall
sub
out
sahf
popf
xorl
out
adc
mov
push
or
sub
imul
push
ret
rcl
icebp
je
ret
pop
aam
aas
jg
leave
push
loope
jb
add
out
arpl
mov
stos
and
pop
sbb
mov
iret
pop
incl
jg
sti
insb
or
xchg
mov
lods
cmp
add
push
sub
lods
incb
cwtl
inc
scas
or
pop
out
or
movb
add
or
dec
inc
mov
add
cli
fwait
ret
sbb
je
mov
lods
rcll
sarl
test
dec
fldl
jl
add
dec
mov
xchg
lods
call
leave
lock
cmp
jecxz
arpl
lods
jo
sbb
jnp
pop
pop
adc
dec
outsl
inc
hlt
call
dec
arpl
mov
or
xchg
mov
sub
in
push
xor
push
out
push
mov
mov
cmpsb
mov
icebp
mov
and
add
mov
sbb
in
push
sub
das
pop
cmp
cmp
xorl
dec
movsb
sub
insb
dec
sbb
popf
fildll
insl
cmp
and
or
das
mov
push
xlat
pop
push
lcall
mov
mov
pop
xor
out
dec
outsb
adc
fs
bound
testl
arpl
fninit
inc
sbb
mov
in
xor
outsb
pop
xchg
jg
sti
pmuludq
arpl
out
ds
xor
pop
idivb
or
outsb
ret
pop
out
loop
cmp
cmp
push
rolb
mov
test
insl
cmp
movsl
dec
enter
sahf
mov
mov
inc
imul
cmp
mov
inc
xchg
and
push
outsl
leave
out
in
pop
movsl
mov
jae
mov
mov
adc
out
movsb
inc
fst
jbe
sub
cmc
xor
in
insb
pop
inc
cmp
push
in
icebp
data16
mov
fdiv
insb
adcl
je
jecxz
inc
stc
pop
es
sbb
je
dec
inc
fcomi
mov
jecxz
fidivrl
addr16
and
imul
shll
jbe,pn
loope
xchg
imull
and
movsb
je
xor
rorl
cwtl
sub
push
or
pop
or
outsl
pop
mov
pop
adcl
sbb
dec
pop
loop
mov
push
dec
mov
xchg
jmp
mov
cmpsl
lea
or
pop
data16
lock
sbb
or
push
push
adc
insb
mov
xor
and
int3
loope
xchg
fsubrs
push
subl
sub
enter
decb
xor
push
jns
mov
cmp
jo
repnz
pop
cwtl
ret
outsb
std
cmc
add
adc
or
xchg
fiadds
addr16
sub
xlat
daa
jmp
sub
cmpsl
mov
leave
pop
cmp
daa
jl
xchg
jle
lock
movsl
jmp
jmp
sbb
sarb
js
inc
lret
xor
xchg
xchg
cmpsb
imul
push
shll
mov
ret
mov
stc
and
cmp
sub
pusha
sub
sbb
and
sbb
mov
mov
iret
into
xchg
mov
cltd
movsb
and
inc
movsl
shlb
push
aaa
lret
test
inc
icebp
push
sub
cwtl
loope
xor
movsl
bound
mov
cltd
movsl
dec
shrb
jecxz
dec
pop
xor
adc
stc
aaa
lret
loope
mov
rol
pop
mov
mov
add
das
push
ret
daa
mov
add
fildll
pop
inc
stos
adc
test
or
mov
and
pushf
xlat
add
and
adc
inc
dec
fsubrs
mov
xor
pop
in
or
mov
push
adc
xor
les
cmp
sub
mov
pop
inc
pop
push
push
fwait
cwtl
jns
mov
jmp
adc
aaa
dec
sbb
mov
int3
sub
mov
sub
jno
insb
mov
andb
movsl
inc
rclb
stc
push
in
mov
inc
insl
push
inc
cmp
sub
inc
inc
das
movsl
pushf
repz
addr16
sbb
dec
iret
addr16
outsl
dec
testl
jl
xor
push
add
ret
inc
test
mov
xor
pop
in
inc
mov
or
pop
ror
mov
jb
lret
push
fs
jmp
in
andb
fmuls
leave
mov
and
xchg
jp
je
call
adcb
in
dec
bnd
or
pop
shr
in
or
and
jne
les
add
xchg
bound
mov
int
mov
pop
mov
cmp
push
lcall
adc
sub
and
lahf
scas
mov
sbb
cmpsl
out
mov
pop
mov
int
sahf
bound
pop
popf
mov
mov
aam
push
cld
cmp
addr16
dec
js
aad
faddp
pop
inc
mov
mov
scas
pop
dec
gs
cmc
cmpb
pop
push
leave
push
enter
and
mov
cld
in
jbe
cwtl
sbb
xor
arpl
imul
rcr
cmp
in
mov
inc
call
out
pushf
push
cwtl
std
popf
lea
sti
add
dec
push
out
lcall
adc
cmp
push
call
mov
jne
adc
cmp
push
adc
push
out
fs
sbb
jnp
ljmp
sbb
mov
out
out
cmp
mov
bsf
jnp
xchg
xor
cmp
jb
sub
mov
inc
inc
adc
jl
push
ret
mov
js
inc
jnp
jnp
jo
mov
pop
sbb
push
inc
pop
jb
jne
fdivl
call
or
popf
push
pop
mov
jmp
sub
or
lea
adc
jo
jae
fwait
iret
stc
mov
movsl
cmp
mov
fwait
xchg
jmp
cmc
out
xor
pop
xchg
pop
and
push
notb
sub
ja
cs
adc
shl
call
mov
push
or
add
xor
adc
mov
add
sub
mov
xor
bound
jmp
insb
aaa
add
daa
je
sub
in
or
mov
les
jae
jge
xchg
clc
test
jg
sub
xor
scas
add
mov
dec
cwtl
xor
pop
jecxz
or
mov
jecxz
sbb
ja
ds
daa
into
xor
mov
and
sub
cltd
adc
aas
cmp
mov
add
mov
add
shll
addr16
ss
divl
out
adc
rcrl
xchg
jns
cmpsl
cmp
inc
aad
fsubrs
popf
cmc
sbb
and
jns
cmpsl
lock
jmp
adc
adc
pop
fmul
or
mov
popf
inc
mov
dec
sub
arpl
ret
mov
lcall
ja
adc
in
mov
fs
pop
cs
nop
add
cmp
fs
scas
mov
pop
lret
add
xlat
or
push
outsl
dec
and
out
mov
cmpsb
lahf
std
push
iret
mov
mov
notb
dec
pop
inc
clc
fldcw
pop
out
cltd
bound
mov
sbb
dec
mov
icebp
and
xor
arpl
jne
scas
pusha
les
stc
fstpl
jge
cmp
pop
xchg
pop
out
shll
int
mov
pop
lret
add
ljmp
ss
scas
mov
bound
inc
movsb
stos
jne
push
xchg
in
push
fisubrl
dec
pop
mov
and
or
movsl
pop
push
cmp
adc
push
les
xor
out
add
cs
enter
add
inc
sbb
sbb
cmc
mov
push
fsts
xchg
xchg
mov
mov
lds
repnz
lahf
lret
rorb
push
imulb
out
jmp
adc
pop
aas
xor
add
cld
lods
pop
ss
stc
jmp
lods
out
loopne
pop
sbb
mov
xor
test
mov
or
xchg
sbb
mov
pusha
pushf
int
int3
cs
fucom
rol
js
mov
addr16
loop
mov
dec
in
test
vsqrtpd
mov
sarb
jno
hlt
ret
enter
pop
mov
cmpsb
mov
mov
cmp
ds
ficompl
cli
jg
sbb
lret
loop
divb
enter
sbb
xchg
ret
pop
sbb
add
push
cmc
dec
mov
neg
popf
es
je
lds
pop
jmp
xchg
and
lret
test
inc
fwait
int
jecxz
imul
das
popf
sub
cli
mov
outsl
cmp
call
int
enter
movsl
add
shrl
pop
adc
jbe
mov
lock
imul
pop
shlb
xchg
dec
and
xor
dec
push
je
push
jb
insb
test
cli
mov
mov
out
in
push
inc
imul
cmp
push
or
dec
inc
movsb
jns
fldl2t
repz
mov
shll
add
in
xchg
arpl
or
out
imul
push
push
dec
gs
data16
enter
mov
push
das
mov
js
sub
sub
test
dec
jge
jp
cmpsb
jae
pop
sub
adc
rcl
and
test
inc
xchg
inc
outsb
testb
scas
adc
ljmp
and
xchg
outsl
mov
fistpl
pop
shll
or
sbb
mov
sahf
xor
divl
mov
cmp
mov
push
adc
stos
stos
add
inc
xchg
push
nop
xchg
pop
pop
inc
xchg
sbb
inc
pushf
jp
fnstsw
cmp
inc
ret
push
push
sub
jmp
jl
xchg
cltd
arpl
jns
repz
mov
and
imul
addr16
cmp
xchg
push
jmp
xchg
push
dec
inc
fs
pop
jno
test
test
int3
insl
insl
jno
dec
fxch
and
test
ljmp
xlat
popf
jmp
icebp
loope
icebp
imul
fsubr
mov
pop
jl
call
es
repz
pavgb
push
push
or
imul
push
cmp
cs
sbb
fs
gs
jecxz
adc
add
test
in
jne
cltd
out
popf
sbb
ret
bswap
lahf
cmpsl
adcb
and
sbb
dec
pusha
leave
jle
or
cwtl
divl
cmpsb
mov
call
ja
and
ds
pusha
out
mov
xchg
into
subb
adc
imull
mov
jecxz
add
jno
push
mov
imul
stos
int3
pushl
out
bound
pop
mov
jae
or
sub
test
hlt
dec
inc
adc
or
pop
pop
cmp
jne
cmp
in
sub
dec
sti
jge
push
jns
sub
lock
jl
aam
and
scas
frstor
int
cmp
fstpl
test
adc
sub
popf
stos
push
inc
mov
cmp
fwait
pop
std
fadds
xor
mov
aam
imul
add
mov
fmull
fsubrs
mov
inc
mov
or
sbb
in
mov
xor
ja
mov
scas
sarl
cmpsl
sti
stos
jae
jmp
jecxz
add
push
divb
int
in
addl
cmp
lret
and
lock
cltd
xlat
push
dec
pushf
lret
shrb
fwait
mull
push
push
in
push
sub
leave
jge
or
lock
scas
cmp
jae
int3
cmc
das
inc
idivb
inc
jae
or
inc
push
and
stos
test
outsl
add
insl
imul
dec
jbe
push
ss
xor
ss
xor
dec
push
pushf
pop
or
insb
clc
sahf
push
jns
sbb
scas
pop
add
lret
in
repnz
int3
shrl
es
outsb
insl
sub
orb
xor
xchg
add
les
inc
leave
scas
inc
fcoml
pop
pop
cmp
jb
jae
test
add
jnp
insl
xchg
mov
mov
push
push
pop
movb
pop
push
xchg
sub
popa
fstps
stos
cmp
out
loop
mov
in
loop
adc
pop
xchg
mov
iret
or
test
xor
jo
pop
loop
je
popa
and
inc
je
test
lods
xor
rolb
into
dec
xlat
lock
inc
daa
mov
push
mov
sbb
ds
push
in
mov
sub
adc
xchg
xlat
gs
cmpsl
mov
xchg
mov
shl
xor
cli
mov
cmp
cmc
mov
outsb
cmp
add
pop
add
insb
pop
xchg
jl
loopne
test
jp
repnz
or
dec
xchg
xor
xchg
jp
push
iret
mov
add
or
xor
push
sbb
xor
push
pop
dec
pop
fildll
ss
rorl
test
into
cwtl
pop
sbbb
and
pop
ret
jo
das
aas
imul
dec
sti
jle
jg
mov
frstor
mov
cmpsl
jle
js
pop
mov
out
mov
icebp
mov
cld
stos
lahf
shll
sti
insl
lret
jbe
or
add
movsb
mov
testb
jns
lock
and
xlat
pop
add
frstor
roll
lods
xor
movsb
je
hlt
push
scas
mov
lock
jg
add
xchg
loopne
lods
xor
repz
insb
or
mov
data16
cli
mov
clc
mov
jo
shrl
xor
lret
mov
and
inc
out
push
out
pop
cli
and
ss
dec
mov
fistps
ror
push
sub
stc
mov
cwtl
sbb
mov
xchg
fwait
fwait
mov
scas
test
jae
sbb
into
pop
mov
rcll
sub
fisubrl
cmp
inc
lret
inc
call
sbbl
add
ret
es
dec
push
pop
shll
xchg
push
lcall
and
fwait
mov
testb
cltd
add
rolb
test
pop
sar
or
add
fists
nop
es
inc
or
jns
pop
mov
cltd
mov
movups
xor
addr16
sti
mov
dec
ljmp
adc
scas
aam
loop
lock
xorb
xor
sbb
mov
cs
jle
dec
dec
test
mov
pushf
jne
mov
xor
mov
inc
mov
fwait
test
data16
ja
cmp
cmp
scas
adc
inc
mov
insl
mov
sub
test
out
and
shll
jmp
or
test
adc
out
ret
push
cltd
push
add
int
lods
dec
xchg
xchg
pusha
dec
mov
cwtl
dec
fdivl
shl
sti
dec
ja
decb
mov
in
stc
cmc
push
pop
jno
mov
or
cmpsl
sbb
mov
add
add
dec
pop
lahf
lea
faddl
ja
cmpb
cmp
mov
sbb
xor
fdiv
cli
testl
xor
repz
sbbl
jne
push
pop
mov
and
add
loopne
addr16
cmpps
rolb
push
jle
repnz
or
sub
inc
add
movsb
mov
push
popf
xor
adc
mov
fistps
sub
cmp
ffreep
loopne
dec
test
mov
or
ljmp
pop
push
mov
add
push
and
mov
mov
pop
push
push
mov
adc
addr16
or
in
pop
fs
popa
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
ljmp
lock
add
adc
jb
or
adc
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
stc
jns
jae
popf
sbb
lds
ds
xor
adc
or
mov
add
popa
and
cltd
inc
ret
adc
lahf
push
out
imul
in
lock
outsb
lcall
sbb
cli
xor
insb
repnz
and
jbe
test
mov
push
jno
cmp
cmpsl
or
mov
call
xchg
scas
dec
loope
enter
aaa
test
pop
pop
sbb
cli
xor
insb
addb
mov
iret
inc
push
and
xchg
out
xchg
xchg
jp
mov
cmp
dec
sbb
cmpsb
aaa
bound
sahf
add
pop
add
iret
lock
mull
cmp
pop
add
iret
push
mov
jge
sub
jno
cld
addr16
adc
in
divb
mull
insb
mov
iret
lock
repnz
jge
sub
jo
mull
jl
sub
jae
mull
jge
jns
add
lret
lock
adc
jg
sub
jb
mull
jge
sub
jb
divl
jge
sub
jb
add
jge
sub
jb
mov
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
push
jo
insl
je
iret
lock
cld
data16
insl
add
adc
jbe
divl
out
ds
add
iret
lock
xlat
data16
popf
sub
jb
iret
lock
xchg
data16
jge
and
jb
rep
jge
sub
jb
testl
add
iret
lock
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
jb
mull
jge
sub
sbb
jge
cmp
add
or
cli
push
les
call
repz
mov
in
dec
ss
loopne
pop
xchg
dec
dec
cwtl
add
in
push
cli
xlat
cmpsb
or
dec
cmp
add
cmp
mov
out
sub
jge
pop
dec
out
add
push
mov
nopl
dec
jp
stos
imul
add
or
cmpb
fldl
in
sarl
cs
sarl
mov
pop
mov
fdivrp
sub
dec
xchg
add
cmpsb
jle
jnp
arpl
sbb
mov
adc
sub
in
test
mov
out
lock
sub
mov
int3
cltd
ds
push
loopne
xchg
mov
outsb
loope
testl
xchg
repz
pop
dec
imulb
push
popf
rolb
out
fistl
les
sub
inc
xchg
xor
push
shrb
sbb
sahf
movsl
mov
fstps
jmp
dec
sbb
std
adc
mov
jb
outsb
mov
popa
mov
pop
int3
std
mov
loope
add
int3
cmp
sub
push
loope
dec
jl
jo
dec
xlat
ficompl
movsb
sub
mov
jbe
jmp
imul
insb
fadds
sub
inc
jb
sarl
jmp
es
stc
out
or
pop
add
loop
or
xchg
aad
xchg
addr16
mov
mov
inc
rcl
es
or
fldenv
push
or
sahf
in
cmp
xchg
xchg
sbb
inc
loope
xchg
dec
or
xor
ficompl
sub
arpl
es
sbb
jmp
jmp
sahf
add
jo
out
xchg
jae
fdivrs
movsb
push
push
int3
scas
gs
aad
mov
imul
out
jnp
inc
mov
dec
or
arpl
loope
jg
test
out
inc
inc
into
jg
popa
scas
fisttps
xchg
pop
sub
in
jge
dec
sarb
dec
popa
mov
xor
cli
inc
mov
loope
jnp
dec
sarb
mov
lahf
mov
sub
xor
imul
ret
scas
jecxz
pop
add
or
aam
dec
gs
lds
adc
push
jecxz
aas
cmp
clc
xchg
push
xchg
xor
sti
enter
sbb
test
cmp
dec
loop
xchg
outsb
ss
dec
bound
outsb
cmp
mov
aad
jo
mov
xorb
fwait
pop
inc
sub
push
dec
push
dec
fisttpl
add
push
dec
pop
adc
stc
es
add
test
hlt
cmc
cli
sbb
cs
incl
adc
je
or
push
sbb
arpl
pop
xchg
lods
sbb
addr16
je
mov
inc
out
mov
jl
imul
roll
insl
xchg
dec
lods
xchg
popa
fldcw
cmp
xchg
mov
sub
in
sub
mov
dec
out
xchg
jne
mov
insb
pop
push
fucomi
into
subl
add
lahf
pushf
mov
mov
and
mov
stc
and
nop
fistl
pop
stc
adc
test
pop
pop
cmp
mov
or
ljmp
clc
out
push
pop
les
ja
adc
xor
add
xchg
scas
icebp
rclb
mov
jbe
add
xor
pop
and
shll
push
popf
popa
xor
fistpll
rorb
xchg
adc
and
mov
inc
fsubr
push
fnstsw
sbb
pop
mov
xor
lock
sti
mov
add
mov
icebp
ljmp
lods
fdivrl
cmc
lea
xchg
fcomp
jp
add
sbb
in
mov
popa
mov
add
mov
sbb
call
sbb
cld
ret
cs
pop
sub
mov
push
add
addr16
cmp
push
fcoml
pop
fiaddl
xor
jo
or
test
xchg
mov
or
outsl
push
xchg
push
ljmp
and
sbb
std
adc
push
in
xchg
and
data16
pop
xor
out
pop
lock
ljmp
ds
adcl
imul
std
jmp
decb
jno
inc
negl
sahf
mov
lahf
test
movsb
push
sub
iret
icebp
push
mov
push
lods
jno
adc
xlat
mov
cmp
ljmp
pop
pop
in
dec
push
sub
jnp
mull
or
inc
cld
xor
gs
sbb
ud1
or
outsl
pop
outsb
mov
mov
xor
jo
ds
add
push
mov
js
pop
leave
or
xor
imul
scas
jne
iret
int3
xorl
mov
sbb
dec
mov
pop
xor
shrb
add
mov
adc
dec
lods
in
mov
sbb
adc
pop
in
xchg
mov
aad
sbb
mov
test
sbb
out
push
inc
gs
test
movsb
pop
or
cwtl
pop
jmp
pusha
out
inc
pop
push
xchg
mov
xchg
push
add
lcall
jno
push
push
mov
out
push
mov
scas
xor
popa
add
sub
push
mov
sti
jp
cltd
cmp
jne
sub
xchg
cld
fnstcw
jge
aas
fmull
xchg
mov
lcall
or
aaa
xor
fstl
pop
sub
push
movsb
push
je
scas
dec
imul
pop
inc
mov
ja,pn
jle
xchg
mov
lahf
call
inc
outsl
push
lret
dec
sbb
fisttpll
aad
int
outsl
cmpsb
push
pop
adc
flds
in
movsl
mov
ficoml
jmp
fdivs
push
push
or
xchg
fists
jle
mov
insb
popf
add
jne
out
xchg
or
je
jmp
lods
lea
pop
in
je
add
sub
sub
leave
sub
es
add
and
insb
movsb
inc
cs
loope
jbe
add
and
mov
jmp
xor
lret
pop
je
test
push
mov
or
sbbl
pop
adc
jp
call
ljmp
inc
xor
mov
adc
pop
std
jbe
push
mov
sub
dec
lods
lea
das
cmp
mov
icebp
aad
ret
pop
and
mov
out
cmpsl
bound
jno
loope
ror
ja
mov
loop
jo
and
gs
mov
data16
bound
popa
gs
mov
sbb
in
cmp
idivl
shlb
mov
sahf
shrb
scas
int
xchg
mov
mov
sbb
jo
mov
jb,pt
imul
icebp
adc
repnz
add
gs
lret
lods
cmp
cli
movsb
and
std
adc
mov
sub
in
xor
push
lahf
add
mov
push
loop
jo
std
sbb
push
loope
fbstp
lahf
nop
jnp
mov
jecxz
pushf
cmp
xor
mov
outsl
ljmp
mov
in
data16
test
fidivs
aaa
mov
pop
movsl
inc
addr16
in
sbb
dec
cmp
inc
sub
xor
ljmp
cmpb
push
push
loopne
shr
sub
cld
adc
fdivr
inc
or
xor
mov
arpl
sub
jbe
lahf
sahf
mov
push
lcall
jecxz
push
add
and
inc
inc
sarl
iret
push
cmp
mov
dec
xchg
cmc
mov
xchg
xchg
xor
mov
data16
push
push
das
sti
push
add
pop
loope
inc
jmp
cmpsb
lods
add
mov
dec
mov
imul
std
or
xchg
xchg
push
in
aaa
push
test
fdivp
mov
stos
jecxz
push
in
sub
dec
gs
xchg
xchg
rcr
outsb
movsb
pop
roll
or
cmpsl
jns
mov
fldl
cmp
or
test
cmpsl
sub
insl
xor
into
int3
out
fisttps
mov
addl
xchg
dec
xor
repnz
lock
jp
xchg
leave
scas
ljmp
aas
out
or
mov
mov
ja
int
jae
add
mov
rcll
mov
pop
sbbl
stos
repnz
popl
inc
bound
mov
jo
push
mov
mov
jl
loopne
add
fstpl
leave
mov
or
sbb
inc
dec
push
sub
orl
and
aad
rcrl
iret
mov
inc
mov
movsl
mov
inc
in
sbb
fs
test
loope
fcompl
clc
push
test
xor
jl
and
rep
xchg
mov
cmc
fdiv
pop
adc
pop
movb
shr
dec
std
ja
loopne
fildll
leave
dec
incl
test
loopne
add
lods
data16
sbb
jo
aam
mov
jne
inc
ja
sub
ror
outsb
mov
insb
pop
lahf
jb
push
mov
mov
pop
roll
mov
mov
leave
xchg
push
aam
push
data16
ss
push
je
or
xchg
mov
fdiv
test
int
cmc
lret
cmp
mov
cmpsb
out
das
cmp
xor
lret
mov
xchg
negb
sbb
enter
sub
std
push
cltd
fdivs
adcl
push
mov
dec
testl
sbb
sub
jle
add
xchg
push
aam
mov
cmc
inc
sbb
pop
mov
push
out
das
std
cltd
pusha
cltd
adc
add
pop
adc
filds
mov
add
int3
std
pusha
insl
in
xchg
fisttpl
cli
mov
xor
push
xor
adc
pop
dec
outsl
pop
and
ja
fadd
fstpl
insb
or
jne
flds
and
and
xchg
bswap
cmp
inc
adc
dec
sub
mov
pop
xchg
cli
mov
and
scas
xchg
add
xchg
add
or
loop
pop
jge
out
push
cmc
mov
push
nop
cmpl
xor
fstpt
jl
push
pop
sbb
push
xchg
out
movsl
dec
adc
lods
arpl
jno
in
push
sbbb
into
and
mov
out
push
rcrb
scas
and
inc
ja
cmpsl
test
adc
fs
add
ret
mov
sub
jnp
mov
in
popa
loop
mov
push
bound
pop
mov
fimull
icebp
fwait
test
xchg
dec
aas
sub
adc
xlat
sub
int
mov
jmp
bnd
je
test
mov
sbb
shrl
outsb
fs
out
push
xor
ljmp
sub
xor
mov
lea
sbb
jno
cmpsb
pop
push
jge
and
rorb
mov
test
enter
lock
into
mov
and
xor
and
fs
adc
outsl
mov
pop
aaa
mov
fisubrl
xchg
sbb
ret
pop
dec
icebp
aaa
mov
mov
inc
dec
vmwrite
mov
decb
cwtl
xchg
mov
or
hlt
shr
sbbl
sub
shlb
cwtl
and
xchg
xchg
jno
jae
pop
int
cmpsb
out
fwait
xchg
out
loopne
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
