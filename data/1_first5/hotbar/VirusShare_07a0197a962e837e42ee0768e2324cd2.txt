divb
in
mov
mov
mov
inc
add
add
out
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
movl
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
inc
push
adc
add
inc
sub
rol
jo
mov
push
mov
xor
push
mov
call
pushl
fwait
mov
enter
push
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
xorw
push
adc
cwtl
or
lock
fcomi
sub
dec
shlb
in
or
loope
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
call
and
cmp
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
mov
xor
test
or
sbb
push
lock
or
inc
scas
stos
imul
dec
out
jge
test
mov
pop
jne
aad
imul
cmpsl
jnp
cmp
data16
mov
dec
pop
push
insl
sbb
pop
cld
add
push
push
push
iret
bound
lds
aaa
jae
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
mov
js
sti
mov
mov
xor
mov
pop
ret
arpl
ret
add
pop
roll
pop
imul
sarl
pop
pop
dec
add
clc
sub
mov
enter
push
push
ss
loopne
jmp
fs
xor
jne
pop
adc
fdivr
mov
adc
jg
mov
adc
int3
adc
adc
ret
shrl
jge
pop
add
lock
pop
outsl
jmp
in
sub
xchg
sbb
push
decl
push
mov
sar
xor
cmp
ja
adc
add
sub
add
push
movsb
inc
xor
adc
nop
xchg
push
jo
addb
add
scas
cmp
loop
lds
iret
jle
mov
cmpl
lds
jle
push
filds
ret
add
jge
std
xlat
mov
sbb
or
jmp
cltd
sub
ja
fcmovb
shr
enter
mov
mov
sub
dec
push
add
cld
sbb
cmp
jl
cmp
jne
pop
mov
inc
pop
mov
mov
mov
push
jbe
mov
hlt
out
jne
rorl
mov
mov
or
adc
push
lea
cmpl
fld
push
xor
into
mov
mov
mov
cmpsl
sub
cmp
cmp
cmpsl
mov
in
scas
xor
fsubrs
mov
jg
cmpsl
rcrl
mov
mov
xchg
or
test
jle
dec
popa
outsl
or
push
call
sahf
mov
add
or
icebp
in
pop
pop
fwait
push
pop
sub
jg
decl
ja
mov
inc
jecxz
jns
mov
loop
pop
mov
inc
addr16
aam
sbb
sub
or
ret
andl
ret
and
mov
adcb
idivb
jmp
hlt
jg
pusha
andb
cmp
sub
mov
notb
hlt
movlhps
hlt
mov
insb
idivl
jle
mov
out
clc
adc
cmpl
je
push
cmp
cmp
jae
addl
sub
mov
or
add
inc
push
sub
jb
pop
add
xchg
pop
std
notb
sub
ret
lea
ljmp
lcall
inc
push
push
push
push
rclb
rcrl
mov
jmp
xchg
jmp
inc
or
addb
mov
pop
es
and
and
inc
sub
jo
cmp
aad
aaa
stos
rcrl
add
or
pop
or
fbld
cmp
push
mov
lea
cmp
jne
push
push
mulb
clc
push
push
adcb
js
push
mov
mov
or
pusha
enter
pop
pop
rclb
iret
rcrl
push
stc
inc
fdivl
cmp
stos
xchg
out
xlat
jge
movl
mov
add
jae
iret
xchg
add
out
add
pop
fstpt
mov
add
mov
sbb
xor
mov
pop
mov
sti
push
or
cwtl
push
push
xchg
out
sti
imul
mov
loopne
in
dec
push
push
cmp
sbb
mov
std
stos
or
adc
je
push
adc
loopne
test
push
sbb
sar
inc
inc
inc
or
or
fildll
lea
dec
push
xor
sbb
pop
mov
xchg
pop
push
jmp
dec
fwait
fs
add
sbb
pop
jae
jae
push
add
les
inc
push
dec
pop
xchg
push
out
or
iret
popf
lea
push
add
push
mov
cmp
outsl
fwait
xor
pop
cmp
sub
mov
ja
sub
mov
and
push
scas
mov
aaa
cmp
push
sbb
addr16
push
cmp
push
inc
cmp
je
call
sub
outsl
sbb
cmp
in
jne
sbb
sbb
in
jp
jecxz
jo
pop
mov
add
into
xor
jb
cmp
repnz
cmc
or
sub
test
fsub
mov
aam
jp
or
mov
mov
mov
jecxz
std
jle
mov
cmp
adc
jge
xor
jno
add
or
inc
lea
or
rcr
lcall
clc
push
or
roll
or
add
adc
or
sub
pusha
mov
cmp
mov
shlb
dec
or
push
or
ds
fisubs
scas
ljmp
or
push
mov
xlat
push
xchg
sbb
fsts
jno
cltd
sbb
icebp
stc
lcall
pushl
push
mov
out
add
jp
sub
mov
sbb
mov
ret
shrl
adc
pop
inc
xlat
add
add
pop
or
or
ret
je
dec
je
ret
jns
sbb
adc
or
adc
and
shll
js
hlt
or
pop
adc
and
iret
jo
mov
rcll
inc
fmuls
ljmp
ljmp
mov
push
add
shr
mov
cli
xor
fadds
mov
xchg
jmp
adc
pusha
pushf
pop
cmc
mov
call
push
xor
cmpsl
xchg
mov
in
aaa
pushf
or
mov
jae
mov
sarb
fisttps
inc
xchg
and
aas
mov
dec
mov
cmp
js
sub
out
sbb
push
sub
or
sub
js
and
fwait
or
fcoms
cmp
popa
add
roll
in
dec
dec
lock
fldl
pushl
dec
in
loopne
out
neg
sbb
inc
inc
pop
xlat
sbbb
mov
mov
or
cmpb
fiadds
sbb
push
cltd
adc
cmpb
jbe
movsl
push
popa
negl
pop
fildll
das
pop
sahf
jmp
sbb
call
or
test
sbb
loopne
xlat
repz
lea
cmp
sbb
adc
aaa
pop
mov
push
lret
mov
push
xchg
xorl
xchg
ret
pop
adc
test
clc
mov
fstpt
aas
pop
mov
xchg
out
cld
cmp
jl
or
dec
jl
mov
push
xor
cmp
sahf
dec
inc
push
fs
or
sbbl
mov
xchg
into
scas
push
pusha
nop
mov
and
xor
sti
xor
pushf
sub
mov
xor
or
daa
inc
fs
xchg
add
jo
mov
push
in
jae
nop
out
cwtl
adc
adc
mov
scas
adc
vdivps
lahf
xlat
lea
push
push
or
mov
xor
sub
xchg
jl
push
inc
subl
or
xchg
xor
rolb
xchg
xchg
cmpsl
stc
sub
jmp
mov
js
dec
jl
dec
in
or
mov
mov
ljmp
divb
fnsave
scas
xor
mov
cmp
call
push
push
pop
inc
lods
jo
loope
add
shlb
mov
or
sbb
outsl
lea
insl
cmpsl
flds
add
in
jl
xor
in
jne
push
mov
mov
pop
repnz
je
or
push
mov
inc
and
add
sub
sbb
xor
loopne
jno
les
mov
pop
pop
add
jne
xchg
inc
jmp
fabs
ret
push
xor
mov
mul
aam
jge
decl
inc
setno
xchg
test
out
add
enter
loopne
movl
lock
mov
mov
push
aaa
cmp
inc
xlat
or
jp
dec
adc
mov
and
shlb
bound
adc
xchg
in
push
and
push
or
ljmp
frstor
add
add
add
fldt
pop
sbbb
in
testb
xchg
in
push
sarb
pop
push
movb
stos
jo
xor
mov
and
mov
adc
jmp
stc
jle
dec
test
mov
pop
push
fldcw
push
pop
jno
idivl
je
push
fimuls
ja
and
cmp
pop
inc
je
or
test
or
xchg
mov
mov
dec
cmc
jo
sbb
imul
enter
add
out
das
lock
push
enter
lods
lods
add
in
fmull
and
or
add
inc
repz
daa
outsl
mov
js
insb
das
loopne
push
mov
dec
cmp
in
cmp
adc
sub
ljmp
sbb
fdivp
cmp
add
out
data16
xchg
jge
out
sti
lock
shlb
cmp
adc
mov
sarb
pop
adc
mov
adc
arpl
movsb
xchg
and
cmp
movsb
xchg
out
mov
adc
fwait
rol
aam
push
test
dec
inc
pushf
pushf
and
ret
mov
mov
xchg
sbb
dec
inc
xchg
xchg
hlt
inc
cmpsb
in
movsb
int3
sbb
int3
in
lret
inc
enter
mov
and
rol
push
repnz
rol
in
lret
cmp
pop
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
aas
add
testl
cwtl
arpl
pop
mov
push
sub
fstp
push
loopne
iret
and
xchg
outsb
inc
sbb
aaa
xchg
add
ret
mov
test
jo
ss
je
sbb
loop
fstp
push
jmp
cs
push
xor
sbb
or
mov
and
add
adc
add
adc
or
in
loopne
add
inc
mov
ret
jle
clc
in
mov
in
andb
je
test
lods
imul
push
push
fisttpll
movsb
and
push
dec
punpckhwd
aaa
adc
dec
scas
je
sti
or
push
divl
test
clc
out
pop
test
sub
fs
shll
pop
sbb
and
insl
or
add
popa
cmpsb
xor
lret
xchg
mov
xchg
or
std
and
pushf
push
adc
adc
ds
ds
add
cmp
or
jl
or
lea
push
leave
aad
lock
jne
fildl
xchg
pop
pop
push
jmp
push
xchg
ret
leave
xor
leave
pop
jmp
adc
adc
jle
imul
test
scas
fadds
xchg
dec
mov
adc
add
ror
sbb
sub
or
sbb
mov
push
push
sbb
daa
pop
jbe
and
jl
mov
sbb
or
cwtl
fs
sub
btc
lret
adcl
in
fildl
mov
inc
test
adc
inc
adc
leave
adcb
jno
shll
sbb
jne
fidivl
es
into
adc
dec
cmc
xor
inc
adc
xchg
dec
mov
push
add
add
cmc
dec
push
inc
mov
call
inc
lret
insl
xchg
pop
push
js
dec
sbb
test
mov
mov
lock
fistpl
jne
jo
or
sbbb
inc
sbb
or
jb
push
cmpsl
scas
cmp
cltd
outsb
clc
popf
jl
in
in
loopne
cmp
pop
add
push
sahf
les
xchg
fbld
add
pop
nopl
xchg
and
popa
pop
xlat
sbb
mov
maskmovq
idivl
imul
loop
clc
add
xlat
outsl
or
je
xor
push
push
or
mov
or
iret
xchg
mov
pushw
mov
nop
or
adc
pop
dec
movsl
and
jecxz
or
scas
mov
add
clc
inc
popw
add
lods
mov
hlt
int3
or
aaa
cmp
jl
xor
and
fstpt
sbb
out
test
hlt
je
pop
sahf
loopne
push
push
pop
ljmp
test
int
inc
pusha
lock
adc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
and
push
xor
sub
push
and
js
lahf
bound
adc
xlat
and
sti
add
pop
sub
cmp
popf
pop
mov
cmpsl
and
xchg
movsb
std
daa
inc
div
fdivrl
and
cwtl
and
je
aas
incb
add
push
or
jo
jmp
fsubrs
push
fdivrs
aam
stc
scas
xchg
sbb
sub
push
sbb
sub
sub
inc
imul
sub
jno
jno
or
ss
inc
stos
inc
dec
inc
lret
ret
test
lret
or
xor
mov
cmpsl
jne
mov
add
add
and
inc
pop
xor
cwtl
push
insb
stos
xor
frstor
ss
pop
insb
adc
repnz
rclb
lods
mov
jo
xchg
and
push
test
add
test
jo
mov
pop
lcall
sbb
adc
jecxz
dec
sub
adc
fcomps
lret
push
push
outsl
xchg
in
test
ficoms
or
sub
add
rclb
in
inc
jo
mov
mov
mov
push
mov
sti
sbb
sbb
mov
pop
fmull
fadds
mov
push
pop
and
or
loopne
add
add
sahf
inc
popf
cmp
or
jmp
dec
cmpsb
inc
das
sub
in
call
stos
dec
enter
mov
add
enter
popw
cs
bound
xchg
add
dec
mov
call
mov
insl
sbb
xlat
push
inc
jb
cmp
cltd
mov
std
fdivs
addl
outsl
inc
xor
pop
out
jmp
mov
in
inc
cmp
inc
mov
mulb
add
or
xchg
stc
pop
call
xor
ficoml
enter
sbb
pop
add
pop
cmp
daa
pop
cmp
cmp
jne
and
test
and
fadds
or
mov
int
or
cmp
ficomps
test
mov
jne
bound
shrb
push
bound
popf
fildl
js
mov
xorl
mov
addr16
punpcklwd
mov
ret
add
fs
jo
fwait
xchg
mov
loop
push
jo
mov
in
and
mov
adc
lods
add
push
je
nop
out
mov
jnp
adc
pop
dec
mov
jge
adc
je
cmp
jge
push
push
jp
mov
mov
add
inc
mov
mov
add
lock
sub
test
pslld
push
sub
call
sub
das
mov
shlb
xchg
adc
inc
in
mov
aas
mov
sub
jmp
cmp
or
shll
dec
enter
xor
pop
add
lock
mov
jmp
mov
stos
lock
jl
push
mov
add
xor
loopne
sub
add
es
scas
push
adc
push
mov
js
pop
lret
cmpb
push
push
movsb
adc
rolb
cmp
mov
cmp
inc
dec
jns
cld
push
or
cmp
sbb
add
mov
daa
sbb
or
movsb
loopne
mov
adc
dec
das
xchg
jbe
jle
xchg
inc
out
or
pop
or
sub
cmp
xchg
mov
add
icebp
les
cmp
pop
in
negb
jne
or
je
sub
das
add
cld
jo
in
sti
loopne
jg
popa
or
int3
cli
jo
inc
hlt
xor
and
lock
faddl
sbb
adc
pop
pop
test
mov
ret
orb
ret
rcr
out
out
jne
or
popa
cmpsl
push
out
xchg
cmp
mov
loop
test
call
call
rolb
sub
arpl
cmp
lahf
je
sub
jmp
push
sbb
rcrl
insb
inc
fsub
push
out
inc
out
test
inc
lock
push
add
xor
mov
mov
imull
cwtl
lods
loope
lds
ret
jno
inc
stos
orl
cmpsb
push
add
push
xor
push
push
or
jg
mov
cmpsb
mov
les
or
test
repnz
cmpsl
mov
rorb
rolb
sbb
fdivr
or
xor
xor
in
rorb
mov
mov
jnp
and
lock
dec
dec
je
sub
jmp
jge
cli
adc
push
inc
push
mov
jmp
lock
mov
jg
or
fwait
mov
xlat
pop
xchg
adc
push
rclb
xchg
icebp
inc
and
inc
inc
inc
insl
sbbb
mov
aad
mov
je
lock
mov
mov
xor
inc
mov
sarl
jl
lods
push
dec
cmp
adcb
push
aaa
fs
push
pavgw
jle
enter
jno
fwait
sbb
push
or
lock
jecxz
push
mov
orb
movl
cmp
loopne
fisttps
cmpsl
or
in
add
sarb
add
inc
sbb
sbb
imul
outsb
fadd
sbb
sbb
xchg
add
jle
ret
scas
pop
lea
add
psubd
in
ret
sub
shlb
out
inc
cmpl
push
push
jne
aaa
or
push
jo
jnp
into
in
inc
xchg
in
jp
lock
stos
xor
cltd
mov
rcrb
test
or
sbb
or
scas
fcmovnbe
mov
insb
mov
cmp
mov
push
fistl
sbb
dec
pushf
in
inc
out
cmp
ds
inc
cmp
cmpl
jne
add
mov
cmp
jle
cmp
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pushf
loopne
mov
mov
jmp
push
pusha
mov
dec
fcomps
shll
push
sti
cwtl
test
aam
fmuls
or
loopne
or
push
mov
inc
loop
cmp
nop
or
push
addb
pop
adc
scas
fdivr
mov
cmp
cli
in
mov
jbe
mov
rorl
or
in
pop
stc
and
scas
in
lret
mov
cmp
inc
mov
scas
sbb
jno
testl
nop
inc
xchg
and
mov
fmuls
test
test
pminub
jb
sbb
lods
ret
push
push
call
and
rorl
cmpb
mov
fs
add
inc
and
addr16
mov
rcll
clc
add
mov
cwtl
lock
jo
out
mov
enter
lds
or
push
jl
add
test
je
push
pusha
mov
pop
or
mov
dec
iret
mov
add
inc
mov
adc
add
dec
push
and
pushf
int3
push
pop
xor
mov
hlt
dec
mov
adc
mov
fcmovnu
into
lods
adc
rclb
sbb
mov
das
das
das
fcoms
fsubrl
adc
mov
mov
lcall
inc
mov
pushl
call
mov
decl
shr
movzbl
push
adc
sbb
xchg
or
ret
push
ret
dec
mov
mov
cmp
in
stos
mov
cmpsl
jmp
sbb
pop
popf
cmp
ret
push
andl
test
insb
sbb
in
xchg
adc
push
gs
pop
xor
mov
sti
push
pop
jb
xor
loopne
pop
or
add
xlat
push
mov
fwait
add
xor
jmp
imul
push
add
push
push
jl
std
daa
mov
cmp
jg
mov
mov
jmp
add
gs
cmp
aaa
lds
pop
fldl
repnz
sbb
mov
inc
pop
adc
mov
mov
aas
mov
dec
jecxz
mov
or
popa
lea
xor
inc
je
aaa
outsb
sub
in
sub
sbb
subl
sbb
push
shlb
and
pop
jg
mov
ret
push
pop
jmp
mov
push
inc
ret
fdivrl
add
ss
arpl
and
cmp
je
cmp
in
add
imul
cmp
adc
test
push
adc
lock
xor
inc
cmp
jae
add
inc
hlt
lea
ja
pop
dec
cmc
add
je
call
push
mov
fildl
js
je
add
fiaddl
insb
sub
fcomps
cmpsb
lock
fnsave
std
or
scas
pop
hlt
add
jl
in
and
lcall
push
lods
ljmp
pop
cmp
jecxz
xor
inc
adc
clc
roll
loop
popf
into
popa
nop
add
mov
rcrl
pop
xor
adc
cli
lea
ljmp
push
push
cld
or
xlat
leave
into
sub
test
xor
out
xchg
add
leave
pop
in
push
mov
mov
mov
mov
adc
mov
aad
inc
js
jb
mov
mov
xchg
cltd
mulb
leave
js
inc
dec
hlt
jg
hlt
or
clc
or
push
sub
pop
pop
push
enter
lock
filds
and
add
inc
ss
mov
cbtw
scas
fdivrs
in
out
push
push
add
fdivs
mov
cli
adc
xchg
sub
jno
fdivp
add
adc
hlt
jl
repz
push
sub
push
in
enter
and
and
xor
ret
or
bound
xchg
popa
pop
add
fwait
mov
cmp
push
xchg
in
test
bound
push
mov
popf
jge
or
sarl
mov
adc
or
stc
push
cmp
push
and
mov
ret
je
mov
fdivrs
mov
jp
mov
sbb
movsl
sbb
test
pop
movsb
push
dec
sbb
ficomps
or
cmp
mov
or
add
icebp
sbb
rolb
test
xor
adc
cmp
fiadds
test
add
mov
movsl
or
sbb
out
aam
fadd
je
push
and
xor
scas
ljmp
insl
hlt
pop
mov
jb
ficompl
and
sub
and
adc
sub
jmp
icebp
jb
clc
push
pop
sbb
fs
jne
cmp
je
add
xor
inc
cmp
jmp
push
push
push
and
and
sbb
mov
ret
shlb
dec
and
xor
imul
or
xchg
rol
ljmp
addl
test
fisubl
adc
jbe
setne
shlb
shll
test
sbb
cmpsl
ljmp
mov
js
lcall
divb
psrad
mov
jnp
stos
pop
add
pop
sub
pop
inc
mov
add
push
push
adc
mov
pushl
movsb
jp
js
push
decl
loop
cmp
or
inc
add
add
jno
or
loope
lock
lock
mov
loopne
xor
adc
jo
adc
sti
mov
lods
jo
xlat
or
xor
inc
fcmovb
dec
pusha
pop
dec
push
call
add
mov
add
adc
arpl
push
jmp
cwtl
or
adcb
push
addr16
sbb
daa
or
popl
add
add
xor
pop
inc
enter
aas
push
xchg
xchg
call
cmp
mov
sub
sar
shr
mov
mov
or
adc
jb
xchg
xchg
clc
mov
enter
jl
add
insb
cld
cmp
lea
jbe
mov
push
call
pop
push
leave
inc
adc
adc
xchg
add
add
push
js
test
movl
in
add
stos
xor
ds
add
les
xor
push
xor
inc
bound
mov
outsl
roll
pusha
or
nop
sub
xlat
jecxz
add
add
test
cmp
and
lea
sbb
adc
lock
push
aad
popf
icebp
rclb
mov
mov
sbb
sti
inc
andb
andl
or
loop
sub
dec
lret
movsl
mov
lods
pop
xor
mov
and
sub
incl
test
push
jae
sub
pushf
mov
fldt
adc
add
cwtl
add
xchg
sbb
xor
add
xlat
push
lds
dec
mov
mov
mov
call
jbe
mov
adcl
jns
mov
or
test
jno
dec
es
lret
cmp
cmp
push
jb
pop
and
adc
les
in
xchg
jno
sub
and
imul
add
mov
and
clc
mov
stos
xor
inc
mov
into
cs
xchg
cmc
add
bound
jmp
add
leave
adcl
roll
enter
sbbb
in
insb
jne
stc
dec
dec
inc
dec
popf
pushf
and
mov
cmp
lea
pop
stc
inc
mov
mov
dec
push
push
pop
cmpsb
pop
or
add
sbb
inc
jbe
nop
and
stos
pop
cli
out
mov
xchg
or
fwait
hlt
and
and
dec
mov
stos
jns
jg
cwtl
push
inc
mov
push
pop
xorl
in
and
jbe
andb
adc
lcall
das
lret
cmp
shl
pop
lods
stos
lock
mov
loopne
pusha
scas
cmp
and
leave
and
clc
cmp
enter
dec
daa
adc
enter
dec
adc
fbstp
push
lea
mov
sub
scas
imul
pop
sbb
xor
sub
or
sbb
xor
dec
cli
pop
ret
mov
dec
mov
xlat
sbb
arpl
subl
dec
push
jge
in
ss
popf
lea
sbb
leave
xchg
adc
out
out
mov
or
mov
inc
xchg
and
and
cmp
sbb
and
ret
ss
xchg
or
mov
cmpsb
push
add
push
mov
xor
test
movsl
notl
inc
push
push
lods
test
dec
xchg
ja
dec
jae
fdivrp
movups
sti
fistl
or
je
cmp
popf
push
jge
inc
pop
sbb
cmp
push
mov
in
in
shrl
pop
negl
sub
cmp
sarb
roll
jle
push
add
sbb
jb
xchg
loop
mov
mov
stos
mov
out
arpl
aam
add
jbe
outsl
xadd
aam
jmp
cmp
sub
sahf
nop
lret
in
jne
sub
add
push
pop
dec
je
into
adc
in
jge
adc
push
push
pop
dec
ss
inc
and
fsubr
adc
mov
sub
mov
rorb
pop
xchg
ror
cmp
adc
jecxz
jne
clc
jg
daa
pop
in
sbb
jmp
push
add
push
mov
decb
push
cmp
push
push
sbb
cmp
loopne
add
xchg
fmull
jp
fnstsw
mov
icebp
xchg
lds
sbb
or
push
sbb
loope
xchg
adc
xor
sbb
repz
push
daa
pop
jmp
and
pusha
push
jle
mov
and
adc
aas
or
mov
pop
jmp
sti
imul
cmp
je
cmp
pop
jmp
inc
dec
shrl
dec
sbb
leave
adc
cli
imul
jle
mov
sbb
fstpl
imul
jmp
sbb
and
jnp
in
arpl
sbb
je
mov
or
xchg
scas
cmp
das
pop
bound
neg
negb
pop
push
insb
push
jg
mov
loopne
adc
sbb
loopne
les
iret
clc
push
insl
sti
lahf
xlat
inc
sbb
mov
mov
add
pushw
and
loopne
in
sub
adc
pusha
lea
shlb
inc
adc
sub
mov
or
movb
add
int3
push
push
or
xchg
xchg
pop
les
jne
xchg
push
dec
push
mov
pop
push
lea
popf
mov
mov
push
push
add
push
lea
pop
cmc
gs
cmp
dec
fidivs
add
dec
mov
sbb
stos
xor
test
cld
lea
lea
movl
xchg
test
inc
cmp
sbb
lds
adc
scas
and
sbb
call
and
and
push
aam
mov
pop
push
push
test
out
add
xchg
add
mov
test
dec
incb
cltd
dec
push
jl
nop
add
jno
jo
mov
bound
or
orb
push
je
add
sub
jle
push
clc
pop
dec
ss
push
inc
and
pop
shlb
add
and
mov
movl
into
add
pop
in
adc
or
out
push
cltd
adc
insb
inc
jl
add
outsb
or
jae
adc
adc
push
repz
lods
inc
fisttpl
out
cmp
dec
call
in
push
inc
test
inc
pop
in
sub
xor
sub
pushf
inc
push
sub
int
iret
shll
cltd
es
push
pop
sub
xor
dec
push
sbb
adc
pop
ret
pop
test
push
push
cmp
jecxz
add
mov
pushf
jl
shlb
in
mov
popa
add
stos
cs
jl
lcall
outsb
fists
mov
ret
js
inc
gs
dec
std
shll
or
mov
pop
mov
popa
aam
push
aam
das
in
push
rcll
stos
inc
les
int3
push
das
cltd
rcrb
add
fcoml
push
dec
fildl
cmp
sbb
loopne,pn
fcomi
inc
add
rorb
sub
pop
fcompl
shlb
ret
mov
mov
add
mov
xor
adc
fnstsw
push
int3
cmp
jne
push
sub
xor
cmp
xchg
adc
clc
js
jg
mov
xor
pop
iret
je
lea
push
outsl
inc
inc
imul
add
mov
jo
clc
add
push
sbb
cmp
ja
pop
pushl
call
push
or
lods
out
add
mov
sahf
mov
es
shrb
les
inc
push
mov
lock
cmc
shr
push
adc
dec
lea
dec
push
push
mov
and
jge
faddp
outsl
pop
jmp
sub
sub
in
dec
jmp
sub
mov
push
sub
in
cmp
push
mov
add
mov
data16
inc
adc
dec
cmp
adc
xor
mov
add
or
push
mov
daa
lock
jge
cmp
dec
push
or
mov
pop
push
in
dec
jecxz
repz
fsubs
add
dec
jg
out
xchg
cmp
ss
add
les
lds
in
and
dec
shll
push
pop
mov
mov
cwtl
inc
push
cmpsb
mov
mov
sub
mov
fdivrs
push
fstps
leave
and
push
push
out
cmp
filds
mov
adc
fdivrp
sahf
test
aaa
enter
testl
dec
mov
mov
js
or
scas
xlat
push
dec
cmp
punpckhdq
xchg
or
iret
in
or
push
xor
div
pop
xchg
adc
loop
pop
pop
fldenv
neg
pop
push
sbb
mov
mov
push
inc
cs
mov
jle
cmpl
jne
pushl
ja
loopne
jnp
sbb
push
push
int
push
adc
xchg
cwtl
popf
fnstenv
cld
adc
loop
dec
dec
jns
test
dec
fisttpll
add
jmp
insl
and
int3
pop
jg
push
dec
inc
cmp
sti
je
cmp
cltd
pushf
in
pop
mov
push
sahf
pop
je
jo
jno
add
js
loopne
orl
inc
inc
lret
ja
and
and
xchg
dec
jg
add
es
xor
aas
incl
jne
movb
jmp
cmp
jecxz
les
popf
movsl
fldz
xor
xchg
cmp
enter
or
xchg
test
mov
dec
aas
mov
sahf
add
lea
cs
and
sub
test
sbb
lock
jge
loop
test
and
test
data16
fimull
popf
sub
mov
mov
push
dec
or
adcb
cwtl
pop
lods
push
fsubl
push
mov
adc
fsubrl
or
pop
cmp
iret
push
adc
enter
roll
pop
jno
notb
push
test
jl
adcb
mov
add
inc
sub
cmpsl
iret
xor
addl
mov
sbb
push
push
mov
push
push
lea
and
fwait
dec
sbb
cmp
push
pop
push
xchg
mov
call
push
lret
repz
sub
daa
push
pop
sbb
mov
xor
movsb
fistl
and
jge
push
xor
jae
int
clc
test
and
mov
jmp
cmp
std
cmc
filds
inc
pusha
fmull
mov
outsb
out
push
add
mov
aaa
movsl
add
popf
pop
mov
push
stos
xchg
cltd
cli
cmp
inc
fiadds
mov
sti
popf
out
andl
scas
mov
xchg
xor
inc
negl
popa
in
sbb
push
mov
inc
push
popa
sbb
int
mov
adc
mov
sub
xor
outsb
add
call
adc
cmpsl
ss
or
xor
or
sbb
pushf
push
mov
xlat
push
adc
lea
icebp
xchg
loopne
cmpb
xor
je
push
pop
pop
sub
pop
push
or
arpl
jne
cs
fadds
push
mov
adc
iret
enter
cmp
push
insb
repz
push
roll
push
or
xchg
sbb
xchg
popa
fmuls
push
icebp
push
ret
or
push
push
xor
call
imul
jmp
sbb
cltd
sub
push
je
push
push
jecxz
and
fadd
adcl
addl
pop
fadds
insl
xor
imul
adc
xor
dec
lret
push
adc
add
jmp
cld
aas
mov
cltd
mov
lea
push
jge
mov
dec
adc
sbb
or
clc
out
mov
add
cmp
jge
mov
int3
or
idiv
push
mov
mov
mov
outsb
lea
dec
ret
xor
idiv
cs
ds
bound
sbb
test
jg
mov
sub
cli
push
out
adc
or
mov
adc
scas
mov
sbb
add
cmc
jge
add
jmp
add
lock
sti
adc
in
or
out
mov
pop
insb
arpl
sub
mov
add
mov
je
pop
sbb
mov
dec
push
into
jp
xor
jo
mov
daa
pusha
js
mov
out
sbb
dec
fs
jl
movl
adc
test
insb
sti
test
mov
lahf
xor
lahf
movsl
negl
pushf
movb
sbb
push
mov
dec
lea
sahf
jl
int3
adc
sub
cmp
or
lcall
insb
mov
mov
fildl
mov
test
jns
faddl
xor
add
xor
rorb
out
ds
mov
sub
mov
pop
cmpsb
fcomip
mov
mov
inc
les
cmp
add
push
lods
mov
cmpb
shl
je
into
clc
fidivl
jmp
push
xchg
out
add
cli
mov
aaa
pop
mov
pop
jne
pop
pop
movb
dec
loopnew
push
dec
outsb
mov
loope
leave
xchg
jp
inc
inc
pop
mov
inc
add
cmpsl
aad
xor
shlb
ljmp
clc
lea
add
and
cmpsl
je
addr16
scas
shlb
je
mov
imul
mov
pop
and
push
pop
arpl
sbb
loopne
sub
dec
out
push
pop
pop
inc
in
push
into
pop
leave
push
cwtl
xchg
pop
js
lds
pusha
mov
sub
or
mov
add
mov
push
and
cltd
add
test
xor
sbb
fcompl
cmp
int
sbb
loope
add
fdivs
pop
iret
addr16
dec
jns
and
cmp
loopne
aaa
mov
inc
jne
sti
mov
adc
mov
push
les
jmp
jecxz
lea
punpckhdq
leave
adc
loope
fldenv
rorb
loopne
cmp
push
dec
jne
mov
lea
push
mov
push
jmp
xchg
pop
pushf
or
inc
in
lea
pop
pop
and
add
or
into
imul
or
dec
or
add
inc
cmp
adc
jnp
jle
adc
andl
pop
adc
sub
mov
or
xor
or
js
jae
add
dec
stc
push
mov
adc
popa
add
pop
enter
mov
pop
leave
add
mov
lahf
cmp
fs
and
int3
pop
push
pop
sbb
stc
into
in
out
pop
popf
addb
ret
mov
jl
mov
inc
pop
inc
ds
or
repnz
inc
push
cmp
roll
das
sbb
cmpb
inc
and
mov
adc
xor
and
pop
jno
pop
dec
adc
ss
cmp
mov
scas
cwtl
pop
lret
mov
push
add
push
mov
pop
cmpb
setb
test
rorb
xor
in
adc
je
xor
dec
adc
data16
add
or
aaa
xorb
add
je
push
fstps
insl
movsb
jmp
negl
imul
incb
push
je
dec
mov
push
adc
test
xchg
hlt
push
fwait
jno
mov
sub
add
mov
add
shrl
inc
inc
scas
sbb
push
in
adcb
int
fwait
mov
jnp
add
es
mov
mov
aaa
xor
mov
push
rolb
jmp
ficompl
add
adc
push
xor
add
inc
div
rorl
jmp
test
mov
sbb
mov
push
pop
push
add
mov
add
in
dec
and
mov
adc
or
add
pop
pop
pop
pop
adc
sbb
sub
loopne
das
inc
xor
loop
lock
into
xchg
leave
or
push
jb
addb
outsl
adcb
js
add
dec
std
jl
aam
int3
js
add
enter
lahf
add
test
and
cld
sub
xor
adc
call
lods
arpl
or
insb
orb
movsl
jge
or
mov
rorb
lock
clc
pop
repnz
repnz
push
in
enter
test
sub
xor
dec
xchg
into
stos
movsl
repnz
cmp
fmuls
add
aam
and
xor
int3
add
fidivrl
add
cwtl
add
pop
shlb
pop
xor
pop
or
mov
push
push
cltd
sub
add
or
or
in
daa
fsub
mov
mov
mov
in
push
outsb
pop
inc
enter
icebp
push
push
and
push
mov
fisttpl
pop
push
jne
xchg
xor
int3
pusha
das
lcall
push
add
push
mov
or
and
ds
jno
cmp
mov
imul
sarb
push
es
jp
push
pop
lds
push
or
push
fdivrs
dec
cmpsl
jae
add
jmp
mov
mov
inc
pop
mov
mov
add
jnp
imul
and
mov
enter
arpl
add
hlt
aad
push
push
lock
push
icebp
insl
or
and
pushl
push
shrb
lret
jmp
out
mov
xor
dec
cmp
mov
sbb
jl
aas
xchg
test
mov
pop
ficompl
mov
xorb
loop
dec
mov
jmp
dec
mov
sub
pop
dec
insb
js
push
mov
mov
lea
xor
add
xor
shlb
call
jle
sar
lcall
cmp
jge
mov
mov
mov
cmp
sbbb
jl
or
cmp
jle
call
jne
inc
mov
push
iret
add
fsubr
sbb
sarb
fcomps
adc
test
nop
mov
aam
jne
and
sbb
push
leave
shlb
enter
cld
dec
mov
cmp
in
mov
adc
in
jo
sub
inc
sete
adc
loope
dec
sbb
mov
xorb
push
xor
and
stos
push
or
popf
iret
adc
pop
popa
cmp
push
xor
push
sub
dec
out
mov
imul
push
pusha
add
mov
dec
pop
adcl
bnd
sbb
xchg
shl
dec
add
ret
jmp
ror
fdivrl
or
push
push
js
cmp
loopne
adcl
subb
jmp
sti
push
dec
lock
add
mov
xorl
rolb
sbb
xchg
into
push
insl
loope
arpl
mov
mov
mov
mov
call
cld
cmp
sub
push
pop
and
out
iret
ss
mov
jp
fadd
or
popf
sub
mov
cmp
daa
push
xchg
push
or
jbe
and
add
gs
jmp
mov
jae
add
fmuls
jb
ja
mov
jne
hlt
inc
mov
push
pop
pop
jo
mov
adc
clc
mov
pop
lods
sbb
fsubl
push
xchg
inc
sbb
and
int
or
in
repz
in
int3
arpl
call
mov
clc
xchg
daa
adc
or
shlb
push
mov
test
stos
and
in
dec
loopne
cmp
lock
sbb
insb
test
enter
or
pop
mov
xchg
jle
jge
sub
pop
in
adc
sbb
sub
das
insb
call
jne
cltd
or
or
mov
mov
pushf
je
jb
xchg
or
aaa
pop
xchg
loopne
loop
jne
mov
je
or
pop
jne
ficoml
clc
clc
sub
mov
or
cmp
sar
lock
push
inc
pop
dec
call
mov
adc
dec
clc
cmp
call
dec
orl
add
dec
dec
mov
pop
clc
lock
xchg
shlb
cmp
clc
lock
cmp
jmp
mov
hlt
mov
out
in
mulb
or
jbe
into
push
push
add
push
outsl
or
and
or
lock
mov
dec
jp
add
add
in
mul
pop
inc
or
mov
hlt
insl
inc
inc
in
jb
sub
fstpt
das
sub
lcall
pop
cbtw
add
nop
jl
loopne
or
call
lods
dec
sub
jmp
clc
stos
shrl
cmp
add
clc
sbb
sbb
pop
imul
mov
inc
call
push
xor
xor
xchg
jle,pn
cmpl
xor
push
outsb
pusha
pop
push
gs
jmp
mov
cmp
call
push
push
adc
xchg
test
mov
or
popw
in
jbe
pop
push
mov
push
in
sbb
mov
adc
pop
mov
sbb
mov
mov
inc
push
mov
add
xor
test
int3
ds
xor
push
push
fisttps
in
cmp
loopne
push
fs
add
xchg
mov
callw
push
orl
mov
daa
enter
idiv
and
rclb
jbe
mov
sbb
xor
add
push
jbe
insl
lods
idivl
cld
mov
add
push
sub
or
inc
adc
xchg
fldln2
loop
mov
ret
xchg
push
inc
pop
adc
push
push
cmp
ss
sub
add
mov
add
mov
sbb
or
sub
ja
out
jle
xchg
pop
pusha
push
setg
add
add
lock
lea
stc
in
pop
jbe
dec
sub
jge
sub
hlt
das
andl
push
mov
and
arpl
dec
xor
inc
jns
inc
xor
push
cmp
cmpsb
mov
mov
push
inc
dec
push
popf
xchg
fcoml
push
mov
stos
jb
aam
rolb
push
das
cmp
rorl
mov
rcll
or
mov
fadd
or
inc
add
push
or
and
push
sahf
add
lock
int3
jmp
mov
jp
loopne
mov
ja
fs
jae
xorb
fstpt
shlb
add
mov
adc
mov
mov
inc
insl
ljmp
add
aam
inc
sbb
xchg
inc
shr
and
push
mov
mov
inc
pop
mov
cmp
push
and
repz
dec
jnp
adc
ljmp
jns
lcall
add
jg
call
lods
xchg
daa
push
adc
push
xor
lea
in
lock
test
dec
cmp
lret
jle
mov
mov
jl,pn
jmp
lock
jg
cmp
cmp
jg
push
add
rolb
aaa
or
cltd
adcb
ss
mov
sbb
or
inc
sub
jge
cmpsl
xor
fnstenv
inc
cmp
cwtl
movl
xchg
and
loopne
jae
cmpsl
cmp
div
test
pop
dec
out
sbb
sarb
lea
sbb
or
ret
adc
push
cmpsl
xchg
fstpt
xchg
mov
jp
sub
sarl
out
add
dec
sbb
fstps
push
add
xor
in
xor
adc
sbb
mov
fistps
mov
sbb
inc
or
lcall
out
sbb
sub
add
push
cmp
aas
and
and
mov
push
pop
dec
mov
lahf
add
out
jo
stos
test
in
jo
inc
cwtl
adc
mov
or
lea
add
rolb
inc
lock
lea
sbb
test
call
jnp
test
push
setne
mov
cmp
int3
addb
dec
rorl
push
pop
dec
push
pop
lahf
cmp
mov
loopne
jecxz
add
sub
inc
xchg
add
insl
push
xchg
loop
faddl
test
lea
nop
inc
or
nop
inc
or
or
ret
not
roll
adc
or
xchg
pop
dec
sub
xchg
fs
pop
popa
fists
or
or
pop
add
sarb
pop
pop
in
and
mov
mov
testb
aaa
push
push
jp
push
xor
xor
inc
sub
jb
mov
add
mov
dec
dec
cmp
aad
adc
aas
rolb
mov
xchg
ljmp
fistl
xchg
push
addr16
fwait
cli
insl
xor
push
add
jb
dec
sbb
incl
ficoms
aas
sub
inc
xchg
adc
dec
js
pop
pop
xchg
outsl
cs
rol
mov
add
fldl
js
or
in
push
hlt
movb
jg
in
lea
loope
xorl
lret
ds
jecxz
pop
stc
sbb
fistps
xchg
mov
pop
sbb
test
js
dec
imul
dec
and
adc
subb
cmp
xor
and
push
push
test
pop
sarb
jne
mov
and
xchg
mov
dec
or
push
fldl
pusha
adc
xchg
adc
push
ret
jmp
or
xor
test
and
jg
xor
cmp
add
movsl
and
lods
mov
dec
mov
in
push
or
rcll
add
push
mov
mov
jle
xor
add
push
int3
mov
cmp
data16
js
in
movzwl
std
mov
pop
pop
mov
and
inc
or
imul
in
out
int3
lods
xor
adc
mov
adc
aam
add
stos
jno
test
inc
sti
push
roll
mov
dec
adc
push
mov
sbb
stos
push
and
mov
adc
dec
xor
add
test
test
cmpsl
push
arpl
pop
callw
add
outsl
mov
jae
loope
stos
mov
cmp
inc
add
cmpb
outsl
loop
movsb
fdivrs
fistps
test
sbb
fists
movsb
push
sbb
out
and
add
mov
mov
jbe
and
push
in
cmp
jae
adc
sbb
pushf
mov
lea
and
mov
add
or
pusha
ljmp
addb
mov
iret
pop
mov
mov
testl
lea
mov
xor
fdivr
xor
sub
xchg
adc
mov
shll
test
cmp
add
rcrl
adc
rcr
jae
fs
xor
sbb
add
in
in
jae
cmc
inc
pop
jnp
stc
dec
ja
mov
mov
aad
and
icebp
mov
add
inc
out
xchg
roll
std
mov
aam
push
cltd
push
loopne
xchg
dec
pop
mov
jmp
ss
dec
or
fs
dec
adc
inc
push
jecxz
popa
add
pop
ja
push
add
inc
and
cwtl
add
fisubl
mov
enter
push
cltd
fistl
mov
mov
and
adc
xchg
cmp
pop
insl
scas
movsb
push
hlt
add
loop
andl
and
or
mov
dec
pop
push
add
fsubrs
bound
call
xchg
cmpsl
pop
push
gs
lods
mov
inc
loop
mov
addl
int
dec
arpl
pusha
jns
mov
add
inc
mov
push
faddp
loopne
movl
fwait
xor
mov
and
int
repz
dec
orl
lock
ror
hlt
mov
xchg
pop
adc
movsb
add
notb
or
rclb
xor
push
loopne
xlat
add
enter
je
xchg
sub
repnz
inc
loopne
pop
cmp
ss
push
lds
sbb
iret
ret
jl
mov
clc
cmp
imul
and
add
shlb
shll
cmp
push
js
fidivrs
xchg
sti
rcr
loopne
mov
add
mov
pusha
pop
pop
add
dec
xchg
and
movl
scas
sub
loope
pop
jp
push
add
lds
and
push
adcb
pop
add
pop
divl
or
mov
cmp
test
push
or
jb
leave
pop
pop
or
mov
push
pop
push
cmp
push
push
in
inc
dec
hlt
je
adc
jmp
push
sbbl
push
cmp
sbb
pop
imul
push
push
adc
sbb
ret
xor
jmp
or
rol
mov
xor
jno
cld
jg
cmc
cmpl
push
push
pop
cmp
je
push
mov
mov
movsb
jno
add
test
ss
imul
or
scas
or
cwtl
data16
xchg
dec
adc
xchg
or
jns
push
inc
jo
and
push
mov
jecxz
push
fs
lea
adcb
add
mov
sbb
and
push
push
mov
push
xchg
mov
es
adc
mov
push
lods
add
icebp
fsubrl
mov
daa
int3
sub
jl
or
and
and
loope
push
mov
das
or
mov
in
dec
cltd
popf
sub
aas
mov
push
mov
das
xchg
std
xor
inc
jns,pn
in
pusha
adc
icebp
insl
sub
or
push
or
pop
push
into
int3
xor
rorb
mov
push
jno
push
push
push
mov
push
sub
das
out
add
shl
or
and
mov
sub
cs
orb
popf
call
adc
inc
cmp
pop
mov
mov
inc
jmp
movsb
subb
push
push
adc
adc
dec
fcomps
fldl
mov
out
aad
fldl
add
outsl
lea
cli
insl
fnstsw
leave
cmp
loop
ret
fcompl
mov
ljmp
leave
mov
jne
mov
mov
add
insl
pushf
inc
lea
xor
adc
fcomps
cmp
mov
movsl
js
pusha
loopne
or
mov
or
lock
or
cmpsl
jmp
add
les
fwait
testb
cwtl
or
leave
mov
mov
cmp
movsb
dec
pop
or
insl
add
xchg
gs
fsubs
aam
add
je
test
pop
sub
sbb
clc
add
jb
and
dec
xorl
or
imul
adc
jae
xchg
in
fisttpl
jge
cmp
scas
int3
lods
push
dec
adc
jg
or
dec
js
mov
int3
push
push
mov
cld
je
fbstp
daa
push
pushw
test
jbe
mov
inc
sub
mov
shlb
ljmp
push
inc
xor
xchg
sub
in
push
push
xlat
pusha
cmpb
pop
push
mov
mov
add
adc
bound
add
cli
add
push
outsl
xchg
lock
dec
hlt
rorb
mov
add
push
sub
mov
pop
lret
repz
mov
ljmp
in
lret
ds
inc
cld
push
sar
xchg
mov
xchg
xor
and
hlt
sub
loopne
es
or
js
push
jo
jno
pop
jb
sbb
push
push
jno
xchg
push
jbe
xchg
mov
or
push
jmp
xchg
push
das
pop
sub
sbbb
enter
and
clc
jl
cmp
ja
add
adc
inc
or
rcll
stos
into
cmp
les
insb
aas
cmp
xchg
clc
out
or
dec
rorl
cmp
into
rorb
mov
push
ret
xchg
das
outsb
push
add
mov
cs
pop
cmc
cmp
push
movzwl
mov
sbbb
sub
push
int3
push
inc
inc
ret
push
pop
xor
mov
cltd
sub
dec
mov
push
add
sub
push
fisttps
sub
aam
sbb
fldl
mov
xorb
inc
lock
shll
nop
mov
pop
sub
inc
arpl
mov
je
or
sub
dec
push
out
pop
sbb
lods
xchg
nop
pop
add
cmpb
push
add
add
push
ret
adc
shlb
and
data16
cmp
insb
cmpb
addr16
jmp
dec
push
cmpsl
sbb
ja
push
arpl
lods
and
mov
dec
loope
clc
je
popl
clc
ds
adc
call
loopne
stc
sub
lea
push
lea
push
inc
push
dec
inc
out
repz
push
cmpsb
imul
ret
xor
lcall
aas
push
cmpsb
dec
lret
cmp
jl
cmp
mov
hlt
int3
xor
sarl
icebp
sub
push
jle
push
add
icebp
jne
mov
int3
negl
add
shrb
add
push
mov
adc
dec
arpl
test
out
lcall
cmp
je
sub
data16
mov
push
in
fstpt
xor
add
fldenv
xchg
test
adc
push
sar
icebp
push
or
pop
jmp
jns
sbb
bound
in
pop
adc
push
mov
lahf
in
xor
arpl
fldcw
shlb
clc
fisttps
js
dec
or
in
xor
out
sub
and
insl
clc
sub
dec
xchg
fcoms
enter
xchg
or
add
dec
xchg
ret
call
pop
and
cmp
pop
ja
pop
gs
loopne
repz
xchg
and
ds
jne
les
xchg
out
lock
xchg
pop
faddl
push
sbb
stos
mov
test
adc
cmp
jl
pop
divl
or
test
add
cmp
aaa
or
xchg
ljmp
jne
fistpl
adc
lock
dec
or
test
push
bound
test
rolb
packsswb
in
mov
inc
shrl
adc
and
adc
lcall
andl
or
adc
cmp
mov
or
adcb
orb
shrl
pushf
inc
lods
mov
insb
jl
cmp
imul
sub
cmp
xchg
sub
jl
jmp
pop
xchg
sbbb
leave
add
dec
decb
data16
mov
in
fisttpll
sub
and
push
addb
or
or
fwait
dec
cmp
je
into
mov
mov
jne
fldl
pop
pop
or
loop
rclb
mov
fadds
mov
aam
pop
cmp
lods
push
stos
pop
jl
faddp
jmp
jl
ret
sbb
shlb
push
push
std
cli
jmp
mov
jno
cmp
push
inc
cmp
jae
add
push
insl
add
pop
insb
cmp
pop
pop
and
xchg
ret
cmpl
mov
fdivs
lea
js
fcmovnb
cmp
aaa
cltd
add
dec
mov
pop
cld
rorb
mov
sub
ljmp
insl
xor
jns
pop
sub
fildl
lret
mov
pop
xchg
xchg
movups
xor
jae
les
jo
jl
or
adc
inc
cmp
or
div
orl
cmp
jbe
dec
and
xchg
fsubrs
or
add
sbb
ret
hlt
insl
aad
les
push
or
dec
sub
lock
dec
sub
mov
hlt
in
test
xchg
xor
mov
cmpb
mov
lret
int
daa
lea
push
xchg
and
cltd
adc
sub
push
out
add
sbb
loopne
and
add
mov
cmp
je
shlb
sbb
and
loope
lret
pop
xchg
or
loop
mov
sti
je
mov
xchg
ret
adc
pusha
shlb
push
pop
lcall
or
xchg
xchg
testb
jl
xor
dec
rcll
mov
lahf
add
mov
sub
js
push
push
movsl
push
fisubs
dec
adc
testb
pop
push
mov
ljmp
fldenv
xor
jp
insl
popa
mov
push
in
jne
test
push
sub
jbe
xchg
sbb
neg
push
test
ret
add
and
add
js
or
out
jne
test
dec
rclb
adc
push
push
je
inc
jmp
mov
or
int
in
add
sub
pusha
mov
test
push
sbb
inc
sub
rclb
int3
and
call
lock
das
pop
sbb
aad
dec
cmpsl
movsl
xchg
ret
sbb
push
iret
mov
mov
dec
inc
outsb
test
fdivp
sub
andl
jnp
jl
add
jne
fsubs
xchg
rcrl
icebp
outsl
mov
or
adc
or
mov
mov
rclb
daa
stc
and
inc
dec
lock
add
movl
jmp
push
inc
add
mov
mov
add
movsb
movsl
roll
inc
adc
mulb
fcomps
jae
mov
cmp
sub
fs
push
cmp
lea
shrl
movsl
adc
adc
or
js
jl
xor
sbb
xor
add
stos
in
popf
xor
dec
inc
inc
inc
adc
push
add
jnp
sub
pop
jg
rcll
pop
fcompl
mov
push
pusha
aas
mov
push
or
xchg
cmp
push
mov
sub
push
je
jo
nop
inc
push
insb
push
pop
dec
in
dec
lahf
or
pop
or
nop
jmp
dec
lods
inc
idivb
leave
ret
cmp
jp
cld
loopne
mov
test
insb
or
test
push
int
test
lea
or
inc
lret
cmp
js
push
ljmp
push
std
xchg
sbb
je
orl
push
inc
mov
or
decb
movsl
sti
lea
mov
je
lret
mov
sbb
xor
jg
pop
ja
pusha
adc
cwtl
insb
xchg
add
push
xchg
push
add
xor
push
pop
gs
repnz
popf
dec
mov
rol
add
aam
sub
orl
shlb
outsb
fwait
ret
inc
push
nop
xor
rcrl
or
mov
mov
sub
stos
or
aam
adc
out
inc
xchg
cld
lea
push
rcl
and
push
shlb
pop
mov
jp
test
js
sub
ja
fcmovbe
sbb
mov
shll
or
sub
xor
add
push
jns
and
adc
movsl
sbb
push
cmp
inc
jbe
push
rcrl
ret
pop
repz
or
punpcklbw
mov
inc
repnz
mov
xlat
ljmp
xor
arpl
cld
out
cmc
inc
cmpsb
mov
sbb
inc
inc
push
xchg
or
push
lea
pop
insb
xor
mov
aas
mov
sub
push
mov
shll
in
sub
leave
lea
jg
cmp
push
adc
cltd
fldl
fmuls
mov
cld
push
dec
xor
js
ret
lea
ret
fadds
push
cmp
add
in
cmp
outsl
sbb
jae
call
xor
test
fldl
cmp
jle
sub
and
in
cmp
fnstenv
xor
in
sahf
js
push
inc
sbb
adc
dec
push
and
mov
dec
popf
add
sbb
add
lea
mov
test
iret
cltd
sbb
inc
nop
or
mov
inc
mov
loop
jg
push
jns
jns
rolb
pop
mov
dec
and
inc
or
mov
cmpsb
ficoml
ret
mov
add
icebp
and
leave
push
add
lock
test
lock
xchg
cmp
push
push
adc
iret
add
lcall
pusha
mov
push
sub
push
add
xor
aaa
daa
mov
and
popf
sbb
sbb
loopne
sub
test
xorl
popf
or
fdivr
faddp
mov
cmpb
nop
push
ret
fisttpl
pop
push
or
mov
clc
sub
rclb
aad
mov
mov
adc
stc
mov
add
dec
xor
and
std
lods
inc
rcl
jno
cmpsl
and
mov
mov
inc
iret
ret
dec
adc
into
and
mov
clc
stos
mov
jmp
push
stos
aas
adc
pop
pop
rorb
js
das
jl
outsl
cld
pushl
mov
cmpsl
mov
and
fistl
adc
add
push
push
js
lahf
mov
and
sub
inc
decb
ffree
mov
pushf
add
inc
add
push
test
push
cmp
sub
xchg
sbb
pop
fs
and
addr16
xchg
sub
adc
out
mov
xor
push
push
fildl
mov
adc
sbb
ljmp
push
aas
fwait
or
je
sub
clc
js
mov
add
mov
je
enter
xchg
cmpsl
insb
hlt
lea
and
sbb
cmp
dec
pop
mov
js
data16
jne
adc
pop
push
or
inc
cmp
add
push
imul
ror
mov
lret
and
lods
xor
sub
or
cli
mov
xor
jno
scas
sbb
and
sbbb
ret
sbb
push
les
sub
lea
xor
lods
test
jmp
add
pop
push
pusha
jo
inc
insb
pop
shll
mov
test
or
mov
pop
add
mov
outsl
imul
mov
inc
pop
adc
clc
xor
push
insl
idivb
push
cmp
jbe
inc
mov
or
std
add
xor
pop
mov
cmc
or
in
pushf
sbb
or
cmpsb
in
or
cs
sub
je
rcll
push
test
adc
insb
and
mov
nop
sahf
and
jnp
add
inc
push
pop
cmp
xchg
sub
scas
ljmp
jmp
shlb
push
xchg
ret
ss
xor
jae
jl
in
das
scas
stos
lea
push
cmp
inc
mov
test
movsb
fstl
or
sub
dec
test
inc
filds
stos
daa
jne
test
adc
jp
mov
imul
pop
ss
add
push
fucom
jae
ret
cld
outsl
mov
clc
inc
push
fwait
popf
mov
dec
or
sbb
mov
enter
pop
dec
fdivs
scas
jmp
call
test
lock
add
add
xchg
push
pop
iret
adc
adcl
test
arpl
mov
mov
and
xorl
aam
pop
shlb
dec
in
nop
and
adc
mov
ret
xor
icebp
pop
shrb
inc
push
lods
push
mov
lock
dec
shlb
xor
insl
and
sbb
fnstenv
mov
xchg
test
adc
dec
les
push
shrb
mov
xchg
enter
and
test
mov
jbe
jno
sbb
leave
xor
scas
js
inc
fdivs
test
popa
sub
test
xchg
test
and
cmpb
push
or
jb
je
mov
cmpsb
jge
sbb
or
out
jnp
orl
push
loopne
jbe
daa
or
bound
ret
inc
je
jb
push
pusha
ror
and
push
inc
pop
cmp
sahf
push
cmp
jne
lahf
movnti
cmp
add
cmp
pop
push
mov
das
or
rorb
int3
dec
sub
push
iret
adc
test
std
loopne
or
jne
cmp
push
shrb
add
and
mov
sub
lahf
cmp
insb
add
pop
mov
andl
pop
push
loop
mov
sub
add
or
sbb
cmp
into
and
aas
xor
lods
gs
cmp
pushf
adc
rorl
outsl
jle
cmp
jae
sbb
sbbb
jno
fsubr
aam
out
add
xor
pop
lea
mov
adc
pop
std
push
pop
leave
shl
loope
xchg
movsb
xor
out
add
je
pop
test
ljmp
mov
jge
cmp
dec
rclb
shrl
jecxz
dec
insb
push
push
push
cmc
repnz
mov
sub
shlb
shll
in
shlb
or
dec
xchg
mov
push
rcll
mov
movsl
jge
rorb
aam
mov
mov
mov
and
inc
adc
cwtl
flds
das
pop
xchg
sbb
loope
jmp
push
lods
stos
lods
inc
push
in
or
or
xor
mov
or
cmpsl
adc
and
xor
xchg
or
and
adc
jge
or
and
andl
mov
mov
cltd
adc
out
lcall
test
imul
sbb
fmull
jecxz
push
inc
dec
cmp
mov
insb
ljmp
add
fsubs
out
les
mov
jmp
sbb
fistps
jo
sub
sbb
fmull
xchg
pop
sbb
push
and
pusha
idivb
push
inc
xor
push
jmp
sub
aam
add
pusha
xor
sub
js
mov
push
in
test
add
ret
cmp
or
orl
repnz
add
push
out
jnp
adc
jns
sbb
inc
cmp
xlat
pop
and
mov
dec
int
in
lock
scas
pop
xlat
dec
call
jno
lea
lea
mov
in
and
adc
pushf
inc
dec
xchg
out
or
adc
jl
inc
jnp
xor
test
cmp
sub
or
jmp
ds
mov
test
lahf
and
cmp
push
andl
lea
sub
pushf
push
imul
push
lret
jbe
mov
or
mov
stc
add
adc
xorb
in
mov
test
std
or
or
xlat
add
paddusb
mov
aaa
js
std
dec
fildl
jp
cmp
je
lods
call
pop
pop
or
and
rcl
cs
rcll
int
add
xor
add
orl
aas
cmpb
lret
shlb
xchg
call
jg
enter
outsb
mov
nop
imul
cmpsl
jmp
mov
xchg
lcall
test
or
mov
add
or
pop
cmp
dec
xlat
scas
push
jle,pt
sub
popf
jb
sbb
movsl
mov
push
and
mov
sub
movl
push
pop
inc
inc
adc
cwtl
inc
mov
fbstp
movsl
mov
jmp
ret
fildll
je
xorl
jae
in
and
add
in
cmp
xlat
cmp
stos
out
call
scas
ja
jmp
aad
std
sahf
test
rcl
aam
aad
adc
les
add
cmp
test
fucomip
xor
dec
push
je
dec
jne
push
jmp
and
adc
sbb
push
cmc
lahf
nop
push
push
ficomps
jp
mov
xchg
add
rcl
push
stc
mov
sub
int3
pop
xorl
repz
ret
add
mov
lock
mov
sbb
mov
xchg
inc
mov
roll
pop
loopne
cld
xor
in
rcrl
xor
mov
mov
lea
adc
insl
or
or
loope
push
sbb
mov
pusha
ret
jmp
lea
cmp
cmp
jecxz,pn
daa
xchg
ss
pop
sub
je
mov
push
push
adc
add
sbb
nop
lock
mov
xchg
cld
add
mov
dec
inc
imul
sbb
popa
inc
sbb
inc
je
dec
test
mov
lock
sub
add
testb
filds
scas
xor
nop
shrl
ds
je
pop
rorb
lahf
add
jge,pn
adc
cmp
jg
popa
inc
int
xor
sub
outsb
lock
xor
mov
or
call
xor
sub
mov
or
push
test
cmpb
xchg
jno
mov
lcall
adc
sub
pop
dec
push
pop
mov
push
lods
adc
xchg
aaa
push
and
dec
or
cld
fisubrl
jmp
cmp
je
aaa
add
movsb
rcll
cmp
ret
dec
movsb
loopne
cld
shrl
mov
xchg
jmp
xor
adc
sti
movsb
and
negl
jo
lea
cmp
mov
fs
insb
bound
add
cmp
incl
inc
adc
xor
in
inc
fnstcw
xchg
iret
test
pop
and
jmp
adc
mov
sbb
dec
lret
jne
sbb
push
inc
inc
cmp
test
mov
pop
adc
pop
mov
mov
xor
inc
and
lret
mov
mov
xchg
nop
cld
dec
jo
inc
push
insl
inc
cltd
jbe
les
ds
test
int
inc
cmp
mov
and
movl
add
inc
adc
add
inc
imul
add
jle
push
pop
int
inc
xchg
mov
mov
adc
add
fs
mov
xchg
pop
sbb
pop
shr
outsl
movsb
ret
adc
mov
adc
mov
nop
sbb
and
ret
fdivrs
ja
jge
js
adc
mov
jno
inc
cmp
jl
add
not
inc
pop
loope
add
out
dec
add
jno
lods
lds
xor
addr16
and
mov
push
xchg
inc
jnp
test
mov
mov
adc
cli
and
mov
mov
xorl
or
dec
adc
test
mov
adc
mov
sub
push
or
push
add
ss
ficomps
aad
sub
mov
jae
jl
mov
inc
les
add
orl
mov
xchg
push
or
dec
jmp
popf
mov
inc
cmp
adcl
std
cmpb
je
push
sbb
add
popf
rcr
push
jae
outsb
xchg
pushf
xchg
or
push
sub
xor
sub
lods
sbb
push
ret
jbe
inc
adc
and
nop
or
sub
es
mov
bswap
imul
adc
fisubrl
add
mov
clc
fimull
xor
mov
jae
xchg
notb
lret
adc
loope
shr
push
lods
repnz
push
add
mov
adcb
xor
inc
dec
sbb
stos
roll
mov
cmp
bound
sbb
cltd
popf
pushf
in
push
sbb
cmpsb
mov
adc
subl
pop
out
addl
movb
adc
iret
dec
je
sarl
ficoms
mov
push
je
incl
ret
cmp
outsb
jns
mov
lcall
inc
dec
sub
aam
dec
and
dec
inc
or
js
xchg
sbb
sbb
pop
fldcw
loope
push
test
cld
inc
iret
lea
push
and
testl
mov
aas
jle
outsl
sub
dec
inc
sbb
aam
clc
sar
pop
adc
sub
xor
pop
sbb
xor
sub
outsl
ja
add
pushf
xlat
and
push
dec
push
pop
mov
dec
sub
xchg
cmp
cmp
bound
sbb
fs
push
jl
cmp
adc
daa
pop
std
or
mov
adc
mov
push
pop
cmp
ljmp
lock
xchg
mov
dec
cwtl
stos
jne,pt
ja
add
push
mov
sbb
outsl
inc
cmp
cmc
jns
xchg
fbstp
das
rcr
push
aas
lahf
cltd
in
filds
aas
es
fisubrl
cli
insb
cmp
and
cs
dec
dec
add
addb
pop
push
jle
ljmp
add
fstps
nop
cmp
movsb
sbb
roll
jo
outsb
xchg
cmp
stc
pop
aam
lgdtl
and
cmpsl
sbb
xchg
ss
and
dec
push
in
sbb
or
insl
sub
pop
andb
adc
xchg
mov
jecxz
outsb
inc
rcll
jecxz
pop
xchg
inc
fidivrs
push
out
pop
or
adc
je
mov
dec
push
xchg
adc
cmpl
addl
loopne
mov
add
and
aaa
fistps
lcall
dec
add
push
sub
psubb
in
sub
adc
push
adc
xor
or
dec
pop
add
sbb
leave
and
pop
add
push
test
pop
faddp
stc
pop
test
and
inc
push
xor
push
sti
push
loope
and
cmpsb
andl
xor
jl
dec
mov
add
arpl
jmp
pop
push
sub
aad
and
mov
pop
push
sbb
xlat
mov
adc
pushl
inc
fisubs
je
pop
ret
dec
or
ds
daa
insl
cmp
daa
sbb
jge
or
aaa
sub
push
inc
mov
jno
sbb
repz
pop
cltd
adcl
jo
cmp
sbb
xchg
or
subl
mov
sbb
and
out
leave
or
dec
sub
adc
sbb
adc
xor
xor
xor
je
mov
mov
loopne
fisubl
xor
and
xor
xchg
push
rorl
popf
add
adc
add
sub
add
ss
inc
aaa
test
sub
lock
and
cmp
int3
mov
xchg
adc
jno
mov
push
stos
test
cmp
mov
loopne
aaa
cwtl
xlat
sahf
sbb
dec
xchg
sub
mov
fnstsw
cwtl
and
add
movsb
outsl
jne
lea
std
icebp
movsl
cmp
mov
xor
mov
mov
pop
or
movsl
sarl
outsl
mov
pop
add
mov
and
push
cmp
or
adc
add
sbb
cmpsb
adc
jns
sub
pop
add
cmp
sub
push
lods
lods
inc
xor
mov
rorl
push
xchg
cmpsb
push
cmpsl
add
cmp
cmp
push
adc
idivl
mov
popf
daa
in
cmp
pop
inc
push
cmp
cmpsb
ds
outsb
adc
andl
xchg
fdivl
pop
pop
and
test
pop
out
jbe
cli
xchg
and
mov
jo
mov
mov
push
pop
cmpsl
pusha
xor
lock
or
add
push
inc
fldl
inc
pop
enter
mov
test
xor
xlat
ljmp
loopne
cmpl
xor
daa
xchg
inc
push
loop
lea
xchg
testb
repz
pop
inc
xchg
stos
shll
adc
mov
shlb
fildl
negb
push
xchg
or
cwtl
dec
dec
in
ss
test
jmp
adcb
xlat
notb
lcall
iret
xor
je
dec
push
dec
or
cmp
gs
cmpsb
js
jl
aad
test
inc
je
and
or
std
popa
mov
stc
lea
aad
lock
add
cwtl
pop
inc
jo
push
inc
or
ret
sbb
iret
outsl
insl
bound
int3
add
les
imul
pop
inc
mull
mov
lret
jb
push
or
fadds
cmp
push
pop
lods
xchg
sbb
fprem1
sbb
xchg
in
divb
mov
hlt
adc
ss
cmpsl
add
adc
cmc
and
adc
aam
pop
mov
pusha
sbbl
bswap
testl
sub
pop
in
push
cmpsb
or
pop
sbbl
ss
adc
xchg
and
mov
adc
test
hlt
cs
mov
icebp
jno
and
push
xor
imul
sub
mov
sarl
fsubp
push
cmp
rorl
push
lods
xor
mov
push
xchg
push
mov
inc
das
lds
dec
add
cmpsl
push
jo
lahf
sbb
ret
mov
movb
into
popf
sbb
jnp
mov
leave
ror
pop
fbld
sbb
sbb
push
sbb
and
inc
pop
in
xor
and
lock
and
lea
mov
inc
push
iret
pop
and
mov
ss
jne
popl
mov
and
movsb
mov
and
scas
sub
cltd
subb
push
xchg
daa
mov
rorl
sub
daa
stc
ret
mov
mov
scas
mov
sub
inc
jb
sbb
je
andb
dec
xchg
in
sbb
icebp
ficompl
insb
pop
mov
push
push
repnz
push
pop
mov
push
push
xchg
jl
fcomps
inc
imul
push
ret
sub
pop
das
and
in
test
push
jae
icebp
dec
and
mov
sub
leave
mov
dec
xorl
push
add
mov
rorb
and
xor
rcl
xor
sbb
push
push
or
lcall
push
movsb
or
lea
faddl
shlb
movsb
jns
push
adc
and
sbb
sbb
dec
xor
add
add
xor
mov
out
add
inc
push
xchg
sub
sahf
push
dec
movsl
aam
pop
cmp
or
loope
or
sbb
loope
push
in
hlt
in
xchg
ss
jp
inc
xchg
test
in
cmc
mov
repz
mov
mov
dec
cmp
mov
and
cs
cmp
in
sub
lock
sbb
mov
in
pop
xchg
icebp
insl
adc
popf
lock
add
inc
mov
outsl
and
mov
rcrb
sbb
mov
sub
pop
in
sub
mov
add
inc
add
into
fcoml
inc
or
sbb
testb
adc
or
adc
outsb
xor
sub
and
stos
jo
andb
in
sbbl
cmp
je
sbb
push
hlt
dec
xchg
icebp
push
cwtl
sub
stos
scas
movsl
rorb
icebp
fwait
sbb
pop
push
pop
push
xor
fs
andb
dec
adc
mov
adc
xor
icebp
sahf
and
aam
adc
adc
les
lmsw
imul
push
push
push
icebp
or
cmp
mov
mov
testl
sbb
inc
mov
or
mov
cmp
je
inc
xlat
adc
test
lret
nop
ret
rolb
lea
je
mov
xor
add
cwtl
cmp
icebp
mov
shll
pop
int3
movsb
imul
mov
mov
cmpsb
jmp
lret
push
inc
jmp
dec
and
inc
mov
in
xor
adc
xor
fmull
or
dec
lods
push
mov
adc
push
pop
cmpsb
xchg
add
dec
aad
push
in
sub
or
les
cmp
enter
xor
je
push
mov
xlat
xchg
xorb
or
mov
mov
add
fisttpll
or
pop
pusha
outsl
fiadds
inc
fisttps
dec
jo
push
pushl
and
sbb
cmpb
ret
shlb
push
cld
push
addb
inc
ljmp
push
inc
mov
push
repnz
out
adc
xor
mov
mov
adc
repnz
es
push
pop
mov
inc
jne
push
loopne
std
pop
mov
sarb
jge
mov
or
imul
pop
add
add
aaa
add
add
and
les
push
push
sub
xchg
push
andl
and
or
movl
add
mov
adc
movsl
out
lds
xor
imull
adc
fisubrs
lea
movsb
mov
aad
adc
xchg
cmp
je
test
push
pop
push
stos
push
push
or
xchg
xor
sarb
jns
xchg
icebp
popf
dec
push
cmp
jle
add
int3
sbb
adc
loop
mov
mov
add
mov
popa
adc
add
cltd
les
in
les
and
adc
or
sahf
cli
and
add
dec
inc
inc
in
mov
movb
rorl
addl
dec
push
inc
jmp
mov
cmp
sub
sahf
bound
xor
adc
lods
inc
fs
mov
enter
les
add
add
icebp
and
jmp
sub
pusha
pop
movsl
loope
dec
inc
mov
mov
jg
sahf
sub
mov
cmp
xor
fs
push
mov
popa
ja
inc
stos
mov
or
pop
inc
sar
repnz
enter
mov
sbb
mov
mov
xchg
rcrb
mov
mov
or
femms
data16
push
xchg
or
call
adc
sub
call
movsb
sbb
add
dec
loope
pop
push
test
or
rcrb
xchg
cmc
inc
fs
dec
in
ja
jecxz
dec
fimull
or
pop
or
loope
fldl
jp
rcrl
mov
movsl
out
inc
adc
fsub
jg
adc
cmp
jle
cld
jae
inc
add
outsb
outsb
mov
sbb
daa
cmp
andb
mov
cmp
pop
mov
pop
add
add
enter
faddl
and
adc
and
pop
mov
lret
mov
sbb
jmp
xor
lock
jno
or
int3
stc
pop
add
adc
xor
sub
stc
in
fistpl
adcb
addr16
inc
ds
inc
push
inc
dec
sub
sbbl
inc
push
les
lea
pushf
gs
xor
push
loop
out
out
add
in
movups
pop
mov
xchg
lret
stc
add
sub
add
lea
mov
jo
shr
xchg
lea
movsl
push
cwtl
movl
jp
pop
add
and
sbb
sbb
dec
and
pusha
cmp
mov
int
sub
pop
or
or
rcrb
mov
movsb
dec
lret
sti
inc
cwtl
jne
push
jmp
and
call
or
lds
push
pop
or
xor
xchg
outsb
test
push
movl
cld
jno
jge
movsb
dec
andl
dec
imul
rcrl
lea
dec
iret
inc
movsl
push
mov
pusha
in
mov
dec
out
xor
pop
rcll
or
int3
mov
icebp
adc
cld
add
sbb
add
dec
aaa
adc
daa
loopne
pop
mov
cmp
sbb
jne
inc
fs
inc
sbb
add
or
and
push
xor
jns
mov
xor
and
sub
dec
cmp
fdivrs
aaa
and
in
xor
pop
test
mov
xchg
inc
inc
mov
nop
dec
push
pop
sbb
push
push
or
cmp
add
cmp
inc
lea
sahf
pop
dec
pusha
popa
inc
ja
pop
movsl
jo
sub
call
adc
or
xor
mov
add
and
lret
popl
add
xchg
xchg
add
xor
jl
std
sbb
mov
pop
icebp
test
test
sub
mov
mov
stos
mov
mov
push
aaa
scas
cmp
shll
loopne
mov
push
mov
cli
ficomps
pop
pop
push
push
xor
dec
mov
or
mov
or
dec
sub
dec
mov
data16
je
sahf
incl
sbb
dec
imul
add
add
push
faddl
pop
add
sub
icebp
inc
cmp
mov
xor
cmp
xor
push
push
movsl
xchg
push
adc
je
sub
or
or
imul
mov
lahf
xor
dec
pop
mov
sub
xchg
pop
cmc
dec
cmp
int
xor
add
and
sub
lcall
dec
bound
push
hlt
dec
sub
dec
jmp
or
mov
sbb
loop
mov
insb
cmc
xor
data16
ja
ds
mov
dec
and
mov
test
adc
js
fbld
cmp
jge
aad
xchg
or
orb
inc
pop
adc
sub
pop
invd
mov
mov
push
lea
fisubl
xchg
loope
mov
or
test
xor
push
fsubrs
push
inc
js
fcmovu
cmp
and
and
fcmovnbe
push
imul
mov
sbb
or
or
xor
or
andl
imul
int
les
adc
fiadds
xchg
push
dec
adc
leave
clc
and
mov
jmp
test
and
add
and
pop
imul
or
xchg
jae
push
push
jnp
les
dec
repnz
or
cwtl
add
add
jle
lret
and
popl
cli
push
stos
orb
add
cld
lcall
xor
add
imul
xchg
sar
das
lret
inc
inc
push
mov
add
outsl
in
inc
cmp
cmp
icebp
movsb
sbb
dec
popa
or
xchg
ret
lods
dec
push
add
sub
push
cmpsb
mov
add
and
inc
jecxz
fstps
pop
jecxz
mov
xchg
ss
add
mov
stc
push
lcall
out
mul
and
jl
adc
sbbl
jo
out
out
xchg
subl
ret
and
xchg
out
mov
lock
call
mov
mov
cld
and
push
testl
jo
pop
lfence
addl
lea
icebp
jmp
push
cmpsl
adc
add
mov
push
mov
call
cmp
adc
mov
jo
mov
cmp
xlat
mov
cmp
dec
rcrl
lock
sbb
js
js
mov
jb
and
stos
in
xor
mov
or
cmova
out
cmpsb
lock
sub
dec
rorb
or
dec
add
rorb
inc
add
inc
jo
jbe
or
pop
xchg
push
inc
and
insb
mov
mov
mov
mov
sbb
sbb
adc
xor
pop
and
gs
mov
insl
repz
fs
add
dec
rorb
add
jae
xchg
xor
jno
sub
nop
sub
dec
cmp
dec
add
mov
clc
mov
dec
enter
fcmovbe
xchg
int
rorl
dec
jnp
mov
andb
and
sbb
cld
or
add
xchg
rcll
and
dec
add
nop
push
in
or
lods
mov
jmp
adc
test
mov
xchg
fisttpl
adc
mov
pop
rclb
push
push
rorl
iret
push
fsincos
push
loopne
sbb
sub
mov
imul
and
xchg
popf
ret
mov
nop
cltd
adc
push
dec
or
pusha
popf
adc
cmpsb
into
jo
leave
into
add
add
int3
add
or
adc
dec
cmp
pop
inc
mov
pusha
pop
push
ja
loopne
daa
xchg
xor
outsb
mov
adc
cmp
add
xchg
shl
adc
cld
mov
repnz
push
push
xor
or
lds
inc
and
xchg
and
push
jecxz
sbb
sub
adc
fnstcw
movsl
sbb
notb
mov
adc
push
adc
nop
push
stos
decl
mov
xor
sti
fldl
js
popa
add
movsbw
mov
jno
jne
lret
jbe
je
or
je
adc
fwait
sbbl
arpl
push
jae
mov
cs
cmp
sub
jnp
mov
hlt
push
inc
pop
mov
rolb
pop
dec
cmp
je
push
lret
mov
loopne
pop
js
je
lret
mov
xchg
lods
cld
adc
nop
inc
mov
pop
imul
movsl
sbb
push
xchg
sti
xor
cmpsb
mov
scas
test
jle
stc
lock
fwait
push
pop
xchg
out
cmpsb
dec
lods
repnz
cmp
xor
mov
push
rolb
adc
add
add
imul
push
xor
mov
gs
xchg
fwait
and
mov
push
sub
xchg
sbb
jns
std
lock
pop
into
gs
pop
lcall
adc
and
inc
mov
push
and
sbb
faddl
out
loop
xchg
mulb
sub
push
call
push
mov
add
test
jo
pop
in
jmp
xchg
adc
mov
ret
mov
dec
ficoml
and
hlt
and
inc
loope
add
jge
jecxz
sarl
imul
push
push
in
sub
jg
sbb
and
xor
or
xor
sbbb
pusha
and
mov
test
insb
cmc
inc
push
call
shlb
cmp
test
pop
cmp
das
push
inc
push
and
test
add
les
mov
and
ds
rcl
repz
dec
sbb
mov
aam
xor
sub
inc
push
mov
mov
lods
mov
or
adc
fcmovbe
sub
cmpsb
or
leave
daa
or
xor
mov
mov
lea
lret
dec
lcall
or
cld
cmp
out
clc
mov
adc
fmull
mov
push
pop
fsubs
pop
jae
dec
jne
push
adc
cmp
xchg
xor
in
push
push
or
daa
sub
and
mov
das
insb
movsl
and
dec
mov
sub
push
add
movl
rorl
lea
addl
xor
mov
clc
add
aas
xchg
sub
movsb
xchg
push
mov
sbb
aaa
addb
pop
les
push
mov
inc
pop
mov
inc
cmp
adc
mov
jae
jae
and
adc
adc
push
and
div
or
dec
jg
addl
mov
movl
add
cmp
test
cmp
dec
inc
pop
inc
mov
or
les
int3
shl
sbb
fs
add
sub
pop
cmp
adc
add
adc
adcb
fbstp
jo
sbb
push
sub
and
jge
fistl
mov
adc
pop
bound
xor
lods
mov
add
add
rcrl
mov
xchg
add
stos
adc
hlt
js
or
adc
push
and
cwtl
jecxz
sub
popa
aaa
dec
cmp
sub
dec
loopne
cs
clc
sub
decl
mov
add
push
push
push
inc
shlb
dec
mov
mov
pop
inc
mov
loopne
std
pop
roll
xchg
mov
push
and
cmp
inc
lret
clc
cmp
cmp
jne
mov
ret
pop
mov
xchg
lahf
int
dec
shrb
or
loope
lcall
push
sub
aaa
mov
nop
mov
das
adc
pop
add
das
mov
sub
cs
xor
cs
sbb
ds
jmp
push
sub
mov
dec
jb
js
cmp
imul
mov
xor
lcall
fidivrl
mov
add
pushf
lea
inc
add
mov
mov
lret
lods
mov
mov
xor
cmp
jle
cmp
js
rcrb
add
xor
rcll
jbe
xchg
js
cwtl
loopne
enter
adc
cmp
lcall
inc
push
rorl
mov
lods
ss
aad
dec
pop
cmp
jl
xor
pushl
xchg
push
aaa
nop
fwait
icebp
push
inc
sub
inc
out
roll
mov
inc
cmpsb
fdivs
js
pop
add
push
inc
pop
add
lock
enter
or
aaa
scas
jo
test
adc
push
xor
inc
mov
or
and
mov
dec
test
inc
mov
fwait
cmp
push
xlat
mov
leave
adc
stos
adc
mov
add
jmp
in
shll
in
mov
dec
adc
cmp
fwait
bound
stos
sti
cmp
inc
jne
inc
fdivrl
cld
clc
jo
or
jnp
add
bnd
adc
xor
roll
icebp
popf
xorb
loopne
cmp
lea
or
xchg
sbbb
ss
push
dec
pushf
xor
lods
jne
xor
push
addl
clc
jge
push
jbe
les
aaa
cmp
jle
leave
or
loop
mov
loop
pop
push
cmpsl
push
sub
mov
test
aaa
mov
cltd
jmp
push
or
dec
xchg
imul
add
mov
mov
stos
test
sbb
enter
les
insl
jne
inc
pop
aad
les
add
stos
je
jge
or
int3
mov
lods
fildll
inc
add
mov
sbb
or
add
lock
pop
xchg
pop
dec
add
sbbl
cmpsl
sub
and
adc
subl
int3
je
push
int3
pop
push
adc
add
push
loop
dec
cld
mov
push
adc
dec
cltd
je
push
xchg
push
jl
roll
add
and
inc
or
or
mov
nop
cmp
mov
inc
jbe
cmp
pop
cmp
xor
sbb
arpl
cmp
cmpsl
mov
imul
mov
and
subl
jo
dec
aas
push
add
adc
mov
ret
dec
mov
adc
cmp
lahf
popf
xchg
jp
mov
cmpsb
cmp
mov
dec
pop
or
pop
bnd
outsl
rol
jp
fst
xchg
into
add
push
lea
into
jno
push
ror
sbb
push
adc
xchg
add
loopne
cmp
andb
push
loopne
or
mov
push
test
test
sarl
push
xchg
xchg
ret
xchg
pop
adc
mov
or
fisubs
imul
add
sbb
xchg
mov
loop
out
mov
mov
mov
push
adc
leave
cmpw
sbb
cmpb
pusha
sub
push
push
cmpsb
in
mov
pop
push
idivb
add
add
sar
fadd
push
je
add
dec
test
xorb
jns
adc
pop
jns
xchg
mov
mov
mov
or
or
fimuls
inc
pop
rolb
and
mov
pusha
es
push
dec
push
xor
jl
sub
rol
jmp
and
lcall
dec
movzwl
jmp
jnp
add
pop
or
popa
enter
inc
xchg
imul
icebp
cmp
adc
les
mov
and
fistps
in
xor
outsl
sbb
xchg
add
ret
pop
push
sbb
aad
pop
sbb
cmpsl
cs
jbe
adc
rol
or
mov
add
incb
cmp
jne
jb
fs
push
push
add
call
dec
pop
push
pop
push
dec
sbb
jo
repnz
lods
inc
shl
and
in
rcll
jle
aam
lock
in
mov
les
pop
adc
sbb
loop
in
and
je
movhps
pushf
push
filds
popf
aam
jae
inc
or
or
add
addl
or
sub
fisttpll
adc
add
icebp
movsl
push
mov
and
adc
push
nop
outsb
dec
cmp
stc
add
or
sbb
cmp
fsubr
sub
mov
xor
aaa
cmpsb
push
push
or
lock
test
xchg
ret
adc
je
add
or
xor
mov
xor
mov
jns
inc
iret
mov
in
and
add
jl
push
shlb
in
add
andl
or
jo
xor
dec
or
add
adc
andl
arpl
rcrl
and
data16
dec
mov
dec
push
cmp
push
sub
cltd
ret
add
sbb
pop
lods
jb
lock
rolb
push
mov
push
pop
dec
daa
mov
pop
lock
adc
jne
jnp
das
inc
mov
and
mov
leave
andb
dec
adc
xchg
in
xchg
ret
fsubrl
cmp
push
lahf
leave
sbb
jl
rcl
pop
jne
adc
aaa
mov
inc
hlt
cs
lock
lea
push
mov
ret
out
mov
mov
mov
jne
imul
dec
movsl
ret
mov
shlb
andb
push
and
and
scas
push
pop
mov
mov
test
cmp
cmp
mov
xor
call
push
or
scas
add
xchg
clc
lcall
ja
nop
xchg
std
dec
loopne
addr16
inc
icebp
jmp
jmp
loopne
arpl
addr16
dec
cmpsb
xchg
jl
add
inc
bound
js
lock
dec
adc
ss
mov
stc
xchg
cld
push
push
mov
js
icebp
sub
inc
jle
and
push
fchs
arpl
cmpl
adc
lahf
in
sub
nop
xchg
and
in
mov
dec
jo
jecxz
dec
in
cmp
adc
and
and
adc
push
inc
punpckhwd
xor
loop
shlb
sub
sub
rclb
aaa
aas
adc
mov
pop
add
cltd
imul
sub
test
ret
pop
jbe
shlb
jo
jmp
adc
pop
jb
les
mov
sub
ljmp
pop
in
pop
or
inc
sub
cmpsl
mov
mov
push
adc
pusha
andl
and
xchg
xor
adc
inc
add
mov
fildl
add
cmp
mov
daa
add
cmpl
or
mov
adc
add
fidivrs
pop
aaa
adc
mov
out
pop
cwtl
cmp
pop
ret
mov
push
mov
dec
jle
add
dec
sub
push
or
rclb
push
adc
inc
sbb
test
sbb
inc
jmp
movsb
dec
in
sub
mov
add
fcomp
cmp
mov
dec
inc
sahf
add
inc
dec
mov
test
jae
jne
repz
and
lock
call
sbb
fcmovbe
and
sub
sbbl
test
test
pop
faddl
and
icebp
mov
inc
xchg
push
pop
cmp
jmp
mov
test
mov
test
dec
push
cli
insb
sub
lea
call
cmc
pusha
dec
and
int3
inc
ds
mov
xchg
add
loopne
loopne
pop
add
pop
jge
sti
adc
fdivl
xchg
sub
add
lea
lock
orl
dec
test
mov
push
and
into
mov
popa
pusha
sbb
inc
pop
mov
push
loopne
movsb
sbb
repz
lods
pushl
pop
movsl
aaa
add
sahf
mov
call
rcl
repz
mov
and
sub
or
jge
outsl
add
dec
adc
repz
adc
or
jmp
aam
xor
push
xor
push
sub
lock
adc
movsb
rolb
es
adc
cld
xor
pusha
jo
fnstcw
add
enter
add
fists
xchg
and
and
jno
push
arpl
or
test
add
loop
mov
jmp
add
mov
adc
add
int
sub
iret
js
adc
xor
pop
or
lea
push
push
mov
sub
add
or
les
fcoml
dec
mov
xor
pop
jae
push
lahf
mov
xor
cld
hlt
xor
and
shr
xor
adc
push
and
shrb
or
push
push
add
repz
add
cs
jb
inc
fwait
lds
and
out
pop
std
incl
mov
mov
cmp
jbe
adc
cmp
jmp
fldt
fisttpl
jg
lods
clc
repz
cmp
out
cmp
icebp
inc
pop
test
mov
add
and
pop
push
ds
push
mov
lret
mov
pusha
add
mov
dec
jo
push
xchg
sbb
xor
divl
push
addr16
js
outsb
sar
scas
clc
int3
sbb
xor
and
jmp
cmp
jne
xor
enter
sarl
fsubr
scas
jmp
ss
ret
add
or
xor
push
push
jb
cmpsl
jmp
cmp
or
aad
loopne
pushf
jne
push
push
and
cmp
js
and
mov
push
xor
seto
fwait
inc
cld
shl
or
push
mov
adc
out
fsts
sub
push
test
cmp
mov
xlat
aas
jbe
in
popa
push
sbb
shl
cmp
push
or
xor
mov
or
cmp
je
mov
xchg
cwtl
sbb
imul
mov
jp
push
lret
xor
outsl
inc
and
mov
mov
dec
addb
or
push
fadds
outsb
mov
inc
add
or
je
insb
mov
fwait
loopne
ret
jbe
inc
cmp
inc
mov
testb
stos
and
sub
dec
ror
clts
or
es
adc
adc
jne
aas
jp
repnz
adc
arpl
decb
adc
insl
mov
enter
xchg
shrb
aaa
aaa
pop
xor
test
frstor
mov
mov
test
sub
mov
leave
jae
adc
dec
xor
adc
adc
cmp
or
pop
add
mov
sub
or
outsb
sbb
repnz
cmp
loopne
xchg
mov
mov
and
push
pop
sbb
inc
dec
sbb
jae
xorl
push
and
inc
les
pusha
into
andl
dec
imul
shrl
and
adc
add
add
inc
or
lock
adc
and
xlat
movb
adc
scas
and
ret
pop
xchg
add
sbb
and
add
or
xchg
das
push
add
enter
add
or
or
ja
fisttpl
test
xlat
fiadds
sub
sub
cwtl
push
int
xchg
dec
arpl
jo
inc
push
inc
lret
lea
scas
adc
and
inc
add
scas
push
jae
jb
lods
sub
imul
and
mov
popa
add
pop
sub
push
shlb
xor
and
mov
pop
or
mov
xor
dec
enter
mov
pushf
add
daa
mov
lods
or
punpckldq
add
xchg
hlt
clc
or
pop
push
sbb
or
xor
ret
mov
arpl
push
push
dec
inc
in
movsb
xor
adc
or
test
dec
dec
mov
or
les
out
pop
mov
loop
xor
sbb
cmc
or
xchg
xor
add
sahf
push
push
inc
negb
push
adc
dec
push
lcall
or
xor
addr16
rol
add
sbb
popa
stos
nop
and
mov
push
cmp
push
stos
or
or
jle
pop
pop
sti
insl
or
or
sarl
inc
shr
push
sbb
sbb
push
ljmp
ret
cmp
adc
sbb
nop
pop
pop
add
fldt
sbb
adcb
mov
movsb
sbb
xchg
cmpb
sbb
mov
iret
add
add
sub
push
sub
pop
mov
pop
pop
cmc
push
cmpsl
pop
lea
pop
aam
adc
pop
cmpsl
cmp
iret
push
dec
fldt
cwtl
pop
inc
movsb
pop
mov
push
loope
push
jg
or
add
je
lea
sti
sub
andl
sbb
mov
add
xlat
lret
and
ret
xchg
fwait
mov
mov
dec
mov
and
loope
fildl
adcl
and
add
mov
xor
xchg
and
sbb
in
inc
je
push
es
or
mov
aad
sbb
add
xchg
inc
mov
icebp
mov
dec
dec
sub
out
ret
dec
push
stos
in
push
or
push
mov
sub
fldcw
xchg
xchg
movl
mov
lods
sub
add
cmp
dec
test
shl
in
jmp
clc
add
arpl
andl
shl
or
jb
adc
mov
gs
xor
sbbb
adc
cmp
std
gs
inc
fidivs
rorl
inc
fisttps
cmp
sbb
negb
adcb
sub
xchg
pusha
outsl
sbb
push
push
xchg
mov
mov
lea
nop
mov
lret
jne
daa
push
inc
or
inc
and
ror
adc
test
dec
and
imul
add
inc
add
push
xlat
pop
pop
or
mov
mov
aam
and
movsb
repz
rclb
andl
xchg
mov
xchg
jo
mov
or
mov
in
popa
ret
sbb
cmp
add
push
xor
inc
lcall
jo
dec
pop
push
pop
bound
out
sbb
and
sbb
mov
popa
push
pop
dec
stc
daa
pop
or
inc
adc
cmp
inc
mov
and
xor
push
call
ficomps
ret
lds
and
pop
mov
xadd
sbb
jge
push
pop
stos
push
xchg
test
dec
inc
mov
push
and
xor
push
lods
outsl
test
mov
aaa
rcll
fs
test
inc
add
sbb
lods
add
push
cmp
push
std
cwtl
pop
inc
mov
sbb
adc
adc
xor
arpl
sbb
and
es
test
rcll
test
loope
add
movzwl
add
or
sbb
insb
xor
mov
sti
and
inc
sbb
mov
or
pushl
rolb
pop
and
xchg
push
movsl
test
fdivrs
sub
daa
jne
adc
xchg
sbb
loop
sbb
or
inc
push
shlb
adc
push
loopne
cmp
insl
sbb
xchg
mov
xor
mov
pop
add
out
add
ja
xor
sub
lahf
inc
insb
insl
jg
or
xor
xlat
cltd
sarb
mov
pusha
sub
movsl
imul
rorl
out
xor
dec
push
xor
shrl
jmp
mov
add
push
mov
mov
gs
cli
add
adcb
in
cmpsb
xor
jns
es
mov
push
cmp
inc
clc
mov
sub
shll
push
jl
or
insl
pop
push
jns
adc
push
adc
add
les
outsb
inc
clc
pop
mov
ret
jno,pt
push
mov
outsl
push
jbe
pop
pop
xlat
ret
mov
mov
adc
xchg
add
mov
test
pop
jno
cmp
sub
push
outsb
xlat
or
loop
pop
das
les
pop
jae
cmp
and
pop
sub
sbb
xchg
aam
dec
mov
lods
and
ret
jae
xchg
push
cwtl
nop
aaa
test
jo
sbb
mov
inc
jo
mov
adc
nop
popa
jp
add
add
jg
adc
sbb
mov
pop
inc
pusha
push
adc
mov
andl
inc
sbb
jmp
ret
adc
mov
je
adc
scas
mov
sub
mov
enter
sub
xor
mov
icebp
push
popa
iret
push
jl
mov
sbb
and
daa
push
mov
push
inc
popa
fmull
jmp
xchg
pushf
jl
imul
jno
lods
loop
fisttps
xor
jmp
stos
mov
popa
inc
es
sbbl
fsubl
push
ss
mov
aaa
rcrl
add
xorb
loope
pop
les
mov
jle
add
daa
loop
xchg
jbe
or
dec
inc
add
loopne
jge
mov
mov
dec
sbb
push
cwtl
sahf
xchg
adc
cmp
inc
push
cmp
add
xadd
push
xchg
pop
stos
and
adc
or
jmp
jne
push
jo
jo
ret
and
xchg
push
and
pop
add
mov
adc
push
add
or
mov
test
push
push
mov
ja
mov
loope
clc
push
adc
jmp
and
rolb
sub
pop
nop
or
dec
mov
add
ss
ficomps
mov
ret
cwtl
inc
fisttps
mov
mov
outsb
in
and
nop
imul
aad
scas
add
push
dec
xchg
jmp
dec
jne
push
cmp
aad
and
ret
cmp
aas
adc
in
xchg
pushf
add
adc
adc
dec
dec
test
and
xchg
out
mov
push
sbb
inc
sti
push
or
cmp
inc
sbb
imul
sub
dec
test
ss
sub
test
sbb
add
adc
addr16
xchg
popa
shrb
lods
add
add
push
sbb
and
xor
mov
inc
mov
pop
hlt
mov
test
adc
nop
int3
xchg
out
push
or
add
cmp
jno
or
loope
popa
mov
je
sbb
adc
mov
and
xchg
push
mov
adc
mov
rorl
mov
movb
jns
add
out
and
imul
test
js
xor
inc
jl
sbb
jl
jmp
adc
sub
sbb
pusha
sbb
inc
or
fcomps
sub
inc
push
test
push
adc
inc
orb
xor
sub
test
push
mov
push
or
inc
mov
jo
pop
pushf
sub
mov
movsl
out
pop
imulb
pop
ljmp
outsb
inc
cltd
iret
and
les
enter
sbb
popa
push
mov
loopne
adc
add
lock
adcl
dec
sbb
xchg
xchg
enter
push
ss
adc
lods
sub
scas
dec
adc
scas
xchg
outsl
inc
mov
es
call
sbb
xchg
stc
loope
insb
add
add
push
pop
pop
nop
loopne
stc
jne
das
pop
xchg
mov
fcomps
jmp
add
testl
lea
or
cwtl
pop
pop
jnp
jecxz
sbb
sub
adc
in
dec
fcmove
push
add
cmp
sidtl
fdiv
mov
ret
push
pop
push
jle
cmp
xchg
mov
faddl
add
lods
jle
mov
mov
movsb
mov
or
outsl
ljmp
loope
mov
je
xchg
or
add
add
add
sub
aam
push
pop
push
push
lcall
pop
lret
cmpl
cmp
lods
inc
and
push
push
push
jo
xor
sub
sbb
mov
jl
mov
xchg
dec
addr16
cltd
push
xchg
icebp
push
fsubp
jb
mov
nop
shl
push
addr16
adc
pop
adc
fwait
movsl
subb
daa
push
add
sub
pop
aaa
or
jns
mov
test
popf
push
inc
lcall
imul
call
shl
adc
orb
mov
ds
push
iret
cmp
ficoml
movsl
cmp
psubsb
outsl
mov
inc
js
test
inc
or
xor
pop
daa
inc
inc
je
enter
cld
aas
mov
iret
push
sub
lea
push
or
sub
mov
mov
daa
adc
adc
popw
jo
and
cs
mov
ret
dec
add
test
and
mov
sbbb
adc
adc
jl
sub
push
lock
sub
flds
cmp
cmpsb
or
fadd
mov
push
inc
push
lock
xchg
subl
mov
mov
push
add
aam
push
lods
fisubs
sbb
mov
call
xchg
inc
adcl
sahf
push
je
popa
adc
adc
pop
fstpl
or
std
out
ss
push
imul
push
test
dec
sbb
push
cld
xor
cmpb
ss
test
mov
imul
push
bound
pop
loopne
arpl
stos
ljmp
js
adc
cmp
sub
lcall
push
test
shr
pop
in
adc
jne
lods
push
or
dec
xchg
or
clc
mov
adcb
cmpsl
or
test
add
pop
test
enter
push
adc
dec
cmp
jb
mov
lret
fsubrs
into
incb
adc
mov
adc
pop
adc
mov
or
inc
adc
mov
mov
fldz
and
add
and
cmp
and
pop
sti
cmpsb
add
sub
pop
xor
cmp
adcb
push
xchg
mov
inc
jmp
rolb
dec
or
push
mov
pop
mov
mov
mov
adc
aam
dec
pop
push
mov
shlb
lcall
jne
cmpsb
jmp
mov
jne
fisttpll
mov
fnstenv
leave
add
add
jnp
fsubs
jo
dec
movsl
mov
subb
call
pop
call
mov
das
sbb
cmpsw
adc
out
mov
cltd
jg
adc
add
jle
push
scas
xorl
sbb
xchg
push
jg
or
and
adc
stc
in
push
cmp
push
cmp
jle
cmp
jp
push
cmp
cmp
add
jge
cmp
mov
mov
push
add
inc
jmp
adc
clc
xchg
and
movw
std
cmc
add
mov
ljmp
sahf
lahf
dec
cs
icebp
lahf
fwait
inc
or
fs
pop
idiv
call
fbld
mov
xor
adc
adc
sub
cmp
jnp
in
test
das
subb
dec
test
jno
dec
add
add
outsb
push
push
or
mov
lea
addr16
dec
sub
orl
test
pop
push
inc
cmp
sub
dec
aaa
jnp
add
dec
movsl
or
repz
adc
or
andl
or
and
pop
pop
sti
pop
int
or
stos
xchg
cmp
push
mov
jo
lods
loope
cmp
outsl
mov
movsb
addr16
add
add
pop
fs
stos
push
insl
iret
or
shrl
rorl
pop
dec
xchg
or
pop
xlat
xor
pop
pop
pop
jns
add
and
mov
insl
or
enter
and
nop
addr16
add
or
fists
push
push
rclb
mov
inc
insl
sub
or
cld
rcrl
pop
mov
and
xchg
dec
lock
movsl
adc
fcmovnu
xchg
pushf
xchg
add
push
icebp
ficoml
data16
adc
adc
sub
adcb
mov
fs
mov
inc
dec
xchg
sbb
test
adc
sbb
dec
sub
shrl
adc
popa
sub
fistpl
push
adc
popa
cli
popa
popa
push
and
sbb
adc
inc
add
shrb
sub
lods
test
loope
sbb
and
mov
and
sbb
pushf
xor
and
sbb
sbb
dec
popa
mov
pop
push
jno
pop
cmpsb
add
test
fisubl
fwait
mov
inc
sbb
stc
add
test
lods
jns
subl
jecxz
or
jnp
sub
sub
lods
fstl
adcl
ljmp
jmp
xor
or
test
or
adc
push
test
push
mov
and
shrb
lcall
sbb
xor
cmp
jo
add
adc
dec
xor
cwtl
xchg
mov
inc
leave
adc
xor
sbb
mov
imul
aas
pop
add
pusha
add
push
shll
adc
add
xchg
sbb
ret
js
adc
test
sub
jae
push
mov
push
icebp
mov
and
jge
lret
sbb
or
adc
loope
sub
push
pop
fwait
loope
dec
push
pop
popl
insb
cwtl
or
out
inc
sahf
inc
and
ret
inc
push
and
xor
sbb
xchg
sbb
and
nop
jne
fcoml
les
xchg
or
push
sub
nop
add
aaa
mov
add
les
lea
test
and
std
sbbb
pop
leave
bound
mov
test
enter
outsl
add
orb
cmpsl
cmpsl
in
push
add
dec
jmp
cmp
add
adc
mov
dec
aaa
jb
pop
pusha
lock
ljmp
leave
xchg
pop
sbb
pop
or
push
enter
icebp
and
and
in
sub
or
pminsw
insb
loop
popf
jbe
jae
in
loop
mov
test
rclb
dec
insb
leave
sub
push
add
int
xor
xor
cmc
cmpsl
and
ja
jo,pn
sbb
jbe
and
add
dec
sar
enter
lods
ja
jns
add
insl
sub
add
add
pushf
aam
push
js
lock
push
push
clc
lret
adc
adc
test
pop
adc
gs
sbb
pop
push
popa
stos
cmp
mov
test
push
sarb
stos
popa
xchg
mov
rcll
sbb
push
add
or
into
adc
pop
fistl
add
inc
xchg
dec
leave
dec
add
dec
mov
sbb
rorb
sub
jne
pusha
js
insb
add
shll
cmp
fs
in
add
pushf
stos
sub
add
cmpsb
add
jnp
test
fnstsw
add
adc
lods
popa
addl
imul
adc
shlb
dec
in
adc
add
and
notl
adc
std
mov
xor
jg
mov
push
loopne
adc
xor
jle
jle
push
jbe
std
es
ffreep
jecxz
add
roll
adc
inc
cwtl
jl
push
pop
pushl
and
dec
dec
or
cmp
movl
dec
or
int
daa
inc
ret
xchg
inc
inc
push
pop
or
icebp
xchg
push
mov
jbe
aaa
je
mov
add
push
mov
mov
xchg
sub
in
jno
loop
andb
sbb
dec
or
xchg
fmuls
jg
jno
dec
sub
add
mov
fcompl
fnstsw
test
je
sbb
add
lahf
dec
repnz
sub
outsl
xchg
jp
sbb
dec
cmp
pop
std
dec
rcr
or
mov
fstpl
mov
push
addr16
pushf
insl
movsl
test
mov
jo
and
out
fstpt
xchg
add
and
loope
fsubrp
pop
xor
dec
push
mov
mov
repz
icebp
and
push
imul
mov
ret
and
mov
xchg
dec
jb
pop
inc
pop
sbb
add
cmpsl
lods
add
lock
pop
sbb
xor
insb
fwait
and
push
mov
inc
mov
mov
sub
dec
fiadds
movsl
jge
mov
cmpsl
push
adc
shll
ljmp
leave
mov
jge
notl
je
into
mov
dec
fs
inc
pusha
pop
and
and
insl
bound
je
xor
sub
shrl
movsl
pop
add
jnp
ja
loopne
xor
push
mov
mov
and
mov
and
fwait
aaa
cmp
sbb
mov
movsb
hlt
andl
mov
mov
adc
loopne
jnp
pop
add
cmp
xor
clc
sub
xor
push
xor
rcrb
cmp
jb
sbb
leave
shld
add
pop
add
xchg
ja
lea
push
push
mov
push
push
je
movsl
mov
push
or
add
push
leave
adc
mov
push
adc
push
push
sub
cmp
in
rorl
push
or
cli
test
push
push
mov
dec
pop
pop
fmul
test
jno
ret
and
mov
mov
pop
or
jno
insb
dec
push
mov
sti
leave
shlb
push
jne
push
push
and
ja
push
fadd
xor
nop
push
lds
sbb
xorb
inc
cmpw
jne
jmp
out
adc
inc
inc
cld
cmp
outsl
inc
loope
dec
push
push
jl
mov
fildll
aas
in
popl
sti
jg
stc
std
mov
add
or
sahf
leave
out
pop
jle
push
data16
mov
jl
push
push
push
pop
push
adc
ret
popa
aas
fidivl
mov
rolb
and
dec
or
arpl
inc
push
ds
jecxz
addb
imul
adc
add
fsubs
mov
jle
add
adcl
ret
fbld
jnp
push
jo
movb
in
in
push
out
dec
pop
and
xchg
frstor
inc
syscall
in
dec
jae
push
fwait
or
cmpsl
push
pop
pop
push
pop
imul
ret
das
lea
cmp
fiaddl
aam
adc
dec
daa
test
mov
jmp
scas
push
push
or
movsb
std
xorl
push
test
gs
in
xor
nop
ljmp
mov
fstpl
pop
addr16
adc
add
lock
adc
int
fcmovu
xchg
push
orl
int3
aaa
mov
jl
mov
or
jge
je
lret
mov
dec
add
adcl
sbb
lods
cmpsb
mov
dec
xor
add
loopne
cwtl
push
xchg
imul
adc
test
outsb
jno
stc
jo
ret
pop
add
sub
mov
ja
cs
xchg
aam
icebp
xchg
pop
lahf
add
add
jno
xor
mov
aaa
mov
mov
mov
pop
mov
add
test
pop
fcoms
pop
fisttps
sub
adc
and
les
test
push
adc
fsubr
addb
cwtl
test
repnz
cmpsl
sarl
and
inc
pop
mov
pop
add
jo
ljmp
dec
or
sti
in
call
mov
sbb
xor
cs
push
add
jne
xchg
adc
pusha
call
or
push
sbb
sub
push
pop
adc
call
sub
loopne
inc
and
ss
int
pop
test
rolb
mov
xchg
es
rol
sub
push
popa
faddl
ja
sbbb
sbb
dec
ss
shll
xor
ss
ljmp
icebp
and
xor
rclb
inc
jg
je
jg
add
add
sub
dec
je
jge
mov
add
sbb
dec
jne
sahf
pushf
mov
jmp
push
jl
mov
push
xchg
or
and
jnp
cld
addb
push
stc
cmp
push
sarl
push
mov
or
push
sub
add
push
jge
lea
lahf
fstps
push
test
jnp
push
sub
push
cmp
adc
in
cwtl
mov
jb
and
push
jl
enter
loopne
jge
add
pop
push
cmp
imul
adc
and
nop
inc
push
jns
jle
cmp
push
cmp
pop
subb
add
lahf
in
inc
mov
inc
fs
inc
push
cmp
cmp
call
sbb
enter
enter
and
or
cwtl
or
mov
lods
bound
jns
out
ror
fsubrp
iret
sarl
cld
push
arpl
sbb
iret
repz
pop
bound
cmp
repz
cmp
mov
rcr
in
out
cmp
clc
add
jns
out
and
xor
dec
pushf
dec
sahf
out
pop
jo
and
test
xchg
push
aaa
xchg
xchg
pop
cmc
stos
in
xor
ljmp
jne
add
add
xor
inc
mov
mov
pop
mov
negl
nop
es
nop
adc
push
and
push
les
adc
cmpb
orl
rol
jno
rorb
imul
xchg
popa
push
popa
add
test
sti
jo
lea
loop
lret
sub
mov
call
push
pop
stc
incl
jg
popa
add
out
fcompl
xchg
test
mov
fmull
xor
ret
add
lods
pop
add
xchg
sub
add
inc
js
xor
es
add
int3
loope
mov
and
les
jl
xlat
cs
dec
test
or
lea
shll
pop
repz
mov
loope
imul
cmpb
jge
ret
pop
push
cmp
andl
push
jp
push
add
cmpsl
scas
add
fisubs
jne
cmpsl
push
in
stc
jg
inc
add
rorb
add
imul
sub
mov
xorl
push
gs
ret
or
lds
dec
imul
xchg
or
sbb
or
call
enter
adcb
shrb
pop
and
adc
ror
xor
ret
decl
push
dec
call
in
inc
cld
movb
inc
cmp
adc
push
add
jecxz
in
add
test
pop
push
adc
xchg
mov
scas
sub
inc
push
or
mov
xchg
mov
push
sbb
xchg
cmc
push
inc
dec
lock
rcll
loope
shll
push
or
lea
mov
pusha
pusha
sahf
xor
mov
out
rcll
loopne
xor
cli
pop
nop
mov
ret
xchg
je
mov
sarb
mov
mov
xchg
mov
int3
cmc
js
pop
xor
dec
add
mov
sub
cld
inc
loop
sarb
movsb
ja
cs
popf
mov
lods
and
xor
inc
jmp
push
negl
fwait
sbb
fisubs
inc
mov
and
fisubrs
sbb
push
cs
inc
mov
xchg
adc
lcall
enter
outsl
xor
xor
xchg
jbe
cs
xor
jle
fadd
xor
icebp
xor
scas
fnsave
xor
dec
jae
jae
enter
jae
jae
insb
jo,pn
jae
jae
jl
cwtl
dec
jae
jae
test
movsb
and
push
je
push
int3
sub
xlat
cmpsb
in
ja
roll
arpl
popf
pushf
sahf
sub
mov
pop
int3
jl
mov
addb
test
addl
lret
cmp
and
test
jno
pop
rolb
test
sbb
mov
incb
out
cmp
dec
or
loop
sub
xchg
js
adc
stos
push
jbe
out
push
mov
adc
adc
decb
imul
imul
gs
add
int3
pop
and
sbb
xchg
push
mov
inc
sbb
and
mov
dec
mov
lcall
xchg
xor
and
sbb
and
fistpl
movsb
adc
iret
adc
repnz
push
adc
sahf
add
xchg
inc
xlat
int
push
sbb
lods
push
fst
and
push
mov
cmp
divb
insb
ret
pop
or
cmp
inc
adcb
rcrl
xchg
cld
enter
addl
nop
imul
cld
test
cmp
rorl
sub
xchg
subb
cmpsl
cmc
sub
cmp
pop
enter
sub
xor
movsb
push
scas
pop
dec
aas
push
sbb
and
adc
lea
test
cmp
dec
inc
in
aaa
xor
lock
or
mov
add
test
daa
cmp
in
push
inc
cmp
sbb
and
inc
add
test
push
push
dec
xorl
jo
rclb
movsb
rorb
jno
inc
push
lods
movsb
xchg
adc
adc
arpl
adc
or
inc
imul
and
adc
mov
outsl
jno
jmp
push
sub
cmpsb
into
jecxz
pusha
aaa
jb
mov
ds
lea
push
pop
dec
rclb
lcall
pop
sarb
cwtl
inc
cmp
and
mov
jl
cmp
dec
xchg
lock
inc
or
cmp
push
mov
push
xchg
ss
or
outsl
pop
lret
and
test
out
insl
mov
mov
inc
add
or
pusha
pop
dec
div
push
push
rol
push
mov
push
das
or
mov
lock
pop
add
jnp
sbb
mov
aam
stc
repz
fiaddl
jo
mov
jae
cmc
xor
movsb
aaa
sbb
loopne
stc
push
movsl
and
inc
call
and
fstl
ss
or
cmp
das
xchg
xor
push
in
into
dec
or
adc
insb
enter
sbb
lea
pop
in
je
cmp
mov
icebp
jmp
add
jns
add
enter
lods
pop
jmp
test
or
nop
xchg
cmp
cmp
call
xchg
xor
rclb
faddl
adc
adc
and
add
dec
adc
xchg
pop
loope
repz
push
fdivrl
and
loopne
stos
addl
cwtl
push
lcall
test
sbb
mov
lods
xor
push
test
enter
jb
lods
sub
dec
push
mov
rcl
push
es
mov
adc
mov
dec
add
rorb
lock
pushf
mov
mov
mov
test
and
pop
rclb
orb
lcall
push
jg
sbb
sbb
movsb
pop
push
sti
cmp
les
mov
in
in
mov
push
in
push
pushf
xchg
mov
xor
test
mov
pop
or
xor
int
or
or
pop
dec
fmull
ret
es
pusha
sub
inc
ret
or
inc
add
or
sub
inc
sbb
je
adc
js
clc
or
mov
xor
add
sub
test
jns
sahf
lret
and
push
in
cltd
mov
xchg
dec
or
cmp
jb
xor
jbe
xchg
dec
xor
cld
dec
in
dec
mov
sub
xlat
jne
cmp
add
neg
jo
mov
mov
push
test
lods
add
jecxz
rcr
and
mov
fdivrl
outsl
or
aad
push
orl
adc
push
divl
lods
or
mov
cmpsl
sbb
and
rorl
pusha
or
pop
push
mov
shr
and
test
or
or
icebp
push
xor
push
mov
into
or
and
push
push
xchg
inc
adc
xorl
adc
aaa
inc
jp
xchg
adc
mov
jecxz
mov
popf
xchg
inc
xchg
cltd
cmp
fsubrl
pop
fwait
nop
mov
shrl
and
pop
sub
xchg
in
lods
xchg
inc
inc
xchg
lods
cmp
fwait
mov
sbb
fnstcw
sbb
add
fmul
jbe
sub
sbb
rcr
enter
leave
pushl
clc
push
add
or
ror
sbb
mov
xchg
cmp
xor
mov
jae
test
pusha
inc
scas
loope
dec
nop
pop
sub
movsb
and
cltd
push
sbb
sbb
sub
roll
and
pop
push
imul
adc
stos
sub
push
fcmovu
jecxz
pop
es
pop
test
fs
dec
jnp
sub
mov
subl
es
pusha
push
sub
imul
insb
or
fdivs
jmp
movsl
pop
cs
daa
ss
mov
cmpsb
fmuls
sahf
pop
sub
dec
lods
addb
mov
adc
dec
in
pop
pushf
rcr
ret
jbe
clc
pop
inc
inc
add
popa
xor
mov
sub
das
not
insl
inc
lcall
and
xor
sub
sub
lods
dec
xor
int
push
sub
fs
and
test
dec
dec
jl
pop
and
int
xor
and
and
xor
push
nop
sbb
and
addb
mov
inc
js
and
les
aam
or
pop
rclb
sbb
add
sahf
adc
push
mov
mov
es
ret
mov
add
orl
pop
les
iret
dec
fs
pop
sbb
mov
shll
aaa
sub
movsb
push
xor
dec
dec
lods
push
icebp
fdivrs
sbb
lds
push
flds
das
inc
push
cmp
je
repz
adc
push
fmull
pop
jecxz
or
pop
pop
sub
add
add
mov
adc
xchg
sbb
aaa
sbb
pop
and
ret
push
and
data16
fistpl
enter
sbb
ljmp
popf
fisubrl
push
cwtl
insl
or
add
add
adcb
sbb
pop
roll
xorb
inc
or
and
je
cmp
popf
and
push
add
push
stos
test
lock
clc
cmp
daa
lea
mov
cs
repnz
and
mov
cmp
inc
add
add
add
pusha
enter
aam
popf
add
std
mov
mov
test
rclb
adc
cmp
xchg
dec
lods
shr
dec
imul
pop
mov
outsb
gs
mov
pop
jg
pop
cmp
jbe
mov
mov
sub
movlps
xor
fs
add
mov
rol
add
sub
jl
faddl
mov
push
adc
inc
inc
xor
repnz
sbb
sbb
fldl
lods
adc
cmp
push
mov
inc
je
mov
push
clc
and
into
hlt
loope
push
jbe
or
dec
nop
ds
and
jb
mov
jg
dec
lret
lahf
jo
rcrl
add
test
dec
imul
sub
xor
ja
aam
jp
test
pop
cmp
add
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
add
cltd
xchg
jb
jl
mov
inc
outsl
sbb
hlt
subl
or
iret
jne
add
pop
lods
inc
inc
repz
fmulp
inc
cmp
jae
inc
adc
cmp
and
je
mov
dec
rcll
pop
add
scas
in
ds
xlat
mov
push
mov
add
jne
or
xchg
lods
xchg
push
sbb
lock
inc
rorl
xor
push
sti
addl
popa
mov
mov
fcmovu
ret
jmp
or
pop
js
or
out
imul
mov
push
sub
aam
sbb
pop
push
lods
adc
mov
sub
add
adcl
xor
inc
test
sbb
sbb
dec
and
cmp
xchg
inc
je
xchg
pop
push
fcompl
pop
test
cmpsb
sbb
jecxz
and
lret
ret
dec
cmc
cwtl
test
cli
sahf
subb
stos
and
inc
add
push
sub
imul
push
jae
sti
jg
cmp
ds
jl
or
je
clc
mov
add
and
mov
add
ljmp
mov
add
pop
dec
add
or
or
pop
rclb
xchg
xchg
scas
xor
sub
ret
push
loop
push
lea
mov
adc
add
push
pop
and
push
mov
hlt
xor
pop
add
cmp
push
mov
dec
push
nop
pop
lahf
lock
dec
call
addl
mov
push
xor
imul
push
xor
pop
cmc
push
rorb
push
inc
sub
inc
lock
xor
inc
mov
cmp
popa
sti
or
je
dec
and
add
gs
push
ret
adc
std
dec
loopne
into
inc
insl
mov
or
call
js
or
lret
imul
add
sub
gs
cmpsl
fisubs
das
loop
mov
pop
add
test
fcomps
sbb
orb
add
xchg
nop
inc
cmpl
push
data16
ja
xchg
ficomps
testb
lret
out
mov
push
add
in
sbb
and
pushf
xchg
bound
adc
mov
mov
xchg
adc
in
in
pop
fsts
jnp
push
xchg
int3
and
and
loopne
mov
mov
in
outsb
xchg
test
lock
push
cs
inc
in
call
inc
or
into
and
ds
ds
ret
pop
lock
movsb
or
xor
xchg
out
or
and
loopne
mov
or
movsb
rorb
repnz
dec
loopne
lock
mov
sbb
shlb
push
pushf
add
bound
pop
adc
dec
dec
add
daa
adc
mov
pushf
add
in
and
inc
int
test
dec
push
dec
inc
lods
and
mov
or
repz
sti
inc
mov
or
clc
aas
cltd
xchg
inc
mov
or
dec
sub
dec
dec
inc
and
sub
xchg
sbbl
add
push
cmp
xchg
jno
dec
sbb
test
jecxz
mov
sbb
mov
mov
push
mov
sub
pushf
es
and
push
dec
or
sbb
fs
add
dec
xor
pop
cmpsl
in
or
lods
cmpsb
loope
xor
add
lock
pop
jecxz
sbb
push
xor
push
cmp
xor
sbb
lods
push
movsl
fst
add
mov
out
adc
addl
dec
dec
testl
test
into
sbb
mov
into
push
or
cmpb
in
xchg
pop
add
mov
add
inc
push
sbb
fbld
inc
cli
jp
pop
cmpl
cld
mov
or
int
mov
gs
call
aas
jg
rclb
out
mov
addb
add
loopne
inc
cltd
cmpsl
movsb
dec
adcb
dec
ret
imul
sbb
sbb
inc
imul
add
dec
adc
fs
ret
fldt
insb
idivb
pop
js
outsl
ljmp
enter
insl
pop
push
mov
mov
pop
enter
sbb
stc
test
pop
mov
cmp
es
xchg
mov
sbb
xor
sub
divl
and
mov
xlat
sub
adc
cmp
xchg
sbb
cmp
cmp
jo
jg
and
jne
lock
and
jmp
loopne
inc
imul
imul
sub
xor
adc
fimull
pop
fisttpll
test
imul
fs
push
dec
pop
cmp
inc
sub
xlat
push
mov
sub
popa
nop
mov
lods
xor
lea
arpl
cmp
je
sub
nop
inc
push
les
xor
push
ljmp
mov
adc
rcr
and
xor
les
cmp
int
xor
in
cmp
push
inc
sbb
mov
sarl
jae
jmp
mov
add
clc
dec
lret
test
or
mov
and
sbb
test
push
mov
dec
push
xor
jne
je
inc
into
cmp
imul
xchg
cmpb
add
sub
pusha
add
cmp
roll
adc
mov
or
mov
push
mov
cmpsb
and
sub
inc
cmpsb
notb
xor
or
mov
mov
xor
xor
mov
rclb
pop
push
lea
mov
dec
mov
mov
adc
in
rclb
dec
pop
mov
or
mov
adc
daa
hlt
or
mov
in
mov
xor
or
mov
xchg
call
lock
mov
fst
lock
mov
or
or
or
or
lods
jnp
lret
repnz
inc
std
xchg
mov
das
je
jge
out
cmp
mov
ret
into
fwait
pop
jnp
das
xchg
jb
mov
inc
xchg
fcoml
adc
idivl
cs
in
cmp
test
jne
es
loopne
clc
jb
mov
jne
jno
in
pusha
pop
push
mov
push
shl
ret
sbb
mov
add
dec
lea
inc
pop
fistpl
and
dec
mov
inc
xor
push
fnsave
sbbb
cmp
leave
pusha
sbb
addr16
sbb
or
mov
popa
imul
fcomps
repz
mov
adc
or
cli
sbb
jle
pop
leave
jp
push
cmp
dec
xor
jo
sbb
jle
test
leave
add
bound
or
inc
add
inc
or
lret
mov
dec
lods
imul
pop
add
xlat
add
sbb
inc
add
aaa
mov
in
test
push
xor
pop
ret
ret
pop
xchg
push
test
pop
xchg
push
enter
cmp
rclb
pop
in
daa
adc
popl
cmpsl
inc
data16
mov
mov
sub
aaa
adc
adc
jne
daa
bnd
repz
mov
jne
or
jne
sub
push
iret
or
push
mov
push
pop
xor
in
shll
inc
pop
mov
fcomp
xchg
aad
adc
cmpsl
or
push
lea
movl
jbe
inc
dec
cmp
inc
sbb
fildll
add
push
jl
mov
lea
fstpl
lea
push
lea
dec
jge
jne
push
dec
aaa
mov
nop
shrb
test
xchg
ret
lea
add
jl
jb
loope
insb
cmpsb
hlt
jl
push
sbb
leave
jle
dec
loope
xlat
adc
addr16
cmc
int3
imul
push
std
jae
out
add
xchg
fadd
jne
sbb
cmp
adc
in
cmp
add
adc
sub
fcom
loopne
sarb
loopne
data16
jb
adc
mov
add
jl
pop
js
jl
cmp
and
inc
imul
ret
xor
mov
inc
loopne
or
sbb
lea
adc
xchg
insl
mov
movsl
rolb
jg
pop
orl
dec
popa
cmp
pusha
test
dec
xor
test
in
sbb
mov
fs
insb
push
fs
push
jne
iret
push
repnz
enter
popa
fs
sbb
ficoml
mov
rcrb
sbb
ret
fwait
mov
mov
and
fisubrs
xchg
push
and
pop
add
or
adc
or
data16
js
mov
clc
or
add
shlb
or
fldl
rorb
int3
or
mov
or
into
inc
subl
mov
sub
sbb
filds
stos
lahf
add
dec
arpl
rcrb
and
cwtl
inc
xor
enter
loopne
movsl
jnp
push
or
cmp
jge
sub
dec
jmp
movsb
hlt
pop
imul
xchg
pushl
gs
jge
sub
sbb
or
lea
ret
add
rcrl
pushf
movsb
loope
pop
mov
aad
xchg
mov
and
in
add
push
xlat
dec
insb
xor
negl
mov
je
or
push
mov
jle
test
in
and
mov
cmpb
sbb
ds
popa
test
mov
ja
cmp
mov
call
cmpl
test
cmp
dec
das
push
hlt
mov
xchg
push
scas
mov
decl
dec
daa
cmp
pop
adc
jnp
sbb
xor
mov
cmp
sbb
and
adc
cmp
subl
and
lds
sub
xor
and
push
sub
and
scas
xchg
pop
xor
push
sbb
lcall
and
daa
adc
inc
rolb
ss
sbb
clc
sti
ja
and
cmp
dec
pop
movb
adc
and
inc
arpl
mov
daa
and
add
sub
xor
fiadds
xchg
cmp
enter
push
lea
ret
mov
sub
jo
inc
stos
popf
inc
mov
orl
push
xor
or
mov
stos
je
insb
and
imul
mov
or
ret
iret
movsb
popf
cmp
mov
andb
popf
adc
or
mov
jo
or
sbb
adc
xchg
pop
outsb
mov
js
sub
jae
jg
je
push
outsb
inc
and
add
outsl
sub
sbb
fcompl
xor
icebp
loopne
sbb
fsubl
add
jne
lock
pop
sbb
adc
in
test
add
data16
mov
xor
sub
int
mov
push
push
push
adc
add
out
jbe
rclb
and
push
les
add
or
pop
pop
dec
cmp
jne
mov
jne
jno
adc
leave
in
in
call
mov
and
sub
mov
mov
cmpsb
adc
stos
hlt
lock
mov
sbb
jge
jecxz
push
mov
push
jb
add
or
dec
inc
push
std
xor
fsubrs
add
adc
inc
je
cmp
jo
arpl
mov
rclb
dec
rorl
ficoml
adc
add
dec
int3
mov
shlb
ja
xchg
mov
mov
pop
imul
mov
pop
xor
ja
xorl
repz
push
add
pop
sub
into
aam
rcll
xchg
shlb
push
inc
addl
bnd
and
les
cmc
je
inc
les
cs
inc
loopne
push
jne
cmp
je
pop
stos
mov
dec
imul
or
jmp
sub
popf
and
or
outsb
xchg
rcll
cld
roll
xor
bound
xor
mov
adc
lret
adc
dec
ret
pusha
cmp
cltd
daa
fdiv
in
mov
test
or
test
cmp
add
ss
sbb
sub
xchg
int3
xor
dec
rcr
xor
cmp
cld
xchg
pop
pop
push
pushl
data16
jge
and
or
clc
jle
cltd
mov
rorb
jecxz
rorb
mov
orb
mov
add
sbbb
sbb
clc
push
inc
pop
or
jecxz
adc
loope
sub
mov
push
adc
subl
pop
call
push
cltd
pop
jmp
out
je
dec
xchg
jp
enter
add
push
xor
lcall
pop
or
pop
adc
jne
dec
int3
movsb
jb
xor
out
add
repz
andb
sahf
inc
pop
repz
push
fisttps
daa
add
xchg
inc
je
mov
movsl
call
scas
push
stc
push
addb
stos
cmpsb
mov
sbb
xor
or
scas
cwtl
shlb
loopne
mov
and
sbb
addr16
adc
movsl
fcmovnbe
sub
push
dec
xor
pop
test
in
add
leave
mov
add
xor
in
xchg
shlb
imul
xchg
add
add
inc
xorl
aas
mov
or
or
in
or
aas
mul
pop
add
stos
add
test
pop
lock
ret
or
les
push
lods
daa
jno
outsb
jo
adcb
and
mov
fs
cmpsb
insl
je
movsl
ja
or
jmp
or
cmp
paddw
roll
adc
rolb
dec
clc
dec
xchg
sbb
xchg
ret
add
es
clc
insb
iret
cmpsb
mov
clc
xor
ds
ret
add
cmp
jne
jae
movsbl
sbb
lcall
xor
lahf
mov
mov
jmp
cmp
mov
ds
jmp
enter
ret
incl
aas
add
add
or
jecxz
or
add
inc
cmp
jl
inc
jecxz
jmp
jge
push
mov
dec
call
loop
add
sar
add
xlat
sub
push
clc
xor
mov
xor
ss
cmp
jecxz
sbb
aas
loope
add
or
adc
adcl
out
xchg
xor
cmpsb
adc
pop
pop
sahf
or
jo
xchg
loopne
jp
sbb
push
aad
push
sub
test
mov
inc
jp
jbe
jmp
add
ret
or
mov
rolb
add
pop
adcb
rclb
add
data16
in
push
jmp
push
cmp
jl
cmpsb
jle
insb
aas
lods
test
mov
mov
jge
push
xchg
cli
js
inc
mov
andl
cli
movb
jne
cmp
ja
addb
rolb
or
repnz
jl
out
add
or
invlpg
adc
jns
jmp
test
pop
inc
cmp
and
adc
or
daa
jae
lret
inc
int
pop
push
lret
sub
fidivl
xor
in
push
xor
cmpsb
divb
stos
mov
iret
add
outsl
pop
sbb
nop
aaa
and
or
inc
data16
repnz
adc
negl
mov
jbe
pop
mov
and
add
nop
popa
test
xor
or
jecxz
pop
cmc
sbbb
jmp
dec
and
pushf
mov
cmp
push
push
aam
mov
mov
jns
cmp
outsb
pop
mov
enter
lock
push
inc
jb
add
push
push
jb
call
cld
add
push
push
sarb
dec
mov
lret
add
or
je
mov
js
jne
test
mov
inc
lods
add
pop
int3
pop
mov
dec
jns
lret
add
int3
jnp
sar
aaa
push
arpl
jle
rcr
test
sub
insb
mov
mov
loope
pop
push
in
or
lret
jl
push
adc
mov
iret
push
inc
dec
push
push
popf
ss
fdivl
dec
mov
lds
add
mov
mov
jge
mov
adc
dec
pop
mov
ret
jp
cmp
cli
and
scas
ret
mov
sbb
dec
pop
gs
push
popf
jo
shrb
push
ljmp
jbe
fisttps
add
and
dec
or
jbe
sbb
mov
shl
test
mov
add
int3
xchg
mov
das
pop
fstpl
lret
je
ja
or
dec
cld
inc
mov
addr16
cwtl
cmp
movsb
cmp
mov
and
imul
jno
enter
or
pop
aam
std
stos
xor
inc
mov
pop
dec
jnp
push
push
arpl
lds
jmp
mov
rcll
add
jo
lcall
pushf
mov
aaa
xchg
xchg
arpl
aaa
aad
loope
cmp
mov
mov
outsl
loop
jb
les
call
or
cmp
clc
sub
fldenv
shl
dec
pop
pop
shlb
or
lods
cmpsl
call
out
lret
test
and
andl
jle
mov
or
and
fidivrl
adc
or
popa
mov
fwait
jecxz
pop
mov
xchg
sub
ret
fs
aam
add
idivb
rclb
push
cs
fcoms
aam
rorb
xlat
andl
cmp
jl
cwtl
loopne
fdivrl
pop
adc
lods
jge
sub
cs
jo
sbb
cs
sub
daa
movsbl
or
add
ss
std
sub
mov
add
mov
daa
push
sub
pop
cli
mov
test
sbb
lret
movb
and
cmpsl
pop
or
cmp
cmp
rolb
mov
lcall
xchg
movl
adc
fsubrs
adc
push
dec
shlb
pop
ret
xchg
dec
push
roll
stos
pop
mov
mov
scas
and
popf
pop
lds
loope
incl
mov
enter
cld
les
ret
outsl
popa
hlt
icebp
xchg
xor
iret
popf
push
les
jge
dec
sbb
xor
dec
es
add
inc
add
cmpb
iret
mov
sub
rolb
inc
ja
push
inc
mov
xor
jecxz
pop
pop
mov
add
cmp
je
pusha
imull
xor
mov
mov
in
mov
mov
clc
pop
add
mov
xchg
inc
push
add
sub
inc
mov
lods
push
sbb
clc
inc
loop
inc
or
xchg
jl
or
mov
lahf
pop
dec
mov
mov
incb
cld
inc
xor
decl
mov
mov
inc
mov
mov
cmp
jl
dec
clc
addl
int
mov
leave
sarb
sub
push
icebp
or
cmpb
mov
mov
add
or
lods
lods
add
push
mov
nop
and
dec
nop
add
or
cld
push
leave
push
subl
cmova
adc
pop
jmp
mov
mov
fwait
test
fmull
into
in
mov
inc
xchg
stos
hlt
mov
insb
into
jecxz
les
pop
add
mov
xor
push
mov
xlat
add
test
lret
in
sbb
pusha
in
enter
in
adc
push
int3
shl
in
sub
inc
sbb
es
pop
adc
inc
sahf
and
inc
push
enter
fisubrs
and
ja
push
ret
push
push
lahf
lret
push
scas
and
inc
adc
push
xlat
mov
mov
mov
push
mov
dec
mov
popa
mov
xor
hlt
shll
xor
and
adc
xchg
add
add
dec
rorl
orl
or
mov
sbb
push
dec
pop
loop
cmp
jge
jmp
mov
sub
sub
mov
jns
add
je
iret
xchg
add
push
fwait
call
mov
roll
jg
mov
ret
lea
cmp
xor
push
pushl
cmp
jbe
mov
sbb
push
mov
push
lods
add
add
xchg
stos
and
leave
or
mov
push
sbb
divb
add
mov
and
push
ds
jo
cmp
ljmp
jl
pop
jne
push
fsubrs
pushf
insl
test
rcll
push
cmp
push
push
pushl
jmp
push
scas
jp
add
mov
rorb
sbb
test
pop
ret
and
mov
orl
daa
sbb
adc
test
mov
mov
cmp
sub
fcomps
mov
xchg
xchg
jns
jo
hlt
adc
lea
mov
xchg
push
push
xchg
dec
repz
pushf
xchg
nop
scas
add
leave
pop
or
sub
or
loopne
aad
add
cmpsb
leave
jne
into
fnsave
roll
and
mov
ljmp
inc
lea
sub
fcomps
mov
fdivl
jb
shlb
xor
add
adc
add
lahf
subl
mov
adc
int
sub
lcall
aam
loop
mov
mov
or
add
and
insb
mov
sbb
mov
scas
push
pusha
mov
jge
dec
mov
rorl
shll
out
test
jmp
push
cmc
push
cwtl
lahf
add
enter
fnstsw
sbb
call
mov
stos
cs
xor
fnstcw
adc
ss
add
in
mov
push
mov
psrlw
push
push
adcl
or
dec
fnsave
sbb
mov
xor
scas
sbb
mov
jmp
dec
scas
scas
cmp
dec
cmpl
lods
ret
shlb
stos
jle
or
add
insb
ss
scas
add
push
aam
push
or
pusha
and
add
mov
stc
mov
shr
xchg
adc
sbb
or
rdmsr
jle
out
fdivl
mov
je
jg
mov
les
aaa
sbb
jge
dec
jbe
adc
mov
xor
scas
mov
das
add
push
and
add
out
mov
mov
fcoms
dec
fwait
movl
aaa
inc
jb
idivl
push
rcl
mov
and
cmp
adc
mov
cmp
pop
fdivl
cmp
add
leave
add
or
sub
add
and
mov
sub
xlat
or
push
pop
je
add
bound
cltd
pop
or
mov
cmp
loope
xor
popf
push
pop
mov
insb
fstl
or
jl
mov
mov
sub
jge
mov
mov
sarb
xchg
pop
fbld
fsubl
fnsave
out
int3
or
jmp
push
pop
cmp
pop
aas
gs
inc
imul
lret
mov
adc
jp
aad
xor
push
jmp
ret
inc
xchg
pop
aas
jmp
push
sbb
and
mov
loopne
aas
lret
dec
or
pop
push
push
push
rolb
mov
cmpb
fcmovne
jne
push
and
cltd
push
jmp
pop
jo
add
scas
scas
push
pushl
jge
iret
shrb
cmp
pop
sub
fdivr
sahf
add
sub
cmp
pop
push
sbb
mov
cmp
pusha
mov
mov
lcall
shrb
nop
data16
and
clc
bound
xor
mov
jne
mov
orb
nop
gs
addr16
inc
pop
leave
sub
push
xchg
rcrl
or
rclb
lret
call
cmp
xchg
mov
cmp
int
jbe
sbb
adc
jo
in
push
call
cmp
sbb
push
jp
jmp
add
inc
call
mov
inc
rorb
js
rcrl
xchg
enter
sub
faddl
addb
shll
jp
testb
add
or
icebp
inc
jle
or
pop
xchg
pusha
xchg
xor
add
add
out
pusha
jo
clc
popa
repz
rcrl
out
pop
jmp
xchg
jb
cmp
mov
adcl
inc
push
leave
pop
cmp
jl
in
or
xor
cmpsb
nop
lcall
xor
lret
xor
add
xchg
lret
sbb
test
sub
daa
and
and
ds
and
xor
jge
jae
inc
mov
cmp
fbstp
pop
jmp
cmp
jge
dec
sub
icebp
into
adc
nop
pop
bound
pop
sub
xchg
addr16
fidivl
adc
or
sahf
mov
push
daa
test
dec
xor
test
arpl
add
sbb
adc
and
das
pusha
loope
movaps
xchg
or
sub
push
cs
or
sbb
addb
pop
pop
mov
movsb
mov
dec
and
rolb
xor
cmp
sub
lds
bnd
add
add
or
ss
inc
adc
mov
dec
cwtl
or
pop
pop
fsubrs
mov
pop
sub
in
sub
ja
add
lods
sarb
mov
mov
add
mov
dec
jne
mov
and
lods
dec
cmp
outsb
shlb
jne
xchg
inc
nop
cld
jg
push
xor
xchg
testl
inc
imul
sub
iret
mov
daa
pop
inc
mov
xor
movsl
mov
and
jnp
mov
pop
adc
adc
inc
adc
scas
and
jne
xchg
inc
test
lret
pop
adc
push
ret
sbb
movsl
push
adc
xchg
dec
call
icebp
popa
popa
jnp
cmp
daa
icebp
lods
jb
mov
xchg
fiaddl
inc
push
jmp
dec
jnp
push
and
test
mov
inc
mov
js
xchg
imul
movsb
ret
fisubrs
shlb
cwtl
fadds
ret
dec
push
mov
mov
mov
insl
subl
cwtl
sub
iret
adc
or
jp
or
fildll
cs
inc
rorb
imul
pop
test
inc
add
aaa
popa
pop
popa
andl
xorl
add
adc
push
stc
pushl
loope
jo
push
add
ret
iret
mov
add
popa
lahf
xchg
dec
fsubrl
and
fcompl
adc
and
jmp
lods
movsb
sub
mov
jmp
add
dec
roll
fildl
lret
or
adc
mov
sub
ret
sbb
sbbb
mov
outsb
mov
lea
iret
mov
popa
rcl
div
sbb
xchg
hlt
push
pop
les
push
push
stos
or
mov
and
push
es
inc
movsl
or
pusha
ficoms
fchs
imul
inc
cmp
jb
dec
cmp
mov
inc
inc
js
xor
aaa
popa
push
ret
imulb
cwtl
enter
and
pop
mov
lcall
mov
stos
or
pop
adc
imul
mov
loopne
stc
mov
icebp
mov
negl
lret
jmp
add
mov
fistpll
scas
mov
mov
filds
or
mov
lock
addr16
je
cmp
jne
mov
sbb
add
or
push
inc
mov
jmp
dec
mov
dec
xor
push
cmpsb
push
jmp
mulb
adc
je
testl
jnp
sbb
cld
cmp
jbe
loopne
pop
add
inc
cmp
je
sub
inc
jmp
inc
and
pop
push
xor
test
mov
cmp
cwtl
orb
clc
mov
in
inc
jo
cmp
mov
dec
sbb
add
adc
add
pushw
fadd
lods
rolb
xor
test
mov
dec
cld
inc
popf
fmuls
pop
cmp
add
sti
cmp
dec
neg
add
cmpb
bound
pop
les
clc
je
cwtl
shrl
fdivr
jb
and
insb
mov
sub
mov
out
inc
or
add
loope
xchg
push
lods
inc
cld
mov
jp
shlb
sbb
pop
mov
pop
xchg
pop
jmp
loopne
jne
inc
in
inc
stos
mov
in
xchg
mov
lds
mov
data16
je
inc
add
jae
xor
add
shrb
ror
add
shl
add
pushf
aas
xchg
movsl
addr16
sti
and
cmpsb
and
or
adc
fs
jne
xor
and
cmp
adc
sub
mov
or
push
outsb
pop
jae
mov
jmp
dec
shlb
imul
cmpsb
sub
adcb
adc
push
das
pusha
shll
call
mov
mov
mov
mov
and
cmp
mov
xor
and
es
mov
jle
sub
and
pop
or
jl
or
adc
ret
pusha
bound
mov
jbe
aam
cmp
jbe
and
out
add
clc
pop
arpl
pop
add
je,pn
test
adc
inc
jne
pop
cmp
std
sub
jb
clc
add
test
cmp
push
xor
xor
lock
jg
jae
movb
inc
sbb
sub
or
and
add
or
pop
xchg
inc
data16
mov
inc
and
push
sbb
fsubr
mov
sub
jmp
mov
push
inc
inc
popl
add
sbb
mov
pop
add
push
lcall
jbe
clc
push
cmpb
dec
pop
sahf
push
mov
rolb
jmp
loope
shlb
inc
call
aam
inc
mov
push
fcom
ret
mov
pop
push
test
es
ret
add
scas
sbb
mov
dec
mov
test
xor
loop
pop
ret
addb
sahf
mov
pop
push
imul
adc
inc
inc
xchg
mov
jg,pn
fistpll
aas
cmp
addl
and
jbe
push
push
fs
cmp
int
cli
jecxz
loopnew,pn
or
jp
test
insb
add
adc
push
mov
loop
add
push
out
add
mov
and
pop
xor
out
ds
mov
das
mov
pusha
xchg
rolb
xor
ret
xor
inc
divb
push
andl
pop
data16
xor
notl
cltd
ss
push
aaa
jp
inc
adc
daa
mov
or
test
jb
in
insl
inc
sbb
iret
ret
cmp
scas
es
pop
push
movl
push
adc
dec
or
push
cld
cmc
pushl
push
lahf
test
xorb
push
add
push
ss
sub
fucomip
adc
inc
xchg
push
mov
mov
sbb
xor
mov
xchg
pop
mov
les
test
push
cmp
popf
sub
xor
add
push
add
outsb
je
pushl
cmp
pop
ja
mov
mov
cmp
outsb
fsubr
cmovnp
mov
adcl
fisubl
roll
add
lcall
pop
psubd
push
pop
fisttps
xchg
and
mov
rcrb
cmp
and
pop
push
inc
fidivl
jl
rcrb
fbld
jbe
popf
mov
das
push
cmpl
stc
gs
add
inc
inc
fwait
cmp
movsb
or
jo
imul
mov
std
xorl
push
cmc
or
mov
push
movsl
xchg
loop
lock
add
xchg
sbb
mov
clc
pop
je
test
dec
xlat
loopne
rcll
jmp
xor
dec
inc
xor
rorl
xchg
insl
bound
sub
lods
xchg
and
push
push
dec
mov
and
cld
pop
shll
ret
or
push
fdivrs
icebp
in
clc
mov
cmpsb
mov
movq
pusha
addl
cmp
sbb
inc
push
in
mov
adc
push
or
add
sahf
sbb
mov
push
aaa
pop
adc
pop
jae
clc
push
add
cmp
push
xor
xchg
add
lods
xor
xorl
fisubrs
push
ret
or
sti
pusha
jb
loopne
mov
decl
sbb
mov
daa
pushw
push
rorb
jecxz
in
mov
mov
xchg
stos
sti
cmp
out
mov
adc
inc
jo
inc
push
add
inc
js
clc
sub
cmovb
sbb
bound
mov
push
movb
push
popf
scas
in
lock
test
xchg
addl
addb
xchg
xchg
add
rcll
rcrl
sub
jle
push
or
pop
mov
loope
fstpl
xor
or
xchg
pop
xchg
jbe
test
xor
sbb
add
ss
push
adc
sbb
and
icebp
leave
repz
faddp
jne
rol
push
loopne
inc
or
push
lea
mov
sahf
push
rcrl
sub
ficomps
cmp
add
add
xchg
and
mov
add
ds
cwtl
mov
mov
dec
push
lods
or
int3
pusha
push
cmp
push
push
lret
xchg
mov
push
jne
dec
aad
ds
cli
xor
insl
jnp
das
in
jmp
cmp
das
js
lret
dec
js
cmpl
outsb
fidivrl
andl
aas
sub
push
fildl
pop
fcmovu
inc
cs
xchg
add
push
idivl
je
fstps
cmp
pop
add
push
inc
mov
or
jne
icebp
jge
fstpl
adc
cmp
sbb
sbb
and
add
jp
add
push
outsl
cmpsl
loope
mov
push
cmpl
inc
push
out
push
shl
dec
cmp
adc
push
fs
rcll
push
mov
inc
add
adc
jnp
pop
mov
pusha
fsubr
cmc
xchg
jne
mov
icebp
cmpsl
and
fnstenv
xchg
fsubs
xchg
xor
xlat
push
mov
je
cmp
push
pop
jne
aam
insb
add
cmpsl
jne
push
cmp
imul
jne
pop
call
sbb
mov
inc
lea
scas
insl
in
jl
push
mov
in
jne
jmp
sbb
mov
outsl
fdivs
adc
loope
mov
iret
and
jne
shr
cmp
pop
lea
fldl
add
je
pop
in
xchg
arpl
subl
mov
add
je
imul
repz
jmp
pusha
mov
int
sub
movsb
push
add
sbb
sub
leave
daa
pop
test
xlat
xchg
mov
repz
sub
decb
adc
cmpl
andb
popf
shlb
xchg
mov
mov
sbb
movsl
or
fs
jo
subps
or
inc
bound
ja
sbb
pop
popa
add
and
fwait
ret
push
add
test
ret
lahf
in
add
push
jle
sbb
std
push
mov
addl
loopne
repz
movsl
aas
add
fsubs
or
inc
arpl
xor
add
xchg
pop
pop
out
push
popa
xchg
sub
loopne
adcb
xchg
xlat
push
push
push
push
cs
lret
in
pop
pop
pop
pusha
adc
pop
pusha
or
cmp
pop
jo
lea
aad
push
loopne
addb
rolb
xor
mov
mov
dec
nop
pop
js
insb
fisttps
dec
and
push
leave
clc
mov
aaa
ds
push
aas
jmp
push
les
lcall
adc
push
adc
push
add
adc
in
push
or
inc
adc
add
adc
xor
push
lahf
ljmp
stos
sub
jle
insb
or
stos
nop
decl
add
daa
mov
xor
mov
je
pop
in
xorb
ljmp
or
xor
or
xchg
js
mov
lret
cli
jp
push
push
aaa
icebp
or
or
scas
stc
sub
enter
or
dec
mov
sti
and
add
and
mov
frstor
or
test
push
pop
gs
loope
jle
lods
push
and
jbe
cmc
lods
sti
sbbb
popf
lock
insb
lods
in
push
xor
sti
es
sti
jo
or
shlb
pop
movsl
cmp
mov
pop
mov
sub
dec
or
iret
adc
popa
test
sbb
ffree
ret
xor
daa
pushf
test
lret
je
xchg
in
cld
outsl
add
push
mov
je
mov
cmp
jne
sbb
add
adc
in
mov
fimull
incl
fstps
adc
adc
xchg
inc
orb
addb
ret
jae
nop
mov
cltd
sbb
and
pop
sbb
aas
cs
pop
dec
cs
push
mov
sub
mov
sbb
pop
add
inc
adc
js
clc
std
xchg
arpl
gs
inc
fcmove
sbb
jbe
push
adc
adc
pop
je
aam
jae
popa
add
lcall
call
add
hlt
cmpsl
lock
cmp
jne
or
call
sub
cmp
inc
enter
adc
movsl
mov
sbb
nop
iret
sti
dec
mov
je
or
daa
mov
or
int3
jae
aad
dec
aas
js
bound
and
pop
mov
adc
add
incl
cmp
sbb
inc
push
push
add
push
jne
mov
lods
sub
pushw
mov
pop
mov
subb
test
mov
imul
das
cltd
hlt
cmpsb
int
cld
sti
outsb
out
cltd
mov
pusha
je
divb
push
cli
insb
adc
imul
push
inc
add
inc
adc
jne
sbb
mov
push
clc
popa
imul
mov
push
xchg
rorl
inc
hlt
add
lock
hlt
dec
cwtl
lock
je
mov
mov
outsl
add
mov
inc
mov
je
jg
hlt
cmp
ljmp
pop
mov
enter
pop
sub
xchg
lcall
and
inc
sbb
mov
iret
mov
dec
jecxz
mov
jg
popa
or
mov
and
cmp
adc
int3
push
xorb
push
sar
push
popa
xchg
or
xlat
lea
add
pop
mov
or
inc
cmpsl
jnp
pop
xchg
mov
jne
addr16
mov
cmpsb
pop
push
rclb
hlt
test
addb
stc
das
je
add
sbb
ret
stos
jle
out
adc
mov
add
pusha
scas
xchg
push
add
cld
jns
add
push
aaa
xor
lock
and
mov
sbb
fsubl
fsubl
and
test
add
or
sbb
adc
sarb
lcall
adc
pop
pusha
imul
mov
dec
pop
push
test
pusha
add
mov
je
adc
leave
and
bound
adc
add
inc
out
pop
adc
clc
jmp
sub
mov
xchg
cli
push
push
push
popa
stos
sbb
and
in
inc
rol
or
xchg
add
imul
mov
adc
and
push
add
scas
cld
add
jo
jo
sub
add
sbb
sbb
mov
orb
gs
inc
xor
xor
stos
pop
pop
sbb
dec
dec
dec
jne
loopne
and
jns
sbb
in
nop
jp
jmp
in
sbb
adc
lds
mov
shr
mov
flds
xchg
cmp
cmpl
push
adc
es
ficoms
int3
jl
out
stc
xor
inc
shlb
and
add
iret
in
fcoms
neg
inc
call
and
loopne
sbb
pop
push
shlb
jnp
xor
mov
pop
jl
repz
push
pop
mov
sub
jo
sub
adc
push
pop
out
xlat
push
insb
mov
ljmp
dec
sub
fs
or
adc
cmc
daa
dec
ret
inc
mov
sar
cmp
jl
jmp
pop
orb
and
sbb
add
gs
movsb
mov
aas
mov
add
repnz
addr16
movl
sbb
sbb
push
xchg
ror
mov
jne
push
test
imul
sbb
dec
sub
jge
and
xchg
add
or
int3
add
mov
add
cmp
push
jmp
add
push
inc
xchg
lods
dec
clc
inc
push
xor
sti
call
jns
and
inc
ds
lret
push
push
xor
adc
mov
jne
jmp
testb
push
adc
in
mov
imul
push
es
add
dec
imul
or
aas
ret
pop
pusha
dec
cmpsb
or
dec
je
xchg
loope
nopl
mov
sbb
push
or
stc
xor
mov
aas
in
sbbb
fs
sbb
call
push
cmpsl
adcl
call
push
dec
mov
rolb
sbb
lods
xchg
adc
inc
call
movsb
notb
scas
add
xlat
mov
or
inc
negl
jae
sbb
popa
pop
leave
cli
imul
stc
cmp
js
fisttps
pop
push
push
js,pn
or
icebp
jle
ja
push
inc
and
adc
push
loopne
ljmp
inc
dec
cmp
in
popf
orb
xchg
aad
mov
xor
andl
pop
jge
add
jle
jne
or
pop
xchg
mov
dec
nop
push
add
cmp
outsl
call
add
xor
mov
or
xlat
movl
inc
sub
iret
jno
ja
cmpsl
mov
add
iret
add
clc
mov
repnz
dec
inc
pop
into
cmp
inc
stos
push
movsl
or
loopne
push
pusha
xchg
mov
cmp
inc
data16
xchg
nop
add
ljmp
pop
iret
mov
mov
dec
cmp
insl
mov
sbb
pop
movsl
lock
dec
loopne
ret
and
stos
or
inc
mov
fstps
andb
pop
or
fisttps
sbb
adc
mov
and
jbe
lret
repz
xor
scas
sub
sbb
xchg
or
loopne
mov
imul
push
inc
push
mov
cld
sbb
mov
and
mov
stos
test
rcrl
shrb
or
jbe
jb
pop
scas
lods
sub
stos
sub
pop
in
adcb
lock
insb
rcll
data16
gs
ds
mov
adc
cmp
cs
subl
sub
adcb
iret
or
adc
pop
adc
fs
cmp
dec
out
pop
add
popa
adc
pop
mov
dec
sahf
dec
in
push
incl
jo
cmp
adc
jbe
push
and
jbe
jp
xlat
mov
push
pop
sbb
sbb
icebp
xchg
gs
sbb
sbb
add
mov
push
pop
cmpb
mov
and
inc
adc
iret
mov
test
adc
xchg
bound
add
push
adc
or
adc
dec
sbb
xor
das
mov
and
or
popf
and
icebp
inc
add
aam
lock
cmp
add
mov
out
gs
push
arpl
add
cmp
lock
dec
jo
dec
movsl
cmp
jnp
push
push
ret
lock
jnp
pop
sub
loope
or
repnz
mov
faddl
push
insb
out
mov
mov
pop
pop
sbb
jns
cmp
or
or
out
adc
cmp
mov
outsb
rcrl
cmp
or
dec
jge
cmpsb
dec
in
fnstsw
outsl
aaa
xor
fs
test
adc
fsubl
rorb
xchg
bound
sbb
adc
out
call
shl
das
push
jge
add
outsb
sbb
dec
xorl
idiv
or
clc
add
push
aam
xchg
and
loopne
cld
test
pop
movl
lods
xchg
dec
adcl
movsl
dec
xchg
addl
dec
cmp
or
and
inc
sbb
push
and
mov
test
orb
inc
les
or
xchg
test
ficomps
inc
sbb
fiaddl
and
fmul
mov
jp
xchg
push
insl
call
sbb
mov
and
loopne
mov
and
sub
shl
mov
fldt
inc
jo
push
dec
cli
lcall
sbb
pop
mov
mov
inc
in
mov
add
sbb
clc
jnp
inc
cmp
inc
or
xchg
fldenv
inc
inc
or
and
sbb
jbe
jbe
negb
push
enter
push
sub
mov
aam
mov
and
push
inc
jp
int
adc
adc
aas
jae
pop
loopne
xchg
scas
push
push
adc
xchg
adcl
les
sbb
xchg
inc
movsb
test
pop
mov
fstl
mov
sbb
mov
or
sbb
sbbl
push
jnp
jo
jmp
jge
adc
je
fildll
sbb
rolb
inc
cmp
int3
push
mov
pop
pop
fwait
lods
repz
push
cmpb
push
add
push
cltd
and
call
mov
data16
lock
xchg
in
lea
push
cmpl
into
push
adc
rol
and
and
or
sahf
subb
pushf
inc
push
cmpl
jne
push
mov
sbb
and
mov
insl
test
insb
and
sbb
pop
ss
pushf
dec
pop
pop
xchg
pusha
push
mov
inc
lods
add
dec
lods
or
fcmovu
push
xor
dec
push
push
lds
sti
push
xor
cmp
test
cmpsb
xchg
dec
cltd
or
shlb
xchg
jb
adcb
or
xor
and
dec
shl
pop
sub
push
movsl
push
mov
insb
or
pop
jmp
adc
push
xchg
add
jne
pusha
xchg
shll
jge
bound
jbe
sbb
and
adc
cmp
lcall
fildll
fcoms
data16
mov
mov
jbe
adc
sub
dec
test
jle
pop
add
clc
icebp
pop
mov
cmp
inc
loopne
outsb
mov
les
add
xor
jnp
pop
jbe
lret
pop
sahf
pop
cs
mov
jbe
fdivl
ret
mov
mov
push
add
data16
xchg
je
xchg
fidivrl
shll
adc
xor
and
mov
sub
mov
mov
orl
mov
cmp
jne
cmpsb
test
or
push
sbb
fsubr
adc
adcb
or
movsb
push
dec
xchg
sbb
insl
test
je
add
mov
addl
adc
and
add
les
cli
or
add
and
dec
mov
fisubrs
push
cmp
fs
and
mov
cmpl
insb
jl
jle
iret
jmp
mov
mov
cwtl
jo
faddl
mov
sbb
add
or
cltd
sbb
inc
fwait
pop
lock
jne
popa
mov
ret
jo
pop
sub
jg
movsb
cltd
cltd
xlat
push
or
mov
lahf
xor
jmp
push
mov
lcall
push
adc
ljmp
mov
jle
sbb
fs
push
js
mov
lock
sbb
mov
lods
daa
and
mov
pop
test
lods
out
aaa
cmc
jge
movsl
in
pop
mov
xchg
jne
inc
loope
adc
popf
mov
mov
push
xchg
mov
and
push
add
in
or
sbb
ret
mov
sbb
shl
or
mov
insl
adc
sub
cmp
rclb
lock
sbb
sub
add
dec
imul
pop
or
out
add
adc
dec
xor
inc
jno
pmaxsw
sarb
aaa
cmp
jb
jnp
adc
mov
inc
push
xlat
dec
add
sahf
jbe
je
mov
xor
sub
xor
or
jp
cmp
mov
push
pop
cwtl
jmp
jae
push
js
jle
ds
xchg
push
pop
mov
sub
add
out
xor
aam
dec
add
add
inc
pop
lret
cwtl
jp
xchg
lea
cmp
mov
lret
sbb
imul
add
adc
xchg
out
mov
push
sbb
jne
int3
mov
cmp
je
push
sub
mov
adc
shr
add
lods
cmp
loop
xchg
movsl
dec
adc
push
xchg
je
test
ret
imul
xor
adc
add
mov
and
popa
pusha
adc
in
out
mov
imul
ds
mov
inc
dec
cmp
rorl
outsl
sub
js
sbb
popa
pusha
sub
aas
mov
aam
mov
enter
adc
jo
xor
pop
enter
dec
es
xor
gs
adc
adc
pop
and
mov
mov
clc
push
push
pop
sub
out
cmp
inc
xor
mov
out
and
ret
add
lods
in
or
xor
test
push
or
mov
pop
stos
fwait
inc
repnz
push
inc
sub
jo
cmp
lods
mov
cmpl
sub
test
cs
mov
mov
mov
inc
and
das
jmp
cmp
jmp
add
jle
jae
cmp
bound
mov
adc
call
add
fmuls
movsb
cmpb
adc
push
in
mov
inc
xchg
movsb
stc
mov
cmp
ljmp
fists
jnp
adc
adc
sub
jo
pushf
out
or
xchg
rorb
cli
push
add
xor
add
sbb
aaa
cmpsb
pushf
imul
jne
leave
popf
dec
adc
movb
pop
mov
addl
sbb
popf
and
sbbb
add
lret
pop
inc
ss
add
lea
sti
or
xchg
repz
push
cmpsb
icebp
pop
xchg
test
jno
jne
pusha
test
dec
fdivrs
push
mov
inc
add
call
bswap
mov
addr16
test
insb
aam
jnp
mov
and
mov
inc
or
xchg
xor
push
pushf
repz
js
int3
mov
sahf
xor
dec
cmp
adc
lea
xchg
push
mov
and
cmpb
out
add
xor
mov
push
movb
xor
pop
jne
pop
into
fisubrs
sbb
mov
mov
rorl
mov
icebp
imul
mov
jge
pop
sti
push
push
cmpl
xor
jno
loope
xor
cmp
cmp
inc
jl
cmp
jg
cmc
outsl
sbb
add
test
jmp
loop
mov
xchg
add
dec
push
je
or
movsb
push
clc
sbb
cmpsl
mov
sub
mov
sbb
insl
sbb
loopne
ficompl
jge
hlt
sbb
ret
add
popa
or
jmp
add
xor
sub
sub
sbb
ret
mov
mov
mov
jb
push
add
cltd
adc
add
push
inc
scas
push
shlb
enter
push
push
add
movl
jle
or
xlat
cmp
add
mov
push
adc
pop
dec
and
popl
jl
mov
test
and
inc
push
or
mov
addl
push
movsl
lahf
insb
cmp
jge
dec
push
mov
mov
mov
push
add
jno
jl
or
int3
jno
jecxz
pop
out
fildll
es
shrb
xor
mov
lcall
mov
lea
shrb
mov
and
addr16
icebp
inc
push
or
inc
out
loope
std
call
repnz
sbbl
jae
pop
dec
jmp
add
aaa
add
mov
inc
test
rolb
push
or
into
xor
ja
push
jg
jb
add
pushf
inc
dec
adc
imul
cld
roll
push
push
mov
cmpl
push
mov
inc
mov
mov
or
sub
or
mov
or
add
dec
or
and
mov
rorl
aas
mov
push
int
inc
jmp
stos
lock
pop
std
and
mov
inc
icebp
sbb
andb
adc
inc
dec
push
pop
inc
jmp
fimuls
sbb
psubw
mov
popa
mov
sub
sub
xchg
add
jmp
mov
std
add
ret
outsb
sub
jo
mov
push
add
dec
and
pop
imul
xchg
pop
push
cmpsb
pop
adc
sbb
or
mov
cli
rcl
cmpl
pop
cmp
pop
cmp
jge
inc
fs
push
pop
xor
or
fs
push
mov
sbb
dec
fisttps
js
inc
push
imul
rclb
orl
jmp
scas
hlt
mov
jns
pop
sbb
lods
mov
mov
adc
push
stos
add
push
loop
int3
andl
lea
lods
insl
dec
inc
mov
mov
cmp
pop
insb
or
and
outsb
dec
mov
cltd
pushf
mov
roll
sub
mov
test
jecxz
xor
shll
test
inc
pusha
lahf
in
mov
push
jns
sub
orb
rcrl
daa
mov
and
adc
inc
xchg
and
adc
add
mov
mov
ljmp
pop
clc
or
dec
cmp
lcall
and
push
xor
sub
cltd
repnz
filds
mov
or
nop
xor
dec
and
pop
jmp
or
outsb
dec
cmp
out
pop
rolb
pop
add
push
jecxz
or
pop
movsb
and
dec
bound
or
lahf
mov
sbb
movsl
add
xchg
movsl
jbe
inc
cmpsl
mov
enter
loope
rcrb
stos
push
push
fmuls
push
push
aad
scas
sub
cmp
inc
js
pusha
mov
add
xor
push
dec
cld
adc
push
imul
mov
jmp
or
push
aas
repz
fs
jmp
movsl
add
adc
ret
lret
or
ret
cmp
mov
or
insb
or
push
rol
sub
je
dec
inc
xchg
ja
xor
les
notb
test
mov
pop
imul
test
rcrb
push
mov
pushf
xor
idiv
jae
lea
jmp
cmpl
sub
shll
mov
push
and
push
test
push
pop
and
aam
scas
movsl
add
mov
jmp
sbb
inc
xchg
xor
in
mov
add
sbb
inc
add
xor
dec
xor
imul
lds
cmp
sub
cld
and
push
flds
aad
lcall
ljmp
add
lret
push
inc
loopne
mov
inc
xchg
ja
mov
push
arpl
xchg
mov
add
jb
cmp
add
inc
add
fwait
sbb
scas
loopne
ja
or
dec
lods
pusha
cmp
adc
inc
inc
xchg
pop
add
xchg
pop
bnd
xchg
cmp
jnp
lea
movsb
inc
stos
xchg
test
mov
scas
out
daa
adc
cmp
dec
jo
xchg
movsb
mov
cmpsl
roll
dec
idiv
loope
cmp
xchg
mov
mov
mov
insb
cltd
jecxz
inc
push
sub
push
icebp
jl
and
push
jno
sti
push
je
cwtl
xchg
test
inc
adc
sbb
mov
loopne
in
iret
xchg
js
cmp
stc
xchg
and
sub
or
mov
cmp
pushl
xchg
test
or
fmull
pop
mov
add
in
fs
push
popw
dec
jb
outsb
int
fimuls
jmp
xor
mov
je
cmp
stos
psadbw
pop
mov
sbb
or
mov
push
addl
mov
sti
je
and
dec
adc
add
xchg
cmc
std
enter
cmp
pop
adc
add
nop
dec
sub
pop
add
je
jp
mov
mov
push
inc
mov
dec
sbb
push
pushf
or
jae
push
xchg
sbb
push
inc
outsl
adc
jl
and
sub
dec
mov
popa
or
popa
jo
adc
xlat
subb
xor
add
in
dec
xchg
testb
adc
les
ffree
jnp
push
push
adc
pop
inc
mov
mov
cmp
dec
or
or
jo
ljmp
cmp
cld
je
test
dec
mov
jns
data16
jne
mov
test
push
push
test
cmp
dec
shrl
xchg
and
cmp
addb
stos
les
pop
mov
repnz
inc
mov
mov
dec
mov
hlt
hlt
iret
popa
in
jns
or
adc
mov
or
pop
cmp
add
add
mov
cmp
call
or
inc
sbb
add
js
jle
mov
loopne
fnstenv
fadd
inc
or
mov
lret
push
cwtl
push
in
cld
fadd
dec
inc
mov
scas
out
test
scas
xlat
or
add
ljmp
inc
inc
in
pop
ljmp
pop
lock
clc
scas
lea
fadds
pop
sahf
lret
in
pop
pusha
push
xchg
adc
or
hlt
neg
sbb
and
bnd
mov
mov
push
sub
push
adc
insb
les
add
mov
add
or
add
movsl
mov
dec
out
inc
jnp
cmp
and
lock
fstpt
cmp
ret
push
je
push
dec
xchg
cmp
mov
sar
ret
rolb
jne
cmp
jbe
or
clc
in
adc
cmpsl
ret
add
jle
xor
mov
ds
data16
test
xchg
popa
jo
call
mov
orb
jno
cld
js
xchg
or
testl
mov
jp
sbb
or
int
cmp
sub
rcrl
or
scas
jne
cmp
loope
sub
pusha
or
adc
lea
adc
dec
xchg
xchg
dec
jg
xchg
push
bsr
add
adc
sbb
xor
sub
dec
rol
jo
or
pop
adc
repz
and
jo
ss
nop
loop
mov
jnp
sbb
pop
les
out
push
test
inc
bound
jno
lret
out
push
lret
xchg
mov
in
out
cmp
cmp
adc
std
mov
push
xchg
and
cmp
dec
or
fildl
das
cmp
out
mov
inc
adc
push
int
adc
mov
push
loopne
mov
cli
jae
andl
leave
ret
mov
and
or
call
pop
or
pusha
ds
jne
inc
add
push
or
lea
incb
int3
sub
cmp
lods
std
int3
cmp
enter
sbb
in
gs
jg
xor
or
cmpl
xor
xchg
push
add
xor
push
mov
loopne
pushf
out
aad
inc
adc
sbb
push
loopne
sbb
pop
xor
xor
and
clc
mov
sub
mov
mov
xor
adc
fisttps
xlat
lret
or
popa
and
mov
movl
xchg
xchg
insb
js
idivl
fistps
inc
cmp
jae
add
dec
mov
push
cmp
or
shrl
cld
push
ret
xor
sub
out
adc
and
pop
mov
xor
cmp
mov
jae
mov
nop
xchg
mov
jo
xor
pop
or
and
addr16
nopl
dec
jp
add
and
aas
dec
lock
cmp
add
or
push
js
jl
cmc
mov
xor
mov
add
xor
cmp
xchg
push
pop
push
popf
or
or
push
mov
sub
out
jb
je
sbb
push
ret
mov
ret
mov
inc
sbb
and
popa
arpl
inc
in
mov
ds
mov
je
addr16
sbb
sbb
mov
add
push
dec
mov
and
and
fstps
cld
adc
jmp
fimuls
inc
jle
cmp
mov
movsl
fsubl
pop
imul
jge
sub
jmp
jmp
packsswb
mov
je
or
xor
rcrl
xor
leave
xor
and
fcmovnb
add
jnp
movsb
mov
cmc
add
and
roll
and
lock
cmp
mov
gs
push
and
pop
xchg
mov
mov
xchg
inc
shrb
and
pop
sub
push
lea
and
or
xchg
inc
sub
dec
xor
add
jo
gs
outsl
push
and
rcr
mov
sbb
insl
je
lret
add
push
mov
outsl
push
std
clc
mov
xor
out
ret
imul
out
push
aam
add
cmp
fdivs
fsubs
popf
sbb
fsubl
sub
cld
adc
jle
dec
mov
mov
push
or
popf
popf
test
adc
mov
roll
xor
and
push
fisttps
movsb
or
pop
fdivrs
cmp
ret
fldenv
push
push
add
sbb
jecxz
pushl
dec
pop
pop
in
mov
mov
mov
mov
or
or
sub
cmp
sbb
mov
in
or
xchg
xor
sti
xor
jae
jb
mov
adc
mov
sbb
mov
jp
pop
lea
filds
sahf
add
outsb
shrl
test
sbb
add
popf
pushf
mov
or
imulb
and
mov
or
sbb
pop
je
dec
adc
loopne
xchg
push
jae
lea
ja
cmpb
sbb
aas
or
or
out
js
sub
addr16
jo
jbe
pushl
pop
xchg
add
stc
fcompl
or
push
sti
mov
add
dec
pop
mov
lea
out
sbb
sbb
push
sub
pop
or
pop
sbb
je
iret
lea
jno
cltd
fs
jae
subb
push
scas
xor
jae
leave
jmp
xchg
mov
sub
dec
and
push
iret
rorb
rclb
lods
orl
add
sbb
cmpsl
xor
jge
mov
mov
dec
xchg
xchg
xor
add
mov
imul
mov
mov
dec
insb
and
mov
dec
cmp
je
mov
push
add
rcll
jae
adc
inc
mov
sub
mov
pop
das
inc
inc
lahf
orb
sub
inc
push
lods
mov
rcl
mov
or
rdmsr
cmpl
cmp
xchg
aaa
lcall
or
mov
cmp
or
pop
adc
fisttps
mov
nop
and
jo
rorl
or
fsub
add
or
add
xor
xor
ret
sbb
insb
xchg
fs
lahf
mov
nop
testb
rol
mov
mov
mov
cli
cmp
push
lea
cmpsl
adc
dec
or
gs
addl
mov
mov
repz
out
pop
gs
cmpsl
add
add
xchg
xor
inc
and
and
movsl
lock
sbb
shrb
push
add
je
jg
iret
adc
inc
sub
inc
jmp
push
xchg
or
add
pop
jmp
les
orl
dec
add
cmp
hlt
imul
jo
jmp
or
dec
pushl
and
cmpsl
add
repnz
rol
sub
mov
mov
and
adc
js
dec
jo
jge
ret
push
jae
lea
push
sub
jne
mov
sbb
ret
push
lsl
pop
stos
filds
or
dec
pop
ret
mov
push
or
dec
ss
sub
cmc
sti
xor
sbb
jge
cmp
pusha
stos
fcompl
cmpb
xor
fnstenv
inc
jmp
push
cmp
push
jb
out
cmp
sub
popa
inc
mov
mov
lea
cmp
adc
lock
dec
mov
enter
test
mov
pop
sbbl
fdivs
sub
movsb
repnz
push
sub
out
push
sti
sbb
add
add
das
lods
mov
out
insb
testb
lods
sub
sub
testb
sub
in
lock
pop
xlat
rorl
ds
shrb
aam
jne
mov
mov
popa
rorb
or
add
out
cld
push
test
test
repnz
lea
ret
push
test
js
pop
lret
popa
sbb
xor
and
in
pop
test
jmp
push
inc
or
and
mov
test
adc
cltd
push
stc
push
setne
jp
shl
cld
or
je
xor
jge
cmp
mov
cmp
lds
inc
sub
lret
ljmp
ds
mov
jo
hlt
fimull
and
push
mov
cmp
sub
sbbl
ds
or
ret
pop
xchg
fs
ss
xor
sbb
and
clc
jne
jno
imul
push
dec
or
imul
jbe
inc
add
test
add
stc
popa
imul
out
and
imul
imul
imul
mov
add
sbb
repz
movsl
pop
dec
js
pop
pop
in
movb
inc
xchg
scas
dec
xor
sbb
inc
or
push
xchg
mov
pop
mov
inc
add
add
pop
stos
mov
clc
adc
aad
mov
gs
add
inc
or
mov
pop
cmp
xchg
jmp
test
pop
jae
push
or
inc
pop
sbb
lret
pop
pop
sbb
call
out
add
add
cmp
or
xlat
xor
cmp
add
sbb
jcxz
imul
lods
mov
nop
xor
jbe
cmp
int3
loop
ret
push
pop
jns
xor
cmpl
or
mov
scas
xor
iret
sub
sub
push
add
sbb
nop
inc
dec
sbbl
fs
shlb
inc
sbb
movsl
adc
add
adc
pop
dec
xor
adc
cmc
cmp
add
add
cmpsb
loope
lret
lods
adc
sbb
jg
pop
add
push
ds
cmc
dec
pop
push
lcall
lahf
inc
mov
mov
inc
jge
inc
pop
cs
adc
inc
arpl
push
and
mov
test
outsl
insl
pop
adc
or
mov
dec
sub
fsqrt
addr16
sbb
push
test
add
fdivs
mov
dec
xor
inc
and
out
push
mov
sbb
mov
xchg
xchg
pop
sahf
xor
mov
push
mov
cmp
push
pop
xchg
pop
mov
lahf
mov
mov
mov
lods
ret
mov
and
push
dec
ja
xchg
push
mov
test
sub
push
push
mov
add
pop
push
xor
jnp
pop
pop
pop
lea
stos
push
clc
addl
adc
jne
lds
jne
push
lea
adc
dec
cwtl
cwtl
ret
ret
push
adcb
mov
icebp
test
add
or
sti
pusha
push
pop
enter
xor
mov
inc
mov
and
sub
adc
fimuls
cmpl
dec
or
adc
adc
push
out
mov
adc
mov
push
or
add
pop
pop
loope
dec
or
push
xchg
pop
mov
lcall
sbb
bound
push
les
loopne
sub
ret
push
jp
jno
in
sub
sbb
xlat
gs
mov
or
adc
and
das
xor
adc
push
lods
jnp
dec
dec
pop
addr16
push
iret
icebp
ficomps
mov
xor
sub
jne
adc
mov
jge
jmp
mov
ss
fiaddl
pushf
inc
adc
pop
fwait
cmp
xchg
cmp
mov
adc
xchg
jno
out
jo
mov
js
push
push
or
pop
pop
and
mov
fmulp
movzwl
test
ss
inc
je
test
xchg
popf
mov
push
jo
xchg
dec
rcll
pop
push
mov
repnz
xchg
sub
or
push
cmpl
push
or
orps
aad
cmp
jmp
pop
add
or
clc
push
push
rcr
insb
cmc
fidivrs
fdivrl
sub
push
rcr
fildl
adc
pop
xchg
mov
popf
add
and
jmp
fs
push
jecxz
lock
clc
loope
xchg
movsl
je
mov
loopne
dec
inc
jb
or
js
and
sbb
adc
xor
push
fstps
fadd
mov
in
pusha
rolb
lahf
pop
mov
dec
jmp
mov
arpl
into
push
and
out
call
pop
jle
mov
inc
jl
cmp
sbb
or
and
in
or
lock
pop
mov
out
aaa
cmp
push
pop
sub
aaa
dec
ja
add
out
pop
or
hlt
inc
rdpmc
leave
inc
stos
or
mov
movsb
mov
mov
jae
insl
loope
push
movsl
daa
lods
sub
outsl
mov
jp
push
mov
icebp
mov
cld
sbb
repz
clc
nop
jae
cld
mov
addr16
push
adc
cld
js
jae
pop
ret
cmp
sti
sbb
xor
pushf
and
and
or
pop
jno
out
push
fwait
int3
jne
test
loope
rcrl
pusha
jbe
jne
mov
sub
pop
fs
push
data16
clc
popa
ds
in
cmpsl
mov
sub
mov
adcb
lods
add
and
jge
mov
add
mov
mov
mov
sarl
scas
cmp
inc
adc
mov
out
pop
jecxz
and
ds
lods
sbb
inc
mov
into
sbb
gs
mov
lea
aam
xchg
mov
mov
and
sub
jg
dec
adc
sub
pushl
sbb
lock
sub
jg
sbb
push
jl
dec
add
inc
or
mov
push
cmp
mov
mov
cmpb
lock
pop
call
ss
insl
clc
scas
dec
in
dec
bound
push
cmpsl
sub
pop
push
dec
push
cmp
pop
sbb
incb
cmp
int
mov
fwait
xchg
cmc
adc
dec
pop
aad
bound
sub
mov
push
enter
into
jmp
mov
out
push
loope
rol
sub
xor
das
add
xor
scas
push
cmp
xor
xor
and
outsl
push
xor
subps
inc
pop
adc
daa
adc
jl
mov
inc
mov
imul
popl
int3
sbb
es
es
dec
mov
lea
pop
ss
adc
sub
dec
push
sarb
mov
or
add
sub
xchg
adc
shlb
inc
add
jmp
out
sbb
add
add
inc
mov
cmp
mov
sbb
in
xor
jg
pop
test
inc
mov
fsubl
xchg
xor
mov
adc
xchg
xchg
or
push
mov
inc
scas
push
cmp
push
xchg
adc
push
mov
je
outsl
adc
imul
cmp
das
sbb
add
sub
mov
push
sub
mov
adc
ljmp
in
sbb
imul
add
mov
gs
pop
insl
push
add
cs
bswap
loope
or
inc
push
xor
loopne
jp
jo
lret
cmc
or
mov
pushl
sub
enter
sbb
lret
push
dec
rclb
cs
add
rol
push
xchg
inc
in
mov
sub
mov
lahf
ja
sbb
cmp
lcall
push
xchg
push
dec
enter
mov
push
jecxz
add
pop
inc
adc
adc
add
mulb
push
lods
pop
loop
pop
adc
and
jmp
hlt
dec
mov
popf
les
xor
test
lret
adc
pop
add
movsl
rcll
jne
and
sub
and
popf
mov
or
and
stc
shlb
xor
jno
and
jne
sub
jne
mov
push
or
jne
adcl
std
jnp
xor
add
out
movsb
ljmp
repnz
lock
fists
lahf
cmp
out
add
mov
lea
and
jo
lret
or
add
clc
pop
or
stc
sbb
or
loopne
ljmp
push
cld
or
test
push
popa
inc
add
js
jecxz
daa
dec
pop
fst
pushf
mov
rorb
push
comiss
fimuls
stc
movsb
jmp
mov
jge
push
add
xor
sarb
sub
and
in
ret
ja
push
push
cmp
fidivl
xor
test
mov
adc
les
outsl
test
js
lods
or
mov
inc
push
sbb
mov
mov
loopne
dec
scas
lcall
inc
cmp
mov
cmp
or
enter
jg
push
loop
mov
call
daa
lea
pop
mov
in
rcll
enter
cmp
push
jmp
mov
dec
sub
insl
add
lret
shll
daa
mov
in
inc
mov
jns
loop
mov
rorl
add
and
and
rclb
andb
mov
cmp
xchg
rolb
inc
jne
dec
cli
or
pop
lcall
sbb
jne
add
mov
jne
push
push
je
xor
lcall
or
sbb
outsb
test
cmp
scas
jg
add
aaa
and
adc
inc
mov
pop
scas
ficoms
and
add
cmp
je
icebp
adc
or
jne
imul
int
mov
xor
fsubs
loopne
sub
and
imul
xchg
or
cli
testb
push
pop
into
fdivrl
jl
mov
rorb
xor
cmpsl
fidivs
js
out
ficoms
sbb
in
xor
arpl
cmc
push
mov
mov
fisubl
faddl
push
test
mov
mov
orb
sub
stc
insb
cld
and
adc
or
lea
jno
adc
sub
mov
jg
aam
push
mov
adc
daa
les
ds
sbb
enter
cli
inc
xchg
jge
dec
or
fwait
sbb
xor
pop
icebp
pop
sbb
cmpb
xor
add
sbb
mov
rcll
movsl
sti
loopne
stos
shrb
sarl
jb
mov
mov
add
andb
andl
dec
dec
add
imul
cmp
push
pusha
cmpsb
imul
add
or
pop
xchg
fsubr
jo
pop
rcrl
cwtl
or
push
jo
push
sti
or
mov
pop
xchg
dec
int3
xchg
shll
xor
addr16
scas
xor
mov
repnz
out
gs
add
loopne
nop
in
jle
movb
adc
mov
sbb
mov
pop
xchg
imul
fadds
sbb
sbb
push
fs
sub
sbb
idiv
add
adc
ss
inc
sub
in
push
inc
xor
dec
out
out
add
mov
push
pop
sbb
mov
icebp
pop
push
adc
push
mov
push
jo
les
mov
sbb
sub
push
sub
pop
adc
jnp
cmp
mov
xor
adcl
inc
fcoml
xchg
mov
jne
mov
push
es
dec
lea
add
xchg
add
stos
cli
xor
cmpb
or
add
add
int3
mov
cmpsb
mov
and
sbb
sarb
mov
push
ret
pushl
dec
mov
jle
push
scas
and
std
xchg
mov
xor
aam
adc
add
negl
repz
push
lahf
jl
dec
adc
dec
and
flds
sub
jl
test
add
shl
ret
or
inc
fimull
xchg
or
and
sub
add
je
das
push
xor
dec
and
das
xorl
mov
je
sub
jne
orl
fsubrp
inc
dec
adc
imul
push
pop
xor
pop
dec
test
jmp
and
xchg
add
test
outsl
pop
xlat
or
adc
das
call
sub
fldl
sar
es
push
lds
add
jle
stc
or
repnz
out
sub
out
add
imul
mov
les
mov
pop
jmp
roll
xchg
stc
push
jne
js
in
lds
mov
ds
jne
cmp
push
jl
sbb
cmp
imul
add
fwait
jl
ja
fwait
pop
inc
sub
hlt
cld
ja
xor
dec
mov
and
cli
sahf
loopne
mov
push
mulb
lock
or
jmp
sbb
int3
cwtl
jl
adc
sbb
into
dec
add
pop
push
push
inc
cmp
shlb
popf
movsl
sbb
mov
mov
or
cli
out
fidivrs
push
adc
add
add
int3
lahf
sbb
outsb
dec
dec
and
lods
aas
add
inc
dec
push
adc
push
push
pop
jns
push
and
pop
and
mov
xor
xorl
pop
xor
fstps
bound
dec
jecxz
lcall
fisubl
cmp
sbb
sub
je
in
push
mov
mov
lock
sbb
lea
xchg
sbb
jnp
jg
bound
pushl
and
pop
out
mov
mov
adc
outsb
or
les
xchg
xchg
inc
inc
lock
lock
jne
or
cmovle
mov
je
mov
or
fs
pusha
enter
insb
insb
push
push
jo
shl
xor
pop
pop
lds
test
adc
xchg
clc
cwtl
push
xchg
imul
pop
cmp
je
popf
add
orb
or
or
and
sub
out
push
loop
cmp
lea
lds
sti
push
sub
inc
and
adc
adc
jmp
push
jne
mov
dec
rcl
inc
xor
cmpsb
movsl
mov
lock
jb
rcll
lock
mov
insb
ljmp
popf
push
test
sbb
adcl
jp
fildll
sbb
lods
fwait
sbb
shlb
cmp
movsl
movswl
in
push
mov
xor
cli
add
add
push
and
rclb
test
sub
sub
xor
sub
mov
sbb
inc
rorl
push
flds
pop
adcl
push
push
test
sbb
je
xchg
mov
aas
adc
pop
dec
imull
cwtl
loopne
test
pop
mov
cmp
lods
push
hlt
adc
jbe
bnd
mov
cmpsl
adcb
and
push
sbb
xor
jns
in
insb
xchg
outsb
jno
test
popa
loope
sti
add
inc
lcall
add
adc
std
jle
or
aas
jne
outsb
fmul
mov
add
add
stos
adc
or
or
cmp
fidivrs
ljmp
mov
lock
cmp
test
out
cmp
mov
insb
xchg
mov
push
out
inc
and
insl
pusha
mov
sub
lret
push
or
rorb
adc
pushf
fcoms
jo
mov
pop
mov
or
fdivl
add
lret
push
dec
popa
int
scas
push
fs
pop
jb
nop
xlat
sbb
mov
fs
arpl
pop
cmp
sbb
add
inc
fiaddl
and
xchg
sarl
inc
cmp
cmp
cmp
inc
cmp
add
jns
addb
cltd
ret
and
data16
movsl
scas
or
aaa
jb
sbb
mov
dec
test
cs
fnstcw
int3
mov
stos
push
js
xchg
and
test
mov
nop
shll
pushf
dec
sbb
stc
fcmovbe
movsb
sete
jmp
mov
andb
orl
lret
push
ret
dec
es
push
pop
aam
pushf
shlb
jmp
dec
in
adc
mov
cltd
push
and
or
pushf
es
loope
jns
sub
push
adc
xor
add
and
adc
jo
movsb
xor
mov
ja
lea
and
inc
push
cli
sub
ret
fwait
pop
fisubs
dec
xor
test
sub
mov
push
push
push
or
push
mov
adc
fiadds
mov
mov
sub
add
int
or
fmuls
loop
pop
mov
sbb
pushf
adc
mov
test
je
push
add
testl
pop
dec
xor
rolb
and
lcall
xor
xor
outsl
adc
dec
pusha
xor
mov
fnsave
or
sysret
sbb
add
sbb
xor
and
push
adc
out
adc
daa
rclb
popl
cmp
lock
xchg
jg
movsb
push
sbb
test
or
int
orl
xor
or
enter
jne
aaa
cmp
and
das
dec
sbb
fdivp
fsubp
push
dec
xor
or
movsl
out
jne
jae
dec
repz
and
lea
push
inc
and
fimuls
cmpsb
divl
push
and
aam
in
adc
add
mov
repnz
pop
ljmp
loope
outsl
push
sub
push
aam
sub
dec
fbld
sub
inc
lcall
inc
jnp
jp
xchg
mov
or
pop
fstpt
adc
inc
js
and
and
sub
adc
loop
and
pop
mov
mov
xor
add
je
cmp
test
int
rorl
sbb
push
adc
push
cmp
push
or
shll
scas
sbb
or
stos
pop
rorb
sub
andb
sar
push
fs
mov
push
cs
das
je
pop
or
pop
lea
push
and
jo
js
ss
arpl
and
xor
cmp
push
add
push
pop
jb
dec
xchg
movsl
loope
test
push
or
dec
xor
call
add
push
mov
push
push
in
add
cmpsl
lods
fs
push
xor
pop
adc
sub
jbe
ljmp
xor
sub
push
or
mov
insb
or
push
jbe
pop
hlt
test
in
xchg
push
mov
xor
adc
add
add
nop
sub
sbb
sarl
or
inc
or
push
jnp
cmpsb
in
imul
enter
ss
leave
inc
sarb
and
and
inc
push
mov
add
bswap
mov
fwait
xchg
cmp
add
mov
icebp
sub
das
dec
adc
js
adc
xor
adc
inc
iret
push
hlt
sub
push
sbb
add
loopne
ffree
std
call
and
cmpb
or
xor
notl
jle
inc
push
dec
pop
fcmovb
cmp
test
sub
inc
push
inc
in
and
sbb
sbb
and
sub
je
xor
aas
fimuls
dec
je
jmp
pushl
mov
rcr
mov
pop
add
push
orb
sub
mov
mov
notl
out
push
inc
xor
cmc
inc
and
test
lea
fwait
dec
add
mov
inc
negb
fwait
scas
sub
mov
jl
andl
mov
mov
push
or
js
out
or
fs
scas
mov
push
pop
cltd
ficoml
jge
pop
cmp
xor
pop
jo
push
cltd
jo
sbb
adc
mov
pop
sbb
ret
xor
cmp
movsl
ffreep
mov
call
nop
jo
out
je
fs
adc
sub
test
dec
sbb
testl
xlat
inc
xor
shl
push
ret
mov
dec
loopne
shl
jl
and
mov
sbb
je
rcrl
loopne
shll
lock
xor
pop
jmp
arpl
ret
inc
ljmp
mov
push
in
clc
bound
xor
inc
mov
cmpsl
fadds
cmp
stc
mov
es
or
lds
mov
xor
push
in
push
pop
lock
pop
sbb
mov
push
insl
push
sub
pop
push
ret
aas
xor
repnz
jne
lock
sub
dec
ja
imul
and
subb
testb
je
jne
cmp
jg
push
enter
or
dec
jl
loope
xor
jne
loopne
push
fistl
lret
jl
inc
inc
xor
adc
jp
clc
sbbb
push
sbb
inc
mov
leave
pop
adc
cltd
fcmovb
or
xorb
mov
leave
cmpsl
inc
add
mov
add
test
adc
xacquire
leave
inc
push
loopne
dec
add
popa
addr16
sbb
movsl
sarl
xchg
sub
or
xor
pop
push
jae
add
loopne
push
push
pop
inc
lock
icebp
arpl
scas
addl
and
es
push
test
lock
add
push
nopl
mov
addr16
lock
mov
push
xlat
repnz
mov
imul
push
xchg
out
mov
and
popa
or
call
out
neg
adc
test
test
scas
sbb
or
mov
es
mov
xlat
dec
fwait
sbb
pop
push
push
push
inc
push
aad
pop
cwtl
imul
cltd
idivl
push
or
push
or
lds
xchg
testl
fdivl
pop
ret
push
push
mov
mov
ds
mov
mov
movsb
vunpckhps
jecxz
xor
out
addr16
inc
lods
out
addl
aas
movsl
add
xchg
and
xor
xchg
outsl
push
mov
mov
xor
sbb
add
testb
repz
or
or
push
bound
aas
or
adc
or
arpl
aad
test
paddb
add
mov
adc
cmp
pop
add
pop
mov
jl
cmpsb
adc
add
pop
clc
stos
mov
and
xor
fstpl
dec
inc
adc
mov
push
mov
jns
adc
adc
cmp
pop
push
cwtl
push
add
jbe
arpl
pop
or
inc
cli
xchg
sub
test
cmpsb
sbb
push
push
outsb
mov
mov
inc
ret
call
or
jae
leave
push
pusha
mov
push
add
or
sbb
jae
orl
or
xchg
out
cwtl
dec
pusha
or
cmp
imul
cld
aas
je
sbb
insb
add
push
add
pop
rolb
add
or
adc
sbb
adc
sub
adc
add
and
push
fs
loopne
pop
jb
jne
icebp
shrb
ja
mov
pop
add
cmc
add
xchg
jg
add
mov
inc
mov
push
fs
add
cmc
add
sbb
and
in
and
and
cmp
out
ret
mov
cmp
pushf
jbe
or
cmpl
ljmp
fld
push
cmp
mov
sbb
pop
adc
xor
shr
xor
xchg
out
inc
add
call
loopne
and
jge
adc
cmp
pusha
sbb
add
hlt
push
sbb
or
pusha
insb
std
inc
adc
mov
mov
add
jno
repz
or
outsl
insl
out
insl
or
cmp
movsl
mov
loop
fs
or
hlt
sbb
pop
loopne
or
sbb
push
gs
bnd
push
push
pop
adc
add
clc
or
repnz
inc
fldl
and
les
cwtl
movsl
bswap
sbb
testb
sbb
ret
mov
push
push
aad
jns
or
or
bound
lock
push
sbb
popa
inc
test
arpl
shll
addb
lods
pop
js
mov
pushf
pop
push
lahf
imul
test
dec
adc
or
cmpsb
pop
out
mov
mov
push
test
add
inc
test
imul
test
pushl
xchg
adc
mov
or
inc
xor
sbb
inc
movsl
xor
je
loop
pop
and
imul
xchg
jne
ss
jl
adc
or
rclb
jl
pop
jae
pop
jmp
push
jnp
stos
and
or
push
pop
mov
icebp
add
lds
dec
xor
jle
add
inc
xor
addb
addr16
sbb
xchg
mov
lods
ret
sbb
pop
jbe
es
mov
push
jne
repz
sub
jo
xor
dec
cmp
or
mov
fsts
adc
dec
jnp
adc
hlt
into
sub
adc
sahf
movsl
xor
xor
push
mov
test
or
jo
xchg
push
mov
adc
cmpsl
jecxz
mov
cmp
nop
cmp
in
cmp
lcall
lea
mov
je
sub
add
and
in
in
lea
bound
outsb
dec
add
sbb
addb
push
sbb
and
push
test
in
and
lcall
movsb
loopne
adc
fisubl
flds
cli
xchg
clc
decl
push
sub
cmp
push
dec
testb
jbe
mov
les
push
idivl
mov
dec
insl
sub
push
xchg
push
ror
repnz
pop
testl
cmp
aas
cmp
dec
es
in
adc
out
call
pop
inc
movlps
movsb
sysexit
mov
leave
pop
xchg
sub
insl
inc
xor
divl
sbb
popa
jo
loop
js
add
cmp
sub
and
mov
push
push
fiadds
test
sbb
ficoms
mov
test
jge
jl
je
add
outsb
mov
jge
test
add
testb
jle
loopne
jle
xor
or
jl
neg
ret
xchg
out
ret
rorl
adc
mov
je
xchg
and
fcoms
loopne
outsb
xchg
adc
adc
add
jo
push
push
push
and
cmp
sbb
andl
into
pop
lods
jmp
pop
pop
push
push
dec
roll
or
dec
dec
pusha
outsl
and
dec
in
bound
add
pop
and
cmp
mov
or
xor
adc
push
rcrb
testl
xorl
lret
lods
call
sub
mov
jbe
and
sub
mov
xchg
loope
aas
adc
imul
cmp
push
add
add
mov
imul
add
rorb
adc
pop
pop
fiadds
adc
inc
mov
mov
xchg
mov
lock
dec
jecxz
cmpsl
jae
mov
cmpsb
or
cwtl
les
add
roll
js
xor
push
lea
xor
mov
ja
xchg
sub
xchg
sub
push
push
inc
imul
or
pop
push
pop
cld
push
cltd
mov
adc
dec
inc
fdivrs
cmp
inc
shl
mov
push
clc
adc
cltd
adc
dec
xchg
cld
push
mov
push
imul
fs
in
pop
jp
cmpsb
jne
ret
outsl
mov
fstpt
and
ja
je
or
je
or
sub
sub
dec
je
das
adc
jge
lahf
add
loopne
or
add
xchg
or
jne
sbb
or
xor
push
jmp
cmp
in
je
push
adc
adc
dec
xor
inc
adc
inc
mov
int3
lds
ret
int3
mov
mov
lcall
shll
xor
push
add
call
mov
or
cwtl
lret
es
jl
sub
popa
jl
test
adc
nop
push
insb
imul
daa
or
mov
repnz
ret
xchg
and
enter
das
add
lds
ljmp
ret
ret
clc
jecxz
push
cmpb
dec
dec
je
sub
inc
dec
sub
or
adc
adc
or
fstpt
in
mov
aaa
popf
sub
daa
or
ret
push
adc
adc
adc
xchg
dec
mov
movsb
xchg
add
insb
adc
push
outsl
dec
pusha
ret
fsts
or
xchg
xchg
push
inc
imul
test
jnp
and
movsb
pushf
and
dec
cmp
adc
jne
push
or
push
call
pop
and
movsb
inc
stos
push
sbb
sbb
push
cmp
mov
dec
or
ret
pusha
mov
ds
icebp
clc
addb
dec
aas
and
push
or
movb
sbb
push
xchg
out
pop
xor
dec
adc
aad
mov
push
jg
dec
sub
je
push
xor
jo
push
or
mov
imul
fcompl
add
les
dec
xchg
xor
dec
mov
cmpl
loop
scas
push
and
jns
pop
inc
add
add
dec
and
push
sbb
sbb
cs
jns
sub
in
inc
inc
scas
dec
in
clc
dec
mov
in
test
lret
iret
icebp
jge
mov
or
aam
sbb
push
js
inc
pop
nop
repnz
mov
cmp
and
fcoml
loope
jns
fsubrp
push
xor
cmpb
ret
cmp
xor
push
and
inc
nop
andl
out
jbe
push
es
mov
ds
mov
sub
loope
fidivrs
xor
adc
sahf
aas
pushf
roll
aam
jno
push
xchg
mov
jo
xlat
in
mov
sub
add
loope
roll
sbb
mov
push
fsubrs
jmp
int
mov
movsb
arpl
stos
std
decl
lret
repz
or
adc
push
cmp
dec
pop
repnz
sbb
adc
shll
fidivl
push
ljmp
movsb
push
jg
sahf
and
pop
adc
push
push
les
mov
divl
or
push
cltd
inc
loop
andl
data16
and
out
jne
mov
mov
pop
cs
xor
sbb
dec
ret
jge
aaa
call
lahf
ds
idivb
inc
or
pop
hlt
or
jne
jl
sbb
adcl
sbb
or
mov
inc
mov
push
sub
shll
outsl
shrl
inc
mov
je
daa
dec
sub
push
dec
loope
fisubl
mov
outsl
or
xchg
pop
fs
pop
mov
inc
cld
js
or
call
adc
push
fiadds
and
dec
lahf
rcrb
sub
xor
push
sub
or
icebp
add
and
cmpsl
push
or
add
or
mov
mov
mov
fstpl
adc
rcll
lock
or
addl
outsl
shlb
cltd
fbstp
incl
sbb
int3
cmpsl
cmc
mov
add
inc
jp
add
cmp
lods
js
mov
pop
push
inc
leave
jl
lods
dec
je
rcl
add
add
subb
jmp
or
jge
or
push
sub
dec
sahf
imul
repz
inc
xor
jp
xor
divps
mov
sbb
dec
cmp
hlt
lock
cmpsb
sub
mov
sbb
je
test
clc
add
pop
dec
inc
daa
enter
outsl
mov
sbb
xor
push
or
loope
add
mov
bound
cwtl
popa
and
mov
add
mov
mov
adcl
or
sbb
add
adc
push
sub
or
out
adc
movups
push
pop
dec
in
movsl
or
shlb
push
cmp
mov
and
jp
add
push
int3
xchg
mov
and
pcmpeqb
sti
mov
lock
sub
pop
cmp
mov
mov
sub
outsb
cmp
or
mov
or
mov
ret
xor
idivl
or
mulb
fimuls
and
adc
lahf
rcll
cmp
mov
cmp
pop
jne
sub
push
push
in
rclb
pop
xchg
fstpt
fcoms
xchg
jne
test
movsb
in
or
and
leave
jp
cmp
add
ret
push
mov
sarl
negl
fmull
dec
sti
or
dec
je
fidivrs
sbb
xchg
cs
das
push
sbb
add
cs
inc
movsl
popf
popa
pusha
pop
iret
mov
sub
add
shrb
and
nop
loop
adc
je
cltd
adc
push
stos
imul
sti
cmp
shrl
in
xor
lcall
push
sub
inc
and
pusha
popa
and
testb
inc
loope
pop
jno
sub
and
into
jle
pop
into
xor
dec
add
mov
in
scas
cmpsb
test
xchg
push
scas
in
or
aam
arpl
cltd
fcoms
sbb
xchg
ret
in
adc
in
and
sub
add
imul
push
push
sbb
lock
inc
inc
popa
push
mov
fildll
ljmp
dec
ret
pop
sub
es
sub
test
or
punpckhdq
in
add
mov
mov
cmpsl
repnz
iret
pop
mov
pop
mov
loope
mov
cmp
movsl
ret
lods
repz
lock
cltd
push
dec
sub
test
cmp
mov
pop
cmp
and
xchg
enter
or
or
popa
hlt
add
push
push
enterw
pop
add
sbb
adc
aaa
test
jge
leave
nop
dec
dec
or
das
inc
and
mov
and
daa
inc
out
or
push
lock
push
adc
je
cmp
je
loopne
and
push
mov
popf
or
push
sbb
dec
mov
dec
jo
mov
dec
adc
jne
sbb
push
or
sti
and
les
mov
pop
daa
push
mov
push
fisttps
repnz
push
dec
call
pop
je
mov
pop
and
movsb
dec
and
nop
lahf
popa
mov
sahf
rolb
or
mov
jp
jp
imul
rcll
es
add
int3
add
shrb
inc
mov
mov
sti
xor
mov
jnp
cmpb
dec
je
sub
push
add
nop
push
pop
mov
decl
dec
jp
cld
rol
add
and
cmc
aaa
push
fsts
inc
lea
jmp
test
popf
std
mov
push
nop
and
fdivrl
stos
cltd
push
cs
addl
ret
andl
push
xchg
and
inc
pop
imul
xorb
out
arpl
mov
lcall
lahf
jne
es
cmp
sbb
mov
or
rorb
rorb
and
xlat
sub
add
jb
sub
dec
ja
into
outsb
xchg
inc
fnstenv
shlb
jae
js
xor
add
inc
scas
loopne
push
adc
ror
jae
dec
xor
dec
xor
pushf
cmp
xor
cmp
adc
hlt
inc
rcrb
cmp
mov
pop
inc
pop
jle
jne
dec
xor
sub
add
and
sbb
inc
dec
sti
and
dec
jmp
push
pop
xor
adc
dec
jmp
push
or
jp
add
das
imul
jns
jle
push
fisubs
iret
in
daa
jb
jae
push
pushf
mov
fdivp
push
xlat
adc
dec
push
addl
dec
clc
jg
fisttpl
call
add
outsb
out
add
inc
and
push
and
push
add
sahf
std
mov
js
or
or
aam
pop
adc
and
dec
out
mov
movsl
push
pop
pop
push
sub
adc
cmp
pop
jbe
lods
nop
or
xor
movsl
movsl
push
sbb
rcrb
sub
rclb
cwtl
jb
inc
pop
arpl
call
cmp
adc
daa
pop
loope
int3
outsb
sbb
and
es
sbb
inc
cmpsl
lea
ret
bnd
popf
jns
xor
adc
addr16
addr16
hlt
cltd
fdivl
enter
in
mov
xor
add
jle
in
push
xchg
inc
dec
pop
lcall
mov
pop
in
push
jge
testb
or
or
mov
fimull
mov
mov
lcall
mov
in
xchg
loopne
repnz
sarl
jb
ret
jbe
push
mov
jne
cmc
sbb
in
push
icebp
and
cltd
std
ljmp
sbb
push
sbb
popf
add
sub
and
mov
or
adc
add
jecxz
push
fs
int3
push
adcb
enter
or
pop
pop
sub
aaa
add
xor
loopne
xchg
dec
mov
rcll
in
int3
add
xchg
push
add
push
lock
push
test
add
push
sub
jae
lret
mov
mov
shl
das
or
gs
cmpsl
jmp
jne
mov
sbb
and
push
or
or
add
dec
int
shl
inc
inc
jnp
int
pop
sahf
je
fmuls
xchg
adc
mov
add
leave
arpl
push
cmp
inc
sub
add
and
inc
lahf
jmp
push
jl
mov
pop
xchg
dec
or
test
pop
add
push
mov
add
cld
cmp
jne
sbb
faddl
add
je
or
add
push
scas
mov
arpl
addl
cmp
mov
insl
adcl
cwtl
pusha
call
or
or
xorl
js
inc
lahf
ja
xchg
push
fninit
call
jb
js
dec
sub
push
and
or
test
xor
inc
pop
jne
scas
fmul
in
inc
push
movsb
mov
jbe
les
lea
sbb
imul
sbb
test
in
jo
mov
les
out
subb
sbb
out
inc
push
jmp
adc
push
xchg
or
xchg
mov
pop
faddl
add
sarl
aam
and
adc
jo
and
lods
in
mov
mov
cmp
adcl
mov
pop
andb
call
loop
dec
mov
lds
and
xchg
nop
or
jno
stos
fadds
ja
mov
xchg
and
test
arpl
mov
dec
cmpsb
adc
push
sub
push
push
jb
sub
push
lods
rclb
lock
popa
mov
push
push
sbb
xorl
das
aad
pop
mov
scas
repz
aaa
andl
mov
dec
notl
jbe
shll
push
leave
add
xor
es
push
in
xchg
cmp
imul
xorb
pop
jno
ficompl
mov
adc
and
lock
xor
enter
sbb
leave
dec
pop
sar
int3
xchg
nop
mov
adc
push
orl
test
mov
adc
mov
adc
stc
add
pop
gs
mov
and
sub
inc
lcall
push
lea
add
mov
cmp
push
arpl
insb
mov
lock
pop
pop
xchg
add
insb
pop
adc
cs
inc
pusha
adc
aad
mov
add
ds
mov
and
int3
cmp
push
lea
roll
mov
push
mov
push
pusha
adc
nop
pop
fistl
xor
adc
pusha
out
sub
sub
pusha
repz
lock
repnz
adc
std
push
in
pop
aaa
aas
ja
push
pop
or
mov
imul
push
push
pop
and
out
clc
and
jne
andl
test
pop
outsl
push
or
pop
inc
arpl
shr
imul
sub
jnp
or
jae
cs
and
jb
pop
xor
sbb
std
xchg
jno
subl
fmuls
and
xchg
repnz
jle
cld
adc
or
fsubrl
fwait
sub
es
push
sub
shrb
push
iret
loopne
xor
les
cmp
push
push
loopne
inc
subb
mov
inc
push
in
mov
rol
push
repnz
popf
stos
add
add
icebp
mov
es
push
mov
push
lea
adc
leave
mov
rcl
loop
cmp
xchg
and
push
sbb
ret
or
pusha
lods
shll
std
sbb
or
jmp
scas
mov
cmp
add
or
inc
jecxz
fimull
leave
sbb
dec
mov
std
xor
hlt
jecxz
shlb
outsl
arpl
stos
xor
imul
push
dec
stos
fcomps
imul
push
ljmp
sbb
inc
testl
outsb
shlb
dec
add
das
xlat
mov
fs
adc
and
jne
dec
lea
mov
xor
add
push
imul
test
cmp
mov
xor
mov
mov
sbb
jne
cmp
xor
or
mov
or
xor
push
adc
add
cmp
js
or
sub
aaa
decl
ret
mov
adcl
cmp
aaa
mov
aaa
and
cltd
sbb
or
xor
or
or
add
mov
sub
loopne
cld
push
pushl
and
and
hlt
pusha
mov
pop
sub
aad
cmp
hlt
jno
push
clc
test
cmp
cmp
pop
and
mov
call
jns
icebp
aam
add
mov
add
xchg
xor
mov
dec
rorl
push
add
sbb
and
ret
or
pop
xchg
test
cmp
mov
push
push
lea
or
ja
fs
shlb
sub
or
mov
adc
xor
xlat
popf
mov
stos
jl
push
clc
shll
dec
call
pop
cmc
cmp
adc
data16
sub
aas
push
mov
insb
sub
fisttpl
jne
roll
jbe
sub
lea
jp
jl
ljmp
push
cmp
cmp
outsl
and
push
bnd
cmp
push
jne
imul
out
leave
nop
cmp
cmp
hlt
mov
cmp
or
inc
jg
and
sbb
lgdtl
xor
loope
dec
popf
xchg
aaa
inc
outsl
push
add
fcmovnu
inc
inc
sti
jl
test
jg
cmp
xorb
ret
mov
xchg
pop
mov
sbb
movsb
inc
clc
push
mov
cmp
negl
shr
not
sbb
sub
lods
mov
mov
test
and
es
xor
push
xchg
test
fs
ja
push
xchg
dec
addr16
and
sub
es
loop
in
das
das
sub
sub
xor
xchg
xchg
xchg
das
cmp
cmpsb
inc
and
cmp
insb
popf
xchg
pop
dec
lods
outsb
xchg
test
add
jecxz
addb
xchg
pop
mov
add
jg
or
inc
add
and
mov
sub
mov
inc
mov
and
sub
mov
outsl
xchg
jne
jmp
jecxz
push
bound
inc
xchg
xor
das
push
xor
push
mov
adc
dec
mov
outsl
sub
xchg
ficoml
sub
mov
in
sub
sarl
push
pop
jns
fsubl
sub
inc
adc
jns
jle
int
test
dec
ss
or
and
sbb
test
js
inc
sub
sbb
push
or
inc
mov
and
dec
loopne
test
dec
cmp
jnp
arpl
cmp
cmc
scas
inc
mov
adc
xor
xchg
xchg
movb
mov
or
shll
add
pusha
jl
cmp
push
incl
mov
mov
xchg
sbbb
inc
loope
dec
add
sub
dec
and
or
idivb
dec
sub
imul
call
in
sahf
mov
jge
je
pop
cmp
testl
or
aad
and
aas
test
inc
sti
rep
repnz
sub
inc
xor
or
sbb
call
sub
jae
and
and
js
push
jae
sbb
fwait
sub
mov
adc
pop
push
daa
fbld
jecxz
xchg
pushf
scas
jae
push
push
mov
cmpsb
xlat
push
and
push
mov
push
imul
stos
pop
loopne
adc
xchg
adc
sub
push
adc
xorl
adc
pop
popa
pop
push
pop
adc
addb
xor
mov
mov
imulb
cmpb
or
data16
iret
es
push
xor
push
test
sub
int3
xor
and
repnz
test
nop
or
adc
rolb
push
iret
test
adc
xor
das
mov
int3
jae
sbb
shlb
lock
mov
push
push
push
jne
inc
popa
mov
cwtl
rcrb
sub
fstl
adc
sbb
pop
subb
sub
push
data16
lock
xchg
cltd
test
inc
mov
push
or
push
push
gs
inc
jecxz
lcall
xor
pop
cs
adc
ljmp
scas
push
push
outsl
push
fmuls
in
gs
xlat
mov
lds
push
lret
mov
cmp
out
xchg
add
add
icebp
addl
roll
push
add
outsb
ljmp
mov
mov
jne
lcall
adc
xchg
bound
adc
rol
imul
pop
mov
loop
and
and
cmp
js
cmp
dec
ss
adc
sbb
in
adcb
adc
mov
mov
loop
push
stos
sub
add
scas
inc
dec
xchg
inc
clc
adc
ret
pop
adc
sbb
and
into
cmp
and
aad
nop
clc
add
xchg
xchg
testb
adc
push
adc
jle
jnp
rol
cmp
pusha
adc
add
dec
loope
adc
inc
out
je
lahf
or
dec
adc
cmp
shll
inc
cmp
xor
sti
xorb
test
loopne
pushf
or
sbb
outsl
dec
mov
sbb
sub
sar
faddp
popf
addb
rcrb
mov
call
mov
int
jo
and
sub
or
mov
es
xor
lods
xlat
jb
xchg
add
push
or
imul
ret
sub
rol
insl
pop
add
sahf
ja
test
mov
xor
adc
cmp
cmp
out
fs
xchg
push
andl
cmp
mov
and
inc
cli
clc
pusha
inc
popf
cs
ret
ret
and
rolb
test
add
add
mov
test
jl
pop
push
das
lret
push
ret
ljmpw
mov
push
push
cmpsl
push
add
sub
or
add
jl
jno
xor
push
mov
inc
or
jle
aad
mov
push
aaa
int3
add
fnsave
adc
pusha
jl
sbb
xor
mov
outsl
dec
pop
or
dec
pop
test
dec
xchg
pop
xchg
adc
adc
stos
ds
jmp
dec
ss
mov
mov
dec
add
jne
sub
outsb
fwait
sbb
sar
jb
pop
cmp
jae
push
mov
jb
mov
xor
lret
sahf
xlat
arpl
jmp
dec
hlt
jae
rolb
nop
mov
jg
cmp
or
pop
repz
inc
faddl
push
icebp
inc
shrb
and
xchg
jl
daa
andl
inc
inc
arpl
mov
fsts
inc
sub
dec
mov
lds
adc
cmpsb
adc
push
fnsave
cli
and
mov
sub
push
sub
add
jne
rcrb
adc
dec
fiaddl
pop
dec
sti
movsb
add
sbb
inc
push
ljmp
enter
adc
adc
cmpb
cmp
nop
dec
es
xchg
sbb
add
push
sbb
push
sub
and
cli
mulps
add
pop
dec
jbe
popa
mov
dec
lods
cmp
sub
js
pop
sbb
call
mov
fwait
inc
sub
shll
jbe
add
xor
fcomps
iret
mov
push
sub
adcl
mov
inc
mov
hlt
ret
subl
outsl
loope
and
mov
jo
push
jmp
and
frstor
filds
mov
xchg
dec
or
or
lahf
arpl
in
inc
push
adc
sub
in
cmp
xchg
adc
addr16
insl
cmp
clc
arpl
sbb
cmp
pop
adc
and
mov
add
sbb
fcoml
or
cs
or
adc
lods
or
jmp
or
pop
mov
outsb
and
jne
push
sub
push
sbb
jne
push
adc
rcrb
add
scas
mov
xchg
rep
mov
sub
adc
inc
xchg
push
push
xor
es
dec
mov
sti
mov
xchg
push
and
lahf
and
and
push
nop
xchg
adc
inc
xor
jg
and
sbb
xchg
jo
xchg
xchg
and
test
or
das
shlb
xor
add
inc
push
in
and
xorb
pop
jne
lods
add
cmp
pop
mov
mov
jp
sbb
xor
leave
fnstsw
ret
xor
xor
or
in
pusha
mov
popa
adc
pop
add
fucomp
mov
add
pop
sbb
call
inc
or
fs
jbe
sbb
add
push
stos
mov
pop
mov
xchg
xor
inc
adc
or
adc
dec
add
mov
mov
fadds
mov
andl
adc
push
mov
sti
insl
sub
mov
lods
mov
sbb
xor
dec
dec
sti
inc
mov
xor
repz
loop
fimuls
rorl
enter
fdivl
mov
shr
aam
mov
mov
js
cmpsb
loopne
dec
insb
xor
sub
cmp
decl
sahf
je
fcomps
mov
mov
xchg
mov
mov
pop
divb
push
test
sub
cltd
ret
sub
or
test
xor
mov
test
sbb
inc
aas
rolb
jg
or
push
mov
pop
add
loop
and
fistpll
ret
and
mov
jne
pop
lock
rcrb
inc
mov
or
adc
sbb
xchg
jne
scas
or
and
jne
jp
leave
push
adc
loopne
sahf
and
cmp
lds
repz
and
pop
sub
lock
das
repnz
out
jae
and
fwait
nop
mov
jno
lock
rolb
cmpsl
xchg
insl
push
lret
push
sub
mov
jno
fdivr
xor
or
ret
cmpsb
push
add
mov
fsubrl
adc
aaa
mov
pusha
sub
or
je
mov
or
bound
popf
in
xchg
xchg
mov
push
cmp
jge
xchg
sbb
test
xor
insb
dec
sub
lds
cmp
adc
or
movsb
or
mov
notl
ret
inc
bound
mov
insb
test
dec
js
nop
lock
pop
pop
fidivs
mov
jns
sbb
push
xchg
lods
ret
sub
or
push
dec
xchg
add
and
xor
ja
jp
push
je
jmp
adc
cmp
jb
lret
add
dec
mov
adc
or
adc
aas
das
insb
mov
dec
sarl
dec
xlat
cmpb
mov
lods
test
xor
lahf
xor
xor
adc
pop
nop
mov
or
push
inc
lcall
mov
js
pusha
scas
push
pop
mov
pop
sbb
sbb
repz
aam
popf
cmp
inc
in
xchg
push
jp
call
sbb
inc
inc
jg
push
adc
pop
pusha
lcall
xchg
or
push
sbb
jnp
mov
adc
ljmp
xor
mov
inc
gs
hlt
test
push
lret
shl
pusha
mov
pop
jnp
test
loopne
adc
adc
xor
pop
inc
adc
mov
cmp
in
cli
aam
add
inc
and
push
fcomps
adcl
push
mov
icebp
into
push
inc
mov
dec
rolb
mov
or
or
xchg
cmp
mov
or
push
popa
mov
lret
mov
mov
adc
sub
in
scas
push
lock
jbe
jmp
lahf
dec
outsl
addb
pusha
or
sub
inc
or
pop
push
fs
inc
add
sbb
sbb
and
pop
test
movl
push
push
add
jo
mov
mov
push
inc
cmpsl
loopne
ret
out
test
and
adc
inc
add
push
xchg
pop
or
dec
rcr
add
std
sbbl
push
aaa
rclb
sbb
loopne
repnz
xor
sub
sub
pusha
idiv
and
xchg
pop
push
push
and
in
fcoms
jmp
push
cmp
stos
adc
mov
inc
sbb
dec
push
adc
fs
divl
fsts
mov
sub
dec
inc
jg
aas
push
add
ret
push
jno
inc
stos
push
shlb
or
mov
inc
and
clc
adcb
loop
adcl
test
jmp
loope
es
stc
pop
popa
push
movsl
and
mov
cltd
pop
pop
mov
pushf
dec
outsl
iret
sub
xorl
scas
xchg
add
mov
dec
pushl
test
jnp
cmp
pusha
es
xor
push
call
test
push
push
pop
inc
sbb
int
loopne
pushf
push
pop
jne
and
jb
mov
xor
out
enter
mov
bound
dec
movsl
aam
xchg
sub
push
add
mov
mov
push
xchg
adc
lods
or
pop
mov
mov
jb
or
jb
movsl
mov
mov
test
add
fldl
pop
and
xor
addl
subl
imul
or
rclb
loope
or
sub
dec
jb
testl
xchg
or
pusha
push
jl
adcl
mov
loope
out
loope
jb
cmp
add
cmp
sbb
or
inc
jno
adc
xchg
or
sti
push
movsb
jb
xor
js
mov
mov
loopne
lret
lods
jg
cmp
jbe
nop
mov
mov
out
outsl
mov
mov
icebp
ret
push
add
ret
cmp
mov
xor
inc
outsl
idivb
int3
das
and
dec
cs
ds
loopne
inc
sbb
les
xchg
sbb
rcl
sub
rcll
lods
add
arpl
or
or
sti
pusha
adc
cmc
pushf
loop
push
adc
or
fwait
lahf
jb
clc
xor
pop
mov
xchg
lds
add
mov
sbb
inc
scas
or
test
cmp
inc
lret
xchg
mov
mov
push
push
leave
push
cmp
movsl
mov
or
mov
add
pushf
mov
mov
xor
push
scas
push
lcall
pop
jne
fs
push
rorl
out
cmpsl
stos
xor
iret
mov
je
xchg
or
test
ljmp
push
andl
xchg
add
shlb
mov
dec
mov
cmp
clc
or
mov
lods
and
or
lea
cmp
rclb
enter
push
push
mov
jo
and
js
add
and
inc
fwait
mov
push
dec
push
fs
psllq
in
xor
cmp
dec
mov
add
or
es
push
clc
stos
push
add
dec
iret
push
rol
jecxz
and
in
mov
mov
and
mov
mov
adc
enter
fistl
scas
pop
cmpl
stos
xchg
nop
mov
add
lret
test
jo
sbb
inc
hlt
dec
and
sub
adc
in
pop
fwait
dec
or
adc
movsl
rcl
lods
shrl
jle
xor
xchg
fwait
cmp
cmpb
add
mov
mov
jno
pushf
stos
xlat
imul
pop
adc
pop
xchg
lahf
lea
lret
fadds
pop
cmp
inc
movsl
test
rcrb
in
adc
ss
call
add
sbb
fdivrp
xchg
xchg
inc
xor
notl
jno
or
enter
or
clc
aas
ss
inc
push
repnz
rolb
loop
mov
cmp
inc
mov
shrb
or
push
lret
rcr
bound
or
fs
sbb
shr
or
rolb
pop
faddl
jo
cmp
inc
xchg
pop
push
lcall
mov
sub
das
test
rcrb
mov
aas
push
rclb
adc
je
cmp
jne
push
pop
sub
insb
xchg
loopne
adcb
adc
test
mov
nop
push
and
xchg
xchg
cwtl
pushf
gs
lcall
and
sarl
mov
mov
rorl
mov
sub
lds
pop
test
inc
mov
sti
cs
ja
popf
mov
inc
movb
ja
movsb
rcrb
fnstcw
std
mov
into
push
dec
sbb
jmp
cmp
cmp
scas
icebp
ret
ror
fidivl
inc
xchg
jo
ret
cltd
adc
sbb
cmp
jle
dec
pop
dec
mov
les
nop
dec
adc
mov
push
test
or
lea
sbb
mov
clc
mov
enter
mov
ljmp
scas
outsl
push
pop
mov
pushf
mov
inc
mov
mov
mov
add
lods
jae
fs
insb
mov
add
inc
shrl
xor
sub
mov
xchg
push
xor
mov
push
enter
push
xor
or
ret
mov
xchg
inc
sbb
mulb
into
add
adc
cmp
stc
and
dec
cmp
add
or
and
lods
sub
or
cmp
inc
addr16
test
inc
stos
adc
xorl
add
js
pop
pop
stos
out
mov
es
cmp
push
pop
cmpsb
roll
push
push
push
jns
dec
fdivrs
cmp
push
push
repz
pop
xor
mov
mov
pop
pop
daa
inc
je
shll
add
xchg
loopne
add
jmp
lahf
mov
nop
das
inc
gs
lods
mov
jno
lock
movsl
insb
xlat
scas
icebp
push
or
xor
mov
sbb
xlat
push
dec
add
add
test
push
inc
clc
sbb
add
cmpsl
jbe
mov
push
add
test
incb
cmp
push
pop
aad
rolb
xchg
xor
push
push
mov
mov
test
xor
cmp
pop
xorb
xorb
jne
and
adc
jnp
hlt
lea
mov
jnp
sub
xor
inc
inc
adc
push
jl
int3
sub
sahf
dec
cwtl
xchg
xchg
cmp
dec
cmp
out
cmpsl
pop
sub
movsl
mov
mov
andw
lock
sub
bound
xor
add
jnp
mov
repnz
and
out
add
pop
push
mov
mov
gs
push
lods
lods
and
dec
addl
gs
sti
sub
fistl
push
mov
add
push
dec
jle
sbb
pop
fsubl
hlt
sbb
pushf
mov
rcll
lods
xlat
iret
hlt
lock
lea
inc
xor
mov
mov
cmp
cmpb
mov
clc
stc
push
cmp
loope,pn
test
cmpl
and
adc
inc
insl
and
dec
inc
lahf
push
jbe
push
idiv
lea
mov
mov
xchg
aaa
fsubl
add
jae
and
aad
call
fistpl
mov
xor
jp
mov
shlb
push
arpl
lret
ret
push
cmpsb
scas
bound
pop
pop
sub
mov
call
test
adc
jbe
or
ret
in
adc
pop
daa
dec
es
je
inc
fs
in
push
add
push
push
in
out
push
sub
and
jns
nop
cltd
pop
fdiv
push
mov
fsubrs
clc
addr16
jge
and
das
call
add
cmp
push
push
add
jne
fadd
sub
jne
dec
lods
insl
or
test
call
leave
loopne
add
inc
fcmovnb
add
test
or
mov
adcb
mov
and
mov
mov
addr16
popf
lcall
sbb
aam
lcall
test
mov
or
push
cmp
jb
or
inc
push
add
orb
jb
popf
pop
mov
push
sub
rolb
cmpsb
inc
push
dec
mov
pop
lock
fsubrl
inc
cmp
mov
mov
lock
mov
add
mov
mov
imul
bound
push
adc
dec
out
test
decb
cmpsl
ss
lods
adc
aaa
add
adc
dec
cmp
loopne
cmp
rol
adc
sbb
nop
lcall
or
sub
pop
xorl
cmp
imul
es
mov
sub
add
or
push
das
pop
jb
inc
xchg
cmp
mov
stos
xor
jp
jp
je
xchg
ljmp
je
data16
sub
xchg
pop
dec
cli
jle
call
cmp
jg
outsb
adc
int
sub
cmp
or
outsb
add
inc
sub
jge
push
jle
cmp
jns
xchg
push
ficompl
jp
outsb
and
mov
bound
sbb
mov
dec
pop
stos
pusha
xor
inc
xchg
fisttpl
jb
jmp
divb
jge
cmpsb
dec
cmp
cmp
xor
mov
sbb
xor
mov
inc
inc
jmp
inc
jo
add
addr16
and
or
cld
lock
cli
iret
add
ret
xchg
pusha
movsl
push
or
cmpb
add
jae
dec
pop
or
movb
ds
jmp
pop
cmpsb
xchg
add
shll
jae
sbb
insl
pop
pop
cmp
fcomps
push
rorl
xchg
push
sbb
test
lret
mov
mov
pushf
movsl
sub
inc
sbb
andl
and
adc
push
mov
scas
add
xlat
imul
cli
sbb
push
sbb
cmp
xchg
lret
mov
xchg
les
aam
in
add
jl
fldcw
adc
add
mov
add
stos
cmp
inc
push
inc
movsb
adc
mov
add
stos
pop
push
push
dec
sbb
jmp
mov
movsb
in
jns
adcb
test
add
mov
adc
push
in
and
jl
rolb
push
imul
xchg
popa
aaa
imull
andl
enter
or
or
popa
add
jo
push
or
and
push
rorb
adc
rorb
int
rclb
divl
jo
cltd
rcl
inc
push
add
rolb
jo
jb
sbb
adc
add
movsb
add
add
nop
cltd
xchg
ret
cli
loopne
arpl
cmp
lea
test
jge
fldl
cmp
jle
inc
inc
js
mov
and
pop
outsl
push
mov
mov
pusha
std
add
mov
xchg
sub
and
sbb
ret
and
pusha
add
lea
popf
xchg
nop
xlat
das
mov
or
mov
insb
lret
jecxz
test
orl
jg
test
xor
pusha
add
xchg
dec
add
jo
mov
fwait
mov
loopne
rolb
pop
xchg
into
inc
add
dec
das
movsl
inc
push
in
add
scas
mov
pop
bound
xor
pusha
imul
pop
or
mov
int3
push
push
add
push
fadd
and
dec
dec
sbb
stos
cmc
sbb
pop
dec
and
xor
lcall
sub
mov
mov
in
xor
jne
ss
jno
inc
inc
adc
je
cltd
test
mov
std
mov
dec
pop
cmp
sub
sub
inc
push
inc
jo
shlb
das
shr
sub
add
push
and
cmp
push
pop
mov
sarb
addr16
sbb
xor
and
dec
pop
dec
cmp
add
add
test
sub
push
push
push
in
cmp
push
cli
ss
and
push
push
add
in
shlb
adcb
and
add
lret
inc
mov
out
sbb
mov
call
dec
test
inc
add
test
testl
cmp
jno
xor
insl
lea
mov
push
dec
xor
loop
inc
xorb
add
shr
add
fcom
sbb
pop
clc
add
jb
not
dec
cmp
out
mov
ret
shr
cmp
xchg
cmp
jbe
add
jmp
add
pop
shlb
aaa
sub
ret
and
dec
hlt
fisttps
dec
loopne
jl
mov
cmp
cmpsl
mov
movsb
scas
or
sub
xchg
adc
js
stos
mov
cmpsl
nop
pop
dec
punpckhbw
push
jnp
sub
repnz
lods
mov
dec
popf
mov
add
ret
mov
pop
ss
out
dec
mov
add
xchg
test
je
or
fsts
dec
jo
push
add
sar
mov
int
mov
imul
rcll
imul
cltd
push
mov
jl
pushf
int
scas
dec
ss
adc
mov
les
sbb
xor
xchg
or
ljmp
jmp
or
fwait
call
jb
pop
add
mov
xor
lods
or
mov
jbe
cwtl
arpl
mov
xchg
cmovs
movsb
inc
dec
xor
shrb
jg
and
stos
clc
xlat
nop
loope
mov
jmp
xor
mov
call
add
lea
jg
loopne
xchg
scas
cmpb
add
mov
push
jns
adc
sbb
xor
jb
lea
insb
fstpl
and
or
jno
push
orl
and
mov
scas
dec
xchg
and
rorb
scas
pusha
les
repnz
xor
mov
mov
push
xor
pop
push
pop
mov
dec
xor
and
push
push
pop
mov
lods
dec
add
testl
mov
arpl
adc
divl
add
cmpl
in
pushf
or
stc
jmp
sbbb
insl
add
adc
adc
or
inc
pusha
and
loope
sub
and
sarl
je
int3
std
cmc
dec
sbb
ss
cmc
popa
jge
je
mov
sbb
pop
push
dec
or
or
or
push
add
shrd
nop
push
or
cmp
mov
movsb
scas
call
or
adc
adc
fwait
test
ljmp
lea
push
dec
xchg
dec
adc
mov
xchg
pop
mov
push
or
repz
pop
faddl
fcoms
mov
adc
daa
xchg
in
inc
add
xlat
add
push
push
les
test
imul
adc
adc
adc
fsubrs
mov
fistps
push
adc
in
add
pop
imul
or
inc
inc
inc
xor
das
aam
sub
imul
jmp
aaa
pop
and
jb
roll
fs
add
add
mov
ds
movsl
mov
movsl
jno
rclb
jmp
mov
filds
push
adc
sub
and
adc
fistl
xor
sub
cld
hlt
xor
push
pop
sub
or
stos
sbb
adc
xor
cmp
insb
mov
or
es
xor
mov
push
faddl
adc
dec
inc
push
test
and
mov
in
xor
sti
jb
je
push
scas
movsl
mov
jecxz
sub
xor
cmp
jno
push
shlb
jnp
ret
pop
adc
es
scas
sub
push
ss
movsb
movsb
repz
add
repz
mov
and
or
jo
outsl
push
add
and
xor
jnp
xchg
push
push
into
idivb
or
mov
or
add
xor
dec
ds
popa
pusha
xchg
sub
outsl
fsubrs
push
sti
push
add
or
mov
imul
ret
lcall
push
inc
and
or
mov
ret
lret
push
add
xchg
cmp
rcrl
inc
je
mov
mov
cli
dec
dec
xchg
push
aaa
push
adc
pop
out
cmp
mov
into
xor
jmp
mov
sub
pop
add
mov
push
sbb
test
outsb
mov
loopne
push
mov
test
lret
test
fistl
or
inc
xor
xor
insl
or
insl
add
in
push
mov
add
loope
popf
insl
insb
xor
adc
repnz
xor
sbb
inc
movsb
mov
loopne
dec
xor
push
testl
inc
or
xchg
lret
xor
xchg
test
arpl
or
push
inc
pop
loopne
sbb
lock
inc
das
push
cmp
push
stos
roll
rorl
ret
test
enter
cmp
fwait
mov
shlb
lea
or
ja
mov
in
mov
clc
push
push
mov
or
inc
es
jmp
mov
scas
xchg
js
adc
adc
pushf
lret
xor
es
push
sub
mov
popf
jo
sub
mov
lcall
out
rclb
inc
add
add
add
xor
sub
pop
outsl
out
add
mov
cmp
inc
sbb
xchg
adc
outsb
aam
push
jns
pop
pop
or
flds
or
xchg
xchg
pop
mov
repz
sbb
rorb
jl
or
mov
bnd
test
dec
push
dec
imul
subb
popa
sub
inc
sti
push
sbb
or
lret
in
mov
std
inc
mov
aam
jl
push
xchg
mov
mov
mov
add
bound
movsl
mov
je
push
aaa
loopne
sub
call
jno
xlat
ss
jle
push
pop
sarl
sbb
cmpsl
push
cmp
lahf
divb
dec
jbe
push
mov
jno
mov
mov
test
in
xlat
lock
jb
stos
pop
pop
xchg
xor
pop
pusha
leave
or
sbb
lret
and
jns
push
and
aaa
xor
insb
jl
jmp
push
in
fldt
jmp
add
les
adc
mov
push
inc
test
xor
js
insl
mov
jecxz
pop
mov
sbb
jl
push
mov
and
cmp
xor
mov
pusha
and
rcrl
adc
jmp
arpl
ss
or
or
inc
or
loop
inc
popa
and
and
add
pop
mov
and
lea
js
notl
inc
inc
dec
mov
mov
jo
inc
test
nop
mov
insb
mov
add
repz
xor
test
mov
inc
mov
mov
and
cli
repnz
push
dec
nop
das
or
movsb
lods
mov
mov
mov
mov
xchg
xchg
xchg
sbb
xor
dec
shlb
cmp
popf
nop
inc
pop
add
roll
cmp
ret
test
push
sbb
jns
mov
orb
in
addr16
inc
xor
clc
push
lock
add
cld
push
jecxz
xchg
sub
in
sbb
mov
shlb
mov
movl
pusha
adc
movsb
pop
gs
push
mov
xchg
jl
xchg
cmpsb
fs
jl
and
jnp
jle
push
and
js
xchg
pusha
xor
xor
xchg
jl
mov
sti
jmp
add
cli
inc
jo
mov
je
lret
dec
ret
mov
xor
les
test
xor
in
push
xor
or
push
fwait
daa
pushf
dec
sbb
rcrb
jmp
jge
je
sbb
les
xchg
and
push
mov
aad
cmp
pushl
or
push
xor
add
les
pop
call
add
pop
mov
sbb
or
bound
leave
add
sbb
inc
popf
add
sbb
push
lock
adc
push
sarl
ret
pushl
cmp
and
or
fnstsw
ret
or
cwtl
test
fildl
xor
movsl
mov
leave
mov
sbb
cmpsb
pop
out
ljmp
and
or
popf
call
mov
addr16
lock
jmp
enter
cmpsb
or
ljmp
loope
adcl
icebp
out
clc
loopne
test
cs
jge
jbe
sub
push
js
mov
xor
rorb
test
cmp
jle
imul
mov
leave
test
in
push
push
cs
pop
push
jmp
xlat
sbb
pop
inc
add
or
xchg
pop
mov
es
push
jge
dec
loopne
pop
icebp
add
mov
daa
jo
or
in
pop
sbb
hlt
push
test
jne
or
lods
je
in
mov
mov
les
adc
stc
sub
mov
xchg
scas
cltd
or
dec
mov
adc
mov
icebp
inc
mov
mov
mov
iret
xlat
lock
xor
add
xlat
inc
shlb
xchg
sbb
jg
add
sub
push
scas
mov
stos
lock
add
mov
cmp
xchg
jmp
pop
cmp
aaa
jg
adc
mov
ja
dec
push
sub
pop
add
sbb
lret
pusha
or
mov
in
add
leave
xor
sub
sahf
stos
stos
adc
push
jecxz
add
jo
lods
xor
pop
loop
mov
cmp
add
ds
cmp
adc
push
push
inc
add
xchg
sub
test
shl
ret
mov
mov
testl
add
jmp
sbb
push
push
dec
movsl
into
cmp
inc
cli
repz
jmp
adc
scas
or
pop
push
or
mov
sbb
imul
mov
sbb
cli
jmp
fldl
fs
pop
and
push
cmp
adc
sbb
incl
movsl
push
push
movsl
jmp
and
mov
push
clc
and
jmp
fcomp
fnstsw
dec
jp
fldl
pop
fsubr
pop
faddp
andl
sbb
mov
icebp
sarb
push
mov
mov
dec
or
in
mov
and
jo
imul
data16
or
arpl
add
adc
add
movl
pop
shrl
out
fdivrs
sub
jne
xor
out
fs
add
sub
sbb
iret
sub
adc
xor
push
or
pop
ss
cvtps2pi
dec
mov
add
push
mov
sbb
xor
jecxz
fsubs
aam
ret
and
xchg
xchg
insb
lds
cmp
mov
int3
dec
xor
or
lock
push
mov
dec
sub
push
lcall
mov
sub
mov
pop
add
mov
add
lock
push
jmp
mov
cmp
jge
and
add
push
xor
mov
or
add
xchg
adc
jmp
pop
lods
jmp
mov
sbb
lds
cmp
popa
popf
bnd
cwtl
imul
jg
pusha
stos
sbb
cmp
sub
mov
pop
pop
loopne
add
or
imul
push
pop
outsb
into
inc
add
xchg
add
or
jns
mov
mov
mov
dec
xchg
adc
dec
pusha
mov
or
dec
bound
pop
aam
xor
mov
mov
bound
lret
stos
mov
imul
mov
jmp
test
add
cmpsb
lock
xchg
ret
push
pop
ret
xor
cmp
cli
decl
inc
adc
or
push
cmpsl
xchg
rcrl
xchg
loopne
stc
in
sahf
dec
jmp
test
adc
jo
or
loopne
mov
call
add
sub
adcb
out
push
in
xor
pop
jle
sub
dec
jmp
in
and
pushw
and
std
nop
clc
test
jg
aaa
lds
and
xor
or
stos
mov
imul
pop
stos
xor
and
jo
jns
push
mov
adc
addb
push
or
rorb
loop
sub
pop
xor
clc
inc
insb
add
mov
and
ret
add
lcall
mov
inc
ljmp
stc
and
mov
shrl
push
ss
xor
or
mov
add
add
movsb
outsb
or
orb
mov
into
or
fstl
nop
push
xchg
unpcklps
push
add
push
dec
sub
jp
ret
mov
lds
cwtl
push
push
or
push
xor
pop
clc
jae
xorb
repz
xchg
pop
dec
pop
and
lock
xor
inc
clc
clc
mov
xchg
cs
cmp
jge
gs
inc
loope
hlt
lahf
adc
push
jb
cs
mov
jns
jg
orl
push
or
outsb
mov
data16
mov
mov
call
enter
sbb
in
push
cmp
push
jmp
jl
mov
scas
xchg
lea
push
xchg
popf
xor
cltd
cmp
lret
in
iret
add
jecxz
test
push
xchg
dec
in
mov
mov
add
imul
daa
pop
push
add
push
js
pop
push
lods
jmp
popa
fstp
adc
ret
mov
add
lret
or
add
int3
fwait
and
mov
sbb
pop
xor
cli
and
add
add
xor
sbb
pop
outsl
push
dec
mov
jbe
aam
mov
leave
push
pushf
dec
mov
push
arpl
adc
mov
adc
lods
xchg
or
mov
adc
add
test
and
xlat
ljmp
lea
jge
push
mov
sbb
pushf
or
dec
pop
dec
push
movb
mov
lock
pop
sbb
shll
cmp
pop
lret
push
lock
cmp
fcomp
adc
or
jge
lock
das
mov
pop
lods
mov
push
xor
loopne
popa
mov
rolb
ss
ljmp
mov
lret
xor
jle
add
and
mov
stos
or
jmp
cmpl
mov
xor
push
inc
fistpll
sbb
inc
mov
sub
fs
pop
push
jne
mov
jae
in
or
mov
pop
xlat
jmp
mov
es
popa
inc
sbb
push
add
test
push
push
sub
popa
sbb
adc
cmp
je
loopne
pop
rcrl
adc
xlat
push
or
inc
xchg
inc
sub
jns
inc
sub
rolb
cmp
sub
sbb
imul
pop
jne
fdivrl
cmp
ss
push
iret
sub
js
sbb
add
inc
pop
push
enter
inc
push
inc
xlat
pop
xor
adc
aam
add
sub
jne
push
push
dec
cs
mov
inc
push
xchg
mov
int
pusha
cmp
push
in
lock
add
push
inc
push
dec
adcl
movsl
jne
or
lock
lret
clc
mov
inc
ds
gs
enter
pop
or
dec
adc
andl
aam
xchg
std
and
jecxz
and
ss
jl
mov
orb
leave
lock
test
repz
arpl
xchg
icebp
push
and
sti
aas
test
daa
rcrb
dec
cmp
imul
movsl
xor
push
in
rolb
out
imul
add
les
cmp
fistl
test
sti
les
adc
in
imul
add
mov
adc
ret
fmuls
xchg
jne
lret
sbb
mov
add
andb
clc
out
cmp
jne
lcall
xorl
add
jb
enter
test
repnz
nop
lock
enter
add
push
add
movsb
jns
std
rorl
addb
cmp
inc
adc
outsb
xchg
mov
cmp
mov
pop
clc
jl
leave
jo
cmpsl
xchg
xor
shlb
sbb
rcrb
loopne
shrb
or
aam
leave
loopne
repnz
inc
push
inc
push
fwait
cmp
orb
add
mov
les
dec
gs
add
enter
add
daa
pushf
xor
sbb
or
clc
repz
lcall
aam
loope
imul
inc
ret
sub
loope
movsb
mov
aam
pop
cmpsb
and
stos
xchg
stc
inc
mov
hlt
data16
pop
ljmp
pop
push
push
test
stc
cmc
xchg
mov
out
sub
fcomps
test
nop
into
das
adc
or
sub
pusha
mov
mov
dec
xchg
movsb
mov
mov
or
jecxz
add
jp
mov
popa
and
fwait
jmp
add
push
push
add
push
hlt
jge
adcl
or
jg
or
pop
pop
pop
jo
jno
jle
pop
scas
stc
pop
or
movsl
or
cmp
in
rcl
sub
add
data16
fcompl
mov
inc
in
dec
lcall
xchg
fwait
xchg
sbb
roll
aam
ret
fdivs
mov
xchg
fsubl
add
aad
mov
sarl
and
fcoms
rcrb
mov
inc
pop
sbb
call
fmuls
add
xchg
pop
lret
insl
xchg
or
daa
sbb
nopl
add
cmp
add
mov
cmp
jmp
push
pusha
mov
in
or
es
sbb
lods
dec
jne
mov
lahf
adc
push
or
pop
and
fbstp
push
dec
je
sub
sbb
inc
fsubrl
sbb
insl
rorb
mov
xor
mov
push
xor
mov
hlt
jmp
jmp
loopne
cmp
xchg
mov
add
jne
aaa
jno
dec
add
cltd
mov
adc
pop
mov
sub
dec
jb
push
adc
dec
inc
push
push
lods
or
xchg
mov
jo
inc
je
and
mov
cli
mov
add
bound
in
xor
jne
pop
pop
inc
jmp
adc
data16
dec
inc
inc
cmp
sbb
rol
pop
push
ret
xchg
in
cmp
mov
mov
cmc
jg
pusha
jae
mov
in
inc
sbb
xchg
jge
loop
data16
out
xchg
jmp
lock
cli
and
lea
push
rclb
pop
cmp
add
sti
arpl
xor
add
aam
in
xor
mov
mov
jl
push
inc
test
dec
push
and
mov
or
dec
add
or
aam
les
fwait
pop
mov
xchg
sbb
inc
and
pop
andl
dec
xchg
dec
mov
xchg
or
pop
adc
adc
lea
js
test
loop
pusha
pop
es
sbb
or
mov
ret
sub
cs
or
or
inc
mov
into
popa
adc
add
lea
sub
xchg
out
add
mov
cmp
adc
push
xor
lock
enter
filds
sub
cmp
push
clc
rorl
hlt
lock
xchg
ss
xor
pop
jb
push
in
cli
std
and
loopne
sub
push
or
xchg
xchg
lret
or
mov
push
sbb
fdivs
sahf
adc
add
pop
xor
mov
sbb
add
les
leave
xor
or
vpaddusb
fistpll
push
add
lret
je
outsb
ljmp
push
popa
leave
pop
data16
ljmp
mov
daa
loope
xchg
and
inc
imul
push
push
inc
aaa
add
mov
jbe
dec
in
ljmp
inc
mov
sar
add
loop
xchg
add
mov
mov
push
pop
aam
add
push
push
inc
mov
sbb
stc
cmp
push
inc
or
inc
mov
add
sub
add
dec
cmc
jbe
xor
inc
mov
cltd
sub
orb
cmpsl
test
aaa
xor
inc
inc
push
add
ds
adc
add
rolb
leave
ret
lock
or
jecxz
pusha
lea
mov
adc
push
xchg
pcmpgtb
and
lcall
nop
orl
or
push
adc
pop
cmp
jl
xor
lret
into
add
dec
pushf
hlt
mov
ja
sbb
sub
dec
push
loopne
push
fiadds
push
jl
fbld
out
shrl
pop
enterw
movsb
pop
sahf
loop
shrl
push
std
jnp
sub
push
pop
je
push
mov
stc
and
adc
js
sbb
ret
jmp
sub
or
xor
and
sti
or
cltd
jo
mov
je
or
jns
pop
sbb
repnz
push
jmp
push
sbb
je
mov
dec
sub
popa
jmp
int
stos
xor
cmp
push
jne
jl
cmp
mov
pop
insb
push
dec
push
jge
lret
xor
push
jno
dec
lea
shrl
jne
loope
sub
sbb
pop
sub
cmp
ds
bound
test
ljmp
arpl
inc
xor
adc
or
adc
or
adc
push
sbb
imul
idivb
add
movb
cmpb
push
jno
es
lea
insb
adc
je
push
adc
add
fs
stos
or
lock
push
clc
mov
and
or
aad
sub
push
mov
and
movsb
icebp
test
push
mov
aad
adc
push
adc
addr16
jg
adc
aas
cwtl
das
add
jle,pn
loopne
add
cmp
mov
aam
lock
aam
pop
stc
xor
xchg
mov
aam
cmpsb
jb
cwtl
pop
pop
jg
cmp
sub
cmpl
in
lock
mov
push
scas
xchg
and
pop
xor
pusha
test
out
popa
out
xchg
lods
les
insb
dec
in
jge
dec
inc
adc
push
inc
stos
adc
jb
push
mov
or
pop
adc
or
push
xor
push
cmp
aam
push
adc
jne
mov
mov
jmp
sbb
push
add
movsl
in
faddl
scas
push
mov
cmp
adc
jae
xchg
out
dec
mov
push
adc
aaa
lock
or
add
push
js
lods
xor
pop
pop
sbb
es
je
test
lret
add
or
sub
inc
rorb
cmp
pop
in
jnp
add
arpl
inc
xchg
or
push
xor
pop
dec
push
add
test
fsubr
add
or
cld
mov
mov
add
xor
aam
pop
dec
add
jle
adc
add
push
pusha
and
push
add
addb
stos
mov
or
das
cmpsb
shl
fmuls
cmc
mov
cltd
and
lods
mov
mov
js
or
mov
mov
mov
adc
fisubl
aaa
or
decl
push
fsubrs
mov
sub
cmp
shlb
and
sbb
test
mov
jb
add
xchg
mov
daa
jge
iret
rcr
pop
scas
dec
add
shlb
test
jne
mov
mov
sbb
dec
jecxz
imul
push
lea
call
sbb
fisttpll
mov
adc
inc
stos
dec
loope
mov
sbb
pop
fwait
fs
jns
fdivs
stos
jmp
or
movsb
dec
mov
scas
or
inc
rolb
mov
push
fs
insl
xchg
test
mov
popf
sti
cwtl
or
mov
adc
stos
in
fisubrl
sub
loope
and
mov
ss
mov
rcrb
test
add
add
push
out
mov
push
sbb
ret
jne
aad
push
mov
loope
fistpl
inc
adc
or
lret
add
mov
or
rcr
das
icebp
add
iret
jge
popf
xor
in
push
sbb
mov
cmp
pop
mov
mov
stos
loopne
mov
inc
adc
or
imul
test
mov
jne
and
mov
xchg
jmp
push
add
icebp
xor
ja
push
mov
ret
jno
ret
mov
lahf
scas
ret
adc
mov
add
pop
aam
xor
add
sub
mov
lods
and
into
xchg
in
jmp
adc
pop
xchg
insb
add
inc
jle
incl
mov
or
clc
and
jecxz
lret
push
out
ret
fidivl
sub
or
enter
add
fwait
int
adc
mov
fmuls
dec
or
jg
cmpl
popf
rolb
adc
outsb
loope
mov
pop
xchg
mov
fcompl
je
imul
add
inc
add
cmpsb
xchg
inc
popa
ret
cmpl
lahf
rorb
sbb
mov
sub
fwait
outsb
and
inc
and
jecxz
scas
ds
and
mov
jmp
mov
ljmp
mov
decl
adc
xchg
cmp
jl
jp
or
push
push
push
filds
mov
lods
rclb
lods
push
insb
loop
and
arpl
mov
mov
sbb
cli
lea
inc
jp
sbb
movsb
and
xlat
sbb
mov
in
mov
mov
loope
or
xchg
hlt
mov
or
das
movsb
imul
push
push
in
jecxz
shrb
push
pop
movl
push
dec
pop
jb
insb
add
lock
cmp
shlb
rcl
jecxz
mov
inc
movsl
ret
inc
dec
add
loopne
mov
aaa
inc
pop
mov
cwtl
sub
ja
push
pop
orl
adc
fimull
scas
sti
jb
push
push
pop
orb
xchg
cwtl
mov
lds
sbb
rolb
xor
lock
mov
add
mov
jb
and
mov
add
cld
mov
inc
or
xor
mov
sub
movsb
sub
out
push
inc
orl
inc
sbb
imul
mov
lcall
xor
jbe
js
add
pop
or
and
add
mov
or
shl
sbb
xchg
sub
test
mov
outsl
or
sbb
lea
jmp
and
adc
or
inc
ret
push
push
cmp
and
push
add
mov
xchg
pop
leave
jae
arpl
ror
lds
pop
dec
push
adc
popa
and
mov
loopne
cmp
inc
gs
jecxz
mov
inc
xor
sar
sbb
in
push
or
push
lcall
pop
jns
outsb
pusha
push
push
xor
or
loopne
sbbb
adc
nop
insl
push
sub
jno
or
cltd
adc
or
pop
adc
or
sbb
dec
sub
push
les
je
xor
add
fisubl
js
and
push
lret
ret
adcl
sarl
adc
xchg
pop
or
insb
jne
daa
in
xchg
and
pop
mov
mov
pop
push
xchg
or
xchg
push
test
xor
push
mov
add
add
push
xor
enter
fsubrs
cmc
out
dec
add
imul
je
pusha
push
add
adc
js
mov
mov
mov
mov
orl
jns
sub
nop
stos
adc
clc
js
mov
and
sub
lret
or
lock
jecxz
test
arpl
mov
mov
outsl
andb
test
sahf
lock
in
push
push
lret
dec
add
dec
iret
lods
dec
loopne
xchg
das
cmpb
inc
sbb
xor
scas
mov
adc
in
mov
push
in
iret
dec
mov
call
mov
pop
push
push
jmp
push
fsubrl
add
dec
aad
movsb
cmp
stos
xchg
cmp
dec
lock
and
call
add
test
dec
mov
mov
adc
ret
push
in
push
lea
inc
push
pushf
mov
adc
cs
inc
jmp
mov
int3
adc
loopne
and
loop
dec
out
and
jb
fdivrl
or
ret
sub
mov
cmpsl
inc
mov
mov
jge
ret
add
sbb
fsubrl
push
sub
inc
inc
fistl
fdivrs
mov
jge
mov
cmp
imul
add
out
adc
ret
out
xchg
out
and
nop
cld
dec
pop
cmp
stos
lea
add
mov
mov
jbe
dec
jmp
fsubs
xchg
adc
adc
test
or
or
or
cmp
shl
cmp
rcrb
jp
sbb
jl
xchg
pop
roll
add
push
push
fcom
sbb
insb
mov
xor
sarl
pop
lods
test
bound
gs
xchg
push
or
in
mov
xchg
les
push
push
xor
or
xor
repnz
aam
mov
dec
rorb
and
xchg
inc
in
adc
ss
stos
dec
or
xor
test
mov
jmp
or
inc
jecxz
movb
cmp
cld
or
and
cmp
cld
fisubrs
outsl
test
int
or
nop
fstpt
sub
lods
push
shll
xorl
add
shrb
xchg
mov
gs
js
mov
adc
ljmp
lods
cmpsb
mov
test
mov
gs
or
and
mov
test
addr16
mov
add
pop
movsl
in
in
daa
fdivs
push
sahf
mov
push
movzwl
xor
mov
addr16
or
pop
jns
pop
std
mov
movl
fucomip
test
mov
mov
mov
imul
or
ljmp
shl
and
push
or
push
shl
push
in
jg
pop
mov
mov
or
mov
mov
dec
nop
aas
dec
xor
push
fs
mov
enter
ss
mov
nop
mov
loopne
xor
and
jle
aam
push
sahf
lret
sbb
adc
in
adc
or
js
add
lret
dec
sbb
cmp
and
push
sbb
shlb
pop
repnz
in
and
enter
clc
push
add
enter
rcl
loope
xchg
mov
int3
inc
cmp
js
xor
mov
in
jne
popa
and
add
cmp
cs
in
inc
iret
mov
nop
repz
loope
rol
push
sbb
mov
sbb
movsb
scas
or
sarb
or
mov
mov
sti
mov
fsubrp
or
inc
xlat
or
jmp
mov
mov
faddl
cmpsb
inc
mov
mov
movsbl
cmp
sub
stos
xor
cmp
jb
jbe
push
paddb
popf
mov
push
push
mov
or
dec
xor
cmp
mov
dec
popa
inc
dec
roll
nop
hlt
inc
pop
and
shlb
int3
dec
push
loopne
pushw
sub
sub
sbb
pop
push
ss
inc
hlt
inc
add
jle
mov
push
loope
rolb
fldcw
dec
mov
xchg
test
dec
fcoml
jl
adc
and
cmp
add
mov
fwait
sub
scas
dec
insb
sub
adc
sbb
in
pop
outsl
mov
cmp
jmp
sbb
fcomps
adc
pop
push
shlb
dec
ja
or
inc
scas
adc
sbb
add
repnz
push
cwtl
hlt
call
in
in
add
push
pop
jae
in
or
or
jnp
or
jbe
jae
jae
jmp
or
por
jae
jae
jmp
adc
pop
adc
push
adc
dec
jae
jae
adc
dec
adc
aas
pop
jmp
jae
jae
sbb
xor
jmp
sbb
es
jae
sbb
and
pop
pop
jmp
subb
jae
jmp
and
adc
adc
mov
test
ret
add
rorl
orb
out
and
test
sti
lock
jecxz
repz
repz
sti
add
or
adc
and
repz
sub
cmp
repz
inc
dec
push
push
iret
repz
pop
pop
imul
js
addb
xchg
xchg
fwait
mov
pop
enter
add
and
or
or
push
movups
call
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
dec
add
movl
pusha
outsb
adc
icebp
jg
popf
dec
inc
orb
and
mov
mov
push
dec
sti
fstpt
xor
lret
imull
loopne
pop
mov
aam
test
in
out
add
pop
add
push
mov
push
sbbb
sbb
xor
or
cmp
lods
cmp
jb
inc
sti
or
cmp
adc
sub
dec
sub
lea
mov
fsubrl
add
lock
daa
lret
inc
test
hlt
pusha
cmp
mov
loop
shll
cmp
add
mov
insl
xchg
shll
mov
mov
jmp
xchg
pop
and
sbb
sbb
iret
mov
call
sub
loop
fcoml
cmp
mov
aam
mov
pop
mov
adc
cmp
je
dec
rclb
cmp
and
jmp
jecxz
mov
mov
dec
nop
inc
jge
mov
inc
mov
mov
add
push
push
xchg
add
xor
test
aaa
push
xchg
push
sbb
pop
push
push
adc
push
xchg
add
xor
push
mov
rol
mov
ror
push
shrl
stos
sti
shr
xor
pushf
sarl
repz
inc
jmp
incb
js
add
dec
adc
iret
or
insl
push
sub
fisttps
and
xor
add
add
div
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
sti
jg
data16
aam
cli
and
and
mov
push
rolb
leave
xor
or
add
fs
fcmovbe
lcall
mov
movsl
or
push
or
xlat
and
mov
into
add
add
dec
roll
call
jb
rcl
call
pusha
mov
push
xor
xchg
subl
sub
ljmp
rol
rcll
add
movsb
imul
fsub
in
test
add
cmpsb
in
aam
xor
dec
in
shl
in
sub
dec
fwait
push
cmp
data16
add
or
cmp
loopne
cwtl
mov
aaa
fadd
xor
call
rorb
add
call
enter
cmp
dec
shll
pop
cmp
aam
jl
pop
xor
mov
jl,pn
or
cmp
cmp
add
shlb
mov
test
and
call
xor
or
add
and
xor
pusha
xor
push
xchg
lock
and
push
mov
jb
mov
jge
push
ret
push
jo
ficoms
or
les
pushf
xor
or
filds
sbb
addl
jne
mov
pop
aaa
dec
jle
lea
lcall
insl
and
ficompl
aas
outsb
lret
push
clc
jl
push
and
add
shlb
and
cmp
xor
fs
call
test
mov
inc
aam
xchg
fisubrl
arpl
add
cli
and
xchg
mov
rcl
cmp
and
call
in
mov
add
cmp
ss
or
push
xor
inc
or
inc
or
cmpsb
sub
dec
loopne
or
loopne
call
or
or
imul
lcall
adc
add
sub
rorb
xor
jo
in
enter
or
add
dec
cmp
inc
int3
push
es
lcall
add
rcrb
sub
push
scas
push
add
or
and
scas
inc
pop
or
in
aam
data16
xchg
and
sub
pushf
mov
rorl
or
push
add
lds
push
adc
fsubl
push
imul
xor
mov
int3
pop
push
mov
dec
inc
mov
inc
push
movsl
mov
add
or
imul
lods
call
and
cmp
push
mov
push
push
shrb
les
dec
xor
out
pop
add
sub
mov
testb
call
lret
jb
imul
cld
lea
mov
pop
pop
mov
pop
xor
sar
arpl
push
int
orb
loop
incl
lods
movsb
cmc
jnp
rorb
or
or
in
clc
lea
test
insl
fidivl
stos
or
sub
pop
pop
sub
loopne
lea
jmp
arpl
lea
push
sub
xchg
out
data16
mov
ljmp
pop
fimull
pop
jne
pop
and
mov
jge
inc
imul
xchg
fidivrl
aaa
jbe
or
fs
sbbl
insl
cmpl
push
jae
push
pop
rolb
fldl
rep
fimuls
mov
loopne
or
mov
push
pop
fdivp
ror
or
jl
mov
hlt
push
shr
xchg
pop
pusha
test
fistps
sub
cmpsb
pop
push
cmp
inc
pushf
call
mov
insl
jg
loopne
sbb
movb
dec
js
ret
movl
test
mov
popa
enter
cmp
jbe
lods
add
sbbl
cmp
sub
jge
mov
pop
xchg
mov
sbb
xchg
clc
push
ds
in
fildl
mov
daa
lea
imul
cmp
ja
add
mov
or
jbe
mov
stos
mov
and
mov
sbb
lock
enter
sbb
add
adc
or
and
pop
in
inc
addl
xchg
and
cmp
mov
pusha
jbe
push
shrb
sti
rcrb
add
pop
mov
push
and
add
pop
pop
popf
and
push
mov
mov
inc
mov
shl
jno
loopne
inc
pop
stos
xchg
icebp
jecxz
popa
test
int
fstps
insl
outsb
je
fwait
push
mov
lock
pop
add
add
xchg
les
lock
insl
push
xchg
dec
in
or
add
mov
pusha
mov
xchg
xchg
pop
rcrl
fstps
sbb
add
sbb
mov
pop
xchg
jne
lretw
out
adc
jae
adc
adc
jmp
mov
xchg
pusha
mov
add
and
adc
push
cltd
mov
rorb
mov
mov
jbe
pop
movsb
nop
lret
xchg
ja
add
mov
sbb
sub
and
and
dec
xchg
mov
add
inc
jne
rorl
cmp
adc
pop
adcl
mov
icebp
mov
loope
cmp
jl
popl
sub
pop
xor
fcom
pop
xor
std
jle
fidivrl
xor
jbe
cli
es
lea
cmp
popa
sti
inc
or
jg
and
or
js
add
sub
or
or
jne
adc
inc
push
aad
lods
das
jp
or
xor
cmpb
stos
jbe
jle
outsl
or
icebp
jl
dec
pushf
sahf
cmp
push
js
sarb
xchg
mov
mov
pusha
and
push
dec
daa
lods
test
stos
inc
ret
jae
movzbl
adc
mov
and
add
inc
js
inc
das
mov
dec
jmp
dec
adc
push
aam
fcomps
add
ss
push
mov
popl
ret
mov
les
inc
and
inc
shll
sbb
sub
xchg
jo
lods
cmp
pop
hlt
lahf
cltd
ja
mov
cmp
test
loopne
sub
mov
sub
mov
clc
push
ret
dec
and
cwtl
inc
bound
xor
xchg
mov
pop
or
add
and
add
and
add
pop
or
outsl
fs
js
jne
adc
push
fsubs
mov
cmc
mulb
psubsb
pop
push
sub
aam
mov
mov
dec
sti
bound
adc
inc
cmpsl
mov
mov
xor
push
dec
dec
sbb
pop
and
popa
xor
and
fiaddl
add
xchg
add
add
fmuls
mov
mov
roll
bound
je
outsl
out
cld
xor
add
sbb
cltd
lock
enter
mov
rolb
or
or
les
adc
mov
add
mov
incb
sbb
add
dec
sub
enter
incl
pop
popa
and
pop
fstpt
dec
and
push
lods
add
jge
push
fsubrl
pop
ja
mov
add
ljmp
push
jmp
outsl
adc
jmp
jle
push
dec
pop
jne
ret
dec
pop
pop
test
idivb
and
fsubrs
data16
sub
je
push
pop
stos
mov
pop
pop
testl
mov
fstpt
arpl
fnstenv
push
sbb
lret
and
ds
push
sub
sbb
xchg
fwait
push
or
imul
mov
sbb
sub
mov
or
aas
or
inc
push
push
ds
push
push
adc
push
aam
mov
test
add
cmp
outsb
push
ret
inc
rcrb
push
repz
out
mov
lock
inc
call
hlt
xchg
inc
dec
inc
mov
shlb
adc
sub
cmp
push
cmp
dec
leave
dec
add
mov
xor
xor
rorb
sub
dec
xorl
dec
inc
dec
cli
push
xchg
sub
push
jno
push
stc
ret
lea
ss
fwait
dec
adc
scas
unpckhps
call
jnp
pop
mov
push
imul
dec
or
test
jae
aad
daa
lods
mov
sbb
sub
sbb
scas
xor
dec
inc
dec
cmp
imul
dec
stos
mov
push
cmp
and
mov
test
cmp
sbb
cmp
adc
mov
sub
imul
xor
shll
cmp
inc
cwtl
je
pop
inc
pop
inc
inc
rorl
pop
or
imul
sub
stc
push
pop
mov
and
loope
jo
add
adc
test
iret
add
cmp
fnstenv
add
lret
shll
ret
sub
dec
mov
pop
fnsave
shrl
push
mov
or
or
cltd
jae
clc
jo
cld
cmpl
push
cmpsl
mov
dec
adc
inc
and
loop
cwtl
lds
xchg
movsl
sahf
les
xorl
add
push
and
jb
and
push
xchg
es
adc
sbb
sbb
mov
data16
enter
adc
shlb
mov
lock
or
fld1
sub
mov
fimull
push
hlt
ss
cmp
push
jbe
xor
xchg
dec
sub
ljmp
ret
jb
cmpsl
in
je
mov
in
add
cmpl
adc
and
dec
sbb
lods
ja
adc
dec
cmp
scas
jae
add
xor
je
clc
ja
adc
ljmp
push
test
hlt
pop
scas
stos
roll
inc
ja
push
mov
ror
sbb
xchg
xorl
call
mov
dec
inc
mov
xor
jmp
mov
wbinvd
lcall
stc
adcl
and
adc
ds
lds
mov
xor
dec
sbb
xor
or
or
cmpsb
xchg
pop
into
mov
mov
push
xor
push
arpl
mov
xlat
lods
mov
dec
dec
ds
repnz
je
sti
sub
and
arpl
fsubs
imul
and
mov
xor
lcall
mov
ss
jns
dec
jnp
mov
push
inc
and
push
push
or
add
and
and
jg
mov
fldenv
jp
lcall
mov
and
push
and
scas
jb
test
rol
xor
add
rcrl
das
pop
pop
lea
nop
adc
add
and
loop
or
dec
add
xorb
jmp
dec
rcll
imul
and
dec
loop
rolb
pushf
mov
in
cld
mov
sbb
sbb
pop
add
pop
and
xor
fcmovne
leave
sbb
xor
int3
xor
movb
dec
jno
pop
data16
inc
push
cltd
or
out
mov
out
popf
pop
shrb
js
jle
jecxz
es
or
lea
pop
popf
insb
imul
or
mov
adc
push
xchg
adc
or
mov
or
and
cmpl
jne
xchg
mov
cmp
fstl
sti
push
dec
cmp
and
mov
addr16
fldl
and
sbb
fsubr
test
and
and
les
add
das
mov
dec
pop
cmp
je
cmp
pop
sbb
dec
bound
xchg
dec
cwtl
sub
dec
inc
leave
xor
jbe
sbb
jge
xchg
popf
mov
and
xchg
cwtl
int
test
fimull
dec
pushf
popl
mov
sbb
and
jle
sub
sbb
add
test
mov
or
aam
inc
fstpl
or
fisubrl
bound
stc
or
push
mov
pop
fidivrs
xor
push
stos
stc
inc
pop
sbb
xor
ret
sub
push
repnz
fwait
arpl
lods
sbb
mov
pop
mov
stos
or
mov
sbb
enter
and
push
loop
jp
mov
insl
push
addb
cs
je
or
mov
repnz
push
inc
pusha
cmp
pop
cmp
jo
fadds
push
push
or
mov
pushf
les
adc
mov
sbbb
mov
std
push
push
rorl
je
cmp
add
fwait
inc
out
sub
push
cmp
jge
mov
pop
adc
inc
ds
inc
lock
lea
icebp
push
aam
pop
js
or
loopne
nop
clc
add
lahf
shlb
sbb
clc
clc
cld
or
and
movl
and
add
xor
lret
add
push
and
out
or
mov
je
add
mov
dec
jne
mov
and
dec
or
mov
shr
sbb
or
lret
ljmp
xor
gs
and
mov
js
lock
mov
adc
outsl
cmpsb
adc
mov
pop
push
jnp
je
push
add
loop
dec
push
and
mov
dec
mov
add
call
sub
in
add
push
add
clc
push
cmp
jne
sbb
adc
mov
pushf
cmp
dec
xor
jnp
add
xor
add
sub
testb
xor
inc
adc
inc
jmp
sbb
lds
sbb
ret
cltd
idiv
inc
inc
imul
addb
ljmp
add
mov
xchg
add
xchg
fwait
addb
push
add
or
cmp
add
mov
cmp
or
mov
adc
push
push
cmp
cmp
cmp
je
cmpsl
inc
xchg
imul
inc
test
jmp
daa
pop
rol
inc
test
push
cmp
shlb
les
scas
inc
or
pop
inc
sub
ljmp
cmp
jae
call
lea
jmp
mov
stc
lcall
arpl
lock
adc
cmp
je
cmp
push
cmp
mov
add
into
and
jb
push
rol
or
inc
bound
mov
dec
adc
das
mov
push
mov
add
fnstcw
movaps
dec
add
popl
loopne
loop
cmp
mov
push
and
sbb
loopne
adc
sub
push
push
insb
dec
add
mov
sbb
call
jl
push
ficompl
or
jg
mov
jmp
and
jb
xor
inc
push
and
mov
in
mov
add
shl
dec
mov
sub
mov
cltd
movsb
mov
out
mov
inc
ss
jg
stc
lret
int
imul
and
adc
cli
outsb
inc
sub
loop
push
rcrl
add
mov
aad
push
es
out
mov
jle
and
add
pushl
insl
push
sarl
sub
inc
cmp
pusha
mov
jg
in
cli
popa
mov
imul
mov
inc
mov
roll
daa
mov
lcall
addr16
dec
mov
jmp
add
mov
ljmp
pop
das
outsl
xchg
inc
movsb
xor
xor
fsubs
inc
cmpb
arpl
pop
pusha
addl
filds
pop
call
out
jmp
xor
mov
les
xor
xor
mov
push
add
pop
dec
add
mov
mov
das
in
ja
pop
ucomiss
jg
push
shrb
dec
cmp
cmp
out
adc
xor
cli
and
and
fwait
mov
cmp
in
je
roll
cmpsb
pcmpeqb
or
and
mov
mov
push
clc
ja
mov
arpl
hlt
add
or
or
jne
mov
mov
sti
imul
faddl
packuswb
imul
je
xor
push
sbb
sub
or
rcrl
shr
xchg
mov
addb
adc
dec
xlat
ret
in
test
sbb
subl
and
push
mov
imul
in
int3
mov
or
dec
imul
cwtl
xchg
mov
test
mov
js
or
sbb
push
fucomip
pop
js
lock
sub
jge
jne
push
add
pop
sub
or
push
sbb
pop
imul
adc
mov
movsl
push
sbb
inc
shlb
je
jo
les
sub
sub
pop
data16
popf
popf
shrb
and
mov
rorb
adc
test
jp
pop
inc
xor
push
adc
data16
or
mov
rolb
mov
xchg
fnsave
mov
xor
mov
mov
adc
es
xchg
subb
push
mov
sbb
jl
popa
mov
push
pusha
pop
sarb
enter
daa
test
rcrb
pop
xchg
mov
push
movb
or
jo
xor
std
dec
imul
inc
incl
cmp
xadd
or
dec
cmp
leave
or
xor
imul
inc
inc
xorps
and
xor
pop
stc
sbb
adc
nop
jnp
xor
add
inc
ds
cmp
dec
ret
popa
xchg
outsb
mov
push
push
popf
mov
movl
or
push
je
lcall
sub
dec
adc
mov
lea
push
outsl
pushf
sub
or
and
inc
cwtl
jmp
jmp
push
and
loopne
inc
mov
add
cmpb
jne
mov
fincstp
mov
sub
jnp
pop
and
sbb
data16
imul
or
dec
ret
sbb
and
inc
popf
notb
add
lods
sub
lcall
mov
es
sub
dec
aad
cmp
dec
push
xchg
inc
aam
push
xchg
mov
es
push
ja
lret
rolb
cmp
inc
xor
inc
sub
pop
sbb
dec
pop
sbb
ja
int3
pusha
add
pop
repnz
jp
shlb
adc
jbe
mov
pop
adc
call
shll
test
or
jmp
or
mov
mov
mov
dec
dec
jbe
push
xchg
inc
cmp
jmp
pop
push
xchg
sub
mov
lcall
xchg
divb
ret
inc
insb
je,pt
inc
add
and
loopne
xchg
shrb
mov
pop
dec
mov
inc
mov
dec
and
pop
cmp
test
cmp
or
leave
dec
out
xor
add
std
lock
clc
push
mov
adc
jbe
adc
cmp
cmp
insb
sarb
addr16
cmp
shll
aad
push
jo
lock
lock
or
sbb
das
aam
in
shlb
adc
xchg
pop
mov
js
inc
mov
loopne
inc
xor
cli
xchg
sub
add
ror
jne
arpl
inc
push
cmp
rcl
mov
addr16
lahf
and
in
pop
and
outsb
test
sbbb
mov
add
pop
inc
or
addr16
aam
imul
leave
add
fcmovb
lret
sahf
gs
sbb
mov
push
jae
cmp
and
xor
in
sbb
test
xor
call
jmp
push
dec
xor
xor
mov
adc
dec
ret
xlat
aam
and
test
sahf
popa
lea
push
push
or
add
mov
adc
hlt
sub
testl
jae
cmp
inc
ljmp
mov
mov
pop
arpl
push
xor
jne
and
lea
and
pop
mov
out
inc
rolb
arpl
rclb
or
push
dec
cld
minps
dec
add
jmp
cmp
std
lcall
push
inc
add
adcl
jg
fcoml
test
mov
dec
sbb
sub
add
sbb
pusha
js
daa
movsb
mov
pusha
and
pop
inc
movq
push
jecxz
add
cmpl
or
jmp
push
adc
mov
or
sbb
xor
xchg
mov
push
mov
ljmp
jne
fimuls
push
add
jnp
xchg
add
or
in
push
mov
add
add
sbb
cli
iret
test
out
add
xorl
fcomps
inc
stc
cmp
out
sbb
inc
fsts
sbb
or
pop
xor
or
and
movsl
add
or
add
push
bound
jg
fldenv
jns
movsl
xor
loop
inc
dec
sbb
jecxz
mov
data16
jp,pt
ror
leave
mov
pusha
sbb
fcmovne
je
mov
lods
add
enter
pop
jne
cmp
sbb
and
cltd
pop
sbb
pop
push
xchg
adc
test
mov
sbbb
push
rcl
xor
cs
pop
sahf
stos
push
lea
sbb
in
shlb
or
inc
mov
mov
cmp
ret
addr16
loope
add
xchg
mov
pop
push
loopne
jle
dec
inc
ss
dec
push
adc
cmc
in
sbb
fdivl
cmc
jno
or
dec
in
lods
invlpg
and
or
cmp
insb
into
subl
rol
pop
dec
mov
mov
lock
gs
cmp
xor
je
dec
mov
mov
push
loopne
sbb
sub
fcmovnbe
xor
xor
add
mov
sbb
lea
pusha
and
jns
in
adc
xor
pop
inc
sahf
or
xor
lock
pop
ret
push
loop
push
jp
ret
bound
mov
sub
mov
imul
push
fmuls
cmp
xchg
add
and
ss
enter
fsubs
js
test
pop
or
dec
fs
insb
repz
xchg
cmpsb
or
movsb
push
or
aaa
pop
out
mov
pop
call
mov
int
in
outsb
popf
cwtl
lock
sub
adc
xor
cmp
test
push
cli
inc
push
and
adc
sbb
adc
or
daa
movb
movl
add
or
mov
xor
and
and
enter
add
shll
adc
or
sbb
pushf
push
test
mov
xlat
pop
add
int3
xchg
pop
push
push
add
mov
sub
aam
loopne
adc
add
push
rcr
enter
push
test
or
dec
sub
fsubl
pusha
xchg
ss
cmp
call
xchg
push
fadds
fadd
and
pop
pop
js
dec
dec
sbb
or
push
arpl
inc
mov
sub
and
sub
or
std
out
mov
lds
pushf
mov
rcll
fwait
test
fbstp
sub
and
fbstp
push
xor
mov
jecxz
mov
es
cwtl
cmp
add
ss
cmpsl
dec
xor
cmpl
sbb
mov
pop
sub
and
test
jle
mov
jmp
cs
pop
sub
dec
test
jmp
inc
inc
call
or
adc
mov
fmuls
jo
inc
and
inc
xchg
imul
incb
ds
das
pop
push
ret
outsl
cltd
les
nop
jge
jecxz
pusha
mov
and
adc
jbe
jne
popa
dec
rorb
and
or
and
pop
add
leave
lds
test
fistpl
jb
bound
push
pop
nop
xchg
inc
ficompl
pusha
add
insb
jl
lea
inc
xor
push
or
popa
stos
push
lret
fistl
or
jbe
and
push
cwtl
or
ds
je
adc
movb
imul
out
jmp
adc
dec
insb
mov
movl
outsl
jo
dec
cmpl
sti
or
or
and
cmp
sub
shlb
mov
add
ja
repz
cmp
mov
fs
out
test
add
inc
or
or
dec
sub
xchg
into
js,pt
push
cli
es
pop
dec
adc
push
pop
pop
mov
adc
xchg
mov
inc
mov
sbb
inc
clc
inc
cmpsl
jo
cld
out
daa
cld
cmp
rcll
movsb
pop
and
aam
or
sbb
mov
add
and
xor
adc
loopne
mov
sbb
loopne,pt
pop
pop
into
inc
jne
pop
push
inc
add
scas
jae
mov
pop
or
sbb
or
sub
rcll
mov
out
jne,pt
xchg
xor
sub
mov
mov
jmp
mov
jecxz
lea
test
or
hlt
lret
dec
pop
dec
mov
dec
xlat
adc
fwait
pop
sbb
insb
adc
sbb
inc
xor
mov
jmp
dec
mov
add
mov
testb
jbe
and
mov
cmp
dec
loopne
ret
loopne
mov
js
push
adc
aaa
je
inc
sub
loopne
jmp
and
mov
arpl
cmpsb
mov
movsl
push
call
dec
sub
and
jl
jp
cld
or
rcrb
cmp
add
xor
push
repz
out
pop
xchg
scas
adc
pop
inc
add
jnp
cmpl
push
and
scas
jae
cmp
pop
xor
fisttpl
xchg
or
adc
orb
push
hlt
sub
fcoml
push
and
adc
pop
add
ret
gs
xchg
loopne
push
pop
mov
inc
rolb
call
or
and
cwtl
inc
shlb
mov
ss
dec
and
pop
ljmp
imul
shr
add
leave
data16
mov
dec
xor
adc
mov
and
cmp
jb
sbb
push
inc
add
fisttps
jmp
popa
adc
fcmovb
jo
pop
mov
xchg
repnz
aaa
cltd
sub
addr16
push
sbb
sti
jb
adc
sub
insb
aam
jmp
jae
cmp
ja
pop
adc
xchg
scas
shlb
cwtl
insb
pushf
loope
lret
or
sbb
lods
xchg
xor
fdivl
bound
aaa
lea
lods
movsl
and
cmp
jnp
clc
pop
loop
adc
or
cli
jmp
inc
ja
push
js
and
add
lds
mov
testb
lcall
adc
cmp
inc
movsl
mov
lock
dec
les
mov
mov
loopne
push
loopne
cmp
insl
loopne
faddl
testl
insb
gs
addr16
and
push
xchg
push
push
cwtl
subb
inc
add
add
push
adc
dec
xchg
adc
xchg
inc
mov
xor
shrl
pop
cmp
inc
dec
test
inc
push
mov
fs
repz
pusha
arpl
adc
imul
or
in
xchg
mov
fiaddl
xor
arpl
sbb
push
and
fcoms
mov
ret
or
cmp
cmpsb
add
or
andb
fcmovbe
aas
pop
cmp
add
cs
in
or
nop
shr
add
adc
sub
mov
ja
inc
jmp
es
lods
gs
les
push
and
imul
cmpsb
mov
in
daa
or
sbb
popa
inc
pop
xorl
sar
dec
ret
insl
xor
pop
jae
sbb
mov
inc
push
mov
add
mov
cld
sbb
cmpb
sub
xchg
and
in
jb
and
outsb
loopne
inc
jno
push
or
dec
xchg
subl
ret
les
popf
pop
jb
cmp
repnz
enter
sub
je
pop
add
jbe
mov
pop
out
mov
pop
in
pop
xchg
push
push
push
mov
test
int
or
push
aaa
ds
jg
cmc
xchg
cmc
pop
dec
sbb
or
mov
out
dec
lret
inc
mov
pop
mov
cmp
movsb
mov
and
stos
imul
xchg
push
and
popa
dec
xor
loopne
push
adc
in
mov
inc
mov
mov
or
sub
hlt
and
jmp
push
addb
add
lds
mov
sarb
cmp
jbe
push
popf
in
add
push
jl
jmp
das
js
pop
adc
lret
movl
xlat
add
inc
jae
inc
inc
or
or
push
mov
test
inc
cwtl
sbbl
push
inc
ret
daa
inc
and
inc
inc
xchg
mov
xor
test
lcall
js
or
or
or
dec
jo
test
mov
xchg
or
adc
sbb
sub
scas
lods
inc
mov
xlat
sub
sub
inc
jo
ljmp
inc
dec
out
push
and
cmp
rorb
loopne
jecxz
jno
mov
in
or
push
bound
xor
data16
xchg
xorb
push
inc
pop
andb
imul
dec
shll
mov
inc
je
cmp
jne
push
mov
out
mov
mov
lret
jne
mov
ds
cmp
push
in
js
in
dec
mov
inc
push
xor
pop
testl
inc
or
inc
sub
ljmp
xchg
jmp
lods
push
dec
or
adc
inc
popf
fidivs
cli
push
adc
popf
dec
jo
sub
or
lea
nop
add
mov
in
mov
xchg
cmpb
mov
andl
into
mov
fisubl
in
fistl
jo
orl
or
add
or
push
movsb
pop
push
adc
jecxz
and
jbe
lahf
xchg
cmp
push
shlb
adc
sub
shrl
or
fidivl
bound
sahf
add
adcl
das
pushf
data16
mov
test
dec
jle
int3
add
rcr
and
add
imul
or
or
push
cmpl
add
cmp
jb
neg
les
sbb
mov
mov
jne
hlt
sarl
add
or
xchg
fsincos
aaa
and
push
rep
mov
dec
ljmp
ret
or
insb
push
icebp
dec
inc
add
shrb
cltd
mov
outsb
mov
sbb
daa
rorl
or
ja
inc
push
push
jne
sub
rep
lea
inc
xor
test
out
mov
aaa
jle
or
add
pop
scas
adc
mov
outsb
aaa
adc
pop
push
pop
and
sbbb
stos
js
mov
fnstcw
xor
and
ljmp
fs
pusha
jmp
xlat
mov
movapd
das
mov
out
clc
jae
xor
jle
xor
cli
shlb
lret
je
cmp
jge
push
jge
repz
or
jg
ljmp
adc
jnp
mov
sub
aam
ret
or
js
je
clc
adc
sbb
fisubrs
ret
mov
lock
mov
mov
shl
pop
enter
scas
int
add
sbb
dec
sahf
repnz
sbb
mov
pushf
push
mov
leave
iret
into
mov
or
movsb
and
std
xchg
add
rolb
pop
add
mov
mov
je
mov
jb
test
mov
lret
mov
lcall
xchg
rol
std
add
cwtl
sbb
rolb
and
mov
push
and
ficoml
dec
pusha
sti
push
dec
subb
add
cmpsl
adc
jg
jb
sbb
cmpsb
add
pop
std
mov
push
sub
shrb
lock
ja
mov
aas
lea
je
adc
push
jne
inc
cmpb
out
addb
fiaddl
pop
jo
mov
inc
inc
into
pushf
and
loope
adc
and
or
mov
cmp
ljmp
push
gs
in
add
into
clc
jmp
mov
sbb
dec
xor
outsb
xchg
mov
dec
xor
pi2fw
add
or
in
fisttpl
leave
mov
dec
bound
adc
mov
mov
dec
dec
jo
jno
adc
xchg
adc
push
fstpl
cmpb
jns
sbbb
aad
jmp
sbb
inc
push
test
inc
aaa
icebp
mov
pushf
fsubs
push
sbb
movb
dec
cmp
sbb
pushf
pop
addr16
sbb
sbb
sbb
sub
xor
sbb
call
test
jb
rcrb
dec
iret
movl
pop
out
mov
xchg
dec
incl
push
frstor
pop
and
jp
cmp
jmp
scas
fwait
add
pand
out
pop
lods
fwait
inc
testb
or
divl
orl
fwait
jmp
push
jb
push
xor
aam
mov
lret
jle
sbb
out
int3
divl
or
scas
pusha
inc
adc
add
xchg
sub
dec
sbb
inc
int3
mov
sbb
clc
sahf
inc
mov
push
add
je
push
or
lock
sub
fdivrl
bound
inc
sub
mov
or
pushf
test
push
pop
dec
inc
mov
dec
jb
push
push
rolb
call
out
lretw
pop
add
mov
je
pop
sarb
and
ret
add
je
jae
sbb
lods
enter
dec
and
pop
out
clc
lods
push
cmp
jns
adc
pop
cmp
add
loopne
jmp
xor
loop
pop
enter
mov
mov
dec
add
rcrb
mov
loopne
movsb
adc
pop
cwtl
add
imul
paddsb
inc
scas
icebp
pop
inc
inc
mov
xor
rolb
out
jne
insl
cmp
add
aad
sbb
icebp
outsb
loop
and
cmp
imul
add
testb
je
inc
mov
cmp
or
testb
es
loope
or
cmp
jne
aaa
aam
les
jb
xor
mov
mov
jne
inc
aaa
push
lds
inc
xchg
fcomps
mov
push
loope
and
je
push
mov
fs
pop
mov
mov
inc
stos
inc
xchg
jge
mov
add
cmp
sbb
and
or
jl
cmp
and
add
pop
jne
call
movsl
test
cld
jg
push
cmp
jb
rep
jmp
cmp
xlat
dec
mov
mov
add
test
lea
sahf
sti
ficoms
or
mov
shrl
pop
sub
data16
or
lods
adc
enter
lea
dec
add
dec
cmpsb
nop
inc
xor
fiadds
mov
or
stc
cmp
repz
sbb
or
cld
gs
jmp
in
inc
in
call
sahf
in
in
lock
hlt
or
clc
cld
popa
clc
and
loopne
fs
add
sbb
jns
cmp
pop
push
fs
imul
xchg
xor
add
jno
fsubs
push
lea
jl
cld
mov
and
std
cld
out
fsubl
push
neg
adc
mov
enter
pop
nop
lock
movups
fiaddl
jl
pop
push
fldcw
out
add
lret
mov
push
out
push
add
outsb
in
xchg
mov
xor
insl
out
mov
jns
fwait
cwtl
mov
or
push
mov
out
mov
sbb
sahf
out
sbb
sbb
out
sahf
out
adc
or
jns
or
inc
xchg
lods
clc
fsubrp
or
push
add
sbb
sub
add
push
inc
pusha
mov
daa
ja
xchg
je
cltd
push
jl
sbb
stos
jae
adc
das
jmp
imul
add
je
sahf
or
jno
jg
sbb
cmp
jae
sub
stos
test
call
xor
cmp
mov
sub
push
mov
or
sbb
dec
iret
sbbb
xor
push
cltd
adc
loopne
subps
cmp
bound
and
cmp
loop
mov
pop
fists
daa
ret
xor
or
iret
adc
mov
cmp
xor
lds
inc
test
enter
cmp
mov
add
mov
cmp
fbld
pop
sub
push
sub
test
mov
jbe,pn
push
btc
mov
cmp
and
or
mov
dec
adc
cltd
pop
lret
sbb
cmp
fs
or
js
loope
pop
fisttpl
jle
inc
sbb
mov
popa
mov
sub
push
dec
push
jbe
sub
pop
mov
jle
cmp
pushf
mov
cmp
pop
push
push
cmp
add
jmp
in
mov
cmp
jne
push
adc
or
add
mov
adc
sbb
and
add
shll
cmp
clc
cmp
lods
ds
inc
test
xchg
push
push
add
inc
movsb
es
and
cs
xor
push
jne
cmp
addr16
hlt
dec
pop
pusha
inc
out
or
xor
mov
cmp
push
inc
pop
ljmp
adc
fnsave
mov
rorl
loop
mov
call
dec
and
fcoms
iret
shrb
pop
mov
adc
pop
movb
lret
loopne
xor
aas
dec
jns
xchg
xlat
pop
mov
shlb
adc
and
fbld
or
fnsave
or
loope
pop
xor
inc
fdivl
add
shll
shlb
xchg
inc
daa
lock
loope
cmp
pop
mov
lea
mov
in
xor
mov
clc
push
push
and
out
jb
add
mov
mov
enter
mov
sub
call
out
xlat
adc
add
pop
lea
sbbb
add
jg
pop
inc
shll
loopne
js
push
and
pop
ljmp
fwait
mov
jmp
push
sub
loopne
dec
inc
out
jl
inc
cmp
jecxz
pop
dec
or
popf
icebp
lds
or
pop
call
sub
mov
adc
push
cs
mov
mov
aaa
pop
sbb
add
push
xchg
or
test
inc
fcoms
sub
fnstsw
sbb
mov
or
mov
adc
sbb
jp
orl
fadds
lock
sbb
cld
jb
jae
inc
ljmp
xor
add
and
and
clc
es
add
sbb
jmp
lods
mov
jo
pop
loopne
adc
jmp
test
jp
mov
clc
cmp
xorl
ja
ret
jbe
inc
in
add
xor
add
and
pushf
pop
or
and
add
imul
pop
es
aam
test
out
pop
pop
or
mov
cmp
add
rcrb
add
or
cmpb
pop
push
rolb
mov
add
inc
xchg
cmp
add
cs
add
push
sbb
add
loopne
pusha
scas
pop
and
xchg
push
adc
hlt
or
jb
jp
push
pop
add
pusha
sbb
xchg
roll
movsl
add
sbb
add
or
insb
sbb
xor
inc
dec
push
iret
rep
fnop
inc
sbb
test
shl
mov
cmp
ret
cwtl
shll
or
mov
cld
xorb
dec
in
inc
cmovae
jno
out
shlb
enter
or
rclb
pusha
mov
inc
es
loopne
frstor
rol
mov
aam
ret
ds
iret
repnz
add
adc
or
js
daa
dec
jne
mov
xchg
jmp
ds
icebp
inc
sub
adc
dec
push
push
ret
dec
jne
mov
fadds
adc
loope
sbb
push
orb
mov
pusha
sti
enter
adc
stos
movsl
std
adc
bound
ret
rolb
cld
push
outsb
into
add
ljmp
sbb
push
cmp
jne
mov
rcr
mov
jne
es
pop
int
int
and
adc
or
mov
jne
add
jb
jmp
push
inc
incl
dec
into
repz
cmp
inc
div
sub
xor
cld
cld
jmp
fldt
adc
in
adc
adc
inc
inc
inc
test
xchg
push
out
pop
mov
pop
mov
repnz
cli
adc
and
push
adc
add
inc
mov
out
dec
subb
dec
sub
and
ljmp
or
pop
inc
loopne
int
xor
or
movl
xor
and
add
and
or
inc
push
or
and
movsb
xchg
mov
pop
orl
in
or
dec
fs
gs
int3
ss
push
ret
mov
pop
add
xlat
push
mov
and
dec
jnp
and
jg
sub
mov
je
mov
rorb
cmp
jg
add
inc
sub
add
scas
cltd
les
je
decl
pinsrw
push
push
push
pushf
mov
mov
call
inc
mov
out
movsb
or
dec
fs
loope
sub
inc
dec
add
lea
pop
mov
inc
push
add
mov
fwait
jmp
inc
mov
pop
mov
mov
sub
and
pop
mov
mov
imul
or
dec
mov
add
mov
add
push
shlb
ficoms
aas
mov
push
rcrb
call
popa
xchg
out
sbb
push
mov
pushf
in
hlt
mov
or
pop
jecxz
sbb
pop
push
insb
adc
xchg
or
adc
add
sub
or
movsb
sbb
fdivs
outsl
sub
ja
add
not
and
sub
shrb
outsb
cmp
or
imull
sbb
inc
clc
sbb
cmp
xorb
mov
lahf
lock
xchg
inc
add
inc
sub
int3
cwtl
cmp
ja
jne
lcall
push
lcall
xchg
jmp
stc
and
mov
xchg
clc
mov
mov
lea
neg
mov
sbb
clc
neg
inc
cli
or
add
jmp
or
mov
inc
inc
push
int
jge
xchg
loope
sbb
scas
cld
fwait
jmp
mov
add
mov
inc
cmp
jb
add
jae
mov
dec
rolb
inc
mov
lods
mov
or
ret
push
jb
or
pop
testb
cld
into
shl
xlat
adc
add
jmp
lcall
jmp
fadds
outsb
outsl
andb
mov
mov
into
and
xor
dec
stc
and
xor
add
iret
xor
jo
and
ljmp
add
out
jne
or
insl
ret
inc
cld
jl
rolb
pop
ss
cmp
je
cmpsl
add
or
add
jns
adc
xchg
pop
movsb
push
imul
std
cld
sbbl
add
les
fidivl
and
out
xor
lock
js
jl
in
mov
call
inc
or
jl
and
lret
aaa
dec
xchg
adc
add
pusha
es
xor
sbb
inc
arpl
add
pop
mov
inc
jmp
cmp
mov
add
add
sub
or
and
stos
mov
adc
cmp
cld
push
xor
popf
push
in
adc
hlt
js
or
mov
adc
in
jne
int3
cmpsl
mov
add
mov
sbb
sbb
lods
adc
mov
test
push
mov
sub
mov
and
je
lret
sbb
push
incb
je
lea
push
sub
shrb
lock
or
cmp
cwtl
sub
add
and
push
mov
sbb
rclb
mov
adc
shl
cld
std
mov
sbb
adc
lds
xchg
sbb
mov
es
xorl
add
subb
jmp
adc
in
ret
push
mov
mov
scas
cmp
adc
xor
jne
test
shl
or
or
inc
mov
dec
jne
fs
add
add
rorb
adc
mov
addb
movsb
aas
es
mov
mov
add
jp
push
popa
push
inc
pop
push
movsb
adc
orl
cmp
add
add
es
dec
pop
mov
call
icebp
sbb
cmpb
adc
notl
pop
xor
adc
ljmp
jne
jbe
add
imul
jno
les
nop
mov
adc
adc
icebp
lea
push
adc
in
mov
js
pop
dec
ss
adc
repnz
enter
inc
jle
xor
mov
mov
mov
mov
imul
and
inc
je
sti
sub
push
pushf
xor
pop
adc
mov
minps
sub
jne
or
pop
fildl
jno
lds
repz
xlat
movsb
mov
mov
cmp
push
dec
inc
enter
popa
xorb
or
push
aaa
in
in
inc
stos
xchg
xchg
push
int3
mov
and
sub
dec
ja
or
out
jmp
mov
test
jbe
push
pop
cli
mov
add
cld
add
mov
jo
dec
aam
stos
push
or
pop
pop
jp
cs
cmp
nop
clc
in
inc
jb
hlt
xchg
insl
movsl
scas
nop
inc
push
inc
jecxz
inc
pop
test
cltd
sub
add
call
add
fdiv
dec
cmp
repnz
mov
inc
shlb
add
daa
fidivs
fcomps
push
clc
rcrb
cmp
or
out
inc
xor
gs
rcrb
cmp
adc
aam
stos
add
push
push
clc
ljmp
sbb
insb
push
dec
loop
or
add
sbb
dec
jle
mov
les
pop
jp
in
ja
btr
outsb
mov
and
push
push
xchg
pusha
dec
jns
add
adcl
dec
shrb
outsb
inc
les
jmp
movl
outsl
int
loopne
jne
dec
clc
in
push
fmull
je
push
insb
push
data16
pop
mov
cmp
pop
addl
jle
dec
xor
or
jne
pop
shrb
in
jo
pcmpeqd
hlt
push
mov
idiv
decl
mov
stos
mov
add
pop
stos
push
jne
and
popa
push
mov
pusha
add
xor
adc
rcll
xor
shrl
sub
ficoml
dec
loopne
dec
addr16
xchg
cmp
push
imul
mov
daa
xchg
mov
inc
in
push
loop
mov
in
add
mov
outsb
loop
xor
push
in
sbb
sub
jle
adc
or
repnz
sahf
out
hlt
add
or
inc
ficoms
test
mov
ret
cli
xchg
loopne
mov
int
lock
rolb
jecxz
add
call
stos
mov
fists
cmpsl
sub
mov
and
sbb
adc
xor
test
xlat
jecxz
cmp
cmp
repnz
aaa
sbb
pushf
iret
inc
adc
push
push
sbb
pop
inc
xor
idiv
adc
setge
add
subl
adc
in
sbb
dec
sbb
popa
dec
ret
hlt
call
sti
aam
jmp
dec
je
add
or
jp
cli
dec
jne
push
pop
jae
push
or
imul
insl
sbb
add
jmp
sub
push
lea
push
cltd
fdivs
or
adc
cmp
push
icebp
fbld
push
ljmp
test
adc
mov
idiv
push
add
cmp
cmp
xchg
in
push
ds
jne
push
jb
addr16
add
dec
orb
mov
por
jmp
xchg
test
adc
cmp
and
sbb
add
cmovp
pop
jns
mov
or
jo
inc
adc
imulb
add
pop
cld
push
dec
jmp
xchg
jbe
orl
leave
add
ja
mov
jmp
rorb
add
dec
jno
jae
push
mov
sub
movsl
push
mov
pmuludq
mov
loopne
sub
push
mov
push
fmuls
inc
push
adc
enter
rol
cmp
sahf
jae
sub
or
or
add
movl
sub
jl
adc
push
sbb
pop
scas
mov
loope
mov
out
jo
ss
cli
xor
lea
sub
fmuls
mov
sbb
mov
add
adc
imul
dec
fstl
ret
rcr
test
adc
clc
shrb
je
or
dec
and
sbb
shl
sti
repz
add
jle
fldl
push
pusha
ss
xor
rorb
jnp
xchg
and
dec
js
sbb
enter
addr16
sbb
loopne
xchg
push
pop
int
add
fs
mov
decl
das
scas
pushl
shl
or
push
add
lcall
pop
jbe
lcall
dec
push
pop
sub
adc
xorb
jge
hlt
cmp
push
dec
push
xor
sub
outsl
mov
jo
xrstor
into
cmp
lret
push
push
add
imul
jmp
inc
lods
push
test
pushf
movsl
stos
sbb
xorb
or
cmp
jecxz
mov
rcr
xchg
cwtl
loopne
add
push
shll
pop
push
push
mov
add
inc
cmp
sti
cmp
adc
stc
xchg
clc
push
mov
stc
mov
sub
cs
cmc
mov
notb
imul
add
sbb
jge
sub
sub
pop
adc
in
cmpsl
je
cmp
arpl
daa
das
adc
sbb
push
subb
cmp
outsb
test
jmp
dec
or
mov
cltd
pop
inc
mov
lds
adc
out
imul
inc
or
clc
sbb
rcrb
mov
xor
push
ljmp
insl
push
popf
add
adc
push
ret
shll
push
mov
and
jg
add
xchg
rol
add
stos
xor
mov
imul
mov
lret
inc
dec
mov
jo
inc
cmp
fiaddl
stos
adc
test
pushf
out
cmc
shr
adc
in
fadd
and
or
dec
cli
push
orb
pushl
lea
lret
mov
mov
mov
fs
cwtl
mov
push
push
insb
xorb
stos
xchg
cmp
cltd
xchg
jnp
mov
inc
sbb
cmp
adc
sbb
in
test
sti
ljmp
pop
movsb
adc
stc
cmpsb
mov
movsb
sbb
inc
sbb
mov
sub
outsl
in
pop
cmpsb
rolb
pop
mov
sbbb
movsb
jb
jge
call
cmp
and
les
jp
adc
imul
dec
cmp
lahf
push
and
jmp
adcb
lret
lcall
jbe
adc
insb
xchg
ficoms
subb
dec
cld
jmp
sbbb
out
mov
mov
sub
and
inc
push
je
fs
loopne
mov
sbb
add
xchg
sbbl
out
lea
cmpb
mov
dec
dec
call
or
inc
push
lock
sbb
adc
popa
daa
insl
loope
jmp
pop
xor
test
xchg
cmpb
mov
or
rcrl
repnz
sub
or
lock
fsubrl
inc
sub
jmp
in
mov
dec
mov
adc
test
jecxz
je
scas
cmp
fisttpl
cmpl
fs
cmp
jl
add
imul
popl
push
mov
inc
aad
xchg
xchg
out
dec
lret
mov
pop
mov
push
aad
mov
daa
and
add
add
lcall
add
mov
sarb
inc
jl
repnz
push
in
adc
xor
mov
mov
lods
dec
push
cmp
fldl
pushf
xchg
mov
and
iret
test
lcall
ud2
sbb
jmp
lds
clc
mov
pop
in
jb
nop
or
pusha
loop,pn
cmp
jo
xchg
push
mov
popa
mov
sub
jmp
jns
mov
push
and
xor
inc
jl
cmp
nop
jmp
mov
or
bound
pushl
movsb
cmp
ret
imul
nop
test
or
cmp
sbb
pop
sbb
cmpl
cmp
pop
inc
icebp
sbb
roll
testb
jne
pop
stc
sbb
or
xchg
mov
add
cli
pop
insb
add
mov
inc
mov
sar
testb
jne
push
sbb
fnstenv
loopne
lea
jge
mov
and
outsb
jne
daa
add
adc
stos
mov
movsb
outsl
pop
mov
test
mov
push
hlt
sbb
lods
addr16
add
sbb
popf
push
mov
cltd
or
jmp
idivb
cmpl
fbstp
dec
test
mov
xchg
pop
jns
orb
inc
mov
xchg
mov
loop
pop
pusha
adc
and
mov
ret
push
add
out
mov
data16
or
dec
testb
movb
or
subb
cmp
test
andl
inc
loopne
test
push
cmp
jo
lcall
fcom
cli
and
sbb
mov
mov
out
adc
mov
rorl
inc
and
add
lods
jo
jb
test
pop
std
movb
jmp
mov
xor
sub
std
add
fmull
rolb
push
push
push
adcb
mov
cmp
loopne
xchg
push
dec
pop
cmp
mov
mov
push
mov
or
or
repnz
ret
sbb
repnz
dec
pop
leave
adc
and
and
nop
mov
in
test
addl
cwtl
out
iret
lret
xchg
xor
mov
lret
lret
or
test
iret
sub
mov
lods
movsb
mov
test
mov
mov
movl
cmp
es
and
dec
stos
inc
sarb
mov
dec
mov
test
loopne
sbb
call
out
cmpsl
cltd
dec
sub
push
aad
pushf
fmull
xor
lock
inc
add
mov
dec
je
shlb
ss
cld
sub
shlb
sbb
jo
movsb
xchg
andl
cmp
movsb
mov
jo
pop
push
xor
in
and
loopne
fsubl
gs
fcomps
int3
das
das
mov
or
test
insl
cmp
das
movsl
shrb
mov
ret
or
pop
add
hlt
fisttps
xor
aaa
dec
cld
xor
mov
adc
adc
and
xchg
xor
insl
push
jne
adc
dec
stos
repnz
jmp
aad
iret
or
in
and
mov
pop
adc
inc
test
mov
pushl
sbb
pop
incl
sbb
int3
inc
xchg
pushf
xor
add
in
adc
movsb
jne
and
push
push
aas
popa
sub
or
dec
or
jne
jp
xchg
xchg
test
cltd
jecxz
mov
push
mov
test
jge
out
mov
mov
adc
or
mov
jbe
push
inc
fisubrs
aam
sub
lock
pusha
notl
pop
inc
jp
mov
pop
mov
pop
divl
movsb
push
push
or
dec
and
cwtl
ss
rcrb
clc
dec
cwtl
lock
push
jne
ret
cmp
and
jns
loopne
add
stc
rolb
sarl
arpl
dec
repnz
push
pop
inc
jecxz
lock
adc
and
das
push
or
push
mov
mov
cmp
inc
xorb
jmp
push
add
pusha
and
and
leave
fstpl
adc
inc
aaa
push
mov
add
sbb
cmp
mov
dec
sub
fstps
pop
mov
or
mov
hlt
fadds
aam
xchg
stc
fidivrl
mov
popf
jne
aaa
inc
cmp
or
or
inc
or
or
or
shrb
in
or
cld
or
pop
mov
sub
add
cmpl
dec
sar
add
mov
loopne
pop
ja
pop
sbb
aaa
cwtl
movsbl
fildll
fcompl
test
push
sbb
pop
sar
pop
sub
lahf
xor
or
and
and
shlb
mov
lea
mov
cs
mov
add
pusha
fisubl
lret
dec
mov
add
mov
xchg
or
ret
and
push
pop
add
jnp
mov
rcll
push
sub
or
mov
adc
cs
cmp
js
mov
adc
clc
arpl
dec
lea
sbbl
ja
movsl
mov
mov
dec
es
adc
adc
movsl
hlt
hlt
stc
and
push
or
inc
insb
push
fdivs
cmpsb
jbe
test
outsl
movaps
ds
push
mov
sub
jbe
sbb
adc
and
in
ss
js
add
jo
imul
xor
pusha
lahf
aam
movsl
nop
incl
fisubl
sbb
imul
outsl
and
xchg
out
adc
movsl
inc
pop
add
and
mov
xchg
mov
lcall
push
sbb
js
sarb
inc
je
pop
push
sti
ds
inc
test
add
xor
mov
inc
sub
or
jp
or
adc
test
lea
arpl
push
call
rorb
aad
ljmp
jnp
add
clc
ds
dec
and
in
lock
push
xchg
or
mov
in
mov
ror
sbb
add
add
adc
push
stos
mov
adc
insl
cmp
cmp
lahf
jl
xor
xor
cmc
add
jmp
pushf
sub
jecxz
cmp
loop
pop
dec
mov
and
push
cmp
movsb
test
mov
push
leave
push
add
aaa
mov
push
mov
lret
lcall
cmc
das
psraw
sti
outsl
lret
jmp
mov
inc
lods
hlt
xor
pop
dec
lods
pop
xchg
adc
dec
outsb
xor
push
stos
mov
je
pop
cmp
in
cmp
pop
ret
out
push
sbb
lcall
jo
push
sbb
and
mov
adc
jmp
mov
outsb
je
arpl
mov
sbb
jo
hlt
je,pt
xor
out
gs
test
pusha
ret
mov
xor
cmp
dec
xchg
daa
sub
adc
xchg
inc
fisttps
mov
sbb
or
and
sahf
mov
cmpsl
shl
cmpsl
add
stos
jp
fcoms
shlb
add
mov
hlt
jmp
cmp
jle
lahf
jecxz
popf
imul
test
pop
push
inc
cmpsl
repnz
sbb
in
cli
or
or
aam
lods
lock
nop
cmp
jmp
pxor
rolb
movsbl
leave
pop
dec
fbstp
popf
lea
xor
or
adc
inc
sub
add
mov
movsl
push
push
push
pushf
inc
scas
popf
mov
sbb
inc
push
push
sbb
sub
inc
jg
mov
lea
aam
mov
jae
imul
cli
mov
jo
mov
push
inc
daa
add
mov
jnp
push
insb
jle
loope
adc
imul
xor
cmp
bound
sub
scas
lock
and
jae
or
push
or
jmp
xchg
sub
cltd
fwait
sub
ficompl
sbb
pop
jl
add
jae
adc
mov
mov
adc
or
jnp
or
sbb
jge
daa
js
les
mov
or
es
ficomps
aaa
popa
lea
or
xor
std
xor
rolb
push
push
push
mov
xor
aas
repnz
sahf
cmpsl
clc
push
push
mov
jmp
sub
xchg
mov
sub
inc
cmp
daa
or
cmpb
je
nop
add
into
shlb
or
sbbb
movsb
adc
sub
mov
insb
add
mov
pop
and
sub
sar
int
sbb
fwait
add
push
mov
or
add
sub
sub
push
push
mov
adc
push
cmp
mov
mov
inc
or
sub
test
jne
jmp
or
push
and
dec
push
fmul
mov
out
xchg
add
ficoms
mov
sub
mov
pop
aam
lahf
push
fwait
lret
lods
or
sub
addr16
lret
pusha
mov
xor
mov
cmp
arpl
fildl
in
rolb
imul
shlb
fadds
stc
sbb
and
xchg
rorb
xor
add
mov
mov
cs
subb
jge
push
lock
rorl
mov
cmp
jl
mov
cmp
gs
cmp
cld
jb
mov
arpl
adc
ret
mov
sbb
popa
sbb
into
mov
add
addr16
mov
lods
jae
inc
mov
pop
rolb
mov
stc
push
jle
lret
test
nop
popa
fwait
int
imul
fisubl
lcall
xorb
or
dec
push
movsl
data16
pusha
dec
insb
add
cmp
gs
or
jo
mov
sti
cmp
or
out
mov
int3
int3
push
or
pop
ret
adc
mov
or
pop
inc
mov
push
jbe
adc
add
test
mov
jle
push
xlat
or
cmp
nop
sub
mov
push
jb
sbb
pop
in
pop
divb
add
test
xor
data16
mov
pop
jno
push
mov
xchg
xchg
sub
and
inc
and
idiv
arpl
or
dec
and
and
xor
mov
inc
add
shll
inc
add
fwait
sub
and
push
pusha
lods
scas
out
hlt
pop
dec
cmpl
cld
ret
bound
mov
pusha
add
out
inc
clc
mov
dec
call
pop
add
rorb
ret
and
cld
jge
dec
push
rolb
test
lahf
sti
push
dec
outsb
in
sbb
pushl
insl
and
out
pop
call
lahf
xchg
test
jp
add
sub
mov
ljmp
cld
push
cmpl
inc
mov
adc
mov
add
out
loopne
push
loopne
loopne
mov
dec
loopne
xchg
js
xor
ljmp
imul
or
xchg
lahf
inc
mov
cwtl
mov
jl
add
pop
or
and
icebp
int
rcrb
wbinvd
and
mov
pop
inc
mov
push
jb
loope
fstl
and
xlat
add
enter
push
popl
xchg
cmc
jbe
add
call
subb
adc
pop
jno
mov
pop
pop
and
push
jo
nop
xorb
push
xor
lock
clc
push
insb
test
pop
push
fldcw
inc
jecxz
stc
movsbl
out
add
aas
xchg
mov
xor
mov
adc
mov
push
dec
xchg
es
ss
nopl
sub
push
fsubr
mov
sbb
enter
sar
sbb
adc
pop
sub
shl
sub
adc
mov
add
stc
mov
movsb
jne
int3
mov
rorl
sti
add
outsb
push
cmp
pop
push
add
movsl
icebp
mov
or
loop
fbld
jl
inc
lcall
xchg
xchg
mov
ret
sbb
push
pop
dec
add
jb
or
loop
stos
add
out
jo
push
add
mov
std
cmc
jo
xor
push
in
pop
imul
nop
lods
push
sub
adc
shll
jo
icebp
pop
add
inc
out
fnstenv
mov
inc
push
fwait
sbb
pop
xchg
sahf
pop
push
ret
fistpl
inc
lret
pop
jl
and
jle
xchg
adc
hlt
sub
pop
mov
insb
int3
push
lret
movsl
mov
imul
movsl
punpckhbw
cmp
sbb
lea
loopne
xchg
frstor
mov
mov
rclb
mov
dec
mov
lock
push
mov
and
test
ret
daa
mov
xor
jb
add
xor
cmpsb
jo
adc
iret
xor
popa
lods
pop
jbe
sbb
pop
lea
sub
sbb
adcb
jle
cld
mov
rcrb
sti
sbbb
and
jle
cld
dec
xchg
inc
mov
jo
sub
xor
js
add
push
call
add
dec
dec
ds
ror
andl
cmp
movsl
add
mov
jo
jmp
cmp
cmp
mov
cmp
add
mov
add
in
jp
push
into
pop
fidivl
addr16
and
and
inc
push
sbbl
mov
cli
lock
shrb
rcl
sub
outsb
add
and
mov
adc
or
xor
icebp
outsb
xlat
imul
adc
add
mov
or
and
add
xor
pop
out
sub
out
push
or
cmp
dec
outsb
inc
pop
adc
push
inc
sahf
or
incl
mov
sub
inc
xor
mov
shrb
call
jbe
js
mov
inc
shlb
inc
shlb
lods
xor
popf
in
lods
clc
imul
bound
sbb
sub
sub
cmpsl
push
stos
loop
fcmove
je
call
sbb
les
adc
jno,pn
sbbb
cmp
jl
bound
js
ret
sbb
pop
mov
xor
xchg
mov
test
mov
aaa
or
outsl
sub
or
aas
je
ja
stc
inc
mov
add
xor
jnp
call
dec
xor
and
shr
mov
fmul
mov
or
jbe
aas
pop
add
fdivs
lea
or
add
mov
ret
add
adc
jbe
cmp
cmp
mov
xor
lret
nop
fstpt
nop
outsl
fnstsw
push
cmp
mov
fisubrs
fistpll
insb
jne
xlat
xor
jp
or
in
pop
mov
pop
and
jg
push
mov
jno
outsb
sub
xor
cmp
cmp
inc
cmp
xor
and
xchg
xchg
out
aam
rclb
in
sbb
mov
sbb
add
xchg
outsl
xor
sbb
push
ljmp
lea
es
lods
mov
sbbb
sbb
leave
mov
sub
mov
iret
outsl
fstps
adc
stc
fcmovne
jo
dec
inc
mov
sbb
lret
nop
mov
movsl
sahf
jne
rcrl
insl
hlt
outsb
sbb
sbb
and
shrb
sbb
mov
mov
popa
adc
sbbb
pop
or
cwtl
and
fidivrs
pop
enter
outsb
and
outsb
in
popa
sbb
je
adc
sub
mov
js
sbb
call
add
jns
ljmp
out
jb
mov
cltd
xor
incb
fimuls
push
movsb
pop
loop
dec
movsl
jp
jne
sti
dec
inc
sub
sub
xor
imul
sub
test
sbb
nop
clc
add
inc
jo
dec
push
mov
negl
imul
push
popf
mov
nop
pushf
jecxz
push
negl
and
loopne
inc
nop
push
scas
idivl
inc
pop
or
jle
or
mov
cltd
pop
xlat
jg
fdiv
jnp
test
pushf
test
enter
sub
jo
or
insl
push
popf
sub
pop
call
je
xchg
outsl
gs
adc
push
inc
inc
jbe
mov
pop
aaa
mov
or
push
testb
sbb
xchg
fsub
lods
inc
push
mov
mov
pop
rcl
push
scas
cmp
dec
push
add
and
mov
mov
and
fs
add
inc
aaa
sbb
in
adc
aam
push
inc
cmpsb
loopne
jb
push
enter
adc
jo
sbb
pop
cmpsb
jmp
enter
loopne
cmpsl
inc
in
sbb
test
daa
pop
in
and
xchg
mov
sub
push
icebp
test
mov
popf
add
mov
sub
cmc
or
adc
fimull
push
lods
lahf
cli
add
cmp
inc
scas
push
cwtl
ss
pop
add
hlt
adc
das
lret
add
and
adc
and
cltd
adc
adc
lret
push
dec
lea
ror
xchg
ret
xlat
gs
in
testb
or
mov
adc
jne
pop
stos
push
loope
pop
sbb
das
mov
testl
insl
ret
cmp
shr
dec
add
test
nop
adc
enter
lods
test
shr
lds
push
mov
adc
cmp
jne
or
mov
popa
adc
or
jne
xchg
or
ret
xchg
push
stos
cmpsb
xor
rclb
enter
jo
sbb
rcrl
add
xchg
push
sbb
lods
jp
push
add
add
in
mov
rcll
mov
sub
ds
or
ja
leave
add
subb
or
lock
or
clc
pop
xor
adc
dec
clc
roll
mov
jmp
aaa
or
shl
insb
test
sbb
pop
sub
mov
mov
inc
out
push
xchg
add
sbb
in
push
cwtl
dec
sub
sbb
nop
lcall
cmpsl
call
outsl
jo
pusha
and
add
adc
hlt
mov
pop
mov
pusha
lahf
mov
cli
in
add
call
push
sub
mov
or
adc
call
mov
rcrl
dec
mov
ficoms
sahf
xchg
fdiv
push
mov
fcompl
sub
mov
lret
push
push
inc
inc
cld
pop
es
cmp
dec
and
incl
add
pop
push
orb
mov
lods
jmp
and
and
and
pop
and
or
xlat
mov
xchg
jp
push
mov
fcos
out
out
mov
cmp
and
mov
and
lea
cli
sbb
adc
cld
jmp
dec
addl
inc
push
sub
sbb
mov
dec
inc
jo
jg
or
add
dec
xchg
rorl
cmc
push
mov
inc
fdivrl
xor
shll
sbb
xstore-rng
cmpsl
inc
loope
cmp
add
nop
mov
cmp
fisubrs
pop
insb
push
cmpb
loop
mov
xchg
pop
mov
xor
nop
sti
scas
push
jne
movl
inc
iret
sbb
sarl
jne
jmp
dec
shll
add
mov
jmp
xchg
rclb
push
mov
add
imul
push
push
push
cmc
stos
push
pusha
xorl
mov
mov
rol
pop
jmp
mov
cmp
into
std
fs
ficompl
je
push
jmp
push
loop
or
dec
rorb
push
ret
imul
xor
rolb
cli
stos
jo,pt
cmp
or
push
call
inc
shlb
addr16
cwtl
sbb
pop
pop
in
rcll
leave
inc
scas
jmp
fwait
add
or
leave
xor
jo
push
aaa
jmp
mov
push
mov
ds
fs
cmpb
inc
cmp
ljmp
add
sti
roll
lret
add
xor
clc
jb
mov
imul
out
inc
and
push
in
dec
xor
adc
dec
and
and
cmp
mov
jne
mov
dec
mov
lods
cltd
frstor
sbb
jle
jnp
or
mov
outsl
leave
or
inc
dec
jne
sbb
stos
mov
jmp
scas
dec
addb
cmp
into
cs
enter
mov
insb
in
xchg
mov
out
movsb
fcomps
mov
pop
xor
jmp
cmp
stos
dec
test
sbb
out
inc
cmp
fsts
push
sub
inc
shlb
lods
addr16
pop
jge
push
add
push
ret
ret
mov
fiadds
or
push
sti
popf
cmp
cmp
inc
jo
insb
ljmp
add
pusha
shll
dec
xchg
into
xchg
fcmovnb
push
or
sbb
pop
xor
clc
add
in
idiv
jle
fmuls
call
or
decb
mov
add
sbb
cmp
inc
jo
insl
adc
pop
sbb
mov
jmp
inc
cmp
xor
cmp
enter
cmpsl
mov
gs
push
lods
cmpl
ljmp
fwait
jb
push
jg
push
and
shl
xchg
arpl
pop
jle
sbb
mov
lea
aas
stos
or
or
les
aaa
cmpl
cmp
mov
ret
adc
pop
je
add
inc
or
sub
pop
dec
cmp
inc
xor
pop
sub
adc
iret
add
adc
xor
icebp
and
sarb
jp
arpl
pop
es
sbb
pop
adc
dec
xor
mov
pop
inc
mov
not
pushf
cltd
negb
lahf
das
adc
dec
rolb
sub
fwait
xchg
insl
insl
fsubrs
ss
and
mov
outsb
mov
xlat
cmp
cwtl
daa
xchg
mov
or
mov
aam
rclb
mov
jg
pop
test
mov
cmp
loope
mov
add
push
shrb
jg
inc
cld
es
pop
cmp
mov
cli
sub
testl
or
sbb
rolb
mov
out
push
mov
daa
mov
cmp
sub
flds
nop
test
push
lock
jle
or
push
sbb
jo
adc
xor
imul
insb
leave
mov
pop
and
mov
jmp
pop
push
dec
jb
leave
es
add
add
push
and
test
or
jae
push
mov
inc
mov
xor
mov
mov
push
pop
xchg
movsb
push
pusha
mov
push
test
mov
jo
adcl
roll
push
mov
xor
data16
inc
push
jo
sbb
cmp
jns
or
int3
mov
js
inc
push
cs
fwait
mov
inc
xchg
inc
mov
push
push
bound
cs
mov
jb
in
push
xor
xor
imul
cmp
xchg
mov
rcrb
js
les
jbe
or
iret
test
daa
cmp
shlb
ds
push
mov
cwtl
ret
loopne
out
sbb
xor
shl
pop
sbb
and
jecxz
push
adc
mov
cwtl
push
push
or
pushf
test
enter
cmp
xor
add
nop
add
mov
nop
dec
pop
cmp
pop
and
jle
sbb
repnz
pop
jmp
push
dec
mov
dec
mov
mov
jbe
and
pop
cmp
ret
adc
xchg
mov
or
push
push
jno
adcl
movsl
mov
or
mov
push
js
sbb
push
jns
bt
les
out
in
mov
xor
jne
or
xor
or
xchg
ds
mov
mov
mov
les
cmp
pop
fwait
cmpsb
and
subl
xchg
pop
sub
and
or
inc
pop
fndisi(8087
sub
pop
fstpl
jge
pop
and
pop
push
inc
inc
push
hlt
jne
cmp
roll
aaa
cmp
or
pop
mov
mov
movsl
nop
int3
mov
jl
mov
fisttps
add
xchg
mov
das
cmc
xchg
ret
ljmp
xor
mov
insl
add
adc
sbb
sbb
mov
aaa
jecxz
hlt
sbb
sbb
or
pop
add
inc
lsl
sbb
or
xor
sbb
aas
and
sub
pxor
push
push
add
sub
jg
inc
jmp
sahf
loop
shr
je
fistpll
jg
dec
movsl
sarb
inc
adc
and
inc
js
sub
mov
dec
jne
and
imul
mov
push
add
jg
adc
divb
pcmpeqb
xor
xchg
jp
xor
sbb
add
jne
ficoms
dec
adcb
inc
inc
cli
pop
pop
ret
popa
and
push
outsb
cmp
bound
add
cli
shr
add
xchg
and
push
xor
incb
lock
daa
in
mov
into
lock
xchg
cmpsb
outsb
adc
push
daa
out
adc
int
fistl
jg
loopne
push
mov
or
shll
enter
adc
or
xchg
mov
mov
or
rolb
xor
movsb
push
add
insb
cmp
pop
push
js
ljmp
add
mov
mov
sbb
push
add
movsb
sub
dec
in
dec
or
test
lods
or
pushf
xorl
jo
add
add
sub
or
faddl
or
int
pushw
call
lock
rcl
xor
jle
xor
sub
add
mov
cmp
xchg
pop
in
and
mov
enter
fadds
cs
push
fidivrs
das
and
imul
dec
add
fildl
sbb
adc
pop
in
mov
adc
pusha
push
push
lahf
sarl
pusha
pop
xor
call
rclb
movsb
cmp
and
dec
xlat
cmp
inc
stc
cmpsl
xor
adc
test
xchg
sti
mov
decl
mov
and
cmp
push
pop
ja
pop
adc
aam
js
and
fmull
fstl
mov
lock
push
adcb
sub
loop
sbb
lea
nop
popf
int3
int3
push
scas
jns
out
mov
out
sahf
out
sub
out
mul
sub
jge
mov
inc
pusha
dec
add
popa
cmp
and
int3
push
mov
push
cmp
nop
dec
jbe
lock
inc
jae
fisubrs
insb
jne
inc
pop
dec
mov
addb
call
sbb
and
inc
jle
mov
inc
push
lea
push
push
push
xchg
inc
faddl
inc
test
enter
or
dec
add
lods
repnz
sub
inc
nop
jbe
fucompp
bound
xchg
and
ret
and
push
push
test
mov
xor
jmp
es
mov
adc
cmp
cld
outsl
mov
mov
idiv
divl
adc
decl
inc
mov
sbb
mov
lea
mov
pop
xor
jne
lea
mov
shrb
mov
cmp
jne
mov
push
mov
shll
fucomip
add
loop
stos
bound
out
xor
sbb
sub
xlat
fmull
es
into
ret
and
es
sub
enter
aad
add
mov
repz
lret
outsb
in
test
mov
std
xchg
pop
enter
std
mov
hlt
inc
jp
lods
std
lret
sbb
jne
movsb
pop
hlt
and
inc
push
mov
nop
xor
add
xchg
je
mov
cmpsl
fwait
mov
rclb
dec
ret
sbb
dec
jno
sbb
leave
ret
mov
adc
cs
loope
fdivrs
mov
mov
mov
in
jnp
adc
mov
stc
add
lcall
adc
aam
addl
xor
aad
leave
mov
filds
enter
sti
loopne
xchg
push
lret
cmpsl
mov
pop
cs
int3
pop
or
add
subl
xor
sub
iret
es
lock
mov
sub
mov
push
jns
notl
xor
push
sub
adc
adc
mov
fsubl
pusha
dec
adc
or
mov
or
add
mov
cmp
inc
loopne
add
sub
pop
das
xlat
scas
aad
pop
and
push
cmpb
mov
add
or
and
cmp
inc
xor
filds
cmp
push
movsl
test
ss
lds
dec
js
pop
push
mov
gs
mov
pusha
lock
mov
imul
fiaddl
rolb
pop
inc
dec
test
in
test
inc
jl
in
sbb
mov
shld
pop
mov
daa
or
and
or
stos
push
xor
aad
adcb
push
scas
jle
out
xchg
iret
cmpsl
mov
add
les
cmp
add
xor
dec
shl
stc
mov
ret
loopne
into
incb
sub
or
dec
cmp
dec
outsb
jg
scas
add
orb
push
je
fcmovb
and
jo
aam
stc
inc
sub
lds
sub
pop
aam
jmp
mov
mov
jnp
sub
jno
je
mov
rolb
imull
or
dec
pop
add
adc
repz
sub
adc
js
xor
adc
repnz
test
jl
and
xchg
push
out
adc
jns
insb
xor
out
addr16
pusha
addl
out
sbb
dec
jo
xor
jns
dec
mov
insl
mov
inc
jns
jecxz
adc
mov
and
inc
outsb
xorb
imul
add
scas
jmp
ret
mov
push
shlb
jne
mov
int3
arpl
mov
jno
push
fnstcw
movsb
push
pop
mov
cmp
cmpsl
es
cmp
xor
test
popa
mov
int
sub
lea
aam
aaa
cwtl
mov
rcrb
mov
dec
fildl
shrb
es
sbb
in
or
sub
outsb
dec
or
test
fisttpl
test
addr16
popl
out
xor
and
aad
faddl
in
test
in
lcall
adc
fadds
neg
ret
cmpsl
or
imul
icebp
icebp
mov
jmp
das
fmull
cltd
mov
repz
mov
mov
fucomi
fldt
sub
fildl
inc
repz
cmp
in
cmpsl
xchg
fadds
sub
frstor
into
cmpb
ficoms
dec
sar
xor
aas
dec
cs
cmpxchg
popf
push
sti
mov
jmp
dec
rolb
push
cmc
shrl
push
jns
add
icebp
dec
sub
xchg
inc
xor
sub
sbb
jmp
call
jnp
dec
int3
mov
mov
sub
mov
loop
inc
sbb
fwait
mov
sbb
jno
pushl
sahf
xchg
or
adc
mov
dec
hlt
cs
jmp
mov
cmpsb
push
mov
mov
sbb
jb
mov
adc
arpl
call
in
jge
xor
sbb
mov
dec
or
sub
push
nop
inc
xorb
test
mov
and
or
popa
add
and
js
push
add
je
xor
adc
sub
mov
adc
daa
adc
ret
mov
fidivrl
xchg
lea
cmp
push
addr16
stos
add
nop
lcall
mov
leave
rolb
stc
push
shrl
jns
mov
testb
dec
addr16
lcall
adc
inc
test
add
or
iret
inc
loope
xchg
outsl
jne
or
outsb
cwtl
movsl
push
mov
sbb
lods
test
xchg
and
mov
mov
subl
aaa
cmpsb
sbb
xchg
fcoms
cmp
mov
mov
mov
mov
pop
sbb
sub
pop
out
rolb
xorps
jmp
ss
dec
xchg
xchg
mov
jmp
in
push
xor
lret
stos
pop
sub
lods
repnz
leave
lock
movsl
mov
sub
pop
add
cmp
movsl
fsubr
pop
ljmp
movsl
scas
movsl
push
mov
scas
adc
outsb
insb
out
cmpsl
into
and
jecxz
cmpsl
aad
pop
jo
dec
cmpsl
xlat
test
lret
mov
pop
and
inc
cmpsl
inc
inc
inc
inc
mov
sub
and
jo
aaa
or
lea
push
xor
stos
xchg
movsb
repnz
push
stos
mov
mov
mov
adc
outsb
sti
es
sbb
inc
scas
dec
inc
call
cmpsl
aad
cmp
cwtl
pop
jno
aad
cmc
push
hlt
lods
outsb
lods
sub
mov
mov
add
repnz
dec
es
movsl
dec
add
movsb
xlat
adc
adc
decb
cld
push
push
aam
int3
sbb
cwtl
cmpsl
mov
cwtl
lods
mov
push
enter
rcll
lods
shrl
mov
xor
cmp
jb
dec
jb
test
leave
leave
mov
stos
movsl
adc
mov
xor
test
nop
add
dec
xchg
nop
arpl
dec
adc
aaa
push
sub
push
enter
xor
pushf
cwtl
sbbb
nop
mov
movsb
xor
mov
nop
nop
pushf
cwtl
inc
dec
cs
mov
nop
mov
shr
shl
popf
int3
mov
mov
sbb
lds
pop
sbb
lahf
out
xchg
jl
push
dec
stos
testb
sbb
divl
jp
mov
insb
adc
aaa
mov
or
les
or
or
xchg
lock
inc
cmp
mov
inc
sub
adc
xor
mov
out
outsb
sub
pop
xor
or
mov
into
inc
or
pop
pop
mov
xor
shrb
pusha
movb
addr16
pop
stos
push
sbb
cld
dec
add
xlat
adc
idiv
mov
test
jmp
dec
xor
aaa
push
jns
add
push
jg
mov
jnp
add
jne
sbb
dec
out
add
jno
pop
mov
lahf
mov
adc
pop
jo
or
cld
nop
in
testb
rclb
cltd
lahf
cmpsb
lock
test
mov
mov
mov
xchg
test
nop
mov
and
jne
adc
and
and
int3
push
sahf
mov
add
or
fnstcw
inc
dec
pop
adcb
jg
subl
pop
je
mov
fwait
pop
outsl
push
push
dec
adc
lock
or
pop
xor
dec
iret
ja
cmp
pop
outsl
inc
or
jbe
je
lahf
pusha
jle
cmpsb
outsl
popf
mov
iret
ja
jo
mov
ja
pop
xor
jne
jo
in
push
pop
ffreep
lea
lea
inc
out
or
push
in
rcr
inc
daa
insb
adc
sbb
insb
add
movsb
pop
mov
add
inc
inc
push
negl
decl
aas
mov
mov
lret
ret
push
div
push
mov
shr
dec
add
add
mov
adc
add
lods
sub
pop
into
andb
cmpsl
add
sbb
fimull
or
mov
push
dec
or
sarl
adc
andl
add
mov
add
or
call
stos
add
jmp
mov
push
jl
fdivs
test
mov
aaa
mov
les
sbb
aas
add
fwait
pop
jne
cmpl
jne
fdivr
fistpll
adc
and
cmp
and
cmp
bound
or
scas
sub
or
adc
xor
inc
rcl
jl
push
cmp
rol
push
mov
sahf
out
add
jl
jae
xor
sar
and
and
call
mov
add
add
inc
loopne
xor
pop
pusha
or
imul
add
fldl
mov
cmp
ljmp
mov
sub
adc
inc
andl
xchg
jle
nop
pop
subl
lret
cmp
lea
sub
xchg
scas
or
cs
mov
aam
xor
pop
mov
xchg
rolb
fs
mov
xor
pop
rcll
or
sahf
pop
cwtl
adc
adc
rclb
test
mov
or
mov
sbb
mov
sub
rcl
adc
call
inc
or
andb
push
pop
add
cwtl
sbb
je
aas
push
fucom
pop
cmp
push
dec
and
mov
xor
mov
xchg
out
movsb
inc
push
out
fadds
mov
in
fdiv
lret
into
mov
gs
jmp
outsl
mov
and
js
mov
pusha
js
hlt
sub
mov
mov
ja
and
jne
incl
dec
and
lods
data16
sbb
jmp
addr16
out
dec
adc
add
mov
fwait
adc
ret
xor
jne
lret
outsb
stos
add
xor
jne
or
push
push
orl
add
mov
inc
data16
ds
gs
cmp
ds
enter
or
jne
dec
mov
mov
and
mov
sahf
jnp
addr16
add
sub
mov
aas
movsl
adc
fisttpl
inc
cs
je
xorb
cmp
stos
jne
jnp
lock
and
inc
and
dec
cld
push
insb
ljmp
or
pop
jle
in
push
push
insl
add
aam
add
sbb
mov
push
mov
and
es
test
or
xor
mov
or
int3
push
xchg
cmpb
jo
shlb
fistpl
push
call
push
incb
jbe
xchg
lea
into
adc
cwtl
insb
pusha
fimuls
push
loopne
mov
pushl
mov
jae
lea
add
xorl
push
cmp
lock
lea
push
xchg
and
mov
shlb
popf
and
or
rorb
mov
je
fwait
hlt
mov
lods
mov
push
sub
lea
push
fsts
out
pop
lea
inc
or
push
cmpsl
out
leave
cwtl
or
gs
pushl
push
pop
push
iret
cmc
dec
push
mov
loop
lea
mov
or
mov
lock
mov
adc
out
jg
movb
xor
dec
fildll
lea
add
int
inc
inc
mov
push
in
out
push
push
imul
adc
sbb
rcrb
loopne
ret
mov
scas
xchg
jl
fidivrs
sbb
movsb
or
push
or
aas
or
add
fimuls
daa
dec
mov
scas
fiadds
add
xor
aas
roll
das
rorb
and
into
sub
into
test
cmp
jb
xor
jl
in
mov
xchg
adc
hlt
jb
sahf
xchg
ret
pop
push
cmpl
sbb
repnz
or
pop
aam
push
or
cld
aaa
cld
cmp
pop
ret
add
xor
jmp
jns
mov
and
dec
shlb
movsb
or
add
dec
sets
mov
stos
xchg
add
je
push
or
repz
outsl
xor
push
orb
jmp
mov
jmp
cmp
loop
lea
xchg
cmc
push
xchg
mov
dec
cs
aaa
xor
scas
insb
jnp
mov
mov
jne
jmp
addl
ss
or
je
push
inc
bound
dec
movl
add
add
adc
out
pop
ret
dec
sub
cmp
shrb
test
dec
cwtl
cwtl
pop
mov
sub
imul
dec
out
mov
fists
pop
test
not
mov
push
in
popa
mov
cld
xor
push
sub
adc
lock
xchg
cmpsl
sub
lock
mov
fwait
adc
and
test
dec
mov
test
adc
dec
les
cs
lock
sbb
loope
ja
mov
xor
orb
ljmp
jle
pop
ret
mov
lods
int3
jle
dec
pusha
push
sbb
jnp
negb
push
sub
push
lock
jb
mov
int
fs
out
lea
daa
pop
mov
movsl
out
add
fistl
popf
imul
rorb
xor
and
das
inc
xchg
xchg
xor
gs
push
push
jb
pop
sbb
iret
and
addr16
enter
add
jnp
incb
cmp
fldt
loopne
daa
jg
jnp
cmpsb
push
xor
xor
add
sub
pop
shrb
add
dec
inc
inc
xor
xchg
es
inc
adc
fidivrl
cmp
jae
lahf
lret
adc
aas
pop
inc
dec
stc
cs
in
dec
dec
cwtl
push
adc
and
mov
pop
in
sti
inc
popa
dec
adc
jo
fnclex
lods
enter
dec
or
xor
mov
lcall
mov
pop
push
sub
adc
ret
js
cmpl
shlb
jne
daa
fiaddl
and
popa
mov
jns
pop
scas
inc
stos
add
push
nop
ret
fisubrs
inc
mov
mov
add
add
add
into
stc
movb
cwtl
add
leave
push
clc
stc
push
inc
cmp
push
lea
cmp
int3
call
enter
adc
and
push
pusha
es
scas
dec
stos
inc
popa
in
adc
cmp
jle
enter
lret
sbb
push
mov
enter
mov
bnd
inc
push
sbb
aaa
sub
pop
and
or
jbe
rcrb
add
sub
sbb
and
add
xchg
push
xchg
inc
pushf
sbb
sti
std
call
cmp
aas
add
hlt
jmp
and
push
in
out
fistpl
xlat
mov
xor
sub
inc
push
subb
or
ret
or
push
xor
test
lods
inc
and
fimuls
adc
push
lret
or
mov
dec
dec
ja
test
mov
test
or
loop
sbb
cmpsl
mov
aas
clc
add
lret
loop
pusha
lods
and
insl
add
jne
or
push
in
dec
cmp
mov
inc
outsb
adc
das
ret
lea
mov
dec
and
sub
add
push
aam
out
loopne
and
jb
sub
add
enter
add
xor
cld
jb
mov
pop
xchg
add
ret
sub
insl
add
jmp
cmpb
rcl
push
negl
ret
xchg
fcoms
or
neg
mov
lock
mull
lsl
jmp
push
pop
push
sub
inc
shr
rcr
shr
rcr
or
mov
repz
dec
pushf
pop
dec
ljmp
out
jb
cmp
or
cmp
or
xor
aas
iret
pusha
shlb
or
fisubl
push
add
lret
jne
fcomp
iret
pop
ret
adc
and
je
dec
push
jmp
jbe
inc
adc
xchg
sbb
mov
sub
cmc
inc
in
cmp
rolb
cwtl
clc
mov
hlt
jbe
xchg
or
and
lret
movb
out
xor
pop
cmp
or
xchg
call
mov
push
dec
inc
fld1
clc
add
sub
aam
hlt
and
adc
inc
mov
fists
inc
and
mov
scas
xlat
mov
pop
add
rorb
lcall
shlb
inc
stos
inc
clc
push
xor
loopne
adcb
push
push
sbb
cmp
sbb
sbb
dec
fcomps
and
adc
or
dec
push
mov
and
add
add
in
aas
fists
je
cwtl
push
push
pop
lret
xchg
xchg
sbb
add
cmp
mov
sub
inc
adc
jo
leave
out
jmp
pop
jne
test
popf
mov
xor
add
pop
inc
cmp
mov
xor
add
addl
inc
sbb
hlt
fiaddl
rcrl
mov
dec
pop
dec
and
mov
and
lods
dec
add
fs
mov
jnp
pop
or
int
xor
mov
inc
nop
test
nop
push
test
cmp
add
lods
and
jl
popa
outsb
mov
arpl
sbb
popf
sub
jb
mov
faddl
fmuls
fistps
jo
mov
pop
clc
dec
cld
popa
cs
decl
lahf
add
cwtl
push
gs
test
jne
xor
outsb
mov
and
loope
daa
xchg
inc
popa
dec
sub
push
xor
mov
and
mov
mov
cmp
mov
jo
cmp
xor
in
and
push
add
mov
or
or
dec
or
cmp
cld
or
in
mov
cmp
loop
or
add
mov
sti
fwait
sub
mov
ret
ret
outsb
outsb
sub
push
push
inc
push
loopne
lret
push
aad
aam
lods
jnp
mov
jne
mov
xchg
push
negb
jmp
adc
outsl
push
push
mov
jae
adc
ret
loope
imul
pop
xorl
dec
mov
adc
lret
push
inc
cmpsb
shr
out
gs
aam
lock
aad
mov
inc
fidivl
iret
jmp
sbb
mov
movb
imul
ja
subb
call
sub
push
lock
cmp
inc
jmp
stos
les
inc
pop
lds
cmp
imul
add
push
inc
mov
jge
aas
sbb
cmp
add
inc
jecxz
in
cwtl
push
sbb
sbb
jmp
dec
je
mov
out
inc
lock
xor
icebp
xor
or
and
add
insb
jne
push
adc
and
or
incl
mov
push
stos
into
mov
sub
enter
adc
test
inc
push
cmp
jge
inc
call
scas
mov
mov
push
and
mov
cwtl
xor
sbb
mov
sub
mull
pop
stc
xor
pop
inc
rclb
xlat
mov
add
and
jo
negb
shl
sbb
lcall
pop
sahf
jl
clc
sbb
mov
and
cmc
fadds
add
mov
mov
aad
adc
mov
aas
add
ja
mov
sub
adc
orl
bound
dec
dec
sub
and
fs
push
push
push
pop
shlb
or
dec
pop
inc
inc
pop
notb
and
arpl
xor
in
pop
cmp
or
popa
sbb
rcl
lock
jmp
xor
stc
loopne
mov
pop
adc
pop
or
sbb
lds
adc
add
push
mov
or
push
fs
or
add
push
mov
mov
cmp
sub
sbb
cmp
xor
cli
adc
lea
lea
mov
or
out
out
andl
mov
push
inc
cmp
sbb
jmp
popl
test
inc
ljmp
mov
pop
xor
jle
enter
js
shrb
add
jb
sub
clc
sarl
mov
pop
mov
pushl
add
jno
push
pop
lock
mov
push
mov
and
sbb
push
push
xor
movsl
ljmp
push
inc
cmp
ds
pusha
clc
aas
imul
sub
out
popa
push
fldt
add
sbb
mov
or
push
loope
pusha
rol
jl
popa
add
sbb
inc
pusha
xorl
add
out
inc
stos
cmpl
and
mov
inc
inc
jne
lcall
add
sub
inc
rolb
pop
or
aas
sub
mov
fadd
les
inc
pop
adc
shl
mov
mov
scas
call
outsl
andl
pushf
rorb
es
xchg
or
aam
sbb
orb
sbb
sub
sub
xor
adcl
push
sbb
dec
add
and
movd
in
loopne
mov
jmp
jg
lcall
adc
lods
subl
xchg
das
xor
push
popf
add
cmp
mov
or
push
inc
adc
sbb
test
int
ds
das
imul
xchg
xor
adc
and
inc
mov
test
mov
or
dec
xor
test
jl
xchg
inc
mov
mov
fmull
das
loop
push
adc
mov
push
jno
add
mov
adc
adc
aaa
mov
xor
ljmp
jmp
mov
cli
popf
pushl
leave
lret
aam
push
pmaddwd
cmp
cwtl
cltd
ret
jo
bound
mov
cmp
jae
in
xlat
inc
sbb
inc
mov
push
push
nop
sub
adc
dec
mov
cwtl
or
add
movsb
mov
adc
cmp
arpl
inc
cld
jl
push
lods
mov
cmp
das
push
or
push
or
fidivl
or
xchg
push
sbb
or
lea
and
pusha
or
push
mov
pop
dec
and
mov
inc
push
push
pusha
cmp
hlt
add
mov
sbb
dec
addr16
jl
incb
dec
mov
movsb
andl
jge
negl
jmp
mov
stos
popf
test
mov
and
cmp
fstps
pop
mov
testl
inc
jle
sub
cmp
xor
cmp
jmp
dec
push
in
jbe
cmp
push
sub
jae
stos
lock
dec
lock
inc
sbb
mov
jae
mov
sub
push
jmp
adc
jnp
push
sarb
jbe
imul
jbe
nop
add
jne
out
dec
or
lahf
jae
imul
sbb
pushf
sub
and
ja
sub
jnp
dec
bound
sti
xchg
lahf
and
cmp
dec
cwtl
inc
jnp
cld
pop
pop
push
and
xor
add
stc
sub
cmp
mov
mov
movsl
jbe
sub
mov
mov
stos
loopne
je
mov
xor
add
data16
loop
mov
shrb
add
in
cmp
dec
mov
jo
repnz
rcrb
mov
jecxz
fldl
inc
inc
xor
dec
or
ret
mov
dec
cmp
and
fsubs
fsubrs
xor
cmpl
jecxz
je
adc
push
push
inc
jmp
cmp
mov
pop
xor
shrb
es
mov
dec
push
or
pop
shl
jne
dec
push
lock
popl
popa
cmp
fsubrs
cwtl
jge
add
lcall
sbb
icebp
inc
jae
test
cmp
fadds
loopne
mov
fildl
push
fcoml
mov
outsb
ja
mov
xor
jne
adc
in
leave
pop
adc
pushf
inc
pop
popl
call
jge
xchg
push
mov
sub
pushf
imul
mov
mov
add
pusha
jge
dec
sbb
cmpb
and
mov
out
inc
add
lret
jne
sti
outsl
call
shll
roll
lods
xchg
lea
nop
inc
ficoml
jae
mov
std
mov
sbb
mov
mov
or
scas
pop
and
inc
testl
out
jne
and
xchg
and
les
out
dec
into
sbb
jne
inc
or
cmp
pushf
and
addr16
inc
fists
add
xchg
nop
int
xor
cwtl
xchg
test
push
mov
add
inc
add
push
pusha
mov
mov
push
xor
cli
sub
pop
sbb
jb
mov
rorl
xchg
push
mov
inc
ja
add
js
subl
sub
lea
jnp
sbb
sbb
sti
jg
push
add
add
aaa
sbb
sub
or
shll
shr
fadd
cmpsb
mov
shr
aas
or
push
lahf
and
mov
into
sub
xchg
jne
dec
sub
inc
mov
sub
add
into
negb
je
jl
ja
cli
shrl
shl
shr
or
mov
js
pop
call
pop
jne
outsb
mov
push
aam
notb
adc
and
fnsave
push
imulb
arpl
pop
add
xchg
add
mov
add
cld
roll
or
or
ficoml
lds
mov
pop
mov
nop
mov
dec
and
adc
int3
int3
jmp
inc
popl
test
or
daa
mov
dec
or
dec
into
jmp
lods
leave
ss
aam
divl
jno
les
pop
and
ficompl
jp
lret
push
mov
jmp
sub
loopne
sbb
add
loop
lret
loop
imul
pop
mov
inc
mov
inc
or
xchg
xchg
add
and
cmp
jl
imul
pop
inc
mov
sarl
aam
or
xchg
mov
outsb
loope
cmp
mov
push
mov
pop
incb
jne
testb
adc
sbb
mov
cmpsb
icebp
jbe
push
push
jb
add
xor
sbb
cmp
aad
add
daa
pop
cmp
sarb
push
int3
outsb
pop
ret
jo
push
xor
rorb
jbe
sub
arpl
mov
mov
fwait
ljmp
sub
or
push
pop
insl
outsl
inc
mov
jb
dec
andl
dec
in
ret
add
xor
adc
shl
or
ret
xchg
dec
aam
mov
ret
cmp
es
cld
mov
subb
inc
js
pop
pusha
xchg
adc
pop
pop
lea
pop
bound
jae
mov
add
out
mov
loop
arpl
xchg
call
test
push
pop
add
in
jnp
insb
cmp
mov
adcl
test
call
jne
sbb
call
stos
out
add
xchg
mov
push
adc
sbb
pop
inc
ds
sub
iret
jmp
sbb
adc
dec
xchg
xor
xchg
adc
push
pop
call
sbb
lds
push
pushl
cs
add
pop
enter
punpcklwd
dec
xor
push
sbb
loopne
or
push
js
std
push
and
jmp
ret
jmp
gs
mov
adc
in
pop
cmpsl
lods
sbb
cld
add
and
mov
cmp
cmp
xor
push
std
push
lcall
cmp
dec
lahf
loope
inc
loope
push
lea
sti
push
iret
add
leave
sar
mov
aas
or
sbbb
testb
sub
pop
and
adc
negl
mov
or
call
stc
xor
scas
addr16
loop
mov
imul
xchg
mov
ljmp
shll
xchg
js
inc
shll
cmp
or
xor
push
push
ds
xor
and
xor
pop
cwtl
xacquire
push
inc
loopne
nop
sti
mov
lock
add
mov
fdivl
sbb
push
add
or
push
xor
push
hlt
mov
andl
sbb
sbb
and
jae
pop
ret
pop
outsl
add
add
inc
push
pop
and
sbb
test
or
mov
xchg
movb
push
sbb
adc
mov
dec
mov
outsb
test
scas
sub
lea
or
add
fmull
loop
jns
cmp
gs
push
inc
rolb
adc
add
add
je
test
notb
mov
pop
add
jno
dec
mov
inc
mov
xor
not
mov
pop
mov
int
push
test
cmp
mov
jno
add
roll
sbb
push
cmp
stos
sub
aaa
test
jne
xor
adc
sub
mov
add
fwait
imul
push
push
jmp
sub
inc
adc
dec
pusha
dec
inc
mov
add
sub
stos
or
out
push
mov
adc
push
sbb
sarb
add
in
mov
dec
xor
mov
sbb
subb
add
xor
push
pop
and
pop
pop
ss
shll
adc
xchg
lret
jle
mov
pop
ret
fs
xor
jae
mov
ffreep
mov
cli
or
shufps
push
fldt
pop
mov
push
addl
and
sub
xchg
ds
inc
icebp
and
out
fnstenv
push
jne
cmp
or
ret
sub
sub
insb
call
add
shl
cwtl
dec
shlb
jbe
fs
pop
jns
clc
dec
sbb
into
jg
or
add
cmp
mov
test
sub
sbb
and
or
and
add
mov
movsl
sub
push
jne
sbb
adc
xchg
inc
rolb
push
cmp
jmp
mov
lock
dec
test
push
mov
and
jmp
enter
lods
and
push
es
andb
test
mov
mov
test
or
mov
jg
jmp
push
mov
and
mov
sbb
pop
xchg
aas
push
jae
adc
inc
lods
cmp
out
sub
mov
addr16
add
adc
sub
das
and
adc
mov
ficoms
adcb
jno
xchg
jp
das
cwtl
inc
je
xor
xchg
int3
test
sbb
cmp
aam
or
jmp
inc
sbb
movsb
inc
mov
rolb
lds
pop
add
push
adc
and
and
jo
gs
pop
test
push
fistl
rorb
sbb
popf
cltd
movb
and
es
enter
adc
push
out
and
cmp
sub
adc
or
mov
in
aam
insb
cmp
add
mov
xchg
notl
pop
jne
add
xlat
pop
les
mov
dec
mov
fs
pushf
push
xchg
pop
inc
cli
mov
pop
pop
cmp
inc
and
jg
add
jns
add
inc
addb
subb
sbb
fisttpll
xor
mov
cwtl
js
cld
add
cmp
loop
inc
mov
jmp
ds
push
pcmpeqb
inc
cmp
incl
aam
and
or
les
shr
or
scas
popa
push
xchg
push
loopne
and
or
mov
add
xchg
push
ljmp
jb
vpmadcsswd
fmuls
inc
lcall
adc
adc
pop
adc
push
xchg
jo
inc
inc
mov
scas
sub
dec
icebp
add
sbb
jno
and
push
dec
xchg
push
dec
jae
mov
lret
xor
inc
push
popa
jge
mov
dec
push
add
add
pop
push
fsub
push
or
xchg
fcoms
push
pop
out
cmpsl
test
cmp
push
sar
jb
cmp
cmp
sbb
dec
sub
inc
stos
test
sbb
cmp
add
fisttpl
jmp
pop
adc
shr
clc
or
pop
shl
mov
pop
adc
mov
mov
adc
sbb
fadd
adc
rorl
andl
int
add
insb
enter
daa
sbb
xor
js
cmpl
and
or
push
pushf
jl
push
pop
cwtl
dec
xor
push
jne
push
aas
out
out
mov
xor
pop
in
pop
movl
test
push
sbb
mov
cld
add
mov
xor
jbe
fidivl
mov
jmp
push
std
push
fwait
test
jne
fadd
and
push
push
jnp
jne
add
xor
pcmpeqw
add
pop
dec
inc
imul
mov
jmp
mov
adc
insl
lea
ficoms
add
pop
cmpl
push
lcall
pushf
or
movsb
cmp
cmp
cmp
inc
icebp
imul
add
mov
or
sbb
pop
popa
faddl
sub
lock
mov
adc
fadd
or
cmpb
pop
fistpll
push
dec
and
or
jne
and
pop
sbb
push
sbb
imul
xor
sarl
push
and
rorl
mov
push
daa
fidivs
jmp
nop
sbbl
sbb
xor
lds
je
jae
mov
xchg
out
popf
or
push
mov
mov
jo
push
push
jno
inc
or
add
jnp
aas
cmp
adc
in
xchg
mov
or
fs
mov
and
rorb
jne,pn
ja
mov
sbb
inc
mov
adc
in
adc
add
pop
mov
sbb
or
stos
fdivrs
adc
dec
lds
push
icebp
push
fwait
xchg
pop
xchg
add
loopne
jmp
cwtl
or
nop
or
inc
add
sub
add
push
adc
dec
movl
and
inc
fmull
jp
loop
push
and
add
cmpl
scas
out
sub
dec
sbb
mov
ret
xor
ja
bound
mov
fs
inc
loop
jno
inc
mov
sbb
fcom
sbb
dec
test
jb
ljmp
sub
inc
stos
sub
call
add
push
inc
adc
sbb
test
or
rcrl
mov
or
adc
cs
push
in
push
cs
daa
push
xor
enter
cmpb
popa
andl
out
pop
adc
jmp
fists
ret
repz
add
adc
icebp
movsl
aam
push
ret
mov
lret
stc
push
arpl
call
push
gs
mov
negl
push
stos
cli
shlb
addb
dec
jmp
xor
pop
mov
mov
cmpsl
jo
cs
lret
cmp
or
subl
outsb
je
inc
sub
clc
ret
sbb
dec
mov
sbb
popa
loop
repnz
clc
and
mov
adc
dec
cld
and
push
pop
cmp
in
mov
jge
mov
ja
mov
or
mov
fdiv
xchg
loope
lahf
daa
inc
test
jle
and
inc
push
mov
and
adc
pop
mov
jne
stos
out
rcrl
inc
add
or
ret
cmpsb
or
push
push
add
les
xchg
cmp
or
xchg
cmp
je
into
enter
iret
and
and
pushf
inc
sbb
adc
aas
jg
cmp
decl
jg
xor
cmp
je
or
jne
jle
jp
jae
aad
in
mov
jb
lock
sbb
cmp
loope
imul
and
and
dec
ret
adc
push
or
jbe
push
xchg
or
in
gs
push
or
fldt
in
sbb
sbb
xchg
xchg
and
sub
adcb
cmp
xchg
mov
inc
cmovs
daa
daa
daa
dec
push
push
pop
leave
leave
leave
add
leave
leave
leave
leave
push
push
add
cltd
movsb
cmp
mov
xchg
cwtl
fs
dec
es
mov
cltd
test
ror
xchg
dec
enter
andb
adc
xchg
fsub
in
and
dec
call
dec
xor
hlt
clc
dec
push
cmp
cld
add
add
imul
or
adc
adc
sbb
dec
xor
and
sub
leave
and
xor
xor
gs
fiaddl
push
xchg
dec
es
push
pop
pop
shrb
fs
sbb
and
jmp
pop
mov
mov
adc
jbe
add
test
and
test
mov
stc
outsb
sbb
mov
xor
push
mov
imul
and
adc
sbb
rorb
sbb
and
int
xor
and
adc
dec
xor
mov
and
test
inc
adc
dec
dec
les
dec
scas
addb
mov
in
mov
pop
icebp
adc
inc
and
loope
lret
mov
movsb
push
push
ret
lcall
icebp
or
and
pushf
push
je
ret
rorb
and
pusha
dec
or
and
ret
clc
sbb
pop
add
xchg
ret
push
fisubs
pop
mov
lcall
ds
and
add
into
and
adc
xchg
xor
scas
orb
not
xor
loope
xor
fcmovne
or
shr
dec
outsb
add
jmp
add
and
test
popa
push
ljmp
add
es
in
test
loop
loope
or
add
aam
aam
mulb
shll
fildl
or
or
and
xor
sub
icebp
addr16
add
fucomp
outsl
sbb
lock
and
mov
and
divb
jl
and
jecxz
sbb
sbb
int
add
or
dec
dec
lea
and
std
shll
sub
aaa
jge
je
std
push
sbb
add
fstps
and
jge
aas
pusha
mov
pusha
loope
pop
sub
xor
cmpsb
adc
adc
adc
cmp
ds
pusha
fldl
pop
cwtl
ljmp
pop
sub
sub
xlat
sub
push
adc
test
add
add
sub
xor
mov
dec
sbb
and
cld
into
add
das
jae
dec
jne
orl
scas
jmp
push
and
mov
stos
ficompl
notl
dec
icebp
sub
out
insb
xorb
les
icebp
lcall
and
or
lods
or
flds
push
sub
sti
fstps
jmp
fisttpll
shlb
cltd
fndisi(8087
movsl
pop
test
inc
push
hlt
adc
jbe
fildl
cmovne
sub
add
jl
mov
push
push
xchg
shll
xor
test
hlt
scas
or
and
mov
call
mov
aaa
sbb
out
mov
mov
add
lock
cmp
sub
sub
jmp
sub
cmp
loopne
sub
psubusw
jge
pusha
movsb
into
adc
xor
dec
or
sbb
sbb
mov
add
inc
and
stos
and
shrb
mov
hlt
and
jge
fstpl
or
repz
lret
add
in
inc
rorl
inc
or
repnz
xorl
mov
mov
je
aam
xchg
mov
cli
shrl
shrl
orl
pop
xchg
push
nop
loopne
or
cmp
pop
jmp
pop
cs
add
adc
js
jno
adc
mov
sbb
xor
push
pop
cwtl
out
add
popa
mov
jle
push
add
push
sarb
sarl
fistps
and
pop
mov
jmp
push
pop
adc
adc
repnz
and
and
add
outsl
add
out
pop
fsubs
inc
cmp
je
les
fmull
pop
cltd
cmpsb
imul
and
hlt
adcl
and
mov
pushf
sub
add
mov
fwait
inc
sbb
out
mov
add
sbb
xor
jp
lahf
test
jmp
jno
leave
adc
and
push
xor
fdivp
push
add
or
xor
enter
insb
ret
aad
push
add
in
sub
xchg
scas
adc
mov
or
and
sub
es
push
mov
add
or
pop
mov
shlb
fadd
push
xchg
or
sbb
mov
push
das
adc
inc
out
int3
mov
int3
arpl
arpl
jne
adc
xor
jl
rorl
rcll
cmp
cltd
les
stos
andl
jo
mov
loopne
jecxz
xchg
add
xor
sbb
dec
adc
mov
sbb
negl
add
roll
or
mov
stos
push
lret
lock
or
cltd
jge
sbb
pushl
fcmovnbe
insb
add
push
mov
xor
into
pop
out
popf
mov
cmp
sbb
add
xchg
ret
ss
mov
cli
push
mov
rcr
pop
xchg
jge
mov
out
mov
andl
xor
test
pmulhw
or
dec
das
fstps
add
aam
xchg
shll
push
or
outsl
lcall
or
push
out
mov
adc
jne
pop
je
ret
cmc
in
add
or
push
and
imul
es
sub
inc
mov
test
xchg
push
pop
dec
ljmp
adc
fnstsw
movswl
mov
test
sbb
loop
inc
fnstenv
and
ror
mov
int
xor
fdivl
xchg
fs
testb
or
push
mov
mov
fldt
fwait
ja
or
adc
sbb
ret
inc
adc
repnz
call
movsb
fldpi
imul
mov
or
adc
add
inc
pop
sti
lret
dec
sbb
xorb
scas
test
mov
cmc
mov
pop
test
pop
xchg
jb
xchg
mov
sub
jmp
and
insl
inc
add
int3
or
and
mov
sbb
jle
test
jg
daa
inc
dec
int
fadds
jo
stos
jne
push
pop
lock
mov
loopne
mov
pop
sbb
adc
addb
ja
lds
test
jne
push
mov
pushf
add
lcall
xchg
add
adc
adc
bnd
imul
and
push
sbbb
mov
cltd
xor
repz
addr16
sti
jbe
inc
mov
fsubrl
test
push
cmp
mov
or
or
loope
and
int
sub
test
and
cmp
dec
scas
scas
and
add
test
push
or
outsb
push
cli
adc
lods
sub
xor
inc
push
mov
les
inc
test
daa
mul
pop
test
out
addb
add
xlat
xor
sub
insb
lock
stos
jp
arpl
stos
pop
pop
pop
push
movsl
push
in
inc
add
jecxz
cmp
dec
mov
push
add
mov
or
adcl
scas
ret
dec
or
inc
lea
pop
sbb
push
shrl
rolb
sbb
stos
and
dec
call
loop
rolb
aas
adc
or
repz
std
and
and
mov
out
insb
lock
mov
inc
adc
iret
xchg
lea
cmp
cli
sub
cmp
jb
cmp
sbb
mov
cmp
push
add
out
mov
push
add
pop
sti
or
sub
adc
adc
cs
sarb
mov
mov
test
sbb
lea
sub
testb
add
xor
xchg
idivl
pop
or
loope
inc
daa
xchg
add
add
push
dec
xor
cmp
xorb
xor
sbb
movsb
push
loopne
mov
shl
lods
inc
cmp
mov
xor
add
mov
and
push
ds
push
or
faddp
scas
and
aam
out
sub
dec
mov
adc
pop
or
dec
xchg
push
fs
sub
loope
add
je
clc
das
adc
lahf
or
xor
pop
dec
lea
push
xor
push
xchg
rcr
inc
lods
js
hlt
cmp
and
dec
outsb
sbb
enter
dec
or
inc
rol
or
lea
cmp
pop
adc
fisttpll
cli
sbb
push
out
jmp
pop
push
push
out
inc
jp
add
icebp
popl
iret
dec
jns
cmp
xor
shl
hlt
loopne
push
mov
aas
mov
mov
fbld
lds
sbb
and
jecxz
cmp
inc
xor
xorl
add
shll
pusha
cmp
mov
cld
cmp
daa
andl
add
adc
jle
lea
shll
into
mov
and
mov
sub
mov
adc
imul
and
shl
test
loope
jecxz
mov
fnstcw
or
cmpsl
fiaddl
pop
lock
add
cwtl
cmp
sahf
push
push
es
lret
dec
clc
pop
lock
and
xor
mov
orb
cmpsb
mov
add
sub
push
push
add
push
cs
subb
andb
mov
dec
adc
sbb
cmp
sbbb
and
xor
lret
pop
dec
scas
mov
lea
shll
mov
cmp
add
outsb
xchg
add
cmpsb
fiadds
mov
js
cmp
testb
mov
rorl
enter
mov
sbb
push
jo
push
or
outsb
pop
xchg
cmp
scas
cmp
xchg
or
ss
cmp
je
dec
or
or
out
mov
dec
add
lcall
add
sbb
sbb
add
or
mov
sub
add
data16
fcompl
fistpll
push
lea
mov
adc
mov
outsb
sub
sbb
or
push
add
jmp
xor
roll
xchg
test
xchg
jbe
sub
add
adc
xchg
idivb
jno
cmpb
add
rol
sbb
fadds
add
and
movsl
or
push
jne
cmpsb
jo
fdivs
or
add
mov
loopne
rcr
ret
push
pop
sbb
sub
mov
lock
les
adc
sub
mov
mov
mov
cmpl
mov
mov
lock
pushf
add
adc
insb
pushf
cld
mov
adc
or
shlb
sbb
add
add
lods
cmc
popf
xchg
lcall
sbb
mov
or
aam
insb
jmp
cmpsb
sbb
inc
dec
sub
das
aaa
sbb
aaa
mov
fadd
inc
add
fs
push
int3
or
cltd
push
enter
rorb
or
xchg
or
add
or
xchg
lcall
pop
or
jo
inc
lea
adc
inc
mov
or
mov
cmp
pop
sub
pusha
inc
je
add
sbb
ret
jmp
xchg
jmp
cmpsl
or
insb
xchg
xchg
sub
adc
dec
ret
fstp
adc
ret
adc
shlb
push
fmul
inc
imul
aam
arpl
and
push
jmp
xorb
jno
out
in
cmp
pop
xor
add
inc
loope
xor
or
add
jl
cmp
jge
adc
mov
and
insb
jl
xor
xchg
cli
mov
add
add
lds
xchg
sahf
inc
loop
jge
adc
cld
push
and
or
dec
test
sub
fimull
andl
test
pop
sub
fdivl
pop
ret
xor
dec
cmc
adc
nop
sbb
daa
xor
jge
add
sub
push
fdiv
aas
test
enter
js
subb
fcompl
mov
push
js
sbb
das
sub
leave
and
add
insb
movb
std
or
xchg
fbld
mov
lods
inc
popf
neg
sbb
movsb
mov
and
es
pop
das
adc
jg
ret
data16
shll
add
xor
xor
dec
inc
popf
subb
lods
daa
or
and
adc
fidivrs
jmp
inc
xor
mov
jb
inc
loope
mov
sbb
cwtl
fisubs
insl
xchg
mov
ja
mov
dec
inc
mov
push
cltd
dec
or
adc
sub
push
clc
sub
rcrl
ret
add
jecxz
dec
inc
xor
sbb
pop
cmp
mov
cld
add
hlt
shrd
sbb
cltd
add
cmp
jge
sbb
clc
dec
leave
or
std
xlat
mov
mov
add
dec
jmp
mov
cld
sub
push
or
rcl
sub
lcall
xchg
insb
xor
sahf
inc
fidivrl
push
ret
mov
lock
shl
dec
push
mul
push
and
imul
sbb
js
jg
jecxz
push
jb
xor
push
into
jnp
jmp
adc
jle
neg
mov
cmp
sarl
fcmovnb
iret
xlat
push
shll
xchg
add
cwtl
jmp
in
lock
inc
adc
test
jl
jg
mov
lret
xchg
dec
inc
dec
sahf
sub
dec
pop
or
or
pushf
dec
shl
sbb
addl
fidivrs
in
orl
jo
icebp
frstor
es
cmp
dec
adc
push
loopne
add
shufps
movl
shrb
inc
sbb
loopne
cmp
jle
in
push
sbb
mov
jmp
lock
enter
xchg
jns
neg
call
lock
cmp
cli
ret
aaa
push
or
add
sbb
dec
and
pusha
push
mov
push
jo
roll
push
repnz
je
or
inc
lock
fnstenv
addb
shll
leave
adc
mov
push
sbb
outsb
cmp
inc
jmp
arpl
sbbb
jne
bound
push
cmp
nop
cmp
mov
xchg
in
push
mov
xor
sub
cmp
pusha
inc
add
leave
xor
enter
sbb
push
push
push
shll
out
dec
out
mov
jl
loopne
jge
clc
and
mov
push
stc
mov
ss
ret
add
popf
jmp
xor
jo
fdivrl
sahf
clc
gs
or
pop
data16
imul
cmpsl
imul
inc
popa
je
inc
je
repnz
mov
mov
xor
xor
pop
sub
add
lcall
movsb
sbb
jp
push
mov
or
in
dec
clc
push
popa
imul
mov
or
mov
pop
roll
add
inc
loope
ret
push
cmp
mov
push
je
dec
ret
sbb
pop
inc
test
jp
test
and
out
mov
shl
ds
push
adc
push
mov
push
pusha
jmp
jp
div
mov
push
xchg
shll
push
xor
data16
hlt
jbe
or
push
popf
cmpb
cmp
cli
jge
mov
adc
sbb
je
add
or
inc
jecxz
cmp
add
add
mov
pop
call
aam
adc
push
test
out
inc
jmp
cmc
cmp
add
fwait
push
adc
dec
inc
add
inc
ljmp
xor
push
cld
jmp
mov
sub
and
and
add
nop
pop
dec
jl
push
push
adc
dec
std
and
mov
inc
ljmp
inc
adc
push
rorb
int
je
sub
mov
movsb
push
sub
push
mov
inc
mov
adc
cltd
xor
jmp
insl
fwait
loopne
lds
sub
cmpl
pop
clc
jo
push
fsubrp
push
or
push
sbb
dec
push
mov
adc
or
push
imul
pop
add
movsb
cs
rclb
jo
cld
add
or
in
fiaddl
jb
pop
inc
cmc
andl
fildll
add
lret
cltd
je
dec
je
dec
push
push
jmp
or
jmp
or
sub
add
test
mov
xchg
orl
pop
adc
push
xchg
out
repz
pop
ret
enter
rcl
js
adc
bts
jecxz
data16
int3
or
add
mov
sub
sub
lods
sarb
iret
xor
loopne
sbb
sbb
adc
aas
cmp
ljmp
mov
movsl
cmpsb
sahf
mov
addl
mov
or
push
fldt
lahf
jbe
or
cld
xchg
push
sbb
gs
rclb
jnp
push
nop
mov
fidivl
into
sub
and
inc
imul
and
inc
lret
jl
mov
movsb
add
or
pop
cmpl
adcb
pop
enter
or
pop
dec
sbb
add
sahf
rcrb
push
call
in
mov
rorl
or
sbb
lret
aam
adc
out
out
clc
shr
add
or
mov
imul
pop
or
mov
push
push
adc
test
sub
xchg
mov
lret
add
mulb
or
add
pop
mov
pop
add
popf
jp
pop
cmp
out
mov
adc
inc
jbe
add
jl
or
rorb
aaa
cmp
or
dec
aaa
and
pop
push
push
mov
or
and
push
and
cmp
xchg
xor
add
add
xor
and
into
clc
cmpb
lea
roll
mov
push
es
std
sub
lock
daa
and
push
or
roll
xor
pusha
cmpsb
and
xchg
or
xor
add
or
rcrb
mov
push
and
andb
loop
loop
sub
mov
jle
cli
jne
mov
sbb
inc
roll
add
cmpsb
or
xchg
or
mov
jp
mov
shll
data16
and
jbe
les
jb
pop
xchg
dec
pop
mov
js
xor
flds
imul
leave
pop
inc
cmpsb
sub
sbb
push
inc
clc
out
loope
fwait
sub
loop
dec
rorl
xor
test
push
xor
add
ret
cmc
xchg
inc
push
addl
lret
sub
mov
testb
push
jo
mov
push
ret
adc
dec
daa
xor
push
cmpb
inc
add
cmp
or
or
mov
jo
outsb
cmp
ja
lods
sub
lds
popa
push
dec
sbb
add
mov
xchg
shlb
mov
and
pop
xchg
rcrb
mov
xchg
mov
pushf
outsl
fs
mov
cmp
fdivrp
lea
mov
clc
push
sbb
xor
or
push
mov
or
mov
mov
fisttps
sbb
xor
jne
add
add
and
cmp
je
add
mov
sub
movsl
loope
les
pop
subb
and
adc
sbb
fildl
ss
push
add
and
add
cmp
and
push
rorb
jmp
push
sbb
dec
mov
call
ss
adc
imul
inc
dec
sub
adc
roll
pop
aad
call
push
cmp
mov
hlt
lcall
sarb
inc
and
call
daa
movsl
jo
aam
pop
cmpsb
fwait
stos
or
mov
test
mov
pop
gs
adc
push
jmp
adc
add
cmp
je
dec
xchg
sub
xor
inc
aam
push
fstl
or
xor
ficoml
shlb
push
jns
push
movb
fwait
add
test
push
dec
orb
ds
mov
cld
inc
sub
cmpsb
pop
cmpsb
sahf
and
ljmp
jmp
jle
adc
lret
mov
mov
jnp
jmp
dec
add
ret
add
adc
rorb
push
addl
mov
pop
fprem
out
roll
leave
add
or
je
mov
iret
adc
adc
pop
or
pop
test
mov
xchg
pop
bound
adc
jne
push
and
hlt
fsubl
sti
pop
faddl
pushf
jo
subb
mov
lret
arpl
pop
sbb
rorl
jo
orb
test
lea
push
dec
add
jg
jg
dec
jge
inc
inc
push
neg
neg
cmp
jnp
fcomps
sbb
inc
ss
shlb
sbb
xchg
fwait
mov
xorl
push
push
or
pop
adc
and
fnstenv
imul
push
jnp
adc
sbb
mov
add
or
jns
mov
dec
jne
pop
pop
pop
aam
shll
adc
xchg
test
lods
rcl
ljmp
shr
sub
cmp
adc
shr
pop
push
idiv
and
maskmovq
cld
lock
je
pop
pusha
or
mov
mov
notl
cmp
addr16
dec
or
fidivrl
pop
add
jae
adc
movsb
into
xor
adc
inc
cli
xor
dec
movsl
es
pop
or
push
or
aad
mov
into
jbe
rclb
aam
aas
xor
scas
je
hlt
dec
and
adcb
add
rorb
adc
add
sbb
rolb
inc
cmp
cmovae
or
call
popa
add
arpl
insl
and
and
adc
mull
pop
xlat
ss
scas
push
jo
add
mov
ljmp
inc
ss
dec
out
aaa
dec
roll
es
cmpsb
jnp
daa
lods
push
movsb
and
je
jp
push
out
cld
mov
add
xchg
enter
pop
adc
inc
jmp
sub
inc
add
js
mov
subl
ret
cmp
add
mov
adcb
push
orb
dec
icebp
or
add
mov
mov
cs
cmpsb
sar
in
pop
je
adc
cli
out
mov
push
cmp
ja
add
cmp
adc
cmp
jne
shll
dec
shll
leave
adc
mov
sbb
add
jl
pop
pop
push
dec
or
je
adc
pusha
and
adc
sbb
dec
push
pop
dec
ljmp
add
mov
int
xor
cmp
jg
test
push
movb
jmp
mov
and
sbb
stos
iret
cmp
test
add
mov
and
mov
negb
pusha
movw
jb
rcrb
test
inc
push
lcall
test
loop
mov
in
ljmp
mov
popa
lods
sti
scas
fcmovb
outsl
test
mov
ds
push
pushf
addl
andl
push
pusha
mov
push
add
cmp
pushf
rcrb
mov
es
imul
std
rcr
call
inc
sub
lock
dec
lea
sar
dec
dec
jmp
inc
into
movswl
xchg
ss
neg
push
es
ljmp
fidivrl
cmp
sub
inc
ret
inc
call
cmp
xorl
push
jae
pop
insb
fs
add
dec
addr16
cwtl
mov
lcall
adc
mov
push
jl
pop
or
dec
ret
push
lcall
mov
adc
jae
in
mov
fcmovu
push
or
and
lea
inc
xor
xor
cmpsl
add
into
sahf
push
mov
dec
adc
les
jae
pop
and
mov
inc
call
in
ljmp
xor
cmp
jle
mov
jne
lea
or
cwtl
rolb
adc
pushf
inc
mov
push
lea
sbb
nop
pushf
test
mov
fcoml
xor
xchg
dec
push
nop
add
add
movsb
sub
or
ret
movsb
xor
inc
insl
pusha
imul
mov
or
int
jl
push
lods
and
cld
sarl
jae
jle
push
jo
adc
clc
shll
sbb
out
adc
rolb
rol
pop
or
push
loope
fldenv
cmp
rorb
sbb
push
lret
movl
mov
or
pop
outsl
and
jle
insl
test
cwtl
shrl
loope
shr
or
mov
jp
or
dec
mov
hlt
mov
imul
filds
and
push
dec
repnz
add
dec
cli
cli
inc
cli
div
sub
sub
imul
and
cmp
test
outsb
dec
bound
and
push
scas
mov
or
mov
fdiv
mov
xor
and
and
ljmp
imul
enter
jb
data16
lock
xor
fmuls
add
pop
fdivl
push
fiadds
or
pushw
sbb
mov
xor
loop
out
jge
sbb
enter
fcoms
jb
inc
jne
pop
adc
lret
dec
in
push
dec
inc
push
aam
daa
adc
jne
outsb
das
cmp
inc
shlb
add
jns
cmp
sub
nop
and
dec
sub
jne
xor
sbb
shlb
dec
push
adc
cmpsb
xor
add
or
mov
sbb
fcmovu
mov
mov
insl
test
je
inc
or
mov
int3
jg
add
xchg
add
idiv
adc
xchg
adc
mov
into
or
adc
xchg
push
push
sbb
mov
out
and
jge
rcll
enter
jb
or
jecxz
jb
jmp
add
repnz
sub
fistpl
fs
movsb
in
nop
sbb
fwait
dec
push
mov
pusha
add
sub
xor
sbb
mov
sbb
add
inc
mov
dec
xchg
cmp
jle
push
pop
outsb
add
incb
sub
mov
or
xchg
lods
pop
cmp
in
xlat
leave
and
pop
cli
pop
inc
pop
rclb
xor
loop
cli
fcoms
xor
fiadds
cmp
imul
pop
mov
mov
imul
call
daa
mov
pusha
lea
push
and
stc
xor
mov
mov
or
loop
in
ficoms
out
pop
sti
je
fidivrl
add
cmp
cld
or
dec
into
or
xor
mov
test
clc
rolb
push
mov
inc
dec
enter
sahf
mov
mov
add
or
mov
sub
test
call
or
add
into
pop
add
cld
or
mov
inc
ljmp
jmp
insl
or
sub
cmp
jge
push
cld
stos
aas
sub
cmpb
or
add
dec
cmp
xlat
aam
inc
dec
add
add
fadds
test
mov
call
ret
jp
jne
dec
xchg
xorb
divb
int
pop
or
out
cmp
in
filds
or
mov
lret
or
add
push
mov
mov
jp
ret
adc
imul
popa
push
lcall
rclb
mov
mov
add
sub
mull
or
push
push
mov
or
sub
imul
jle
xor
pop
jne
or
stos
add
push
pop
scas
je,pt
xor
ret
sbb
adc
mov
push
cld
mov
ret
or
dec
lret
add
xchg
adc
or
orl
ret
addb
mov
iret
and
xchg
out
lret
into
pusha
inc
and
pop
imul
sub
and
pop
pop
mov
xor
pop
cmpps
push
sub
prefetchw
sahf
inc
ret
or
imul
push
lock
push
ficompl
jne
or
or
loopne
xchg
cmpsb
add
add
aad
lret
inc
je
pop
rolb
jnp
mov
out
sbb
or
push
pop
or
add
adc
jnp
sbb
and
mov
ret
ret
test
pop
fmuls
add
shlb
ret
add
dec
ljmp
dec
adc
add
cmc
leave
nop
clc
mov
sbb
sub
or
add
push
push
scas
sbbl
cmpb
mov
addl
xchg
add
test
loopne
mov
xor
sarl
repnz
test
adc
lcall
scas
pop
pushf
sbb
xchg
into
mov
mov
sbb
and
sbb
xchg
xchg
out
inc
jg
into
into
xchg
mov
xchg
into
mov
ja
mov
sub
push
pop
nop
sarl
sahf
pop
mov
aam
pushf
fcoms
clc
shlb
or
sbb
stos
push
sbb
push
adcl
mov
push
lcall
test
out
adc
loope
jo
add
movsb
es
jno
fwait
stos
arpl
negb
test
mov
and
jo
jo
cltd
and
xor
scas
sbb
sub
pop
add
mov
in
daa
xchg
jmp
inc
xor
mov
loopne
aad
out
pop
mov
adcb
jge
sub
sti
adc
fstps
xchg
mov
out
or
mov
popa
pop
enter
fsts
inc
xchg
sbb
push
pop
jbe
inc
lock
scas
add
sbb
rcrl
push
divb
in
hlt
add
mov
ljmp
fldenv
and
or
jo
push
sahf
add
repz
sbb
mov
push
insb
jno
xchg
les
xor
je
sub
sub
loope
test
mov
mov
push
roll
mov
cmp
jb
cmp
jbe
dec
and
ror
in
mov
gs
pushf
xchg
loopne
lds
mov
fisubrl
cmc
pusha
test
stos
mov
ret
or
aam
sbb
aam
gs
jle
mov
adc
gs
inc
or
mov
inc
ret
xchg
adc
pop
aam
mov
adc
sub
push
loopne
cmp
addb
pushl
aam
lds
push
and
push
push
mov
inc
aaa
sbb
pop
and
lock
xor
and
fmul
xor
or
push
push
rclb
push
cmpsl
push
pop
adcb
push
lret
xor
leave
rcrl
cwtl
xchg
jmp
dec
inc
push
inc
adc
aam
ljmp
mov
cmp
cs
push
inc
push
aaa
sbb
add
mov
mov
lea
mov
ret
pop
cmp
add
fsubrl
daa
fnstcw
add
xchg
inc
std
aam
pop
jmp
mov
or
mov
pop
xor
push
add
pop
les
bound
dec
sub
adc
sbb
dec
mov
lahf
stos
mov
loope
aaa
jp
or
jne
or
xor
sbb
call
or
xor
insb
ss
inc
mov
dec
push
outsl
mov
pushf
inc
inc
xor
inc
data16
pop
push
inc
cmp
jnp
dec
loope
add
and
fidivrl
sbb
xchg
sbb
dec
in
shrb
jle
mov
jno
test
sbb
cmp
enter
fadd
rorb
sti
call
push
mov
push
stos
iret
pop
popf
adc
pop
out
sub
dec
lea
stc
addl
das
add
std
mov
pop
pop
add
lock
dec
mov
sbb
shlb
mov
mov
jmp
dec
adc
add
fs
loope
pop
sbb
inc
mov
mull
outsl
jae
ja
sub
xor
or
mov
adc
dec
sbb
jne
leave
inc
insl
push
test
push
iret
mov
pushf
xor
push
mov
sub
add
inc
sbb
mov
je
shrb
sub
dec
hlt
jmp
dec
xor
add
jbe
adc
sbb
sbb
pop
jnp
jecxz
scas
adc
xor
test
jbe
aad
push
jno
test
shrl
lret
pusha
add
lods
mov
rorb
inc
jb
xor
adcb
cmp
push
or
clc
inc
and
add
sub
lea
push
sahf
sub
sti
and
js
push
fcomps
lahf
imul
pop
mov
push
and
nop
cmp
add
cmp
rolb
test
pop
xor
jmp
or
or
cmp
mov
mov
push
push
push
dec
sub
mov
jo
addr16
mov
jl
push
mov
inc
push
push
std
inc
ret
xor
sub
mov
enter
les
les
mov
decl
xchg
pop
add
and
xchg
and
cld
push
xchg
sbb
push
add
add
fadds
loope
push
sar
fsubs
sarb
or
push
and
and
xor
xchg
cmp
pop
sub
inc
arpl
shll
xchg
mov
add
orl
test
mov
adc
add
mov
add
sub
dec
push
mov
xor
roll
cltd
sub
sub
dec
sbb
fisubl
push
push
pushf
ret
es
movsb
jo
inc
mov
push
clc
rclb
lahf
mov
int3
jmp
subl
push
sbb
xchg
add
or
insl
cld
mov
loopne
rcrb
xchg
loopne
ss
or
ja
or
sbb
push
les
inc
pop
popa
adc
fistl
mov
rcrb
add
cmc
or
push
xor
data16
and
add
adc
orb
inc
mov
call
js
or
rcrl
rclb
dec
or
into
inc
mov
in
dec
xor
jns
adc
and
cmp
and
stos
mov
adc
jae
xor
scas
arpl
xchg
jmp
sub
jp
dec
xor
in
imul
stos
and
mov
dec
sub
outsb
insl
clc
pop
or
popf
dec
dec
inc
test
mov
addb
ret
lds
xor
or
fmulp
xor
mov
pop
sub
popa
mov
imul
test
push
xor
fcoms
dec
or
loopne
xchg
adc
movl
add
push
xor
sub
sbb
adc
push
shl
imul
rclb
mov
mov
icebp
inc
push
sahf
adcl
sub
cld
arpl
imul
rorl
fidivrl
out
rol
ja
mov
jmp
jb
daa
lock
jo
push
js
rclb
xchg
jge
cmp
outsl
mov
aas
or
movsl
jge
or
mov
adc
mov
sbb
cmp
ja
shlb
jge
mov
push
xlat
cwtl
movsb
cld
sbb
mov
aam
out
push
inc
pop
xchg
cmp
out
jp
repnz
adc
test
jg
or
lock
imul
lcall
pushf
icebp
mov
call
icebp
cmp
push
pop
shlb
push
shlb
mov
push
cs
inc
push
in
and
mov
cltd
jb
dec
mov
xor
inc
add
loope
icebp
push
push
cmp
push
sub
cmp
inc
pop
add
dec
jb
and
pusha
scas
lea
inc
lock
xchg
enter
push
arpl
pop
adc
jne
testb
testb
repnz
insl
outsb
sub
in
sub
push
inc
aaa
sub
fcoml
inc
loopne
pop
cmp
cmp
sbb
mov
repz
stc
and
nop
xor
decl
cmpsl
aas
xchg
jg
mov
jg
jae
xor
imul
cmp
bound
mov
adc
mov
xor
push
int
sub
cmpl
mov
sti
pushl
jge
out
int
shr
sbb
xorl
test
jmp
mull
in
push
adc
in
cmpsb
jo
mov
inc
xchg
cmp
std
imul
push
and
and
inc
sbb
inc
lea
xor
xchg
adc
jo
js
and
sub
mov
sub
push
jbe
lds
xchg
pushf
sbb
mov
insb
sbb
push
xchg
sub
mov
add
jl
pop
sbb
mov
test
push
add
insl
jmp
push
inc
mov
inc
lock
cmp
add
or
dec
push
fstps
mov
and
push
push
push
add
or
daa
mov
jb
or
adcl
data16
int
incl
inc
adc
pop
jl
and
stos
in
mov
call
push
mov
addr16
rcll
jae
mov
call
or
loop
stos
ss
test
repnz
inc
add
rclb
inc
inc
mov
les
fs
add
mov
mov
shr
aaa
loope
fsubs
insl
cmp
pop
inc
rclb
nop
adc
jnp
push
lods
cmp
fildll
cltd
adc
and
cwtl
ret
cmpl
dec
pushf
pop
adc
pop
jne
jle
inc
or
sbb
mov
lret
cmp
adc
cmp
and
int3
mov
out
pop
xor
cmp
movsb
xor
cmpsl
cmpsb
jmp
and
pop
pop
push
inc
outsb
fcomps
add
mov
aam
rcr
rep
push
jle
cld
mov
push
pop
cmp
ret
lcall
sbb
lods
shll
pop
push
inc
or
addr16
imul
shrl
inc
dec
pop
dec
mov
sbb
dec
or
pop
add
test
xor
inc
inc
push
pop
mov
lea
ds
xorb
ljmp
add
out
repnz
loope
mov
dec
jo
or
xchg
es
fs
dec
cmpsb
popf
and
dec
push
adc
cmpl
inc
sub
inc
pop
fwait
ljmp
cmp
xor
push
sbb
ja
popa
xchg
je
mov
xchg
sbb
jmp
and
nop
imul
aas
sbb
testb
cmp
inc
dec
dec
punpcklbw
notl
adc
std
push
rcll
sub
cmp
mov
mov
adc
xor
leave
push
dec
je
dec
jne
push
cs
rclb
ja
fcoms
or
xor
add
add
out
inc
je
je,pn
adcl
hlt
filds
push
sub
les
aaa
mov
sbb
cmpl
or
mov
pop
icebp
push
dec
je
xchg
jns
lea
mov
xchg
out
bnd
loope
inc
sbb
pop
xor
jecxz
jmp
jmp
cltd
xchg
and
insb
in
xchg
lods
push
push
xchg
add
hlt
push
lock
jb
push
icebp
stos
push
arpl
push
subb
mov
popf
clc
push
lea
mov
inc
push
ss
inc
mov
add
outsl
push
je
cmpb
sub
add
and
add
xchg
pop
pop
fldl
out
insb
sub
clc
cli
dec
cmp
fcmovb
mov
lret
xchg
push
scas
or
xor
pop
sbb
push
xchg
sbb
or
bound
push
fildl
cmp
aad
add
pop
and
sbb
xor
xlat
mov
imul
sbb
adc
sarl
sahf
jecxz
add
xchg
push
rorl
stc
dec
mov
std
hlt
jne
adc
add
push
pop
dec
jmp
mov
sbb
adc
inc
jbe
fs
mov
jle
jl
in
js
dec
add
xor
inc
sbb
cmp
jne
add
add
push
mov
adc
dec
dec
cmp
rolb
xchg
icebp
mov
movsl
add
sbb
je
addb
xor
jno
jbe
test
pop
lret
lock
xor
or
add
cli
and
inc
lock
or
imul
adcl
scas
jle
out
orb
fiaddl
and
mov
and
test
faddl
sbb
retw
add
dec
jg
adc
jp
fnstenv
mov
jno
adc
xchg
movsb
fdivrl
sbb
pop
ret
sbb
and
adc
or
adc
cmp
rclb
jb
or
or
cmpsl
push
lock
cmp
mov
and
divb
pop
pushf
and
xchg
xchg
jne
jae
mov
das
adc
or
inc
test
push
inc
adc
lods
bound
xorb
or
jp
cmpsl
adc
fcoms
jbe
inc
lret
push
test
outsb
stc
pop
sti
sub
add
insb
insb
and
mov
push
mov
add
rclb
ss
aas
push
adc
mov
ret
enter
je
cmp
cmp
jecxz
and
mov
testb
and
loopne
push
testb
add
pusha
or
xlat
in
test
mov
push
push
mov
cwtl
and
jb
mov
push
cmp
jle
xor
cmp
jbe
clc
push
push
or
or
push
cwtl
push
pop
js
push
inc
rcr
xchg
xchg
cmp
xor
insl
mov
cmp
test
add
push
orl
lds
push
shr
lods
test
rcrb
fstpl
pop
jmp
enter
push
sub
dec
scas
push
inc
pop
pop
pop
push
lahf
sub
sub
pusha
push
orb
lods
pushf
adc
popa
stos
ret
mov
ljmp
in
fstl
xchg
popl
xchg
ss
jp
mov
sbb
mov
inc
adc
inc
sbb
mov
add
mov
movsb
cltd
jne
add
push
in
add
mov
mov
daa
stc
pop
enter
add
xor
adc
sbb
sub
add
sub
add
mov
mov
add
test
adc
and
pop
cmp
and
fld
fldcw
xor
fildll
nop
push
xchg
pop
les
fstps
icebp
pop
packsswb
sti
rolb
mov
or
sub
das
fsubs
nop
inc
fidivrl
test
lea
sbb
lods
mov
mov
and
sub
dec
addl
test
incb
or
dec
in
jge
add
mov
xchg
inc
enter
or
or
dec
xchg
add
faddl
sbb
mov
or
insb
mov
dec
sarl
xchg
lock
dec
insb
push
cwtl
pop
adc
nop
mov
jo
aam
or
or
mov
xchg
fistl
in
add
add
pusha
xchg
daa
daa
in
dec
call
or
pusha
bound
pop
movsb
mov
mov
es
cld
inc
fmul
and
push
pop
fwait
xchg
fbstp
add
mov
or
and
cmp
jl
xchg
int3
push
xlat
clc
push
pop
rcrb
and
aad
sub
cmp
mov
xchg
sbb
push
cmp
dec
faddp
add
rcll
enter
inc
push
ret
popf
jb
arpl
add
inc
icebp
fdivs
adc
adc
in
cmc
popa
loopne
in
or
nop
adc
xor
mov
icebp
into
or
rorb
add
sbb
shrl
shll
cwtl
lods
and
mov
push
adc
dec
ret
movsb
inc
fs
inc
cmpsb
mov
adc
ljmp
xchg
sbb
adc
adc
ss
add
and
popa
or
xchg
or
mov
in
xor
pop
inc
xchg
arpl
test
lret
sbb
loopne
leave
setae
cmp
mov
dec
inc
adc
nop
in
jb
arpl
jne
jl
in
jbe
push
js
fdivl
pop
xchg
int3
sub
and
and
in
cmp
add
mov
call
rcl
mov
and
incb
dec
aam
rorb
aaa
pop
mov
pop
popa
cmp
in
shll
mov
loop
lahf
cmp
cli
std
push
jno
pusha
cltd
fs
dec
fs
es
js
add
cltd
jl
ds
xor
sbb
call
mov
adc
loopne
or
add
mov
jo
adc
cmpsb
mov
in
fdivrl
mov
icebp
lret
add
xchg
xor
ret
adc
shr
rcrb
cmp
and
jo
popf
mov
in
sti
gs
push
test
sbb
call
adc
add
imul
rolb
aad
push
stos
jne
cmp
inc
sub
xchg
int
adc
mov
test
mov
imul
mov
and
jl
stos
faddl
popa
js
lods
add
or
lock
push
push
pushf
int3
mov
mov
or
mov
sbb
add
ss
adc
mov
jl
ret
dec
insb
cltd
adc
je
enter
sub
nop
int3
aam
dec
add
inc
cmp
mov
jns
add
adc
cmpsb
shl
mov
lret
mov
pushf
popf
lock
bound
test
cld
or
aam
adc
adc
aam
enter
nop
sbb
call
or
sbb
or
inc
sub
jg
mov
dec
inc
nop
test
cwtl
inc
xchg
das
jo
or
push
fsubrl
scas
aam
push
test
lret
inc
cmp
and
imul
icebp
mov
fs
mov
and
ret
icebp
inc
addb
roll
fsubrs
sbb
int3
sbb
adc
jl
daa
icebp
pushf
iret
push
and
mov
jns,pn
es
mov
or
add
inc
fcoms
clc
cltd
pop
hlt
push
xchg
add
or
add
lret
ret
dec
add
pop
movsb
add
call
inc
rcrl
lcall
bound
sbb
fdivrl
sub
loope
adc
or
inc
mov
xor
dec
fs
lock
xchg
ret
loop
add
adc
mov
shrl
push
or
mov
test
mov
addr16
mov
and
push
cs
adc
mov
mov
scas
outsb
or
inc
sbb
std
in
popa
xor
test
or
scas
push
or
repnz
mov
ja
fbstp
sub
cwtl
and
sbb
in
and
jne
test
and
loopne
sbb
in
mov
lea
or
mov
loope
in
push
xchg
pop
and
inc
fcomp
dec
repz
push
jg,pt
movsl
sbb
imul
mov
jmp
addl
inc
xchg
in
call
mov
pop
andl
es
mov
xlat
adc
mov
adc
or
push
sbb
popa
xchg
sbb
xlat
clc
aad
movd
pop
xchg
nop
sbb
cmp
decb
inc
imul
jne
daa
in
mov
or
out
andb
loopne
or
ror
xchg
fcomp
nop
dec
push
cltd
aam
loopne
sub
cltd
loopne
fdivs
nop
rorl
les
push
leave
or
mov
movsb
sti
xor
xchg
es
sbb
rclb
shll
test
sbb
addr16
jmp
mov
scas
mov
sti
in
mov
daa
jecxz
xchg
mov
pop
in
das
xchg
nop
faddl
mov
or
jb
cmp
lock
test
sub
push
fcoms
call
push
xchg
or
cmp
popf
cmp
fmull
sbb
enter
or
and
and
lock
nop
ret
inc
lock
xor
xor
sbb
mov
adc
mov
movsb
xchg
test
call
mov
aad
or
enter
xlat
mov
shrb
insl
or
pusha
dec
filds
inc
movsb
push
or
push
pop
xor
mov
xor
ror
mov
aaa
adc
imul
mov
aad
jnp
stc
scas
mov
ret
sbb
jecxz
cmp
inc
test
or
and
fwait
jbe
push
or
fmull
push
and
adc
adc
and
orb
push
adc
push
lds
and
jp
add
or
test
adc
sub
xor
xor
je
andl
mov
call
bound
in
pop
aam
fsubrs
sbb
xor
add
dec
enter
and
andb
xor
push
adc
inc
sub
imul
rcrb
mov
inc
fcom
pop
xchg
test
adc
call
jo
in
lock
jno
insb
adc
sub
sti
xor
pop
subb
lds
and
mov
add
mov
xor
test
mov
xlat
and
jbe
ret
in
push
movsb
cmp
das
add
enter
cmpleps
dec
loopne
shrb
daa
adc
scas
in
mov
push
push
mov
push
jmp
mov
loopne
or
pop
inc
cmpsb
movsl
push
mov
outsb
mov
inc
mov
dec
mov
rorl
inc
cmpsb
adc
or
mov
fistl
mov
fildl
js
mov
pushf
xor
cmp
fmull
in
jne
jge
rclb
loope
mov
sbb
rorb
faddl
mov
mov
and
fmuls
mov
xchg
push
sbb
push
inc
mov
push
shlb
pop
or
adc
xchg
or
or
or
and
mov
mov
or
pop
and
xor
mov
and
cmp
cmp
adc
nop
inc
scas
adc
or
push
in
or
jo
or
push
movl
lods
xor
in
or
push
mov
and
addb
dec
add
shlb
adc
stc
aaa
dec
and
pusha
or
inc
ss
pop
aaa
fistl
and
inc
test
cmp
call
pop
shrl
les
sub
int3
pinsrw
or
test
cmp
int3
insl
stos
mov
pop
aam
subb
enter
mov
mov
jg
cmp
in
push
mov
sub
ja
dec
xor
mov
adc
and
mov
sub
inc
insb
add
mov
pusha
xlat
mov
lods
push
inc
jbe
jmp
cmp
lea
fisttpll
dec
in
test
adcl
loopne
jmp
jb
sbb
xchg
test
insb
seta
xchg
pop
xor
cmp
insb
or
insl
stos
lea
mov
mov
int3
mov
unpcklps
aam
ret
cmp
cmpsl
or
cmp
mov
cmp
cmp
cmc
insb
or
cmp
in
pop
loop
cwtl
inc
in
cmp
xchg
cmc
pushf
fwait
mov
xor
cwtl
adc
in
and
mov
inc
adc
fmuls
lods
popf
xor
add
rolb
and
enter
jmp
adc
sub
mov
sub
inc
jno
fisttpl
jmp
mov
ja
sbb
push
and
movsb
inc
sub
fdivr
enter
and
and
shrl
fnstcw
mov
adc
in
dec
push
cmp
and
imul
mov
fnsave
mov
notl
aas
mov
dec
xor
cmp
xchg
mov
inc
les
cmp
ja
aas
mov
mov
sbb
jo
test
aas
inc
and
cmp
adc
xchg
adc
les
push
pop
mov
jmp
adc
or
cwtl
dec
mov
testl
int3
jp
xchg
push
and
xchg
mov
cmc
xchg
push
loopne
jb
adc
pop
cmp
repnz
loopne
addl
or
mov
movsl
and
dec
cmpsl
fdivr
repnz
cmp
add
mov
lahf
das
sbbb
dec
loopne
mov
cmp
cmpsb
and
or
xor
mull
test
pusha
movsl
dec
adc
and
pushf
imul
sbb
pop
out
mov
or
adc
mov
mov
xor
rcrl
inc
cwtl
fs
mov
rol
or
int3
sbb
sbb
add
mov
cmp
or
sbb
in
not
ret
pop
sbb
inc
mov
inc
test
dec
inc
in
rclb
popa
xor
insl
faddl
cmpsb
push
in
sub
mov
inc
fdivr
enter
mov
aad
mov
jo
or
pop
cmpsl
and
call
jb
pusha
addb
insl
fldcw
cmpsl
mov
xor
inc
cmpsb
ljmp
sbb
and
or
xor
jge
inc
sub
pusha
test
lods
xor
shll
cltd
notb
rclb
mov
stos
mov
enter
orb
test
gs
pop
lods
inc
xchg
adc
in
jecxz
jnp
dec
in
mov
mov
pushf
loop
xchg
movsl
les
add
ret
rorb
dec
or
xor
and
adc
jl
sbbl
enter
subb
or
inc
lea
rcl
cmpb
xchg
push
fcmovbe
shrb
sbb
mov
pop
in
int3
gs
not
inc
sub
or
sub
cltd
inc
jns
aaa
mov
daa
in
jg
aam
test
rorb
mov
inc
mov
nop
and
mov
pop
and
gs
add
mov
ja
xor
push
les
je
cmp
sbb
in
icebp
nop
dec
call
aad
mov
jle
pop
test
test
dec
orb
test
xor
aam
sbbb
dec
sub
dec
test
fadds
negl
jno
mov
adc
adc
aam
insl
xor
test
dec
mov
pusha
and
push
mov
mov
je
mov
fiaddl
mov
mov
pop
xchg
push
jne
or
sbb
lds
aas
mov
and
das
shll
lds
test
sub
in
sub
dec
gs
mov
push
add
rclb
gs
in
add
int3
or
leave
mov
lds
xchg
test
test
adc
push
push
mov
pushf
and
sub
ret
jb
fcoms
lea
sub
andb
sarb
mov
movsb
mov
mov
rclb
pop
inc
sbb
inc
push
mov
ret
pop
loope
push
cmp
mov
dec
xor
xor
adc
or
push
or
or
test
mov
mov
adc
pop
stos
cmp
dec
add
pop
andb
and
add
xchg
sbb
inc
adc
int
mov
fidivl
test
sbb
mov
orl
and
mov
dec
test
mov
jnp
fs
mov
push
or
or
mov
add
es
je
pop
mov
rcrb
test
rclb
and
mov
and
mov
lret
add
sub
aad
push
jb
decb
nop
xchg
pop
rcrb
push
mov
sbb
and
rcl
mov
jnp
and
cld
push
jge
inc
sub
fcoms
pop
push
faddl
call
or
push
push
adcb
push
jns
adcb
or
sbb
adc
lods
mov
mov
push
jg
cli
sbb
pop
fsubs
pop
adc
push
inc
inc
nop
push
lret
les
add
leave
pop
pop
cltd
push
enter
jmp
cli
filds
inc
jns
pop
call
and
jno
test
mov
xchg
popa
enter
fadds
mov
push
adc
push
fs
lea
dec
pop
icebp
loopne
jns
cs
dec
test
push
cmp
popa
aam
inc
mov
idivl
or
xor
movsl
in
mov
xchg
dec
push
fsubrs
push
sub
adc
insl
sbb
and
push
push
push
pusha
adc
leave
push
xor
and
sbb
xor
and
inc
cmp
add
xor
push
cltd
fcoms
repnz
cmp
mov
or
xchg
imul
sub
lods
adc
inc
enter
or
jle
push
movsb
test
jp
inc
or
test
cmp
pop
xor
mov
push
leave
mov
sub
mov
mov
xchg
mov
fbld
add
test
cmp
xlat
hlt
pop
xchg
and
inc
in
pop
movsl
in
notb
ret
xor
insb
mov
cmp
lcall
or
sub
aaa
inc
and
mov
pop
mov
push
mov
adc
test
pop
les
pop
imul
test
and
sti
les
pop
sub
mov
iret
ret
pop
dec
cmp
mov
mov
nop
add
fidivrs
sbb
cmpsb
mov
out
repz
cmp
add
inc
test
cltd
pop
inc
enter
mov
mov
inc
int3
int3
mov
les
rcrb
in
bound
rclb
dec
out
mov
pusha
inc
inc
adc
adcb
sub
and
test
pop
pop
adc
push
fbld
and
push
mov
and
lahf
out
cmpsb
xchg
shrb
mov
inc
dec
dec
or
pop
daa
adc
sbb
in
mov
sub
inc
fisttpl
and
add
pop
pop
je
lea
and
xor
rcrl
inc
jnp
or
pop
push
loopne
andb
push
sbb
inc
push
movsl
push
jb
arpl
adcl
addl
inc
xchg
loopne
inc
sbb
add
xchg
ja
xor
mov
sbb
test
addb
andl
mov
push
adc
cmp
mov
push
mov
pop
push
outsl
int3
jmp
push
pop
outsw
xchg
and
add
fs
mov
mov
xor
enter
std
aam
stos
imul
sti
mov
or
in
sub
lds
nop
cwtl
cwtl
and
sbb
rcll
cmp
push
in
daa
pop
push
jge
dec
xchg
js
push
xchg
movsb
adc
sub
insl
lods
lods
in
adc
movl
imul
nop
xchg
or
shll
push
mov
in
dec
and
sub
daa
mov
xchg
push
fsts
in
adc
push
add
jne
add
push
insl
and
mov
cltd
insl
lock
in
lock
scas
pusha
imul
cwtl
mov
loope
xor
or
ja
loopne
enter
mov
sbb
mov
fisttpll
movsb
cmp
mov
mov
jg
mov
adc
sub
ret
gs
imul
insb
movl
lock
insl
adc
xor
fimull
aam
dec
outsb
mov
mov
lds
out
adc
xchg
insl
fildll
dec
sbb
mov
shl
dec
int
sub
rorl
int
hlt
pushf
rcll
int3
jns
jo
ficoml
addl
mov
sbb
xchg
movsb
lock
jns
mov
pop
popa
add
insb
or
in
das
or
and
sbb
fcompl
nop
rorl
rorb
sub
mov
mov
mov
loopne
adc
pushl
push
xchg
sbb
adc
xor
mov
mov
and
sbb
inc
jo
aam
les
nop
add
insl
adcb
push
fs
mov
push
je
jl
push
fs
push
test
fs
inc
push
lods
insb
pushf
sbb
fs
dec
movsb
lods
push
movsb
add
inc
dec
xor
jecxz
adc
and
insb
lods
push
leave
and
dec
mov
xchg
dec
xor
pop
xchg
dec
xor
je
mov
and
mov
leave
and
mov
xchg
dec
adc
fistpl
pop
decb
rcr
insb
jmp
rol
shl
imul
adc
mov
enter
inc
inc
inc
adc
xchg
add
je
pop
cltd
sysenter
push
inc
mov
repz
leave
mov
push
xor
pusha
sub
sbb
mov
test
mov
in
inc
xchg
pushf
movsb
in
inc
push
lods
mov
mov
push
cmp
int3
aam
sbb
insb
lods
push
sub
enter
test
enter
adcb
inc
xchg
arpl
mov
lret
les
popa
and
leave
in
addb
and
cmp
pop
daa
daa
daa
mov
bswap
les
lods
movsb
pushf
xchg
pop
dec
outsb
daa
mov
test
dec
es
sbb
push
adc
in
mov
jo
mov
sti
orb
xlat
push
and
nop
push
bound
push
pop
sub
lods
inc
stos
adcb
lcall
test
cmp
push
test
fcmovnu
add
pop
in
adc
cwtl
movsb
aam
sub
sbb
ret
adc
test
andb
cwtl
sbb
mov
jno
inc
sti
jo
loop
sbb
movsb
pushf
loop
cmp
push
ja
mov
mov
pop
leave
and
in
pop
pusha
add
in
dec
jp
inc
call
movsl
push
lods
sub
icebp
movsb
jge
adc
test
mov
arpl
shl
movsb
pop
pop
in
or
pop
sarb
pop
fisubl
inc
inc
idivl
dec
adc
imul
fs
and
push
pusha
mull
add
or
push
dec
push
nop
mov
test
jns
adc
cmp
in
jae
lcall
pop
sub
mov
imul
popf
dec
inc
xor
sub
adc
cltd
push
lds
imul
pop
adc
push
insl
dec
jo
or
insl
mov
sub
ret
inc
and
sub
shlb
arpl
and
adc
fildl
nop
or
loop
rolb
fadds
int3
inc
pop
insb
aam
rcrb
orl
inc
lock
add
xor
ret
or
cmpsb
std
rolb
loopne
pop
sbb
movsb
add
sbb
dec
sub
mov
and
int3
xchg
ljmp
daa
sbb
sbb
rolb
sbb
xor
and
nop
add
fsts
orb
scas
shrb
xor
xor
stc
les
mov
mov
xor
and
xchg
jl
fs
imul
or
es
pushf
xchg
ja
sub
xchg
rcrb
aas
xchg
pop
adc
mov
dec
jb
int3
pushf
mov
scas
popa
sub
inc
sub
aad
jo
leave
jle
sbb
subl
fwait
movsb
inc
imul
sbb
add
jne
jg
mov
adcb
repnz
repz
enter
sub
fwait
or
mov
dec
insb
mov
das
or
jl
mov
nop
movsb
xchg
movsl
mov
sbb
mov
xchg
adcb
push
mov
std
push
nop
inc
sarl
je
jo
add
sbb
or
cmp
imul
xor
fwait
sbb
in
pop
fisubl
adc
mov
sub
cmp
inc
add
add
repz
ret
sub
in
sti
shll
adc
dec
xor
add
and
push
lods
jbe
sub
push
movsb
or
in
add
sbb
mov
pop
pusha
scas
cltd
add
icebp
mov
xor
or
cltd
clc
inc
inc
push
nop
icebp
addl
inc
in
aaa
xchg
dec
int3
in
sub
popa
mov
or
xchg
or
lds
and
shll
inc
insb
adc
sbb
in
adc
das
scas
ret
sub
movsb
call
sub
pop
mov
sub
or
or
lcall
sub
push
out
pop
dec
ficompl
and
or
imul
push
sub
sbb
mov
and
or
sbb
or
repnz
inc
pop
push
test
jae
xor
mov
adc
sahf
xchg
mov
and
mov
addr16
movsb
and
xor
pop
xchg
ljmp
mov
je
popa
addb
movsl
and
or
mov
xchg
xchg
xchg
add
adc
leave
pop
jecxz
xor
insl
add
inc
movsl
dec
push
in
mov
inc
mov
dec
lea
push
and
add
add
fnstsw
or
inc
mov
notl
pop
xor
in
ret
mov
imul
add
lea
loope
sub
push
test
adc
test
push
sbb
scas
insl
xor
cltd
adc
or
pushf
sub
or
dec
popf
adc
sub
pop
mov
xorb
adc
cltd
fcmovnbe
or
js
icebp
sbb
fdivrl
mov
mov
xor
jno
mov
inc
aas
ret
xor
inc
outsb
std
xorl
adc
fdivl
xor
mov
xor
pop
subl
and
mov
insl
mov
call
lods
add
dec
mov
cmp
nop
sbb
dec
cli
mov
adc
xchg
jbe
ficoml
shlb
jl
mov
shrb
cmpsb
dec
fldt
test
je
nop
cmp
adc
popa
push
insb
or
repz
inc
mov
or
pop
push
mov
jmp
pusha
cmp
js
or
int
cmp
sbb
mov
add
jl
and
inc
push
xor
inc
adc
mov
pop
adc
je
add
shrl
mov
adc
add
inc
test
int
mov
xchg
jnp
stc
bound
xchg
lcall
imul
enter
je
sbb
xchg
mov
ds
xchg
ret
pop
nop
xlat
mov
insl
ret
sub
nop
popa
inc
add
push
nop
and
xchg
dec
test
adc
sub
inc
nop
add
and
jecxz
les
lcall
leave
mov
adc
nop
imul
jge
test
rcll
or
movsb
or
push
xchg
xchg
cmp
mov
cmove
nop
movsl
syscall
inc
push
or
roll
jb
mov
push
fcoml
data16
push
fdivl
pop
sbb
fisubrl
cmp
mov
inc
jmp
lods
mov
mov
inc
mov
cli
and
scas
cltd
lock
cld
inc
cltd
jbe
pop
sbb
pop
xor
pop
clc
sti
pop
fs
cld
in
leave
and
xchg
testl
ds
lahf
mov
jo
or
dec
dec
jb
jb
or
jge
loopne
addb
push
jle
push
sbb
inc
adcb
sbb
movb
or
cmp
fisubrl
sub
repnz
or
sbb
adc
and
dec
in
mov
movsb
add
push
and
adc
jo
sbb
mov
cmp
icebp
xchg
call
les
push
xchg
inc
sbb
xorl
mov
mov
enter
sbb
push
mov
sbb
fmuls
push
js
add
inc
adc
mov
adc
cmp
das
ret
es
or
divb
mov
mov
faddl
or
pop
mov
sub
mov
inc
inc
inc
rolb
cmp
xchg
jmp
mov
xor
jns
cmpsl
stc
mov
mov
out
out
adc
push
inc
pop
ja
std
popa
out
mov
add
push
inc
add
rol
data16
ss
dec
add
jmp
aas
jl
add
mov
push
jmp
xlat
and
push
aas
xor
inc
orb
jnp
mov
add
adc
mov
mov
adc
or
cmp
rclb
cmpl
pushl
mov
add
into
pop
adc
test
dec
push
fiaddl
idivl
out
imul
push
lea
dec
or
imul
adc
aas
push
jnp
inc
xor
fldt
pop
sub
sub
rcr
jg
popa
and
insb
outsl
arpl
imul
jb
sub
popa
arpl
jne
jb
outsb
je
add
jge
push
inc
add
push
insl
adc
in
lcall
inc
outsl
jb
js
je
jb
orl
or
outsl
jl
mov
add
add
jne
les
ja
neg
inc
and
jb
dec
push
add
add
cmp
add
add
or
pop
es
sahf
inc
xor
icebp
fiaddl
inc
push
cmp
popf
inc
loope
push
and
sbb
sub
push
insl
xchg
je
pop
pop
out
push
je
and
jae
dec
fisttpl
xlat
loopne
mov
cmpsl
insl
push
push
xorb
or
bound
fisubl
push
jne
imul
jbe
aas
imul
ds
jp
outsl
or
mov
dec
fs
lret
fidivrs
out
outsl
jmp
jo
sbb
arpl
xor
sub
fwait
stos
insl
sub
push
imul
scas
cmp
jne
inc
sub
data16
scas
loope
outsb
dec
sub
jecxz
insb
jp
sub
insb
lcall
repz
lahf
sbb
xor
push
outsb
inc
imul
arpl
or
sbb
addl
das
cs
icebp
push
cmp
outsb
bound
sub
push
arpl
mov
xor
je
loope
mov
mov
gs
fcoms
das
jb
ret
inc
sbb
fidivrl
cs
add
xor
loope
loopne
outsl
andl
mov
fidivrl
jg
xchg
cmpsl
popa
sub
push
mov
lahf
aaa
jg
jmp
iret
lods
inc
push
pop
fbstp
xchg
dec
fbstp
jne
jbe
jb
jne
stos
aad
jae
jbe
test
xor
fisubrs
js
das
rcrl
pop
or
pop
cmpsl
ss
ljmp
pusha
fwait
stos
lahf
outsl
aas
or
movl
or
push
mov
mov
xlat
aaa
roll
imul
jb
fs
imul
shll
push
jl
popa
jnp
xor
outsl
pop
sub
das
xchg
mov
add
pop
das
mov
sub
xor
jge
je
scas
cmp
mov
jg
sbb
lea
out
pop
push
pop
jecxz
push
push
push
inc
sbb
sub
shlb
xor
dec
addr16
or
inc
int3
add
push
cmp
or
inc
sbbl
iret
repz
adc
das
sbb
adc
adc
push
sbb
sbb
iret
repz
mov
sbb
out
cmpsl
stc
test
sbb
push
das
push
lahf
push
imul
clc
pop
jnp
cmpsl
xor
push
jns
jp
iret
sarl
cld
sbb
incl
dec
aaa
add
mov
mov
test
sub
sub
push
mov
lock
loope
lret
lret
test
cmp
imul
pandn
ds
mov
fbstp
or
push
fwait
mov
dec
add
sbb
fisttpl
mov
xor
add
add
das
das
inc
pop
sub
mov
shlb
dec
ljmp
das
inc
and
decb
popa
pusha
dec
inc
jmp
jl
scas
mov
jns
aas
or
pop
ds
inc
mov
xchg
sbb
ds
push
fcomps
daa
outsl
dec
and
or
pop
inc
das
fcmovnb
push
mov
pop
imul
iret
fcmovnu
ss
imul
out
insl
pop
jo
and
arpl
fcmovb
inc
pop
pop
jp
int
jmp
and
sub
aad
mov
fbld
fcmovnbe
outsb
push
ds
neg
iret
mov
insl
mov
jg
jnp
aas
es
cmp
cmp
add
in
jne
and
adc
add
das
das
icebp
aas
lods
rcll
addr16
push
inc
inc
arpl
bound
out
jle
dec
outsl
jbe
dec
arpl
inc
fiadds
aas
insb
jo
sub
addr16
xor
insb
xchg
pop
jg
push
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
mov
popl
outsb
jns
jg
addr16
popa
je
jb
sti
cltd
mov
adc
jae
jle
fsubrp
push
gs
sbb
dec
outsl
outsb
and
jae
cmp
jbe
inc
js
cmpsl
popf
aas
add
out
dec
or
pop
jnp
mov
jae
testl
inc
push
popa
insb
jne
ret
leave
inc
inc
mov
push
pop
or
lcall
daa
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
out
adc
dec
out
push
push
xor
pop
pop
jg
lea
popa
bound
gs
imul
jg
loope
jo
add
jbe
js
jp
jl
jle
popf
int3
ficoms
dec
adc
lcall
loopne
neg
test
pop
add
orb
jg
jge
sar
lret
jno
icebp
pusha
inc
mov
clc
jl
js
ret
movsl
add
xorl
xchg
and
imul
out
pop
push
cmp
dec
add
dec
dec
cli
gs
xor
popa
js
ljmp
addr16
dec
pop
daa
pop
cltd
mov
outsl
ja
ret
ret
cmp
int3
adc
mov
add
push
add
add
add
xor
cmp
push
add
xor
push
sub
pop
hlt
and
add
in
mov
pusha
adc
js
or
cmp
imull
add
add
addb
int
mov
add
xchg
test
add
outsb
shr
push
orb
jle
push
push
and
ficomps
jb
int3
push
cmp
add
nop
push
cmpsb
inc
jo
xchg
call
ja
and
pop
and
test
mov
xchg
cmp
pop
adc
insl
pusha
cmp
or
add
lea
in
dec
dec
mov
mov
xchg
dec
repnz
mov
sahf
or
cmpsb
adc
mov
cmp
out
ljmp
mov
enter
scas
xlat
jmp
add
sbb
cmp
dec
inc
sub
push
inc
jle
fstp
sub
ss
jmp
dec
inc
cmp
aam
adc
notl
fs
inc
sbb
jae
call
bound
je
outsb
data16
add
mov
out
je
xor
mov
test
jo
pop
lea
mov
outsl
js
push
xchg
cs
pop
leave
push
and
insl
jo
jo
and
and
shlb
aaa
insb
les
dec
imul
or
inc
mov
ficomps
cmp
dec
inc
jb
jns
daa
int
rcll
pop
and
pop
in
jns
mov
insb
and
pusha
dec
fucom
arpl
je
and
fs
pusha
fsubrl
push
jbe
clc
insl
outsl
rorl
outsb
pop
jb
and
shr
insl
xor
push
rorb
shrb
fs
insl
adc
lods
jp
pusha
xchg
or
fstps
fadd
pop
rolb
mov
cmp
push
cs
lds
cmp
or
les
fimull
pusha
push
push
fwait
push
lock
push
outsb
mov
fcomps
push
push
jae
or
dec
loopne
mov
pusha
insb
call
mov
clc
addr16
and
out
push
das
outsb
gs
mov
data16
inc
insb
and
dec
testl
cs
xor
dec
push
lods
jno
xchg
fisttps
addl
insl
jle
jb
inc
or
imul
adc
jg
sbb
fs
inc
sub
fs
xchg
das
sub
or
gs
sbb
popa
lds
inc
jg
sub
lds
push
or
pop
jne
pop
das
je
outsl
xchg
ret
daa
xchg
mov
popw
mov
sahf
negb
push
jl
cmp
or
ds
jmp
push
das
push
sub
loope
out
es
addr16
jle
sahf
jbe
xor
sub
add
add
jae
jl
sub
pop
or
sbb
push
sub
das
push
jb
aaa
jbe
mov
cmp
inc
and
xchg
pop
pop
jne
ret
mov
outsb
stos
addr16
push
jbe
xorb
adc
xor
gs
loope
xor
imul
push
add
cltd
hlt
dec
sbb
sahf
inc
out
imul
fs
jo
sub
inc
push
jl
out
sub
pop
cs
add
cmp
and
lahf
out
sbb
or
sub
sti
mov
push
call
sahf
out
push
aam
int3
enter
lret
dec
mov
lods
test
add
xchg
movsb
outsb
mov
mov
cmp
nop
mov
test
cmpsl
cmp
push
js
jo
jns
out
push
out
sahf
pop
push
push
dec
inc
xor
lahf
out
sub
or
sub
repz
repz
dec
out
ds
and
in
les
jo
fs
xor
out
sub
lock
repz
repz
pop
sub
xchg
repz
in
sub
push
pushf
jo
sub
repz
inc
push
and
adc
sub
pop
sub
lahf
add
in
push
and
and
lcall
pop
fmuls
addl
cmpb
mov
nop
add
add
xchg
lods
stos
push
add
andl
add
add
mov
dec
adc
add
sbb
mov
pop
faddl
jle
xchg
sub
inc
add
test
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
jmp
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
jmp
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
or
loope
and
mov
stos
test
and
pop
stos
add
lcall
gs
xchg
jo
je
inc
pop
shl
mov
outsb
push
xor
add
test
sub
icebp
mov
outsl
dec
arpl
ljmp
aas
sbb
jp
int3
popf
mov
or
std
cmp
push
setl
sub
shr
sahf
add
inc
adc
push
or
jg
dec
and
xor
push
dec
inc
dec
cmovns
data16
cmove
push
adc
sub
push
clc
jo
adc
lock
into
mov
mov
jnp
inc
loop
fsubs
in
outsb
mov
ds
pop
adc
clc
lret
mov
and
sbb
jb
jge
arpl
cmp
mov
jno
in
fstl
mov
and
sahf
jg
xchg
cmp
dec
imul
lret
shr
incl
inc
mov
mov
sub
fwait
repz
ds
sbb
pop
jns
ds
xor
incb
jg
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cld
push
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
ljmp
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
push
dec
mov
out
leave
ljmp
orb
popa
push
or
clc
andb
int
mov
leave
hlt
mov
mov
xchg
dec
add
scas
lods
dec
lock
xor
pop
mov
and
in
pop
pop
repnz
ret
aas
and
es
sbb
add
push
sub
fsubrl
ja
movsb
scas
pop
inc
outsb
out
jne
xlat
dec
loopne
jo
out
subl
or
popa
sbb
add
push
into
mov
xor
mov
mov
das
outsl
jns
lock
xchg
pop
and
dec
dec
aaa
jg
imul
mov
pop
shl
es
jae
jmp
sub
test
jae
xlat
scas
mov
dec
mov
cmpps
cmp
adc
jg
push
call
aaa
pcmpeqw
mov
mov
sti
or
jo
pop
daa
sti
lea
pop
and
je
and
jae
insb
lods
pop
call
mov
sti
jmp
xchg
loope
add
lret
xchg
loop
addr16
addb
testb
sbb
lock
mull
or
les
ja
lahf
test
mov
jae
jae
insl
loope
lock
jle
fs
mov
pusha
in
pop
cmpsl
mov
adc
or
movswl
mull
adc
fistpll
pop
out
sar
mov
mov
loope
and
xchg
insb
daa
jnp
cmpsl
lods
mov
mov
cwtl
ret
jecxz
adc
out
jo
loopne
sbb
pop
jns
rorl
jg,pn
mov
fisubs
mov
push
mull
mov
jmp
call
js
sub
popa
mov
aas
cmpsl
out
push
add
jge
ret
cmp
pop
pop
ret
gs
mov
adc
dec
jb
pop
roll
scas
xor
lahf
fiaddl
es
sti
cmp
divl
mov
daa
pop
rorb
mov
mov
outsb
xchg
inc
arpl
and
fisttpl
loope
fidivrs
xchg
gs
test
jmp
dec
dec
jp
xchg
pop
subb
bound
insb
mov
dec
sub
push
cmp
addr16
jle
mov
addr16
je
xchg
cmp
jge
mov
mov
daa
pop
arpl
movsl
sbb
rolb
gs
jne
test
call
push
ljmp
arpl
rol
mov
pop
inc
shll
inc
add
add
pusha
and
fidivrl
push
sub
ja
aad
pop
or
lret
sub
inc
sub
lods
and
inc
jne
or
and
into
or
jo
add
mov
mov
aas
pop
fmull
jb
push
adc
xorw
pop
incl
arpl
orb
mov
popa
sub
jno
jae
pushw
cmp
add
or
je
les
punpckldq
xchg
hlt
sub
out
out
add
jnp
inc
push
adc
aaa
sbb
xchg
pop
jnp
dec
fwait
test
das
push
cmp
jo
push
jecxz
scas
ljmp
sub
shll
push
cmp
dec
aas
loope,pt
push
jae
pop
daa
jne
push
out
cmp
add
dec
ret
outsl
dec
mov
mov
push
adc
hlt
mov
js
adc
push
addr16
mov
xchg
jne
rol
shl
daa
das
outsb
stos
pop
adc
shll
sub
shrb
outsb
sub
rcr
and
into
out
pop
dec
out
rol
push
fiaddl
bound
jae
jp
jnp
push
pop
mov
addr16
sti
and
fwait
push
sub
xor
mull
dec
sub
inc
jmp
lock
out
arpl
pop
adcl
outsl
jmp
bound
pop
test
pusha
inc
outsl
imul
jb
pop
fidivrl
ret
ja
es
imul
rorl
mov
scas
imul
fdiv
jge
mov
insb
xchg
scas
test
dec
add
push
imul
mov
add
ss
mov
shrl
outsb
xchg
inc
mov
lret
pop
je
mov
dec
por
insb
aas
pop
rcrl
mov
jge
inc
bound
outsl
mov
sbb
pop
sti
ja
pop
mov
mov
cmpsl
xchg
inc
arpl
andl
pop
push
aas
jl
or
testl
adc
mov
mov
inc
xchg
jl
pop
inc
les
maxps
push
dec
aas
imul
adc
sbb
mov
bound
aaa
js
push
das
add
out
push
cmp
mov
adc
scas
jbe
mov
jns
jae
pop
lea
push
adc
scas
jl
pop
js
mov
repz
loop
jmp
es
ja
add
sbb
mov
ljmp
cs
push
setg
arpl
pop
js
and
jno
cmpb
out
insb
sub
loopne
dec
outsl
lret
jl
jo
aaa
inc
hlt
loopne
cmp
mov
mov
xor
sarl
shrl
fisubrs
fs
mov
jmp
adc
xor
push
repnz
mov
repnz
icebp
js
ret
adc
xor
aas
addr16
imul
push
pop
and
call
add
push
sahf
cmp
pop
mov
fstpt
fisttps
cmpsl
mov
daa
inc
cmp
jae
in
cmp
dec
jae
arpl
push
jae
inc
inc
clc
mov
fisttps
mov
mov
icebp
push
push
pop
cli
add
jo
icebp
cmc
mov
jle
ret
incl
scas
ljmp
call
insb
inc
sub
dec
inc
or
sbb
xchg
mov
aaa
aaa
es
das
lods
in
jnp
outsl
das
sarl
cmp
js
mov
pop
mov
push
add
add
cmpsl
push
insb
xor
push
sub
push
sbb
gs
lock
pop
hlt
mov
push
xor
inc
add
in
cmp
lret
cmp
pop
cwtl
fsts
inc
dec
sub
or
push
mov
repz
dec
ds
push
jp
out
cmp
cmp
out
add
cwtl
jns
imul
repz
insl
mov
jno
mov
rcrl
push
pop
jbe
xor
out
inc
pop
mov
add
jge
lds
aas
pop
sub
sub
xchg
pop
push
mov
push
ficoms
jns
movsb
push
mov
mov
call
jnp
pop
sub
fcoml
push
sahf
out
sahf
cmp
dec
loope
out
jns
or
dec
push
outsb
loop
and
pop
mov
and
push
or
lods
test
and
inc
fisubrl
data16
xchg
mov
cmpsb
push
push
add
ss
add
cmovge
popa
nopl
push
jae
fs
and
popa
outsb
arpl
push
gs
insl
pusha
mov
popa
jne
or
and
dec
xlat
mov
lahf
or
xchg
sub
push
mov
shrb
cmp
lea
pop
push
js
jl
jl
iret
repz
xlat
pop
jne
pop
jne
iret
jnp
xsha1
cmpsb
push
mov
mov
cmpsl
stc
sbb
push
cmpsl
imul
iret
xor
bound
addr16
xchg
lea
cmp
aaa
outsl
es
bound
cmp
gs
je
cmp
fwait
push
xor
ds
jo
sbb
out
jb
mov
addr16
and
inc
sbb
and
mov
arpl
arpl
xor
cmp
or
cmp
add
dec
add
and
mov
je
ss
cmp
dec
imul
sbb
jae
data16
aam
imul
lds
mov
or
mov
pop
jne
mov
fwait
push
pop
mov
pop
cmpsl
xchg
jno
dec
mov
ja
inc
stos
or
sub
add
xchg
xchg
in
scas
inc
sbbl
push
adc
pop
inc
sbb
adc
push
sbb
and
sub
aaa
cmpsl
mov
mov
pop
int
js
mov
sub
mov
xor
pop
fwait
outsb
push
sub
and
xor
jp
jnp
loopne
into
push
pop
push
xlat
mov
or
or
imul
inc
xor
mov
dec
mov
sbb
and
cmp
sub
scas
pop
aas
and
and
and
cltd
sub
jle
sbb
and
inc
or
mov
mov
mov
aas
add
xor
dec
push
stos
inc
lcall
outsl
or
movsl
push
or
aad
lods
fstps
xchg
and
andb
mov
ret
hlt
push
inc
pop
dec
jg
outsl
adc
dec
stos
sti
lods
pop
or
iret
sub
addr16
faddl
gs
aaa
scas
addb
iret
test
test
dec
les
mov
sub
xchg
pop
inc
lahf
pop
mov
mov
movl
subb
add
ret
imul
adc
out
popa
push
inc
xchg
mov
add
add
dec
orl
shrb
iret
imul
das
pusha
xor
mov
mov
inc
jp
jno
imul
add
dec
filds
xchg
and
inc
lock
jb
fs
out
and
add
sbb
jbe
jae
inc
daa
xor
ret
mov
scas
add
into
into
xchg
dec
jl
mov
imull
fistpl
mov
add
lcall
inc
fwait
mov
mov
test
in
add
jecxz
adc
jg
aam
inc
dec
aas
push
xor
dec
out
pushl
sbb
or
xchg
aas
iret
add
popa
mov
adcb
push
out
add
mov
rolb
or
test
jg
push
lods
lea
xor
sbb
ljmp
inc
pop
and
or
sub
movhps
xor
addr16
mov
js
outsl
jo
fwait
jp
add
lods
dec
dec
int
jnp
jmp
out
xchg
addr16
movsb
dec
lahf
push
push
pop
repz
dec
xchg
insl
xchg
mov
pop
js
pop
mov
xor
or
adc
iret
dec
jne
testl
ja
ljmp
cmpsl
push
cs
inc
jo
lahf
mov
cmpsb
mov
jge
or
inc
jle
icebp
fsubr
out
sub
imul
outsb
jae
sbb
stos
pop
cmpb
sbb
push
repz
xchg
push
aad
xor
fldl
insl
inc
push
imul
sbb
aad
aas
roll
xor
or
mov
aaa
sbb
sbb
pushf
movsb
lds
ret
lcall
pop
add
jo
pop
adc
push
test
pop
mov
mov
loop
cmp
xchg
cmp
push
cmp
jmp
sub
insb
add
rol
dec
repz
addb
popa
xchg
stos
jmp
and
fistpl
fldt
repz
mov
das
lods
xlat
cmpsl
xchg
adc
lods
xlat
mov
mov
pop
pop
sub
outsb
cmp
lds
ret
ficomps
xchg
xchg
out
cmp
and
sub
fwait
jbe
pop
or
xorl
add
lcall
pop
xchg
bound
mov
jbe
pop
dec
mov
push
inc
fstpt
mov
add
adc
dec
out
cmp
jo
sti
xor
je
push
jo
setg
xor
add
pop
cmp
jbe
cmp
ja
outsl
daa
cmp
jl
pop
ja
arpl
loope
repz
push
lods
push
pop
xlat
sbb
fildll
pop
clc
movsb
xor
xor
inc
mov
pop
adc
or
push
push
xor
adc
xor
add
out
xor
fwait
cs
pop
aad
stos
xchg
xor
xchg
fs
out
add
inc
jne
arpl
fs
cmp
imul
ss
push
jmp
add
push
cmp
faddp
cmp
mov
sarb
xor
leave
adc
imul
das
outsl
dec
dec
ret
inc
dec
add
mov
mov
imul
das
add
dec
or
adc
sub
scas
push
cmp
and
push
mov
push
movq
lcall
push
or
xor
andb
inc
and
insl
lret
cmp
jmp
jo
mov
popa
xchg
pop
and
or
adc
sti
xchg
inc
cwtl
xor
or
jecxz
loopne
loope
mov
push
cmp
add
inc
sbb
rolb
or
cmp
cs
ja
and
rorl
pushl
ret
xchg
arpl
out
pop
adc
rolb
add
fwait
je
pop
sub
xor
scas
push
cs
add
fdivs
lret
sub
sub
or
jnp
sub
inc
es
shld
jb
mov
scas
push
push
mov
add
minps
aas
push
subl
lods
pop
lahf
sbb
inc
jle
dec
mov
loopne
pop
repz
mov
pop
test
adc
push
mull
and
sarb
out
adc
dec
pop
pop
outsl
iret
cli
push
mov
pop
nop
fdivs
dec
add
sub
jnp
popa
xor
or
adc
scas
sbb
fists
cmp
out
aaa
push
addl
mov
push
sahf
out
sahf
pop
sbb
jns
out
push
andl
ffreep
mov
cltd
or
sub
fadds
int
cmpsl
push
enter
adc
or
sub
mov
adc
adc
ss
in
mov
sub
xor
inc
mov
fistpll
adc
mov
mov
mov
outsb
push
popa
xchg
add
shrb
ret
sub
fwait
int
add
das
or
adc
repz
mov
pop
sbb
insb
fistl
lret
str
mov
cwtl
or
and
das
dec
push
daa
loopne
lahf
rcrb
sti
lahf
out
insl
inc
add
push
push
jnp
insb
or
mov
or
dec
xchg
int
mov
adc
adc
cli
adc
out
ds
push
push
mov
xor
pop
jb
and
sbb
inc
out
out
mov
and
fwait
and
and
xor
xchg
testl
bound
push
dec
insb
stos
roll
mov
je
add
dec
fldt
cmp
shrl
mov
jnp
push
adc
mov
jmp
adc
or
jo
push
fists
inc
dec
jae
pop
sub
loop
or
jge
sbb
shll
ret
sbb
outsl
add
das
adc
add
imul
les
add
pop
ss
popa
jmp
mov
mov
lea
loope
imul
xchg
incl
sub
mov
lods
add
sub
fwait
dec
loop
mov
adcb
sti
out
sbb
mov
lea
cmp
iret
lahf
and
movl
lods
scas
aas
loopne
orl
or
dec
xchg
iret
mov
shrl
pop
fneni(8087
popa
push
inc
adc
adc
xlat
and
dec
sub
xchg
push
push
pop
xor
stos
or
arpl
jae
mov
push
jg
mov
outsl
aas
imul
pushf
sahf
mov
scas
sub
testl
pand
mov
inc
push
push
add
and
fs
xor
faddl
das
outsb
sbb
arpl
add
pop
dec
xchg
jg
insl
and
mov
adc
pop
cmp
sbb
jmp
mul
cmpsl
push
push
insl
arpl
shl
mov
ja
repz
roll
pop
mov
in
test
inc
mov
mov
sti
lcall
push
loope
in
int3
jecxz
and
sub
cltd
dec
pop
fsub
mov
stos
in
in
loope
jns
pop
and
stos
sub
add
pop
or
fisubs
push
repnz
fnsave
pop
and
stos
in
cltd
js
pop
and
test
sub
loopne
mov
in
push
jb
dec
xchg
inc
scas
xchg
test
inc
xor
mov
push
add
cltd
dec
pop
mov
pusha
push
leave
stos
in
mov
pop
and
stos
sub
xchg
dec
and
test
enter
scas
xchg
js
fcom
leave
push
xor
xchg
push
call
inc
sbb
je
and
pop
and
stos
add
push
popl
mov
lahf
xor
pop
xchg
adc
inc
pop
rorl
jnp
mov
insl
and
mov
sub
add
adc
inc
sbb
xor
dec
fadds
mov
das
inc
adc
xlat
inc
xor
sbb
adc
push
jmp
push
aas
pop
push
push
sub
or
dec
add
or
popa
aam
aas
dec
movsl
xchg
ss
repz
dec
inc
data16
add
or
mov
inc
aaa
mov
aas
mov
push
xchg
push
adc
xchg
mov
and
shlb
push
pop
inc
jmp
mov
push
xor
nop
push
or
ss
push
cltd
leave
in
push
scas
sbb
aas
xchg
rcrl
neg
scas
add
scas
jg
fimuls
mov
pop
inc
and
add
movsb
daa
cmp
sub
loopne
adc
jp
les
jmp
fldt
or
sbb
pop
or
les
bound
filds
xlat
pop
xor
aaa
outsl
and
mov
addl
xor
adc
add
arpl
lahf
or
add
push
aas
lahf
mov
jmp
das
mov
sarb
pop
addr16
mov
add
and
scas
call
iret
inc
xchg
fwait
lret
daa
push
sbb
inc
inc
jl
or
out
push
pop
lahf
ret
outsl
outsl
push
push
mov
inc
hlt
add
loopne
popa
xor
and
rorb
xlat
pop
add
mov
pop
and
pop
ds
pop
sbb
add
pop
mov
push
out
or
xor
sub
sbb
mov
push
xchg
bound
jge
dec
inc
es
mov
xor
sub
sbb
inc
es
addr16
mov
adc
je
or
je
shrb
les
mov
sbb
mov
mov
add
pop
sbb
mov
es
jae
and
mov
cmpsl
pop
add
add
mov
loope
ja
imul
jnp
add
push
jbe
out
mov
xor
daa
xorl
xchg
ds
xor
cmpb
ja
rcrl
jnp
ss
mov
aaa
int3
fidivs
imul
dec
js
jae
imulb
pop
pop
daa
sbb
xchg
clc
xchg
push
adc
pop
fisttpl
roll
and
sbbb
jne
or
pop
dec
or
mov
jnp
sub
in
inc
pop
inc
push
movsl
push
cltd
push
scas
mov
push
push
pusha
ss
mov
push
call
in
outsb
xor
jnp
loope
repnz
push
ds
push
jl
aas
dec
sti
sbb
fcoml
pushf
push
add
mov
inc
inc
sub
xchg
lds
loopne
mov
jb
push
or
adcl
in
xor
imul
push
push
inc
mov
scas
xchg
insl
das
sti
scas
test
xchg
mov
pusha
loope
pop
xchg
pop
mov
and
push
iret
pop
mov
fistps
pop
mov
sub
pop
inc
mov
or
push
cmp
xor
mov
cs
pop
ljmp
xchg
mov
dec
mov
das
or
fwait
adc
movl
js
dec
and
arpl
mov
arpl
add
stos
outsl
jns
cs
pop
sub
out
fiadds
aaa
pop
movsb
adc
or
or
jo
ret
push
mov
mov
xchg
add
dec
aam
ja
xor
test
dec
sbbl
mov
lret
mov
mov
xchg
jge
mov
sbb
pop
jecxz
mov
mov
outsb
outsb
sub
shr
jmp
push
sahf
push
cs
cmp
cs
xor
insl
repnz
out
es
add
push
push
add
inc
insl
sbb
xlat
rclb
xlat
out
mov
jns
xor
jae
js
inc
mov
sub
into
xor
sbb
pop
pop
dec
pop
fidivrs
shlb
or
inc
or
add
mov
or
xor
fimuls
inc
cmp
xchg
out
mov
dec
or
inc
push
pop
mov
cmpsb
ss
push
dec
mov
loopne
push
bound
xor
xor
fisubrs
repz
cs
cmp
outsb
jb
loop
xorl
push
cmpsb
xchg
ja
retw
rolb
inc
data16
xchg
sarb
lcall
sbb
cs
fs
xor
inc
mov
cmp
xchg
dec
dec
daa
fst
out
cmp
mov
jge,pn
dec
push
out
mov
pop
pop
mov
push
es
ss
pandn
ja
pop
push
push
xor
dec
jb
xchg
jl,pt
inc
pop
dec
es
das
add
loopne
mov
fbld
data16
inc
pop
lock
xor
dec
cs
lock
inc
lock
push
outsl
push
push
cli
push
push
insl
sub
push
neg
jnp
insl
mov
inc
ja,pn
xor
lods
js
mov
push
jp
ds
fstpt
scas
jg
dec
das
ret
jnp
loopne
fisttps
jp
pop
pop
xorl
pop
outsl
dec
xor
js
push
into
xor
pop
adc
imul
test
sub
bound
ret
insl
cmp
shl
inc
stos
xor
jcxz
xor
xor
pusha
lods
movsb
mov
iret
lret
jae
jnp
ret
jnp
add
mov
xor
add
nop
das
add
push
arpl
adc
or
mov
xchg
mov
daa
adc
js
xchg
xor
cmpsb
lods
dec
les
popa
xchg
mov
mov
les
sbb
jae
arpl
nop
es
mov
mov
mov
dec
pop
lcall
pop
addl
test
fwait
das
arpl
mov
mov
pusha
aaa
stos
scas
repz
mov
inc
xchg
add
ljmp
lods
push
add
sub
sbb
mov
inc
mov
lret
and
lret
sub
xor
sbb
sbb
lahf
sbb
mov
sti
shll
mov
and
sbb
rorb
and
daa
sbb
mov
jmp
push
dec
inc
adc
mov
pop
insb
outsl
popa
fs
outsl
lods
shll
lea
sub
jbe
pop
inc
fs
sub
or
pop
sub
pop
imul
notl
js
sub
loope
jle
push
mov
pop
jmp
dec
sub
bound
sbb
gs
sbb
clc
cmc
arpl
add
pop
dec
inc
jb
data16
jmp
repz
pop
pop
aam
xchg
push
pop
outsb
jno
xor
pop
mov
cwtl
xchg
inc
cmpsl
adc
add
push
outsb
jl,pn
movsb
stc
cmp
push
jo
mov
imul
pop
pop
dec
ja
in
ja
ja
cmp
jne
jo
arpl
xor
shlb
xor
jae
pop
xor
movaps
mov
or
xchg
inc
push
sub
pop
mov
mov
cmpsb
or
cs
xor
mov
jbe
lods
or
lahf
mov
and
popf
inc
or
add
fwait
and
das
push
sub
or
rcrl
stos
lock
xlat
jmp
js
pop
fildll
mov
sub
scas
addl
add
jecxz
pop
addl
addr16
cwtl
push
dec
movsl
pop
sti
lods
ljmp
push
insl
push
mov
and
push
inc
fwait
iret
dec
cmp
adc
jo
loope
lahf
popa
fldt
and
xor
mov
repz
xchg
test
inc
pop
mov
mov
aam
xor
call
jnp
dec
aas
jl
stos
inc
scas
addl
sbb
mov
das
mov
daa
iret
fistps
bound
or
outsb
dec
arpl
jae
faddl
int3
daa
jbe
fwait
pop
mov
testb
lcall
jmp
fisubrl
psraw
in
add
aaa
sub
push
fs
xor
movsl
mov
fnsave
sub
pusha
aad
push
pop
adc
ja
outsl
mov
push
paddusw
movsl
sbbb
shr
inc
mov
xlat
push
dec
insl
inc
aas
xchg
addr16
imul
add
imul
loop
or
inc
mov
and
pop
test
cmpsb
push
jmp
and
xchg
fsubrs
xchg
push
lds
inc
pop
les
add
add
pop
shlb
mov
mov
sbb
ljmp
mov
mov
mov
lods
push
lcall
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
jmp
mov
jle
sub
mov
sti
pop
repnz
adc
pop
sbb
xor
fadd
addr16
dec
fsubs
sbb
insb
std
mov
dec
xchg
jecxz
in
bound
rorl
adc
adc
pop
push
and
daa
mov
xchg
push
in
or
test
pop
mov
insl
fs
push
xchg
mov
mov
inc
daa
test
push
push
and
sub
mov
xchg
movsb
loopne
xchg
mov
push
dec
repnz
mov
and
jnp
leave
jae
sub
hlt
fwait
das
mov
in
pop
aam
xchg
out
xor
cmp
movsb
dec
xchg
test
je
outsl
xorb
mov
or
fistps
push
pop
inc
mov
inc
mov
imul
dec
xchg
fmuls
cmp
scas
pop
jnp
pop
daa
je
pop
add
aam
je
jnp
cmp
ss
jge
mov
sub
adc
xchg
ljmp
adc
loopne
inc
addl
loop
cmp
jge
aad
cwtl
adc
jae
dec
add
lock
daa
dec
inc
jmp
xchg
imul
cmp
popa
outsb
imul
add
sbb
das
xchg
pop
mov
movl
pusha
daa
daa
xor
pop
push
push
mov
fdivrs
jae
shrb
test
xlat
pusha
test
mov
pop
mov
pusha
xchg
xlat
push
jo
dec
and
rcr
push
push
scas
mov
mov
cmp
or
jo
pop
bswap
or
mov
inc
xor
jne
addr16
nop
cmpsb
lea
comiss
mov
mov
jne
mov
call
dec
or
mov
xor
out
fistl
push
dec
jae
xlat
mov
outsl
push
jl
arpl
mov
sbb
inc
fisttps
scas
dec
repz
dec
scas
pop
cmpsl
push
sbb
aaa
push
roll
je
add
sbb
mov
sbb
xchg
cli
aas
push
xchg
cwtl
ss
sbb
imul
fs
fldt
imul
xchg
jle
in
repz
es
mov
into
out
xchg
js
push
imulb
push
cmp
mov
pop
dec
pop
xchg
cltd
sbb
adc
std
cltd
xorb
or
push
mov
mov
add
pop
in
xor
sub
mov
loop
imul
cmc
repz
stos
xchg
adc
data16
cs
push
test
ja
xor
sysret
inc
movd
mov
xorb
pop
cmp
fbld
sub
xor
nop
clc
aam
dec
hlt
mov
insl
repz
xchg
xchg
cmpsb
call
jo
mov
call
sahf
mov
cs
repz
cmpsl
int3
lock
inc
sahf
out
inc
inc
dec
pop
setbe
mov
mov
clc
push
inc
addb
xor
sahf
out
daa
xor
aaa
icebp
addl
push
aaa
iret
jnp
ret
mov
push
outsb
push
jle
mov
jns
xlat
clc
or
mov
or
sub
aas
push
push
push
test
mov
ds
push
xor
jns
ret
pop
push
push
and
pop
sub
clc
mov
pop
push
fistps
int
or
dec
out
jns,pn
jnp
ret
push
imul
lods
jnp
and
jbe
adcl
in
stos
dec
cmp
sti
xchg
jns
aas
pop
es
xchg
and
mov
mov
inc
sbb
leave
inc
outsl
lcall
xchg
ficoml
dec
das
jns
out
dec
imul
push
and
in
dec
repz
sahf
inc
sti
lea
jno
repz
dec
jmp
dec
iret
repz
sub
jmp
or
pop
mov
in
push
arpl
repz
xor
jns
out
ja
mov
roll
das
jmp
and
jg
dec
sbb
scas
jg
ja
sub
adc
stc
add
clc
push
iret
adc
adc
push
mov
xor
adc
mov
add
mov
pop
jb
mov
loopne
mov
dec
or
adc
mov
int3
push
and
pop
sbb
enter
adc
stc
repz
or
adc
daa
enter
or
add
push
test
insb
adc
cmp
test
jl
mov
cmp
rcll
std
xlat
add
mov
std
iret
or
dec
push
add
ja
outsb
outsb
inc
mov
xor
push
js
cmpsb
mov
imul
cmp
xor
dec
push
adc
inc
ja
pop
xchg
mov
and
lods
xchg
pop
mov
fisubrl
add
dec
jo
js
rcrb
push
push
dec
pop
inc
outsl
xor
test
je
add
adc
fadds
popl
xchg
cmp
shrb
mov
out
pop
mov
fidivrs
pop
call
jb
pusha
xor
sbb
dec
cmpsl
addb
or
jno
inc
lahf
mov
pop
sub
lods
cltd
out
movsl
adc
cmp
addr16
loop
mov
pop
sbb
cmp
syscall
mov
xchg
jo
fwait
push
jo
inc
mov
mov
xchg
xchg
bound
inc
adc
mov
mov
jecxz
xor
in
mov
fisttps
fiaddl
dec
loope
or
cmpsl
fs
js
pop
dec
pop
jb
add
rcr
pop
xor
testb
ljmp
data16
sahf
add
dec
inc
xchg
test
mov
repz
add
and
mov
push
cmp
and
outsl
dec
icebp
movsb
jae
xor
daa
add
and
fcompl
xor
and
mov
pop
cmpsl
aaa
outsl
dec
addr16
sub
dec
popl
jbe
jo
xor
pop
fucomip
or
dec
bound
outsb
push
jnp
pusha
dec
pop
dec
repz
inc
pusha
gs
sbb
insl
add
jg
adc
cmp
rol
dec
push
jb
addr16
add
scas
push
inc
sub
mov
jmp
imull
push
shlb
push
shll
add
sbb
rol
inc
pop
test
add
testl
push
add
daa
loopne
aam
mov
das
sub
sahf
adc
sub
inc
sti
push
adc
push
push
pop
mov
loopne
cmpb
addr16
arpl
mov
mov
iret
fs
or
das
push
mov
cmp
inc
cmp
sti
push
cmpb
ja
jo
pop
push
xchg
xor
pop
out
add
lret
dec
mov
mov
or
push
sub
pop
pop
dec
mov
mov
mov
out
test
daa
popw
outsl
imul
jne
aaa
xchg
add
xchg
mov
mov
das
testl
outsl
mull
insb
adc
imul
popl
add
pop
dec
add
push
fisttpl
cmp
push
loopne
inc
addl
bound
ret
fidivrs
push
jecxz
out
inc
into
inc
add
adc
push
bound
cs
lahf
imul
add
cmp
out
add
shl
sbb
push
repz
mov
roll
aad
push
dec
loopne
sahf
adc
pop
inc
add
fcmovbe
dec
mov
popa
cmpl
adcl
addl
pop
or
pop
pushf
add
push
pop
outsl
fwait
or
mov
sub
mulb
pop
addr16
mov
inc
inc
push
inc
daa
cs
sub
cmp
dec
push
pop
pop
out
or
adc
push
pop
pop
jno
add
inc
jbe
mov
inc
aaa
push
mov
pop
bound
inc
push
pop
sub
and
lret
mov
dec
lock
fbstp
add
arpl
mov
cmpsl
push
decl
jg
push
ret
and
testl
pop
pop
inc
cmp
es
inc
jns
je
pop
and
outsb
out
mov
or
xchg
lret
outsl
das
adc
and
scas
or
jbe
dec
ja
popa
insl
jo
je
out
outsl
movsb
adc
addr16
jo
jae
daa
pop
ret
pop
jno
outsl
xor
push
out
push
bound
cmp
cwtl
pusha
or
pop
pop
mov
mov
jns
je
jne
or
or
cmp
test
scas
ja
pop
insb
and
dec
jae
inc
adc
or
dec
ss
bound
mov
je
inc
dec
mov
push
inc
add
imul
arpl
sub
mov
iret
jbe
popa
sbb
retw
or
push
push
mov
testl
out
pop
stos
pusha
and
push
loop
sbb
bound
cmp
sti
movsb
push
dec
ret
jae
sub
pop
adc
test
dec
les
mov
push
jmp
jo
push
pop
xchg
push
mov
cmpsl
pop
stos
add
xor
push
xchg
push
push
add
adc
emms
or
sub
jns
jb
sbb
adc
mov
movsl
ret
mov
xlat
mov
out
or
fstpt
js
aaa
inc
insb
ret
xchg
pusha
sysret
daa
les
add
arpl
jnp
adc
push
mov
add
push
pop
decl
xchg
incl
dec
inc
dec
push
xchg
add
add
clc
and
sub
idivl
ret
jbe
add
add
pop
add
or
jb
push
addr16
add
das
decl
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
incl
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
lcall
out
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
pushl
cs
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
mov
test
mov
mov
call
cltd
test
push
push
sar
jmp
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
decl
js
js
test
add
mov
mov
movsb
mull
jno
addr16
decl
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
jno
loop
cmpsl
and
dec
adc
sbb
daa
lods
fisttpll
ds
das
sbb
or
imulb
daa
daa
daa
push
and
out
in
jg
pop
inc
inc
inc
push
inc
pop
and
or
aas
js
insb
in
imul
or
outsb
push
add
inc
pop
imul
pop
gs
in
push
sbb
pop
aas
ds
push
sbbl
popw
push
sbb
aaa
push
cld
shrb
sbb
test
inc
mov
outsl
fisubl
or
cmp
fwait
int
push
lods
mov
inc
cmp
std
outsb
pusha
mov
fsubrp
push
pop
mov
cli
das
aas
inc
inc
xor
fistps
mov
data16
push
adc
call
sbb
std
sub
push
mov
or
cmpsl
jge
mov
push
mov
movsl
and
cmp
es
cmp
add
jecxz
or
icebp
mov
lahf
dec
pop
insb
push
adc
testl
scas
nop
xlat
mov
mov
cmp
xor
paddusw
push
xchg
jne
mov
out
push
pusha
push
dec
jb
xor
mov
out
push
imul
add
inc
clc
out
and
bound
or
push
jnp
push
es
insb
jns
mov
je
and
mov
mov
popa
stos
and
in
xchg
rolb
out
adc
lcall
and
xor
and
lock
int3
and
ret
dec
inc
mov
iret
int3
and
push
push
jle
insl
adc
insl
outsl
fs
gs
jo
jns
lods
pop
in
mov
adc
dec
add
insl
jne
rorb
push
or
loop
add
or
addr16
insb
lret
xchg
cmp
and
insl
inc
xor
jae
inc
insb
mov
jbe
fdivrs
xchg
inc
popa
imul
jle
xor
outsl
jo
test
sahf
dec
sub
sbb
xor
mov
xchg
inc
or
inc
xadd
dec
and
sti
sbb
inc
cmovo
outsb
movswl
cmpb
aas
adc
in
nop
jo
maxps
loopne
ljmp
and
xor
mov
dec
and
mov
imul
add
mov
sbb
outsb
jnp
cwtl
pop
cmp
fsubs
aaa
iret
shlb
mov
enter
fidivs
inc
push
pop
das
inc
add
outsl
pop
iret
js
ja
outsl
insl
lods
mov
and
pop
daa
les
leave
aam
daa
outsl
fnstcw
sbb
daa
mov
inc
sub
fs
mov
mov
inc
dec
fcompl
scas
fisttps
inc
test
ficoml
add
jl
sbb
test
mov
in
add
stos
ja
add
sub
mov
or
outsl
adc
outsl
fiadds
inc
push
dec
in
leave
lds
mov
xor
cwtl
mov
add
fsubl
mov
enter
pop
in
fsubr
in
adc
inc
inc
add
test
and
mov
xor
xor
xchg
dec
outsl
sahf
or
xchg
js
jo
inc
cs
dec
js
in
nop
out
lods
mov
mov
fldt
int3
aas
jns
push
roll
clc
add
fstpt
mov
int3
push
push
pop
push
movsb
das
mov
sub
daa
outsb
xchg
lods
jne
sahf
xor
stos
sarb
addr16
leave
jae
iret
push
aam
lock
aam
mov
faddp
hlt
and
xor
inc
push
nop
fisubrl
dec
aas
ja
inc
sahf
fstps
and
ret
lds
push
dec
outsl
movsb
inc
pop
fiaddl
add
jo
adc
pop
lock
cmp
inc
daa
jle
or
mull
inc
enter
imul
push
loopne
nop
das
pop
fwait
loopne
sbb
imull
jns
les
out
and
add
je
fsubr
dec
in
adc
and
sub
push
sub
add
jo
mov
mov
daa
add
subb
mov
jns
andb
and
in
dec
enter
leave
xor
inc
mov
test
push
xchg
cld
insb
rclb
jl
scas
iret
les
pushl
popl
jbe
out
int3
testl
pop
mov
jl
or
sbb
dec
in
dec
lahf
or
rorb
enter
insb
ror
outsl
insl
xorl
enter
mov
mov
pushf
xor
es
and
or
xor
or
shlb
aaa
and
lahf
pusha
jns
mov
ja
mov
lods
mov
mov
fcoml
cld
mov
fsub
sub
xchg
sub
pop
cmp
push
shl
fsubrl
adc
push
fistpll
or
cmpsl
or
adcb
daa
frstor
nop
out
cmp
in
in
out
clc
scas
cmpsl
cmp
repnz
aam
orl
fisubs
insl
jg
mov
sahf
out
mov
nop
or
adc
jns
loopne
nop
fbstp
in
and
fistps
dec
push
xor
cmpsl
jle
or
cmpsl
and
jns
or
mov
push
cmpsl
js
cs
dec
int3
fdiv
pop
and
bnd
dec
int3
fwait
nop
iret
test
xor
or
inc
push
and
cmpsl
js
idivb
dec
mov
mov
pop
test
lahf
or
in
enter
inc
sahf
aam
enter
nop
clc
adc
and
nop
mov
xor
lahf
clc
movsb
stc
lods
ja
and
fs
jbe
jns
dec
lahf
cs
nop
fs
mov
cs
or
push
mov
js
fadd
adc
cs
jge
sub
xorps
enter
jg
test
insb
push
pop
push
cmpsl
enter
pop
loopne
pop
enter
rcr
loopne
pop
jb
lods
adc
add
push
shll
and
push
and
addr16
lods
out
cmpsl
jg
cmpsb
push
pop
enter
fldenv
and
insb
inc
cmpsl
push
insb
dec
mov
mov
enter
add
mov
or
sbb
lds
or
icebp
cltd
nop
iret
loopne
ficompl
pop
pop
mov
aas
cmpsl
jg
clc
pop
dec
repz
mov
sbbb
push
cmpsl
mov
pop
hlt
add
jb,pt
cmpsb
fs
pop
cmpsl
hlt
fwait
sub
pop
nop
dec
fstpt
pop
sahf
push
lds
aas
pop
repnz
ja
rcrb
mov
ja
lock
addr16
or
ja
mov
fiaddl
rcr
push
imul
mov
inc
jbe
dec
inc
jl
rorl
pop
imul
jbe
iret
add
js
lock
inc
or
dec
enter
fldl
push
push
movsb
insl
sbbl
sahf
outsl
dec
int3
test
addr16
lahf
push
add
int3
inc
ja
test
inc
lock
clc
add
push
lock
test
aam
shrl
ficoms
dec
in
cmp
lahf
dec
inc
dec
and
fidivs
jmp
push
pushf
fdivrp
push
orl
inc
add
mov
jo
in
and
int3
cwtl
sbb
sbb
clc
es
inc
fists
adc
lcall
int
rcr
lahf
int3
xor
adc
add
adc
pop
push
inc
rcl
mov
loopne
push
inc
jg
sarb
xor
loopne
mov
pop
push
dec
inc
ja
stc
dec
mov
pusha
fs
mov
mov
fadds
jns
lods
sub
inc
jo
or
lahf
nop
inc
inc
ds
jb
mov
subl
mov
add
daa
adc
insb
lahf
in
inc
imul
adc
lods
mov
shl
outsl
mov
cmpsl
aam
add
inc
add
inc
adc
lahf
insb
insl
adc
lahf
enter
fs
pusha
jo
jb
pop
fs
mov
iret
test
mov
pop
enter
mov
repnz
adc
pop
enter
lock
sahf
or
inc
jecxz
pusha
jle
or
in
lahf
adc
inc
sahf
or
mov
fisttpll
nop
inc
les
pop
in
jae
pop
enter
sub
in
inc
xchg
outsl
insl
push
lret
inc
outsl
aas
jns
iret
mov
lcall
lds
ror
pop
and
mov
cmp
fdivr
or
or
out
testb
inc
stc
pop
insb
shrb
inc
in
jns
or
clc
imul
add
mov
mov
aad
jl
ror
or
jmp
lock
enter
in
out
add
add
lock
out
pop
add
daa
aas
daa
mov
xor
daa
add
fcoml
mov
scas
mov
push
xlat
mov
dec
dec
repz
push
xor
or
push
push
addb
aas
call
cwtl
xchg
pushl
fiaddl
inc
pushf
ja
loope
fnsave
add
xchg
pop
repnz
dec
aam
insl
and
jg
in
xlat
popaw
adcb
xchg
mov
dec
cmp
dec
push
push
sbb
daa
aas
addr16
xor
pop
add
inc
outsl
ja
dec
daa
sbb
test
dec
dec
scas
in
inc
inc
in
scas
in
xor
scas
in
scas
sub
and
lods
in
add
add
pop
mov
out
xchg
in
icebp
mov
sarl
enter
pop
es
xor
out
push
and
lock
out
mov
mov
clc
out
repz
sti
mov
ds
push
push
adc
in
movsb
mov
xor
push
je
pop
cmp
add
aad
sub
fisubs
mov
push
xchg
pushf
in
dec
aad
orl
int
sub
dec
inc
ss
fildl
xchg
cmpsl
jns
adc
nop
add
mov
nop
jnp
sbb
mov
mov
push
in
sti
fdivrp
push
inc
out
cld
inc
mov
lods
jmp
dec
xchg
ja
and
mov
and
xchg
dec
and
jbe
inc
dec
outsl
xchg
sti
or
leave
inc
sbb
push
loopne
cs
fsubr
fmuls
movsl
dec
outsl
add
and
fs
pushf
inc
jge
adc
in
lcall
dec
in
mov
inc
cmpsb
fistps
leave
cmp
lahf
clc
cmp
pop
and
pop
ret
lods
pop
scas
add
outsl
out
mov
xor
fnstsw
and
fbstp
cmp
add
aam
test
call
sbb
out
scas
add
sbb
ljmp
pusha
and
xor
xor
xchg
in
nop
out
out
out
outsl
xchg
popa
sub
add
sub
or
sub
xor
jbe
into
js
aaa
js
cwtl
repnz
repnz
mov
push
hlt
out
movl
sahf
sbb
lock
leave
add
dec
jg
or
ja
adc
jg
mov
sub
or
mov
or
repnz
cld
fimuls
icebp
outsl
add
mov
fbld
bound
and
mov
fiadds
and
insb
add
cwtl
pop
scas
sbb
push
xor
pop
outsl
js
ret
push
out
dec
fisubs
jae
pusha
cmpsl
or
daa
add
je
orb
cmpsl
in
or
xor
push
aaa
stc
out
pusha
xchg
sub
add
fwait
test
call
and
es
xorb
call
loopne
subb
mov
loope
fimuls
xchg
push
cwtl
aam
jg
push
adc
push
call
addr16
and
xor
aaa
inc
repz
push
xor
pop
sbb
loopne
xchg
mov
ss
js
test
or
repz
mov
pcmpeqd
mov
leave
xchg
lock
outsl
js
in
xchg
outsl
jg
sub
xchg
loop
hlt
jge
jne
daa
testl
cmpsl
jge
scas
push
movsb
clc
push
mov
hlt
scas
mov
testb
and
and
dec
cmpsl
bound
loope
adc
cmc
push
pusha
mov
dec
xlat
or
decl
idivb
add
pop
jne
daa
xlat
or
shl
pushf
xchg
dec
inc
divl
add
test
fdiv
add
fimull
xor
popa
xor
outsl
and
sub
push
mov
xchg
cmp
nop
imulb
mov
divb
subl
stos
pop
nop
divb
call
aaa
sbb
outsl
loopne
and
jecxz
and
pushf
pusha
divl
scas
es
pop
mov
add
mov
call
jg
hlt
ja
loop
fisttpl
sbb
and
jg
in
dec
scas
addr16
add
xchg
or
fs
add
sub
das
and
and
push
jb
jge
mov
inc
aad
lods
aaa
pop
in
jl
sub
sub
pop
cmp
ss
cmp
dec
stc
aaa
add
movsb
or
leave
test
mov
pop
iret
int3
xlat
jo
push
xor
sahf
iret
aad
sub
daa
loopne
xchg
pop
leave
in
pop
cli
daa
or
add
insb
repz
pop
cwtl
push
xchg
add
call
dec
int3
js
or
outsl
mov
xchg
aas
add
decb
cli
cmpsl
sbb
and
mov
decl
xlat
xchg
push
inc
sti
das
outsl
add
or
inc
cs
xchg
movsb
inc
outsb
rclb
push
test
mov
add
cld
push
xchg
mov
pop
andl
push
xor
outsl
out
add
or
inc
lcall
inc
dec
loopne
or
jb
arpl
out
daa
or
add
addb
cmp
std
addr16
or
negb
jl
aas
addr16
fisubs
daa
lods
int
lds
iret
movsb
in
sahf
aam
addr16
gs
in
hlt
std
push
mov
push
dec
divl
mov
push
inc
inc
add
decb
imul
incb
nop
decb
or
rol
pop
repnz
shl
rclb
adc
orl
lahf
fsubl
arpl
clc
out
mov
jl
les
clc
sub
xchg
or
clc
lods
push
mov
addr16
stos
int
shrl
xchg
rolb
push
dec
and
jae
dec
repz
xchg
jbe
iret
repz
in
sub
jns
xchg
mov
cmp
shrl
pop
je
out
jns
out
mov
repz
mulb
mov
stos
rcrl
pop
mov
shl
out
sarl
outsl
daa
mov
push
fsub
jns
out
xor
sti
cmpsl
stc
cmp
push
nop
insb
or
jns
pop
mov
cmp
fs
mov
iret
repz
push
jg
shl
sahf
out
ds
xchg
sub
ret
cmp
repz
es
inc
lea
cmpsl
stc
and
stc
cmp
repz
xchg
mov
sti
push
cwtl
out
sahf
cmpsl
inc
xchg
mov
jl
out
add
xchg
push
andb
iret
shll
cmc
and
lahf
out
testb
push
jge
lcall
ljmp
jns
cli
pusha
lahf
sahf
sarl
cmpsl
stc
pop
mov
repz
out
sbb
jl
out
mov
cld
sarl
movsb
imul
lret
inc
jns
jns
imul
out
push
dec
outsb
call
and
stos
cmpsl
stc
cmp
pop
cltd
aam
stos
inc
out
jl
arpl
lods
iret
sarl
fcomps
scas
push
fdiv
int
imul
lds
lcall
call
sub
ds
sarl
xchg
mov
sbb
andl
lcall
dec
in
out
testl
shlb
mov
cmp
push
mov
lahf
out
xor
sahf
cmpsl
stc
xor
and
dec
xchg
fnstsw
iret
sarl
cmp
lahf
out
inc
mov
sub
push
imul
cld
das
ret
out
out
or
pop
push
xchg
decb
lock
popf
push
out
ds
push
mov
enter
lahf
out
ds
je
repnz
repz
lret
inc
push
mov
out
int3
jle
sbb
popa
sarl
xchg
shr
iret
xchg
out
lcall
mov
repz
mov
sahf
popf
cli
jb
mov
lock
out
ds
sarl
inc
aad
push
mov
cld
aaa
lea
xlat
dec
sahf
out
cmp
mov
lcall
loop
fisubl
int
jns
fisubrl
jl
out
jmp
fsubrl
int
fdivp
sub
jne
lahf
data16
push
in
out
out
inc
jmp
fsubrp
push
in
in
push
or
xor
int
fstps
movsb
movsl
cmc
inc
testb
insb
ss
stc
pop
sti
jecxz
or
int
sbb
xchg
add
add
in
cmp
add
popf
loope
fwait
lahf
int3
nop
push
inc
cs
mov
xchg
cmpl
aas
or
dec
sub
or
mov
mov
xor
mov
daa
out
cmp
aaa
repz
and
int
inc
pop
mov
insl
repnz
es
insl
rcl
jg
adc
inc
leave
xchg
aas
test
cltd
sarb
cmp
test
xor
mov
dec
jecxz
jg
mov
dec
cmp
aas
cmovae
sbb
lds
jbe
sub
jbe
xchg
xor
ljmp
adc
aas
mov
cmp
lahf
out
cmp
mov
orl
lcall
cltd
push
inc
or
ss
and
fcomps
xor
inc
cmp
dec
jg
leave
leave
in
pop
dec
aas
in
out
mov
push
inc
pop
pop
jo
daa
and
sbb
jbe
add
in
je
push
aam
in
add
into
sub
or
movsl
mov
ffreep
jb
jns
adc
and
jbe
pusha
mov
push
lahf
mov
jb
push
sahf
xchg
ja
js
mov
mov
cmp
mov
add
push
sbb
pop
mov
inc
mov
enter
jl
es
jne
stc
add
or
cs
sbb
mov
jmp
inc
xchg
iret
fiadds
pop
inc
leave
addr16
push
mov
shlb
jno
aas
shll
leave
mov
add
hlt
jle
or
je
adc
lahf
icebp
xchg
fisttps
stc
push
ja
inc
repnz
pop
addr16
ja
xchg
fisttps
dec
cs
cmp
mov
xchg
cltd
clc
pop
or
mov
das
xchg
dec
es
or
pop
adc
daa
push
dec
sahf
flds
pop
and
push
enter
mov
and
and
in
mov
divb
push
xchg
mov
fildll
fxch
and
shll
pop
and
xchg
sbb
inc
mov
maxps
or
inc
popf
popa
ja
pusha
xchg
scas
push
dec
cmpsb
adc
jo
pop
xchg
pop
rcrb
daa
mov
add
stos
add
and
fistps
push
fimuls
sbb
sub
inc
testl
fadds
sbb
pop
xchg
mov
mov
pop
sbb
fsubl
adc
fsubrs
scas
insb
add
add
add
sbb
mov
sub
pop
insl
xchg
add
fs
push
pop
leave
and
repz
scas
cmp
mov
mov
into
aad
push
pop
mov
cmpsl
push
mov
xchg
adc
sbb
adc
addr16
mov
mov
push
dec
push
pop
in
xchg
fldt
jo
addr16
and
movsb
stos
jp
pop
daa
fcoms
addr16
popf
and
adc
lcall
pop
add
loop
adc
push
out
movsb
xor
xchg
mov
mov
add
add
mov
cmp
outsb
stos
add
out
pop
jbe
jle
add
dec
dec
dec
mov
dec
jb
sbb
rorl
fwait
dec
in
cmpsl
hlt
cld
dec
mov
add
or
adc
fldz
cs
pop
aaa
push
lea
inc
pop
dec
xorps
imul
jae
mov
mov
mov
xchg
mov
sahf
out
pushf
mov
push
add
fnstsw
fisttps
or
imul
or
or
enter
or
sbb
es
adc
fldt
pop
pusha
punpckhbw
jnp
pop
sahf
movsb
adc
mov
xchg
int
cmp
mov
dec
push
in
dec
dec
sub
mov
in
repz
add
cwtl
push
push
jb
mov
inc
enter
lock
test
cmp
sub
out
sbbl
in
xchg
and
mov
jb
loop
test
orb
nop
push
nop
sub
jo
fiadds
pop
dec
nop
out
pop
scas
mov
out
push
jns
push
sbb
daa
leave
add
pushf
pusha
incl
jne
outsl
stos
cmpsl
mov
out
pushf
ret
add
add
insb
jns
fistl
notl
jnp
pusha
pop
mov
inc
filds
pop
jns
mov
sub
stos
dec
jb
sub
addr16
push
dec
addr16
add
leave
inc
repnz
pop
roll
mov
in
mov
add
add
lahf
cmc
xchg
xchg
dec
sub
xchg
fdivr
sbb
mov
fs
decl
scas
add
js
mov
xor
rorl
pop
push
cmp
ret
xchg
incl
lea
push
lods
xchg
xchg
cmp
sbb
push
pop
iret
daa
jne
popf
xchg
rcr
daa
loop
add
push
add
pop
pop
xchg
xchg
daa
xchg
das
xchg
aaa
adc
scas
xchg
popl
sbb
xchg
xlat
sbbl
adcl
sbb
cs
ficompl
scas
lock
sbb
lcall
mov
into
fs
add
scas
cmp
mov
ja
sbb
xchg
sbb
sbb
in
mov
push
lock
cmpsb
in
enter
test
enter
push
push
fists
push
fnsave
pusha
addr16
jle
mov
and
outsb
xchg
leave
in
mov
ja
pop
jb
fisubs
dec
pop
iret
icebp
rorl
xchg
push
adc
sbb
inc
cmp
fs
pop
add
inc
enter
and
outsl
dec
scas
adc
pop
xchg
add
mov
dec
inc
push
addb
xchg
mov
mov
xchg
ficoms
push
pop
push
push
ja
in
enter
or
sbb
inc
pop
and
xchg
ds
push
jo
cmp
jp
pushl
jbe
push
scas
mov
cwtl
daa
mov
inc
iret
add
xchg
dec
dec
in
mov
xchg
into
xor
sbb
pop
rdpmc
in
outsb
jmp
cmp
faddl
mov
pushl
and
fcmovne
scas
cmpsb
add
mov
nop
push
push
cwtl
jb
orl
pop
call
fstpl
xlat
cs
imul
push
mov
mov
leave
dec
pop
pop
cltd
add
daa
pop
enter
popf
and
sarb
mov
add
jecxz
setae
out
out
cltd
pop
stc
xchg
int
fisttps
hlt
adc
mov
mul
xlat
cmpxchg
mov
push
sbb
dec
nop
inc
mov
add
ss
push
jb
inc
scas
popf
out
push
jns
es
scas
pusha
cmpb
cmp
dec
es
lcall
pushf
aas
pushf
cmp
adc
mov
es
shlb
cmpsl
outsb
sbb
xchg
cmpsl
sbb
adc
and
push
daa
sub
xchg
addr16
daa
mov
ret
inc
lret
in
fnstsw
shll
push
add
lods
jnp
out
add
bswap
sbb
jmp
popf
lahf
or
daa
popf
pop
cmpl
inc
jl
cmpsl
in
adc
sub
je
mov
or
pusha
andb
mov
jle
daa
mov
pop
xchg
push
cmpsl
xchg
xor
scas
mov
movzwl
les
rcr
mov
and
sahf
ljmp
shll
nop
cmp
inc
push
cmpsl
cmpsb
ja
testl
jb
mov
sub
outsb
and
filds
mov
popf
or
mov
xchg
iret
xor
arpl
ja
testb
adc
ljmp
lahf
jns
in
xor
cmp
inc
push
add
cmp
lahf
outsl
or
mov
add
test
cwtl
mov
cs
dec
dec
enter
or
push
aaa
daa
xchg
sti
and
sub
dec
mov
and
push
out
mov
mov
ja
xchg
sbb
xchg
mov
rorb
repnz
jb
jge
leave
leave
inc
dec
ja
mov
fwait
mov
mov
add
inc
sub
push
mov
push
sub
xor
outsb
ja
sub
mov
push
add
fcompl
xchg
cmpsl
push
fs
leave
leave
add
iret
jae
iret
fstpl
in
in
cmc
jbe
in
mov
std
pop
mov
dec
and
sahf
out
jns
inc
dec
add
in
in
dec
bound
insl
js
cmp
or
iret
mov
scas
mov
repnz
out
inc
ds
inc
icebp
mov
sbb
sbb
das
fcmovu
addr16
movsb
fbld
adc
mov
mov
xchg
dec
cmpsb
pop
dec
pushf
movsb
ljmp
or
jae
mov
xorb
lock
jg
insb
jno
xchg
movsb
movsl
das
or
cmpsl
adc
pop
or
mov
mov
cmp
or
movsl
xor
inc
jb
and
jb
ret
movsl
fiaddl
pushf
push
in
movsl
cmc
movsl
std
xchg
sbb
adc
out
add
shll
cmpsb
iret
cmpsb
xchg
cmpsb
fistps
cmc
add
xor
xor
xor
adc
xorl
outsl
js
sbb
xor
and
rol
aaa
pop
adc
daa
cmp
cmpsb
scas
cmpsb
mov
sbb
aaa
or
and
repz
outsb
add
xlat
ret
add
fisttps
push
cmpsl
decl
and
or
cmp
push
pop
lock
add
scas
mov
push
addr16
add
mov
mov
jo
ljmp
fisubs
xor
js
and
pop
test
repnz
test
or
pop
sar
mov
xor
ja
mov
mov
mov
push
add
movl
and
pop
push
and
test
mov
test
cmp
ds
test
lods
jae
pop
push
daa
iret
repz
push
xchg
or
xchg
cmp
mov
leave
imul
dec
cs
stos
call
adc
cmp
leave
and
aaa
jo
into
adc
push
daa
dec
ja
in
inc
jb
mov
sbb
iret
les
dec
stos
ss
xchg
or
out
push
testl
cmp
sub
inc
mov
pop
push
jne
mov
jle
xchg
add
setbe
mov
ror
pop
ja
ja
push
add
xchg
loope
add
jmp
daa
out
lea
or
or
adc
cmp
repz
and
jae
xor
adc
es
repz
push
adc
cmp
jmp
adc
jno
dec
and
sbb
jb
xchg
les
lods
aaa
xlat
lods
pushf
cmp
ss
mov
add
push
cmp
stc
cmp
adc
test
dec
lods
seto
orb
lcall
ret
xchg
mov
jp
scas
aaa
cmp
add
sahf
pushf
cmp
movsb
cmp
jo
pop
cmc
fcompl
jg
add
push
seto
xlat
dec
or
test
mov
fnstsw
or
das
rclb
dec
enter
pop
fs
jns
aas
mov
adc
pop
push
lahf
jp
xor
ret
add
or
sti
inc
popf
cmp
or
push
jae
pushf
fisubs
adc
dec
adc
ja
mov
and
jno
inc
or
enter
cmp
cmp
mov
pop
push
scas
sbb
sbbb
das
out
leave
leave
xor
and
iret
push
dec
cmp
or
pop
jge
jns
outsb
js
sahf
cmp
mov
clc
pop
rorb
pop
inc
popf
inc
mov
in
xchg
roll
fsub
das
push
mov
or
add
js
or
inc
cmp
out
inc
inc
sbb
add
inc
test
mov
add
scas
mov
iret
orb
nop
push
or
iret
repz
or
mov
mov
in
outsl
in
add
sbb
add
repz
add
add
repz
push
pop
arpl
iret
repz
jno
orb
or
out
inc
mov
mov
dec
cmp
int
ja
jl
mov
daa
fildll
mov
mov
jmp
cld
cmp
jbe
aas
ds
filds
mov
and
in
mov
mov
mov
cmp
sub
jl,pt
jne
and
dec
inc
push
xchg
dec
mov
outsb
call
pop
pushl
mov
incl
outsb
pop
enter
movsb
mov
fmull
xchg
mov
adc
xor
iret
mov
xchg
jl
inc
mov
jb
xor
outsb
mov
adc
out
sbb
add
mov
inc
shlb
and
jno
cmp
xchg
lahf
mov
stos
push
outsl
mov
mov
jae
ret
in
pushf
xchg
lock
mov
cmp
mov
sub
push
cmovbe
str
xchg
scas
into
outsl
push
dec
dec
mov
mov
int
loope
mov
or
inc
rolb
mov
shrb
jnp
test
dec
pop
ss
xchg
mov
insb
inc
pushf
inc
push
inc
cmovb
movsl
mov
in
inc
scas
hlt
imul
mov
xchg
daa
adc
sub
clc
add
push
mov
add
fnstsw
jmp
dec
push
out
pop
in
in
outsb
pop
arpl
jae
adc
mov
jnp
or
mov
add
push
addr16
lahf
mov
shll
jbe
mov
in
das
xchg
xor
mov
adc
in
dec
jb
mov
ja
and
shrb
in
xchg
lahf
mov
dec
dec
jb
mov
scas
mov
inc
push
les
rclb
enter
ja
mov
fildl
in
mov
ja
push
in
jns
pop
iret
push
jo
addr16
xchg
das
stos
dec
push
sahf
out
add
add
in
jns
incl
xchg
dec
jb
push
and
jae
add
dec
add
pop
jle
push
cwtl
cmp
mov
xchg
push
inc
data16
mov
outsb
mov
xchg
mov
incl
inc
pop
mov
bound
lsl
out
pop
and
cmpsl
test
xchg
popf
test
xchg
mov
pmaxsw
mov
pop
incb
leave
insl
in
mov
add
mov
cmp
push
pop
repz
cmp
cs
or
cmp
leave
jbe
push
or
outsb
femms
mov
pop
lock
leave
jnp
js
mov
repz
ds
iret
sti
add
mov
dec
adc
int3
cmp
das
movntps
mov
jg
movq
xchg
out
ja
xchg
add
xchg
mov
or
sbb
mov
fistpl
pop
push
adc
fucom
jns
push
sahf
sub
mov
call
sbb
dec
addr16
cmp
mov
xor
imul
mov
fsts
push
notb
push
mov
fcomip
pushf
cmp
sub
add
push
pop
push
pop
push
xor
mov
cs
in
and
paddsb
in
mov
cld
out
add
add
pop
fmull
dec
sbb
xlat
or
aas
push
mov
into
ret
aaa
push
pop
std
mov
push
aas
push
iret
mov
push
push
lods
in
in
mov
bsr
add
int
leave
add
add
jno
leave
clc
add
mov
clc
xchg
push
add
dec
push
iret
pop
in
outsb
frstor
popw
outsb
add
dec
sahf
out
add
mov
xlat
or
cmp
ror
rcrl
fnstenv
mov
cmpsb
fdivrs
sar
addr16
sbb
rcr
xchg
xchg
out
push
bound
out
fmull
jb
xchg
add
add
mov
mov
in
in
call
dec
outsb
xchg
push
pop
movups
dec
mov
js
and
dec
loope
push
sub
mov
iret
lods
cmp
xchg
pop
and
mov
mov
roll
jae
jb
hlt
add
mov
pop
push
daa
daa
ret
out
cltd
mov
push
test
das
mov
jne
in
jge
test
jno
out
xchg
add
iret
jnp
movsl
fiadds
lods
or
xchg
dec
jbe
or
fisttpll
sti
mov
je
and
inc
movups
in
sub
xchg
cmpsb
inc
dec
xchg
outsb
jl
mov
inc
repnz
cmp
mov
idivb
pop
ds
push
sbb
cmp
les
push
iret
repz
add
add
and
cmp
ds
jge
shrb
les
in
jbe
ror
rcl
fsubrs
psubsb
rclb
out
in
sub
sbb
jg
xchg
fcmovne
dec
push
punpcklwd
outsb
xor
jae
lds
test
lea
xchg
out
test
out
dec
dec
sahf
out
add
ftst
into
fimuls
out
cli
syscall
out
adc
in
aas
sbb
mull
or
cmp
inc
ud1
xchg
insb
sub
sub
xor
pop
jp
and
fwait
stos
cwtl
call
test
push
scas
scas
shrl
iret
add
clc
pop
push
das
out
cmp
add
or
das
push
or
cmp
movaps
inc
iret
enter
push
push
jle
adc
adc
dec
cmpsl
pushf
mov
add
mov
sahf
rol
jg
adc
subl
inc
pop
add
cmp
or
daa
cmp
xorl
jnp
cmp
push
push
add
leave
es
fildll
push
iret
ss
mov
inc
enter
xchg
dec
ss
push
add
push
ja
repz
pop
mov
ror
int
aad
pop
enter
and
mov
jb
or
adc
sbb
lgdtl
movaps
cs
shlb
leave
out
out
jo
cmp
insb
add
push
jbe
insl
and
pop
ror
in
cmpsl
imul
in
pop
sub
pop
leave
jecxz
ljmp
pop
ja
lret
cmp
outsl
inc
pop
sahf
test
fisttpll
add
push
jns
out
popw
jno
jl
jns
out
xchg
xchg
or
setle
push
mov
jecxz
jmp
push
and
das
nopl
xor
dec
into
leave
sub
cs
cmpsl
outsb
jmp
ss
clts
bswap
and
or
inc
scas
lret
xchg
out
push
add
addl
pop
inc
repnz
pop
xor
shlb
mov
icebp
add
mov
lods
pop
mov
mov
adc
int3
pop
testl
notrack
cmpb
dec
outsl
push
cmpsl
movntq
fldt
jbe
addl
push
or
testl
dec
sahf
or
sahf
push
out
psubd
add
xor
adc
push
sbb
out
sahf
out
adc
adc
sahf
push
inc
pop
push
sbb
sahf
out
sbb
jae
jb
rorb
sbb
push
adc
adc
adc
jb
jb
adc
push
or
mov
xor
cld
js
cmpsb
add
int
mov
push
mov
push
inc
and
xchg
nop
cmpsb
mov
pop
pushf
push
daa
cmp
push
loope
lahf
icebp
adc
dec
ja
idiv
dec
into
loopne
dec
into
cmpsl
adc
xlat
test
mov
hlt
mov
pushf
test
xchg
pop
out
pop
mov
pop
stc
sarb
xor
incl
xor
jns
dec
into
pop
into
pop
push
ret
ja
filds
mov
mov
cmpsb
lcall
jcxz
jp
pop
dec
push
iret
out
scas
mov
das
push
add
idivl
repz
add
and
enter
xorb
mov
mov
in
scas
adc
dec
dec
mov
pop
repnz
dec
pop
daa
repnz
cmpb
cmp
lods
addr16
call
shl
in
movsl
pushl
scas
and
pop
add
ja
pop
movsb
rorb
rcl
cmp
pop
rcrb
cli
xchg
add
xchg
sbb
ficoml
movsb
xchg
repz
dec
popa
insb
push
add
mov
xchg
push
add
cmp
push
mov
rorl
push
mov
dec
call
enter
cli
add
or
ja
enter
fistps
shlb
pop
push
pop
daa
iret
jmp
sub
xor
or
inc
jns
out
push
or
or
fucom
pop
iret
adc
push
sub
pop
sarb
add
cwtl
dec
jmp
mov
xchg
into
fildll
mov
iret
out
rclb
cmp
add
add
nop
popa
add
gs
push
popa
mov
lret
and
sub
add
shl
popf
cmp
push
add
push
add
push
push
fistps
bound
xchg
cmp
pop
push
push
or
xor
mov
cmpsl
testl
jmp
daa
jl
pop
adc
cmp
fdivrs
fmull
call
push
aad
mov
aam
push
aam
aam
in
mov
pop
stos
mov
in
fs
iret
aam
in
lods
call
inc
repnz
movsb
arpl
and
fisubl
psrlw
push
mov
pop
aad
leave
leave
inc
fwait
push
addr16
mov
leave
inc
jb
shr
xor
hlt
aad
fs
fiadds
movsl
xchg
pop
pop
push
add
sub
pop
das
jb
and
daa
push
xor
roll
gs
cmpsl
out
xor
in
pop
push
gs
outsb
pusha
subb
js
jb
inc
push
jnp
or
mov
cmpsl
lods
xchg
pushf
mov
out
scas
cmp
mov
rcrb
lods
fwait
cmp
pop
add
cmp
iret
or
repnz
sbbb
das
or
push
data16
xchg
addr16
sub
cmp
push
cmp
rcrl
popa
outsl
xchg
push
jo
mov
and
cmp
cmpsb
sbbb
xlat
in
push
jb
aas
pop
fdivrs
jne
fnsave
push
lahf
pxor
push
xchg
fucom
jns
add
clts
push
pushf
pushf
pushf
pushf
pop
push
repz
orb
or
fdivrs
cwtl
xlat
imul
mov
push
ja
mov
ficoms
ja
push
ret
jmp
subb
into
popf
fstpt
outsl
inc
scas
push
pop
dec
daa
loopne
xchg
fstps
push
aas
in
mov
fstps
invd
jnp
fwait
cmp
xchg
or
sbb
cmpsl
aas
pop
vmwrite
push
imul
pop
push
adc
add
mov
mov
mov
cs
push
dec
notb
popf
pop
decl
test
push
cmp
paddusb
mov
in
out
out
or
or
xor
pop
xchg
push
ja
add
out
dec
add
ljmp
mov
mov
adc
enter
xor
push
fldt
cmp
dec
imul
imul
test
cwtl
fsubrl
xchg
mov
leave
leave
inc
ror
hlt
mov
push
fcoml
fmull
cmp
mov
push
fsubrl
insb
fwait
test
test
inc
pop
xchg
mov
pop
push
add
imul
bswap
leave
leave
lods
add
add
add
repz
or
or
cmp
es
adc
adc
mov
fisttpll
es
int3
aam
add
dec
pop
mov
adc
jne
xchg
or
adc
ret
push
xchg
pop
push
mov
psignb
xor
push
dec
aaa
aad
jae
paddusw
fildl
pop
fisttpl
jecxz
fldt
jmp
das
repz
sti
pop
or
cmp
stc
add
fwait
mov
in
lds
push
btr
mov
out
ret
adc
adc
jns
dec
aaa
movups
or
jae
cmp
adc
pop
and
leave
jmp
iret
sbb
nopl
cmp
pop
dec
mov
repnz
and
dec
scas
fwait
cmp
jae
es
sub
cmp
repz
mov
xchg
sub
cmp
repz
sub
sub
iret
cs
mov
adc
lret
fisubrs
clc
insl
nop
sub
adc
ss
xchg
cmpl
inc
pop
shl
in
dec
fsubrl
es
pop
ja
scas
mov
push
cld
push
in
in
xchg
fistps
fbld
sub
ja
xchg
in
call
filds
nop
cwtl
cpuid
stos
and
xchg
add
xchg
or
loopne
xlat
in
out
mov
pop
cld
cmpsl
pop
repz
test
pop
add
femms
or
fcmovne
and
das
cmp
cmovg
out
or
cmp
leave
repz
adc
sahf
cmpsl
fwait
unpcklps
adc
out
fstl
call
sahf
cmc
sbb
loope
bndstx
repz
sbb
sbb
repz
inc
pop
dec
and
repz
pop
and
jne
cmp
repz
and
and
repz
cmp
enter
loope
loope
loope
inc
mov
loope
loop
push
das
mov
xor
ss
inc
loop
popf
popf
popf
pop
dec
loop
push
loop
iret
repz
popf
fistpll
aas
push
daa
mov
cmp
repz
and
cmp
repz
repz
shlb
fistpl
out
bswap
repz
sbb
sahf
out
xchg
jecxz
push
sbb
sbb
out
pop
xor
dec
out
sahf
out
dec
push
dec
pop
sahf
out
sahf
dec
push
ja
test
xlat
dec
sqrtps
pop
push
dec
outsb
fucom
jle
pop
dec
cmovp
out
dec
pop
cmpsl
pop
mov
rep
mov
das
int3
dec
xlat
push
push
loop
inc
das
call
fnstcw
xchg
outsl
in
bound
jno
sub
cmove
repz
add
jne
iret
mov
in
pop
lea
repz
lcall
repz
rorl
fsubp
rorl
in
jb
sahf
out
notb
and
rep
or
adc
push
repz
repz
iret
repz
cmp
dec
sbb
cmp
repz
sbb
ja
cmp
repz
leave
repz
xchg
and
mov
mov
mov
fnstcw
loope
jmp
jns
add
das
pop
out
femms
push
sbb
jns
out
and
adc
adc
adc
xchg
pop
loopne
dec
divps
jns
out
push
or
pop
jne
out
or
jecxz,pn
sahf
push
or
mov
ds
cmp
dec
sahf
inc
mov
fisubs
je
rep
sti
out
js
mov
add
pmaxub
mov
push
add
out
out
movd
cmp
or
sub
xor
xchg
pop
js
or
or
sahf
out
push
rcpps
pop
adc
in
in
imul
adc
cmp
mov
xchg
lahf
cmp
xchg
out
cmpsl
scas
out
sbb
in
and
cwtl
jbe
push
dec
push
adc
mov
call
rdtsc
push
add
popf
fmull
dec
push
das
pop
popa
cmp
cmp
imul
out
mov
xchg
mov
iret
adc
dec
dec
dec
dec
rcr
loopne
xor
dec
lock
xor
jns
jae
or
pop
sbb
inc
and
xor
iret
jmp
aaa
and
ja
pop
jmp
out
add
pop
daa
iret
jae
jg
add
repnz
mov
or
shr
repnz
push
adc
popf
cmp
icebp
psubw
ljmp
adc
ljmp
ljmp
iret
mov
add
add
iret
push
jne
orb
xchg
or
dec
sahf
or
scas
push
mov
pinsrw
adc
fstps
push
jmp
adc
pop
out
outsb
mov
pop
xor
cmp
sbb
sbb
dec
sahf
out
sbb
sahf
out
mov
out
jns
mov
and
dec
xlat
daa
loop
pmulhuw
clc
add
push
sbb
jns
out
cs
das
cmp
dec
icebp
inc
in
outsl
xor
jno
xlat
fnstsw
add
jns
sbbl
add
push
add
and
pop
ret
mov
jns
iret
repz
fsubrp
push
or
shl
lock
rorb
or
daa
daa
adc
and
sahf
out
repnz
pop
cmp
inc
fucom
jns
dec
sbb
sbb
jns
pop
sbb
sbb
push
and
push
leave
mov
lods
leave
leave
leave
leave
mov
iret
mov
dec
out
out
in
push
xchg
fiadds
das
add
scas
enter
cmp
pop
rdpmc
cmp
push
ds
add
dec
push
jmp
outsl
out
fistpll
cmp
repnz
mov
push
or
leave
mov
or
outsb
mov
in
sarl
lahf
jmp
jnp
pop
js
outsb
or
pop
push
push
push
lds
palignr
iret
repz
push
sub
sbb
inc
push
push
mov
in
jbe
push
pop
push
lahf
fsubrl
inc
fists
pop
jae
cmp
sub
sub
repz
fsubrl
push
sub
iret
repz
das
stos
xor
repz
lret
xor
xor
cmp
in
in
sahf
ss
aaa
cmp
lock
cmp
addr16
lahf
lock
sarb
cmp
fdivrs
jecxz
out
iret
xor
stc
scas
add
cmovae
cmp
repz
and
in
jbe
aas
dec
das
push
dec
bound
adc
popf
out
insl
add
add
add
cld
cs
test
dec
jg
es
jge
movsl
adc
mov
mov
in
icebp
mov
add
add
dec
xchg
out
sahf
push
push
out
pop
cli
dec
sahf
aaa
roll
or
fcompl
xor
repz
subss
imul
je
orl
movsb
scas
mov
iret
sbb
rorb
fucomi
insl
jbe
dec
repz
adc
or
ficomps
push
and
cs
repz
inc
dec
repz
jns
mov
repz
fldcw
in
add
pop
cmpl
sahf
outsb
repnz
add
add
testb
or
push
pop
out
in
dec
and
sub
iret
repz
or
fcmovne
repz
jno
jl
adc
es
xrelease
xchg
unpckhps
iret
repz
popf
push
test
mov
sahf
out
cmp
leave
cs
sbb
iret
cmp
ljmp
int3
adc
jns
push
and
insl
jns
out
and
sub
repz
ss
pop
inc
cs
dec
sub
sub
je
iret
sub
setp
shlb
adc
xlat
iret
int
cmc
outsl
cli
cmc
and
testb
btr
sbb
aas
sub
jg
leave
xorb
testb
inc
orl
pop
vprotq
outsb
mov
jns
xchg
xchg
xchg
mov
or
jns
out
or
or
leave
repz
prefetch
or
in
loop
imulb
add
push
testl
negl
xor
pop
repz
mov
inc
sbb
enter
sbb
or
pop
cs
cmp
repz
push
ja
xorb
iret
pop
lea
lcall
and
jns
and
fnsave
fisttpll
pop
scas
inc
sub
add
dec
add
jg
ficomps
xor
sub
aaa
mov
lahf
jg
xlat
mov
test
push
add
out
in
mov
pop
into
pop
adc
jns
cmpsb
ljmp
mov
mov
testl
push
cvttps2pi
fwait
cmp
adc
dec
sahf
ja
cmp
pop
addr16
adc
dec
jge
mov
xchg
sbb
sbb
outsb
sub
dec
push
js
hlt
pop
lods
movsl
jmp
cld
push
pop
cli
pmulhrw
cli
repnz
cli
xor
dec
sahf
outsb
wbinvd
inc
dec
ds
jns
leave
push
pop
push
or
mov
insl
js
orl
push
adc
jns
leave
xchg
fwait
push
adc
adc
stos
mov
rcrl
iret
repz
sbb
sbb
sbb
sahf
ja
cmp
jmp
loope
cmp
pop
outsb
add
or
and
adc
and
enter
sti
push
pop
pop
setle
jns
imul
addl
jle
sti
dec
mov
sahf
or
iret
shrl
lcall
femms
cmp
repz
adc
adc
mov
cmp
nop
das
cmp
cmp
adc
push
sbb
iret
repz
xor
cmp
dec
sbb
leave
repz
sbb
cmp
cmp
orb
mov
iret
repz
xchg
dec
and
leave
repz
es
fs
fdivr
pop
sub
xchg
cmc
orb
push
ret
nop
mov
fs
pop
pop
popf
pop
es
cs
std
insl
in
mov
std
jo
push
cmp
mov
out
cmpsl
leave
leave
leave
shlb
fcmovne
ret
syscall
fdivrs
out
jecxz
out
or
or
fcomip
add
syscall
or
mov
leave
repz
rsqrtps
fs
pop
adc
out
pop
jle
mov
in
sahf
out
pop
in
sbb
test
out
or
cs
jns
and
cmp
pop
and
push
and
mov
ror
repz
es
daa
loope
in
xor
jmp
scas
xchg
pop
inc
das
dec
sahf
out
or
xor
jns
ja
movhps
cs
outsb
daa
iret
cmp
dec
pop
xchg
out
js
sahf
xchg
cmp
stos
lgs
cmp
enter
incb
mov
popf
out
cmpsb
scas
into
btl
leave
repz
rolb
fucomi
das
ss
mov
or
das
push
vmwrite
out
or
or
fucomi
in
dec
das
pop
pcmpgtw
adc
iret
repz
jnp
push
adc
das
test
outsb
daa
iret
repz
loop
sahf
pushf
fcompl
in
cli
add
repnz
sbb
and
iret
in
in
and
out
popf
cmp
xchg
pop
sub
sub
dec
repz
add
pop
cmp
repz
sahf
out
inc
das
push
pop
push
xor
jae
jle
fsubrl
out
sahf
xor
out
psubd
mov
bndstx
pop
pop
mov
inc
sub
pop
inc
add
or
push
add
jnp
xchg
sbb
xlat
outsb
pop
push
fisttps
iret
push
stc
lsl
setb
jnp
add
adc
sub
jb
cmpsl
xor
xchg
push
dec
ret
sbb
and
pop
pusha
insl
loop
adc
push
cmpsl
movsb
cmpl
mov
mov
lret
mov
push
mov
push
add
jbe
xor
test
add
xchg
adcl
and
add
mov
inc
fs
shlb
fnstsw
cmp
mov
cs
inc
push
push
mov
ljmp
and
pop
inc
adc
fdivrs
cs
aaa
sub
aaa
xlat
add
das
sub
inc
jno
mov
or
out
push
or
or
or
imul
daa
in
in
pop
xchg
adc
and
leave
inc
inc
push
addr16
das
push
jo
push
mov
insl
popf
cmp
jae
and
jb
mov
andb
cmpb
in
cmp
leave
in
in
movsb
fbld
in
into
aas
xlat
sbb
data16
and
mov
add
fwait
fadds
add
adcb
push
dec
inc
add
add
sbb
imul
jo
mov
mov
sbb
cmp
testb
add
movsb
add
xchg
pushf
cmp
movsl
sbbl
subb
mov
cmp
inc
xchg
ret
mov
mov
out
adc
or
mov
adc
push
ficompl
sub
sbb
pop
fisubrl
xor
fcomp
loopne
jb
rolb
jle
iret
xor
push
xchg
nop
cmp
repz
mov
rep
pusha
push
dec
inc
iret
repz
cmp
xor
sub
cmp
repz
and
adc
lcall
hlt
in
and
jns
fwait
pop
in
faddl
aam
rcrb
movsb
mov
sarb
bnd
mov
fs
pop
push
sahf
cmpsl
cmp
dec
mov
cmp
sbb
repz
jl
and
aam
mov
mov
mov
sahf
idivl
js
jo
pusha
cmp
out
cmp
and
push
out
lcall
out
ja
mov
xchg
push
pusha
add
icebp
add
orb
add
mov
dec
lock
js
clc
ss
mov
fldenv
add
xor
std
dec
daa
aas
sbb
es
push
inc
xor
orb
jl
xchg
and
cwtl
xchg
xorb
mov
outsl
lock
call
push
mov
push
inc
jg
mov
mov
mov
and
sgdtl
push
adc
xor
es
mov
push
adc
xchg
pop
in
mov
add
fldt
or
testl
das
outsl
pop
adcl
rclb
pop
fistl
js
stc
pop
jg
js
lds
pop
out
lods
add
repnz
out
xor
out
iret
xchg
int
jns
and
and
push
repz
and
sbb
cmp
hlt
and
out
add
fcoms
push
sahf
out
sahf
aam
rorb
or
cmp
pop
inc
sbb
fdivl
cmp
push
xor
cmp
jae
push
push
and
repz
scas
push
and
adc
and
xor
clc
loope
ss
out
pop
imul
adc
xor
push
xor
xchg
cld
xorb
xor
cmp
xorl
fcomi
cmp
adcl
push
pop
js
mov
aam
adc
xor
dec
sahf
out
sti
insl
add
push
pop
ja
cmp
shl
jae
das
and
insb
dec
and
pop
les
pop
mov
pushf
in
add
or
enter
ret
mov
adc
ret
sbb
push
pop
and
jg
mov
mov
ret
inc
and
sahf
mov
sub
lcall
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
outsl
incl
mov
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
incl
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
ljmp
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
call
sbb
mov
or
addl
cmpsl
xchg
cmp
xor
call
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
call
sbbb
xchg
clc
repz
mov
subb
fwait
xchg
and
int3
insb
daa
push
xor
int
add
mov
cmp
or
aas
pop
fs
dec
lea
aas
ret
shrl
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
pushl
cmp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
call
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
filds
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
pushl
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
push
lcall
sbb
adc
lcall
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
push
sahf
out
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
into
ror
add
cmpsb
fmuls
into
add
test
or
add
nop
jl
loopne
inc
xlat
xchg
shrl
inc
inc
je
inc
inc
lcall
add
push
dec
addr16
pop
and
dec
dec
inc
push
xchg
cmc
movsl
testb
aas
jg
xor
in
mov
mov
decl
inc
pop
push
inc
dec
inc
jo
inc
popa
push
outsb
jbe
stos
adc
sub
mov
aas
sbb
insb
imul
insb
mov
cmp
sbb
icebp
push
and
pop
dec
dec
push
inc
dec
push
int3
sahf
cmpb
push
jo
jb
push
test
addb
inc
test
out
dec
inc
gs
gs
and
jle
xchg
inc
ds
adc
inc
arpl
mov
outsl
add
sub
bound
outsl
push
dec
pop
jbe
insl
mov
push
push
xchg
cmpsb
add
xchg
out
orb
push
mov
dec
mov
xchg
or
das
mov
add
push
fs
cmpsl
addb
xor
arpl
daa
jg
dec
xor
dec
jae
imul
xor
sahf
loope
mov
jns
dec
addl
lahf
push
push
les
push
mov
jmp
les
fisubrs
jb
jns
inc
inc
fimull
push
or
insl
rcl
and
inc
sbb
out
das
adc
adc
dec
dec
lds
mov
dec
bound
jbe
dec
and
xchg
push
add
cmpsb
je
xchg
int
xchg
bound
inc
cmpsb
dec
iret
jmp
dec
popa
jne
arpl
add
sub
outsl
dec
dec
add
pop
mov
push
lret
push
xor
pop
mov
mov
or
inc
xchg
push
dec
push
in
pop
mov
js
cli
dec
push
or
mov
push
add
pop
insl
add
dec
test
aad
idivl
pop
test
push
notl
imul
mov
cmp
push
jb
and
mov
lds
das
push
xlat
and
inc
push
clc
jp
lock
stos
push
in
jne
push
inc
stos
bound
jg
push
loope
dec
mov
xchg
push
inc
arpl
push
inc
stos
movsl
pop
push
cmpsl
int3
sbb
pusha
out
lds
sub
xchg
sub
push
push
insb
pop
xchg
inc
popl
iret
lods
mov
data16
rorb
cmpsl
and
push
or
andb
ja
sbb
popa
cltd
insb
and
ret
inc
arpl
adc
jne
pop
pop
sbb
les
stc
lahf
sbb
adcl
orl
push
push
dec
sub
xlat
dec
push
inc
push
dec
lahf
inc
or
xchg
or
lods
or
inc
xor
inc
sub
inc
jo
pop
orl
cmp
scas
call
mov
ret
pushf
and
push
push
cmpsl
out
dec
sub
dec
pop
xor
sub
daa
dec
xor
pusha
jmp
aam
fcompl
mov
inc
movsl
arpl
adc
outsl
adc
outsb
push
pop
loop
add
pop
push
jne
les
add
loopne
push
mov
xor
rcll
outsl
addr16
push
sub
push
xchg
mov
pop
les
push
jecxz
test
inc
sbb
out
cmp
lock
mov
repz
rep
push
xor
out
sahf
out
pushf
test
hlt
jge
dec
xor
les
inc
leave
repz
add
or
cmp
ds
push
and
lahf
lcall
fcompl
jne
add
ljmp
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
lcall
jmp
rclb
mov
sub
mov
sbb
decl
mov
test
ficompl
jmp
mov
hlt
movl
imul
jp
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
outsb
add
call
leave
mov
lods
jecxz
fdivs
jne
dec
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
imul
mov
mov
or
or
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
jg
insl
or
or
mov
cmp
call
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
adc
inc
hlt
or
fnstenv
adc
mov
testb
bound
ficoml
gs
aam
pop
popa
mov
into
push
ljmp
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
lds
inc
cld
fldcw
inc
mov
shlb
ljmp
add
pop
dec
or
cmp
add
daa
adc
or
and
mov
push
mov
outsl
and
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
incl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
dec
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
test
ss
sbb
push
imul
aam
loopne
rorl
dec
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
call
fisttps
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
jmp
add
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
pushl
loop
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
incl
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
decl
xchg
insl
add
ss
jmp
addr16
jb
push
hlt
orb
adc
mov
loop
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
push
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
sar
mov
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
jg
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ja
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
pushl
mov
xor
mov
add
push
xlat
int
push
ficoms
jmp
and
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
push
dec
pop
out
add
sub
add
lods
mov
les
mov
push
xchg
outsl
inc
jne
ds
cmc
push
dec
je
push
insb
imul
xchg
pop
incl
dec
fistps
jbe
push
jns
arpl
bound
in
outsl
arpl
mov
add
sbbb
xchg
sub
pop
inc
jne
outsl
insl
addr16
lods
fldenv
xchg
fildl
lods
xor
xlat
jl
nop
jne
mov
cmc
test
cli
cmp
inc
js
inc
insl
bound
add
or
loopne
jmp
inc
inc
inc
js
mov
popa
or
sbb
ljmp
dec
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
ljmp
cmp
arpl
or
xor
bound
pop
xor
popa
add
xchg
pop
sbb
in
inc
icebp
xor
inc
sbb
fistl
xchg
add
ror
xchg
test
mov
rcl
dec
xor
fbld
pop
or
ss
jbe
in
popa
stos
cmp
or
inc
aas
push
pop
movsb
push
xchg
stos
popa
fs
roll
inc
push
sub
mov
dec
aaa
pop
addl
insb
popa
jns
push
add
ljmp
push
push
nop
pusha
aaa
je
aaa
mov
inc
push
ljmp
jg
ficoml
jae
ret
ljmp
sahf
bound
push
mov
inc
mov
aaa
inc
and
sbb
inc
pop
jnp
adc
or
jae
inc
inc
inc
add
fimull
mov
ds
in
scas
add
mov
iret
int
push
dec
dec
lea
xchg
orl
adc
inc
outsb
jne
mov
xchg
aad
sub
addr16
ss
add
add
or
add
push
pop
aad
ss
push
repz
pop
jo
or
lods
mov
cmp
aas
cli
adc
dec
shlb
sbb
or
xor
outsl
adc
mov
push
lcall
jo
lcall
xor
mov
aad
xlat
mov
inc
add
fists
daa
inc
jb
cmp
adc
sub
push
loope
popa
jo
lahf
xor
nop
aas
push
outsl
outsl
test
mov
in
pop
push
jno
adc
in
push
andl
xchg
add
push
sub
add
pop
test
arpl
aad
adc
push
cmp
mov
jo
cmpsl
xchg
push
pop
push
outsl
inc
xor
shrb
rcl
aad
inc
pusha
push
popa
jb
adc
push
addr16
push
sub
mov
mov
adc
add
das
push
pusha
xor
push
or
push
mov
push
and
aam
les
popf
xor
or
add
sub
aaa
and
or
pop
xor
stc
pop
inc
adcb
scas
pop
add
pusha
addr16
mov
testb
and
mov
ret
push
push
push
xchg
sahf
aas
movl
add
xor
rcrb
push
loop
aaa
jno
inc
je
outsb
cwtl
mov
push
inc
aaa
lds
daa
push
add
mov
mov
and
addb
popa
loopne
mov
bound
pop
adc
sbb
ja
nop
pop
sub
std
mov
or
pop
mov
int
mov
add
add
jg
shlb
outsb
outsl
je
add
and
outsl
pop
sub
and
and
cs
cmpsb
dec
bound
std
shrd
popa
incl
lea
out
das
jg
lret
mov
out
ud0
stc
in
sti
sti
jmp
repnz
in
push
pusha
ljmp
lret
cli
add
das
insl
push
cld
push
imul
pusha
daa
push
inc
es
add
dec
cmp
aas
loopne
add
or
or
insb
daa
aam
cmp
jne
adc
adc
add
and
add
add
dec
jnp
cmp
sbb
add
xor
dec
add
push
test
mov
push
mov
subb
nop
out
js
push
loop
enter
push
pusha
push
add
pop
add
decb
lea
and
iret
test
and
pop
lock
xorl
enter
lret
xchg
add
mov
mov
add
sahf
jae
arpl
sti
gs
xlat
out
add
jb
test
push
loopne
sahf
out
sbbb
inc
jecxz
and
xlat
cmp
and
lcall
mov
push
cmpsb
jmp
add
lds
leave
sahf
mov
lea
pusha
test
sbb
and
mov
test
xchg
jp
cmp
js
push
xchg
cli
adc
ret
movsb
pop
ret
jbe
dec
loop
addl
push
lock
or
jno
int3
fucomi
adc
movsl
idivl
jne
jmp
mov
cmp
ja
addr16
call
sub
sbb
subb
ror
loope
or
ljmp
add
outsb
inc
jecxz
sub
hlt
mov
int
sub
or
add
add
hlt
jl
les
out
push
nop
jg
enter
push
push
sti
push
push
pop
sub
mov
add
ss
add
lea
adc
imul
aad
rcll
sbb
mov
call
xchg
lock
nop
fadds
mov
push
fadds
movsb
and
xchg
mov
fsubrs
cmp
jbe
mov
and
pop
xor
call
aad
mov
nop
pop
xchg
inc
iret
aaa
sahf
popa
arpl
sub
xchg
sbb
das
adcb
dec
pop
ret
divl
xor
movsl
mov
push
call
insb
push
xor
add
outsb
jp
or
push
pop
pop
clc
pushf
and
imul
test
pop
out
insl
jne
push
inc
imul
add
adc
pop
mov
lds
mov
arpl
subb
mov
dec
stos
and
mov
cmp
jne
jge
add
xor
cmpsl
movsl
push
inc
adc
cmp
addb
mov
xchg
or
pop
add
movsl
test
dec
cld
mov
mov
shl
pop
mov
jbe
leave
fs
xlat
sbb
and
push
or
xchg
and
mov
popf
testb
push
leave
push
cmp
mov
fistps
cmp
and
imulb
mov
push
push
xor
or
out
and
test
or
xchg
je
sahf
jp
sbb
mov
dec
pop
push
ret
or
dec
mov
sbb
sbb
sahf
lea
jbe
mov
mov
push
addb
lods
std
xchg
movsl
jmp
subb
cmp
mov
push
aam
pop
incl
je
inc
test
movb
dec
adc
or
jb
push
mov
aam
inc
adc
lea
add
sub
adcl
arpl
ucomiss
mov
aam
in
divl
or
shl
pushf
jbe
movsb
in
add
and
or
test
adc
add
ror
test
repnz
sbb
xlat
hlt
or
cmp
sub
inc
roll
repnz
mulb
mov
xor
mov
test
push
insb
cltd
int
or
aas
adc
insl
dec
cmp
arpl
fcoml
and
aad
jo
daa
pusha
inc
ljmp
imul
in
pop
je
call
or
push
insb
fdivl
and
hlt
sub
dec
inc
mov
push
mov
dec
lret
sub
loop
adc
mov
adc
add
or
cmp
nop
add
jl
movsl
sbb
fcompl
subl
add
in
mov
push
sbb
jp
jp
fcoml
push
lea
push
mov
stos
add
or
inc
or
jo
or
sub
and
pop
xchg
sbb
test
das
dec
mov
pop
rolb
push
add
shr
or
cmpl
xor
fwait
in
xchg
std
imul
pop
call
or
push
sahf
movsb
mov
call
add
adcb
jae
les
movsl
add
add
mov
cmp
xor
pusha
shrd
cwtl
cli
lret
adc
ret
jecxz
adc
sub
enter
sub
sbb
shr
js
jl
or
mov
out
jle
pop
sub
aam
or
call
xchg
sti
push
jne
xchg
enter
lea
dec
cltd
pop
push
ret
popf
scas
pop
cld
call
shlb
lods
ss
hlt
jmp
mov
mov
push
test
push
ss
lock
pop
pop
pop
adc
mov
adc
sub
lods
imul
loopne
lods
or
ja
pop
mov
or
jmp
xchg
icebp
mov
mov
dec
call
push
inc
into
pop
in
dec
push
inc
roll
xchg
xor
push
xor
add
add
ss
andl
sbb
sbb
sbb
cs
push
or
in
shl
or
push
jmp
xlat
pusha
jp
xchg
push
inc
push
loop
push
cmpsb
xor
clc
sbb
sub
lea
xchg
es
ret
sub
or
iret
add
push
out
mov
out
shll
inc
movzbl
aad
add
imull
push
fsubs
mov
int3
mov
push
enter
fstps
aas
mov
mov
rorb
sbb
lds
and
push
subl
gs
mov
pop
rolb
sub
arpl
push
push
mov
xchg
sbb
hlt
push
and
xchg
cld
push
jns
sti
xchg
test
mov
mov
jo
and
icebp
push
cmp
jmp
lret
lods
xchg
sbb
xor
adc
mov
call
add
sbb
cmp
ds
sbb
xlat
lock
push
sbb
sbb
sbb
stos
je
addr16
loop
fdivr
clc
cmpsb
mov
dec
cmp
rcrl
cltd
push
imul
push
dec
fdiv
mov
push
xor
loopne
fsub
movsb
xor
pop
pusha
push
add
int3
call
and
jp
or
mov
cmp
mov
bound
addr16
fisttpll
aad
andb
adcl
stc
and
pop
adcl
ret
add
fcompl
jb
call
jnp
xchg
xor
test
adc
std
push
lahf
je
cmp
cmp
xchg
test
in
sbb
lea
adc
popf
ss
or
cmp
add
sub
pop
push
and
xchg
aaa
mov
cmp
or
mov
mov
rolb
imul
fidivrl
push
faddl
cmpsb
add
out
out
repnz
adc
mulb
sbb
hlt
lds
out
xor
fdivr
mov
pop
loop
ret
movb
fildl
cmp
decb
mov
xchg
psubsw
push
out
arpl
loop
aas
adc
xor
call
mov
mov
int3
or
mov
jbe
je
adc
and
and
or
push
adc
loop
xchg
and
mov
stos
dec
enter
ss
repnz
fsubrl
imul
push
xchg
xchg
mov
adc
fstl
add
shll
jbe
mov
nop
aas
mov
mov
cmp
jne
xchg
sbb
lea
jge
jne
dec
pop
mov
xor
cmpsl
sub
mov
rep
push
pop
lahf
addr16
inc
inc
shlb
or
jl
mov
rolb
add
andb
inc
push
jnp
sbb
push
popf
jo
ret
jb
je
ljmp
ljmp
mov
stos
je
popa
pop
dec
push
xchg
inc
fisubl
mov
mov
sbb
je
mov
cmp
scas
sbb
mov
call
push
xchg
cmc
pop
cmpsb
jle
leave
add
sub
xor
ret
adc
xchg
push
push
iret
pushf
data16
imul
into
shlb
push
mov
xor
jo
lret
push
loopne
and
pop
roll
fcom
dec
sbb
mov
aas
js
mov
cmpsb
cmpsl
xor
je
ficoms
or
mov
push
dec
add
push
or
shlb
dec
adc
cli
mov
push
loopne
andl
xchg
sbb
adc
daa
add
cmp
push
mov
jmp
adc
fimuls
xor
shlb
loopne
adcl
dec
in
push
xlat
in
int
push
and
pop
daa
xchg
or
xor
pop
dec
sub
out
sti
and
in
xor
pop
mov
jne
push
or
in
or
in
fldenv
xchg
in
cmpsl
repnz
enter
pop
push
or
xchg
enter
or
jbe
insb
or
pop
adc
leave
sub
les
mov
insb
or
lods
inc
rcr
movl
pop
mov
pop
mov
cmp
add
ret
mov
inc
inc
mov
sub
jmp
in
and
mov
jns
in
in
in
in
and
push
add
jne
jle
mov
fdivrs
fcomps
les
addb
movsb
imul
lods
loop
imul
es
cmpsl
mov
insl
pop
adc
push
fists
shlb
and
jp
fisubrs
pop
mov
push
inc
sbb
jne
lods
or
cmp
faddp
cmp
inc
xor
mov
pusha
mov
or
mov
popf
mov
xor
loopne
xor
xchg
popa
xchg
cmpsb
adc
jmp
or
fsubrs
rcrb
data16
or
addl
out
add
sahf
les
sbb
cmp
enter
test
aad
mov
dec
in
lods
dec
xlat
push
push
mov
jecxz
mov
sub
push
jg
sbbb
lea
jb
bound
pop
int
cwtl
add
cmp
adc
or
and
add
int3
leave
sbb
add
in
add
nop
adc
push
jne
jl
push
iret
clc
cmp
mov
lods
adc
jne
cld
jb
add
mov
dec
jo
lods
sbb
loopne
inc
pop
in
jne
adcb
add
negl
scas
jns
lock
daa
enter
icebp
aam
jnp
or
gs
ljmp
push
add
add
push
add
xor
enter
adc
add
mov
mov
push
mov
clc
or
add
dec
es
mov
ja
cmp
sbb
jg
ja
and
je
or
or
je
mov
into
test
lock
or
outsb
test
cmpsb
pop
test
inc
mov
sub
adc
push
fs
ss
add
call
mov
adc
xor
filds
cmc
out
sbb
pusha
push
cld
sub
xor
lcall
rcrb
xor
stc
cltd
insb
cld
adc
test
push
and
or
gs
sub
mov
add
push
rcrb
les
jns
aam
stos
hlt
lods
jbe
xor
bnd
jne
xor
neg
cli
sbb
outsb
outsb
sbb
inc
adc
add
jns
mov
cmpl
mov
cmp
push
fdivrs
cmp
adc
push
mov
lods
and
fildl
mov
adc
xchg
add
repnz
test
adc
dec
inc
lahf
insl
mov
xor
mov
pop
hlt
or
shr
pushl
or
cmp
pop
mov
xor
stos
std
std
outsl
push
sbb
xchg
nop
cld
cmp
cli
sbb
rcl
out
inc
add
cmp
call
sub
push
or
enter
mov
or
push
push
add
in
testb
adc
cmp
mov
jo
xchg
pop
push
lock
sub
lret
and
out
pop
adcb
push
ds
sbb
xor
iret
jo
test
dec
and
cmp
imul
test
add
mov
push
dec
add
mov
in
test
fs
pmaddwd
in
or
lret
mov
push
enter
cmp
jmp
mov
test
cmp
sub
add
pop
add
push
add
fmulp
mov
add
add
orb
jmp
les
xor
inc
jge
lods
mov
popf
sub
lahf
jae
adc
add
push
push
lods
or
sbb
test
lea
cmovo
add
adc
in
idivl
cmp
pop
pop
cmp
shll
rclb
sbb
mov
aaa
mov
mov
sub
int
lods
sarl
call
push
and
or
xchg
in
jbe
ret
bound
jne
xor
push
pop
jbe
cmp
xchg
sbb
sbb
lcall
dec
mov
push
or
enter
sub
ret
jne
xor
outsb
in
std
jmp
and
xor
pop
call
inc
jmp
in
imul
or
jle
or
mov
sahf
push
mov
mov
shlb
into
sarb
sbb
jl
in
adc
inc
mov
ret
sar
cmp
fs
pop
add
sub
push
mov
or
in
ds
or
rorb
test
dec
nop
xorb
les
roll
push
jp
jl
pop
xor
mov
sbb
cmp
jl
pop
lods
sub
sbb
jmp
or
rcr
movsb
cmp
or
andb
push
or
or
mov
bound
xor
adc
pop
or
mov
push
fdivl
mov
adcl
or
add
ror
ficoms
push
add
call
out
dec
in
pop
aaa
pop
loope
xchg
mov
or
sbb
push
in
call
mov
test
inc
aaa
jo
xor
call
mov
cltd
cmpsb
nop
je
test
fimull
adc
mov
cmp
rolb
call
je
push
mov
lea
or
pop
cwtl
pop
notl
push
fucomip
cmp
je
cmp
jbe
hlt
inc
add
nop
add
pop
pusha
mov
pusha
negl
nop
clc
push
and
std
pop
nop
or
shll
jo
not
lock
sbb
push
mov
dec
xchg
push
push
mov
cli
adc
sbb
xlat
add
pushf
loop
outsb
es
test
inc
jmp
or
cld
imul
sbb
fwait
add
xchg
test
dec
mov
arpl
ret
mov
lock
jo
andl
paddb
jnp
pusha
enter
jmp
push
mov
inc
mov
call
js
push
sbb
inc
js
cltd
adc
pop
mov
xchg
sbb
push
lds
lods
aad
cmpsb
jno
sti
inc
adc
push
loopne
adc
add
and
lods
stos
loopne
sti
push
xchg
and
adc
jmp
push
ja
dec
jle
test
add
in
movsl
push
lods
cwtl
loop
shll
and
test
js
lds
mov
fs
and
lock
inc
pop
xorb
mov
xchg
aam
xor
sub
push
sti
and
push
cmpsb
aam
fwait
shrl
cmp
cld
icebp
jecxz
cwtl
popa
fsubrl
call
push
shll
inc
je
push
xor
sbb
mov
ret
in
fadds
cmp
ret
scas
ja
scas
mov
lds
push
push
inc
adc
fs
add
mov
lcallw
in
adc
aam
dec
inc
rcl
push
enter
or
rcrl
sub
shrl
and
mov
adcl
mov
jmp
sub
lock
and
xchg
mov
xchg
jmp
inc
das
mov
addps
xor
sub
lock
dec
push
hlt
fnstenv
mov
adc
jne
clc
and
cmp
scas
sbb
push
sbb
push
or
je
mov
sbb
std
mov
and
test
mov
pop
adc
sub
xchg
xchg
or
sbb
dec
push
inc
test
and
add
ds
or
and
aaa
insb
pop
call
push
pop
imul
push
push
imul
or
sbb
fdivs
addr16
sbb
mov
xchg
sbb
sbb
sbb
jno
jne
into
cmp
or
lea
js
mov
dec
jne
push
pop
dec
and
or
js
xchg
push
int3
jecxz
decb
or
jns
outsl
add
push
cmp
jmp
nop
xor
push
sahf
jae
mov
adc
xchg
sarl
mov
jmp
icebp
call
je
and
inc
call
or
and
push
or
dec
setb
push
cld
inc
mov
and
sbb
movsb
sbb
mov
scas
fdivrp
mov
jl
jmp
dec
jl
js
and
dec
mov
sbb
add
mov
dec
xor
fxtract
clc
xchg
add
jmp
pop
xorb
ret
mov
or
mov
sub
pusha
xchg
movsl
mov
push
xchg
add
lahf
xchg
fadds
or
dec
sbb
xchg
neg
mov
add
call
in
sub
lret
jmp
js
sbb
pop
pop
aad
test
or
push
adc
mov
sbbl
cmp
xchg
and
int3
jbe
adc
mov
dec
pop
xor
das
push
pop
inc
mov
push
xchg
arpl
push
stc
sub
sub
mov
push
push
sbb
push
sbb
mov
clc
or
icebp
in
mov
or
popf
pushf
or
cmp
fidivl
cmp
test
out
inc
js
and
addb
push
fs
inc
mov
dec
sub
add
andl
or
ja
cmp
jg
push
dec
lea
lock
or
call
in
add
xor
inc
ja
adc
and
xor
scas
les
nop
push
decl
or
pusha
add
dec
jne
movzbl
add
je
dec
sarb
les
test
sub
jmp
incl
nop
sbb
xchg
dec
fstl
std
daa
and
jmp
and
adc
cmp
push
cli
sub
sbb
adc
cmp
loopne
and
sti
rorb
xor
inc
pop
rorb
inc
push
and
inc
rolb
out
add
imul
aam
imul
and
subb
xchg
sti
outsl
xor
loop
sub
push
or
dec
sbb
call
call
in
push
das
dec
aam
inc
add
nop
je
ja
call
pop
pop
pop
stos
inc
je
sbb
push
das
dec
mov
mov
push
pop
sti
or
pop
mov
andb
dec
mov
ds
sbb
aas
das
and
pop
mov
repnz
fnsave
mov
inc
add
adc
sub
xor
mov
sub
bnd
xor
fldenv
inc
push
xor
adc
xor
xorb
inc
add
adc
sbb
xor
xor
xor
and
push
pushf
mov
aam
adc
xor
add
xor
sub
dec
inc
add
pop
sbbl
add
and
xchg
add
xor
add
add
mov
lods
mov
xor
mov
sbb
cmp
or
mov
xchg
mov
nop
or
dec
pop
dec
cmpsl
sbb
xor
pusha
aas
push
sahf
icebp
xchg
cli
or
or
jp
jle
ds
inc
mov
callw
cmpsl
jecxz
into
pop
call
call
out
pop
movsl
out
mov
dec
aam
inc
adc
aas
fwait
jns
cmp
call
and
pop
dec
adc
int3
pop
fs
add
mov
mov
pop
cmp
or
movzbl
mov
or
jno
ja
pop
psubsb
add
call
inc
stos
scas
testl
leave
mov
je
cmp
jmp
adc
stos
inc
ljmp
fnsave
xchg
rolb
out
daa
mov
addr16
fmull
pop
push
into
cmp
push
mov
sub
fimull
jmp
sub
aam
lds
shr
add
test
adc
cmp
jle
push
ljmp
xchg
sbb
jnp
add
cmp
loopne
inc
sbb
or
adc
addr16
mov
sub
jle
mov
mov
add
mov
aaa
ret
push
and
inc
fisubrs
sarb
arpl
dec
sti
mov
push
push
es
aaa
int3
adc
movsl
push
and
cld
aad
es
sti
sbb
shll
cmpsb
adc
inc
ja
xor
nop
nop
push
push
push
es
bound
add
fbld
outsb
iret
dec
push
es
adc
mov
ficomps
cltd
or
fwait
pop
pop
add
xchg
int3
xchg
js
sbb
dec
add
movsb
sbb
inc
push
adc
rcll
dec
sbb
cmp
adc
push
adc
jge
push
xchg
jecxz
and
pop
aaa
push
movsl
and
bound
stos
jmp
andb
in
bound
adc
adc
sarb
push
orl
xchg
pop
rorb
loope
xor
push
adc
shr
sbbb
push
les
pop
mov
das
sbb
or
push
lret
adc
adc
sub
andb
inc
dec
sub
jbe
adc
lret
mov
pusha
inc
inc
lods
lret
outsb
inc
cmp
call
inc
xchg
sbb
inc
or
push
inc
dec
insb
imulb
cs
pusha
popf
idivl
sbb
je
mov
mov
inc
mov
inc
dec
insl
inc
dec
inc
inc
xchg
repz
xor
sub
sbb
fistl
or
sbb
jmp
jns
je
xchg
adc
pushf
adc
pop
pushf
mov
pop
nop
add
aad
je
and
dec
inc
faddl
mov
mov
fisubrs
mov
or
push
mov
repz
mov
or
fistl
xor
or
push
adc
or
int3
les
mov
xchg
adc
or
mov
sub
addr16
shrb
jge
pop
movsb
jne
and
loop
or
add
fs
and
out
aam
pushf
push
pop
jmp
cmp
je
in
sub
sbb
repz
lahf
out
xor
ret
lea
test
inc
mov
xor
push
pop
add
push
repnz
add
add
push
pop
repnz
fdivrp
and
cmp
je
xchg
add
xchg
sub
mov
ror
test
push
push
add
pop
pop
in
lcall
or
inc
scas
sbb
cmp
cld
enter
add
or
pop
pop
add
or
add
or
xchg
or
cmp
mov
in
sahf
xchg
je
push
push
pop
cs
rdmsr
adc
mov
adc
pop
adc
xor
adc
inc
scas
in
int
push
adc
add
pusha
in
ficoms
adc
adc
push
adc
sahf
xchg
sub
pop
mov
sbb
sbb
xchg
sti
mov
cmp
push
fcompl
sbb
enter
sbb
sbb
add
je
push
sbb
repnz
xor
sbb
pop
push
push
inc
incl
in
negb
pop
jne
add
add
sub
fcomp
dec
push
clc
add
inc
sti
pop
fcmovb
add
cmp
xchg
mov
and
lods
pop
sbb
cwtl
xchg
push
in
fldt
imul
rcl
xchg
notl
adc
in
in
xchg
out
mov
mov
out
out
andb
in
in
call
adcb
into
adc
cmc
mov
cmp
mov
cmp
and
jmp
jmp
push
loop
call
in
xchg
push
sbb
in
sahf
xchg
sub
in
mov
out
in
in
xchg
out
or
xorl
je
lock
dec
icebp
cmp
scas
subb
das
jnp
or
inc
repz
std
fidivl
cmpsl
cmpsb
hlt
hlt
imul
in
mov
cmc
cmp
mov
testb
sbb
gs
clc
jb
or
clc
clc
or
xor
stc
and
cmp
push
repnz
add
sti
jb
jns
fdivrp
cld
cld
je
out
std
push
ss
push
push
nop
shlb
mov
xor
dec
sahf
aaa
and
je
insl
fs
xchg
lds
aam
hlt
push
or
ss
jb
pop
jmp
or
jecxz
xchg
sub
push
xor
jmp
push
xchg
push
cmpl
aam
mov
lcall
jns
xor
sti
mov
lds
adc
nop
out
inc
or
lea
xchg
daa
in
cltd
xchg
cmp
pop
or
jmp
or
aad
aad
out
xchg
mov
in
cmp
andb
repz
xchg
sbb
push
cli
stc
jb
imul
stc
imul
mov
repnz
clc
cltd
jb
shll
ss
push
cmp
stc
sti
sti
sti
xchg
push
repnz
scas
or
cmp
jmp
aad
xchg
clc
mov
subb
daa
add
xabort
sbb
jmp
loop
enter
shll
loope
and
inc
clc
and
pusha
dec
add
or
movsb
out
xchg
fdiv
out
xchg
pop
push
loope
negl
and
mov
lcall
jns
xor
pushf
and
pop
testl
xchg
repnz
mul
scas
testb
inc
nop
testb
repnz
pop
push
lea
loope
imulb
mulb
out
div
testb
mov
iret
in
mov
jns
pusha
xor
cmc
orb
push
cli
cli
xchg
in
aad
cmp
loope
cmc
andb
cli
hlt
or
xlat
inc
lock
into
repz
xor
push
mov
cmpsb
ret
imul
xchg
stos
cmp
jp
leave
or
cmp
add
xchg
hlt
mov
hlt
or
sub
in
pop
xchg
pop
pop
lret
repz
repz
or
xchg
repz
xchg
adc
repz
rcll
pop
lcall
pop
xchg
adc
repnz
repnz
rcll
dec
shl
test
cmp
icebp
icebp
das
mov
jb
xchg
pop
adc
repnz
repnz
push
cmp
sbb
inc
jb
sbb
or
mov
lock
cwtl
icebp
xchg
add
daa
test
xor
mov
push
and
icebp
movups
xlat
or
pop
ret
pop
mov
test
lret
repnz
jp
jmp
imul
push
sub
ffreep
dec
push
ret
inc
insb
loope
mov
cmp
cmp
scas
in
mov
ret
mov
mov
ret
fld
push
jne
stc
xor
mov
dec
add
movsb
xchg
dec
add
je
sbb
ss
fisttpll
push
jmp
js
filds
int3
dec
push
nop
cmpsl
xor
push
adc
aaa
mov
xor
or
push
add
jl
dec
imul
cli
push
jecxz
jns
data16
dec
mov
imul
out
in
push
push
aad
in
xchg
mov
push
dec
outsb
or
mov
mov
jmp
sub
sbb
sarl
sarb
mov
pop
and
lea
inc
cmp
and
lret
test
jmp
dec
dec
sub
mov
and
adc
in
sub
pop
xchg
push
fists
push
inc
and
jmp
out
adc
rcr
push
and
ficoms
cmp
rcll
or
xchg
icebp
adc
js
pop
mov
insb
test
sbb
mov
adc
dec
and
call
or
adc
add
ret
xor
lret
mov
add
add
aaa
push
push
inc
ds
fsubl
call
pop
leave
fwait
adc
mov
mov
pop
insl
adc
push
rol
sbb
adc
ret
inc
adc
insb
arpl
cmpsb
push
divb
push
and
jb
push
sub
mov
cli
adc
mov
loop
andl
ss
or
adc
xor
add
and
jmp
daa
push
cmp
insl
sub
jmp
push
xchg
push
dec
xchg
test
inc
arpl
call
xchg
xor
mov
inc
fwait
test
enter
add
pop
xchg
pop
sub
and
leave
js
data16
shlb
sub
and
push
xorb
nop
or
mov
adc
dec
aaa
inc
adc
test
leave
pop
inc
dec
pop
adc
or
mov
push
add
int3
dec
bound
sbb
int3
ret
adc
inc
cwtl
mov
inc
push
xorb
add
mov
jnp
fnstenv
or
push
dec
inc
push
ds
sar
add
or
mov
ret
mov
cmpsb
mov
lods
filds
idivb
sub
xchg
and
jmp
xlat
inc
je
add
sub
sti
iret
push
or
leave
dec
sbb
push
sbb
scas
mov
dec
push
rolb
sub
addl
lock
fcomps
movsb
sti
and
or
jmp
lret
cs
int
pop
sbb
pop
repnz
mov
jmp
push
lcall
adc
cli
and
outsl
mov
and
mov
stos
imul
pushf
dec
hlt
push
sbb
dec
push
rcl
gs
or
mov
aam
or
test
nop
into
scas
jno
pop
and
nop
nop
outsb
stos
dec
mov
mov
jb
push
and
movsb
jb
jb
sbb
movsb
in
and
push
xor
push
out
cmpsb
mov
adc
in
adc
mov
mov
mov
jbe
mov
fsubl
hlt
in
test
leave
sbbb
lcall
push
or
or
dec
fbstp
nop
dec
sarl
pushf
inc
inc
push
or
sbb
aam
cmpl
out
push
jmp
push
jmp
les
pop
fs
outsl
adc
mov
and
adc
loopne
pop
push
andl
dec
sbbl
and
mov
inc
mov
sbb
test
inc
cmp
mov
mov
imul
aas
test
jmp
inc
nop
mov
push
mov
pop
mov
or
cwtl
cmp
xchg
test
lea
xor
push
popf
push
push
cmp
mov
imul
cltd
sub
lods
mov
inc
dec
inc
es
xorl
arpl
dec
inc
scas
adc
fs
push
and
mov
cs
jl
or
inc
sbb
lcall
and
and
lods
add
nop
clc
mov
or
dec
rorb
inc
xchg
or
add
cmp
cmc
pop
or
and
sbb
addb
or
test
scas
sub
sub
pop
dec
rorl
sti
mov
jbe
jle
push
rolb
sbbb
push
or
jmp
mov
xor
add
movsb
xchg
or
xor
shrb
jle
add
lock
movb
mov
mov
pushf
cmp
in
add
adc
xchg
and
bound
jmp
mov
add
jl
shrb
nop
jb
movsl
cmp
push
or
push
push
xor
lea
or
mov
fndisi(8087
mov
or
inc
imulb
dec
rcll
add
push
bound
pusha
push
cmp
in
aaa
popa
aas
ss
xchg
mov
jae
movsl
sub
cmp
cltd
or
and
inc
xchg
or
cltd
inc
adc
cmp
cmp
sbb
leave
push
xchg
and
mov
sti
nop
outsb
mov
mov
xor
enter
xor
dec
cltd
scas
imul
cmp
nop
xchg
push
push
adc
adc
and
cwtl
cs
imul
and
mov
xchg
je
loop
sbb
dec
adc
inc
lods
mov
adc
loope
xchg
mov
loopne
sbb
push
dec
inc
xchg
push
push
inc
mov
test
lcall
xor
aad
push
rcll
push
rcl
dec
mov
lret
mov
js
je
loopne
mov
mov
cmpsb
mov
lahf
call
cli
mov
rcll
inc
dec
push
mov
xor
dec
je
sbb
mov
dec
mov
es
xchg
in
loope
lcall
aad
mov
mov
lcall
xor
add
mov
rclb
mov
lcall
push
rcl
loopne
pop
mov
or
mov
mov
xor
aad
hlt
jae
popf
stos
imul
push
push
rcll
nop
jns
add
jo
mov
outsb
imul
cmp
or
outsb
test
mov
nop
icebp
movsl
test
mov
test
call
sbb
dec
inc
push
iret
mov
lods
cld
jmp
push
inc
es
roll
jo
add
call
es
cmp
outsb
mov
mov
dec
push
fs
icebp
dec
dec
inc
or
orl
push
xor
sub
subl
mov
push
or
imul
sub
je
test
mov
xor
adc
cmpl
inc
jo
add
adc
in
sbb
sub
sub
xor
test
subl
fcomp
push
ds
pop
hlt
jp
roll
ss
inc
sub
mov
js
rcll
test
enter
rcl
loope
mov
add
sub
jo
stos
imul
xor
nop
add
dec
into
push
rcll
insl
cltd
jbe
inc
inc
sbb
shrl
sbb
dec
add
sbb
push
sub
rcrb
fildl
and
xchg
inc
dec
cmpl
orl
aam
and
rolb
mov
cmpsb
mov
cmpsb
lcall
test
subl
mov
adc
test
andl
or
aam
xor
and
lcall
add
lret
cwtl
push
addl
lret
test
xchg
or
int
xchg
push
ret
jl
cmp
push
jbe
filds
xchg
add
in
mov
push
cmp
in
xor
or
adc
imul
arpl
or
xchg
pop
sbbl
sbb
or
xor
pop
xorl
movsl
lahf
cs
ss
add
sti
lret
or
out
mov
xor
sub
cmpl
dec
subl
and
pop
dec
aam
je
push
cmpl
arpl
push
xor
jp
movsb
xchg
iret
out
dec
push
inc
outsb
or
nop
push
movsb
cs
mov
dec
xor
dec
inc
stos
inc
test
cmp
stos
add
pop
rcl
je
outsb
test
push
pushf
xchg
push
mov
sub
andl
xchg
sub
xor
xchg
xchg
xchg
xchg
cmp
inc
push
xchg
xchg
xchg
inc
pop
dec
dec
cmp
popf
lds
and
xor
adcl
je
call
adc
dec
inc
aaa
xor
jo
hlt
loope
subl
lcall
or
sub
ds
add
icebp
leave
jmp
fistpl
jge
aaa
imul
and
lea
test
and
cmc
push
mov
repz
adc
in
pop
xchg
mov
inc
pop
mov
pop
fs
or
mov
push
mov
das
cmpsb
test
dec
pop
ret
sub
fildl
inc
push
mov
inc
add
xor
cmp
jbe
cmp
in
lods
ret
mov
xchg
dec
inc
into
fwait
pop
dec
fucomi
xor
pop
popf
test
jp
push
loopne
pusha
xorl
mov
fistpl
pop
fptan
jo
int3
add
jl
dec
inc
imul
pop
and
rcrb
pop
push
clc
cmpsb
and
ja
gs
sbb
loope
pop
xchg
add
xor
xchg
xlat
jae
dec
inc
and
sti
aaa
or
pop
add
or
roll
mov
dec
sbb
fsubrl
testl
lcall
push
xor
pop
jle
test
or
add
pop
and
xchg
je
test
or
je
dec
cmp
add
js
call
push
test
cmp
mov
push
test
dec
mov
test
cmc
adc
cli
push
mov
jae
popf
push
jp
cwtl
xchg
inc
sub
sub
push
or
movsl
loope
pop
push
out
or
pop
adc
push
cmpsl
or
rolb
jl
pusha
mov
jnp
in
cli
sub
mov
sub
add
xor
jg
mov
mov
add
pop
mov
sub
sub
leave
xchg
es
ret
and
movsb
add
add
xchg
sbb
dec
hlt
out
or
dec
cmp
adc
rolb
dec
add
notb
mov
or
and
lcall
insb
dec
pop
sbb
inc
shrb
sub
pop
adc
sbb
je
jbe
call
cs
and
jbe
dec
mov
or
mov
add
mov
inc
cmp
or
add
je
push
mov
dec
push
shll
cmp
pop
andb
inc
in
push
in
xchg
ret
idivb
dec
rcrb
push
or
dec
rorb
add
mov
add
mov
mov
inc
sub
or
dec
dec
add
push
dec
mov
and
and
lahf
xchg
test
and
add
filds
add
xor
loopne
add
adc
sub
jmp
call
imul
dec
clc
cs
call
mov
es
jmp
imul
call
sub
clc
and
leave
mov
dec
adc
adc
and
pshufw
push
adc
cwtl
dec
call
adc
jb
pop
adc
in
or
inc
call
iret
and
aaa
test
adc
adc
adc
dec
rclb
or
lods
adc
or
adc
adc
adc
adc
dec
adc
sbb
daa
xchg
or
das
cwtl
dec
call
test
pushf
push
mov
mov
jae
lea
mov
jle
push
cmp
adc
add
rcll
push
outsb
loop
call
dec
aas
shlb
movsb
add
incl
jl
je
sbb
rclb
xchg
xor
int
jecxz
adc
add
mov
push
arpl
rclb
inc
adc
inc
shr
ret
jmp
mov
cmp
cmp
push
jmp
pusha
addl
pop
lret
scas
sub
push
jp
mov
cmp
xor
sub
repz
inc
or
sub
inc
ja
and
arpl
loopne
inc
adc
adc
unpcklps
out
and
sub
ljmp
adc
xchg
cmpsl
lret
movsb
inc
pop
adc
repnz
cs
mov
rolb
and
cmp
pop
nop
fimull
inc
mov
jp
mov
inc
call
jbe
test
inc
push
out
jbe
push
push
add
faddl
add
mov
xor
test
or
test
movb
imul
inc
fldl2t
insb
cmp
sbb
std
insl
add
cmp
inc
jmp
dec
jmp
xor
jo
push
pop
push
inc
inc
adc
inc
jmp
inc
inc
push
pop
je
pop
es
add
inc
filds
andb
shll
mov
loope
jmp
pop
cld
pop
pop
push
sub
mov
xorb
adcl
add
je
xor
dec
jp
movsbl
and
cmp
sub
shlb
or
out
outsb
pop
or
into
call
xor
int
pop
add
pop
sbb
adc
push
popf
pop
pop
mov
cwtl
xchg
mov
outsl
test
and
in
mov
enter
sbb
mov
cmp
xor
or
xor
insb
rolb
mov
gs
pop
call
xor
inc
push
jge
add
inc
inc
shl
test
pop
jb
jne
lods
sarb
lret
fisubrs
testl
push
push
or
inc
jecxz
roll
cmpsl
add
lcall
add
enter
jne
cwtl
loopne
push
adc
push
add
ret
push
sar
inc
push
adc
sbb
jl
call
xor
rolb
or
pop
push
sub
fistl
fcomip
inc
fistl
out
cmp
pop
test
mov
xlat
nop
mov
movsb
sbb
dec
sbb
sbb
dec
arpl
bound
and
pop
add
filds
cmc
add
in
sub
and
popa
leave
xorb
mov
xchg
ds
inc
cmp
in
push
lcall
test
dec
adc
out
or
push
lea
lock
mov
dec
orl
add
and
xchg
roll
test
xchg
les
mov
dec
and
push
dec
xor
mov
cmp
inc
ds
adcl
out
nop
inc
iret
mov
or
rol
mov
sarb
add
rorb
fdivs
pop
push
test
lahf
lret
in
mov
sub
movsb
cmpsl
push
push
sub
leave
dec
xlat
cmc
fists
in
popa
xor
lea
mov
add
mov
sub
sbb
dec
cmpsl
sbb
xor
pop
sbb
inc
stos
loopne
mov
mov
and
or
les
lea
daa
add
shll
fmulp
sub
push
lea
xchg
out
repnz
lock
jbe
jge
xchg
insb
mov
cmpsb
sub
cmp
repnz
pop
add
push
cmp
fwait
inc
ja
xor
loop
sbb
add
ss
and
pop
mov
sbb
push
or
push
int3
rcll
jmp
or
or
xchg
call
mov
adcb
stos
xchg
xchg
sbb
cmp
aas
je
xchg
pop
dec
pop
jmp
notb
jmp
movsl
add
add
movsb
jae
sbbb
test
inc
cli
pop
imul
lcall
js
aad
rcl
or
inc
dec
dec
or
enter
nop
pop
cmovb
movsb
pop
rclb
fdivrl
aad
pop
or
or
es
or
dec
inc
out
mov
and
cmp
repnz
ret
jnp
nop
xchg
xchg
pop
mov
jno
mov
push
pushf
dec
xchg
pop
jecxz
mov
jecxz
add
inc
jecxz
addl
loop,pn
inc
stos
movsb
fsubp
dec
or
sub
jns
add
sbb
es
mov
xchg
loop
daa
and
dec
test
nop
xchg
jb
inc
add
ret
or
dec
enter
loopne
dec
andl
xor
add
push
leave
cmp
in
xor
adc
ljmp
arpl
in
push
ljmp
xorl
add
mov
inc
inc
repnz
lcall
xor
xor
addr16
insb
xchg
ret
adc
cmp
rorl
add
mov
pop
push
add
xor
rclb
add
cmpsl
xor
xor
mov
pushf
fs
sbb
sarb
mov
push
xchg
pop
nop
adc
xchg
dec
mov
mov
sbb
icebp
jecxz
xorb
fildl
out
push
jecxz
sbb
loope
call
icebp
mov
push
and
nop
inc
int
pusha
sbb
lds
loopne
xor
movsb
mov
sahf
imul
in
dec
lret
inc
inc
rcl
fcoms
adc
inc
pop
arpl
and
push
pop
rolb
js
add
adcl
fwait
pop
xchg
add
xor
test
in
push
xchg
in
rolb
cmp
call
movsb
push
jne
in
add
xchg
push
call
push
loopne
or
jo
test
push
sbb
add
adc
sub
cmp
adc
dec
jmp
add
test
sbb
add
insl
jb
in
adc
jecxz
mov
outsb
mov
lret
call
leave
mov
stos
rorl
add
psadbw
dec
call
jecxz
lock
and
movsb
and
icebp
scas
push
xchg
xchg
sbb
sbb
or
out
and
sub
xor
adc
rcl
dec
add
adc
in
and
call
add
pop
mov
sbb
out
outsb
hlt
xchg
mov
fldl
out
daa
sbb
push
ret
pop
sub
into
pop
pop
andb
fisttpll
fcmovnb
loop
add
jns
mov
xlat
inc
rolb
je
je
sarl
sub
lods
push
sbb
adc
daa
jecxz
or
movl
cmp
cltd
sbb
inc
sub
or
popa
ds
push
loopne
adc
dec
pop
add
and
lock
mov
push
call
call
mov
and
js
xor
jo
lods
add
testl
add
sbb
sub
es
xor
pop
adc
dec
sub
movsl
sub
mov
sbb
dec
sbb
sub
sbb
je
sbb
dec
adc
inc
leave
inc
or
mov
movsl
sub
sbb
movsl
sub
xchg
in
push
test
stos
nop
xchg
xchg
dec
push
rcl
push
cmpsl
andl
mov
addr16
call
mov
sub
pop
jle
pop
or
add
lret
cmc
stos
loopne
add
add
or
fisubl
stos
inc
or
mov
aam
shrb
pop
call
add
mov
add
mov
pop
and
inc
sub
sbb
adc
mov
jno
nop
out
add
inc
inc
pop
fnstcw
fldenv
fldenv
adc
int3
fldenv
test
stos
cmp
rcrb
mov
cs
mov
xorb
enter
xchg
mov
dec
push
call
test
adc
add
lds
xchg
adc
or
pop
pop
fldenv
cs
or
add
mov
ljmp
and
fcompl
xor
xchg
xchg
fldcw
and
aaa
call
adc
shlb
inc
and
xorl
or
loop
fxch
mov
xor
popa
mov
or
std
xor
adc
idivb
or
mov
and
ds
sub
fcomi
daa
jno
pop
fsts
mov
cs
and
and
or
flds
xchg
movsb
xor
add
fnstenv
fsts
fstps
and
test
jmp
xchg
nop
mov
fsts
jl
jp
jo
out
lcall
jo
pop
or
and
xchg
mov
push
aad
loopne
fnstenv
add
nop
fldenv
fnstenv
rorb
inc
fstps
add
inc
mov
push
ffreep
mov
adc
aaa
pop
and
jmp
lret
inc
fstps
or
adc
rclb
push
sbb
mov
sbb
and
call
loopne
rcrb
sbb
adc
cmpsl
imul
stos
movsl
or
je
add
test
sbb
outsb
mov
xchg
shl
fxch
lds
xlat
fldenv
cmp
test
inc
mov
inc
inc
faddl
in
nop
mov
inc
fnstcw
xchg
flds
cmpsl
adc
popa
push
int
call
daa
dec
lret
in
mov
push
pop
fnstcw
and
outsb
shlb
add
inc
insl
pop
mov
xor
aaa
je
rcr
call
xchg
or
scas
mov
or
sbb
mov
sbb
leave
mov
sarb
cmp
jp
sub
adcb
xor
or
jbe
clc
cmp
inc
xchg
mov
cwtl
cmp
sub
fldl2e
xchg
mov
inc
pop
repz
mov
sbb
mov
xchg
mov
fiaddl
pop
xor
or
jecxz
and
call
or
and
cmp
dec
mov
aas
sbb
xchg
push
push
aaa
jns
test
cs
mov
fs
pop
dec
inc
or
inc
cmp
xlat
dec
xchg
movlps
pop
enter
rclb
xchg
test
pushf
and
mov
mov
inc
shlb
and
cmpsl
xchg
sti
mov
ret
push
dec
inc
out
mov
test
and
push
fidivrl
decl
shlb
xor
pushf
and
pop
jo
nop
jge
mov
or
cmp
jno
rorb
fisttpl
aad
fdivrp
add
and
loopne
jae
stos
xchg
ret
dec
pop
cwtl
insb
call
inc
add
pop
inc
xor
and
testb
sbb
fs
nop
sub
sbb
loopne
nop
mov
mov
sahf
adc
ss
sub
shlb
jnp
mov
sbb
jne
sbb
jnp
xchg
or
jmp
sbb
or
ss
xchg
jnp
xchg
add
push
mov
sbb
test
test
add
push
sbb
sbb
mov
sbb
add
mov
pop
mov
imul
pop
out
cmp
in
mov
les
add
es
push
dec
sbb
enter
lock
and
cmp
sar
mov
adc
jnp
adc
mov
mov
out
xor
daa
mov
shll
cmpsb
rclb
pusha
cmp
dec
call
loop
mov
push
jecxz
and
adc
test
add
add
push
or
out
and
call
pop
in
outsl
nop
sbb
mov
dec
sub
push
mov
sbb
je
mov
xchg
gs
int3
je
xchg
sbb
lds
mov
mov
stos
sub
xor
cmp
mov
cmp
xor
fsubr
test
pop
dec
aam
or
inc
stc
imul
call
adc
das
stos
out
scas
pusha
shlb
call
lret
xchg
das
jg
and
adc
call
mov
call
lock
call
adc
pop
cmp
fcomps
in
outsl
int
inc
call
mov
lret
pop
shll
call
repnz
call
fs
lret
xchg
das
pop
insb
call
je
and
pop
jl
push
xchg
dec
mov
adc
cmp
jb
pop
sub
mov
nop
sub
adc
pop
pushf
cli
lret
sub
in
fsts
adc
test
lods
int3
out
rcrb
mov
xchg
mov
xchg
mov
jle
jae
lret
loopne
in
call
push
in
inc
aam
xchg
lret
lock
movsl
jb
pop
clc
sbb
adc
sub
add
leave
or
or
leave
gs
loope
xchg
dec
in
adc
rclb
cs
and
and
sub
mov
jle
push
cs
dec
jae
push
push
mov
inc
dec
aaa
dec
in
cmp
xor
jb
pop
mov
sbb
xchg
lret
pop
add
push
and
xorb
xor
push
and
inc
pop
insb
and
mov
xor
sahf
dec
call
and
mov
je
data16
js
adc
inc
dec
lcall
movsb
sbb
imul
mov
imul
cmp
in
sbb
inc
test
adcb
dec
cli
dec
lcall
mov
movl
shrb
test
sbb
push
xchg
push
dec
adc
or
add
adc
lcall
daa
inc
and
xor
xchg
add
dec
inc
pop
pop
mov
push
and
and
xor
in
sub
add
ljmp
stos
add
or
add
mov
inc
cmp
lods
pop
jge
inc
mov
add
add
or
jge
rorl
jge
push
pop
pop
inc
or
aad
in
cli
cs
xchg
addr16
pop
adc
and
imul
call
xor
mov
fnsave
mov
xor
xor
imul
mov
popa
fsubrp
sbbb
xchg
xchg
adc
adc
jp
ret
push
mov
sub
mov
sbb
push
or
push
jecxz
xor
inc
add
xchg
pop
inc
pop
mov
add
sbb
xor
shrb
addl
or
pop
rcll
or
fwait
je
ret
stc
mov
mov
mov
or
pop
push
andb
pop
or
adc
xorb
add
dec
xchg
mov
mov
out
imul
mov
add
inc
xor
cmp
add
inc
adc
or
xor
fs
or
es
jmp
fs
ret
adc
fwait
mov
inc
mov
test
movsl
jne
jne
xchg
pop
pop
outsb
xchg
test
adc
and
mov
call
mov
jne
test
jne
jne
sarl
jg
inc
push
mov
mov
test
xor
jne
and
bound
movsb
stos
mov
in
push
sub
cmp
mov
xor
add
cmpsb
fs
cltd
shlb
dec
xchg
sub
rclb
pop
dec
leave
add
lods
pushf
cltd
xchg
sbb
je
jle
sub
dec
leave
dec
pop
pop
je
cs
pop
mov
call
inc
xchg
pop
mov
pop
push
stos
dec
push
ret
rcrl
xor
shlb
js
pop
or
or
jo
sar
cmp
xchg
sub
cmp
pop
mov
xor
xor
sub
pop
cmpsb
pop
adc
xchg
pop
add
add
pushf
cs
call
xchg
xor
call
pop
shlb
pop
cmp
pop
and
sahf
rcrb
sub
xor
pop
and
in
pop
ret
dec
pop
and
jge
sbb
mov
xchg
xchg
ret
or
adc
stos
dec
and
pop
rorl
push
call
jns
call
cltd
dec
fwait
xchg
adc
mov
jmp
adc
fwait
lods
pop
xor
rcrb
rolb
mov
dec
and
ret
test
addl
js
jmp
stos
mov
mov
popf
ret
testb
or
cmpsl
add
nop
cmpsl
lret
or
nop
push
xor
mov
es
cmpsl
dec
xchg
add
pop
cmpsl
mov
addl
stos
xchg
loopne
cwtl
jmp
adc
mov
push
or
inc
fisttps
push
nop
inc
inc
dec
fbld
sbb
sub
jmp
xchg
xor
push
insl
xchg
dec
mov
loopne
addb
mov
xor
mov
mov
or
inc
shrb
mov
repz
bound
add
xlat
add
int
jmp
jge
insl
xor
and
jmp
les
and
testl
dec
push
mov
int3
lea
mov
stos
xor
add
and
sarb
adc
and
pushf
insb
inc
xchg
test
je
adc
lds
xchg
out
mov
adcb
adcb
adc
sub
add
pop
push
adc
ret
mov
in
ss
inc
cmp
enter
xchg
and
mov
fadds
xchg
xchg
jb
xchg
xor
fs
xchg
adc
rolb
dec
xchg
push
insb
inc
ja
jbe
and
shl
adc
aam
mov
push
loopne
pop
xchg
imul
arpl
mov
stc
push
mov
add
sbb
in
jo
negb
push
je
pop
sbb
test
int
out
call
das
dec
push
add
nopl
inc
and
cmp
test
inc
push
cmp
add
out
nop
and
and
or
mov
das
loopne
loop
mov
movsb
repz
call
xchg
sbb
or
or
sbb
rolb
add
andl
rorb
into
jle
je
or
loopne
mov
and
cwtl
and
movsb
inc
fwait
or
ret
add
adc
lea
movl
dec
xor
adc
das
xor
mov
adc
xchg
and
adc
add
push
mov
scas
roll
mov
push
jnp
pop
pusha
loopne
pop
sahf
cmp
inc
jne
jnp
mov
faddl
add
jbe
pop
jmp
roll
and
push
loop
jnp
inc
add
pop
sarb
shll
add
jnp
out
sbb
roll
shrl
mov
pop
cli
push
or
daa
pop
in
fldcw
test
mov
jecxz
mov
adc
fsts
adc
ljmp
push
pushf
mov
test
mov
and
je
rcl
push
cmp
push
movsb
jge
inc
arpl
mov
push
dec
xor
mov
push
push
mov
xor
test
nop
lret
and
lods
mov
aam
cwtl
mov
push
xor
out
mov
ja
inc
push
push
push
adc
push
pop
enter
push
sub
or
push
add
adc
nop
xchg
lahf
push
fdivl
add
sub
ljmp
roll
mov
and
loopne
mov
mov
andl
mov
movsl
sbb
in
xor
mov
adc
mov
addr16
or
arpl
inc
mov
adc
push
call
mov
xchg
xchg
mov
fnstsw
push
jb
mov
adc
or
xor
lcall
add
dec
cld
sbb
or
les
or
test
mov
inc
jo
pushf
fistpl
adc
or
jp
test
inc
ss
add
or
aam
orb
and
jo
add
or
mov
repz
adc
mov
test
repnz
xlat
fwait
push
out
gs
jnp
add
mov
dec
xchg
out
jb
adc
pop
jb
les
rcrb
loop
jb
insl
adc
mov
or
mov
adc
lods
mov
jge
adc
ret
in
outsl
lcall
adc
xlat
ret
aam
inc
mov
movsb
shl
stos
out
adc
or
cmc
adc
xchg
rclb
out
repz
mov
inc
fs
and
cmp
adc
dec
xchg
add
jo
cltd
fildl
test
mov
xorb
push
out
rorb
mov
cmp
and
sahf
mov
xchg
test
stos
adc
adc
or
or
jbe
sar
push
mov
or
add
iret
cld
adc
push
pop
cmp
add
and
lcall
fadd
out
sahf
out
sahf
mov
lahf
out
sahf
push
ds
or
sbb
repz
aam
push
mov
sahf
out
insl
pushf
pop
push
lods
push
mov
jns
jnp
inc
push
push
sub
push
cmp
sarl
push
xchg
jl
push
iret
jnp
repz
cmpb
push
push
cmp
cmp
sbb
jns
cmpsl
stc
repnz
fmulp
mov
out
mov
ret
into
sbb
incb
ds
jnp
add
es
loop
sbb
out
aam
mov
out
outsb
pusha
sbb
iret
repz
pushf
scas
lret
or
out
lcall
jns
out
jb
nop
sahf
lods
out
sahf
out
rcr
in
xor
out
push
ss
inc
push
sarb
roll
mov
jnp
jnp
daa
rol
loop
clc
adc
sub
jns
shr
sbb
je
fs
push
cmp
vmovaps
daa
pop
mov
jbe
jne
out
add
push
ficompl
cbtw
cmpsl
insl
mov
iret
dec
test
jno
shl
gs
mov
jbe
push
scas
test
pop
cmp
adc
imulb
add
or
xor
jne
movsl
xchg
mov
jle
sub
push
js
sbb
or
dec
push
je
fmull
xorl
stos
push
outsl
push
or
add
push
ja
pop
add
or
mov
es
out
mov
andb
jb
xor
mov
fwait
movsl
pop
jae
outsl
adc
test
ss
mov
cmpsl
add
bound
add
out
xor
jbe
les
mov
push
jl
push
dec
cmp
or
das
fisubrs
sarl
imul
add
les
add
jle
dec
inc
mov
push
lods
jnp
testl
lds
pop
pcmpeqd
and
mov
jecxz
imul
cmpb
sub
xchg
stos
outsl
and
jnp
add
daa
add
ja
mov
mov
xchg
push
mov
aas
add
and
ret
je
lcall
push
movl
push
inc
pop
inc
outsl
cltd
aaa
xchg
movsl
outsl
rorb
dec
xchg
jb
inc
push
xchg
das
fadds
sbb
pop
dec
jg
jmp
and
pop
dec
imul
pop
jp
pop
dec
jae
inc
jne
outsb
mov
lcall
js
jg
inc
fwait
les
jnp
inc
xor
mov
outsl
push
sub
sub
sub
inc
inc
xor
xor
xor
adc
mov
inc
xor
xor
ss
sub
sub
cmp
xor
clc
inc
inc
xor
mov
aam
push
cltd
fisubrl
lret
mov
cwtl
jne
test
push
jo
loopne
xchg
or
fidivrs
cmp
or
movsb
ss
xor
or
push
ret
jmp
sub
inc
aaa
adc
xor
inc
pop
dec
add
adc
jl,pn
imul
push
lock
cmp
xor
dec
and
ss
ss
pushf
xor
xchg
add
mov
dec
push
mov
in
scas
arpl
insb
clc
push
push
dec
hlt
imul
ficoml
pop
push
call
push
inc
out
adc
push
sub
out
cmp
sbb
addr16
inc
mov
lods
sahf
add
insb
mov
lods
and
adc
iret
sahf
loope
aam
xor
and
shl
jg,pn
gs
pop
test
and
outsl
xor
loop
aam
imul
fs
je
push
push
int3
ficompl
inc
cmp
sub
cmp
sbb
xchg
cmp
push
push
dec
popf
mov
fldt
inc
insb
jmp
lock
arpl
insb
mov
or
data16
ret
lret
imul
sbb
xor
xorl
pop
insb
dec
mov
inc
sbbl
pop
add
or
sbb
inc
out
adc
fldcw
pusha
push
and
clc
and
mov
jnp
push
push
shrl
push
imul
cmc
fs
jne
xchg
loopne
jns
add
scas
je
dec
fs
imul
push
imul
push
jo
loope
or
xchg
ss
roll
hlt
enter
jmp
xchg
jnp
outsl
push
pop
arpl
inc
cs
push
push
push
add
add
sbb
ja
mov
push
shlb
outsb
mov
push
popa
imul
add
leave
cmc
bound
sbb
fdivl
mov
add
mov
and
push
push
or
pop
and
dec
loopne
push
repnz
inc
sbb
rolb
and
rcrb
add
push
aas
adc
pusha
and
sbb
sbb
and
xchg
pushf
add
sbb
push
add
les
push
or
add
sub
sbb
sub
add
add
out
adc
orb
or
cmp
adc
iret
push
adc
xchg
adc
push
sbb
sbb
sbb
dec
repz
call
sahf
imul
das
push
pop
nop
cld
and
movsl
stc
mov
cli
js
jns
stc
sahf
out
scas
jp
push
cld
fdivr
mov
cmpsl
sbb
popa
bound
push
add
push
mov
mov
lcall
lds
push
bound
mov
inc
ja
jns
push
ds
cmp
popa
fcoms
or
inc
xor
mov
adc
push
cld
or
in
out
sahf
fmul
les
jno
pushf
push
xchg
call
out
nop
mov
mov
jl
insb
push
iret
pusha
pop
mov
push
sahf
out
dec
inc
inc
cmp
iret
repz
xor
sub
and
cmp
repz
sbb
or
ds
repz
cld
or
out
sahf
out
call
out
sahf
mov
nop
jo
xor
repz
lock
int3
mov
repz
rep
inc
sub
adc
jns
iret
or
push
fcom
les
cwtl
js
sub
cmp
sarl
mov
fwait
loope
sbb
add
call
xor
out
cwtl
jl
dec
xor
dec
pop
adc
xchg
dec
pop
pop
jo
insl
dec
xrelease
les
push
out
mov
dec
adc
lret
sub
adc
add
adc
inc
dec
cmp
loop
and
daa
notb
xor
sbb
fwait
inc
test
pop
cmp
sahf
shll
dec
gs
sbbb
loop
mov
cli
out
xor
bound
mov
xchg
mov
push
ja
mov
push
jmp
ss
daa
dec
mov
sbb
jmp
mov
jae
push
sbb
movups
les
xchg
outsl
movsl
inc
dec
add
js
shrb
mov
pushf
andb
rolb
ret
jns
pop
push
add
out
xor
adc
jg
dec
push
inc
push
xor
xchg
cld
inc
inc
mov
jnp
test
rcrb
add
jne
pop
adc
insb
add
call
xor
push
je
imul
inc
xchg
pop
dec
mov
arpl
imul
xor
decl
or
jne
adc
jo
bound
adc
xor
filds
add
insb
das
inc
sub
sub
outsl
jl
add
mov
cwtl
lahf
add
loopne
mov
cmp
cmp
fsub
ds
and
addr16
mov
rolb
test
pop
ret
xchg
inc
sub
aas
pop
enter
das
fcoms
mov
fs
aam
cmp
ret
enter
sete
int3
sub
rcrl
jae
ljmp
add
in
fisubl
xlat
jns
pop
rcr
popf
inc
pop
or
push
lcall
pushf
setl
lret
or
adc
ss
push
popf
jl
in
push
inc
lds
push
aas
sbb
loope
cmpsb
jg
mov
mov
xor
mov
xchg
pop
and
adc
vmptrst
enter
and
mov
leave
mov
adc
iret
fcmovnbe
insb
dec
mov
mov
aas
jbe
in
insl
mov
imul
loope
adc
lods
xor
daa
fs
loopne
dec
xor
jns
mov
push
sahf
loopne
daa
lock
lea
push
dec
mov
mov
imul
inc
test
push
sub
add
or
iret
test
imul
and
pmaxub
fadds
cltd
sub
lcall
scas
pop
push
and
and
inc
push
test
push
add
push
outsl
ja
xor
pop
xchg
jle
jb
inc
xor
mov
push
add
xchg
jno
fcomp
out
daa
movsb
and
and
add
push
daa
outsb
inc
mov
mov
ljmp
push
rclb
xor
or
bound
data16
xor
dec
push
jb
mov
adc
inc
add
insl
jo
dec
loop
mov
push
add
fisubrs
dec
add
xchg
add
push
insb
jmp
mov
jae
push
in
push
push
jae
push
adc
hlt
push
xchg
push
push
mov
add
call
aam
test
addr16
out
adc
js
mov
inc
sbb
cmp
orb
push
add
and
add
popa
lcall
mov
dec
pop
mov
push
mov
sti
xor
jo
jb
jns
imul
movsb
fidivl
shll
push
push
lods
cmpsl
xor
push
addr16
xchg
imul
dec
imulb
push
dec
jnp
dec
aaa
adc
pop
pop
ja
jge
and
dec
call
and
cmp
and
inc
imul
or
or
mov
add
icebp
call
cmp
inc
shll
inc
add
fbld
jne
gs
ds
jnp
or
inc
mov
subb
addr16
sbb
xchg
or
add
scas
xchg
fs
lea
cmpsb
dec
xlat
leave
or
inc
cmp
ds
data16
movsb
inc
lahf
xor
mov
xor
dec
icebp
cltd
or
nop
ss
loope,pn
out
pushf
call
adc
jle
loope
jle
and
push
dec
jo
loope
pop
adc
int3
rcr
lahf
outsb
xor
loopne
adc
ret
inc
jnp
adc
dec
add
sarl
faddl
mov
ja
loop
shrb
mov
stc
add
mov
jbe
push
lcall
orb
mov
mov
xor
xor
dec
dec
pop
add
mov
xchg
fs
add
ja
in
mov
sbb
push
mov
mov
outsl
cmp
xchg
dec
and
roll
push
frstor
movsl
jmp
add
sbb
dec
mov
lret
adc
push
lock
sub
push
cwtl
mov
rolb
insl
imul
push
mov
cmpsb
outsl
sbbb
arpl
inc
jmp
enter
inc
mov
shlb
fidivl
dec
inc
dec
pop
or
and
cmc
lods
inc
xchg
popa
push
sbb
jnp
inc
sbb
push
stos
enter
je
push
xor
lcall
inc
mov
mov
shrb
iret
add
jo
add
add
pop
add
outsl
inc
or
fs
and
push
jo
sub
je
ds
xor
dec
pusha
push
jo
jno
pop
cmp
repz
mov
arpl
sahf
into
pop
roll
in
xchg
loope
or
adc
sbb
sbb
jo
mov
add
pop
cwtl
jnp
fcmove
pop
add
lret
add
into
out
jnp
test
add
push
mov
pop
pop
cmpsl
mov
fsub
addb
jns
test
inc
jae
add
add
je
ja
sbb
mov
add
xor
and
add
xor
adc
or
lods
pop
sarb
into
int3
add
push
add
mov
inc
andl
xor
jecxz
cmp
jmp
xlat
fwait
rclb
ficomps
mov
push
popa
inc
mov
push
jnp
adc
and
inc
ss
jmp
cwtl
aam
push
jecxz
cmp
pop
in
or
jo
aam
lret
or
add
jae
mov
add
pop
add
pop
pop
push
insb
push
andb
hlt
pop
push
xchg
push
punpcklbw
popf
cs
and
mov
add
or
dec
pop
std
jns
or
and
xlat
cs
add
adc
rorb
gs
cmp
stos
les
sti
fsubrl
adc
ljmp
inc
pusha
jmp
pop
jns
rclb
push
jo
add
rcl
push
mov
adc
add
daa
and
and
or
push
add
mov
daa
sbb
adc
adc
add
dec
repz
clc
out
lock
repz
mov
cmp
mov
test
pop
mov
jns
xchg
nop
mov
jo
pusha
push
pop
iret
repz
push
inc
cmp
and
pushf
out
cmp
adc
in
lock
pop
mov
loopne
fdivrs
repz
enter
repz
repz
mov
iret
repz
cmp
sub
sbb
sahf
out
cmp
add
in
hlt
in
jns
out
in
int3
mov
mulb
mov
js
cmp
jnp
push
inc
sub
and
or
jmp
es
inc
mov
xor
adc
add
vandnps
divl
push
mov
push
mov
in
mov
stos
dec
add
out
divl
sbbb
lock
push
nop
push
repnz
andb
add
aaa
addr16
adc
fisubs
push
aaa
maskmovq
negl
lret
jbe
inc
and
add
outsl
add
or
dec
pop
jg
fs
inc
dec
pop
sbb
add
mov
mov
xchg
addb
imull
pop
inc
push
mov
xchg
sub
dec
inc
aaa
inc
inc
jne
jecxz
mov
sahf
inc
xorb
add
out
les
dec
push
pop
jo
add
pop
add
in
cmp
adc
inc
pop
push
and
and
movsb
outsb
jbe
xchg
or
jae
push
pop
cmpsl
lret
sub
mov
and
jbe
and
xchg
or
popa
cmpsl
lahf
mov
loop
xor
xor
ds
je
flds
xor
xchg
or
jae
pop
and
xor
rcrb
mov
sbb
cmp
inc
js
and
sub
or
and
pop
or
adc
pop
jne
popa
fadds
jae
popaw
insb
into
dec
pop
mov
sub
stc
das
mov
ss
sbb
jmp
push
inc
push
fcmovnu
aad
inc
add
inc
pop
pop
adc
fistps
and
aam
add
xor
xor
sbb
bound
loopne
sbb
pushl
das
xor
xorb
xor
xor
xor
xor
xor
xor
movsb
xor
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xchg
pushl
sub
inc
ss
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
mov
adc
dec
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
lock
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
ret
add
push
lea
clc
aas
lock
idivl
or
add
and
dec
xor
xor
outsb
xor
popf
xor
xor
xor
jmp
xor
xor
xor
mov
xor
xor
xor
xor
push
decl
out
xor
xor
xor
xor
xor
xor
fidivl
decl
mov
les
fnsave
out
xor
mov
ss
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
lods
aaa
mov
cmp
ljmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
ud0
cmp
cmp
cmp
cmp
cmp
push
adc
cmp
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
lcall
incb
jo,pt
test
mov
aas
adc
xor
inc
shr
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
ljmp
pushl
aam
jmp
hlt
xor
xor
xor
xor
xor
pop
xor
jo
xchg
xor
imul
aam
pushf
xor
xor
aaa
cld
lcall
xor
xor
xor
push
aaa
push
sub
ss
clc
loop
call
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
hlt
cmp
cmp
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
pop
or
push
pusha
pop
push
or
aas
clc
decl
arpl
push
xor
xor
xor
pop
cmp
xor
xor
xor
xor
ret
xor
xor
push
incl
lcall
clc
xor
xor
test
mov
mov
pop
cld
pushl
nop
xor
out
in
xor
scas
clc
xor
cmp
jmp
pop
lods
cmp
cmp
cmp
cmp
mov
sarl
aad
fnstcw
fnstsw
loope
in
in
cmp
cmp
pop
sub
std
cmp
cmp
push
lcall
pop
mov
cmpb
ds
aas
jmp
punpckhbw
and
cmp
ss
sbb
pushl
sbb
xchg
cmp
cmp
mov
mov
mov
inc
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
das
push
xchg
cmp
adc
dec
aas
push
mov
cmpb
aas
sarl
shlb
lret
aas
in
out
out
jo
and
loop
xor
xor
xor
xor
incl
jg
xor
xor
xor
loop
xor
xor
xor
mov
xor
xor
scas
std
xor
cmpsb
data16
ss
std
pushl
cli
add
or
aaa
and
aaa
dec
aaa
dec
loope
pushl
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
mov
cmp
test
popf
cmp
xor
pusha
cmp
mov
cmp
cmp
mov
cmp
cmp
inc
cmp
dec
cmp
popa
cmp
xchg
xchg
cmpb
cmp
push
stos
cmp
cmp
or
call
cmp
cmp
cmp
cmp
repnz
jg
mov
sub
xor
cmp
cmp
dec
cmp
push
cmp
insl
cmp
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
and
xor
cmp
pop
cmp
aas
mov
xchg
cmp
mov
jp
jg
cwtl
ds
ds
loope
jg
jecxz
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
jns
into
or
push
xor
insl
stos
aas
sbb
sahf
xchg
les
fidivl
in
call
push
or
adc
and
sub
cmp
jb
mov
xor
xor
xor
xor
xor
xor
mov
jl
lock
xor
xor
xor
scas
jno
xchg
xor
xor
xor
mov
xor
xor
xor
mov
ret
aaa
xchg
call
xlat
xlat
aaa
fwait
sahf
cmpsb
mov
bound
scas
cmp
ss
scas
jp
cmp
fdivl
mov
out
cmp
cmp
mov
shl
pop
fimull
nop
cmp
cmp
cmp
aad
adc
sbb
xor
ljmp
xor
cmp
bound
data16
push
outsb
aaa
jb
jbe
pushl
shlb
ja
js
jge
cmp
cmp
cmp
cmp
cmp
pop
cmp
outsb
cmp
mov
call
out
sbb
ds
xor
xchg
aas
push
mov
xor
inc
xor
mov
xor
xor
ja
xor
push
ss
fiadds
clc
cltd
aaa
mov
ret
aaa
jmp
repnz
or
lcall
cmp
cmp
pop
cmp
jge
mov
cmp
cmp
jbe
xchg
cmp
pop
cmp
cmp
cmp
cld
cmp
mov
and
cmp
popf
mov
cmp
fdivrs
push
aas
jne
mov
or
pop
ss
mov
fwait
xor
xor
dec
or
repnz
aas
xor
divl
pop
xor
jg
or
xor
es
dec
ss
outsb
fcomip
lcall
notb
ss
in
and
cmp
cmp
jo
ljmp
cmp
orl
inc
pop
push
imul
cmc
add
jo
jne
test
mov
ret
cmp
dec
cmp
call
cmp
jae
aam
fnstsw
jecxz
imul
mov
cmp
cmpl
inc
cmp
cmp
inc
pop
mov
pop
and
push
cmpb
cmpsl
ds
ds
ret
ds
ds
sbb
addr16
loope
rcrb
pop
lds
xor
xor
incl
cld
xor
aad
out
cmp
or
xor
xor
xor
xor
xor
incl
xor
inc
ss
lcall
ds
add
xchg
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
ljmp
cmp
mov
cmp
cmp
cmp
cmp
lock
pop
cmp
cmp
cmp
cmp
cmp
adc
clc
pushl
cmpl
cmp
cmp
adc
and
pusha
aas
cmpb
inc
mov
test
fdivrl
loop
out
out
pop
rclb
jg
mov
push
adc
xor
jae
cmp
jne
jg
inc
dec
pushl
xchg
xor
xor
xor
fdivr
xor
xor
shlb
ljmp
inc
adc
adc
sbb
sbb
sub
sub
nop
cmp
mov
cmp
test
enter
sarb
aam
in
ljmp
out
scas
xor
aaa
dec
test
das
into
cmp
inc
xor
xor
lcall
decb
lods
xor
mov
mov
xor
xor
cld
mov
xor
cmp
sub
sub
xor
icebp
decl
cmp
inc
cmp
cmp
cmp
mov
cmp
fidivs
cmp
add
mov
inc
aad
inc
lahf
push
mov
jl
cs
cmp
mov
cmp
cmp
mov
mov
call
dec
cld
push
add
pop
lods
ds
or
adc
sbb
and
and
sub
sub
jg
add
xor
cmp
inc
cmp
lock
cmp
pop
cmp
cmp
insb
cmp
je
ja
psubd
cmp
mov
mov
sub
xor
inc
pop
ljmp
dec
aas
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
shrb
xchg
jg
aas
fdivrs
loopne
clc
jbe
push
or
xor
pop
clc
cmpsl
pop
bound
clc
xor
xor
inc
xor
pushl
push
xor
xor
enter
outsb
ret
cmp
mov
sbb
inc
xor
andb
adc
cmpsb
and
fimuls
xor
ss
shlb
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
call
mov
clc
ss
ss
or
mov
aaa
adc
adc
aaa
sbb
and
and
sub
sub
call
aaa
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
inc
clc
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
or
loopne
into
mov
dec
mov
mov
loop
mov
aaa
les
enter
shlb
aam
fdivs
fcompl
in
les
push
out
aaa
hlt
xor
aaa
add
cmp
adc
adc
sbb
jbe
arpl
mov
ret
fdivrl
call
ret
mov
cmp
cmp
mov
cmp
sub
cmp
cmp
cmp
cmp
push
pop
jne
jo
je
jl
test
ret
decl
mov
cmp
mov
mov
cmp
adc
and
jmp
popa
jmp
movsb
fs
lret
mov
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
aaa
stos
fistpll
pop
aaa
mov
lret
aaa
ljmp
gs
push
aaa
mov
pop
sarb
stc
leave
addb
mov
mov
lcall
sbb
nop
dec
jae
inc
add
lods
in
pop
cmpsl
out
add
add
lgs
pusha
out
out
sub
xor
test
test
shr
add
and
push
jo
xchg
sub
sub
leave
inc
sub
insb
and
dec
lods
xchg
cmp
mov
cwtl
dec
add
add
lods
inc
sub
orl
pop
xorl
dec
out
ret
and
push
xor
pop
daa
sub
sti
mov
lret
mov
dec
mov
jae
add
sbb
xor
aas
aaa
enter
add
inc
or
cmp
and
mov
gs
sub
ret
iret
push
push
scas
mov
push
fadds
cmp
jmp
ss
push
sbb
call
aam
movsb
jnp
xchg
sbb
ds
idivb
push
sub
je
jae
push
dec
pop
dec
xor
push
mov
outsb
cld
add
jl
or
sbb
out
add
inc
inc
jb
hlt
xor
adc
add
insb
or
sbbb
ret
xchg
mov
dec
fldenv
jnp
dec
fs
jbe
call
insb
add
or
sbbb
das
add
sbb
mov
jg
pop
xlat
sub
xlat
jb
or
add
adc
or
jp
mov
ljmp
or
or
test
fisubl
movl
in
mov
inc
pop
outsl
inc
nop
shrb
and
scas
add
add
adc
inc
rol
xor
add
push
add
movsl
inc
nop
add
adc
add
bound
nop
lock
std
sahf
add
lret
xchg
je
push
xchg
pop
push
call
shr
inc
cmp
jne
inc
push
push
adc
lds
sahf
adc
cli
std
pop
jmp
push
cmp
call
pop
and
xor
xchg
jns
ljmp
mov
and
dec
mov
or
or
movsb
xor
mov
adc
orb
inc
pop
push
add
dec
add
push
clc
pop
add
sub
xor
push
or
sub
clc
dec
inc
loop
sbb
push
xchg
adc
jbe,pn
inc
or
or
cmp
ja
pushf
mov
ret
inc
push
push
and
fistl
lea
sbb
je
sbb
mov
mov
cmp
nop
in
add
dec
test
dec
ret
mov
dec
mov
ljmp
jo
sahf
and
or
loope
stos
mov
xchg
jo
jb
movsl
sub
cmpsl
mov
push
adc
fs
or
add
mov
mov
push
mov
push
push
popa
xchg
lret
cmpsb
aad
mov
dec
push
pop
inc
push
jecxz
pop
pushf
jmp
add
je
gs
add
pop
addb
cli
aad
pop
lods
inc
add
test
cmp
adc
movsl
sub
imul
cmp
mov
jne
popf
mov
or
les
pop
fistpl
fldl
fstl
push
pushf
mov
push
je
int3
daa
push
dec
fildl
cs
ror
inc
jo
adc
dec
sarb
fisttpl
mov
cmp
fstpt
jae
add
inc
and
sub
push
add
xchg
mov
lods
and
fcmovnb
xchg
iret
popa
loop
test
enter
xchg
and
push
les
dec
xor
sarb
sub
repnz
sarb
fcoms
bound
testl
je
lea
push
jge
inc
insl
movsb
mov
push
mov
inc
cmovno
pushf
cmpsl
inc
dec
inc
in
adc
aas
outsl
inc
pop
out
mov
ja
imul
shrl
mov
and
sarl
xchg
loope
mov
es
push
in
sub
in
xor
add
add
and
lds
mov
add
aas
test
and
cmp
inc
loopne
mov
and
mov
mov
mov
cmp
inc
or
mov
daa
xchg
lods
aaa
adc
mov
pop
add
and
ss
inc
dec
add
aaa
sti
jne
xor
imul
inc
sbb
and
and
mov
std
pop
xor
ret
aaa
flds
dec
mov
ss
sub
dec
call
mov
and
call
pop
xchg
xchg
lods
repz
and
xchg
cmc
nop
mov
fnsave
aaa
cmp
popa
or
cwtl
cs
ja
dec
aaa
and
outsb
cmpsl
dec
mov
test
sbb
call
xchg
lods
jmp
sbb
add
xchg
mov
cmp
adc
ret
inc
mov
push
add
mov
rcr
ja
add
cmp
pop
and
insb
inc
adc
sub
iret
bound
adc
jo
sbb
adc
imul
xor
cmpl
pop
insb
mov
sub
fistps
adc
add
gs
fucomp
push
fstpt
mov
or
xchg
xchg
sub
sub
stos
ficoml
or
sbb
call
sub
push
fimull
fidivrl
add
call
fimull
pop
pop
add
mov
out
push
sbb
xor
sbbb
out
xor
add
push
fistl
jo
je
insb
subb
ret
out
aaa
sbb
addl
sahf
scas
mov
pusha
cmp
leave
mov
out
adcb
mov
jmp
pushf
adc
mov
insb
pusha
arpl
sub
movl
ja
xor
cmpsl
push
jg
and
cmp
mov
jns
and
es
add
jmp
jo
mov
dec
fisubrs
add
xchg
repz
repz
insb
fs
push
dec
adcb
or
jmp
dec
pop
out
jg
mov
jg
and
jg
xor
mov
nop
inc
push
fs
mov
pop
pop
xchg
adcb
dec
mov
int
sahf
ja
call
push
or
fimuls
loopne
inc
cmp
inc
xchg
mov
repz
push
push
in
out
mov
add
jae
cltd
jle
and
call
or
jo
cltd
push
fs
and
mov
popa
hlt
xor
push
and
sub
shlb
push
call
xor
mov
ret
leave
repz
loope
in
repz
pop
jnp
cmpsl
ret
gs
addl
xor
imul
add
int
and
daa
daa
daa
shlb
daa
daa
cmpsb
test
daa
nop
add
daa
daa
sub
and
sub
sub
and
dec
shrl
sub
cs
and
sub
imul
or
add
xor
sub
sub
cmp
test
aam
or
and
jo
push
jb
cmp
mov
sub
les
mov
pop
jl
mov
out
push
fcoms
sub
add
int
sub
sbb
pop
mov
push
cmc
cmc
push
lock
jp
repnz
insb
mov
ret
clc
fs
dec
sbb
sub
cmpsb
pop
sbb
adc
nop
data16
inc
inc
mov
leave
cwtl
addr16
push
mov
push
inc
cmpsl
or
addr16
call
inc
enter
mov
inc
sub
cwtl
add
adc
pop
test
sbbb
jo
jle
pop
pop
xchg
test
pop
xchg
in
je
or
adc
mov
push
addr16
rolb
and
lods
shll
and
add
outsb
and
and
add
ja
xchg
test
xor
pushw
or
cmp
call
adc
xor
addr16
rcr
test
nop
movsb
cmp
out
add
and
xchg
cltd
sbb
pop
mov
sarb
repnz
mov
mov
adc
in
mov
mov
and
cltd
and
and
sub
sbb
xor
inc
mov
xchg
mov
cltd
cwtl
test
cld
pop
push
call
pop
dec
fmul
xor
rol
inc
out
sbb
mov
popf
and
dec
outsl
dec
sbb
cltd
mov
xor
adc
or
cltd
or
inc
ret
cwtl
pop
flds
sbbb
lret
push
sub
xchg
sbb
bound
pusha
sub
sbb
xchg
inc
cwtl
test
inc
add
mov
or
nop
cltd
adcb
pop
ljmp
mov
data16
sub
push
adc
fdivs
mov
add
sub
ret
jae
inc
jp
lds
jae
test
jl
shll
mov
xchg
jmp
outsb
adc
and
ljmp
mov
mov
out
and
mov
add
in
jbe
mov
jb
mov
stos
or
jae
push
sub
inc
and
mov
pop
stc
rol
enter
pop
jl
cmp
mov
push
scas
and
pop
es
or
insb
jno
stos
fstl
push
jno
subb
inc
jno
rcrb
jo
adc
aam
nop
sub
cmp
mov
jbe
and
fiadds
mov
jno
cmpsb
and
pop
addr16
cmp
lret
add
jo
leave
inc
pop
aaa
stos
fsubs
adc
inc
call
inc
bound
outsb
push
mov
jno
mov
shl
add
cwtl
fs
push
stos
mov
push
or
sub
jne
bound
les
jno
inc
inc
call
inc
insb
push
jno
lds
xor
rcrl
push
xchg
enter
jno
xchg
sub
or
test
popf
adc
or
pop
sub
popf
out
adc
icebp
mov
fst
and
movsb
add
pop
inc
pop
adc
fstpl
mov
or
aas
mov
xor
sub
mov
in
push
cli
xchg
repnz
adc
add
leave
push
push
pop
mov
gs
pop
inc
or
pop
and
je
mov
pop
push
add
mov
sbb
push
nop
fidivs
and
mov
pop
pop
and
xor
add
pop
and
aam
movsb
mov
pop
nop
into
sti
push
loope
sub
not
mov
mov
hlt
inc
xor
movsl
hlt
pop
mov
sub
xor
mov
mov
dec
jmp
pop
cmp
repnz
pop
mov
xor
fstpl
into
outsl
bound
call
rcrb
jo
fnstcw
fdivrs
fdivs
lds
push
test
add
loop
inc
add
test
or
call
es
std
pushf
cmp
test
pushf
and
int3
jo
nop
rorb
movsl
cmpb
jb
inc
cmp
sbb
add
orl
mov
mov
dec
cmc
xchg
mov
cmp
or
addr16
sbb
cmpl
mov
jl
xor
stos
add
pop
xor
pop
call
inc
out
pop
push
inc
mov
xor
sbbl
cld
repnz
xchg
adc
push
and
add
inc
shll
cmpsl
pop
fstpl
push
and
loop
adc
cmpsb
pop
cmp
and
mov
mov
or
push
and
pop
sub
mov
fwait
xor
insb
pop
int3
repnz
push
xor
fdivl
fcompl
push
imull
pop
lods
lret
call
or
mov
add
inc
or
mov
or
jp
mov
cmpsl
sub
push
mov
dec
lock
dec
cltd
mov
pusha
add
inc
mov
adc
fdivrl
sarb
bound
fisubl
push
addb
sbb
arpl
sbb
es
fs
or
clc
pushf
xchg
sub
dec
test
or
shrl
das
nop
loopne
xchg
and
sbb
loopne
andb
and
addr16
in
nop
push
js
fmull
push
inc
mov
daa
add
add
sub
rorl
xchg
dec
adc
daa
jnp
adc
fwait
push
shlb
roll
fldl
arpl
sub
sarl
cltd
sub
bound
push
cltd
inc
xor
addr16
sub
dec
push
jp
inc
mov
fcoml
stos
mov
cltd
aas
mov
rcrl
cmpsl
inc
pop
mov
push
stc
leave
sbb
sbb
pop
push
cld
push
push
shll
sub
cwtl
mov
adc
push
jb
std
popf
fnstsw
enter
push
xchg
mov
mov
adc
cltd
cmpsl
aaa
adc
inc
ljmp
mov
faddl
mov
loopne
or
lahf
xchg
mov
in
mov
xchg
rorb
add
sub
mov
repnz
add
enter
sub
fmull
or
mov
or
cmpsl
rolb
adc
nop
or
sbb
mov
loope
pushf
push
outsl
adc
inc
test
pushf
push
mov
popa
insb
xor
pop
mov
pop
popf
bound
lods
jge
mov
in
cmc
stos
fcomi
jmp
mov
jmp
add
ret
call
fwait
or
ret
xor
je
add
dec
jge
push
or
subl
xchg
js
jl
addb
mov
adc
and
inc
push
mov
inc
push
sub
inc
icebp
inc
scas
sub
mov
loope
in
and
jb
stos
xchg
inc
jl
jl
mov
pushf
or
jb
push
inc
inc
mov
push
jp
pop
pushf
ret
jge
gs
pop
adc
or
sub
out
dec
pop
cmpl
xchg
mov
mov
sbb
popf
jecxz
addr16
movsb
jne
xchg
sbb
or
pusha
or
fbld
out
ljmp
mov
inc
mov
inc
insl
xchg
jecxz
xchg
push
cmpsl
ss
xchg
inc
xchg
push
shrb
sbb
xor
cmp
push
lahf
jae
mov
mov
pop
adc
inc
sub
jae
xchg
fdivl
daa
mov
mov
xchg
mov
out
ficoml
inc
pop
adc
inc
insl
ret
xchg
inc
insl
ret
xchg
jne
aam
sahf
out
aam
push
adc
xchg
lret
enter
fnstcw
dec
sahf
sbb
cmp
inc
leave
test
sub
repnz
rcl
es
sbb
or
cmc
rorb
pop
pop
xchg
add
pusha
sub
pop
adcb
add
pusha
or
pop
pusha
or
repnz
xor
add
lea
pop
enter
seta
push
imul
das
or
adc
push
mov
xchg
inc
and
fcompl
xor
mov
es
xchg
jo
add
imul
ljmp
popa
xor
rclb
movsl
fwait
ret
mov
mov
add
test
jl
or
jmp
call
xchg
mov
xor
data16
and
clc
add
and
stos
orb
xchg
daa
lcall
push
lea
int
add
leave
push
test
or
or
jb
fcoml
pushf
adcb
cmpsl
lret
int
adc
and
adc
push
cmpsb
mov
cmpsl
or
mov
mov
lea
mov
loope
clc
lods
jne
or
bnd
sbb
leave
call
fldcw
int
mov
sbb
pop
decb
lret
das
push
in
mov
out
int3
pop
insb
push
fnstcw
aad
int
out
pushf
imul
inc
ss
sub
cmp
addl
pop
mov
cld
dec
inc
cmp
aas
and
test
adc
sbb
and
inc
dec
sahf
in
pop
pop
xchg
fildl
ret
or
cmp
mov
xchg
mov
push
adc
and
aam
call
inc
pop
aaa
fildl
mov
xbegin
outsb
fnsetpm(287
cmp
test
sub
loop
test
dec
push
fucomi
nop
inc
and
fistl
inc
pop
movsb
xchg
cli
iret
mov
cmp
ret
pop
and
mov
dec
loop
mov
xchg
xchg
fistl
xchg
and
add
pop
fistpl
cmp
ret
mov
fildl
inc
or
imul
mov
mov
mov
jne
lods
sub
add
in
dec
push
sbb
mov
xlat
jno
jns
adc
push
jmp
sbb
push
fildl
fldt
call
mov
mov
or
sub
inc
xor
rorb
mov
pop
jle
and
fimuls
add
shlb
add
orl
mov
imul
aaa
lea
fbld
in
iret
lret
mov
cli
lock
loope
xor
int3
lret
inc
jns
mov
sub
dec
pop
jns
jns
mov
mov
pop
jns
jns
mov
cld
mov
hlt
mov
fdivrl
aam
int3
mov
das
das
pop
jns
mov
cltd
mov
xchg
mov
jns
das
das
das
das
jno
imul
push
mov
cmp
xor
push
jb
orl
pop
cmp
inc
in
mov
sbbl
lret
mov
push
jb
mov
and
mov
nop
sbbl
mov
enter
dec
mov
in
pop
cmp
mov
jb
sbbl
cmp
inc
push
in
mov
sbb
and
mov
nop
andl
pop
cmp
inc
xchg
sbb
and
pop
mov
nop
mov
and
mov
nop
sbbl
mov
enter
jmp
mov
inc
mov
enter
mov
or
xor
jp
add
adc
mov
push
int
dec
sbb
and
xor
pushf
xor
daa
push
sbb
or
jns
mov
cli
mov
dec
and
and
mov
cmp
xor
cmp
inc
inc
and
int
mov
xor
daa
add
dec
dec
push
or
push
arpl
orb
ret
lock
and
rolb
inc
sub
inc
rcll
adc
ret
inc
jo
out
add
pop
inc
inc
inc
push
xor
rolb
sub
inc
sub
jb
push
popl
dec
repnz
aam
push
popa
dec
or
ret
and
adc
mov
hlt
xchg
lods
and
imul
adc
cmpsl
in
mov
icebp
push
add
aam
add
add
push
dec
addr16
mov
add
or
jmp
xor
push
push
and
xchg
mov
mov
mov
xchg
in
mov
inc
pop
jb
mov
mov
add
stos
mov
cmp
dec
outsl
push
lret
arpl
cmp
gs
hlt
add
movsl
sub
shrl
adc
sarb
ror
mov
xchg
hlt
inc
xchg
outsl
sub
mov
je
lret
outsl
mov
jbe
xchg
and
movsb
adc
stos
outsl
mov
pop
sarl
movsl
sbb
outsl
push
sbb
cmp
xchg
out
stos
push
outsl
adc
mov
scas
push
outsl
add
xchg
movsl
jnp
outsl
repz
mov
sbb
hlt
or
add
imul
inc
sub
dec
mov
ss
add
gs
mov
js
add
sub
pop
fs
frstor
cmpsl
sub
add
dec
push
int3
dec
scas
adcb
cmp
ljmp
fdivl
lret
mov
and
sbb
imul
lcall
imul
xchg
imul
xchg
imul
dec
mov
imul
in
mov
gs
imul
mov
push
shrl
int
cmp
cmp
inc
scas
push
loop
dec
pop
imul
in
push
dec
imul
call
je
imul
inc
in
mov
fsubl
sub
sub
lds
and
dec
out
xchg
push
test
shrl
push
out
loope
xchg
push
cmp
out
adc
imul
xchg
imul
imul
notl
fstl
imul
imul
pushf
mov
test
gs
out
push
adc
test
les
cmpsl
sub
pop
sub
orl
lret
cmpsl
imul
imul
mov
sub
sbb
pop
mov
movsl
aad
and
movsl
imul
cwtl
pop
inc
mov
fwait
loopne
movsl
jmp
gs
lds
mov
push
shlb
js
je
gs
imul
sbb
rcrb
fmuls
imul
xchg
xor
sbb
lret
pop
ljmp
mov
lock
repnz
lock
mov
std
push
sbb
inc
test
cmpsl
test
adc
cld
xchg
xor
cmp
sbb
xchg
add
xor
push
xor
or
sbb
loopne
movsl
imul
imul
push
xchg
push
mov
push
or
mov
sub
cmpb
jae
rcrb
dec
pop
xor
inc
imul
pop
xor
imul
xor
sub
gs
push
loop
pushf
leave
or
mov
imul
mov
lock
jmp
imul
sub
ja
or
movsl
xchg
mov
xchg
mov
cmp
imul
sahf
imul
imul
xchg
sub
push
loop
dec
dec
xor
andb
xchg
push
xchg
imul
stos
imul
push
imul
sub
ret
gs
gs
test
ja
cmp
repnz
or
push
jno
adc
xchg
mov
adc
movsl
addl
shl
xchg
imul
imul
ja
push
imul
imul
icebp
in
add
lds
dec
ret
add
and
imul
stc
pop
cmp
xchg
and
in
movsl
addr16
xchg
sbb
and
pop
int
adc
cmp
xchg
xchg
out
rolb
xchg
sbbb
cmpsb
fiaddl
jmp
adc
mov
pushf
sub
nop
mov
inc
das
xchg
rclb
cmpsl
vpshad
jmp
ds
cld
mov
lods
in
xor
xchg
rclb
pop
xor
ja
cmpsl
mov
pop
push
xchg
jo
shlb
push
inc
testl
adc
ror
and
push
ja
inc
xchg
cmpsb
cli
sahf
arpl
movsl
fs
js
mov
cmpsl
cmp
cmpsb
push
test
cmp
push
cmpsl
push
sub
mov
int3
faddl
sbb
sahf
out
sub
inc
push
pop
out
sahf
out
adcb
sahf
enter
or
push
ds
sahf
out
pop
jb
mov
mov
out
push
stos
cmp
repz
and
cmp
cmp
repz
jbe
test
cmp
ds
into
call
sbb
repz
repz
dec
pop
insb
sbb
call
cmpsb
add
cmp
mov
push
adc
and
mov
lods
dec
mov
push
lea
imul
xlat
pop
les
sbb
push
push
mov
out
mov
cmc
fldcw
add
push
clc
mov
shrb
mov
push
pop
xor
sbbb
push
add
mov
sahf
out
push
mov
add
push
lcall
adc
out
pop
testl
sbb
sbb
repz
call
or
mov
ds
repz
dec
repz
cmpb
sbb
jns
iret
jp
cmp
or
leave
or
mov
and
mov
sbb
outsl
pop
adc
push
test
inc
add
jns
out
push
cmp
adc
repz
out
clc
xchg
in
loopne
iret
repz
fcom
int3
enter
iret
repz
mov
cmp
repz
iret
repz
mov
cmp
repz
jo
push
repz
pop
pop
push
push
iret
repz
dec
dec
inc
inc
cmp
cmp
repz
xor
adc
lcall
fmul
out
sahf
out
mov
sub
repz
add
pop
movsb
jl
cmp
repz
dec
inc
xor
jns
out
or
mov
shlb
mov
or
loope
cmp
int3
test
push
xor
cltd
ja
fwait
jg
push
add
lock
mov
push
mov
das
nop
inc
adc
pop
fs
mov
xchg
mov
gs
fstpt
push
aaa
xor
push
push
add
or
popa
and
xor
pushw
mov
es
stc
xchg
pop
shlb
jbe
inc
sub
iret
cmp
jne
jo
mov
pop
das
sbb
daa
xor
notb
xchg
lea
jnp
mov
daa
mov
add
out
xlat
push
mov
inc
adc
add
test
lods
pop
add
mov
outsl
in
jg
pop
cmpb
inc
pop
dec
mov
insb
shll
jbe
mov
dec
xor
mov
push
push
jb
mov
andb
shrl
mov
inc
pop
rorl
fwait
in
xchg
xchg
push
pop
adc
fisttps
sbb
aas
inc
lahf
insb
dec
mov
inc
jg
dec
jle
cmp
dec
xor
xor
aas
sti
push
mov
subb
push
ja
fsubl
mov
addl
sbb
nop
mov
fsubr
movnti
imul
fdivl
inc
or
movsb
aas
pushf
adcb
jl
inc
lea
ret
insb
pop
xor
cmp
mov
stos
outsb
cs
outsb
lahf
cmp
mov
inc
outsl
ds
outsl
gs
adc
cmpsl
add
movsl
pop
mov
or
je
rolb
xchg
fsubl
adc
fisubl
cld
xorb
jecxz
push
scas
inc
dec
and
outsl
jne
jno
out
pop
notb
imul
push
outsl
and
sbb
jb
sbb
sbb
les
add
xchg
adc
xlat
sbb
inc
sub
or
mov
fwait
movb
adcl
sbb
mov
sbb
inc
lcall
dec
add
sub
xor
dec
mov
push
pop
sub
aam
arpl
push
push
xor
add
dec
popf
addl
or
sbb
arpl
daa
rcrb
mov
sbb
xchg
les
push
repz
rolb
les
sbb
daa
sbb
rcrl
rorb
shlb
xor
adc
inc
add
push
lahf
xor
sbb
arpl
lds
inc
arpl
shl
adc
imul
add
pop
pop
mov
rol
sbb
add
pop
adc
fcoms
add
ja
add
push
xor
adc
mov
ficompl
pop
xor
movsb
xchg
jle
iret
repz
pushf
cwtl
xchg
nop
mov
cmp
repz
pop
sahf
out
ficoms
inc
inc
cmp
jns
out
xor
sub
and
jns
out
sbb
adc
mov
hlt
xchg
in
push
in
fcompl
enter
test
pushf
out
pushf
mov
out
mov
push
insb
push
fs
jns
repnz
push
dec
mov
push
and
sahf
out
out
add
in
xchg
push
enter
sahf
out
mov
mov
sahf
out
cmpb
push
cmp
cmp
push
adc
dec
repz
lock
loopne
mov
mov
xchg
insb
pop
pop
adc
pop
add
pop
mov
add
insb
cmp
test
inc
xor
or
neg
mov
push
sbb
add
pop
inc
mov
add
ja
xchg
or
outsl
push
xor
pop
cs
clc
mov
ds
pop
jg
sub
pop
enter
pushf
testb
outsb
stos
lcall
xchg
cs
lods
dec
pop
sbb
xchg
mov
aas
ffreep
ljmp
adc
adc
ret
sbb
xor
mov
push
fnstenv
sti
scas
roll
xor
xor
inc
mov
lret
dec
xor
mov
adc
pop
ss
nop
ss
sub
xor
ss
or
cld
popf
sbb
cmp
cmp
aas
cmp
fstpt
push
cmp
xchg
fwait
es
jmp
xchg
lret
cmp
cmp
cmp
jno
dec
test
inc
jnp
cmpl
cmp
adc
xor
cmp
cmp
scas
test
ds
ds
ds
faddl
ljmp
clc
ds
ds
aas
pop
aas
and
sub
xor
aaa
into
lcall
aas
jbe
jnp
cmpl
movsb
aas
mov
sarl
aaa
cmp
add
sarl
jl
xchg
cmpsb
mov
xor
push
shrl
cmpsb
sub
xor
add
pop
xor
xor
mov
mov
xor
xor
into
das
xor
cmp
sbb
shrl
roll
jecxz
xor
inc
rol
ja
call
xor
xor
mov
mov
pushf
xor
xor
xor
xor
xor
xor
xor
xor
ds
xchg
ss
mov
ss
jecxz
sbb
pushl
sbb
xchg
mov
jl
test
loop
cmp
cmp
add
pop
cmp
ljmp
pusha
or
or
cmp
xor
xor
cmp
cmp
cmp
inc
xor
push
pop
cmp
outsl
cmp
call
xor
inc
iret
or
outsb
cmp
outsb
sbb
idivb
cmp
cmp
sub
add
jg
mov
ja
jle
test
push
mov
iret
cmp
icebp
jg
cmp
inc
ds
ds
ds
js
push
lcall
xor
xor
xor
xor
xor
xor
jg
mov
xor
xor
xor
xor
ljmp
icebp
xor
xor
inc
lds
xor
xor
outsb
xor
mov
repnz
dec
ss
bound
xorl
ss
faddl
jecxz
ss
or
ss
clc
clc
sub
clc
ss
ss
aaa
or
push
scas
xor
push
xor
aaa
stos
mov
adc
pop
add
xchg
cmp
push
sbb
mov
cmpsb
test
mov
fsubl
sarl
fcoms
cmp
pop
inc
std
jmp
repz
cmp
cmp
cmp
inc
ret
outsl
add
cmp
pop
push
sar
adc
jno
jns
jle
xchg
mov
xchg
mov
lahf
cmp
cmp
aas
push
rcll
cmpb
xchg
cmp
cmp
cmp
mov
cmp
cmp
push
push
fs
pop
or
push
cltd
xor
insl
sbb
pop
shrl
stos
pop
and
dec
aas
outsb
inc
cmpl
aas
ret
aas
iret
icebp
fcomps
xor
sbb
fmulp
xor
jmp
jp
xor
xor
xor
xor
xor
xor
jo
mov
aas
mov
xor
xor
push
mov
xor
dec
xor
leave
pop
ret
clc
mov
pop
ss
adc
push
ss
ss
or
jg
arpl
stos
add
ss
ss
xor
sar
outsb
adc
jne
jle
or
sbb
sub
cmp
sbb
cmp
cmp
cmp
or
pushl
or
cmp
cmp
cmp
and
arpl
outsb
ret
fnstsw
filds
in
inc
out
out
xor
ds
or
cmp
aas
fisttpl
push
insl
adc
dec
pop
xor
fbstp
divb
data16
mov
pushl
fbstp
jmp
xor
movsb
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
icebp
pushl
imul
mov
pushf
ss
mov
pop
push
shrl
adc
and
stos
pusha
pop
xor
cld
decl
loop
cmp
pop
cmp
lcall
push
pop
cmp
cmp
and
ds
ds
jnp
out
ds
aas
lods
jg
int3
and
cmp
xor
dec
add
cld
xor
gs
sbb
sub
mov
pop
jo
cmp
dec
cmp
pop
cmp
call
daa
outsl
cmp
xor
xor
xor
xor
pminub
xchg
imulb
or
sbb
roll
add
or
aaa
arpl
mov
pop
mov
xor
xor
adc
push
je
js
sbbb
inc
sbb
ret
dec
sbb
ret
xor
inc
daa
mov
test
or
popa
je
call
sbb
inc
fdivrl
mov
in
xor
cmp
arpl
pop
enter
xchg
andb
xor
xor
jb
out
lds
xchg
mov
bound
stos
mov
clc
cmp
jo
xor
jmp
xor
mov
or
adc
adc
sbb
sbb
jno
mov
mov
scas
xchg
inc
xor
push
xchg
dec
sbb
pop
xor
xor
xor
test
xorl
xor
nop
xor
ss
xor
xor
ret
push
lahf
arpl
fadds
lock
js
nop
xlat
sbb
pop
lret
xor
jp
sarl
xor
xor
outsb
jo
sub
ret
bound
sarb
cmp
push
push
push
add
mov
push
cmp
jb
pop
daa
cwtl
out
shl
add
call
ljmp
sub
push
shll
jecxz
insb
xor
xor
xor
xor
xor
ss
dec
fists
shlb
push
xor
adc
sbb
out
xor
mov
sbb
mov
sbb
pop
decl
aas
mov
call
xor
xor
inc
add
add
adc
add
lahf
sbb
xor
aam
xor
xor
xor
xor
loopne
inc
push
push
xor
pop
xor
mov
lock
js
jl
andb
lock
scas
pushf
xor
xor
xor
xor
xor
xor
xor
into
shlb
add
fimull
movb
xor
mov
lods
sub
jecxz
call
xchg
sbb
sbbb
dec
add
les
mov
fdivr
loopne
lcall
and
pusha
cwtl
fstpt
or
add
add
mov
add
pop
push
or
or
or
or
or
adc
xor
adc
les
imul
sbb
push
adc
add
data16
loope
pop
mov
adc
inc
add
pop
inc
xor
add
dec
imul
add
outsl
dec
push
push
mov
and
adc
mov
jnp
imul
ds
out
inc
add
push
adc
pop
and
xor
inc
mov
adc
xor
leave
nop
in
bound
js
leave
nop
sahf
or
mov
mov
cmpsl
dec
or
fisubl
mov
xchg
or
add
popa
adc
and
pop
adc
mov
scas
pushf
jae
adc
into
add
subb
ja
adc
pop
pusha
inc
lods
push
adc
pop
popa
jno
and
adc
pop
xor
inc
mov
or
xor
adc
loope
roll
mov
sbb
xorb
scas
fiaddl
or
js
pop
dec
dec
dec
jo
or
jg
incl
cld
cli
and
mov
inc
jnp
test
jge
icebp
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
mov
out
out
stc
or
xchg
jg
or
insb
ljmp
or
push
push
xchg
add
repnz
inc
lock
scas
icebp
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
fistps
mov
push
pop
mov
pop
pop
mov
popl
movb
xchg
sbb
decl
scas
adc
mov
xor
lods
scas
xchg
test
aam
and
sbb
call
mov
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
ss
push
in
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
pushl
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
lahf
push
cmp
push
ljmp
jg
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
pop
in
clc
xchg
jmp
sbb
add
dec
out
pop
jb
mov
or
push
mov
sub
loope
fwait
sbbb
mov
dec
jp
push
gs
in
outsl
jmp
add
stc
loope
mov
sar
andl
aas
icebp
testb
mov
ljmp
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
sbb
mov
dec
adc
push
lock
lods
jp
testb
inc
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
mov
ljmp
adc
aaa
xchg
in
add
inc
adc
loope
aaa
dec
outsl
mov
or
icebp
aas
std
cli
push
push
push
idivl
pushl
sub
inc
scas
inc
mov
jg
je,pn
sub
mov
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
add
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
pop
xor
jmp
in
stos
imul
hlt
lret
movsb
add
lahf
scas
decl
gs
std
xorb
jg
aad
adc
add
pushl
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
call
jno
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
ljmp
pop
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
ljmp
or
adc
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
ljmp
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
jle
call
xchg
or
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
pushl
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
clc
jg
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
outsl
incl
mov
mov
cmp
xchg
mov
cwtl
pop
xchg
ftst
pushl
xchg
and
add
jae
shrb
shlb
out
aas
stc
add
notb
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
mov
mov
cmp
fmull
enter
aas
lahf
cs
in
pop
mov
sub
mov
cld
aas
mov
dec
incb
fisubrl
aas
mov
or
cld
inc
das
testb
or
pop
jg
add
mov
std
fistpll
mov
aad
test
mov
mov
std
mov
mov
push
push
sbb
stos
icebp
pop
incb
nop
dec
jno
adc
push
inc
jecxz
sbb
sarl
pop
fdivr
jnp
inc
clc
xorl
mov
imul
dec
jae
imull
mov
aas
mov
fsubrl
mov
push
and
punpckhwd
push
clc
xchg
pushf
mov
repnz
add
push
and
mov
adc
inc
aas
push
shll
cld
decl
inc
jb
fistpl
adc
call
jno
lcall
pop
pop
nop
mov
inc
sti
arpl
daa
std
or
sbb
ljmp
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
push
fsubr
fistps
lds
fidivrl
jg
stos
inc
pop
add
dec
mov
sub
jge
xor
lahf
les
sbb
shrb
xor
inc
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
pop
sar
jmp
arpl
out
out
outsl
xchg
ljmp
sar
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
add
incl
xchg
aad
loop
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
adc
stos
pop
jg
das
in
loopne
shrb
rcl
jg
adc
xor
pop
rcr
dec
mov
push
pushf
lea
jp
jnp
jecxz
adc
inc
ds
pop
adc
imul
or
inc
pop
xor
rorb
and
mov
lods
test
xchg
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
or
mov
movsb
insb
or
and
xchg
sub
insb
test
aas
repz
sbb
clc
lods
add
lock
in
jmp
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
loopne
iret
or
cmc
mov
push
mov
fsubrp
dec
sahf
enter
incl
pop
fcmovb
inc
adc
inc
loopne
test
out
rolb
pop
inc
in
cmpsb
mov
pop
cld
or
dec
ss
pop
in
in
inc
lods
movsb
or
repnz
mov
pop
add
cmp
imul
mov
or
pop
in
cmp
jmp
mov
lcall
popf
jmp
hlt
dec
mov
incl
sti
sbb
xlat
inc
aas
mov
jg
mov
sub
das
sar
mov
sbb
cld
daa
jp
std
adc
cltd
push
mov
mov
ret
nop
cmp
das
incb
lock
and
pop
pop
div
cld
idivl
shlb
inc
and
loope
jae
jmp
shrl
je
jge
jg
ljmp
jg
stc
add
out
icebp
mov
loope
inc
mov
fisttps
sti
mov
fistps
es
or
das
jge
lock
out
cmp
call
xor
sbbb
decb
adc
mov
and
xor
adc
call
popf
inc
xchg
dec
or
cs
pop
nop
mov
inc
add
push
pop
aaa
inc
es
fisttps
mov
mov
cld
jg
xchg
fimull
jp
aas
icebp
ret
ror
sbb
aaa
loop
out
sbb
adc
mov
mov
inc
mov
pop
clc
loope
loope
mov
lahf
add
jo
add
xlat
rcrl
je
xchg
fldenv
iret
fdivrl
xchg
push
rolb
lcall
xor
decb
add
pop
gs
push
icebp
fbld
out
jg
jno
ret
pusha
mov
inc
arpl
pop
sbb
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
call
mov
ds
inc
mov
in
sbb
xchg
imul
call
fimull
sbb
mov
daa
jmp
add
sbb
mov
lods
fadds
mov
div
pop
stc
push
dec
out
fstpt
mov
enter
xchg
popf
pop
add
fsts
dec
or
add
sti
pop
inc
push
cltd
mov
or
nop
jg
or
mov
test
and
add
jl
call
inc
jecxz
notb
add
into
push
loop
popf
xchg
push
clc
and
push
imul
push
mov
call
call
dec
pop
dec
jnp
xchg
fwait
daa
pinsrw
test
data16
add
jmp
push
je
xor
dec
dec
cmp
lret
lods
xchg
rcrb
adc
incl
jnp
stos
sbb
and
pop
and
sbb
pop
subb
mov
pop
cmpsl
sbb
sub
lock
or
jmp
pop
aad
popf
fsubs
loopne
pop
out
test
cmp
ss
cmp
jmp
outsb
inc
hlt
inc
mov
lea
mov
inc
shl
fisttpll
pop
addl
mov
mov
cmp
cwtl
outsl
xchg
cmp
mov
jg
movsl
incl
cmp
push
or
fnsave
cmp
mov
xor
pop
ret
iret
mov
aas
and
mov
inc
es
insl
jae
adc
out
push
push
fs
add
xor
movsl
mov
xchg
jne
mov
inc
cmpb
or
incl
mov
mov
aaa
je
and
in
adcb
and
das
cmpl
test
or
sub
imul
in
lds
pop
or
pop
mov
mov
pop
push
mov
fildll
or
xor
jg
fprem1
xor
sti
add
add
cmp
cmp
rcrb
cmp
push
jb
mov
xchg
cmp
push
or
loope
cli
mov
stos
das
inc
test
pop
push
push
adc
ja
pop
scas
sub
lds
in
mov
shrb
jns
lret
fsubrs
dec
movsb
and
lcall
mov
jmp
xchg
mov
enter
xor
xchg
das
aaa
lcall
mov
cmp
mov
ljmp
xchg
cld
cltd
inc
sub
mov
bound
push
xchg
mov
into
mov
lds
pop
ljmp
sbb
push
adc
push
out
fs
ljmp
jge
adc
inc
adc
xor
ljmp
lahf
aaa
fldl
cmp
add
adc
shlb
push
xor
outsl
sub
jg
xchg
jmp
sbb
test
gs
sbb
ss
clc
adc
xchg
cmp
ljmp
sbb
fisubl
cwtl
mov
inc
popa
jo
push
leave
pushl
cmovge
inc
pop
rcr
xchg
inc
aaa
sub
jg
mov
inc
dec
idivb
jmp
xor
mov
xchg
shll
dec
insl
sub
mov
or
add
mov
loope
inc
pop
in
mov
xor
inc
sbb
ljmp
pop
outsl
dec
xor
adc
xchg
fadd
lods
into
cmp
in
mov
jge
lock
inc
cmp
jo
cmp
aas
add
or
and
jno
pushl
lret
pop
add
xor
insl
js
daa
lock
dec
enter
call
jmp
push
jb
sbb
dec
popa
pusha
mov
xchg
mov
fisubrs
fistpl
push
test
ss
iret
cmpsb
sbb
mov
jae
lret
gs
cltd
stos
pushl
jg
push
dec
out
cmp
fstps
ret
add
fildl
in
jnp
xorb
sbb
jmp
pop
imul
outsl
xchg
rcl
inc
mov
hlt
ljmp
rorb
call
mov
dec
pushf
mov
sbb
je
adc
ret
fiadds
mov
test
movsl
xor
int
jae
popa
mov
ljmp
incb
pop
inc
addb
ja
or
xchg
sub
std
mov
stc
push
fisubs
stos
xchg
loopne
fwait
test
call
cmpsb
pop
or
mov
rolb
test
mov
inc
pusha
pop
test
cmp
push
imul
inc
lods
or
call
nop
xor
adc
popa
in
ds
pusha
and
incl
loopne
sub
sub
pop
movsl
push
mov
cmp
sbb
popa
lock
decl
adc
jle
call
arpl
sub
mov
push
jo
mov
loope
fidivrl
or
pushl
mov
movlps
pop
mov
and
ja
pop
nop
jae
lahf
mov
nop
mov
sar
decl
cmpsl
adc
cmp
imul
mov
bound
mov
xchg
and
enter
jmp
fsub
pop
add
mov
es
pmullw
cmc
lea
cld
in
xchg
inc
fildll
fcomip
int
scas
sub
mov
outsl
cmp
mov
sub
dec
inc
and
adc
cmp
dec
in
xchg
and
jo
dec
sub
mov
mov
call
decl
fidivl
sbb
pop
mov
imulb
data16
leave
xchg
in
cld
dec
dec
mov
inc
cmp
lret
or
mov
pop
jmp
mov
lock
decl
cmp
mov
dec
bnd
clc
jp
es
decl
sbb
icebp
int
xchg
mov
roll
movsb
xchg
iret
nop
or
sbb
pushl
lret
lods
cmp
jb
jno
out
inc
xor
pop
shl
adc
andl
fstps
xchg
add
jmp
insb
push
or
xchg
pop
stos
rorl
aam
xor
or
pop
pop
and
and
arpl
mov
lcall
mov
sub
mov
jmp
mov
push
and
mov
clc
fcomip
fildll
clc
pop
dec
mov
lock
jmp
dec
and
lret
rcrl
add
pushl
out
ja
jecxz
sbb
and
sahf
and
jae
das
ds
stos
and
xchg
call
ss
jno
xchg
sbbb
ret
fcmovnbe
into
jnp
lret
sub
sarl
mov
mov
xor
jmp
lret
sbb
rolb
jle
incl
cmc
cmp
pop
sub
pop
arpl
sbb
jnp
sub
cmp
test
jmp
and
fildll
sbb
jo
sbb
mov
repnz
add
call
insb
or
adc
cmpsl
pop
mov
loop
scas
test
sub
jmp
stc
dec
ss
cli
sbb
in
sub
jmp
js
or
sahf
inc
cmp
loope
int3
fldl
jae
call
fistpl
xor
sti
mov
xchg
sbb
dec
inc
out
jno
cld
mov
cli
lret
pop
mov
fcomip
jmp
out
mov
add
mov
inc
sub
cmp
fwait
jmp
cli
xchg
sbb
add
outsb
popf
movsb
lds
mov
push
dec
mov
shlb
test
or
and
pop
loop
cmp
jle
add
pushl
sbb
sub
nop
mov
vunpcklps
cltd
cmc
call
dec
out
sahf
nop
sub
sub
sbb
push
into
xchg
mov
decl
lret
lock
xor
adc
inc
test
inc
insb
mov
push
push
pushl
loope
imul
jl
cmp
incl
pop
cld
pusha
pop
shlb
pop
adc
ljmp
subb
xor
fnstcw
add
cmpsl
iret
int
push
xlat
dec
notb
adc
loop
pop
in
xor
jo
hlt
scas
mov
adc
nop
popa
xor
out
push
add
inc
outsb
in
ret
testb
test
repz
or
shll
jg
das
sbb
pusha
add
pushl
jmp
imul
fstps
xor
dec
in
jns
push
mov
daa
add
mov
ljmp
add
test
inc
rcrb
pop
pop
std
addr16
adc
fildl
lcall
sahf
ds
push
in
nop
inc
leave
push
lahf
loopne
das
push
lahf
mov
sub
mov
jmp
filds
and
or
stos
iret
insl
test
mov
hlt
jnp
popa
stc
and
mov
js
andb
loope
out
inc
test
dec
insb
or
cli
pop
xor
stos
arpl
decl
leave
pushf
push
pop
popf
lods
jns
aaa
push
fsubrp
scas
xchg
outsl
push
jmp
inc
stos
ss
xchg
psadbw
dec
iret
mov
or
icebp
push
pop
jmp
nop
insb
add
cld
jbe
pop
pop
mov
mov
pusha
hlt
xchg
sbb
popf
mov
cli
lret
stos
xchg
adc
sub
lock
das
sbb
shrl
repz
popa
pushl
dec
jae
lahf
push
xor
rcrb
xor
inc
mov
sti
inc
sbb
xchg
ja
incl
or
sub
and
int
pusha
or
sbb
and
ljmp
lcall
add
ljmp
lcall
enter
stc
ljmp
mov
mov
add
call
xor
in
out
dec
or
call
gs
xchg
aam
cmp
and
mov
es
jg
and
lret
mov
stos
mov
aas
jle
sbb
sub
repnz
inc
pusha
dec
fcomi
das
cli
in
jno
inc
pushf
sbb
cs
jae
out
notb
in
jp
sti
dec
ret
xlat
fisubrl
ss
into
jb
sbb
push
mov
idivl
fsubs
jno
cmc
mov
in
orb
test
xlat
mov
lcall
nop
inc
loopne
je
mov
and
pop
scas
insb
in
insl
add
clc
dec
jl
icebp
cmp
mov
addps
and
mov
mov
cmp
cld
call
push
test
xor
mov
or
cld
jb
jle
push
call
or
xchg
rclb
scas
ret
sbb
lret
pop
icebp
fnstsw
pushl
aaa
push
sarl
pop
sub
xchg
loop
mov
jnp
cmpsl
sti
push
jns
xchg
daa
mov
std
scas
mov
std
pusha
loopne
pop
sub
or
fisubs
pop
inc
insb
test
rcll
inc
fld
fidivrs
push
addr16
cltd
cmp
dec
fstpt
decl
btc
jbe
idivl
decl
fidivl
jg
pushl
cmp
pop
jns
insb
xor
jns,pn
arpl
and
fistpl
jne
mov
ss
sub
rorb
sbb
addr16
pushl
mov
inc
or
push
cs
jno
inc
clc
decl
mov
sub
mov
push
ret
sub
xor
sti
idivl
loop
lds
mov
pop
pop
sarb
jl
cld
mov
shl
scas
jo
and
stos
out
xchg
mov
jno
sbb
aas
pop
loopne
jo
mov
cli
incl
jl
mov
add
cltd
stos
ret
insb
push
xor
cmp
sub
mov
mov
in
jecxz
enter
test
xchg
push
nop
lods
jae
outsb
cmp
aam
fstl
andb
dec
mov
and
div
out
inc
jge
cmpsb
test
in
push
ljmp
ljmp
sub
push
hlt
jp,pn
cmpsb
adc
sbb
pop
push
dec
enter
loop
jae
push
std
sbb
movb
arpl
mov
sahf
dec
inc
nop
jg
call
mov
fcoml
cli
insl
push
xor
fcomps
jle
sbb
add
xchg
or
cmpsb
enter
jnp
adc
pop
push
pop
lock
mov
pushl
ffreep
adc
stc
test
pop
jbe
cmp
fwait
dec
fsubs
xlat
bound
xor
push
jnp
cwtl
push
mov
adc
leave
pop
enter
sub
cmovns
jg
xchg
add
jno
or
adc
incl
arpl
nop
test
cmp
mov
add
adc
lcall
sub
sbb
cli
daa
jns
xchg
nop
mov
push
pop
out
mov
loopne
push
incl
cmp
xchg
lock
dec
daa
mov
sub
xchg
xchg
add
mov
mov
inc
jge
out
mov
fdivs
jb
push
out
xor
imul
pushl
out
std
xchg
cmp
lds
loopne
jg
xor
in
xchg
movsl
mov
pushl
jbe
sub
int
or
mov
push
test
sahf
mov
or
mov
les
pop
jo
jmp
cmp
push
cmp
cwtl
jne
inc
stos
pop
test
and
dec
inc
pop
mov
pop
sub
in
lea
dec
jns
jb
aad
inc
lret
shlb
int3
jbe
imull
jmp
or
pushl
xlat
pop
lret
stc
lret
sub
je
jne
int3
outsl
mov
rclb
inc
mov
stc
fldt
imul
imul
fisubrs
or
lcall
push
and
mov
andb
ljmp
cwtl
pop
loope
call
pop
jae
out
or
push
jnp
cmpsb
lcall
xlat
xor
push
sti
inc
and
cmp
xchg
mov
cmp
or
or
aas
cmp
mov
and
fucomp
test
mov
testb
sbb
je
dec
sub
mov
add
jmp
cs
push
repz
lret
push
fcomp
mov
loope
push
decl
lock
movsb
mov
pop
xchg
jb
sbb
pushl
scas
jge
shl
dec
je
outsl
and
sti
aas
jns
fsub
dec
add
adc
cld
dec
pushf
pop
mov
stos
andb
scas
and
xor
or
sub
sti
repz
decl
xchg
push
add
push
push
push
test
imul
call
cs
pop
sbb
sti
push
sbb
adc
enter
mov
sbb
pop
lahf
sahf
decl
mov
mov
xchg
lock
arpl
movsl
jb
nop
ds
xchg
jle
mov
sbbb
mov
inc
sub
jmp
outsl
jns
cmp
sbb
sub
hlt
jp
jle
sarb
push
jge
adc
dec
jge
outsb
dec
xchg
cwtl
mov
add
mov
inc
jae
loop
cwtl
dec
data16
inc
into
sub
cmc
divb
sbb
pminsw
jnp
mov
aaa
mov
mov
jns
clc
jnp
repz
insb
lock
ljmp
jl
push
mov
es
into
aaa
and
out
pop
mov
ljmp
dec
xchg
icebp
pushl
pop
mov
pop
dec
mov
jg
call
push
xchg
rcrl
adc
jmp
add
push
pushf
dec
mov
stos
xchg
xchg
jle
sub
add
dec
dec
sbb
dec
nop
fimull
adc
imull
aam
mov
jmp
call
dec
push
cmp
add
mov
fstpt
in
rclb
xor
ja
ficompl
gs
lcall
or
cmp
incl
jnp
fimuls
les
push
into
stos
in
xorb
lcall
jecxz
cmpb
lahf
ret
pop
dec
dec
sub
data16
scas
lcall
inc
inc
lds
inc
and
jge
dec
fldl
incl
mov
add
adc
in
sbb
or
or
jmp
scas
outsl
jae
repnz
cmp
aad
xor
imul
inc
aas
mov
xchg
jmp
pop
jb
sarb
lods
ds
mov
loop
sarl
int3
or
xor
sbb
or
mov
call
or
xchg
or
fcoms
and
adc
lcall
flds
sbb
into
cs
sub
or
add
imul
aaa
cld
call
loope
sub
out
mov
loop
cmc
fnstenv
les
fsub
icebp
mov
out
clc
dec
push
mov
xchg
mov
mov
xchg
adc
lods
cmpsl
aaa
nop
xlat
ja
das
rcl
xchg
aad
inc
push
repnz
fst
mov
jp
shll
cmpsl
sahf
mov
movsl
inc
ja
lea
sarl
add
jmp
imul
addr16
xchg
test
add
dec
mov
test
dec
lods
call
jmp
and
and
lret
inc
and
ret
aaa
icebp
xchg
loopne
push
sub
ss
and
or
lea
sub
es
loopne
inc
mov
sbb
push
pusha
push
mov
repnz
jo
insb
decl
lods
xchg
jo
iret
xlat
pop
sbb
cmp
adc
jmp
jg
or
inc
push
cmpsb
add
lcall
push
cmp
mov
fbld
mov
std
mov
xchg
rclb
sbb
pop
decl
stos
push
push
jns
clc
std
adc
and
addl
test
sub
mov
sbb
sbb
mov
mov
mov
inc
dec
lods
pusha
dec
aaa
lret
cmp
adc
jns
sub
jmp
dec
arpl
scas
adc
jae
bound
ret
andl
pop
popf
orb
and
decl
cmp
inc
xchg
pop
jbe
out
pop
cmc
adc
pushf
subl
jecxz
repz
sbb
std
in
in
iret
cli
push
push
sub
mov
xor
jb
movsb
dec
push
or
xchg
jl
arpl
or
call
in
icebp
sub
cli
or
or
mov
inc
outsb
js
inc
es
inc
xchg
cltd
fs
pushl
fstp
stos
xchg
cmpsb
repnz
xor
bound
sub
orb
idiv
pop
rol
mov
cltd
dec
popa
sub
cwtl
dec
dec
sub
mov
cld
movsl
lahf
fldcw
inc
pop
dec
gs
adc
js
lret
scas
repz
ljmp
fdiv
fcomp
jmp
xor
cmp
shll
and
inc
or
push
rcrb
cmp
hlt
xchg
inc
mov
cmp
insb
or
fwait
and
icebp
xorb
popa
lahf
or
incl
cmp
xchg
add
outsl
cmp
popa
sahf
pop
jmp
xchg
inc
xorl
hlt
ljmp
stos
arpl
stos
lret
jno
je
insl
lock
out
push
stc
or
shll
lret
fsubrp
out
sub
addr16
xor
lock
push
mov
call
adc
cmp
loope
lcall
insl
push
pop
pop
loope
dec
cmp
je
and
dec
xor
cltd
mov
aaa
stos
sub
mov
push
jns
pop
aam
clc
mov
call
or
xchg
sub
loop
pop
ja
jb
add
adc
xchg
mov
idiv
aas
add
decl
call
adc
fisubrs
jo
xlat
call
pop
add
add
and
sub
push
jl
aas
inc
jecxz
sub
fistpll
daa
jne
adc
sbb
inc
and
inc
aam
push
jge
out
dec
jbe
or
ljmp
mov
xor
or
bound
bound
fiaddl
in
incl
call
in
adc
les
adc
adc
enter
xor
movsl
pop
mov
loope
jmp
pop
push
jbe
mov
jge
hlt
scas
pop
sbb
test
ljmp
repz
sub
jb
insb
inc
sbb
jp
mov
adcl
out
clc
mov
pop
push
cmpb
pushf
lret
add
sub
fstl
jg
pop
into
mov
xor
popf
or
xchg
mov
pop
push
sbb
mov
jg
xor
jns
bnd
mov
pushf
push
cmp
push
or
test
lcall
daa
movsl
add
je
dec
fdivs
movsl
and
mov
jo
xlat
jb
xor
jg
lret
mov
cmpsl
mov
xchg
dec
pop
cwtl
push
jle
iret
adc
call
test
jne
push
rcll
das
testl
incl
pop
les
gs
push
test
dec
xchg
incl
and
addr16
ret
mov
dec
jge
je
xorl
push
testb
popl
sub
and
xor
cmp
cs
test
push
xchg
test
ja
or
sbb
inc
xor
decl
push
in
dec
sub
pop
div
addr16
ret
mov
pushl
inc
inc
sbb
xor
mov
cmpb
cmp
adc
inc
dec
clc
push
xor
lcall
mov
aad
arpl
pop
xor
and
xchg
lea
sub
dec
xor
jmp
shll
jge
or
lret
mov
ljmp
mov
incl
jg
test
outsl
popa
ja
jmp
enter
aaa
je
sti
call
fcoml
dec
xlat
fld
add
fwait
cmpsb
jge
nop
or
idivl
insb
loopne
cmpsl
sar
ljmp
loopne
hlt
mov
data16
popf
jae
push
stc
xor
mov
jmp
mov
pop
add
pop
inc
push
clc
or
arpl
fcomps
mov
xchg
mov
rcl
fcomip
or
jns
repnz
sub
and
repz
mov
leave
lods
testb
filds
cmpsb
fildl
daa
addr16
mov
push
sub
xchg
cwtl
stos
mov
pop
outsl
ret
sub
push
or
cmp
jl
int3
push
lock
cmp
jno
add
pop
aam
insl
mov
and
stos
pushf
dec
xor
orl
test
in
jg
jle
adc
out
scas
test
shrl
pop
pushl
mov
cld
movsl
fildll
mov
sbb
pop
insl
push
adc
and
cmp
push
push
xchg
lahf
pop
push
out
inc
mov
push
popa
pop
movsl
cli
scas
scas
xchg
jl
in
jo
mov
scas
bswap
jb
adc
ljmp
jne
jecxz
scas
push
mov
scas
lea
lock
inc
mov
clc
leave
popf
cmp
mov
pushl
xchg
xchg
or
ljmp
pop
add
fiaddl
jmp
mov
aam
adc
fisttpll
in
mov
mov
mov
andps
push
inc
or
out
pop
sub
out
aad
jmp
push
int
add
adc
pop
inc
fs
pushl
mov
and
mov
stos
mov
jg
and
or
jecxz
rclb
incl
sbb
into
sub
leave
loopne
lds
jl
xchg
scas
cld
xor
add
cmp
cmp
sub
and
mov
pop
push
shrl
pop
pop
rcll
aam
push
ljmp
mov
shl
mov
loope
aas
fsts
or
call
std
ror
andb
inc
dec
inc
lret
push
mov
cmp
pop
je
int3
mov
pop
icebp
jmp
test
lea
insb
cmpsl
pop
ret
ljmp
pusha
mov
decl
xchg
push
xchg
jp
in
lcall
jbe
test
fidivrl
xor
jg
push
in
mov
sbbl
xchg
stc
das
jl
addr16
insl
fistpll
xchg
push
incl
push
gs
sbb
jb
int3
mov
sbb
inc
jmp
fistpll
adc
mov
aas
out
rcr
decb
addb
cmp
sarl
inc
into
mov
cmp
or
imul
cmp
xor
pop
lock
stos
pop
push
dec
jg
adc
hlt
decl
addr16
les
aaa
in
mov
push
ljmp
cmp
or
shrb
add
inc
pop
mov
fs
leave
mov
loop
ljmp
rolb
loope
decl
adc
sarb
pop
xlat
sub
mov
lret
inc
test
pop
mov
pop
pop
int
cmp
ljmp
xchg
or
push
mov
stc
inc
nop
xor
loop
xchg
and
mov
pop
push
mov
inc
cmp
imul
stos
mov
sbbb
clc
jae
adc
mov
pop
push
xchg
dec
movsb
fwait
adc
pop
sbb
push
pop
mov
xchg
mov
call
mov
mov
adc
int
push
sti
push
xor
negl
adc
fstps
add
mov
pop
or
icebp
sub
sub
es
lret
push
ja
ljmp
xchg
movsb
in
inc
xchg
pusha
lods
incl
repz
cltd
adcb
add
dec
mov
inc
sub
cltd
loopne
in
cld
pop
adcl
xchg
filds
stc
jmp
lods
fisubs
ret
addl
cmpl
aas
pop
pop
addl
mov
xor
pop
popf
mov
es
cmp
loop
sti
sub
mov
addb
push
mov
ljmp
pop
sub
pusha
adc
nop
in
jb
sti
push
aaa
dec
jbe
jne
fcomip
or
ljmp
push
cmpsl
inc
int3
push
int
push
stos
cld
cmp
push
jmp
jle
sbb
into
inc
cmc
add
push
push
sbb
mov
shrl
add
aas
push
or
cli
decl
jmp
js
fisttpll
ljmp
lods
jns
fsts
jp
xchg
push
faddp
mov
or
leave
fists
jg
ljmp
loop
hlt
lahf
movsl
testl
sub
sbb
clc
jp
repz
cmc
xlat
fwait
outsl
or
ja
or
aad
outsl
adc
insb
in
call
add
cmp
inc
add
pop
sub
sahf
mov
mov
jnp
jb
jecxz
jno
sbb
or
jno
js
add
test
lods
je
dec
and
shll
out
xor
call
inc
jae
sbb
gs
jns
jns
imul
jae
add
xor
jg
sbb
test
jns
sahf
sbb
fimuls
pushl
xchg
sarb
xor
notb
out
dec
or
push
xchg
popa
lcall
inc
movsb
xlat
and
dec
fs
dec
add
xor
and
adc
stos
cmc
fiaddl
mov
xchg
mov
push
iret
loop
jmp
and
stos
inc
pop
and
jb
jmp
int
ret
or
add
leave
shll
jmp
jmp
push
push
pop
daa
fldl
popf
sub
cmp
hlt
cld
stos
mov
fstpt
loop
lcall
jge
mov
xor
leave
or
in
test
sub
cmp
data16
lcall
lret
fdiv
mov
jo,pt
pop
mov
scas
jno
jp
int
aam
jp
test
jg
add
inc
mov
adc
mov
or
clc
cmp
ljmp
rcr
outsb
mov
mov
push
push
fsubs
ljmp
sbb
test
addr16
jns
cmpb
mov
or
sbb
pushl
add
es
rcrl
mov
sub
mov
sub
sbb
inc
sub
xchg
ss
cmp
addb
xor
add
fidivrs
jmp
inc
mull
mov
in
outsl
jecxz
add
lahf
shrl
push
adc
mov
pcmpgtb
into
pop
jle
fcom
sub
lock
mov
pop
mov
mov
cmp
test
xchg
push
lds
aaa
dec
xor
jb
rolb
fidivs
incl
push
shlb
daa
outsb
xor
cmp
xchg
push
loopne
lahf
xchg
je
test
sub
add
fisubs
xchg
ljmp
mov
jg
pop
push
inc
jmp
movsl
sbb
cmpsl
xor
in
add
lods
out
mulb
xor
xchg
fsubp
lock
and
call
cld
incl
push
sbb
xchg
daa
jl
pop
insl
or
pop
xchg
pusha
xchg
xchg
decl
movsb
ss
je
movsb
out
repz
pop
jmp
iret
andl
xchg
lods
fdivl
cmpsb
std
stos
or
xchg
xchg
les
add
sahf
inc
cmp
ficompl
jbe
scas
decl
add
stos
stos
push
mov
inc
imul
mov
push
std
out
fists
pushl
aam
lods
adcb
dec
push
mov
dec
adc
xor
jl
ror
stc
cwtl
xor
lcall
jnp
push
push
andb
js
push
loop
sbb
jmp
xor
jg
add
loopne
or
int
jg
dec
adc
shlb
jmp
clc
out
mov
scas
pop
sub
outsl
pop
js
pop
and
incl
sub
outsb
mov
push
and
push
xor
movsl
or
jg
xchg
test
cmp
pop
jb
sti
mov
movsb
ds
push
jns
fistl
jno
fistl
jne
push
pop
out
cmp
add
leave
pop
pop
sbb
adc
add
js
push
push
sbb
jbe
dec
mov
mov
sahf
push
inc
int
cltd
mov
incl
popa
xchg
xor
xlat
jecxz,pt
inc
jg
fs
add
int3
xorb
mov
jmp
sub
jne
lcall
lock
dec
mov
dec
sbb
cld
lret
daa
aam
add
mov
ljmp
pop
xlat
aam
xor
test
push
mov
jge
sub
mov
mov
sbb
incl
or
xchg
lods
push
sbb
addr16
sarl
testb
mov
adc
jle
sub
outsl
jmp
mov
adc
xor
cmpsb
ret
ret
xor
or
mov
cli
lods
jo
sti
and
cli
decb
stos
xchg
cmp
xor
addr16
push
lds
inc
cmp
lods
pushf
dec
xor
ljmp
je
mov
sbb
or
pop
lods
mov
push
cld
fistps
dec
push
pusha
sbb
movsl
ss
cmovo
or
jns
cmc
fstps
lret
lods
sub
incl
push
pop
jb
jns
cmp
mov
movsl
sti
pop
in
lock
fs
pop
scas
sti
xor
ljmp
loopne
mov
repnz
push
test
in
jl
call
jl
clc
cmp
mov
xor
ffreep
inc
adc
cmp
std
out
repz
incl
xchg
popf
and
mov
push
call
ja
jecxz
lcall
push
push
test
sbb
ja
mov
dec
jno
inc
inc
repz
sbb
cmp
dec
xchg
or
or
test
lods
mov
ret
rorb
add
lcall
loopne
add
and
insb
into
dec
sarb
pop
adc
stos
divl
fldenv
mov
cld
in
loopne
sbb
orl
xchg
in
aaa
aad
xchg
cmp
mov
popa
mov
sbb
icebp
xchg
insb
inc
jle
std
jo
gs
mov
jle
cwtl
push
sbb
fmulp
xchg
mov
mov
cmp
or
popa
cmc
scas
push
pop
cmp
clc
jbe
in
inc
decl
mov
rolb
pushf
sti
out
nop
popa
ljmp
leave
adc
js
test
cmp
repnz
scas
cmp
sub
sbbl
jp
iret
xchg
mov
loope
dec
rcrl
mov
push
in
fwait
adc
lret
bound
out
popf
std
jecxz
inc
pop
jle
jge
sub
xchg
fistpl
or
mov
jg
mov
xor
test
push
or
mov
aaa
frstor
cmp
xchg
mov
sub
lcall
xchg
cmpl
inc
ret
jae
cmp
pop
lock
test
cmp
mov
ds
jp
xor
mov
divl
gs
subb
call
aaa
js
push
jo
xchg
pop
xchg
cmp
mov
shr
clc
pushf
dec
pop
xchg
pushf
mov
mov
das
xchg
or
or
jae
jns
dec
jl
clc
and
rcr
jge
decl
test
fidivl
mov
inc
into
dec
pop
mov
retw
call
or
fldcw
pop
aaa
cmpsl
xchg
adc
mov
dec
push
repz
adc
push
stos
pop
mov
sub
dec
push
push
sbb
pop
lcall
fldl
add
ljmp
fcomps
push
daa
out
in
push
cmp
dec
les
sub
es
aaa
andb
enter
pop
arpl
lret
mov
push
add
adc
loopne
or
mov
sub
lret
mov
pushl
sahf
fisubrl
stos
push
or
ljmp
cmp
xor
push
cmc
sub
push
jo
dec
cld
ljmp
inc
sub
cmp
xchg
dec
loope
cmp
inc
or
decl
pop
test
jae
into
and
adc
pop
cmp
ljmp
test
and
jp
add
sbb
mov
inc
lret
inc
lock
lock
xor
adc
in
inc
adc
cmp
dec
adc
imulb
mov
outsb
loop
pop
ds
insb
push
fistpl
push
jp
pushf
push
into
mov
xor
jg
into
orb
clc
push
and
les
cli
outsb
lret
mov
pushl
pop
int
ljmp
cmp
add
push
cwtl
popa
sub
mov
push
or
inc
pop
std
in
jae
insl
cwtl
das
stc
push
sbb
lods
inc
pop
pushf
cmpsl
in
leave
call
xchg
imul
les
inc
dec
cli
dec
xchg
or
cs
jmp
xor
mov
mov
adc
cmc
int
fwait
push
push
es
add
imul
clc
jmp
mov
mov
mov
or
or
ljmp
pop
pop
nop
mov
call
jo
cmpl
rclb
fcomip
or
inc
push
int3
xor
std
push
mov
lods
jae
xchg
jecxz
inc
jg
and
pop
in
add
and
pop
sub
add
mov
sbb
or
call
aaa
dec
mov
js
test
je
xor
out
call
cmp
mov
mov
addb
popa
xchg
mov
mov
and
std
cmp
and
hlt
pop
ret
sbb
fcoml
inc
lret
ljmp
pop
inc
fisttpll
scas
pop
pop
and
xchg
test
movsl
mov
pop
adc
pop
push
inc
jmp
pop
rolb
mov
out
push
jns
loop
les
sub
and
or
push
outsb
movsl
mov
fs
adc
rcrb
mov
add
inc
ja
fimuls
stc
data16
pop
jl
lahf
test
jnp
jns
decl
in
xchg
or
xor
adc
mov
xchg
jl
out
je
mov
lcall
mov
sbb
sarl
sub
loope
fistpll
aam
push
jbe
call
cmp
mov
scas
imul
test
mov
pop
mov
popf
aam
mov
decl
lahf
ret
or
lock
stc
and
inc
subl
or
call
add
mov
xchg
mov
push
sarl
sub
mov
int3
push
xchg
pop
popa
ss
incl
dec
push
jb
das
xor
sti
movsl
or
in
jmp
jg
movsl
xor
sti
enter
jecxz
mov
xchg
sub
daa
dec
and
incl
sub
sbb
inc
pop
cmpsb
push
das
sbb
hlt
das
mov
sbb
xchg
or
pushl
and
ret
jne
rcrb
test
pop
jns
dec
pop
enter
insb
mov
jecxz
inc
xor
ljmp
mov
pop
add
call
mov
push
pop
mov
lcall
and
xchg
pop
add
or
out
push
decb
mov
xchg
mov
mov
test
dec
daa
adc
insb
sbb
jl
mov
jmp
mov
or
lock
pop
jb
sarl
mov
jmp
fidivrl
call
sbb
pop
inc
and
mov
sbb
xchg
or
in
add
fdiv
jecxz
jmp
stos
add
jo
nop
adc
cmp
jbe
cltd
jge
pop
cmc
fwait
and
pop
loopne
fidivrs
or
das
lcall
imul
dec
negl
out
mov
cld
insl
ret
jp
adc
and
fildll
ljmp
shl
inc
add
pop
icebp
mov
ja
push
lret
add
imul
jmp
add
les
out
cmpsl
add
adc
sbb
cs
adc
ret
mov
lcall
xchg
aam
ret
dec
or
mov
rol
aaa
inc
dec
fstpt
mov
incl
repz
iret
xor
pop
xlat
fs
test
push
mov
loopne
and
stos
enter
jg
stc
les
in
xor
dec
add
xchg
fbld
les
add
inc
adc
jne
cmp
loop
je
cmc
and
xchg
gs
call
arpl
sbb
ret
sbb
adc
jmp
loope
mov
lcall
add
xor
call
mov
aad
push
inc
push
sahf
fdiv
addr16
cmc
incl
ljmp
insb
jge
data16
mov
ljmp
out
pop
pop
in
jecxz
mov
pop
and
lods
lret
std
ret
pushf
push
aaa
or
roll
mov
fildl
cmc
inc
mov
jo
inc
inc
xchg
fndisi(8087
cmpsb
fcmovne
sub
sbb
inc
lods
fistpll
sub
cmc
pop
lret
or
pop
out
fidivrl
out
jbe
cmp
sub
incl
inc
pop
nop
adc
loope
cs
push
sub
pushf
subb
and
xchg
mov
incl
stos
and
jmp
xchg
ja
mov
outsb
test
popa
dec
sub
jl
loope
push
cmc
sbb
shl
pop
push
lock
in
pop
jl
outsl
mov
jg
pushl
mov
lds
and
xor
vxorps
sbb
pop
adc
inc
inc
ljmp
test
in
inc
push
ljmp
sub
es
es
mov
sahf
lahf
sbb
adc
pop
adc
sbb
pop
bound
jmp
push
cmp
ret
outsl
cli
inc
mov
xchg
jbe
stos
inc
push
jno
jnp
jg
push
fwait
mov
call
incl
jno
pop
lods
inc
lret
mov
fwait
ret
push
test
sbb
in
fidivrs
or
sbb
mov
sbb
insl
pop
xchg
mov
pop
or
mov
mov
incl
push
mov
xchg
push
pusha
xchg
mov
inc
cmp
sbb
inc
shlb
mov
inc
cwtl
stos
sbb
pop
hlt
lcall
mov
loopne
or
out
cwtl
push
out
pop
pop
cmc
jmp
push
aas
idiv
pop
mov
insl
mov
pop
sti
fbld
scas
loopne
xchg
inc
js
inc
pop
pop
imul
push
inc
or
ljmp
sbb
shll
adc
aam
and
in
mov
sbb
jle
stos
pop
jae
and
int3
pop
or
test
outsl
fmulp
jg
xor
and
idivb
jo
rcl
xor
and
shll
jo
das
clc
jmp
jno
mov
inc
cld
int
out
push
pop
enter
aam
call
fildl
stc
xchg
lret
mov
pushf
mov
cmc
test
pop
pop
int
cmp
dec
dec
dec
mov
rcr
xchg
das
mov
xchg
sub
out
sbb
cwtl
in
out
shr
dec
decl
decb
pop
cmc
ficompl
sahf
stos
cmp
xchg
psubsw
pushl
push
cwtl
aad
or
mov
jb
xor
sub
pop
pushf
jae
mov
adc
popa
sahf
outsb
push
push
dec
mov
sbb
adc
adc
into
popa
jmp
call
pushf
push
adc
jmp
adc
or
popf
test
sbb
pop
std
mov
std
enter
xor
in
lret
ss
push
ljmp
adc
dec
mov
dec
cmp
sub
mov
jmp
js
out
cmp
or
xchg
cli
lods
aad
shrb
cmp
mov
sbb
rclb
cmc
jb
push
int3
fs
jg
dec
fwait
push
dec
and
sbb
pop
xchg
cmc
add
jnp
xchg
cmc
add
jg
jmp
lret
sub
fistps
xor
cmpsl
xchg
lahf
fwait
inc
pop
cmc
mov
fldenv
mov
fcomp
test
js
mov
ljmp
pop
add
cmpsb
mov
push
inc
mov
fidivs
sbb
pushl
leave
push
lahf
sarl
mov
jecxz
adc
jge
fcomip
mov
scas
sub
popa
jno
jge
lds
std
icebp
pop
pop
cltd
sub
lcall
push
or
or
mov
pop
and
lcall
push
add
decl
adc
das
aam
in
and
or
pop
mov
add
inc
jge
mov
out
es
dec
ljmp
cld
add
xchg
jg
mov
cmp
imul
test
sbbl
movsl
mov
jge
push
xchg
outsb
fnstenv
xor
cmp
test
fcoms
into
aaa
mov
out
mov
orb
xchg
jle
add
cs
in
shrb
decl
sbb
cmp
arpl
mov
das
dec
mov
mov
ret
in
sahf
imul
imul
sbb
lret
xor
cmpb
push
or
xchg
pusha
scas
ljmp
clc
mov
xor
xchg
addr16
jno
call
stos
das
subl
cmp
pcmpeqb
push
arpl
sub
arpl
mov
sbb
xchg
mov
cmc
mov
sbb
push
fcmovbe
testl
decl
adc
dec
ret
pop
arpl
cmp
ss
outsl
cmp
aaa
cld
decl
mov
sub
addb
clc
jecxz
pop
adc
fscale
in
dec
lahf
jp
xchg
in
aaa
mov
aaa
lods
mov
mov
rolb
xlat
ljmp
cld
mov
xor
xor
sti
jb
loopne
sbb
push
and
jnp
les
lcall
sub
loop
sub
loopne
mov
mov
mov
mov
incl
cmpsl
and
cli
decl
push
sub
divps
jae
cmpb
mov
shll
jle
mov
add
push
dec
andb
pop
idivl
ret
in
fwait
insb
shrl
sbb
pop
jmp
jnp
and
imul
sti
sbb
xor
sbb
sarb
add
push
jmp
pusha
lret
push
mov
daa
push
jae
pop
dec
bound
inc
in
mov
push
das
mov
clc
imul
aaa
std
jnp
mov
stos
in
sub
cmp
cli
aam
ja
movsb
lcall
or
cmp
mov
cmpsb
mov
xchg
ds
out
shrd
jg
push
fistpl
adc
jecxz
in
daa
pop
mov
incl
xchg
push
cltd
pop
add
jae
mov
mov
mov
push
pop
rcl
rcrb
orb
mov
xchg
push
mov
jbe
adc
push
scas
pop
roll
dec
add
jae
je
jbe
sub
cwtl
xchg
mov
incl
pop
sub
xor
xor
fucom
fwait
adc
ficomps
out
dec
aas
roll
jmp
dec
mov
aad
lahf
inc
xor
ficompl
insl
rcll
xor
pop
add
and
pushl
lret
add
pop
cmp
mov
fdivrs
sbb
push
and
mov
jmp
or
push
mov
out
cmp
shrb
ret
mov
pop
push
mov
inc
rolb
pop
lock
fcomps
ret
call
mov
rorl
addr16
aaa
sub
incl
dec
setae
inc
sbb
push
enter
ja
jp
not
fdivrs
lods
stc
mov
mov
jmp
jne
mov
xchg
mov
push
pop
jmp
inc
push
clc
nop
cmpsb
jg
roll
in
xlat
jle
stos
xor
ret
push
aam
cld
jns
scas
lret
loop
loope
and
and
adc
dec
fisttps
inc
or
jne
jmp
aad
divl
aad
and
push
dec
inc
mov
loopne
sbb
decl
pop
mov
fsubrs
xor
movsb
les
jns
out
insl
movsb
fbld
jns
in
lret
scas
xor
and
lds
mov
aaa
sbb
ret
jmp
pop
jp
stos
jbe
jno
jl
test
mov
push
sbb
pop
lcall
fimuls
xchg
stos
xor
push
pop
pushl
pop
add
adc
adc
call
in
das
fcos
mov
jl
setl
out
or
push
pop
out
fldcw
push
fisubrl
scas
xchg
inc
in
xchg
add
adc
out
out
adc
aas
and
sbb
data16
or
cmpsl
mov
imul
decl
iret
test
aaa
mov
cmc
rcrl
adc
ljmp
in
into
cmp
incl
sbb
pop
jecxz
lock
sbb
xor
mov
pop
inc
xchg
sahf
in
outsl
call
push
rcrb
mov
push
xchg
dec
stos
sub
inc
add
stos
outsb
idiv
ds
mov
sub
jp
jb
xchg
daa
mov
and
pop
sti
inc
pop
sub
aaa
jge
sar
jge
mov
jg
xchg
xorl
mov
test
jne
push
jmp
jnp
es
pushf
int3
repnz
inc
addr16
scas
fs
hlt
pop
mov
fnstsw
xor
lcall
sbb
jl
loopne
cld
push
xchg
push
shrl
stos
call
add
cld
mov
pop
in
push
dec
adcb
mov
adc
cmc
cltd
xor
xor
decl
or
mov
push
pop
stos
add
ljmp
addr16
push
mov
push
jmp
imul
sti
or
lods
mov
xor
std
outsl
hlt
loope
push
mull
mov
je
idivb
mov
xchg
sbb
push
js
sbb
mov
pop
fcomip
call
cwtl
mov
jbe
movsl
cmp
pop
push
mov
inc
test
add
jmp
into
sub
mov
in
mov
dec
addl
jb
clc
mov
xor
ja
jg
pop
in
or
xor
inc
pusha
stos
xchg
pop
or
dec
rclb
sub
xchg
cmp
incl
sbb
repz
daa
mov
out
ror
stos
fldenv
lret
cltd
mov
scas
mov
or
push
mov
add
sub
xor
repnz
outsl
pop
cmp
int3
insl
das
sbb
inc
incl
inc
mov
adcb
sub
xchg
repz
ret
inc
adc
je
cmp
pop
mov
orl
dec
bound
outsb
popa
cld
icebp
and
inc
adc
jne
pushl
lods
sahf
pop
or
xor
mov
je
clc
sub
rcl
fcomip
mov
sub
cs
jle
movd
pop
roll
inc
dec
imul
decl
out
mov
int3
cltd
pop
dec
aam
mov
xchg
ljmp
sub
jle
sub
jno
xchg
cmc
adc
xorb
movsb
or
pop
mov
jg
jmp
xchg
test
jns
inc
js
std
sbb
nop
mov
jmp
adc
cmpsb
push
cmp
mov
ret
xchg
dec
pop
add
push
adc
pop
mov
or
rcrb
incl
inc
in
xor
subb
cwtl
cmpsl
xor
cmp
fstps
sub
push
out
add
xor
test
sub
jbe
data16
cli
ljmp
mov
mov
xor
ljmp
pop
add
or
jmp
mov
roll
in
ss
xchg
pop
xchg
lret
out
cmp
mov
cmp
pop
hlt
ret
test
sub
into
mov
clc
pushf
fmuls
mov
das
rcl
fs
sarb
push
out
leave
push
icebp
subl
jo
mov
jmp
mov
cmpsb
pop
add
stc
mov
ja
xlat
add
pop
dec
or
out
inc
loop
jmp
ret
in
dec
test
cmp
mov
pop
xchg
jb
stos
inc
xorl
pop
into
repnz
lea
push
jmp
mov
jl
iret
out
mov
movsl
jmp
rcl
rorb
add
incl
jge
fsub
mov
cmc
push
mov
inc
pop
sbb
jmp
aaa
inc
test
mov
scas
mov
fldcw
pop
dec
inc
cli
pop
jl
je
stos
adc
pop
adcb
jp
fdivrs
sub
mov
xor
test
jns
jo
lret
cltd
sbb
cmp
mov
aad
in
xor
fisubl
call
lret
ss
lcall
mov
add
push
shll
arpl
cmpsb
dec
sbb
inc
test
fwait
repnz
clc
fisttps
sbb
ljmp
adc
jle
mov
sub
sub
popa
or
sbb
jo
xchg
sahf
js
push
jp
jmp
outsl
dec
pop
push
call
cmp
inc
push
pop
pop
scas
bound
outsl
mov
in
jp
pushf
jle
icebp
ds
mov
pop
pop
adc
imul
ss
ljmp
mov
int3
in
or
pop
cmp
pop
icebp
add
sub
adc
lret
daa
loop
jmp
xchg
adcl
push
faddl
dec
mov
out
or
fmull
push
cld
mov
mull
pusha
rcrb
cmp
sbb
std
pusha
mov
dec
push
pushl
test
pop
negl
fsubl
inc
cmpsl
js
mov
sarl
sub
xchg
mov
push
and
in
jg
push
pop
imul
addr16
aam
dec
std
and
stc
jmp
jno
jnp
or
cmc
popf
and
and
mov
aam
pop
adc
lcall
dec
mov
xor
xchg
int3
aas
mov
enter
or
push
call
push
xchg
negb
ljmp
sahf
ja,pn
clc
and
push
inc
sub
incl
mov
aaa
and
fwait
repnz
ret
les
mov
xchg
cli
pop
pop
jle
cld
shrl
enter
mov
testb
and
cmp
mov
mov
std
ljmp
push
ss
int
hlt
jg
dec
adc
xchg
loope
inc
sbb
shl
incl
mov
dec
data16
lret
pop
test
sbb
imul
scas
ljmp
lcall
aaa
inc
cmc
cmp
sbb
js
repnz
mov
fs
sbb
fdivrl
stos
sub
mov
les
sbb
jmp
lods
ss
jecxz
je
xor
sahf
xchg
test
sub
iret
xlat
js
sub
out
fdivs
int
jbe
adc
xchg
les
and
dec
or
popf
out
decl
cmp
and
fcmovnu
pop
adc
into
leave
push
lods
xchg
icebp
es
fisttpll
inc
test
incl
pop
sbb
push
lock
or
mov
and
mov
data16
inc
mov
cli
xchg
scas
push
mov
lods
pushf
cmpsb
lea
mov
shrl
jmp
cmp
pusha
push
mov
mov
pushl
dec
inc
inc
add
popa
into
xchg
fcomip
sub
adc
mov
add
adc
lcall
js
cltd
loope
imul
dec
scas
jle
fsubp
cmp
xor
bound
adc
popa
xchg
cmp
ds
inc
adc
in
jns
out
and
femms
cmp
in
sub
push
push
or
decl
cmc
scas
push
js
jecxz
addr16
das
pop
gs
push
jbe
js
sub
mov
jg
mov
cmpsl
xor
mov
jb
mov
daa
int
fisubrs
jnp
scas
out
call
lea
mov
xchg
lcall
cli
icebp
scas
mov
push
mov
inc
pop
inc
lcall
cltd
mov
jmp
xchg
jns
inc
cmp
incl
sar
push
inc
clc
jge
mov
rcrl
pop
dec
inc
xlat
pusha
inc
or
call
xor
mov
cmp
je,pn
mov
lods
sub
enter
push
jmp
mov
clc
cli
loop
je
jmp
push
aad
nop
loopne
ds
jl
out
ljmp
jns
shll
into
bound
lret
mov
add
and
jmp
jb
addl
enter
std
pop
xor
dec
sub
mov
adc
bound
inc
incl
pop
mov
mov
iret
hlt
inc
xlat
lds
std
mov
call
popa
test
add
push
incl
jbe
jnp
push
leave
out
mov
adc
jg
mov
mov
add
jns
aam
sub
inc
testb
adc
movsl
imul
shlb
decl
sub
xor
sbb
rorl
fcmovu
insb
dec
enter
xor
decl
adc
mov
jge
call
rorb
pop
add
inc
mov
idivb
jmp
ficoml
xor
fldenv
mov
lds
inc
rclb
jae
mov
out
or
add
mov
add
loopne
sub
and
sub
inc
or
call
or
jle
mov
int3
adc
clc
cwtl
lock
mov
imul
mov
lret
test
fsubrl
insb
jecxz
add
pusha
test
into
inc
nop
xorl
outsb
jg
lahf
imull
lahf
imul
hlt
dec
or
push
push
std
adc
xor
adc
dec
dec
sub
call
scas
mov
inc
repz
xchg
push
loopne
insb
jl
push
daa
in
adc
pop
pop
decl
and
xchg
pop
mov
push
jl
int
cs
sbb
sub
cmp
scas
mov
dec
jno
daa
mov
je
jg
jmp
push
mov
idivl
jmp
inc
sbb
fwait
mov
lcall
mov
ret
popa
int3
and
cmp
jne,pt
nop
hlt
call
cs
dec
test
mov
push
cmp
int3
and
push
and
xchg
mov
push
mov
cmp
hlt
or
test
incl
out
iret
adc
add
sbb
rcrl
cli
mov
jmpw
mov
lcall
hlt
frstor
cmp
or
mov
mov
lock
inc
mov
shrl
cmp
scas
add
jmp
xlat
xchg
xor
cltd
xlat
rcr
loope
out
daa
cmc
jo
loop
les
bound
lcall
xchg
sbb
test
and
aaa
iret
sub
insl
cli
cmpps
mov
dec
inc
ds
std
cs
mov
lds
sbb
inc
pop
loopne
incl
and
cmpsb
or
out
adcl
daa
pop
jbe
mov
cmp
mov
rcll
sbb
lahf
sub
std
and
sbb
daa
test
dec
mov
mov
xchg
jnp
cltd
lea
mov
mov
sub
imul
xchg
pop
jg
ljmp
jnp
mov
loope
es
sbb
mov
pop
sub
xchg
jns
mov
lahf
adc
mov
fdivrs
rolb
repz
sahf
jbe
lcall
jb
fildl
test
inc
add
into
jb
jae
sub
inc
mov
dec
clc
incl
das
aam
test
sub
pop
nop
cld
mov
xor
jecxz
inc
outsb
push
push
ljmp
frstor
jns
mov
in
mov
push
push
inc
imul
popf
push
jecxz
pop
or
push
mov
repz
inc
jns
push
xchg
inc
or
data16
mov
ret
pop
push
inc
std
js
xor
xlat
cmp
out
fisubl
inc
pusha
sbb
cmp
cli
dec
cmc
jno
xchg
int
inc
pop
out
dec
pop
movsb
jge
ret
rcll
rcll
jmp
ret
int3
pop
pop
pop
outsl
jmp
adc
rclb
movb
add
ljmp
xchg
xlat
push
jb
repnz
pop
or
xchg
imul
xchg
sbb
jmp
insb
mov
fs
sti
lds
ljmp
add
sbb
in
mov
ljmp
pop
lahf
and
jb
imul
notl
in
jmp
xchg
add
mov
fcomip
adc
out
cmp
in
fstl
cmp
or
div
das
adcl
decl
repz
idivl
cmp
test
or
movsb
adc
pop
adc
data16
xor
cmpsb
lcall
fs
lret
jo
or
push
aam
ret
fcomps
sbb
repnz
lcall
fmulp
dec
mov
push
lcall
dec
les
lahf
or
jg
call
pop
push
dec
sub
outsl
pop
inc
add
jno
stos
imul
aas
jg
jmp
mov
cs
scas
leave
jle
sbb
loope
mov
jmp
add
pushf
popf
mov
or
mov
push
and
xor
stos
pop
scas
in
dec
jmp
cmp
cmpsb
push
push
push
inc
int
hlt
jge
mov
fstpt
mov
mov
arpl
ja
pop
mov
out
js
int3
mov
test
cmp
lock
stos
ljmp
lock
xor
inc
sub
add
cmp
jae
jno
inc
mov
test
mov
adc
dec
lcall
gs
ja
shr
ret
sti
jmp
push
xlat
ja
adc
mov
daa
movsb
mov
call
mov
cmp
sbb
test
mov
mov
cmpsb
aam
jb
ds
push
movb
adc
popf
lcall
lods
decl
into
repz
sub
sub
adc
flds
jg
dec
cmp
push
ret
or
jne
sbb
inc
repnz
pushf
imul
mov
pop
addr16
inc
fsin
push
repnz
movsl
pop
add
xchg
jmp
cld
xchg
push
je
repz
xchg
shll
cmp
jp
fistpl
imul
fsts
xor
ret
outsl
inc
out
mov
mov
add
push
mov
adc
rcll
push
test
lret
mov
jge
sti
sbb
dec
pop
pop
cmp
mov
lcall
push
adcb
sbb
cli
jp
cld
xorb
repnz
lcall
dec
sub
xchg
subb
sub
mov
lea
dec
jo
push
fstl
push
outsl
push
popa
mov
sbb
cli
jg
mov
out
aam
sub
xlat
cld
in
inc
mov
test
mov
js
enter
ljmp
fsub
adc
int3
orb
bswap
popf
out
pushf
add
popf
movsl
nop
ja
jmp
aad
pop
sub
push
mov
cmc
daa
insb
je
and
int3
sub
mov
decl
jo
jae
inc
mov
add
ret
aam
clc
cli
popf
jb
xor
adc
mov
les
or
imul
ret
adc
call
data16
sbb
aas
loop
sub
imul
loope
gs
and
clc
lods
cmp
lcall
xchg
sub
daa
in
mov
mov
outsb
lods
lret
mov
sbb
or
ret
push
push
xchg
incl
inc
jne
jns
jge
pop
cmp
sub
stos
popf
sub
loopne
mov
pop
push
in
mov
mov
in
sub
push
rorl
popa
test
push
and
popa
dec
jg
pop
fstpt
cmp
jl
push
out
inc
dec
mov
cmpsb
lcall
add
mov
mov
inc
mov
xor
pushl
push
popa
mov
in
jge
jnp
mov
mov
jbe
enter
into
fsubrl
decl
or
lods
xchg
xchg
pop
sbb
loop
jmp
pop
or
incl
shr
or
sbb
stc
outsb
mov
add
xchg
loop
lock
pop
fimuls
ja
popf
dec
xchg
sub
mov
ret
or
call
dec
adc
dec
xor
dec
or
mov
sbb
ss
cmp
aaa
push
jnp
fwait
cmp
add
dec
push
inc
xchg
sbb
xor
xor
inc
fwait
in
mov
ljmp
clc
inc
scas
enter
mov
inc
push
mull
aam
jmp
insb
cwtl
dec
and
out
not
andb
mov
xor
sub
fsubs
pop
pop
out
jmp
decl
pushf
popa
mov
inc
imul
sub
je
bswap
mov
mov
insl
pop
inc
decl
cs
aas
add
xchg
mov
xchg
mov
std
dec
jmp
sub
adc
pop
lea
xor
mov
push
xchg
jns
dec
test
in
ret
lock
sbb
inc
les
fsubl
das
sar
shrb
popf
sub
xorb
mov
mov
xchg
jbe
test
stos
mov
sbb
jo
xchg
xor
scas
adc
incl
adc
es
xchg
nop
add
pop
fsubr
lds
push
mov
or
adc
jmp
or
add
cli
mov
daa
jmp
sub
fiaddl
lea
dec
idiv
lcall
add
iret
das
jmp
std
dec
cwtl
sbb
es
inc
xchg
loop
mov
incl
out
outsb
stos
fidivl
add
addr16
cmpsb
bound
cmpsb
jge
mov
cli
incl
ucomiss
mov
sbb
sub
cmp
incl
jnp
or
mov
aaa
mov
adcb
xor
lcall
jno
outsb
cmp
push
sbbb
or
adc
cmp
std
cltd
lahf
sbb
lock
push
jnp
test
enter
fwait
in
insl
or
pushl
loop
test
xchg
push
push
jg
pop
inc
sub
scas
imul
add
fnstcw
sahf
and
mov
idiv
incl
cmp
sub
push
rorl
das
cmpsl
fstl
int
cmp
inc
or
pop
cmc
pushl
sbb
sub
out
les
into
ljmp
aad
cmpsb
lret
pop
dec
xor
cwtl
cld
mov
arpl
popf
and
call
mov
movsb
add
int
jle
push
mov
mov
xor
mov
repnz
enter
decl
adc
fistps
sti
xchg
shlb
aaa
imul
sub
leave
xchg
ret
out
lcall
mov
sarl
inc
jp
add
push
leave
adc
aam
xchg
out
ret
pop
mov
dec
and
sbb
repz
mov
test
test
and
mov
pop
mov
into
mov
inc
mov
pusha
add
out
adc
int3
sbb
decl
push
idivl
or
add
mull
clc
jmp
cmp
cmc
dec
fcomps
stos
scas
push
js
mov
mov
xor
xchg
mov
lcall
ljmp
loop
test
adc
iret
jae
rorl
inc
decl
out
scas
xchg
jae
stos
adc
imul
push
in
or
push
call
xchg
push
cwtl
jb
int3
or
xor
cmp
pop
shll
out
mov
jmp
xchg
sbb
mov
call
or
adc
outsl
mov
and
out
aam
je
movsb
ds
addr16
inc
cmp
enter
or
lcall
test
push
jg
orb
fs
shll
sbb
jg
pop
push
mov
filds
aaa
pop
aad
xor
inc
mov
cltd
stc
icebp
jecxz
mov
shrl
ret
jmp
mov
mov
inc
pop
push
mov
pop
mov
pushl
divb
adc
fstpt
mov
and
mov
in
std
jo
inc
or
addr16
add
and
add
pop
sar
decl
adc
addb
aad
lods
loopne
cwtl
lock
dec
cmpl
pop
fwait
movsb
dec
pop
mov
dec
dec
jno
rol
xchg
ficompl
mov
ficoml
stos
xchg
dec
jl
incl
flds
test
mov
cld
incl
sbb
or
and
sbb
aam
dec
test
mov
mov
pusha
movsl
xchg
mov
loopne
into
pop
lahf
idiv
stc
or
inc
lret
mov
cmp
push
int3
or
sbb
call
incl
insb
jno
push
popa
mov
insb
xchg
cli
stc
lock
and
mov
jmp
mov
lret
cld
int3
push
xchg
mov
out
insb
jno,pn
es
lcall
push
pushf
mov
xor
aam
sbb
push
shlb
cmc
sar
lcall
stos
sub
add
mov
out
adc
dec
push
mov
cmp
mov
addr16
hlt
enter
incl
xor
in
orl
incb
adc
incl
scas
add
xor
cli
jns
dec
es
cmpsl
xchg
dec
cmc
ljmp
cmp
jbe
xorl
jns
sahf
loope
push
lahf
nop
cmp
imulb
cmp
decl
xor
or
adc
lcall
sar
decl
testb
lcall
mov
call
jo
dec
cmp
jmp
ljmp
add
jmp
loope
sbb
negl
decl
inc
shl
or
dec
xchg
in
push
out
jmp
loop
cld
cs
dec
out
mov
pop
push
add
mov
and
or
je
mov
aaa
pop
cs
mov
loope
call
dec
repnz
cmp
pop
add
jnp
insl
int3
adc
repnz
xor
push
call
add
and
out
lret
outsl
xchg
jo
into
jge
repz
cmc
sbb
fidivrs
mov
add
ljmp
out
xchg
int
inc
cmp
out
lahf
mov
into
cmc
fstl
ss
fistps
inc
jns
sbb
pop
dec
dec
inc
jns
imul
insl
cld
scas
sahf
jmp
inc
lods
aam
es
cmp
divl
gs
mov
pushf
arpl
or
es
push
adcl
dec
lods
daa
add
adc
xchg
mov
imul
popf
xor
mov
pushw
adc
hlt
cmp
dec
shrb
mov
dec
mov
int
sub
mov
mov
lods
cwtl
xor
cmpsb
inc
popf
ja
hlt
clc
test
jnp
mov
mov
adc
dec
test
es
jmp
jmp
loop
sbb
pop
pop
sbb
fisubs
pop
test
imul
enter
call
cmp
out
sub
or
in
inc
xchg
ja
pop
inc
xchg
inc
imul
out
xchg
decl
adc
cmp
xchg
sub
xor
cwtl
push
addl
sub
adc
cwtl
sarl
sub
jg
mov
jge
inc
and
lcall
mov
jp
cmp
push
scas
mov
out
sar
ljmp
mov
jmp
enter
inc
mov
fwait
pop
outsl
xchg
les
sub
push
adc
mov
shl
nop
lock
lock
ljmp
imul
xchg
add
popf
scas
jecxz
adc
lahf
ja
das
xchg
test
xchg
pop
sub
aad
sarb
mov
call
lds
xchg
sbb
push
int3
dec
inc
xchg
setne
loope
jg
pushl
dec
js
xor
cli
jmp
inc
inc
sub
fidivrl
xor
sar
out
enter
les
leave
cmpsl
or
es
inc
mov
lretw
jg
cmp
xor
popf
mov
dec
push
mov
inc
and
mov
sbb
ja
lcall
pop
mov
sub
and
movl
or
mov
fidivrl
sub
decl
push
cld
adc
icebp
sub
stos
or
out
jns
ja
cmp
mov
aad
xchg
aaa
cld
fistpll
fwait
sub
ss
sub
lods
jmp
movsb
mov
add
fidivs
mov
cmp
dec
dec
adc
es
leave
lahf
inc
pop
ss
pop
adc
incl
mov
push
cmp
and
sbb
mov
mov
imul
rorl
cmp
clc
imul
jmp
xchg
nop
in
jecxz
jne
incl
add
insl
dec
and
or
and
adc
dec
add
call
xchg
jmp
sahf
mov
ljmp
pop
shll
pushl
lock
push
jae
mov
xchg
jle
dec
pushf
insl
repnz
add
decl
pushf
outsl
pop
ret
cmpsl
mov
movsb
push
inc
outsl
add
adc
lret
add
mov
sub
enter
sub
ret
or
jbe
out
cmp
jno
ljmp
pop
and
inc
in
ljmp
test
cmpsb
jg
mov
or
and
dec
std
mov
or
incl
pop
iret
sbb
addl
pop
xchg
or
fincstp
icebp
mov
mov
jne
movsl
push
jmp
sbb
das
iret
jge
loop
sub
mov
mov
jmp
out
insb
imul
jp
sub
xor
arpl
cwtl
sub
das
push
sahf
sub
dec
mov
mov
in
jge
mov
or
mov
testb
adc
and
loopne
mov
push
add
dec
dec
mov
pop
test
insb
cwtl
inc
popf
scas
mov
pushl
dec
cmp
mov
sbb
imul
js
and
and
pusha
aad
sti
jmp
fcoms
mov
dec
lahf
ljmp
xchg
sbb
fwait
cli
ljmp
and
mov
push
mov
push
and
jb
mov
or
icebp
mov
sub
ljmp
pop
movsb
outsl
push
push
mov
scas
add
lret
push
ljmp
xor
decl
addl
mov
dec
movsl
xchg
xor
ret
mov
insl
sahf
xchg
in
popa
and
push
xor
outsl
mov
mov
pushl
aaa
sub
add
cmp
jmp
dec
jo
cli
data16
jmp
add
fisubrl
dec
pop
lret
xchg
cmp
ret
mov
inc
lahf
pop
sub
jmp
or
fidivrs
sbb
fisubs
mov
push
xchg
fdivp
push
lcall
add
insl
cmp
add
pop
push
in
scas
cmp
cld
lcall
nop
popf
out
push
and
jne
mov
push
out
js
mov
insl
push
dec
cli
in
dec
jmp
call
insb
lock
movsb
sti
cmp
es
fucomi
dec
out
sbb
jmp
out
xchg
test
mov
push
fmulp
mov
pop
arpl
cs
shlb
cli
adc
pop
sbb
iret
jno
in
mov
inc
sti
sbb
jmp
insl
pop
jnp
cmpb
call
je
adc
pop
cmc
and
mov
stos
std
jp
adc
movl
xchg
mov
and
ljmp
sub
insb
jmp
stc
cwtl
dec
call
nop
cli
jmp
stc
jne
lods
icebp
xlat
ljmp
cmp
int3
xor
icebp
stos
push
fs
or
jae
push
push
das
mov
call
xor
sarl
rcrl
into
mov
xor
lcall
adc
xlat
mov
push
jp
adc
insb
sub
mov
pop
cltd
out
xor
std
fcmovbe
test
lea
into
push
repz
stos
fdivrs
call
mov
xlat
in
fwait
inc
out
data16
lods
out
inc
mov
jp
mov
inc
pop
cmp
call
sahf
loope
popf
mov
jne
pop
ret
push
push
sbb
xchg
jae
inc
cmpl
loopne
rolb
decb
fldt
into
dec
repnz
stos
add
jo
jecxz
aam
and
pop
into
pop
test
mov
mov
jno
pop
in
call
sbb
dec
aam
push
icebp
mov
loop
std
push
mov
stos
popl
and
dec
adc
outsl
cli
jp
add
jp
and
in
dec
or
pop
sub
inc
aad
pop
lock
decl
rcl
sarb
push
aas
jecxz
subl
sub
xchg
xchg
mov
jbe
push
jmp
jle
cs
nop
enter
lret
pop
inc
push
and
adc
sub
mov
scas
dec
and
mov
jmp
lods
int
cwtl
or
incb
adc
push
xchg
fisubrl
sub
jge
sahf
sarl
jg
add
jmp
cwtl
cwtl
dec
cmp
dec
test
leave
das
sbb
stos
or
mov
push
push
sub
jg
decl
cmc
pop
cmp
pop
fwait
in
cmp
or
mov
lods
dec
push
jge
enter
or
jmp
push
jg
les
add
sbb
cs
xor
and
imul
push
dec
inc
jns
sub
movsb
inc
mov
and
mov
or
jmp
push
incl
pop
push
cmp
mov
pop
icebp
inc
das
dec
sti
push
sbb
jbe
mov
test
ljmp
pushl
addr16
pop
xor
ss
ds
or
in
pop
pusha
xor
nop
fbstp
std
incl
push
cmp
popf
in
xchg
pop
push
jg
jnp
xchg
cmp
cmp
js
or
push
pop
inc
xor
loop
xor
insb
dec
jp
popf
mov
xchg
add
sar
lcall
pop
mov
mov
mov
test
mov
notl
fmul
call
std
bound
push
inc
push
call
and
int3
mov
testl
cmpl
or
dec
xor
mov
sti
jnp
out
lcall
cmpsl
adc
add
adc
sbb
stos
shlb
adc
mov
and
call
xchg
shrb
adc
cli
jns
xchg
add
mov
dec
fs
pop
fnstcw
inc
outsl
call
out
insb
lcall
mov
jl
xchg
nop
adc
repnz
jg
mov
dec
adc
cwtl
lea
mov
xchg
xchg
jmp
pop
ret
es
lea
sub
jne
aaa
dec
cmp
sarl
ss
das
dec
pop
jae
mov
adc
call
sub
lahf
inc
jmp
and
mov
mov
ret
int3
loop
mov
ret
daa
les
aaa
aaa
jns
pop
jb
mov
js
hlt
das
mov
mov
xchg
aaa
push
mov
jno
out
pop
orb
and
fisubrs
push
push
daa
jle
add
bound
mov
cltd
mov
sub
mov
jl
cmp
ljmp
outsb
pop
adc
mov
out
sub
scas
inc
in
dec
loop
imul
dec
out
ss
xchg
std
mov
jmp
mov
and
xor
pop
xor
xchg
repnz
xor
aad
jge
daa
sbbb
pop
jbe
mov
add
jae
out
add
ret
cmp
dec
pushl
or
mov
pop
jmp
lea
sbbl
incl
add
cwtl
dec
aad
imul
cmp
dec
insb
mov
mov
call
mov
push
cmp
fcoml
push
aas
mov
sbb
and
andl
inc
pop
or
pushl
cltd
add
mov
inc
and
xchg
sti
add
movsb
aad
in
sbb
xchg
pop
pop
iret
scas
gs
sub
lea
incl
and
mov
out
icebp
push
arpl
cmp
jno
sbb
fmulp
sub
jbe
into
mov
incl
cwtl
ss
inc
ds
addr16
gs
cld
xor
incl
mov
lcall
push
stc
insb
bound
je
popa
loopne
ljmp
cmpsl
cmp
ret
pushf
and
idivl
adcl
sub
psraw
pushl
cmp
shll
rorl
jle
sbb
add
mov
roll
mov
push
aam
idiv
js
cld
dec
pushf
inc
mov
sub
js
call
sbb
mov
das
adc
and
or
and
repz
into
xor
lcall
fcompl
or
in
sbb
or
inc
je
jb
int3
and
out
add
cmp
push
mov
pop
fidivrs
test
ljmp
mov
or
mov
insb
dec
adc
lcall
jmp
sub
push
movb
fisubrl
and
xchg
cmc
testb
inc
mov
out
addb
lret
xor
in
and
jmp
int3
mov
cwtl
mov
test
popa
push
popa
repnz
push
xchg
dec
and
jb
addr16
and
lcall
fwait
test
neg
popa
pop
outsb
xor
jo
xchg
popf
repz
faddp
negl
push
adc
decl
lock
mov
fldenv
xchg
adc
sub
adcl
lcall
ret
jb
cmp
icebp
mov
or
std
scas
test
cld
jo
cmpps
call
rcrb
mov
push
das
dec
aam
pop
popa
iret
fs
cs
sbb
jp
fwait
push
and
inc
jg
lods
aad
push
add
adc
sub
insb
mov
xor
adc
dec
scas
inc
scas
xor
lcall
in
cmp
lret
lea
aaa
inc
sub
dec
xchg
pop
call
lcall
shrb
mov
pop
mov
outsb
push
jg
decb
test
xor
ss
adc
ficoml
cld
lahf
push
mov
lahf
xchg
mov
fnstenv
mov
out
xor
in
fidivs
cmp
push
mov
popa
or
shll
inc
into
loopne
jne
ljmp
push
lret
jae
es
mov
popa
pop
shl
out
cmpsl
pop
or
incl
frstor
mov
cmp
and
inc
je
outsl
mov
popf
add
mov
fbstp
movsl
lcall
lret
adc
int
push
jle
sbb
pop
pop
inc
mov
jecxz
cmp
lods
or
mov
lods
xor
and
jle
jg
jne
adc
rcr
jns
add
mov
out
pop
fistl
xchg
mov
aaa
icebp
jl
sub
lcall
lods
jge
sahf
cmp
int
mov
jae
jno
pop
mov
jb
stos
enter
incl
scas
push
fisubrs
push
xchg
fs
ret
add
fdivrl
or
notl
cld
call
adc
mov
pushf
in
imul
les
loope
decl
les
cmp
rclb
mov
ss
in
adc
push
adc
dec
mov
xchg
mov
dec
in
outsb
int3
mov
clc
iret
xchg
sub
push
mov
loop
pop
jmp
outsl
pop
adc
es
mov
adc
js
add
pop
or
out
fldt
stos
or
daa
jnp
call
xchg
sub
mov
orl
pop
popf
xchg
inc
loopne
lock
mov
xchg
call
add
mov
hlt
loopne
jl
pop
mov
aaa
std
ljmp
adc
outsb
dec
sahf
icebp
mov
test
lcall
add
xchg
mov
repz
call
call
dec
int3
dec
mov
out
ds
mov
movl
xchg
popw
sbb
addb
jne
mov
push
dec
aaa
cmp
dec
jns
stc
lock
incl
inc
mov
dec
out
sub
sti
lahf
jecxz
orb
pop
and
icebp
xor
lods
jg
sahf
or
cmp
push
and
pop
orb
push
pop
aam
lcall
fistpl
lcall
icebp
cmp
inc
test
jmp
mov
cmc
popf
push
dec
push
into
xor
idiv
not
xchg
xchg
fsubrl
je
pop
test
sbb
xchg
decl
shlb
cmp
xchg
jle
mov
mov
jmp
movsb
push
mov
dec
incl
xchg
cmp
fnsave
scas
mov
bound
jno
std
test
mov
jl
leave
inc
lcall
mov
and
jbe
xchg
xchg
cltd
and
jno
popa
pop
and
xor
inc
sbb
or
out
in
arpl
jno
mov
mov
jge
and
mov
and
sahf
mov
push
or
lds
xchg
je
adc
shll
cmp
add
pushl
jae
adc
xchg
outsl
jge
hlt
mov
mov
cmp
and
mov
je
popa
mov
inc
dec
das
xor
sub
dec
mov
cmp
insb
divb
sub
and
sub
fidivrl
mov
adc
mov
ja
sbb
cmp
xchg
in
sub
adc
scas
xchg
or
fcoms
pushl
movsb
or
xchg
mov
cmp
ror
stc
jbe
loop
jecxz
std
mov
jg
hlt
adc
icebp
test
in
mov
sbb
cmp
xchg
dec
pushf
jg
hlt
jnp
mov
out
mov
call
roll
push
call
outsb
pop
aad
pop
push
das
or
ss
add
mov
sbb
dec
mov
mov
cmpsb
inc
lahf
dec
jg
sbb
and
outsb
out
movsb
roll
clc
aaa
inc
jae
adc
decl
lcall
pop
jno
mov
push
mov
negl
ja
push
pusha
subl
lcall
out
sbb
mov
mov
mov
inc
shl
xchg
call
xchg
scas
dec
add
call
cld
lods
or
jae
lock
inc
xchg
push
push
cmpsb
movsb
jns
cmp
inc
fnsave
ljmp
stc
sub
inc
adc
enter
add
xor
cltd
dec
jge
cs
int3
sbb
decl
hlt
lds
das
xlat
test
pop
fcmovb
dec
repz
pop
cmpsl
mov
mov
pop
xchg
andb
or
jmp
push
cmpsl
mov
jecxz
jnp
imul
into
aam
cmpsb
jbe
jle
sahf
test
decl
sub
stos
dec
jb
add
and
dec
push
sub
xor
or
mov
call
lock
jmp
mov
cmp
adc
int
std
daa
adc
mov
push
int3
rol
pop
loopne
incl
not
lods
mov
xchg
fistpl
or
rolb
push
and
incl
ds
push
jle
push
jns,pt
mov
les
cvtps2pi
jl
add
ja
mov
pop
dec
mov
cmp
mov
jmp
decl
push
lcall
pop
push
lcall
sahf
jmp
jg
push
mov
jmp
stos
out
std
pop
pop
testb
lahf
jbe
mov
gs
shlb
rcl
jp
ljmp
into
imul
cmp
fimuls
lcall
push
pop
popa
and
test
xor
idivb
jecxz
inc
adc
inc
cld
ljmp
lea
add
or
xor
clc
sbb
mov
mov
adc
jge
add
push
adc
push
insl
mov
cmp
je
cmp
repnz
leave
inc
imul
inc
inc
jb
pushf
cmp
imul
inc
aas
fwait
aas
push
clc
ds
mov
dec
mov
dec
test
and
inc
ja
ret
aas
inc
adc
cld
call
cmp
dec
jge
inc
addr16
xchg
fsubrl
jg
scas
inc
mov
adcb
xor
out
nop
or
mov
jo
adc
mov
in
out
fisttpll
les
mov
pushl
push
ss
push
shrb
jno
outsl
mov
pop
add
arpl
mov
pop
pusha
mov
hlt
mov
arpl
jbe
dec
jg
out
mov
mov
mov
aad
xor
imul
jmp
cltd
push
fs
clc
mov
pushl
adc
cli
sbb
test
dec
inc
or
dec
test
cmpb
bound
lock
jnp
pop
aaa
or
lret
mov
sahf
add
push
cltd
push
fs
aad
lret
push
loopne
inc
sahf
mov
jmp
test
cli
mov
outsb
push
push
in
sahf
out
ja
and
pusha
popf
mov
icebp
push
or
inc
xor
popf
fbstp
cmp
mov
mov
stc
daa
or
xorl
add
cltd
cmpsb
jo
lock
outsb
test
push
inc
dec
ljmp
shll
mov
push
pop
cwtl
movsb
sub
lock
repnz
shlb
push
xchg
push
push
jecxz
jne
lret
push
and
je
cmp
ret
and
aas
dec
out
sbb
cld
call
ret
lahf
mov
je
mov
push
rorl
addr16
scas
xchg
mov
imul
inc
push
incl
div
mov
mov
push
int
mov
cld
push
mov
call
int
aad
xchg
inc
pop
loopne
pusha
sbb
mov
pusha
xchg
repnz
enter
mov
lcall
xor
mov
or
rclb
ds
int
mov
jno
add
jmp
jge
nop
lret
leave
pop
pusha
data16
test
or
arpl
stc
xlat
cmpl
sub
fsubr
cmp
pop
int3
xchg
pop
ret
adc
cmp
xchg
pushl
in
push
cmp
adc
call
adc
mov
pop
and
push
mov
push
xchg
jbe
fsubs
mov
dec
ljmp
orl
into
ficoml
mov
hlt
ljmp
xor
cld
add
call
sbb
pop
clc
ss
std
call
ret
repz
inc
xor
cmp
jo
das
push
in
or
mov
in
or
pushl
or
push
loopne
rcrb
shll
incb
lds
rcrb
decl
mov
and
orl
mov
xor
mov
push
pushl
rcrb
je
orb
out
mov
movsb
pop
fildll
scas
push
push
cmpsl
div
xchg
lahf
loop
jb
add
decl
or
or
loopne
cmp
sub
inc
into
call
outsb
sbb
fisttps
cmp
ror
fisubrl
fistpll
sarl
sar
stos
out
lea
xchg
inc
mov
popf
lds
cld
xchg
clc
scas
call
adc
jmp
xchg
stc
js
sub
mov
mov
mov
out
mov
mov
aam
cmp
sti
out
shll
push
push
inc
dec
push
shlb
cli
incl
xchg
pop
add
lds
adc
lods
call
push
rolb
mov
jmp
mov
cmp
fisubrl
mov
or
adcl
mov
out
mov
test
adc
ja
aas
jns
cltd
testl
in
jae
adc
pushl
movsl
icebp
push
fcomi
xchg
cmp
xchg
add
inc
ljmp
pop
test
pushl
sub
mov
mov
pusha
mov
sbb
push
daa
decl
xchg
and
mov
and
out
mov
nop
into
cmpsb
pop
cmc
push
incl
shl
movsb
dec
xchg
xor
faddl
mov
cmp
movsl
out
xchg
movb
mov
ljmp
test
stc
inc
and
cmp
fdivp
or
fwait
mov
sbb
idivb
and
lds
fstps
mov
shll
xchg
sbb
mov
mov
call
in
test
dec
lret
cmp
ljmp
mov
pop
cmpsb
test
adc
test
adc
aas
cmpsb
scas
lret
lcall
xchg
dec
sub
lods
dec
loope
add
scas
aad
mov
lret
push
xchg
jle
jnp
xlat
cltd
scas
mov
ljmp
enter
popf
pop
cltd
fldenv
and
jle
and
cmp
sahf
stos
xor
pushl
mov
dec
test
mov
leave
fmul
jne
lods
ss
in
cmpsl
and
test
outsb
inc
dec
shlb
fsubl
mov
stos
add
inc
adc
stos
jae
jg
xchg
mov
xor
ljmp
mov
ljmp
imul
xchg
les
lods
ss
jg
sahf
sbb
dec
push
pop
ficomps
sbb
ljmp
call
mov
dec
cmp
ret
sbb
adc
mov
cmp
insl
mov
popa
dec
lods
fs
outsl
aad
pop
jae
cmp
clc
in
sbb
push
push
inc
jge
jo
arpl
adc
ja
decl
xor
jmp
stos
pushf
orl
clc
push
jbe
push
in
mov
and
push
inc
and
outsl
sub
xchg
loopne
pop
addr16
and
icebp
call
pshufw
aas
sbb
inc
pop
and
lods
xchg
add
sahf
lcall
jmp
push
pop
hlt
or
xchg
sub
pop
int
dec
add
std
ss
std
push
ja
gs
arpl
xorb
jno
out
or
push
mov
fistps
mov
outsl
out
cmp
adc
sub
stc
jbe
pushl
cmp
jns
xor
xor
mov
mov
pop
ret
sti
jmp
mov
dec
je
jbe
loopne
rclb
adc
scas
cli
outsl
xor
daa
cli
js
clts
jnp
or
call
add
push
mov
stos
mov
imul
ljmp
aam
out
adc
daa
adcl
int
mov
ret
ret
lret
sbb
rolb
incl
push
stos
cmp
mov
es
mov
roll
mov
adc
out
add
or
and
xchg
dec
jg
cmp
cmp
push
fildl
incl
leave
cmc
lret
adc
mov
dec
outsb
mov
inc
xor
std
jg
pushl
enter
data16
loopne
lods
push
push
dec
inc
fwait
pop
cs
sarb
call
data16
in
outsb
xchg
pop
es
inc
jmp
mov
mov
pop
mov
stos
pushl
inc
and
enter
adc
arpl
pop
call
loop
imulb
sar
mov
test
sub
fbld
cld
scas
mov
xchg
add
pushl
cld
mov
jns
gs
cmp
jo
xor
mov
dec
xchg
lds
jmp
fistpll
mov
sti
pop
add
dec
pushf
add
push
xchg
je
aas
aas
jb
sti
imul
psubusb
scas
ret
mov
in
push
sub
push
leave
push
add
decl
loop
daa
mov
push
add
mov
pop
jbe
fwait
adc
jnp
mov
adc
adcb
or
stos
pop
sub
mov
dec
sub
and
sbb
testb
fidivrl
and
mov
or
push
cmp
sti
fldt
mov
fnstenv
inc
jne
scas
mov
mov
cmp
dec
imul
pop
push
mov
das
xchg
test
lcall
adc
fsubl
mov
dec
das
movsl
push
movsb
mov
outsl
mov
mov
loopne
jnp
inc
scas
push
aaa
pop
aas
repnz
mov
stc
push
imul
imul
loope
xor
push
aad
and
inc
int3
push
mov
shlb
xor
jp
mov
incl
jno
bound
inc
xchg
lea
arpl
dec
cli
sub
aas
pop
cmp
test
pushl
pusha
daa
popa
add
push
jge
mov
jmp
pop
repnz
loope
loope
pop
pop
mov
jg
mov
inc
aaa
cmpb
pop
xor
in
out
cmp
sub
mov
lock
scas
adc
mov
decl
clc
push
adc
fcomi
sbb
ja
das
ret
sbb
daa
or
push
add
flds
sbb
push
xchg
decl
jmp
jbe
inc
sub
mov
lods
jns
sub
rcl
test
loopne
call
lcall
mov
and
in
pushf
mov
push
push
std
push
dec
cmp
xlat
cli
pop
cld
fidivs
sub
mov
push
je
daa
sub
and
push
push
mov
dec
jb
and
push
dec
mov
mov
call
xchg
in
push
jmp
xor
add
mov
mov
push
fcoms
incl
xchg
jno
stos
adc
add
mov
pushf
mov
rorl
les
add
push
jg
jmp
js
adcb
and
mov
mov
and
daa
mov
decl
dec
out
bound
sbb
xchg
cmp
cld
pop
inc
in
jne
loop
dec
sarb
ljmp
lea
and
inc
xor
xchg
xlat
js
mov
aas
sub
stos
xchg
sbb
call
cli
aam
xchg
cmove
dec
test
jae
xor
jg
pusha
mov
bnd
push
in
add
cmp
add
push
mov
mov
incl
rorl
cld
call
lea
push
aas
jg
jne
inc
push
pusha
cmp
xor
lcall
subl
mov
inc
sbb
mov
popa
or
cmp
jg
add
mov
fs
popa
sarb
sub
xchg
in
push
incl
push
aas
xchg
addl
cli
out
clc
lret
inc
mov
push
adc
lret
imul
test
pop
cmc
out
adc
xchg
xchg
movsl
add
jns
dec
sbb
jecxz
push
add
mov
pushl
fwait
push
push
inc
fadds
stos
movsbl
mov
fs
jno
pop
les
jns
addr16
ret
stc
aad
mov
int3
sar
dec
fcmovnbe
cmc
loop
mov
push
ret
xor
aam
sbb
or
in
into
mov
std
ljmp
push
mov
test
jge
inc
in
movsl
lahf
xor
xchg
pop
cmp
pop
mov
shlb
xchg
cmp
xchg
push
push
fimull
lods
pop
clc
pop
insl
fnstsw
incl
sub
and
cld
hlt
mov
adc
cltd
pushl
mov
mov
nop
mov
or
jns
dec
mov
jl
pop
iret
xchg
popa
xchg
cmp
ud0
incl
push
dec
ja
mov
xor
cwtl
sub
out
push
aad
scas
cli
mov
jmp
mov
push
icebp
mov
nop
pop
cmp
xchg
jle
cmp
pop
insl
addr16
adc
sbb
push
aas
daa
stos
jno
lret
cmc
jb
add
stos
testb
or
cmpsl
lock
lcall
in
adc
jmp
jl
arpl
mov
jg
jg
inc
xchg
out
jne
sahf
xchg
adc
rol
cmpsb
mov
mov
jmp
sti
and
mov
inc
mov
cld
in
call
paddw
push
inc
push
sub
punpckhdq
pop
xor
dec
lret
idivl
call
in
mov
adc
pop
ljmp
decl
imul
push
shlb
incl
nop
movl
sub
xor
adc
cmp
call
stos
pop
pop
in
xchg
fidivs
mov
push
js
mov
sbb
or
decl
xor
fistpll
add
jbe
aam
push
jmp
mov
pop
mov
jg
and
jecxz
cmp
std
ret
ds
out
sub
iret
jbe
loope
xchg
dec
mov
dec
mov
call
xchg
mov
out
mov
inc
pop
dec
hlt
lock
repnz
mov
lods
push
fnstcw
das
jb
in
xor
call
stos
inc
sti
mov
xor
push
les
xchg
filds
push
cld
loop
adc
arpl
xchg
bound
add
jmp
mov
test
ljmp
cld
std
arpl
lock
xchg
mov
lcall
cli
mov
repz
and
mov
jo
mov
aaa
fisubrs
mov
sbb
or
decl
out
inc
divl
xor
push
jp
mov
mov
pop
add
icebp
ljmp
jne
and
mov
rcrb
cmp
push
imul
mov
pop
scas
clc
push
shl
arpl
sub
aam
push
cmp
stos
ret
clc
sub
jne
xchg
mov
or
insl
sub
dec
call
xchg
lret
mov
xor
and
mov
repnz
sti
out
call
je
fsubrl
xor
aam
incl
test
inc
cld
aas
xchg
xor
sub
pop
fs
hlt
xor
test
out
sub
pop
inc
out
sbb
movsb
inc
push
loop
jne
addr16
outsl
jp
mov
fdiv
std
call
jne
aad
fs
push
addr16
daa
jns
add
shrb
push
sub
lods
js
cmpb
xor
sub
jns
leave
mov
add
mov
cld
decl
pop
jg
add
mov
jg
cmp
cli
and
push
rcr
pop
and
ret
outsl
dec
sbb
pop
mov
decl
jle
cmp
add
mov
fnsave
pop
mov
xchg
jp
mov
call
jne
into
subb
mov
dec
cmp
into
mov
mov
push
mov
filds
aad
int
mov
or
or
dec
add
inc
ljmp
cwtl
daa
jecxz
std
scas
fwait
adc
add
xor
xor
sub
shrb
popa
and
add
shrb
mov
mov
push
xchg
push
mov
mov
les
stos
int3
out
aad
xchg
pusha
or
or
incl
fwait
mov
aas
lds
jmp
or
cmp
cld
aad
sarb
enter
mov
fsubp
lods
jns
imul
sub
imull
or
dec
fldcw
push
jnp
or
arpl
fwait
insl
ret
and
cld
cmp
mov
mov
jne
test
add
push
and
push
arpl
leave
and
call
icebp
notb
mov
pop
cmp
push
or
push
cld
inc
aas
fs
flds
pushl
lcall
ds
jecxz
push
cltd
sbb
mov
mov
fadds
fmull
sbb
mov
popa
dec
add
lcall
push
mov
decl
jns
call
cmp
or
mov
cmp
push
push
xchg
fwait
dec
or
fdiv
mov
call
jg
out
mov
mov
andl
jns
push
rcl
std
lea
loop
cltd
add
pop
mov
cli
cmpsb
call
lahf
subl
mov
push
dec
repz
xchg
in
mov
incl
and
pandn
push
sbbb
sarl
in
mov
adc
rorb
jns
andb
fidivl
cs
aas
je
xchg
mov
mov
icebp
xor
jg
dec
aaa
orl
lcall
push
mov
sbb
sti
outsb
inc
nop
std
mov
fiadds
and
push
ficoml
ds
sbb
inc
loop
in
or
or
pushl
mov
test
stc
mov
adc
or
xchg
push
lahf
jmp
push
cmpsb
sub
lcall
mov
gs
ljmp
and
pushf
pop
jl
sbb
xchg
outsb
xchg
xor
jmp
sub
leave
push
orl
repnz
lcall
mov
xchg
push
xchg
loope
cld
xor
push
icebp
mov
sbb
pop
jo
ljmp
xor
cmpsl
cmp
dec
lahf
cmp
ficoml
ljmp
jg
adc
in
clc
adc
repnz
imul
push
mov
jecxz
hlt
call
lea
clc
add
cmpsb
test
rcl
pushl
das
pop
and
enter
ljmp
adc
xchg
jbe
lret
nop
mov
xchg
mov
add
mov
call
pop
cmp
dec
xlat
or
into
leave
jne
push
xor
cmp
mov
and
incl
aad
jbe
xchg
out
sbb
add
idivb
push
sbb
push
jae
mov
jg
mov
dec
jmp
inc
or
inc
cltd
xchg
addl
popf
inc
call
inc
std
fs
call
fs
icebp
xchg
inc
mov
shrb
movsb
ret
mov
and
lahf
push
mov
incl
cld
inc
imul
jge
push
lods
aam
lods
inc
add
dec
insl
call
pushl
add
dec
dec
out
out
dec
xor
pop
loopne
lea
dec
aaa
mov
push
adc
jmp
fsubl
je
ret
push
lock
and
push
sahf
cmpsb
mov
ret
fcompl
lret
test
mov
fdivs
sbb
cmpsb
mov
pop
fcomip
es
xlat
jb
inc
clc
cmc
test
push
repz
inc
jbe
mov
sub
or
lcall
in
jbe
andl
iret
stos
stos
es
xchg
mov
movsb
out
test
jp
add
pop
icebp
lcall
mov
xchg
inc
and
mov
stos
inc
dec
jmp
mov
pushl
jecxz
cmp
push
push
sbb
pop
and
xlat
push
insl
dec
nop
and
and
scas
es
cmp
cmp
lcall
sub
inc
cmc
xorl
call
sbb
ja
decl
test
jge
jns
imulb
push
out
cwtl
fcomip
dec
pop
outsb
outsl
jnp
jmp
mov
adc
outsb
xchg
aam
sub
call
sbb
rcrb
ja
out
out
nop
and
push
pop
test
sbb
mov
sbb
std
incl
stc
scas
push
inc
adc
sahf
cmp
stos
add
aaa
xchg
lcall
push
scas
mov
add
lret
push
and
mov
jns
push
aas
lcall
ljmp
or
or
sub
inc
pop
cmp
push
incl
cmp
dec
mov
sub
mov
out
sahf
mov
xchg
and
mov
dec
lods
mov
jg
lcall
mov
mov
cmc
push
fidivrl
sbb
pop
out
adc
cli
icebp
cmc
push
dec
dec
xor
btr
inc
dec
adcb
mov
and
or
sbb
or
out
push
xchg
or
test
hlt
aad
cmp
imul
pop
mov
fildll
inc
int
lock
inc
xchg
dec
jmp
jl
arpl
add
loop
ja
fistps
outsb
pushf
push
mov
jecxz
addr16
ljmp
mov
pop
clc
jg
popf
dec
cli
out
fsubp
enter
dec
inc
aad
cmp
jmp
fldt
push
cwtl
aam
jne
jp
adc
or
adc
rclb
lcall
xor
xorl
dec
pop
into
dec
adc
pop
insb
dec
add
jmp
arpl
call
loopne
cmp
jno
pop
imul
out
mov
rol
xor
out
clc
sahf
add
dec
sub
sub
jnp
aad
dec
add
cmc
dec
out
ljmp
dec
imul
jmp
mov
ret
in
and
mov
daa
cmpsb
dec
mov
push
xchg
decl
and
mov
arpl
xor
loop
inc
cmp
repz
or
inc
cmp
mov
jg
jecxz
lea
nop
out
aad
fdivr
mov
xor
push
les
xor
and
add
mov
das
or
int
lcall
loopne
and
jg
ds
adc
ds
mov
lcall
stc
int3
mov
or
lret
xchg
xlat
lods
jp
jg
cmp
push
push
add
pushl
mov
sbb
mov
sahf
aad
ds
xor
jp
sbb
loope
int
xor
mov
gs
or
mov
lahf
push
push
inc
testl
mull
test
mov
loop
push
pop
fistps
test
and
negb
xor
sbb
call
repnz
les
cld
subb
aaa
js
jg
mov
xor
ja
sahf
pushf
and
popa
mov
jo
call
fs
insl
enter
sbb
insl
shlb
lods
pop
nop
scas
stc
and
jmp
ljmp
fldt
insl
out
jno
or
jecxz
enter
mov
std
inc
je
xor
or
pop
test
mov
cmp
ficomps
in
jae
orl
jns
sbb
test
push
cmpsb
clc
repnz
lcall
fildll
into
and
out
insb
cmp
insl
push
pop
icebp
rcr
add
scas
inc
inc
sar
jp
sar
ljmp
or
lret
cld
mov
cmpsb
add
outsl
imull
inc
pop
lcall
push
push
and
jge
mov
jge
sbb
dec
scas
dec
insb
xor
lret
dec
push
xchg
push
sub
push
call
mov
jl
mov
int3
test
cmp
aam
je
jg
inc
int3
add
out
xor
push
cmp
jne,pn
xor
call
adc
push
mov
pop
and
or
sub
shll
out
adc
decl
loop
insl
movsb
pop
pop
adc
and
jl
xor
popa
call
test
adc
ljmp
jle
idiv
in
mov
fwait
lods
sbbl
loopne
mov
cmc
cmp
xchg
inc
xchg
cmpsb
inc
jb
std
bound
rol
fistl
mov
xchg
mov
mov
mov
loope
cli
pushl
dec
mov
xchg
test
cwtl
cmp
xchg
dec
movb
push
mov
jbe
mov
nop
pop
sub
adc
ljmp
ss
push
sbb
or
into
idiv
lds
adc
ret
jg
mov
inc
pop
mov
insl
sbbb
test
aad
icebp
sahf
insb
inc
lcall
add
insl
sbb
and
mov
addr16
inc
fcom
jno
mov
push
push
jecxz
cmp
stos
sbb
pop
cwtl
ss
adc
ret
cld
sub
ss
adc
call
jns
scas
cmpsl
dec
mov
sub
dec
dec
or
fcompl
ret
mov
call
jl
in
mov
sub
inc
push
xor
mov
mov
cmc
fiaddl
call
loopne
jae
dec
ss
int
lock
popf
add
pop
dec
lahf
cmp
jg
cmpsb
je
sti
xor
ficoms
sbb
bound
ret
repnz
xor
jno
mov
clc
jns
jns
jns
xchg
cmp
mov
pminsw
outsl
jecxz
ljmp
rorb
js
mov
insl
mov
outsb
into
mov
outsb
in
adc
jg
je
movsb
xlat
cmpsl
pop
movsl
push
mov
mov
decl
aam
dec
pop
je
lret
jmp
mov
das
inc
pop
sahf
pop
mov
jg
inc
xchg
xor
sbb
daa
orl
lcall
or
enter
fdivrp
ljmp
ds
cmp
pop
fisubs
cmp
jp
add
cmp
sti
fists
in
or
inc
jne
fcoml
js
in
fwait
jg
popfw
or
mov
clc
call
jns
into
popf
inc
lock
xchg
negb
js
push
movsl
jl
std
inc
leave
nop
sarl
fmull
hlt
cmp
dec
cmp
incl
lods
insl
lahf
inc
out
mov
movsl
pop
mov
inc
repz
int
cmc
fcomp
mov
push
mov
xlat
xor
enter
or
xchg
pop
popf
roll
arpl
sbbb
pushl
pop
push
dec
decl
in
sbb
and
push
mov
addb
movsl
fwait
pop
adc
call
jo
aaa
mov
mov
adc
mov
repnz
push
jle
add
shlb
pop
xor
xchg
cli
add
js
cmp
xchg
push
leave
stc
out
push
incb
jl
scas
jnp
sti
testb
cmpsb
dec
fcoms
out
add
xor
jge
sub
push
loop
cmp
bound
loop
fisubrl
pushw
mull
pop
fcomps
ljmp
xor
mov
icebp
jb
xor
xchg
xchg
sub
push
in
mov
stos
jns
lods
cld
mov
lcall
inc
lds
jge
jge
xchg
cli
fsubr
loope
jae
movsb
cmp
cli
or
ljmp
jae
pop
mov
aas
mov
in
adc
inc
jb
xor
rcl
iret
push
lahf
les
popf
je
pushl
inc
scas
sbb
int3
ficoml
das
scas
lret
lret
cli
insb
out
sbb
push
decl
fldl
adc
aas
or
arpl
test
add
cmpsl
enter
adc
sahf
mov
cli
mov
ds
es
fldpi
mov
fsts
fiadds
sahf
push
mov
decl
jl,pn
cmp
dec
lds
and
test
inc
xchg
cmp
jbe
orl
movsb
sub
xchg
lahf
stc
lahf
mov
mov
int
add
lea
rolb
lcall
xorb
icebp
ljmp
repz
and
outsl
dec
push
pop
jbe
dec
jb
testb
into
xchg
jnp
push
inc
scas
dec
sbb
mov
xchg
fistps
lahf
mov
push
aam
pop
imul
out
jge
and
pushf
lods
js
jle
sub
jmp
pop
xor
mov
popa
imul
ds
out
cli
sar
mov
into
jp
dec
jne
or
cmp
js
fidivs
sub
and
fwait
insl
mov
lret
mov
mov
mov
clc
jp
decl
push
stos
outsb
pop
sbb
and
mov
push
rolb
inc
jg
ret
lcall
imul
sbb
lds
pop
mov
and
decl
add
push
hlt
xor
jg
sub
jmp
idivl
and
call
sub
sub
cmp
pop
lods
push
test
jg
adc
mov
scas
adc
dec
mov
jle
out
xor
fs
stos
pop
cld
rol
pop
sbb
not
loopne
mov
jae
pushf
outsb
xchg
xchg
decl
and
mov
pop
adc
or
jns,pn
lock
pop
add
shll
cmp
decl
push
jb
lcall
sub
mov
and
js
shll
cli
inc
popa
shrl
pushl
in
or
cmc
dec
ret
fs
call
jg
ffree
and
push
jo
or
and
pop
xor
dec
push
cmp
jbe
dec
xchg
fsubr
repnz
pop
stos
stc
add
in
pop
arpl
adc
mov
pushl
mov
adc
sub
adc
adc
pop
sbb
decl
mov
inc
and
adc
mov
sarb
xchg
loope
jnp
push
jg
icebp
cmp
int
mov
and
xor
and
loop
mov
mov
and
ja
and
cmp
inc
mov
jl
inc
cmpsl
movsl
imul
loop
mov
and
add
pop
cmpb
adc
xor
cmp
pusha
daa
jo
lcall
sti
inc
cltd
mov
mov
fcoml
cmp
cs
sbb
lcall
leave
sub
jb
mov
mov
vpsubw
push
movsl
test
push
mov
jg
lahf
xorb
das
or
push
testl
xlat
lods
andl
dec
mov
out
std
inc
xlat
dec
movsb
loopne
sub
jmp
sbb
sub
cmpsl
jmp
dec
and
test
fisubs
mov
add
jbe
jno
hlt
clc
sub
jmp
fwait
push
sbb
pop
inc
rol
cld
je
xchg
leave
xchg
mov
push
xor
ljmp
or
push
inc
cmp
mov
mov
xchg
enter
push
aad
aad
sarl
iret
aad
jns
add
dec
mov
das
insb
add
cmc
pop
adcl
jae
pop
lock
cmc
daa
inc
and
arpl
mov
popa
scas
fabs
inc
dec
ds
testb
pusha
xchg
xchg
lahf
xchg
push
ret
or
jp
mov
pushl
mov
jge
cs
pop
call
insl
nopl
pushl
loop
add
in
and
mov
aam
mov
sbb
fwait
test
mov
lcall
lret
lahf
imul
and
adc
xor
in
gs
lcall
dec
std
and
inc
sbb
xchg
lcall
cmp
push
repnz
xchg
stos
add
decl
call
sti
xchg
clc
rcrb
addr16
fwait
mov
jg
int3
sub
or
hlt
mov
push
adc
mov
xor
xchg
xchg
repnz
lods
fimuls
mov
ljmp
add
or
lods
xchg
xor
pop
and
pop
leave
cmp
cli
ja
pushf
xorl
fcomip
je
add
outsb
out
mov
addl
and
in
shl
xchg
pop
inc
mov
adc
xchg
faddl
pop
push
test
add
fildll
mov
xorb
or
pusha
push
sti
jne
cmp
idivl
inc
mov
push
into
or
sub
das
dec
mov
lcall
mov
aam
pop
dec
shl
pushf
push
stos
xchg
adcl
cmpsb
pop
in
mov
out
cli
xor
mov
testb
movsl
pop
sub
rcrb
or
push
fwait
arpl
sar
lcall
nop
dec
fimuls
fs
pop
mov
pop
mov
clc
lcall
inc
out
pop
enter
add
popa
fdivrl
pop
les
fidivl
xchg
aaa
adc
into
dec
decb
cltd
out
jno
int3
insl
out
out
loop
xchg
lcall
mov
fmulp
push
lea
push
js
push
cwtl
sub
push
ljmp
clc
lcall
leave
pushf
test
sahf
arpl
xor
pop
jne
lret
lret
call
addb
mov
cmp
lods
hlt
inc
push
cmp
fldcw
cmc
mov
cmp
fimull
xchg
cmp
sbb
aad
ljmp
adc
leave
xchg
sub
add
push
enterw
adc
decl
jb
or
xor
and
mov
jl
testb
xchg
insb
cs
push
jb
mov
or
lcall
mov
fmul
repnz
sub
lret
adc
mov
shll
decl
hlt
inc
adc
aam
jecxz
xchg
les
inc
ret
aaa
xchg
shll
xchg
je
popa
cld
lcall
rorl
jg
sub
mov
push
cmp
stos
xchg
lcall
out
sahf
adc
mov
mov
rclw
enter
cmc
mov
push
push
jge
adc
xchg
mov
call
and
imul
enter
sub
mov
xchg
xchg
jmp
jg
test
mov
daa
xchg
int
jmp
push
mov
movsb
mov
dec
notl
cmc
popa
sbb
pushl
xchg
hlt
add
fwait
in
mov
push
mov
push
jg
mov
lods
sbb
xor
pop
cltd
sbb
push
sahf
out
xchg
test
iret
inc
pop
pop
pushf
pushf
adc
shrb
lcall
or
and
cmp
or
clc
add
xchg
jle
cmp
call
cltd
push
das
mov
push
or
mov
adc
xor
push
jl
ljmp
push
jle
dec
mov
ss
es
sar
insb
jns
or
cmp
inc
repz
call
fldenv
outsl
pop
bound
pushf
fsubrs
jge
ror
jmp
andl
shll
dec
sub
iret
div
orb
dec
out
jge
rol
scas
pop
rorl
stc
out
xchg
ss
push
add
xchg
sbb
pushl
push
andb
dec
xchg
push
int3
pop
ljmp
sarl
mov
cmp
lods
mov
push
jge
pop
loopne
data16
aam
add
ret
fsubrl
in
hlt
es
lcall
in
stos
iret
mov
fnstenv
data16
push
adc
xchg
data16
xchg
pop
aas
js
xchg
cmp
pop
scas
and
jmp
ds
loope
lret
dec
fldt
aam
js
std
push
out
adc
mov
cltd
pop
cld
push
push
iret
mov
xchg
dec
cmpsl
add
jp
jae
and
mov
xlat
decl
sub
fst
out
and
cmpl
jg
mov
inc
jecxz
ja
mov
hlt
sub
jp
into
cld
sbb
scas
xlat
sub
lcall
int
dec
push
les
out
dec
sub
movsb
xchg
mov
std
incl
adc
mov
fs
jmp
or
mov
pushf
scas
into
xlat
fs
jg
mov
pop
mov
insb
fs
push
lcall
shr
pop
sbb
mov
jno
mov
inc
xchg
adc
jb
sbb
ja
or
cmp
xor
cmp
aad
icebp
lea
hlt
cmp
mov
push
push
outsw
daa
ficoms
pop
inc
lret
cmc
cli
pop
and
jo
sub
test
xor
in
cmp
sbb
lcall
arpl
pop
jg
pop
test
pop
sub
dec
push
and
movb
cld
push
push
sar
call
or
jbe
mov
scas
mov
push
movsl
and
xchg
fldl
push
and
sti
loope
and
pop
ret
out
pop
movsl
das
inc
wrmsr
and
ljmp
rolb
std
dec
xlat
mov
pop
jge
pop
imul
pop
imul
lahf
repz
mov
cs
lea
fwait
into
test
loopne
jo
testb
pop
std
incl
sahf
js
pop
push
aaa
dec
jnp
sti
or
mov
mov
mov
shlb
stos
popa
cld
decl
mov
ret
mov
ret
sahf
repz
les
outsl
and
out
shl
bound
inc
test
mov
mov
test
inc
xor
mov
sbb
sub
pop
das
pop
rolb
push
lock
jmp
and
or
stos
cmpsb
shl
mov
in
gs
mov
lods
push
out
test
decl
pusha
xor
sub
jnp
int
and
repnz
fcmovnb
pop
sub
add
jmp
and
push
loopne
or
ficompl
orl
dec
aaa
and
cmpsl
imul
mov
lods
dec
mov
mov
in
mov
mov
add
repz
out
push
arpl
sbb
lcall
test
add
sbb
outsb
aad
cmp
lods
mov
sti
mov
and
fsubp
dec
pop
add
cmpsb
jno
stos
push
test
push
mov
mov
popf
inc
daa
push
cmp
dec
movsl
in
add
push
into
dec
xchg
mov
loop
push
mov
call
fisttpl
xchg
add
jae
insl
mov
aad
or
xor
aad
in
xchg
mov
cs
pusha
ret
shlb
ss
add
dec
mov
jmp
pmulhuw
or
add
add
sar
and
call
add
cmp
jb
jge
mov
push
push
jno
test
mov
lods
jecxz
jg
test
int3
and
es
adc
stos
ljmp
pusha
adc
cmp
cmp
insl
in
jg
mov
sbb
pop
out
add
jnp
and
mov
les
fdiv
out
cld
mov
or
mov
push
sub
repnz
incl
in
pusha
fadd
aas
or
testl
andl
incl
out
leave
cli
test
sbb
sahf
mov
fcoml
cltd
sahf
mov
push
divl
lcall
divb
call
pop
cmp
add
mov
and
incl
hlt
fimuls
xchg
movsl
dec
adc
pop
icebp
daa
lcall
ss
jmp
xor
adc
loope
push
test
jne
ret
sbb
add
leave
dec
lcall
push
ds
stos
aad
jl
sub
xchg
mov
ljmp
mov
jle
test
add
cmp
xchg
mov
push
sbb
sub
addb
inc
dec
in
or
call
xor
adc
decb
pop
arpl
add
lcall
shrl
xchg
int
inc
add
sub
decl
inc
pop
sub
adc
out
xchg
aad
cmpsb
adc
xor
jne
mov
lcall
call
and
jne
rorb
ret
xchg
loope
lea
cmp
dec
outsb
mov
inc
cmp
sbb
cmc
arpl
ds
pop
cmpsl
ja
mov
pushl
test
sbb
iret
or
cs
and
incl
push
ss
pop
mov
xchg
inc
or
mov
jmp
xchg
stc
movsb
and
add
lret
cmp
mov
pop
dec
arpl
xchg
hlt
fcoms
cmp
mov
flds
mov
addr16
fnstenv
pop
push
lods
jl
outsl
andl
faddl
inc
jb
mov
adc
dec
mov
push
sbbl
incl
pop
mov
fs
lret
insl
shll
inc
bound
sarl
lea
cmpsl
jge
sub
loope
fdivrs
decl
mov
imul
in
mov
jns
and
inc
mov
leave
and
mov
fidivs
das
jge
call
adc
sub
mov
fsts
dec
andb
les
fwait
inc
or
jl
push
adcb
icebp
lea
pop
enter
scas
cmpsb
push
add
sub
call
test
push
cmpsl
mov
ret
jmp
and
ss
push
mov
jns
xchg
insb
xchg
xchg
pop
xlat
add
jmp
push
out
pop
xchg
call
dec
lret
divl
imul
fstl
jl
pop
decl
pop
push
jne
test
push
jo
scas
negb
cmpb
pushl
pop
testl
dec
mov
mov
mov
dec
and
dec
cld
mov
call
das
mov
mov
hlt
push
mov
insl
insb
mov
mov
jl
push
add
lcall
jns
adc
enter
stos
mov
jp
pop
lahf
xor
push
fisttps
mov
dec
clc
jb
int
sub
and
dec
or
idivl
mov
push
or
lret
call
gs
ds
pop
jb
xchg
pop
es
mov
out
icebp
sub
jb
in
hlt
jecxz
decl
scas
push
mov
push
mov
adc
pavgw
and
mov
lret
xchg
loop
leave
ljmp
xor
inc
lock
movsb
mov
inc
lcall
fucom
mov
dec
jmp
jbe
jb
inc
cwtl
sub
jle
call
xor
scas
mov
inc
or
pop
and
lods
push
sub
mov
cmp
decl
sub
sub
ret
sti
cmc
in
lock
movsl
fwait
xchg
roll
mov
pop
jns
mov
push
sahf
or
scas
loop
push
cltd
push
inc
and
cmp
mov
test
pop
cmp
cmp
repz
jle
orl
decl
negl
adcl
das
add
push
fstpl
js,pn
movsl
push
push
out
sub
push
mov
jmp
lcall
pop
mov
leave
out
inc
jb
sete
jle
cmp
push
ds
je
ds
mov
mov
adc
jne
push
adc
loop
push
dec
jbe
imul
inc
xor
xchg
mov
jne
dec
xchg
jmp
mov
mov
cmp
andb
pop
mov
cmpsb
sar
inc
xchg
decl
mov
cmc
dec
dec
push
xchg
int3
add
lds
call
shlb
mov
push
pop
jb
sub
jmp
fs
xchg
loop
inc
inc
aad
stc
sti
mov
repnz
sbb
or
lret
jge
insl
jg
mov
int
dec
mov
jns
addr16
mov
push
jns
pushf
jmp
mov
xchg
inc
mov
pop
out
jl
scas
mov
clc
add
push
shll
pushl
cli
lods
xchg
nop
sbb
adc
cltd
add
call
inc
mov
insb
lret
mov
decl
xchg
inc
add
test
or
loopne
push
std
ljmp
push
std
decl
and
ret
cs
xor
pop
cwtl
in
jg
pushf
or
push
sbb
sbbl
inc
jmp
stos
push
sar
jmp
cmpsl
xor
inc
adc
push
int
cmp
pop
imul
fstpl
fisttpll
cmp
scas
clc
lcall
lcall
sbb
add
dec
mov
cwtl
adc
fnstsw
jmp
in
aas
pop
mov
es
mov
jnp
push
and
jmp
dec
inc
jmp
sbb
or
cmc
adc
push
fsin
es
jmp
shl
cs
les
fwait
ss
rolb
icebp
mov
aaa
loope
mov
lcall
lret
imulb
push
cwtl
and
adc
xor
loopne
out
imul
sbb
int
jnp
xor
xchg
inc
fidivs
dec
and
enter
aas
push
rcll
inc
jmp
daa
mov
outsl
mov
in
xor
dec
xor
mov
push
sar
call
idivb
lock
adc
enter
and
leave
lea
or
adc
loopne
mov
jg
adc
movsl
push
add
stos
test
call
jg
sbb
ficompl
test
inc
outsb
fisubrs
cmp
outsb
cmp
cmp
ljmp
sbb
mov
inc
xchg
xorb
inc
lods
daa
lcall
jno
or
push
jg
decl
sub
cmp
repnz
push
xor
shrl
js
cld
pop
cmp
pop
arpl
xor
clc
xor
fildll
outsl
xchg
sbb
incl
inc
stos
dec
lock
mov
push
jecxz
xor
jle
inc
xorl
mov
jge
pop
lret
cmp
test
sahf
xchg
movsb
lods
inc
xor
jmp
xchg
in
sbb
adc
mov
std
xor
mov
mov
mov
into
sbb
in
loope
int3
sub
sbbl
mov
jnp
inc
mov
decl
mov
lock
dec
mov
inc
out
test
mov
push
jmp
out
mov
jge
push
adc
or
test
clc
inc
xchg
outsb
out
pop
xchg
mov
int3
sub
mov
push
pop
hlt
sti
push
enter
mov
arpl
pusha
enter
jl
pop
inc
out
jecxz
xor
xchg
aas
dec
xor
or
rcrl
decl
test
test
sub
leave
or
in
jno
xor
ljmp
or
fwait
ds
stos
pop
mov
adc
das
out
arpl
aaa
pop
dec
mov
int3
jns
idiv
cli
add
pop
mov
sub
push
rol
sbb
and
mov
xchg
shll
adc
inc
in
scas
int
int
test
or
jmp
fdivrs
daa
ret
jg
lahf
popa
test
sti
fadds
cli
stos
sub
fcmovne
dec
fcmove
dec
mov
xor
cltd
push
es
nop
push
shll
ja
dec
popf
lret
adc
cmp
loope
pop
inc
jmp
inc
add
iret
fmul
or
pop
sub
ljmp
pop
popf
cli
decl
xor
fwait
sahf
sbb
sub
data16
cwtl
cs
push
test
mov
les
jg
in
cmp
por
stos
mov
sub
add
lcall
push
adc
cmpsl
inc
stos
cmp
pop
mov
je
lcall
test
cmp
sub
imul
adc
scas
jbe
in
es
call
xchg
mov
sahf
dec
std
cltd
mov
pop
add
out
daa
ljmp
jl
jno
adc
jo
mov
push
stc
cmp
adc
dec
fidivl
xchg
out
xor
paddb
incl
insl
clc
push
cltd
mov
divl
les
xor
mov
incl
jle
mov
pop
xlat
addr16
les
repz
pop
mov
xchg
fwait
call
mov
dec
lcall
or
int3
cmp
inc
rcl
out
cli
ljmp
push
mov
mov
cld
xor
and
cltd
addr16
pushl
repz
adc
xchg
adc
test
sub
mov
jne
mov
decl
ds
and
mov
pop
es
adc
sub
mov
push
sbb
lcall
mov
add
test
adc
lcall
add
mov
stc
inc
test
call
fs
push
cmpl
inc
xor
in
or
sbb
popa
int3
cli
lods
lods
ds
jp
mov
jecxz
sub
cld
call
mov
scas
sub
addr16
shl
popa
pop
loopne
inc
aam
pushf
push
push
je
xchg
and
pop
loopne
rolb
sub
sbb
fstl
sub
lret
sub
ljmp
jecxz
shrb
aas
adc
lock
je
lods
or
pushl
pushf
imul
icebp
push
sbb
mov
sbb
lcall
outsl
in
ret
hlt
fnsave
xchg
cmp
push
sbbl
ljmp
lcall
inc
jae
pop
push
ret
stc
cld
ja
push
lahf
cwtl
inc
leave
negl
sub
mov
pop
out
jo
push
mov
enter
or
lahf
pop
in
std
call
lcall
outsl
dec
fisttpl
xchg
xchg
icebp
mov
test
cli
cmp
add
js
popf
xchg
lcall
jae
lahf
and
mov
jge
cmpb
testb
rorb
ficoml
sub
lods
jb
das
sub
or
ljmp
mov
xor
pop
decl
push
jnp
lock
cmp
xchg
scas
add
sar
scas
imul
std
decl
lock
mov
aas
incl
xor
imul
fldpi
call
aam
pop
dec
cmpsb
push
insb
loope
out
lods
push
xor
or
lcall
leave
or
cs
sub
cmpsb
sub
scas
lret
xchg
sub
call
ss
inc
cmp
hlt
movsl
jns
inc
nop
xor
jno
push
addr16
ret
stos
mov
xor
pushl
pop
push
daa
jmp
jne
popf
enter
inc
jb
cld
cs
jo
jb
lds
leave
jb
pop
push
leave
mov
cwtl
daa
sbb
dec
add
lret
sbb
les
jns
cld
scas
and
in
push
ret
repz
ljmp
loopne
push
jne
pop
imul
mov
lods
push
out
fstl
sbb
push
test
repz
ud0
ljmp
mov
out
xchg
cmp
cld
jnp
and
xor
in
or
decl
sub
push
sbb
push
aas
shrb
adc
xlat
sub
jecxz
inc
test
dec
insl
les
jecxz
cwtl
movsl
push
test
sbb
outsl
cmp
ds
mov
sbb
cld
mov
jns
add
arpl
movsl
rcrb
inc
fcompl
sbb
push
sub
sbb
inc
jns
push
leavew
ljmp
mov
inc
xlat
jecxz
rolb
dec
std
sbb
jg
inc
out
test
or
lea
cli
or
arpl
adcb
shlb
hlt
addb
ja
int3
mov
mov
aaa
mov
lret
scas
les
mov
mov
pop
fists
out
and
cmp
jbe,pt
mov
add
push
pop
call
and
and
repz
popf
jge
enter
ret
pusha
dec
mov
dec
stos
cmp
jmp
decb
add
scas
pop
xor
mov
push
pop
mov
sbb
jg
test
jbe
insl
fldl
pop
mov
push
sarl
mov
cmpsl
insl
mov
aad
mov
mov
push
fcoml
adc
jnp
fsubr
test
lcall
xlat
dec
scas
or
push
std
pushf
ffree
bound
mov
call
std
sub
push
push
adc
push
std
pop
adcb
clc
cmc
or
loope
lret
popa
inc
shl
xor
or
jmp
xchg
addr16
pushf
repnz
xchg
add
adc
mov
hlt
xchg
lcall
repnz
ljmp
repnz
add
ret
and
add
cmp
lret
inc
mov
cmp
sub
lcall
mov
xchg
add
dec
pop
mov
push
ljmp
leave
gs
filds
lods
push
imul
jns
add
adc
fidivrs
decl
jg
mov
jl
mov
cmp
das
lcall
lds
hlt
jg
add
repnz
inc
sahf
ret
lock
dec
pop
movsl
xchg
sahf
mov
lcall
shl
mov
negl
test
lods
mulb
or
push
repz
in
pop
xorl
call
movsb
mov
jae
aam
stc
sahf
push
xchg
dec
jecxz
xchg
and
jo
clc
test
aam
mov
cmp
mov
pop
jecxz
sbb
inc
repz
outsl
test
or
mov
int
out
fsubl
jns
cld
sub
dec
xchg
mov
std
addr16
fs
pop
fisttpl
popa
xchg
fdivrl
or
pop
sbb
cmp
mov
sahf
jmp
pusha
cmpsb
movsl
out
cmc
push
push
push
mov
sti
xchg
mov
stos
adc
es
rorl
lahf
mov
jecxz
div
decl
or
push
or
es
mov
addl
xchg
mov
lcall
test
mov
push
clc
cmp
mov
jmp
pop
fucomi
movsl
pop
mov
push
push
imul
dec
imul
cmc
out
js
jae
les
and
jmp
cmc
xchg
mov
stos
js
cmc
fstpl
decl
or
push
mov
test
mov
push
pop
sbb
mov
push
sub
pop
decl
loop
aaa
cld
cld
popa
xor
cwtl
enter
fdivr
lret
imul
lcall
cmpsb
outsl
jmp
in
mov
push
test
and
dec
pushf
push
jmp
pushl
cmp
mov
in
shlb
lret
add
jl
mov
pushl
push
lds
push
stos
mov
popw
popa
into
xchg
jnp
and
ret
sub
or
popa
xchg
and
cmp
mov
pop
or
test
push
and
mov
repnz
jg
insb
imulb
push
add
ffreep
mov
cld
push
dec
pushl
testl
cmp
jbe
or
sti
stos
iret
sub
jb
inc
xchg
mov
jns
lahf
xchg
test
jbe
inc
outsl
insb
or
decl
sbb
mov
je
cmpsb
and
out
cltd
fsts
lret
mov
push
inc
lcall
mulb
push
push
incb
sahf
out
fdivl
mov
add
inc
adc
adc
scas
das
sbb
xchg
pop
pop
mov
jl
xchg
loop
aas
cmpsb
xlat
mov
push
cmp
mov
xlat
dec
jmp
mov
outsb
mov
inc
or
ljmp
sub
cmp
xchg
scas
inc
lret
repnz
cli
fisubrl
jg
mov
push
jns
aaa
popl
gs
pusha
dec
pop
mov
clc
fs
xchg
adc
out
mov
call
je,pt
xlat
sahf
rorl
loope
fs
cmc
repz
jg
mov
xchg
imul
inc
sub
push
mov
jmp
jg
mov
scas
or
nop
sub
mov
jg
xor
call
in
aas
pop
dec
mov
inc
jno
xchg
jmp
push
rol
jmp
and
sahf
or
aam
cs
mov
imul
dec
jb
loope
jbe
sar
mov
mov
cmp
inc
in
dec
das
dec
dec
decl
ret
dec
or
rcr
scas
int3
sbb
loop
sub
or
call
and
push
test
subb
insl
fmull
mov
ja
leave
jmp
jl
insl
addr16
scas
mov
pop
sbb
fidivrl
add
mov
jo
insb
xchg
insb
call
in
and
pop
xlat
mov
xor
dec
add
outsl
aas
jbe
push
in
ljmp
sbb
xchg
xor
xchg
pop
cmc
sub
inc
mov
lods
xor
ret
cli
jne
outsl
xlat
or
and
pop
rorl
fwait
xor
xchg
stc
fsubl
mov
popa
sub
jbe
xchg
jmp
jns
bound
or
mov
xchg
in
pop
mov
sub
dec
ror
mov
mov
fisttps
rclb
add
ret
xchg
mov
mov
or
push
xchg
pop
loopne
mov
xor
inc
xchg
aam
sub
imul
pushl
cld
xor
or
repnz
lcall
outsb
cmp
mov
std
lcall
lcall
sbb
cmpsb
push
nop
inc
xchg
mov
xlat
cmpsl
sub
lcall
shlb
mov
mov
sbb
mov
fistpll
jb
int3
cwtl
ljmp
sbb
push
or
adc
aam
mov
in
aas
outsb
repnz
inc
sub
out
clc
jmp
cmp
scas
xchg
fadd
jmp
push
add
jg
jmp
pop
stos
inc
or
inc
repnz
mull
faddp
aad
cmp
xchg
sub
mov
lea
and
push
xchg
cmpsb
pop
insb
jno
sbb
mov
or
cmc
push
jmp
push
xor
sti
dec
xor
pop
cmc
cltd
negl
cmpsb
fadd
mov
jg
incl
jp
or
mov
fldl
sbb
and
movsl
cmp
cmpsb
mov
divl
mov
sbb
jge
and
lcall
ret
nop
mov
add
fistl
mov
push
popf
cmp
lahf
decl
xor
cmc
or
xchg
ss
jmp
call
push
cltd
xchg
fdivr
or
jnp
cmp
mov
pop
pop
test
sbb
loope
push
cmp
add
in
outsb
dec
dec
test
pop
inc
push
cltd
mov
dec
push
add
mov
loopne
inc
in
clc
das
lcall
mov
inc
pusha
jae
adc
cld
jmp
fisubrs
out
clc
dec
aam
das
out
shrb
fldl
data16
xchg
ficoml
mov
cmp
inc
stc
pop
int3
dec
jo
lea
fistpl
sar
clc
push
pusha
jge
sub
js
mov
or
xor
js
je
incl
cld
adc
xor
movsl
mov
cmp
push
repnz
add
loope
ljmp
sbb
sub
mov
jmp
out
adc
in
fcoml
aaa
cld
ljmp
adc
xor
xchg
ret
xchg
adc
fbstp
dec
adc
ud0
decl
dec
mov
cmp
imul
push
push
mov
aam
pop
dec
mull
lock
pop
call
xor
mov
mov
cmp
lcall
icebp
mov
fcomip
lret
es
lds
icebp
mov
pop
call
pop
jo
daa
int
in
mov
lods
sub
cmp
scas
cmc
lcall
je
fidivrs
lods
pushl
nop
jbe
jb
mov
push
xchg
or
andb
mov
push
stc
loopne
ss
pushl
sbb
lahf
mov
jmp
dec
xchg
hlt
cmp
pop
mov
push
pop
jne
rcrb
cltd
sub
call
call
movsb
add
jle
ljmp
hlt
mov
decl
mov
js
push
es
fstpl
popa
int3
or
or
mov
movhps
or
fidivrs
pusha
int3
mov
push
jb
adc
rcrb
xor
out
incl
sub
hlt
loop
push
mov
rolb
mov
les
jmp
pop
mov
repnz
or
out
out
push
leave
dec
mov
sbb
adc
out
cli
pushl
dec
in
rcr
push
jp
or
mov
cmpsb
sbb
xchg
sub
add
shlb
ds
push
mov
mov
sbb
scas
cli
lcall
jno
mov
xchg
dec
insb
js
ljmp
ss
push
mov
leave
repnz
inc
lds
pop
outsb
mov
mov
in
es
jmp
movsl
es
fldenv
ror
push
xor
lock
in
cmc
xchg
inc
cmp
pushf
push
imul
xor
sarl
je
dec
das
rol
add
xor
pop
jl
push
xor
aas
and
mov
roll
pop
lock
int
lods
orps
iret
pop
in
popf
inc
mov
loop
mov
decl
jb
cmp
sbb
data16
mov
ret
imul
pop
cmp
scas
pop
or
bound
in
mov
movsb
add
jns
ljmp
pop
daa
mov
xor
pop
repnz
call
arpl
jns
fwait
shrl
in
mov
dec
stos
daa
jae
mov
push
in
push
faddl
sbb
inc
pop
icebp
sbb
inc
push
aad
into
fcoms
sub
dec
pop
ja
cltd
incl
cmp
pushf
test
sbb
incl
fimuls
or
xchg
hlt
mov
inc
int
and
sbb
and
jne
jbe
cmp
jg
mov
add
iret
in
inc
orl
lcall
cmp
push
mov
loop
das
sbb
fs
icebp
jp
jbe
lret
mov
mov
xor
daa
daa
jno
in
or
outsl
mov
xlat
cmpsl
ljmp
lcall
mov
aaa
push
mov
call
dec
xor
jmp
mov
mov
mov
and
lcall
arpl
ret
cli
hlt
pop
cmp
sub
lcall
dec
mov
cli
lret
dec
psllw
add
sbb
adc
jg
mov
and
jp
test
call
outsl
sub
mov
pop
les
push
adc
xchg
mov
adc
push
push
cmp
adc
xor
div
lock
into
in
ja
leave
inc
popa
dec
xor
mov
les
xchg
ret
add
clc
lcall
in
and
sbb
rol
push
outsl
scas
and
mov
cwtl
sar
xchg
adc
pop
and
shl
int3
addr16
sbb
enter
inc
xchg
int3
scas
lahf
mov
lds
xchg
mov
dec
repnz
test
inc
and
call
sbb
jge
clc
loop
test
stos
xchg
shr
stos
cmp
ret
in
outsl
test
insb
cmc
jg
icebp
cs
pushl
pop
aam
cmp
add
cmc
daa
mov
mov
cmpsl
jae
xor
fsubrl
xchg
sub
movl
fisttpl
lds
and
std
cmp
sub
jmp
push
sbb
pop
push
shll
jp
imull
inc
leave
cltd
inc
enter
push
cmc
dec
mov
adc
outsb
subb
add
inc
daa
mov
roll
ljmp
mov
sarl
loopne
dec
sahf
out
out
sbb
popa
in
cmp
push
aas
mov
xlat
fcomps
or
sub
arpl
sub
dec
sbb
ljmp
dec
daa
cmc
push
pop
mov
inc
addr16
sbb
jae
loopne
mov
push
push
inc
mov
dec
icebp
aam
push
jnp
test
cmp
xor
add
jmp
je
mov
adcb
inc
push
push
call
jnp
adc
addl
xchg
add
fsts
pop
push
push
mov
je
or
lret
push
jns
incl
daa
int
jnp
sbb
arpl
xchg
ficompl
mov
sub
incl
adc
cltd
mov
pop
rclb
cmp
addr16
lock
sbb
add
sbb
mov
addb
das
mov
das
cli
decl
and
fildl
ret
inc
mov
call
and
mov
xor
adc
pop
adcl
mov
mov
out
ror
cld
ljmp
int3
dec
dec
subl
push
lahf
lcall
rclb
sbb
lods
sahf
inc
inc
mov
stos
jge
cmp
ret
call
prefetch
out
push
xchg
call
gs
cwtl
cmp
add
cld
icebp
ret
cli
or
mov
pop
add
push
jnp
int3
sbb
mov
xchg
and
ret
mov
or
jbe
icebp
adc
shlb
jmp
popa
sbb
xchg
std
je
xchg
xchg
dec
test
jle
sar
jg
lock
gs
mov
push
loope
sbb
jbe
xchg
adc
idiv
incl
cwtd
push
rorb
jle
adc
dec
aad
xchg
or
in
mov
inc
pushf
and
xchg
xlat
lea
jmp
push
and
push
dec
push
inc
jne
jl
pop
cmp
cltd
mov
mov
bound
out
shll
call
pop
fcmovnu
scas
mov
mov
or
lret
jbe
subb
outsl
sbb
test
xor
ss
decl
shll
popw
fisttpll
mov
in
push
cltd
jb
int
cmp
inc
scas
fidivs
lock
dec
inc
mov
sub
inc
mov
sbb
adc
hlt
jbe
pop
fsubs
and
push
push
aad
push
clc
leave
cmp
sbb
xor
jns
ret
mov
pusha
inc
shl
lcall
ljmp
ret
or
jo
es
xlat
dec
lods
fwait
lods
in
mov
out
addr16
ljmp
lret
cli
fs
push
sbb
xchg
dec
ds
sub
lret
out
push
scas
mov
jp
cmp
cmp
or
xchg
pop
ret
cli
and
sub
repz
xchg
xchg
jg
lcall
movsl
stos
inc
lcall
sbb
xor
push
out
stos
mov
out
pusha
scas
hlt
mov
jle
test
sbb
mov
loope
ja
adc
out
lods
leave
xor
jg
jo
sub
lret
xchg
or
lret
repnz
fadds
mov
adc
pop
sbb
adc
push
test
lods
popf
loopne
aaa
xorl
lcall
sbb
int3
cmpsb
sbb
fsubr
xor
test
cmpsl
push
dec
jl
and
pushf
decl
loope
call
xor
das
shl
sub
ret
dec
add
arpl
sahf
hlt
jb
mov
test
add
sbb
push
sub
or
or
sbb
push
repz
lret
out
fisubs
flds
les
loop
xchg
jae
test
clc
lcall
pop
fstl
inc
xlat
mov
pop
sbb
ja
pop
jle
fimuls
test
pusha
xor
call
rcrb
outsb
mov
call
dec
popf
add
sarl
xor
stos
and
cmp
stos
out
ss
rclb
mov
adc
fs
das
mov
test
out
add
jno
sbb
adc
fbld
ffree
mov
pop
mov
sbb
lcall
into
or
fisubrs
mov
cli
arpl
inc
sbb
outsb
cmpsl
leave
mov
lcall
pusha
pop
pop
mov
das
xor
repz
cmp
dec
popfw
mov
das
js
and
testb
lods
xchg
loope
pop
fdivr
or
cmp
jmp
aad
sub
fsubl
ffree
and
lock
inc
repz
or
mov
loopne
jmp
xorb
cmpsl
cltd
in
jg
mov
sbb
pop
test
popf
jno
adc
fldcw
cli
lahf
bound
cld
arpl
decl
in
rcrl
mov
ret
mov
mov
scas
sbb
ljmp
add
scas
stc
icebp
mov
loope
xchg
inc
push
mov
push
jnp
frstor
cmp
and
lcall
ds
mov
mov
imul
imul
mov
cmp
mov
arpl
xchg
dec
dec
jo
and
andl
or
outsb
fwait
rclb
or
cmp
incl
ret
cwtl
sub
jmp
aas
pop
lods
jmp
mov
jne
mov
sub
jmp
dec
jo
testb
mov
xchg
outsb
xor
filds
pop
movsl
mov
call
in
lds
jl
adc
ja
and
jne
dec
adc
mulw
dec
xor
decl
pop
mov
daa
push
scas
xor
inc
out
in
mov
lods
pushl
call
sbb
rcrb
and
jno
je
mov
or
ss
sbb
aad
std
jmp
inc
idivl
add
dec
aad
cld
adc
jg
mov
jo
add
mov
mov
out
or
mov
jmp
adc
cli
outsl
subb
mov
mov
repnz
dec
mov
call
pop
cmpsb
xor
loop
add
pop
add
push
int3
pop
enter
mov
jmp
dec
xchg
in
shll
hlt
jp
mov
inc
in
popa
js
cmp
insb
dec
mov
sub
outsl
insl
out
arpl
adc
pop
mov
dec
stos
cmp
adc
data16
sub
ss
hlt
js
pop
out
pop
fisubrl
out
outsl
outsl
inc
subb
rcll
or
in
cltd
push
out
clc
ljmp
and
push
jg
out
cld
dec
jg
push
inc
push
mov
es
xchg
jp
dec
pop
adcl
fisttps
or
xchg
pushf
or
xorl
cmp
or
clc
jae
cmpsl
fnstenv
in
jns
in
or
xor
xor
incl
inc
adc
inc
cmpsl
jae
jno
and
call
push
mov
ljmp
leave
jle
repz
sub
jle,pn
loopne
insl
fistpll
shlw
mov
pushl
xchg
dec
cmpl
xchg
popf
xchg
xor
das
add
jecxz
push
or
pushl
arpl
stos
adc
cmc
xchg
aad
movsl
dec
movl
rorb
inc
inc
lods
mov
jb
ss
pusha
push
fcoml
mov
mov
jmp
dec
pop
stos
sbb
inc
aam
sbb
lea
hlt
xchg
dec
cli
adc
dec
nop
adcl
loope
nop
hlt
call
lcall
ret
xchg
xchg
mov
outsl
scas
ljmp
lcall
movq
dec
test
outsl
fcomi
mov
lahf
dec
jns
sub
fs
clc
sub
inc
bound
icebp
incl
jae
push
dec
scas
sbb
popa
cmp
ljmp
and
push
mov
adc
jp
shll
popa
lock
or
in
incl
cmp
neg
dec
add
scas
cmp
push
push
orb
xor
std
inc
mov
ljmp
inc
push
lret
pop
adc
mov
mov
imul
pushl
mov
scas
sub
jo
cwtl
or
jle
mov
or
pop
mov
sar
les
test
int3
xor
jnp
loopne
lcall
pop
imul
outsl
call
rclb
lret
icebp
test
aas
cld
leave
sbb
sub
push
clc
nop
push
outsb
ljmp
hlt
mov
jmp
out
addb
std
fucomi
xchg
sbb
aam
jl
inc
incl
mov
test
xchg
push
sti
adc
push
mov
push
sub
js
orb
lcall
push
or
mov
jne
sub
mov
adc
fists
test
add
mov
and
sub
adc
push
cltd
mov
sar
incl
inc
adc
in
fstl
xor
in
xor
push
out
inc
dec
lret
mov
sub
xchg
and
aas
and
inc
lods
xor
inc
jecxz
leave
cmp
shlb
insb
inc
into
xor
nop
add
pop
je
outsl
dec
imul
je
insl
add
subl
mov
jecxz
in
cmp
int3
int
jae
xchg
pop
mov
outsb
jg
movb
inc
loopne
dec
jnp
in
sub
mov
in
mov
sti
mov
sar
jmp
pusha
inc
xor
loop
jp
adcl
cmp
bnd
xchg
adc
mov
xchg
add
cmp
lcall
sar
sahf
cmp
mov
dec
push
fiaddl
ljmp
ds
xor
add
mov
outsl
shlb
and
mov
call
fbld
jle
mov
imul
or
lcall
mov
adc
stc
inc
pop
mov
pusha
mov
enter
pop
xchg
ret
incl
outsb
popf
shlb
sbb
ljmp
ds
rol
icebp
pop
adc
push
incl
xchg
fs
test
cltd
aad
addb
cli
jns
push
andb
or
pushl
cld
rolb
mov
or
mov
das
fnstcw
rcr
sub
xorl
das
sar
pop
rcll
mov
and
push
xlat
mov
jo
add
xchg
aaa
out
mov
cmp
pop
sbb
sbb
xchg
daa
ja
pushl
mov
sbb
cmpl
jg
xor
xchg
jle
imul
arpl
pop
in
dec
int3
stos
decl
inc
test
cld
dec
jae
sar
call
cs
aad
mov
fiadds
sbb
jmp
or
gs
ret
jmp
and
xchg
daa
sub
arpl
lcall
sar
cltd
outsl
dec
push
push
imul
fwait
in
and
call
cli
mov
or
nop
rorb
addb
fimuls
ljmp
in
lahf
ja
addr16
sahf
xchg
dec
adc
rorb
mov
lods
insl
inc
add
pop
pusha
pop
inc
mov
ret
xchg
sar
sub
inc
jge
mull
mov
adc
inc
call
pop
clc
dec
inc
push
ret
daa
testl
mov
adc
dec
loop
call
jg
sub
inc
test
jl
add
lcall
inc
push
out
mov
fst
push
rcrb
xor
mov
push
fldt
enter
pop
or
sar
lcall
in
cmp
add
mov
cld
into
cld
cwtl
icebp
popa
cmp
aam
add
ljmp
sbb
sbb
lret
sti
or
lcall
mov
ljmp
mov
inc
dec
sahf
push
lods
int
adc
inc
adc
int3
add
xor
xor
or
push
call
push
sub
test
xchg
icebp
or
lods
cs
test
dec
sub
mov
dec
ja
cmc
les
hlt
mov
addr16
push
pop
aas
jnp
ljmp
in
cmp
cmpsb
mov
mov
cmp
push
mov
jb
xor
cmp
pop
in
hlt
les
int3
dec
outsb
in
cld
push
cli
pushl
stos
pop
mov
pop
lods
push
and
mov
or
fimull
insl
enter
call
pop
lock
inc
cmc
iret
into
adc
jle
mov
inc
pusha
add
fildll
add
inc
add
mov
call
shll
ss
mov
sbb
xor
xor
cmp
pop
addb
hlt
filds
aas
pushl
lret
mov
or
cmp
fs
sub
loopne
mov
mov
data16
jb
mov
pop
lret
out
jmp
incl
or
aas
faddl
fisubrl
push
rcrl
mov
sub
push
add
lcall
xor
xchg
call
xchg
jecxz
fwait
or
jne
bnd
mov
decl
adc
sub
xorl
xchg
sbb
mov
imul
outsb
mov
cmc
adc
xor
sub
xor
in
outsl
test
jne
ret
and
divb
fcomip
filds
mov
cmpb
repz
aas
sarl
xor
jmp
add
pop
test
push
fdivs
outsb
sarb
cmp
shlb
xor
gs
rorb
inc
sub
xchg
ret
filds
ss
jnp
inc
stos
mov
inc
adc
xor
xor
mov
jbe
push
xchg
lods
popa
pop
pop
lea
and
jmp
push
mov
or
out
aam
jb
ljmp
xchg
inc
js
push
rcr
ljmp
jmp
mov
cli
jno
rcll
sbb
and
lcall
int
sti
mov
lahf
mov
aas
dec
cs
xlat
insl
push
xor
adc
xchg
or
movsb
jle
pop
sbb
ror
stos
sti
fcmovnu
icebp
rcll
fbstp
add
clc
jbe
push
adc
ds
fiaddl
xor
loope
data16
xor
insb
into
pop
fcmovnbe
cli
cwtl
aam
adc
popa
inc
cld
cmpsb
ljmp
dec
negl
push
mov
inc
jns
ret
mov
jg
ss
adcl
aaa
dec
pop
aam
or
lcall
add
inc
mov
scas
fnstenv
arpl
xchg
std
mov
inc
jg
lret
leave
rcl
and
mov
daa
dec
movsl
fbstp
dec
sub
cmpsb
incl
jle
out
push
enter
dec
bound
dec
loopne
xchg
into
decl
data16
test
push
jmp
shll
cmpsb
daa
fidivrl
xor
push
clc
lcall
icebp
mov
dec
test
mov
dec
sbb
scas
mov
inc
or
cld
je
decl
lcall
jae
loop
pop
mov
ror
call
testb
cmpsl
xor
decl
jnp
pop
push
cmpsb
fcompl
lret
xor
fisubrl
dec
movsb
sbb
mov
cmpsl
out
and
clc
lcall
lret
clc
push
xchg
fs
pushf
ret
incl
and
out
hlt
sahf
cli
jbe
int
test
sub
mov
popf
xor
mov
imul
sbb
inc
loope
outsl
xchg
push
ljmp
inc
bound
stc
xor
and
fdivrl
lcall
je
and
jmp
lea
rorb
lgs
jge
adc
mov
mov
inc
call
cld
cmp
movsb
mov
adc
xchg
leave
lcall
shrl
add
mov
xor
movl
pop
pop
jmp
sub
stos
hlt
js
add
pop
sti
push
xchg
into
idivb
mov
out
push
ret
pushf
xchg
dec
pop
pushf
lret
dec
iret
outsl
incl
aam
sbb
arpl
mov
lahf
stc
data16
ljmp
xchg
arpl
popa
scas
stos
or
ret
outsl
scas
xchg
movzbl
jl
pop
popf
leave
sbb
push
mov
fiadds
aas
out
sbbb
cmpsb
ret
mov
icebp
dec
rorb
push
xor
lcall
mov
aad
in
push
sar
jne
stc
fmuls
and
push
inc
or
adc
les
aad
cmc
inc
incl
add
xor
cmpsb
xor
ljmp
mov
cmpsb
dec
clc
cmp
jge
cmp
dec
push
adc
call
pop
lock
push
sub
ja
push
push
pushf
jnp
gs
orl
ss
add
hlt
decl
add
repz
bound
push
cmp
es
jg
xchg
push
cmp
ds
cmp
fstl
enter
push
sbb
pop
cmp
mov
pop
mov
test
int3
jp
inc
adcl
pop
ficoms
cmp
popa
cmpsb
fwait
mov
pop
cmp
pop
mov
decl
dec
push
jns
rcll
pshufw
pop
mov
mov
jbe
stc
nop
test
sbbb
inc
aaa
cmp
add
cmpsl
imul
pop
add
push
test
push
jmp
jg
call
cli
mov
stos
mov
fimuls
decb
jb
insb
sub
dec
xchg
mov
shl
adc
sub
mov
sub
fmuls
sub
filds
out
lret
ljmp
xlat
sub
fs
insl
cwtl
cmc
pop
jns
inc
xchg
out
cmp
ljmp
jbe
adc
jle
fildll
xor
mov
add
lret
nop
and
mov
std
call
arpl
or
cld
jbe
inc
data16
add
scas
cmp
mov
loope
jecxz
mov
bound
push
pushf
lea
push
ret
iret
mov
out
lods
push
jnp
pop
add
or
incl
sub
mov
push
mov
push
clc
mov
mov
out
ja
xor
jmp
cmp
jmp
ret
rol
nop
add
loope
add
sub
int3
mov
lcall
cmp
mov
cmp
ljmp
xchg
push
ret
icebp
into
jge
push
cmc
lcall
cmp
cmpsb
or
mov
cltd
cmp
mov
out
clc
lcall
popa
leave
out
movsb
fcoms
out
dec
jno
cmpsb
adc
xchg
lcall
jl
lret
out
adc
mov
sub
dec
adc
decl
xchg
mov
jnp
push
sub
and
mov
xchg
xor
sbb
xlat
dec
or
cmpsb
adc
xorb
push
mov
fistl
pop
inc
push
sub
pop
jo
out
test
xor
jg
insb
outsl
xor
push
jb
jg
mov
push
xor
imul
cmpsl
mov
out
lock
mov
add
xor
cli
fs
push
cmp
mov
mov
push
lret
fnstcw
out
shlb
pop
pop
aas
movd
cmp
into
adc
mov
data16
out
xchg
jnp
or
imul
sub
fcomip
shll
repnz
fisttpll
sbb
mov
xchg
xor
jmp
xchg
into
dec
mov
sbb
jne
nop
and
loopne
rol
data16
push
xor
addl
js
es
pusha
test
rcrb
iret
imul
out
jg
stos
or
pop
popf
pop
xlat
stos
pop
es
cmp
jo
mov
jl
mov
dec
popa
pop
jno
repnz
jno
sarb
sbb
std
cmp
inc
jnp
icebp
std
loope
out
xlat
aaa
add
sbb
and
sti
in
add
fcmovne
dec
and
divl
decl
push
pop
fwait
sub
or
xchg
pop
inc
addl
rcll
jne
sar
incl
loopne
ret
sbb
inc
arpl
test
mov
or
call
fnstsw
cmp
test
and
push
or
sub
lcall
pop
mov
mov
push
test
mov
mov
dec
popf
jmp
xor
fisubrl
mov
mov
divl
push
cmpsb
lcall
or
shlb
es
loopne
or
mov
inc
std
xor
push
decl
lock
lcall
add
int
sub
je
out
mov
pop
sbb
xchg
sti
jb
pop
call
mov
lret
negb
cmpsl
test
push
push
lds
xchg
data16
or
xor
inc
testl
mov
xchg
push
or
sub
cwtl
mov
cmp
xchg
pop
jge
jg
lods
scas
jecxz
xor
sahf
loopne
mov
test
stos
jp
orb
and
sub
push
jecxz
or
gs
mov
shll
push
nop
pop
sahf
sub
sbb
sti
xor
xor
inc
sub
jp
lock
call
push
or
lret
sub
decb
pushl
les
push
rorl
inc
bound
push
xor
fisubrs
or
call
loopne
in
inc
inc
dec
dec
sub
mov
mov
jb
mov
jmp
xlat
dec
push
xor
in
jno
dec
mov
adc
ja
and
push
cmp
pushl
dec
aam
addw
jl
ds
call
stos
sub
add
data16
jmp
mov
data16
xlat
jg
jmp
push
nop
inc
call
scas
cmpsl
mov
addb
dec
sbb
imul
ljmp
mov
jg
stos
pop
inc
mov
jo
add
rorb
mov
push
mov
cltd
adc
pusha
cwtl
jmp
mov
push
les
pop
scas
jmp
xchg
jbe
mov
dec
pop
inc
insb
pop
mov
lea
cmp
aaa
sub
mov
sbb
rorb
arpl
adc
lcall
jo
lahf
arpl
loope
jecxz
lret
repz
mov
cmp
in
out
xchg
dec
mov
pop
and
and
add
xchg
sub
mov
jmp
clc
xchg
and
incl
cmpsb
cwtl
fucomip
jmp
xor
add
jnp
ret
sbb
cmp
cmp
cmp
dec
pop
incb
insb
xchg
pushf
in
jmp
aad
test
cmpsl
cmp
push
dec
xor
in
sub
ja
push
sbb
xchg
out
shlb
pop
loop
xchg
enter
jp
fcom
fdivrl
dec
pop
dec
sub
testb
inc
cmc
cmp
cmp
and
int
dec
jecxz
sub
orb
xor
aaa
aam
out
mov
sub
mov
test
cwtl
data16
mov
pop
loopne
jbe
fbstp
pop
lods
data16
or
inc
mov
cmp
addr16
cmp
in
ret
sbb
xchg
push
int3
cmp
sub
mov
lods
mov
dec
adc
adc
bound
rcrb
jb
mov
xchg
ret
pop
pop
inc
fidivrs
lret
mov
jbe
clc
add
outsl
int3
xchg
call
adc
cmp
push
pop
ret
sub
add
outsl
mov
mov
xor
pop
xchg
and
inc
ja
repnz
daa
push
jne
sarb
push
sub
cmp
dec
lret
ljmp
jne
addr16
mov
inc
test
inc
call
mov
test
call
push
jge
inc
xchg
test
xor
jne
cli
in
dec
or
xchg
jbe
mov
and
mov
gs
or
mov
add
lahf
push
cld
inc
ss
mov
or
jl
pop
dec
jnp
jg
idivb
lret
cmp
rcrb
or
fisttps
int3
push
cs
or
xor
or
pop
dec
loop
mov
sub
inc
mov
inc
setno
mov
lcall
push
and
pop
pop
adc
sahf
sub
mov
inc
xchg
pop
jbe
sahf
clc
xor
jmp
outsl
sarl
push
mov
dec
lcall
lods
sbb
adc
or
daa
ret
shr
stos
into
out
test
mov
jg
push
out
imul
arpl
jge
pusha
add
fstl
aam
push
sar
out
push
add
cmpsl
mov
and
mov
fs
dec
or
arpl
sbb
mov
sti
sbb
xchg
mov
cmp
add
mov
jp
push
cmpsb
and
stc
fisubrs
movsl
lcall
inc
lods
test
out
pop
clc
movsw
cmp
jbe
cld
pop
sahf
adc
xchg
aaa
add
inc
cmp
ja
call
nop
cs
sti
cltd
repnz
jle
ret
dec
mov
add
and
jmp
xchg
mov
dec
mov
xchg
test
shl
sar
add
cmp
hlt
call
loop
adc
inc
mov
adc
out
lret
jmp
mov
call
scas
mov
hlt
test
jg
stc
xor
mov
pop
and
push
lcall
sub
les
and
ljmp
in
add
cld
outsl
jmp
sbb
and
adc
rolb
mov
dec
test
fisttps
jo
out
cmp
push
add
dec
inc
sbb
sbb
mov
ret
xchg
cli
call
nop
iret
jg
daa
sub
jmp
pop
les
sub
stos
and
dec
sub
lods
sbb
add
xchg
pop
jnp
in
cs
lods
and
adc
mov
add
push
daa
outsb
inc
mov
and
push
inc
adc
incl
repnz
cmp
repnz
pop
mov
lock
pop
jp
pop
jg
hlt
cs
ja
mov
inc
loop
rclb
sti
testl
lods
test
dec
je
pop
xchg
sbb
popf
scas
mov
and
movsb
icebp
inc
ljmp
cmc
ret
jbe
fwait
addl
out
loope
loopne
sub
jge
add
incl
push
ds
push
add
shlb
mov
push
and
stos
in
insl
out
mov
add
incl
xor
sbb
sahf
repz
mov
sub
sub
iret
fs
adcl
lcall
pop
call
rdtsc
sub
cltd
lods
cmp
adc
fsubl
cmpsl
adc
out
sar
incl
dec
aas
xchg
outsl
push
pusha
xchg
sub
pushl
mov
inc
rcrb
mov
es
in
les
push
das
inc
fisubl
ljmp
lret
lods
or
jle
mov
pop
testb
gs
out
or
or
pop
cmp
xchg
jne
sbb
mov
and
scas
and
push
jo
mov
pop
inc
lret
loopne
sbb
nop
rclb
xchg
cmpsl
in
ljmp
cld
outsl
jmp
fsubrl
ret
lret
dec
loop
push
cs
sub
pop
push
jne
pushl
aaa
dec
lcall
mov
jnp
jge
jecxz
test
xchg
mov
push
push
cmp
cmp
sbb
mov
inc
fcomps
repnz
pop
and
mov
inc
jp
xlat
or
and
pop
nop
inc
cmc
lahf
push
lods
pop
or
out
mov
cmpsb
pop
add
mov
mov
int
imul
negl
or
adc
addr16
inc
das
jmp
js
push
fldenv
xchg
and
pop
dec
test
in
fdivrp
call
and
sbb
dec
mov
xchg
mov
addr16
and
ljmp
sbb
inc
push
cs
lret
cld
jecxz
scas
fcomip
pushl
add
movsb
in
test
test
aaa
pop
jecxz
xorb
inc
scas
movq
or
sub
add
pop
cmpsb
idivl
pushl
inc
bound
aam
std
lods
cmpl
adcl
jno
adc
mov
cli
sbb
mov
fildl
and
inc
jg
jae
and
push
inc
in
mov
mov
push
sub
inc
das
clc
lcall
add
std
mov
dec
sbb
and
jo
ret
in
inc
decl
jp
mov
add
pop
popf
mov
pop
jbe
repz
mov
jle
in
lcall
mov
cmp
push
inc
out
xchg
mov
xlat
stos
roll
leave
mov
sbb
ljmp
sbb
test
dec
fs
fwait
cmp
pop
mov
xor
in
incl
ss
ja
scas
clc
shr
push
xor
mov
mov
inc
daa
sbb
incl
cli
out
rclb
xchg
jl
add
lock
std
fmuls
mov
sub
fcomip
sbb
mov
outsl
xor
mov
cli
cmp
es
xor
mov
cmp
cmpsl
sbb
pop
dec
cs
mov
cmpsb
imul
leave
fxch
stc
sbb
clc
inc
insl
push
fwait
es
cmpsb
dec
mov
popf
sub
pop
jmp
lcall
push
lods
jbe
das
cmp
sbb
adc
cmp
scas
cli
sbb
pop
pop
shr
cmc
test
mov
in
jmp
xchg
incl
pushl
mov
or
test
pop
pushf
adc
sahf
xor
aad
add
aaa
inc
shlb
pushf
outsb
scas
sti
adc
movsb
lcall
ljmp
pop
or
in
push
in
jae
dec
dec
or
scas
dec
sbb
das
cli
fstl
xor
leave
repz
adc
xor
pop
bound
xor
ljmp
inc
dec
shll
rclb
in
cmp
imul
rorl
incl
sub
push
jp
arpl
stc
or
push
or
ljmp
pop
add
push
sti
jnp
or
jge
pop
outsb
scas
sbb
ror
mov
xchg
call
arpl
cltd
ficomps
mov
cld
dec
fisubs
jno
xor
ret
testb
mov
fisttpl
xchg
cs
loop
pop
pop
into
loop
in
test
mov
dec
inc
lfs
jg
pop
jmp
mov
sti
cltd
mov
movsb
xchg
jnp
lods
lcall
sti
xor
mov
fsubrl
xor
and
jl
push
push
divb
jmp
or
movsb
shlb
inc
pop
push
sub
jbe
ss
pushl
orl
rorl
add
pop
cmp
enter
repnz
hlt
jmp
clc
add
jns
mov
pop
add
and
icebp
push
push
popa
lcall
ret
sub
and
cmc
mov
push
inc
and
jo
mov
decl
push
xor
shll
sbb
and
data16
cwtl
ds
xor
call
xchg
clc
arpl
test
and
incl
test
lret
fistl
les
loope
aad
inc
jb
test
xor
std
mov
mov
jne
lahf
iret
cli
pushf
mov
adc
mov
xor
jns
arpl
lds
out
stos
push
js
sub
inc
pop
mov
cmp
sarl
popf
xchg
out
mov
or
sbb
xchg
enter
hlt
cmp
pop
mov
sbb
loop
inc
add
movsb
sbb
dec
and
lods
shrl
mov
out
ljmp
jmp
mov
xor
jae
xor
mov
leave
inc
push
std
push
lock
stos
add
test
sub
ror
cmpsb
mov
mov
push
xchg
sahf
adc
out
aam
inc
test
mov
dec
movsb
lret
xchg
mov
ja
movsb
push
out
push
shlb
add
ljmp
sar
ficoml
test
jle
adc
push
je
inc
push
fcomps
das
jmp
daa
mov
push
adc
jg
arpl
xor
addr16
leave
leave
enter
push
repnz
sti
out
aad
cmpsl
fnsave
or
cmp
call
mov
xchg
call
mov
or
fwait
jnp
add
sub
inc
pop
lret
ret
jmp
outsl
jo
sbb
sbb
add
test
adc
decl
push
or
mov
add
push
sub
iret
sti
lods
inc
cmpsb
fwait
mov
ljmp
insl
mov
out
sarl
mov
lcallw
into
mov
hlt
cwtl
sub
jnp
pop
xor
cmp
in
push
push
imul
and
pop
cli
pushl
sar
jno
cmpsl
movsl
lret
jo
mov
mov
ljmp
or
cmp
cmp
and
add
mov
pop
lds
add
lcall
in
pop
cmpsb
jecxz
rclb
testl
pushf
pop
andb
mov
int3
push
mov
fisubrs
ret
mov
imul
sbb
pop
xor
andb
jp
mov
and
push
and
add
dec
test
xchg
push
sbb
lods
jg
testb
lea
ljmp
cmpsb
mov
adc
jle
xchg
or
in
jb
clc
jmp
in
cmp
and
adc
dec
push
out
inc
ss
loop
nop
clc
cmp
push
ljmp
fidivs
out
pop
xchg
jge
rcll
test
jno
mov
adcb
icebp
pop
frstor
jno
mov
cli
bound
andb
sbb
insl
sbb
enter
add
out
and
or
idiv
pushl
cmp
xchg
sbb
and
sahf
daa
pushf
lret
insl
dec
int3
dec
call
xchg
imul
xchg
call
mov
xchg
inc
pop
mov
fstpl
lds
dec
and
fisttpll
fdivr
cmpsb
in
xor
push
mov
xor
shlb
cli
xor
scas
aad
mov
mov
cmp
imul
push
sar
stos
loop
adc
mov
or
les
insl
outsb
aam
movsl
sar
jge
xor
jo
adc
popf
rcrl
dec
jbe
push
pop
add
in
pop
jmp
sbb
in
repnz
popf
daa
repz
lods
arpl
sub
fs
add
decl
sbb
cwtl
push
call
repz
scas
jl
jl
pop
inc
push
stc
add
push
lock
into
dec
push
and
jp
scas
mov
adc
add
and
dec
stc
cmp
shll
fs
xor
testl
jns
adc
dec
jmp
mov
cmc
aam
sub
adc
insl
arpl
pop
mov
ljmp
insb
ds
outsl
cli
lcall
lds
sarb
cmp
or
out
decl
add
fs
mov
pop
shl
xchg
pop
push
lods
aas
cmp
xchg
fistps
mov
bound
jo
sbb
and
mov
cmc
push
jp
jnp
fs
sbbb
xor
stos
adc
jecxz
fs
pushl
lcall
std
arpl
shrb
pop
inc
in
mov
add
mov
incl
jecxz
or
out
loope
mov
mov
pop
mov
fbstp
ljmp
mov
push
dec
xor
cmp
es
sub
add
cmp
rcl
fisubl
stc
cmp
or
insb
push
loopne
sub
pushf
mov
pop
and
cmp
dec
mov
bound
je
imul
mov
mov
dec
fsts
incl
ss
adc
paddusb
in
sbb
arpl
pop
fcompl
ds
out
cli
stc
mov
cmp
addl
pushf
or
popf
and
fldt
push
js
cmp
push
call
lahf
xor
sub
out
pop
sbb
sub
enter
pushl
xor
ljmp
sbb
dec
cli
inc
or
cltd
mov
cmp
movsb
fwait
scas
push
jne
das
push
lahf
pop
mov
jp
test
stc
decl
adc
loop
in
pushf
push
addr16
mov
mov
xor
sbb
sbb
movsb
fisubrl
cmp
ljmp
sub
jl
sub
les
ss
inc
sahf
adc
mov
add
cmp
decl
xchg
pop
mov
stos
mov
ljmp
push
aas
loopne
lods
or
mov
push
outsb
sbb
sbb
arpl
inc
clc
pop
jg
negl
sbb
cmp
loope
nop
xlat
insb
out
adc
shll
pop
jno
mov
jmp
adc
cmp
daa
push
xchg
and
mov
les
movsl
mov
ja
jns
mov
hlt
mov
insl
js
pop
movsb
stos
out
cmp
inc
jmp
inc
sarl
int3
int
xchg
push
jl
outsl
loop
int
dec
aaa
add
jp
mov
xchg
sahf
or
xor
incl
jo
rcrl
dec
popf
dec
imul
xchg
mov
shlb
mov
pop
incl
push
jae
in
shrl
sub
xlat
in
stos
jp
xor
mov
mov
or
inc
lcall
mov
cmp
or
mov
clc
outsb
dec
movsb
jmp
popa
pop
mov
stos
cmc
das
adcl
lods
push
ljmp
xchg
cmc
pop
std
scas
es
js
add
pop
push
add
jno
cmp
test
pushl
xlat
inc
mov
ds
loop
jns
mov
mov
dec
fldl
testb
add
mov
jmp
icebp
mov
and
inc
rcr
fwait
aas
repnz
mov
cmp
or
inc
ss
mov
hlt
out
mov
mov
mov
adc
out
movsb
xchg
call
jle
jb
fmuls
xor
lods
push
mov
mov
aas
addl
orl
push
adc
aaa
es
out
xor
mov
mov
mov
jmp
rolb
popa
sbb
scas
ljmp
add
sarl
jl
repnz
arpl
test
mov
jne
rorb
pop
std
out
ss
jg
ja
xor
dec
in
mov
aas
popf
dec
jp
cmp
cmp
xchg
shlb
out
cmc
out
mov
inc
mov
dec
dec
subb
mov
in
dec
repnz
pop
into
inc
mov
int
loope
xchg
ljmp
clc
mov
imul
sbb
jbe
or
cmp
cmp
xchg
push
mov
popf
adc
mov
mov
mov
bound
idiv
into
push
pop
loopne
cmp
enter
adc
mov
lods
fs
jns
pushl
pop
xchg
and
sub
jle
mov
ficoml
in
jo
decl
and
push
xor
sar
jg
mov
jle
test
sbb
inc
sub
xor
stos
xor
add
int
cld
lcall
gs
fnsave
sbbl
mov
cltd
dec
sub
mov
adcl
icebp
or
mov
cltd
leave
xor
push
mov
and
xchg
cwtl
call
cmpsb
fucomi
push
hlt
leavew
cmpl
cs
lods
jecxz
sbb
adc
adc
fmul
ror
jmp
push
cmp
popf
lea
cs
gs
push
inc
xchg
or
cmpsw
insl
inc
sbb
or
mov
or
enter
imulb
jmp
push
jecxz
push
xchg
dec
insl
mov
xchg
push
fdivrl
std
cmp
leave
jg
cmp
daa
addr16
cmp
jne
cs
flds
repnz
inc
fstl
jbe
cmp
jae
mov
mov
insb
push
outsb
shrl
jp
dec
add
pusha
jb
dec
jmp
jg
push
in
mov
test
cmp
ss
lods
dec
dec
cwtl
inc
jbe
lods
inc
addr16
lcall
aam
inc
pop
test
fbld
jmp
dec
stos
jecxz
xor
repnz
ret
sbb
push
lret
stc
sbb
mov
and
pusha
mov
call
fsubrs
notb
stos
decl
in
test
jb
sub
test
inc
push
testl
cmpsl
out
xchg
je
pop
out
arpl
xchg
fwait
call
xor
lock
scas
mov
stc
mov
sbb
in
pop
dec
aaa
mov
cmp
mov
jmp
cmp
inc
inc
divl
fs
xchg
add
and
leave
xlat
sarb
jg
jae
ffreep
add
loope
push
and
mov
out
clc
lcall
sti
outsb
pop
add
pop
mov
push
lods
sbbb
sbb
loop
push
and
decb
and
insl
and
ret
mov
push
add
lcall
cmp
inc
inc
adc
outsl
mov
push
cmp
mov
mov
scas
and
dec
popf
lcall
jge
test
idiv
test
dec
xchg
sti
dec
and
xchg
ss
cltd
cmpsb
sahf
inc
lcall
ljmp
mul
pop
je
inc
aaa
test
cmpsb
imul
fcmovbe
xchg
es
pushl
dec
cmp
jle
jae
jge
ror
test
lret
push
inc
adc
rolb
pop
enter
ljmp
incl
or
fadds
cld
mov
cmc
mov
mov
pop
lods
movsl
sub
mov
dec
lea
les
repz
sbb
mov
into
xchg
jg
ja
ljmp
xor
jo
ucomiss
clc
out
push
pop
and
setae
into
mov
mov
pushl
imul
ret
cmp
sbb
mov
dec
lret
mov
clc
sbb
cmpsb
jg
add
fwait
leave
aam
mov
add
dec
dec
out
cli
incl
aad
xlat
fimuls
in
dec
adc
cmp
sub
adc
jmp
dec
gs
fsts
cwtl
shrl
add
cli
push
mov
mov
sbb
mov
cmp
js
jmp
scas
dec
fsubrl
adc
xor
lock
mov
lret
scas
or
cmp
dec
xchg
pusha
out
bound
add
popa
jb
cmc
mov
jp
call
jg
mov
ror
fisubs
jb
sbb
pushl
ja
jae,pt
loopne
pop
rorb
jp
or
adcb
or
sbb
inc
adc
incl
out
add
loope
sbb
das
mov
inc
pop
rcll
or
ljmp
test
sub
mov
push
cmpsb
inc
and
rclb
jp
sbb
push
jmp
loop
mov
mov
dec
ficomps
movsl
pop
sbbb
shll
pop
push
test
push
mov
loopne
pop
lcall
mov
push
cmp
and
lcall
adc
add
lret
mov
adc
xor
loopne
loopne
nop
js
sar
lcall
xor
test
add
push
popa
sbb
pop
cmp
sub
push
aas
andb
ljmp
or
fldenv
sahf
add
inc
bound
push
test
in
imul
mov
adc
ss
in
adc
data16
add
jns
and
fndisi(8087
dec
inc
dec
push
xchg
dec
enter
test
js
inc
das
mov
repnz
jl
inc
insl
movsb
clc
sbb
mov
jne
or
xchg
jle
test
pop
cmc
add
call
jns
dec
mov
dec
cmp
mov
stos
in
gs
jae
jmp
les
xor
addr16
ljmp
inc
sarb
jmp
cltd
nop
and
imul
sbb
or
dec
or
mov
dec
inc
sbb
pop
mov
pop
xor
cmp
rcrl
movsb
addr16
pushl
push
xor
repnz
mov
add
adc
daa
scas
cli
cld
lds
cmpsb
loopne
scas
cmp
jne
push
test
hlt
mov
inc
out
or
jmp
fwait
sub
test
mov
push
jmp
xchg
dec
jp
in
mov
movl
push
fcomi
xlat
and
or
addr16
jmp
lods
lds
scas
mov
rorl
jg
lea
ss
lret
adc
jmp
push
loop
mov
sub
enter
sub
mov
movsb
push
out
push
roll
call
scas
or
sbb
mov
cmp
outsb
adcl
sub
call
int
scas
inc
pop
xchg
pop
push
inc
adc
add
inc
or
inc
lcall
loope
jnp
sar
cmp
popf
inc
shlb
stos
mov
inc
mov
lcall
cmp
mov
push
push
or
dec
call
jg
out
ret
pop
add
outsb
lcall
gs
mov
out
rcrb
mov
incl
sbb
jp
add
in
adc
loopne
lods
imul
push
decl
sbb
mov
pop
xor
cld
out
sbb
jns
push
sub
cs
sbb
pop
pop
data16
mov
and
xor
add
ds
gs
test
call
jae
mov
lret
into
std
inc
aad
mov
xlat
into
bound
jmp
lock
sti
or
cmp
ja
cltd
push
xchg
roll
push
lcall
push
sub
sbb
ja
lcall
out
inc
mov
push
sbb
aad
popf
adc
mov
sbb
aas
lcall
addr16
gs
jp
pop
sbb
jne
add
mov
sub
cmp
dec
pop
insb
mov
out
jmp
lcall
inc
call
repnz
pop
cs
ficompl
jno
jb
mov
dec
jmp
cmp
pushl
ss
cmpsl
and
jmp
cs
sbb
mov
mov
out
decl
test
sub
call
xorl
int
insl
sbb
mov
xor
test
icebp
cli
or
hlt
cli
rcll
int3
in
inc
push
call
inc
dec
int3
adc
pop
inc
adc
dec
jne
into
aam
xlat
repz
aad
jg
cmp
dec
loopne
cmpb
das
pop
sahf
ss
ljmp
clc
call
fcmovnbe
sub
gs
and
shrb
jb
cmpsl
cmpsl
sbb
jmp
cwtl
test
add
sub
and
cltd
mov
cmc
add
inc
mov
decl
mov
filds
push
jg
jb
hlt
and
test
adc
nop
adc
ljmp
mov
mov
inc
push
rcr
push
and
rorl
jno
push
mov
idiv
call
cmpsl
fwait
into
dec
push
adc
bound
inc
mov
lea
dec
btc
xorl
cmp
mov
sub
mov
rol
icebp
pop
mov
xchg
outsb
cmp
fists
push
sbb
test
fsubl
call
cld
dec
dec
inc
xchg
fwait
arpl
sbb
cmpsb
sti
pop
dec
outsb
mov
fmul
loop
cli
decl
xchg
xor
jno
mov
lock
leave
int3
enter
mov
orl
xor
pushf
push
sti
fwait
push
and
mov
mov
jo
mov
out
mov
pop
cltd
xchg
hlt
push
subb
push
pop
xor
cmp
pushl
lods
inc
or
subl
inc
mov
sub
lahf
push
stos
lcall
outsb
movsb
inc
jp
icebp
std
leave
mov
mov
inc
cmc
push
ret
mov
sub
hlt
fcmovnb
lret
xchg
add
and
rcrl
adc
sub
mov
stos
fisubl
scas
lahf
ret
inc
sarb
mov
ret
les
arpl
push
xchg
test
sub
ljmp
stos
leave
scas
scas
dec
inc
jg
push
les
adc
into
xor
rcl
jg
js
add
jb
sub
xor
bound
and
std
scas
icebp
testb
pusha
in
rclb
sahf
push
or
mov
cld
pop
shlb
and
inc
sub
rorb
jge
mov
test
out
inc
inc
cmp
jecxz
fst
mov
stos
cmpsl
xor
xor
out
ljmp
insb
push
push
adc
push
cmpsb
push
lock
mov
jle
arpl
decl
hlt
je
cltd
dec
jp
mov
push
add
jb
xchg
fdivrl
cmp
sar
or
pop
xchg
mov
dec
mov
int
icebp
lods
fucompp
dec
mov
dec
stos
rclb
fimull
nop
or
push
notl
push
push
xor
daa
lcall
dec
or
mov
imul
icebp
stc
inc
mov
test
push
decl
or
jae
hlt
and
mov
add
xor
decb
pop
insb
and
mov
mov
cmp
and
data16
outsb
in
bound
inc
daa
pop
or
jne
das
ljmp
xor
leave
lret
sti
push
mov
push
pusha
fs
pusha
adc
xchg
int3
jp
sub
call
shrl
jb
fisttpll
into
cmp
outsb
jmp
mov
add
outsb
cmp
adc
roll
cs
rorb
mov
lret
mull
fldl2e
iret
mov
adc
stc
sub
ljmp
xchg
hlt
rol
das
icebp
dec
and
call
call
ret
mov
sub
popa
xchg
pop
js
pop
popf
clc
xor
rclb
loopne
call
sub
xor
lahf
es
aas
scas
inc
pop
cwtl
adc
stos
fwait
xor
call
lahf
psubd
ret
push
sub
jns
push
inc
mov
sub
sbb
leave
push
dec
in
mov
mov
in
xchg
lock
jne
sub
in
aad
es
jmp
lahf
jmp
popa
stos
pop
xchg
push
fisttpl
leave
cmpsb
mov
push
out
mov
adcl
dec
cs
arpl
fnstsw
shl
popf
push
dec
mov
pop
je
mov
icebp
push
or
dec
xor
mov
add
cmc
mov
imul
jns
inc
xchg
dec
pop
cltd
mov
incl
push
xor
cmp
shlb
adc
jmp
adc
in
clc
ljmp
inc
iret
cmpsl
xchg
xor
nop
enter
loop
test
xorl
popa
ljmp
jo
test
and
dec
ficomps
shlb
test
rcrl
decl
mov
aam
shl
inc
lds
pop
cmpb
test
push
repnz
sub
adc
push
jmp
pop
incl
outsl
negb
ret
idivl
mov
imull
dec
dec
bound
shlb
stos
repnz
icebp
push
cmp
cld
pop
push
jne
out
cmp
pop
hlt
std
fists
xchg
or
push
jl
add
shrl
sub
bound
out
jbe
sbb
lea
cwtl
jne
mov
push
mov
jle
stos
movb
outsl
cld
test
mov
outsl
mov
pushf
ljmp
pushl
js
jp
dec
pop
int
xchg
mov
mov
dec
cmp
inc
add
decl
sub
jbe
sarl
sbb
push
lcall
sbb
cmp
sub
inc
xorb
jnp
adcl
push
push
cld
fwait
addl
mov
pushl
test
ret
mov
dec
shl
jge
cmpl
aaa
pop
add
sbbb
call
sub
push
cmpb
inc
mov
popa
xchg
xlat
mov
popa
jecxz
call
dec
and
into
pop
lret
pop
movswl
jne
push
in
into
or
lcall
cwtl
int
lahf
js
mov
sbb
fidivrs
out
push
ljmp
lock
inc
dec
dec
lea
add
stc
outsl
cs
pushl
jno
pop
fcoms
insl
std
ds
jl
fisubs
inc
ret
cmpsl
sbb
and
rorl
nop
sbb
loopne
pusha
mov
pop
andb
clc
inc
hlt
ss
lcall
pop
sbb
cmp
cmp
aas
cld
pushl
cmc
pop
scas
cmp
pop
lock
mov
outsb
jecxz
jl
lea
call
ss
lret
push
xchg
das
decl
dec
lret
pop
bound
dec
loopne
lcall
dec
xlat
cmp
scas
and
jnp
mov
fdivr
in
gs
pusha
xor
pop
loopne
roll
lods
fldt
pop
ds
fstps
decl
push
repz
xchg
movsl
or
mov
stc
mov
mov
add
decl
inc
test
les
adc
pop
mov
imul
or
ret
test
adc
jmp
aam
jg
andb
das
jmp
fsubrl
pop
add
rorl
popf
fs
cmp
inc
mov
jg
ljmp
dec
and
mov
xor
xor
xchg
sti
jae
fadd
out
outsl
mov
sub
imul
clc
int3
movsb
xchg
and
xchg
push
and
push
sbb
insb
pop
xlat
add
movsb
lds
jns
negb
pop
sahf
fbld
jbe
in
dec
dec
mov
clc
test
add
dec
popf
shrb
inc
adc
pop
mov
ljmp
test
cmp
jns
mov
xor
pushf
decl
loope
das
fdivrs
outsl
pop
ljmp
add
add
sbb
int3
mov
pushf
call
call
push
xchg
clc
daa
mov
push
filds
js
mov
mov
call
fmul
ds
mov
inc
arpl
mull
imulb
inc
pop
push
pop
ljmp
inc
pop
mov
adc
push
divb
xor
fldt
clc
pop
std
cmp
iret
xor
push
fs
out
inc
sbb
mov
pop
negb
xchg
pop
inc
call
jae
stos
insl
es
pushf
or
cmp
out
repnz
sub
cwtl
imul
aaa
outsl
aam
mov
jmp
cmp
push
ds
lret
test
wbinvd
sbbl
lds
push
adc
cwtl
xor
lcall
mov
loope
jne
les
mov
jbe
in
mov
roll
pop
jg
daa
inc
mov
and
dec
cmp
fnstsw
mov
daa
out
arpl
loope
jae
jmp
jmp
ret
scas
test
vpsrlw
lret
jnp
inc
testl
mov
dec
mov
mov
js
cwtl
das
jle
or
cmpsb
fldcw
call
push
lea
adc
or
pop
xor
ret
dec
dec
or
cmpsb
sub
incl
ds
or
jo
ljmp
xchg
push
inc
cmp
popa
inc
or
mov
and
jmp
jmp
test
ss
jmp
out
push
sahf
adcb
or
mov
mov
rolb
inc
gs
mov
call
pop
jp
adc
lret
scas
pop
dec
adc
popa
jnp
xlat
ljmp
push
inc
pop
sahf
int
and
or
cmp
movsb
int3
jns
cmp
lods
sub
cmp
loopne
andl
mov
jg
pop
mov
movsb
or
dec
lods
imul
lret
ljmp
outsl
mov
xchg
ja
add
cltd
ds
xchg
in
out
mov
sub
hlt
lcall
mov
inc
aaa
mov
inc
add
and
inc
call
or
psubsw
stc
mov
push
cmp
ljmp
in
push
xchg
mov
mov
stos
cmp
pop
mov
incl
dec
mov
push
popf
or
cwtl
xor
std
or
mov
jbe
mov
cld
es
divb
ret
divb
test
cltd
inc
cmp
fwait
daa
lcall
out
xchg
pop
mov
mov
into
sbb
lods
pop
stc
adc
hlt
incl
jle
pop
and
incl
imulb
aaa
adc
mov
decl
pop
insb
sbb
bnd
mov
and
jnp
push
add
ja
dec
lahf
and
push
cli
gs
decl
xor
mov
xchg
mov
xchg
sbb
loope
inc
jae
in
test
mov
lods
mov
dec
xchg
sub
call
enter
inc
add
pop
int3
push
add
jmp
out
cmp
push
imul
jle
jo
jecxz
xorb
fistl
dec
sub
lcall
mov
xchg
sbb
pop
es
js
jge
mov
into
inc
std
jge
adc
inc
xor
cmpl
aad
lret
jne
xor
jb
cli
adc
incl
mov
push
jmp
or
mov
adcb
clc
enter
fwait
inc
inc
xchg
insl
mov
stos
mov
inc
xor
inc
fcoms
or
dec
sbb
fs
gs
jno
mov
call
push
xor
mov
iret
cmpl
ret
and
lcall
pop
insb
call
repnz
inc
mov
dec
das
daa
sub
in
inc
push
sub
pushf
dec
aas
shl
enter
adc
stos
mov
mov
loope
out
jmp
ja
jge
adc
test
cmpb
fildll
pop
sub
inc
sbb
dec
add
icebp
aas
sub
xchg
lods
shlb
or
lcall
inc
xchg
rorl
jge
pop
inc
das
push
inc
lcall
in
gs
add
and
fmuls
mov
movsl
dec
mov
pushl
or
and
or
jo
xchg
gs
test
push
push
or
pushf
cmp
hlt
imul
cmp
in
jp
pop
add
fisttps
decl
enter
inc
cld
push
lods
cmpsl
sub
sar
incl
mov
or
mov
stos
movzbl
adc
aad
js
and
decl
add
adc
xchg
xor
jne
sbb
lods
movsb
shll
sbb
jns
out
jnp
loope
fcoms
adc
insl
mov
pop
dec
and
sbb
mov
gs
mov
decl
pop
cs
or
pop
gs
cmp
and
dec
stos
cmp
cmp
push
mov
sahf
fwait
xor
jae
hlt
nop
pop
push
push
xor
xor
mov
xor
rcrl
jecxz
jmp
push
sub
mov
add
mov
ret
mov
mov
mov
or
outsl
xchg
ffree
jle
aam
xor
mov
js
popa
negb
add
pop
mov
push
inc
call
mov
or
scas
and
adc
sbb
mov
inc
mov
xlat
jns
call
lcall
mov
leave
and
push
in
outsl
ret
int3
add
aam
jo
sbb
xor
scas
and
push
call
add
mov
push
cli
pop
inc
mov
in
in
inc
sub
xor
or
pushl
out
add
pop
pop
jge
movb
pop
cmpsb
mov
iret
push
enter
in
pop
cmp
sbb
dec
jno
dec
and
push
lea
popf
and
push
decl
xor
xchg
and
lcall
cs
mov
xor
xor
insl
leave
addr16
scas
dec
bound
sbb
cld
lcall
cmc
mov
cmp
inc
push
pop
mov
push
push
into
or
xchg
out
in
cmp
pushl
pop
jbe
scas
xchg
pop
push
mov
mov
lods
and
inc
and
push
mov
sub
movsb
xchg
mov
and
mov
pushl
jbe
dec
loopne
push
jae
sbb
idivl
push
rorb
ret
out
bnd
push
lret
decl
xor
inc
adc
adc
push
mov
repnz
lods
lds
jle
dec
push
cmp
jge
ljmp
arpl
pop
test
sti
ljmp
movsb
jmp
jg
jmp
mov
lock
or
int3
shlb
shl
ret
mov
jno
loope
push
repnz
pop
push
sub
mov
in
inc
addr16
pushl
pop
push
imul
popa
push
jmp
and
scas
cmpsb
jmp
cli
adc
xchg
ret
sub
xchg
inc
mov
mov
test
ljmp
and
lea
mov
inc
jmp
mov
push
inc
pushf
popf
fcompp
loope
incl
decl
adc
mov
mov
xchg
jl
ljmp
loop
or
adc
inc
fisttps
or
sahf
xchg
movsl
rorl
imul
ljmp
inc
xchg
xor
les
pop
add
pusha
mov
fists
ficompl
cli
jmp
icebp
loopne
dec
cli
xchg
int3
lcall
dec
fbld
lods
mov
aam
mov
not
loope
and
mov
dec
hlt
mov
ljmp
cltd
sbb
ret
jmp
aad
sub
jmp
shrl
decl
jbe
test
into
and
insb
mov
aad
jb
jb
cmp
inc
and
sbb
cltd
popf
loope
jecxz
inc
lods
enter
iret
sub
add
mov
mov
mov
xchg
or
mov
repz
cs
xchg
movsl
sub
ljmp
cmc
scas
pop
gs
lock
dec
repnz
push
ret
inc
mov
pushl
popa
lcall
lret
adc
adc
das
sbb
sub
mov
lcall
in
mov
dec
scas
addb
repnz
jmp
push
pop
dec
sub
xor
repnz
pushl
adc
fldl
out
sbb
ret
lods
or
mov
push
or
ljmp
push
mov
arpl
or
enter
testl
pop
rclb
loope
aas
xchg
cwtl
faddp
inc
stos
out
test
sub
sbb
aaa
std
fiadds
or
ficoml
enter
xor
jbe
mov
mov
sbb
std
mov
dec
xchg
das
xchg
into
xor
mov
scas
lock
das
jp
jg
call
aam
sub
movsb
nop/reserved
sbb
pop
jbe
scas
clc
jle
repz
push
repz
clc
shl
outsb
loope
jecxz
jecxz
adc
and
lcall
push
jecxz
je
or
test
xchg
popf
mov
xor
arpl
out
jmp
orl
rcl
sahf
xor
push
jo
ret
js
imul
outsl
dec
add
jp
repnz
xchg
das
ror
out
mov
sub
nop
sar
test
dec
push
test
xchg
pop
xor
cli
cmp
jmp
ja
cmpl
push
test
xchg
iret
inc
lods
movsl
ret
inc
pushl
ljmp
inc
push
hlt
and
shrl
sahf
ljmp
or
outsl
or
call
daa
inc
xor
dec
imul
cmc
pushf
das
and
mov
int3
fwait
mov
nop
mov
cli
out
jp
dec
sub
shrl
jecxz
dec
call
xchg
mov
decl
pop
and
cmpsl
fldl
out
add
arpl
adc
popf
inc
jmp
jl
jno
pusha
inc
sti
pushl
jno
ds
add
mov
dec
sbb
adc
mov
call
aas
sbb
nop
rorb
sub
add
test
fs
and
pop
mov
incl
ret
dec
fs
negb
pop
ror
mov
inc
pop
push
pop
loope
pop
jo
cmp
pop
andl
fidivs
push
xor
fxch
ljmp
cli
push
ret
adc
dec
pop
test
add
out
mov
jmp
pushl
sbb
push
aaa
lods
dec
inc
seta
fwait
mov
pusha
push
idivb
jl
jae
inc
push
mov
sub
insl
mov
add
popa
loopne
xchg
jno
imul
add
incl
xlat
enter
enter
sbb
fldt
pushl
mov
push
jo
pushf
mov
sbb
dec
mov
pop
xor
ss
push
aam
scas
sarl
out
jmp
ljmp
aas
mov
sub
add
cmp
mov
test
call
jno
cmp
movsl
cmpb
pop
sets
sbbl
rorb
ja
sbb
decl
fcomi
test
xchg
adc
push
int3
out
jae
and
jne
out
jge
dec
jle
mov
push
pop
add
in
mov
cmp
insl
insl
mov
imul
cmpsb
mov
mov
lcall
hlt
inc
cmp
addr16
and
js
not
jp
repz
ja
jl
ret
xchg
jae
arpl
adc
inc
mov
test
sbb
sbb
xor
fcomip
pushl
sti
loopne
xor
clc
sbb
nop
stc
es
mov
loop
and
lcall
jl
js
movsb
lahf
fildl
out
fadd
inc
jmp
inc
pushf
sbb
jg
movsb
popa
ljmp
sub
jo
push
in
dec
test
push
xchg
fs
call
ds
xchg
test
test
rcr
xchg
aas
fcoml
xor
int
push
lock
ds
push
ret
test
arpl
stos
mov
push
pop
in
mov
pushf
xchg
cmp
aaa
cmp
ficompl
subb
xor
mov
sbb
pushl
sbb
punpckldq
xchg
push
loope
pushl
adc
jmp
imul
ficoml
adc
or
call
js
loope
and
or
adc
sbb
out
cpuid
pop
shlb
decb
lock
push
push
leave
fistpl
lret
popf
fnstcw
pusha
jnp
cmp
or
jge
fstpl
or
push
dec
dec
inc
inc
jmp
movsl
dec
ret
icebp
mov
fnstsw
ljmp
aaa
or
xchg
das
jno
sti
mov
cltd
repz
cmc
lods
andb
pop
xor
in
decb
lahf
xchg
and
repnz
push
outsl
inc
cwtl
add
jbe
add
pushf
ljmp
mov
clc
pop
loopne
ja
push
jno
nop
je
and
pop
push
fucomp
enter
adc
sub
test
popa
mov
sbb
call
popf
add
xlat
out
test
or
adc
lahf
jl
dec
daa
push
lret
dec
lock
imul
sub
jmp
mov
idivl
inc
dec
xchg
or
fwait
jge
loop
call
lcall
pop
and
xor
push
shll
out
mov
rorl
xchg
dec
push
leave
roll
jnp
imul
push
mov
jmp
mov
idiv
lds
idivb
jnp
sub
or
in
clc
mov
push
mov
jnp
sar
ljmp
stos
or
adc
sahf
push
movsl
test
lds
insb
inc
out
in
out
push
ja
call
push
leave
pop
add
xchg
clc
test
sbb
call
cmp
push
pop
and
loope
or
lea
adc
pop
hlt
mov
insb
mov
imul
cmpb
xorl
mov
cwtl
xchg
sahf
sti
xor
int
push
lret
xchg
sar
jns
cmpsl
bound
outsl
and
movsb
enter
je
sbb
je
movsl
push
cld
inc
mov
or
out
mov
sbb
adcb
call
sbb
jmp
sbb
rcrb
xor
dec
test
mov
or
push
in
stos
fistpl
mov
jmp
jne
rcll
lcall
loop
loope
shlb
jp
insl
outsl
aam
cmpsl
es
pop
xor
decl
das
mov
push
cmp
out
in
cmp
jl
push
jl
or
daa
ss
fwait
incb
sub
xor
dec
adc
pushf
iret
cmp
cmc
incl
xor
daa
js
gs
jb
fsts
repz
cmpl
inc
ljmp
adc
mov
ljmp
divl
sbb
decl
fdivl
dec
lods
std
add
add
inc
jg
ss
dec
arpl
ljmp
adc
nop
aas
test
pop
inc
cmp
push
pusha
adc
call
aad
mov
cmpsb
jns
js
daa
dec
in
mov
imul
mov
ret
repnz
in
push
int3
sti
ljmp
andl
xor
fwait
mov
hlt
push
jge
movsl
cmp
mov
and
rclb
push
stos
shlb
call
push
xchg
scas
sarb
mov
in
cmp
adc
jle
dec
movb
xchg
ss
mov
leave
mov
decl
fdivrs
mov
cwtl
cmp
xor
mov
add
ljmp
fs
repnz
push
sbb
adc
jns
jle
rcrb
divb
ds
imul
push
stc
imul
rcrb
fidivl
xchg
in
mov
outsb
scas
incl
movsl
mov
movsl
mov
fwait
call
jo
jo
pop
loope
inc
iret
lcall
call
sub
jb
int
gs
test
ja
out
aad
add
inc
jae
decl
mov
add
push
les
inc
cli
loop
mov
adc
repz
sbb
mov
jmp
and
mov
sarb
cwtl
stc
mov
orb
push
dec
fbstp
sbb
xor
jo
in
gs
popa
or
mov
xchg
jle
or
incl
or
rorb
xchg
and
lahf
sti
inc
notl
and
cmp
outsl
das
adc
int
call
mov
imul
xor
add
add
jle
aam
popf
lock
jmp
adc
push
aad
pop
cmp
jecxz
sbbl
sub
fcomip
sub
aad
mov
push
or
cmp
or
jmp
mov
scas
inc
in
xor
not
sub
andl
out
xchg
incl
movsl
or
enter
push
scas
aaa
mov
stc
jne
jecxz
mov
or
push
mov
decl
je
jmp
mov
or
inc
cmp
cltd
incl
outsl
dec
insl
orb
push
inc
shlb
sub
data16
adc
pushf
and
outsl
cli
jp
inc
test
mov
sti
dec
dec
rcpps
xchg
int
adc
aas
jnp
jg
mov
out
cmc
mov
push
or
out
push
ret
xor
jo
int
pop
sub
cmp
xchg
in
jle
shr
pushf
ljmp
sub
fs
sub
add
pop
jnp
mov
aas
add
jns
das
lods
call
or
add
and
sbb
rcrb
das
and
iret
cmp
jmp
and
mov
push
arpl
xorl
rcll
push
xchg
stos
in
sub
negb
subl
mov
in
pushl
mov
lods
ret
std
xchg
mov
scas
fisttpll
xchg
bswap
pushl
mov
xor
repnz
mov
xchg
addr16
mov
adc
or
pop
jmp
push
jo
cmp
movsl
mov
jge
inc
roll
ret
dec
or
enter
fwait
call
daa
and
cmp
push
clc
sub
icebp
movsl
stos
call
pop
jne
pop
or
sbb
cmpsl
pop
sub
mov
push
jb
fldcw
lock
xchg
adc
or
je
xchg
mov
std
dec
dec
mov
sub
aas
mov
mov
ds
shll
divb
xchg
adc
inc
or
dec
stc
lock
or
bound
mov
xor
inc
or
or
push
mov
ds
jmp
mov
pushf
vaddsubpd
ss
mov
jmp
mov
cltd
and
xor
pop
ljmp
sbb
in
adc
push
sbb
lcall
jle
mov
sbb
xchg
test
sbb
int3
jp
test
pop
dec
mov
add
cmp
push
and
xchg
test
xchg
xor
jo
int3
mov
in
or
imul
lock
lcall
cmpl
popa
sbb
hlt
test
mov
sbb
mov
mov
ss
mov
add
sub
mov
xchg
mov
mov
inc
jbe
iret
scas
fwait
in
sahf
pop
cmp
cmp
rcll
popa
ljmp
ljmp
aam
notb
in
and
pop
ja
pop
into
xor
and
stos
sti
push
call
push
cld
sbb
test
ja
fwait
adcb
add
lods
in
in
ficompl
jg
call
cmp
into
lods
je
add
aad
stc
aad
pop
loop
inc
push
xchg
outsb
xchg
out
cli
ljmp
mov
or
jle
mov
fidivl
lcall
jbe
sbb
loope
stc
and
sub
shlb
pop
push
pushf
popl
jmp
incl
imul
cwtl
inc
insl
std
sbb
daa
push
fwait
movsl
mull
clc
push
notl
daa
cmp
jmp
and
inc
das
mov
int
imul
inc
mov
loopne
inc
call
sbb
sbb
testl
cwtl
insb
mov
cld
xorb
cld
jg
lock
js
mov
loope
stc
inc
imul
jmp
mov
cmp
inc
inc
inc
sbb
add
jns
mov
lcall
outsb
les
sbb
jecxz
dec
nop
add
gs
sbb
jb
enter
call
adc
xchg
ljmp
test
test
out
stos
shll
mov
or
insb
xchg
jns
mov
jb
dec
stos
popf
shll
dec
inc
lea
push
or
adc
hlt
or
flds
pop
xchg
mov
cltd
push
pop
xor
cltd
cli
imulb
in
and
lcall
movsb
das
pop
cmp
jle
add
xchg
push
add
pushf
mov
loopne
mov
inc
loop
inc
out
xor
orb
cmp
cmpsl
insb
adc
dec
sub
incl
mov
aaa
push
adc
mov
inc
xor
loopne
das
loopne
inc
dec
ds
imull
jnp
mov
ret
mov
scas
xchg
shl
adc
mov
sbb
sub
and
or
xchg
ja
sbb
push
pop
pusha
aad
xor
ljmp
pop
xor
push
outsl
insl
iret
dec
jnp
add
addb
pusha
mov
adc
cmpsb
sti
insl
adc
add
push
xchg
sti
jecxz
pop
sub
cmpsl
cld
icebp
pop
insl
add
jmp
incl
fcoms
out
or
lret
into
gs
dec
mov
pop
add
jmp
or
push
hlt
sub
ds
flds
test
inc
fidivs
pushl
call
or
repz
cmp
out
ror
mov
clc
jg
jns
imul
lcall
xor
int
rolb
mov
mov
imul
fdivrs
mov
ret
mov
decl
mov
insl
adc
addr16
lods
sub
jg
lds
push
mov
jo,pn
les
mov
jb
add
mov
stos
dec
jl
bound
mov
mov
sub
inc
xchg
in
pop
leave
xchg
mov
cmp
mov
push
sbb
cmpsb
shlb
je
ds
dec
outsb
sub
pop
push
call
sub
add
cli
pop
add
sbb
sub
decl
push
mov
fsub
stos
shrb
mov
push
xchg
push
push
mov
pop
push
icebp
jmp
fstpt
mov
add
mov
out
ljmp
fnsave
pushf
jae
mov
out
mov
adc
mov
lahf
mov
lea
and
stos
data16
rcrb
mov
bound
sbb
dec
push
dec
insl
xor
sbb
outsl
cld
out
jmp
setnp
or
mov
jg
nop
sub
mov
add
fwait
sub
clc
jmp
cmpl
sub
ds
push
hlt
add
xchg
mov
add
jmp
inc
xchg
xor
add
add
fildll
jp
ja
dec
push
cmpb
mov
stc
rcrb
mov
stos
push
icebp
popf
or
out
fistpl
sbb
aaa
repnz
cs
repnz
hlt
adc
dec
ret
rol
out
sbb
call
bswap
hlt
xchg
cmp
push
mov
in
or
jg
dec
fldt
sub
cli
jmp
jmp
pusha
nop
mov
lock
add
sbb
data16
mov
mov
xor
inc
lret
sub
adc
mov
inc
lods
pop
cmpsb
lods
add
out
ficomps
or
xchg
xchg
flds
pop
fisttps
add
and
sbb
push
dec
loopne
or
int3
sub
inc
sahf
std
jg
cwtl
push
in
cmc
push
sub
movsl
cmpsl
lcall
xchg
scas
rcr
aad
mov
and
dec
pop
ds
jle
movsl
xor
ljmp
mov
ja
xchg
and
push
jae
pop
shl
pop
mov
and
les
fs
addr16
cmpsb
cli
jo
xor
xor
sub
or
scas
mov
mov
in
add
movsl
les
jmp
pop
add
inc
cwtl
int3
or
and
es
ja
dec
decl
xchg
push
jnp
ljmp
mov
cs
jnp
movsb
loop
adc
bound
xor
xchg
out
int3
xchg
sbb
cmp
or
pop
bound
xchg
jmp
imul
and
adc
mov
ljmp
xchg
sbb
ret
sub
mov
ret
add
in
loop
movsl
nop
addl
push
scas
lret
popa
xchg
je
leave
jmp
jbe
sarl
mov
fldl2t
sbb
jbe
pop
aas
push
cmp
xchg
pop
add
xor
test
cmc
dec
sub
hlt
dec
fucom
dec
mov
in
mov
xor
das
fisttpll
fistps
push
stos
out
cli
push
test
sub
lods
test
mov
cmp
icebp
or
lcall
call
in
mov
int
push
jbe
adc
inc
into
aam
jae
imul
jmp
aaa
push
scas
aaa
fnstcw
in
sahf
test
push
lret
pop
into
sahf
lcall
fsub
orb
out
or
pop
mov
adc
add
mov
lea
incl
mov
stc
mov
inc
push
loop
xchg
cmpsl
mov
xor
lcall
cmp
les
dec
or
leave
lret
xchg
push
push
fcompl
mov
cld
cmp
adc
mov
decl
mov
fnstsw
jl
aas
das
addr16
lds
xor
sub
pop
jl
cmp
incl
mov
inc
mov
fldenv
fsubp
mov
pop
sbb
lcall
pop
cmpsb
pop
push
pop
mov
clc
lcall
sbb
pop
xor
lock
decl
into
or
scas
ret
mov
or
mov
sar
cmp
divl
jmp
mov
lock
sub
call
and
popf
in
aaa
in
mov
popf
es
pushl
int
icebp
xlat
xchg
lcall
xor
xchg
psubw
div
pop
mov
call
push
adc
dec
cmp
add
addr16
mov
xchg
or
faddp
in
lret
out
push
add
jmp
daa
sbb
xor
int3
lahf
insb
or
hlt
fbld
jg
test
out
sub
mov
ss
push
ljmp
push
pop
sub
pop
xchg
mov
push
mov
adc
imul
jmp
call
outsl
xchg
xchg
xchg
out
pop
mov
fisubs
ja
sbb
int
mov
mov
mov
insb
mov
call
fidivs
loopne
int3
jb
fsubl
mov
push
dec
fcomps
lahf
pushl
fbld
dec
fstl
xchg
xchg
pop
mov
jmp
int3
lock
mov
mov
or
stos
xchg
fisubl
inc
call
jecxz
out
cmp
and
and
or
ljmp
mov
push
repz
lcall
fisubrl
mov
pop
movsl
imul
out
mov
decl
jbe
ficompl
ficomps
dec
fadd
out
cwtl
jge
ljmp
push
jmp
adc
jo
jmp
xchg
mov
push
in
mov
adc
xchg
push
mov
xchg
sbb
pop
out
and
mov
push
je
sbb
out
scas
scas
add
andl
pushl
aaa
sbb
mov
push
fmull
subb
ss
inc
cli
push
cmp
pop
dec
cmc
cmp
popf
jae
cltd
or
cmp
into
pop
jne
test
call
loopne
pop
jb
pusha
mov
jmp
or
and
mov
test
call
sub
inc
stc
jp
ljmp
in
sbb
sub
test
push
pushl
xor
js
mov
dec
adc
jo
cmp
fstps
inc
data16
sub
jno
ds
pop
cmp
test
sub
pop
xor
std
ljmp
roll
lahf
enter
push
sub
xlat
je
xor
inc
cmp
ja
pop
mov
pop
mov
push
add
jns
lea
cltd
sbb
jmp
stos
mov
inc
jno
data16
fwait
sub
in
mov
out
cli
jg
mov
push
leave
mov
decl
adc
lds
sbb
push
scas
mov
xor
inc
inc
movsb
sbb
mov
aad
add
mov
pushl
std
cmp
add
and
test
mov
sbb
neg
stos
inc
into
xchg
andb
jl
xchg
mov
add
sub
jle
sub
pop
pop
repz
pop
xor
or
push
push
lahf
cmpsl
imul
push
clc
xchg
or
push
inc
orb
mov
jle
popa
sub
mov
mov
xor
fidivrl
lock
jno
in
cltd
inc
and
data16
in
in
call
pop
fnsave
aad
cmp
push
mov
mov
cmp
popa
js
and
xor
je
mov
add
xchg
jno
sub
push
test
mov
incl
das
pop
sbb
in
push
xlat
addr16
inc
push
xchg
das
pop
pop
xchg
sti
test
add
xor
insb
sub
bound
fs
int
xchg
js
xor
repz
js
negb
mov
jmp
inc
into
lahf
aaa
adc
or
cmp
xchg
std
lock
fld
clc
imul
outsl
pop
push
sarb
pop
cs
cwtl
jo
lcall
pop
cmpsb
fbld
movsb
fcmovnu
cmp
lret
jbe
mov
lahf
jo
incl
and
repz
daa
xor
cmp
mov
lods
test
or
sbb
out
xlat
or
cs
popf
mov
aad
std
mov
push
ds
xchg
mov
divb
mov
push
add
insl
out
aaa
cmp
push
mov
arpl
jl
inc
leave
int
orl
jnp
fwait
mov
sub
jnp
jne
cs
sbb
jmp
xor
jge
mov
and
and
ficompl
mov
pop
lea
jno
sub
mov
pop
arpl
aaa
out
movsb
cltd
fisubrs
jo
addb
cli
ljmp
out
pop
cmpsb
push
pop
or
xchg
xlat
cli
lret
pop
dec
push
mov
xchg
xchg
push
mov
aaa
xor
lods
cmp
mov
mov
pop
loope
xor
jge
mov
mov
cmp
fldl
imul
fcomps
jg
push
mov
test
dec
dec
inc
push
scas
xor
sub
cmp
vextractf32x4
cmp
mov
imul
loope
loop
mov
push
in
mov
fidivs
and
ljmp
mov
jo
mov
mov
cli
out
fs
pusha
cmpsb
push
call
fsubp
sbb
or
xlat
ss
inc
rcrb
sub
or
cld
jg
loop
hlt
aas
xchg
arpl
xor
sub
sub
call
mov
loope
and
adc
roll
xor
repz
dec
aaa
ljmp
sbb
ds
add
mov
mov
movsl
in
cli
lods
out
icebp
jmp
mov
dec
cmp
mov
push
mov
sti
mov
xlat
push
jb
les
cmp
mov
xor
stos
out
add
decl
pusha
mov
jg
jno
adc
arpl
mov
xlat
dec
hlt
decl
jecxz
or
pusha
jge
push
push
and
push
and
nop
cwtl
xchg
mov
in
ljmp
jnp
int3
lcall
outsl
xchg
xor
xchg
mov
xor
cmp
mov
inc
dec
test
sbb
cmp
loopne
imul
popa
daa
or
call
roll
out
lds
cltd
aas
ror
stc
and
dec
sub
popf
pushf
xor
popa
jg
cld
notl
test
sub
sarb
in
mov
push
jp
inc
sub
inc
xchg
dec
and
sub
lcall
jle
xchg
push
pop
enter
add
jmp
mov
mov
jmp
adc
and
inc
es
xchg
mov
jg
arpl
lcall
mov
ret
sbb
mov
mov
aas
iret
adc
mov
dec
xlat
push
cmp
lcall
pop
sub
xchg
mov
out
xor
int
ljmp
pusha
mov
mov
push
ficoms
ss
mov
xorps
push
pop
enter
jae
and
call
xchg
pop
mov
mov
ds
add
or
fwait
add
decl
mov
imul
pop
push
movsb
in
fstpt
jg
and
das
push
stos
fs
push
fmulp
js
movsl
popf
andb
repz
mov
movsb
incl
aaa
loop
mov
jb
lea
inc
loop
out
dec
lea
and
mov
mov
mov
jne,pn
fnsave
test
push
inc
nop
call
out
xchg
int3
xor
mov
xchg
test
cs
decl
mov
enter
dec
mov
push
mov
lods
adc
inc
mov
imulb
lcall
mov
std
aas
pop
cli
mov
mov
mov
or
jne
lret
cmp
cld
pcmpeqb
fs
fldl
int3
xor
adc
call
repz
sub
and
xchg
push
int
inc
mov
cwtl
jmp
sbb
test
test
lret
xchg
mov
pop
xlat
jae
or
mov
jmp
imul
enter
shrl
mov
and
dec
mov
jbe
ds
ljmp
rol
mov
jecxz
xchg
jno
or
adc
test
insl
add
call
aaa
test
and
out
inc
adc
cltd
ljmp
scas
add
xlat
jp
ljmp
scas
int
mov
xchg
mov
adc
push
in
mov
sub
inc
mov
nop
and
fsubr
sub
push
inc
jg
stos
cmp
dec
incl
push
add
xchg
cmpsb
jl
push
push
andl
out
add
jg
mov
dec
sub
in
test
fcoms
es
decl
fisubs
pop
iret
leave
mov
mov
fsubl
out
lock
lret
out
divb
les
das
add
cld
push
mov
out
cmp
cmpl
enter
sub
sub
or
outsb
lock
sar
push
sbb
aad
or
pusha
shrb
mov
jmp
mov
sbb
ffreep
faddl
mov
hlt
movsb
rorb
add
loopne
push
xchg
add
mov
ljmp
push
jg
add
scas
xor
fs
mov
mov
call
loop
adcb
mov
repnz
push
out
insl
ja
xchg
dec
push
mov
stc
or
call
shrb
sub
ret
or
decl
sub
jb
icebp
loopne
sub
mov
and
push
ja
lahf
lods
call
ljmp
sbb
sub
mov
ficomps
ret
les
cli
xor
mov
mov
idiv
ret
jb
xlat
js
popa
mov
pop
inc
cwtl
pusha
pop
xchg
loopne
imul
jle
shlb
mov
mov
fildl
inc
ljmp
mov
push
adc
jns
sub
std
call
jo
lret
dec
push
mov
inc
inc
mov
insl
es
mov
lods
inc
push
ljmp
jmp
cmp
pop
jmp
loopne
dec
in
cmp
lds
lcall
inc
sar
pushf
rol
pop
mov
aas
add
jns
lahf
inc
imul
inc
les
jmp
and
mov
into
lock
in
mov
jmp
rorl
fimull
lret
test
inc
pop
pop
div
fstpl
aad
lods
aaa
jno
sahf
addr16
lds
fcomip
ljmp
loope
and
inc
out
jecxz
mov
mov
jb
xor
mov
inc
cmp
test
xchg
mov
shrb
push
push
notb
cmp
mov
scas
cmp
add
xchg
ret
dec
sub
clc
fidivl
in
mov
das
stos
or
jo
cmp
subb
mov
das
mov
mov
cmp
xor
outsb
call
pushl
dec
jno
popf
dec
movsb
dec
sti
mov
in
fidivrs
aas
push
inc
sbb
jbe
decl
ja
insb
cld
pushf
mov
sub
ret
inc
adcl
test
retw
dec
and
inc
jns
subb
andl
std
mov
jmp
lcall
sbb
scas
clc
cmp
mov
jnp
jmp
decl
lcall
shrl
cmc
aam
jmp
fs
in
int
cmpsb
jmp
sub
sub
vpunpckhwd
movsl
xlat
lcall
sub
decl
outsb
xchg
rcrl
jge
push
daa
mov
rclb
out
popa
xchg
stos
mov
ud0
lcall
nop
out
sbbl
push
ss
call
xchg
clc
fcomip
mov
clc
aaa
mov
xor
adc
rcl
rol
jl
mov
mov
subl
push
jp
gs
mov
add
out
jmp
aam
jo
jmp
fldcw
test
inc
lea
pushl
mov
mov
ljmp
out
sub
dec
jg
das
cli
xor
sub
mov
add
xor
mov
push
pop
jns
popf
sbb
pushl
cwtl
test
push
pop
fstpl
sub
test
push
push
pop
inc
push
dec
push
jmp
mov
bound
mov
mov
lock
sbb
xor
rcr
or
call
and
ja,pn
pop
add
js
cmp
mov
mov
nop
repz
out
mov
fdivrs
daa
and
add
lahf
mov
cli
stos
xchg
mov
inc
pop
xchg
jmp
pushl
loop
xchg
xchg
inc
jmp
inc
cmp
test
pop
fs
push
jne
hlt
std
add
sub
scas
in
orb
add
lds
xor
jg
rcr
dec
loop
repnz
push
outsl
stos
dec
push
dec
andb
adc
cmpsl
inc
mov
cld
push
dec
testl
xchg
dec
push
dec
sbb
push
dec
inc
loope
push
icebp
negb
inc
repnz
adc
or
jnp
sub
jbe
mov
leave
jle
mov
incl
shlb
mov
jmp
pushl
xchg
pop
xchg
jbe
jl
mov
inc
data16
sub
and
into
jmp
inc
push
sub
shrb
jmp
movl
dec
dec
testb
decl
push
in
or
decb
push
jge
notb
xor
in
or
dec
decl
sub
mov
je
or
dec
loop
call
fwait
pusha
bound
ret
ret
rep
dec
jno
cmpsb
xor
divb
cmpl
cld
jg
mov
cmp
adc
sti
dec
xchg
jae
fmull
lcall
ja
pop
cmp
xor
in
pop
or
imul
ljmp
cmp
inc
or
cld
xchg
cmp
xor
inc
ja
inc
push
xor
jmp
sbb
inc
subb
jae
dec
mov
adc
sub
icebp
pop
mov
mov
jmp
fnstenv
xor
and
xor
iret
fildll
andb
call
or
cmp
stos
dec
push
test
xchg
pop
pop
out
sub
jmp
pop
lcall
pop
mov
scas
sbb
or
int3
int3
fisubl
pop
add
jno
fsubs
push
jg
addr16
pop
inc
cmp
inc
xchg
adc
sub
jg
mov
sbb
dec
sub
outsl
icebp
sub
js
mov
cld
fstps
jno
mov
dec
pushf
pop
push
dec
and
cmp
ret
inc
sub
in
imul
test
out
nop
jmp
std
jmp
inc
bound
mov
enter
pusha
sbb
and
andb
jb
jg
push
cli
rcll
fcmovu
stc
jmp
add
add
sbb
jmp
addr16
dec
cmpsl
rcr
xor
push
shlb
or
pop
lret
xchg
xor
fldt
incl
call
inc
push
sbb
aas
mov
ss
stos
mov
inc
repz
push
dec
or
jg
sbb
mov
mov
dec
and
mul
cmpl
dec
jo
sub
data16
das
jmp
adc
in
mov
push
add
lcall
mov
sbb
imul
jmp
add
pop
or
incl
addb
pop
push
pusha
outsl
bound
shl
hlt
pop
dec
in
loop
jmp
push
xor
pop
scas
outsl
loop
lcall
xchg
push
add
push
test
call
addr16
xlat
popf
sti
lret
add
movsl
rorl
leave
lds
pop
inc
xchg
movsb
jae
inc
cld
ret
pushl
inc
imul
lods
sub
ret
push
mov
shl
lock
adc
arpl
lcall
xorb
nop
jge
inc
je
into
pop
or
sahf
arpl
call
or
mov
xor
adc
cwtl
je
rcrb
mov
pop
jo
inc
pop
int3
data16
lret
lds
pop
push
sub
and
shl
inc
inc
js
insb
cmp
lea
leave
out
mov
gs
pop
dec
das
push
mov
add
mov
xchg
daa
bound
jo
mov
scas
xor
aaa
cld
adc
clc
mov
outsb
inc
dec
movsl
pop
or
mov
into
in
inc
and
add
mov
in
xchg
pop
pusha
fidivs
cltd
lcall
inc
mov
dec
bound
rcr
mov
xor
pop
adc
adc
dec
push
sar
push
scas
or
mov
add
scas
rcl
int3
xor
pop
push
rcr
cs
jb
fsubrs
pop
inc
decl
dec
inc
lea
loope
mov
dec
aad
xchg
xchg
cwtl
add
imul
repz
into
push
call
dec
fsubrl
xlat
pop
shll
xchg
dec
int
insb
mov
or
mov
std
data16
rclb
cmp
or
js
in
add
or
test
mov
lods
add
inc
rcll
mov
cmp
inc
mov
mov
add
fs
in
pop
adc
xorl
jg
jmp
gs
stos
ds
stc
jp
or
or
fists
xchg
push
aam
lret
push
jmp
incl
sub
mov
jne
jne
xor
or
and
insl
outsl
fstpl
mov
call
adcb
sub
push
decb
xchg
sbb
mov
cmp
jmp
add
enter
sahf
loopne
cmpsb
xchg
mov
ss
arpl
and
jmp
mov
movsb
pop
mov
fmull
mov
arpl
xchg
pop
xor
dec
call
cmp
shl
and
pop
xor
std
sbb
cmpsb
pop
je
aaa
ds
adc
cltd
sbb
aam
lcall
or
jge
popa
inc
mov
jmp
fiaddl
jge
hlt
xchg
rcl
addr16
jno
imul
dec
aaa
stos
sbb
decl
ds
sbb
jns
mov
arpl
add
push
lds
mulb
dec
repz
call
hlt
mov
lods
adc
adc
jo
adc
je
rolb
dec
cli
sbb
mov
pop
pop
cwtl
mov
jmp
stc
popa
inc
bound
int3
popa
push
les
in
adc
dec
or
fwait
add
jle
mov
jg
out
or
sub
pushf
lods
and
fimull
out
adc
mov
imul
lcall
xlat
xchg
out
mov
lds
mov
sti
mov
and
loop
sbb
aas
or
jmp
movsl
dec
rcrl
jnp
mov
out
dec
xchg
adc
bound
scas
sub
pop
std
fcomip
mov
or
cmc
aaa
negl
movsb
popf
lahf
repz
popf
inc
call
les
ja
add
xchg
dec
fnstsw
les
lock
loope
insb
sahf
jne
pop
or
aad
andb
shr
cld
inc
outsl
incl
pop
clc
shlb
outsl
das
int3
js
sbb
iret
shl
repnz
jmp
add
mov
dec
cwtl
add
push
jno
jbe
scas
cmp
sahf
lcall
sub
outsb
adc
or
outsb
lret
jmp
add
adc
loopne
imul
pop
push
pop
jns
addr16
test
pushl
imul
mov
test
std
hlt
mov
mov
xor
add
inc
call
dec
or
push
cmc
cmc
add
js
sbb
test
xor
mov
mov
dec
push
and
scas
das
pop
aas
pop
mov
enter
test
or
jmp
jb
inc
fdivrl
test
aad
outsl
test
pushf
stos
fcompl
incl
pushf
sahf
frstor
das
add
cltd
shlb
jns
ljmp
jp
fs
negl
frstor
adc
fbstp
jp
add
and
call
in
hlt
jge
enter
outsl
adc
nop
cmp
cmp
test
mov
jle
outsb
ljmp
pop
inc
out
cli
bound
mov
shrb
dec
jl
loopne
rolb
mov
mov
xchg
sub
test
out
xchg
add
lcall
fldcw
dec
mov
repz
popf
lcall
aaa
sbb
pop
in
xor
dec
jmp
repz
xchg
or
push
loopne
mov
lock
incl
data16
mov
leave
in
mov
xor
xchg
push
in
push
inc
insb
dec
lcall
addr16
sbb
push
xchg
lahf
sbb
stos
lcall
sub
xchg
push
and
popf
mov
aaa
jb
fwait
cmc
movsl
mov
and
test
in
push
pop
into
or
pop
mov
sbb
mov
mov
icebp
lods
cld
data16
or
out
jge
les
cmp
pop
jecxz
xor
pushl
pop
jecxz
rol
loopne
pop
sbb
push
std
sbb
xchg
inc
xor
mov
sahf
leave
call
lock
call
sub
xor
cmp
xchg
xchg
jg
mov
xor
xchg
ja
inc
into
mov
das
mov
pushl
push
xor
sub
out
sub
jp
loopne
or
cmc
mov
sbb
fldcw
pop
xchg
mov
mov
push
xchg
xor
ja
xchg
in
add
pop
rcr
jp
mov
ljmp
mov
pusha
cmpsl
out
subb
imulb
mov
out
int3
enter
lcall
fbld
jo
test
repz
hlt
in
ret
mov
lcall
mov
cmp
es
inc
jno
mov
adc
inc
daa
mov
dec
imul
ljmp
pop
cli
fs
mov
mov
in
mov
mov
shlb
arpl
es
loope
imul
or
mov
inc
push
pop
push
sbb
in
imulb
push
dec
xor
jmp
inc
xchg
pop
mov
xor
imul
icebp
lods
mov
lret
es
les
movsl
mov
adc
mov
int
cmp
jg
scas
ja
pop
and
scas
push
cmp
out
lahf
cmp
mov
mov
cmp
clc
xor
fucom
out
adc
push
mov
push
hlt
or
pop
jmp
dec
test
and
stc
push
xor
call
mov
cwtl
ret
movsl
inc
outsb
call
inc
sbb
iret
in
jo
shll
dec
push
mov
jl
fs
mov
push
dec
dec
mov
sbb
test
fs
mov
incl
dec
push
add
adc
ret
mov
loopne
push
jae
dec
decl
pushf
ror
sbb
aam
push
imul
pop
inc
add
cs
arpl
cwtl
sub
mov
adc
incl
vpackuswb
push
clc
cli
mov
cmc
ljmp
bound
ja
shr
decl
lock
lea
and
jo
xchg
rcll
add
cltd
incl
sub
iret
lret
loop
push
cmp
jne
aas
mov
hlt
outsb
daa
sub
or
ja
pop
fsts
sahf
push
and
test
lods
add
inc
out
mov
call
fadds
mov
sbb
jge
testl
mov
leave
loope
push
cli
sbb
fisubl
sar
lcall
mul
mov
pop
dec
pushf
and
ljmp
rcrb
icebp
sarl
jg
cld
icebp
dec
xor
sub
aad
call
adc
pop
pop
or
push
cmp
pop
jge
dec
shl
insl
mov
sub
mov
dec
push
out
xor
test
pop
ja
sar
fcoms
pop
in
pop
sub
fisubl
ds
jp
fbld
push
sub
gs
xor
bound
imul
call
xor
push
movsl
add
add
jae
cmp
xor
leave
add
inc
enter
cld
cmp
fsubrp
xlat
repz
insl
test
mov
into
jge
stos
incl
pop
lahf
cld
sbb
sti
inc
rcr
or
jl
or
inc
push
mov
lock
loope
sub
sbb
jge
xchg
mov
icebp
pop
mov
jmp
ljmp
clc
or
jl
push
movsb
xchg
lods
sub
insb
inc
and
mov
jns
xor
or
xchg
adc
out
add
or
push
pop
pop
stos
lahf
pop
rol
sbb
loop
cmp
xor
js
mov
lods
jns
lret
jg
adcl
cmp
jmp
stos
xor
cli
insb
ss
dec
aam
jge
in
js
je
jmp
pop
test
push
add
in
cld
cmp
repz
adc
jmp
sub
dec
popf
sbb
mov
and
call
movsl
xchg
pop
enter
sub
cld
fdivl
stos
push
xor
inc
and
pop
push
pop
xchg
push
test
sti
scas
pop
andps
or
mov
lret
ds
lock
add
call
lret
test
int
xor
sbb
out
pop
bound
mov
sbb
push
ljmp
pusha
std
dec
cmpsb
lods
enter
inc
mov
in
mov
mov
js
inc
lret
sbbb
ljmp
cmp
sbb
jmp
lret
xchg
mov
or
or
mov
decl
inc
lcall
test
and
dec
xlat
imul
insl
out
clc
add
clc
jo
mov
pop
and
xchg
cmpsb
std
mov
pop
xor
dec
in
loope
ficoml
rolb
cmp
loop
mov
fisubl
jge
adc
add
das
mov
aam
mov
incl
loopne
insb
push
jb
in
mov
incl
cmp
rcrl
shlb
dec
roll
adc
lcall
mov
lock
jl
dec
sbb
inc
jg
sbb
push
inc
xlat
jmp
cmp
rcr
fs
inc
dec
xchg
incl
and
push
rorl
cmpb
ss
in
sbb
sbb
sbbb
add
or
add
mov
inc
inc
out
jg
jmp
xor
out
int3
push
sbb
mov
in
mov
jmp
inc
ret
adc
int3
cmp
adc
sub
mov
orl
push
incl
pop
inc
sbb
test
mov
xor
cli
incl
fisttpl
ret
mov
adc
cs
fcomip
stc
mov
dec
in
in
pushl
push
loopne
mov
cmp
pop
dec
daa
adcl
loopne
mov
xchg
inc
mov
test
mov
dec
pop
cmp
pop
lret
jnp
sub
jg
ja
orl
pop
or
adc
pop
std
incl
out
mov
insb
rol
out
popa
add
ja
leave
sub
jnp
cmp
mov
adc
in
loope
mov
cltd
lahf
push
add
sub
jns
ljmp
mov
cmp
xor
shlb
lock
lods
mov
lcall
dec
mov
mov
fisttpll
cmp
and
xchg
movl
add
pushl
adc
add
dec
loopne
scas
ljmp
repz
loop
call
jb
icebp
push
mov
inc
test
aam
clc
mov
sahf
xor
sub
pushf
loope
incl
mov
sbb
lods
push
bound
js
je
mov
mov
mov
jge
call
daa
lods
fildl
in
push
js
cld
xchg
add
sub
imul
lcall
mov
xor
inc
inc
jmp
add
sub
bound
or
in
xor
decl
or
or
jmp
lds
cmp
add
sub
jne
lret
out
pop
fucomip
mov
cld
aad
test
nop
xlat
xor
adc
jecxz
loope
mov
xor
adcl
sbb
gs
cmp
iret
aam
popf
ja
aam
ljmp
les
rolb
dec
hlt
ja
mov
cmp
in
pop
sbb
inc
sbb
add
out
sbb
outsl
insl
insb
sahf
pop
cs
incl
push
js
stos
add
or
jbe
in
bnd
dec
iret
sbb
jne
aaa
pop
testl
sbb
xchg
xor
pop
or
adc
xchg
fldt
mov
inc
pop
pop
imul
clc
decl
stos
and
lods
jmp
push
lcall
add
or
in
in
jae
in
and
cmpsl
notl
test
mov
pop
push
jmp
and
ss
pusha
xor
adc
jae
test
push
cmp
data16
mov
test
xor
incl
shl
push
movups
inc
clc
mov
ss
sub
cmc
mov
xor
jl
iret
in
mov
aaa
mov
je
mov
mov
int3
scas
sbb
dec
enter
scas
and
mov
daa
jmp
lds
rclb
jle
jb
adc
and
adc
aaa
enter
cld
lcall
flds
or
insb
fdivrs
ljmp
jbe
daa
iret
movsb
ret
add
adc
fisubl
test
adc
adc
ret
lahf
lret
test
rclb
test
outsb
push
andb
mov
add
jg
ret
loope
push
xchg
and
ja
mov
clc
xor
incl
cmc
cmp
inc
cs
mov
push
cltd
lds
scas
hlt
gs
pushl
outsb
xor
mov
xor
mov
dec
ss
sahf
test
add
or
cltd
sub
inc
push
cmc
stos
fcomps
push
cmp
rcr
jp
push
into
add
xchg
pop
in
mov
add
pop
test
inc
pop
cs
insb
push
call
fimuls
das
sbb
mov
lock
pop
ret
in
mov
xchg
jecxz
add
fiadds
dec
or
dec
popa
xchg
xchg
divb
fmull
xor
int
lea
ret
mov
mov
int3
rcr
int3
fcmovbe
push
out
xor
popf
xor
pushl
pop
call
xchg
test
cli
xor
pop
sub
movsl
je
arpl
ljmp
sub
mov
mov
or
lods
lods
sbb
outsb
sub
movl
mul
push
into
rorb
mov
cmpsl
mov
cwtl
mov
sbb
scas
adc
sar
decl
mov
js
jae
pop
xor
jb
push
mov
lock
scas
test
pop
in
sub
jnp
dec
or
fstl
std
aaa
fnsave
sub
xor
in
push
andb
ljmp
inc
push
aaa
lcall
push
jno
xor
mov
mov
sbb
lcall
xchg
stos
sbbl
fstpt
mov
sub
sub
xchg
sbb
insb
cmp
pop
pop
bound
inc
int
mov
sub
mov
pop
jno
les
jmp
mov
cmpsl
jno
dec
or
clc
sub
call
xchg
mov
jo
lret
insl
adc
mov
push
fsubp
sbb
rcll
inc
and
loop
push
imul
pushl
mov
mov
ffreep
dec
dec
aam
mov
xor
and
sbb
popa
roll
incl
xor
divl
mov
pusha
pop
dec
mov
cli
cmpl
outsl
sbb
mov
and
std
icebp
and
stos
fs
jge
jae
push
popw
rcll
std
add
je
scas
pusha
cld
outsb
cs
in
pushf
fstpl
push
cltd
bound
xchg
mov
cmp
xor
pusha
mov
pushw
sub
outsb
mov
inc
pop
movsb
scas
adcl
mov
mov
lret
xor
popf
sbb
lea
call
cld
arpl
push
fsubp
mov
loopne
leave
stc
into
bnd
pushl
mov
mov
lahf
insb
mov
sbb
outsl
addr16
mov
jmp
ljmp
jbe
imul
mov
push
adc
xchg
sub
jg
es
add
sub
sbb
out
std
pop
hlt
in
inc
mov
out
or
dec
call
inc
rcrl
add
xchg
mov
sbb
popf
pop
mov
xchg
ljmp
lcall
das
mov
sbb
sub
add
pushl
cld
and
fwait
jmp
xor
mov
fnstenv
push
mov
lret
pop
idivb
gs
movsl
jnp
push
mov
xor
pop
adc
iret
jmp
leave
outsb
mov
sbb
mov
add
mov
clc
and
and
addr16
sar
loop
incl
aaa
cld
xchg
aas
jmp
cmpsl
pop
dec
jl
arpl
lods
push
cld
pop
sub
leave
call
sbb
mov
add
add
loopne
adc
jmp
gs
sbb
movsb
mov
xor
push
clc
or
cwtl
data16
lods
ret
xor
pushl
cmp
dec
fs
repz
or
repz
leave
fstpl
pusha
in
cli
pushl
fiaddl
cmp
cmpsl
stos
aaa
test
ss
adc
mov
in
cmp
cli
test
xor
fst
jae
movb
pop
and
test
jns
dec
xor
jmp
gs
mov
popf
mov
aam
dec
scas
movsb
testl
pushl
les
shl
aad
fists
and
imul
jle
add
or
fwait
pusha
in
addr16
in
sub
ja
mov
popa
dec
loope
lahf
ljmp
add
out
mov
mov
call
sbb
stos
repz
ds
mov
hlt
test
mov
jb
mov
js
mov
xor
pop
mov
int
or
mov
mov
adc
jb
addr16
loop
mov
lret
ljmp
cli
sub
dec
sarb
iret
sub
test
out
es
shr
add
mov
jg
add
imul
enter
add
mov
mov
sbb
shll
adc
ljmp
xchg
cmp
add
lea
lods
add
jae
add
call
arpl
add
int3
std
adc
ds
pop
push
mov
ljmp
int3
repz
rcrb
lret
xchg
hlt
jmp
in
mov
xchg
cmp
sahf
lcall
lods
bound
push
mov
or
jg
jle
in
dec
scas
sub
fildll
xchg
dec
jns
push
xchg
dec
setb
jp
cs
jo
dec
adc
jge
push
pop
pop
inc
call
mov
aam
decl
sub
cld
pop
add
loop
fwait
adc
out
sbb
scas
cmpb
pop
std
test
mov
pop
dec
pop
imul
mov
mov
shll
sub
xor
subb
pusha
inc
outsl
clc
incl
push
pop
pusha
mov
ret
add
and
cwtl
addr16
es
mov
int
mov
and
lcall
mov
push
and
dec
test
idiv
inc
incl
scas
jmp
loopne
add
stc
pop
adc
lcall
aas
out
sub
scas
data16
pop
cmp
adc
clc
rcrb
test
loopne
sti
incl
jne
sub
push
xor
rol
scas
mov
sub
mov
lret
add
jecxz
or
fisttpl
bound
imul
pop
retw
pop
fisubs
mov
jg
andl
add
sub
dec
dec
fisttpl
loope
or
mov
imulb
and
divl
cmp
jmp
sbb
mov
sub
xlat
pusha
add
data16
sbb
add
hlt
mov
ljmp
xchg
jns
orl
adc
lcall
adc
mov
and
mov
cmp
jle
mov
mov
ljmp
adc
jae
addr16
sub
aad
pop
sub
movsb
gs
sbb
jnp
clc
pushl
scas
mov
dec
jmp
lods
xchg
imul
pushl
sbb
adc
imul
mov
aad
mov
xchg
addb
xchg
stos
push
nop
sub
pop
lock
mov
and
xchg
inc
and
out
outsl
pop
mov
call
pop
insb
inc
mov
dec
cwtl
shl
jb
mov
adc
iret
loop
mov
sti
repz
fsubl
jne
xchg
movsl
mov
idiv
call
mov
inc
pop
inc
push
sbb
jnp
sti
sbb
and
pop
pop
into
sbb
ljmp
cmp
lea
xchg
and
cwtl
fisubs
mov
inc
jmp
lahf
movsl
adc
cmpsl
test
fstps
sar
add
loope
loope
dec
jg
ljmp
daa
leave
aas
lret
ss
jbe
xchg
nopl
adc
loope
js
rcrb
sbb
xchg
or
xchg
mov
out
notb
pop
cmpsb
cmp
xor
clc
cmp
jb
add
test
push
mov
cmp
repz
cmp
push
ljmp
jge
loopne
lcall
add
mov
movsb
fnsave
jp
xchg
jmp
popa
jg
fimull
mov
xchg
inc
xlat
sub
inc
lea
jg
xchg
in
adc
mov
sbb
mov
outsb
pushl
lods
loopne
sti
adc
xchg
jnp
sub
and
orl
mov
in
pushl
xchg
loope
das
dec
add
imul
addr16
dec
jno
ss
test
pop
push
mov
mov
dec
ljmp
xchg
orb
mov
shll
lcall
cs
std
les
decl
loope
mov
daa
loop
jae
mov
call
push
push
scas
and
ja
add
mov
xchg
mov
ljmp
inc
fs
pusha
ror
xchg
inc
ljmp
cmp
jg
fsub
in
in
fnstcw
sub
loopne
call
mov
pop
dec
arpl
decl
inc
fwait
scas
xchg
sub
add
xchg
jb
push
in
sbb
out
jnp
fstps
sub
jmp
jno
enter
int3
cmpb
mov
xchg
ret
test
xchg
jg
cltd
call
cs
cld
jns
ds
jae
adc
nop
dec
jne
inc
sbb
out
add
or
std
dec
je
inc
pop
mov
jno
inc
sbb
loopne
sahf
mov
jmp
jb
js
das
test
xor
xchg
lahf
dec
mov
popf
das
rcrl
fldl
mov
jg
or
jmp
pop
lock
add
adc
decl
lock
sbb
or
ljmp
mov
mov
std
pushl
aas
push
mov
mov
xchg
cmpsl
je
stos
call
mov
cmp
inc
mov
nop
push
inc
add
mov
add
pop
hlt
jg
mov
cmpsb
add
daa
les
test
stos
stos
jge
push
cmp
arpl
adc
lock
lahf
and
rol
je
inc
clc
lret
mov
mov
sti
jns
dec
xor
mov
out
sbb
stos
mov
call
jl
movsb
dec
jge
in
aam
int
sbb
add
adc
fdivr
xor
and
call
cmp
int3
and
jmp
jnp
arpl
push
sub
cmp
sbb
incl
sar
idiv
jnp
outsb
xor
pop
cmp
inc
xor
xchg
mov
pop
or
push
pushf
mov
add
mov
ljmp
mov
fidivl
ror
int
stc
push
jmp
iret
jne
mov
push
xchg
cmp
and
rolb
mov
sarb
aas
xlat
mov
xor
imull
mov
and
cld
mov
push
mov
sti
sub
shrb
inc
add
sub
fnstsw
sub
mov
push
jnp
nop
push
fisttpll
icebp
lods
leave
jns
dec
cmpsb
es
shll
jmp
fdivr
test
fmulp
sub
addr16
sub
mov
ljmp
sbb
pop
mov
fistps
mov
insb
mov
cmpsl
dec
xor
mov
call
mov
scas
test
rorb
popa
cli
fstpl
mov
xlat
ja
in
mov
sbb
mov
lods
movsb
add
add
sub
sahf
out
loop
pushl
and
lock
inc
mov
jl
dec
test
decl
out
cmpsb
sahf
aas
stos
or
jle
dec
dec
clc
or
mov
adc
pop
cmp
push
cld
ljmp
divl
sahf
dec
cmpsb
dec
shlb
inc
pop
loopne
dec
mov
sbb
pushl
imul
jno
inc
mov
jae
dec
outsb
mov
jbe
xchg
push
data16
cmpsl
sbb
mov
into
sbb
lahf
mov
jmp
jle
cmp
mov
inc
ret
popf
add
lcall
push
jo
orb
mov
and
jge
pop
and
loopne
xchg
call
mov
incl
push
ja
add
push
sub
idivl
xchg
lods
pusha
add
sub
decl
xorl
adc
or
out
inc
mov
dec
inc
lcall
push
jb
lcall
aaa
inc
xchg
and
or
push
lret
mov
out
movsl
sti
pop
test
add
inc
iret
mov
stos
dec
insl
cli
inc
cmp
incb
lock
cmp
push
xlat
icebp
pushf
pop
sbb
decl
sbb
jmp
jns
xchg
pop
call
adc
lods
pop
pop
adc
jb
pop
test
dec
testl
ljmp
xor
cmc
mov
xchg
imul
inc
shll
in
pop
mov
stos
insl
cltd
inc
sbb
xchg
popa
je
test
lods
push
jp
ret
scas
clc
mov
sbb
sar
fstpl
mov
adcb
inc
push
mov
or
test
xor
push
xchg
hlt
jne
ljmp
cmpsb
fdivrl
inc
sub
mov
add
call
and
sbb
fmul
movsb
or
sub
adc
subb
in
mov
inc
pusha
incl
push
repz
int3
in
movb
es
lock
or
cmp
inc
ljmp
call
cmc
pop
jnp
inc
add
ds
pop
mov
decl
nop
cmpsb
jl
cmp
sahf
jae
xchg
int3
shld
xchg
pop
arpl
in
push
iret
cli
nop
enter
ud0
mov
or
cwtl
stc
cmpsl
outsb
into
cli
push
pop
add
mov
jne
add
ds
fsts
call
xchg
cmpsb
test
dec
lds
xorl
mov
pop
pop
test
testb
fildll
mov
add
or
fcmovbe
and
ljmp
and
imull
lcall
fcompl
dec
push
inc
scas
leave
sub
mov
leave
pop
aad
pop
mov
pop
push
cmpsl
cmp
push
add
subb
loope
mov
xchg
pop
loope
outsl
and
ljmp
loopne
push
jns
sub
inc
out
add
int
outsl
inc
mov
mov
jmp
add
sbb
fwait
jp
std
mov
addr16
aam
scas
aaa
fwait
dec
add
adc
jmp
xchg
lea
add
fs
ret
pop
mov
push
out
imul
jmp
arpl
push
add
jp
movsb
pop
imul
mov
pop
xchg
mov
cmp
out
pusha
inc
lods
aas
xchg
pop
sahf
push
lcall
std
sub
std
xchg
pop
insb
rol
cmovb
or
ljmp
push
jo
outsb
mov
mov
mov
ret
inc
mov
call
leave
lods
mov
mov
sahf
adc
pusha
inc
or
mov
iret
sbb
cmp
test
clc
lcall
repnz
adc
jnp
mov
push
jo
mov
cmpb
shl
sub
push
std
pop
push
out
push
adc
fcom
outsb
cmc
imul
lea
hlt
push
mov
adcl
clc
cmpsb
std
sarl
test
sti
imul
push
aam
push
pop
add
and
mov
fcompl
lea
aaa
int3
adc
ret
cmp
and
ficompl
popa
pop
sti
repnz
cmp
aaa
dec
fnsave
cs
mov
pop
add
or
inc
push
pop
orl
inc
repz
call
mov
movsb
icebp
and
aaa
push
jmp
adc
jae
xchg
mov
or
lahf
jmp
pop
jge
loope
enter
and
insb
call
dec
jg
push
jge
sbbl
das
inc
mov
out
iret
fstps
divb
inc
test
mov
and
push
mov
adc
inc
sbb
push
lods
ljmp
fstpl
xchg
pop
imul
xlat
call
add
outsl
cli
cmp
decl
sub
mov
jmp
pop
mov
jne
test
popf
rcll
ds
sbb
fs
lock
jmp
std
add
scas
int3
inc
add
cmp
inc
fs
pop
xor
sahf
push
gs
stos
add
xor
push
lret
movb
xchg
mov
push
ss
inc
outsb
cmp
fsubrl
or
popa
test
ljmp
cli
sti
sub
sar
jb,pn
shl
les
or
into
stc
int
call
add
mov
loope
adc
push
in
insb
dec
mov
fcompl
shrb
jne
jmp
insl
xchg
add
ret
jg
popf
ljmp
dec
jne
cmp
sbb
mov
cmp
std
xlat
adc
jae
mov
jmp
mov
lods
ret
pushf
mov
xor
inc
enter
hlt
icebp
jmp
mov
call
mov
adc
je
mov
and
mov
lock
cld
mov
mov
mov
cmp
in
dec
or
jb
lcall
push
test
mov
mov
sarl
in
insb
fstpl
sahf
aam
rcll
mov
repnz
mov
imul
mov
out
lcall
jno
mov
adc
add
pushl
popa
movsl
dec
cltd
dec
leave
inc
cmp
mov
and
fistpll
cmp
sbb
incl
sub
and
shll
inc
push
call
repnz
pop
rcr
je
mov
out
jb
jle
ja
xor
adc
scas
cmc
test
inc
xor
je
roll
lea
cmc
pop
cs
cmp
ss
int3
stc
jg
incl
test
ficoml
inc
add
cli
hlt
insl
sbb
xchg
jmp
pop
mov
add
in
jecxz
ljmp
xchg
lahf
and
sub
lret
ljmp
pop
mov
sarl
fsubrl
xor
xlat
imul
sti
or
outsl
xor
mov
inc
mov
decl
cmp
jbe
scas
dec
in
mov
pop
mov
dec
testb
cmp
bound
jns
clc
lods
mov
jecxz
mov
das
xchg
cltd
inc
jno
adc
in
aaa
jmp
xor
and
movsl
xchg
cli
mov
rorb
adc
mov
mov
lcall
orb
arpl
sbb
in
stos
cmpl
sub
ljmp
push
xchg
xchg
mov
fld
inc
cwtl
or
mov
sar
mov
xor
insl
mov
sbb
mov
cli
clc
sbb
jo
pop
enter
int
imull
scas
fdivs
push
aaa
mov
aaa
and
sub
cld
ja
fidivs
lahf
xor
push
xchg
mov
hlt
clc
jb
daa
stos
push
ljmp
loop
or
imul
sbb
ret
or
shl
mov
dec
adc
jbe
aas
sub
stc
sahf
xchg
sti
dec
pop
push
std
notl
fs
and
push
or
lcall
jo
push
in
xor
xchg
test
rcrb
inc
xor
lcall
test
mov
fisttpl
test
sbb
movsb
addr16
mov
add
jo
cmc
cmp
imul
shrb
mov
add
dec
jmp
adc
repz
les
cmp
cli
cld
ljmp
cld
mov
mov
inc
sbb
sub
adcl
push
xchg
fcomip
sub
es
mov
outsl
inc
pushl
push
pusha
cld
xor
mov
cwtl
imul
and
scas
call
mov
jmp
sti
andb
xor
lods
jnp
inc
mov
cmp
pop
sub
es
ret
mov
mov
bound
stos
adc
mov
popf
push
add
push
nop
ja
jmp
and
loop
cltd
into
add
andl
cwtl
aas
mov
fcomip
adc
cmp
adc
jp,pt
scas
invd
xchg
insb
test
mov
sbb
scas
nop
idivl
aam
push
int3
mov
ret
or
nop
adc
stc
add
add
xlat
inc
adc
cmpsl
clc
fsubl
out
mov
ljmp
in
in
sbb
jg
jp
dec
pop
loopne
cltd
in
lock
mov
adc
jge
icebp
and
xor
push
cli
jl
and
bound
xor
mov
add
sub
cs
cmp
inc
inc
jb
push
sub
xor
fldt
mov
fs
lret
int3
rcll
sub
cmc
mov
dec
decl
xor
aaa
repnz
fwait
shl
outsb
push
pop
scas
mov
bound
add
xor
add
sti
push
rorl
mov
inc
sub
fisttps
ss
movsb
lcall
imul
call
lock
mov
inc
pop
je
adc
popf
imul
into
mov
call
in
or
ret
inc
dec
arpl
jo
pop
jl
lock
xor
and
mov
in
xchg
mov
pop
pop
mov
lret
rcrl
lret
dec
mov
call
shrl
push
inc
xlat
and
std
mov
jp
mov
ljmp
fdivrs
cmpsb
fmull
jle
scas
xor
hlt
jg
jecxz
inc
push
js
nop
into
outsb
fisubl
mov
cmp
pop
bound
xchg
add
or
push
or
call
push
loope
pushf
sbb
aaa
lret
clc
addb
fs
dec
js
ror
mov
mov
xcrypt-ecb
cmpsl
mov
inc
lret
jne
cwtl
inc
jnp,pn
cmp
mov
movsb
lret
jecxz
loop
mov
insb
int
mov
cmpsb
mov
mov
xor
lods
and
jo
lret
jg
pushf
mov
adc
pop
mov
dec
es
adc
xor
cmp
push
fistps
push
ljmp
in
mov
xor
mov
jge
popa
cld
call
sbb
shlb
cld
lahf
mov
ljmp
inc
imul
pop
pop
popf
fidivrs
or
jmp
sbb
test
inc
sbb
fcmovnbe
repnz
repz
cmp
push
ret
icebp
call
adc
sub
sbb
add
repnz
movd
push
fists
and
cld
test
mov
ljmp
push
inc
mov
call
shrb
adc
stos
lahf
push
aas
ja
push
jne
pushf
mov
sbb
pushf
sahf
test
lcall
mov
in
inc
xchg
sub
xor
jns
stos
lock
in
cmc
out
icebp
pushl
add
and
or
daa
jbe
or
push
daa
fnsave
xor
fildll
mov
inc
xchg
jne
xor
cld
int3
fsubrl
inc
sbb
int3
add
xchg
ffreep
decl
adc
dec
add
arpl
dec
or
shr
cltd
pop
xchg
cmc
dec
push
fmull
decl
out
adc
notb
mov
test
das
sbb
shlb
decl
into
dec
adc
out
pop
adc
dec
clc
icebp
leave
mov
bound
add
pop
out
inc
push
pop
jge
movsl
sub
mov
or
gs
les
pop
xchg
decb
or
ljmp
push
in
push
inc
push
out
push
shlb
in
push
and
mov
fnstcw
jmp
ja
or
repz
or
testl
xchg
lcall
scas
and
dec
dec
pop
popa
and
cmpb
in
mov
inc
cmp
adc
push
enter
stos
sbb
xchg
repnz
nop
mov
adc
call
xchg
mov
repnz
or
dec
ror
pusha
push
sbb
add
inc
add
int
push
fcomip
insb
fs
pop
push
mov
out
es
clc
push
jns
shr
fs
pushl
mov
and
imul
out
dec
xchg
mov
mov
push
dec
and
out
sub
lcall
loop
adc
ficoms
cmc
mov
jecxz
popa
scas
sub
push
mov
fwait
stos
ljmp
rclb
pop
shll
cs
pop
xchg
lret
movsb
jnp
add
jl
ljmp
clc
push
test
mov
sbb
ss
sbb
pushf
xor
call
push
inc
xchg
dec
push
cmp
pushf
push
imulb
or
cwtl
stos
fs
or
addr16
call
lahf
in
or
jle
cmp
jb
call
cmpsl
pop
shrb
loope
daa
add
rcrb
dec
std
pop
stc
icebp
lea
fwait
pop
adc
push
xchg
fcomps
sbb
lods
push
outsl
in
hlt
ljmp
cmp
shrl
negl
in
sub
aaa
adc
pop
pop
xchg
stos
repz
jbe
add
scas
into
subb
enter
and
or
jmp
xchg
xchg
and
mov
jo
dec
in
jno
mov
mov
call
insb
stos
cld
aas
imul
sarl
jnp
pushf
ss
jp
ljmp
or
push
mov
inc
mov
cwtl
pop
inc
sub
jnp
out
mov
and
rol
cmp
xchg
pusha
lcall
sbb
cmp
out
nop
popa
ja
dec
xor
xor
incl
sub
orl
ljmp
and
cmc
out
sahf
js
bound
mov
je
pop
leave
mov
stos
push
push
add
adc
decl
hlt
push
or
les
ja
pop
ljmp
lcall
clc
jmp
jmp
pop
jg
jnp
popa
sub
loop,pt
fdiv
mov
sub
ret
imul
insb
outsb
xor
mov
arpl
popf
mov
pop
sub
pop
aam
dec
data16
in
inc
add
cs
sbb
xor
dec
pusha
std
sub
test
mov
in
call
shl
sbb
decl
sbb
cmc
xlat
jno
das
jmp
and
loopne
lcall
jmp
test
push
popl
fistl
jg
dec
aam
adc
into
imul
and
int
push
arpl
btc
clc
cmp
jp
pop
push
popa
mov
cmp
popf
push
fwait
jnp
adc
lods
and
fsub
sub
jmp
push
lahf
stos
mov
mov
jno
js
ja
and
fs
mov
jmp
cmp
push
test
pop
aaa
sbb
imul
or
xchg
xor
push
mov
ret
dec
pushl
in
popf
mov
out
mov
lods
ljmp
scas
sub
sub
ljmp
inc
mov
sti
roll
sahf
out
sub
ret
arpl
sub
in
dec
or
insl
mov
sbb
xchg
cmpsb
add
fists
pusha
and
mov
or
out
cmp
jae
push
cli
cmpsb
pushf
movsb
push
mov
loope
dec
pop
or
inc
jecxz
dec
out
int3
push
ljmp
ss
syscall
mov
or
mov
xchg
push
push
insl
loope
xchg
mov
and
fnsave
xchg
int
repnz
incl
cmc
call
test
jns
call
jle
shrl
lea
imul
cmpsl
testb
pop
arpl
lret
mov
hlt
and
popf
push
ret
dec
dec
cli
test
or
pushl
in
and
or
lds
mov
rorl
inc
aas
loopne
sub
cld
incl
or
xor
push
pop
arpl
xchg
pop
dec
adcb
imul
xchg
lret
push
loop
sti
incl
lock
and
mov
dec
fisubrs
test
sar
jmp
jle
mov
push
jb
iret
test
or
lods
insl
ja
cltd
adc
jg
jo
inc
cmpl
xchg
mov
lock
mov
inc
push
jno
dec
jbe
lcall
jne
inc
call
into
push
fdivrl
xor
test
fwait
dec
xchg
notl
or
sbb
addl
push
rclb
add
incl
out
loop
sbb
pop
test
sbb
xchg
cmc
hlt
or
mov
inc
sbb
pusha
mov
incl
lea
or
lret
stos
push
adc
push
jne
xchg
cltd
mov
in
pushf
jbe
pushl
out
push
aam
hlt
jnp
shl
sbb
je
or
imul
sbb
incl
or
mov
lcall
push
and
sub
rcr
adcb
xchg
adc
and
push
and
lret
add
lcall
icebp
fcomps
and
aam
mov
adc
inc
mov
jp
sbb
mov
shlb
aaa
cld
pushl
lods
adc
pop
iret
es
popa
outsl
js
mul
push
sbb
sub
call
imul
dec
mov
cli
imul
int3
jmp
lahf
xor
in
insl
mov
push
add
popf
push
mov
out
mov
je
push
imul
popa
xchg
or
mov
fsubrs
decl
adc
popa
fwait
insl
push
push
lds
mov
jecxz
add
mov
add
incl
rolb
cmp
xchg
push
std
es
sub
cli
ljmp
pop
push
dec
cmp
jg
push
or
fwait
lods
gs
into
mov
movsl
cmp
incl
outsl
pop
cmpsl
ss
fimuls
ljmp
xchg
or
jg
push
and
jne
pusha
pop
cli
jg
incl
jecxz
out
push
sbb
mov
mov
push
jle
repz
xlat
pusha
push
ljmp
push
sbb
mov
out
mov
sub
clc
mov
mov
jns
leave
and
sbb
xchg
ret
push
mov
pop
cmpsb
fmull
sahf
add
sub
lcall
cmpsb
mov
ret
aas
aad
jl
add
shlb
add
aaa
push
xchg
js
add
clc
repnz
jno
in
pop
subl
mov
xchg
add
imul
test
inc
pop
aaa
prefetchw
or
jg
mov
xchg
je
movsl
and
je
add
in
add
xor
int3
iret
clc
leave
inc
jge
incl
into
fmuls
mov
popa
add
ja
mov
jns
sub
imul
aad
sbb
mov
call
decb
dec
cld
lock
push
inc
cld
aaa
sti
dec
cmpsl
sbb
aaa
testl
push
mov
jl
xor
lret
stos
inc
xor
mov
and
sub
mov
adc
sti
dec
daa
mov
fisttpll
push
loopne
nop
arpl
mov
sbb
jl
add
decl
jbe
outsb
and
lds
dec
pop
lea
adc
xor
dec
mov
xchg
or
inc
loopne
fnsave
decl
inc
push
subb
pop
addl
push
test
jl
jp
pop
dec
cmp
add
xor
pushl
mov
add
pop
or
sti
jb
shrl
mov
sbb
or
sti
mov
fildll
xchg
and
jo
xor
fwait
mov
test
xchg
sbb
das
lcall
rcl
stos
sbb
xchg
xchg
inc
or
popa
outsl
jb
dec
fcmove
in
inc
ja
mov
lahf
ss
les
jbe
and
sub
push
pop
popf
mov
and
push
adc
fwait
jp
adc
lods
mull
out
jnp
push
jmp
add
ficoms
add
sub
xchg
xchg
push
push
pop
outsb
sub
sti
pop
and
scas
sbb
js
bound
in
push
call
mov
loop
xchg
pop
jge
and
push
sahf
cwtl
xchg
fldl
jno
mov
xchg
push
sub
jne
adc
stos
arpl
jmp
pop
ss
lcall
mov
es
dec
negb
jl
and
push
ja
call
mov
out
sub
mov
test
incl
cs
jo
es
lock
pop
xlat
sub
dec
push
inc
lds
lods
mov
ror
adc
outsb
add
mov
int3
dec
rol
popa
cmp
out
ja
xorl
mov
inc
ret
adc
in
inc
xor
test
ljmp
cli
stc
or
stc
out
and
mov
xlat
js
add
fcmovne
pop
jmp
decl
sub
lods
loopne
cld
pop
and
sub
push
mov
and
pusha
mov
outsb
inc
ljmp
decl
ficomps
push
adc
jmp
imul
xlat
mov
pusha
frstor
pushl
imul
clc
xchg
in
inc
or
fs
mov
in
mov
fildll
jmp
sbb
jns
add
repnz
mov
jecxz
xchg
enter
mov
inc
dec
arpl
inc
xor
pop
lods
add
out
jb
cmp
out
imul
sbb
pop
adc
ret
xchg
jae
or
push
push
pop
movsl
xchg
mov
fldt
mov
decl
push
dec
jo
pop
add
idivb
je
fwait
ja
push
cwtl
cltd
push
xchg
cltd
popf
sti
call
in
adc
jmp
lods
sahf
ljmp
inc
add
add
incl
loope
xorps
pop
mov
inc
mov
cmpsl
movsl
leave
pop
decl
in
pop
enter
daa
fisttps
call
enter
inc
outsl
mov
pop
jnp
cld
inc
xor
pop
xor
iret
mov
rcrl
and
push
add
inc
jecxz
or
sbb
call
rorl
and
pop
mov
dec
out
sbbb
lcall
incl
cmpsb
sbb
push
in
cs
push
sub
sarb
clc
addl
sarb
xor
arpl
mov
mov
adc
add
sbb
and
sahf
mov
sahf
and
xor
jb
sbb
gs
jp
xor
nop
push
pushf
xchg
sar
incl
mov
repnz
add
sbb
sub
pop
ret
mov
cmp
pushl
inc
cmpsl
in
xlat
adc
and
loopne
xor
inc
mov
imul
sbb
pop
lock
fimull
ja
dec
movsl
adc
out
sbb
pop
and
aaa
mov
pop
popf
rorb
dec
out
jl
out
xor
loope
lahf
aam
jae
insl
mov
popa
clc
jg
fcmove
es
movsb
mov
ds
pop
ret
repz
push
loope
pop
hlt
out
inc
and
test
and
jl
jbe
jnp
std
jmp
cmc
dec
inc
inc
cli
inc
add
inc
xchg
fisttps
jb
dec
incl
push
mov
pop
call
roll
cmp
jnp
push
cmpsb
ret
and
jle
push
cld
cld
in
lahf
add
inc
out
push
xchg
adc
ror
imul
scas
mov
sub
mov
jg
imul
enter
dec
aas
out
mov
call
push
scas
and
pop
xor
out
mov
xor
xor
xchg
pop
movsb
mov
stos
pushl
out
push
imul
xor
les
xor
mov
push
movsb
mov
push
add
jmp
rol
pop
or
jo
test
adc
and
push
nop
sti
dec
call
clc
and
arpl
pop
lea
dec
mov
call
inc
test
jo
cmpl
or
lcall
mov
and
in
inc
dec
mov
cld
call
dec
imul
ss
jl
pop
lcall
in
das
test
or
lods
sahf
sti
loopne
iret
or
jbe
ja
xor
mov
int3
shrb
hlt
and
shll
pop
lret
test
sub
loope
or
out
fwait
sbb
cmp
test
add
jne
or
pushl
imul
mov
repz
outsb
in
mov
cmp
push
cmp
adc
data16
aam
in
scas
popf
mov
in
adc
into
lods
rorb
std
jl
sub
call
daa
and
mov
mov
rcrl
mov
incl
imul
adcl
and
call
in
addl
xchg
decl
testl
and
outsb
jecxz
jno
jp
jecxz
mov
call
xor
out
cli
mov
push
add
ss
cld
scas
sbb
jle
dec
xchg
and
adc
and
pop
imul
nop
push
adc
mov
shrl
fcomip
pushl
cmpsb
push
xchg
loopne
mov
mov
sbb
imul
movsb
aaa
or
mov
imul
negl
dec
pusha
push
lahf
data16
pushl
push
push
add
shl
fcomps
push
push
cmpsb
hlt
and
xor
lcall
fistl
adc
jg
sbb
in
mov
sub
js
mov
in
dec
lret
add
jg
jns
lea
jecxz
es
scas
mov
insl
jg
jge
lret
mov
cmp
jmp
jae
jno
stos
push
mov
hlt
jmp
leave
push
mov
idivl
mov
sub
jg
lcall
outsb
shrl
loopne
cwtl
fimuls
sub
push
jl
inc
dec
rolb
mov
incl
imulb
ret
out
pop
mov
dec
mov
mov
pushf
ljmp
ljmp
cltd
out
movsb
lret
ret
or
daa
stc
push
fstl
decl
inc
aaa
movsl
mov
mov
lea
incl
inc
je
mov
add
stos
push
lret
add
in
out
fldl
in
pop
jno
adc
insl
inc
lea
jg
call
push
or
sub
inc
cs
fisubrl
lahf
imul
fldt
mov
adc
imul
or
stc
dec
js
incl
out
ret
pusha
xlat
loop
and
sub
adc
xor
or
push
push
cmp
lcall
into
repz
sub
incb
loop
faddl
sbb
or
std
jmp
jne
push
add
push
pop
xor
dec
lods
gs
push
and
rclb
in
mov
nop
orl
mov
dec
stc
pop
mov
imul
decl
sub
xor
lret
push
shl
out
arpl
pop
dec
gs
pop
and
pop
ljmp
inc
loop
add
cmc
jns
std
ja
cmp
pop
jae
iret
pusha
mov
xchg
std
clc
pop
push
jmp
lock
inc
aam
lds
mov
nop
push
inc
stc
and
sbb
ret
pop
call
sbb
pop
inc
cltd
bnd
jecxz
mov
idivl
push
loop
cmovae
xchg
decl
gs
lcall
hlt
jo
fnstsw
out
movsl
push
call
into
pushf
xor
mov
cld
or
not
mov
sarl
adc
cmp
jl
loope
fisttpll
push
movsl
sub
push
add
mov
add
setge
in
rcrb
bound
incl
push
push
aaa
lods
outsb
fcmovnbe
test
mov
and
xchg
mov
jge
inc
ret
jo
cmp
mov
cmp
cltd
xor
aaa
movsb
stos
xchg
jmp
std
call
in
out
pop
jge
decl
dec
mov
shll
ficoms
fists
test
jo
sahf
mov
in
int3
sub
sbb
inc
mov
arpl
jns
dec
sub
ds
insl
sub
jmp
cmp
mov
test
test
sub
jno
testl
inc
popf
lret
xchg
lahf
adc
xchg
jle
xchg
ljmp
xor
dec
arpl
icebp
mov
xor
in
aad
push
jmp
mov
ficompl
xchg
mov
outsl
shlb
dec
pop
ficoms
iret
jmp
scas
mov
call
pop
loope
push
and
outsb
and
mov
fsts
decl
test
fimuls
add
fiadds
xor
mov
mov
mov
jge
call
sub
cmp
lret
jno
lret
shrb
test
es
add
scas
ljmp
xchg
jns
push
add
jno
ljmp
sub
add
pop
arpl
pop
sbb
fcmovnbe
cmp
adc
imul
loopne
ja
decl
sub
mov
jmp
xlat
das
and
ja
push
cs
inc
rcl
lods
stos
cs
std
xchg
mov
incl
pop
mov
pop
push
stc
daa
mov
mov
out
mov
cmpsb
push
dec
pushf
mov
pop
addr16
adc
or
stos
mov
sbb
mov
call
xchg
lds
push
cli
stos
jg
pushf
arpl
inc
into
adc
pop
inc
jl
and
in
fistpl
aam
mov
jne
pusha
jmp
push
decl
pop
jae
sub
push
sub
std
pop
jmp
out
xchg
xchg
cmpb
sub
pop
push
pop
test
lret
push
loope
fadds
xchg
mov
movsl
daa
adc
ds
iret
sbb
decl
adc
push
lock
or
or
pop
in
std
mov
icebp
stc
stos
adc
xor
decl
adc
mov
lock
imul
jg
lahf
mulb
jmp
push
in
xchg
jne
fbstp
inc
shlb
cltd
ficoms
test
sub
dec
jmp
sbb
mov
fidivrl
sbbl
jmp
push
sbb
dec
inc
cli
lods
rcr
stos
xchg
dec
dec
iret
mov
jae
mov
bound
cmp
pushl
daa
leave
aad
mov
pop
add
cmpsb
sahf
int
jb
or
mov
sar
lcall
out
or
xor
std
imul
adc
lods
mov
sbb
fdivr
lcall
testl
js
xor
xchg
mov
mov
sarb
xor
mov
lahf
fisubrl
lds
icebp
ljmp
inc
stos
add
inc
incl
mov
add
stos
je
sbb
ja
cmpsl
stos
fwait
add
xchg
sbb
jg
decl
jg
ja
push
je
aas
and
mov
popf
xchg
add
imul
loop
inc
repz
jg
rcrb
cmp
in
mov
test
mov
ljmp
and
das
and
sbb
jae
fists
fldl
or
push
clc
cmp
fnstenv
and
fisubrl
popa
jno
sbb
jmp
lods
std
and
mov
inc
xchg
aas
mov
dec
mov
lcall
jmp
jl
lahf
cltd
or
sub
dec
test
int3
clc
xor
gs
lcall
push
mov
xchg
add
inc
mov
ljmp
jl
inc
pop
or
fildll
data16
rclb
adc
call
xor
or
push
leave
jg
add
and
adc
out
xchg
ljmp
xchg
sbb
mov
arpl
es
orb
mov
or
call
push
sbb
dec
js
push
ret
push
cmp
aam
jp
or
incl
pop
push
pop
mov
sarl
cs
aad
inc
xchg
lcall
in
out
call
cmpsl
mov
mov
jo
leave
or
inc
stos
xchg
cmp
inc
loop,pn
lds
or
pop
add
jge
popa
sub
dec
mov
adc
pop
pusha
out
mov
or
data16
jl
aaa
jo
jbe
inc
outsl
test
sahf
xchg
inc
imul
js
lahf
add
inc
aam
xor
sbb
fstps
outsb
stc
out
xchg
cmp
leave
inc
mov
mov
xlat
insb
mov
es
decl
jl
aaa
daa
jns
add
adc
outsl
jnp
andl
cmc
jecxz
sbb
sub
mov
push
cli
aaa
cld
xchg
pop
dec
test
mov
inc
and
xor
mov
adc
pop
adc
lret
jae
adc
push
addr16
dec
ljmp
sbb
in
push
mov
sbb
sbb
imull
incb
fnstcw
aad
cmp
push
cltd
daa
lock
and
aas
and
sub
inc
ljmp
sbb
inc
not
sbb
sbb
pop
clc
decl
cmpsb
int3
lret
xor
sbb
push
sub
faddp
mov
rclb
scas
subl
test
js
push
or
clc
popf
in
inc
mov
sbb
or
pushl
mov
nop
adc
inc
scas
jge
bound
and
ljmp
cli
dec
popf
push
xor
or
adc
or
jge
std
test
mov
sbb
push
mov
push
subb
out
mov
not
xchg
cmpsb
and
cld
mov
jmp
push
iret
arpl
or
cmp
inc
push
icebp
add
inc
jl
xor
push
data16
push
cld
outsl
mov
insl
js
lret
push
adc
mov
mov
not
daa
push
mov
ficoms
mov
lock
push
sbb
decl
addl
dec
mov
pop
fdivs
das
mov
add
xchg
ds
or
xchg
and
jmp
icebp
loop
outsl
loope
sbb
sub
lcall
in
ret
jno
faddl
movsl
insb
lea
sub
sti
xor
lea
in
sub
mov
test
xor
int3
call
pushw
mov
pop
add
pushf
or
sub
push
mov
in
jecxz
sub
inc
enter
shlb
cmpsl
dec
outsb
sbb
mov
fistpll
mov
loopne
test
dec
imul
out
notl
sub
fstl
insb
insl
inc
adc
frstor
int
sar
insb
into
inc
mov
pusha
cmc
data16
xorl
inc
test
lcall
adc
cld
pop
ffree
sub
imul
outsl
push
aaa
push
dec
mov
xchg
jns
ljmp
shrb
imul
push
jge
dec
and
dec
jnp
fcos
inc
push
mov
lods
xchg
imul
add
push
out
pusha
mov
je
push
push
pop
dec
and
je
fcomip
incl
sarb
push
and
les
out
and
push
mov
data16
xor
jmp
add
or
insl
jne
cmp
pusha
ud0
incl
adc
cwtl
and
repnz
and
mov
xchg
andb
jecxz
mov
rclb
cwtl
in
in
jmp
push
cmp
sti
xchg
jne
ret
in
and
lods
mov
jne
ds
or
jle
add
cmp
mov
xor
lret
in
jge
sub
and
ljmp
push
pop
lock
je
mov
inc
repnz
pop
dec
aaa
inc
imul
mov
cmp
test
dec
pop
stos
dec
mov
in
xor
mov
stos
iret
fisttps
outsl
jge
inc
inc
rcrb
popa
push
daa
test
cld
push
stos
stos
push
mov
lahf
loope
loope
mov
dec
adc
lret
mov
ljmp
push
dec
adc
adc
sub
cwtl
mov
adc
and
cmp
push
push
pop
cmc
incl
pop
push
inc
sbb
scas
movsb
mov
idiv
cmp
out
subl
incl
in
mov
dec
mov
ret
dec
lahf
pop
mov
adc
push
jge
dec
insl
loop
incl
mov
pop
pop
lds
push
add
repnz
testb
cli
push
push
adc
rcll
movsb
and
lock
cmp
push
or
enter
js
ret
adc
jg
into
clc
loop
cltd
es
fsubrp
in
fildll
mov
mov
xchg
mov
pop
push
repz
lret
push
sub
cmp
xchg
andl
add
in
lock
cmpsb
or
ljmp
mov
call
mov
movsb
mov
sbb
cmp
mov
and
incl
push
call
cmp
aaa
nop
pop
or
xchg
jno
das
lret
outsb
jbe
rclb
push
out
pop
test
push
xchg
dec
add
call
popa
jbe
ja,pn
jne
leave
mov
or
mov
dec
ss
call
aas
cs
dec
mov
out
add
xchg
movsl
mov
sbb
adc
lock
jmp
inc
push
loop
add
lods
xchg
push
sbb
add
push
inc
add
and
mov
pop
imul
addb
imul
cmp
incl
pushf
mov
and
cmp
mov
js
or
mov
jg
add
pop
dec
leave
rcll
pop
test
roll
pop
dec
add
mov
push
adc
xchg
pop
mov
add
and
jle
dec
sbb
add
cmpsl
inc
jno
nopl
scas
push
inc
xor
inc
in
repnz
or
jnp
xchg
repz
fstpt
mov
xchg
dec
and
cmpsl
push
and
pop
rcr
and
movsb
push
movsb
inc
scas
push
outsb
push
and
stos
push
and
push
mov
mov
test
and
imul
push
inc
pop
pop
add
pop
dec
lods
push
mov
mov
lahf
sbb
sbb
mov
sbb
inc
mov
pusha
sbb
mov
push
ds
les
push
adc
fs
mov
call
add
imul
mov
fbstp
sub
lret
mov
jbe
aaa
imul
push
mov
lock
pop
stos
pop
stos
mov
adc
add
aam
push
mov
push
shll
sbb
loope
shrb
shll
fidivrl
iret
outsb
or
insl
fcmovnu
mov
push
ja
ret
je
fidivrs
out
jge
inc
add
xor
xorb
jmp
inc
ds
in
movsb
push
add
mov
sbbl
insl
not
jno
mov
push
in
imul
push
add
jne
push
aam
push
ret
mov
add
mov
adcl
push
pop
dec
add
ja
loopne
cmp
data16
inc
xchg
sti
mov
push
shlb
lret
addr16
lcall
add
push
add
jne
add
ja
push
aad
shlb
jbe
xlat
ja
js
push
jns
push
pop
lock
fnstcw
inc
push
fidivrl
sarl
lods
pop
mov
ja
fldl
ret
fildl
ljmp
xchg
imul
mov
pop
cs
xchg
xor
xchg
push
mov
jmp
xor
mov
ds
aaa
push
lcall
push
cmp
lock
push
push
out
popf
xchg
popf
aas
push
mov
lcall
lahf
mov
mov
push
push
jecxz
push
imulb
movl
jns
out
out
push
hlt
clc
stc
cli
jns
out
cld
std
incb
jecxz
arpl
imul
add
int
xor
pop
add
mov
add
pop
stc
push
lds
add
in
mov
mov
mov
or
outsl
repnz
cmpsl
stos
add
out
pop
sti
inc
stos
stos
cmpsl
or
push
sbb
aam
pop
pop
adc
rcrb
add
pop
dec
shrb
femms
lods
lods
pop
mov
sbb
scas
add
scas
insl
add
pop
adc
and
push
mov
lods
adc
sbb
aaa
xchg
sbb
sbb
nop
mov
and
and
sub
mov
and
xor
lock
in
and
pop
and
mov
and
add
test
pusha
fwait
pop
sub
mov
xchg
popa
xchg
cld
pop
sub
and
mov
or
add
aas
pop
aas
imul
pop
cmp
cmp
add
call
mov
xor
xor
pop
or
out
addr16
add
pop
pop
std
mov
pushl
mov
pop
das
push
cs
xor
add
xor
das
pop
push
push
xor
pushl
in
add
pop
push
cs
dec
inc
das
inc
inc
xor
adc
inc
adc
call
xor
jbe
cmp
jl
jge
jno
decl
xor
pushw
dec
dec
cmpb
jo
mov
inc
xorl
movsl
and
xchg
xchg
xchg
popf
pushf
fwait
stc
in
lcall
mov
mov
sub
xchg
lret
dec
ja
jns
dec
push
bound
js
loope
insl
adc
xor
jne
je
mov
pusha
push
jg
mov
and
cmpsl
or
add
pop
pop
scas
push
lods
mov
aas
outsl
push
adc
xchg
pop
push
dec
add
jg
add
and
cmpsb
push
mov
xor
fldt
ja
push
ja
jb
cs
xor
mov
pop
ja
mov
pop
jbe
dec
sbb
and
mov
jg
xor
xchg
jo
push
inc
mov
cmp
mov
inc
movsb
outsb
popa
add
enter
add
inc
push
popf
inc
mov
pop
sti
cltd
pushl
add
xchg
jno
lret
push
bound
mov
mov
insb
push
lahf
inc
inc
push
sahf
mov
mov
sti
ljmp
pushf
data16
xchg
outsb
add
xchg
xchg
pop
push
test
cmpsb
dec
shl
testb
push
movsb
jae
add
jb
shll
mov
xlat
pushf
push
rorb
add
lcall
outsl
fisubs
outsb
mov
dec
push
add
ja
sahf
jbe
pusha
lcall
fistpl
imul
stos
das
shlb
fistl
data16
jp
add
js
mov
into
mov
test
shrl
insb
pop
outsb
push
sub
ds
ror
push
ds
jno
insb
fistl
add
jge
push
jg
fiadds
call
adc
mov
add
clc
in
mov
inc
mov
add
test
or
push
loopne
iret
sahf
mov
dec
add
jb
out
in
cmpsl
and
jg
jle
jecxz
or
fiadds
fnstcw
aad
push
divb
dec
movsl
jns
fildl
adc
push
adcl
sbbl
sbb
sbbl
test
test
sbb
test
in
mov
push
xchg
nop
and
mov
cmp
out
xchg
in
xchg
lock
sub
sti
rolb
push
imulb
push
mov
fimull
repnz
xor
cwtl
push
cmc
sahf
xor
pusha
repz
fwait
cmpsb
pop
cmp
mov
aam
jle
push
xor
ret
scas
jo
test
sahf
cmp
fcomp
push
jbe
stos
into
shll
mov
lgs
int
mov
mov
sarb
push
rcr
rcl
mov
jp
xchg
jle
data16
add
addr16
adc
cs
dec
out
add
dec
daa
test
add
mov
mov
femms
or
out
in
mov
sbb
or
es
push
adc
push
outsl
sti
pop
in
add
adc
adc
ds
add
in
pop
repnz
mov
mov
xor
ds
xchg
push
mov
sbb
sbb
mov
push
add
jbe
and
loopne
ds
aad
cs
mov
aas
and
scas
add
xor
or
aas
aas
cmp
cmp
cmp
aaa
add
insl
mov
push
jbe
cmp
inc
xlat
cmpsb
jbe
jle
cmp
out
or
dec
jle
imul
mov
mov
ds
xor
dec
test
mov
scas
add
sbbb
ds
mov
ljmp
add
pop
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
jg
dec
test
mov
mov
ds
xor
sub
sub
or
add
add
outsl
add
dec
and
inc
mov
push
push
push
push
push
imul
mov
pop
push
push
push
imul
pushl
jne,pt
fwait
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
jmp
test
insl
popf
mov
jge
jns
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
jmp
push
insl
lds
test
addb
add
add
push
clc
out
adc
mov
add
incl
jae
aas
add
xchg
pop
cmp
test
add
ljmp
pushl
inc
add
mov
push
mov
fnstsw
repnz
outsl
aaa
add
addr16
add
add
mov
push
repz
lcall
or
mov
pop
insb
push
fmull
push
dec
lret
js
into
xchg
ljmp
incl
fwait
jp
add
mov
mov
test
scas
xchg
js
in
and
shl
cwtl
nop
sub
sub
fcmovne
insb
pop
xchg
push
sub
nop
sub
xchg
xor
mov
out
xchg
xor
xchg
outsb
lcall
leave
outsl
mov
sahf
jbe
negl
fcmove
fst
es
or
mov
push
lret
loopne
push
std
lods
and
into
fdivrp
imull
and
xchg
add
test
jg
jle
and
xchg
and
incl
dec
dec
dec
dec
dec
dec
add
pop
divb
push
dec
or
adc
cmp
adc
dec
or
add
in
testb
adc
add
or
pop
pop
pop
repz
cmovg
inc
push
dec
sbb
in
cmpsl
std
inc
adc
inc
inc
adc
sbb
dec
add
in
decl
dec
sub
cmp
cmp
cmp
cmp
daa
and
sbb
sbb
jmp
and
add
dec
ss
xor
sub
sub
push
push
mov
add
pushw
mov
mov
mov
mov
xor
in
inc
add
outsb
mov
push
and
addl
aaa
pop
inc
and
mov
xor
outsl
mov
cmpsl
rorl
jbe
inc
and
incl
cld
or
push
inc
xlat
sbb
add
pop
outsb
sub
pop
in
sysret
mov
es
ds
dec
inc
xchg
mov
pushf
cmp
jnp
pop
in
lock
addl
test
mov
adc
ja,pn
aaa
and
shrl
add
mov
sbbl
push
mov
sbb
cli
mov
add
pop
cli
fisttps
add
call
les
cli
adc
adc
xor
add
mov
jg
das
sti
mov
sbb
add
jle
add
dec
sti
jg
shlb
xchg
mov
cmpl
push
adc
push
mov
adc
xor
jg
cld
mov
nop
or
adc
roll
ja
jg
and
adc
jns
and
jg
jg
adc
or
dec
push
adc
push
pop
jg
push
add
add
push
data16
sub
inc
inc
or
addr16
lods
cmp
push
inc
addl
sar
data16
xchg
or
mov
jg
add
lea
jg
insb
or
sbb
fsts
xchg
pop
shrb
add
int3
push
mov
scas
sub
mov
xchg
sub
push
incl
shl
lods
jle
lret
imul
scas
xchg
adc
lods
adc
mov
lcall
sbb
pop
sbb
call
jg
pusha
sbb
data16
xor
jg
jg
lods
lea
add
xor
adc
cmpsb
adc
pop
incl
test
sbb
jg
ss
and
movb
add
jle
jne
pop
mov
dec
mov
cmpsb
ljmp
stos
pop
pop
testb
pop
daa
aas
aaa
sub
pop
add
cltd
jbe
pop
jle
add
shrl
dec
call
mov
test
jle
push
jbe
daa
xor
push
bound
add
out
out
mov
comiss
fcomi
mov
push
arpl
pop
mov
mov
push
mov
push
out
mov
dec
push
dec
jmp
adc
addb
cmp
jle
adc
xchg
jle
ljmp
mov
into
push
fnstenv
out
mov
push
push
jne
pop
push
insl
adc
jbe
out
push
jnp
push
jp
test
decb
js
dec
jbe
outsb
fidivrs
pop
add
mov
je
mov
es
test
and
push
outsb
incl
jle
nop
popf
adc
dec
incl
ss
inc
int
ljmp
cmp
int3
ja
xchg
and
adc
mov
or
xchg
and
ss
push
push
mov
jbe
or
out
mov
fldt
xchg
inc
push
test
pushf
ds
cmp
cwtd
mov
xchg
xor
xchg
shll
sub
sub
nop
daa
ss
jns
call
dec
xor
fs
aaa
outsb
decl
mov
inc
push
jg
pop
fnsave
xor
add
aam
inc
sahf
inc
xchg
test
push
jbe
imul
push
push
xchg
push
xchg
inc
push
mov
inc
pop
mov
divb
mov
add
mov
lods
add
push
xor
testl
pushf
sbb
ss
adc
daa
sub
adc
or
nop
aas
sahf
xlat
insl
mov
push
orl
lea
repz
push
popf
push
imul
inc
and
cmp
lock
cmp
out
jne
cmp
icebp
add
xor
in
add
mov
inc
sbb
dec
incl
sbb
pop
inc
and
mov
push
mov
fildl
and
hlt
ficoms
sbb
xor
dec
cli
push
idiv
xchg
add
adc
mov
add
mov
incb
add
pop
mov
pop
lcall
or
mov
ds
sub
inc
int3
push
das
pop
cld
decl
push
shlb
in
push
inc
dec
jo
pop
daa
std
out
or
xchg
btc
or
lcall
or
jo
sub
mov
lds
decl
mov
incl
les
outsb
ljmp
jmp
test
push
call
inc
xor
xor
sub
inc
inc
ret
sbb
or
jmp
sbb
push
xor
xor
scas
jmp
mov
or
mov
nop
mov
mov
inc
xchg
or
mov
xor
push
iret
jle
adc
aad
cltd
mov
mov
call
push
movsb
test
add
decl
pop
pop
add
cwtl
sbb
incl
inc
shrb
sbb
ljmp
lret
sub
popf
mov
push
std
ficoml
dec
mov
out
adc
test
test
call
adc
and
mov
lgdtl
popa
repnz
push
call
jg
outsb
mov
incl
adc
xchg
loop
jae
mov
push
test
push
addr16
sbb
gs
in
rcll
pop
inc
movsb
mov
mov
push
pop
aaa
mov
sub
push
shll
js
mov
roll
dec
mov
ret
incl
fwait
in
es
dec
push
mov
in
in
inc
push
inc
inc
pop
inc
pop
ja
pop
fwait
mov
imull
movsb
dec
push
stos
push
popf
inc
cmpsb
dec
dec
xor
cltd
inc
cs
dec
mov
out
add
and
fwait
dec
fistl
rcl
outsb
shrb
xchg
je
shll
push
push
jb
jl
dec
pop
imulb
push
iret
insl
popf
cltd
dec
mov
outsl
xchg
lcall
push
and
push
decl
push
xchg
cs
pushl
decl
pop
add
pop
int
repnz
jmp
popf
cmp
aas
jmp
leave
lcall
push
inc
testb
xchg
push
push
aaa
push
int
mov
ss
xchg
push
xchg
dec
xchg
jmp
es
xchg
xchg
movsb
notl
sub
ljmp
test
scas
incl
xchg
or
and
push
add
jmp
fcmovbe
js
std
faddl
int
fstpt
push
jnp
jp
or
jl
test
jns
jl
push
jge
mov
pusha
mov
adc
push
jbe
adc
fidivrl
push
dec
mov
jg
push
dec
repnz
repnz
jae
pop
fidivrl
push
mov
repnz
loope
out
add
in
add
stos
in
add
inc
mov
stc
mov
pop
add
sub
stos
outsl
lahf
or
jne
push
adc
adc
rep
fstpl
int
push
addb
jnp
lahf
dec
es
addl
mov
sysret
jg
and
xchg
fisttps
sub
iret
out
mov
cli
jmp
iret
fisttpl
idiv
sarb
inc
sub
jg
mov
icebp
test
insl
dec
pop
cld
inc
js
mov
fstpt
mov
icebp
out
jbe
adc
daa
jg
repnz
mov
ja
loope
xchg
mov
jp
es
xchg
pusha
or
inc
aaa
xor
stc
sti
cmpb
jmp
mov
cmp
jg
dec
in
sarb
push
movsl
pop
ja
shlb
jl
dec
and
jge
idiv
dec
and
push
lcall
push
fsubl
pop
pusha
and
pop
push
nop
sub
mov
sbb
decl
mov
ljmp
jne
mov
push
pop
push
pop
dec
mov
pop
or
xchg
aam
jne
mov
inc
push
dec
lcall
push
jns
add
sub
mov
jmp
xchg
jmp
mov
into
insb
mov
push
xchg
mov
loop
adc
ljmp
xchg
jmp
mov
lret
jg
out
mov
mov
push
jp
push
mov
or
jmp
xlat
push
cmovno
mov
cmp
adc
add
push
pop
out
add
or
lret
mov
add
or
xchg
fistl
lahf
aaa
orb
lret
adc
call
sub
imul
fnstenv
jp
into
pop
push
sbb
push
sbb
push
or
and
or
inc
or
arpl
dec
shrl
or
mov
push
add
or
add
and
lock
push
adc
xchg
sbb
dec
push
add
sub
icebp
inc
push
gs
jo
and
add
push
ficompl
xor
and
jo
bound
loop
lcall
insl
aaa
xchg
push
and
cltd
mov
inc
xchg
mov
imul
inc
in
dec
lahf
jo
das
mov
pushf
xor
in
add
push
popa
imul
adc
inc
pop
push
aas
add
push
dec
les
add
jno
jns
and
adc
aad
xor
movb
add
push
sub
and
xchg
sbb
jmp
dec
les
mov
dec
lods
add
insl
and
aad
adc
fcompl
insl
jnp
popa
shlb
xor
stos
and
into
jb
shrl
and
rorb
or
mov
inc
xchg
add
add
add
inc
sub
das
mov
clc
pop
pop
gs
adc
add
add
and
add
mov
push
testl
ss
inc
cmc
add
xchg
push
or
outsb
dec
push
outsl
loop
and
sti
cmpsb
or
xchg
mov
and
mov
ficompl
mulb
pop
pop
dec
testb
imul
sbbl
inc
shll
add
popa
addr16
sub
jo
push
sbb
or
insl
or
popa
sbb
push
add
inc
or
add
fmuls
popa
cmp
xchg
dec
mov
notl
xchg
push
dec
sbb
rolb
add
inc
sti
popf
xchg
add
xorb
popa
xchg
aad
adc
pop
cmp
push
les
jne
adc
xor
add
or
sbb
sbb
cmp
jo
je
push
insb
sbb
dec
dec
in
xchg
sbb
rorl
xor
xor
xchg
dec
xor
sub
dec
adc
jbe
movsb
pop
cmpb
outsl
inc
and
iret
jecxz
adc
sbb
js
pop
adcl
mov
in
dec
sub
push
arpl
add
adc
jb
dec
cwtl
flds
adc
jmp
mov
jo
rclw
inc
je
bound
arpl
inc
iret
fcomps
adc
sbb
and
cltd
xchg
xchg
push
lods
shll
mov
andb
cwtl
or
test
lock
adc
icebp
sbb
loop
and
dec
cmp
inc
adc
pushf
xchg
add
arpl
sub
xor
inc
pop
push
es
inc
cwtl
dec
fbstp
movsb
xor
or
xchg
add
pop
scas
mov
pop
mov
sbb
dec
mov
stos
shrb
inc
imul
sti
pop
jecxz
push
pop
inc
jno
fsubrs
adc
ss
jg
stos
xor
ret
and
mov
and
ds
jne
inc
mov
pop
or
outsl
jae
cmpsl
sbb
repnz
outsl
mov
pop
adc
scas
mov
mov
add
push
add
dec
dec
fldenv
movsl
insl
and
and
adc
arpl
mov
das
sub
dec
rcrb
aas
sub
xchg
pop
sub
lods
and
cmp
rclb
xchg
inc
sti
adcl
push
inc
jecxz
insl
inc
aaa
push
pop
imul
xchg
insb
jne
loope
adc
jae
or
add
es
lds
cmpsl
xlat
in
lods
movb
inc
and
inc
sbb
sub
sbb
jne
fs
pop
push
inc
or
push
popa
rcpps
or
and
push
jb
shll
js
inc
xchg
or
mov
sub
push
insl
mov
insb
push
sbb
cs
jae
sahf
daa
sbb
dec
push
and
push
cld
pop
adc
sub
fs
fwait
push
mov
cmpsl
rolb
dec
mov
ss
inc
add
lea
out
push
and
leave
push
jg
jns
lock
and
je
push
jo
and
and
test
les
stos
adc
std
addr16
sub
movsb
inc
xor
faddl
mov
and
adc
jo
enter
inc
sbb
mov
data16
and
data16
je
insl
dec
outsb
dec
inc
fsubl
std
lea
pop
hlt
inc
and
mov
xor
sub
push
push
js
add
pop
add
rcrl
dec
add
sbb
mov
movsb
dec
imul
cmpsb
imul
imul
imul
pop
pop
add
mov
inc
add
movsb
outsl
xchg
add
and
lock
adc
sbb
roll
shlb
xor
ds
mov
int3
adc
push
sub
sarl
push
imul
mov
fsubrs
imul
push
bound
test
enter
xorl
sbb
out
jecxz
push
movl
inc
sbb
dec
xor
sarb
ljmp
jo
mov
inc
mov
xor
jmp
arpl
push
sub
je
in
sbb
rclb
mov
out
pushf
xor
xor
cmp
and
and
ret
push
dec
push
xchg
pop
movsb
sbb
jle
ret
mov
add
xor
outsb
ja
ja
dec
pop
lret
inc
lock
pop
arpl
mov
inc
inc
mov
popw
xlat
adc
or
mov
sbb
dec
adc
add
cmpsb
jg
inc
inc
xorb
inc
jbe
and
in
mov
outsl
and
insb
mov
xor
jbe
adcl
mov
es
scas
push
std
test
mov
xchg
dec
insl
movsb
mov
push
push
sub
adc
sub
shll
xor
dec
cld
addr16
adc
arpl
test
pop
xor
cwtl
push
and
arpl
roll
cmc
inc
cwtl
shrl
sbb
mov
shll
mov
cmp
cmp
jns
push
lea
and
jp
sub
mov
and
out
jmp
mov
outsb
fdivs
add
shlb
mov
cmpsb
aas
insl
sbb
imul
nop
shlb
xchg
jbe
inc
addr16
enter
xor
lahf
add
iret
repz
dec
push
mov
icebp
sbb
push
inc
inc
cmp
incl
sub
cmp
adcl
dec
or
cmp
jnp
pop
dec
mov
out
jmp
pop
outsb
inc
test
lcall
shll
add
in
and
pusha
aaa
sub
push
sbb
rolb
cmpsb
dec
jp
push
cmp
xchg
dec
movsl
dec
sub
scas
mov
inc
sub
sbb
jns
pop
imul
xor
push
mov
sbb
sbb
or
nop
or
enter
push
mov
lock
test
add
fsubs
add
dec
mov
addr16
testl
addr16
es
adc
push
rcrb
imul
movsb
icebp
data16
push
fucom
pusha
mov
out
rcrb
in
push
aam
roll
mov
sbb
pushf
or
inc
ficomps
add
push
xchg
and
xchg
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
