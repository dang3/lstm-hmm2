divb
in
mov
mov
mov
inc
add
add
sahf
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
add
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
pop
inc
push
adc
add
inc
fcoms
rol
jo
mov
push
mov
xor
sbb
add
push
add
aaa
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
jbe
xor
sbb
adc
cwtl
mov
lock
pop
imull
dec
shl
in
or
jo
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
and
orb
add
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
es
cmpl
adcl
xorl
sbb
pop
cmp
cli
js
mov
cmp
jg
mov
pop
and
adc
ret
pop
dec
add
mov
pop
and
jmp
enter
xchg
das
pop
push
sub
push
mov
sar
imul
lea
push
cmp
ja
adc
pop
dec
clc
add
push
mov
inc
loope
adc
in
inc
jno
xchg
adc
in
outsb
int3
clc
scas
cmp
jle
mov
cmpl
or
clc
loope
incl
shr
sub
or
cmp
push
inc
jle
add
pop
cltd
sub
rcl
enter
shrl
iret
mov
movsb
pop
cmp
orb
sub
cli
cmp
mov
push
jne
js
incb
add
xor
pop
mov
jle
add
call
jo
add
testl
inc
add
adc
lea
adc
stc
std
mov
and
xor
into
mov
adc
cmpsl
push
cmpsl
inc
cmp
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
roll
mov
mov
jge
test
jle
insb
or
cmp
mov
inc
mov
stos
pop
pop
inc
insl
cmp
loope
or
push
push
cmp
adc
outsl
add
sub
repz
push
jmp
push
lea
lea
inc
push
inc
add
pop
sub
in
pop
push
cli
push
andl
ret
and
sbb
outsb
hlt
adcb
or
jbe
inc
and
cmp
mov
cmp
and
xor
push
push
sti
rcrl
hlt
das
push
out
cmp
jle
mov
inc
or
xor
cmpl
je
push
cmp
cmp
jae
push
cmp
inc
and
adc
cs
or
or
add
jb
pop
adc
pop
adc
pop
leave
fwait
jle
mov
fcoms
jnp
ljmp
in
aaa
cmp
lock
loop
push
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
nop
out
loop
loopne
cmp
jo
inc
sub
add
aaa
lret
shll
mov
inc
or
pop
or
cmp
add
add
xor
jno
cmp
jne
push
push
push
push
xor
push
test
push
mov
mov
or
pusha
pop
pop
jle
sbb
xor
mov
daa
in
rcr
jne
cmp
lret
xchg
and
add
sub
xor
frstor
insb
mov
lock
mov
cld
pop
stc
add
out
add
sbb
fstpt
mov
add
repz
testl
xchg
pop
mov
and
push
je
xchg
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
dec
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
sbb
out
lea
dec
push
xor
adc
lahf
testb
lea
out
jae
pop
shlb
fldcw
add
add
add
jge
repnz
lea
push
dec
pop
xchg
push
cld
fists
mov
fistps
add
push
mov
jb
push
outsl
dec
xor
mov
push
out
fsubrl
adc
and
push
scas
push
inc
sti
add
or
test
cmp
iret
insb
push
cmp
push
push
cmp
je
shll
adc
or
loopne
jne
imul
mov
imul
adc
fwait
or
xor
jb
ja
adc
inc
fsubl
shlb
xchg
cmp
mov
xchg
paddq
mov
aaa
movsl
iret
xlat
mov
mov
mov
or
mov
call
arpl
cs
jno
lods
imulb
xor
sub
jg
inc
dec
mov
or
cwtl
in
cmp
mov
add
andl
or
sub
in
mov
shrl
ss
push
mov
mov
push
adc
lock
lcall
sbb
int3
ret
mov
push
testl
jae
and
mov
aas
pop
loopne
push
loopne
pushl
push
cmp
icebp
add
daa
lret
call
sub
adc
pop
inc
lods
or
enter
add
sbb
je
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movsb
call
add
mov
inc
adcb
push
rcll
jg
int
mov
push
mov
insb
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
subl
sub
and
sub
add
xor
aam
test
pop
jle
or
mov
mov
sarb
pop
or
pop
rorl
xchg
and
loop
xlat
sub
lret
ljmp
out
shr
sbb
fisttpl
or
sub
js
and
adc
arpl
loope
popa
add
jle
in
dec
xchg
ds
and
sbb
sar
inc
pop
xlat
andb
je
or
cmpb
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
ds
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
xor
in
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jg
jne
dec
sbbb
push
cmp
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
dec
mov
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
int
in
jae
bound
cltd
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
xor
jbe
pop
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
fmuls
subl
popa
xor
xchg
xor
data16
push
divb
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
ret
das
pop
add
pusha
add
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
jo
scas
and
orb
xchg
xor
test
lds
repnz
ds
pop
pop
jmp
sub
popa
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
xchg
je
out
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
mov
incb
or
and
test
add
in
sbb
jo
xor
or
push
mov
jmp
ljmp
sub
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
in
pop
push
add
adc
push
jb
or
sbb
add
mov
cmp
xchg
pop
mov
add
jge
pop
incb
jecxz
dec
inc
outsl
mov
in
das
sarb
sbb
sub
xor
sbb
sub
mov
test
fcoml
dec
jo
xchg
mul
mov
shlb
loopne
jo
cmp
movsb
sarb
js
mov
adc
pop
adc
push
mov
xorl
cmp
cmp
rclb
xchg
rcl
ret
les
pushf
pushf
leave
jae
gs
mov
mov
xchg
dec
mov
xchg
sbb
xchg
xchg
sbb
push
test
mov
xchg
int3
clc
arpl
ret
sbb
leave
enter
ror
cmp
sbb
shlb
sub
ret
sbb
dec
jnp
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
cmp
testl
loope
hlt
shrb
add
mov
inc
iret
and
cwtl
sub
jo
inc
sbb
call
test
push
or
dec
pop
mov
es
push
ficompl
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
lcall
pop
add
enter
or
jle
lahf
cmp
mov
in
addb
test
and
outsb
and
ficompl
inc
sbb
movsb
and
push
aaa
adc
dec
sbb
orl
pop
push
mov
mov
mov
jae
or
cld
sarl
sbb
ret
lods
pop
test
cwtl
sub
lret
xchg
and
std
and
adc
adc
popl
daa
add
sbb
fsubl
adc
addb
cwtl
mov
mov
cmpl
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiaddl
adc
or
sbb
adc
movsb
adc
xor
mov
insl
pop
sbb
push
sbb
fstl
scas
and
jl
and
enter
or
adc
sbb
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movsl
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
aaa
pop
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
lret
xor
push
and
iret
sbb
sbb
aas
loop
add
inc
jne
shlb
jno
jb
mov
test
enter
sbb
movsb
dec
out
lcall
xchg
mov
loopne
dec
jo
lea
mov
sbb
lcall
fbld
das
jne
push
pushf
pop
nopl
pop
xlat
sbb
shrd
popa
testl
outsl
jg
cmp
je
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
mov
xchg
inc
xchg
and
pop
loopne
das
jecxz
daa
add
inc
ret
or
inc
pop
add
mov
mov
add
test
mov
dec
in
lret
xorb
and
sbb
lock
cmp
add
sti
cmp
je
push
push
pop
ljmp
test
xchg
add
mov
sub
inc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
insb
push
sar
and
stc
sahf
sub
sub
or
bound
inc
xlat
in
add
popa
and
sub
sub
pushf
fstps
add
movsb
std
div
faddl
cmp
negb
aas
rcrl
inc
incb
xchg
inc
mov
cmc
pusha
shrb
test
sbb
loopne
push
fdivl
jns
inc
stc
scas
sub
pop
bswap
pop
test
sub
sub
pop
leave
aam
inc
imul
cwtl
lods
jno
ss
je
sbb
inc
lret
ret
test
cmp
cmp
or
mov
fstpt
cmp
push
stos
add
adc
jb
pop
add
xor
clc
push
insb
push
daa
movsb
xor
test
pop
insb
adc
push
lods
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
lret
push
push
or
sub
pop
adcb
push
add
test
test
adc
mov
mov
enter
push
push
cld
sbb
sti
lahf
mov
adc
add
pop
cmp
add
or
adc
xor
push
sahf
xor
and
add
mov
hlt
sbbl
sub
nop
negl
inc
mov
jo
push
enter
int3
ds
lds
lea
pop
xchg
add
sub
pushl
jnp
fidivs
dec
xlat
test
xor
dec
push
mov
fsubs
roll
aad
imul
sub
inc
repnz
cmp
mov
and
xor
stc
pop
pop
and
dec
dec
xor
ficoml
cmpl
cmpsb
cmp
mov
repnz
sub
rcll
and
sbb
jne
and
enter
and
xor
andl
lods
rclb
nop
inc
in
xchg
or
ds
cmp
push
jl
jne
bound
pushf
dec
inc
inc
adc
ds
popf
fstpt
rorb
dec
mov
mov
push
or
xchg
pop
icebp
pop
dec
les
adc
dec
stos
xchg
adc
pushl
push
mov
sub
mov
loop
add
in
and
adc
sub
ret
push
je
nop
sub
adc
les
rcll
cmpl
add
iret
sbb
push
mov
mov
dec
sbb
outsb
loopne
sbb
fld
sti
cmpb
jae
jne
push
sub
xlat
ret
call
sub
fisttpll
jne
inc
adc
or
in
gs
orb
jmp
cmp
push
mov
nop
out
adc
pusha
cmp
loope
nop
sbb
mov
jmp
mov
clc
cmpb
daa
fs
push
loopne
and
push
shrb
push
outsb
scas
push
dec
lret
add
inc
das
xchg
sti
sub
inc
repz
out
jge
and
xchg
orb
enter
or
lret
jo
inc
mov
cmp
mov
test
pusha
xchg
push
les
jge
jo
and
cmp
out
jo
xor
daa
dec
rcll
sbb
mov
xor
mul
dec
xchg
jo
inc
xchg
add
pop
or
setne
or
dec
or
mov
rcrb
into
add
icebp
aaa
arpl
adc
pop
out
jne
or
je
sub
fadd
mov
in
sti
loopne
je
loope
jg
inc
das
adc
mov
or
in
sbbb
push
inc
faddl
jl
test
dec
push
pop
pop
sub
jo
test
mov
lods
cmp
lock
fsubrp
out
xchg
or
xchg
cmp
fsubs
add
call
neg
test
imul
sub
repz
je
cli
pop
ror
dec
sarb
inc
mov
pop
jns
sbb
fsub
push
out
inc
out
loopne
cld
inc
test
and
or
nop
inc
aas
fnstenv
imul
lock
or
loopne
lods
sbb
cld
or
mov
push
pop
or
push
or
jg
scas
fdivl
add
or
enter
add
int3
add
mov
or
es
fisubrl
jle
push
fdivr
or
sub
call
dec
xchg
call
mov
add
mov
jnp
lock
dec
inc
sbb
je
sub
jle
cld
out
jmp
jge
imul
cmc
jbe
push
xor
jmp
mov
xorb
int3
int
mov
mov
xchg
int3
test
push
sbb
in
icebp
inc
xorb
xor
fstl
inc
sbb
mov
lea
rolb
mov
mov
inc
hlt
xor
inc
mov
mov
jle
push
dec
cmp
adcb
push
pavgw
ret
jle
call
in
sbb
lock
push
mov
orb
mov
shll
in
paddusb
cmp
pop
filds
mov
push
push
add
pmulhw
mov
jbe
pop
clc
add
inc
sbb
sbb
movsb
adc
fcomps
sub
mov
stos
insl
std
adc
sbb
dec
test
pop
lea
roll
sub
or
cmpl
push
push
jne
aaa
or
rcrb
pop
dec
xor
mov
in
inc
xchg
in
cmp
inc
ficomps
cld
test
sbb
or
mov
imul
or
sbb
add
mov
or
xor
push
push
add
pop
ljmp
or
inc
pop
or
cmp
std
popa
xor
add
mov
das
jle
popa
cmp
inc
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pop
cld
loopne
orb
add
test
lds
lahf
call
into
sarl
aam
enter
test
or
rcrb
push
nop
or
push
cmove
or
cmp
push
push
in
addb
cmp
sbb
mov
cmp
cli
in
mov
push
rorb
mov
ret
or
in
adc
scas
in
mov
push
push
in
sbb
inc
mov
scas
sbb
or
jno
testl
nop
adc
and
add
cmp
test
shrd
rcr
jb
push
pop
push
push
call
and
fistl
rorl
test
mov
mov
pop
daa
mulb
mov
rcll
dec
or
cmpb
jge
out
clc
sub
mov
mov
out
or
push
jge
in
arpl
and
pop
arpl
xor
pop
or
sbb
pop
lock
loopne
mov
cmp
addb
and
and
das
subl
adc
mov
mov
jbe
in
mov
int3
pop
cmp
fxch
rclb
sbb
jl
adc
pushf
xor
in
mov
fbstp
rolb
je
inc
in
fdivr
pushl
call
mov
inc
shr
movzbl
push
adc
push
ret
push
jo
ffreep
push
es
add
je
loope
cmpsl
jle
jbe
dec
testl
gs
nop
sbb
inc
add
push
mov
push
or
gs
or
jg
sub
jb
xor
int
out
push
loopne
pop
or
add
mov
push
sbb
xor
fisubs
push
jmp
scas
sti
jle
push
add
lahf
nop
lods
adc
push
push
mov
cmp
jg
mov
xchg
icebp
int
adc
jae
enter
cmpl
std
sbb
scas
mov
aad
js
pop
and
test
xor
fldt
xchg
jno
outsl
ds
lea
andl
outsb
sub
sbb
subl
call
mov
push
jne
inc
sub
loop
jo
push
ret
push
pop
jmp
mov
popa
xor
lods
push
cmp
mov
and
cmp
je
stos
mov
in
in
add
fcompl
shrb
cld
jne
fdivrl
push
push
test
adc
lock
sbb
or
xor
clc
add
inc
cmp
jae
mov
hlt
lea
movsb
jp
dec
ja
dec
add
sub
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jl
in
cmp
jg
push
push
push
inc
js
push
pop
cmp
inc
and
jbe
xlat
sar
into
popa
nop
add
mov
loopne
push
pop
xor
adc
call
lea
ljmp
cmp
loopne
sub
add
xor
jo
fnstcw
jb
mov
mov
roll
mov
mov
push
sub
inc
js
or
cli
xchg
adcb
out
ret
cmp
cmpsb
hlt
pop
pop
xor
inc
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivrl
hlt
or
and
sub
pop
movb
dec
push
inc
inc
dec
rclb
jge
jmp
dec
inc
cmp
push
mov
insb
sbb
in
out
fdivs
pop
push
push
mov
sbb
xor
cwtl
dec
mov
insb
sbb
fdivp
add
pop
push
push
mov
idiv
cmp
jl
repz
jmp
or
and
pop
cmp
xlat
das
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
test
pop
or
xchg
bound
xlat
push
sub
mov
push
stc
jns
lods
sarl
push
mov
push
and
add
or
jle
ret
je
mov
imul
lock
aaa
ljmp
xor
movsb
push
dec
fidivrl
sbb
or
fstps
pop
cmp
mov
or
add
jne
or
sbb
sub
jle
push
call
jl
xchg
jecxz
sti
test
dec
sbb
mov
mov
sbb
ret
je
push
pop
pop
and
xor
mov
mov
jae
jb
jmp
mov
ret
and
adc
mov
xchg
jmp
or
jbe
jb
mov
icebp
scas
fs
jne
cmp
je
jbe
movb
xor
lods
std
or
or
and
sbb
icebp
addb
cmp
test
addl
out
les
xlat
imul
daa
push
pop
and
setne
shrb
ret
jne
pop
jo
pop
in
xchg
cld
add
fiaddl
jne
adc
js,pt
aam
add
jo
jg
jo
prefetch
xchg
das
or
es
into
push
cmc
jmp
test
or
sbb
push
adc
add
sub
jp
shll
aad
mov
js
push
leave
inc
lret
jmp
call
bnd
rorl
cmp
jmp
mov
dec
adc
daa
sahf
jmp
cmp
push
test
mov
imul
cld
ficoms
sub
push
push
jmp
sbb
pop
sti
adc
rolb
pop
rolb
add
scas
sbb
inc
push
mov
lock
pop
nop
mov
sub
inc
mov
add
lcall
je
das
test
push
xchg
dec
jno
mov
loopne
enter
jl
add
insb
cld
cmp
ret
dec
push
add
push
test
lds
pop
push
dec
cld
rorb
push
pop
popf
mov
enter
add
std
push
movl
call
sub
dec
enter
movsb
xchg
xor
sub
imull
push
and
cmp
fld
mov
sahf
fsubs
sbb
pop
push
adc
pop
enter
xlat
jecxz
sbb
insb
icebp
inc
roll
shlb
in
shl
mov
cmp
jp
fdivs
push
adc
shr
pop
sbb
push
push
imul
sub
push
add
aas
lods
pusha
lods
xchg
dec
ret
outsl
dec
mov
adc
lods
sbbl
inc
mov
lds
sbb
mov
in
push
sub
les
push
ss
sub
push
in
insl
fldt
lods
sub
mov
xlat
and
enter
mov
and
aad
jo
es
sub
insb
xlat
push
jno
cmovl
pop
dec
scas
jecxz
dec
xchg
call
sbb
cmpsl
jb
sbb
fsubrs
enter
cld
jo
add
mov
dec
leave
inc
jo
fnstcw
into
or
adcl
jb
leave
mov
ficoml
imul
test
stos
out
or
mov
push
sbb
xchg
xor
pop
and
xlat
or
sbb
add
xchg
sub
stos
push
pop
cmpl
jmp
je
add
ljmp
in
adc
pop
inc
pop
je
dec
ds
fisttps
mov
cmpsl
leave
mov
push
enter
jecxz
and
pop
movl
cmpsb
and
push
sub
xlat
push
jae
sub
mov
jne
pop
add
jmp
sbbb
cld
sub
sub
adc
pusha
pop
and
in
jmp
or
mov
enter
test
sarl
stc
loope
lret
cmp
les
mov
and
push
xlat
cs
stos
lock
cmc
pop
je
xor
mov
sbb
and
clc
mov
jae
jg
adc
lret
adc
dec
add
dec
into
aam
jb
push
inc
xchg
imul
sub
push
mov
add
or
or
dec
clc
and
adc
rcrl
add
pop
pop
cmpsb
mov
mov
mov
in
sbb
add
or
jns
fdivs
daa
js
adc
mov
lea
addr16
or
xchg
andl
shll
mov
push
and
xlat
push
shll
and
sbb
xorb
ret
jne
je
cmp
mov
pop
push
fildll
sbb
cli
push
or
arpl
mov
xchg
js
adc
ja
das
in
cmpsl
outsb
stc
movups
and
test
add
inc
pop
sbb
cmp
mov
or
push
mov
push
cltd
pop
lock
mov
lcall
adc
sarb
roll
jno
add
push
xchg
jmp
loope
add
mov
lods
dec
add
xchg
dec
xor
pop
lods
push
xchg
pushf
push
jbe
fs
shr
cmp
cmp
mov
mov
add
push
pop
dec
je
mov
adc
in
jge
adc
sbb
popa
dec
ss
dec
cli
decb
jmp
mov
mov
mov
rcr
push
and
movsb
fwait
mov
add
pop
jne
out
popa
hlt
sbb
jmp
push
add
push
mov
xor
aas
adc
and
cld
pop
inc
add
mov
mov
inc
loopne
mov
add
push
mov
pop
addr16
mov
fmuls
mov
mov
dec
mov
loop
loopne
push
or
push
shl
std
lea
pop
pushl
js
sub
lea
mov
push
movsb
int3
sub
mov
rolb
push
shr
jmp
cmp
je
cmp
mov
imul
jmp
inc
sbb
leave
adc
out
out
xor
mov
sbb
fstpl
insl
fistpll
jmp
sbb
into
jle
push
and
jmp
and
jmp
push
mov
sbb
sti
mov
incl
into
pop
push
aaa
push
inc
push
push
iret
repz
jo
mov
into
repz
pushf
cmpsl
mov
mov
sbb
mov
mov
add
inc
scas
ja
push
and
sub
or
or
lea
adc
sub
fistps
aaa
sub
or
cmpl
fcmovne
rcrl
lahf
push
push
or
xchg
dec
stc
icebp
cs
pop
jge
cld
out
dec
jl
and
inc
push
mov
mov
pop
push
lea
push
lea
push
push
push
push
add
push
lea
enter
cmp
jnp
inc
cmpsb
add
dec
mov
inc
test
pop
add
aas
cltd
lahf
aam
popf
sbb
lea
lea
movl
orl
or
sbb
sbb
jmp
sbb
addr16
push
je
lea
test
sbb
push
or
pop
push
push
add
jl
inc
xor
add
popf
push
js
in
test
xor
je
push
inc
xchg
outsb
lods
fidivs
jno
jo
cmpsb
addl
mov
push
sbb
push
push
je
mov
xchg
mov
push
clc
pop
dec
notb
jmp
mov
pusha
and
mov
mov
movl
dec
add
pop
jne
mov
jne,pt
push
add
test
repnz
jae
adc
or
push
pause
xchg
imul
dec
jae
popf
mov
call
in
in
ret
mov
xchg
inc
or
ret
or
repz
mov
inc
xor
movsl
push
cmc
lds
push
mov
fcoms
aad
cmp
xor
push
push
cmp
xor
xor
pushf
jl
sub
in
and
adc
rolb
mov
lea
jl
lcall
es
mov
ret
or
sbb
xor
popa
mov
push
xchg
pop
mov
popa
aam
push
aam
das
in
in
sbb
cmp
inc
jl
jne
int3
push
mov
and
fcoml
bound
dec
fildl
cmp
rcr
shr
addl
or
fdivrl
fdivr
ret
mov
rcll
mov
push
mov
inc
scas
xor
adc
fdivr
and
adc
push
push
or
mov
js
notb
sub
je
lea
push
loopne
es
rolb
mov
jo
xchg
add
ds
mov
mov
aam
xlat
push
or
adc
ljmp
in
or
rcrb
shrb
les
inc
push
mov
lock
push
pop
pop
fmull
push
dec
lea
dec
push
push
aaa
dec
icebp
pop
cmpsb
and
jge
fidivrs
cmpsb
mov
sub
in
dec
jmp
sub
mov
dec
cmp
sub
insl
sti
int
in
cmp
push
mov
add
mov
test
inc
inc
dec
cmp
pop
daa
icebp
cltd
adc
xor
mov
iret
mov
mov
and
or
jecxz
or
les
mov
fcomps
in
dec
cmp
cmp
push
sbb
and
loopne
sbb
out
movsb
adc
jp
dec
pop
inc
leave
mov
lock
fisubl
mov
in
and
dec
fstp
cmpsb
imul
adcb
push
roll
inc
push
bound
lcall
neg
sbb
and
pop
in
mov
cmp
iret
leave
out
add
adc
out
jl
enter
pusha
nop
test
js
mov
push
inc
scas
daa
or
add
dec
sub
je
push
negb
adc
aaa
and
lods
out
push
ret
test
icebp
dec
or
addl
rolb
test
dec
pop
cmp
mov
mov
mov
or
mov
loop
dec
aaa
enter
cmpl
jne
pushl
ffree
subl
push
sbb
test
adc
xorl
jbe
outsl
cld
adc
aam
mov
adc
cmpsb
push
inc
inc
dec
insl
dec
adc
std
xchg
xor
push
inc
sub
sti
je
cmp
mov
ja
sti
sbb
jb
stc
ret
popl
or
pop
and
pop
inc
or
aad
xchg
or
popa
in
xchg
mov
jg
xor
sbb
sbb
pop
incl
jne
movb
jmp
cmp
jne
mov
adc
leave
push
loop
ret
cwtl
enter
jle
xor
adcb
repnz
mov
jp
cmp
pop
mov
mov
xor
ja
xchg
test
sbb
lock
pop
notl
and
test
cltd
jne
or
or
popf
sub
mov
mov
push
dec
or
adcb
bound
pop
fsubl
push
push
cmp
push
adc
fcoml
mov
nop
pop
cmp
iret
push
adc
enter
lods
add
test
lds
dec
out
mov
mov
ljmp
nop
add
xchg
scas
mov
mov
add
je
cmpsb
and
mov
cmp
add
dec
and
push
lea
and
mov
cmpb
jg
add
pop
push
call
push
and
push
push
lret
into
shr
mov
rcll
enter
xor
imul
mov
push
mov
xor
int
xor
clc
test
cmpb
xor
movsl
adc
pop
cmc
xlat
jg
inc
pusha
fmull
insb
decb
jno
out
push
add
mov
push
push
aaa
movsl
adc
outsb
mov
push
stos
sbb
out
mov
cli
loop
xor
es
ja
add
mov
mov
jno
insb
inc
cmp
xor
pop
into
popa
in
jne
icebp
in
push
shll
mov
adc
mov
stos
jo
adc
fmuls
sub
cli
repz
jo
dec
or
andb
cmc
jmp
jb
rclb
mov
adc
test
rorl
jbe
jo
xchg
xlat
push
adc
lea
aas
stc
icebp
cmpb
xor
je
push
pop
cmp
mov
negb
push
decl
repnz
push
jne
cs
sub
push
fnstsw
add
jmp
adc
sbb
push
iret
enter
insb
repz
mov
andl
push
fcoms
sbb
fidivrl
push
cli
or
push
pop
jo
popa
icebp
push
sub
cs
push
in
or
jmp
fs
popa
push
sbb
lods
push
push
cltd
sub
push
jecxz
je
push
fbld
jl
xlat
sbb
fadd
orl
addl
pop
fadds
xor
xchg
add
jae
adc
xchg
push
sbb
pop
push
sub
jo
mov
jl
mov
mov
cltd
mov
lea
push
div
sar
orl
movsb
push
xor
ret
pop
mov
pop
mov
jge
mov
shlb
mov
idiv
push
mov
mov
jecxz
test
mov
ret
xor
idiv
out
and
cs
testl
es
sti
fstpt
mov
add
push
int
dec
add
mov
cmpsl
jne
pusha
scas
mov
push
dec
xor
push
pop
jg
jge
add
sub
mov
adc
dec
fstpl
push
pop
push
mov
fdivr
sub
cmpb
jge
je
out
sbb
mov
dec
push
into
jp
xor
popa
xchg
movsl
daa
pusha
js
or
popa
jg
sub
scas
fs
or
xchg
arpl
mov
clc
jle
cmp
xor
sub
negl
pushf
movb
scas
xchg
jnp
aas
dec
lea
jl,pn
sbb
ds
xchg
sub
cmp
shrl
nop
or
out
jp
into
test
std
outsb
mov
fildl
mov
test
jns
fdivr
std
jnp
add
xor
xor
mov
fdivrp
dec
ja
and
dec
sub
mov
shr
clc
int3
mov
mov
inc
les
xorl
cmp
add
push
lods
mov
cmpb
pusha
clc
insl
je
into
clc
fidivl
jmp
push
xchg
jae
addb
mov
ret
pop
jne
pop
pop
movb
xor
dec
ljmp
cmp
mov
jo
leave
xchg
mov
mov
add
shr
hlt
lcall
cmc
push
aad
cld
inc
hlt
adc
lea
add
and
cmpsl
je
addr16
pusha
fdivs
push
gs
lds
imul
fadds
and
stos
scas
cmp
sbb
loopne
push
pop
stos
ljmp
pop
pop
mov
pop
leave
jecxz
dec
sub
inc
push
cmp
or
mov
sub
rcrl
and
cltd
add
cwtl
cmp
test
sbb
or
aam
xor
adc
int
sbb
loope
xorb
mov
dec
jns
and
cmp
ret
sbb
sti
push
rorb
mov
push
les
jmp
punpckhdq
leave
adc
jo
in
push
pop
xor
rolb
jo
pushf
scas
sbb
push
mov
lea
push
mov
push
ret
inc
mov
pop
in
fwait
dec
add
lea
pop
or
jno
sarl
and
push
push
adc
and
cmp
lahf
icebp
inc
and
pop
dec
enter
add
sub
pop
cmpsb
jle
add
add
cmp
sub
bound
xchg
incl
add
xchg
fsubrl
mov
inc
and
jl
nop
adc
fs
hlt
xchg
int3
push
push
pop
in
out
shll
pop
popf
dec
dec
add
repnz
stc
lock
nop
je
mov
pop
or
inc
cli
and
loop
leave
push
cmp
sti
and
pop
daa
sbb
mov
pop
mov
and
in
dec
or
cmc
stos
mov
andl
dec
cmp
sub
call
or
push
add
mov
shrb
test
clc
setb
test
dec
add
add
cmp
jo
pop
dec
mov
dec
adc
data16
pop
or
sbb
jl
aaa
adcb
jle
and
and
pop
pop
out
inc
mov
scas
sbb
add
push
xor
ret
icebp
dec
mov
jo
adc
mov
add
cmp
add
imul
adc
add
push
scas
and
int
xchg
popf
cmp
or
repz
mov
add
jo
xor
mov
in
pop
or
mov
pop
jmp
dec
sti
lret
sub
bound
mov
mov
sub
push
in
aas
jmp
test
stos
sbb
jl
pop
daa
ds
icebp
adc
dec
push
mov
lock
clc
add
pop
je
and
jp
or
loopne
jne
pop
adc
inc
cltd
mov
add
adc
xor
adc
push
add
push
mov
jle
add
jmp
add
out
mov
testl
mov
out
divl
push
push
and
test
adc
sub
call
add
cmc
xchg
cmpsb
add
push
out
and
inc
xchg
push
push
shlb
icebp
and
pop
push
in
sub
hlt
dec
dec
sahf
fmuls
sbb
cmp
mov
xor
xor
sbb
lret
lock
adc
aam
mov
hlt
add
mov
out
shrb
inc
mov
sbb
stos
shll
push
stos
xchg
lret
mov
push
nop
in
call
cmp
inc
and
mov
in
mov
push
iret
mov
lods
imul
pushf
adc
push
sbb
mov
push
push
mov
pusha
das
call
loopne
arpl
push
ret
cmp
sub
insl
test
and
jo
cmp
fsubrl
leave
imull
pop
push
push
outsl
sbb
add
xchg
jnp
imul
imul
cmc
nop
or
push
cmpsl
pop
enter
push
in
dec
cmpsl
adc
cmp
mov
decb
ficompl
jae
inc
out
popf
jae
cmp
sbb
xchg
pop
xor
sti
cmp
enter
jnp
adc
jne
mov
fstpl
push
out
dec
rcrl
push
lods
sbb
pushl
push
lret
push
cmpsl
loope
scas
mov
dec
nop
cmp
add
decl
iret
clc
and
test
je
shll
mov
je
stc
jge
neg
loop
dec
mov
jmp
dec
mov
sub
and
add
mov
jae
mov
add
jo
pusha
inc
xor
dec
push
add
sub
push
sbb
mov
sub
leave
js
cmp
dec
sti
dec
jge
mov
mov
mov
cmp
sbbb
lods
add
cmp
jle
call
push
dec
setle
push
or
cmp
std
fsubr
sbb
popf
fwait
inc
push
mov
out
je
xchg
int
inc
cs
sbb
aam
xor
mov
push
test
into
cmp
mov
lahf
add
pop
jo
sub
dec
clc
cmp
sete
adc
loope
add
insl
andb
je
sbb
adcl
push
test
sbb
shlb
insb
jp
jno
dec
movsb
pop
lds
mov
pusha
loop
sbb
and
pop
or
and
dec
mov
inc
movsl
repnz
dec
add
sbb
jno
pop
lea
das
arpl
push
push
rolb
lods
pop
lods
fwait
adcb
jae
add
lock
jne
or
sub
lea
add
add
mov
push
sbb
imul
mov
mov
movsb
bound
mov
jge
mov
sub
push
iret
ss
imul
or
and
cmp
inc
push
xchg
push
or
popa
fcmovnb
fwait
mov
sbb
or
jmp
das
adc
mov
sub
outsl
mov
nop
lret
pop
in
cmpsb
add
outsb
sbb
pop
pop
adc
rolb
pusha
fmull
je
in
adc
mov
or
lock
in
aaa
ret
in
repz
in
call
ja
fdiv
in
aaa
xor
cmpsb
and
push
jns
popf
push
fdivs
pop
pop
arpl
add
jbe
push
mov
dec
shrl
test
andl
testb
jmp
or
ja
sbb
je
adc
mov
mov
dec
push
adc
or
jg
sub
xchg
je
jecxz
aam
jb
xchg
or
inc
bound
in
push
mov
scas
sbb
dec
and
clc
clc
and
clc
inc
addl
dec
cmp
pop
xor
xor
hlt
add
dec
or
push
mov
in
dec
clc
pushl
xor
mov
mov
dec
call
jle
cmp
pop
clc
lahf
sub
in
jnp
adc
clc
pop
jmp
in
jmp
das
hlt
fwait
loopne
fnstsw
out
or
sti
add
into
push
push
add
push
outsl
or
sbb
rcll
clc
adc
xchg
nop
mov
mov
pop
mov
add
ds
inc
inc
in
jb
mov
fstpt
das
sub
jg
mov
iret
push
insb
cwtl
add
jb
nop
inc
xacquire
enter
inc
lahf
cmp
clc
xor
in
jp
xchg
mov
cmp
add
clc
sbb
sbb
daa
pop
push
mov
js
mov
adc
test
add
push
xor
xor
push
jg
loop
sbb
push
movzwl
adc
push
gs
cmc
rsqrtps
jo
lea
push
jl
inc
icebp
and
push
push
shll
fcmovb
lret
cmp
insb
jbe
jbe
pop
push
mov
call
jo
call
jo
pop
mov
gs
inc
fucomi
mov
sbb
adc
mulb
inc
push
push
fisttps
in
pop
popa
loopne
sbb
in
push
mov
movsb
add
adc
ss
xchg
movsb
xor
ret
inc
cmp
mov
adc
pop
mov
movsl
int3
ret
add
sbb
and
mov
or
add
cld
mov
jmp
adc
xor
mov
push
test
add
and
cmp
sbb
push
ss
mov
ja
add
jl
andl
mov
and
scas
movl
jle
or
pop
dec
push
es
jo
addr16
movl
dec
pop
jp
cmp
sub
xchg
push
sub
mov
add
hlt
push
mov
cltd
inc
xchg
arpl
dec
xor
mov
push
cmp
cmpsb
rolb
cltd
push
push
cmp
inc
sbbl
and
xchg
pop
outsb
jns
popf
lcall
push
mov
sbb
mov
or
popa
xchg
mov
arpl
pusha
dec
loopne
or
push
push
loopne
mov
mov
jb
icebp
push
jg
dec
fs
add
cli
cs
aam
jecxz
add
add
sbb
sahf
idivb
mov
pop
xchg
sub
aad
inc
sbb
shrl
add
roll
cwtl
iret
push
pusha
sub
add
dec
fistl
sbb
jecxz
xchg
adc
sbb
jnp
aaa
adc
mov
pop
fidivrl
xor
jns
cmp
jmp
mov
xchg
sub
mov
xor
mov
adc
sub
pop
push
lcall
sub
adc
pop
test
xlat
jl,pn
jmp
add
or
lock
jg
sub
loopne
leave
cmp
loopne
fwait
add
cmp
shlb
cvtdq2ps
arpl
sub
sbb
add
pop
and
test
or
inc
mov
pop
mov
jmp
inc
sahf
mov
or
cwtl
movl
mov
lea
cmpsl
add
mov
inc
adc
lret
shll
sbb
mov
mov
dec
add
nop
add
push
repz
scas
or
add
lea
push
daa
cmp
mov
or
out
jp
orl
pop
or
cld
mov
fdivs
sub
add
add
adc
inc
or
lcall
mov
sub
mov
cwtl
push
or
xchg
xor
dec
js
sub
lea
test
pop
adc
mov
faddl
dec
cwtl
adc
xchg
push
add
scas
push
add
mov
sbb
cld
dec
js
lock
mov
mov
adc
mov
pushf
push
setne
dec
xchg
cmpb
add
lahf
pop
int
lret
fs
push
push
jbe
push
jne
and
cltd
sub
xchg
mov
jg
sbbb
mov
fcoml
pop
push
and
loop
leave
lea
or
or
sbb
add
pop
movsl
and
ret
mull
pop
imul
stos
stos
add
xchg
ja
lods
and
inc
xor
push
or
loopne
rorl
jg
notb
sub
sbb
sti
scas
pop
stos
push
add
mov
imul
xor
push
cmp
loopne
ret
or
dec
and
sbb
test
repz
in
sbb
dec
cmp
cmc
push
mov
and
dec
jmp
orl
sbb
dec
pop
int3
imul
mov
call
scas
das
mov
gs
in
aas
mov
call
cmp
jmp
scas
mov
outsl
jns
sbb
lret
sub
xor
mov
pop
or
jmp
push
shr
mov
adc
loope
pusha
inc
xchg
fstpt
mov
lret
or
repz
add
fildl
pop
pop
cltd
xchg
mov
push
pushf
and
inc
js
mov
jns
dec
add
inc
jb
pop
mov
popf
lret
fisubrs
add
jmp
fcoms
push
inc
mov
imul
dec
push
loope
dec
or
push
fisttpll
outsb
pop
xor
push
sbb
mov
add
sub
aad
dec
or
pop
enter
or
xchg
or
push
and
dec
cmp
les
add
divl
mov
daa
fwait
xor
xchg
inc
int
subb
stc
in
mov
inc
or
xor
add
pop
fidivs
fimuls
mov
adc
outsl
jbe
add
mov
ss
jo
xchg
mov
mov
jl
outsb
int3
lods
xor
cmp
adc
fiadds
push
jp
add
ror
push
mov
orb
leave
sahf
xchg
rorl
sahf
lods
rolb
xchg
mov
push
and
push
push
repnz
mov
loopne
out
dec
jae
pop
sbb
test
test
faddp
add
fs
data16
xchg
or
push
lock
dec
push
sub
xchg
adc
lock
xchg
ret
push
add
sti
addb
dec
imul
aas
movsb
fdivrs
fucomip
add
cmp
push
sbb
dec
adc
xchg
mov
fdivr
inc
insl
movsl
jbe
and
lds
sbb
mov
xchg
xchg
pushfw
mov
push
add
lea
fs
mov
mov
lea
push
mov
call
in
push
arpl
add
clc
aam
jnp
aaa
pop
mov
mov
lock
mov
xchg
je
je
ds
mov
inc
mov
sbb
xor
fdivr
insl
jo
xchg
sub
xchg
mov
mov
insb
shll
jbe
js
mov
test
adc
and
fs
inc
adc
in
xchg
dec
mov
jnp
dec
jbe
mov
adc
inc
insb
push
mov
mov
xchg
inc
out
cwtl
das
ss
in
inc
aas
das
aam
gs
popl
cmp
dec
pop
lret
jmp
xchg
jne
jo
hlt
nop
push
add
repnz
add
lods
mov
push
push
push
sarl
sbb
pop
ja
addl
data16
add
dec
loop
negb
out
lret
test
mov
fnsave
ljmp
aaa
sbb
rolb
add
daa
nop
jnp
inc
lret
repz
jns
cmpsl
add
lods
pandn
push
arpl
xor
inc
and
fcmove
pop
push
gs
xchg
fiaddl
push
rolb
cmpsl
mov
push
lock
les
sldt
xchg
out
pusha
imul
popf
xchg
xor
mov
shl
add
dec
loopne
pushf
cmpsl
or
ficoms
js
jecxz
mov
cmpsl
cmc
adc
sub
nop
push
notb
jmp
aaa
inc
pop
push
or
add
push
push
stos
andb
mov
roll
cmp
xorl
push
mov
adc
add
ret
or
xchg
aam
dec
rcrl
add
xlat
push
jecxz
mov
add
jae
jno
loopne
sbb
mov
insb
fxch
mov
loopne
sahf
xchg
movsl
popf
add
movl
push
mov
jne
pop
loope
or
loopne
jge
orb
ja
sub
push
adc
cmpsb
sub
daa
pop
sbb
pop
idivl
xchg
fldenv
mov
inc
and
cmp
shl
js
test
imul
sub
imul
rcll
mov
and
je
adc
aas
sub
jmp
push
lods
jb
add
popa
push
leave
inc
xlat
sbb
push
cmp
inc
leave
push
dec
xor
icebp
sbb
sbb
stc
xor
enter
or
rcrb
xlat
pop
ret
bound
cmpl
mov
push
pop
cmp
je
cwtl
push
in
mov
xor
pop
pop
adc
or
sbb
cmpsl
adcb
cwtl
dec
xor
rorb
sti
push
xor
jns
push
pop
andb
lea
push
push
push
add
fiaddl
and
lea
cmp
jge
inc
and
add
add
add
cmp
mov
and
jge
mov
stos
in
sbb
jne
xchg
push
inc
add
rclb
mov
test
fsubrl
mov
sahf
int3
sub
jl
pusha
and
mov
mov
or
mov
sbbl
sub
loopne
sub
dec
psubusb
aas
aam
outsb
push
or
test
addr16
xor
xlat
jns,pn
icebp
inc
fcmovb
and
sbb
push
xchg
ret
jo
insl
mov
int3
xor
dec
push
sbb
arpl
ja
push
fadd
scas
ja
rcrb
push
xor
sub
mov
insl
faddl
or
pop
rorb
rol
dec
mov
lcall
adc
add
popf
call
add
repz
mov
mov
add
sahf
add
es
imul
sub
add
xchg
fldl
mov
stos
mov
fldl
add
add
gs
cmp
fistpll
add
mov
fdivl
mov
ljmp
leave
adc
pop
enter
sub
jl
lock
mov
push
mov
addl
pushf
popa
les
push
push
lea
pop
and
fcomps
push
incl
inc
in
push
aas
rorb
cmpb
out
dec
or
je
push
cwtl
lock
mov
xchg
cmp
xor
dec
jae
mov
fsubs
shll
inc
movsb
xor
or
pop
or
inc
pop
fdivrs
sbb
std
or
cmp
ljmp
lock
xchg
lock
dec
sub
or
les
test
and
jae
cli
fisttpl
cwtl
loope
cmpl
scas
test
mov
lods
push
stos
xchg
test
ret
push
cmp
ficoml
pop
push
cld
je
or
xchg
inc
daa
push
inc
in
sti
pushw
mov
roll
icebp
mov
xorl
adcb
inc
xor
test
add
mov
xchg
pusha
cmpb
pop
push
mov
rolb
bound
adc
xchg
add
test
out
mov
pop
callw
push
sub
in
mov
mov
cmp
loopne
scas
and
jl
xchg
pop
in
lret
hlt
inc
out
pusha
add
cltd
popf
outsl
mov
ret
add
inc
mov
jl
mov
sub
push
arpl
rorl
js
push
loopne
mov
add
pop
add
movsl
mov
rol
push
xchg
test
ret
popa
sbb
std
mov
sub
sbbb
jmp
push
push
iret
scas
and
xor
setle
fnstenv
mov
pusha
rolb
fcoms
push
add
inc
test
xchg
mov
or
mov
sbb
sub
out
or
stos
sub
bound
mov
or
xor
push
lea
cwtl
push
xor
pop
sub
push
pop
fdivr
cmp
stos
mov
mov
or
dec
in
subb
push
int3
push
inc
inc
pop
adc
pop
mov
rcrl
cltd
xchg
loopne
mov
sub
enter
pop
or
sbb
call
ficoms
push
mov
gs
lock
and
imul
hlt
lea
pop
push
xor
add
sub
sti
push
rorb
jmp
adc
cwtl
sbb
inc
pop
xor
jnp
or
pop
pop
adc
rolb
fs
dec
or
leave
test
adc
add
or
mov
ret
scas
fsubrs
ja
mov
cmpb
addr16
popf
cmpsb
dec
ret
push
mov
js
dec
sub
clc
je
push
add
xchg
push
sub
push
add
adc
push
inc
push
xchg
mov
icebp
dec
fwait
push
pmulhuw
fadd
xlat
xor
xor
fcmovnu
fwait
jle
dec
outsl
xchg
lret
cmp
jl
test
mov
int3
xor
sarl
pop
sub
lcall
xor
cmp
jne
lret
out
xor
ret
cmp
push
push
shll
fcomps
out
push
or
cmp
je
sub
out
jo
push
push
stc
push
popf
fcomi
loopne
pushf
fistpll
add
flds
adc
push
sar
repz
or
xchg
and
sbb
bound
in
pop
adc
push
mov
lahf
in
xor
das
in
sub
jo
clc
fisttps
js
dec
or
in
xor
mov
out
xorl
jge
mov
mov
pop
call
push
cwtl
pop
imul
ja
adcl
and
pop
mov
add
ret
fidivrl
lcall
loope
out
inc
add
sarl
or
orb
dec
mov
popa
adc
add
cmp
outsl
adc
dec
or
mov
icebp
rorl
fwait
xor
int
jg
cmp
inc
and
cmp
je
sbb
jbe
outsb
clc
pop
mov
mov
fbstp
mov
mov
lods
mov
push
das
mov
push
add
inc
or
pop
pushl
test
mov
pop
ljmp
push
mov
push
dec
or
push
sbb
xorb
push
sub
dec
and
cmpl
cmpsb
dec
or
xchg
push
or
rclb
or
fmul
pop
movsb
mov
add
loopne
mov
and
mov
dec
add
sbb
aad
in
scas
cltd
or
jne
loope
fcoms
popa
adc
test
mov
dec
xchg
inc
cli
mov
add
js
or
xchg
icebp
mov
adc
leave
je
mul
seto
push
out
add
enter
imul
jmp
jnp
cmpsl
push
cmp
fmull
pop
lock
sub
test
shlb
cmp
shl
cltd
sub
and
cmpsb
inc
cs
dec
inc
add
inc
sbb
dec
pop
popa
sub
cmp
clc
fldl
mov
adc
icebp
pusha
cmpsl
sbb
and
data16
cs
inc
daa
or
add
inc
adc
in
pop
dec
test
mov
mov
sbb
test
pop
sub
lahf
add
xor
xchg
sbb
cmp
push
fdivrl
push
push
and
leave
add
nop
popf
push
sbb
push
in
pop
mov
test
lds
add
push
pop
sbb
cmp
je
sbbb
mov
xor
pushf
cmp
je
pop
xor
xchg
and
cmp
jne
ds
adc
dec
cmp
add
pop
mov
sub
lock
subl
sub
mov
mov
pushf
xchg
lods
xchg
faddp
jmp
jl
ret
dec
mov
test
je
cli
jmp
mov
inc
jno
lock
inc
cmp
jae
add
ss
mov
inc
xor
sbb
pop
jbe
mov
sub
push
and
sbb
jl
adcb
test
push
push
ss
mov
inc
jmp
stc
arpl
mov
test
cmp
bound
shl
push
std
cmp
mov
shlb
adc
mov
xchg
pop
or
push
loop
or
or
outsb
push
movsl
or
xlat
dec
enter
adc
or
ss
push
pop
cmpl
cmp
add
ja
lea
cld
ret
rorl
cmp
mov
adc
lea
jmp
push
jle
addl
mov
pusha
jo
add
mov
pop
cmp
out
lods
dec
or
push
inc
push
clc
dec
or
and
popl
rcrb
adc
inc
or
fnstsw
mov
or
mov
push
mov
and
inc
sbb
jg
push
imul
sub
adc
push
push
or
and
lock
insl
aad
push
cmp
mov
fwait
or
mov
mov
adc
add
and
hlt
add
pop
mov
sub
xchg
add
mov
mov
push
movsl
or
add
cld
adc
push
mov
jl
push
sbb
xlat
inc
orl
stos
xor
int
sti
xchg
jmp
or
mov
ret
and
sbb
dec
test
js
sbb
inc
out
sbbl
adcb
mov
push
test
sub
out
push
clc
aam
xchg
sub
push
push
out
sub
sub
adc
movsl
xor
test
test
pop
ret
call
mov
add
and
add
rol
inc
jp
aam
xor
push
bound
in
cmpsl
mov
dec
mov
rolb
push
jbe
fmuls
popf
ficoml
add
sub
or
sbb
jnp
out
jne
test
mov
push
push
lods
or
push
add
mov
sub
ror
pop
inc
xor
cmpsb
add
popf
cmp
add
adc
insb
lods
sub
add
ljmp
adc
pop
ret
or
jmp
in
and
mov
and
outsl
xchg
popf
dec
pop
mov
mov
push
adc
mov
jbe
push
orb
xchg
xchg
movsl
int3
jbe
and
jnp
jno
int3
ret
lods
mov
pop
add
jmp
jg
mov
shlb
xchg
add
sub
lock
add
loope
and
movl
and
add
mov
or
cmp
clc
and
inc
adc
imulb
mov
mov
pop
and
mov
in
pop
add
pusha
or
aam
mov
int
add
cwtl
fmull
sbb
je
outsl
test
sbb
aam
mov
icebp
xor
enter
sub
lahf
mov
push
add
imul
movl
jg
pop
inc
or
mov
push
or
xchg
pop
sub
sbb
enter
pop
cs
in
dec
lahf
or
mov
fmull
sub
into
addr16
jmp
inc
push
scas
leave
ret
cmp
mov
mov
sbb
mov
or
test
mov
cmp
js
mov
and
ljmp
pop
je
orl
push
mov
test
dec
rcll
sub
movsl
or
push
mov
jp
jle
mov
sbb
sbb
sub
mov
jnp
mov
ljmp
push
addb
add
dec
sub
movsb
repnz
popf
dec
fisttpl
push
push
add
inc
rcll
sub
orl
shll
loope
pop
inc
mov
insl
lods
mov
pop
and
mov
pop
popf
xchg
or
mov
xchg
adc
cld
lea
push
fnstcw
sub
sub
or
sbbl
sub
daa
sub
xor
add
cmp
adc
rcrb
dec
outsb
adc
clc
pop
fisttps
cmp
jbe
push
pop
cmp
inc
ret
pop
addl
mov
mov
test
mov
iret
mov
adc
mov
pop
xchg
out
inc
jo
arpl
out
cmc
mov
repz
in
cmp
push
push
sti
add
lea
pop
insb
lahf
cmc
and
fsub
in
rorb
push
xlat
sbb
into
pop
push
cltd
fsub
call
pop
push
daa
pop
leave
lea
cmpsl
adc
mov
in
push
loopne
hlt
enter
clc
adc
aad
push
iret
enter
push
dec
outsb
inc
les
sub
sbb
add
cmp
cmp
jp
sbb
adc
and
jae
mov
push
push
pop
inc
xor
test
adc
and
int
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
rolb
jp
ret
loopne
mov
loop
push
in
or
popf
add
mov
sub
lods
mov
adc
sbb
daa
aaa
inc
inc
mov
jb
mov
loop
mov
bound
xor
cmpl
and
inc
or
aad
pop
andb
push
stc
pop
xor
pop
and
lahf
adc
and
sub
sbb
fwait
addl
pushf
out
sbb
jg
push
cs
push
pop
fwait
aas
pop
pop
push
movsb
loopne
cmp
in
pop
xor
fimuls
and
sbb
sbb
in
sub
test
ljmp
lahf
push
fdivr
faddp
nop
mov
mov
js
push
ret
fisttpl
test
pop
inc
inc
das
add
mov
pop
sbb
mov
pop
hlt
push
dec
aad
mov
rolb
mov
xchg
and
outsb
cmpb
and
std
lods
es
cmp
cmpsl
and
xor
mov
dec
ret
dec
adc
into
and
cmp
scas
mov
stos
dec
or
rolb
mov
call
clc
adc
das
pushl
mov
sub
test
hlt
mov
adc
add
mov
push
push
adc
sbb
xchg
xchg
enter
mov
sbb
or
test
pop
lods
sbb
add
cmp
jl
test
jno
xor
xchg
sub
test
inc
mov
addr16
jmp
adc
pop
xchg
pop
ja
xchg
fiaddl
popa
xor
push
in
push
push
mov
in
test
push
fcoml
scas
and
test
pop
dec
push
std
lods
mov
mov
dec
sar
js
loop
out
push
push
push
in
mov
mov
lret
hlt
cwtl
or
or
add
xlat
cltd
or
mov
pop
mov
cs
push
add
push
insl
inc
test
mov
dec
hlt
add
push
imul
ret
jo
shll
ss
xor
dec
lcall
jno
orl
stos
nop
or
or
mov
sbb
imul
push
inc
dec
jmp
mov
lods
test
out
dec
push
sub
adc
jmp
jae
loopne
movsl
pusha
jo
inc
insb
pop
mov
and
loopne
fmull
in
movb
add
mov
inc
pop
ret
sbb
cmp
inc
push
popf
idivb
loopne
mov
xchg
mov
add
add
cmpsl
adc
in
test
add
pop
sarb
ljmp
inc
or
inc
jno
mov
mov
xchg
inc
or
or
jg
loope
mov
jne
pop
xchg
je
popa
push
push
lock
xchg
fstpt
mov
or
jbe
ljmp
xor
jle
xor
in
sarb
test
fmuls
rcrb
jnp
jl
rorb
pop
cmp
inc
mov
gs
insl
test
push
imul
inc
xchg
mov
push
icebp
adc
enter
out
jle
sbb
add
xor
cltd
xor
sbb
mov
loope
shll
add
cltd
inc
sbb
adc
fists
clc
cld
outsl
mov
clc
inc
push
sahf
sbb
fadds
or
sbb
mov
cmpsb
adc
fmuls
xchg
loope
shl
or
mov
xlat
shlb
cli
inc
lock
daa
in
add
add
xchg
push
popl
or
repz
neg
test
inc
or
cld
sub
mov
mov
xchg
cmp
sbb
xor
stos
jle
push
into
dec
xor
inc
incl
scas
es
add
xchg
push
js
inc
push
pushf
pusha
out
or
mov
mov
cmp
js
lds
and
xchg
rcrl
repnz
sbb
adc
fucomip
in
and
daa
and
jno
or
outsb
adc
icebp
xchg
clc
aas
dec
add
add
xorl
xor
add
or
imul
dec
sbb
or
sahf
xchg
cmp
sub
lahf
sbb
cmpb
pop
or
loope
push
adc
cld
mov
out
jnp
orl
push
push
lock
push
jp
inc
je
out
xor
or
push
outsl
adc
cmp
or
shlb
add
dec
loope
add
mov
or
dec
dec
rorb
xor
xchg
cmpb
out
lods
jnp
dec
pop
jne
push
mov
mov
push
inc
or
add
rorl
scas
and
imul
push
data16
fstpl
adc
cmp
jbe
sbb
inc
outsl
aas
sbb
sbb
adc
mov
xchg
stc
jae
cmp
jb
cmp
dec
mov
dec
adc
rcrb
mov
add
incl
cmp
lcall
adc
inc
je
ret
add
cmpsb
sbb
addb
dec
call
enter
andb
fildl
insb
pushf
add
pushf
inc
and
inc
xchg
push
cmp
dec
pop
or
push
push
or
out
add
push
aas
adc
push
push
fdivrs
aaa
push
addl
add
sbb
mov
adc
push
aas
ret
aam
out
and
add
shlb
push
test
sbb
jmp
test
mov
pop
xchg
mov
imul
js
inc
sub
fld
mov
pop
faddl
adc
pusha
dec
xlat
push
loopne
jmp
dec
incb
lods
dec
insb
push
push
push
lea
sbb
ja
arpl
push
jbe
lea
jmp
adc
adc
sub
stos
pop
add
pop
mov
adc
in
insl
lea
push
test
sub
js
pop
push
pop
mov
adc
add
sbb
or
test
incl
adc
dec
fdiv
scas
sub
cmp
xchg
pusha
lret
push
sbb
add
or
mov
rol
adc
sbb
sbb
mov
pop
push
nop
ljmp
adc
pop
imul
mov
mov
jbe
je
fnsave
and
sbb
lods
add
dec
mov
sbb
push
inc
sahf
call
ret
dec
cmp
sbb
jle
sbb
adc
pushl
add
dec
jmp
or
orb
dec
inc
cmpsb
pop
fbld
push
cmp
sbb
loop
jnp
sbb
dec
and
rolb
and
pusha
cmpsb
dec
call
cwtl
jle
inc
or
push
cmp
pusha
xchg
popa
movsl
icebp
sub
js
mov
jge
sbbl
or
mov
dec
add
inc
add
fldl
insb
sub
dec
xchg
shlb
sbb
xlat
and
bound
add
cmp
popa
sbb
jg
cmp
dec
in
jno
lea
lea
mov
mov
or
mov
imul
imul
mov
daa
fimuls
mov
pop
adc
push
lods
lret
int3
cs
adc
mov
loopne
mov
adc
and
mov
and
dec
dec
adcl
xor
or
test
sub
add
bound
movsl
sub
sbb
mov
sarb
pusha
and
sub
jo
cmc
and
mov
popf
jmp
in
popf
fiadds
mov
out
cmp
je
rcrb
int
daa
nop
inc
andb
outsb
mov
mov
push
xor
out
loopne
repnz
loope
sub
mov
ret
outsb
xchg
lret
adc
inc
idivb
je
sub
mov
div
aas
mov
cmp
cmp
jb
xchg
lret
mov
or
mov
rclb
add
xchg
add
mov
mov
orb
or
xor
xchg
cwtl
por
pop
add
fwait
mov
add
jge
pushf
mov
cwtl
add
xor
rclb
sarb
andl
ja
jmp
aam
sub
pop
call
orl
sub
incl
aam
aas
push
xchg
xor
dec
push
je
dec
jne
cmp
lea
mov
or
xor
adc
mov
and
das
lahf
xor
pop
jmp
add
insl
inc
leave
mov
in
int3
pop
cli
inc
and
es
sbb
mov
adc
add
rorb
aad
andl
cld
nop
dec
lret
movl
outsb
daa
xor
outsb
jg
gs
mov
lea
cli
jb
adc
jo
dec
push
inc
jle
xchg
ret
mov
adc
decb
mov
inc
arpl
loopne
ja
xchg
pop
sbb
insl
je
movsb
mov
mov
push
lret
mov
inc
adc
test
xor
aam
cmp
dec
fdiv
xor
adc
or
dec
or
sti
push
push
dec
lods
mov
dec
inc
ret
lcall
into
filds
xchg
push
frstor
push
ret
push
and
lahf
loopne
cld
xor
ds
je
iret
sub
cmp
mov
xor
cmp
or
subb
mov
loop
test
jg
sub
in
shll
lea
push
adc
inc
cmp
push
adc
movntq
pop
cmp
push
jne
cmp
jbe
sub
add
popa
enter
inc
sub
pop
into
jmp
sbb
in
sub
xor
clc
nop
mov
imul
roll
mov
mov
insl
clc
jb
fists
loopew
adc
ret
test
es
push
pop
or
or
xor
xchg
ret
sahf
or
jno
push
imulb
sbb
loopne
push
push
lods
adc
pop
aaa
push
fsubs
and
rcll
cmc
shr
and
je,pn
aaa
js
mov
orl
rcll
outsb
adc
sbb
mov
mov
stos
xchg
adc
ret
pop
pop
dec
push
jmp
je
fs
fcompl
test
sbb
fs
cmpsl
sbb
popa
add
xor
push
icebp
in
xorb
inc
cmp
cmp
mov
mov
xchg
dec
or
pusha
pop
ljmp
adc
mov
sbb
push
js
in
mov
mov
push
mov
adc
jno
divb
adc
aad
sbb
idivl
push
mov
fimuls
stos
icebp
inc
inc
cli
mov
cmp
xor
mov
jnp
adc
push
lds
sbb
stos
or
lods
fucomp
jo
add
inc
adc
push
and
sub
xor
adc
les
sbb
popa
mov
cwtl
sbb
scas
stc
adc
js
lcall
push
mov
pop
popa
and
adc
push
das
push
es
ss
mov
adc
lods
loopne
cmp
nop
sbb
sbb
cmp
jge
sub
mov
or
mov
or
adc
add
mov
in
ret
test
inc
pop
gs
xor
sbb
dec
add
or
test
fmuls
mov
lds
adc
dec
add
mov
rol
pusha
jo
enter
insb
in
mov
mov
lea
call
in
sbb
popa
xor
popf
mov
faddl
sbb
add
jbe
xlat
sub
or
arpl
jne
push
scas
mov
mov
push
fistpl
or
out
les
add
out
loop
out
in
xchg
add
imul
cwtl
mov
xchg
cmpb
insb
hlt
cmp
je
push
pop
imul
pop
add
xchg
and
mov
shrl
or
dec
push
xchg
movsb
fdivrl
mov
push
inc
or
ret
arpl
or
xchg
ret
and
cmp
lods
mov
mov
and
and
xor
lret
sti
sub
push
lods
and
mov
jae
into
and
rorl
ljmp
lret
push
or
push
add
lahf
jne
div
mov
cs
push
ss
add
mov
rorl
mov
das
jl
fisubl
mov
mov
xchg
cltd
daa
xchg
cltd
and
in
push
mov
xchg
sti
test
cmpsb
mov
fs
subl
cmc
int3
push
faddl
test
test
sbb
mov
dec
je
mov
jno
jae
sbb
add
inc
enter
jns
mov
test
cmp
or
inc
orb
jmp
and
dec
cmp
or
sbb
push
cwtl
mov
pop
push
test
notb
sbb
mov
and
loopne
inc
mov
sub
mov
aas
mov
in
cmp
sbb
and
sbb
cld
pop
or
shrb
push
dec
xor
in
pop
push
push
and
ja
pop
mov
xlat
cmp
daa
xchg
pop
mov
fistpl
lds
daa
iret
mov
xor
ds
cmp
into
test
es
adc
sbb
dec
mov
push
mov
enter
sub
movsl
loope
cmp
push
xchg
jg,pt
popf
or
aas
mov
mov
dec
cwtl
stos
ds
xchg
mov
mov
push
lret
js
mov
push
sbb
mov
mov
jp
fstl
pop
and
and
aas
mov
cmp
jo
dec
pop
xor
push
add
add
test
pop
cmp
mov
lret
push
out
cmp
jge
dec
stos
cs
movsb
jp
cmpsb
dec
push
mov
fsts
insl
out
sbb
mov
push
dec
and
sbb
cmp
sbb
lods
sarl
leave
aaa
inc
in
push
inc
xor
jl
sub
push
pusha
leave
xchg
jl
mov
mov
pop
xchg
fistl
push
mov
jecxz
mov
add
jecxz
dec
fwait
push
xor
movsl
sbbl
adc
xchg
jmp
or
adc
andb
add
inc
js
outsl
xchg
pop
xchg
and
insl
mov
fistps
out
cmpsl
or
mov
je
mov
out
sub
mov
and
sbb
adc
push
adc
xor
or
dec
pop
add
pop
jb
mov
pop
add
std
aas
xchg
add
pop
test
or
push
or
push
sti
push
cmp
and
and
ja
fs
sbb
mov
sbb
push
imul
or
sub
cltd
mov
and
and
imul
xor
xor
lods
push
mov
or
scas
xchg
pop
xchg
mov
xchg
add
js
pop
sub
xor
xlat
lea
xchg
xlat
jge
or
aaa
sub
push
add
inc
cld
pop
mov
out
pop
cltd
adcl
jo
cmp
xchg
xchg
add
sbb
sub
push
sbb
pop
mov
cmp
inc
pop
out
int3
mov
xchg
pop
dec
es
das
adc
add
lods
xor
xor
xorb
sbb
inc
mov
mov
xor
and
and
stos
rorl
popf
add
loopne
popf
adc
enter
sbb
pushf
or
pushf
inc
aaa
or
jmp
jnp
arpl
je
pop
es
adc
mov
jae
adc
jno
jge
loop
jno
stos
or
movsb
jb
mov
shll
xlat
call
xchg
inc
dec
dec
cmp
jecxz
cwtl
movsb
xchg
cwtl
outsl
jne
lea
lock
xchg
cmp
inc
push
andb
push
xor
add
inc
pop
mov
inc
divl
or
icebp
out
stos
shrb
pop
outsl
mov
cs
sub
andb
jg
cmp
mov
rcll
add
ja
push
adc
sub
inc
sub
mov
mov
xor
lret
inc
popf
pop
lea
orl
add
and
cmp
push
adc
cmp
or
xor
cli
pop
inc
push
and
sbb
pushf
jge
shrl
imul
shr
mov
out
cltd
pop
loop
push
mov
jbe
pop
and
rorb
or
cmp
xor
push
sub
roll
mov
clc
pop
enter
add
add
pop
mov
in
mov
out
icebp
dec
adc
mov
insl
ret
mov
nop
aaa
sub
fdivr
push
push
sub
leave
out
xchg
mov
or
mov
jno
imul
mov
sub
rolb
fildl
not
mov
xchg
or
cltd
adc
xchg
ud0
addl
pop
popf
pop
xlat
lods
sbb
sahf
fwait
lret
jp
cmp
xor
sbb
dec
or
mov
xor
jl
push
mov
jo
push
push
xchg
rcr
add
mov
jne
aad
cmp
ja
push
inc
dec
add
jo
or
mov
fldenv
and
sarb
or
cmp
push
mull
icebp
push
dec
cltd
cwtl
in
jo
dec
movsl
pop
sub
lock
pop
sbb
lret
popa
fs
popf
push
popa
mov
fistl
xlat
ja
sub
in
divb
mov
jmp
fnsave
adc
adc
addl
fcomps
pop
push
pop
jge
call
add
cmc
xorl
in
pop
int3
push
cmpsb
or
jo
cmpsw
ss
adc
mov
jae
xchg
pop
inc
cmpsl
mov
in
pop
call
jno
lret
mov
push
xor
cmp
sub
test
out
fsub
loop
cmp
mov
iret
cmp
stos
jno
push
dec
push
xchg
mov
std
add
jp
sub
cmpsl
jno
pop
sti
sbb
in
pusha
fcoms
fidivrl
mov
pop
inc
sub
pop
or
add
and
push
inc
push
and
sbb
in
pop
and
fcoms
nop
sbb
xor
and
mov
fcoms
inc
and
and
xor
fdivs
mov
and
call
lds
je
negl
push
xchg
daa
push
jno
jp
sub
daa
stc
imul
and
sub
sub
pop
sub
inc
or
inc
leave
adc
test
or
sbb
out
pop
push
les
add
fnstsw
push
jnp
negl
mov
push
push
sbb
pop
arpl
dec
adc
add
or
sbbl
movl
int
outsl
jne
mov
and
mov
jle
dec
mov
mov
and
xor
imul
rcll
pop
cmp
dec
add
or
inc
or
pusha
lea
fildll
sarb
and
inc
lcall
cltd
nop
sbb
adc
cwtl
mov
or
daa
xchg
sub
testl
xchg
dec
adc
or
ret
sbb
adc
and
add
add
and
dec
clc
movsb
push
inc
in
out
inc
add
je
iret
jo
inc
or
and
inc
or
cmp
int3
shrb
ret
js
lock
js
lea
popf
push
rclb
sub
scas
shrb
and
mov
daa
adc
rcrb
daa
or
sub
pop
pusha
loopne
add
push
jbe
sbb
into
faddl
push
or
jl
outsb
stc
fisubrl
mov
pop
adc
mov
loopne
dec
jne
test
xchg
push
out
or
aam
xor
test
out
mov
push
ja
imul
sub
adcl
inc
adc
lock
or
scas
xchg
scas
pop
pusha
push
pop
push
xor
loopne
push
dec
pop
or
in
and
repnz
adc
xor
les
rorb
cmp
xor
jge
sbb
test
or
lods
rcll
or
lock
push
dec
and
pop
lock
mov
mov
adc
or
loopne
mov
add
cmpsb
stos
sub
fs
add
je
imul
push
int3
bswap
push
icebp
mov
bound
mov
sub
repnz
add
push
adc
lea
push
mov
nop
sbb
and
fld
movsl
jge
popa
call
pusha
xor
dec
ffree
in
imul
cmp
shll
push
push
mov
sub
sbb
or
inc
inc
sub
rol
push
adc
add
enter
imul
dec
cmp
lea
jo
lahf
mov
and
pop
call
adc
mul
dec
push
pusha
cmp
stos
ficoms
and
decb
jge
add
faddp
cmpsl
adc
sbb
addr16
hlt
pop
test
and
cmc
jnp
push
repnz
loopne
out
adc
stos
dec
sub
es
pop
repnz
adc
cmp
lcall
idivb
inc
jne
push
loopne
sarb
mov
jge
mov
mov
loope
dec
fldcw
or
add
add
aaa
add
mov
dec
movsb
cltd
clc
push
push
shr
add
andl
pop
movl
pmulhuw
sbb
adc
push
adc
mov
sub
std
xor
mov
shl
xor
jns
mov
lods
adc
mov
adc
nop
push
cmpsl
inc
stos
jge
es
movsl
jae
aam
sub
sub
mov
popf
jae
sbb
mov
xor
add
mov
or
jecxz
mov
clc
or
js
lea
pop
inc
pop
nop
add
xchg
test
and
iret
xor
orl
cmpsb
adc
and
rcr
dec
dec
addb
jmp
rorl
addl
dec
push
inc
jmp
mov
xor
scas
arpl
xchg
bound
mov
subl
mov
cmpsl
or
pop
fistl
add
jmp
sub
popa
lds
jbe
addl
add
mov
or
add
and
in
add
movsb
inc
stos
mov
lock
mov
std
mov
mov
sbb
leave
mov
cmp
adc
mov
mov
push
mov
dec
sbb
sub
movnti
inc
or
bound
std
test
or
jae
aas
ret
aam
pop
push
push
or
push
mov
movsl
fidivrl
pusha
cmp
xchg
add
add
sub
pop
or
or
les
ret
cmpsl
mov
out
in
inc
mov
dec
fsub
cmp
jle
loope
clc
jg
jae
inc
add
outsb
mov
fcomps
cmp
subb
cmp
mov
cmp
mov
pop
pop
or
xchg
faddl
sub
xor
sbb
pop
gs
paddusb
mov
sbb
mov
lret
popf
les
jp
cltd
add
or
addb
lock
pusha
enter
jne
or
adc
sbb
daa
stc
add
test
sbb
add
pop
inc
push
push
dec
mov
in
sub
add
fistpl
pop
cwtl
ficoms
inc
daa
sub
stos
xor
xor
mov
sbb
adc
sbb
imul
enter
cmp
dec
rorb
mov
lea
mov
mov
out
insl
mov
movl
jp
inc
cltd
push
enter
ljmp
cld
lea
js,pn
dec
cmp
dec
dec
outsb
pop
or
jae
or
pop
or
push
hlt
bound
sub
loopne
insb
sti
adc
or
push
add
shlb
insb
ret
inc
xchg
inc
sbb
lcall
movl
adc
add
popa
scas
add
dec
sub
sarb
add
cmp
lock
cmp
or
dec
sbb
add
insl
pop
lea
jmp
arpl
adcb
or
cltd
inc
push
add
popf
pop
adc
add
mov
jp
add
add
dec
adc
dec
rolb
das
test
shlb
scas
jne
or
xchg
mov
add
sbb
adc
or
inc
movl
sub
popf
mov
mov
outsl
inc
sti
out
xor
cs
mov
addl
or
add
push
mov
add
mov
add
js
inc
lea
clc
cmp
dec
popa
inc
ja
mov
loope
aas
popf
cwtl
je
dec
adc
and
imul
mov
es
js
inc
or
add
or
mov
lods
xchg
add
imul
clc
inc
adc
adc
inc
loop
adc
outsl
popf
cs
xchg
cwtl
bound
and
scas
push
mull
cmpsl
push
jb
rcrb
cmp
lea
pop
push
push
xor
in
dec
mov
out
push
daa
push
xor
sbb
jb
aas
sbb
int
out
aad
je
sahf
incl
das
rolb
pop
cwtl
add
iret
leave
push
fdivl
add
das
subl
cmp
mov
dec
cmp
movsb
fcmovnb
inc
outsb
mov
jp
cmpsl
push
nop
inc
sbb
movsl
adc
decl
rcrl
or
inc
pop
jns
in
push
sub
dec
dec
xor
inc
xchg
pop
rorb
adc
xchg
sub
es
and
insl
pusha
push
mov
rcrb
sub
dec
in
pop
rol
adc
adc
enter
adc
sarb
add
add
mov
data16
sarb
test
orl
xor
fdivs
out
shlb
xchg
mov
js
push
test
sbb
inc
test
xchg
pop
sub
push
lock
jg
pusha
faddl
push
dec
inc
or
sub
lahf
adc
mov
lea
dec
and
mov
adc
jbe
fsubrs
cld
sbb
cmp
dec
inc
mov
sbb
adc
xor
inc
repnz
xor
shrl
sbb
mov
mov
mov
xchg
mov
mull
add
data16
push
or
les
add
mov
adc
sbb
enter
test
aas
push
lods
mov
clc
xlat
hlt
add
adc
and
test
pop
cmp
add
dec
jb
add
roll
arpl
xchg
repnz
scas
push
lcall
lret
cmovb
jge
call
subb
adc
push
movl
push
inc
inc
mov
sub
into
jg
inc
ud2
dec
sti
inc
push
mov
add
cmp
nop
out
xchg
dec
dec
inc
icebp
push
add
xchg
data16
add
xchg
and
pop
mov
push
jge
lea
insb
jo
fwait
and
or
jmp
inc
cmp
ss
into
push
sahf
cltd
jae
mov
in
mov
or
push
movl
cwtl
or
push
insb
or
subl
mov
dec
sbb
icebp
cmp
lods
push
pop
ror
push
mov
cmpl
mov
in
mov
push
jmp
pop
negb
add
sbb
xchg
addl
cmpsl
add
inc
popa
mov
mov
xchg
jns
push
ficompl
arpl
shr
addr16
sbb
gs
push
fdivs
mov
pop
cmp
insb
adcb
shlb
jo
mov
cmp
fimuls
sbb
adcl
shrb
mov
jl
add
dec
dec
fs
mov
pop
add
dec
add
xorl
inc
add
pop
xor
popa
lock
xor
clc
xchg
mov
sbb
stos
jnp
repnz
andl
pop
popf
cmp
add
pop
cltd
inc
dec
out
repz
pop
in
add
mov
add
inc
jnp
push
in
jge
lea
movsb
mov
shll
mov
mov
clc
mov
adc
add
test
rorl
fistpll
cmp
xor
xchg
jl
fisubl
add
xchg
sbb
jg
out
movl
addb
adc
syscall
rcl
mov
mov
dec
subl
mov
cmp
test
add
stos
lods
rol
out
push
push
dec
shrd
push
fsincos
add
mov
jge
or
jnp
mov
movsb
bound
and
xchg
cltd
lods
lock
mov
or
sub
sub
mov
jo
and
inc
sbb
pop
bound
or
imul
inc
bound
addr16
fdivs
sbb
cltd
pop
mov
xchg
mov
pop
dec
jo
jae
call
push
ja
sti
adc
adc
mov
fcoms
jno
mov
or
out
push
push
xor
xchg
pop
inc
andl
and
mov
xchg
mov
lcall
imul
shlb
in
mov
xchg
sbb
or
js
loopne
xchg
push
enter
addl
js
movsbl
mov
ss
pop
jno
jne
and
mov
je
adc
fwait
dec
fisubs
adc
adc
mov
pushf
mov
cmp
sbb
gs
mov
hlt
push
inc
test
rolb
pop
dec
cmp
lock
mov
lret
mov
sbb
pop
js
je
lret
jbe
mov
cld
adc
xor
in
jnp
jne
mov
xor
xor
jecxz
std
addl
lea
stc
lock
fwait
push
bnd
hlt
pop
dec
lods
repnz
dec
push
xor
addb
arpl
mov
mov
arpl
pop
lcall
gs
jno
xchg
fwait
and
shrb
sub
dec
nopl
repz
sbb
jns
std
lock
and
xor
jno
or
sub
and
mov
push
and
cmp
faddl
out
out
fsubrp
or
push
add
es
adc
add
int3
add
in
jmp
add
das
ret
xchg
mov
mov
hlt
and
inc
loope
pop
mov
dec
push
mov
shrl
push
pop
sub
push
push
jg
bound
sbb
and
popa
inc
xchg
mov
sub
mov
popa
and
imul
and
je
insb
fiadds
jmp
cmp
scas
sbb
jno
xor
das
push
mov
and
add
mov
test
sbb
xchg
fstl
or
aam
mov
dec
into
sbb
inc
xor
out
add
ret
mov
mov
or
push
mov
mov
shrb
cld
leave
daa
or
or
inc
das
lret
andb
mov
aaa
lea
rcrb
lret
or
pop
pop
cmp
xchg
clc
imul
jl
popa
je
mov
ret
test
fstps
shrb
in
loope
jnp
jns
mov
push
cmp
in
mov
add
sarb
icebp
lret
mov
popa
sbb
cmp
ja
mov
mov
mov
movl
mov
jl
or
mov
gs
pop
mov
test
cmp
add
push
stos
and
aam
pop
clc
adcb
and
rclb
mov
adc
call
adc
arpl
push
imul
insb
insb
add
jno
lock
clc
adc
mov
pop
enter
adc
mov
add
test
popa
cmc
mov
cmp
cmovbe
pop
inc
aaa
add
scas
mov
shrb
push
int3
shr
xor
pop
int
sub
jno
sbb
xor
mov
pop
mov
inc
pop
arpl
sub
and
movsl
jo
in
in
adc
pop
bound
movsl
movsb
pop
popa
add
add
rcll
inc
add
mov
mov
inc
aas
inc
popl
push
and
aam
jbe
aam
hlt
fsubrl
sub
insb
fldl
or
push
clc
sub
clc
jmp
jno
stc
sub
push
add
push
push
push
push
push
inc
jl
mov
xor
and
pop
popf
lds
sub
or
icebp
insb
jne
mov
call
sub
mov
inc
push
jne
dec
fmuls
adc
or
out
jns
adc
int3
lods
xchg
ror
push
pop
or
sbb
adc
xorl
pushw
push
adc
repnz
xchg
nop
imul
mov
mov
das
adc
xor
sub
adc
sbb
loopne
mov
add
add
sub
test
js
imul
pop
sti
xor
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
mov
adc
sti
push
pop
add
lret
pop
or
mov
orb
or
cmp
jmp
sti
or
cmp
js
add
xor
sbb
xchg
jbe
scas
or
inc
dec
popf
enter
adc
push
inc
lret
adc
add
add
cmp
add
ss
cmp
mov
mov
inc
sbb
jne
nop
push
and
subl
jno
movsb
nop
movb
sub
add
sbb
dec
sub
cmp
imul
adc
sub
nop
xor
outsl
cwtl
mov
mov
aad
mov
xchg
push
mov
jg
push
push
rcl
xchg
mov
adc
movsb
adc
jbe
pop
insw
xchg
addr16
jmp
mov
lock
inc
mull
jbe
cmp
push
cmp
or
jne
sbb
in
pop
int3
clc
jo
or
jnp
add
lret
adc
aam
cmp
nop
dec
jno
cmp
mov
sbb
jno
push
xor
enter
in
adc
enter
mov
lods
jne
mov
push
out
jg
outsl
adc
inc
cwtl
in
push
push
jo
xlat
mov
mov
loop
adc
jecxz
mov
mov
dec
test
mov
adc
add
and
sub
mov
xchg
mov
arpl
rorb
jp
inc
inc
mov
hlt
popa
jecxz
dec
in
mov
dec
in
ret
cmp
bound
inc
pop
por
and
dec
mov
fwait
push
je
jge
mov
lock
pop
add
xchg
cmp
cmpl
ss
mov
xchg
fdivrs
lret
pop
into
pop
dec
pop
rcl
adc
cmp
js
rolb
jmp
sbb
rcl
decb
pop
int3
je
ds
int3
pop
push
mov
xchg
les
andl
jmp
dec
in
push
fists
fs
xchg
mov
and
clc
mov
and
insb
divl
aad
mov
dec
mov
jle
insb
xor
pop
cmp
in
inc
dec
dec
jge
push
rorl
loope
fs
cwtl
mov
or
sbb
pop
add
and
adc
jge
push
test
daa
aas
fstpt
daa
pusha
in
mov
sbb
lret
test
mov
ja
xor
in
sbb
xlat
lcall
ret
jns
pop
fmuls
sbbl
push
mov
mov
shll
ss
mov
std
flds
cli
aas
push
lea
push
xor
or
scas
push
lock
loopne
int
dec
mov
xchg
sbb
pushl
push
pop
dec
fidivrl
mov
jns
movsb
fnstenv
sub
imul
cmp
inc
dec
mov
rcrb
adc
cmp
pop
nop
stc
jle
add
cmpw
sbb
cmpb
scas
or
push
cld
mov
pop
push
pop
mov
add
sar
sub
mov
push
repz
pop
mov
jns
les
pusha
adc
pop
jns
sbb
add
lock
add
xor
xorb
add
iret
inc
pop
lock
in
mov
dec
push
subb
sub
jl
sub
jmp
mov
pop
sti
lcall
dec
movzwl
cmpl
push
adc
and
or
test
sub
inc
ret
sbb
cs
add
cmp
add
mov
subb
ss
xor
adc
mov
jae
outsl
push
sbb
xor
addr16
inc
add
mov
push
fs
push
je
xchg
mov
insl
sysret
in
sub
xchg
pop
and
pop
and
push
adc
sbb
push
and
out
lcall
jb
fs
push
cmp
dec
and
add
and
pop
aas
pop
dec
pop
push
pop
push
dec
push
arpl
jb
jo
cmp
add
shl
and
test
pop
divps
adc
adc
mov
inc
fadds
push
and
roll
push
imul
icebp
and
cwtl
stos
out
inc
add
add
add
and
nop
pop
aaa
pop
mov
popa
sub
add
orb
scas
sub
adc
add
rolb
mov
pop
shlb
cmpsl
add
jp
inc
adc
call
and
aam
or
lock
call
mov
fwait
jle
adc
pop
adc
shr
push
mov
sbb
pop
fwait
int
mov
pop
dec
inc
iret
mov
cmp
sbb
and
fucomp
and
add
sub
push
or
mov
pop
adc
cmp
sub
js
mov
add
add
pop
adc
pop
jl
xor
push
shll
mov
dec
orl
test
test
inc
adc
orl
repnz
push
or
or
jne
pop
add
add
pop
lods
or
inc
push
pop
dec
daa
outsb
inc
jp
cmc
push
cmpl
pop
je
or
adc
adc
leave
or
mov
mov
faddl
in
and
sbb
arpl
jl
add
or
jne
or
test
hlt
ds
lea
mov
mov
sbbb
inc
mov
into
adc
inc
dec
pop
jne
imul
sub
inc
add
loope
push
and
xchg
les
aaa
scas
push
je
and
hlt
and
aas
or
xchg
push
out
mov
call
push
and
fldl
sbb
pop
sbb
iret
hlt
lcall
ja
out
fnsave
jno
sbb
rcrb
sbb
in
loopne
mov
xchg
inc
lods
sub
roll
mov
dec
fdiv
aas
sbb
mov
dec
push
mov
stc
stc
aad
and
mov
push
loop
sub
incl
fcom
mov
lahf
fimull
inc
and
addl
jge
mov
xchg
or
push
push
dec
jo
inc
mov
in
cmp
pusha
sub
mov
pmaddwd
gs
sbb
adc
xor
or
mov
mov
push
lahf
xchg
enter
xor
push
inc
aaa
pop
fs
push
mov
jmp
push
push
das
or
and
pop
loope
mov
jmp
adc
dec
lahf
adc
pop
pop
or
mov
adc
inc
sti
pop
inc
xchg
cmp
mov
add
rolb
mov
and
adc
mov
sub
mov
pusha
add
push
adc
xchg
xor
inc
add
mov
and
fists
cmp
mov
mov
mov
daa
add
or
mov
push
sbb
mov
xchg
lahf
stos
pop
aaa
adc
daa
dec
lods
inc
mov
push
bound
cmp
pop
xchg
lcall
sub
les
push
dec
push
std
lock
icebp
push
or
push
iret
xor
sbb
lcall
push
mov
dec
pop
sub
pop
repnz
mov
pusha
popa
dec
inc
test
jmp
cmp
jne
ss
out
repz
and
xlat
inc
inc
dec
xchg
xor
mov
push
test
test
mov
mov
loop
push
pop
fwait
in
test
sbb
pop
or
hlt
lea
fcoms
fdivrp
push
sbbb
xchg
pop
movsb
xor
adc
jae
mov
shrb
sub
push
jge
mov
aaa
add
test
push
xchg
into
or
dec
rol
jmp
aam
xor
or
or
enter
cmp
rcrl
dec
mov
mov
pop
imul
pop
pushl
cmpl
movsl
inc
outsb
or
mov
andl
jge
inc
xchg
inc
subl
mov
push
or
jp
add
dec
inc
es
dec
shr
inc
aam
sahf
data16
mov
fisubrs
sub
je
nop
inc
add
movb
jne
push
add
flds
inc
push
push
sub
enter
jne
fists
lret
push
lods
jnp
xor
movsb
pop
xchg
push
add
jle
lret
or
cld
jmp
add
xchg
mov
loop
pop
lea
dec
aaa
movsl
sub
js
pop
pop
and
mov
lea
push
push
je
nop
lock
cmp
das
jae
push
and
and
pop
fsubrl
fisttpll
clc
push
xor
pop
sahf
and
or
cmpsb
cmp
cmpsb
cld
hlt
xor
xor
sub
shlb
mov
loop
or
push
push
add
repz
insb
pop
and
stos
push
and
push
call
cmp
sub
push
jne
push
adc
and
xchg
push
adc
cmp
jmp
push
jg
mov
clc
repz
cmp
out
pop
es
and
je
imul
out
push
pop
sub
xchg
addl
sbb
enter
mov
sub
mov
ret
mov
test
bound
mov
sub
hlt
xchg
or
add
fmull
rol
add
adc
mov
mov
ja
adc
inc
or
pop
jns
adc
inc
sub
adc
mov
add
jmp
test
mov
inc
pop
js
mov
enter
dec
jmp
mov
test
or
daa
and
mov
enter
stos
test
test
or
sub
pop
iret
fldenv
loopne
lret
or
cmp
es
lods
ret
cmpsb
dec
mov
test
jno
xor
xchg
sar
fcoms
jo
mov
cmp
in
or
add
add
add
xor
test
or
pushf
inc
dec
inc
adc
lcall
in
lret
scas
sub
xchg
mov
mov
cmp
xchg
push
xchg
dec
jne
push
dec
add
icebp
lea
mov
inc
xchg
xchg
push
shr
cmpsb
push
loope
orb
cmp
sub
leave
xor
dec
ret
xor
or
test
mov
lock
sbb
add
imul
mov
mov
jbe
pop
aam
or
xor
or
or
xor
or
push
into
add
pop
mov
add
mov
fisubrl
add
jecxz
or
xchg
and
add
adc
sbb
cmp
push
push
jp
lock
add
loope
mov
mov
push
sbb
filds
lret
pop
add
push
pop
aaa
inc
mov
popa
cmc
or
mov
add
in
negb
sub
inc
dec
adc
dec
push
or
je
jg
xchg
loopne
cltd
arpl
addr16
mov
inc
imul
sbb
and
add
ret
mov
or
inc
mov
pop
pop
xchg
sub
push
sarl
in
mov
pop
sbbb
and
repnz
jne
inc
add
fwait
hlt
imul
sbb
and
xlat
inc
mov
push
hlt
imul
sub
stc
sub
jnp
clc
imull
mulb
cli
cmp
sbb
inc
popa
inc
aaa
mull
add
xor
xchg
cmc
push
and
loop
xchg
pop
lea
or
out
orl
sbb
xor
push
pushf
pop
sub
aas
int3
in
mov
push
lahf
cld
imul
push
shrb
sti
sub
icebp
in
lods
andl
sbb
mov
and
pusha
mov
push
fwait
mov
pop
clc
gs
mov
push
sub
pop
inc
and
or
movsb
jo
in
adc
rol
fisttpll
and
xor
jbe
adcb
jb
test
es
pusha
xor
inc
rcrb
sbb
ret
jp
movsl
out
sub
popf
cld
icebp
mov
push
jo
add
stos
in
sub
hlt
push
or
sub
cltd
sub
movsl
and
mov
insb
popf
scas
xchg
inc
mov
fnstsw
dec
loopne
in
sub
mov
test
sub
daa
aas
gs
shlb
sbb
roll
push
lea
insl
cmp
andl
adc
hlt
or
add
xchg
xor
sub
std
nop
xor
and
push
scas
rorl
xchg
nop
dec
lret
and
insl
pushf
xchg
pop
add
pop
xchg
ficoms
adc
push
cs
fs
lods
das
jb
pop
and
push
ret
push
mov
adc
add
mov
subb
pop
and
add
add
xor
rol
cmp
jmp
fwait
push
sbb
call
lcall
adc
leave
mov
lock
inc
insb
cwtl
rol
dec
jg
push
inc
jns
dec
test
pop
xor
bound
dec
mov
mov
fstl
cmp
jo
arpl
cmpsl
adc
xchg
jbe
mov
jnp
inc
adc
sbb
push
or
clc
sbb
jo
and
cli
repnz
aaa
aad
and
pop
push
and
add
push
add
dec
leave
in
xchg
dec
inc
inc
test
add
push
or
jnp
mov
cmp
push
sub
lea
inc
cmp
push
mov
push
and
push
push
dec
or
in
jmp
xor
lea
adc
mov
lcall
push
ja
mov
mov
vphsubbw
adc
shll
mov
add
xchg
andb
pop
imul
cmp
dec
in
pop
inc
sbb
leave
into
and
inc
or
shr
mov
shlb
mov
imulb
push
sub
daa
jne
lods
xorl
insb
push
jnp
or
jo
cltd
mov
push
out
mov
mov
xor
push
into
popl
out
dec
imul
adc
pushf
push
mov
jg
std
or
test
adc
sub
pusha
sub
xor
xor
stc
lock
or
dec
enter
push
add
xchg
adc
cmp
andl
pop
in
inc
fisubl
mov
cli
adc
in
mov
dec
jo
jo
into
lock
add
jno
dec
add
inc
icebp
sbb
clc
and
jmp
clc
jl
or
or
xchg
mov
adc
xchg
mov
add
push
sub
clc
push
jnp
outsl
cmp
mov
and
xchg
xor
pop
mov
adc
scas
xor
call
xchg
mov
jo
push
pushf
pop
add
mov
sub
sbb
xchg
popa
or
adc
cmp
pop
dec
ss
jge
mov
xor
xor
in
mov
jae
hlt
push
dec
push
cmpb
sbb
inc
lcall
out
add
in
pop
add
sbb
rcrb
push
add
and
adc
push
mov
cmp
add
popa
mov
adc
and
adc
loop
movsl
imul
jl
es
out
adc
xchg
or
xor
jb
scas
jns
das
icebp
push
xorb
mov
sbb
mov
shll
add
inc
fisubs
add
clc
sarb
xchg
xor
sbb
cmp
jno
popf
loop
mov
xor
jge
pop
arpl
adc
pop
and
xchg
add
insb
ja
push
mov
jns
xchg
add
cmp
aad
mov
lea
cmp
ret
sbb
jo
mov
jns
dec
inc
lock
scas
jge
mov
inc
adc
hlt
cmp
movsb
lods
or
dec
cmp
inc
push
mov
or
sbb
ret
roll
insl
xorl
and
push
nop
test
adc
adc
inc
cwtl
std
lcall
and
jecxz
inc
dec
adc
and
sbb
test
and
ja
repz
xchg
sbb
mov
cmp
lds
adc
push
or
test
shrb
stc
mov
push
lret
shrl
das
rcll
mov
and
movsb
or
or
adc
push
mov
mov
fistpll
xor
insl
fisttps
and
ja
lds
insl
in
out
insl
mov
pop
sbb
sbb
add
shrb
add
or
jp
sub
inc
push
arpl
jns
and
stos
fiaddl
add
inc
sahf
fistl
xorb
add
cmp
das
and
insl
xor
push
insb
push
leave
test
or
add
ret
xchg
add
les
movl
cltd
ljmp
test
cmp
xchg
shlb
add
adc
adcb
push
ja
sbb
add
cwtl
rcll
push
pop
pop
sbb
je
gs
dec
cmp
inc
pop
or
hlt
pop
cltd
punpcklwd
mov
mov
imulb
outsb
cld
mov
dec
jecxz
pop
in
adc
je
inc
ret
sbb
adc
add
jbe
mov
push
bound
mov
aam
or
js
add
mov
lods
pusha
add
xor
xor
push
int3
or
mov
aaa
mov
leave
sub
sbb
loope
movsb
movsl
pusha
sbb
add
outsl
jno
add
inc
sti
pop
rcll
or
fimuls
arpl
sarb
rorb
rcl
cmp
fisttpl
push
fisttpll
jno
fstps
pop
mov
mov
mov
xchg
mov
mov
nop
jge
mull
daa
mov
mov
xor
dec
fistl
pop
add
popa
inc
sub
scas
push
mov
lock
lds
jmp
jp
adc
xchg
cs
dec
loop
mov
scas
sub
into
push
mov
xchg
xor
popa
sub
jbe
rol
xchg
jl
ret
jle
pop
sub
adcl
nop
xor
decl
testl
inc
push
jle
loop
add
jne
das
fdivrs
lahf
push
adc
mov
add
jg
push
insb
mov
cmp
js
fcomps
ret
pop
cs
xchg
lock
add
push
ror
scas
cmpsb
in
fcmove
stos
add
push
rolb
push
orb
je
inc
loope
and
jle
add
in
inc
movsl
bound
mov
push
daa
add
mov
insb
popf
adc
jnp
nop
or
add
inc
lea
sub
test
je
xchg
or
out
orl
jle
lock
push
pop
push
push
outsl
pusha
sub
scas
sub
fs
sub
xorb
inc
push
fldenv
cmp
fiaddl
pop
xor
sub
jne
aad
stos
in
sub
dec
ret
or
pop
lret
mov
nop
shl
push
sahf
add
inc
jl
xchg
push
je
push
and
addr16
outsb
inc
xor
inc
and
or
jmp
cld
cwtl
and
adc
push
xchg
or
les
add
jno
in
mov
clc
and
clc
sarb
xchg
pop
loop
xor
sbb
or
outsb
adcb
add
jne
add
push
sub
push
pop
xor
loopne
jb
iret
push
sub
lea
push
mov
mov
xor
lods
inc
sbb
pop
lds
fwait
sbb
cs
hlt
dec
ret
mov
xchg
mov
pop
lcall
jl
adc
addps
test
sub
roll
mov
shl
cltd
ss
aam
pusha
pushf
push
lea
pop
js
and
outsl
mov
dec
lcall
lret
fimuls
dec
mov
dec
mov
ljmp
xor
pop
call
adc
pop
fstpl
or
std
aam
add
push
imul
push
test
outsb
sbb
push
xor
sbb
jle
mov
ret
nop
dec
mov
inc
mov
mov
push
sbb
loopne
arpl
mov
popf
in
add
out
out
icebp
hlt
shr
sub
call
das
add
js
push
sahf
pop
in
adc
push
lea
repnz
adc
inc
mov
insl
or
dec
gs
imul
repz
push
pop
inc
sti
cmp
add
fwait
xor
mov
jp
mov
das
mov
inc
push
adc
shll
test
jg
movl
imul
adc
fldz
and
add
testb
and
cmp
and
sub
jnp
push
mov
push
cmp
insb
and
pop
imul
xor
mov
dec
adc
push
loopne
xor
cmp
test
add
in
mov
mov
pop
pop
mov
shlb
mov
test
mov
pusha
rorb
fisttpll
mov
xchg
xor
dec
or
jne
loopne
mov
add
lea
fsubs
call
inc
sbb
add
call
pop
call
stc
mov
inc
mov
scas
sbb
lahf
test
add
xor
mov
or
push
scas
xorl
jmp
call
xor
sbb
adc
cmp
push
cmp
jle
stc
pop
jle
cmp
jp
push
cmp
cmp
inc
pop
add
jge
mov
mov
push
add
inc
jmp
or
mov
lret
clc
movw
lret
mov
cmc
add
bnd
mov
push
mov
cmpsb
cs
icebp
cltd
pop
idiv
lock
xchg
cld
adc
scas
imul
fcoms
mov
add
mov
cmp
and
test
adcb
call
fnstcw
push
popa
or
outsb
jbe
push
dec
or
hlt
cmpsl
xorl
mov
data16
pop
and
xor
pop
mov
dec
js
add
and
movsl
or
adc
and
adc
or
cmp
and
jecxz
int
mov
sbb
sub
xor
cmp
mov
adc
add
nop
dec
push
fdivrs
xchg
dec
scas
pop
insl
iret
jo
cmp
or
repnz
nop
xchg
dec
outsb
pop
or
adc
pop
sbb
enter
les
nop
and
test
sarb
or
and
add
loopne
cmp
lret
jg
push
push
rolb
mov
dec
insl
add
mov
fidivl
jl
outsl
pop
sub
or
into
cmp
add
adc
add
push
inc
fimull
dec
push
sub
or
leave
push
nop
sub
or
add
push
repnz
mov
and
jns
xor
sbb
dec
orb
and
bound
push
dec
leave
jmp
xor
popa
push
jo
cli
ret
adcb
std
inc
rcl
adc
aam
loope
subb
cmp
sbb
xchg
inc
push
cmpsb
aaa
sbb
mov
sbb
popa
mov
loop
push
jo
cmpsb
add
mov
sub
in
mov
inc
fwait
jl
sbb
fidivl
and
add
mov
add
or
outsb
adc
and
and
jnp
cs
leave
sub
fstl
add
push
jmp
lods
shlb
mov
adc
es
popa
adc
sbb
outsl
sbb
push
mov
cmpsl
std
cmp
stos
aad
pop
lods
test
stos
in
mov
ret
int3
andb
add
add
sbb
and
popf
adc
shlb
sbb
xor
sbb
leave
nop
pop
dec
es
adc
add
rcll
aas
add
add
jne
xor
add
add
or
and
push
xchg
and
inc
loopne
in
add
push
and
sar
les
mov
mov
or
adc
sbb
stos
loope
or
fwait
loope
hlt
jb
and
mov
out
rol
push
sbb
sbb
mov
push
mov
cli
sbbb
test
xorb
dec
push
int3
push
icebp
or
and
ret
add
add
mov
adc
jne
lea
add
add
push
popf
xor
push
bnd
push
mov
test
xchg
enter
push
les
add
add
enter
inc
outsl
add
orl
aad
jb
or
add
rolb
dec
aaa
lock
fwait
adc
fstpt
sbb
pop
scas
nop
xchg
sub
or
dec
xchg
cmp
in
je
push
repnz
jne
rol
cmp
outsb
adc
pop
rcrb
es
in
pop
outsl
popa
rolb
add
sub
push
adc
cli
push
addr16
rcrb
ret
and
sbb
int3
inc
cld
xor
and
add
test
inc
sar
pushf
jbe
sbbb
xorl
negb
aam
dec
jae
outsb
push
ja
lock
call
pop
adc
pop
or
xor
sbb
fildl
in
test
pop
stos
cmp
jne
mov
lcall
ret
popa
xchg
mov
sbb
into
add
push
add
xlat
sub
pop
or
pop
fildl
jb
cmp
dec
mov
notb
add
decb
testb
in
insb
cmp
add
jl
fs
mov
cmpsb
add
or
imul
in
shrl
pop
adc
sub
je
lods
mov
add
pusha
addl
and
es
adc
xchg
pop
and
dec
add
std
mov
xor
shlb
mov
es
dec
insb
push
and
rol
addr16
iret
inc
xor
jle
sbb
shl
add
fildl
adc
adc
xor
mov
cmp
test
jle
add
pop
sbb
xchg
adc
inc
push
pop
push
mov
mov
xor
fcmovbe
aaa
je
mov
out
call
and
popf
adcl
sub
cmp
fisubrl
or
sbb
insb
call
inc
dec
jmp
dec
fldl
xchg
inc
je
sbb
add
push
xchg
es
cmp
sti
inc
lcall
dec
ja
jle
test
and
dec
out
ucomiss
push
lods
mov
push
xchg
jge
lods
mov
jo
jnp
xchg
add
pop
fsub
pop
fsubrp
push
add
pop
push
rorb
cmovne
dec
dec
out
lds
int3
icebp
in
push
mov
in
ret
dec
sub
or
js
loopne
cmp
mov
inc
int
loope
cmpsl
dec
pop
int3
in
divb
inc
negb
mov
inc
cmpsl
inc
insl
adc
xor
gs
sub
mov
sub
and
add
bound
sub
shll
or
in
outsl
stos
dec
arpl
mov
jge
dec
insl
arpl
aam
pop
jo
jae
je
into
dec
dec
mov
movsl
pop
xor
push
daa
push
add
cmp
sbb
lods
jbe
fdiv
push
or
iret
das
add
jnp
xchg
pop
in
ret
ja
xor
mov
aaa
adc
push
and
xor
push
in
or
andl
in
gs
daa
xor
out
lock
cmp
jnp
fmull
mov
call
xor
push
clc
mov
add
cmp
jb
sbb
leave
shld
add
rclb
xchg
ja
jb
xchg
mov
push
ss
push
inc
add
push
add
push
je
pusha
or
ret
sub
add
push
leave
adc
push
push
mov
push
xor
or
add
or
mov
lret
push
sbb
push
lods
add
pop
pop
test
leave
pop
or
in
dec
mov
nop
test
shll
xor
dec
push
mov
mov
ja
or
mov
cmp
test
and
push
sti
cmpl
je
sahf
mov
push
sbb
jle
out
inc
jle
push
cmpw
jne
add
and
jge
pop
outsl
cmp
dec
push
push
push
xchg
cmpsl
jl
mov
test
jo
decl
jg
stc
std
mov
or
frstor
sbb
out
lretw
jl
jle
push
push
push
push
xchg
dec
pusha
inc
push
add
test
cmp
mov
aas
push
jle
dec
or
add
push
push
icebp
add
pop
mov
adc
les
sbb
out
adc
mov
imul
jle
add
popa
es
xlat
arpl
ret
cmp
jnp
push
rcrb
sar
je
mov
dec
pop
sbb
pop
jle,pt
movsl
lods
test
add
inc
imul
or
aam
call
jle
mov
xchg
push
mov
push
popf
push
xchg
xor
test
shrb
pop
dec
sbb
pop
pushf
sarb
jae
movsb
std
and
subl
test
xchg
lock
movsb
inc
and
inc
lret
or
add
sub
sahf
int
adc
xchg
movsl
jl
add
lods
adc
push
ss
imul
addr16
mov
lds
mov
mov
sahf
pop
pop
xlat
add
and
and
lods
push
xor
lods
mov
cwtl
push
insl
nop
or
xchg
imul
push
sub
xor
stc
and
enter
ret
pop
add
sbbl
or
cmp
dec
outsl
call
ficoml
sbb
imull
nop
or
or
sbb
aaa
fwait
dec
cwtl
jmp
les
sub
movsl
in
rol
inc
xor
jno
dec
invd
add
add
jb
scas
les
add
push
adc
dec
cmp
add
jp
mov
outsb
pop
cmpsl
bnd
add
cmp
repnz
jb
add
add
cmpsb
add
jns
fxch
shr
dec
popf
jno
or
out
loopne
rep
inc
push
xchg
add
xchg
jg
cmpl
dec
xchg
push
and
sbbl
push
sub
loopne
jno
inc
and
mov
ret
push
movsb
xchg
test
rcl
inc
and
pop
sti
rcrb
ret
pop
popa
adc
faddl
sub
fadds
je
mov
leave
bound
mov
jno
sbb
in
jge
ljmp
icebp
and
xor
add
lret
mov
add
insl
adc
sub
dec
je
add
cld
push
icebp
dec
sbb
dec
jne
xchg
sub
bound
push
insb
adc
jno
pushf
adc
or
test
sbb
jg
sbb
in
push
sarl
pop
lods
jns
push
pop
mov
cmp
ja
scas
scas
push
mov
lea
es
cs
dec
jnp
cmp
test
inc
mov
hlt
push
imul
fs
jp
inc
pusha
mov
in
inc
lods
int3
lock
arpl
sbb
adc
cmp
mov
movsl
and
adc
pop
push
pop
arpl
sahf
and
addr16
pop
adc
cmp
nop
test
enter
sub
jb
and
and
jle
inc
push
sbb
insb
inc
push
cmp
mov
nop
fdiv
sub
sbb
enter
mov
push
push
pop
movsl
mov
fs
sahf
cmpsl
stc
mov
adc
jns
cmp
pop
out
sahf
out
insl
xchg
mov
sahf
mov
leave
rcr
out
int
jns
sti
add
cmp
repz
repz
push
pop
imul
cmp
fwait
scas
movsl
les
aaa
mov
mov
push
pop
pop
ret
std
fucom
jae
outsb
add
ret
pop
mov
mov
mov
cld
adc
ss
nop
sti
das
je
fs
iret
adc
cmpb
sub
fmulp
and
jno
add
les
movsb
xchg
subb
xchg
adc
test
pusha
lods
into
xor
shrl
lock
mov
inc
mov
or
push
push
add
out
fcompl
pusha
aaa
cmp
movsb
adc
mov
xchg
test
mov
add
mov
faddl
adc
sbb
cmp
cmp
mov
insb
and
lret
out
push
dec
test
lods
adc
bound
cld
add
push
sbb
aas
repz
les
inc
ja
rorb
adc
loope
cmp
jge
out
mov
cmp
push
cld
lock
movsl
out
add
jp
scas
cmpsb
push
cmc
popf
add
pop
stc
ficoms
test
ja
imul
rol
or
mov
roll
into
push
ret
gs
push
sbb
das
push
mov
adc
lock
or
xor
filds
or
enter
or
mov
adc
xchg
js
mov
and
decl
sub
pop
fdivs
mov
and
stos
and
or
cmp
outsb
faddl
pop
fcomip
push
mov
mov
xor
je
inc
push
or
or
fs
insb
movb
push
aad
xchg
and
inc
leave
adc
pop
sbb
les
repz
pop
lea
jo
add
sbb
push
add
mov
cmp
pop
xchg
test
shlb
adcb
xchg
mov
mov
cmpb
jecxz
cmc
jb
mov
int3
fiadds
sub
push
xchg
xchg
sarb
dec
div
push
add
mov
mov
xor
or
lods
and
sub
cmp
mov
fwait
pop
cmp
push
sub
jo
test
rsqrtps
mov
or
bnd
test
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
insb
lcall
jl
dec
lcall
dec
lcall
add
in
jae
add
mov
mov
sbb
mov
cltd
mov
hlt
push
int3
jl
mov
test
add
cmp
orl
lret
cmp
jns
xlat
movsb
inc
xor
add
in
cmp
mov
pusha
mov
mov
sub
or
pushf
js
stos
push
nop
and
in
jbe
test
sbb
ljmp
shlb
sbb
sbb
sbb
nop
stos
shlb
sbb
push
cltd
fs
sbb
in
mov
push
into
push
rorb
adc
sub
or
sbb
sbb
pop
aam
movsb
sub
sub
sbbl
mov
pop
inc
and
jmp
pop
mov
shl
xchg
inc
adcl
pop
gs
pusha
int
mov
mov
xor
cmp
pop
push
ficomps
push
lret
mov
into
pushf
xchg
xchg
loop
push
jle
mov
mov
mov
jb
sbb
aaa
rcrl
jp
xchg
imul
dec
movsl
mov
mov
int3
cmp
sub
sub
jmp
stc
cmp
movsb
aas
push
cmc
mov
movsb
push
inc
cmpsl
mov
mov
mov
cmp
ds
nop
aaa
and
and
mov
daa
dec
pusha
loopne
cmp
in
js
mov
push
inc
push
sbb
adc
sub
push
pusha
pusha
or
cmp
subl
lea
jo
clc
test
popa
inc
xchg
mov
adc
imul
inc
inc
add
jge
dec
pop
xor
inc
mov
cmpb
je
adc
lcall
jmp
push
outsl
inc
sbb
sub
pusha
aaa
je
pop
adc
stos
mov
sbb
ret
and
inc
mov
imul
dec
dec
add
out
adc
push
test
xchg
in
cmp
aas
pop
push
pop
je
or
mov
pop
push
mov
adc
adc
ds
lret
rolb
jecxz
out
add
mov
lcall
jne
or
add
push
daa
sarb
push
imul
jne
add
pop
sbb
lods
sbb
mov
imul
lods
mov
repz
ficompl
jo
mov
push
inc
lret
sbb
and
add
fwait
cmp
push
xchg
push
movsl
enter
mov
sbb
dec
loope
aaa
stos
xchg
mov
in
adc
sbb
rorb
pop
ficoml
and
mov
cmp
inc
push
outsb
shlb
pop
cmp
mov
je
repnz
jl
cmp
imul
loopne
jbe
add
test
or
sbb
mov
nop
push
call
pop
setl
adc
pop
repnz
movsb
adc
adc
scas
adc
leave
and
dec
adc
push
add
push
xchg
fwait
out
push
es
push
mov
int3
push
and
inc
push
aam
rcrb
push
mov
insl
push
sbb
test
cwtl
push
in
jecxz
int
negl
pop
int
fsubrl
nop
push
test
mov
sbb
push
mov
sub
cwtl
nop
mov
sub
mov
mov
and
mov
add
and
shrb
mov
mov
and
inc
sub
sub
cmpb
dec
jae
test
push
push
inc
sbb
adc
sarb
cwtl
push
pop
pop
push
mov
shrb
mov
sbbl
and
aad
and
sub
adc
push
movsb
pushf
xchg
shll
inc
mov
test
and
xor
je
dec
dec
xor
insb
or
xor
pop
pop
xor
fsubr
pop
add
ret
arpl
test
mov
mov
cmp
inc
ds
mov
mov
xor
orb
inc
call
insb
pusha
aad
xor
xor
popf
in
orl
mov
push
loope
cltd
sbb
int3
or
into
pop
pop
adc
out
inc
jecxz
jbe
in
dec
or
inc
pop
in
roll
sub
inc
call
or
xor
add
lods
lahf
jb
and
movb
leave
xor
sub
or
jne
mov
scas
add
jbe
add
aad
out
jge
add
adc
imul
lods
cmpsl
sbb
adc
cs
or
xchg
or
imul
and
inc
mov
test
sti
js
or
icebp
push
mov
xor
jnp
cmp
fbld
adc
mulb
adc
xor
add
adc
adc
out
ret
sbb
mov
mov
mov
les
cmpb
mov
mov
jo
adc
mov
movsl
imul
shrl
mov
pop
sub
adcb
inc
jmp
mov
aam
cmp
push
sbb
jmp
and
mov
pusha
sbb
pushl
or
add
push
sbb
mov
xchg
lcall
xor
mov
add
dec
enter
pop
and
fwait
and
mov
and
and
adc
roll
and
pop
push
imul
add
stos
sub
push
fcmovu
jecxz
pop
es
pop
test
fs
dec
jnp
sub
mov
subb
es
pusha
push
sub
imul
insb
or
enter
mov
sub
movsl
pop
cs
daa
ss
mov
cmpsb
fmuls
sahf
pop
sub
dec
jmp
inc
test
mov
adc
dec
fildl
dec
rcr
ret
jbe
clc
pop
inc
inc
add
popa
xor
mov
sub
das
not
insl
inc
lcall
and
xor
sub
sub
lods
dec
xor
int
push
sub
fs
and
test
dec
dec
jl
pop
and
int
xor
and
and
xor
push
nop
sbb
and
addb
mov
inc
js
and
les
aam
or
pop
rclb
sbb
add
sahf
adc
push
mov
mov
es
ret
mov
add
orl
add
les
in
cmpsb
arpl
jmp
xchg
cmp
sub
test
rcrb
dec
clc
test
jnp
push
test
loope
lds
push
and
loopne
pop
cmp
je
repz
lcall
popf
mov
pop
jecxz
add
pop
sub
push
scas
aam
pop
adcl
inc
mov
sbb
inc
sbb
rclb
pop
jge
cmp
pop
adc
movsb
or
mov
test
data16
push
add
sbb
enter
lods
inc
cmpsb
and
xor
sub
mov
fldcw
clc
pop
inc
andl
call
stc
and
dec
loop
leave
inc
cmp
inc
or
cmp
push
xor
push
rclb
cmp
lock
clc
cmp
fs
xchg
icebp
stos
cmc
js
ss
adc
push
cmp
and
push
mov
sbb
push
test
cmp
mov
andb
popf
ljmp
xor
sbb
loop
or
jbe
dec
cmp
cmc
dec
lods
imul
popf
pop
cmp
sarb
cmp
cmp
jbe
dec
pop
cld
movsl
mov
mov
nop
movsl
aam
popa
jmp
jmp
mov
add
push
lret
aad
push
push
pop
fwait
and
mov
mov
mov
mov
scas
mov
inc
inc
inc
xor
jge
fdiv
add
adcb
cmp
sbb
or
cmp
lods
or
push
movsb
cmp
and
pusha
ljmp
clc
loope
mov
and
push
jbe
or
jb,pt
mov
and
adc
imul
lret
adc
push
sub
test
fs
hlt
pop
inc
add
repnz
cmpsl
xchg
ret
mov
popa
mov
adc
push
sbb
xlat
jbe
mov
sti
pusha
add
xchg
cmp
jne
inc
in
jb
lret
cmpb
les
addb
hlt
subl
push
test
push
or
iret
jne
mov
inc
push
repz
jae
inc
adc
cmp
xor
bound
je
mov
dec
roll
add
jmp
out
mov
or
xchg
rorb
jp
test
movsl
push
in
mov
adc
lods
add
sbb
pop
cwtl
xchg
adcb
xor
test
lret
pop
xchg
mov
fcmovu
jne
lods
xlat
test
adc
aad
dec
or
cmp
jne
leave
imul
mov
sub
in
fcmovnbe
mov
push
andb
in
add
add
push
add
leave
popa
subl
or
sbb
sbb
add
pushl
inc
jbe
clc
and
xchg
pop
push
sbb
sbb
loope
cmpsb
sbb
jno
lock
mov
jmp
xchg
push
into
add
lahf
stos
adc
jmp
xor
rclb
add
cmp
jl
or
lcall
or
je
mov
inc
jmp
movzbl
movb
movsbl
rcr
cmp
xchg
pop
mov
and
mov
or
inc
mov
leave
jne
pop
sub
scas
bound
rclb
adc
jge
sbb
push
push
add
pop
and
pop
push
mov
mov
push
add
cmp
ja
push
loopne
and
push
inc
inc
dec
arpl
rcll
lock
daa
addl
or
mov
insl
xor
add
xor
inc
mov
sbb
mov
mov
mov
enter
movsb
popa
sti
aas
bound
je
dec
and
add
enter
in
push
rcll
pop
insb
jnp
jge
loopne
push
jmp
aaa
xchg
je
cmp
ljmp
decl
jge
adc
pop
push
push
or
insl
pusha
push
adc
push
shll
ds
sub
inc
jl
out
pusha
mov
pop
add
add
and
adc
lret
mov
or
ljmp
jg
xchg
dec
sbb
ficomps
testb
mov
xchg
sub
mov
or
pushf
xchg
adc
ret
cltd
stos
clc
dec
testl
nop
add
test
add
xchg
mov
mov
nop
sbb
inc
or
out
xchg
and
xchg
jl
mov
enter
jb
push
das
mov
stos
out
mov
cmp
lcall
xor
sub
pop
insb
mov
xor
in
mov
jmp
pop
lock
jmp
lret
sub
and
and
or
jg
outsl
int3
repnz
inc
dec
in
mov
jle
xchg
idivl
adc
enter
nop
xor
and
jmp
cmp
and
inc
cmp
xor
inc
or
mov
sub
mov
aam
clc
js
mov
subb
cmp
jb
sbb
mov
inc
repnz
push
lea
cmp
mov
push
xor
jb
adc
jno
and
pop
adc
pop
addr16
mov
jae
imul
add
push
push
xor
sub
cmp
xorb
dec
pusha
inc
ljmp
push
inc
dec
jns
andl
rclb
mov
daa
dec
mov
mov
add
scas
bndldx
or
in
fwait
push
mov
add
jns
fadds
adc
adc
mov
cmpsl
adc
rcrb
les
clc
adc
js
add
addb
int
cwtl
xor
icebp
jbe
subl
mov
bound
mov
push
xor
xor
xchg
pop
into
jge
pusha
fsts
add
test
or
adc
xor
pop
daa
sarb
insb
out
add
add
cmp
push
sbb
rcrl
enter
push
push
push
xchg
icebp
shrd
pop
xor
or
fwait
roll
or
pop
cltd
mov
jecxz
xor
sub
fs
iret
dec
ss
mov
mov
xchg
or
mov
add
loop
mov
sbb
mov
jb
cmc
adc
sbb
xchg
sub
js
repz
adc
add
add
or
add
addb
jmp
mov
repnz
push
or
shll
xchg
test
pop
cs
fmuls
std
mov
hlt
push
xchg
rorl
loopne
add
or
idiv
movsl
jnp
xchg
mov
imul
xchg
add
xbegin
lods
aam
lea
mov
ret
sbb
and
pop
xchg
add
and
subb
sbb
add
and
sub
dec
mov
cwtl
test
adc
jnp
add
cmp
or
sbb
cmp
ret
or
imul
or
add
jmp
loop
push
adc
add
test
adc
mov
pop
stos
xchg
xor
mov
pop
div
mov
push
dec
pop
cmp
sub
mov
test
push
sub
cltd
xor
stos
push
arpl
cmp
je
loopne
sbb
push
les
cmp
pop
aam
les
sub
cmpsb
js
sub
shl
or
fs
les
pop
das
inc
hlt
in
or
push
add
clc
test
imul
shr
inc
push
jo
jecxz
xchg
sbb
add
ret
pop
subl
cwtl
or
sbb
pushf
xchg
arpl
cli
in
subl
dec
push
xor
mov
call
cmp
jl
scas
lea
jb
sarb
inc
test
hlt
add
sub
inc
fcmovb
pop
adc
insl
sbb
cmpsb
fcoms
mov
mov
dec
xchg
cmp
mov
xor
insb
adcl
pop
enter
rolb
jb
push
enter
outsl
inc
mov
xor
xor
addb
cmp
dec
sbb
push
lea
cmp
mov
adc
in
in
pop
ja
jnp
add
xchg
add
cmp
daa
sub
aam
jmp
xor
scas
push
rol
or
dec
xchg
call
daa
push
mov
adc
addl
sahf
xchg
mov
xor
pusha
xor
lods
nop
xchg
or
push
dec
nop
clc
inc
das
je
jge
out
mov
mov
xor
imul
xchg
or
jbe
das
mov
push
sahf
sub
and
adc
dec
in
imul
es
fdivl
xchg
inc
movsl
jno
pop
mulb
and
sbb
mov
push
or
mov
dec
and
mov
fs
mov
or
cmp
push
lea
sbbb
push
add
cmp
pusha
addr16
movsl
push
loopne
mov
fmuls
out
xchg
xchg
pop
clc
push
sbbl
mov
imul
add
das
in
cmp
push
subl
add
ja
mov
dec
ljmp
ds
in
adc
cld
xlat
or
dec
inc
add
inc
or
inc
aaa
inc
das
test
push
popa
sub
cli
add
pop
add
fiaddl
stos
icebp
push
outsl
inc
add
add
jmp
fiaddl
mov
xchg
repz
pusha
push
push
push
cmp
aaa
xor
add
mov
and
jne
fldl
push
test
notb
data16
cmp
insl
adc
adc
jne
daa
bnd
adc
out
jns
hlt
jne
or
jne
or
adc
xchg
push
mov
nop
push
xor
std
dec
jb
pusha
js
pop
mov
and
aad
pop
or
push
fists
inc
sbb
add
aas
pop
sbb
mov
dec
gs
addb
xchg
aad
jle
push
jl
mov
cli
pop
push
pop
je
pop
hlt
lea
sbb
lea
pusha
mov
inc
imul
nop
xchg
data16
movsb
xchg
cs
ret
and
xor
sub
sub
push
fsubrl
xchg
iret
dec
into
or
stc
int3
rcll
push
loope
push
std
jae
fstl
orb
cmp
fdivrl
adc
call
push
int
shrb
fstl
mov
loopne
fcomp
loopne
rclb
popa
adc
adc
mov
add
pop
pop
push
mov
jl
cmp
enter
mov
mov
push
ss
jl
int3
insb
cmp
aas
pusha
pop
inc
loopne
or
and
and
jecxz
loopne
push
xchg
insl
mov
imul
imul
orl
pop
dec
lcall
int
xchg
test
cmp
mov
fs
jne
mov
mov
lods
and
fistpll
fmul
fs
sbb
ficoml
mov
je
push
pop
add
pusha
jmp
mov
push
fs
pop
bound
adc
jg
pushw
push
shlb
add
add
fisubrs
jbe
call
or
aam
push
jmp
ror
inc
adcl
js
jns
sub
js
test
mov
inc
jb
add
flds
stos
dec
pop
inc
int3
add
adc
gs
push
repnz
and
mov
xchg
inc
xlat
aaa
push
mull
pop
push
or
shrb
sub
xchg
adc
fucomp
das
rol
xchg
xor
insb
inc
popa
cltd
pushl
push
and
xchg
sbb
sbb
call
or
das
cmp
sbb
dec
mov
or
sarb
mov
or
sti
jnp
sub
dec
fisubrl
hlt
imul
idivl
inc
sub
clc
add
xchg
mov
dec
lods
add
push
cmp
cmp
in
and
jmp
sbb
dec
shlb
jle
pop
push
xor
xorl
jmp
and
xor
fisttpl
das
pop
cmp
sbb
xchg
push
cmp
add
push
dec
and
repz
cmc
xor
in
sbb
cmp
and
sbb
and
and
pop
inc
adc
push
arpl
or
fs
adc
push
cltd
xlat
leave
mov
pop
pop
xor
push
dec
push
cltd
nop
sbb
xchg
or
push
adc
mov
sbb
push
mov
or
test
jno
test
pusha
sahf
mov
bound
inc
or
adc
xor
and
outsl
add
in
sub
out
mov
cmp
sbbb
popa
xor
jae
cmpsb
mov
jae
das
sti
and
cmp
mov
cmovbe
push
enter
pop
int
mov
add
mov
icebp
sbb
xor
dec
push
push
lock
jmp
xchg
jecxz
inc
xchg
imul
andb
mov
jo
jo
push
adc
or
pop
adc
cmp
scas
movsb
fbstp
and
js
jg
dec
das
jae
je
push
mov
pop
lea
ficoms
jnp
aam
inc
sbb
fsubrl
sbb
mov
pop
insl
mov
adc
stos
lock
and
adc
adc
lods
test
or
add
mov
aas
dec
rorb
or
pop
pop
push
cmpsb
out
or
loopne
or
adc
add
jmp
push
hlt
xor
jnp
push
les
dec
push
pushf
add
imul
pop
ret
xchg
scas
mov
add
jne
jne
in
inc
dec
sub
add
xchg
sub
daa
stc
out
js
loopne
mov
mov
xor
aam
jne
sbb
adc
lea
jge
jecxz
sbbl
mov
popa
push
xchg
mov
paddusb
inc
mov
pop
inc
std
xor
push
shrl
and
es
scas
mov
mov
loopne
cmpl
mov
ret
mov
ficoml
adc
and
pop
and
jmp
pop
pcmpeqd
test
imul
cmpb
jno
jno
js
in
leave
fsubl
sbb
aaa
into
mov
xchg
test
push
inc
add
movsl
add
aaa
adc
add
adc
pop
and
sbb
cmp
add
push
jne
pop
jecxz
mov
inc
cwtl
pop
sti
ja
mov
and
jne
mov
rorb
ljmp
xor
or
mov
xchg
adc
inc
add
push
xor
bound
xor
xor
or
into
in
adc
loopne
dec
ret
daa
add
add
fdiv
push
mov
movsb
shll
fisttpl
es
popa
filds
dec
xchg
mov
rolb
add
xchg
add
js
cld
cmp
pop
push
jmp
push
pop
in
and
addb
ret
mov
in
les
mov
dec
pop
sbb
lods
and
sub
pop
push
add
orb
inc
jecxz
inc
or
mov
arpl
add
sbb
push
sub
stos
loopne
cmp
dec
bndstx
mov
inc
mov
jmp
out
add
xor
sub
adc
fimull
push
mov
inc
cmp
dec
cmpb
fdivrl
mov
lcall
inc
bound
or
and
divl
or
push
fildll
ficompl
test
aas
sub
leave
cmp
ljmp
jge
adc
add
movsb
incb
push
mov
push
lds
xor
add
or
sbb
addr16
or
push
movsl
or
jecxz
push
dec
xor
das
test
in
add
mov
dec
add
xor
notl
aad
pop
add
loopne
add
sub
hlt
test
shll
or
or
in
or
aas
mul
pop
add
push
add
lods
lea
out
mov
inc
jo
mov
push
lret
addr16
sub
and
mov
xor
push
je
movsl
ja
or
xchg
and
or
mov
xor
cmp
je
or
jbe
ret
in
rolb
sbb
and
clc
sub
lods
pop
sub
cmpb
ret
lock
jae
movsbl
outsb
clc
cmp
ja
inc
mov
mov
dec
rcl
or
sbb
bswap
push
das
add
lea
and
jmp
call
add
or
jecxz
or
add
inc
sbb
pop
incl
cmpl
xor
pop
test
cltd
and
add
sar
add
dec
test
clc
xor
mov
pop
ss
cmp
jecxz
or
inc
jne
enter
adc
mov
mov
dec
jne
mov
ss
xor
lret
test
pop
scas
and
push
dec
icebp
insl
add
cmpsl
shrb
sar
jp,pn
jge
push
shlb
ret
or
inc
bound
inc
adc
sbbl
adcb
jl
movsl
add
jmp
scas
mov
or
cmp
pop
add
add
push
rorl
mov
js
in
jmp
out
add
fucomi
or
arpl
rolb
shl
dec
sahf
xchg
out
mov
cld
xor
push
ret
or
jecxz
adc
pop
scas
and
cltd
add
dec
xchg
mov
cs
dec
pop
xchg
cmp
xor
adc
mov
fisubrl
or
insl
fcomps
movsb
sbb
cld
cmc
pop
in
push
xor
push
jnp
lods
mov
or
pop
sbb
fwait
xchg
mov
xchg
jnp
xchg
or
or
inc
xchg
and
fisttpl
hlt
add
nop
je
add
shrl
mov
mov
push
clc
inc
sub
lahf
xor
add
cmp
or
xor
ds
lahf
cmc
out
fcomps
pop
test
xchg
mov
mov
add
xchg
inc
mov
lock
add
push
push
jge
es
add
push
and
test
pusha
and
push
stos
xor
imul
call
sbb
cmp
cmpl
shlb
int3
pop
ss
jns
cmp
sub
test
int3
inc
inc
stos
shll
lods
adc
int3
xchg
pop
aaa
lea
dec
and
inc
jle
int
bound
cmp
lea
loope
xchg
and
push
and
out
sbb
movsb
je
push
pushl
or
mov
dec
aaa
test
pop
cmp
add
add
fbstp
movsb
mov
in
or
movsb
inc
cmp
pusha
js
cmp
jmp
dec
xchg
mov
mov
push
and
dec
sub
clc
adc
adc
das
push
shlb
lcall
add
and
cmp
jecxz
insb
popf
xchg
rcl
mov
lcall
aam
out
xchg
fcomps
pop
push
das
daa
jno
push
xchg
lret
or
movsl
sbb
push
sbb
mov
and
adc
aam
enter
imul
in
xor
push
push
xor
enter
sbb
mov
mov
xorb
push
cmp
cmp
and
lds
mov
nop
sahf
and
push
sti
push
cmp
pop
mov
cmp
arpl
add
int3
int3
add
jno
bound
mov
sbb
jno
cmp
sahf
sbb
jecxz
sti
push
pop
cmp
sarl
fldenv
repz
je
dec
das
or
fdivr
adc
rorl
inc
out
das
imull
das
pop
pop
jno
jge
cmp
cmp
scas
sub
xchg
pop
enter
add
xchg
test
sbb
or
sub
inc
imul
lock
mov
mov
rclb
add
xchg
dec
aam
leave
add
add
out
add
cmc
mov
clc
jl
stos
mov
imul
jge
sub
push
in
jp
sbb
sbb
je
cmp
daa
movsbl
es
push
call
ret
mov
mov
test
add
mov
test
jo
dec
out
test
sbb
sbb
movb
ret
and
adc
pusha
xor
add
jnp
rorb
sbb
nop
or
add
dec
mov
push
hlt
or
iret
sub
jmp
mov
sbb
inc
add
pop
pop
and
outsb
hlt
loope
iret
adc
mov
fcom
dec
sbb
les
subb
addr16
xor
add
insl
std
lock
in
out
sbbl
in
cmpsb
dec
push
es
add
call
dec
and
sub
add
out
stos
or
inc
inc
mov
faddp
jnp
push
pop
fwait
dec
add
imul
xor
shr
insl
icebp
pushl
movswl
test
mov
push
jne
clc
pop
mov
and
fiadds
sub
movsl
xorl
mov
pop
mov
pop
mov
inc
or
xchg
add
push
hlt
mov
sbb
mov
mov
clc
add
jg
pop
xor
decl
mov
mov
inc
mov
mov
cmp
push
or
dec
clc
addl
int
mov
cltd
sarb
sub
push
icebp
or
orb
out
lcall
add
insl
xor
mov
nop
and
and
add
cld
push
leave
push
xor
mov
clc
cmp
jne
pop
mov
mov
pop
cmp
into
inc
dec
and
adc
push
cmp
call
ds
push
sahf
pop
add
enter
xor
push
shlb
mov
xchg
add
test
lret
in
sbb
push
in
enter
in
into
mov
push
int
hlt
test
les
dec
and
es
pop
adc
inc
mov
mov
cmp
push
enter
fldcw
daa
fbstp
cmpsb
lret
mov
or
add
mov
popa
and
and
or
xor
mov
xor
test
loop
dec
mov
pop
lahf
popf
inc
xor
and
adc
pop
orl
add
and
and
push
daa
or
sbb
push
sub
test
hlt
test
mov
mov
mov
mov
clc
jns
add
rclb
xchg
adc
lds
jb
cwtl
mov
or
dec
cld
stc
sub
ss
lea
cmp
jbe
add
sbb
cmp
jbe
mov
sbb
sbb
cli
enter
sbb
repnz
into
aas
insl
mov
insb
leave
or
cmp
int3
push
adc
divb
inc
dec
xor
xchg
mov
pop
enter
or
cmpsb
push
cmp
or
xor
daa
push
test
stc
push
incl
push
push
push
cmp
cwtl
inc
push
jnp
and
insl
test
jp
add
mov
shr
test
pop
ret
and
nop
arpl
adc
push
mov
in
lods
test
sub
stc
pop
jge
lahf
pop
sub
push
add
call
push
lock
cmpsl
sti
lea
xchg
mov
loop
push
push
xchg
or
sub
pushf
and
je
arpl
cmp
lods
mov
inc
push
mov
imul
jge
dec
push
dec
in
mov
into
push
and
int
and
loope
test
sbb
sbb
cmp
loopne
popf
aas
jb
movsl
addr16
inc
fwait
sub
add
repnz
adc
mov
dec
cltd
jge
mov
adc
shlb
fdivrl
shlb
loope
pop
shll
rorb
jp
and
mov
and
add
lods
jle,pt
cmpl
int3
mov
cmp
mov
scas
jb
out
test
push
adc
push
inc
enter
cld
or
add
out
and
sbb
jle
int3
es
jne
xlat
and
and
add
jno
rolb
push
mov
push
xor
je
nop
mov
mov
sbb
cmp
rcrl
fisttpl
push
loopne
mov
dec
jp
xor
inc
imul
ret
aas
int
cmpl
pushf
ret
call
test
mov
stos
pop
inc
fisttpll
fwait
int
scas
add
push
addb
and
rorb
sbb
ljmp
shlb
dec
pop
je
out
pop
fs
out
fdivl
mov
je
imul
aad
mov
outsl
xor
push
cwtl
test
mov
lret
or
imul
pop
adc
push
pusha
ds
push
nop
inc
out
mov
aas
cld
adc
dec
fwait
nop
or
pop
fidivrl
aaa
aas
es
rolb
sarb
cmp
mov
nop
dec
push
jo
fwait
jecxz
aas
add
jne
ret
cmp
adc
inc
add
sbb
push
std
leave
adc
or
sub
add
and
dec
sub
or
push
pop
je
jo
inc
sbb
test
mov
mov
adc
and
aam
insl
dec
xor
popf
sbb
or
or
push
ret
cmp
add
into
adc
nop
lcall
push
mov
and
pop
fldenv
out
int3
or
rolb
les
jmp
push
xchg
gs
fstl
lock
inc
incl
fwait
rolb
loopne
push
andl
xor
aad
dec
jmp
ret
xchg
pop
xor
jmp
push
inc
mov
adc
sbb
mov
or
inc
xor
push
jmp
push
cmp
pop
aad
add
inc
jne
xchg
push
push
lahf
imul
xchg
mov
push
pushl
addr16
rorb
add
sahf
add
pop
cmp
jbe
sub
sub
cmp
sbb
fcompl
sbb
xchg
rcrb
adc
pusha
mov
mov
lcall
shrb
data16
and
clc
bound
xor
push
xchg
xlat
mov
jne
mov
mov
gs
testb
pop
pop
mov
leave
or
inc
mov
shll
mov
mov
call
cmp
lea
sarb
lods
pop
add
push
adc
jnp
xor
push
call
cmp
sbb
xchg
pop
xchg
sbb
sahf
jmp
add
ds
ljmp
imulb
ret
movsb
aam
jb
xor
stos
add
ja
loopne
dec
out
shll
inc
add
adc
sbb
push
icebp
push
adc
inc
nop
lock
or
push
push
xchg
sub
aaa
mov
adc
or
pop
je
mov
adc
add
add
push
cmp
dec
and
lock
addr16
mov
sti
jb
and
xor
add
sub
add
je
jl
pop
and
pop
add
mov
mov
xor
xor
xchg
xchg
and
insb
mov
outsl
push
jae
lret
inc
shlb
sbb
insb
pop
jmp
mulb
lds
sub
jecxz
outsb
mov
adc
movsl
pop
sub
sahf
add
mov
push
sbb
cld
mov
loope
scas
pop
jne
inc
inc
xor
sahf
test
arpl
add
sbb
add
and
das
fs
movaps
test
or
sub
push
cs
or
pop
push
or
pop
pop
cltd
inc
data16
movsb
mov
dec
and
rolb
xor
cmp
jmp
jo
xchg
jae
jns
bnd
add
add
or
and
inc
adc
mov
or
data16
mov
sbb
mov
xchg
mov
pop
mov
add
sbb
je
mov
cmp
dec
icebp
jne
aad
test
insl
push
push
mov
ss
mov
xchg
sbb
lea
sub
mov
lcall
cli
add
imul
or
cwtl
int3
notl
test
loopne
inc
das
mov
and
frstor
sub
stc
sub
or
mov
jae
xchg
push
or
insb
rcrl
jbe
popf
rclb
pop
jecxz
ret
adc
jb
mov
mov
fcompl
or
lea
xchg
sti
sbb
inc
ret
sub
or
dec
sti
lock
mov
in
ret
xor
xchg
jmp
xchg
xor
pop
sbb
pop
dec
jp
xor
in
push
push
sahf
pop
cwtl
xchg
jecxz
lret
jp
pop
jle
jge
and
push
inc
popf
rorb
lahf
inc
and
inc
lock
pop
cmp
or
inc
loopne
pop
test
and
mov
xorl
int3
add
mov
ja
pushl
add
mov
iret
jle
adc
push
push
mov
add
sub
cmpsb
inc
fcoml
and
and
outsl
cmp
into
add
sub
gs
add
add
cmp
fs
sub
cwtl
add
jbe
xor
lea
iret
mov
dec
fdivp
sbb
xchg
scas
or
pop
lods
or
push
push
xor
jmp
add
or
pop
and
xchg
sbb
test
sbb
push
inc
clc
sub
or
mov
out
imul
add
ret
lcall
and
pop
push
sbb
xchg
lea
or
insl
ret
cltd
mov
push
pop
push
inc
adc
add
stc
mov
fisttps
mov
scas
repnz
cmc
pop
mov
jmp
add
mov
mov
fldt
filds
or
mov
cmp
add
cmp
je
cmp
jne
mov
sbb
add
sti
dec
and
pop
dec
lea
scas
mov
pop
dec
xor
fbld
or
cmpsb
push
jmp
testb
je
testl
fs
sbb
add
fdivrp
cmp
jbe
into
lea
mov
pop
pop
inc
cmp
je
sub
inc
jmp
inc
and
dec
je
xchg
dec
xor
pop
mov
push
add
ljmp
pop
or
push
clc
mov
rclb
jo
cmp
ljmp
sub
fs
adc
into
ret
cmp
lcall
xor
ficoms
inc
push
ja
sub
jne
pop
cmp
jo
dec
push
outsb
hlt
cmpb
add
mov
cld
xor
je
ficoms
xchg
aam
mov
mov
mov
enter
xchg
ss
cmc
pop
insl
dec
push
lock
add
inc
cld
insb
xchg
adc
rclb
jns
cmp
pop
xchg
xlat
movsb
or
arpl
and
xchg
stos
mov
in
mov
call
mov
fsubs
inc
fldl
pusha
mov
add
jae
insl
lock
inc
loope
sti
lahf
pop
shl
add
jmp
pushf
aas
insb
sti
and
test
repnz
in
aaa
push
cmp
js
fs
jne
xor
fwait
push
cmp
adc
incl
or
outsb
pop
jae
mov
jmp
jno
mov
dec
shlb
cwtl
jo
add
jne
pop
push
add
and
incl
inc
adcl
or
int3
cmp
rolb
add
and
cmp
out
out
pop
xor
and
es
sub
mov
jbe
sub
and
pop
or
jl
or
adc
shrb
stos
push
inc
test
jbe
loopne
stos
das
aam
cmp
jbe
and
pop
arpl
fcoml
adc
je
test
jne
sub
inc
adc
std
sub
jb
adc
adc
lods
mov
xor
adc
movb
inc
fcmovnb
mov
sub
inc
xor
xchg
mov
adc
and
add
std
push
mov
inc
and
push
or
stos
mov
adc
mov
add
daa
cmova
and
dec
inc
adc
cs
push
lcall
mov
push
push
lahf
pusha
add
push
mov
int3
lock
adc
mov
adc
mov
movsl
pop
aam
mov
push
je
mov
mov
push
inc
pop
out
push
add
insb
ret
lea
sub
scas
lret
jne
lods
mov
cmc
mov
cmp
push
mov
inc
sahf
jmp
xchg
imul
mov
inc
inc
xchg
enter
adc
out
jg,pn
push
cld
xchg
daa
cmp
addl
push
jbe
push
cmovs
cmp
int
call
out
sahf
int
jp
push
clc
into
inc
sbb
cmp
mov
pop
and
cmp
out
adc
movsb
push
push
popf
mov
pop
xlat
out
inc
mov
jns
pop
dec
pop
dec
mov
ljmp
sbb
insl
xor
fwait
xchg
cmp
or
push
andl
inc
sbb
or
cmp
fists
cltd
ss
push
aaa
jp
inc
adc
out
orb
test
jb
in
pop
inc
sbb
rol
cli
sub
push
push
movl
push
adc
dec
addl
std
or
xor
push
lahf
push
push
sbb
pop
inc
sbb
add
push
and
shl
test
enter
mov
mov
inc
xchg
mov
push
lods
test
add
mov
into
loope
shlb
lds
cwtl
mov
pop
add
int
or
data16
je
mov
mov
mov
mov
add
cmp
outsb
sarb
call
push
pop
push
lea
das
sub
mov
push
sahf
imul
pop
cmovns
dec
lea
pusha
rcrb
mov
pop
sub
push
mov
pop
push
inc
fdiv
jge
enter
fbld
testb
jbe
mov
mov
ja
gs
add
inc
inc
fwait
nop
mulb
or
repnz
pop
pop
movsb
inc
push
pop
nop
push
sub
ret
cmp
mov
push
or
cmc
sub
out
mov
push
movsl
xchg
inc
test
dec
push
cltd
mov
mov
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
mov
xor
xor
cmp
xor
lea
incl
sub
push
cmp
dec
or
mov
and
mov
incb
inc
push
lea
sbb
mov
stc
push
sbb
mov
lock
adc
mov
push
loop
or
add
sahf
mov
mov
push
aaa
les
movsl
pop
dec
mov
clc
push
add
add
pop
or
xchg
add
push
lret
push
xorb
mov
andl
aam
sbb
sub
jp
ret
or
sti
pusha
jb
into
or
pop
cmp
lea
adc
rcr
and
xchg
adcl
mull
movsb
mov
mov
rcl
adc
push
and
push
mov
orb
add
or
push
ljmp
inc
clc
mov
stos
push
jmp
enter
jbe
mov
push
movb
push
popf
test
push
cmpsl
inc
pop
xchg
addl
xchg
add
xchg
xchg
cmp
sbb
xchg
or
out
lea
or
jg
inc
loope
fnstsw
pusha
stos
adc
and
or
pop
xchg
cmp
push
xor
push
lea
fs
or
insl
and
cmp
movb
mov
cs
int3
insl
gs
jbe
adc
sbb
push
pop
lret
cmp
pop
clc
add
sub
mov
adc
mov
jmp
adc
sbb
ds
cwtl
cmpl
dec
push
in
cmp
ficomps
push
lret
test
and
jne
pusha
sub
add
aad
lods
ret
jge
adc
add
movl
add
js
push
cmpl
pusha
fidivl
cmp
xchg
in
andl
testl
testl
sub
rcr
fisubl
xchg
rolb
or
jmp
bound
and
jnp
fstps
cmp
mov
push
sbb
pop
cld
inc
mov
adc
jne
fstps
mov
jne
lock
setle
insl
inc
jp
aaa
adc
adc
iret
push
vmptrld
xchg
orl
adcb
adc
push
scas
popf
ss
adc
mov
test
dec
movb
pop
sbb
adc
mov
ret
jbe
cmc
xchg
jne
mov
icebp
and
lods
fwait
or
loopne
fsubs
mov
dec
xlat
ret
in
cld
out
push
aas
je
cmp
push
pop
jne
les
cwtl
dec
aam
cmpsl
jne
push
fcomi
imul
or
pop
jne
pop
call
sbb
add
xorb
insl
fstpt
jle
xchg
jne
jmp
xor
in
sbb
sub
into
mov
mov
aaa
push
adc
addl
mov
mov
pop
lea
fldl
add
je
mov
ficoms
in
sub
popf
jbe
inc
mov
push
sti
jno
mov
repz
jmp
mov
cmp
pusha
mov
jae
scas
jg
jp
push
sub
sub
add
leave
daa
jmp
xchg
add
xlat
xchg
mov
sub
decb
adc
cmpl
andb
daa
xor
out
add
js
mov
sbb
imul
add
add
inc
rcrb
or
fadds
ja
or
ret
push
add
push
push
ret
lahf
sti
inc
pop
or
push
mov
push
cmp
std
push
mov
lcall
clc
or
push
movsl
aas
add
or
inc
mov
mov
inc
sbb
sub
and
sahf
xchg
xlat
push
push
push
push
lret
in
mov
test
xchg
pusha
pusha
or
sub
adc
inc
and
xor
orps
ret
addb
les
xchg
insb
sbb
in
jbe
mov
dec
and
fbstp
daa
xchg
sarl
xchg
pop
rolb
sahf
sbb
push
adc
push
outsl
loope
dec
rcll
lret
mov
movsl
and
insb
sbb
adc
mov
stos
push
push
sbb
or
inc
adc
pusha
sub
sbb
pop
sub
sub
outsb
xor
test
fdivrs
adc
or
or
add
daa
cmp
jecxz
jnp
fdivl
leave
pop
xchg
push
es
pop
xorl
ljmp
sti
xor
push
loop
jmp
mov
jnp
dec
aad
aas
jp
push
pop
jmp
clc
adc
pushf
mov
je
into
or
or
and
add
push
pop
ret
xchg
xchg
push
or
lret
and
push
or
pop
push
pop
loope
je
lock
lcall
fstps
sbb
xor
sti
sbb
dec
es
sti
dec
jnp
sahf
test
dec
pop
push
mov
mov
or
sub
mov
fs
mov
scas
ret
push
nop
cmpsl
test
cmpsl
and
cmp
cmp
test
cmp
je
add
dec
cmp
mov
pushf
clc
fildll
je
mov
cmp
jne
ss
cltd
cmp
xchg
adc
loopne
add
adc
or
mov
adc
sub
sbb
in
push
test
nop
mov
cmp
and
sbb
int3
loope
lods
or
inc
mov
add
pop
icebp
pop
mov
add
lea
std
mov
push
adc
cmp
sbb
inc
inc
mov
jbe
push
adc
ds
jo
loope
jae
mov
xchg
push
push
lret
lods
add
in
fcomi
inc
and
lock
cmp
jne
or
or
push
ror
push
subb
pop
jbe
jo
dec
rorl
hlt
adc
scas
xor
lcall
test
jo
stc
mov
daa
xchg
xchg
mov
sub
js
inc
pop
lods
or
adcl
inc
sahf
scas
or
incl
cmp
inc
push
addl
push
icebp
and
and
push
mov
jmp
sarl
mov
int3
mov
mov
les
push
xlat
mov
cmpsl
sbbl
iret
inc
shl
pusha
je
divb
ds
outsl
mov
test
sbb
or
push
inc
add
rcl
sbb
adc
mov
jmp
xlat
sbbl
inc
cmp
fwait
sti
xchg
rorl
inc
hlt
mov
lock
or
pop
cli
hlt
and
push
cmp
mov
call
add
add
mov
cmp
jmp
hlt
movsb
pop
xor
add
push
pop
jb
test
das
les
iret
cmpsb
sbb
inc
mov
jecxz
divb
call
icebp
unpcklps
outsl
mov
and
mov
push
orb
jl
sub
clc
lock
popa
lea
jo
add
cmpsl
mov
jmp
pop
andl
int
and
push
lea
xchg
addr16
or
mov
push
push
rclb
hlt
or
test
and
xor
loope
je
pop
xchg
jo
add
test
adc
mov
nop
mov
inc
dec
mov
xchg
xchg
push
cmpb
loopne
gs
jns
out
add
mov
lock
and
and
mov
or
adc
movsl
movsw
sub
push
push
jecxz
xchg
and
and
mov
push
lds
sub
fsub
mov
inc
push
push
adc
pop
sbb
add
stos
adc
xor
push
test
pusha
es
mov
je
adc
bound
adc
dec
push
popa
mov
or
xor
call
clc
jmp
sub
push
push
jl
adc
push
bound
push
loopne
and
add
dec
push
fucom
addl
cmpsb
dec
rorl
jle
imul
jmp
roll
mov
and
aam
sub
push
dec
push
push
jo
mov
sbb
dec
push
mov
jne
jns
lock
xchg
xor
xor
xor
xor
sbb
or
jg
jbe
lods
mov
ja
jmp
mov
flds
xchg
cmp
cmpl
or
imul
and
adc
jl
out
stc
out
inc
shlb
adc
mov
jno
lret
stos
fmuls
fsubrl
and
loopne
inc
loop
push
shlb
ficomps
and
mov
push
pop
cmp
aas
push
jnp
dec
testl
sbb
nop
nop
rcll
xor
pushf
movb
lds
scas
pop
push
mov
adc
fs
js
je
mov
xchg
jo
out
inc
mov
decl
cmp
jl
jmp
pop
je
mov
inc
clc
sbb
add
sbb
or
lds
mov
xchg
mov
push
cmp
fnstcw
lods
cltd
sbb
sbb
xchg
aam
mov
sbbl
scas
fwait
sbb
xchg
pop
insb
xor
lea
mov
pop
in
push
push
inc
push
sbb
sub
cmp
rolb
dec
push
rep
ret
xor
xor
lock
xchg
add
jmp
clc
xchg
rclb
out
xchg
lods
dec
clc
inc
push
cmc
ds
adc
xchg
mov
and
inc
out
cs
test
push
push
xor
nop
jbe
iret
mov
or
jmp
push
incl
call
xchg
mov
or
add
pusha
dec
daa
lds
in
pop
int3
or
aas
ret
rclb
aas
cs
xchg
pop
sbb
mov
sbb
push
loopne
hlt
sub
mov
fdivrs
mov
add
adc
mov
pop
xor
gs
imul
mov
mov
hlt
or
inc
inc
fiaddl
mov
inc
add
es
cltd
and
in
sub
mov
or
mov
mov
jae
sbb
popa
pop
leave
hlt
xlat
cmp
pop
mov
cmp
icebp
adc
or
cs
fdivs
cmp
inc
mov
insl
pop
mov
jnp
jmp
push
adc
and
fmuls
add
cmp
repnz
sbb
xchg
fcom
mov
xor
mov
push
cwtl
jle
inc
add
and
pushf
inc
or
nop
lock
ds
add
push
push
push
add
rcl
add
xchg
mov
xchg
fstpt
lahf
add
push
jecxz
ret
pushl
push
fldenv
adc
sub
testl
or
in
rolb
or
mov
je
cmp
xchg
js
ljmp
add
sub
rcr
dec
sbb
data16
sub
sub
ret
pop
iret
stos
mov
mov
dec
popf
push
faddl
xor
movsl
mov
add
dec
loopne
and
or
bound
movsb
jnp
cmp
add
inc
sub
or
clc
call
push
and
dec
es
cmp
or
mov
xor
scas
sub
out
jne
ja
repnz
sub
or
jo
mov
cld
sbb
jmp
or
push
roll
stos
fistpl
cmpsb
add
ret
or
cmc
ret
lret
push
sub
push
loopne
sbb
jns
loopne
adc
add
xchg
xorb
push
xlat
data16
cltd
xchg
nopl
adc
into
push
test
subl
or
outsl
iret
or
pusha
cmp
adc
pop
add
ss
arpl
cmp
jns
xlat
or
popa
adc
pop
mov
dec
sahf
dec
in
push
incl
pushf
testb
adc
jbe
push
and
xlat
mov
push
pop
sbb
inc
lcall
scas
adc
adc
pop
add
push
mov
push
push
cld
rcrl
pop
inc
sub
adc
inc
adc
cmpsb
jge
pop
ret
add
xchg
bound
add
dec
pop
cmp
adc
dec
sbb
sbb
mov
add
cmp
and
mov
sahf
adc
lret
inc
push
pop
sub
les
das
inc
sbb
xor
sahf
xchg
mov
test
arpl
add
xlat
or
mov
add
jo
in
cltd
test
movsb
aaa
sbb
pop
clc
loopnew
out
lea
jbe
out
xchg
jne
iret
pop
or
pop
push
mov
or
or
ss
push
sbb
mov
or
scas
mov
or
or
mov
adc
aam
add
xorb
or
outsb
daa
and
mov
loop
jne
out
outsl
xchg
nop
xlat
aam
inc
inc
fmul
xchg
mov
push
lcall
mov
mov
pop
sbb
or
lret
rcrl
add
push
roll
jge
insl
jecxz
or
dec
das
fldcw
nop
movl
aam
imul
xchg
test
and
iret
pop
movl
and
or
dec
xchg
adc
xor
cmp
stos
xchg
dec
push
sahf
or
frstor
imul
test
xor
push
cmp
jp
insb
push
xor
mov
inc
xchg
faddp
mov
cs
fisubl
xor
mov
push
inc
mov
push
mov
or
mov
jp
adc
push
and
xchg
or
sub
repnz
aas
push
shl
cs
cli
sahf
outsb
mov
test
push
add
pushl
inc
cli
sub
mov
pusha
jnp
inc
or
mov
fcoms
xchg
mov
subl
jbe
sahf
push
cmp
jbe
push
push
enter
in
push
sub
dec
aam
int
ja
mov
and
push
adc
sbb
inc
jp
aaa
push
sahf
xchg
je
sub
push
rclb
mov
sbb
add
mov
dec
sahf
inc
ret
outsb
insb
pushf
push
jl
mov
xor
inc
aaa
sbb
mov
subl
adc
push
push
jecxz
push
jge
adc
mov
add
xchg
scas
test
pop
mov
jo
mov
repz
or
lea
push
cli
loopne
mov
test
mov
push
bound
test
add
pop
cmpl
push
adc
or
push
mov
sbb
mov
and
or
sbb
addb
adc
ss
mov
mov
out
frstor
or
pushf
push
xchg
pushf
mov
sub
ljmp
add
dec
lods
pop
mov
inc
xor
shlb
faddl
push
iret
push
push
or
push
xor
sub
bswap
enter
cmp
xor
cltd
jmp
sbb
cwtl
xchg
xor
movsl
push
faddl
shl
push
sub
mov
adcb
jmp
dec
sub
dec
jg
loop
dec
xor
out
les
lret
je
cmp
xchg
push
sbb
inc
lock
push
xchg
stos
mov
scas
jge
fstp
cmp
push
sub
and
jo
cmp
and
cmp
cmp
aaa
xchg
adc
adc
and
inc
movsl
out
sbb
adc
mov
loopne
jle
pop
add
push
and
dec
cmp
inc
loopne
push
mov
fidivrs
popf
xchg
addb
fbld
xor
mov
lret
pop
insb
sarb
dec
fdivl
ret
mov
mov
sbb
insb
mov
and
add
pop
sarb
jo
adc
sbb
push
dec
push
pop
sbb
adc
jmp
enter
mov
cmp
std
mov
cmp
push
ds
or
push
pop
rclb
pop
dec
xor
outsb
mov
loopne
xor
or
or
pushl
xchg
inc
cwtl
inc
leave
sbb
mov
or
insb
mov
ss
push
add
add
xchg
jne
adc
mov
cmp
cmpl
add
jmp
mov
mov
clc
push
mov
push
push
loopne
mov
add
cwtl
add
xor
push
pop
sbb
imul
jo
sub
movsb
cltd
cltd
push
shlb
mov
fwait
sbb
pop
sbb
and
and
sahf
add
pushf
mov
adc
jle
or
dec
icebp
or
add
or
mov
mov
test
stc
sub
lea
pop
dec
inc
mov
leave
xor
cli
ss
inc
and
jne
lock
cmpsl
sub
mov
push
dec
push
jae
lds
sub
loopne
pop
or
sbb
push
or
loopne
push
mov
hlt
fildl
or
sar
sub
cmp
addr16
stos
rcrb
jbe
sub
add
sub
das
movsb
push
int3
inc
jno
or
out
add
cwtl
pop
mov
lods
pop
negl
push
inc
push
sarb
push
rol
push
adc
or
test
and
call
rorl
mov
xchg
stos
xchg
lret
cmpsl
mov
out
lret
ljmp
dec
pop
cmp
pop
push
dec
push
or
xchg
xchg
jmp
hlt
je
int3
add
ds
jge
sbb
hlt
sub
push
mov
add
out
xor
add
dec
add
add
hlt
mov
and
sub
sub
add
loopne
fcomps
xor
lods
mov
loopne
sbb
mov
subb
push
pop
mov
xor
push
mov
push
sub
mov
lds
add
sbb
addr16
add
mov
adc
lret
shlb
arpl
lods
imul
sbb
adc
mov
dec
sub
adc
adc
dec
xor
stos
xor
leave
or
mov
and
fucomip
lods
cmpsl
mov
pushl
push
ds
push
push
xlat
in
cmpsb
ror
shlb
dec
cmp
aaa
xchg
addr16
inc
insl
js
scas
mov
sar
stos
xor
pop
xor
adc
fs
xchg
and
adc
nop
add
adc
leave
and
adc
sbb
xor
adc
adc
xchg
inc
adc
pop
add
and
sub
shll
icebp
push
inc
rolb
pop
mov
pop
aaa
jg
push
mov
cmpw
je
add
aad
imul
inc
clc
add
rcll
or
fcmovu
inc
pop
scas
fwait
lock
pop
adc
fbld
sbb
rorb
lret
add
mov
scas
sti
or
test
in
popf
mov
pop
shlb
jl
inc
imul
das
jmp
cmp
out
or
sbb
cmp
push
jo
je
xchg
jb
jb
cmp
pushf
ss
fmuls
movsb
andb
nop
roll
adc
mov
lea
stc
shrl
mov
inc
mov
adc
jp
inc
dec
mov
or
xchg
push
xchg
insb
jae
mov
push
add
xor
add
into
in
add
in
imul
out
sti
popf
push
cmp
push
add
pop
mov
cmp
iret
sti
pop
jmp
and
adc
dec
pop
inc
rsqrtps
mov
lea
aad
pop
xchg
jnp
popf
push
mov
push
mov
pusha
mov
jne
dec
lahf
jb
push
mov
rol
mull
push
mov
push
inc
movswl
iret
call
sub
mov
jnp
addr16
mov
push
mov
call
setp
add
pop
loope
or
fnsave
testb
mov
sub
pop
add
test
inc
and
jnp
ret
mov
sub
mov
popa
aaa
test
xchg
inc
insl
rcl
and
sub
cmp
fdivs
out
mov
inc
test
in
cmpsb
mov
mov
jg
inc
push
stos
mov
mov
push
adcl
or
xor
test
mov
mov
sbb
cmp
into
aam
test
clc
add
jecxz
cld
cmc
in
pop
xchg
repz
jmp
or
sub
dec
inc
or
or
stos
sbb
dec
push
inc
insl
loopne
inc
add
cmp
inc
xchg
rorl
dec
push
push
imulb
scas
pop
add
push
js
or
xor
pop
inc
dec
push
sub
sbbb
mov
pop
push
inc
out
and
mov
fsubs
popa
push
repz
and
nop
ret
roll
mul
addl
xor
mov
push
pop
lahf
fwait
push
xchg
or
rorb
rcr
mov
xchg
pop
rolb
or
dec
jno
mov
sbb
addr16
xor
xor
and
mov
and
cmp
sbb
lret
test
adc
cmp
xchg
sub
adc
inc
or
lea
xor
or
repnz
cmp
jp
and
popf
dec
ret
mov
inc
clc
fwait
add
jno
mov
inc
test
cli
orl
xchg
test
idivl
inc
dec
adc
rol
push
push
scas
adc
xlat
jmp
addl
movsl
sub
mov
xor
cmc
les
xor
fsubrl
or
or
dec
push
pop
mov
orb
and
rorl
jmp
or
decb
inc
mov
lret
vsubpd
fidivrs
xor
imul
push
mov
movmskps
inc
outsl
stc
adc
pop
imull
mov
dec
jp
xchg
rorl
lea
mov
xchg
ret
rcll
dec
push
aaa
or
or
das
daa
not
andb
adc
sub
dec
test
xchg
pop
into
ror
ret
in
mov
sbb
or
aam
jne
xchg
mov
jmp
pop
out
sub
add
push
bound
test
sub
sbb
xor
xor
inc
push
push
lea
loop
push
xchg
mov
sub
mov
sbb
js
sbb
outsb
rol
pop
dec
push
stos
add
andl
adc
and
inc
mov
pop
mov
cwtl
sti
cmp
loope
rol
fisttpll
pop
jne
mov
mov
cmpsb
mov
daa
xor
sub
mov
jl
pop
js
cmpsb
lea
add
push
pushf
push
push
es
xchg
jns
es
xor
inc
addr16
dec
jmp
arpl
mov
inc
adc
inc
nop
push
push
clc
test
add
mov
roll
dec
xchg
push
jmp
inc
adc
pop
inc
test
imul
or
std
adc
push
aad
rorb
movsl
mov
dec
sar
sahf
add
ds
negb
aaa
cmpsb
or
add
xor
test
rolb
pop
add
push
inc
test
loope
dec
add
jl
inc
xchg
jae
shlb
add
xor
fldl
adc
or
cmp
cmpsl
cltd
xchg
mov
jmp
xchg
dec
nop
pop
in
or
dec
fldl
xchg
stos
test
and
jmp
nop
fstps
or
aad
cmp
mov
les
scas
add
je
dec
leave
or
repnz
dec
sub
jmp
inc
xor
push
cmp
pop
add
push
mov
inc
rcrb
ret
adc
mov
adc
or
je
inc
cmc
xor
popa
in
les
jp
add
mov
push
pmulhw
mov
adc
mov
xor
inc
fcmovb
sbb
or
pop
lahf
add
or
sub
fs
add
outsb
js
notl
push
fistps
add
loopne
loope
jg
adc
dec
cltd
iret
into
nop
pushl
hlt
stos
add
and
pushf
pop
pusha
add
call
push
inc
andl
mov
cmpsl
xchg
sub
in
push
pop
sub
daa
or
aaa
jb
shrl
adc
js
pop
xor
sbb
jns
or
add
pop
sub
in
add
sbb
lods
or
sub
or
add
prefetch
mov
pop
inc
insb
mov
std
cmp
inc
test
movsb
sbbl
add
and
cmp
jb
testl
rorl
or
inc
mov
mov
pop
cwtl
and
xchg
pusha
jecxz
scas
xor
push
inc
incl
in
pop
movsl
push
je
cwtl
xchg
and
inc
cmp
jbe
sbb
nop
mov
andb
mov
and
jbe
stc
xchg
nop
out
xchg
movsl
lret
inc
outsb
or
test
xchg
add
lods
xor
ret
add
add
sub
pop
mov
xor
mov
pop
dec
mov
jae
ja
add
cmp
je
cmp
or
shrd
pushf
sbb
xchg
sbb
clc
push
push
push
adc
xor
addl
pop
add
outsl
lea
cmp
inc
and
cmc
std
cmp
pop
and
inc
lds
nop
add
and
xor
test
or
int3
pop
cmpl
int3
push
or
sbb
add
inc
dec
pushf
and
jae
sub
or
ret
sbb
adc
addl
inc
ja
jecxz
jmp
in
mov
and
fisubrs
mov
xchg
notb
pop
subb
inc
adc
lahf
cwtl
les
sbb
ret
data16
sbb
testl
aad
sbb
ds
adc
xlat
cmpb
data16
mov
mov
cmp
inc
imul
push
jns
mov
clc
jne
mov
push
test
cmp
dec
or
mov
nop
sbb
inc
cld
cmp
stos
test
rolb
mov
movsb
nop
dec
fcoml
xorl
mov
hlt
inc
scas
xchg
inc
hlt
jns
push
add
sbb
lds
cli
sbb
sbb
mov
add
pop
adcl
jae
rclb
les
lret
and
mov
fsts
sub
pop
push
js
fistl
cld
or
loopne
loopne
fnstenv
mov
sbb
push
mov
stc
repz
cld
fcom
sbb
push
jecxz,pn
sbb
push
nop
out
mov
push
cmp
mov
inc
aaa
data16
in
jno
or
aaa
test
mov
ret
mov
cs
dec
sbb
push
fs
xchg
inc
call
mov
shrl
hlt
neg
sbb
and
bnd
movzwl
sti
sub
push
adc
les
mov
jp
test
add
or
test
adc
add
in
pop
xor
add
mov
fcmovnu
arpl
xor
mov
insl
loope
or
and
mov
dec
in
mov
add
clc
idiv
push
cmpl
jne
cmp
jbe
or
jne
push
xorb
jno
pushf
cmp
data16
mov
std
cmpb
data16
mov
pop
push
push
xchg
popa
mov
std
push
inc
cmc
jmp
sbb
mov
addl
push
xchg
lcall
sbb
adc
sbb
and
divb
cwtl
sbb
dec
test
push
pop
jne
add
push
mov
lea
inc
rolb
inc
sarb
negl
jg
vmread
or
add
dec
mov
push
sysexit
or
and
and
jo
or
in
xor
jne
and
xchg
rolb
bnd
push
mov
ret
jnp
and
push
nop
add
je
andl
pop
in
bound
add
mov
ficoml
dec
aas
out
or
sbb
cmp
cs
sbb
mov
inc
sbb
inc
jg
xor
or
cmpl
xor
add
mov
out
mov
inc
loope
add
mov
outsb
pushf
out
push
pop
ret
test
xlat
sbb
xor
push
mov
rorb
sub
add
movsb
push
inc
clc
mov
insb
lock
inc
clc
push
or
mov
jmp
and
add
adc
push
aam
lret
dec
fs
addr16
cmp
jae
inc
fs
cmp
or
dec
xchg
ljmp
sub
inc
jl
ret
add
lahf
les
in
inc
sbb
leave
mov
pop
mov
jb
push
jae
insb
cmp
lods
pop
add
inc
testb
cmp
fcomps
and
cmp
mov
cld
wbinvd
int3
ficomps
je
jle
loopne
cmp
add
daa
jmp
push
decl
cltd
push
push
mov
movsl
mov
outsb
sub
fwait
mov
add
sbb
int3
inc
sahf
xchg
add
outsl
mov
inc
rorl
add
dec
pushf
add
loopne
popf
call
into
hlt
xchg
mov
jbe
testl
or
sub
mov
mov
pop
sbb
sbb
and
test
add
dec
hlt
mov
imul
js
rclb
call
arpl
sub
cmp
add
mov
and
scas
sahf
movsl
fsubl
xchg
mov
and
jge
cwtl
ds
dec
dec
call
gs
packsswb
inc
mov
je
or
xor
adc
cmp
cwtl
or
push
sbb
ret
add
pop
mov
pop
lcall
dec
add
sbb
ss
pop
jl
push
and
jge
leave
adc
push
mov
jns
and
mov
xchg
hlt
xor
adc
and
lods
loopne
xchg
inc
sub
mov
xchg
push
push
mov
and
rcr
mov
ret
or
je
les
push
sub
aaa
mov
xchg
inc
jg
aam
push
in
in
jno
dec
xchg
or
out
mov
dec
mov
aam
pop
je
iret
fcomps
add
and
lods
push
inc
fcoml
push
jle
and
mov
xor
adc
push
sahf
xchg
sti
or
and
das
or
sbb
mov
adcb
adcb
lea
mov
fidivrs
fdivrs
cmp
inc
jle
push
push
in
mov
xor
jns
cmp
xor
mov
or
and
adc
fisttps
rcl
ret
mov
pop
or
xchg
pop
jae
push
add
sti
jb
mov
mov
mov
enter
jo
push
test
lea
arpl
fistps
shrl
add
xor
outsb
add
push
sti
dec
mov
cmp
sub
cmp
add
pop
je
dec
adc
lock
in
jae
lea
ja
mov
aas
or
or
mov
jmp
inc
test
cmp
pushl
sub
sbb
test
and
daa
lock
std
pop
test
or
mov
lea
out
cmp
sbb
pop
push
pushf
jne
push
dec
or
dec
mov
jle
pop
je
iret
lea
les
in
sub
add
mov
stc
jae
loopne
or
add
inc
sub
pop
sbb
orb
dec
shr
push
sub
insb
sbb
and
or
sbb
les
add
mov
ret
rolb
gs
and
inc
sbb
add
sbbb
pop
push
sbb
sbbb
adc
mov
je
mov
pop
aaa
pop
imul
adc
or
adc
jo
adc
dec
shrl
inc
mov
sub
dec
and
sub
mov
ss
les
inc
pusha
imul
lock
lea
cmp
jle
movsl
sub
lret
or
jge
xchg
adc
jp
popf
mov
nop
jmp
imul
adc
popf
jecxz
mov
add
push
mov
add
xor
push
jno
dec
in
lods
or
outsb
or
pop
pop
pushf
lret
scas
adc
mov
push
mov
lea
shr
push
dec
or
sarl
inc
out
inc
cmpl
adc
xchg
cmp
push
lcall
inc
and
xchg
or
data16
xchg
add
push
add
or
iret
adc
pop
pop
inc
jae
mov
je
dec
add
adc
xor
xor
les
adc
adc
repnz
jmp
andl
movb
fcoml
arpl
xor
daa
or
fwait
jnp
test
addb
mov
dec
mov
mov
clc
bnd
mov
notb
cmp
push
fidivs
add
jb
push
jae
lea
push
sub
add
and
xor
xor
xor
es
ja
or
hlt
lods
lret
ret
shlb
or
pop
mov
mov
cmc
loopne
jge
lods
shll
incb
cmpb
xor
fnstenv
inc
jmp
inc
jmp
xor
xor
cmp
adc
ficoml
insb
testl
sub
inc
cltd
mov
add
adc
sub
sub
out
push
mov
sub
jp
mov
insb
testb
div
cmpsb
enter
flds
push
cmc
dec
mov
frstor
rorl
inc
xor
out
push
sti
sbb
push
push
mov
pop
repnz
mov
push
push
adc
out
imul
xchg
inc
cmp
mov
pushf
mov
adc
push
pop
xlat
push
cmp
or
aad
xor
add
push
mov
pushf
cmp
adc
leave
adcb
nop
cltd
or
sub
int
or
scas
divl
cmp
jge
outsb
fstpt
dec
cmp
xchg
inc
mov
and
dec
and
jb
inc
fsubrs
insl
test
cli
rclb
jnp
insl
test
mov
cmp
sub
push
inc
popa
sti
inc
scas
or
add
es
dec
add
mov
cltd
and
push
sbb
add
sahf
clc
and
xchg
push
adc
out
cli
mov
inc
out
std
cmc
imul
test
out
push
sbb
bound
test
pop
adc
ja
push
cmpsb
imul
imul
mov
sbb
popa
adc
and
inc
add
repnz
adcb
push
jbe
inc
push
stc
and
add
push
sbb
movsl
sbb
lea
add
adc
loop
mov
rcrl
inc
xchg
jo
and
mov
ds
adc
push
cmp
mov
add
jmp
das
inc
sbb
imul
lods
inc
adcb
sub
lock
push
pop
pop
pop
sbb
ja
cs
xor
loopne
lds
dec
addr16
xchg
add
add
jb
adc
inc
pop
imull
xchg
or
cmc
test
lret
nop
xor
jbe
cmp
dec
loop
ret
pusha
std
xchg
xor
mov
daa
mov
rcll
loop
inc
js
jg
pushf
mov
dec
xchg
pusha
jo
xorl
movsl
shrb
pop
imul
pop
and
rclb
add
data16
ret
ja
adc
cmp
and
jecxz
or
lret
cmp
push
nop
repz
rcr
adc
and
push
jl
mov
mov
sub
dec
inc
pusha
pop
test
pop
adc
or
mov
cmc
pop
push
imul
cmp
add
mov
sbb
fdivrs
mov
jae
ja
std
or
test
and
push
pop
pop
sbb
xor
pop
or
mov
mov
leave
jae
rol
push
pop
jnp
add
lahf
mov
out
lret
in
mov
pushf
push
add
fimull
inc
xor
les
pop
fs
push
push
scas
dec
inc
xchg
inc
push
roll
jnp
pop
sub
clc
addr16
inc
and
fsubrl
jle
jne
mov
pusha
jne
das
lea
and
xchg
add
push
das
add
lock
das
mov
fwait
and
clc
inc
das
and
fildl
ret
pop
dec
fdivs
sub
lock
aas
push
xor
adc
jbe
inc
cmp
mov
fimuls
and
and
sahf
jbe
nop
shrb
pop
cli
enter
ja
daa
inc
and
add
mov
push
add
mov
mov
out
mov
cmp
test
stos
adc
adc
pop
inc
push
cld
adc
or
int3
sar
enter
or
ja
fs
and
or
notb
iret
inc
mov
les
push
mov
or
leave
push
or
ret
ret
sub
fmull
inc
test
mov
pushf
out
ds
push
pop
and
popw
scas
adc
ja
ljmp
dec
fnsave
xchg
adc
data16
jnp
mov
mov
mov
jo
int3
or
add
pushf
inc
mov
cmp
fwait
ret
xor
pop
andl
out
dec
hlt
cli
mov
cmp
js
xchg
dec
test
jg
mov
add
xchg
jp
or
cmp
or
add
ss
pop
push
mov
in
mov
xchg
dec
cmc
js
jnp
push
cmpl
push
inc
cmp
mov
add
ds
jmp
cmp
xor
mov
push
push
arpl
daa
jo
sub
push
arpl
outsl
sub
add
push
adc
mov
mov
test
sbb
bound
pop
cmp
xchg
andl
leave
in
sbb
xchg
ret
jl
subb
loope
test
movsl
jb
loopne
fsubl
push
sbb
push
push
dec
dec
mov
mov
aam
and
adc
mov
lock
add
xchg
rorb
addr16
pop
sbb
stos
int
push
shrl
push
call
and
out
das
mov
pop
jle
mov
movsl
movsl
addl
push
insb
sub
aaa
and
in
pop
push
mov
mov
mov
lret
or
pop
sub
ret
xor
sbb
push
pop
or
lea
es
in
stos
or
mov
inc
jmp
jge
ret
rclb
push
cmpsb
mov
sub
mov
ret
aas
or
or
ret
push
and
push
adc
fs
sbb
cmp
ja
fnstcw
pop
dec
cld
push
adc
cld
js
in
cmpsl
lods
mov
insl
cmp
dec
cs
sti
dec
clc
add
push
push
xor
lar
jmp
cmpsb
jecxz
jne
int3
add
clc
shlb
cs
sub
pop
fs
jecxz
push
sbb
clc
popa
and
sub
mov
dec
rclb
mov
and
pop
inc
add
jge
xor
mov
cmp
js
popf
sarl
not
imul
es
adc
mov
negl
add
pop
mov
lods
sbb
adc
cltd
into
sbb
gs
lods
out
arpl
push
lea
add
test
inc
adc
and
rcll
or
aad
loope
mov
mov
hlt
xchg
inc
in
sub
push
sub
push
dec
jmp
add
inc
or
mov
lahf
mov
jg
test
ja
add
dec
sbbb
loope
adc
je
jno
scas
xor
dec
jne
pop
fs
push
fcomps
cmp
test
add
out
inc
or
push
in
mov
adc
fidivrl
inc
scas
jbe
mov
cwtl
frstor
into
add
mov
mov
clc
add
xchg
negb
push
cmp
or
in
push
call
das
outsl
push
xor
cmp
dec
inc
sub
js
dec
cwtl
jl
mov
leave
cmpsb
mov
adc
xor
xor
lea
xchg
jl
ss
stos
int3
sub
inc
jmp
add
loopne
pop
adc
lret
iret
push
lcall
adc
arpl
es
add
jmp
loopne
fstps
adc
add
test
out
mov
dec
inc
and
orl
fdivs
mov
inc
mov
incb
mov
sbb
xchg
mov
rcll
dec
fwait
out
gs
scas
clc
call
sbb
inc
jle
add
outsb
adc
movsl
aam
jo
scas
in
movsb
fst
jmp
xorl
ret
mov
or
add
subb
xorb
lret
and
adc
ss
xchg
mov
mov
cmp
ret
or
jge,pt
pop
cmp
or
add
pop
aam
orb
mov
inc
push
xor
pop
xchg
adc
jo
push
ljmp
sub
js
mov
mov
dec
push
or
roll
sub
or
daa
mov
dec
or
inc
in
je
jno
mov
xchg
mov
xchg
xchg
aaa
movsb
pop
test
roll
push
sahf
jne
add
push
dec
iret
mov
dec
xchg
inc
scas
push
push
add
xchg
mov
inc
adc
loope
add
loope
dec
sbb
in
xchg
lods
pop
loop
and
mov
les
sbb
mov
adc
jge
movb
lahf
cmc
int3
rcll
or
adc
call
add
mov
or
and
jl
fwait
xor
jno
and
jne
sub
pop
xchg
or
pop
mov
push
or
jne
sub
lods
dec
add
jne
xor
daa
add
outsb
ljmp
cmp
fists
lahf
cmp
ja
lock
mov
lea
inc
je
lret
push
into
add
clc
mov
sbb
add
jo
int
repnz
cld
push
dec
jnp
notb
popa
inc
add
mov
dec
add
stos
pop
ficoml
push
sti
loope
fists
movsb
inc
mov
std
sbb
fdivrl
push
jnp
aad
inc
xor
sarb
sub
mov
mov
ds
pop
mov
fs
adc
repz
mov
mov
jp
lods
adc
add
out
push
fdivl
enter
pop
mov
mov
push
dec
scas
lcall
inc
inc
fbstp
aam
pop
mov
jg
daa
cmp
and
out
sbb
imul
sub
rcll
xchg
movsb
cmp
push
jmp
cmp
sarl
rorb
insl
roll
loope
cmp
pop
sbb
cmp
xchg
flds
sub
and
and
inc
jo
mov
mov
orl
fcoml
sahf
xchg
add
andb
andl
mov
cmp
in
ret
cmp
jne
test
cli
or
pop
sub
sub
add
push
jae
push
add
out
repz
push
je
xor
imul
sbb
dec
insb
jne
mov
cmp
scas
dec
jno
fs
rclb
rolb
mov
inc
mov
pop
sbb
jo
gs
or
je
pop
add
or
jne
lods
adc
adcb
nop
mov
cmp
pop
addl
push
data16
add
and
xchg
cmp
add
xchg
or
jnp
psubd
inc
cmp
cli
push
pop
cwtl
fdivrl
jl
add
sbb
mov
mov
xchg
ffreep
push
push
das
rorb
push
pop
sbb
test
out
in
push
cmc
push
xchg
jno
aaa
mov
pop
xor
rcrl
push
test
jno
lcall
add
fwait
icebp
add
stc
lds
mov
cmp
jne
or
or
pop
mov
loopne
pop
shll
jo
mov
push
mov
iret
mov
insb
pop
dec
dec
or
je
adc
inc
or
lea
xchg
lea
daa
shlb
lods
or
inc
mov
sbb
inc
xchg
insb
fcmovb
inc
sbb
inc
sub
mov
int
mov
mov
pop
pop
add
add
jae
push
add
mov
lcall
xor
mov
lcall
insb
xor
imul
push
add
orl
or
push
or
or
cmpsl
mov
dec
int3
cmp
push
shlb
cwtl
xor
push
mov
cltd
pop
out
pop
xor
add
loopne
nop
in
arpl
out
or
movb
sbb
sbb
cmpsl
xchg
lods
pushl
cwtl
incl
add
fmuls
inc
jl
js
add
nop
je
insb
sbb
pusha
sbb
add
imul
insl
and
cltd
adc
leave
cmp
aam
and
cmp
push
push
mov
out
dec
pop
add
adc
pop
shrl
cld
jo
in
xchg
xor
sub
sub
and
push
adc
jmp
xchg
add
push
adcl
mov
fidivl
mov
push
data16
push
lea
add
xchg
add
cmpsb
cli
adc
cmpb
fcmovnb
add
movswl
cmp
xchg
aam
push
inc
sbb
or
out
mov
es
mov
mov
pop
or
jbe
push
js
jo
jle
mov
xor
push
add
dec
clc
push
lock
mov
cmp
push
inc
dec
and
push
fcoms
insl
inc
sub
lock
shl
ret
mov
sbb
xchg
add
add
aam
ds
ss
and
imul
je
xor
xchg
jne
das
xorl
cld
addl
pop
jne
orl
cld
mov
jne
imul
sub
data16
pop
dec
test
pop
jmp
and
xchg
fidivrs
adc
das
call
push
stc
fldl
sar
dec
jb
sbb
lods
jo
cmp
sub
sub
sub
add
imul
outsb
dec
les
mov
add
mov
stc
push
jne
loopne
mov
mov
sub
mov
clc
dec
jne
cmp
inc
icebp
data16
cmp
cmpsl
lods
xchg
jne
xor
add
fwait
jl
sub
lahf
jo
cld
ja
xor
dec
mov
and
cli
sahf
loopne
lcall
daa
xchg
lock
or
mov
xchg
sbb
enter
adc
sbb
into
dec
aas
clc
lods
push
mov
add
lret
popf
movsl
sbb
mov
mov
or
cli
out
fidivrs
pop
dec
adc
add
sahf
xor
mov
push
sub
or
dec
lret
jle
add
dec
dec
adc
nop
pop
inc
sbb
jno
pop
cmp
xor
rcll
xorl
sti
insl
cmp
xor
jb
add
sub
sub
xchg
test
shll
or
and
push
and
sbb
call
dec
cmp
mov
outsb
dec
jb
sbb
movsb
sbb
lea
xchg
mov
stos
bound
pushl
jo
and
sbb
jno
orb
mov
outsb
or
lock
fwait
inc
data16
mov
cmp
notl
inc
cmpl
or
dec
add
gs
or
pop
and
insb
insb
out
ror
push
icebp
or
or
xor
cmp
pop
pop
icebp
nop
push
xchg
adc
inc
pushf
cmp
cli
je
or
pusha
popf
popf
add
or
enter
push
mov
or
ficomps
cmp
lea
mov
hlt
sti
loopne
outsl
lds
fwait
inc
and
cmp
push
jne
jg
nop
mov
mov
adc
dec
shll
lock
enter
cld
lock
test
ljmp
fistps
adc
sbb
jp
inc
ja
jo
lods
xchg
mov
cli
fistpll
in
push
mov
lret
add
push
and
mov
rsm
mov
lock
sub
xor
cmp
xor
jne
movsl
pop
or
cmc
jecxz
and
pop
pusha
xchg
sbb
push
test
or
or
lret
push
ljmp
push
mov
add
fsubl
test
pop
mov
sbb
cmp
add
insl
mov
jne
adcb
jbe
mov
push
sub
jne
adcl
popa
adc
add
ror
xchg
fidivl
mov
adc
mull
adc
xor
aas
fldl
cmp
jne
outsb
fcompl
xchg
shrb
mov
mov
sbb
stos
or
test
es
cwtl
fidivrs
mov
sub
mov
adc
je
sbb
jle
cmp
out
push
and
dec
push
lea
push
mov
xchg
adc
sbb
sbb
loop
dec
push
or
popf
xchg
or
sbb
xor
jbe
data16
fcoms
jo
mov
rol
add
popa
xor
into
add
push
fs
pop
loop
pop
or
mov
pop
jno
mov
arpl
mov
xchg
mov
cmp
xor
fdiv
or
cmp
add
push
jbe
sub
sub
add
sbb
addb
cltd
sarl
test
cmp
fdivs
lods
sub
divb
add
dec
ret
jge
int3
mov
lods
dec
sbb
add
add
or
pop
rol
inc
pop
jbe
and
push
jmp
adc
or
mov
mov
shrb
mov
pop
out
ss
jmp
jmp
xor
xchg
push
sub
test
mov
mov
add
pushf
sub
push
jo
into
push
adc
xor
xor
and
and
mov
sbb
dec
mov
and
push
sbb
sub
ret
dec
jle
dec
js
lcall
push
mov
dec
mov
cmp
ja
pop
push
adc
fiadds
mov
mov
cmpl
pop
test
lods
out
add
push
fmuls
dec
jno
mov
sbb
pushf
push
and
sarb
push
inc
mov
cmpsb
add
sub
xor
idivb
pop
push
xor
and
fs
mov
out
call
inc
xor
dec
fdivl
arpl
mov
movsl
add
outsb
mov
jl
mov
mov
sbb
and
sbb
sbb
push
adc
sbb
add
jmp
fnstcw
xor
inc
adc
xor
ja
cs
push
or
scas
mov
xor
and
enter
popa
aaa
cmp
and
mov
repnz
ficomps
sub
mov
jne
aas
fisubrl
and
sub
and
sarb
or
divl
dec
and
push
cmpsl
in
adc
adc
cli
mov
jl
repnz
push
andl
sub
push
aam
inc
cltd
sub
fwait
jne
mov
cltd
or
outsb
adc
and
or
mov
push
or
inc
fstpt
adc
fsubl
leave
and
stos
sbb
or
pop
mov
call
popf
inc
jg
shrb
int
sarl
pop
arpl
push
adc
push
jbe
jo
or
js
cmp
sbb
jo
pop
adc
out
insb
test
push
xchg
add
pop
mov
push
add
aaa
jmp
mov
or
pop
push
orps
and
aaa
xchg
movsb
add
arpl
add
popf
cmpsb
dec
jge
cmp
push
imul
pop
jb
sub
in
and
pop
addb
xor
call
pop
mov
push
mov
rcrb
test
dec
sbb
ret
cmpsl
ret
jge
lret
xor
test
push
or
or
adc
jbe
pop
sahf
push
fs
xchg
push
mov
pushf
and
dec
int3
add
mov
minps
pop
pop
inc
add
sbb
popa
mov
push
jnp
xor
xchg
sbb
sub
testl
mov
sub
dec
lcall
cmp
add
sbb
enter
mov
loope
add
fwait
xchg
cmp
insb
mov
setbe
loope
adc
js
mov
push
cli
push
push
push
cmpsl
imul
push
loopne
sub
iret
aaa
add
aad
jp
or
cmp
and
add
test
and
pop
lds
cmp
adc
addb
inc
in
jmp
pop
and
xor
add
and
dec
je
mov
cmpb
fimuls
jbe
jmp
pushl
andb
dec
rcr
call
lea
push
orb
cmp
mov
mov
inc
test
subl
dec
cwtl
xchg
test
jae
test
or
or
mov
push
xchg
and
jge
cs
jl
andl
or
mov
push
sub
js
daa
fs
jb
cltd
addb
les
inc
jae
test
leave
and
jecxz
cmp
test
mov
push
push
int3
lea
add
jo
fisubrl
ret
cmpsl
shr
push
fcoml
jbe
inc
into
mov
cmpsl
sub
ljmp
adc
push
jno
pusha
adc
ret
andl
adc
rcrb
mov
mov
addl
and
add
lret
rcrl
je
push
pop
ja
out
sub
sub
xor
addb
pop
jmp
and
sbb
jno
mov
das
pop
bound
or
or
add
pop
or
outsb
fs
arpl
jne
jns
pop
pop
sub
xor
xor
mov
pop
lock
pusha
mov
das
push
sub
mov
pop
in
mov
sub
add
cmp
add
sbb
cmp
add
clc
inc
mov
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
or
jmp
fistl
jo
add
dec
mov
mov
mov
lods
push
push
leave
adc
loopne
cmc
imul
ja
xchg
dec
testl
inc
add
jb
push
inc
mov
aas
mov
push
add
shrl
inc
push
pop
sub
xchg
add
xchg
into
outsb
movsl
sarl
aaa
add
pusha
and
sbb
inc
jle
rcr
movsl
push
push
pop
loopne
or
mov
jl
mov
incb
pop
add
loopne
jl
test
add
nop
sbb
shr
aaa
icebp
or
or
xchg
or
sub
xchg
mov
mov
mov
shlb
xchg
ret
nop
inc
mov
inc
and
out
xchg
shl
mov
inc
ficompl
or
lret
xchg
daa
mov
xchg
jo
stos
or
mov
lods
mov
add
dec
fwait
inc
fcmovu
add
push
pop
push
push
lcall
or
push
inc
push
cwtl
imul
cltd
idivl
mov
sbbb
jbe
out
sbb
add
add
sub
hlt
mov
add
push
ret
adc
and
push
gs
jb
pop
add
or
sub
je
mov
inc
fxch
pop
mov
jecxz
push
int
pusha
addr16
or
lcall
imul
filds
and
push
mov
adcb
adc
rolb
mov
xchg
fsubs
adc
aad
or
mov
sub
je
daa
js
cld
sbb
rcll
test
push
push
mov
adc
cmp
pop
mov
dec
jp
mov
loopne
test
add
sub
jo
xor
lods
je
xor
push
mov
push
mov
jns
push
test
cmp
popa
jp
sub
push
and
je
insl
sub
push
nop
sbb
mov
rcll
push
xor
or
cmpsl
notl
pop
jae
mov
test
insl
js
or
and
int3
dec
orl
mov
pop
pusha
jmp
cmp
dec
shl
jmp
cmp
xchg
addr16
cmp
incb
loope
pusha
jb
add
ja
adc
sbb
adc
dec
cmp
adc
sbb
cmp
jo
pop
cmp
jmp
cmc
pop
push
call
xor
add
push
add
push
rclb
xchg
adcb
out
or
addb
sbb
data16
and
aas
jmp
and
loope
cmp
lds
add
push
mov
int3
and
adc
push
cld
xchg
movb
mov
scas
jge
movl
jg
inc
insb
shr
inc
add
stc
ficoms
dec
adc
adc
and
call
jge
dec
sbb
mov
pusha
insb
std
mov
sbb
jmp
mov
adc
std
repz
mov
imul
ss
fsubs
stos
or
add
sbb
jne
sub
in
sbb
push
arpl
pop
add
inc
lock
sub
dec
dec
sbbl
dec
and
inc
leave
lret
push
int
fucom
mov
dec
add
xor
or
pop
adc
or
or
les
pop
ret
mov
xchg
mov
mov
mov
addl
pop
sbb
pop
adc
test
jle
adc
or
cltd
pop
out
mov
mov
insb
insb
pop
mov
adc
data16
xchg
or
push
add
pushl
dec
or
jg
inc
xor
inc
out
bound
inc
movsl
xor
je
in
add
adc
sub
adc
jno
sub
cwtl
adc
js
lret
push
loopne
add
jmp
push
jne
jnp
imul
push
pop
mov
add
out
mov
cmp
cld
arpl
or
add
mov
idivb
addr16
xchg
adc
mov
stos
ret
es
pop
sbb
mov
jo
sahf
repz
in
cwtl
sub
fs
dec
xor
mov
hlt
sti
sub
cmp
jl
dec
adc
shrb
pop
cmp
pop
cmp
or
push
mov
xor
jmp
cltd
push
mov
cmpb
dec
cld
fistpll
mov
jp
mov
inc
je
cmpsl
dec
pop
paddusw
fists
in
lea
mov
xchg
stos
pop
add
add
lret
cmpl
and
mov
or
adc
or
add
fwait
cmp
fs
xor
bound
adcl
cld
dec
jl
sar
inc
dec
movsb
push
adc
cmp
jnp
inc
adc
jbe
mov
les
pop
and
adc
cmc
mov
mov
pop
sub
andb
movsl
mov
repnz
pop
push
mov
dec
je
cmp
push
fbstp
dec
es
jbe
repnz
call
xchg
or
xchg
sets
push
fsubrs
ret
pop
pop
xchg
adc
cs
push
add
test
mov
xor
js
jb
add
and
adc
push
les
push
inc
xchg
cltd
add
into
mov
push
out
xor
push
pushf
in
mov
cmc
je
mov
lret
ret
xchg
lock
ret
shll
testl
lock
pop
dec
jle
xor
or
js
neg
ret
xlat
loope
dec
pop
dec
rcrl
jae
mov
cmpsb
add
insb
dec
add
loope
lock
shlb
pusha
stc
or
jae
push
push
rcrb
lret
jle
sbb
sbbl
sub
pop
and
and
mov
xchg
loopne
dec
push
xor
das
insb
es
in
pop
fwait
add
mov
and
shll
dec
int
sbb
sbb
push
cmp
ljmp
loopne
pop
loopne
mov
add
mov
mov
je
add
add
fcoms
jbe
and
sti
inc
clc
push
sub
daa
inc
insl
xorl
push
movsl
mov
in
dec
push
mov
cmp
push
push
repnz
xor
mov
femms
fisubl
rcl
adc
inc
sbb
adc
popl
mov
mov
subb
push
add
lock
jae
jnp
das
loop
rcr
daa
push
in
xchg
loopne
cmp
add
lods
cmp
cmp
lcall
push
or
lea
loop
cmp
and
sbb
movsl
pop
push
fisubs
mov
add
cld
push
or
and
pop
add
shl
dec
loope
adc
xchg
jbe
or
adc
add
pop
cmp
push
and
xor
pop
mov
test
cmpsb
jne
ret
outsl
decl
mov
cmp
ja
je
movsb
rcr
outsb
or
je
or
sub
xchg
call
das
adc
rorl
jns
push
sbb
cmpl
movsb
xchg
aaa
xor
scas
add
sbb
sahf
pop
add
popa
or
andb
mov
clc
push
jmp
cmp
adc
imul
xor
sbb
inc
push
inc
adc
adc
or
mov
or
add
adcl
push
push
dec
lock
xchg
movsb
dec
cmp
call
jmp
aam
inc
push
push
dec
je
stos
inc
mov
cmp
push
sub
lock
sbb
adc
or
push
pop
fcomps
and
pop
repnz
out
scas
pop
popa
mov
adc
cmp
andl
pop
aad
pusha
or
pop
popa
icebp
bound
adc
outsb
xchg
xchg
and
jno
dec
je
sub
jne
sub
or
pop
mov
in
inc
outsb
jp
mov
mov
add
ds
or
ret
push
adc
inc
push
int3
or
or
mov
insb
adc
insb
popf
das
dec
pusha
add
or
or
cmp
jmp
sbb
add
int3
and
push
inc
enter
and
xchg
inc
push
mov
shr
shrl
push
push
or
lret
sub
lods
rcr
inc
mov
lds
sbb
add
addr16
inc
loopne
fsubl
mov
add
xor
out
je
push
push
or
jmp
cmp
xchg
test
mov
jmp
xchg
push
rol
call
loopne
pop
jns
testl
pop
push
cmp
loope
imul
js
daa
push
or
flds
xchg
push
cltd
mov
sub
inc
mov
popa
aam
or
xchg
and
rorb
dec
lahf
jl
mov
cmpl
mov
inc
clc
and
jns
inc
add
add
add
cmp
pop
push
push
mov
pop
push
fs
jb
fsubr
or
and
pop
cmp
mov
add
dec
pusha
loope
jge
mov
mov
cmp
pop
cmp
js
lods
mov
add
sahf
push
mov
fsubrp
push
das
jno
inc
xor
int
fdivrl
pusha
push
ret
pop
cmc
fsubrs
mov
mov
adc
jmp
jbe
push
push
or
inc
shll
mov
fdivrs
xor
aas
xchg
loopne
sbb
mov
fimuls
mov
dec
sbb
adc
sbb
inc
dec
shr
xchg
push
xor
das
addl
inc
js
inc
sbb
mov
xor
sbb
aaa
jne
cmp
sti
test
mov
bound
adc
mov
jmp
cmp
rcrb
or
dec
inc
sub
fidivl
lock
jecxz
ljmp
movsl
or
push
out
adcb
sub
adc
popf
fimuls
insl
mov
pop
adc
jb
data16
jne
mov
dec
jecxz
xor
loopne,pt
xchg
sub
jge
lcall
ds
push
je
hlt
or
xlat
shlb
push
leave
andb
loop
pop
stos
inc
pop
mov
sbb
jno
sbb
push
and
sub
mov
test
outsl
in
bound
or
je
daa
push
arpl
dec
leave
mov
mov
add
in
sub
inc
andb
test
data16
adc
hlt
mov
sbb
mov
aam
add
and
sub
sub
roll
jp
push
loope
inc
aam
dec
and
sbb
or
inc
fst
ss
or
movsl
adcl
pusha
daa
push
test
dec
sub
roll
jecxz
ret
in
xchg
scas
es
outsl
add
cmp
int3
cmpsl
ljmp
cld
inc
jp
add
cwtl
push
gs
jle
pop
push
inc
leave
stc
mov
xchg
je
rcl
add
cmp
mov
add
mov
sahf
in
subb
xchg
push
sub
lds
fcompl
add
call
inc
pop
jae
data16
xor
aaa
bndldx
xchg
in
mov
sbb
add
or
pop
cmpsl
mov
test
mov
add
and
fisubl
sbb
mov
js
clc
or
mov
sarb
push
mov
mov
out
sbb
push
rolb
mov
mov
mov
mov
adc
adcl
inc
xchg
pop
and
pop
addb
fwait
and
adc
notl
scas
int3
out
or
push
and
mov
cmp
scas
sbb
push
mov
adc
jne
cmpsl
inc
in
push
insb
int3
xchg
or
push
inc
xchg
lods
psubd
add
push
or
scas
iret
mov
cmp
add
sub
xor
or
ret
xchg
push
or
in
js
sahf
or
sub
adcl
xchg
fcmovb
xlat
cmp
test
sbb
pop
data16
subb
cmp
jne
xor
adc
in
popf
inc
sbb
std
mov
mov
push
xor
xchg
jmp
sbb
lret
xchg
in
cmp
or
leave
jp
cmp
push
loope
push
js
je
mov
or
xadd
bound
negl
sti
or
jl
sbb
pushf
dec
je
xchg
inc
das
push
cs
xchg
jmp
movsl
sbb
in
adc
outsb
fiaddl
inc
and
dec
adc
and
add
sub
data16
adc
push
imul
and
mov
jnp
cmc
add
sbb
dec
in
xor
jnp
inc
adc
inc
and
dec
and
and
jnp
loope
divb
jno
sub
cld
and
movsb
into
jle
jno
dec
or
pop
ja
mulb
push
dec
pusha
gs
lcall
ret
sbb
xchg
mov
call
test
loop
in
add
mov
push
sub
add
mov
fadds
or
das
test
push
push
mov
pop
dec
sub
adc
sub
sbb
mov
inc
test
jae
inc
add
lods
das
mov
int3
sub
icebp
xchg
xchg
out
pop
movsb
les
icebp
in
addr16
cmp
sbb
repz
lock
add
jp
lock
mov
or
aam
pop
mov
mov
fdiv
jg
or
gs
movsl
ret
testl
lahf
aaa
add
sti
sbb
adc
pop
lret
dec
or
rorl
stc
and
mov
push
repnz
subb
cmp
out
mov
cmpl
sbb
adc
push
adc
pop
or
popf
sbb
js
dec
mov
jo
pop
jns
dec
adc
push
or
dec
test
cli
mov
dec
and
and
cli
xchg
fimull
push
repnz
pop
je
inc
add
stos
je
cmp
sbb
aas
imul
data16
xchg
sub
and
cld
insl
inc
mov
mov
lds
andb
mov
inc
and
arpl
inc
add
or
inc
not
adcl
dec
outsb
sti
aaa
inc
mov
sub
loopne
cmpb
mov
fnsave
push
add
mov
xchg
dec
mov
ja
pop
pushf
cld
inc
adc
and
jo
insb
lahf
movups
push
mov
inc
lea
insb
test
popf
add
and
std
out
jl
push
sub
shl
adc
stos
cltd
pop
enter
das
pop
orl
jo
or
jno
lock
andl
rorb
fwait
adc
mov
out
orl
or
insb
sub
test
sbb
sbb
fld
jge
push
dec
xor
pusha
add
fxch
sbb
jmp
add
and
into
mov
jmp
mov
sar
sub
ja
add
outsb
xchg
cwtl
lods
inc
pop
aaa
or
push
jo
insb
add
jle
adc
and
xor
movsb
sbb
sbb
test
enter
or
cmp
enter
jg
fsubrl
lds
push
jg
jne
fs
enter
xchg
jg
int
insb
inc
jne
mov
ja
add
lret
sub
fs
fs
in
insl
push
dec
addl
ss
mov
push
cmp
xchg
mov
jle
stc
xor
in
push
daa
jae
sti
je
pushf
out
negl
push
adc
dec
push
xchg
cltd
test
ret
dec
sub
jne
push
adc
push
pop
stos
test
daa
cmp
jmp
and
and
hlt
add
mov
js
pop
and
xchg
or
jb
mov
sbb
and
adc
cs
push
pop
pop
push
add
sub
add
pop
pusha
test
mov
iret
in
mov
movsl
push
sbb
pop
mov
xchg
mov
jnp
pop
sbb
xchg
cmp
scas
fistpll
loope
inc
jl
outsb
rclb
mov
inc
sbb
cmp
push
dec
fdivrl
jle
sahf
jae
push
adcb
push
push
inc
dec
je
cltd
fdivl
inc
in
data16
sbb
add
or
push
push
xchg
push
ljmp
out
or
pop
in
mov
sbbl
add
xor
shl
sbb
mov
ja
push
cmp
cmp
pusha
add
rol
xor
inc
cmp
shrl
push
mov
fidivs
mov
jne
rdtsc
imul
push
nop
cmc
pop
imul
xchg
cmp
adc
and
pop
sbb
popf
add
sub
adc
jg
jne
mov
mov
int3
enter
les
xchg
cmp
cmpb
pop
pop
inc
xlat
ret
mov
sti
lret
push
pop
mov
loopne
and
and
add
add
add
add
inc
imul
shlb
xchg
mov
push
scas
mov
clc
call
shll
mov
mov
jne
pop
gs
sbb
mov
rcl
mov
insb
adc
mov
pop
jmp
loopne
or
pushf
ja
add
mov
je
fmuls
xchg
add
test
mov
push
cmp
add
cmpsb
jbe
dec
mov
xor
pop
and
jge
add
xchg
dec
or
ffree
pop
push
add
jne
sbb
push
pop
adc
add
je
or
rcrb
scas
adc
xchg
pop
mov
add
lea
or
push
xlat
push
push
mov
or
add
mov
pusha
or
xchg
and
mov
inc
lahf
ja
cli
insl
or
call
jg
js
dec
sub
push
and
or
xor
sbb
fdivrl
out
into
in
or
sub
adc
cmp
idivb
lods
test
out
push
mov
les
ja
xchg
adc
mov
sub
out
inc
push
jmp
adc
push
xchg
or
xchg
mov
pop
faddl
add
ret
mov
adc
and
adc
jo
call
dec
push
push
mov
jb
and
mov
push
xlat
fcoml
xchg
or
sbb
cmovno
daa
mov
lds
and
cmp
test
xchg
aad
ja
jg
mov
pusha
lods
cs
mov
arpl
or
pop
push
inc
gs
dec
cmpsb
adc
jb
adc
lods
leave
push
push
lret
sahf
repnz
push
dec
lock
mov
push
xor
inc
mov
jecxz
mov
test
push
notl
jl
cli
add
rorl
xlat
dec
xor
leave
push
xor
in
ret
push
and
inc
jmp
shll
push
mov
jno
mov
mov
add
les
mov
orb
xchg
pop
sub
sar
add
pop
repnz
nop
mov
push
nop
loopne
and
or
lcall
aaa
add
jne
test
push
call
sbb
push
lea
add
shll
cmp
push
cmp
push
or
xchg
pop
add
lods
pop
and
add
sbb
mov
test
test
xchg
or
sub
jo
fs
lea
xor
or
cmpsl
leave
cmpb
scas
stos
xchg
adc
mov
add
pop
fildl
sbb
adc
push
lock
adc
cmp
rclb
aas
ja
push
jg
sbb
inc
int3
mov
data16
inc
add
inc
int
push
les
or
xor
add
incl
mov
jne
andl
nop
inc
and
test
mov
push
adc
jnp
jp
adc
jne
push
or
stc
aam
or
sbb
jae
cmp
jbe
jb
pop
mov
xor
sbb
das
fs
xchg
insb
sbb
push
andl
cmp
mov
mov
add
sbb
jbe
push
sbb
pop
fwait
sub
sbb
icebp
push
or
ret
iret
add
pop
ret
inc
push
lds
les
jb
aas
jo
int3
mov
rclb
and
rclb
popf
add
cwtl
push
adc
add
enter
test
shll
repnz
and
dec
leave
mov
pop
lcall
push
xchg
push
adc
push
push
xchg
shrb
or
cmp
jae
or
cmp
adc
mov
cmp
add
mov
push
punpckldq
aam
leave
shrb
inc
or
jnp
mov
arpl
xchg
push
dec
stos
movsl
movsb
or
sbb
inc
add
cmpleps
aad
movsb
and
sub
inc
rorb
dec
add
test
shll
scas
add
jle
adc
rcrb
jecxz
dec
rcll
imul
pop
adc
push
mov
rolb
xor
stc
pop
jo
je
sub
fsub
sub
push
jo
push
add
add
xchg
xor
in
popa
adc
sbb
sub
adc
add
cmp
pusha
and
mov
push
inc
cmp
mov
les
test
ret
mov
mov
jns
and
xchg
cmp
adc
and
or
add
mov
sub
loopne
cld
push
pushl
and
and
jp
out
pop
sub
aad
cmp
hlt
jno
push
clc
test
cmp
jl
pop
and
mov
call
jp
icebp
aam
add
xchg
mov
add
or
push
xchg
adc
mov
dec
rorl
push
add
sbb
pop
lods
adc
fcmove
ret
or
pop
xchg
test
clc
and
pop
sbb
lea
pop
inc
js
cmp
shlb
sub
or
mov
push
test
and
sbb
pop
or
popf
mov
stos
jl
push
clc
shll
imul
xchg
ljmp
cld
cld
adc
call
clc
pop
jbe
insb
loopne
jg
in
inc
pop
add
sti
inc
and
fisttpl
jbe
sub
lea
sarl
loopne
mov
fwait
leave
ljmp
or
popf
outsl
jne
cltd
mov
je
icebp
adc
jbe
das
shll
xchg
cmc
leave
nop
sbb
sub
inc
repnz
jp
or
loope
pop
inc
sbbl
sbb
or
inc
xor
mov
xchg
xor
inc
push
inc
imul
push
inc
sti
jl
test
jg
cmp
add
mov
mov
xor
cltd
pop
mov
fwait
js
and
clc
push
and
in
jno
jecxz
jle
dec
add
jmp
or
movsb
shlb
push
imul
mov
jg
mov
mov
in
xor
push
cmpsb
jle
jb
mov
sbb
add
daa
adcl
mov
movsl
sub
xor
xchg
xchg
xchg
test
aam
lock
in
or
dec
xchg
mov
push
pushw
lret
lock
jecxz
or
mov
insl
xchg
movl
mov
cmc
or
inc
add
subl
imul
sub
mov
jns
add
xchg
jno
jne
out
adc
xor
push
bound
adc
subb
pop
add
movsl
icebp
and
push
mov
in
movsl
pop
pop
xchg
andb
sub
stos
add
movl
mov
and
jmp
sub
push
addl
xor
jp
jmp
ss
adc
popf
cmpb
or
insl
vdivss
loope
sbb
push
clc
test
popf
stc
test
and
popa
or
add
sub
adc
sbbl
pop
test
arpl
outsb
out
adc
lea
push
shlb
lods
inc
push
push
scas
push
ret
and
cli
add
jl
cmp
mov
push
jo
cli
daa
mov
xchg
fnsave
sbb
mov
fiadds
idivb
dec
sub
dec
jmp
adcb
sbb
in
mov
xor
xchg
xor
jge
mov
xor
cmp
xchg
and
push
push
pop
lea
lods
push
mov
rep
pop
adc
pop
or
mov
dec
sub
jmp
sub
jae
sub
shlb
add
mull
into
jae
sbb
andl
mov
and
jne
push
push
xchg
scas
mov
push
mov
cmpsb
xlat
push
hlt
push
sar
and
push
mov
mov
adc
xorl
rcrl
sub
mov
or
cmp
mov
xor
roll
jnp
push
inc
mov
adc
add
stos
mov
sbb
sub
and
jno
and
lock
adc
hlt
mov
mov
dec
pop
sbb
rolb
push
iret
test
fildll
inc
ret
or
das
pop
jae
sbb
mov
push
push
push
xor
adc
add
out
dec
pusha
int3
cmp
and
adcl
add
push
lret
dec
data16
lock
push
xor
or
dec
push
xchg
mov
je
push
sub
mov
test
xchg
test
adc
jno
decl
vorps
push
push
dec
sahf
shlb
xchg
push
in
xor
mov
mov
xlat
mov
adc
inc
les
fidivrl
add
loopne
add
mov
rolb
stos
cmp
sbb
sbb
pop
lock
and
sarb
dec
jne
lcall
mov
lea
mov
adc
push
loope
mov
adc
inc
loopne
and
and
push
gs
adc
outsb
push
ss
sbb
call
inc
push
test
adc
dec
nop
cmpsl
sub
xor
mov
dec
mov
add
adc
or
push
ror
and
inc
push
in
test
fistpl
icebp
or
ret
call
testb
and
or
add
push
dec
mov
cmpsl
push
and
movsl
jo
cmpsl
push
daa
addb
rcll
ret
push
or
cmp
fnstcw
inc
cmp
cmpb
lcall
jbe
add
dec
jl
lea
test
inc
mov
pop
hlt
sub
sar
xchg
inc
out
loope
repnz
add
rcrb
push
adc
add
cmp
dec
test
and
movsl
push
mov
sub
jecxz
dec
push
dec
xchg
es
imul
movb
xchg
adc
mov
loope
dec
imul
ret
sub
add
sahf
ja
lret
loopne
out
sub
xchg
and
mov
mov
ficomps
xchg
popf
sahf
or
xchg
int3
shrl
mov
jg
mov
cs
cmp
ret
adc
jecxz
and
rolb
add
ret
hlt
add
jl
les
adcb
ret
notb
je
cmpsb
sbb
jne
std
mov
add
xchg
lcall
push
mov
mov
jle
xor
jbe
adcb
test
or
pushf
sbb
js
test
jae
fwait
orb
add
push
cmp
add
xchg
xchg
xchg
adc
pop
mov
mov
aaa
aaa
test
inc
jmp
dec
ss
lock
in
push
mov
stc
jne
sub
mov
incb
pop
pusha
shr
data16
cmp
out
dec
shll
jb
jae
ror
mov
loopne
push
xchg
jmp
mov
mov
dec
hlt
jae
mov
dec
and
jg
push
rcl
xchg
add
in
adc
addl
xchg
jnp
push
dec
inc
sub
dec
inc
inc
inc
jl
jl
fists
inc
sub
jne
pop
jb
adc
adc
jp
jno
sub
dec
pop
mov
and
pop
inc
dec
xchg
cmpsb
cmp
pop
lods
add
xchg
jbe
jo
xchg
pop
dec
sti
inc
pop
xchg
xchg
cltd
mov
sub
mov
add
mov
lret
ret
adc
xchg
or
cmp
xchg
or
and
xchg
sbb
xchg
add
subl
jmp
mov
cmp
or
cmp
dec
cmp
nop
out
sarb
or
and
enter
and
or
mov
mov
and
adc
or
inc
add
sub
in
sbb
sahf
ja
sbb
mov
ja
cmp
jl
scas
pop
adc
arpl
and
adc
xor
add
xchg
loope
mov
push
fmull
test
mov
add
mov
stos
clc
cmpsl
jne
inc
xor
pop
cmp
adc
clc
cmp
sub
arpl
or
pop
dec
shlb
and
sbb
and
or
inc
adc
mov
xor
shr
push
dec
xchg
and
sbb
push
xor
lahf
and
sbbb
fadds
clc
sbb
jb
sbb
push
mov
sub
cmp
pop
cmp
cmp
test
inc
push
fsubrl
xchg
test
out
and
das
test
mov
cmpsb
lods
cmp
pop
pop
mov
xor
inc
sub
and
push
xor
or
xor
mov
mov
movsl
xor
lea
and
test
cmp
sbb
or
pusha
adc
pop
add
or
jl
mov
sbb
adc
int3
dec
outsl
sbb
xchg
sub
ds
pop
test
inc
push
push
mov
mov
mov
fs
xchg
xor
adc
mov
cmpsl
test
cli
jne
in
pop
push
or
mov
mov
in
mov
sbbl
movsl
ja
push
out
pop
push
dec
sub
xchg
aam
arpl
lock
cmp
pop
mov
insl
mov
int
mov
in
loop
aas
in
rol
fimuls
enter
repz
adc
xor
loopne
in
cmp
push
mov
pop
push
push
mov
xchg
sbbb
jo
pop
add
icebp
jae
inc
and
hlt
mov
pop
mov
add
hlt
push
mov
dec
loope
nop
or
mov
inc
mov
push
pop
xor
xchg
and
mov
sbb
xor
pop
in
insb
cs
push
add
fcmovu
pushf
dec
pop
lock
push
xor
add
adc
js
scas
inc
call
cmp
cmp
jbe
jno
addr16
cmp
xchg
lea
xor
lock
bndldx
push
jno
rcrb
loope
inc
pop
pushf
cltd
pop
or
adc
xchg
sub
arpl
or
cmp
jo
mov
xor
or
lahf
inc
lcall
cmp
add
or
aas
lcall
or
mov
sbbb
bound
popf
in
mov
insb
sbb
ja
cmp
sbb
jl
xor
mov
dec
sub
pop
jb
pop
jns
xchg
mov
push
loopne
pushl
sbb
ja
xor
cmp
insb
test
or
jmp
mov
pop
sbb
rclb
enter
lahf
andb
outsb
sub
pop
adc
inc
or
repz
pop
xorl
test
add
pop
sbb
imul
aas
aam
pop
xchg
fmul
add
sub
subb
in
mov
sub
das
add
insb
mov
add
pop
lock
je
mov
lock
dec
sbb
xchg
jl
andb
or
es
das
xor
sub
int
add
nop
mov
or
push
shl
xchg
outsb
sub
pop
or
xchg
push
pop
sbb
mov
popa
xor
pusha
nop
aam
popf
add
or
cmp
movsb
iret
nop
cmc
call
js
dec
and
jno
mov
inc
lcall
jl
call
add
shll
mov
pop
in
push
mov
push
jae
sbb
mov
cmp
add
ffree
mov
push
lahf
lret
out
mov
or
fadds
or
or
inc
xchg
sbb
ret
ja
sub
push
mov
fdivr
aam
add
pop
adc
fcomps
movsl
jbe
fs
dec
add
stc
fucomi
jl
mov
push
sub
and
push
add
push
ljmp
mov
inc
jb
or
sti
sbb
jl
mov
adc
adc
ficoms
jg
dec
dec
adc
adc
lock
lahf
mov
xor
push
inc
xchg
mov
out
mov
inc
add
sbb
into
cmp
adc
gs
push
aam
js
ja
cmpsb
mov
cmp
call
test
push
ret
int
rcrb
mov
rcrb
add
loope
scas
shlb
pop
js
lock
test
rorb
in
xchg
lahf
pop
daa
and
and
ret
add
xchg
std
js
in
pop
push
push
or
adc
or
fstpl
adc
cmpsl
orl
rolb
ds
inc
or
dec
gs
je
pusha
and
cwtl
add
jb
push
and
pop
push
cltd
addb
push
es
into
xor
dec
call
dec
jb
popa
push
ss
inc
fs
fldcw
and
shl
push
push
lds
fwait
mov
xor
loope
es
push
mov
lods
and
dec
stos
aam
add
adc
lcall
and
push
fldenv
sahf
push
test
xchg
mov
pushl
jo
mov
xor
fs
or
push
in
mov
or
insl
jp
fs
addl
shll
inc
push
shll
xor
movsb
pop
dec
xchg
dec
ret
jmp
stc
xor
cmp
repnz
movsl
aam
test
lcall
shlb
mov
xchg
test
push
push
lea
push
mov
inc
ret
sbb
pop
ja
mov
test
gs
push
sbb
stos
jb
cltd
add
popa
int3
sub
daa
test
mov
lock
repnz
aam
es
test
sub
dec
jb
dec
stos
aam
add
orb
enter
and
push
out
arpl
out
push
arpl
loope
add
push
cmpsb
aam
mov
and
jbe
call
sti
pop
enter
mov
mov
dec
faddl
test
add
fisttpl
ja
xchg
call
dec
loopne
cmp
jbe
jne
xchg
pop
jbe
pop
push
pop
mov
outsl
mov
pop
add
inc
mov
xor
outsl
inc
push
add
rorl
pop
mov
xchg
movb
xor
jp
das
and
movsb
adc
mov
push
cmpsl
add
xchg
jmp
add
addr16
mov
sub
das
or
enter
xor
inc
cmp
push
xchg
or
or
lahf
pop
xor
adc
lds
fbld
les
int3
popf
push
test
push
push
test
or
xchg
rorb
push
sbb
adc
dec
in
cmpsb
mov
or
mov
sbb
mov
sbb
js
cld
scas
loopne
dec
lods
jnp
adc
fs
pushf
test
mov
test
les
repz
pop
test
adc
jnp
dec
xlat
cmpsb
mov
or
ss
add
and
sarb
push
or
xchg
adc
push
or
push
cmpb
movsl
add
inc
or
test
cmp
jp
cltd
add
pop
enter
push
pop
test
lock
cltd
inc
add
and
inc
fwait
mov
cmp
push
fs
cmc
enter
lock
dec
mov
add
or
out
push
lock
push
add
dec
pop
inc
shll
insl
pushf
sbb
xlat
sbb
mov
mov
adc
enter
fistl
pop
pop
cmpl
stos
mov
nop
mov
add
rolb
hlt
dec
or
in
pop
fwait
dec
or
adc
movsb
shlb
int3
scas
incb
pop
xor
xchg
fwait
ljmp
push
push
inc
mov
push
sub
les
sarb
jno
xchg
stos
mov
adc
xchg
push
push
fsubrs
lea
cmp
mov
jo
rcrb
in
jo
mov
ljmp
push
aaa
fimuls
sbb
xchg
movsb
fsubr
adc
mov
lock
ss
adc
push
adc
pop
rolb
popa
addr16
push
push
xor
inc
pop
fldl
hlt
inc
or
push
push
sahf
push
or
lods
leave
xchg
mov
jnp
shlb
xor
shr
or
cmp
pop
add
add
cltd
add
inc
insb
adc
fiadds
or
pop
sub
mov
sub
mov
jle
das
jmp
sbb
popa
sti
cmp
sbb
jge
les
hlt
pop
sub
inc
push
mov
mov
jno
pop
xchg
cwtl
pushf
test
mov
test
pusha
cld
in
lods
push
lds
mov
pop
mov
mov
adc
fmul
shlb
pusha
js
mov
mov
enter
loope
cld
xor
mov
inc
nop
cmpsl
xlat
mov
jbe
jp
movsb
rcrb
mov
int
dec
cmp
test
inc
and
movsb
lods
jmp
imul
lcall
mov
and
ds
movsb
sahf
mov
mov
dec
xor
rolb
jle
aaa
adc
cmp
or
add
push
mov
or
mov
sbb
jl
sub
mov
xchg
pusha
push
movsl
mov
ljmp
scas
outsl
push
push
ss
push
pop
mov
jg
adc
mov
dec
add
movsb
adc
sbb
mov
pushf
flds
cmp
and
mov
mov
sti
pop
xchg
or
sbb
inc
std
fnstsw
mov
hlt
mov
adc
push
adc
outsl
adc
sbb
mov
xchg
jo
xchg
adc
and
sahf
mov
dec
in
cmp
cmpsb
out
jmp
cld
test
mov
cmp
pop
pop
sbb
mov
lock
mov
inc
xorl
lods
popa
sbb
stos
pusha
add
insl
int
mov
cmpl
push
ds
adcb
outsl
xlat
push
push
xor
repz
mov
pop
cmp
pop
mov
je
js
mov
mov
xchg
or
addr16
push
movsl
sub
loopne
or
inc
mov
pop
jle
or
scas
mov
loop
jb
andl
jl
icebp
push
sbb
ds
sbb
xlat
lods
cmp
add
or
cmp
cmc
mov
sub
clc
sarb
repnz
push
sbb
sub
inc
adc
push
insb
mov
lret
push
cmpsb
jp
inc
xchg
jne
ljmp
mov
imul
dec
out
mov
test
daa
call
mov
dec
pusha
adc
test
jg
sub
sbb
mov
gs
mov
inc
inc
ror
and
push
jl
outsb
cwtl
xchg
insb
vandnpd
dec
cmp
imul
add
mov
lock
sbb
pop
pushf
cmpsb
xchg
cmpb
xor
sub
dec
inc
in
repz
loopne
lea
xor
xchg
push
add
stos
fs
fsubr
and
sub
mov
push
cmpsb
jne
xchg
inc
mov
push
les
and
adc
inc
adc
and
pushf
sti
adc
ja
into
stos
push
push
popa
jp
sbb
jle
push
pop
xor
pop
hlt
add
sub
lock
cmp
aam
mov
push
shlb
push
xchg
cmp
cmpb
movsb
push
adc
mov
adc
push
pcmpeqw
cmpl
sub
mov
insl
or
mov
adc
jae
sbb
jbe
push
xor
sti
lea
sbb
movsb
sbb
cmpsl
and
cmpsb
or
and
aam
inc
lea
push
lahf
mov
in
dec
pop
ret
bound
jmp
pop
pop
sub
daa
jmp
push
lahf
call
dec
and
mov
imul
fcos
rcll
js
lret
push
ret
pop
sub
push
in
fwait
or
lea
and
inc
movhps
fdiv
cmpb
fsubrs
or
popa
push
mov
sti
cmp
sub
xor
and
xchg
js
pusha
loop
fdivl
inc
lods
adc
push
arpl
call
test
jg
cwtl
sub
add
or
cwtl
not
add
add
pop
push
fsubrl
inc
je
mov
adc
loopne
mov
mov
dec
add
in
fwait
mov
add
xor
mov
mov
or
push
push
sub
das
loopne
lock
popf
sbb
adc
mov
fdivs
repnz
dec
mov
push
mov
jns
fists
adc
mov
sbb
lds
mov
and
mov
popf
sub
loop
rcll
mov
xor
jge
ss
mov
inc
imul
subl
dec
cmp
outsb
adc
stc
xor
js
dec
mov
arpl
pop
sbb
cmpsb
or
push
xchg
cmp
jg
push
or
hlt
mov
add
inc
lods
lods
lock
push
and
sub
clc
cmp
pop
std
xorl
outsb
jp
je
jp
cmp
je
data16
mov
jmp
fmull
mov
ja
inc
ret
jg
push
add
outsb
adc
lret
jbe
or
insl
outsb
add
push
jge
push
shrb
sbb
xchg
push
out
lock
jp
outsb
in
add
and
pop
fstpl
sbb
and
dec
xchg
inc
cmp
mov
adc
jmp
or
jge
cmpsb
dec
xchg
fdivrl
cmp
fsubs
sbb
sbb
in
inc
mov
inc
inc
jmp
inc
jo
je
in
add
addr16
and
adc
lock
fcmove
adc
sahf
add
add
movsl
push
or
les
sub
mov
adc
sbb
repz
lret
jmp
pop
cmpsb
inc
sbb
cwtl
adc
call
mov
fwait
lret
roll
adc
adc
add
in
mov
sub
shr
adc
sub
sbb
or
incb
pop
mov
inc
rcrb
pushf
mov
fcoml
scas
add
dec
and
pop
xlat
out
and
incb
push
sbb
cmp
mov
xchg
les
mov
sub
cmp
push
jns
fmuls
jl
pop
or
cmpb
inc
movsb
xor
orl
mov
stos
add
lret
in
jns
cmp
cmpb
adc
push
mov
loope
clc
in
and
testb
push
fisubl
inc
sbb
repz
cmp
and
adc
mov
xor
cmp
xchg
push
jle
in
or
popa
sbb
or
mov
xchg
lret
or
jmp
shlb
dec
push
adc
xor
push
divl
and
xor
jo
xchg
sbb
push
into
scas
rclb
je
dec
add
std
mov
cmp
add
sbb
cltd
xchg
ds
in
adc
cmp
lea
mov
test
add
out
pop
jno
test
mov
negl
xor
lcall
and
pop
adc
sub
outsl
push
subb
sbb
adc
cmpsb
shl
push
cmc
flds
jno
dec
xorl
inc
iret
pusha
and
test
and
cwtl
scas
loope
add
add
jle
inc
xchg
insb
mov
ret
jg
mov
std
hlt
mov
cmp
push
roll
push
adc
add
jo
fwait
in
and
enter
xchg
add
add
xchg
stos
inc
scas
and
add
push
cmpsl
inc
aas
mov
test
and
inc
test
add
or
inc
insb
popa
jl
dec
lds
into
dec
cmc
and
test
stos
dec
outsb
and
rclb
imul
je
mov
insb
call
pop
xlat
ss
jno
inc
inc
adc
je
das
sbb
cmp
sbb
pop
cmp
fstpl
sub
push
or
sub
xor
std
and
inc
push
stos
push
add
cmp
jo
test
push
pop
test
inc
sbb
mov
dec
pop
add
inc
dec
cmp
mov
xchg
mov
out
push
xor
push
call
push
in
cmp
imul
loope
push
lea
dec
mov
add
or
xchg
xor
jle
add
int3
inc
cmc
mov
call
pop
inc
or
sbb
dec
notl
daa
mov
testl
mov
jl
sub
das
adc
outsb
movsl
add
ret
pop
cli
mov
mov
xor
loop
add
shr
scas
add
js
xchg
fcom
sbb
adc
testl
clc
fcomi
out
mov
ret
shr
cmp
jbe
add
jmp
add
jae
xor
pop
rolb
ret
and
dec
loop
inc
dec
addl
mov
mov
or
mov
lds
dec
adc
inc
sub
aam
lcall
dec
mov
jnp
punpckhbw
sub
jo
scas
sub
xor
mov
sub
mov
outsb
mov
mov
mull
mov
add
xchg
test
and
inc
daa
mov
scas
inc
and
inc
imul
mov
aaa
fwait
ret
aas
cmp
or
ja
rcrb
mov
jl
dec
fsubrs
shlb
enter
sub
add
or
xor
or
jmp
mov
fdiv
xor
popf
push
or
pop
arpl
xor
jb
push
nop
mov
xor
pop
inc
lret
out
mov
aad
loopne
push
xchg
add
outsb
sub
sarb
mov
fisubs
xor
adc
jns
or
shrb
andl
lds
xchg
scas
cmpb
inc
insl
pop
in
inc
sbb
ficompl
xor
adc
mov
and
mov
insb
ret
mov
mov
shrb
push
inc
adc
inc
call
inc
inc
scas
xchg
push
or
push
sbb
nop
xchg
cmp
les
repnz
in
add
cmp
pop
mov
popl
mov
lahf
call
repz
or
enter
xor
sub
inc
imul
rol
mov
lock
sub
push
push
add
iret
xchg
cmpb
xor
or
xchg
pop
or
jmp
insl
add
adc
dec
jne
push
inc
add
sbb
add
push
inc
mov
aam
mov
or
jecxz
movsb
scas
jns
dec
pop
cs
ss
test
sbb
in
push
icebp
dec
sub
xor
sbb
push
ucomiss
push
or
mov
mov
shlb
and
adc
adc
fwait
adc
shl
adc
mov
lods
mov
xor
ss
stos
mov
adc
and
test
enter
repz
pop
loop
jns
fcoms
mov
flds
push
jnp
in
push
mov
pop
adc
xchg
ds
and
pushf
mov
and
insb
pop
push
lock
lods
adc
les
pushl
push
xchg
iret
xchg
add
mov
mov
fistpll
fadds
or
or
mov
adc
fsubrs
aam
push
mov
xchg
ret
icebp
xor
jmp
aaa
pop
and
dec
xchg
scas
jb
roll
enter
xor
xchg
jne
mov
ja
jl
lds
movsl
and
jl
add
mov
fisttps
sub
and
sub
xor
sub
clc
hlt
xor
push
pop
push
mov
adc
stos
testl
pop
insb
mov
adc
es
popa
lret
or
fstl
push
xor
loop
or
pusha
cmp
je
push
addr16
sub
inc
push
dec
das
mov
or
adc
int3
inc
ret
pop
inc
or
sbb
movsl
fabs
or
push
mov
mov
in
or
add
xchg
dec
xor
aaa
and
jns
pop
xchg
jecxz
scas
or
mov
loopne
cmc
andl
lea
stos
mov
mov
push
sti
push
add
or
jg
ljmp
int
push
mov
cmp
jne,pn
inc
and
ljmp
sub
ret
lret
push
add
and
jmp
jge
and
rolb
and
orb
xchg
sub
mov
pushf
xor
cmp
mov
sarl
rcrl
testl
mov
dec
lock
inc
push
loopne
jo
mov
inc
and
mov
xchg
inc
xor
sub
add
xchg
leave
or
jo
cmp
add
cli
push
sub
repnz
jp
sbb
xor
rorl
loopne
add
mov
jo
loop
sbb
inc
movsl
pop
mov
xor
pusha
fs
xchg
test
arpl
push
lcall
sbb
stos
push
dec
inc
imul
ret
imul
jae
or
jecxz
cmp
loopne,pn
mov
mov
xchg
pop
cmp
imul
sbb
and
mov
in
mov
clc
mov
push
cmpb
jmp
mov
scas
nop
xchg
push
cmp
push
into
pushf
leave
les
sub
jbe
push
adc
adc
es
loop
stos
jne
xchg
pop
or
sub
lea
add
add
xor
pop
je
inc
outsl
out
loopne
add
mov
cmp
pop
cmpps
out
xchg
lahf
mov
les
lret
inc
repz
mov
movsb
xchg
testl
loopne
inc
fstpt
cmp
jl
or
cwtl
shll
rep
mov
dec
push
addb
adc
les
pop
or
aam
inc
mov
lret
inc
mov
enter
sti
push
jl
push
xchg
mov
sbb
arpl
jl
pop
jnp
adc
aaa
loopne
inc
dec
adc
pusha
rcll
cmpl
hlt
jle
push
pop
sub
push
insl
lahf
aaa
push
jne
in
loope
xor
push
dec
jbe
popa
xlat
cmp
push
mov
sti
sbb
jmp
ljmp
pop
jb
popa
pop
cmp
add
leave
lret
and
sbb
and
aaa
xor
xchg
dec
pop
jmp
push
fmull
dec
adc
sbb
sub
loope
les
mov
dec
dec
cmp
inc
js
dec
test
xor
in
insl
mov
mov
pop
mov
cltd
repnz
lret
push
cmp
hlt
xor
and
add
mov
shll
mov
sbb
arpl
inc
or
nop
inc
mov
add
and
and
pop
mov
push
stos
dec
lea
add
test
dec
popa
or
add
repnz
adc
incl
or
mov
fs
mov
or
adc
test
mov
enter
in
stc
mov
xor
sti
aam
push
dec
nop
incb
in
movsb
pushf
lods
mov
int3
mov
repnz
in
cld
rclb
sub
inc
xor
fmull
xorb
mov
je
loope
mov
mov
jl
mov
popa
stos
xchg
outsb
mov
cs
mov
pop
mov
add
lcall
mov
dec
aad
into
sbb
mov
xor
aaa
rcll
mov
roll
add
xor
mov
sbb
mov
dec
into
push
mov
xchg
jl
xchg
dec
enter
in
jl
popf
add
fs
js
adc
adc
movsb
and
xchg
psubq
add
lahf
mov
mov
push
call
push
jae
fwait
xor
sbb
stos
jo
test
inc
inc
push
jge
mov
add
lcall
cmp
je
sbb
and
inc
cld
lahf
cmp
jne
push
mov
aad
lock
outsb
dec
pushl
scas
loopne
fsubr
sub
push
jns
out
xor
outsl
into
inc
lods
mov
push
and
loopne
add
jmp
xor
push
or
movsl
sbb
nop
sub
add
or
fistl
jl
jno
sarl
aaa
shll
sbb
add
push
xchg
fwait
cs
mov
or
xor
adc
xchg
xor
std
push
mov
hlt
loopne
xor
or
sub
and
mov
mov
push
push
adc
mov
lret
addb
dec
inc
shlb
jne
and
es
fadds
in
sub
sbb
push
sbb
clc
loopne
and
jge
jbe
imul
js
mov
mov
test
decb
imul
or
gs
dec
inc
in
push
push
cmc
test
outsl
xlat
mov
rolb
fsubrl
daa
xor
push
test
jmp
or
rclb
in
fstpt
pop
icebp
mov
and
add
push
in
pop
rcr
mov
push
pop
sub
or
lods
je
mov
pop
and
sub
out
lds
push
jno
mov
and
push
pop
mov
jno
divw
mov
iret
xlat
call
vunpckhps
or
mov
xlat
inc
shll
xchg
xchg
sbb
gs
add
sub
push
scas
mov
stos
lock
mov
scas
cmp
in
fildll
adc
xchg
jmp
pop
xor
jno
ds
mov
ja
sbb
cli
je
cltd
pop
add
sbb
lret
data16
stos
pop
add
cmpsl
mov
in
add
leave
xor
sub
les
add
and
xor
mov
pop
loop
xchg
leave
jne
mov
adc
cmc
ljmp
rolb
ss
adc
mov
push
push
adc
or
cmpsb
mov
or
push
lcall
xchg
adc
call
dec
mov
xchg
push
push
pop
or
jo
sub
repz
jo
outsl
mov
pop
cmp
pop
std
sbb
mov
jne
mov
jmp
fldl
xchg
cli
insb
adc
aam
xlat
or
mov
jl
inc
packssdw
icebp
lock
pop
xor
mov
jecxz
sbb
fnstsw
dec
rcrb
movsl
push
push
movsl
jge
sarb
inc
hlt
fstl
dec
fcomp
fnstsw
call
and
inc
clc
pop
fsubr
pop
faddp
andl
enter
sbb
sub
test
fdivrl
cs
dec
aam
mov
mov
and
mov
xchg
lods
add
push
into
sbb
or
andb
xor
add
add
lods
or
and
hlt
jge
xor
out
fdivrs
add
scas
stos
dec
fstpl
inc
add
jmp
mov
leave
lea
push
or
adc
adc
pop
dec
xchg
add
into
push
xchg
and
pop
scas
pop
movsl
bndldx
mov
xchg
push
sub
cwtl
out
stos
ss
mov
stos
cmp
mov
int3
dec
jecxz
rorb
jae
push
add
add
fnsave
pop
in
sub
mov
push
inc
inc
inc
cmp
ud0
ret
jmp
mov
cmp
jge
add
or
xchg
mov
dec
leave
mov
and
jmp
roll
sub
in
jmp
or
inc
fldenv
add
adc
rorb
pushf
push
lods
push
pop
test
xor
sub
jg
jne
pop
push
sub
jne
push
push
adc
or
imul
xchg
mov
ret
or
imul
inc
add
xchg
dec
inc
cmpsb
sbb
xchg
jns
mov
push
adc
push
mov
ret
or
outsb
mov
insl
jp
adc
or
in
mov
mov
bound
adc
shl
jmp
jb
jmp
adc
js
push
cmp
pusha
hlt
stc
adc
ja
mov
and
pop
aam
insl
repz
ret
inc
sbb
ret
pop
les
decl
inc
adc
sub
mov
push
xchg
xchg
int
hlt
clc
mov
pop
lcall
xor
add
sbb
repnz
dec
cs
jae
cmpsl
sub
push
add
mov
xor
adc
imul
inc
cltd
or
push
in
pop
push
mov
shlb
jle
cmpsb
xchg
sub
test
and
or
dec
sub
xchg
sub
scas
dec
out
ret
adc
dec
pop
stos
xor
insl
mov
xor
fadds
rolb
push
shlb
mov
inc
sahf
or
clc
inc
loopne
jo
insb
add
xchg
je
xor
mov
adc
outsb
push
mov
clc
jo
mov
inc
add
rolb
lds
add
mov
cmp
pop
mov
xor
ret
das
pop
push
or
add
cmp
sub
sub
bound
bound
push
or
jmp
inc
pop
inc
add
mov
add
push
dec
sub
jmp
or
sub
push
pop
loop
mov
aas
pushf
sbb
adc
push
lea
push
xchg
sbb
clc
jae
or
shl
lret
add
cmp
and
lock
rcll
jl
clc
mov
pop
pop
mov
gs
add
test
lahf
inc
push
sub
jns
jae
push
mov
mov
inc
mov
lock
mov
add
and
out
enter
jb
in
or
pusha
sbb
and
sub
cmp
inc
jmp
push
cltd
push
in
dec
jo
sbb
mov
jb
out
push
clc
mov
es
mov
mov
inc
xchg
lods
sti
adcl
mov
adc
add
push
cmp
push
dec
rorb
out
out
sahf
fwait
xor
sbb
add
sub
mov
outsl
fisubs
mov
imul
test
xchg
push
sahf
rclb
add
incl
rcr
orb
mov
fidivl
mov
or
lcall
dec
add
dec
adc
lods
add
inc
js
mov
sbb
mov
imul
dec
jmp
cmp
mov
push
cmp
arpl
dec
xor
popa
js
sbb
sub
lods
fsubl
sub
in
cmp
sub
pop
or
mov
xchg
adc
rclb
or
mov
mov
pop
lods
push
push
icebp
test
mov
and
test
and
fwait
jp
xchg
sti
call
mov
lret
ja
insl
movb
and
mov
dec
add
jmp
cmpl
mov
lcall
int3
mov
xor
xor
adc
inc
xor
fisttpl
and
jae
testb
fiadds
xlat
jmp
push
and
shll
mov
mov
sbb
adc
ret
dec
test
popa
mov
out
je
loopne
enter
adc
dec
and
or
inc
sbb
push
inc
and
or
ljmp
cmp
call
mov
cmp
iret
dec
add
insb
sub
mov
shlb
mov
stc
inc
push
inc
in
inc
mov
or
cmp
inc
loope
add
or
dec
jmp
mov
xchg
xor
push
test
cmp
pop
push
xchg
push
in
lock
cmp
push
inc
push
xor
xor
xor
jne
loopne
push
and
into
lock
sub
clc
test
jmp
push
jbe
ret
lods
inc
rol
dec
adc
pop
and
pushf
inc
dec
lea
and
cmp
mov
leave
inc
mov
inc
sahf
xchg
js
outsl
add
lret
repz
stc
xor
jmp
and
xchg
adc
mov
rcrb
into
or
imul
les
inc
je
fistps
out
aam
into
dec
imul
enter
push
adc
xchg
push
fldt
test
test
ljmp
xchg
sbb
in
pop
pop
add
mov
sbb
test
js
jbe
push
push
push
push
mov
add
add
mov
andb
pop
icebp
loopne
test
jne
lcall
pushf
popa
add
xchg
fisubs
jb
enter
xor
test
pop
repnz
add
xchg
fbld
sar
test
roll
mov
outsb
or
cmp
fwait
inc
push
popf
jmp
xchg
ret
es
insb
jb
sub
pop
clc
jl
jno
push
xchg
sbb
addr16
cmpsb
rcrb
loopne
pusha
pop
lcall
sbbb
loopne
inc
add
sbb
push
jns
les
add
jb
or
or
testl
sti
sbb
ljmp
sub
lcall
rclb
mov
dec
aaa
rorb
push
ret
jl
inc
cmpsl
cmpsl
addb
push
and
test
sar
mov
imul
push
data16
pop
mov
in
jmp
push
sub
stc
cmc
out
movsl
pushf
mov
mov
push
adc
inc
dec
sub
es
ret
push
jg
int3
cmp
jg
push
jp
ret
cmp
adcb
outsb
ret
jmp
xor
push
push
push
add
push
hlt
jge
inc
add
add
mov
test
dec
imul
lret
add
pop
pop
imul
or
xchg
mov
mov
in
cwtl
popa
out
aam
sub
mov
or
subb
adc
dec
shrl
lahf
roll
push
popa
scas
paddsb
fld
pop
mov
inc
add
out
adc
push
pop
repz
jmp
inc
add
or
lods
roll
mov
scas
jecxz
add
out
call
dec
add
ret
fcom
aas
in
leave
push
int3
sub
or
sbb
xchg
mov
cmpsl
push
clc
imul
sarl
inc
and
bound
lret
stos
jmp
push
mov
pop
testb
es
sbb
aad
sub
sub
lahf
andb
pop
and
cli
pop
and
sbb
loopne
dec
je
sub
addl
sub
push
sbb
mov
mov
es
adc
adc
add
xor
xor
push
xchg
pop
add
xchg
push
sbb
pop
jne
aaa
scas
push
sub
cltd
jno
nop
and
xor
pop
ret
add
dec
sub
add
les
stos
aad
push
push
arpl
jo
outsb
enter
and
mov
fisubl
adc
fistpll
mov
xchg
push
insl
sub
pop
inc
jmp
adc
data16
fistpl
and
jl
ds
clc
rol
ret
xchg
mov
dec
mov
mov
push
fistpl
insb
dec
std
jg
and
inc
sbb
negb
jge
loop
data16
adc
jnp
jmp
lock
and
push
dec
xor
xor
jne
clc
lea
mov
and
jnp
inc
and
sub
push
xor
add
cmp
add
in
sub
cmp
inc
sbb
dec
push
pop
pop
mov
aam
sub
xor
adc
outsl
out
pop
sbb
iret
inc
loop
xchg
jne
cmp
or
andl
push
gs
sub
js
xor
add
pusha
enter
inc
xor
cmp
or
std
movsb
ret
sbb
ret
and
inc
insl
pusha
dec
pusha
mov
adc
stos
aad
dec
inc
mov
data16
jne
leave
and
outsl
add
aas
push
in
adc
adc
push
xor
addl
mov
or
out
loop
sub
mov
xchg
les
outsb
jp
push
push
int
xor
ja
cmp
in
cli
std
sub
push
push
mov
cmp
repnz
or
mov
jb
push
sbb
in
sbb
cs
or
sub
nop
add
or
dec
ljmp
add
sub
sahf
dec
pop
sbb
addb
filds
jmp
dec
jbe
pop
out
xor
jbe
cmpsb
xor
xlat
sub
test
loop
imul
dec
jae
ds
aaa
adc
mov
inc
xorl
jle
and
xor
sar
add
cmp
ja
pop
adc
mov
inc
adc
push
xchg
dec
aam
clc
push
push
iret
stc
inc
jp
fcompl
fadds
push
nop
push
push
inc
les
pop
mov
movsb
add
nop
sub
add
jbe
push
xor
mov
jmp
int
sbb
xor
sub
cmpsl
adc
inc
mov
inc
xor
cltd
sbb
dec
add
rolb
jecxz
ret
cltd
and
pusha
lea
mov
xchg
notb
popa
or
je
sub
lcall
push
ds
and
push
ret
pop
jl
xor
lret
into
xchg
add
fadds
pushf
hlt
pop
cmp
pop
fidivs
sbb
sub
dec
push
cmpb
es
loopne
push
punpckhdq
jl
shrl
xlat
and
and
enter
dec
stc
mov
sbb
sbb
imull
pop
je
push
mov
cmp
adc
cmpsb
inc
cmp
or
or
imul
mov
loop
mov
inc
and
jo
mov
jns
pop
sbb
repnz
push
jmp
push
sbb
je
and
dec
cmp
int
stos
xor
xorl
mov
mov
stos
les
dec
xor
pop
insb
push
jge
lret
xor
dec
push
jno
lea
rcrl
sub
jne
cs
test
xchg
sahf
add
add
add
adc
dec
bound
mov
mov
sbb
pop
mov
xor
or
stc
xlat
push
decb
adc
or
sbb
or
outsl
nop
xor
dec
js
add
fwait
pop
push
ss
add
push
adcb
xchg
cld
adc
cld
adc
je
push
daa
fiaddl
fs
stos
or
lock
test
mov
and
add
aad
fstps
push
mov
adc
movsl
dec
test
push
mov
rcll
rclb
or
adc
xchg
add
push
sbb
pusha
mov
and
or
je
in
rorl
aas
aad
xchg
dec
inc
aam
fwait
mov
stc
mov
adc
mov
pop
pop
jp
sti
adc
in
leave
xor
das
cmpl
popa
xchg
out
and
mov
push
or
ja
add
xor
insl
popa
and
stos
jae
sbb
in
mov
hlt
pusha
jge
dec
inc
adc
push
data16
adc
jb
enter
fstpl
jge
pop
adc
popa
xor
or
push
xor
push
cmp
mov
ret
mov
data16
aas
jne
aam
mov
jmp
add
aam
add
movsl
lcall
scas
or
cmp
mov
out
add
and
inc
push
arpl
dec
arpl
loopne
add
pop
arpl
xor
fwait
mov
push
loop
push
pop
fdiv
je
adc
jbe
cmp
out
add
sub
ss
adc
out
leave
jne
push
jmp
cmp
xchg
mov
xchg
mov
push
rol
mull
add
mov
pop
xchg
push
dec
inc
push
xor
or
mov
and
cld
add
das
xor
les
repnz
push
cmpsb
fnstcw
adc
xchg
stos
mov
adc
sbb
cmpsb
dec
test
mov
test
enter
mov
mov
push
les
mov
inc
cmp
or
add
test
or
pusha
addb
in
inc
xor
decl
aaa
fisubrl
in
xor
test
imul
mov
out
mov
fxch
adc
addb
xor
mov
mov
mov
jo
pop
push
subb
hlt
jecxz
or
pop
push
xor
jp
scas
dec
sub
or
adc
jmp
imul
cmp
enter
or
cmp
mov
or
lahf
jmp
pop
xchg
xchg
dec
pushf
cltd
xor
movsb
dec
icebp
outsl
dec
ret
or
sti
ss
add
outsb
adcl
push
dec
idiv
stos
movl
dec
and
and
rol
pop
add
dec
arpl
inc
stos
movsb
fstl
add
xchg
or
pop
inc
fwait
leave
aas
mov
shll
mov
mov
data16
loope
mov
xor
pop
mov
dec
and
shll
adc
loop
sbb
adc
loope
push
in
aaa
xlat
ret
xor
push
cwtl
xchg
xor
jo
fisttps
inc
push
imul
sub
pop
add
pushf
inc
add
sub
mov
xchg
jmp
jecxz
test
pop
push
das
test
lock
xchg
and
adc
sub
and
xchg
mov
in
or
lock
data16
mov
addr16
arpl
push
mov
jbe
fdivrs
add
sub
pop
add
outsb
inc
mov
xchg
ret
dec
xchg
fldl2t
adc
je
pop
leave
push
adc
jecxz
imul
fadds
add
push
or
jl
mov
push
pop
fwait
dec
and
into
enter
adc
push
xor
add
nop
or
jns
xor
test
adc
or
mov
dec
or
push
loop
idivb
cmpl
popf
shrb
ficoml
cs
imul
jl
adc
icebp
imul
add
je
sarb
xchg
xor
lahf
sub
pop
repz
jo
and
fs
sub
fsubrs
ds
icebp
adc
and
pushf
sti
dec
icebp
icebp
imul
mov
imul
adc
dec
hlt
jl
push
push
push
jg
push
inc
dec
add
xchg
cmp
loopne
cmp
shll
xor
hlt
stos
cli
push
mov
daa
test
pop
rcrl
and
sub
loopne
and
lahf
sub
stos
xchg
cltd
add
icebp
mov
out
rcl
rcrl
jecxz
shrb
or
xor
icebp
jno
mov
nop
mov
pop
or
cmp
fldl
mov
or
or
jecxz
pop
gs
loope
inc
inc
dec
add
dec
push
sub
inc
pop
inc
mov
and
je
cwtl
sub
sub
in
jno
mov
xchg
movsl
fs
into
idivb
nop
push
push
pop
movsb
xor
js
test
cwtl
lds
add
adc
nop
pop
loopne
aad
mov
inc
sbb
inc
or
popf
idiv
xchg
xchg
in
push
adc
test
shl
push
cli
fimuls
sub
push
and
cwtl
pop
jp
mov
jbe
jne
test
shlb
pop
mov
movsb
sbbl
popf
add
pop
xor
adc
enter
add
mov
lahf
fadds
repz
push
bound
xchg
cs
in
or
jecxz
lea
fadds
jmp
cmpsb
mov
fldl
dec
push
sub
add
and
scas
fs
add
add
add
push
push
or
xor
push
enter
push
repnz
push
adc
dec
fsubs
mov
test
or
jae
lret
dec
add
scas
mov
rclb
push
push
out
testb
push
push
push
xor
or
rcll
bound
cs
sub
sub
mov
adc
or
fisubrs
inc
dec
stos
dec
or
sahf
or
sbb
roll
push
push
dec
push
cli
ss
add
or
sub
cmp
push
mov
push
cmpsb
adc
arpl
push
stos
loopne
and
adc
sbb
push
sub
sbb
cld
add
jae
add
dec
std
adc
fs
jb
adc
lea
or
mov
add
je
adc
rcr
ret
in
push
mov
rcrl
inc
push
inc
or
aad
pop
adc
lock
pop
enter
adc
cmp
and
clc
lods
fsts
pop
outsb
jne
shld
xchg
in
mov
and
hlt
mov
push
sbb
add
shlb
in
dec
addb
sbb
lods
aad
jnp
and
pop
out
xor
adc
in
push
adc
in
nop
jno
xchg
dec
sbb
xlat
mulps
or
push
jae
mov
out
add
jmp
push
add
and
cmp
sub
inc
movsb
stos
cmp
dec
lock
jo
sub
add
and
cltd
jbe
mov
loope
jmp
in
push
lea
and
mov
mov
or
inc
dec
in
inc
add
pop
and
jmp
mov
rolb
push
push
adc
adc
loop
dec
adc
and
fdivrl
scas
fsubrs
add
sub
push
mov
test
mov
jge
ret
jmp
xor
pop
lret
fsubrl
push
bound
inc
insl
mov
xchg
mov
mov
test
data16
push
cmp
imul
std
out
stos
add
rclb
mov
ljmp
out
xchg
out
push
test
nop
cld
les
adc
stos
sub
xor
in
rcrl
mov
hlt
mov
jbe
xchg
mov
insl
mov
jno
and
adc
adc
push
cmp
rol
jge
or
cmp
or
rcrb
cld
mov
sbb
je
leave
adc
out
add
test
test
xchg
out
rcr
mov
mov
scas
jp
mov
stos
es
ja
cs
pop
stos
adc
das
push
push
xor
sub
and
mov
enter
pop
push
rorl
jno
push
add
ss
imul
stos
ljmp
test
mov
jle
mov
push
or
shlb
or
or
mov
gs
imull
adc
int
inc
jo
fstpt
push
popa
outsl
lea
and
push
mov
enter
test
test
inc
add
popa
add
stos
cld
cs
js
mov
pop
add
push
jle
sbb
cmpsb
mov
test
mov
in
or
loope
sbb
xorb
cltd
inc
sub
jbe
je
push
push
sahf
insl
or
out
push
and
xadd
daa
shlb
inc
xor
add
pop
jns
pop
imul
push
loopne
push
shrb
in
test
adc
inc
mov
sbb
imul
adc
lcall
adc
loop
loop
push
or
push
shl
push
mov
pop
pop
mov
mov
or
mov
adc
xchg
daa
stc
dec
repnz
test
cmp
or
cmp
add
iret
push
mov
lcall
dec
loopne
sub
aam
cmpsl
frstor
pop
cmp
pop
adc
or
sahf
lret
in
js
bound
iret
mov
sbb
jge
push
sbb
les
shr
push
cmp
pop
repnz
in
wbinvd
dec
gs
or
enter
or
cmpb
ror
and
pop
ror
int3
orl
fisubs
xor
mov
inc
and
add
in
cmp
mov
push
sbb
loope
adc
and
cld
movsb
jle
or
mov
shr
mov
and
mov
mov
dec
dec
pop
out
jle
jmp
cmpb
and
adc
adc
mov
push
test
xor
xchg
lea
mov
mov
mov
and
decl
cmp
jb
jbe
scas
dec
mov
je
ja
push
push
adc
add
addb
adc
add
cwtl
jbe
cmp
jo
jne
int3
dec
push
xchg
mov
dec
push
lea
cli
fcompl
adc
rcrl
inc
add
mov
sub
ja
sub
dec
mov
pop
adc
dec
push
icebp
addl
pushf
cmp
js
aas
add
push
mov
sub
clc
aad
push
imul
pop
xchg
pop
cmp
jmp
cmp
push
add
hlt
push
addl
add
xor
mov
push
rorb
dec
outsl
push
dec
ja
adc
lret
pop
mov
ljmp
inc
xchg
repnz
orb
leave
dec
add
add
leave
leave
leave
leave
push
pop
or
out
out
or
jnp
or
jbe
jmp
or
out
push
jmp
por
jmp
adc
pop
out
out
adc
push
adc
dec
adc
dec
adc
out
push
jmp
pop
jmp
sbb
xor
out
out
jmp
sbb
es
and
out
push
jmp
pop
jmp
and
or
add
and
and
test
adcl
jae
add
push
fwait
dec
jecxz
mul
das
and
push
add
jns
nop
cwtl
mov
sahf
out
ror
aad
out
sahf
out
in
out
repz
jnp
clc
std
add
out
sahf
out
sbb
and
sahf
das
xor
ds
dec
jg
sarl
enter
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
mov
xchg
and
aas
push
imul
add
sbb
rcr
mov
lods
cmp
in
push
inc
mov
xchg
mul
or
cmp
cmp
xchg
out
imul
or
shlb
push
stos
shrb
and
out
pop
mov
fisubl
mov
inc
pop
das
push
add
dec
mov
aaa
xor
mov
or
decl
sbb
adc
pop
sti
cmp
loope
pop
mov
xchg
dec
subb
mov
lea
loopne
cmpb
add
cs
lret
add
nop
add
hlt
aaa
scas
sbb
fldenv
ja
push
jbe
cmp
rolb
shll
std
or
jmp
xchg
sbb
add
or
iret
jno
xchg
ficomps
cmp
pop
loop
fldenv
and
int3
xchg
pop
mov
mov
test
setge
or
adc
and
jmp
repnz
jecxz
xchg
ja
inc
mov
mov
push
mov
scas
mov
push
cmp
andb
or
cmpb
or
jne
pop
js
pop
add
dec
push
in
xor
pop
lcall
stos
call
pop
xor
shr
xor
pushf
sarl
in
push
hlt
push
shr
xor
add
add
add
jne
mov
pop
iret
or
insl
push
adc
out
or
and
xor
add
add
jnp
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
aas
pop
mov
fisubl
aam
cli
and
and
roll
lods
mov
push
rolb
leave
xor
push
fs
fisubrl
movsl
sbb
repnz
sub
fdivr
outsb
movsb
push
or
push
or
xlat
and
ror
add
add
loopne
add
add
cs
cmp
aam
cmp
push
pop
pusha
mov
push
xor
enter
sub
ljmp
rol
rcll
add
cli
push
xor
pop
dec
lcall
xorb
sbb
in
shl
in
push
sub
data16
push
inc
push
add
add
pusha
mov
pop
cmp
or
fadd
xor
call
shlb
in
or
lahf
cmp
movsb
imul
lods
xor
test
pop
sub
cmp
sbb
add
cmpsb
xor
fcoms
inc
jge
and
call
in
jl
and
into
add
and
xor
cmp
imul
push
xchg
js
adc
pop
inc
mov
jo
ret
push
jo
ficoms
or
les
pushf
cltd
lcall
cmp
add
cs
adc
loop
mov
and
sbb
lods
dec
fadds
pop
fs
subl
insl
and
fisubrl
fdivrs
or
clc
jl
push
and
add
imul
imul
add
in
stc
icebp
xor
shll
inc
aam
xchg
fidivl
jbe
cli
nop
or
jmp
aam
dec
shll
cmp
adc
xor
sub
mov
jb
in
mov
shl
rolb
rcll
dec
cmp
ss
push
popl
sub
push
xor
inc
add
push
sbb
dec
inc
test
loopne
add
mov
inc
add
stos
imul
dec
gs
inc
push
xor
movsb
add
adc
dec
xorl
sahf
and
mov
add
adc
cmp
or
push
data16
nop
and
stos
inc
stos
ret
xchg
aaa
xchg
out
push
add
or
and
scas
inc
pop
mov
imul
inc
pusha
push
jb
add
pusha
pop
mov
rol
xchg
or
jo
mov
stos
insb
dec
jno
in
inc
adc
jb
mov
fs
dec
movsb
shlb
cmp
addr16
mov
int3
pop
push
jno
test
mov
jb
adc
dec
add
or
orb
adc
jbe
insl
das
call
and
jp
movsb
and
push
mov
lea
mov
dec
pop
out
or
aas
pop
add
sub
mov
fadds
inc
rol
nop
loopne
lret
jb
xchg
aaa
sub
pop
mov
sbb
pop
xor
xchg
cmc
sub
adc
dec
push
fwait
or
xor
or
pop
inc
jmp
rol
and
fdivs
or
test
loopne
mov
mov
sub
loopne
lea
jmp
lahf
orb
sub
dec
sbb
pop
mov
jg
lods
fimull
pop
jne
pop
jbe
add
sarl
add
xchg
sub
push
enter
fisttps
jbe
or
sbb
icebp
mov
mov
push
mov
sub
jae
push
pop
rolb
add
enter
fimuls
mov
sbb
lret
fs
pop
fdivp
shl
ret
ja
iret
mov
hlt
push
shr
xchg
xchg
push
sub
lea
call
mov
addl
or
dec
test
dec
cld
js
ret
movl
pop
push
pushf
mov
cmp
pushf
dec
fdivrs
jbe
fdivrl
xor
mov
sbb
mov
jo
inc
jge
outsl
pop
xchg
rorb
fwait
sbb
dec
loop
push
ds
mov
push
xchg
jle
ja
lea
imul
cmp
ja
or
mull
or
pop
add
cmp
and
mov
sbb
lock
enter
sbb
add
adc
or
and
pop
in
inc
addl
xchg
and
adc
les
or
test
test
shll
push
addb
pop
mov
push
and
add
pop
pop
sbb
mov
adc
pop
call
fdivs
loopne
inc
pop
stos
xchg
icebp
sub
int
pop
imul
mov
mov
call
dec
fwait
xchg
xchg
roll
jge
push
adc
adc
dec
in
insb
loop
add
mov
xor
rcrl
xchg
mov
sbb
add
loopne
xchg
pop
sbb
xchg
sbb
xchg
and
lret
out
fists
ljmp
mov
adc
iret
cmp
lods
cmp
sub
and
add
push
and
stc
add
ret
mov
xchg
add
mov
movl
dec
adc
push
sub
push
push
inc
andb
inc
push
movsb
loope
inc
wrmsr
adc
mov
adc
orl
xor
pop
adc
push
loope
xchg
lods
in
inc
cmp
jl
sbb
or
icebp
test
mov
mov
jp
cmp
add
dec
sar
cli
es
lea
cmp
cld
jg
and
fs
jne
or
js
xor
push
sbb
js
sbb
mov
aad
or
xor
cmpb
mov
outsl
or
icebp
jl
dec
dec
mov
movsl
fstpl
mov
cmpsb
jb
xchg
nop
pusha
and
pushf
dec
daa
lods
nop
lock
lret
and
movzbl
push
rorl
and
adc
js
and
out
xchg
add
shr
jmp
push
aam
pusha
lock
mov
pop
push
inc
in
add
or
test
ret
mov
and
mov
push
and
and
call
mov
lahf
cltd
ja
add
lcall
push
pusha
mov
and
mov
ret
dec
and
xchg
pop
and
stos
and
adc
or
xor
add
push
cmp
add
cmp
rcrb
js
jne
test
mov
dec
or
push
push
sbb
loop
jo
adc
sub
cmp
adc
xchg
mov
sti
push
imul
add
jle
dec
sbb
int3
mov
sbb
and
cmp
shlb
and
xchg
add
add
adc
mov
inc
bound
add
and
mov
push
inc
push
or
xor
pop
cltd
sub
sub
dec
mov
dec
es
inc
mov
push
movl
and
or
add
imul
lcall
add
adc
mov
cmp
jno
xlat
orl
ljmp
sbb
xor
pop
push
mov
pop
ja
push
add
pop
js
pop
push
jmp
mov
jmp
cmpl
sub
push
shl
xorl
pop
adc
fisttpl
shrb
push
ss
je
xchg
jl
dec
aam
mov
pop
neg
and
ret
or
std
mov
fstpt
sub
xchg
lea
out
push
adc
sub
ss
int
mov
sbb
xor
push
or
dec
inc
push
mov
mov
cmp
jmp
and
stc
jge
sub
or
adc
jle
inc
push
push
adc
adc
outsl
cmp
aam
mov
fildl
arpl
or
push
das
add
or
lock
inc
push
aam
adc
jb
adc
js
repz
sbb
adc
testl
mov
sub
jg
adc
dec
ror
dec
sbbl
push
jno
push
aaa
xchg
sub
fwait
ret
inc
or
sbb
sbb
cmp
fwait
loope
and
jnp
pop
mov
mov
or
cwtl
and
loope
jmp
sub
popf
mov
pop
aam
rclb
push
aam
xor
pop
sub
sub
cmpsl
mov
jg
mov
cmpb
icebp
imul
les
jmp
cmp
sbb
pop
dec
shl
mov
and
sub
sbb
inc
xor
call
xor
cmp
or
cmp
inc
inc
rorl
xchg
xor
daa
pop
sbb
or
test
jle
jp
jns
adc
jnp
xor
dec
fnstenv
dec
cmp
ja
inc
rcll
push
sub
fnsave
shll
leave
mov
sub
cltd
jae
sub
rorb
push
pop
push
cld
cmpl
xor
ret
adc
mov
inc
mov
lds
mov
xor
gs
or
roll
cmp
dec
mov
and
push
pop
push
xchg
test
pop
adc
cmpsb
jmp
or
adc
hlt
je
inc
mov
data16
xchg
scas
dec
ret
fsubrs
push
mov
lock
lock
sbb
sub
mov
fimull
push
hlt
ss
mov
push
es
stos
movsl
and
dec
jge
jmp
stos
jmp
in
xchg
sbb
je
mov
orl
mov
cmp
sbb
push
xchg
stos
ja
adc
lods
or
cld
xor
insl
jl
adcl
and
pop
jnp
sub
add
scas
stos
loopne
xchg
mov
adc
sub
mov
pop
movl
orl
call
mov
dec
inc
jecxz
add
or
jmp
mov
pop
or
pop
and
inc
dec
fiadds
inc
pusha
sbb
adc
ds
lds
call
xor
xor
xchg
mov
lock
rcll
clc
into
icebp
mov
push
xor
mov
jmp
push
mov
xor
inc
dec
imul
mov
adc
and
and
mov
arpl
imul
and
mov
sbb
xor
je
nop
inc
and
ss
xchg
cmp
movsl
mov
test
push
mov
push
push
or
orb
sub
xchg
push
xor
xor
mov
adc
xor
fsubrs
pop
jb
and
and
mov
xchg
test
sbb
mov
test
and
xchg
sbb
ret
cmp
enter
adc
adc
mov
inc
and
cmp
or
dec
xchg
and
sbb
cs
and
dec
rcll
and
andl
dec
loop
sbb
loopne
jle
cmpsl
pushf
in
cld
xchg
cmp
xor
mov
cmp
leave
int3
and
leave
sbb
ret
outsb
pop
stos
xor
adc
inc
jne
inc
push
sahf
loopne
and
outsb
cmp
out
sbb
or
mov
out
les
jecxz
lea
ljmp
ret
arpl
mov
lea
push
jbe
lcall
enter
scas
push
push
adc
repnz
adc
mov
cmpl
inc
push
lods
les
popf
out
mov
add
adc
adc
fisttpll
ret
insl
dec
dec
test
fldl
cmp
call
and
mov
jmp
sub
dec
dec
add
das
push
inc
cmp
pop
sbb
nop
push
push
xchg
dec
nop
push
inc
mov
pusha
leave
xor
faddl
mov
shrl
fimull
test
ds
xchg
mov
mov
cmpb
sbb
sub
rolb
test
pop
pop
fisubrs
popa
outsl
jmp
fstpl
fndisi(8087
or
fisubl
sbbl
out
adc
or
imul
xchg
mov
xor
stc
dec
lods
sub
mov
ret
cmp
arpl
repnz
adc
pop
lods
pop
mov
stos
xchg
repnz
add
mov
sbb
dec
stc
mov
add
push
xchg
xor
jp
mov
or
inc
xchg
or
cmpsb
pop
mov
push
cmp
add
shrb
mov
or
shll
mov
push
mov
cmpsb
les
fcmovbe
sub
mov
lea
inc
std
push
push
daa
stos
je
cmp
inc
add
fwait
adc
sub
push
cmp
jge
mov
aam
adc
cmp
inc
insb
lock
lea
les
cmpsl
ret
pop
mov
lds
lcall
add
xor
lret
lret
lock
clc
clc
cld
jne
incb
jae
movl
xor
push
add
nop
imul
dec
fbstp
dec
je
add
adc
cmp
fiaddl
lret
orb
mov
mov
or
push
cmc
lock
ljmp
xor
test
rolb
sub
dec
xor
lds
push
daa
pop
cmpsb
adc
jnp
mov
mov
dec
je
dec
lods
mov
push
add
loop
dec
xchg
pushf
popl
mov
lcall
sub
icebp
ljmp
xchg
testb
mov
test
je
cmp
jne
push
rcrl
sbb
adc
mov
imul
or
data16
add
xor
xor
inc
cmpb
test
sbb
or
gs
lret
idiv
inc
inc
imul
add
mov
hlt
clc
jb
pop
cld
mov
cmpb
add
lahf
pop
je
mov
add
add
or
cmp
jns
or
cmp
or
add
adc
push
push
lock
ljmp
out
repnz
jbe
inc
push
and
fiadds
daa
pop
out
mov
aaa
sarb
push
jge
test
xchg
ja
imul
outsb
gs
jae
repnz
arpl
xor
insl
jmp
mov
repnz
sub
adc
cmp
je
cmp
push
cmp
mov
clc
jne
inc
jne
loopne
in
sub
les
fwait
sub
jb
ljmp
rorl
cmp
jne
pop
dec
add
pop
add
loop
cmp
push
ret
sbb
sarb
add
subb
fcoms
xor
mov
jp
jl
or
jg
mov
jmp
and
pop
outsb
outsb
ds
jmp
inc
jl
inc
jg
aaa
mov
std
push
jp
add
shl
dec
mov
sub
mov
call
mov
fscale
push
xchg
ss
jg
xchg
jg,pn
imul
and
sbb
inc
sbb
xchg
rcrl
scas
add
sbb
or
push
xchg
out
mov
xor
aaa
sub
frstor
pop
and
xchg
mov
jl
pusha
mov
cli
popa
mov
jg
pop
fs
imul
inc
imul
inc
mov
xorb
mov
lods
aaa
lcall
cmp
dec
sub
mov
jmp
test
ljmp
xchg
inc
out
test
das
movsb
xor
xor
fsubs
add
inc
cmpb
mov
movsl
pop
call
filds
pop
pusha
idivb
call
out
jmp
xor
jno
les
dec
inc
fs
mov
dec
sbb
or
add
pop
fsubr
xorb
pop
push
shrb
cld
cmp
sub
mov
inc
and
sub
lds
je
je
and
cmpsb
pcmpeqb
clc
insl
or
mov
mov
add
cmp
into
hlt
add
jne
mov
mov
ds
cld
imul
inc
lods
lret
inc
mov
cs
imul
cmp
or
cmp
mov
jmp
test
andb
push
aad
xchg
ret
out
jg
loop
sbb
inc
push
dec
and
mov
dec
dec
mov
inc
cwtl
add
ljmp
mov
jmp
jns
dec
cmp
or
fsubl
mov
sub
jge
jne
xor
add
rcrl
loopne
movsb
push
sbb
pop
push
add
xor
adc
dec
js
inc
inc
cwtl
xor
pop
inc
inc
push
sbbb
add
add
fisttpll
scas
movsb
sti
sub
into
mov
mov
shl
lds
and
gs
jne
dec
imul
mov
andb
icebp
loope
out
jmp
push
rolb
mov
xorb
xchg
and
mov
sbb
lea
push
xchg
shl
inc
aaa
mov
mov
imul
ret
jge
add
ret
xor
or
mov
fcom
mov
xlat
out
les
dec
adc
jne
push
pushf
mov
xchg
mov
ret
add
dec
lock
cmp
incl
cmp
pop
xchg
aam
cmp
mov
inc
cmp
sub
mov
inc
cltd
or
sbb
adc
in
xor
pop
mov
pop
sub
cmp
inc
push
imul
inc
ds
and
out
cmp
outsb
mov
insl
xor
roll
pop
push
or
or
enter
mov
popf
and
xor
inc
mov
leave
enter
and
jle
movb
jbe
pop
les
fs
sbb
push
js
rolb
inc
mov
jns
cmpb
jne
leave
lods
mov
cmp
not
les
test
aaa
sbb
jne,pt
ds
sbb
ja
dec
ret
addb
and
cmp
xchg
pusha
aas
add
lods
xor
cs
xlat
mov
and
lods
dec
xor
dec
out
mov
aam
test
mov
into
push
jb
rcrb
scas
xorl
fs
orl
rolb
ljmp
inc
lock
in
xchg
jecxz
jecxz
pop
loope
ret
pop
xorl
pop
repnz
test
in
lret
pop
adc
call
shll
push
aaa
sbb
or
sbb
in
mov
push
pop
fnstsw
mov
dec
dec
and
or
ss
shrb
data16
push
push
nopl
inc
test
jl
mov
inc
pop
mov
push
pop
cld
pusha
ret
popf
inc
insb
je,pt
inc
add
inc
jl
push
scas
shll
sub
sarb
rcrb
lods
addl
fstpt
push
test
fldl
inc
fisttps
mov
imul
mov
lock
clc
push
push
addb
adc
pop
jo
mov
fsubs
add
loopne
addr16
push
jo
add
lods
loopne
or
and
fwait
pop
fists
xor
into
sahf
sub
xchg
pop
lods
push
push
lea
loopne
orb
cli
xchg
sub
adc
xchg
mov
or
sub
jo
adcl
sbb
or
and
sbb
add
mov
imul
cmp
fcomps
insl
test
ss
stos
leave
cltd
sub
test
sahf
xchg
dec
sbb
cs
call
cmp
xchg
lock
xor
negb
add
int3
out
jmp
imul
push
push
mov
es
cmp
je
ret
scas
test
push
adc
sbb
or
or
lret
movb
add
mov
hlt
cmp
movl
pop
loopne
sbb
adc
xor
push
mov
enter
mov
in
jne
add
and
sub
aas
inc
je
dec
adc
lock
insl
jne
mov
push
dec
cld
minps
je
or
cmp
and
push
scas
insl
or
adcl
jg
outsb
test
jp
mov
dec
sub
add
and
add
pusha
js
movsb
movsl
dec
dec
cltd
or
cmpb
pop
outsl
push
push
add
sbbl
mov
daa
push
mov
cmp
out
sbb
je
and
add
inc
rclb
clc
mov
fimuls
push
add
xchg
add
pusha
inc
lds
in
pop
dec
mov
aas
add
add
jo
xchg
iret
sbb
add
fcomps
add
sbb
jmp
mov
inc
fsts
dec
pop
xchg
or
pop
pusha
movsl
cmp
jne
add
add
add
push
bound
fldenv
movsl
xor
sbb
jecxz
mov
dec
sbb
data16
inc
rclb
iret
std
leave
sbb
fstpt
mov
into
je
mov
add
ja
movsl
clc
nop
hlt
jmp
mov
sub
jne
sbb
sbb
push
xchg
adc
pop
adc
pusha
xchg
in
sbb
fs
shl
test
stos
or
movsl
lcall
stos
push
pop
fdivrl
in
jmp
es
dec
inc
mov
jb
hlt
or
jnp
ret
loopne
pop
dec
addr16
stos
add
inc
xchg
mov
jle
in
ret
xor
aaa
imul
cmc
in
sbb
cmc
jno
inc
mov
into
or
add
fists
mov
int
movsb
push
or
or
sbbl
xorl
and
jno
outsl
in
dec
movsb
icebp
add
xor
movsb
lock
mov
bound
push
sub
push
cmp
pushf
fstpt
scas
cmp
push
dec
push
arpl
mov
mov
pop
daa
sub
push
subl
or
movsb
mov
inc
mov
xor
pop
imul
ds
lock
loop
xchg
dec
push
push
jmp
bound
mov
fiadds
or
push
mov
inc
and
leave
or
xchg
ss
enter
adcb
push
loop
leave
add
fs
pop
or
sarb
sahf
fs
aaa
out
movsb
xchg
movsb
push
out
jmp
shl
test
sahf
call
enter
adcb
cwtl
xchg
pop
lock
stos
cmpsl
sbb
sbb
stos
out
test
push
and
call
sbb
jl
add
push
xchg
or
push
loopne
ret
jmp
and
clc
inc
ret
mov
inc
inc
movsb
sub
sub
sbbb
xchg
lret
add
addl
subl
clc
pop
and
or
icebp
jno
sarb
inc
rolb
xor
ret
cmpl
push
in
faddl
mov
in
mov
loope
or
out
push
mov
or
nop
add
sub
push
push
inc
mov
add
fadds
adc
xchg
aam
dec
fbld
mov
inc
xchg
add
mov
and
or
mov
shlb
push
rcrl
jmp
add
hlt
mov
xor
mov
sarl
mov
int
call
mov
ss
pop
add
or
xor
sarl
cmp
pop
sbb
sub
fistl
mov
sub
and
inc
pop
jmp
add
inc
scas
inc
inc
call
je
in
fimuls
mov
inc
data16
jo
inc
inc
xchg
jnp
sbb
mov
adc
sarl
cmp
pop
push
cwtl
and
outsl
nop
sbb
add
jecxz
cmpsl
fldl
adc
jne
dec
lods
adc
cmp
sbb
add
leave
fcoms
insb
stc
ss
aad
test
push
leave
jno
loop
jb
xor
xchg
lea
roll
jmp
rorb
push
pop
adc
lret
popf
and
ret
mov
add
mul
and
sbb
adcb
xor
ljmp
and
adc
mov
sbb
push
mov
movl
pusha
jo
add
sub
cmp
or
repz
mov
sub
cmp
cmp
dec
enter
mov
ja
aaa
icebp
lods
push
nop
ret
xor
or
pop
fs
out
test
add
inc
or
or
dec
sub
subl
data16
rcll
mov
adc
dec
adc
mov
inc
mov
sbb
inc
clc
sbb
xor
cmp
rcll
movsb
das
and
aam
or
sbb
mov
xchg
dec
aad
loope
xor
sbb
bound
pop
mov
sbb
lcall
jne
pop
push
jae
inc
inc
add
mov
popf
add
or
jne
ljmp
push
or
push
push
mov
or
xlat
rcll
jecxz
int
fmuls
jmp
lea
fdivrp
dec
daa
orb
or
in
dec
pop
aam
pop
dec
sbb
sbb
cmpl
fisubl
mov
adc
insb
inc
insb
or
add
and
and
idiv
xchg
movsl
inc
mov
movsl
pushw
in
shll
mov
mov
cmp
adc
clc
sub
das
loopne
mov
js
je
icebp
xor
jl
rolb
outsl
sbb
stos
movsb
inc
jecxz
add
stc
clc
or
mov
add
jp
pop
jmp
sbb
add
inc
test
adc
rcrl
mov
testl
xchg
sbb
sub
pop
in
jae
cmp
pop
mov
bnd
cmp
sbb
xchg
shlb
fldenv
dec
shll
push
inc
adc
add
movl
cmc
add
leave
ret
mov
xchg
xchg
xor
ret
lods
inc
sbb
je
jp
ja
shlb
mov
test
or
pusha
jnp
out
ds
lock
xchg
adc
sbb
loop
or
jmp
or
sbb
adc
fs
or
lret
adc
cmp
jb
add
sarl
les
out
popf
or
inc
pop
mov
push
scas
stos
pop
aaa
je
sub
xlat
sub
sarl
jecxz
sbb
adc
sbb
mov
loopne
outsl
in
jae
jle
andl
or
pushf
push
sbb
add
imulb
shrl
sbbb
and
sub
popf
dec
xchg
push
jo
pop
add
or
cli
jmp
inc
ja
adc
cmp
loop
lods
and
jbe
push
inc
andb
test
pop
js
or
inc
sbb
in
mov
add
push
loopne
cmp
insl
pop
adc
loopne
sub
in
test
loopne
ret
pop
mov
add
mov
jae
sarb
adc
call
push
or
mov
lock
mov
xchg
mov
jmp
arpl
push
mov
scas
inc
pop
mov
loop
pop
adc
or
pop
adc
popf
rcll
mov
repz
add
xchg
push
xchg
mov
bound
daa
arpl
sub
add
xor
and
hlt
fs
push
das
sub
push
push
inc
add
jnp
ret
or
cmp
fiadds
lds
fcmovbe
cmp
or
pop
cmp
cs
lcall
in
mov
mov
sbb
add
test
or
mov
dec
ja
inc
jp
mov
push
add
gs
adc
push
push
push
ss
clc
incb
movsb
insl
imull
mov
or
shrb
cmc
cmp
lds
clc
dec
push
xor
lods
mov
push
mov
inc
sbbb
sbb
andb
add
sub
out
ret
outsb
adc
jb
and
inc
sub
aaa
jo
add
imul
out
adc
cwtl
add
les
fs
into
sub
xor
icebp
add
inc
adc
je,pt
sar
adc
xorb
in
add
in
cmp
imulb
in
push
push
mov
cmp
push
mov
add
push
jg
add
sbb
mov
or
lods
out
into
lret
inc
mov
inc
mov
movsb
js
call
xlat
cmpsl
inc
mov
movsl
pop
jae
add
lock
adc
and
sbb
push
and
add
mov
xor
cmp
in
sub
xor
or
and
inc
inc
nop
sub
xor
test
aas
enter
push
je
cmp
jbe
push
add
popa
adc
testb
outsl
mov
push
movl
push
enter
ret
mov
sub
enter
aam
jo
cltd
stos
dec
lock
pop
inc
fists
mov
push
adcb
into
inc
adc
or
cli
aam
in
jo
mov
dec
popl
jl
mov
outsb
dec
insb
xchg
lock
adc
or
push
cmp
fldt
xchg
dec
jo
mov
js
mov
ja
add
sub
icebp
daa
rorb
scas
lods
test
add
lret
mov
add
sub
push
wbinvd
push
sarb
push
sub
adc
jecxz
movl
adc
je
inc
pop
pop
les
xor
data16
rcrb
sub
xor
dec
adc
sub
aad
cmpsb
mov
fmull
pop
ja
call
and
cmp
jne
push
jle
cli
push
mov
xor
enter
jbe
pop
pop
push
lret
jne
mov
adc
fcomi
ss
cmp
std
push
in
dec
cmp
inc
push
xor
pop
div
hlt
add
lea
mov
or
sub
push
inc
or
xchg
xor
push
dec
pop
adc
cwtl
sbb
inc
cli
push
sbb
adc
and
add
push
dec
adc
mov
adc
add
pop
jmp
pop
jp
adc
xchg
cmp
popa
jo
ja
dec
sbb
std
rcr
andl
gs
loopne
pushf
outsl
in
mov
lods
xor
add
push
inc
dec
aam
add
rorb
loopne
je
pop
int
adc
jb
je
aas
add
mov
sub
jo
mov
je
adc
sub
sub
jne
bound
shll
adc
out
adc
inc
add
imul
clc
int3
add
dec
or
mov
mov
dec
or
pop
adc
inc
jns
push
cmpl
xchg
mov
pop
dec
cmp
jb
neg
mov
rorl
ffreep
add
cmpsb
loopne
add
or
adc
and
je
rep
mov
imull
mov
dec
ljmp
jb
loop
gs
call
push
ret
adcl
je
mov
or
xorb
fsub
or
sbb
push
outsl
dec
jne
sub
stc
dec
xor
lea
scas
push
sub
rorl
and
cmp
sbb
je
push
mov
cwtl
scas
pop
push
icebp
dec
fsubrl
and
sbbb
psubusw
mov
out
cmp
and
clc
jg
fs
std
pop
cmp
add
movd
movaps
out
push
enter
shlb
jle
xor
decb
aaa
das
cli
rcl
lret
je
cmp
sub
lret
or
jg
cli
fwait
ret
inc
ljmp
and
in
add
sub
and
add
adc
je,pn
jne
adc
sbb
outsb
fisubrs
repnz
roll
lock
mov
add
pop
shlb
std
addsd
int
add
dec
sahf
repnz
sbb
idivl
pop
test
iretw
into
mov
jne
orb
and
add
rolb
mov
mov
add
xorl
test
mov
lods
mov
or
lcall
mov
andl
adc
cmpsb
leave
and
lret
rolb
hlt
fldenv
lret
dec
cmc
cwtl
sarl
cmp
ficoml
pop
inc
dec
pusha
push
pop
andb
add
sti
lcall
adc
add
pop
adc
ficoms
dec
pop
shlb
and
inc
sub
lea
cmp
scas
mov
aas
in
je
cmp
jne
inc
cmpb
out
orb
pop
adc
and
pop
mov
inc
inc
and
adc
or
or
mov
add
mov
pop
jmp
pop
imul
and
clc
ljmp
sbb
dec
add
cmp
cltd
lcall
xor
xor
pop
notrack
xor
fmull
mov
syscall
jb
leave
push
adc
adc
jo
lea
jno
and
clc
adc
dec
popf
push
lea
cmpb
pop
mov
jns,pn
test
fbld
xlat
cld
sub
xor
add
addr16
es
jno
mov
in
push
sbb
movb
mov
ret
sbb
pushf
pop
addr16
loope
and
sbb
test
lods
and
or
cmpsb
dec
dec
pop
jp
pop
inc
sub
add
shr
add
mov
inc
dec
mov
and
xchg
adc
mov
pop
cmp
jmp
inc
add
mov
psubusw
outsb
mov
mov
jl
js
fidivrs
orl
fwait
adc
fsubs
popf
or
adc
push
jecxz
cli
jmp
cld
rolb
pop
pop
pop
and
dec
lock
adc
cmp
inc
stos
jo
cmp
xchg
mov
arpl
cmp
pop
sbbb
int3
pop
cs
jnp
sbb
mov
xchg
add
cmp
cli
adc
sub
or
cmp
inc
jb
or
mov
or
sub
or
rorb
pop
add
out
pushw
add
rol
xor
inc
data16
push
aas
inc
je
pop
mov
ret
add
je
jae
pop
or
sub
jecxz
lock
fs
cmp
jns
jo
cmp
adc
xchg
pop
ret
add
jmp
xor
and
pop
stos
loop
icebp
mov
and
rolb
shrl
pop
or
shlb
jbe
jmp
gs
iret
cwtl
xor
movups
inc
inc
mov
add
rorl
add
and
pop
cld
or
add
mov
jne
out
cld
mov
hlt
testb
je
inc
mov
cmp
clc
inc
xor
es
loope
or
cmp
adc
loop
or
js
ss
xor
push
push
bound
lds
mov
push
loope
xor
rorl
push
outsl
jne
nop
mov
push
pop
inc
cmpsl
daa
mov
dec
push
or
stos
inc
jle
or
xchg
stos
jge
adc
push
roll
cmp
test
xor
add
daa
cmp
stc
xor
fwait
add
pcmpgtd
pop
mov
dec
ficoml
pop
adc
lcall
stc
or
rep
jmp
addb
cmp
pop
or
jb
xchg
add
test
out
outsb
or
add
push
test
adc
adc
fs
cld
fnstenv
mov
or
lods
adc
inc
mov
mov
movsb
xor
pop
dec
add
sub
nop
inc
xor
xchg
mov
mov
aam
int3
push
jmp
jns
mov
inc
mov
mov
cmp
repz
call
cmp
repz
hlt
clc
clc
or
scas
shll
add
lock
sbb
jmp
ret
jecxz
sub
mov
fildl
pop
sti
and
xor
push
inc
and
dec
scas
mov
into
jl
cld
pop
and
sub
or
mov
fsts
out
xchg
daa
stc
sub
jnp
gs
addr16
nop
mov
mov
int3
rcr
add
out
add
mov
mov
inc
push
fisubl
add
push
fmull
out
mov
push
push
or
iret
repz
pusha
push
clc
subl
sbb
sbb
repz
adc
adc
cmp
repz
or
out
sbb
inc
pushf
or
aaa
push
add
andl
adc
lods
inc
icebp
test
or
mov
pop
shlb
sbb
mov
aam
xor
cmp
add
fildl
shlb
dec
call
push
sub
push
jae
mov
or
jmp
imul
or
leave
les
pusha
mull
mov
adc
mov
jae
sub
fs
push
add
pop
sbb
rorb
lock
sub
sbb
sbb
ror
imul
xchg
inc
sbb
loop
mov
or
mov
std
es
adc
daa
fwait
loope
movl
and
adc
cmp
adc
sarb
jmp
cmp
mov
xchg
adc
fiaddl
xor
mov
sarb
imul
inc
sbb
rorb
or
adc
cmp
or
hlt
dec
loope
or
xchg
push
inc
and
jp
mov
stos
xchg
and
or
fidivrl
dec
mov
sbb
sbb
dec
adc
nopl
add
fdivrl
jle
adc
push
adc
insb
pop
fisttpl
sub
add
aaa
pop
cmp
pushf
mov
cmp
sbb
push
add
lea
cmp
jl
jmp
jnp
andb
cmp
jne
push
adc
loopne
ds
or
add
mov
test
add
xor
aad
pop
fmul
cmp
jle
jne
xor
add
and
push
outsl
or
add
push
mov
xchg
mov
sbb
les
jmp
insl
clc
adc
pop
push
mov
loopne
cli
mov
sti
pop
inc
mov
cmpsb
mov
mov
inc
pop
ljmp
fdivs
mov
sarl
call
adc
jne
insl
push
jb
jle
pop
scas
pop
and
push
loope
xor
clc
ret
ja
pop
add
jno
ss
inc
mov
dec
or
repnz
and
bound
xchg
push
or
push
xchg
aaa
pop
mov
stos
jmp
sub
add
enter
push
xchg
test
fnsave
jne
pop
push
or
jmp
jb
fimull
loopne
rcll
fsubl
daa
push
into
and
pop
mov
pop
and
add
loopne
popa
fucom
sub
pop
fsubrs
and
shl
pop
andb
jmp
insb
mov
or
pusha
sub
repz
jg
pop
mov
lock
js
push
ljmp
in
adc
adc
push
push
sub
inc
xor
adc
push
or
fsubrl
or
inc
js
std
xor
je
or
sub
push
fs
pop
gs
adc
cs
mov
xchg
mov
add
shl
mov
sbb
rcr
inc
xor
inc
xchg
mov
loopne
ja
pop
jbe
lea
adc
sbb
dec
and
data16
cs
lock
push
inc
pop
dec
ss
jb
push
aad
aam
clc
jbe
add
and
insb
out
jb
sbb
imul
mov
popa
add
add
into
or
loopne
pop
mov
test
jne
test
cmp
xlat
stos
rolb
das
mov
sub
add
je
cvtps2pd
pushf
pop
mov
movsl
xor
es
pop
es
addr16
pop
dec
mov
push
or
mov
decb
sub
add
cld
data16
shl
pop
popa
and
jmp
js
hlt
inc
sub
adc
loopne
adc
fwait
push
or
sbb
dec
push
or
add
or
jb
or
pop
lcall
test
shlb
ret
data16
mov
and
inc
pop
pop
or
mov
add
out
shl
xorb
repz
lahf
mov
push
adc
cltd
rolb
adc
cltd
rorb
dec
frstor
or
repz
rorb
push
out
adc
or
repnz
add
mov
and
jle
daa
dec
jne
jmp
inc
pusha
stos
and
cs
pop
mov
dec
es
jne
mov
xorl
ret
setle
ret
xchg
pop
xor
enter
push
aad
lds
pop
bound
mov
insb
arpl
shr
jo
dec
lea
outsb
into
loopne
add
out
mov
push
cmp
jne
mov
push
cmp
repz
std
jne
es
jne
fstl
dec
call
aam
nop
add
inc
orb
ret
inc
incl
repz
mov
adc
jmp
std
xchg
std
mov
cld
cld
jmp
fildl
addr16
adc
in
adc
adc
inc
inc
inc
mov
out
pop
lods
push
test
xor
or
repnz
test
mov
mov
test
mov
out
push
xorb
shr
sub
dec
and
stos
repz
jns
pusha
sbbl
push
jp
popa
mov
arpl
lea
inc
cmp
or
test
add
inc
inc
add
adc
adc
mov
mov
add
or
adc
in
ds
pop
loopne
and
pop
pop
lds
es
or
pop
fs
data16
aaa
mov
movsl
in
movb
jmp
add
push
cli
push
mov
addr16
mov
mov
je
mov
mov
xchg
pop
jg
add
mov
dec
and
mov
or
sarb
dec
call
push
push
inc
test
and
lret
loopne
push
ja
outsb
loopne
out
jae
out
gs
or
dec
add
lea
mov
add
or
ja
daa
leave
cmp
push
xchg
das
pop
jo
and
xorb
pusha
pop
pop
pop
js
or
insb
sbb
jo
sbb
jno
bound
sarb
mov
jb
addb
imul
add
inc
mov
push
rcrb
call
push
jge
dec
mov
ljmp
in
les
ds
and
fmul
es
mov
jb
ljmp
or
adc
or
dec
xchg
pop
lea
int3
ret
aam
je
add
sbb
mov
sub
add
not
and
sub
inc
inc
mov
sti
and
mov
scas
xchg
xor
sbb
test
cld
sub
adc
xchg
adc
push
movsl
mov
push
xchg
js
sbbl
ja
bound
jne
pop
mov
ljmp
incl
loope
fcmovne
sar
stc
and
mov
inc
je
outsl
inc
cld
fistpll
lea
neg
mov
lcall
sbb
ret
add
xor
shl
scas
and
sbb
scas
mov
je
mov
add
mov
inc
cmp
jb
add
push
add
divl
in
cmpsb
hlt
pop
ret
gs
push
jb
or
or
ret
cld
into
xlat
adc
add
adc
jne
or
jne
outsb
outsl
pushf
shl
push
adc
pop
test
and
xor
dec
stc
addl
divb
in
xor
jo
and
out
jne
and
lret
mov
les
test
cld
or
ss
cmp
je
sahf
addr16
xor
and
fsubrl
sti
jns
aam
xchg
pop
addr16
and
push
mov
push
cmpl
xor
adc
adc
outsb
xor
and
lock
in
adc
mov
insb
dec
call
add
jg
xlat
loopne
add
mov
add
jle
pop
pop
sbb
es
test
pop
add
loopne
arpl
cmpsb
bound
mov
inc
jmp
cmp
inc
mov
add
sub
xchg
mov
adc
cmp
aam
xor
lret
push
ss
or
mov
adc
adc
pop
imul
cmpsl
mov
pop
add
push
cld
sbb
cmp
test
mov
and
je
vmovaps
sbb
roll
pusha
je
lea
sbb
dec
mov
and
xchg
shrb
sub
or
sub
jbe
push
add
cmp
outsl
fcomps
dec
push
rcrb
scas
and
sbb
mov
mov
push
adc
shl
cld
xor
sbb
stos
jno
inc
sbb
adc
sbb
sbb
xor
dec
in
or
adcb
mov
jmp
push
sbb
lcall
push
sub
jno
or
sbb
jmp
test
pop
xor
jne
mov
sti
rcr
or
lock
mov
inc
mov
dec
jne
mov
add
shufps
add
pop
insl
push
add
adc
insl
push
or
mov
enter
push
dec
dec
add
push
inc
adc
addl
mov
or
cmp
es
or
adc
sub
sub
mov
mov
popf
jbe
push
adc
nop
mov
insb
sbb
sub
pop
sbb
push
ljmp
jne
pusha
push
into
jl
or
test
imul
mov
movb
inc
jo
inc
sbb
lea
add
adc
or
adc
clc
test
enter
or
clc
scas
mov
bound
clc
mov
es
sbb
add
icebp
add
pushf
rorl
xor
ficoms
pop
cs
inc
pusha
mov
or
es
sub
dec
push
xor
xor
or
mov
inc
cmovns
in
rsqrtps
xor
inc
int3
push
es
sub
cld
or
push
mov
or
mov
or
cmpxchg
mov
sub
mov
cmpl
or
movsl
adc
pop
xor
or
das
adc
outsb
push
test
and
and
inc
sub
add
jmp
es
or
push
add
sub
mov
mov
inc
shlb
add
sub
loop
int3
fcomps
ret
push
or
sti
or
mov
int3
rcrb
cmp
push
or
adc
sbb
push
or
push
jp
push
jmp
xor
adc
loop
or
mov
jle
mov
rcrb
mov
jne
ja
btr
pop
cmpl
push
fwait
scas
dec
gs
mov
jge
or
or
gs
rcrb
jbe
inc
shrb
in
inc
dec
jae
adc
lods
sarb
in
loop
dec
push
push
aaa
mov
mov
push
data16
pop
addl
jnp
add
decl
cmp
pop
fisubrs
sub
jbe
mov
pop
push
hlt
cltd
pop
idiv
dec
test
xor
add
xchg
cmpb
sub
push
cmc
stos
scas
popa
push
mov
pusha
adc
rcrb
add
imul
dec
fisubl
jp
loopne
dec
in
dec
pop
popa
pop
mov
pop
test
sub
pop
aam
mov
test
movsb
add
dec
adc
in
dec
mov
pop
add
pop
pusha
sub
add
sbb
out
jns
jle
adc
or
repnz
fcomp
repz
add
or
add
push
inc
pop
loope
and
xchg
loopne
mov
mov
rolb
pop
and
js
stos
push
fcoms
jnp
jnp
test
mov
push
in
mov
inc
aam
jbe
and
lods
jp
rolb
or
jg
pusha
cmp
dec
mov
jecxz
inc
or
dec
mov
faddl
div
add
push
clc
adc
fs
enter
daa
mov
popf
inc
je
cli
dec
add
sbb
popa
in
dec
cmp
cli
call
movswl
push
aam
jmp
dec
je
add
or
cmp
inc
pop
je
push
or
in
fisubrs
sbb
add
jmp
sub
push
test
push
sti
xor
sti
jbe
mov
cmp
push
push
sub
push
lea
push
test
sahf
sub
dec
push
cmpsl
mov
jo
arpl
add
pop
inc
xchg
lcall
push
push
addr16
jne
mov
cmpsl
or
packuswb
add
dec
mov
xchg
inc
jne
jae
mov
in
push
repnz
xchg
dec
add
cmp
and
dec
xchg
cmovp
jns
jns
mov
or
push
add
sub
push
rolb
add
js
rorl
js
jbe
scas
cmp
mov
add
ja
out
pop
std
lret
adc
or
dec
jb
je
push
jmp
aas
lcall
mov
imul
clc
inc
dec
adc
or
mov
je
push
fsubrs
add
add
cmp
dec
repz
add
adc
idivl
mov
jmp
cmp
jae
stos
arpl
or
mov
push
mov
push
mov
sbb
subb
dec
dec
push
add
int3
inc
sub
mov
loop
and
decl
add
sub
dec
sbb
rolb
cmpsb
dec
cmp
pop
call
xor
lcall
adc
add
sub
je
or
or
dec
and
roll
and
or
mov
dec
xor
or
cwtl
add
imul
adcl
rorb
cmp
push
and
movsl
jb
jo
addr16
xor
push
pop
lods
pop
mov
decl
das
pop
jmp
lock
xor
mov
movsb
mov
push
pop
sbb
push
pop
jg
dec
shll
dec
movsb
inc
push
pop
sub
rolb
ret
push
adc
cmp
push
dec
xchg
mov
scas
cmp
adc
mov
add
into
cmp
lret
jnp
jo
push
push
add
sbb
push
inc
movsl
loopne
dec
lods
movsl
stos
sbb
mov
cli
insl
or
cmp
mov
ret
test
dec
insl
sarl
inc
xor
and
out
jnp
jns
add
inc
cmp
jne
fldcw
cmp
cmp
stc
mov
rorl
mov
int
imul
add
sbb
jge
insl
inc
shlb
pop
adc
push
lods
mov
cmp
shlb
mov
add
cmp
xchg
mov
inc
movb
call
and
testb
pop
inc
mov
sbb
mov
push
je
add
sub
shrb
fldenv
xor
jbe
add
and
fsubrs
xor
pop
sets
xchg
andl
sbb
mov
push
mov
jg
ds
enter
add
aam
cltd
cmp
popa
imul
mov
leave
cmpsb
mov
xorb
inc
ds
stos
std
test
xchg
sbb
jl
lock
xlat
cltd
adc
mov
sbb
orb
test
push
test
adc
cmpsb
aaa
jb
repz
add
cmpsb
mov
cwtl
clc
enter
pop
cwtl
loopne
mov
push
xchg
and
jmp
inc
and
jbe
hlt
mov
mov
je
sahf
xor
jl
jge
jnp
es
cli
add
icebp
adc
mov
adc
dec
pop
lret
movsb
sbb
and
xchg
sahf
rclb
mov
fmul
jo
mov
popa
lret
dec
rolb
sbb
es
inc
mov
jge
call
inc
mov
add
dec
pop
jp
or
insb
rol
es
ja
imul
cmc
mov
adcb
gs
push
cmp
pop
dec
out
or
insb
sub
dec
cld
jmp
add
push
mov
xchg
subb
push
mov
cmp
add
scas
test
pushf
ja
or
in
outsb
jbe
mov
rorl
inc
dec
call
xor
lock
dec
movsl
in
cmp
sbb
jmp
pop
inc
and
sub
sub
loopne
int
cmp
xlat
repnz
or
or
adc
fsubrl
add
push
clc
xchg
sar
imul
adc
xor
adc
je
into
lea
adc
mov
repz
test
loop
jp
inc
pop
enter
add
xchg
push
repnz
xchg
out
not
xchg
sbb
dec
lret
mov
xchg
repnz
jae
aad
mov
jne
mov
daa
out
push
leave
jge
pop
mov
out
push
push
and
add
imull
xchg
rolb
mov
stos
mov
lds
dec
incl
addr16
push
dec
inc
cmp
add
loop
sub
jmp
xor
jmp
push
pop
les
fisttpll
adc
je
pop
nop
and
inc
push
insb
nop
decl
mov
insl
adc
popa
push
pushl
rolb
push
rcr
loopne
inc
jl
call
aaa
inc
or
sbb
pop
test
mov
cmp
bound
push
xor
pushf
and
push
pop
cmp
out
daa
sbb
std
pop
push
or
je
mov
icebp
lret
in
and
or
jne
pop
repnz
int
mov
not
sar
add
fcmovbe
outsl
xchg
push
add
jle
mov
mov
and
jne
push
sbb
xchg
stc
mov
push
loopne
lea
or
fisttpll
mov
hlt
cs
push
ret
adc
mov
daa
mov
push
or
test
cmp
lods
addr16
push
jg
sbb
cltd
or
jmp
negb
push
adc
je
movsl
push
fldl
push
fstl
or
jo
cmpl
mov
xchg
int3
or
into
or
inc
sub
lock
rol
xchg
mov
int3
xchg
lock
hlt
aam
cmp
or
jns
icebp
stos
sti
subl
pop
jmp
lods
pop
add
push
shr
and
inc
cmp
or
cld
inc
push
push
add
adc
xchg
mov
cmp
push
pop
mov
mov
loopne
rcrb
sbb
sbb
das
push
lock
mov
add
add
inc
cmp
inc
inc
cmp
outsl
idivb
shlb
jb
popa
ret
outsl
add
mov
movb
jmp
out
cmpsb
popf
push
insl
xor
sub
std
add
aaa
add
add
pusha
inc
add
mov
mov
or
fwait
subl
shll
lock
adc
or
cmp
adc
mov
mov
add
or
mov
xchg
xchg
fstpl
xor
fistps
mov
mov
test
popl
int
lods
movsb
mov
or
mov
lods
movl
cmp
es
xchg
push
and
dec
sarb
xchg
mov
adc
stc
ds
out
mov
push
call
cmp
sub
push
push
int3
adc
push
xor
fdivl
ror
in
push
mov
dec
adc
jmp
sub
leave
sbb
loopne
inc
mov
andl
testb
loopne
add
push
dec
pusha
dec
popa
xor
pop
arpl
lret
loopnew
fcoml
sbb
lret
mov
or
pop
pop
popf
enter
shrb
les
add
push
out
imul
dec
popf
mov
cld
xor
inc
adc
jo
adc
and
in
xchg
pushw
clc
jno
insl
push
pushf
push
stos
or
insb
repnz
adc
cli
ret
mov
add
xorb
shl
push
mov
ret
pushl
jmp
ja
cmp
rcr
int3
int3
add
and
xor
sbb
dec
or
fsubrl
test
add
shr
pop
clc
fimuls
and
inc
dec
lods
sub
adc
push
lret
jge
movsl
pop
lea
push
mov
adc
jbe
push
inc
dec
cli
dec
push
fisubrs
hlt
jae
xor
sbb
inc
push
lock
or
pop
push
adc
or
sub
hlt
data16
sahf
mov
dec
out
mov
xchg
sahf
in
sbb
cmp
jne
jb
call
add
adc
sahf
addps
stc
rcrl
jo
mov
mov
ficompl
add
adcl
mov
jge
cmp
and
jg
or
push
nop
into
sbb
ret
cmp
test
outsl
dec
jmp
push
test
mov
xchg
ret
push
in
and
aaa
nop
in
pop
mov
shlb
xchg
lret
hlt
fdivrs
sub
sub
mov
popf
xchg
push
push
pop
sbb
fisubl
je
in
inc
call
call
stos
cs
lods
call
gs
or
pop
add
cmpl
imul
jl
lea
adc
ja
cmp
mov
dec
rcrl
push
cmp
pop
sar
pop
mov
fsubrl
sbb
xchg
push
or
inc
loopne
movsb
inc
mov
paddd
fcomp
add
xchg
loope
inc
jae
or
je
or
je
or
test
ds
enter
or
add
pop
cs
add
out
loope
rcll
int3
test
mov
adc
adc
or
or
mov
add
sub
push
imul
or
dec
ljmp
movsl
cltd
nop
imul
cmp
sbb
jo
stc
lock
or
ret
mov
lcall
inc
popa
test
or
xchg
loope
insb
xchg
pusha
sub
adc
sbb
pop
pop
mov
mov
js
add
or
add
addb
push
xor
imul
imul
and
dec
jae
adc
movsl
or
jns
rcrb
add
mov
call
out
pop
pop
pushf
dec
mov
lcall
push
mov
jb
sub
adc
rcll
pop
push
rolb
mov
in
shll
cwtl
mov
xor
dec
movsl
jmp
mov
into
out
dec
test
lea
arpl
sbb
xor
sub
cmp
mov
pop
mov
add
jo
or
dec
and
rorb
in
push
sbb
or
xor
mov
es
add
lret
pop
mov
testb
sub
sahf
inc
push
repnz
aas
add
push
insl
sub
loopne
cmp
lods
ret
loopne
ds
cmc
pushf
sub
les
loopne
test
add
cmp
jmp
mov
push
sbb
sub
mov
inc
mov
push
add
dec
mov
or
or
iret
xor
or
loop
push
jmp
mov
pop
lret
inc
lods
xlat
mov
pop
dec
sbb
mov
dec
mov
mov
mov
fsubrs
xchg
lahf
xor
jns
push
sbb
je
test
sub
push
jo
call
sbb
mov
mov
mov
stos
pusha
je
or
sub
mov
test
popa
shrl
insl
loopne
popa
xor
push
mov
cwtl
xchg
gs
popl
pusha
and
nop
dec
shlb
adc
movsb
jb
xchg
lds
lds
ficompl
shl
cmpsl
add
push
add
mov
daa
in
scas
ljmp
addr16
xchg
hlt
jmp
ja
fists
pop
jle
imul
aaa
andb
pop
push
out
mov
rcll
or
pop
or
mov
nop
cmp
pop
lret
add
mov
dec
pop
xor
cmp
sub
push
sbb
mov
andb
jne
movsl
push
push
push
jbe
add
pushf
iret
sbb
inc
mov
ud1
cmp
or
mov
das
push
dec
sub
mov
pushf
and
jae
imul
pop
emms
mov
add
cmp
sub
push
insb
arpl
xchg
es
out
push
push
into
in
push
pop
test
jecxz
bound
jb
shl
je
and
inc
mov
ja
sub
xchg
sub
cltd
push
xor
dec
add
add
adcl
push
push
orb
neg
jne
push
or
icebp
xchg
jnp
or
ds
xlat
bndldx
jge
popa
loop
daa
mov
or
outsl
mov
or
popa
lea
lcall
inc
adc
and
stc
cltd
push
push
push
xchg
rcrb
jmp
repnz
sbb
cmp
sahf
fimull
mov
dec
jmp
sub
sub
inc
cmp
sbb
fcompl
cmpb
je
shlb
or
add
cmp
in
movsb
aas
mov
es
cld
mov
movsb
sub
clc
int
and
xor
adc
sub
push
jmp
push
mov
iret
xor
sub
push
fcoms
jne
dec
push
mov
mov
jo
shrl
mov
or
xchg
test
jne
jmp
and
sbb
adc
sub
pop
mov
jg
push
xor
cmp
inc
push
cmp
jp
mov
sbb
adc
out
mov
mov
movsl
imul
xorl
jo
sub
add
dec
stc
adc
lahf
mov
and
xor
cltd
fst
add
shlb
jg
jmp
adc
xchg
pop
jmp
adc
mov
inc
xor
mov
xorb
je
gs
mov
sbb
jle
in
out
mov
pop
mov
call
or
clc
ret
xchg
mov
imul
mov
sbb
push
mov
pop
xchg
addl
and
loopne
ret
nop
loop
nop
cltd
push
into
repz
pop
lcall
or
outsb
movsl
leave
adc
xchg
or
and
rcrb
cld
inc
popf
je
push
push
pusha
outsl
mov
adc
pusha
jecxz
notl
int3
jo
out
fisttpl
or
mov
mov
mov
daa
test
test
mov
or
pushf
rcrb
and
cmp
les
dec
jb
inc
push
xchg
call
cmp
mov
call
adc
or
and
sub
adc
xchg
popf
lods
xchg
adc
out
addr16
mov
or
adc
incb
test
and
jb
into
mov
aam
adc
mov
pop
sub
jae
sub
and
add
cwtl
pop
push
sbb
loope
test
mov
lock
psubsb
jb
in
push
hlt
ret
inc
addl
call
xchg
push
out
lret
sbb
movsl
and
gs
fcoms
jmp
dec
jle
adc
mov
pushl
stos
adc
lahf
out
outsl
ret
ficoms
add
push
mov
enter
jmp
xchg
cli
inc
cmpsl
or
push
cmpl
mov
jae
inc
adc
xchg
xchg
xchg
fucomi
out
loopne
push
loopne
loopne
pop
lods
gs
xchg
stc
mov
mov
sub
ljmp
imul
jecxz
mov
and
sub
pop
out
and
pop
sbb
add
dec
jl
xor
inc
xchg
and
cli
das
add
jo
inc
and
mov
jb
jb
jne
lds
add
jne
add
jbe
shlb
jbe
pop
sbbl
insb
add
jle
int3
add
leave
pop
std
pop
jbe
and
and
nop
xorb
pop
cmp
je
push
mov
clc
pop
push
movsb
add
subl
mov
sub
push
inc
sarb
mov
or
dec
test
ds
push
test
adc
cmove
push
inc
sub
outsb
cmc
fnstenv
sbb
enter
sar
or
sub
loopne
or
mov
scas
or
mov
movsl
test
data16
in
xchg
push
fwait
xchg
push
jns
jecxz
fcompl
add
push
cmp
inc
or
lret
fcoms
jl
inc
cmp
inc
mov
jne
xchg
inc
sbb
pushf
add
psadbw
mov
xor
jb
loop
fdivr
lcall
lods
popa
adc
imul
add
pop
and
mov
pop
cmp
mov
test
loopne
arpl
icebp
pop
xchg
loope
movsl
cmpsl
inc
push
or
inc
js
push
add
push
ret
fstl
sbb
lret
pop
jl
jl
xor
cltd
mov
ficoms
dec
sub
test
mov
ret
add
stos
test
cmpsl
and
ret
adc
ja
clc
sub
inc
xor
test
mov
gs
mov
lock
lock
and
jae
push
leave
xchg
mov
or
int
xor
mov
in
rclb
xchg
imul
or
push
sbb
pop
imulb
sbb
loopne
jecxz
jo
sub
and
cld
mov
daa
les
sbbb
cld
dec
xchg
xchg
or
arpl
push
bound
inc
inc
jecxz
sub
add
into
xor
call
push
dec
and
in
hlt
dec
add
xor
jmp
cmp
pop
xor
cmp
add
movswl
dec
lret
sbb
ja
gs
ds
and
and
pop
or
hlt
loope
mov
rcl
sub
inc
roll
pop
push
add
addb
rclb
call
mov
lods
lret
test
xchg
ss
ljmp
sub
cmp
clc
sbb
push
outsb
push
dec
rcrl
testb
xor
ss
mov
test
dec
ret
add
jmp
andl
popa
sub
xor
addb
cmc
pop
cmp
pushl
cmpl
das
pop
pop
jg
sbbb
rcrb
sbb
jmp
pop
ja
dec
mov
aad
dec
setb
dec
popf
in
xchg
dec
subl
dec
mov
mov
add
mov
test
test
push
cmp
mov
int
js
call
pop
xchg
les
push
rcrb
bound
outsl
frstor
bound
mov
js
ret
mov
mov
add
test
mov
lds
adc
pop
addr16
popf
and
pop
ja
inc
cs
xor
fistpll
sahf
dec
xor
xor
inc
mov
shll
outsb
test
mov
or
lods
ficoml
add
sbb
lea
push
insb
test
mov
xchg
jp
scas
cltd
fsubs
aas
repz
cltd
scas
pop
daa
pop
jb
hlt
push
add
mov
bnd
xchg
push
inc
int3
sub
aas
insb
jne
jp
in
sbb
xchg
or
pop
and
pop
mov
insb
jg
adc
cmpb
fcmovb
lods
xor
daa
daa
daa
fnsave
cmp
daa
daa
and
aam
pop
jb
push
rcrb
out
shrb
push
repz
or
cmp
repnz
loope
ret
mov
lea
int
in
sbb
mov
jb
mov
cwtl
leave
mov
xchg
mov
adc
ret
cmc
mov
adc
push
enter
fildl
adc
movsb
xor
ja
mov
cmpsl
jb
mov
push
xchg
xchg
outsl
fisttpll
hlt
js
add
shrb
in
je
jns
mov
mov
sub
push
cwtl
daa
jns
inc
xorl
inc
pop
shlb
cmpsb
inc
sub
mov
movsl
in
out
jnp
push
repnz
jno
bound
or
mov
js
push
jae
cmp
cmp
add
inc
push
test
loopne
int
stc
lods
outsl
cltd
add
mov
mov
movsl
jmp
loop
addr16
push
in
test
std
lods
orl
pop
lea
dec
mov
pop
test
add
clc
add
jne
and
inc
mov
outsb
or
push
pop
xchg
xchg
dec
popf
jecxz
insl
fs
push
push
loopne
inc
or
aas
inc
rorl
push
pop
push
mov
jmp
loope
jg
fcoms
lret
cmp
pushf
push
into
inc
push
mov
scas
adc
lods
lea
sbb
pop
push
lods
or
push
mov
sbb
inc
aas
sbb
inc
inc
pop
aaa
mov
lret
jae
sub
add
loopne
pop
and
pop
mov
pop
enter
jnp
xchg
daa
push
rorb
dec
push
add
pop
fdivrl
lods
jns
and
dec
nop
out
sub
cmp
cmpsb
ret
faddl
adc
aam
cmpsl
add
fs
and
xchg
sub
xchg
sbb
das
cmpsl
lcall
aam
pushf
or
cmpsl
imulb
sti
daa
pop
mov
arpl
or
sbb
dec
jl
mov
cmp
je
pop
add
sbb
cmc
fst
outsb
push
andb
mov
push
scas
cmpsl
stc
cmp
dec
test
lret
xor
mov
jg
out
xchg
inc
mov
add
inc
fidivs
fxch
or
loope
xchg
leave
adc
push
xor
mov
mov
or
xchg
sub
sub
mov
insb
mov
inc
jo
pop
rcll
pop
or
je
sbb
lods
inc
inc
lret
xor
pop
push
jmp
mov
mov
or
testb
push
add
sbb
adc
mov
cmp
jmp
add
lds
movsl
pop
add
dec
iret
jge
std
es
add
add
or
cmp
and
and
sub
inc
add
sub
sub
aaa
dec
xchg
cmpsb
xor
rclb
jo
sbb
dec
insl
xchg
rorl
ret
xchg
negb
pop
push
sbb
add
cs
xchg
add
jl
sbbb
sub
ret
and
or
add
push
sub
mov
adc
or
lock
push
sbb
orl
rcll
jnp
out
lods
lret
push
out
adc
sarl
mov
adc
mov
and
hlt
add
sbb
push
add
or
popa
or
mov
sbb
push
dec
shll
and
fmull
inc
jo
dec
add
loopne
mov
or
jecxz
test
mov
jno
push
mov
push
popf
out
cli
mov
enter
push
push
mov
shrb
shrl
xchg
shlb
mov
inc
add
and
mov
jbe
and
cld
ficoms
push
xor
adc
arpl
inc
mov
mov
push
inc
inc
cld
pop
jae
add
dec
and
loopne
dec
jge
lret
filds
orb
mov
sti
xchg
dec
dec
mov
mov
sbb
pushf
adc
mov
xchg
insb
mov
in
leave
sub
mov
cmp
call
lea
cmp
ja
mov
sbb
sbb
and
cld
jmp
pop
mov
movsl
or
pop
lahf
push
dec
push
pop
ja
fcomps
clc
mov
jg
je
test
ja
std
sbb
cld
xchg
scas
mov
pop
mov
adc
push
movsl
inc
add
add
cmp
and
iret
add
jno
mov
dec
mov
mov
push
cmpb
je
lods
xchg
jmp
mov
shll
xor
pop
jge
mov
cmp
jne
movl
fisttpll
addb
inc
std
jne
subb
jmp
sub
insl
popf
xchg
and
jmp
jo
or
pop
rolb
push
and
add
pop
lods
fwait
mov
push
mov
mov
add
mov
inc
pop
lcall
shrb
xor
inc
shl
into
std
mov
in
push
jmp
lock
sbbb
jae
xchg
and
enter
test
jge
scas
aas
rolb
jnp
jae
cmp
call
sbb
lods
shl
jne
xchg
sbb
pop
inc
push
leave
inc
clc
add
imul
loopne
aaa
or
jmp
inc
in
leave
add
cmc
std
std
mov
mov
cmp
lret
add
pop
movb
mov
jo
inc
add
mull
xorb
push
aas
pusha
les
aam
push
sti
dec
sbb
mov
xchg
and
pop
orb
xchg
fs
sub
dec
jne
inc
psadbw
inc
stos
addr16
scas
dec
jle
sarb
rcrb
push
mov
test
inc
jbe
mov
or
dec
jne
push
scas
andb
or
push
icebp
lret
addr16
jnp
cmpsl
cmp
into
xor
nop
push
stc
rcll
adc
jo
adc
mov
pop
daa
pop
cmp
pop
lret
test
adc
or
stos
and
cmc
xchg
jge
cmp
push
and
lcall
scas
pop
pop
pop
add
ret
push
rcrl
dec
or
cmp
add
pop
push
lret
sti
xlat
testb
insb
ljmp
add
xor
and
dec
mov
or
xor
clc
add
sbb
into
dec
out
or
cmp
inc
jmp
jmp
cmp
dec
sbb
mov
mov
jmp
add
ret
inc
jo
mov
cmp
adc
pop
add
fwait
jno
es
mov
jmp
popf
jmp
or
cmp
pop
aaa
xchg
add
lods
andl
ljmp
std
and
sbb
ljmp
fwait
jb
fisubl
and
push
fs
mov
shrb
fimuls
or
clc
xor
in
mov
mov
aaa
cmpl
ret
dec
dec
cmp
adc
addb
movsl
sub
mov
out
jmp
inc
xor
adcb
sbb
adc
leave
clc
icebp
and
ret
je
jp
jbe
sarb
pop
cmp
lods
or
pop
sbb
mov
imul
inc
mov
cmpsb
movsb
jnp
into
sbb
data16
mov
inc
inc
sbb
sub
add
mov
in
sub
and
sbb
inc
inc
cs
push
mov
xlat
cmp
cwtl
daa
sbb
adc
ljmp
sbb
inc
faddl
or
bound
mov
cld
inc
add
mov
add
jns
dec
jge
mov
cmp
bound
mov
push
and
sub
cmp
mov
push
sbb
inc
out
cmp
test
mov
xchg
push
sbb
pop
rcll
pop
add
inc
and
sub
add
ss
outsl
add
add
rcr
cmovp
pop
pop
mov
jmp
pop
xor
lods
push
dec
jb
add
dec
ss
or
or
and
dec
mov
mov
push
or
mov
mov
mov
jno
lods
push
push
push
pusha
fsubr
mov
mov
push
pop
lahf
cltd
and
push
pop
or
push
mov
filds
addb
data16
add
stos
sub
or
and
push
jg
sahf
adc
jno
mov
inc
shlb
dec
sbb
scas
movsl
push
insb
pop
arpl
adc
sbb
pushf
adc
add
cmp
or
pop
dec
rolb
test
sbb
push
push
ds
add
push
dec
push
sub
test
adc
mov
out
fnstenv
not
lock
sbb
pop
iret
push
adc
in
xor
stos
clc
mov
and
sub
sbb
sbbl
enter
adc
loop
cmp
dec
jl
jle
sbb
pushl
xchg
pop
jecxz
dec
mov
dec
pop
insb
bound
xor
cmpsl
push
sbbl
arpl
xchg
jle
or
mov
mov
insl
jg
mov
push
xor
mov
push
fnstcw
enter
or
xor
push
rorb
mov
pop
jo
les
pop
xchg
push
jo
cmpl
leave
test
push
adc
pop
ds
fucomp
hlt
cmp
add
xor
sti
adc
cmp
mov
jae
or
lret
xchg
loopne
data16
sub
xor
stos
add
pop
xor
pop
push
or
xchg
mov
mov
inc
jne
cmp
sub
stos
mov
dec
and
add
loope
out
pop
mov
ljmp
pop
sub
movsb
aas
es
sub
loopne
or
aam
addb
mov
inc
js
sub
jmp
jmp
vmovd
inc
inc
add
push
pop
aam
jmp
mov
rclb
pop
cs
sub
mov
rcrl
or
xor
sub
mov
incb
push
push
lock
jg
loop
shr
je
insl
sbb
add
inc
adc
push
sub
push
pusha
lods
loope
scas
jo
mov
dec
jne
shlb
or
sub
add
jg
adc
divb
xor
ret
add
lods
out
sub
jne
push
or
or
cli
pop
pop
ret
in
xchg
rcrl
push
mov
bound
add
cli
shr
add
sbb
inc
push
mov
aam
clc
mov
xlat
loop
ret
and
adc
xchg
dec
popf
adc
lods
outsb
adc
adc
add
push
adc
mov
push
mov
dec
mov
shll
enter
mov
and
push
sbb
mov
insb
aaa
call
movsb
push
adc
jo
ja
add
xchg
pop
mov
and
rcrb
push
add
lret
iret
nop
lret
dec
or
xor
dec
jmp
add
add
mov
dec
push
or
popl
fsubrl
add
cwtl
sbb
test
inc
sbb
mov
insb
push
call
sub
rcl
repnz
add
sub
in
mov
arpl
neg
in
jno
xchg
rcr
mov
les
fbld
jmp
and
das
cmp
mov
push
mov
rorl
dec
add
and
sbb
lret
test
add
sbb
pusha
test
add
push
xchg
push
subl
pushaw
iret
in
call
or
sbb
or
pop
or
stc
loopne
and
xor
icebp
int
xchg
add
jmp
decl
js
jmp
mov
mov
frstor
adc
aam
daa
jns
pop
js
and
push
add
lock
push
sub
xchg
jne
lea
xor
xor
adc
dec
dec
push
repz
repz
pop
push
jnp
iret
mov
int3
fcoms
mov
je
mov
adc
mov
ss
cwtl
mov
jne
push
adc
out
add
fs
cmp
jecxz
push
in
jb
push
inc
and
jle
mov
sbb
and
inc
adc
loope
inc
pop
cmp
in
je
push
cltd
jmp
inc
faddl
inc
sbb
stos
and
push
sar
push
jmp
test
add
aaa
xor
jmp
rcr
jg
xchg
and
ret
and
push
push
test
xor
fstl
jmp
sub
rol
es
or
mov
xor
cld
jmp
mov
test
cld
divl
adc
mov
cmp
je
dec
mov
inc
pop
fstps
pop
xor
add
mov
jne
lea
mov
shr
std
mov
les
mov
push
mov
shll
add
sti
je
jmp
bound
shl
pop
jo
add
sbb
or
inc
cmpl
shlb
mov
xor
adc
sbb
xchg
loop
ret
pop
xor
lahf
mov
xchg
pop
ret
xchg
ds
or
xchg
mov
pop
mov
sbb
jne
mov
pop
js
mov
sub
push
addb
dec
daa
je
add
test
das
xchg
int3
mov
repnz
std
mov
lods
std
test
das
lret
call
pop
xchg
xor
mov
adc
les
or
incb
lret
je
or
jp
stc
test
add
push
scas
jno
cmp
addr16
adc
stc
mov
mov
or
out
xor
ds
push
cmp
test
mov
xchg
cmp
std
push
push
test
sbb
xor
shrl
ret
mov
add
pop
rol
gs
mov
or
notb
add
cmpl
add
or
add
icebp
cmp
and
popa
mov
jl
xor
push
popa
cmp
mov
test
mov
rcl
mov
sbb
sub
sub
dec
cmp
inc
sub
aad
pop
and
or
mov
jne
cmpb
ret
add
jl
in
cmp
inc
xor
mov
test
outsl
ss
js,pn
pop
mov
adc
and
xor
shlb
pop
jge
lds
cwtl
adc
in
test
arpl
inc
push
out
repz
mov
pop
mov
xchg
dec
je
push
or
push
or
cli
and
out
xchg
mov
mov
jecxz
movsb
popf
test
cmp
and
movsb
jb
stc
mov
push
adc
loopne
xchg
shrl
dec
or
or
loopne
dec
fxch
leave
movsb
ret
das
loope
jg
mov
mov
shll
ret
and
sahf
cmpsl
aam
inc
pop
sbb
and
lods
jge
push
pop
aam
es
mov
jmp
mov
sub
repnz
enter
leave
loopne
mov
cmp
add
test
adc
and
adc
jne
cltd
test
fwait
or
jo
fwait
sub
fwait
cmp
mov
xor
fwait
mov
lcall
out
js
sbb
insb
sub
xor
add
or
inc
lcall
loopew
mov
scas
or
adc
sbb
loope
jecxz
inc
fcmovne
push
sarb
nop
mov
enter
loopne
popf
rcrb
loopne
mov
mov
pop
mov
push
sub
adc
sbb
dec
push
cmp
je
ret
scas
inc
cmp
stos
sbbb
loope
sub
mov
fstl
push
push
test
push
addb
jge
or
xchg
lea
push
adc
or
pushf
stos
mov
mov
add
xchg
xchg
loope
js
and
movsb
loop
mov
imul
lods
or
dec
or
jno
mov
out
adc
adcb
xor
push
xor
arpl
fstl
adc
xor
push
add
decb
test
adc
fcoms
neg
ret
arpl
push
cmpsl
cmpsl
ds
inc
mov
cmp
xchg
das
movsl
leave
cmpl
repz
loopne
and
mov
or
xchg
lahf
mov
lahf
inc
repz
cmpsl
test
inc
xchg
fcomp
bound
xchg
subb
fidivrs
or
add
inc
jmp
dec
cs
or
shlb
das
in
jbe
jmp
sti
mov
xchg
mov
add
pusha
in
roll
dec
sub
insb
fldl
dec
jno
or
sub
sbb
jmp
dec
adc
jnp
dec
add
mov
js
out
sub
pop
mov
orl
jle
mov
jmp
jmp
mov
xchg
or
pop
or
lds
mov
mov
fldpi
sbb
aaa
dec
mov
je
fcomps
push
push
jno
adc
sbb
mov
sub
sbb
adc
sti
jne
cmp
hlt
push
nop
add
sub
or
sbbl
mov
jnp
popa
outsl
pop
pop
lock
dec
push
add
je
add
inc
imul
popa
adc
dec
pop
loope
inc
daa
pop
mov
mov
rolb
push
cmpsb
jp
mov
pop
inc
or
js
subl
int
push
fdivrl
rolb
sbb
pop
aam
lods
inc
push
xchg
and
sbb
pop
fdivs
cmp
lea
rorb
sbb
pop
mov
lea
pop
or
pop
out
rolb
aas
loope
xchg
jno
call
xchg
jl
movsb
mov
stos
mov
pop
xchg
xlat
loope
pop
repnz
ret
pop
leave
shll
lods
lock
aas
pop
add
mov
sub
xor
arpl
outsb
fsubr
dec
aas
pusha
aas
and
js
scas
movsl
push
out
insl
jne
scas
adc
into
shl
lods
outsb
insb
mov
jb
inc
aad
mov
pop
jo
xlat
adc
fsubrs
inc
mov
inc
inc
inc
inc
inc
inc
inc
cmp
dec
xchg
jno
sbb
jo
std
call
xor
push
mov
nop
mov
rol
add
sti
inc
es
mov
cmpsl
inc
scas
dec
movsb
add
in
and
aad
cmc
push
inc
test
inc
ss
mov
sub
sub
jecxz
cmp
loopne
dec
movsb
adc
and
xlat
enter
decb
cld
push
mov
int3
push
dec
cwtl
cltd
nop
and
inc
mov
or
cwtl
lods
lods
cmp
push
and
fimuls
xor
cmp
movsb
jb
dec
test
test
leave
leave
mov
sahf
pop
mov
cmp
aaa
jbe
addr16
test
inc
cwtl
nop
add
dec
xchg
pop
inc
dec
mov
adc
aaa
repnz
xor
push
cwtl
pushf
xor
adc
nop
xor
mov
pushf
nop
inc
cmpsb
inc
push
pushf
cwtl
nop
inc
dec
mov
test
divb
int
shr
sarb
or
hlt
stos
sbb
xchg
pop
sbb
push
out
lcall
clc
outsl
add
sub
addr16
sbb
mov
mov
mov
ret
ds
or
xor
je
sub
daa
ja
adc
or
test
sbb
pusha
xor
aam
or
inc
or
add
iret
sbb
add
mov
rcrb
xor
adc
rcll
fmuls
test
xor
mov
iret
push
jmp
ficoms
mov
ja
add
int
jmp
jnp
dec
xor
icebp
sbb
add
dec
fsts
dec
jno
sti
add
pop
mov
ret
movsl
jecxz
sti
mov
add
cmpsb
or
add
shlb
and
inc
cltd
les
lock
popa
insb
loop
jo
and
and
or
hlt
mov
push
sbb
rcrb
adc
and
add
push
sahf
test
add
pop
push
ljmp
add
adc
loope
shr
je
ret
jge
or
push
push
dec
adc
push
and
loope,pn
xor
dec
push
ds
out
out
outsl
inc
or
jbe
jle
lahf
out
adc
jo
cmp
iret
lea
mov
jo
in
int3
pop
fbld
lea
lea
inc
out
in
push
stos
and
shrl
test
mov
xor
dec
cmp
xor
movsb
pusha
jp
insb
mov
push
negl
ret
mov
mov
shrb
lret
ret
mov
ds
shr
dec
arpl
sbb
xchg
sbb
cmp
or
mov
test
lret
and
adc
loopne
adc
xchg
cmp
xorl
xchg
sbb
xchg
inc
add
jne
repz
rorl
leave
add
lret
push
test
sidtl
and
fsubrl
add
scas
mov
divb
or
push
sbb
push
dec
and
dec
dec
sub
lret
add
ds
sbb
bts
dec
jmp
hlt
cs
inc
imul
push
fdivs
xchg
les
mov
popa
dec
arpl
or
adc
jne
inc
adc
and
cmp
fmull
cmp
scas
idivl
inc
sub
xor
scas
inc
les
add
pusha
call
push
cmp
rol
mov
push
mov
pop
out
add
xor
and
sbb
sub
mov
mov
ficomps
cmp
jne
loopne
mov
sbb
inc
mov
add
pop
or
mov
shr
jle
andl
or
outsb
sbb
stc
mov
fs
clc
sub
fs
jmp
cmp
xchg
subl
sbb
pop
cmp
lea
ds
xchg
sub
scas
or
push
cmp
aam
xor
mov
fs
rcrb
xor
pop
rcll
sub
sahf
pop
adc
sbb
andb
jmp
adc
jae
ja
adc
mov
lods
sbb
mov
mov
rcll
jmp
inc
or
arpl
push
out
push
mov
add
push
fists
or
sub
or
adc
icebp
je
into
inc
or
push
movsb
inc
push
imul
filds
sbb
jb
gs
jmp
adc
andl
push
jbe
add
gs
jle
xchg
add
inc
sbb
mov
and
xor
pop
add
incl
dec
and
sbb
pop
jne
xor
adc
aad
in
int3
dec
add
stc
inc
test
sub
xchg
call
dec
in
sar
dec
add
xlat
inc
aam
xor
adc
push
sbb
pop
and
popa
add
xorb
inc
cmpsl
jb
cwtl
sarl
cld
enter
ficompl
nop
out
or
dec
pop
dec
and
neg
jae
mov
dec
or
in
push
add
sub
fidivrl
movsl
adc
incl
mov
inc
add
cs
je
cmp
stos
insl
pop
adc
mov
mov
mov
and
dec
cld
sarl
imul
popa
mov
pop
pop
jle
in
shll
cld
add
push
dec
test
sbb
or
pop
pop
insw
push
mov
and
es
and
inc
imul
ds
and
loopne
cmc
pop
out
jo
xor
inc
std
shlb
fcomi
js
sbb
mov
or
decb
outsb
inc
mov
xchg
or
xor
push
icebp
add
jae
incl
push
and
int3
jae
lea
jbe
clc
pop
add
add
push
xor
jnp
inc
mov
orl
andl
pop
mov
rcrb
les
movsb
xor
aaa
popa
adc
cmp
xor
inc
push
pop
cmp
push
je
cltd
pop
sarl
lock
sub
lea
push
out
test
inc
or
mov
loop
and
pop
dec
call
jge
inc
push
pop
push
dec
xorb
jecxz
lea
xchg
or
jae
lock
movw
insl
add
dec
add
pop
movb
xor
dec
das
xchg
pop
dec
inc
ss
cmpl
push
sbb
call
push
xchg
call
lret
sbb
fiadds
ret
loope
add
jl
sarl
fnstsw
mov
mov
addl
fbstp
daa
faddl
add
or
aas
cmp
or
push
aas
js
rorb
and
into
sub
shll
shlb
cltd
xor
jl
ljmp
hlt
jb
loopne
aam
lret
pop
push
and
subl
fmuls
xchg
nop
sbb
cmp
pop
ret
cmp
clc
add
xor
jmp
lods
dec
cld
xchg
add
or
sbb
mov
add
mov
inc
inc
jo
sbb
dec
cmp
adc
mov
repz
xchg
out
jmp
xor
push
orb
jmp
movb
rorb
pop
jmp
lea
push
adc
repz
sub
push
insl
arpl
inc
aaa
xor
mov
mov
js
les
xor
adc
in
insb
lock
je
push
mov
movl
cld
call
ficoml
jmp
push
add
xor
idivb
mov
add
dec
and
outsb
aam
cwtl
cwtl
or
add
imul
mov
orps
pop
test
adc
sti
or
shlb
push
push
add
mov
and
jnp
sub
push
paddusb
repnz
lock
fstl
and
test
jne
out
repz
loop
sbb
or
and
push
lret
pusha
pusha
imul
test
jb
jae
pop
dec
shrl
ret
mov
pop
pushl
jnp
lods
int3
sbb
pop
push
nop
popa
out
sub
push
lock
jecxz
or
sub
lea
daa
pop
inc
sbb
movsl
xchg
enter
in
sub
push
ret
rcl
popf
imul
arpl
fisubl
push
and
in
jb
pop
sbb
addr16
lret
add
push
add
jnp
fs
enter
cmp
cmpsb
push
cmp
adc
sarb
xor
add
stos
in
cld
cs
mov
fsubrp
push
shlb
xchg
inc
inc
adc
lahf
lret
jae
mov
inc
sub
sahf
lret
pop
inc
dec
inc
pop
dec
dec
dec
popf
cmpsl
repnz
push
adc
mov
fs
insb
add
in
inc
jb
fnclex
push
sbb
sbb
add
fldl
movaps
pusha
push
lock
jmp
addr16
add
inc
cli
push
add
or
ret
imul
ror
cmp
jne
lea
push
leave
sub
mov
mov
inc
or
push
pusha
push
push
lods
test
inc
ficoml
sbb
adc
jle
xchg
or
lret
sbb
fdivs
mov
dec
aaa
enter
jge
inc
push
sbb
cmp
add
or
je
xchg
test
push
add
sub
sbb
jb
lds
xchg
push
xchg
leave
clc
sti
cmp
stc
jmp
nop
xchg
idivl
ljmp
mov
cmp
xor
inc
fistpl
sbb
js
loopne
xor
daa
es
push
lea
jecxz
ret
or
or
xor
and
ret
fwait
loopne
mov
lret
mov
jle
jns
shlb
movsl
or
scas
mov
movsb
stos
or
js
sbb
cmpsl
mov
aas
clc
inc
rolb
and
or
jne
or
push
aad
cmpsb
lock
dec
mov
lret
xchg
fildl
push
subb
adc
pop
lea
mov
inc
test
mov
lock
cltd
or
out
jle
and
sbb
fistps
les
ret
enter
rcrl
add
ret
sub
xchg
add
jmp
fsubs
or
aam
scas
add
jg
adc
out
pop
mov
ret
mull
lsl
jmp
push
pop
cmp
jns
push
inc
shr
rcr
shr
rcr
or
mov
div
pop
dec
test
std
mov
pop
jb
cmp
or
cmp
or
repz
in
xor
and
adc
push
inc
add
inc
lret
ja
cmp
iret
pop
ret
adc
sbb
inc
iret
je
test
adc
jbe
je
mov
push
aaa
stos
or
cmc
inc
in
orb
sbb
mov
inc
mov
out
or
xchg
or
mov
pusha
pop
frstor
mov
mov
lahf
or
jge
cmp
add
test
sahf
call
mov
xchg
mov
dec
nop
adc
mov
dec
les
xchg
cli
and
adc
inc
inc
and
or
pop
jmp
dec
sbb
sub
mov
push
repz
movsb
mov
insl
or
sub
iret
xor
sbb
or
loopne
cmp
sbb
mov
clc
out
test
cltd
and
in
sbb
and
mov
nop
shlb
add
and
add
sbb
out
fists
xor
pop
lret
xor
sbb
add
cmp
mov
sub
inc
adc
daa
xchg
or
ljmp
jne
push
add
and
xor
je
xchg
arpl
pop
inc
cmp
mov
or
rorl
rorl
inc
add
jbe,pt
or
mov
test
push
dec
pop
dec
mov
loope
loope
aas
dec
adc
add
addl
xor
add
leave
or
add
add
mov
dec
enter
jl
testl
addr16
inc
pop
outsb
cltd
cmp
mov
in
dec
lods
mov
push
and
pop
lret
ja
lods
fadds
cld
dec
or
sub
sbb
lahf
ss
dec
mov
movsb
add
cwtl
push
lods
sub
cmp
outsb
mov
loop
les
loope
xor
push
cmp
sub
pusha
xchg
xchg
ss
popa
xor
addr16
mov
mov
cmp
dec
inc
push
mov
ds
add
ret
pushf
in
lds
xor
and
or
or
iret
jo
std
nop
call
imul
insb
loop
nop
cmp
mov
sub
cmp
ret
push
je
mov
mov
adc
sub
inc
and
jmp
fistpl
push
mov
aas
test
add
int3
sub
aad
orl
testb
jmp
adc
outsl
lods
inc
xchg
push
jae
loope
mov
imul
pop
mov
cmp
faddl
push
test
add
push
icebp
lock
add
xor
ficompl
pusha
xchg
imul
add
enter
subl
adc
cli
pop
inc
mov
jl
cmp
jg
inc
jmp
add
fsubr
data16
jne
imul
lea
push
dec
push
add
cmp
pop
lea
or
adc
je
dec
scas
push
pusha
mov
mov
or
xchg
mov
lock
xor
movsb
xchg
icebp
xor
mov
es
mov
jne
push
adc
and
or
incl
push
movsl
sub
push
stos
into
mov
push
push
adc
dec
mov
push
cmp
jge
repz
push
jae
add
out
testb
push
mov
cmpsb
cwtl
pusha
sbb
nop
imul
mov
notb
test
pop
stc
xor
pop
inc
jmp
push
add
mov
push
sti
pop
psubd
push
sbb
pushf
or
popa
mov
jl
js
mov
lods
add
ljmp
inc
cltd
pushf
jmp
xor
mov
lahf
subb
and
ja
mov
sub
pop
outsb
gs
rcll
orl
loop
mov
xor
and
adc
push
mov
shrb
pop
int3
orl
inc
adc
push
gs
jbe
and
add
cmp
or
or
rcl
mov
pop
ja
dec
or
loopne
addr16
pop
xorb
adc
mov
push
push
mov
add
add
add
jo
inc
daa
jno
and
or
and
pop
or
xor
mov
shlb
or
xchg
cli
adc
lea
lea
or
out
sti
loopne
mov
popa
mov
mov
sub
popl
loope
nop
cmp
pop
fiadds
inc
mov
mov
enter
sahf
adc
push
mov
adc
xchg
repnz
mov
div
xchg
xchg
pushl
add
jno
pop
cmp
mov
loop
mov
mov
pop
push
push
xor
test
pusha
pop
stos
ljmp
push
inc
cmp
ds
sbb
dec
sbb
push
add
insb
dec
sbb
out
bound
xlat
insb
enter
push
push
adc
cmp
or
adc
std
rol
pop
sbb
add
and
adc
cmp
mov
dec
hlt
cmp
cmp
jmp
mov
jne
jecxz
push
cmp
cmp
add
push
pop
adc
add
aas
pop
and
dec
push
divl
add
stos
inc
pop
add
daa
or
adc
jmp
mov
sbb
cmp
pop
pop
cmp
and
push
pop
pop
add
xorb
test
insb
je
sub
sub
add
push
hlt
push
sub
xor
or
and
loopne
add
mov
jmp
jg
lcall
and
pop
add
dec
adc
inc
rcll
das
xor
mov
gs
push
es
xchg
cmp
add
test
pop
inc
adc
xchg
je
dec
lods
roll
cmp
lea
adc
or
adc
insb
inc
popa
mov
push
add
lock
inc
mov
xor
das
lret
pmaxub
push
cwtl
cmc
mov
add
shl
dec
jl
adc
sysexit
jp
fcompl
sti
inc
fsubr
das
push
inc
jmp
mov
cli
popf
pushl
leave
icebp
sub
xor
psadbw
popa
insb
push
xchg
fidivs
add
add
xor
sbb
cmp
push
mov
mov
jmp
mov
push
push
nop
xor
adc
fcomps
movsb
mov
dec
shll
dec
and
jmp
pop
jecxz
sub
xchg
call
cmp
loop
or
in
pop
xor
xchg
inc
jmp
push
mov
cs
fwait
mov
mov
sbb
scas
inc
or
pop
test
iret
and
mov
pop
xor
sub
cmp
hlt
add
nop
leave
dec
sub
popf
test
nop
or
xchg
and
incb
addr16
jmp
andl
jmp
mov
xchg
test
stos
popf
add
scas
push
mov
push
cld
fucomip
mov
mov
das
cwtl
cmp
jle
sub
cmp
xchg
or
push
jmp
dec
push
in
jnp
add
jbe
or
inc
sub
inc
loopne
hlt
jae
out
data16
adc
inc
sbb
sbb
mov
push
scas
mov
sub
ret
adc
clc
pop
jge
mov
mov
add
jmp
dec
jae
imul
sbb
jb
cmp
subb
pushf
and
outsb
mov
ja
sub
leave
pop
push
sub
and
cmp
lods
push
ds
cwtl
cld
pop
adc
fidivl
mov
lods
mov
scas
mov
lods
sub
out
xor
inc
stos
loopne
imul
je,pt
mov
data16
jno
adc
nop
mov
ret
fisubrl
call
jbe
ud0
testw
mov
sbb
xlat
pusha
jecxz
fldl
pop
shll
sahf
dec
dec
or
and
dec
cmp
mov
imul
lock
cmp
xlat
add
orb
jecxz
push
push
cmpsb
lret
movb
or
pop
js
sub
dec
mov
dec
test
sti
add
mov
mov
add
push
mov
push
fsubrs
cwtl
jge
add
add
mov
imul
sbb
xlat
test
clc
jge
pop
cmp
adc
loopne
inc
lods
orb
adc
mov
dec
mov
or
sub
ds
jbe
jle
jne
repz
or
rclb
pushf
add
aam
data16
fsubrp
lods
sarl
cmpl
fisttpl
pop
mov
sbbl
sbb
mov
jb
icebp
add
movsl
add
sbb
xchg
aam
into
loop
xor
push
loop
out
or
xchg
or
jne
mov
roll
ja
sbb
test
inc
xlat
jae
mov
std
mov
cld
cmp
sbb
or
cli
xor
and
cmp
pop
repnz
inc
testl
movsl
cwtl
jne
lock
mov
dec
into
lret
lock
out
jne
inc
or
cmp
xor
loopne
and
pop
dec
lock
xchg
pop
dec
xchg
nop
clc
sbb
push
jb
cwtl
pop
fsubrs
test
push
pushf
je
fldt
lea
lcall
add
movups
push
dec
std
test
scas
ret
xor
cmp
jb
lods
push
sub
mov
sbb
lods
incw
cmpl
shrl
loope
insl
mov
test
xor
mov
sbb
mov
jg
add
mov
aas
xchg
aam
gs
fbld
shr
push
testb
shr
adc
bound
or
push
sahf
lret
mov
bound
or
adc
mov
mov
addb
negb
mov
shrl
lods
jge
fadd
loopne
shr
or
mov
sahf
dec
mov
inc
xor
pop
jne
outsb
mov
fdivl
mov
aam
loop
xor
cli
sub
jne
addl
rol
mov
ficoml
cmp
addb
ljmp
mov
out
jmp
or
lods
mov
fldenv
and
or
nop
mov
mov
loope
jl
dec
mov
int3
jmp
xchg
or
daa
popa
and
inc
mov
lds
cmp
jmp
lods
sbb
ljmp
jno
adc
xor
cmpb
sbb
imul
push
lret
das
pmaxub
sub
jno
daa
jo
sbb
movups
xchg
imul
mov
inc
mov
inc
test
add
adc
repz
push
ret
stc
cmp
cmp
jo
fnsave
repz
inc
or
jmp
mov
call
mov
rcll
incb
jne
testb
adc
sbb
mov
pop
test
add
add
pop
int3
sbb
les
mov
jno
jo
mov
daa
arpl
cmp
mov
int
push
or
add
test
shl
push
xor
sbbb
in
pop
in
test
adc
mov
sbb
ja
jne
dec
fld1
in
or
mov
or
cmp
or
insl
jb
dec
in
adc
shrb
adc
xor
repz
stos
or
mov
xchg
dec
outsb
cmp
es
sub
cmp
mov
pusha
xchg
adcl
inc
pop
pop
pop
bound
add
mov
cmp
add
add
arpl
int
shll
loop
call
add
cmp
outsb
test
mov
mov
int
loopne
push
xor
jne
sbb
lods
or
xlat
jmp
sar
cmp
sbb
out
add
push
adc
sub
jo
sbb
jmp
sbb
ds
faddl
adc
loope
leave
mov
adc
pop
sbb
mov
aam
rcrl
add
ror
lcall
cmovl
loope
test
jns
sbb
jmp
inc
adc
repnz
pop
jmp
ret
or
loopne
gs
xor
push
and
mov
fidivrl
dec
mov
insl
pop
jno
add
in
repz
xor
mov
fs
pop
ljmp
ljmp
lahf
hlt
push
lea
add
leave
sar
mov
and
mov
add
pusha
or
rorb
test
sbb
lret
push
addr16
jp
cmpl
push
sbb
cltd
pushf
cmpsb
push
pop
ret
and
loopne
jo
push
dec
push
and
add
dec
cmp
pop
mov
js
sbb
pop
pusha
cmp
or
xor
push
push
ds
xor
mov
or
and
dec
adc
test
xchg
push
inc
mov
sahf
add
addr16
mov
fsubl
ret
mov
add
outsl
adc
call
mov
mov
andl
mov
shl
outsb
jmp
and
jae
pop
xor
cmc
imul
sbb
adc
movsl
mov
test
xor
add
or
popa
xchg
movb
jmp
bound
dec
inc
outsb
push
push
cmp
dec
hlt
sub
inc
fs
or
jnp
leave
xor
add
or
inc
add
and
add
cmp
test
data16
pop
jnp
fs
add
cmpsb
sbb
jo
imulb
sbb
mov
add
test
mov
loopne
out
jno
add
mov
js
sbb
cmp
test
jne
lods
test
ret
cmp
shll
lods
dec
cmpsb
sbb
outsl
scas
test
imul
daa
sub
cmc
scas
or
cmp
pusha
dec
iret
test
add
je
out
push
mov
pusha
insb
lods
push
jg
sbb
mov
mov
incb
mov
mov
inc
mov
sbb
adc
mov
push
mov
int3
or
dec
dec
dec
push
movsb
mov
or
xor
jae
mov
inc
inc
mov
cli
or
shufps
mov
pop
mov
push
addl
insb
jo
aad
gs
xchg
faddl
lret
cmp
dec
add
jo
pop
mov
and
or
cwtl
sub
insb
pushl
push
inc
dec
shlb
jbe
fs
pop
loopne
popa
sbb
adc
fiadds
into
mov
stc
cltd
jg
sbb
mov
pop
data16
addb
mov
test
sub
and
in
dec
mov
ljmp
into
sbb
movsl
jne
sbb
mov
stc
cmp
loope
cmp
jmp
inc
add
sbb
sti
leave
add
push
or
sub
lock
lods
shlb
es
and
lds
fisubrs
mov
pusha
mov
add
adc
mov
call
lret
jmp
inc
mov
nop
sub
rcrl
outsl
fucom
lret
icebp
sbb
jae
push
imul
lods
cmp
cmpsl
sub
adc
xchg
lcall
mov
pop
cmp
das
and
das
adc
cwtl
inc
je
jp
rdtsc
cmpb
lret
and
and
or
xchg
cmp
aam
sub
outsl
nop
das
inc
sbb
test
or
mov
lock
pop
adc
xchg
stos
test
push
and
icebp
lds
xchg
and
inc
ss
scas
roll
sbb
ss
int3
xor
xor
inc
xor
adc
add
cmpsb
adc
adc
inc
and
adc
xchg
inc
pop
shlb
fs
push
push
mov
mov
mov
and
je
pushf
push
xchg
pop
or
pop
cmc
fcompl
pop
in
or
jmp
mov
and
cmp
adc
mov
add
mov
mov
hlt
loop
mov
pop
inc
call
pop
xor
mov
je
cmp
pop
adc
cmp
fiadds
inc
mov
jmp
imul
movsb
fiaddl
inc
cmp
decb
les
jmp
addl
js
pop
sbb
movb
jmp
stos
adc
inc
aaa
push
inc
pop
lock
ljmp
or
iret
and
ljmp
jb
les
les
add
js
jge
inc
xchg
inc
arpl
shlb
adc
or
push
inc
push
dec
cmp
mov
sub
push
push
icebp
mov
mov
or
push
dec
sarb
mov
inc
jmp
xor
fwait
sub
jo
mov
add
add
adc
stos
test
pop
cld
not
ret
adc
gs
cmp
adc
sbbb
xchg
data16
andl
arpl
inc
dec
lock
jb
sub
xchg
fsub
add
mov
add
lcall
ret
inc
or
cmp
add
idivb
pop
les
add
pop
adc
push
test
insb
pusha
or
and
rcrl
mov
loop
push
andl
icebp
xchg
loopne
sub
inc
in
in
push
mov
adc
xor
jo
enter
mov
adcl
cwtl
jl
push
pop
cwtl
decb
int
push
jne
push
aas
out
je
mov
lds
inc
pop
xchg
mov
or
enter
adc
call
or
shlb
pop
fdiv
push
jmp
push
std
lock
insl
mov
push
lock
or
pop
push
sub
jne
inc
imul
or
mov
adc
mov
xbegin
mov
adc
fcomps
std
lea
adc
rclb
jmp
shrb
mov
pushf
or
imul
or
push
pop
inc
sarb
imul
add
adc
in
imul
dec
or
xor
adc
and
pushl
add
fadds
fwait
or
cmpb
pop
out
mov
or
jne
mov
clc
push
mov
adc
xor
inc
mov
mov
dec
mov
or
popa
push
push
nop
rorb
xor
dec
je
test
mov
jmp
mov
in
pushf
or
orb
push
outsb
ss
add
cmp
sub
pop
and
mov
cld
cwtl
scas
sbb
adc
popa
or
dec
pusha
outsl
xchg
pop
inc
pusha
jne,pn
sbb
inc
or
and
loopne
jl
push
in
adc
add
push
insb
ljmp
adc
and
lahf
push
sub
je
icebp
cmovnp
cmp
pop
push
sbb
rorl
addl
daa
pop
andb
jbe
xorl
jg
mov
pop
jo
jp
inc
cmp
roll
das
out
sub
mov
fwait
xor
mov
and
inc
xchg
or
dec
bound
aam
or
pop
inc
imul
and
push
add
mov
dec
mov
jb
ljmp
xchg
inc
stos
sub
call
inc
lock
push
push
scas
ss
jmp
adc
clc
jnp
cmp
or
pop
adc
lock
jo
pushf
pusha
lods
cmp
push
xor
in
mov
inc
and
or
inc
out
movsl
out
mov
or
adc
fwait
js
pop
nop
adcl
shl
lcall
cmp
push
ret
mov
in
test
mov
push
clc
call
jne
push
inc
jecxz
lea
adc
mov
push
sbb
mov
sbb
movsb
xor
cmp
mov
mov
push
jnp
daa
mov
push
push
or
pop
je
or
inc
cmp
inc
xchg
into
adc
cmp
mov
movsb
push
sub
xchg
push
orb
mov
pop
cld
imulb
mov
sbb
pop
jno
add
cmp
and
inc
xchg
ja
outsl
in
cmp
lahf
daa
cmc
mov
cmp
or
mov
sub
fisttpll
imul
imul
mov
jne
stos
out
roll
pop
push
lcall
add
stos
pop
add
test
jle
icebp
pushf
jle
mov
mov
mov
test
jno
push
adc
movsb
xor
sbb
jns
adc
clc
cltd
inc
jg
cmp
pushl
mov
xor
scas
and
mov
dec
sbb
in
test
rclb
rcll
sbb
push
nop
mov
loop
ljmp
and
dec
dec
pusha
jge
adc
adc
aam
add
sub
push
or
daa
daa
daa
adc
ss
pushf
fsubrl
and
and
sub
pushf
pushf
pushf
xor
cmp
inc
and
cmp
mov
dec
push
dec
cmp
push
pop
add
dec
dec
fs
dec
dec
je
jl
in
sbb
sbb
xchg
dec
xor
mov
and
pushf
mov
movsb
test
cltd
fs
dec
rol
and
dec
es
shlb
cltd
fidivrl
cltd
fs
dec
in
in
fs
dec
es
hlt
enter
clc
cld
add
sbb
dec
jb
or
gs
xchg
dec
cmpsb
dec
adc
cltd
fs
and
cltd
fs
sub
xor
fs
dec
cmp
push
fs
sub
dec
dec
xor
and
mov
pop
loope
xchg
dec
pop
pusha
sbb
pop
pop
dec
jg
pop
mov
add
movsb
dec
add
test
mov
inc
lcall
enter
mov
push
rorl
mov
xchg
or
imul
nop
adc
inc
lcall
cltd
nop
pushf
and
imul
inc
shlb
or
sub
cltd
nop
enter
pusha
jg
dec
enter
pop
push
adc
and
outsl
loope
js
ret
andl
inc
shlb
push
add
mov
or
faddl
push
or
dec
and
pop
add
nop
sbb
mov
fisubs
call
and
mov
and
aaa
je
adc
add
repnz
jnp
shll
dec
xor
adc
or
jnp
xchg
adc
add
jmp
dec
jb
add
pop
clc
sbb
test
js
test
btc
adc
or
xor
fisubl
xor
fiaddl
xor
mulb
shll
and
shll
sub
push
aad
clc
incb
sub
or
jmp
inc
and
mov
add
jl
and
jecxz
imul
add
or
fiaddl
loope
out
movhps
cli
xor
sub
aaa
enter
jge
je
mov
mov
flds
and
pop
adc
pusha
mov
pusha
loope
pop
sub
jmp
sbb
ficoml
fstp
ds
push
xchg
inc
pusha
fldl
cmp
sub
ret
adc
cld
pusha
jg
testb
in
mov
or
add
mov
out
test
fisttps
loopne
sub
mov
and
sbb
sub
push
and
or
jle
outsb
fs
testl
dec
or
adc
imul
push
and
or
push
or
lds
mov
flds
fstps
jmp
fisttpll
xorb
ljmp
hlt
adc
inc
in
outsl
push
jbe
je
adc
neg
ss
push
sbb
push
addl
in
adc
xor
test
cmp
sbb
sar
push
inc
call
xor
push
aaa
sbb
out
xor
add
pop
rolb
dec
jmp
sub
sub
inc
dec
push
in
jmp
sub
push
mov
loopne
fldcw
inc
test
into
adc
pusha
hlt
movsl
sub
imulb
mov
rorb
inc
add
bswap
and
mov
and
mov
adc
add
rolb
repz
add
push
mov
or
je
inc
rcll
sub
cli
repnz
xchg
mov
jae
es
xchg
pop
ss
shrl
addb
dec
push
push
inc
mov
nop
loopne
or
jle
push
pop
jmp
pop
add
pop
dec
cs
icebp
add
enter
lcall
cmpsb
mov
sbb
and
push
pop
inc
lea
nop
cwtl
addr16
clc
pop
mov
jle
push
add
jns
jnp
mov
and
pop
mov
lret
add
fs
xchg
repnz
aam
add
inc
inc
mov
add
mov
and
test
dec
pop
cmp
je
add
jl
xor
mov
jns
add
or
scas
test
rcrl
cld
sbb
hlt
rorb
inc
pop
cltd
and
sahf
into
es
pushf
sub
lock
pusha
ds
and
or
loope
or
out
sub
mov
fstpl
lods
pop
imulb
jno
xor
inc
and
xor
push
add
or
add
add
es
das
add
or
sub
das
jo
fmul
jo
sub
pop
lods
lea
in
popa
xor
sub
lock
mov
rolb
add
test
sub
pushl
roll
xchg
mov
int
xor
jbe
push
das
adc
inc
addr16
mov
imul
jne
adc
adc
mov
or
jl
push
jnp
add
andl
jne
je
insl
rorb
lret
adc
adcb
cld
pop
test
dec
mov
sub
mov
add
rcrl
shufps
push
xchg
rorb
jge
in
jecxz
clc
lock
or
sbb
fstpl
add
push
mov
and
fsubs
into
pop
add
mov
jmp
dec
xor
mov
sbb
test
and
sub
or
dec
out
fld
in
push
rcl
ljmp
pop
add
push
xor
test
stos
test
pop
and
mov
icebp
das
fstps
loope
mov
or
or
lcall
push
or
push
pop
aas
adc
push
mov
push
cmc
in
add
or
push
xlat
scas
movsb
ret
and
jo
es
sub
push
push
push
test
pop
push
inc
push
pop
dec
ljmp
adc
fnstsw
movswl
lret
sbb
loop
inc
loopne
and
mov
int
sub
rorb
data16
into
aaa
or
insl
or
push
mov
mov
xchg
cwtl
or
sub
or
aam
test
fsubs
ret
ja
fwait
sbb
adc
fcoml
nop
jp
lods
ret
sbb
imul
jae
sti
jmp
addl
sbb
je
scas
xsaveopt
jne
mov
add
sub
or
test
andl
or
jmp
and
add
adc
addb
inc
adc
or
loop
mov
sbb
fld
xlat
xchg
or
pusha
or
ucomiss
mov
shl
lock
mov
add
inc
arpl
int
adcb
push
ja
mov
mov
lock
and
ja
sub
inc
or
push
pop
int
and
adc
ret
in
jo
imul
or
jae
nop
lret
je
jle
loop
adc
xor
decb
add
sti
jbe
push
xchg
rorl
js
adc
mov
sti
std
test
or
add
loope
or
push
or
outsb
dec
fldenv
add
push
or
sub
adc
cmp
jbe
jb
adc
mov
dec
imul
sub
ss
push
or
outsb
add
jecxz
sub
mov
cmp
into
jne
mul
pop
test
jbe
jl
cmc
mov
mov
lock
stos
jmp
stos
pop
pop
fs
and
dec
insl
push
in
inc
cli
js
cmp
movb
pop
add
lods
rolb
adc
cwtl
xor
or
cmp
push
mov
lret
inc
movb
rolb
ljmp
not
test
je
jl
inc
pop
repz
outsb
dec
pop
pop
and
mov
out
sbb
mov
inc
adc
iret
and
insl
push
jbe,pt
dec
mov
add
push
outsb
int
or
or
cmp
sbb
sub
adc
loopne
insb
jmp
inc
pop
jae
add
lret
mov
xchg
pusha
add
sahf
jns
shrb
and
sarb
mov
mov
pop
test
mov
or
jge
je
inc
mov
inc
or
or
or
jp
inc
stos
inc
sub
or
add
mov
pusha
rclb
pop
rorl
cmp
loopne
push
incb
out
and
dec
inc
pop
mov
loopne
pop
popf
jb
mov
and
push
ds
push
or
out
inc
popf
and
dec
sarb
orl
jno
fs
sub
pop
and
ret
cmp
mov
or
icebp
pop
mov
xor
sbb
adc
fsubr
jnp
push
inc
lods
sbb
test
push
icebp
add
dec
clc
xchg
andl
inc
aas
adc
xor
lcall
cmp
mov
mov
mov
jmp
pop
inc
xor
add
add
incb
enter
jns
add
sub
cmp
sbb
dec
cmc
hlt
push
aas
mov
pop
rorb
cmpl
and
movsl
out
cmp
xor
clc
add
xorl
loopne
sub
popa
mov
in
add
adc
lock
into
addb
fiadds
test
iret
and
mov
and
shrl
xor
in
add
pop
mov
dec
lods
rorl
enter
xchg
dec
or
fiaddl
pop
lock
pusha
ficomps
dec
or
nop
loope
dec
push
lret
jne
and
and
mov
cs
cltd
mov
adc
and
push
sub
pop
push
push
add
les
or
or
leave
add
inc
push
pop
xlat
dec
jecxz
adc
jne
sub
mov
or
inc
outsb
and
stc
pop
jne
cmp
and
xchg
add
jb
mov
inc
mov
test
inc
mov
mov
rorl
mov
sbb
into
repz
xchg
out
add
xchg
jo
or
mov
scas
cmp
mov
cmp
insb
inc
cs
or
or
jmp
cmp
je
or
out
mov
dec
lcall
mov
cmp
pop
jne
dec
mov
inc
subb
inc
mov
jmp
and
sub
fisttps
lea
inc
jp
arpl
mov
add
and
inc
leave
into
add
fiaddl
test
add
adc
or
push
inc
cmp
xor
in
inc
adc
mov
add
adc
push
pop
xchg
xor
mov
adc
js
dec
sbb
fadds
sahf
jne
xlat
je
imul
outsb
stos
fdivs
or
add
xor
pop
jno
ffreep
push
pop
sbb
fstl
decb
sub
mov
clc
inc
add
aas
sub
outsb
pop
lcall
pushf
xchg
pop
and
lds
cld
mov
inc
or
xor
movb
add
dec
ret
pusha
loopne
xor
and
cli
jmp
sub
add
mov
insb
sbb
je
pop
adc
cmpsb
dec
push
sub
ret
mov
cld
sbb
push
neg
movb
xchg
mov
enter
jp
xchg
dec
or
add
add
add
sbb
insb
add
push
sbb
rclb
jmp
lcall
psraw
adc
cmp
ret
or
pop
inc
mov
adc
adc
dec
sbb
pusha
inc
jg
shlb
iret
ret
jmp
add
and
scas
jmp
mov
aam
outsb
or
mov
rcll
pop
in
movsb
loope
movsb
push
push
adc
or
in
shlb
pop
dec
lret
cmp
or
mov
gs
mov
push
jmp
and
xchg
mov
out
pop
xor
bnd
inc
and
push
fadd
repnz
mov
push
test
xor
into
jge
inc
stos
adc
adc
and
call
add
mov
fdivrs
or
mov
add
lcall
xchg
sahf
xchg
adc
jnp
icebp
movsl
cld
push
and
or
jne
xor
rcll
test
out
ret
xor
sub
idivb
ss
push
add
pop
and
xor
test
enter
clc
and
add
mov
lahf
test
push
js
sub
ret
scas
dec
and
add
insb
movb
and
mov
mull
xchg
xchg
inc
popf
neg
sbb
mov
stos
push
and
adc
fs
ret
bound
shll
dec
jo
bound
xor
xor
sub
or
cmc
add
pop
and
call
fnstcw
xor
mov
jb
stos
sub
add
pmaxub
add
add
pop
int
mov
wbinvd
divb
nop
push
lcall
dec
sbb
and
sub
sbb
cmp
mov
rol
fadds
adc
stos
pusha
inc
xor
ret
cmp
dec
icebp
xchg
cli
fs
cld
add
hlt
shrd
sbb
cltd
addl
inc
jge
sbb
clc
dec
leave
or
cld
xlat
mov
mov
add
dec
jmp
mov
cmp
ds
sub
pop
adc
pushf
jp
test
or
rorl
push
ljmp
test
roll
pusha
sbb
mov
lret
jo
fmulp
rorb
push
and
imul
sbb
js
jg
mov
or
sarb
jmp
adc
cwtl
shl
fimull
jl
inc
pop
clc
pop
mov
xchg
rolb
jne
sbb
mov
push
lock
ljmp
or
add
shlb
adc
leave
jae
fiaddl
pop
or
or
sbb
lock
roll
cmp
and
and
lods
ja
sahf
frstor
es
mov
mov
or
or
movw
push
sbb
add
sbb
pop
lcall
inc
jnp
ss
jmp
lock
mov
push
inc
sahf
or
push
mov
enter
jns
neg
call
addr16
or
ret
aaa
add
andb
pop
mov
in
or
mov
push
add
adc
xchg
sbb
repnz
je
add
or
aad
fstps
mov
dec
jbe
jl
into
rorl
cltd
inc
dec
mov
push
sbb
xchg
cmp
mov
jmp
or
sbbb
mov
jne
push
cmp
nop
cmp
addl
int
xchg
pop
aam
sub
dec
sub
cmp
leave
xor
enter
jle
in
push
push
orl
dec
out
mov
cld
jl
loopne
jge
push
inc
js
inc
or
mov
and
add
popf
jmp
xor
movsb
add
mov
ds
fxch
in
pop
or
or
pop
pushw
loopne
jne
cmpsl
imul
cmpsb
mov
je
inc
je
pusha
mov
addr16
xor
sub
sbb
pop
cmp
test
aaa
and
test
or
push
cmpb
add
sbb
push
add
or
inc
mov
aam
addb
pop
arpl
cmp
or
dec
jb
add
andb
imul
out
and
sub
adc
pop
xchg
cmpb
jne
mov
add
jp
testl
cwtl
push
xchg
sarl
insb
ret
push
cmp
add
hlt
lea
sbb
or
adc
bound
popf
pop
aam
dec
cltd
loopne
cmp
add
push
mov
adc
sbb
je
pop
push
add
hlt
ja
in
push
push
sbb
popl
add
lcall
sbb
xlat
aam
cmpsl
mov
test
sbb
inc
jmp
cmc
cmp
xor
add
out
inc
or
dec
inc
jne
cmp
add
sbb
adc
cld
mov
push
push
jmp
gs
and
leave
mov
inc
jmp
adc
test
adc
xchg
aam
add
xor
fmull
adc
fidivrs
add
cmp
nop
fidivl
mov
aam
dec
sub
sbb
xchg
adc
xorl
sub
sub
cmpl
xor
rclb
pop
push
or
push
sbb
insl
sarb
adc
leave
xchg
push
mov
mov
pop
add
dec
ljmp
aas
mov
jl
cmp
inc
dec
fiaddl
jb
pop
data16
xor
int
push
pop
mov
sub
je
dec
je
mov
push
push
jmp
or
jmp
sbb
cmp
call
adc
int
in
repz
and
sbb
pop
ret
or
or
aad
sbb
bts
xor
sahf
or
int3
or
push
xchg
cs
xorb
and
or
dec
xor
push
popf
add
jne
adc
adc
add
ds
flds
ljmp
or
sbb
jnp
int3
or
sub
sbbl
add
pop
mov
adc
add
or
mov
ss
dec
into
sub
xor
inc
andb
xor
inc
sub
jno
lret
or
dec
mov
and
aas
or
mov
xor
pushf
and
insl
add
sbb
fstl
int3
repnz
xchg
add
in
pop
sub
mov
rorl
std
inc
or
or
ljmp
dec
cmp
clc
shr
add
or
jg
mov
shr
or
mov
loop
mov
push
push
adc
test
and
add
mov
sbb
notb
lock
leave
mov
mov
add
lods
lods
add
pop
cmp
leave
inc
add
add
jl
in
sbb
cmp
dec
xchg
mov
or
arpl
inc
addl
inc
fisttpl
mov
add
inc
inc
lds
adc
xor
in
inc
call
adc
gs
mov
lea
cwtl
subl
shll
cli
cwtl
sub
dec
mov
mov
test
mov
adc
mov
aam
cmpsb
and
add
lds
loope
xchg
adc
mov
adc
lock
icebp
sbb
ss
and
xor
push
loope
clc
mov
andb
mov
add
sub
cli
jne
mov
sbb
dec
roll
incl
cmpsb
or
xchg
or
inc
mov
shll
in
mov
or
fmull
enter
or
addl
pop
add
lds
leave
nop
sub
jmp
adc
cmpsl
xchg
fwait
push
inc
test
mov
pop
and
lea
cli
popa
cwtl
cmp
pop
or
in
subl
lods
test
lret
testb
dec
jo
popa
divl
inc
cmp
adc
dec
xchg
stc
sub
add
mov
add
dec
pop
add
sbb
or
mov
and
jge
jo
or
sbb
fs
inc
inc
sub
test
jle
cli
add
xchg
mov
add
dec
sahf
sub
inc
sbb
pop
lret
leave
shrb
aaa
xchg
aad
outsl
dec
dec
outsl
inc
inc
push
xor
inc
xor
je
clc
and
mov
js
or
cmp
sbb
fistpll
push
pusha
inc
adc
and
scas
add
mov
aam
sbb
add
pop
je
sbb
mov
ret
sub
add
fmull
mov
push
add
movsb
xor
sbb
hlt
sub
jno
nop
mov
je
ss
push
add
inc
cmp
pop
inc
test
ds
out
sbbl
jmp
pusha
lea
imul
into
xor
or
cmp
dec
sbb
repnz
popf
addb
pop
leave
cmp
mov
enter
xchg
in
mov
cmp
jle
xchg
pop
mov
inc
and
push
popf
add
out
movsb
adc
cmpsb
sbb
bound
ds
fnsave
jmp
sbb
xor
cmpb
sub
cmc
cmp
les
push
incl
out
xchg
adc
push
mov
stc
push
add
inc
jns
push
in
cmp
add
push
imul
ficoml
orb
mov
aaa
jne
cmpsb
add
push
ret
sarl
sub
jmp
rcrb
enter
cmp
jne
imul
inc
dec
add
jbe
call
adc
rorb
push
cltd
or
push
rcrb
fprem
pop
sbb
out
roll
leave
add
mov
not
je
mov
iret
adc
mov
mov
inc
mov
xchg
pop
pop
adc
bound
rolb
call
movsl
sti
lods
pusha
push
pop
jb
loopne
adc
int
cmp
mov
js
add
popa
sbb
mov
or
xor
pop
inc
add
scas
lea
mov
push
icebp
lar
adc
lock
push
neg
neg
sbb
sub
jns
sbb
inc
sbb
or
or
enter
sbb
add
push
inc
and
fsts
pop
mov
icebp
sbb
push
and
and
subb
mov
dec
jns
lock
cmpl
pop
jbe
push
mov
int3
xor
adc
or
jae
lods
rcl
ljmp
in
lock
shr
sub
adc
std
arpl
push
idiv
and
maskmovq
testl
clc
add
push
roll
inc
add
insb
sbb
icebp
fmulp
dec
or
add
pop
pop
lods
aam
stos
jae
adc
dec
lahf
push
test
dec
push
add
sbb
mov
call
je
push
inc
cmp
jbe
pop
inc
xor
aas
orb
pop
cli
hlt
adc
and
aam
shlb
or
push
rclb
adc
rcl
inc
push
outsb
or
inc
inc
cmp
nop
add
into
paddusb
jns
mov
mov
and
ljmp
nop
cmp
movsl
iret
and
mov
incl
cs
ljmp
cld
inc
ss
dec
out
aaa
dec
roll
es
cmpsb
jnp
daa
lods
push
movsb
adc
jp
push
out
cld
mov
add
xchg
enter
pop
adc
inc
jmp
sub
inc
add
js
mov
subl
ret
cmp
mov
add
pop
fs
xchg
cmp
test
mov
loopne
adc
es
mov
inc
xor
and
aas
out
jmp
jb
cmp
ja
add
cmp
adc
cmp
jne
mov
sti
dec
shll
leave
adc
mov
sbb
add
jl
pop
pop
mov
enter
cli
fiaddl
sbb
adc
sbb
inc
xchg
lret
push
and
imul
test
test
aas
sti
pop
dec
insl
cs
push
movb
jmp
or
mov
pop
mov
iret
cmp
pop
and
test
push
subb
xchg
ret
fists
and
movl
push
inc
int
add
rcrb
fldl
pop
mov
into
testb
sbb
pop
cmp
mov
pop
lods
sti
scas
stos
mov
test
mov
idivl
sub
andb
and
xorb
nop
or
dec
daa
ror
push
add
adc
add
sbb
cmp
mov
pop
pop
jp
leave
adc
shr
rcrl
inc
imul
lea
sar
pop
or
gs
into
movswl
data16
imul
push
ljmp
cwtl
sbb
mov
mov
mov
inc
xorl
stos
dec
mov
add
imul
mov
jbe
push
push
ret
and
jl
inc
mov
jnp
or
dec
jle
repnz
lcall
mov
mov
mov
mov
and
and
lea
inc
fisttpll
pop
xor
adc
jecxz
imul
call
xchg
test
dec
jmp
add
loopne
dec
rorl
inc
testl
aas
lods
cmpsb
mov
mov
outsl
push
adc
pop
rorb
lods
xor
inc
mov
les
pop
les
dec
or
or
cltd
data16
xchg
dec
push
sub
shrb
into
movsb
imul
cmp
lods
shl
mov
movsb
sub
pop
out
data16
xchg
mov
pusha
mov
jl
pop
aaa
dec
sti
push
lods
and
rorb
jg
jle
cmp
lcall
shll
mov
add
shr
and
ret
pop
or
and
rorb
pop
negl
sbb
push
lret
cmpsl
mov
mov
cmp
and
inc
mov
jle
cwtl
shrl
cmpsl
jne
test
pop
shr
or
mov
dec
mov
pop
jp
jmp
nop
sahf
jnp
lock
dec
and
jnp
repnz
sub
push
testb
dec
cli
cli
inc
cli
and
cmp
dec
dec
dec
movsl
test
and
movsl
or
jge
sub
cmpsl
or
cli
adc
and
ficompl
ret
mov
dec
xchg
and
outsb
mov
push
fidivl
fldenv
enter
mov
mov
insb
movsl
jmp
mov
dec
xlat
mov
xor
push
mov
dec
sbb
add
push
mov
or
pushw
mov
loop
out
jecxz
xchg
xchg
jge
out
adc
and
mov
pop
mov
dec
mov
dec
movsl
and
daa
adc
sbb
push
cli
or
push
mov
inc
shlb
fdivrs
aam
xchg
pop
xchg
add
jbe
dec
sub
sbb
sbb
shrb
cmp
add
push
adc
xchg
rorb
or
sahf
mov
sbb
fcmovu
add
push
mov
sbb
insl
inc
rcrb
push
mov
int3
jg
add
xchg
add
idiv
inc
add
adc
jge
adc
jg
or
adc
orl
inc
push
in
out
or
jge
add
mov
or
cld
add
jne
xor
push
jns
fnsetpm(287
loopne
mov
or
pushf
pusha
mov
xchg
ljmp
cwtl
sbb
sub
setae
mov
idiv
psubq
sbb
movb
dec
inc
cmp
jle
push
outsb
push
aad
pop
outsb
call
inc
lods
gs
add
lods
adc
in
mov
rcrb
push
shr
pop
inc
rcrl
sub
fcoms
xor
fiadds
push
mov
insl
call
mov
imul
call
xchg
frstor
mov
pusha
lea
push
and
pop
lcall
inc
xor
push
in
fmulp
mov
sti
mov
add
popf
xor
inc
les
movsb
out
ds
loop
inc
addr16
sbb
imul
push
xorl
inc
js
add
sub
lea
fnsave
mov
sahf
mov
and
dec
int3
push
add
test
call
add
xor
add
add
sub
or
into
or
mov
inc
ljmp
jmp
mov
rcrb
jmp
cmp
jge
or
lahf
sub
cmpb
or
add
dec
cmp
imul
inc
dec
add
add
fadds
inc
les
mov
movsb
pop
ret
jp
jne
dec
sarb
or
adc
cmp
in
out
mov
mov
lret
mov
add
push
mov
nop
adc
test
mov
mov
mov
or
cmpsl
mov
dec
adc
and
ret
lcall
add
push
mov
mull
or
push
push
pop
rorb
adc
or
mov
or
add
rcrl
xchg
add
pop
jne
or
push
pop
scas
je,pt
sbb
ret
mov
cld
mov
ret
or
movsl
add
xchg
adc
or
xchg
add
test
fistpl
mov
mov
iret
xchg
xchg
lret
lret
into
pusha
inc
cli
xorl
and
pop
pop
fidivl
sbb
ret
xchg
mov
loopne
sahf
inc
ret
or
mov
sbb
loopne
inc
add
scas
rolb
imul
or
or
jo
dec
push
add
add
push
gs
je
das
push
mov
jae
mov
pop
or
pop
add
insl
add
adc
cmp
jne
and
mov
loope
test
add
es
out
and
push
cmpb
or
ret
outsl
mov
inc
add
movsl
ret
flds
jo
loop
clc
mov
mov
test
sbb
shll
push
scas
orl
mov
inc
subl
add
movb
daa
mov
loopne
mov
rorb
cmp
sti
loopne
sbb
repnz
test
adc
int
add
or
adc
into
mov
xchg
into
mov
mov
sbb
and
sbb
leave
repz
inc
jg
into
into
dec
inc
or
adc
sarb
push
pop
loopne
ficoms
and
mov
shlb
or
sbb
stos
push
lret
mov
ret
xor
mov
push
lcall
cmp
out
adc
push
into
enter
movsb
and
mov
ficomps
test
mov
and
mov
jp,pn
and
cmpsb
leave
adc
sub
lock
roll
xlat
insb
mov
cmpsl
fsub
movsb
lret
ljmp
mov
out
adc
cmp
pop
mov
add
loop
add
jno
loopne
mov
lahf
xchg
mov
or
enter
xor
scas
sub
sub
push
lock
scas
outsb
pusha
outsl
adc
rcrl
in
ret
jl
add
testb
add
je
jnp
sbb
popl
loope
jo
div
jle
rclb
sbb
add
jo
xorl
cmp
je
dec
mov
mov
jb
into
cmp
je
mov
or
mov
push
shl
pop
adc
jg
or
or
cmp
jbe
dec
sbb
cmp
sub
jmp
push
mov
movsl
sbb
sub
fisubrl
pop
lea
inc
pop
push
leave
mov
enter
pop
mov
ret
mov
into
das
add
stos
les
and
gs
and
inc
popa
test
dec
aam
add
scas
mov
fcompl
adc
loopne
jp
or
cmp
add
scas
pushl
mov
and
push
push
mov
push
mov
aam
movsb
mov
popf
fsubs
fmul
adcb
push
or
pop
cmpl
ret
sahf
mov
lret
xor
jb
pop
jl
rclb
cmpb
scas
adc
aam
ljmp
insb
or
push
jmp
popf
inc
push
aaa
sbb
dec
js
add
mov
movsl
mov
or
pop
cmp
test
inc
mov
test
daa
fldcw
add
xchg
pop
subl
push
push
or
pop
stos
sahf
mov
inc
dec
pop
add
push
mov
mov
push
stos
and
test
inc
cmp
andl
push
loope
aaa
cmc
dec
jge
test
shlb
add
je
and
push
ret
ss
js
push
push
dec
push
pop
and
cmp
pushf
inc
dec
mov
into
pop
jo
and
mov
mov
adc
shll
mov
cmp
lods
sbb
inc
add
mov
lret
ja
test
sbb
xchg
arpl
setl
sub
insl
add
jg
push
or
call
inc
js
lea
in
cmp
push
enter
in
adc
paddd
add
lret
mov
push
mov
je
xor
shrl
push
jmp
dec
fs
movsb
fistpll
xorb
ss
mov
sub
js
push
adc
pop
xchg
jno
fmuls
mov
sbb
or
dec
sbb
inc
movsl
xchg
cmp
push
fs
iret
mov
pushf
pop
dec
cmpsl
cmpsb
xor
push
mov
push
nop
lock
sub
add
mov
inc
pushf
ss
sbb
sbb
hlt
mov
push
pcmpeqb
jg
subl
aam
mov
jnp
ljmp
jbe
clc
dec
aam
sbb
mov
pop
movsl
gs
sbb
sbb
or
dec
lods
and
mov
mov
in
repnz
test
fs
test
cmp
jmp
and
lea
add
iret
xchg
sti
push
add
push
adcl
sub
add
and
add
add
test
pop
xor
xchg
hlt
in
sub
mov
lret
add
lea
movsl
pop
cltd
rcll
push
xchg
movsb
adc
mov
or
cmp
mov
jl
push
mov
dec
cwtl
push
jmp
loope
outsb
repz
pop
sbb
scas
add
orl
nop
xchg
jmp
add
inc
and
dec
ret
add
jle
ret
cltd
mov
push
add
add
data16
insb
mov
sar
xor
push
in
adc
sbb
push
dec
push
and
lods
outsb
nop
cmp
daa
test
sub
jnp
mov
roll
ret
push
mov
inc
and
ret
cmpsl
aas
mov
pop
or
mov
add
xor
ret
add
xchg
daa
and
add
in
jnp
mov
es
aas
add
ret
stc
adc
push
pop
in
push
push
pushf
ret
sub
or
push
push
push
shlb
sub
and
ror
sbb
inc
psrad
xchg
add
or
insl
cld
mov
loopne
dec
jmp
xchg
loopne
or
movsl
popa
sbb
push
je
inc
insl
and
cmpsl
clc
pop
pusha
xor
les
lcall
pop
cmp
xor
imul
mov
cltd
addl
call
dec
inc
imul
outsl
insl
dec
or
into
inc
mov
xor
jns
adc
sbb
cmp
xor
add
adc
or
scas
arpl
je
rcrb
xchg
lock
movsl
movsl
lcall
xchg
stos
xor
sbb
addr16
adc
fisubrl
jl
push
cmpsb
clc
pop
popf
mov
and
aad
sar
rorb
fiadds
lea
lds
sbb
ror
pop
sub
add
add
push
cwtl
mov
or
mov
push
fisttps
ret
inc
sbb
sar
mov
lock
data16
xor
inc
and
jo
adc
push
add
sbb
pusha
js
xchg
adc
adc
inc
inc
js
jg
inc
dec
call
sub
pop
xchg
push
cmp
dec
int3
arpl
jo
arpl
into
mov
imul
fidivrl
cmp
ja
mov
jmp
sub
jb
lcall
inc
imul
add
xchg
jge
cmp
loope
add
lcall
jp
inc
mov
sbb
cmp
adc
mov
add
or
sbb
cwtl
repz
out
cld
sbb
push
sbb
inc
cmp
adc
jp
repnz
in
neg
push
dec
test
jg
adc
lock
imull
aas
lcall
mov
test
rorl
cmp
mov
pop
shlb
popa
ret
call
aam
into
lock
cmc
cmp
in
rcrl
addr16
popa
dec
mov
add
sbb
add
push
or
jb
repnz
jbe
inc
jo
and
test
scas
pop
add
lea
stos
dec
aas
leave
xchg
test
ret
rorl
push
sbb
sub
push
add
pop
int
gs
repnz
pusha
test
test
or
aaa
sti
mov
push
inc
inc
loopne
pop
cmp
lock
loope
cmp
nop
pushw
ss
push
and
jle
sbb
mov
das
push
or
call
mov
xchg
lods
sub
lret
mov
cmp
mov
mov
lods
pop
push
adc
rcrl
ret
cmpl
add
add
outsl
ret
cmp
int
shlb
xchg
mov
jns
mov
mov
loop
mull
in
sahf
or
or
push
in
ret
push
cmp
movsl
jne
pusha
std
inc
adc
and
ds
or
jne
inc
sbb
xchg
lds
add
retw
test
js
out
rol
aas
sub
and
inc
jbe
lds
jl
sbb
jae,pt
cmp
adcl
adc
xchg
xchg
mov
jl
inc
xchg
fwait
sub
mov
or
add
add
cmp
enter
xchg
addl
cmp
jle
push
ret
jnp
dec
sbb
mov
and
out
dec
test
inc
pop
rolb
mov
and
or
add
orl
jge
incl
addl
sub
lods
ljmp
call
xchg
imul
add
or
or
loope
sbb
fldenv
add
inc
add
test
inc
inc
or
sahf
stos
pop
add
jmp
movsl
mov
mov
jmp
mov
gs
xor
cmpsb
cmpb
push
cmp
pop
das
dec
jl
outsl
jo
roll
cltd
lods
adc
dec
popa
mov
aam
cmpl
dec
pushf
pop
adc
cmp
jae
cmp
scas
test
jle
cmp
jg
mov
rolb
or
jecxz
xchg
daa
mov
test
add
push
xchg
test
loopne
ret
inc
outsb
fcoms
fcomps
pop
mov
rcl
jnp
adc
mov
cmp
hlt
xor
cmp
fwait
and
lcall
sbb
lods
pop
out
mov
rorl
add
addr16
or
sbb
xor
ss
in
mov
sbb
dec
or
andb
andb
push
dec
cmp
xor
mov
mov
xor
loop
inc
shr
xorl
fnsave
mov
and
sub
add
into
mov
push
pop
outsb
insb
sub
fisubs
or
aam
scas
or
jg
or
and
push
popf
add
jl
scas
cmp
cmp
add
popa
xchg
je
mov
xor
dec
xchg
sbb
add
xor
jmp
outsl
sub
sub
inc
arpl
testb
inc
cltd
jp
inc
dec
dec
insb
push
mov
notl
ret
adc
std
sub
shl
add
cmp
push
into
icebp
pop
adc
adc
xor
mov
je
dec
jne
push
lds
jp
dec
ja
fadds
and
xlat
push
jmp
xor
inc
sub
dec
lahf
je,pn
adcl
fcmovnbe
fsubrl
or
push
sub
fcoms
bound
cmp
scas
mov
mov
fs
inc
cs
arpl
push
loopne
fimuls
dec
dec
jo
xchg
jns
aas
mov
in
out
bnd
pop
loope
inc
sbb
dec
adcb
inc
js
jecxz
jmp
shlb
push
in
cltd
push
cmp
in
xchg
and
and
push
push
jb
bound
stos
fs
push
lods
mov
and
jae
popf
clc
dec
push
dec
rclb
xor
jl
jecxz
jp
clc
inc
mov
add
int
push
mov
je
cmpb
sub
lea
testb
jne
add
xchg
lods
fwait
popa
int
jnp
imul
les
lret
pop
xor
ret
fcom
xor
adc
adc
or
dec
or
push
push
bound
fnstsw
notb
cmp
ret
lret
mov
sbb
rcl
imul
movsb
insl
gs
out
or
add
adc
add
cmp
leave
test
add
sahf
jecxz
rorl
stc
dec
fildl
hlt
jne
inc
xor
adc
fisttpl
imul
testb
mov
add
or
add
outsl
test
jle
insl
scas
mov
es
les
push
pop
or
xor
inc
pushf
cmp
add
add
pop
dec
push
adc
jg
js
fsubr
push
icebp
adc
inc
sbb
pop
movsl
add
lock
addb
jbe
int3
leave
das
jo
lret
jne
lock
jb
ret
sar
and
jp
lock
or
mov
mov
adc
imul
inc
cmpsl
adc
fiaddl
and
mov
ret
push
mov
sbb
mov
cmp
fnstenv
call
je
jp
mov
fsubrs
adc
call
and
jl
ficomps
push
cmp
dec
cmp
cmp
inc
jae
jb
or
sub
cmpsl
push
fcmovb
jnp
and
aaa
pop
pushf
pop
xchg
call
sbb
icebp
jne
jae
scas
push
sub
mov
add
push
inc
bound
inc
pusha
jmp
test
or
or
fwait
or
adc
jbe
xchg
pop
push
outsb
stc
rolb
pop
sti
insl
pop
dec
test
insb
and
js
sub
sub
xchg
jns
inc
cli
ret
or
mov
adc
add
sbb
mov
and
cld
add
mov
testb
xchg
testb
add
jl
outsb
adcb
mov
push
jmp
inc
ss
and
jb
je
cmp
xlat
pop
push
add
jns
jb
cmp
jbe
clc
mov
xlat
push
push
push
or
movsb
or
mov
push
mov
push
add
das
aaa
out
pop
shlb
outsb
push
cmp
add
mov
test
mov
lcall
fstpl
fstpl
pop
jmp
cli
jne
cwtl
lock
pop
pop
sbbb
add
pop
in
mov
int3
sub
mov
push
inc
sub
push
push
insl
mov
and
xor
ljmp
in
fst
push
inc
repnz
hlt
push
cmpsb
inc
mov
push
je
rcrl
mov
jb
mov
mov
repnz
sbb
xchg
add
mov
and
push
xchg
mov
fisubrl
ljmp
adc
movsl
rcrb
and
adc
dec
shlb
ficoml
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fildll
roll
shlb
xchg
fstps
mov
xor
in
xchg
rolb
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstps
add
cmpsb
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
dec
inc
adc
or
inc
enter
ret
jg
or
add
insl
add
pop
ljmp
xchg
adc
nop
mov
in
xor
adc
lock
frstpm(287
les
sub
cmp
add
xor
or
jb
sub
pop
nop
or
inc
add
pusha
insl
dec
outsb
fucomp
add
add
mov
call
or
in
inc
fs
inc
cs
fadds
pusha
cld
sub
outsl
nop
push
jne
add
iret
je
pushf
xchg
mov
mov
mov
scas
mov
add
adc
push
and
xchg
movl
xlat
dec
dec
das
pop
fisttpl
add
rorl
or
rcrl
enter
sbb
ret
push
add
inc
lahf
fdivr
sbb
and
adc
jl
inc
mov
sbbl
jno
andl
or
lock
xor
aam
adc
jge
dec
pusha
or
xchg
xchg
inc
pushf
sub
insb
adc
fcoms
xchg
or
cwtl
xchg
lret
mov
xchg
adc
or
in
inc
mov
sub
push
xor
in
test
fildl
in
adc
xchg
adc
push
mov
popa
add
stos
xlat
mov
cmp
shrl
enter
xchg
inc
xchg
push
pop
or
cmp
fwait
or
xchg
pop
es
mov
fwait
cwtl
inc
sub
cmp
rolb
xchg
or
mov
cmpb
xchg
mov
js
fdivl
sbb
cs
sub
and
push
enter
imul
call
adc
jbe
insl
les
ja
test
or
rol
push
xchg
in
adc
in
push
dec
outsb
unpcklps
cmc
sti
icebp
shlb
mov
daa
xor
cmp
mov
std
push
jno
pusha
es
fs
fs
xchg
dec
je
jl
xchg
add
ret
xor
call
adc
jb
lods
loopne
and
xlat
add
adc
adc
xchg
push
rcrl
int3
lea
cmc
rorb
call
xor
and
xor
jne
and
xchg
fmuls
in
sti
gs
pop
inc
push
lods
lods
add
scas
push
cmp
lods
push
clc
shlb
jns
adc
cmp
inc
or
xor
ret
sbb
sub
dec
test
lea
add
and
fistpll
add
jno
cmp
lock
mov
or
sbb
je
mov
stos
nop
push
flds
clc
sbb
jnp
push
cwtl
cmp
sbb
push
and
insb
fwait
xchg
adc
insb
inc
enter
aam
mov
dec
addr16
roll
add
and
sbb
lds
test
popf
lock
lock
push
dec
insl
sub
jl
dec
mov
fisttpll
pop
and
adcl
xchg
inc
je
fists
sbb
fsubrs
and
push
inc
xor
imul
and
inc
sbbl
lret
sbb
in
inc
push
mov
loopne
adc
pop
fdivl
jne
shll
shlb
mov
daa
sub
leave
and
cmp
add
or
push
subb
sbb
loopne
dec
cmp
or
mov
in
lods
push
cmp
scas
dec
or
or
add
xchg
xlat
pushf
or
lock
hlt
andb
xchg
fbld
add
adc
mov
sub
call
sub
insl
inc
push
and
or
dec
lea
dec
adc
dec
push
fdivrl
add
sbb
stos
adc
inc
fs
out
pop
inc
mov
es
dec
fs
pop
popa
and
mov
mov
and
je
push
repz
mov
addr16
fidivrl
or
shll
sbb
mov
and
imul
pop
jno
and
cmc
add
and
mov
data16
or
inc
or
call
les
and
dec
inc
mov
test
test
sbb
call
aaa
lock
mov
inc
pop
and
aad
mov
in
dec
xor
jl
adc
loope
in
fsubl
or
and
jl
movsb
addr16
adc
andl
nop
lods
jne
pushl
arpl
xchg
pop
jb
in
call
daa
pusha
and
addl
js
xchg
xchg
fdiv
mov
js
imul
jo
pop
ljmp
dec
push
add
jg
and
sbb
nop
sbb
xchg
xchg
decb
cmpsb
and
movsb
in
rcrl
in
in
jecxz
adc
cmpsb
insb
jne
shrb
mov
inc
mov
cwtl
fs
or
les
loopne
cmp
add
sti
xchg
mov
mov
jb
add
movsb
sti
push
es
and
shrb
fadds
jl
fwait
mov
adc
pop
dec
or
push
int
lea
daa
daa
cmpsl
mov
add
mov
xchg
in
add
mov
test
cmp
test
add
and
pop
inc
adc
fildl
repnz
cmp
cmp
nop
inc
or
or
xchg
dec
push
or
or
sub
or
inc
sbb
mov
sbb
enter
fwait
sbb
inc
inc
xchg
lsl
rcrl
inc
push
ret
xchg
mov
out
sbb
push
sbb
or
nop
add
or
adc
clc
sub
mov
add
mov
daa
xor
pop
nop
test
push
shll
xor
adc
leave
mov
adc
mov
imul
dec
popf
andb
filds
rcr
ret
sbb
pushf
sbb
jo
arpl
in
lea
sub
mov
sub
mov
and
rcr
mov
xchg
jne
ret
xor
sub
test
ja
imul
pop
pop
mov
mov
mov
in
mov
sub
or
add
and
cmp
movl
aam
cmp
push
adc
cmc
inc
dec
in
daa
add
ret
adc
or
repnz
iret
jl
imul
push
jge
das
rcrb
ljmp
shrb
mov
test
aad
leave
push
pushf
sub
stc
fs
adc
sub
sub
pop
or
push
sub
and
push
pop
nop
ret
cmpsb
or
call
pop
fidivl
push
push
ss
inc
stos
jecxz
das
add
movl
rorl
pop
js
jne
mov
or
pop
addr16
cmp
movsb
aas
mov
adc
ss
or
imul
mov
and
cmp
xor
insb
and
je
xchg
adc
pop
ret
push
in
test
ja
jo
adc
pop
xor
icebp
fdivs
cs
xchg
mov
cmp
cs
sub
outsb
loop
xchg
mov
xor
lock
sub
mov
popa
pop
xor
push
adc
enter
nop
and
jo
jb
jo
or
rclb
scas
push
loope
push
pop
pop
pop
add
sub
in
cltd
mov
xor
call
adc
or
push
and
adc
xchg
pop
lret
or
or
xor
or
addb
jno
xor
es
lods
das
cmp
or
or
pop
cmp
ret
jbe
fcmovu
mov
loop
div
popf
mov
add
sbb
jb
push
sbb
jno
xchg
add
adc
mov
insb
test
js
xor
push
mov
pop
mov
pushf
stc
dec
adc
cwtl
and
icebp
imul
adc
add
or
adc
push
jne
add
nop
out
or
ss
inc
or
movsl
ss
add
add
repnz
ret
cmp
int3
pinsrw
addr16
adc
dec
pop
test
int3
xor
maxps
iret
enter
test
mov
xchg
add
in
cmp
and
dec
out
jg
adc
movsl
ss
inc
dec
dec
roll
mov
insb
repnz
xlat
or
add
pop
mov
jmp
test
sarb
jnp
push
imul
add
rcr
inc
fsub
stos
push
and
insb
mov
stos
cmpsb
sbb
lock
das
xchg
or
cmp
jno
dec
orb
ss
int3
das
unpcklps
aam
adc
xchg
push
cwtl
in
mov
fdivrl
pop
xor
push
push
add
add
in
push
repnz
jl
mov
sbb
out
dec
cwtl
adc
dec
nop
pushf
mov
test
sub
rcpps
cs
adc
mov
mov
sub
inc
push
jl
popa
ret
or
in
bound
sbb
pop
lods
gs
aaa
inc
mov
lds
rcr
push
imul
fnstenv
bound
and
out
push
and
movsb
fdivr
add
sub
movsl
add
inc
roll
bound
push
adc
xor
imul
call
enter
add
fldt
mov
dec
and
and
and
inc
dec
inc
sub
mov
lret
mov
fcoml
pop
dec
aam
test
adc
jo
sub
dec
mov
nop
daa
prefetcht0
push
test
sbb
adc
mov
dec
mov
test
insl
xlat
xchg
sbb
push
cmp
inc
testl
inc
jp
dec
add
popa
xor
movsb
and
or
adc
sahf
cmp
pop
inc
in
ss
and
add
sbb
xorb
dec
int
or
push
imul
pinsrw
jne
xchg
mov
nop
notb
dec
xor
das
std
pop
inc
cmp
dec
out
mov
test
push
dec
add
in
dec
jns
insb
cmp
decl
imul
cmp
dec
shl
adc
arpl
cmpsb
and
mov
xchg
push
cs
or
jnp
js
lods
repz
rolb
push
sub
call
leave
aam
inc
cmp
inc
adc
nop
pop
xor
add
jge
and
jb
add
or
fdiv
aad
ret
xchg
mov
dec
sub
rolb
sbb
in
sbb
cmc
mov
sub
push
adc
icebp
pop
inc
arpl
leave
aaa
jmp
test
inc
jb
fildll
xor
xchg
pop
call
adc
addr16
arpl
cs
cmpsl
sub
dec
xchg
add
cmpsl
je
inc
sbb
xor
or
mov
xlat
xorb
cmp
dec
xor
rorl
pop
rclb
dec
int3
inc
aam
popa
scas
inc
sub
or
insl
push
aam
sub
test
push
mov
jnp
dec
call
in
mov
lock
movsl
xorl
cmp
repz
test
or
push
dec
lods
adc
ja
add
xchg
xchg
and
mov
and
cmpsb
or
hlt
jne
sbb
inc
push
mov
adc
cmp
sbbb
int3
gs
rclb
cmp
sub
enter
jecxz
cmp
iret
dec
lcall
jb
imul
add
add
aam
mov
cmp
dec
jg
jo
add
fcomp
sbb
cmp
mov
lds
divl
in
xchg
add
lods
ret
mov
push
jecxz
aas
pop
fdivr
dec
arpl
or
xor
mov
dec
xchg
test
jne
mov
mov
daa
push
adc
sbb
pusha
xor
cmpsl
and
mov
and
stos
lods
in
jne
dec
mov
movups
sub
sub
mov
sbb
adc
aas
sbb
or
js
mov
push
dec
xchg
mov
adc
jb
dec
adc
loopne
or
push
test
push
pop
sbb
fmuls
daa
mov
cmp
das
mov
outsb
movsl
lods
lods
test
rolb
jns
clc
clc
mov
ret
cmp
rolb
mov
push
scas
or
dec
repz
cwtl
js
pusha
add
js
popf
movsb
pop
dec
push
imul
nop
out
and
xor
or
and
lods
dec
jnp
sub
and
and
add
push
mov
fstl
and
rcll
leave
push
adc
aam
fstpl
or
sub
and
push
pop
imul
mov
es
sbb
add
adc
or
xchg
mov
cwtl
push
test
sbb
test
js
lods
adc
enter
pop
ds
inc
fisubl
and
sub
push
in
arpl
ljmp
pop
nop
mov
fnstsw
test
aam
repnz
bound
les
xorl
sub
fcoml
jne
xchg
sbb
sbb
shll
rol
mov
dec
leave
and
int3
mull
mov
iret
push
inc
xchg
cmpsb
push
or
or
sbb
fsubs
adc
insl
pop
push
sbb
fdivr
call
leave
loopne
push
iret
lods
test
or
xchg
sbbl
mov
nop
inc
xor
xor
fs
es
push
sbb
orb
adc
push
or
es
adc
inc
cmpsb
sbb
adc
or
aam
and
inc
mov
imul
cmc
mov
pop
push
mov
stos
push
jmp
dec
sbb
sbb
lcall
sbb
jns
pop
les
fucomi
loopne
lds
insb
stos
sbb
jp
notl
neg
mov
sahf
rorb
adc
fs
push
insl
mov
adc
es
jbe
adc
fs
xor
cmp
cltd
fs
dec
sbb
inc
fs
dec
cmp
push
nop
sub
pop
inc
inc
mov
dec
mov
idiv
fwait
mov
cmc
shlb
cwtl
dec
test
adc
enter
mov
leave
adc
movsb
push
pop
jno
rolb
outsl
iret
push
pop
sbbl
dec
and
test
and
add
add
rolb
sbb
aam
and
xor
xor
sbb
pushf
pop
xlat
or
or
stc
xchg
xor
std
dec
pushf
and
mov
or
push
jge
icebp
ret
dec
xchg
stos
xor
insl
lods
test
fistps
inc
enter
test
movsb
in
pop
bound
jmp
pusha
fisubl
es
push
mov
pop
adc
and
lock
int3
cmp
mov
les
rcl
data16
loop
aam
in
mov
adc
dec
and
mov
sbb
shr
fs
adc
push
sbb
adc
test
push
inc
in
dec
shr
push
xor
xchg
dec
lds
rcrb
out
test
bound
inc
inc
icebp
inc
adc
ja
mov
insb
and
iret
arpl
rolb
or
bound
jmp
out
pop
loopne
inc
repnz
mov
test
or
mulb
fs
adc
inc
or
dec
js
fstpl
xor
test
xor
leave
test
test
xor
loopne
movsb
stos
pushf
or
and
pop
sbb
xor
mov
int3
jmp
mov
dec
sbb
xor
outsl
in
xchg
fiaddl
push
fs
or
cld
cwtl
test
adc
and
add
aam
pop
jo
add
sti
xlat
or
xor
xor
in
cmpsl
jnp
enter
lds
fisubl
jbe
or
push
or
inc
test
out
daa
and
in
aam
adc
push
cmp
fcoms
dec
push
nop
imul
enter
ficoml
or
add
test
imul
sub
addr16
les
dec
lods
rorl
lret
in
jp
pop
pop
push
ficoml
in
jns
outsb
add
mov
outsb
ja
cmpsl
add
cltd
insl
stos
enter
lock
and
imul
pop
mov
adc
aaa
adc
rorl
ja
push
test
imul
cmovbe
or
inc
sub
inc
addl
rcr
idivl
push
pop
leave
xchg
mov
jb
jmp
sbb
push
arpl
inc
lret
out
lods
sub
ficompl
mov
enter
pop
fisubrl
ret
inc
aam
pop
and
loop
imull
call
or
leave
mov
lds
out
adc
xchg
insl
fildll
dec
sbb
mov
pop
in
int
sub
pop
or
pop
mov
int3
mov
jo
rolb
inc
test
pop
dec
dec
testl
xchg
lock
dec
les
lods
loopne
or
sbb
pusha
sub
jbe
in
das
fs
das
cltd
rolb
xor
outsl
adc
xchg
adc
jmpw
push
jg
ret
nop
adcb
or
shld
mov
stos
inc
in
add
xor
mov
push
adc
aam
les
ret
orb
pop
addb
nop
imul
mov
xor
add
and
push
test
xor
mov
add
lods
insb
pushf
shlb
add
xor
sub
inc
fs
imul
xchg
dec
es
insb
lods
push
dec
es
mov
cltd
fs
push
jl
je
fs
dec
test
cwtl
fs
dec
es
mov
dec
es
mov
pop
inc
jg
mov
xlat
ja
lea
mov
xchg
and
jmp
cwtl
jns
fwait
push
pop
fcoms
xchg
mov
mov
pop
adc
sbb
je
pop
cltd
movnti
mov
or
loopne
adc
xor
add
insb
je
in
and
adc
pushf
movsb
and
mov
int3
aam
in
arpl
sub
inc
push
fsubrs
adc
push
mov
and
sbb
mov
pop
cmpsb
loope
popa
and
int
outsb
inc
test
and
leave
js
pop
aam
cmp
mov
mov
cmp
cmp
jb
mov
test
xchg
dec
xor
je
fs
lret
and
jecxz
test
sub
test
and
mov
and
or
nop
test
dec
dec
test
aam
add
aam
cmp
mov
arpl
push
ja
gs
cwtl
ss
aam
sub
stos
xchg
xor
roll
pop
add
cwtl
sbb
mov
xchg
inc
xor
loop
sbb
movsb
pushf
loop
cmp
push
aaa
adc
leave
and
and
pop
int3
jns
push
push
jb
js,pn
xlat
addb
lods
sub
and
rcr
cwtl
dec
insb
xchg
mov
and
and
or
push
sbb
inc
inc
and
sbb
leave
and
mov
sbb
and
xchg
dec
xor
pusha
negl
insl
cmp
jecxz
sub
dec
inc
fsts
adc
jg
mov
xchg
jb
loopne
leave
push
and
lods
adc
xor
test
test
cltd
pop
scas
add
pop
mov
add
shrl
or
xchg
mov
push
gs
test
add
test
xor
rcrb
in
dec
popf
gs
or
cmp
or
aas
adc
pop
aam
add
bound
idivl
cmp
jmp
mov
rcrb
sbb
iret
pop
nop
mov
int3
or
jge
roll
sbb
imul
mov
xchg
sbb
push
mov
ja
xchg
sbb
xor
pushf
mov
and
mov
es
enter
xor
xchg
mov
fmul
les
xor
push
or
filds
test
jl
add
and
adc
enter
pop
sbb
ja
sbb
or
int3
xchg
sbbl
adc
mov
scas
popa
orb
mov
mov
subl
or
rolb
stos
and
fwait
sbb
movsb
sbb
movsb
adc
or
inc
es
sbb
jg
mov
cmp
nop
repnz
js
xor
mov
sub
mov
adc
dec
fwait
add
mov
mov
imul
sbb
or
nop
mov
movsb
mov
subl
fs
push
or
push
nop
or
push
pusha
popa
sarl
inc
or
inc
sbb
sbb
push
sbb
dec
adcl
lea
aam
andl
jbe
xor
in
adc
xlat
rolb
and
adc
insl
hlt
cltd
inc
loop
add
or
test
cmp
in
sti
leave
dec
push
or
mov
fs
and
sub
push
movsb
les
lds
clc
mov
in
cltd
scas
cltd
add
ss
cld
icebp
sar
pusha
rcrb
xor
repz
sbbb
clc
icebp
cmpl
xor
popl
mov
mov
or
push
enter
and
mov
fs
adc
bound
push
sbbb
sub
pop
shr
shrb
scas
and
scas
dec
ret
inc
insb
jle
call
inc
das
out
sbb
mov
or
dec
pop
mov
shlb
rolb
pop
out
and
sbb
fsubr
or
hlt
loope
add
fld1
mov
mov
fwait
xchg
and
or
sbb
out
leave
cmpsl
adc
cs
push
test
inc
test
dec
cmpsb
sbb
inc
xchg
movsb
aad
cmp
outsl
lods
adc
imul
sub
sub
insl
push
popa
sub
movsb
andb
mov
sub
test
imul
orb
pop
jecxz
sub
sub
adc
negl
dec
ss
dec
mov
jmp
mov
inc
push
inc
jecxz
stos
sbb
fsubl
movsb
es
cwtl
aas
pushf
fadds
outsb
adc
jnp
inc
mov
bound
push
test
dec
dec
dec
ret
sbb
xchg
lods
sub
inc
fsubs
ret
scas
adc
aam
inc
in
movsb
iret
insl
adc
adc
or
scas
test
fisttpl
shrl
xor
adc
nop
ja
fiaddl
adc
add
fstpt
aam
nop
sub
pop
pop
adcb
and
adc
xchg
dec
test
sub
aas
ret
xor
std
add
xor
xor
dec
fdivl
inc
or
js
movsl
movsl
cs
sub
cmp
push
and
insl
mov
push
mov
cmp
inc
lods
jbe
add
dec
cli
inc
adc
mov
cli
lahf
adc
inc
dec
add
rclb
daa
pop
dec
rclb
scas
test
lcall
inc
sahf
lods
cmp
je
movb
add
ss
int
inc
add
in
lcall
test
arpl
xor
js
dec
xor
xor
jo
fnstenv
inc
cmpsl
nop
cmp
cltd
clc
mov
and
xor
and
adc
adc
pop
nop
mov
mov
dec
add
lahf
cmp
js
sbb
inc
dec
int
rolb
popa
out
test
sbb
xchg
push
mov
xchg
bound
je
decl
rcrb
jno
xchg
xorb
ds
enter
jge
test
jbe
sbb
add
addb
push
ret
pop
and
xchg
inc
adc
or
push
mov
pop
shlb
mov
imul
lods
adc
test
mov
push
sbb
shl
movsb
mov
add
push
ret
adc
push
popf
or
dec
pop
pop
movsl
lahf
sbb
sub
cvtpi2ps
cmovae
mov
fadds
add
mov
insb
nop
sub
push
fmul
add
inc
sub
push
push
pop
or
jp
push
push
add
nop
nop
notb
sub
lods
pop
push
push
inc
mov
lea
cltd
loopne
cwtl
xchg
or
inc
sub
fwait
mov
sti
out
nop
out
dec
push
cld
hlt
or
repnz
or
fsincos
cmpsb
push
mov
sahf
or
sbb
lods
or
in
fists
jmp
pop
sub
push
sbb
out
divl
fcomps
movb
test
xchg
and
ds
mov
and
inc
lahf
push
les
push
das
xchg
mov
loopne
imul
push
scas
cmp
cmp
adc
cmp
and
dec
sub
inc
pop
push
or
push
push
add
mov
dec
mov
imul
dec
out
cld
mov
pop
mov
cltd
mov
sub
or
mov
rol
dec
mov
push
dec
or
jmp
jl
adc
cmp
sete
icebp
gs
es
or
push
xchg
push
push
pop
aas
in
and
mov
test
jg
sub
in
mov
inc
std
add
jle
mov
add
ds
repz
add
sbb
addb
cwtl
test
mov
sub
inc
bound
sahf
add
inc
push
roll
lret
insl
ss
in
inc
or
pop
push
scas
add
jg
mulb
add
inc
orb
jnp
mov
add
pop
or
adc
mov
rcll
xchg
adc
or
cmp
jg
rclb
cmpl
test
add
nop
add
into
pop
adc
test
dec
iret
repz
ds
imul
push
sub
and
push
mov
pop
cmp
imul
xor
add
push
incl
sub
adcb
mov
popa
test
inc
mov
and
insb
outsl
arpl
xorb
outsb
push
mov
pushl
popa
arpl
jne
jb
outsb
je
add
das
add
push
lahf
adc
insl
adc
cs
sti
jg
inc
outsl
jb
js
je
jb
gs
add
or
outsl
mov
stc
testl
add
add
jne
les
fstp
mov
push
jb
dec
push
add
dec
lock
add
aaa
or
ds
add
xor
inc
push
add
aas
jmp
mov
pop
dec
add
sub
mov
je
push
insl
xchg
je
je
jo
addl
fisttpl
mov
daa
cmpsw
insl
push
push
mov
jae
bound
pminub
sbb
popa
out
pop
cmp
insb
mov
fsubrp
jp
outsl
or
mov
fisubs
gs
bound
jne
fnstsw
and
outsl
jmp
jo
mov
and
stos
insl
and
jne
sub
push
imul
scas
cmp
jne
inc
push
lock
pop
fmull
sahf
xchg
sub
dec
sub
fs
in
icebp
sub
insb
lcall
repz
lahf
popa
cmp
push
sbb
inc
arpl
mov
jecxz
inc
or
daa
sbb
or
fbstp
xchg
js
outsb
bound
jnp
adc
ret
arpl
loopne
outsl
fistl
insl
and
cmp
mov
push
filds
xchg
popa
in
mov
xor
fidivl
and
nop
or
xor
lds
lock
andl
mov
fidivrl
jg
popa
sub
or
outsl
inc
xchg
lahf
aaa
jg
shll
dec
iret
fisttps
dec
fs
xor
ficoms
data16
sbb
push
pop
jbe
imulb
stos
repnz
outsl
xlat
xchg
das
rcrl
jae
lods
xchg
aad
sbb
jo
lahf
sbb
dec
outsl
aas
or
arpl
mov
scas
sbb
mov
lock
push
mov
and
pop
adc
jmp
imul
sbb
mov
inc
shll
popa
leave
push
or
xor
outsl
pop
sub
add
adc
add
pop
mov
pop
insl
lret
je
or
popa
mov
fisubs
test
scas
popw
pop
jo
testl
sub
mov
cmp
xor
cwtl
lods
dec
addr16
add
jmp
andb
ret
fists
push
inc
inc
mov
push
adc
das
sbb
dec
push
adc
push
sbb
sbb
jl
out
mov
sbb
test
fbstp
rcrl
push
das
push
pop
sahf
push
sbb
sbb
iret
cmp
mov
cmpsl
out
ds
incl
dec
mov
addr16
jbe
fdivs
add
jo
les
bound
lret
pop
out
gs
cmp
imul
mov
ds
mov
jo
out
cwtl
shll
cmpsl
push
fwait
cmp
fnstsw
dec
add
sbb
xor
add
add
and
cs
jns
add
das
das
and
and
pop
idivb
daa
dec
inc
mov
out
fsubs
push
push
decb
and
ret
dec
pop
mov
pop
aas
dec
inc
push
push
inc
sub
daa
mov
push
daa
pop
imul
outsl
dec
and
mov
add
das
pop
mov
imul
iret
jns
mov
out
loopne
push
arpl
jnp
insl
pop
pop
jp
jae
fbld
je
and
sub
aaa
in
ljmp
ds
imul
mov
arpl
fcomps
out
mov
cmp
add
dec
jmp
adc
add
das
das
adc
dec
push
inc
inc
arpl
bound
dec
outsl
jbe
inc
mull
dec
arpl
inc
jo
sub
sbbl
jne
jne
xor
insb
xchg
outsb
jle
mov
imul
mov
popa
outsb
adc
cmp
scas
cmpsl
xchg
popl
aaa
out
jg
addr16
popa
je
jb
xor
lods
std
int3
lahf
mov
jae
push
gs
insl
mov
jne
dec
outsl
outsb
and
bswap
cmp
pushf
xchg
pop
dec
inc
aas
arpl
out
dec
or
sti
fldl
mov
jae
in
test
push
inc
push
popa
insb
jne
inc
sub
mov
ret
mov
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
or
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
aaa
mov
mov
rcrb
pop
pop
pop
lock
mov
bound
gs
imul
jo
mov
mov
ja
jns
jnp
jge
jg
xchg
dec
outsw
adc
lcall
loopne
pop
in
jnp
inc
add
orb
sar
std
aas
ds
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
mov
je
arpl
imul
imul
cmp
mov
add
jo
xor
es
popa
js
addl
je
pop
dec
pop
sbb
fists
lods
dec
out
ret
ret
sub
in
sbb
int3
adc
imul
add
add
add
add
lds
push
pop
push
add
xor
addr16
test
add
pusha
push
mov
js
or
cmp
add
sti
mov
add
addb
add
xchg
adcb
test
add
orb
daa
push
cmpb
push
and
sub
jb
int3
push
jo
lret
cs
push
push
jmp
push
outsb
imul
jo
pop
adc
pop
or
sbb
adc
iret
leave
xor
sbb
daa
xchg
lea
mov
and
leave
and
add
add
push
xchg
shl
inc
scas
mov
lret
hlt
aad
cmc
add
lods
mov
stos
in
add
sbb
cmp
pop
sbb
push
inc
sub
cmpsl
out
rdtsc
ss
jmp
dec
inc
or
pop
stos
push
notl
fs
add
cs
jae
fstl
jbe
bound
je
outsb
data16
push
jbe
xorb
inc
xor
push
jae
xchg
daa
pop
lea
mov
popa
addr16
outsl
js
push
xchg
cs
aam
testb
insb
jo
and
and
mov
aaa
insb
les
dec
imul
or
inc
mov
mov
lods
ds
cmp
dec
inc
jb
jns
daa
mul
mov
pop
and
mov
cmpsl
cs
je
and
arpl
je
sbb
mov
push
insl
push
fsubrl
push
jbe
mov
cld
mov
fdivl
or
jb
and
xor
pusha
inc
jbe
push
push
ss
jns
insl
and
mov
rolb
and
pushw
in
push
popl
inc
imul
pusha
gs
add
push
lds
insl
adc
dec
test
bound
adc
popa
insb
jae
mov
pop
in
adc
push
jae
or
cmp
jo
pusha
insb
call
xor
addr16
subl
icebp
or
gs
mov
mov
adc
sbb
in
push
push
push
push
dec
testl
dec
push
scas
cltd
push
lods
lea
dec
push
inc
ret
dec
jge
insl
jl
clc
adc
jb
push
imul
call
mov
outsl
xor
inc
in
mov
das
gs
or
or
sbb
divb
pusha
push
mov
addr16
jp
scas
mov
xchg
daa
jnp
pop
loope
mov
popw
pop
cmp
dec
jl
cmp
or
ds
and
iret
repz
sub
es
lcall
sub
sub
dec
mov
outsb
add
sub
cmp
pop
or
sbb
das
push
and
aaa
aaa
cmp
outsb
cmp
ds
mov
pop
pop
jne
stos
addl
push
jbe
sbb
rcr
das
jo
ss
gs
imul
mov
dec
xor
sahf
inc
pop
and
mov
fs
jo
sub
xor
jl
out
sub
pop
cs
add
repz
xor
jge
iret
repz
cld
sub
imul
push
aam
iret
repz
int3
enter
cmp
repz
lods
test
lcall
cwtl
push
je
xchg
idivl
push
mov
dec
jl
push
jo
out
sahf
out
fs
pop
pop
sahf
out
sahf
push
push
dec
inc
xor
cmp
out
and
cld
sub
enter
repz
push
lcall
sbbb
fs
xor
cmp
out
sbb
lock
test
cmp
repz
in
sub
fwait
loope
mov
sub
push
add
jl
and
adc
sub
in
add
xchg
inc
sub
dec
lods
in
sbb
mov
inc
addl
mov
addb
stos
ljmp
xchg
dec
leave
push
mov
add
add
dec
cmp
add
ja
xor
push
mov
inc
adc
xchg
jnp
inc
mov
sbb
filds
insl
sbb
jle
add
addb
xchg
lea
xchg
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
inc
adc
idiv
stc
cli
sti
cld
std
jmp
inc
test
xchg
loope
push
sub
incl
rclb
popa
and
xchg
js
popa
data16
out
pop
inc
test
jns
push
xor
test
jb
add
ds
scas
mov
aaa
push
arpl
sbb
insb
fs
sbb
lods
xor
push
mov
or
aam
jmp
push
setl
scas
add
sub
add
inc
adc
push
je
xor
xor
push
dec
inc
dec
cmovns
fwait
cmp
push
cmove
push
or
call
imull
adc
decl
inc
call
rclb
mov
out
xor
mov
inc
jnp
inc
loop
mov
ds
pop
adc
decb
or
cli
jb
jge
arpl
cmp
fbstp
jg
adc
fisubrs
cld
push
mov
and
cmp
dec
imul
lcall
iret
lret
add
inc
mov
mov
sub
sti
add
dec
fwait
ss
sbb
pop
jns
ds
xor
dec
inc
dec
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
incl
ljmp
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
iret
aas
sbb
insb
mov
out
leave
ljmp
orb
pop
test
xor
jle
dec
add
scas
lods
dec
lock
xor
or
mov
aas
mov
pop
pop
repnz
hlt
and
es
mov
fcompp
add
lds
outsl
loope
add
dec
cmc
ja
sub
int
movsb
pushl
or
shlb
or
jmp
sub
xor
sub
mov
mov
ds
and
inc
cmovg
aaa
mov
xchg
jmp
and
test
jle
imul
xor
sti
es
jae
movsl
xchg
mov
lret
out
and
data16
scas
sub
inc
cmpsl
subl
js
sub
ret
bound
jg
subb
jne
fs
pcmpeqw
ss
sti
or
ja
popa
daa
fucomi
push
or
add
je
push
lods
push
mov
pop
mov
je
mov
dec
loopne
mov
ret
sub
fcomi
test
jb
add
ja
add
sbb
push
nop
nop
push
pop
xchg
add
xchg
imul
sbb
lret
idivl
jae
insl
jle
push
lods
cmp
cmpsl
mov
and
loope
mov
jmp
arpl
repz
mov
fbstp
out
push
sbb
inc
mov
push
mov
pop
jg
mov
xor
insb
daa
jnp
and
push
das
cmpsl
cmp
or
push
add
add
push
xor
adc
faddl
sti
sbb
jns
outsb
xlat
cs
cmp
fs
mov
cmpsl
xlat
pushf
or
mov
je
xchg
js
sub
mov
aas
cmpsl
cs
push
out
add
xchg
jo
subl
cmp
pop
pop
mov
jne
adc
dec
xlat
hlt
and
out
jo
imul
call
es
and
cmp
xorb
daa
adc
push
mov
cmpsl
sbb
inc
xchg
inc
arpl
mov
dec
js
mov
mov
mov
dec
jp
pop
loopne
loope
aas
ja
pop
rorl
dec
jecxz
jnp
mov
sub
ljmp
test
pop
mov
shll
inc
xlat
and
je
and
outsb
ficompl
daa
pop
xchg
jo
arpl
add
gs
loope
jp
jne
xor
and
dec
lret
arpl
mov
pusha
push
and
pop
in
jo
pop
inc
mov
add
fdivs
fldt
dec
mov
roll
add
arpl
mov
lret
sub
stos
mov
inc
sub
daa
into
ret
ss
scas
js
jno
or
jo
add
test
push
into
pop
aaa
sbb
mov
je
mov
push
add
adc
arpl
mov
inc
cmp
arpl
cmovnp
dec
loope
hlt
andb
data16
pop
daa
out
or
les
xor
subb
mov
out
jnp
hlt
arpl
adc
aaa
sub
add
or
fwait
test
mov
pop
push
and
scas
ljmp
sub
and
bound
cmp
dec
aas
loope
push
push
push
inc
pop
push
out
cmp
daa
jne
add
dec
pop
outsl
dec
fwait
jp
rol
sbb
inc
das
push
hlt
mov
push
adc
push
clc
ret
js
mull
dec
xchg
jne
pusha
testl
add
sub
ret
dec
sub
outsb
outsb
sub
and
scas
out
jmp
push
fiaddl
bound
jae
imul
push
push
pop
mov
addr16
sti
push
rdmsr
scas
xchg
jecxz
push
bound
or
push
out
arpl
pop
mov
adc
outsl
jmp
add
mov
in
dec
outsl
insl
cli
mov
cs
mov
add
es
or
out
jecxz
je
inc
push
inc
scas
imul
mov
arpl
dec
insb
xchg
xor
inc
inc
dec
add
dec
out
test
out
adc
mov
add
ss
mov
iret
mov
inc
pop
cs
xchg
dec
por
adc
pop
mov
fdiv
mov
addr16
outsl
or
ja
sbb
inc
out
jmp
pop
push
aas
ds
testl
or
mov
add
inc
inc
jl
jl
and
jl
mov
mov
imul
mov
and
addr16
mov
stos
das
mov
push
pop
sbb
jecxz
fidivrl
jnp
cmp
jns
push
mov
pop
lods
fnstsw
adc
rcr
jl
pop
jnp
cmp
pop
imul
jmp
adc
insl
ja
add
mov
lea
pop
bound
outsb
jg,pn
and
add
mov
mov
jge
cmp
dec
outsl
jo
js
lret
jl
jo
loopne
and
jns
mov
mov
fstpl
ret
loopne
pop
fisubrs
fs
mov
dec
lock
loope
adc
jl
ret
sbb
push
repnz
inc
repnz
lods
js
mov
es
add
jbe,pt
push
imul
inc
pop
and
sbb
add
push
test
push
jle
add
sub
mov
mov
xlat
aaa
sbb
push
jecxz
daa
inc
div
push
imul
jb
sahf
inc
jns
jae
jae
mov
sbb
pop
andb
inc
fisttps
xor
pop
jg
pop
cli
js
cli
add
mov
clc
das
pop
pop
pop
push
mov
jb
rcrb
pop
pop
data16
aaa
inc
mov
insb
roll
push
mov
aas
adc
popl
mov
aaa
es
loope
inc
outsl
das
addr16
ffreep
push
lcall
scas
push
add
add
inc
xchg
inc
cmpsl
stc
xor
fiadds
cmp
scas
fnstcw
ss
add
lret
ss
pop
cwtl
ss
and
mov
fisubrs
xlat
fimull
push
mov
dec
ds
xor
dec
sti
push
pop
push
push
lds
imull
test
push
testb
push
inc
jg
idivb
iret
push
es
ds
pop
jmp
out
jl
cmp
and
pop
test
shr
add
aas
pop
xlat
insb
or
sub
inc
pop
or
fwait
popa
shrl
fidivrs
mov
sbb
repz
xchg
stos
push
leave
pop
or
cmp
inc
outsl
jg
adc
jns
inc
push
inc
and
call
imul
ja
iret
pop
aaa
dec
and
push
orl
sub
jae
imul
pusha
or
daa
inc
addr16
ret
sub
aaa
dec
push
add
or
or
xor
scas
push
lahf
jae
aas
rcl
cmp
mov
push
and
pop
out
pop
fnstsw
push
gs
insl
pusha
push
popa
jne
or
ss
push
and
dec
bound
xor
pop
sub
and
push
icebp
scas
aad
sahf
and
je
das
push
sahf
out
fimuls
jg
stos
fstpt
pop
jl
jne
jne
jp
mov
out
cmp
xchg
scas
mov
and
sahf
jnp
rcrl
or
bound
aas
add
ja
outsb
jbe
les
adc
gs
data16
pushf
je
cmp
push
mov
js
push
push
jo
jb
into
jb
out
jge
mov
and
jae
sbb
pop
insb
imul
cmp
and
and
arpl
xor
jle
fbld
cmp
fs
adc
test
adc
mov
mov
mov
outsb
je
ss
sbb
imul
outsb
outsw
sub
ja
adc
fcomps
and
sbb
mov
xor
fmuls
xchg
push
daa
imul
cmpsl
xchg
or
dec
pop
push
scas
ja
mov
push
ja
push
mov
add
jp
scas
shlb
add
inc
cmpl
push
pop
inc
adc
xlat
mov
addr16
dec
push
and
mov
aaa
push
sbb
mov
xchg
js
push
pop
mov
sub
cmp
pusha
and
jo
cs
sti
mov
ret
push
or
xor
push
iret
lea
push
cmp
pop
push
into
or
or
or
test
cmp
sahf
cmp
cmpsb
pop
mov
aas
add
mov
ret
data16
and
mov
fdivl
sahf
outsl
loop,pn
lcall
repnz
xchg
fldenv
sub
push
or
jo
inc
or
pusha
test
mov
inc
mov
push
add
les
dec
inc
out
push
sbb
pop
mov
outsl
or
or
movsl
cmp
adc
lods
sub
cmp
hlt
push
imul
inc
jle
add
dec
icebp
dec
outsl
adc
lods
pop
or
fmull
aaa
scas
orb
test
dec
js
push
fiaddl
mov
dec
add
lcall
add
lcall
call
scas
and
lcall
adc
push
popa
add
add
and
sbb
cmp
add
lods
fimull
dec
jae
fidivrl
data16
pop
fildl
sti
dec
push
das
mov
xor
arpl
pop
cli
add
xor
vmptrld
fs
add
mov
in
add
and
inc
sub
into
jle
rolb
dec
pusha
into
movb
push
mov
cld
jbe
ss
js
lret
iret
inc
lods
inc
rol
push
ja
add
jbe
out
imul
push
xlat
inc
and
push
push
inc
add
adc
adc
sub
fsubrp
pop
shlb
or
or
lods
mov
adc
js
add
add
jge
cmp
inc
jg
push
fisubrl
sahf
and
sbb
jmp
aad
add
mov
or
ja
jg
add
or
addr16
andl
arpl
outsl
jo
pop
pop
add
addr16
mov
pushf
push
cmc
sub
imul
arpl
je
lahf
inc
and
push
aas
shlb
jmp
ja
andb
adcl
push
pop
icebp
cs
jb
or
push
xchg
out
stos
pop
sub
faddp
lds
push
cs
add
stos
lahf
mov
cmpsb
mov
shlb
aaa
sbb
je
inc
sbb
ljmp
nop
sbb
add
or
jnp
inc
pop
inc
repz
pop
add
lea
subl
push
imul
push
or
inc
arpl
mov
jae
mov
aaa
jno
push
add
fistpl
and
mov
outsl
lock
or
pop
das
dec
adc
inc
sbb
arpl
shrl
imul
ss
inc
and
into
shlb
roll
ret
add
mov
ret
out
pop
rcr
out
test
addb
mov
inc
inc
repz
jp
std
ret
cmpsl
xchg
xor
cmp
mov
sub
pop
pop
jb
pop
scas
inc
outsb
cmp
sbb
xor
ficomps
fldt
sbb
xchg
out
mov
mov
shrl
mov
lahf
sti
pop
rcll
or
cmp
push
xchg
push
and
pop
xchg
push
fstp
mov
jnp
jb
xlat
test
push
mov
inc
sti
jp
rcr
cmp
test
adc
add
and
or
addr16
xor
jnp
cmpsl
xchg
aas
xor
xor
arpl
push
sub
add
xlat
es
cmp
pop
inc
outsl
daa
es
mov
sub
ja
arpl
cmp
shll
popa
shrl
mov
jae
dec
sbb
sub
xor
hlt
push
inc
arpl
out
pop
xor
scas
inc
jne
and
adc
xor
out
jecxz
sbb
fwait
test
test
xchg
loopne
adc
add
cmpsl
adc
arpl
jne
sub
imul
ret
test
test
inc
sbb
ljmp
xor
sub
aaa
xor
inc
push
xor
insl
stos
jp
das
das
dec
cmp
outsl
push
inc
dec
adc
mov
xchg
cmp
stos
xorb
das
add
mov
scas
cmp
les
dec
pop
out
clc
fs
pop
push
or
lds
push
ljmp
pop
rclb
out
lahf
fmull
xorl
jo
and
dec
das
sub
sbb
pop
inc
aaa
lret
cmp
mov
jecxz
pop
popa
xchg
cmp
rorl
or
mov
add
ret
pop
cmova
dec
mov
push
sub
ljmp
cmp
addr16
push
pop
xchg
cs
cs
or
sbb
push
bound
mov
xchg
arpl
out
xchg
sbb
pop
add
dec
je
sub
movsb
push
fisubl
cmp
cwtl
scas
mov
inc
and
lret
sub
xor
sub
roll
or
inc
es
lahf
rcr
movlps
cmp
and
push
mov
call
push
pop
minps
mov
aas
push
fs
or
inc
dec
jle
dec
mov
jmp
pop
jno
mov
repz
push
mov
stos
push
scas
mov
outsl
push
imul
push
sahf
test
mov
or
sbb
iret
jp
scas
mov
add
roll
mov
or
lret
pop
add
dec
fisubrl
pusha
fistpll
cmp
out
or
lods
adc
ja
adc
pop
mov
stos
das
and
mov
imul
xor
push
mov
push
mulps
aaa
out
ss
adc
mov
int
sbb
outsb
ss
int
sbb
sbb
pop
pop
pop
jmp
test
fwait
out
into
js
and
and
inc
cs
push
and
outsb
bound
mov
pop
and
xor
inc
dec
pop
lea
das
dec
sbb
cmpsl
arpl
jno
jno
lret
push
pop
sarl
mov
out
mov
xchg
pop
sti
push
out
or
shll
xchg
pop
pop
jg
addb
xor
lods
daa
sub
dec
pusha
pop
ret
lea
or
push
loop
add
popa
sbb
cmp
sub
jmp
add
mov
daa
cmp
mov
mov
test
add
out
mov
push
lods
lahf
out
cwtl
mov
aam
fwait
dec
jo
loop
pop
mov
mov
das
sbb
lds
popa
sbb
jg
sub
push
add
sub
fildl
push
xor
or
fistpll
push
mov
xor
mov
movntps
das
pop
bound
and
xchg
fimuls
xchg
aaa
inc
test
inc
and
mov
inc
jbe
mov
jmp
bound
push
jecxz
inc
mov
daa
mov
imul
scas
xor
arpl
xor
or
jnp
jge
mov
repz
jae
xor
fs
insl
popf
or
adc
das
inc
cmp
daa
jmp
scas
add
push
insl
pop
inc
sub
and
add
fsubrl
or
cmpsl
push
mov
insl
arpl
bound
mov
dec
clc
sub
inc
xchg
push
pop
or
mov
out
out
or
mov
sbb
and
jecxz
sub
push
leave
push
repnz
mov
dec
pop
and
stos
in
dec
hlt
loopne
pop
and
in
jb
lods
fistpll
mov
xchg
fs
cmpsb
xchg
push
rcr
push
repnz
and
aam
in
cltd
dec
test
fimull
in
scas
xchg
stos
fs
inc
in
fdivs
dec
and
in
lock
mov
push
add
push
repnz
pusha
or
dec
pop
and
stos
in
adc
push
jns
shrl
scas
xchg
sbb
sarb
push
jb
sub
rorl
xchg
test
xchg
mov
ret
leave
xlat
mov
mov
jno
jecxz
pop
and
pop
adc
inc
cmp
lahf
xor
pop
aaa
fcompl
dec
mov
cmpsb
ret
insl
pop
adc
mov
inc
push
or
and
jmp
fistpl
and
inc
in
mov
xor
mov
mov
pop
sub
inc
xor
loopne
xchg
out
dec
pop
xor
inc
mov
dec
frstor
and
mov
and
imul
inc
sbb
test
inc
mov
test
insl
adc
push
mull
mov
rorb
shll
add
sub
mov
mov
movsb
adc
xchg
push
mov
push
cmp
dec
adc
sbb
outsb
add
push
adc
or
lea
pop
aaa
or
push
push
xor
scas
addr16
sub
mov
xchg
insb
inc
mov
fildll
push
mov
scas
cmpsl
lahf
jo
je
xlat
pop
inc
sub
or
add
sbb
add
or
cmp
and
sti
mov
ret
push
fisubl
rcll
aaa
js
leave
mov
inc
mov
outsl
inc
mov
js
scas
mov
das
push
fisubrl
pop
fmuls
rcrl
test
aas
pop
gs
add
or
lahf
pushl
and
in
xor
ja
push
bound
xor
or
adc
sbb
rclb
push
loop
mov
jbe
pop
lcall
shrb
jg
jae
and
add
push
pop
xlat
pop
add
sbb
bound
movsb
insl
pop
lea
ds
pop
sbb
push
pop
add
sub
pop
or
and
add
mov
pop
sbb
push
push
xchg
jb
add
pop
inc
popl
or
or
xchg
fisttpl
cmp
inc
es
addr16
bound
adc
je
or
test
cmp
xor
sahf
gs
cltd
add
or
cmp
xor
mov
es
jae
and
sub
sub
shll
icebp
imul
icebp
push
outsb
dec
mov
push
jbe
cmp
jnp
xor
xor
daa
outsb
xor
pusha
insb
and
xchg
ds
push
int3
add
in
ja
adc
ss
xchg
jae
imul
daa
js
outsl
dec
js
fs
enter
pop
daa
sbb
dec
mov
stos
out
or
xor
add
ret
add
and
xor
shrl
pop
push
subb
sub
sbbl
in
add
popa
push
in
mov
or
push
adc
push
inc
imul
mov
repz
mul
in
and
push
dec
pop
mov
addr16
cltd
filds
sbb
cmpsl
dec
pushf
xchg
pop
inc
mov
pop
imul
jl
adc
xchg
stos
add
lock
jb
xorl
js
inc
imul
mov
mov
das
sti
mov
ret
scas
lahf
xor
inc
pop
xchg
adc
mov
push
fisttps
jo
pop
inc
ja
addps
push
sub
shrb
push
incl
pop
and
rdmsr
cs
add
rclb
xor
xchg
dec
movlps
das
or
pop
cmp
xchg
imul
popa
lods
adc
push
push
push
dec
mov
sub
insb
fiadds
add
subl
jo
xor
cmpsb
je
push
scas
ret
dec
rcll
xchg
inc
push
inc
jecxz
dec
adc
xchg
pop
add
xor
popl
lea
stos
lret
mov
adcl
movsb
mov
inc
imul
testl
loop
outsb
cmp
push
out
ret
push
push
push
cmp
scas
lods
xor
repnz
out
es
mov
aad
add
loopne
mov
and
negl
movl
xor
neg
pop
ret
fs
dec
sub
orl
je
xor
pop
jecxz
pop
jnp
pop
sub
dec
shlb
or
inc
or
sti
push
lret
inc
jle
js
xor
inc
cmp
xchg
scas
jbe
dec
or
fiadds
and
ss
push
sbb
dec
mov
bound
xor
mov
incb
add
inc
ffree
inc
cs
lret
jb
push
cmpsl
xchg
loop
push
cmpsb
xchg
ja
cli
jo
xor
outsb
sbbl
mov
mov
xor
js
mov
arpl
sub
arpl
fs
lock
inc
iret
syscall
or
fidivrl
push
push
mov
into
sti
pop
js
inc
bound
fidivrs
clc
pop
imul
pop
pop
mov
push
es
lock
outsb
pop
push
push
xor
dec
js
ret
divl
das
inc
pop
dec
es
das
push
fisubs
add
and
or
out
sti
pop
push
sysexit
mov
cs
dec
gs
sahf
push
outsl
push
push
cli
push
push
insl
sub
out
mov
insl
mov
inc
ja,pn
xor
mov
fimull
jp
pushl
push
fiaddl
jg
mov
das
xor
das
xor
outsl
pop
outsl
dec
xor
js
push
into
xor
adc
test
outsl
imul
or
sbb
jg
inc
and
pop
add
lods
imul
mov
arpl
ja
add
aam
ljmp
lock
fmull
lret
fmuls
stos
out
inc
jnp
pushf
ds
sub
and
push
lock
aas
add
xor
dec
jno
mov
mov
sbb
ja
jmp
xor
xchg
out
adc
add
sub
mov
imul
test
adc
je
shrl
mov
and
and
fs
das
or
pop
addl
mov
iret
sbb
das
arpl
cmp
sbb
out
scas
xor
or
xchg
xchg
add
pop
mov
pop
dec
mov
add
sub
cmp
mov
loopne
or
jmp
xor
mov
cmp
mov
lahf
sbb
inc
imul
mov
stos
fsubrs
shl
mov
sbb
or
xlat
daa
rorb
add
sub
sti
mov
push
dec
inc
ds
outsl
popa
fs
outsl
aaa
mov
push
mov
or
adc
add
sbb
call
lods
or
in
cmpsl
addr16
push
xor
iret
lods
sub
mov
push
pop
stos
std
jl
js
mov
add
fildll
sub
scas
addr16
in
fimuls
sbb
jecxz
arpl
pop
lods
je
inc
jb
in
cwtl
xchg
scas
repz
pop
pop
pop
push
outsl
xchg
push
bound
xchg
pop
and
sbb
clc
mov
js
repz
push
jle
insb
add
xchg
out
cmp
add
jbe
add
pop
cmp
std
outsb
push
pop
cmp
jne
jo
arpl
push
cli
ss
pop
pop
ja
xor
xor
push
and
push
movhps
popl
sbb
aam
aam
mov
xlat
adc
xor
cmp
movb
outsb
mov
or
lahf
mov
and
lea
add
rcrb
stos
sub
test
cs
outsl
fs
lock
lahf
mov
lahf
xlat
jmp
js
imul
ret
pop
push
arpl
addl
add
jecxz
pop
addl
addr16
cwtl
push
dec
movsl
pop
sti
lods
ljmp
push
insl
push
mov
and
push
inc
fwait
iret
dec
cmp
adc
jo
loope
lahf
popa
fldt
and
xor
mov
repz
xchg
test
inc
pop
mov
and
sub
xor
incl
xchg
outsb
jecxz
pop
dec
dec
lock
ret
cmp
mov
aaa
iret
fildll
adc
es
outsb
dec
arpl
cmp
jae
daa
xor
sub
jbe
stos
arpl
outsl
cmp
imul
das
repz
outsl
pop
xchg
or
aaa
sub
cmp
mov
mov
jmp
jb
push
ds
adcb
adc
jle
add
mov
xchg
jle
add
das
add
data16
sbb
sub
testb
lock
aam
addr16
sub
or
call
or
lock
icebp
push
and
push
cld
outsl
clc
mov
imul
inc
pop
push
sbb
mov
iret
add
out
testl
out
cltd
or
xchg
int
mov
or
pop
or
or
adc
adc
sbb
and
in
sub
xor
inc
mov
mov
testl
push
popa
xchg
add
mov
shrb
ret
sub
shrb
int
or
adc
fneni(8087
repz
add
xchg
rclb
fldcw
lret
str
lcall
stc
das
incl
sub
xchg
insb
call
outsl
xchg
push
sub
fwait
cwtl
lods
add
daa
nopl
and
mov
mov
addr16
jg
mov
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
pushl
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
pop
in
iret
mov
sbb
mov
sbb
mov
insb
incl
ds
pop
sbb
xor
mov
pop
sbb
decl
mov
sbb
js
lods
mov
pop
dec
xchg
jecxz
dec
push
mov
and
pop
adc
nop
push
and
cmp
pop
dec
mov
daa
jb
xor
and
push
dec
cmp
add
pop
add
mov
jg
lods
bound
push
insl
or
mov
push
dec
iret
mov
dec
sub
pop
or
dec
dec
lcall
mov
xchg
fsubrl
leave
jae
fcoml
mov
cmp
iret
pushf
inc
mov
pushf
cmp
insb
dec
pop
inc
add
pusha
shrb
add
cmp
xor
add
push
mov
popf
js
adc
jo
pusha
mov
fwait
insb
and
cmpsl
icebp
movsl
inc
push
mov
nop
sbb
ret
mov
jnp
pop
sbb
lret
ss
cmp
sub
pop
xor
inc
adc
inc
push
push
cmp
inc
icebp
push
xlat
or
cmpsb
jp
int3
mov
bound
cmp
cs
and
imul
xor
and
dec
xchg
jg
je
push
subl
outsl
jne
bswap
or
cmp
popa
outsb
imul
pop
inc
add
and
adcl
mov
mov
aaa
insl
mov
call
mov
sub
inc
pusha
xchg
pop
jg
inc
pusha
sub
pop
push
jnp
fisubrl
add
push
push
scas
add
mov
je
daa
mov
jnp
pop
setbe
add
inc
loope
xchg
outsb
das
addr16
pop
mov
inc
pop
pop
pop
rorb
mov
hlt
mov
push
cmpsl
aas
dec
and
sbb
dec
idiv
push
add
sub
push
xchg
test
out
shlb
inc
and
out
adc
dec
sub
fbld
jbe
mov
fwait
xor
adcl
push
sarl
bound
je
add
jbe
outsl
ljmp
loop
rorl
outsl
add
add
dec
movsb
imul
dec
add
push
insl
cmpsl
dec
cli
mov
pop
sub
mov
out
xor
sti
xchg
mov
dec
jge
out
negl
push
xor
outsl
and
rcll
pop
mov
mov
mov
push
xchg
stos
pop
xor
xor
mov
mov
mov
dec
xchg
xchg
pop
lcall
adc
arpl
repz
inc
lock
es
mov
addl
cs
jge
sub
push
xchg
push
or
mov
pop
inc
pop
fbld
pop
pop
cmp
scas
add
mov
enter
aaa
aam
dec
cs
insb
inc
in
add
jno
push
cs
dec
enter
pop
push
and
cmp
jns
imul
cs
aam
scas
push
sarl
lret
inc
or
roll
inc
loop
iret
shll
aas
jle
pop
stos
ficoml
pop
xchg
xor
push
push
cmc
jns
fwait
jge
push
daa
xor
fldl
outsl
notb
aaa
outsl
push
je
mov
stc
push
pop
adc
xor
ficomps
fs
jns
mov
mov
shr
pop
push
dec
pop
push
mov
test
testb
jl
push
xchg
xchg
mov
not
pop
jnp
out
xlat
or
xor
out
imul
pop
clc
call
mov
pop
mov
in
inc
out
cmpsl
sbb
pop
push
jns
scas
outsl
add
jge
cmp
sahf
ja
je
dec
mov
lahf
out
push
adc
dec
push
repz
rep
test
lahf
out
dec
mov
dec
push
push
and
cmp
sahf
out
push
xor
insb
ds
test
sbb
out
sahf
cmpsl
inc
push
mov
int
dec
es
jno
lds
stc
cmp
and
push
mov
cmp
cmc
adc
sahf
out
outsb
mov
notl
push
push
add
sbb
dec
sbb
scas
sub
aam
cs
adc
stc
add
adc
lcall
push
push
mov
xor
adc
mov
mov
mov
scas
int
mov
pop
in
bound
loop
and
push
pop
mov
sub
loopne
mov
sar
mov
pop
int3
push
and
pop
sbb
enter
stc
cmp
adc
repnz
iret
pop
in
inc
ds
or
add
and
jb
add
dec
stos
ret
aaa
movsl
inc
test
subl
out
mov
fbld
sub
testl
rolb
addl
ja
outsb
outsb
lcall
push
push
js
xor
stos
pop
inc
imul
cmp
xor
andl
jp
adc
mov
aad
lods
iret
imul
push
push
and
xorl
inc
pop
push
dec
out
xor
push
dec
inc
outsl
and
push
popa
je
or
subl
push
fistpl
cwtl
out
scas
pop
inc
mov
cmp
sub
pop
push
ficompl
cs
decl
xchg
ss
sti
es
mov
sbb
ljmp
rclb
adc
scas
pop
in
daa
adc
and
dec
not
push
mov
push
pop
addr16
jno
fcoml
and
add
outsl
xlat
cmpsl
jecxz
jmp
jo
push
jo
pop
add
inc
jg
mov
dec
xor
inc
or
xor
mov
jno
sbb
xchg
jmp
jnp
mov
cli
push
sbb
xchg
fs
lods
and
jae
inc
sbb
pop
xor
mull
sbb
sbb
loop
jg
push
dec
cwtl
pop
test
push
xor
orb
add
xchg
xchg
sti
rclb
xchg
jae
sbbl
punpcklbw
sysexit
les
push
dec
pop
and
xorl
dec
inc
dec
mov
fs
jo
xor
daa
fists
push
outsl
imul
je
mov
add
ds
add
jo
jg
pop
mov
jb
loopne
add
jecxz
mov
fwait
mov
sbbb
pop
ret
shll
test
cwtl
and
sbb
pop
pop
inc
das
movsl
or
push
add
scas
lahf
sub
movb
test
or
sbb
scas
pop
sbb
scas
out
push
pop
rorb
xchg
pop
addr16
arpl
mov
jae
fs
sbb
adc
es
adc
mov
psubq
imull
jo
cmp
mov
pop
das
cmpsl
jg
lock
push
pop
shll
add
lret
dec
and
jge
arpl
or
fidivrs
sub
pop
pop
dec
add
and
ret
pop
fisttps
jmp
cs
popw
push
aaa
imul
mov
mov
inc
in
bound
xchg
das
testl
jg
fsubs
call
xchg
das
push
xor
push
pop
sbb
mov
or
outsl
mov
lods
sub
xchg
push
fiadds
push
inc
mov
lods
scas
inc
jle
rcl
pop
imul
mov
out
inc
into
mov
and
inc
xor
adc
lahf
sbb
pushl
ret
add
dec
add
push
xor
adc
fcmovb
stos
or
shlb
add
ffreep
xchg
aas
add
add
xlat
mov
shlb
out
or
lock
cmp
push
pop
adc
xchg
jp
out
arpl
call
cmpsb
inc
inc
push
inc
pop
pop
outsb
iret
inc
sbb
cmp
dec
ficoms
pop
push
popl
pop
or
xchg
xor
pusha
or
daa
inc
push
or
call
pop
sbb
addb
mov
dec
and
pop
jo
imul
inc
and
mov
push
pop
lahf
inc
dec
jne
mov
outsl
dec
push
mov
add
cmpsl
push
ljmp
andl
adc
add
inc
outsl
loop
sub
dec
dec
mov
jns
je
inc
stos
and
push
out
xchg
fists
das
adc
and
mov
jle
add
cmp
insb
je
dec
daa
rorb
pop
addr16
jo
jmp
fisubrs
sbb
pop
jno
outsl
xor
push
les
xor
push
dec
xchg
pusha
call
sbb
jns
je
jne
or
test
das
fisttps
arpl
push
mov
ja
out
mov
push
push
mov
or
mov
dec
mov
pop
and
je
adc
les
punpckhwd
arpl
and
iret
jbe
pop
and
inc
inc
mov
popw
push
or
maskmovq
testl
out
pop
dec
test
les
sbb
testb
dec
shll
rclb
push
pop
rclb
xchg
jmp
mov
mov
into
dec
inc
push
test
push
loopne
sub
jmp
xchg
push
in
nop
sub
cmpsl
pop
pop
or
hlt
movsb
push
fwait
xchg
push
add
mov
push
movups
or
push
aam
dec
and
fidivrl
jb
iret
dec
loopne
add
mov
and
add
jge
out
inc
outsl
outsb
or
aaa
inc
insb
xchg
stos
daa
and
pop
daa
sbb
imul
loope
mov
jb
sub
out
ds
inc
imul
int
pop
incl
dec
inc
dec
push
xchg
add
dec
sbb
and
pop
imul
jge
aas
fiadds
jg
ret
shlb
mov
add
mov
into
inc
leave
sbb
add
adc
inc
lahf
lcall
scas
sets
mov
inc
aaa
jno
sti
shlb
lcall
push
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
pushl
jb
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
ljmp
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
repz
movb
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
call
gs
leave
ret
sub
xchg
mov
data16
mov
lcall
call
cltd
test
push
push
shll
ja
daa
mov
mov
pushl
stos
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
outsl
subb
movsb
mull
jno
jmp
or
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
lahf
jo
and
dec
ret
js
jecxz
aad
pop
mov
in
or
xor
das
ds
das
sbb
push
sbb
fistps
push
and
push
pop
inc
mov
inc
push
inc
pop
and
or
aas
js
insb
cwtl
dec
mov
pop
push
or
mov
inc
add
or
pop
pop
pop
test
enter
jge
jo
shll
aas
ds
push
shl
xor
push
sbb
decl
incb
lahf
daa
inc
add
sub
loop
push
pop
fisttpl
inc
outsl
xor
in
push
lods
mov
and
or
inc
neg
adc
lahf
stos
outsb
cwtl
push
pop
mov
cmpsl
xor
inc
out
mov
imulb
push
adc
insb
pop
repz
and
sar
add
rol
ret
inc
out
scas
pop
cmpsb
dec
push
fidivs
adc
mov
xchg
lods
push
scas
pop
pusha
inc
mov
and
movsl
pop
outsl
jbe,pt
mov
mov
pop
testl
push
fiaddl
add
mov
in
leave
leave
adc
xor
inc
daa
xor
test
push
adc
jb
add
push
pop
adc
enter
inc
adc
leave
xchg
and
and
arpl
mov
push
sub
je
scas
inc
fsubrl
les
movsb
add
cmp
outsl
je
mov
popa
stos
mov
in
inc
cs
inc
fdivrl
or
sub
sub
push
loopne
jo
mov
dec
inc
jle
in
xor
and
push
push
pop
jbe
add
insl
outsl
fs
gs
jo
or
mov
mov
push
addl
mov
add
or
addr16
and
push
lea
pop
gs
inc
sub
daa
mov
div
xchg
lock
cs
imul
inc
mov
pop
sbb
insl
xor
pop
pop
jnp
push
sahf
dec
sub
pop
mov
in
jecxz
dec
adc
xchg
dec
inc
pmulhuw
sbb
inc
cmovo
idivb
cmpb
aas
nop
jo
xor
jbe
maxps
loopne
out
inc
dec
loopne
mov
push
add
adc
dec
and
lods
adc
pusha
dec
in
imul
sbb
xchg
cwtl
fcomps
pop
push
ss
in
mov
daa
ds
fucomip
jnp
or
and
daa
insl
out
sbb
inc
push
pop
das
or
lods
inc
add
mov
mov
idivb
daa
les
enter
xchg
mov
push
leave
daa
xchg
jnp
sti
data16
fs
push
mov
pop
jnp
jnp
dec
fsubl
fisttps
add
test
add
jl
fiaddl
out
inc
mov
mov
outsl
jle
mov
mov
les
scas
clc
mov
lret
or
add
lret
in
dec
inc
push
dec
add
dec
fidivrs
nop
xchg
out
cwtl
fsubl
mov
enter
sahf
mov
int3
inc
inc
add
pop
enter
dec
adc
and
mov
lret
xchg
dec
nop
out
pop
outsl
xchg
js
add
js
jns
in
movsb
lods
cs
dec
sahf
mov
xchg
out
sar
or
fdivl
daa
clc
aaa
and
int3
push
push
lods
add
das
inc
daa
mov
cltd
fsubrs
xor
aas
daa
repnz
mov
addr16
push
aam
xchg
cmp
in
push
dec
lahf
mov
xchg
mov
int
mov
out
dec
xor
inc
push
nop
enter
lods
lods
sub
ja
aam
jns
in
cmp
adc
dec
pop
xor
movsb
inc
in
push
shrb
aam
iret
test
sub
mov
mov
cmp
inc
daa
lock
mov
mov
inc
enter
test
scas
mov
push
loopne
nop
das
sbb
idivl
mov
adc
aaa
je
les
pop
push
push
sub
fiaddl
addr16
mov
iret
test
push
pop
and
mov
daa
add
mov
mov
aam
repnz
rcl
insb
pop
enter
leave
xor
in
fiadds
xchg
cld
pop
fmuls
insb
sar
jl
scas
dec
in
push
orl
pop
int3
ds
cmp
mov
cwtl
cld
ror
xlat
pushf
test
or
sbb
dec
in
nop
stos
or
cld
cmp
repnz
insb
push
enter
cmp
sar
lahf
add
pushf
lods
mov
dec
lahf
pushf
ds
repnz
xor
cld
or
nop
or
in
jnp
repnz
push
pop
lahf
pop
pop
and
pusha
ja
in
nop
out
mov
mov
fsubr
cld
cs
mov
push
dec
jl
rcrl
push
push
shrl
mov
cmp
fcoml
nop
out
mov
cmpsl
or
cmpb
daa
frstor
andb
sahf
or
clc
scas
cmpsl
cmp
pusha
sub
les
dec
push
dec
fisubs
pusha
jg
mov
jns
in
mov
mov
inc
sahf
mov
loopne
nop
add
mov
and
xor
dec
mov
testb
loopne
in
jg
nop
out
cmpsl
and
js
pusha
mov
out
fcoms
inc
sahf
or
js
int3
xor
lahf
out
lock
dec
stc
pop
enter
and
idivb
push
and
cmpsl
js
mov
inc
jg
mov
imul
test
inc
scas
jbe
lahf
je
cs
nop
aam
enter
inc
clc
adc
cltd
fdivs
and
xor
lahf
clc
lcall
int
mov
out
je
dec
sahf
or
pusha
lahf
fs
mov
nop
out
aam
jl
in
mov
add
push
aad
push
adc
sub
btr
jg
test
iret
test
push
jb
cmpsb
test
pop
loopne
iret
test
mov
enter
jge
mov
adc
add
adc
and
fsubrs
xor
iret
test
js
shll
push
jmp
cmp
insb
test
mov
in
lahf
test
mov
test
andb
sbb
movsb
inc
or
pop
in
clc
cmpsl
loopne
fiaddl
jo
aas
cmpsl
test
mov
cmpsl
sbb
mov
mov
fidivrl
push
cmpsl
nop
out
push
mov
push
mov
fistpl
loop
and
hlt
nop
dec
fldt
mov
pop
sahf
push
insl
push
aas
ja
rcrb
mov
xorl
in
or
ja
sub
jg
nop
dec
jmp
rcr
lahf
jbe
shrb
adc
mov
inc
pushf
push
or
push
push
inc
repnz
mov
jg
js
and
pop
lock
js
test
loopne
xor
enter
inc
push
push
push
movsb
inc
mov
jg
int3
test
inc
jo
outsb
addr16
lahf
int3
inc
enter
ja
lock
xchg
clc
pop
in
fstl
out
pop
adc
sbb
mov
fidivrs
ficomps
adc
mov
ficomps
pushf
fdivrp
fadds
cmpsl
mov
cmp
lahf
pop
jb
jo
inc
int3
cwtl
mov
ds
sub
inc
fbstp
cwtl
inc
jg
shrb
int3
rcr
mov
rcl
int3
inc
ja
and
rcl
outsb
xor
in
iret
push
inc
int
pop
pop
jg
xor
loopne
movsl
ss
lahf
dec
iret
add
stos
inc
ja
pusha
fs
fwait
nop
loopne
push
mov
fadds
fiaddl
mov
mov
enter
and
add
mov
in
loope
push
sub
iret
pop
pop
adc
inc
jg
aad
mov
in
pop
daa
insb
lahf
xorl
inc
lock
lods
mov
aaa
mov
incl
fsubs
push
orl
inc
pop
repnz
ja
fs
pusha
pop
enter
fs
pop
enter
mov
repnz
lock
pop
and
mov
jecxz
lock
nop
iret
test
inc
jecxz
mov
cs
in
mov
adc
nop
mov
mov
lahf
nop
mov
loopne
pop
jb
dec
lods
in
inc
loopne
mov
pop
je
in
inc
push
mov
bound
sti
outsl
aas
js
cwtl
add
cltd
nop
push
push
add
enter
xorl
sahf
sbb
in
push
xchg
inc
lds
int3
shrb
cltd
nop
iret
clc
inc
in
pusha
lods
sub
outsl
adc
aad
loopne
mov
addr16
cmp
in
jmp
lock
ss
test
out
pop
sub
lock
call
aaa
and
pop
daa
adc
data16
pop
out
cltd
or
mov
daa
pushf
fcoml
daa
xor
ljmp
mov
scas
xlat
pop
push
sbb
mov
push
or
push
sub
cmp
aas
call
les
pushl
ja
lods
pop
adc
ja
lods
outsl
iret
mov
mov
add
dec
aam
repnz
in
sub
fiadds
out
dec
cmp
push
jae
fwait
dec
push
push
daa
aas
movl
addr16
or
add
pop
out
repz
mov
ja
daa
sbb
dec
scas
fs
dec
inc
in
scas
in
cmp
in
scas
xor
dec
scas
in
and
jne
mov
pop
mov
push
cmp
mov
dec
push
xor
cmpsl
fnstcw
mov
enter
imul
inc
push
and
lock
cmp
mov
mov
clc
out
push
dec
xor
ds
cmpsl
stc
cmp
push
push
dec
repz
mov
jmp
cmp
add
jmp
fisubs
jg
add
inc
in
xchg
pushf
js
stc
and
dec
inc
cld
inc
mov
inc
int
imul
out
cmp
aam
mov
dec
nop
mov
add
cmp
clc
push
inc
out
cld
inc
sub
sbb
ja
mov
sbb
in
ja
dec
xchg
jg
xchg
fmul
xchg
or
inc
dec
outsl
jns
xchg
mov
fdivrl
push
rolb
sbb
in
dec
outsl
add
inc
pushf
inc
pop
test
inc
in
lcall
xchg
mulb
outsl
add
cmp
cmp
dec
enter
cmp
or
shll
add
outsl
xchg
pop
add
xor
data16
sbb
fbstp
push
repnz
mov
out
leave
add
movsb
out
sub
sub
add
dec
xchg
leave
xchg
or
xor
and
xor
out
out
push
xor
out
outsl
add
jnp
ret
fildll
loop
sub
mov
js
aaa
scas
in
dec
js
cwtl
add
pop
scas
in
mov
clc
cmp
dec
add
push
sbb
lock
mov
rol
jg
insl
mov
mov
xchg
and
add
and
sub
fwait
nop
pop
in
lock
fimuls
icebp
popa
sub
xchg
outsl
add
or
and
or
fdivrp
and
or
sbb
jbe
cwtl
lods
fmuls
pop
scas
add
les
add
shl
dec
fisubs
dec
out
add
xlat
mov
in
push
aaa
push
repnz
sbb
out
add
outsl
test
decl
insl
outsl
xchg
push
pushf
daa
addr16
add
jbe
aaa
jmp
call
loopne
pop
cmpsl
mov
or
xchg
push
cwtl
cmpsb
shlb
ret
aam
jg
push
pusha
repz
loopne
cmp
and
xor
sbb
in
shll
repz
pop
sub
fs
jecxz
add
aam
xchg
js
xchg
pop
sub
add
notl
jbe
lock
outsl
push
push
outsl
ljmp
ljmp
testl
push
xor
scas
push
movsb
clc
push
imul
push
cmp
push
out
xchg
clc
loope
xchg
lds
pop
pop
mov
and
cwtl
dec
cwtl
loope
or
inc
nop
and
sbb
push
xlat
or
push
decl
ljmp
add
xlat
or
lcall
clc
mov
cmc
dec
inc
testl
pop
mov
lds
fdiv
pop
in
cmc
mov
testl
and
add
jns
push
shl
mov
jl
loopne
nop
imulb
mov
dec
xchg
and
divb
rcll
push
aaa
sbb
xchg
mov
outsl
add
cmp
icebp
js
cmpsl
pusha
mull
mov
scas
mov
lods
dec
movsb
xchg
mov
mov
daa
in
mov
aad
lods
loop
and
xor
add
pop
enter
insb
aaa
pusha
and
cs
dec
and
clc
fdivr
pop
inc
push
faddl
mov
pop
lods
in
aaa
push
jl
stos
pop
in
sub
pop
loope
stc
cmp
stc
ss
push
adc
xor
add
jns
and
xchg
push
aam
mov
add
lods
fs
int3
xlat
add
loopne
sahf
iret
xchg
fldcw
pop
cli
daa
or
add
faddp
fwait
adc
push
in
cwtl
push
xchg
jns
out
add
call
inc
js
out
in
outsl
mov
or
jnp
jo
aas
add
and
or
add
jg
scas
das
adc
lcall
inc
sti
das
dec
sub
xchg
outsl
add
mov
xchg
movsb
and
or
add
and
js
add
enter
call
dec
xchg
fsubs
rorl
lods
add
pop
lcall
addr16
loopne
mov
nop
or
out
dec
scas
in
mov
or
cmp
std
mov
je
jl
aas
lret
sbb
addr16
sahf
mov
movsb
in
es
fs
aam
addr16
hlt
std
aad
lods
lret
push
dec
imull
xor
mov
mov
inc
xchg
inc
cmp
test
jmp
push
nop
bound
add
aaa
jo
in
nop
out
rcl
or
fdivs
and
push
xor
lahf
fiaddl
cltd
fdivl
and
clc
out
push
jl
shll
les
clc
ja
sbb
push
or
call
adc
aas
ss
sti
pop
shrb
add
dec
shll
cmpsl
fldcw
push
xchg
stos
cmp
repz
adc
lcall
inc
jo
jl
out
mov
add
iret
push
mov
out
sahf
cmp
mov
cmp
repz
xorb
stc
lea
and
jbe
es
loope
nop
dec
repz
cmp
jmp
sahf
out
cmp
mov
cmp
out
mov
or
iret
rep
xchg
shl
xchg
out
sahf
cmpsl
outsb
xchg
mov
out
iret
repz
or
push
int
jns
xchg
and
add
cmp
mov
add
jns
shl
sbb
repz
push
popf
rcrb
push
jns
sbb
pushf
jl
ja
ficomps
sahf
jns
iret
roll
or
fucom
repnz
sub
dec
xorl
push
stos
add
cmp
mov
sbb
iret
repz
push
lea
jns
cmpsl
jp,pt
mov
stc
es
test
lahf
sbb
lcall
push
stos
cmpsl
stc
cmp
jbe
cli
xor
mov
lahf
lods
adc
sahf
mov
ds
jnp
sbb
jns
mov
mov
iret
repz
mov
mov
xchg
and
iret
sarl
ja
adc
jns
xchg
jmp
mov
jns
iret
repz
cmpsb
stc
cmp
out
pusha
mov
sarl
dec
mov
repz
out
mov
fcompl
mov
cmp
jge
sar
xchg
mov
shl
cmp
cmp
ret
jns
je
cli
xor
cmpsl
stc
cmp
add
push
cmpsl
out
out
jl
lds
sahf
data16
popa
push
enter
out
sarl
mov
mov
fnstsw
lret
fiadds
mov
enter
jl
int
xchg
mov
ja
cmpsl
stc
push
iret
fwait
out
sarb
sahf
mov
xor
pop
push
lods
xlat
repz
out
sub
sahf
cmpsl
stc
out
jno
ds
or
andl
add
dec
cmp
out
mov
sbb
mov
stc
pop
fdivs
cwtl
cmp
sahf
ja
lods
inc
fidivl
fstpt
iret
shrl
add
jp,pt
cmp
out
cmp
imul
fisubrs
dec
mov
fildll
imulb
test
xchg
repz
iret
mov
out
mov
ds
hlt
push
push
div
clc
jge
int
jle
loope
movsl
std
int
jns
lods
mov
add
or
add
lahf
int3
lsl
rcr
js
inc
incb
aas
aam
mov
ficoml
inc
cmp
shlb
or
scas
sbb
xor
adcl
jl
add
pop
aaa
jge
inc
nop
int
mov
or
outsb
adc
or
fs
dec
mov
aas
pop
xchg
rcrb
das
std
cmpsb
fcomp
test
ss
aas
das
stos
xor
daa
cmp
jg
xchg
mov
jmp
and
pop
movb
cmp
into
and
loop
jbe
xlat
pop
mov
add
pop
jb
out
aas
int3
addl
mov
je
dec
out
push
clc
mov
inc
outsl
aas
sbb
ds
dec
pop
adc
dec
adc
mov
aas
in
shl
xor
data16
fimull
dec
aas
in
fimull
enter
popf
push
inc
bound
aad
pop
or
push
pop
mov
jbe
out
mov
fadds
push
aam
ret
cmpsl
in
das
dec
or
or
mov
adc
adc
into
shlb
ja
push
pop
sub
shlb
cmp
inc
js
test
xchg
or
sbbl
mov
push
jp
ffreep
lret
push
inc
jbe
mov
cmp
fwait
sarb
hlt
jne
or
jo
leave
sbbl
pop
pusha
outsb
xchg
pop
jb
cltd
fadds
or
into
inc
ja
push
jg
dec
xchg
push
scas
hlt
add
add
inc
pop
cmp
dec
repnz
push
daa
inc
scas
mov
xchg
into
push
dec
fnstenv
add
iret
push
incl
mov
addr16
mov
mov
scas
popf
pop
mov
ja
outsb
fbld
xchg
push
pop
pop
push
cs
dec
cs
fstpl
pushf
xchg
or
pop
int
fadds
mov
cmp
adc
and
mov
movsb
mov
imul
push
xchg
push
insb
push
out
mov
leave
sub
push
int
cmp
sarl
pusha
dec
and
add
pop
repnz
mov
inc
xor
mov
push
daa
inc
xchg
and
sbb
mov
das
mov
ss
jo
mov
bound
stos
loopne
fisttps
outsl
test
faddl
scas
push
scas
jns
adc
xor
add
in
add
sbb
pop
xchg
rorb
outsl
sbb
fsubl
adc
aam
push
lea
mov
inc
scas
aam
xchg
test
adc
and
push
cmp
pop
jb
fs
jae
pop
nop
mov
xchg
pop
mov
loop
iret
das
push
add
pop
fisubl
push
fidivrs
dec
push
cmpsl
and
add
adc
daa
xor
sbb
push
mov
addr16
fisubl
dec
push
daa
push
mov
outsb
pop
outsl
mov
pushf
pushf
pop
add
pop
and
mov
xor
add
repz
aaa
dec
cmpsl
cmpsb
je
subps
adcl
lea
test
mov
push
jo
lea
insl
pop
ja
mov
push
movl
test
imul
pushf
mov
add
push
jg
push
pusha
pushf
pushf
pop
and
repz
xchg
and
add
fldl
leave
sbb
in
fisttpl
inc
mov
pop
cmpsl
adc
popw
outsb
mov
or
pop
xchg
add
leave
add
push
add
rolb
fcmovnb
out
lahf
out
sahf
or
or
or
in
repz
adc
and
push
push
leave
in
pop
push
push
daa
pop
pop
movq
mov
mov
call
es
xchg
mov
add
popf
cmp
lret
add
add
xchg
pushf
dec
or
push
push
push
imul
xchg
xchg
jo
outsl
rclb
cmpsl
lock
dec
leave
orl
dec
sub
dec
pop
mov
jb
das
jge
mov
and
nop
stos
nop
mov
fnsave
jb
ret
nop
rclb
mov
out
xchg
icebp
ss
or
sbb
sbb
cmp
aas
add
cmpsl
sub
push
sbb
in
mov
daa
pusha
pushl
lock
sbb
test
push
pop
aam
in
and
pop
add
into
sbb
xchg
out
xchg
and
icebp
xchg
cld
xchg
or
sbb
fcmovnb
push
fmuls
es
xor
add
loop
filds
fists
cwtl
dec
sbbl
xlat
dec
push
aas
test
dec
ss
xchg
loopne
ja
mov
jp
orl
iret
add
cmpsb
scas
or
xchg
dec
inc
shlb
and
mov
xor
mov
sbb
in
sbb
xor
xor
push
daa
cld
fisttps
leave
add
nop
inc
inc
sbb
or
enter
sbb
xchg
mov
push
mov
popf
mov
mov
test
sbb
xchg
mov
pushf
out
cmp
sbb
push
daa
inc
out
inc
push
adc
add
scas
mov
push
jg
xchg
pop
in
xchg
pushf
js
dec
xchg
push
in
in
in
xchg
les
push
jno
aas
pop
cmpsl
sbb
or
daa
sub
inc
cmpxchg
xlat
sbb
add
out
in
mov
mov
mov
scas
mov
jb
cld
in
scas
or
jb
dec
test
xchg
inc
inc
dec
inc
push
fs
inc
pop
insl
fdivr
ucomiss
push
addr16
cmp
push
add
mov
xchg
xlat
xchg
out
sahf
adc
ja
pop
jb
mov
loop
orb
push
repnz
xchg
enter
jp
add
in
xor
add
push
jb
xor
pop
inc
daa
nop
mov
or
cmp
xlat
adc
push
jo
xor
es
xchg
add
push
iret
push
add
jns
add
add
out
filds
in
sti
repnz
inc
or
rorl
and
xchg
lcall
and
je
xchg
add
test
xlat
roll
je
xchg
and
pop
int3
fucomp
add
cmc
ja
clc
out
cs
movsl
xchg
cwtl
and
popf
popa
jg
pop
paddsw
jns
pushl
xchg
jle
add
addr16
daa
push
out
sahf
pop
and
and
and
movsb
cmp
leave
inc
pop
addr16
mov
mov
mov
xchg
pop
and
mov
dec
dec
mov
push
push
lcall
pop
scas
add
xchg
pushf
test
push
mov
add
pop
fistpl
out
ja
xchg
pop
adc
push
aaa
inc
fbld
pushf
out
es
and
and
mov
fisttps
push
push
adc
xchg
mov
pop
add
inc
scas
adc
xlat
push
pop
mov
cvttps2pi
mov
frstor
adc
daa
cmp
mov
adc
es
adc
enter
popf
aaa
push
iret
jmp
es
leave
xchg
das
vmwrite
fsubl
cld
es
sbb
and
incl
push
daa
push
xlat
xchg
mov
daa
daa
adc
pushf
cmp
cmp
push
add
jmp
add
sahf
stc
int3
icebp
xchg
setle
imul
enter
jg
adc
xchg
jno
pop
sub
jbe
enter
sub
push
jl
mov
imul
push
daa
out
mov
pop
mov
cmpsl
cltd
push
scas
lock
mov
movsb
push
lahf
scas
sahf
mov
repnz
leave
aam
sub
push
sub
lods
sbb
xor
mov
inc
movl
nop
sub
out
mov
fistpll
insl
or
sahf
lahf
pop
fdivs
daa
add
rol
pminsw
leave
dec
fdivl
into
sbb
or
mov
repnz
inc
push
add
cmp
jbe
das
jo
add
cmp
mov
mov
mov
pop
jb
jb
in
and
mov
pushf
dec
sbb
mov
sub
inc
push
xchg
push
push
jae
mov
scas
das
lcall
mov
ljmp
cmpsl
push
dec
sub
cmp
mov
or
push
pop
dec
ja
je
jbe
xchg
sbbb
mov
out
call
mov
fiadds
fsubrp
sbb
jmp
push
inc
cmovnp
leave
jae
push
ja
fs
int
cmp
lea
aas
pop
popf
xchg
movsl
adc
frstors
cmp
iret
repz
sti
jo
mov
pop
movsb
pop
or
repnz
pop
pop
hlt
ss
iret
rcrl
push
iret
jae
cmp
insl
js
and
outsb
daa
mov
cltd
or
scas
das
mov
xchg
out
rorb
adc
loope
jns
cld
adc
pop
movsl
mov
push
cmp
outsb
pusha
stos
mov
movsl
ljmp
inc
imul
dec
das
push
daa
mov
inc
lcall
pop
stos
test
mov
scas
testb
pop
and
fwait
loope
cmpsb
fisttps
push
add
out
mov
lahf
cmpsb
decl
fs
pop
leave
shrb
cmpsb
xor
cmpsb
ja
orb
outsb
ja
cmpsb
pop
xor
iret
xchg
fcoms
xchg
pop
jb
sti
in
jne
dec
js
cmpsl
pop
push
daa
movsl
dec
repnz
add
cmpsl
sbb
mov
pop
xchg
xchg
push
ljmp
mov
test
das
add
and
xchg
xor
mov
fsubrl
mov
jmp
and
les
xor
xor
fmuls
loopne
and
lock
cmp
ret
mov
test
sbb
daa
iret
sbb
push
add
cmp
iret
cmovg
movsb
in
and
fbstp
adc
cltd
push
cmp
jg
in
cmpsl
jp
in
pop
cmc
test
std
test
pushf
in
xchg
test
xorb
lret
addl
test
pop
sub
mov
divps
xchg
push
add
mov
mov
push
lret
or
dec
push
pop
xor
test
js
incb
stos
je
in
sub
out
mov
xchg
push
leave
jnp
rorb
pop
push
push
jle
pop
and
or
cmpsl
scas
adc
xor
cmp
in
out
cmp
das
decb
sbb
add
sub
mov
push
lods
pop
insl
pusha
xlat
outsb
stos
pushl
out
stos
lcall
cmpsl
stos
iret
ficoml
loop
ljmp
test
jbe
lods
xchg
in
dec
lcall
xchg
xchg
xchg
or
dec
push
insb
pop
in
xchg
pop
mov
adcl
iret
movsb
shrd
js
iret
mov
mov
fcmovne
add
out
pop
enter
imull
iret
jae
fimuls
push
push
push
pop
pop
or
jae
cmp
das
or
aas
iret
repz
or
or
repnz
pop
adc
push
mov
ja
jg
unpckhps
xchg
xchg
lods
xlat
lock
sbb
push
add
mov
push
pushf
cmp
inc
scas
das
fsubl
adc
dec
push
dec
cmp
scas
ficoml
cmpsl
push
mov
cmpsb
scas
scas
call
sbb
add
xchg
cmp
scas
pop
pop
insb
mov
scas
das
dec
ja
fiaddl
scas
mov
lock
mov
out
add
cmp
jmp
mov
dec
in
in
or
into
or
mov
fimuls
imulb
out
push
test
fimuls
dec
out
add
outsl
jp
pop
aam
js
pop
jbe
aas
ret
jnp
and
inc
mov
pop
dec
or
outsl
rorb
adc
adc
ja
and
cmp
push
cmp
nop
jl
mov
inc
adc
bound
cmp
mov
mov
push
outsl
dec
push
add
cmp
into
push
out
sub
add
out
in
mov
pop
xchg
or
shrl
lea
call
or
cmp
mov
sbb
cmp
loope
ja
notl
incb
mov
mov
adc
decl
push
cmp
inc
mov
rolb
dec
mov
iret
xlat
popf
jnp
out
jp
cmpsl
push
xchg
push
out
fnsave
cmpsb
push
mov
dec
in
jno
or
out
mov
cs
xchg
int
sarb
mov
repz
repz
add
add
add
repz
dec
add
add
repz
pop
mov
xchg
hlt
cmp
repz
insb
or
mov
daa
mov
sbb
daa
std
mov
add
add
repnz
add
or
add
and
sbb
sub
in
dec
cmp
enter
mov
sbb
pushl
mov
lahf
jg
into
mov
mov
cld
incl
in
xor
mov
cltd
aas
in
pop
in
jbe
jb
fst
int
cmpsl
add
xchg
out
jo
mov
roll
sbb
mov
pop
jb
jb
inc
cmp
leave
in
in
iret
ja
ja
incb
xchg
add
leave
inc
mov
xchg
xchg
mov
in
lods
inc
out
and
cmp
adc
lods
mov
pop
ss
ds
inc
shll
punpcklwd
insb
mov
xor
lahf
jbe
cmp
cmpsl
scas
mov
ret
out
fisttpll
add
pop
cmp
enter
testb
or
mov
scas
push
mov
or
or
stc
or
add
cs
and
gs
in
adc
insl
inc
mov
pop
scas
cs
pop
or
scas
insb
dec
dec
dec
rorl
pop
push
mov
movsb
inc
fsubrl
cwtl
pushf
je
out
ja
outsb
inc
leave
or
inc
mov
out
fmull
iret
out
xlat
pop
fbstp
xchg
pop
out
maskmovq
or
setb
sbb
mov
lret
and
inc
cmp
rorl
mov
mov
pop
aas
pop
and
in
push
push
test
pop
mov
pushf
nop
lcall
dec
cs
call
cmp
adc
sbb
das
and
dec
je
je
pop
xchg
push
addr16
decl
jns
mov
lea
sarl
daa
adc
in
hlt
mov
jne
mov
dec
sahf
flds
xlat
inc
mov
push
dec
mov
jo
pop
jb
in
xchg
out
pop
aaa
rorl
add
mov
mov
fsqrt
cmpsl
push
adc
pop
in
xor
xchg
enter
mov
push
add
das
mov
popl
leave
in
in
xchg
fimuls
add
out
cmpsl
cld
js
bnd
mov
das
mov
xlat
push
inc
inc
mov
xchg
ja
mov
mov
mov
dec
mov
mov
mov
fstpt
add
fsubl
iret
repz
out
repnz
leave
xor
jns
or
mov
cmp
push
push
movaps
cmp
sahf
pxor
inc
scas
mov
pop
push
add
leave
leave
shrl
jg
imul
xchg
setg
jns
mov
in
outsb
mov
xlat
jecxz
jmp
xrelease
lock
aas
adc
xchg
sbb
fmulp
aaa
mov
pop
mov
cmp
add
jbe
jle
sahf
out
jbe
lcall
sahf
movsb
mov
addl
mov
pop
sub
or
xchg
xchg
xchg
mov
dec
lcall
push
jae
mov
xchg
setle
test
scas
movswl
dec
xlat
push
pop
in
dec
das
xchg
out
cli
dec
or
in
and
dec
push
pusha
sub
mov
fucomi
js
out
orb
push
add
outsb
push
dec
cwtl
xlat
or
dec
scas
loopne
mov
adc
xchg
in
pop
push
aas
push
mov
shlb
iret
mov
push
add
adc
and
sbb
das
cmp
mov
test
lahf
jo
scas
shlb
sub
push
ror
fcmove
repz
add
adc
ds
cli
add
pop
mov
shl
xor
xchg
dec
dec
pop
iret
pusha
shll
and
pop
mov
sar
iret
leave
in
in
mov
popf
pushf
pop
and
fisubrs
cmp
xchg
mov
adc
sbb
mov
xchg
sub
inc
xchg
leave
leave
in
in
push
subps
lock
dec
das
pusha
xchg
setg
iret
cmpsl
out
cmp
push
mov
or
ljmp
add
enter
ret
daa
ret
ret
xchg
mov
ret
js
push
xchg
imul
pop
punpcklbw
mov
mov
fwait
add
out
in
mov
xlat
mov
icebp
daa
stc
fbstp
jp
test
sbb
pop
add
fwait
les
fucom
jns
push
xchg
add
clts
aaa
leave
xchg
push
sahf
inc
les
fidivrs
sbb
mov
les
dec
cmpsb
mov
push
ret
fsubrl
aas
int3
paddq
xchg
inc
and
inc
lds
jb
movups
and
leave
xor
lds
adc
addr16
cmpsl
mov
xchg
xchg
xchg
mov
leave
mov
ds
lds
dec
fadds
xchg
jecxz
enter
push
add
add
dec
jb
shufps
push
shr
xchg
test
push
add
push
jmp
loopne
imul
push
cld
dec
mov
aas
pushf
repnz
jo
shrd
call
iret
mov
loope
xchg
dec
adc
scas
inc
push
das
pop
pop
iret
leave
sub
and
sahf
cmp
inc
pop
dec
outsl
push
bound
pop
push
jae
outsb
stos
dec
jl
xchg
iret
mov
dec
popf
pop
popf
fildll
jb
mov
jmp
in
aam
fcomip
ljmp
sub
out
or
xchg
insb
pop
dec
pop
psubb
pop
das
cs
mov
insb
jmp
and
add
cmovp
ss
add
enter
jb
pushf
movsb
setnp
cs
lods
enter
es
je,pt
push
cs
enter
fcmovne
repz
or
in
in
mov
stc
add
jle
leave
mov
adc
push
dec
leave
fidivrs
nop
mov
push
add
xorl
leave
iret
xlat
or
inc
mov
jo
idivl
fadds
push
inc
movhlps
lret
cmp
pop
rolb
fiaddl
fwait
mov
push
ljmp
out
push
iret
cli
push
or
das
or
pop
leave
out
decl
push
inc
shll
pop
sahf
pop
jmp
add
add
sub
cltd
lret
pop
add
mov
addr16
addr16
or
clc
pop
add
or
outsb
jae
outsb
adc
pop
cmovg
xchg
add
and
xor
mov
insl
push
jmp
push
lret
pop
mov
lret
xchg
addr16
pop
pushf
pushf
xchg
setg
cmpsl
cmp
mov
mov
cmp
sub
mov
mov
push
sbb
add
jns
out
and
jns
out
push
or
pop
or
or
inc
repnz
mov
pop
pushf
cmp
xadd
push
sbb
pop
jecxz
fsubrl
mov
psubq
int
cwtl
mov
add
repnz
adc
sbb
pop
xchg
sbb
int
dec
jne
outsb
dec
push
scas
int
in
bswap
add
pop
and
xor
int3
pop
add
movsb
pop
pop
rolb
test
or
xchg
aaa
cmp
mov
int3
mov
cmp
cmpsb
lcall
int
int
push
sbb
into
sahf
fldt
xor
add
sahf
out
push
add
cmp
cmp
or
cmp
or
repz
or
iret
cmp
repz
ficoml
in
stc
cmp
repz
adc
iret
iret
repz
cmpsl
adc
pop
daa
cmp
repz
xor
cmp
repnz
prefetcht1
xchg
xchg
xchg
xchg
push
adc
xchg
xchg
adc
adc
sbb
xchg
xchg
push
or
add
add
iret
faddp
and
out
iret
das
mov
add
sbb
inc
aas
push
xchg
pop
fisubrs
or
pushf
pop
and
mov
lods
idivb
mov
adc
fidivs
mov
daa
scas
xchg
es
mov
pop
daa
or
inc
cmpsl
frstor
push
dec
and
xchg
jl
sar
shlb
jp
mov
push
pop
shl
in
movsl
jmp
jl
inc
mov
das
out
in
cmpsl
pop
ror
sahf
out
add
iret
add
mov
or
pop
inc
daa
xchg
pop
adc
ljmp
pushf
pop
mov
addr16
push
pushf
pop
and
rclb
hlt
xlat
daa
xchg
xchg
fmul
iret
sub
shr
rclb
lcall
stc
sbbb
rcl
jmp
and
pushf
cmp
pop
xchg
add
add
les
cmpsl
mov
adc
call
out
into
pop
rclb
xchg
out
fmulp
add
or
add
add
repz
add
rep
daa
xor
push
or
sahf
out
cmp
push
push
or
or
popa
push
imul
cwtl
adc
in
add
shr
xchg
inc
popa
cmp
fstp
call
repz
shl
out
sub
pop
cmp
inc
das
enter
popa
addb
or
or
lahf
xor
xlat
mov
dec
inc
aam
push
add
pop
aam
pop
inc
cmp
out
push
fildll
jno
jle
and
adc
pop
jmp
es
bound
mov
iret
xlat
pandn
mov
or
sbb
cmpsl
mov
push
mov
daa
adc
ja
imul
ja
jg
aad
mov
mov
push
add
mov
xchg
cwtl
js
sub
bound
mov
pop
rcrl
xlat
cmova
incl
push
jg
popa
mov
cmpsb
out
mov
les
push
sbbl
pop
push
loop
pop
adc
jmp
gs
inc
xor
mulw
sbb
outsb
aas
xlat
inc
fimuls
jmp
or
sbb
xlat
je
popf
fldt
inc
repnz
icebp
notl
pop
xlat
iret
popa
xlat
lods
fwait
cmp
push
push
jno
add
cmp
iret
leave
add
jns
or
pusha
mov
xchg
push
btc
xchg
cltd
adc
mov
jae
pop
push
int3
fisubrl
mov
xchg
notl
lods
fisttpl
addr16
and
leave
xchg
fsubrs
fsubr
in
loope
dec
data16
xchg
cmp
addr16
mov
pxor
push
xchg
push
add
sahf
outsb
repnz
push
in
and
dec
idiv
or
adc
repnz
sbb
sub
shrb
addr16
dec
push
add
cs
mov
dec
push
mov
fwait
pop
movsl
ss
jl
xchg
dec
push
jae
shrl
in
enter
fnsave
ud0
invd
or
mov
or
and
cmp
mov
fidivrl
seto
inc
push
rolb
fisubrl
mov
cs
pminub
add
sub
ljmp
mov
addb
add
mov
ficompl
or
call
ja
inc
pop
sbb
shll
lock
in
cvtdq2ps
add
out
or
or
xlat
enterw
push
es
dec
jb
adc
pop
fildl
insb
add
movsl
mov
fmull
push
popa
cmpsl
fistps
test
popf
mov
loopne
pop
pop
adc
pop
mov
psubd
leave
inc
js
and
and
popa
pop
jns
pop
leave
mov
pop
mov
lods
xchg
imul
and
pop
dec
outsb
loopne
lock
inc
and
clc
pop
or
in
in
pop
push
add
add
out
add
or
out
and
or
cs
sub
push
fstl
cs
insb
cmp
sub
les
ja
daa
daa
pop
add
into
insl
pop
movq
cmp
clts
mov
iret
leave
iret
xlat
or
repnz
pop
or
insl
add
into
leave
add
pop
bound
pop
jae
jns
cmp
xchg
mov
popf
pop
dec
pop
lods
mov
mov
dec
andnps
or
das
outsb
repnz
push
pop
gs
repz
repz
adc
jge
dec
dec
mov
push
daa
daa
daa
mov
pop
vpmullw
mov
in
sbb
repz
cmc
pop
std
mov
testl
mov
and
cmp
repz
cmp
iret
repz
push
sub
pop
cs
insl
fnstcw
jne
jge
das
xor
insl
andl
mov
sbb
sub
adc
outsl
outsl
fsubl
adc
mov
push
jns
jns
inc
fisttps
push
loopne
lea
xchg
xchg
mov
je
dec
andps
outsb
daa
daa
pop
xchg
add
fs
mov
rorl
repz
xchg
add
mov
jmp
scas
cmpsl
mov
fucomi
in
or
loopne
jmp
cmp
jnp
testb
into
or
sahf
xchg
out
sub
adc
adc
unpcklps
out
xchg
xchg
loope
loope
pop
lcall
sbb
jns
into
sbb
sbb
out
repz
loope
sahf
out
push
and
jns
out
and
inc
sahf
out
sahf
and
push
sub
subb
jns
out
sub
sahf
sub
rcr
in
in
xor
call
mov
mov
jg
jecxz
adc
mov
out
fisubrs
inc
es
out
sahf
dec
and
jns
out
insb
and
and
sahf
out
lea
cwtl
push
sahf
out
sahf
mov
sbb
out
les
iret
sbb
out
sahf
out
in
lock
iret
sarl
dec
push
in
adc
sahf
out
push
sbb
sub
xlat
dec
pop
aaa
sqrtps
pop
push
jle
mov
dec
cmovp
sahf
out
pop
pop
pop
data16
iret
mov
mov
push
xchg
or
lahf
add
in
in
test
jno
outsl
call
psadbw
in
pop
in
and
das
daa
in
in
pop
iret
repz
aas
or
or
repz
or
sbbb
mov
push
setle
out
adc
jns
out
adc
adc
sahf
out
sahf
adc
out
enter
sbb
sbb
jns
adc
sbb
sub
xor
cmp
sahf
out
push
and
das
mov
in
jbe
dec
js
orl
fwait
out
cmpsb
push
sbb
jns
pop
rcll
out
sahf
out
aam
fcoml
sahf
out
sahf
in
in
adc
adc
repnz
cld
movd
or
sahf
out
sahf
or
and
sahf
out
or
or
or
cmp
inc
out
out
cmpsl
fwait
cmp
push
arpl
inc
xchg
es
dec
out
dec
jne
sbb
movsl
outsl
lods
out
shrb
mov
pmaxub
cmp
mov
add
aad
aad
fstpl
in
fucomip
push
inc
ds
pop
std
divps
xchg
testl
adc
in
repnz
sbb
out
sbb
call
lahf
sbb
xchg
jp
dec
xor
xorb
push
push
daa
mov
in
push
add
jecxz
add
jmp
psubq
jmp
or
sbb
and
out
sub
adc
push
push
adc
jb
cmp
orb
lcall
mov
ret
ret
cmp
fsub
and
jmp
and
mov
xlat
rclb
nop
movaps
jns
outsb
pop
xor
add
out
pop
push
pop
packsswb
je
out
or
or
fisttpll
ja
push
push
orl
out
adc
add
bound
scas
xchg
xchg
test
aas
jns
sbb
jmp
adc
add
sbb
daa
pop
xor
jns
out
or
push
repz
cmp
mov
or
pusha
push
iret
repz
imul
adc
cmp
lods
push
adc
repz
into
psubusw
in
add
cli
add
notb
in
pop
sbb
in
pop
cmp
and
in
dec
pop
and
in
dec
sahf
and
leave
leave
leave
in
lahf
rsm
mov
repz
leave
lret
loope,pn
in
loop
in
imul
outsl
xor
mov
in
addr16
repz
shrl
xchg
test
add
dec
in
push
add
pusha
push
push
je
repz
or
nop
in
jns
lcall
in
mov
ret
dec
sahf
out
adc
loop
ljmp
cli
sbb
out
repnz
pop
bndldx
or
adc
sahf
outsb
nopl
push
mov
stc
mov
nop
jnp
pop
cmp
cmp
maxps
jns
cmp
cmp
cltd
sbb
xchg
out
mov
push
leave
out
mov
ja
es
lock
add
std
dec
inc
sahf
or
push
and
fildll
sahf
aaa
stc
hlt
push
or
cmp
push
or
fucom
jns
bound
mov
in
jbe
pop
jp
test
lahf
fwait
sahf
out
outsb
mov
adc
adc
leave
push
aam
paddsb
mov
shl
into
push
sbb
jns
out
call
in
lret
add
mov
nop
pop
insl
jbe
jbe
icebp
jg
icebp
lahf
cmp
mov
neg
add
movaps
sahf
jnp
mov
jg
sub
push
sub
jg
cs
das
pop
sahf
out
sahf
xor
jb
jge
mov
xor
xchg
sahf
in
sahf
out
ss
aaa
mov
mov
sub
cmp
cmp
mov
jg
dec
mov
pop
pushf
cmp
xchg
aas
mov
out
outsb
xadd
inc
xlat
dec
sahf
out
inc
in
icebp
sahf
out
fisubrs
or
dec
adc
adc
add
stos
sarb
daa
je
push
loope
aas
dec
push
dec
dec
das
fwait
lret
mov
dec
inc
jge
jg
xchg
icebp
cmpb
push
mov
cmovle
jle
jns
pop
jns
repnz
push
mov
in
mov
or
or
iret
leave
leave
iret
fsub
or
ds
repnz
push
push
adc
sbb
jns
out
adc
inc
push
jb
cmp
adc
adc
sahf
ja
pop
sbb
jge
pop
lcall
mov
bswap
push
and
loopne
pop
loop
leave
jmp
add
jg
jne
nop
insb
clc
jg
push
add
sbb
push
pop
hlt
mov
lahf
jno
jl
es
cmp
add
dec
sahf
out
add
jb
leave
repz
aam
lahf
outsb
jns
fcompl
ljmp
repnz
cmovle
cmc
and
leave
repz
cs
adc
adc
repz
push
pop
pop
jns
iret
repz
cs
dec
sahf
out
sbb
enter
mov
sub
mov
jns
enter
and
cmp
insl
fimull
jmp
lea
sub
sub
adc
iret
mov
inc
cmovl
mov
xor
lds
mov
int3
aas
div
push
add
cmp
into
aas
fidivrs
out
lahf
out
xor
aam
outsl
testl
add
es
mov
jns
in
negl
push
push
pop
movntq
ja
push
or
jle
rorl
or
into
repz
cmp
stos
adc
negl
adc
adc
jbe
fsub
pop
xlat
jl
out
ds
pop
stc
sbb
out
jl
sbb
mov
sahf
out
sahf
sbb
sub
xor
xchg
xchg
out
aas
and
out
sahf
and
jp
mov
out
test
nop
popf
fsubrl
mov
leave
scas
testb
mov
pop
dec
push
or
sbb
into
repz
sbb
add
stc
sahf
pop
stc
adc
inc
dec
sahf
out
add
pop
push
pop
jae
orb
repz
repz
repz
mov
mov
jns
rorl
pmaxub
mov
aam
push
pop
cli
push
adc
ja
or
push
adc
out
outsw
cmp
inc
sbb
es
jns
push
push
sub
cmpsb
cli
daa
daa
iret
dec
pop
push
add
jne
jg
push
add
enter
pop
out
or
repnz
es
incl
sti
jns
fbstp
prefetch
sti
pop
push
paddusw
out
adc
cmp
inc
jns
iret
mov
push
pop
push
push
fmull
out
pop
insl
js
xor
iret
repz
repz
fwait
sbb
out
fidivs
and
repnz
into
and
enter
xchg
sti
or
cmp
insl
jbe
cld
pop
and
sub
sahf
testl
xchg
pop
fs
cld
int
cmp
sahf
out
mov
cmpsb
adc
adc
jns
call
daa
push
sbb
in
cld
or
push
push
sbb
xchg
out
sub
pop
aaa
inc
std
lahf
sahf
xchg
or
dec
std
fisttps
arpl
out
and
and
in
in
setp
jl
mov
pop
sub
xchg
inc
cmp
cmp
xor
mov
loope
ja
pop
lock
clc
outsb
pushf
sbb
sbb
xor
das
dec
fsubrs
push
filds
sbb
jns
push
mov
leave
shrl
pop
syscall
lcall
mov
mov
xchg
syscall
or
fisubrs
iret
or
unpcklps
cmp
jnp
pop
adc
sub
xor
inc
push
adc
xchg
pop
loopne
lcall
les
in
sbb
fisubrl
sbb
out
jecxz
repz
es
cmp
mov
das
popa
push
and
repz
ja
orb
cwtl
daa
mov
movsb
fwait
pop
das
sub
sahf
ja
cmp
iret
push
das
fisubl
fucom
jns
in
pop
xor
xchg
out
cs
push
add
ss
add
ds
outsb
aaa
pop
push
outsb
push
jmp
insb
emms
pop
iret
leave
repz
cmp
cwtl
dec
and
clc
mov
cmp
into
aas
setb
in
in
add
push
out
cmp
int
fmuls
jecxz
jns
sahf
or
stc
or
add
cmp
add
sbb
daa
push
adc
jns
leave
repz
cmp
jbe
pusha
das
imul
push
pop
xorl
pop
scas
repnz
daa
mov
sahf
out
fisttpll
call
ja
repnz
add
cs
mov
sub
sahf
xchg
out
jns
test
sub
out
scas
pop
cs
jns
in
adc
das
pop
push
xor
xor
xor
outsb
xor
fucomi
cmpsb
lahf
mov
mov
xchg
rcr
dec
add
push
lahf
push
out
dec
inc
sub
pop
add
xchg
addr16
pushf
fisttps
add
jns
in
fstpl
push
pop
mov
cmp
packsswb
ficompl
das
smsw
add
data16
cwtl
dec
in
popl
cmc
fwait
xchg
inc
mov
push
or
es
sbb
xor
fs
mov
jno
mov
cmpsl
fmul
inc
mov
es
mov
adc
cmp
pop
push
push
mov
pop
xor
loopne
sub
xchg
subl
out
out
orb
and
xchg
rorb
push
cmp
mov
add
add
aas
inc
push
or
sub
lahf
rorb
add
cmp
aaa
sub
aaa
xchg
aaa
sub
xlat
add
cs
popf
push
jbe
mull
arpl
mov
or
decl
pop
or
dec
outsb
daa
daa
or
aaa
or
jbe
jne
or
daa
jbe
mov
and
in
inc
push
addr16
das
mov
xorps
insl
cmp
pop
push
sbb
mov
orl
mov
xchg
sub
in
in
sahf
mov
in
shll
pop
or
jo
mov
mov
add
add
adc
lods
and
or
test
add
or
lcall
aam
add
push
and
mov
pushf
add
add
movsb
add
pusha
cmpb
cmpsb
fisttps
mov
repnz
mov
cmp
decb
inc
mov
out
in
inc
mov
iret
mov
in
call
mov
push
add
in
cmpsl
in
push
pop
fisubrl
xor
fcomp
loopne
jb
loope
adc
in
xchg
pushf
and
xchg
nop
repz
repz
repz
insb
pusha
push
dec
inc
cmp
iret
repz
xor
sub
repz
repz
sbb
adc
imul
and
in
and
out
outsl
in
faddl
aam
shlb
mov
dec
out
cwtl
out
out
push
dec
insb
push
fs
pop
push
jns
repnz
into
sbb
iret
repz
aam
mov
cmp
mov
jns
repz
push
sahf
push
cmp
and
push
or
out
ds
and
fadd
mov
pushf
neg
jns
xchg
pushf
push
je
pusha
push
inc
add
pop
icebp
adc
add
adc
in
push
xor
cmpb
lock
js
clc
mulb
gs
incl
dec
hlt
xor
jno
xor
aas
sbb
es
push
or
lock
push
orb
lock
mov
xorb
iret
dec
outsl
lock
call
push
mov
daa
push
adc
je
fists
pop
shll
inc
sgdtl
push
adc
jg
add
sbb
xchg
jb
mov
add
add
mov
arpl
fsubs
pop
das
add
popl
or
add
js,pn
dec
mov
inc
stc
pop
jg
jl
addl
pop
out
fdivrs
lock
repnz
out
sbb
jb
es
jns
ja
xor
insb
ss
out
and
sahf
push
mov
and
sbb
adc
ds
and
sahf
testl
jns
out
and
or
or
adc
fcompl
repz
jns
adc
xor
sub
and
push
and
sahf
out
and
and
and
add
aaa
inc
dec
cmp
or
clc
rol
xchg
fucomi
pop
imul
daa
xor
and
subb
fmulp
xlat
xchg
incl
xorl
fistl
cmp
repz
xchg
mov
in
repz
repz
xor
dec
insl
add
jns
aaa
cmp
pop
ja
mov
testl
das
push
dec
insb
adc
xchg
xchg
mov
repnz
jb
or
or
ret
cmpxchg
cld
xchg
movntps
sbb
leave
sbb
scas
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
mov
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
ljmp
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
gs
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
pop
hlt
lcall
cmpsb
lock
mov
popa
sar
mov
sbbb
std
ljmp
mov
subb
fwait
xchg
and
xor
int3
add
aas
jno
or
mov
out
or
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
jmp
test
inc
lods
lds
mov
insb
scas
add
aas
xor
aad
mov
jmp
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
dec
adc
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
jg
lcall
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
std
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
jg
inc
xchg
test
pop
mov
jne
fldt
cmp
jno
sar
jmp
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
cld
outsl
call
and
dec
dec
gs
std
orl
pop
ficomps
frstor
sbb
into
or
or
addb
jno
mov
add
pop
repnz
inc
inc
je
inc
inc
push
dec
jnp
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
mov
xchg
jg
stos
insb
cmp
int
fdivrs
pop
fisubl
call
dec
inc
jo
inc
popa
push
outsb
jbe
imul
push
mov
gs
outsl
dec
cs
and
add
adcb
shlb
in
leave
add
push
dec
out
sbbb
inc
dec
push
inc
push
adc
jnp
jo
jb
push
push
adc
inc
inc
inc
test
mov
dec
inc
gs
gs
insb
xchg
clc
mov
ds
arpl
test
rcl
or
bound
outsl
push
dec
pop
mov
push
push
xchg
and
xorb
xor
and
fisubrl
and
inc
push
das
push
fs
add
push
mov
cwtl
add
xchg
dec
rorl
daa
daa
mov
jge
dec
jae
imul
xor
inc
jg
jnp
cmovae
loopne
lahf
or
push
push
les
push
cmp
jp
test
je
dec
rclb
shlb
push
push
imul
sub
insl
inc
inc
inc
inc
adc
jb
dec
fidivrl
dec
lds
jae
jbe
mov
push
dec
test
push
mov
adc
xchg
int
cmpsb
adc
push
mov
mov
aas
push
sti
dec
popa
jne
arpl
and
dec
pop
cmp
pusha
pusha
xlat
push
or
dec
rol
mov
add
aad
and
clc
pop
mov
js
cli
dec
sub
mov
or
or
push
add
scas
push
jg
notl
push
imul
andl
loope
jb
lds
orb
das
pop
add
push
mov
addl
jp
lock
push
sbb
and
gs
stos
or
mov
push
push
outsl
push
inc
arpl
push
lds
test
out
xor
pop
jg
adc
mov
mov
cmp
sbb
mov
mov
data16
push
add
jno
outsl
mov
pusha
pop
outsl
ja
or
pusha
pop
es
add
aam
or
arpl
inc
or
push
inc
jo
adc
lahf
ss
pop
icebp
ja
stos
sub
push
gs
dec
scas
sub
dec
lahf
sbb
pop
inc
dec
subb
push
lahf
nop
leave
dec
add
adc
test
jg
sbb
rcrl
mov
aas
decl
out
sub
add
stos
lahf
mov
inc
jno
nop
cmp
out
mov
and
outsl
shl
mov
dec
dec
jb
inc
test
js
add
cmpsl
mov
aam
arpl
dec
outsl
add
push
movsb
and
outsb
push
sub
fisttps
pop
push
jne
les
outsl
sbb
cmp
loopne
push
mov
jle
dec
outsl
addr16
rolb
aad
iret
cmpsb
test
mov
iret
pop
sub
fcmovb
insl
pop
arpl
lea
das
xlat
stos
dec
adc
out
jg
repz
cwtl
incb
jl
dec
sahf
out
cmp
or
jns
out
mov
jl
sub
cltd
shl
rol
data16
inc
insb
pushf
cmp
jmp
dec
push
js
pushf
cmp
pause
push
and
lahf
incl
ljmp
add
popa
push
out
mov
inc
insl
pop
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
call
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
lcall
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
jmp
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
or
xor
iret
or
shrl
pushl
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
mov
add
and
or
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
ja
pushl
aam
call
xor
mov
lcall
cwtl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
decl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
ljmp
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
dec
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
pushl
mov
lcall
ljmp
fildl
push
fdivl
or
test
cmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
rcl
jmp
add
inc
push
imul
xorb
sbb
push
imul
jg
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
mov
or
sub
mov
cmpsl
call
ret
shlb
sbb
pushl
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
pushl
hlt
orb
adc
mov
jnp
sbb
xchg
or
out
fdivr
jl
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
cmp
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
call
std
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
ljmp
mov
inc
jmp
repnz
lret
mov
cmpsb
mov
pushl
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
cs
movsb
mov
or
sbb
add
add
iret
push
loop
shlb
xor
cmc
mov
cmpsl
outsl
inc
jne
push
popl
or
mov
imul
je
push
insb
imul
lods
pop
filds
sar
pop
inc
jbe
push
jns
arpl
arpl
mov
fsubrs
in
push
inc
insl
sub
mov
pop
inc
jne
outsl
insl
addr16
xchg
sbb
rcrb
add
or
xorb
ja
adc
cmp
push
xchg
mov
dec
inc
js
xor
bound
cmp
inc
js
pop
ret
sub
fistl
in
sbb
and
aas
pop
inc
cmp
pop
imul
jmp
xor
aaa
cmp
popa
arpl
cmp
arpl
or
popa
add
jg
xor
xor
xor
loope
dec
les
inc
jbe
pop
sbb
adc
icebp
xor
inc
ret
negb
cmp
inc
or
xchg
inc
lock
fmull
push
pop
shll
mov
mov
cwtl
push
ss
jbe
arpl
add
aas
movsl
sbb
ret
aam
jle
hlt
nop
fsubrs
inc
push
clc
xchg
inc
jo
js
sbb
and
inc
fldl
xchg
insb
popa
jns
pop
mov
push
push
dec
insb
xor
and
rclb
movq
popl
in
push
and
and
jae
cmp
adc
push
aas
dec
nop
lods
stos
cmpsl
push
mov
inc
fcomp
insb
sbb
inc
pop
pop
add
jae
inc
mov
in
fiadds
add
ds
test
mov
mov
mov
call
xchg
sbb
arpl
inc
outsb
jne
and
mov
dec
jge
int
jne
xor
xor
or
inc
cmc
mov
add
addr16
push
xchg
into
pop
jo
or
pop
inc
cmp
add
aaa
dec
add
je
orb
sbb
dec
ss
inc
mov
pop
push
xchg
inc
mov
lahf
inc
dec
mov
or
mov
push
pop
adc
rclb
lds
jb
dec
add
frstor
push
js
adc
jo
sahf
add
lahf
aas
push
outsl
outsl
mov
mov
push
pop
push
jno
inc
stos
and
in
sub
pop
shl
shr
test
pop
cmp
arpl
push
cmp
inc
and
mov
call
lea
lock
jns
jne
jo
das
inc
pusha
push
popa
jb
push
fs
mov
sbb
nop
adc
mov
adc
insb
bswap
arpl
clc
or
bound
pop
dec
popl
test
push
aaa
ja
or
ret
movl
xor
bound
sbb
add
push
sub
aaa
pop
jl
adc
loopne
push
pusha
pop
popl
addr16
xor
testb
push
xchg
mov
and
mov
movsl
sahf
aas
pusha
popa
adc
cmc
jg
outsl
shll
dec
and
sbb
cs
push
outsb
cwtl
adc
dec
pushf
mov
inc
lds
jns
daa
aas
pop
inc
or
mov
add
and
add
pop
adc
mov
cmpsb
mov
add
add
dec
pop
nop
pop
dec
popa
andb
mov
std
clc
or
addb
mov
int
mov
aas
add
pop
and
popa
insl
xchg
add
and
mov
mov
sbb
inc
dec
push
and
mov
or
cmpsb
dec
shrd
popa
incl
mov
pop
or
bswap
mov
out
lahf
jg
out
ud0
jmp
repnz
in
push
pusha
ljmp
mov
ss
cli
push
cld
push
imul
lahf
daa
or
push
pushf
dec
cs
push
dec
daa
loopne
add
or
or
xlat
sub
aam
cmp
add
pop
jge
int
add
in
mov
imul
adc
sub
xor
xor
rcrb
jo
mov
in
stos
and
sub
push
jl
inc
lcall
dec
and
test
pop
add
cs
xor
popf
add
les
movb
adc
lods
add
jb,pn
rcrl
and
outsl
and
cs
cmp
mov
or
rol
xchg
sahf
jae
arpl
xlat
out
in
xchg
test
gs
testl
sbb
inc
xlat
orb
dec
cmpsb
icebp
add
sub
or
inc
jmp
jecxz
and
add
hlt
pop
scas
ds
lea
add
push
sbb
push
xor
pop
lods
dec
jne
sahf
sbb
jp
pop
xchg
gs
sub
rol
imul
jbe
mov
xor
xor
xchg
enter
out
jno
int3
fucomi
gs
std
cvtps2pi
faddp
ja
jne
jmp
mov
lahf
sahf
ja
cwtl
pop
mov
cltd
das
call
mov
in
cltd
jb
xchg
into
int3
loope
dec
shr
pop
mov
adc
sar
hlt
mov
out
fwait
and
or
push
adc
icebp
pushf
adc
subl
push
push
pop
xchg
pusha
push
lret
cmp
hlt
jb
lea
stos
mov
push
mov
cld
imul
movzbl
or
rcll
mov
popa
cmp
adc
rolb
sub
outsb
movaps
mov
jbe
mov
repz
pop
aam
adc
call
fildl
add
cmp
nop
push
pop
cmp
in
push
mov
push
push
movsb
lret
adcb
loopne
pop
outsl
sarl
xor
sarb
cltd
loopne
push
pop
or
sbbb
push
add
ret
push
outsb
ja
xchg
mov
mov
push
sub
add
pushf
and
aad
or
aam
es
jne
push
inc
imul
add
adc
mov
pop
sub
sub
push
push
subb
add
dec
and
enter
push
imul
inc
adc
push
nop
and
rolb
push
insl
jo
mov
movsl
aas
sub
pop
xor
cld
add
mov
les
imul
or
leave
fidivs
push
push
cmpsl
mov
add
dec
in
push
popf
dec
loop
leave
push
jg
addr16
or
cmp
pop
add
mov
dec
xchg
dec
or
dec
out
push
push
outsl
leave
and
test
or
in
add
sahf
jp
dec
pop
mov
ret
scas
cmp
rorb
aad
loop
stos
pop
cltd
test
sahf
lea
mov
mov
gs
inc
imul
test
push
mov
rorl
mov
je
inc
ret
fcmovnb
jg
add
movb
dec
adc
add
push
test
push
popa
mov
aam
lea
dec
out
or
lds
fldenv
dec
sub
fadd
or
jno
fiaddl
add
pop
push
popf
je
rcrl
sub
inc
xchg
in
add
sbb
or
popa
pop
lock
rclb
add
cmp
dec
inc
dec
inc
pop
xlat
hlt
or
cmp
iret
fnstcw
movsl
mulb
cmpsl
sbb
jmp
and
dec
jge
in
jae
add
push
test
pop
data16
adc
xchg
popf
jmp
sbb
fcoml
gs
and
xor
jnp
inc
xchg
cmp
imul
pop
je
call
push
sbb
insl
push
insb
fdiv
sub
and
or
push
dec
shrb
push
mov
cmovne
rcl
sub
js
xor
adc
test
xor
frstor
fdivl
and
sbb
lcall
or
stc
cmp
push
rcrl
cmp
ljmp
ljmp
or
inc
or
pop
cltd
sub
mov
fidivrs
and
pop
xchg
sbb
test
dec
or
ja
pop
pop
and
cmp
add
push
fdivr
ret
call
jnp
and
sbbl
cmp
inc
jl
subl
mov
loopne
call
in
and
mov
and
add
sbb
jl
shlb
lods
ljmp
or
popf
inc
add
scas
add
mov
adc
lret
adc
push
ja
pusha
lods
sub
enter
sbb
sbb
dec
das
mov
jo
mov
cmp
mov
stc
push
jge
pop
push
call
push
mov
clc
call
jne
xchg
inc
dec
mov
lea
lret
or
scas
in
daa
nop
rclb
je
icebp
imul
fists
pusha
fcompl
add
dec
mov
out
mov
dec
call
lock
cmp
inc
movsl
enter
call
das
lods
mov
testl
ja
add
lock
mov
xchg
xchg
xchg
sbb
inc
imull
jle
call
in
dec
push
inc
jbe
lods
and
push
or
or
sub
xchg
push
pushf
in
push
fs
sbb
xchg
je
adc
in
sbb
jnp
mov
or
in
shl
das
or
push
shrl
xchg
push
aas
hlt
xor
repz
sbb
cmp
push
xchg
aad
fbstp
dec
int3
or
add
ret
sub
es
or
jle
scas
std
mov
push
jecxz
inc
movzbl
scas
cmpsb
add
orl
xchg
push
icebp
inc
je
mov
es
hlt
mov
test
push
sub
lds
and
mov
push
pop
lahf
mov
movsl
sub
ss
gs
push
in
dec
rcll
ljmp
bound
or
lods
aas
fs
push
add
mov
push
jns
notl
mov
or
jo
mov
icebp
push
movb
add
cmp
xor
or
gs
lcall
sub
pusha
ja
and
jne
ds
mov
push
push
sbb
sbb
sbb
ret
push
addr16
loop
fdivr
xor
jb
pop
mov
and
imul
movsb
lock
sbb
loopne
and
inc
pop
pop
push
push
int3
call
pusha
adc
mov
sbb
mov
dec
out
je
cmp
sub
sbb
sub
andb
or
jl
adcl
stc
and
out
adc
orb
jb
fwait
jne
mov
xor
test
mov
je
cmp
cmp
xchg
test
inc
add
push
lea
shll
scas
push
adc
pop
mov
add
lds
push
lret
andl
lea
sub
daa
shrb
mov
or
shll
xchg
add
out
aad
dec
ljmp
push
xor
ss
xor
dec
stos
cmp
fdivr
mov
push
sub
add
mov
pop
xor
das
jb
loopne
add
stos
pop
mov
repnz
loop
insb
int3
push
xchg
aas
xor
shll
inc
call
mov
sub
mov
mov
push
fisubrl
mov
mov
lock
adc
pop
mov
pop
add
lea
enter
movsb
sub
mov
sub
movsl
xor
inc
rep
push
test
cmp
cltd
push
mov
push
shll
jle
rcll
pop
mov
and
adc
fnstenv
test
push
add
movsb
out
pop
xchg
mov
lds
mov
xor
fsqrt
loope
cmp
inc
shlb
clflush
pop
mov
insb
or
pusha
add
sbb
sbb
mov
jb
pop
stos
adc
call
ljmp
pop
pop
stos
adc
popa
pop
mov
cmpl
push
fistl
sbb
sub
addr16
je
mov
das
jb
sbb
mov
mov
insb
or
push
inc
leave
sub
push
xor
add
sub
jb
adc
xchg
pushf
mov
movsb
ss
imul
mov
push
int3
into
rcl
fiaddl
into
sahf
mov
add
ret
lret
scas
pop
xchg
push
loopne
pop
pop
jp
xor
inc
scas
ss
aas
js
out
xchg
in
repz
mov
sbb
sub
adc
negb
push
adc
push
push
or
insb
or
and
xlat
add
clc
scas
dec
adc
push
and
cwtl
push
scas
xchg
rclb
insb
sbb
adc
call
in
cmp
jle
jno
pusha
hlt
jmp
adc
dec
push
inc
aad
pushl
push
gs
adc
loopne
dec
in
jns
mov
in
push
add
inc
lock
pop
jmp
in
jb
inc
inc
fidivs
inc
mov
push
scas
int3
cld
xor
xchg
mov
jne
push
or
nop
and
sti
sub
adc
in
in
enter
loopne
add
jno
lds
mov
push
insb
cmp
adc
scas
loope
push
leave
sub
mov
jno
and
push
xchg
sbb
in
mov
push
loope
pop
mov
orb
lds
stos
repnz
xor
scas
cltd
mov
ja
inc
inc
mov
mov
mov
cmp
mov
and
je
in
in
js
dec
fsub
push
cmp
adc
mov
jge
fcomps
add
in
pop
cmp
imul
sbb
popa
mov
ja
push
cmpsl
adc
mulb
pop
aam
adc
dec
out
inc
dec
scas
sbb
jne
mov
sbb
xor
lods
lods
push
cmp
arpl
ja
std
fidivrs
push
jbe
xor
sbb
push
test
add
mov
mov
xor
outsb
cmpsb
adc
jmp
mov
push
mov
test
inc
enter
fcmovnbe
sub
ror
movsb
mov
fcomps
pop
loope
fcompl
adc
aad
mov
mov
mov
jecxz
repz
push
sub
mov
push
call
jb
fstps
add
addr16
or
and
push
push
cmpb
add
loop
mov
rclb
sbb
or
call
loop
test
cld
pushf
test
arpl
rcrb
or
or
add
cmp
xorb
mov
or
dec
pushf
sbb
push
pop
icebp
or
sbb
cld
sahf
data16
jmp
push
add
add
out
enter
add
loop
icebp
xchg
push
aaa
cld
mov
mov
jp
xor
mov
es
into
pop
inc
inc
dec
mov
xchg
sbb
and
jmp
sub
dec
pop
out
dec
lock
and
je
or
or
je
mov
movsl
test
xor
dec
or
loopne
outsb
or
cld
inc
rcll
jg
jmp
push
mov
jp
fs
loopne
mov
pop
rclb
adc
xor
sbb
pop
in
sbb
bound
lcall
pusha
popf
rorl
sbbl
mov
or
mov
or
sbb
xchg
inc
or
add
les
jns
or
push
inc
addl
pop
jne
xor
rcr
pop
aas
sbb
outsb
or
ret
rorb
inc
adc
mov
push
cmpb
mov
outsl
popf
cmp
jne
push
orl
cmp
adc
push
mov
ss
cmc
mov
inc
pusha
cmp
jge
push
add
repnz
dec
inc
inc
movsl
insl
je
rcl
jbe
add
ja
out
pushw
or
jnp
jecxz
out
ss
stos
std
scas
aaa
fs
movhps
add
jo
pushf
cli
ss
dec
adc
inc
shl
fidivrl
call
sub
inc
inc
test
aas
jmp
mov
push
jns
push
add
inc
sub
adc
lret
dec
dec
mov
jo
in
lret
lock
sub
push
stc
jno
dec
pop
dec
adc
std
adc
jl
add
push
push
ds
sbb
mov
push
xor
imul
movsb
jnp
in
add
mov
pop
dec
add
mov
xchg
sahf
cmp
cmp
pop
nop
aam
or
push
mov
imul
push
sarb
sub
sbb
popf
into
test
sarb
lock
pop
add
jle
sub
mov
add
add
mov
dec
cmp
mov
ds
push
xor
mov
orl
pop
push
ret
int3
lods
or
sbb
out
pop
subl
stos
daa
jb
sti
add
pop
xchg
adc
cmp
mov
out
push
or
xchg
popf
mov
xor
mov
mov
pop
cmp
outsl
loopne
cwtl
inc
jecxz
push
mov
push
call
inc
pop
ds
test
ret
dec
ret
sub
inc
jbe
xor
adc
pushf
scas
decb
sbb
dec
sub
xchg
sarb
adc
push
or
enter
cmpsl
stos
insb
and
jne
xor
adc
std
jmp
and
insl
mov
xor
add
mov
cltd
dec
in
or
jle
js
lcall
xchg
fsubs
dec
js
add
sbb
mov
xor
cmp
jl
adc
push
inc
ret
mov
aaa
ret
pop
rolb
add
fs
xor
sbb
rorb
adc
pop
push
mov
test
rcrb
sbb
dec
or
data16
js
shr
jl
pop
xchg
enter
mov
shlb
jl
pop
jne
mov
jmp
or
shll
xor
or
or
or
pop
dec
roll
dec
jae
lcall
add
adc
shrl
push
cmp
push
mov
xor
mov
out
test
inc
inc
push
add
call
scas
sbb
out
pop
loope
sbbb
xchg
ljmp
fisttps
push
call
mov
iret
mov
cmp
ss
mov
fldl
call
nop
in
fadds
dec
mov
cs
cmp
mov
mov
popa
or
mov
push
mov
lea
add
adc
xchg
fldt
or
fidivl
fnstenv
push
jbe
dec
cli
mov
jne
cld
sub
subb
push
push
and
std
pop
pop
dec
xchg
or
cwtl
sbb
push
in
pop
ret
or
test
inc
jae
push
inc
or
pushf
push
or
popf
fadd
imul
xor
pushf
aaa
adc
cmp
shr
sub
mulps
add
sbb
scas
push
test
fwait
add
xchg
or
cmpsb
shll
mov
adc
sub
mov
mov
rorl
xchg
mov
mov
cld
mov
enter
jmp
das
loope
movsb
push
mov
jle
inc
fsubr
jo
push
sbb
daa
lods
movsl
cltd
adc
push
push
sub
pop
mov
into
call
sarl
sbb
inc
adc
pop
add
inc
pop
and
sti
nop
imul
inc
lea
sti
mov
dec
jle
test
scas
or
cs
in
test
stc
xor
nop
xchg
jg
loop
fildll
js
pop
push
lea
mov
mov
mov
loop
clc
je
jl
enter
jne
or
and
data16
push
cmp
push
push
cmpsb
aam
push
fistpl
clc
icebp
lds
cmp
cwtl
popa
fsubrl
call
incb
mov
and
popa
stos
push
add
inc
pop
scas
popa
xlat
pop
add
fwait
jae
js
mov
push
sbb
dec
pop
add
add
or
push
inc
or
mov
adc
and
repnz
in
mov
mov
pop
mov
in
lods
inc
xchg
popf
imul
rcll
mulb
mov
jmp
js
lock
xchg
rcll
xchg
ss
leave
jmp
sub
fucom
in
mov
mov
lock
dec
push
hlt
pop
mov
add
mov
mov
jo
adc
jne
clc
and
cmp
push
sbb
push
push
test
mov
or
je
std
mov
ret
sub
adc
add
push
sub
pop
cmp
or
aaa
lock
push
dec
adc
pop
cwtl
loop
xorl
mov
add
iret
stos
xorl
lea
push
push
imul
pop
addr16
inc
stos
insb
arpl
sbb
push
idivl
jne
into
cmp
fwait
icebp
bound
sub
push
cmp
xlat
pop
mov
jne
push
pop
cmpsl
adc
and
ret
cmp
dec
decb
or
jns
outsl
and
sub
nop
xor
test
push
sahf
jae
pop
das
or
sarl
lds
call
mov
cmp
cmp
and
push
mov
xchg
push
shlb
cmp
xchg
lea
movsb
sbb
scas
pusha
xchg
sub
push
outsl
pop
inc
inc
lcall
dec
jl
js
xchg
xchg
cmpsb
pop
negb
nop
cld
fst
js
push
dec
xor
fxtract
cld
dec
add
insb
pop
xorb
popa
pop
cmpsl
jae
inc
or
mov
lods
je
pusha
ret
in
fcmovnb
push
xchg
add
dec
ret
js
add
add
or
or
xchg
jnp
pop
out
jne
add
push
call
in
xchg
add
pusha
movsb
jmp
js
sbb
sub
dec
or
stos
adc
mov
sbbl
cmp
xchg
and
int3
jbe
mov
lahf
and
mov
sub
dec
into
and
and
mov
call
fcompl
pop
adc
addr16
push
push
mov
push
sbb
push
stc
mov
jo
or
clc
jbe
jae
pop
cwtl
or
popf
pushf
or
cmp
insb
sbb
ja
mov
inc
inc
imul
loopne
fs
inc
mov
mov
test
add
andl
cmp
jg
push
dec
js
dec
lea
pop
jbe
mov
or
test
or
mov
test
jl
sarb
ret
lds
adcl
push
cmp
fdivs
inc
dec
jne
movzbl
add
je
and
xor
loop
push
mov
test
push
mov
jecxz
je
js
stos
incl
nop
sbb
xchg
jecxz
dec
es
adc
and
adc
sbb
fmull
cli
sub
sbb
add
cmp
adcb
lea
inc
xor
inc
pop
rorb
mov
mov
xchg
or
shrb
fdivrs
and
xor
addl
in
outsl
dec
push
imul
sti
nop
xor
loopne
int3
nop
xchg
lret
sbb
sub
xchg
lea
es
jb
xor
das
dec
aam
mov
dec
mov
dec
dec
and
add
lds
inc
adc
clc
cmp
adc
daa
mov
push
dec
negl
dec
lds
sarb
lds
enter
fnstcw
sub
push
add
out
cmp
jmp
cwtl
add
sub
sar
shlb
cwtl
jns
push
add
out
in
push
add
push
sbb
adc
xor
rcrl
add
mov
or
roll
inc
mov
xor
rcll
mov
mov
loopne
loopne
add
lds
hlt
cmpsb
or
rcrl
lods
jno
add
and
inc
add
roll
add
or
addb
mov
add
xor
adc
cmpsl
and
and
or
inc
shrb
and
pop
pop
popa
pusha
inc
nop
add
and
dec
inc
mov
rcrb
pusha
pop
or
clc
xchg
cli
or
or
jp
jle
ljmp
call
jg
pop
call
call
imull
popa
js
dec
aam
inc
adc
lahf
dec
jns
cmp
call
call
dec
adc
int3
pop
fists
andb
jmpw
mov
dec
mov
or
rcrl
cmp
or
std
mov
mov
or
pop
psubsb
aad
out
call
clc
scas
pop
jmp
andb
mov
sub
jb
cmp
jmp
call
pop
xchg
sbb
mov
add
fmul
popa
adc
addr16
ljmp
push
into
test
push
sub
fimull
test
sbb
lds
rcr
pop
or
push
sbb
test
sbb
push
jne
sbb
push
cmp
aam
stos
repnz
aad
inc
sbb
or
adc
lcall
sub
dec
mov
push
pusha
lock
pop
sbb
push
loop
jne
and
inc
fiadds
notb
adc
xchg
push
push
es
and
add
movsl
push
loopne
outsb
push
and
jns
and
push
repz
cmc
shll
adc
pop
cmp
push
push
sbb
imul
fs
movb
push
movsl
or
dec
cld
fldenv
dec
push
and
or
in
push
loope
dec
ficomps
cltd
push
loope
xor
push
fwait
mov
sub
xchg
int3
xchg
js
add
push
sbb
js
cmp
xchg
xor
jbe
dec
sbb
dec
push
imull
push
xchg
cmpsb
sbb
jae
dec
sbb
mov
and
jp
or
dec
xchg
loope
sbb
cmp
push
popl
xchg
pop
aaa
movl
or
movsl
adc
pop
add
inc
pusha
inc
in
and
dec
inc
sub
mov
add
mov
pusha
inc
jbe
pop
rolb
inc
add
je
inc
rcrl
inc
cmpsb
fildl
pop
pop
aaa
and
les
pop
inc
cmp
adc
inc
xor
add
xor
inc
je
es
sub
sub
inc
add
inc
dec
sub
mov
cmp
rolb
je
lods
lret
call
imul
out
lods
stos
pop
int3
xchg
push
inc
dec
in
push
dec
inc
out
inc
cs
jge
fnstcw
sbb
je
mov
inc
cmp
test
nop
pop
mov
fmull
sahf
out
fildl
sub
sbb
popf
out
adc
add
sbb
mov
sbb
nop
into
repz
push
lea
inc
aaa
xor
cmp
out
inc
daa
pop
imul
or
dec
or
pop
inc
jb
cwtl
out
mov
mov
or
out
sahf
out
mov
ror
add
or
sti
data16
or
push
adc
add
cmp
addb
adc
and
lcall
lcall
lahf
xorb
push
cmpsl
jge
xchg
dec
xchg
dec
jmp
dec
or
insb
and
test
cli
dec
pushf
push
pop
jmp
mov
xor
xor
sub
add
lahf
ret
fidivl
test
inc
xor
push
pop
add
or
add
add
cmovno
cmpsb
sbb
mov
cmp
je
xchg
add
mov
add
mov
push
gs
xor
or
pop
inc
or
lea
or
cs
in
or
add
or
sahf
xchg
sub
or
psrld
mov
jb
out
or
or
or
push
or
iret
enter
movq
adc
pop
adc
or
adc
in
add
adc
jns
cmp
adc
adc
push
adc
adc
adc
leave
ror
adc
push
repnz
push
inc
pop
out
cmpl
jns
sbb
xchg
sbb
mov
cmp
sbb
sbb
mov
das
nop
sbb
push
pop
enter
sbb
ja
cmpsb
in
xor
sbb
cmpsb
in
inc
negb
pop
add
add
add
sub
cmp
neg
cmpsb
and
iret
cmp
add
xor
mov
ja
sbb
cwtl
xchg
push
in
push
in
imul
mov
sub
rcl
ret
iret
xor
mov
xor
dec
mov
call
loop
fsubrp
adcb
mov
mov
cmp
cmp
ljmp
push
add
pushl
dec
push
mov
in
xchg
push
repnz
aad
in
cmp
mov
xchg
cmp
out
out
xchg
cs
enter
out
je
enter
lock
dec
pop
in
fdivp
cmp
das
jnp
repnz
adc
repz
dec
in
in
std
hlt
hlt
imul
hlt
xchg
std
cmc
in
mov
div
inc
push
inc
scas
mov
sbb
sbb
clc
clc
xchg
addr16
or
in
mov
repnz
sti
sti
fdivrp
or
cld
je
cld
push
push
outsl
dec
fdivrp
nop
shlb
mov
xor
sbb
fcmove
xchg
cmp
xor
inc
ret
pop
jmp
shll
shrl
sub
std
sbb
cmp
fwait
or
jecxz
jecxz
scas
addb
xor
push
repnz
push
orl
idivl
mov
inc
or
out
in
and
scas
call
cltd
sti
adc
andb
or
int
jmp
xchg
daa
nop
mov
or
dec
adc
jmp
stos
or
out
xchg
leave
or
cmp
cli
or
aas
repz
add
sub
xchg
push
xlat
xchg
pop
leave
cli
stc
imul
stc
div
not
enter
xchg
xchg
clc
cltd
leave
and
jb
push
stc
cmpsb
jb
popa
sbb
pop
insl
nop
sti
sti
xchg
or
pop
sub
jmp
mov
cmp
pop
jge
test
clc
stos
dec
or
clc
mov
or
loop
ror
or
inc
clc
add
xchg
pop
and
shl
add
or
das
test
scas
fdiv
out
mov
and
testl
ljmp
jmp
mov
inc
repnz
testl
imul
out
aad
orb
into
mul
leave
and
scas
notb
pusha
or
mov
inc
repz
mov
or
push
dec
push
sub
pop
int
shl
testb
mov
dec
loope
cmp
in
cmp
sbbb
in
adc
xchg
pop
leave
or
cmc
cli
hlt
add
add
or
sub
lock
push
stos
mov
adc
push
dec
xchg
mov
loope
loope
pop
pop
and
loop
pop
xchg
hlt
mov
lret
hlt
in
mov
repz
and
aam
mov
xor
adc
and
test
mov
mov
cs
or
and
test
mov
mov
cmpsl
repnz
or
icebp
in
pop
xchg
icebp
icebp
das
xchg
pop
and
push
adc
bnd
popa
leave
pop
repnz
xchg
cmpsb
cmc
cmc
mov
icebp
mov
lock
pop
dec
push
cwtl
icebp
or
jne
stc
sbb
dec
icebp
xor
add
push
je
adc
or
out
lock
mov
imul
jmp
in
mov
test
jge
push
sub
ffreep
push
inc
mov
xchg
stos
insb
loope
inc
cmp
cmp
ret
mov
adc
mov
or
mov
pcmpeqw
in
mov
xor
jmp
xchg
xor
aam
dec
add
ss
and
dec
pop
cmc
jmp
and
dec
adc
pop
add
push
jns
imul
push
aaa
or
push
add
repz
dec
adcl
data16
cli
push
jecxz
repz
mov
repz
insb
sbb
push
push
aad
repz
xchg
gs
dec
outsb
inc
sarb
or
mov
push
xorb
adc
inc
outsl
sbb
and
lea
adc
in
cmp
and
nop
xchg
sbb
lret
test
cmp
mov
aaa
mov
imul
jle
and
or
jg
dec
cmp
push
fists
push
andb
push
mov
and
mov
push
xor
push
mov
and
mov
cmp
sbb
push
mov
inc
arpl
icebp
sahf
xlat
pop
mov
lea
or
push
mov
push
sbb
mov
sbb
ret
dec
sbb
aam
in
jmp
xor
dec
sbb
push
push
nop
inc
addl
and
mov
call
jmp
shlb
lret
xor
jo
adc
jmp
movsb
jno
dec
dec
xchg
insb
jno
xchg
pop
divb
jno
sbb
cli
adc
rclb
push
inc
xor
js
pop
xor
stos
push
adc
fstl
adc
cmp
sbb
adc
hlt
psubsw
ficoml
sub
or
jb
cmp
sub
or
sub
shr
inc
add
adc
add
inc
pop
inc
add
add
or
or
cwtl
sbb
lds
xchg
push
mov
rcll
and
nop
rorl
test
cmpsl
jo
and
adc
cltd
sbb
outsb
and
inc
adc
mov
dec
pop
mov
inc
pusha
push
xchg
and
adc
or
inc
cmp
pop
cmp
test
push
xor
lcall
int3
xor
pop
inc
movsl
mov
sub
xchg
xchg
test
add
or
mov
movsl
xchg
inc
pop
decl
call
jecxz
testb
or
sbb
cmp
je
stos
es
mov
xor
rolb
mov
call
les
stc
xchg
aas
or
leave
ror
xor
and
es
push
mov
or
push
fidivrs
mov
sti
adc
mov
popf
mov
adc
xor
ror
lahf
int
in
xchg
rcll
jmp
aaa
int
je
lcall
adc
and
or
lahf
in
je
jb
pop
and
inc
dec
lahf
popa
aaa
rcl
stc
xor
cltd
nop
popa
mov
hlt
push
cmpsb
mov
or
sbb
or
ja
push
xchg
lahf
aam
or
les
lahf
test
fisttpll
pushf
pop
and
push
xchg
and
and
imul
inc
sahf
cmp
in
in
sub
sbb
dec
in
movsb
push
xor
dec
lret
xchg
push
out
xor
sub
es
test
rcrl
dec
aaa
repz
les
ja
push
lahf
inc
call
xchg
add
orl
adc
and
xor
adc
fwait
pusha
adc
je
lahf
inc
inc
sub
mov
add
or
push
cwtl
imul
cmp
and
jmp
imul
sbb
insb
and
push
mov
fs
dec
nop
or
inc
add
xchg
sub
movsb
sahf
jmp
sub
loopne
call
sahf
push
stc
aaa
xor
mov
rcl
pop
fcompl
das
push
pop
outsl
movsb
iret
cmpl
shl
pusha
adc
xor
dec
les
and
push
jmp
push
sbb
rolb
sbb
and
cs
pop
cwtl
test
sub
xchg
xor
mov
popf
push
xor
cmp
cmpsb
mov
xorb
dec
xor
lea
or
sbbb
xchg
ds
push
leave
sbb
inc
in
nop
adc
and
pop
stc
and
ret
xor
inc
ss
les
or
shr
mov
test
inc
jle
mov
pop
cltd
xchg
push
mov
aaa
dec
nop
into
add
pop
xor
sbb
add
or
scas
sub
subl
or
decl
and
clc
xchg
sti
hlt
jle
push
add
xchg
add
adc
jno
push
std
ss
test
or
bound
xor
and
and
adcb
jle
movb
mov
and
daa
lea
repnz
pushf
aam
inc
jp
in
add
mov
loopne
shlb
sti
jmp
mov
lds
rolb
nop
or
cmp
movsl
and
jno
test
push
test
jl
movsl
sti
shr
data16
data16
dec
xorb
and
or
test
pop
iret
dec
int
bound
cmpsl
lods
pop
or
cmp
pop
repz
popa
aas
ss
sbb
or
or
leave
sub
cmp
rorb
ja
cmp
loopne
rolb
loopne
mov
adc
movsb
sbb
cmp
sbb
arpl
cmp
int3
ret
nop
in
jo
add
dec
fwait
jp
mov
vorps
or
xchg
dec
mov
xchg
arpl
pop
nop
push
adc
scas
jb
xchg
xchg
cmp
mov
push
push
mov
push
jmp
and
xchg
push
test
mov
ficoml
and
lea
addr16
or
inc
mov
jl
xchg
rcll
xchg
lods
mov
push
mov
push
aad
sub
int3
xchg
or
nop
sbb
inc
xor
call
int3
xor
loopne
cwtl
imul
outsl
pop
and
mov
aad
fstl
or
add
jl
or
mov
mov
clc
mov
mov
sbb
sbb
call
cmpsb
mov
xor
fidivs
hlt
je
jno
pop
mov
cmp
pop
dec
jmp
pop
insb
insb
enter
loope
fwait
imul
rcl
dec
inc
sub
aam
imul
sub
shlb
nop
xlat
push
xor
data16
sub
sub
sub
or
xor
mov
sub
cmovae
shrl
fs
dec
inc
sub
fldcw
leave
loopne
adc
add
cli
enter
push
pop
shrb
xchg
sub
sub
imul
nop
push
pop
lcall
cmp
adc
mov
fs
sub
or
adc
shrb
xor
shlb
sub
sub
cltd
xchg
sub
imul
imul
jo
fidivl
cmpsb
sub
icebp
cmpsl
int3
xor
fsubrs
xor
pusha
cmpsb
and
cmp
xor
nop
sub
aas
push
ss
mov
in
mov
cltd
xchg
sub
sub
inc
ja
sub
cmp
sub
imul
inc
insl
adc
inc
out
sbb
shll
add
rorb
imul
test
pop
dec
scas
pop
xor
daa
rcl
inc
imul
sub
or
dec
sub
pusha
push
xor
cltd
xchg
sub
or
sub
jo
add
xchg
and
add
cltd
sub
aam
rorl
popa
xor
add
cs
into
inc
xor
lods
rclb
mov
das
rorb
sbb
cltd
xor
sbb
sarb
rcrb
adc
jecxz
adc
push
pop
popf
dec
negl
aam
push
adc
or
cltd
xchg
orb
data16
imul
lcall
sbbb
sbb
out
adc
dec
js
sub
cmp
jae
ret
inc
sub
mov
test
mov
sub
fildll
pushf
or
xchg
or
int
jl
test
add
push
sbb
pop
mov
outsb
cmpsb
mov
outsl
cmpsb
mov
add
xor
sub
jbe
jno
or
popf
imul
pop
sub
je
imul
sub
inc
xor
sub
push
sti
lret
outsb
sbb
sbb
xchg
mov
push
shlb
add
stos
jne
add
sbb
andl
cwtl
imul
xor
mov
hlt
sbb
ret
cmp
jp
out
and
cmovs
je
adc
les
int3
xor
lods
fiaddl
test
sub
js
xchg
dec
stos
mov
adc
nop
jp
sub
or
jg
sarl
xor
mov
in
sub
sub
and
and
xor
cmp
and
and
inc
push
pop
mov
and
dec
dec
pop
cmp
cmp
cmp
lcall
xchg
call
adc
push
mov
jo
pop
arpl
ret
lods
cli
cmp
cmp
xor
add
into
inc
jno
ds
cmc
xchg
icebp
leave
jmp
xor
sbb
mov
imul
and
cwtl
dec
aaa
dec
lds
icebp
mov
repz
mov
in
pop
xchg
rclb
popf
xchg
enter
out
push
mov
test
pop
pop
dec
in
dec
pop
ret
sub
repnz
mov
dec
bt
sbb
lret
gs
jbe
or
ret
mov
xor
lcall
shll
test
jbe
cmc
push
or
xorl
push
ja
fsubrl
add
mov
loope
inc
dec
inc
pop
and
orb
adc
dec
xorb
jo
inc
add
gs
inc
out
sbbb
xchg
add
mov
imul
loop
xchg
and
jp
add
sbb
xchg
add
or
mov
xchg
cmp
xchg
dec
jo
pushf
lods
in
adc
or
sbb
and
dec
mov
jl
pop
add
and
dec
cmp
and
mov
je
test
jae
lea
movsb
ror
pop
mov
push
dec
insb
cmp
ljmp
fdivrl
push
cmc
hlt
movsl
jp
add
xchg
adc
or
cmp
push
push
push
sub
sbb
dec
dec
ret
movsl
out
or
or
pop
mov
add
jl
ds
aam
in
cli
stc
push
pop
cmp
dec
adcb
scas
pop
mov
and
jo
test
ss
fs
sub
dec
sbbb
inc
dec
rcrl
dec
test
es
add
or
lcall
xchg
shrl
xchg
divb
inc
hlt
out
or
ljmp
sbb
dec
adc
outsl
sbb
adc
xor
testb
pop
stc
pop
lcall
dec
or
loop
movsb
push
sub
notb
push
or
sbb
pop
call
fimuls
xchg
call
jl
out
jmp
and
inc
mov
cs
je
mov
mov
xchg
fsubrs
int3
insl
inc
push
inc
xchg
ret
leave
dec
cmp
shl
mov
mov
jb
rcr
xchg
mov
add
mov
xchg
inc
inc
sub
add
faddl
rorb
inc
mov
neg
inc
mov
sbb
sbb
push
inc
mov
or
mov
inc
loopne
add
outsb
inc
inc
fsubrs
daa
loopne
imul
jmp
push
and
mov
mov
clc
cs
call
sbb
xchg
fnstenv
sbb
adc
push
jo
mov
dec
imul
nop
add
mov
and
xchg
mov
push
pop
loopne
and
inc
pusha
mov
push
xchg
rorb
mov
xchg
and
pop
mov
and
inc
or
enter
call
in
mov
mov
or
xchg
test
adc
nop
fs
adc
pop
jmp
and
mov
or
xorl
mov
imul
push
test
push
xchg
shlb
cmc
cmp
ss
xchg
mov
outsb
jae
loop
movsb
adc
adc
push
cmp
adc
add
movsb
mov
add
fwait
stc
dec
daa
mov
add
incl
jl
je
dec
xor
add
daa
and
call
cmp
push
imul
es
ljmp
pop
mov
cmp
adcl
jp
jmp
pusha
addl
pop
enter
xchg
mov
push
jns
push
cmp
xor
inc
sub
repz
loopne
dec
lods
out
call
adc
add
arpl
loopne
push
push
es
push
adc
lods
add
mov
sub
ljmp
mov
cmpsb
add
dec
inc
pop
adc
ret
and
cs
mov
nop
inc
test
add
and
cmp
pop
jb
and
mov
xor
push
inc
call
inc
pushf
inc
pop
inc
lods
insl
sub
ss
jmp
insl
addb
fiaddl
shlb
sti
inc
aaa
xchg
or
or
cmpl
dec
fcmovnbe
int3
and
insb
cmp
add
cmp
inc
mov
repz
jmp
xor
push
push
loopne
sbb
inc
adc
xlat
dec
test
add
inc
pop
je
test
test
es
add
add
cmp
or
mov
or
add
pop
das
or
mov
xorb
cmpsb
lcall
lock
and
and
cmp
leave
or
push
mov
jbe
test
inc
add
sarb
jmp
add
xchg
jno
arpl
jmp
sbb
sub
sub
enter
nopl
push
scas
dec
std
enter
sbb
int3
add
cmpsl
or
add
mov
loopne
insl
dec
xorl
lock
mov
call
adc
test
not
add
inc
fwait
sbb
shl
addps
pop
rorl
sbb
ficomps
negl
jge
push
push
or
inc
test
call
aam
pop
xor
and
add
outsb
cld
jmp
cmp
xor
or
push
adc
push
add
ret
push
sar
inc
push
push
mov
adcl
shrl
test
shlb
hlt
dec
lods
push
fistps
inc
adc
sub
or
mov
pop
lret
mov
popf
nop
mov
mov
dec
aaa
adc
xor
pop
and
xor
xor
inc
pop
pop
or
and
test
stos
add
sbb
add
and
stos
andb
xchg
mov
cwtl
add
sahf
lods
ret
adc
in
push
or
call
call
out
shlb
dec
das
or
popl
push
cltd
das
jp
imul
adc
inc
gs
out
das
sub
xor
add
add
ret
jo
ror
dec
adc
xor
add
dec
xor
mov
je
rol
lret
add
cmp
loopne
xlat
sbb
push
cmp
mov
orl
sub
xchg
aas
stc
out
add
lods
insl
rorb
xchg
lret
lret
test
jae
pop
sarb
roll
fldcw
xlat
cmc
fists
xchg
in
mov
mov
push
cmp
imul
inc
stos
xchg
es
pop
and
aas
sbb
pop
movsb
mov
or
les
nop
xchg
daa
and
sbb
ret
pop
cmp
push
int3
or
push
lea
repnz
sahf
fcoml
and
push
lret
lock
xchg
insb
ss
adc
push
jbe
pop
inc
out
ds
pop
add
push
out
push
dec
pop
inc
xor
jl
inc
pop
ret
add
xchg
add
shll
dec
lea
mov
dec
or
pop
loop
xor
adc
push
loopne
lods
es
ja
call
mov
adc
rclb
shlb
pop
jae
aas
adc
sti
and
pop
jmp
push
rclb
inc
mov
push
jg
add
sbbb
xchg
push
push
jg
inc
cli
dec
xlat
pusha
pushf
pop
pop
repnz
ljmp
jne
mov
push
lcall
push
push
enter
rcrb
or
xorb
shlb
sbb
cwtl
inc
ffreep
jle
or
imul
and
daa
xchg
or
call
pop
cmp
lcall
add
jb
mov
stos
mov
dec
sub
pushf
push
mov
sbbl
call
xchg
ret
test
inc
cmp
sub
shr
jecxz
mov
mov
nop
loopne
jecxz
jns
shll
pusha
icebp
sbb
cmpb
add
xor
vaddsubpd
mov
jle
ret
or
sbb
sub
xor
xor
add
dec
inc
mov
jns
cmp
in
pop
bound
jle
jo
xor
and
push
jmp
xor
hlt
add
mov
push
lcall
xor
fsubl
and
xor
movsb
mov
xchg
jb
add
cmpsb
cmp
roll
add
loopne
fbstp
add
add
add
sbb
inc
xor
sbb
add
mov
pushf
in
push
add
clc
add
lcall
mov
ret
xchg
dec
nop
adc
imul
bound
or
or
sub
add
xor
cmpsb
sub
inc
sbb
frstor
cmpsb
sbb
loope
pop
add
lods
pop
sub
lock
test
sbb
push
mov
jo
leave
xchg
push
mov
xor
test
inc
inc
sbb
pop
push
inc
dec
or
add
in
sub
mov
int
pop
shl
sbb
js
lods
mov
adc
fwait
pop
inc
mov
mov
and
in
lea
xchg
add
in
xorb
fstl
out
dec
in
jle
add
test
pop
sbb
jmp
jnp
jbe
loopne
sub
sub
push
and
push
add
add
test
shr
push
lea
add
mov
mov
xor
xor
push
popf
fstpt
push
sbb
dec
mov
xor
es
scas
push
rcl
xor
dec
jecxz
add
dec
sub
jne
cmp
xchg
dec
adc
sbb
imul
cmp
and
call
fistl
or
fstps
hlt
xchg
push
mov
call
sbb
daa
pop
sub
outsb
add
out
rcrl
pop
fdivrs
cmp
mov
mov
mov
xlat
inc
rolb
je
jns
iret
rcrb
mov
outsl
mov
test
cwtl
or
mov
lea
test
add
popa
inc
out
cltd
sbb
add
push
je
sub
mov
add
addr16
or
mov
addr16
jle
mov
push
call
adc
mov
insb
roll
or
jo
adc
or
mov
mov
cmpsl
mov
inc
and
sub
es
xor
sub
mov
ret
inc
push
dec
int
mov
mov
push
sub
scas
push
mov
and
push
xchg
out
pushf
es
mov
mov
stos
mov
out
lods
movsl
and
sub
jl
ss
pop
sbb
xchg
test
or
icebp
xor
sub
icebp
jecxz
jmp
int3
push
pop
add
call
lcall
jne
movl
dec
dec
pop
adc
push
movsb
rorl
mov
loopne
add
sub
and
dec
inc
or
mov
sbb
lea
inc
cli
jle
xchg
push
dec
dec
hlt
push
hlt
push
dec
xchg
and
testb
cmp
inc
inc
inc
jns
and
adc
jns
dec
enter
jns
or
or
out
movsb
data16
inc
inc
inc
int3
jns
rolb
idivb
dec
mov
mov
push
push
or
sub
or
add
lret
xchg
icebp
nop
pop
adc
call
adc
inc
push
add
dec
call
mov
out
stos
and
int
lods
fstl
inc
jns
xor
adc
sub
jb
ljmp
cmpl
scas
mov
mov
call
mov
int
rclb
sub
mov
nop
sub
popf
loope
push
jns
int3
mov
mov
xchg
adc
inc
inc
cs
mov
jns
fadds
hlt
cwtl
mov
je
push
jns
and
add
hlt
and
mov
push
and
jp
cs
push
and
inc
jns
or
call
test
jns
xchg
aam
mov
mov
sbb
jbe
jmp
adc
sarb
ljmp
sub
lcall
push
mov
add
jns
push
or
xor
inc
push
jns
sbb
push
and
and
adc
rolb
jns
adc
and
mov
fmull
lock
jns
mov
adc
cmpsb
mov
stos
dec
jns
jg
test
mov
or
fldl
adc
push
sbb
sbb
add
ja
push
sbb
lcall
sub
out
imul
xor
adc
dec
aam
mov
pusha
dec
in
or
imulb
adc
out
iret
lds
xlat
jns
xorb
aad
pushf
sbb
mov
enter
jns
push
push
scas
dec
jns
pusha
loopne
sub
jns
adc
and
push
lock
daa
dec
lret
sbb
adc
orl
test
call
add
xor
dec
xchg
mov
sub
pop
call
xchg
and
test
ja
or
dec
pop
test
mov
cmp
mov
sbb
cmp
cmp
cmp
jp
repz
adcb
push
test
nop
jge
inc
pop
clc
cmp
call
pop
dec
je
test
pop
cwtl
cmp
xor
pop
sub
arpl
push
push
xor
loope
or
and
ja
mov
fiaddl
pop
xchg
cmpsl
xchg
pop
cmp
or
push
xor
and
pop
or
les
push
mov
or
push
aas
sbbl
push
push
jns
test
and
fs
pop
jae
pop
enter
mov
sbb
add
cmpsl
or
hlt
add
push
push
xchg
nop
push
test
cmp
xchg
nop
rcrl
shlb
xchg
test
push
das
sti
mov
insl
sbb
xchg
sub
pop
das
inc
pop
push
xchg
nop
das
call
test
jle
adc
push
ljmp
rclb
nop
dec
fs
test
push
push
bound
cmp
mov
dec
adc
dec
adc
dec
adc
das
imul
or
and
add
gs
cwtl
insb
dec
pop
add
sbb
jae
fnop
imul
and
rcrb
pop
sbbb
leave
jle
orb
pop
fs
add
xchg
pop
inc
pop
mov
pop
enter
and
pop
or
inc
ss
repnz
imul
sbb
movups
and
fs
data16
mov
xchg
pop
fnop
adc
push
push
pop
sub
test
nop
mov
mov
testl
push
mov
mov
imul
pop
in
enter
mov
xchg
sbb
jmp
ret
rorb
test
sbb
push
lock
pop
es
inc
in
push
mov
adc
cwtl
rolb
inc
cs
push
dec
enter
push
mov
sub
sarb
pusha
cmp
push
test
push
aas
sbbb
push
pop
lahf
push
or
ret
push
and
dec
xchg
bound
fs
les
add
add
push
xchg
loope
pop
bound
call
adc
jmp
nop
push
cmpsb
ret
mov
jnp
or
push
outsb
mov
adc
mov
test
hlt
mov
int3
je
fldcw
push
sbb
sbb
xor
adc
sub
push
adc
xchg
pusha
mov
jp
or
and
push
xor
je
ss
fistpl
push
or
inc
or
jg
lret
call
adc
das
dec
cmc
fstl
call
movd
repnz
call
sub
add
call
das
push
xor
lock
call
inc
inc
out
call
mov
call
mov
jl
sub
pop
call
lret
xchg
das
pop
pusha
call
push
repnz
call
je
gs
pop
inc
and
mov
in
imul
mov
dec
xor
push
mov
pop
sub
mov
jb
in
fxam
push
stc
mov
adc
cs
dec
mov
lret
mov
xchg
mov
dec
in
jle
jae
in
mov
call
push
in
inc
aam
dec
in
mov
mov
sbb
adc
add
in
add
mov
leave
gs
loope
adc
pop
adc
sbb
pop
sub
stos
and
movsl
jb
lahf
sub
mov
jle
jae
lret
cmp
pop
inc
pop
sbb
inc
gs
dec
ja
push
test
push
adc
and
or
pop
add
orb
adc
inc
in
mov
xchg
xchg
data16
xor
sahf
cld
adc
popf
mov
mov
mov
fistl
je
data16
js
rorb
int
dec
xor
xorb
test
mov
jns
mov
cli
cmp
int
dec
mov
mov
inc
push
xor
lods
mov
cli
mov
dec
jae
mov
and
sbbb
shrb
push
movsb
arpl
fldl
sbbb
adcb
inc
xor
mov
inc
frstor
or
add
xor
add
adc
and
or
dec
inc
pop
pop
and
jno
mov
push
aaa
mov
dec
xchg
inc
stos
mov
push
stos
jp
inc
or
and
mov
adc
mov
and
inc
stos
aaa
mov
jmp
and
xor
aaa
sbb
add
fdivs
rcrb
mov
and
test
inc
into
mov
adc
dec
ss
cld
or
out
lcall
push
int3
adc
add
imul
fsubs
xchg
das
inc
push
movsb
inc
adc
popa
fsubrp
addb
pop
adc
jp
ret
push
mov
pop
bound
push
rcl
je
push
pop
xchg
push
aad
mov
aad
ss
pusha
push
mov
add
add
xlat
loopne
adc
or
pop
mov
aad
mov
aaa
jmp
push
mov
rclb
nop
aam
pop
push
add
mov
add
jno
xchg
add
push
nop
fstps
push
adc
mov
add
or
xchg
repz
jp
mov
add
or
movsb
aad
je
je
xchg
or
xchg
dec
enter
push
ret
and
rcll
xchg
inc
fisttpll
stos
mov
mov
sbb
pop
sbb
outsb
and
and
push
jne
sbb
call
adc
sbb
popf
mov
mov
jp
bswap
mov
mov
cmpb
test
xor
sbb
xchg
lds
dec
push
jne
jecxz
push
in
push
dec
mov
pop
gs
mov
adc
dec
leave
mov
mov
sub
mov
movsl
or
lods
pushf
xor
and
mov
xchg
popf
stos
adc
mov
ljmp
xchg
adc
pusha
scas
adc
dec
push
ret
cmpb
push
adc
movsl
dec
add
adc
cltd
sbb
sub
mov
add
sub
adc
cmp
adc
xor
mov
cmpsb
hlt
sub
cmp
call
push
push
gs
adc
lret
push
mov
push
cltd
xchg
fsubs
sbbl
xor
adc
test
test
add
stc
sbb
jnp
jbe
dec
sub
les
mov
out
mov
rorl
shlb
pop
cmp
insl
test
adc
sti
call
adc
je
inc
cmp
and
cmp
cmp
inc
xor
adc
or
push
fldl
pop
dec
js
jmp
push
adc
xchg
leave
push
push
je
lods
inc
and
test
testb
push
push
movsb
ret
add
nop
inc
xchg
add
or
ret
add
or
fistps
inc
push
mov
ficoml
inc
inc
cwtl
jmp
adc
sub
inc
nop
push
roll
mov
addl
xor
pop
nop
or
push
sub
adcl
pusha
lods
test
or
lods
loopne
add
and
mov
add
and
mov
mov
or
mulb
andb
add
or
add
out
push
lea
mov
pop
add
jge
inc
pop
gs
test
lods
and
pop
inc
lods
mov
xor
call
inc
popf
subb
pop
scas
sbb
xor
sarb
and
dec
imul
test
and
aaa
shrb
fstl
lret
cmpsl
add
or
aaa
mov
ret
cmpsb
popa
pop
mov
xchg
push
inc
cmp
nop
inc
cmp
jo
aaa
mov
fdecstp
jl
aaa
push
popf
push
in
aaa
xor
enter
mov
add
roll
inc
dec
or
aaa
mov
je
push
or
imul
arpl
jo
ret
stc
push
cmp
frndint
add
mov
mov
cmpsb
cwtl
mov
or
rclb
dec
movsb
add
push
and
iret
adc
pop
xchg
jo
push
iret
dec
inc
and
test
and
and
adc
into
mov
rol
mov
or
addr16
sbb
fstl
add
movsb
pop
andb
inc
mov
adc
mov
jle
loop
loopnew
mov
inc
fcompl
aaa
addr16
push
movsb
xchg
adc
jmp
add
fisttpl
jo
addr16
xor
das
xor
les
ret
adc
xchg
inc
cmp
ret
add
out
pop
outsb
and
push
jne
pop
scas
push
pop
movsl
add
mov
push
sbb
pop
sahf
cmp
stos
mov
pop
mov
mov
push
add
in
adc
jmp
movsl
add
inc
dec
loop
nop
mov
test
or
fs
mov
sbb
jo
add
out
jo
movsl
add
xor
mov
loopne
cli
push
popa
ret
pop
in
enter
inc
adc
mov
sti
xlat
inc
test
push
out
cmp
cmpsb
add
jns
adc
mov
mov
addl
jns
sahf
jg
push
mov
mov
outsl
and
pop
scas
gs
test
movsb
je
lret
rclb
stos
gs
xchg
inc
dec
xor
sub
push
xor
movsl
xor
xor
test
sbb
mov
or
mov
or
xchg
mov
pop
lret
repz
push
jb
repz
adcb
xor
push
repz
add
lahf
cmp
mov
xchg
cmp
pop
fdivl
or
inc
dec
out
and
stos
imul
adc
js
test
sbb
sub
jecxz
jns
sub
fistpl
jmp
or
mov
sub
popf
popa
push
popf
les
sti
fldt
or
pop
je
push
call
jecxz
xor
or
push
fs
xor
xchg
fdivl
pop
fstl
dec
jmp
or
mov
scas
and
rclb
cld
sbb
enter
stos
mov
cmp
jne
adc
adc
sbb
push
add
lock
ss
movsl
scas
or
add
jb
cmp
movsb
jbe
add
sub
fwait
repz
test
sahf
adc
adc
insb
outsl
push
jo
repnz
xlat
fwait
push
xchg
mov
add
sub
dec
mov
jbe
mov
adc
xchg
fwait
clc
sbbl
fwait
test
cwtl
insl
adc
inc
sub
inc
or
nop
icebp
jo
mov
shl
push
and
in
jge
sbb
stos
cwtl
or
jnp
lcall
adc
xlat
ret
xor
adc
icebp
in
test
sub
leave
or
jmp
cltd
loope
addb
sub
sbb
test
sub
xchg
xchg
mov
mov
int
mov
icebp
jbe
xchg
test
inc
push
cmpl
test
or
xor
out
or
cltd
adcl
sbb
or
mov
sub
scas
ljmp
cs
mov
or
sbbb
incb
mov
add
cmp
inc
mov
cmp
add
and
jns
out
or
sbb
ret
jns
out
mov
push
int
jns
ds
or
sbb
fcmovnu
repz
push
mov
pushf
pop
push
sahf
out
pop
lods
push
mov
out
jns
testl
nop
movsb
cmp
repz
push
xchg
jl
push
inc
iret
repz
cmpb
push
push
repz
sbb
repnz
jns
out
fmulp
mov
jnp
mov
ret
into
sbb
incb
add
es
loop
sbb
jns
mov
int
outsb
pusha
sbb
pushf
out
cmp
scas
lret
or
sahf
out
sahf
and
pop
data16
sahf
out
test
jns
out
fsubrp
decb
and
push
shr
data16
ja
jb
jle
sahf
mov
daa
sar
fdivp
push
loop
clc
adc
sub
cmp
aaa
jns
ja
je
fs
push
cmp
jns
pop
icebp
adc
daa
pop
mov
jbe
fsts
fiaddl
lahf
jae
jbe
push
cwtl
cmpsl
mov
xchg
das
out
iret
dec
test
imul
outsl
add
jbe
push
scas
test
add
mov
les
lret
add
adc
jo
sbbb
jbe
gs
jle
sub
sub
xchg
push
arpl
inc
or
dec
push
je
add
mov
push
outsl
push
push
ja
addb
push
fadds
out
bound
xlat
pop
insl
xchg
mov
xor
fstpt
jae
outsl
ss
add
push
xor
inc
pop
js
add
sub
sub
lds
mov
push
mov
shr
es
dec
cmp
pop
or
das
xchg
aaa
or
imul
mov
xchg
and
adcw
mov
test
adc
ret
push
xor
in
jbe
and
imul
add
adc
mov
shrl
cmpl
stos
outsl
and
mov
ficomps
daa
add
out
sbb
cmp
mov
jg
popa
movsb
test
aas
ret
je
add
cmp
arpl
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
push
out
rorb
push
xchg
jb
inc
mov
xchg
mov
or
xor
lahf
idivb
jae
pop
dec
imul
jo
xchg
dec
jae
inc
jne
outsb
je
es
cmpsb
sbbl
fcmovnu
scas
rol
je
ss
inc
xor
sub
pushl
inc
inc
sub
sub
inc
inc
xor
xor
xor
jge
fstpt
xor
xor
inc
xor
xor
ss
xor
leave
mov
fdivl
cmp
xor
clc
inc
inc
xor
mov
aam
xchg
push
das
lret
out
inc
add
gs
push
jo
or
aas
cmp
inc
inc
movsb
jg
in
xorb
xor
or
push
and
lock
xor
adc
xor
inc
pop
dec
sbb
or
jl,pt
xchg
push
ficoml
push
cld
stos
mov
sahf
inc
push
inc
push
dec
and
cmp
or
add
xor
and
aam
cmp
dec
outsl
mov
dec
xor
ds
pop
in
scas
push
push
sbb
inc
dec
hlt
imul
ficoml
pop
push
xor
push
inc
out
adc
push
sub
out
cmp
jmp
negb
lods
sahf
add
movntq
and
hlt
jne
dec
or
dec
mov
insb
adc
dec
jo
test
ss
inc
and
outsl
xor
imul
gs
sub
js
push
push
mov
data16
push
inc
cmp
jbe
in
rolb
inc
cmp
sbb
xchg
test
and
stos
add
xor
mov
inc
cs
cmp
sub
inc
sbb
arpl
insb
mov
xchg
and
ret
jne
ret
lret
js
testb
xor
xor
or
pop
adc
or
cmp
mov
sub
sbbl
pop
add
les
jp
ficoml
inc
mov
pusha
push
and
je
ds
and
inc
std
addl
imul
dec
xchg
loopne
jns
rcrl
add
dec
fs
ret
lcall
cmp
ss
popa
fs
jo
dec
pop
rol
add
dec
movsl
sbb
mov
dec
movsb
push
cmp
dec
jae
outsl
mov
pop
arpl
inc
cs
push
push
push
add
xchg
pop
xor
ja
dec
sub
shlb
mov
sbb
popa
imul
and
sbb
lods
cwtl
add
fdivl
add
add
inc
and
push
add
push
mov
xor
sbb
inc
rclb
adc
push
pop
adc
or
or
add
sbb
and
xchg
xchg
xchg
pushf
add
sbb
push
sub
and
jg
adc
inc
mov
inc
ret
pop
add
or
ret
dec
pop
cmpsl
or
mov
add
sahf
out
push
orb
or
add
jae
rcll
mov
das
push
adc
iret
jae
add
adc
push
sbb
sahf
cmpsl
stc
cmp
enter
sbb
sarl
sbb
push
das
push
mov
nop
cld
and
cli
imul
imul
iret
pushf
out
sahf
push
cld
fdivr
mov
cmpsl
sbb
cwtl
cmp
aam
xor
mov
aad
mov
mov
es
ds
outsl
inc
lds
arpl
push
adc
test
jno
aaa
ds
cmp
dec
sbb
xchg
or
ret
popl
adc
out
lcall
fcomps
mov
push
insb
xor
iret
repz
nop
mov
mov
repz
push
jns
pop
mov
dec
repz
out
inc
inc
cmp
xor
repz
xor
and
sbb
iret
repz
adc
or
jns
iret
repz
cld
or
hlt
out
sahf
out
enter
jns
movsb
nop
jo
xor
cmp
sarl
int3
mov
insb
repz
repz
sub
adc
out
sahf
out
push
fcom
les
js
sub
aam
cmp
repz
xchg
jo
sbb
add
call
cwtl
pop
dec
les
iret
inc
adc
or
jnp
add
gs
pop
and
and
sbb
inc
sarb
add
icebp
inc
xchg
inc
xor
out
mov
scas
sub
adc
add
adc
fnstsw
push
inc
dec
cmp
cltd
js
or
mov
mov
mov
sbb
pusha
adc
insl
scas
push
lock
sub
pusha
je
add
roll
mov
test
mov
aas
mov
sbb
bound
sub
push
ja
rorl
jmp
mov
push
aaa
movsb
pop
and
pop
or
push
cmpsl
dec
pop
data16
cmp
test
pop
movlps
icebp
xchg
add
pop
imul
shrb
decl
dec
lods
mov
pushf
andb
rolb
ret
jns
test
add
or
xor
and
je
fistps
inc
push
xor
xchg
cld
inc
inc
mov
jnp
out
les
loope
mov
out
push
jg
pop
jne
pop
or
sub
stc
sbb
nop
cmc
mov
jne
imul
call
and
fidivs
arpl
imul
pop
jb
pop
pop
int3
or
push
or
jo,pn
js
or
xchg
ret
push
int3
into
daa
adc
neg
push
push
push
insb
das
inc
in
stos
dec
iret
outsl
jl
add
scas
mov
adcb
add
das
loopne
outsb
repnz
insb
xchg
loopne
mov
insb
shl
push
mov
movsb
inc
jo
mov
insl
or
add
inc
sub
and
repnz
jg
fdiv
xchg
or
cmp
mov
ss
movsl
fadd
cmp
sete
int3
loopne
jnp
data16
ljmp
add
xchg
sbb
dec
xlat
jns
pop
jbe
jns
rcr
cmp
ss
push
lcall
lret
jecxz
push
test
adc
aaa
or
push
popf
jl
in
adc
aas
sbb
adc
cmpsb
jg
mov
jbe
push
xor
mov
enter
aam
cmp
mov
sbb
cmpsl
mov
outsl
daa
xchg
inc
add
iret
fcmovnbe
cmp
dec
and
sarl
jbe
fstps
movsl
mov
adc
aam
mov
cwtl
mov
adc
fs
loopne
mov
mov
push
sahf
loopne
daa
jbe
xlat
fdivp
dec
enter
mov
ss
bound
push
xor
push
mov
xchg
dec
pop
add
cmp
push
dec
imul
add
pop
aas
adc
ltr
insb
cmp
push
jnp
lcall
dec
xchg
inc
push
es
pop
adc
add
push
outsl
ja
xor
bound
sub
mov
push
add
pop
pusha
add
out
daa
movsb
and
pop
mov
and
add
inc
repnz
mov
jns
inc
lods
mov
ret
fucomip
cmc
inc
dec
fidivrs
jno
sbb
leave
push
jb
mov
adc
inc
add
insl
jo
lock
add
outsb
push
add
mov
dec
add
xchg
add
push
lods
or
mov
jae
nop
push
adc
sbb
sub
jo
rorb
pop
inc
roll
lret
out
adc
add
jecxz
inc
jecxz
xchg
xchg
sbb
pushf
push
push
add
and
add
es
mov
inc
push
mov
xchg
pop
ret
adc
mov
test
cmp
push
jo
jb
jns
jge
pop
xchg
mov
movsl
and
imul
cmpsl
xor
push
inc
scas
loope
sbb
imulb
push
in
loope
sbb
adc
push
inc
and
mov
pusha
inc
and
cmp
cmpsl
and
inc
imul
jge
xchg
xor
inc
mov
add
dec
inc
add
pop
sbb
fbld
jne
cli
mov
lods
gs
or
mov
notb
rolb
ljmp
mov
push
scas
shll
xor
xchg
and
xchg
jmp
in
shrb
pop
ds
fs
fstl
push
dec
xorl
dec
and
ret
inc
sti
mov
gs
push
adc
and
das
and
push
rorl
jb
xor
and
inc
mov
inc
xchg
push
mov
dec
add
rcll
sbb
aas
das
pop
outsl
mov
mov
inc
loopne
push
fldl
xchg
stc
dec
ficompl
add
push
lcall
orb
mov
push
xor
xor
dec
dec
pop
mov
adc
add
inc
jns
push
fs
lds
lret
mov
lret
mov
outsl
inc
push
outsl
cmp
xchg
pop
roll
add
inc
push
sbb
std
xor
lds
sbbb
sbb
lock
in
js
cs
rolb
insl
imul
push
mov
add
add
adc
arpl
jne
sub
das
push
xchg
out
dec
aaa
dec
inc
dec
pop
or
aas
sbb
sbb
adc
out
jnp
push
rcrb
sbb
sbb
add
add
push
mov
stos
mov
add
jo
add
add
loopne
add
dec
sub
xor
cs
lods
jo
sub
rorb
int3
lock
jo
jno
fs
insb
in
cmp
add
cmp
pop
roll
daa
add
in
xchg
cmpsl
dec
sub
xchg
add
mov
cltd
sbb
imul
add
iret
xor
int
xchg
into
out
outsl
inc
pushf
mov
push
push
push
mov
or
pop
sbb
ret
push
and
popa
xchg
or
jns
insb
cli
adc
jle
inc
jae
adc
add
je
push
xor
divb
add
add
jno
xor
and
into
add
bound
pop
xchg
cmp
cmp
into
insb
sbb
xor
sub
cmp
dec
jle
adc
push
sub
xchg
xor
sbb
and
and
fbld
pop
mov
sbb
adc
fwait
xchg
scas
sub
inc
cwtl
aam
xor
les
or
push
mov
push
pop
in
aam
das
or
sbb
jae
sub
adc
mov
add
shl
mov
insb
push
sbbb
test
xchg
push
punpcklbw
imull
mov
and
add
push
std
mov
enter
sub
add
adc
and
push
jo
push
mov
mov
dec
add
dec
mov
gs
cmp
inc
xor
adc
sub
fsubrl
movsb
push
or
ss
stos
stos
ret
xor
pop
pop
adc
out
inc
mov
dec
adc
push
mov
and
daa
inc
test
push
dec
add
mov
daa
jne
push
push
sbb
out
adc
add
iret
repz
clc
out
lock
iret
repz
mov
jns
repz
pop
mov
jns
xchg
nop
mov
jns
pusha
push
pop
push
inc
repz
repz
and
sbb
jo
iret
adc
in
lock
push
loopne
fcom
iret
repz
enter
cwtl
mov
repz
pusha
push
cmp
repz
repz
sbb
or
jns
iret
add
in
hlt
in
in
out
sahf
fmul
mov
jns
out
xchg
push
mov
js
push
inc
out
cmp
sub
and
or
jmp
test
jo
es
arpl
and
pop
push
rcll
push
push
divl
ja
testl
cmp
or
out
jno
cs
shl
add
add
push
nop
pop
pop
leave
xchg
data16
jnp
dec
or
push
aaa
sqrtps
shl
pusha
mov
pop
and
xchg
add
push
or
pop
movsb
fdivs
jg
fs
inc
dec
pop
push
push
mov
add
dec
add
sarb
popa
adc
pop
das
aaa
dec
and
fstpl
jne
shrb
subb
push
or
xor
out
adc
pop
add
in
mov
sbb
cmp
or
inc
mov
push
popf
fiaddl
sbb
cmp
insl
inc
fisttpll
xor
popa
cld
xchg
cmp
insl
jbe,pn
and
xlat
lcall
pusha
lahf
xor
xor
ds
add
mov
loopne
pop
mov
xor
jae
jno
imul
lods
popf
rorb
inc
jnp
mov
sbb
cmp
aaa
add
dec
sub
and
mov
or
adc
rolb
jae
xchg
mov
popa
insb
into
dec
sub
insl
sarl
sti
inc
loopne
pusha
ss
sbb
in
push
sbb
inc
add
inc
insl
jnp
inc
pop
pop
adc
jg
fcmovbe
add
les
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
pushl
or
sub
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
pushl
xor
xor
xor
dec
xor
xchg
shll
inc
ss
out
pushl
repnz
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
decl
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
clc
cmp
cmp
sub
ret
add
push
lock
idivl
jg
cmp
xchg
add
adc
and
dec
xor
xor
pop
cld
pushl
outsb
xor
popf
xor
xor
xor
xor
xor
xor
clc
ljmp
mov
xor
xor
xor
xor
out
xor
push
xor
jge
mov
xor
xor
fidivl
scas
xor
inc
xor
fnsave
out
xor
pushl
push
ss
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
xchg
mov
out
cmp
pop
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
cmp
cmp
cmp
push
adc
cmp
cmp
cmp
cmp
pop
daa
and
cmp
imul
cmp
cmp
sahf
jg
cmp
jo
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
andl
xor
xor
xor
xor
jl
mov
mov
pushl
std
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
cmc
mov
inc
inc
xor
pop
xor
jo
xchg
xor
xor
call
movsb
inc
xor
xor
xor
xor
xor
xor
fcomip
stos
xor
aaa
ss
clc
loop
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
sbb
sarl
xchg
aas
inc
aas
pop
aas
ja
pusha
das
jle
inc
pop
push
or
cmp
pop
xor
jmp
jmp
push
xor
xor
xor
xor
xor
xor
xor
pop
cld
pop
or
cmpsb
push
xor
xor
lcall
pushl
hlt
xor
xor
xor
test
mov
mov
nop
xor
out
jmp
lock
xor
scas
clc
xor
cmp
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
in
in
cmp
cmp
std
cmp
cmp
mov
lcall
das
mov
cmpb
ds
aas
jmp
decl
xor
mov
ss
ss
xchg
cmp
ljmp
cmp
mov
mov
mov
cmp
cmp
cmp
cmp
and
lcall
ja
lcall
cmp
mov
aas
push
mov
cmpb
aas
sarl
aas
in
out
std
mov
push
movsb
xor
cld
add
xor
xor
xor
fisubrl
xor
std
lcall
loop
xor
xor
xor
mov
xor
xor
incl
scas
std
xor
cmpsb
data16
ss
add
or
jg
cmc
aaa
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
pushl
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
jmp
cmp
mov
cmp
cmp
sbb
push
cmp
aas
inc
cmp
dec
cmp
popa
cmp
cmpb
cmp
lcall
pop
push
stos
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
sub
mov
adc
sub
xor
cmp
decl
dec
cmp
push
cmp
insl
cmp
js
cmpl
mov
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
out
dec
cmp
inc
cmp
pop
cmp
mov
adc
cmp
jp
jg
cwtl
ds
ds
jecxz,pt
out
ds
das
aas
or
je
jge
mov
movsl
aas
stos
aas
mov
mov
hlt
cli
out
rclb
xor
lcall
sahf
xchg
les
fidivl
in
aas
std
pop
mov
and
sub
cmp
jb
mov
xor
xor
xor
cmc
pushl
lcall
xor
xor
mov
jl
cmpsl
xor
xor
outsl
sarb
jno
xchg
xor
xor
xor
cmpsb
pushl
xor
inc
cmpsb
xor
cmpsb
xor
xorb
aaa
fwait
sahf
cmpsb
sbb
sbb
scas
cmp
or
cmp
fdivrl
aaa
cmp
xchg
jo
mov
mov
jg
fimull
nop
cmp
cmp
cmp
pop
adc
mov
jle
push
or
mov
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
fbstp
js
jge
cmp
cmp
cmp
cmp
cmp
cmp
jle
dec
loopne
jbe
cmp
sbb
stos
dec
pop
ds
xor
xchg
aas
push
mov
das
clc
inc
xor
mov
xor
xor
xor
push
ss
fiadds
aaa
ret
shlb
aaa
jmp
repnz
or
cmp
pop
cmp
jg
jge
mov
cmp
cmp
jbe
xchg
cmp
cmp
cmp
pushl
mov
and
cmp
cmp
fdivrs
push
aas
jne
je
jbe
mov
or
mov
xlat
xlat
pushl
fwait
xor
xor
dec
or
aaa
mov
xor
xor
divl
pop
xor
hlt
call
xor
es
dec
ss
outsb
notb
stos
jg
pushl
enter
in
and
cmp
cmp
cmp
mov
pop
mov
sbb
cmp
das
inc
add
cmp
jne
test
mov
jg
pop
mov
cmp
dec
cmp
cmp
call
jae
aam
fnstsw
jecxz
imul
mov
cmp
cmp
pop
sarb
decb
dec
cmp
mov
call
pop
and
push
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
loope
rol
jg
popa
mov
push
xor
aad
out
decl
cmp
or
xor
xor
xor
xor
xor
mov
xor
scas
incb
push
lcall
ds
dec
aaa
pop
aaa
js
mov
stos
incl
cld
pop
cli
fidivl
out
in
aaa
cli
aaa
mov
cmp
ret
ljmp
cltd
cmp
cmp
cmp
cmp
cmp
cmp
ljmp
inc
cmp
cmp
cmp
adc
jbe
cmpl
cmp
jmp
movsb
cmp
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
loop
push
sub
xor
decl
push
adc
xor
jae
cmp
jne
jg
xchg
xor
xor
xor
push
jge
sub
xor
ljmp
jbe
loopne
adc
adc
lcall
xor
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
fwait
cmp
push
out
xor
nop
jo
xor
into
cmp
inc
xor
xor
xor
jl
ljmp
push
decb
lods
xor
int3
outsb
add
pop
mov
xor
xor
aaa
or
xor
cmp
sub
sub
xor
cmp
inc
cs
inc
cmp
dec
cmp
push
rcrb
cmp
decl
adc
js
jl
cmpb
cmp
push
mov
push
mov
enter
push
mov
cmp
cmp
mov
cmp
inc
cli
call
hlt
dec
cld
push
add
or
adc
lock
mov
stos
sbb
and
and
sub
sub
xor
jg
add
cmp
inc
cmp
cmp
pop
aas
sar
cmp
cmp
insb
cmp
je
jl
cmpb
faddl
nop
xchg
cwtl
mov
mov
sub
xor
inc
mov
push
aas
push
ljmp
aas
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
lahf
jle
cmp
push
or
xor
xchg
xor
pushl
cwtl
xor
xor
inc
xor
xor
cwtl
push
cwtl
lock
mov
xor
xor
xor
cmpsb
cmp
mov
xor
mov
fcomps
xor
andb
add
aaa
flds
or
or
ss
jmp
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
pop
loopne
add
add
or
or
adc
adc
aaa
sbb
and
and
sub
sub
mov
aaa
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pop
loope
cli
pusha
aaa
jo
je
jl
xorb
aaa
mov
nop
aaa
xchg
faddl
into
mov
dec
mov
mov
jmp
xor
enter
shlb
aam
fdivs
fcoml
pop
mov
in
out
aaa
hlt
clc
dec
pop
mov
cld
aaa
hlt
add
or
adc
adc
sbb
sbb
mov
ret
fdivrl
call
mov
cmp
pop
std
jg
mov
cmp
cmp
sub
cmp
cmp
cmp
cmp
aad
mov
cmp
jl
test
lcall
mov
mov
cmp
mov
mov
cmp
je
movsl
pop
orl
or
in
xchg
movsb
fs
lret
out
out
xchg
lods
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
stc
popa
aaa
stos
mov
push
lret
aaa
ljmp
gs
outsb
add
jl
aaa
mov
daa
or
pop
out
fsubrl
int
test
push
add
inc
ds
loope
addb
repz
add
add
add
stos
xor
out
lods
mov
or
lret
out
addb
cmp
and
push
xchg
sub
sub
add
repnz
and
dec
mov
cwtl
or
mov
rclb
out
add
sbb
push
pop
pusha
or
dec
out
subb
add
cwtl
insb
or
sub
and
inc
inc
jno
push
sub
xor
adc
popa
or
test
int
movsb
scas
aas
and
mov
add
inc
pusha
mov
fmull
push
gs
adc
or
mov
push
ret
push
cmp
xor
dec
sbb
ror
pop
dec
jno
sbb
call
out
lods
cmp
xchg
sbb
sti
gs
push
cmp
sub
je
and
imul
pop
bound
jle
cld
arpl
incl
jl
or
incl
jb
hlt
cld
mov
adc
add
sub
xchg
pusha
mov
dec
and
push
fdivrs
and
or
in
adc
incb
mov
call
loopne
in
es
mov
pop
imul
push
std
cmpsl
jge
je
mov
xor
test
add
jp
aaa
or
xor
ffreep
and
or
ss
or
cmpl
imul
or
mov
xchg
add
es
inc
dec
pop
jbe
or
addb
les
inc
ret
push
add
and
ret
mov
add
pop
std
push
mov
inc
sahf
add
lret
cmc
cmp
jns
inc
mov
call
jnp
inc
cmp
jne
notb
pop
mov
idivl
push
add
adc
rorb
push
call
out
and
nop
cmp
mov
or
andb
push
dec
pop
inc
mov
in
je
cltd
adc
int
pop
push
add
dec
add
and
dec
xor
pop
add
lods
adc
fstl
dec
or
xchg
inc
loop
sbb
adc
jbe
dec
cmp
push
and
fstl
jb
cld
pop
fldl
inc
or
xchg
je
jo
pop
aas
push
ret
push
cmp
je
or
leave
pop
clc
fnsave
cmp
or
push
pop
inc
xchg
leave
mov
ret
mov
and
mov
dec
sub
insb
lret
and
jae
sub
push
pop
add
lahf
add
pusha
adc
sbb
pop
ret
sarb
mov
adc
xor
push
cmp
mov
pop
lcall
push
jecxz
decl
test
or
call
mov
pop
and
add
test
ljmp
orl
rclb
cmp
push
fcoms
inc
test
and
jne
adc
sub
push
mov
push
sub
adc
mov
adc
or
and
imul
dec
lods
cmp
inc
mov
test
mov
dec
sarb
leave
inc
push
adc
jo
mov
xor
mov
jne
mov
cmp
cmp
or
fildl
dec
jp
call
or
xor
inc
or
rol
es
ret
test
enter
push
dec
adc
adc
push
add
adc
push
adc
adc
femms
mov
or
inc
sbb
mov
cmp
inc
lahf
dec
dec
inc
sub
inc
dec
gs
flds
shll
or
mov
and
dec
push
cmp
mov
and
adc
xchg
mov
or
mov
pop
outsb
mov
ljmp
mov
mov
ret
sarb
inc
mov
fs
or
jnp
pop
rol
pop
jnp
pop
ja
mov
test
sub
cmp
mov
mov
ds
adc
cmp
out
cmp
adc
mov
push
in
leave
cmp
lret
inc
mov
sub
mov
jbe
xchg
xor
fcomp
pop
cli
sbb
nop
sub
dec
sbb
pop
push
pop
dec
xor
push
jl
jl
dec
mov
adc
adc
mov
fcoms
mov
adc
or
or
cmp
sahf
jbe
test
mov
and
lods
xchg
nop
push
cmp
popa
or
sub
cwtl
cs
and
cmp
push
sbb
jne
je
call
es
add
cmp
mov
adc
pop
ss
xor
push
add
adc
xchg
xorl
adc
and
cmp
js
push
add
push
fwait
stc
or
inc
sbb
sbb
add
cwtl
insl
add
test
gs
bound
and
sub
fistps
adc
add
gs
outsb
cmpsl
add
cmp
or
lods
sbb
and
in
add
inc
sbb
in
sbb
sbb
sub
dec
or
cmp
add
mov
iret
ljmp
mov
cmp
es
inc
jnp
add
add
push
adc
fldt
sbbb
and
pop
mov
push
adc
inc
fcmovnu
push
sub
inc
pusha
and
jl
pop
leave
mov
mov
cmp
mov
pop
test
sbb
nop
shlb
sbb
sub
fstpt
fisubl
cmpb
jg
adc
and
cmp
jg
and
cmp
mov
nop
push
and
es
add
aaa
adcb
dec
pop
addr16
outsb
and
push
jg
xchg
jns
testl
push
xchg
xchg
gs
dec
inc
addr16
add
jmp
xor
mov
addr16
popf
sub
lret
sub
jg
and
out
fstp
xor
pop
nop
inc
push
fs
mov
push
push
jg
mov
push
pop
and
addr16
repz
push
lock
cmp
out
push
or
and
add
gs
testl
and
add
loopne
add
xlat
mov
cltd
jle
inc
adc
and
rclb
sub
je
cltd
and
sbb
mov
mov
cmp
cltd
mov
xor
in
cltd
add
stc
adc
inc
push
call
or
pop
pusha
mov
pop
or
xchg
and
call
test
cmpsl
ret
add
pusha
adc
xor
lcall
daa
sahf
xchg
lret
add
daa
daa
es
movsb
imul
add
daa
daa
xor
shll
daa
daa
daa
daa
xor
shll
daa
daa
and
cmpsb
daa
daa
daa
daa
mov
sub
sub
test
pop
sub
lcall
sub
inc
lcall
shll
sub
dec
sub
in
cmp
push
xchg
sbb
or
inc
and
or
sbb
and
sub
cmpsb
sub
and
sub
cltd
pusha
pop
push
lock
xor
subl
je
out
mov
sbb
jnp
jae
cmp
cmc
push
lock
mov
es
jp
or
clc
fs
dec
sbb
cmp
sbb
dec
mov
nop
add
psubsb
cwtl
andl
jo
add
push
push
loopne
or
and
mov
sti
ss
syscall
fstl
addr16
pop
jb
adc
addr16
add
or
hlt
jle
push
or
movhpd
push
nop
sub
rclb
mov
pop
pop
push
cmp
inc
inc
rorl
pop
test
push
nop
sub
and
ficomps
test
push
add
adc
test
repz
cmp
cmp
and
mov
dec
sub
adc
ja
ret
call
xchg
out
add
nop
adcl
sub
push
mov
sbb
mov
mov
pop
mov
mov
cld
add
sub
sbb
ds
jo
cltd
inc
mov
aad
cltd
xchg
mov
and
xchg
cltd
cwtl
pop
push
call
adc
lret
jno
jge
rol
inc
mov
mov
dec
subb
outsl
cltd
mov
nop
cmp
xor
cltd
nopl
or
cwtl
pop
adc
or
addr16
cltd
pop
sbb
fiadds
xchg
sbb
push
adc
cltd
or
sub
sbb
test
roll
mov
cltd
in
and
adcb
mov
sbb
popa
rolb
cltd
sbbb
cltd
sub
imul
dec
adc
inc
test
adc
push
mov
pop
aam
inc
adc
sub
adc
mov
mov
xor
mov
adc
inc
adc
mov
push
in
adc
fcmovu
add
dec
mov
mov
add
adc
repnz
movsl
inc
adc
lds
push
pop
cmp
xor
shlb
mov
into
stos
mov
subb
rcrb
jo
pusha
test
adc
pop
adc
push
ja
push
adc
adc
in
fisubrs
lods
dec
adc
mov
dec
inc
pop
addr16
mov
pop
add
inc
adc
add
loopne
inc
pop
inc
outsb
push
movsl
adc
test
shrl
add
inc
call
push
test
test
stos
dec
adc
pop
adc
adc
fs
push
test
jmp
inc
or
adc
subl
orl
rclb
cmp
sub
push
cmpsl
push
xchg
adc
sub
add
outsb
mov
mov
lods
or
and
icebp
mov
pop
rol
and
movsb
sbb
inc
movsb
jbe
movsb
mov
fcoms
jb
aaa
rorb
adc
push
pop
test
cs
lods
icebp
in
push
dec
or
push
test
and
enter
add
pop
inc
or
mov
or
and
dec
add
je
push
les
mov
and
das
and
adc
add
xor
out
xchg
pop
push
push
inc
pop
sarb
aam
cmp
sub
loopne
and
shlb
movzbl
inc
xor
je
pop
xchg
cltd
sbb
sbb
sub
xor
sbb
sbb
cmp
inc
pop
sbb
sbb
inc
dec
dec
inc
movsb
rcrl
pop
cmp
xchg
in
pop
mov
add
fstpl
push
call
add
jo
inc
add
movsb
mov
psubusb
fdivs
lds
pop
sarb
out
test
xor
inc
pop
push
dec
jmp
call
orl
mov
xorb
mov
outsl
jo
nop
rorb
movsl
addb
ljmp
add
dec
lahf
roll
dec
xorl
jno
cmp
ja
mov
and
xor
jl
enter
xor
pop
adcb
pop
xor
ffreep
call
jmp
outsl
cmp
imul
and
lahf
xor
sbb
subl
movsb
adc
cwtl
mov
inc
aas
orb
lcall
cmpsl
push
int3
cmpsb
pop
pop
fstpl
fisttpll
cmpsb
dec
sub
faddl
cmp
jo
mov
inc
into
cmpsb
jle
call
int3
cmpsb
pop
das
pop
fs
push
xchg
bound
rcrb
xchg
in
cmp
fdivl
fsubl
mov
mov
pop
lods
lret
call
pop
or
jecxz
or
add
cs
mov
mov
adc
and
mov
dec
pop
dec
rorb
roll
nop
out
test
mov
nop
pop
mov
mov
pop
int3
dec
fmul
inc
ljmp
enter
fcmovb
mov
add
bound
iret
xchg
in
sbb
push
or
adc
nop
loope
pushf
mov
test
sbb
das
or
mov
nop
loopne
sbb
push
xchg
imul
mov
mov
daa
in
sbb
loopne
or
shrb
sub
add
add
jmp
jnp
pop
rclb
fwait
roll
add
lea
jne
mov
mov
push
shll
cwtl
and
cltd
and
cltd
mov
test
lahf
mov
rcrl
adc
jo
cltd
jp
sbb
sub
push
inc
jecxz
and
inc
cltd
pop
inc
and
sbb
stc
cltd
je
arpl
cmp
push
inc
jmp
inc
ret
mov
cwtl
cltd
enter
mov
sub
fisttpll
push
bnd
cwtl
test
pusha
sbbl
cltd
inc
ljmp
and
lea
xchg
adc
add
repz
mov
ljmp
push
add
xchg
xor
pusha
mov
xchg
xchg
xchg
add
sub
xchg
je
sbb
and
mov
lret
mov
andl
mov
sbb
mov
pop
xchg
sbb
daa
cmpsl
mov
push
call
sub
inc
insb
xor
sbb
test
mov
cmpsl
push
add
testb
fcomi
jmp
add
ret
call
scas
pop
jnp
xchg
jbe
outsl
ret
pop
hlt
je
mov
dec
jge
mov
inc
pop
push
iret
adc
xchg
js
jl
subb
sub
andb
shll
xchg
inc
push
mov
and
inc
icebp
movsl
or
pusha
inc
mov
in
adc
and
xchg
xor
push
xchg
or
dec
mov
jno
adc
inc
dec
mov
movsl
mov
pop
pushf
inc
pop
adc
das
sub
or
sub
repnz
jno
arpl
mov
sbb
cmp
insb
arpl
lcall
pop
pop
stos
addb
mov
xchg
add
cmp
filds
sub
sbb
test
sub
push
daa
xchg
pop
xchg
mov
shl
inc
xchg
push
fcoms
push
xor
insl
ret
xchg
lahf
xchg
into
pop
addr16
mov
cwtl
cmp
and
xchg
pushf
mov
mov
xchg
fdivl
daa
mov
xchg
or
mov
insl
xchg
adc
sbb
xchg
dec
sbb
xchg
sub
sahf
fcmovb
mov
add
mov
xchg
inc
and
js
cmp
leave
push
fldcw
pushf
insl
roll
rcrb
and
ficoml
call
lret
mov
add
add
and
mov
sub
mov
add
sahf
call
mov
dec
inc
or
cmp
dec
pmulhuw
xchg
inc
mov
aaa
insl
jg
je
xchg
xor
adcl
aaa
inc
and
fs
sbb
xchg
jo
dec
xchg
push
pop
xchg
movsl
sub
dec
cmp
mov
je
xchg
xchg
ret
pop
mov
xchg
mov
add
mov
int3
dec
jmp
push
pcmpeqw
call
es
ja
xchg
data16
shrb
and
and
xchg
adc
stos
lret
adc
aam
inc
movsb
icebp
jnp
in
and
pop
mov
adc
sbb
xor
faddl
divl
cmpb
lret
int
test
aam
lret
in
push
rorl
ds
mov
in
aaa
mov
loope
scas
inc
push
xchg
clc
int
and
call
adc
push
int
mov
sub
pop
mov
das
push
in
mov
inc
int3
pop
insb
push
mov
int
out
scas
dec
pop
das
pushf
inc
ss
insl
or
mov
cmp
jmp
mov
cmp
sub
fldl
imul
sbbb
inc
fildl
sbb
enter
dec
sahf
in
stos
adc
fildl
sub
loopne
cmp
aam
pop
add
xorl
add
stos
push
nop
push
inc
enter
mov
fisttpl
cmp
loop
fucomi
fs
add
nop
fistl
push
repnz
and
popf
adc
push
pop
and
fisttpl
inc
repnz
and
xchg
mov
dec
xchg
push
push
xchg
mov
or
adc
sub
or
and
mov
into
fistpll
adcb
dec
lods
sub
or
ja
mov
fstpt
scas
scas
fucom
mov
adc
jno
rcrl
fildl
fldt
call
mov
and
inc
fistl
fistpl
adc
xchg
daa
out
cmpsb
jno
pop
jle
dec
or
push
and
inc
mov
jo
adc
dec
arpl
fsubl
shll
or
filds
pop
add
mov
sub
fucomip
in
inc
inc
inc
sub
lock
xchg
jno
iret
loope
les
int3
jns
adcb
repnz
mov
mov
and
or
add
in
mov
in
fdivrl
push
repnz
test
pop
mov
mov
pop
pop
cmpl
pop
pop
popa
mov
dec
mov
inc
mov
and
cmp
and
nop
sbbl
mov
enter
loope
mov
pop
cmp
mov
jb
sbbl
xchg
mov
dec
push
jle
jo
gs
pop
mov
push
jb
cmpl
cs
enter
or
sbb
and
mov
push
jb
mov
and
cmp
mov
mov
pushf
mov
enter
jnp
jo
gs
pop
mov
jb
sbbl
cs
dec
push
sbb
in
pop
hlt
mov
daa
test
fcmovne
or
mov
add
inc
dec
lcall
sub
mov
or
mov
or
inc
adc
adc
lcall
movsb
sbb
imul
xchg
out
cli
mov
inc
dec
lcall
movsb
sbb
les
mov
xchg
xchg
inc
inc
mov
inc
dec
mov
dec
jl
xchg
cmp
cs
dec
push
pop
dec
movsl
adc
addr16
and
add
addb
push
test
add
add
add
inc
in
xor
loopne
sub
mov
inc
inc
add
adc
push
addr16
add
inc
inc
mov
mov
stc
dec
leave
and
sub
jb
dec
repnz
dec
push
mov
or
test
jmp
add
adc
les
mov
hlt
imul
testl
pop
icebp
xor
sub
out
sub
mov
inc
pop
mov
inc
inc
add
enter
mov
daa
movsb
test
add
push
mov
sbbl
punpckhbw
xchg
mov
adc
rsm
ret
sub
cmp
dec
js
js
jmp
gs
hlt
push
mov
cs
bswap
mov
xchg
and
mov
cvtps2pi
push
shrb
jl
stos
push
xchg
pop
add
gs
jbe
mov
sub
and
mov
sarl
sub
xor
sqrtps
mov
inc
mov
je
lea
adc
xchg
and
pop
mov
repz
sete
xchg
movsl
inc
push
sbb
mov
packuswb
and
mov
dec
push
add
insb
loope
add
or
cmp
jecxz
push
call
call
gs
sub
or
jnp
xchg
mov
cmp
scas
push
scas
xchg
and
push
xchg
scas
mov
and
sbb
gs
dec
pop
pop
sbb
iret
decb
sub
test
in
sub
adc
jne
movsl
or
sub
sub
or
ficompl
and
gs
mov
pop
or
dec
pop
mov
or
dec
jbe
dec
jbe
test
inc
scas
push
adc
push
lret
lret
adcl
pop
jo
or
xchg
or
mov
mov
or
mov
fsubr
or
or
xchg
sub
sub
call
out
movsl
or
and
push
dec
or
out
push
xchg
mov
call
push
sub
adc
or
push
lret
or
movsl
mov
sbb
cmpsb
test
mov
or
jnp
mov
adc
test
mov
sub
mov
or
daa
xor
sub
pop
gs
or
es
xchg
out
sub
push
movsl
rcll
daa
andb
lcall
out
add
sub
or
or
rol
aam
data16
pop
push
or
fwait
and
movsl
sub
jmp
sub
mov
insl
stos
mov
inc
push
movsl
or
sarb
js
je
push
sub
nop
imul
inc
in
shll
rcrb
ret
pop
lret
outsl
sub
fisttpll
lcall
sub
push
movsl
sub
loopne
mov
push
cmp
repnz
lock
call
sbb
inc
test
cmp
jg
dec
loopne
aad
xchg
mov
xchg
add
xor
or
sbb
add
adc
sub
mov
and
mov
mov
dec
push
or
lret
or
gs
add
xchg
out
imul
mov
lret
inc
or
enter
jmp
cmpsl
xor
or
inc
xchg
rclb
sub
mov
pop
xor
pushf
or
pusha
stos
adc
or
ret
mov
movsb
mov
movsl
or
adc
xor
gs
call
cmp
or
push
push
sub
pop
sahf
shrl
mov
out
test
je
push
les
sub
push
loop
xorb
mov
push
xchg
mov
jne
adcb
stos
or
push
imul
or
lret
or
adcb
xor
push
xchg
xchg
lcall
or
cmpsb
les
lret
fwait
adc
gs
sub
fs
cmp
sub
pop
jmp
or
or
lock
lahf
loope
les
subb
test
or
out
cs
pop
mov
mov
adc
or
xor
or
xchg
or
add
pop
stc
pop
mov
xlat
inc
mov
pop
pop
push
je
loope
mov
leave
and
repnz
cs
pop
cmp
aaa
xchg
out
or
or
mov
pop
add
and
pop
adc
in
enter
mov
and
outsb
or
das
jmp
fstps
push
pop
ds
shll
or
ss
xchg
mov
jne
add
mov
andl
cmp
xchg
or
push
je
add
mov
in
dec
mov
dec
push
push
out
jl
xchg
cmpsb
cli
sahf
arpl
movsl
cmpsb
inc
xchg
add
sbbb
push
testb
repz
rcll
sub
mov
int3
faddl
sbb
out
sahf
sub
inc
push
pop
outsb
jns
out
adcb
mov
or
push
ds
jns
out
pop
jb
mov
int3
out
push
stos
iret
repz
adc
cmp
cmp
repz
mov
out
repz
sbb
xor
iret
repz
dec
pop
insb
andb
cmpsb
add
test
dec
pop
push
adc
and
and
push
lea
ret
adc
add
iret
jnp
inc
sbb
push
push
mov
dec
sbb
mov
add
push
clc
mov
mov
es
push
lds
roll
clc
mov
cmp
jns
mov
add
iret
cmp
adc
adc
push
adc
jne
xchg
sbb
sbb
xchg
cmp
rcrl
js
or
lcall
push
pop
sahf
mov
and
iret
push
push
and
js
sarl
jns
jp
cmp
hlt
call
dec
inc
sbbb
xor
pop
or
or
xchg
mov
outsl
nop
xchg
ret
cmp
xchg
pop
dec
xchg
cmp
xor
push
push
cmp
imul
add
xchg
in
out
sahf
out
fstp
ror
sahf
out
sahf
enter
mov
jns
movsb
mov
sahf
out
nop
mov
sahf
cmpb
insb
jns
out
push
out
sahf
out
push
dec
dec
inc
sahf
out
sahf
inc
cmp
xor
sub
sahf
out
and
add
nop
repz
rcr
enter
cmpsl
stc
cmp
dec
sub
pop
sahf
out
sahf
movsb
jl
push
dec
inc
xor
out
xor
or
mov
repz
repz
jns
iret
or
int3
test
sti
fimuls
push
xor
jg
push
add
lock
dec
enter
das
adcb
pop
pop
push
test
stos
and
xchg
sub
xchg
inc
pop
adc
sub
inc
push
push
add
adc
mov
xor
pushw
push
test
mov
aaa
xor
shlb
aaa
shlb
add
adc
jo
mov
mov
or
daa
add
and
xchg
insb
movsb
loope
xchg
adc
add
sbb
mov
out
xlat
mov
mov
inc
add
and
mov
insl
add
pop
cmpb
data16
jo
pop
shll
sbb
jbe
jbe
add
push
sub
mov
in
add
push
aas
or
shl
dec
enter
les
inc
pop
and
fdivrs
rorl
cmp
push
adc
xchg
push
pop
scas
inc
fbld
inc
sarb
inc
lahf
inc
jg
mov
jle
pop
xor
aas
test
sti
push
int3
xorb
cmpsl
fwait
cmp
fsubl
sbb
incb
push
daa
movsb
filds
xor
mov
add
movnti
imul
inc
mov
jo
stc
sub
movsb
test
push
aas
pushf
add
sbb
ret
insb
jbe
jecxz
pop
xor
cmp
pop
stos
outsb
cs
in
adc
scas
outsb
lahf
inc
outsl
ds
outsl
clc
cmp
fldenv
subps
inc
cmpsb
pop
mov
dec
push
mov
xchg
fsubl
dec
cmpsl
mov
cld
adcb
and
scas
inc
adc
and
iret
jl
xor
outsl
jne
notb
imul
mov
and
pop
inc
cmp
jb
pusha
fldt
pop
orl
inc
xchg
mov
xlat
jae
xor
sbb
dec
pop
xor
les
inc
adc
push
stos
mov
xor
xor
pop
pushl
mov
add
mov
dec
popa
pop
inc
and
sbb
adc
push
sub
inc
ljmp
addl
xchg
xlat
lcall
mov
add
xchg
outsb
sbb
pop
push
mov
mov
mov
and
adc
xchg
addb
movsb
sti
loop
xor
lahf
arpl
cmpsb
mov
mov
mov
or
and
mov
test
and
sbb
pop
push
aaa
add
ja
lds
arpl
outsl
lcall
sbb
pusha
mov
rorb
xchg
movsb
sahf
out
test
xchg
jns
out
nop
mov
out
pop
push
pop
dec
inc
inc
cmp
repz
cmp
sub
cmp
repz
sbb
lea
adc
xchg
hlt
xchg
in
iret
repz
push
in
enter
iret
repz
test
mov
and
outsl
je
insb
push
xchg
idivl
fs
push
dec
mov
out
jl
repz
and
add
in
xchg
push
enter
cmp
mov
cmp
repz
nop
mov
jns
jo
pop
inc
cmp
iret
repz
and
adc
lock
loopne
sahf
out
int3
mov
fs
out
pop
outsl
fcoms
rorb
adc
jmp
push
cwtl
inc
dec
clc
into
data16
mov
mov
inc
xor
mov
adcb
pop
subb
ja
mov
mov
pop
lods
pop
js
cs
clc
mov
sti
outsb
push
jg
cld
pop
enter
js
xorl
loop
lcall
push
insl
push
inc
aas
mov
pop
mov
or
cmpl
and
add
mov
mov
sbb
fnstenv
sti
inc
xor
rcr
xor
xor
cmpsb
dec
icebp
lcall
push
adc
pop
ss
nop
ss
insl
loop
subb
ss
test
sub
xorl
aaa
adc
sbb
add
jecxz
aas
cmp
fstpt
push
cmp
xchg
test
mov
lret
cmp
mov
cmp
cmp
icebp
jg
inc
jnp
cmpl
adc
xor
cmp
cmp
outsl
test
mov
mov
ds
ds
fdivr
jg
add
ds
ds
ds
ds
aas
pop
aas
and
sub
xor
aaa
fists
adc
push
data16
jbe
jnp
fs
aas
cmpl
movsb
aas
mov
sarl
div
incb
lahf
push
xor
jl
xchg
cmpsb
mov
xor
mov
xor
mov
xor
push
inc
xor
mov
mov
cmp
pushf
xor
xor
mov
cmp
xchg
mov
cmp
xor
inc
add
mov
inc
fdivr
int
mov
xor
outsb
cmp
mov
pushf
xor
adc
pushl
xor
xor
xor
xor
xor
xor
dec
ja
clc
mov
mov
ss
pushl
sbb
xchg
mov
test
add
add
sub
das
cmp
or
add
pop
cmp
add
pusha
mov
pop
or
cmp
xor
xor
cmp
cmp
cmp
push
pop
cmp
pop
mov
push
outsl
cmp
jo
mov
inc
faddp
js
outsb
cli
outsb
cmp
idivb
mov
cmp
cmp
cmp
dec
push
pusha
cld
push
shrl
jle
test
decl
cmp
hlt
cmp
inc
ds
ds
ds
inc
xchg
mov
rclb
xor
xor
pusha
cld
ret
pushl
test
xchg
xor
push
xor
xchg
mov
fwait
xor
xor
xor
xor
xor
inc
jg
xor
xor
xor
outsb
xor
loopne
repnz
dec
ss
bound
orl
push
mov
test
ss
or
pop
add
fnsave
jecxz
clc
ss
ss
aaa
or
mov
xor
aaa
addr16
jno
stos
mov
sbb
push
shlb
cmp
or
sbb
pop
jecxz
sbb
cmpsb
test
mov
cmp
add
fbld
in
jmp
repz
cmp
cmp
cmp
and
es
cmp
cmp
call
cmp
jns
jle
xchg
mov
mov
dec
lahf
cmp
fstp
ret
push
add
incl
insb
cmp
cmp
cmp
cmp
cmp
cmp
push
dec
sbb
fstl
push
cltd
xor
push
jecxz
ds
pop
shrl
and
aaa
shrl
inc
xor
cmpl
aas
ret
aas
iret
dec
faddl
xor
into
xor
shrl
jp
xor
xor
icebp
pushl
ljmp
xor
xor
in
pop
xor
xor
xor
mov
cmp
insb
dec
lds
ret
xor
xor
adc
push
clc
stos
mov
pop
arpl
stos
add
ss
ss
aaa
pop
enter
aaa
jne
jle
ds
sbb
sub
inc
in
cmp
cmp
jecxz
ud0
sarl
fnstcw
jmp
cmp
cmp
cmp
sbb
or
arpl
outsb
xor
ret
cmp
cmp
scas
in
mov
stos
ds
or
cmp
push
jo
pop
lret
mov
mov
xor
xor
ja
jg
cs
xor
xor
xor
xor
dec
fisttpll
shlb
fdivl
out
xor
call
xor
xor
xor
xor
xor
xlat
xor
ja
mov
pushf
ss
mov
inc
xor
shll
mov
aaa
outsl
xchg
push
add
cmp
call
push
cmp
mov
jmp
std
cmp
ljmp
push
imul
sbb
ds
aas
lods
cmp
clc
cmpl
mov
mov
cld
xor
sbb
xor
out
sub
jae
cmp
cmp
dec
cmp
pop
cmp
ds
push
xchg
outsl
cmp
jecxz
clc
mov
xor
xor
xchg
testb
pop
or
or
pop
dec
es
xor
int
jp
add
loop
lock
aaa
arpl
pop
pusha
out
rcll
xor
mov
cmp
test
repnz
adc
mov
pop
cmp
ret
jb
dec
sbb
adc
mov
mov
popa
je
call
call
cld
cmp
push
int3
mov
add
jno
xchg
insb
jb
xor
push
adc
sub
push
orb
ja
push
mov
fsubrp
xor
fbld
jo
or
or
adc
adc
sbb
sbb
rclb
mov
cmp
inc
xor
mov
adc
xor
push
pusha
xor
xor
push
lret
es
lock
lret
mov
mov
nop
xor
sahf
popa
sub
xchg
mov
cmpl
fdivs
fmuls
xor
ss
lock
xchg
xlat
jbe
xor
test
jp
cmp
push
xor
fs
sbb
sahf
outsb
jo
bound
sarb
jo
push
add
dec
add
pusha
jo
fmull
mov
out
shl
ljmp
sub
sbb
pop
rclb
xor
xor
xor
xor
xor
cli
cmpsb
mov
add
sub
jg
push
xor
fs
xor
xor
xchg
sbb
stos
loope
or
sbb
pop
inc
add
in
call
or
xor
xor
inc
add
loop
sbb
push
adc
sub
xor
pop
sub
xor
xor
xor
xor
push
xor
pop
xor
cmp
pop
mov
xor
xor
xor
xor
mov
mov
push
scas
pushf
xor
xor
xor
xor
xor
xor
xor
loopne
cmpl
int3
fisubrl
pop
xor
or
mov
xor
jecxz
add
cmp
mov
or
xor
subb
cmp
inc
adc
sub
aas
add
xchg
add
and
fcompl
js
ret
xchg
insl
xchg
fistpll
cmp
dec
push
imul
and
lds
and
push
lret
enter
mov
lock
les
dec
pop
push
adc
mov
mov
adc
divl
add
jecxz
lock
pop
dec
inc
les
ljmp
jns
xorl
inc
lret
or
sbb
ljmp
pop
jne
into
sbb
xchg
pop
mov
inc
cmpsl
int
fiadds
or
lods
std
push
enter
cmc
dec
add
popf
cmpsl
out
mov
cmc
ljmp
push
mov
jns
in
inc
loope
lcall
test
shlb
mov
ds
repnz
inc
outsl
inc
pop
xlat
cld
push
cmpsl
or
dec
inc
sub
decl
inc
push
jg
jle
les
xchg
jge
pop
inc
in
jne
pop
fisubl
cmp
in
inc
call
mov
loop
push
add
jecxz
int3
sbbl
cmpsb
or
mov
lahf
lcall
decl
inc
nop
mov
jb
sub
mov
loope
ja
or
js
test
push
adc
and
sub
cli
fbstp
xchg
cmp
ja
outsl
movl
inc
iret
push
jne
adcb
outsb
test
fdivr
js
ljmp
cmpsw
jnp
adcl
sbb
inc
jmp
call
loop
add
arpl
pop
mov
dec
sahf
adc
mov
loopne
adc
das
dec
and
xor
sub
jg
push
ret
iret
test
subb
mov
gs
data16
popf
dec
popa
out
and
ret
ds
out
inc
inc
in
fisubl
cmp
dec
out
push
dec
in
rolb
pushl
popf
leave
push
pushf
mov
test
shlb
pop
dec
lret
mov
inc
mov
cmp
push
sub
push
clc
mov
cmpsl
repz
cli
xor
sti
movl
pop
mov
js
adc
pop
jecxz
insb
cmp
push
or
sbb
cs
xchg
jl
packsswb
fdivrs
pop
dec
fmull
sub
xchg
mov
in
or
jno
ss
outsb
or
call
cmpsb
jns
adc
call
rol
and
shll
notl
out
xor
lret
loop,pn
adc
bound
mov
scas
shlb
sub
add
push
add
mov
shll
mov
and
mov
loop
ds
loopne
push
imul
add
add
out
adc
popf
push
jg
mov
enter
xor
pushf
add
adc
cld
decl
test
fists
pop
je
cmpsb
jl
fadds
mov
cmp
aam
jg
sub
jno
cli
jle
and
insl
sbb
pushf
fcomip
push
imul
repnz
fstpt
mull
mov
pop
push
fcmovb
push
pushl
cld
dec
movsb
adc
inc
xor
movsb
lret
jno
addl
sub
dec
adc
mov
incl
add
sub
mov
push
xchg
ljmp
xchg
xor
testl
mov
decl
push
bnd
and
or
mov
int3
push
or
jge
jp
mov
jl
dec
hlt
push
popa
rcr
sub
iret
out
dec
mov
or
jmp
dec
sahf
shrd
in
lds
push
and
insb
mov
int
mov
push
pop
inc
out
mov
clc
nop
or
xor
rolb
xchg
aaa
enter
push
mov
adc
rcr
mov
loop
in
out
ljmp
test
sbb
xchg
jae
ja
aad
roll
pusha
xor
bound
outsl
clc
sbb
push
push
xor
push
das
push
lcall
cmpxchg
test
rdmsr
hlt
mov
pop
in
xor
sbb
fstl
call
les
cmp
push
and
lret
mov
outsl
xchg
push
sub
adc
std
cmp
xor
jl
out
mov
pop
push
scas
adc
std
repz
add
clc
add
cltd
xchg
pop
and
aaa
aaa
nop
cwtl
mov
sbb
jle
aaa
inc
sbb
adc
mov
and
xchg
mov
and
dec
inc
xchg
pop
ss
xor
enter
push
clc
lcall
mov
add
and
aam
out
daa
sbb
adcl
xchg
hlt
decl
call
sub
add
je
ljmp
sbb
push
cmp
in
adc
bound
mov
insb
cmc
cwtl
dec
outsb
and
pushl
lret
mov
inc
push
iret
mov
dec
mov
sbbb
push
pop
cmp
stos
mov
dec
mov
sub
aam
out
js
xchg
jae
fisubs
mov
ljmp
and
sub
popf
push
add
add
ret
adc
push
xor
call
std
outsb
inc
bndstx
mov
ds
mov
imul
pop
sbb
pushl
push
or
xchg
sti
repz
movsb
add
fsts
dec
and
push
out
pushf
lret
pop
aam
sti
cli
in
sub
orl
into
fdivs
imul
idiv
ljmp
clc
mov
dec
into
int3
outsl
arpl
adc
pop
rcrl
lcall
ret
ret
cli
mov
push
sar
test
in
xchg
jo
mov
in
std
sub
mov
in
decl
mov
stos
fisubrs
loope
aaa
cmp
push
mov
xchg
push
aad
xchg
outsl
cli
outsb
pop
pusha
dec
mov
push
sub
mov
addps
outsb
jp
inc
inc
dec
arpl
jge
roll
and
mov
add
cmc
stc
push
push
mov
mov
push
repz
dec
outsl
and
call
repnz
ret
loop
inc
enter
push
test
out
and
inc
cli
sahf
and
sbb
push
rorl
xor
fimuls
or
stc
setns
int
cs
out
push
decl
movb
add
cmp
push
dec
into
addl
pushl
xor
lret
push
loope
push
jg
or
mov
in
inc
mov
adc
mov
sbb
xor
incl
hlt
cmpb
jmp
stos
sti
inc
push
cmpsl
and
loopne
sub
xchg
jo
mov
clc
or
pushl
sti
adc
mov
push
push
push
dec
addr16
lds
fidivs
ljmp
jmp
and
std
mov
push
fstps
and
mov
insl
dec
pop
enter
sti
and
xchg
pop
xchg
jns
scas
leave
ss
dec
mov
and
bound
jmp
inc
iret
pop
out
jle
xor
sbb
push
push
aam
or
add
repz
jae
fcomip
call
cmp
lret
push
jnp
arpl
xchg
hlt
insl
xchg
push
jno
add
ljmp
adc
movsb
std
scas
jecxz
mov
popf
mov
or
aaa
and
rolb
mov
add
or
mov
push
icebp
jg
lock
xor
popf
int3
and
and
lcall
loop
dec
je
pop
lcall
popf
sti
jb
sbb
out
mov
jg
cmpsl
imulb
mov
out
sbb
add
scas
shrl
xchg
xchg
push
push
test
jmp
std
add
cmp
sarb
mov
loope
in
pop
lock
mov
cli
sar
lock
sarl
out
fs
add
in
jge
ljmp
aas
dec
dec
mov
sti
lods
into
cmp
jo
inc
dec
out
pop
repz
pop
push
jmp
mov
fmull
popa
idivl
cwtl
pop
test
decl
cli
jmp
arpl
loop
shll
dec
adc
lods
xchg
sub
call
mov
mov
xor
popf
enter
or
loop
sub
icebp
imul
das
ljmp
jnp
cltd
cmc
cltd
mov
orb
jb
jp
jno
push
icebp
push
jge
pop
ljmp
jecxz
inc
mov
hlt
call
push
mov
mov
dec
xor
movsb
xchg
mov
clc
sub
fcoms
cmp
jmp
pop
adc
out
mov
inc
inc
aaa
and
inc
daa
sbb
fwait
cwtl
or
cmp
pop
hlt
decl
cltd
xchg
pop
mov
imul
lahf
mov
popf
rolb
add
mov
repz
push
mov
dec
jle
and
iret
mov
lds
or
push
push
int
adc
adc
or
adc
xchg
jge
pusha
mov
dec
es
xor
sub
and
fidivrl
push
or
incl
mov
lret
arpl
clc
mov
jl
stos
mov
push
jl
xor
sbb
shr
inc
pop
notb
clc
pusha
mov
stos
xchg
cmp
outsb
push
cmp
jg
jmp
adc
in
cmp
inc
and
daa
lret
lret
cmp
into
ret
cld
and
ljmp
stc
outsb
outsl
ljmp
mov
das
lret
xchg
pop
icebp
mov
and
pop
std
call
add
jne
aad
addl
jl
pop
mov
scas
outsb
adc
fistpll
sbb
push
push
xchg
fildll
mov
call
xchg
lea
test
ljmp
push
dec
dec
ds
add
pop
xchg
mov
loop
call
loop
xchg
loopne
or
testb
fistps
stos
aas
ds
or
ss
and
dec
adc
xor
lret
adc
cs
decl
jns
jmp
or
es
lods
dec
sub
imul
dec
ss
scas
adc
mov
ficoml
sbb
pushl
xlat
mov
mov
pop
fstpl
mov
mov
test
mov
push
mov
ja
mov
fcomi
jae
adc
loope
pop
add
scas
inc
stos
pusha
mov
fiadds
shlb
fwait
dec
dec
mov
les
xor
add
push
sbb
mov
push
add
test
cmp
lods
sti
push
push
sub
outsb
repnz
inc
shrl
push
mov
sbb
add
dec
mov
cmp
sahf
mov
and
mov
jno
repz
stos
popf
xor
incl
mov
cld
les
inc
mov
imul
lds
xchg
pop
lret
clc
call
fwait
jmp
mov
adc
mov
pop
mov
sti
imul
sti
adcb
out
mov
shll
call
xchg
hlt
sar
cmp
dec
add
ds
inc
pop
sarb
ljmp
cwtl
inc
or
mov
sbb
inc
xor
sub
ja
or
or
jbe
scas
scas
in
stc
or
cli
decb
mov
pushf
push
cltd
mov
lcall
test
aam
jbe
pop
jge
out
jecxz
fnsetpm(287
xor
adc
test
scas
sub
ljmp
sub
or
sub
out
ljmp
test
mov
fstpl
and
mov
jo
sti
and
xor
out
clc
jl
mov
sti
pop
sbb
es
and
jle
cmc
leave
inc
push
in
nop
xchg
dec
jb
popf
pop
daa
call
cmc
je
mov
xchg
mov
call
jmp
in
jae
inc
fwait
in
jl
jp
adc
push
jle
int
xchg
rorl
call
xor
aas
cmp
aam
dec
push
or
fstp
jmp
lahf
sub
ljmp
mov
inc
sbb
adc
ja
aas
pop
iret
mov
push
gs
xchg
frstpm(287
dec
adc
jmp
dec
inc
xchg
sbb
or
shl
lds
pop
mov
ret
push
jmp
stc
movsb
scas
xchg
int
push
jae
xchg
std
mov
in
push
and
mov
inc
in
lcall
cs
mov
or
jge
inc
dec
jmp
jmp
ljmp
jl
xor
cmpsb
not
fsincos
add
out
jp
and
add
mov
iret
add
lds
loopne
flds
out
add
lret
mov
push
stos
jnp
ja
call
scas
mov
insb
std
and
mov
push
add
push
mov
pop
adc
cmp
push
sbb
and
xchg
and
out
add
jo
ljmp
pop
icebp
shll
sbbb
cltd
jp
dec
repnz
xchg
gs
call
test
loope
clc
dec
sub
sbb
aas
sar
pop
mov
ror
pop
lcall
xor
call
xchg
or
xor
mov
lahf
inc
add
inc
fsubp
cld
pop
adc
jbe
ret
shrl
fistps
pop
pop
mov
les
cmp
les
out
ret
scas
popa
insl
or
fsubrl
mov
mov
out
arpl
xchg
dec
mov
mov
inc
xchg
imul
popa
fadd
pop
push
xor
test
cmp
mov
cmpsb
xchg
faddl
call
cld
lcall
push
xchg
adc
push
xchg
out
or
add
push
dec
jbe
out
aam
or
jmp
daa
sbb
xchg
sbb
call
loopne
jo
lock
loopne
jmp
adc
test
pop
jo
dec
lock
xchg
and
lock
mov
lret
fbld
nop
sub
sub
rorl
xchg
inc
bound
push
ret
sar
ljmp
clc
xlat
out
cmpsl
outsb
adc
mov
dec
or
cwtl
xchg
jecxz
add
call
cld
cmpsl
mov
mov
inc
aaa
pop
popa
subl
and
std
imul
jg
out
add
dec
pop
insl
pop
dec
mov
shll
xor
jno
inc
ljmp
mov
faddl
push
xchg
int3
nop
shr
int
mov
add
nop
sahf
popa
jmp
ljmp
jns
or
leave
adc
cmp
push
pop
fsubp
addr16
cs
sbb
cld
divl
jmp
jge
nop
mov
sarl
andb
test
push
sub
notb
sbb
inc
push
ljmp
stos
cld
cmp
push
jb
xor
push
jbe
shr
mov
out
adcb
jmp
push
and
loopne
daa
fadds
ret
fmuls
sub
jl
ljmp
mov
mov
inc
jb
sub
decl
popf
hlt
mov
jmp
data16
jle
jns
mov
sub
loope
lock
out
dec
jns
rorl
push
fs
inc
pushf
insl
push
std
pop
adc
decl
inc
xor
int3
push
lahf
inc
leave
dec
push
lret
pop
fsubrs
and
repnz
out
push
jmp
push
mov
dec
stos
sahf
sbb
add
mov
inc
mov
seto
out
xchg
sub
cmp
sub
test
sti
xchg
mov
sbbb
mov
adc
push
frstor
cld
inc
into
adc
out
lahf
dec
and
dec
notl
mov
pop
push
mov
aas
insb
adc
cmp
dec
xchg
mov
pop
jbe
cli
aas
adc
out
loop
mov
fcomip
decl
pop
sarb
add
nop
cmp
mov
nop
mov
mov
fcomip
call
in
xchg
or
pop
jno
mov
push
sub
pop
fbstp
fsubl
ret
in
push
lret
adc
mov
jmp
lret
adc
cmc
rclb
enter
mov
push
add
mov
jae
decl
xlat
or
adc
cwtl
mov
testb
jge
dec
mov
insl
sbb
sbb
std
jnp
in
pop
aas
popf
out
and
and
nop
cmp
call
inc
lcall
cs
clc
cmp
sub
bound
faddl
push
pushf
repnz
jmp
or
inc
inc
jnp
faddp
call
sbb
push
xchg
rcrl
rorl
add
frstor
incl
hlt
sub
dec
pop
mov
mov
mov
mov
jg
movsb
loop
or
fcomip
shlb
xchg
and
out
test
fstl
nop
incl
jg
mov
xchg
jns
push
cltd
pop
sti
outsl
pop
andb
enter
decl
lods
lret
dec
jmp
movsl
popa
and
and
push
cmp
outsb
xor
dec
add
icebp
jno
mov
test
or
call
mov
les
lret
xchg
push
fildl
ljmp
jo
or
xchg
push
and
dec
mov
cmp
addb
loop
mov
add
imul
xchg
pop
xor
xlat
mov
sub
add
dec
aaa
dec
cmc
cmp
call
mov
pop
shrl
xchg
xchg
repz
js
decl
outsl
call
push
push
mov
xor
push
mov
fsubrs
xchg
mov
scas
cli
jns
call
cmc
xor
pop
insl
fwait
adc
insb
pop
pop
sub
mov
test
push
xchg
add
jmp
mov
bound
add
inc
pop
and
call
cli
loope
xor
in
addr16
mov
adc
cld
js
imulb
inc
shl
hlt
in
pusha
cmp
pop
movl
dec
push
jmp
lds
lcall
lock
mov
and
aaa
imul
popa
xor
push
pop
mov
pushf
add
loop
hlt
popf
mov
pop
imul
mov
jo
pop
jecxz
fldt
push
push
cmp
incl
mov
inc
fs
mov
add
xchg
add
pop
push
jne
js
call
or
shll
aad
outsl
int
mov
nop
outsl
fidivs
add
nop
ljmp
sbbb
sbb
sub
pop
je
pop
insb
fsts
cld
sub
lahf
mov
pushl
pushl
xchg
pop
jne
notl
cmp
pop
loope
pop
lret
ret
mov
jmp
mov
lcall
xor
jns
dec
mov
and
jmp
pop
dec
adc
rcrb
mov
dec
scas
es
or
into
jnp
out
in
dec
iret
loope
sbb
push
mov
sbb
adc
cs
fnstsw
mov
lcall
push
divl
mov
ja
pop
xchg
iret
sub
xor
int
jne
pop
ret
out
cmovns
mov
mov
push
push
rolb
or
jnp
ficomps
incl
dec
cmp
test
dec
jb
ret
or
jmp
lea
outsl
sub
das
test
or
jle
cmp
enter
ljmp
sub
clc
jno
jmp
out
fnsave
inc
adc
mov
adc
out
lcall
or
jbe
or
or
inc
lds
stos
flds
pusha
mov
sbb
or
mov
outsb
loop
cmpsb
push
in
insb
stos
jmp
jb
pop
cmp
je
ja
pop
test
xlat
decl
jbe
adc
loopne
das
cmpsl
inc
xorb
push
xchg
add
aaa
ret
jmp
push
push
xor
test
lahf
add
notb
xor
mov
mov
idiv
iret
mov
jg
incl
aam
pushf
push
out
sbb
push
add
mov
add
mov
pop
mov
sti
xchg
je
sbb
out
pop
xor
mov
fldcw
sbb
cs
or
inc
sub
sar
dec
sub
dec
dec
mov
cmc
lock
xchg
sub
jge
aam
add
mov
xchg
inc
lock
add
fdivl
sbb
pop
popf
jmp
cmp
lret
sub
xor
pop
pop
add
adc
jno
cmp
cli
sbb
daa
incl
ret
fists
and
pop
xchg
jmp
ljmp
outsb
mov
insl
lcall
fsubl
stc
sub
into
stos
addr16
jbe
div
btc
jp
cmc
loop
jne
cmp
call
orl
sbb
loope
xor
add
jbe
mov
aaa
pop
lock
mov
pushl
mov
pop
push
dec
cmp
scas
inc
pop
popa
mov
sub
cmp
jb
loop
popf
stos
ja
in
jae
call
mov
leave
movsl
mov
or
fisttpl
add
fwait
or
aam
shlb
mov
add
add
cmpl
xchg
ret
pop
or
incl
push
pop
xchg
push
stc
add
xchg
je
jno
subb
jmp
jge
jmp
imul
jbe
loop
fildll
outsb
fdivrs
adc
mov
cmp
mov
adc
decl
sbb
jo
jp
scas
pop
push
test
jl
pop
mov
and
or
ljmp
out
mov
jmp
mov
jg
into
adc
or
mov
inc
lret
pop
push
cs
sub
testl
in
stc
cmp
lods
xlat
lea
mov
incl
jmp
add
cwtl
es
in
cmpsl
in
xor
mov
lcall
pextrw
dec
jae
clc
pusha
dec
pusha
out
cmp
ficomps
sub
mov
or
xchg
jmp
pushf
jp
xor
pusha
dec
stos
push
sub
mov
stos
rorl
push
aas
inc
and
ficompl
test
jns
mov
push
bound
call
ret
pop
hlt
sbb
push
inc
out
je
cli
pushl
scas
pop
imul
inc
adc
adc
loop
mov
cmp
mov
mov
sbb
and
stos
xor
popa
movsb
pop
adc
inc
or
add
or
adc
lea
dec
mov
jmp
jmp
fisttps
mov
out
adc
push
subb
add
cmc
pushl
push
jge
or
sahf
out
or
add
cmpl
inc
out
push
movsb
pusha
mov
pushl
xchg
dec
shll
jae
js
mov
fisttps
sbb
mov
incl
mov
dec
inc
rcrb
fistpll
fs
hlt
lcall
cmp
and
pop
mov
stos
pop
mov
mov
jecxz
push
out
inc
loopne
call
icebp
jg
or
and
xchg
ja
xchg
xor
xchg
lcall
int3
xchg
push
out
rcl
sbb
int3
or
int3
push
data16
pop
cmc
mov
lock
cmp
pop
in
int
leave
push
cwtl
je
lcall
test
or
push
stc
xchg
pushl
jp
std
clc
jecxz
outsb
icebp
adc
sbbl
int
jmp
test
mov
data16
shrl
arpl
inc
lahf
dec
push
inc
mov
jp
push
xchg
leave
stos
in
incl
fidivrl
int
sarl
xor
es
movsb
mov
jne
push
jns
mov
mov
jmp
mov
push
cwtl
pushf
jl
push
es
ret
sub
jne
addb
xor
jle
imul
jbe
std
rcr
aaa
pop
daa
arpl
xchg
cli
jl
fldcw
mov
lcall
lcall
inc
lock
inc
daa
mov
push
bound
ficoml
idiv
incl
mov
cmp
hlt
sbb
push
movsb
cmp
test
incl
inc
incl
dec
shrb
lcall
cli
adc
add
addl
shrb
xor
leave
dec
xor
pushf
sub
nop
pop
imul
jmp
jae
xor
lods
push
xchg
fadds
outsl
push
stos
add
or
dec
adc
jo
mov
loopne
pop
cmp
lea
jnp
push
jg
xchg
or
or
xlat
clc
push
out
outsb
adc
fdivrs
and
incl
in
jecxz
or
pop
pushf
test
aam
pop
int3
icebp
ret
sub
lcall
jbe
xor
ret
and
sbb
jns
lret
aam
int
lock
lock
jp
cmc
push
push
cmp
cmp
fs
adc
inc
xorl
test
jge
cmp
sbb
stos
push
and
arpl
sbb
ljmp
es
jae
lret
cmp
rcrl
fisttpll
das
adc
push
cltd
ret
xor
mov
pop
test
pop
mov
into
adc
scas
fs
insb
pusha
scas
cs
rcr
test
aad
ljmp
mov
sub
mov
in
in
in
jl
xor
jg
nop
out
xchg
std
sub
mov
test
dec
jge
imul
aaa
enter
stos
push
push
cmp
std
mov
incl
dec
pop
dec
stos
icebp
and
sbb
gs
notl
sub
insl
push
test
iret
in
out
mov
pop
incl
jecxz
xchg
cmc
mov
push
mov
aas
xor
es
push
sar
and
sbb
call
ljmp
mov
ret
or
popa
sbb
lcall
and
pop
and
mov
xor
adc
leave
sahf
cld
std
mov
lcall
cmp
sarl
mov
outsl
ljmp
popa
dec
out
aad
sbb
call
push
and
jbe
jle
lods
or
rolb
aam
iret
test
mov
gs
xchg
enter
sub
adc
mov
xor
fdiv
pop
pop
notl
pop
das
ret
sarb
sar
pop
xchg
inc
test
mov
decl
pop
pop
popf
lcall
add
outsl
pop
sbb
decl
adc
lea
ljmp
jno
iret
jb
fistpl
jle
imul
out
or
pop
aas
inc
sbb
mov
xchg
clc
aas
jae
mov
pop
cmp
sbb
in
outsb
mov
sahf
push
jmp
sub
fnstcw
jg
call
cmp
es
and
xchg
mov
lods
mov
mov
cmpsl
mov
stos
xor
pop
push
stc
mov
out
mov
fiadds
add
pushl
jge
outsl
lret
mov
leave
lret
pop
fisttps
or
jle
arpl
gs
jbe
test
pop
cwtl
fwait
incl
pop
jns
inc
pushf
or
adc
jae
pop
call
mov
inc
xchg
ss
mov
in
out
jp
inc
pop
push
jno
pop
fstpt
push
push
or
int
xchg
imul
rcll
inc
push
cmpsl
insl
fcomip
jp
hlt
test
or
sub
call
fs
mov
test
js
cmpsb
xchg
xor
les
insl
ficomps
pushl
cmc
push
jmp
jle
push
aas
fldcw
das
pop
dec
pop
bound
xlat
std
cmp
mov
mov
movsb
fwait
mov
pop
mov
int
adc
out
decl
sbb
xchg
xchg
xor
cwtl
mov
aam
jns
les
push
bound
inc
call
int3
jno
out
loopne
cmc
outsb
pop
data16
out
aad
nop
std
jnp
rorl
adc
fistl
mov
test
lcall
movsb
or
nop
cli
les
movsb
stos
aaa
lds
sbb
inc
jecxz
je
data16
adc
jg
inc
loopne
hlt
rorb
nop
push
inc
clc
cmp
mov
lock
push
mov
sbb
decl
and
and
pop
ret
leave
mov
mov
popa
out
sub
adc
jg
fdivs
cmovne
scas
pop
adc
data16
ficomps
lahf
pop
inc
sbb
cmp
inc
and
in
mov
shll
sbb
test
aaa
pop
packuswb
stc
lcall
mov
lret
adc
sub
push
sbb
les
outsl
xor
test
push
popa
dec
mov
sbb
mov
popl
adc
in
outsb
pushf
sub
jp
lcall
add
lcall
mov
dec
int3
mov
stos
jb
push
scas
clc
lahf
add
mov
cli
mov
pop
sahf
jg
inc
shll
in
or
sahf
adc
sti
in
sub
dec
cmpsb
popf
shll
mov
add
inc
cs
jnp
jp
lret
loope
jp
es
test
inc
aad
ljmp
cli
int3
insl
pop
cltd
sub
mov
jge,pn
mov
lret
xor
andb
lcall
xchg
jg
xchg
mov
adc
mov
adc
cmpsl
clc
or
xchg
lcall
push
mov
jbe
push
hlt
jb
iret
sbb
mov
adcl
push
dec
xor
add
dec
mov
push
popf
es
sbb
cmovbe
rcl
mov
xor
clc
fidivl
pop
dec
xor
mov
mov
jg
cwtl
cmp
stos
and
mov
xchg
stc
out
xchg
push
sub
xchg
xchg
and
xor
and
pop
outsl
inc
jge
lods
js
mov
mov
sub
push
in
test
xchg
xchg
mov
jmp
mov
call
push
movsb
stc
xchg
adc
and
lea
dec
fidivrl
cmpsl
mov
insb
inc
movsb
nop
mov
pop
imul
xor
and
fucomip
clc
pushl
fimuls
stos
xchg
loope
outsl
incb
cld
mov
dec
jg
add
push
in
dec
push
mov
cwtl
sahf
xchg
cmp
dec
xor
xchg
je
pop
xchg
jbe
sar
dec
sub
ret
inc
inc
mov
imul
add
rolb
sbb
jb,pt
mov
lds
inc
sbb
sbbl
jmp
mov
cmp
test
shlb
mov
dec
dec
sub
decl
dec
in
add
rep
daa
mov
sub
inc
stos
stos
bound
cmpsl
mov
pushl
mov
aad
push
test
bound
les
insb
sbb
sub
cld
jmp
pop
dec
mov
test
pushf
hlt
cltd
and
and
dec
xor
into
adc
xchg
push
scas
jnp
enter
cmpsb
fcomp
test
mov
add
mov
call
cmpsl
fmuls
jle
cmc
adcl
leave
and
or
pop
lds
dec
lret
adc
mov
ret
popa
cwtl
mov
mov
push
inc
mov
ljmp
or
pop
cmpsl
cmp
stc
icebp
aad
add
gs
divb
mov
and
mov
mov
or
ljmp
lea
fs
mov
push
jecxz
sub
imul
mov
pushf
cmc
mov
cmp
xor
xchg
int3
fisubrl
mov
subl
lcall
sbb
inc
scas
lahf
sbbb
rcl
cld
cmp
hlt
scas
lods
insl
cmp
xor
lcall
jnp
shlb
shrb
dec
insb
cmp
mov
pop
fnstsw
pushl
jb
cld
rcl
scas
cmp
jnp
psraw
cld
imul
imul
in
cmp
fisttpll
push
pop
sbb
add
pop
lahf
daa
adc
inc
ljmp
lds
adc
int3
mov
sbb
push
jp
inc
ds
decl
xor
add
dec
cs
jne
xor
test
insb
fmull
jae
stos
cmc
jmp
cmpsl
push
pop
roll
out
mov
lret
add
test
testl
cld
sbb
sbb
aam
mov
cmp
sbb
jecxz
in
mov
jno
arpl
push
inc
dec
mov
das
or
push
loopne
mov
push
dec
inc
rcrb
mov
mov
mov
sub
call
xchg
stc
mov
mov
cs
in
xchg
jg
mov
fdivrl
cld
mov
out
sbb
incl
xchg
out
enter
dec
mov
popa
pop
push
push
test
pushl
aas
ljmp
pop
mov
mov
ds
lock
divb
or
xchg
xchg
pop
push
in
inc
sbb
sub
mov
dec
stc
dec
ret
ljmp
inc
leave
sbb
xor
in
cmp
mov
xor
sbb
adc
rcll
data16
push
test
or
lcall
mov
add
adc
mov
add
aad
pushl
jne
ds
mov
add
lcall
jge
ljmp
movsb
push
fdivp
movsb
pop
pop
mov
fs
fadd
mov
and
adc
and
inc
or
testb
repnz
incl
dec
dec
sbb
cli
and
loop
and
cmp
mov
sar
mov
jno
ljmp
xchg
ret
inc
xchg
or
add
adc
adcb
mov
in
mov
lcall
bound
mov
out
test
push
or
aam
ficoml
push
int
adc
incl
dec
xchg
xchg
scas
cmp
push
in
push
ss
scas
sub
mov
jp
and
addl
scas
xchg
adc
push
add
imul
fwait
cwtl
test
dec
push
lock
movsl
sbb
lea
aad
sbb
lcall
pop
pusha
xchg
xor
icebp
adc
std
ljmp
pushl
lret
popa
inc
sbb
js
add
jb
jo
loope
stc
leave
incl
mov
cld
int3
loope
dec
pop
adc
addl
pop
mov
call
icebp
jae
or
mov
data16
rorl
cmc
lock
inc
in
pushl
add
mov
out
adc
jg
adc
out
xchg
sub
xor
jbe
dec
sub
push
incl
sub
ss
ud0
incl
push
cmp
pushf
xor
xor
xchg
push
mov
jmp
jecxz
incl
movsl
insl
fwait
and
imul
cmp
xchg
sahf
add
pop
xchg
mov
mov
mov
fcomip
mov
jg
or
divl
pop
fisubl
aaa
mov
dec
ljmp
xchg
push
xor
mov
loop
rclb
into
stos
mov
pushl
rolb
jle
sub
adc
push
jne
xchg
mov
xchg
test
mov
mov
sbbb
loopne
xor
or
xchg
aaa
std
call
mov
sub
xor
aaa
cmpsb
aam
shl
push
xchg
adc
dec
inc
mov
or
ja
sub
sbb
out
cltd
andb
movsb
push
mov
xor
idivb
jle
call
dec
sbb
adc
mov
lods
inc
jb
es
mov
repz
pop
test
sub
mov
inc
pop
jg
pusha
dec
push
lahf
shrb
fmul
orb
ljmp
dec
jo
repnz
mov
in
arpl
mov
mov
sub
je
lcall
mov
cmp
push
xlat
dec
stos
or
ljmp
sarb
mov
repnz
scas
out
jmp
push
ret
push
sub
lret
jmp
xchg
xchg
lods
adc
int
mov
into
jle
pop
call
lcall
loope
dec
lea
sub
cmpsb
mov
call
lahf
mov
decl
push
fidivl
mov
cli
mov
aas
jbe
mov
mov
aaa
enter
movb
add
scas
stos
loope
lock
cmp
ljmp
xchg
icebp
push
add
outsl
mov
mov
in
in
or
pop
and
std
andb
insl
imulb
cwtl
into
ljmp
popa
cld
push
divl
in
stos
icebp
repz
ds
mov
push
jmp
pop
in
mov
adc
cmp
arpl
push
clc
icebp
addr16
in
test
add
fcos
pushl
jmp
lcall
mov
sub
stos
lods
jl
imul
pop
jnp
repz
cltd
neg
adc
cmpsl
add
mov
sbb
xchg
hlt
mov
sub
add
xor
call
loopne
mov
jle
cmpsl
data16
inc
stos
cld
mov
je
xor
out
outsl
daa
decl
cmc
jae
fsubrs
ds
loop
push
xchg
loop
xor
aam
jle
xchg
add
xchg
fistps
jg
sbb
enter
and
xor
mov
adc
aam
cmp
mov
rorb
lcall
add
sbb
sbb
lods
pop
rcrl
aas
in
push
dec
inc
and
jmp
push
loop
lds
jl
ret
aaa
and
jbe
pop
adcb
mov
cmpsb
xchg
stc
ljmp
xor
or
push
lods
add
outsb
in
xlat
pushf
lcall
dec
xor
shll
sbb
jp
push
jo
xor
push
insb
faddl
jg
pushl
in
xor
das
mov
out
out
jbe
cmp
cmp
pop
inc
lcall
std
cmp
je
lret
dec
gs
xchg
les
jbe
test
fs
int
xorb
or
push
jmp
in
fstpl
gs
cld
xor
jle
push
stos
outsb
mov
pop
lock
mov
sbb
ljmp
push
dec
cmc
stos
mov
cmpsl
push
dec
clc
mov
lcall
bound
lock
div
cli
mov
sahf
xchg
xor
std
pushl
add
into
in
and
pop
aam
shlb
in
ljmp
lcall
rcrb
popf
or
popa
test
test
mov
call
dec
or
stc
rol
enter
test
popa
xchg
rorb
cltd
repz
push
arpl
call
movsb
adc
sbb
cmp
mov
cmp
add
push
stos
icebp
pop
out
call
dec
test
pop
push
push
jnp
jecxz
push
push
ds
mov
daa
and
fildl
or
inc
jno
insb
cld
ljmp
ja
lock
xchg
and
ss
add
fsubs
mov
xor
fnstenv
or
cwtl
and
movsb
inc
push
mov
data16
cmpsb
lods
ljmp
movsl
add
loop
cmp
and
cld
lcall
sti
xor
rcr
pusha
xchg
or
sub
pop
and
test
pop
sar
decl
cwtl
lret
xchg
jle
pushw
adc
rcrb
mov
addr16
das
je
mov
loop,pt
jo
mov
outsb
push
sbb
outsb
movsb
push
cltd
xor
icebp
gs
sub
fisubrs
inc
dec
push
pop
in
adc
jp
lods
ds
sbb
clc
data16
xor
sahf
repz
dec
mov
adc
sub
test
or
out
or
cwtl
call
cmp
gs
stos
jo
aad
and
add
pusha
andl
inc
xor
fcomip
call
cltd
loop
sub
push
mov
and
or
fisubrs
add
xchg
lret
mov
call
cmp
in
ljmp
mov
rorl
ret
iret
push
cmp
in
push
rcr
jnp
js
call
out
stos
daa
xchg
adc
cli
test
test
jno
imul
jg
leave
mov
lcall
xor
aaa
in
cltd
ror
push
sarl
loop
mov
rorb
pop
cmp
mov
idiv
dec
sbb
inc
std
jb
lock
cmp
adc
mov
mov
cs
add
jge
incl
sbb
in
adc
sub
or
icebp
xor
dec
jle
mov
dec
cmp
push
mov
mov
pop
or
dec
es
lods
and
pushl
pop
xchg
subb
jp
stos
in
add
inc
ja
iret
jmp
adc
rcrl
sar
pushl
jns
popa
mov
jg
sbbb
sarb
sub
into
sahf
jne
xor
dec
lcall
jns
out
pop
push
cmc
push
dec
iret
jne
mov
xchg
xor
ss
ret
jg
xchg
adc
inc
mov
cmpsl
movsl
cmp
inc
rcrb
mov
mov
insb
cmp
imul
decl
jecxz
cmp
sub
aaa
subb
adc
xor
add
cli
cmpsb
outsb
sub
call
push
cmp
mov
movlps
insl
je
jg
pushl
mov
push
rorb
push
mov
decl
outsl
scas
mov
shlb
mov
and
ljmp
je
push
and
xor
mov
lock
add
push
in
add
addr16
xor
sar
movsl
inc
push
cmp
fsub
cli
xchg
or
imul
and
pop
xchg
cmp
nop
movsb
push
pop
mov
rorb
mov
call
mov
push
xor
xchg
mov
sbb
clc
out
insl
sub
lods
xchg
jno
mov
in
std
call
pop
mov
daa
cli
push
mov
lds
shr
mov
pusha
inc
jmp
xlat
cmp
push
xchg
inc
filds
cmp
push
testl
sub
xchg
addr16
lcall
scas
rclb
sub
jle
push
nop
fsub
dec
lock
mov
jb
mov
js
jecxz
daa
pop
jmp
mov
mov
in
mov
fcoms
lcall
ja
inc
enter
mov
adc
test
repz
and
push
aad
fxch
or
jg
lret
jl
mul
pop
mov
adc
pop
mulb
movsb
pushf
hlt
daa
or
pushl
orl
mov
mov
popl
insl
repz
cld
fildl
mov
dec
rcrb
stc
cli
or
aad
jecxz
test
rcrl
mov
and
incl
mov
sub
jnp
jl
and
push
or
mov
test
push
fwait
jo
sub
loopne
xlat
popf
and
gs
ds
dec
push
scas
sub
xchg
mov
jnp
inc
xchg
pushl
pop
dec
mov
cli
push
lahf
sbb
sbb
jle
mov
push
in
repz
xchg
inc
xlat
aam
lea
aaa
mov
cmp
sti
add
cmp
pop
fwait
xchg
dec
xor
test
nop
sbb
aas
out
je
mov
sbb
fsubrl
jmp
add
jle
cmp
cs
test
cmp
inc
push
fsubrs
lock
or
jmp
inc
outsl
sbb
and
inc
popf
out
jl
mov
decl
shrb
mov
incb
repz
push
jbe
xchg
dec
loopne
sub
incl
daa
inc
push
lahf
les
sti
xchg
sub
or
inc
sub
callw
cld
shlb
lcall
cli
cmp
int3
mov
sbb
jmp
ds
sub
ljmp
fsubp
test
rcrb
lods
sbb
fisttpl
mov
imul
inc
stos
repnz
add
rol
fstpt
mov
ljmp
rorl
repz
fwait
xor
xchg
lahf
dec
pusha
into
dec
test
std
mov
sbb
or
incl
adc
sub
dec
fnsave
mov
inc
inc
pop
fists
mov
fcoms
push
and
adc
pop
fwait
std
popf
and
decl
push
cmpb
pop
ss
iret
push
lods
xor
and
push
popf
rol
lea
lods
rclb
sahf
push
pushf
test
addb
adc
pop
dec
andl
ljmp
jmp
cmp
lods
fldenv
mov
stc
or
fnstsw
dec
mov
mov
incl
cmp
clc
mov
into
bound
or
mov
pusha
cmp
inc
cmp
fcomip
lcall
iret
es
call
jecxz
ljmp
pushl
pop
pop
clc
inc
aaa
sub
push
adc
jle
psubq
cld
cmp
inc
mov
addr16
mov
push
lods
gs
lret
sub
jo
sub
repnz
sbb
jg
decl
xor
pop
insl
adc
mov
jbe
add
adcl
pushl
xchg
xchg
shrl
je
scas
add
xor
aas
add
xorl
mov
lcall
bound
call
cmp
dec
imul
out
ss
jg
sbb
into
mov
shll
dec
inc
sbb
test
or
rsqrtps
mov
les
aaa
loopne
aaa
ret
call
xor
iret
std
std
cmp
push
mov
xchg
mov
jp
xor
inc
in
test
neg
xor
outsb
addr16
add
xor
das
add
xor
nop
pushf
sbb
pushl
and
lret
data16
or
mov
cmpsb
jns
pop
out
and
jle
ljmp
inc
arpl
shrb
xchg
cmp
fwait
les
xor
add
xchg
fnstsw
lret
sub
shrb
sti
test
gs
js
ljmp
or
lods
orb
xchg
xor
add
pop
pop
cmpsl
es
pusha
lea
loopne
movsl
xchg
xor
sar
push
cmp
call
fsubrs
dec
out
repz
add
xor
fnstenv
push
stos
add
call
lods
xchg
pop
push
xorb
mov
int
dec
or
inc
jns
sub
push
arpl
into
cs
fs
stc
js
jnp
adc
pushf
adc
push
sbb
dec
das
add
int
cwtl
loop
mov
jmp
pop
mov
jg
lcall
push
popa
or
call
xor
das
add
jp
pushl
ror
mov
cmp
and
loope
ret
icebp
or
cmpsl
add
hlt
pop
and
mov
decl
push
imul
int
mov
pop
jmp
icebp
lods
insl
inc
repz
call
pushl
dec
mov
std
or
mov
dec
call
xchg
pop
test
xor
push
dec
hlt
cli
sbb
ljmp
cmp
and
fcomps
lret
mov
sar
lret
out
frstor
fs
ja
xor
xor
adc
das
mov
rolb
xor
sbb
jno
adc
shld
stc
or
lret
jecxz
lcall
into
mov
xchg
je
xchg
sahf
xchg
xchg
outsb
xchg
push
push
fisttpl
lds
sub
mov
ds
mov
pop
ret
mov
lcall
mov
push
jno
pushl
cli
pop
movsb
cmp
scas
cmp
ljmp
sbb
jne
lods
add
jg
dec
nop
pop
inc
cmpsb
jmp
cli
pop
inc
nop
mov
mov
cmc
xlat
test
mov
pop
ljmp
pop
lret
shlb
lret
sbb
fwait
jb
testb
test
outsb
in
leave
jb
mov
cld
sbb
fidivrl
jg
fistps
cmp
or
lods
xchg
mov
ror
mov
jbe
jmp
sbb
cmp
xlat
and
xor
mov
pop
lds
cs
lock
test
jns
xorb
pop
mov
add
aaa
cli
sub
movsb
xor
mov
incl
ds
popf
ret
lds
leave
xchg
movsl
push
into
and
testb
pop
fmul
dec
mov
bnd
dec
push
test
push
pop
fwait
pop
push
xchg
xchg
sarb
popf
mov
call
arpl
mov
dec
sti
jo
or
rolb
jbe
mov
iret
sbb
push
or
decl
pop
test
arpl
mov
fisttpll
pop
mov
je
xchg
ljmp
in
lahf
nop
mov
or
ss
pop
pop
imul
dec
js
inc
call
std
decl
add
popa
test
mov
pop
aad
out
cmp
push
js
movb
dec
ret
cmp
fst
dec
pop
scas
mov
and
xor
mov
mov
jle
incl
test
cmp
xchg
xchg
inc
stc
nop
pop
and
pop
jmp
jnp
jge
lods
jp
pop
scas
imul
or
mov
clc
cs
loope
out
push
xchg
mov
dec
adc
lret
jne
scas
push
inc
loope
in
ret
insb
fwait
sarb
mov
sbb
cmp
or
cmp
push
mov
push
mov
jns
popa
pop
mov
push
out
js
dec
cmp
mov
ljmp
movsb
imul
sbb
lods
xlat
push
dec
fcompl
xchg
daa
lcall
fcoms
push
jl
lds
add
test
in
mov
and
pop
pop
xchg
stc
push
cmp
inc
inc
jmp
outsb
mov
test
cli
cmpsl
mov
cmp
and
cmp
loopne
popf
fadds
add
xor
xor
outsl
bound
mov
xchg
lahf
scas
sub
fisubrl
movzbl
cli
cs
inc
xchg
rorl
add
in
das
rorb
add
or
mov
repnz
addr16
mov
sti
adc
xchg
or
hlt
xchg
cwtl
pushf
jbe
pop
dec
pop
mov
out
push
mov
call
mov
sub
stos
add
xor
jb
fildl
or
mov
psubusb
test
xchg
cs
cmp
jg
test
xchg
in
mov
aad
or
sbb
int
sbb
dec
gs
jae
scas
outsb
push
xor
xor
movsl
out
jg
fwait
sub
cmpsl
stos
nop
push
lcall
sub
mov
add
movsl
test
sbb
loop
out
sub
cmp
dec
cmp
jmp
jl
in
movsl
inc
mov
loopne
lret
in
or
adc
cmp
stos
loope
sbb
shll
cltd
clc
jl
lret
adc
enter
and
ljmp
pop
mov
mov
jbe
test
xor
dec
xchg
shll
test
icebp
adc
push
std
lahf
insb
icebp
out
data16
xchg
lret
clts
dec
pop
jecxz
fldlg2
pop
fs
rclb
lcall
jnp
jae
lcall
or
or
std
inc
in
movsl
add
stos
cmpsl
lcall
fnstcw
push
call
jl
and
push
loop
in
std
mov
dec
adc
jg
jl
out
inc
imul
dec
jno
sbb
adc
testl
xor
flds
jno
xchg
jmp
fwait
mov
mov
dec
sub
inc
pop
loope
jge
cwtl
and
pop
add
in
loopne
jmp
push
sahf
jp,pn
ja
in
out
lahf
popf
sub
mov
lret
in
push
sbb
cmpsb
mov
decl
sub
clc
fs
xchg
dec
lds
outsl
cmp
mov
call
inc
push
adc
mov
mov
mov
jmp
popa
lret
imul
and
lods
jne
jp
pop
sbb
data16
push
pushf
pop
fstps
std
jmp
roll
mov
mov
ret
lcall
xor
mov
bound
and
loopne
pop
inc
bound
mov
dec
rclb
inc
mov
pushf
xor
hlt
jg
push
jle
fcoml
loop
add
mov
popf
sbb
mov
mov
lret
notl
call
inc
xor
jae
dec
or
fmul
insb
ret
and
adc
jne
hlt
fs
idiv
call
xchg
jge
mov
mov
nop
adc
insb
sbb
ds
jo
out
inc
push
lods
clc
dec
mov
and
cmp
dec
inc
jae
sub
int
sub
xchg
lods
jne
xor
repnz
inc
popl
andl
pop
pop
xchg
xor
mov
dec
mull
mov
int3
ret
jle
cli
xlat
xor
mov
cmp
or
movsb
dec
xor
xchg
pushl
mov
movsl
xchg
jle
mov
jecxz
fisttpll
xor
jmp
call
inc
fcomps
stc
mov
ret
cmpb
scas
cmp
fwait
enter
decl
or
outsb
pushf
xchg
outsb
shrb
std
mov
xor
lock
xor
push
stos
fdivp
dec
and
pop
movsb
and
filds
shrl
adc
ljmp
aas
pop
dec
iret
jmp
rcll
std
nop
mov
imul
mov
adc
jge
into
xchg
call
xor
mov
dec
imul
xchg
test
sub
or
or
cwtl
push
or
stc
daa
and
incl
cmp
inc
fnstenv
enter
lods
out
pop
push
fisttpll
jns
movsl
jbe
incl
les
xchg
arpl
dec
sub
scas
fcoms
mov
xchg
inc
cmp
mov
popf
cmpb
sahf
aaa
mov
xor
nop
push
adc
push
stos
push
adc
xchg
jecxz
out
sbb
sub
ret
mov
push
cwtl
shl
mov
pop
push
aaa
out
or
jg
icebp
cmc
data16
stos
xor
movsl
lret
inc
push
dec
ljmp
les
add
ljmp
outsl
and
lea
cmp
push
pop
mov
mov
repnz
sbb
daa
pop
arpl
cmpb
not
fwait
cld
sar
jg
jne
imul
and
es
in
lods
cli
add
gs
push
scas
push
jg
sub
in
cmpl
mov
faddl
ficompl
and
idiv
jmp
fnstsw
jle
mov
addr16
or
imulb
insb
cmpsb
add
call
insl
sub
xchg
dec
mov
cmp
insb
mov
and
repnz
into
or
ljmp
and
subl
and
insl
test
outsb
dec
seto
cmp
push
decl
sub
xchg
cmp
push
jle
sbb
ljmp
xlat
pop
sbb
mov
rcrb
lretw
mov
adcl
inc
mov
sti
loope
xchg
das
pop
lods
nop
or
cld
jl
sub
clc
cltd
adc
test
xor
lcall
stos
pushf
xorl
jge
mov
ja
jnp
out
ss
notl
adc
aas
xchg
lret
dec
in
sub
pop
fcom
call
divl
popf
es
pop
rol
adc
testl
stos
fdiv
jmp
into
popf
pop
stc
pusha
in
shl
cmp
mov
es
and
ljmp
xor
test
js
test
int3
imul
insb
cmp
ljmp
cli
push
mov
je
mov
jne
cs
mov
pop
ret
xchg
iret
mov
sarb
push
mov
adc
js
les
loopne
pop
jle
and
ficomps
mov
inc
pop
sub
cmp
sbb
sub
fnstsw
dec
add
sbb
daa
lds
jge
call
adc
test
push
aad
mov
js
jmp
fisttps
lods
push
xchg
mov
lcall
fidivl
js
xchg
lods
adcb
movl
stc
jmp
mov
decl
jmp
mov
xor
cmp
xor
hlt
clc
lahf
push
pop
xchg
cmc
ljmp
int
jecxz
out
stos
insl
mov
xchg
int
and
mov
loop
imul
repz
in
and
sbb
push
jmp
or
scas
adc
loopne
mov
sub
in
fsubs
aam
or
sub
out
jno
lcall
mov
gs
jmp
ss
jbe
jl
adc
incl
rorb
xchg
lahf
dec
jns
call
adc
pop
mov
dec
pop
sub
popa
push
ljmp
mov
sub
into
xchg
ret
dec
ja
sahf
lret
arpl
les
cld
decl
call
aas
adc
pop
xchg
mov
fdivs
psrlw
aas
cmp
sub
ret
lea
cmp
sbb
into
and
xchg
xor
loope
call
jl
xor
inc
les
ds
lea
mov
fwait
sub
mov
std
pop
ret
scas
dec
std
pop
jbe
neg
fdivl
adc
inc
pop
mov
in
inc
ss
mov
push
push
mov
cmpsb
or
cmp
aam
adc
xlat
mov
pushl
arpl
xor
lret
fwait
cmp
xchg
mov
jmp
mov
decl
jp
jl
mov
nop
mov
mov
repnz
sbb
cmpsb
inc
cwtl
decl
inc
addr16
jg
or
xor
mov
test
mov
adc
andb
pop
cltd
idiv
jmp
popa
ficompl
repz
imul
add
aad
and
sub
fcoms
cmp
lcall
jb
cs
add
adcl
jmp
xchg
loopne
jae
dec
cmp
lock
iret
mov
cld
stos
mov
xchg
loope
sbb
daa
inc
fs
push
aaa
and
inc
mov
in
mov
call
fistpl
repnz
repz
jecxz
sub
inc
inc
or
xor
jns
pop
or
jnp
or
jns
sub
call
scas
mov
incl
and
nop
dec
cmp
negb
and
test
pop
sti
adc
call
into
sarl
fadd
sub
adc
mov
fcoms
std
and
lods
mov
loope
mov
push
sub
mov
hlt
cmpsl
pop
iret
mov
test
push
cmp
fisubrl
ljmp
pop
addr16
sub
insl
xor
popf
adc
sahf
insb
mov
lods
and
mov
ljmp
xchg
dec
hlt
loop
leave
int
adc
push
out
in
pop
mov
push
repnz
fildll
cmc
ret
xor
cmpsb
mov
mov
psllw
push
push
test
mov
repnz
movsl
inc
popa
cwtl
cmp
dec
hlt
jns
call
fcom
xor
lods
ljmp
sti
jl
pop
sub
dec
lcallw
aaa
es
xlat
test
ja
lcall
lods
lret
sbb
pop
lea
aad
mov
or
test
sub
mov
mov
xchg
pop
loope
call
mov
lods
jmp
ljmp
loopne
add
in
mov
andb
fildl
mov
sbb
ds
shrl
loopne
fcomip
inc
push
mov
mov
fldcw
pop
loopne
push
int3
movsb
sahf
in
adc
inc
movsl
dec
sarl
pushf
sbb
pop
mov
add
add
pusha
cmp
xchg
pop
out
icebp
jmp
in
jo
xor
cli
shl
movsl
pop
cwtl
mov
js
sub
inc
rol
pushl
sub
add
outsl
imul
lahf
lock
fistpl
inc
mov
scas
pop
test
call
jle
push
jmp
xchg
cwtl
lods
and
lds
fs
push
xchg
sub
pushf
jecxz
aad
std
mov
in
aam
pop
nop
enter
out
mov
fimuls
scas
cmp
cwtl
jmp
mov
pop
push
cmp
pop
stc
leave
and
sahf
xchg
repz
jg
outsl
cli
mov
pop
scas
sub
or
imul
scas
or
pushl
fsub
and
cwtl
loop
dec
or
clc
dec
cmp
int
or
and
call
inc
and
pushl
mov
xor
jne
test
lock
mov
mov
dec
and
sub
pop
sub
or
dec
shrb
fcmovbe
pop
jl
decl
xchg
int
in
push
dec
jg
dec
dec
inc
cmp
push
mov
cmp
push
mov
push
lods
add
hlt
lea
add
jae
rcl
clc
je
mov
movsb
inc
in
pop
inc
in
cli
cmp
mov
enter
stos
bound
lods
adc
call
xchg
add
into
mov
movsl
sti
jb
inc
andb
lahf
dec
pop
loopne
inc
mov
xor
jecxz
decl
das
cld
sbb
push
stos
pop
sub
push
iret
icebp
mov
adc
xor
das
sbb
testl
mov
pop
fwait
or
sahf
fwait
icebp
ror
fimuls
xor
dec
in
sub
cmp
push
jg
or
mov
inc
lret
mov
xchg
push
xor
cmp
jmp
repz
xchg
push
fs
loope
decb
cmc
sbb
sbb
mov
push
sub
cmp
fmuls
pop
push
jl
or
xchg
js
xor
in
sbb
in
jg
mov
or
outsb
lret
jo
mov
imul
xor
enter
sbb
push
push
push
negb
jmp
call
or
adc
loopne
ds
cld
pop
jo
loop
sbbl
cmp
dec
push
add
ja
fcmovb
repnz
pop
jge
adc
push
popa
shll
push
mov
pop
fisubrs
cmp
incl
add
ret
pop
test
add
jmp
mov
push
adc
inc
enter
pushl
aad
cmp
stos
inc
jmp
ror
cmp
cli
pop
ds
aam
jnp
cltd
cli
clc
pop
outsl
xchg
clc
insl
push
pop
loopne
jns
sbb
in
loope
jp
pop
inc
xor
jge
lds
loope
push
mov
in
add
ljmp
pop
dec
xlat
js
imul
mov
call
pushl
shrb
mov
in
imul
movsb
call
mov
cmp
xchg
aam
or
push
orb
jl
xchg
je
rclb
call
loopne
mov
and
ljmp
cmp
loopne
push
insl
mov
fcomps
jne
cltd
pop
add
and
jmp
movl
ss
mov
sti
push
cli
inc
outsl
out
sbb
jo
xchg
imul
es
dec
pop
push
ljmp
adc
mov
into
in
inc
aaa
xor
fists
int
mov
outsl
scas
dec
sub
xor
movsb
out
ljmp
or
aaa
jb
push
and
ljmp
xchg
add
orl
movsl
sarl
stos
mov
out
sti
in
stc
rol
xchg
inc
sbb
cmpsl
add
xchg
dec
lahf
ret
mov
aad
lcall
dec
mov
das
stc
ds
and
je
test
sub
int3
ret
sub
adc
out
cmp
jmp
xor
fwait
aaa
lret
dec
fst
rcrl
js
or
cmp
pop
cld
ljmp
fisttps
and
or
push
xchg
lods
jbe
cld
enter
call
xchg
cmc
das
xchg
adc
movsb
cmp
gs
cmp
push
dec
push
rolb
test
fnstenv
xor
push
out
pop
jp
push
cmpsb
ret
stc
clc
and
decl
dec
xchg
out
call
and
mov
gs
lds
lcall
roll
pop
adc
or
fst
data16
lahf
rolb
mov
loopne
data16
push
lret
push
test
cmp
cs
dec
outsl
scas
int
mov
loop
xor
push
fcomip
imul
mov
ja
inc
ja
inc
loop
jbe
xchg
mov
mov
sub
enter
pushl
addl
sub
pop
pusha
loopne
xor
mov
test
mov
leave
insb
add
lock
mul
mov
sbb
cwtl
or
out
pushf
mov
push
push
movsl
jecxz
jmp
jecxz
idivl
push
or
mov
mov
stc
lea
aam
sub
decl
xchg
cmpsl
xor
lcall
mov
jg
roll
pop
cltd
adc
bound
test
sysexit
cltd
pop
stc
adcb
fistl
lahf
arpl
mov
shlb
cmp
jg
mov
rorb
cltd
stc
movsb
in
andb
sbb
push
add
sub
push
sub
lcall
adc
pop
xchg
fiadds
decl
pop
es
cwtl
pop
pop
sbb
pop
dec
in
fcomip
incl
popf
add
shl
fs
clc
and
mov
mov
daa
mov
mov
loop
addr16
and
sbb
lcall
sub
cwtl
dec
imul
ret
dec
add
nop
pusha
in
in
push
data16
repnz
aad
roll
jb
jecxz
lcall
das
add
lods
push
sbb
push
pop
pushf
ja
cli
push
dec
lcall
cltd
popa
xor
movsl
call
inc
xor
pop
outsl
xor
std
mov
pop
aas
out
leave
es
or
jg
shrl
jne
dec
cmovns
adcb
cmpsb
mov
xchg
xor
mov
inc
iret
mov
arpl
pusha
fsubl
sbb
dec
mov
test
call
jbe
and
jae
inc
add
xor
jmp
cmp
in
or
sub
dec
inc
adc
lods
xchg
loop
test
mov
cmp
mov
push
add
cmp
or
cmp
sub
jne
int
jg
cmp
mov
call
xlat
ret
data16
xlat
mov
sub
hlt
mov
sub
jp
sub
shlb
iret
in
cmc
call
out
inc
xrelease
popa
rolb
mov
loopne
call
xchg
leave
add
movsl
imul
jae
jb
hlt
push
ja
or
pushf
fcom
ljmp
push
mov
mov
mov
jge
xorl
sahf
loopne
cmpsl
in
lcall
xchg
dec
ret
sbb
inc
mov
xchg
and
push
out
cmp
call
xchg
pop
jle
or
or
jnp
jno
jmp
adc
ror
jmp
std
sub
into
add
mov
and
icebp
jp
fwait
xor
hlt
push
lcall
mov
sahf
push
adc
inc
ja
pushf
mov
pop
test
stos
inc
daa
decl
inc
xor
cmpl
in
test
and
leave
xchg
dec
push
pop
test
in
leave
jnp
and
mov
nop
push
arpl
or
imul
sar
incl
lahf
pop
xchg
and
iret
pop
dec
outsb
mov
cmpsl
fcmovne
xchg
jne
xchg
sub
jmp
mov
adc
shr
push
aas
or
mov
sub
iret
mov
ret
mov
lret
loope
aaa
lcall
popf
pop
nop
and
movl
adc
xlat
call
stc
lcall
xchg
jmp
mov
fs
xor
lcall
cltd
loope
lret
mov
call
cmp
mov
cmovo
mov
fsubr
addr16
dec
push
les
and
push
pop
cs
cmp
cltd
push
cmp
cs
xorl
mov
or
and
mov
clc
in
xchg
dec
pop
mov
ljmp
popa
mov
scas
daa
or
sbb
fwait
outsl
mov
enter
popf
or
incl
sub
lock
xor
mov
sbb
lret
dec
push
jecxz
lret
ret
ljmp
xchg
sbb
mov
lret
lock
test
sub
or
inc
jge
call
push
sbb
pop
cmp
xor
jb
aad
loope
mov
leave
dec
in
jns
jo
sbb
ss
mov
stos
fisubs
cld
pop
add
in
xor
enter
jg
mov
mov
jmp
jl
push
mov
xchg
xchg
xchg
mov
xor
jmp
push
mov
jl
lea
push
clc
pushf
sti
je
push
cmp
dec
divb
decl
pop
mov
xchg
push
inc
out
call
shlb
loop
mov
incl
aad
inc
jl
mov
lret
jmp
sti
js
decl
push
test
out
rorl
lods
in
iret
int
jo
fcompl
out
imul
testl
je
pop
sbb
data16
mov
stc
aad
lcall
pop
imul
lret
pop
dec
mov
pop
std
call
addr16
je
ja
sti
fmuls
test
and
incl
adc
inc
pop
ljmp
nop
stos
aaa
pop
cld
ljmp
loopne
add
stos
test
jno
movsl
cmp
sbb
sbb
cwtl
pop
cmp
popf
dec
mov
and
jne
nop
mov
sahf
adc
pop
push
add
call
sbb
clc
sarb
inc
popf
pushl
or
insb
dec
dec
cmp
push
scas
and
pop
adc
sub
jmp
loopne
mov
and
sub
sub
inc
sbbb
or
adc
mov
mov
xchg
and
adc
jmp
and
or
xor
pop
nop
loopne
jle
pop
popf
popa
cltd
ror
icebp
incl
loop
or
dec
rcll
scas
add
imulb
das
rcrb
sub
std
je
adc
decl
negl
mov
int3
jnp
mov
test
jns
adc
fnstcw
mov
std
add
test
and
jecxz
sbb
pusha
adc
hlt
dec
fcomip
pushl
mov
in
pop
das
stc
xchg
push
and
imul
xchg
jmp
pop
ja
cmp
mov
push
cmpsl
inc
jbe
das
xor
jb
and
scas
orl
mov
fdivrl
sbb
test
or
push
fs
push
sub
das
and
mov
cmpxchg
mov
das
xor
ljmp
into
cmpsl
xchg
jo
pushf
dec
push
push
push
mov
hlt
push
lcall
imul
std
push
lea
gs
pop
je
jg
adc
test
jmp
out
xchg
shr
fnstcw
mov
std
jo
test
loope
jae
and
cmp
mov
inc
and
jmp
mov
and
push
mov
cmpsl
shll
loop
ljmp
imul
mov
fnstenv
loopne
mov
add
jns
jp
jne
push
lret
insl
cmp
movsb
pop
jmp
in
mov
push
cld
cli
or
mov
inc
movsb
clc
mov
push
test
mov
xor
jo
or
incl
sub
add
mov
call
mov
mov
xorb
sbb
sbb
inc
aas
lret
fstps
pop
mov
ljmp
jg
or
outsl
ds
fisttpll
lcall
xchg
imul
jmp
push
dec
sub
fdivs
inc
rclb
dec
dec
sbb
push
cmc
dec
in
add
dec
jne
pop
cltd
adc
inc
data16
ret
ja
xorl
test
clc
dec
test
jmp
mov
es
loope
pop
repz
xchg
arpl
lods
mov
dec
hlt
fucomi
add
xor
lds
sbb
mov
outsb
aad
push
mov
jge
mov
mov
popa
mov
ljmp
dec
test
push
dec
popa
ds
ds
lods
push
pop
push
es
shll
xor
in
rorl
test
rclb
sub
mov
out
dec
inc
mov
rorb
xlat
sbb
lods
mov
xchg
xchg
mov
push
dec
outsl
jle
pop
stc
jne
jo
or
fdivl
mov
repz
test
add
lcall
es
or
xor
dec
andb
inc
mov
mov
aam
push
scas
lcall
fcompl
sbb
lea
and
loop
scas
add
jnp
iret
sahf
mov
sbb
cmp
dec
pop
andl
xor
dec
aam
dec
hlt
pandn
push
into
xor
incb
jne
fnclex
inc
jns
inc
push
push
jae
mul
lds
push
add
jo
test
clc
decl
test
add
xlat
into
shrl
inc
lcall
idiv
scas
lret
push
pop
adc
insl
pop
out
xchg
push
enter
lahf
jo
add
ljmp
xor
dec
je
lahf
sar
out
test
in
lock
mov
call
sbb
movsl
inc
adc
es
mov
out
sub
push
jg
adc
stc
filds
call
popf
ret
cmpsb
sahf
pop
mov
lahf
push
mov
movl
sub
dec
push
int3
ljmp
mov
xchg
aam
arpl
sbb
mov
repnz
pop
sti
loope
and
xchg
lahf
lcall
cmpsb
xchg
sbb
add
push
xchg
dec
in
dec
inc
test
cmp
movsl
mov
xchg
xchg
cld
decl
sub
push
jnp
test
cmpsl
test
mov
mov
gs
xlat
lcall
decl
dec
in
pop
daa
lods
dec
andl
nop
pop
mov
push
mov
packsswb
dec
jl,pn
scas
mov
mov
das
ret
and
push
std
inc
jb
pushw
jge
loope
imul
dec
loopne
cmp
mov
sarl
lods
ljmp
shlb
ljmp
or
pop
data16
cmp
ret
jg
sti
push
sub
rorb
and
and
ss
xor
inc
push
sub
les
mov
fwait
jb
addb
cltd
jb
call
call
rorb
in
pop
jp
sbb
inc
fsub
lcall
call
clc
cwtl
push
xchg
sbb
lock
imul
dec
pop
push
lret
decl
in
shrl
cld
fldenv
loopne
xor
ljmp
cld
pushf
insb
pushl
mov
sub
scas
shrl
pop
lock
sbb
jp
xchg
out
or
call
pop
adc
cvttps2pi
sbb
cld
push
std
outsl
out
push
and
stc
pushf
cmpsb
decl
mov
ret
xlat
and
pop
mov
fldenv
pop
stos
lcall
jns
inc
pop
sub
adc
sbb
iret
xchg
shll
jg
call
xlat
pop
jecxz
dec
fcmovnb
lds
into
enter
or
jnp
bswap
cmp
in
jnp
dec
push
xchg
pop
xchg
add
xchg
data16
insb
add
lcall
stos
mov
pusha
imul
pusha
popa
daa
inc
lods
ss
adc
dec
mov
pop
xchg
inc
frstor
call
shrb
sub
lret
add
orl
or
int3
cmp
jl
pop
dec
in
fisttps
push
xchg
stc
pop
test
pop
xchg
ja
inc
mov
mov
pop
pushf
or
or
and
ret
cmp
out
sub
fsubrl
lcall
fldcw
insb
adc
out
dec
xor
mov
fs
mov
xchg
cmp
and
jmp
cmpsl
cltd
insb
or
cs
xchg
pusha
dec
in
imul
aad
lahf
mov
es
dec
inc
call
xor
inc
inc
lret
adc
sub
fwait
insl
jge
push
cmp
cmp
mov
sbb
xor
lea
out
inc
xchg
jle
push
or
inc
lock
cmp
das
loopne
jb
leave
xchg
xchg
xor
rcr
leave
fisubrl
cmpsl
incl
and
adc
aam
shll
sbb
mov
or
jo
in
sbb
incl
or
daa
mov
pushf
sbb
adc
mov
rorl
mov
pushl
xchg
dec
cmc
push
and
fcoms
fsubr
je
imul
xchg
dec
add
and
pop
push
cmp
mov
fimull
stc
sahf
xlat
jecxz
mov
jns
cmpsb
sub
adc
rclb
mov
filds
lock
std
mov
into
test
aam
add
ja
clc
dec
pop
pop
jl
in
mov
mov
push
and
movsb
cmp
and
xor
lret
cmp
jmp
dec
adc
mov
add
push
mov
and
lret
stc
mov
decl
pop
xchg
js
dec
cwtl
dec
sbb
pusha
adc
mov
cmp
jmp
outsl
ja
adc
subl
xor
ret
mov
lock
and
call
jle
and
cmp
xchg
stos
lcall
pop
rcll
jbe
les
mov
pop
jmp
cmpsb
popa
inc
add
pop
xlat
pop
xor
dec
cwtl
inc
out
in
mov
cmp
daa
xor
pop
dec
and
dec
scas
out
jle
sbb
scas
mov
jg
fwait
andb
sarb
dec
push
data16
rclb
addr16
decl
add
loopne
push
loopne
cmp
aaa
sahf
call
call
push
popf
aam
insb
movsl
rcr
xlat
jmp
jle
fidivrl
sub
int
js
mov
icebp
ret
jmp
test
iret
scas
or
into
popa
cmpsl
aam
mov
xchg
push
rol
pop
cmpl
jae
rcrb
cmp
and
mov
fwait
cwtl
mov
mov
loope
test
stos
stc
ljmp
out
mov
mov
push
xor
and
clc
fdivrs
inc
sbb
pop
lea
lcall
xchg
dec
xor
dec
addr16
inc
pop
mov
mov
add
xchg
add
jecxz
loopne
cs
dec
sub
jmp
inc
popf
daa
lcall
jmp
jnp
sub
imul
inc
xor
arpl
cmp
jnp
push
movsb
push
lea
outsl
clc
mov
cmp
rorb
into
push
bound
mov
pop
push
ret
repnz
inc
add
mov
push
std
testb
xchg
pop
outsb
ud0
outsl
push
or
add
xchg
mov
jp
mov
pop
jl
adc
mov
ret
or
incl
mov
fcoms
xor
mov
subb
movsb
push
ficompl
out
pop
xorb
push
ss
sbbb
mov
cmp
lods
rol
mov
call
scas
adc
pop
mov
mov
mov
mov
fsubl
in
fcomps
in
cmpsl
pop
sub
std
scas
fdivs
jge
in
fidivl
jbe
dec
inc
add
decl
bound
imul
inc
fxtract
mov
test
cld
jge
jno
xchg
xor
mov
jne
lahf
pop
in
add
mov
dec
enter
lcall
ss
xchg
gs
pop
add
dec
imul
and
add
sbb
xchg
or
sub
xor
decl
rolb
pop
xchg
mov
xchg
xor
mov
push
add
ret
xor
in
mov
pusha
movsl
in
and
pop
ret
mov
hlt
or
add
jbe
mov
clc
mov
xchg
xchg
inc
leave
add
jmp
mov
pop
sbb
outsb
pop
fcoms
and
mov
jle
xchg
lret
pop
cmc
mull
mov
fdivr
call
pop
or
add
add
lods
and
xchg
popf
pop
sbb
sbb
pop
dec
inc
ljmp
dec
sbb
xchg
loop
cmpsl
mov
ds
inc
fmul
rcll
inc
lods
das
xchg
fimull
loope
fldcw
lcall
mov
nop
or
je
mov
dec
or
mov
adc
inc
stos
enter
mov
push
pop
sub
loopne
pushf
lea
mov
inc
aad
int3
cmp
mov
mov
cmpsl
dec
cmp
fcos
pushl
dec
dec
jae
rcrb
cmp
push
inc
push
and
or
mov
dec
rorb
call
mov
xor
stos
cli
mov
push
dec
out
leave
mov
jno
mov
and
adc
adc
mov
pop
xor
lock
push
clc
sbb
not
xor
push
das
out
pop
mov
xor
mov
mov
cmpsb
cmpsb
add
ja
sub
js,pt
int3
jg
idivl
stc
push
sbb
dec
and
rolb
lcall
inc
ja
rcl
pop
incl
cmp
cvtpi2ps
test
jge
fsubrs
fwait
bnd
sbb
add
jmp
mov
cmp
inc
adc
xchg
ljmp
call
ds
aad
lods
cmp
call
inc
xchg
jbe
jae
and
xor
lret
mov
aas
call
lcall
cmp
std
add
in
lret
inc
ret
mov
or
jmp
xor
cltd
dec
xchg
cltd
lcall
mov
call
sbb
pop
out
repz
pusha
or
adc
test
int3
nop
jmp
ljmp
mov
iret
clc
mov
std
mov
out
push
bound
popa
test
inc
in
and
mov
jecxz
jge
add
outsl
jmp
sub
negl
sub
imul
test
or
icebp
movl
mov
leave
lcall
pushf
imul
sub
int3
adcb
in
pop
xchg
pop
pop
call
ljmp
jp
xor
push
xchg
rcl
sub
in
ss
arpl
sub
mov
lcall
jb
mov
xor
push
mov
cmp
mov
decl
pop
xlat
leave
adc
cmp
fimull
lock
fs
or
push
jg
ret
repz
cmp
or
push
xor
inc
xchg
adc
xchg
jno
popf
decl
ss
inc
sub
pop
sarl
pop
pop
test
xor
and
leave
mov
stos
push
cwtl
jb
lcall
leave
sub
mov
push
ljmp
sbb
mov
fadds
xchg
and
pop
jae
dec
xchg
mov
outsb
in
mov
sbb
sbb
cmp
add
push
test
and
mov
in
mov
ja
incl
push
jmp
cmpsl
jno
jge
mov
mov
and
fcoms
ficomps
cmp
call
in
pop
in
mov
cmp
rcrw
adcl
cwtl
aam
mov
pop
ljmp
lods
in
jecxz
inc
shlb
fwait
mov
mov
cmpsl
add
lods
pop
sub
hlt
xchg
sbb
call
sahf
ljmp
loop
shrb
insb
adc
xchg
jg
cbtw
push
pushl
mov
sahf
in
or
inc
testl
mov
popa
leave
pushl
xor
out
in
mov
mov
sub
iret
lods
outsb
sbb
xor
cmp
ljmp
cmp
cmp
fsubl
insl
xchg
sbb
mov
lods
ljmp
fwait
call
movsb
gs
fstpt
aad
sub
push
sti
mov
hlt
clc
jno
xlat
push
mov
call
jg
ret
jl
enter
stos
scas
sub
icebp
outsb
jnp
call
cmc
int
xor
jae
sahf
or
sbb
mov
and
cs
add
or
ljmp
cli
bound
mov
imul
cmp
mov
adc
mov
ljmp
and
sub
call
pop
js
jnp
in
sub
push
out
imul
push
sub
pop
mov
mov
mov
jmp
mov
lcall
inc
pop
push
pushf
adc
ret
dec
lret
sub
bnd
rorl
sbb
cwtl
ljmp
mulps
xor
popa
je
cs
jmp
add
xor
adc
xor
fsub
iret
xchg
push
aad
add
xlat
or
adcb
jecxz
xchg
dec
mov
sbb
jle
incl
push
dec
push
adc
data16
popa
daa
rcr
adc
pop
jmp
rolb
and
call
cli
cmp
mov
mov
mov
cwtl
xchg
mov
orl
sbb
mov
jp
lahf
mov
lret
insb
fxch
test
clc
sub
out
fnstsw
repz
clc
out
decl
push
icebp
pop
fldl
sbb
mov
push
ss
push
pop
push
mov
inc
fisttps
mov
mov
pushf
rcrb
out
add
pop
xchg
ret
pop
sbb
and
jbe
pop
pop
sbb
stos
mov
inc
xor
jg
nop
rorb
lds
ret
fisttpl
out
sub
cmp
shll
or
mov
decl
into
call
push
add
dec
into
ds
pusha
mov
sbb
mov
popa
std
js
xchg
sbb
fcompl
rcl
shr
push
call
in
fadd
out
adc
xchg
mov
bound
je
xchg
imul
inc
scas
clc
cmp
dec
pop
mov
jae
fiaddl
in
xor
sub
sub
cli
adc
push
int3
sub
dec
ljmp
mov
rol
mov
fs
push
xor
cmp
pop
test
xchg
sub
incl
mov
sarl
scas
adc
cmp
std
decl
fcmovbe
int
adc
lods
pop
lods
js
sub
mov
cmp
call
sbb
sti
pushf
shll
mov
sub
or
aad
push
mov
incl
cld
adc
out
push
shlb
frstor
out
bound
incl
loop
xlat
cld
nop
into
push
cs
or
das
mov
incl
stos
imul
mov
dec
cmp
jg
jecxz
mov
incl
mov
out
sub
je
sarl
out
jge
push
fnstcw
inc
nop
mov
cs
or
adc
xchg
ljmp
mov
mov
lods
inc
sub
fs
aaa
sub
in
lahf
imul
ljmp
mov
sbb
loop
dec
fsub
and
mov
mov
enter
lock
lea
push
mov
xor
jp
into
dec
xchg
push
pop
pop
daa
xor
sti
pusha
movsl
sbb
jnp
sahf
mov
loope
insl
mov
jmp
push
add
cmp
loopne
rcl
push
xor
push
jl
jb
loopne
mov
aaa
inc
pushl
fisubrs
insl
nop
jnp
je
jg
mov
or
std
jp
ljmp
repz
cmp
dec
jb
mov
shll
ret
push
cmp
push
inc
imul
and
scas
scas
in
sbb
decl
and
loop
std
cld
fidivl
test
pop
mov
aam
mov
cmpsl
mov
jecxz
sbb
jg
pushl
or
or
dec
xor
dec
mov
out
mov
popf
push
jbe
xor
and
cwtl
fldt
dec
mov
stos
adc
inc
sbb
ficoms
add
lcall
push
sbb
mov
jno
daa
dec
add
decl
dec
fcmovnu
lods
xchg
lods
aad
pop
inc
cmp
incb
mov
iret
pop
cli
ljmp
push
jecxz
std
sub
xchg
jmp
push
and
ljmp
not
inc
fidivs
jne
sub
std
and
and
lahf
xchg
mov
inc
dec
push
aaa
cltd
insb
in
pop
jg
and
push
fldt
repnz
mov
ljmp
cmp
in
jmp
cmpsl
mov
mov
popf
mov
rolb
faddl
lods
test
ljmp
cld
or
mov
pop
outsl
dec
test
xchg
subb
call
stos
call
jecxz
sub
cmp
sbb
adcb
ljmp
jg
push
loopne
lahf
jl
and
xor
fisttpl
xchg
mov
and
movq
pop
loopne
jnp
mov
pop
mov
lock
lcall
mov
inc
push
mov
inc
add
stos
cmp
jno
push
ret
stos
scas
ss
ljmp
push
shrl
jmp
lret
pop
xor
push
jle
sar
pop
imul
jmp
xor
jnp
ljmp
and
push
addr16
loope
mov
jg
scas
clc
xchg
lahf
popa
mov
and
enter
ds
jl
or
inc
int3
push
jb
call
sbb
mov
pop
or
sti
dec
jb
push
movsl
inc
push
or
mov
and
cmp
sbb
push
les
les
shrb
dec
jmp
sbb
lret
loopne
mov
xchg
jno
cmp
idivl
daa
or
dec
imul
dec
inc
icebp
iret
leave
xor
xorl
mov
sahf
lahf
test
jl
insb
lcall
pushl
xlat
mov
sub
call
sbb
pop
xor
ljmp
iret
lea
cli
lret
xor
and
repnz
pop
push
cld
addr16
addr16
lea
xchg
jp
sbb
iret
mov
xchg
jb
or
lcall
jle
in
cmp
mov
stos
repz
repz
cmp
xchg
xchg
inc
xor
push
adc
arpl
lcall
pop
dec
stc
pop
push
hlt
pop
xor
mov
fdivl
mov
mov
dec
xlat
pushl
mov
xor
inc
adcl
sbb
xchg
and
sbb
cmp
adc
mov
movsl
push
add
jmp
fwait
ret
fildl
inc
hlt
popa
add
dec
andb
je
stos
out
push
mov
shr
ljmp
sahf
cmp
ja
mov
call
or
pushl
js
aam
inc
xchg
lret
outsb
push
lcall
push
sbb
and
inc
adc
lcall
and
mov
adc
mov
jne
xchg
pop
add
bound
pop
sub
aas
out
jbe
ret
call
movsl
je
hlt
dec
mov
pushf
jae
pop
stos
sbb
into
in
addl
mov
cmpps
cmp
popf
xor
inc
mov
out
jle
jle
pushl
adc
js
xchg
jnp,pt
mov
push
std
int
fldt
pop
adc
sar
stc
lods
test
push
into
and
in
sub
movsb
pop
lcall
push
mov
jbe
sbb
ljmp
in
clc
fistl
xchg
sbb
or
jmp
pop
call
dec
aam
push
cli
jo
mov
fwait
inc
les
inc
cmpsl
aam
xor
xchg
inc
sub
in
in
adc
in
cmp
sbb
shl
je
scas
cmc
xchg
cmp
test
sbb
shlb
xchg
pop
call
mov
push
fwait
and
sbb
sti
shll
in
test
cmp
cmp
mov
call
in
add
pop
cmp
xchg
lods
inc
jne
xchg
idivb
popf
ljmp
seta
push
xchg
fmull
orl
xchg
out
dec
and
and
int3
pushl
cld
stc
mov
push
ljmp
popf
insl
sti
push
jb
lcall
add
decl
cmp
les
ret
sti
pop
insl
mov
jg
outsb
je
and
stos
xor
jg
mov
leave
and
mov
adc
xor
addr16
cmpsl
push
xchg
js
push
mov
add
mov
push
mulb
push
movsl
push
sub
jae
fnstcw
push
xchg
loope
xchg
movsb
lcall
decl
fmuls
xchg
lds
mov
cmp
add
decl
daa
dec
mov
xchg
inc
push
pop
movsb
xchg
cmp
sub
test
push
enter
cli
fildll
mov
pusha
mov
pop
jecxz
sbb
jbe
pop
mov
sbb
lret
lods
scas
xchg
and
fsts
jp
sub
call
ja
adcl
mull
jecxz
out
cmp
push
xor
out
mov
xor
jmp
mov
sahf
rorl
sub
mov
cmp
jne
push
or
cs
adc
sub
lods
sub
lcall
ljmp
cld
stc
in
popa
fiaddl
mov
sbb
mov
cli
pop
jmp
inc
jp
leave
fs
cli
clc
jbe
imul
jg
shll
push
inc
std
or
mov
sar
pushl
les
sub
mov
push
test
push
les
dec
lods
adc
sti
mov
sti
mov
fwait
and
popf
dec
jnp
xor
ret
int3
mov
add
insb
inc
cli
lock
push
pushl
fildll
leave
fbld
test
leave
xchg
cld
mov
sti
rcrb
test
cld
movsb
lret
push
repz
hlt
mov
push
insl
fldenv
imul
test
test
xlat
adc
mov
mov
rcrl
lods
or
mov
aam
push
inc
dec
mov
popa
es
cmc
mov
pop
ljmp
outsl
lock
add
add
push
or
stc
cltd
mov
lcall
shlb
add
fiadds
push
sbb
push
mov
push
ljmp
inc
push
mov
aad
push
xor
sbb
shrb
popa
sahf
decl
rorl
ret
mov
pop
xchg
aad
cs
nop
push
mov
cli
lahf
ja
sbb
xor
pop
pushf
or
out
add
or
clc
cmp
icebp
jnp
fistl
push
adc
jp
dec
mov
idiv
incl
push
dec
adc
jl
and
inc
popf
cmp
cmpsb
inc
clc
repz
loopne
outsb
fdivrp
pushl
mov
pop
inc
fdivrl
cmpsb
pop
inc
mov
mov
inc
stc
lock
lock
lcall
lret
and
bound
push
loope
test
imul
jg
add
push
lods
sbbl
fs
loope
sub
aam
jmp
pop
mov
fisubs
arpl
xlat
scas
adc
dec
jae
pusha
jno
stos
into
call
add
test
dec
xchg
jge
xchg
and
int3
xor
push
test
sub
jmp
sub
cltd
sub
xor
mov
imul
cwtl
jb
mov
pop
pop
mov
jle
inc
push
pop
test
xlat
xchg
xor
add
or
daa
xchg
daa
jne
fstpl
fstl
in
pop
outsb
into
sub
cmp
cld
mov
fcomps
or
and
xchg
adc
and
daa
or
ljmp
addr16
ljmp
cmp
push
outsl
push
inc
mov
popw
cmp
mov
or
xor
outsb
dec
fsubs
jmp
out
sarl
in
aam
sub
push
popa
fimuls
test
cmp
scas
mov
mov
int
jle
in
or
mov
sub
cmpsl
js
insb
js
frstor
lcall
ficomps
jp
fmull
xchg
pop
call
jo
loopne
out
jge
out
clc
call
lods
jno
pop
shll
neg
repnz
mov
xor
in
call
mov
or
std
sub
dec
or
xchg
repnz
repz
dec
dec
mov
stc
mov
fistpl
dec
inc
push
cmp
pop
jae
or
leave
repz
int
pop
and
test
push
add
jmp
mov
xor
ret
jle
push
mov
shrl
sti
jecxz
sbb
rcrl
incl
notb
inc
add
dec
cvtps2pi
and
mov
inc
inc
jg
jne
ret
insb
idivb
sub
xor
cwtl
sub
stos
int
ljmp
xchg
xchg
clc
out
mov
mov
fists
aas
cmpsb
shlb
xchg
rolb
mov
out
int3
jp
pop
fcmovnb
ljmp
inc
and
mov
ljmp
jb
test
pop
bound
pop
imul
mov
push
adc
decl
or
idiv
jno
add
imul
dec
pop
movsl
cmpsb
std
dec
iret
dec
leave
cld
or
lcall
les
movsl
scas
jp
jecxz
inc
push
xchg
test
inc
xlat
imul
xor
lds
filds
fimuls
dec
jns
in
jae
xor
fisttps
lock
repz
ret
stos
or
push
pop
mov
lret
jecxz
daa
daa
jmp
cli
push
mov
add
sbb
mov
loopne
push
loop
std
cmpsb
sub
mov
adc
jno
lds
cmp
or
mov
mov
mov
jno
sbbl
scas
clc
loopne
cld
lcall
push
lds
inc
stc
faddl
enter
jmp
in
and
dec
pushf
inc
sahf
fsubs
jl
lret
xor
xchg
lahf
jae
push
jp
cmc
imul
repnz
sbb
scas
dec
xchg
mov
pop
add
add
fisubrl
in
lcall
or
xchg
sub
divl
sub
jge
in
push
stos
cmc
pop
inc
add
mov
push
pop
dec
and
aas
flds
js
inc
decl
lods
shl
cmp
cwtl
ret
aaa
test
dec
mov
dec
mov
pop
jae
rcll
aaa
jnp
fmul
xchg
pop
leave
push
fisttpll
cs
nop
cli
out
mov
in
daa
stos
aas
and
adc
lret
xlat
out
xchg
aaa
cwtl
fcmovu
mov
shr
enter
fimull
icebp
jp
shll
leave
mov
call
outsl
xchg
jno
sahf
cmpsb
jo
and
xor
dec
jae
fwait
xchg
mov
jmp
cld
mov
gs
data16
push
fcomp
mov
sub
outsb
sbb
pushl
jge
in
xchg
das
in
push
add
das
xor
cmp
sbb
decl
lea
es
ficoms
and
ret
daa
loopne
add
cs
sbb
xorb
sub
or
shlb
cmpsb
enter
pushl
lods
pop
xor
cli
inc
scas
mov
sub
xchg
fidivrl
in
pop
inc
add
pop
lock
loopne
scas
jecxz
cmp
sahf
stos
jp
sub
gs
pushl
std
das
pop
shl
sahf
nop
test
cmp
cmpsb
rcl
sub
add
dec
cmova
mov
push
sub
shrl
add
pop
add
pop
loope
decl
mov
mov
cld
pop
mov
cmpsb
or
and
jg
push
sbb
hlt
fdivrp
sub
xchg
aaa
fsubr
pop
nop
call
jl
subl
and
stos
mov
test
fnstsw
push
repz
sar
ljmp
inc
inc
push
int3
testb
adc
dec
add
repz
mov
xor
call
push
into
mov
mov
sbb
lock
dec
push
stc
mov
cmc
jae
arpl
das
repz
testl
sub
xchg
stos
mul
icebp
repnz
jns
mov
lcall
dec
lret
gs
test
push
gs
push
dec
mov
or
xorb
sahf
sub
imul
inc
jo
incl
jl
cwtl
cs
xor
sub
sbb
cmpsb
cmp
outsb
lea
pushl
nop
rcrb
and
cmpsb
dec
push
lea
add
xchg
addb
ds
arpl
jl
push
mov
push
clc
jo
test
xchg
dec
ljmp
popa
and
lds
sahf
mov
inc
mov
in
aad
outsb
in
xor
mov
or
mov
push
xor
fdiv
adc
mov
mov
call
imul
into
jb
jmp
repnz
cmp
xor
mov
adc
mov
add
jmp
jmp
mov
sub
or
test
cmp
test
inc
xchg
push
adc
or
test
mov
xor
jne
add
mov
into
cmp
cli
decl
fbld
xchg
jge
or
mov
je
mov
stc
loopne
inc
arpl
ljmp
dec
push
sub
sub
jns
or
mov
sbb
pop
cmp
mov
enter
data16
cwtl
mov
sub
popf
sbb
in
mov
incl
clc
popa
lcall
notb
push
cli
insb
sub
lret
movsl
push
pop
push
add
push
pushf
es
dec
sar
imul
mov
add
pop
push
xchg
in
ljmp
daa
out
jg
icebp
scas
xlat
inc
ss
lahf
fiaddl
orl
and
loope
pushl
lret
push
daa
lods
add
or
rol
fstps
clc
fists
in
pop
mov
fcomip
sti
movsl
pushf
je
mov
icebp
rcrl
or
sbb
or
in
decl
rolb
adc
es
jbe
dec
dec
pop
mov
andl
imul
pop
ja
call
fistpl
lcall
lret
adc
push
or
incl
dec
xchg
andb
test
scas
jno
cmp
inc
loopne
scas
std
mov
lods
push
shrb
inc
cmp
ret
inc
stos
mov
jmp
cmp
add
mov
and
push
dec
pop
mov
loopne
pop
test
nop
pop
ret
lcall
int
pop
pushf
or
lods
mov
stos
je
sti
cmpsb
sti
lret
xorl
push
pushl
in
movsb
sub
rorb
lahf
lods
in
pop
cmpb
cmp
leave
mov
call
in
loope
mov
mov
sub
rcr
shll
fdivrl
rcll
mov
dec
jp
cld
cmp
int3
stc
sub
fisttpl
rorb
mov
std
and
outsb
add
test
sbb
mov
xchg
test
jmp
pusha
adc
das
or
shll
pop
fists
or
or
jo
insl
dec
call
adc
mov
xchg
rcrl
cltd
pusha
mov
scas
pop
jecxz
push
and
cltd
cmp
ljmp
pushl
dec
inc
sahf
inc
push
hlt
clc
inc
data16
rcll
mov
imul
sbb
cmpsl
pop
adc
clc
ljmp
scas
push
mov
mov
cs
shlb
jg
out
and
sbb
hlt
lret
add
inc
addr16
enter
lods
cmc
ljmp
mov
sub
adc
add
adc
fisttps
dec
lods
cmpsl
test
or
pop
scas
xchg
xor
sahf
sbb
in
mov
sub
int3
daa
lods
push
xchg
stos
aas
adc
repnz
xor
call
jg
pop
out
aas
mov
aaa
loop
movsl
push
outsl
ret
sbb
xchg
push
and
cmp
push
insb
call
inc
rorb
mov
or
sub
pop
decl
incl
loope
aaa
dec
sbb
jno
fs
mov
dec
adc
sar
pushl
dec
into
movsl
and
push
int3
xchg
xor
xor
push
and
stc
sub
cltd
leave
lcall
pushl
test
movsb
pop
xor
pusha
add
jmp
test
pop
addl
sbb
push
fsubl
test
sti
mov
sub
mov
pop
into
sub
inc
or
xor
cli
fstl
fs
int3
pushl
adc
mov
xor
subl
push
mov
je
call
pop
cltd
clc
jl
push
out
sub
stos
mov
std
aas
sar
pop
hlt
lcall
adc
fwait
xchg
mov
pop
lea
subl
fs
xor
cmc
push
jge,pt
sbb
add
xchg
mov
test
or
push
std
je
add
jmp
push
push
scas
mov
imul
sub
add
mov
push
adc
test
cmp
fwait
dec
mov
sbb
xchg
pop
fcoml
sub
stc
int
lcall
xchg
push
je
xchg
push
call
ficomps
xchg
inc
lahf
and
lods
jl
sahf
arpl
sbb
arpl
and
pop
push
scas
xor
ss
jbe
add
decl
loope
in
outsb
mov
ds
pop
fucomp
negb
and
mov
xchg
divl
stos
dec
shlb
push
cmp
mov
pushl
cmpsb
mov
cmp
orl
imul
ljmp
inc
ljmp
mov
notl
xor
in
test
xor
pusha
gs
testl
inc
pop
and
sti
insb
lret
mov
xor
push
hlt
mov
mov
push
mov
fisubs
lret
mov
mov
jecxz
cltd
insb
popl
dec
add
inc
sbb
shl
sar
call
jno
call
stos
push
dec
or
jmp
push
xorl
adc
fwait
jmp
xchg
divb
jo
xor
in
lret
out
sarl
out
mov
sub
push
xor
out
ss
inc
hlt
xorb
mov
inc
or
leave
lcall
mov
es
sbb
cmp
lcall
jp
and
push
jle
or
aam
xchg
cltd
xor
out
fwait
xor
fiadds
insl
sub
les
xchg
clc
sub
pop
push
incl
test
dec
ja
dec
mov
sarb
imul
fisttpl
shlb
sahf
jl
mov
in
js
xor
sub
aam
pop
shll
cmp
lock
call
jp
lock
clc
aas
sub
lods
in
ja
test
int
sub
jmp
cmp
test
lods
push
xchg
jmp
cs
outsb
fsubp
and
mov
pop
pushf
aad
aam
mov
lock
cld
dec
mov
sbb
xor
repz
aad
push
pop
int3
push
lcall
sbb
stc
ss
es
adc
add
popa
jp
dec
pop
cmpsl
push
cld
xor
iret
mov
jmp
ds
pop
test
sbb
decl
std
sbb
scas
subl
dec
sub
xor
clc
ja
call
sbb
push
jmp
add
enter
cmp
std
gs
mov
mov
push
xchg
mov
mov
inc
xlat
adc
mov
sbb
rorb
xor
sub
fsubl
outsb
push
pushl
jns
add
dec
push
inc
xor
sub
inc
push
rcrl
movsl
adc
ds
lret
icebp
std
mov
idiv
xchg
js
scas
add
mov
push
jnp
lock
jp
and
out
sbb
jmp
aas
sub
dec
adc
xor
pop
in
insl
jae
pop
add
call
sub
in
mov
lea
pop
mov
xchg
mov
xchg
inc
inc
sub
call
mov
arpl
pop
mov
and
lock
pusha
mov
aad
daa
dec
aam
pop
dec
add
ljmp
cmp
idivl
enter
cmc
or
movsl
imul
cmc
dec
jg
xchg
add
pop
jmp
repnz
inc
movsb
bound
cmp
fdivl
pop
add
and
or
lcall
inc
lea
cli
xchg
imul
mov
cs
mov
mov
mov
or
mov
fs
mov
xor
mov
lea
iret
xor
test
xor
decl
adc
insl
and
test
inc
xor
xchg
fbstp
sarl
lds
mov
mov
cmpl
inc
movsl
cltd
cmpsl
and
add
mov
call
and
dec
pop
ss
xor
mov
pop
xor
dec
hlt
mov
push
sar
pushl
imul
cli
imulb
mov
in
sbb
rcrb
sbb
scas
clc
decl
aas
or
xor
mov
mov
push
mov
in
outsb
scas
out
mov
ja
dec
pusha
cmp
ds
js
sbb
push
xor
decl
mov
xlat
ljmp
jns
jg
push
add
cli
fcmovb
xchg
clc
test
out
jg
mov
xchg
test
movsb
loopne
aad
aas
pop
pop
push
out
adc
cmp
add
ljmp
pop
sti
popa
jo
fstps
lds
xor
mov
sbb
lds
jo
dec
fistl
sub
incl
fs
data16
outsb
outsl
xorb
or
les
dec
xchg
xchg
repz
add
inc
dec
jmp
inc
shll
xchg
and
mov
xor
sti
enter
ds
mov
jns
and
test
pop
cmp
or
jg
incb
adc
sub
pop
mov
dec
jmp
push
mov
lods
sbb
xor
push
pop
xor
jno
int3
xor
stos
push
std
ljmp
mov
jl
cltd
fildl
lods
in
cltd
out
xchg
jno
xor
push
jbe
jb
pop
fdivs
iret
shlb
aad
stos
movsb
mov
jmp
add
mov
lret
sub
xorb
imul
push
mov
jg
decb
sti
mov
jle
cld
jb
out
decl
sub
lret
push
pop
aad
adc
inc
lods
jmp
lods
ljmp
sub
sub
stos
xor
repz
mov
mov
sub
out
sub
push
stos
imul
jmp
mov
add
adc
pusha
loop
decl
daa
dec
dec
push
into
shl
iret
enter
xchg
test
lcall
fnstsw
iret
jecxz
and
jmp
gs
fisubl
xor
aad
jg
pop
out
test
and
sbb
and
pop
jmp
pop
test
cld
jg
les
mov
movsb
stc
rorb
xor
lods
in
imul
adc
and
call
fisttps
push
pop
fbstp
push
mov
dec
dec
ss
cmp
cmc
pushl
dec
ror
xchg
stos
xor
aaa
inc
or
in
rcll
gs
mov
lcall
repnz
mov
adc
loopne
push
lahf
xor
mov
push
imul
popa
mov
xchg
ljmp
sbb
push
stc
xchg
xchg
loop
shlb
js
cmp
lds
mov
fwait
jmp
movb
aas
clc
into
and
xchg
adc
pop
mov
sub
loop
xchg
push
add
dec
xor
mov
xchg
push
adc
or
fs
push
sub
adc
add
lcall
sbb
adc
scas
mov
jno
aam
mov
je
or
mov
inc
popa
roll
adc
fbstp
nop
repz
daa
lahf
je
pop
jl
popa
mov
add
out
adc
lret
xorl
pop
mov
pop
popl
mov
stos
out
outsb
out
icebp
and
cwtl
data16
pushf
incl
aaa
ror
sub
popf
lds
xchg
jge
xchg
dec
inc
push
shlb
add
lcall
fdivl
sbb
inc
in
scas
adc
dec
movsb
dec
stos
inc
and
or
call
and
cltd
inc
xchg
lcall
sub
repz
or
mov
jns
in
mov
idiv
pop
sbb
stc
inc
jg
push
mov
fiadds
push
pop
pop
ljmp
xchg
sbb
fcompl
xorl
mov
vmovupd
adc
stos
dec
fwait
movsl
cmp
jecxz
and
test
adc
shrb
pop
cmp
sbb
adc
pop
sbb
sub
ss
hlt
adc
aaa
inc
int3
fs
mov
xlat
aam
clc
pop
cmpsb
push
aam
inc
repz
jno
dec
cli
lcall
jg
sarl
pop
mov
sub
addr16
pop
cld
mov
shlb
push
mov
mov
push
xchg
xchg
iret
fbld
push
in
ret
dec
mov
out
xchg
inc
fadd
adcb
push
aas
loop
stc
inc
jp
fidivl
jmp
dec
pop
sbb
lea
cwtl
add
add
scas
mov
loop
fxch
adc
push
cmp
jg
fildll
addr16
push
dec
and
jns
loope
push
loopne
add
lret
cmp
hlt
fistl
cmp
mov
mov
xor
xchg
cmp
outsl
jge
cmpl
shlb
lret
inc
js
jb
cli
scas
scas
mov
push
ljmp
nop
lods
jo
or
inc
push
test
mov
lret
mov
jg
cmp
jecxz
and
sub
nop
push
or
das
lret
dec
in
sti
add
call
and
xchg
xor
adc
jae
sub
mov
int
sub
inc
test
sar
jmp
cli
xlat
pop
ljmp
fistpl
push
mov
xor
ficoml
test
incl
xor
shlb
lret
subb
ja
rclb
stc
xchg
filds
push
rcll
sbb
dec
inc
lods
in
mov
int
cmc
adc
outsl
xchg
inc
iret
mov
decl
push
and
scas
or
rcll
pusha
xchg
mov
push
arpl
daa
pushw
add
das
mov
mov
cmpsb
je
std
adc
pop
mov
loopne
andb
jno
cld
jmp
pop
lods
dec
mov
inc
mov
sub
pop
les
pop
jg
mov
cmp
pop
or
ja
ljmp
sbb
add
hlt
in
jmp
insl
push
jbe
push
cmp
sbb
fwait
push
test
lahf
dec
dec
shll
cmpsl
cwtl
adc
in
and
decl
mov
inc
icebp
mov
xor
loope
mov
arpl
out
inc
lret
ss
call
jns
xchg
int3
outsl
add
pop
mov
mov
sub
mov
mov
int
add
push
pop
jo
lds
cmp
adc
cmp
xor
ljmp
jbe
in
fsubr
sbb
sbb
jle
imul
ret
sar
pushl
add
stos
pop
mov
mov
adc
fdiv
in
push
decl
lret
mov
jnp
mov
test
mov
call
mov
cltd
sub
adc
push
int
psllq
push
repz
sbb
pushl
scas
adc
pop
stos
inc
pop
lock
test
daa
pop
aam
cmp
jg
sbb
jg
lods
scas
imul
outsl
fnstcw
xorb
fdivl
aad
cwtl
enter
adc
mov
jmp
enter
movsb
xor
lock
mov
cmp
pop
or
cmp
loopne
push
scas
fbstp
js
add
inc
repnz
jle
sub
pop
aad
call
fisttps
or
mov
std
outsb
enter
or
mov
incl
mov
out
add
mov
jle
ljmp
inc
pop
mov
call
add
and
jecxz
movsb
out
xchg
and
mov
mov
aaa
data16
mov
cmp
cmp
sub
sbb
movsb
fwait
psllw
fstpl
call
inc
cwtl
int3
lods
ja
add
push
pop
cwtl
imul
pusha
outsl
xchg
lahf
mov
call
mov
stos
fnsave
sub
push
outsb
xchg
mov
jb
jge
les
mov
xor
enter
mov
out
imul
add
ret
mov
jne
mov
cmp
inc
push
push
pop
xchg
xor
jmp
sti
mov
push
sub
dec
add
pop
scas
jnp
cli
fadds
pop
stc
pop
or
mov
clc
inc
sar
and
jmp
stc
push
mov
sbb
pop
pop
out
jo
lcall
and
xchg
xchg
xor
test
cli
decl
mov
xchg
in
lea
sahf
xchg
pop
lcall
dec
pop
ret
outsb
push
inc
aam
jbe
icebp
jne
mov
pop
insl
xchg
mov
in
js
jne
arpl
cmc
sub
sbb
mov
mov
pop
popl
jb
xchg
insb
lds
jmp
add
mov
out
sub
insl
pop
xchg
aad
or
cmp
mov
das
outsl
mov
mov
xor
mov
lea
fsubrs
call
lahf
ret
pushf
jbe
dec
jb
rcrb
loop
cs
in
push
pop
pop
add
jmp
repz
int
add
pop
pushf
icebp
sbb
dec
cltd
pop
aas
aam
dec
outsb
cli
insb
lcall
add
pushl
jb
scas
es
and
mov
rcll
jg
popw
pop
cmp
movsl
cmc
outsb
xor
inc
push
mov
out
ja
sti
mov
cld
fstpl
sub
out
scas
jle
dec
popf
fldcw
clc
mov
lock
cmc
ljmp
fs
pop
cmp
lcall
clc
nop
stos
pop
dec
loop
call
cwtl
and
jp
push
fistpl
insl
or
inc
aaa
gs
lods
scas
push
ljmp
cltd
arpl
test
roll
inc
or
fisubs
mov
shrl
les
ljmp
cmp
int3
or
repnz
fidivrl
xchg
js
mov
decl
shr
lahf
leave
inc
xor
pushf
out
sbb
scas
push
fistpl
je
jmp
incl
inc
or
loope
sbb
ror
mov
and
repz
shrl
fbld
adc
in
lds
mov
rol
sbb
mov
inc
jmp
mov
stc
shl
in
testl
adc
adc
icebp
cld
daa
or
mov
mov
adc
mov
decl
or
push
outsb
sbb
out
dec
or
fs
call
xor
mov
rclb
jl
leave
pop
fwait
add
aas
lcall
pop
test
addr16
test
sub
aad
jno
dec
in
imul
adc
imul
call
inc
cmc
in
ss
ret
cmp
mov
mov
cli
hlt
ret
call
cld
incl
mov
pusha
inc
jmp
xor
and
into
sarb
stc
push
sbb
mov
decl
fwait
bnd
imul
add
add
xchg
cwtl
movsl
mov
jecxz
mov
out
repnz
es
cmpsb
stos
inc
in
insl
mov
or
ja
dec
fcmovne
stc
imul
ret
pop
shlb
test
pushl
daa
sub
and
out
push
dec
sbb
dec
pop
sbb
jl
test
jp
jg
stc
mov
sti
sub
sub
lods
pop
or
ljmp
lods
and
into
stos
sub
xchg
sbb
test
aam
mov
aad
mov
xor
call
pop
push
test
les
xchg
mov
jb
je
fildll
ror
cmpsb
adcl
xchg
lcall
push
mov
ljmp
sbb
add
loop
sub
pop
jo
insb
dec
pop
push
dec
cld
dec
jge
aad
jo
test
or
int
sbbl
fcomip
negl
shlb
adc
mov
sbb
ds
sar
ss
lcall
mov
mov
and
jne
mov
inc
push
inc
xor
adc
lcall
jmp
xor
pop
int3
stos
dec
sbb
mov
cmp
ljmp
inc
test
imul
decl
repnz
mov
fnstenv
push
or
ss
les
push
pusha
add
jmp
cmp
push
inc
insb
fs
and
push
mov
data16
lds
or
repz
bound
inc
bound
loopne
decl
das
cmp
mov
mov
pop
fcoml
and
and
pushl
sar
jnp
cld
in
cwtl
pop
hlt
mov
out
sbb
int
jns
negb
fsubrs
ljmp
icebp
insl
es
imul
outsw
loope
cld
push
sbb
sbb
mov
push
jo
inc
inc
ds
fs
repnz
jmp
outsb
sub
fwait
xor
mov
mov
pop
push
cli
call
sahf
testl
cld
inc
and
pop
ss
mov
incl
push
js
mov
push
cltd
xor
jmp
push
call
adc
pop
hlt
ljmp
pop
mov
leave
add
mov
mov
sub
es
adc
or
call
mov
mov
xchg
je
and
mov
nop
push
xor
push
mov
or
bound
cld
sub
mov
incl
mov
cmpsl
sti
jo
jp
bsr
pop
jge
pop
push
and
loopne
in
insb
push
mov
outsl
push
mov
lcall
icebp
ds
ljmp
call
bound
mov
mov
pop
dec
push
jmp
packssdw
in
mov
inc
scas
sti
dec
cltd
inc
lods
pop
pop
cmp
adc
cmp
and
push
push
cmp
cmpb
jno
inc
xchg
aas
mov
incl
fwait
ljmp
and
pop
fsubl
push
stos
push
jg
push
cmpsb
push
imul
lds
imul
cmp
xor
rcrb
or
lcall
mov
sub
out
inc
jne
fldt
push
aas
inc
ds
xchg
jmp
scas
ror
cmp
in
arpl
jmp
fs
fsts
gs
xchg
push
pop
mov
inc
mov
push
rcll
inc
decl
lock
cmp
imul
mov
cld
sbb
sub
in
sarb
lea
loop
cli
mov
in
dec
enter
repz
out
jmp
mov
sub
aaa
sbb
sub
add
mov
jmp
inc
loope
cs
jnp
lods
adc
out
jg
jecxz
aaa
jns
sbb
mov
or
out
sbb
ret
add
jge
decl
in
lea
add
iret
xchg
dec
stc
fs
sub
ljmp
loope
pop
lret
mov
pop
cmp
aam
cmp
fisttpl
arpl
inc
imul
push
ljmp
push
inc
jns
add
and
jno
fsubl
push
push
add
outsl
les
lcall
cmpl
sbb
lea
or
inc
cwtl
cmc
iret
mov
call
movsl
add
mov
mov
jge
lds
xchg
pop
fistpl
push
sub
push
jns
sarl
incl
fisubrl
adc
in
add
pop
push
ret
mov
pop
in
std
call
cmp
or
aam
movsb
mov
bound
incl
insb
in
iret
adc
imul
mov
pop
jns
mov
push
mov
dec
mov
ljmp
clc
iret
jmp
test
sahf
add
mov
pop
roll
popa
push
outsl
xor
cs
mov
enter
movhps
sbb
aaa
xor
sub
jbe
fcomip
inc
repnz
pop
xorl
jb
les
out
leave
rcr
jmp
push
fistps
xchg
xor
mov
rolb
inc
mov
ja
mov
inc
test
cmp
imul
stc
mov
pusha
jle
xchg
mov
out
inc
jmp
jbe
inc
aam
cmc
xchg
je
test
pop
mov
ret
add
jg
cwtl
xchg
mov
mov
mov
or
jle
xor
in
lods
jle
incl
adc
aaa
pop
cmp
ret
out
sub
push
test
test
call
enter
cmp
loop
insb
subl
es
add
ljmp
or
inc
pop
icebp
out
daa
outsb
call
mov
fisubrl
adc
adc
jg
sbb
mov
in
jne
mov
ds
and
push
shl
nop
clc
icebp
cmp
xchg
in
int3
xor
test
lahf
inc
inc
outsl
and
out
in
out
insl
pop
sub
scas
add
rorb
stos
test
scas
cmpsl
ljmp
fs
fs
insb
jle,pt
fcomps
adc
xchg
loopne
pop
xchg
lcall
sbb
mov
pop
pop
js
dec
dec
inc
lahf
mov
insb
xor
xchg
sarl
jmp
sub
add
dec
and
pop
stos
or
mov
call
sti
cmpb
push
and
lahf
ret
lcall
fisttps
jb
xchg
mov
jmp
sbb
xorps
imul
lahf
lcall
sbb
dec
test
inc
dec
in
sbb
lcall
sbbb
frstor
add
mov
out
jne
aam
push
lods
imul
aam
pop
mov
sbb
jns
lret
stos
mov
outsl
mov
mov
sub
adc
mov
pusha
mov
roll
jmp
lock
push
pop
pop
jnp
bound
movsl
adc
fistl
pop
or
pushl
adc
push
lock
inc
jns
push
push
addl
lcall
aad
test
xor
push
add
jo
dec
or
xchg
into
imul
inc
add
inc
out
andb
cmp
sbb
ljmp
push
and
out
xchg
pushf
std
jmp
aas
mov
fmuls
cwtl
mov
mov
stos
xchg
sti
mov
movsb
sti
je
pushf
fstps
into
push
jo
pusha
inc
pop
daa
xor
out
stos
aaa
push
xchg
pop
mov
ss
xorl
push
imulb
outsb
xor
mov
mov
shl
inc
insl
or
rolb
or
cmp
mov
lcall
ret
lods
sbb
xchg
insb
and
scas
ret
jp
push
jmp
cmpb
add
std
cld
xchg
imulb
xor
sub
push
pop
dec
adc
ljmp
mov
test
mov
movsl
and
sub
aas
dec
push
mov
pop
outsl
inc
mov
pop
scas
xchg
xchg
ret
insl
or
fmull
mov
pop
xchg
decl
mov
sbb
mov
xchg
and
call
out
scas
xor
sub
int
out
js
mov
sbb
jecxz
fs
sub
add
push
push
arpl
jg
iret
xchg
repnz
jmp
push
icebp
mov
in
sub
cmp
decl
test
jge
or
inc
add
push
mov
pop
ljmp
cli
call
sbb
nop
loop
test
jo
fwait
sahf
cmp
sbb
mov
or
pop
test
cwtl
lea
ljmp
jg
decl
iret
xor
not
nop
out
sbb
sti
jl
sbb
cmp
lds
sbb
ljmp
or
lea
aad
pop
mov
dec
mov
movsb
or
inc
in
in
sub
fwait
dec
sbb
inc
jl
sub
test
stos
les
leave
ljmp
xchg
sarl
sarb
jmp
daa
out
mov
imul
mov
call
mov
pop
cmpsb
mov
sub
sbb
mov
stos
xchg
mov
pushf
jb
in
sbb
ljmp
lods
push
adc
xchg
or
decl
int3
or
or
fcoml
cmp
add
xchg
lcall
pop
pusha
daa
push
cltd
call
xor
sbbb
mov
add
sub
sub
cmp
adc
mov
pushl
ret
sub
repnz
mov
mov
cmpsb
add
mov
jmp
dec
mov
sbbl
sbb
lods
in
add
cmp
cmp
ljmp
fstl
shll
mov
sbb
inc
and
movsb
insb
push
add
push
cld
sti
cwtl
xlat
scas
hlt
pop
adc
adc
mov
pop
push
aad
jmp
repz
dec
xchg
sbb
inc
lods
inc
cmp
mov
test
sbb
call
std
aad
cwtl
sub
mov
mov
mov
ss
aas
fdivl
mov
or
int3
jg
rcrb
in
aaa
popa
lret
xchg
pop
sbb
rcrl
clc
jmp
and
xchg
pop
xlat
mov
pop
pop
lret
sub
jecxz
movsb
mov
or
pushl
inc
add
ret
push
out
incl
cld
push
pushl
enter
pop
dec
fisubrl
fs
pop
cltd
jbe
jmp
int
repz
jbe
jns
in
gs
add
dec
ljmp
jg
xchg
cmp
sbb
push
cmp
mov
xor
out
push
dec
adc
shr
jg
jg
pop
orb
les
insb
out
icebp
sub
pusha
add
rorb
cmp
jb
loopne
cmp
adc
and
sti
stos
or
clc
add
or
mov
adc
stos
mov
xchg
shrl
sbb
pop
cmc
call
mov
test
mov
imul
outsl
mov
mov
mov
lods
push
xor
cwtl
int
movsb
mov
sbb
jmp
popl
scas
add
or
imul
loope
sub
out
ljmp
outsl
xchg
sbb
jg
jmp
ljmp
mov
sub
sub
into
out
pop
add
in
dec
inc
inc
std
fnsave
xchg
or
test
or
ljmp
shl
test
bound
mov
fadd
movsl
call
cli
or
cmp
dec
in
xor
add
ljmp
mov
xchg
mov
inc
gs
cmpb
mov
lods
out
pop
and
and
push
cwtl
jns
pop
cmp
adc
push
popf
xor
je
fsub
popf
push
ja
mov
xor
loope
add
imul
dec
mov
xchg
xchg
sbb
cmc
pop
add
data16
push
incl
pop
xchg
adc
push
jmp
lods
cmpsl
iret
testb
jle
cltd
lcall
dec
decb
pop
lock
lret
dec
inc
push
loop
cmp
loop
cmp
inc
inc
mov
sbb
xor
jb
fistpll
xlat
jle
loope
mov
in
xchg
fldl
shrl
les
int3
xlat
pop
lods
and
sub
or
ljmp
sub
mov
cld
in
adc
cmp
jbe
pop
arpl
cmp
push
mov
or
xchg
xor
jae
adc
in
fdivrp
push
std
mov
xor
push
nop
and
lds
nop
cli
adc
pushl
sub
dec
push
cmc
jb
mov
mov
and
test
mov
ljmp
rol
call
xchg
gs
push
cmp
jg
lahf
lods
bound
icebp
sbbl
loopne
mov
jge
dec
mov
mov
cmp
lcall
sub
frstor
xchg
mov
movsl
push
in
and
imul
mov
adcl
pop
jp
fsubr
ljmp
and
pop
jb
inc
pop
mov
xor
xchg
inc
mov
lahf
mov
ss
or
mov
sub
ljmp
outsl
mov
sbb
push
shrl
test
scas
je
cli
arpl
xchg
subb
inc
std
pushl
xorb
xor
sar
lcall
mov
or
cld
ljmp
ljmp
push
ffree
in
vcvtpd2psy
pop
or
lods
jo
loopne
push
push
mov
mov
mov
iret
xchg
incl
sub
mov
out
rol
aas
cmpb
jnp
rcr
inc
scas
addr16
decl
mov
roll
cmp
int
cltd
cmp
sbb
mov
mov
cli
or
mov
mov
add
adc
jge
ss
add
cmpsb
fs
lcall
sub
out
cli
and
scas
ja
mov
js
incl
pop
leave
test
insl
push
push
stos
cmp
popf
xchg
inc
stos
pop
push
jbe
cmp
or
daa
sbb
inc
pop
pop
shlb
jge
pop
adc
cmpsb
popf
scas
cli
addr16
push
cld
or
mov
test
xchg
add
mull
sub
or
or
dec
in
and
push
dec
pusha
xchg
test
in
cwtl
call
nop
jne
pop
mov
add
pop
ret
sbb
punpckhdq
or
enter
incl
add
and
in
sub
fdivrl
jns
lea
scas
xorl
rcr
dec
jns
and
clc
decl
adc
xlat
imul
inc
in
data16
lcall
mov
enter
mov
loopne
fs
test
lcall
addr16
int
sbb
incl
ljmp
mov
ljmp
lods
loope
sub
adc
pop
push
loope
out
or
cmp
sbb
xor
lods
fstps
xchg
xchg
lahf
in
push
jmp
jle
push
mov
xor
mov
insl
cmpsl
xor
pop
sarb
sbbl
jp
pushl
pop
adc
stc
rcrb
icebp
lahf
push
enter
pop
mov
sub
incl
sub
imul
int3
cs
into
sbb
fidivrl
sbb
and
ljmp
push
sbb
add
fwait
mov
out
push
xchg
jge
inc
cmp
icebp
push
push
sti
sarl
adc
xchg
test
mov
mov
call
andb
scas
movsl
fmuls
ret
shl
inc
icebp
add
add
mov
shl
dec
push
test
cmp
jg
xor
add
lcall
xchg
jns
pop
fnop
cmp
cmp
dec
idiv
cmp
push
add
fldl
push
andb
xrelease
lods
arpl
pop
jne
or
cmp
dec
sbb
ljmp
popa
leave
lods
xchg
or
jge
movsl
test
clc
fistps
pop
repnz
in
pop
and
sbb
idivb
jbe
adc
incl
sbb
fst
sub
pop
cmp
sub
mov
je
jo
lods
clc
sbb
and
sub
stc
insb
xchg
pop
icebp
loope
xor
call
popf
movsb
pop
dec
aam
xchg
cwtl
adc
cmp
aas
adc
cmpsl
icebp
cmpxchg
adc
decl
das
mov
rcll
and
and
xchg
pop
out
fcomip
inc
push
or
lret
test
dec
xchg
lret
fwait
inc
psubq
dec
add
jmp
jp
daa
mov
aad
xor
or
arpl
and
testl
jbe
inc
inc
sar
jmp
test
shl
xor
lcall
dec
push
dec
imul
cmp
fsubp
sbb
adc
xchg
cmp
push
aaa
pop
dec
add
mov
and
call
gs
xor
mov
out
cmp
xchg
xchg
sahf
dec
xchg
adc
sub
dec
aaa
xchg
adc
nop
imul
clc
loopne
dec
lret
inc
mov
loop
jae
test
add
xchg
mov
rcr
push
lock
inc
dec
inc
jge
enter
cmp
subl
call
popa
mov
repz
fnstenv
jmp
or
sub
mov
lret
hlt
test
push
popl
mov
aad
dec
in
sbb
incl
test
xchg
sbb
out
sub
xchg
fisubrl
shr
sub
int
mov
pop
les
sar
jmp
cmpsl
sbb
inc
jae
testb
fwait
test
mov
dec
daa
loope
mov
mov
mov
sub
add
jl
hlt
pushf
imul
and
sub
cld
call
jecxz
xchg
and
daa
jle
xchg
xchg
aad
jns
jge
clc
xor
cmpsb
push
cmovg
jg
and
sbb
iret
or
sbb
add
pushl
push
mov
rcrb
fnstenv
adc
gs
sti
jb
inc
inc
lcall
or
call
and
add
adc
add
popf
and
xor
nop
mov
add
incl
sbb
filds
popa
or
outsb
enter
and
sub
mov
adc
xlat
jb
ret
call
inc
roll
push
lcall
inc
imul
inc
lods
xor
sub
dec
call
pop
or
and
push
std
xchg
xor
ret
cli
mov
out
push
dec
test
add
lcall
sbb
je
push
outsl
loopne
sbb
mov
test
mov
mov
mov
xchg
sbb
inc
cmp
shrb
or
sar
into
xor
push
enter
lret
cmc
outsb
loopne
dec
aad
pushf
icebp
inc
int
stos
and
incl
imul
xchg
push
add
orb
mov
rorb
mov
outsb
mov
xchg
mov
ja
xor
mov
mov
roll
jmp
pop
mov
pop
subl
or
lret
push
lds
mov
push
movsb
sti
push
add
pusha
xchg
sti
rolb
jnp
ret
lock
call
test
ljmp
xchg
cmp
movsb
fdivs
jle
sub
imul
clc
sub
pop
adc
repnz
pushf
inc
pushl
or
mov
or
jo
jmp
jo
and
mov
xor
jg
lock
dec
sub
incb
xor
rclb
pop
out
inc
jmp
jne
stc
divb
jl
xor
stos
push
dec
mov
adc
push
incl
lcall
and
mov
fcmovnb
lahf
lahf
cmp
roll
mov
dec
pushl
pushl
jbe
add
add
nop
push
xchg
pushf
stc
adcb
mov
push
je
out
shll
popf
mov
adc
jno
ret
inc
shll
outsl
aaa
int3
lods
gs
scas
in
pop
out
pushl
lods
test
and
icebp
inc
pop
ja
push
fnstenv
dec
aam
jge
jns
je
movsb
cmc
lret
decl
jle
mov
and
bound
xchg
in
shll
into
in
add
adc
jmp
cmpsl
lahf
popf
or
pusha
ret
cmc
pop
div
stos
lea
jb
iret
jmp
mov
lcall
pop
outsb
push
aad
dec
xor
sub
inc
xchg
cvttps2pi
stos
vaddss
imul
andps
add
stos
sbb
loope
outsl
jg
inc
sahf
pop
xlat
jp
mov
mov
fsub
mov
faddp
xor
rolb
adc
insl
cld
add
out
cs
sub
mov
and
pop
in
lock
pop
sbb
popa
dec
icebp
imul
out
or
jmp
push
lea
mov
adc
inc
cmp
lahf
mov
shlb
cmc
mov
lcall
scas
and
xchg
ret
jnp
mov
aad
jge
outsl
jl
out
sub
cli
lcall
out
gs
mov
jne
leave
push
inc
in
test
jecxz
jne
ljmp
jmp
or
and
cwtl
lea
dec
mov
and
push
and
push
jnp
enter
imul
aad
mov
adc
fidivrl
add
push
cld
jnp
or
int3
jns
jge
mov
mov
jns
and
imul
aaa
sbb
iret
cli
movsb
imul
mov
ljmp
mov
sbb
int3
addl
mov
cltd
mov
mov
sti
jnp
pushl
cmp
ljmp
sbb
cmc
dec
add
adc
or
sub
ljmp
test
addr16
cmp
int3
mov
push
imul
sub
push
adc
pop
sbb
repz
push
mov
mov
inc
hlt
loope,pn
mov
decl
aam
loop
mov
movsb
pop
addr16
mov
pop
or
lcall
lret
cmp
and
add
insb
addr16
or
pusha
mov
sub
icebp
dec
mov
mov
hlt
mov
xor
data16
cmp
push
cltd
pushl
leave
cmpsl
mov
cwtl
xor
pop
out
shr
scas
leave
je
dec
xchg
jecxz
ret
mov
outsl
clc
out
xor
icebp
dec
cmp
push
xchg
icebp
in
mov
mov
inc
xor
subb
mov
pop
fwait
in
sbb
rorb
aas
out
mov
adc
adc
das
sbb
sbb
call
mov
inc
daa
fs
pop
in
push
int
mov
movsl
jae
jg
or
decl
pop
push
imul
sbb
xchg
vpmulhuw
xchg
leave
mov
xor
out
cli
cmp
loopne
jge
loopne
rcr
stos
iret
cmp
rcll
and
decl
mov
xorl
pop
push
mov
into
lea
mov
inc
ror
iret
repnz
cmp
ljmp
jmp
lock
out
sbb
outsl
stos
lods
lods
jg
out
stos
insb
daa
adc
test
ja
jmp
icebp
rolb
cld
cmc
idivb
add
jl
cltd
adc
pop
decl
jmp
jle
cs
popf
adc
mov
test
mov
in
shrb
popf
push
ljmp
mov
addr16
ret
xor
sub
in
or
in
jmp
lods
jb
test
push
imul
loopne
sub
hlt
sbb
subb
leave
pusha
mov
pushl
cld
fwait
popf
hlt
cmp
es
and
dec
aaa
xchg
addb
call
icebp
je
sbbl
fistpll
rorl
push
pop
mov
sub
dec
aaa
push
clc
mov
into
fadd
mov
xchg
rorb
jmp
jl
mulb
ds
je
jne
dec
mov
jmp
leave
loopne
andb
scas
insb
shrb
cwtl
inc
adc
repz
xor
incl
add
in
jno
sbb
push
aaa
pop
inc
scas
jmp
sbb
leave
mov
dec
jae
mov
add
stos
lahf
mov
paddsw
jbe
in
and
aam
decl
cltd
vmwrite
cmpsb
fdivrs
inc
cld
push
outsb
cli
push
xlat
mov
or
mov
jge
rorl
mov
lcall
testl
test
test
dec
jb
ret
ljmp
loopne
xor
push
push
or
aad
mov
outsl
ljmp
test
lock
jle
mov
aad
and
push
mov
jl
jmp
movsl
int3
daa
fwait
jo
jo
icebp
add
inc
jo
mov
adc
mov
call
dec
shll
dec
out
pushf
push
and
leave
outsl
out
jae
test
cmp
xchg
in
aas
movsl
das
scas
pop
cmp
inc
jae
and
pop
aaa
loopne
imul
incl
cld
call
repz
xchg
cwtl
or
shll
lock
daa
mov
dec
jmp
mov
lcall
jmp
jle
mov
and
jl
pop
stos
push
push
push
cld
add
jno
repz
sbb
pushfw
cmp
lea
or
das
rclb
mov
sti
mov
mov
pop
pop
or
ljmp
jl
std
push
lds
rorl
xlat
mov
jnp
xchg
inc
aas
and
jmp
mov
jle
test
sub
scas
iret
inc
movsb
pop
xor
cmc
or
mov
sub
out
push
decl
stos
sbb
mov
rorb
call
lret
pop
push
out
pop
mov
xor
adc
int3
mov
jmp
pop
or
aam
sub
fldenv
cmpl
add
cmp
mov
iret
sti
push
or
mov
pop
cmc
xchg
in
sbb
fcmovu
sti
scas
jge
aas
dec
movsb
aaa
adc
hlt
xor
and
cmp
pop
inc
sahf
sub
addr16
jg
xor
jg
movsl
jb
movsb
mov
clc
mov
aad
in
xlat
sub
cmp
sub
lcall
xchg
sbb
dec
add
add
leave
dec
mov
mov
jns
and
xor
push
fwait
xchg
sub
push
imul
mov
ret
cmp
out
fndisi(8087
aas
mov
inc
lahf
inc
aad
xor
clc
fdivrp
pushl
adcl
push
push
fneni(8087
sbb
dec
sub
mov
xchg
xorl
cmp
aaa
jg
sbb
xor
fcomip
fdiv
push
push
negl
jl
imul
popa
call
loopne
jle
popa
sub
jle
xor
push
aam
sub
decl
cmp
push
sub
adc
jge
mov
ret
sbb
pushl
jbe
iret
xchg
in
sub
adc
lods
inc
and
jnp
or
sbb
pop
call
das
dec
sbb
es
insb
mov
cmp
clc
adc
je
cmp
xor
jg
incl
mov
mov
mov
addb
sub
pushl
jl
jbe
mov
and
imul
cmc
or
jg
jle
and
call
mov
lahf
cmpxchg
xchg
cmpsb
add
arpl
repz
js
and
sar
incl
xchg
pop
sbb
pop
test
add
mov
cmc
jae
cmp
loope
pop
inc
pop
incl
jge
mov
mov
imul
jnp
adc
aaa
out
es
sub
push
xchg
stc
adc
and
push
loopne
ja
idivb
sbb
pushl
cmc
xorb
cmpsl
loop
lret
xor
adc
dec
orl
fisttps
and
jge
call
dec
roll
jbe
pusha
js
sub
std
add
lods
push
push
mov
mov
popf
lcall
outsl
and
test
pushl
dec
or
pushf
sub
jns
movb
and
and
incl
negl
inc
cmp
push
pushf
or
roll
call
xor
lock
addr16
sub
lock
scas
rol
push
adc
dec
push
popf
imul
sub
or
gs
dec
mov
lods
popf
mov
mov
shll
push
xchg
mov
push
xlat
mov
sbb
push
adc
not
mov
jecxz
je
aaa
jecxz
pop
repz
call
xor
aam
ljmp
imul
es
xchg
xor
adc
lcall
or
mov
cmp
inc
fcmovnbe
fwait
push
sbb
call
nop
sub
dec
dec
mull
sub
push
jo
pop
dec
stos
and
ljmp
dec
addl
stos
sub
es
mov
xchg
and
lret
mov
lock
test
stos
test
adc
mov
sbb
repnz
jg
incl
ret
outsb
scas
aas
xlat
push
inc
leave
jl
jmp
push
xor
loop
cmpb
jo
inc
imul
mov
mov
jle
in
scas
xchg
inc
ss
add
out
test
sbb
sbb
mov
push
cmp
lods
mov
jo
aam
mov
ret
inc
sub
out
ljmp
add
sub
mov
sub
in
adc
jns
pushl
sti
scas
arpl
ret
xorb
les
dec
adc
jge,pn
lcall
lock
mov
fdivrl
sar
pop
adc
jmp
push
pop
pushl
inc
fnclex
negl
sbb
or
insl
cmp
fists
cld
fiaddl
aad
in
add
sbb
hlt
lret
fwait
das
adc
ljmp
inc
sub
sub
shll
icebp
lret
lcall
test
cld
incl
cmpsl
cmp
les
and
mov
lock
add
mov
mov
xor
mov
in
in
mov
pop
sbb
xchg
imul
decl
bound
xlat
enter
mov
insb
int3
js
and
pop
pop
inc
mov
imul
add
adc
dec
xchg
or
cltd
mov
test
mov
cmp
sub
ja
and
or
sar
sub
out
ss
jno
incl
mov
stos
sub
scas
loopne
or
push
xor
decl
mov
mov
add
repnz
nop
jb
imulb
cmp
call
pop
fldpi
pop
fldt
sbb
xor
lret
or
cmp
outsb
lcall
xor
lret
xchg
xchg
enter
push
les
dec
fcoml
das
and
inc
and
ret
data16
pushl
xor
inc
pop
sbb
hlt
cmpsb
movsl
cld
sub
sub
push
add
push
cld
incl
inc
jmp
jo
jmp
mov
stos
cmp
icebp
inc
inc
lcall
jne
movsl
add
lea
xchg
pop
mov
and
mov
es
mov
jns
loopne
mov
decl
sbb
cmp
fldt
mov
sbb
jae
mov
xor
ret
incl
sarl
jmp
mov
mov
cmp
jge
inc
out
mov
jmp
es
enter
mov
mov
ljmp
push
push
cltd
fiadds
sbb
xlat
cmp
mov
jo
jecxz
mov
sub
cwtl
out
pop
insb
jno
mov
cli
or
push
out
pop
mov
les
enter
sti
in
jg
int
pusha
sub
mov
repnz
and
enter
scas
jno
inc
nop
adc
dec
pop
leave
repz
aas
outsl
sti
mov
pusha
mov
daa
mov
xchg
jns
int
cmp
inc
push
aaa
adc
stos
push
daa
cmp
sub
jecxz
lahf
xor
cmpsl
lret
mov
fidivrs
stos
adc
shlb
jecxz
mov
cli
mov
mov
lcall
clc
mov
xchg
je
int
add
push
pop
jg
test
cli
dec
test
or
leave
inc
call
inc
ret
mov
test
movlps
adc
xchg
sbb
popa
mull
cmp
sbb
inc
or
jnp
stos
mov
jmp
aam
and
scas
cmp
add
fimull
jp
decl
dec
dec
xchg
sub
push
dec
clc
call
ljmp
fsubrp
enter
xchg
outsb
mov
cmp
pushf
mov
cmp
pop
mov
or
stos
aaa
out
xchg
iret
push
lret
push
dec
jge
out
popa
and
call
inc
cmp
lods
call
sbb
imul
adc
lcall
sub
mov
xor
test
into
cmp
mov
daa
stos
fcos
decl
jl
xchg
sub
and
in
mov
pop
pop
cmp
mov
call
inc
jp
jo
out
mov
out
and
lret
jl
in
xor
mov
lock
xchg
pushl
add
test
nop
pop
out
jae
pop
mov
test
sbb
push
adc
ljmp
and
mov
mov
mov
mov
add
dec
cwtl
add
mov
dec
cmp
loopne
adc
lret
pusha
in
cmp
nop
adc
xchg
fsub
add
pop
out
inc
arpl
ljmp
repnz
fwait
test
push
movsl
fstl
stos
jmp
sti
inc
es
lock
lcall
dec
add
ret
fiaddl
jnp
push
jg
fs
repz
ds
es
lcall
inc
imul
das
pop
push
jp
cltd
rorl
xchg
ljmp
rcr
imul
pop
popf
sbb
je
in
repz
in
mov
lcall
sub
imul
je
xor
jbe
movsb
les
ljmp
dec
fldcw
xorl
inc
or
or
sbb
in
loopne
ljmp
mov
dec
add
mov
mov
mov
mov
xchg
cmp
lret
inc
test
jge
fisttpl
enter
fcomip
pushl
cmp
jno
jg,pn
pop
stos
out
xlat
addb
add
cmp
call
in
test
push
xor
pushf
mov
rcll
adc
dec
cmp
bsf
mov
mov
ljmp
out
jg
xlat
aad
mov
dec
pop
or
stos
or
mov
jecxz
test
sub
jg
pusha
add
mov
hlt
pop
jne
pop
xchg
std
in
inc
inc
sbb
pop
ret
loope
cmpsb
fimuls
jns
ljmp
jge
cmp
rcrl
std
out
jo
push
xchg
cmc
or
in
fimuls
call
fnstenv
pop
popa
add
jecxz
mov
xchg
jl
pushl
dec
clc
mov
jg
pusha
push
aas
xchg
cmpsl
mov
insb
lret
ljmp
pusha
data16
xchg
aam
lock
notl
adc
mov
or
mov
and
pushl
subb
cmpsb
fwait
rcll
mov
sbb
pop
ljmp
testb
pop
ljmp
outsb
out
and
in
cmp
mov
loopne
fistpl
jae
in
mov
mov
add
cmp
imul
ljmp
pushf
jno
xchg
adc
mov
jo
mov
imul
jmp
mov
push
jo
scas
xchg
rclb
icebp
sbb
fstpt
stos
fadds
insb
sub
stos
ss
adc
jmp
movsb
movsb
mov
dec
sbb
lcall
dec
cmpsb
arpl
loope
loope
or
push
out
push
xchg
dec
iret
mov
lcall
jns
negb
mov
mov
or
add
jg
lcall
mov
xchg
adc
stos
sbb
nop
cmp
test
sub
mov
stc
aas
and
dec
stos
lret
outsb
repz
sbb
pop
mov
and
lcall
out
xlat
xchg
dec
pop
iret
outsb
jns
dec
inc
xlat
pop
cmpsb
dec
cmpsb
ret
mov
add
shll
jecxz
xor
out
add
jg
cmpsb
imul
push
ret
sarb
xchg
pop
add
into
pop
jns
xchg
clc
imul
pusha
jbe
decl
pop
adc
stos
out
subb
cmp
and
test
add
nop
popw
push
fs
push
inc
inc
imul
mov
add
out
outsl
dec
pop
fdivrl
lret
call
mov
stos
cmp
pop
sahf
xor
push
jmp
pop
pop
jae
add
mov
or
add
adc
xchg
fnstcw
lret
cmp
pop
les
sub
pop
bound
data16
incl
inc
outsl
mov
sbb
ds
pop
sbb
add
outsl
insl
xchg
xor
pop
push
or
push
jb
mov
mov
mov
pop
inc
enter
cmp
js
jne
stos
push
stos
dec
popa
push
fmull
dec
iret
pop
adc
and
in
fs
call
pop
popf
xchg
or
subl
out
inc
cli
bnd
inc
mov
sub
sub
pop
std
or
mov
inc
lea
mov
cmp
mov
fbld
mov
stos
call
xchg
jo
mov
je
fstl
inc
insl
jae
repnz
cld
dec
sahf
pop
xchg
or
jp
or
inc
outsb
rorb
movsb
mov
loopne
fwait
dec
dec
in
call
outsb
cmc
iret
addr16
lods
add
insl
in
push
sbb
pusha
push
pop
xchg
jl
and
ljmp
das
popa
and
call
pop
out
scas
fbstp
xchg
aad
dec
adc
ljmp
orb
xor
rorb
pop
pushf
cmc
xchg
or
add
push
std
decl
mov
lret
xor
and
add
js
aam
addl
lcall
fs
jno
xchg
push
test
mov
imul
jp
lock
inc
mov
cld
pop
push
lock
push
hlt
shrw
push
cs
inc
xchg
imul
decl
fildl
test
mov
mov
fisttpl
gs
fisttpl
cmpsl
add
sbb
pushl
popa
fwait
xchg
addr16
out
push
push
dec
cld
insb
icebp
test
add
repz
xchg
ss
fbstp
sbb
mov
mov
cmp
lcall
icebp
jnp
dec
sbb
push
push
jbe
xchg
fmul
cwtl
xchg
sub
jo
dec
int
jno
push
jmp
inc
add
stos
adc
aaa
popa
dec
jbe
out
scas
xchg
add
inc
ss
orl
ljmp
movsb
test
loop
stc
cli
sbb
sub
add
fmul
pop
mov
jmp
mov
add
mov
mov
xchg
imul
mov
xlat
out
pop
cmpsl
fbld
jge
adc
dec
imul
mov
das
clc
decl
jo
or
test
pop
pop
or
mov
call
lock
outsb
xor
adc
sahf
and
pop
in
inc
movsl
ret
cli
jl
pop
data16
cmpsb
movsb
cwtl
dec
cli
decl
cmp
xlat
fisttpl
jbe
adc
cli
xor
xchg
dec
and
es
push
mov
icebp
aad
push
mov
arpl
push
jg
fisubs
iret
or
lock
push
mov
cs
mov
cltd
pop
or
out
sub
lahf
loopne
dec
cmc
mov
or
lock
fldl2e
or
aas
das
clc
cmpsb
cld
das
adc
insl
mov
cmp
call
loopne
add
push
and
dec
and
scas
xchg
mov
repz
call
cld
mov
jmp
into
les
out
out
or
inc
lret
xchg
mov
pop
push
push
xchg
push
dec
rcll
or
pushl
das
pop
out
clc
cli
scas
cli
or
arpl
in
sub
mov
push
lahf
sub
xor
jne
clc
cli
jge
pushf
pusha
adc
mov
nop
mov
cwtl
xchg
jg
jmp
or
pop
or
push
sub
sub
clc
outsl
mov
or
mov
stc
enter
ds
adcb
incl
ja
adc
nop
sbb
aas
sub
cmp
fwait
pop
ljmp
xchg
out
jb
adc
pop
test
lds
jecxz
incl
and
push
add
adc
mov
jmp
rcr
fstpt
dec
jp
jg
fistl
hlt
xchg
lahf
adc
jns,pt
into
inc
dec
clc
pop
mov
pop
pop
xchg
into
mov
dec
test
and
and
and
js
push
mov
cld
jle
xor
cwtl
aad
dec
fsubl
push
and
or
daa
pop
movq
aas
decl
lods
and
or
sbb
mov
adc
add
sahf
mov
call
lock
dec
add
rclb
cmp
dec
inc
push
rorl
or
out
jno
sub
decl
adc
mov
sbb
loope
cmc
pusha
leave
fistps
xchg
dec
in
push
sarl
clc
out
ficompl
fldl
or
scas
and
decl
data16
xlat
push
fwait
lret
sub
mov
dec
mov
dec
mov
lret
jg
insl
pop
xchg
sbb
sti
daa
sub
mov
inc
dec
call
push
push
sahf
xchg
mov
dec
test
add
notb
cld
pop
rcrb
sahf
stos
and
aad
adcl
ljmp
pushl
adc
mov
push
mov
mov
mov
gs
sarb
adc
xchg
aam
lods
adc
fwait
int
imul
decl
xor
cmp
test
cs
inc
push
rorb
mov
jnp
test
lcall
dec
leave
lahf
mov
xor
push
loopne
jecxz
jle
jne
pushl
nop
in
bound
add
test
mov
incl
adc
pop
push
lcall
ret
sub
lcall
aad
add
mov
lcall
jmp
std
divl
jns
or
pop
mov
incl
sbb
fs
orb
mov
hlt
add
jmp
sub
xchg
ja
cmp
pop
gs
lcall
push
mov
jns
mov
and
ds
ljmp
mov
aam
daa
mov
decl
jo
sti
imul
cmpl
xchg
jnp
out
test
repz
decl
cmp
jae
js
add
or
inc
pop
divl
mov
jle
xchg
daa
adc
loope
cmp
fbld
je
aam
fwait
and
sahf
scas
ret
scas
or
mov
lcall
incl
and
mov
push
mov
xor
sbb
lret
mov
cwtl
in
ljmp
test
xor
ljmp
out
ss
jle
dec
je
jmp
or
jmp
push
stos
into
jae
inc
mov
daa
in
pop
arpl
add
and
inc
and
mov
ljmp
cld
push
fsubrs
movsb
scas
mov
xchg
push
mov
lds
inc
or
pushf
shll
roll
and
cld
jno
adc
pop
mul
dec
dec
stc
in
sbb
lds
and
addr16
push
dec
dec
repz
jno
inc
push
inc
mov
dec
mov
sub
icebp
outsb
lods
lds
adc
insb
imul
call
lds
mov
mov
xchg
dec
push
cli
jg
ret
mov
loopne
imul
shrb
int3
mov
lea
jno
daa
lea
sbb
cmpsb
jecxz
incl
xchg
push
xor
test
out
dec
test
cli
popa
mov
cld
mov
fldenv
out
jg
jp
cwtl
lods
ljmp
je
jmp
in
jne
fdivs
or
aam
xlat
add
cmp
pop
mov
inc
and
mov
jg
or
rorl
insl
mov
lods
cmp
fildl
sbb
or
sub
popf
and
outsl
adc
incl
jmp
jae
and
xor
adc
mov
xchg
mov
jg
jmp
mov
pusha
aam
test
xchg
scas
xchg
cli
stos
push
imul
adc
push
or
stos
sub
jg
ds
xorw
or
push
push
popa
out
xchg
je
lcall
pop
pop
mov
icebp
mov
add
mov
cmpl
cld
inc
cmpsb
dec
dec
xchg
inc
add
xorb
iret
je
ljmp
jno
clc
aam
sub
call
push
aad
mov
sub
fldl2e
loope
decl
outsb
stos
adc
pusha
mov
pop
or
outsl
push
arpl
aad
xchg
dec
add
dec
mov
cmp
sub
in
ss
and
enter
cmp
faddl
xchg
lock
push
inc
jb
in
xchg
jge
cmp
jge
call
cmpsb
sbb
in
or
decl
addr16
pop
imul
ficompl
jp
loop
aam
mov
ljmp
es
sub
or
xor
and
aaa
aam
test
xor
xor
xor
call
cld
mov
sub
pop
inc
xor
mov
xor
stos
dec
jecxz
push
fnsave
fwait
adc
sbb
sub
fdivrl
out
cmpl
inc
push
push
and
rorl
lcall
push
pushf
add
jp
sbb
js
mov
aam
xchg
mov
stos
enter
xor
xchg
mov
dec
cmp
or
mov
call
or
push
fucomp
and
xor
dec
or
icebp
jl
mov
sub
and
std
cmp
mov
jmp
scas
mov
mov
loopne
mov
xor
imul
mov
ds
sbb
mov
test
lcall
test
lcall
jbe
xchg
inc
push
mov
and
xor
mov
imulb
jmp
repnz
or
xchg
bnd
pop
xor
mov
mov
daa
scas
dec
lock
pop
jmp
sub
and
scas
jns
ss
cmp
pop
jmp
add
push
or
inc
mov
fbld
inc
jno
sub
or
aam
test
dec
mov
push
lcall
decl
test
into
mov
das
push
data16
decl
jp
jbe
xchg
shrl
sub
xor
xor
addr16
inc
jl
xchg
fstps
pusha
xchg
jns
gs
pop
mov
jecxz
xor
bound
orl
pushl
icebp
fidivrs
inc
push
fwait
hlt
inc
int3
or
dec
inc
jecxz
pop
mov
xor
xor
pop
cmc
call
mov
jne
ret
sub
outsl
mov
les
cli
ja
mov
cmp
jmp
lock
cli
inc
mov
and
xor
mov
xchg
cmp
jae
into
xchg
es
cmp
cmpsl
fwait
pop
incl
xchg
loope
add
mov
lds
jae
xchg
jp
hlt
cmp
add
jnp
jae
mov
mov
xchg
call
cli
and
jmp
xchg
dec
or
mov
decl
inc
cmpsl
add
std
pop
dec
sub
adc
pop
xchg
xchg
push
push
sbb
in
mov
xor
lods
test
stos
ret
dec
jns
imul
pmaxub
lret
movsb
ljmp
loopne
sub
mov
mull
push
adc
xor
cmpsb
pop
mov
test
das
ret
inc
in
stc
daa
cmpsl
scas
clc
xor
pushf
inc
xchg
push
jecxz
sub
sbb
jo
jge
push
cld
incl
add
xor
pop
xchg
cmpsb
xchg
push
in
adc
into
sahf
mov
adc
xchg
cmp
lcall
mov
fwait
leave
leave
dec
mov
mov
cli
push
cld
inc
and
out
in
fstpt
pop
pop
xchg
rcrl
test
pop
jb
decl
dec
jp
adc
adc
inc
jl
sahf
mov
sarl
inc
mov
xor
pop
inc
add
and
aas
into
xlat
pop
mov
pushl
mov
aam
push
out
push
or
mov
mov
xor
je
adc
mov
out
scas
icebp
adc
cmp
lcall
mov
cld
pop
or
into
sub
adc
scas
repz
xchg
insb
mov
jbe
iret
stos
adc
jmp
push
sar
sub
enter
test
adc
aad
gs
and
or
jns
insl
push
jb
jnp
outsl
lock
lea
mov
xchg
in
pop
imul
nop
sub
xor
push
jns
pop
xchg
fsubrl
mov
mov
js
daa
add
inc
data16
mov
sbb
mov
jg
addr16
ss
aaa
cmpsb
cmp
push
lret
mov
test
pop
sti
or
jno
cli
or
fisubs
push
leave
mov
dec
lods
repz
xchg
mov
xchg
sub
ljmp
movsb
mov
or
jle
stc
xchg
fsubr
out
test
mov
dec
jle
decl
sahf
pop
or
sub
pushf
or
fadd
add
pop
jge
ja
jns
or
call
enter
xor
cmp
sub
xchg
bound
jg
in
mov
or
cmpsb
fwait
cmp
mov
mov
cli
push
stos
sbb
rorb
cmp
mov
add
imul
nop
incl
push
and
push
es
pop
gs
pop
xchg
adc
aad
call
loopne
xor
flds
data16
xor
jo
mov
push
mov
insl
push
mov
in
lods
scas
mov
shlb
data16
pop
dec
popf
push
push
je
in
xor
mov
jmp
insb
hlt
pop
test
inc
mov
mov
jae
test
xchg
fmuls
xchg
cli
pop
ja
fisubl
incl
lock
fidivrs
cmp
mov
or
leave
aam
movsb
cmpsl
cld
jmp
ljmp
cmpsb
adc
pop
insb
lcall
xchg
sahf
add
inc
or
scas
inc
movsb
int3
and
jmp
and
not
sbb
mov
loope
cmp
shrl
mull
xchg
mov
or
jmp
lahf
sub
lret
mov
outsb
adc
mov
shlb
push
xchg
lods
rorl
sti
mov
add
dec
push
push
aaa
std
lcall
jae
scas
stos
mov
pop
pop
push
ss
inc
in
cmpsb
int3
cmp
roll
mov
ret
inc
aas
les
das
xchg
ljmp
enter
add
jg
adc
jmp
outsl
or
test
inc
fstpt
xor
mov
dec
sarl
insb
decl
xor
inc
in
ret
xor
cmpsl
shlb
sub
sub
lahf
test
jbe
into
sub
repnz
fwait
dec
mov
adcb
jle
mov
or
cmp
call
push
mov
insl
adc
ss
decl
adc
sbb
std
sti
push
cmpsb
lcall
test
xchg
xor
xor
andb
mov
lret
out
mov
push
push
jle
xchg
xchg
icebp
mov
cwtl
inc
gs
sub
and
and
sahf
jl
nop
negb
aaa
lcall
jl
out
icebp
xor
cli
mov
pop
mov
mov
adc
lret
std
xchg
and
popf
mov
pushl
push
sub
pop
jne
sbb
pop
adc
sahf
test
fnstsw
negb
cs
inc
sbb
gs
mov
sbb
cmp
jmp
jno,pn
imul
incl
mov
gs
xchg
jg
sub
add
jge
cwtl
jecxz
sub
js
ds
xchg
mov
cltd
test
movsb
lret
sysret
mov
sbb
daa
decl
adc
lret
jno
loop
cmc
sbb
out
cwtl
mov
xchg
jbe
sbb
leave
scas
enter
out
clc
loope
jae
jo
push
pop
jge
inc
stc
ret
adc
xchg
add
push
decl
mov
xchg
std
dec
cmpsl
mov
push
and
jne
cli
subl
ljmp
push
stc
int3
rcr
aaa
mov
pop
fmul
lret
mov
data16
stc
or
fdivl
jp
cli
mov
mov
sbb
jp
lock
les
pushl
xchg
and
les
movsb
sbbb
fsubrl
push
jae
sbb
add
pop
iret
pop
fwait
mov
jg
cmp
aad
inc
in
inc
call
dec
push
sbb
mov
insb
jp
jo
cmpsb
push
sbb
scas
lahf
ljmp
test
sub
sub
add
out
adcl
cmp
dec
das
cmp
jg
and
imul
and
ja
or
clc
dec
add
rcll
sub
in
lock
incl
shrl
sub
sar
and
popf
in
cmpsb
fsubrl
clc
stos
adc
std
movsl
push
xchg
call
add
add
xchg
out
inc
shl
out
sbb
ja
cmpsl
adc
fmull
jno
repz
daa
loopne
pop
imul
jmp
xchg
hlt
movsl
pop
cli
scas
xchg
xchg
xorl
fcmovu
mov
push
subb
mov
aas
int
cmp
icebp
and
sub
notl
int3
fists
loope
bound
das
in
gs
push
sbb
test
inc
loopne
dec
pop
pop
imul
nop
xchg
adc
sbb
mov
jg
mov
shll
aas
jmp
or
icebp
xchg
push
punpckhdq
xor
jge
cmc
cmp
call
arpl
sti
adc
adcl
sbb
lahf
mov
decl
in
xor
jb
out
imul
ss
out
dec
data16
cmpsl
push
jbe
test
sbb
incl
inc
sub
adc
les
or
pop
xchg
cmp
jbe
cmpb
ljmp
push
inc
push
sbb
xorl
cmc
rolb
or
incl
hlt
pop
aam
daa
sbb
movsb
test
fildll
imul
cmp
mov
push
or
in
mov
sbb
xlat
mov
sub
lret
lods
stos
sub
mov
stos
jl
repz
sub
adc
insb
pop
xor
xor
pop
jne
pop
incl
and
ljmp
ret
xor
rclb
push
lret
and
jecxz
sub
shrl
jmp
cmp
std
xchg
mov
push
in
adc
sub
cmc
popa
and
incl
enter
xchg
xor
dec
push
pusha
mov
mov
push
fistpll
inc
or
fwait
pusha
mov
xchg
xor
pop
mov
dec
jns
inc
repz
add
jmp
std
enter
dec
lods
mov
call
adc
out
or
sbb
outsb
sub
lcall
or
mov
inc
mov
hlt
inc
jg
mov
inc
mov
outsl
cli
or
fidivrl
mov
pop
mov
iret
add
dec
push
shrb
push
xor
cmp
in
xchg
sbb
call
add
push
cmp
lock
es
push
mov
adc
jo
insl
xchg
mov
aam
or
cmp
sbb
pop
cli
pop
pop
mov
mov
dec
out
mov
mov
jg
into
pop
popa
popf
aas
je
int
dec
mov
mov
mov
mov
xchg
pop
cmp
negl
inc
ds
add
lods
int
cmp
pushl
mov
mov
imul
cmp
call
lret
inc
jo
mov
inc
mov
repz
jmp
mov
test
cld
fcmovnb
push
cld
incl
in
pop
fisttps
push
sti
xor
ficoml
scas
fcoms
decl
loopne
jmp
jno
xorl
scas
jg
cmc
mov
gs
sbb
mov
ret
sti
inc
mov
push
add
aas
add
add
jle
incl
jmp
pop
push
out
xchg
mov
and
inc
gs
out
or
lcall
aaa
add
stos
shr
push
xor
scas
nop
cli
mov
loopne
sub
lcall
jmp
push
sub
inc
loop
mov
cmpsl
cltd
mov
aas
dec
iret
out
lcall
ds
leave
mov
jmp
inc
orb
mov
cltd
sub
mov
cmp
das
aam
rcrb
jmp
std
mov
inc
add
xorb
andl
fucomi
dec
bound
cli
jecxz
mov
inc
leave
and
push
sub
jle
jge
push
adc
fwait
incl
push
stos
es
aam
inc
insl
adc
icebp
pop
xchg
insb
les
cmp
incl
mov
movsb
shrl
mov
xor
push
loop
nop
and
push
icebp
lods
mov
xlat
call
aaa
add
sub
ficoms
repz
bound
hlt
add
incl
push
loopne
shlb
fcmovnbe
lahf
cmp
inc
frstor
cmp
mov
ds
sub
jg
sub
adc
ljmp
sahf
iret
mov
sub
push
dec
inc
lcall
add
and
lcall
imul
inc
mov
sub
out
lcall
movsb
pusha
pop
sbb
push
les
lret
xchg
inc
adc
mov
nop
scas
in
pop
push
xchg
adc
decl
sbb
mov
notb
push
in
ja
cmpsb
push
and
es
push
mov
rorl
fists
cmpsb
dec
or
pop
loopne
ret
sub
pushf
lods
adcb
push
decb
xchg
aas
sbb
rorb
data16
decl
xor
pop
bound
xor
lock
imul
loop
pusha
lcall
mov
sahf
push
mov
in
pop
in
or
fldcw
lcall
pop
adc
jmp
xor
arpl
ss
popf
adc
test
inc
incl
lahf
sbb
dec
out
cli
adc
cmpsl
mov
jmp
out
lock
js
dec
sahf
cmp
or
lods
jb
ss
cmc
movsl
shrb
jbe
xor
cmpsl
loope
or
mov
fnstcw
add
das
sar
pushf
pop
out
addr16
push
inc
popa
inc
push
push
sub
dec
sbb
inc
push
pop
xchg
jmp
lds
cmp
dec
xchg
stc
cmpsl
and
jo
testl
cmp
push
jbe
add
add
stc
getsec
aad
or
loope
mov
sub
inc
mov
lcall
adc
inc
int
test
xchg
mov
mov
testb
jle
stc
outsl
dec
mov
jg
cmp
lcall
mov
add
ja
incl
mov
das
sbb
push
addb
data16
incl
lahf
and
movsb
add
repz
jo
mov
shll
xchg
add
int
cld
pushl
stos
cs
add
aad
mov
test
or
mov
fcomip
mov
adc
test
xor
ljmp
rcrb
xchg
sti
movsb
lahf
sbb
in
scas
xchg
fmulp
cmp
dec
dec
mov
inc
mov
decl
std
aaa
xchg
std
ds
adc
stos
jo
rdpmc
mov
push
addr16
ret
es
ljmp
and
xchg
sub
jb
in
jmp
mov
les
jl
pop
jmp
imul
imul
lahf
xor
pop
repz
lods
push
fbld
inc
fmul
or
pop
iret
push
pushl
sub
in
ret
movsl
mov
test
imul
jl
push
xchg
lcall
mov
mov
sub
lcall
xor
push
sar
lcall
mov
sub
test
mov
addb
sub
js
cmpsl
enter
jmp
outsb
sbb
das
insl
aaa
or
leave
mov
mov
ja
inc
dec
rclb
inc
jle
ds
jg
sbb
lds
inc
mov
push
mov
mov
mov
mov
and
test
aaa
pop
shlb
stos
test
jle
std
pop
cmc
xchg
xchg
mov
jo
pop
gs
pop
lds
in
es
mov
icebp
je
mov
cld
jo
xchg
insl
ja
and
pop
mov
add
sbb
leave
cli
inc
stc
das
pop
stos
rcrl
push
mov
das
test
cmp
mov
mov
xchg
data16
pushl
push
pusha
lcall
push
aam
adc
sahf
daa
icebp
inc
in
pushf
or
iret
add
jmp
jle
je
ret
ss
cmpsl
je
int3
cmp
pushf
and
repz
jmp
dec
into
adc
xchg
cmpsb
mov
push
inc
mov
jae
outsl
insb
xor
loop
lods
inc
ljmp
lock
into
sbb
push
ret
xor
call
rclb
xor
pop
inc
jns
jne
add
lds
scas
sub
sub
fs
pusha
mov
fs
pop
push
push
adc
cmpsb
lcall
enter
cwtl
jae
xchg
mov
into
add
loope
out
pushf
ds
adc
fcmovb
or
dec
mov
jne
push
ljmp
leave
mov
add
das
sub
jns
mov
xor
std
inc
scas
ljmp
xor
push
shrl
xchg
push
cmc
push
popf
and
sbb
mov
pushl
cwtl
sub
or
mov
adc
push
add
push
pop
repz
negl
jae
and
call
pop
sub
clc
and
mov
insb
sbb
insl
lods
pushl
ljmp
clc
xor
fldt
into
pushf
mov
xor
clc
call
shl
stc
xchg
cmp
and
mov
mov
js
cmp
fcomip
scas
lock
dec
cli
neg
jae
mov
adc
js
lahf
or
dec
jnp
js
cmpsl
test
repnz
addr16
ret
mov
pop
data16
insl
rolb
movsb
ficomps
push
out
movsl
aaa
mov
and
pusha
data16
fnstenv
mov
mov
xor
out
out
out
jbe
lds
dec
push
clc
fcomip
mov
mov
mov
or
decl
jp
sub
cmp
xor
sub
jne
push
mov
les
nop
jge
shll
rcll
les
or
lcall
incl
xlat
lret
add
sbb
fdivl
stos
fdivs
rcrl
shll
daa
ljmp
decl
movsb
into
scas
jecxz
or
push
addr16
lods
and
push
inc
mov
mov
cltd
cmp
fcomip
call
push
xor
scas
clc
dec
and
mov
cmp
xor
ljmp
imul
xor
push
push
inc
out
std
iret
jo
mov
jge
push
inc
stc
cmpb
push
pop
je
aas
std
cmp
or
mov
cs
pop
mov
or
dec
mov
push
rolb
in
les
aas
bound
or
sub
ljmp
jecxz
iret
out
xchg
fcmovnb
xchg
fnstenv
popa
iret
outsl
mov
rolb
ljmp
xchg
xlat
mov
and
add
cmpsl
loopne
inc
push
movsb
fsubs
pushl
lahf
sahf
add
mov
mov
enter
adc
and
scas
rcrl
lcall
and
mov
jae
icebp
fs
int
dec
xor
xchg
movsb
imul
inc
inc
add
push
data16
out
outsl
sbbl
sub
xor
pop
aad
mov
adc
notb
out
dec
pop
and
nop
gs
daa
adc
mov
gs
stc
pop
cmpsb
addr16
add
das
dec
adc
inc
or
inc
clc
jmp
fidivrs
and
in
mov
add
xlat
sub
mov
call
mov
bound
stc
mov
jl
jbe
cs
adc
mov
jae,pt
cmc
ljmp
xor
clc
daa
ret
hlt
int
push
in
inc
xchg
fs
or
inc
cmc
fwait
fcomip
mov
lock
loopne
inc
mov
add
in
incb
cmp
push
adc
imul
push
add
pushl
sbb
adc
popa
insb
sar
in
jmp
lds
inc
push
in
fstpt
sbb
aam
push
pop
cmc
std
xor
push
shr
fs
inc
call
xchg
hlt
pusha
push
mov
in
sub
add
cmp
roll
adc
add
inc
or
in
dec
jge
lods
dec
sti
dec
sbb
popa
test
call
push
rcrl
sar
test
imul
les
adc
incl
out
xchg
daa
add
in
rolb
xor
cmp
test
leave
mov
mov
bound
incb
push
cmp
loop
lods
pop
dec
xor
sbb
cmp
repz
pushl
mov
int
movsl
push
popa
or
push
outsl
cmp
mov
mov
mov
call
add
jmp
sub
mov
add
mov
jae
cwtl
mov
xor
subl
dec
imul
mov
jecxz
mov
ficoml
into
push
movsl
scas
xchg
ljmp
iret
inc
push
ret
cmp
decl
and
push
dec
aam
mov
movsl
pop
xor
pop
xor
xchg
mov
adcl
ss
cmp
push
inc
rolb
ljmp
fwait
stc
ss
adc
cmp
inc
dec
mov
fwait
jnp
jns
hlt
add
decl
arpl
and
jmp
add
dec
jns
imull
jno
pop
jns
outsb
lahf
incl
push
stos
or
cltd
aaa
dec
jmp
adcl
jnp
idiv
jbe
mov
jecxz
jmp
cltd
arpl
outsb
mov
lret
sbb
int
sbb
mov
cld
dec
sbb
jnp
jae
scas
xor
lret
bound
adc
std
push
dec
fmulp
jbe
decl
mov
dec
stc
and
pushf
push
pushf
mov
leave
fisttpll
rclb
mov
xor
and
pop
fwait
icebp
call
push
pushf
jg
dec
cmp
jb
jg
sub
and
dec
sub
notb
push
loop
lcall
pop
lods
stos
imul
mov
movsb
test
out
xor
incl
inc
xchg
pop
orl
mov
mov
dec
or
sub
or
ss
cmp
pop
lods
dec
cmp
es
push
mov
adc
sarb
sbb
xchg
adc
mov
jmp
decl
cmpsl
mov
cmc
and
adc
call
sub
das
jne
incl
stos
rclb
sub
mov
jno
jecxz
inc
daa
cs
jg
cmpsl
sbb
add
inc
xor
subb
popa
jnp
pop
xchg
lea
sbb
decl
lcall
mov
lcall
cmp
es
cmp
jnp
into
and
andb
popa
mov
dec
fidivl
cld
sub
inc
jge
cmpsb
fcomip
call
movsl
xchg
rcll
mov
subb
cmp
push
push
mov
jmp
sub
mov
inc
inc
jnp
mov
jge
mov
push
sub
and
mov
rclb
out
mov
test
lcall
xor
jbe
pop
aam
inc
adc
aaa
jp
pop
dec
rcrb
inc
aas
push
roll
clc
sahf
or
ret
rorb
mov
sahf
mov
xchg
cli
clc
incl
popf
mov
lahf
not
mov
adc
in
test
sti
enter
movsl
cmp
addr16
cld
jmp
mov
mov
cmp
sahf
xchg
icebp
imul
push
bound
jns
gs
clc
call
in
and
jge
arpl
sub
mov
jmp
push
mov
stos
adc
std
pushf
mov
xor
lcall
adc
sbb
push
enter
push
xchg
mov
scas
pop
mov
lcall
fmulp
aam
sub
add
loop
imul
out
mov
pop
icebp
jns
xchg
pop
push
enter
mov
cmc
stos
loopne
sub
jnp
mov
push
pop
fiadds
mov
mov
out
cmp
int3
dec
andl
sub
inc
mov
in
push
js
outsb
in
dec
repnz
xchg
test
pop
into
pop
and
add
inc
adc
pop
xor
xor
insl
fcomip
adc
xor
xor
pop
cmc
xchg
mov
popa
push
stos
es
cltd
push
gs
out
inc
js
jbe
ss
mov
push
jno
push
test
out
inc
loopne
aad
jge
mov
xchg
xor
lret
lods
scas
js
xorl
fidivl
mov
pop
or
ds
scas
cwtl
pop
ja
cmp
cmovnp
dec
test
pushf
int
mov
fimull
mov
clc
fwait
rorb
and
ds
ficoms
sub
sti
mov
neg
lcall
imul
mov
xor
das
outsb
jnp
mov
lahf
push
mov
imul
adc
fsub
movl
mov
mov
fucomip
out
mov
jmp
xchg
stos
and
cmp
test
lock
sbb
adc
lods
adc
sbb
jns
lahf
out
cmpb
call
stos
mov
fidivrs
or
push
adc
sub
rorl
mov
add
xchg
jle
inc
stos
cmp
shl
inc
or
xor
subl
adc
fcompl
call
mov
push
ljmp
or
das
out
or
jno
js
shrl
popa
mov
adc
faddl
cmp
ret
jge
xor
decl
xor
sub
adc
pop
and
mov
pushf
mov
mov
mov
idiv
pop
icebp
fdiv
subl
idivl
xor
out
and
idiv
cmpsb
test
xchg
jnp
fld1
adc
lods
rcrl
fldcw
xor
jg
mov
bound
mov
nop
push
inc
movsb
mov
jl
push
fbld
or
fucom
std
popa
aad
aam
fdivr
ljmp
mov
lods
sub
cmpsl
inc
push
push
inc
jmp
shrb
cs
push
pop
cs
jecxz
lret
jp
mov
mov
test
sub
push
addr16
movsb
scas
roll
pushl
hlt
gs
sub
stc
mov
cli
jle
fcomip
mov
xor
cwtl
cmp
push
sub
mov
jg
inc
jb
bnd
addl
push
lahf
inc
and
or
call
push
push
mov
popf
lea
add
add
inc
rolb
mov
je
push
sub
cli
ljmp
adc
dec
cmc
and
ljmp
mov
std
push
adc
addr16
lea
in
jne
push
dec
aam
cmp
das
jecxz
rcl
in
setb
lret
icebp
dec
sub
mov
inc
adc
adc
stc
mov
xor
xchg
insb
aam
sti
jg
mov
adc
push
dec
sub
add
iret
mov
mov
scas
inc
cmp
mov
push
cmp
pusha
cmp
imul
mov
mov
and
out
dec
movsb
bound
mov
scas
fistps
add
dec
jmp
or
lods
insb
adc
orl
sub
push
jecxz
fiaddl
or
mov
adc
test
fstpt
dec
mov
jne
sub
mov
mov
cli
es
pushf
mov
ret
ljmp
stc
dec
sub
shrl
rorb
cmpl
push
lret
jg
fnstsw
jp
dec
test
fsubs
outsb
sbb
inc
mov
std
test
and
pop
repz
call
in
ds
in
inc
fists
jo
sti
lods
mov
pop
icebp
insl
push
add
pushl
es
push
pop
mov
insb
inc
adc
dec
int3
mov
mov
ds
cld
lds
decl
jo
dec
sahf
pop
shll
pop
and
fisttps
cmovbe
enter
jmp
subl
push
scas
pop
jg
sbb
dec
pop
push
insb
test
cmp
stos
lcall
sub
outsb
adc
mov
cmp
sbb
ja
adc
xor
loope
aad
cmp
or
cli
adc
shlb
into
jecxz
int3
incl
mov
imul
loop
sbb
adc
ljmp
shlb
jnp
insl
sbb
cmp
enter
adc
xor
lcall
sahf
cli
jnp
std
jmp
add
adc
clc
iret
dec
xchg
ds
cmp
push
mov
dec
lcall
push
dec
xchg
popf
add
inc
jae
sub
incl
mov
and
adc
imul
pop
pushf
and
xor
xor
jno
shl
loope
ret
dec
loope
sbb
out
jb
jb
or
rorl
ljmp
push
test
jle
mov
push
mov
xor
cld
aas
adc
jnp
cmp
incl
push
or
xchg
xor
fdivs
jecxz
negl
adc
dec
gs
sarl
mov
add
shrl
fidivs
sbb
cltd
shrb
mov
push
mov
sti
mov
add
cmp
xor
or
movb
int
les
call
xchg
test
adcb
xchg
sar
cltd
cmp
out
add
push
sbb
mov
outsb
int
push
pop
jle
sar
int3
inc
xchg
adc
or
sbb
shll
jo
dec
mov
xor
clc
incl
aas
and
sbb
mov
pop
push
cld
or
add
fcomip
jmp
cmpsl
dec
sbb
inc
js
inc
pushf
lret
lods
push
lret
push
in
pop
xchg
movsl
ljmp
rcr
fisubrl
out
mov
sbb
adc
mov
pop
cld
fcomp
dec
xor
out
jns
outsl
inc
inc
out
lds
cwtl
sub
fidivrl
xchg
jbe
leave
mov
aas
sbb
xor
insl
dec
inc
jmp
ds
jl
or
call
add
cli
fcoml
pop
cltd
mov
in
adc
cmp
vunpckhps
repnz
test
xor
and
jb
je
lods
in
inc
xchg
jbe
jg
or
dec
int
shrl
xchg
add
xchg
and
add
xor
fsubrp
dec
ffreep
xor
pushl
std
cwtl
cltd
xlat
sub
push
outsb
test
push
pusha
dec
pop
dec
cmp
aam
jmp
xor
imull
out
popl
sub
dec
fld
push
call
or
lea
fcmovb
pop
push
sbb
dec
mov
jmp
pop
mov
test
in
and
cmp
xchg
rorl
xor
jg
sar
loopne
icebp
jno
loop
sbb
bound
and
adc
daa
add
or
inc
jns
jle
add
out
xchg
pop
add
lahf
movsb
sbb
xor
sbb
ja
jg
call
scas
test
mov
es
jnp
sbb
jmp
xor
pusha
sahf
into
sub
mov
insl
xchg
pop
lds
cld
aaa
ja
cli
lcall
out
sub
je
in
inc
dec
sbb
mov
repz
push
sbbl
sar
jmp
test
or
xchg
adc
jg
daa
mov
mov
xchg
pop
xorl
jmp
add
push
jmp
popa
dec
push
xchg
test
inc
jecxz
mov
call
aas
repz
pushf
xchg
jg
clc
jge
subl
aad
xchg
sub
movsb
hlt
call
mov
or
es
out
fwait
lods
adc
push
ss
repz
movb
jg
lcall
add
lahf
or
loopne
mov
shll
sub
pop
cli
sub
lods
xchg
adc
testb
lock
ljmp
divb
test
or
mov
fcomps
pop
pop
jg
cli
std
adc
leave
inc
cltd
dec
pushf
jo
test
xchg
fwait
inc
jecxz
add
pop
jbe
cmpsl
rcrl
mov
pop
mov
call
add
pop
es
es
fbld
sub
ljmp
sub
xor
movb
scas
mov
add
add
fidivrs
jne
push
ljmp
out
cmpsl
repnz
and
xor
and
lcall
xchg
in
jp
ja
rcr
cmpsl
js
push
gs
cmpl
dec
ret
push
jge
push
fcmovnb
imul
pop
int3
mov
fs
in
add
xchg
aas
mov
mov
stos
cmp
fwait
xchg
cmp
sar
lret
mov
push
jg
mov
stc
dec
adc
xor
cmp
push
mov
pop
mov
jb
das
lods
lret
les
cmp
fmull
push
pushl
pop
jge
mov
cmp
ljmp
mov
int3
mov
add
add
cs
xchg
sub
pop
and
movsl
push
add
sti
pop
ljmp
outsl
out
pushl
sub
adc
mov
cmc
xchg
fbstp
imul
lods
xchg
repnz
mov
lcall
add
outsl
out
add
sahf
out
inc
adc
jg
hlt
mov
in
jecxz
mov
mov
aas
sar
decl
ret
sbb
cmp
sub
imul
pop
fisttps
and
jmp
imul
notl
js
jg
mov
xorb
sub
in
scas
cs
movsl
and
arpl
fneni(8087
mov
sub
pop
subb
sahf
loop
cmp
scas
iret
test
add
pusha
push
cwtl
aas
xchg
dec
scas
mov
mov
push
je
or
mov
imul
push
xchg
ret
mov
pushl
fs
mov
aaa
pop
outsl
jp
sub
pushf
fnop
fcmove
jle
dec
enter
rolb
inc
out
fs
js
mov
imul
add
pushf
in
enter
pop
jl
inc
xor
fcomip
dec
sti
in
or
mov
lcall
stos
std
xchg
dec
cmp
fcomip
incl
fidivs
push
pop
ret
shlb
adc
pop
adc
inc
sahf
leave
mov
sub
xchg
and
sbbb
nop
in
jl
ljmp
mov
sbb
add
aas
xchg
fnsave
add
outsb
xchg
cmp
decl
cmp
add
add
jecxz
bound
or
dec
jg
outsl
adc
jg
das
and
mov
outsb
aam
and
mov
insl
mov
es
pop
aaa
inc
jg
jl
xchg
sti
add
icebp
aas
and
call
lcall
xor
mov
popf
sub
push
pshufw
stc
scas
cmp
decl
call
sbb
pop
stc
mov
jae
jmp
test
test
push
add
dec
stc
outsl
movsb
fistpll
int
mov
push
push
jle
xchg
mov
adc
adc
dec
sbb
scas
mov
scas
pop
outsw
push
outsl
fs
test
and
loope
decl
adc
lds
xchg
mov
xchg
sbb
xor
jae
ret
call
pusha
xchg
adc
mov
cmp
popf
stos
sbb
dec
cli
pop
xor
mov
call
and
sbb
jge
stos
cmp
mov
and
mov
js
rolb
add
pushl
mov
imul
mov
jno
pop
push
jne
ds
push
sbb
inc
mov
decl
lock
jns
out
ficompl
xor
sub
mov
lcall
push
icebp
in
xor
mov
cld
pusha
inc
in
sbb
dec
sbb
mov
mov
lret
push
push
lcall
loopne
lds
scas
pop
xchg
jo
cwtl
sbb
js
push
sbb
in
cmp
data16
in
imulb
push
push
adcb
mov
fisttpll
movzwl
in
jne
daa
into
pop
inc
sbb
cmp
add
adc
icebp
adc
pop
aaa
ja
insb
imul
das
mov
lods
mov
xchg
xlat
xchg
sub
lret
int
repz
lcall
lcall
and
imul
fsubrp
adc
loop
xor
mov
push
jecxz
cmpsl
cmpsl
lods
mov
into
rorb
adc
aaa
mov
call
add
push
rcl
or
bound
xor
popf
sbb
test
subb
sahf
add
jae
jecxz
xchg
fmuls
ret
pop
xor
jge
pop
sub
nop
out
stos
jmp
cmpsb
movsb
mov
add
inc
sbb
lods
enter
add
cmp
adc
mov
nop
xor
cmc
xor
pop
xchg
loopne
add
nop
dec
inc
nop
loopne
clc
leave
enter
arpl
pusha
pusha
xor
cmpsl
arpl
out
mov
or
adc
out
push
mov
cmc
mov
data16
or
jmp
cmp
mov
push
push
sarl
rdpmc
fwait
stos
pop
fs
ss
add
call
enter
adc
fldt
fcompl
add
lret
hlt
icebp
xchg
or
jg
rclb
sub
mov
mov
pop
or
std
xor
sbb
push
loope
insl
cmp
fdivs
jp
sub
subl
fsubrl
cli
mov
xchg
jmp
cmpsl
or
adc
lock
sbbl
outsb
dec
pusha
outsb
jle
mov
inc
in
dec
mov
adcl
push
add
cs
test
shlb
call
cmp
rcll
add
xchg
imul
mov
incl
sub
aas
icebp
loopne
loop
rol
je
inc
mov
lea
inc
jns
pop
scas
push
test
decl
ja
pop
sahf
shlb
dec
stos
add
sbb
xor
in
cmp
ja
outsl
clc
jg
out
push
mov
add
or
cmp
call
adc
xlat
jle
lods
adc
enter
sahf
or
sahf
mov
int3
cwtl
ja
add
cmp
mov
mov
call
xor
outsl
js
pushf
push
ljmp
and
or
push
std
int
inc
clc
mov
mov
xor
sti
cmpsl
fs
sahf
push
mov
std
out
cli
cmp
mov
rcrl
fidivrl
dec
stos
js
sbb
call
shrb
fmul
jg
dec
mull
imul
fbstp
or
mov
or
fwait
ret
mov
and
or
idivb
pop
nop
xchg
mov
outsb
jo
pushl
pop
jns
push
add
dec
insl
add
mov
popf
subb
jecxz
clc
idivb
adc
rolb
pop
mov
or
push
jnp,pn
les
sbb
mov
add
sarb
incl
sub
or
enter
aas
ss
je
sub
test
subb
xchg
ficoml
jne
or
lahf
cli
xchg
shll
sti
adc
in
xor
test
xlat
ss
repnz
mov
test
rclb
xchg
xchg
push
pop
popf
test
in
inc
sbb
sti
xchg
fsubl
in
stc
cld
inc
push
sbb
jmp
pop
lcall
or
sub
lahf
inc
cmp
js
pop
icebp
mov
jb
stos
cmp
xor
data16
inc
pop
pop
incl
jp
inc
mov
inc
decl
and
cmpsb
int
mov
sub
fcomps
in
aam
pop
lahf
pop
dec
addr16
push
pushl
ret
push
jbe
lcall
cmp
daa
mov
mov
push
movsb
sub
call
imulb
xchg
mov
adc
loop
call
cltd
out
cmc
lds
jg
cltd
pusha
testb
adc
pop
je
cld
decl
aam
shll
andl
scas
movsl
jns
or
mov
pushl
jge
out
mov
ror
popa
dec
jae
or
push
cmc
mov
or
aas
xchg
mov
jmp
aas
jge
loopne
loop
and
incl
into
cmp
push
adcb
faddl
jbe
sbb
vpackssdw
inc
adc
shll
jmp
sub
jl
inc
cmp
push
jge
cmp
xchg
lcall
xchg
pop
lcall
pop
sub
cmp
mov
push
mov
push
sbb
incl
je
gs
fisttpll
mov
jmp
mov
adcb
in
jne
push
cmp
mov
das
cwtl
jbe
iret
and
push
and
add
in
cmp
xor
jns
cmpsl
incl
adc
adc
rcrl
pop
push
sbb
push
jg
mov
mov
aas
or
dec
cmp
cltd
inc
push
sbbb
jo
sbb
jg
fdivr
call
cld
xor
aad
mov
sahf
stos
jecxz
xchg
push
xlat
cmpb
roll
scas
ljmp
push
cwtl
in
outsl
inc
movsb
cmc
pop
mov
jae
jg
inc
test
addl
sub
sbb
out
lods
inc
cmc
add
ja
bound
lcall
shlb
lock
cmp
jmp
clc
test
gs
dec
clc
xchg
std
scas
insb
js
mov
jb
fbstp
aaa
inc
icebp
push
inc
out
cwtl
les
jg
popf
out
mov
add
outsb
mov
jb
mov
and
jp
sarl
lcall
insb
stc
or
pushf
push
and
shl
push
mov
sub
outsl
insl
cli
mov
hlt
incl
je
test
sub
xchg
mov
scas
add
fildll
aaa
mov
nop
fwait
add
repnz
rorl
xor
test
jmp
jmp
enter
fisttpll
imul
dec
movsl
xor
fisttps
cld
pop
add
cmpl
and
pop
cmp
adc
or
push
sub
jmp
gs
cmp
les
hlt
sub
pop
or
push
xchg
mov
pop
rclb
out
push
adc
mov
xchg
pop
mov
leave
lock
repnz
and
popf
in
adc
add
ljmp
adc
es
repnz
jp
out
out
push
push
push
add
lock
cmovae
or
xor
fwait
bound
ljmp
mov
push
and
dec
cmc
fidivl
in
and
jnp
jno
ljmp
pop
testb
mov
mov
mov
push
iret
cmpsb
jle
loope
pop
jmp
pop
fdivs
ljmp
sbbl
bound
cmp
push
fistpl
std
outsl
icebp
push
adc
fs
jb
loope
xor
inc
insl
stc
bnd
push
cltd
sub
lcall
lcallw
mov
data16
hlt
mov
mov
pop
pop
insb
push
ljmp
jns
xlat
or
scas
cmp
sub
push
xor
mov
push
test
mov
iret
lods
push
pop
neg
and
mov
push
sbb
test
xor
pushl
jae
daa
pop
test
or
push
pop
and
ja
es
jmp
inc
mov
imul
and
add
sbb
out
ljmp
and
repnz
incl
inc
test
jecxz
lret
mov
or
cmp
sarl
call
xor
insb
push
xchg
cmp
rcrl
mov
sub
dec
psraw
mov
pop
and
jmp
mov
pop
mov
orl
fwait
icebp
fs
and
mov
cs
pushl
jg
loop
dec
mov
mov
jns
js
rclb
int
sbb
imul
jmp
repnz
shrb
hlt
mull
jbe
xchg
jg
in
lahf
sub
jle
in
mov
pushl
sahf
jne
rcll
dec
imul
in
icebp
and
mov
sub
add
inc
mov
test
in
fwait
movsb
scas
cli
lcall
cs
test
and
push
lea
popa
cmc
mov
and
adc
sbbl
insb
push
je
testb
sahf
xchg
in
xchg
sbb
incl
xor
pusha
std
bswap
or
adc
pop
mov
cmpsb
dec
lcall
xlat
and
pop
std
ds
loope
cmp
jecxz
add
and
sbb
dec
aaa
inc
loop
pusha
repnz
out
jmp
xchg
sbb
push
aaa
push
je
mov
xor
sub
aaa
test
icebp
nop
adc
into
jp
mov
divb
lcall
jge
andl
rorb
and
dec
add
ljmp
cltd
sub
dec
out
cs
xor
jmp
movsl
inc
mov
xlat
lea
lcall
xor
sub
adc
jo
add
and
xchg
mov
push
cltd
cmp
sub
bound
loope
add
mov
or
jno
testl
shl
cmpsb
jp
push
jb
rcrb
shrb
decl
sti
push
filds
xlat
sub
push
jns
ret
mov
stc
sbb
pop
mov
in
xchg
cwtl
or
xor
xor
inc
xchg
shrb
push
sbb
mov
lock
push
adc
fdivs
repnz
insl
andl
aam
push
cmp
stos
jmp
sbb
push
call
arpl
mov
adc
outsb
movsl
icebp
cmp
daa
cli
incl
mov
xor
outsb
push
loope
sub
add
mov
jnp
loope
in
ljmp
pop
int
mov
xchg
lret
daa
loop
movsl
lea
push
mov
mov
sbb
call
mov
shlb
push
xchg
push
push
rorb
jbe
mov
sbb
xor
incl
add
adc
dec
fsub
xchg
cmp
mov
add
xchg
jo
ja
sbbb
pop
push
arpl
mov
lods
mov
imul
xchg
and
cmp
pop
mov
int
pusha
and
add
add
clc
stc
push
call
mov
stc
add
and
das
xchg
lea
pop
mov
ret
out
popf
cmc
ret
cld
mov
movsb
inc
addl
push
jg
enter
lock
push
dec
imul
xor
fimull
cwtl
push
ret
xchg
stos
stos
cmpsb
lcall
add
inc
push
dec
sbb
mov
fcoml
in
jbe
cmp
fwait
xchg
cmp
pop
in
jns
jo
jbe
fidivl
repz
xor
cld
decl
xchg
roll
pop
fstl
push
call
popf
test
add
decl
cmpsl
push
dec
fiadds
popa
push
add
dec
bound
je
pop
push
adc
fcomip
jns
jmp
push
pop
adc
pushf
cmp
insb
out
out
sbb
mov
cmc
sbbb
mov
icebp
mov
lcall
add
jg
clc
lcall
cltd
add
mov
mov
xchg
out
mov
jmp
xchg
xchg
jecxz
and
mov
iret
daa
pop
ffree
daa
sbb
dec
jg
negl
push
gs
stos
insl
ss
push
out
shl
or
jnp
fistpll
pop
in
hlt
xor
mov
mov
aas
loope
xchg
push
jge
or
sub
faddp
nop
xor
popf
pop
movb
shr
add
movsb
test
jmp
sub
std
lds
movb
shr
aas
bound
lret
loop
ljmp
jb
imul
scas
mov
xchg
pushf
out
mov
adc
or
call
fidivrl
testl
movsb
add
fiaddl
mov
out
insl
mov
call
cmp
push
pop
movsb
sbb
data16
jae
outsl
insl
jp
jp
lcall
testl
andb
ret
mov
adc
pop
xchg
xor
stc
call
pop
or
dec
pop
bnd
test
mov
jl
and
mov
in
xlat
xchg
movsl
fistps
adc
ljmp
out
aam
mov
dec
or
es
sub
pop
or
shl
les
or
ljmp
clc
popa
into
inc
dec
js
cmp
jmp
je
mov
in
jne
test
pop
adc
mov
adc
cmp
adc
into
jb
or
test
mov
jmp
dec
loopne
or
sbb
cld
jl
xor
xor
inc
mov
in
cmp
dec
pop
sarb
testb
movsb
xor
mov
xor
xlat
call
test
jno
mov
push
aad
dec
pop
test
loope
mov
addb
inc
aaa
stc
scas
dec
insl
clc
movsb
inc
sbb
jmp
cmp
orl
fcoms
dec
inc
cmp
and
xor
mov
insb
jecxz
mov
pop
sub
cltd
pop
in
iret
jle
in
loop
sbbl
jo
sub
xchg
sbb
adc
hlt
push
in
pop
repnz
lret
jg
cld
movsl
loopne
daa
hlt
adc
push
mull
fcomip
jg
enter
jmp
dec
cwtl
add
mov
ret
jecxz
lcall
out
popa
scas
inc
push
adc
movsl
xchg
pop
in
jne
mov
mov
lock
add
mov
adc
cs
xor
jle
repz
call
dec
addl
mov
xchg
fwait
and
out
decl
sub
ss
push
das
int
sub
clc
jmp
pop
and
xlat
jmp
dec
jmp
in
je
xlat
insl
loopne
aas
je
xchg
sbb
xor
pushf
mov
ja
and
push
stos
popf
dec
cmp
inc
jl
ljmp
std
or
clc
mov
mov
sub
pusha
fwait
out
jmp
mov
cwtl
fidivrl
lcall
loope
nop
push
add
jns
mov
dec
push
mov
xchg
jmp
mov
scas
test
mov
cwtl
ja
paddd
pushl
fwait
insl
xlat
inc
lahf
xchg
dec
sub
mov
jne
xchg
mov
push
pushf
mov
decl
push
dec
sbb
or
out
or
mov
cmp
cmp
push
lcall
xchg
cmpb
dec
pop
jp
insb
sub
arpl
pop
pusha
and
mov
call
test
cs
dec
mov
sub
int
lret
in
fcom
decl
push
loopne
sbb
out
enter
or
mov
in
lret
out
call
add
sub
lea
fsubl
sarb
mov
or
incl
and
sbb
cmp
push
decl
add
xorl
sbb
xchg
or
push
addr16
sub
jl
pushl
out
adc
dec
add
loope
loopne
pop
cmpsl
dec
mov
cmp
jno
pop
jo
jb
in
pushl
or
inc
xchg
gs
test
ret
cmp
xor
xchg
or
mov
mov
jecxz
out
test
ja
add
orb
aas
test
xlat
fsubr
push
bound
decl
inc
in
fwait
repz
jb
imul
popa
pushf
lea
shl
xchg
gs
lcall
jo
add
add
push
aaa
in
jns
fs
incb
fcomip
inc
ja
filds
pop
add
fcmovne
push
inc
push
out
lret
mov
mov
pop
jmp
cmp
arpl
aad
ss
sub
and
jb
lock
js
aaa
adc
incl
sbbl
adc
push
clc
mov
jg
decl
lcall
or
or
mov
aam
ja
pop
xor
push
and
pop
fbstp
cmpsb
aam
push
mov
stos
cmp
insb
pop
stc
jp
pushf
mov
lea
jmp
out
jecxz
xchg
ljmp
push
fs
pop
cld
sbb
out
jmp
ret
or
pop
xchg
jne
scas
dec
cli
xor
decl
add
aad
pop
xor
out
repz
ss
scas
fdivrl
lods
inc
out
cltd
xchg
jle
decl
mov
leave
lea
cwtl
jg
aaa
push
or
cmp
out
rcrl
filds
lret
jle
insl
xor
or
popa
lds
arpl
ljmp
fs
sub
push
jnp
mov
fists
cmp
cld
idivl
addl
pop
insl
pop
int
cmp
scas
push
inc
stc
fs
mov
das
ss
mov
mov
aas
pop
jecxz
cmp
mov
mov
lcall
lret
shll
ret
xor
mov
icebp
lcall
mov
fstl
or
notl
fisttpll
sub
test
jnp
pop
sti
rcll
daa
out
sub
imul
jno
lret
mov
movsb
push
lret
orb
jmp
jle
imul
mov
jbe
mov
pushf
movsb
jge
out
adc
mov
cli
call
inc
adc
inc
inc
and
adc
loope
push
add
mov
enter
dec
cmpsb
shl
mov
addb
scas
push
cwtl
add
stos
xchg
jmp
pop
lret
dec
nop
inc
rcr
pop
sbb
sub
out
lods
add
mov
adc
or
adc
jmp
test
and
fwait
push
ret
pop
fiaddl
jne
or
adc
add
stos
icebp
gs
in
sbb
fstp
out
fisttpll
jl
imul
mov
in
lahf
jge
pop
lret
mov
data16
jle
popa
rcr
or
cmp
ja
mov
xchg
addr16
lock
inc
pusha
pop
and
add
in
pop
xor
or
pushl
je
cwtl
out
lahf
lret
out
lcall
std
add
insb
dec
pop
jmp
xor
call
or
adc
mov
pop
push
sbbl
int3
in
or
aaa
mov
scas
clc
pushf
add
scas
jg
cwtl
out
xorl
icebp
dec
pop
cmp
mov
push
subb
cltd
mov
shl
fs
decl
mov
sub
iret
inc
add
outsl
mov
shll
mov
mov
loope
fisubrs
and
mov
in
inc
dec
fs
ljmp
scas
pop
add
pusha
xchg
pop
icebp
dec
pop
mov
xchg
jge
xor
fwait
nop
adc
out
sbb
call
mov
push
popa
inc
mov
repz
aaa
ljmp
fbld
push
push
lds
cmp
pop
adc
xlat
xor
out
sub
xchg
pushl
dec
xchg
in
sahf
out
pop
rcrb
orl
cmp
sub
jnp
jmp
in
xor
and
ret
clc
js
push
outsb
jge
sbb
mov
ljmp
decl
ficomps
aad
test
sbb
jle
jmp
int
out
popf
cmpsb
lahf
es
adc
push
inc
and
xchg
stos
dec
enter
jns
neg
fiaddl
int
insb
loopne
cwtl
ret
ljmp
cli
add
inc
jns
fs
xor
mulb
fcmovnbe
push
and
lea
ljmp
push
pop
lea
out
loop
pop
aam
lcall
mov
ret
dec
subl
mov
call
jecxz,pt
shlb
dec
pop
je
incl
rcrl
jb
in
enter
xchg
dec
jl
inc
decl
lock
push
xlat
xchg
cli
and
mov
fistpll
call
mov
test
pop
pop
jecxz
cli
mov
add
fmull
lcall
mov
jb
js
xor
test
jmp
adc
inc
cmp
mov
movsl
adc
inc
scas
lods
shlb
lret
inc
stos
inc
or
cmpsl
scas
and
pop
jle
daa
cld
fstpt
incl
inc
mov
insb
mov
imul
inc
and
jne
jg
xchg
inc
call
insl
or
movsl
daa
or
mov
mov
fnstcw
mov
outsl
mov
cmp
cs
cltd
js
cmpsl
mov
and
insb
jg
stos
shrl
fcmovb
mov
hlt
sub
inc
inc
pusha
sbb
lea
call
je
push
jno
aaa
fisttpl
xor
lahf
mov
hlt
mov
repz
push
inc
out
sub
fwait
lods
div
lods
into
inc
xor
ret
les
xchg
push
xor
decl
repz
mov
shl
cmp
out
xchg
add
lcall
push
mov
repnz
mov
xor
arpl
idivb
xchg
and
decl
pop
les
mov
in
push
push
mov
jno
jnp
call
pushl
divl
jb
push
or
into
clc
dec
ss
jb
sub
fcos
push
cmpl
inc
push
pop
push
jge
lret
push
je
mov
adc
mov
mov
push
jne
js
into
push
cmp
lods
add
mov
xchg
aas
and
pop
decl
js
pop
fbld
push
pop
dec
scas
pop
int
mov
rorl
pushf
jge
sub
or
sbb
lods
adc
xorb
sub
aam
sub
loopne
clc
mov
daa
push
outsl
stos
mov
lcall
ljmp
mov
xor
popa
add
daa
fnsave
std
sti
fadd
jo
pop
decl
mov
add
rcrb
cmpb
repz
out
insb
imul
int
lcall
xchg
push
adc
xchg
mov
push
jno
mov
ljmp
out
test
or
mov
loop
int
sub
jmp
sbbb
ret
sub
ljmp
sub
stos
cs
gs
into
lret
jle
push
loop
add
ss
dec
mov
in
mov
fcom
decl
fildl
adc
jno
ret
or
bound
lea
testl
mov
lcall
les
sarl
push
movsl
push
or
inc
sbb
jnp
lcall
jmp
lcall
ja
adc
jnp
xchg
xchg
loopne
sbb
imul
xchg
enter
imull
ljmp
in
ja
fisttps
std
call
imul
jno
repz
rorb
fimull
lahf
sub
pop
pusha
cmp
xchg
fnstenv
add
movsl
push
rcrb
cmpsl
jnp
adc
cs
add
cld
lds
ficompl
mov
pop
nop
frstor
lods
sub
std
imul
call
mov
inc
cmp
test
fidivrl
mov
add
and
out
fbld
pushf
sub
mov
lock
or
lcall
mov
insb
sbb
in
xor
movsb
sub
dec
jmp
mov
movsl
leave
int3
iret
mov
add
xlat
sarb
loopne
cwtl
scas
cmp
fcomip
pushl
xor
pusha
mov
popf
push
xchg
insl
orl
incl
pop
scas
and
popf
mov
push
dec
lret
cltd
and
jno
jnp
or
mov
je
push
cli
adc
cmp
loopne
dec
add
leave
cld
xor
mov
adc
sub
fsubrl
inc
pop
jp
out
lcall
rcrl
arpl
das
jne
mov
push
stc
rcll
jle
mov
xchg
in
aam
fidivs
loope
fs
cmp
fistl
or
mov
sahf
int3
idiv
lcall
cmpl
pop
add
jnp
inc
inc
imul
pop
lods
mov
lods
dec
dec
xchg
jb
push
ljmp
dec
sbb
outsl
xor
and
mov
clc
std
xchg
cmp
js
lahf
dec
rcr
jg
test
call
test
add
es
stos
pushf
clc
movsb
pop
mov
xchg
mov
pop
les
ss
mov
xor
pop
repz
decl
not
aad
mov
leave
mov
inc
aas
mov
pushl
mov
out
cmp
int3
sub
gs
cmp
mov
mov
xchg
rorl
or
outsb
sub
lods
xor
int3
mov
lcall
pop
enter
push
or
fisubrl
aas
in
adc
pop
jle
jmp
or
jmp
les
adc
in
cmpl
cmpsb
jl
mov
addr16
jmp
arpl
repnz
into
cmp
hlt
stos
int
loopne
icebp
fmuls
jnp
daa
cwtl
jge
decl
fdivrs
push
sub
mov
leave
mov
xchg
push
das
push
push
inc
mov
fcomip
pop
lahf
jbe
aam
mov
shll
xor
inc
icebp
aaa
add
ljmp
enter
inc
xchg
ds
sub
and
sub
mov
ljmp
sar
xchg
or
inc
cmpb
sub
fwait
js
mov
movl
mov
dec
jb
mov
pop
cwtl
mov
jmp
imul
dec
sti
stc
mov
pop
mov
out
in
repnz
sti
cmp
jmp
enter
mov
call
cs
add
jno
mov
jmp
cmc
dec
lods
inc
xor
std
push
popa
cmp
adc
hlt
test
je
aas
sarl
orb
mov
daa
inc
sbb
bound
xor
enter
decl
scas
or
mov
mov
inc
jnp
jle
test
cltd
outsb
mov
mov
decl
add
or
lock
xor
in
repz
rorl
jge
mov
sahf
sub
pop
sub
enter
inc
cmp
incl
jnp
div
xor
and
dec
jge
pusha
mov
out
inc
incl
adc
jno
sbb
rorl
mov
mov
pop
or
call
repz
sub
pop
aaa
test
rclb
ret
and
mov
adc
sbb
xchg
sub
pushl
sub
xor
aam
xchg
xor
jnp
and
cwtl
dec
imul
jns
ja
ljmp
es
aad
xor
and
sbb
ja
adc
sti
jmp
arpl
test
inc
jns
test
push
orl
and
shll
mov
adc
ljmp
pop
push
cwtl
clc
lret
pop
pop
dec
out
cmp
mov
sbb
adc
mov
inc
mov
js
push
mov
mov
jecxz
sbb
mov
cmpsl
mov
pop
decl
inc
cli
jmp
or
push
sub
stc
adc
xchg
aad
or
repnz
push
in
mul
and
call
or
fcmovnb
lods
jbe
mov
lock
inc
insl
insl
or
pop
mov
pop
xchg
aas
pusha
xor
sbb
dec
jg
jg
pop
ret
aaa
sub
inc
movsb
fwait
repnz
dec
outsb
dec
sub
rorb
or
jecxz
mov
stos
cwtl
les
adc
js
icebp
sub
loopne
scas
cmp
xchg
and
cmp
xor
sbb
pop
inc
inc
lock
pushl
cwtl
insl
fadds
int
push
lahf
sub
jo
adcl
push
sub
loop
and
sbb
xor
cmp
call
xor
sbb
das
shrb
leave
cmp
sbb
mov
ljmp
pop
xchg
mov
shlb
aas
imul
xor
leave
push
lcall
icebp
in
pop
xor
mov
pop
lahf
push
xor
jnp
dec
pop
repz
into
popf
pop
jae
xor
std
cmp
addr16
pop
ja
int3
iret
jmp
jmp
ljmp
cli
int
fdivrs
jne
pushf
add
je
jl
fldt
movsl
imul
ljmp
push
mov
rorb
mov
sub
xchg
add
jmp
lock
dec
lds
scas
mov
push
mov
xchg
xchg
sub
mov
inc
sbb
dec
add
mov
xchg
lods
cmp
jns
loop
xchg
out
mov
mov
testb
fsub
lds
jg
lea
mov
xchg
sub
inc
loopne
jg
add
ret
cmp
aaa
test
push
mov
scas
cs
lcall
outsb
cmpsl
cmp
and
push
ret
jo
jae
xor
ljmp
call
sub
cmp
imul
pop
enter
js
jae
and
leavew
sbb
pushl
out
imul
inc
fwait
sub
xor
aaa
gs
movsb
adc
popa
push
lahf
mov
pop
sub
sbb
lds
addr16
xchg
adc
mov
mov
push
jge
mov
cmp
pop
pop
add
das
dec
sti
add
dec
in
mov
jmp
push
or
sub
dec
jmp
scas
rcl
orl
add
jnp
nop
pop
cmp
call
add
pop
sbb
and
xchg
and
aad
enter
pushl
inc
sub
loop
je
shlb
xor
in
inc
mov
push
ljmp
loopne
jle
lret
dec
jno
pop
sbbl
adc
cmp
mov
jp
push
stos
push
dec
fnstenv
lea
jmp
cld
ret
xlat
mov
cli
push
or
into
mov
push
iret
test
test
jno
sti
enter
xor
cmpsl
mov
sahf
adc
call
aad
hlt
popf
pop
mov
or
cli
out
ja
jmp
inc
jp
add
mov
dec
shll
pop
or
xor
push
jmp
dec
jle
sub
sarb
push
cmp
xor
sub
stos
stos
clc
add
frstor
sbb
pop
or
fpatan
jg
cld
cli
arpl
addb
mov
mov
imul
dec
imul
xchg
lcall
clc
mov
xorl
mov
push
movsl
xchg
mov
hlt
inc
lods
lahf
aas
mov
add
inc
imul
mov
pusha
out
cli
int3
and
push
push
xor
jg
jbe
cmp
out
arpl
jl
popa
and
jg
push
outsl
pop
xchg
mov
js
xor
adc
cmpsl
sub
incl
mov
clc
ja
and
loopne
pop
nop
fidivl
push
out
mov
incl
mov
cmc
cmp
lret
subb
lret
xor
jge
loop
je
subl
roll
scas
cmpsb
and
push
and
rcll
sti
loope
hlt
movl
mov
pop
pop
jl
icebp
std
iret
jmp
fstl
adc
push
sarb
jge
inc
js
jp
in
push
inc
fdivrs
ret
jle
sbb
xchg
test
ljmp
dec
enter
negb
pop
cmpsl
sub
push
push
push
out
xchg
jl
xchg
cmpl
xor
mov
mov
clc
add
sbb
sahf
divl
mov
icebp
jmp
ss
jae
mov
sbb
jo
pop
jle
push
imul
scas
xor
ror
sub
mov
mov
xchg
xlat
je
test
cli
decl
mov
or
push
adc
cmp
call
xchg
imul
std
jbe
mov
mov
ljmp
adc
sub
fnstsw
sbb
jmp
cmc
xor
dec
or
in
cmp
ret
repnz
dec
call
mov
testb
xchg
out
aam
aam
shl
test
mov
loope
inc
push
cmp
pop
in
or
xchg
xchg
jae
hlt
xchg
and
inc
hlt
negb
ljmp
inc
bound
daa
call
push
xchg
pop
jmp
enter
js
or
inc
mov
nop
lea
push
jb
dec
pushl
mov
sbb
adc
mov
fwait
rol
cli
jbe
xor
mov
loopne
into
jge
ljmp
lods
mov
lret
add
sahf
sahf
add
je
mov
add
idiv
pop
add
out
mov
xchg
add
pop
sbb
fcmovnb
jmp
ss
je
inc
aaa
jmp
cmp
sbb
mov
hlt
into
filds
incl
xor
mov
leave
scas
fsub
lcall
lcall
in
mov
jg
out
cmpsw
es
push
push
jl
jae
push
imul
rclb
stc
cli
sbb
bound
inc
jo
out
mov
clc
sub
ljmp
cmpsb
lods
xchg
enter
mov
dec
mov
stos
dec
pop
push
jg
je
pop
orb
cmpsl
cwtl
jns
cmp
add
addr16
push
mov
sti
dec
sub
xchg
ficoml
mov
pusha
and
xlat
adc
xor
repnz
mov
xchg
call
pop
inc
dec
or
pop
jp
lods
mov
es
pop
dec
xor
push
sbb
dec
push
inc
xor
add
fstpt
ja
sub
lcall
xor
rorl
cmp
aas
int3
push
mov
mov
mov
ds
jecxz
cmpb
sbb
mov
fnsave
icebp
lcall
pop
daa
imul
sbb
xchg
sbb
push
addr16
movsl
std
ljmp
mov
jge
adc
out
mov
sub
jnp
rolb
sbb
or
loopne
call
cld
jno
or
push
cmp
adc
mov
jmp
push
fs
xchg
mov
mov
mov
pushl
cld
test
and
add
lods
mov
sbb
aaa
lret
or
ljmp
cmpb
xchg
jae
or
mov
insb
mov
dec
popf
sbb
jmp
jmp
inc
push
int3
inc
sti
jae
cmp
jo
adc
les
aad
decl
dec
lods
roll
pop
movsl
daa
enter
mov
rorl
adc
adcl
test
test
shr
jae
js
jg
das
mov
movsl
cld
push
loop
dec
and
lcall
mov
mov
les
push
subb
lret
gs
lcall
dec
mov
push
mov
repz
out
mov
lret
jns
mov
sub
mov
jne
lea
dec
ficomps
xlat
out
nop
jbe
shl
loopne
mov
clc
pop
sub
ret
aaa
lods
dec
dec
xchg
stc
ret
push
sbb
inc
or
rcll
sub
decl
fnstsw
or
push
pop
jo
cmpsb
bswap
not
sub
jmp
xor
sar
jmp
fs
or
in
stc
aaa
roll
roll
mov
lea
jbe
mov
mov
xchg
addr16
stos
sbb
sub
push
shll
xor
pop
sbb
jne
in
imul
mov
ret
mov
or
mov
xchg
inc
jl
sahf
lods
andl
decl
cwtl
fisttpll
push
leave
mov
fsubrl
xor
xor
stos
ja
fcomps
sarl
push
out
xchg
sbb
lods
imul
ficomps
adc
rorl
out
out
inc
jb
rcll
sti
cmpb
xchg
pop
clc
xchg
sub
lcall
cs
xor
fmulp
shll
data16
inc
mov
test
sbb
adc
xchg
incl
test
jp
mov
ss
or
mov
jp
pop
inc
ja
xchg
das
clc
jg
mov
xchg
dec
jae
rcll
stos
inc
out
mov
push
mov
fnstsw
mov
push
lahf
mov
jp
ficoms
in
fs
call
push
int3
xor
xchg
sti
and
fiadds
cmpsb
decb
jne
mov
call
cmp
add
inc
loop
and
loope
lds
ljmp
dec
cltd
xlat
aad
cmpsl
loope
push
out
inc
xchg
lret
xorl
xchg
js
sbb
mov
ljmp
pop
fs
or
sub
mov
push
xor
enter
decl
popa
imull
xchg
dec
jne
mov
mov
shrl
dec
sbb
out
xor
cmp
das
movsb
cli
fists
es
cmpsl
inc
pop
popa
mov
lret
sbb
jmp
push
jbe
pushf
pop
adc
cli
adc
jmp
xchg
pop
sbb
pusha
loopne
call
adc
or
inc
xchg
mov
pop
cwtl
sti
push
mov
mov
in
push
adc
lcall
push
scas
or
test
out
dec
ds
xor
das
in
and
inc
adc
fstps
xlat
inc
repz
or
dec
dec
sar
mov
mov
dec
xchg
jae
inc
mov
enter
pop
dec
lret
and
mov
pusha
and
adc
cmp
sbb
push
or
out
inc
pop
mov
mov
mov
mov
test
decl
xor
in
dec
ds
pusha
mov
fadd
xor
push
out
ja
add
call
das
nop
inc
and
jle
mov
in
sub
insl
lea
push
add
fisubs
fldl
lcall
mov
jp
jb
scas
ja
sub
lods
inc
mov
mov
decl
inc
dec
int
repz
pop
fbstp
popa
sub
jg
fcmovnu
xor
jge
add
jle
in
fstp
ljmp
jnp
bound
add
sbb
lcall
test
test
sbb
and
les
fsts
fisubrl
out
or
cmp
sbb
pop
pop
leave
cmp
xchg
push
ljmp
adc
int3
push
into
add
or
mov
jns
dec
jb
cmpsl
test
incl
adc
lds
in
mov
loopne
push
bound
dec
rol
sub
ljmp
mov
rcrb
mov
add
ja
jl
or
xorb
loop
fisttps
cmp
pop
out
shll
out
ss
cwtl
pop
packssdw
inc
fldl
lods
mov
cmp
addl
stos
incl
mov
or
dec
das
mov
outsl
xchg
xchg
or
ret
push
adcl
jmp
fwait
adc
push
mov
mov
in
xlat
xchg
xor
pop
dec
jnp
adc
add
lock
push
lcall
pop
jmp
adc
adc
pushf
pusha
cmp
add
addb
mov
sar
adc
inc
test
cmp
jmp
sub
test
adc
mov
lcall
push
aaa
and
dec
lret
sub
jns
dec
mov
je
fwait
sub
gs
arpl
ljmp
lret
je
sbb
sbb
sub
inc
call
sub
pop
test
out
daa
push
repnz
xchg
jl
push
bound
inc
xor
lods
sti
sbb
mov
or
lods
sbb
adc
cli
jmp
out
jl
fadds
fisttps
cmp
add
testb
sbb
push
xchg
jb
ljmp
jbe
cmp
iret
icebp
loopne
fisubrl
jae
lret
cmp
lret
es
ret
lcall
decl
cmp
xor
jnp
push
add
mov
mov
adc
and
loop
jecxz
test
mov
inc
in
mov
call
fimull
in
xchg
stc
in
lods
mov
jle
adc
add
mov
adc
cltd
and
into
push
sbb
lcall
faddl
cmc
aad
ret
pop
sahf
dec
iret
sub
sahf
mov
add
ffree
push
rcll
mov
or
pop
jp
in
fst
stos
sbb
out
idiv
jmp
add
sub
adc
xchg
adc
xchg
lret
cmp
call
stos
bound
movsl
lods
call
xchg
std
mov
negl
pop
out
fistps
pop
mov
pop
jg
push
out
mov
inc
xchg
and
pushl
lock
loope
out
push
inc
ret
xchg
and
push
mov
ret
cld
mov
cmp
lods
rcrl
int
mov
fs
popa
scas
outsl
loopne
lcall
aam
cmp
fstpl
sti
mov
mov
decl
test
mov
loope
mov
enter
sub
and
adc
jecxz
rclb
jmp
fistps
cmp
dec
out
push
mov
adcb
outsl
or
stc
insb
adc
cwtl
ret
cmc
lcall
idiv
test
pop
xor
hlt
jp
inc
lods
call
clc
aam
mov
fistl
pop
cmp
lahf
mov
inc
or
std
inc
cmpsb
pop
xchg
xchg
mov
test
lods
mov
mov
mov
call
push
loope
jl
frstor
out
xchg
pop
imul
sarl
int
xlat
sahf
add
inc
dec
sbb
lods
add
es
fsubp
mov
out
mov
adc
xlat
dec
ljmp
xor
push
and
inc
adc
add
mov
lcall
data16
dec
sub
dec
mov
les
mov
mov
aaa
sub
push
decl
loopne
push
mulb
fsts
sub
cmpsb
pop
out
hlt
xor
stos
add
lock
ljmp
pop
dec
ret
addr16
or
mov
popa
pop
pop
push
aam
mov
ljmp
test
dec
mov
cmpsb
cmp
mov
gs
lods
jle
push
jmp
cmp
cmc
mov
rcll
xchg
callw
outsb
and
dec
pop
test
stos
call
jo
fs
and
ja
addr16
xchg
mov
lcall
cmp
addr16
jp
cmc
inc
mov
xor
xchg
loopne
jg
sti
pushl
mov
in
cli
mov
je
js
adc
cltd
in
xchg
xchg
dec
push
lcall
adc
call
mov
test
decl
nop
mov
js
push
fnop
mov
jnp
iret
jl
mov
mov
mov
jmp
shll
pop
add
adc
mov
cli
imul
add
inc
incl
movsl
rorb
fcoms
dec
mov
rol
mov
or
ds
aad
pop
cltd
add
fmull
test
xchg
sbb
sbb
dec
cld
jge
int3
int3
repnz
movsl
xchg
jb
and
sub
lcall
and
std
add
inc
cmc
xor
lret
out
cli
or
mov
cmp
cmp
xor
das
ret
push
xor
pop
cli
lods
loop
dec
ret
popa
cmp
and
push
out
pop
out
iret
lods
or
cmpsb
ljmp
decl
or
out
les
jl
dec
in
xlat
inc
dec
dec
push
ljmp
cmc
push
shrb
sub
xor
shrl
insl
dec
push
in
cmpsb
fildll
xor
pop
jnp
mov
int
inc
cmp
sahf
fiadds
cmp
jg
cmp
js
push
and
jg
sub
fistpl
sbb
int3
mov
ljmp
push
shll
push
jne
adcb
jmp
dec
insl
mov
dec
inc
imul
lret
cli
in
pushl
lcall
gs
xor
imul
loop
sbb
loopne
test
xchg
call
es
cmc
int3
jg
aaa
sbb
leave
dec
cmpsl
cmp
ja
or
popa
pop
mov
jmp
lret
rol
movsb
outsl
invd
mov
mov
pop
xchg
dec
sub
lds
adc
push
push
mov
pop
test
jg
lahf
jnp
daa
ljmp
jle
adcb
push
mov
add
incl
jno
push
or
xor
push
adc
xchg
and
aad
mov
and
decl
data16
dec
jno
or
repnz
shlb
std
mov
jge
pop
xchg
push
sub
lods
add
mov
xor
adc
cmc
loopne
add
xchg
xchg
sar
popa
lea
stos
adc
loopne
mov
lds
mov
cmpsl
cmpl
pop
xchg
and
pushl
int
add
in
stc
jg
out
adc
push
sti
push
pop
loope
ret
in
jns
or
aas
cli
decl
notb
add
xchg
xor
dec
cmpsb
roll
repz
mov
in
mov
sub
sub
inc
and
and
adc
cmpsb
imul
out
or
data16
fcoms
sbb
jp
rorb
movsb
fiaddl
outsl
push
mov
lcall
fimuls
mov
push
xor
hlt
mov
add
mov
jg
and
loop,pn
mov
add
adc
rcrb
sbb
ljmp
repnz
dec
mov
add
jo
inc
leave
iret
popa
pusha
or
enter
inc
fists
xor
cmpsl
mov
xchg
pop
loope
pop
shl
mov
sti
fnsave
adc
ljmp
and
pop
push
int3
inc
jae
imul
je
mov
jmp
test
sub
ljmp
insl
add
sub
les
mov
pushl
cmpsl
dec
out
add
jg
or
xchg
jge
movsw
and
push
add
ljmp
punpcklbw
pop
stc
cli
lock
pop
fildll
outsb
push
add
out
lcall
bnd
scas
sti
xorl
repz
mov
movsb
icebp
mov
dec
scas
mov
in
jge
ret
jo
mov
in
in
jl
wbinvd
fcomps
dec
scas
jp
adc
popa
cmp
mov
sti
mov
jmp
jecxz
scas
cmp
sbb
inc
cmp
inc
push
cs
inc
lods
pushl
cld
in
mov
int
sub
leave
and
adc
movsb
sbb
mov
cltd
dec
pushl
mov
pop
and
fidivs
mov
subb
roll
stc
jecxz
lds
cmp
call
js
in
je
btr
mov
cmpsb
mov
cmp
lea
daa
js
fcomip
imul
xchg
xchg
imul
sbb
fistps
cmpsl
shll
cmp
xor
data16
incl
in
stos
loopne
pop
adcl
push
push
xchg
data16
cli
mov
push
js
mov
add
decb
pop
dec
adc
xchg
add
cwtl
negb
dec
pop
mov
xor
lock
jl
call
shll
inc
xor
cmp
pushl
sbb
loopne
dec
push
or
dec
das
xor
daa
pop
imul
pop
ret
bswap
mov
sbb
movsl
or
nop
jge
incl
mov
dec
cmp
sub
mov
outsb
enter
mov
dec
daa
sbb
inc
xchg
popf
sarb
mov
xor
mov
call
dec
outsb
mov
sbb
ljmp
shl
in
stos
fcomps
fdiv
fisubs
mov
mov
mov
pusha
fwait
jle
adc
cmp
inc
loop
mov
pop
pop
loopne
mov
cmp
movb
mov
jmp
fldcw
data16
int
cmp
jecxz
jecxz
push
aaa
jmp
into
mov
sub
and
mull
ret
pop
in
cmp
sub
ja
mov
jecxz
cmp
mov
mov
sub
pop
in
outsl
out
push
stos
ljmp
lea
cld
decl
mov
insb
mov
das
mov
outsl
cmp
xlat
lcall
and
mov
cmp
fisubl
dec
add
jmp
incl
xchg
inc
mov
or
inc
cmp
sarl
sub
mov
push
xchg
std
lcall
aam
and
pop
hlt
scas
data16
mov
fsubr
add
and
xchg
pop
dec
stos
mov
lcall
mov
les
add
out
jmp
and
fs
dec
bound
jno
out
pop
repz
sub
jne
inc
mov
fnclex
cmp
mov
mov
imul
jbe
xchg
mov
adc
dec
add
ljmp
imul
jns
out
movsb
jmp
in
pop
mov
subl
adc
out
jnp
cmp
or
js
loope
decl
je
sub
clc
add
gs
cmp
testl
cmp
sar
jns
fsub
add
ljmp
or
leave
je
xor
and
int
cwtl
mov
cld
mov
out
test
aad
xor
mov
call
mov
test
mov
cmp
loope
rcrl
push
gs
dec
jno
or
aas
stc
jns
rcr
js
in
outsb
loop
aaa
push
or
test
lahf
add
mov
cmp
cmp
add
pop
and
push
fistps
and
xchg
cmp
vpsubsb
loopne
clc
sbb
inc
adc
or
pop
mov
push
mov
sub
es
sub
xchg
lcall
dec
xor
mov
sbb
mov
ljmp
xchg
push
mov
sbb
stc
orb
rdmsr
jp
faddl
inc
jge
jo
sub
out
sbb
fstpt
andb
xorl
cmp
sbb
mov
mov
mov
mov
mov
pop
popa
loop
test
sahf
push
xchg
and
sbbb
out
xorb
imul
cmc
in
lcall
mov
test
push
sub
push
fildl
arpl
outsb
adc
call
inc
xchg
out
fstl
push
nopl
divb
popa
in
mov
mov
adc
jg
jmp
sbb
mov
cld
mov
sbbb
lcall
mov
lods
mov
repz
mov
js
lahf
pop
lcall
push
and
jo
rcrb
flds
adc
decl
cs
nop
lret
out
neg
movsb
addr16
mov
add
add
inc
jno
lcall
push
mov
aas
mov
data16
xchg
daa
test
scas
cmpsb
fs
outsl
iret
cs
pop
mov
das
mov
lcall
dec
ss
ficoml
fldenv
push
jmp
sub
pop
decb
jl
lcall
rorl
leave
lods
push
add
es
fs
pushf
xor
sbb
fsubl
inc
inc
fcomip
cmc
das
xor
out
push
and
lahf
xor
dec
dec
bnd
push
ds
mov
xchg
lcall
mov
mov
xor
fisubrs
xlat
fs
test
mov
mov
jmp
shrb
int3
xor
and
push
add
out
add
mov
call
jecxz
push
bound
inc
sti
xchg
push
imul
cmp
pop
test
jbe
push
xchg
das
and
dec
push
ss
and
push
cmpsb
mov
pop
add
jg
mov
sub
dec
push
and
push
push
inc
mov
adc
bound
mov
push
ret
add
jecxz
add
lahf
sti
rdmsr
or
sub
les
jmp
adc
push
pusha
jnp
adc
xchg
cmpl
fsub
push
mov
int3
cld
orb
aaa
inc
clc
jl
xor
pushf
cmp
xlat
jmp
ljmp
pop
pop
dec
dec
stos
cwtl
jl
mov
or
sbb
fbld
sbb
push
ja
add
mov
sbb
pop
rep
dec
and
stos
push
cmp
mov
out
incl
shlb
shl
mov
arpl
es
mov
jmp
mov
push
rclb
xchg
dec
xchg
dec
addr16
test
inc
lock
dec
dec
pop
clc
popa
inc
sbb
adc
lcall
cmp
inc
stc
mov
loop
loop
filds
fistpl
pop
lret
push
inc
mov
test
inc
in
int
outsb
nop
xchg
insb
test
test
push
jne
sbb
call
loopne
xor
loop
fistpll
movsl
jmp
movsl
push
ja
pop
jb
lcall
xor
adc
mov
icebp
in
cmpsl
adc
dec
or
dec
outsb
adc
add
lcall
das
or
xchg
lea
inc
aaa
je
xor
stos
mov
fbstp
inc
je
mov
pop
push
insl
xor
sti
imul
lahf
cwtl
sar
call
fstps
rorl
imul
mov
dec
sti
enter
mov
mov
mov
jmp
inc
xlat
outsl
and
aam
jmp
cmpl
mov
lods
das
add
jmp
filds
repnz
dec
sbbl
jp
pop
insl
gs
sti
hlt
xchg
dec
test
lahf
pushf
icebp
push
add
das
lret
cmpsb
decl
jno
xorl
fcomip
jl
dec
outsl
aam
mov
sbb
dec
lods
mov
add
dec
inc
in
testl
adc
mov
and
jmp
decl
filds
stos
or
jns
pop
pop
aas
and
mov
or
xchg
imul
test
cmp
adc
lcall
dec
sahf
fldcw
xchg
fsubr
sbb
loopne
cmp
mov
ljmp
inc
testl
loope
add
decl
mov
or
mov
and
dec
mov
cmpsl
fwait
mov
adc
and
and
push
ljmp
shl
lcall
sbb
popa
adc
jl
and
sti
out
or
decl
and
pop
inc
out
add
push
mov
cwtl
in
jg
sub
scas
jle
mov
clc
daa
adc
push
sbb
mov
lcall
sbb
push
jo
mov
dec
insb
xchg
lcall
fimuls
daa
mov
mov
jo
adc
sub
pop
dec
or
cld
lcall
mov
pushl
xchg
cmpsl
jmp
jno
sub
jg
jl
mov
test
push
dec
jl
jg
ljmp
fdivrl
push
mov
mov
sbb
push
xchg
aam
aas
out
nop
xor
xchg
inc
xor
xchg
pop
sbb
lea
lock
pop
jle
es
loope
pop
add
jmp
fnstsw
lahf
xchg
jmp
cltd
fwait
push
hlt
movsl
inc
cwtl
clc
mov
mov
fs
popf
inc
repnz
std
cs
push
fiaddl
div
mov
mov
adc
ljmp
xchg
sbb
or
iret
push
mov
and
cld
dec
jae
adc
notb
mov
mov
jl
rorb
mov
sbb
cmp
jmp
inc
ror
std
pop
xchg
push
add
flds
sub
push
fsubrl
adc
cmc
jg
adc
lret
mov
test
into
dec
adc
leave
or
decl
and
mov
lret
scas
push
push
icebp
xor
loopne
mov
fxch
cmpsb
sbb
or
jmp
icebp
and
adc
xor
add
bound
ljmp
int3
insl
cmpsb
or
dec
bound
insb
cli
test
icebp
lcall
mov
jo
in
imul
jg
aas
jecxz
push
adc
xchg
sub
fcomip
sbb
shlb
pop
outsb
xchg
add
dec
add
lds
xchg
test
mov
ja
push
pop
fcompl
lock
cmp
insb
and
or
cwtl
dec
ja,pt
jecxz
push
adc
pop
not
stos
jecxz,pt
mov
push
sub
adc
jmp
cmp
outsb
jecxz
stos
mov
cmp
call
mov
xchg
pop
loop
mov
add
xchg
xchg
push
fsubl
call
mov
xchg
cmp
sbb
push
dec
sbb
outsw
arpl
mov
bnd
out
in
xchg
sbb
xor
and
lahf
ret
pop
add
repz
roll
cmpsb
or
mov
mov
shll
jae
xor
mov
add
lcall
in
pop
dec
jmp
inc
adc
sbb
cmp
loope
pushl
mov
lods
ret
addr16
sbb
outsb
jg
inc
cmpsb
push
jo
mov
jecxz
pop
ret
jp
and
les
ds
adc
outsb
adc
idivl
das
hlt
mov
rolb
js
sub
push
push
cwtl
pop
das
or
ss
xchg
xchg
int3
push
pop
push
sahf
ret
outsl
decl
add
mov
jne
push
js
insb
pop
dec
lock
decl
sbb
add
sar
jge
ret
cmp
mov
lret
fistpl
les
jl
push
fbstp
and
or
orl
dec
xchg
push
push
mov
adc
clc
lods
ret
add
jmp
push
mov
nop
mov
ljmp
mov
stos
dec
les
std
or
adc
andl
in
gs
dec
cmp
jl
rcl
push
fsubr
fistpl
loop
imul
orl
pop
pop
inc
imul
es
scas
lock
xlat
xchg
sub
in
jns
add
pop
lods
sbbb
pusha
lods
ljmp
clc
xchg
aam
cmp
jge
loope
pop
mov
adc
ljmp
dec
repz
pop
lds
or
popf
push
cmp
dec
pop
mov
sub
mov
mov
test
xchg
sub
lods
cmp
out
mov
xor
cmp
pop
sub
lods
rcl
push
add
fucomip
or
loope
dec
xorl
test
sub
or
dec
xchg
xchg
dec
mov
jp
data16
pushl
ds
add
cmp
ds
cmp
arpl
cltd
add
and
and
enter
push
inc
iret
add
stos
mov
xchg
test
jecxz
mov
bswap
imul
jmp
mov
xchg
xor
jne
push
jg
pop
push
call
push
in
xchg
xchg
jo
iret
add
dec
xchg
sbb
out
xchg
inc
lods
xchg
push
mov
cmp
je
mov
pop
pop
pop
data16
inc
add
jl
add
cmp
push
incl
push
bound
pop
clc
enter
jae
stos
mov
jle
and
xchg
add
pop
lock
arpl
or
mov
or
adcl
icebp
adc
or
push
sub
std
or
xor
scas
rol
repz
jo
pop
popf
out
cmp
cwtl
sub
mov
jb
pop
dec
push
push
push
jnp
out
dec
mov
cmp
ljmp
mov
out
mov
push
jbe
push
xlat
lret
adc
sti
fnstsw
stos
loopne
pushl
and
cmp
lods
test
mov
push
xor
push
mov
les
push
int
enter
popf
or
les
pop
mov
mov
or
jl
push
push
test
adc
mov
mov
mov
adc
imul
stos
sub
cld
jo
sbb
pushf
mov
mov
fstl
mov
mov
xor
xor
jb
shll
pop
shrl
lock
mov
jae
call
jecxz
inc
xchg
imul
inc
adc
outsl
mov
cs
stos
xor
fstpl
shrl
jle
mov
das
cmpsl
pushw
sahf
jmp
lcall
and
pusha
sub
testb
gs
clc
mov
stos
inc
arpl
xchg
fadds
aas
out
mov
mov
xchg
cmp
cld
out
inc
push
jge
or
in
test
mov
fisttpll
into
inc
addb
fs
add
int
jnp
icebp
imul
lea
insb
je
or
decl
push
xchg
in
mov
inc
addr16
lock
push
lahf
movsl
inc
mov
in
cmp
jge
pop
push
push
jnp
push
test
xchg
stos
stos
jmp
dec
out
int3
insl
scas
push
dec
adc
movsb
cmp
dec
dec
cmp
das
mov
subb
cwtl
adc
nop
inc
pop
outsb
pop
lods
xor
cli
sar
jmp
sub
popa
pop
push
aaa
jg
cmp
push
xchg
pop
popa
inc
mov
push
stc
push
scas
mov
mov
and
adc
lea
xor
lahf
out
int3
js
repz
push
je
mov
cmp
mov
int
cmp
mov
call
imul
stos
cmc
mov
sub
imul
imul
adc
dec
and
cmp
push
fnsave
jl
ret
xor
mov
xlat
inc
in
inc
sahf
inc
xchg
stos
mov
pop
inc
arpl
sbb
pop
sbb
xor
incl
daa
stc
fdiv
fbld
and
dec
sti
call
cltd
ja
jp
lods
mov
jbe
pushf
pop
jo
das
mov
sub
pop
jl
rol
cli
mov
aaa
jp
or
xor
mov
ja
pop
mov
out
aam
xchg
xor
ret
pop
mov
lcall
fsubl
xchg
pop
adc
leave
add
ljmp
dec
movsl
ss
add
out
int3
popf
add
sar
jmp
or
aam
ljmp
call
push
pop
nop
jne
repz
imul
pop
xchg
dec
and
icebp
decl
fisubl
xchg
leave
dec
fdivrs
jne
mov
shl
add
shll
fbld
xchg
out
sti
mov
aad
test
ljmp
pop
push
cmpsl
ret
popf
adc
jae
es
mov
cltd
lret
in
lods
sub
add
loopne
call
jl
xchg
sub
fstp
insl
push
jmp
aad
xchg
xlat
cmc
and
pop
dec
xor
test
mov
lret
push
push
adc
cmc
shll
outsb
push
mov
lock
imul
imul
call
sub
jns
aas
cmpsb
lods
mov
imul
in
mov
hlt
jp
sub
in
fildll
jg
pushl
test
stc
int3
imul
int3
stc
xor
pop
sub
mov
ja
lods
cmp
aad
loope
adc
sbb
loope
ret
or
or
incl
adc
inc
lock
in
push
sbb
xor
xor
lcall
pop
test
xor
xchg
mov
cs
push
movsl
loope
pop
out
arpl
cwtl
shlb
jno
ljmp
or
add
in
daa
ret
push
dec
insb
cwtl
es
push
mov
out
mov
cmp
fcomps
shlb
loopne
dec
repnz
stos
xor
decl
sbb
gs
add
inc
mov
xor
mov
fs
lcall
pop
out
xor
mov
ret
fisttpl
xchg
cmp
xor
mov
mov
lock
cmp
cmp
popl
pop
mov
lods
xor
fcomps
cwtl
mov
popa
out
sbbb
push
icebp
or
ret
dec
adc
stc
adc
adc
push
stos
in
xchg
cmp
shll
mov
hlt
push
pop
aas
or
mov
nop
jecxz
inc
fisubs
push
push
ds
push
call
pop
sub
bound
test
push
std
addr16
jmp
push
scas
ds
and
push
ljmp
incl
movsl
pusha
aad
filds
push
dec
add
and
adc
out
push
dec
and
inc
mov
call
pop
and
aam
iret
data16
push
fbld
mov
and
cmp
or
movsl
sub
cs
cmp
test
and
lcall
aas
push
cmp
pop
insl
jmp
pusha
lret
cmp
push
aas
mov
inc
pop
int3
and
pop
mov
dec
int
xchg
sahf
mov
mov
adc
call
int
roll
int
dec
sub
shll
jecxz
pop
out
adc
ljmp
jo
fsubs
rcll
cmpl
xchg
call
lcall
out
popf
sbb
and
fcompl
xchg
dec
rcll
pop
loopne
ffreep
or
incl
or
lahf
inc
jae
aad
movsb
gs
aas
out
cs
cmp
icebp
or
and
pop
les
dec
dec
orb
mov
xor
sbb
sti
mov
sub
jmp
decl
mov
xchg
cmp
dec
and
jge
adc
xchg
dec
lcall
add
or
pop
fistl
dec
inc
xor
xchg
cmpsl
int3
xchg
shlb
cltd
js
decl
cmp
fwait
jl
cmp
add
mov
xchg
stc
mov
incl
ljmp
das
sbb
dec
icebp
dec
subb
jns,pn
xchg
scas
push
aaa
adc
adc
adc
sub
cld
outsb
cld
call
test
movsl
xchg
xchg
inc
cmc
cwtl
push
popf
icebp
pop
arpl
mov
mov
aad
push
jecxz
sarl
xor
sahf
test
mov
pop
pusha
xchg
mov
or
push
xor
cmc
imul
in
mov
xchg
scas
dec
push
mov
and
les
dec
and
clc
pop
ljmp
xchg
jge
mov
push
icebp
aas
rcr
lahf
insb
dec
ret
movsb
sbbb
push
and
jno
ljmp
es
dec
ja
fadd
inc
lcall
js
cmp
xchg
mov
in
mov
cmp
je
push
decl
mov
dec
mov
lcall
and
adc
jg
rcl
jbe
xor
ror
lea
add
decl
hlt
push
shrb
xchg
cwtl
std
es
sti
rolb
leave
sbb
idiv
call
fwait
cwtl
enter
cli
aas
sarl
inc
data16
sbb
jo
adc
fcomps
push
lcall
hlt
ja
mov
add
xor
mov
add
lret
rcrl
xorb
sbb
jae
pushl
jmp
jl
mov
icebp
or
rclb
mov
dec
fisttpll
fs
pop
je
and
rcrl
pop
dec
aaa
movsb
xchg
push
ficoml
xor
push
or
out
mov
mov
imul
push
lcall
pop
xchg
shll
cltd
aad
outsb
add
iret
icebp
ja
fsubrp
ljmp
xlat
or
jecxz
or
in
inc
xchg
dec
pop
out
test
inc
cs
in
adc
jp
xor
dec
push
stos
cmc
xchg
das
and
es
or
shrl
incl
cmpsl
lods
popa
in
sbbl
mov
or
aas
add
pop
fnstenv
into
ljmp
mov
inc
out
sarb
jmp
jp
xor
pusha
out
push
sbb
ljmp
cld
call
mov
jl
enter
cmp
jne
cmpsb
cmp
mov
ret
les
pop
mov
xchg
jg
push
mov
ss
cmc
jmp
cld
sub
mov
sbbb
orl
sub
pushl
dec
jmp
lods
and
cli
out
dec
lods
adc
outsb
xchg
and
ss
clc
mov
mov
popa
in
in
dec
jae
leave
sub
out
xor
mov
jg
fwait
xchg
mov
incl
std
add
int3
outsb
jbe
loop
jle
mov
ds
test
fmul
outsb
sbb
xchg
stos
jle
mov
lods
sub
mov
cmp
call
cld
push
adc
stos
clc
imul
inc
das
lcall
ljmp
rorl
mov
inc
pop
fdivp
xlat
mov
jecxz
push
cmc
aaa
ljmp
pop
mov
outsb
xor
jecxz
add
jmp
movsb
mov
movsl
lret
clc
and
pop
jmp
sbb
add
mov
jb
jmp
in
xchg
adc
clc
dec
into
push
xlat
push
mov
je
xchg
sub
sar
mov
xchg
mov
fdiv
dec
insb
jae
mov
outsb
js
mov
push
outsb
adc
shll
and
jno
jg
in
sbb
fucomip
adcb
jmp
sub
push
std
fidivs
cmp
icebp
xor
loope
mov
outsl
jmp
imul
pop
push
dec
xor
xlat
xchg
adc
lods
mov
mov
nop
movsb
jno
push
push
stos
scas
push
and
ja
jmp
lret
icebp
jl
sub
sub
mov
mov
out
mov
incl
std
dec
arpl
data16
rorl
mov
push
enter
push
fbstp
fs
jmp
aaa
mov
out
icebp
lds
pop
fwait
sub
lcall
pop
push
cmp
add
stos
int3
push
jo
pop
ljmp
xchg
mov
pop
clc
sub
ljmp
fstpt
aam
scas
es
mov
adc
in
sub
cmpl
ret
push
pop
sbb
push
push
incl
fs
xchg
psubd
sbb
xchg
or
out
lea
ret
in
aas
mov
das
push
or
xor
ds
adc
into
pop
xchg
xor
cmp
ljmp
or
xchg
rcrl
push
test
incl
cli
or
cwtl
movsb
inc
arpl
out
les
add
inc
xchg
xchg
xchg
movsl
and
lea
data16
fbstp
ljmp
jnp
call
int3
outsl
push
mov
loopne
orl
inc
addl
sub
pop
lret
push
push
cltd
inc
pop
insl
aas
jb
fwait
or
jno
push
lock
push
aaa
lcall
xor
incl
push
bnd
aas
adc
sub
push
cmovbe
or
hlt
sbb
dec
jnp
lret
mov
inc
sbb
je
test
movsl
popf
inc
xchg
mov
jg
hlt
test
or
or
in
scas
cmp
mov
pushl
xor
and
or
inc
adc
icebp
pop
and
cltd
add
mov
xchg
mov
ljmp
jae
leave
add
jnp
test
jecxz
arpl
mov
stos
out
xchg
jecxz
xchg
outsb
ljmp
inc
and
jbe
in
jb
pop
xchg
pusha
xlat
jle
fcos
call
rep
inc
rorl
repz
mov
out
test
mov
jno
mov
mov
push
lock
adc
pop
in
dec
mov
pop
or
fsts
loop,pt
mov
lds
mov
dec
fsubrl
test
and
or
jg
adc
idivl
sbbb
pushl
imul
stos
mov
jb
cmpsl
in
pop
mov
in
xchg
cmp
jmp
xchg
outsb
out
jle
cmp
xadd
xchg
push
and
rcl
mov
sbb
mov
fdiv
sub
pop
idivb
inc
mov
sti
js
inc
mov
ret
inc
xchg
fs
fwait
mov
out
lcall
mov
fucom
mov
dec
enter
sbb
test
loop
sar
fbstp
fsubr
mov
mov
fs
std
pushl
cmp
fbld
mov
xchg
stos
mov
frstor
cmpsl
in
jns
jnp
sar
decl
andb
sub
add
jnp
mov
jmp
pop
repz
ss
fistpll
xchg
push
mov
dec
cltd
or
out
pop
pusha
adc
movsb
cwtl
push
xchg
call
sub
dec
dec
dec
push
out
jae
xchg
sbb
add
dec
jnp
sarb
cmpsb
adc
dec
cmp
je
sbb
popa
cmpb
push
ljmp
pushf
repnz
cmp
and
jecxz
hlt
dec
mov
and
and
mov
out
pop
cs
mov
jmp
pop
call
lcall
and
sbb
cmpsb
icebp
repnz
xlat
les
and
in
pop
arpl
ljmp
push
dec
pop
js
mov
mov
sub
test
adc
mov
sub
lods
jmp
or
mov
add
push
lcall
outsl
rcll
mov
xor
test
call
push
fnstenv
in
out
pop
mov
sbb
jl
pushl
in
pop
imul
push
and
mov
insl
sub
or
call
jp
aad
fildll
mov
inc
add
dec
out
orl
decl
adc
pop
outsl
cmp
mov
ds
and
icebp
lods
rcr
xchg
lock
adc
stos
fistpll
fisttpll
imul
and
mov
icebp
mov
adc
jge
xor
or
cmc
mulb
pop
cmpsb
mov
mov
jg
pop
xor
push
jne
int3
lods
into
mov
clc
shll
int3
xchg
xor
lcall
shlb
inc
bound
fwait
loopne
insl
mov
sbb
imul
cmp
std
incl
imul
mov
mov
push
aam
or
mov
std
fs
cmp
call
add
or
mov
sub
addr16
aad
xor
incl
pop
cmp
rclb
pop
adc
mov
fcomip
and
addl
adc
mov
adc
jg
pop
out
dec
pop
iret
lods
mov
xor
mov
clc
popf
jne
inc
xchg
out
jae
mov
incl
dec
or
outsb
mov
mov
cli
dec
sub
call
repnz
sub
adc
ret
cmpsb
insb
ret
adc
sbb
adc
fildll
xorb
xchg
in
lock
repz
jp
cli
sbb
shlb
lahf
call
or
sub
mov
xchg
jg
decl
inc
adc
call
je
loop
jecxz
repnz
mov
xlat
mov
jne
in
xor
cmp
add
roll
mov
lcall
pusha
adc
add
inc
ret
stos
push
lods
and
stos
or
adc
mov
arpl
pop
mov
adc
decl
and
dec
pop
inc
xor
jmp
ficoml
cmp
adc
out
sub
xlat
lcall
sub
jb
daa
xor
out
dec
lea
aam
js
cmp
movsl
cmp
pop
add
fildl
mov
lret
aad
pop
dec
mov
mov
pop
into
mov
xor
lods
sbb
call
pop
or
sahf
sahf
in
mov
push
loopne
pop
cmp
jp
fildll
sbb
jecxz
add
sti
repz
into
pop
mov
movsb
jl
js
arpl
mov
jg
mov
int3
clc
stos
test
imul
enter
inc
insb
outsl
rep
scas
andl
jmp
push
lds
clc
shlb
inc
push
test
dec
jbe
xorb
jb
lds
sub
jnp
sti
out
mov
movsb
dec
loopne
inc
mov
pop
mov
out
aam
aas
cmpsl
loop
call
dec
sub
insl
push
inc
imul
rorb
sub
hlt
push
adc
mov
push
enter
fadd
push
mov
jp
cwtl
mov
ljmp
add
stos
fnstcw
cmp
lcall
push
stos
fimuls
ficomps
cld
pop
fs
faddl
xchg
inc
pushl
jns
sbb
rorl
mov
lea
mov
shlb
pop
jbe
cmp
mov
fdivl
xchg
bound
and
int
sub
popa
jbe
in
or
outsl
add
rorl
jne
loope
jmp
test
xlat
add
icebp
ds
jg
out
les
or
sahf
sbb
or
jnp
sbb
ljmp
loopne
push
sub
mov
scas
cmc
cmpsl
cmp
push
negb
lret
clc
call
daa
sub
arpl
push
sub
or
add
pop
lcall
xchg
inc
repnz
out
ds
jo
sub
ss
mov
test
inc
add
dec
xor
jo
inc
cld
mov
jnp
dec
adc
out
repnz
add
inc
xor
idivl
cwtl
incl
out
jp
mov
jp
mov
clc
int
push
dec
inc
movhps
cld
add
popf
xor
fistl
int
cs
add
pop
push
add
adc
pop
xchg
mov
fsubrs
scas
pop
mov
mov
dec
fcomip
outsl
les
xor
int3
mov
mov
in
mov
ljmp
sahf
pop
loope
mov
jb
out
mov
arpl
aad
jg
test
mov
mov
pop
or
loopne
push
pop
out
pop
mov
dec
mov
lcall
mov
or
adc
or
mov
stos
icebp
fs
jg
es
dec
mov
sbb
cmpsl
sti
sbb
int3
in
sbb
cli
icebp
mov
mov
loope
jbe
jmp
push
pop
pop
ud0
pop
icebp
or
outsl
mov
mov
loope
mov
hlt
jl
dec
aad
pop
loop
bound
lcall
xor
mov
or
lahf
sbb
nop
leave
stc
jno
lret
adc
stos
aad
cli
mov
movsl
cmp
pop
mov
xchg
cwtl
cmp
jne
cmc
ss
ljmp
add
and
sub
jmp
arpl
push
xor
loopne
xchg
sub
mov
push
jnp
clc
call
bound
sbb
icebp
js
pop
imul
call
mov
mov
push
shl
aam
jmp
xchg
imul
lods
mov
test
movsb
data16
scas
xchg
fstpt
jmp
in
enter
sub
mov
jns
inc
mov
lds
inc
addr16
pushl
sahf
fwait
test
ja
in
insb
mov
push
xor
dec
mov
decl
dec
out
scas
out
sbb
int3
leave
loopne
cmovb
fidivs
cli
ljmp
mov
or
dec
mov
mov
add
sbb
mov
ss
add
addr16
call
inc
add
add
ret
add
xchg
mov
mov
jo
mov
inc
dec
sbb
mov
not
mov
call
int3
sub
jmp
cmp
jbe
dec
jecxz
stos
jmp
and
dec
jnp
jl
ljmp
into
pop
shlb
daa
sbb
sahf
das
sub
mov
cmp
xor
jle
fcmovbe
loopne
jo
imul
lds
mov
inc
inc
jp
pop
les
pushl
pop
cmpsl
mov
and
cmp
add
jmp
xchg
jge
push
mov
lcall
fidivs
add
pushl
sbb
testb
lret
cmpsb
arpl
outsl
mov
mov
cmp
decl
add
add
adc
jb
fmull
inc
into
mov
inc
shll
push
fsubs
xlat
xor
mov
jl
stc
bound
and
movsl
cli
mov
call
mov
xor
or
lcall
subb
cli
leave
sti
xor
pushl
pop
pop
outsb
add
dec
sbb
int3
and
or
lods
orb
cmp
push
add
sub
pop
icebp
mov
ret
and
push
imul
rcr
mov
mov
dec
aas
or
and
pop
hlt
push
scas
xor
test
mov
subb
fimull
push
dec
movb
addb
xor
mov
ja
inc
xor
outsb
jg
lcall
je
or
into
dec
lods
rol
insl
hlt
push
fcomp
int3
or
decl
jno
das
andb
mov
push
mov
adc
fisttps
mov
fidivs
fiaddl
in
out
mov
sbbb
jp
aad
mov
mov
sub
or
adc
adc
gs
fimuls
dec
nop
sahf
xchg
jge
pop
loope
call
jbe
xchg
pop
pop
or
fbld
lahf
aad
ss
cmp
loope
sbb
lret
gs
clc
mov
repnz
cmpsl
fs
mov
sub
xor
aaa
iret
dec
inc
adc
scas
test
ret
inc
sbb
cmp
decl
inc
fbld
test
xlat
xor
shrl
jle
lcall
out
mov
xchg
push
stc
imul
ljmp
lret
push
pushl
pop
test
fwait
out
repz
fistpll
xchg
idiv
lcall
jecxz
outsl
xor
pop
ja
xchg
clc
push
pop
adc
ljmp
bound
inc
lea
outsl
in
push
push
idivb
cmp
stos
push
loopne
clc
repz
xchg
sahf
mov
pusha
add
call
outsb
and
pop
in
jge
div
int
push
dec
fcoms
out
cwtl
mov
mov
cltd
fidivs
std
incl
mov
js
rol
faddl
repnz
jp
and
mov
add
ljmp
and
insl
fsubrs
push
repnz
lcall
xor
imul
xor
in
aad
jno
andb
and
xor
mov
pushl
daa
js
int3
fldl2e
push
adc
xor
adc
sbb
call
in
fwait
jb
fildl
repnz
leave
push
dec
sbb
add
or
xchg
sar
call
std
fsubrl
mov
inc
pop
adc
jl
out
movsl
or
cmc
push
pop
xor
pushl
andl
lret
xchg
fsubr
inc
and
dec
lret
fildl
enter
imul
jg
mov
and
sub
xchg
scas
or
mov
push
jno
jl
ss
or
bound
call
ret
xchg
out
mov
rcrl
imul
inc
fld
in
fisubrl
dec
in
sbb
and
loope
es
push
cmc
or
es
out
pop
inc
cli
pop
push
clc
cmp
lcall
in
inc
push
fimull
pop
fimuls
adc
pop
ljmp
adc
icebp
lret
adc
pushw
jno
out
or
inc
repnz
xorb
arpl
decl
or
loop
test
jmp
and
pop
pusha
inc
cmc
xchg
test
enter
mov
mov
push
jmp
fnsave
inc
mov
lds
out
pop
cmpsl
pop
xchg
push
push
mov
jns
and
fcos
sahf
add
call
int
xchg
xchg
ss
pop
dec
dec
inc
sbb
call
xchg
fidivrs
sbb
iret
lods
cmc
fwait
lds
andb
cmp
mov
shl
scas
and
stos
fstl
jecxz
push
movsl
ret
push
pop
nop
cli
add
ljmp
mov
mov
ds
test
mov
xor
pop
cmp
jle
out
inc
add
push
incl
out
cmp
mov
andl
mov
cmp
call
jle
mov
aam
add
mov
lahf
adc
mov
xchg
and
pushf
jg
fcomip
mov
dec
xchg
sbb
adc
out
roll
in
test
pop
pushf
movb
ss
or
in
fcomip
push
or
dec
stc
into
int3
js
int3
stc
les
jge
mov
push
mov
jmp
jbe
xchg
or
sbb
inc
popa
push
mov
subb
aaa
or
cld
mov
xor
ljmp
sahf
into
sbb
addb
filds
mov
andb
inc
xor
inc
fistpll
and
insb
mov
mov
lcall
push
movsb
push
loop
pop
loopne
pushl
inc
mov
orb
add
xchg
in
int
decl
xor
std
jmp
sub
lods
xor
jle
and
gs
mov
xchg
xchg
decl
cmp
add
adc
jge
mov
loope
cmp
dec
shlb
ffreep
sbb
cmp
addr16
or
push
and
adc
pushl
sub
push
je
xchg
movsl
mov
add
mov
mov
repnz
pushl
jbe
out
dec
pop
cmp
mov
and
xchg
mov
push
not
sub
adc
mov
dec
mov
jg
loope
pop
stos
std
xchg
decl
sub
ret
sub
out
mov
gs
fisubl
sbb
scas
adc
outsb
hlt
icebp
iret
mov
in
jns
decl
and
dec
adc
xchg
popf
mov
cmpsb
mov
movsl
push
loop
inc
aad
orb
cld
sbb
pushl
jae
push
jne
jae
loopne
fnsave
pop
pop
push
push
sbb
sub
mov
fiadds
xchg
cltd
cmpb
inc
cmp
sarl
jne
outsb
sbb
pop
inc
mov
call
dec
or
push
push
lods
mov
fildl
jg
cmp
xorb
inc
ficoml
test
je
incl
and
iret
addb
cltd
sbb
mov
decl
lock
lret
dec
dec
nop
fidivrl
jle
cmp
adc
loop
push
pusha
std
dec
pop
loopne
push
cmp
sbb
and
lret
js
scas
dec
jmp
lcall
fdivr
mov
or
lcall
push
mov
mov
sbb
decl
sub
or
inc
cs
popf
gs
cmpl
iret
push
sarl
mov
mov
stos
add
or
mov
sub
lret
jp
ret
decl
pop
pop
mov
inc
cmp
mov
bound
adc
pop
out
je,pn
pop
idiv
cs
cwtl
call
decl
jns
cmp
or
iret
mov
mov
aam
mov
push
mov
inc
pop
lcall
pushl
iret
cmpsl
rorl
pop
outsl
fmull
imul
aam
ljmp
aaa
repnz
sbb
cmp
push
std
mov
cli
adc
dec
mov
or
fsts
das
clc
jmp
rorl
addr16
add
gs
aam
adc
push
out
lcall
adc
xchg
mov
rcrl
and
jb
push
xlat
pop
ret
push
xchg
mov
mov
pop
fucom
mov
or
jb
inc
loopne
cmc
jne
mov
inc
inc
call
xchg
icebp
cmpsl
add
add
das
jno
aad
lret
leave
out
sti
pop
lcall
repz
incl
repnz
cmp
pusha
push
or
das
sub
mov
pop
test
filds
repnz
pop
sub
jmp
push
mov
xchg
push
hlt
daa
js
sub
mov
sbb
dec
jno
outsl
mov
sub
iret
sbb
pop
insb
imul
pop
push
popa
test
imul
jb
aaa
imul
test
push
stos
jo
pushl
adc
xor
iret
add
pop
cli
and
addr16
mov
mov
pushl
popf
shrb
mov
add
test
fldcw
mov
or
pop
popa
sar
jmp
and
xchg
gs
adc
in
sbbl
xchg
add
cmpsl
cs
clc
xchg
es
incl
aad
mov
cmp
jp
mov
popf
out
aas
sti
addr16
dec
xor
cmpb
orl
insl
movd
fwait
mov
mov
out
fisttpll
adc
inc
sbbb
xor
mov
sub
sub
cwtl
xor
jmp
pop
fistpll
xchg
repz
pop
js
rcrb
push
test
leave
push
jbe
sub
jp
test
lods
fcomip
or
loope
pop
test
or
cmc
insl
in
shl
push
cld
mov
add
popf
pop
pop
stos
fmuls
aaa
push
push
sub
dec
movsl
loop
xor
mov
aaa
inc
jle
call
insb
nop
or
ficomps
fmulp
dec
les
out
dec
loope
fisttps
dec
xor
xchg
in
and
shll
js
jle
ja
xlat
mov
test
in
xchg
jp
jmp
xor
pushf
adc
into
mov
test
or
push
inc
push
js
cmp
fwait
insb
imul
outsl
outsl
das
push
and
loop
dec
mov
xchg
push
dec
clc
pushl
jge
in
movsl
insl
mov
mov
mov
insb
jecxz
push
push
adc
ljmp
mov
dec
jb
nop
popf
mov
sub
ret
outsb
pop
notl
push
xchg
or
mov
lret
ret
rorl
dec
jnp
cs
test
clc
call
pop
inc
xchg
inc
pusha
inc
push
loopne
test
cmpsb
sarl
inc
jnp
dec
and
push
ret
mov
or
xlat
cmp
jae
sahf
push
mov
jmp
push
mov
test
xchg
or
test
mov
sub
fldt
or
jmp
cmc
and
jg
scas
out
in
loope
dec
pop
outsl
mov
les
nop
mov
popf
add
decl
cmp
lcallw
movsl
ror
pop
lods
hlt
or
cmp
popl
aaa
jmp
xchg
ja
stc
jbe
jmp
cmp
sbb
push
jne
or
fwait
incl
call
fndisi(8087
xchg
cmpb
movsl
and
test
mov
mov
mov
add
add
mov
inc
leave
call
loopne
shrb
in
inc
inc
jb
mov
shl
or
rcrb
shl
aaa
jns
sub
sub
add
scas
mov
or
lret
jg
mov
inc
cmp
cmp
popa
xor
cli
xor
call
dec
enter
sti
call
lret
and
cmc
push
and
and
fdivl
lret
add
iret
mov
jg
loopne
inc
mov
pop
in
leave
enter
les
shrb
dec
jns
cwtl
decl
xor
sub
dec
shll
push
cld
jle
push
cmc
add
divb
or
ret
lods
cltd
mov
jmp
jbe
fs
adc
jns
jb
mov
adc
xor
push
mov
lret
aaa
aas
popa
fisttps
add
cmp
mov
adc
cmpsb
stos
je
out
mov
mov
inc
arpl
test
mov
mov
loope
insb
push
pop
sbb
cltd
jns
mov
adc
lods
enter
mov
movsb
mov
mov
std
add
jnp
pop
cmpsb
pusha
in
push
insb
adc
pop
orb
sub
mov
incl
jbe
push
out
sub
cmp
es
in
mov
mov
lcall
mov
sub
mov
in
enter
aad
jo
cli
arpl
sbb
call
mov
js
xlat
jle
scas
xchg
int
mov
inc
lcall
mov
in
and
scas
push
xor
pop
lret
mov
decl
iret
mov
in
lods
ds
data16
and
mov
mov
xor
lcall
lods
mov
xor
mov
popa
inc
mov
in
lret
or
mov
or
cmc
lcall
push
mov
jl
pop
mov
lock
les
push
inc
mov
aas
dec
sub
adc
mov
call
dec
loopne
iret
enter
push
scas
pusha
fcompl
push
ljmp
xchg
lods
fwait
sbb
xor
fwait
pop
jp
mov
sub
or
lock
jmp
out
and
pop
dec
add
es
xor
out
shrb
lcall
mov
mov
jae
pop
es
inc
rolb
scas
imul
lcall
pop
dec
and
pop
pop
or
push
add
xchg
xor
pop
outsl
cmp
jmp
imul
scas
in
cmp
xchg
jmp
mov
incl
pop
aam
jmp
lcall
out
lcall
push
cmp
ljmp
enter
mov
arpl
adc
rcrb
shlb
sub
or
in
jg
sub
pop
jnp
outsb
cmpsb
test
js
fsubr
lock
incl
out
push
pinsrw
mov
ljmp
popf
sarb
adc
scas
stc
jne
mov
jns
jle
xor
add
jg
movsl
fcompl
je
ljmp
mov
xchg
inc
xor
dec
movsl
sbb
jo
out
dec
or
insb
mov
and
jnp
mov
aad
push
popf
lret
in
or
rcpps
dec
xor
push
out
dec
enter
adc
jge
ud0
incl
mov
mov
test
xor
add
sub
lock
les
decl
rorb
jb
mov
sbb
lods
cmpsb
popa
mov
movsl
aam
arpl
push
mov
jmp
mov
fld
cwtl
push
in
mov
or
mov
or
add
pushl
je
insb
jge
jle
inc
cmp
push
mov
test
adc
std
aas
push
mov
incb
pop
push
fiadds
in
cmp
int3
cltd
mov
jmp
sub
clc
mov
frstor
mov
xor
fdivr
xor
mov
ljmp
adc
mov
dec
xor
lds
push
div
mov
adc
fldcw
incl
iret
loop
xchg
sbb
out
or
and
xchg
idivl
call
xchg
lret
sarl
out
or
pop
icebp
jmp
std
pusha
push
adc
sar
push
jge
cmp
mov
mov
jne
lea
aam
dec
cld
adc
insb
sar
mov
add
push
pop
fdivrl
mov
xchg
std
call
xchg
adc
add
fisttpl
sub
out
call
mov
aad
psraw
in
jnp
mov
mov
and
adc
ljmp
popf
je
scas
mov
jecxz
rorb
icebp
sarb
add
add
scas
lods
cmp
jp
negb
call
nop
push
xor
rcl
jp
jge
push
andb
lcall
movsl
into
mov
jmp
dec
sub
nop
lret
lds
add
jg
stos
out
pop
mov
jns
pop
lods
addr16
call
cld
je
pop
lret
dec
loop
lret
pop
sub
xor
sbb
decb
push
or
jg
incl
shrl
shlb
addb
adc
mov
call
nop
rorb
jo
mov
lods
arpl
bound
ret
js
add
mov
fbld
jb
pushf
jl
or
sub
mov
stc
mov
and
inc
fimuls
xor
dec
dec
jmp
mov
cmp
popf
mov
repnz
icebp
clc
je
pop
sub
repnz
ljmp
test
incl
mov
jo
push
sti
test
and
adc
pop
ljmp
lcall
jb
out
inc
shrl
mov
adc
add
mov
loope
sub
and
sub
fwait
jno
or
jmp
cltd
dec
fldl
je
sbb
push
mov
jle
mov
sub
lcall
fldcw
push
ds
fdivrs
cmp
addr16
lcall
decl
sbb
lea
xor
sti
jle
les
xchg
fstp
in
and
jg
cmp
mov
mov
lcall
idiv
pop
std
jns
mov
or
pop
int
dec
es
insl
dec
push
adc
mov
jmp
int
test
dec
stos
int
lcall
je
stc
std
cmp
jo
xlat
jmp
xchg
mov
mov
outsl
jo
mov
sbb
sbb
shll
pop
out
sbb
xchg
inc
sbb
stos
bound
push
divb
popf
bound
mov
mov
outsl
inc
mov
adc
fdivrp
push
mov
adcb
adc
lods
addl
pop
adc
cmp
popa
push
lcall
enter
mov
cli
mov
jmp
cmpsl
jecxz
scas
jecxz
sti
push
fld
out
push
out
inc
cmp
xor
xlat
aad
adc
mov
cmpsb
pushl
fidivrs
inc
or
pop
push
call
and
push
ror
sub
jecxz
push
cmp
jbe
lcall
xor
pushf
sub
int3
gs
orl
ffreep
cmp
rep
je
inc
arpl
scas
add
leave
xor
or
fs
lcall
in
cmpsb
neg
sub
mov
cmpsl
insb
mov
pop
sub
fsubs
adc
mov
jmp
inc
push
imul
mov
rcl
dec
shlb
dec
cld
mov
mov
lds
or
dec
mov
mov
aas
mov
push
mov
sub
int
mov
push
fildll
std
aaa
repnz
pop
lock
jmp
adc
sub
jns
in
shrl
ja
mov
pop
clc
push
cltd
xorl
mov
outsl
xor
cmp
inc
jnp
int3
mov
aas
shr
lcall
cmp
inc
test
xor
out
xor
add
mov
shlb
call
shl
shll
repz
and
fwait
lods
iret
sbb
lcall
jmp
cli
in
cmp
nop
jg
decl
xchg
xchg
sbb
sbb
cmp
jne
mov
push
jnp
jp
xor
push
dec
es
decb
mov
sub
ljmp
enter
lcall
mov
pushl
jg
cmp
out
fucompp
inc
sbb
xor
imul
subb
jg
out
mov
data16
cs
add
jnp
shll
xor
inc
loop
mov
dec
rolb
cmp
sbb
pushl
test
movsl
sub
inc
loope
xchg
fstpt
mov
scas
insb
sahf
nop
sub
add
dec
push
push
xchg
mov
xor
jp
or
pop
lock
loopne
xor
push
stos
sbb
and
andb
mov
outsl
lods
fmuls
fstps
loopne
clc
fstpt
int
pop
jmp
into
xchg
push
push
push
mov
mov
jnp
cmp
data16
testl
cltd
int3
add
rorl
addr16
cmp
into
lock
mov
add
call
push
loopne
jo
xchg
lea
dec
pop
je
imul
sti
pushf
add
ljmp
cwtl
cwtl
pop
pop
fadd
push
jl
sbb
loop
adc
adc
jns
stos
and
push
shrl
mov
jl
and
add
mov
mov
xor
test
call
imul
mov
insb
es
dec
lcall
aad
mov
imul
in
out
and
adc
jle
sti
mov
dec
or
xor
mov
xlat
in
jb
adc
lods
jo
adc
jg
ljmp
aad
cmp
scas
add
bound
push
jg
and
in
dec
imul
mov
pop
jno
in
push
mov
and
jne
fcomip
add
adc
mov
mov
gs
cmp
scas
loop
cld
jmp
scas
repz
out
jecxz
and
insl
add
popf
pop
mov
ljmp
sbb
push
jmp
out
push
ss
test
xchg
shl
jecxz
mov
and
push
pushl
jge
stos
aad
frstor
adc
mov
adc
roll
pushf
lcall
dec
in
cmp
std
nop
xor
aad
rorb
adc
jp
stc
andps
jecxz
iret
loop
xor
rcrb
mov
jge
cmp
loopne
lods
mov
mov
movsl
sbb
and
jg
push
cmp
adc
push
lea
cmc
pushf
adc
ljmp
fcoml
adc
push
mov
out
nop
rcrb
cmp
inc
xchg
fdivrl
mov
jmp
popa
xchg
sbb
mov
cmp
hlt
sbb
push
xor
popf
shlb
in
sbb
jge
fisubrs
pop
mov
rorb
push
cltd
lcall
inc
out
dec
jns
or
arpl
loopne
stc
loope
sahf
sbb
adc
insb
repz
ja
repz
fldenv
cli
cmp
fstp
or
sub
mov
cmpsb
mov
mov
mov
sbb
push
cmp
aaa
add
mov
lds
jo
incb
sbb
pop
cltd
jge
push
sarb
mov
pusha
lods
cmp
cltd
les
mov
or
jne
out
or
and
inc
adc
insb
push
clc
ud0
call
out
jbe
push
cmp
sub
aad
nop
mov
mov
mov
mov
mov
fildll
pop
fs
sub
xchg
mov
lahf
mov
xor
incl
ljmp
xchg
xor
push
or
cmp
insb
mov
cmpb
mov
mov
popa
lahf
addr16
iret
jmp
or
cmp
iret
mov
pop
push
lcall
inc
daa
movsl
test
xchg
sti
test
mov
cld
pushl
test
jb
out
fnsetpm(287
jge
mov
dec
mov
stos
xor
sbb
fbld
stos
outsl
mov
adc
aas
jbe
popa
push
mov
or
repnz
ror
in
pop
fcompl
jp
es
and
js
pusha
call
add
rolb
insb
cli
lret
out
xchg
mov
xorb
jg
sbb
push
pop
mov
sub
dec
imul
add
jns
ja
lret
daa
mov
cmp
mov
jo
inc
jp
clc
rcrb
lods
mov
mov
das
sbb
cs
sarl
repnz
inc
insl
popa
divb
mov
sbb
jmp
adc
pop
push
repnz
or
fsubs
xchg
fistl
cmp
ljmp
stos
jl
dec
repnz
xchg
fs
push
addl
lods
stc
xchg
jnp,pn
xchg
in
add
mov
sub
in
sbb
vandps
mov
ficompl
sub
jae
clc
or
ljmp
cmp
ret
xor
and
scas
les
call
pop
loopne
inc
cs
inc
ljmp
lds
sbbl
or
sub
adc
int
lds
notl
stc
mov
ljmp
jne
inc
cltd
mov
loop
mov
das
fmul
pop
cmc
inc
jne
andl
sub
sbb
and
aam
xchg
fcomip
xchg
rcrl
loopne
arpl
insl
rolb
sbb
and
push
mov
roll
incl
xor
lds
push
jne
ds
rorl
inc
fisttpl
ret
dec
mov
rclb
mov
decl
mov
xchg
mov
sbb
ljmp
mov
xchg
sub
bound
cmpsb
jl
cmp
pusha
jae
sbb
std
pushl
movsl
inc
aaa
cmp
loop
or
arpl
popa
je
lret
jg
ja
out
decl
jecxz
sbb
ret
cld
mov
xor
daa
lcall
test
pop
mov
sub
add
loope
insl
xchg
push
ljmp
sbb
ljmp
sub
add
cmpsb
lods
or
out
clc
call
jmp
out
mov
pop
cmp
mov
test
xor
decl
lret
or
int
sub
enter
bound
inc
push
in
xchg
mov
scas
mov
xchg
mov
call
sub
jb
and
aad
std
pop
lcall
mull
int
repnz
mov
iret
dec
leave
pushf
je
decl
adc
xchg
adc
fisttpl
or
mov
enter
push
cwtl
cmpb
jg
inc
cmp
paddq
mov
sbb
sbb
jp
pop
sti
fcos
out
add
push
jnp
test
aas
cs
scas
cltd
cmp
cwtl
xchg
mov
push
das
mov
popf
pusha
insl
jno
lret
xor
mov
popa
arpl
or
outsl
scas
push
push
mov
lcall
dec
sbb
push
into
lea
inc
lahf
dec
fs
mov
push
cli
lcall
les
mov
sbb
enter
ljmp
jno
pop
push
test
ja
ljmp
mov
mov
jg
sbb
mov
inc
pop
push
subb
jb
ss
loopne
push
sbb
adc
mov
mov
ss
jae
inc
sbb
cmpsl
dec
or
fdivrl
mov
loope
adc
inc
loop
ss
xor
push
iret
lock
xchg
push
cltd
sub
push
jge
and
xor
cmpsb
ds
ljmp
push
mov
pop
loopne
pop
cmp
adc
lods
sub
addr16
jbe
mov
decl
jg
lcall
rcll
pop
icebp
decl
in
mov
mov
int3
sbb
fidivs
movsb
idivl
scas
mov
mov
or
xor
mov
fidivrs
cli
outsl
roll
int3
decb
and
mov
mov
mov
call
pushf
pop
arpl
jne
dec
addr16
push
out
out
jae
popa
xlat
mov
rorl
add
ljmp
push
inc
inc
ret
pop
pop
jbe
pop
push
xor
push
sbb
out
dec
fbstp
mov
push
popf
dec
ljmp
lea
sbb
subb
jg
xor
in
xchg
push
inc
popf
aam
ljmp
loopne
add
int
pop
inc
cmp
jno
xchg
lahf
add
out
lods
jo
in
cltd
sbb
jg
es
ret
jge
out
lcall
mov
jle
rcrl
outsl
in
incl
ret
test
xor
add
inc
cmpb
add
pop
dec
jb
stos
or
push
lcall
xor
pop
mov
lds
rolb
cmp
icebp
fcmove
pop
adc
cmp
add
xchg
call
push
icebp
add
push
xor
lods
popf
mov
jge
movsl
daa
sub
popa
pushl
std
decl
punpckldq
enter
pop
push
aam
xchg
mov
mov
popf
jmp
jp
ljmp
cmp
lods
sub
or
jge
jmp
outsl
imull
ljmp
or
daa
pop
out
fwait
adc
push
push
movsl
dec
xchg
fcos
outsl
cmp
sub
mov
pushf
mov
cmp
or
jp
xor
push
fdivrp
incl
jg
push
daa
aad
fcmovnu
jno
inc
dec
push
dec
add
cmp
outsb
clc
addr16
cld
outsb
xchg
lods
pusha
add
in
lds
std
pusha
cmpb
call
shlb
shrl
mov
shlb
movsl
push
divb
rcl
in
aaa
jmp
lcall
dec
hlt
pop
cmpsb
pop
loopne
ja
adc
pop
inc
popf
push
mov
adc
push
decl
mov
pop
mov
movntq
push
fisubs
dec
rcr
stos
lret
xchg
mov
inc
cwtl
out
and
popa
sbb
repnz
stos
push
cwtl
or
and
rol
cmp
stos
outsb
pop
sbb
dec
jne
jl
jmp
sub
jmp
test
int
jecxz
lcall
fxam
and
xchg
mov
mov
loope
xchg
in
orb
movsb
add
sub
filds
jbe
and
mov
pusha
movq
shlb
fstpl
imul
jmp
xor
push
dec
jb
jo
dec
adc
aad
popf
loop
fmuls
pop
sar
fdivrs
int3
pop
testb
fidivrl
insb
push
inc
sub
add
out
fsubl
je
decl
lods
imul
dec
in
jge
mov
xchg
loop
mov
jmp
fstpl
xchg
adc
outsl
out
aas
push
pop
outsl
push
hlt
pop
dec
cmc
inc
in
jb
and
dec
jmp
and
and
adcl
iret
adc
push
aad
fimuls
ljmp
sbb
loopne
sbb
cmpl
add
loop
orb
std
lcall
pop
sti
push
sbb
movsl
andb
dec
repz
out
inc
mov
push
imul
das
sbbb
popf
mov
mov
mov
and
or
adc
inc
dec
and
mov
pop
xorl
les
sbb
leave
mov
mov
in
mov
out
cmp
pop
daa
in
or
testb
inc
cmpl
cmpsb
enter
sub
dec
popf
mov
cmp
ss
call
scas
mov
mov
mov
xor
sbb
xor
mov
fwait
inc
mov
ret
in
sbb
mov
pusha
inc
sbbb
xor
call
std
in
inc
sbb
xlat
jp
pop
jbe
aaa
and
xchg
pop
mov
mov
insl
mov
add
incl
xor
inc
mov
sub
cltd
mov
sahf
pop
cmpsl
or
fcomip
push
ljmp
rol
xlat
loop
jle
movb
std
inc
shrb
js
mov
aad
mov
shrb
and
or
xchg
mov
pop
bound
mov
sbb
ljmp
mov
cmpsb
dec
orl
orb
mov
jbe
mov
mov
push
or
call
gs
inc
add
jae
sub
sbb
call
out
xor
xchg
into
adc
mov
pop
jl
lret
cmp
ljmp
aad
and
jge
cli
shlb
mov
sbbb
mov
clc
loopne
dec
jno
incl
aaa
ret
and
jo
inc
jmp
mov
sub
mov
push
sarb
push
iret
jns
mov
mov
fnstsw
hlt
js
scas
sahf
pop
pop
stos
imul
jmp
decb
cltd
push
cmpb
adc
cmp
xor
out
xlat
jge
fildll
pop
mov
inc
dec
imul
stos
in
arpl
test
cld
ljmp
scas
sti
jo
mov
pop
xchg
lock
mov
jns
ljmp
sbb
jge
movsl
sub
arpl
mov
pop
sbb
push
push
xor
inc
loop
xchg
das
cmp
inc
js
sbb
dec
add
loope
and
lea
jb
xchg
fimuls
cmp
icebp
xorl
sahf
push
jp
xor
xchg
pop
mov
push
movsl
sbb
sbb
dec
push
bound
xor
xchg
inc
add
lret
loop
xor
inc
and
jmp
fdivl
cmc
mov
aaa
daa
pop
cmp
ret
fldl
fmuls
nop
lret
xor
inc
pusha
enter
sub
jg
nop
or
insb
stc
cmpsb
int
mov
sbb
addb
add
sub
jne
mov
mov
sub
inc
shll
cmp
pop
sub
cmp
cltd
or
push
insb
ljmp
test
jl
pop
fisubl
jbe
add
push
mov
fiaddl
ret
js
sub
cmp
cwtl
bound
xchg
cmpsb
pop
out
test
in
adc
ret
xchg
sub
imul
or
and
pushl
ror
sub
aaa
sbb
xor
arpl
ret
inc
pop
mov
les
lock
ds
mov
jl
xor
inc
nop
repnz
mov
aaa
shll
push
enter
cmc
jnp
scas
push
out
imul
imul
adc
cli
cltd
decl
adc
mov
mov
stc
icebp
les
push
stc
lcall
int
jne
loope
decl
rcl
nop
repz
fidivrl
jl
ljmp
adc
push
insb
cmp
push
push
dec
js
sahf
movsl
add
clc
ficoms
cmp
pop
aam
lret
sub
ljmp
push
imul
add
mov
fisubrl
adc
pop
dec
sub
cli
mov
and
xlat
mov
movsl
lcall
xchg
pop
out
hlt
incl
testl
jne
dec
insl
and
rcrb
call
movsb
jb
mull
insl
das
repnz
mov
mov
rcrl
or
fistps
jae
std
xchg
xchg
in
inc
lods
xor
addr16
jmp
loope
or
pushf
push
cmp
mov
imul
mov
xchg
incl
repz
jge,pt
jno
push
mov
test
mov
fdivr
out
and
daa
es
js
mov
jnp
jne
inc
jmp
mov
pop
mov
xor
lods
dec
xor
lret
cmp
sbb
xchg
incl
outsb
dec
stc
clc
mov
xor
mov
mov
pop
movsb
pushl
std
lcall
dec
ror
test
cld
jmp
mov
subb
clc
int3
push
aas
lea
icebp
rcll
cmp
in
cmp
jle
cwtl
sti
jnp
stos
mov
push
mov
call
je
test
xchg
rolb
inc
pop
cmpsl
xor
mov
adc
imul
test
push
jl
pop
cmc
lcall
mov
cli
inc
dec
rcrb
scas
cwtl
or
lds
xor
lcall
into
pop
jmp
and
sbb
lock
daa
int
mov
jmp
fdivr
add
cmp
fidivrs
das
int
adc
fsts
dec
ror
pushl
int3
xorl
mov
adc
inc
push
mov
jns
out
test
ljmp
leave
jno
pop
loope
jns
or
inc
adc
mov
fnstcw
adc
pusha
push
sbb
and
mov
arpl
ret
arpl
inc
decl
incl
adc
pop
pop
jno
mov
push
cs
push
or
pop
or
push
push
cmpsl
sub
cld
ss
mov
push
shl
mov
call
mov
gs
lret
repnz
xor
inc
xchg
gs
mov
loopne
iret
dec
aas
aaa
dec
clc
pushl
cltd
sahf
cwtl
xchg
into
adc
add
lcall
decl
or
push
aam
ret
adc
pop
mov
push
es
xchg
add
cmc
push
call
jbe
lret
ficomps
add
fs
arpl
cmp
push
repnz
cmpsl
and
jmp
adc
inc
test
lahf
jp
xchg
push
lods
insl
loop
aas
sbb
xor
mov
je
idivb
xorl
adc
mov
push
jnp
sbb
jne
outsb
addl
jmp
clc
sbb
ljmp
clc
xor
jge
rcrb
ss
inc
or
hlt
out
into
mov
test
pushl
mov
imul
xchg
pushl
cmpsb
addb
addr16
add
aam
jb
lds
sbb
andb
loop
aam
int
int
stc
scas
je
jae
jg
incl
popa
jl
pop
ret
mov
sub
and
push
ret
pushl
outsb
inc
sbb
and
jle
nop
sub
lock
cwtl
scas
cli
decl
cmp
out
outsb
and
jmp
bound
rcrb
adc
std
mov
xchg
call
mov
rcrl
mov
test
fisttpl
jno
xchg
ljmp
shll
push
movsb
stos
es
sahf
sbb
inc
test
xor
stos
fnsave
sub
lcall
cmc
push
insb
fnsave
or
mov
mov
popf
jnp
frstor
movsl
mov
pop
dec
loop
je
cltd
ja
sar
lcall
fldcw
jmp
ljmp
mov
mov
sbb
sbb
pop
mov
enter
dec
inc
rorl
sti
sbb
and
push
pop
fildl
repz
arpl
pop
sub
fcoml
sub
idiv
lcall
jnp
in
dec
jmp
in
rorl
or
xor
dec
int
movswl
call
adc
and
fcomps
cmpsl
push
rol
in
push
cmp
dec
cmp
add
call
cwtl
pop
adcl
rorl
or
and
enter
out
ljmp
icebp
xchg
add
mov
popa
dec
xor
push
nop
test
pop
loopne
hlt
out
repnz
mov
mov
jl
aad
test
aam
movsl
mov
into
xchg
jge
lahf
pop
sub
inc
into
mov
decl
loope
xchg
iret
or
mov
repz
pop
movsl
pop
pop
adc
or
xor
divb
dec
decb
lahf
cli
lods
push
out
clc
mov
mov
adc
cmp
jge
xchg
jmp
pushl
jmp
pop
movsl
lret
fsubp
aam
dec
pop
mov
mov
jne
outsb
xchg
push
idivl
inc
je
or
aas
repnz
mov
outsl
test
popf
mov
push
sbb
clc
rcrb
mov
nop
stos
cli
sub
mov
inc
jne
fnclex
loope
mov
rclb
movsb
pop
mov
mov
decl
mov
rcrb
dec
leave
xorl
dec
roll
mov
scas
dec
and
xor
out
jo
test
cmc
sub
roll
jecxz
adc
insl
pop
sub
es
sbbb
and
adc
push
add
into
pushf
jp
mov
sub
shll
mov
mov
push
aam
jae
lcall
ret
les
xchg
test
and
jge
xchg
inc
or
ds
mov
push
incl
jne
daa
mov
insl
repnz
mov
mov
cmp
or
or
ja
add
aaa
lret
pop
arpl
sub
cmp
mov
jmp
loope
lret
arpl
sub
push
inc
jns
outsb
rorl
andl
decl
loopne
shlb
xchg
sbb
or
cmpb
or
mov
ljmp
shll
cmp
mov
pop
push
cld
jmp
hlt
mov
movsb
xchg
cmc
rcl
jg
mov
call
jle
movsb
dec
pop
cmp
hlt
or
cld
or
fucomip
mov
push
mov
std
aad
mov
cli
mov
mov
in
sti
cmp
xchg
std
jmp
jl
lea
mov
push
mov
cli
add
cmp
mov
pop
in
repnz
pushl
shll
push
jmp
pusha
inc
mov
sbb
sub
inc
pusha
lcall
daa
lds
xchg
lret
cli
das
scas
js
cltd
nop
mov
lods
add
fs
dec
mov
es
sub
and
lcall
push
cmp
adc
jl
bound
pop
int
andb
and
xor
xchg
sub
xchg
icebp
cwtl
bound
mov
inc
out
aam
mov
adc
sbb
jmp
add
add
test
mov
test
cmpsl
jae
mov
fstpl
xor
xor
out
in
ffreep
out
clc
jg
sub
lods
stos
inc
ret
jae
fwait
pop
stc
add
cld
jb
adc
movsb
push
imul
mov
cmp
cmpsb
idivb
leave
add
sahf
pop
call
loope
xchg
ja
ljmp
pushl
test
loopne
mov
push
and
sbb
int
jmp
lahf
fistl
pause
enter
sbb
jno
scas
frstor
jmp
dec
push
dec
das
clc
incl
xor
mov
imul
je
jmpw
and
add
call
in
jle
fildll
ja
inc
inc
and
fmul
out
call
mov
add
push
adc
sbbl
adc
lds
cld
fsubrs
jl
and
pop
mov
mov
mov
sub
cli
sub
adcl
cltd
and
stos
pushl
fucomp
jno
lahf
cmp
shll
leave
mov
dec
stos
call
adc
int
scas
xlat
pushf
pop
pusha
insl
test
fmuls
pop
cmp
icebp
cld
jmp
xor
sbb
push
mov
idivl
mov
sbb
mov
call
xchg
cmp
jnp
add
sti
sarb
ret
aad
mov
decl
cmpsl
stos
leave
sahf
data16
ds
sub
xchg
pop
data16
cmp
call
jb
pop
ss
pop
mov
mov
lret
jecxz
or
push
pop
jmp
sub
mov
dec
sbb
inc
push
xor
mov
mov
lcall
out
jbe,pt
cmp
or
movsl
lock
or
jne
fwait
sub
call
cmp
xor
add
cli
popa
cli
cmpsb
and
ret
jae
insl
push
and
push
rcl
adc
and
mov
sbb
aaa
pop
out
adc
cmp
cltd
push
mov
call
loope
iret
push
sbb
inc
xchg
pop
xlat
out
outsb
adc
test
dec
out
mov
cwtl
fwait
adc
ret
fwait
sbb
iret
sub
aad
int
bnd
andl
mov
decl
psllq
sbbb
nop
push
inc
loopne
test
out
cli
scas
add
push
out
mulb
xor
push
cwtl
cmp
pop
in
xlat
and
dec
gs
ja
add
cwtl
jne
jle
xchg
adc
mov
inc
xchg
out
xor
pop
cltd
shr
inc
add
mov
cmpsl
mov
les
dec
jbe
or
stos
ss
add
movsb
mov
xor
cs
call
popa
mov
int3
fistl
fsubrp
push
xor
mov
sbb
mov
jl
into
fildll
mov
push
aam
and
jecxz
push
in
sar
int
cmp
loope
stos
mov
inc
insb
sti
outsl
ficoml
dec
xor
ljmp
and
mov
fidivl
and
push
out
add
push
lock
shr
fadd
mov
jmp
faddp
add
xor
sbb
loop
lcall
jns
sub
std
push
push
pop
jns
or
ds
mov
lcall
push
cwtl
out
jmp
ljmp
mov
pushl
dec
lcall
pop
mov
sarl
bound
and
lret
inc
test
int3
out
popa
ljmp
mov
sub
loopne
shll
lock
int
jmp
dec
fistps
pop
jp
movsb
mov
xor
je
sub
aaa
push
test
add
jg
xchg
stos
mov
aas
loopne
test
add
inc
mov
aam
jmp
cmc
out
sbb
xchg
scas
cmp
dec
pop
xor
insl
aaa
adc
pop
les
dec
pushf
outsl
iret
decl
les
add
iret
inc
iret
xor
out
sbb
jns
adc
add
fcomip
pushl
cmpb
mov
testl
add
daa
loop
hlt
decl
std
shrb
mov
jbe
or
mov
test
sub
jecxz
orb
in
mov
jle
add
addr16
jecxz
int
bound
clc
mov
ljmp
and
add
js
pop
mov
mov
stos
out
out
std
mov
dec
aad
call
mov
mov
shrl
push
loopne
rclb
test
call
loopne
xchg
xor
fnstsw
push
add
fildl
jno
sbb
incl
sbb
xchg
lret
popa
in
mov
pusha
outsb
pop
in
dec
loopne
popf
iret
push
outsl
xchg
sar
call
push
jmp
inc
imull
ds
icebp
pop
popf
jnp
lods
dec
fcmovb
inc
imul
lcall
test
ljmp
pop
mov
mov
lods
pop
push
mov
jmp
jmp
std
push
xchg
cmpsb
cmp
pop
ja
dec
dec
test
dec
dec
into
mov
dec
cmp
ja
mov
divsd
dec
sbb
in
mov
sub
mov
lcall
push
ret
lea
int3
sbbb
push
scas
pop
ret
mov
cmp
jb
fildl
ud0
call
xor
dec
xor
or
int3
aad
lret
inc
jnp
push
sub
pop
call
and
int3
inc
bndstx
cs
insl
push
iret
sbb
sub
cs
mov
fiadds
jmp
pop
jnp
mov
mov
mov
mov
in
mov
aas
out
arpl
cwtl
sahf
cmp
xchg
clc
andl
cmp
push
or
dec
cmp
ror
movsl
or
ljmp
mov
arpl
mov
add
roll
jecxz
mov
lcall
mov
cmp
pop
push
xchg
cmp
inc
xor
movsb
loopne
out
jg
test
pop
pop
inc
aad
lea
enter
bound
decl
inc
test
das
movsl
addr16
add
movsb
pop
fisttps
inc
jmp
jg
xchg
add
aas
mov
add
jne
scas
mov
mov
ret
clc
iret
in
cmpsl
push
out
outsl
call
mov
add
pop
cmpsb
lret
int3
mov
in
lods
pop
xor
fwait
pushf
mov
fdivr
ljmp
cltd
mov
dec
outsb
cmpsl
mov
out
add
lock
shlb
adc
pushl
mov
hlt
pop
ss
loop
inc
mov
sti
jbe
mov
test
ljmp
mov
adc
gs
popf
sub
mov
push
leave
push
movsl
loop
jecxz
xlat
dec
sbb
lock
lcall
mov
or
or
mov
adc
inc
lcall
daa
and
ljmp
ja
cs
das
je
hlt
and
jnp
out
nop
cltd
sbb
in
cmp
pop
outsl
ret
xor
xchg
ja
adc
enter
or
std
inc
sbb
jg
ret
sub
xchg
add
decl
or
inc
pop
push
sbb
stos
decb
nop
sti
jle
jg
jg
cld
mov
iret
das
ds
cmp
adc
sbb
decl
outsb
sbb
lcall
push
negl
mov
or
in
cmp
jmp
sarl
out
cmc
sbbl
inc
push
daa
and
cmp
jo
xchg
mov
test
adc
sbbl
clc
jns
xor
mov
mov
daa
push
add
mov
adc
sbb
jecxz
gs
ljmp
sahf
lret
cmpsl
es
xchg
fldenv
lods
inc
in
loope
fadds
mov
cld
mull
fwait
dec
stos
das
cmp
ljmp
popf
rolb
push
jg
mov
cmpsl
idivb
push
or
lock
or
push
dec
out
ljmp
incl
fmull
pop
dec
or
inc
mov
out
cld
mov
cli
sbb
and
xchg
pop
push
out
movsl
mov
xchg
fs
pop
mov
pop
insb
cmpsb
dec
in
hlt
xchg
inc
outsl
movsl
call
adc
jg
ljmp
cmp
push
sbb
fistpll
pop
std
int3
imul
fdiv
xor
nop
jno
mov
jo
sub
test
sbb
mov
loop
lcall
imulb
adc
mov
cwtl
push
jbe
inc
popf
dec
popf
decb
pushl
pop
cmp
inc
jnp
out
push
call
call
xchg
adc
dec
in
xor
pop
mov
jp
sbb
pop
not
fucomip
lods
push
mov
insl
fwait
enter
and
ss
xor
mov
pop
and
cli
jbe
jne
xchg
subb
xchg
aam
imul
jnp
cmp
shrb
fisubrs
sti
mov
ljmp
loop
dec
ss
roll
fistl
dec
dec
mov
xor
ret
ja
sbb
mov
dec
sub
nop
jbe
mov
pop
orb
mov
push
pop
and
call
or
sub
sbb
mov
nop
out
inc
mov
pop
xor
fcomip
cld
faddl
push
push
or
test
arpl
jmp
sub
inc
in
xchg
call
decl
and
stos
or
outsl
push
orb
hlt
xor
mov
ss
dec
xchg
add
pop
jl
dec
es
sti
incl
imul
dec
leave
rcll
pop
ret
test
insl
in
pop
mov
and
pop
xchg
mov
lahf
cmp
sub
testb
push
popa
mov
mov
or
adc
fs
leave
ds
clc
call
jmp
dec
ja
cmp
dec
shlb
push
movsb
xchg
rcll
ljmp
js
mov
ds
pop
mov
push
stc
call
jle
into
enter
mov
idivl
enter
xchg
mov
push
cmp
repz
dec
jo
mov
pop
mov
nop
xor
dec
aaa
jo
loop
cmp
add
sarb
ss
in
pushl
jp
add
jne
and
fildl
jecxz
pop
xor
push
fmul
mov
or
incl
cmpsl
fsubl
movsl
mov
aaa
push
loop
cmpsb
mov
inc
ljmp
mov
inc
jl
pop
add
sbb
fnsave
xchg
mov
decl
test
loope
mov
loopne
sahf
ljmp
inc
mov
in
js
jae
lcall
push
adc
inc
das
shll
sbb
jo
lcall
cmpsl
int
mov
dec
pop
sub
jmp
hlt
daa
das
inc
mov
imul
dec
jne
pop
jbe
cmc
insl
aam
mov
decl
mov
lahf
mov
int3
sub
mov
dec
add
sub
pop
xchg
sbb
sub
dec
mov
ss
mov
jae
sub
inc
pop
daa
dec
lcall
mov
xchg
in
out
aaa
stos
adc
mov
fidivrs
idivb
cmp
inc
shlb
push
add
mov
lcall
cmp
bound
decl
fs
lea
pop
dec
pusha
into
mov
loop
incl
jl
jo
mov
loope
imul
xor
ds
cmp
push
repnz
loope
add
inc
out
cmp
pushf
mov
test
decl
push
xor
jg
jg
dec
push
fstp
sbb
pop
enter
xchg
cmc
ljmp
sbb
push
sub
movsb
in
inc
push
and
rol
push
sar
fidivrl
out
jae
andb
call
call
gs
push
sbb
pop
fs
jae
dec
sub
aaa
es
mov
add
pop
sbb
sar
incl
jne
in
clc
lcall
lcall
mov
push
xchg
inc
mov
pushf
fsubp
mov
sub
sbb
jno
imul
addr16
insb
das
cli
add
sbb
pusha
int3
subb
adcb
sub
imul
sbb
pop
pop
cltd
mov
pusha
mov
sub
and
xor
push
mov
mov
and
pusha
insl
mov
and
ret
sub
push
ret
pop
loopne
call
out
jb
xorl
arpl
xlat
lret
inc
mov
andb
pusha
dec
in
pop
fdivl
sti
lcall
lret
mov
dec
es
dec
adc
xor
mov
sahf
call
and
fst
mov
popa
mov
jge
jecxz
cmp
add
push
cld
decl
xchg
push
inc
or
stc
call
sar
add
je
push
push
push
int3
std
dec
xchg
sub
inc
leave
enter
xchg
leave
mov
shr
pop
fsubl
mov
cmp
ficoml
out
xchg
cld
push
repnz
insb
sarl
hlt
or
or
pop
push
lds
scas
nop
pop
pop
or
dec
cmpsb
inc
sub
jg
dec
lret
push
push
movsl
mov
fidivrl
mov
fisttpl
js
xchg
scas
add
inc
cmp
push
call
and
negb
cmp
insl
lret
jns
js
mov
lods
mov
xor
jmp
int3
sbb
add
lcall
fcmovu
mov
ja
int3
dec
pop
loope
data16
ds
fwait
pop
push
call
aad
dec
and
mov
cmp
addl
vmread
lods
rcll
ds
mov
jg
pop
sbb
adc
pushf
dec
and
ss
push
arpl
outsl
xchg
jmp
sbb
mov
ret
mov
jle
mov
fwait
cli
jg
movsb
mov
fcomip
jns
arpl
inc
clc
rclb
fdivp
cli
cmp
xchg
adcb
decl
pop
repnz
adc
pop
inc
mov
leave
out
in
jnp
lahf
aas
or
push
cmp
into
movsl
js
mov
and
jp
dec
sub
push
mov
pop
push
je
cmp
rorb
decl
stos
push
jge
sub
imul
jns
addr16
xor
mov
adc
mov
inc
outsl
call
sub
pop
decl
inc
mov
inc
xchg
outsl
icebp
in
sub
add
repnz
lds
jmp
rolb
pop
repz
movsb
push
lret
cmp
call
mov
lret
jb
gs
mov
cmp
cmp
cmp
xor
mov
fs
arpl
incl
sbb
sbb
jle
cld
cmp
pop
stc
das
addr16
in
jae
add
xor
repz
ficompl
jge
mov
jg
jge
jl
or
xor
sbb
pop
push
leave
or
and
out
ja
decl
xchg
pop
jnp
mov
pop
leave
sbb
xor
hlt
test
jmp
std
push
pop
jecxz
mov
jno
shlb
cmp
mov
xchg
data16
into
jmp
pushl
jge
rcrb
leave
imul
aad
jge
inc
stos
push
jo
insb
inc
pop
repnz
cmpsl
mov
mov
jp
sbb
add
sub
push
je
outsl
cmp
test
imul
ljmp
add
dec
cmc
sbb
pop
pop
lahf
fmuls
stos
jmp
jno
jno
adc
or
push
ljmp
rorb
or
xchg
ficoml
popa
jo
ds
jmp
mov
mov
push
shlb
int
shrl
xor
fcom
fcomip
incl
ss
pop
int3
cmc
add
xchg
sub
stos
lock
movsb
xor
mov
cli
fisubrl
mov
mov
outsl
cmpsb
jmp
int3
sbb
mov
push
lds
outsl
out
or
jl
cmp
in
xor
push
clc
incl
mov
push
push
xchg
cmc
out
mov
pushl
sub
sub
je
push
mov
and
pop
fdivs
push
dec
stc
or
pushl
loop
movsl
movsb
mov
xchg
sub
outsb
btr
jecxz
add
sub
sbb
ja
popa
in
xor
mov
xchg
xchg
adc
les
shrb
sar
outsb
mov
pop
lret
ret
fadd
jnp
je
mov
daa
cmp
out
loopne
xchg
jle
gs
cmp
shl
push
hlt
sub
dec
mov
push
imul
in
jge
jae
aam
fdivrl
lcall
push
sbb
mov
jb
in
jns
orb
or
pop
pop
call
add
push
in
sub
mov
ror
mov
test
insb
and
push
sti
sbb
lea
sbb
or
mov
mov
mov
mov
imul
out
cli
cmp
aam
arpl
xor
mov
xor
push
mov
jle
jmp
les
pop
push
jbe
fwait
mov
mov
call
sbb
jmp
ja
jp
add
lahf
clc
roll
and
ret
mov
popa
lcall
add
idiv
dec
mov
xchg
clc
cltd
int
jmp
fbstp
adcl
call
shr
sbb
outsb
cs
lret
es
cmp
mov
ljmp
incl
movsl
mov
andps
arpl
imul
xchg
adc
xchg
hlt
lcall
fisubs
add
sbb
xchg
mov
fbld
shl
aaa
mov
mov
sbb
mov
mov
xchg
outsb
mov
and
lcall
or
or
js
mov
dec
pop
out
in
adc
cmp
dec
cmp
mov
idiv
sub
subb
push
nopl
jp
das
add
fcoml
xorb
xor
push
fucom
mov
decl
aam
pop
stos
insb
push
push
inc
int
and
stos
in
cmp
andb
push
jle
outsb
in
pop
and
test
mov
out
femms
add
jg
mov
sub
int3
insb
dec
cmp
sbb
cmpsb
mov
mov
ja
cld
lock
sar
sbb
les
sbbl
mov
or
inc
daa
lcall
xchg
xchg
mov
dec
sbb
adc
jg
fisttps
xchg
enter
xor
stc
add
pop
jo
jae
add
incl
mov
lds
aas
xchg
xchg
out
xchg
or
adc
sahf
and
dec
cmpb
cli
call
xchg
stos
arpl
push
xlat
gs
dec
cs
fisttpll
sub
sub
popa
movsl
leave
std
ljmp
popf
sarb
jg
xor
push
pop
mov
jae
mov
xor
lods
out
rclb
mov
pop
inc
cld
shlb
or
dec
in
lcall
ljmp
test
sahf
pop
jae
or
xchg
test
xor
or
sub
dec
mov
mov
clc
incl
idiv
sub
lcall
pop
or
inc
aad
stc
dec
xchg
pusha
jns
mov
std
pusha
xchg
push
arpl
jle
das
cmpsl
int3
enter
int
jmp
into
jns
jp
mov
lods
cli
push
outsb
xlat
jo
mov
inc
cmpsl
add
jmp
dec
cli
repnz
lds
loopne
incl
inc
in
push
pop
inc
out
or
cmp
or
call
xchg
psubusb
mov
push
and
jle
push
sti
inc
fcmovnu
scas
jns
xchg
cmp
jbe
ret
pop
sub
xchg
insb
loope
xor
jg
out
jmp
inc
fadd
aaa
fs
inc
cli
sbb
movsl
mov
mov
in
or
sub
loop
cli
out
push
sbb
inc
add
xor
push
mov
xchg
fimuls
mov
mov
sbb
pop
subb
mov
incl
jne
pop
cmp
ret
pop
inc
leave
mov
mov
aas
ljmp
cmpsl
outsb
and
shll
arpl
dec
pop
out
inc
dec
push
lcall
lcall
fs
xor
inc
popf
pop
mull
icebp
jmp
mov
movsb
rcl
xchg
aaa
mov
mov
pushl
shl
out
add
jae
sbb
mov
mov
popf
sub
cmpsb
jmp
sti
in
add
mov
jbe
adc
jno
pusha
aas
insl
insb
lock
fbld
fldl
cli
call
mov
aam
or
fbstp
mov
fwait
jp
push
stos
incl
in
fists
hlt
dec
mov
sbb
inc
jo
xchg
jg
cld
cmpsl
leave
push
push
push
movsb
mov
cld
fisubrs
test
insb
and
out
mov
pop
nop
clc
rol
mov
cltd
lahf
cmp
lahf
ljmp
cwtl
sbb
cmpsb
in
mov
lods
mov
jnp
mov
or
scas
scas
xchg
sti
xchg
icebp
jmp
dec
jnp
or
sub
and
sbb
cmc
ljmp
ficompl
in
pop
sti
adc
aaa
movntq
lcall
fildll
push
jo
test
out
fwait
xchg
leave
out
sbb
jns
push
and
push
clc
jmp
test
xor
or
cmp
adc
sbb
cli
arpl
ljmp
es
xlat
sbbl
cwtl
movsb
and
lret
outsb
pop
push
hlt
incl
adc
xchg
jp
push
or
cmp
lock
incl
jge
call
setbe
mov
jge
lods
mov
imul
add
shlb
data16
lcall
adc
ss
and
cmp
pop
xor
inc
dec
adc
mov
clc
call
enter
jne
or
iret
pushf
sbb
loop
mov
mov
sbb
fisttpl
lret
dec
imul
pushf
pop
push
movsl
pop
xchg
pop
shrl
mov
lret
sbb
mov
repz
cmpb
push
lret
test
fnstcw
jle
mull
and
repz
add
aas
test
pop
jns
lret
cs
ljmp
pusha
shrl
sbb
lret
dec
leave
loop
adc
fwait
aad
mov
inc
or
pop
aaa
jle
ljmp
cmp
mov
movl
pop
fadds
ljmp
add
in
jmp
loop
mov
adcl
pop
mov
xchg
pushl
cld
jb
movsb
das
push
lods
cmp
xor
loope
repnz
inc
call
mov
ljmp
push
push
sbb
lret
das
pop
mov
loope
lret
ss
loop
pop
out
jmp
push
mov
fcomps
shl
shr
cmp
sub
test
call
out
cltd
lret
add
cmp
mov
jge
push
cmpsb
jae
arpl
and
push
xchg
xor
mov
nop
imul
mov
xchg
fbstp
mov
cmp
ljmp
stos
test
iret
xchg
aaa
dec
cmpsl
std
push
pop
int
mov
xchg
mov
lcall
xchg
mov
inc
in
js
pop
mov
ds
mulb
movsl
test
push
mov
pushl
dec
mov
cmp
clc
rcrb
jge
xor
mov
push
hlt
lcall
sub
insb
leave
lods
sbb
out
rcrl
out
push
cmp
inc
mov
shlb
mov
mov
and
pop
jmp
jbe
jle
inc
cmp
sub
lahf
std
hlt
dec
stos
mov
add
or
rep
jp
inc
loop
fadds
or
jmp
call
cmp
xchg
pop
pop
es
sti
lahf
cmp
push
mov
push
adc
jbe
jg
dec
popf
fs
sarb
mov
cld
push
cmpsb
adcb
xorl
xchg
je
nop
and
jecxz
adc
ss
jg
jmp
fldenv
mov
adc
dec
adc
imul
out
inc
in
sub
mov
xchg
add
add
xor
cmp
cmc
pushf
xchg
push
pushl
push
addr16
xorb
sbb
repnz
rol
jne
aaa
sar
das
cli
incl
push
das
dec
out
mov
xchg
adc
mov
inc
lret
mov
mov
push
fdivs
inc
filds
das
adc
aad
stos
inc
sub
xlat
push
pop
mov
mov
xor
test
insb
lcall
or
mov
add
lods
dec
or
mov
out
xor
push
test
mov
sbb
mov
pop
mov
dec
shll
or
mov
stos
cmp
call
pusha
adc
sbb
jne
mov
jmp
into
rorl
pop
jno
incl
add
test
mov
xchg
cmp
jg
mov
pop
dec
inc
xor
push
inc
jbe
cli
scas
pop
dec
pop
out
aaa
add
sti
test
adc
nop
pop
lret
cmp
fsub
movsb
push
cwtl
clc
push
fistpl
fstl
mov
incl
rorb
xor
push
imul
inc
aas
cmp
cmp
xchg
fnstsw
pusha
jecxz
adc
mov
push
mov
dec
mov
and
inc
push
outsl
push
std
test
sub
pop
add
push
inc
cltd
xchg
sub
and
xor
jg
test
pop
and
sub
dec
add
call
lret
jmp
aas
lds
mulb
push
mov
icebp
pop
imul
jg
es
sti
ja
inc
scas
sub
jo
jb
xor
sub
ds
cmp
loopne
jl
mov
out
mov
sti
outsl
cli
xlat
out
decl
xchg
dec
cmp
cmp
xchg
sub
mov
cmp
in
daa
pop
lods
cwtl
scas
fbstp
in
dec
mov
sbb
push
and
iret
pop
ljmp
pop
cmp
arpl
out
sub
testl
and
jg
movsb
shlb
xchg
movsl
movsb
mov
push
imul
pop
jg
mov
test
xor
dec
cmpsb
xchg
adc
xlat
pushaw
cmp
loope
mov
inc
ror
xchg
or
nop
std
sub
adc
daa
dec
sti
mov
scas
jae
js
lret
pop
jbe
mov
adc
outsl
daa
adc
dec
sub
adc
mov
mov
xor
outsb
or
ljmp
shrb
mov
fs
bound
mov
xchg
xchg
pop
cltd
mov
mov
pushl
adc
mov
xchg
pop
in
idiv
push
sub
lcall
jg
mov
xchg
lods
dec
cmp
das
or
inc
loop
mov
insl
lods
idiv
and
adc
jmp
pop
xor
mov
scas
fisubrs
lcall
jno
hlt
pop
sub
imul
dec
add
xor
lcall
and
push
lods
lcall
mov
add
mov
xchg
roll
add
repnz
mov
mov
pushl
in
sbb
xchg
movsl
jns
dec
add
leave
pusha
sbb
xchg
sahf
jnp
sbb
jp
sub
xorb
ljmp
sahf
jmp
dec
jle
xorb
sub
adc
mov
mov
pop
lock
orl
fnstcw
out
outsl
nop
stos
test
add
ljmp
ret
adc
mov
mov
repz
mov
sar
pushl
add
push
negl
xchg
push
xor
iret
jle
fldl
mov
ljmp
out
xor
repz
shl
lahf
sub
sbb
ss
jle
xor
aaa
mov
call
cmp
fwait
loopne
outsb
mov
nop
inc
pop
xchg
mov
inc
int
jno
call
stos
repnz
mov
push
hlt
test
or
or
fiaddl
movsl
rcl
lds
ljmp
push
fistpll
subb
dec
stc
xor
ljmp
es
cli
aaa
in
cmpb
dec
in
mov
mov
out
push
gs
push
pop
loopne
adc
inc
and
in
xchg
mov
and
in
add
out
push
ss
movsl
jmp
out
push
mov
ret
out
cli
dec
cld
popf
push
sub
ja
mov
rcll
mov
stos
in
lcall
ja
pop
add
push
es
sti
mov
jg
cmp
cmc
pushl
jmp
test
adc
sub
mov
imul
cltd
pop
jg
mov
mov
js
mov
jge
jmp
lods
or
hlt
jg
dec
dec
push
xlat
mov
or
xorb
or
and
cmp
out
xor
mov
push
pop
es
jo
das
jge
popf
mov
fs
aas
cmp
loope
fdivl
pushf
outsl
adc
or
mov
sbb
leave
ja
mov
decl
sbb
pop
pusha
loop
cmp
lods
popf
mov
clc
mov
sbb
pop
xlat
jo
xlat
mov
or
add
dec
mov
addr16
dec
jne
cmp
cmpsb
mov
add
fimull
adc
ss
in
call
scas
outsl
lea
mov
adc
adc
lea
mov
pop
fdivs
add
ss
mov
or
stos
pop
jo
sbb
dec
imul
data16
lcall
jle
jl
dec
mov
xchg
sub
daa
fidivs
jg
fisttpll
xchg
sub
fwait
mov
push
cmpsb
push
iret
pop
gs
dec
cmp
pushf
jg
das
jp
dec
sub
outsl
sbb
dec
mov
pop
shrd
mov
mov
std
sbb
mov
rcl
cs
adc
add
dec
and
pop
ljmp
das
mov
ds
xchg
aam
addr16
or
push
lods
sbb
decl
outsl
dec
int
into
push
mov
mov
add
or
push
hlt
jnp
sub
push
sbb
or
xchg
hlt
fstpt
mov
push
xchg
popf
jl
pop
cmp
xor
jae
push
and
incl
aad
and
mull
fcmove
insb
iret
or
mov
mov
dec
xchg
mov
std
es
dec
lret
fcmove
mov
fstpt
nop
decl
scas
push
and
mov
fnstsw
push
les
add
pushl
cli
sbb
push
inc
pop
imul
std
loope
ljmp
and
sub
push
pop
clc
mov
hlt
mov
pushl
dec
pop
cmpb
or
lods
add
cltd
stc
or
testb
stc
dec
ljmp
xchg
fs
xchg
mov
jge
adc
cmp
lock
fs
je
lcall
jl
sbb
dec
xchg
xchg
in
jle
sub
fidivs
add
mov
int3
mov
stos
fcomip
push
fimuls
push
sbb
jle
sub
and
xchg
imul
test
ljmp
test
xchg
xchg
lock
cmpsl
xchg
sbb
adc
push
xchg
push
enter
adc
cltd
jle
adc
sbb
push
sbb
push
push
xor
mov
call
es
jg
push
mov
mov
jmp
mov
movsb
xor
pop
incl
loope
insb
arpl
or
mov
sahf
jle
pop
mov
fldt
sbb
jnp
ljmp
test
or
imul
stos
push
rcll
fcmovnbe
xchg
sti
mov
ljmp
xor
pop
enter
inc
pop
lahf
sub
es
stos
call
cmp
in
ja
scas
sbb
scas
clc
sti
fldt
ss
mov
inc
or
inc
lods
pop
loopne
xor
push
hlt
push
in
nop
es
cmp
sub
cwtl
pushl
sub
in
sbb
addb
test
xor
jbe
es
or
xchg
mov
orb
or
fmuls
rcl
and
cmc
sub
cld
cs
outsl
fdiv
dec
and
xor
sub
jnp
aam
stos
mov
inc
cmpsb
insl
pop
enter
ret
push
adc
jo
dec
sbbb
inc
mov
push
std
cwtl
daa
jne
call
lahf
rcrl
mov
jb
inc
int3
cli
jno
popa
daa
out
pushf
sbb
loopne
mov
push
lods
jnp
mov
mov
in
cmpsl
decl
mov
jo
sti
arpl
push
mov
inc
adc
sub
or
insl
insl
sbb
xchg
pop
sub
clc
jp
imul
sub
cmp
out
pop
cmp
mov
xchg
mov
and
pop
add
push
inc
out
in
xor
mov
decl
sub
les
push
in
insl
pop
inc
mov
int3
dec
mov
je
ljmp
out
pop
cmc
or
mov
mov
jno
test
shrl
ds
cltd
filds
repnz
insb
mov
add
mov
mov
jecxz
decl
mov
and
xor
or
cs
loope
mov
loopne
sub
cmp
test
popf
stos
adc
lods
clc
jns
push
add
ljmp
or
push
ss
scas
pushf
inc
pop
ret
inc
inc
fwait
shrl
dec
jmp
sub
ret
lea
sub
sbb
popf
icebp
les
jmp
ret
xor
lret
inc
fdivr
nop
xchg
ss
cmp
inc
mov
xchg
pusha
add
fcmovne
pop
add
xor
add
add
mov
add
or
pop
pop
push
or
or
or
lods
or
push
adc
push
adc
adc
push
adc
adc
sbb
adc
adc
adc
add
data16
or
pop
adc
inc
add
or
xchg
insb
mov
adc
add
sahf
add
les
add
and
cmc
inc
mov
rorl
jb
push
or
cmp
add
add
push
adc
pop
and
sarb
xor
inc
mov
adc
bound
js
adcb
and
and
adc
outsl
filds
fsubs
pop
and
adc
add
int
inc
add
add
mov
xchg
mov
add
add
adc
mov
ja
adc
add
adc
pop
popa
jno
and
adc
mov
or
mov
lock
loope
icebp
mov
or
push
mov
xorb
scas
adc
or
js
add
std
or
jg
ret
incl
adc
sbb
cli
and
mov
inc
mov
ficompl
cmpsl
clc
push
pushl
mov
test
pop
lahf
mov
jecxz
cli
pop
mov
enter
stc
or
out
fdivrs
or
insb
sub
addr16
out
or
push
push
xchg
add
cli
mov
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
subb
decl
xor
lcall
mov
push
pop
mov
decl
mov
popl
movb
xchg
sbb
scas
adc
mov
pushl
sub
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
lcall
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
sub
pop
lock
std
or
pop
mov
daa
test
call
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
incl
clc
push
out
or
cld
push
fcmovnb
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
lcall
mov
jmp
sbb
add
mov
out
pop
jb
mov
or
push
mov
incl
int
inc
fwait
sbbb
mov
dec
jp
push
gs
jg
aas
add
add
stc
loope
mov
sar
andl
outsb
outsl
adc
icebp
testb
mov
jg
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
das
ljmp
dec
subl
jb
adc
push
lock
ljmp
inc
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
cmpl
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
jp
fisttpll
dec
fisttpll
out
aas
std
cli
push
push
mov
out
push
cmp
sub
inc
scas
incl
cmpb
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
dec
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
clc
sub
sub
cmp
dec
inc
push
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
ss
lea
jmp
lock
std
xorb
jg
aad
adc
ret
das
ljmp
sar
pop
pop
shlb
out
sarb
sbbl
jno
or
jg
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
pushl
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
push
pop
jns
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
fdivrp
call
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
jmp
pop
sbb
call
js
cmp
scas
lods
hlt
cld
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
loopne
fdivrl
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
call
cmp
clc
jge
jnp
xlat
outsb
mov
sbb
jecxz
incl
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
mov
mov
pushl
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
incl
jae
shrb
shlb
out
aas
stc
add
out
gs
incl
mov
call
adc
pop
cld
addl
adc
and
repnz
cmp
fmull
enter
jecxz
pop
cld
lahf
iret
scas
sub
in
pop
mov
sub
mov
dec
mov
das
incb
fisubrl
aas
mov
or
cld
inc
or
sti
add
repnz
jg
mov
sub
aad
test
mov
mov
iret
fistpll
mov
push
push
sbb
stos
icebp
pop
incb
jno
pop
sub
push
inc
jecxz
sbb
sarl
adc
or
lods
loopne
and
clc
xorl
rorb
xor
imul
dec
loope
clc
sti
push
in
aas
mov
fsubrl
add
shlb
lock
and
inc
lods
clc
xchg
pushf
mov
or
aas
in
or
and
mov
adc
inc
aas
lock
testb
pop
rolb
pop
inc
jb
fistpl
adc
call
outsl
mov
data16
pop
nop
mov
inc
sti
arpl
clc
mov
ds
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
pop
cld
jg
xor
fsubr
fistps
lds
fidivrl
jg
stos
call
sbb
add
dec
mov
sub
jge
xor
lahf
les
inc
mov
sbb
cld
addl
adc
cld
lcall
mov
lahf
outsl
int3
push
sbb
sti
incl
mov
jle
xchg
popa
out
out
outsl
xchg
mov
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
cld
lcall
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
mov
js
pop
jg
pop
shrb
rcl
jg
adc
xor
std
lcall
mov
gs
pushf
lea
jp
jnp
jecxz
mov
lds
push
pop
adc
imul
or
inc
pop
xor
idiv
jmp
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
push
incl
fwait
into
test
xchg
movsb
insb
or
and
xchg
fisubrs
add
insb
test
aas
repz
sbb
lock
in
jmp
out
sbb
aaa
clc
jp
jb
push
std
mov
or
scas
subb
lods
out
jne
or
cmc
mov
push
mov
hlt
push
fsubrp
dec
sahf
enter
fcmovb
inc
cmp
xchg
clc
out
rolb
pop
or
or
mov
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
xchg
imul
pop
in
cmp
aaa
push
mov
fidivs
clc
adc
jmp
hlt
pusha
jg
loope
mov
xlat
inc
lcall
mov
jg
mov
das
sar
mov
sbb
cld
daa
jp
std
adc
cltd
push
mov
mov
ret
nop
cmp
das
incb
lock
and
pop
pop
div
cld
idivl
shlb
inc
and
loope
jae
jmp
shrl
je
jge
jg
ljmp
jg
stc
add
out
icebp
mov
loope
inc
mov
fisttps
sti
mov
fistps
es
or
das
jge
lock
out
cmp
call
xor
sbbb
decb
adc
mov
and
xor
adc
call
popf
inc
xchg
dec
or
cs
pop
nop
mov
inc
add
push
pop
aaa
inc
es
fisttps
mov
mov
cld
jg
xchg
fimull
jp
aas
icebp
ret
ror
sbb
aaa
loop
out
sbb
adc
mov
mov
inc
mov
pop
clc
loope
loope
mov
lahf
add
jo
add
xlat
rcrl
je
xchg
fldenv
iret
fdivrl
xchg
push
rolb
lcall
xor
decb
add
pop
gs
push
icebp
fbld
out
jg
jno
ret
pusha
mov
inc
arpl
pop
sbb
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
call
mov
ds
inc
mov
in
sbb
xchg
imul
jmp
outsl
je
clc
push
jmp
std
mov
push
adc
mov
push
jae
popa
lds
outsl
pop
hlt
dec
add
pop
stc
push
dec
out
fstpt
mov
enter
cwtl
popf
pop
add
fxch
pop
adc
lcall
pop
inc
add
and
xchg
push
push
nop
mov
mov
iret
and
add
adcl
add
pop
sub
les
cmp
call
sub
jnp
add
incl
out
add
dec
insb
push
js
add
mov
push
jg
add
pop
push
jb
movsb
jg
inc
cld
mov
popa
add
add
dec
orb
test
lahf
pop
push
adc
inc
mov
sub
adc
and
scas
push
mov
xchg
ucomiss
add
nopl
scas
dec
pop
sahf
dec
test
pusha
or
xchg
decl
add
xchg
movsl
push
daa
add
data16
add
es
push
or
imul
jle
fbld
push
and
stos
push
and
push
test
and
clc
idiv
xchg
imul
push
inc
pop
pop
add
outsl
int
mov
pop
sbb
add
mov
fnsave
mov
push
ds
les
push
adc
in
mov
mov
insb
or
lret
imul
imul
in
fnstsw
imul
push
add
push
add
push
flds
fdivs
mov
add
insb
stos
pop
stos
mov
sub
jb
ss
add
jo
mov
push
shll
add
or
xchg
shll
fidivrl
iret
outsb
or
push
push
ja
ret
je
fidivrs
out
jge
fisubrl
fisttps
add
fwait
inc
ds
in
movsb
shll
mov
sbbl
push
mov
ja
arpl
push
push
push
add
jne
outsb
mov
push
aam
push
ret
add
mov
lods
pop
add
push
pop
dec
add
in
or
jbe
push
data16
inc
repz
mov
add
push
push
in
imul
outsb
outsl
stos
aas
add
ja
jne
popf
add
push
xlat
jne
add
fcmovnu
push
fdivl
push
aad
push
xlat
ja
js
push
addr16
in
add
fidivrl
push
jp
jp
inc
push
lds
fidivrl
sarl
ja
fldl
les
je
jmp
ljmp
push
xchg
sub
xchg
in
xchg
sub
jmp
insl
push
xchg
xor
xchg
push
setbe
xor
dec
fisttpl
push
lcall
cwtl
push
cltd
cmp
cmp
pushf
cmp
mov
ret
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
lahf
fistpll
outsb
mov
mov
push
imulb
add
out
out
sahf
xlat
out
push
hlt
clc
stc
cli
out
sahf
sti
cld
std
incb
jecxz
arpl
ss
lods
adc
add
jo
imul
fs
add
pop
add
pop
pusha
xchg
fldcw
add
inc
adc
mov
in
nop
mov
dec
arpl
push
add
add
add
or
or
pop
sti
inc
repnz
test
or
push
mov
aam
sbb
adc
adc
lods
add
shrb
pop
stos
femms
lods
lods
pop
mov
lods
dec
mov
add
scas
insl
sbb
stos
lods
pop
pop
adc
and
mov
add
xchg
in
pop
scas
sbb
scas
scas
scas
scas
sbb
mov
mov
and
mov
pop
push
mov
inc
push
xorl
lock
and
mov
mov
pop
and
push
xor
pop
mov
and
shrl
pusha
fwait
and
sub
mov
popa
xchg
cld
test
mov
repnz
and
mov
in
mov
mov
ficomps
cmp
in
or
mov
cmp
push
mov
add
mov
pop
xor
pop
addr16
add
out
insl
pop
pop
xor
mov
pop
das
push
cs
xor
add
xor
aaa
in
std
xor
pop
push
push
xor
adc
pop
push
cs
dec
inc
das
inc
inc
xor
incl
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
dec
or
pushw
dec
dec
cmpb
jo
in
pushl
mov
mov
cwtl
sahf
mov
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
dec
in
dec
shlb
faddl
push
bound
lock
push
xor
jne
je
mov
mov
inc
pop
xor
into
add
xchg
rorl
pop
pop
push
pop
test
scas
aas
sti
mov
outsl
dec
jle
xchg
jns
mov
pop
push
sub
add
outsl
jmp
mov
xor
xor
jp
cltd
dec
mov
push
jb
cs
xor
mov
out
fdivp
jmp
pop
jbe
dec
sbb
and
mov
out
xchg
jo
push
inc
mov
cmp
std
sbb
inc
jg
xchg
jae
xchg
jp
jg
mov
inc
mov
aaa
add
xchg
jno
lret
sahf
insl
imul
bound
mov
mov
inc
lcall
outsb
xor
add
outsb
add
xchg
rcr
mov
xchg
pop
push
test
cmpsb
dec
push
dec
push
movsb
mov
jae
add
jb
shll
sub
xlat
pushf
push
rorb
lcall
rcrb
pop
into
dec
mov
add
pop
in
lret
ja
sahf
jbe
fistpl
imul
fisttpl
ds
push
add
and
es
js
mov
gs
mov
shrl
insb
out
ds
pop
outsb
push
outsl
ror
push
ds
fistl
sub
add
jge
push
jg
fiadds
or
out
data16
jl
mov
add
out
mov
lcall
arpl
sahf
jae
jnp
mov
jb
out
fldl
or
jg
jle
jecxz
or
fiadds
fnstcw
aad
push
divb
imul
adc
faddl
pop
fwait
mov
dec
addb
sbb
test
test
mov
test
in
mov
push
xchg
into
nop
and
out
xchg
in
xchg
lock
sub
xor
in
push
sub
imulb
insl
mov
roll
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
jl
lods
es
pushf
cmp
imul
aam
jle
push
pop
mov
jo
test
sahf
loop
out
out
mov
jbe
stos
into
shll
lgs
int
insl
roll
sarb
push
movsb
out
jl
mov
ret
hlt
adc
pop
data16
add
addr16
xchg
lods
add
dec
out
je
dec
sub
inc
movsb
daa
add
push
and
mov
add
femms
or
or
or
sbb
or
es
push
adc
push
add
adc
adc
ds
add
and
mov
adc
sbb
pop
test
mov
mov
fisubrl
mov
add
and
negb
inc
loopne
ds
mov
lods
xor
and
aas
push
adc
xor
or
iret
adc
cmp
cmp
repnz
and
testb
cmp
ds
jbe
sbb
sbb
cmp
scas
xor
dec
mov
scas
ds
jle
aas
adc
mov
mov
ds
xor
dec
inc
test
mov
scas
add
fwait
bound
mov
addr16
mov
ds
mov
lcall
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
test
in
mov
lcall
sub
sub
add
add
fcmovnb
add
add
dec
and
inc
test
pushl
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
insl
popf
std
idiv
jg
je
xchg
jns
jle
addl
stos
cwtl
mov
sti
xlat
or
lds
or
push
rolb
add
add
sti
mov
incl
out
lcall
adc
or
push
push
add
cmc
repz
jg
add
add
aas
add
xchg
pop
cmp
test
jg
incl
xlat
mov
add
mov
push
mov
fnstsw
repnz
outsl
incl
mov
aaa
add
addr16
add
add
mov
mov
in
lcall
or
mov
add
push
dec
lret
js
into
fcomi
incl
pop
add
mov
mov
test
scas
xchg
js
in
add
and
mov
sub
sub
xchg
push
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
es
jbe
negl
data16
int3
fst
es
push
lret
loopne
sub
jle
std
into
fdivrp
mov
pop
inc
imul
xchg
add
test
fldcw
add
jge
sub
xchg
inc
push
dec
dec
dec
dec
xchg
jmp
decl
or
pop
or
add
push
dec
or
adc
cmp
fsubr
in
outsl
adc
dec
or
add
push
adc
add
repnz
inc
or
pop
pop
cmovg
inc
dec
sti
mov
push
dec
sbb
inc
adc
inc
inc
fscale
adc
sbb
dec
add
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
sub
push
add
aam
stos
lods
mov
addb
mov
pop
mov
flds
mov
mov
add
add
mov
outsl
add
add
into
inc
adc
pop
sbb
outsl
mov
adc
cmpsl
jbe
pusha
pop
or
pop
push
roll
inc
scas
push
clc
sbb
sbb
incl
mov
xor
outsb
sysret
add
es
es
xor
testb
pop
in
scas
and
jns
stc
hlt
adc
push
or
push
push
sub
or
jg
ja
adcb
pop
aaa
outsl
and
pop
sahf
or
pop
lahf
adc
xor
mov
jg
sbb
mov
cli
fisttps
or
jle
mov
addr16
push
inc
pusha
and
jg
adc
sti
jg
mov
sti
mov
rolb
jle
inc
ret
insb
or
adc
stos
addb
mov
xchg
mov
pusha
and
idivb
pop
lods
and
cld
jg
adc
fs
jle
cmpsb
std
sub
orb
std
jg
mov
into
jg
adc
inc
out
jg
inc
mov
jg
mov
pusha
mov
mov
cmpb
adc
lcall
adcl
or
xor
subb
add
nop
sub
sub
xchg
or
sbb
sub
jg,pt
add
xchg
push
jbe
dec
insb
mov
pop
add
jmp
adc
cltd
lea
xchg
insl
push
add
mov
in
jle
lret
imul
add
add
add
and
push
xor
dec
jg
xorl
or
jg
add
shrb
push
push
jg
add
push
and
sub
and
inc
sub
jg
subb
pop
lret
and
add
jle
fistl
pop
fdivrp
cmpsb
ljmp
out
mov
xor
pop
pop
pop
add
mov
insl
arpl
aas
aaa
pop
pop
mov
xchg
addl
nop
imul
push
inc
test
or
test
jle
sbb
mov
test
jle
push
dec
xchg
into
imul
push
mov
outsb
in
push
comiss
daa
push
arpl
mov
addr16
pop
push
mov
arpl
out
cmpsl
test
mov
dec
mov
lcall
sub
jmp
and
scas
dec
scas
push
jle
jle
sbb
out
mov
idiv
fnstenv
add
fs
repz
jne
pop
push
jbe
sub
ss
push
jnp
push
jp
mov
inc
decb
js
dec
jbe
pop
scas
jmp
in
add
mov
mov
inc
ja
push
push
outsb
mov
ljmp
jmp
iret
dec
call
or
cmp
ss
pushl
dec
and
call
mov
mov
jns
fiadds
and
lahf
mov
push
mov
outsl
mov
sahf
inc
out
test
mov
mov
xchg
int
scas
cs
aas
popf
inc
push
pushf
cmp
or
ss
push
xchg
xor
sub
insl
fucomi
nop
sub
nop
daa
ss
cs
jbe
cmpsl
test
outsb
aam
xor
decl
incl
jg
inc
int
aas
pop
fnsave
xor
decl
and
sahf
xor
fs
pop
xchg
add
cmpsl
es
pop
ja
dec
mov
pushw
movb
push
hlt
dec
pop
ja
aam
cld
xor
push
ja
add
pop
push
in
push
les
inc
add
rcll
push
add
outsl
sub
xor
mov
inc
or
mov
push
adc
pop
push
orl
lea
aas
outsl
sub
inc
and
cmp
movsb
stc
push
lock
cmp
cmp
jg
jb
icebp
imul
push
inc
out
add
mov
adc
pop
aam
decl
out
mov
mov
mov
sub
out
in
inc
rol
push
push
sbb
xor
jb
mov
adc
xchg
cmp
jmp
sbb
add
mov
mov
add
pop
out
fwait
mov
sbb
add
inc
xchg
daa
cld
pop
insl
pop
les
pop
cld
decl
add
ds
std
out
mov
inc
xchg
lss
lcall
or
or
mov
cmovb
insb
push
ds
adc
push
incl
incl
loope
das
jmp
sub
incl
adc
sub
and
insb
lcall
adc
pushl
lcall
sub
inc
push
inc
scas
decl
fwait
adc
or
mov
or
jmp
clts
add
inc
test
fidivl
inc
outsb
iret
jle
adc
push
insl
fwait
sbb
out
sysexit
adc
adc
mov
pop
dec
incl
or
sysret
inc
sub
push
iret
xchg
sbb
jae
incl
decl
inc
sbb
fdivrp
addb
mov
aaa
inc
pop
sti
push
std
decl
add
call
incl
pop
sub
pop
xor
mov
lgdtl
jmp
and
jg
rorb
cwtl
cli
idiv
loop
addb
inc
arpl
sub
call
and
xchg
decl
cld
or
andl
inc
pop
fcmovbe
mov
pop
fwait
pop
pop
inc
jne
pop
aaa
mov
or
push
shll
test
roll
dec
mov
ret
incl
jmp
frstor
ljmp
lahf
inc
shrl
inc
inc
pop
inc
pop
mov
aaa
push
pop
sahf
movsb
dec
push
repz
int
stos
push
popf
inc
cmpsb
dec
dec
inc
mov
push
dec
mov
dec
popf
add
and
repz
shrb
xchg
outsb
shll
push
push
jb
xchg
das
xor
das
push
iret
insl
mov
daa
outsl
pop
imul
xchg
stos
and
push
push
decl
test
lcall
decl
pop
add
push
xchg
aam
repnz
jmp
popfw
cmp
aas
dec
and
mov
cwtl
xor
fstps
aaa
push
lcall
ss
xchg
push
xchg
es
sahf
dec
jb
xchg
xchg
dec
push
xchg
hlt
ja
pushl
dec
scas
incl
mov
push
mov
lds
push
add
or
fcmovbe
js
std
faddl
jge
cmp
mov
push
jnp
jp
or
jl
or
xchg
jbe
jns
jl
push
jge
jg
data16
es
jbe
adc
fidivrl
push
dec
push
insl
div
outsl
dec
repnz
repnz
jae
pop
fidivrl
push
mov
jg
push
loope
out
add
in
add
int3
outsb
nop
testl
mov
stc
sbbb
xor
add
aad
and
cmpl
fisubrs
addb
jnp
lahf
dec
es
addl
orb
decl
pop
jg
and
xchg
out
push
sub
iret
mov
jo
mov
cli
pushl
clc
popa
sub
jns
idiv
push
mov
inc
sub
jg
mov
icebp
dec
pop
cld
jle
mov
daa
jno
sub
mov
or
jg
mov
icebp
nop
cld
daa
jg
mov
mov
dec
loope
xchg
mov
jp
es
xchg
push
sbb
incb
ss
mov
cmp
jg
dec
in
sarb
push
movsl
pop
ja
shlb
jl
dec
and
jge
idiv
dec
and
push
lcall
push
fsubl
pop
pusha
and
pop
push
nop
sub
mov
sbb
decl
mov
ljmp
jne
mov
push
pop
push
pop
dec
mov
pop
or
xchg
aam
jne
mov
inc
push
dec
lcall
push
jns
add
sub
mov
jmp
xchg
jmp
mov
into
insb
mov
push
xchg
mov
loop
adc
ljmp
xchg
jmp
mov
lret
jg
out
mov
mov
push
jp
push
mov
or
jmp
xlat
push
cmovno
arpl
add
jge
adc
add
push
pop
or
movb
jp
xor
loopne
addb
stos
loope
enter
lahf
push
lock
adc
call
mov
repz
add
add
xor
pop
pop
push
sbb
push
sbb
es
jae
push
or
and
out
sbb
push
sbb
outsb
or
ljmp
push
add
inc
adc
and
inc
insl
sbb
mov
loope
lock
mov
push
xchg
push
sub
or
push
loop
and
gs
jo
add
lcall
aam
dec
std
push
and
and
cmpsl
dec
mov
cs
bound
cmp
shll
xchg
pop
add
dec
test
add
lock
inc
in
or
jmp
xor
popf
sbb
add
popa
imul
mov
pop
push
es
aas
add
add
mov
sbb
adc
rclb
aad
insl
adc
xor
push
add
sbb
movsl
ret
adc
xor
xor
test
bound
jo
faddl
in
jnp
rcll
popa
bound
inc
ret
je
jb
inc
stos
dec
xlat
adc
shll
or
sbb
push
add
inc
das
mov
lcall
add
adc
add
loopne
mov
bound
aas
and
pushf
es
negl
shl
lcall
lahf
push
inc
xchg
cmp
cmc
add
or
testb
xor
push
outsb
dec
push
outsl
xchg
in
mov
sti
xor
pop
sub
xor
fwait
and
mov
xchg
bound
pop
dec
insb
out
adc
testb
orl
loop
sbb
add
mov
jne
rol
popa
addr16
push
xchg
cmp
or
or
add
pop
and
inc
mov
adcb
add
test
fmuls
arpl
imul
xchg
pop
or
nop
arpl
push
mov
mov
xor
inc
sti
cmpsb
or
insl
pop
push
jl
inc
add
xchg
pop
pop
xorb
cmp
add
pop
mov
les
ret
add
adc
jnp
sbb
cmp
dec
rcrl
cmp
dec
in
and
insb
sbb
mov
rcrl
mov
jno
cmp
dec
xor
inc
xchg
add
pop
rcl
pusha
jbe
dec
outsl
dec
nop
nop
cmpsb
iret
jecxz
js
and
in
sbb
mov
sbb
adc
xor
jb
dec
mov
pusha
add
dec
push
cmp
imul
je
outsl
xchg
rcr
jnp
iret
adc
and
push
cmp
cltd
push
adc
xchg
xchg
mov
push
lods
mov
test
pop
test
jbe
lds
rolb
addr16
and
xor
add
mov
add
sbb
dec
push
fsubs
sub
xor
push
dec
cltd
loopne
hlt
fbstp
jae
xor
add
inc
scas
mov
adc
nopl
dec
das
insl
outsb
mov
xchg
inc
imul
add
jecxz
rcr
jno
pop
test
jno
and
loop
adc
mov
cmp
and
push
jne
inc
pop
or
ds
outsl
jae
repnz
loop
outsl
xchg
mov
sub
pop
adc
sub
dec
dec
ss
movsl
add
data16
loopne
movsl
mov
inc
arpl
mov
cltd
sar
subb
or
pusha
jge
aas
sub
xchg
pop
dec
pop
or
dec
mov
cmp
xchg
shll
or
cmpl
sar
push
inc
aaa
push
pop
sub
xchg
jne
arpl
adc
insl
push
or
mov
es
lds
movb
xlat
and
in
lods
imul
insl
lds
je
int
sub
pop
push
mov
inc
or
inc
cmp
rcpps
js
int3
js
or
jb
inc
inc
xchg
aad
shll
add
out
imul
mov
sbb
dec
in
jae,pn
sahf
daa
push
roll
sbb
jo
push
cld
sub
fnsave
fwait
push
test
enter
jno
or
shl
dec
inc
add
xchg
add
leave
fsubr
out
push
jg
jns
je
and
lock
push
jo
mov
and
and
push
les
push
ss
std
shlb
jb
add
push
js
pop
lret
xor
mov
adc
mov
or
sbb
inc
sbb
pop
and
and
inc
je
insl
dec
outsb
dec
std
hlt
add
push
and
mov
sub
push
push
pop
jnp
jl
in
add
pop
add
add
sbb
mov
dec
rcrl
sub
add
movhps
imul
in
lcall
push
es
cmp
inc
or
fmull
add
shlb
jo
and
cmpsb
mov
sbb
in
call
inc
jo
sbb
test
adc
ficomps
mov
es
sub
add
add
pop
loope
mov
insb
mov
mov
inc
insb
sub
push
push
scas
cli
test
push
mov
outsb
xorl
sbb
out
xchg
xor
inc
sbb
pop
xor
jge
sub
jne
jl
mov
adc
mov
xchg
sbb
sti
mov
je
and
je
mov
lret
in
sbb
jge
rorl
lock
js
push
xor
stos
mov
imul
rclb
sbb
jle
ret
add
mov
mov
mov
mov
add
push
hlt
mov
xchg
sbb
fmuls
adc
das
sbb
or
outsb
push
inc
adc
rcr
nop
inc
xor
and
and
and
sbb
push
mov
mov
lds
rorl
addr16
adc
xchg
or
es
sbbl
push
mov
jo
xchg
dec
insl
dec
inc
push
psrld
adc
dec
test
fs
shrl
sbb
dec
cld
addr16
fs
and
test
pop
test
and
xor
jmp
arpl
mov
xor
pusha
push
int3
inc
push
mov
imul
jns
aam
inc
scas
sbb
and
inc
cmp
nop
movsl
or
out
push
sub
sbb
pop
sbb
sbb
or
sub
shll
xor
mov
xchg
lods
mov
xchg
jbe
enter
and
inc
cmc
push
mov
fdivr
push
inc
inc
mov
cmp
xor
sub
enter
push
or
arpl
cmp
dec
mov
jne
lods
inc
out
inc
test
mov
xchg
jae
xor
adc
add
aaa
sub
or
mov
push
arpl
push
inc
mov
movsl
dec
sub
add
jnp
xchg
add
add
push
daa
adc
jg
push
add
add
mov
jg
sub
mov
fildll
pop
add
movb
sahf
jo
push
lock
xor
pop
add
dec
mov
adc
clc
add
jl
add
add
sahf
push
push
jp
scas
or
or
add
push
idivb
xor
out
cld
dec
push
pop
add
sub
pop
and
or
add
and
ret
jg
movsb
or
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
