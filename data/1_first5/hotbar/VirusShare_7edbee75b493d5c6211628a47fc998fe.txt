fcomp
decl
push
jns
add
mov
or
adc
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
sbb
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
push
push
xor
push
mov
adc
not
mov
fisubrs
les
adc
incl
sbb
clc
imul
add
push
mov
push
push
push
xor
je
push
push
push
push
idiv
data16
in
sbb
clc
add
pop
sbb
inc
pop
shlb
nop
jne
pop
pop
pop
lcall
repnz
add
or
inc
or
jle
dec
push
xadd
dec
test
jg
mov
mov
push
mov
mov
call
ret
pop
add
fdivr
inc
push
push
mov
pop
mov
mov
les
insb
and
aaa
cld
ja
mov
push
push
and
add
movl
outsb
push
mov
orl
jae
xor
jnp
nop
adc
adc
push
lea
push
sbb
repz
jne
sbb
add
pop
xor
or
xchg
dec
cltd
adc
jns
orl
mov
push
xchg
dec
add
push
cld
jg
mov
cmpl
jne
push
or
dec
add
mov
push
cmp
add
inc
sar
pushf
loop
xor
inc
hlt
push
and
aam
gs
jbe
add
sbb
mov
adc
mov
adc
data16
mov
mov
lea
xor
lret
sbb
jp
or
add
loopne
ret
fists
add
xchg
int
push
sub
mov
push
push
and
xor
sub
ds
jecxz
inc
pop
add
sbb
push
mov
add
ss
iret
add
mov
adc
in
mov
sete
inc
movsl
adc
xchg
push
push
into
nop
sub
add
or
leave
mov
pusha
push
rorl
nop
cld
imul
add
push
push
pop
inc
add
sub
adc
call
add
dec
and
pop
adc
sahf
arpl
inc
jnp
xor
add
push
loopne
fldt
les
xor
daa
ja
cs
sbb
inc
aam
xor
pop
jb
push
push
dec
push
mov
lea
aas
fisubrs
adc
jl
xor
dec
add
sbb
add
enter
cmpsl
and
xor
imulb
stc
or
pop
sub
jle
jmp
and
mov
test
in
lcall
cmpl
mov
movsb
pop
pop
cmpsb
mov
pop
ret
ljmp
inc
push
dec
dec
push
outsb
stos
js
sub
add
pop
mov
and
jl
test
shlb
inc
les
icebp
or
lahf
cmp
jae
jg
test
clc
mov
sub
push
mov
sub
js
es
or
iret
je
inc
and
add
in
inc
push
and
lods
or
and
push
int
and
cmp
sub
cmp
jle
add
cwtl
or
ja
lcall
add
cmp
mov
out
sbb
sarb
in
dec
inc
aas
cld
push
dec
bswap
push
add
call
inc
mov
inc
incl
cmp
pop
popf
mov
or
pusha
and
push
or
sbb
aas
sub
lret
jl
orl
sbb
inc
hlt
nop
test
aaa
xor
mov
mov
mov
push
es
sub
inc
add
pop
cmp
lret
sarb
sbb
lcall
or
loope
roll
or
or
xor
je
dec
or
js
orb
push
stc
ret
addr16
stos
add
push
lea
xor
adc
fists
ds
das
cli
fdivl
shlb
push
mov
hlt
push
jns
jl
in
mov
fdivrl
push
adc
add
add
inc
lock
or
mov
pop
mov
mov
push
pop
mov
or
adc
rsqrtps
sub
and
jae
pushl
jmp
inc
dec
cmp
mov
pusha
push
push
es
or
loop
push
add
push
push
bound
add
or
jbe
dec
sbb
scas
pop
push
pusha
sub
jns
fprem1
sete
test
test
in
sub
add
nop
mov
orb
xor
adc
push
int3
dec
insb
or
out
imul
push
cmp
jmp
inc
or
push
mov
in
xchg
hlt
push
punpckhbw
outsl
xor
loopne
or
push
jle
or
and
aas
add
push
push
add
rolb
pop
test
xchg
adc
sub
adc
push
repz
punpckhbw
push
dec
inc
jb
rcll
mov
push
push
adc
add
push
or
xor
js
jle
cmpsb
jo
push
in
add
dec
insb
test
push
les
mov
cmp
mov
adc
or
xor
pop
addl
nop
inc
mov
mov
add
add
push
adc
ret
movsb
sbb
xchg
sbb
addr16
sbb
sti
mov
dec
dec
xor
push
xor
sbb
cmp
jp
inc
jle
xor
sbb
popa
push
or
shr
insl
adc
fdivrp
adc
leave
mov
test
cmpsl
or
add
add
or
adc
cmpsl
mov
jb
cld
inc
mov
cs
clc
jno
push
push
repz
dec
push
xor
push
sub
mov
cmp
inc
adc
mov
mov
cmp
mov
xchg
jne
push
push
push
cmp
or
adc
add
xor
or
mov
test
rol
sub
lods
out
or
dec
rorb
imulb
mov
js
in
out
cmpl
je
pop
xchg
or
call
adc
pop
xor
imul
push
push
sarb
cld
mov
movsb
cmp
testl
mov
push
inc
mov
in
cltd
sbb
sbb
adc
adc
sahf
cs
cld
adc
push
fiadds
das
insb
or
lahf
cmp
mov
mov
jmp
and
push
sbb
mov
mov
cld
cmp
leave
in
push
mov
lods
push
or
addl
test
push
add
das
lea
in
cwtl
jns
jl
add
push
sub
adc
and
push
xchg
dec
mov
xchg
jne
push
jb
inc
push
lods
mov
hlt
setae
iret
sub
in
jg
sbb
push
cli
jmp
cmc
mov
push
sub
dec
jns
jne
jb
leave
gs
and
int3
sub
cltd
add
or
cli
xchg
push
adc
jne
stos
enter
cmp
outsb
notl
jmp
stc
cmp
push
adc
gs
bound
mov
mov
sbb
sbb
jmp
add
inc
add
pop
sub
sbb
adc
jle
jne
mov
push
mov
inc
aam
xor
mov
push
das
lods
sbb
push
std
cld
cmp
lahf
mov
sub
cmp
je
ljmp
outsb
mov
or
sbb
das
and
and
and
mov
loopne
sbb
mov
jo
sbb
mov
inc
push
mov
fsubl
movl
sbbb
sbb
aas
add
sub
sub
and
leave
cmpsl
or
aaa
add
call
add
incl
jne
push
call
inc
cmp
jl
clc
or
sti
xlat
ret
pop
push
leave
cs
jnp
and
outsb
aaa
in
or
cmp
jbe
mov
addl
mov
jg
jp
notl
add
testb
xor
movsb
push
shlb
sbb
jg
je
test
mov
jne
movzwl
in
add
je
push
xchg
into
push
sbb
mov
jg
jg
lea
add
inc
test
jne
sub
push
push
inc
sbb
mov
pop
xchg
xchg
aam
adcb
pop
in
or
ficoms
icebp
stc
xor
add
xor
pop
jo
mov
sbb
shlb
fidivl
lea
fbstp
iret
cmp
jg
add
add
push
mov
testb
push
mov
lock
add
stc
pop
insb
pop
pop
ret
mov
or
sbb
and
sub
or
dec
adc
pop
dec
pop
rcr
sbb
loope
lock
or
movsl
ficomps
or
pop
jne
pop
mov
sbb
clc
js
pop
enter
mov
inc
xchg
aaa
adc
lea
push
imul
cmp
mov
outsb
mov
pop
hlt
std
sbb
jge
push
call
sub
nop
lahf
xchg
mov
mov
mov
cmp
pop
cld
in
mov
mov
lea
push
mov
sarb
xchg
push
fcoml
clc
push
cmc
aaa
ds
ja
add
jmp
insb
fcoml
add
push
mov
mov
pop
adc
cwtl
jl
inc
jo
mov
test
add
add
enter
adc
ret
icebp
mov
mov
pop
cld
sub
je
cmpl
sub
pop
ror
adc
add
movw
jo
sti
push
pop
or
mov
or
ss
push
jo
inc
into
dec
mov
cmp
shr
sub
ret
imul
lret
pop
xorl
movsb
push
and
pusha
jo
mov
and
fwait
insb
pop
pop
data16
out
in
sahf
or
jne
fsub
add
sbb
push
cld
mov
lcall
xchg
test
push
adc
cmp
ja
or
lock
add
dec
add
adc
or
clc
push
xor
jge
movsl
adcl
repz
dec
repz
adc
adc
pop
jg
push
call
aas
add
jp
push
push
push
pop
loop
push
push
out
sbb
fsubrs
pop
push
push
lea
sbb
outsb
enter
add
push
mov
or
or
outsl
enter
inc
sbb
mov
cmp
jecxz
xchg
jge
pop
xchg
fmuls
add
push
cmpsl
imul
loop
jg
call
lret
dec
test
sbb
rcrb
xor
ret
call
pop
in
mov
aaa
add
out
adc
je
inc
outsl
jg
cmpl
lea
jl
mov
push
jne
push
js
cmc
lcall
dec
test
push
mov
faddp
das
rcr
cld
jnp
jmp
hlt
push
push
sbb
fimuls
ret
xor
mov
inc
inc
or
inc
or
jo
xor
imul
sbbb
add
inc
aas
sbb
jbe
inc
or
adc
cmp
push
and
arpl
xor
ficoms
sti
loope
mov
loop
mov
sahf
icebp
scas
loopne
in
pop
mov
push
cmp
shl
ret
into
fcmovne
adc
mov
pop
push
push
int
lds
mov
push
cmpsl
xchg
mov
mov
rorb
dec
mov
adc
adc
pop
loopne
xor
cmp
jge
jmp
inc
add
lds
imul
dec
adc
adc
mov
lea
and
add
pop
nop
pop
in
add
mov
or
cmp
push
push
sbb
pop
jle
mov
jmp
ret
add
jle
add
shrb
es
ret
pop
pushf
movsl
loopne
add
jg
jno
mov
adc
push
dec
dec
addb
ret
mov
enter
add
bound
inc
add
in
rcr
add
inc
push
add
ret
push
add
pop
jae
mov
loopne
cmpsl
sub
cmp
jge
cmpsb
jle
test
add
inc
jo
adc
adc
push
jmp
jl
insl
jbe
push
hlt
cmp
cli
lret
inc
mov
shl
pop
outsl
sbb
rorl
add
add
cmp
rorl
and
popa
mov
mov
mov
sbb
adc
push
jl
add
movb
inc
push
sbb
add
cmp
push
ret
cmp
or
xor
or
mov
fstp
push
mov
add
pushf
add
xchg
pop
mov
inc
sub
mov
mov
mov
insb
or
jae
pop
addps
popf
in
mov
add
adc
xor
test
shlb
jb
pop
fistpll
push
and
xchg
lahf
push
mov
or
sbb
push
mov
mov
icebp
or
cwtl
cmp
cmp
dec
dec
sub
dec
and
xchg
or
push
rol
fmuls
jle
subl
pop
add
cld
mov
int3
mov
adc
lahf
xor
movsb
push
push
mov
adc
pop
sbb
mov
pop
mov
pop
and
sbb
and
repnz
and
sbb
adc
rclb
dec
pop
mov
or
sbb
xor
push
lea
fiaddl
jl
add
ret
pop
inc
mov
cli
stc
pop
mov
push
xor
mov
sub
inc
add
mov
dec
mov
or
sbb
nop
or
rcll
je
inc
xchg
pop
inc
push
push
out
inc
stos
and
ret
or
enter
xchg
jg
fstl
sbb
and
das
and
jg
pop
mov
sbb
sbb
push
jo
incl
fistps
mov
sbb
or
sub
dec
in
or
mov
iret
outsb
mov
shll
faddp
mov
scas
mov
inc
cmp
loop
test
loopne
and
je
or
jge
fwait
scas
or
jne
push
add
push
in
in
rorb
add
push
cld
add
dec
stos
push
cmpsb
jl
dec
mov
cmp
aad
jne
cmpl
and
jle
lock
dec
or
jmp
ret
pop
add
js
loopne
add
sarb
rcr
jle
cmp
sbb
push
mov
fdivrs
pop
and
xor
or
ja
je
scas
and
push
sub
adc
pop
cmp
pop
je
mov
jecxz
xchg
out
dec
ds
jne
jle
ds
mov
mov
or
cmp
ret
sbb
je
iret
fwait
imul
inc
dec
adc
xorb
jg
push
icebp
or
stc
or
and
sbb
and
xor
inc
jp
mov
decb
xchg
sbb
mov
add
mov
loopne
xchg
or
enter
leave
and
pop
pushf
cmpb
cmp
shrb
cltd
xor
cli
xchg
jne
push
jp
jl
push
lea
jp
push
adc
mov
cltd
pop
mov
sbb
adc
imul
out
int
dec
mov
popf
jns
lds
fisttpl
xchg
dec
cmp
pop
repnz
sbb
xchg
fldz
movl
sahf
or
mov
stc
xchg
dec
inc
lds
sub
stc
lea
adc
jne
scas
out
clc
pop
dec
sbb
in
test
out
sahf
pop
xor
rcr
sahf
out
jl
cmp
xorb
mov
popf
ds
xor
pop
and
jo
lahf
jae
insl
rol
movsb
fstl
loope
push
adc
imul
mov
dec
sarl
sbb
repnz
out
dec
ljmp
in
add
scas
dec
push
push
jecxz
push
roll
dec
dec
mov
pop
push
lea
push
mov
cli
scas
ficoml
add
push
lea
jns
fdivrp
cmp
push
xchg
xchg
and
aam
les
xchg
inc
sbbb
sahf
adc
dec
xchg
push
cmp
roll
or
movl
add
sub
bound
rorb
stos
xor
jle
lods
cli
push
aad
jl
cmpb
mov
fidivrl
nop
fldt
test
inc
dec
push
call
pop
xor
mov
push
stos
out
lahf
mov
jle
ficompl
add
pushf
andl
mov
mov
jne
pop
std
or
inc
cld
shlb
push
mov
loop
or
in
and
ret
jle
or
mov
push
scas
jbe
xor
sbb
sub
outsb
rolb
in
push
ds
leave
push
rolb
in
xor
ficoms
mov
js
cmp
sbb
out
push
push
bound
pop
addl
aas
or
shl
sub
daa
push
setne
push
dec
and
xor
push
pop
mov
sub
pop
inc
inc
rorl
nop
movq
add
lods
loope
cmp
je
or
andb
rolb
add
mov
xchg
pushf
push
mov
fbld
jle
sahf
pop
mov
dec
sub
ret
lahf
mov
es
cmpl
jne
mov
cli
adc
pop
adc
test
mov
lret
add
lods
jecxz
lock
push
lea
xchg
clc
adc
cmp
mov
data16
push
mov
mov
insb
push
dec
dec
mov
push
jg
loop,pn
xor
je
dec
adcb
pop
add
sub
cltd
xchg
clc
inc
cld
sub
sar
add
out
inc
fisubrl
int
xor
sub
mov
add
shlb
dec
inc
mov
cmp
xchg
xor
adc
dec
ss
enter
push
mov
jbe
fdivrs
outsl
icebp
mov
push
push
sbb
push
out
sahf
repnz
xor
cmp
jp
cmp
inc
or
xor
mov
add
sub
push
lock
push
les
loopne
mov
inc
imul
adc
cmp
call
pusha
adc
add
cs
sbb
push
push
outsb
addb
adc
data16
mov
cmp
xor
int3
add
adcb
or
shrb
push
loope
scas
inc
addb
mov
aas
les
out
mov
pop
mov
xchg
out
or
mov
inc
movsb
cmp
sahf
cwtl
push
jl
lock
pushf
sub
mov
inc
xor
inc
mov
loopne
push
fucom
ja
cwtl
add
jmp
lret
xor
push
push
push
lahf
push
or
and
jbe
push
inc
cwtl
aas
cs
fsts
icebp
jo
lret
push
mov
or
ss
and
cs
mov
push
add
xlat
loop
pop
xor
in
shl
pop
adc
cmp
push
add
adc
jnp
or
aad
loope
loope
sbb
jmp
pop
cld
pop
in
xchg
addl
mov
cmpsl
adc
sarb
jle
mov
xchg
jno
push
popa
mov
mov
xchg
add
jp
jb
dec
mov
xchg
push
ds
dec
mov
pop
flds
popa
hlt
or
mov
jle
mov
adc
ljmp
mov
cmp
push
push
sbb
xchg
nop
sbb
sub
clc
inc
and
push
mov
jl
inc
add
mov
into
pop
outsl
jo
adc
or
aad
jb
pop
pusha
xchg
fstpl
sbb
clc
out
orb
push
fwait
imul
mov
rorl
or
mov
enter
adc
add
les
pop
jns
lods
and
xchg
jo
mov
mov
adcb
nop
add
incl
mov
or
lods
push
dec
sbb
dec
ljmp
mov
sub
addb
xor
lods
dec
inc
inc
lahf
push
rclb
ret
xor
pop
push
pusha
imul
ret
test
push
push
push
nop
sti
add
or
pop
pop
sub
push
push
lea
mov
mov
xor
sbb
popf
aas
push
clc
test
or
xchg
cmp
cmpl
movsb
loope
push
lock
push
test
in
add
inc
cmp
add
addb
push
dec
add
fcoms
je
add
or
sub
pop
mov
icebp
inc
push
and
push
push
push
xchg
cmpsl
daa
push
rcll
dec
sahf
sbb
add
pop
push
je
push
mov
bound
adc
jge
aaa
faddl
sub
inc
shrb
ret
dec
jae
inc
inc
fldl
fmull
pop
jnp
mov
divb
push
scas
inc
lods
mov
push
push
lahf
push
or
adc
imul
addb
scas
add
add
sahf
andl
ds
push
imul
in
sbb
push
lds
pop
push
xor
mov
cmp
sub
add
mov
xchg
mov
dec
inc
push
add
push
mov
pop
inc
ljmp
add
xchg
inc
push
and
cld
call
loop
lock
and
xor
dec
or
or
es
mov
inc
dec
push
add
lea
adc
push
mov
adc
xor
cmpsb
sbb
sbb
hlt
adc
push
xchg
push
push
mov
xor
push
cld
cld
add
jns
in
jge
add
je
mov
call
jge
xchg
lock
push
lock
nop
inc
stos
jo
sub
sub
push
sub
mov
adc
cmp
dec
or
jmp
push
mulb
out
mov
push
and
fisubrs
add
add
iret
add
fdivl
or
adc
and
push
loop
mov
fmull
sbb
mov
shrl
int3
dec
push
push
push
pop
popl
push
shr
je
lea
js
imul
popf
mov
movb
pusha
popa
or
mov
mov
push
clc
movsl
jno
mov
adc
popa
faddp
adc
or
push
sub
inc
or
jbe
enter
jbe
mov
pop
lcall
psraw
sbb
subl
cmp
sub
fadd
hlt
scas
and
sbb
incl
rol
push
sar
push
dec
fldenv
fstpl
daa
adc
fdivrs
add
xor
xlat
adc
add
mov
jg
jge
mov
dec
bound
imul
sar
mov
shr
add
mov
imul
push
sub
push
push
lahf
and
push
xor
push
in
jle
push
imul
jmp
enter
mov
call
stc
add
mov
fistpll
push
enter
lea
adc
jnp
cmp
je
cmpl
inc
call
cmp
jne
push
pop
lea
jbe
call
and
dec
xor
ficomps
push
pop
loopne
icebp
shll
lea
or
adc
stos
cmpsl
into
mov
xor
dec
adc
sbb
mov
pop
dec
push
dec
mov
adc
or
sbb
mov
sub
dec
mov
or
out
cmp
pop
pusha
push
ljmp
dec
sub
sub
sbb
fwait
jmp
test
jl
lcall
idivl
push
aaa
outsl
xor
sub
cmp
pushf
cmc
outsb
push
mov
sbb
loope
add
jne
popf
mov
or
idivb
jmp
mov
fidivrs
cmp
das
outsl
cmp
add
xchg
sbb
and
fldl
add
popf
imul
imul
jno
jae
dec
sub
jge
jmp
js
mov
fwait
pop
fstpt
mov
sbb
push
faddl
add
fdivl
sub
xor
mov
fdivp
testl
lea
cs
sub
mov
mov
jns
inc
lock
xchg
push
fcoms
jmp
cmp
inc
lock
mov
jl
je
mov
je
addr16
add
rorb
addb
sar
ds
push
pop
movb
jecxz
mov
leave
jge
adcl
sub
cli
rclb
dec
adc
mov
aad
xchg
cs
adc
and
cmp
jbe
xchg
xchg
mov
call
je
sbb
xchg
js
sbb
mov
je
movsb
or
xchg
cmp
adc
and
subl
xor
faddl
daa
mov
xor
xchg
adc
mov
and
xchg
xchg
lods
add
inc
mov
jl
lcall
icebp
xchg
lret
or
sub
out
test
sub
inc
in
pusha
or
mov
pop
mov
mov
mov
inc
out
loopne
incl
push
jmp
jecxz
jmp
leave
jae
pop
add
or
cmp
sbb
pop
add
imul
or
add
into
add
cli
inc
mov
daa
push
test
dec
cmp
add
loope
mov
or
jbe
add
add
mov
pop
addb
daa
ret
push
test
push
fcoms
out
xchg
fucomip
dec
or
push
add
push
insl
adc
mov
jae
push
lcall
fisttpll
xchg
fstpl
jae
and
inc
mov
movl
adc
xor
xchg
adc
mov
add
push
movsb
inc
fsubrs
or
adc
fimull
mov
cltd
inc
sbb
mov
jbe
mov
pop
orl
setl
push
rol
push
cmp
inc
cs
or
mov
ret
mov
mov
popa
xchg
push
dec
mov
mov
mov
xchg
or
jns
sbb
xchg
push
push
sbb
das
orb
mov
pop
ret
lahf
or
or
sbb
aaa
popa
addb
push
ret
and
mov
xor
push
sub
clc
setb
pop
cld
pop
inc
or
mov
sub
cmp
setae
lcall
and
add
mov
xor
xor
outsb
or
pusha
movb
pop
jae
outsl
inc
pop
sbbl
push
sub
inc
push
mov
cltd
xorb
pop
add
adc
push
dec
push
movsl
push
es
pop
add
mov
jno
in
sub
insl
clc
or
push
dec
xor
push
pop
cmp
inc
push
mov
dec
inc
push
hlt
adc
nop
sbb
int3
jp
or
sub
add
and
adc
push
push
inc
push
shrb
push
dec
push
cmp
inc
int3
daa
jns
and
add
das
mov
cs
cmpb
adc
arpl
pop
jns
push
orb
filds
movzbl
cwtl
push
inc
jp
or
push
das
loop
dec
jno
mov
adc
test
push
jno
ss
repz
add
add
add
sub
pop
push
add
xlat
dec
jo
inc
stos
or
adc
imul
hlt
add
mov
mov
inc
repnz
js
ds
out
popl
mov
push
and
inc
xor
or
add
add
cltd
in
push
push
int3
dec
or
lar
and
sbb
dec
pop
push
scas
inc
xor
sbb
xor
gs
insb
cltd
and
jns
movsl
and
jo
sbb
or
scas
push
mov
cltd
adc
cmp
adc
es
xchg
mov
pop
adc
nop
lcall
pop
enter
nop
test
sbb
or
lret
add
sbb
xor
push
push
xor
rcr
in
insb
mov
adc
outsl
popa
test
or
push
mov
push
add
add
xor
or
add
mov
pop
inc
pop
fdivl
imul
push
mov
jo
or
sub
xor
das
les
xor
push
adc
gs
pop
dec
sahf
subps
pop
push
and
and
arpl
mov
imul
mov
xchg
and
dec
int
mov
mov
sbb
clc
push
sbb
aaa
aaa
nop
and
leave
arpl
jle
es
shr
push
aam
test
in
cmp
and
or
mov
and
mov
shlb
push
inc
mov
pop
hlt
inc
pop
fisubl
std
arpl
xlat
add
out
sahf
cmp
push
stc
subb
xchg
push
or
or
add
insl
cmp
pop
dec
addb
push
push
dec
jl
cmp
push
aad
jp
leave
or
dec
dec
pop
jg
mov
pop
inc
arpl
pop
nop
mov
and
or
inc
pop
sbb
cmp
add
jne
cmp
and
lea
inc
and
jl
xchg
push
push
rolb
xor
lret
push
push
lock
iret
mov
cltd
dec
ljmp
push
or
pop
inc
mov
int3
inc
sahf
xchg
push
sti
sbb
je
ss
add
add
fcmovnu
xchg
pop
call
and
adc
inc
jb
adc
cltd
mov
test
push
fisttpl
add
mov
pop
xor
leave
mov
or
xchg
xchg
leave
lret
push
fwait
in
xor
cmp
and
mov
push
add
jne
adc
mov
sub
loope
bswap
pushf
adc
fs
pop
mov
push
push
pop
iret
xchg
dec
mov
fwait
inc
xchg
and
mov
inc
and
fidivrl
cwtl
lods
and
fiadds
clc
adc
mov
jecxz
add
push
cmp
je
pushf
jl
pop
jo
js
cmpsb
ret
mov
shll
rorb
je
pusha
out
mov
mov
inc
lcall
pop
movl
jne
rorl
mov
cmp
push
pop
add
clc
mov
add
push
mov
pop
sub
xchg
dec
pop
insl
add
and
out
pushf
sbb
cmc
or
push
and
sub
push
xchg
fisubl
test
mov
daa
and
add
sub
out
sub
stos
cmc
loopne
outsb
mov
push
dec
xor
xchg
pop
adc
loopnew
fcoml
das
or
aad
dec
adc
sbbl
xchg
mov
cli
ja
sub
mov
imul
jmp
in
cmp
jecxz
frstor
xchg
insb
mov
inc
insb
pop
inc
mov
insl
push
fmull
sub
loope
inc
add
popw
cmpsl
mov
xchg
sbb
push
cmp
sub
inc
pop
push
test
subl
and
sbb
add
mov
jae
xor
mov
mov
mov
adc
and
adc
call
fmuls
cmp
test
mov
jle
bound
jecxz,pt
sub
add
adc
xchg
pop
outsl
adc
jae
cmp
and
imull
into
jo
stos
adc
sar
cmp
dec
push
int3
mov
andps
or
or
sub
adc
sub
adc
sbb
push
test
into
movl
fmull
pop
imul
push
popf
push
lret
sub
lods
rdmsr
mov
push
sbb
cmp
iret
or
push
pop
mov
adc
add
out
inc
mov
sub
cmp
fidivl
mov
in
movsl
outsb
ss
and
add
push
daa
xchg
add
bound
and
enter
pop
add
or
pop
insb
adcb
push
fdivrs
mov
addr16
push
pop
mov
enter
push
or
mov
add
inc
push
stos
dec
sbb
repz
cmp
or
xor
and
outsl
mov
or
xor
pop
cltd
pop
imul
cmpsb
lahf
push
fmull
push
test
push
popa
rolb
push
sbb
sub
xchg
sbb
outsl
cmp
dec
adc
push
mov
xchg
push
outsb
ret
and
adc
shlb
add
push
sbb
push
sahf
nop
sbb
pop
adc
mov
das
sub
or
and
pop
cltd
sub
adc
or
pop
adc
add
sbb
pop
dec
adc
jbe
mov
into
clc
xor
and
push
loopne
divb
sub
add
xchg
and
pop
add
jne
xlat
pop
std
inc
mov
je
pop
pop
or
jl
mov
mov
cmp
data16
sub
movsb
push
std
repz
jmp
xchg
or
loope
sub
xchg
push
inc
and
add
leave
xor
jmp
orl
mov
dec
and
fldenv
jmp
cmovbe
loopne
ja
daa
jmp
lret
pop
dec
subl
add
mov
test
cmc
nop
and
pop
dec
ljmp
push
mov
clc
or
mov
inc
inc
fsts
push
sbb
loopne
add
sub
dec
cmp
and
cltd
xchg
fldl
xor
xor
jmp
nop
or
mov
fxch
pop
stos
stos
xchg
xchg
push
push
pushf
mov
jae
repnz
call
sub
or
jno
mov
add
pop
daa
mov
push
jp
sub
movl
rolb
pop
sub
mov
pop
mov
loopne
dec
in
push
xor
and
cs
mov
scas
addl
adcb
jnp
add
push
add
push
add
add
add
sub
xchg
push
mov
sub
add
pushf
push
inc
or
inc
cs
xor
add
xor
fs
pop
push
add
push
push
push
xor
push
and
sub
in
inc
sub
daa
sbb
pusha
ret
aam
inc
cmp
xchg
int3
add
or
fs
inc
sbb
insb
jg
dec
fsubp
add
push
andb
push
jb
ror
dec
mov
mov
cmp
in
add
mov
push
cmp
cmp
les
in
mov
push
repnz
subb
test
or
call
xchg
cmpsl
dec
cmpsb
adc
into
xor
je
inc
shr
outsl
and
test
sahf
mov
inc
test
add
jmp
mov
xor
sbb
mov
cmp
xor
test
inc
sub
inc
cmp
push
mov
stos
dec
xor
jne
fs
inc
xlat
and
cmp
imul
test
xchg
adcl
push
rorb
clc
aad
icebp
fldt
test
jmp
push
sbb
insl
push
sub
and
or
or
hlt
add
inc
sbb
adcl
in
dec
cs
cmp
lods
nop
xchg
mov
adcl
insl
daa
inc
fldcw
test
cld
push
push
in
xor
mov
imul
ja
movlps
mov
dec
jecxz
mov
sbb
mov
sub
or
movsl
xor
and
pop
fdiv
add
pop
inc
movb
add
lds
dec
xchg
jno
rol
push
add
sti
shrb
outsl
inc
testb
movsb
and
aad
mov
ret
and
arpl
push
adc
jae
jle
jge
movsb
add
or
gs
mov
and
or
popa
pop
xor
sub
inc
mov
push
jge
imull
sub
pop
sarl
cs
test
sub
imul
lods
and
hlt
push
and
cmp
popa
adc
movsb
adc
rcl
adc
adc
cwtl
cmp
push
cs
sbb
sub
loope
jmp
inc
sbb
mov
adc
and
adcl
mov
lret
sarb
push
cmp
jl
pop
mov
rolb
push
dec
out
or
mov
fwait
into
or
scas
mov
push
inc
fadds
ret
movsb
push
insl
jge
or
stc
push
pop
orb
push
jo
punpckhbw
pop
xor
pop
lock
sub
dec
and
mov
iret
enter
mov
jg
jno
add
cmp
or
int
mov
push
sbb
jno
shll
inc
pop
inc
mov
shlb
inc
mov
outsl
movsb
cmpsb
pop
mov
testb
pop
adc
decb
add
and
sub
sub
push
add
push
scas
sub
aam
ja
fstl
es
sub
addr16
aaa
addb
push
ret
or
mov
lds
add
orb
faddp
sub
fsts
push
cmpsb
xchg
jmp
xchg
rcl
dec
lock
pop
js
loopne
add
or
adc
sbb
iret
pop
pop
pop
mov
call
je
mov
or
inc
push
fs
or
pusha
adc
dec
push
cltd
or
push
in
add
pop
sti
push
mov
enter
and
add
jmp
loopne
iret
rcll
adc
or
lds
repnz
xchg
pop
aaa
push
jno
mov
pop
dec
and
or
pop
dec
add
adc
nop
cmpsb
jb
adc
test
xchg
sub
cltd
nop
sbb
or
shll
cs
adc
and
stos
push
dec
pusha
or
ds
pushf
jl
cwtl
fists
cmp
dec
xor
scas
push
jg
jo
inc
xor
add
adc
sbb
repnz
pop
enter
mov
adc
inc
and
loope
mov
pop
inc
jecxz
or
push
lock
js
adc
das
rcrl
adc
shrb
addb
adc
mov
and
or
in
and
loopne
push
and
xor
add
pop
je
inc
mov
jns
xchg
xor
and
mov
push
push
push
cs
jb
pop
add
sbb
fldl2t
mov
std
adc
jns
sub
in
or
adc
mov
popa
enter
pop
add
jno
cmpsb
xor
mov
es
adc
fcoml
popa
mov
inc
sbb
test
test
dec
andl
inc
and
push
push
cmp
dec
mov
inc
orl
pushf
les
jl
pop
lock
dec
loopne
cmp
insb
cwtl
pushf
sbb
inc
fcoml
leave
xor
mov
sbb
ja
push
pop
mov
push
mov
and
int
dec
and
leave
jmp
sub
test
je
cmp
addb
xchg
inc
rorb
fistps
inc
dec
mov
cmp
es
dec
dec
es
dec
push
push
xor
mov
call
push
test
mov
xor
pop
pop
jno
or
dec
and
imul
and
pop
push
cmp
mov
inc
out
push
subl
mov
aam
pop
rorb
mov
sub
movsb
or
jl
mov
mov
mov
insl
cmp
push
add
rolb
fdivrl
or
pop
incb
cmp
jae
or
shll
mov
jl
outsl
xchg
xchg
lret
cmpl
sbb
xor
and
cmp
and
xlat
and
jb
pusha
sbb
push
pop
rclb
out
sbb
and
aam
repz
xor
out
push
push
and
pusha
sbb
insb
mov
push
and
push
jg
int
sbb
and
jmp
push
cmp
add
xchg
xchg
data16
add
ljmp
pop
rorb
pop
xorl
fwait
je
or
lods
je
or
adc
arpl
mov
and
cli
lds
add
out
adc
mov
orl
sbb
movsl
and
clc
sbb
clc
ljmp
dec
cld
sub
or
jge
int3
sub
loopw
outsb
push
add
inc
fisttps
adc
fidivl
pop
fcompl
jle
jg
cld
xchg
jp
imul
les
push
mov
or
cltd
js
jl
mov
add
insl
cs
jne
pusha
in
or
pop
mov
sub
in
add
dec
jns
inc
jmp
mov
sbbl
leave
scas
add
cmp
sbb
mov
dec
pop
push
jo
lahf
add
push
sub
call
mov
inc
aam
sbb
push
cld
sub
jle
jb
inc
add
sarl
xchg
cmp
lea
jl
lods
adc
add
cmp
sub
test
out
add
inc
xorb
mov
es
test
sbb
adc
test
test
sbb
xchg
push
fdivrs
sbb
shlb
movsb
jecxz
mov
loope
jns
dec
add
fwait
push
push
adcb
inc
fwait
push
and
mov
push
rclb
add
inc
mov
mov
mov
jno
cmp
inc
sbb
fcmovnu
icebp
or
notl
dec
add
mov
out
xchg
xor
dec
and
xchg
jbe
testb
rorl
and
mov
pop
or
repnz
out
sub
pusha
or
jns
je
inc
in
ss
xor
mov
cld
mov
js
icebp
test
mov
push
inc
fcoms
sbb
pusha
iret
xchg
fnstsw
jo
or
or
pusha
aaa
popf
jecxz,pn
or
js
popf
and
loope
sbb
incb
jle
mov
cmpb
mov
in
add
xor
pop
push
add
or
xchg
mov
subb
sbb
adc
cmpsl
sub
adc
pop
sbb
stos
mov
xor
xor
lods
adc
das
outsb
pusha
loopne
test
push
mov
imul
in
xorl
ss
test
and
dec
mov
or
mov
inc
pusha
pop
pusha
ja
js
sbb
stos
sub
dec
mov
jle
ljmp
mov
fadds
lcall
sbb
outsl
dec
cld
lea
sub
pop
cld
xchg
out
push
dec
jo
sbb
fimuls
sub
cli
cmpsb
jle
sbb
adc
add
sbb
add
insl
or
mov
fsubrl
or
lock
sbb
mov
sbb
dec
insb
cmpb
mov
adc
cwtl
adc
or
pop
pop
or
ljmp
push
loope
pop
inc
js
leave
push
stc
test
or
xor
sbb
stos
xchg
sbb
pop
or
inc
inc
cmp
mov
or
or
push
invd
and
imul
add
pusha
xchg
mov
dec
sbbl
push
and
mov
cmpsl
adc
adc
xor
jp
xlat
fldcw
dec
insb
xor
das
adc
cmpsl
aaa
sbb
lock
out
flds
je
inc
push
cmp
push
fstpl
mov
stc
xchg
sbb
jmp
imul
pop
hlt
ret
jmp
loope
je
xchg
and
rorb
push
es
dec
scas
cli
dec
std
inc
inc
xor
cmp
test
push
dec
sahf
out
pop
push
xor
mov
inc
sub
fidivrs
jbe
adc
or
jle
push
push
mov
sub
sub
and
sbb
mov
and
push
js
es
push
lods
popa
adc
test
popa
sbb
cwtl
je
mov
adc
add
jns
js
sete
inc
mov
pop
lcall
movsl
sbb
sbb
xchg
add
push
pushf
add
mov
and
nop
pop
mov
ret
lea
push
sub
test
loopne
fdivs
sbb
mov
bound
and
rolb
shrb
push
add
clc
es
or
inc
outsl
xor
add
push
aas
xor
push
enter
subb
mov
cmc
and
mov
push
adc
lock
test
adc
in
in
sub
ret
adc
fdivrl
mov
cmpsl
jne
inc
push
and
iret
lock
adc
xchg
push
decl
fwait
ret
inc
xor
inc
fldt
popa
jg
and
test
or
or
adc
xchg
inc
pop
pop
mov
cmp
lcall
adc
jnp
xchg
xor
push
inc
pop
inc
or
rorl
sbb
xchg
and
pop
adc
setge
sub
xchg
vcvttss2si
xor
cmp
add
stc
sbb
dec
adc
int3
inc
mov
xor
push
fsubrs
and
sub
dec
mov
dec
int
fcomps
inc
pop
leave
xor
and
push
or
pushf
inc
mov
mov
pop
test
adc
lahf
mov
sub
fs
and
push
dec
push
lock
cmp
sub
xor
push
xor
adc
add
imul
mov
xchg
je
mov
jmp
sub
add
jle
adc
xchg
adcl
or
jo
or
mov
andl
aaa
inc
inc
cmpl
mov
push
mov
dec
imul
cmp
push
xor
push
andl
push
std
pop
pop
nop
in
pop
pop
mov
xor
imul
push
mov
stc
insl
shlb
push
push
icebp
or
add
and
sbb
sub
sub
je
fdivl
xchg
lea
mov
mov
sbb
adc
jle
mov
aas
adc
push
sbb
or
cmc
fiaddl
movb
outsl
nop
sub
adc
sbb
inc
mov
add
push
mov
dec
or
mov
fisttps
sti
rcrl
adc
ret
mov
add
lcall
dec
and
jne
mov
cmp
dec
sub
add
mov
sbb
movzwl
rcr
add
int
xchg
sbb
push
mov
xor
xor
mov
aad
jg
pusha
inc
jg
imul
xchg
mov
test
je,pn
push
mov
leave
xor
mov
ret
xchg
mov
adc
or
adcl
enter
fisttpll
jg
mov
cmpsl
xor
xor
hlt
cmp
jne
clc
es
stc
in
ret
inc
jp
ja
bnd
cld
push
push
push
mov
dec
cmpsl
je
adc
aaa
jns
inc
rcl
mov
fs
cmp
push
mov
cmpb
cmp
jbe
leave
leave
loop
cwtl
sbb
jae
jmp
mov
adc
add
sub
or
lea
jge
push
push
or
push
mov
xor
inc
push
add
and
adc
mov
sbb
add
icebp
or
cmp
jne
mov
or
mov
jl
xchg
into
mov
cmp
jg
mov
sbb
jg
mov
pop
lret
jns
psubsw
clc
dec
mov
xchg
fcoml
mov
xchg
sbb
add
sbb
mov
xchg
or
aaa
dec
lea
jae
inc
sbb
adc
in
imul
sar
lret
ffree
add
xor
stos
xchg
hlt
je
cmpb
pop
pop
add
mov
or
decb
fldt
push
mov
sti
sub
loopne
outsl
add
sub
sub
xorb
lret
lret
add
cmp
push
loopne
ret
xchg
int3
lret
cld
addr16
sti
mov
dec
hlt
jge
add
sub
cmp
rorb
ret
xchg
dec
mov
inc
lds
add
popf
aaa
pop
fmul
fcompl
pop
push
es
pusha
pop
mov
popa
adc
push
sahf
jl
add
loopne
mov
push
jg
push
add
push
in
aam
test
add
push
ret
enter
xchg
push
bound
cld
sub
lock
orl
dec
adc
add
enter
pop
pop
repnz
cmpsl
push
push
mov
hlt
sub
pushf
mov
or
jb
or
push
pop
ret
mov
inc
stc
inc
stos
sbb
sub
jo
add
lods
and
imul
hlt
les
pop
mov
adcl
add
adc
ret
jg
pop
dec
xor
sub
nop
adc
mov
sbb
in
in
or
mov
cmp
mov
push
pop
stos
cmp
mov
or
push
mov
pop
sbb
adcl
in
push
ret
insl
fs
pop
cmc
inc
jle
pop
pop
mov
ret
adc
loopne
incl
add
cmp
add
push
add
mov
movsl
or
lahf
or
aas
add
repnz
lods
and
pop
clc
xchg
pop
int3
dec
shrb
fwait
xlat
mov
xchg
inc
into
adc
imulb
lock
xlat
pop
sbb
cmp
jecxz
add
adcb
rorb
loope
and
mov
adc
notb
call
jl
mov
and
adc
inc
pop
push
mov
add
inc
imulb
lock
scas
xor
loop
push
lcall
or
rol
mov
popf
and
cmp
je
add
add
xchg
sbb
add
sahf
addr16
lea
shr
pop
xchg
rolb
dec
movsl
cltd
or
lock
mov
push
push
jmp
addr16
outsb
push
add
and
or
xchg
rcll
push
lods
add
or
mov
popa
pop
mov
pop
hlt
or
lea
lea
jbe
or
mov
sbb
in
pop
pop
ret
lods
insb
pop
push
push
cmp
notb
rol
sbbb
add
leave
subb
outsb
or
inc
mov
ds
pusha
pop
cwtl
test
mov
clc
add
adc
inc
mov
jbe
dec
pop
jg
sub
sub
or
push
fisubl
rolb
or
sub
push
cmp
mov
mov
adc
jmp
or
pop
aad
rclb
movb
add
lock
add
lret
add
fistl
jb
rcll
inc
popa
or
inc
lods
jg
pop
and
add
lcall
nop
inc
push
loopne
imul
mov
and
push
mov
std
ret
xchg
cmp
push
inc
mov
fstps
fsubl
test
xor
pop
xor
and
add
and
push
lds
jmp
mov
add
fstpl
int
mov
xchg
dec
rorb
or
out
xor
pusha
fstl
xor
imul
or
mov
pop
and
arpl
je
fucomi
or
scas
rcrl
sub
addb
xor
les
sub
jecxz
ret
add
fldt
jmp
clc
add
addb
wbinvd
lock
push
mov
cmp
mov
pop
dec
dec
jle
jle
scas
push
push
enter
or
add
ret
mov
sbb
push
dec
pop
addr16
ds
test
or
push
test
push
push
dec
insb
xchg
test
testl
nop
sets
add
adc
add
push
xor
mov
add
aad
rcrl
popa
add
test
cwtl
hlt
pop
inc
add
jecxz
and
movsl
popa
mov
pop
jnp
in
lcall
xchg
inc
adc
sub
ficomps
push
inc
sbb
pushf
xor
push
fmul
push
sahf
pop
cmp
push
sbb
cmp
sahf
mov
addr16
push
jle
add
xor
lahf
loopne
sub
adc
cmp
inc
push
cwtl
scas
add
test
adc
xor
sti
je
dec
mov
pop
aas
add
mov
mov
xchg
loop
xchg
jp
add
cs
loope
std
cmpb
add
adc
xchg
andl
push
pop
jmp
dec
jnp
sub
and
lods
and
testl
daa
adc
pop
and
pusha
cwtl
sbb
mov
out
add
mov
mov
nop
or
sub
scas
sub
cmp
cli
inc
ljmp
lds
xor
fimuls
inc
int
mov
inc
add
sub
pusha
rclb
adc
enter
pop
push
scas
push
mov
and
mov
push
xchg
and
lret
jecxz
mov
jb
mov
scas
imul
sub
sar
sbbl
or
xchg
add
sub
push
mov
int
sbb
inc
stos
rcr
mov
lea
clc
mov
cld
cmova
jp
xchg
xor
mov
nop
arpl
pop
jle
pop
jne
ret
out
add
add
pop
cmp
push
dec
push
push
cltd
add
mov
push
add
sbb
xchg
xchg
mov
dec
jo
pop
or
mov
cmc
and
or
jl
inc
sub
and
enter
jae
add
jnp
bound
aaa
and
jle
mov
add
mov
and
inc
adc
adc
and
push
fidivrs
sbb
test
mov
sub
push
adc
pusha
test
and
sub
into
jl
mov
mov
call
rcll
xchg
or
mov
and
jbe
push
or
xor
mov
in
push
insb
push
and
mov
inc
and
add
sub
sub
inc
push
push
jl
or
sbb
pop
push
cltd
dec
sbb
xor
or
dec
push
jns
and
jne
sbb
add
dec
insl
sub
or
js
popa
fistps
lock
jo
push
adc
sub
jne
ljmp
or
inc
pushf
and
daa
add
cmp
or
adc
cltd
in
jmp
cmpsb
and
fadd
cmpl
xchg
negb
mov
pop
sub
movsl
or
pop
push
mov
lret
xor
inc
add
inc
mov
inc
inc
inc
add
inc
stos
das
mov
pop
xchg
lea
fcompl
adc
test
add
xchg
loop
jl
lock
lea
shrb
xor
jl
fiaddl
iret
pusha
push
adc
movsb
insl
fsubrl
add
push
sbb
movsl
add
mov
mov
mov
ds
inc
or
lahf
inc
pop
add
fwait
lea
and
mov
push
test
and
scas
add
jge
or
jl
insl
or
mov
js
arpl
scas
push
add
dec
mov
enter
sbb
pop
imul
dec
and
ret
clc
pop
push
adc
ret
pop
lret
or
int
or
je
ja
cmp
push
rclb
cmpsl
sbb
jl
push
inc
fisubl
inc
inc
lcall
dec
push
push
test
pop
pop
sub
sbb
xlat
std
xor
clc
jno
pop
jne
cwtl
inc
cmovo
sub
dec
bound
cltd
sarl
push
mov
cmp
mov
leave
adc
dec
mov
mov
add
or
test
add
sub
or
es
pop
add
lcall
add
sbb
iret
mov
sub
add
addb
rcr
fisttpl
call
idivb
cmp
jb
pop
pop
js
nop
inc
sbb
in
outsb
jecxz
mov
push
push
inc
sub
push
jne
or
mov
pop
add
jl
mov
add
jle
orb
decl
scas
incb
clc
in
mov
jle
cmpb
clc
sub
mov
enter
cwtl
lret
inc
sbb
add
out
inc
push
add
jmp
mov
and
cmp
fsubp
sub
sub
jge
xor
jp
pop
push
push
push
push
clc
and
push
push
push
sbb
jp
jnp
add
add
push
movb
or
fs
sbb
mov
fsubr
lds
fwait
mov
or
sbb
jge
iret
cs
push
js
clc
jg
ja
js
sbb
add
imul
mov
jns
sbbl
or
cli
sub
movsb
adc
and
ret
cmpsl
jns
cld
scas
inc
or
push
mov
sub
adcb
sub
in
mov
lods
lret
pop
jle
inc
int
add
sbb
push
mov
js
das
lea
jmp
mov
jne
dec
sub
mov
add
ret
addr16
clc
inc
popa
sbb
add
rclb
rcll
mov
sub
shl
or
adc
pop
ret
stos
push
push
cld
push
ljmp
ret
in
mov
cmc
pop
push
nop
pop
inc
rorb
mov
dec
add
loop
fdivs
cld
or
ret
add
cmp
push
call
mov
add
fwait
dec
loopne
mov
pushf
movzwl
xchg
loopne
test
jne
push
jae
mov
jne
test
gs
imul
add
dec
sub
push
es
push
push
lds
and
jge
loope
add
add
in
sbb
push
push
cmp
adc
add
jl
shl
sbb
dec
pop
das
pop
sbb
add
xor
sbb
add
pop
xor
xor
clc
jl
in
jnp
decl
mov
cmp
je
push
sahf
mov
pop
mov
in
add
inc
sbb
adc
fisttpll
sbb
cwtl
jp
pop
pop
adc
push
xlat
jge
xor
push
jg
loope
sbb
push
push
push
mov
adc
jle
nop
pop
sbbl
outsb
add
inc
cld
xor
negb
out
add
sbb
xor
enter
xlat
mov
cmpsb
sbb
push
fmull
neg
mov
xor
daa
xlat
jnp
push
cmp
in
xor
adc
shlb
xor
and
ljmp
mov
pop
mov
shl
outsl
adc
sbb
insb
shlb
mov
mov
roll
mov
push
adc
js
ficompl
into
in
loopne
add
push
or
shlb
call
inc
lret
scas
add
hlt
es
dec
cmp
adc
or
daa
or
ret
mov
icebp
cld
pop
or
inc
pop
lret
or
pop
ret
das
scas
in
fistps
rol
stos
or
dec
add
or
adc
les
add
push
push
imul
xchg
scas
or
inc
clc
xor
push
mov
jae
gs
push
sbb
cwtl
enter
cmp
js
mov
addb
or
sar
push
mov
pusha
xor
dec
lock
xor
aam
mov
xchg
lcall
push
movb
dec
push
outsl
pop
fnstenv
fs
cmp
mov
jnp
jae
mov
ret
and
adc
fst
add
dec
jb
pop
lea
pop
aam
or
jl
mov
or
xor
add
xchg
pop
inc
and
imul
jb
pop
mov
loopne
fdivrl
sub
push
jmp
cmp
aas
xchg
dec
sbb
and
add
sbb
imul
mov
add
movsb
cmp
ret
dec
imul
mov
enter
sbb
push
cld
or
aas
push
xor
jns
lea
jne
push
push
and
sbb
inc
dec
and
cmpsb
mov
mov
push
add
xchg
adc
xchg
lret
xchg
paddq
shlb
mov
push
jns
jo
cli
pop
pop
loope
lock
sahf
call
mov
xlat
negl
ret
pop
add
pop
movl
addl
sub
ja
cli
pop
mov
mov
add
pop
add
lock
and
mov
les
adc
xor
xor
hlt
aam
movl
mov
ja
adc
and
out
imul
xor
sbb
cmp
jb
or
add
ret
push
sub
push
add
or
jnp
out
add
add
daa
adc
leave
sarb
add
clc
pop
ja
and
mov
push
or
add
add
cmp
cmp
dec
mov
sahf
test
mov
add
xlat
or
rcrl
decl
aaa
jo
cmpsl
bound
in
enter
and
and
mov
repnz
mov
xor
cs
das
je
or
jne
je
outsl
mov
jne,pn
mov
inc
je
mov
lea
and
dec
decl
mov
sahf
inc
mov
std
out
xchg
pop
decl
cmp
or
push
imul
mov
test
aad
or
inc
cmp
jbe
lea
lea
mov
add
pop
sub
inc
jmp
inc
and
add
mov
fidivl
decl
mov
pop
fnstsw
sbb
cmp
lock
sub
cmp
mov
push
ror
add
div
dec
out
js
jg
out
mov
mov
adc
and
adc
and
add
mov
shlb
fdivrs
cmp
stos
jne
cmp
xlat
and
mov
jl
jb
dec
adc
je,pt
sub
movsb
cmp
adcb
ret
dec
push
sub
inc
lsl
add
add
inc
jl
jne
mov
cld
push
push
lahf
movsb
sbb
sub
mov
mov
xchg
or
fidivl
roll
mov
cmpsb
decl
inc
cmp
jb
cmp
ja
pushw
shlb
xor
sub
incb
adc
ja
and
ljmp
cmp
xor
pushf
int3
data16
cmp
jbe
fstps
mov
lcall
mov
jns
test
jae
outsl
pop
mov
jmp
mov
aas
xor
and
lcall
leave
add
mov
je
add
inc
insl
js
stos
jne
ret
push
test
loope
lret
push
or
scas
or
incl
jae
mov
jmp
push
pusha
aas
adc
adc
outsb
jo
jne
adc
mov
add
push
mov
add
or
clc
cli
cmp
xchg
lret
cmp
loopne
lea
test
outsb
test
aas
and
test
sbb
je,pn
test
jne
into
sub
orb
jb
xor
dec
cmp
mov
repnz
adc
rolb
add
add
inc
ss
notb
fadds
or
xchg
pop
jp
sbb
movb
jnp
xor
ljmp
inc
dec
outsb
cwtl
or
and
xchg
dec
lods
cmovp
jmp
mov
or
add
inc
pop
mov
in
pop
ja
lcall
shr
mov
jo
sbb
repnz
push
aad
push
adc
cmp
mov
jl
jl
imul
aam
ret
ret
imul
xchg
mov
loopne
pop
sbb
pop
add
inc
jbe
pop
jg
cmc
sahf
add
cmpb
sbb
outsl
test
xchg
mov
sub
aas
xor
sti
lods
cld
add
repz
lock
cmp
mov
adc
aam
push
fidivl
lock
mov
or
push
jge
add
cmp
sti
lods
cmpb
and
in
pushf
pop
fiaddl
inc
fs
dec
out
add
subb
jg
test
fdivs
inc
ficoml
push
sub
fsubl
push
jo
leave
mov
adc
cmp
sbb
add
ret
sub
mov
sub
dec
loopne
mov
sub
jecxz
adc
je
cmp
je
xchg
jae
lock
or
and
or
int
pop
push
es
and
xchg
xchg
or
push
fcompl
jb
pop
jmp
jle
add
mov
dec
int
data16
xor
aas
mov
or
stos
test
stc
pop
add
push
divb
lea
sbb
xchg
adcb
add
out
les
jle
inc
orb
in
add
test
mov
push
adc
mov
mov
mov
xchg
pushf
mov
or
notb
je
push
rcll
pop
mov
stc
add
roll
loop
mov
in
mov
add
pop
mov
pop
in
mov
fistpll
testb
xchg
adc
andb
je
mov
stos
pop
inc
cmp
jb
mov
push
jb
sahf
push
mov
loope
jl
xor
pop
clc
pushf
cmp
je
lea
mov
lahf
popa
mov
mov
dec
mov
or
mov
push
lcall
and
jnp
jmp
mov
mov
add
rcr
test
cmp
mov
or
mov
outsl
in
adc
nop
lea
js
adc
push
cmp
icebp
adc
jge
sbb
loop
adc
idiv
fadds
lea
inc
xchg
inc
sti
sahf
mov
push
xchg
mov
xchg
adc
jbe
movsl
xor
cwtl
push
mov
ret
sbb
adc
jne
inc
jle
int3
fstl
lea
sbb
cmp
or
mov
test
cmp
popa
and
inc
inc
es
dec
jle
jns
jne
inc
jb
add
pop
fwait
mov
dec
push
ret
cld
testl
mov
ret
mov
adc
mov
bound
sbb
adc
mov
sbb
sub
push
add
xor
mov
mov
lahf
cmc
jge
inc
cmpsb
pop
cmp
int3
dec
cld
and
push
popa
and
pop
loopne
gs
movb
jne
fdivrs
lcall
roll
mov
mov
cmp
jne
or
data16
jl
iret
cmpsb
iret
cmpl
sbb
mov
add
in
xor
jns
add
add
add
or
jo
adc
test
jmp
dec
pusha
and
jae
sarb
shlb
cmp
je
fstpt
scas
ficoml
cmp
inc
mov
push
inc
inc
inc
jne
inc
bound
pop
movb
pusha
and
outsl
insb
mov
cmpsl
push
mov
adc
add
or
jbe
rcll
addb
xor
jbe
ret
into
out
ljmp
cltd
fmul
and
mov
idivl
idivl
je
inc
jle
push
stos
and
and
testl
mov
and
insb
push
push
xchg
push
add
mov
inc
shll
in
aas
lock
cmp
je
cmpb
cmp
jne
pusha
int
rolb
jne
add
cmp
addl
add
inc
inc
mov
fidivs
inc
repz
addr16
test
adc
mov
xchg
scas
pop
xchg
sub
sahf
add
xchg
cli
int3
xchg
inc
mov
out
icebp
adc
push
stos
out
mov
cmp
cwtl
or
imul
mov
ljmp
fmul
xorb
mov
rorb
adc
incl
xchg
and
js
inc
jo
cmp
inc
popf
adc
in
jne
and
pop
add
mov
nop
fldl
cmp
rclb
test
or
jmp
cmp
xchg
enter
je
or
je
push
pop
jne
shll
push
aad
sbb
rorb
push
not
adc
sub
push
stos
addr16
mov
pop
jmp
movl
xor
push
pushl
cmp
or
sarl
jns
or
test
push
dec
pop
imul
and
rcrl
and
cmp
mov
dec
cmp
jp
mov
push
lea
les
dec
dec
cmp
pushf
push
cmp
and
loop
inc
and
shrb
xchg
sub
xchg
sub
mov
lret
lds
inc
xor
pop
cs
cmp
divb
in
cmp
jb
dec
xor
and
adc
call
adc
xchg
inc
rclb
pushf
inc
or
mov
mov
incl
aaa
enter
jle
push
jge
or
add
addl
loopne
fcoml
mov
mov
and
cmpsl
mov
pop
inc
and
in
sub
mov
jg
push
push
ds
push
sbb
push
or
xor
inc
inc
push
and
add
push
push
inc
ret
and
bound
lahf
int
loop
pop
add
push
enter
push
rorb
adc
dec
adc
lret
dec
push
push
mov
cmp
dec
sub
cmp
xor
cmp
xorl
or
lret
xor
push
fisttps
dec
insb
filds
nop
je
push
add
add
adc
add
rcrl
push
push
or
insl
negl
inc
adc
cmp
mov
call
sbb
notb
pop
push
pop
test
int3
mov
jle
mov
subb
xor
xor
orl
push
ds
out
test
add
scas
aam
sbb
in
dec
ljmp
or
mov
cmpb
or
add
shl
or
add
jmp
or
jno
rol
ret
or
data16
adc
mov
or
sbb
dec
add
adc
pop
ret
adc
push
lds
jb
pusha
shrb
push
ffreep
and
and
sub
jle
or
ret
dec
xchg
into
pushf
push
mov
or
xchg
popa
test
add
or
clc
mov
daa
mov
cmp
cld
les
sbb
sub
adc
dec
adc
dec
inc
mov
sub
outsl
test
jb
js
add
mov
push
sub
out
cmp
xor
push
adc
sub
ljmp
into
fimull
nop
sarl
add
sub
mov
mov
push
imul
pop
add
ljmp
lock
mov
lret
sub
cmp
inc
sub
pop
adc
insb
into
xor
add
push
ficomps
pop
adc
js
pop
stos
or
cmp
sbb
loopne
fisubl
dec
pop
mov
in
xchg
and
adc
add
test
jne
xor
pop
or
pusha
sbb
jno
pop
cwtl
add
and
xchg
iret
pop
scas
fs
lret
int3
mov
sub
push
add
in
mov
sbb
test
push
add
jo
cmpsb
adc
ja
xor
add
bound
pop
aaa
or
or
push
inc
imul
xlat
dec
fildl
or
xlat
push
inc
push
pushf
cmpsb
or
mov
inc
and
mov
jnp
mov
pop
add
and
jo
push
and
dec
data16
pop
ret
xor
mov
js
xor
pop
jmp
mov
mov
loope
adc
aad
adc
add
add
sub
sbb
add
cmp
adc
fwait
and
dec
xchg
pop
and
repz
add
mov
add
loop
adc
sbb
or
sti
cmpsl
leave
mov
cmp
or
sbb
mov
scas
pop
jge
test
adc
push
sub
and
mov
jl
pop
push
lock
mov
into
cwtl
adc
and
stc
mov
xchg
rcll
jg
sar
mov
loopne
data16
movl
xor
or
inc
lods
or
pop
mov
lods
int
pop
repz
int3
dec
xor
push
xor
or
mov
cmpsl
mov
inc
mov
mov
sub
or
jecxz
pop
fdivrs
inc
jnp
pop
fsubs
int3
sbb
push
insl
or
or
hlt
in
inc
cmp
push
ret
rorl
lds
jle
mov
lea
lods
add
mov
inc
js
imul
jae
xlat
cmp
pop
dec
lahf
lods
fsubr
mov
cmp
test
push
push
or
pusha
jae
and
mov
push
push
test
sbb
mov
push
mov
push
sbb
mov
mov
mov
add
jecxz
jb
mov
push
sbb
ror
and
rolb
fsubs
clc
sbb
shll
pop
cmpsl
mov
enter
inc
lcall
ror
jg
and
xchg
outsb
sbb
les
inc
cld
or
or
or
xlat
push
mov
shrl
push
inc
push
outsb
daa
sub
ret
test
je
push
add
call
test
dec
roll
jecxz
in
inc
lock
orb
inc
mov
mov
mov
mov
inc
xorb
add
xchg
xchg
mov
in
mov
out
addr16
cwtl
inc
outsb
adc
movsl
adc
out
jecxz
or
pop
jl
cmp
pop
aam
aaa
imul
and
js
xchg
add
push
rclb
test
push
das
or
mov
rorb
and
testb
jecxz
inc
inc
add
sbb
inc
add
ror
dec
pop
inc
push
xchg
pop
scas
mov
jb
arpl
or
sbb
test
xchg
int3
dec
sarb
sbb
pop
push
pop
mov
sti
jle
rolb
out
mov
out
or
adc
cmp
jae
cmp
dec
push
xor
xor
add
add
xor
lahf
add
xchg
int3
add
imulb
out
repz
nop
xchg
popa
cmp
jge
and
mov
adc
mov
mov
and
adc
xor
dec
add
xrelease
fnstenv
mov
ss
lock
out
dec
push
iret
dec
jle
adc
mov
dec
xchg
jb
cmpsb
and
or
in
out
xchg
or
aam
push
addr16
mov
inc
mov
nop
push
sbb
push
push
pop
inc
test
cmpsl
repnz
pusha
add
out
andb
jecxz
and
push
je
mov
add
or
pop
ficoms
dec
xor
imul
lret
mov
mov
repnz
incl
loopne
xchg
dec
pop
leave
out
adc
or
pop
push
jb
sub
xchg
subb
pop
push
imul
mov
int3
xchg
or
cmp
push
pushf
fstpt
push
pusha
mov
add
jns
stos
jnp
push
cmp
and
xchg
add
roll
or
outsb
cmp
xor
fmull
push
icebp
enter
leave
add
jl
push
cmp
nop
add
adc
or
xor
and
and
push
sub
aas
cmpl
push
fsub
jl
rcll
push
xchg
ja
cmp
push
dec
adc
pop
jbe
lahf
xchg
movsl
xchg
push
mov
xchg
adc
mov
js
mov
mov
xor
jg
gs
mov
xor
sbb
cmp
sub
and
insb
loopne
mov
and
outsb
inc
cwtl
adc
mov
and
or
ret
jle
mov
add
xor
sbb
ds
xor
adcl
sbb
push
popa
xorl
sub
fisttpl
push
mov
cmp
sub
cmp
iret
or
and
add
inc
pop
adc
xor
pop
shll
cmp
mov
add
sbb
sbb
mov
sub
sub
and
sbb
sbb
pop
xchg
adc
xor
mov
and
loope
lods
pop
jae
or
cld
pop
test
add
push
sub
add
rcll
fidivs
adc
hlt
mov
xor
xchg
nop
push
adc
out
add
jecxz
sbb
mov
push
bound
xorb
xor
cltd
xor
dec
or
inc
loopne
or
adcb
js
fisttps
mov
setns
ret
and
fwait
in
jp
xchg
in
sbbb
mov
push
int3
fimull
and
int
mov
dec
jo
lods
mov
jne
jl
xor
add
repz
jp
out
cmp
jl
leave
cmp
pop
sete
filds
jo
loopne
ljmp
mov
repz
sbbl
adc
cmp
xlat
xlat
outsl
mov
cld
dec
xchg
inc
sbb
aaa
jbe
mov
and
call
jl
sub
es
movsl
push
mov
xchg
xchg
mov
test
mov
inc
andl
loopne
cmp
push
mov
out
sub
lcall
xchg
sub
inc
test
sub
fs
lea
jle
fcmovb
jmp
and
mov
pop
jo
cmp
sub
xor
jno
mov
insb
adcb
and
enter
scas
das
std
and
lock
sub
adc
push
mov
dec
scas
and
pop
bnd
test
lock
add
inc
add
add
mov
outsl
sub
dec
lock
jo
in
das
mov
add
xchg
insb
out
xchg
lret
sub
mov
inc
or
rcrb
xor
xchg
push
bndstx
jb
or
or
nop
dec
in
sub
sahf
cmp
inc
sbb
sbb
pop
dec
xor
xor
inc
rcrl
scas
dec
dec
cli
sti
push
jae
lods
test
add
jl
fstpt
mov
mov
sbb
lcall
pop
push
and
sbb
cmp
push
js
fdivl
cmp
mov
jl
inc
dec
push
addb
iret
mul
add
in
dec
xor
jb
mov
add
mov
and
xchg
sbb
pop
popf
addb
aaa
or
pushf
orb
addl
fisttpl
inc
fs
adcb
mov
xor
jnp
inc
push
lock
mov
loop
es
pop
cs
mov
mov
rclb
adcb
js
icebp
or
or
push
mov
dec
cmpl
rcr
cmp
cmpl
test
jnp
pop
repnz
cmp
je
out
add
stos
hlt
adc
sbb
xchg
dec
inc
sub
and
movb
xor
sub
outsb
cmp
cmp
sbb
pop
xor
dec
cmp
mov
xchg
mov
adc
and
xchg
insb
mov
and
popl
addb
xchg
and
in
es
dec
add
adc
push
pop
aas
imul
pop
aaa
mov
or
and
inc
xchg
inc
dec
push
cmp
fidivrs
add
je
loop
dec
inc
sbb
mov
jnp
mov
shll
or
add
test
fwait
clc
dec
mov
jmp
test
cmp
push
push
add
sub
aaa
jbe
lret
inc
int
rorl
add
lret
sbb
add
nop
xchg
cmpsl
mov
ss
popa
dec
bound
cmp
dec
adc
xor
mov
gs
push
cmp
and
and
and
arpl
test
add
mov
push
sub
cmpsl
jl
popa
push
pop
movsl
dec
out
push
mov
loopne
fistpl
push
inc
stc
sub
addl
inc
or
mov
das
sbb
adc
and
pop
and
sbb
arpl
mov
add
and
xchg
clc
push
dec
push
or
push
sbb
leave
inc
or
sbbb
xor
dec
cli
pop
add
pop
popf
js
ret
bound
lea
xor
ret
xchg
popl
fadds
stos
loope
mov
inc
cmp
aaa
push
jmp
sub
push
push
stc
stos
mov
push
or
push
stos
or
xchg
pop
dec
or
pop
je
andb
fcoms
mov
mov
bsf
xorl
cmpb
mov
out
xor
pop
ret
pop
in
sub
or
fnsave
add
or
pusha
inc
jbe
pop
or
push
mov
lds
gs
popa
inc
rorl
das
adc
sub
arpl
pop
cltd
mov
push
icebp
out
dec
jns
pop
and
in
pushf
call
stos
add
dec
add
dec
add
in
dec
sahf
add
cmp
dec
sahf
mov
mov
xchg
jp
stos
ja
mov
cmp
cwtl
mov
scas
push
or
arpl
mov
sbbl
inc
pop
jl
fimull
cltd
movsl
lock
lahf
sbb
push
jne
adc
mov
or
popf
adc
inc
sahf
pop
jae,pn
xor
mov
jg
inc
scas
pop
fs
push
cltd
pop
add
in
xor
ds
inc
mov
mov
sub
imul
push
sub
add
icebp
inc
sysret
jmp
inc
outsl
pop
addl
or
je
dec
xor
dec
into
inc
rcrb
pop
pop
and
push
bnd
xchg
sub
adc
and
or
add
mov
add
pop
aad
and
mov
pop
adc
outsl
push
hlt
lock
clc
xchg
movb
clc
add
push
pop
shrl
scas
mov
in
stos
inc
add
inc
cmp
xchg
sti
mov
pop
mov
push
fcmovbe
or
sub
mov
xchg
or
pop
and
add
pushf
mov
mov
or
push
lea
rcl
aas
cmp
pop
cld
cmpl
inc
mov
adc
xor
rcr
add
xor
xlat
push
mov
clc
stos
fucomi
das
lea
mov
aam
jb
or
dec
call
lock
loope
jge
js
cmp
je
decb
pusha
and
or
and
sbb
add
adc
mov
cmp
xchg
jge
orb
push
push
add
add
xlat
adc
or
or
xchg
inc
dec
data16
dec
sub
repnz
inc
xor
push
jmp
pop
fdivp
mov
jecxz
sub
cld
sbb
popa
cmp
pusha
mov
das
push
je
sbb
xor
xchg
inc
sub
or
lret
fsubrl
hlt
js
sub
dec
sub
xchg
filds
push
imul
push
repz
push
and
dec
and
add
inc
inc
pop
add
add
bound
push
xchg
into
push
sub
inc
add
and
outsl
adc
and
and
add
jno
popl
mov
mov
rclb
add
sbb
or
inc
mov
xorb
pop
jb
dec
mov
das
sub
sahf
lahf
mov
pop
mov
ss
lret
xor
dec
aad
mov
fsts
sub
xor
cmp
aas
jb
enter
pop
inc
adc
or
cwtl
sarb
dec
adc
push
shl
or
lea
mov
test
test
push
in
jecxz
test
fcomp
sarb
rol
shr
adc
push
push
push
aad
mov
cmpsb
add
xor
and
imul
or
outsl
sbb
push
pop
sbb
nop
lahf
or
add
pop
xor
push
out
mov
pop
sbb
jecxz
sahf
cmpl
dec
cmp
push
lcall
es
ret
mov
repnz
lods
cmp
pop
out
shlb
push
xchg
xchg
and
adc
pop
and
xor
out
stos
cmpsl
iret
repz
fucomi
paddb
sbb
inc
std
shufps
lds
or
cmpl
adc
inc
push
rcrb
push
repz
in
add
dec
and
pop
xchg
mov
pop
xor
inc
or
xlat
hlt
rolb
cmp
scas
insb
ljmp
mov
dec
or
adc
in
or
push
push
adc
in
adc
or
dec
je
shll
sub
jge
cmp
sub
xor
dec
pop
icebp
cmp
mov
add
jmp
sub
add
cmp
or
jg
sete
xchg
lea
je
cld
cmpl
out
mov
mov
inc
sub
inc
xor
mov
mov
cmp
cmpb
add
adc
add
push
mov
iret
dec
loopne
or
jne
cmp
je
sub
sub
mov
pop
push
sub
fnstenv
add
adc
fsub
rcrb
add
icebp
or
test
shl
mov
mov
aaa
mov
inc
jge
pushl
xor
mov
or
mov
pop
movsl
pusha
sub
push
clc
mov
jno
add
adc
pop
or
cmp
or
mov
pop
xor
and
pop
mov
lret
ror
add
mov
cvtps2pd
mov
lea
adcl
cmp
ret
mov
and
add
shll
jbe
and
ret
jne
js
sbb
cmp
or
or
bt
fs
mov
cmc
lods
mov
cmp
lret
in
xchg
insl
rcrb
add
lods
sub
mov
inc
rcrb
and
xchg
inc
incb
pop
lock
dec
sbb
aaa
mov
mov
add
loope
pushf
andb
scas
pushf
pusha
cmp
out
xchg
cmp
out
into
test
lea
jmp
or
adc
push
test
sub
adc
push
jle
add
xor
jle
addb
cmp
lods
add
and
xor
aad
es
mov
pushf
outsb
pop
cmp
ds
mov
pop
daa
rcrb
cli
or
dec
loopne
mov
sub
test
xlat
push
out
daa
lret
insb
inc
jl
mov
sahf
lcall
jno
pop
cmp
in
or
sbb
cs
push
aad
add
je
les
jmp
andl
push
mov
add
out
ljmp
insb
add
adc
push
inc
push
arpl
add
pop
mov
lods
mov
mov
jg
daa
sbbb
or
ret
insb
push
pop
es
mov
aaa
jp
mov
jbe
sbb
push
mov
mov
mov
push
dec
stos
push
pusha
lds
and
inc
dec
add
push
jge
cmp
rclb
mov
pop
enter
jae
mov
and
scas
lret
inc
mov
outsl
push
adc
dec
or
xlat
shrb
in
mov
sub
jne
sbb
and
add
push
sub
sub
addl
lret
xchg
shrl
inc
add
mov
mov
mov
or
mov
jle
call
sub
push
pop
mov
sub
mov
sahf
push
pop
aad
stos
adc
jl
add
xor
sub
fstps
and
adc
mov
in
push
pusha
mov
adc
add
inc
pop
mov
fisttpll
adc
or
and
and
imul
add
lods
mov
pushf
jo
jbe
jge
shrb
mov
aas
or
mov
mov
lods
xor
add
test
rcr
out
pop
lea
adc
and
jmp
das
and
imull
or
sbb
shrb
push
cmpsl
mov
cmc
inc
fnsave
scas
xchg
nop
jno
loop
add
add
push
mov
lods
movsl
daa
les
mov
call
adc
movsl
sarl
push
mov
dec
fsubrs
jl
movsl
and
sub
and
sub
cmp
cmpl
xchg
and
and
mov
sbb
jae
sbb
arpl
lea
dec
loope
and
pop
sub
je
jo
adc
popf
scas
bound
and
xor
flds
fmull
test
cmp
ljmp
jne
mov
fs
ret
ret
cmp
jl
mov
notl
fisttps
insl
or
stos
pop
ret
cmp
mov
dec
push
mov
add
push
push
add
in
shll
and
pop
orl
xor
sub
in
lods
movsb
and
dec
sub
pop
insl
dec
test
into
sub
int3
push
push
jp
nop
sbb
in
mov
add
repnz
lret
ds
roll
dec
jge
add
test
cli
sti
sarb
cs
sbb
jge
ljmp
call
adc
dec
sbb
mov
or
or
rcrb
or
dec
lock
sub
dec
sbb
out
cmp
mov
jmp
or
or
or
pop
cmp
or
and
xchg
pop
inc
mov
dec
jae
jne
mov
shld
and
aas
test
push
adc
push
cmp
jge
push
fcoml
push
pop
pusha
jle
mov
push
xchg
mov
fnstcw
jl
cmp
jg
mov
ret
push
xor
fcom
pop
jg
inc
fsubl
push
fcoms
lret
cmp
adc
add
cmpb
inc
add
mov
dec
jae
add
popf
xor
adc
insl
push
sbb
add
ja
xor
stos
out
jmp
mov
mov
jno
aam
push
pop
mov
jmp
adc
mov
ret
inc
xchg
ljmp
mov
sub
xchg
inc
cmp
call
xor
std
pop
pushf
leave
pop
jmp
ret
rolb
adc
or
sub
and
push
mov
lea
loopne
pusha
cli
adc
ret
mov
cltd
push
pop
mov
aaa
sbb
and
cli
push
pop
aam
cmp
clc
loopne
mov
clc
cmpb
jge
or
decb
sub
imul
out
cmp
pop
sub
iret
fiadds
mov
in
add
push
lds
add
inc
lret
loope
lahf
cmc
imul
or
adc
sti
add
hlt
mov
idiv
push
cmp
cmp
stc
mov
lahf
lods
xchg
pop
repnz
and
jle
imul
inc
insl
ds
and
mov
repz
mov
jmp
mov
call
jecxz
mov
cmp
cmp
mov
sbb
mov
mov
or
adc
xor
cltd
and
mov
xor
sbb
sub
pop
fstl
into
fnstcw
cld
jo
pop
ret
pop
movzwl
inc
das
add
jb
leave
adc
dec
add
jmp
mov
adc
pop
mov
jmp
lock
add
sahf
push
adc
nop
clc
dec
loope
push
inc
cli
dec
and
mov
mov
cmpsb
xor
adc
pop
gs
shrb
stc
cld
adc
insb
adc
fs
rcrb
ret
pop
das
sti
add
and
or
ljmp
fiadds
jae
dec
sub
or
adc
nop
inc
repnz
and
and
push
dec
sub
adc
adc
cli
pop
pop
data16
or
clc
inc
lea
aaa
mov
aas
push
push
aaa
pop
inc
iret
movsl
inc
test
adc
push
in
inc
outsl
sbb
cmc
icebp
rcll
rclb
fbld
dec
into
xchg
cmp
jbe
pusha
cmp
bound
cwtl
mov
mov
or
fidivrl
jp
paddb
jb
sahf
pop
jp
sbb
jle
int3
lock
jne
xchg
ljmp
mov
inc
add
lods
or
sub
sub
gs
rorl
out
add
dec
and
sub
add
adc
add
sub
jg
mov
dec
incl
pop
jo
fnstenv
js
jge
je
adc
popcnt
aam
roll
push
rolb
rcrb
mov
fidivrl
adc
cmpsb
add
mov
mov
loopne
dec
xor
jo
lea
mov
and
cmp
inc
cld
mov
lea
fnsetpm(287
add
adc
fucomip
xchg
add
jmp
pop
add
jne
inc
push
mov
out
push
sub
push
gs
pop
or
dec
cmp
nop
pop
add
or
jno
outsb
sub
dec
fs
or
sar
sub
cmpsb
adc
pop
pop
ret
jp
xlat
sbb
xor
sbb
mov
outsl
cmp
mov
adc
repz
mov
lcall
enter
xchg
add
stc
test
je
pop
sbb
mov
jg
dec
jmp
shl
neg
test
cmp
mov
jmp
inc
xchg
jl
adc
push
sbb
add
sub
out
mov
lock
or
shlb
movsl
jl
in
mov
insb
and
adc
adc
jp
mov
or
loope
mov
mov
cmp
push
or
sbb
int
fcomps
jbe
jmp
push
mov
dec
or
pop
notb
xchg
shl
icebp
pop
or
fisttps
cwtl
int3
push
pop
in
in
inc
inc
mov
loopne
push
fcomps
mov
pop
pushf
pop
adc
dec
sbb
loop
add
adc
aam
inc
add
insb
lea
jb
cmc
xchg
repz
or
mov
outsb
cmpsb
es
adc
lea
push
lret
and
enter
fistps
mov
pop
fsubrl
sbb
dec
mov
mov
push
fcoms
lds
test
sub
lods
or
in
je
xor
add
mov
add
cwtl
sub
jmp
pop
mov
xchg
sub
mov
scas
push
pop
lret
jno
imul
dec
dec
hlt
mov
fnstsw
ret
in
ret
and
jge
dec
in
lea
cmp
mov
aam
fadds
mov
mov
dec
mov
inc
lea
iret
ss
ljmp
xchg
and
push
loop
sub
aam
pop
out
loopne
xor
loopne
cmp
lret
or
ss
insl
testl
adc
add
jmp
cmp
aam
stos
push
subl
dec
adc
adc
xchg
out
in
xchg
sub
ljmp
push
push
inc
clc
push
add
mov
sub
mov
push
call
mov
cmp
cmp
add
repz
or
jo
outsb
xor
adc
add
ds
inc
nop
add
mov
dec
xor
lock
test
mov
gs
ja
and
lahf
or
sbb
jmp
ljmp
enter
shl
add
inc
add
mov
jecxz
ficoms
xor
add
push
enter
jp
fadds
or
jl
add
in
dec
inc
add
inc
fldcw
and
data16
sbb
cmp
leave
adc
jbe
roll
out
sbb
ja
mov
pop
dec
xor
shrl
jl
pop
lahf
out
out
mov
inc
loopne
add
pop
cmp
sub
dec
or
stos
jle
les
sub
inc
sbb
adc
mov
cmpsb
std
push
add
sub
aad
adc
sbb
rcrb
cld
adc
cmp
xor
divl
jo
add
and
xchg
add
xchg
nop
sbb
adc
adc
sbb
cmp
cmp
fsubs
push
push
popf
adc
push
fadds
sub
pop
xchg
cmp
add
arpl
mov
push
popf
xchg
xor
subl
add
jle
push
ret
cmp
out
addl
mov
jg
ret
sub
add
jns
js
lock
add
nop
adcb
loope
xchg
jbe
outsb
cmp
imul
fistps
lock
and
cmp
xchg
cli
adc
and
sbb
mov
pop
push
dec
fsubrl
sbb
sahf
dec
or
and
dec
test
inc
std
add
sti
jmp
adc
test
movl
sub
ret
xchg
or
cld
stos
out
mov
push
pop
fiadds
cmpl
cli
adc
xchg
inc
sub
sbb
mov
iret
lcall
loope
cmp
in
lret
and
xor
test
aad
ja
mov
sub
mov
jb
repz
rolb
jl
pop
aas
xchg
out
stc
fnstsw
andl
insb
sbb
in
add
add
mov
push
fdivs
cmp
xor
inc
push
add
pop
ss
or
pop
xor
loop
repz
lds
or
inc
mov
add
xchg
pop
cmp
fisttps
adc
test
xor
and
sub
xchg
mov
mov
mov
mov
push
lea
mov
fs
xor
inc
fcompl
mov
push
mov
int3
adc
sbb
sub
add
mov
aas
in
mov
lea
cmp
je
dec
in
stc
push
push
jne
iret
jmp
lea
mov
dec
dec
into
pop
in
inc
hlt
push
push
shrl
shll
inc
push
jbe
icebp
mov
jecxz
dec
fidivrs
dec
sub
cwtl
hlt
in
jecxz
jo
lock
hlt
mov
push
lahf
iret
popa
add
jns
mov
push
ljmp
int
and
cwtl
outsl
cmp
push
sub
loop
mov
ret
jmp
xchg
cld
adc
movsb
orl
pop
dec
pop
mov
imul
push
movsb
cmp
gs
loope
js
mov
xor
mov
or
dec
popl
add
add
xor
jne
or
fbld
push
subb
or
sbb
pop
pop
push
or
sbb
movsb
inc
rcl
add
or
mov
mov
fiaddl
adc
packssdw
and
out
rclb
push
and
push
adc
les
dec
and
push
ss
stos
adc
outsb
xor
negb
sub
inc
adc
in
enter
div
push
mulb
fisttpl
add
mov
mov
or
shlb
xlat
rcrl
mov
sub
ss
dec
into
push
xor
and
fmulp
add
pushf
push
cli
add
push
cmc
aad
cmp
inc
iret
sbb
dec
jbe
jns
xor
jne
add
or
loope
cs
add
jl
leave
jne
mov
push
in
test
stos
aam
pop
data16
or
in
sbb
push
and
popa
jb
imul
lret
data16
sbb
pop
and
xorb
cmp
sub
rorl
add
es
js
sti
push
xor
js
cmp
jae
add
inc
dec
sbb
pop
jle
loope
add
ljmp
add
push
adc
call
ret
adc
adc
xchg
xor
push
dec
jo
cmp
push
ss
ret
hlt
loop
or
push
mov
or
and
mov
daa
adc
gs
jp
fisubl
adc
push
or
sbb
inc
xlat
and
xchg
mov
enter
cmpl
push
jle
out
push
adc
jne
push
mov
cmpsl
mov
je
data16
and
scas
jo
dec
mov
ja
and
mov
mov
mov
xchg
xchg
adc
xor
xor
or
lret
in
inc
cmp
addl
push
mov
push
roll
mov
add
mov
mov
mov
cmp
mov
xchg
je
xchg
popl
adc
scas
in
inc
adc
xchg
nop
or
addb
push
cli
ret
pop
jb
pop
and
fwait
shrb
loope
jle
adc
test
jbe
mov
mov
xchg
jo
and
dec
fmuls
or
dec
in
sub
clc
pop
test
push
jns
int
and
xor
add
adc
xchg
arpl
or
adc
add
gs
inc
mov
dec
lock
sub
pop
mov
loopne
imul
push
or
pop
insl
mull
loopne
aaa
test
loopne
push
loope
test
and
sti
jmp
lea
sahf
push
and
mov
rolb
push
push
jmp
push
insb
sub
push
and
xor
fs
stos
inc
adc
pop
jo
jge
repnz
pop
lret
pop
mov
cmp
mov
mov
mov
jecxz
jnp
pop
call
out
dec
jne
jo
sbb
out
lahf
data16
add
sub
add
or
sbb
pop
add
or
and
pusha
mov
xchg
jg
mov
loopne
or
mov
jno
dec
subl
add
or
pop
mov
cmp
sbb
flds
mov
add
cmp
cmp
inc
fisubs
pop
ljmp
in
ljmp
sbb
sub
fmuls
push
mov
dec
inc
sbb
jae
add
mov
adc
pop
mov
jecxz
incl
add
icebp
nop
xchg
inc
sub
ret
or
jle
lret
add
mov
adc
push
addb
dec
mul
seto
cmp
clc
pop
pop
neg
or
cmc
xchg
push
or
and
lret
fildl
pop
ret
or
filds
ror
aaa
enter
mov
fiaddl
xchg
jmp
or
xor
movsb
or
sahf
or
rclb
jne
jns
add
pusha
push
xchg
outsb
dec
xor
inc
bound
jb
xchg
mov
push
mov
sbb
mov
or
mov
outsb
stc
test
sarb
test
sbb
fdivrl
pusha
add
adc
je
mov
cld
push
sbb
dec
and
popf
test
sbb
inc
adc
test
adc
sti
add
iret
jl
jmp
movb
stos
shld
test
add
jmp
mov
enter
push
mov
mov
mov
or
icebp
xor
sub
orl
mov
xchg
add
call
cmp
jae
xor
cmp
ja
ret
xor
pop
or
inc
es
loopne
dec
or
mov
push
sbb
lock
mov
mov
std
inc
push
sbb
andl
repnz
adc
and
decl
push
xlat
fs
add
ss
push
mov
mov
inc
mov
cmp
push
xor
push
and
inc
mov
and
psubusb
jno
sub
sbb
or
or
inc
adc
push
mov
stc
gs
push
add
mov
sub
adc
mov
pop
jl
lock
es
lret
pop
pop
mov
shll
add
inc
cmp
inc
xor
jbe
jae
push
push
je
xor
test
mov
rorl
mov
cld
add
clc
and
sbb
mov
cmpb
add
inc
adc
sbb
inc
dec
fsubl
jmp
add
dec
cmp
xchg
jmp
insb
mov
or
add
mov
mov
imul
inc
inc
add
sbb
cs
lret
sbb
daa
add
add
push
inc
sbb
pusha
add
mov
pop
add
jg
js
or
inc
or
daa
into
mov
xor
out
imul
or
fadd
in
int3
and
inc
mov
aad
xor
fsubr
inc
sbb
xor
lahf
xchg
leave
lret
dec
cli
pop
clc
iret
mov
mov
jbe
lea
insb
jle
pop
xlat
sbb
shrb
jmp
mov
and
testl
dec
inc
jae
xchg
in
sbb
scas
xchg
test
push
mov
leave
xchg
ffree
test
out
add
dec
jne
lea
add
daa
push
pop
and
mov
insl
sub
sbb
xor
mov
or
fcoml
mov
fdivl
orl
xor
loopne
add
lea
or
mov
rolb
fcoms
fcomps
push
push
call
sbb
scas
test
pop
sarb
insb
push
dec
imul
jmp
add
mov
add
mov
loope
inc
add
push
pusha
addl
jo
dec
clc
out
mov
jge
xchg
div
cmp
cmpsl
mov
mov
push
fadd
mov
dec
shrl
cmp
fistpll
sub
xchg
lds
push
or
and
pop
and
mov
cmpb
lock
pop
pusha
inc
enter
add
loopne
aam
jmp
iret
mov
xchg
add
repnz
jo
fldt
or
dec
mov
lods
shrl
mov
jg
add
jns
or
push
push
test
imul
mov
shll
test
add
mov
adc
inc
test
inc
jb
arpl
adc
and
pop
test
movsb
dec
je
pop
add
stos
and
xchg
add
sub
or
mov
mov
loop
repz
iret
dec
inc
inc
fadds
add
insb
jb
test
add
add
xchg
testb
lret
sub
sbb
int
mov
add
pop
jmp
sti
push
xchg
mov
insl
loope
mov
add
mov
test
sbb
lea
jbe
mov
inc
push
sbb
push
mov
push
lret
negl
inc
aas
dec
mov
into
push
pushf
adc
push
fsubrs
pop
js
adc
xrelease
and
mov
rcll
push
jne
mov
sarb
ret
xchg
or
inc
sub
lock
jp
cmp
jb
aam
clc
mov
in
testb
sub
push
mov
insl
mov
xchg
fisubl
push
push
fsts
je
mov
add
add
test
mov
adc
loopne
cmc
push
ja
mov
je,pt
test
push
les
fldpi
pop
jns
mov
mov
xor
inc
shrb
inc
orl
repnz
ret
sub
fidivrs
push
add
and
mov
cmpsb
in
outsl
std
jmp
or
cmp
sub
jle
push
or
mov
cltd
sub
jmp
sti
leave
call
dec
xor
push
mov
rorb
fnstenv
jb
sbbl
cmp
addl
jnp
bound
sub
add
or
pop
setge
jmp
pop
push
cmp
sub
call
cmp
jae
push
imul
ret
cmpsl
rcr
jmp
adc
roll
popa
add
inc
pop
and
inc
jmp
repnz
decl
jg
jae
lea
push
cmpb
jne
cmpb
jne
dec
rep
rol
add
sarb
lock
ljmp
neg
and
loop
add
sbb
out
out
int
pushf
sbb
or
cmp
push
xchg
pop
cmp
or
das
mov
push
jo
add
pushf
jl
cmp
pop
or
test
lods
sub
sub
fsubs
inc
push
push
xor
and
stos
hlt
or
cli
adc
jmp
mov
jp
jmp
xor
pusha
bound
jecxz
jmp
mov
push
cs
sti
push
ljmp
mov
jmp
mov
mov
inc
adc
outsb
addb
cmp
sub
cmp
jnp
inc
or
xor
cmpsl
stc
mov
ds
push
loop
push
insb
and
sbb
test
jne
pop
push
mov
insl
jne
adc
arpl
imul
imul
mov
or
dec
add
inc
and
mov
inc
add
orb
xchg
add
xchg
jns
fdivr
jle
movb
pusha
xlat
and
rcl
or
ljmp
jne
stos
jmp
nop
jp
loopne
popw
inc
mov
sub
sub
xor
scas
jne
mov
sahf
xchg
xchg
jmp
bnd
mov
test
je
call
add
ret
push
jae
jo
mov
jecxz
sub
mov
pop
push
sbb
inc
push
popa
test
sti
leave
ja
insb
push
lea
sbb
jne
dec
ret
fcomip
notb
or
xchg
or
cmp
lods
mov
sbb
or
push
fildl
pop
push
cmp
add
jmp
push
test
mov
sub
cmp
mov
lea
cmp
cmp
inc
mov
cmc
add
ljmp
sub
xchg
pop
push
lea
pop
test
lods
movsb
add
jge
into
scas
push
ret
in
lea
scas
push
mov
mov
inc
sub
jnp
inc
lea
xor
lock
push
loop
sub
mov
adcb
push
add
push
xchg
ja
negb
add
jne
push
orb
push
inc
bound
test
or
push
ficomps
imull
xchg
push
sbb
adc
xchg
push
lea
jmp
add
pop
test
aaa
sbb
sub
inc
jge
mov
mov
dec
je
sub
sbb
mov
add
or
rolb
inc
js
push
rcl
push
fnstsw
xor
or
jo
clc
push
ret
rorl
lock
mov
ss
cs
sbb
pop
lods
movhps
pop
pop
jno
push
xor
or
pop
xchg
or
test
or
mov
outsl
xorb
push
or
adc
repz
push
ret
sub
add
or
jge
mov
test
rclb
adc
mov
stos
or
pop
fadds
pop
jae
xor
dec
or
add
cmp
sbb
or
or
add
xlat
sbb
pop
push
clc
sub
adc
shlb
cmp
xchg
out
cld
xchg
adc
cmp
mov
jp
jle
push
hlt
adc
push
lahf
xlat
jne
cmpsb
push
dec
or
je
fwait
inc
mov
jbe
mov
pop
test
xor
pop
inc
insl
daa
or
xor
stos
and
cmp
jns
ret
push
cmpsl
push
and
ja
sbb
fmuls
mov
and
popa
sub
push
cltd
inc
jmp
imul
orl
int
sbb
push
adc
lock
sarb
and
add
sbb
mov
cmpsl
mov
cs
outsl
mov
or
push
fwait
pop
test
out
adc
add
and
push
and
and
and
sub
push
add
cmp
mov
add
test
jecxz
cmp
sub
or
bound
inc
or
xchg
add
mov
add
inc
ds
push
leave
push
inc
and
jmp
je
cld
mov
jno
dec
outsb
pop
xchg
inc
in
jecxz
lahf
ret
fsubp
sub
rorb
std
leave
dec
mov
jbe
mov
rorb
je
mov
sub
test
mov
jl
mov
adc
lods
add
mov
sar
fisttpl
pop
pop
js
or
mov
and
adc
xchg
loope
ret
lahf
cmpl
mov
and
push
loope
nop
cs
push
gs
gs
lock
inc
mov
je
lods
movsb
inc
inc
sub
cs
loop
jle
adc
mov
hlt
js
fdivp
inc
sarb
sub
push
ss
jmp
sarb
adc
adc
test
aaa
in
adc
adc
sub
jmp
lods
push
es
dec
outsb
add
cmp
xchg
mov
cwtl
adc
adc
mov
mov
inc
sbb
or
pushf
mov
pop
lahf
inc
pusha
inc
cli
outsb
or
cltd
inc
or
adc
leave
mov
test
mov
stos
lds
xchg
dec
or
rcrb
adc
push
lret
adc
xchg
adc
aam
dec
or
mov
enter
pop
add
fs
cmp
mov
xchg
mov
push
mov
into
in
mov
cmp
dec
stos
push
cmp
sahf
adc
fldl2e
xchg
or
pop
add
and
fisttpl
pop
je
js
aas
add
add
mov
movsb
sub
and
cld
add
xor
add
add
and
shrl
test
xor
sbb
mov
mov
mov
shlb
lret
popf
punpckhbw
adc
xchg
mov
push
fsubrs
pop
dec
fstl
mov
out
inc
push
xchg
cmpsl
xchg
js
inc
xchg
mov
jbe
fcmovnbe
or
push
jl,pt
push
jg
cmpb
jne
inc
lds
jne
dec
repz
or
or
inc
cmpsb
in
adc
das
xor
push
sbb
daa
rorb
mov
or
popa
xchg
pop
sar
fwait
rolb
popa
iret
cld
inc
add
mov
cld
adc
and
push
sbbl
mov
mov
pop
xor
push
dec
bnd
sbb
push
stos
imul
ret
pop
sbb
jmp
rorb
xor
jo
xchg
leave
jnp
jmp
inc
cltd
movb
inc
or
dec
lcall
je
jbe
inc
mov
inc
inc
add
test
test
xor
push
enter
add
or
xor
xchg
push
pop
in
fbld
xchg
popf
mov
push
lcall
push
call
pop
xor
jmp
xchg
lahf
fs
jbe
dec
xor
mov
or
and
add
cld
shlb
push
mov
push
mov
popf
subl
xchg
jp
lea
test
cmp
jne
sbb
shrb
push
push
xor
push
test
sub
rorl
lock
rcr
adc
js
mov
inc
cmp
or
movsb
cmp
fs
arpl
lods
jne
nop
pop
pop
jno
mov
cmp
mov
cmp
js
push
xor
lahf
flds
fs
mov
lods
xor
dec
popl
mov
lods
test
sub
test
fs
cmp
adc
sub
sub
cmpsl
orb
sub
ret
leave
enter
adc
push
cld
add
pop
push
push
sub
dec
xchg
sahf
rcll
and
imul
push
push
je
icebp
test
inc
pusha
and
pusha
adc
decl
fsubrs
xchg
or
xchg
pop
pushf
push
inc
fnstsw
stos
sarb
jne
cmpl
xor
lea
call
jmp
fldenv
enter
xchg
add
pop
ljmp
mov
les
test
lock
xchg
sub
add
pop
and
loopne
xchg
pop
orl
outsl
rorb
sbb
lahf
or
add
ret
mov
adc
mov
sbb
inc
fimuls
movsb
sbb
sbb
pop
inc
sbb
hlt
loop
mov
mov
xor
xchg
loope
inc
clc
mov
popf
pusha
or
in
xor
jle
inc
and
sbb
dec
fwait
inc
adc
ret
xor
pusha
pushf
xchg
fst
jmp
test
dec
xor
inc
insl
mov
les
push
mov
aaa
nop
icebp
or
jne
sarb
pop
movsl
adc
js
out
or
test
dec
pop
jl
arpl
sub
mov
adc
aas
nop
pop
nop
push
sahf
and
ret
adc
je
xchg
daa
imul
mulb
adc
push
test
and
pop
inc
int3
pop
sbb
push
cs
xchg
fbld
cmpsl
push
adc
mov
push
add
lret
in
sbb
inc
inc
add
sbb
or
mov
xchg
leave
xchg
sbb
inc
clc
adc
xchg
cmp
inc
adc
test
cmp
mov
loopne
pop
int3
xor
sub
xor
nop
mov
jns
adcb
pusha
add
xchg
es
lea
shll
xor
adc
into
popa
test
add
jno
add
aad
jb
xchg
cmpsl
add
daa
js
jbe
pop
incl
inc
mov
inc
sbb
sbb
cmc
js
fcoml
mov
flds
aad
pop
add
push
inc
enter
mov
xor
aaa
dec
loope
arpl
mov
rcll
xchg
mov
cmp
inc
sbb
add
xor
jle
cmp
enter
pop
cmp
and
mov
dec
cmp
pop
inc
push
mov
mov
mov
les
adc
aas
mov
or
mov
and
cwtl
add
adc
push
push
pop
pop
ret
js
xchg
mov
dec
or
dec
ss
adc
xor
dec
pop
mov
and
cmpb
add
mov
xchg
sub
nop
add
adc
add
adc
xchg
or
or
inc
push
add
and
inc
movsl
sbbb
jbe
add
sbb
pop
leave
xchg
sub
mov
add
rcrl
and
sub
cmp
adc
mov
icebp
push
push
rclb
xchg
sub
push
xchg
mov
push
test
push
inc
imul
adc
add
inc
or
ret
nop
xchg
inc
fisttps
adc
ret
movb
mov
mov
ja
adc
imul
dec
xchg
add
adc
mov
push
push
mov
push
xchg
cwtl
add
or
shrb
es
and
sbb
pusha
popf
loope
mov
mov
into
push
mov
mov
cmpb
sbb
inc
iret
sbb
fmuls
pop
adc
orb
and
test
loopne
jo
int
pop
pop
divl
xchg
lea
add
test
mov
mov
pop
dec
call
push
push
pop
xchg
lcall
or
jl
dec
mov
adc
add
enter
push
xor
pop
aaa
mov
dec
rcrl
jbe
push
xchg
and
enter
cmp
repnz
sub
jge
inc
loopne
add
and
mov
subl
cmp
fcom
dec
and
movsl
mov
or
test
push
sbb
jmp
jnp
mov
or
int3
rclb
push
or
aad
mov
rcl
mov
enter
adc
sbb
int3
push
inc
std
dec
ss
sbb
pop
cmp
push
push
adc
ljmp
lods
insl
and
into
inc
push
lsl
les
push
mov
cmpsl
push
ret
rorl
inc
sbb
xchg
shl
int
mov
jne
cmp
sbb
xor
cld
adc
push
aam
cmp
push
adc
movsl
push
mov
jl
jno
cs
and
test
sbb
sbb
repnz
and
mov
sbb
imul
je
cwtl
adc
mov
mov
inc
jl
test
je
mov
push
push
test
sahf
rolb
dec
lcall
mov
mov
hlt
jne
cmp
aaa
sbb
mov
aas
push
sbb
cmp
pop
les
mov
movsb
stos
dec
std
mov
push
push
sbb
cld
pop
scas
pusha
mov
sbb
add
mov
shll
clc
pushf
or
fimull
jl
push
nop
clc
sub
sti
xchg
test
mov
mov
push
mov
jle
xor
mov
sub
cwtl
pushf
inc
push
sbb
add
or
add
and
push
fisttpl
fisttpll
je
cltd
add
movsb
inc
add
in
sub
cs
stos
sbbl
and
mov
in
lahf
mov
add
jne
inc
xor
and
loop
addl
add
adc
add
add
aad
xchg
mov
mov
out
xor
mov
lods
outsl
pop
les
rcrb
jae
fsubl
into
dec
or
xchg
daa
aam
je
pop
rol
push
das
inc
pop
mov
lcall
add
in
int
cmp
sub
xor
cld
int3
sub
and
mov
insl
add
inc
sub
xchg
pop
mov
mov
cld
cmp
xor
add
and
xchg
es
jns
add
jmp
aas
test
push
call
and
sbb
adc
or
push
add
mov
aam
dec
ret
in
push
call
fisttpl
sbb
test
pop
inc
clc
ficoms
or
xchg
adc
int3
and
lock
push
xor
dec
enter
fs
ret
xchg
adc
add
sbb
addb
pusha
dec
inc
test
or
adc
rclb
push
inc
push
movsb
fwait
les
popf
push
js
cmp
subb
sbb
xor
test
adcl
add
jns
adc
imul
pop
aam
add
push
push
mov
pop
sbb
sbb
or
call
xchg
and
cmp
adc
push
pop
test
and
sub
sub
dec
xor
and
push
and
in
mov
data16
mov
out
adc
sbb
sub
mov
or
das
adcl
cs
sbb
imul
push
clc
inc
enter
push
leave
aad
jae
aad
scas
xor
inc
mov
stos
adc
push
mov
das
pusha
pop
xor
add
cmp
mov
in
rcrb
xchg
rcrl
movsl
decb
pop
mov
lods
adc
mov
sbb
cwtl
sub
xchg
ljmp
add
add
stc
jb
sbb
add
cmp
jae
nop
ss
pop
icebp
pop
add
fwait
add
sbb
je
cmp
loop
add
sub
push
push
dec
je
sub
sbb
rolb
pop
push
cli
mov
pop
add
dec
cmp
je
je
add
das
xor
dec
dec
inc
mov
jmp
inc
add
cmp
jl
pop
incl
cs
mov
mov
fbld
popf
pop
sbb
mov
or
sbb
test
pop
or
movb
nop
sub
mov
mov
shll
jbe
enter
loope
inc
xor
mov
sub
ljmp
add
or
inc
mov
add
inc
sub
movsb
pop
mov
cmpb
pop
jb
inc
fadd
mov
or
add
add
test
cmp
add
roll
sub
mov
adc
cmp
fstpt
inc
add
js
jno
sarl
sub
inc
fisttpll
aas
cmc
mov
mov
inc
push
mov
ss
fisubl
lcall
xchg
sub
pusha
inc
test
add
mov
xor
into
icebp
test
mov
inc
pop
add
dec
or
sbb
or
mov
loop
in
adc
push
push
dec
or
mov
xor
pop
clc
mov
dec
ljmp
insb
mov
push
popa
rcr
add
dec
or
and
add
xor
cmpb
addl
inc
pushf
jge
enter
stos
sbb
andps
adc
iret
add
adc
and
lea
aas
in
pop
or
lcall
movsb
push
daa
sbb
sets
or
sbb
add
or
iret
lods
call
dec
or
ror
rcrb
push
push
mov
sub
loope
adc
jmp
pop
xchg
test
xorl
inc
lock
jl
jge
sub
pop
and
mov
inc
hlt
adc
dec
stos
pusha
jmp
fucomp
jb
pop
sub
xchg
in
subl
mov
add
inc
in
add
add
sbb
pop
add
push
lds
sbb
sbb
and
push
iret
xor
bound
mov
push
scas
repz
sub
lock
push
cmp
ret
xor
dec
aas
inc
pop
mov
add
sbb
in
push
mov
repnz
xchg
insb
jo
add
push
mov
push
dec
loop
rolb
add
xchg
mov
push
subl
mov
call
jae
push
movsl
loopne
dec
adc
cmp
leave
xor
cmp
sub
pushw
shrl
bound
cmp
sbb
add
mov
pushf
sbb
sbb
aaa
dec
fsubrl
adc
mov
dec
fimuls
jno
and
sti
adc
or
leave
jae
mov
and
sbb
xchg
out
pop
add
or
das
adc
add
movsl
push
xor
test
inc
add
and
enter
mov
add
sbb
pop
adc
sarb
shll
xchg
add
add
sub
dec
sbb
sbb
pop
push
push
nop
lret
xor
add
or
xchg
cmp
cmp
add
add
inc
push
sbb
push
dec
syscall
nop
lret
adc
insb
sub
adc
mov
and
mov
bound
mov
sbb
or
enter
xchg
mov
cwtl
pop
add
dec
mov
or
fsubl
dec
adc
sub
pop
lods
and
sbb
sahf
in
popa
add
sub
sbb
imul
adc
pop
push
cmp
add
movsb
or
sub
or
aad
pop
jbe
sub
mov
push
sbb
push
dec
jge
mov
dec
pop
dec
sbb
pop
and
push
int3
int
rcrb
adc
jp
pop
and
xor
or
aaa
lods
cmpsl
imull
insb
setne
mov
cmovbe
dec
lcall
lcall
mov
lcall
xor
sub
sbb
push
and
and
dec
lcall
mov
lcall
or
inc
les
lock
sub
mov
xor
cmp
leave
dec
dec
mov
sar
add
add
and
inc
les
in
sub
push
xchg
test
test
clc
and
mov
sbb
cltd
sub
pop
xchg
mov
cli
imul
dec
and
sarb
or
arpl
setb
or
orl
sbb
add
push
push
je
dec
clc
int
and
je
lea
dec
xchg
sbb
sbb
xchg
cmp
sbb
lock
xor
inc
in
test
aas
inc
and
aam
hlt
or
xor
sub
cmpb
dec
add
popf
pop
mov
add
inc
inc
or
gs
sub
inc
roll
movl
sbb
inc
jb
jb
sbb
fcoms
orb
xor
sbb
ds
add
push
sbb
cmp
dec
pop
mov
test
jl
inc
aam
or
push
mov
sub
mov
dec
imulb
sbb
mov
testb
or
call
sbbb
std
add
xchg
daa
jmp
test
pop
iret
cmp
mov
gs
jp
test
and
xor
cmpsl
or
hlt
pop
lock
stc
jp
xor
cmp
xchg
in
mov
sbb
repnz
xchg
sub
push
mov
add
add
sbb
inc
xor
inc
rorl
or
adc
and
or
cmp
dec
push
sti
add
mov
push
or
insb
or
sub
cwtl
fdivrl
mov
xor
les
mov
mov
xor
cmp
add
jl
je
push
andb
stos
sbb
inc
pop
dec
add
subl
sub
xchg
scas
xchg
inc
sub
adc
clc
add
and
jg
sti
mov
pop
lea
push
push
inc
xchg
nop
push
inc
add
fildl
out
push
pop
fwait
mov
lds
cmc
add
ret
cld
inc
mov
cmp
adc
mov
fs
test
int3
mov
popa
sub
adc
das
pop
and
xchg
test
addb
or
cmp
jne
push
icebp
xor
jge
andb
or
call
inc
push
sbb
dec
fnstsw
fmuls
dec
in
lods
adc
inc
mov
shll
hlt
dec
cmpsb
iret
jmp
dec
xchg
cmpb
push
xlat
lods
call
hlt
mov
loope
or
loopne
loopne
push
push
mov
inc
faddl
dec
in
push
and
inc
in
js
pop
push
rcl
cmpsl
jecxz
xor
out
test
jne
add
ss
lods
or
pop
and
fst
test
fcom
rorb
push
push
lcall
call
insl
fmul
int3
add
add
iret
xchg
in
cmpsb
movsb
push
inc
dec
hlt
add
and
add
mov
jp
iret
cmp
lret
lea
add
jg
loope
fists
mov
or
nop
js
movb
aad
adc
aaa
lea
adcb
dec
jo
mov
cmp
fsubr
adc
je
pop
lahf
orl
or
mov
roll
stc
fnstsw
movsl
or
call
or
testb
test
fdivl
sbb
jge
jae
push
lsl
jmp
mov
fs
sub
les
mov
add
aad
jno
cs
xchg
je
mov
pusha
pop
mov
test
repz
push
shrb
inc
push
in
sub
push
and
mov
cmp
xor
rolb
cmp
add
add
jo
push
jns
add
and
add
push
and
cmpl
dec
and
roll
sub
into
jnp
shrl
mov
push
roll
loopne
xchg
or
and
xor
sub
jne
mov
lret
andl
ljmp
shll
cmp
or
push
lds
adc
sub
and
and
sbb
push
cvttps2pi
dec
adc
mov
loop
xchg
sbb
subl
dec
cmpsl
mov
dec
in
insb
xor
fs
movsl
jns
hlt
fs
cmp
lods
addr16
xorb
and
fdivl
jl
je
inc
pop
xlat
ja
and
xchg
fimuls
push
dec
mov
movsl
addl
out
movsb
test
adc
js
push
push
nop
scas
add
and
nop
dec
mov
push
sub
lcall
test
iret
add
inc
push
xchg
mov
inc
pop
dec
pop
xchg
fiaddl
push
add
pop
jo
cmp
push
cmp
or
sbb
mov
imul
jle
in
inc
sub
push
jno
dec
aaa
jne
inc
add
dec
push
add
xchg
scas
and
jle
dec
or
fs
pop
dec
es
xchg
pop
sbb
sbb
sbb
push
sub
nop
sbb
xchg
in
push
daa
lds
xor
lret
xor
pop
and
push
rolb
in
cmpsl
pop
clc
push
arpl
xor
fcmovnb
push
push
push
xchg
dec
rclb
pushf
pop
add
sbb
or
sbb
sbb
adc
sbb
sbb
xorb
lahf
jns
lret
jo
inc
filds
cmp
mov
adc
dec
jb
repnz
pusha
push
sbb
enter
pop
pusha
scas
es
push
pusha
movb
pop
aas
push
xchg
pop
pop
lea
data16
lea
push
adc
cmp
sub
mov
adc
das
jmp
pop
lea
jo,pt
pop
loop
mov
mov
xor
insb
push
and
dec
mov
nop
push
dec
jmp
xorl
jnp
inc
or
inc
test
lea
jo
sbb
sub
test
and
imul
push
or
mov
push
imul
repz
cmp
es
xlat
mov
cs
stos
dec
mov
cmp
xchg
hlt
inc
dec
cmp
cs
xor
push
sub
ljmp
adc
cmp
lods
mov
dec
cmp
pop
sbbb
push
clc
jl
mov
pop
aam
pop
and
inc
stos
inc
mov
adc
mov
jnp
xchg
dec
xchg
call
pop
or
add
push
call
dec
or
es
sbb
in
es
cltd
pop
and
add
push
push
stos
mov
sub
lods
sub
push
inc
sbb
dec
fstpl
or
cmp
ror
mov
js
inc
mov
pop
lods
xchg
call
orb
stc
pop
add
fsubl
sbb
xchg
push
mov
adc
xor
call
mov
adc
nop
ret
inc
xchg
cmp
je
or
adc
jns
inc
add
mov
movsb
jns
jmp
ret
cmp
adcb
sub
dec
lcall
pop
enter
xor
jmp
adc
inc
and
imulb
imul
and
jge
mov
hlt
inc
mov
add
adc
fisttpl
pop
lcall
jnp
inc
popl
cmp
cmp
ds
ficoml
pop
incl
inc
mov
mov
xchg
rorl
das
push
bound
inc
aas
mov
or
loopne
and
mov
loopne
test
rorl
mov
and
push
adc
inc
fcmovnbe
pop
sub
mov
push
outsl
ja
or
or
pop
mov
mov
sub
mov
lock
mov
mov
imul
test
sbb
mov
adc
andl
dec
xor
fwait
nop
push
inc
jno
inc
and
add
movsb
out
mov
lds
into
xchg
sbb
std
add
push
setae
mov
push
xorl
test
mov
nop
popf
inc
push
and
and
dec
jmp
inc
mov
test
ffreep
mov
pop
mov
cmp
aad
scas
add
daa
push
pop
dec
std
jmp
cld
inc
xchg
sub
xor
and
mov
mov
jbe,pn
into
xor
or
pusha
add
sub
jecxz
xor
add
sbb
and
ror
push
ret
sahf
pop
cwtl
add
mov
sahf
mov
push
sbb
xor
push
adc
aam
add
lret
or
ret
push
and
fiadds
sti
xchg
adc
jmp
add
jae
js
int
jecxz
sub
cld
pop
bound
or
faddl
inc
packssdw
sbbl
xor
cmp
sarl
push
or
jp
daa
dec
add
ret
notb
xchg
sub
dec
popf
add
pusha
inc
je
push
inc
mov
aam
mull
leave
roll
mov
in
add
ljmp
mov
or
mov
or
xchg
int3
mov
add
jo
sub
addr16
or
test
add
and
mov
shrb
sub
and
in
pop
repnz
push
adc
add
cmp
enter
adc
xchg
pop
push
push
je
inc
push
arpl
int
loopne
cmp
inc
jg
pop
les
dec
repnz
iret
ret
inc
adc
jb
pop
inc
push
push
add
mov
test
dec
push
invlpg
add
inc
add
sbb
int
outsl
nop
pop
nop
adc
inc
rcrb
sbb
out
leave
push
jmp
dec
sbb
add
sub
mov
dec
xchg
mov
jnp
movsl
inc
pusha
sub
jg
mov
dec
popf
and
sbb
je
jo
mov
fstpt
or
pop
and
inc
lods
push
xchg
xor
sub
jle
hlt
jp
cmp
pusha
outsb
xchg
mov
subb
xchg
and
sub
nop
or
or
data16
in
jns
sub
je
jl
push
inc
adc
jns
push
data16
je
loopne
xchg
or
xor
xchg
push
inc
xor
mulps
xor
dec
je
adc
jmp
sbb
jae
mov
dec
pop
inc
fs
lahf
test
jp
sub
imull
pop
add
jmp
andl
xor
inc
fisttps
sarl
mov
les
mov
mov
xor
js
mov
xchg
je
mov
sbb
orl
mov
add
test
sub
sbbb
cmp
inc
xor
lods
xchg
sbb
xchg
out
mov
lea
inc
push
mov
push
push
push
fldl
pop
or
mov
mov
push
imul
xlat
and
ds
xchg
cmpb
add
imul
aaa
lods
insb
aam
dec
inc
or
cmp
adc
push
dec
pop
xchg
icebp
dec
add
test
int3
movsb
fisttps
add
test
arpl
adc
cmpsl
cmp
and
es
lahf
add
lahf
ljmp
add
out
sub
data16
dec
cmpsl
cli
adc
inc
addr16
fdivl
lret
xchg
push
bound
xchg
nop
sbb
sbb
das
add
faddl
xchg
pusha
sbb
mov
iret
aam
pop
rcrb
dec
add
jo
mov
mov
adcl
mov
dec
cld
push
mov
inc
sub
test
xor
and
jne
rcrl
sbb
sti
gs
call
loope
dec
cmp
cmp
leave
mov
test
add
mov
fs
xor
cmp
and
daa
mov
popa
add
gs
mov
gs
sub
sbb
xor
dec
cmp
mov
lock
adc
test
inc
aam
daa
push
cltd
sbb
fs
insb
jmp
fisttpl
xor
jns
push
das
or
shr
fs
sub
int3
adcl
add
dec
test
inc
cmpb
lahf
xchg
pushf
lods
dec
push
or
ret
xor
add
jbe
inc
insb
ds
xor
pop
fcmovnb
mov
push
pop
es
xchg
sub
scas
jg
cli
jnp
push
push
movsb
shrl
out
mov
fildl
mov
jmp
or
inc
mov
loopne
dec
rorl
or
add
push
push
pusha
mov
pusha
add
adc
dec
pop
aaa
int
or
cltd
repnz
mov
aaa
push
dec
jecxz
fstps
fwait
popa
dec
sub
loopew
repz
and
dec
push
pop
adc
add
rcrl
inc
push
or
xor
cmc
or
pusha
cmp
cmp
mov
sub
xchg
and
mov
push
xor
sub
arpl
inc
cmp
cs
or
pop
nop
pop
inc
cmp
mov
push
xchg
sub
fsubl
pusha
cmp
xor
jbe
stc
mov
push
lret
add
mov
push
or
test
push
loope
in
push
inc
sbb
xchg
add
mov
loope
test
es
add
pop
rclb
in
shlb
mov
dec
add
ss
sbb
cmpsl
pop
adc
inc
pushf
push
mov
rclb
test
push
push
xchg
lock
lock
add
mov
repz
aaa
or
push
dec
pop
jmp
mov
push
and
addb
push
loope
mov
and
and
adc
ss
ds
sub
mov
je
push
dec
clc
subb
push
pop
stc
and
rolb
xor
add
and
fwait
inc
aaa
testl
sub
fisubrs
mov
sub
fs
pop
lea
cmp
push
test
sbb
dec
je
loop
in
pop
sbb
cld
imul
imul
nop
sub
cmp
jae
mov
test
mov
or
and
add
test
sbb
jb
test
dec
add
and
push
mov
inc
cwtl
pop
dec
mov
push
pop
std
dec
dec
and
adc
push
add
mov
mov
pusha
pop
les
and
adcl
aam
mov
adc
push
movsl
cmpsl
inc
add
pop
mov
pusha
stos
int3
add
in
adc
hlt
pop
adc
aas
push
push
push
xchg
xor
popa
sub
lods
xchg
lods
es
inc
sahf
sub
out
out
sub
adc
in
dec
lock
dec
sbb
andl
dec
lds
dec
add
sbb
inc
nop
xor
xor
mov
hlt
jne
cmp
adc
insb
data16
inc
inc
push
push
sbb
xchg
pop
add
pop
outsl
mov
adc
outsl
in
and
sub
add
or
dec
sbb
cs
test
fidivrl
add
pusha
pushf
setge
xchg
adc
cmpsb
aas
or
lock
mov
in
shrb
pop
adc
ret
test
loop
adc
sti
jnp
inc
sub
pop
cmp
lret
mov
push
jns
out
mov
rolb
and
cmp
sti
call
mov
inc
insl
adc
jb
add
mov
test
sub
xchg
mov
jp
jle
fisttps
test
xor
pushf
add
add
lret
and
fsubrs
push
mov
push
call
out
andl
push
and
fcoml
sbb
add
cmp
ljmp
inc
loopne
jne
mov
mov
addb
sbb
clc
test
mov
push
push
les
out
mov
xor
and
add
clc
add
imul
xor
push
mov
les
adc
movb
pop
mov
or
mov
pop
les
insl
mov
mov
call
das
jecxz
push
xchg
push
je
xchg
loope
xchg
sub
jne
popl
pop
in
or
cmp
sbb
inc
lcall
xor
push
cmp
xorb
sub
sub
or
pop
dec
and
push
inc
jl
bound
jns
mov
imul
mov
add
pop
push
pop
sbb
lock
in
daa
leave
add
leave
sub
cmp
push
popf
movsl
jne
mov
pop
cmp
lahf
stos
cmp
aam
jo
pusha
xchg
push
pop
adc
aaa
mov
pop
or
pusha
xchg
icebp
adcb
inc
inc
out
pusha
jge
dec
add
fldenv
pop
jnp
xchg
xchg
sub
gs
test
adc
and
push
add
or
mov
sub
ja
inc
push
pop
or
push
mov
lea
cmp
mov
fsubrl
sbb
jo
cmp
add
mov
push
movsl
dec
dec
outsb
and
test
fmull
stos
roll
lcall
xchg
jmp
bound
test
out
push
sub
aaa
scas
or
jb
and
int
jecxz
sbb
movsb
icebp
or
or
int
cmp
es
iret
cmc
mov
andb
jecxz
and
push
nop
mov
mov
jbe
jno
pop
or
and
add
and
test
push
sahf
push
or
mov
add
adc
clc
ret
sub
lds
push
lods
shr
sbb
lahf
call
add
cmp
push
sbb
fsubs
fists
xchg
mov
add
xchg
push
or
add
jmp
push
fistpl
mov
mov
push
ja
mov
mov
fisttps
mov
movsb
adc
sbb
pusha
daa
sbb
scas
andb
hlt
jle
push
and
add
mov
xchg
sbb
sub
cltd
mov
sub
bound
rorl
je
inc
mov
test
imul
je
mov
loopne
ja
sub
js
pop
or
insl
insl
sbb
adc
push
cld
sub
clc
sbb
int
sahf
sti
fnstsw
xor
add
push
push
mov
adc
jecxz
adc
adc
pop
sub
adc
push
loopne
inc
test
arpl
and
push
xor
movsb
add
iret
xor
addb
ds
and
lea
jmp
je
jno
add
shll
add
xor
mov
and
mov
lret
inc
lret
pop
xor
sbb
pusha
int3
mov
pop
cmp
jo
mov
inc
sbb
jl
add
inc
lahf
cmp
mov
aam
imul
call
and
cmp
sahf
mov
movsl
or
nop
xchg
sub
pop
dec
movsb
mov
and
push
sbb
push
pop
inc
dec
les
pop
adc
pop
inc
cmp
fdivl
sbb
dec
or
inc
lods
pop
or
jl
sbb
js
pop
xor
inc
data16
or
mov
mov
ret
push
inc
pop
jb
xchg
mov
int3
pop
dec
push
or
or
int
and
dec
sub
inc
and
rolb
push
test
add
push
or
and
jg
push
lods
push
pop
and
bound
push
adc
push
add
cmp
or
add
and
scas
nop
adc
cmp
cltd
lcall
adc
in
xor
cmp
and
add
or
rorb
jb
add
fs
test
dec
outsl
pusha
jne
cmp
nop
cmpsb
dec
push
inc
pop
cmp
push
push
dec
xlat
imul
cmp
or
jmp
ret
or
add
lods
movsb
testb
outsl
mov
mov
push
iret
int3
sbb
xor
push
mov
mov
xchg
or
sbb
and
mov
dec
loope
cld
cmp
repz
les
orl
into
and
mov
mov
aad
ret
push
std
jb
jle
adc
ss
sbb
xchg
fcomip
popf
cmp
sbb
jbe
in
sub
pop
adc
or
test
out
pop
cmp
pop
adc
xchg
xchg
mov
jg
push
ret
cli
lock
call
lea
sbb
push
mov
cmp
arpl
cmp
jle
push
xchg
test
and
xchg
mov
movsl
movsl
or
or
pusha
cmp
or
insb
lahf
push
icebp
push
hlt
aad
and
imul
push
lahf
xor
sbb
cmpsl
or
in
movzwl
push
nop
cmp
notl
cmp
mov
mov
mov
dec
sub
push
sub
cmp
aaa
and
pop
stos
adc
fs
sub
or
repz
xchg
dec
add
dec
ret
dec
inc
andnps
adc
inc
inc
daa
and
lahf
fwait
or
jb
xor
sbb
imul
pop
xor
sbb
sub
arpl
js
sub
mov
incl
movsl
mov
jae
push
shl
fnsave
test
fiaddl
mov
call
icebp
add
int3
cmp
ds
adc
xor
jb
sub
or
xchg
mov
mov
jo
repnz
lods
pop
adc
je
cmp
mov
in
imul
or
insb
xor
sub
je
and
sub
adcl
rcll
xlat
push
add
push
mov
jmp
inc
fs
movsb
cmc
or
mov
jg
mov
cmp
jbe
and
mov
pop
mov
test
pop
insb
cmpl
cmp
lock
pop
adc
dec
xlat
sub
lods
adc
pop
pop
ljmp
add
mov
dec
ret
pop
gs
jle
adc
mov
and
lret
sbb
adc
sbb
adc
sub
add
and
adc
rolb
sub
mov
pusha
icebp
adc
sbb
add
addl
mov
sub
cmp
pop
cmp
or
mov
push
push
repz
dec
fs
or
pop
dec
cwtl
dec
adc
rorb
lret
stc
push
add
push
mov
pop
sub
jle
test
inc
cmp
inc
and
mov
lea
sbb
adc
push
aaa
mov
or
mov
push
nop
push
sub
mov
frstor
popa
adc
add
xchg
pop
fdivs
loopne
insb
mull
and
adc
add
xlat
mov
rclb
push
add
add
fcmove
jl
cmp
mov
lret
sbb
dec
sbb
adc
dec
jl
orb
pop
je
cld
pop
xor
jo
nop
xor
xor
or
dec
pusha
push
rcrb
inc
or
shll
shll
adc
pushf
orb
and
sub
je
mov
inc
hlt
push
and
inc
bound
sub
mov
sub
test
push
arpl
fistpll
mov
add
loopne
or
lock
stos
adc
and
sub
addl
xor
and
jp
je
mov
mov
sub
pushf
xchg
subl
data16
pop
in
les
ficomps
push
xor
and
push
loop
pop
movsb
push
sub
adc
call
pop
ss
adc
sbb
inc
sub
nop
pop
push
push
test
ret
sbb
or
sub
lret
ret
ror
pop
jb
pop
push
sbb
jne
lret
push
xor
pop
adc
and
enter
leave
ret
xor
mov
push
push
dec
push
and
adc
out
push
pop
movl
arpl
mov
sbb
adc
inc
test
out
pop
or
inc
inc
add
dec
lock
cmpb
or
fdivr
js
adc
sbbb
es
fistl
push
inc
dec
pop
and
lret
sbb
adc
xor
sub
daa
insl
pop
jb
lods
scas
push
sub
leave
sbb
and
xchg
pop
cmpl
and
sub
inc
pop
adcl
aam
loop
xchg
nop
add
add
outsl
mov
push
lea
lock
xor
inc
popf
mov
mov
or
or
or
and
mov
test
movsl
add
cmpsb
imul
sub
out
fs
add
insb
icebp
dec
ret
pop
in
aad
mov
inc
add
inc
cmpsb
or
pop
adc
jne
jb
push
and
cmp
in
push
sub
adc
imul
enter
mov
sub
adc
test
ret
insb
cmp
xor
or
xchg
pusha
sub
sub
mov
in
subb
nop
add
lods
enter
inc
mov
fisubs
jmp
and
dec
nop
cld
jg
mov
adc
pop
lea
in
xlat
jo
roll
xor
aaa
add
or
xchg
test
push
fucomp
dec
aaa
call
push
adc
and
addr16
inc
push
dec
ss
or
add
and
out
pop
sarb
mov
jmp
jmp
fs
mov
cs
inc
xor
movsb
push
lds
mov
filds
cld
lods
jecxz
insl
add
into
adc
add
lock
shr
and
lea
sbb
rcrb
sbb
sbb
sbb
add
xor
dec
add
push
pop
leave
sub
test
or
xchg
jnp
movsb
sbb
leave
aam
or
sbb
and
fstl
push
leave
adc
xor
cmp
xchg
cmp
push
dec
stos
lds
push
mov
addb
pop
mov
adc
addb
xorb
sbb
mov
insl
pusha
call
sub
addl
aad
mov
cmc
out
cmpsb
add
adc
pop
mov
mov
or
insl
or
dec
sbb
nop
inc
add
sahf
sbb
add
or
sub
mov
inc
adc
dec
adc
inc
lds
pop
iret
push
sbbb
sub
in
test
push
add
loopne
or
sbb
inc
inc
arpl
push
mov
mov
push
adc
mov
inc
add
andl
call
add
cmp
inc
push
mov
inc
dec
xor
mov
test
mov
fwait
lea
and
dec
pop
sub
add
rcrl
jb
int3
dec
mov
mov
daa
out
push
adc
mov
mov
in
jno
jl
push
mov
and
shlb
push
mov
and
xchg
add
sbb
dec
pop
stos
and
fs
pop
cmp
adcb
and
add
push
and
or
adc
push
ds
push
inc
cmpsb
jecxz
lcall
lea
or
sbb
mov
xchg
push
hlt
imul
cmp
je
outsl
jge
and
fsubr
test
dec
ret
add
imul
ja
push
jb
enter
test
sbb
ret
pushf
push
sbb
sbb
and
cmp
pop
add
fs
push
push
mov
mov
xchg
xchg
adc
push
xor
push
add
mov
push
push
nop
adc
fistpll
push
or
mov
push
sbbl
outsl
push
inc
rcll
and
and
dec
add
loop
dec
in
dec
lea
leave
mov
lahf
aam
mov
mov
jg
inc
insb
cmpsl
fdivl
or
sub
cli
jns
cmpsb
adc
jge
dec
mov
daa
test
sub
shll
and
pop
and
outsb
lret
popa
add
add
call
and
push
dec
sbb
sarb
imul
or
and
js
fstps
fmuls
adc
adc
jo
rolb
dec
jbe
push
andl
xchg
and
add
test
out
sbb
call
cmp
call
and
test
mov
dec
jecxz
push
test
sahf
in
dec
inc
push
add
insb
add
lds
movsl
je
mov
fnstenv
addr16
add
int
shlb
mov
fs
pop
nop
dec
gs
lock
add
push
inc
pop
push
pop
push
add
add
popf
push
mov
xorl
adc
xchg
lods
sub
jl
outsl
orl
and
push
and
pop
add
orb
lret
arpl
sbb
fdivrl
inc
add
pusha
or
pusha
ss
cs
add
or
mov
and
aam
sbb
aam
sub
sbb
xor
fdivr
xchg
dec
and
dec
scas
pop
and
mov
add
imul
outsb
aad
xchg
pop
jns
xchg
cwtl
push
jecxz
xor
in
push
pop
xorl
xor
xchg
arpl
das
cmp
je
addr16
cmp
push
push
xor
pusha
nop
push
and
pop
xor
pop
nop
incl
cmp
in
inc
or
xchg
inc
mov
test
jecxz
dec
test
mov
or
pop
xchg
out
mov
loopne
ficoms
and
loope
in
push
or
push
push
imul
push
mov
or
mov
adc
xchg
push
mov
adcb
test
xchg
add
test
rcrb
jmp
xchg
pusha
mov
fidivl
adc
dec
and
or
addr16
or
iret
push
repnz
or
sub
pop
and
andl
rorl
adc
dec
divl
add
stc
inc
jl
adc
rorl
dec
push
aam
pop
test
xchg
inc
adc
addr16
or
mov
dec
xchg
in
and
mov
cmp
mov
mov
repz
hlt
xchg
push
xchg
push
in
sub
mov
add
pop
xor
sbb
scas
rcrb
and
sbb
push
xor
test
enter
add
sbb
mov
lret
push
inc
andl
mov
and
and
mov
enter
dec
cmpb
fsubrl
enter
enter
and
add
in
push
xchg
cmp
mull
and
add
sub
push
xchg
mov
cmp
pop
pop
enter
adc
adc
pop
lahf
pusha
cwtl
cmp
pop
jbe
dec
xchg
movsb
movsb
cwtl
pusha
push
fsubrs
movsb
xorb
aam
shl
popf
or
bound
xchg
insb
sbb
pop
or
dec
pop
push
jl
mov
pop
add
mov
mov
cs
std
adc
or
repz
or
jl
add
js
cmp
int
pop
xor
mov
sub
mov
xchg
adc
mov
sbb
sbb
xchg
sbb
mov
mov
or
adc
adc
jne
pop
sub
outsb
imul
xlat
cmc
dec
cmp
aam
adc
idivl
cmp
push
fs
js
daa
sbb
shlb
add
add
push
cmp
push
jns
arpl
inc
cld
xchg
ja
jns
fcomps
xor
push
hlt
or
inc
je
les
xchg
lret
pop
sbb
lock
cmpsl
cmp
inc
imul
inc
sar
adc
jmp
js
in
out
adc
and
loop
push
push
fistps
fmul
andl
addr16
es
sahf
or
xor
repnz
rolb
and
add
mov
cmp
aas
lods
mov
xor
ds
dec
iret
push
repnz
cmp
bound
repnz
xor
inc
cmpsb
cmp
xchg
shrb
pop
rclb
inc
inc
mov
inc
lea
mov
shrl
pop
push
inc
popf
pop
jne
imul
enter
into
loop
ror
jmp
mov
sub
pop
or
push
dec
add
mov
pop
lds
pushf
das
or
call
xchg
pop
mov
dec
jb
push
jnp
sbb
test
movsb
rcrb
fs
stos
inc
arpl
imull
jo
lcall
inc
add
imul
arpl
fwait
sbb
pop
jb
enter
pusha
push
mov
clc
and
pop
pop
add
pop
sub
pop
fdivrs
cmp
mov
int
mov
adc
dec
add
pop
orl
test
sbb
jae
and
call
xchg
or
cmc
add
sti
push
pop
add
mov
push
push
push
add
mov
stc
pop
bound
xor
icebp
push
or
push
lret
sub
inc
push
push
ret
std
aas
push
shll
out
adc
leave
add
add
cmp
add
arpl
xor
and
sub
mov
cltd
add
enter
inc
in
fsubl
jne
add
mov
add
push
xor
inc
fs
lods
sbb
or
adc
repz
addr16
xchg
fs
push
and
and
cltd
or
pop
dec
repz
lcall
adc
mov
dec
dec
inc
hlt
sti
jbe
sub
sbb
or
mov
pop
les
cs
fcoml
xchg
icebp
mov
push
xlat
lods
push
pop
lock
or
les
push
add
mov
or
pop
jmp
jp
cmp
push
pop
xchg
adc
inc
cmp
sub
mov
cmp
or
add
and
inc
push
push
outsb
ret
sub
dec
mov
outsb
sbb
cmp
adc
dec
sbb
push
sub
leave
icebp
sbb
inc
cmpb
inc
xor
inc
or
inc
sbb
sub
jo
or
push
pop
xchg
push
mov
adcb
test
pop
fsubl
clc
ror
sub
xor
push
mov
adc
sub
push
jo
push
sbb
les
cltd
xor
and
inc
push
xchg
push
mov
push
dec
mov
adc
pop
jne
adc
pop
sub
jno
sbb
mov
adc
popl
fcoml
inc
push
test
imul
rorb
nop
mov
hlt
repz
mov
int3
hlt
cmc
sub
push
add
or
pop
in
push
ret
jae
mov
jecxz
sub
xorl
loopne
pop
cmp
insb
imul
or
lret
das
xor
daa
adc
mov
lret
add
sbb
lea
xor
pop
push
jmp
push
and
mov
cmpsl
cmp
out
out
push
xchg
arpl
jno
cmp
dec
insb
push
das
js
sbb
push
loope
mov
mov
pop
sbb
int
inc
mov
push
push
dec
pop
or
adc
sahf
adc
adc
dec
xchg
pop
xor
pop
jl
dec
jne
mov
xor
and
push
adc
cmpb
jno
int3
push
in
push
push
leave
jae
cmp
add
push
add
adc
leave
insb
cmp
fs
inc
and
adc
ss
jo
in
mov
lds
out
push
add
test
rolb
and
jb
push
sub
dec
jmp
sbb
cld
cmc
xor
pop
push
push
loope
movsb
xchg
lods
or
jmp
xchg
pushf
and
push
push
cmp
sbb
and
call
outsl
mov
sbb
mov
cmp
cmp
mov
push
push
pop
jecxz
fdivrp
inc
jne
mov
and
dec
push
aas
sbb
xor
icebp
stc
inc
call
sbb
pop
mov
cs
lea
add
aam
pusha
pop
adc
add
or
or
add
ja
add
test
imul
or
repz
adc
or
cwtl
std
inc
jno
push
jmp
push
adc
orb
mov
sar
and
inc
jo
push
mov
imul
or
push
mov
add
mov
pop
adc
fistps
sub
mov
push
cs
jne
jne
fcoms
sub
pusha
loope
jmp
fs
decl
and
add
flds
sub
and
inc
push
pushf
add
popa
jb
pop
imul
push
mov
add
dec
jmp
fisttpll
out
lods
dec
mov
dec
movsl
pop
jo
inc
sbb
mov
mov
push
mov
mov
jns
dec
jae
loope
mov
test
pop
arpl
sbb
xorb
push
lret
dec
adc
clc
and
sbb
movsl
aaa
andb
aam
adc
xor
bound
lea
sbb
pop
mov
shr
push
sbb
push
xor
xchg
dec
or
mov
dec
xchg
cmp
add
add
push
sub
movl
and
ss
inc
sub
or
sbb
vmwrite
sub
add
and
notl
xor
push
sub
cmp
dec
sbb
or
cmp
adc
jnp
test
pusha
dec
jns
jp
fmull
inc
dec
insl
mov
test
and
mov
inc
test
push
lcall
or
lret
in
jge
or
xchg
or
or
cli
cltd
addr16
or
inc
and
lahf
loopne
adcl
loopne
jno
enter
pop
or
sub
test
inc
dec
and
add
pushf
cwtl
dec
dec
adc
fimull
xor
imul
xchg
push
push
addb
int
push
dec
stos
scas
xchg
lcall
shlb
mov
adc
lods
sbb
inc
ret
inc
add
mov
std
adc
loope
fs
mov
mov
push
mov
adc
pop
dec
jle
cmp
jae
mov
cmpsb
rol
lods
or
push
jno
inc
cmp
jl
aad
daa
orb
pop
outsl
icebp
cld
std
xchg
jbe
test
push
xor
mov
cld
std
mov
pop
and
lahf
cmp
cli
sarb
or
mov
int
pusha
inc
push
sbb
or
mov
push
loopne
stc
rol
aam
enter
xchg
movsb
aaa
lcall
push
sti
call
repz
push
pusha
cmpsb
ror
das
je
dec
dec
mov
xchg
adc
pusha
sub
dec
cmpl
sub
arpl
nop
test
add
sub
add
and
push
sbb
add
add
rclb
adc
xor
dec
add
push
mov
pop
pop
push
pusha
dec
imul
mov
jo
add
insb
xchg
rorb
pop
imul
pop
add
sub
std
dec
leave
pop
adc
lea
lds
jnp
cmp
adc
and
xor
lcall
lods
int3
cmp
or
xor
push
fsubrs
push
cmp
xor
movl
cmp
filds
add
or
cmp
cmp
xchg
mov
cmp
cmp
push
cs
sbb
insb
mov
pop
cmp
push
or
jo
loopne
ss
xor
pop
or
outsb
mov
xchg
mov
cmp
sub
adc
inc
daa
stc
push
sar
add
push
leave
and
inc
or
sbbb
inc
sti
insl
aam
xchg
adc
mov
adc
xchg
mov
adc
mov
test
popf
mov
incb
push
add
das
test
jle
ja
ss
xchg
dec
dec
dec
in
fmulp
or
lea
inc
loopne
jo
jg
out
jbe
popl
push
popf
daa
fimuls
mov
pusha
pushf
xor
fcompl
adc
mov
xchg
adc
test
mov
mov
rcrb
test
pop
repz
mov
adc
or
das
jne
loop
outsb
sbb
jne
and
fdivrs
ds
lods
jge
inc
mov
mov
add
jns
push
cwtl
fs
and
out
flds
pop
xor
sbb
cmc
loop
adc
sarb
pushf
dec
or
add
inc
push
rorb
cwtl
out
inc
sarb
scas
lcall
testl
add
sub
test
movb
jno
sbb
or
hlt
loopne
cmpsl
dec
loopne
aam
pop
jmp
pop
push
mov
fadds
push
sub
or
push
iret
test
aas
ret
sub
insb
sbb
push
mov
mov
push
test
mov
dec
lock
pop
sar
mov
mov
aaa
pop
push
mov
or
adc
je
cmp
je
cmp
in
push
xchg
std
je
cmp
je
push
jnp
in
lods
rorl
mov
loopne
push
fwait
mov
testl
insb
pop
shll
mov
loope
das
jmp
add
push
ret
push
mov
aas
jnp
inc
and
dec
inc
hlt
inc
and
mov
rcr
roll
or
lods
dec
adc
mov
xchg
cmpb
movsl
lods
rolb
jecxz
jne
add
icebp
cmp
je
adc
leave
call
ret
addb
pop
jbe
mov
add
cwtl
pushf
add
xor
xor
jle
adc
jge
cmp
adc
inc
xchg
dec
inc
andb
mov
adc
jb
push
push
movsb
add
add
inc
and
add
mov
or
sbb
push
ds
stos
push
int3
xor
sbb
pop
das
popa
mov
rorb
inc
mov
pop
inc
mov
xor
or
inc
loopne
or
das
cmpb
jmp
mov
and
cld
mov
inc
and
sti
push
mov
jne
and
jo
push
adc
and
mov
mov
mov
mov
dec
icebp
movsb
sbb
divb
mov
adc
cmpsb
mov
sbbb
jns
les
mov
mov
sbb
loopne
mov
gs
xchg
mov
jns
or
pop
and
push
dec
les
mov
push
or
fwait
lret
sbb
cld
psubb
cld
rclb
add
arpl
les
mov
dec
adc
and
andb
xor
enter
xchg
scas
xor
cld
ret
pop
test
enter
fdivs
out
pop
pop
nop
vmread
mov
xor
mov
enter
inc
les
sub
and
and
out
sbbb
inc
arpl
push
mov
dec
xor
push
jno
dec
lock
aad
sbb
cltd
add
push
hlt
lock
adc
shrb
adc
mov
pop
push
ja
into
cs
dec
push
push
loopne
xor
mov
test
inc
or
dec
inc
xchg
adc
fdivs
pop
mov
cmp
sub
fisubrs
mov
aam
fsts
fcoms
and
ret
push
push
pop
out
lcall
imul
adc
adc
inc
mov
sub
outsb
rorb
jb
cmpsb
xchg
out
mov
or
in
or
mov
outsl
fs
mov
jno
xor
inc
jmp
xor
or
sub
rclb
sub
adc
dec
dec
and
mov
mov
mov
adc
mov
into
ret
inc
adcl
dec
or
pop
add
jns
dec
out
aas
jge
mov
ljmp
push
or
inc
sub
dec
adc
movsl
test
les
add
mov
mov
add
and
sbbl
fcoms
dec
gs
outsl
mov
shlb
jne
mov
add
cmc
add
mov
xchg
lea
into
push
jecxz
push
adc
pop
cs
adc
enter
mov
std
pop
push
mov
push
pop
mov
sbb
inc
push
mov
orl
mov
fs
xor
sbb
insl
xchg
nop
xor
mov
or
lea
pop
xor
dec
enter
dec
dec
mov
pushf
or
adc
leave
mov
xchg
scas
sbb
pop
add
inc
cmpsl
mov
xor
dec
ficomps
jne
mov
push
mov
mov
sub
add
xchg
push
mov
out
sbb
push
cmp
nop
fwait
or
xor
inc
jmp
int
or
ret
push
rorl
adc
cld
sub
and
or
pop
xor
adc
cmpb
adc
push
cmp
push
cmpsb
push
or
sub
addb
ja
and
pop
lea
or
add
and
or
mov
jne
cwtl
call
loop
orb
sub
mov
and
sub
cmpsl
lea
sbb
in
loope
ds
imul
mov
lahf
jl
xchg
sti
push
cmpsl
or
push
sub
cmp
sbb
and
adc
cwtl
add
sub
add
inc
mov
mov
push
mov
lahf
adc
push
fcomp
and
adc
xchg
push
mov
inc
and
sub
fisttps
sub
sbb
rol
aas
xor
stc
push
outsb
inc
dec
jmp
jle
push
gs
nop
dec
push
mov
xchg
mov
mov
enter
dec
sub
lock
add
jge
jne
cmp
jne
pop
outsl
sbb
sbb
pop
mov
test
push
push
cmpb
dec
stos
mov
outsb
xchg
lcall
aam
out
rcrb
icebp
add
push
out
xchg
adc
pop
inc
sbb
push
movsl
add
mov
movsb
enter
jo
mov
pop
mov
rorb
push
sub
push
sarb
and
pop
cs
dec
addr16
insl
dec
out
inc
test
push
jo
js
inc
stos
mov
mov
lds
inc
rclb
loope
test
repnz
pop
mov
sar
sub
sbb
clc
enter
add
cmp
mov
or
push
cmp
bextr
sbb
or
adc
xchg
xchg
cmpsb
mov
pop
sub
mov
adc
mov
jle
mov
mov
lcall
je
ficomps
bound
lea
test
cmpl
cmpsb
jae
mov
cli
push
sub
push
push
push
ficoms
mov
inc
adc
push
std
lret
inc
add
movb
ret
inc
mov
and
cmp
push
xor
and
adcb
test
loope
push
aaa
sbb
cwtl
and
xchg
mov
pop
sarb
push
outsb
inc
add
inc
shrb
xadd
xorl
xchg
jb
imul
dec
add
adc
jge
scas
adc
and
mov
cmp
outsb
push
add
fadds
ss
andb
jg
mov
dec
stos
and
push
cmp
add
jns
push
pop
addr16
cmpsb
inc
jg
cmpb
jb,pn
cmp
jl
jbe
sbb
and
push
das
idiv
insb
loop
inc
jne
lcall
dec
fisttpll
jnp
sbb
orb
push
sub
lea
sub
mov
inc
mov
pop
mov
pusha
jnp
or
rcl
call
mov
adc
xchg
cmpb
adc
adc
dec
adc
subl
push
es
nop
add
bound
push
mov
push
gs
clc
push
inc
mov
or
pop
or
aad
mov
sbb
push
idivb
loope
cwtl
add
pop
jne
and
maxps
sbbl
pop
lret
dec
pop
inc
adc
dec
insl
ds
pop
in
or
inc
inc
movzwl
lods
repz
pop
pop
loop
outsl
add
enter
jp
hlt
lea
mov
pop
lret
cmp
sahf
mov
fs
movsb
movsl
sarb
sbb
je
inc
cmpsb
hlt
ja
int3
lcall
cmp
adc
mov
sbb
stos
andb
sbb
add
pop
dec
fisttpl
leave
bound
addr16
dec
jo
divl
aaa
mov
mov
add
or
pop
xor
pop
add
cld
lock
aad
mov
push
xchg
and
cltd
mov
push
inc
add
xchg
xor
cmp
xor
pop
mov
jmp
adc
imul
sub
in
jne
out
jecxz
dec
mov
add
test
inc
movsl
loop
push
pop
xchg
imul
data16
push
or
xor
loope
mov
and
test
mov
mov
flds
push
mov
pop
je
xor
dec
mov
push
jl
push
push
or
mov
fstl
nop
push
aaa
loopne
bound
into
jle
cmpsl
aas
inc
cmp
pop
mov
sub
test
sbb
dec
mov
int3
and
push
sbb
xchg
or
add
ffree
stos
push
mov
push
inc
or
cmp
fs
jo
ret
add
leave
sbb
es
int
pop
imul
or
push
mov
lds
jno
inc
inc
xor
push
or
xor
dec
add
jmp
and
fisttpl
or
les
xor
pop
xchg
add
inc
or
pusha
cmp
test
cmp
add
sub
and
rcrb
icebp
inc
arpl
cli
inc
xchg
cmp
mov
cmp
cmp
mov
iret
clc
jle
add
inc
add
add
adc
xlat
inc
cmpsl
mov
adc
enter
jecxz
sbbb
xchg
pusha
jl
mov
aaa
dec
rclb
push
scas
mov
lods
inc
cld
sbbb
nop
jne
add
sbb
fstl
sbb
add
in
and
xor
cmp
inc
or
in
aas
dec
lds
cmp
jb
sub
jmp
push
dec
cmc
push
jl
movzwl
dec
pop
cmpl
push
setl
movzbl
push
jbe
out
push
test
sub
ret
push
push
or
adc
or
jl
fisubs
jo
sub
mov
ljmp
add
popa
adc
lds
xor
pusha
sub
sahf
and
cltd
dec
push
push
push
jo
shrl
mov
push
sub
jmp
push
popa
test
xor
jge
jle
push
jne
or
sub
adc
bound
iret
xchg
pop
jns,pt
mov
inc
xchg
xchg
addl
add
enter
sub
mov
sub
push
xchg
fdivrs
push
inc
adc
inc
inc
pop
mov
enter
mov
sbb
dec
or
xchg
xor
loope
push
push
bound
pop
mov
nop
jo
loop
push
dec
mov
adcb
add
xchg
cmp
imul
add
rcrb
xor
sbb
inc
sub
dec
jns
cltd
add
or
adc
fs
sbb
push
ret
ds
mov
cmp
dec
push
push
push
cmc
xor
movsl
je
cmp
xchg
jo
add
xor
add
sbb
dec
loopne
test
mov
inc
xor
pop
ss
pushf
out
inc
inc
inc
adc
adc
and
das
xor
mov
pop
leave
inc
cmpsl
aad
or
or
addl
enter
xor
orl
insl
sbb
fimull
dec
dec
add
outsl
mov
adc
dec
popa
push
popf
adc
pop
pusha
sbb
and
test
or
mov
inc
cmp
xor
faddl
xchg
or
push
fisttpl
dec
ret
popa
dec
adc
scas
add
push
adc
xor
sbb
mov
inc
jb
aas
in
jb
je
or
adc
gs
adcl
adc
sarb
mov
cmpsb
sbb
aam
mov
xor
nop
push
sub
sbb
add
jnp
inc
push
cmp
mov
mov
xor
sbbb
hlt
add
push
lahf
clc
or
sbb
inc
sbb
jne
add
push
mov
jo
fbstp
insb
and
mov
fdivrl
inc
jo
sbb
or
enter
shrl
stc
inc
lahf
cltd
mov
add
and
or
xor
call
adcl
push
dec
inc
sbb
mov
jg
or
xlat
inc
jnp
inc
inc
dec
hlt
pop
mov
lea
jge
insl
mov
push
cmpb
jne
sbb
or
repnz
insb
jbe
mov
jns
xor
nop
push
inc
addl
mov
in
inc
pusha
or
xchg
push
lds
icebp
push
ss
inc
mov
test
or
or
dec
cmp
add
add
dec
imul
mov
pop
sub
fs
lret
adc
add
cmpsl
xor
test
sarb
xor
sbb
adc
sub
mov
sbb
and
adc
shl
inc
bound
dec
inc
sbb
add
mov
sbb
in
jnp
insb
jbe
test
dec
sahf
xchg
dec
add
or
imul
mov
shl
add
and
mov
test
add
stos
sub
mov
cs
sbb
sbb
pop
fistl
push
in
ret
push
test
add
aas
or
adc
xchg
adc
add
xchg
sub
dec
test
and
add
fmul
cli
sbb
push
dec
pop
ret
push
jg
mov
cmpsb
pop
push
pop
dec
sub
jne
cmc
insb
sbb
and
std
fildl
cs
pop
daa
mov
add
pop
jg
lret
pop
pop
mov
fs
inc
and
fmuls
push
aas
push
imul
jg
nop
jmp
pusha
jo
arpl
sbb
pop
dec
push
cs
jno
test
xor
sub
in
adcl
add
pop
adc
rcrl
and
push
addr16
shlb
pop
push
dec
arpl
daa
pop
push
dec
jne
and
dec
ss
push
jl
js
outsb
mov
arpl
test
mov
jo
lods
jbe
popa
jmp
dec
sub
cmpsb
add
sbb
pop
stc
pop
gs
les
sub
pusha
sti
and
in
mov
xchg
dec
pop
mov
sbb
je
or
xor
and
push
xchg
andb
push
call
ret
mov
es
mov
bound
addb
cltd
sbbb
call
or
nop
mov
aaa
or
xor
and
int
mov
adc
inc
jb
ret
stc
pop
sub
inc
shrb
sub
xchg
xchg
inc
inc
cmp
nop
mov
jns
push
add
pop
cmp
mov
and
inc
inc
or
shll
dec
dec
mov
or
push
add
inc
xchg
out
inc
mov
xchg
cmp
cmp
xchg
dec
sub
in
in
scas
add
adc
cltd
push
jbe
and
stos
jb
adc
xor
inc
or
xor
fwait
add
or
add
iret
push
and
xor
sbb
inc
or
mov
roll
add
adc
jae
in
movsl
lds
and
pop
rolb
dec
push
pop
jl
lock
xor
dec
stos
sarb
out
push
fs
int3
test
jmp
xor
and
movsb
fld
rcrl
sub
add
loopne
popa
das
inc
pusha
sub
push
in
sbb
pusha
push
mov
adc
xchg
adc
or
popf
xor
aas
es
mov
cmp
cmp
jbe
inc
loopne
mov
seto
or
xor
or
jb
movsl
add
hlt
icebp
addr16
push
dec
xchg
or
sub
mov
adc
adc
adc
in
sub
outsb
jecxz
loope
mov
push
add
push
test
dec
push
add
adc
rcrb
or
rolb
push
loop
mov
xor
inc
and
int
das
jg
outsl
mov
pop
add
mov
add
inc
ret
nop
add
and
pusha
outsb
dec
mov
or
sub
les
mov
pop
enter
add
add
and
add
test
add
andl
add
fnsave
jmp
mov
daa
xor
inc
ljmp
int
sub
and
movsb
xor
das
call
sbb
call
jle
add
adcb
mov
nop
sub
or
adc
or
sbb
or
add
inc
jmp
notb
insb
arpl
dec
mov
add
subl
or
mov
xchg
mov
aaa
mov
rorl
jno
mov
cmp
call
je
mov
aad
lret
jge
push
js
or
cmp
xchg
add
push
imull
mull
cmc
std
add
cmc
jl
lea
movsb
pusha
push
or
mov
das
adc
adc
xchg
lahf
stos
cwtl
jns
mov
mov
dec
ljmp
faddl
lods
add
imul
mov
div
fadds
rclb
fcomps
loopne
js
aam
sub
dec
pusha
jl
repnz
pop
scas
sub
push
dec
or
movsb
pusha
shr
ficompl
add
add
in
rcr
push
push
ret
outsl
mov
pop
ret
loopne
mov
pushf
push
flds
ja
add
in
cwtl
jo
ret
div
rcl
push
or
test
pop
mov
dec
adc
lock
and
sub
jo
test
cmp
or
into
data16
in
sub
dec
iret
xchg
adc
xor
rcrb
or
mov
push
jae
mov
enter
sub
inc
xchg
mov
pop
orb
xor
dec
dec
xor
pusha
insl
jge
or
push
into
mov
into
adc
jl
dec
mov
pop
xchg
cmc
popf
cmp
xchg
sahf
cwtl
jne
fmull
ljmp
mov
out
add
pusha
xchg
dec
pop
jmp
inc
dec
aam
fld
incb
jp
aas
lock
cmp
cmp
mov
push
movsl
adc
movb
stos
mov
dec
jae
and
pop
inc
mov
inc
mov
jno
xchg
dec
and
andl
jg
xor
lret
mov
mov
jne
sbb
in
push
inc
push
cmpsl
movsl
sub
cmpsb
xchg
mov
call
imul
mov
sub
into
push
sub
pop
pop
sbb
add
mov
push
mov
test
pop
in
inc
or
sbb
flds
xchg
xor
adc
aam
xchg
add
shll
aas
orb
pop
fld
add
cli
andb
mov
cmp
cmpl
adc
mov
cmp
sbb
fcmovb
push
test
or
mov
and
add
or
mov
xchg
je
outsb
mov
jl
rclb
jns
add
jp
dec
cli
pop
je
pop
cwtl
movb
jle
mov
fcompl
lock
lcall
mov
jmp
fsubl
les
jmp
lret
lock
std
or
test
rorl
jbe
sub
push
lea
iret
loopne
test
inc
pop
subb
add
push
add
or
cmp
pop
push
push
push
and
adc
call
or
mov
add
push
xor
dec
test
mov
push
call
out
push
adcl
insb
and
ds
xlat
jns
pop
rorl
adc
adc
in
aam
aaa
sub
pop
rorb
add
lea
add
jl
pushf
dec
sbb
in
and
or
mov
fwait
mov
xchg
dec
cld
xor
into
sbb
ficompl
cmp
mov
dec
push
ret
push
punpckhdq
pop
int3
jmp
adc
decl
xchg
push
aaa
xchg
xor
cmp
cmp
je
push
out
jmp
or
stos
push
sub
mov
sbb
or
sub
mov
mov
lods
pop
in
jne
push
push
cld
mov
cmp
je
mov
pop
outsb
pop
clc
inc
mov
jns
cld
push
aam
jbe
jg
adc
aas
sbb
adc
push
clc
js
add
mov
pop
jmp
xor
push
cmp
and
idivl
push
inc
lds
imul
les
aas
xor
pushf
in
test
adc
sub
out
xchg
jne
leave
add
add
jmp
clc
cltd
mov
add
rol
fsubrs
or
push
and
dec
cld
cld
mov
add
jl
cmpl
cmp
cmp
pop
xchg
sbb
stos
adc
or
inc
add
imul
xor
inc
lea
fimuls
fadds
push
mov
inc
and
push
call
xor
ja
hlt
or
jmpw
pop
push
cmpl
or
or
movsl
inc
push
lock
or
add
jbe
loopne
sub
loopne
mov
clc
aam
notl
mov
orl
ljmp
and
sbb
adc
lds
sarb
add
popa
aam
clc
add
loopne
aas
adc
decl
or
inc
push
adc
xor
sub
push
in
or
adc
sbb
rclb
or
adc
pop
lcall
pop
cmp
leave
stos
jmp
or
or
jecxz
bound
dec
sbb
imul
mov
mov
mov
and
jb
jbe
mov
aad
push
mov
add
or
and
push
mov
jo
iret
aaa
ss
in
pusha
aaa
adcl
jmp
add
sub
inc
sti
inc
loope
outsb
push
push
add
jle
je
add
aad
xor
or
dec
fcom
xor
or
push
push
add
lock
movsb
inc
add
adcb
pop
xchg
push
xor
movl
xchg
repnz
sar
adc
nop
or
pop
pop
shlb
out
loope
mov
sarb
push
ret
mov
inc
dec
pop
shlb
inc
add
and
gs
or
and
mov
mov
or
and
mov
lret
push
loopne
add
dec
mov
popl
das
add
orb
nop
pop
in
rorb
in
sbb
lock
mov
push
ds
dec
addl
mov
rolb
push
aad
in
or
xor
stc
lock
aas
mov
lods
psrlw
push
dec
inc
cmp
test
cltd
push
out
mov
add
push
push
icebp
cli
fdivs
lock
aam
mov
sarb
mov
fbld
or
inc
mov
mov
inc
mov
jl
subl
je
add
insl
movsb
lock
jb
sub
rcrl
adc
call
mov
adc
add
add
aaa
in
sbb
std
loopne
xor
push
inc
jp
and
pusha
push
pop
repnz
fisubl
xchg
add
mov
popa
cmpb
add
add
or
data16
mov
mov
sub
aam
pop
rolb
out
neg
add
add
inc
or
mov
cwtl
pushf
cmpsb
movsb
cmc
ret
pop
mov
fs
sbb
add
shlb
add
dec
les
outsb
je
cwtl
adc
push
ss
pop
push
jnp
pop
adc
stos
inc
lock
lods
jae
scas
or
pusha
push
and
add
jnp
push
mov
pop
enter
sbbb
shl
stos
mov
test
fxch
fstpl
fbstp
or
push
roll
and
inc
dec
shl
pop
push
jmp
sarb
inc
cmp
push
dec
into
jae
push
in
scas
mov
iret
das
push
lret
inc
jle
xor
idivl
lds
imul
dec
add
sbb
adc
dec
or
inc
fsubrs
mov
test
and
out
push
idivb
adc
add
pop
insb
shr
test
inc
push
xor
xchg
aad
mov
outsb
fwait
pop
add
jmp
push
pop
or
stos
test
and
mov
ljmp
je
lock
loop
cld
inc
lea
fdivl
sbb
shlb
push
pop
cltd
imul
jmp
pop
and
adc
fs
test
je
sub
push
pop
inc
inc
outsb
jns
fldl
cld
jmp
adc
popa
xor
sub
push
adc
clc
lret
push
andl
xchg
xchg
outsl
cmp
dec
scas
cmpsb
inc
mov
test
push
mov
adc
pop
sub
push
mov
adc
cmp
inc
push
xor
xchg
mov
push
movsb
push
jl
xchg
jmp
and
pushl
outsl
sahf
mov
pop
mov
test
ljmp
sbb
push
xor
xchg
sbb
pop
cmp
push
jbe
and
cmp
push
jns
and
pop
movsl
add
in
push
sub
data16
sbb
call
js
aaa
dec
popl
enter
push
cmp
lret
pop
xchg
adc
add
in
mulb
sbb
xor
imul
or
mov
adc
data16
pop
sbb
mov
inc
and
mov
sub
cmp
fisttpll
pop
call
jbe
fmull
mov
loopne
or
sbb
cmp
xor
jbe
adc
loop
or
dec
xor
inc
xor
inc
mov
mov
fwait
mov
inc
lahf
jb
ret
or
roll
jl
pop
lock
inc
dec
daa
pop
xchg
hlt
pop
aam
aaa
adc
in
fwait
pop
cmp
pushf
push
lock
and
push
jmp
lods
adc
add
popa
mov
cwtl
push
rcrl
out
out
mov
push
cmp
imull
jl
pop
mov
inc
jl
pop
push
push
and
std
sbb
arpl
pop
in
sub
and
push
push
pusha
je
xor
mov
in
inc
xor
mov
fisubrl
stos
push
xor
push
pop
sti
dec
jmp
pop
push
lret
cs
shll
ja
ja
adc
pop
repnz
icebp
cs
clc
mov
jbe
test
ss
test
push
int
loope
popf
cmp
addb
out
push
cmp
mov
subb
cmp
fadd
bound
jno
pusha
push
enter
cmp
xor
insl
jne
cs
add
push
jl
sahf
das
jae
arpl
push
lret
repz
push
je
inc
or
jge
fidivs
push
or
and
jle
cmp
dec
add
sub
sbb
inc
sbb
sbb
cmp
ret
dec
mov
call
cli
mov
mov
sub
cmp
inc
sub
lock
mov
test
je
push
mov
jne
push
or
fmul
icebp
fwait
jne
push
pop
out
dec
jne
sub
mov
jb
cmp
push
in
push
movb
xchg
popf
sbb
pop
mov
pusha
test
or
jnp
sti
push
je
push
dec
jb
push
push
push
fimuls
jl
mov
neg
adc
clc
push
fcoms
cmp
push
loopne
inc
pop
jae
and
pop
inc
sbb
nopl
push
sub
loopne
mov
mov
xor
ja
sbb
jnp
rolb
push
jae
add
xor
adc
stc
jmp
and
dec
loopne
adc
hlt
mov
or
inc
loopne
pop
add
pusha
je
fwait
aad
hlt
fistpll
and
ds
mov
in
or
xchg
mov
hlt
and
sbb
into
jo
dec
mov
imul
pop
jl
push
push
inc
shlb
push
dec
xchg
bswap
inc
jb
add
push
xchg
fcmovu
add
push
lcall
mov
jle
mov
int
test
add
cmpsb
imul
imul
pop
fmuls
fsubr
mov
enter
outsb
sti
adcl
push
mov
inc
int3
xchg
pop
fwait
cltd
in
inc
mov
scas
lcall
push
and
pop
les
mov
add
xchg
int
add
and
cmpsl
loop
pushl
xor
fsubs
add
and
sbb
and
xor
add
and
push
xor
push
cmp
dec
sub
push
push
enter
add
xor
cwtl
inc
in
or
pop
sbb
or
cmp
jne
push
mov
and
testb
jne
mov
add
sub
push
roll
testb
bound
pcmpeqw
idivl
data16
push
loope
mov
pop
mov
std
xchg
fldenv
or
fbld
jmp
mov
and
sbb
adc
push
adcb
xchg
mov
or
or
aam
add
xchg
and
outsb
mov
mov
jecxz
mov
sarb
jb
mov
sbb
lea
movsb
mov
push
adc
call
mov
adc
inc
das
cld
mov
xor
fsubrl
test
in
repnz
and
bound
sahf
aaa
push
mov
inc
shll
jo
cmp
push
rol
ljmp
add
dec
add
gs
int
aaa
test
xchg
pop
jne
lea
orl
testb
dec
or
adc
pop
scas
push
ror
notb
in
or
ret
inc
sbb
sub
adc
cmp
mov
ds
mov
jbe
je
mov
or
outsl
iret
lret
stc
incb
repnz
and
frstor
out
add
jo
iret
cmp
decb
pop
in
clc
pop
jb
add
imul
inc
xchg
out
jge
xchg
rolb
mov
stc
push
adc
ret
pop
scas
mov
stc
xor
lock
stos
and
icebp
jne
es
imulb
xorl
push
fildl
sub
mov
pop
das
je
aad
sub
and
mov
pop
out
push
ljmp
addr16
adc
shrb
inc
stos
jae
sub
jns
shlb
jne
lret
clc
push
fcmovb
pop
or
or
lods
pusha
sahf
ljmp
sahf
jne
or
jmp
leave
bswap
add
outsb
and
or
adc
aam
lods
dec
insl
decb
push
push
pop
sub
mov
push
cmp
ds
adc
inc
test
pop
xor
push
or
xchg
out
jge
loop
mov
cld
add
test
enter
std
xor
xchg
decl
add
push
xchg
into
and
sub
je
pusha
push
shrb
adc
add
int
add
scas
jo
pushl
ds
sbb
push
out
orb
int3
lock
and
loopne
jnp
notl
xchg
and
ret
rcrl
lods
cwtl
cmp
nop
gs
je
enter
pop
fs
orl
jecxz
and
push
push
push
pusha
aaa
mov
insb
in
xchg
ret
ja
adc
jecxz
and
outsb
outsl
or
mov
je
cmp
je
testb
jne
mov
pop
stc
loop
push
cmp
xor
sbb
mov
push
push
push
lock
push
sub
or
sub
inc
pop
xchg
jmp
lea
inc
fsubr
or
sub
dec
leave
add
xor
sub
push
add
lock
mov
adc
lock
and
cld
lock
pop
aam
hlt
cmpsl
addb
sahf
push
mov
mov
xchg
push
xor
mov
ss
mov
fiadds
mov
sbb
add
add
push
mov
out
mov
into
lea
mov
sarb
mov
push
testl
leave
inc
push
je
rcrl
push
mov
pop
jl
testb
lds
inc
sub
add
adc
jne
add
and
leave
popf
and
subb
insb
aam
or
inc
mov
cmp
adc
jbe
add
add
pop
jo
sbb
dec
subl
jns
push
sbb
push
imul
clc
xchg
jge
jne
enter
pop
fisubrl
add
xchg
cs
cmpsl
movsl
dec
mov
cmc
adc
sub
outsl
adc
outsb
sbb
jl
mov
cwtd
addr16
xchg
sbbl
and
fs
push
repnz
cwtl
fidivrs
sub
lods
sub
push
test
sub
fimuls
mov
je
sbb
pop
fisubs
add
js
xor
push
push
and
dec
push
lea
mov
cwtl
push
adc
xor
sbb
ret
sbb
lret
push
or
dec
sbbb
sbb
lods
add
adc
pushf
xchg
fcoms
cli
les
add
mov
xchg
pop
xor
pop
and
popa
lock
push
adc
adc
scas
add
fsubrl
mov
imul
arpl
and
ret
lods
sbb
lahf
or
mull
ja
cmp
inc
std
mov
sbb
aas
pop
js
lods
sub
or
dec
cmpsl
add
mov
inc
or
jne
in
pop
loopne
or
pop
ja
insl
and
imul
es
jg
adc
dec
xor
arpl
mov
mov
pop
rolb
mov
pusha
pop
addl
or
mov
adc
add
add
ds
pop
add
addr16
or
adc
xchg
into
jecxz
popl
lock
sbb
loopne
cmp
cmp
out
lcall
lret
push
mov
push
add
pop
out
pop
add
scas
shl
lcall
sbb
sbb
jecxz
loope
inc
xchg
sbb
dec
cmp
adc
mov
mov
fwait
cmpl
adc
push
cli
add
por
and
xchg
int3
mov
shlb
sub
mov
jo
lret
pop
sbbb
push
addl
in
mov
data16
xchg
out
push
dec
pop
mov
movsl
add
idivb
je
mov
and
pop
call
adc
out
jo
push
es
pop
loope
or
mov
aam
sti
cmp
stc
jo
insb
sbb
pop
insl
adc
xor
mov
insl
mov
mov
inc
cmp
pop
add
test
ljmp
aas
aam
and
nop
add
inc
std
je
or
test
inc
sahf
xchg
cmpsb
jnp
daa
jae
add
lret
xor
pop
push
rolb
inc
or
test
or
mov
or
adc
push
dec
adc
jmp
je
repnz
push
sbb
jecxz
adc
ret
cs
sub
fst
push
aam
gs
mov
sbb
out
and
mov
xor
inc
add
add
js
insl
dec
push
dec
aas
xor
icebp
add
push
in
sub
stos
sbb
or
jl
or
sbb
mov
push
addr16
add
roll
and
ret
cmp
sbbb
or
jl
xchg
ret
xchg
subl
push
jecxz
sbb
xor
push
cmp
adcl
xor
aam
fwait
imul
and
pop
sub
sub
lods
mov
addr16
inc
scas
xchg
loope
push
in
jecxz
std
decl
mov
add
cs
mov
mov
stc
cmp
pop
mov
cmp
sbb
fldl
xchg
dec
xor
call
mov
stos
mov
shrl
aad
push
push
jo
bound
push
mov
pop
cmp
cmp
repz
or
xor
push
sub
adc
push
or
and
xchg
test
inc
loope
mov
or
push
loopne
add
lret
stos
rclb
lret
std
push
and
in
lods
jno
fbld
mov
les
in
sub
sub
adc
inc
sbb
mov
pop
mov
xor
or
dec
xor
sub
xor
and
jo
sarl
adc
mov
jp
insl
inc
sub
lods
adc
aaa
es
push
xor
out
aam
imul
test
and
inc
xor
push
inc
cwtl
shlb
lock
xor
pop
inc
xchg
dec
add
sbbl
inc
pop
xlat
mov
ror
push
jno
inc
outsb
jl
aas
sbb
or
jmp
pushl
ret
pop
mov
lea
pop
adc
pop
dec
ss
mov
rcll
cmp
or
xor
ret
out
dec
sub
or
roll
jns
ss
push
push
push
mov
sbb
fistpll
gs
adc
fmull
clc
xor
cld
and
insb
sub
inc
ret
xor
loopne
jecxz
lret
xchg
fistpll
jl
flds
lds
push
dec
outsb
mov
sbb
or
scas
data16
add
aad
cmp
jmp
push
test
iret
in
loope
loop
xchg
inc
mov
fsub
inc
mov
mov
push
mov
xor
loope
lods
jl
dec
cmp
and
jl
rorl
inc
sub
cmp
push
not
pop
lock
jmp
add
arpl
in
clc
mov
inc
push
inc
andb
js
call
xor
jg
fdivs
dec
jo
lods
mov
add
sub
shr
pop
fstl
mul
jl
jp
mov
push
movb
xor
bound
test
cmp
cmp
cmp
lods
jnp
mov
inc
or
lock
testb
out
xlat
xchg
or
add
xchg
jno
mov
sar
add
xor
and
xor
mov
or
insl
fnstcw
insb
cmpsb
xchg
xorb
sub
pop
sbb
mov
test
mov
push
xor
inc
lret
jb
scas
push
mov
in
stc
push
sbb
sbb
shll
test
xor
fstpl
add
and
cmp
add
add
inc
and
or
add
sbb
out
out
push
push
test
idiv
je
push
cltd
add
scas
xchg
jbe
aad
push
cmp
fbstp
add
sub
xor
cmp
or
inc
loope
push
mov
call
movlhps
push
movb
mov
mov
push
inc
loop
jo
push
xor
push
aam
pushf
push
data16
pop
and
pop
enter
inc
or
cld
nop
jmp
gs
fcompl
lods
dec
cld
pushw
pushf
pushfw
inc
xlat
adc
push
aam
mov
fistpl
push
mov
mov
mov
sahf
and
jnp
add
shlb
pop
ret
mov
jae
push
jo
jmp
xor
imul
push
sbb
lods
mov
imul
sti
sub
cwtl
ret
jnp
and
cwtl
mov
mov
adc
or
call
adc
lea
jp
push
mov
cmp
mov
mov
pop
pushf
mov
dec
stos
imul
popf
add
cwtl
cwtl
lcall
test
xchg
pop
jns
and
fs
cmpsb
push
addl
test
sub
inc
faddl
mov
xor
arpl
lock
mov
xor
inc
movsb
adc
mov
add
ret
push
xchg
adc
pushl
imul
outsl
inc
push
aad
sbb
pop
jle
into
add
adc
cmp
movsb
mov
addl
ljmp
out
pop
inc
js
sub
xchg
scas
scas
sub
cmc
ds
xor
insb
push
mov
lods
test
in
out
or
mov
cld
sbb
pop
popa
sub
jbe
and
dec
cli
imul
mov
testl
cmp
pop
jae
or
cmpsl
pop
jg
sub
xchg
jo
aas
add
or
sub
sbb
cmp
dec
insb
mov
scas
rcrb
lods
andl
sub
dec
push
push
pushf
push
lods
lea
lea
add
jo
xor
mov
push
mov
add
sub
cmp
adc
add
xchg
mov
and
popf
add
cmp
cmp
mov
sbb
loope
in
inc
roll
cld
cmp
test
lods
mov
scas
lea
loop
mov
push
cwtl
scas
sbb
add
sbb
sbb
push
pop
and
aas
dec
inc
mov
int
jbe
fmull
pop
adc
js
popf
enter
xchg
inc
cli
push
cld
dec
mov
xchg
clc
call
outsl
jge
movl
pop
jbe
insb
shr
inc
add
mov
jecxz
dec
ss
sbb
repnz
mov
push
iret
jo
dec
sub
pusha
insb
std
adc
decb
cmp
data16
fucom
pop
xchg
popa
or
adc
push
mov
test
loopne
mov
lods
lock
cmpsl
inc
adc
bound
clc
inc
popf
mov
mov
sbb
jecxz
pushf
repnz
pop
adc
sub
xlat
jbe
rcr
xchg
jne
add
jns
inc
sub
mov
jo
jnp
jge
push
das
add
insb
or
js
cld
lea
push
push
int
adc
inc
xchg
add
stc
push
inc
sbb
mov
inc
mov
not
adc
fcmovnb
pop
mov
add
xlat
cmp
push
lcall
add
aas
cmp
pop
jmp
cmc
movl
movsl
addl
insb
cmp
sbb
xchg
ljmp
xor
ud0
mov
sahf
mov
jl
push
add
test
add
inc
cmpsb
andb
mov
push
sub
je
adc
movsb
mov
dec
sub
sbb
or
inc
push
adc
sbb
add
mov
push
sub
push
pop
mov
lea
sbb
mov
inc
and
cmp
mov
inc
aaa
jbe
fimuls
add
mov
or
loopne
hlt
rorl
jmp
adc
addl
pusha
mov
jo
dec
in
outsb
jb
xor
cmp
or
dec
inc
outsb
pusha
jo
out
fsubs
sbb
dec
dec
jmp
stc
jp
mov
pop
js
bound
adc
sub
or
adc
add
lahf
mov
and
cmc
jg
push
popa
xor
mov
mov
mov
xchg
cmp
stos
push
stos
jge
mov
mov
cltd
jp
icebp
mov
in
lea
loope
or
push
jb
stc
push
jns
pop
dec
pop
mov
subl
and
add
orb
mov
push
jo
mov
xor
test
add
or
or
adcl
push
lea
lock
insb
mov
mov
clc
aam
aad
bound
repnz
aad
push
xchg
mov
or
lock
loopne
pop
testl
add
out
lret
mov
js
xor
push
push
or
adc
push
call
inc
js
gs
dec
hlt
daa
icebp
mov
jge
xor
loope
xchg
popf
and
jo
sbb
pusha
xor
xor
and
jle
jmp
or
xchg
push
or
mov
add
sub
adc
lret
add
cmp
adc
in
mov
fbld
into
add
mov
testl
lcall
xor
mov
push
or
dec
js
and
rcrl
dec
adc
mov
shlb
insl
jne
bound
loope
cmp
jo
mov
outsl
rolb
mov
ret
push
push
int3
cwtl
cli
and
out
xchg
xor
fdivrl
sbbl
sub
xor
push
in
or
add
xor
fsubs
xor
cwtl
jae
cmp
lea
aad
dec
xchg
stos
in
dec
mov
mov
sbb
je
bound
gs
dec
fadds
es
jo
cld
sbb
andl
dec
jge
mov
jae
mov
add
cmpl
add
inc
test
test
out
pusha
add
mov
or
inc
and
dec
pop
lods
or
mov
mov
xchg
add
xor
sub
addl
dec
jnp
orl
int3
sti
sub
loope
add
xor
lret
leave
xchg
bound
or
and
in
js
and
pop
insl
xchg
push
inc
or
or
testl
or
pop
sub
push
xor
ret
out
xchg
mov
pop
andl
mov
or
lock
cmp
pushl
push
push
and
fisubs
pcmpeqb
lret
and
dec
pop
mov
sbb
push
jbe
loopne
add
ret
testb
push
xorb
rcrb
sub
pop
jo
push
push
out
sbb
jno
mov
data16
adc
outsl
loope
mov
mov
add
je
or
je
or
sub
xchg
adc
jo
movsl
adc
les
leave
push
or
add
ss
jne
adc
or
xchg
jnp
mov
push
jmp
cmp
in
je
push
adc
adc
dec
xor
inc
adc
inc
cmpsb
lds
adc
add
lahf
movzwl
dec
sub
lahf
jbe
stos
inc
jmp
lods
push
push
adc
mov
adc
outsb
push
push
inc
mov
or
dec
gs
add
je
ret
mov
or
sbb
inc
pop
or
adc
cmpsb
push
xchg
jp
pop
pop
inc
pop
test
rolb
and
dec
sar
cmpl
les
mov
or
and
aas
aam
or
je
sub
sub
adc
add
pop
add
push
adc
in
mov
enter
xor
daa
or
push
adc
sub
jno
fcmovnb
fs
ds
in
sbb
dec
pop
ficoml
sarb
inc
ja
sbb
test
sbb
pop
test
daa
push
arpl
mov
adc
or
sbb
sub
cmpsb
mov
mov
push
pusha
daa
adc
stc
inc
and
or
in
mov
xchg
dec
add
fwait
nop
jo
sbb
je
add
lahf
lea
pop
lcall
cmpsl
sbb
fisubs
push
xor
cltd
sub
fs
pop
fadd
cmp
push
loopne
push
push
mov
push
int3
icebp
jbe
sbb
addr16
stos
xor
call
ret
jl
xchg
xor
jge
pushf
xchg
xchg
pop
fmull
cs
lds
and
xchg
adc
les
fs
push
and
xchg
cltd
mov
cmp
test
in
repnz
mov
inc
jb
cltd
rorb
int
aam
push
lock
jae
call
sbb
pusha
and
inc
sahf
call
mov
jecxz
inc
cmp
pop
jge
dec
jle
push
cmp
call
mov
ret
in
cmp
mov
xchg
fcoml
in
and
and
in
mov
mov
mov
int
int3
aam
inc
xor
dec
aas
mov
push
sbb
fsub
push
fisttpll
pop
shrb
push
rorb
sub
jl
dec
sahf
xchg
xor
jmp
into
mov
sbb
or
and
ds
dec
fisubl
mov
sbb
or
sub
loope
fmuls
pushf
popa
push
jnp
je
mov
adc
or
aad
repz
in
jl
movsb
xor
or
jmp
jle
add
push
dec
ret
aaa
rcl
jp
imul
push
subl
sub
mov
and
add
push
mov
xor
mov
test
push
mov
and
jp
shrl
adc
add
push
xor
inc
enter
aam
mov
push
jne
jle
mov
mov
pop
loopne
dec
in
sbb
in
sbb
popf
cmpsb
cmp
fcoml
fsubs
test
mov
mov
push
jl
outsb
jmp
fsubrs
or
mov
and
inc
jb
cwtl
je
and
pop
sbb
sbbb
mov
xor
pop
jle
loop
add
inc
inc
add
or
mov
pop
adc
adc
dec
sub
lcall
jp
out
inc
cmp
sbb
loope
pop
push
or
push
push
xchg
pop
pop
mov
fdivrs
stos
inc
adcl
push
sub
mov
mov
push
cmp
cmc
adc
sub
or
push
push
push
imul
pop
add
add
sbb
hlt
call
xor
add
or
cld
cmpsl
mov
mov
enter
adc
mov
lret
inc
pop
adc
ret
in
dec
pop
or
xor
rcrl
into
pop
jp
subb
dec
daa
cli
mov
xor
mov
dec
pusha
icebp
addr16
inc
sbb
cmp
adc
mov
test
push
ljmp
mov
push
sahf
shll
push
add
cmp
leave
inc
adc
or
adc
dec
xor
inc
orb
add
and
xchg
sub
push
xchg
pop
dec
inc
lods
add
add
cmp
loopne
jg
cmp
jmp
call
jo
cmp
fucomip
mov
cs
rorb
ja
jno
add
loop
xchg
add
les
loopne
and
dec
rorb
add
jg
push
dec
mov
jne
es
loope
add
add
in
dec
or
test
cld
insl
arpl
xchg
sub
mov
mov
cs
ds
jp
sbb
push
movsb
jg
cmp
arpl
push
mov
je
dec
cmp
xchg
push
jg
mov
dec
inc
or
mov
outsl
sarb
sbb
les
push
xchg
and
inc
adc
add
pop
push
dec
pop
test
inc
jecxz
xor
adc
and
ss
sbb
call
adc
pop
push
test
pop
outsb
xor
inc
movsl
inc
cmp
cmpsb
sbb
sbb
or
xchg
es
push
pop
popa
pop
or
cwtl
sbb
dec
or
adc
inc
sub
jle
movsl
out
daa
mov
mov
les
adc
mov
mov
jle
push
scas
mov
inc
mov
adc
pop
sbb
mov
xchg
or
push
cmp
mov
push
sub
xchg
push
jmp
xor
xchg
xchg
loopne
aaa
add
testb
pop
or
xor
lea
shrl
rorl
call
mov
rorl
shr
jecxz
jmp
sbb
cmp
pop
inc
push
mov
xchg
mov
es
mov
je
add
scas
je
mov
push
out
cli
call
cmp
fsts
adc
xchg
cmpsb
sbb
jnp
add
push
jo
xorb
sub
mov
mov
or
popa
cli
les
add
sti
and
add
addb
dec
fcomp
insb
dec
cli
add
pop
je
or
push
cmp
mov
mov
loopne
mov
mov
nop
sub
dec
movsb
push
cld
mov
push
sbb
into
xchg
icebp
aam
lcall
xor
inc
lret
add
inc
in
mov
xchg
sbb
fnstenv
push
pop
sub
adc
fiadds
or
inc
sarl
ss
push
mov
sarb
pushf
push
adc
and
call
pop
lods
sti
inc
pop
les
inc
clc
push
cld
push
dec
or
sbb
add
xchg
repz
notb
imul
jmp
jmp
jb
sbb
mov
or
pop
rolb
int3
mov
ja
push
inc
add
sbb
or
rcrb
add
ficoml
out
dec
or
je
dec
out
dec
fistps
daa
int3
push
mov
fs
pusha
enter
sbb
lock
sbb
push
insb
daa
in
add
iret
add
xchg
or
es
add
and
and
stc
jl
pop
push
lock
xchg
add
fstps
cmp
ja
scas
add
mov
cld
pop
xor
loopne
push
sub
push
push
leave
xchg
cmp
xor
and
lret
push
repnz
xor
push
mov
sub
cmp
sub
jno
ret
or
cmp
dec
inc
cmp
sbb
mov
or
adc
jge
xchg
add
inc
xchg
or
mov
sahf
and
dec
xor
addb
sti
loope
int3
inc
xchg
mov
pop
lret
mov
addr16
push
dec
in
push
xchg
or
cs
dec
jmp
dec
cmp
dec
shrl
xchg
mov
js
fs
push
mov
shrl
mov
gs
scas
xor
stc
cmp
cld
test
sahf
out
aam
test
mov
mov
dec
out
adc
cli
push
pop
call
mov
dec
adc
rorb
add
inc
add
mov
push
sbb
dec
adc
or
and
mov
inc
scas
mov
inc
mov
insb
pop
lret
dec
loopne
jl
xor
movsl
or
sbb
mov
mov
inc
or
sbb
test
inc
lods
push
mov
push
stc
call
call
cmp
out
push
xlat
push
movsb
cmp
mov
out
sbb
rolb
jecxz
orl
loopne
clc
dec
sarb
xorl
or
test
xchg
rorb
loopne
inc
xor
xor
out
loopne
shlb
in
push
in
scas
test
cmpsb
call
xor
cmp
idiv
roll
mov
orl
push
sub
add
push
out
xor
xchg
fdivp
ds
xor
adc
push
repnz
cmp
and
loope
repz
inc
dec
cwtl
cmp
lock
call
lods
cld
add
sub
jne
pop
add
push
sub
mov
daa
sbb
push
pop
dec
inc
sahf
sbb
xor
jne
xchg
mov
sbb
loopne
dec
orb
lcall
int3
or
jne
loopne
ja
mov
mov
roll
lock
mov
into
aam
and
cli
in
xchg
test
sbb
sti
mov
jmp
add
movsb
adc
in
push
dec
aam
dec
xor
rcrb
xchg
pusha
daa
sbbl
mov
mov
sub
mov
push
repz
adc
or
loopne
xlat
insb
add
push
int3
mov
xor
cmp
or
in
inc
adc
stos
and
mov
and
cld
or
xchg
push
jb
sarb
jo
jb
push
jbe
out
dec
jbe
push
das
pushl
mov
push
add
adc
fstp
adc
jl
cmp
jae
testl
and
out
pop
cmp
jne
pop
adc
mov
xor
insb
je
hlt
pop
adc
mov
cmp
fwait
pop
rorb
or
stos
inc
jmp
push
xchg
fisubl
sbb
loopne
mov
xor
push
or
lods
out
enter
popf
hlt
loopne
jl
and
add
repnz
mov
enter
fiaddl
cmp
jge
shrb
sbb
sahf
cmp
and
and
jmp
pushf
decb
add
and
jp
adcb
xchg
add
dec
or
jb
mov
shrb
js
movsl
push
mov
and
fsub
enter
inc
cmpsl
adc
dec
mov
ds
and
sbb
aam
add
pop
or
lock
adc
lcall
add
push
in
repz
scas
inc
inc
or
nop
mov
push
outsl
jmp
pop
rclb
dec
add
mov
imul
xor
sti
insb
call
imul
and
adc
pop
js
lock
jns
jne
iret
fstpl
jge
sbb
push
push
cld
jecxz
mov
arpl
sub
std
fadds
cli
add
mov
xor
xor
push
lds
das
sbb
dec
sub
cmp
xor
cmc
pop
push
inc
push
iret
cmp
popa
subb
imul
pop
add
stos
inc
jno
aaa
push
leave
adc
inc
add
dec
mov
mov
inc
sbb
nop
pushf
or
clc
push
pusha
pop
push
stc
add
cld
cmp
add
dec
dec
stc
add
push
xchg
inc
test
dec
add
cmp
jo
ds
cmp
jbe
mov
cmp
push
sbb
sbb
xor
push
pop
adc
add
arpl
in
inc
xorl
jbe
mov
add
adc
xor
pop
sbb
in
iret
xor
daa
and
mov
adc
pop
and
xchg
add
imul
inc
xchg
sbb
xor
xchg
cs
out
xchg
add
mov
cmc
sbb
mov
lock
push
cmp
jb
cmp
cmp
sarl
pop
std
xor
inc
jmp
xor
mov
ja
pop
aaa
cmp
push
push
push
nop
mov
fldl
mov
cli
or
fiadds
mov
ret
add
daa
dec
clc
jmp
stos
or
sub
data16
push
xor
or
mov
jle
push
js
mov
int3
inc
pop
ret
xchg
int3
sbb
jmp
push
daa
adc
dec
test
clc
add
adc
adc
addb
cmp
cmp
inc
sub
jo
inc
sub
push
jmp
test
inc
addb
or
adc
mov
inc
mov
xchg
xchg
mov
xor
sub
and
popa
sbb
push
xchg
jo
dec
lea
stos
mov
leave
mov
pop
jle
lcall
arpl
add
inc
fwait
or
add
movl
add
ds
pusha
sbb
xor
push
sbb
neg
imul
push
dec
inc
jns
fs
adc
cmp
pop
jae
mov
push
outsb
pop
ret
gs
imul
popf
xchg
xchg
and
imul
shl
mov
push
push
inc
dec
add
dec
and
sbb
mov
scas
loopne
pop
add
xor
lock
mov
and
pop
imul
add
jno
push
pop
pop
sbb
add
js
jmp
sbb
or
fcoml
enter
shlb
adc
mov
iret
test
jb
and
inc
mov
or
clc
push
inc
sub
dec
sarl
stos
mov
adc
add
add
or
push
and
mov
inc
pop
cmp
xchg
int3
cmc
pop
sub
inc
push
sbb
push
adc
bound
addb
sub
es
jge
test
idiv
ss
xchg
adc
sbb
or
sub
outsb
stos
mov
daa
xor
add
add
test
sub
add
scas
mov
xchg
push
dec
and
clc
push
jbe
inc
cmp
fsubrl
or
jg
sbb
push
mov
loopne
push
outsl
andps
inc
add
shll
push
cmpsb
loop
pop
or
jg
rcrb
lods
xchg
cmp
add
enter
stos
insl
mov
clc
cmc
fsubs
popf
cmp
xor
sbb
jl
push
clc
rcll
movsb
std
add
push
std
ljmp
cld
or
push
out
aam
sbb
sub
push
lods
cmpsb
mov
push
mov
inc
xchg
repz
mov
jp
and
jl
pop
fldl
add
push
push
shrb
sarb
ret
insb
cmp
enter
leave
pop
iret
test
lods
in
stos
mov
sar
cmpl
xor
pushf
std
sarb
rcrl
movsb
xchg
or
push
mov
adc
pop
cmp
cli
pop
push
cld
push
xor
into
xchg
pop
sub
push
ret
jbe
neg
sbb
inc
je
xor
imul
mov
enter
pop
cmp
push
mov
clc
ret
sbb
rorb
sbb
test
adc
push
mov
dec
add
push
insb
pop
push
sub
pop
sti
jl
test
lcall
cmp
cmp
inc
adc
inc
or
mov
mov
ret
mov
jns
push
sbb
or
sbb
push
sbb
jle
dec
add
jmp
dec
mov
xchg
cmp
push
movsb
pop
fxch
shll
push
xor
sub
das
je
addr16
or
jbe
ja
test
call
xchg
sub
in
pusha
sub
cmp
inc
les
cld
dec
dec
sub
cmp
sub
jecxz
into
add
or
inc
mov
add
rolb
add
stos
adc
movsl
stos
push
js
sub
push
mov
data16
decl
andb
jno
jg
popf
cmp
push
lods
fiadds
shld
and
es
ljmp
add
adc
xchg
ss
mov
insb
pop
dec
out
sub
sarb
xlat
fdivp
pop
or
into
jp
aad
adc
loopne
dec
sub
add
int3
scas
inc
pop
push
add
add
icebp
imul
pop
add
jb
movsb
push
mov
scas
push
jmp
push
test
into
fcoms
mov
fiaddl
test
and
sahf
dec
call
sbb
adc
ret
pop
fisttpl
or
je
cmp
push
jmp
cmp
cmp
sbb
cmc
cld
jl
in
pop
scas
adc
cmp
xchg
test
or
leave
rol
rorl
adc
and
dec
push
xor
lods
cld
pop
inc
jbe
push
daa
pop
cmp
sub
lahf
push
in
pop
mov
sti
rep
bound
sbb
inc
xor
or
adc
pop
jp
or
sbb
cmp
jae
shl
shlb
add
or
arpl
push
add
mov
test
loope
test
and
jne
push
push
push
push
cltd
imul
rcl
mov
pop
and
loopne
adc
push
loop
jbe
je
inc
sub
pop
loop
and
sub
inc
cmp
push
xor
push
inc
or
xchg
testb
mov
adc
movsb
jle
inc
xchg
pop
mov
mov
daa
inc
or
cmp
xor
out
xor
shlb
shlb
and
js
push
push
cs
push
rcrb
sub
jns
push
daa
fcoml
clc
push
mov
mov
and
xlat
sub
cmp
dec
adc
call
popa
pop
cmpxchg
jmp
mov
jl
dec
test
push
inc
popa
shlb
sub
sub
loopne
and
aam
xor
je
cmovne
repnz
inc
pop
jno
or
pop
mov
rcr
inc
rcrb
clc
pop
mov
xor
add
lret
clc
xchg
sub
mov
push
push
mov
mov
jp
rcrl
out
stos
xchg
sahf
adc
mov
mov
call
mov
hlt
clc
cmp
sbb
pushf
orb
mov
dec
push
mov
push
adc
adc
adc
mov
jo
call
cmp
icebp
gs
push
sbb
scas
addl
push
push
cmp
push
adc
arpl
and
add
fs
add
mov
bound
cwtl
popa
xor
cmp
sti
dec
or
inc
and
sarb
dec
jne
cld
loopne
mov
add
mov
sbb
add
push
inc
sbb
mov
xchg
xor
push
and
add
hlt
jno
push
stos
push
std
jo
mov
jge
je
mov
bound
testl
cmp
jno
xchg
cltd
cmp
jl
subb
sbbb
push
jecxz
push
cwtl
push
icebp
subb
bound
sbb
and
push
dec
test
inc
cmp
clc
or
or
jecxz
ljmp
shl
push
sub
xor
call
je
in
mov
ror
insb
vminss
dec
mov
shl
jl
movb
scas
pop
or
adc
add
and
and
mov
sub
xor
mov
js
nop
movb
jle
movsl
xchg
inc
adc
movsl
ljmp
ds
mov
push
add
add
insl
movsb
lret
popa
insb
loope
pusha
scas
daa
insl
insl
push
adc
imul
stc
jb
jg
xorl
dec
push
and
pop
add
pushf
or
outsb
icebp
mov
cld
cmp
je
sbb
je
pushl
shr
adc
push
clc
jmp
cmp
jbe
or
add
add
insb
ret
inc
cmpsb
test
in
adc
sub
jecxz
dec
push
sbb
faddl
or
in
mov
rorl
adc
nop
icebp
sbb
jmp
pop
and
dec
lods
and
addl
jge
push
and
ja
lea
mov
fiadds
ret
jne
sahf
pop
icebp
or
mov
or
sub
cmp
push
pop
or
in
pop
pop
mov
pusha
lea
add
xchg
ret
or
push
scas
testb
mov
sbb
test
pop
sbb
or
adcb
pop
arpl
add
push
mov
pop
rolb
sub
mov
pop
inc
sbb
imul
add
and
xchg
ret
jo
jo
pop
movsl
push
or
lret
pushf
xor
and
and
testb
cmp
stos
jmp
dec
ss
arpl
dec
add
dec
cmc
push
mov
cwtl
outsb
sar
lea
jp
pop
xor
sahf
xchg
adc
or
push
cmp
jb
pushl
ja
inc
adc
sbbb
pop
jmp
xor
jae
xchg
or
mov
inc
in
and
scas
mov
rcl
adc
push
dec
inc
in
addb
xchg
mov
xchg
xorb
xor
cmp
mov
sub
mov
jo
mov
or
inc
and
imul
jecxz
mov
cmp
jle
push
ffreep
inc
lcall
pop
ret
cmp
cmp
push
leave
test
movsl
pop
pop
jp
push
mov
pop
xor
jmp
add
movsb
pop
and
jbe
jmp
nop
sbb
dec
pop
jmp
mov
pop
cli
outsb
roll
mov
or
imul
in
add
or
out
xor
xor
adc
stos
je
jl
jecxz
sbb
daa
or
and
fsts
rclb
sub
and
cmp
mov
in
fmuls
and
cmp
mov
fisubl
nop
arpl
adc
add
sub
cmp
dec
enter
add
mov
lahf
jmp
imul
and
pop
leave
pop
jb
pop
mov
lret
out
adc
inc
or
pop
into
or
les
int3
js
add
sahf
pop
jne
out
test
cmp
and
push
pusha
enter
xchg
add
jg
mov
outsb
insl
jg
pop
fs
aam
mov
xchg
mov
test
dec
lock
push
add
ss
test
lcall
add
inc
shlb
xchg
sbb
mov
mov
aas
and
jb
and
sbbb
jl
sbb
sbbb
mov
es
jb
sbb
sub
daa
push
sbb
and
sub
push
cmp
and
push
cmp
pushf
or
pop
in
iret
das
jmp
push
push
int3
xor
call
xor
or
xor
loopne
negb
or
xor
mov
mov
mov
sbb
scas
lea
rcr
fcmovu
cmp
or
jmp
push
xorb
push
inc
or
or
sbb
add
mov
sbb
adc
rclb
jno
push
adc
cld
ds
popa
lcall
inc
daa
js
les
add
out
insb
xchg
mov
out
sub
mov
pop
sahf
sub
xchg
xchg
adc
adc
mov
mov
push
mov
ja
ja
prefetcht0
mov
in
xor
adc
sysexit
ja
add
fbld
add
and
int3
push
xor
mov
lods
rcl
bound
add
in
rorl
pop
cs
insb
jb
push
sbb
xor
aam
shr
scas
push
inc
pop
lcall
and
lret
inc
cmp
int3
push
repnz
adc
ds
pop
adc
insl
pop
push
sbb
aas
enter
lahf
shlb
sub
ficompl
sbb
push
add
push
sbb
mov
outsl
cld
pop
add
xchg
inc
mov
or
jne
push
test
adc
je
xor
lods
or
in
xchg
in
aam
push
popf
dec
pop
call
loopne
xchg
in
loope
imulb
loop
out
je
int
test
push
shll
xchg
sahf
addb
mov
pop
incl
cmp
lock
repz
inc
sbb
lcall
in
inc
sub
sbb
cld
or
je
les
inc
cs
pop
gs
arpl
push
push
adc
stos
xlat
lock
mov
inc
repz
cmpb
jae,pn
fdivl
xchg
outsb
sbb
pop
sbb
repz
fsub
add
scas
cmp
or
adc
leave
lds
dec
jmp
cmp
push
shlb
insl
je
lock
sbb
loopne
jecxz
mov
add
mov
push
pop
bound
lret
ficomps
xor
and
filds
out
pop
movsl
andl
int
and
dec
inc
or
fisubrl
adc
stos
add
and
test
nop
sbb
add
or
cmp
mov
in
call
out
or
mov
mov
insb
push
jnp
sub
pop
xchg
xchg
shlb
xor
xchg
add
inc
push
push
lea
add
loope
dec
mov
lea
mov
out
add
repz
add
pop
jl
jp
and
movsb
xor
fcoml
or
add
jns
or
or
ljmp
fsub
or
or
in
adc
jns
or
mov
pop
mov
fsubl
or
xor
or
sbb
xchg
stc
mov
mov
shr
sub
sub
cltd
pop
cld
fadds
or
or
xor
ret
push
xchg
xchg
ljmp
ss
call
loope
mov
fstp
cld
lock
call
repz
std
adc
ret
or
stos
cmpb
enter
inc
loop
lock
jbe
in
je
setl
adc
adc
rorb
jb
ljmp
shrl
lock
or
or
roll
add
sbb
repz
addb
mov
cli
idiv
adc
cmp
jl
cmp
jle
cmp
push
jp
or
pop
add
int
inc
cmp
aas
lods
mov
pop
mov
dec
inc
pop
cmp
mov
mov
sbb
xor
je
cmp
sbb
mov
je
jne
pop
addb
sbb
add
mov
hlt
inc
iret
jae
popa
imul
or
iret
call
cmp
mov
testl
push
cmpl
jo
pop
call
adc
cmp
pusha
in
movsl
push
stos
enter
sub
sub
bound
sahf
jl
push
dec
test
orb
test
fsubs
inc
cmp
out
rcll
int
adc
add
inc
mov
loopne
pop
and
inc
js
cmp
loope
jmp
enter
daa
pop
and
sub
add
sbb
test
call
pop
test
int3
mov
jle
xchg
int3
repz
rolb
jmp
or
add
scas
mov
xchg
loopne
adc
sub
mov
jne
jbe
mov
xchg
js
xor
dec
sbb
rcr
sar
pop
mov
and
and
sub
stc
push
dec
or
outsb
rorb
sub
cmpsb
imul
sub
xchg
int3
repnz
fbstp
cmpsl
adc
jne
pop
rorb
pop
inc
loopne
loope
ret
sbb
sbb
xor
fcomps
dec
movsl
push
loopne
or
mov
fcmovu
aas
arpl
add
je
popl
in
sub
jnp
je
sub
int3
push
sti
xchg
pushf
mov
inc
or
sbb
or
or
imul
and
push
fs
xor
dec
cmp
sub
mov
outsb
cmp
repz
pop
pusha
fs
fwait
sub
push
cmp
add
in
stc
adc
cmp
lea
mov
pop
mov
mov
add
push
std
mov
dec
je
adc
xchg
push
push
jne
push
bound
stos
push
mov
hlt
movsb
pusha
xor
sub
ss
dec
movsl
pop
add
lea
cmp
add
ret
imul
dec
and
je
mov
lret
xchg
scas
adc
sbb
sub
push
pop
or
xchg
not
push
loop
rclb
ret
addb
inc
jecxz
sub
jle
and
add
push
jo
cmp
inc
outsb
or
inc
mov
add
ret
out
dec
fs
nop
add
sbb
or
cmc
push
enter
jbe
jmp
push
por
pop
jb
sbb
xorl
sbb
pop
xchg
add
loope
pop
xlat
arpl
mov
sub
dec
jnp
jmp
sarl
fistl
cmp
cmc
test
mov
mov
repz
inc
pop
xchg
jo
push
loop
jmp
in
sbb
andb
add
sub
in
rolb
adc
sbb
les
inc
add
mov
pop
rcll
pop
in
cli
jg
mov
fwait
movb
fmull
xchg
call
jmp
addl
inc
sub
cmp
jecxz
add
lea
adc
jne
or
mov
mov
push
aaa
mov
test
je
or
je
cmp
mov
jle
adc
jg
pop
push
or
arpl
push
incb
xor
xchg
cld
inc
ja
sti
mov
add
xor
mov
mov
pop
cmp
add
and
in
push
push
jne
in
dec
xor
sbb
or
sub
lcall
jmp
and
push
sub
jne
arpl
pop
je
fwait
add
scas
and
loop
pusha
jo
fs
inc
into
divl
push
lods
add
icebp
cwtl
cwtl
push
idiv
xor
mov
push
and
and
and
jno
lea
sbbb
aaa
lock
pop
cltd
mov
pop
adc
mov
mov
aad
scas
arpl
dec
insb
jmp
cmc
cmp
ja
adcl
mov
loopne
fdivrs
add
test
cmp
dec
pusha
mov
mov
push
push
jle
mov
sub
add
jle
enter
xchg
sub
inc
xor
xchg
push
in
push
or
push
les
inc
sub
aas
test
sti
push
pop
cltd
inc
hlt
pop
or
xchg
cli
pop
sub
sbb
or
xchg
test
out
out
dec
push
hlt
jg
mov
sub
out
cs
dec
loope
rcrl
aas
add
jmp
dec
js
icebp
movsb
push
ret
orps
jb
loope
xor
sub
dec
or
clc
jbe
mov
stc
sub
lea
inc
sbb
xor
mov
xorb
jg
xchg
cmp
xor
pop
movsb
cmp
pop
jne
ja
mov
pop
pop
in
aaa
adc
dec
adc
shrl
ds
add
inc
add
add
inc
lret
push
jb
adc
add
push
sti
pop
push
cmp
mov
insb
add
sub
mov
data16
add
movsl
loope
jmp
sbb
aaa
push
dec
lods
xchg
dec
popa
sahf
sbb
jbe
pop
mov
cmp
ja
mov
add
mov
dec
ss
mov
push
cmp
filds
sub
pop
js
cmp
or
ret
jmp
outsb
dec
pop
test
negb
into
cmp
xor
fists
sti
pop
push
loopne
sub
sub
mov
push
adc
les
mov
add
add
pushf
xchg
cmpsl
test
push
or
pop
mov
adc
xor
js
push
mov
adc
fwait
shr
aad
inc
dec
jmp
lds
push
cmp
test
iret
test
test
jns
sbb
push
inc
sbb
and
jae
test
je
cmp
sbb
dec
add
sub
incl
sbb
int
dec
cmp
push
dec
pop
or
bound
pop
jle
test
add
pusha
mov
loopne
sub
sub
sub
or
dec
xor
sbb
push
pop
je
fldl
rcll
fstpl
dec
cld
pop
mov
pop
inc
jne
adc
iret
outsl
inc
add
bnd
push
divb
or
repz
clc
jne
or
jne
or
ss
scas
leave
ret
out
cmp
sbb
mov
out
add
xchg
push
xchg
enter
shl
push
frstor
adc
mov
out
and
orl
mov
lret
lea
fstl
jecxz
lock
mov
cld
mov
dec
sbb
lret
mov
cld
inc
or
loop
xor
gs
aam
cmp
sbb
mov
adc
notb
cmp
or
loopne
push
dec
cltd
and
adc
adc
mov
inc
movsb
jge
jne
cmp
test
sbb
in
push
or
sti
jbe
scas
fimuls
sti
movsl
pminub
hlt
mov
fs
cmpsb
jne
or
lret
and
movsb
lock
or
pusha
pop
adcl
inc
adc
mov
cmp
movsb
into
rolb
mov
outsb
fwait
in
popf
iret
add
dec
fsubl
inc
sub
sub
sub
push
je
inc
jge
and
aad
mov
push
mov
add
jbe
add
loopne
xchg
std
pop
clc
je
push
testl
mov
pop
insl
push
movsb
mov
add
repz
int3
lret
cmp
xor
push
and
inc
pop
hlt
xor
sub
push
lret
adc
adc
adc
sbb
loop
mov
in
or
xor
or
ja
inc
add
fsts
and
popa
sub
or
adc
popa
add
jl
or
pushf
nop
push
push
arpl
loop
cmp
xchg
lods
push
lret
dec
stos
pop
pusha
mov
add
jo
push
outsl
xor
adc
and
cmpsb
add
add
in
add
faddl
or
imul
and
lahf
push
les
mov
add
mov
xor
push
add
int3
shlb
rorb
xchg
mov
imul
imul
scas
sbb
pop
inc
jo
nop
and
loopne
popa
dec
push
imul
call
or
sub
add
and
adc
push
shlb
jb
int3
enter
jb
jb
mov
jno
lods
test
pop
aam
xchg
mov
in
push
ss
push
and
and
xor
mov
jbe
push
add
cmp
jmp
imul
js
push
xor
popf
inc
mov
sbb
pusha
or
jo
inc
cmp
jle
push
cmp
jl
xchg
fimull
sbb
add
dec
fwait
adc
scas
cli
pop
insb
add
and
push
adc
jle
xchg
or
adc
cmp
test
sbbl
int3
push
lods
add
cs
data16
loopne
sbb
adc
jnp
xorb
push
hlt
cld
cmp
jl
in
cwtl
xchg
ds
cmpsl
pop
sbb
xor
sbb
adc
dec
loopne
push
call
movsb
or
popf
push
cmp
mov
or
xchg
xor
or
jle
shll
and
push
mov
sub
pop
call
add
jno
mov
mov
push
call
pxor
lcall
dec
add
fidivl
cmc
push
les
test
stos
repz
jb
cmp
xor
lds
hlt
insb
add
imul
fdivrl
or
xchg
sbb
mov
or
add
mov
push
andl
jl
pop
call
fstl
push
movsb
mov
inc
or
cmpsb
inc
loopne
dec
ret
xlat
arpl
adc
ret
or
in
jne
xor
jnp
lcall
and
loopne
sbb
arpl
mov
mov
lds
call
mov
inc
add
or
push
inc
das
call
add
ss
inc
pusha
fs
mov
adc
or
cld
mov
add
pop
jle
pop
rolb
lret
int3
inc
fldl
fcoml
inc
mov
scas
pop
pop
pushf
and
int
or
pop
shlb
dec
cmp
mov
loope
clc
xor
adc
pop
push
cli
lock
add
inc
shl
push
in
testl
add
movl
sti
daa
mov
out
fsubs
xchg
push
jge
imul
ror
jecxz
push
movsl
scas
rolb
mov
sbb
sub
xchg
inc
push
push
dec
lods
maxps
sti
sbb
mov
pusha
and
je
cmp
out
lcall
push
sub
int3
cld
outsb
add
mulb
add
cmp
add
push
pop
dec
inc
ret
clc
ja
outsb
enter
dec
clc
enter
rorb
inc
xor
push
cs
lcall
push
push
xchg
mov
jno
shr
or
or
lods
sbbb
dec
adc
enter
cmc
inc
sbb
pop
icebp
pop
mov
jle
and
push
adc
pop
push
cmpsl
xchg
sub
cmc
add
lret
dec
sbb
stc
xchg
daa
mov
mov
call
pop
mov
vcvtsd2ss
add
aam
icebp
das
lods
push
push
and
add
shll
or
push
dec
adc
mov
xchg
jmp
ficoml
andb
pop
xchg
sbb
pusha
stos
dec
xchg
ret
stos
pop
and
or
push
rcrb
add
lahf
mov
bound
mov
pop
shlb
adc
lahf
stos
insl
rcr
movsl
mov
push
sub
inc
or
inc
sub
pop
mov
or
or
cmpsl
jo
pop
push
scas
push
mov
test
into
mov
ret
lock
adcb
jne
or
mov
inc
mov
add
out
lret
push
rcrb
arpl
lock
notl
mov
mov
push
pusha
add
aam
ret
test
adc
mov
lock
fisubl
dec
mov
push
out
pop
xor
xchg
sbb
or
sub
mov
mov
mov
movsl
sahf
pop
fldl
imul
and
sub
int3
pop
mov
sbb
imul
add
or
mov
xor
adc
aaa
pop
jno
xor
and
mov
xlat
mov
cmp
xchg
mov
insl
and
mov
addb
adc
fnsave
jb
sti
jl
jmp
add
add
aaa
pop
shrb
cmp
test
adc
mov
in
sub
jecxz
fcompl
adc
mov
adc
into
dec
sub
call
lods
aas
dec
arpl
inc
and
or
jl
je
in
aaa
or
frstor
pushf
push
mov
lock
cmpsb
lock
ret
dec
add
dec
rolb
dec
sahf
in
push
fnstsw
aad
daa
push
sbb
loopne
push
xchg
push
inc
test
inc
cmp
aam
test
fisubrl
inc
sbb
and
jo
ret
sbb
mov
dec
rcll
sub
mov
inc
and
dec
jnp
popa
ret
nop
sbb
pushf
loopne
out
dec
aam
js
jp
in
sbbl
lds
pop
inc
pop
test
adc
push
stc
lahf
xor
loop
mov
gs
sub
xchg
xor
push
xchg
sub
xor
cltd
inc
xchg
jge
clc
push
pop
push
icebp
dec
xchg
enter
mov
mov
subl
mov
test
in
xchg
add
aam
icebp
imul
adc
sbb
sub
sbb
add
clc
jno
fidivl
xchg
fmuls
and
inc
dec
lahf
adc
and
fstl
sbb
and
sub
leave
stos
push
rcrl
add
adc
int
adc
pop
cmpsb
push
test
pop
orl
jno
cli
jb
std
jnp
push
add
dec
mov
dec
add
jne
pop
dec
add
add
mov
cmp
stos
inc
cmpb
add
xor
pop
scas
push
mov
add
mov
hlt
test
add
and
sahf
jl
pop
popa
adc
inc
jne
add
xor
inc
imul
add
inc
lock
sti
in
pushl
test
clc
or
pushl
into
sub
jae
fcoml
jo
addb
xchg
add
in
out
and
lahf
andl
mov
ds
push
cmpsl
roll
mov
push
sbb
int
fs
adc
add
loop
iret
divl
push
movsb
add
test
pop
xchg
push
test
xor
pop
xor
orb
push
pop
mov
or
cmp
enter
or
lret
pop
xor
mov
dec
sahf
lods
or
and
inc
sahf
mov
add
dec
pop
enter
sbb
mov
movsb
jb
xor
inc
movsb
sahf
mov
orb
mov
push
cwtl
xchg
adc
dec
sbb
out
out
in
cmp
sbb
dec
push
dec
fs
cmp
mov
and
iret
out
pop
pushf
clc
mov
add
rolb
movsb
inc
adc
add
mov
scas
sbb
add
or
pop
orb
sbb
adc
push
sub
sti
xor
in
shlb
and
add
push
xor
jl
inc
and
and
jo
sub
push
jp
mov
dec
add
mov
test
leave
ja
mov
and
fidivl
and
mov
or
jnp
pop
sahf
xchg
lret
cwtl
and
icebp
int3
idiv
push
sub
mov
mov
sub
dec
sbb
inc
mov
add
pushf
sub
out
lret
mov
push
in
inc
lea
push
js
jne
test
adc
sbb
insb
pop
sub
xor
add
mov
sub
cmc
adc
sbb
lods
push
pop
add
test
add
add
dec
sbb
jge
sbb
insl
pop
sbb
push
pop
testl
insb
lods
add
arpl
xor
cmpsb
je
out
or
movsl
mov
mov
sbb
add
inc
pushf
add
add
pop
push
addb
bound
sub
ss
leave
sbb
adcl
hlt
xlat
add
fcompl
jo
call
rolb
or
push
clc
adc
scas
lds
sub
mov
clc
mov
xchg
push
fiadds
inc
mov
add
add
popa
pop
imul
lret
lcall
repnz
push
es
add
pop
test
xor
mov
data16
add
arpl
mov
xlat
push
sbb
scas
mov
outsb
in
adc
add
lret
xor
xchg
jnp
jne
push
scas
mov
adc
pop
sbb
add
repz
data16
mov
push
in
push
add
in
gs
pop
lret
fsts
fstps
imul
test
movsl
and
insl
and
or
daa
je
xor
mov
push
jb
in
stos
pop
loope
aam
testl
jecxz
and
addb
push
jle
fnstcw
xor
jmp
xchg
mov
mov
jne
fs
test
ja
stc
add
cmpsl
or
fsubr
push
or
xor
mov
mov
xchg
mov
scas
dec
mov
clc
mov
xchg
jg
add
push
je,pt
push
or
push
pop
push
push
add
sbb
call
dec
sti
mov
stc
cli
inc
push
in
add
dec
inc
push
loope
pop
pushl
xor
jge
and
into
rorb
mov
insb
push
test
movsb
cmp
dec
mov
jle
lods
js
mov
pusha
cmp
test
jbe
lock
dec
aas
nop
or
fcom
jb
call
add
or
xor
cmp
mov
push
or
jne
fdivs
xchg
repz
cmp
jae
or
xchg
sbb
sub
jne
sub
sbb
pop
loopne
sbb
sub
mov
stc
xorb
mov
iret
jge
dec
ret
leave
mov
ret
repz
std
xor
call
cmp
push
or
movb
data16
push
dec
and
testb
aad
sub
fbld
cld
in
insl
and
lea
pop
movsl
pop
dec
mov
pop
adc
pop
mov
push
pop
sbb
cmp
xchg
mov
inc
aaa
in
mov
sbb
inc
pop
mov
xchg
int3
inc
xor
add
pop
es
add
lock
loop
inc
fdivs
into
and
sbb
test
and
popf
xchg
and
cmp
sub
sbb
xchg
mov
adc
sbb
or
data16
xchg
popa
mov
repnz
rolb
decl
shlb
mov
mov
lock
aad
icebp
or
mov
push
cmp
je
cmp
or
sarb
push
pop
cmp
jne
daa
dec
int
push
test
lds
stos
jne
jmp
mov
jnp
dec
roll
inc
adc
push
test
push
stc
add
into
or
adc
or
jmp
sbb
aas
or
jmp
and
xchg
jmp
mov
js
stos
sub
push
enter
inc
rcrl
loop
mov
or
cmp
je
test
fs
or
xor
lret
xchg
fs
ret
lods
int3
or
jecxz
imul
fninit
jmp
pop
jge
test
inc
jg
cmp
or
ja
aad
rolb
aaa
dec
imul
push
popa
dec
lds
ja
or
pop
jmp
inc
test
inc
and
test
enter
and
cltd
shlb
xor
or
inc
orb
dec
lret
adc
xor
xor
mov
lcall
shlb
jne
fucomi
adc
fnstenv
flds
fsubr
or
adc
inc
js
loopne
ficoms
jae
sub
enter
stos
mov
or
fstpl
fldl
and
test
je
and
add
or
mov
dec
dec
add
or
xchg
fldl
lock
and
std
movzbl
fstpt
pushf
std
push
pusha
jg
push
sbb
clc
and
insl
clc
push
mov
inc
sub
and
mov
sbb
xchg
inc
sti
add
cld
and
pop
fsub
pop
fsubrp
mov
jge
pop
inc
inc
push
jl
mov
push
or
jg
in
stc
test
add
and
xor
adc
and
add
stc
ljmp
xor
sti
je
dec
je
add
es
ficoms
pop
je
jns
pop
mov
add
inc
sbb
xor
sbb
jmp
xchg
jg
add
cs
sbb
push
xchg
sahf
sub
mov
iret
nop
aam
push
jns
mov
add
xchg
aaa
js
fnstsw
jg
sbb
xorb
pop
dec
cmp
neg
jne
int3
adc
outsb
shll
clc
cmp
imull
sbb
sub
scas
movsb
outsb
inc
dec
sbb
mov
and
fidivrs
and
xor
adc
leave
and
or
iret
xchg
clc
adc
dec
xorb
ss
cmp
inc
aad
je
mov
and
push
mov
icebp
and
push
xchg
push
loopne
fs
leave
ret
and
lret
xchg
and
dec
push
mov
movsb
push
in
pusha
and
jne
mov
and
jl
or
xor
pop
into
sub
jbe
test
sub
dec
rorl
add
mov
add
sbb
push
sub
hlt
xor
in
mov
push
push
dec
pop
cltd
sub
sbb
lret
xchg
pop
xchg
and
push
gs
add
adc
mov
dec
sti
gs
inc
pushf
dec
cs
mov
xchg
lods
and
sub
shlb
sbb
jbe
fcmovnbe
and
or
and
lock
std
es
je
ljmp
inc
mov
pop
inc
pop
jns
adc
xor
or
jbe
push
adc
lret
pusha
and
and
push
cmpsb
es
and
aaa
cmp
dec
repnz
pop
movsb
and
push
add
and
lds
or
mov
psllq
jmp
aaa
push
dec
pop
push
iret
repz
mov
sahf
cmpsl
stc
cmp
add
cmp
sahf
out
outsb
jg
mov
out
aam
testb
iret
repz
sbb
cmp
insl
cmp
repz
mov
iret
repz
cmc
pop
adc
pop
or
push
sbb
mov
adc
in
loop
jno
cmpl
ljmp
mov
adc
push
sub
or
inc
shrb
cmp
mov
and
xchg
add
xchg
inc
pop
call
in
imul
sbb
push
jb
dec
add
add
push
xchg
pop
cmp
push
popa
add
shll
daa
bound
mov
icebp
sub
and
fistpl
sbb
aam
mov
das
lods
ret
adc
push
push
scas
clc
sub
ja
push
push
dec
and
imul
add
fs
adc
lret
push
addl
js
imul
add
add
in
iret
sarb
sbb
out
sub
or
jno
cmp
in
call
jb
bound
sar
lds
add
and
inc
push
mov
add
sub
or
jnp
inc
add
lds
inc
xchg
adc
adc
in
mov
sbb
inc
jbe
ss
xchg
jo
hlt
mov
jmp
icebp
add
add
iret
xor
push
sub
mov
pop
jo
add
jmpw
aaa
jns
in
ja
loopne
push
popa
add
and
or
aaa
leave
movsl
in
add
xchg
movsb
pop
clc
or
cmp
sbb
xchg
inc
cmpsb
pop
outsl
in
in
mov
jmp
push
jnp
fwait
ret
test
push
push
xchg
sub
leave
jg
or
mov
jno
out
lock
popa
add
mov
push
scas
mov
out
inc
push
push
jo
loope
into
pop
mov
out
adc
xor
orl
xorl
add
mov
pop
out
add
inc
ret
add
or
loopne
in
add
push
jo
xchg
add
in
sub
sub
push
sbb
sbb
loopne
and
les
ret
pusha
cltd
inc
mov
adc
xlat
daa
ss
aaa
dec
xchg
jl
pop
ret
xor
shrl
push
push
cmp
push
movsl
ret
xor
test
cmp
xor
add
inc
repnz
push
in
fs
mov
push
mov
xchg
adc
ret
push
sbbl
mov
inc
and
pop
lds
rorl
mov
in
add
fs
push
or
xchg
dec
cs
lock
loopne
mov
add
test
lock
and
adc
jge
mov
imul
push
cltd
in
add
cmp
push
jns
sbb
dec
dec
push
in
pop
mov
or
push
je
adc
addr16
and
mov
mov
aas
cwtl
mov
add
cmp
lcall
or
push
adc
sub
adc
lock
or
outsb
adc
jl
pop
inc
daa
inc
into
adc
mov
push
and
aam
insb
daa
push
adc
or
cmc
or
add
xor
gs
mov
cmpsb
xchg
or
adc
test
sbb
cmpl
add
or
shll
mov
and
pop
fsubl
xor
jecxz
add
inc
jb
dec
rorb
mov
xchg
insb
mov
add
lcall
push
sbb
movsl
xor
dec
fisttpll
adc
jmp
cmc
xchg
mov
in
mov
or
loope
jae
and
aad
or
test
add
add
iret
push
addb
addl
sub
push
jmp
cwtl
inc
jne
cltd
sub
je
sbb
inc
cmp
inc
jbe
nop
or
mov
mov
in
fldenv
pop
movsl
and
add
add
push
pop
sbb
or
adc
mov
into
adcb
or
or
add
xchg
cmp
and
adc
push
push
mov
fs
and
add
adc
or
or
mov
cmp
or
repnz
push
push
xchg
push
adc
sub
push
pop
mov
pop
mov
sub
sbb
andb
cli
mov
or
mov
aaa
test
add
sbb
or
leave
outsb
cmp
cmp
pusha
sub
mov
xor
xchg
add
popl
les
and
add
add
push
adc
mov
lret
punpcklwd
jne
pusha
or
dec
nop
xchg
insb
in
movsb
cmp
cld
popf
fstl
cmp
mov
test
push
cmp
mov
dec
in
xorb
or
nop
cs
dec
lret
cmpsl
xchg
ficoml
push
in
js
dec
mov
lret
mov
mov
adc
stc
jl
adc
adc
push
add
push
mov
xchg
cli
cmpb
je
jnp
adc
in
xor
lea
out
or
jb
cmpl
add
jge
mov
push
rorb
push
add
dec
mov
ss
jp
aam
pop
mov
add
push
bound
test
decl
xchg
repnz
adc
mov
pop
bound
push
arpl
loope
hlt
add
adc
or
add
inc
imul
roll
lea
pop
ljmp
or
js
cmp
idivl
mov
sub
jne
fldl
insl
jmp
push
andb
fmull
mov
sbb
lock
outsl
push
lret
pop
add
or
xchg
ss
sbb
daa
stos
aaa
adc
push
jl
push
adc
cmc
mov
push
lret
adc
test
dec
inc
sub
fdivr
dec
add
hlt
push
dec
loope
mov
xlat
aaa
push
fadd
pop
dec
dec
outsb
notl
pop
test
mov
mov
add
mov
add
hlt
xor
or
test
pop
in
lret
femms
and
push
push
cmp
xor
pop
add
mov
mov
out
inc
lret
xchg
add
sbb
jl
cmp
sbb
aad
pop
sub
cmc
addl
push
dec
dec
add
into
and
push
rolb
pop
cmp
gs
popf
adc
xchg
popf
cwtl
mov
push
ljmp
mov
xor
aad
fcompl
scas
add
daa
mov
xchg
lock
inc
jmp
test
push
xorb
lds
jbe
int
sub
or
test
inc
icebp
pop
call
pop
mov
and
sarl
jno
push
xchg
cli
pop
or
dec
jmp
mov
decl
outsb
mov
xor
sub
cmp
mov
jl
shr
and
cli
inc
imul
adc
jle
xor
std
pop
cmp
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
sarb
cltd
pop
idiv
dec
sbbb
repnz
in
xor
sub
cmp
sbb
popa
ss
and
xchg
push
stos
nop
xor
cmpsl
push
test
cmpsb
adc
icebp
mov
cld
testl
out
mov
cmp
shr
add
or
dec
or
gs
notb
inc
push
lock
jnp
lahf
lock
hlt
incb
dec
in
sbb
mov
add
iret
cmp
adc
jae
mov
dec
faddl
xlat
aam
cmp
fidivs
cmc
xchg
push
push
loope
dec
loop
and
mov
adc
aas
xchg
jecxz
pop
iret
mov
movsl
cltd
mov
in
jge
test
mov
xchg
in
lea
into
insl
pop
mov
pop
adc
adc
or
pusha
or
in
ljmp
fdivs
das
or
je
or
test
les
insb
push
sub
inc
adc
shrb
and
push
or
dec
repz
pminsw
call
xchg
adc
inc
enter
add
movsb
adc
fs
rcrb
push
push
lods
adc
insl
pop
int
adc
pop
inc
push
cmp
add
imul
push
push
pop
or
pusha
pop
lea
lock
mov
xor
imul
mov
imul
or
psrlq
cs
enter
sarb
enter
jb
fnstcw
or
lods
rcrb
ja
jb
pop
stc
call
and
call
inc
lods
js
jbe
inc
inc
sbb
sbb
xor
pop
les
push
call
adc
imul
fnstenv
sub
clc
sub
jb
and
pusha
sarb
mov
pop
cmp
imul
jmp
mov
or
loope
or
mov
scas
dec
in
mov
lret
scas
inc
out
icebp
es
icebp
movsl
adc
jns
ret
aaa
stc
adcl
imul
xchg
fwait
or
cmp
cwtl
xchg
xchg
dec
dec
dec
nop
pop
xor
andb
in
leave
adc
aam
dec
in
lods
setae
xchg
mov
stos
jl
int3
test
adc
push
mov
addr16
fsubrs
ja
pop
lea
mov
pop
mov
ja
xchg
mov
mov
sbb
inc
insb
stos
pop
cmpsl
xor
repnz
add
mov
jo
mov
jp,pn
or
mov
adc
or
inc
sti
fadds
dec
xor
pop
push
rorb
imul
mov
in
inc
push
das
mov
data16
fcompl
sbb
fmull
add
shlb
pop
inc
negl
push
mov
mov
in
sbb
or
and
push
pushf
cmp
adc
mov
es
inc
mov
ds
cmp
data16
stos
add
mov
cmp
xlat
jb
fstps
mov
insl
call
sbb
cmp
rcl
xchg
roll
sub
or
loopne
or
cmp
fcoms
daa
push
add
js
nop
data16
mov
adc
xchg
dec
cmc
loopne
stc
or
sbb
into
test
aam
add
rcl
cmpsl
jle
repz
jb
fldcw
jg
xor
mov
cmc
dec
mov
push
mov
xchg
rclb
inc
or
mov
and
scas
cmp
sbb
daa
and
stc
pop
xor
sub
mov
and
gs
pop
sbb
ret
sbb
pop
pop
les
adc
adc
loopne
lea
ret
pushf
fstl
fiadds
and
push
jmp
neg
sub
loopne
or
jno
ss
xchg
push
and
shlb
sub
push
and
inc
add
fcmovnb
xchg
jno
fnstsw
sbb
sub
leave
or
fstpt
add
jns
xor
insl
je
movsl
shrb
xor
pop
dec
imul
inc
mov
lock
inc
and
jne
in
shlb
fwait
pop
fisubrs
pop
inc
jmp
or
lods
push
add
subb
daa
loop
fwait
sub
xor
mov
data16
mov
push
dec
cmp
adc
push
imul
movsl
inc
sbb
ret
loope
push
in
pop
jo
out
and
out
pop
adc
pop
stos
lods
push
pop
jb
adc
aas
or
mov
mov
add
jne
setno
mov
int
ror
mov
pop
ja
inc
addr16
push
fcomps
cld
mov
adc
xchg
jl
jne
notb
rcrl
xor
arpl
movsbl
mov
cmpsb
clc
test
cmp
lret
and
dec
cmp
jo
call
xor
insl
jb
push
push
add
push
xchg
int3
cmp
cli
notb
xor
push
xor
and
call
jns
dec
mov
inc
loopne
add
shr
cmp
cmp
jecxz
lods
or
call
je
or
pop
ret
andb
cld
ljmp
or
or
add
aaa
mov
pop
ret
shr
mov
mov
cli
pminub
lahf
cmc
jne
cmp
loopne
push
movsl
stc
xor
sbb
jl
cli
hlt
pop
orl
adc
out
es
add
push
sub
dec
ret
repnz
cmpsl
add
mov
fmulp
fcompl
push
iret
push
dec
xor
outsl
jp
aam
enter
loopne
xor
pop
push
pop
rcll
push
cmpsl
cli
pavgb
add
rcrb
sub
adc
int3
rcll
sub
fdivrs
inc
mov
sub
add
adc
scas
leave
push
xor
pop
xor
adc
cs
aaa
add
cmp
push
cwtl
cmp
mov
sbb
push
cmc
clc
into
ds
dec
mov
cltd
adc
pushl
or
jmp
shl
sub
lea
xchg
call
mov
mov
fwait
push
pop
fcoms
sbb
add
pop
ljmp
fcmovne
fmulp
and
js
popa
flds
stos
sub
in
test
mov
push
xchg
out
mov
pop
mov
pusha
and
in
icebp
test
inc
ja
cmp
xor
les
mov
and
inc
cmp
ss
dec
std
nop
add
adc
pop
or
jge
fadds
mov
pop
push
inc
push
push
or
dec
dec
rclb
mov
aam
add
push
mov
inc
sbb
xchg
inc
xor
push
and
mov
jbe
push
push
daa
xorl
ja
or
sahf
fldcw
mov
stc
cmp
test
mov
adc
or
jae
shrb
gs
in
xchg
sub
fsts
fisttpll
loope
pop
mov
cmp
sub
sub
cmp
sbb
repz
pop
add
andl
jp
xor
cmp
push
mov
push
stc
sub
and
rolb
pusha
jle
test
cmp
lahf
popa
cmp
push
jmp
inc
push
xchg
adc
mov
sbb
jge
gs
movsb
js
std
rolb
mov
hlt
add
adc
mov
or
ds
mov
iret
ret
cld
aas
je
in
cmp
xor
call
add
push
push
mov
sbb
mov
jne
cmp
push
push
repnz
inc
xor
xchg
add
pop
xchg
cltd
add
sbb
sbb
add
fldcw
bound
xchg
js
xchg
insb
push
adc
pop
rcr
lcall
dec
lods
stc
cmp
sbb
and
mov
outsb
movsl
push
add
mov
adc
sbb
add
or
mov
xor
sbb
mov
mov
or
in
loopne
call
cmp
jne
and
xorb
roll
mov
push
repz
es
inc
and
sbb
enter
ret
ja
mov
xchg
or
or
sbb
ret
jne
pop
je
jmp
in
sbb
and
cltd
or
and
test
mov
xchg
insb
mov
mov
push
and
dec
or
pop
icebp
xchg
push
mov
sbb
or
or
hlt
add
cmp
mov
jg
sti
incl
xor
xor
mov
fs
scas
push
cltd
ret
gs
dec
push
push
test
or
rclb
adc
shr
stos
jno
pusha
xor
fs
in
mov
dec
in
mov
inc
enter
dec
ss
push
add
addr16
and
pop
push
test
addr16
in
pop
or
enter
ret
lods
mov
mov
xor
or
pop
loop
push
and
add
adc
or
push
cli
es
inc
add
mov
test
sub
daa
inc
test
adc
dec
add
andb
loope
sbb
imul
jge
jbe
mov
lods
add
les
fsubs
push
jmp
and
jmp
cmp
insb
and
in
adc
jb
add
addr16
test
jmp
pusha
leave
mov
or
sbb
adc
jne
dec
or
sub
jae
mov
mov
je
add
aas
inc
ret
jbe
push
mov
es
push
mov
mov
and
cmp
xor
jbe
loope
mov
out
jge
mov
push
add
push
cltd
jb
pop
and
sbb
adc
lock
es
add
sbbb
cmp
pop
dec
jge
cmp
adc
addl
rcll
fdiv
dec
xor
cmp
in
push
dec
or
sbb
or
inc
adc
push
add
incl
jne
inc
cmp
jae
and
or
imul
push
decb
lea
call
push
insl
mov
mov
in
fstpl
lea
push
cmpsb
cli
push
fcompl
out
lea
pop
movsb
loope
lds
sub
test
push
push
pop
pop
pop
call
sbb
xor
and
dec
mov
push
jae
and
lods
and
movsl
pop
dec
push
loope
aam
add
inc
leave
int
les
out
and
pop
cmc
cmpl
mov
sub
mov
sbb
adc
push
push
mov
sbb
push
cmp
sbb
das
and
adc
cwtl
push
push
push
inc
dec
mov
xchg
xor
sub
mov
scas
sarl
mov
imul
lods
adc
rorb
sub
or
add
sub
pusha
xor
dec
fisubs
or
xor
cmp
or
test
add
pusha
and
movsl
sub
xor
adc
mov
loope
jnp
push
add
sbb
fadds
pop
push
fists
pop
inc
and
mov
cmp
cmp
push
add
push
fwait
lods
inc
and
loope
xchg
clc
fimull
js
jge
push
xchg
movsb
lods
roll
movsl
test
rorb
in
sahf
pop
pop
adc
add
imul
push
pusha
sbb
cmp
mov
or
xor
cmp
sub
sub
ror
sbb
jle
push
add
sub
popf
fcmovnbe
push
or
data16
sub
mov
or
pop
ja
rcrb
sbb
or
mov
js
shll
aaa
inc
sbb
push
shrb
push
mov
shl
xor
push
sysexit
mov
lea
pop
jecxz
test
dec
mov
bound
cmp
mov
sbb
push
test
inc
xchg
sbb
setno
test
imul
imul
cwtl
orl
pop
add
into
fimull
inc
adc
call
lret
or
sub
xchg
mov
mov
fistps
adc
jmp
cmp
nop
xchg
mov
out
aaa
andb
push
cmc
ret
xchg
flds
xor
push
addr16
cmp
push
movsb
lret
xor
add
xor
xchg
xchg
mov
or
fidivrs
mov
jmp
sar
sahf
add
and
add
leave
mov
add
fs
inc
mov
iret
push
popf
inc
insb
cmp
movsbl
mov
aam
idivb
pushf
adc
mov
add
in
aad
fnsave
cmp
mov
and
pop
and
stc
subb
sub
testb
push
xchg
cmpl
sbb
xor
adc
fisubrl
jo
outsl
lea
or
ds
or
inc
or
dec
and
add
or
and
or
xor
xchg
inc
dec
cmovs
mov
clc
cltd
inc
adc
in
xchg
sbb
mov
and
fs
enter
mov
jmp
xor
int3
out
rolb
movsl
sub
shl
insb
adc
sbbl
sbb
sub
add
inc
add
cwtl
insb
lock
add
xor
mov
pop
cmp
adc
out
or
and
sub
mov
adc
jl
punpckhbw
add
adc
pusha
xor
les
mov
inc
or
data16
adc
or
es
sbb
sti
es
add
inc
movsl
pop
or
sbb
lods
xor
add
mov
popa
addl
or
mov
add
cltd
ss
push
stos
jo
and
pop
and
fcmovbe
push
xchg
cmp
or
loope
cmpb
cmp
inc
sub
ds
enter
js
or
rol
es
and
xchg
xor
rorl
sbb
mov
or
sub
imul
sbb
inc
sbb
ss
adc
in
jne
lcall
adc
mov
xchg
rcr
cmpsb
rorb
mov
push
int3
fdivs
sub
pop
int3
xchg
iret
cmpsl
and
dec
adc
pusha
add
or
sub
test
les
imul
mov
mov
or
push
outsl
cmp
pop
inc
push
sub
rcll
push
or
mov
dec
es
fptan
aam
les
add
mov
cmp
stos
add
daa
leave
or
pop
lret
ret
or
mov
sbb
push
sub
sarb
sbb
cmp
inc
push
rcl
pop
sti
js
adc
ds
mov
pop
jb
inc
mov
or
addb
sub
push
sbb
or
inc
sbbl
test
and
sub
pop
push
jl
aam
mov
lods
leave
fldt
push
loopne
xchg
subb
popa
adcl
dec
sub
andb
xor
xchg
mov
enter
inc
add
loope
adc
in
add
mov
cmpb
lea
adcb
aad
mov
push
add
dec
mov
int
dec
lods
add
sbb
pop
cmp
sub
int
scas
inc
shlb
loope
subl
or
xchg
push
cmp
cmp
push
add
sbb
popa
and
adcb
add
rolb
sub
push
subl
rol
add
cld
rorb
add
sub
jne
icebp
push
xor
inc
jns
dec
add
push
ret
mov
test
add
faddl
cmp
xor
xchg
pop
lret
lods
cld
enter
sub
push
lods
pop
leave
jne
push
or
xchg
add
daa
subb
das
push
sbb
xchg
btc
xor
push
cmc
xlat
or
sbb
and
insb
push
jb
add
add
push
repnz
into
mov
sub
add
xchg
xchg
xchg
incl
pop
add
aas
xor
mov
and
pop
in
ss
add
sbb
lock
outsl
jne
gs
cmp
pop
fsts
outsb
mov
xor
inc
push
and
ja
decl
clc
mov
rorl
adc
roll
and
jmp
cmp
sub
dec
xchg
add
push
mov
clc
lock
stos
mov
and
or
je
mov
mov
push
outsb
cmp
adc
pop
enter
push
mov
or
xor
mov
xchg
push
lahf
pusha
outsb
jge
shl
dec
pop
psubw
ja
xor
dec
ret
cmp
rorb
pusha
inc
les
add
loope
mov
gs
stos
add
xor
push
sbb
sub
xor
mov
push
or
dec
push
adcb
in
cmp
aaa
jl
icebp
jb
jmp
adcb
mov
inc
vmovntps
push
jne
mov
int3
add
adc
test
mov
dec
or
push
jne
mov
nopl
xor
pop
and
xchg
dec
push
mov
or
push
jo
push
subb
and
int3
add
sbb
push
mov
add
sbb
movsl
mov
outsb
and
add
dec
cmpb
test
xchg
insb
jae
dec
das
insl
es
add
add
sbb
fs
add
pop
and
push
loopne
sbb
stc
inc
jno
inc
fmuls
pop
xor
mulb
add
adc
mov
inc
sbb
inc
cmp
add
std
cs
sbb
jbe
inc
push
adc
stc
inc
inc
es
push
push
subl
jl
imul
inc
dec
je
mov
or
push
mov
les
adc
xchg
idivb
pop
xor
mov
out
mov
repz
addr16
mov
pop
scas
add
push
push
hlt
dec
pop
loopne
sahf
add
sbb
sub
mov
nop
std
xor
add
dec
cmp
xchg
ss
dec
rcrb
js
add
test
push
push
mov
jne
jns
les
popf
enter
icebp
out
pop
in
xchg
fdivl
xchg
rclb
add
mov
outsl
je
clc
jmp
pop
outsb
pusha
or
fisubl
adc
nop
mov
push
or
sbb
mov
jle
cmp
lea
loope
ret
adc
ret
cmpb
pop
pop
add
fmull
fldenv
dec
pop
je
pop
roll
outsl
or
cmp
lcall
cmp
in
dec
rcrb
inc
jmp
popa
nop
xor
xchg
pusha
ja
popf
inc
test
daa
test
add
mulb
adc
int
mov
push
pop
inc
clc
or
dec
lea
movzbl
xor
popa
push
lea
ret
mov
aas
add
orl
pcmpgtd
add
inc
jmp
incl
xchg
pop
test
and
pop
fsubs
loopne
testl
inc
aam
push
in
sbb
cs
es
or
in
or
negb
or
fadd
sbb
xchg
lock
in
mov
dec
clc
mov
adc
pop
stos
adc
sar
ja
ret
sti
popf
adc
scas
sbb
pop
xor
push
dec
push
push
in
cmp
or
and
push
pop
in
cmp
mov
mov
loope
sub
faddl
or
loopne
mov
iret
mov
or
or
scas
lods
dec
or
mov
inc
or
and
sub
cmp
fmulp
ljmp
imulb
xor
aaa
es
mov
add
rcll
in
test
or
pop
stos
push
ret
dec
mov
fdivl
sbbl
cmc
pop
sbb
adc
xor
mov
subl
mov
sbb
push
sbb
int3
or
adc
push
adc
stc
xchg
std
pop
jo
lock
inc
push
jl
pushl
ljmp
inc
pop
adc
dec
inc
pusha
test
cmp
push
outsl
inc
insb
mov
mov
mov
lock
add
push
out
push
push
inc
jbe
sub
mov
push
pop
xlat
pop
add
jge
xor
cmp
cmpl
je
filds
imul
sbb
sbb
dec
shlb
push
add
xorb
or
andl
repnz
xchg
je
ret
pop
in
nop
or
je
sbb
pop
mov
xchg
xor
pop
and
push
push
or
inc
and
push
cwtl
sbb
and
jl
and
xchg
pop
call
mov
push
add
loope
adc
dec
aas
xor
std
jmp
mov
int
loopne
outsl
sub
pushl
push
lret
xchg
movzbl
push
or
in
in
push
test
jmp
jb
dec
out
loopne
fadd
imul
xor
mov
lret
jge
add
ljmp
mov
push
shrb
mov
rorb
aam
adc
pop
and
lea
pop
jg
test
pop
outsb
inc
add
xor
add
mov
addl
jg
dec
movl
jnp
and
adc
mov
or
imul
mov
xchg
add
mov
lods
cmpsl
add
jo
add
xor
adc
and
ss
rorb
fwait
ret
dec
inc
sbb
and
ds
push
and
push
adcb
aad
xor
test
jb
and
jl
push
lods
sbb
inc
lock
xor
or
xchg
mov
or
inc
mov
add
in
push
inc
cmp
push
cwtl
push
adc
sbb
dec
leave
sbb
pop
test
mov
or
test
push
inc
stos
fstpt
xor
jb
jmp
pop
insb
sbb
adc
pop
mov
xor
wrmsr
adc
lock
adc
cmp
inc
out
and
out
aas
lods
sbb
adc
mov
jbe
xchg
aam
clc
test
dec
mov
shlb
cmpsb
dec
sarb
daa
lea
dec
hlt
jne
mov
push
pop
mov
jno
sbb
popf
in
shrl
ljmp
dec
pop
cmp
push
pusha
adc
adc
divb
pop
cmp
inc
push
and
ficoms
scas
inc
xchg
dec
mov
addr16
mov
jns
jb
gs
in
loopne
push
mov
rclb
test
or
and
loope
test
or
mov
lea
mov
jmp
adc
or
or
test
outsl
push
aaa
pop
sub
sub
mov
adc
jne
pop
icebp
mov
push
adc
jmp
cmp
out
xor
and
mov
mov
mov
xor
shll
push
das
dec
xor
shll
loopne
mov
adc
imul
xor
mov
cmpsl
push
adc
hlt
ficoml
push
sbb
mov
xorb
adc
movsl
mov
dec
shrb
xor
loopne
call
cmp
cmp
add
mov
inc
jne
add
es
aaa
mov
mov
out
mov
sub
adc
imul
jl
mov
sub
mov
sub
cmp
mov
xorb
into
add
and
push
shrb
cli
sbb
lret
fimull
lock
or
jmp
inc
add
imul
sbb
rorl
aas
dec
repnz
xchg
jmp
ss
arpl
xchg
mov
add
xorl
inc
cmp
faddl
hlt
outsb
inc
push
outsb
loop
xchg
and
inc
inc
nop
lock
jns
or
mov
dec
jle
and
lret
cmp
bound
pop
or
inc
mov
sbb
pop
inc
push
push
lds
fwait
clc
adc
mov
push
jge
mov
pop
sub
int3
mov
ljmp
cmp
out
das
adc
inc
add
mov
ss
push
in
daa
cmp
ror
xchg
xor
add
addr16
fs
inc
sbb
mov
cmp
enter
adc
daa
push
adc
es
pop
std
push
push
jl
call
iret
push
insl
inc
and
mov
sbbb
sbb
ljmp
movsl
jmp
mov
aam
cmp
xlat
mov
sti
add
fdivl
jle
add
push
imul
fxtract
xor
jmp
inc
push
sbb
xadd
jle
mov
adc
xor
adc
rolb
mov
clc
jne
loopne
pop
cld
sub
cmp
into
mov
sub
xor
mov
lds
aad
clc
cmp
mov
lcall
push
pop
mov
fadds
fildll
or
mov
xorb
push
pushl
rcrb
push
push
fxch
imul
repz
dec
push
sbb
je
in
xchg
js
scas
sarb
nop
cmp
clc
xlat
push
movsl
inc
mov
das
cmp
mov
call
sbb
fidivrl
and
or
popf
sub
shll
or
cmp
ds
and
add
adcb
xor
rol
xor
or
aam
and
scas
dec
rorb
shrl
add
add
aas
and
mov
les
inc
add
pop
push
cmp
lea
mov
sbb
push
mov
cs
enter
inc
andb
mov
add
aad
fnsave
xchg
mov
andb
dec
or
pop
sarb
and
loope
sahf
push
mov
popa
dec
fwait
in
popf
mov
or
mov
add
enter
sub
jbe
mov
out
out
jb
call
adc
in
mov
lahf
rolb
js
sarb
jo
xchg
enter
in
sub
test
or
insl
push
or
shl
aad
idivl
fmul
pop
dec
sbb
cmpl
push
movzwl
inc
mov
inc
xchg
insl
das
add
cmp
out
cmp
shr
fldt
pop
jp
adc
pop
cmp
popf
int3
xor
push
inc
andl
or
sub
sbb
sub
or
sahf
vmovq
mov
imulb
cmp
pop
adc
adc
in
add
or
jmp
xchg
arpl
call
add
cmp
rolb
mov
hlt
or
push
cmpb
add
mov
aad
addr16
mov
xlat
sbb
push
push
dec
add
cmp
das
or
movsl
dec
add
pop
and
and
jo
int
mov
movsl
movsw
push
jno
add
cld
movsb
mov
or
es
or
mov
shr
mov
dec
rorb
test
movb
pop
push
lea
cmpb
frstor
add
in
push
loope
add
fldenv
inc
aas
fidivs
lret
add
movsbl
bound
in
xor
mov
ss
push
mov
add
jb
and
in
fbstp
push
cld
je
push
push
xor
and
sbb
aam
push
inc
push
jb
or
mov
sbbl
push
dec
sbb
dec
outsl
jle
mov
jge
inc
add
movl
jle
or
subl
insb
cld
insb
dec
icebp
cmpsb
sub
dec
cmp
jl
xor
push
adc
sbb
jo
shr
or
lahf
xor
cmp
ficompl
inc
adc
and
dec
push
jmp
outsb
loopne
pop
cmc
ss
loopne
pop
adc
mov
or
and
test
shlb
pop
add
clc
dec
imul
addl
mov
xchg
testb
movb
xchg
xchg
xchg
add
xchg
pop
or
or
jnp
or
int
int
jbe
jmp
or
addr16
int
int
bound
jmp
adc
pop
adc
push
adc
int
int
dec
adc
dec
adc
aas
pop
int
int
jmp
sbb
xor
jmp
sbb
int
int
es
and
pop
pop
int
int
jmp
and
or
jmp
and
orps
push
mov
mov
cmpsl
es
mov
sbb
addb
push
iret
repz
pop
outsl
ja
xchg
repz
xchg
cltd
sahf
mov
test
mov
mov
rol
rcl
fidivrl
repz
in
out
repz
iret
repz
std
add
pop
out
or
add
and
or
push
decl
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
ftst
adc
cld
repz
sbb
jo
and
jle
hlt
popa
mov
addl
xchg
push
cmp
or
jecxz
dec
les
cmp
jle
mov
sbb
jmp
or
xlat
mulb
mov
js
xor
fdivs
sub
sbb
jecxz
imul
popa
loop
sub
add
jle
push
adc
lock
sub
mov
or
cmp
jbe
fisubs
or
cwtl
inc
xor
push
fidivrs
push
push
xor
mov
sbb
pop
jge
dec
loop
sbb
or
mov
or
mov
mov
add
arpl
cmpsl
loope
jp
lock
xchg
dec
ds
push
ret
xchg
inc
popa
sbb
js
aaa
sbb
sub
jne
cmpsb
jns
sub
and
dec
pop
or
pop
cmp
push
or
addr16
xchg
loopne
xor
mov
sub
push
nop
pop
in
add
dec
push
pop
jl
adc
add
insl
add
sbb
fucomip
xchg
xchg
dec
sub
jne
add
sub
in
inc
hlt
or
push
push
or
je
mov
pop
sahf
repz
pop
mov
sub
adc
jp
jne
add
jmp
push
inc
mov
lods
pop
add
mov
push
hlt
pusha
adc
push
daa
int
adc
outsl
push
jbe
dec
and
xor
xor
icebp
adc
mov
inc
dec
jo
loop
cwtl
lock
mov
leave
jae
mov
xchg
ficoms
add
pop
fld
je
push
lods
sub
mov
test
enter
xchg
push
je
mov
ljmp
jle
mov
negb
xlat
sbbl
add
adc
adc
test
mov
loopne
xchg
add
in
stc
mov
rorb
cmpsl
lock
pop
jecxz
dec
xchg
pop
mov
jmp
scas
add
sbb
test
mov
dec
jne
pop
insb
jmp
inc
testb
mov
cld
push
rorl
inc
mov
gs
fisubs
mov
ja
ss
ret
pop
sub
pop
stc
test
loopne
sbb
and
pop
sub
jno
or
in
xchg
mov
psubb
cld
je
je
xchg
lock
push
imul
cmp
sub
cmp
fmull
push
sub
and
sub
or
jl
adc
adc
dec
push
add
xor
lret
les
imul
xchg
xchg
dec
pop
jbe
xor
inc
hlt
xor
cli
add
or
or
push
push
popl
dec
xor
dec
push
mov
add
push
lods
ret
pop
push
push
fcoml
sbb
dec
dec
sub
xor
cltd
and
or
loopne
push
xor
push
jl
xlat
mov
cmp
mov
loopne
adc
inc
lcall
imul
cmp
cwtl
ds
xchg
jecxz
jae
push
div
mov
xchg
xchg
jae
lret
lcall
pop
dec
les
in
cwtl
rcll
and
inc
add
mov
xchg
push
rcrb
enter
inc
fsubl
sbb
imul
pop
popf
mov
xchg
xor
mov
sahf
fsubrs
dec
and
and
mov
dec
sub
icebp
andl
loopne
stos
mov
mov
fmull
xchg
jmp
add
adc
aam
push
movsl
ds
xchg
mov
pop
icebp
jne
push
rorb
add
mov
or
sbb
or
dec
cmp
mov
inc
cmp
inc
sub
pop
xchg
std
and
lods
movsb
cs
xor
decb
imul
loop
je
nop
push
outsl
shrl
popa
jmp
loopne
cmp
addb
mov
inc
lcall
inc
sahf
xchg
add
loopne
cwtl
xchg
sub
loopne
sbb
jns
sub
testl
enter
in
add
or
gs
add
ret
notl
es
flds
je
push
cmpb
mov
pop
pusha
les
inc
stos
or
jp
pop
add
pusha
xchg
pop
push
cltd
push
or
call
pop
push
push
mov
cmp
mov
in
cmp
fnstsw
jp
movsb
sub
shll
stos
pushl
cmc
enter
push
cmpsb
xchg
push
add
or
pop
enter
fstpl
mov
sub
pop
lahf
pop
test
aam
and
sub
shrb
test
ret
or
inc
jmp
mov
and
arpl
rcll
shr
pop
jle
cmp
mov
jl
mov
adc
inc
test
sub
shlb
into
sub
and
faddl
jecxz
inc
and
jl
outsb
add
add
sbb
mov
fidivs
movsl
bound
sub
popa
fcoml
loope
rcrl
ljmp
fadds
hlt
loopne
sbb
test
and
mov
jecxz
daa
in
add
dec
cmp
fldcw
cmp
push
popf
cmp
cmp
rorl
inc
add
nop
es
test
inc
dec
mov
mov
je
fnstenv
and
mov
push
jno
jae
sbb
adc
dec
mov
cmp
add
stos
pop
xor
cmp
sbb
add
cmp
xor
mov
enter
orl
fcom
xchg
sbb
add
test
scas
pop
rcl
rcll
ljmp
repnz
sub
push
iret
xchg
call
mov
jne
sub
cmp
je
test
adc
fidivl
lock
test
jns
jge
loopne
sbb
rorl
std
ficompl
in
xchg
cli
sbb
push
add
mov
or
fsubr
sbb
lock
push
iret
leave
inc
pop
inc
sbb
inc
sbb
mov
lock
and
pop
or
sub
or
sbb
pop
ror
cmpsl
cltd
jne
sarl
jge
and
push
add
pop
push
int
push
lods
test
cmp
pop
mov
fisttpll
or
sbb
xor
loopne
xchg
ret
out
and
and
arpl
xor
ds
mov
inc
mov
push
and
xchg
test
andb
bound
inc
inc
add
sbb
adcb
test
pop
lea
in
mov
adcb
cmp
iret
jl
inc
sub
mov
pusha
or
or
fs
or
cmp
sbb
or
in
sub
xor
jb
or
gs
xchg
dec
cmp
and
inc
arpl
pop
adc
lock
pop
mov
adc
adcb
lds
popf
add
xor
filds
or
ds
inc
add
orl
sbbl
jo
jbe
je
je
aas
pusha
adc
test
mov
clc
cmp
xor
xchg
inc
icebp
cwtl
inc
outsb
xchg
out
inc
pushf
lahf
mov
jb
fs
test
lods
pop
cltd
movsb
fwait
movsb
mov
pop
mov
push
rol
int3
mov
lock
cmp
invd
mov
xchg
fidivl
dec
push
lock
popf
inc
incl
mov
mov
add
test
cmp
ret
insl
and
xchg
das
cltd
sub
jbe
add
je
or
sti
push
cmp
jl
sub
lea
cmp
repnz
je
dec
mov
or
popf
testb
sbbl
fildl
out
fistps
inc
dec
pop
sbb
sti
lods
sub
inc
and
in
sti
cmp
lods
lret
ficoms
jl
jmp
out
push
enter
sub
sub
mov
les
sti
cmp
je
cli
and
jge
inc
jne
nop
outsl
and
call
rcrl
sbbl
sbb
lcall
mov
sbb
lahf
and
daa
push
fcoml
fldt
js
or
sbb
sbb
push
fwait
out
inc
mov
rorb
je
mov
call
mov
xchg
xchg
pop
add
hlt
push
pop
cmp
repnz
or
xor
lret
mov
mov
lock
loope
addb
push
mov
sbb
mov
decb
pop
mov
and
dec
adc
lods
jle
mov
rorb
sub
pop
pop
sub
dec
xchg
dec
inc
dec
sarb
mov
xor
push
cmp
je
cmp
jne
push
icebp
add
pop
inc
push
xchg
push
push
cmp
jp
cli
in
imul
push
mov
mov
or
add
xor
daa
std
or
out
push
clc
mov
ljmp
or
pop
imul
or
mov
test
add
cmpsl
xor
inc
jb
pop
andl
sbb
sub
jne
test
dec
call
loop
outsb
cmpsb
pusha
sbb
add
push
jns
push
pop
bound
xchg
mov
sarb
xchg
cmp
sub
jbe
fwait
push
push
mov
imul
jae
sbb
adc
lods
in
jge
ss
les
jl
sbb
ja
stc
fucomp
sbb
inc
mov
stc
inc
push
pop
jae
jb
fwait
xorb
inc
and
sub
mov
icebp
aas
jne
push
mov
clc
jp
and
adc
scas
mov
mov
jo
fadds
insl
fs
inc
mov
inc
loope
ret
dec
loopne
and
aam
pop
in
insl
mov
mov
xchg
in
ss
push
push
pop
je
mov
neg
cmp
jo
sarb
mov
inc
mov
setl
mov
outsb
mov
mov
ja
in
push
jmp
or
inc
int
cmp
inc
pop
icebp
inc
jnp
rorl
pop
jmp
pop
repz
inc
dec
loope
or
pop
mov
insl
xchg
test
or
push
jno
mov
sub
outsl
psadbw
sbb
aaa
or
ss
add
insb
xchg
int
pusha
xchg
mov
mov
div
mov
adc
mov
xchg
into
add
inc
cmp
in
loope
inc
and
movsl
sbb
jno
jo
data16
mov
hlt
pop
and
pop
repnz
cmc
adc
mov
or
or
cltd
loopne
popf
add
or
bsr
roll
shll
sbb
movsb
mov
loopne
push
and
and
jo
lock
mov
inc
out
mov
push
jae
movzbl
xchg
int3
test
orb
push
push
sbb
sbb
mov
cmc
mov
loopne
mov
xor
sub
cmp
icebp
hlt
out
mov
daa
cwtl
and
daa
and
cs
mov
mov
clc
xchg
and
clc
or
pop
xchg
dec
adc
add
or
in
sub
orl
jmp
pop
insl
dec
mov
movsl
xor
xor
inc
jle
or
inc
pop
ret
mov
cmp
jmp
dec
rorb
sar
mov
mull
lea
int
adc
dec
js
mov
pop
sbb
or
js
sbbl
xchg
mov
push
pop
add
jp
inc
cmp
push
lea
push
inc
cmc
mov
or
inc
add
aaa
aas
xor
adc
stos
sub
pop
inc
or
dec
inc
pusha
sbb
pop
aaa
jle
push
popa
inc
outsl
sar
dec
mov
xchg
rcrb
ret
ljmp
jmp
inc
mov
test
mov
out
mov
xor
movsl
fsubl
adc
lea
adc
or
ftst
sbb
xchg
mov
dec
pop
mov
leave
out
shll
sub
push
test
pop
push
es
call
repnz
sbb
adc
dec
adc
push
push
dec
cmp
andl
iret
xor
xor
and
xor
push
ret
sbb
fisttpl
sub
and
add
sbb
inc
sub
cs
jge
pop
stc
sub
push
mov
push
fildl
xor
xor
xchg
imul
outsb
xor
xor
cmp
or
xor
add
adc
mov
fstl
fldz
fcomp
fnstsw
push
sbb
pop
fsubr
pop
faddp
mov
fstpl
insb
sbb
cmp
ja
adc
cmpsl
fisubs
sbb
pop
js
hlt
xor
shrb
dec
add
addr16
pop
sbb
lock
pop
push
nop
xchg
lock
dec
popa
clc
sbb
inc
in
cli
test
sbb
lcall
in
pop
inc
fs
pop
mov
sub
add
cltd
push
mov
fistpl
jbe
adc
xor
mov
adc
into
add
ficomps
insb
test
gs
xchg
xchg
pop
imul
popf
cltd
or
adc
pop
sbb
inc
push
adcb
sti
xor
imul
pop
push
fldl
jl
sahf
xchg
into
dec
pop
hlt
fs
adc
mov
int
adc
ficoml
mov
int
cmp
shl
fimuls
xchg
lock
enter
loop
int3
nop
cmp
loopne
in
nop
sbb
jl
jecxz,pn
cmp
iret
mov
mov
out
rcr
sbb
sbb
hlt
push
inc
test
add
nop
lods
outsb
enter
xchg
ret
stc
and
int3
jae
fadd
sub
push
add
fistps
or
rclb
rolb
ret
sbb
cmpsb
push
sub
outsl
dec
pop
sub
add
fcomps
mov
mov
mov
pop
xchg
je
xchg
push
push
sbb
mov
push
and
pushf
push
test
inc
cli
push
arpl
jnp
rolb
scas
test
jecxz
cs
mov
pop
in
das
mov
sub
sti
orb
out
ss
pop
pop
popa
sub
add
push
out
fsubrl
jo
add
aaa
add
add
push
or
jmp
cmp
test
pop
inc
cld
push
jns
fcompl
pop
cmp
jb
push
scas
sub
dec
or
dec
pop
jb
repnz
or
test
xor
lock
repnz
add
adc
popa
sbb
arpl
mov
dec
add
and
pop
ret
loop
call
sbb
inc
adc
and
and
repz
sbb
sbb
xorb
push
clc
and
icebp
rorb
inc
test
inc
dec
leave
cmp
jne
je
in
shrb
sub
scas
xor
push
push
inc
test
and
fcoml
sub
fistl
shll
sbb
xor
dec
mov
and
jbe
or
and
mov
pop
or
mov
or
popa
pop
add
pop
add
ret
out
fimuls
dec
adcl
push
and
pop
push
test
lahf
push
imul
pop
adc
adc
push
dec
xchg
mov
mov
push
push
clc
lods
adc
loope
mov
jae
cmp
add
popa
add
test
rorl
adc
ja
mov
sar
das
add
mov
out
shlb
or
je
xor
push
jmp
cld
mov
dec
sti
inc
mov
test
push
cmp
lea
hlt
mov
in
cmpb
fnsave
or
in
sbb
lods
pushf
xor
mov
adc
inc
mov
and
fadds
cmpsb
xchg
int
pop
les
dec
mov
push
enter
sti
repz
cmp
mov
imul
xor
jb
testl
and
add
sbbb
pop
jbe
push
push
insb
dec
aas
dec
push
push
test
scas
xor
inc
add
ljmp
ljmp
dec
lea
push
mov
push
push
push
dec
stc
or
push
loop
mov
adc
lcall
fmuls
and
ja
test
add
enter
mov
cltd
les
test
int3
push
pop
inc
adc
rcr
mov
push
pop
pop
loop
push
stos
out
add
mov
and
jo
sbb
xchg
xchg
sbb
or
dec
ret
lfs
inc
scas
mov
je
and
push
and
aam
adc
or
mov
daa
inc
mov
xor
mov
add
setns
xor
mov
dec
ljmp
or
inc
push
dec
and
pop
leave
mov
call
cwtl
add
je
push
jl
pop
cmpsb
inc
lock
sbb
xchg
sahf
inc
ret
sub
pop
push
xor
lock
js
adc
xchg
xchg
mov
aam
dec
jg
fwait
dec
mov
cmp
rolb
mov
inc
por
sub
push
repnz
mov
out
nop
subl
mov
fs
push
ljmp
pop
inc
inc
fdivl
inc
adc
lea
sub
pop
sub
test
lods
xchg
sti
cmp
rolb
dec
push
dec
xor
xor
and
xchg
mov
enter
mov
adc
lods
jg
adcb
repnz
mov
es
and
pop
adc
and
dec
faddl
je
dec
shl
in
loope
movsl
arpl
cltd
sub
or
das
jbe
sbb
in
or
call
jno
rcll
mov
adcb
and
movl
mov
in
add
or
out
lahf
jne
adc
add
sbb
dec
pop
push
sti
sbb
or
in
sbb
iret
or
loope
in
imul
mov
mov
cmp
ds
cs
sbb
mov
jge
fisubl
dec
inc
or
inc
dec
inc
xchg
sub
outsl
xlat
sub
add
jmp
push
stos
pusha
mov
in
mov
xchg
mov
add
sub
xchg
sub
add
addr16
mov
cmp
push
add
inc
popa
sub
and
fbld
push
fiaddl
cmpsl
jmp
ss
imul
dec
in
pop
nop
sub
pop
push
inc
xor
xor
ljmp
and
xchg
pop
adc
adc
dec
add
adc
cmpsl
mov
subb
push
add
sbb
adc
push
push
dec
lcall
xchg
add
xor
jae
add
arpl
adc
adc
enter
enter
push
addl
pop
push
or
les
inc
data16
or
xchg
xchg
nop
mov
rclb
mov
dec
rclb
mov
fidivs
lea
pop
and
xchg
mov
js
cmp
subb
mov
gs
ljmp
hlt
add
inc
rorb
sub
lret
mov
mov
push
pop
pop
sub
rolb
incl
in
jae
xchg
push
js
loope
pop
loopne
stc
mov
frstor
movsb
or
in
xchg
add
push
cmpsl
add
sbb
adc
in
je
jmp
sub
addb
pop
xor
sbb
cmp
je
icebp
incb
or
hlt
nop
xor
loopne
fstps
lock
mov
prefetch
mov
jmp
imul
test
push
movsb
adc
out
movsb
data16
cld
dec
push
jp
dec
sbb
in
xchg
mov
popf
jno
jne
pop
adc
xor
add
mov
push
dec
out
cmp
es
das
xchg
inc
push
sub
mov
addr16
adc
push
or
push
sbbb
lods
clc
mov
int3
cwtl
or
es
idivb
mov
shr
or
lret
push
add
add
cmp
hlt
or
or
leave
insl
test
sub
sbb
and
mov
outsb
or
jecxz
push
cmp
adc
adc
jbe
rorb
imul
lock
sbb
outsl
lahf
imul
sti
or
sub
add
and
test
mov
test
pusha
xchg
sarb
and
push
jnp
test
inc
push
add
dec
dec
pushf
add
or
lock
fimuls
xor
arpl
push
mov
and
pop
jo
pop
pop
push
pop
xchg
inc
sbb
inc
sbb
pop
rcrb
or
mov
rolb
push
bound
loopne
mov
rorl
pop
fs
stos
sub
mov
adc
and
add
pop
insl
and
inc
xor
cltd
dec
popa
mov
out
sbb
lea
or
dec
or
cwtl
mov
pop
push
add
inc
cmpsb
mov
imul
push
lcall
push
pop
ficomps
ljmp
add
jle
ret
cmpsb
movl
movsb
push
stos
sub
stos
enter
sbb
jmp
sbb
or
movsl
mov
sti
or
or
push
mov
lret
cld
and
and
ljmp
dec
in
bound
jne
inc
xchg
mov
xor
inc
hlt
mov
push
sbbl
inc
sbb
test
mov
rclb
xor
mov
xchg
jge
push
fildl
xor
data16
sarl
cmp
lds
or
aam
cli
call
sbb
xor
sbb
push
cltd
cmp
dec
fs
push
adcb
push
imul
je
outsb
sbb
sbb
lods
roll
je
es
adc
xor
test
dec
push
stos
jo
shlb
clc
mov
mov
xchg
movsb
mov
cmp
mov
inc
fcoml
cmpsl
cmp
je
mov
mov
or
scas
and
pushf
sub
lcall
mov
sub
pop
jnp
add
mov
loope
dec
mov
es
out
cmc
cmpsl
test
lds
je
into
push
movzbl
cmp
je
movb
lds
xchg
and
add
add
scas
cmp
and
jl
or
inc
xorl
subb
mov
push
add
lock
pop
and
jp
outsb
inc
stos
cmp
pop
jmp
add
push
adc
ffreep
ret
cmp
mov
aas
mov
inc
loopne
dec
inc
push
pusha
mov
add
adc
or
adc
inc
mov
push
fs
fcmovnb
xor
pop
mov
jo
mov
sbb
cmp
pop
movsb
cs
lret
xlat
xor
or
scas
mov
dec
or
push
or
push
mov
and
mov
mov
jecxz
and
adc
fwait
sub
pop
out
adc
rorb
push
aaa
enter
xorb
fwait
in
ficomps
push
je
or
je
in
arpl
std
lock
jne
mov
add
add
mov
clc
rolb
int3
add
push
mov
mov
lods
and
sysexit
stos
sahf
mov
rcrb
mov
js
sbb
jg
stos
jno
mov
mov
push
lea
scas
mov
pushf
outsl
sub
jl
mov
popa
cmpsl
inc
test
or
jp
fisubs
fwait
aad
mov
push
push
sbb
xor
pop
push
mov
setge
nop
nop
popa
inc
ss
push
pop
jo
popf
mov
loopne
cmp
movsb
and
dec
lcall
mov
mov
add
lea
sbb
add
pushf
mov
addl
inc
add
add
out
push
mov
inc
fcmovnbe
sub
fwait
sti
xchg
and
mov
adc
sbb
push
dec
mov
idiv
aaa
mov
test
in
adc
jge
cld
pop
cmpb
mov
es
test
mulb
insb
push
push
xor
inc
cmp
and
loop
mov
mov
adc
dec
or
adc
enter
dec
ret
leave
popf
mov
mov
or
sbb
add
iret
sbb
je
sub
cmpsl
sahf
add
sub
es
adc
push
ja
arpl
xchg
adc
mov
arpl
mov
test
pushf
mov
jo
or
and
sbb
add
ret
dec
idiv
cld
or
rep
mov
idivl
sbb
adc
movsb
inc
fstl
nop
callw
ret
les
or
lret
inc
mov
inc
divl
mov
push
stos
xchg
das
add
inc
xchg
fucomi
mov
jns
adc
xor
fnstsw
popf
xlat
je
popa
cmp
adc
int3
inc
nop
adc
and
js
pop
data16
call
mov
push
push
test
imul
ffree
fnstsw
mov
jb
mov
pop
xchg
rorl
dec
sbb
mov
test
mov
or
adc
sub
sbb
imul
pop
aaa
pop
shlb
or
sbb
or
mov
movsl
pop
pop
in
mov
stc
movsl
mov
int
dec
mov
pop
pop
mov
push
pop
inc
ret
or
cmpsl
push
cmc
sub
jb
xor
test
enter
test
sbb
mov
sbb
mov
nopl
or
cltd
popa
pop
sbb
inc
aad
roll
dec
bound
inc
xorb
test
lock
inc
sahf
clc
aas
enter
outsl
lds
pop
xchg
dec
mov
xor
and
push
mul
push
push
loopne,pt
shrb
in
jb
xlat
ss
push
adcb
imul
push
and
sub
in
shrl
jno
shl
loop
mov
adc
fnsave
dec
jns
in
or
jo
mov
and
pop
adc
out
lock
dec
lcall
dec
cli
rcrb
loop
fsub
pushl
lods
jo
dec
mov
xchg
fsts
xor
mov
fbld
cmp
add
sub
nop
xor
rcr
inc
incl
add
push
push
push
orb
inc
xor
or
or
faddl
xorl
xor
mov
sub
loopne
test
add
ret
mov
pop
xor
jo
pushf
pusha
cs
sub
pop
cmp
xor
pop
nop
jne
outsb
push
push
mov
dec
jg
mov
subl
addb
or
sub
push
dec
movsb
pop
and
add
fs
push
shrd
push
sub
fisubrs
repnz
pop
fs
xchg
or
and
lock
lock
ficoml
and
xchg
je
scas
xchg
ret
notb
jmp
add
mov
iret
adc
clc
sbb
xchg
lock
xor
pop
mov
dec
push
xor
mov
sbb
sbb
cwtl
dec
scas
adc
xor
inc
lahf
insl
sub
add
mov
jle
or
inc
dec
insl
lahf
jl
sub
test
adc
hlt
xchg
add
mov
clc
lock
insl
mov
push
mov
xchg
dec
push
pop
sbb
add
mov
rcll
inc
hlt
scas
add
push
cld
xor
cmp
jg
mov
fldt
push
or
push
add
bound
jecxz
lea
repz
clc
pop
cmpsl
mov
inc
stos
pop
adc
das
sbb
xor
lock
mov
jge
mov
push
call
push
mov
inc
sarb
pop
imul
push
or
das
push
push
cmp
jne
xchg
xchg
lret
inc
jmp
inc
fs
sub
mov
aas
cmp
add
adcl
add
js
xor
push
test
inc
pop
pop
add
repnz
or
xor
mov
cwtl
xlat
shlb
stos
push
mov
popl
push
enter
aaa
cmc
js
xor
jmp
orb
mov
cmp
sub
scas
pop
sub
and
xchg
outsb
mov
bound
jae
pop
pop
in
test
and
push
ljmp
addb
adc
push
lahf
mov
push
cmp
lods
pop
ja
xchg
mov
stos
rcrl
adcb
sahf
subb
push
mov
push
popa
inc
mov
inc
jne
lret
rclb
pop
cwtl
adc
jle
rclb
or
stc
adcb
or
adc
push
sbb
mov
rolb
test
sub
add
insl
sbb
enter
fstp
xchg
ja
and
adc
addb
mov
rcll
mov
mov
shll
dec
mov
imul
je
dec
add
inc
mov
xor
mov
test
iret
mov
xchg
ror
mov
mov
stc
icebp
cmp
adc
aad
loopne
les
push
mov
cmp
pop
or
iret
jge
pop
pop
push
sbb
pop
enter
int3
add
jmp
cmpsb
scas
xchg
mov
cs
sub
outsl
push
jmp
adc
nop
hlt
mov
ror
fsub
addr16
push
mov
sahf
sbb
push
inc
loopne
mov
mov
and
and
xor
aad
jle
adc
add
jo
xchg
xchg
mov
add
xchg
jne
inc
or
scas
inc
jbe
inc
loope
or
es
pop
add
outsw
dec
cmp
push
andl
rclb
cltd
mov
pop
mov
sub
jp
ret
cmc
sub
cmp
xchg
add
test
push
cltd
les
mov
lods
adc
test
inc
push
loop
pop
jbe
popf
dec
xor
test
mov
ss
pop
cmp
jl
inc
dec
push
repnz
repnz
sub
or
jge
pusha
int3
inc
fxch
mov
mov
pop
push
divb
add
cmp
push
adc
pop
js
lods
in
sub
sub
out
xchg
inc
scas
mov
insb
dec
xor
test
jl
mov
sub
inc
dec
int
push
roll
mov
jle
fcomps
jo
adc
jle
mov
imull
and
lea
mov
push
add
in
mov
mov
mov
pop
in
cmp
cld
cmp
add
lret
mov
push
std
xor
mov
mov
out
xchg
shlb
mov
shr
xor
adc
loopne
in
mov
dec
inc
popa
scas
cld
lea
test
ret
movl
call
add
aaa
negb
jmp
add
mov
xchg
cld
push
in
jg
pop
and
or
inc
push
or
test
and
add
lock
mov
das
xor
mov
xor
dec
add
add
xadd
inc
push
shll
gs
adc
mov
or
es
decb
mov
fdivs
mov
push
lods
xchg
int
inc
dec
and
les
les
and
enter
lock
pop
pop
add
push
cmp
in
pop
scas
pop
filds
jne
leave
shrl
add
jb
orb
frstor
scas
mov
mull
cmpsl
mov
loopne
mov
sub
and
and
mov
mov
imul
rorb
mov
and
mov
mov
jl
mull
xor
push
nop
movups
inc
loopne
push
xchg
hlt
cmovs
mov
pop
sub
inc
push
orb
jecxz
pop
popa
cld
subl
add
or
sbb
xor
ds
dec
mov
sbb
aas
in
sub
shlb
ja
add
adc
xor
ljmp
cltd
and
les
or
inc
jo
mov
xchg
mov
sub
xor
adc
add
add
push
movsb
jl
stc
lods
xchg
mov
xorb
cmc
push
jecxz
push
inc
addr16
lea
test
or
and
jp
push
ss
jmp
orb
sbb
or
cmp
xchg
jns
cmp
push
pop
mov
xchg
fadd
sbb
xchg
in
sub
mov
loopne
push
xlat
mov
ja
xor
push
movsb
rorl
popa
das
es
sbb
adc
cli
push
sub
loopne
inc
mov
pushf
dec
push
jle
or
fidivs
xor
test
or
sti
mov
andb
fldl
add
xchg
mov
pop
inc
push
or
loope
std
and
movups
faddl
pop
inc
mov
pop
sbb
mov
cld
mov
xchg
or
jl
frstor
xor
jl
mov
adc
loope
or
push
test
and
fs
mov
cmp
xchg
cmp
jecxz
rclb
pop
adc
in
in
and
xchg
insb
xchg
push
dec
cmpsb
in
mov
jbe
out
jmp
pop
movsb
adc
mov
mov
popa
sbb
and
pop
dec
add
adc
push
loope
cmp
jne
mov
xor
fimull
and
sbb
add
loope
jl
mov
mov
sub
sahf
add
mov
push
xchg
push
sbb
mov
or
ficompl
pop
push
add
sar
dec
dec
and
imul
push
dec
sub
cmpsl
sahf
sbb
sub
mov
or
mov
cs
shlb
add
add
nop
sbb
pop
jp
xor
add
add
mov
sarl
shrl
xchg
addl
or
leave
dec
loop
xor
rolb
mov
dec
sbb
pop
cmp
sub
sbb
imul
or
scas
adc
push
push
rorb
xchg
sahf
xchg
jnp
mov
sbb
push
bound
or
test
pop
xor
rcrb
xor
daa
jl
mov
sbbl
repnz
loope
call
mov
push
mov
push
nop
daa
pushf
inc
sub
xchg
push
cwtl
sub
mov
ret
add
push
push
ss
sub
enter
stos
mov
daa
jae
lods
dec
in
das
push
push
testb
push
mov
mov
mov
sbb
push
loopne
sub
bts
xchg
or
mov
push
xor
enter
popa
fistpll
dec
sub
add
cltd
test
xchg
sahf
inc
pop
shlb
push
inc
loop
adc
sbb
jmp
rolb
push
push
inc
or
or
pop
cmc
inc
or
fs
rorl
dec
fdivrs
imul
imul
and
inc
adc
push
fnstenv
add
mov
push
add
mov
or
jbe
in
lods
fnstenv
sbb
mov
out
add
loopne
adc
inc
push
aam
inc
add
xchg
mov
aam
xchg
scas
add
push
cmpsb
adc
fs
mov
mov
ja
push
or
xor
pop
xchg
sub
scas
and
or
addr16
daa
mov
mov
xchg
jg
sub
outsl
adc
inc
aaa
mov
cmp
mov
iret
ficomps
loopne
jp
xchg
movsl
aaa
addr16
jmp
push
test
mov
dec
dec
addr16
lock
xchg
pop
and
mov
jg
adc
test
xchg
lcall
arpl
data16
das
gs
cltd
pop
jnp,pn
stos
dec
sub
xchg
or
sub
mov
leave
aad
aas
xor
lahf
push
sbb
dec
clc
enter
xchg
adcl
and
dec
test
loope
imul
or
aaa
push
inc
mov
call
pusha
xor
pop
sub
seta
lock
and
xor
aaa
in
testl
insb
pusha
or
sub
js
mov
mov
lods
js
je
or
test
clc
imul
into
icebp
push
cmp
inc
and
add
aam
or
jp
js
pop
sbb
jecxz
jle
push
in
sbb
xchg
fwait
stc
cmpsb
rol
imul
xor
inc
jecxz
out
mov
jb
jne
push
mov
and
fsubl
std
int3
inc
push
fstpl
xchg
mov
popf
or
call
pop
sbb
sahf
xchg
or
mov
enter
adc
and
inc
mov
adc
pop
or
add
push
inc
xchg
xor
int3
mov
xchg
scas
inc
jnp
js
or
std
sbb
movsl
jnp
push
inc
and
inc
push
addb
and
pop
or
sbb
jp
pop
mov
adc
jge
jb
xchg
xchg
xchg
test
sbb
push
jle
std
cmpsb
nop
adc
jo
lret
je
movsb
and
icebp
xchg
fs
shlb
mov
add
int3
add
fwait
call
and
inc
sbb
js
inc
hlt
fistpl
es
push
add
push
incl
xchg
mov
into
sub
inc
lea
jp
movsb
mov
sub
push
add
lds
push
sbb
or
add
sub
movsl
movaps
sub
divl
iret
jo
das
pushf
sbb
add
scas
xor
sub
fwait
loope
inc
xor
fdivl
lret
and
mov
inc
cmp
cld
xchg
and
movsb
add
stos
sbb
sbb
sbb
cltd
dec
inc
jmp
xchg
scas
add
cmpl
sbb
insl
dec
mov
adc
push
push
sbb
push
mov
jl
mov
and
rorb
jo
andb
mov
pop
xchg
mov
mov
mov
mov
mov
add
sbb
push
aad
inc
popa
mov
adc
fistl
xor
cmc
mov
adc
popf
loope
out
xor
out
pop
inc
mov
push
or
inc
and
ficoms
test
xchg
cmp
int
pminub
and
push
arpl
dec
add
rsm
mov
mov
fistpll
testl
sbb
cmp
insl
xor
mov
sub
xorb
jmp
push
imul
mov
test
inc
sub
cmpb
inc
stos
push
push
inc
or
sahf
dec
add
sub
add
jns
div
cld
pop
mov
or
mov
push
and
fcompl
adc
test
shlb
test
push
sub
push
addr16
bndstx
imul
inc
mov
pop
xchg
add
sub
in
push
lock
data16
sbb
inc
xlat
pop
cmp
cli
addr16
sub
sub
inc
cmp
lret
mov
nop
enter
push
adc
pop
test
adc
or
lret
mov
or
cmp
clc
or
xor
adc
mov
adc
sti
dec
jl
mov
jne
mov
mov
push
bound
jne
fidivrs
lret
roll
and
pop
ds
ja
xchg
ja
xchg
pop
push
outsl
push
or
dec
loop
lods
add
mov
cltd
push
xor
pusha
or
nop
push
push
inc
nop
test
lods
in
std
xchg
push
pushl
stos
rcr
jp
adc
pop
and
dec
lds
aaa
add
call
in
add
out
or
xchg
and
inc
xor
push
xor
mov
push
je
push
xorps
or
rclb
push
or
dec
orl
adc
loopne
push
pop
pop
jmp
jmp
inc
add
jo,pt
bound
and
cmpsl
xchg
sbb
push
and
leave
sahf
inc
shll
testb
clc
mov
pop
aaa
cmp
adc
push
data16
cmpsb
xor
in
add
pop
inc
add
jo
push
push
dec
enter
pusha
or
or
push
push
and
inc
inc
xchg
mov
fldenv
push
pusha
adc
jle
je
bound
icebp
pop
add
push
pop
enter
std
call
sbbl
inc
or
add
or
cmp
xor
push
pop
mov
call
dec
inc
push
scas
test
jg
call
fucomip
mov
xor
sbb
std
and
rcrl
push
push
or
enter
in
push
in
push
or
inc
push
jne,pt
cmp
popa
fwait
fstps
jl
adc
int3
into
jp
fnsave
popa
shrb
push
lea
jecxz
mov
cmpsl
or
push
sbb
in
add
pusha
push
or
mov
and
jmp
loopne
ds
mov
push
subl
loopne
push
jno
sbb
push
jmp
pop
mov
or
mov
push
data16
jecxz
lds
ret
adc
dec
mov
hlt
dec
pop
arpl
xchg
imul
jge
mov
in
or
mov
int
nop
add
enter
or
aam
imul
inc
or
cmp
mov
or
js
inc
outsb
cmp
mov
pop
in
dec
test
sbb
mov
pop
xchg
add
pop
in
js
shlb
sbb
pop
adc
lret
aaa
ret
out
xor
pusha
mov
rol
mov
ror
xor
ljmp
xor
sub
jnp
xor
shr
xor
add
add
push
orb
add
mov
mov
out
cmp
mov
iret
or
jae
or
clc
push
shll
pop
call
add
aam
sub
jge
add
fs
add
rclb
out
push
jno
ror
cli
fisubrs
sbb
xor
and
and
xchg
push
aam
push
repnz
inc
sbb
xor
imul
sbb
fmull
pop
push
or
and
not
ret
rcl
add
add
cmp
add
add
call
fsubr
rcl
adc
call
repz
rorl
cli
mov
rol
out
dec
shr
add
push
xor
add
fsub
in
cmpsb
imul
in
cmp
aam
in
rclb
lahf
push
cmp
and
or
bound
push
daa
xor
punpckldq
pop
mov
push
add
xor
fadd
cs
call
push
shl
cwtl
loopne
in
sbb
loopne
or
dec
cmp
pop
cmp
movsb
imul
push
jbe
xor
or
lcall
add
in
stos
mov
jne
and
and
loopne
jbe
in
iret
or
xor
sbb
xor
push
test
adc
adcb
mov
cmp
jo
ret
push
jo
cmp
add
adc
cmp
push
inc
pusha
aas
xor
daa
stos
adc
adc
push
pop
jg
icebp
loop
mov
add
add
fs
fadds
pop
jbe
call
aas
lcall
push
clc
jp
push
imul
add
gs
fdivrs
inc
lcall
in
aas
push
cmp
xor
inc
or
xor
xchg
dec
sub
clc
jo
cli
stos
push
test
pushf
aam
dec
xorb
and
inc
in
in
imul
xor
shr
rolb
adc
inc
aaa
cli
xor
push
pop
xor
xor
shlb
rcrb
inc
sub
nop
cmpsb
imul
jle
inc
cmp
es
sbb
lret
adc
sahf
dec
cmp
lcall
add
xor
inc
cmpsb
pusha
inc
jb
xor
orb
dec
cmp
add
push
xor
rcrb
cmp
enter
dec
pop
adcb
mov
fwait
dec
jae
push
add
or
push
or
cs
push
sbb
movsb
cltd
add
inc
pusha
inc
leave
or
jb
or
ss
rorb
adc
inc
dec
sahf
roll
andl
pop
cmpsl
push
fs
dec
mov
stc
stc
adc
cmc
clc
mov
adc
pop
add
xchg
inc
mov
dec
testb
or
dec
mov
stos
dec
shll
loopne
loopne
or
sarl
push
sbb
ja
addb
lret
mov
andb
shrl
push
add
fimuls
dec
add
cmp
jb
fimull
aaa
incb
sub
lea
push
popa
ljmp
enter
mov
dec
clc
sub
sarb
clc
mov
or
mov
add
add
xlat
mov
inc
jae
mov
sub
jmp
pop
lods
or
adc
aas
lea
jmp
lea
ja
push
in
push
sub
pop
add
dec
or
mov
dec
jne
pop
xor
add
mov
mov
xchg
sub
mov
cmp
jbe
or
adc
test
repnz
jg
cmp
sub
jae
push
add
fisttpl
pop
fadds
rep
or
stos
jle
movsb
mov
or
mov
jle
mov
mov
outsl
pop
loopne
ror
rcll
mov
notl
lock
adc
mov
sbb
cmc
fwait
push
in
adc
push
call
test
pop
dec
sbb
dec
sbb
sarb
and
cmp
inc
add
popl
ja
out
inc
fisubs
mov
push
pushf
es
push
jmp
xchg
scas
xor
in
push
cmpsb
or
sub
adc
pop
dec
xor
test
pop
pop
jmp
lods
cs
sub
popf
movb
cmp
push
dec
jecxz
or
out
scas
or
xor
mov
mov
push
outsl
lock
xor
aad
rep
or
lret
pop
or
jo
or
mov
pop
fcmovb
mov
insb
test
adc
push
cmp
inc
dec
out
cs
in
xchg
or
add
dec
add
loopne
add
fs
lds
cli
add
nop
in
test
adc
adc
inc
loopne
mov
cmp
sbb
or
lods
sti
jns
pusha
ljmp
add
sub
dec
inc
shll
and
dec
inc
xchg
fidivrl
dec
in
pop
ret
adcb
sbb
call
and
sub
inc
mov
jae
inc
scas
cmpsb
inc
jno
and
mov
sbb
xchg
andl
mov
inc
adc
adc
in
xchg
cmp
sub
push
or
cwtl
pop
movsb
and
add
or
cmp
pop
fimuls
mov
adc
test
sub
cmpsb
mov
incl
and
adc
mov
in
lock
xchg
dec
fsubs
lock
or
dec
jle
es
mov
inc
sbb
push
fs
push
cmpsb
add
xchg
mov
mov
push
xchg
jo
push
lret
out
and
xor
fdivr
adc
in
or
in
mov
unpckhps
mov
and
pop
nop
ljmp
popf
sub
and
xor
jmp
xor
push
dec
js
pop
add
or
mov
aas
push
lds
outsl
repz
aam
ja
test
mov
cmc
mov
cmp
add
shl
dec
xor
xor
push
aas
movsb
mov
enter
adc
or
jae
repnz
jg
mov
test
into
jle
push
add
xchg
inc
mov
jmp
inc
xor
imul
cmpsb
mov
rorb
inc
scas
xchg
add
xor
mov
popa
sbb
insb
loopne
cld
inc
shlb
jge
in
stos
pop
push
pushl
inc
cmp
inc
jmp
popa
mov
test
sahf
movsb
sbbl
push
jp
pushl
adc
nop
push
arpl
nop
std
test
cld
mov
pop
push
add
mov
xor
push
cmp
divl
mov
push
push
xor
mov
dec
jbe
jecxz
push
push
leave
daa
add
out
jnp
out
mov
sub
lcall
dec
mov
cmc
data16
adc
sub
push
jp
decl
cli
mov
hlt
je
cmp
jbe
jns
lods
mul
in
pop
sub
fs
mov
int
fs
xor
xchg
add
in
jg
lods
xor
in
and
and
and
idivl
mov
jnp
test
repz
adc
enter
or
enter
jae
or
orl
ja
mov
push
movsb
fildl
push
les
call
push
dec
or
mov
mov
or
dec
add
movb
pop
jne
test
push
adc
sbb
fsubrl
add
sarb
adc
cmp
loop
xlat
sbb
pushf
mov
push
shrl
or
mov
mov
add
subl
test
add
aas
pop
pop
mov
add
out
ja
dec
add
nop
and
ficompl
jbe
into
and
mov
out
mov
pop
loopne
add
push
jae
push
xchg
cmp
mov
iret
jmp
push
pop
dec
cwtl
inc
pop
in
push
push
outsb
test
mov
and
decl
mov
adc
push
pop
xchg
mov
push
cmp
jmp
cmpsb
push
sub
xor
lahf
in
icebp
mov
mov
push
mov
and
movntps
andl
mov
sbb
cs
xor
test
jl
int3
sahf
in
and
es
mov
jmp
and
ja
dec
mov
add
adc
and
hlt
pop
mov
sbb
xchg
call
push
sbbb
and
andb
or
sbb
adc
or
jl
fiadds
add
add
mov
sar
sub
cmp
rolb
add
roll
push
pop
add
arpl
push
sub
push
lcall
inc
sbb
lds
ljmp
notb
adc
jno
je
lock
or
xor
xchg
scas
push
inc
push
ret
clc
and
mov
xchg
lret
xchg
mov
and
mov
or
ret
lods
adc
push
je
fadds
and
pusha
rolb
sbb
adc
inc
cmp
loope
lods
adc
adc
lcall
movsb
sub
sub
lods
xchg
sysret
adcb
push
xorb
in
inc
loopne
mov
push
adc
add
je
popa
insb
xchg
movb
and
push
inc
dec
adcb
jbe
add
fsubrl
jne
dec
xor
pop
cmp
xchg
add
push
je
cmp
and
sub
mov
es
sub
lea
jbe
sub
mov
dec
mov
cmp
push
dec
add
lcall
push
sbb
cmp
cmp
pop
icebp
scas
loope
mov
cld
inc
push
add
sub
push
sub
ret
mov
ficomps
ss
cmp
and
sub
data16
dec
cmp
ja
jae
fadds
jb
sbb
sti
add
adc
pop
jne
mov
sub
gs
pop
inc
ror
mov
inc
mov
arpl
loope
jmp
jmp
or
jmp
adc
rorl
inc
jmp
pop
pusha
ret
adc
sbb
data16
mov
dec
xchg
mov
xor
jne
pop
add
scas
xor
cmp
cld
ja
or
inc
push
loope
fisttpl
cmp
ret
jmp
xchg
xchg
dec
test
fsub
fsub
mov
fidivs
xor
mov
cmp
pushf
xor
jo
mov
lcall
sub
push
mov
mov
push
mov
sbb
ficomps
inc
cmp
mov
movb
clc
sub
cltd
adc
into
jbe
sub
sub
movzbl
xchg
inc
dec
mov
jne
insl
pop
add
and
add
pop
int
addl
mov
rorl
mov
or
repz
and
push
dec
add
jo
out
add
imul
sbb
jmp
test
fnstcw
jge
je
test
daa
jne
mov
inc
pop
les
push
adc
add
dec
lret
xor
inc
cmp
jl
pop
decb
mov
movsl
jbe
mov
aaa
ret
push
xor
pop
addl
xor
lock
adc
dec
push
and
je
lret
or
fs
inc
out
push
outsb
mov
or
jle
push
sub
xor
xor
out
flds
das
add
insb
push
push
lcall
xchg
stc
pop
nop
shl
add
push
inc
arpl
adcb
nop
adc
test
aaa
pop
mov
xor
inc
xor
push
cmp
jl
cs
inc
add
inc
add
push
fdivs
ss
inc
les
mov
jmp
lea
xor
bts
nop
std
pop
or
testb
jne
push
or
in
inc
sub
sub
sbb
in
pop
or
mov
hlt
addb
adcb
mov
inc
in
mov
in
das
cmp
loope
and
add
mov
enter
shl
add
ret
mov
incl
add
lret
mov
fidivrl
movsw
movsb
mov
push
pop
les
dec
fildll
jp
jge
ficoml
int
or
cmp
cmp
push
pop
inc
and
xor
push
imul
add
sub
sub
push
dec
outsl
add
nop
or
xchg
adc
push
sub
insb
push
pop
or
sub
xorb
cmpsb
lock
or
xor
stos
call
adc
pop
aas
pop
lret
add
and
cmc
hlt
pop
pusha
loopne
cmpsl
gs
mov
or
cmp
cmpsl
fnstenv
imul
jp
mov
and
and
je
andb
sarb
adc
mov
iret
and
lock
lret
aad
xor
ds
xchg
push
push
ret
cmp
and
sbb
stos
xlat
icebp
addl
mov
and
sub
push
pop
icebp
cmp
rorb
sahf
ljmp
jno
push
adc
or
jge
or
jle
mov
or
add
dec
in
mov
push
flds
xchg
pop
test
daa
pushf
add
arpl
inc
xchg
cmpsb
push
push
out
in
jns
and
dec
sub
xchg
or
xor
dec
and
push
sub
xchg
jo
pusha
test
shll
mov
xor
in
test
cmp
addl
xchg
movsl
mov
or
hlt
pop
or
xor
pop
add
xor
ss
dec
jb
inc
adc
add
sub
cmpl
jnp
add
push
xor
cmp
push
jbe
ss
insl
jmp
pop
jmp
push
js
divb
xor
call
and
sub
cmp
add
les
mov
or
nop
gs
adc
out
dec
jge
xor
sbb
dec
sub
xchg
sbb
add
cmp
xor
push
ret
adc
movsl
and
jbe
mov
inc
daa
or
fisubrs
mov
stos
mov
jmp
sbb
mov
fnstcw
lock
fbld
sbb
sbb
xchg
mov
loop
cmp
or
mull
std
inc
mov
inc
jmp
or
sub
imul
pushw
sbb
pop
movsb
std
sbb
mull
shrb
ret
mov
jbe
and
xor
add
pusha
rorb
mov
sahf
rorb
sarl
jae
sub
clc
mov
xor
adc
clc
into
add
stc
bound
lods
insb
push
lahf
mov
mov
or
lea
in
and
inc
add
ret
dec
dec
lods
sub
mov
mov
adc
cmp
mov
adc
and
clc
push
sub
test
jmp
jmp
int
dec
mov
add
pop
or
push
movsl
push
add
jno
aaa
or
shr
or
or
lods
xchg
jmp
and
sub
adc
nop
pop
inc
mov
int3
clc
inc
mov
push
push
sarl
ds
int3
inc
jnp
adc
jno
mov
test
push
push
and
clc
push
call
xor
outsl
jae
or
xchg
mov
pop
imul
pop
lea
js
jo
xor
xor
mov
mov
sbb
or
dec
mov
sub
or
xor
dec
add
cwtl
pop
test
inc
les
ret
loopne
rcrl
cmp
pop
or
daa
in
test
sub
pop
push
out
cmp
mov
pop
push
adc
mov
pop
push
push
push
sub
lods
xchg
and
cmp
dec
xchg
pop
mov
cmp
fcompl
mov
add
cwtl
and
lods
test
test
in
cmc
push
cli
mov
sub
adc
jecxz
jne
sbb
xorb
mov
and
push
je
add
push
xchg
add
insb
fcmovbe
mov
add
sub
sbb
inc
mov
aas
jo
out
cmp
jle
add
and
adc
push
mov
sti
mov
xor
jl
pop
push
add
aam
mov
cmp
popf
pop
inc
sub
pop
pop
jo
push
mov
loopne
insl
adc
pop
push
inc
call
aas
jl
sbb
jne
repz
add
sbb
sub
ds
push
and
mov
dec
in
insb
xor
inc
push
cmpsb
lock
dec
sbb
dec
jo
addr16
rolb
jmp
add
mov
pop
cmp
mov
cld
dec
or
sub
inc
jo
jne
addl
add
add
ss
lret
inc
xchg
cmp
scas
xlat
aaa
mov
push
sbb
mov
jmp
pop
mov
std
ret
and
scas
jg
aaa
add
movl
aam
je
mov
add
jo
push
aas
push
sarl
sbb
lock
adc
testb
je
cmp
mov
test
and
push
inc
lret
cmp
xchg
jmp
sub
xor
push
pop
add
push
adc
add
adc
mov
jne
pop
sub
dec
or
sbb
push
shll
mov
std
pop
in
orl
jo
rcrl
push
pop
mov
push
add
sbb
or
loopne
mov
push
dec
and
icebp
jmp
pop
pusha
ret
adc
aaa
cld
dec
ret
adcl
push
pop
jne
jg
add
dec
or
and
sbb
testb
add
fisubrs
pusha
arpl
xchg
jo,pn
cmc
mov
push
pop
jbe
roll
add
aas
movsl
inc
hlt
push
push
mov
lcall
icebp
inc
mov
mov
or
pushf
push
popa
and
or
add
push
push
sbb
mov
push
and
cmp
push
cmpsb
iret
push
push
mov
pop
mov
jbe
scas
rcrl
std
add
mov
int
ds
or
testb
or
cmp
sbb
or
sbb
lahf
mov
add
cmp
mov
pop
jb
jmp
lea
push
sbb
push
adc
andb
faddl
inc
xchg
leave
lret
sub
icebp
push
sbb
and
adc
stc
jmp
sbb
dec
xor
lret
sub
xor
jmp
push
dec
pop
pop
xor
dec
jb
jo
mov
add
xor
sbb
jno
enter
out
inc
lock
out
std
cwtl
dec
rcrb
inc
mov
pop
xor
test
mov
icebp
push
add
cmp
jae
and
loopne
jl
jne
cmp
jne
add
inc
push
xchg
inc
push
adc
testb
push
aam
pop
xchg
push
orl
jbe
xlat
mov
imul
scas
jae
jmp
cs
lods
cmp
adcl
fsubrs
and
addl
js
add
and
loopne
sub
dec
cmp
sbb
sbb
dec
arpl
mov
into
rcrb
pop
sub
data16
inc
xchg
inc
sub
xchg
gs
or
cmp
cmpsb
mov
push
jo
loope
mov
sbb
jo
cmp
fs
pop
push
ja
and
incl
scas
pop
fwait
scas
mov
or
out
pop
xchg
inc
or
mov
or
inc
and
mov
lcall
pop
loopne
fcoml
outsb
dec
rorl
lds
add
inc
push
out
adc
sbb
push
ja
push
cltd
cmp
mov
add
rcr
pop
or
or
pop
ret
ret
mov
int3
add
bound
popf
or
rcll
inc
pusha
adc
call
lock
pusha
dec
adc
cmp
or
adc
in
push
fldl
cwtl
inc
adc
push
sahf
cmpl
push
ljmp
fadd
call
cmpsl
fiadds
adc
mov
nop
rdmsr
orb
loop
xor
jae
fisttpl
sub
aad
test
add
xchg
lods
adc
push
dec
adc
fldt
and
mov
and
scas
jl
popf
xor
insl
pop
mov
fidivrl
repz
push
cmp
stos
mov
or
ljmp
test
sub
push
subl
pop
and
inc
lcall
or
cmp
jmp
mov
pop
ja
mov
lar
aas
pop
cmp
adc
test
lods
pop
in
add
out
in
cwtl
jo
dec
pop
dec
in
pusha
push
orl
add
or
pop
mov
les
push
inc
inc
dec
add
js
clc
dec
lods
mov
mov
pop
nop
xchg
aaa
add
dec
insl
cmp
and
insb
fbld
jo
mov
pop
ds
testl
cmp
dec
out
add
in
insb
cmpsl
ja
add
dec
push
ds
jae
fwait
rcrb
adc
ss
mov
cwtl
shlb
scas
out
andl
inc
sahf
mov
sar
add
cwtl
shl
mov
pop
inc
sbb
xor
jp
inc
ret
add
push
xchg
movsl
inc
dec
loopne
jmp
sbbl
push
pop
pop
ret
add
int3
fisttpl
mov
and
lret
out
aaa
mov
push
jne
cwtl
adc
mov
dec
mov
shlb
mov
push
adc
or
push
out
jb
mov
or
shl
dec
addl
mov
adc
scas
pop
inc
fidivl
adc
ret
jecxz
sub
xchg
or
jbe
cltd
cmpsl
cmpsb
pop
rolb
or
mov
lcall
lock
mov
add
inc
fimuls
jbe
or
pop
cld
mov
mov
adc
pop
inc
inc
inc
ret
sub
jb
cmp
lods
xor
das
pop
lahf
sub
sbb
incl
or
mov
ret
adc
adc
mov
xchg
orb
dec
jo
daa
imul
add
cld
cmp
push
cli
das
aas
push
ret
mov
xchg
add
and
test
or
into
mov
xchg
jo
in
push
inc
movsb
or
dec
pusha
add
andl
ljmp
andl
xor
push
movsl
or
daa
push
movsb
sbb
je
jecxz
sbb
jmp
or
push
dec
sub
dec
xchg
out
jns,pt
lret
or
dec
sbb
pop
add
add
sub
push
adc
pop
mov
dec
out
cmpsb
push
push
and
icebp
xor
icebp
jnp
pop
fnstsw
mov
inc
cmp
mov
dec
push
dec
push
mov
and
pushf
es
push
mov
dec
inc
pop
pop
and
pop
mov
gs
sub
or
mov
lods
popa
sbbl
inc
loopne
mov
shll
or
pop
mov
push
and
inc
sub
leave
jo
icebp
add
in
mov
add
test
pop
dec
les
dec
push
in
mov
add
jmp
add
mov
sub
cmp
ss
jb
js
push
push
ficoml
in
pushf
push
lret
fs
xchg
jge
cmp
push
xchg
loope
push
adc
out
push
js
push
jmp
cmpsl
jae
add
cltd
add
or
sub
cmpsb
jno
mov
add
cmp
cmp
sbb
cmp
lret
addb
clc
mov
cmp
les
cs
sub
mov
fcom
loopne
inc
pop
ja
adc
push
pop
sub
adc
pusha
jne
js
sbb
sbb
mov
shll
or
jle
push
out
push
push
movl
cmpl
add
jge
rorl
mov
cltd
mov
mov
inc
js,pt
inc
repz
xor
sbb
in
sbb
mov
sub
mov
int3
add
inc
mov
adc
ljmp
or
scas
pop
or
xlat
decb
and
or
push
ss
pop
mov
and
clc
jg
jg
mov
dec
test
movd
movaps
out
rcll
clc
jae
xor
jle
aaa
das
mov
xor
cli
rcl
lret
adcl
or
jge
repz
lcall
or
rcr
xchg
ret
xor
fcmovnb
adc
jnp
mov
out
adc
add
adc
push
add
adc
mov
popf
pop
add
dec
mov
roll
add
shl
mov
xor
pop
enter
rorb
ja
fcmovb
sbb
sbb
and
je
imul
mov
ja
pop
cmp
dec
stos
add
daa
or
lds
push
mov
andl
adc
xchg
adc
pop
call
aam
pop
xor
aas
sub
push
sbb
jge
mov
dec
and
jge
pop
inc
lcall
push
sub
pop
mov
cmp
inc
and
leave
cmp
or
mov
dec
out
adc
in
jl
daa
mov
push
or
test
test
push
add
add
scas
xchg
dec
fwait
pop
into
mov
mulb
inc
pusha
loopne
push
fsts
stos
nop
mov
lcall
inc
es
mov
cmp
loopne
lea
je
pusha
jmp
outsl
stos
sub
pop
jne
push
test
pusha
sub
mov
lahf
cmp
jmp
add
cmpsb
test
js
fs
add
negb
cmp
je
cmpsl
int3
adc
in
stos
insb
les
sbb
push
loope
pcmpgtw
or
popf
shr
dec
inc
xorl
adc
push
popa
dec
mov
ret
imul
arpl
mov
das
stc
mov
xchg
jmp
push
or
inc
or
sti
push
xchg
clc
push
pop
add
push
xchg
inc
cmpsb
lock
adc
aas
mov
mov
push
ljmp
inc
cmp
jne
inc
cmp
dec
xor
js
add
dec
adc
add
inc
int3
adc
mov
push
push
adc
mov
push
push
and
mov
dec
cmovbe
push
mov
inc
inc
cmp
cmp
and
pop
and
cs
arpl
jns
leave
repz
adc
push
add
push
ds
in
lret
aam
dec
rcrl
es
or
or
xorb
mov
add
cmp
add
adcl
cs
lods
or
cmp
adc
or
fs
xor
pop
or
mov
repz
aam
int
cmc
divl
sub
add
ret
mov
adc
loope
shlb
dec
leave
sbb
jo
mov
or
or
inc
pop
cmp
mov
mov
shl
rol
mov
inc
cmp
aam
lret
jne
sbb
inc
imul
sbb
push
push
add
mov
out
adc
adc
jb
pop
js
movl
push
cmp
pop
call
test
xor
inc
or
fs
je
add
pop
and
cmp
orl
adc
and
hlt
daa
lret
or
jae
push
inc
jge
rcl
leave
lret
and
fcoml
sbb
inc
xor
bound
and
js
mov
jp
dec
out
sahf
push
push
dec
push
insb
ja
inc
xor
inc
dec
outsb
mov
push
push
flds
dec
pop
insl
movsl
filds
xchg
incb
mov
test
movb
sbb
neg
mov
jge
outsl
inc
enter
jbe
add
jmp
or
mov
inc
pushl
mov
test
cwtl
jbe
mov
inc
mov
cld
jb
fidivrs
sub
add
nop
mov
sbb
pop
mov
dec
dec
mov
inc
push
or
sub
ret
adc
push
test
mov
jo
hlt
or
add
bound
enter
lods
push
push
jbe
cmp
pop
arpl
mov
mov
mov
mov
push
cmp
jb
lea
into
mov
mov
or
or
out
mov
cld
jne
mov
push
cmp
jne
xor
repz
jne
call
in
or
or
iret
jnp
icebp
jb
jmp
adc
push
dec
jmp
adc
icebp
cmp
iret
jmp
std
std
jmp
cld
cld
xor
in
int3
ret
pmaxub
leave
popa
adc
cmp
push
xor
or
inc
and
repnz
hlt
or
and
xorl
push
push
adcb
popa
ret
inc
or
testb
sub
add
jb
mov
adc
dec
cmp
lods
or
cmpsl
loopne
inc
fiaddl
aad
scas
fidivl
pop
std
or
sbb
sbb
or
push
push
cltd
dec
push
push
push
add
and
cmp
cmpsl
loopne
or
pop
push
pop
xchg
out
icebp
arpl
sbb
nop
cltd
cmp
lock
insl
jne
push
pop
cmp
jg
add
mov
mov
dec
cmp
js
sbb
xor
mov
sbb
xchg
and
das
and
mov
lods
xor
sbb
cmc
push
mov
push
push
pop
div
roll
pushf
ret
dec
dec
cmp
mov
nop
xor
popa
sub
sahf
stos
mov
mov
or
push
pop
sub
pop
adc
push
or
and
aaa
mov
xchg
xlat
jb
subl
sub
push
pop
test
lds
sub
adc
adc
pop
adc
int
enter
sbb
fsubr
lcall
outsl
in
loopne
and
test
sbb
jb
adc
sbb
pop
test
sub
cli
and
and
jae
call
add
and
lods
push
mov
outsl
dec
mov
add
xor
cmp
cmp
inc
fstl
jns
inc
pop
mov
inc
jmp
cmp
jne
orl
out
negb
add
add
sub
dec
call
out
je
cmp
push
xor
dec
or
out
or
add
cmp
and
push
jns
adc
insb
adc
pop
jne
dec
add
xor
outsb
jne
inc
lds
cmpsb
loopne
sub
lret
or
push
xorb
jbe
mov
jmp
roll
je
mov
sub
cmp
ja,pn
xor
mov
pop
incl
adc
sbb
loopne
daa
movsb
or
adc
add
rcl
ljmp
push
je
mov
mov
xlat
inc
clc
aaa
nop
and
imul
add
inc
loop
mov
test
jne
test
jne
clc
cmc
sub
push
xorl
push
nop
cmp
sub
jbe
inc
testb
pop
push
add
je
xor
and
mov
push
into
mov
ret
cmpsl
das
in
rolb
jmp
inc
xor
pop
pop
aaa
push
push
xchg
cmp
add
cmp
add
icebp
jmp
push
mov
out
sub
popa
push
sub
daa
push
push
std
push
push
pusha
loopne
stc
shlb
jg
loopne
data16
jge
stos
mov
inc
pop
add
jo
xchg
hlt
mov
pop
sub
test
mov
jbe
setp
or
add
enter
iret
dec
push
in
push
loop
jne
idivb
shrl
lea
xchg
lods
in
sbb
adc
or
or
adc
sbb
rcrb
jne
pop
aad
in
arpl
dec
js
popf
je
test
in
xor
idiv
roll
mov
int3
jmp
testb
call
mov
mov
rolb
or
push
adc
jmp
push
xor
in
es
je
lea
push
aas
push
repnz
push
jmp
jns
dec
adc
jo
xor
dec
scas
scas
push
push
mov
jno
lock
out
push
sbb
mov
mov
in
push
dec
push
jo
add
les
ja
inc
pop
adc
aaa
lret
mov
xor
xor
shr
aam
add
add
add
mov
mov
add
imul
sub
add
movsl
dec
jae
fwait
scas
sbb
or
add
lock
push
or
add
and
or
iret
inc
add
adc
fidivs
sub
cmp
push
cmpps
sub
fucom
mov
and
int
shlb
cmp
jb
lea
push
adc
push
pop
dec
ss
imul
add
mov
enter
pop
pop
test
je
sub
inc
sbb
jp
sbb
or
mov
ret
mov
or
add
pand
jne
push
out
cmp
push
inc
cs
insb
sbb
mov
add
adc
push
add
pop
cmp
mov
pop
pop
or
sbb
test
push
in
shlb
inc
cmp
inc
mov
xchg
xchg
jecxz
sbb
pop
sti
stos
pavgw
xchg
out
pop
lret
data16
add
or
jo
popa
sbbl
push
sbb
aad
mov
jne
daa
mov
add
xor
stos
js
mov
and
push
or
mov
loop
adc
stos
mov
movb
sub
iret
mov
cld
std
add
arpl
mov
push
pop
push
push
cmp
and
cwtl
inc
pusha
pop
cmpsl
push
test
xchg
mov
je
dec
sub
xlat
rorl
data16
pop
lahf
adc
shl
push
shlb
fldenv
mov
mov
and
adc
and
sub
movsl
mov
push
pop
pop
leave
mov
mov
pushf
adc
loope
shrb
in
std
xor
push
mov
popf
mov
repz
and
add
or
loope
mov
lock
out
jb
pop
mov
jp
add
cmovp
ret
in
jnp
inc
rorl
in
xor
jae
in
shl
mov
mov
mov
pop
or
and
lock
scas
sub
dec
or
jecxz
outsb
in
jge
inc
cmpl
aaa
sbb
je
push
add
dec
enter
mov
push
rclb
add
xor
sub
sbb
jecxz
insb
cltd
mov
mov
nop
rolb
xchg
pop
pop
push
fcomps
js
jo
fdivr
jnp
or
loopne
out
add
cmp
jb
xor
cwtl
cmp
je
sbb
ss
jp
mov
xlat
test
out
pop
add
je
cmpsb
fdivl
jmp
movnti
inc
push
dec
mov
or
dec
jbe
add
mov
mov
sub
loopne
in
push
test
add
xor
sub
inc
mov
insb
and
pop
sbb
add
mov
dec
popa
xchg
sahf
or
sti
insl
ret
and
or
or
fcmove
jns
mov
mov
out
and
cmp
mov
pop
xchg
sub
add
mov
cmp
in
dec
or
vaddps
or
push
sbb
cmpsb
cwtl
add
ret
pop
adc
pop
test
jle
sbb
mov
mov
icebp
or
outsl
push
inc
jne
mov
stos
in
cmp
je
push
jbe
and
mov
adc
shlb
or
ret
sarl
mov
cmpsl
mov
or
cmpsb
fsts
leave
mov
jge
sbb
sbbl
outsb
fnstsw
push
jl
mov
mov
xchg
in
inc
or
rcrb
or
and
ss
push
sub
iret
mov
and
adc
ss
push
adc
push
or
cmpsl
push
lock
pusha
into
jl
cmp
adc
or
inc
mov
sahf
fcoml
outsl
inc
xor
jle
jp
mov
lret
push
mov
vmovapd
push
and
outsl
pusha
mov
xlat
jmp
arpl
jl
scas
in
dec
or
mov
dec
mov
std
push
push
pop
jle
imul
movzbl
add
sub
pop
xchg
xor
xchg
ret
lea
mov
adc
imul
push
cmp
inc
dec
add
pop
enter
add
add
repnz
pop
push
shrb
add
add
in
repnz
flds
sbb
inc
fiadds
adcl
push
imul
add
or
pop
enter
dec
or
jb
cmp
sub
cmp
pop
enter
or
jns
loop
or
ja
cmpb
inc
jns
push
nop
or
pusha
in
ja
push
shrd
and
adc
cmp
adc
popa
in
inc
or
adc
lret
add
add
adc
movsl
test
adc
lcall
adc
and
js
push
push
adc
mov
pop
pop
in
lcall
sbb
sbb
pop
enter
add
sbb
push
and
and
push
sbb
push
sbb
je
pop
sbb
jns
aaa
xor
cmp
add
push
or
cmp
inc
push
pop
pop
pop
leave
clc
pushl
add
add
sub
cmp
jae
add
aas
movsl
in
iret
cmp
xchg
dec
and
mov
idivb
mov
cmp
je
lcall
lcall
push
adc
aad
or
out
in
in
out
cmp
enter
out
inc
sbb
fmulp
dec
rcrl
call
fiaddl
dec
cwtl
jmp
jb
sub
and
or
sbb
or
in
in
in
and
repnz
add
mov
out
out
inc
enter
out
sbb
pop
inc
push
imul
in
cmp
icebp
icebp
cmp
sahf
xchg
pslld
out
std
lret
mov
pusha
iret
pushf
lcall
fwait
pop
in
sbb
mov
jb
cmp
div
pop
in
repnz
cmp
cmp
push
fsubs
dec
clc
clc
clc
cltd
adc
add
inc
stc
inc
stc
lock
mov
iret
cli
cli
iret
sti
push
jns
sbb
sti
stos
cld
cld
les
outsl
cld
push
cmovp
pop
sbb
mov
xor
add
addr16
adc
inc
adc
arpl
xorl
sub
add
js
popf
lahf
in
mov
movsb
imul
mov
jecxz
mov
mov
stos
and
enter
ret
push
in
inc
mov
in
xchg
sti
out
out
xchg
add
out
outsb
call
and
sub
lcall
jmp
push
mov
jmp
in
mov
mov
xchg
xchg
sbb
rolb
out
out
cltd
push
and
xor
sbb
pop
repnz
cli
sbb
movsb
test
cs
stos
in
stc
push
stc
jno
sbb
fucomp
rclb
stc
div
negl
int3
pop
fwait
xor
add
stc
out
clc
lcall
sti
sti
lea
inc
sti
cltd
mov
in
cld
orl
scas
out
mov
inc
loopne
mov
cld
sub
mov
pop
push
mov
mul
pop
xchg
mov
scas
testl
mov
out
out
sbb
inc
out
out
dec
push
jno
inc
mull
imull
xchg
xchg
sbb
jno
imul
cmp
pop
pop
mov
or
sub
xchg
negb
mov
mov
inc
negb
testb
add
sbb
repnz
jb
jno
cmc
pop
imul
in
cmc
jae
xchg
cmpsb
jb
pop
dec
cmc
div
not
cmp
jns
and
inc
add
clc
clc
lock
popa
cmp
mov
imul
jno
hlt
pop
mov
inc
bnd
push
hlt
pusha
shll
sbb
out
jne
and
hlt
idivl
jo
jo
insb
push
sti
lahf
pusha
loope
mov
dec
push
cmp
loope
loope
cmp
mov
scas
repz
xchg
mov
test
imul
sbb
repz
repz
jns
repz
movsl
test
bnd
cmc
mov
sub
shll
repnz
mov
in
in
and
les
jns
jne
repnz
je
push
adc
icebp
cmp
mov
icebp
mov
icebp
test
sub
icebp
cmc
push
jno
imul
xchg
pushf
dec
jecxz
fldl
lock
popf
lock
stc
cmc
scas
adc
and
push
lock
sbb
push
lock
test
ss
outsb
sub
mov
sub
mov
rol
in
jb
mov
push
add
and
enter
stos
add
and
dec
add
push
jnp
add
sub
lods
loopne
jne
or
fs
orb
add
sahf
and
add
leave
dec
or
xchg
hlt
movsl
and
ss
or
dec
loope
cmp
data16
roll
dec
push
xor
fwait
iret
repz
inc
scas
inc
cmp
shrl
xor
pop
inc
int
mov
movsb
test
inc
mov
adc
cmc
inc
add
xchg
cmp
jns
jb
inc
test
jg
sbb
mov
clc
in
mov
dec
and
add
daa
jno
mov
mov
stos
mov
ret
insb
adc
sbbl
std
adc
test
mov
popf
sub
je
int
jb
stos
jo
es
adc
std
cltd
sbbb
inc
add
js
insb
stos
or
or
shlb
add
jbe
cmc
dec
fdivp
lcall
jl
mov
adc
leave
jg
mov
je
push
mov
aam
in
push
fiadds
cld
or
adc
or
push
pusha
xor
inc
fadds
mov
pop
cmp
stos
jbe
fmuls
and
add
push
dec
sub
pop
sub
cmp
mov
add
adc
insb
add
sub
adc
and
mov
and
ret
mov
dec
pop
lds
stos
jb
andl
lods
add
xlat
adc
lahf
sub
xor
fprem
dec
adc
mov
add
push
loope
nop
sbb
mov
ljmp
or
pop
loop
mov
je
rep
mov
dec
ljmp
mov
pop
and
lcall
mov
aam
jne
into
int3
add
push
sub
in
inc
cmpsl
mov
adcl
and
mov
mov
sub
push
fdivrp
add
mov
test
inc
test
insl
and
pop
sbb
add
jb
pop
fcoml
rol
rol
and
pop
inc
jle
push
jecxz
inc
inc
adc
cmp
mov
jmp
jb
frstor
inc
cltd
fmuls
inc
xchg
arpl
and
add
sti
cmpsb
mov
adc
cmpb
xor
clc
xchg
inc
enter
jo,pn
adc
je
pop
pop
mov
xchg
roll
sub
inc
inc
mov
cmp
enter
add
loope
in
add
orps
inc
fwait
adcb
add
sbb
ja
lret
pop
xchg
outsb
call
loope
pop
mov
push
xor
inc
inc
add
inc
add
sbb
fimull
mov
add
call
add
fs
sub
rol
js
mov
adc
sbb
int
sub
aad
loope
jo
or
adc
lods
mov
adc
jne
mov
cmp
inc
cmp
sbb
push
or
add
out
dec
mov
ss
aad
adc
lcall
inc
les
ja
imul
and
inc
aaa
add
inc
and
and
sbb
or
lea
add
sub
in
loopne
inc
add
inc
andl
lret
clc
aad
cmp
out
or
jnp
dec
loope
ret
jmp
stos
pop
lock
add
testb
out
fstpl
repz
inc
pop
cmpsl
inc
js
mov
mov
add
fimuls
jne
test
adc
or
inc
and
xchg
stos
add
add
sbb
pop
push
inc
in
inc
xor
or
xorl
fs
roll
sub
sbb
rolb
push
mov
push
pop
xorl
lcall
pop
mov
cltd
pusha
ficoml
arpl
call
mov
data16
rorb
jbe
pop
inc
sbb
movsb
add
stc
xchg
int
xor
inc
push
enter
jns
pop
or
data16
out
xchg
push
mov
or
scas
adc
mov
movsb
mov
jl
add
movl
xchg
inc
add
add
sub
push
adc
add
out
imul
push
mov
mov
jns
out
call
out
sahf
out
hlt
hlt
clc
clc
psrlw
insb
add
jns
adc
add
fldenv
jmp
adc
inc
mov
imul
and
fsubs
and
lea
adcb
or
push
mov
neg
adc
adcb
stc
sub
pop
push
nop
in
adc
push
fiaddl
push
fldcw
jl
mov
add
sahf
inc
push
out
push
outsb
in
xchg
lret
nop
dec
dec
imul
add
mull
out
push
loop
test
push
lahf
out
sahf
xchg
pushf
movsb
lods
mov
pop
out
sahf
pop
aaa
sbb
sbb
sahf
out
sahf
adc
adc
or
inc
sahf
out
or
add
clc
mov
or
push
clc
or
xchg
xor
test
and
daa
pop
add
ja
cmp
sti
pop
imul
cmp
decl
fidivl
add
inc
mov
repnz
cmp
jg
cltd
xor
cmpl
aaa
jbe
push
cltd
pop
idiv
lea
outsb
iret
pushf
push
pusha
or
pop
inc
add
out
mov
dec
mov
mov
xor
inc
ret
data16
cmp
jae
dec
lea
imul
jbe
fwait
les
mov
adc
dec
nop
jmp
mov
pop
sub
int
jno
pop
hlt
int3
orl
xor
clc
push
jg
mov
cmp
lret
add
test
push
or
sbb
dec
dec
je
xchg
pusha
add
push
push
sbb
push
or
inc
jne,pn
xchg
insb
adc
xor
ret
dec
test
xor
pop
decb
mov
je
mov
inc
dec
xchg
dec
jae
imul
push
and
inc
add
mov
filds
xor
jge
ljmp
pop
add
dec
jae
push
pop
push
test
push
adc
fcmovbe
mov
push
mov
fstpl
vmptrst
mov
aam
sbb
jmp
cmp
sbb
or
cmp
jge
jle
mov
push
push
cltd
pop
idiv
ss
mov
in
ret
push
xchg
dec
mull
out
cmp
dec
and
jmp
xor
mov
or
and
shlb
push
rcr
pop
imul
sbb
in
adc
fs
jmp
fcmove
movsl
mov
sbb
xchg
cmpsb
adc
pop
or
je
jo
mov
jecxz
repnz
mov
sub
mov
xchg
jne
mov
pop
incb
inc
jns
adc
push
dec
adc
cmp
mov
jmp
incl
pop
cmp
cmp
inc
pop
sub
cmp
rolb
hlt
and
jl
push
mov
cmp
lds
pop
push
mov
push
xor
mov
js
jmp
jge
pop
je
sbb
push
add
sti
popa
sar
dec
lahf
jno
mov
cmp
xchg
fldenv
push
ret
xchg
mov
je
dec
inc
rcr
test
fbstp
fcomi
mov
jb
add
lret
push
push
dec
mov
jl
pop
adc
push
popl
or
inc
mov
push
and
push
push
push
mov
inc
mov
out
aaa
subl
inc
or
popa
movsb
cmp
pop
stc
pop
push
adc
fldt
stos
xchg
inc
jmp
push
shl
dec
push
pushf
or
and
inc
mov
jne
lea
sub
sub
push
je
mov
push
jae
add
xchg
jns
mov
add
sahf
mov
or
or
push
or
add
add
jns
add
xor
loopne
adc
adc
fdiv
cmp
or
out
call
or
out
hlt
notb
mov
aas
add
lcall
xchg
xchg
rorb
jg
loop
cmp
ret
fcoms
mov
xorb
hlt
dec
js
mov
add
gs
lcall
fadds
adc
call
inc
jg
or
std
xchg
stos
gs
mov
mov
cwtl
lock
or
cld
fisubrl
das
clc
mov
inc
inc
cmp
je
xchg
shlb
cmp
cli
orb
imul
fadds
inc
fwait
push
jle
dec
je
popa
arpl
mov
inc
ficoms
adc
mov
mov
pushf
cli
dec
pop
cmp
dec
mov
add
mov
incl
cwtl
xchg
push
clc
push
inc
sbb
ret
add
inc
imul
sbb
sbb
mov
mov
push
add
or
xchg
rclb
jmp
dec
call
add
movl
or
mov
lock
jmp
cli
test
adc
test
imul
dec
nop
sarl
mov
lcall
inc
or
add
push
enter
pop
inc
int
lcall
push
pop
add
out
push
cli
frstor
sbb
inc
sub
dec
movsb
jb
jns
add
xor
lret
test
pushf
cmp
mov
add
fildl
lahf
dec
mov
add
cmp
push
shl
lea
popa
bound
inc
shl
add
jmp
dec
or
jl
push
in
inc
push
jmp
das
dec
jmp
shr
je
dec
sbb
fcmove
lods
dec
sub
test
pop
and
adc
inc
in
sbb
push
sbb
pop
dec
ret
cmp
dec
sbb
cmpsb
aaa
gs
adc
daa
lea
mov
mov
cmpb
adc
cltd
mov
scas
hlt
movsb
outsb
shll
xchg
cmp
je
push
ret
xchg
push
push
add
call
rcrl
cmp
or
xor
int
xchg
outsb
and
inc
faddl
push
jmp
cmp
inc
add
and
inc
inc
dec
add
pop
mov
test
or
jecxz
lea
insl
sub
cltd
pop
add
mov
and
push
mov
xor
xlat
inc
mov
sub
add
sub
jmp
aas
cmp
push
push
pushf
push
lret
push
add
lahf
jmp
pop
and
in
mov
int
jne
add
inc
and
in
add
and
mov
jmp
mov
ja
xor
adc
inc
or
in
jmp
jnp
hlt
or
insb
add
movsl
divb
xor
cmpsb
pop
mov
ret
pop
xchg
xchg
add
add
adc
xchg
es
add
cmp
rcr
mov
push
aam
sahf
loop
fdivl
inc
rolb
loope
cmp
insl
ds
jmp
pop
arpl
xchg
jno
fs
cmpsb
cld
mov
cli
dec
lds
mov
fimull
pusha
imul
inc
add
dec
loopne
sub
fstpl
mov
or
adc
loop
in
insb
push
into
popf
mov
sub
in
xchg
ljmp
into
jbe
pop
repnz
test
or
jbe
inc
cli
push
cmpl
and
push
mov
add
pop
in
ss
push
pop
out
add
and
xor
xor
lahf
sbb
in
rolb
and
sub
nop
stos
arpl
mov
into
gs
clc
jge
aaa
and
xor
popf
dec
imul
sahf
enter
int3
or
sarb
cmp
push
push
push
mov
enter
mov
leave
or
jmp
mov
cmpsb
popa
or
xchg
adc
xchg
cwtl
dec
lcall
lock
jle
and
or
sub
push
sub
xor
sbb
adc
adc
imul
in
push
stos
lods
or
sarl
aad
xchg
pop
push
das
sbb
addr16
sbb
imul
cmp
lea
sarb
cmp
sub
icebp
pop
xchg
and
into
imul
addb
adc
loopne
and
fdivrs
cmp
rol
rorb
adc
lret
mov
sbb
ja
lods
enter
mov
sbb
mov
faddl
dec
sbbb
mov
sub
push
dec
xchg
jle
adc
repnz
inc
cmpsl
dec
lcall
adc
dec
pop
lods
popf
jmp
mov
lcall
xchg
cmp
xchg
rcr
mov
inc
icebp
cmp
push
pop
xor
shlb
inc
add
mov
fsubr
int
shll
lods
add
sub
mov
call
sbb
cmpsl
rcrb
sub
push
rorl
fs
or
fs
loopne
sbb
push
sub
mov
push
or
lock
add
fstl
sub
mov
and
daa
das
push
ret
int
adc
les
inc
sbb
mov
sub
lea
andl
mov
push
add
ret
push
cmp
in
add
add
cmp
nop
xor
mov
push
xor
dec
stos
xchg
or
jnp
shrb
or
or
push
dec
or
pop
mov
mov
jo
inc
mov
push
fs
mov
pop
repz
sti
sbbb
fisttpl
lea
dec
xchg
addl
cmc
jle
xlat
add
lcall
pop
jg
pop
fadds
adc
mov
daa
xchg
or
add
inc
cs
jo
inc
add
ror
ret
inc
jle
std
jne
cmpl
and
push
shlb
xorl
adc
roll
lret
or
adcl
je
shl
call
cwtl
mov
dec
inc
and
or
loop
mov
push
das
pop
mov
test
andl
mov
mov
mov
sbb
repnz
mov
and
mov
sbb
repnz
adc
popl
rcll
cmp
add
inc
call
mov
push
movl
cmp
xor
sarb
xor
cmp
adc
loope
adcb
shlb
mov
loop
pop
cld
sub
jmp
cmp
mov
push
mov
jo
jmp
sub
sub
je
pop
mov
mov
into
inc
mov
push
sub
push
or
push
sbb
sub
mov
inc
sbb
bound
pop
add
push
jle
shl
or
lock
add
mov
pusha
mov
sub
mov
std
add
testl
daa
or
or
lsl
sbb
rorl
call
and
stos
sbb
dec
int3
sti
mov
add
test
add
test
and
les
add
and
and
ja
sub
and
insl
add
xchg
or
les
popf
popf
out
ret
fdivr
pushf
adc
out
ficoml
push
push
aaa
enter
test
std
push
cmp
push
push
in
sbb
enter
cmpb
into
icebp
pop
add
orb
mov
jmp
and
je
and
sbb
push
into
mov
or
aad
jmp
mov
arpl
lea
mov
mov
and
test
cmp
stos
push
and
sbb
lret
add
jmp
cmp
lds
ljmp
add
ret
repnz
ds
sbb
mov
mov
insb
mov
mov
in
loopne
xor
dec
push
pop
inc
push
cmp
and
cmp
sub
cmp
jge
dec
mov
mov
push
or
add
mov
cli
or
rcrl
cmp
dec
add
cli
mov
cmpsb
push
shrb
cmp
in
pop
inc
addr16
outsb
daa
cmp
std
jne
lock
loope
fldt
stos
enter
xchg
dec
jmp
mov
mov
ret
ret
push
call
js
xchg
push
xor
pop
dec
daa
arpl
mov
adc
stos
push
mov
loope,pn
xchg
ss
sbb
lock
out
into
std
fidivl
insb
add
imul
cs
fwait
dec
lods
call
icebp
stos
jae
and
xor
inc
sbb
push
and
pushf
adc
cli
push
call
in
loope
and
lea
mov
mov
outsl
push
inc
pop
leave
inc
in
pop
dec
aas
pop
mov
imul
push
lea
adc
jmp
mov
ret
push
ds
fs
adcb
std
cmp
inc
cmp
ljmp
inc
out
sar
xchg
sbbb
inc
fidivrl
add
movsb
mov
clc
jb
mov
xor
mov
xchg
cmp
inc
inc
or
adc
mov
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
mov
and
ds
xchg
jl
sbb
push
jbe
mov
jmp
xor
mov
push
mov
inc
dec
jne
xor
jnp
test
testb
rolb
push
insl
pop
mov
cmp
cmc
push
fsqrt
and
or
mov
or
inc
insb
adc
rorb
pop
push
sub
push
and
mov
mov
sub
inc
sbb
or
orb
loopne
shlb
sbb
mov
cld
aas
shlb
inc
dec
push
xchg
jo
int3
cmp
enter
adc
aam
cmp
push
dec
xor
dec
test
popf
xor
dec
cmpsb
push
repnz
stc
jb
sub
mov
mov
ret
sub
ret
clc
add
out
push
inc
dec
loopne
or
pop
sub
jmp
xor
add
mov
adc
add
add
ret
ss
cmp
jmp
adc
out
and
ljmp
fs
jmp
xchg
cltd
frstor
xchg
push
inc
and
stos
add
pop
add
pop
xchg
scas
lret
cmp
fistpl
arpl
movl
mov
rcr
or
fcompl
push
adc
and
pop
sbb
pop
adc
mov
scas
nop
pop
lock
cwtl
xchg
adc
sbb
mov
inc
sbb
sub
xor
dec
pop
sbb
sbb
and
mov
pusha
repnz
cwtl
mov
jne
or
pushl
out
jle
or
out
sahf
jg
cmpl
add
pop
and
pop
cld
xchg
inc
add
lock
dec
or
xor
or
sbb
sub
in
jb
xchg
pop
or
fucomp
push
sbb
mov
lea
jnp
or
aaa
cmpl
inc
inc
cmpsb
or
rsqrtps
jns
aam
movsl
sub
or
pushf
push
xor
movsb
movsl
sub
xor
xor
je
push
out
adc
adc
stos
rcrb
sbb
pop
jbe
sahf
loopne
pop
xchg
fsubs
ret
add
pushf
xor
insb
loope
push
xchg
or
inc
insb
add
addr16
mov
sbb
rcll
sub
inc
pop
pop
xor
and
jmp
frstor
push
cmp
sar
mov
add
add
daa
mov
outsb
test
fisubrs
pop
js
push
add
pusha
inc
stos
pop
cmc
xchg
mov
repz
add
out
test
jns
adc
insb
aam
cwtl
cmp
inc
fsub
in
adc
inc
sub
out
or
jmp
fnstsw
push
fsubrs
sub
mov
mov
cmpsl
addb
add
pop
pop
scas
ret
mov
inc
cwtl
and
sub
dec
xchg
insb
push
cld
lods
aaa
test
push
jo
repz
or
inc
jnp
mov
push
cmp
movsb
xchg
mov
imul
cmpsb
insb
cld
mov
jae
bound
imul
push
outsl
rcrb
or
and
inc
sub
andl
imul
add
sub
pop
xchg
xor
cmp
cmp
movsb
pushf
push
cmp
lea
add
es
dec
add
rorb
push
into
jnp
xor
not
rcl
test
push
stc
je
add
dec
adc
mov
jne
dec
dec
lahf
bound
add
nop
xchg
sbb
nop
add
nop
cmp
inc
cwtl
lds
cmp
cmp
mov
xor
js
push
ud0
push
shl
push
sub
insb
and
mov
test
and
mov
aad
cmp
je
jle
or
and
add
insl
jg
jge
mov
inc
add
add
ja
cmpsl
orl
mov
cwtl
movsb
cmp
cmp
rcrl
push
adc
pushf
cmpsb
and
daa
test
into
movsb
shll
jns
stos
mull
int3
dec
ja
mov
out
mov
sbb
ss
mov
es
mov
dec
push
cwtl
mov
es
aaa
inc
mov
push
sarl
push
xchg
mov
pop
inc
mov
addb
das
push
cmp
aam
adc
and
sub
andl
xor
lea
mov
cmpb
mov
sbb
lret
in
daa
sbb
or
fmul
lret
xchg
fcomps
int3
lretw
lret
lret
out
mov
popf
enter
jecxz
lret
movsl
shrb
push
outsl
and
jae
add
rorl
pop
fidivrl
dec
cld
adc
jecxz
test
sub
aam
add
in
loopne
sbb
fcomps
repnz
loop
and
pop
aad
daa
popa
sbb
scas
xor
decl
pop
xorb
pop
rolb
mov
add
mov
insb
or
icebp
jle
adc
cmp
or
push
or
decl
loop
push
dec
and
in
clc
jg
imull
iret
aas
push
js
or
pop
subb
sub
push
enter
fisttpl
push
sarb
repz
mov
mov
and
fld
out
mov
or
push
test
xorb
mov
push
and
pushf
sub
mov
addb
and
fidivrs
push
inc
dec
push
inc
dec
jl
pop
fs
pop
out
sbb
inc
nop
or
test
mov
adc
clc
lret
pop
imul
push
popa
add
test
push
push
or
mov
inc
jmp
insl
js
or
loope
push
mov
adc
and
add
cli
dec
add
inc
ret
lret
jne
mov
add
dec
cmp
jge
inc
mov
mov
and
ffreep
mov
pop
add
int3
stc
and
add
ljmp
push
or
data16
push
adc
adc
sbbl
add
orl
and
and
mov
aas
add
and
sbb
in
pop
test
test
je
sahf
xor
daa
fwait
xor
daa
and
and
enter
test
aas
or
inc
or
je
repz
add
inc
jae
rcll
cmp
ds
sbb
push
stos
push
push
andb
jge
jmp
orl
add
inc
add
mov
ret
xchg
data16
insb
mov
add
jmp
adc
dec
xor
mov
roll
pop
ret
jbe
mov
xor
test
and
or
push
fdivr
movsl
push
or
jnp
jb
pop
outsb
cmp
rorb
cmp
cmp
aam
loope
imul
loope
testb
test
ja
sbb
cmp
sub
inc
ds
pop
sub
xor
and
push
mov
mov
sbb
hlt
daa
add
and
add
pusha
in
rol
loopne
adc
push
sub
sbb
ljmp
mov
pop
xchg
adc
jno
jg
or
or
inc
sbb
loopne
cmp
or
es
inc
outsl
mov
test
jne
insl
or
outsb
lret
add
inc
mov
mov
lea
inc
sbbl
add
test
sub
ficompl
pop
push
adc
ja
int
lock
in
jo
and
inc
es
cmp
or
hlt
add
inc
push
push
xchg
shlb
pop
dec
loopne
insb
mov
cmp
sub
call
cmp
ret
push
add
fsubrl
jbe
push
mov
pop
test
rolb
or
dec
or
inc
push
clc
xchg
arpl
into
dec
rclb
jecxz
sub
fistl
push
fsubrl
or
push
jo
mov
cs
xor
push
inc
loopne
jb
lea
outsb
pop
xchg
inc
jle
sahf
inc
ret
cmp
lock
notl
loopne
jbe
in
pop
mov
imul
ds
mov
js
sub
dec
xchg
test
push
xor
pushf
inc
pop
mov
mov
and
add
xchg
inc
jns
or
push
call
pop
enter
loopne
add
andl
or
inc
xchg
aam
and
mov
cmc
enter
add
leave
inc
add
push
push
adc
cwtl
sbb
fldl
mov
dec
jmp
aas
inc
or
cvtps2pi
inc
or
shr
or
je
cmpl
rcrb
push
jmp
sarb
ja
xchg
push
inc
orl
pop
test
cmpl
les
lods
xchg
adc
pop
mov
rolb
add
or
mov
jecxz
in
xor
sti
mov
rorb
popf
in
mov
jb
hlt
fadd
fcomps
cmp
xor
push
inc
dec
mov
sti
mov
mov
mov
mov
pop
and
cmp
in
leave
mov
jl
push
leave
test
in
or
cld
cmp
push
or
adc
sahf
pop
test
inc
xor
mov
cld
jbe
icebp
lea
rcrb
jl
pop
icebp
fstp
es
nopl
test
js
cmp
sar
pop
mov
mov
xchg
push
inc
sti
xchg
inc
jnp
jo
mov
or
xchg
lret
movsl
aam
clc
fsubrs
mov
sub
dec
or
nop
out
adc
loop
je
sbb
pop
addr16
scas
pushf
pop
or
add
pop
cs
add
out
loope
int
nop
cli
xchg
sub
adc
pop
aam
mov
adc
mov
aas
mov
add
sub
push
imul
adc
lret
or
ja
movsl
xor
rcrl
mov
mov
hlt
and
dec
jns
or
movsl
hlt
nop
je
or
xor
insb
je
lock
mov
data16
insb
pop
icebp
cmpsb
jo
pusha
sub
and
in
in
ss
or
xor
mov
cmp
and
xor
movsl
jbe
int3
push
incb
fs
or
fwait
adc
pop
outsl
cmc
xchg
data16
sbb
js
test
xlat
je
mov
and
jmp
lret
pop
in
fisubl
rorb
push
neg
icebp
xor
cmp
adc
fcmovbe
inc
cltd
or
add
mov
ret
add
adc
cld
inc
jmp
lock
scas
dec
nop
and
jae
dec
testl
jbe
imul
filds
add
dec
and
in
or
fmuls
mov
sub
xor
in
sub
mov
dec
sti
nop
mov
daa
push
or
cmp
stos
mov
push
insl
cmp
xchg
sbbl
cmpsl
loope
add
aam
call
dec
lret
add
cmp
fdivs
dec
pushl
test
sti
test
push
mov
push
int
pushl
lret
ja
add
mov
mov
lret
jge
lcall
lret
inc
mov
rorl
lret
cmpb
add
test
je
cmp
xchg
push
cmp
clc
push
sbb
pop
cli
test
sub
loop
je
adc
scas
add
addr16
inc
inc
xor
je
cmp
je
push
ss
lods
test
insl
cwtl
fwait
cmp
push
enter
insb
xor
fisttps
test
loope
xor
mov
push
add
movsb
orb
mov
jb
test
push
pop
pushf
fld
or
adcb
push
les
into
ret
jge
jp
jne
mov
jne
mov
jmp
cmp
je
cli
pop
jle
insl
cmpl
incl
data16
push
mov
xor
int
pop
xor
sbb
mov
mov
call
cld
adc
sti
shl
jnp
fidivrl
sub
fwait
adcb
sbb
ret
and
in
out
stc
lcall
mov
cwtl
inc
call
in
sub
addb
cwtl
stos
mov
push
push
jg
xor
cwtl
push
push
outsb
mov
add
jae
addr16
incb
pop
dec
mov
adc
inc
daa
add
adc
push
call
pop
data16
push
js
dec
push
sub
lret
out
mov
jecxz
jne
push
in
push
fbstp
inc
push
data16
or
mov
or
jmp
aaa
int3
je
cltd
nop
shrb
xchg
dec
sub
jl
xchg
rolb
dec
jae
and
orb
nop
mov
fimull
jge
add
shll
sbb
dec
test
pop
mov
or
jne
and
loope
lods
jne
mov
outsb
das
sbb
cmc
ret
pop
mov
push
inc
je
mov
cltd
push
sub
jmp
leave
ret
sub
shll
stc
cmp
xchg
clc
sahf
add
mov
dec
jmp
pop
add
inc
cmp
jecxz
aas
je
sub
adc
mov
inc
dec
shlb
add
movb
inc
jmp
cmovl
aad
jmp
dec
data16
sub
inc
sbb
sub
fwait
sbb
adcl
gs
sub
sub
mov
push
jmp
and
sub
push
test
outsl
inc
daa
sahf
and
in
push
aam
cltd
sub
sub
mov
or
pop
shl
push
jp
fdivl
mov
fadd
in
jae
cmp
sub
cltd
inc
out
adc
push
jbe
loope
adc
dec
sbbl
jne
add
jp
nop
aaa
cmp
int
call
aad
xor
rcll
push
lock
sbb
xchg
jnp
add
jg
xor
ljmp
and
adc
je
or
enter
clc
cmp
pop
mov
ret
mov
mov
sub
movsb
push
loope
push
cmp
jp,pt
push
add
sub
andl
jl
xor
adc
push
xor
orb
rol
ss
rolb
insl
sbb
sbb
imul
inc
mov
push
pop
and
idivb
jmp
loopne
pop
sbb
pop
mov
mov
dec
cmp
push
inc
sbb
iret
or
and
addl
and
mov
add
test
sbb
mov
mov
sbb
mov
push
xor
push
push
xchg
xchg
sbb
mov
js
inc
jl
push
pop
ret
not
push
jne
push
aas
out
xchg
lds
enter
ffreep
loopne
dec
icebp
pushf
jge
jo
test
cmp
sub
negl
xor
and
popa
cmp
arpl
push
xchg
adc
jne
and
shlb
and
and
repnz
subb
inc
xchg
aam
test
lds
mov
mov
xchg
nop
loopne
movsb
lea
add
sub
and
adc
lds
or
cld
out
mov
adc
enter
ret
and
mov
fdivl
rclb
push
xchg
push
sbb
test
nop
mov
aas
aad
sub
cld
shr
mov
imul
or
fiaddl
push
dec
or
outsb
mov
xor
sbb
mov
mov
mov
nop
sbb
mov
lcall
cli
add
cmp
jbe
push
pop
outsl
mov
or
subb
jae
mov
dec
shr
lea
not
and
decb
jne
sub
aad
sbb
lea
xor
pop
cmp
pop
add
push
dec
imul
add
pop
and
addl
jg
pusha
jmp
clc
and
notb
mov
clc
and
sti
add
add
js
and
cmp
in
call
mov
imul
cmp
je
cs
andb
data16
mov
outsl
pop
mov
shr
not
and
add
push
andl
xor
dec
loopne
sahf
sub
shll
cltd
dec
or
add
mov
lahf
xchg
inc
jmp
and
jle
ljmp
or
mov
inc
push
pusha
ficomps
or
dec
or
adc
jo
popa
pusha
mov
mov
inc
mov
mov
push
mov
jl
lahf
loope
push
or
pop
mov
pop
dec
or
jmp
dec
adc
push
mov
or
test
add
inc
xor
lcall
and
cmc
or
and
sub
dec
pusha
imulb
pusha
lcall
shl
add
scas
jp
push
call
sbb
fcmovne
aas
gs
push
or
lcall
sub
jnp
dec
inc
adc
inc
cli
sub
std
fsubl
and
inc
jecxz
pop
loopne
and
or
mov
fildll
enter
sbb
inc
fs
adc
outsl
insb
mov
sub
cmp
jle
jp
or
mov
add
jbe
mov
sub
mov
inc
mov
jne
data16
outsl
push
xchg
fnstsw
addr16
add
dec
and
les
and
push
aad
inc
adc
bound
jge
lods
test
fidivrl
and
testb
sub
add
lds
mov
push
movsl
push
push
mov
sbb
pop
shlb
lea
jp
rolb
mov
imul
lret
incb
pop
or
cltd
sahf
add
or
hlt
or
adc
in
ror
sbb
cmp
mov
lea
sub
cli
ja
sub
rcll
sub
push
inc
je
clc
call
or
orl
mov
push
out
xchg
inc
cld
lock
call
adc
add
je
clc
adc
pushf
ret
adc
jb
fcoml
sub
sub
fs
inc
mov
jnp
pop
mov
inc
mov
lock
push
pop
call
add
js
lds
sbb
jecxz
shlb
int3
les
or
adc
ds
xlat
sub
pop
shr
xchg
mov
or
cld
mov
dec
cmp
clc
mov
and
mov
jl
pushf
jle
int3
inc
sub
jl
cmp
jne
lock
add
mov
rclb
je
push
pop
sub
cmpsl
data16
sub
iret
movsb
jb
inc
clc
rolb
es
add
cmp
nop
push
or
push
jns
in
sub
sub
add
pop
push
xor
sub
adc
pushf
rcrl
dec
mov
cs
fstpl
lea
mov
sbb
add
adc
jle
imul
push
jns
push
pop
adc
lcall
add
nop
scas
mov
data16
and
js
adc
cmp
stos
sbb
insb
xor
sbb
cwtl
xchg
mov
and
inc
and
clc
loopne
into
hlt
jl
int
or
mov
outsb
in
push
xchg
sub
pop
xor
push
sar
add
jp
movsb
pop
pop
ret
xchg
xchg
movsl
sbb
cmp
sarb
mov
xchg
jecxz
xor
push
mov
push
or
fcmovu
ja
push
push
dec
ficoms
add
fimull
or
mov
out
dec
cmp
xchg
mov
push
pop
mov
lods
decb
into
mov
out
cmp
bswap
xor
cmp
dec
rolb
sbbb
cmp
dec
insb
cmp
lods
pop
cmpl
movsb
ret
inc
cmp
push
push
push
jge
jo
inc
add
inc
cld
push
push
or
mov
dec
or
test
cs
nop
cmp
and
decb
xlat
jne
cmpl
push
cmp
jb
push
jne
mov
mov
jne
jmp
fcmove
jae
jnp
add
xor
aaa
jg
cmp
arpl
mov
cmp
notl
mov
mov
sub
addb
sbb
cmp
je
mov
mov
mov
in
cli
and
ss
mov
mov
dec
pop
iret
ret
or
ret
fwait
jno
mov
cmp
mov
xchg
mov
jmp
fisubs
aad
repz
mov
and
jne
int3
sbb
outsb
leave
inc
test
mov
lock
push
pushf
mov
sub
icebp
sbb
fdivrl
push
sbb
add
jo
jp
xchg
sbb
iret
push
sbb
mov
mov
pop
mov
decb
jne
orb
rorl
repnz
jmp
jp
mov
addr16
pop
pusha
dec
bound
dec
jmp
and
and
imul
hlt
and
pop
lock
push
or
das
pop
xor
or
xor
sub
jge
jle
mov
sub
cmc
push
or
mov
cld
or
sbb
inc
or
push
mov
inc
inc
mov
add
jle
or
lods
sahf
aad
sbb
shrl
js
aaa
test
lea
ds
jne
cmp
sbb
push
inc
scas
cmp
jo
mov
add
leave
shl
push
jecxz
out
test
je
nop
je
filds
in
jb
or
xorl
lods
add
jne
and
push
adc
cmp
mov
inc
add
or
or
addr16
and
xchg
inc
inc
testb
insl
shlb
mov
mov
add
adc
imul
mov
add
inc
pop
or
sbbb
cmp
cmp
sub
add
push
leave
pop
xor
mov
sarl
pop
test
repnz
and
or
mov
mov
push
push
icebp
xchg
adc
or
cli
stc
pop
sti
push
xor
jmp
push
add
and
andb
addr16
sbbb
imul
pushl
adcl
jno
push
divl
sbbl
pop
jne
push
rcrb
pop
mov
std
mov
sbb
pop
mov
lahf
shlb
es
lcall
int3
add
scas
push
or
pop
mov
inc
mov
bnd
sbb
call
push
insb
dec
or
and
jo
adc
insb
int3
push
mov
sbb
or
je
or
push
int
test
mov
push
ljmp
inc
and
push
pop
sbb
mov
sbb
xchg
xchg
stos
add
pop
or
adcl
jle
mov
or
ret
popf
call
lods
aam
hlt
or
mov
je
xchg
pop
xor
data16
mov
mov
call
jge
jmp
movzwl
or
int3
test
lea
jnp
xchg
in
je
cmp
mov
stos
dec
inc
rorl
cmpb
xchg
imul
test
push
test
mov
add
lcall
mov
frstor
jle
iret
inc
mov
sbb
ljmp
dec
xor
sbb
pop
pop
mov
lods
or
fwait
or
imul
sbb
xchg
arpl
scas
adcb
stc
sub
rcrl
cmp
leave
rorb
ss
ljmp
ljmp
hlt
fidivrs
mov
add
icebp
push
inc
lds
aas
insb
jne
jp
ret
cwtl
add
or
out
or
scas
pop
and
cmpl
and
adc
fistpl
cmp
mov
sbb
cmc
jmp
add
dec
xor
xor
cmpsb
mov
ret
in
and
in
xchg
mov
leave
add
call
add
xchg
pop
and
dec
jge
test
pop
xchg
dec
cmpsl
dec
gs
cmpsb
call
and
mov
inc
push
and
in
cmpsl
sahf
dec
sahf
dec
daa
daa
xchg
lret
neg
lret
test
scas
sbbb
adc
lahf
rcrb
fs
pop
int
mov
ret
add
in
fimuls
cld
popf
inc
cmpsl
dec
sahf
push
stc
pop
mov
cltd
mov
lahf
mov
in
jb
shr
xchg
or
mov
mov
scas
jbe
lcall
in
sbb
lahf
push
cmpsb
in
xchg
push
lods
rclb
push
inc
call
inc
in
repnz
push
and
rol
and
shlb
loopne
inc
loop
in
in
pushaw
lahf
les
les
test
jb
test
popa
mov
inc
int3
test
loope
lahf
xchg
mov
add
pop
mov
or
sbb
mov
sbb
adc
cmpsb
push
out
cmp
ds
in
aaa
cmpsl
orb
ss
aaa
test
daa
cmp
adc
movb
dec
ror
add
lea
cmp
btr
lret
lods
mov
add
push
mov
and
test
lock
movsb
je
jns
inc
jb
adc
dec
aaa
mov
or
mov
int3
add
push
or
jp
sbb
mov
push
sbb
sub
push
cld
fwait
das
mov
or
push
movsl
sbb
adc
and
or
mov
sarb
lds
ds
std
test
clc
jbe
icebp
cmp
jne
push
cmp
and
inc
aam
push
je
inc
cmpsl
or
adc
adc
push
jbe
ret
jne
mov
xor
mov
push
add
xchg
fadds
dec
jnp
cltd
mov
out
add
add
jmp
xor
push
pusha
subb
jmp
add
add
add
mov
or
das
call
pop
inc
pop
mov
inc
add
add
adc
jne
add
lods
inc
add
hlt
or
ja
inc
cld
push
ds
mov
mov
dec
cmp
inc
aaa
sbbb
adc
das
lock
inc
addr16
int3
mov
mov
or
shll
dec
pop
movsl
mov
push
or
fs
cmp
sub
add
imul
sub
cmpsb
cld
std
dec
inc
xchg
mov
les
dec
adc
adc
jno
xchg
push
std
lret
fcomps
inc
mov
je
push
jmp
sbb
add
xchg
jmp
shrl
lea
add
add
and
xchg
je
push
or
insb
inc
fmul
xor
mov
outsl
pop
fcomp
pop
loopne
fldl
or
fldl
or
xor
jno
push
mov
pop
icebp
cmpsb
lea
lcall
push
leave
pop
jmp
jo
fnsave
dec
push
dec
insl
mov
outsl
sbb
int3
pop
dec
xlat
das
dec
dec
sti
scas
pop
pop
xchg
dec
je
add
and
sbb
sti
flds
insl
xchg
push
lcall
jmp
sbb
into
repz
cmp
cmp
mov
flds
popa
mov
shll
stc
fwait
add
adc
lea
test
test
adc
adc
repnz
pop
test
or
push
add
in
jl
push
adc
lock
clc
lock
inc
fdivrl
fstl
push
rcll
cmp
lock
push
aaa
adc
jo
jne
das
and
inc
lock
arpl
cmp
push
adc
sbb
es
mov
mov
out
jns
inc
push
push
pop
andl
add
jecxz
adc
fnstcw
sbb
or
and
lock
mov
xchg
xor
scas
mov
jne
ds
xchg
xchg
jle
sbb
jle
cmpsb
and
aas
inc
out
pop
push
inc
or
std
and
jb
push
xchg
jmp
inc
faddl
or
xor
fstl
std
cmp
popa
push
jmp
test
fmuls
mov
fiaddl
orl
test
jne
push
push
adcl
out
jle
testb
inc
rorl
addb
and
push
in
mov
test
or
jne
sbb
or
push
mov
pushf
fwait
adc
cld
sub
push
mov
xor
xor
das
xchg
xor
mov
icebp
outsl
mov
insb
mov
mov
mov
js
xor
scas
gs
mov
clc
test
gs
int3
call
rol
sarb
jb
push
mov
lods
std
inc
arpl
das
mov
testb
pop
pop
xor
das
jecxz
mov
jmp
jecxz
push
mov
or
or
pusha
xchg
or
mov
clc
push
jmp
jne
dec
sbb
pop
sar
fcomi
lret
std
lea
inc
and
mov
sbbb
xchg
imul
loopne
in
repz
mov
cmp
sub
push
lret
sbbl
or
pop
ja
stos
popf
insb
and
adc
xchg
jnp
std
lods
sbb
cmp
ret
and
adc
mov
or
shl
leave
mov
test
jne
enter
dec
push
pop
or
jb
in
push
pop
add
and
xor
pop
daa
jbe
iret
mov
cmp
mov
aam
mov
stc
or
lods
and
mov
mov
lods
es
mov
call
mov
push
or
inc
jne
lcall
bsr
movsl
dec
cmp
inc
sub
pop
mov
adc
and
cmp
jne
cmpb
testl
cmp
inc
mov
xchg
lret
xor
push
sub
push
int
cmpsb
rclb
jne
js
cmpsl
test
cmp
fs
push
mov
out
ret
xor
mov
mov
add
lret
repz
int
arpl
movsb
fs
repz
jecxz
push
or
add
mov
leave
jns
popf
orb
pop
xor
inc
cmpsl
leave
js
mov
adc
cld
sti
push
inc
cmp
mov
popf
jmp
in
cld
setge
std
mov
cmc
cmc
fisttpll
scas
pop
testl
mov
dec
lods
popa
cmp
fnsave
inc
cwtl
xchg
stc
mov
push
adc
inc
xorl
leave
xchg
pop
sub
push
mov
mov
ret
fidivrl
jns
daa
mov
mov
add
jns
test
hlt
std
call
pop
sub
ds
pop
enter
mov
imul
test
pop
pop
mov
cmp
je
testl
insb
lcall
jb
ret
in
or
test
sti
jecxz
pop
lret
xor
mov
add
and
std
xor
pop
xor
subl
lock
fdivr
adc
insl
xor
push
fbstp
roll
pop
jle
rolb
shlb
movl
in
pop
out
pop
cmp
sub
call
je
mov
add
xchg
daa
jecxz
mov
std
popf
push
inc
push
mov
fdivs
xor
daa
xchg
dec
inc
mov
daa
nop
jge
lock
std
lds
sub
cmc
arpl
mov
imul
imul
das
push
cmpb
mov
mov
sub
push
ds
icebp
push
push
scas
and
and
mov
mov
jb
and
xlat
pop
subl
add
push
into
mov
cli
daa
xchg
aad
jg
rcrl
cmpsb
mov
push
loope
xchg
lret
adc
cmpsb
jb
inc
push
fs
stos
jne
popa
dec
and
pop
clc
cmp
cmp
mov
sbb
call
sbb
std
lock
xor
stc
imul
test
repz
mov
xor
inc
repz
daa
mov
frstor
dec
mov
xchg
sbb
dec
dec
mov
test
push
inc
sub
hlt
sub
test
sub
jns
dec
jmp
dec
push
dec
ja
add
cs
xchg
lret
pop
lock
xor
jge
jmp
push
sub
sub
or
adc
and
mov
cmp
jmp
test
push
mov
test
mov
add
jns
dec
repnz
lock
dec
and
dec
inc
js
fbstp
sbb
pop
insl
mov
movsb
jmp
push
lock
popl
iret
inc
push
inc
push
inc
lret
jne
sub
xor
cwtl
shrd
rorl
mov
lret
sbb
stc
fdivr
das
push
dec
xor
loop
jno
push
je
fs
and
std
pushf
mov
loope
adc
cmp
mov
xchg
aaa
fsubrl
adcb
test
push
jmp
and
add
mov
iret
repz
mov
mov
das
mov
inc
push
xchg
dec
movsb
test
inc
dec
push
mov
and
inc
sarb
mov
cwtl
in
mov
jecxz,pn
push
sbb
dec
aad
adc
sub
cmp
ja
pushf
and
or
loopne
mov
lea
mov
test
cmpsb
iret
add
ret
and
lock
jo
xchg
ljmp
dec
push
lock
arpl
add
lret
mov
pop
xor
mov
out
and
mov
dec
es
add
call
xor
pop
pop
enter
xor
xor
adc
adc
in
xor
xor
and
mov
dec
cmp
and
imulb
fmuls
push
test
mov
mov
leave
and
repz
xchg
outsl
mov
pushf
inc
mov
nop
mov
inc
mov
mov
xor
es
lods
adc
rcr
cmp
popa
mov
cmpsb
pop
pop
arpl
cmpsb
cmc
loope
xchg
xor
fwait
mov
pop
sbb
leave
inc
mov
mov
aaa
add
mov
mov
mov
or
test
sbb
and
enter
pushf
jb
dec
inc
and
mov
js
inc
xchg
into
dec
lock
mov
jb
jb
push
mov
and
dec
dec
mov
addr16
push
and
and
mov
add
movsb
bound
mov
leave
push
enter
pop
test
test
test
scas
add
xchg
dec
dec
pushf
nop
nop
or
add
in
lods
lods
lods
or
push
jecxz
dec
mov
aas
push
je
mov
je
mov
mov
adc
popf
int
jge
dec
movl
imul
mov
imul
and
add
pop
rcrb
add
or
jne
arpl
xor
add
das
mov
fidivl
lods
or
add
inc
inc
add
loop
imul
sarb
lret
aaa
sbb
and
push
out
mov
loop
pop
adc
sbb
inc
add
and
push
int
fsubrs
dec
fwait
add
mov
mov
test
or
nop
loopne
test
ret
add
cmpsb
idivl
movb
xor
pushf
fistps
sbb
imul
xchg
hlt
cmovns
mov
test
jle
jge
add
xor
bound
ret
dec
push
mov
cmpsl
mov
sbb
push
dec
rolb
xchg
xchg
mov
addr16
jle
popa
add
sub
mov
sbb
mov
shll
fucomip
stos
bound
addr16
lock
shlb
sbb
xchg
adc
or
les
cld
test
jb
movb
mov
sub
cmp
pop
or
repnz
fwait
cli
das
sbb
adc
and
or
adc
mov
xor
jmp
adc
dec
sbb
loope
add
lahf
or
add
and
and
sbb
inc
or
push
add
je
push
push
stc
in
daa
clc
inc
push
inc
sbb
jae
dec
cwtl
inc
testl
imul
aaa
in
push
test
sbbb
jp
add
jne
inc
cs
xor
dec
in
and
add
add
stos
mov
push
push
jno
mov
ret
push
lock
or
jbe
mull
ud0
mov
inc
push
pop
push
push
inc
shr
rcr
shr
rcr
insl
repz
std
or
jne
div
pop
dec
adc
inc
mul
pop
jb
out
out
fisttps
cmp
or
cmp
or
xor
and
lahf
addr16
adc
or
fisubrl
and
rorb
fmul
fxch
fwait
sbb
arpl
inc
push
pop
or
ja
inc
mov
add
xchg
pop
jmp
lcall
xchg
test
cli
in
and
or
sbb
nop
sbb
push
arpl
rcrl
icebp
daa
push
aad
mov
adc
inc
dec
inc
andb
in
push
and
gs
and
stos
je
sub
or
push
mov
sub
ret
jo
sbb
jl
adcl
push
adc
pusha
jno
outsb
xchg
pusha
orl
pop
jne
mov
and
call
cmp
adc
out
or
or
outsb
das
dec
xchg
and
mov
push
xchg
cmova
insb
pop
dec
sbb
xchg
dec
add
das
lea
adc
jle
jne
lea
sbb
lods
jb
sbb
mov
test
add
cmpsb
or
push
sub
test
ret
fisttps
pop
sbb
jl
sbb
push
incb
pop
jbe
adc
pusha
test
icebp
and
mov
mov
xchg
js
lock
mov
inc
add
ret
insl
orb
jl
mov
push
leave
add
test
fistps
subb
mov
mov
pop
push
cmc
bound
pop
pop
push
cmp
inc
je
stc
adc
push
pusha
add
fdivl
insl
cmp
inc
inc
xor
jge
xchg
ficomps
sub
imul
movl
dec
xor
pop
sbb
out
and
add
cmp
lock
mov
xor
outsl
sbb
insl
inc
push
lea
cmp
xor
push
jp
sub
ffree
rclb
ret
xchg
add
sbb
xor
xchg
loopne
mov
sub
lods
sub
push
mov
out
or
cltd
ret
cli
aas
cmp
fdivl
sub
rcrb
loopne
repz
lea
and
repnz
sbb
mov
xchg
sbbb
fs
rclb
add
andb
pcmpeqb
inc
inc
adc
outsb
fcomip
jmp
fcoms
shl
push
adc
adc
lret
loop
or
inc
stc
xor
inc
iret
xor
rcll
dec
xor
or
add
scas
mov
ss
gs
int3
inc
jo
mov
jl
push
out
cmp
je
ss
sahf
cmpsl
shlb
xchg
inc
ficomps
outsb
or
cld
cmp
inc
push
pop
ret
inc
pop
add
repnz
and
inc
dec
test
loop
std
sbb
lds
sub
je
inc
outsl
add
and
iret
push
mov
jae
inc
or
unpcklps
sbb
repnz
hlt
hlt
mov
lea
lods
mov
jo
bound
inc
fildll
ret
push
aaa
inc
cmp
roll
mov
dec
sbb
mov
mov
sub
add
fistpl
lcall
adc
push
push
mov
fwait
js
or
mov
sarl
movsb
or
sub
movsl
insl
in
dec
or
popf
lahf
leave
test
add
jne
add
and
jne
xchg
push
lock
cs
and
inc
mov
roll
pop
xor
inc
and
mov
or
pop
adc
xor
dec
sbb
jl
test
push
ret
sbb
lret
mov
imul
or
fiaddl
push
imul
ret
mov
test
xor
and
pop
and
mov
inc
dec
cwtl
add
test
mov
push
cmp
add
or
jmp
aas
add
gs
adc
dec
jne
lock
mov
or
and
leave
and
push
or
cmp
xor
sbb
cmp
jl
mov
mov
jle
inc
loopne
cmp
fs
popa
aas
pop
cmp
cmp
xor
cmp
and
inc
loope
pop
push
cmp
test
or
inc
lock
daa
push
mov
leave
push
sbb
into
xor
cmp
dec
mov
mov
bound
out
or
sbb
push
cmp
div
imul
bound
push
daa
and
and
andb
pop
les
add
mov
push
popa
test
shlb
es
inc
jp
push
sti
or
repnz
mull
loope
mov
or
push
insb
jne
fxch
sbb
mov
into
out
inc
mov
or
pusha
pushl
mov
int3
clc
dec
shll
jmp
xchg
mov
outsl
fwait
mov
je
dec
je
stos
fstl
mov
mov
loope
sub
mov
push
cmpsb
icebp
push
xchg
pop
fdivrl
jns
push
les
in
or
xchg
add
popa
shrl
mov
cmp
dec
mov
mov
jne,pn
sbb
inc
fs
mov
cs
sub
adc
mov
sbb
jge
mov
mov
ss
inc
push
or
or
loop
jbe
jno
mov
mov
pop
sbb
push
xchg
jmp
fsubrs
push
adc
and
add
xor
sub
adc
mov
mov
pop
pop
pop
fidivrs
add
lea
jbe
imul
add
test
push
cltd
and
mov
and
push
xor
sbbb
es
shl
fildl
push
lcall
push
push
sub
cmp
and
and
cmp
clc
adc
test
rclb
xchg
and
add
iret
cwtl
mov
xor
xor
loopne
push
fisubs
xor
ja
jp
je
ret
and
dec
pusha
lcall
je
mov
rcll
and
pop
inc
stos
cmc
aam
cltd
rcrb
mov
hlt
xchg
adc
sbb
fnstsw
js
mov
jbe
dec
pop
fadds
daa
inc
jge
push
in
mov
leave
lods
mov
mov
push
jmp
popa
into
xorb
je
push
pop
push
mov
jno
xor
pop
test
xchg
add
das
cmc
jle
dec
mov
call
in
daa
or
push
adc
add
xchg
dec
add
stc
decb
jecxz
push
out
mov
jb
add
add
cwtl
or
in
fsubrs
adc
mov
inc
and
test
push
rorb
ret
xchg
mov
push
stos
inc
mov
adc
sub
push
movb
mov
loop
xchg
mov
add
or
test
dec
inc
or
xchg
add
inc
pusha
cwtl
and
test
jbe
sbb
and
push
ss
jmp
xor
rorb
addl
incl
mov
outsb
add
inc
pop
je
in
dec
push
pop
mov
and
mov
roll
mov
jle
mov
shr
mov
out
cltd
in
stc
add
fiaddl
xchg
xchg
inc
push
dec
jmp
or
and
push
adc
cli
cmp
push
mov
inc
mov
pusha
jp
into
inc
add
push
test
pop
rol
pop
add
popa
adc
insb
or
add
mov
cmp
cmp
mov
mov
inc
xchg
push
aaa
jmp
jb
or
xchg
movsl
add
jle
sbb
inc
jecxz
sbb
stos
mov
jae
mov
addb
stos
dec
rol
out
sbb
add
push
sub
out
adc
lods
mov
jge
push
push
orl
xor
mov
aam
lock
mov
xchg
repnz
loope
adc
mov
and
mov
or
inc
sub
dec
test
pusha
mov
mov
jb
cmc
cmp
dec
inc
inc
or
jne
repnz
cli
or
push
sar
andb
imul
pop
and
and
xorb
rorb
aad
gs
sbb
addr16
add
mov
lcall
pop
push
inc
addb
jae
fnsave
in
out
inc
inc
or
imulb
out
or
lock
add
int3
and
shrl
pop
daa
xor
push
push
lea
push
xchg
push
pop
push
dec
and
inc
loopne
xchg
clc
lods
or
lea
fbstp
add
or
or
or
push
xor
or
cmp
sbb
fsubr
inc
mov
in
js
into
xchg
jae
insb
mov
add
pop
jmp
cmp
mov
insl
inc
and
xchg
pop
sub
or
sbb
dec
loopne
loopne
cmpsb
rcrb
and
push
and
dec
andb
loopne
clc
push
and
adc
fsubrs
sub
cmp
rclb
adc
lcall
repnz
mov
mov
push
dec
sbb
cmp
call
add
out
add
or
pop
dec
inc
add
and
jge
inc
cwtl
sti
fmul
lcall
hlt
inc
adcl
ret
lcall
push
mov
scas
or
orb
add
clc
xchg
addl
ret
dec
inc
cmp
cmp
cmc
pushaw
adc
aas
push
aaa
push
fnstcw
mov
jne
adc
test
stos
add
or
into
push
cmpsl
je
and
mov
jl
jb
loope
jo
adc
push
adcl
fsts
jbe
dec
mov
mov
mov
mov
fs
mov
not
mov
xlat
or
fs
xor
addb
push
shlb
dec
dec
lock
jge
and
or
test
loopne
or
xor
not
push
add
xchg
ret
incl
enter
pop
scas
enter
add
cs
pop
xchg
pop
or
das
data16
ret
sub
adc
jmp
push
outsl
sub
stos
xchg
rclb
jg
jg
adc
and
inc
sbb
push
push
pusha
jo
call
dec
xor
or
or
cltd
or
sub
or
mov
clc
test
cmovle
and
jo
lret
sub
and
loop
mov
mov
mov
fisttpll
jge
hlt
rep
xchg
cmpsb
jnp
ss
neg
add
lock
and
adc
cmp
test
xchg
decb
and
sbb
test
xor
rorl
and
mov
in
mov
rorl
add
stc
ljmp
and
push
mov
or
and
jae
pusha
pop
js
jns
push
push
test
stos
cmp
pop
js
lock
pushl
add
jge
fs
push
push
jae
adc
add
mov
add
pop
adc
mov
test
bound
pusha
fadd
add
fidivs
inc
adc
xor
mov
pop
je
inc
xchg
ds
stc
cs
jl
adcb
xor
cmp
fs
das
cmp
das
movsb
adc
arpl
fcompl
cmp
loop
or
cmp
mov
adc
and
outsl
push
push
dec
sub
mov
pop
xor
push
out
std
push
pop
outsl
inc
or
jbe
sub
pushf
outsl
ja
jno
inc
imul
scas
sbb
hlt
mov
adc
mov
add
loope
dec
cmp
rcrb
dec
test
into
and
call
jno
sub
sbb
iret
dec
sub
shll
add
sub
pop
xchg
or
lock
inc
pop
sar
in
lock
rep
add
or
mov
adc
adc
ss
and
mov
mov
or
sbb
ss
push
jmp
pop
imull
jp
sbb
sbb
vrcpps
mov
push
jmp
push
inc
das
adc
push
pop
jge
push
inc
or
push
lods
mov
jno
mov
mov
test
and
fnsetpm(287
pop
and
xor
sub
push
dec
enter
add
mov
pop
lods
dec
jne
xlat
insl
idivb
add
rclb
sbbl
jb
icebp
adcb
int3
or
add
xchg
pop
adc
insl
pushf
or
dec
xor
xchg
push
js
xor
push
in
jne
test
mov
cwtl
pop
inc
and
fstps
xchg
or
mov
inc
sbb
cmp
xor
and
add
and
sbb
ficoms
or
mov
cs
push
push
or
mov
cwtl
or
sarb
or
testb
mov
mov
sub
cmp
ret
inc
sbb
or
add
mov
inc
movsb
and
push
push
xor
mov
ds
int3
sbb
call
mov
inc
jne
aam
mov
mov
adc
outsl
jo
push
mov
jae
adc
lret
lods
inc
add
or
js
add
fcompl
push
cmp
faddl
dec
test
push
mov
add
push
jae
inc
faddl
cltd
test
aaa
popf
enter
push
jecxz
and
test
or
mov
jl
mov
rorb
sub
jl
test
call
inc
jmp
xor
inc
fsubr
movsl
dec
jbe
jne
imul
lcall
push
sbb
test
jb
loopne
mov
mov
and
pop
ret
enter
inc
push
xchg
notb
xor
fsub
cmp
xor
cmpsb
add
arpl
mov
aam
push
ja
cld
and
shr
mov
mov
xchg
leave
mov
inc
or
or
pop
or
lcall
and
jb
ret
sub
movl
fcoml
sub
mov
std
mov
xlat
mov
push
or
aas
xchg
sbb
rcr
jno
add
jmp
pop
push
cmp
mov
out
fldenv
push
add
pop
or
mov
popf
sbb
sbb
in
sub
loopne
out
lret
incl
dec
dec
inc
loopne
or
pop
lret
sub
pushw
cld
mov
push
mov
lcall
adcl
xchg
test
mov
jg
sarb
jae
mov
mov
movsl
jno
jne
movsb
push
je
sbb
add
cltd
and
popf
aam
adc
je
enter
loopne
or
mov
mov
add
add
in
dec
and
or
mov
loop
jmp
adc
sahf
sub
push
sbb
ret
cmp
pop
addr16
mov
adc
and
in
rcll
jne
inc
sbb
js
inc
aas
cmp
daa
sbbl
loop
orl
sbb
xor
rcl
adc
and
cmp
mov
or
xor
es
fistps
push
push
imul
push
push
cmp
fs
popa
test
sbb
and
mov
add
push
jl
push
subl
xor
or
add
add
push
dec
aaa
add
out
sti
jg
aas
sub
push
or
popfw
jnp
add
sbb
pop
dec
jle
jp
add
cmp
add
bound
push
push
adc
sub
loopne
push
sahf
pop
enter
jg
dec
xchg
sbb
xlat
fs
push
pop
jl
mov
sub
cwtl
adc
xchg
add
xchg
rcrl
lods
push
or
jecxz
mov
clts
jno
fmuls
sub
and
popa
sbb
nop
clc
pop
ljmp
mov
inc
jbe
fsubl
pop
sbb
out
jb
out
mov
mov
aaa
mov
outsb
lret
loope
fdivs
aaa
pop
xor
clc
call
jl
mov
push
jp
outsl
mov
jo
mov
jb
fdivl
ficomps
cmpl
cwtl
or
add
xchg
lret
cmp
jae
les
push
int3
inc
clc
dec
pusha
xor
dec
sarb
push
dec
xchg
push
into
subb
mov
mov
adc
add
xor
jl
js
and
sahf
or
push
inc
test
pop
mov
enter
rcl
cmpl
stos
inc
cmpl
inc
push
cs
js
pop
cmp
sbb
inc
movsb
push
mov
ret
sub
lods
or
imul
cmp
and
mov
pop
rol
adc
xor
mov
in
cmp
adc
or
andb
lock
les
sub
jb
mov
inc
sub
mov
ja
add
push
xchg
scas
cmp
sbb
sbb
and
popf
or
out
adc
popa
loope
loop
pop
je
xor
aam
push
adc
scas
and
cmpl
inc
or
jl
cwtl
jmp
cs
jmp
cmp
or
je
xchg
cs
push
mov
sbb
enter
jmp
outsl
sub
jl
adc
shl
add
pop
add
and
dec
enter
xor
push
jg
test
or
cmp
ret
and
mov
and
out
nop
pop
adc
adc
inc
pushf
cmp
xchg
nop
sbb
inc
rcr
xor
fcoms
and
add
jmp
xor
inc
xor
xor
lcall
aad
out
fsubrl
and
jne
push
or
add
aaa
inc
mov
icebp
enter
ds
inc
cs
adc
fildl
arpl
mov
stc
sub
daa
sbb
jns
pop
lahf
les
add
pop
jb
cmpb
lea
xchg
mov
pop
je
pop
rorb
cmc
and
gs
rorb
lcall
dec
icebp
pop
adc
fwait
cld
ret
mov
movsl
xor
fstpt
xor
push
cmp
jl
mov
inc
les
jl
mov
adc
cmp
insl
sub
or
test
add
and
push
and
dec
push
mov
cmp
mov
push
ljmp
push
jb
pop
movsb
and
inc
das
or
inc
add
mov
clc
ret
pop
in
dec
dec
add
call
enter
pop
mov
mov
mov
pop
std
mov
jmp
push
data16
or
in
pop
xor
dec
aaa
cwtl
fistps
test
lods
mov
dec
adc
xchg
lods
jne
xor
add
scas
imull
es
frstpm(287
or
out
push
arpl
aam
mov
mov
or
xor
jno
fs
jle
xchg
inc
jmp
or
xor
inc
into
sub
fs
jecxz
movl
sub
aaa
add
cltd
push
adc
xor
add
orb
jbe
es
jne
mov
arpl
inc
push
lock
cltd
jo
inc
aaa
shrl
adc
sarl
lock
and
outsb
sub
dec
xchg
inc
jle
aam
popf
es
add
adc
in
das
and
and
jmp
sbb
sbb
dec
in
mov
sbb
jg
adc
orl
lods
mov
jmp
lret
pop
hlt
and
loopne
cmp
cmp
ja
or
rolb
leave
nop
pop
or
push
mov
adc
and
jb
std
jb
lds
out
push
pop
dec
js
jne
es
cmp
notl
shr
movsb
ljmp
sbb
push
dec
or
pusha
mov
out
int
xchg
movsb
jbe
inc
lret
push
mov
push
mov
and
cmc
add
fstpl
movsb
imul
mov
sbb
and
nop
adc
xlat
je
lcall
lock
mov
and
cmp
jb
testb
clc
xor
xchg
outsb
inc
add
lcall
orl
cmp
jge
push
daa
fidivrl
jmp
inc
movb
ret
pop
je
js
cmpl
pusha
lds
sub
pop
adc
daa
mov
push
or
push
in
push
cmpsb
sbb
push
pop
push
pop
shlb
jmp
das
xor
adc
outsl
fsubr
or
adc
loop
pusha
imul
inc
xchg
push
push
push
or
aad
cld
mov
je
shrb
nop
shr
mov
pop
es
jmp
shrb
push
inc
pop
pop
adc
roll
insb
jecxz
push
sbb
push
fadd
mov
cmp
sbb
sub
es
mov
push
xor
xor
sub
xor
andb
push
into
je
xchg
cli
adc
decb
sbb
lea
lea
or
popa
mov
clc
add
cmp
repz
and
pop
jbe
sbb
lods
cltd
mov
movsb
sub
add
mov
push
xor
mov
sub
enter
sbb
dec
mov
daa
adc
ficomps
in
in
test
mov
sbb
dec
mov
cltd
icebp
and
sbb
sub
xorb
ljmp
sarb
mov
roll
cmp
xor
out
fsub
lock
push
ficoml
cmp
mov
dec
rcr
adc
xor
insl
xor
jno
loope
dec
pop
pusha
out
or
enter
adc
ss
and
and
sub
daa
daa
daa
daa
xor
cmp
insl
dec
or
dec
dec
dec
outsb
cmovs
xchg
xchg
or
add
xchg
xchg
fs
xchg
xchg
je
jl
dec
jnp
mov
adc
mov
and
dec
mov
xor
xor
movsb
test
sub
nop
dec
mov
sub
add
push
imul
fwait
add
loopne
push
stc
mov
jle
fwait
nop
data16
call
adc
dec
adc
sbb
dec
dec
roll
adc
cld
and
sbb
mov
pop
and
xchg
sbb
mov
mov
popa
inc
mov
xor
and
jne
out
je
push
lret
shlb
and
test
mov
add
shlb
les
cmp
xchg
mov
aaa
loope
dec
sbb
push
push
test
push
jp
cmpsb
cmc
cwtl
imul
roll
mov
cli
dec
nop
sbb
mov
cwtl
fwait
pop
out
jne
pop
sahf
mov
and
inc
or
hlt
rorb
dec
out
out
inc
cmp
pop
dec
adc
cmp
repnz
enter
je
sub
adc
in
and
add
aaa
xchg
pop
dec
sbb
nop
neg
add
fmuls
mov
pop
lods
in
push
popf
insb
jl
push
mov
js
outsb
xlat
or
jp
loopne
dec
pop
cmp
outsb
test
sbb
xorl
je
push
pushf
xchg
xchg
nop
movsl
mov
and
nop
jecxz
loopne
test
adc
bound
data16
add
xor
sbb
adc
xor
stos
adc
repz
jmp
cs
enter
add
leave
cmc
push
cmc
adc
jecxz
push
sbb
pop
in
dec
rolb
and
add
push
push
scas
xor
jne
adc
xor
mov
adc
jl,pt
mov
cs
push
jmp
orb
sbb
adc
outsl
cmpsb
mov
aad
pop
or
add
jne
pop
lahf
mov
rolb
and
fs
or
call
sub
outsb
test
adc
and
mov
mov
mov
not
insb
jl
cmp
and
cmp
add
pop
pop
jmp
enter
inc
lods
lea
xor
or
sbb
mov
adc
stos
loope
sbbl
mov
pusha
outsl
or
push
and
cmc
inc
inc
add
push
xchg
sbb
mov
test
notb
sahf
fs
mov
jnp
add
cmp
pop
aaa
xchg
cld
pop
jl
shlb
and
xorl
aad
pop
sub
jecxz
icebp
mov
push
mov
push
icebp
push
and
out
outsb
add
and
fcmovnbe
sti
mov
testl
imul
mov
and
push
and
std
hlt
mov
and
push
adc
js
popf
add
mov
push
xor
nop
mov
mov
test
call
push
inc
pushl
mov
je
add
jns
dec
sub
push
fdiv
div
je
sbb
pop
adcl
and
inc
adc
push
push
mov
mov
rorl
mov
pop
cmp
in
xchg
and
incl
mov
mov
mov
sbb
stos
jmp
mov
ja
cli
add
cmp
add
ja
xor
cmp
fsubs
dec
in
icebp
cs
xchg
add
ret
lock
sbb
adc
xchg
dec
inc
lea
push
out
dec
jo
jbe
lea
int
add
mov
jnp
out
test
sub
mov
movsl
xchg
cmp
inc
mov
push
xchg
cmp
sub
jns
xor
sarl
cmp
fistps
cmpl
add
out
lods
pop
push
or
push
js
loopne
add
ljmp
sub
dec
cmp
cmp
mov
rclb
test
pop
cmp
and
add
sub
int
push
jmp
and
mov
push
je
ds
icebp
dec
pusha
push
or
and
pop
cmp
sbb
jnp
inc
cwtl
fisttps
cmp
push
clc
push
ret
std
test
out
in
mov
inc
mov
sbb
dec
push
mov
pop
mov
or
jle
sahf
cmp
lret
and
jmp
outsb
ja
xchg
mov
andl
sahf
dec
push
push
cmp
mov
cmp
jne
adc
cli
or
icebp
movb
inc
mov
adc
cmpl
fmuls
stos
mov
sub
and
call
pop
inc
add
mov
daa
jmp
daa
mov
or
incl
mov
xor
gs
ds
sbb
xor
enter
xchg
in
mov
inc
lods
push
sbbl
pop
mov
inc
inc
sbb
or
and
mov
and
pop
add
aas
mov
jl
xchg
dec
dec
stc
mull
shlb
add
pusha
add
xchg
push
xchg
sub
inc
push
or
mov
shrb
xchg
in
lods
pop
lock
scas
fstps
test
std
inc
dec
pusha
xchg
jno
rorb
ds
fstl
cmp
outsl
lea
mov
mov
jo
lret
jmp
or
or
repz
mov
sub
push
jns
lea
mov
pushl
push
push
push
mov
ja
imul
insb
xchg
adc
imul
insb
sub
push
inc
jne
divl
icebp
or
std
rorb
cmpb
popa
jb
add
add
or
cmp
lock
and
inc
in
add
js
sbb
es
dec
repz
loope
jb
leave
je
lock
xor
loope
test
mov
sub
and
out
xchg
ret
sbb
ret
and
mov
or
scas
lret
sbb
mov
inc
xchg
sub
and
dec
sub
add
jmp
push
jo
cmp
adc
xchg
sbb
or
daa
jno
jne
push
mov
pusha
adc
sub
mov
sub
and
push
push
pop
mov
add
jge
or
push
push
movsl
int3
fstpl
dec
push
and
mov
inc
dec
xchg
mov
scas
shrb
loopne
shlw
ret
pop
dec
cld
mov
pop
inc
xor
ret
insl
sub
pushf
cli
sbb
pop
pop
sub
mov
inc
shlb
js
sbb
cmp
cmp
mov
xor
lods
adcl
sub
xchg
sub
push
inc
jns
js
ja
into
sub
aam
test
or
sub
push
or
mov
jge
sub
xchg
orb
dec
xchg
jge
gs
inc
out
push
arpl
jno
repz
pop
cmp
jecxz
andl
add
cltd
fldl
dec
mov
in
stos
hlt
adc
jge
addr16
pop
push
test
sbb
and
adc
mov
lock
dec
data16
inc
sbb
fsubs
sub
pop
sbbb
loop
lea
xlat
xor
cld
pop
pop
mov
inc
and
jg
mov
mov
mov
add
out
lahf
add
cmc
clc
je
xor
fcompl
mov
cmpsb
cltd
movl
lcall
lock
adc
insb
js
pusha
loop
enter
hlt
mov
jmp
mov
jmp
push
and
lds
fnsave
cmp
shlb
stos
push
push
js
pop
dec
mov
xor
add
or
mov
cld
dec
and
aad
enter
xlat
clc
add
orb
or
adc
leave
xchg
and
jb
fildll
ret
test
fwait
rcrl
dec
out
dec
orl
inc
repz
jmp
icebp
cltd
cwtl
and
adc
cmp
push
mov
loop
jle
mov
jl
hlt
insb
loop
inc
xchg
ret
push
add
xchg
pop
pushf
sti
jp
cmp
and
pop
add
sbbb
xor
push
push
sbb
nop
es
push
push
jnp
js
inc
sbb
cmp
sbb
rclb
cmp
cmp
mov
or
jbe
lret
add
das
push
cmp
fs
cmp
mov
aad
mov
cmp
pop
sub
sti
adc
jne
andb
es
das
mov
lea
sub
jge
gs
dec
pop
mov
pop
lcall
das
fmull
cmp
cs
movsb
push
jne
inc
pop
leave
jp
sbb
sub
lea
stos
sub
sbb
mov
or
sub
sbb
mov
inc
jne
adcl
jmp
mov
mov
jnp
jl
int3
cld
dec
mov
dec
xor
out
arpl
jbe
repnz
das
adc
mov
imul
dec
rclb
out
jle
popl
mov
sub
clc
jle
mov
sbb
in
inc
rcll
inc
je
gs
popf
adcl
or
add
jle
data16
or
dec
movsb
jge
inc
xchg
es
insl
or
inc
xchg
push
test
daa
pop
out
add
dec
test
jne
inc
mov
sbb
or
ror
sub
inc
lds
js
dec
test
cli
xchg
or
arpl
push
roll
xorb
xlat
or
mov
push
decb
inc
dec
hlt
xor
mov
sub
pop
sub
je
push
popf
ds
cmp
rolb
cli
cmp
data16
pop
mull
add
push
mov
cmp
push
xchg
inc
sbb
pop
mov
js
or
or
loope
mov
or
xchg
sbb
dec
ds
and
mov
xchg
test
sbb
ret
xchg
add
or
xor
in
or
nop
outsb
jg
and
shll
dec
xor
adc
jb
fcmovne
or
shr
dec
outsb
add
jmp
mov
and
js
sahf
lock
test
adc
or
add
pusha
xor
inc
mov
xor
je
sbb
and
or
sub
adc
or
inc
jmp
push
outsl
pop
fcmovnbe
mov
jmp
sbb
fucomp
lret
jmp
inc
and
mov
and
les
aaa
jecxz
jge
ret
xor
in
add
or
adc
jnp
or
shll
or
push
or
sbb
loope
flds
icebp
jge
std
and
pop
adc
pusha
mov
pusha
loope
pop
sub
or
jle
and
imul
fnstsw
pusha
aam
je
pusha
insl
mov
sbb
lea
or
sub
sub
or
add
inc
cld
pop
jns
out
test
fisttps
mov
repz
xchg
pop
xor
dec
je
add
dec
jne
orl
sbb
push
push
mov
mov
movsl
stos
add
pop
testl
imul
je
jb
outsb
lods
sbb
jmp
push
and
inc
add
adc
add
inc
flds
fstps
inc
and
or
pop
push
mov
sbb
or
rcrl
imul
ret
inc
fnop
rdtsc
movsb
cmp
pop
ficompl
pop
sub
ficomps
loop
or
adcb
gs
rolb
sbb
cs
inc
aam
sbb
mov
push
aaa
sbb
ficoml
or
and
les
sub
in
lods
sbb
sub
jmp
sub
xchg
out
dec
push
or
psubusw
mov
adc
mov
add
pop
pusha
popa
and
xchg
cltd
pop
sahf
pushf
clc
dec
repnz
push
fstpl
adc
lds
jbe
or
lods
pop
add
or
faddl
sbb
orl
ret
push
or
repnz
xchg
bound
test
push
mov
sbb
not
insl
in
sbb
jp
dec
in
push
inc
sbb
jo
lock
vpavgb
pop
mov
push
push
sahf
mov
push
pop
movsb
or
aam
xchg
aam
repnz
inc
add
or
sbb
mov
and
dec
add
lods
pop
sub
outsl
movl
push
add
jb
movsb
mov
movsl
add
pop
test
push
sub
jmp
or
push
push
xchg
add
loop
push
mov
insl
and
mov
add
es
or
mov
push
or
stos
dec
cmp
je
aam
loopne
loop
jl
mov
dec
pop
sbb
mov
sbb
cltd
mov
adc
or
mov
sub
push
pop
movups
nop
out
mov
xor
sti
push
or
jno
add
inc
and
in
inc
loope
pop
add
shlb
or
xchg
adc
cltd
pop
xchg
or
sbb
dec
or
imulb
scas
adc
mov
mov
fsubp
pusha
mov
imul
add
in
sti
pop
pushl
lea
push
or
mov
push
loop
mov
and
sub
sub
fdivrl
push
lcall
jae
out
pusha
ficoms
fnstsw
adc
adc
js
push
jns
fadds
jg
enter
jae
mov
mov
rcrl
inc
add
pop
cld
adc
clc
pop
data16
pop
lahf
enter
dec
imul
cmpps
sahf
push
xchg
icebp
stos
inc
rolb
jne
enter
mov
xchg
icebp
popf
mov
xchg
mov
inc
xchg
adc
adc
cmp
repnz
pop
fadds
into
fsubrs
push
adc
mov
test
pop
cwtl
bswap
ss
enter
test
jne
jne
dec
pop
push
dec
in
or
mov
mov
test
or
or
stos
inc
add
or
std
sbb
fwait
push
out
mov
push
pop
in
fnstenv
sbb
xor
loopne
push
cld
push
add
fidivl
sub
ljmp
ror
sub
dec
aad
sub
fwait
mov
fldl
sarb
fnclex
and
pusha
inc
loop
and
int3
add
mov
push
or
insl
or
push
mov
cld
xchg
hlt
or
sub
inc
es
test
and
pop
movsl
fstpl
and
or
call
dec
out
xchg
pop
mov
or
add
mov
mov
shlb
inc
xchg
scas
push
inc
xchg
ret
out
and
pop
je
mov
test
test
mov
mov
adc
add
shr
adc
add
mov
sbb
sbb
jmp
add
xchg
neg
mov
shlb
add
cmp
sbb
mov
lock
mov
dec
insl
push
inc
int3
push
xchg
mov
dec
test
das
jae
sbb
push
jnp
add
adc
cmpsb
cmp
adc
inc
outsb
or
adc
sbb
sub
pop
gs
mov
xor
cmpsl
xor
psubq
xchg
or
jp
in
push
mov
adc
pop
adc
enter
or
add
pop
mov
mov
add
push
jbe
cmp
sub
xor
shr
scas
cmp
mov
adc
push
rorb
cmp
inc
inc
lahf
add
xor
ret
mov
mov
bound
aam
dec
dec
scas
cwtl
dec
or
loopne
or
cwtl
mov
mov
cli
dec
push
or
shrb
jecxz
out
sub
xorb
adc
sbb
rcl
sti
add
push
daa
mov
pop
loope
lcall
add
add
loope
jbe
stos
test
pop
pop
xor
adc
ficomps
loope
xor
mov
cltd
and
lret
jbe
pop
add
roll
lock
jns
dec
xchg
loopne
imul
pusha
xchg
mov
clc
sub
inc
shl
mov
andl
push
inc
jmp
adc
xchg
rclb
or
jmp
push
jge
mov
and
mov
out
mov
inc
fwait
rol
pop
insb
sub
test
lea
adc
mov
add
nop
or
mov
cmp
sbb
or
out
cmp
jmp
add
pop
sub
movsl
dec
mov
adc
mov
roll
mov
addl
dec
push
outsl
add
movb
xor
inc
mov
or
cmp
dec
dec
stos
loope
add
inc
push
jl
lar
sbb
xor
dec
addl
loop
inc
movb
xor
out
loopne
cmc
iret
and
push
cld
not
les
cmp
mov
and
pop
ds
push
or
loop
dec
andb
sbb
and
test
adc
mov
in
lock
sarb
je
mov
inc
lds
test
popa
and
mov
dec
mov
add
xor
adc
push
popw
test
add
lcall
push
push
push
sub
cmp
rcpps
nop
pop
das
mov
pop
popa
sub
lds
pop
xor
pop
add
xor
inc
lock
in
ret
sbbb
adc
loope
cmp
cmp
loopne
cmp
imul
inc
xor
icebp
cltd
pusha
or
mov
jl
pop
andl
lods
mov
xchg
into
out
xor
rcrb
iret
and
mov
and
cld
sbb
movsb
sbb
ret
jge
pop
mov
sub
rcll
loop
push
lock
lock
and
decb
pop
loopne
stc
inc
mov
sub
xor
in
loop
dec
mov
jne
inc
sbb
cmpl
sbb
and
jb
add
sbb
mov
and
push
add
add
sbb
sub
add
or
or
andb
push
xchg
push
adc
and
and
add
inc
mov
stos
jge
push
xor
push
adc
dec
imul
orb
add
movsb
xor
aad
mov
dec
cmp
jne
mov
test
and
push
test
add
or
mov
or
jmp
xor
or
xchg
add
xor
mov
sub
xor
push
dec
jmp
fs
dec
mov
fld
fwait
rolb
call
add
or
mov
mov
mov
scas
pop
mov
enter
lock
jmp
andl
jmp
cmpsl
mov
fidivl
mov
add
jg
jge
inc
mov
jbe
inc
jle
cmp
add
mov
push
xor
push
roll
dec
push
mov
and
lds
data16
sub
loopne
add
push
jmp
lcall
sbb
mov
int
mov
ret
mov
inc
mov
pop
jge
pop
negl
pop
cmp
test
test
lods
xchg
in
nop
add
jne
stos
dec
jae
nop
lret
sti
je
jmp
mov
or
imul
jge
jmp
and
outsb
mov
call
sbb
and
sub
sahf
and
cmp
in
orl
popf
sahf
add
dec
out
push
and
scas
mov
xor
shlb
inc
mov
stos
sub
mov
je,pn
scas
call
mov
aaa
push
push
mov
mov
mov
add
pop
cmp
ret
decl
js
adc
add
inc
testl
xor
jmp
fdivp
pop
inc
inc
lods
and
addl
jmp
cld
in
or
pop
cli
and
sub
sbb
rolb
or
jecxz
add
mov
jmp
push
cwtl
pop
mov
xor
adc
lock
dec
aam
jo
in
and
cmp
sti
and
pushf
xor
push
push
cwtl
jge
neg
add
dec
adc
sbb
mov
and
cmp
stos
out
mov
sbb
leave
pop
sarb
ret
jge
jle
mov
sub
xor
jne
and
lods
inc
out
mov
add
test
addr16
inc
daa
pop
push
inc
mov
addl
ljmp
add
mov
add
adc
mov
mov
into
dec
or
fs
loope
adc
mov
into
mov
mov
ret
and
rcrl
mov
adc
nop
sarb
dec
mov
mov
std
mov
sbb
ja
ja
mov
inc
mov
push
pop
push
movb
testl
aaa
rcrl
adc
les
test
jne
mov
inc
or
cmp
mov
or
cmp
jne
hlt
int3
add
jne
and
mov
cvtps2pi
test
rcrl
pusha
or
or
out
add
sub
mov
or
mov
inc
jp
scas
sbb
cld
popf
cmpsl
inc
push
dec
lock
or
test
int
adc
js
subl
lcall
mov
xor
stc
jg
add
mov
mov
fildll
dec
test
js
mov
aam
jg
or
gs
lods
add
or
shr
outsl
fldenv
loop
rcll
sti
sbb
pop
mov
jg
or
cs
mov
ret
or
notb
mov
test
mov
insl
fadd
loopne
nop
aam
not
out
or
mov
sahf
dec
sub
aaa
in
jne
insb
mov
cmpsb
clc
ret
push
push
sbb
and
adc
imul
add
ficompl
ret
fcmovbe
sti
pop
push
aas
or
in
fiadds
push
call
stos
rorl
adc
jle
jb
xor
cs
jno
mov
loopne
ja
orb
mov
add
cmp
sub
aam
mov
rcrb
push
push
into
jmp
scas
icebp
mov
dec
and
add
test
les
add
or
xorb
lret
das
mov
xchg
add
negb
lret
sub
movups
jnp
add
or
call
inc
and
xchg
add
add
pop
push
mov
cmpsl
stc
cmp
sub
pusha
je
jne
repz
cmp
fstl
adc
es
mov
push
cmc
pop
sti
addr16
es
inc
add
mov
rcrb
cmp
std
push
inc
inc
scas
sub
add
push
mov
pusha
andl
mov
pop
cmp
push
or
or
popa
and
xchg
xchg
adc
fidivl
lret
cs
or
ss
in
xchg
and
stc
gs
or
lcall
rorb
cmp
je
mov
cmp
pop
jne
dec
mov
inc
mov
mov
out
add
jp
out
call
push
push
pusha
xchg
aaa
notl
jne
jae
sbb
clc
sahf
popa
sbb
or
scas
imul
add
je
xor
cmc
and
or
dec
rclb
push
xchg
mull
test
jno
and
pop
add
shlb
push
hlt
and
test
sub
and
xchg
mov
pop
pop
mov
shlb
jo
test
or
add
daa
push
bound
dec
cmp
cmp
test
mov
setg
mov
cmpl
out
clc
add
mov
mov
ljmp
mov
jne
movb
push
add
shlb
push
jecxz
iret
sbb
xorb
mov
insb
dec
xlat
xchg
es
pop
add
add
jecxz
add
jmp
sub
add
and
les
xorb
imul
sub
mov
push
inc
pop
inc
out
cs
jae
and
dec
jns
les
sub
mov
pop
testl
ret
or
es
add
testb
inc
add
mov
mov
push
push
or
or
daa
push
mov
sub
andb
cld
dec
or
andl
and
or
mov
inc
adc
push
imul
enter
sub
mov
mov
rcll
ja
rcrb
mov
scas
xor
shlb
enter
sbb
add
adc
sbb
jp
addl
mov
adc
inc
sub
jno
das
add
mov
jle
andb
xor
sbb
mov
call
jno
pop
cld
imul
pop
xchg
in
arpl
mov
repz
sub
cmp
je
popa
jne
or
fcoml
and
rolb
call
mov
lret
lret
test
xlat
cltd
outsb
adc
sbb
das
add
pop
loope
insb
add
sub
add
enter
and
push
movl
sbb
cmp
push
mov
js
add
imul
std
das
pushf
imul
and
add
pop
fcomps
jbe
movb
shlb
out
or
je
dec
mov
mov
sbb
neg
sbb
lds
in
sub
loopne
lock
ret
daa
xor
or
jne
or
out
sub
sahf
cmp
daa
mov
dec
scas
test
movb
test
or
into
pusha
sbb
or
jg
ja
outsl
nop
mov
sub
and
adc
mov
inc
cwtl
shrb
fcmovnbe
sbb
les
or
jo
and
bound
mov
ret
mov
add
or
sub
dec
shrd
push
jle
push
daa
jae
cmp
ss
scas
scas
xor
mov
or
lea
xchg
stc
inc
add
pop
hlt
xor
out
xchg
clc
sub
mov
add
sub
inc
mov
inc
loopne
orb
mov
add
adc
pop
cmp
adc
lock
or
jo
sarb
dec
and
add
sarl
jg
jg
lds
inc
jmp
cmp
fidivrl
rorl
lock
pop
add
clc
inc
shll
or
cld
nop
ds
xor
jbe
xor
jne
shll
cmc
jne
jg
lods
jb
fs
pop
jnp
dec
dec
inc
dec
pop
or
jae
and
lcall
add
daa
subl
adc
add
cmpsb
stc
mov
jno
in
or
sub
andb
sub
je
int
sub
push
xor
push
jne
scas
pop
mov
loop
call
adc
or
and
pop
and
sub
mov
inc
sbb
lcall
subl
xchg
mov
rclb
cmp
jge
mov
jne
jl
and
popaw
push
add
sub
xchg
pop
xor
addr16
ficompl
mov
push
xchg
add
sbb
adc
into
testl
or
fs
pop
push
shl
jne
xor
xchg
sbb
push
subl
dec
adcl
add
mov
popa
push
push
push
insl
roll
pop
insl
cmp
xor
push
or
cld
jl
fisubrs
adc
ja
mov
mov
inc
arpl
pop
incb
in
mov
xor
into
mov
roll
jge,pt
mov
and
gs
or
pop
data16
xlat
or
sub
xchg
fildl
push
inc
je
dec
in
in
pop
sub
sub
pop
add
shll
dec
xchg
pop
cs
push
les
loopne
lods
outsb
adc
popl
repz
int
inc
add
adc
call
incb
fdivl
fmull
insl
push
pop
clc
fstps
or
mov
pop
and
push
ljmp
leave
add
rol
ret
jno
nop
pop
xor
adc
mov
push
jb
xor
icebp
and
lahf
push
call
push
inc
and
shlb
orl
jecxz
mov
mov
cmpb
jne
jp
sub
sbb
inc
test
dec
push
iret
add
ss
shll
sub
add
hlt
ret
lret
jns
push
sub
push
push
add
insb
cmp
pop
cmp
rolb
cmp
jno
and
push
sub
cmpsl
fs
int
cmp
cmpsl
push
pop
mov
enter
lods
aaa
add
mov
aaa
sub
fildl
addb
or
cmp
aaa
dec
fwait
je
sub
shlb
push
cmp
pop
inc
mov
add
pushf
jmp
insl
mov
mov
xor
mov
xorl
adc
scas
aam
or
push
data16
mov
js
jle
call
sub
push
jp
pop
sbb
movsb
aam
lcall
mov
ret
xor
jmp
add
ja
mov
fdivs
mov
add
jge
pusha
pop
push
cmpsl
mov
inc
dec
push
insl
pushf
cmp
inc
cmp
dec
or
xchg
sbb
or
mov
js
mov
dec
cmp
or
icebp
jae
mov
icebp
mov
mov
lret
adc
and
nop
add
xor
lock
sbb
rorb
push
popf
cmpsb
out
push
jmp
or
jmp
testb
je
push
ljmp
add
mov
pop
insl
int
jae
sub
jne
adc
adc
lea
lock
push
or
mov
loop
jnp
mov
push
xchg
jne
or
push
cmpsl
mov
js
and
jp
lea
adcl
push
adc
push
aad
sub
hlt
jbe
push
mov
push
cld
mov
inc
cmpl
add
mov
mov
push
loopne
jo
push
add
adc
addr16
push
mov
mov
cwtl
push
jp
rcl
adc
dec
push
or
mov
xchg
rcll
lea
pop
xchg
jae
dec
sbb
inc
add
movl
mov
push
jae
and
xlat
insl
xchg
or
test
cmp
jge
notl
dec
mov
cltd
sbb
sbb
add
je
insl
mov
pusha
das
add
call
sub
push
arpl
and
xor
cmp
sbb
inc
jmp
jmp
leave
and
add
adc
and
test
inc
inc
test
popa
xchg
sub
mov
push
push
cmp
imul
pop
xchg
mov
jmp
sbb
push
add
lret
cld
jo
nop
add
mov
lret
jbe
mov
lea
imul
mov
xor
cmp
inc
and
inc
imul
adc
repz
lea
xor
mov
push
rorl
mov
dec
xchg
xchg
mov
icebp
mov
mov
adc
enter
inc
hlt
rcll
mov
cld
xor
push
sbb
cmp
adc
movsb
cmp
sub
seto
cmp
and
repnz
adc
pcmpgtd
les
mov
ljmp
pop
push
jl
loopne
mov
and
push
sub
aaa
cmp
test
or
js
adc
add
sbb
jno
leave
pop
sbb
mov
inc
xor
pop
call
in
lea
xor
fcoms
or
and
push
leave
jae
add
lret
adc
adc
sub
pshufw
adc
push
lock
or
xor
jmp
jmp
ja
sti
and
les
or
test
push
divb
push
xor
pusha
sbb
adc
sbb
mov
push
inc
sbb
lock
icebp
add
test
jo
sbb
mov
adc
add
mov
dec
cmp
lea
or
add
repz
add
or
or
add
sub
shr
std
add
pop
or
mov
add
add
or
bound
scas
push
cmp
add
in
inc
test
or
sbb
mov
fildl
int
adc
int3
cld
push
xlat
addl
fnstcw
adc
sub
lret
add
enter
lea
mov
shr
cmp
mov
pop
inc
mov
adc
sub
push
jp
adc
pop
add
mov
xor
mov
call
iret
adc
das
add
out
pop
jo
mov
sub
and
mov
fsub
jmp
cmp
ficoms
add
adc
iret
shl
andl
lock
mov
mov
mov
and
cwtl
pop
push
add
decl
in
mov
clc
stos
imulb
or
sysret
xchg
test
test
adc
scas
subb
lret
je
dec
call
test
sbb
loop
pop
cmp
test
and
movsb
jecxz
push
cmp
push
adc
icebp
sbb
push
mov
cmp
loopne
lods
pop
mov
negb
add
mov
cmp
cmpsl
push
ds
fwait
add
sub
jne
add
call
pusha
push
ljmp
inc
adc
and
sbb
aam
out
mov
push
movsb
pop
and
cs
fisttpll
rclb
push
jle
or
add
mov
or
cmp
lret
mov
pop
adc
push
dec
cmp
cs
xchg
jl
cmpb
jl
xor
adcb
fwait
cmp
dec
xor
push
add
adc
adcb
rorl
lds
adc
cmpsl
and
push
push
mov
push
push
and
pop
nop
iret
ds
push
mov
fsts
xchg
aam
lret
jne
aam
pop
or
cmp
sub
sub
and
adc
js
outsb
in
mov
dec
call
ret
fildll
and
enter
aas
sub
dec
out
or
test
jne
std
jb
adc
rorl
add
je
dec
pusha
mov
scas
or
inc
or
add
inc
ds
aam
and
mov
addb
rolb
icebp
insl
dec
or
mov
outsb
rorb
aaa
sub
int3
pusha
loopne
or
and
and
movsb
inc
add
test
mov
call
adc
fdiv
ds
sahf
loopne
sbb
sub
inc
xchg
dec
repnz
popa
xchg
data16
xorl
sbb
fcoms
or
and
fnstenv
push
sub
icebp
sbb
adc
fs
and
sbb
and
addr16
cmp
dec
jns
hlt
mov
xor
jne
pop
pop
pop
shl
dec
adc
adc
mov
rcl
ljmp
shr
inc
push
dec
test
stc
scas
call
idiv
and
cld
je
dec
lods
test
not
je
sbb
clc
dec
ljmp
adcb
nop
sbb
mov
jmp
mov
add
pop
pop
add
mov
adc
and
adc
ljmp
or
push
or
adc
into
jbe
jns
aas
ljmp
sub
pop
ljmp
add
cli
jae
push
or
adc
imul
adc
jno
pusha
adc
daa
sub
xor
stos
mov
jle
loope
push
jmp
popa
add
mov
or
and
lret
call
pop
and
inc
ss
int3
dec
pushl
dec
fidivs
clc
mov
push
xchg
inc
jge
push
add
sbb
xchg
adc
leave
jne
sbb
testb
mov
push
sub
leave
je
ret
or
inc
mov
mov
xchg
in
pop
je
movsb
jns
fisttps
add
out
push
cmp
ja
add
cmp
adc
fadds
loopne
or
shll
leave
adc
jge
je
mov
cmp
pop
xor
dec
add
mov
add
push
aad
mov
scas
ret
mov
mov
or
and
in
jmp
pop
sbbb
sub
into
or
sbb
lea
inc
neg
je
iret
push
test
test
pop
jnp
sbb
and
repnz
xorb
xlat
dec
xchg
inc
repnz
mov
pop
cmp
jne
sub
aaa
push
enter
je
xchg
mov
pusha
adc
fists
mov
aad
dec
out
add
test
lock
rolb
pop
add
mov
sbbl
dec
sub
femms
pop
inc
mov
sub
xchg
xchg
cs
jp
pop
pop
xchg
inc
or
xorb
cmpsl
adc
adc
push
in
or
inc
push
or
or
xchg
inc
inc
or
pop
cmp
std
or
jle
mov
add
dec
mov
push
iret
repz
rcl
rcl
aad
fwait
iret
repz
fcomp
fstpt
outsl
adcl
or
nop
data16
inc
add
inc
mov
data16
push
or
mov
xchg
data16
orb
mov
add
push
clc
mov
inc
push
add
xchg
push
nop
jno
mov
mov
divb
in
push
pop
sub
call
sti
sbb
es
push
xor
jnp
sbb
push
push
push
add
popa
add
adcl
jmp
push
pop
push
lcall
mov
imul
or
fildl
sbb
lea
sar
inc
cwtl
and
adc
mov
les
or
fisttpl
mov
sub
out
shll
test
mov
pushf
jl
mov
and
sub
or
lret
and
add
es
or
mov
cld
add
jb
inc
sub
or
dec
lret
push
push
inc
add
hlt
aad
pop
inc
mov
push
jl
testl
das
adc
lea
pop
sbb
les
andl
decb
xchg
mov
xor
dec
or
cmp
mov
in
ljmp
loopne
inc
or
push
push
sub
mov
add
jne
inc
jl
push
shr
sub
add
jb
or
mov
mov
sub
or
mov
or
or
push
push
dec
enter
sub
repnz
or
ret
movsb
sub
or
push
addl
mov
jge
popa
mov
and
and
aaa
dec
rol
add
add
cmp
jne
and
push
adc
enter
lea
jo
add
cld
or
and
hlt
rorb
push
push
cs
lret
decl
shrl
clc
cmp
inc
lods
ss
ffreep
adc
in
out
xor
outsl
fwait
xchg
mov
or
dec
inc
dec
add
lock
lock
dec
movsl
div
cli
cli
inc
add
cmpsl
cli
div
inc
mov
rolb
ljmp
call
push
fcomps
sbb
adc
mov
mov
push
leave
push
xchg
loopne
filds
leave
mov
xor
mov
rolb
icebp
xchg
mov
int
jmp
inc
mov
lock
popa
push
dec
cmpsl
add
dec
mov
fs
pushw
sub
loop
out
jge
xor
xor
xchg
mulb
or
jp
movsl
mov
repnz
inc
xor
call
cmp
int
shlb
add
cmp
ss
inc
test
nop
and
jge
mov
sub
jl
mov
xor
call
fisubs
push
cmp
cld
lea
fiaddl
jns
mov
les
adc
push
je
adc
lods
lods
rolb
cltd
je
dec
les
mov
inc
sbb
mov
negb
movb
jns
test
mov
enter
out
or
jge
adc
xorl
lock
jmp
add
and
sbb
in
xor
sub
into
mov
adc
movsl
stos
add
cwtl
sub
insb
clc
adc
adc
inc
add
popa
mov
inc
inc
mov
push
add
push
nop
aad
sbb
cmp
call
or
cli
es
out
adc
enter
sub
sbbb
xlat
dec
dec
cld
stos
fisttpl
jb
push
cmp
mov
test
jne
dec
or
sbb
neg
and
out
nop
js
sub
call
jl
mov
and
sahf
in
xchg
and
xchg
or
cmp
xor
out
sub
sbbl
add
ds
repnz
mov
add
ds
sub
sub
into
out
enter
clc
into
or
sub
aam
lock
movsb
xabort
mov
mov
dec
enter
push
mov
mov
jae
add
testl
sahf
jne
decb
lock
sbb
testb
lock
inc
add
dec
or
pop
lahf
stos
mov
jmp
dec
nop
dec
mov
nop
cmp
add
xor
and
cld
stos
cmp
movb
dec
cmp
arpl
mov
add
add
fadds
cmpsb
mov
outsl
mov
mov
jne
dec
adc
divb
int
pushf
adc
push
lcall
lret
or
mov
sahf
inc
jbe
jge
and
add
movsl
test
add
add
add
add
cmp
out
adc
lds
outsl
jmp
and
xor
clc
sub
xchg
cmp
loopne
or
xchg
jbe
jmp
mov
cmp
push
or
add
or
je
inc
ljmp
dec
or
jo
lock
imul
scas
pop
mov
ret
dec
movsl
gs
outsb
xchg
adc
or
inc
xchg
ret
rol
pop
mov
mov
iret
xchg
xchg
lret
lret
into
pusha
inc
sbb
jne
mov
and
pop
pop
add
and
jnp
sbb
pop
shll
or
or
sub
push
xor
inc
push
xor
jbe
pop
jae
or
or
mov
and
mov
and
inc
add
loopne
inc
or
mov
dec
repnz
pop
cmpsb
adc
xlat
cmp
pop
lahf
push
add
add
push
and
push
test
mov
xor
inc
jge
jecxz
push
and
ret
or
add
pop
lea
nop
jp
dec
loope
fldcw
mov
mov
inc
sar
xorb
mov
or
inc
stos
or
adc
jg
sub
into
xchg
test
dec
aam
sub
aam
out
mov
push
sub
pop
test
cltd
ss
or
add
or
mov
add
add
jbe
jle
pusha
pop
out
cmp
sub
xor
inc
jg
dec
dec
sahf
lret
into
into
into
mov
pop
and
aaa
js
pop
or
cwtl
movsb
xchg
xor
pop
mov
mov
and
or
pop
push
push
mov
xor
and
lcall
add
jns
outsb
or
test
xchg
addr16
add
add
inc
mov
addb
test
and
lcall
inc
dec
xchg
sub
sub
loopne
sbb
sbb
loope
jb
lret
ret
xor
out
decb
scas
sbb
mov
and
inc
push
xchg
loop
cmp
mov
pop
fcoml
add
lret
mov
popa
xchg
mov
or
push
cmp
and
sub
and
outsl
xchg
ficoms
adc
sbb
xlat
jle
add
push
daa
or
and
inc
mov
jge
addr16
lcall
ljmp
xor
das
inc
icebp
lea
sbbb
sti
dec
jecxz
push
clc
dec
sbb
xor
push
test
cmp
push
adc
dec
mov
orb
out
inc
jmp
adc
dec
xor
sub
add
or
loopne
push
out
je
pop
sbb
sbb
cmp
adc
mov
inc
int3
call
jle
in
cmp
lds
dec
and
out
mov
or
mov
jbe
iret
jns
jmp
jmp
mov
jnp
aaa
push
or
lahf
xchg
mov
aam
push
xchg
add
xor
out
cltd
inc
inc
sbb
add
and
lds
xor
push
mov
pop
lods
test
testb
inc
push
pusha
lea
rorb
sub
ficompl
pushl
jns
mov
je
test
push
fstpt
push
xor
mov
into
cmp
and
xchg
xchg
inc
xorb
call
inc
orb
out
add
sbb
mov
sbb
and
shlb
sar
cmpsb
jo
adc
push
hlt
add
mov
mov
stos
fisttpl
inc
sbb
fsubrs
rcll
jge
pusha
or
and
mov
insb
lock
pusha
push
pop
push
imul
mov
or
jne
and
je
add
add
dec
leave
jae
lods
push
rcll
enter
push
in
inc
inc
dec
push
dec
sbb
test
adc
xor
sbb
lahf
aas
or
sub
xor
sbb
or
lds
jmp
push
adc
and
xlat
xchg
or
pop
jno
test
pushf
sbb
add
add
insl
add
or
pop
cmp
mov
sbb
lahf
or
pop
dec
repnz
dec
inc
dec
aad
cmp
or
push
jne
push
inc
das
push
adc
shrb
push
lock
pop
jns
push
and
rorb
push
or
test
xor
add
stos
push
faddl
sahf
add
or
push
clc
xchg
rolb
xor
add
pop
add
or
test
add
adc
or
cmp
mov
cmp
xor
aad
pop
inc
pusha
push
test
sbb
inc
divb
sbb
xor
int3
ret
call
mov
add
jl
loope
call
pop
cmpsb
mov
pushf
dec
lea
ss
cmp
push
int3
loope
js
mov
bsf
repnz
mov
dec
mov
push
lods
out
push
and
movsb
mov
loopne
jmp
dec
loop
dec
jmp
lea
idivb
pop
jae
ss
push
js
shlb
mov
mov
mov
jo
imul
mov
sbb
cwtl
sub
fcompl
sbb
hlt
and
sub
add
or
mov
sbb
sub
je
adc
shlb
xor
pop
orl
fwait
push
and
push
adc
lock
xchg
xor
add
scas
adc
or
push
adc
add
adc
test
outsl
xor
testb
push
push
mov
mov
pop
cs
add
jbe
dec
cmp
xchg
dec
mov
adc
adc
xlat
add
and
push
pop
lock
pop
adc
pop
dec
subb
jns
pop
cmp
xlat
push
and
daa
pop
fisttps
mov
pop
shlb
cmp
push
mov
or
ret
add
add
sbb
mov
fnsave
or
mov
jecxz
push
xchg
dec
xor
int3
and
out
push
fs
sbb
pop
aaa
adc
sbbb
out
cvttps2pi
mov
movsl
push
dec
inc
pop
aas
or
enter
pop
cs
mov
loope
rcr
fbstp
cmp
push
filds
push
xchg
std
cmpsl
mov
test
jns
fstps
xor
aam
pop
shr
data16
adc
fmuls
adc
test
rcr
pop
cmpsb
pop
sbb
imul
in
scas
or
lea
and
push
or
cmp
or
dec
in
jmp
das
loope
outsb
push
movb
cmovs
sbb
inc
mov
ret
fdivl
fs
dec
pop
mov
mov
sbb
gs
sbb
xchg
or
mov
xchg
dec
jb
in
aad
sbb
mov
fsub
cmpsb
fsubs
mulb
ja
enter
dec
insl
xor
cwtl
or
xchg
pusha
cmp
repnz
in
adc
jns
loopne
add
lea
or
shlb
sub
imul
or
insb
jne
xor
adc
jnp
insb
in
andb
imul
push
xor
sbb
je
fs
and
int3
and
aam
mov
std
pusha
sub
repz
or
leave
inc
mov
pusha
jge
lahf
arpl
add
add
fs
ss
cld
pop
cld
in
popf
or
sbb
add
inc
jle
nop
stos
lods
push
aas
pushf
in
adc
xchg
inc
hlt
dec
jg
ss
mov
adc
lret
int
jne
cmp
add
inc
cs
lret
insl
inc
adc
pop
push
dec
pusha
adc
mov
xor
push
nop
inc
sbb
rclb
sbb
jo
push
mov
push
movsb
pop
or
shl
and
xor
lret
rclb
and
sub
js
fwait
adc
addr16
cmp
add
or
jbe
sbb
sub
mov
adcl
fsubr
lahf
aam
mov
les
pushf
mov
fildll
xchg
leave
loope
nop
in
jg
sbb
mov
or
in
movups
aam
pushf
in
insb
movsl
and
shrb
add
insl
icebp
fcoms
add
addb
push
lock
dec
cs
in
in
mov
adc
fs
hlt
add
mov
or
xchg
stos
jne
and
mov
in
pop
xorb
adcb
xor
mov
fwait
mov
pop
imul
test
sub
loopne
in
sbb
or
aaa
or
loope
xor
call
and
stos
push
lods
sub
call
jb
test
mov
loop
in
mov
imul
loop
ret
sub
test
push
xchg
pushf
xor
lods
into
add
push
adc
or
adc
xchg
dec
xor
and
dec
xor
sub
xor
dec
xor
and
inc
inc
xor
and
dec
fs
jne
insb
add
popf
jge
popa
jnp
inc
add
mov
imul
add
in
push
in
rcl
xor
sub
hlt
adc
push
xchg
cmpl
xchg
shll
hlt
adc
xor
xor
fadds
call
fs
or
or
mov
in
or
nop
scas
pop
adc
xchg
cmp
hlt
push
inc
sub
xor
push
inc
jge
pop
mov
outsl
add
push
fwait
sbb
mov
mov
out
add
adc
jne
in
imul
dec
pop
mov
lea
dec
jb
lock
dec
fwait
std
clc
jbe
and
xchg
lods
cmp
insb
dec
rcrb
aam
fwait
add
shl
rcrb
dec
dec
in
movsl
xor
mov
nop
xchg
loopne
imul
test
adc
je
imul
andl
in
popa
mov
negl
lock
inc
in
test
call
push
in
pop
stos
insb
sub
call
pop
in
push
orl
dec
call
repnz
jl
pop
inc
imul
xlat
pop
and
mov
and
adc
out
dec
repnz
lock
mov
les
add
jg
fdivs
or
test
mov
adc
xchg
add
nop
mov
mov
mov
test
cli
cmp
cwtl
ficoml
nop
mov
mov
or
int3
out
movsb
or
les
rorl
pusha
add
adc
mov
pop
mov
pusha
les
add
jo
in
loopne
out
inc
push
push
fcomp
jno
adc
arpl
cmp
inc
hlt
push
or
xchg
aas
push
sub
push
hlt
add
xchg
xchg
xchg
xchg
lods
mov
mov
mov
stos
xchg
xchg
int3
rcl
insl
cs
push
leave
and
sbb
lds
jno
jl
out
clc
xchg
ret
sbb
add
notb
shlb
sub
insl
pop
dec
sbbl
xchg
popf
push
add
rcl
insl
mov
pop
in
bound
pop
sbb
mov
adc
lock
sub
mov
xchg
xor
es
enter
lods
aam
push
test
movsl
add
adc
addb
or
in
cmp
gs
inc
ret
fsub
call
mov
scas
jbe
movnti
lock
sti
nop
daa
ret
movsl
aad
nop
xchg
shr
shlb
nop
push
push
inc
sub
in
insl
mov
cs
cltd
lahf
inc
mov
jmp
fsubrl
out
add
adc
pusha
add
jo
in
hlt
inc
fwait
or
fwait
jne
sub
sub
xor
es
push
pop
pop
cltd
pusha
inc
add
jo
adc
push
xor
mov
inc
xchg
aas
and
add
mov
je
repnz
sub
aas
and
mov
lods
incb
xchg
adc
test
lahf
in
lock
insl
and
xor
push
adc
jb
cwtl
lahf
fildl
jg
or
mov
int3
push
enter
lock
adc
dec
lcall
adc
dec
stos
or
push
adc
mov
jg
shrd
imul
fcomps
xor
sahf
repz
loope
test
add
mov
ret
mov
jb
add
lock
sub
add
in
call
std
mov
add
cwtl
fistpll
mov
inc
movsl
les
call
in
xchg
nop
iret
inc
adc
clc
or
xchg
mov
pushf
xchg
mov
xchg
push
pop
adc
sub
jb
and
sbb
mov
faddl
js
add
pushf
sbb
enter
or
jb
and
and
pusha
or
mov
in
rcll
aaa
push
xor
add
mov
test
sahf
sub
mov
push
pop
adc
inc
inc
or
shlb
cmp
lcall
add
lahf
fs
xor
and
xor
sbb
in
test
and
pusha
lahf
icebp
fcoms
call
mov
lds
das
dec
and
jmp
jl
push
and
mov
xchg
inc
cmp
pop
mov
in
pop
add
mov
scas
mov
into
cmp
adc
rolb
movsb
xchg
popf
nop
mov
clc
popf
push
or
sbb
push
xchg
das
movsb
call
movsb
or
jg
mov
sbb
sub
jmp
mov
or
adc
out
pop
jo
xor
xchg
loop
adc
lods
fiaddl
cmpsb
mov
andl
mov
push
lock
or
add
loopne
ljmp
fsubl
fs
mov
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
cwtl
mov
push
addr16
dec
outsl
movsb
xchg
or
and
das
xor
or
subb
or
or
xchg
adc
xor
movsl
dec
aaa
movsb
sub
or
lods
push
mov
lea
mov
popf
and
pop
leave
movsl
ds
xor
out
push
daa
dec
pop
jb
jb
shlb
xchg
mov
das
mov
call
les
inc
xor
and
sbb
imull
cmpsl
and
lds
sbb
pushf
rolb
cltd
sbb
es
push
add
repz
mov
stos
jne
cmpl
fbld
loop
ja
test
testl
add
test
and
add
test
fsubrl
add
sbb
leave
or
insb
testb
sbb
and
call
test
dec
push
mov
and
mov
push
xchg
xor
xor
enter
mov
aas
shrd
test
fisttps
inc
rolb
push
mov
add
lds
mov
push
mov
fdivl
or
movsb
loopne
adc
xor
test
fadds
hlt
rcll
sub
inc
scas
loopne
in
shrl
stos
in
mov
jl
test
xor
fdivs
sbb
pop
or
xor
std
xchg
xchg
fadd
jae
inc
sti
add
stc
movsl
or
and
push
cmp
sub
add
pop
gs
insl
rclb
xlat
xchg
mov
inc
aam
fsubrl
orb
cmpl
or
cltd
dec
mov
inc
je
pop
aam
mov
pusha
mov
incb
stc
xorl
insl
lods
test
xor
mov
lods
pop
inc
sahf
mov
dec
push
call
fdivrs
adc
sub
test
in
pop
cmpsb
lock
xchg
pop
scas
lcall
ficoml
cwtl
push
ret
stos
push
push
les
ret
scas
xchg
mov
inc
sub
or
stos
inc
call
push
and
test
inc
jnp
mov
jg
add
aaa
jl
adc
sbb
jmp
sbb
rclb
mov
and
test
add
aam
mov
sar
mov
or
add
icebp
in
pusha
pop
insb
call
xor
push
xor
and
scas
into
enter
and
cmp
lret
cwtl
mov
sbb
pushf
add
nop
dec
dec
jo
and
dec
dec
mov
loopne
out
mov
mov
les
mov
and
push
adc
in
stos
ret
in
xchg
add
test
mov
jnp
jg
stos
loop
adc
push
mov
push
add
xlat
adc
scas
inc
add
mov
sub
call
insb
outsl
lods
adc
aas
inc
mov
add
mov
in
cwtl
mov
cs
or
arpl
push
rcr
or
inc
lods
add
movsb
lods
incl
fs
jns
rorb
movsb
test
xor
pop
adc
or
jns
adcb
and
mov
jb
and
cld
lock
enter
and
jb
iret
pop
or
lock
mov
fiaddl
pop
in
test
leave
xchg
inc
mov
fdivrl
xor
lock
inc
mov
push
xor
jl
movsl
test
jno
mov
and
mul
mov
mov
mov
in
and
mov
pop
fcoms
fs
mov
dec
lahf
xorl
pop
or
les
push
xorb
xchg
shll
shrb
mov
mov
cwtl
das
mov
das
lods
lods
incb
ret
cmp
inc
js
xchg
enter
roll
ss
out
xor
imul
jae
and
pop
add
add
inc
lfs
add
xlat
xchg
ja
int
mov
sarb
pop
sbb
inc
mov
adc
dec
les
scas
or
and
pusha
outsl
mov
sub
dec
jno
dec
pop
rcl
daa
int3
cwtl
or
jge
mov
mov
xchg
mov
repz
pop
sbbl
fwait
movsb
in
andl
pusha
cmp
adc
adc
lods
movsb
push
cld
leave
pusha
out
out
mov
aas
loopne
shrb
mov
pop
jnp
sti
insb
and
pop
ljmp
or
cmpsl
lock
mov
cmpl
push
les
gs
or
mov
in
sub
sti
nop
shrb
aam
roll
and
pinsrw
inc
mov
xchg
rol
jecxz
movsb
aad
arpl
roll
push
fbld
adc
rcrb
mov
ret
lock
and
iret
cmp
adc
gs
lods
and
jg
cmp
orb
es
add
mov
inc
inc
sbb
loope
xor
es
push
inc
ret
das
enter
push
loop
mov
ret
ret
and
mov
pop
and
push
in
xchg
mov
xchg
xor
lea
and
pop
add
cmp
mov
dec
int3
ffreep
enter
sar
xchg
mov
jne
movsl
mov
push
aam
rolb
dec
lds
mov
mov
push
test
cmc
in
aas
push
push
loopne
stos
pusha
push
loope
das
xor
sbb
leave
shr
jle
or
adc
inc
in
dec
rolb
jnp
sbbl
sbb
jae
sbb
inc
das
add
adc
pop
lods
test
jns
insb
inc
imul
dec
mov
sbbb
fsubrs
int3
pop
les
lret
cs
pop
dec
rorb
ljmp
enter
cmpb
sbb
test
imul
fwait
testb
js
mov
movsb
stos
rclb
inc
xchg
add
cltd
nop
data16
pushf
or
fs
lcall
or
and
cmp
inc
lods
inc
mov
add
xchg
sbb
cmp
cmpl
iret
inc
add
dec
test
add
pushf
or
push
pushf
les
insl
pop
enter
nop
fisttps
mov
cwtl
adc
xchg
push
cwtl
dec
out
fidivrs
ss
adc
insb
inc
fucomi
cwtl
mov
cmp
int3
xor
or
leave
stos
push
lods
adc
lods
leave
aas
cmp
test
in
fmul
inc
rorb
testl
out
add
sub
out
and
mov
stc
mov
repz
mov
mov
or
adcb
dec
cmp
push
int3
out
lret
push
add
cmp
add
inc
adc
cwtl
nop
sbb
xchg
mov
xchg
je
push
fcos
in
rcrb
inc
test
sti
mov
pushf
dec
xor
lods
cmpsb
dec
repnz
in
cmp
xlat
push
leave
and
dec
andb
leave
pop
nop
dec
cwtl
fs
pushf
pusha
in
cmpsb
popa
dec
cmpsb
push
inc
pusha
dec
fsubr
lock
jbe
sub
fdivr
mov
leave
cmp
ja
lods
mov
jno
scas
mov
cmp
fdivl
push
out
or
mov
mov
add
push
mov
jno
jg
cltd
nop
outsl
cltd
or
inc
es
add
fs
push
cltd
or
adc
nop
or
out
and
enter
mov
inc
inc
fwait
or
mov
outsb
mov
int3
xorl
xor
xchg
pop
mov
push
js
ret
imul
push
push
fs
in
xchg
push
push
in
sti
add
push
mov
pusha
ja
das
inc
shrl
call
add
add
and
sbb
jns
movsb
xor
in
inc
in
xchg
add
dec
push
jg
add
xlat
push
or
fdivrl
std
aad
xchg
bound
xor
das
fildl
push
pop
mov
sub
dec
sbb
out
or
nop
add
test
nop
addr16
popf
out
cmp
adc
push
mov
jg
or
inc
out
mov
sbb
shlb
or
lahf
rorl
add
roll
dec
xor
adcl
push
cld
adc
lea
shrl
pop
in
add
adcl
push
cmp
sub
clc
cltd
mov
inc
inc
or
stos
sbb
sbb
clc
pop
adc
and
add
mov
push
ljmp
fcom
pushl
add
mov
inc
and
mov
xor
cmp
je
xor
andl
mov
or
or
in
loopne
aad
bound
mov
inc
adc
lds
mov
jmp
mov
inc
jo
ja
aad
mov
nop
sbbb
pusha
test
push
xor
call
inc
adc
sbb
push
push
dec
fisttpl
jne
js
add
push
gs
inc
mov
mov
add
pushf
pop
or
aam
jne
fsubs
xor
push
add
vorps
inc
mov
adc
push
push
mov
stos
imul
call
dec
sbb
xchg
mov
and
jo
push
fwait
and
push
lods
gs
jno
pusha
sbb
fstpt
incw
add
nop
xlat
lods
sarb
nop
fistl
dec
mov
cs
movsb
sahf
mov
lods
fs
orb
nop
mov
fwait
fs
addr16
fs
leave
and
dec
pop
insb
hlt
and
dec
xor
orb
dec
inc
dec
lret
add
scas
mov
mov
cwtl
inc
pusha
fdivs
nop
call
add
rorl
cmp
cmp
fdivrl
addb
addb
add
add
adc
dec
je
and
fs
aam
enter
push
mov
sbb
push
or
jecxz
pop
je
mov
enter
dec
push
jo
aam
adc
jbe
orl
nop
lret
repz
cmpsb
inc
das
clc
fidivrs
cmpsb
jo
insl
test
mov
sub
adc
lods
add
xor
mov
arpl
test
sub
loopne
es
fisttps
cmpsb
sarl
nop
mov
test
rcrl
xor
cmpsb
pusha
mov
mov
das
inc
pop
mov
pop
daa
leave
daa
and
push
cmp
pop
push
comiss
adc
inc
mov
test
dec
add
lds
jne
stos
stos
sub
mov
stc
dec
xlat
add
rolb
test
and
enter
add
clc
fistl
mov
add
cltd
int3
dec
cmpsb
pop
or
fcmovnb
inc
and
adc
push
sbb
out
mov
sub
mov
pop
dec
xchg
lods
test
add
movsl
lret
jecxz
gs
pusha
jns
push
jb
jb
rolb
add
ret
adc
and
mov
sbb
shl
ret
pop
test
xor
addl
stos
adc
in
sub
cmp
jo
xchg
mov
nop
add
or
stc
lock
push
mov
cld
inc
push
fdivs
fcmovne
push
mov
add
aam
lock
add
mov
pop
insl
ja
daa
mov
mov
adc
mov
out
movsl
or
adc
shl
add
adc
stc
lods
push
pop
popf
div
inc
in
push
lock
sbbb
mov
cld
repz
mov
inc
lret
jno
mov
sub
enter
or
aam
jo
test
out
rolb
mov
aam
sbb
test
scas
imul
imul
adc
pop
or
sbb
aad
hlt
cli
mov
in
cld
cli
scas
fs
cmp
fs
dec
inc
dec
sbbb
sti
adc
js
insb
inc
mov
es
pusha
sti
test
fidivl
adc
and
pop
and
ficoml
xor
inc
sbb
push
mov
sbb
rcrl
in
cli
dec
mov
rolb
fcoml
sub
xor
mov
adc
xor
subb
mov
pusha
sub
cmpsb
mov
add
sub
ret
nop
cltd
pop
enter
icebp
push
pop
ficoml
pusha
adc
fwait
subb
xchg
jne
push
mov
dec
addb
addl
fiaddl
in
jmp
nop
fimull
xor
jp
sub
mov
mov
adcl
sub
add
adc
inc
dec
sbb
xor
xor
dec
and
pop
push
jbe
adc
jg
jl
into
push
scas
push
repnz
and
inc
loop
sbb
movsb
mov
enter
rorb
pop
and
mull
cwtl
out
notl
and
add
jbe
and
pop
adc
add
aaa
in
fcmovu
or
lods
mov
sub
inc
cs
stc
jp
mov
cld
dec
push
adc
shrl
pop
popf
jbe
jne
sub
mov
lds
das
push
andl
and
ja
xchg
inc
and
push
mov
inc
push
jmp
loop
mov
ror
and
pop
movsb
lods
mov
inc
push
lds
sbb
cmp
sbb
aaa
idivb
fs
cmp
xchg
fcmovnu
or
outsl
sahf
jmp
stos
cmp
je
int3
mov
test
mov
and
push
push
iret
repz
testb
fiaddl
cmp
loopne
sarl
lock
push
add
jnp
sbbb
mov
imulb
push
inc
add
je
iret
mov
fildl
mov
ds
pop
mov
inc
rclb
adc
call
mov
mov
mov
ljmp
add
fstpt
orb
jnp
mov
add
and
mov
and
jnp
or
adc
out
leave
and
ljmp
cmpb
or
cmp
repz
push
push
dec
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
ja
pop
and
pop
pop
jmp
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
xor
xor
ss
cmp
sub
daa
adc
mov
rcll
xchg
adc
push
or
or
outsl
cmp
adc
pop
push
lcall
icebp
or
mov
sahf
out
or
je
jb
outsl
in
in
pop
sti
arpl
fs
out
sbb
push
dec
imul
pusha
pop
jne
push
gs
xor
cs
fidivrl
lcall
adc
popa
and
popa
je
outsl
outsb
push
rcrb
xchg
sbb
lock
pop
in
xchg
xor
incl
insl
mov
shrb
and
rolb
inc
jg
outsb
ljmp
inc
js
je
jb
gs
cmp
or
outsl
add
gs
fistpl
jle
add
add
je
push
or
xor
popa
mov
popa
jb
mov
cmp
dec
push
outsb
dec
xor
xor
ja
adc
insl
insl
cmp
imul
sahf
dec
and
jns
add
das
das
adc
push
dec
push
inc
inc
gs
insl
loopne
in
into
and
dec
outsl
jbe
dec
arpl
out
push
pop
testb
je
inc
jne
jne
dec
jne
xchg
ffreep
pusha
push
mov
inc
jo
imul
lret
bound
inc
insb
out
jae
adc
xchg
pushf
jae
cmp
ja
sahf
mov
jne
xor
lods
sbb
and
daa
push
scas
clc
sbb
dec
xor
jne
dec
js
push
jne
jae
cmp
ja
pop
dec
inc
mov
popa
das
jo
or
jb
inc
adc
xor
test
or
dec
push
shrl
sbb
repnz
mov
mov
xor
daa
and
dec
ljmp
sub
sub
cmp
aad
loop
pop
pop
je
fldenv
jl
jle
add
arpl
mov
cmp
dec
and
push
jecxz
sbb
movl
in
pop
push
inc
insb
jae
cs
fs
mov
inc
out
adc
jo
mov
imul
and
outsb
je
mov
out
dec
dec
inc
fistps
dec
dec
inc
and
add
stos
push
insl
xchg
add
inc
outsb
push
jo
imul
push
pop
mov
je,pn
jnp
inc
inc
jo
xchg
idivb
mov
inc
and
fs
push
orl
insb
gs
cltd
xorb
inc
popa
and
shr
mov
mov
jne
pop
xor
and
adc
insl
push
xchg
push
jo
xor
mov
mov
dec
rolb
les
adc
add
push
fisttpll
xchg
and
or
imul
add
or
fs
into
hlt
xor
bound
in
add
dec
in
pushf
add
test
int3
fidivrl
popf
jb
loopne
outsl
mov
ret
or
sub
dec
addb
das
arpl
orb
cmpl
xchg
dec
popa
sub
pop
push
fwait
outsb
mov
addl
insb
imul
lret
int3
or
add
or
gs
or
and
insb
popa
pop
xor
gs
push
shrb
fistps
push
and
pop
aaa
xor
in
xchg
shll
adc
add
pop
dec
add
add
insl
push
fcoms
adc
jae
lods
call
jne
jbe
add
jmp
xchg
push
mov
or
gs
or
lds
scas
inc
out
inc
jle
outsl
push
mov
imul
lcall
bound
cmp
jno
filds
insl
in
ljmp
imul
xchg
bound
imul
push
pop
in
inc
jno
stos
pop
out
rclb
leave
nop
loop
jp
inc
insl
imul
cmp
xorl
in
xor
add
mov
and
and
or
into
lret
cmp
sub
jae
xor
add
jo
sub
test
cmp
jb
push
sub
add
xchg
lret
inc
sub
pop
dec
jmp
dec
or
jo
and
mov
fstp
cmp
cwtl
ja
ds
inc
inc
sbb
push
push
dec
cmp
jg
insl
xor
inc
add
cmpb
rol
jmp
filds
jno
icebp
pusha
inc
mov
clc
ret
movsl
mov
jno
add
or
outsb
orl
imul
test
cmpsb
gs
popa
dec
add
xor
jg
js
mov
imul
mov
add
xchg
sub
in
imul
xchg
adc
out
add
adc
add
add
add
add
xor
cmp
pop
or
aaa
ds
push
pop
imul
hlt
and
or
pusha
add
js
mov
pop
sub
add
sbb
sahf
mov
xchg
push
xchg
test
add
orb
into
in
fnstenv
enter
lret
jb
shrl
push
jo
add
movsb
mov
mov
push
stos
mov
xor
jo
dec
dec
dec
sahf
fcmovnb
or
sbb
dec
sahf
lea
mov
nop
xchg
xchg
les
xchg
xchg
mov
es
pop
adc
mov
adc
dec
sub
pop
pushf
jo
adc
adc
or
and
cmp
or
pushf
dec
pop
mov
pushf
jo
adcb
pop
push
mov
lock
add
fcoml
and
repnz
jb
sub
dec
add
sbbl
jb
addl
pop
addb
add
ret
ja
add
ficoml
add
add
add
add
sub
pop
stos
pusha
incl
adc
fadd
sbb
add
andb
pop
shr
jmp
add
test
decl
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
ljmp
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
dec
leave
lret
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
ret
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
adc
dec
or
mov
inc
pushl
aas
sbb
or
cmp
test
fists
outsl
ja
repz
cs
jae
jb
bound
push
mov
inc
data16
dec
cmp
inc
arpl
mov
jne
daa
pop
lea
dec
mov
jbe
in
inc
outsl
js
push
push
inc
push
mov
aaa
imul
out
mov
xchg
mov
mov
in
sti
pop
jbe
dec
imul
mov
imul
ds
and
inc
jb
jns
sub
daa
pop
enter
in
adc
mov
aaa
call
arpl
pop
or
cmp
outsb
adc
rcrb
arpl
mov
push
outsl
shr
in
pusha
inc
jbe
push
push
push
outsb
pushf
push
fs
and
cwtl
sub
dec
pop
ss
popl
outsl
add
cmp
push
sbb
and
insl
es
dec
lahf
sub
cwtl
xchg
mov
xchg
pop
pop
pop
push
push
jae
imul
pusha
insb
mov
xchg
add
movsl
jae
addr16
xor
ja
das
outsb
gs
mov
data16
and
dec
testl
into
mov
outsb
mov
push
cmp
push
scas
dec
jge
push
sbb
aas
jg
mov
imul
sbb
fistpll
xor
jae
and
jg
cmp
push
sbb
jg
test
mov
or
stos
outsb
aad
das
je
outsl
xchg
push
mov
mov
popw
stc
iret
rcrl
pop
cmp
cmp
add
ds
push
das
push
sub
cmp
push
jle
sub
sub
cwtl
jnp
into
addr16
sub
sub
push
xlat
ret
gs
inc
jmp
movb
lahf
cmp
push
dec
in
mov
pop
pop
cwtl
jb
jne
shrl
push
jb
imul
mov
ss
lret
pop
loopne
sbb
cwtl
pop
popa
pop
es
jo
sub
mov
jl
lahf
lcall
sbb
inc
add
or
add
jns
out
in
rol
mov
jp
dec
and
inc
push
hlt
sti
aam
in
jnp
mov
mov
movsb
mov
imul
inc
or
cmp
repz
mov
push
push
adc
push
int3
repz
fdivl
push
insb
push
jns
iret
mov
push
cmp
jns
push
dec
dec
inc
mov
jns
out
cmp
and
jns
jg
adc
incl
loopne
lods
out
sahf
out
insb
dec
sub
iret
repz
in
dec
test
fs
cmp
repz
dec
cmp
jns
out
add
std
aam
mov
jl
out
cmp
hlt
cld
rolb
adcb
push
movsb
push
pop
aam
lcallw
shlb
jns
push
xor
data16
add
mov
pop
push
in
mov
bound
fs
sbb
repz
jb
xor
xchg
jp
shrd
sub
lods
sub
rolb
add
jle
push
insb
subb
cs
jae
mov
inc
mov
sbb
push
inc
dec
xor
inc
dec
dec
dec
push
push
mov
and
xor
testl
dec
inc
add
decl
sub
adc
incl
popa
into
mov
repz
mov
xor
jnp
inc
loop
mov
ds
pop
addr16
aas
fcoms
inc
pop
clc
lret
sbb
jb
xchg
jge
inc
lcall
arpl
cmp
adc
dec
scas
jp
adc
incb
mov
mov
and
cmp
dec
imul
pop
jns
iret
lret
add
inc
mov
mov
add
dec
mov
pop
sahf
fwait
ss
sbb
pop
jns
dec
sti
jnp
inc
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
pushl
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
jmp
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
decb
or
pop
popa
push
or
scas
int
mov
pop
leave
loop
mov
outsb
push
ja
xchg
dec
inc
scas
lods
fdivs
xor
out
mov
pop
dec
enter
repnz
and
lahf
in
xor
es
sbb
push
mov
mov
dec
outsb
jbe
and
call
das
inc
cmp
push
gs
daa
inc
out
jmp
jo
inc
sbb
lcall
push
sub
mov
or
pushl
add
or
inc
xor
sub
sbb
cmp
xor
pop
sbb
sub
sub
inc
inc
sub
push
add
sub
sub
xor
sub
dec
jno
jb
jbe
pop
jnp
fildl
ss
or
pop
or
pop
pop
sbb
pop
das
add
inc
sub
or
adc
in
fistpll
dec
aas
dec
pop
pop
cmp
pop
sbb
and
and
jge
std
mov
ret
xor
inc
adc
add
ds
xor
idivb
adc
or
sbb
daa
pop
dec
xor
std
jge
out
cmp
adc
jnp
cmp
es
dec
inc
pop
daa
push
push
dec
lret
mov
pop
dec
dec
cmp
dec
das
dec
dec
dec
dec
or
inc
inc
push
add
jge
pusha
add
neg
mov
dec
inc
inc
push
add
or
xlat
pop
aad
add
inc
or
addb
sub
addb
push
add
adc
pop
push
add
sub
adc
repnz
ds
sub
push
inc
sbb
sub
dec
fisubrl
sbb
mov
pop
jo
mov
inc
push
cmp
and
testb
dec
pop
push
dec
int3
sub
outsl
pop
dec
jle
mov
push
das
xor
rcrl
js
outsl
popf
stos
add
imul
push
sub
arpl
mov
inc
and
gs
push
xchg
xor
push
das
push
adc
das
cmp
or
mov
aas
adc
push
aaa
es
in
add
pop
push
mov
sbb
pop
pop
jo
adc
push
push
das
inc
dec
mov
pop
pop
xor
pop
sbb
add
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
subl
push
pusha
repz
nop
mov
mov
lock
xor
adc
jnp
rclb
and
xor
push
out
jns
out
nop
addb
sarb
popf
xor
and
push
testl
adc
clc
data16
scas
and
add
push
popa
push
aad
mov
inc
popa
outsb
mov
inc
call
push
popa
inc
xor
and
add
imul
bound
xor
and
jnp
add
push
scas
out
outsb
in
push
pusha
clts
mov
iret
repz
adc
jo
shl
iret
jnp
cmp
push
inc
push
mov
sub
jo
sarb
mov
mov
xor
adc
pushf
imul
adc
pop
pop
sub
mov
scas
cs
add
lock
xor
push
sub
aad
lods
ret
dec
js
inc
jbe
sti
popf
stos
ret
mov
es
or
ss
sti
or
das
dec
nop
adc
das
in
mov
push
and
push
dec
cmpsb
add
out
out
push
adc
jb
aas
mov
adc
or
fimull
data16
jb
push
or
sbb
push
ds
jno
and
adc
pop
fld
jb
push
fildll
sbbl
or
push
sidtl
daa
add
add
push
jp
inc
pop
das
push
mov
in
out
mov
xor
cmp
cmp
xchg
out
dec
ja
ja
xchg
ss
cld
xor
pop
inc
ss
out
pop
add
inc
jecxz
sub
jge
add
data16
imul
or
pop
lcall
cwtl
cmp
fs
daa
aaa
pop
ret
push
mov
es
cmp
add
pusha
sub
or
sub
es
pop
ss
inc
push
das
push
lds
add
push
daa
add
add
adc
add
loopne
out
pop
or
gs
and
pop
ret
adc
and
mov
cmp
and
push
pop
mov
sub
cld
push
sbb
arpl
add
outsl
push
sub
xchg
loope
cmp
push
lcall
ret
xor
and
ret
das
xor
add
push
pop
and
sub
lret
adc
xchg
inc
mov
clc
inc
mov
mov
jae
in
pop
sub
call
clts
push
cmp
sbb
inc
pop
rcl
pop
sahf
pop
add
out
iret
daa
in
push
xor
or
or
lods
inc
push
sbbb
pop
lods
push
cmp
sub
popa
mov
mov
and
cmp
dec
test
leave
or
cmp
mov
aas
inc
mov
xor
mov
pop
scas
insb
fsubs
hlt
cmc
fs
sbb
adc
sub
pop
bound
cmp
pop
and
push
lahf
and
push
ss
ss
jo
jbe
push
add
cmp
lret
and
push
xchg
pusha
mov
mov
add
xchg
cs
int
data16
sub
mov
pushf
add
sub
bound
daa
popa
and
add
imul
inc
daa
in
insb
add
ret
stos
sub
adcb
or
cmp
popa
mov
decb
inc
or
movsl
xlat
subb
stc
es
jo
adc
inc
mov
mov
icebp
pop
ja
ss
xchg
imul
or
add
or
inc
imul
lret
dec
inc
adcl
jmp
or
or
sbb
sub
fstpl
push
and
add
pop
cmp
loope
loop
push
adc
and
das
mov
xor
and
loopne
push
insb
js
sub
call
repz
or
pop
xor
push
into
jae
insl
popa
imul
in
sbb
push
pop
outsl
jo
das
jl
outsb
data16
push
ja
or
sub
adc
adc
push
in
sahf
mov
push
outsb
faddl
fwait
xor
out
add
outsb
fnsave
int3
pop
les
mov
call
add
pusha
daa
icebp
jg
add
pushf
add
pop
je
xchg
mov
or
inc
xor
pop
pop
add
dec
push
push
mov
or
mov
push
pop
dec
sub
call
push
mov
ja
add
sahf
pop
pop
pop
push
push
fistpl
repz
push
or
and
xor
sti
mov
pop
adc
sub
xlat
xchg
sub
js
mov
fmuls
push
push
mov
dec
add
pop
and
pusha
ror
xor
ret
dec
sub
push
inc
xorl
jbe
imulb
cmp
stos
or
push
push
add
mov
lea
pop
lret
outsb
aaa
pop
sub
lods
or
add
adc
xor
dec
nop
or
cmpsl
mov
dec
dec
cs
adc
js
cmp
out
jne
je
sub
das
push
ret
out
jmp
sti
cs
outsl
jb
testl
data16
pop
push
push
lock
mov
daa
and
jae
popa
es
adc
aas
insb
das
shll
sahf
daa
xor
and
xor
js
add
dec
fmuls
cmp
push
pop
outsl
ret
imul
xor
loop
mov
push
adc
sbb
jns
xor
mov
roll
add
or
push
repz
pop
add
cwtl
shl
rcrl
add
mov
mov
insb
iret
add
adc
jns
and
sub
xor
mov
insb
sbb
push
mov
data16
testl
sbb
int
test
sub
add
or
fsts
pop
add
ss
adc
push
push
dec
ss
int
str
add
inc
cmpsl
call
insb
stc
das
incl
and
push
push
das
xor
xor
lods
or
mov
cmp
mov
push
roll
xlat
sbb
imul
in
mov
sub
adc
and
and
dec
ss
sbb
cmp
xor
je
outsb
jae
jl
arpl
push
leave
jns
push
fisubs
aaa
loop
sub
xchg
jb
outsl
imul
fldpi
lea
add
pop
lock
fadds
fsubp
adc
pop
pop
daa
push
movb
ret
cmpsl
mov
fsubs
dec
pop
cmp
es
push
cmp
das
es
mov
jbe
adc
pop
aas
inc
adc
clc
das
cmc
stos
out
cli
add
pop
push
pop
push
pop
mov
setl
fsubl
pop
inc
add
pop
das
mov
xchg
jo
fsts
xchg
insl
div
stos
adc
inc
dec
add
les
jle
adc
pop
cs
xor
add
xor
mov
call
inc
jbe
mov
cmp
ret
leave
fisubl
and
push
or
jbe
cmp
cwtl
pop
adc
push
popa
and
push
iret
mov
sbb
push
and
lea
cmp
cmp
xor
outsb
or
pop
jo
cmp
dec
sbb
bound
ret
adc
xchg
sahf
inc
das
push
add
adc
cmp
jns
pop
push
push
push
push
dec
push
or
xchg
test
cmp
sub
push
sbb
pop
add
imul
outsl
in
sub
inc
fildl
mov
in
push
dec
mov
push
push
sbb
xor
add
or
lock
add
pushl
int3
add
cmp
add
sbb
push
out
jbe
push
sbb
adc
push
ss
sub
adc
ret
mov
inc
cmpsl
sbb
cli
dec
or
add
cmp
dec
inc
out
inc
orb
push
mov
push
push
rclb
cmp
rclb
push
pop
int3
cltd
loop
daa
xor
lea
fiadds
bndldx
daa
sub
loop
sub
adc
shr
xor
or
vandnps
or
adc
icebp
pop
mov
and
test
inc
mov
out
pop
xchg
mov
rolb
add
data16
adcb
dec
dec
cmp
sub
push
push
fdivrl
orl
pop
mov
ss
xor
sbb
and
in
xlat
sbb
sbb
retw
jnp
lahf
pop
loope
inc
mov
pop
sub
jbe
stos
sbb
and
loop
nop
jns
adc
add
adc
sbb
pop
pop
mov
clc
xor
adc
cmp
pop
adc
cmp
adc
in
and
xchg
mov
sbb
rcll
aaa
sbb
jecxz
sub
adc
inc
adc
push
mov
push
and
mov
and
mov
lods
adc
mov
push
sub
out
sbb
sbb
mov
inc
xchg
push
mov
clc
sbb
jle
inc
push
rolb
gs
mov
fcompl
pop
pshufw
daa
pop
and
mov
add
call
repnz
add
cld
mov
or
addb
test
push
or
addl
cmp
pop
push
out
mov
xor
jge
pop
dec
dec
inc
push
sbb
pop
inc
adc
add
ja
decl
adc
pop
add
pop
sbb
cmp
cmp
fistps
pop
adc
cs
cmp
xor
loope
test
push
loope
cmp
add
pushf
das
xor
push
push
mov
pop
daa
scas
jno
inc
add
jg
add
inc
dec
cmp
mov
cmp
and
in
or
inc
and
adc
adc
and
and
adc
adcl
dec
cmp
push
sahf
jns
out
sbb
sbb
es
call
add
in
popf
jnp
mov
sbb
mov
addr16
and
insl
fldt
sbb
into
push
jnp
sub
inc
and
movsl
jae
pop
addb
adc
popf
sbb
mov
sbb
and
push
jno
jno
and
xchg
ss
xor
je
pop
pop
mov
cmp
and
loopne
xchg
inc
push
push
testb
push
pop
aaa
cmp
aam
inc
jbe
insl
std
pop
ficoml
dec
fwait
push
push
pop
aaa
mov
and
dec
sbb
xor
xchg
call
test
mov
arpl
sub
movsl
adc
sarb
dec
lods
pop
jo
mov
inc
cmp
sub
cmp
push
inc
pop
dec
dec
dec
push
push
les
inc
push
push
or
push
pop
in
mov
movq
or
scas
std
rcll
cmpsb
pop
push
pop
adc
stos
rol
mov
inc
jne
ljmp
xor
jne,pt
daa
jge
sbb
pop
xor
xor
add
jl
inc
sbb
mov
js
daa
jge
and
aaa
or
push
mov
sbb
jecxz
daa
cwtl
popf
add
or
pop
push
cld
mov
mov
sub
out
dec
add
imul
xchg
ss
or
dec
fsubr
sbb
push
push
pop
es
pop
xor
es
or
adc
lods
pop
insb
xor
aaa
fadds
outsb
dec
mov
icebp
aaa
mov
push
xchg
or
cmpb
out
mov
es
sub
ljmp
add
je
ja
fs
gs
movsl
xchg
stos
pop
jmp
mov
das
pop
fsubrs
loope
cmova
lea
cmp
inc
inc
fwait
sub
mov
mov
inc
fisubs
pusha
add
shlb
push
cs
sbb
mov
cmp
into
jnp
fwait
cmp
es
jnp
cmpsl
stc
push
add
inc
xor
inc
dec
xchg
icebp
xor
push
push
lock
mov
push
in
and
push
testb
lahf
sub
dec
push
dec
dec
clc
jg
push
in
add
aaa
shlb
mov
mov
fisttps
sbb
ljmp
mov
ja
call
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
add
test
cmp
mov
xchg
mov
mov
xor
pop
sbb
mov
fs
jle
jo
pusha
pusha
decl
mov
sbb
nop
ljmp
dec
pop
dec
xchg
pop
shl
dec
push
fadd
push
push
add
jg
pop
xchg
call
xor
lods
mov
stos
and
sbb
and
insl
xchg
mov
inc
pop
push
in
shll
mov
cmp
pop
push
dec
imul
xlat
cs
pop
dec
sub
xchg
pop
jb
sub
sbb
or
clc
and
cmp
call
xchg
xchg
out
dec
mov
xchg
dec
cwtl
inc
mov
insb
out
fld
inc
js
cmp
ficomps
push
mov
ds
pop
int3
repnz
mov
or
pushl
push
dec
imul
cmp
xor
cmpsb
xor
sub
sub
xor
inc
xor
inc
and
and
xor
pop
add
jne
cmp
insb
push
outsb
add
add
inc
testl
js
divb
jne
movsl
mov
popa
rclb
out
dec
jp
push
jb
sub
stos
cmpsl
bound
je
loope
sti
cmp
popa
outsb
mov
es
dec
push
adc
and
or
mov
xchg
sub
or
aaa
push
popa
jnp
jg
ja
mov
add
lea
das
out
mov
inc
pop
pushf
es
andl
adc
mov
out
ja
aaa
add
sbb
out
rorl
fcoml
daa
push
push
xor
dec
xor
fisttps
push
adc
aaa
push
adc
xor
add
cmp
andl
pop
and
mov
jbe
adc
ja
xchg
outsb
pop
inc
push
dec
and
inc
sub
loope
jno
add
jns
ficompl
push
cmp
jbe
pop
xor
outsl
aaa
dec
or
xchg
add
rcrl
or
adc
mov
das
hlt
test
mov
adcl
mov
xchg
add
addr16
int3
inc
add
pop
xor
in
insb
repz
jne
pop
jae
push
ja
stc
jle
mov
mov
in
sarl
es
iret
xchg
jns
xchg
in
insb
push
add
ljmp
push
test
scas
push
int3
iret
pop
movsb
xchg
dec
lret
lret
fnstenv
fwait
pop
sbb
es
pop
lods
data16
popa
push
outsb
adc
data16
bound
mov
mov
call
or
xchg
push
mov
xchg
out
fisttpll
frstor
cli
push
pushl
push
sti
cs
jge
aam
scas
mov
cmpsl
cmpsl
popf
inc
dec
inc
insb
insb
pusha
dec
clc
int
repz
cwtl
arpl
adc
cmp
mov
mov
push
push
hlt
push
idivl
dec
mov
fnsave
js
loop
jns
sahf
out
cs
mov
pop
adc
jbe
shrl
mov
data16
imull
int3
dec
inc
std
test
mov
mov
push
movsl
push
mov
fisubs
or
sahf
mull
mov
sbb
pop
mov
int
jns
mov
repnz
iret
jnp
nopl
push
mov
shr
push
mov
xchg
push
mov
repz
idivb
xlat
movsb
push
fwait
popa
repz
cmpsl
stc
fsubl
nop
scas
xchg
jnp
in
repz
das
data16
inc
mov
fisubrs
push
sub
data16
out
movsl
cwtl
mov
fwait
sahf
jl
iret
cmp
aad
jno
jge
imul
jle
push
push
jae
iret
repz
mov
xor
outsl
mov
push
push
andb
push
sahf
repz
cltd
lret
jge
xchg
out
iret
sarl
lcall
cmp
movb
imul
and
jns
cmpsl
xchg
mov
iret
repz
and
push
insl
xchg
scas
ret
xlat
xchg
push
add
inc
mov
or
jg
dec
sbb
daa
inc
mov
pop
cs
adc
jg
xor
rcrb
push
push
mov
xor
adc
pop
xchg
add
mov
and
push
mov
loopne
dec
adc
idivb
adc
sarl
hlt
pop
sbb
enter
adc
iret
decl
xchg
inc
repnz
iret
pusha
or
cs
add
and
add
cltd
jmp
inc
mov
fisubrl
push
jae
fildl
out
lahf
aas
inc
push
fstpl
and
daa
inc
in
sti
adc
sbb
or
aaa
fisubrl
jo
mov
aas
mov
dec
fisubl
sbb
and
out
sub
dec
cmp
dec
aam
mov
push
ljmp
cmpsb
dec
add
push
xchg
stos
mov
inc
cmpsb
push
insb
pop
push
dec
mov
je
jns
push
mov
jp
das
push
xchg
outsl
repnz
outsb
push
inc
imul
fsubrs
push
pop
retw
mov
jnp
dec
or
and
sbb
aam
cmp
ret
push
shrb
int
inc
cmpb
adc
cmp
push
ds
add
adc
jbe
mov
jo
jle
insb
je
out
daa
out
adc
addr16
jo
jae
es
outsl
data16
push
inc
and
cmp
adc
fnstcw
or
cmpsb
mov
int
jg
mov
xor
xor
xor
xor
xor
cmp
data16
cmp
push
xor
xor
cmp
push
add
pop
pop
adc
pop
and
inc
push
cmp
imul
push
or
pop
adc
shlb
sub
or
push
loopne
add
dec
pop
add
push
pop
cld
xor
push
lret
ljmp
cmp
push
inc
add
sbb
popaw
daa
jp
xor
inc
or
test
pop
adc
lds
sub
dec
cmp
cmp
mov
inc
inc
jbe
or
or
mov
jbe
lods
push
in
adc
or
divps
push
ret
sub
sub
add
loop
pop
icebp
push
iret
js
mov
cli
mov
xor
add
pop
pop
mov
pop
aas
xor
pop
push
adc
inc
or
inc
jbe
popl
mov
or
push
cs
mov
pop
incb
dec
js
push
sbb
jno
mov
das
push
pop
xor
and
movsb
arpl
popa
das
sub
ljmp
sub
pop
in
jge
xorl
adc
inc
aaa
in
push
or
dec
xorl
ds
pop
cmp
stos
daa
push
sbb
arpl
nop
dec
in
jns
xor
lea
scas
inc
sbb
ljmp
or
and
push
mov
daa
lods
daa
pop
sbbb
addr16
and
test
fisubrl
iret
and
sahf
les
cmpsl
lods
aam
push
loope
ret
daa
sub
das
test
push
lds
pop
lds
fadds
test
pop
cs
inc
out
fiaddl
pop
aaa
sub
pop
je
cltd
js
adc
adc
ja
push
cmp
push
lock
or
mov
imul
pop
scas
pop
cltd
mov
lahf
pop
xchg
fwait
adcb
popl
or
add
ficompl
pop
addr16
arpl
pop
out
adc
add
xor
xor
add
add
pop
fisubrl
mov
xor
fcoms
insb
lcall
shrl
cmp
les
pusha
sub
inc
add
push
jb
pusha
sub
xor
add
adc
jmp
xchg
cmpsb
jl
add
icebp
movb
jno
or
andb
mov
and
pop
add
cmp
insb
pop
add
cmpsl
xchg
outsb
dec
ret
mov
pop
adc
or
sbb
add
and
mov
adc
in
test
inc
pop
es
scas
inc
cmp
adc
mov
andb
pop
cmp
das
jle
stc
pop
sub
pop
ret
push
sub
inc
xor
mov
fmuls
jbe
push
sub
xor
sbb
out
jge
es
sbb
push
jp
test
mov
pop
addr16
xor
js
push
pop
inc
push
dec
xchg
ret
adc
pop
and
insb
sub
mov
sarl
sbb
inc
inc
inc
je
shrl
daa
dec
xchg
icebp
sub
add
ret
inc
pop
push
pop
mov
clc
adc
xchg
mov
pusha
or
adc
push
adc
test
xchg
enter
xchg
mov
pop
mov
xchg
loope
xchg
adc
push
cltd
inc
pop
xor
add
sub
loopne
jae
ret
jmp
dec
ss
into
adc
or
add
shrl
or
dec
lock
cs
add
cmpxchg
or
divl
adc
jp
or
nopl
mov
jo
or
fnstcw
sub
inc
inc
sbb
cmp
lods
mov
pop
sub
inc
cwtl
lret
mov
add
test
inc
sysenter
add
sub
sbb
sbb
add
mov
lods
cltd
mov
sbb
add
orb
ss
pusha
pop
dec
fstpl
sub
setl
dec
xor
pushf
inc
cmc
and
loope
cmp
jo
adc
data16
dec
xorb
mov
fcmovbe
fadds
data16
lret
enter
addl
loopne
pusha
pop
inc
xchg
cmovo
inc
inc
outsl
ret
test
xchg
or
es
das
pop
or
addb
cwtl
rcrl
push
loop
inc
inc
addr16
pop
mov
push
das
std
or
xorb
test
or
imul
pop
fildll
lds
adc
inc
out
sub
cmpl
add
sub
aaa
test
xor
imull
or
ret
pop
add
inc
cld
daa
arpl
xchg
pop
cs
adc
test
adc
inc
ljmp
pop
in
cmp
cmp
pusha
sbb
lods
mov
jo
inc
jo
mov
in
jbe
bound
push
pusha
jbe
cs
add
mov
lret
out
repz
pop
sub
adc
aad
adc
dec
push
add
add
pop
cmp
ret
ljmp
add
push
sub
dec
dec
sbb
dec
jo
jg
pop
push
pop
push
pop
add
or
dec
adc
sbb
inc
add
inc
aas
inc
sub
incl
inc
and
adc
push
sub
dec
add
inc
dec
dec
push
dec
push
add
adc
push
mov
aam
sub
sub
adc
mov
dec
adc
add
adc
ret
fistps
add
mov
pop
push
or
push
dec
dec
das
cmp
xor
sbb
inc
adc
xor
cmp
sub
add
xor
dec
ss
inc
sub
lcall
push
pop
dec
add
sbb
inc
dec
and
dec
and
sub
aaa
inc
pop
ret
add
jnp
loop
mov
scas
icebp
xchg
sbb
test
mov
adc
fsubs
adc
adc
adc
call
push
es
cmp
fcomp
and
and
and
xor
pop
mov
mov
adc
and
adc
aas
cmp
adc
punpckhbw
adc
dec
adc
sub
push
dec
sub
sbb
shll
js
test
nop
repnz
les
and
pop
mov
push
imul
jb
push
push
add
add
jns
out
popa
cld
dec
dec
and
push
push
inc
push
dec
inc
dec
push
dec
xor
int
testl
outsl
mov
pushl
cwtl
das
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
xor
stos
cwtl
stos
pop
fdivr
adc
jmp
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
jg
orl
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
addr16
aaa
cld
ljmp
adc
or
cs
insl
sub
cmp
jae
gs
dec
ret
sub
xchg
mov
data16
mov
call
cltd
test
pushl
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
dec
jg
dec
pushf
pop
rep
cs
arpl
test
decl
insb
push
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
jmp
mov
fwait
stos
flds
pop
insl
outsb
imul
daa
push
and
add
xor
jl
cmp
dec
push
fs
push
bound
and
inc
pop
inc
sub
cmp
add
jg
inc
aas
rcrb
jae
cmp
push
dec
and
jbe
mov
jns
dec
ss
xor
and
inc
dec
dec
inc
jne
and
xor
push
nop
inc
adc
xor
repnz
or
adc
pop
mov
aaa
push
push
adc
das
mov
mov
push
or
push
mov
aas
das
ja,pt
xor
out
mov
fbstp
pop
pop
daa
pop
mov
push
push
adc
and
jg
shrl
pop
cmp
prefetchwt1
push
aaa
jnp
fs
and
aaa
push
xor
in
xor
repnz
add
xor
xor
push
inc
out
push
add
add
pop
mov
jbe
inc
inc
xor
and
aaa
inc
push
inc
cs
inc
ss
cmovb
pop
xor
pop
cmpsl
ss
and
rolb
sbb
popa
sar
data16
jo
pop
in
xchg
adc
add
xorb
dec
sub
rcrl
scas
mov
mov
xor
and
push
clc
in
push
inc
fnstenv
pop
pop
mov
sub
push
jle
push
cmp
sbb
mov
leave
in
mov
jle
movnti
and
pop
or
mov
mov
imul
js
mov
mov
sub
adc
adc
loopne
int
sbb
inc
or
add
push
and
test
cmp
add
mov
pusha
int
inc
push
adc
sbb
xor
mov
loope
push
faddl
sbb
mov
fadd
mov
inc
push
sub
mov
adc
sbb
rolb
and
push
sub
cmpsl
xor
pop
cmp
scas
ds
xchg
adc
cmp
xchg
push
mov
sub
jge
sub
cmpb
shl
add
mov
jl
inc
xchg
jae
call
aaa
inc
mov
adc
or
or
push
loop
xchg
cmp
jle
mov
or
jmp
xchg
sbb
inc
fsubs
adc
or
ret
dec
outsl
push
add
mov
sahf
and
mov
enter
mov
and
in
movsl
ljmp
mov
test
sub
sub
pop
and
mull
push
xor
je
and
rdmsr
imul
jo
jbe
cmp
repnz
cmp
xor
loop
sub
mov
cmp
out
cmp
adc
push
inc
aad
adc
push
pushl
insl
push
icebp
ljmp
out
or
stos
inc
outsl
insb
push
rclb
push
popa
je
jae
fdivr
xor
cmpsl
or
adc
or
push
or
adc
or
cld
xlat
push
gs
mov
sti
and
and
xor
or
add
dec
das
ficompl
or
les
pop
mov
aad
add
add
jbe
mov
mov
and
sbb
imul
ret
jae
mov
adc
lahf
mov
and
fmull
jbe
sbb
sub
cmp
stos
cmp
mov
jecxz
popa
insb
mov
lret
rcrl
jp
aas
mov
or
popa
test
loopne
add
cmpsl
and
lea
cmp
adc
rorb
dec
push
cmpsb
or
fsubs
pop
dec
popa
dec
mov
hlt
add
gs
adc
clc
pop
fnsave
inc
jne
dec
hlt
push
xor
xchg
rcll
aad
fistpl
sbb
aaa
addr16
push
pushf
or
xchg
or
test
je
pop
pop
or
lea
pop
adc
cmp
sbb
out
call
pop
pop
sbb
sub
faddp
sbb
xchg
cmpsl
fs
jo
scas
or
pop
xchg
dec
sub
pop
dec
popa
mov
cs
push
leave
aad
sub
mov
push
or
push
lods
dec
das
aaa
pop
sub
ja
aaa
hlt
lods
movl
or
pop
or
scas
xor
push
push
lea
and
adc
dec
sub
push
push
dec
sub
sbb
add
mov
inc
sub
cmp
and
insb
jmp
sub
pop
fwait
sub
nop
sub
or
push
imull
pop
adc
dec
ficoml
push
sbb
or
lret
adc
mov
adc
push
jg
nop
pusha
lock
jle
scas
movsl
cltd
push
rolb
adc
je
mov
notl
adc
add
jne
icebp
inc
addr16
imul
fisubl
inc
jae
out
xor
pop
pop
aas
dec
pop
mov
data16
sub
rcrb
sub
stos
xor
inc
mov
sub
dec
pop
movsl
popa
insl
outsl
mov
dec
pop
repz
adc
push
pop
test
test
xchg
pop
movsb
xor
aas
cmp
pop
test
xor
sub
mov
pop
inc
pop
pusha
das
add
pop
das
and
xor
inc
mov
pop
pushf
aas
add
sub
inc
dec
mov
or
inc
and
inc
inc
out
cmp
pop
add
cmp
xor
push
add
dec
xchg
jg
aaa
add
xchg
fnstsw
jne
or
mov
gs
dec
jno
fs
std
movsl
jbe
pop
dec
and
addr16
xor
rcll
dec
outsl
dec
mov
jae
ficompl
mov
movzbl
punpckhwd
fimuls
dec
outsb
push
je
scas
js
lods
fcomps
insb
outsl
fdivrs
adc
push
push
inc
faddl
push
dec
repnz
sar
dec
inc
push
pop
mov
gs
mov
js
dec
fwait
pop
daa
lods
adc
dec
push
dec
jb
addl
dec
jmp
cmp
seto
inc
mov
inc
xor
adc
pop
test
sbb
incl
add
adc
cwtl
jno
push
inc
inc
sub
pop
outsb
test
addr16
incb
mov
adc
jns
jb
lret
ficomps
addr16
adc
push
mov
inc
add
push
fisubrl
js
aaa
or
pop
rolb
outsl
mov
jbe
xor
add
rclb
lret
lret
pop
sub
pushf
dec
imul
xor
mov
daa
subb
dec
andb
cmpsb
push
ret
rclb
inc
cs
xor
inc
and
rcrl
inc
loopne
mov
loopne
xchg
in
sub
orb
cld
roll
mov
add
or
addr16
push
add
xchg
pop
dec
or
in
outsl
pop
xor
arpl
sbb
lods
xorb
adc
shrl
and
add
outsl
insl
aaa
lock
xlat
push
jmp
push
out
push
xorl
lds
push
sbb
cmp
mov
mov
push
mov
xchg
insb
rolb
jl
jne
out
fmuls
or
inc
das
push
push
sbb
pop
inc
das
fsubrl
mov
dec
add
dec
inc
xchg
cmc
ja
and
cmc
inc
outsl
mov
ja
inc
cmovo
cmp
cmpb
aas
mov
neg
notb
pop
inc
dec
add
pop
lock
push
adc
insl
xchg
add
mov
adc
push
inc
pop
cmp
negb
cld
daa
aas
add
jge
mov
test
addr16
movsb
sub
in
mov
ficomps
dec
push
fs
sarl
outsl
ror
pop
mov
andb
fidivrs
daa
test
shl
out
rcr
test
enter
rclb
sbbl
pop
add
mov
imul
inc
jb
push
jb
cmp
jb
push
xor
and
add
aaa
xlat
popa
pop
daa
xlat
pop
push
repz
adc
in
push
enter
sahf
out
gs
rcrb
dec
fdivrs
out
sahf
push
cmp
lods
pop
sahf
nop
pop
jns
repz
pop
pop
ds
pop
sahf
out
out
pop
push
cmp
add
out
jl
pop
or
pop
aam
dec
lcall
sub
repnz
push
add
adcb
jno
dec
inc
mov
into
xor
testb
dec
hlt
imul
cmpsl
jns
lods
pop
cld
add
mov
sub
scas
test
add
out
jnp
push
nop
fsub
pusha
push
mov
add
jl
dec
scas
jbe
ja
lods
xor
jne
mov
sbb
dec
mov
in
dec
dec
outsl
sub
inc
pop
enter
sub
adc
adc
das
push
or
leave
mov
add
inc
cs
or
inc
enter
inc
fsub
outsl
push
jb
aad
enter
testb
cmp
aad
icebp
dec
push
pop
dec
xchg
xchg
in
pop
pop
scas
add
mov
popa
out
xor
jb
and
inc
dec
lcall
loopne
adc
je
cmp
pop
push
lds
scas
add
pop
leave
mov
outsl
out
cmp
enter
nop
and
jmp
or
enter
mov
out
mov
sub
pop
jns
enter
sub
pop
sub
enter
mov
movsl
loopne
out
push
xor
mov
xlat
dec
xchg
and
pop
jg
add
inc
mov
and
ret
mov
and
xchg
sub
sbb
push
sub
out
movsl
jge
and
pop
fbld
xchg
fbld
test
scas
jo
and
xor
lods
push
nop
sub
and
dec
shl
push
push
scas
push
adcb
leave
mov
outsl
out
mov
cmpsl
mov
call
cmpsl
xor
push
aaa
addr16
sub
mov
in
sbb
pop
sub
xor
in
leave
mov
add
inc
lods
movl
cmpsb
lahf
mov
popa
aaa
ret
out
push
push
xor
adc
pop
dec
shll
add
lods
xchg
push
fsubl
mov
sbb
add
hlt
xchg
pop
inc
jbe
sbb
popa
pop
popa
divl
enter
sub
mov
mov
push
outsl
jbe
adc
call
mov
testl
cmpsl
xor
data16
cmp
mov
xchg
push
mov
out
or
cmp
daa
cwtl
pop
movsb
bound
add
or
pop
adc
call
out
add
lods
mov
lcall
nop
pushfw
xchg
xchg
sub
pop
arpl
fs
pushf
and
adc
je
and
push
pop
test
and
testl
dec
fdivs
add
js
iret
cld
add
fs
roll
push
dec
fs
pusha
pop
leave
mov
add
xchg
and
js
add
mov
mov
loopne
and
xor
clc
or
pop
leave
mov
outsl
xchg
cmp
or
sbb
gs
in
sahf
pop
add
in
pop
mov
add
jg
addr16
ds
jb
in
cld
add
push
lods
fs
add
mov
in
sub
jnp
dec
enter
push
cmp
outsl
dec
ficoms
or
or
pop
pop
cmpsb
shlb
jecxz
pop
shlb
addr16
in
cmpsb
nop
orl
add
jnp
inc
dec
xchg
insb
cmpsb
ret
dec
es
addr16
xchg
popa
imul
xlat
add
andb
iret
out
hlt
lahf
or
mov
add
mov
push
iret
repz
sub
imul
cmp
jns
push
or
sbb
aas
dec
push
sub
cmpsl
or
xor
sub
fstps
push
outsl
add
or
cltd
inc
or
dec
jp
lcall
dec
testl
add
leave
fwait
xchg
sub
add
pop
add
imul
scas
add
insb
pop
add
pop
add
fiaddl
lahf
mov
dec
push
inc
pop
or
cmp
test
xchg
pop
insl
or
add
dec
or
push
jl
cld
push
or
enter
es
sbb
push
xor
xor
xlat
inc
addr16
mov
cmp
xlat
mov
xor
mov
daa
sub
nop
jnp
jge
cmpsl
mov
push
lock
pushf
mov
ss
shrb
push
cmp
loopne
ja
inc
bound
xchg
or
pop
sbb
outsl
dec
ficoms
xor
inc
pop
in
jne
push
push
pop
xlat
mov
cmc
loopne
filds
pop
out
iret
lds
push
test
mov
sarb
sbb
addr16
pop
frndint
insl
add
add
push
push
mov
decb
out
sahf
inc
outsl
mov
cmp
repz
pusha
xchg
cld
jns
cmpsl
stc
pop
outsb
inc
pusha
jnp
repz
out
out
outsl
sub
cmpsl
stc
cmp
andb
repz
xorb
sahf
out
add
jp
in
cmp
sarl
push
jae
enter
repz
je
push
xchg
jns
int
faddl
jne
jbe
mov
faddl
ja
xchg
mov
mov
jmp
jns
stos
stc
sub
out
lcall
cmp
iret
repz
ja
clc
and
out
dec
jg
lret
imul
jmp
jle
repz
out
sbb
xchg
out
lcall
cld
out
ds
andl
xorl
popa
xchg
dec
test
mov
push
jns
iret
repz
sub
int
clc
mov
cmp
cmpsl
stos
inc
mov
std
and
inc
jbe
bnd
out
ds
cmpsl
fists
lea
out
cmp
mov
rorb
data16
dec
jne
fcoml
jl
jl
adcb
xor
xchg
add
sahf
out
xchg
sahf
push
sub
lcall
cwtl
int
cltd
iret
repz
ss
pop
lcall
imul
mov
push
clc
pusha
popf
add
int
mov
rcr
jge
out
mov
jle
leave
ds
sarl
outsl
mov
lahf
out
inc
roll
movsb
cmp
out
int3
mov
cmp
iret
repz
or
dec
repz
inc
repz
repz
sarl
xor
popf
out
lcall
out
out
lcall
cwtl
sarl
out
insb
lahf
clc
mov
es
push
enter
dec
repz
fistpll
mov
adc
cltd
in
cmp
cmp
out
cmp
xchg
fisubs
rcl
sahf
cmpsl
fs
out
ds
fwait
decb
test
cmpsl
stc
cmp
sub
popf
loopne
lds
sarl
int3
daa
pusha
stos
stc
cmpsl
fldcw
lret
xor
push
lahf
out
mov
mov
rcrl
adc
and
add
add
inc
sbb
loopne
cmpsl
push
in
rorb
clc
jno
addr16
ds
add
push
add
mov
mov
repz
mov
add
add
scas
add
pop
inc
jnp
rorb
aam
jp
inc
aas
in
pop
enter
adc
mov
ss
and
pop
adc
push
sbb
mov
in
jae
sbb
adc
addr16
ja
outsl
or
in
aaa
pop
enter
rolb
pop
ss
mov
cmp
sahf
push
inc
add
jmp
xchg
mov
scas
rorl
mov
js
mov
mov
outsl
fmuls
in
es
jl
push
fistpll
xchg
stc
mov
daa
or
cmpsl
dec
movsb
dec
movsb
pop
inc
mov
mov
mov
mov
fcmovne
shrb
das
fbstp
inc
fistpll
mov
xchg
out
out
mov
sub
test
out
iret
mov
out
push
repnz
push
and
push
fadds
cs
repz
inc
ljmp
push
mov
aaa
int
cli
mov
in
jbe
cld
jbe
adc
aas
or
inc
mov
loopne
sbb
sbb
hlt
dec
jns
enter
inc
add
negl
push
cmp
ja
ja
shrl
cmp
jno
shl
fildl
inc
mov
inc
add
push
mov
rolb
outsl
jle
inc
shll
aas
fmull
or
inc
jg
inc
xchg
jmp
aad
cmp
dec
and
push
aas
inc
push
xor
sbb
and
add
mov
fistps
nop
sub
or
mov
adc
out
add
mov
gs
dec
movsb
jns
xchg
sbb
xchg
jns
jns
mov
or
in
jns
dec
and
jp
aas
lfs
js
pop
cmpsb
pop
push
out
push
pop
inc
and
jns
je
fs
in
push
adc
ret
and
jno
pop
jnp
fdivrl
scas
mov
test
lahf
fcomi
add
pushf
pushf
pushf
dec
fsub
in
hlt
or
xchg
dec
pop
outsb
addr16
and
cmp
fucomi
xchg
push
icebp
clc
jnp
call
scas
and
in
push
or
stc
and
jl
xchg
enter
xchg
and
xchg
mov
lock
or
and
or
stc
fiaddl
lods
gs
add
leave
xchg
iret
enter
sbb
dec
jge
test
push
mov
pushf
cmp
test
test
outsl
dec
in
leave
test
out
and
in
je
adc
daa
xor
shlb
inc
js
cmpsb
in
enter
rorb
loopne
xchg
mov
sbb
scas
adc
cmp
outsl
inc
out
lcall
push
add
jo
out
out
adc
jne
jns
pop
xor
ds
cmove
sub
pop
jb
hlt
in
addb
punpckldq
pop
and
daa
cmp
pop
popf
in
repnz
add
cmp
mov
push
add
inc
dec
icebp
jbe
mov
jno
jno
and
xchg
xor
cmp
push
dec
ds
jno
cmpsl
push
cmp
xchg
cmp
cmpsb
scas
mov
cmp
mov
dec
cmp
icebp
stc
loopne
sar
mov
and
pop
dec
sahf
out
xor
cmp
inc
dec
jb
fs
pop
xor
and
jb
xchg
lods
cmp
leave
mov
mov
jb
fnsave
xchg
add
call
in
leave
xor
cmp
jo
test
frstor
pusha
push
mov
inc
aaa
imul
adc
insl
sub
loopne
daa
sarb
and
loopne
push
mov
scas
push
jl
call
sarb
inc
test
dec
nop
lds
dec
addb
leave
and
add
dec
je
xchg
inc
repnz
mov
xchg
jb
test
xchg
outsl
je
rcll
je
xchg
xchg
sbb
je
test
int3
aam
add
or
enter
mov
xchg
xchg
repnz
xchg
jne
jne
repnz
jne
jne
jne
repnz
jne
jne
jne
push
or
repz
or
iret
repz
or
cmp
ret
adc
adc
repz
adc
adc
jns
out
adc
jbe
pop
push
out
sahf
out
pop
xor
inc
stc
int3
icebp
mov
sbb
rorl
and
jb
pop
xor
xchg
pop
int3
divl
addr16
sub
xchg
and
ja
mov
mov
mov
addr16
pushf
mov
lret
xchg
lods
xchg
scas
pushf
daa
mov
scas
test
mov
adc
fadds
cs
loopne
mov
inc
fwait
in
js
push
inc
js
inc
mov
pop
das
pusha
js
fcmovne
cltd
addr16
push
fimull
xchg
lods
mov
mov
inc
pop
push
cmp
repnz
inc
test
inc
outsb
es
out
pop
add
insb
in
outsb
or
xor
push
jl
leave
adc
jo
jns
enter
pop
push
jns
push
icebp
sub
xchg
ljmp
outsl
inc
lock
mov
inc
aas
add
fnstsw
inc
out
push
hlt
daa
xor
daa
cmp
jns
mov
pop
pop
push
cwtl
and
mov
lock
mov
pop
and
dec
cmpsl
dec
call
je
jnp
leave
mov
leave
xor
mov
inc
xor
xchg
and
stos
adc
and
jnp
out
push
leave
pop
lea
call
lock
test
jl
fisubl
aas
sbb
jl,pt
push
addr16
iret
imul
cmpsl
in
jp
mov
in
jb
mov
jl
mov
pop
cmp
jl
fxch
lret
add
jge
add
dec
pop
jge
jge
and
mov
test
mov
mov
js
cmpb
je
enter
movsb
push
iret
int3
xchg
sbb
loop
test
jo
fwait
in
nop
add
daa
and
daa
cmp
and
nop
mov
mov
adc
pop
add
jbe
add
das
das
jg
ds
nop
jle
jle
jle
das
das
das
test
mov
mov
das
das
das
enter
fdivrs
jle
das
das
das
call
jle
jg
fldt
das
or
pop
pmulhuw
in
push
or
in
or
or
in
in
push
add
in
add
add
xchg
cmpsl
and
xor
iret
in
jbe
xchg
pop
xchg
add
xchg
xchg
mov
push
inc
jb
inc
scas
jl
jbe
shl
ljmp
xchg
test
xorb
fwait
in
push
pop
sbb
mov
jno
jns
daa
iret
mov
mov
cmp
cltd
testb
or
xchg
les
xchg
cs
in
dec
hlt
in
repnz
add
pop
or
cmp
and
inc
dec
andl
je
pop
fs
dec
or
repnz
mov
je
out
fnstsw
das
jl
cmovle
xchg
mov
in
sbb
sbb
fsubrs
push
aas
sbb
add
adc
inc
mov
pop
lahf
rclb
scas
ret
dec
es
adc
sub
or
mov
leave
iret
xlat
fisttps
in
sahf
out
add
sub
icebp
or
or
daa
inc
dec
and
addb
fwait
push
sub
adcb
mov
cltd
mov
test
mov
cmp
leave
pop
shll
or
xchg
xchg
outsl
add
or
xor
jb
sub
xorl
insb
jo
andl
daa
daa
mov
out
push
push
mov
jns
out
or
or
scas
out
sahf
or
or
or
enter
enter
and
fsubl
add
es
cwtl
xchg
pop
mov
outsl
jmp
outsl
xchg
test
pop
add
iret
leave
repz
push
sbb
or
adc
popf
xor
cmp
xchg
shlb
add
and
mov
cwtl
seto
xor
loopne
jnp
jns
sbb
inc
int3
cwtl
testl
mov
fcompl
enter
adc
daa
xor
jb
loopne
and
es
inc
cmpsw
addr16
rorl
jg
add
xchg
xchg
add
xchg
xorl
in
xchg
nop
pop
cwtl
jmp
xchg
sub
add
push
daa
dec
dec
xchg
jl
outsl
adc
scas
pop
enter
lock
mov
jb
xchg
xchg
xchg
xchg
pop
add
mov
outsl
xchg
bound
xchg
pop
aas
push
xchg
xchg
or
and
jo
das
mov
leave
mov
addr16
popf
xchg
jo
aas
xchg
mov
jae
mov
pushf
cmp
xchg
xchg
mov
ja
pusha
and
js
add
dec
ficompl
jns
stc
cmova
push
jns
mov
mov
loopne
mov
pushf
jb
jb
vaddsubps
out
js
jb
cld
pop
mov
lret
lret
lret
lret
adc
mov
mov
or
popf
cmp
enter
mov
orb
mov
fimull
mov
dec
mov
out
out
cmc
mov
and
mov
inc
dec
push
cmp
mov
xchg
cmp
outsb
iret
add
xchg
cmp
rol
mov
mov
add
lahf
pop
jb
enter
xor
ss
pop
dec
cs
add
pop
arpl
leave
mov
hlt
out
roll
xlat
mov
leave
and
dec
or
mov
xchg
scas
push
or
push
pop
mov
test
jg
out
daa
mov
add
das
into
jg
dec
mov
lahf
pop
mov
and
out
testb
outsl
stos
mov
push
push
jmp
mov
cmp
xchg
insb
and
iret
leave
repz
mov
lea
pop
and
enter
leave
inc
repnz
jmp
lds
ja
popl
int3
mov
sub
aaa
popl
xchg
leave
inc
repnz
gs
fistl
jmp
jns
xchg
nop
cwtl
ud1
add
jns
pop
fmull
dec
rcr
pop
push
leave
out
and
sub
jns
jns
adc
sbb
and
sub
jns
jns
xor
cmp
inc
nop
dec
nop
jbe
jns
push
nop
pop
nop
fs
insb
pop
dec
dec
outsb
fisttpll
or
or
or
dec
dec
pop
push
add
dec
add
sbb
sahf
out
jl
test
out
sahf
mov
daa
dec
aaa
jns
mov
mov
repz
mov
xor
nop
negl
leave
out
nop
mov
cwtl
inc
xchg
jmp
push
push
jb
add
xchg
xchg
nop
push
xchg
outsb
lar
je
jns
inc
cmp
movsl
xlat
xchg
xchg
add
add
in
jns
cmpsl
push
xchg
lock
aaa
repnz
add
popf
jae
jns
sbb
scas
and
sub
xor
out
or
dec
or
jmp
pop
punpcklbw
sahf
out
adc
xchg
xchg
pop
and
adc
mov
in
jbe
mov
lods
cmpsb
mov
daa
adc
call
sbb
jb
xchg
or
push
aaa
repnz
or
jg
sbb
imul
iret
jns
in
or
mov
out
inc
insb
cs
dec
pop
or
jbe
mov
adc
rcrb
rcl
or
fldt
out
out
xchg
outsl
orb
notb
lcall
xor
enter
repnz
je
dec
push
daa
test
add
aas
xchg
xchg
in
and
xchg
xchg
mov
mov
pushf
sbb
sub
ja
sti
icebp
xor
xchg
and
xlat
xor
cmp
mov
and
fildll
push
nop
xchg
pop
xchg
in
sbbb
pop
mov
into
leave
leave
in
rorb
rcr
leave
leave
repz
push
or
lock
pop
iret
clc
or
cmp
pusha
repnz
test
xchg
mov
daa
in
inc
xchg
pop
xchg
fs
dec
ja
das
je
outsb
jl
mov
nop
xchg
into
inc
daa
insb
cs
inc
incb
stos
or
mov
aaa
jns
fstpt
sbb
aam
sbb
adc
push
repnz
sub
das
pop
add
pop
and
pushf
xchg
mov
xchg
dec
cld
aam
jns
dec
dec
out
push
add
cmc
cmp
daa
cmpsl
into
rep
pop
push
push
or
jg
arpl
pop
pop
insb
inc
add
incb
ss
lods
or
lods
lods
jo
ss
cwtl
femms
pop
vmwrite
cld
pop
cwtl
nopl
leave
rorl
add
jl,pn
out
fiadds
cmp
outsb
mov
shld
jb
stc
mov
shrb
lock
clc
ltr
movsl
push
scas
push
add
je
pop
and
push
or
cmp
repz
cmp
or
dec
sahf
fcmovne
repz
adc
mov
push
inc
dec
push
mov
xchg
cltd
lods
out
sahf
or
add
les
cltd
cltd
ja
fisubl
mov
lcall
pop
insl
adc
push
mov
and
push
lods
lcall
jb
scas
dec
lcall
sahf
jae
inc
aaa
adc
call
jo
stc
fs
lcall
pop
cmpsl
pop
scas
mov
pop
pushf
push
pop
lock
cmp
ret
filds
fwait
idivl
lock
and
and
fwait
cmp
xchg
fwait
dec
add
push
mov
js
add
fwait
repnz
out
cmp
mov
daa
mov
pop
sarb
iret
leave
leave
rcr
jmp
sahf
pushf
decl
pushf
outsl
adc
in
pushf
sub
sahf
out
or
or
stos
out
nopl
js
pop
xor
jb
pushf
clc
das
mov
inc
jnp
push
pop
mov
lock
add
popf
das
sub
fmul
xchg
and
dec
popf
push
push
in
cmp
addr16
popf
inc
lock
mov
pusha
mov
xor
cmpsl
mov
scas
dec
mov
dec
dec
dec
mov
ret
in
fistpl
push
pop
rcrb
sbb
loop
ljmp
sub
cli
popf
push
mov
pushf
fdivl
sahf
addr16
sahf
sahf
jns
or
jl
and
pop
inc
mov
add
mov
jns
sahf
aas
add
mov
sub
leave
mov
add
imul
clc
xlat
sub
sarb
or
andnps
inc
jo
inc
fildl
cmp
xor
int
mov
push
cltd
loopne
inc
out
dec
lahf
mov
in
cmpsl
jo
popf
pushf
pushf
pushf
addb
out
add
popf
pushf
pushf
dec
mov
ret
lret
xchg
mov
mov
jns
fmulp
pop
mov
pop
ficoml
pop
mov
mov
xchg
out
push
cmovp
xchg
das
xchg
mov
mov
ja
mov
and
fnsave
mov
xchg
pop
verw
in
add
mov
das
pop
aas
sub
mov
pop
or
push
fiaddl
cmpsl
mov
jne
pushf
dec
test
fsubrl
outsl
dec
mov
loope
inc
repnz
in
mov
mov
cld
add
xchg
add
mov
xchg
mov
pop
in
sahf
out
add
jns
fisttpll
add
mulb
xchg
xchg
mov
call
mov
lcall
leave
cmpl
inc
mov
int3
fstpl
addr16
cs
adc
imul
bound
outsb
dec
movsb
mov
pushf
fsubrl
pop
xchg
leave
inc
repnz
clc
leave
testl
movntps
movsb
iret
lock
repnz
movsb
push
movsb
cs
xor
es
push
push
cltd
lsl
fwait
adc
lods
movsb
outsl
mov
ds
pop
pop
mov
xor
into
movsb
mov
movsl
movsl
push
add
pop
shl
add
mov
aas
xor
add
jns
jns
scas
cmp
in
jbe
jns
movsl
pop
movsl
pusha
aas
push
mov
js
iret
repz
push
adcb
sbb
sbb
insb
pop
inc
dec
mov
lcall
sarb
pop
mov
xor
mov
push
aaa
cmp
xor
cmp
cmpb
fistpl
jg
sbb
xor
xchg
mov
out
push
xor
lods
rcr
les
movsb
pop
das
xor
dec
mov
movd
jmp
cmpsb
das
fadds
icebp
nop
cmpsb
add
in
cmpsl
push
push
cmpsl
addr16
addr16
iret
cmp
orl
inc
into
hlt
in
ret
cmpsl
lahf
into
cmpsl
fldenv
in
out
movb
pushf
stos
ljmp
mov
test
pop
test
test
repz
pop
push
mov
mov
or
fimull
jb
outsl
jp
cmpb
xchg
test
test
push
adc
mov
xchg
out
jns
ficoml
loop
stos
mov
pslld
xchg
inc
repnz
cli
inc
mov
jl
aaa
pushf
mov
inc
test
out
push
arpl
out
daa
imul
jae
jge
jns
out
test
jns
ja
push
or
jns
or
aaa
imul
lahf
adc
inc
loop
xchg
cmp
xchg
repnz
xchg
jns
sarb
lahf
and
mov
add
inc
pushf
or
pop
or
dec
push
cmp
insl
inc
pop
repz
mov
roll
or
dec
xorl
or
mov
stos
subb
leave
rclb
dec
inc
push
mov
lock
push
dec
mov
lret
mov
or
adc
cltd
mulb
lcall
cwtl
addr16
and
cmp
fdiv
stos
outsl
scas
and
stc
stos
add
iret
repz
or
or
daa
daa
iret
repz
sahf
pushf
pushf
cmp
cmp
lods
pop
leave
out
call
adc
test
xchg
xchg
lods
insb
lods
lods
xchg
add
xchg
out
jl
ror
fimuls
psubusw
pop
cmp
incl
push
daa
adcb
les
mov
lds
xlat
das
fwait
push
add
cmp
stos
lods
mov
mov
mov
rcrl
or
movsb
xor
mov
cmp
dec
ret
iret
mov
rep
xchg
dec
scas
das
cmp
add
inc
push
dec
pop
push
cmovle
syscall
add
cs
scas
push
jb
and
jo
xor
rorb
xor
aaa
xor
jae
and
enter
nop
fistpll
pop
setg
jbe
inc
pop
lock
movsb
xchg
scas
or
out
cltd
dec
scas
addr16
dec
cs
mov
js
sbbb
add
mov
dec
repnz
and
push
pop
and
fcmovne
xchg
mov
mov
pcmpgtd
pop
push
xchg
push
or
sahf
out
jns
inc
xchg
or
prefetch
mov
xchg
cmp
dec
adc
jb
loopne
repz
iret
xor
add
mov
pop
inc
jb
jb
push
jne
jb
jb
mov
icebp
stc
cmp
sbb
mov
pusha
test
cmp
jae
test
sbb
repnz
rcrb
hlt
pop
leave
repz
sbb
jae
jns
ss
and
dec
push
fwait
inc
js
mov
in
dec
and
add
rcl
sbb
ja
mov
mov
mov
insl
lcall
xchg
aas
jb
pop
outsl
addr16
mov
dec
mov
mov
mov
imul
and
fadd
or
mov
in
in
ret
and
in
in
cli
mov
lods
xchg
and
sbb
mov
out
cmp
mov
add
add
pop
push
popw
outsb
loopne
sahf
out
jbe
jle
mov
xchg
sahf
mov
cmp
jmp
xchg
or
ror
add
pop
loope
jmp
icebp
pop
movd
mov
repnz
mov
mov
repnz
mov
mov
mov
mov
repnz
mov
mov
mov
pmaddwd
xchg
mov
out
xchg
xchg
mov
mov
push
sbb
sahf
out
sahf
sbb
sbb
sbb
jns
call
xor
out
and
mov
push
sahf
out
fisubs
push
push
and
and
jns
xor
cmp
in
sahf
out
or
pop
icebp
pushf
cmp
cvttps2pi
cs
in
jns
jb
xor
cwtl
pop
out
mov
fstl
mov
pop
push
jno
and
das
shlb
in
daa
outsl
jmp
mov
mov
repnz
cltd
push
pop
mov
xor
mov
mov
jns
jb
jmp
mov
cmp
ds
jne
out
cmp
jge
jns
popf
dec
adc
outsb
lgs
in
testb
aas
jecxz
add
hlt
cmp
dec
das
pop
out
cmp
and
jns
js
xchg
add
mov
daa
iret
mov
cmpsb
mov
dec
dec
sub
add
mov
xor
leave
repz
cmp
outsl
xor
repnz
push
xor
daa
iret
aaa
lahf
cmpsl
imul
cmp
cltd
jecxz
mov
mov
out
mov
mov
xchg
psadbw
push
cltd
mov
iret
jne
jbe
pusha
orl
mov
mov
inc
jnp
mov
pmulhuw
shll
cmp
adc
pop
iret
cmp
add
cmp
daa
orl
pop
mov
jns
into
ud2
fxch
leave
leave
repz
out
cli
out
popf
jmp
mov
jns
xchg
sub
aas
dec
jns
xchg
out
push
pusha
sbb
sahf
out
imul
sbb
mov
out
jns
mov
add
fnstcw
loop
out
mov
cwtl
fisubl
xchg
roll
rclb
ret
arpl
rorl
out
mov
outsl
ucomiss
jae
push
mov
mov
rorb
or
xlat
dec
sahf
ja
push
or
femms
ds
out
sahf
call
iret
mov
or
adc
adc
sahf
out
lar
pop
sub
jns
jo
sbb
xor
dec
inc
sbb
nop
xchg
int
aam
pop
rcl
mov
into
add
daa
mov
dec
pop
arpl
jnp
stc
or
add
mov
js
xor
xchg
mov
mov
cmpsl
daa
pop
leave
jae
in
add
daa
mov
wbinvd
adc
sbb
cltd
test
dec
cmp
lahf
shr
in
cmovl
leave
leave
inc
jb
jg
jb
fwait
loopne
rcl
lahf
cmpsl
cmp
iret
jae
push
mov
shlb
jb
ljmp
xor
or
mov
nopl
xchg
pop
leave
jo
push
addps
dec
pusha
xchg
mov
test
mov
into
pop
add
call
push
out
test
dec
and
jg
xlat
sbb
xlat
and
enter
sub
xor
cmp
jb
cmpsb
call
cmpsl
fs
jb
insb
je
xchg
dec
cs
clc
lahf
cmpsl
imul
leave
cltd
sahf
mov
pop
mov
mov
mov
cli
add
pop
or
lahf
in
call
jmp
les
stos
cwtl
fdivrs
jg
push
leave
repz
sahf
add
push
add
outsb
mov
insl
fbstp
jge
test
lea
or
popf
fsubrl
mov
shl
adc
out
fcoms
in
xchg
daa
add
or
adc
jbe
dec
jb
ja
xchg
fucomi
inc
cmovle
cltd
dec
ds
push
or
mov
leave
jae
xchg
add
sahf
fildl
ja
xchg
cmp
mov
pop
and
pushl
addr16
andb
push
add
ljmp
push
addr16
call
inc
mov
mov
xchg
mov
leave
jae
push
dec
mov
add
sub
ss
jns
out
add
dec
push
xchg
pop
jle
xsavec
outsl
repnz
js
add
in
repnz
movsb
scas
mov
jmp
fcmovnb
out
das
das
das
das
icebp
cld
movl
das
das
das
sbb
enter
das
das
das
dec
enter
enter
movsb
fldt
jne
nopl
leave
leave
in
sbb
sbb
sbb
leave
leave
leave
pop
push
adc
iret
sub
sahf
ja
cmp
mov
adc
and
leave
addr16
fnsave
fbstp
iret
repz
cmpps
int
fdivrs
repz
jecxz
out
cmp
stc
outsb
add
push
cmovo
repz
inc
and
out
iret
inc
cmp
inc
push
iret
leave
repz
mov
inc
xchg
sahf
dec
cmp
fwait
cmp
cmovnp
mov
sahf
out
repnz
loopne
sahf
out
push
jmp
notb
jbe
repnz
or
pop
and
out
sub
leave
leave
rorl
pop
dec
pop
outsl
loopne
leave
outsl
jp
filds
xchg
int
lock
pop
aaa
jb
enter
lret
loopne
pop
js
sahf
add
lock
cmpps
lret
push
lret
enter
vmread
pop
or
fisubrs
mov
nop
aas
cwtl
push
push
repz
cmp
adc
adc
inc
cmp
cmp
pop
lret
ds
push
sbb
popf
cmp
pop
sbb
push
sbb
repz
sbb
data16
fs
out
lret
lret
int3
fs
mov
ss
pop
scas
int3
int3
andb
or
ja
and
or
loopne
push
jb
loopne
daa
aam
jo
cmp
sbb
js
orb
in
cwtl
pop
clts
mov
test
call
daa
iret
or
mov
js
push
rorb
sahf
fmul
xchg
push
leave
out
adc
int
out
pop
loopne
mov
sahf
out
push
add
add
test
push
xchg
loope
mov
daa
daa
daa
daa
mov
movl
jmp
in
in
cmpb
addr16
ljmp
or
or
push
into
xchg
fcmovne
repz
or
pop
inc
sahf
xchg
xchg
xchg
dec
pop
arpl
ja
insl
jns
je
jns
adc
push
sbb
repz
sbb
sbb
dec
mov
nopl
xchg
out
jns
repnz
xchg
out
or
call
push
and
out
sahf
xchg
sub
aas
daa
mov
push
das
pusha
iret
jg
mov
loop
iret
mov
iret
repz
add
fisttpll
ja
push
add
inc
dec
xor
rclb
rcr
enter
rolb
dec
push
add
sahf
out
pop
add
je
out
jns
add
mov
mov
ss
lcall
adc
repz
adc
adc
repz
repz
adc
leave
leave
repnz
or
adc
movsb
fildl
iret
push
shrl
pop
movlhps
es
mov
mov
dec
sahf
out
and
push
and
jns
leave
imul
andl
fimuls
push
mov
sub
cmovp
inc
dec
jns
leave
lds
ss
in
xchg
add
je
push
xor
and
rcl
ss
or
sarb
shlb
das
hlt
cmp
in
xor
cmp
mov
xchg
sarb
pusha
push
or
jbe
cmp
and
sub
mov
in
es
rorb
add
pushf
cmp
in
loope
add
xchg
pop
dec
add
or
mov
ror
shll
sbb
rcrl
jb
enter
shll
jb
dec
sbbl
jge
mov
iret
sbb
and
sbb
stc
add
shrl
shl
loopne
out
psubq
add
in
jnp
jg
nop
out
or
test
push
aam
das
repnz
popa
aam
add
je
leave
repz
or
ja
cwtl
mov
out
sahf
out
or
or
sahf
push
pop
invd
enter
adc
sti
push
aad
repz
adc
sbb
daa
jae
jns
xor
sbb
repz
sbb
sbb
repz
test
nop
and
and
cmp
and
jecxz
jp
cmp
sub
sub
add
aas
movsl
and
out
add
dec
icebp
jbe
lahf
psrlw
jl
out
and
xchg
push
push
popf
out
in
sahf
pop
test
mov
push
or
leave
repz
or
fisttps
ljmp
out
popf
push
pop
and
sub
jo
out
aaa
adc
xchg
dec
dec
xlat
xlat
arpl
outsb
daa
iret
mov
jns
sbb
repz
and
mov
mov
cmp
repz
ds
leave
repz
std
sub
fdivs
inc
inc
adc
scas
push
fsubrs
das
out
cmp
xor
das
aas
push
push
xor
mov
pusha
imul
pop
dec
and
mov
fs
out
cmp
jmp
repz
rclb
pop
adc
les
push
sub
adc
test
cmp
jmp
push
cs
inc
push
aam
movsl
push
or
test
repnz
imul
sbb
pop
inc
adc
aaa
out
insb
mov
push
repz
xchg
add
sbb
or
or
daa
daa
or
aaa
or
jbe
jne
or
daa
adc
adc
jmp
pop
inc
fucomi
jbe
inc
push
addr16
das
push
nop
outsb
mov
mov
insl
push
and
iret
repz
jb
pop
orb
or
jb
jns
or
xchg
sub
cmp
xchg
xor
mov
data16
fstpl
xor
jns
dec
mov
push
dec
sahf
out
sahf
dec
inc
inc
cmp
sub
out
sbb
or
call
repz
lock
call
iret
loopne
fcom
ror
dec
sahf
out
pop
les
cmp
repz
cwtl
nop
test
repz
fs
pop
push
cmp
mov
sub
outsl
push
push
pop
mov
mov
test
adc
and
in
add
cmp
std
sub
and
adc
sub
fsts
movsb
add
cmpsb
fisttps
mov
movsl
sbbl
sbb
fisubl
inc
ja
add
mov
inc
mov
fildll
in
iret
mov
in
call
adc
xchg
outsl
mov
fidivrl
xor
fcomp
loopne
adc
stc
jb
jle
div
adc
pop
movb
jbe
mov
pop
popf
imulb
sbb
push
fcompl
inc
hlt
pusha
adc
cli
inc
imul
jp
pop
jle
pmovmskb
add
push
pusha
xchg
mov
lea
pop
das
aas
ret
fcoms
mov
aas
rorl
addl
aam
push
or
out
adc
out
adc
nop
adc
lcall
int3
in
sbb
out
xchg
sbb
push
dec
lret
lret
dec
jecxz
outsb
call
out
in
jmp
sbb
js
push
jns
hlt
ljmp
cmp
cmp
add
lcall
aam
test
pop
xor
add
insb
icebp
push
mov
sahf
icebp
aas
test
inc
pop
mov
js
adc
out
dec
pop
adc
mov
inc
adc
push
dec
je
xorb
addr16
push
push
pop
cmpsl
mov
inc
inc
jg
icebp
pusha
imul
pop
lods
push
mov
jmp
scas
cmp
push
push
jg
out
push
jp
mov
inc
sub
add
adc
inc
pop
mov
xchg
es
push
icebp
add
mov
sbb
icebp
sbb
inc
aas
adc
and
push
ds
or
jns
jge
add
or
adc
lock
fdivp
sahf
jnp
or
or
or
pop
lock
jnp
push
add
call
jns
loopne
fcoms
rclb
jns
out
enter
shl
sahf
out
mov
scas
dec
popf
test
clc
mov
cmp
mov
push
mov
rclb
lea
xor
xchg
fiaddl
xor
aaa
inc
cmp
xorl
jg
cmp
pop
jns
out
js
mov
repz
dec
repz
xor
add
jns
out
push
pop
ja
mov
out
iret
loopne
jae
das
push
dec
insb
loopne
sub
add
jb
push
mov
add
and
inc
pushf
or
ret
mov
adc
pop
stc
and
mov
push
incb
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
ljmp
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
call
popl
cmp
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
incl
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
decl
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
decl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
decl
xchg
clc
repz
mov
subb
fwait
xchg
and
and
insl
cmc
int
add
sti
aas
jno
or
mov
pop
jmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
jmp
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
incl
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
cmp
jmp
xchg
cmp
push
mov
xchg
aas
dec
loop
std
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
mov
cmp
sub
jge
mov
inc
rcr
push
arpl
int3
and
incl
xchg
cli
cmp
jp
and
cmp
mov
cmp
decl
push
or
mov
jecxz
cmpsb
add
movb
aaa
fldt
cmp
pushl
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
pushl
in
ss
push
scas
into
imul
faddp
jge
call
mov
in
call
and
dec
dec
gs
std
orl
pop
ficomps
frstor
adc
pop
nop
pop
stc
stos
pop
inc
inc
je
inc
inc
push
dec
xchg
lret
jnp
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
xor
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
ljmp
mov
sbb
dec
jno
repz
test
ficompl
jmp
pushl
roll
shrb
std
in
leave
mov
add
insb
push
arpl
cmp
or
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
jmp
incl
or
insb
cwtl
mov
leave
mov
insb
fdivs
jne
pushl
filds
or
shrl
push
ficoms
push
xlat
enter
mov
push
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
cli
incl
mov
movsl
in
lahf
xor
mov
js
stc
ljmp
lock
mov
cmp
fs
add
hlt
push
ljmp
bound
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fcos
pushl
adc
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
dec
into
pop
cmp
mov
inc
movsl
fisttps
fdivr
ffreep
shll
jmp
outsb
xor
mov
sarb
add
in
incl
xor
or
cmp
add
daa
adc
or
and
test
ljmp
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
pushl
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
call
popf
adc
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
jmp
jno
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
pop
aad
mov
call
xchg
shll
push
repnz
jmp
shll
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
hlt
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
ffreep
push
xchg
ja
int3
add
mov
das
es
lds
or
or
mov
cmpsl
call
ret
shlb
lcall
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
call
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
jmp
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outsl
pushl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
ljmp
cli
clc
sar
imul
push
js
or
push
addl
mov
cmp
pop
add
notl
pusha
rorb
imul
scas
fsubrl
fldenv
filds
aaa
inc
add
mov
sahf
mov
inc
jmp
lcall
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
ljmp
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
sahf
out
pop
leave
xor
pusha
xor
pop
push
dec
sahf
and
mov
aad
jns
pop
inc
push
xlat
fcomp
sahf
out
sahf
fcmovu
fsubp
out
in
jecxz
in
sahf
out
sahf
jmp
repz
out
hlt
cmc
div
clc
fnstsw
out
cli
sti
cld
daa
rolb
nop
xor
out
or
add
adc
mov
sbbb
push
pop
xchg
dec
in
sbb
inc
push
dec
fcomps
test
pop
jbe
inc
sarb
dec
mov
bound
dec
stos
dec
jb
mulb
arpl
xchg
or
lds
cltd
out
and
inc
dec
jle
adc
and
aas
pop
inc
fistpll
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
or
sub
xor
xor
xor
ficoml
popa
push
inc
jbe
pop
insb
imul
inc
insb
gs
add
jnp
push
dec
inc
fisubrl
mov
add
imulb
sahf
dec
mov
loope
xchg
and
or
mov
gs
sub
mov
ss
jbe
andl
xor
and
dec
bnd
gs
adc
add
arpl
or
addb
xor
xor
jns
pop
pop
addr16
xchg
test
add
cmp
je
aaa
pusha
ljmp
popl
in
add
or
inc
mov
pop
cltd
and
jae
or
int
dec
mov
pop
inc
aas
fs
inc
push
pop
inc
inc
mov
sbb
sbb
inc
pop
out
push
mov
inc
inc
inc
add
pop
jbe
adc
ds
mov
scas
add
mov
iret
int
push
dec
cmp
stos
or
xorl
popl
inc
outsb
jne
mov
popa
mov
push
jge
xor
fidivs
adc
arpl
add
mov
push
clc
xchg
into
pop
inc
cmp
fidivl
dec
lods
or
sahf
insb
inc
cmp
test
adc
leave
cli
cltd
dec
lods
push
rorl
push
add
outsl
adc
mov
push
lcall
cmp
mov
pop
mov
xlat
mov
and
xchg
loopne
scas
or
inc
jb
js
pop
mov
dec
popa
jo
push
nop
and
cmpsl
lahf
push
outsl
outsl
test
bound
push
jno
and
push
sti
mov
in
pop
or
dec
pop
in
nop
push
pop
or
test
or
out
arpl
cmp
adc
mov
pop
jo
push
mov
push
outsl
insb
jns
push
add
inc
das
inc
jb
push
notl
data16
inc
outsl
arpl
adc
mov
in
daa
sub
inc
push
bound
ja
cli
xchg
mov
inc
jbe
xor
imul
jg
push
dec
and
cmp
xor
daa
sahf
pop
shll
das
xor
hlt
ret
sbb
add
push
and
inc
outsb
jg
xchg
inc
ror
into
lods
shlb
inc
outsl
pop
je
lret
xor
dec
dec
pop
pop
and
mov
daa
sbb
sbb
push
vpsllw
flds
inc
dec
pop
bound
jle
push
jns
arpl
je
scas
xor
inc
pusha
in
popf
mov
inc
jne
test
pop
inc
adcb
xchg
fistl
adc
fldcw
testl
pop
push
add
sub
or
sbbb
add
push
add
adc
dec
or
sub
loopne
adc
jnp
add
mov
fistl
push
out
add
add
or
pop
pop
push
or
or
or
or
or
fidivs
adc
push
adc
push
in
jbe
filds
or
pop
sbb
adc
adc
adc
add
data16
jle
imul
adc
pop
adc
inc
add
negb
add
and
add
sahf
mov
inc
add
mov
cwtl
xorb
mov
add
or
sbb
jge
call
xor
adc
cmp
incl
and
xor
inc
mov
adc
xor
cmpb
pop
inc
mov
addb
push
or
and
add
cmpsl
addl
add
or
daa
adc
or
or
jecxz
cmp
or
or
or
adc
add
jo
add
pop
scas
cmp
outsl
decb
lods
adc
push
adc
pop
popa
jno
and
adc
xchg
jl
repz
mov
lock
loope
icebp
adc
sbb
mov
mov
xor
add
rcll
add
js
lcall
pusha
cli
sub
rcr
push
ret
xchg
and
pushl
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
mov
mov
inc
dec
or
lock
cmp
dec
loop
cmp
xor
and
fistpl
jg
inc
cmc
push
xor
dec
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
xchg
adcb
mov
or
add
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
lahf
std
movsl
jecxz
pop
mov
filds
stc
or
xchg
jg
or
insb
sub
addr16
out
or
push
push
incl
shlb
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
cli
call
mov
orb
int3
lcall
fs
scas
mov
pop
pop
ljmp
test
in
rorb
sti
ret
scas
adc
mov
xor
ljmp
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
mov
ss
cmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
fisttps
push
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
shrl
decl
mov
int
arpl
push
out
or
push
inc
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
clc
pop
pop
mov
jmp
sbb
push
addl
mov
jb
mov
sbb
mov
mov
sub
pop
mov
jl
rorl
adc
scas
gs
jg
hlt
push
add
stc
loope
stos
fstp
decb
andl
aas
icebp
testb
mov
ljmp
inc
gs
sub
jno
pop
sub
jg
pop
aam
ljmp
inc
sbb
paddb
inc
mov
pushl
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
jge
inc
fwait
inc
adc
loope
fisttpll
out
aas
std
cli
jg
je
push
push
push
idivl
cmp
sub
inc
scas
inc
jmp
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
push
lock
mov
pop
xor
outsl
pop
js
jmp
xchg
pop
clc
pop
hlt
sub
movsb
add
add
lea
jg
gs
std
xorb
jg
mov
jmp
js
ret
mov
shlb
out
sarb
sbbl
jno
or
sarb
ljmp
push
cli
mov
mov
inc
arpl
stos
mov
and
jmp
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
pushl
inc
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
lcall
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
in
mov
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
repnz
add
ret
fcmovu
ds
cmpsl
scas
popa
fucomi
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
incl
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
mov
mov
pushl
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
test
add
jg
jle
jg
mov
jmp
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
orb
scas
les
cli
adc
and
sahf
iret
in
fistpl
lret
mov
mov
hlt
sub
mov
dec
mov
das
incb
fisubrl
aas
mov
or
cld
inc
or
sti
add
repnz
jg
mov
sub
aad
test
mov
mov
iret
fistpll
mov
push
push
sbb
stos
icebp
pop
incb
jno
pop
sub
push
inc
jecxz
sbb
sarl
adc
repnz
lods
loopne
sar
adc
lahf
pop
mov
in
xor
imul
dec
push
cmpl
aas
fsubrl
lock
or
sbbb
mov
add
push
sbb
jne
push
and
mov
adc
loope
xchg
lahf
or
push
rcrl
rolb
pop
bound
aas
fistpl
adc
call
jno
pop
jg
fists
scas
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
call
adc
or
imul
xor
dec
xor
fsubr
fistps
lds
ss
jg
jg
stos
pop
add
ds
cmp
out
fidivrl
xor
lahf
les
sbb
sbb
clc
incl
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
sub
incb
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
cld
jg
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
aad
loop
lahf
mov
or
out
lcall
fistpll
icebp
push
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
lea
decl
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
fistpl
insl
pop
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
mov
insb
sbb
cwtl
inc
mov
mov
jo
aas
repz
outsl
lock
in
jmp
stc
out
je
ret
aaa
clc
push
std
mov
add
test
lds
aad
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shlb
std
insl
and
mov
or
dec
ss
pusha
lods
leave
inc
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
shrl
cmpsl
lret
pop
in
cmp
out
scas
mov
fidivs
clc
adc
jmp
hlt
dec
sar
ret
mov
sbb
xlat
inc
decl
jo
aas
mov
jg
mov
sub
addr16
sbb
outsl
mov
out
daa
jp
std
adc
cltd
or
mov
ret
mov
das
nop
cmp
das
incb
lock
pop
pop
div
cld
idivl
adc
push
js
fs
loope
xor
shrl
ljmp
cmpsb
loopne
jg
mov
jg
stc
insb
clc
pop
fiaddl
into
out
icebp
mov
loope
mov
cmpsl
popf
nop
sbb
sti
mov
fbstp
inc
dec
cmpsb
bound
outsl
das
fxtract
mov
cmpsb
cmp
pop
lock
data16
decb
adc
aaa
pusha
xlat
xlat
mov
and
call
scas
and
aas
and
js
int
enter
add
push
pop
aaa
std
fildll
xchg
inc
sbb
xchg
hlt
andb
mov
aas
icebp
ret
ror
sbb
xor
or
aaa
inc
adc
lds
adc
aas
pop
clc
loope
notb
mov
lahf
jp
dec
add
xlat
mov
push
test
fbstp
loopne
sub
xchg
fldenv
iret
fdivrl
xchg
lcall
loopne
dec
fimull
sti
push
push
xor
sarl
pop
out
dec
inc
sub
jg
jno
ret
fs
pop
dec
push
inc
arpl
out
iret
lcall
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
flds
lods
xor
in
bswap
jmp
outsl
jmp
std
mov
daa
jmp
add
sbb
mov
lods
fadds
mov
div
pop
stc
push
dec
out
fstpt
mov
enter
xchg
xchg
pop
add
push
adc
xchg
cmc
out
daa
icebp
push
lcall
aaa
sbb
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
and
sbb
aas
inc
xchg
add
push
bound
sti
pop
inc
dec
push
mov
push
lods
inc
mov
mov
iret
lcall
and
add
daa
sbbl
sbb
pop
sub
xlat
sub
lcall
icebp
outsb
lds
jle
fwait
ret
lcall
push
nop
pop
jg
mov
leave
fs
loope
scas
mov
mov
aad
imul
popf
xchg
push
mov
cwtl
pusha
call
pop
sbb
mov
mov
cmp
pop
sbb
sbb
xchg
push
out
loope
in
ljmp
pop
bound
dec
daa
xchg
jbe
in
or
jae
lret
mov
pushl
gs
and
mov
ret
jle
lock
push
fs
es
jmp
pop
sbb
sbb
mov
mov
icebp
out
loope
xchg
xor
sbb
es
mov
js
sahf
inc
sbb
shl
push
xor
xchg
sbb
addr16
sarb
cld
or
or
repz
loop
mov
jnp
fstps
ja
xor
add
mov
mov
test
and
repz
rcrl
add
lcall
mov
les
push
cmp
pop
lcall
fists
incl
leave
popa
pop
inc
push
push
jmp
out
sbb
push
lret
push
lahf
hlt
test
sti
dec
pop
mov
lret
inc
fsts
test
push
sti
ljmp
mov
mov
mov
aas
pop
and
mov
sahf
xchg
outsl
loopne
jnp
fsubp
mov
jg
mov
sbb
dec
inc
es
push
pop
out
sub
jno
pop
inc
pop
inc
popa
adc
sub
incl
pop
inc
push
mov
in
test
push
imul
xchg
fwait
inc
ljmp
sbb
sahf
mov
shl
mov
sub
mov
fisttps
in
sub
add
in
aaa
add
mov
and
mov
daa
xor
cmp
mov
stc
in
insb
loop
filds
and
ficomps
hlt
pop
sub
mov
adc
jg
add
out
xchg
int3
enter
sub
mov
sbbl
aam
and
jno
add
ss
int3
and
dec
xchg
xchg
jmp
mov
cmp
orl
es
mov
push
sbb
fisubl
xorb
jmp
shrl
xchg
add
add
outsl
dec
movb
fcmovb
push
jbe
scas
stc
pop
paddq
lcall
andb
lods
fistpl
cltd
jle
xchg
jmp
aaa
shr
jns
and
push
xchg
or
mov
mov
into
mov
clc
call
add
or
je
xchg
fldl
lods
int3
cmp
and
or
out
jp
adc
daa
mov
sbb
arpl
cmp
movsb
cmp
jmp
pop
push
addr16
and
insl
mov
shlb
xchg
aas
push
push
jmp
aaa
jecxz
popa
call
mov
mov
xor
repnz
das
sbb
lcall
in
dec
pop
pushl
cld
fcmovnb
cmpsb
int3
int3
dec
sbb
mov
xchg
out
in
fldcw
inc
test
cs
lcall
pop
in
adc
or
out
out
add
mov
ljmp
xchg
xchg
inc
fldt
push
xor
sub
add
loope
subb
inc
cmp
lds
sbb
add
sub
lahf
lcall
mov
push
inc
mov
cmp
lea
mov
jnp
jmp
dec
test
mov
cmp
negb
cmp
jno
shrl
out
xchg
sub
fdivl
fsubrp
jae
lock
decl
insb
filds
push
popf
push
lea
ss
ss
cmp
jb
inc
pop
dec
cld
xor
xchg
into
ja
dec
or
lock
sbb
jle
fdivrl
cmp
xor
sbb
sub
stc
xchg
jae
cmpl
cmp
xchg
push
stos
fsub
mulb
xor
sbb
fldt
push
add
cmc
es
mov
clc
pop
aaa
shr
cmc
pushf
and
push
inc
dec
imulb
jmp
and
push
ds
shrl
in
pop
scas
push
fnclex
lea
pop
out
movaps
xchg
dec
or
bound
mov
pop
xor
dec
insl
stos
outsb
lahf
ds
jg
mov
lcall
mov
add
adc
loop
adc
cltd
sbb
dec
or
out
push
aaa
imul
sub
jno
popf
iret
adc
ljmp
std
popf
cltd
cwtl
insl
enter
dec
add
xor
loop
add
xchg
mov
call
jae
sub
int
call
mov
adc
push
ljmp
adc
cmpsb
in
pop
jns
outsl
dec
call
ljmp
stc
sti
push
ljmp
mov
movsb
fstl
cmc
jb
outsb
insb
xor
jecxz
mov
sbb
cs
sbb
mov
fbstp
sbb
lea
ss
loope
adc
inc
cltd
or
je
push
in
ss
movsb
add
cltd
lret
outsb
add
xchg
cmp
pop
inc
xchg
iret
nop
stos
mov
xchg
or
fsts
dec
mov
and
test
sub
ljmp
icebp
arpl
stos
dec
push
jp
into
loope
sub
xchg
jmp
xlat
jl
pop
xchg
mov
mov
in
sbb
cltd
jp
mov
pushf
jg
outsl
xlat
lods
cmp
and
sub
rcll
lock
data16
inc
cmc
ss
decl
test
insb
xchg
cwtl
pop
mov
into
lret
push
inc
and
lods
mov
xchg
loopne
add
push
in
push
or
addr16
daa
mov
cmp
out
sbb
jbe
daa
xor
loopne
mov
in
push
test
mov
add
fs
fstpt
pop
jmp
int3
sbb
sub
jnp
sub
cmp
into
lcall
adc
sbb
pop
out
outsb
cmp
fwait
aas
pop
ret
outsl
shl
cli
incl
aas
lret
cmp
inc
adc
jmp
in
mov
enter
std
lcall
mov
movsl
stc
xor
mov
es
cld
decl
mov
xor
fs
out
adc
sub
xlat
push
stc
or
jo
add
call
ss
aam
test
es
dec
cld
cmpsb
cmp
push
pop
or
incl
in
test
xor
loope
enter
movsb
adc
jne
sbb
sbbl
popa
pop
xor
sarl
xchg
lcall
mov
imul
push
mov
push
pusha
mov
xchg
orb
fmuls
cli
fsubrl
rorl
movl
or
ds
out
xchg
int3
ljmp
mov
xchg
cltd
push
dec
cmpsb
out
mov
mov
mov
or
mov
lcall
outsl
inc
xchg
nop
add
cmp
adc
mov
mov
push
sub
inc
adc
out
mov
rcrb
pushl
jb
xchg
or
adc
jns
test
outsl
adc
daa
test
xchg
mov
add
ds
test
imulb
andb
mov
stos
dec
or
repnz
mov
adc
push
inc
nop
dec
or
in
lcall
lock
adc
xor
push
rorb
call
lcall
xchg
ljmp
testl
pop
inc
sub
out
cli
ljmp
sbb
dec
lods
mov
dec
mov
sbb
ljmp
cmp
mov
mov
cmp
daa
in
sub
inc
lds
xchg
xor
push
lret
push
mov
std
dec
es
push
jg
aaa
insb
enter
scas
dec
sbb
call
insb
cmp
jnp
stos
cs
jmp
rcrl
out
cltd
lahf
cmpsl
sbb
popa
cmp
dec
test
loopne
js
adcb
jmp
pop
xchg
insb
test
cmp
jns
xlat
xchg
inc
jmp
adc
outsl
in
dec
out
fmul
lret
sbb
mov
incl
push
or
imul
jg
mov
lock
out
sbb
lds
icebp
inc
clc
aad
jb
cld
fs
jnp
into
gs
aam
pop
or
fldt
jle
incl
cld
pop
inc
test
cs
cmp
or
pushf
call
inc
std
incl
movaps
fistps
add
mov
repnz
inc
and
testl
jl
mov
sub
insl
cwtl
in
xchg
mov
std
jmp
jo
mov
cmp
lds
dec
add
sbb
cmpsl
fs
gs
pop
sbb
mov
scas
int3
iret
call
jmp
lret
int
jbe
xchg
adc
js
mov
mov
lcall
ret
fwait
sbb
xor
xor
adc
and
ror
mov
jbe
pop
xchg
lcall
dec
in
inc
xchg
mov
test
icebp
hlt
dec
call
dec
xchg
cmp
call
cmpsl
test
adcb
test
lock
call
cmc
or
xor
pop
push
out
decl
sbb
std
decl
rcrb
pusha
sub
xorl
dec
int
loopne
addr16
pushl
into
addl
add
cmpsl
std
sbb
arpl
jg
push
loope
dec
clc
cwtl
out
lods
pop
out
xchg
xchg
jl
hlt
push
xor
incl
jns
jmp
cmp
or
inc
jae
cld
ds
or
pop
mov
sub
gs
call
popa
inc
add
scas
mov
cmpsl
out
pop
sbb
pop
fs
cs
hlt
mov
cmp
push
test
cmc
nop
je
mov
push
sar
in
adc
inc
incl
popa
cmp
inc
jge
add
mov
test
orb
jmp
push
lods
xor
mov
clc
jne
outsb
lods
add
pushf
pop
enter
pop
movsb
jae
ljmp
mov
orb
add
add
arpl
iret
orb
add
ljmp
or
roll
mov
jo
out
jb
jle
mov
out
subl
scas
fiadds
dec
pop
xor
or
decl
insb
push
das
mov
movsl
dec
jae
sbb
or
push
sub
decl
mov
inc
lods
int
push
out
cmp
mov
out
cli
dec
sbb
js
rcrb
testb
xor
ljmp
inc
jl
leave
add
jo
dec
cli
bound
xor
xor
push
mov
pushl
je
mov
pop
mov
in
dec
push
xchg
and
pop
pusha
mov
ljmp
inc
sbb
inc
cmp
nop
leave
fildll
cltd
xor
pop
cmpl
ljmp
fs
loop
or
outsb
pop
inc
sub
jmp
push
pop
dec
lret
lahf
mov
sbb
es
push
cmp
sub
lcall
mov
push
xlat
in
in
xchg
jmp
movsb
cmp
cwtl
mov
or
lcall
push
pusha
sti
sbb
add
fisttps
jae
xor
mov
outsl
inc
mov
add
mov
jg
or
add
adc
xchg
insl
pop
cli
mov
ljmp
rorb
cmp
push
pop
movsb
ss
lds
xor
push
mov
pop
or
mov
fdivs
imul
mov
mov
add
sti
mov
icebp
push
mov
dec
cmpsb
pushf
fnstenv
xor
sub
dec
ficompl
out
cmpsl
ljmp
jg
sbb
mov
pushw
fdivr
repnz
cltd
into
lea
cld
push
imul
popa
push
jecxz
fbld
sbb
push
sbb
shrl
lahf
call
mov
std
mov
out
bound
xchg
lds
xorl
adc
data16
inc
fnstcw
nop
clc
lahf
ret
loope
jmp
jb
jg
in
mov
jno
lock
mov
or
imul
push
and
push
stos
test
in
inc
or
shlb
xor
mov
mov
cmp
incl
movsb
cmp
js
or
adc
push
lahf
and
jg
jns
aad
insl
call
incl
cmp
mov
xor
cld
cmp
adc
clc
pushf
jge
cmpsb
and
popf
jle
adc
pop
and
dec
add
push
lock
mov
pushl
mov
out
call
xor
in
and
insb
adc
ror
std
fcos
incl
pop
sub
inc
popa
jge
outsb
cmc
das
ficompl
out
fldt
cmp
jmp
push
insl
ss
sbb
mov
bswap
push
cld
jbe
sti
sarb
ss
jg
inc
and
or
pop
push
mov
mov
lret
fldcw
mov
sbb
in
inc
push
cli
or
xchg
pushl
pop
fisttps
push
fldt
xor
cmp
scas
outsl
shrl
int
and
call
xor
stos
push
lahf
adc
nop
pop
push
cmc
pop
fistpl
lahf
ret
std
in
adc
loopne
jl
jbe
fcomps
cmpsb
mov
adc
add
jp
push
enter
jb
push
incl
push
jmp
and
cmp
aam
shl
inc
push
shll
ljmp
not
repnz
or
push
out
call
push
fidivl
adc
out
ja
dec
cld
inc
negb
add
pop
test
xor
or
cmp
or
stos
les
pop
cwtl
xchg
sub
pushl
loopne
mov
aam
mov
iret
adc
popf
push
popa
and
push
mov
inc
mov
fcomps
sarl
sti
or
loope
push
ljmp
test
lea
outsb
adc
xor
mov
lock
jb
add
ljmp
stc
leave
and
sbb
adc
pop
mov
out
sub
aaa
mov
jle
dec
add
pop
sbb
adc
incl
push
xchg
andl
dec
out
pop
mov
mov
jmp
push
mov
fstps
mov
or
shl
idivl
or
dec
ficoml
jo
repz
push
mov
stos
dec
sub
inc
test
in
nop
sub
mov
psrlw
jecxz
data16
xor
fcomip
notl
inc
sub
out
test
dec
out
loope
jmp
lcall
jmp
sbb
mov
in
mov
rcl
fsubl
push
or
fs
mov
dec
inc
pop
fstpt
mov
clc
add
rorl
cltd
sbb
hlt
xchg
les
add
ja
cmp
xlat
ja
decl
lahf
push
out
rclb
push
cmpl
add
outsb
test
jmp
push
or
cmc
pop
push
pop
popf
int
stos
mov
lods
jns
ljmp
pop
jg
pop
cmpsl
stc
and
adc
mov
add
adc
popf
push
repnz
push
insl
adc
in
fiadds
imul
subb
subb
daa
jmp
inc
xchg
stc
mov
test
dec
add
ljmp
pop
push
mov
push
or
pop
scas
es
cmpsl
in
xor
hlt
or
imulb
pop
test
out
int3
cmp
jb
jmp
in
push
sub
or
xor
js
lcall
push
mov
jl
lret
adc
xchg
xchg
test
or
add
mov
incl
mov
sub
or
enter
outsl
test
inc
andb
mov
in
cli
xchg
cmp
aaa
xchg
imul
jmp
jmp
inc
push
test
jno
fdivl
cmp
mov
lahf
stc
and
test
inc
inc
xor
lds
loope
xchg
mov
bound
inc
cld
mov
jmp
inc
ret
cmpl
xor
pushf
pop
add
imul
call
pop
cmp
and
adc
icebp
pop
xor
push
jg
xchg
lods
push
sub
push
shlb
icebp
push
jle
add
sbb
jmp
in
sub
popf
mov
xorb
arpl
sti
and
cmp
mov
stos
xor
jmp
and
addl
ror
popf
popa
dec
cmp
jns
mov
test
or
lret
mov
or
jp
adc
test
dec
adc
dec
lea
ficomps
cmpsl
or
sub
sbb
mov
outsb
xchg
inc
fs
dec
and
xor
decl
movsb
out
inc
ficompl
dec
jecxz
push
mov
iret
lock
mov
xchg
enter
mov
mov
mov
mov
mov
adc
fisubrs
sbb
incl
pop
lods
pop
sub
mov
popa
sbb
aaa
inc
xchg
push
jecxz
mov
xor
call
dec
jne
push
inc
stc
and
rclb
pushf
jmp
pop
add
fbld
push
add
jnp
cmc
push
lea
imull
mov
arpl
sub
fwait
mov
lcall
and
dec
jbe
xorl
jmp
inc
ljmp
scas
imul
mov
stc
xor
xor
mov
xchg
pushl
adcl
addr16
mov
fadds
or
dec
push
or
pop
mov
pop
jg
mov
pusha
and
pushf
pop
mov
popf
dec
repz
push
ret
jno
mov
cld
gs
push
xchg
xchg
push
rclb
sahf
and
mov
add
jp
decl
fsub
xchg
dec
aas
adc
jnp
ljmp
cwtl
stos
xor
call
sbb
stos
stos
lock
mov
or
call
cs
hlt
push
adc
cmp
mov
sub
sarl
rcrb
inc
arpl
mov
std
push
jmp
add
xor
sahf
mov
jmp
sbb
inc
jmp
mov
or
sbb
xor
inc
mov
pop
mov
stos
pop
sub
dec
mov
pop
xor
into
cmpsl
test
jge
sti
rclb
rcrb
add
sbb
sub
xor
push
scas
and
lcall
rolb
psrlq
fstps
leave
xchg
mov
xchg
lret
lret
sbb
decl
inc
pop
clc
or
dec
dec
cltd
movsl
loopne
outsl
mov
jg
into
sub
lods
pusha
repz
inc
dec
test
inc
jno
hlt
pop
xor
inc
roll
pop
cmp
incl
dec
xor
inc
push
arpl
loopne
dec
fnstcw
hlt
decl
daa
fs
mov
call
call
pop
lcall
flds
xchg
ds
in
xchg
xchg
and
jg
adc
cmp
lock
jl
lcall
test
movl
lds
or
ds
xchg
dec
jb
sub
and
push
in
js
stos
out
ja
pop
sbb
and
dec
iret
cmp
ja
adc
stos
enter
mov
in
add
fisttpll
mov
aaa
xor
addr16
lods
mov
adc
or
call
sub
mov
ja,pn
frstor
mov
movsl
jecxz
adc
cmp
ljmp
jg
loope
test
je
sub
int
or
mov
push
in
pop
out
jmp
mov
sti
push
add
push
jbe
sbb
pushf
sub
push
xchg
jo
push
insl
dec
call
fwait
ret
xchg
addl
dec
test
jp
mov
fstpl
insl
jge
ljmp
imul
jmp
lahf
xor
jns
push
mov
mov
adc
xchg
dec
jle
pop
je
mov
jae
jmp
idivl
in
mulb
fmulp
loopne
xor
cmovg
inc
adc
or
mov
push
ss
inc
pushl
std
or
sub
movsb
inc
das
out
dec
lock
loop
xor
jecxz
out
cmp
jle
dec
lcall
push
push
push
mov
lret
or
test
loop
adc
decl
mov
xchg
imul
push
pop
into
dec
add
or
or
xchg
arpl
sbb
popa
mov
xchg
sbb
lcall
loopne
sub
pop
mov
and
daa
mov
mov
lcall
out
es
xorl
pop
gs
icebp
mov
mov
mov
cwtl
mov
std
mov
mov
into
push
sbb
jnp
fisubl
rorb
xor
iret
mov
enter
out
cli
call
daa
scas
push
mov
mov
inc
mov
inc
fnstenv
addr16
rolb
or
decl
push
push
or
adcb
xor
inc
xchg
push
ljmp
lret
lcall
mov
in
sub
pop
in
lea
mov
js
jo
mov
xor
xchg
mov
xor
or
or
pmaxsw
ljmp
cli
inc
xor
dec
mov
sbb
xchg
and
hlt
cmp
mov
pusha
ss
es
movsb
sahf
dec
enter
popa
jb
cld
ljmp
xchg
stos
pop
cmc
repnz
es
mov
data16
test
pushl
sub
inc
int3
push
dec
imul
stos
ss
push
hlt
repz
push
ljmp
daa
push
pop
xchg
std
cmp
sbb
jne
pop
jge
roll
push
mov
fcomip
or
xchg
pushf
adc
repz
cmc
sbbb
out
clc
pushl
call
into
out
out
test
ret
jb
xchg
add
insb
adc
std
sbb
scas
fsubr
adc
imul
jno
xchg
add
pop
out
das
add
je
ljmp
rcrb
add
or
jns
jecxz
repz
scas
sbb
std
test
orl
add
enter
test
jecxz
jg
test
das
push
leave
dec
jmp
decl
pop
jmp
loop
arpl
add
je
repz
push
fdivrl
and
icebp
cltd
push
or
inc
push
push
xchg
movsb
mov
fwait
mov
mov
mov
pop
jecxz
jnp
out
add
addl
incl
and
out
cli
iret
dec
mov
xchg
in
and
lods
dec
mov
mov
dec
mov
or
pop
outsb
mov
add
out
dec
mull
ficoms
mov
xchg
sbb
rcll
movsb
sub
xchg
cmp
cwtl
clc
lcall
cld
inc
xchg
jl
inc
push
pop
out
or
das
clc
jmp
cmp
test
xchg
push
cli
lock
push
sbb
cmp
or
mov
mov
sbb
call
outsw
sti
call
inc
xor
in
adc
stc
sub
jmp
cmc
and
clc
out
mov
mov
popf
or
cmpsb
hlt
ret
mov
mov
sub
cmp
decl
scas
cmc
cld
je
sti
bts
add
cwtl
or
out
adc
mov
and
pusha
ds
jns
lret
mov
xchg
insl
pop
cmc
incl
xchg
negl
in
bound
mov
loope
xor
lds
mov
cmp
repz
fistpll
sti
mov
mov
jl
jmp
adc
jmp
add
insb
scas
lahf
pop
dec
pop
fs
loopne
pop
add
es
in
jp
and
lcall
cmp
in
cmp
mov
clc
cs
and
cmpsl
jbe
cld
add
or
call
frstor
mov
outsl
mov
movsl
insl
into
pop
xor
scas
aam
shll
fistps
inc
test
aaa
sbbb
mov
les
sub
xor
je
pop
fnstenv
incl
mov
push
adc
mov
mov
nop
aas
bound
addl
cli
out
cld
mov
mov
adc
dec
adc
inc
hlt
mov
push
imul
add
mov
mov
cltd
xor
push
sbb
mov
lret
jg
in
leave
notl
lret
sbb
into
lock
decl
lret
scas
sub
push
jmp
shrb
push
aaa
aas
fildll
out
mov
std
call
iret
lock
dec
mov
lods
pushf
or
ficompl
fadds
jg
push
xor
test
mov
lret
ret
xor
mov
out
push
inc
cmp
insl
jecxz
mov
pop
ret
into
cwtl
mov
mov
repnz
jecxz
mov
xor
repnz
xor
in
in
or
inc
mov
xchg
clc
jge
mov
fcoml
shrl
adc
add
sbb
mov
pushf
movsb
fs
loop
add
cld
incl
mov
rclb
pop
ja
icebp
pop
mov
pushf
inc
scas
imul
or
xor
xchg
addl
movsl
xchg
dec
mov
mov
push
test
clc
jbe
pop
pop
loopne
ret
outsb
sub
lahf
sbb
out
mov
push
mov
outsl
inc
test
mov
or
fcomip
adc
push
xor
or
mov
imul
ljmp
into
imul
leave
mov
pop
xchg
xor
sub
mov
pop
cmp
loop
push
add
pop
popa
cs
adc
mov
push
or
mov
call
push
lds
pop
and
mov
mov
leave
sbb
cmp
mov
dec
stc
mov
ret
call
lods
iret
mov
iret
in
decl
cmp
jae
pop
fadds
test
pop
mov
clc
ret
ja
jmp
movsb
nop
fisttpll
push
xor
cmp
jne
iret
add
call
faddl
adc
mov
cwtl
or
les
pop
lret
out
mov
fistps
test
jbe
xchg
xchg
jle
push
ret
and
js
pop
sub
or
pushl
add
cmp
ficoms
dec
xchg
push
testl
jo
dec
mov
dec
cmpb
lods
outsl
movsb
cmc
incl
dec
mov
ds
inc
cmpsl
aas
add
mov
cmp
or
clc
dec
popa
push
scas
stos
mov
out
cmp
inc
outsb
jns
push
sbb
xor
sub
xchg
push
sar
add
jg
decl
pop
dec
sub
decl
daa
bound
inc
pop
int
stos
add
incl
aaa
pop
idivl
sub
dec
push
negl
mov
and
mov
mov
adc
mov
xor
add
mov
scas
mov
mov
xor
mov
mov
ljmp
jno
loop
jno
daa
cld
cmpsl
loopne
lea
xchg
xor
mov
or
lcall
jge
rcr
push
cmc
lcall
cmp
fsubs
mov
add
rclb
decl
test
mov
popa
cld
cmp
addr16
add
ss
cmpsl
sti
scas
clc
pushl
ret
xchg
int3
adc
push
loopne
mov
aam
xor
sti
bound
hlt
jg
sub
and
gs
jmp
out
arpl
call
fwait
mov
sub
jae
cli
inc
mov
mov
push
test
xor
fcoml
dec
or
aaa
sti
pop
push
sbb
je
std
inc
popf
lret
cld
mov
lods
xchg
rcl
mov
push
mov
push
jae
pop
inc
ljmp
inc
mov
js
adc
pop
mov
xor
jmp
loope
cmp
cmpsb
cmpsb
sbb
sbbb
push
test
and
jmp
sbb
std
mov
call
add
and
lret
ljmp
or
scas
mov
pop
mov
sbb
aaa
lret
inc
jge
dec
dec
jle
lcall
jge
lea
mov
bound
mov
and
xchg
adc
mov
xchg
mov
add
xchg
icebp
mov
mov
xchg
mov
push
inc
jmp
lds
sub
hlt
xor
mov
je
jle
push
sbb
into
sub
std
ljmp
pop
xchg
lret
pop
push
aad
xor
pop
pusha
jge
fidivs
and
pop
int
in
fsubr
jmp
cli
pop
outsl
dec
push
push
jmp
push
sahf
psadbw
sub
mov
jne
mov
and
ljmp
mov
mov
loop
bound
int
test
push
sbb
arpl
pop
mov
dec
jno
dec
scas
loop
pop
out
push
inc
jp
xchg
ljmp
dec
mov
fistpll
xchg
scas
orb
mov
hlt
xlat
cmp
stos
imulb
jge
mov
das
cli
jmp
ljmp
mov
clc
xor
imul
jecxz
pop
jbe
dec
test
xlat
cmp
insl
nop
inc
call
fbld
add
jl
icebp
push
rclb
xchg
popa
xor
lcall
cmp
push
ds
cli
shlb
cmp
pusha
lock
mov
pop
push
mov
bound
hlt
pop
jge
jmp
adc
movsl
push
jae
sbb
inc
xor
sbb
stos
repnz
lock
cmp
call
insl
adc
dec
and
adc
lret
pop
insl
fmull
push
jb
fisttpll
cmpsb
mov
dec
out
mov
xlat
ud0
ljmp
rolb
std
mov
imul
pop
mov
sub
into
cmp
call
lcall
fs
rolb
add
aad
movsl
ljmp
and
movlps
fdivr
incl
inc
mov
andb
xchg
inc
mov
mov
xchg
adc
cmp
pushl
movsb
pop
jne
dec
xor
push
ret
gs
xchg
js
out
xor
call
data16
push
jno
and
repnz
xor
adc
dec
jge
insl
xlat
jbe
arpl
inc
and
and
outsb
sbb
in
xchg
sbb
subb
pusha
daa
sbb
mov
rcll
xchg
imul
std
clc
cmp
xchg
ja
in
mov
in
cmp
incl
jb
addr16
lds
push
popf
dec
call
faddl
cmp
and
call
add
dec
fistl
pop
insb
push
xor
mov
aas
mov
idiv
das
clc
jmp
jle
pop
and
cli
fs
xchg
repz
dec
rcrl
jns
mov
sarb
or
jae
dec
lods
ds
xor
test
call
pop
hlt
adc
pop
jmp
in
pop
movsl
jmp
ljmp
mov
test
and
sub
rsqrtps
nop
or
sub
scas
mov
lods
clc
sbb
cmpl
je
add
sub
in
push
aam
lcall
push
stos
dec
popa
cmp
mov
mov
dec
into
subb
mov
call
add
lret
and
cmp
mov
int3
cli
lods
cmp
push
mov
mov
clc
ljmp
pop
dec
mov
popf
mov
stos
push
testl
decl
jno
jnp
fldl
add
jge
jae
mov
xor
daa
xor
repz
sub
fmull
popf
movsl
mov
movsb
pop
cld
pop
dec
xorb
lret
cwtl
mov
ljmp
or
es
in
and
push
iret
push
inc
mov
lcall
lea
test
mov
lcall
aaa
mov
ds
out
cmp
jmp
cmp
dec
imul
push
ret
das
add
and
mov
rorl
lcall
out
xchg
fwait
adc
dec
dec
shll
jnp
jecxz
inc
or
jmp
pop
or
ljmp
jl
insl
mov
mov
xor
xor
pop
dec
les
inc
jnp
pop
mov
sub
lcall
mov
insb
out
loop
aad
mov
in
jns
xchg
daa
push
ljmp
out
or
mov
mov
add
pop
push
icebp
enter
aad
incl
xor
push
imull
sub
jae
dec
adc
jns
in
scas
cmpsb
jg
jmp
mov
out
adc
mov
decl
clc
mov
sbbl
mov
push
stc
test
dec
dec
cmp
test
fisubrl
dec
mov
decl
push
arpl
fstpt
push
mov
fstpt
push
inc
repnz
mov
call
jle
lret
pop
outsl
neg
inc
jg
roll
adc
jo
stc
mov
std
lods
mov
adc
adc
aam
push
ret
dec
mov
xor
sbb
mov
lods
mov
inc
cmp
jns
sbb
cs
jns
sub
jl
push
pop
xchg
add
out
pushf
test
icebp
aas
jae
add
jmp
fwait
lret
or
push
inc
xchg
dec
sti
sbb
xor
add
xchg
out
push
mov
sti
xchg
aas
inc
into
sbb
jecxz
filds
lret
inc
fcoml
pop
lret
jno
pop
dec
fdivrl
out
sbb
sub
shr
ljmp
and
popf
outsb
lock
outsb
push
push
xor
jbe
pop
cmp
fcoms
xchg
clc
xchg
and
xchg
dec
aas
loope
in
xchg
call
xchg
inc
push
push
xchg
test
movsl
adc
out
lods
pop
adc
orl
je
aaa
push
repz
pop
nop
xchg
adc
scas
cwtl
jne
add
outsl
cli
jmp
jp
cmp
and
xorb
arpl
push
jmp
sbb
sub
fisubrl
xor
sbb
jno
adc
xor
mov
faddl
mov
add
push
pop
jmp
pop
pop
or
dec
inc
bound
insl
notl
pop
jo
sbb
stos
loop
loopne
jge
xchg
pop
in
mov
popa
push
xor
push
dec
out
xchg
shll
lret
xchg
mov
add
xchg
push
cld
shr
daa
cltd
cmp
ja
cs
loope
pop
cmp
mov
daa
std
rcrl
clc
jmp
jmp
lahf
fidivs
jmp
mov
mov
dec
push
mov
xchg
jge
mov
scas
stos
mov
jge
lods
xchg
add
push
scas
clc
jmp
shrl
outsb
mov
ss
dec
rcrl
nop
pop
fisubs
mov
dec
imul
jl
xchg
ss
clc
adc
ror
pop
push
ja
push
and
jg
pop
std
push
mov
sarl
repz
jl
sbb
sub
int3
addr16
scas
clc
cmp
or
sbb
cwtl
rcrl
in
ljmp
mov
jp
test
movsl
adc
jle
roll
mov
out
xor
ljmp
mov
lds
ror
xlat
aam
es
jb
lahf
divb
mov
call
pop
jns
pop
xchg
and
out
aam
adc
dec
mov
shlb
mov
xchg
cmp
mov
cmp
movaps
add
mov
jo
fs
ljmp
cmp
push
sti
pop
scas
ret
pushf
arpl
dec
test
mov
pushl
cmp
or
int
inc
ljmp
orb
cmpsb
adc
outsl
pop
lcall
add
pushf
aad
mov
pop
fcmove
int3
out
mov
mov
jo
decl
and
xor
push
push
aas
in
add
ret
repnz
mov
mov
loop
cwtl
pop
cmpsl
cld
pop
stos
nop
push
stos
imul
lods
inc
inc
jb
in
xchg
idivb
and
jmp
push
int
or
cmp
ret
sbb
mov
sub
pushl
push
nop
mov
or
push
scas
stc
jno
or
push
mov
inc
mov
fsin
mov
jle
and
faddl
test
dec
loopne
aas
fcompl
sbb
mov
sti
addr16
ja
add
cmc
push
sbb
push
pop
inc
loope
dec
idivb
inc
outsb
pop
fwait
imul
and
jb
add
ljmp
inc
data16
jne
dec
insb
lods
aas
dec
push
mov
shr
jb
data16
ljmp
icebp
or
outsl
mov
dec
shlb
icebp
jl
or
xchg
test
clc
xor
lods
dec
cmp
push
out
push
enter
mov
lds
cli
out
cli
jl
push
enter
and
jne
cmpl
sbb
insb
jae
jecxz
mov
mov
scas
les
mov
pop
movsl
xchg
in
dec
pop
lds
jne
pop
mov
ss
lahf
dec
fildll
ljmp
rclb
adc
movsb
lds
stos
ja
in
jecxz
mov
cld
pushf
sti
or
inc
push
lcall
fisubs
add
jmp
incl
mov
leave
fnstsw
mov
and
pop
popa
dec
daa
pop
xor
dec
fs
mov
je
mov
je
xchg
adc
repnz
mov
loop
inc
leave
or
lcall
inc
aaa
or
cli
stos
add
dec
dec
cmp
outsb
mov
jno
call
jmp
mov
xor
cmp
cltd
aas
pop
test
dec
std
jo
adc
mov
push
sub
movl
gs
mov
fwait
shrl
sub
add
jg
mov
aas
imul
jno
popa
mov
fists
adc
dec
xchg
cmp
call
repz
cli
aas
and
pop
ret
ret
cld
push
or
push
fwait
mov
add
call
outsb
imul
push
test
cwtl
jno
adc
and
cs
aaa
mov
lcall
andb
cmp
push
and
fbstp
cmpb
adc
inc
inc
lret
sahf
add
cmp
mov
shrb
jg
mov
gs
mov
int
ret
push
incl
cmc
into
lret
int3
or
inc
mov
scas
dec
mov
push
mov
and
dec
fcos
push
cld
push
imul
js
pusha
je
push
fimull
ret
mov
out
out
lods
dec
sar
in
lock
mov
xchg
cld
in
jae
ljmp
push
or
rcrb
std
arpl
xchg
lahf
pop
cmp
mov
iret
repz
pushl
test
insb
pushf
mov
xlat
sub
pushf
insb
sub
sbb
decl
bound
adc
orb
inc
jle
stos
push
mov
jns
das
incl
dec
push
popf
inc
hlt
fistpl
jmp
imul
clc
les
inc
inc
inc
push
iret
push
inc
shlb
cmp
inc
pop
pop
add
pop
fxch
iret
in
wbinvd
test
cmpsb
clc
xor
aaa
cld
ljmp
scas
push
mov
dec
je
in
pop
in
les
sub
adc
ficompl
nop
ficompl
jo
cmp
xchg
dec
mov
std
je
std
pop
std
push
orl
inc
sarb
sbb
adc
aas
lcall
inc
out
loopne
aaa
aad
or
movsb
mov
cmp
test
pushl
push
ror
push
pop
add
jbe
jle
inc
jae
lret
push
push
bound
sarb
jp
dec
mov
int
movsb
out
jl
or
xchg
int
inc
add
mov
stos
sahf
jg
and
sbb
call
and
inc
jnp
dec
cmpsl
ret
fwait
inc
test
insb
pop
pop
outsb
lods
repz
cmc
ja
pop
mov
mov
sbb
fistpll
inc
icebp
rclb
jo
pop
xchg
loopne
lock
cmp
cmp
push
jecxz
jg
lcall
mov
dec
aad
push
inc
adc
imul
insl
into
sarl
pushl
jno
lret
cld
pop
jmp
adc
shr
mov
rcll
sti
data16
decl
fildl
cld
sub
nop
test
bound
mov
dec
rorb
dec
incl
push
adc
dec
cmp
mov
rorl
mov
and
gs
mov
or
mov
fs
ds
and
lock
sahf
lea
cli
jg
jns
loopne
jmp
loopne
inc
add
mov
push
and
in
xchg
xchg
in
jl
mov
cmp
pushf
pop
cmpsb
or
call
adc
sahf
inc
mov
jb
adc
ret
shll
mov
stc
pop
aas
cltd
sbb
sbb
push
flds
loope
data16
fdiv
add
outsl
clc
dec
sbb
mov
jge
and
dec
arpl
adc
mov
incl
movsl
dec
gs
mov
frstpm(287
push
arpl
out
scas
scas
cmp
out
mov
mov
lret
pop
in
and
adc
aam
clc
pop
stos
rcrb
outsl
sbb
dec
incl
fcmove
imul
lock
mov
adc
xor
jmp
repnz
call
cld
decl
sbb
sub
hlt
mov
cs
add
lods
inc
push
lret
xor
add
jb
xchg
xchg
cs
call
add
out
xchg
jbe
sarl
jp
mov
ljmp
sbb
decl
jle
scas
mov
cwtl
add
pop
int3
push
pop
jo
push
test
rclb
lahf
addr16
ljmp
aam
scas
mov
aaa
ja
repnz
icebp
xchg
mull
cmp
jge
mov
sub
icebp
in
and
call
mov
adc
xor
pusha
fistl
addr16
in
imul
pop
jb
idiv
cld
ss
lret
mov
add
fcomip
add
sub
jmp
mov
aam
adc
push
jb
push
mov
repnz
mov
test
sar
jmp
shl
mov
mov
movsb
push
sbb
fstp
pop
and
jg
push
add
imul
hlt
or
pop
popf
test
sbb
add
lea
mov
mov
sarl
test
mov
int
test
jb
std
mov
xor
inc
sub
in
scas
rolb
xchg
push
xchg
mov
add
ljmp
les
dec
or
dec
lea
bound
ret
lret
jg
jmp
mov
xchg
test
mov
pop
fdivr
js
call
repz
fdivrs
std
psubd
jl
dec
xor
in
xor
jns
jl
sbbl
test
and
sub
pop
add
xor
aad
ljmp
jecxz
mov
dec
sbb
adc
cmp
sub
sbb
lock
xor
scas
and
mov
call
sti
aaa
xchg
out
int3
mov
int3
ret
and
in
cltd
fcmovnb
pushl
lods
and
mov
idivb
adc
inc
mov
adc
inc
cmp
ss
cmp
fbstp
fisttpl
push
push
scas
adc
shlb
adc
mov
or
decb
lahf
int3
jo
sub
daa
jmp
cmp
pop
xor
icebp
add
incl
insb
inc
dec
lret
xor
lret
adc
shlb
call
movsb
loope
push
repnz
mov
xchg
and
test
dec
cwtl
sbb
add
mov
mov
mov
insb
call
sub
icebp
sbb
leave
and
add
push
cs
jecxz
sub
cmp
pushl
xchg
mov
dec
inc
adc
movsw
sbb
outsl
scas
push
cmp
inc
fstl
or
sbb
inc
or
dec
out
push
mov
jp
adc
shlb
sub
push
push
ds
mov
repnz
mov
sti
sbb
lcall
scas
shrl
je
outsl
mov
xor
xor
ss
pushl
jl
xor
pop
xor
dec
std
mov
jo
dec
cmpsb
pop
xchg
imul
jg
iret
mov
mov
jecxz
clc
or
jo
insb
loopne
mov
push
lea
fcomip
inc
lret
mov
xor
pop
ficompl
sahf
cmc
fldcw
call
popf
dec
mov
jnp
fcomps
mov
jno
inc
add
push
ss
fbstp
adc
sub
sahf
aam
adc
je
lahf
jb
test
push
inc
fists
lods
sub
faddl
sub
popf
das
dec
mov
fnstenv
xchg
push
xchg
in
aam
std
add
jg
xchg
sub
loop
push
ret
sub
icebp
xlat
cmp
pop
lea
lcall
call
outsb
inc
sub
sub
int
lret
das
in
jle
int3
ljmp
fmul
adc
lods
xor
add
cmp
add
xor
jmp
sbb
pop
jl
sbb
insl
call
shll
in
mov
decl
movsb
imul
lock
pushf
xchg
mov
sub
pop
lret
lds
imull
lcall
cmpsb
cmc
enter
sbbb
mov
mov
jns
popf
insb
test
lock
lcall
mov
in
popf
cmp
in
nop
iret
out
mov
dec
sub
ja
sub
dec
push
push
adc
mov
and
mov
ljmp
fwait
mov
adc
mov
push
orl
sub
call
mov
test
es
xchg
adc
push
mov
hlt
or
ja
je
jp
pop
pop
xlat
call
sub
pushf
jmp
jecxz
push
rcrb
sbb
and
ds
stos
adc
cmpsl
add
push
adc
into
mov
adc
cmp
fdivrs
arpl
pusha
adc
incl
jbe
mov
scas
jb
repnz
mov
outsb
cmp
cmp
shll
outsb
jecxz
inc
sarb
inc
push
jb
sarb
cmp
inc
stos
xor
scas
and
push
nop
clc
sbb
mov
icebp
mov
lds
rcll
or
scas
pop
decl
pop
mov
ds
lock
loope
xor
jmp
dec
push
testb
test
and
clc
dec
jns
xchg
les
jbe
daa
test
test
pop
sbb
mov
xlat
or
cmp
add
clc
out
xor
jg
dec
xchg
push
faddl
jp
push
in
aad
popa
mov
je
ljmp
push
xchg
sub
push
mov
ss
dec
enter
or
inc
sahf
clc
fwait
idiv
lcall
mov
mov
outsb
es
cld
enter
scas
sbb
mov
leave
cmp
incl
test
ror
adc
fcomi
inc
xchg
sbb
out
enterw
into
cmp
enter
call
mov
popa
inc
and
jmp
aam
lock
ret
pop
in
pop
lock
in
pop
cltd
xor
pop
inc
repz
or
jmp
in
ljmp
dec
inc
out
clc
lcall
dec
sbb
and
cmp
nop
pop
nop
pop
sbb
sar
or
jae
sub
cs
cmp
clc
mov
pusha
adc
fists
mov
rol
cmp
enter
lret
mov
mov
sub
sbb
stos
imul
sahf
jnp
jl
xchg
and
lcall
fs
insb
push
insb
inc
jmp
inc
icebp
mov
jbe
mov
dec
adc
incl
aam
rcrb
sahf
mov
or
sbb
xor
addr16
cmp
enter
imul
ret
ljmp
hlt
xchg
xchg
cli
out
or
xchg
pusha
sarl
pop
add
fs
mov
sub
or
push
aaa
call
inc
adc
cs
inc
enter
mov
jge
jnp
dec
cwtl
add
repnz
int3
xlat
lcall
or
mov
and
inc
iret
cwtl
repz
dec
f2xm1
pushf
shll
adc
loopne
in
call
loopne
sub
out
aas
jecxz
cmpsl
pop
dec
mov
dec
stos
ljmp
jg
iret
sti
sub
cld
out
jb
gs
xchg
xchg
mov
xchg
or
lcall
mov
push
dec
jno
push
push
or
xor
push
dec
loope
in
dec
push
mov
xchg
push
push
aaa
mov
sub
mov
or
jg
push
aaa
fsubrl
adc
call
icebp
out
dec
jnp
pop
dec
cli
pushl
loop
jbe
xchg
pushw
arpl
push
decb
cli
mov
jmp
or
ret
fcomip
or
mov
mov
mov
adc
jo
jbe
das
repz
cli
jmp
cld
movsl
aam
sub
mov
or
push
sbb
ljmp
add
pop
jbe
js
pop
fwait
ds
jno
cmpsl
xor
push
gs
sub
int3
mov
push
push
jl
jecxz
mov
sub
loopne
in
out
sbb
test
std
incl
flds
ds
xchg
bnd
xchg
pushf
in
call
decl
or
mov
insl
mov
ljmp
xchg
lcall
xchg
cmp
pop
and
mov
mov
stos
cmp
adc
mov
push
dec
pop
cmp
pusha
adc
pushl
cld
sbb
jge
jle
inc
stc
jmp
sbb
je
and
lcall
jae
mov
push
pop
fucomp
cmp
cltd
lock
mov
fldenv
pop
ret
or
fs
push
cld
xor
jno
jl
icebp
mov
cmpsb
jns
jle
gs
fidivrl
fldenv
call
lcall
hlt
sarb
stc
sub
inc
cmpsb
mov
push
lea
or
lret
js
mov
jg
jmp
and
in
out
rcl
scas
mov
lods
sub
fwait
movsb
sarb
cs
and
mov
les
imul
hlt
lret
jg
pushl
push
gs
movb
mov
fs
add
hlt
push
sub
mov
lods
jge
call
call
lods
popa
and
dec
add
fidivl
and
ds
repz
dec
clc
aam
in
sti
push
pop
sbb
repz
lods
negb
in
std
jns
in
out
test
or
fstpt
push
mov
daa
insl
adc
and
pmullw
lods
lret
pop
inc
call
jno
lds
insl
dec
iret
pop
jnp
xchg
jecxz
xchg
push
sub
and
stc
rorl
std
call
es
pop
xor
dec
xchg
rorl
mov
mov
push
sbb
test
les
add
sahf
test
pushl
mov
dec
bnd
inc
shlb
inc
lret
hlt
pushf
loopne
pop
adc
jl
arpl
dec
push
ljmp
lea
pop
xchg
pop
jne
fwait
dec
mov
mov
mov
out
push
push
jg
fiadds
dec
out
lcall
sbb
fisubrs
movsl
test
int3
sub
push
add
stos
lds
cmp
push
push
out
xlat
incl
jno
adc
mov
jno
jns
loop
mov
dec
jecxz
ljmp
inc
sti
ds
addr16
loopne
or
add
mov
mov
jmp
stos
push
sbb
or
mov
nop
cmpsb
push
pop
shlb
pop
sbb
das
sar
sarb
and
test
inc
add
and
and
enter
ljmp
mov
bound
fisubrl
mov
hlt
fs
cmpsb
and
lea
std
sbb
insb
ljmp
aaa
or
pop
mov
out
fscale
mov
stc
rcrl
xor
jg
gs
lods
rcrl
std
call
inc
or
fiadds
mov
aad
lret
das
inc
inc
adc
jl
ret
push
call
or
imul
data16
testl
sub
icebp
divb
ljmp
shll
adc
mov
loope
cmp
mov
sbb
sub
fstl
mov
sbb
dec
dec
cmp
enter
scas
lret
mov
dec
cmpsb
and
dec
nop
cmp
imul
push
and
dec
loope
sbb
ljmp
addl
mov
stc
mov
mov
jae
mov
cmp
jg
xor
xor
int
add
out
popa
rcrl
cmp
dec
addb
jmp
das
adc
fsubp
cmovp
cmpl
add
pop
push
in
dec
pop
dec
out
cli
jmp
cmp
xchg
jne
sbb
test
aas
sub
daa
fdivl
adc
sbb
clc
decl
cmpsb
in
mov
ja
mov
mov
int3
xchg
pop
addr16
pushl
mov
addl
dec
incb
cmp
fisubrl
rclb
mov
testl
lahf
scas
cmpsl
call
pop
int
into
bound
pop
lcall
sub
fnsave
adc
lahf
gs
mov
pushl
mov
or
sbb
pushf
fdecstp
std
or
jge
jecxz
mov
mov
ljmp
push
jle
sbb
repnz
lret
adc
cmp
sub
adc
decl
fimuls
push
dec
adc
psubw
enter
inc
cmp
test
jg
scas
sub
sahf
aaa
cld
pushl
test
mov
lods
jno
inc
ds
les
jmp
ret
and
jnp
scas
pop
xchg
or
mov
in
fidivl
pusha
rorl
or
sub
or
loope
mov
jne
cld
xlat
loop
inc
stos
push
jecxz
pop
fst
decl
and
mov
mov
lret
std
pop
test
push
jg
fmul
push
ds
add
dec
outsl
or
nop
cmp
lret
jge
and
popf
jmp
mov
mov
out
jle
test
dec
cmp
jecxz
test
out
and
lock
jae
xor
mov
xchg
mov
pop
lds
cmc
mov
incl
das
stc
xor
fstps
mov
xor
jle
inc
push
pop
lcall
cmc
xrelease
enter
jg
scas
test
ljmp
mov
imul
mov
ljmp
jns
and
lcall
call
sbb
sub
lock
popa
jle
mov
es
pop
cmpsl
fldl
ret
lahf
push
cmpsl
push
or
xchg
dec
cld
call
out
xchg
mov
pushf
sbb
add
mov
cld
jg
mov
mov
in
das
imul
pop
lea
int
dec
push
dec
mov
fcoml
nop
popa
ljmp
fdivr
pop
add
stos
fisubl
or
xchg
cmp
xchg
pextrw
mov
jmp
lcall
jne
inc
push
or
dec
mov
mov
roll
fdivl
in
int3
push
cmpl
cli
pop
rolb
lds
call
sbb
insb
popa
mov
mov
fstl
lcall
scas
xchg
inc
mov
pop
mov
lcall
test
sahf
push
ret
jne
jno
dec
sub
mov
jl
xor
movsb
in
and
pop
int3
push
cld
jg
xor
mov
sub
xchg
ret
hlt
inc
addr16
je
lret
out
or
aas
dec
mov
jno
and
mov
jge
sbb
in
sbb
jo
shr
jg
dec
xrelease
sbb
imulb
shll
mov
push
orb
fs
lcall
movsb
cli
stos
and
leave
or
inc
sub
sti
inc
jns
aas
sub
jns
xorb
fcmovbe
daa
mov
lods
data16
inc
inc
xor
lea
jmp
mov
or
push
and
xor
dec
sbb
or
and
test
jg
stos
insb
adc
cwtd
sub
orl
xchg
jae
mov
mov
xor
jno
mov
sub
mov
cmp
jo
lahf
cs
mov
mov
or
loop
ljmp
and
pop
sub
lcall
or
push
push
or
in
xchg
mov
push
mov
inc
lods
iret
mov
sahf
call
lcall
mov
jl
jl
jo
out
push
shr
jecxz
or
sub
mov
mov
imul
pop
mov
cmpsb
xor
das
movsb
scas
cmp
mov
jmp
fcoml
shrb
push
std
ficompl
lds
outsb
lahf
pusha
pop
or
mov
xchg
in
mov
clc
jmp
enter
jae
fidivrl
stc
stos
sbb
cmpsl
push
push
jg
decl
push
xor
loopne
sbb
cmpsl
sub
iret
cmp
add
lcall
fisttps
adc
rol
test
sti
inc
sbb
adc
xor
xchg
lods
jmp
push
xchg
xchg
mov
scas
pop
mov
add
xor
fisubrl
lods
loopne
int
sbb
jl
add
stos
pop
dec
data16
lods
sbb
hlt
inc
scas
jp
jg
aam
mov
div
test
adc
cli
repz
jmp
inc
aad
out
ja
rorb
hlt
mov
js
push
test
jns
cld
jl
dec
xchg
jg
incl
gs
stc
and
dec
loope
lcall
test
push
jb
mov
pop
pop
loop
bound
decl
lods
outsb
dec
xchg
adc
sub
mov
das
pop
ds
jmp
jne
scas
cmpsl
sbb
or
push
dec
jns
pushf
jbe
dec
in
mov
push
data16
mov
pushl
pop
or
dec
outsl
test
repz
push
test
in
lods
sub
xor
call
mov
ljmp
xchg
xchg
mov
sub
pop
push
std
xchg
adc
jp
jg
and
aad
nop
leave
jmp
fistpl
pop
pop
dec
sbb
iret
in
pushf
shl
push
popa
or
and
push
sti
mov
dec
jns
jecxz
and
sahf
addr16
popa
push
into
jbe
cltd
jp
lods
jno
xor
movsb
jg
in
popf
push
add
mov
mov
mov
stos
in
add
adc
pushl
cmc
es
inc
je
test
addl
lcall
fiadds
es
cmp
push
inc
adc
call
sahf
push
push
dec
add
xchg
dec
jb
jmp
mov
jae
out
cmp
cmpsl
cwtl
popf
outsl
leave
sti
mov
cmp
test
hlt
lcall
cli
repnz
les
pop
stc
pop
and
pushf
out
adc
push
loop
jmp
or
xchg
shll
pusha
pop
gs
mov
mov
sub
adc
cmp
push
mov
cmp
lcall
inc
in
movsb
jbe
add
mov
data16
loop
imul
test
mov
ret
insb
and
jmp
xor
into
ss
ljmp
sub
cmc
gs
and
dec
pop
fdivp
es
push
push
jmp
shr
aaa
push
sbb
loopne
decl
add
insb
push
cmc
push
mov
dec
ljmp
push
mov
stc
sahf
dec
ja
dec
dec
dec
jno
fildll
sbb
scas
ret
in
decl
push
loopne
sub
das
sub
pop
mov
incl
pop
int3
ljmp
insb
dec
dec
cwtl
int
adc
movb
fistps
or
pushl
andl
rcl
fs
mov
pop
cmp
mov
jg
incl
mov
cmp
ds
test
aam
fcos
pushl
hlt
xchg
idivl
ljmp
ficomps
out
mov
popa
push
mov
push
mov
int3
cld
xchg
outsb
decl
adc
mov
scas
xchg
sbb
je
sub
mov
imul
dec
dec
test
and
rcl
push
mov
xor
out
mov
into
lret
mov
jmp
adc
adc
cmp
or
sbb
loopne
sbb
sub
jnp
and
stc
fwait
cmp
cld
nop
push
fdivs
or
sahf
dec
pop
jmp
insl
fcompl
mov
sub
dec
push
cld
movsl
mov
sbb
bound
mov
or
pusha
jmp
mov
sub
jns
mov
cli
mov
add
jmp
icebp
xorl
fcomip
incl
mov
inc
xchg
data16
dec
xchg
jge
cmpsb
push
push
pop
inc
and
lcall
jns
push
into
adc
adc
shlb
bound
lahf
in
iret
and
push
xor
jg
adc
sbb
repz
cmp
ficoml
inc
fisttps
mov
addr16
push
mov
call
pusha
add
jl
jmp
mov
pop
push
pop
movsb
xchg
in
xchg
pop
xchg
add
outsl
lret
jmp
cmpsb
pushf
add
orl
stc
mov
fwait
mov
in
cmc
pushl
jp
jns
inc
mov
push
inc
daa
fs
test
scas
dec
idivl
inc
lea
addr16
dec
and
sahf
xor
jg
in
mov
mov
ljmp
pop
aaa
movsb
jno
mov
fidivs
test
dec
add
in
adc
clc
mov
int
les
sbb
mov
adc
jl
outsl
clc
decl
scas
push
inc
sahf
std
cmp
lahf
inc
push
adc
dec
sub
shll
clc
ja
adc
inc
adcl
leave
mov
adc
push
add
mov
jnp
push
std
ljmp
inc
repz
test
outsb
or
int
jbe
pop
add
call
cmp
lock
clc
push
out
xor
lcall
test
push
test
iret
decl
nop
clc
xlat
fstp
cld
cs
mov
xchg
into
cmp
incl
xchg
out
jge
mov
iret
jle
in
xor
jmp
mov
jbe
popa
jae
and
aad
std
inc
xor
xor
test
stos
lret
ss
decl
sbb
addr16
leave
data16
iret
xor
ds
lahf
cld
pop
loopne
sbb
fcomip
lcall
push
incl
pop
sbbb
push
imul
jge
jle
cli
mov
jne
jg
arpl
data16
xchg
sub
int3
add
incl
push
cmp
inc
dec
loope
stos
std
inc
push
add
and
sub
push
jae
inc
dec
dec
jbe
mov
cmp
int3
stc
pop
xchg
loope
push
imul
sahf
rorb
and
xchg
jmp
add
mov
fadds
rorl
jne
fimull
lds
fcomip
push
lock
sub
mov
mov
mov
pop
jmp
pop
mov
pop
jns
adc
call
paddd
and
stc
jne
jno
mov
mov
inc
inc
push
data16
jg
incl
add
xchg
divb
lea
push
dec
pop
sbb
int
xor
jmp
mov
push
inc
add
pop
cltd
call
xlat
aad
jg
js
insb
inc
loope
imul
pop
sarl
jb
mov
scas
cwtl
shrb
out
iret
outsl
jl
faddl
fldln2
mov
cmp
pop
addl
push
or
xorb
sar
pushl
in
lcall
jmp
adc
adc
int3
js
or
jg
push
mov
sub
das
cli
repnz
aas
je
pusha
arpl
jbe
jmp
push
sti
testb
arpl
and
cld
fidivl
mov
pop
mov
cmp
pop
bound
out
mov
shr
push
cmp
call
loopne
mov
xchg
push
mov
movsl
call
dec
clc
sub
es
stos
subb
sar
hlt
push
stos
adc
jecxz
test
loop
inc
add
adc
pop
sbb
shl
call
mov
cld
pop
std
xor
sbb
cmp
sarl
sbb
call
cmp
lcall
imul
or
dec
mov
mov
or
pushl
sub
dec
mov
je
mov
mov
mov
push
subb
leave
sbb
das
sub
sub
jae
push
shrb
fisubs
jecxz
xlat
sbb
bound
lcall
cld
add
dec
das
pushf
fwait
pop
mov
shll
lods
add
ljmp
scas
or
inc
dec
pusha
sbb
dec
shll
mov
pusha
lcall
aam
dec
test
or
repz
cli
pushl
xchg
aam
mov
jge
out
pop
xorb
pusha
add
lods
push
sub
push
xchg
jno
jl
nop
aaa
xchg
popa
xor
sbb
fistl
in
jnp
cmpsb
adc
xorl
sub
imul
or
mov
in
stc
into
outsb
pop
push
sub
jmp
leave
xor
jbe
fildll
outsl
push
stos
fs
xchg
fbstp
sub
outsb
mov
mov
push
iret
jecxz
or
loope
xchg
pop
decl
divb
jb
sti
add
jb
or
rorb
jns
loopne
incl
jae
repz
cmp
jno
lcall
xchg
cmpsl
scas
popa
popf
sub
into
ljmp
mov
or
dec
fadds
movsb
push
jno
imul
adcb
lcall
aam
xchg
sub
std
hlt
pop
sub
push
rol
lcall
shl
pushl
dec
cmp
aad
push
cmc
xor
shl
inc
pop
jno
insl
call
jp
mov
mov
shrl
out
dec
cltd
popf
inc
push
jnp
and
xor
clc
inc
into
jae
adc
in
test
sub
aad
incl
popl
ss
lcall
lret
icebp
dec
cli
sub
rol
sub
inc
loop
lcall
call
testl
das
pop
popl
adc
cmp
fucomip
mov
add
jmp
dec
dec
cli
pop
sub
sahf
jb
jl
mov
stos
or
lret
insl
jmp
jmp
or
lea
push
imul
mov
hlt
xchg
and
pushf
ljmp
mov
ljmp
mov
xchg
jmp
sub
or
sbb
rol
add
pushl
jle
jge
das
ss
cwtl
out
pop
or
or
add
mov
add
das
sbb
xor
mov
lods
ja
aam
movsb
jnp
sbb
not
cltd
inc
pop
inc
xor
pop
jmp
gs
cld
ss
push
cltd
jp
add
push
into
inc
idivb
mov
push
mov
pop
xor
add
dec
mov
jecxz
lahf
adc
lcall
jmp
inc
ret
es
dec
lret
fidivrs
jmp
les
inc
jb
add
popf
jp
adc
dec
sub
fisubs
inc
cmp
call
decl
stc
add
sti
cmp
bound
cwtl
dec
xlat
mov
or
adc
sbbb
jnp
sti
fidivrl
jg
sub
xchg
std
icebp
cwtl
mov
jg
fcomip
mov
cwtl
mov
bound
push
popa
movsl
jb
xlat
jle
push
mov
xlat
call
or
mov
ds
push
mov
mov
jg
jg
mov
in
or
push
mov
jne
xchg
scas
das
andl
mov
decl
addl
xlat
pop
imul
and
and
rol
xor
push
inc
call
fistl
in
mov
in
js
mov
scas
push
call
fldl
inc
xchg
dec
add
cli
in
add
jae
lcall
jns
mov
pop
pop
lret
movsb
in
pop
cmp
insb
mov
sti
ss
out
ret
fadd
push
stos
lcall
dec
push
mov
jo
or
mulb
push
dec
mov
xor
in
filds
cmc
fstpt
sub
push
fcmove
xor
insl
js
gs
mov
xor
or
sbb
cmp
pop
lcall
jnp
xchg
xchg
faddl
add
flds
fld
dec
and
xor
cmp
call
lret
push
xchg
ret
sbb
addl
inc
xchg
or
mov
clc
and
sub
push
shrb
jo
or
orb
fimuls
popa
inc
cmp
incl
scas
dec
mov
mov
arpl
lcall
insb
fisttpll
add
mov
sub
ljmp
jg
loop
dec
les
call
and
pop
or
sub
xor
xor
sti
nop
addr16
scas
sbb
jmp
cwtl
inc
mov
xchg
fsub
jmp
add
aaa
add
pop
loopne
xor
mov
push
outsl
mov
add
adc
inc
outsl
jecxz
andb
gs
out
jp
mov
cmp
jno
imul
push
mov
shr
subl
lret
pop
addr16
xchg
pushf
cmp
xchg
jns
in
sub
shll
add
inc
ds
dec
lcall
push
push
decl
push
or
pop
lods
and
adc
jns
mov
decl
cmp
dec
roll
insl
nop
test
sub
in
inc
les
fs
mov
xor
in
mov
jmp
jns
roll
mov
add
xor
pop
pop
in
ljmp
add
outsb
pop
and
aas
inc
aaa
mov
xchg
stos
jecxz
incl
rorl
out
mov
fxch
pop
inc
sub
fst
loopne
mov
and
sub
or
pop
jo
in
push
fisubl
xor
push
lcall
pushl
pop
pop
push
jl
push
pop
xor
shrb
fwait
inc
mov
and
pop
lock
call
scas
mov
ficoml
xchg
ja
sbb
cmp
mov
clc
inc
push
lret
mov
jns
cmp
or
scas
mov
and
push
test
cld
lcall
lcall
lods
xchg
xchg
aam
or
add
jg
in
mov
pop
dec
ja
mov
xchg
pop
add
or
cld
pop
xlat
push
lea
sub
inc
data16
jge
add
sub
sahf
sbbb
add
ljmp
mov
ret
out
add
imul
xchg
inc
cmp
lret
sub
pop
jns
sar
ds
pop
lahf
int
dec
lds
mov
lcall
in
jb
push
lret
call
cmp
loopne
mov
sbb
mov
dec
adc
decl
add
call
adc
nop
ficompl
dec
das
lods
ss
repnz
jp
or
jnp
stos
fisubl
xor
xchg
mov
xchg
push
mov
outsb
jmp
mov
stc
cmp
scas
sub
and
and
sub
mov
movsb
push
xor
out
loopne
fs
jmp
adc
cmp
nop
push
push
std
fildll
fcmovu
xor
push
es
mulb
loopne
xchg
faddl
mov
or
int
sarb
adc
adc
arpl
push
and
shl
mov
jg
out
cmovae
mull
jg
dec
lea
ss
cmc
repz
add
cmpsb
xor
je
decl
mov
notl
out
incb
pop
or
lds
out
inc
jmp
sbb
decl
xchg
adc
lods
xchg
jl
sbb
xor
and
xchg
sbb
cli
jg
cwtl
dec
push
mov
addb
cld
cld
shlb
dec
pop
jae
inc
mov
mov
pushl
scas
repnz
je
cmpsl
test
mov
mov
mov
aaa
cld
jmp
in
mov
ds
mov
push
xor
xor
ja
mov
mov
push
mov
mov
adc
aad
cmp
adc
jl
cmp
add
push
mov
mov
jno
jge
jge
xlat
in
outsl
frstor
nop
cmp
jmp
jbe
xor
cltd
cwtl
pop
xor
sbb
xchg
das
fisubrl
jno
cmp
loope
or
insb
sbb
into
sub
xchg
movsl
iret
fwait
movsl
jg
and
or
mov
or
ret
jns
cmc
push
loope
pop
adc
mov
add
pmaxub
shl
push
orl
pop
add
jg
movsb
push
aaa
add
mov
sbb
and
dec
cmp
into
lcall
decl
icebp
mov
or
loopne
mov
xlat
sbb
push
push
push
test
adc
bound
adc
int3
into
loop
mov
mov
xchg
xor
jg
popa
std
cmc
test
loopne
int
test
data16
add
cli
sub
mov
sahf
add
incl
sub
pushf
adc
shrb
into
xorl
jg
ljmp
bound
push
int3
jbe
clc
fisubrl
mov
or
pushl
xor
fdivrs
jge
cmp
mov
in
je
in
inc
lcall
cmp
ss
js
imul
leave
cs
inc
jne
lret
incl
sbb
enter
jbe
ds
mov
mov
in
pushl
cld
decb
xchg
xor
add
push
cmpsb
hlt
pop
cmc
aaa
lods
mov
stos
cli
incl
mov
inc
mov
xchg
push
push
mov
add
sbb
jnp
dec
push
sar
dec
out
les
xcrypt-ctr
cmpsl
pop
inc
xor
shr
pop
scas
jg
frstor
inc
mov
pop
iret
mov
mov
in
jns
loope
sub
ljmp
ljmp
out
jo
push
dec
mov
pusha
lahf
mov
orb
jno
push
pop
ret
inc
test
jmp
mov
pop
xchg
xor
adc
stos
push
bound
push
and
imul
inc
test
sarb
movsb
inc
cwtl
or
sub
jmp
ja
lds
jae
and
add
adc
pop
xlat
hlt
loopne
incl
xor
jbe
leave
push
jmp
xchg
xor
jo
adc
xchg
fs
cmpsb
xchg
decl
rcr
sbb
xlat
test
popa
out
inc
mov
outsb
fwait
test
andb
decl
xor
xor
cmc
push
sbb
leave
pop
mov
movsb
out
mov
out
cmc
gs
mov
outsl
mov
jns
into
lock
pop
clc
push
dec
cmp
aas
inc
stc
pop
jl
push
add
sar
ljmp
xor
out
cwtl
sub
mov
int
add
std
in
xchg
js
cs
or
shlb
sarb
scas
test
aam
mov
cld
in
jmp
lahf
movsl
in
or
sbb
or
shld
cmp
sar
adc
outsb
ljmp
fisubrs
mov
fcomi
ss
lahf
stos
jecxz
push
nop
jns
adc
rcl
movsb
fistl
dec
and
add
aaa
pushl
sub
sbb
sub
mov
enter
pop
mov
adc
sbb
push
or
mov
pushl
les
xor
test
incl
and
sbb
mov
scas
xor
enterw
sbb
aad
add
call
shll
inc
and
jb
xor
scas
pop
data16
cmp
lret
test
inc
dec
xor
add
ljmp
or
sbb
jmp
mov
ret
outsl
filds
mov
rorb
outsl
jnp
pop
je
cmp
ds
decl
into
xchg
xchg
icebp
pop
mov
pop
mov
xchg
ffreep
cmpsb
outsb
mov
das
lcall
lcall
imul
add
mov
sar
lods
ja
iret
inc
test
lcall
rcrl
shlb
repz
or
int
sub
fiadds
hlt
fcomip
lcall
movl
pop
xor
cli
xchg
popa
addr16
jg
ja
dec
xor
jecxz
adc
jl
cmp
in
jg
pushl
stc
pop
dec
sub
xchg
int
out
jge
sahf
popa
push
aaa
pushf
fisttps
lcall
mov
imul
xchg
mov
jae
ljmp
xchg
loopne
jecxz
imul
dec
pop
test
fisttpl
sahf
sti
pop
and
cmp
dec
dec
push
repnz
ss
frstor
push
mov
movsb
jns
mov
std
xchg
bound
lcall
add
clc
test
or
jns
lds
stos
jns
gs
lcall
fbstp
jge
xchg
push
mov
inc
sahf
adc
loop
hlt
inc
cmp
jae
sbb
insb
mov
pop
mov
xor
and
fdiv
arpl
jecxz
fcomip
loope
stc
fistl
dec
test
inc
clc
clc
xchg
adc
xchg
push
cs
pop
dec
pushf
inc
rcll
add
xchg
jns
xchg
aas
dec
inc
xor
mov
mov
mov
jmp
incl
test
dec
cmpsl
mov
ja
xor
into
or
insl
mov
hlt
cmp
jl
mov
sub
ljmp
mov
stos
aaa
mov
jmp
pushf
imul
lret
or
insl
outsb
jle
dec
or
addl
cmp
call
arpl
mov
push
and
push
xor
jns
pop
jle
adc
ljmp
call
mov
inc
lods
pushf
hlt
int3
mov
jne
jo
iret
test
flds
call
popf
lcall
mov
lcall
aas
shrb
pop
cmpsb
adc
sar
mov
push
js
stc
cwtl
and
test
inc
call
lea
ret
fs
cli
add
inc
dec
lods
sub
lret
pop
sub
incl
scas
mov
cs
xor
mov
inc
nop
mull
mov
fbld
fwait
pop
inc
loope
pop
and
jg
sbb
je
mov
xchg
mov
lds
aas
jmp
cmc
decl
mov
int3
rorl
cmp
int3
xlat
enter
mov
lcall
scas
cli
cwtl
or
push
in
push
or
cmp
and
mov
pusha
xor
call
loopne
ja
insb
aad
mov
add
sub
inc
dec
lock
dec
repnz
xchg
mov
fbld
mov
sbb
sub
ss
lds
aad
jae
call
sub
jmp
scas
test
call
add
lcall
adc
mov
lock
adc
pop
pop
mov
sub
ds
icebp
out
push
sub
ljmp
sub
fmul
sub
cmp
add
push
mov
cmc
sti
pusha
lcall
sbb
jnp
loopne
and
ss
mov
leave
push
sub
repnz
fidivrl
aas
pushf
and
jp
mov
jb
nop
add
std
dec
push
adc
pop
lods
add
in
ljmp
enter
rolb
lea
ret
aam
insl
cmp
vaddpd
lcall
shll
rclb
out
push
sahf
inc
fidivs
fs
rol
stos
mov
cli
jmp
mov
jns
mov
loopne
nop
fisttpll
push
mov
push
cmc
xlat
mov
jb
sar
ljmp
mov
add
hlt
sbb
out
test
loop
inc
loope
lcall
jne
int
mov
and
stos
lcall
jne
sub
fcomip
out
jno
outsl
inc
pop
xchg
rcll
mov
aaa
aad
outsb
shll
incl
jb
xchg
imul
gs
cmpb
out
clc
jmp
and
mov
dec
push
dec
mov
repz
pushl
push
addr16
out
pop
shlb
mov
lods
pop
pop
lret
clc
or
mov
ljmp
std
mov
mov
and
mov
sub
ret
fildll
mov
inc
enter
nop
sub
out
inc
jg
lahf
in
imul
jle
sub
lcall
shrl
push
inc
push
outsb
les
cmp
out
inc
inc
pushl
xorb
jnp
dec
lds
xchg
sub
push
ret
xchg
iret
sahf
std
ljmp
icebp
push
addb
stos
adc
xor
hlt
ucomiss
sub
cld
pushl
adc
sarl
cmc
mov
dec
ds
xor
xor
sub
or
mov
mov
jo
jl
in
xor
dec
mov
pushl
decl
xchg
jo
and
mov
lahf
call
mov
outsl
gs
adc
ja
jns
lcall
and
shlb
dec
add
stos
inc
xchg
mov
fs
adc
cmp
lcall
push
out
call
jo
jmp
insb
mov
sbb
lods
cltd
cmpsb
dec
icebp
jo
or
mov
or
mov
jecxz
call
lcall
inc
mov
arpl
sldt
call
push
bound
push
stos
mov
mov
out
ljmp
xchg
mov
repz
push
dec
shll
inc
call
jnp
imul
push
fistpll
mov
pushf
mov
in
pop
dec
ficompl
lcall
pop
cmc
call
hlt
imul
imul
add
in
mov
test
inc
push
test
in
mov
xchg
loopne
push
jl
dec
loop
jmp
mov
cmpsl
cmp
pop
mov
mov
sub
fstps
cmc
pop
cld
ljmp
and
lahf
std
lods
leave
mov
out
shll
inc
ss
mov
dec
mov
jmp
jl
xchg
adc
and
add
push
lahf
push
mov
movsl
pop
sub
lds
incl
imul
lret
sub
lcall
and
sbb
ret
and
inc
pop
sbb
loop
adc
dec
mov
pop
outsb
mov
out
jp
imulb
ret
cmc
mov
pop
addr16
aaa
jl
decl
outsl
addr16
ss
xchg
pop
cmc
mov
gs
sub
xor
rcr
test
stos
inc
lret
cmpsl
xchg
es
dec
add
xchg
fstpt
jmp
pop
cmpsl
jb
lret
inc
fwait
test
pop
ret
sarb
push
xchg
jge
adc
mov
push
xor
jecxz
loope
mov
add
sarl
push
pop
stc
mov
mov
sbb
xchg
outsb
addb
test
loope
lds
fdivr
jmp
add
push
sub
pop
or
clc
ds
arpl
pop
mov
cs
gs
inc
std
ret
out
sbb
test
push
lret
sub
xor
ds
andb
lock
cmp
stos
jns
sbb
xchg
rcrb
outsl
sarl
sbb
pop
movsb
rcll
jl
out
ljmp
mov
mov
imull
cmc
out
cli
or
mov
xor
js
sarb
roll
adcb
jnp
es
or
fwait
add
ret
sahf
shrl
adc
fwait
insl
jle
mov
mov
cs
mov
aaa
sub
jns
mov
into
subb
decl
add
ljmp
icebp
pop
inc
mov
xor
ja
sbb
jmp
sub
push
push
ljmp
and
push
mov
mov
aas
sbbl
decl
arpl
cs
or
cltd
outsl
or
xchg
mov
or
fisttpl
fldt
push
sub
ljmp
aam
jp
out
sbb
std
sbb
and
cmpsl
sbb
fs
incl
int
in
xchg
jae
push
mov
jg
je
rclb
inc
push
push
aam
xchg
xchg
call
es
adc
pop
stos
test
add
jnp
in
orb
nop
add
add
or
and
xlat
pusha
call
push
push
insb
push
inc
or
scas
dec
shrb
add
loop
lret
out
jbe
stos
addb
inc
into
in
out
shlb
bound
imul
insl
jmp
add
imul
fnstsw
insb
or
ds
pop
pop
adc
push
dec
subl
or
jo
rorb
test
out
js
sbb
xchg
subl
outsl
outsl
xchg
jo
sti
insb
push
push
outsb
popa
jo
push
add
roll
fistpl
push
pop
jae
push
add
and
aaa
adc
sbb
movsl
sub
fcomip
rolb
inc
push
inc
mov
ficoms
xor
sub
adc
imul
xchg
or
dec
jne
js
aad
inc
andb
xor
push
popa
and
cmp
inc
out
jbe
jns
push
imul
and
ret
ficoml
dec
ljmp
pop
ret
out
sub
dec
jbe
cmp
push
xchg
sbb
or
add
cmpsb
xchg
adc
inc
jl
ftst
ror
and
dec
outsb
imul
inc
or
add
in
cmpsb
mov
inc
sbb
faddl
lea
push
testb
inc
imul
push
hlt
inc
sbb
js
inc
arpl
jae
mov
loopne
xor
push
add
push
fisubs
mov
dec
sub
pop
ds
insb
jne
sarl
mov
xchg
adc
mov
mov
xchg
sbb
jo
inc
push
andb
in
fildl
jo
and
stos
jne
addr16
jae
mov
xchg
cs
fildl
mov
in
sarl
pop
pop
ret
inc
xchg
inc
inc
das
push
jns
loopne
in
or
cmp
adc
lods
gs
push
push
push
hlt
mov
pop
fs
dec
jns
out
loope
add
cmp
push
xor
xchg
dec
mov
pop
inc
pusha
or
push
jo
mov
dec
push
pop
in
push
cmpsb
sbb
dec
sbb
pop
call
leave
arpl
pop
not
or
mov
sub
and
jo
call
inc
push
sbb
popa
inc
enter
add
pusha
sub
mov
fsubrl
pop
push
gs
jbe
xchg
sub
mov
jmp
mov
push
movb
and
shlb
fwait
daa
sub
mov
sub
dec
adc
mov
ficoml
mov
dec
inc
dec
fistl
inc
mov
into
mov
adc
jecxz
push
gs
push
lds
push
xchg
lods
xor
mov
aaa
mov
inc
push
test
jo
cmpsl
insl
pop
push
sub
cmp
stc
ja
mov
cmp
and
push
cmp
xchg
es
jp
push
mov
mov
xchg
xor
xor
xorl
in
or
rcl
fnclex
call
pop
adc
int3
outsl
jns
int
push
outsl
test
pushf
pop
pusha
sbb
gs
and
sbb
repz
pop
xlat
aad
jns
mov
je
push
inc
inc
sub
sti
gs
mov
sbb
ret
dec
push
mov
arpl
and
pusha
jo
nop
insl
adc
or
push
es
mov
push
adc
push
adc
inc
enter
outsl
rol
daa
inc
stos
loope
nop
roll
xor
cmp
scas
pop
push
adc
mov
pop
or
mov
push
jne
sub
loope
lea
xor
mov
pusha
test
cmp
xor
xchg
and
dec
loope
mov
sub
cmpl
push
jnp
xor
ficoml
dec
inc
call
inc
mov
sti
cmp
dec
add
pop
mov
sbb
call
inc
aaa
jbe
adc
or
add
add
dec
pop
xchg
stc
test
push
pop
mov
leave
and
jns
sbb
cmp
push
inc
subb
rcl
mov
dec
or
mov
inc
jne
xor
rolb
adc
inc
arpl
stos
or
push
inc
insb
jl
sub
adc
dec
fstl
sub
jg
mov
dec
and
sbb
sbb
out
mov
dec
xor
and
loopne
into
jge
cmp
and
ss
sbb
into
movsb
test
push
mov
pop
inc
inc
popa
push
sahf
sbb
movsb
sub
test
mov
rcr
loopne
lods
popa
fbstp
and
fs
mov
je
and
push
outsl
lret
mov
inc
jb
and
sbb
inc
sub
jo
arpl
cmpsl
inc
inc
inc
push
arpl
stos
sbb
imul
pusha
xor
loop
outsl
roll
mov
inc
pop
mov
xor
insb
mov
inc
insb
jle
push
bnd
sbb
inc
mov
cmp
stos
mov
xchg
mov
xor
aad
ret
nop
popf
mov
lret
jl
pusha
add
lods
xor
push
and
inc
push
and
mov
fldl
jge
shlb
loop
mov
xor
push
ret
ficomps
pop
xor
shlb
push
fs
test
rorl
mov
and
push
and
or
out
mov
fidivrs
jns
je
insl
adcb
dec
outsb
dec
fildll
mov
shlb
pop
add
add
mov
mov
adc
xchg
movsb
dec
adc
lcall
push
xchg
cmpsb
xor
push
add
add
imul
mov
inc
popa
test
inc
rolb
mov
and
dec
mov
mov
pop
cwtl
ret
dec
rolb
inc
ds
pop
adc
push
jb
inc
jae
lods
cmp
inc
rolb
test
imul
push
repz
jo
or
jo
sub
popf
dec
and
xchg
aaa
or
push
bound
add
or
and
add
sbb
pop
push
aaa
orb
pop
outsb
mov
mov
push
pmulhw
push
push
adc
insb
loopne
arpl
daa
inc
mov
mov
adc
push
popa
in
inc
inc
inc
fldcw
cltd
lock
mov
adc
or
mov
xchg
cmp
test
std
mov
mov
jb
movl
xlat
popa
and
rcrl
push
push
insb
mov
shlb
xchg
js
jb
push
repz
or
pusha
jge
and
sarb
loope
xor
push
and
add
in
push
pop
notb
imul
mov
inc
xchg
ja
push
jo
or
inc
sbb
cmp
mov
enter
pop
mov
dec
insl
and
add
push
dec
mov
mov
lds
arpl
and
movlps
pusha
mov
inc
push
sub
shll
lods
sbb
push
fists
mov
dec
xor
outsb
arpl
or
sub
jbe
or
xchg
fsubr
xchg
sbb
adcl
outsb
jo
rclb
mov
mov
xor
insb
and
inc
loope
lea
lds
jnp
mov
lods
outsl
ret
outsl
push
xchg
scas
add
pop
jmp
lods
sbb
cmp
js
inc
sbb
mov
cmp
cmp
mov
sbb
sub
outsb
ror
lods
pop
fistl
fcom
add
and
jo
add
outsl
inc
push
lcall
addr16
fdivrp
push
xor
inc
out
adc
ljmp
adc
in
pop
xchg
dec
push
xchg
mov
add
and
push
push
mov
pushw
shlb
add
mov
mov
jmp
iret
negl
les
les
cmp
pop
mov
adc
jne
push
jno
lock
dec
add
imul
outsb
xor
or
or
int3
add
inc
mov
add
adc
xchg
sahf
mov
pop
repnz
ucomiss
cmp
push
aaa
or
insl
out
push
adcb
adc
lahf
lahf
dec
xchg
jmp
add
jo
add
mov
dec
imul
pop
cs
pop
dec
popa
add
sub
and
jb,pn
popa
xor
add
js
bound
push
shlb
leave
out
cmp
push
roll
add
push
pushf
mov
jae
arpl
out
xchg
jge
inc
sti
and
lahf
adc
repnz
and
jg
test
dec
xchg
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
and
inc
add
insl
inc
add
add
