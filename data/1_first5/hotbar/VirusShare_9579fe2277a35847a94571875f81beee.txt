fcomp
decl
push
jns
add
mov
or
adc
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
sbb
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
push
push
xor
push
mov
adc
idiv
mov
fisubrs
les
adc
incl
sbb
clc
imul
add
push
mov
push
push
push
xor
je
push
push
push
push
idiv
data16
in
sbb
clc
add
pop
sbb
inc
pop
shlb
nop
jne
pop
pop
pop
lcall
repnz
add
or
inc
or
jle
dec
push
xadd
dec
test
jg
mov
mov
push
mov
mov
call
ret
pop
add
fdivr
inc
push
push
mov
pop
mov
mov
les
insb
and
mov
insb
and
push
push
cwtl
add
push
subps
das
dec
mov
push
inc
rorl
sbb
xor
mov
adc
push
lea
push
ficoms
push
add
rcrb
sub
bound
rclb
ffree
add
xchg
dec
add
paddd
nop
mov
cmpl
jne
push
add
push
jl
jmp
addr16
sbb
add
xor
lcall
sbb
mov
push
and
aam
lret
test
sbb
sub
push
push
mov
adc
data16
mov
push
inc
lock
lret
xor
and
lds
bound
add
loopne
ret
fists
inc
push
in
and
push
mov
xchg
hlt
mov
xor
sub
ds
lock
pop
add
lcall
add
orl
add
lock
add
xor
sbb
sete
into
xchg
push
push
into
adc
or
leave
mov
xor
xlat
cmp
mov
les
add
push
push
nop
pop
inc
add
sub
jb
call
add
enter
add
add
cli
push
mov
fwait
push
loopne
push
rol
imul
xor
mov
push
daa
sbb
sbb
aam
xor
push
push
pushf
sbb
xchg
dec
push
mov
lea
or
imull
push
mov
dec
or
pop
sahf
add
sbb
cmp
lret
add
add
pop
mov
dec
test
mov
sub
sub
out
pop
jg
mov
and
mov
movsl
dec
jg
mov
addl
and
adc
pop
cmpsb
mov
pop
ret
xor
mov
inc
push
dec
dec
push
sub
push
insb
insl
push
add
fmul
loop
faddp
jl
fcoml
cld
lods
je
les
decl
lock
lahf
cmp
jae
mul
clc
mov
sub
push
mov
pop
lea
mov
fldenv
or
in
pop
inc
and
add
sbb
mov
sub
mov
in
push
int
add
pusha
push
add
add
nop
mov
mov
push
adc
je
fcomip
je
xchg
out
sbb
lret
ss
lock
dec
loope
pusha
bound
int3
push
add
call
inc
xor
movsl
incl
xor
lea
or
pop
mov
push
xchg
dec
lods
js
or
mov
sbb
inc
hlt
nop
test
add
mov
mov
jb
push
jg
pop
push
push
cmp
mov
inc
sub
and
test
ja
jmp
and
dec
or
add
iret
xorb
cs
xchg
ret
push
lea
push
and
push
popa
cltd
fistpll
cmp
inc
xor
push
aad
sarb
insb
fstps
jg
dec
or
test
push
out
adc
push
sbb
add
or
pop
mov
popf
mov
pop
mov
jb
sub
push
pop
pop
pop
sub
xlat
sbb
and
dec
js
cmp
sub
sbb
add
add
rorb
mov
pusha
push
inc
mov
xchg
push
es
or
push
add
push
push
repnz
dec
push
cmp
or
push
pusha
daa
mov
sete
test
test
jle
bound
xor
xchg
and
nop
and
es
sbb
insb
pop
ljmp
and
sub
cmpsl
rclb
adc
or
xchg
inc
or
pusha
lds
scas
push
pop
punpckhbw
inc
mov
mov
jne
push
sbb
push
adc
bound
jecxz
add
icebp
inc
push
push
and
pop
int
xor
cmp
push
leave
and
sbb
and
test
mov
mov
adc
xchg
jo
push
nop
pop
add
push
or
xlat
scas
push
push
xor
cmpsb
jo
push
ljmp
jnp
ret
mov
fs
scas
dec
push
cmp
and
sbb
sbb
lds
push
addl
nop
inc
mov
cmp
repnz
mov
jle
push
cs
inc
add
sbb
xchg
jle
movsb
mov
xor
jae
xlat
jl
mov
je
stos
sbb
test
sbb
cmp
mov
mov
push
faddl
push
push
pop
push
imul
insl
adc
fdivrp
adc
leave
mov
test
mov
test
aas
jno
pop
xchg
push
mov
xor
mov
mov
add
mov
xchg
scas
xor
push
sub
mov
je
mov
shrb
adc
mov
cmp
js
cli
push
mov
fildll
jmp
push
push
cmp
or
out
push
bound
adc
popa
jp
or
movlhps
push
mov
lea
data16
or
sub
mov
js
sbb
rolb
sti
hlt
add
test
xchg
or
outsb
fs
ds
pop
push
xor
sbb
adc
push
adc
lcall
cld
xor
xor
cmp
adc
and
add
popf
dec
test
inc
mov
fldenv
xchg
sbb
mov
adc
jmp
jle
or
loopne
fs
cltd
das
insb
or
mov
mov
in
mov
mov
jl
lahf
mov
int
shll
adc
add
dec
sarl
mov
and
sbbl
and
adcl
div
repnz
lea
test
icebp
jns
jl
nop
xchg
daa
or
push
xor
and
push
lcall
pop
add
push
lods
mov
xor
lds
test
jg
inc
cmp
jmp
cmc
or
lea
pop
push
lea
pop
pop
and
setg
add
shl
mov
or
inc
movsl
das
adc
xchg
and
mov
pop
dec
cmp
outsb
in
mov
sbb
push
add
cmpb
and
in
cmp
or
sbb
jmp
inc
adc
jle
jne
mov
mov
insb
fs
xor
daa
aam
popa
int3
sbb
repz
push
incb
cmp
je
sub
cmp
push
xlat
jmp
je
or
fs
lods
lret
sub
jl
add
in
mov
ret
mov
fadds
or
sub
mov
loopne
mov
ljmp
xchg
cwtl
push
js,pn
dec
adc
sbb
sub
add
push
push
push
sub
push
xor
call
aas
cmp
xor
adc
call
inc
cmp
jl
test
add
aas
push
push
xlat
sbb
and
js
jne
or
cmp
jbe
xchg
dec
add
jp
push
mov
notl
imul
xor
rol
push
sahf
sbb
in
and
mov
and
mov
in
add
outsl
jg
xchg
into
push
sbb
mov
lea
xchg
jg
lea
mov
inc
test
jne
sub
push
push
inc
sbb
mov
aam
or
adc
dec
cmp
push
add
ds
sbb
mov
adc
jg
fsubrs
push
mov
insb
jne
adc
jecxz
pop
pop
or
dec
es
lea
pop
jb
mov
sbb
inc
icebp
dec
addl
testb
push
jne
sbb
repnz
cmp
hlt
xchg
add
mov
ss
dec
outsb
mov
adc
mov
rcrl
sbb
push
pop
les
shl
push
movsl
lahf
jne
pop
mov
stos
in
lea
xchg
movsb
orl
xchg
cmpsb
loope
push
loopne
fs
adc
pop
addb
orb
outsl
jo
push
into
test
mov
std
sbb
ljmp
jmp
push
call
test
mov
mov
pop
nop
lahf
dec
clc
jle
mov
mov
decb
mov
mov
mov
sub
lea
push
or
cmp
add
or
ds
ja
add
jmp
insb
shl
mov
ret
push
mov
sbb
cwtl
scas
xor
insl
jl
inc
jo
jg
mov
fcmovb
add
add
pop
or
or
loope
mov
mov
je
cmpl
xor
and
sub
add
ss
jle
movl
or
cmc
test
pop
mov
xchg
cmp
cmp
xchg
push
dec
push
rclb
push
push
idivl
or
pushf
pop
pop
push
ds
jp
shlb
out
in
in
xchg
mov
notl
mov
or
mov
push
cld
cmp
ja
push
push
mov
or
push
push
push
notl
jmp
xchg
clc
in
inc
xor
mov
sbb
add
adc
pop
add
lret
adc
cmpsl
jg
sub
loopne
call
pop
cld
sbb
cli
enter
push
cmp
daa
push
push
push
jbe
roll
push
push
push
lea
sbb
outsb
enter
sbb
xlat
fisubl
xchg
cmpsb
or
or
js
xorl
mov
ror
sbb
pop
mov
mov
gs
xchg
mov
or
add
push
or
jmp
scas
xchg
cmc
pop
pop
mov
push
stos
ds
dec
push
pop
decl
aaa
fs
cmp
je
addl
push
lea
jl
mov
push
jne
push
mov
mov
test
push
mov
cmpb
das
and
stos
push
hlt
push
push
jge
or
incl
ret
push
repnz
mov
add
dec
jo
lock
testl
ret
cmpsb
lahf
lds
pop
pop
ret
push
lcall
dec
dec
sbb
or
mov
and
xchg
dec
sbb
pop
mov
dec
mov
dec
sub
push
xchg
ds
loope
popa
hlt
adc
ljmp
leave
lods
push
clc
push
scas
loope
loopne
sbb
mov
push
cmp
cmp
fldt
pop
push
push
adc
push
sub
lea
dec
push
pop
mov
bound
xor
or
cmpb
ficoms
lods
xchg
mov
pop
mov
push
xchg
clc
xchg
rcrl
cmp
fnstsw
jmp
inc
add
clc
ret
push
nop
adc
mov
lea
lds
imul
sub
orl
mov
xchg
jo
cmp
push
loop
cli
mov
negl
or
push
cmp
imul
push
in
cmp
add
shlb
in
or
pop
ret
pop
int3
movsl
adcl
dec
loopne
ljmp
das
or
fsubp
xor
cltd
ret
mov
enter
or
and
push
rorl
nop
or
or
add
ret
push
ds
adc
pop
addr16
pop
mov
or
push
jle
sbb
sahf
fiaddl
mov
xor
iret
cmpsl
jbe
push
hlt
cmp
cli
lret
imul
push
add
pop
sar
rcr
xorl
rolb
ret
cmp
sub
sarb
mov
movsb
jb
xor
lock
cs
lods
mov
sub
sub
inc
in
lea
ss
and
add
push
sbb
xchg
lods
dec
out
pushl
inc
jbe
push
dec
cmp
xor
aam
mov
or
lcall
pop
dec
test
sub
fcompl
or
mov
seta
ficompl
inc
jo
cmp
jmp
pop
xor
mov
pop
pop
mov
xchg
jg
mov
jne
inc
testl
sbb
push
cwtl
mov
dec
inc
adc
adc
pop
mov
adc
cmp
mov
in
mov
mov
lret
xlat
push
rol
or
rolb
imulb
lock
pop
add
cld
xchg
cltd
sub
adc
repz
loope
inc
lahf
xor
movsb
push
push
test
out
push
adc
pop
sbb
mov
or
add
sbb
or
xor
and
sti
jne
xor
push
push
dec
pop
outsb
or
sbb
fisttpl
jl
xlat
push
lea
add
ret
or
pop
inc
decl
jb
aas
mov
add
mov
aas
or
or
loop
inc
add
fcompl
adc
mov
cmpsl
iret
sbb
rol
adcb
ja
inc
xor
jg
adc
fdivrs
mov
inc
sbb
mov
in
aas
and
mov
pop
sbb
inc
ret
mov
sbb
sbb
add
or
push
sahf
test
sub
pop
popa
pop
pushf
mov
rcrl
je
xor
ret
insl
or
or
inc
cmp
push
ja
mov
clc
and
je
or
out
or
jne
arpl
inc
push
push
fs
push
rorb
adc
jae
xchg
cmp
dec
mov
mov
pop
add
sub
cmp
test
ret
cmpl
and
jle
in
pop
mov
dec
or
jmp
ret
push
adc
pop
add
mov
add
cmp
scas
roll
fidivrs
repz
decb
push
sbbb
mov
lods
cmc
je
or
int3
adc
outsl
ja
je
push
subl
pusha
testl
mov
push
mov
jecxz
xor
call
ds
mov
movb
jno
add
xchg
mov
inc
or
inc
adc
sti
mov
fdivl
adc
sar
and
repnz
dec
je
push
sti
nop
and
insb
cmp
dec
mov
andb
xchg
sbb
mov
pop
push
mov
jg
push
cld
insb
or
enter
neg
sbb
and
mov
push
cmp
add
mov
push
jp
int3
cwtl
push
lea
dec
mov
and
fs
test
inc
sbb
adc
sbb
mov
xor
cmp
popf
lahf
xor
fdivl
adc
cmp
ljmp
adc
out
movl
sahf
or
mov
stc
das
xchg
mov
scas
sub
cld
bnd
jnp
daa
je
xor
lock
sbb
in
stc
ss
bound
int
jns
outsl
andb
out
cmp
data16
out
or
or
repz
and
loopne
fbstp
or
push
adc
out
jno
add
and
sahf
in
sahf
in
or
rcrl
add
lret
in
int3
adc
or
adc
xchg
lret
scas
mov
xchg
sahf
pop
popf
cmp
add
aad
ret
stos
mov
cmp
pop
push
lea
imul
push
add
push
lea
xchg
cmp
push
sbb
dec
sahf
dec
aam
les
and
pop
push
pop
sahf
cmp
push
ds
cwtl
push
enter
inc
or
movl
pusha
pop
adc
sbb
sbb
je
cmc
cmpsl
stos
jge
mov
add
fiaddl
mov
xchg
mov
sti
dec
lahf
adc
test
pushf
or
call
xor
push
push
stos
sti
cmpsl
insl
push
jle
ficompl
add
pushf
fldenv
jp
mov
dec
arpl
or
xor
pop
or
fmull
jns
cltd
dec
fiadds
pop
je
and
mov
push
and
mov
add
rolb
xchg
dec
mov
jb
mov
call
sbb
xchg
in
mov
xchg
mov
js
cmp
sbb
out
xchg
sbbl
jmp
xchg
test
decl
mov
call
add
mov
outsb
or
dec
and
inc
es
sbb
mov
dec
pop
pop
sub
gs
dec
in
lea
push
push
inc
lods
loope
cmp
jo
ret
je
lea
add
and
add
icebp
repnz
xchg
mov
mov
mov
sahf
pop
mov
or
add
mov
push
dec
movsl
ret
pop
in
sbb
ljmp
mov
xor
adc
loopne
xchg
test
xor
ds
xor
jecxz
pop
jns
push
push
lea
adc
neg
lods
in
data16
push
mov
mov
insb
push
dec
dec
mov
pop
dec
cld
push
inc
push
push
xor
adc
dec
adcb
je
push
sub
test
rcrl
roll
cmp
xor
sub
mov
add
jbe
pop
cmp
mov
cmp
adc
mov
leave
push
jg
enter
push
push
push
and
out
mov
jbe
cwtl
push
sbb
iret
push
fisubrs
push
adc
xor
pop
pop
iret
idivl
inc
or
adc
mov
icebp
sbb
push
ficoms
arpl
mov
pusha
mov
neg
sbb
cs
clc
addb
add
je
out
jecxz
push
sbb
pusha
push
push
scas
addb
adc
adc
push
xor
push
fst
imul
push
pop
push
or
js
addb
mov
cli
and
in
repz
out
mov
cld
mov
xor
or
inc
pushf
imul
cwtl
push
mov
in
xorb
mov
inc
adc
cmc
add
test
test
fcoml
out
icebp
mov
and
push
lret
xor
push
push
push
dec
test
repz
filds
push
inc
cwtl
aas
cs
test
clc
push
jo
lret
push
mov
test
and
cs
mov
shlb
loop
pop
sbb
sub
jg
add
add
pusha
jne
orl
aad
lahf
mov
mov
sbb
xchg
call
lock
lock
sbb
jmp
pop
cld
aad
rol
incl
xchg
cwtl
jb
loope
enter
cmpsl
adc
rolb
add
add
inc
jbe
cwtl
mov
add
notl
fldz
fimuls
test
sub
mov
add
push
orb
sbb
inc
add
sub
ret
mov
xchg
sub
xor
push
push
xchg
dec
sbb
sub
mov
mov
push
jne
stc
mov
add
xchg
jno
or
outsb
loopne
and
sub
lea
or
push
pop
push
sub
fstpl
rol
out
orb
outsb
jae
push
vmwrite
sub
rorb
enter
add
sub
sbb
jns
lods
and
scas
adc
sub
and
mov
ficoms
add
dec
push
int
mov
loopne
dec
sti
mov
mov
push
sub
xorb
mov
inc
lahf
push
add
pop
rclb
push
pusha
sub
add
sbb
add
or
push
nop
cmp
sub
push
push
lea
aam
fcoms
or
fs
adc
xor
push
ret
add
cmp
nop
jmp
jmp
addl
or
push
and
inc
xchg
test
je
pop
lcall
addl
sub
mov
dec
sbb
je
icebp
into
ret
add
push
jge
mov
add
dec
aad
push
push
push
and
jo
dec
repnz
sbb
cltd
loopne
mov
push
sbb
dec
mov
sbb
test
aaa
outsb
add
aas
inc
lcallw
cmp
loope
loopne
fldl
fmull
pop
in
push
push
shlb
pop
lods
push
sbbb
push
lahf
push
and
sbb
cmpsb
loopne
andb
and
mov
or
pop
nop
out
inc
les
dec
ds
sbb
push
dec
cmp
lds
sbb
cmp
jp
sub
or
enter
call
push
or
dec
or
out
filds
push
add
push
mov
scas
add
jecxz
sub
push
jp
mov
cmp
leave
xor
dec
or
or
sub
leave
es
jp
xchg
or
push
add
xorb
jno
bswap
push
or
add
shlb
adc
adc
push
inc
sub
ret
xchg
cmp
outsl
addb
push
js
jmp
xchg
push
push
lds
sbb
in
pop
cmp
push
pop
mov
xchg
add
pop
aas
jp
je
mov
jge
xchg
pop
in
mov
jbe
push
stos
js
into
sub
cld
sub
sub
push
pop
inc
test
inc
or
fs
dec
mov
mov
ja
orb
push
mov
add
iret
add
loopne
inc
paddusb
enter
mov
js
ret
mov
fmull
sbb
hlt
dec
jbe
int3
int3
dec
push
and
cmpsb
aam
push
lods
xchg
push
repnz
rcl
mov
cmp
add
mov
mov
lock
inc
push
sbb
mov
cwtl
pop
push
clc
movsl
insb
lds
test
test
xor
out
lds
add
incl
jle
xchg
es
mov
imul
sub
bound
inc
sbb
cs
sbbl
push
add
icebp
sbb
cltd
and
push
sar
push
pop
fldenv
fstpl
daa
nop
lret
jl
dec
add
or
add
mov
mov
dec
bound
imul
sar
mov
shr
add
mov
sbb
out
aad
rclb
repnz
push
lahf
pop
mov
in
jle
add
imul
jmp
enter
pop
cmc
sub
mov
add
add
mov
fistpll
push
enter
lea
adc
jnp
cmp
je
cmpl
dec
call
cmp
jne
push
das
lea
push
adc
sbb
or
and
dec
xor
ficomps
push
pop
loopne
icebp
shll
lea
or
adc
stos
cmpsl
into
mov
xor
jecxz
loopne
sbb
pop
inc
test
js
dec
push
dec
and
jmp
inc
add
or
sbb
mov
sub
dec
mov
or
out
cmp
pop
pusha
push
ljmp
dec
sub
sub
sbb
fwait
jmp
test
jl
lcall
idivl
push
aaa
outsl
xor
sub
ds
and
push
mov
sbb
loope
add
jne
popf
mov
or
idivb
jmp
mov
fidivrs
cmp
das
outsl
cmp
add
xchg
sbb
and
fldl
add
popf
imul
imul
jno
jae
dec
sub
jge
jmp
js
mov
fwait
pop
fstpt
mov
sbb
push
faddl
add
fdivl
sub
xor
mov
fdivp
testl
lea
cs
sub
mov
mov
jns
inc
lock
xchg
push
fcoms
jmp
cmp
inc
lock
mov
jl
je
cmp
out
fidivl
and
add
rorb
addb
sar
ds
push
pop
movb
jecxz
mov
leave
jge
adcl
sub
cli
rclb
enter
xchg
jbe
mov
cs
adc
and
cmp
push
inc
sub
mov
call
je
sbb
xchg
js
sbb
mov
je
movsb
or
xchg
cmp
adc
and
subl
xor
sub
pop
push
inc
mov
xor
xchg
adc
mov
and
xchg
xchg
lods
add
inc
cmp
inc
push
and
sbb
add
dec
and
invd
adc
sub
out
test
sub
inc
in
pusha
or
mov
pop
mov
mov
xchg
lods
inc
out
loopne
incl
push
jmp
jecxz
jmp
leave
jae
pop
add
or
cmp
sbb
pop
add
imul
or
add
into
add
jp
pop
sbb
or
and
xor
sub
push
mov
das
jbe
add
add
mov
pop
addb
daa
ret
push
test
push
fcoms
out
xchg
fucomip
dec
adc
push
add
push
lods
adc
inc
mov
leave
adc
ljmp
cltd
dec
andb
mov
movl
sahf
adc
push
cmp
adc
and
fstp
adc
push
push
push
fimull
pop
sbb
dec
xchg
pop
mov
sbb
adc
inc
pop
inc
or
jmp
loope
xor
and
lea
dec
xchg
mov
sbb
ret
popa
and
pusha
call
pop
push
dec
mov
jb
mov
mov
inc
leave
inc
push
jle
jne
xchg
lret
push
pop
aas
ret
and
notb
shll
and
lahf
jb
jb
or
or
mov
or
adc
lds
jp
inc
and
clc
push
das
and
cmp
setb
mov
mov
sub
cmp
setae
repnz
cmp
lcall
adc
sbb
mov
inc
addb
or
adc
xchg
mov
add
inc
sarl
sub
inc
pop
orl
push
movsl
pop
ret
push
es
pop
pop
pop
xchg
mov
mov
add
jecxz
sub
push
dec
xor
push
pop
cmp
and
fwait
dec
inc
push
xchg
adc
shrb
xor
xorb
cmpsb
flds
cwtl
adc
push
xchg
xchg
xchg
push
inc
push
push
dec
mov
loopne
push
inc
jns
pushf
or
in
std
mov
jp
and
or
pop
out
mov
adc
push
inc
pushf
pop
pop
sahf
mov
filds
movzbl
push
imul
outsl
jno
or
mov
fistps
sti
cmp
jne
movsl
dec
xchg
xchg
fwait
add
add
mov
adc
sub
add
adc
adc
adc
dec
adc
or
add
dec
rcrb
mov
pushf
ret
ret
ds
inc
jb
adc
adc
mov
movl
cmpsb
int3
dec
test
pop
jmp
jns
int3
dec
pusha
inc
or
imul
sbb
push
cltd
inc
xor
cli
pop
xor
lret
sbb
and
and
adc
pushf
add
xor
dec
cli
ss
cmp
insb
push
in
jbe
jg
and
push
add
add
and
pusha
and
xor
xchg
rolb
push
sub
pop
shl
dec
rolb
dec
add
jmp
inc
mov
push
mov
push
dec
in
mov
popa
fcoms
push
mov
mov
or
xor
sbb
mov
aaa
out
mov
pop
inc
jl
mov
sbb
sub
and
out
cli
jo
or
bound
sbb
inc
rcll
or
ja
subps
xchg
mov
and
test
int
jo
push
cmpsl
hlt
mov
dec
add
push
repnz
sub
cmp
xchg
xchg
pop
pusha
inc
pop
shll
mov
aaa
xchg
xor
mov
cli
sbb
and
xor
mov
leave
es
ror
mov
in
lret
adc
or
jne
push
push
push
stc
ss
sahf
and
pop
shl
mov
movsb
sbb
mov
ss
pop
add
jns
dec
cs
lahf
out
fsubp
add
sar
cs
dec
or
push
or
sbb
insl
jge
movsb
pop
cmp
fsts
dec
pushf
mov
fidivs
shll
push
mov
sbb
daa
rorb
fnstsw
pop
inc
mov
sbb
sbb
sbb
cmp
rcrb
dec
and
pop
int3
xchg
mov
cmp
loopne
cmp
les
jns
or
sub
xchg
ljmp
push
adcb
and
cltd
insb
cld
push
pop
push
insb
cmp
ret
jns
add
ds
or
pusha
cmp
stc
or
mov
inc
daa
je
add
add
add
fcmovnu
jns
sub
insb
dec
cs
push
add
and
scas
adc
pop
lods
dec
cmpsb
lods
push
fisttpl
xor
or
adc
add
sub
xchg
inc
cs
xor
mov
xchg
outsb
cmp
and
inc
push
add
jne
mov
add
test
in
cwtl
push
dec
xchg
push
imul
fs
pop
call
jbe
xchg
insb
mov
fwait
mov
stos
pop
jno
or
test
mov
movsb
loopne
add
push
push
mov
xlat
jae
pushf
or
cmpsb
ret
push
adc
add
add
adc
mov
loop
sbb
int
out
mov
mov
inc
es
pop
movl
mov
test
push
sub
aaa
inc
jmp
push
xchg
loopne
pop
add
data16
mov
adc
sub
pop
mov
or
adc
or
cmp
and
and
ss
rclb
jmp
mov
daa
and
iret
pop
pop
mov
out
adc
pop
pop
sbb
sub
mov
lods
push
popf
adc
add
sbb
shrb
mov
mov
jl
lcall
adc
push
push
addr16
cmpsl
lahf
in
jns
xlat
ss
adc
mov
adc
insb
in
lds
push
dec
sub
mov
popf
mov
nop
sbb
imul
push
xchg
xchg
sub
sub
stos
and
mov
dec
mov
cs
and
push
or
adc
cmp
mov
push
ret
shr
test
subb
push
pop
and
adc
jle
es
xlat
dec
sbb
add
add
fmuls
inc
movb
pop
bound
iret
xchg
xchg
mov
add
push
jno
sub
popf
jo
out
push
std
stc
cmp
pop
mov
inc
push
mov
push
add
or
ret
sbb
sub
or
and
jp
xlat
pop
into
movl
pop
shlb
jne
push
mov
sbb
push
fs
sbb
inc
push
inc
jp
orb
add
iret
adc
popa
stos
push
aam
xor
sub
les
fldcw
or
sub
movsl
or
add
push
sbb
and
push
push
xor
and
pop
ss
cmp
add
or
sahf
sbb
jne
das
mov
xchg
or
sub
sbb
movsb
jnp
mov
fildll
push
enter
in
and
test
stc
stos
dec
sbb
cmp
mov
or
cltd
add
push
or
fstl
cwtl
inc
lahf
push
fmull
scas
ds
dec
mov
sub
movsl
imul
xchg
mov
cld
dec
inc
mov
push
lea
xchg
rclb
push
jae
shrb
xor
popa
mov
shlb
and
lret
inc
sbb
mov
xor
add
nop
or
mov
cmp
cmp
pop
sbb
push
sub
aad
aaa
pop
pop
dec
adc
jbe
xor
loop
cmp
clc
xor
enter
mov
sub
push
and
add
sbb
pop
shrb
aam
add
push
add
jne
adc
loopne
das
push
pushf
pop
push
data16
push
or
adc
scas
shll
mov
pop
call
xor
and
adc
fs
addr16
jmp
add
into
ja
bound
dec
and
add
loop
push
sub
dec
fbstp
rolb
xor
lcall
and
cmpsb
inc
push
es
inc
mov
xchg
mov
sbb
mov
xor
loope
xchg
hlt
mov
std
nop
mov
push
movl
sub
sbb
cltd
xchg
jns
xchg
xchg
add
leave
push
call
or
mov
fxch
repz
xchg
test
push
enter
sub
add
mov
filds
sti
std
sbb
jno
mov
ret
or
cs
mov
adcb
inc
push
jg
push
pop
rorb
das
add
bound
sbb
enter
in
push
or
inc
jmp
or
aaa
jo
push
andb
push
and
sbb
jnp
adc
inc
add
adc
sbb
mov
lods
in
enter
mov
mov
add
insb
push
or
aad
push
fnsave
std
and
xor
add
jl
push
push
add
xor
xor
roll
and
sbb
jo
push
loopne
sub
ret
aas
inc
icebp
xchg
int3
pop
add
enter
dec
sub
add
push
push
dec
add
push
jb
ss
ret
stos
add
push
repz
cmp
xor
add
lahf
and
push
nop
cmp
lret
test
movsb
or
pusha
push
dec
mov
cmpsl
push
sub
and
dec
push
test
cmp
sbb
add
jns
fidivl
pop
add
xchg
mov
or
sub
inc
push
dec
in
xchg
xor
xor
xchg
test
xor
pop
pop
xor
xor
adc
js
xor
push
sbb
pop
jbe
cs
adc
push
cmp
xor
adc
pop
stos
sbb
test
sub
push
pop
inc
push
aaa
add
shrl
in
sub
sub
std
xor
into
test
in
jns
push
xor
mov
outsl
fwait
or
insl
dec
jge
pop
pop
mov
push
or
or
jne
xchg
adc
inc
sbb
int
mov
stos
cmp
xchg
and
dec
mov
inc
inc
sub
push
dec
mov
pop
sbb
or
push
pop
cmp
lea
inc
or
pop
inc
in
pop
rolb
mov
test
sarb
fdivrs
sub
sub
sub
or
arpl
pop
insb
add
pop
add
jge
xor
ja
cmp
leave
in
mov
push
gs
outsl
add
pop
imul
sti
out
adc
testl
mov
in
mov
pop
movsb
mov
jae
jmp
stos
and
jecxz
notb
loop
and
and
add
or
add
add
adc
jmp
pop
lret
add
push
sbb
js
add
ljmp
stos
jb
popf
dec
xor
dec
sub
sbbb
leave
dec
push
icebp
or
jmp
hlt
push
ret
sarl
movsb
and
in
add
xchg
cmp
push
inc
fsubl
add
mov
sbb
mov
fs
sbb
fiaddl
jmp
mov
add
ljmp
sahf
push
into
adc
cld
mov
int
jp
xchg
inc
xor
aad
test
inc
cmp
sbb
into
xor
push
mov
fwait
int
xor
decb
lcall
in
mov
sbbb
aaa
loopne
rorb
push
pop
andl
subb
add
dec
pop
push
inc
or
fidivrl
jg
cmp
imul
stos
rorb
push
test
or
shrb
xor
popa
push
pusha
ds
jge
shlb
shlb
push
or
pop
mov
testb
lock
fs
fs
jo
pop
jg
mov
or
ret
jl
push
adc
dec
push
inc
dec
mov
mull
mov
js
pop
dec
jae
or
add
xchg
sbb
or
xlat
cmp
push
inc
scas
cltd
push
call
push
mov
xchg
sbb
cmp
or
loope
int3
test
pop
pop
pop
cmpsl
cmp
je
inc
mov
push
sar
in
jbe
adc
xor
sub
pusha
adc
add
push
pop
or
add
pop
sti
leave
rorl
adc
or
popa
sub
nop
push
adc
adc
or
rorl
xchg
jl
cmp
sub
nop
idivl
push
mov
sub
loopne
addl
adc
test
cwtl
adc
dec
out
pop
bnd
inc
insb
xor
xor
sbb
and
inc
aad
imul
movntps
pusha
bound
adc
or
jo
add
ret
xchg
adc
pop
inc
inc
enter
cmp
adc
inc
jns
add
and
pushf
sbb
sub
mov
push
add
add
sub
cmpb
sbb
sbb
subb
xchg
adc
adc
popa
fs
ds
pop
cmp
pusha
or
cmp
cwtl
push
and
xchg
add
sbb
inc
xchg
xor
incb
pop
and
push
inc
push
in
adcb
and
je
cmp
pop
jl
std
adc
sbb
mov
jo
enter
rorb
or
dec
addr16
xchg
add
sti
mov
pop
loop
in
loop
push
addr16
cld
aam
sbb
add
and
das
test
inc
and
movsb
mov
push
and
cwtl
lcall
addr16
repz
push
imul
jb
rcrl
and
and
inc
mov
inc
sbb
push
sbb
in
mov
push
mov
sub
lds
and
leave
jmp
ja
mov
idivl
cltd
adc
jb
lea
cmp
inc
adc
out
cmp
or
shrb
jp
aam
add
push
push
lea
dec
sbb
jae
pop
push
adc
ret
pop
enter
imul
in
push
or
mov
sbb
imul
and
mul
mov
mov
jl
inc
aad
pop
or
mov
int3
aam
push
jecxz
sub
sub
movsb
cmp
push
or
adc
jmp
orb
or
call
sbb
cmp
dec
fistps
jae
or
outsl
movsb
sbb
xchg
test
jb
sbb
into
and
xchg
mov
pop
mov
add
adc
mov
jb
out
pop
adc
js
pop
je
lret
xor
push
or
enter
js
shrl
into
sbbb
xor
inc
sub
pop
adc
sbb
or
fsts
xor
xor
push
pop
push
adc
add
xor
dec
shll
mov
pop
js,pt
and
leave
xor
adc
sub
lret
dec
in
outsl
add
and
jnp
jne
out
adc
jb
enter
shr
in
add
lahf
fisubrl
and
clc
and
or
jge
mov
jecxz
fsubrs
lcall
lahf
mov
sub
stos
jg
jge
and
push
jle
jg
jno
sub
or
or
or
or
call
push
popl
int
inc
mov
mov
jne
insb
jb
xchg
hlt
add
push
jns
add
push
movsb
push
pop
jmp
cs
repnz
rcrb
fildl
test
and
inc
mov
or
adc
mov
enter
or
lret
and
test
or
mov
aaa
jno
mov
in
clc
loop
or
testl
inc
and
cmp
push
lea
addb
mov
mov
loop
ficomps
cmp
in
mov
sbb
adc
sbb
jno
or
test
test
or
test
mov
inc
sbb
inc
xchg
out
cmpsl
popa
add
xor
insl
adc
cltd
call
jecxz
dec
sahf
fldcw
dec
add
and
andb
shlb
dec
mov
inc
xchg
hlt
test
add
insl
and
mov
cld
ret
xor
dec
ss
cmp
pop
icebp
pusha
jbe
dec
add
fisubl
add
mov
clc
dec
and
jnp
shlb
fwait
rcrl
mov
inc
dec
es
sarb
pop
xor
out
imul
or
ja
add
or
jnp
push
jo
add
mov
mov
and
add
sbb
movl
js
test
xor
jo,pt
aam
outsb
push
outsb
mov
xchg
xlat
jecxz,pn
push
mov
add
or
adc
clc
and
mov
iret
push
lea
add
ds
add
add
add
pop
add
adc
jno
cmp
adc
lret
hlt
jg
xor
mov
jae
mov
sub
ficomps
mov
cmc
mov
push
xchg
cmp
push
addl
and
bound
xor
inc
pusha
pop
pusha
ja
addb
loop
sub
dec
mov
jle
pusha
lahf
es
js
mov
cmp
add
mov
push
mov
sbb
fimuls
ljmp
push
loopne
std
add
movb
aam
xchg
pop
sub
mov
mov
aad
xor
orb
inc
dec
xor
xchg
sbb
call
add
rcrb
pop
adc
xor
sbbl
xchg
je
jge
ljmp
aam
add
int
adc
push
jmp
inc
add
sbb
inc
sub
je
icebp
int
rcll
sbb
dec
xor
or
add
int
imul
add
ds
sbbl
and
pop
adcl
ret
inc
and
dec
xlat
adc
push
pop
pop
add
das
pushf
add
aaa
xor
mov
sbb
xchg
xor
outsb
dec
push
cmp
or
fstpl
nop
jnp
or
mov
add
sub
dec
js
hlt
pop
hlt
add
ret
je
and
into
push
out
ss
push
push
outsb
dec
sbb
pop
std
insb
mov
xor
cmp
test
push
sbbb
push
adc
jmp
mov
cmp
add
push
out
push
push
aam
int3
jbe
adc
cmpb
push
push
inc
mov
sub
and
push
and
and
sub
cmpsb
pop
loope
mov
mov
push
sbb
fdivs
jne
mov
loop
xchg
inc
add
jns
js
sete
sub
loope
aam
push
push
ficomps
sbb
sbb
jb
dec
or
pop
adc
daa
in
pushf
add
repz
repnz
ss
mov
push
sub
adc
and
mov
mov
or
ret
mov
mov
sub
push
add
clc
les
push
cmp
xor
add
push
jo
lods
mov
or
test
or
loope
jnp
fistpll
xor
sbb
fbld
sub
dec
dec
mov
push
add
mov
adc
xor
rorb
inc
dec
dec
iret
mov
push
xor
fwait
pop
leave
pop
ret
or
test
adc
or
dec
inc
pop
sbb
jno
pop
mov
imul
mov
adc
js
and
sub
pop
repnz
add
add
xchg
and
aas
fcoms
setge
sub
push
sub
jle
sub
xor
sbb
sbb
cmp
sbb
dec
lock
inc
add
xor
adc
fmuls
inc
sub
push
lods
cmp
sbb
loope
inc
ret
xchg
and
loopne
inc
inc
mov
push
sbbb
adc
mov
inc
sbb
mov
scas
test
ss
add
inc
or
jno
adcb
pop
adc
fwait
and
push
test
xchg
sub
je
loop
adc
push
jb
lock
jle
sbb
push
pop
add
gs
push
enter
add
jno
jmp
pop
aam
pop
pop
loopne
dec
aaa
push
and
add
movsb
dec
fmuls
call
push
stos
call
or
or
cwtl
sbb
or
xchg
mov
add
push
insb
cmpsb
xor
mov
stc
jo
add
inc
push
push
icebp
faddl
nop
pop
and
sbb
ds
push
pop
je
push
leave
xchg
in
scas
pop
adc
scas
mov
mov
rorb
jle
or
roll
test
adc
push
std
jno
lds
cmp
test
movb
outsl
or
or
les
add
or
andl
in
loope
sbb
fistpll
mov
pop
ret
mov
push
add
loop
mov
or
shlb
adc
xor
mov
sbb
push
add
fdivl
add
xor
pop
shll
jne
or
push
stos
pop
jp
xor
mov
push
loope
out
mov
add
shrl
or
or
adc
mov
xor
xor
mov
ret
adc
mov
xchg
pushf
adc
or
sub
mov
jp
cmp
xor
xor
clc
pop
inc
inc
hlt
cmp
jne
sbb
jnp
mov
les
into
ja
stc
in
enter
sub
push
cmpsl
je
scas
or
inc
ror
adc
aaa
shl
sti
cmp
cltd
aaa
testl
sub
cmc
fs
sti
adc
xchg
push
jl
pushf
sub
sbb
mov
dec
push
jae
mov
clc
incl
add
sub
or
lea
jge
push
or
daa
in
push
push
imul
push
add
std
add
sub
push
inc
sub
cmp
add
cltd
add
icebp
dec
xor
pushl
mov
fnstenv
xchg
pop
jl
mov
cmp
jg
mov
sbb
or
and
inc
cli
fldt
bsr
mov
dec
or
adc
out
pop
nop
sub
adc
and
movsl
xchg
lcall
push
jb
das
xchg
int
jb
lret
sub
xor
out
in
int3
aam
sar
out
dec
add
ret
lods
cmpsb
aaa
xor
cmpb
pop
insb
mov
cwtl
lea
jp
inc
notl
push
rclb
adc
xchg
jge
fsubrs
sti
sub
int
cmp
imull
push
sub
push
mov
fcmovne
add
cmp
push
cmp
pop
dec
pop
imul
outsb
pop
add
inc
inc
xchg
jl
add
jb
sbb
movl
mov
iret
jno
enter
add
sub
push
es
fwait
or
inc
sbbb
repz
pop
outsl
unpcklps
sahf
jl
mov
push
jg
push
add
push
and
add
push
ret
enter
gs
bound
pop
aam
dec
dec
cld
sub
loope
lea
stos
orb
cs
call
test
ret
out
jno
push
cld
loopne
mov
hlt
sub
push
test
fcoms
ret
sub
xchg
xor
ja
inc
lds
insb
add
push
adcb
cmp
daa
mov
loope
pop
popa
or
mov
hlt
dec
sbb
jns
push
adc
adc
push
ret
jg
jbe
inc
push
cmp
mov
xchg
or
or
or
leave
outsl
lods
gs
dec
and
mov
cwtl
btr
mov
push
jae
ljmp
dec
or
dec
inc
or
mov
inc
insl
inc
jle
pop
pop
addb
mov
ret
filds
inc
jle
js
add
or
addl
push
jns
push
jb
test
iret
outsb
inc
add
sub
adc
test
add
and
scas
xor
pusha
inc
mov
inc
cwtl
fsubs
pop
cs
cld
movsb
test
add
and
cs
ljmp
test
cmpsl
mov
inc
fnstenv
or
call
test
add
adc
jl
mov
and
adc
cmp
jle
lock
mull
adc
cmp
jne
loop
cmp
test
insb
fimuls
jge
lret
rcll
or
add
mov
push
into
xchg
push
sbb
pop
das
mov
lea
mov
mov
add
pop
fs
pop
cltd
or
push
push
mov
and
outsb
cmp
or
add
sbb
lret
pop
test
jne
cmp
lods
popf
push
dec
faddp
leave
insb
pop
mov
inc
xorb
jae
fsincos
push
lea
mov
sbb
movhps
cmpsl
inc
mov
mov
pop
pop
mov
jmp
jl
add
ret
sarb
add
mov
mov
pop
outsb
aas
mov
xchg
mov
lea
cltd
and
in
add
sub
jmp
add
adc
inc
jae
add
sub
fs
fadds
adc
inc
add
add
loop
mov
cld
stos
incl
inc
inc
aaa
movsb
pop
pop
sbb
push
outsl
lods
pop
sbb
mov
add
cmpsb
push
mov
pop
pop
mov
stos
jb
add
sub
and
xor
insb
push
andl
sbb
test
or
cmp
push
jns
pop
clc
stos
push
jno
shll
adc
or
arpl
hlt
or
mov
xchg
pop
push
push
jo
cmc
xor
test
arpl
xor
xor
and
ret
mov
inc
clc
add
xchg
shll
ss
sub
movsl
cmpsl
lret
andl
push
iret
xor
test
dec
ret
xor
mov
pshufw
sub
popl
negl
roll
push
mov
pop
out
stos
xor
je
xor
add
add
push
xchg
mov
fldt
jl
in
jmp
sub
jne
jmp
push
pop
add
inc
mov
or
mov
mov
clc
ds
scas
in
movsl
and
or
or
push
mov
dec
test
push
push
xchg
mov
mov
mov
push
inc
repnz
jmp
dec
fisubl
mov
cwtl
dec
add
int3
test
addl
jno
xor
pusha
call
cmp
es
and
rcrb
rcl
into
imul
mov
pop
xchg
out
dec
cmp
adc
nop
add
adc
adc
pop
add
push
dec
push
ficomps
incl
fmuls
or
int
jne
daa
push
push
sbb
jl
addr16
test
in
push
ds
xchg
add
rclb
mov
inc
add
test
push
inc
inc
cs
xor
dec
cmpb
je
jge
xor
sub
pop
xlat
nopl
fists
cmp
fwait
sbb
mov
cmp
add
xor
mov
push
std
dec
cli
loopne
push
push
scas
shl
xchg
mov
push
mov
jl
popf
int3
and
jmp
out
adc
bound
cwtl
sbb
mov
mov
rcr
pop
inc
pop
mov
push
out
sub
dec
add
movsb
cmp
adc
cmp
and
mov
lds
pusha
xor
mov
mov
dec
mov
sub
test
pop
mov
push
fstps
scas
push
addb
rorb
cmp
aad
cs
lret
jecxz
mov
xchg
or
aas
sahf
sub
pusha
lods
or
xchg
cli
and
and
add
pop
jae
int3
push
cltd
int
pop
push
inc
rcrl
filds
push
pop
dec
mov
dec
insl
or
or
and
sbb
add
push
mov
jne
pop
jle
pop
jne
ret
mov
jbe
nop
pushf
add
adc
inc
sahf
dec
add
dec
pop
mov
ss
push
add
repz
lahf
or
cs
adc
xor
push
bnd
or
sub
es
sahf
js
popf
or
loope
sub
adc
add
ret
fmull
pop
pop
or
add
or
jb
mov
and
and
rorl
ljmp
lods
adc
clc
add
lods
mov
loope
jmp
sub
and
pop
jg
mov
inc
pop
push
test
stos
jg
cwtl
fs
and
mov
pop
adc
xor
dec
dec
in
insl
mov
bound
jb
shl
mov
cmp
lret
cvttps2pi
outsb
push
sub
ret
push
rorb
mov
mov
xor
xchg
sbb
and
inc
xchg
add
jnp
insl
ret
adc
push
push
sbb
fisttps
mov
pop
adc
cld
adc
cmp
push
insl
lret
mov
cltd
and
faddl
mov
pop
das
daa
and
xchg
add
xchg
dec
dec
pop
xchg
adc
xor
and
pop
dec
mov
popa
inc
ljmp
int
push
or
jbe
mov
add
lret
add
inc
push
loopne
inc
ret
pop
jge
jmp
xor
fiaddl
fcompl
push
push
xor
push
mov
fsts
lcall
lcall
adc
and
insl
or
adc
loopne
dec
add
push
flds
xchg
sbb
test
mov
inc
jo
pop
add
mov
and
cmpsb
sbb
out
cmp
add
jl
sub
fistpll
mov
mov
js
test
jmp
ds
mov
les
out
mov
dec
and
ret
mov
rorl
jmp
or
and
outsl
sub
add
push
cmpb
cmp
mov
or
pop
sub
xor
add
addr16
jns
sysexit
xchg
pop
sar
sbb
std
xor
cwtl
stos
rol
jno
inc
xchg
pop
jne
dec
inc
sub
sarb
je
and
cmp
ret
mov
test
dec
mov
or
pusha
test
nop
or
popa
mov
ret
test
jecxz
call
adc
or
sbb
pop
or
cmp
test
je
lea
int
mov
add
rcr
pusha
shll
mov
xor
pop
cmp
jb
pop
pop
rolb
int3
js
nop
je
push
fcmovu
and
cmp
push
push
inc
sub
add
xor
shrb
add
mov
add
cmp
add
jl
mov
in
jmp
xchg
mov
sub
imul
add
in
das
mov
xchg
mov
cmpb
jno
mov
sub
or
jge
lret
adc
add
add
scas
cmp
cmp
mov
sbbl
sbb
push
outsb
or
bound
jge
sub
lea
imul
sub
push
push
push
push
or
aas
adc
test
addb
inc
idivb
or
notl
add
add
rol
xor
mov
fsubr
lds
xchg
loope
or
andb
xorb
cwtl
or
js,pn
jg
xor
js
sbb
popa
and
push
jmp
sub
add
sbb
ljmp
push
adc
cmp
cld
scas
sbb
mov
jno
jmp
push
pushf
js
sbb
mov
je
pop
aas
jle
inc
push
imul
lcall
sar
inc
add
or
stc
mov
rorb
enter
push
or
cmc
rorl
ret
pop
inc
ret
mov
and
add
dec
dec
add
xchg
jbe
out
lret
je
arpl
and
insl
add
sti
adc
mov
push
mov
dec
mov
adc
ss
push
pop
add
in
and
pop
mov
rorb
mov
dec
add
loop
fdivs
cld
or
add
or
mov
add
jnp
loopne
mov
pushf
movzwl
xchg
loopne
inc
lock
push
jae
mov
xor
icebp
push
push
and
clc
push
push
ds
sub
push
es
push
push
test
and
jge
loope
add
add
in
sbb
push
push
cmp
adc
add
jl
shl
sbb
dec
pop
das
pop
sbb
push
fnstenv
pop
mov
xor
mov
jnp
call
pop
mov
mov
cmp
je
push
jle
dec
pop
adc
add
or
movsb
inc
sbb
mov
xor
sbb
cwtl
xchg
adc
xlat
push
not
andb
pop
jbe
dec
loope
fdivs
and
push
rorl
mov
push
push
mov
sbb
pop
nop
pop
orl
outsb
mov
inc
cld
xor
idivb
sahf
out
cmp
add
rorb
xchg
inc
sbb
or
stos
xor
call
dec
jmp
xor
aad
sbb
push
cmp
int3
adc
rolb
xor
ja
inc
mov
add
outsl
pop
xchg
xor
adc
mov
dec
shlb
mov
roll
cmp
push
add
mov
in
loopne
add
push
or
icebp
pop
adc
pop
lock
push
jbe
js
aas
inc
sti
aam
push
dec
cwtl
fadds
cmp
pop
push
clc
sbb
inc
pop
ss
pusha
cmp
and
adc
pop
ret
cmp
rorb
mov
add
or
adc
mov
jo
fildll
push
jb
pop
xchg
or
inc
clc
xor
incb
sub
gs
jo
loopne
sbb
pop
lock
fdivrp
sarb
lcall
or
mov
scas
cli
in
nop
dec
lock
xlat
jmp
ret
test
lahf
cmpsb
rolb
or
fisubrs
xor
push
je
ret
out
xchg
push
jnp
cmp
jae
mov
sub
test
mov
mov
pop
sbb
add
dec
jb
pop
lea
aad
push
je
aam
pop
mov
jl
mov
cmp
and
inc
and
or
jb
jl
mov
inc
mov
xor
xchg
dec
movsl
cmp
and
xlat
inc
in
movl
mov
ret
jge
movb
imul
roll
or
inc
lock
clc
xchg
rclb
or
sbb
xor
cmp
lea
jne
push
push
mov
push
inc
js
jl
mov
mov
push
push
daa
add
addr16
mov
push
and
push
outsb
aam
call
les
jl
push
pop
pop
js
call
mov
lock
cmp
xlat
testl
shll
loopne
in
pop
arpl
pop
ja
mov
mov
jb
add
imul
or
mov
mov
fbstp
adc
cwtl
sub
sbb
xchg
loopne
pop
ja
lcall
adc
inc
test
cmp
jb
jnp
loope
or
add
push
mov
out
faddl
sbb
add
add
xchg
or
mov
aas
add
inc
add
mov
repnz
lock
mov
or
xorl
dec
xchg
out
scas
mov
enter
cs
aam
sbb
in
dec
cmp
in
test
sbb
mulb
int
int3
in
enter
test
mov
push
outsb
xor
dec
cmp
das
je
or
adc
rcrl
je
outsl
or
jne
mov
inc
je
pop
inc
jl
mov
lea
dec
cs
mov
sbb
sahf
inc
clc
xchg
pop
decl
cmp
or
ss
test
jmp
es
mov
adc
or
inc
cmp
hlt
dec
jbe
lea
lea
mov
dec
js
pop
sub
inc
jmp
inc
and
mov
mov
pop
mov
mov
pop
fldl
sahf
push
pop
sbb
cvttps2pi
cmp
push
sub
loop
lcall
not
mov
test
pop
add
or
lods
les
push
and
loopne
dec
and
push
cli
add
mov
stos
mov
gs
and
mov
sbb
mov
jl
jb
aaa
mov
je,pt
sub
jg
dec
push
movsb
cmp
adcb
ret
add
add
inc
push
lcall
incl
push
push
or
lahf
sub
push
mov
pop
fs
mov
cli
and
add
adc
test
add
cli
inc
cmp
jb
cmp
ja
pushw
shlb
cld
aaa
out
pushl
jmp
cmp
jb
cmp
ja
and
ljmp
cmp
int
insb
push
xor
add
cmp
fsts
or
xchg
mov
mov
outsl
mov
add
mov
lods
mov
aas
xchg
notl
inc
add
jmp
outsb
mov
or
jne
lcall
leave
add
mov
je
add
aam
xchg
stos
jne
ret
push
test
mov
and
inc
imul
scas
incl
jae
mov
jmp
push
pusha
aas
and
loope
adc
jo
jne
adc
dec
test
lea
push
mov
cld
or
insb
and
xor
leave
jne
jmp
xchg
lret
cmp
or
dec
adc
add
adc
and
gs
adc
je
test
jne
into
clc
adc
shrl
jb
xor
dec
dec
push
sub
cmp
and
fisttps
add
add
inc
push
push
testb
rcll
setno
movb
jnp
and
push
inc
and
and
and
cwtl
cmp
and
mov
lods
out
dec
negl
adc
push
jae
add
outsl
aam
pop
jbe
push
pop
mov
fdivs
ret
pop
or
mov
mov
repnz
push
cmc
sub
cli
pusha
sub
mov
xor
adc
aam
ret
in
push
pushf
ret
es
clc
add
or
lods
push
lahf
push
testl
sahf
add
cmpb
pop
and
pushf
sbb
xchg
pop
clc
adc
sub
ljmp
pop
cld
mov
repz
cmpl
mov
cs
das
mov
or
mov
in
sbb
or
push
xor
jle
insl
mov
lods
cmpb
and
dec
adc
pop
inc
fldt
cmp
daa
dec
out
add
jg
test
and
push
ret
adc
ss
sub
push
imul
cmp
aam
test
es
sbb
jnp
and
add
loop
sub
js
js
mov
mov
je
cmp
je
xchg
jae
jecxz
add
je
sub
es
gs
mov
or
xchg
xchg
out
inc
and
testb
adc
push
xor
sbb
mov
jae
aas
ds
or
mov
sti
adc
sbb
je
add
cmp
popa
dec
cmp
nop
mov
inc
paddsw
add
sub
in
test
popa
pop
leave
mov
push
mov
daa
in
test
mov
or
test
cmp
je
lcall
pop
pop
pusha
jp
loopne
lock
add
jns
cmp
adc
fcmovb
mov
fiadds
insl
inc
push
xor
xor
mov
sbb
loop
lcall
sbbb
cmp
jb
mov
push
js
cmp
jb
mov
ja
xor
pop
clc
pushf
cmp
mov
rorb
popa
mov
mov
dec
sbb
or
sbb
xchg
into
xchg
dec
imul
cltd
clc
in
icebp
scas
jecxz
and
mov
mov
arpl
adc
add
sbb
push
mov
jb
mov
xchg
dec
in
inc
int
in
mov
mov
lea
push
push
les
les
lods
jg
je
loope
mov
addb
and
dec
or
lea
inc
in
jnp
fcoms
lahf
pop
repnz
push
addl
mov
movsl
xor
pop
and
xchg
mov
or
jne
add
push
push
lea
or
pop
xor
out
inc
fimull
cmpb
xchg
or
cmpsl
and
and
pop
or
add
add
sti
push
or
lcall
xor
mov
adcl
mov
inc
ljmp
jge
jbe
mov
inc
dec
orl
dec
cld
sub
loopne
adc
cwtl
mov
pop
mov
xor
mov
mov
scas
push
enter
pop
cmp
sub
sbbl
add
xor
movb
ja
loope
jne
cmp
mov
ja
or
cmp
test
or
iretw
cmpsb
iret
cmpl
dec
stos
mov
sub
and
push
loope
cmp
mov
ss
or
addb
jmp
push
loopne
lahf
jae
shlb
iret
out
adc
sbb
pop
cmp
inc
jmp
insb
fisttpl
inc
jne
pop
movb
inc
bound
cmp
push
insb
mov
pusha
lea
xlat
or
jbe
inc
test
shll
test
rcl
inc
xor
out
mov
in
xor
push
ficomps
mov
mov
inc
movsb
mov
and
pop
hlt
cmp
jle
push
push
or
push
das
clc
jmp
xchg
insb
push
push
xchg
dec
sub
xchg
push
jb
mov
inc
shll
jmp
lock
cmp
je
cmpb
cmp
jne
mov
addl
setle
fwait
gs
cmp
adcl
push
aaa
inc
inc
inc
inc
mov
aaa
mov
jbe
sub
icebp
mov
push
test
adc
das
in
sarb
ret
xchg
scas
xchg
loope
pusha
call
xchg
xor
xor
subl
cmpsb
ret
je
cmp
mov
sub
pop
inc
inc
mov
int
aam
shl
inc
sbb
cmp
rorb
nop
inc
push
xchg
and
lret
inc
jo
cmp
inc
mov
xor
cli
and
in
jl
xor
lret
test
and
inc
and
pop
sbb
jmp
mov
add
sub
je
or
je
insl
mov
es
sbb
call
pop
not
add
inc
push
mov
sarl
xchg
dec
mov
dec
pop
jmp
imul
mov
xor
cmp
pushl
mov
mov
mov
cmp
and
sbb
jmp
pop
push
inc
dec
pop
imul
idivb
push
cmp
ja
push
pop
out
cmp
jp
lea
dec
insl
mov
pushf
push
loop
sarb
and
and
mov
pop
and
mov
or
mov
lds
inc
xor
cmp
cmp
divb
cmp
jb
dec
adc
xchg
xor
and
inc
popf
push
adc
fcoms
in
pushf
inc
or
jmp
in
sub
sarb
push
jge
jecxz
sub
orb
inc
mov
mov
arpl
push
scas
and
cmp
cs
jo
into
pop
mov
call
jg
loopne
ficomps
or
lret
ds
push
je
push
inc
or
push
add
addl
js
push
push
in
int3
aaa
shlb
int
loop
add
or
push
enter
adc
rorl
push
cmp
adc
dec
dec
adc
cmp
push
inc
xorl
lret
pop
sub
dec
dec
lret
adc
filds
jo
or
add
gs
add
mov
cmpsl
pop
rcrl
or
inc
adc
insl
negl
cmp
je
pop
mov
xor
sbb
push
notb
pop
cmp
int3
mov
jle
mov
inc
inc
or
dec
xor
cmp
ds
out
pop
sub
mov
or
sbb
in
dec
ljmp
or
mov
cmpb
push
je
sbb
dec
nop
in
cs
add
or
jmp
ret
cmp
inc
dec
push
pop
or
cmpl
add
fs
push
dec
cmp
pop
nop
les
pop
push
adc
lds
addr16
fwait
imul
inc
out
or
aas
sub
jle
adc
add
or
xor
js
pushf
push
mov
test
subl
pop
inc
pop
dec
mov
mov
push
jne
dec
cld
les
adc
push
sub
insl
loop
push
dec
inc
jne
ret
clc
jno
sub
pusha
shl
or
fldt
inc
cltd
repnz
sub
mov
loope
rcrb
adc
dec
sub
sub
or
pop
jg
xor
cmp
cmp
aas
and
outsb
sub
sbb
or
adc
hlt
push
pop
dec
pusha
lock
out
adc
xchg
xchg
lock
push
popw
push
ds
and
insb
ret
lret
or
xor
add
adc
xchg
sarl
in
stos
sbb
sub
gs
push
fidivl
jo
add
and
adc
faddl
adc
out
or
jne
roll
push
pop
adc
in
xor
mov
ror
pop
add
add
xchg
sub
mov
int3
inc
mov
push
ret
pusha
xorb
test
jno
cmp
jl
into
pusha
and
adc
or
pop
and
imul
popa
xchg
shrl
imul
cmp
or
dec
or
div
fcmovbe
xlat
push
inc
push
push
adc
mov
inc
and
mov
jnp
mov
push
filds
and
insb
cli
xchg
and
pop
ret
xor
xchg
lods
test
sub
fisttpll
and
leave
mov
cli
mov
mov
or
or
pop
xchg
adc
in
dec
xor
push
adc
dec
sbb
xor
ret
jbe
cmp
mov
fimuls
sbb
ja
mov
repz
movl
or
adc
jl
or
sbb
mov
scas
inc
mov
jo
mov
dec
pop
das
push
pushf
pushf
lahf
xchg
adc
test
dec
push
mov
pop
push
push
cs
test
stc
mov
mov
outsl
xor
mov
loopne
ss
pop
mov
lods
or
imul
dec
cltd
out
dec
icebp
xor
sbb
push
xor
push
dec
jnp
push
pop
sub
fmul
test
aas
fwait
mov
push
test
or
jecxz
popa
testl
jnp
popa
and
dec
xor
sub
push
dec
fwait
clc
or
mov
in
add
pop
adc
jno
hlt
pop
pop
mov
mov
lea
lods
push
and
out
mov
js
push
xor
xchg
loopne
imul
mov
inc
push
dec
jp
push
jae
and
les
push
push
test
add
sbb
sbb
clc
dec
das
test
jno
out
rolb
sbb
jecxz
leave
int3
and
loope
mov
ror
inc
push
and
rolb
sub
sbb
clc
sbb
pop
loopne
faddl
xor
mov
enter
lcall
andl
push
xchg
outsb
sbb
cmp
inc
cld
or
or
clc
xlat
push
mov
or
jb
and
or
repnz
ss
lcall
sahf
das
adc
adc
sub
call
clc
aaa
movsl
lea
mov
out
test
test
sti
dec
mov
add
pop
add
popa
cld
sar
pushf
mov
dec
mov
decl
xchg
add
into
in
addr16
xor
or
cmpsb
xor
adc
pop
push
push
aam
loopne
jl
call
xor
nop
shlb
pop
add
and
adc
je
add
js
adcl
add
sub
or
pop
adc
out
pusha
pop
stos
or
adc
movsb
shrb
and
xchg
dec
popa
je
add
aas
imul
dec
pop
scas
mov
xor
pop
and
lods
shrl
fmull
sbb
sub
add
inc
push
sub
and
xchg
cmp
leave
xor
inc
mov
mov
add
nop
cmp
jo
or
mov
loopne
xchg
push
sub
add
sbb
and
mov
mov
sub
notb
sbb
cmp
add
fcmovnb
cltd
fnstenv
pcmpeqd
sub
insb
sbb
mov
sbb
popa
cmp
nop
adc
movsl
outsb
sbb
mov
mov
out
add
or
mov
aam
push
addr16
dec
jno
sub
or
or
mov
xlat
adc
or
xchg
cmpsl
aas
add
add
inc
xor
push
clc
mov
xor
jnp
outsb
sub
add
or
inc
ficoms
inc
roll
dec
dec
subb
pop
push
adc
lods
inc
cmp
push
pop
pop
mov
mov
leave
pusha
mov
xchg
mov
sub
adc
outsl
rclb
shlb
inc
into
mov
int3
xchg
push
push
into
ja
ret
cltd
cmpsb
push
pushf
jmp
aas
pop
iret
mov
jnp
push
or
imul
int
cmp
jb
mov
rcr
jae
mov
addl
mov
and
adc
or
jnp
xor
adc
sahf
gs
inc
xor
xor
mov
inc
pushf
subl
push
fdivs
iret
call
into
push
or
mov
dec
adc
jp
mov
dec
fsts
lcall
cmp
mov
sbb
nop
pushf
add
sub
cmpsb
cmp
xchg
cltd
xor
loope
mov
sub
sbb
or
movsb
cmp
xchg
dec
daa
adc
xchg
adc
sbb
or
stc
xchg
ds
inc
inc
pop
xchg
sub
iret
test
aad
add
sahf
inc
jl
adc
pop
inc
mov
mov
mov
les
adc
cmp
xchg
cmc
sbb
sbb
fistpl
mov
inc
lods
cmp
out
lret
and
push
mov
sahf
fcomps
in
les
mov
inc
and
lods
pusha
adc
sbb
ljmp
lcall
dec
xchg
idivl
sub
jb
iret
inc
adc
adc
enter
push
sbb
pop
xchg
adc
adc
pop
jb
nop
pusha
push
xchg
and
pop
mov
and
or
cld
pop
test
add
imulb
andl
mov
sub
jns
adc
pop
push
sbb
mov
das
xor
mov
sbb
cs
push
or
ja
in
fs
and
daa
push
push
lahf
cmp
mov
or
rorb
add
mov
add
xor
add
mov
jmp
xchg
cld
test
test
mov
push
mov
out
pusha
fcmovb
sbb
push
jmp
and
jo
xor
xlat
xchg
icebp
add
inc
repz
in
mov
sbb
in
xor
cmp
pop
sete
fchs
dec
xchg
out
loop
stos
dec
xor
mov
pop
jp
repz
sub
cli
cli
cli
add
mov
mov
and
daa
pop
xchg
test
and
arpl
in
mov
sub
mov
push
inc
addl
mov
sub
mov
sub
sub
add
push
sub
out
sub
stc
out
sub
inc
movl
jmp
dec
push
push
fstpt
push
and
sarl
and
xor
popa
sub
pop
adc
and
mov
das
lock
iret
mov
lock
adc
push
mov
pop
lea
dec
lods
ja
and
inc
add
dec
cmp
lcall
and
xor
and
add
jne
jno
mov
out
sub
mov
sub
sbb
rcl
arpl
push
stos
push
unpckhps
lret
aad
insb
and
inc
ds
sub
sti
jns
rolb
mov
xor
xor
scas
dec
dec
mov
add
add
mov
rol
lods
mov
mov
adc
cltd
add
mov
rcl
nop
sbb
fdivl
mov
sub
push
jl
inc
dec
and
fstp
mov
mul
add
sub
clc
and
fs
cmp
xor
rcrb
dec
lods
call
mov
inc
sbb
pop
push
popl
cmp
push
js
sbb
jae
mov
pop
imul
inc
fs
push
add
out
inc
pusha
mov
daa
inc
adc
das
adc
cld
mov
jne
pop
jg,pn
sbb
inc
mov
mov
shl
add
push
mov
and
icebp
rorb
cmpsl
adc
dec
cmpl
mov
jle
push
push
repnz
cmp
imul
jp
in
inc
adc
sbb
and
sbb
adc
xor
dec
xchg
jle
mov
pop
adc
push
fsubl
xchg
dec
stos
mov
pop
xor
in
cmp
xor
into
mov
leave
es
lcall
cwtl
test
ja
sbb
jecxz
and
jmp
push
les
mov
xlat
lahf
push
scas
les
adc
xor
mov
and
testb
add
inc
add
lods
andl
inc
pusha
cmp
jns
fcompl
xor
mov
les
and
lea
xchg
adc
addr16
mov
add
push
push
push
add
enter
sti
jno
or
shll
icebp
aaa
lret
fcmove
rolb
add
or
sub
cmp
or
dec
bound
add
xchg
dec
and
movsl
add
dec
mov
pop
fildll
push
and
pop
mov
std
adc
inc
add
pusha
shrb
mov
repnz
das
movsb
and
pop
popf
sub
pop
pop
dec
jmp
and
adc
sbb
pusha
inc
or
mov
push
icebp
rol
das
sbb
adc
and
pop
and
mov
mov
add
int
push
sub
push
sbb
leave
inc
or
sbbb
xor
dec
cli
pop
add
sub
js
popf
js
ret
inc
jnp
jae
xor
ret
xchg
popl
fsub
inc
stos
loope
mov
inc
cmp
aaa
ss
sub
push
push
fists
xchg
or
or
push
stos
or
xchg
pop
dec
or
pop
je
push
adc
or
or
add
mov
jmp
pop
pop
je
push
sub
cli
lret
add
mov
sbb
or
or
adc
out
and
repnz
data16
xor
in
jo
sub
and
or
and
loopne
push
adc
add
mov
xchg
mov
push
stc
add
pop
pushf
out
push
repnz
add
push
add
add
add
mov
or
inc
and
and
xchg
aam
pop
push
inc
lahf
add
push
rol
stos
mov
rcrb
sbb
les
roll
push
call
or
cmp
or
sbb
sbb
jne
pop
inc
sahf
dec
je
pop
or
adc
xchg
dec
add
adc
repnz
pop
jmp
fldcw
fs
push
cltd
and
jp
pop
xor
ds
mov
roll
push
or
push
jo
lods
push
jo
scas
clc
add
in
das
pop
popa
mov
or
stc
je
pop
jne
daa
or
cmp
in
xor
and
xor
subl
addr16
lcall
or
iret
movsb
xor
or
or
sbb
or
or
pop
and
aaa
sbb
sub
jb
mov
and
fwait
popa
fdivs
push
jecxz
hlt
lock
inc
js
or
mov
mov
in
adc
cmp
pop
and
mov
fadds
clc
sbb
jmp
mov
push
aaa
mov
push
mov
sub
das
repz
mov
fwait
orl
andb
push
decl
je
or
push
lea
clc
and
mov
cld
cmpl
add
out
adc
xor
jle
push
rcr
push
mov
icebp
push
mov
jmp
lea
in
push
push
mov
aam
dec
call
xchg
mov
rol
add
loope
jge
xorl
or
push
call
pop
inc
and
sbb
leave
test
adc
pop
dec
sarb
orb
mov
mov
ret
jle
nop
mov
pusha
repnz
and
dec
pop
ds
xchg
icebp
dec
adc
mov
pop
push
and
jecxz
sub
out
fdivp
and
sbb
popa
dec
pop
mov
je
sbb
movl
sbb
sahf
push
dec
sub
add
push
sub
lcall
jo
push
fisttpll
add
push
and
push
sbb
add
sub
push
arpl
inc
inc
inc
adcb
push
add
mov
xchg
ljmp
in
add
add
leave
adc
sbbl
add
and
push
subl
adcb
loop
xor
add
or
in
sbb
pop
jb
xorb
ljmp
insb
or
lahf
inc
ss
pop
mov
dec
sbb
dec
aad
mov
mov
inc
push
sub
xor
and
inc
cmp
aas
cmp
pop
inc
adc
enter
or
pop
jp
repnz
push
gs
jo
lahf
xor
lea
add
xchg
loope
ds
in
jecxz
fadds
xor
adc
mov
mov
shr
adc
push
push
push
jl
mov
pusha
sahf
push
sbb
xor
rolb
jecxz
gs
mov
ljmp
insb
mov
sbb
rclb
nop
daa
xchg
or
jmp
mov
pusha
mov
inc
mov
push
test
jge
cmpl
push
std
ss
aad
push
inc
es
ret
and
sbb
fistps
faddl
arpl
cmp
add
push
xchg
mov
jb
xor
add
add
mov
pop
aam
dec
pushf
or
movb
movsl
sub
cwtl
loope
or
int
jnp
adc
pop
push
scas
or
jecxz
stc
dec
and
dec
dec
and
jle
or
or
or
jl
loopne
pop
dec
das
mov
add
dec
in
adc
push
xor
fiadds
add
dec
je
mov
outsl
dec
mov
and
sub
lcall
adc
dec
in
sbb
xlat
cmp
dec
daa
lahf
mov
clc
xchg
rclb
pop
cmp
fldcw
jg
add
inc
sbb
push
lea
je
data16
add
movl
xor
inc
inc
add
andps
pop
mov
out
clc
cld
cmpb
adc
adc
mov
mov
add
mov
insl
adc
inc
cmp
cs
fbstp
scas
mov
cmp
loopne
fists
mov
movsl
sub
jecxz
sbb
add
mov
je
sbb
or
push
jo
pushl
xor
push
xchg
or
mov
imul
mov
xor
cmpsl
je
or
fimull
push
mov
pop
sahf
inc
pop
mov
sub
sbb
pop
mov
insl
mov
push
cmp
mov
rorl
xlat
aam
addl
ret
mov
clc
mov
cmp
jbe
cmp
xchg
or
sbb
in
xor
ret
jle
dec
mov
inc
mov
cmp
bound
push
pushf
push
add
push
push
flds
mov
add
jb
push
mov
ljmp
in
and
imul
clc
push
dec
sbb
subl
inc
enter
add
and
or
sbbl
lea
mov
push
push
cli
adc
dec
push
push
adc
mov
jge
sub
or
inc
data16
add
cmc
dec
xor
arpl
add
jecxz
push
mov
xor
inc
xor
mov
inc
je
daa
cmpsl
test
lcall
and
pusha
test
add
or
adc
clc
cmp
inc
iret
xlat
push
pop
inc
jl
daa
jmp
xor
cmp
cmp
aaa
in
sbb
cs
push
fs
adc
je
les
lock
cli
xlat
and
rorl
push
mov
popa
shrl
sub
mov
les
adc
push
inc
push
inc
add
inc
lods
push
dec
daa
addl
add
inc
int
mov
mov
sub
mov
out
jbe
lea
stos
pop
sbb
push
mov
mov
enter
sbbb
stos
push
pusha
jne
sbb
test
cmc
adc
inc
jge
pop
adc
movsb
out
inc
rclb
out
xchg
mov
cmp
cvtps2pi
call
outsl
push
adc
dec
or
xlat
pushf
inc
shrb
pop
pop
sub
cmc
mov
and
lahf
movsl
push
sub
shrb
mov
inc
fwait
cmp
mov
add
sti
mov
inc
add
inc
push
cmp
push
movsb
mov
dec
pusha
mov
mov
cmc
or
jmp
fisttps
xor
inc
inc
lcall
aaa
pop
aad
push
lods
sbb
ret
pushf
flds
nop
mov
sub
ficompl
and
adc
mov
mov
push
add
inc
or
fistps
sub
mov
mov
sub
add
mov
pushf
jo
jbe
jge
add
insl
mov
add
rolb
cmp
mov
scas
mov
lods
xor
and
pop
inc
out
decl
dec
int3
add
mov
cmp
and
testl
dec
movl
je
test
scas
jb
add
ljmp
or
xor
cmp
and
inc
mov
push
cmp
adc
add
popf
out
imul
inc
xchg
xchg
dec
ret
pop
loope
test
mov
xchg
inc
mov
loope
and
loop
adc
jae
and
push
sbb
dec
sbb
sbb
or
mov
sub
shlb
lahf
lea
xchg
lds
push
push
cli
mov
rcll
push
and
xor
flds
fmull
test
xor
mov
sbb
mov
mov
jnp
ljmp
or
adc
dec
fwait
mov
sub
or
or
push
dec
cld
cmp
push
pushl
push
push
jne
add
mov
mov
lock
orl
and
shlb
xchg
lods
rolb
mov
movsb
and
in
imul
dec
and
out
outsb
aad
add
push
push
mov
imul
push
mov
add
mov
or
shl
lret
mov
cli
cmpsb
ds
jge
add
rcr
pop
iret
test
cs
dec
dec
lods
popf
addr16
dec
aaa
sbb
cmp
loopne
adc
dec
dec
add
jnp
testl
dec
lock
out
add
incb
in
mov
jmp
add
or
or
and
or
and
mov
inc
lcall
cli
pavgb
jne
mov
push
push
call
aas
in
adc
push
push
pop
popa
outsl
cmp
jge
push
pusha
jle
mov
push
xchg
sbb
fcoml
mov
sub
fnstcw
pop
clc
jg
mov
xor
inc
jecxz
mov
das
add
jg
push
fcoms
lret
mov
aaa
add
inc
pusha
cmpb
aam
jnp
inc
cmp
jo
test
jae
xor
int
arpl
and
imulb
add
fsubrs
or
push
inc
or
int3
ss
ljmp
ret
jmp
scas
mov
mov
xchg
cli
xchg
jbe
add
adc
xchg
inc
cmp
sbb
inc
xor
clc
adc
std
vmulpd
push
sbb
inc
mov
add
adc
cmp
in
or
push
cmp
insb
xorl
cli
adc
inc
js
int3
rolb
add
loopne
add
mov
jne
or
aaa
orl
and
cmp
cmp
fdivrl
adc
or
mov
adc
mov
inc
or
decb
cmp
xor
sbb
or
cmovle
fstpt
ja
into
push
fucomip
std
add
mov
in
imul
aad
add
cmp
push
add
pushl
js
je
cmp
stos
mov
xchg
mov
mov
push
sub
movsb
mov
dec
adc
mov
jmp
xor
mov
stos
mov
cmp
cmpl
sbb
sbb
mov
mov
jnp
cwtl
or
adc
out
das
call
sbb
pop
jns
lods
outsb
or
xchg
push
jle
pop
ret
pop
movzwl
sub
xchg
add
leave
call
dec
add
jmp
adc
adc
js
addb
lock
push
movsl
mov
nop
clc
dec
jecxz
add
stos
or
scas
jl
or
mov
cmpsb
jl
lcall
adc
dec
adc
sbb
addr16
sti
xor
mov
mov
and
fiadds
test
bound
mov
mov
add
adc
mov
and
mov
push
dec
sub
xor
jg
push
add
movsb
or
cmc
sub
sar
inc
lea
sbbl
sahf
lea
push
push
aaa
pop
mov
out
test
adc
sub
push
pop
stos
pop
cli
movsb
cli
clc
pusha
jle
inc
and
push
into
ret
adc
cmp
jbe
pusha
cmp
mov
adc
setl
jb
pop
lcall
sahf
shl
sub
pop
or
dec
data16
movsl
jne
xchg
ljmp
dec
in
call
push
ljmp
xor
out
sbb
pushf
andb
push
pop
adc
mov
sbb
mov
or
aas
test
in
adc
add
xor
js
jge
je
pop
lock
inc
aam
push
rolb
push
rclb
mov
test
lods
cmpsb
sbb
nop
mov
add
dec
shrl
mov
xor
in
sbb
dec
xor
dec
test
pusha
pop
and
add
fstpt
mov
xchg
adc
sbb
push
add
js
adc
adc
ror
jmp
inc
cmp
pop
add
push
mov
adc
inc
clc
add
fmull
or
dec
add
mov
aam
ljmp
adc
dec
fs
or
push
push
sub
cmpsb
adc
inc
rclb
push
sub
sbb
cltd
inc
push
xor
cmp
inc
or
lods
push
add
bound
fwait
lods
mov
shl
pusha
mov
jle
enter
scas
add
stc
test
je
pop
sbb
push
xor
addr16
sbb
jg
aam
mov
or
sbb
sub
xchg
mov
cld
dec
pop
push
pop
and
mov
in
sti
loop
hlt
add
or
mov
bound
in
loop
and
add
push
popa
inc
in
sbb
or
inc
add
sub
mov
dec
add
pop
sub
push
add
mov
notb
push
lock
push
outsb
inc
or
push
add
pop
mov
adc
pop
cltd
inc
cmpsl
or
fbld
xor
mov
add
push
mov
test
mov
out
scas
adc
dec
sbb
loop
add
adc
mov
inc
add
jl
inc
pushf
push
movsl
push
repz
or
loop
fwait
cmpsb
es
imul
lea
pop
cmpsl
fwait
push
add
cmp
fxch
add
ret
xor
in
mov
pop
das
fmull
pop
movsb
adc
scas
hlt
pop
stos
sub
insb
push
fcoms
gs
mov
or
in
je
xor
add
in
dec
roll
or
sub
jmp
pop
mov
fsubrl
out
das
popa
in
mov
aad
aam
in
push
jno
in
mov
mov
pop
add
shll
jge
mov
in
lea
push
lea
fdivrs
notb
jge
mov
jmp
cld
adc
retw
lea
imul
pop
rol
add
test
push
test
or
mov
sbb
dec
sbb
cld
add
push
insl
testl
jp
push
mov
jmp
ret
fldl
xor
aam
ret
nop
push
sub
int
fwait
sub
aad
pop
and
xor
fstl
out
mov
pop
inc
clc
push
loope
mov
outsb
popl
dec
cmp
jg
movsl
test
cmp
cmp
cmp
add
sub
mov
outsb
out
jge
sub
sub
mov
mov
xchg
dec
adc
fnstsw
mov
pop
or
pop
add
out
pushf
inc
mov
cli
fistpll
adc
mov
adc
mov
rol
and
loop
add
inc
add
mov
imul
cwtl
add
xorl
cmp
mov
push
js
mov
cmp
jae
add
shll
pop
dec
sub
ret
sbb
sbb
lcall
mov
add
or
std
pop
push
xor
divl
pop
cmp
mov
addb
mov
mov
add
pop
stos
and
mov
cmp
add
push
or
cmp
test
push
push
push
mov
adc
fcompl
into
mov
mov
sbb
cmp
in
adc
push
imul
mov
into
movsb
xor
test
sahf
loope
sbb
inc
cs
addb
loope
sbb
add
sbb
cmp
mov
add
push
push
clc
loope
pop
xchg
jbe
outsb
cmp
in
test
fistps
or
sbb
lds
sbb
xchg
push
sbb
push
cmp
dec
or
movsl
fcompl
mov
sahf
call
sub
push
data16
add
sti
jmp
mov
testb
xchg
jbe
inc
sub
sub
loope
or
lea
into
jp
stos
jne
push
mov
pop
in
jns
mov
adc
sub
mov
cmpl
mov
hlt
incb
je
add
sub
fs
jp
xor
push
faddl
je
and
and
sub
inc
ror
pop
push
jb
repz
rolb
jecxz
pop
filds
out
out
shrl
push
andl
insb
or
mov
add
add
mov
rcrb
push
xor
ret
add
or
mov
add
xor
cmp
iret
repz
test
es
add
mov
mov
cmp
jp
push
fisubl
lods
rcrl
xor
mov
xchg
push
loope
inc
mov
xchg
xchg
sub
inc
stos
fs
cli
cmovno
push
test
data16
or
sahf
push
add
pop
ret
lahf
mov
les
adc
inc
cmpl
add
dec
pop
add
mov
cmpsl
sub
in
cmp
je
push
stc
lock
jmp
lea
xor
push
in
inc
hlt
push
push
rcll
inc
push
jbe
imul
push
mov
mov
rcrl
cwtl
or
push
add
add
adc
jnp
push
lahf
out
sarb
sbb
xchg
cmpl
cwtl
push
test
adc
repnz
xchg
lds
xchg
and
outsl
cmp
sub
mov
lock
dec
dec
pop
pop
repnz
adc
inc
push
movsb
dec
sarb
test
std
sbb
dec
xor
pusha
push
cmp
sbb
add
inc
fnsave
cmpb
add
mov
pop
push
dec
popl
add
data16
push
jne
push
pop
or
and
jbe
sbbl
pop
push
push
or
or
js
movsb
inc
rorb
mov
loopne
jg
test
fs
inc
fiaddl
adc
roll
imul
js
fsubs
dec
add
pop
shlb
cmp
cmp
cmp
orb
stos
imulb
shl
mov
mov
insb
imul
sahf
testb
or
mov
adc
mov
add
and
and
push
rcr
ret
scas
mov
cmc
push
push
fs
xchg
iret
mov
push
xlat
rorl
sub
ss
jle
push
es
lcall
or
pushf
push
cli
inc
push
push
aad
cmp
jne
add
jnp
call
mov
cmp
je
inc
add
add
inc
jl
fwait
mov
mov
aas
xchg
test
adc
in
imul
sbb
xchg
and
fnstcw
popa
jb
and
inc
popa
sub
leave
data16
dec
xchg
pop
and
daa
xorb
mov
sub
jbe
imul
xor
js
sub
cmp
jae
dec
sbb
add
std
pop
inc
jle
loope
sub
adc
scas
cmp
adc
call
in
jb
adc
cmp
test
mov
xor
xor
inc
jmp
out
adc
adc
xchg
subl
and
xor
push
or
sbb
mov
mov
andl
pop
mov
pop
push
adc
adc
jne
push
mov
cmp
or
cmp
and
lret
dec
mov
mov
mov
inc
cld
mov
xchg
daa
mov
xchg
push
out
lea
xor
or
xor
pop
cs
cmp
or
ret
pop
dec
inc
rorl
je
imul
mov
and
call
mov
fiaddl
sbb
mov
shr
mov
dec
mov
cltd
scas
inc
rolb
inc
adc
xor
inc
cs
icebp
punpckldq
add
push
cs
inc
pop
sub
sub
push
mov
mov
mov
fisttpl
mov
fldt
aas
mov
or
in
adc
arpl
push
sbb
int
and
xor
jbe
sub
pop
imul
pusha
mov
jb
push
mov
xchg
add
int
pushf
lds
jne
add
sahf
pop
mov
loopne
scas
sub
jle
popa
mov
add
das
inc
mov
add
cmp
sbb
jge
or
mov
pop
jp
or
pop
sub
push
dec
adc
inc
or
mov
xchg
in
stos
inc
adc
jge
add
pushf
daa
adc
mov
ffreep
jne
inc
insl
cmp
mov
inc
and
add
dec
pop
call
inc
dec
jne
dec
loopne
or
out
xchg
add
int
lret
add
inc
adc
xor
mov
add
push
and
js
inc
sub
setne
decl
mov
mov
insl
jo
repnz
push
or
pushf
jne
push
push
pusha
pop
movb
rorb
push
sbb
mov
or
lock
add
cmp
into
mov
sub
mov
adc
ja
dec
mov
nop
rcrl
cmpsb
fiadds
sti
xchg
ljmp
jne
jns
mov
pop
jmp
jne
cmp
aam
inc
loopne
sub
pushf
orb
or
nop
sbb
js
add
push
or
bound
pusha
clc
or
or
rcr
data16
out
pop
inc
bound
jb
movsb
aas
xchg
xorb
jae
and
jmp
outsb
push
inc
jge
test
inc
dec
in
ds
mov
lret
sbb
sbb
adcl
sbb
cmp
sbb
mov
adc
jns
or
xchg
xchg
xchg
into
je
jge
dec
sub
push
mov
mov
cmp
nop
loopne
ss
jbe
or
xchg
adc
sub
es
not
loope
loope
push
pop
ret
stos
push
aas
cmp
pusha
push
and
je
call
ja
jae
mov
adc
shlb
add
sub
jae
loop
fists
subl
test
or
push
incb
and
mov
mov
adc
rcrl
ss
sbb
xor
push
sub
jmp
ss
adc
jp
out
adc
daa
mov
xor
sbb
fimuls
mov
rorb
mov
fadds
adc
inc
jo
inc
cmp
dec
outsl
sbb
jl
jmp
incb
lea
add
movsl
mov
pusha
jg
pop
loope
mov
enter
push
mov
mov
mov
or
sub
orl
mov
xchg
add
pop
and
mov
sbb
push
xor
cmp
ja
lahf
pop
or
outsb
add
es
sahf
pop
sbb
imul
add
mov
adc
and
and
or
sbb
sbb
sbb
out
xor
and
xor
shr
add
mov
cwtl
add
add
sbb
les
std
push
testl
push
jb
loope
add
inc
mov
inc
and
inc
add
cwtl
pop
arpl
add
sub
xchg
inc
xor
push
mov
ret
xchg
out
jo
push
adc
mov
test
xchg
xor
add
rcll
jg
dec
sbb
movzbl
sbb
rolb
inc
cmp
inc
jb
jae
push
push
je
mov
int3
or
xor
push
adc
or
cmpsl
and
js
mov
dec
adc
cld
mov
and
jmp
mov
cmpb
ljmp
jb
sbb
inc
test
fistps
add
stc
les
sub
mov
xchg
jmp
test
ret
or
add
push
sbb
orb
shll
pop
xchg
sbb
xor
sbb
sbb
push
scas
mov
dec
ret
je
add
mov
mov
ret
pop
add
mov
sbb
mov
lds
jl
adc
test
add
popf
aam
movb
roll
lock
mov
jo
adc
fdivr
ret
test
sbb
xchg
leave
mov
iret
ds
or
fmull
loop
inc
lea
pop
xlat
adc
sbb
shrb
jmp
mull
sahf
add
daa
aaa
cmpsb
test
sbb
jae
fildll
rcll
and
cmpb
add
dec
cmovle
cmp
out
xor
daa
inc
mov
rcll
dec
sub
sbb
xor
add
repz
inc
or
fcoml
lods
cmpb
inc
pop
dec
jo
sbb
sbb
cmp
and
xor
lea
loopne
pop
pusha
cmp
mov
and
fcoms
cwtl
pop
push
push
push
call
loopne
xor
test
pop
int
or
sarb
cmp
daa
rcll
je
nop
cmp
aaa
loopne
jmp
js
pop
loope
pusha
addl
loope
adc
out
mov
cmc
cmp
jge
jno
xchg
fsubl
mov
fsubs
inc
jle
sub
cmp
mov
push
fistpll
or
lds
sbb
dec
pop
pop
and
add
movl
cmp
inc
enter
sti
inc
cmp
mov
aam
jle
test
mov
scas
enter
inc
out
repnz
test
sub
rcll
pop
add
dec
rorb
clc
jg
inc
lcall
push
test
inc
push
push
push
jne
mov
jns
jae
sbb
inc
imul
push
or
ret
aam
xchg
pop
rclb
popf
add
dec
shr
add
je
and
lret
sbb
pop
add
in
push
xor
mov
or
xor
add
jns
mov
mulb
add
and
lea
sub
xor
push
cmp
push
push
push
xchg
jno
xor
add
cmc
inc
sti
push
sub
loope
mov
push
sahf
pop
cmpsb
mov
test
adc
cmp
cmpb
lahf
or
jle
xor
sub
adc
ja
xchg
xor
mov
repnz
sbbl
jmp
fsubrs
pop
mov
push
add
movsb
loopne
das
test
and
cmc
pushf
sbb
test
mov
sarb
ret
jbe
adc
xor
cmp
mov
out
jb
pop
pop
dec
pop
xchg
movsl
push
neg
adc
jl
fsubrs
rclb
adc
add
pop
inc
in
adc
push
je
add
icebp
aam
ffree
add
bound
push
ja
jp
and
or
and
lods
aas
je
pop
mov
jmp
pop
js
clc
shll
pop
xorb
call
call
fiadds
push
push
add
and
cmpsl
mov
outsl
std
jmp
pop
popf
stos
pusha
or
paddd
lea
cmp
cltd
sub
jmp
sti
jl
dec
dec
cld
xor
shrb
xchg
xor
lcall
cmp
adc
cmp
sub
jecxz
dec
call
mov
outsb
mov
add
inc
bound
sub
std
mov
leave
inc
cmp
jae
mov
add
cmp
ret
jmp
or
xor
icebp
sub
ljmp
flds
jmp
loope
sub
clc
jae
lea
or
cmpb
jne
cmpb
jne
lds
sti
rcrb
imul
insl
dec
neg
mov
incb
les
sbb
out
pushf
sbb
mov
cmpb
stos
addl
and
dec
or
pop
stos
inc
add
out
and
push
test
sbb
imul
outsl
add
es
push
ja
push
add
nop
pop
inc
aad
gs
jmp
imul
in
xchg
data16
jno
push
push
push
addr16
je
pushf
movsl
or
mov
clc
lret
mov
xchg
daa
jp
mov
fnstsw
adc
ret
outsl
cmp
out
push
jno
lahf
divl
add
fwait
push
mov
aas
cmp
loop
cmp
fcoms
imul
insb
and
je
adc
jno,pn
mov
flds
rclb
adc
add
into
cmpw
mov
and
jmp
aam
lahf
jno
stos
and
inc
pop
nop
jecxz
ja
iret
fcomp
xor
pop
js
cmp
xchg
push
or
sub
xor
bts
xor
fwait
add
mov
push
lods
xor
movsb
jne
inc
jmp
shll
mov
mov
sahf
xchg
xchg
inc
adc
popf
jmp
or
mov
add
ret
push
jae
aam
sbb
jo
sub
je
or
pop
push
sbb
lcall
leave
ja
insb
push
lea
sbb
inc
mov
hlt
negb
push
ds
sbb
fstl
sbb
dec
stc
jo
add
mov
lret
cmpb
je
sbb
mov
jmp
push
xor
sub
ljmp
mov
ficomps
mov
inc
out
mov
leave
movb
sbb
add
cmc
add
ljmp
mov
xchg
pop
push
lea
sbb
add
jge
scas
push
sub
mov
adc
mov
mov
decb
mov
mov
sub
pop
inc
push
loop
sub
dec
mov
jno
lea
fisubrs
jecxz
mov
jge
mov
push
inc
dec
in
out
orb
roll
add
jp
mov
movsb
push
aaa
add
inc
sbb
lea
mov
ss
add
mov
orb
fsubr
pop
push
inc
jge
mov
movsl
cmp
test
push
scas
adc
inc
cwtl
inc
push
sbb
inc
and
cmp
pop
loopne
rcl
pop
jno
sub
push
push
lret
hlt
push
inc
xor
ret
push
and
xor
jo
fdivs
or
cs
or
xchg
mov
push
pop
pop
dec
repz
inc
jno
adcb
and
repnz
lretw
or
test
jge
lret
jnp
or
jl
cmp
cld
adc
adc
into
inc
adc
or
pushf
xchg
test
jmp
orps
xchg
push
push
clc
or
movsb
dec
cmp
clc
sub
jl
scas
aas
mov
pop
jae
xor
add
ljmp
or
lahf
mov
je
xchg
push
ljmp
lahf
adc
jb
cmp
mov
xchg
test
test
call
push
xor
std
hlt
adc
push
or
scas
imul
adc
jbe
mov
mov
xor
aam
andb
xor
adc
test
pop
std
out
leave
xchg
pop
mov
mov
addr16
and
push
xchg
sbb
mov
push
adc
popa
jmp
mov
sub
xorl
lock
xorl
jl
pop
xchg
xchg
mov
lea
inc
xor
push
ret
stos
outsb
push
cs
call
outsl
or
push
dec
mov
push
add
jo
xor
stos
add
and
and
sub
mov
mov
push
inc
adc
mov
mov
lahf
fisubrl
push
call
orb
test
push
and
lock
dec
mov
rcrb
pop
and
mov
push
dec
outsb
pop
pop
and
outsl
arpl
outsl
roll
fidivs
push
std
leave
inc
sbb
jbe
mov
rorb
cltd
inc
std
xchg
je
mov
pop
insb
or
jg
sbb
insl
mov
mov
rcr
sbb
pop
pop
pop
push
or
mov
xor
aaa
mov
lahf
push
or
or
inc
cmpl
adc
mov
push
loope
gs
cs
inc
cmp
jb
cmpsb
lock
sub
xchg
sub
cs
loop
mov
add
js
ficoms
mov
sbb
push
shrb
jmp
rolb
out
test
aaa
in
adc
adc
fs
sub
imul
loopne
or
pushf
sbb
xorb
mov
sarb
cmp
jbe
lds
mov
mov
inc
inc
pop
lahf
inc
cli
outsb
or
test
sub
cmp
movb
add
inc
loop
stos
push
xchg
test
cltd
cmpsb
rcrb
adcl
arpl
xor
or
cltd
jns
or
fs
popf
loop,pt
sub
xor
sbb
repnz
dec
sbb
xchg
or
mov
mov
add
add
adc
enter
sub
mov
or
das
cmp
add
gs
add
mov
cmp
cld
add
add
fldl
rcrl
imul
test
or
dec
push
jge
mov
jge
rorb
shlb
xchg
adc
hlt
push
push
or
rcrb
fldl
outsb
push
mov
and
scas
cmpsl
xchg
js
add
dec
hlt
push
hlt
fbstp
jl,pt
push
jg
cmpb
mov
lock
xor
daa
scas
xor
sub
and
mov
and
sbb
daa
ret
inc
aam
push
mov
dec
or
add
or
mov
clc
xchg
dec
mov
enter
test
pop
es
sub
dec
movups
fcoml
mov
xor
sbb
adc
pop
xor
and
jl
add
mov
mov
rcrb
xor
ret
je
xor
jo
xchg
fcoml
inc
fcmovbe
push
pop
jns
add
lds
mov
inc
or
test
inc
mov
push
inc
add
and
ljmp
xor
mov
push
es
add
or
movsl
add
adc
mov
popf
test
loope
test
fdivr
push
lea
cbtw
and
mov
gs
pop
jmp
push
jg
jecxz,pn
sti
xor
mov
add
or
sub
stc
shlb
dec
andl
into
jecxz
push
or
aad
pop
je
lret
add
mov
enter
add
repnz
jns
add
push
scas
pop
leave
xchg
or
mov
popf
adc
popf
cmp
mov
out
or
mov
jne
sub
sub
aas
inc
inc
push
push
fnstcw
and
push
pop
xlat
lock
xor
lods
out
lods
add
add
mov
movsb
dec
fildl
xor
and
xor
sub
adcb
shlb
cltd
or
adc
push
adc
incb
add
pop
push
xchg
sub
mov
sub
jne
sub
sub
sbb
icebp
test
out
mov
in
mov
xor
mov
fsubrs
xchg
pop
pushf
push
inc
iret
cmp
jne
inc
push
add
cmpl
xor
cwtl
mov
outsb
shrb
add
insb
shll
mov
dec
xor
inc
or
pop
lcall
pop
pop
dec
xchg
ret
xor
cmp
sub
pop
and
mov
pop
pop
adc
loopne
sbb
mov
je
daa
insb
add
dec
sbb
loope
jecxz
or
pushf
inc
sub
inc
mov
adc
repnz
dec
gs
and
and
inc
je
movsb
sbb
lea
sbbl
js
movb
fsub
jnp
xchg
clc
bound
push
inc
mov
and
dec
sbb
pusha
pop
es
rorl
loop
push
int
leave
sti
cmc
mov
fsubr
pop
mov
jnp
and
sub
test
push
in
sub
xchg
repnz
js
add
add
adc
ja
dec
push
int3
sub
or
mov
fistl
push
fildl
ss
ds
or
push
push
out
push
dec
sahf
and
mov
lea
adc
push
and
or
pop
or
jmp
mov
mov
add
lret
scas
adc
adc
xchg
inc
add
push
add
sbb
or
add
sbb
ds
push
adc
pop
add
inc
repnz
andb
mov
rol
daa
data16
add
cmpsb
pop
cli
and
mov
cs
lahf
cmp
sbb
in
shll
or
adcl
and
inc
lcall
sbb
sbb
adc
leave
adc
jg
push
pop
xchg
add
in
sahf
mov
out
popf
jbe
pop
filds
inc
faddl
cmpb
popf
sbb
aad
jecxz
adc
mov
pop
or
and
aad
pop
enter
push
test
cmp
aaa
dec
loope
sbb
adc
pop
sbb
and
dec
insb
mov
outsb
sbb
xor
fidivrs
sbb
adcb
add
add
jl
push
mov
dec
add
push
rolb
shlb
movsb
pop
aas
mov
scas
test
and
sub
add
jne
adc
push
inc
imul
pop
ret
pop
inc
xchg
clc
mov
xor
sub
scas
and
push
pop
xchg
into
imul
cmp
scas
or
add
repnz
inc
adc
add
or
and
and
rcrb
jbe
mov
les
dec
and
inc
in
push
jbe
and
mov
adc
jns
jl
push
add
push
xor
add
or
mov
dec
pop
fildll
movsb
inc
mov
scas
or
jno
or
mov
fisubl
pop
mov
lods
lds
mov
push
add
mov
dec
sub
adc
sbb
push
sbb
adc
mov
cmp
mov
xchg
and
lods
sub
test
fwait
test
pop
sbb
fdivrs
push
and
rorb
adc
inc
imul
push
add
adc
dec
ss
xor
adc
int
adc
jmp
jp
and
mov
shlb
sbb
or
adc
sub
push
pop
inc
adc
lea
cmpb
test
cmp
fmuls
adc
outsl
mov
and
cmpsl
mov
adc
sbbb
cmpl
mov
js
xchg
lea
jne
fcomps
jo
sub
dec
call
mov
lods
xchg
fistpll
or
hlt
and
mov
pop
test
push
aad
scas
or
jge
push
adc
adc
repz
sub
inc
imul
cs
xor
push
xchg
sbb
shll
fmul
pop
pop
xchg
jo
sahf
in
inc
loopne
xor
mov
inc
and
arpl
int
adc
jl
fdivrs
sub
cmpsb
pop
inc
or
test
add
xchg
add
jmp
lret
cmp
pop
or
or
add
dec
je
push
or
andps
int3
leave
mov
rcr
mov
jne
insb
dec
movsl
mov
pop
pop
inc
aad
push
or
add
push
and
cwtl
push
adc
popa
sub
add
mov
mov
push
sub
ja
add
mov
dec
scas
ret
cmpsb
cmpsl
ja
sbb
xchg
fcomps
add
xchg
aad
push
xchg
cmp
or
fcoml
push
aam
cmp
rcr
addr16
jl
and
je
jno
gs
sbb
or
push
repnz
and
adc
pushf
and
sbb
inc
shlb
dec
cwtl
adc
nop
or
sbb
pop
inc
jl
mov
je
loop
lock
push
push
test
test
addl
pop
dec
sarb
sub
add
or
jb
jne
cmp
mov
cmpsb
divb
pop
push
sbb
lods
add
pop
push
les
xor
mov
mov
add
jo
push
into
cld
pop
movsb
push
pusha
xchg
sbb
xlat
jae
and
cmpl
dec
popf
mov
jl
push
js
lret
shrl
lcall
push
mov
lret
add
mov
mov
jle
xchg
pushf
or
sbb
add
fs
cmp
sub
and
jge
dec
mov
je
pop
add
dec
popa
enter
sub
push
test
rcrl
sbb
xchg
mov
add
add
push
jb
xor
and
jl
jo
push
add
adc
pusha
or
stos
mov
in
jns
or
shr
loopne
xor
mov
cmp
inc
add
adc
jecxz
lods
push
test
mov
add
push
das
and
cmp
lcall
add
in
int3
int3
add
push
sbb
jmp
sar
int3
je
jne
mov
into
loope
je
sub
push
jmp
insb
xchg
or
mov
sbb
cmp
sbb
pop
xor
loopne
xchg
add
adc
pushf
inc
push
sub
jmp
js
and
push
call
ret
je
sub
xor
add
mov
inc
pop
pop
inc
bound
int
xor
fisttpl
inc
test
push
test
ficoms
or
jns
cwtl
sbb
xor
and
pmulhuw
ljmp
pop
sub
sbb
add
sti
andl
cs
sbb
sub
push
or
sbb
push
and
mov
andl
pusha
jge
js
add
dec
mov
addb
xor
push
sub
popa
mov
push
fists
lret
imul
mov
xor
or
inc
pop
ret
xchg
movsb
push
es
sub
or
fldcw
pop
mov
push
add
sbb
sub
xor
test
sub
sub
sbb
adc
push
clc
pop
adc
jl
adc
sbb
adc
cli
or
pop
mov
nop
xchg
ucomiss
or
push
lret
xchg
cmpsb
lock
enter
xchg
stos
test
addl
xor
mov
push
mov
out
mov
cmp
xor
cmp
add
add
sub
mov
inc
mov
sbb
sub
cmpsb
mov
mov
mov
lcall
push
mov
sbb
xchg
dec
and
and
push
add
icebp
adc
or
ss
sbb
add
cmp
jae
and
popf
push
ja
pop
loopne
adc
cmp
sub
and
push
push
push
pcmpeqb
or
or
or
pop
cld
cs
testb
clc
add
je,pn
xor
add
das
int
rcl
es
jmp
inc
add
cmp
jl
pop
aas
popa
testb
outsb
mov
aaa
test
lcall
pop
sub
dec
adc
pop
cmp
cmpl
movb
or
addr16
fs
ret
pop
mov
mov
inc
enter
jo
inc
xor
mov
xchg
test
adc
pop
clc
or
mov
mov
ss
mov
push
dec
add
sub
inc
test
clc
pushf
lret
mov
and
add
and
dec
add
inc
cmp
xchg
cmp
mov
adcb
add
jo
inc
add
xchg
lret
xor
cwtl
mov
aam
std
mov
lock
sahf
mov
sbb
pop
cmpsl
lea
subl
xor
sub
js,pn
and
add
push
and
sub
xor
loope
adcl
adc
dec
or
test
aas
stos
clc
cmp
loope
push
push
dec
or
jns
pop
push
cmp
clc
mov
cmpl
popa
sarb
or
test
in
push
gs
data16
inc
ja
adc
adc
sbb
andps
es
sahf
or
adc
push
ret
adc
or
in
pop
pop
adc
jae
mov
daa
sbb
push
add
push
fs
lds
jbe
dec
or
repnz
sbb
outsl
adc
bound
adc
loope
inc
loop
mov
or
cmpsl
mov
addb
mov
inc
cmp
jge
sub
mov
inc
hlt
adc
sub
adc
fisttpll
mov
and
out
lea
cmp
lock
push
movsl
arpl
inc
jo
jo
sbb
cmp
in
xor
enter
or
test
xor
push
inc
xor
je
inc
xlat
stc
hlt
mov
sub
add
cmp
sbb
loopne
pop
pusha
enter
pop
mov
and
mov
fs
mov
jns
add
mov
push
mov
js
add
imul
push
sub
test
jae
push
adc
pop
test
lret
dec
sub
inc
push
mov
inc
dec
adc
sahf
stos
in
adc
push
or
mov
movsb
imul
and
add
xor
popa
lods
mov
push
sbb
xchg
or
xchg
mov
dec
cmp
mov
loop
ficomps
cwtl
adc
outsb
sti
adc
add
jns
xchg
cmp
and
test
movsl
inc
sarb
inc
es
and
xor
add
adc
mov
mov
add
jmp
sahf
xchg
add
fdivl
stos
push
sar
outsb
pop
and
push
cwtl
orl
xor
or
xchg
add
sbb
add
inc
sub
and
sub
lret
or
or
adcb
cmp
xchg
add
test
inc
sub
dec
push
dec
push
add
adc
insb
dec
sbb
je
xchg
pop
and
insb
lea
xchg
jbe
mov
rolb
xor
xchg
xor
xor
inc
enter
bound
negb
mov
or
mov
mov
fsubrs
push
movl
jg
pusha
add
pop
mov
add
in
arpl
jbe
lods
sub
fwait
and
cmp
add
adcb
sub
xor
sbb
lea
gs
bound
sbb
inc
jae
shrl
vcvttpd2dqy
imul
rclb
int3
imul
shlb
xchg
xchg
and
sbb
xor
cmp
insb
setne
inc
fs
rorb
dec
or
and
and
cmp
or
pop
sub
push
rorb
and
and
or
add
rorb
adc
add
mov
mov
sub
stos
addl
xchg
sub
add
add
add
mov
in
sbb
xchg
xor
and
les
sbb
mov
inc
sbb
add
sub
add
je
rcrb
mov
sbb
jmp
jg
pop
sbbl
jne
orl
shlb
add
sbb
lea
push
mov
cmpsl
add
push
jne
lea
push
ficompl
xor
and
addb
jns
pop
mov
lods
shrb
cmp
and
sbb
shlb
sbb
sub
inc
push
mov
insb
or
addb
push
and
enter
sub
insb
arpl
add
sbb
lcall
call
sub
sub
sub
mov
add
sbb
sbb
push
sbbl
push
std
push
testb
sbb
mov
inc
xchg
movsb
xor
mov
add
push
mov
jge
push
push
mov
add
push
pop
jo
mov
lock
and
addl
inc
xchg
ret
hlt
daa
jmp
pop
dec
jl
push
pop
iret
fwait
push
mov
test
sub
inc
dec
fildll
xchg
mov
sbb
stos
cmpsl
or
pop
imul
jns
int3
repnz
push
add
sbb
mov
mov
mov
lcall
inc
dec
nop
lret
or
or
push
dec
xchg
test
inc
cmc
cmp
pop
mov
push
or
add
rolb
jl
clc
add
push
test
fadd
sahf
popa
cmp
xor
xchg
sahf
gs
je
test
push
inc
add
dec
inc
call
and
je
sbb
test
sub
xor
add
stc
sbb
mov
lea
push
push
fisubl
or
nop
push
inc
add
fildl
cmpsb
movl
test
cmc
jae
out
add
ss
or
sub
sbb
lods
xor
and
mov
cwtl
das
inc
ret
cs
enter
movsb
rcrl
or
jg
xchg
add
xor
sarl
js
adc
lock
xchg
gs
and
mov
dec
in
lods
and
xchg
dec
mov
mov
dec
cmpsb
sahf
xlat
insl
xchg
mov
cmp
xlat
lods
call
adc
push
ret
call
xchg
loopne
loopne
push
push
mov
add
je
cli
sub
pop
adc
inc
in
js
sub
pusha
sarb
cmpsl
icebp
and
into
and
mov
fs
sahf
lea
add
sbb
adc
outsb
insb
ret
shr
and
sub
add
pop
call
dec
fmul
out
xchg
popa
adc
pushl
push
push
ficoms
outsb
jp
cld
nop
daa
add
or
cmp
iret
cvtdq2ps
pop
jo
mov
addr16
insl
and
out
and
mov
daa
add
pavgw
or
xchg
sti
xor
insb
xor
cmp
or
lea
lahf
push
mov
lea
fstpl
mov
clc
fsubr
adc
sbb
push
add
pop
in
imul
test
cmp
mov
fdivr
testb
xchg
shlb
clc
daa
sar
sbb
jge
jae
push
lsl
jmp
mov
xor
or
fsubs
dec
push
ljmp
into
sarl
mov
addb
std
push
and
inc
in
or
dec
stos
push
xor
jl
xlat
push
rclb
xor
inc
rolb
xchg
xor
jmp
pop
pop
inc
add
fs
inc
push
imul
and
pop
xor
or
inc
push
and
cmpl
dec
and
roll
push
fs
jnp
test
fidivs
add
loopne
sbb
or
dec
or
sub
pop
jne
xchg
lret
adcl
ljmp
and
xlat
or
xchg
or
push
dec
syscall
imul
push
leave
add
adc
mov
pop
and
pop
mov
inc
push
pmulhw
sub
dec
adc
adc
dec
adc
dec
mov
adc
sub
insb
pop
movsb
add
sahf
je
jns
dec
fs
cmp
test
adc
sahf
and
xchg
lret
loope
inc
jl
adc
ja
sub
and
je
xor
shll
cmp
and
jo
or
add
xor
mov
gs
mov
and
movsb
xor
sbb
sub
add
leave
jo
fs
and
nop
jg
cmp
xchg
fcmovu
sub
je
jae
loope
or
xchg
lea
out
cmp
dec
daa
imul
movsl
sbb
lea
test
push
jno
inc
add
mov
xor
dec
jge
dec
jo
rcrb
jle
dec
int
jb
sbbl
cmp
sub
sbb
jmp
adc
movsb
sbb
imul
movsb
pop
push
and
sbb
xor
daa
pop
inc
inc
cmp
or
push
sub
ret
rclb
inc
imul
sbb
cmp
sbb
dec
add
sbb
sbb
jns
out
pop
rcrb
stc
in
filds
adc
xchg
lret
pop
shll
out
add
nop
dec
push
pusha
push
in
fs
sbb
nop
pop
pusha
sti
add
pop
leave
aad
push
pusha
pop
mov
push
cltd
xchg
mov
data16
mov
dec
pop
push
ret
inc
mov
lret
jp
fstpl
imul
pop
lea
jo,pt
rcll
or
adc
dec
pop
mov
push
dec
insb
push
dec
jl
jo
push
dec
mov
test
jmp
and
sbb
outsl
bound
add
sub
outsl
sbb
xchg
mov
and
dec
or
push
jecxz
insl
outsb
or
xchg
ret
sbb
mov
cmp
mov
cs
movl
ds
xchg
and
adc
cmp
inc
sub
scas
xor
push
sbb
adc
mov
int3
jp
adc
lods
mov
dec
cmp
mov
dec
or
push
clc
jl
mov
or
rcrb
xchg
xchg
cmp
dec
popf
pop
pop
push
dec
dec
jne
jle
dec
sub
shlb
jmp
and
jecxz
push
cmp
pop
add
or
mov
sbb
ffree
aas
xchg
fbld
add
push
push
lret
mov
ja
add
addl
adcl
nop
mov
call
mov
pop
pop
dec
mov
add
pop
xor
addl
adc
cmpsb
and
pop
jle
stc
dec
aam
rolb
fdivrs
dec
daa
or
js
je
or
inc
rcrb
cmp
inc
add
push
inc
movsb
jns
jmp
ret
daa
dec
add
inc
xor
sub
and
in
jns
push
mov
loop
inc
and
imulb
lcall
mov
mov
cmpsb
cmp
mov
jo
loop
jp
fisttpl
dec
xor
fisttpl
push
dec
xchg
jnp
jne
adc
pop
decl
fiaddl
inc
mov
push
sub
inc
insb
adc
push
aas
sbb
loopne
mov
and
test
mov
rorl
sbb
inc
lcall
and
pop
mov
rorl
outsl
sub
jb
pop
cltd
lret
adc
je
or
push
add
sbb
or
imul
test
adc
mov
int3
arpl
andl
push
cmp
add
dec
push
inc
aam
sbb
sub
movsb
out
pusha
and
mov
test
loope
xor
ret
push
sub
mov
loop
cmpsl
push
cmpl
popf
rorb
int3
and
sbb
pusha
mov
adc
call
insl
jmp
and
mov
ds
push
cmp
cmp
mov
jl
mov
jecxz
cmp
and
sub
or
jno
out
push
adc
mov
jno
or
add
jne
enter
xor
dec
sub
or
pop
nop
sbb
and
sahf
inc
das
sbb
cwtl
add
inc
and
mov
push
fldenv
les
dec
or
lcall
cmp
xor
lret
jmp
xchg
adc
jmp
add
insl
loope
jb
loop
xor
jecxz
sub
cld
jl
shrl
cmpsb
push
dec
push
jno
add
shlb
mov
push
into
loop
cmp
dec
out
push
pusha
adc
or
jp
mov
testb
and
addb
push
or
aam
negl
movsb
push
adc
lock
jmp
add
es
mov
or
dec
ret
and
lock
int3
mov
and
xorl
sub
test
add
lods
loopne
arpl
mov
sub
adc
add
push
nop
adcl
stos
add
push
jmp
mov
inc
and
jb
xorl
push
shll
push
je
mov
addl
push
dec
repz
inc
jg
pop
fistpll
inc
jb
dec
ret
enter
inc
adc
cs
lret
push
adc
loopne
sgdtl
push
adc
jnp
outsl
nop
dec
jae
xor
nop
sbb
inc
adc
jnp
insl
jl
lret
sub
rcrb
xchg
insb
fs
xchg
or
sbb
cmpl
xchg
push
fistpll
and
popf
je
nop
in
sbb
fstpt
scas
sub
xchg
cmp
sub
push
pop
nop
test
test
xchg
jmp
inc
mov
popa
shl
pusha
outsb
xchg
mov
inc
hlt
xchg
sbb
xchg
fwait
inc
dec
xchg
or
xor
xor
lea
cwtl
lcall
test
sbb
jl
cs
je
jl
push
push
orl
int
jl
sub
lods
cmp
je
test
inc
mov
dec
lahf
test
push
je
loopne
adc
lods
dec
aas
jmp
inc
xchg
or
lret
sub
orb
jl
xchg
xlat
lcall
mov
pop
xor
dec
es
js
sub
mov
enter
aaa
jl
mov
and
add
test
or
mov
jecxz
mov
cmpl
sbb
push
push
mov
lea
sbb
shlb
adc
push
pop
pop
adc
dec
mov
push
xchg
dec
sub
xor
sbb
mov
cli
les
inc
add
negb
push
pop
movsb
mov
jecxz
or
pop
adc
decl
aam
pop
jp
icebp
cmp
sub
xor
push
or
mov
mov
pop
or
sub
ror
lods
pop
adc
xchg
test
mov
mov
mov
inc
add
or
mov
xor
aaa
insb
pop
inc
push
inc
mov
das
add
pusha
sbb
pop
rorb
gs
js
jo
jl
xor
jns
insb
mov
mov
add
or
cld
gs
jmp
push
shrl
jne
mov
data16
jne
cmc
addb
adc
data16
add
addl
push
sbb
ret
shll
divb
je
mull
in
popf
sub
or
and
pop
fstl
mov
es
outsl
adc
repz
es
inc
lock
mov
push
adc
jmp
xcrypt-ofb
cmpsl
push
cltd
add
mov
and
dec
or
push
test
or
push
movsb
mov
jo
pop
push
and
pusha
pop
mov
pop
jecxz
and
adc
pop
or
lahf
push
or
mov
mov
dec
loope
mov
ss
or
out
inc
pop
and
mov
movsb
cli
xor
mov
test
push
or
sarb
cltd
js
mov
repnz
fidivs
push
frstor
outsb
mov
aad
xchg
sub
pusha
dec
or
mov
ljmp
add
repnz
paddsb
pusha
and
mov
das
adc
add
add
pop
push
push
push
sbb
repz
jae
arpl
fstpl
cmp
fmuls
and
repz
pop
mov
add
inc
push
inc
or
or
ret
out
or
sbb
aas
xorb
mov
sbb
and
mov
mov
xor
sub
call
sub
dec
push
adc
loope
or
pop
xorl
xchg
out
cmp
xor
cltd
xchg
mov
inc
or
cmpl
sbb
gs
or
push
fsubl
aaa
sbb
mulb
push
push
loope
in
and
loopne
xchg
mov
and
repnz
cmp
add
push
std
jge
pusha
pop
gs
push
pusha
mov
add
xchg
add
cmp
add
es
cmpb
jno
and
aaa
cmpb
adc
test
inc
lret
rep
outsb
sbb
jno
idivl
add
pushf
push
and
inc
mov
lods
jno
cmp
cwtl
xor
or
pop
imul
lcall
push
incl
es
les
jmp
inc
mov
xor
call
popf
testl
dec
mov
outsl
out
push
push
dec
pop
sbb
cmp
loope
mov
popf
lcall
push
cmp
lods
mov
bound
sub
cmp
jae
adcl
inc
push
nop
outsl
popa
cltd
movsl
jns
fisubl
les
add
lods
sbbb
push
dec
push
add
jb
add
dec
adcl
outsb
push
adc
xchg
sbb
dec
mov
popf
mov
inc
push
sarb
xchg
scas
mov
push
stos
mov
movsl
movsb
inc
shlb
inc
mov
test
dec
test
xchg
xor
and
cltd
add
mov
mov
sub
pop
push
push
imul
push
jnp
push
add
pop
and
iret
push
or
in
or
xor
dec
aam
mov
xor
cmp
es
or
add
addb
jl
das
and
adc
cmp
jne
cmp
sbb
repz
inc
and
push
sbb
pop
addb
and
push
leave
ret
test
outsl
adc
es
lea
and
enter
lahf
fcoms
xor
sub
sbb
xor
or
or
inc
jl
popf
call
cmpsb
aas
inc
sbb
mov
int
push
fildl
cs
adc
adc
jmp
cmp
mov
jp
mov
cmp
test
cmp
in
std
idivl
add
xor
ret
inc
inc
pusha
xchg
dec
dec
inc
xchg
xchg
nop
cmp
test
cmp
and
xor
jmp
sbb
push
add
adc
add
and
mov
mov
xchg
mov
cmpsl
and
fsubrs
pop
adc
or
jno
and
cmp
jle
fcoml
sbb
add
sbb
xchg
cmp
xchg
mov
cmp
mov
add
or
outsl
push
pop
sbb
adc
int
cmpsb
icebp
aam
push
sub
ret
push
add
dec
icebp
aas
adc
mov
mov
mov
loop
sub
mov
mov
sub
movb
and
in
sbb
push
inc
mov
aas
les
pop
mov
xchg
or
sub
fists
push
jae
je
je
push
xchg
sub
jne
outsl
xchg
sbb
ret
daa
or
cmp
sbb
inc
stos
mov
mov
push
mov
pop
add
add
dec
cmp
jae
ja
jno
pushf
add
lea
xchg
sub
pop
pop
mov
jl
cwtl
jns
mov
imulb
and
jne
pop
push
or
leave
pop
sbb
in
pop
cmp
leave
add
sbb
mov
cmp
movsl
jne
aad
cmp
xor
cmc
pop
pop
stos
adc
pop
add
lock
mov
adcb
cltd
icebp
mov
push
pusha
add
cld
movl
mov
sub
fstps
mov
movl
xor
add
inc
add
mov
add
lods
mov
vprotb
push
add
test
mov
fdivl
sbb
test
jo
mov
pop
xor
mov
xor
fwait
mov
adc
push
adcb
mov
aaa
push
push
xchg
mov
xor
or
xor
mov
roll
mov
push
lock
sub
aaa
jb
jne
sub
inc
js
mov
sub
cmp
je
rclb
mov
sbb
cmc
mov
shlb
stos
lret
inc
fstl
in
xchg
subb
test
pop
and
push
jb
test
nop
inc
enter
inc
xor
daa
push
mov
hlt
jle
push
cmc
test
adc
sbb
mov
fsts
jo
lcall
sub
add
or
or
or
test
sar
ret
pop
xor
out
add
pusha
mov
movsl
lahf
sbb
mov
mov
mov
and
cmp
sahf
sti
pop
or
xor
add
push
push
add
addl
enter
movsl
xlat
addb
and
cwtl
jge
push
mov
xchg
test
push
jmp
int
pusha
add
add
or
out
xor
gs
lea
and
mov
aaa
add
xor
cmp
arpl
add
xor
push
lret
dec
mov
outsb
orb
daa
mov
pusha
pusha
es
inc
pop
jecxz
pop
in
mov
push
jo
mov
mov
pusha
pop
js
jl
add
cmp
jo
sub
sbb
adc
adc
lcall
roll
test
sbb
les
or
dec
in
inc
add
cwtl
enter
adc
dec
push
jle
test
in
cmpsb
cmp
pop
inc
dec
add
inc
mov
addr16
sub
jp
xchg
adc
sbb
push
dec
mov
xchg
mov
inc
push
mov
inc
rclb
mov
inc
or
or
dec
sbb
pusha
ret
push
inc
pop
bound
imul
int3
xor
sbb
cmpsb
add
add
movsl
add
adc
inc
and
es
fbld
and
xor
inc
jns
mov
inc
adc
cmp
inc
add
in
imul
ret
and
nop
movsb
dec
ja
sub
cmp
jne
mov
add
add
add
mov
add
pop
in
xor
jne
cmp
jns
popf
sbb
push
nop
fistpll
xor
xchg
scas
dec
imul
aas
cmp
and
call
jmp
mov
push
or
and
bound
or
and
mov
sahf
cltd
daa
nop
das
fwait
sub
pusha
in
xchg
mov
xor
cwtl
cs
dec
push
xor
cltd
ret
jnp
cmp
xchg
lods
adc
add
lods
inc
insb
es
adc
lea
adc
xchg
or
jge
push
jle
lds
or
mov
push
pop
pop
cwtl
data16
push
mov
nop
push
adc
sub
je
mov
or
xchg
cmp
xor
push
jg
dec
call
pop
mov
lea
xchg
push
pop
mov
movl
and
adc
cmp
inc
movsl
or
or
daa
pop
enter
or
or
insb
lahf
push
sbb
test
mov
inc
mov
jecxz
pop
adc
mov
push
pop
insl
lds
cmpsl
add
cmp
push
dec
in
push
iret
adc
push
and
jge
cmp
or
jp
dec
sarl
cmp
inc
cmp
stos
adc
cmp
sbb
or
out
push
pop
dec
add
xor
push
loope
dec
add
ret
inc
ret
adc
inc
hlt
adc
cmp
xor
pop
inc
add
pushf
sbb
test
xor
xor
dec
popf
aam
cmp
inc
js
lods
xchg
cli
in
add
xchg
mov
add
xor
fistps
pop
sub
adc
add
or
sbb
push
jno
ljmp
adc
rclb
jb
mov
add
push
andl
sbb
ds
mov
xor
jo
lds
xor
fadds
sahf
cmpsb
mov
mov
insb
push
test
pusha
nop
sarb
sbb
shrb
sub
xor
push
jne
lea
xor
rcll
push
push
add
and
fmuls
jo
fs
sar
test
xor
jg
mov
push
mov
rclb
cmp
adc
mov
pop
mov
insb
cmpl
cmp
call
mov
mov
stos
sbb
or
pminsw
ficompl
sub
rorl
pushf
pop
in
aam
add
jle
add
pop
outsb
push
push
pusha
sbb
mov
dec
fwait
mov
adc
sbb
adc
add
and
pcmpeqb
mov
sub
mov
push
and
sbb
js
sub
mov
rclb
xchg
pusha
fisttps
add
xorl
sbb
inc
lods
loop
addl
pop
insl
jo
jmp
scas
arpl
dec
fs
sbb
pop
dec
cwtl
add
pop
and
push
stc
decl
inc
shll
sub
jno
lcall
bnd
movsb
and
call
cmp
push
and
aaa
mov
sub
mov
xchg
xor
mov
mov
jnp
cwtl
lea
mov
mov
jno
jnp
lret
and
xchg
imul
xchg
mov
add
ja
push
mov
dec
add
cs
push
sbb
mov
and
outsb
push
inc
mov
leave
sbb
movsb
sub
sub
inc
dec
aaa
test
cld
pop
je
sub
xor
sub
add
inc
or
int
cmp
rorl
adc
or
cmp
dec
rolb
shrl
hlt
push
sbb
add
andl
inc
scas
inc
fbstp
rcrl
mov
enter
add
fwait
sbb
xchg
fstpt
and
sub
pop
lock
inc
xor
add
jnp
xor
cli
mov
outsb
sub
xor
xor
orl
mov
loop
ficomps
dec
add
fs
pop
or
and
sub
jp
cmp
push
jl
sbb
rcll
push
popf
sbb
push
pop
push
push
xchg
scas
mov
test
sbb
or
push
and
pop
and
xchg
pop
repz
and
and
dec
and
pop
mov
xor
aam
adc
and
and
and
shl
xchg
push
sub
and
imul
adc
movl
arpl
adc
sbb
inc
push
inc
or
inc
inc
add
dec
ss
jb
mov
add
rcr
mov
mov
sbbb
cmp
push
add
push
dec
pop
jb
movsb
xor
or
sbb
xor
daa
leave
push
mov
insl
scas
push
pop
and
push
dec
scas
jge
cmpl
movsb
mov
sbb
add
push
xchg
cmp
push
push
rol
inc
push
cmp
and
push
in
mov
xor
rolb
sbb
push
rclb
ds
sub
or
sub
insb
sbb
mov
aam
sbb
push
lahf
mov
fimull
push
repz
lds
and
xchg
dec
popa
push
and
insl
jne
pop
push
and
add
mov
cmp
jns
jne
repz
push
and
cmp
in
push
sub
jo
cmp
sub
enter
mov
sub
add
push
ret
insb
mov
xchg
xor
or
push
sub
mov
in
subb
nop
add
lods
enter
inc
mov
fisubs
jmp
and
adc
dec
dec
nop
cld
jg
mov
adc
pop
lea
in
pop
jo
rolb
xor
xor
stos
fildll
test
pop
fucomp
dec
aaa
call
push
push
rcll
shll
push
inc
or
ficoml
mov
jno
pop
jne
fildl
dec
fimuls
es
and
or
mov
cmpsl
rcl
add
cmp
mov
adc
xor
mov
call
lahf
sarl
jecxz
insl
add
cmp
imul
pop
ret
rcrl
loop
add
call
add
daa
inc
call
shll
lea
cmp
xor
stos
lea
xchg
orl
es
lcall
dec
jge
orl
push
sub
cmp
mov
aaa
cmp
adc
je
jo
pop
or
enter
enter
lods
push
pop
jl
or
xorb
push
xor
mov
aam
xchg
adc
sbb
add
adc
test
cmc
out
dec
data16
ss
rcll
cmpsb
fwait
rolb
inc
push
test
xchg
xor
jbe
push
or
rclb
jae
and
add
inc
orb
cmp
push
adc
pop
push
shlb
stc
dec
in
adc
xor
inc
arpl
push
outsb
inc
pop
add
sti
cmovo
inc
pusha
push
sub
pop
inc
mov
jle
cmp
test
inc
or
test
test
add
mov
pop
fbld
rcl
add
push
mov
sbb
dec
mov
dec
pusha
dec
jl
lods
sub
scas
stos
mov
adc
push
leave
xor
sub
add
adc
and
pop
push
mov
xor
dec
add
stos
in
sbb
inc
repnz
and
and
enter
adc
or
add
fs
or
push
or
nop
cmp
and
push
dec
imul
sub
call
jne
rcrb
cli
ljmp
imul
jbe
out
or
add
sbb
in
xchg
ja
mov
mov
xchg
repz
or
push
cmp
rcrb
lds
and
pop
lcall
adc
cli
dec
inc
sbb
cmp
add
jno
rcrl
adcb
loopne
mov
stc
cmc
pop
push
enter
cmp
stos
or
sub
sbb
js
outsl
push
inc
and
push
and
dec
and
mov
test
int3
mov
js
or
push
pop
fs
jg
inc
insb
or
in
int3
pop
or
pop
or
or
fisttpl
sub
push
xchg
out
test
test
es
rclb
scas
and
dec
and
bound
xchg
push
add
insb
add
sbb
imul
mov
aas
lcall
adc
adc
rolb
in
or
xorl
lea
test
mov
sbb
imul
push
push
jmp
call
mov
mov
in
mov
or
jmp
push
add
push
popf
sub
mov
fsubs
int3
add
adc
shlb
cmpl
dec
gs
push
pop
add
push
dec
shl
add
add
pop
push
add
mov
test
std
dec
add
adc
sub
decb
xlat
dec
inc
cmpsl
xchg
outsl
and
and
pop
addl
mov
pop
nop
lret
xchg
sbb
mov
fsubrl
add
mov
dec
mov
inc
pusha
add
cmp
dec
push
or
sub
dec
inc
je
aam
and
inc
bswap
adc
cmpsl
push
mov
incl
or
dec
sub
or
and
xchg
mov
push
jecxz
xor
in
push
inc
and
dec
int
sub
cmp
je
out
push
inc
pop
and
push
xor
sub
and
leave
mov
xor
push
mov
incl
cmp
add
movsl
and
scas
loop
dec
xchg
test
loop
dec
dec
popa
sbb
push
cmp
cmpsl
add
pop
in
mov
push
or
scas
xchg
iret
mov
push
or
push
test
hlt
push
push
mov
punpckldq
loopne
xor
lcall
negb
push
pushf
call
pusha
mov
fidivl
pop
or
mov
or
scas
xchg
out
or
sub
sub
or
lock
test
jo
or
adc
dec
ja
inc
xchg
jl
or
push
adc
fstpt
dec
adc
cltd
es
dec
mov
and
lods
cmc
mov
and
fisttpl
xchg
mov
in
push
mov
call
mov
xchg
int3
dec
push
in
call
add
inc
scas
fs
xchg
fcom
push
pop
shl
inc
push
xor
mov
sbb
test
and
sbb
or
and
enter
push
fs
sbbb
and
add
and
and
jns
and
or
jns
inc
sahf
es
faddl
in
add
enter
sub
and
inc
sub
ja
sub
test
leave
add
sub
pop
fs
stos
cmp
pop
movsb
shld
and
nop
sub
lahf
mov
pop
jbe
dec
dec
xor
cwtl
pusha
popa
dec
lcall
adc
call
loope
je
xor
sbb
mov
push
aas
push
jl
outsb
leave
jae
mov
adc
cs
cmpsb
loop
cli
and
lock
std
aaa
add
or
jl
xor
jne
sub
add
loope
inc
and
pop
mov
push
add
mov
mov
popa
sbb
sbb
enter
cmp
push
pop
cltd
mov
adc
pusha
es
ljmp
mov
sub
pop
push
sub
cmc
dec
cmp
test
sub
jge
cmp
add
adc
leave
mov
jae
jl
in
inc
lcall
bnd
or
cmp
hlt
inc
ss
sbb
cld
inc
fcomps
inc
jb
add
push
hlt
mov
inc
xchg
cmp
pop
sbb
adc
xor
loopne
mov
inc
and
lcall
xor
jl
jl
or
and
ret
sbb
add
and
test
fs
dec
mov
and
pusha
movl
rcrb
inc
mov
inc
movsb
bound
in
aas
lods
ds
push
push
dec
cmp
stos
cmp
cmp
push
cmp
dec
cmp
push
inc
xchg
pushf
je
dec
inc
jge
mov
lea
popf
push
leave
addr16
jo
lea
rep
into
loop
shlb
mov
lret
insl
or
add
inc
cs
cmp
dec
mov
lds
mov
inc
pop
ljmp
out
pusha
imul
lcall
pop
dec
sub
sub
and
rcrb
or
insb
imull
jmp
jl
rorb
and
add
xchg
rclb
dec
data16
or
jb
pop
ret
data16
cmpb
xorb
pop
jbe
pop
jnp
cmp
in
ret
mov
adc
inc
xor
rclb
movsb
and
add
inc
push
pop
pushf
sbb
and
xchg
sbb
in
test
add
sub
mov
in
loop
fwait
push
inc
outsb
inc
jge
add
push
push
push
shrb
add
out
lahf
aam
inc
sar
pushf
lock
cmp
push
stos
and
mov
loop
push
push
pushf
lods
jge
or
aas
inc
lea
out
dec
rcr
or
pop
mov
push
sbb
push
pop
and
and
pop
cmp
sbbb
push
in
inc
in
add
dec
xchg
cmp
add
mov
stos
shll
in
xor
fstpl
xchg
and
or
push
enter
dec
xor
sarb
and
dec
and
and
dec
test
or
orb
or
jns
call
sbb
sub
inc
dec
push
outsb
fisttps
hlt
lcall
xor
or
addr16
inc
fstp
inc
and
mov
rcll
lds
dec
mov
movsl
jo
lds
adc
sbb
add
or
pop
cmp
aas
movsb
jp
sub
push
or
sub
adc
sbb
dec
cmp
add
adc
and
inc
mov
mov
cmpb
and
mov
repz
call
loope
pushf
push
cmpsb
rorl
xor
cmp
jae
adc
push
jns
rcrl
imul
inc
add
lock
aaa
lea
add
mov
xor
rorb
in
lods
cmc
push
ret
xor
xor
add
rcll
cmp
sbb
jmp
mov
cltd
add
sub
or
push
test
andl
pop
mov
sub
pop
leave
push
xor
or
add
push
enter
insl
sbb
imul
fs
and
xor
shlb
pop
popa
add
or
dec
rolb
ds
pushf
jae
adc
push
sub
test
pop
stos
mov
add
add
or
pushf
pop
xchg
mov
pop
mov
fs
xorl
lret
add
daa
lods
and
in
sub
movsl
push
and
inc
sbb
sbb
test
fldenv
cltd
inc
mov
jecxz
mov
pop
test
xchg
js
cltd
adc
fistl
pop
sbb
xorb
inc
loopne
dec
pop
cmp
jns
pop
and
mov
pusha
push
and
aad
sbb
inc
jl
xor
dec
xor
xor
dec
pop
xor
or
pop
mov
pop
mov
push
xor
pop
and
push
pop
and
xchg
mov
push
cmp
sbb
mov
inc
rolb
inc
push
and
mov
push
pusha
mov
shlb
xorb
push
inc
ss
shll
jne
cmpsl
aas
push
dec
sbb
pop
push
push
lods
push
nop
lock
or
jmp
insl
push
dec
push
push
cmp
jae
call
lock
cli
push
imul
mov
mov
jae
mov
out
jle
fldenv
mov
fisttpll
jno
sbb
repnz
cmp
xchg
dec
loopne
adc
mov
xchg
lods
pop
pop
jl
lea
je
addb
inc
add
add
sub
mov
cmp
dec
cli
test
add
rolb
jno
xor
cmpsb
push
add
jl
adc
or
push
pusha
xor
pushl
push
jmp
push
adc
add
cmp
jp
xor
incb
push
push
mov
adc
or
arpl
add
push
xchg
add
jmp
jns
push
inc
pop
pop
jl
or
arpl
push
add
test
imul
jbe
pop
ljmp
ret
dec
shlb
mov
push
jg
test
dec
add
add
sub
and
adc
pushf
add
ret
in
pop
imul
jne
xor
pusha
aad
dec
shll
mov
popf
xor
dec
dec
mov
push
xchg
sub
xorl
and
fmull
mov
sbb
add
push
imul
sub
imul
inc
or
pushf
lock
push
adc
fs
lea
sbb
jmp
push
push
lods
push
sbb
push
sub
inc
sub
movsl
add
cmpsl
cmp
add
push
adc
add
push
pop
test
adc
pop
adc
ss
sub
and
or
and
xchg
imul
mov
lahf
cmpsb
and
notl
xor
and
push
or
cltd
push
pushf
test
xchg
popf
and
jns
ss
das
mov
adc
movsb
repnz
push
add
mov
arpl
fwait
sub
or
leave
in
or
cmp
sbb
cli
cltd
addr16
or
sub
pop
pop
repnz
aas
xor
jnp
xchg
jo
stos
adc
lcall
add
adc
xor
add
lods
fcoml
adc
int
lret
adc
adc
or
fwait
xchg
add
sbb
push
sub
add
lock
pop
inc
adc
adc
mov
adc
lods
fs
cmp
mov
ret
inc
enter
pop
adc
xchg
ret
add
imul
pusha
pop
fyl2x
mov
mov
and
cmp
jae
mov
cmpsb
or
or
pop
mov
inc
cmp
jl
aad
pop
or
dec
add
mov
std
inc
and
dec
mov
testb
ja
cld
std
hlt
or
jle
and
mov
inc
sbb
js
xor
add
pop
aam
sar
enter
and
dec
outsl
mov
add
lods
sti
lcall
push
adc
xor
dec
mov
cld
sbbb
out
add
jne
mov
je
push
repnz
stos
mov
adc
shlb
test
and
push
xchg
sti
add
inc
sbb
xor
add
add
movsb
and
xchg
or
xchg
inc
add
mov
lods
imul
lcall
fs
insb
and
fwait
rorb
fwait
inc
pop
add
push
push
cli
xchg
sub
lods
sub
popf
sub
add
add
movlps
fldl
inc
lods
mov
int3
cmp
adc
inc
imulb
jecxz
push
repnz
xor
adc
sub
inc
insb
cmp
dec
add
add
cmp
pushf
and
xor
cmp
pop
pop
mov
sub
mov
xor
imul
cs
sbb
insb
jo
mov
or
add
mov
mov
inc
sub
cmp
adc
and
or
mov
inc
andps
orb
dec
insb
sub
mov
jg
rcrl
dec
dec
addb
inc
or
xor
fldt
xchg
adc
mov
adc
gs
mov
adc
inc
push
add
inc
and
cmp
in
mov
pop
xchg
dec
dec
mov
rorl
lea
ficoml
test
add
test
push
sbb
lahf
repz
add
fcompl
adc
sbb
xchg
adc
shll
push
mov
mov
je
xor
fsubr
movsb
dec
mov
das
jne
fdivl
sbb
xchg
mov
popf
xchg
jne
les
fdivrs
ret
jge
cmpsl
jne
ss
cmp
in
xchg
inc
push
cwtl
loopne
dec
add
out
add
enter
xor
loopne
add
aaa
daa
sbb
adcl
adc
jbe
jmp
or
cwtl
mov
add
fmull
jle
ss
add
nop
mov
or
out
movb
cmp
into
add
or
hlt
loopne
cmp
adc
aam
pop
cmp
iret
rol
push
mov
push
jl
sub
add
push
and
fwait
sbb
ret
pop
pop
movsl
rcll
mov
fs
push
leave
jne
pop
mov
out
sbb
cltd
testl
mov
or
adc
je
cmp
je
cmp
sub
decb
je
push
fistl
jb
imul
pop
dec
lock
fwait
mov
mov
lea
lock
mov
mov
loope
xchg
cmc
push
add
push
ret
sub
mov
and
dec
inc
hlt
inc
and
mov
shr
imul
push
adc
sub
cmpb
gs
mov
aam
stos
jno
mov
icebp
cmp
je
adc
and
cmovno
shll
nop
pop
dec
jnp
xorb
pushf
add
sbb
hlt
into
jle
adc
add
cmp
adc
test
mov
into
pushf
pop
adc
sbb
push
push
movsb
addl
xchg
xchg
cmpsb
dec
movsb
push
mov
sbb
test
sbb
jo
push
stos
pop
or
mov
loope
das
popa
push
pop
pop
das
imul
test
jo
or
arpl
insb
jo
test
jb
pusha
sub
inc
aad
shll
js
sti
jne
add
lahf
and
pop
or
js
into
cmpb
pop
pop
sub
shll
dec
icebp
mov
andl
mov
cmpb
adc
cmpsb
mov
add
mov
leave
fsubs
in
xor
xchg
mov
xchg
data16
mov
cld
cmpsl
sbb
sub
or
dec
les
pop
and
xor
or
sub
jle
pop
fwait
sbb
jecxz
es
psubb
pop
cld
adc
cmp
js
xor
and
mov
dec
push
sbb
lock
test
jne
movsb
inc
add
sbb
xor
ret
xor
jl
enter
pop
repnz
cld
test
adc
xor
sbb
out
pop
pop
sub
cmp
dec
push
push
xor
push
mov
enter
adc
mov
or
ja
mov
cmp
and
dec
jns
out
pusha
push
sbb
fldl
xor
push
fsubl
xchg
lock
aad
push
jno
add
push
jne
pop
xchg
shrb
jle
mov
add
lcall
repnz
mov
dec
push
dec
sub
imul
add
es
add
pop
or
popa
insb
mov
mov
and
outsl
aad
repz
pop
push
ljmp
push
and
sbb
mov
pop
lret
inc
int
dec
adc
xor
adc
adc
inc
mov
and
outsb
push
call
jb
imul
or
dec
out
or
mov
cmp
mov
xor
mov
push
je
sub
push
sbb
add
test
enter
nop
inc
sub
mov
dec
xor
xchg
add
add
ret
or
pop
add
imul
test
dec
jge
mov
jmp
std
mov
pop
les
dec
imul
xchg
movsb
jae
mov
cwtl
rol
add
xor
nop
and
push
jmp
in
in
mov
nop
inc
call
in
mov
xchg
mov
xchg
cs
and
push
es
adc
sbb
fs
mov
mov
pop
outsl
mov
cmpl
mov
push
pop
mov
mov
sub
in
shrl
cmp
pop
jo
in
xchg
sbb
push
out
push
subl
sub
push
call
sbb
adc
sahf
outsb
pusha
sbb
test
movsl
push
or
cmp
je
xchg
movsb
or
enter
loopne
add
mov
pop
mov
ret
sbb
jns
pop
fistpll
roll
and
xor
push
ja
push
dec
mov
push
push
or
movl
enter
or
mov
cmp
mov
cmp
jo
inc
aad
insl
or
mov
outsl
pushf
rorl
and
cld
sub
inc
inc
loop
jmp
out
or
ret
push
add
xor
add
push
shrb
movl
pop
sbb
jg
add
mov
inc
or
adc
push
roll
mov
inc
push
ja
pushf
xor
sub
jecxz
lahf
xchg
mov
addl
movsb
sbb
xor
hlt
testb
pop
je
jl
xchg
pop
pushf
es
daa
push
sub
cmp
sub
sbb
pop
and
adc
add
ret
or
pusha
jae
mov
or
dec
add
imul
imul
cmp
add
mov
add
sub
aas
push
add
or
ret
inc
adc
or
stc
jno
push
add
push
and
insb
xchg
sub
pop
xchg
add
fs
es
push
sbb
shll
cmpb
decl
xor
lds
jne
cmp
mov
or
jnp
push
sbb
cltd
dec
lods
add
pop
adc
push
das
inc
add
inc
fwait
push
fimuls
pushf
lret
data16
nop
mov
out
sub
cmpsb
mov
add
or
add
les
xchg
push
pop
inc
imul
xchg
mov
imul
enter
jecxz
jmp
lock
add
sub
xor
push
and
pop
cs
inc
inc
dec
addr16
sarl
inc
test
push
jo
js
inc
in
gs
inc
rclb
test
xorl
clc
add
cmp
fmuls
sub
nop
out
xor
push
jo
call
or
out
xchg
cmp
cmc
clc
sbb
adc
imul
inc
or
jb
and
out
stos
sub
mov
push
mov
push
rcrl
mov
or
rcrb
stos
cli
or
mov
adc
sbb
ret
push
loopne
sbb
lea
test
cmpl
mov
daa
ss
icebp
push
push
push
decb
and
push
inc
add
les
movb
mov
adc
jnp
push
or
mov
add
add
cmp
mov
loop
inc
pop
sbb
sar
cwtl
mov
jmp
cmp
mov
pop
outsb
inc
add
inc
shrb
cmovle
roll
add
or
inc
dec
add
adc
adcb
int
adc
mov
xor
push
or
push
add
test
add
clc
andb
mov
cmpsb
push
jns
stos
and
push
stos
add
pop
jcxz
js
mov
inc
jl
mov
jb,pn
cmp
and
xor
addb
cmp
push
maskmovq
testl
sub
clc
jo
and
jnp
sbb
cs
jg
addb
sub
mov
sarl
imul
xlat
pop
mov
or
shl
popf
lds
decb
sbb
adc
push
aaa
subl
add
test
in
cmpsb
popa
mov
pop
xor
js
adc
mov
cwtl
nopl
xchg
xor
jg
mov
loope
inc
xchg
pop
pop
or
maxps
adc
incl
and
lods
lret
and
adc
mov
mov
or
int3
xor
push
dec
ljmp
sbb
loopne
rorb
push
sbb
mov
arpl
push
inc
sbb
inc
pop
stos
mov
cmpsl
add
or
cmp
jecxz
cmp
push
mov
xchg
dec
add
or
add
and
xchg
cmc
mov
bound
addr16
dec
jo
mov
add
testl
add
or
adc
mov
cld
dec
inc
inc
pushf
lock
jne
mov
scas
mov
addb
xchg
cmpsl
mov
add
xchg
cmp
cmp
and
fimull
push
push
icebp
adc
add
jo
mov
fnstenv
in
jne
dec
jo
cmp
mov
xor
xor
sub
pop
xchg
imul
js
or
or
add
outsl
sbb
test
inc
xor
inc
cmp
sub
inc
pop
lds
stos
adc
dec
push
test
das
xor
cmp
fsub
or
or
and
in
jl
and
clc
or
popa
and
inc
xchg
rolb
jle
mov
cmp
and
sub
test
sub
rcrl
cld
cmp
pop
and
fadds
icebp
cmpsl
lods
int
adc
sbb
xor
xchg
sub
ss
pop
add
and
in
shld
movb
int
lret
pop
add
add
sub
mov
pop
rcrb
add
fldl
push
or
sarl
inc
cmp
jmp
and
or
notb
pop
or
mov
mov
xor
jnp
add
sbb
lds
xchg
lds
cmpsb
ret
jle
sub
cmpsb
icebp
in
mov
cmp
xorb
and
or
repnz
add
sub
sarb
mov
iret
clc
mov
jecxz
xor
and
adc
and
lods
pop
mov
sbb
jecxz
add
sub
mov
mov
mov
aaa
dec
scas
mov
lods
cmp
push
hlt
mov
sub
out
sbb
add
aam
and
test
mov
gs
decl
cmp
jb
sub
jmp
push
dec
movzwl
dec
pop
subl
jg
jle
jle
setl
movzbl
inc
mov
test
sub
jl
inc
shll
adc
shlb
pop
fisubs
xchg
shll
push
mov
stos
and
pusha
aas
loopne
shll
lds
lret
dec
lock
in
add
pop
sahf
sbbl
inc
jo
shrl
push
lahf
jmp
sbb
pusha
xchg
cmp
popa
test
jle
push
dec
sahf
aas
sbb
inc
pop
xchg
cmp
and
cmp
in
dec
add
sbb
sub
pop
loope
pushf
sub
and
dec
push
mov
cmp
fs
and
inc
rol
mov
mov
cmp
les
mov
push
pop
sbb
push
push
push
movsb
pop
add
mov
and
sub
sub
pusha
mov
adc
or
xchg
add
mov
mov
mov
cmc
sbb
xchg
rolb
sbb
push
les
mov
loopne
lds
inc
cs
dec
xchg
fsubrp
mov
cmp
das
repz
push
cmc
xor
fs
or
mov
inc
xorl
stos
pop
push
xor
mov
test
mov
lds
and
push
ss
cs
es
and
roll
movsl
test
add
inc
lds
or
cmpl
fnstenv
add
sbb
fimull
iret
mov
dec
add
popa
push
cmpl
adc
push
pop
pusha
repnz
and
test
pop
sub
sbb
in
mov
push
dec
xor
adc
push
xor
jmp
fcmovne
sbb
loope
inc
ret
sub
dec
adc
jno
push
pop
adc
rorb
push
mov
jg
mov
repz
test
pusha
mov
sub
orb
adc
sarb
fsts
cmpsb
sbb
adcb
jns
and
shlb
fs
les
push
es
mov
push
sbbb
ret
lret
add
push
add
inc
dec
xchg
call
test
hlt
jg
jecxz
pop
add
push
mov
cmp
lcall
or
aad
inc
jo
dec
test
cmp
cltd
inc
jecxz
adc
cltd
mov
push
scas
and
adc
and
push
xor
xchg
xchg
cmp
iret
inc
inc
out
push
dec
ret
or
mov
cmp
adc
add
ret
std
sub
mov
fs
repz
cmpb
jne
popa
imul
cmp
mov
fld1
xor
js
xor
add
inc
pop
adc
stc
sbb
add
push
leave
sbb
icebp
push
mov
fadds
mov
xchg
shlb
sub
pushf
and
mov
add
fimuls
sbb
jns
add
pop
dec
scas
sub
int3
dec
mov
or
push
jb
push
lret
adc
loopne
and
and
test
sbb
xor
xchg
stos
shlb
adc
mov
lret
std
decl
in
sbb
das
call
shll
call
adc
or
and
add
lods
nop
cmp
sti
jbe
test
add
js
stos
mov
pop
outsb
adc
aas
and
inc
xor
xor
add
test
rcrb
pusha
mov
insl
pushf
insl
std
lods
adc
ss
dec
lods
scas
or
shrb
push
push
lret
push
cmp
xor
xchg
add
push
jg
adc
inc
sahf
jg
adc
jle
sbb
lahf
test
dec
inc
lds
lret
cli
jmp
ret
push
cmpsb
pop
push
mov
dec
sub
jne
and
add
pushf
cmp
cmc
mov
lock
adc
repz
sub
pop
mov
cmpl
sub
push
imul
jae
adc
jg
cmpsb
sbb
xor
jecxz
sti
sahf
fidivs
imul
sbb
aam
sub
mov
mov
adc
js
aaa
push
sbb
add
adc
xchg
push
dec
inc
pushf
pop
xor
push
dec
test
sahf
cmc
mov
popa
push
push
jl
js
mov
js
and
xchg
data16
push
add
xchg
mov
jbe
popa
repnz
pushf
jmp
sbb
cmpsb
pop
jns
jne
xor
js
inc
mov
sti
and
stos
and
adc
cs
add
sbb
daa
jl
and
pusha
js
adc
andl
and
call
xchg
mov
es
ret
mov
push
movb
dec
loope
pop
pop
and
or
js
aaa
sub
enter
inc
or
cwtl
inc
dec
or
xor
pop
rcll
pop
sub
xchg
and
sub
enter
cmp
pop
dec
inc
and
push
addl
mov
lcall
mov
pop
mov
mov
std
sahf
inc
xchg
lret
repz
dec
and
dec
jb
repnz
add
xchg
outsb
or
in
scas
dec
inc
dec
sbb
inc
push
adc
mov
inc
cmp
adc
jmp
enter
fwait
add
pop
test
add
nop
sub
xor
cmp
fs
sub
adc
sahf
rcl
add
test
add
lcall
fisttps
jmp
sub
out
ss
inc
das
mov
dec
aas
ljmp
out
push
pop
fs
inc
loopne
pop
or
xor
outsl
shr
sbb
push
cld
popf
add
mov
xor
iret
jae
push
or
sbb
xchg
adc
or
push
roll
aaa
and
out
and
mov
mov
mov
push
add
seto
insl
sub
adc
xor
adc
cmpsb
xchg
shrl
sbb
mov
inc
push
sub
fs
or
dec
cli
adc
andl
in
inc
sub
and
push
or
inc
aam
sub
popf
add
ljmp
js
rcrb
add
push
rol
cmp
cld
sub
dec
inc
das
movsb
pop
aaa
add
outsl
stc
test
push
add
mov
push
inc
or
and
subb
lcall
scas
push
xchg
mov
testl
int3
subl
dec
fs
add
roll
bnd
dec
add
add
inc
daa
xor
inc
sub
sbb
nop
add
adc
and
loope
adc
jb
pop
adc
mov
cmpb
je
pop
movl
mov
mov
test
cmc
or
push
add
mov
arpl
sbb
xchg
sbb
into
and
push
xor
cmp
rorl
pushf
movd
loop
outsl
mov
cmp
fimuls
stc
mov
mov
or
jge
or
popa
add
xorl
add
std
add
or
sub
mov
mov
test
mov
mov
push
sbb
das
adc
jns
adc
mov
cwtl
clc
xorb
fists
dec
push
mov
mov
or
cmp
imul
mov
push
pop
sarb
fcomp
pop
sub
loopne
sub
fcompl
icebp
and
pusha
sub
shrl
pop
inc
or
cwtl
or
roll
fcmovnb
outsl
imul
push
mov
ret
add
ret
pushf
or
loopne
pop
out
push
xchg
inc
rcll
sub
andb
or
div
stos
mov
xchg
fcoms
cmp
sbb
add
test
dec
jb
int
adc
and
stc
test
fsubs
dec
mov
sub
leave
dec
cmp
adc
or
iret
shll
mov
enter
jmp
jae
add
inc
add
push
inc
mov
push
push
mov
xor
pop
insl
fistps
or
add
std
into
adc
and
out
lock
xchg
pop
es
sahf
cwtl
lods
stos
dec
jne
mov
push
insb
push
add
subl
in
push
mov
and
jno
fnstenv
sub
push
into
inc
fldcw
es
xor
mov
mov
add
mov
adc
aas
inc
cmp
jp
in
lea
xor
inc
cmp
je
jle
in
adc
sub
enter
push
mov
inc
dec
fcompl
adc
imul
sub
adc
mov
lcall
test
pop
fs
cmp
les
scas
mov
or
and
popa
pushl
add
mov
inc
adc
add
pop
pop
cmp
cmp
les
fmulp
lret
pop
and
mov
iret
inc
push
fucomip
fdivr
sbb
sub
fmuls
push
sbb
sbb
sar
or
adc
sub
divb
add
clc
inc
std
pop
je
push
pop
pop
into
pop
cli
pop
movl
sub
or
fstp
cmp
ds
sub
push
xor
push
add
push
or
sbb
xchg
push
push
pop
enter
addr16
jg
jl
cmp
sub
movsb
decl
sub
pop
cwtl
movb
adc
fiaddl
or
lret
add
popf
lea
mov
mov
add
pop
cmc
mov
les
jmp
enter
test
add
cmp
and
rorl
test
repz
pop
jbe
mov
lea
iret
loopne
or
adc
lock
push
out
or
pop
adc
lods
filds
push
push
and
adc
cmpsb
rcrl
test
sbb
rclb
dec
xchg
loope
mov
mov
push
call
mov
push
mov
in
xor
es
in
sbb
add
dec
jecxz
lea
adc
push
pcmpeqb
jg
sub
inc
lea
mov
lea
pop
push
xchg
loop
cwtl
dec
cld
xor
rcrl
ret
leave
ficoml
push
and
lock
ret
push
punpckhdq
pop
int3
pop
movsl
shrb
adc
or
xchg
xor
and
sbb
pop
je
push
dec
mov
scas
push
sub
mov
xchg
fsub
sub
inc
mov
mov
call
lock
cld
mov
cmp
je
outsb
push
sbb
inc
mov
inc
jg
xor
clc
mov
sbb
negb
adc
add
mov
mov
jmp
xor
std
sbb
cmpsl
xchg
cmp
jg
push
popa
dec
inc
fadds
pop
loop
jg
insb
jge
mov
inc
cli
xor
inc
jp
shll
cmp
or
inc
lods
jne
data16
shll
add
mov
adc
jo
push
pusha
ret
xor
xchg
or
push
push
adc
lds
jbe
out
add
jl
cmpl
cmp
inc
std
xor
xchg
sbb
mov
lods
xor
fwait
testb
inc
je
test
rorl
orl
mov
push
mov
and
push
push
call
mov
adc
std
xchg
js
sarb
xor
push
inc
movsl
inc
push
sub
lock
shl
mov
subb
mov
clc
ret
fstl
inc
mov
cmp
mov
loopne
or
lcall
test
pop
add
clc
add
dec
jl
pop
loopne
lea
push
push
adc
mov
std
cmp
daa
mov
ds
push
in
or
cwtl
fnstenv
adc
adc
adc
adc
jbe
cmp
sub
adc
pop
in
aam
leave
stos
jmp
nop
and
push
in
mov
or
movsb
je
dec
xchg
or
js
pop
fndisi(8087
mov
jmp
xchg
and
fdivs
stos
das
cld
push
mov
add
cmpsb
mov
and
mov
insb
testb
in
pusha
aaa
test
xor
fistps
incl
je
jmp
add
sub
jne
push
push
add
jle
jge
add
add
aad
bnd
pop
sub
sbb
adc
sbb
andb
push
faddl
in
cmp
push
ss
mov
push
xchg
inc
dec
adc
repnz
ret
test
xchg
or
inc
in
shlb
out
loope
add
test
call
push
fadd
and
pop
xchg
or
sbb
sbb
sub
or
and
mov
sbb
mov
dec
mov
lods
imul
push
xor
mov
mov
add
mov
das
add
cmp
inc
push
pop
in
sbb
in
mov
imul
push
add
clc
sar
dec
jne
mov
push
imul
inc
add
lock
cld
andb
int3
cmp
lods
push
add
ret
popf
stc
shrl
push
out
mov
add
push
push
add
gs
cli
int3
stos
cmp
dec
aam
cmp
insl
lcall
adc
xchg
inc
cmpsl
inc
mov
loope
fs
subl
je
mov
push
jb
and
mov
les
pop
sbb
ljmp
sub
jne
xor
fwait
in
pop
call
std
sbb
loopne
push
inc
incl
mov
xchg
add
daa
daa
xchg
enter
in
add
cmp
cwtl
loop
inc
inc
push
ret
add
cmp
and
cmpsb
sti
ja
inc
das
mov
dec
jmp
sub
push
fidivrl
push
test
add
inc
or
mov
cwtl
pushf
or
pushf
ja
movsb
sub
repz
pop
mov
or
xchg
shlb
sbb
sub
pop
pop
pop
adc
push
ljmp
sub
inc
lods
cmp
shlb
mov
mov
rcll
ja
push
adc
adc
xor
pop
pop
ret
rcll
stos
in
iret
int
fxch
fst
or
push
xchg
and
inc
dec
pop
push
xchg
jmp
lods
dec
sti
hlt
sarb
inc
mov
into
scas
mov
cmp
push
shrb
push
lret
xchg
add
bound
xor
and
cmp
pusha
scas
imul
mov
add
dec
or
fsubrs
pop
mov
sub
out
push
idivb
add
shlb
pushf
and
mov
cmp
imul
xor
mov
outsb
dec
cmpsl
ss
fwait
pop
cs
push
push
rorl
add
decl
movzwl
mov
mov
sbb
cmp
or
and
jmp
loop
cld
sbb
xchg
setb
jb
mov
rol
push
jmp
js
test
cmpsb
imul
adc
inc
test
je
pop
pop
dec
daa
jge
inc
ss
jns
rcr
ret
adc
cmpsb
mov
push
lret
and
and
mov
adc
call
push
mov
test
lea
push
mov
daa
sub
dec
mull
add
jge
lods
xor
xor
mov
mov
jb
adc
pushl
outsl
sahf
dec
mov
faddp
pop
mov
test
imul
inc
push
dec
sbb
push
sbb
pop
cmp
scas
adcl
mov
push
jns
mov
and
inc
or
jle
push
repnz
sbb
lea
ffree
rol
aaa
dec
popl
int3
push
loope
or
lret
popf
movsb
jb
ss
add
add
movsl
std
push
xor
dec
mov
push
stos
imul
or
mov
mov
insb
mov
xchg
or
push
jp
xchg
jnp
andl
lret
testl
pop
call
inc
sub
fldl
push
test
loopne
dec
ret
pop
cli
cmp
fldt
or
cmpsb
adc
loop
or
dec
xor
insb
faddl
ret
repz
xchg
pop
enter
rcll
jl
pop
lock
sbb
minps
mov
pop
sbb
adc
dec
cmp
pop
cmp
pushf
push
or
sub
dec
cmp
push
jmp
gs
mov
pusha
orl
shll
out
xor
out
adc
mov
xchg
rclb
sbb
xor
or
push
inc
jl
shll
jb
or
out
mov
pop
pop
in
aam
push
cli
sbb
add
scas
xor
loope
pusha
je
push
ret
in
push
fisubrl
stos
int3
xchg
and
pop
mov
int
in
sbb
rorl
and
add
icebp
mov
mov
imul
push
sbb
rclb
ss
pop
push
sub
cmp
sub
sarb
and
or
cmp
fadd
bound
clc
jo
aam
push
pusha
push
enter
lahf
loopne
clc
dec
xor
insl
jne
cs
add
push
iret
xchg
out
jae
arpl
push
jnp
cmp
je
inc
or
mov
xchg
out
or
and
jle
cmp
in
and
push
push
sub
js
inc
inc
sbb
cmp
ret
xlat
in
call
sub
ja
fildll
fbstp
aaa
push
mulb
cmp
pop
mov
mov
je
push
inc
adc
and
or
jecxz
jmp
fcoml
cmp
xchg
pushf
push
pcmpeqw
xor
cmp
cmp
add
xchg
popf
or
push
mov
push
aaa
scas
andl
or
jnp
cmp
dec
jb
push
push
adc
xor
mov
mov
push
fcoms
inc
xchg
outsl
and
pop
inc
sbb
cmp
push
sbb
push
sub
jo
adc
xor
xor
out
out
push
push
test
mov
add
push
ret
mov
lock
leave
and
cmp
jne
add
mov
or
dec
in
addb
pop
outsb
push
mov
mov
mov
sub
jg
add
cmp
lret
lods
and
add
inc
rorb
enter
loop
fiadds
or
movsl
cmpsb
add
cmp
cltd
push
fisubrl
rcrb
cli
lds
jmp
jp
js
scas
jle
xor
or
fmull
sbb
cmp
lcall
insb
rcll
cmpsb
jo
js
mov
or
call
cltd
sar
andl
add
imul
int3
mov
cltd
inc
mov
scas
mov
dec
in
and
pop
divl
lods
xchg
add
xchg
int
lea
and
jbe
fcoms
pushl
pusha
xor
add
mov
inc
jl
js
and
xor
jo
xor
add
push
and
push
cmp
jbe
aam
xor
push
add
lods
stos
nop
add
xor
cmpsb
subl
mov
dec
sbb
test
fmulp
clc
adc
and
loop
sub
jo
bound
mov
or
das
lock
pcmpeqw
dec
mov
cmc
div
adc
imul
lcall
sub
int
add
test
sti
and
gs
jmp
cmp
sbb
and
mov
adc
add
sbb
ror
pop
inc
repz
or
push
rcrb
xchg
js
pop
inc
inc
ljmp
mov
inc
shll
mov
dec
popa
or
xor
xor
mov
dec
dec
jne
outsb
mov
and
fistl
inc
add
sbb
rol
adcb
xor
cli
test
shl
mov
adc
sbb
or
pop
mov
inc
shll
jo
xchg
jbe
call
shr
and
test
add
pop
enter
in
jmp
fistps
pop
jne
lea
add
lods
pop
jns
or
adc
xor
push
into
lret
notb
or
ret
inc
sbb
xlat
gs
cmp
mov
adc
or
lret
in
cltd
ljmp
inc
ficomps
add
repnz
lahf
dec
dec
mov
iret
cmp
or
std
pop
out
cltd
std
fwait
in
clc
pop
jo
add
imul
fcoml
add
ret
roll
mov
mov
sub
mov
cmovns
stc
lock
cmp
mov
je
rcll
lock
jne
xor
jb
inc
xchg
ja
fwait
xchg
cmp
sub
xchg
or
add
pop
dec
sub
lods
push
movsb
ja
in
outsl
arpl
pop
enter
push
divb
je
ret
adc
mov
in
push
lea
mov
inc
mov
cli
jne
lret
clc
decl
cmp
jg
push
in
sub
cmp
adc
jmp
push
cwtl
dec
xchg
sbb
inc
outsb
inc
pop
adc
adc
fisubrs
push
push
cmp
dec
inc
jp
add
aas
cli
add
adc
xchg
add
inc
cmp
adc
out
popf
xor
push
or
or
push
mov
icebp
sti
adc
cmpsl
test
enter
inc
mov
add
insb
rolb
sub
push
jl
pop
push
pushf
dec
divb
sub
sbb
jg
adcb
dec
int
jo
jbe
push
sar
mov
and
pop
loope
mov
adc
xor
fwait
add
and
test
pop
inc
stc
testl
sbb
test
sbb
lods
jecxz
xor
mov
je
fs
pop
pop
fs
pusha
inc
push
sbb
insb
insb
push
inc
loope
flds
aaa
out
insb
in
inc
icebp
mov
icebp
xchg
mov
xor
idiv
mov
add
cmp
divb
mov
mov
bound
push
cmp
pusha
and
iret
je
xor
adc
mov
lock
push
sub
inc
pop
mov
push
xchg
jmp
lea
sub
les
sbb
push
leave
add
js
push
imul
lock
cs
dec
cs
lock
jmp
push
cmpsl
jbe
test
addb
push
adc
cmp
push
jo
movntq
jp
dec
add
shlb
mov
and
mov
mov
add
push
mov
jmp
sub
lea
mov
sub
mov
pop
mov
cli
mov
fs
or
je
dec
popf
andl
xor
pop
jl
testb
ljmp
add
adc
pop
mov
xchg
xlat
test
test
ja
pop
js
inc
mov
sarb
xlat
add
scas
rclb
xchg
addr16
push
leave
ret
push
sbb
mov
adc
mov
clc
push
push
jge
jne
mov
mov
addb
mov
mov
mov
mov
sub
popa
insb
cmpsl
std
push
ret
and
adc
outsb
sbb
ja
mov
xor
xchg
clc
xor
xchg
fnstsw
add
fcomp
push
pushf
cwtl
jp
inc
fidivrs
inc
movsb
mov
test
sub
jo
cmp
or
or
aas
outsl
add
and
dec
push
lea
inc
cmp
push
pop
cwtl
push
or
add
lea
inc
sbb
dec
push
or
cwtl
xchg
in
sbb
dec
mov
cli
lods
add
adc
xchg
fsub
xor
enter
les
out
xchg
pop
xor
pop
pop
pop
sub
sbb
xchg
adc
add
cmpsb
mov
fs
adc
lods
js
push
shrb
mov
pop
arpl
push
and
sbb
popa
popa
gs
adc
pusha
loope
mov
inc
loopne
nop
ds
sub
sub
je
push
fs
and
or
jbe
mov
mov
or
pop
faddp
test
ja
add
jg
sbb
sbb
mov
jl
jg
adc
test
bndldx
add
fisubl
pop
inc
add
loopne
or
pusha
pop
xor
push
std
inc
ljmp
mov
adc
and
push
xchg
inc
or
or
rorl
cmp
ret
loope
fistl
into
jecxz
and
ret
xchg
adc
loopne
push
xchg
int3
mov
push
daa
mov
xchg
lret
faddp
aad
add
sysret
add
lea
pusha
cli
pop
pop
inc
nop
cmp
cmp
adc
lret
loope
sti
rolb
cmp
repnz
mov
pop
cmpl
js
cs
sti
test
push
jmp
jle
inc
mov
mov
sbb
shlb
sub
mov
jo
push
rcr
lret
pop
test
lret
addl
mov
clc
mov
xchg
mov
movsl
add
idivb
je
mov
arpl
pop
fs
and
jo
push
cli
inc
adc
scas
or
mov
hlt
popa
ljmp
mov
xor
mov
test
jb
mov
jecxz
das
inc
cmp
and
fdivl
add
insl
aaa
ret
mov
jne
mov
ljmp
adc
jle
test
inc
popf
cs
dec
shll
jae
add
push
push
push
push
je
push
fs
and
lahf
cs
jl
or
test
fstl
jnp
cmp
push
pop
lea
ret
and
inc
sbb
sbb
jno
or
push
sub
pusha
pushf
sub
pop
repz
push
pop
sub
add
subl
test
fmull
xchg
xor
aas
pushf
aaa
lock
pop
sbb
imull
popa
in
push
in
stos
sbb
or
jl
push
push
insb
or
sbb
inc
mov
pop
add
and
jge
inc
or
cmp
or
and
push
mov
xchg
ret
rolb
scas
push
subl
clc
sbb
icebp
jecxz
xor
push
cmp
xorb
aam
addr16
push
mov
push
pop
sub
and
push
adc
addr16
mov
loope
push
dec
ljmp
sbb
ja
rdmsr
sarb
inc
pop
xor
mov
inc
xchg
dec
push
stos
sbb
fldl
shr
and
mov
mov
shlb
inc
shrl
push
jo
bound
mov
cmpsl
mov
jne
out
xor
orb
mov
xor
push
or
sub
push
test
loope
les
pop
mov
test
pushf
adc
stos
adc
push
add
lret
jle
shrb
push
and
ret
in
lods
xchg
fbld
in
inc
mov
les
shrb
aam
adc
sbb
dec
jle
mov
push
cmp
ret
and
xor
and
sub
shrd
jge
adc
adcl
js
sub
xor
aaa
es
lea
xlat
mov
add
frstor
push
inc
adc
inc
cwtl
test
clc
sub
push
xor
jle
mov
ds
xchg
dec
outsl
xlat
andl
adc
pop
inc
pop
in
pop
jecxz
or
lret
inc
outsb
jecxz
push
lds
sbb
inc
jmp
pushl
xchg
mov
outsl
popf
or
call
inc
lea
push
or
cmc
ss
jbe
loope
or
rcll
cmpsb
insl
xor
mov
adc
sbb
inc
mov
sub
pop
push
push
jle
inc
pop
call
fistpll
sub
or
push
pop
sbb
and
sbbb
cmpsb
jmp
add
or
xor
adc
cmp
movsb
jl
dec
xor
pop
sahf
push
scas
test
mov
adcl
sbb
xor
xor
cwtl
lods
dec
adc
xchg
dec
sub
jno
les
test
ret
in
xchg
inc
mov
stos
push
scas
lods
fdivrl
mov
mov
sub
inc
dec
mov
sbb
xor
mov
push
or
call
sub
adc
sbb
add
xlat
shr
pop
add
inc
dec
insb
dec
sbb
pop
dec
adc
pop
inc
xchg
xchg
mov
adc
inc
add
daa
sbb
fdivs
lods
sbb
add
jmp
out
jmp
pop
cwtl
hlt
push
fnsave
mul
push
nop
or
test
xor
lock
movb
je
loope
call
cmp
mov
xorb
jne
push
rcrb
out
xchg
xor
add
sbb
and
sub
and
mov
mov
jo
sti
das
out
xor
and
xor
xchg
cmp
or
inc
mov
mov
sub
cwtl
dec
add
dec
adc
lret
mov
xchg
push
mov
mov
mov
aam
loopne
lret
movsb
mov
lahf
sbb
test
shlb
add
addl
jp
jo
jbe
add
and
cmp
or
cmp
aaa
add
test
add
outsl
sub
lea
mov
ret
mov
out
cmp
mov
pop
inc
mov
xor
out
je
insb
pop
sbb
xchg
push
cmp
popa
fstpt
add
mov
mov
fnsave
push
mov
push
out
push
push
movhps
adc
jg
mov
ret
lock
sbb
push
data16
and
jo
mov
mov
nop
jmp
xchg
or
or
fsubrl
add
es
mov
push
pushf
pushfw
inc
xlat
adc
lcall
dec
rcl
stos
outsb
imul
fdiv
fmuls
mov
fwait
push
xlat
iret
inc
inc
add
push
adc
mov
fstl
jo
jmp
xor
movsb
mov
test
push
rorb
push
pop
cmp
sub
mov
sti
sub
mov
mov
insb
mov
cwtl
mov
dec
dec
pop
mov
adc
mov
popaw
mov
lret
add
or
leave
pushf
shlb
mov
dec
icebp
or
jne
mov
xchg
dec
mov
sbbb
xchg
mov
jns
fists
addl
or
inc
orb
cmc
movsl
cmp
je
push
xchg
pop
data16
pop
icebp
add
out
xchg
andl
add
xchg
adc
dec
mov
inc
popa
add
sbb
add
test
jle
cmpsl
sbb
xchg
movsb
lock
xor
fadd
pop
xor
adc
loopne
mov
xchg
xor
xor
mov
in
mov
cmp
adc
push
inc
mov
mov
hlt
push
adc
rcll
jge
cli
inc
or
push
push
in
ss
xor
xor
push
cli
push
sub
mov
aad
mov
sti
movsl
dec
push
or
jae
into
in
es
sub
add
or
cmp
inc
cmp
jbe
push
in
lods
rcrb
andl
sub
dec
xorb
mov
cli
fwait
lea
add
in
inc
xor
mov
mov
push
mov
adc
sbb
fisubl
cmp
dec
jge
adc
movb
add
dec
sahf
pop
cmp
cmp
mov
push
pop
mov
xor
cmp
ret
call
inc
loop
sbb
imul
push
mov
xor
and
sbb
xor
pop
and
aas
sahf
mov
xchg
xchg
int
jbe
mov
adc
lock
xchg
pop
jne
xchg
inc
cli
push
cld
push
cmpsb
clc
mov
rorb
cwtl
in
jge
movl
aas
jbe
insb
shr
inc
add
pop
adc
xchg
bound
insb
call
clc
js
js
inc
adc
inc
sahf
loope
xchg
sub
pusha
insb
std
mov
jg
mov
decb
push
jbe
adc
fucom
gs
test
xlat
and
jge
clc
subl
jo
mov
add
mov
sbb
lods
mov
sbb
cmpsl
jl
push
push
pop
adc
xor
mov
shl
xchg
jne
dec
jmp
jns
jecxz
pushf
cmp
inc
orl
mov
lea
push
push
inc
outsb
cmp
xor
xor
test
clc
adc
bound
sbb
shlb
shll
push
ret
and
or
bswap
sbb
adc
push
fisubrl
jge
out
movsl
addl
insb
pop
into
push
sub
xor
jge
ljmp
pushl
daa
outsl
movsb
mov
inc
add
cmpsb
mulb
inc
data16
ja
popa
push
cmp
je
cs
add
dec
pop
jo
sub
daa
ss
adc
add
enter
pop
mov
das
lcall
push
pop
mov
outsb
push
lea
inc
jmp
mov
push
adc
inc
aaa
jbe
inc
or
or
aaa
dec
sub
std
hlt
out
dec
or
pop
sub
add
popl
mov
cltd
push
jo
dec
cwtl
sbb
mov
xor
xor
movsl
or
pusha
jo
cmc
mov
lret
push
jmp
xlat
inc
out
adc
mov
fnstenv
jb
fmuls
cmc
adc
xor
stos
add
loop
cs
inc
push
mov
popa
sbb
and
lret
stos
pop
inc
addr16
stos
jae
mov
call
pop
dec
cmp
dec
jp
lea
mov
add
je
jb
jmp
inc
pop
mov
jne
loope
push
adc
cmpsb
sahf
xor
mov
push
or
pop
fs
cmp
xchg
test
push
xor
rclb
or
dec
sub
push
lea
clc
daa
mov
cmp
mov
xchg
out
cmp
push
les
xor
mov
cld
adc
mov
push
in
loopne
push
push
bound
add
lret
mov
push
push
push
call
inc
mov
jnp
lds
popf
in
cmp
dec
fadds
push
adc
or
dec
or
addr16
jo
sbb
xor
fistpll
sbb
ds
jmp
or
jo
or
xchg
and
sahf
int3
cmpb
aam
into
adc
sbb
sub
sub
int3
out
pop
ret
sar
lahf
shl
inc
mov
testl
mov
pop
mov
xor
add
frstor
mov
push
xchg
ret
mov
rorl
mov
and
andb
insl
jne
ds
es
xchg
mov
enter
push
jae
push
push
mov
es
mov
sti
jl
movl
flds
aas
add
es
dec
push
xor
clc
adc
in
mov
lea
push
pop
add
stos
in
call
ss
sbb
pop
push
gs
inc
icebp
aaa
popa
xchg
mov
stos
and
mov
test
add
mov
push
push
mov
push
rolb
insl
andl
adc
mov
inc
and
dec
pop
lods
push
xchg
mov
mov
add
jnp
mov
sub
xchg
sbb
aaa
adc
rol
push
sub
cmpsl
cmp
sti
sub
loopne
cmp
xor
movsl
lds
inc
or
test
insl
jbe
adc
xchg
push
inc
testl
fimull
lcall
xchg
pop
loope
xor
push
mov
adc
pop
dec
adc
pop
push
mov
pushl
push
push
jp
adc
pcmpeqb
lret
jnp
je
into
mov
loopne
lcall
adc
add
testb
cmp
add
pop
cmp
imul
and
test
and
mov
out
out
data16
adc
outsl
xorb
cmp
out
sti
xchg
dec
ja
je
or
je
or
sub
sub
cmpsb
adc
adc
cmp
stos
jecxz
loop
jnp
test
push
or
add
fists
sbb
lcall
mov
incb
jmp
cmp
movsl
test
bound
sub
cmp
roll
inc
mov
or
push
addl
push
mov
xchg
sbb
xor
aaa
push
jg
or
push
loopne
aas
add
or
test
or
pop
test
sbb
je
and
add
test
pop
lods
add
adc
jmp
dec
push
out
loopne
das
ret
lahf
and
push
inc
es
sbb
push
movb
dec
cld
mov
and
sti
inc
mov
sub
sub
sbb
add
sbb
push
adc
ficomps
repz
xor
mov
cmpsb
cmp
or
push
adc
adc
testl
mov
dec
mov
pop
in
dec
fbstp
dec
test
fisubrs
inc
or
inc
sbb
int3
jnp
lea
and
or
adc
push
xor
and
rorb
jbe
jmp
pop
and
testl
mov
adc
mov
sbb
adc
push
rorl
pop
fcoml
add
xor
mov
sti
je
cmp
jle
adc
push
inc
add
sub
cmpsl
fiadds
xchg
jno
movsl
pop
loopne
test
inc
fwait
data16
nop
fcomp
push
fmuls
loopne
test
xchg
in
push
push
rcll
add
sbb
push
pop
addr16
stos
xor
xor
pop
xchg
push
mov
xchg
pop
faddl
and
pop
lds
add
jnp
xor
icebp
xchg
gs
mov
mov
push
cltd
mov
imul
mov
pop
mov
call
xchg
out
add
push
lock
cmp
push
in
mov
call
sbb
out
outsl
inc
movsl
push
aaa
jnp
push
pop
jge
scas
cmp
in
sbb
mov
ret
pop
mov
fcoml
enter
in
pop
pop
push
rcrb
add
push
mov
xorb
pop
rcl
cmpl
push
inc
and
push
pop
push
fisttpll
mov
into
test
xor
jle
jl
inc
mov
fs
jmp
sbb
loope
arpl
or
das
add
and
popf
mov
mov
sbbl
adc
or
add
push
or
sbb
into
xchg
or
jmp
jle
sbb
and
jle
pusha
lock
shll
movsb
popa
push
hlt
adc
push
mov
xchg
rclb
loop
mov
mov
mov
and
push
xor
les
inc
and
push
shrl
in
cmp
xor
inc
enter
pop
xchg
inc
push
jne
inc
sub
int
push
sbb
dec
in
fimull
popf
push
sbb
in
cmp
faddl
into
data16
xchg
cmp
out
mov
pop
jmp
mov
push
jo
xchg
orl
sub
daa
subb
xchg
je
or
jmp
add
or
pop
or
cld
test
pop
xor
push
movl
imul
or
mov
add
push
mov
sbb
sbb
cmp
mov
cmp
f2xm1
or
push
or
push
pop
push
or
push
xchg
mov
add
inc
stos
xchg
adc
push
mov
inc
xchg
add
add
cwtl
pop
or
push
jp
imul
xor
jo
sub
addb
push
in
add
sbb
fmuls
shl
call
test
add
shl
pop
and
in
decl
gs
inc
inc
pop
xor
pop
punpckhbw
in
lcall
mov
pop
movsl
xchg
dec
cli
jp
push
jb
cmp
iret
xchg
mov
pusha
sbb
dec
shlb
mov
cmp
push
dec
xor
ljmp
sbb
push
push
loope
rcrb
pop
jl
add
out
or
xchg
and
xor
shrb
mov
push
mov
aaa
clc
and
push
mov
push
xchg
jo
cmp
dec
inc
or
jl
loopne
enter
push
cmp
loopne
mov
cmp
icebp
add
call
insl
cmp
dec
repnz
add
bound
dec
or
push
and
add
add
xor
lock
enter
andb
jne
es
stc
lods
push
les
in
or
insl
aam
jg
cld
insl
loope
xchg
pop
sbb
pop
mov
push
cmp
rcrl
sbb
pop
xchg
call
pop
cmpl
sbb
inc
adc
sarl
dec
out
dec
idivl
fsubl
inc
or
or
insb
je
fidivrs
sbb
sbb
inc
popa
pusha
inc
repnz
add
in
cmpsb
sub
out
movsl
adc
pop
lea
mov
mov
cmpl
add
sub
xor
jp
lods
adc
inc
loope
push
ljmp
mov
xor
xchg
adc
inc
jo
add
cmp
movb
popa
pop
or
mov
push
adc
in
or
jle
dec
push
movsl
out
daa
cli
stos
in
inc
jne
lcall
into
mov
and
int3
mov
ss
xor
or
sbb
arpl
es
push
inc
xor
sbb
sub
mov
inc
imul
je
out
mov
js
test
or
clc
shll
xor
inc
sbb
mov
adc
lea
xor
repz
shll
es
stos
cmp
sub
sbb
jge
xchg
mov
es
inc
push
je
lcall
adc
sub
scas
mov
std
adc
insl
jb
add
cmpsb
sarl
repz
adcb
call
jnp
add
push
adc
or
sub
cmpsl
popa
mov
xchg
cli
fsubrp
sbb
outsb
cmpsl
push
fcoms
ss
and
or
add
jge
insb
pop
dec
adc
add
pop
je
cwtl
add
je
cmp
aas
js
and
mov
xchg
mov
movsb
inc
or
mov
test
inc
jecxz
pop
mov
adc
pop
dec
dec
inc
or
mov
add
pusha
call
fs
inc
lcall
mov
fiadds
and
mov
cmp
mov
andl
movsb
xor
cltd
pop
push
sbb
dec
and
pushf
push
adc
and
into
mov
stc
dec
pop
mov
inc
adc
push
xor
adc
test
lock
into
add
fs
push
jmp
enter
jmp
dec
es
mov
mov
movsb
arpl
cmpb
pop
sbb
mov
mov
sbb
cmpsl
bound
out
dec
or
fisubrs
lods
lods
je
adc
mov
fs
push
mov
push
fiadds
daa
xchg
xor
push
enter
inc
in
enter
or
or
add
xchg
leave
and
and
iret
addr16
or
sub
mov
xor
xor
and
push
test
or
lea
cmp
ja
xchg
mov
xor
jno
mov
sbb
jge
shlb
or
je
xor
add
jb
or
nop
mov
cmp
lret
xor
push
mov
jb
or
cmp
inc
push
jns
dec
inc
ret
lret
add
or
cmp
push
mov
fwait
inc
dec
in
lret
fcoms
xchg
aam
dec
xor
sahf
push
push
sahf
inc
loopne
mov
mov
add
dec
fs
cltd
ja
or
scas
mov
jmp
push
aaa
xor
and
cmovp
daa
mov
cmp
push
mov
in
jl
sti
or
and
daa
cmpsl
xchg
jo
mov
daa
flds
stos
dec
test
filds
jo
out
test
test
pop
cli
dec
clc
adc
mov
pcmpeqw
shll
adc
je
and
adc
adc
mov
add
outsb
dec
adc
and
inc
and
jmp
pushl
jmp
mov
push
leave
mov
pop
lret
dec
or
int
jo
inc
ret
cld
movsb
fdiv
lods
dec
push
or
sbb
dec
inc
add
push
movsl
sub
lea
or
sbb
adc
or
sbbb
sbb
out
cmp
dec
ja
and
aaa
push
scas
dec
fmuls
add
push
pop
xchg
jae
cltd
mov
sub
stc
sbb
cmp
xchg
add
xor
call
out
out
loopne
enter
filds
in
push
in
imul
pop
in
add
jns
cmp
or
jo
add
lock
jne
orl
repnz
leave
xchg
lock
pop
adc
push
pop
jl
push
mulb
das
add
std
repz
sahf
xor
and
leave
xchg
push
lock
or
jne
pop
add
push
xor
and
mov
dec
or
adc
int3
mov
dec
pop
or
push
jmp
js
lock
mov
xor
push
outsl
jno
dec
xchg
setp
int3
or
jne
lock
pop
test
sbb
dec
cmp
roll
mov
pushf
test
and
std
mov
test
push
pop
add
loopne
add
hlt
push
mov
push
dec
push
cmpsb
sbb
rorb
divb
mov
rorb
fbstp
push
mov
jae
sub
out
lcall
or
or
inc
xchg
testb
int3
push
out
push
int3
mov
jnp
cld
xor
cmp
or
in
inc
adc
stos
and
cs
sahf
daa
dec
add
sarb
cmpb
push
push
jae
mov
push
mov
ret
jbe
jnp
jae
int
mov
jmp
add
cmp
jne
pop
adc
push
or
xchg
pop
adc
xlat
push
pop
cmp
cmp
adc
fwait
or
shr
mov
jp
cmp
loop
dec
push
or
dec
ficompl
and
xor
loopne
jl
repnz
mov
call
add
call
xchg
inc
imul
jg
andl
sbb
or
mov
or
test
decb
faddp
inc
aad
and
data16
mov
les
jo
dec
or
shrb
add
out
and
lea
enter
push
push
dec
mov
jo
add
sbb
push
mov
adc
fistpl
daa
xchg
pop
jb
fcompl
sbb
mov
sub
fdivr
in
cltd
nop
decl
push
mov
or
ja
jmp
nop
mov
pop
rolb
mov
jne
mov
pop
dec
imull
jb
dec
sbb
adc
sub
and
xor
sub
and
push
mov
adcl
jo
jns
pop
add
inc
push
sbb
push
dec
or
clc
cld
jecxz
test
mov
out
test
mov
jle
je
cmp
jbe
mov
push
xor
inc
imul
lds
or
or
pop
cmp
add
dec
ljmp
ret
nop
popa
in
movsl
mov
stos
inc
bound
xchg
sub
fdivs
ret
xchg
xchg
mov
test
push
push
clc
push
add
xchg
adc
push
popf
test
or
clc
dec
addl
inc
test
dec
sarl
push
cmp
jo
add
mov
or
or
lock
pop
adc
jmp
jge
or
cmc
ret
inc
lcall
mov
and
xchg
lea
loopne
pop
inc
jns
jo
pop
mov
iret
mov
xor
enter
fwait
leave
adc
push
inc
cmp
sbb
push
movsb
cmp
or
lods
add
pop
sub
daa
xor
add
cs
mov
add
add
loope
or
or
inc
push
cmp
jb
fwait
imul
std
out
sub
jmp
xor
js
cmp
imul
push
push
jnp
mov
lock
dec
shrl
mov
ret
test
dec
push
add
and
adc
or
inc
cs
push
adc
dec
dec
xchg
jle
clc
testl
pop
daa
and
sbb
int3
adc
add
fcoml
pavgb
test
subb
adc
xchg
and
cmp
adc
mov
pop
negl
xchg
adc
push
push
dec
repz
adc
iret
or
and
arpl
xor
mov
enter
add
and
dec
sbb
xchg
jne
sub
push
sbb
nop
pop
rorl
dec
xchg
scas
xor
shlb
dec
push
inc
icebp
or
lea
add
or
loope
int
fwait
xorl
or
icebp
dec
jmp
sub
fadds
outsl
lret
in
jnp
or
dec
and
dec
pop
xchg
mov
adc
out
add
loop
pop
data16
xor
push
jno
ret
gs
imul
je
dec
mov
movsb
xor
cmp
sbb
dec
aam
in
lods
rcrb
pop
add
andl
sub
push
pop
lods
mov
cli
scas
loopne
pop
push
pop
ret
add
jo
addr16
dec
fmull
pop
push
js
push
push
add
pop
mov
or
fcoml
loopne
mov
cmp
and
dec
add
iret
mov
jns
icebp
and
xchg
mov
ret
push
jl
and
or
lea
push
loopne
imul
mov
xor
adcl
mov
jle
pop
pop
call
out
imul
mov
xor
adc
xor
sbb
push
insl
ja
cmpb
sub
dec
xorb
insb
pusha
stos
pushl
jecxz
sbb
mov
mov
loop
lret
push
or
cmp
adc
sbb
sbb
and
mov
scas
cltd
jne
cmp
cmp
and
or
into
sbb
mov
add
and
rclb
jae
out
mov
push
outsl
andps
xor
adcb
sbb
add
jecxz
shl
pop
or
xchg
cli
ret
adc
cmp
ss
enter
pushf
hlt
add
arpl
sub
mov
ret
cmp
sbb
jl
pop
js
imul
mov
data16
in
push
std
ljmp
cld
or
sbb
sub
jns
mov
insb
aam
mov
repz
and
cmpb
clc
lea
ret
push
popa
stos
cmp
push
fldt
sarb
cmp
adc
loop
jmp
fisttpl
loop
xchg
arpl
xchg
subl
or
imulb
je
jmp
call
inc
mov
dec
shlb
clc
imul
dec
js
cld
push
xor
shlb
iret
xor
ficomps
testb
adc
je
inc
jp
inc
adc
pop
sti
lret
inc
mov
addr16
xchg
mov
cltd
push
int
sbb
jo
pop
daa
shl
jb
bound
test
sub
in
mov
jno
call
pop
lods
bound
xor
imul
jg
fbld
mov
or
ret
mov
enter
xchg
or
loopne
fidivrl
mov
mov
dec
add
jmp
add
mov
push
aas
mov
mov
out
sbb
shll
jns
push
xor
cmpsb
xor
add
ja
and
pop
mov
pop
jle
sub
sub
xor
xor
das
das
das
das
cmp
inc
faddl
adc
imul
lret
and
add
sbb
push
or
xor
jo
jge
sbb
add
rolb
aaa
mov
movsl
sub
push
xor
js
inc
add
cmp
pushf
dec
decl
jno
aam
sbb
push
sub
lods
ficomps
or
mov
mov
inc
pop
jne
jmp
add
fadds
dec
xor
addr16
add
mov
fbld
adc
fsubrl
push
aad
push
push
jb
and
scas
inc
pop
push
push
sbb
and
jp
ljmp
hlt
addb
adc
add
mov
sub
push
pop
mov
arpl
mov
pop
and
dec
pushf
jbe
sub
andl
push
icebp
ret
and
cli
jbe
repz
int3
je
cmp
jae
add
xchg
add
push
push
mov
adc
cmp
or
adc
sub
xchg
cmpsl
mov
inc
sbb
xchg
cmp
pop
xchg
insb
push
mov
sbb
pop
cmp
sub
mov
jne
pop
out
sti
rep
cmpsb
inc
xor
or
adc
mov
jbe
jmp
sub
jae
ljmp
dec
sub
sbb
push
cmp
andl
ret
jmp
jne
push
push
push
push
xor
xor
mov
push
adc
inc
clc
dec
ss
adc
or
sub
je
inc
sub
add
and
jb
push
xchg
and
dec
and
xor
inc
xchg
jo
out
xchg
testb
rorb
push
aas
int3
inc
xchg
pop
mov
movsl
and
jle
pusha
in
sbbb
xor
push
call
shlb
and
or
push
sub
popa
mov
lock
lret
adc
sub
push
mov
subb
jmp
popa
mov
mov
mov
shlb
mov
jmp
hlt
ret
or
jl
inc
lock
es
and
cld
sub
add
push
sub
and
ds
mov
repnz
inc
ret
in
cmpl
push
cld
clc
add
jp
pushl
xchg
rcl
icebp
into
add
lret
loop
or
inc
cld
lret
jnp
pop
adc
push
and
cmp
rcl
dec
sbb
jns
mov
testl
nop
sbb
call
add
add
push
fisttpl
cmp
or
fs
mov
rorl
mov
hlt
and
mov
jge
adc
jno
pushl
ficoml
subb
mov
clc
ss
dec
rclb
rolb
mov
xor
mov
adc
arpl
mov
fistl
cmp
xor
or
mov
lcall
mov
push
sbb
and
sarb
dec
jne
test
movsb
sbb
loopne
mov
lods
add
add
cmpsb
adc
bnd
shll
xchg
and
pop
jp
add
jno
mov
push
mov
aam
aad
and
je
mov
cld
rclb
xor
sarb
testl
push
mov
cltd
cmp
jl
cmpl
inc
gs
sub
clc
cwtl
push
pshufw
sub
subb
inc
sub
push
lahf
popa
jl
imul
add
and
jae
stos
sarb
mov
mov
aad
pop
pusha
gs
cmp
sahf
leave
adc
and
pop
mov
xchg
add
cmp
dec
cli
andl
les
int3
adc
xchg
add
dec
push
movsb
or
es
xchg
or
aam
add
add
xchg
mov
adc
pop
jle
stos
push
sbb
and
ds
cwtl
jle
add
jo
rcrb
insb
loope
nop
mov
in
insl
push
adc
rorl
or
cmp
xorl
shrb
test
test
add
outsb
cmp
je
adc
xor
shll
sarb
lahf
inc
push
clc
add
clc
jbe
or
or
mov
mov
jmp
clc
mov
jbe
lret
dec
inc
mov
xchg
jo
adc
xor
jle
dec
fcoml
leave
addl
pop
int3
in
mov
add
js
push
mov
dec
rdmsr
jle
pop
test
popf
and
adc
fadds
xor
add
lock
cmp
adc
mov
fdivp
push
fwait
sub
ret
or
mov
or
popf
movsl
test
movsl
lret
inc
stos
rcll
pop
push
and
loope
xlat
jl
pop
in
mov
iret
stos
or
and
lea
nop
push
mov
or
push
je
xlat
adc
testb
pop
adc
or
addl
inc
icebp
imul
lcall
sbb
mov
push
dec
iret
pop
mov
clc
or
insl
pop
push
add
and
lods
mov
enter
pusha
xchg
ret
pop
xchg
add
adc
pop
shlb
cmp
pop
notb
jno
testb
dec
sbb
enter
mov
sbb
dec
add
jne
sub
ljmpw
add
cmp
aaa
sub
push
push
mov
jae
jb
pushl
mov
jae
push
pop
jmp
add
les
xor
jae
add
aam
outsb
in
and
sub
push
icebp
adc
jae
inc
sahf
mov
pop
test
std
sbb
dec
movsl
xchg
fisubs
push
sub
xor
add
shll
fistl
sbb
inc
and
lods
dec
icebp
mov
xchg
pop
xchg
cmc
test
adc
fistpll
mov
ret
mov
or
cmp
cmp
inc
push
enter
lret
mov
dec
negl
mov
out
adc
mov
mov
cmp
jb
movsl
jb
decb
sub
jecxz
daa
add
leave
insl
jb
mov
fcmovnu
nop
arpl
ja
add
addr16
lods
pusha
leave
insl
fldt
aas
insl
repnz
cmp
adc
jecxz
out
dec
sbb
or
icebp
sub
add
sarb
add
or
rcrb
mov
sub
add
inc
repnz
pusha
enter
push
nop
add
cmpsb
dec
stos
or
adc
pop
pop
inc
aaa
or
mov
push
pushf
fwait
mov
fidivrs
mov
iret
mov
mov
mov
and
lahf
mov
and
and
sbb
and
sbb
sbbb
movsb
sbbb
and
jb
aam
push
jb
sbb
daa
sub
inc
push
sbb
pop
cmp
cmp
mov
iret
in
push
movsb
or
jmp
sub
in
jnp
mov
aam
and
xor
lock
mov
scas
and
adc
xor
or
outsl
sbb
xchg
xor
mov
mov
sub
lea
movsl
mov
enter
push
jmp
or
or
pusha
push
ret
dec
xor
sti
cmpsb
or
int
out
push
adc
adc
or
jmp
adc
dec
inc
ds
xchg
sub
or
xchg
nop
pusha
cmpb
int3
js
and
sahf
mov
xor
add
test
and
push
or
pusha
jns
fildl
adc
add
in
adc
push
mov
dec
mov
sub
cli
ja
mov
dec
ja
inc
mov
sub
lret
testl
dec
sub
pop
adc
sbb
adc
aam
xor
dec
mov
in
int3
movsb
and
sbb
pop
ss
xor
jbe
push
and
and
mov
shll
push
testb
data16
mov
xor
test
in
data16
ss
cmp
push
cwtl
push
js
jo
pop
repnz
pop
adc
insb
cmp
dec
pop
fsubrl
in
pushf
movaps
rol
xchg
fsts
lock
fbstp
scas
fcomp
or
pusha
add
jecxz
pop
pop
subl
mov
jne
push
or
xor
imul
movsb
push
adc
xor
call
add
test
fbld
es
or
add
or
repz
inc
jo
cmp
sahf
repz
adc
cmp
jne
addb
or
out
cmp
call
adc
inc
test
in
inc
sbb
sbb
sti
loope
je
les
inc
cs
pop
sub
cmp
push
cmp
imul
lds
push
cmpb
jae,pn
push
ret
rep
or
sbb
or
paddsb
xor
scas
sub
mov
xor
lds
add
fcoms
mov
adc
push
aaa
jmp
in
lock
shl
mov
sbb
sub
lock
pop
add
lds
sarb
arpl
sti
jg
movsb
orl
lods
int
and
inc
pop
dec
movsl
xor
or
loope
shrl
sbb
fildl
adc
cmp
leave
insl
in
sbb
call
test
loopne
rorl
mov
sub
or
sub
pop
jmp
cmp
xchg
shlb
xchg
xor
in
dec
or
push
test
cmp
lahf
fadds
test
pushf
inc
lea
js
stos
mov
add
dec
cmp
jmp
add
inc
cmp
in
sbb
test
push
pop
or
les
push
loopne
adc
xchg
push
sbb
inc
ljmp
jb
or
test
fdivrl
jmp
push
add
jnp
cld
lock
loopne
inc
scas
jmp
mov
popf
or
fsubl
lock
pop
hlt
push
popa
mov
push
add
loopne
inc
push
es
push
adc
montmul
cmpsb
inc
nop
xor
ret
push
divl
pop
mov
xchg
inc
out
sbb
or
push
inc
lock
out
js
shll
pop
repz
adc
scas
adc
xchg
fs
orb
inc
clc
gs
mov
push
je
aaa
and
or
xor
mov
pop
xor
push
lock
fsubrp
sarl
add
test
mov
mov
adc
cli
add
cmp
xchg
push
mov
dec
in
mov
mov
cmp
jl
cmp
jle
cmp
inc
jae
decb
jp
or
pop
inc
cmp
aas
lods
mov
jecxz
rorl
pop
cmp
lret
jge
mov
pop
and
cmp
jl
clc
sub
adc
pop
add
push
inc
orb
or
iret
fcomps
shlb
and
pop
clc
xor
movsl
sbb
cmp
jle
clc
sarl
add
into
and
adc
pop
ljmp
loopne
mov
dec
mov
enter
pop
sbb
dec
xor
mov
inc
jmp
and
fmulp
jbe
or
hlt
jge
jbe
aaa
sub
cltd
add
adc
add
inc
mov
and
adc
inc
imul
aam
and
sub
adc
sub
lock
imul
mov
sub
popf
xchg
mov
lock
jne
adc
add
imul
incl
mov
mov
jmp
nop
cli
mov
inc
pop
ja
sahf
jle
les
les
rolb
aaa
icebp
inc
add
mov
xor
xchg
push
cmp
pop
push
fnstenv
push
fcomp
push
pop
inc
test
xor
pop
inc
inc
sub
mov
pop
shrl
call
lea
adc
loopne
ret
setg
sbb
and
lock
fcoms
or
mov
adc
lret
fsubrs
push
popl
adc
jle
jnp
je
adc
mov
adcl
movsl
inc
sub
bound
push
or
mov
ret
mov
jbe
xor
das
inc
fsubrs
das
lods
dec
pop
xchg
cmp
scas
mov
adc
out
or
push
pop
pop
pusha
fs
inc
jbe
xchg
push
cmp
outsl
push
mov
js
or
adc
adc
sub
les
xor
cmp
sbb
xchg
lret
es
jl
enter
jle
adc
dec
adc
dec
je
adc
leave
add
jne
push
xchg
out
jle
push
xor
jp
int3
mov
push
jns
xorb
and
adc
mov
cmp
add
imul
aaa
cltd
sub
pop
int
cmpsb
pusha
inc
xchg
cld
je
pop
sub
cltd
sub
push
pop
or
and
scas
or
xchg
ret
addb
mov
dec
jle
and
add
push
and
test
imul
cmp
and
push
inc
mov
jge
inc
es
cmp
outsb
inc
mov
movsb
cwtl
inc
xor
enter
mov
push
and
and
xor
and
add
sar
jl
mov
add
pop
xlat
dec
sbb
fmuls
sbb
jmp
shll
xor
cmc
push
test
lea
xchg
xlat
mov
adc
inc
in
pushf
cwtl
cmp
or
xor
pushf
sbb
fs
or
jmp
shlb
loopne
mov
mov
ret
addb
and
adc
add
adc
imul
push
in
inc
cmpsb
ret
or
mov
mov
xchg
mov
fwait
movb
fsubrl
mov
xor
xor
cld
shrb
jecxz
in
xor
inc
push
addl
lea
xlat
cmpsl
icebp
mov
clc
fisttps
pop
mov
test
je
or
je
push
test
add
jg
pop
rolb
pop
push
cli
add
inc
push
mov
std
inc
jg
rol
xchg
cmp
mov
add
arpl
and
into
mov
add
je
push
jle
adc
mov
and
jne
push
dec
mov
in
dec
into
mov
pusha
movsb
or
push
in
mov
mov
sub
pop
loopne
ret
pop
insb
xor
jp
pop
je
fwait
adc
mov
or
fs
pusha
icebp
jns
inc
int
add
push
lods
add
js
nop
js
pushl
or
stos
and
xchg
mov
test
pop
xchg
mov
push
imul
or
sbbb
movsb
cltd
add
pop
adc
aaa
sub
mov
push
fs
lock
or
cmp
mov
or
andb
and
cli
add
and
xchg
je
call
cmp
addb
mov
sub
inc
jle
enter
push
repz
push
imul
mov
or
push
mov
pop
adc
sub
push
pop
xchg
jp
mov
addr16
cli
xchg
jecxz
mov
movsb
push
mov
or
push
mov
sub
cmp
outsb
das
movsl
or
mov
in
xor
and
and
cmp
orps
orl
repnz
sbb
jl
ret
sbb
sub
lea
xor
fisubl
pusha
pop
mov
adc
aam
and
push
push
adc
stos
es
mov
pop
pop
lgs
mov
adc
shrl
mov
clc
or
xchg
test
mov
push
dec
jns
jb
test
push
das
pop
adc
adc
pop
add
add
in
or
xor
jg
mov
data16
xor
mov
adc
sub
push
pop
dec
sahf
sbb
jbe
pop
test
lahf
dec
mov
jle
ja
mov
inc
or
fistl
in
push
mov
daa
arpl
adc
add
sub
ret
outsb
shr
ret
jmp
rolb
jae
dec
negb
sub
int3
sub
fcmovb
shlb
jge
push
lea
and
mov
test
sarl
mov
sub
mov
je
and
mov
inc
jp
or
push
or
loopne
xchg
loope
repnz
movq
mov
adc
imul
jmp
in
inc
sub
adc
and
cmp
mov
cmp
sub
iret
sbb
push
inc
sbb
aaa
pop
inc
jae
test
je
mov
dec
xchg
mov
sub
lds
incl
mov
dec
cltd
andl
dec
pop
test
pop
jle
ret
popa
add
sub
push
mov
sub
inc
je
or
push
xchg
bound
scas
fsubrs
pop
push
pop
je
fldl
rcll
fstpl
dec
cld
mov
add
pop
inc
jne
adc
sahf
filds
adc
jne
push
divb
or
jne
or
jne
or
insl
add
push
fldz
je
xor
into
fnsave
mov
push
popf
inc
mov
or
xor
and
mov
push
ss
jae
and
movsl
out
pop
fadds
lea
fstl
jecxz
clc
push
ffreep
scas
mov
movsl
movsl
lea
movsl
fs
inc
push
out
cld
and
icebp
jne
jnp
icebp
enter
mov
notb
add
jo
negb
dec
push
lea
jo
fmulp
loopne
mov
in
outsb
or
aam
lods
pusha
adc
sbb
jne
cmp
inc
orb
dec
mov
push
or
fimuls
sti
movsl
pminub
or
and
mov
jnp
int
adc
and
push
sub
lock
je
push
dec
add
sti
out
andb
or
push
pop
test
sbb
xchg
enter
sub
mov
sub
add
fcmovbe
sbb
jns
iret
ds
jge
and
pop
push
imul
cmpl
push
pop
push
push
or
rol
pop
nop
js
nop
div
nop
sub
in
push
adc
mov
mov
push
add
adc
and
push
andl
in
add
or
pop
call
fildl
mov
adc
add
test
adcb
or
add
stc
mov
push
or
push
or
or
ja
add
push
or
inc
adc
popa
sub
adc
les
sahf
inc
xor
test
loop
xor
cs
pop
pusha
mov
add
ret
push
outsl
dec
xchg
xchg
cmp
push
jp
or
mov
mov
insl
push
push
test
and
incb
lret
enter
faddl
push
mov
int3
mov
fs
inc
or
imul
test
fmuls
stos
xchg
sbbb
pop
inc
jo
loopne
movsb
and
push
aas
les
cltd
bound
movsb
leave
enter
xchg
or
pop
sub
add
add
dec
or
ror
leave
leave
leave
leave
enter
leave
leave
leave
leave
mov
out
xchg
test
pop
jge
adcl
push
mov
loope
xor
add
leave
rorl
sbb
cld
test
pop
test
push
aam
add
sub
imul
sub
mov
ret
cs
ret
mov
or
cmp
push
add
ret
jle
cmp
sbb
and
cmpsb
mov
test
out
lds
adc
jle
adc
push
enter
je
cmp
add
add
int
lds
cs
and
add
inc
pmaxub
leave
fisubrl
sbb
cmp
jl
fcmovbe
into
mov
pop
cli
mov
add
xor
lock
add
xchg
push
call
imul
and
mov
add
inc
xchg
adc
pop
or
or
mov
gs
push
frstor
hlt
pop
mov
push
push
mov
mov
mov
call
sbb
push
inc
lcall
dec
add
push
les
test
lods
repz
dec
jb
cmp
push
rcrl
decl
pop
out
hlt
insb
add
cmpsb
jns
push
popf
cmp
mov
or
in
hlt
mov
adc
addb
sti
inc
andl
and
fisttpl
dec
sbb
mov
and
or
adc
jne
xor
fdivs
pop
cmp
arpl
pushf
adc
lock
sub
mov
jne
clc
xor
jmp
or
cltd
dec
pop
call
in
inc
jecxz
scas
addl
add
mov
sbbb
mov
cmpb
add
call
cmc
sub
push
pop
jle
pop
shr
stos
sbb
cld
inc
push
push
add
adc
xchg
xor
repz
sub
cmpsb
sub
xor
cltd
jne
adc
orb
icebp
push
sbb
adc
pop
push
js
rolb
sub
inc
shl
inc
pop
add
mov
jb
scas
out
jno
adc
jae
daa
jno
xlat
movsb
cmp
ret
cmp
lea
push
and
iret
sub
shrl
jecxz
push
movsl
xor
or
fwait
int
push
loopne
sbb
sub
add
mov
adc
js
psraw
ffree
call
mov
pusha
adc
je
cmp
sarb
or
fstl
cld
outsb
add
insb
inc
push
pop
iret
pop
pop
cmp
or
popa
dec
mov
outsb
mov
clc
enter
add
jmp
fcoml
fs
pushf
mov
mov
or
mov
mov
sbb
adc
shl
xor
aam
pop
jb
jbe
mov
adc
cmp
dec
mov
and
pop
push
cmpsl
add
mov
add
xchg
dec
adc
mov
int3
push
or
bound
fistpl
add
shrb
push
lods
dec
lods
or
dec
jae
sub
push
lahf
or
jbe
test
lea
testl
inc
mov
rcll
popa
push
dec
inc
inc
pop
sbb
test
rcrl
lahf
or
push
pop
lahf
arpl
inc
dec
mov
lahf
mov
push
loopne
lahf
or
mov
aam
out
add
sub
xchg
cmpb
mov
or
scas
push
sbb
pop
js
fldt
in
push
mov
push
js,pt
cmpsl
and
lea
fsub
mov
mov
xchg
int
jae
les
ja
add
mov
pusha
addl
arpl
or
mov
lods
cmp
pusha
add
pop
xor
xor
in
mov
or
and
out
clc
add
pop
sbb
xlat
nop
jo
popf
adc
cmpsl
mov
icebp
rcrb
push
ljmp
test
es
stos
fwait
das
dec
ds
popf
xchg
xor
pop
cmp
arpl
and
and
and
or
aaa
jo
adc
add
add
push
cmp
in
leave
aam
cmpsl
inc
lock
stc
push
mov
adc
xchg
fcmovu
mov
nop
fcmovb
jl
jmp
mov
push
pushl
pop
mov
and
xor
lods
mov
jecxz
in
sub
lahf
sub
loope
std
call
je
dec
fsin
rorb
dec
fcmovbe
or
gs
ss
mov
mov
inc
mov
hlt
adc
stc
cs
push
mov
lock
jg
clc
testb
dec
sub
bound
fldl
jbe
jge
adc
arpl
test
mov
iret
jo
inc
cmp
sub
aam
xchg
inc
or
push
icebp
shrb
xor
mov
xor
sbb
add
push
sbb
fxch
ret
and
cmc
cmpsl
addr16
stos
shlb
jb
xor
lock
aam
dec
sub
jmp
sub
pushf
add
addr16
rorb
lahf
mov
push
subl
jb
mov
adc
sbb
bound
jle
cltd
xchg
xor
sub
in
fwait
cwtl
hlt
sahf
inc
xchg
jge
xchg
sub
push
or
lea
push
fldt
subl
bound
test
setno
or
nop
sahf
push
jmp
pop
lock
jne
popf
clc
jno
fcmovu
fwait
and
dec
loop
pushw
rolb
imul
mov
sbb
jne
sahf
jnp
inc
push
leave
stos
push
add
or
cmc
add
cld
out
pop
cmpsb
push
test
cltd
push
pop
dec
jp
sahf
xchg
loopne
fnstenv
jnp
mov
cmc
enter
dec
add
test
stc
mov
push
shrb
and
fwait
xor
add
loope
in
ja
inc
inc
mov
push
iret
mov
push
and
jnp
or
mov
loopne
jmp
stos
mov
mov
pushl
mov
dec
inc
lock
pop
add
or
pushl
sub
js
jb
xor
jo
xor
xchg
pop
addb
sbb
push
add
mov
fisubs
dec
and
push
cmpsl
adc
mov
popf
ss
push
out
xchg
pop
loopne
sti
dec
add
adc
jns
push
movsb
add
je
xchg
push
test
outsb
cmp
xor
xchg
addr16
es
pop
add
mov
pop
xlat
or
cmpsl
dec
push
test
enter
lret
cmp
pop
xor
dec
sahf
xchg
pusha
lods
or
xchg
inc
sahf
mov
mov
dec
in
pop
enter
mov
movsb
jb
mov
xchg
inc
mov
andb
pop
sbbb
push
adc
sbb
and
inc
dec
mov
inc
xchg
xchg
xchg
out
dec
dec
fs
cmp
push
pop
hlt
mov
and
cltd
dec
scas
pop
sub
mov
mov
dec
push
shl
add
inc
adcb
adc
and
adc
scas
sbb
shll
push
sub
xchg
sbb
mov
pop
xchg
push
xor
pop
and
clc
adc
daa
and
lea
dec
sbb
add
pop
and
pop
inc
jl
and
adc
add
je
sbb
or
xchg
test
leave
ja
sbbl
rcrb
adc
or
adc
jnp
mov
and
cwtl
and
addr16
sti
push
sub
xorl
in
and
and
and
or
or
xor
inc
inc
jno
out
movsl
sahf
adc
lret
cmp
and
xor
mov
push
pop
or
sub
xor
add
rcrl
sub
cld
xor
mov
adc
movsb
xchg
add
adc
call
jge
sbb
sbb
inc
xchg
jo
or
sbb
cmp
xor
popa
cli
into
jl
je
idiv
into
mov
pop
xor
xor
dec
xor
pop
adc
stc
inc
test
add
inc
adc
add
add
add
xchg
lods
sbb
xor
add
lock
xor
in
and
add
fs
adc
mov
icebp
mov
sbb
pop
aaa
add
stc
es
pop
sbb
push
xor
inc
add
dec
cs
mov
popa
add
lods
mov
iret
fdivrl
dec
mov
push
es
loopne
pop
push
add
jmp
push
lods
inc
mov
std
nop
adcl
int3
inc
inc
loopne
xlat
push
sbb
imul
lret
pop
mov
xchg
jnp
test
jae
mov
test
sbb
lock
psllq
add
add
cs
add
in
cwtl
sub
fld
std
cmp
pop
lock
fstps
sbb
adc
adc
push
cltd
mov
sbb
xchg
in
or
sub
xor
pop
divl
hlt
stos
pop
loope
hlt
sub
pop
stc
lods
inc
scas
push
sub
xor
push
xorl
inc
pop
jmp
xchg
mov
js
xor
pop
jne
dec
jnp
dec
push
sbb
ljmp
ficoml
fsubr
push
xor
push
push
xchg
adc
mov
xchg
sub
popa
xchg
mov
add
push
cli
je,pt
test
sarb
jle
jbe
push
sbb
out
push
xchg
out
dec
sti
mov
stc
dec
jg
push
out
repnz
inc
fsub
pop
pop
sbb
xchg
pushl
cltd
jge
xchg
data16
push
add
mov
jle
lods
ror
fs
outsb
lret
mov
push
xor
test
push
jl
inc
shll
lds
or
add
or
adc
call
in
or
push
jmp
cmc
lahf
mov
cmp
jae
cltd
xor
sub
push
or
jmp
and
adc
push
mov
sbb
mov
cli
stc
xorb
ret
add
leave
mov
ret
sub
cmp
ret
and
cmp
dec
sarb
movb
out
shll
imul
in
inc
testb
loope
nop
dec
mov
dec
dec
mov
cmp
mov
mov
xchg
jle
mov
je
insb
pop
mov
xchg
mov
xchg
imul
leave
mov
or
lret
sbb
movsl
mov
adc
loopne
mov
inc
xor
push
adc
insl
adc
es
inc
fdivs
lret
es
sub
or
sbb
push
xorl
es
add
es
dec
add
inc
je
sbb
sti
adc
fs
sub
adc
clc
data16
ret
mov
in
push
sbb
in
fcmovnb
aas
decl
inc
rcrb
or
and
mov
aad
jecxz
mov
mov
lock
add
or
push
cmp
je
test
or
popf
push
pusha
loopne
and
pop
cmp
jne
push
or
adc
inc
faddl
frstor
jne
jmp
mov
adc
add
orl
lea
sub
mov
or
or
jmp
mov
in
jmp
mov
or
xchg
clc
jecxz
add
hlt
mov
inc
mov
movsl
pop
or
clc
sbb
or
cmp
je
inc
es
fcomip
lods
pop
sbb
xor
lret
cmp
test
xchg
fs
aad
and
int3
imul
aaa
jecxz
xor
je
jle
jge
lds
mov
mov
ja
mov
lods
add
jno
loop
insl
rcl
inc
mov
arpl
and
ja,pn
or
lods
jmp
fs
aam
popa
inc
and
movl
and
loope
mov
inc
lret
xchg
insb
mov
mov
ds
sbb
or
push
push
mov
inc
jno
adc
push
repnz
fildl
pop
xchg
inc
insl
xor
inc
adc
out
sahf
adc
in
add
in
test
stos
xchg
inc
pop
into
sbb
fisttpll
popa
push
fstpl
fldl
cmpsb
add
fnstsw
test
je
and
add
jo
push
jne
mov
loopne
sbb
adc
std
bound
add
aas
div
insl
shrl
pop
clc
and
insl
clc
push
mov
add
out
cmpb
adc
hlt
mov
cld
and
pop
fsub
pop
fsubrp
mov
jge
pop
add
add
test
jno
xchg
int
xchg
xchg
pop
add
and
xor
fsts
and
add
ljmp
mov
cmp
je
add
es
ficoms
fistpll
stos
shlb
inc
sbb
adc
iret
scas
cmp
cmovs
push
push
lods
push
sub
or
and
sbb
dec
sub
or
mov
mov
push
add
sahf
jl
mov
push
xorb
pop
dec
iret
mov
out
add
xor
jmp
sub
xchg
and
sbb
mov
mov
fisubrs
pop
sbb
sar
sarb
sub
in
sbb
xor
iret
vmwrite
sub
jg
lock
ja
add
or
pop
repnz
add
and
movsb
xor
inc
push
push
stc
mov
push
sbb
out
mov
xchg
adc
cmp
adc
push
das
loopne
out
xchg
fdivrl
lret
mov
pop
repnz
repnz
and
push
sahf
add
add
movd
push
xor
sbb
sub
leave
addl
negl
ret
mov
or
lods
inc
fildll
and
pop
repnz
xchg
pop
neg
adc
int
sbb
leave
repz
push
push
sbb
and
enter
ss
add
pop
xacquire
cmp
lds
and
pop
inc
test
dec
push
mov
imulb
dec
aas
in
in
ss
push
xchg
or
inc
and
dec
and
in
paddb
cld
dec
push
pushf
in
aaa
adc
adc
leave
repz
fidivs
push
popf
in
pop
push
lret
and
test
out
cmp
adc
and
push
stc
nop
test
push
es
cmp
pushf
les
das
push
push
or
xlat
mov
out
pop
cmpsl
push
or
push
leave
iret
repz
cld
or
push
cmp
repz
jae
mov
repz
add
adc
out
sahf
out
inc
push
data16
out
sahf
mov
cmp
out
out
call
adc
xor
cmp
repz
push
gs
leave
loopne
xchg
daa
loopne
inc
pop
in
in
rolb
jl
flds
cmp
ljmp
xchg
insb
call
nop
mov
dec
xchg
lods
add
or
adc
xchg
add
aad
movsl
pop
call
in
imul
add
roll
push
lahf
out
andb
pop
fcmovbe
dec
sysret
xor
scas
js
sub
shll
daa
int3
lds
pusha
sub
js
add
xor
cwtl
sbb
bound
or
push
push
fisubrl
ds
jge
push
push
dec
and
shlb
jmp
adc
out
int
mov
stc
add
push
mov
imul
into
daa
push
mov
imul
add
rolb
mov
add
or
pop
sbb
dec
in
call
xchg
pushf
adc
mov
sub
mov
rcll
aam
xchg
and
inc
and
mov
outsb
lds
inc
xchg
in
popf
and
mov
inc
xchg
jo
int3
cmp
mov
jge
jle
xor
icebp
add
iret
xor
into
lock
pop
test
sub
pop
jo
jmpw
add
aaa
jns
loope
xor
ja
loopne
or
popa
add
call
call
xorl
xchg
push
or
xorl
xchg
sub
in
mov
addl
fwait
ret
jbe
pop
sahf
test
cmp
dec
add
or
mov
mov
or
add
push
call
add
push
out
inc
push
cmc
mov
pop
push
mov
nop
pop
mov
inc
scas
add
add
pop
inc
movsb
inc
ss
daa
add
testl
sub
loopne
out
add
stc
add
push
bound
pusha
leave
or
sub
das
or
ss
adc
sbb
loopne
pusha
and
jbe
inc
ret
cltd
inc
mov
mov
adc
sbb
inc
push
jbe
loope
xor
adc
cmp
push
push
lock
movsl
or
mov
decb
cmp
sbb
xor
xor
inc
xorl
mov
jo
adc
fcomps
xchg
ja
adc
mov
fidivrl
inc
cltd
or
pop
rorl
mov
in
add
fs
push
or
xchg
dec
cs
lock
loopne
mov
add
test
lock
and
adc
jge
mov
imul
push
cltd
in
add
cmp
push
jns
sbb
dec
dec
push
in
pop
mov
or
push
je
adc
addr16
and
mov
mov
addb
push
and
loopne
add
push
sub
pop
add
push
push
and
xchg
sub
or
jne
adc
or
pop
pop
rcrb
add
cmp
aaa
imul
pop
inc
adcl
lret
or
ret
stos
or
mov
jno
ret
pusha
sbb
and
cs
adcl
loopne
adc
mov
sub
jecxz
and
add
pop
mov
inc
mov
test
or
adc
ret
sbbl
push
lcall
mov
add
stos
push
std
mov
xchg
mov
rclb
in
adc
or
shll
or
fimull
add
jns
mov
iret
inc
pop
add
or
add
push
push
arpl
arpl
stos
cltd
lahf
sbb
leave
add
testb
scas
js
sub
test
adc
ss
test
and
inc
dec
push
pop
add
test
adc
shrl
mov
fwait
xor
xor
stos
nop
xchg
mov
adc
xorl
inc
lds
push
aas
sub
dec
in
cltd
dec
xor
sahf
and
add
add
ret
push
adc
add
ret
add
test
or
repnz
sub
mov
add
jno
add
sbb
push
cli
dec
xor
loop
inc
or
or
mov
test
jecxz
sbb
test
mov
leave
outsb
cmp
bound
cwtl
cmp
stos
mov
mov
inc
mov
xchg
sub
add
or
mov
or
inc
in
lret
push
faddp
int3
xchg
popa
pop
shlb
add
jne
push
push
adcl
dec
pushf
in
das
sbb
mov
aaa
cmp
pop
cmp
pop
mov
add
push
or
or
mov
and
sub
push
outsl
mov
inc
and
sbb
scas
push
cmpb
push
jnp
dec
je
jnp
pusha
add
xor
mov
add
or
add
scas
ret
addr16
xor
or
scas
add
dec
jge
mov
inc
and
dec
mov
int3
pop
adc
aam
in
or
mov
daa
jmp
push
je
inc
cmp
scas
mov
xchg
bound
popa
pop
pop
mov
aas
push
and
mov
les
mov
imul
jge
xor
xchg
jno
rcrl
mov
or
sub
xor
mov
cld
popf
fisttps
jne
fldl
mov
aam
nop
mov
sub
or
test
mov
fildl
sbb
lret
lret
ret
xchg
and
push
ss
jp
stos
insl
add
daa
sub
adc
aam
ret
jl
push
mov
mov
aam
xlat
push
push
xorl
dec
nop
jo
sbb
dec
dec
push
pop
mov
mov
stos
inc
arpl
add
testl
mov
sbb
aad
push
movsb
adc
inc
out
add
inc
push
sbb
lahf
xor
in
adc
lret
dec
sbb
cmp
fwait
mov
add
or
cmp
mov
inc
lret
enter
inc
push
or
xor
pop
movl
dec
bswap
stos
test
test
xor
jbe
fwait
mov
ss
popf
cwtl
add
push
test
push
notl
push
adc
and
add
lcall
xchg
je
mov
sbb
rorb
pop
aam
sbb
dec
mov
dec
xor
push
andb
mov
sub
mov
mov
sub
or
pop
call
and
sbb
and
inc
jle
adc
xor
or
xor
loopne
mov
push
xchg
shll
imulb
mov
inc
cmp
mov
jl
xor
jmp
cmp
jl
or
sbb
popa
std
pop
imul
shll
pop
mov
jg
lock
add
inc
jmp
movb
mov
push
cltd
pop
pop
mov
loopne
cmpsl
push
pop
dec
and
xor
push
sahf
sub
inc
sbb
adc
lock
xchg
push
push
dec
jp
outsl
mov
cmpsl
pop
xchg
stos
inc
push
test
inc
mov
mov
std
add
xor
jmp
orl
push
or
dec
or
dec
inc
push
in
mov
hlt
es
je
in
in
sbb
xlat
add
insb
mov
jns
bswap
cld
mov
dec
fdiv
ficomps
cmp
jo
add
push
rcll
push
inc
xor
ret
mov
inc
sbb
enter
pop
xor
jmp
add
in
push
dec
jge
out
rorb
cs
pop
sbb
pop
mov
pop
adc
or
inc
xlat
rclb
in
ljmp
fmuls
mov
pop
sbb
mov
or
test
xchg
jbe
sub
mov
lods
scas
sbb
push
and
xchg
andps
int
ljmp
sbb
sbb
enter
jmp
push
push
xor
adc
adc
pusha
mov
movb
aad
mov
adc
lods
in
cmp
push
push
pop
movsb
adc
rcrb
imul
and
xlat
daa
push
jl
psrlq
push
sbb
push
pop
jns
cs
rorb
jg
js
xor
push
pushf
enter
jl
sbb
pop
xor
push
repnz
leave
lods
sbb
ja
call
inc
sbb
jb
sbb
inc
inc
inc
fcmovu
lods
js
sbb
in
mov
push
jns
xchg
push
aaa
jno
repz
dec
imul
pop
aam
and
and
and
jbe,pn
and
pusha
dec
inc
fisubl
sarb
daa
jbe
and
imul
sbb
popf
pop
loopne
xor
xor
iret
in
mov
jb
jne
icebp
es
dec
scas
lea
dec
leave
adc
sub
pop
mov
inc
outsb
movsb
pop
inc
adc
fisubs
dec
test
mov
pusha
cwtl
dec
nop
xchg
xchg
dec
dec
pop
mov
fs
js
xor
in
dec
dec
outsb
push
lods
shld
test
and
dec
in
push
adc
mov
pop
stc
fsubrs
cltd
repnz
ja
es
shll
in
and
js
rol
dec
xchg
cwtl
xchg
pop
cmpsl
sbb
jo
xor
notl
xor
insb
cs
cmpsl
iret
adc
cs
das
push
inc
sti
leave
and
pop
fadds
push
push
and
mov
push
mov
xor
out
jno
or
fcompl
xor
sets
inc
movsb
fmull
mov
scas
fildl
enter
mov
mov
xor
fbstp
sbb
test
mov
out
pop
cltd
hlt
test
arpl
inc
mov
out
add
out
ds
pop
add
adc
xor
scas
leave
enter
mov
lcall
enter
sbb
rolb
xor
pop
inc
pop
sub
or
xchg
roll
in
sub
jb
or
popf
cmp
imul
repnz
adc
insl
xor
inc
lcall
dec
add
push
push
addr16
or
cmp
xchg
cmp
pop
push
inc
and
shrl
or
in
lret
leave
cmpxchg
adc
test
xchg
xor
fists
inc
push
xchg
inc
or
rcrb
sbb
push
and
xorl
cmp
popa
xchg
in
push
or
mov
mov
leave
sbb
xchg
test
sub
or
pop
pop
add
and
push
fadd
addl
push
push
cmp
or
movsb
mov
jmp
cmp
sub
xchg
xorb
xor
xor
movsb
nop
push
dec
sarb
movsb
xchg
push
and
fisttps
jl
js
sbb
movsb
mov
and
xor
cld
inc
popf
mov
adc
adc
pushf
mov
xchg
add
xchg
je
ss
sub
je
mov
popf
xchg
sub
dec
in
push
mov
jb
sub
and
xchg
pop
fs
in
fisubrs
push
xchg
insb
or
jmp
loop
popl
inc
mov
jge
movsl
sub
cmp
push
mov
pop
rcrb
adc
mov
dec
aas
popa
push
push
imul
stos
ret
movsl
icebp
sub
and
inc
mov
adc
xchg
push
pop
aas
or
add
or
jl
loope
loopne
cmp
inc
or
aam
iret
movsb
fisttps
cmp
ja
fcomps
popa
adc
mov
loopne
shl
cltd
jne
and
push
rcrl
in
mov
mov
clc
jge
js
xchg
mov
lock
jb
jbe
aam
mov
jno
xchg
push
xchg
mov
inc
aam
into
xor
push
xor
xchg
mov
or
pop
outsb
xorl
and
nop
jbe
add
pop
mov
add
mov
imul
or
call
rolb
pop
repnz
lret
or
andb
js
clc
mov
or
or
mov
pop
sbb
or
call
pop
fisubl
add
pminub
lahf
cmc
jne
cmp
loopne
push
movsl
stc
xor
sbb
jl
cli
mov
xor
or
lods
movsl
push
sub
shll
lods
inc
or
jae
in
inc
fidivs
mov
lods
cmp
jne
iret
push
adc
sbb
aam
repnz
aam
or
ljmp
leave
xchg
push
xchg
jmp
xorb
lcall
add
int3
ror
rclb
xchg
adc
push
sub
add
adc
jmp
push
dec
enter
jl
fsubr
adc
orl
adc
pminub
add
notb
clc
pop
mov
add
and
adc
inc
test
sar
aaa
mov
dec
cmpsl
inc
sbb
loope
out
push
roll
push
push
call
fdivl
fcoms
popa
inc
xchg
pop
ljmp
fcmovne
fmulp
add
xchg
push
orl
sti
push
in
sub
repz
xchg
repz
dec
inc
je
or
dec
push
lret
pop
mov
movhps
in
adc
ret
sub
clc
or
jecxz
shlb
rol
add
in
mov
adc
stos
push
pop
clc
std
nop
add
xor
popf
jmp
ds
or
lcall
pop
fmull
pop
and
and
lret
or
aam
and
mov
push
and
test
mov
inc
xor
mov
jbe
push
push
daa
inc
fildl
ja
int3
add
xor
imul
pop
mov
mov
mov
xchg
out
cmp
adc
cmp
shrb
pop
mov
aam
cmp
push
cmp
scas
dec
cmp
cmp
in
cmp
es
sub
scas
pop
sbb
adc
cmp
sub
test
push
and
clc
or
mov
sbb
stc
push
leave
cli
mov
popa
cmp
push
jmp
add
cmp
cmp
or
inc
jge
mov
jo
mov
adc
enter
cmp
add
mov
mov
lret
add
ds
sub
repz
arpl
cld
aas
je
mov
cmp
cmp
or
or
aas
push
mov
sbb
push
push
dec
xchg
in
xor
iret
and
in
xor
mov
lods
add
mov
mov
push
andb
add
pushf
push
adc
and
cltd
cmp
pop
add
pop
mov
sub
jle
call
outsb
or
test
lods
shrb
add
iret
jne
push
sbb
mov
cltd
pop
jp
scas
pushf
add
add
loopne
scas
or
push
cmp
jne
and
sbb
mov
mov
cld
mov
add
sahf
scas
dec
cltd
xor
ja
add
xchg
or
ret
jne
jnp
pop
sbb
pop
dec
pop
stc
mov
or
fildl
jecxz
ljmp
mov
xchg
and
inc
sbb
dec
loop
les
xchg
push
mov
shr
or
test
add
adc
adc
insb
sub
sti
mov
aad
xor
mov
pusha
div
scas
push
xchg
out
pop
mov
cs
adc
push
adc
adc
jno
enter
aam
add
dec
in
mov
adc
ret
push
rcl
push
push
add
jmp
mov
mov
test
or
or
ret
xchg
test
in
adc
dec
inc
fwait
mov
dec
imul
loop
push
inc
lcall
sbb
outsb
mov
js
test
loope
popa
mov
mov
push
push
data16
adc
adc
or
dec
add
add
pop
fwait
out
aas
ret
lea
cmpl
jnp
add
lods
imul
les
xchg
xchg
in
popa
es
jo
mov
or
push
outsl
xchg
daa
push
add
pushf
ror
add
addr16
add
push
xor
mov
insb
loopne
add
and
adc
sub
les
rol
loope
sbb
mov
ljmp
rcrb
sub
push
mov
lods
dec
lret
or
pop
loope
faddl
jbe
loope
mov
jae
mov
push
addl
adc
aaa
movsb
inc
xchg
ret
and
pop
adc
mov
xorb
cmc
insl
mov
jle
pop
push
cmp
dec
clc
outsl
xor
or
addl
mov
dec
in
sar
lock
push
dec
lcall
push
sti
mov
dec
add
insb
xor
xchg
fiaddl
jae
mov
cwtl
or
sbb
inc
jg
add
jmp
mov
mov
insl
push
or
mov
sub
inc
adc
out
lea
push
daa
cli
push
fsubrl
add
xor
addr16
inc
popf
lods
push
push
pop
push
push
push
ds
pop
fwait
sbb
xchg
xor
mov
cmp
jae
and
cmp
dec
mov
cmp
scas
test
js
jae
test
and
subb
loope
xor
and
add
add
mov
jecxz
adc
test
idiv
pusha
pop
push
push
push
shll
pushf
je
es
divl
sub
mov
dec
adc
cld
push
arpl
adc
sbb
test
mov
mov
mov
mov
and
or
push
xchg
add
sahf
xor
dec
pusha
or
ror
lret
xchg
jne
xor
xchg
orl
or
sbb
push
sub
dec
sbb
addb
arpl
xchg
jnp
data16
xchg
push
fadds
pop
push
fists
mov
out
pusha
nop
imul
push
add
sub
adc
js
jge
push
mov
cmp
xchg
addb
mov
jb
push
sahf
add
pushf
mov
jg
je
inc
pop
adc
mov
jecxz
mov
or
mov
xor
mov
adcb
push
mov
cmpl
fwait
or
fisubrl
and
rol
negl
sub
repz
sahf
out
nop
cltd
dec
and
adc
repz
inc
stc
push
negb
sub
fs
pop
and
inc
and
lret
and
mov
xor
cmpb
push
nopl
pop
or
popa
jne
xor
pop
fisttps
ss
push
sbb
shll
pop
inc
mov
push
mov
xor
or
push
xor
imul
movsb
int3
and
or
jno
or
in
add
into
fimull
inc
and
imul
test
or
cmc
adc
fisubs
add
jle
push
xor
pop
iret
pop
xor
pop
add
push
add
incl
pop
mov
push
addr16
scas
pusha
cmp
mov
ljmp
xor
je
xor
inc
and
movsb
add
cmpsl
or
fisubs
test
add
ljmp
sbb
leave
test
add
fs
in
sub
add
push
aam
cmpb
daa
sub
push
push
pusha
adc
cs
cmp
arpl
repnz
mov
xor
das
xor
and
pop
dec
and
stc
loopne
outsb
inc
push
mov
testb
aad
cmpl
sbb
xor
or
mov
add
inc
outsl
repz
and
push
leave
insb
or
and
mov
into
and
mov
addl
cmovs
inc
cld
cltd
inc
adc
jns
lret
repnz
lods
and
in
inc
std
enter
mov
jmp
xor
into
fistpl
movsb
andb
repz
adc
sbbl
sbb
sub
add
inc
add
adc
sahf
paddusb
add
shll
sbb
out
or
xchg
jno
xchg
add
xorl
add
cmp
xchg
addr16
dec
sbb
pusha
xor
pop
daa
sub
aad
loope
add
sub
icebp
mov
or
sbb
dec
pop
push
sbb
cmp
scas
inc
xor
in
fwait
scas
push
inc
sbb
dec
push
xchg
push
cltd
xor
push
test
bound
jae
push
xchg
sub
cld
insb
lods
ret
mov
push
or
sub
inc
mov
push
add
insb
test
mov
push
mov
inc
push
pop
mov
sub
pusha
sub
push
das
lret
push
mov
jecxz
scas
inc
or
lods
adc
cmc
daa
iret
push
andb
or
and
popa
adc
sarb
add
and
rcr
es
push
add
andb
mov
mov
bound
xchg
rcl
cmpsb
xchg
jo
mov
adc
xchg
fdivrs
out
push
mov
adc
movsl
and
roll
shrl
imull
cmpsl
xchg
inc
add
jne
or
sub
and
push
imul
insl
or
push
scas
inc
and
lods
rcll
mov
arpl
mov
rorl
es
enter
jno
mov
sub
sbb
stos
aaa
mull
xchg
test
ret
stos
je
pop
nop
and
lret
push
sub
shlb
fwait
daa
fidivrs
add
mov
xor
add
inc
loop
rorl
or
mov
pop
jl
ds
mov
stos
cmp
repz
in
pop
add
clc
je
push
inc
cmpl
stc
sbb
cmc
add
and
fisttpll
sbb
test
add
fldt
push
je
push
loopne
out
xchg
xchg
add
and
xor
shll
inc
add
mov
jb
xor
inc
add
and
add
popf
xchg
pop
add
sbb
add
mov
cmpb
inc
test
inc
addr16
and
sub
rorb
adc
adcb
stos
imul
adc
pop
mov
or
lock
or
jne
loopne
adc
pop
push
clc
loope
xlat
push
adc
rcl
push
pop
adc
out
sub
pop
and
or
sbb
sub
dec
shlb
insb
les
mov
xor
sar
sarb
push
lods
push
xor
movl
dec
dec
sub
add
mov
int3
xor
add
test
xor
jl
add
and
xchg
lds
push
cs
or
adc
or
or
lods
cld
daa
clc
add
xchg
subb
pop
push
sbb
fdivrl
jp
divb
or
cwtl
add
sbb
add
jne
and
scas
repz
push
sbb
dec
lcall
pushf
rclb
mov
rcrb
sarb
aas
xor
mov
mov
and
adc
adc
outsl
jnp
mov
jne
gs
cmp
lock
pop
pop
mov
fcmovnu
push
andb
push
jmp
push
or
push
inc
decl
cmpsl
mov
rorl
adc
sbb
ds
cmp
xor
cmp
cmp
ret
out
pop
push
mov
push
or
sbb
xchg
ja
or
push
lock
or
dec
mov
mov
sahf
sbb
adc
int
mov
sbb
lds
push
bound
lahf
subl
pop
or
dec
pop
pmaxub
ja
or
push
xor
and
sub
adc
add
loope
adcl
in
fiaddl
int3
sbb
sti
stos
test
movb
mov
test
push
lock
mov
sub
adcb
in
cmp
jb
jmp
xchg
cmp
or
add
xor
addl
push
jne
mov
mov
lds
movsb
test
xor
adc
nop
jne
mov
xor
xor
int
mov
sbb
lea
jo
fldl
sbb
cs
sbb
pop
sbb
push
mov
add
cmpsl
mov
ret
sub
popl
das
repnz
jle
dec
test
xchg
insb
jae
mov
add
jbe
sub
andl
fs
sub
sbb
fildl
or
fmuls
pusha
fsub
pusha
mov
mov
pushf
adc
or
insl
xor
pusha
and
mov
cmp
stos
sub
sbb
aas
adc
movl
add
xchg
dec
mov
push
inc
dec
pop
call
cmc
or
cmp
ret
push
les
sti
mov
pop
xchg
or
mov
mov
adc
and
mov
xchg
add
fidivrl
push
push
push
hlt
dec
pop
sahf
add
jne
add
sub
add
popf
sbb
std
mov
adcb
mov
mov
cmp
jecxz
pop
pusha
add
test
or
jge
push
push
mov
sti
cmp
mov
mov
into
rolb
pop
les
lea
out
daa
push
in
push
or
xor
adc
fisubrs
push
add
pop
rclb
push
add
mov
xor
jb
inc
lea
int
ret
adc
popf
cmpsb
xor
jnp
mov
cmp
pusha
or
mov
les
jl
imul
cltd
rcrb
mov
lods
scas
cmpl
rclb
fnsave
rolb
popa
fwait
ds
pusha
nop
ja
mov
inc
adc
jns
in
or
shll
push
push
loope
lahf
outsb
pop
dec
lea
fdivs
or
add
popa
or
dec
ds
lea
ret
orl
or
jae
js
inc
jmp
pushl
pop
adc
or
xor
stc
pop
sbb
pop
fsubrs
testl
inc
aam
adc
jle
push
pop
int3
subl
fmuls
mov
or
and
or
negb
or
fadd
sbb
xchg
pop
jo
xchg
shrb
mov
test
or
adc
jb
adc
add
jns
insb
adc
cmp
les
scas
sbb
bound
mov
xchg
mov
aas
mov
push
adc
and
stos
pop
in
cmp
arpl
adc
loopne
lds
daa
loopne
les
cmp
xor
rclb
jmp
sub
and
call
pop
in
sbb
pushf
movq
ljmp
mov
sbb
dec
push
movsl
stc
movsl
jge
xchg
cwtl
pusha
ss
push
adc
adc
and
sahf
pop
stos
push
pop
push
fdivl
rclb
inc
leave
stos
sub
cmc
insb
sbb
adc
cmc
stos
mov
pop
rorb
in
and
js
mov
cwtl
push
sbb
adcb
xor
pop
sbb
push
icebp
ficoml
dec
sbb
inc
pushl
ljmp
pop
xchg
inc
and
rcr
adc
xor
cmp
inc
mov
outsl
mov
and
fdiv
mov
loope
fistpl
push
push
inc
mov
cmp
xchg
or
jge
imul
addr16
push
loope
push
filds
es
xor
sbb
or
es
rorb
push
aad
and
jns
fadds
faddl
and
dec
leave
push
push
and
cmp
or
sbb
test
adc
or
inc
and
test
add
dec
jge
adc
imul
mov
adc
adc
or
jmp
mov
sarl
cli
outsl
movsl
inc
nop
subl
xor
aam
movsl
bnd
mov
out
push
or
in
in
fcoml
jmp
jmp
inc
mov
lods
fcoml
cmp
push
mov
add
xchg
imul
daa
jo
imul
jno
push
sub
aam
ds
adc
ret
in
sbb
xor
cmp
fadds
adc
shl
or
ret
pop
daa
pop
js
pop
mov
enter
cli
jbe
outsl
pop
mov
mov
dec
push
jbe
or
pop
nop
js
movsb
sbb
mov
mov
add
pop
push
or
xchg
mov
push
icebp
adc
gs
dec
adc
lock
adc
adc
outsl
pusha
pusha
jmp
imul
adc
jb
in
movsl
and
adc
xor
mov
out
sub
mov
inc
cmc
mov
add
movsl
sti
loop
lea
or
add
sbb
adc
xchg
je
ss
bound
jns
lods
or
cmp
or
cmp
jp
xchg
jge
push
or
cmp
xchg
dec
mov
push
and
jl
xchg
enter
adc
adcl
mov
adc
or
pop
mov
adc
dec
push
aam
push
pusha
inc
int
sbb
dec
leave
sbb
sbb
inc
adc
xor
test
push
add
fstpt
ret
sbb
add
insl
sbb
rolb
push
insl
lods
sbb
fsts
or
std
mov
test
mov
xchg
aam
jecxz
sbbb
adc
xor
inc
jle
push
dec
sarb
dec
hlt
jne
or
je
mov
push
orb
in
push
fs
lea
and
cmp
adc
inc
js
adc
iret
sub
sub
nop
or
xor
outsl
or
inc
mov
pop
xorb
sarl
mov
in
lock
test
pop
loope
test
stos
mov
stos
adc
adc
mov
pushf
mov
rcrl
fdivs
jno
rcll
or
iret
orb
rep
out
cmp
and
sub
in
aam
andl
sub
rol
fs
or
push
and
sub
mov
aam
cmpsl
jns
push
xchg
clc
test
je
outsb
mov
lods
cmpsl
push
adc
hlt
imul
or
adc
js
mov
jge
cwtl
inc
pusha
movsl
rol
mov
fwait
xor
bound
pop
mov
and
lea
push
rorb
xchg
shll
jne
and
jo
adc
rorl
fimuls
dec
jne
adc
imul
lcall
or
aaa
adc
mov
or
out
adc
push
in
add
xchg
mov
prefetcht2
out
aaa
pop
xor
pop
add
jmp
imul
mov
aam
mov
fisttpl
xchg
sbb
jmp
ss
add
push
sbb
movsb
mov
inc
and
test
and
sub
scas
pop
push
push
or
mov
push
loopne
push
and
inc
xchg
or
lret
jge
test
or
xor
jno
adc
arpl
add
inc
mov
sbb
pop
inc
inc
sbb
jecxz
jecxz
and
fwait
in
inc
mov
cmp
or
jae
lods
lea
mov
pop
call
js
in
inc
add
mov
mov
pusha
shr
movsl
movsb
ret
lret
xor
mov
sbb
movsb
jl
in
or
test
testb
inc
ret
hlt
inc
pushf
inc
fsubr
test
and
call
add
sub
adc
aas
dec
add
pop
sar
mov
cmp
mov
mov
push
and
jo
jle
add
push
hlt
xor
and
es
pusha
push
sbb
push
add
xor
inc
mov
sbb
pop
and
adc
mov
hlt
xor
jmp
out
push
adc
pop
clc
loop
repz
loopne
add
jmp
cmpl
mov
push
dec
popf
lret
in
mov
mov
xchg
clc
rorl
mov
shlb
cmp
mov
jns
popa
adc
add
fisubs
loopne
dec
ss
ss
fwait
imul
call
push
cmp
ds
sub
inc
mov
cmp
jl
inc
inc
sbb
jle
outsl
or
scas
sarb
xchg
nop
mov
mov
rcll
push
sub
pop
mov
or
fcom
push
scas
call
mov
xor
movsb
jno
xchg
or
pop
mov
push
push
aas
mov
add
push
pusha
aad
and
or
push
hlt
jo
add
cmp
fwait
mov
sub
and
sbb
jl
fisttpl
notb
les
call
loopne
mov
fwait
jecxz
inc
mov
mov
popa
sbb
mov
push
mov
mov
adc
push
repz
push
sbb
cmp
jne
daa
lock
pop
add
stos
sbb
cmp
push
mov
cmp
mov
push
jge
lods
xor
enter
cmp
jbe
mov
shr
push
push
and
stos
test
mov
in
mov
lret
sub
dec
sti
rcr
pop
xchg
enter
test
and
mov
insl
shl
shl
repz
mov
pop
dec
pop
or
xchg
mov
imul
cli
mov
mov
adc
adc
adc
cmp
out
cmp
outsb
push
pop
jp
adc
int3
mov
pop
cmp
dec
lock
push
xchg
in
and
push
cmp
gs
pushf
mov
mov
outsb
hlt
lret
sub
or
mov
frstor
imull
pop
stos
jns
push
cmp
pop
lret
imul
adc
xchg
inc
rcrb
add
out
push
scas
arpl
int3
rolb
fsubrl
lods
test
push
loop
hlt
or
rol
adc
cmpb
add
cmp
inc
sbb
sub
jl
mov
xor
ret
outsb
add
cmp
sbb
inc
jmp
enter
add
pop
pop
mov
call
rep
movsw
jo
ss
add
cld
movsb
mov
push
inc
jo
std
sar
or
mov
shr
mov
inc
mov
pusha
sar
adc
movb
mov
and
cmp
push
mov
inc
inc
aas
mov
cmp
movsbl
xor
mov
cwtl
jge
call
push
adc
and
push
cmp
je
push
push
loope
and
sbb
xorl
and
xchg
sbb
jmp
cmpl
in
or
fbld
loopne
or
lods
and
jle
add
loop
sbb
pusha
jle
or
stos
xor
cmp
fs
or
mov
jnp
and
or
cmp
and
add
in
int3
sarb
clc
sbb
and
cmp
mov
xchg
jl
ss
inc
sbb
push
mov
cmp
push
add
or
push
lock
test
mov
shlb
clc
dec
enter
jmp
or
addl
notb
ljmp
push
xchg
xchg
xchg
xchg
add
add
xchg
xchg
xchg
xchg
push
pop
or
int
int
or
jnp
or
jbe
jmp
or
int
int
por
jmp
adc
pop
adc
int
int
push
adc
dec
adc
dec
adc
int
int
aas
pop
jmp
sbb
xor
int
int
jmp
sbb
es
and
int
int
pop
pop
jmp
and
or
and
add
adc
fimull
push
and
xchg
mov
popa
push
mov
sbb
cld
push
addb
repz
rep
ja
xchg
repz
xchg
lahf
movsb
test
cmp
mov
cmp
repz
rcl
fneni(8087
iret
repz
in
out
hlt
stc
sahf
out
add
lcall
jns
and
add
add
push
pop
or
and
jmp
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
popa
mov
push
and
shll
inc
or
or
jge
xor
add
push
jmp
adc
dec
add
not
push
or
or
mov
or
loope
sbb
inc
cli
sub
movsl
lock
lahf
xchg
movsb
jno
or
outsb
sarl
aaa
repnz
aam
dec
rcll
in
fucompp
cmp
ds
sub
dec
xor
push
sahf
in
sbb
dec
xchg
jbe
push
jns
cmp
adc
ss
enter
sti
add
lahf
inc
add
push
mov
mov
setb
subl
dec
nop
push
add
or
rclb
inc
pushf
cmp
xor
je
mov
hlt
add
xor
fstpl
sub
adc
scas
or
add
mov
jmp
adc
pop
add
popa
dec
adc
sub
bound
fists
fmul
push
add
inc
cmp
adcl
inc
push
roll
les
push
adc
add
xchg
sbb
mov
and
sar
xor
jb
mov
pop
add
dec
adc
and
inc
mov
pop
pop
ss
sub
ficoml
pop
sub
push
xor
dec
xorb
in
notb
xlat
sbbl
add
adc
adc
test
mov
pop
loopne
or
pop
ret
add
push
jne
mov
xor
ja
pop
scas
add
sbb
mov
jne
imul
aas
inc
popa
pop
xchg
sbb
ror
xchg
xchg
inc
clc
es
loopne
push
or
mov
fisttpll
sub
jno
pop
push
test
inc
insb
xor
dec
inc
inc
or
jno
or
mov
cld
push
mov
nop
lock
je
mov
and
push
lock
push
dec
imul
ja
adcb
clc
adc
pop
inc
or
inc
mov
or
addr16
or
sub
or
insl
fsub
sub
adc
xchg
inc
adc
clc
dec
xor
pop
imul
pop
xchg
sti
mov
inc
mov
shlb
push
mov
adc
scas
mov
adc
push
mov
fadds
lock
sbb
push
push
cmp
add
xor
clc
enter
cmp
or
shrb
out
inc
jo
mov
shlb
add
mov
mov
test
test
xor
sub
int
pop
pop
push
pop
mov
or
in
lahf
cmp
push
cli
mov
dec
jecxz
movsb
outsb
xchg
jle
lcall
jmp
les
testb
es
fidivl
push
inc
and
inc
add
das
jmp
gs
js
sarb
fmull
fs
int3
sbb
in
imul
enter
dec
ret
add
insl
inc
popa
sub
mov
or
jb
fisubl
sbb
lds
ja
xor
outsb
cmp
jbe
push
add
movsl
or
dec
cmpl
stos
xchg
test
pop
cmp
jne
mov
outsb
jno
add
or
pop
sti
int
adc
adc
jle
and
out
pop
pop
push
repnz
mov
imul
std
pop
push
popa
cmpsl
imul
pop
jno
bnd
xor
jmp
jo
adc
jne
sub
roll
mov
enter
sbb
sbb
or
and
loopne
shl
push
dec
leave
xchg
xor
testl
enter
and
loopne
add
add
ret
negl
mov
and
add
inc
mov
mov
add
stos
mov
setbe
cltd
push
or
add
je
push
cmp
add
test
inc
and
out
mov
adc
mov
ljmp
xor
flds
sub
cmp
rol
clc
push
inc
pop
sub
lahf
and
sub
jmp
es
fs
pop
ret
test
orl
inc
sbb
je
add
adc
inc
fwait
pop
pop
and
outsl
leave
adc
pop
loopne
jle
cmp
mov
mov
sub
sub
pusha
push
add
jmp
faddl
and
sbb
shl
add
int
inc
roll
movsl
pop
or
xor
pusha
jne
loope
aas
lods
sbb
popa
cmp
call
add
and
jl
and
fisttpll
add
add
push
addb
push
cmpsb
roll
popf
jle
in
xchg
test
cmp
imul
mov
sub
dec
in
cmp
lods
fs
scas
mov
popf
mov
inc
sarb
push
pop
sbb
add
je
iret
dec
sbb
dec
cmp
xchg
mov
ja
je
insl
add
shl
add
cmp
xor
cmp
xchg
addl
adc
mov
jnp
sbb
adcb
inc
leave
mov
sbb
and
je
sbb
andb
sub
pop
ret
jle
subb
or
cmp
jne
stos
xchg
cmpsl
push
je
add
out
sub
lcall
pushf
inc
and
inc
mov
inc
cmp
add
dec
fisubrs
lock
sbb
push
in
inc
inc
fnstenv
in
sbb
in
mov
xor
jle
inc
lock
loope
mov
xchg
popf
movsl
and
in
mov
cltd
jne
sub
addr16
pop
outsl
push
cmp
and
mov
mov
push
add
rcll
cld
fmul
sub
rcr
jp
mov
adc
pop
vmwrite
pop
rsqrtps
cmp
adc
push
sbb
and
or
dec
sub
hlt
pop
test
and
lods
cltd
xor
add
loope
stos
xchg
sbb
jnp
pushf
and
les
jne
and
orl
ljmp
jp
push
inc
push
sub
sbb
fsubs
sub
add
inc
iret
testl
pusha
or
enter
jo
test
cmp
sbb
push
sbb
or
or
inc
push
fisubs
and
push
push
pop
lret
sub
nopl
adc
and
push
or
inc
imul
test
das
push
fistl
jl
xchg
clc
sub
inc
ret
adc
cmp
cltd
in
mov
xor
shl
inc
add
test
pop
and
rolb
aam
fadds
add
faddl
loopne
in
nop
frstor
aas
jo
in
xor
dec
lock
pop
clc
cld
xchg
hlt
cmp
inc
loopne
add
pop
orl
fs
pop
adc
je
je
push
push
sbb
xchg
je
and
sub
frstor
clc
add
test
adc
push
pop
in
sahf
xor
movzwl
jbe
ret
setge
cmpb
add
mov
imul
lcall
aaa
sub
or
jbe
or
sbbl
incl
cmp
jl
iret
in
adc
clc
lea
adc
repnz
je
dec
push
ja
sub
lea
or
sbbl
fildl
iret
pushf
fbld
repnz
lods
and
and
cmp
add
pop
fcoms
sti
cmp
pusha
adc
jnp
int3
jmp
out
push
add
xchg
mov
pop
push
les
call
mov
sti
cmp
je
and
lret
or
and
enter
call
rcrl
inc
mov
or
sbb
sbb
rcll
iret
inc
cmpsl
xor
sub
or
js
loopne
popa
mov
sbb
xchg
popf
jmp
fwait
push
in
push
imul
sub
mov
fs
dec
outsl
pusha
test
cmpsb
xor
fdivs
hlt
push
pop
cmp
cli
cli
sbbb
jmp
cmp
jle
or
movsb
fisubs
mov
lock
push
add
or
test
jo
fisttpl
cmp
les
dec
sbb
call
jle
mov
push
pop
add
pop
pop
sub
push
pop
jo
xor
cld
push
fcoml
mov
xchg
clc
cmp
je
cmp
jne
push
inc
pop
inc
push
pusha
scas
dec
jl
push
loopne
sbb
mov
mov
adc
cmp
cmp
add
xorb
push
clc
mov
icebp
loopne
dec
ljmp
pop
icebp
sub
inc
and
inc
in
mov
rol
and
sub
or
push
or
push
push
cltd
add
jae
cwtl
and
ja
aas
dec
call
loopne
outsb
push
pavgw
sbb
or
sarb
jb
cs
sub
mov
out
jbe
imul
fwait
push
push
jnp
sbb
adc
mov
in
jge
ss
mov
push
rcl
stc
call
je
repnz
mov
pop
add
aam
in
mov
inc
sub
jne
push
sbb
ficoms
divb
mov
push
add
mov
xor
nop
inc
cmpsb
je,pn
mov
arpl
cmp
cmp
sbb
in
cmp
mov
imul
fsubl
cmp
add
jne
mov
or
mov
jl
lock
mov
sbb
xchg
adc
jne
lds
push
add
jmp
inc
ret
xchg
rorl
outsl
dec
mov
or
cltd
jae
jecxz
and
dec
xor
push
inc
pop
push
inc
or
add
add
mov
psrlw
mov
insb
cwtl
popa
mov
out
sbb
bound
movsb
mov
mov
mov
shrl
push
cwtl
bound
rolb
and
or
test
mov
pop
lds
mov
sbb
ss
add
push
sbb
add
js
sbb
inc
cmovle
popa
sub
jno
data16
call
and
jmp
test
inc
jle
xchg
cmc
sbbl
mov
in
je
enter
push
sbb
sub
xchg
shr
hlt
test
dec
sbb
test
loopne
mov
push
pop
cmp
cwtl
and
sbb
mov
jnp
jmp
cmp
jmp
add
inc
pop
jo
movsb
push
movsl
rcll
jnp
push
in
jl
jns
pop
aam
jae
insl
dec
mov
popf
mov
inc
jle
or
xchg
int
popa
fsubl
lock
sbb
pop
mov
emms
add
testl
sbb
pop
mov
cmp
sub
fadds
or
ficoms
add
lret
jne
mov
fdivl
pop
push
clc
cmp
pop
jp
pop
sbb
adc
push
ss
cmp
subl
scas
mov
mov
inc
push
mov
outsl
pop
and
inc
cmpsb
or
mov
jle
xor
dec
dec
inc
pop
stc
cld
popf
sub
or
add
pop
push
test
add
in
iret
sub
pop
ret
lret
cmpb
dec
sbb
push
les
arpl
shlb
dec
fistpll
or
xor
cmp
jle
mov
mov
push
jmp
adc
pop
jle
add
lea
sub
inc
cmp
sub
mov
push
fistps
lods
fbstp
pop
movsb
xchg
shrl
mov
dec
sbb
ljmp
clc
movsbl
mov
inc
cmp
jbe
mov
mov
inc
pop
arpl
mov
adc
leave
imul
clc
adc
cs
xchg
xor
xor
inc
rcl
mov
add
loop
in
shrl
jnp
imul
push
push
in
cmpsb
push
push
pop
pop
repnz
mov
loopne
push
mov
pop
or
repnz
sbb
mov
add
jle
cwtl
pop
or
inc
inc
push
push
fs
jo
mov
enter
adc
ds
test
push
sub
inc
xchg
dec
cs
inc
jl
jns
jb
push
insb
aas
push
adc
cwtl
push
test
xor
xchg
imul
adc
pop
or
push
push
push
or
loop
aaa
add
add
fstl
fldz
fcomp
fnstsw
cmp
rolb
push
int3
fldl
lock
fstpl
and
and
xchg
mov
or
sbb
hlt
xor
addr16
and
mov
fs
lock
dec
inc
inc
lock
sub
add
xchg
dec
hlt
xchg
sub
ss
sbb
push
pop
xchg
mov
sbb
inc
mov
fnstsw
cmp
push
mov
outsb
and
out
xor
xor
fwait
inc
xor
jbe
or
sub
inc
and
stos
movsb
cld
pop
cmp
lea
dec
xchg
insl
dec
sub
add
inc
jbe
mov
insb
push
in
sbb
inc
outsb
imul
add
add
dec
dec
addr16
xor
pop
push
jp
mov
clc
into
mov
imul
cwtl
clc
imul
lods
xor
dec
pushf
cmpsl
jns
shr
dec
or
out
sbbl
je
xchg
fisubrs
dec
sub
jno
hlt
push
inc
test
add
nop
in
outsb
ret
pusha
loopne
dec
ret
xchg
mov
ja
cli
sub
inc
xor
movb
loop
imul
rclb
push
inc
or
add
mov
movsb
hlt
pop
mov
fistl
or
or
add
inc
adc
or
mov
add
js
pop
shrl
mov
rclb
adc
cbtw
and
or
mov
pop
mov
push
idivl
or
push
xchg
cmpl
sub
lret
clc
xchg
add
push
sub
add
call
cmpb
lods
jecxz
mov
test
sti
or
mov
adc
sub
pop
dec
jnp
add
inc
add
xor
out
clc
add
or
aaa
add
and
push
cmp
xchg
in
dec
pop
inc
in
lret
sbb
jb
push
inc
sub
or
dec
pop
jb
cmp
shrb
or
jl
or
pop
lock
mov
lods
adc
push
dec
cld
push
std
mov
dec
mov
ficoms
jp
int3
js
call
inc
inc
push
mov
testb
mov
adc
mov
sahf
sub
push
stos
cmp
jne
js
cli
icebp
test
enter
jne
inc
inc
dec
leave
je
in
ja
push
inc
lea
mov
inc
aad
test
mov
pushf
dec
in
fldt
sarl
add
cmp
aaa
inc
push
nop
inc
in
nop
inc
add
loop
jl
dec
and
inc
lods
mov
pop
or
in
mov
xor
imul
popa
subb
push
es
sub
ja
test
pop
adc
adc
je
js
mov
mov
movsl
cmpsb
mov
lods
adc
jae
cmp
sahf
push
adc
xchg
mov
adc
jns
test
insb
sub
add
call
ja
sub
call
adc
mov
test
out
pop
xor
ret
dec
fwait
clc
push
jmp
fildl
js
add
cmp
sarb
adc
in
mov
pushw
xor
in
sub
fnsave
or
or
lahf
mov
jb
add
cmpsb
rclb
aam
inc
rolb
int
mov
lret
pop
lret
mov
mov
mov
adc
repz
adc
je
cmp
jb
jne
negb
push
nop
clc
add
popa
pop
jbe
divl
dec
push
jno
movsl
lods
push
dec
repnz
xor
test
cmovp
imul
pop
pop
das
push
leave
push
sub
dec
mov
mov
mov
sub
xor
sub
add
sbb
dec
xchg
mov
or
sarb
jnp
adc
pop
xchg
inc
sub
addr16
into
push
insb
in
aam
into
jb
or
sub
adc
push
mov
push
pop
dec
lods
mov
pop
daa
imul
shr
or
or
xor
adcb
stos
inc
scas
imul
test
loopne
inc
in
pop
hlt
jb
push
mov
inc
aam
mov
enter
xor
mov
clc
lret
push
xorl
add
xor
mov
mov
add
mov
cs
push
call
push
add
scas
fldcw
dec
lret
push
inc
lock
rcpps
test
jmp
mov
js
adc
mov
cmpxchg
lods
mov
or
ljmp
loopne
aaa
std
pop
xadd
lods
rorl
out
ss
pop
dec
nop
xchg
lods
pop
ret
in
rorl
push
inc
dec
rolb
cmp
test
push
lea
lock
add
xchg
or
add
rolb
mov
add
adc
pop
xor
test
lret
adc
fldl
shlb
adc
xlat
imul
repnz
aam
in
lods
or
faddl
and
adc
push
in
xor
or
cmc
xchg
dec
in
sub
sahf
or
pop
cmp
lret
adc
bound
nop
dec
call
jo
inc
add
fsubrs
push
cmp
leave
fstpt
xlat
cltd
add
nop
subl
cmp
or
xchg
add
data16
mov
xor
jne
add
subb
xchg
jo
mov
sbb
mov
movd
daa
add
push
shrb
jl
sub
push
sbb
add
push
inc
sub
data16
sbb
mov
int
mov
mov
mov
add
sub
pop
inc
call
jecxz
push
sbb
or
cmp
test
cmp
push
daa
push
push
mov
mov
mov
or
push
pop
cli
push
in
mov
clc
mov
subb
add
xor
loopne
push
mov
xchg
pop
adc
adc
add
je
adc
cmpsl
mov
xchg
sub
std
stc
pop
add
add
repz
or
xchg
shlb
fstl
adc
pop
add
jnp
inc
add
push
rcrb
sbb
add
pop
or
or
pop
jo
pop
push
adc
or
push
jmp
jae
or
sahf
mov
rclb
inc
mulb
jno
push
dec
adc
add
jae
mov
fisubrs
stos
stos
pop
ja
jo
js
stos
xor
and
cmpsl
mov
push
dec
sub
mov
les
mov
pop
rorb
cmp
pop
insb
leave
repz
adc
in
mov
jb
jae
push
js
cmp
pusha
xchg
pop
loopne
cs
cld
daa
lds
pushf
in
push
and
mov
or
pop
das
je
pop
pusha
mov
stc
sub
addl
cld
nop
pop
lret
sbb
imul
or
sub
dec
push
cmp
jge
loopne
ljmp
lds
sub
imul
adc
shrb
push
fadd
dec
sub
cld
sub
dec
fldl
push
jp
in
mov
xor
adc
mov
jecxz
ljmp
or
repnz
or
mov
and
cltd
mov
adc
xor
sub
pop
inc
outsl
pop
mov
mov
or
mov
dec
mov
shr
or
add
add
add
sbb
hlt
or
or
imul
mov
and
and
jae
mov
lcall
daa
adc
in
jbe
sbb
jecxz
mov
xchg
or
mov
rcrl
les
test
mov
test
adc
sarb
pop
sub
out
mov
test
add
adc
add
cmp
call
cld
popl
nop
outsl
sbb
nop
or
and
pop
popa
dec
imul
popf
push
add
pop
sub
add
in
or
dec
insb
add
stc
and
and
mov
pop
pop
dec
mov
into
inc
pop
scas
jo
or
dec
pop
mov
clc
rclb
pop
adc
pusha
js
ss
adc
adc
mov
add
adc
std
dec
aam
cmp
jmp
cmp
sub
or
sub
push
jbe
cmpsb
lret
pop
xchg
xor
xor
inc
xor
fstl
gs
pop
add
jb
cli
insb
loopne
cld
pop
push
out
push
add
loope
cmc
inc
lret
or
movl
adc
loop
dec
adc
dec
mov
push
mov
cwtl
icebp
std
add
movsl
sahf
int3
or
mov
lret
pop
and
adc
mov
test
iret
push
dec
in
mov
les
inc
jne
mov
pushl
hlt
rclb
push
push
mov
jne
out
cmpsl
and
mov
test
push
sub
mov
xchg
fwait
aam
ret
dec
mov
lea
loopne
aas
cmp
loop
fwait
add
aam
sbb
gs
dec
push
loopne
dec
lret
xchg
pop
xchg
sbb
push
add
push
push
pushf
and
dec
mov
inc
add
loopne
js
ljmp
push
mov
inc
push
in
adc
ret
dec
cli
cmpsb
mov
hlt
and
clc
mov
test
ja
adc
lock
nop
je
popf
mov
daa
lcall
sub
xchg
dec
mov
in
inc
pushf
xchg
mov
aam
call
mov
sub
addl
addb
test
fldt
in
sub
scas
es
cmp
cmpsb
adc
pushf
pop
pop
dec
jmp
fildll
shrb
pop
sub
repnz
push
xchg
sub
in
add
movsb
add
sti
daa
inc
cld
das
lds
pushf
cmp
mov
mov
xor
and
jl
push
or
push
xchg
pop
test
sub
push
add
loope
and
jp
add
pop
jg
mov
aad
sub
cmc
filds
sarb
js
cmp
inc
incb
dec
sbbb
ret
add
test
adc
xchg
adc
xchg
xor
inc
add
rclb
pushf
jp
lods
mov
sub
push
xchg
pop
dec
inc
dec
or
hlt
sub
push
leave
dec
and
pop
push
jmp
jecxz
movsb
and
push
cmp
or
jne
repnz
insb
movsb
lret
lret
jecxz
dec
fwait
mov
sub
out
hlt
rorb
push
xorb
cmp
xchg
insb
sbb
je
or
sti
std
rcl
add
nop
sub
jne
mov
lea
sti
add
mov
pushf
jne
mov
clc
push
adc
shlb
push
pushf
mov
pushf
std
mov
jne
lcall
lahf
daa
or
mov
pop
pop
xchg
cmpb
sbbl
sbb
and
scas
add
mov
inc
repz
add
cwtl
mov
test
mov
cwtl
hlt
add
ret
sbb
fwait
adc
pop
cmp
xchg
inc
jmp
xor
mov
inc
addr16
lcall
addb
lret
popf
mov
mov
or
and
xchg
es
push
test
push
mov
aaa
lea
push
inc
sarb
add
sbb
rclb
xchg
xchg
push
mov
mov
lret
fwait
sti
gs
js
cmp
push
xchg
mov
sti
fdivrp
mov
test
mov
in
add
pop
cmpb
and
jmp
pop
sbb
push
mov
bound
push
aam
and
sub
adc
xchg
xorb
ret
popf
mov
mov
subb
sbb
cmp
cmpl
rolb
ja
data16
jmp
jl
push
lock
fdivs
jae
or
or
out
pusha
or
and
or
inc
lock
hlt
add
cld
or
rep
mov
inc
idivl
sbb
adc
les
push
mov
jle
mov
or
lret
inc
mov
inc
or
jl
push
stos
xchg
mov
in
out
loope
pop
jns
adc
xor
call
and
adc
mov
mov
mov
mov
xor
mov
xor
xchg
push
push
and
je
pop
inc
pop
cmp
jg
iret
rorl
adc
dec
sbb
sbb
xchg
lds
or
adc
sub
imul
dec
mov
xlat
xchg
notl
loop
sub
pop
inc
sbb
jno
jl
stos
movsl
pop
pop
in
mov
jge
sahf
mov
and
mov
push
inc
in
pop
pop
mov
xlat
nop
mov
or
sub
mov
cmp
mov
inc
lret
rcll
and
test
in
jns
gs
xor
cmp
int
pop
sub
mov
xchg
movsl
arpl
push
and
inc
mov
sbb
out
push
or
dec
mov
add
clc
std
and
push
lds
pop
sbb
lods
sub
fdivs
and
pop
fucom
push
push
cs
orb
in
jb
jge
js
mov
jge
rclb
inc
lea
sbb
in
pop
fsubrs
lods
pop
and
add
or
push
xorb
jns
nop
es
and
jmp
jl
xor
das
push
adc
jl
lods
mov
dec
cli
or
jne
repnz
pushl
add
sub
add
imul
insb
call
enter
jmp
out
rolb
adc
clc
add
inc
xchg
andl
test
fcmovbe
adc
stos
and
call
dec
push
adc
ret
mov
pop
and
and
sub
fimull
test
das
subb
sbb
xor
or
testl
hlt
pop
cmp
jecxz
in
nop
jne
cmc
add
dec
dec
mov
addl
fs
sub
addr16
mov
mov
es
pop
xchg
aam
cmpb
rorb
out
xor
and
pusha
and
and
jmp
mov
or
add
sbb
xor
push
pop
jnp
xor
lahf
je
fnsave
xchg
dec
sete
outsl
sub
sbb
shrb
or
daa
sbb
xor
pop
mov
in
and
lea
mov
sub
leave
xor
push
or
movl
ljmp
cltd
shlb
and
hlt
ds
jno
sbbl
adc
xchg
mov
push
mov
outsb
xor
mov
jl
cmp
inc
aam
xor
mov
flds
and
pop
inc
call
jg
mov
push
cmp
or
push
add
dec
aaa
push
lea
loop
repz
cmpsl
mov
push
mov
xor
das
pop
sbb
ljmp
ja
loopne
mov
outsb
push
int
and
mov
sarb
rcrb
imul
leave
std
sti
das
push
sub
jne
inc
inc
jmp
inc
fs
xchg
lret
and
inc
mov
mov
adcb
popa
hlt
xor
add
jmp
test
inc
dec
repnz
pop
pop
add
or
sub
xor
aam
std
xlat
xchg
scas
arpl
in
push
jecxz
mov
lods
cwtl
push
movsb
push
shlb
xchg
in
dec
je
cmp
and
sub
push
rclb
call
adc
and
push
bound
jae
ret
aam
pop
in
mov
test
and
in
addl
mov
fcoms
movsb
fidivl
jmp
sub
rolb
and
ret
sub
push
inc
mov
andl
adcb
or
fadd
mov
push
incb
test
sub
add
mov
cli
and
daa
sub
sbb
enter
add
fdivs
and
fs
adc
jo
inc
dec
add
push
test
jl
mov
xor
add
leave
fiaddl
push
mov
clc
or
xor
je
ss
pop
cmpsb
jl
outsl
out
fiaddl
ljmp
mov
pop
enter
mov
stc
clc
fsubr
sbb
push
cmc
push
mov
push
push
pop
fdivl
xor
pop
pop
push
sbb
pop
call
push
dec
cmp
mov
or
dec
out
sub
test
xorb
nop
hlt
mov
push
in
fnstsw
mov
repnz
mov
mov
mov
icebp
add
cmpsl
test
cmpsb
je
cmp
mov
inc
push
add
jo
xchg
xchg
jno
shlb
loopne
and
mov
in
sub
xchg
aad
push
sub
and
ja
push
xchg
push
or
inc
mov
fidivs
fisubrs
xchg
imul
or
mov
adc
imul
setne
subl
les
add
adc
test
jne
push
loop
popf
dec
fiaddl
xor
test
cmp
xchg
shlb
push
repnz
outsb
int3
sub
xor
movl
mov
xlat
add
pop
divb
andb
adc
inc
rcr
sarb
pushf
dec
sub
mov
es
and
shlb
popf
xor
enter
sub
push
shll
movlps
pop
clc
cmp
jo
adc
xchg
out
push
push
rcl
aad
and
sahf
pop
std
jle
pushf
sbb
add
push
sub
mov
dec
call
pop
pop
mov
movsl
movq
cmp
mov
dec
lret
aam
mov
mov
stc
and
xchg
shlb
cli
shr
xor
mov
jb
mov
js
not
cld
lea
test
xlat
movl
incl
shr
cmp
jbe
add
jmp
add
mov
pop
mov
pop
and
or
inc
push
and
lods
inc
out
adc
test
enter
leave
lock
mov
xor
dec
rcl
nop
add
xchg
sub
in
inc
inc
cmp
daa
gs
push
sbb
or
mov
cli
push
fsubrl
sub
mov
lods
push
test
test
add
xchg
inc
rorb
stc
dec
mov
add
cmpsb
push
dec
jl
loope
scas
pop
filds
jne
icebp
dec
or
add
jb
cld
or
sbb
mov
push
sbb
mov
mov
or
dec
pop
int3
inc
jle
xor
add
mov
loope
sub
dec
add
pushf
divl
divb
cmpsl
push
jo
mov
in
inc
loop
loopne
and
dec
mov
iret
and
push
fs
fwait
inc
push
mov
lcall
mov
or
pop
sbb
xchg
mov
jl
add
ds
or
fs
pop
and
xor
pop
push
xor
add
jmp
cltd
mov
ljmp
dec
and
fsts
adc
mov
and
mov
or
add
mov
and
outsl
add
add
pop
sub
scas
xlat
add
in
sbb
sub
mov
push
jecxz
mov
inc
pop
adc
cmc
add
ficoml
push
push
adc
xchg
add
xchg
add
push
cmp
cmp
addb
scas
adc
and
rol
es
mov
cmpb
mov
out
shl
cmp
fadds
inc
xor
inc
sub
nop
lock
movl
xor
or
loopne,pn
sahf
inc
xor
sub
fstpt
fs
xchg
add
lcall
and
push
mov
das
pop
rcrb
mov
adc
inc
or
mov
adc
cmpl
jns
xchg
cmp
jae
push
lock
or
aas
xor
jl
add
push
xchg
jne
or
xchg
push
adc
in
adc
mov
mov
cmp
enter
ja
fs
xor
adc
imul
ret
fldenv
cmpsl
adc
adc
out
and
and
adc
mov
or
aad
sub
xchg
leave
xchg
or
jbe
pop
in
inc
adc
inc
cmp
jne
cld
pop
test
mov
dec
xlat
jp
and
sub
mov
cmp
sub
add
jns
in
and
bound
dec
or
in
push
pusha
push
fadds
dec
mov
mov
or
add
mov
loopne
inc
lock
mov
mov
dec
sub
lods
cli
aam
sub
adc
or
sahf
in
sub
adc
scas
pop
sub
outsb
jl
add
add
mov
cwtl
andl
add
add
xor
xorl
add
or
es
fs
add
pushf
and
pop
sbb
pop
add
es
adc
sahf
push
inc
push
lcall
fldenv
imul
aad
movsb
pop
jle
mov
out
sub
sbbb
adc
movsl
xor
jne
insl
out
lret
repz
stos
add
push
imul
sbb
cltd
dec
add
push
push
and
cmp
shrb
movsb
push
ds
test
out
in
repnz
mov
fsubrl
push
testb
push
mov
fisubrs
clc
mov
dec
cmp
push
mov
push
adcw
adc
or
fs
aad
xor
xchg
andb
sbb
jge
add
dec
es
push
jl
test
clc
movsl
pop
cmpsb
jne
fwait
orl
es
and
push
sbb
stos
push
test
incb
jo
cld
push
push
dec
das
and
sbb
dec
adc
test
push
add
popa
adc
loop
movsb
mov
test
inc
test
inc
dec
subb
pop
mov
stos
push
pop
fstl
mov
mov
scas
cmpsl
in
lods
mov
rclb
push
pop
scas
and
nop
xchg
add
dec
mov
fs
mov
sub
cld
cmpsb
inc
or
add
cmp
dec
xor
pusha
call
rcrb
call
int
inc
orb
bound
lock
pop
sub
cld
hlt
xchg
jg
sub
outsl
adc
pop
sub
and
ret
orb
iret
jmp
sbb
shlb
jmp
push
mov
leave
mov
dec
mov
pop
rclb
movsl
test
jge
and
gs
dec
jbe
andl
mov
lock
aaa
test
mov
fcmovnb
and
mov
ja
cltd
xchg
stos
adcl
aaa
hlt
test
cltd
cmc
xchg
jl
mov
inc
or
pop
cs
dec
movsl
xor
test
in
mov
call
or
and
xor
je
pop
addr16
mov
jb
add
cmp
imul
mov
setbe
inc
add
ret
push
insb
pusha
stos
decb
push
mov
cmp
in
cmpsb
mov
sbb
add
je
or
and
addr16
jbe
mov
pop
mov
jb
and
stc
test
lea
nop
js
mov
sub
nop
imul
sbb
jne
push
popa
cltd
dec
fcomp
orl
inc
cli
xor
or
xchg
and
out
sub
nop
pop
add
lret
jne
push
add
insl
cld
lds
push
fstpl
dec
dec
jmp
pop
mov
adc
call
std
sbb
cmp
loopne
mov
je
mov
es
or
adc
push
and
jg
frstor
adc
or
inc
inc
pushf
add
inc
or
mov
and
or
movsl
jg
stos
push
inc
cvtpi2ps
xchg
pop
sbb
push
pop
stos
push
pop
test
pop
cli
mov
xchg
pop
jl
add
ljmp
enter
jecxz
pop
movsb
sti
pop
push
jns
cli
shl
adc
xor
outsl
jp
in
dec
cmp
xor
aam
mov
insl
adc
dec
mov
fcomi
nop
jle
adc
jle
push
add
push
negb
fbld
pushf
sub
sub
inc
lea
push
sub
das
nop
hlt
push
add
leave
adc
and
and
mov
add
jns
mov
shll
das
jl
testb
scas
xor
and
imul
and
int
ja
mov
scas
jmp
test
push
mov
dec
xor
in
pop
adc
or
cld
dec
cmp
and
imul
push
repnz
or
add
dec
loope
xor
mov
cmpsl
decl
inc
adc
or
push
or
mov
adcb
add
and
xor
jae
test
xorb
gs
orb
dec
ja
sahf
or
and
push
cli
and
xchg
add
inc
sbb
shl
mov
add
je
mov
addb
dec
popf
mov
adc
fwait
lods
jg
inc
pop
out
xor
mov
push
loopne
xor
or
cmc
push
add
xchg
ret
pusha
push
xor
ret
xchg
xlat
into
rorb
mov
or
xchg
je
rcll
mov
or
sbb
fistpll
nop
sub
inc
notl
nop
sub
mov
insl
xchg
jbe
jle
sahf
jmp
ja
push
outsb
sub
push
add
inc
sub
dec
dec
or
push
hlt
nop
push
push
ror
dec
xchg
shrb
enter
div
cld
and
out
or
or
push
and
lahf
rolb
out
pop
push
movb
mov
bound
pusha
cmp
fldt
pop
inc
mov
dec
add
mov
jno
and
push
lock
push
inc
xlat
sub
data16
pop
cmp
cli
addr16
pusha
rclb
loope
mov
rcll
sti
test
mov
push
adc
jle
add
cmp
or
scas
xchg
xchg
nop
jnp
mov
mov
ffree
daa
ss
inc
sbb
cs
adc
cld
into
dec
push
pop
pop
clc
repz
and
mov
jmp
roll
sbb
sti
popf
mov
push
outsl
push
sbb
jo
loop
or
aas
fldt
xor
loopne
je
push
sbb
in
push
mov
in
aaa
add
mov
fcom
movsl
test
mov
add
call
cmpl
xlat
and
push
pusha
push
in
add
ljmp
imul
mov
sti
je
push
adc
dec
push
jo
sbb
jbe
inc
mov
xor
pop
mov
clc
lds
mov
pop
push
jnp
dec
je
sbb
cmp
cmpsl
push
mov
subl
lds
mov
cmp
dec
mov
xor
in
add
xlat
push
push
jo
js
push
push
stc
dec
adc
mov
or
or
les
mov
rorl
ja
push
dec
cmp
pop
add
bound
push
cmp
xor
xor
std
call
lods
inc
mov
subb
add
or
fimuls
push
pop
int3
call
cld
and
push
dec
inc
push
xchg
imul
and
xchg
call
jge
mov
test
arpl
insl
aad
adcl
inc
dec
mov
xor
and
sbb
rolb
into
push
mov
add
adc
int3
into
jp
rorb
push
lea
push
and
xchg
push
dec
sub
daa
add
outsl
out
pusha
pop
movsl
pop
push
mov
sbb
cs
loopne
push
push
mov
sub
clc
add
loopne
ds
xor
push
sbb
inc
int
sahf
arpl
stos
in
pop
js
push
adc
ret
bound
stos
add
test
mov
mov
ljmp
ret
fsubrs
imul
jge
jne
sub
lods
mov
mov
lahf
les
das
popf
dec
xor
enter
call
rcl
add
imul
inc
sub
cmp
or
js
dec
js
cmp
mov
loopne
push
sbb
adc
pop
rcrb
add
ja
js
aas
dec
fcmovnbe
jo
pop
ret
sbb
in
pushl
out
xor
pusha
mov
rol
mov
ror
xor
shr
xor
idiv
ljmp
mov
rol
xor
shr
xor
add
add
add
mov
lahf
pop
orb
mov
iret
or
mov
push
or
and
xor
add
clc
sti
add
aam
sub
jge
jno
add
add
mov
into
jmp
imul
fisubrs
jge
xor
and
and
cwtl
mov
xchg
push
aam
sbb
push
repnz
cmp
mov
repnz
imul
fdivrl
pop
push
or
xlat
pushf
les
ret
rcl
add
fcoms
or
ss
add
call
fsubr
rcl
add
call
jl
jb
dec
xor
ljmp
mov
shr
add
push
push
mov
fsub
imul
push
nop
cmpsb
aam
in
shl
adc
mov
in
push
cmp
bound
push
or
enter
pop
mov
pop
aaa
mov
xor
fadd
cs
cltd
call
push
xor
cwtl
loopne
in
inc
sub
call
adcb
sub
cmp
aam
pop
xchg
sbbl
cmp
adc
jo
add
lcall
jne
and
and
stos
popf
dec
sti
loopne
or
xor
pop
dec
dec
sbb
add
inc
or
insl
adc
cmp
jo
ret
push
mov
ficoms
popf
rclb
lcall
inc
adc
push
paddd
loop
jne
mov
filds
cltd
fs
fadds
pop
jbe
call
sti
jle
fisubl
add
push
jbe
mov
push
fdivrs
dec
xor
rolb
call
in
shrb
clc
popa
jle
inc
mov
push
sub
adc
clc
jo
cli
push
and
popf
stos
adcb
or
aaa
cmp
inc
lcall
pop
push
cmp
insb
inc
shr
mov
add
cli
stos
mov
and
xor
rolb
rclb
rorb
dec
shll
add
loopne
cld
add
dec
add
xor
xchg
inc
push
and
dec
xor
and
je
push
dec
add
dec
xorb
mov
jb
push
xor
adc
dec
pop
dec
cmp
or
movsb
mov
and
stos
inc
stos
fs
mov
xchg
out
sahf
push
add
rorb
inc
pop
test
add
pop
xor
rcrb
inc
xchg
lret
adc
mov
adc
insb
mov
rorb
adcl
movsl
mov
shr
subl
mov
fs
sbb
icebp
stc
stc
xor
icebp
sbb
mov
adc
jl
mov
dec
divb
add
or
lret
rcr
adc
sbb
int
mov
jo
adc
in
add
and
sub
push
pop
lret
nop
and
adc
mov
add
sub
mov
dec
add
lock
cmp
jb
jecxz
adc
js
inc
aaa
sub
add
sub
cmpsb
jle
cmp
lea
pop
xor
jbe
add
decl
enter
sub
jnp
lock
mov
cs
and
lock
rorb
shrl
dec
cs
jae
mov
push
mov
mov
push
push
mul
aas
lea
jmp
sti
push
jle
lea
push
sub
pop
add
ret
dec
or
mov
dec
jne
pop
loopne
pop
add
loope
lock
std
mov
or
add
mov
adc
cmp
xchg
int3
shl
fildl
sub
jae
push
pop
fadds
rep
or
fildll
and
sbb
rol
or
cmp
mov
outsl
pop
push
hlt
insl
loopne
ror
mov
notl
xor
mov
mov
inc
cld
xor
mov
adc
dec
xchg
testb
push
sub
int
pop
dec
sbb
sbb
ja
adc
and
cmpsb
popf
inc
add
dec
lea
dec
push
pop
out
dec
adc
mov
ja
mov
das
in
jl
adc
mov
mov
adc
push
cmp
pop
pop
pusha
xchg
xor
pop
pop
pop
add
es
mov
dec
cmp
inc
and
mov
push
cmp
adc
out
pop
addb
loopne
inc
mov
leave
inc
or
xchg
add
in
or
sbb
dec
lock
fcmovb
imull
and
ret
or
inc
dec
dec
sti
movsb
xor
and
loopne
lret
add
insb
fs
cmp
sbb
ja
outsb
pop
inc
ds
push
dec
dec
adc
mov
and
adc
xor
fs
push
fs
cmp
or
xor
jb
and
push
sub
and
hlt
nop
add
mov
xor
ret
addb
jmp
inc
iret
rcll
sub
or
ja
jnp
sub
rorl
sub
loope
sahf
rol
push
data16
or
add
nop
lcall
push
and
mov
shrb
cmp
cmp
loop
inc
cmp
add
and
pop
jbe
mov
sbb
test
sub
std
jo
incl
and
adc
mov
fndisi(8087
loope
xchg
dec
fsubs
loope
pop
xchg
add
jle
es
popa
addb
adc
add
arpl
inc
adc
or
push
icebp
mov
and
pop
addr16
xor
jl
arpl
cmp
in
mov
movsb
jmp
mov
xchg
ljmp
push
push
inc
fndisi(8087
push
icebp
jns
jl
adc
and
js
push
push
or
test
mov
mov
je
adc
and
cli
call
adc
icebp
inc
loope
jbe
dec
loope,pn
imul
xchg
push
cmc
insb
shl
in
mov
loope
sbb
mov
xor
and
mov
mov
inc
cli
insl
nop
fcoms
cmp
adc
push
sub
adc
inc
adc
cmp
test
sbb
cltd
xor
and
jle
push
testb
xchg
test
jbe
cmp
or
insb
loopne
cld
inc
or
jmp
xchg
pop
push
jae
mov
sbb
xor
jmp
mov
test
xor
sbb
out
sbb
mov
and
push
andl
enter
test
xchg
push
add
mov
stc
fistpll
inc
or
dec
mov
xor
cs
push
out
clc
xor
sub
je
imul
jo
icebp
sahf
into
aaa
mov
mov
sub
adc
in
aad
sub
adc
nop
pusha
sub
push
rcll
popf
lcall
cmp
or
in
bound
test
jmp
jbe
mov
xor
xchg
imul
cs
cmp
bound
and
and
ss
xchg
inc
in
ficoml
arpl
clc
repz
push
or
xchg
iret
jmp
push
hlt
sub
test
jbe
mov
cmpsl
push
jo
frstor
imul
or
sbbl
jbe
jecxz
add
sbb
cmp
lcall
dec
push
sub
mov
ss
push
mulb
sub
adc
mov
dec
sbb
cmp
adc
cmp
add
or
mov
subl
out
push
lock
pop
pop
mov
add
jp
imul
xor
es
int
or
jbe
mov
loopne
adc
mov
dec
push
dec
test
cmp
or
xchg
aam
sub
enter
pop
lret
mov
mov
push
scas
and
xor
mov
push
imul
sub
out
mov
int3
xor
mov
mov
mov
mov
imul
aam
hlt
addl
movsb
or
pop
dec
rolb
in
sbb
sti
subl
jne
bound
push
jmp
and
ja
rol
mov
inc
or
jo
push
dec
outsb
dec
inc
jg
xchg
inc
and
add
orb
scas
xor
mov
lcall
sbb
and
add
shll
subl
rolb
sar
fildl
pop
cmp
sarl
mov
and
test
add
add
das
sahf
push
int3
inc
jno
aam
out
add
lahf
pop
mov
fdiv
xor
fdivrl
jbe
shlb
pop
sub
fidivs
xor
cli
mov
inc
dec
add
fsts
dec
mov
xchg
pop
or
mov
pop
mov
mov
cmpsb
mov
imul
rorb
daa
push
fidivs
roll
xchg
pop
adc
inc
cmp
movsl
pop
test
xor
dec
or
clc
add
lods
nop
mull
movsb
sub
xor
push
xorb
in
fistl
adc
pusha
or
ret
xchg
xchg
or
push
add
enter
aam
xor
pop
cmp
xchg
add
je
cmp
mov
mov
xchg
sub
inc
cwtl
clc
inc
inc
lea
jbe
jl
or
decb
push
dec
cmp
cld
dec
add
push
test
jle
sbb
je
add
push
pop
les
cld
inc
push
add
sub
push
mov
cmp
ret
mov
orb
insb
in
in
ja
add
fwait
and
cmp
ja
jae
ss
pop
cmp
test
sbb
adc
nopl
mov
sub
sub
ja
into
mov
inc
mov
add
or
popf
fs
jmp
add
rol
inc
sub
test
jmp
sbb
adc
sbbl
data16
xlat
mulb
cmp
xchg
mov
cmpsb
push
dec
xor
leave
inc
cmpsb
mov
mov
aad
inc
pop
pop
ss
inc
dec
xor
add
das
xchg
cmpsb
ret
nop
or
loope
sub
loopne
xor
mov
test
add
pop
add
xchg
jno
jb
and
mov
hlt
mov
stc
add
pop
mov
mov
sub
mov
jl
inc
cmp
mov
jp
fstpt
sub
mov
adc
add
sub
movzbl
outsb
fsubs
adc
mov
pop
cwtl
xor
mov
jne
mov
pusha
add
and
inc
and
mov
pop
repz
or
rorl
enter
xchg
or
iret
adc
rolb
pop
push
dec
add
aaa
imul
add
imul
sbb
mov
cmp
je
dec
jl
pop
mov
aas
or
pop
jle
pop
push
add
xor
and
cmp
scas
pop
and
add
xchg
mov
ljmp
jle
shlb
adc
xor
and
ret
xor
adc
mov
cmp
pop
fmull
sbbl
sub
sbb
xor
loopne
push
xor
pop
ret
push
das
add
jl
push
sub
mov
push
jl
mov
lahf
es
shl
add
shrb
sub
add
sbb
adc
aaa
pop
mov
or
add
iret
test
sbb
inc
sarl
add
pop
cmp
mov
daa
cmp
mov
jmp
cmp
mov
jmp
lret
or
jge
sub
or
jne
push
loope
mov
loop
inc
adc
movsl
inc
mov
pop
repnz
xor
mov
or
push
mov
adc
mov
das
adcb
in
and
loope
and
add
mov
outsl
sub
mov
shr
shl
add
and
shl
xor
mov
mov
loopne
ret
mov
mov
mov
add
mov
ret
adc
jnp
jge
imul
adc
cmp
clc
stos
lea
add
adc
das
add
sub
mov
cmp
and
add
jecxz
or
ficomps
xlat
nop
mov
jne
insb
push
test
sub
cmp
sahf
xchg
lock
cs
lods
adc
mov
call
loop
rorb
lret
sti
mov
test
add
or
mov
cmp
shlb
mov
inc
xchg
inc
inc
pop
and
jno
mov
rcll
sbb
lock
push
xor
jno
jb
xchg
loope
aaa
leave
cmp
stos
xlat
push
and
mov
shll
cvtps2pi
call
ljmp
mov
lock
mov
add
stos
mov
sub
lret
lods
or
add
scas
jmp
push
pop
push
jns
daa
mov
movsl
jae
pop
sbbl
out
in
jns
adc
adc
xchg
push
jb
cmp
mov
jecxz
mov
ficoms
repz
xchg
jo
mov
push
jno
mov
orb
pop
aas
add
sbb
sub
cmp
cmp
dec
push
push
jle
or
add
adc
arpl
or
dec
cmpsb
test
shrb
xor
int
leave
ret
add
dec
sub
fiadds
adc
jns
add
frstor
ss
mov
bound
enter
pop
push
mov
jbe
ss
jmp
push
inc
shl
out
js
jbe
mov
jmp
das
es
sahf
roll
les
adc
cmp
divb
out
add
adc
out
xor
gs
pop
aas
dec
inc
dec
push
loopne
cmp
hlt
cmp
xor
pop
push
ret
adc
fnstenv
jecxz
xor
sbb
or
add
sbbl
ljmp
jmp
sbb
xor
jmp
pop
mov
lcall
loop
testl
mov
lret
adc
out
push
xor
jle
push
pushw
sbb
mov
popa
cwtl
ss
and
adc
pop
mov
mov
xor
js
or
pop
jmp
popa
loopne
rorb
insb
sbb
or
sarl
vmovntpd
adc
popa
pop
push
leave
and
push
add
clc
lea
or
stc
mov
ss
stos
mov
in
sub
cld
test
or
and
lock
dec
jle
cmp
pop
pop
mov
push
pop
or
jns
or
or
clc
insl
mov
sub
xor
mov
inc
int
push
push
testl
in
mov
cmp
adc
add
or
fsubr
inc
or
xchg
cmpsl
or
push
and
adc
nop
jmp
test
aam
inc
loopne
adc
mov
gs
mov
rolb
xor
inc
mov
pop
mov
inc
clc
xchg
pop
or
inc
xor
fisttpll
call
bt
outsl
mov
sbb
mov
mov
sbb
dec
dec
pop
stos
inc
xor
jne
push
jecxz
inc
sbbl
adc
or
loopne
je
lcall
jmp
mov
dec
add
das
sbb
sub
mov
in
icebp
cmpl
push
push
cli
test
in
jo
sti
pop
push
out
pop
cmpsl
ret
mov
repnz
add
test
inc
fwait
push
push
push
sub
mov
xchg
das
test
push
add
out
js
pop
mov
add
adc
fcompl
xchg
mov
sub
incb
sbb
test
jne
in
xor
sub
adc
jecxz
jne
sbb
scas
push
sbb
cmpsl
mov
inc
roll
sbb
and
mov
imul
ret
dec
sahf
out
jae
and
mov
cmp
jle
cmp
add
pop
and
sti
movsb
movzwl
jnp
imul
pop
insl
sbb
xor
add
popf
pop
mov
jne
push
add
pop
jl
loopne
inc
xor
push
das
scas
imul
pop
push
inc
in
stos
loope
dec
add
cmp
xchg
jne
repz
add
sbb
mov
sub
jb
in
movsl
in
pop
and
mov
or
pop
jg
push
out
insb
xor
inc
push
or
add
addr16
inc
add
fstpl
pop
cmp
mov
pusha
inc
mov
sub
inc
jo
jne
addl
sbb
add
sbb
cmp
lods
loopne
cld
lods
stos
loopne
xchg
sarb
cld
cmp
pop
pop
mov
sbb
out
sub
scas
jecxz
jecxz
mov
outsb
cli
xchg
mov
stos
pop
push
shrb
std
sub
call
je
cmp
je
push
loop
mov
pop
adc
testb
je
cmp
mov
pushf
mov
xlat
mov
dec
fsts
ret
sub
lahf
cmpsb
mov
adc
add
add
ja
or
pop
sub
dec
xor
rcr
popa
adc
lock
add
adc
add
push
push
cmp
inc
loopne
sbbl
push
pop
mov
push
add
cmp
ss
loopne
jae
and
pop
push
icebp
jmp
aas
out
xchg
dec
ret
xor
adc
in
push
cmp
xchg
dec
jne
jg
add
adc
adc
push
push
movsb
add
hlt
cmp
insl
adc
fcomps
xchg
xor
movsb
and
jl
sub
pop
jbe
imul
les
sahf
mov
dec
push
push
mov
sbb
or
inc
mov
or
pusha
mov
add
jno
adc
pop
and
lods
arpl
outsb
push
add
push
push
sbb
cmc
push
mov
and
pop
subb
push
sahf
xlat
in
dec
lahf
pop
mov
sbb
add
lcall
int3
lock
rorl
or
testb
or
es
add
repnz
roll
add
in
aas
pop
cmpb
leave
jmp
lea
aam
sar
sbb
dec
inc
and
dec
adc
inc
subb
add
leave
lret
mov
les
loop
roll
or
inc
loopne
stc
jmp
rolb
dec
arpl
lret
jmp
push
xchg
in
hlt
dec
pop
pop
xor
je
add
add
adc
jne
icebp
or
xchg
ljmp
jno
out
std
cwtl
nop
inc
movsb
push
repz
andb
insb
pop
fcom
mov
cmp
loope
out
repz
add
jae
dec
add
fadds
cmpl
inc
push
xchg
xchg
lods
scas
add
push
cmp
inc
xchg
add
scas
es
jno
dec
add
enter
les
jae
jmp
pusha
out
lods
cmp
mov
cld
test
popa
and
pop
add
shlb
pop
cmpsb
and
xor
sbb
pop
push
push
mov
clc
mov
rcrb
pop
mov
sub
ret
into
dec
jo
rolb
sub
xchg
jo
mov
or
mov
cmp
and
mov
jo
jo
cmp
es
ja
and
cld
or
add
push
fwait
je
inc
xchg
inc
or
xlat
push
loopne
pop
mov
add
andl
push
scas
cmpsl
clc
add
loopne
enter
jmp
dec
loop
add
rorl
loope
add
inc
and
mov
sbb
sub
sbb
shlb
cltd
inc
xchg
orb
push
xchg
loopne
or
out
or
or
adc
mov
add
mov
bound
frndint
leave
push
push
addr16
pusha
fnop
sbb
ja
pusha
dec
adc
cmp
pop
popa
or
lock
adc
in
mov
inc
add
mov
jle
xor
arpl
loopne
sbb
and
ret
call
outsl
orl
dec
enter
xor
mov
inc
fisubs
dec
test
sbb
pop
xchg
dec
adc
or
sti
mov
data16
xchg
add
and
inc
mov
test
bound
repz
and
ljmp
or
jmp
ds
push
cmp
adcl
or
inc
fld
ret
in
or
mov
pop
ja
dec
mull
rclb
pop
add
popa
push
add
jne
outsb
pop
in
add
jle
or
dec
dec
pop
dec
in
push
xor
push
xchg
adc
add
ja
in
jmp
inc
add
incl
cld
push
stos
movsb
lds
dec
xchg
add
cmp
or
push
ret
jnp
aam
scas
loop
aaa
add
lea
cmpsb
xor
adc
outsl
xor
jo
push
stos
pop
ds
aad
mov
jb
fbstp
sbb
add
ja
add
xchg
pusha
fmul
dec
push
ds
jae
outsl
pusha
mov
pushf
adc
add
ljmp
andl
jecxz
cmpsb
sub
lret
je
sar
xor
shll
push
add
mov
ret
xchg
add
insb
popf
jo
test
aam
xchg
jnp
andb
cltd
daa
xlat
mov
ret
fisttpl
add
insb
dec
add
loope
sbb
out
push
lock
outsb
je
push
jne
ss
xor
test
and
mov
adcb
inc
cmp
pop
gs
adc
sahf
inc
push
out
jb
mov
push
cmpsl
sbb
dec
xchg
add
lea
lods
scas
pop
inc
test
add
fisubrl
push
addr16
xor
rolb
sub
and
push
pop
push
lret
loopne
sub
inc
sub
mov
jbe
cld
mov
adc
into
push
sub
inc
test
jp
pop
jb
cmp
das
cmp
test
xor
shll
jp
outsb
sub
or
aam
jne
xlat
sub
stc
sarl
sub
jge
adc
fnsave
insb
dec
add
add
lods
mov
adc
push
push
adc
mov
push
je
inc
push
and
push
outsl
jne
fisubrs
xchg
jb
popf
sbb
push
push
dec
sbb
int
aam
rolb
or
jmp
sahf
roll
push
dec
adc
add
or
xlat
and
mov
or
pop
je
jmp
or
push
push
movl
andb
jns
add
mov
inc
sbb
sbb
loope
dec
add
cmp
jmp
xchg
jmp
cmpsl
cwtl
nop
imul
cmp
test
xor
icebp
jnp
les
inc
cmp
mov
cmp
and
sbb
aaa
and
sbb
pushf
es
mov
mov
dec
inc
pop
pop
sbb
mov
test
dec
sbb
or
mov
xor
push
cmpb
inc
add
scas
push
and
push
sub
sbbb
push
aam
adc
inc
mov
dec
xor
add
sbbl
movsb
push
out
mov
cmpb
xor
adc
sub
add
push
pop
in
dec
mov
jge
ss
repnz
push
push
sub
adc
add
repz
mov
sub
add
or
pushf
mov
sbb
push
xchg
or
cmp
rcrl
and
gs
push
cmp
bound
jno
sarb
xor
dec
imull
ja
dec
je
sbb
mov
jmp
adc
lea
sub
xor
lods
dec
mov
int
jecxz
faddl
shll
or
jle
rorb
mov
test
add
mov
lods
roll
andl
or
or
mov
pop
inc
js,pt
inc
repz
pop
xchg
add
js
xorb
es
repz
and
inc
scas
or
cltd
dec
or
mov
lret
pop
lret
and
in
dec
sbb
or
sbb
add
andl
or
mov
lock
filds
movq
movaps
lret
insl
mov
shlb
jle
xor
push
jge
int
rcl
lret
je
lods
data16
mov
jbe
jge
repz
or
jg
testb
ret
adc
jnp
mov
xor
pop
repnz
fiadds
dec
ret
or
add
adc
clc
movsb
sbb
outsb
sarl
add
jbe
roll
add
out
mov
addps
int
add
dec
sahf
repnz
sbb
and
push
loop
jns
adc
sbb
adc
arpl
ja
mov
std
mov
push
bound
mov
xor
push
js
sub
mov
jnp
adc
dec
cwtl
sub
pop
loopne
jle
test
xor
test
mov
push
sbb
jge
mov
jne
pushf
dec
mov
jb
xor
push
in
add
pop
fildll
jp
add
and
lahf
xchg
jno
mov
add
aam
mov
test
or
fists
adcl
idivl
jmp
mov
push
cs
add
push
mov
add
mov
je
mov
mov
push
mov
cmp
lock
jmp
mov
mov
cmp
jne
dec
mov
push
cmp
sti
mov
adc
and
imul
mov
inc
pop
cmp
insl
scas
cltd
sbb
je,pn
cmpsl
fdivl
xor
pop
in
inc
jl
push
xchg
sbb
call
cmp
jne
popf
shr
add
sbb
repnz
push
pop
xchg
xor
xor
hlt
fcomi
arpl
sbb
dec
sub
stos
jge
push
xchg
jmp
push
pusha
xor
mov
mov
clc
push
pop
add
push
or
sbb
inc
inc
mov
xchg
rolb
jle
ljmp
pop
int
inc
cmp
jne
inc
cmp
inc
xor
add
jl
dec
adc
add
dec
xor
push
mov
pop
mov
inc
add
adc
push
dec
pmuludq
pop
inc
inc
test
hlt
cmp
sarl
cs
shrb
iret
sbb
adc
cmp
rcrb
push
lret
loopne
in
loope
es
or
mov
or
addb
adc
pop
roll
stos
mov
mov
cld
and
push
jecxz
inc
hlt
cmp
mov
das
adc
int3
add
push
rol
enter
sbb
ret
sti
pop
jnp
shl
shlb
dec
leave
sbb
dec
fcmovnu
push
or
or
inc
pop
cmp
mov
mov
ds
inc
shl
rorb
inc
inc
cmp
aam
lret
jne
sbb
in
jg
mov
out
adc
js
rclb
and
testl
cs
add
jmp
je,pn
cmp
pop
add
push
seta
shrb
testl
adc
testb
sbb
or
push
or
pop
hlt
daa
loopne
fdivl
adc
mov
in
fcoml
sbb
xchg
cmp
adc
sahf
repnz
inc
cltd
adc
push
mov
push
pop
dec
push
insb
ja
add
mov
push
cmp
in
add
cmp
gs
ror
shrb
incb
dec
into
mov
shufps
xor
mov
jae
fmuls
std
mov
cli
or
add
jmp
or
mov
inc
sbb
arpl
jb
fistl
fcmovbe
cmp
add
jmp
mov
dec
mov
push
ret
fisttpl
pop
inc
mov
lods
stos
test
lret
ret
adc
dec
stos
inc
add
or
pop
jo
in
or
add
jo
cld
enter
push
cmp
arpl
rcrb
inc
mov
outsb
add
push
push
cmp
jb
lea
dec
or
outsb
mov
or
cmp
jne
lcall
push
cmp
jne
es
cmpsl
mov
adc
or
test
data16
jb
jmp
out
mov
push
dec
jmp
adc
jmp
out
sahf
lahf
std
std
jmp
cld
cld
ret
sbb
jmp
fimuls
cmp
xor
push
push
adc
add
mov
adc
hlt
or
cmp
call
adc
cld
test
xchg
push
ret
shll
pushf
mov
or
testb
movsl
lds
add
insb
adc
and
push
add
and
pop
cmp
into
inc
rolb
aad
pop
or
push
insl
std
or
and
ficomps
or
loopne
and
adc
push
pop
adc
leave
rclb
adc
icebp
pushf
clc
mov
mov
sbb
mov
dec
add
adc
into
mov
pusha
clc
push
adc
icebp
push
scas
decl
cmp
jg
add
mov
mov
dec
sbb
adc
jno
dec
cwtl
and
adc
orl
repz
stos
xchg
adc
jae
xor
cltd
fcoml
daa
scas
jp
inc
push
push
pop
div
jb
les
dec
or
xchg
es
sbb
mov
clc
adc
pop
iret
aad
or
lods
pop
bound
sub
pop
adc
push
mov
pop
clc
pop
cmp
fwait
push
adcb
lret
sub
dec
add
jb
orl
mov
or
jecxz
push
lods
or
loope
pushw
fs
jo
jne
sbb
repnz
les
stos
sub
add
pop
or
add
rclb
or
subl
je
xchg
bound
adc
mov
add
and
sub
dec
aaa
es
addb
cltd
dec
cmp
sarl
xchg
xor
ljmp
cmp
jne
orl
jmp
adc
addb
jne
sub
sub
add
test
sbb
sar
jg
pop
mov
xor
dec
or
lret
pushf
or
and
adc
fbstp
or
adc
dec
add
add
addl
xchg
decl
push
xor
or
decl
mov
jmp
test
jg
je
mov
sub
cmp
ja,pn
xor
add
cmp
jae
fisttpl
loopne
daa
movsb
jne
lock
and
jg
pop
popf
jmp
or
je
lret
ljmp
pop
cld
imul
add
inc
cmc
mov
nop
test
jne
test
jne
push
loopne
mov
ja
lret
mov
es
mulb
jg
je
gs
mov
pop
call
fsubs
push
mov
das
lods
mov
imul
rolb
mov
inc
xor
inc
push
push
xchg
cmp
adc
cmp
jmp
push
mov
or
mov
push
sub
adcb
dec
pushf
inc
or
negb
pop
loopne
stc
mov
data16
pusha
sbb
lea
stos
mov
repnz
pop
popa
or
or
push
sbb
sub
test
jo
or
cmp
or
push
cmp
enter
iret
data16
jne
pop
cmp
idivb
mov
inc
aaa
lods
in
sbb
mov
or
or
adc
sbb
rcrb
jne
or
in
inc
push
lea
sub
ja
xor
out
mov
int3
jmp
loop
add
sbb
mov
mov
not
loope
add
or
push
mov
jmp
enter
dec
les
inc
es
dec
sahf
rcr
push
aas
push
repnz
push
in
mov
dec
enter
adc
inc
dec
scas
cmpsl
push
cmp
sub
stos
lock
leave
mov
dec
push
jo
add
ja
inc
fstl
mov
lret
adc
mov
js
mov
mov
jmp
and
dec
or
adc
push
ret
pop
sub
and
out
in
cmpsl
loope
subb
fs
add
jae
fwait
or
mov
scas
dec
adc
or
pop
xor
inc
lret
jecxz
adc
push
or
lock
and
jae
sub
rclb
clc
mov
lods
mov
or
incl
fucom
and
int
shlb
stc
sub
sti
in
lea
push
adc
push
pop
dec
ss
add
je
cmp
test
and
dec
pop
pop
fidivs
sub
xchg
and
dec
or
mov
ret
mov
sti
mov
fisttpl
adc
ja
add
testb
call
add
stos
mov
dec
adc
push
dec
jmp
pop
or
cmp
mov
pop
test
or
sbb
dec
shlb
cmp
xchg
xor
lcall
xchg
pavgw
fidivrs
sub
das
popa
subl
xchg
and
push
sub
sbb
xchg
add
aad
mov
add
mov
ret
mov
cwtl
or
or
loope
dec
and
sub
adc
mov
movb
popf
add
fwait
ss
sub
std
add
arpl
mov
push
pop
push
push
cmp
and
cwtl
inc
pusha
pop
cmpsl
pop
test
xchg
mov
je
dec
sub
xlat
rorl
data16
pop
lahf
adc
sbb
loopne
shlb
fldenv
mov
mov
and
adc
and
sub
movsl
mov
push
mov
mov
lcall
fcos
shrb
in
std
xor
push
mov
xchg
aad
push
popf
nop
repz
and
ret
dec
insl
or
sbb
cmpsl
stc
lock
pusha
jb
adc
mov
dec
adc
inc
rorl
in
jl
cmpl
repnz
mov
mov
pop
or
and
lock
xchg
inc
ret
or
mov
flds
js
xor
inc
mull
popa
pop
je
push
imul
push
inc
nop
sbb
int3
xor
jnp
test
and
dec
ja
sub
push
mov
mov
js
adc
scas
test
fcoms
dec
sarb
jg
and
sub
push
cmp
jb
sahf
mov
cmp
je
sbb
ss
jp
mov
imul
cltd
fdivr
arpl
sahf
add
push
cmpsb
fdivl
out
sub
ret
mov
mov
mov
leave
out
pop
push
cltd
mov
lods
sub
pop
adc
push
test
daa
xor
jecxz
movsl
sub
inc
mov
sub
sbb
pop
pop
dec
sub
fistl
jg
pop
xchg
sahf
or
sti
insl
ret
mov
mov
in
or
fcmove
jns
jo
mov
out
pop
ret
shr
and
fistpl
sub
add
xor
or
pop
fcomps
push
andl
and
xor
pop
das
mov
inc
lcall
xor
mov
push
inc
jne
mov
or
cmp
je
push
jbe
add
outsb
mov
xchg
add
mov
jne
sbb
cli
xor
sbb
or
xor
or
leave
mov
jge
inc
rcrb
pop
outsb
sbb
loope
push
and
dec
pop
mov
or
rcrb
or
push
mov
out
mov
lock
inc
iret
mov
add
adc
ss
rolb
push
test
or
scas
insb
pusha
jl
cmp
inc
mov
test
add
xor
or
push
jle
jp
jo
loop
andb
cmp
mov
xchg
push
mov
adc
mov
add
xor
lods
xor
enter
das
push
in
dec
or
xchg
cmp
xor
mov
and
sub
xor
mov
add
sub
add
push
add
push
lock
lea
repz
imul
or
pop
add
add
add
daa
add
inc
sahf
add
dec
dec
cmp
or
fdivrl
sahf
divl
je
lcall
enter
add
cmpb
pop
dec
in
jb
pop
jb
or
in
jns
or
dec
inc
push
nop
or
sub
addr16
jns
pop
or
nop
or
add
seto
lcall
add
inc
or
mov
ja
push
setne
jb
push
adc
pop
addr16
mov
sub
cmp
sbb
adc
adc
adc
jae
and
adc
mov
add
adc
jns
pop
enter
inc
adc
js
push
push
inc
sahf
xchg
add
pop
mov
sbb
sbb
orb
inc
sbb
jns
psubsb
sbb
and
pusha
in
sbb
sbb
mov
sbb
je
pop
sbb
iret
jmp
inc
dec
jge
sbb
and
push
cmpl
pop
push
sbb
jg
and
ret
sub
cmp
jae
mov
add
add
cmp
xchg
dec
and
mov
aaa
add
in
push
in
jno
repnz
lret
in
repnz
lea
aad
add
cmp
out
add
fwait
out
inc
or
dec
push
sbb
call
nop
testl
cwtl
jmp
nop
jmp
pusha
in
or
sbb
inc
lcall
in
push
mov
cltd
mov
inc
sahf
xchg
add
sbb
jge
sbb
enter
pop
lock
xor
icebp
pop
enter
repnz
jns
cmp
std
repz
std
in
cltd
push
push
hlt
hlt
rorl
pusha
hlt
fwait
cmpb
inc
push
nop
addr16
div
pop
cmp
push
inc
idivl
cmp
add
movsb
test
cmp
fmulp
adc
inc
stc
lock
xchg
add
mov
nop
cmp
sti
stos
cld
cld
pop
repnz
outsb
cld
je
cld
push
bswap
jnp
adcl
xor
and
repz
sbb
adc
test
arpl
ret
arpl
pop
sub
add
dec
mov
sbb
in
mov
or
pop
cmpsb
ds
jecxz
xchg
pop
add
jecxz
std
sti
in
in
jns
in
icebp
mov
mov
bound
xchg
sti
out
out
jb
push
out
outsb
call
add
sub
jae
and
pop
jmp
add
dec
jmp
cltd
pop
leave
and
popf
in
rcll
fsubs
dec
out
out
out
cltd
push
and
mov
cli
inc
add
pop
push
cli
sbb
xchg
stc
repz
add
stc
push
scas
and
fstpl
lret
stc
div
imull
cmpb
xor
in
repnz
adc
out
clc
push
cmp
mov
lret
xchg
add
dec
sti
sti
cltd
mov
cld
inc
cld
cmpl
sbb
cmc
sbb
dec
and
pop
das
adc
dec
rcll
pusha
loop
lret
add
loop
icebp
mul
pop
xchg
pop
leave
and
imull
ret
jg
mul
sbb
add
dec
out
cltd
bound
leave
and
and
adc
xchg
negl
sub
ljmp
shl
pop
mov
and
sbb
insb
out
out
jno
jno
xchg
and
or
sbb
repnz
push
jno
mov
pop
sub
cmc
jae
rclb
pop
dec
cmc
div
cmp
int3
jmp
jns
and
pop
add
clc
clc
or
xchg
pop
jecxz
stc
popa
cmp
mov
sub
hlt
pop
xchg
mov
push
hlt
sub
xchg
sbb
data16
out
adc
push
push
jo
cs
in
push
sti
lahf
xor
jb
pusha
adc
ds
stos
out
loope
loope
xchg
inc
pop
xchg
repz
scas
repz
test
imul
mov
andl
add
pop
and
repnz
jmp
mov
repnz
sbb
dec
in
in
dec
and
mov
repnz
sbb
mov
xchg
pop
dec
aaa
divb
icebp
xchg
pop
pop
daa
jb
test
dec
in
ret
cmp
leave
and
cmc
add
ljmp
mov
lock
movsl
test
jne
cmp
push
lock
sub
xor
sbb
xlat
mov
lret
ret
ret
fisttps
cmp
sub
out
push
xchg
and
in
inc
push
fcom
cmovno
push
add
add
add
stos
add
cmp
dec
add
push
jnp
mov
xchg
adc
jo
adc
cmp
or
dec
add
jmp
and
pop
mov
loope
leave
dec
or
add
xchg
fisubs
mov
inc
mov
xor
dec
loope
push
roll
insb
int
out
dec
push
xor
pop
ret
inc
scas
inc
iret
lahf
out
lcall
cmpsl
fldcw
inc
nop
inc
mov
adc
cmc
inc
add
xchg
cmp
add
add
mov
sbb
mov
adc
jne
add
divb
mov
mov
add
cmp
ret
stos
and
mov
neg
push
inc
cld
jb
test
mov
push
sub
je
int
lods
ret
lret
es
adc
or
enter
mov
dec
mov
mov
inc
sbbb
rclb
pusha
xor
lods
pop
pop
push
mov
cwtl
or
adc
mov
adc
stc
scas
xorl
movb
xchg
sbb
or
adc
or
decl
mov
fists
push
fcmovnu
dec
je
mov
testb
sub
lds
pop
sub
mov
pusha
add
jp
lret
lcall
adc
inc
jl
mov
adc
or
popa
add
and
dec
push
jg
lahf
test
mov
add
push
xlat
fmuls
jo
clc
fdivl
neg
mov
dec
cld
sub
rorl
cmp
outsb
xor
mov
ljmp
fsincos
xchg
and
je
rep
mov
dec
jb
icebp
xchg
ljmp
inc
aam
je
movsb
sbbl
in
mov
aad
adcb
les
scas
push
push
or
jmp
movl
rcrl
mov
nop
xlat
jno
repnz
pop
dec
fiadds
push
jecxz
add
inc
test
or
insl
cmpsl
cld
or
out
dec
adc
cmp
inc
jb
bound
rcrl
shlb
xchg
or
pop
inc
inc
inc
inc
adc
add
and
mov
jmp
jb
xchg
fdivs
imul
mov
gs
jne
cmpsb
sbb
or
xor
or
or
mov
push
in
dec
add
ficompl
add
sub
sub
sbb
pop
cmp
enter
push
jnp
rolb
lcall
cmp
add
inc
je
or
pop
and
fisttpl
dec
mov
lock
pop
jg
inc
add
sbb
fimull
inc
xor
dec
jne
jo
sub
mov
or
and
adc
cwtl
adc
mov
aad
inc
jl
jo
lret
rcll
push
push
ss
mov
or
cmp
push
push
jmp
sbb
xor
xlat
outsb
out
jns
mov
dec
mov
bound
sbb
lcall
inc
les
inc
add
aaa
nop
or
test
mov
call
cmp
outsb
loope
in
push
sbb
adc
testb
cmp
or
enter
aad
or
lock
je
mov
cmp
stos
add
testb
pushf
subb
and
xor
cmpsl
inc
js
pop
outsl
jb
mov
fimuls
loopne
push
dec
jne
icebp
adc
mov
adc
add
mov
sbb
inc
xor
lods
sub
out
cmp
jmp
notb
mov
clc
roll
mov
rolb
int
jbe
adc
push
pop
and
paddd
dec
pop
pop
mov
test
arpl
rolb
loopne
bound
pop
sbb
adc
or
outsb
sbb
add
xor
idivl
inc
push
enter
test
test
lret
and
add
imul
scas
adc
mov
push
dec
add
dec
push
pop
push
movl
outsl
inc
sub
add
lahf
out
push
adc
add
push
lock
imul
push
mov
mov
call
iret
in
in
lock
hlt
xchg
into
repz
clc
cld
mov
xchg
sub
clc
fldenv
inc
idivl
insb
and
xorb
pop
sti
xor
push
inc
and
push
lea
jl
cld
or
pop
rorl
cld
out
rcrb
fldenv
insb
adc
adcb
gs
pop
pop
nop
in
xor
add
out
add
sub
add
dec
inc
push
out
push
add
nop
dec
dec
addr16
add
jecxz
add
push
loop
cmp
jnp
test
push
xchg
pushf
movsb
iret
mov
rep
mov
pop
aaa
sbb
cmp
repz
sbb
adc
cmp
repz
or
fwait
and
iret
add
inc
loopne
mov
call
aaa
push
mov
add
pavgw
pop
daa
ja
cmp
or
push
and
std
scas
fmull
mov
mov
incl
inc
decl
jne,pn
inc
insl
cwtl
rcrb
mov
cmp
jecxz
jp
jbe
push
cltd
pop
idiv
pushf
push
pusha
or
or
add
out
ja
data16
dec
mov
mov
fbld
shlb
dec
enter
cmp
xor
sub
call
popf
jae
pop
jbe
mov
dec
jo
icebp
dec
jo
mov
pop
sub
adc
hlt
sbb
in
add
mov
and
lret
add
pop
call
or
sbb
sbb
dec
dec
je
push
push
sub
dec
push
sub
outsb
mov
jne
xchg
insb
adc
test
xor
imul
push
mov
pop
je
mov
inc
dec
xchg
sbb
adc
movsb
mov
outsl
or
inc
add
inc
mov
pushf
filds
xor
xor
clc
push
push
pop
add
jae
lret
pop
call
test
xor
adc
push
sbb
pop
push
mov
stos
and
outsb
dec
mov
vmptrld
pushf
sbb
or
pop
cmp
clc
sbb
ja
insl
or
push
aas
jge
flds
add
pop
idiv
into
mov
sti
xor
xchg
inc
out
cmp
sbb
jmp
and
jmp
or
cwtl
ss
pop
daa
cld
jle
pop
imul
inc
cltd
enter
imulb
push
in
imul
add
jmp
jl
mov
sub
adc
sub
push
or
je
insb
sub
dec
ret
pop
jecxz
repnz
in
pop
mov
jae
and
mov
mov
push
mov
pop
incb
inc
jns
adc
cmp
inc
pop
ffreep
add
sti
cmp
pop
sub
loopne
mov
inc
xor
dec
movsb
loop
jae
cmpsl
clc
sbb
push
mov
daa
push
pop
xchg
push
cmp
sbb
inc
push
jmp
jge
pop
jecxz
int3
icebp
je
sbb
jl
xchg
pop
sti
call
out
dec
lahf
jno
mov
mov
out
sbb
dec
jo
mov
je
fildll
pop
or
rorl
or
testb
adcl
lcall
pop
popl
fstl
or
and
push
push
push
or
mov
xchg
mov
cmp
pop
stc
add
int
push
adc
lcall
xchg
inc
jmp
push
pushf
jmp
adc
push
fistpl
aaa
and
mov
aam
subb
push
je
mov
cmpb
ret
add
sbb
xchg
adc
push
sub
or
or
js
jne
push
or
ljmp
test
push
loopne
mov
inc
adc
or
out
xor
pusha
iret
call
fmuls
push
mov
add
fwait
jbe
dec
ljmp
lcall
ja
rorb
or
test
push
mov
lock
and
push
adc
mov
or
add
lods
add
push
inc
jg
movsb
pop
xchg
inc
or
les
in
add
mov
cs
sahf
clc
mov
inc
inc
cmp
je
xchg
cmp
cli
subb
daa
adc
add
mov
movsl
fidivrl
dec
je
popa
roll
sub
mov
mov
pushf
add
data16
jecxz
icebp
and
mov
incl
fdivr
push
push
mov
push
inc
sbb
loopne
inc
dec
xlat
ss
push
jae
mov
pop
sbb
lods
mov
add
cmp
bound
fwait
add
or
xchg
adc
clc
xor
pusha
jmp
call
dec
lods
addb
dec
add
lods
mov
add
pop
outsb
jecxz
test
adc
in
xor
lea
sbb
inc
mov
jo
mov
or
push
jnp
rcrl
mov
add
push
add
shlb
push
adcb
or
shlb
insl
ja
pop
and
sbb
dec
inc
lret
dec
in
jb
jns
addr16
add
aam
inc
sbb
adc
adc
ss
sub
in
shl
pop
fcom
iret
add
pop
or
lea
popa
bound
jl
cmp
jmp
dec
or
push
inc
nop
psubusb
dec
jmp
sbb
push
dec
sbb
mov
lds
mov
andb
bound
rcrb
shrb
in
ret
inc
pop
xchg
ret
in
es
push
cmpsb
das
movsb
adc
or
adc
cmpsb
shll
or
pop
adc
shrl
lahf
xor
jne,pn
push
bound
and
mov
push
cmp
push
jne
cmp
inc
sbb
rolb
imul
mov
adc
push
cwtl
mov
cmpsl
mov
add
jmp
orb
ja
or
and
inc
inc
dec
mov
pop
mov
out
xor
ja
or
jecxz
jge
movsl
shll
add
cltd
jne
push
mov
xor
negl
sub
les
pop
sub
es
pusha
js
filds
aas
pop
pop
push
or
pop
xor
push
add
in
lahf
jmp
mov
pop
sub
add
nop
data16
add
test
xchg
in
add
insb
inc
jge
push
lahf
jo
mov
fldz
xchg
xor
mov
add
push
cmpsb
nop
jmp
jg
in
xchg
mov
rolb
notb
movsl
mulb
lcall
pop
sub
inc
cltd
add
mov
xchg
es
sbb
jl
lret
nop
iret
insl
pop
data16
push
outsb
mov
add
pusha
mov
jo
sbb
loopne
arpl
xchg
push
push
fcmovbe
lret
fs
xchg
mov
hlt
dec
flds
pop
fisubrl
push
std
push
mov
fwait
mov
pushf
and
out
mov
fs
inc
or
subl
or
and
or
insb
push
into
rorl
sub
in
inc
test
xor
into
push
mov
jbe
jbe
sub
jbe
cld
and
inc
xor
push
cmpl
fisubs
xchg
out
push
pop
cwtl
or
fadds
mov
and
inc
bound
rorl
xchg
sbb
in
call
xor
and
sub
in
adc
cmpsb
into
gs
clc
pop
xor
ret
sbb
fcomps
cmpsb
mov
stos
sub
or
shlb
xchg
xor
cmp
xlat
or
in
aam
pushf
enter
lret
sub
in
mov
jmp
mov
dec
shll
push
xchg
adc
dec
clc
ret
cmp
std
data16
add
dec
add
scas
and
push
add
sbb
push
imul
sub
aad
cmp
xchg
push
push
sbb
addr16
sbb
imul
cmp
lea
sarb
cmp
sub
icebp
pop
xchg
and
scas
imul
andb
and
sarb
cmp
rol
rolb
adc
lret
mov
sbb
ja
lods
enter
mov
sbb
mov
faddl
dec
adcb
mov
sub
push
dec
xchg
jle
adc
repnz
inc
cmpsl
dec
lcall
adc
dec
pop
lods
popf
jmp
mov
lcall
xchg
cmp
xchg
rcr
mov
inc
icebp
cmp
push
pop
xor
shlb
inc
add
mov
fsubr
int
shll
lods
add
sub
mov
call
sbb
and
lahf
sti
in
jle
jo
ret
sarl
or
incl
mov
xor
sub
xchg
sbb
scas
sub
mov
push
or
lock
add
fstl
sub
mov
and
daa
sqrtps
lods
add
dec
pop
les
inc
sbb
mov
inc
sub
insb
push
lea
andl
mov
push
add
ret
push
cmp
in
add
add
cmp
push
xor
mov
push
sub
dec
stos
xchg
or
jnp
shrb
or
or
push
dec
or
pop
mov
mov
jo
inc
mov
push
fs
mov
pop
repz
sti
sbbb
fisttpl
lea
dec
xchg
addl
xor
out
lcall
pusha
jg
pop
fadds
adc
mov
daa
xchg
or
add
inc
adc
pop
ror
ret
inc
jle
std
jne
cmpl
and
push
shlb
xorl
ds
lret
or
adcl
xor
shl
call
cwtl
mov
dec
inc
and
or
loop
mov
push
das
pop
mov
test
andl
mov
mov
mov
or
sub
repnz
mov
and
mov
sbb
repnz
adc
popl
rcll
cmp
add
inc
call
mov
push
movl
cmp
xor
sarb
xor
fbld
mov
adc
adc
shlb
mov
loop
pop
cld
sub
jmp
cmp
stos
inc
push
mov
jo
jmp
sub
sub
je
pop
mov
mov
inc
mov
push
sub
push
or
push
cld
xchg
sub
mov
inc
sbb
bound
pop
add
aad
or
loope
or
stos
stos
add
mov
pusha
mov
sub
mov
cmc
add
testl
daa
or
or
lsl
sbb
rorl
call
and
stos
sbb
dec
int3
sti
mov
mov
test
fldl
and
les
ret
out
and
and
and
ja
sub
and
lods
add
xchg
or
les
pop
popf
out
ret
fdivr
pushf
adc
out
ficoml
push
push
aaa
enter
test
std
push
cmp
push
push
in
sbb
enter
cmpb
into
icebp
pop
add
dec
push
sbb
imulb
xchg
fucomi
adc
je
and
sbb
push
into
xor
or
aad
jmp
mov
arpl
cmp
leave
sub
mov
and
test
cmp
stos
xchg
and
sbb
lret
add
jmp
cmp
lds
ljmp
add
ret
repnz
add
and
adc
and
addr16
jo
jg
or
fidivs
les
inc
push
adc
dec
mov
mov
cmp
xor
cmp
push
mov
inc
mov
loope
jnp
insb
push
or
mov
fucomip
mov
or
rcrl
or
cli
cmp
cmpsb
add
mov
cmpsb
push
cmp
inc
jmp
inc
in
xor
mov
inc
std
jne
lock
sub
cmpsl
test
cmp
les
xor
mov
scas
popa
xor
adc
pop
mov
push
cmc
pop
aad
in
mov
mov
mov
pop
dec
outsl
xchg
add
adc
mov
push
shl
into
std
fidivl
push
jmp
xchg
mov
imul
and
xchg
clc
aad
xor
inc
sbb
and
std
add
cmpsb
aam
push
call
dec
test
jne
mov
mov
dec
adc
ret
mul
test
in
mov
or
push
lea
pop
jo
sub
shlb
jmp
loopne
adcb
cmp
lcall
jbe
rolb
jne
outsb
cld
std
dec
rolb
add
jb
mov
sbb
out
inc
push
or
inc
or
adc
data16
std
decl
xor
inc
dec
jne
mov
inc
mov
popa
xchg
push
dec
adc
add
inc
xor
jle
loop
push
inc
push
mov
push
rorl
inc
dec
jne
clc
adc
shr
test
div
lret
add
jnp
mov
icebp
jmp
cmp
push
aam
rorl
mov
cmpl
mov
adc
and
adc
mov
pop
push
mov
or
and
mov
ljmp
inc
add
inc
daa
xchg
rorb
jns
fs
orb
mov
sub
inc
adc
xor
sarb
inc
and
int3
cmp
mov
xlat
cli
dec
test
dec
pop
cmp
xchg
repnz
xor
fs
lret
insl
mov
or
insb
or
scas
sbb
enter
jl
sbb
or
pop
sub
jmp
xor
and
mov
stos
sbb
mov
xor
add
scas
add
ret
ss
push
out
loopne
or
test
sbb
inc
ss
cmc
fs
jmp
xchg
xor
fs
inc
and
cmpsb
scas
add
lods
imul
cmp
js
pop
cmp
and
pop
movl
mov
cmpsl
mov
fcompl
push
mov
mov
lock
mov
lock
mov
sbb
add
inc
lret
mov
sub
out
inc
int3
add
and
rcrb
cwtl
shlb
inc
pop
cmp
inc
mov
cwtl
mov
jne
out
add
aaa
out
sub
adc
push
push
cmpl
add
fs
pop
pop
insb
xchg
lock
xchg
inc
add
movsb
rclb
xchg
decl
jne
sbb
inc
xor
mov
sub
xchg
or
ja
ljmp
leave
add
pop
sub
jnp
mov
aaa
cmpl
out
or
push
pop
ret
jo
mov
or
cmp
push
jo
enter
int
fwait
sub
jnp
dec
xor
je
xor
mov
push
aad
dec
test
mov
adc
in
xchg
inc
in
sbb
pop
jbe
lret
cmpb
fdivs
inc
and
sbb
and
dec
cmp
loope
shlb
sub
push
and
jb
add
sbb
rcll
xchg
inc
pop
mov
mov
scas
in
in
mov
cmp
push
cmp
shrb
lods
push
roll
ljmp
arpl
and
pop
in
ja
js
push
xadd
ss
mov
push
cmc
and
fidivrs
cmp
std
xor
sbb
cwtl
cmp
push
sbb
dec
jnp
pop
inc
sub
mov
add
or
aas
push
loop
mov
fsubrs
sub
adc
mov
sub
test
pop
shrl
inc
scas
mov
inc
cwtl
and
sbb
inc
xchg
cmp
add
insb
push
cld
push
sub
or
inc
or
sbb
push
mov
push
cmp
movsb
xchg
push
dec
and
sbb
add
and
mov
in
push
bound
imul
add
or
inc
cmp
jl
inc
sub
pusha
fsubrs
sbb
ret
dec
push
or
adc
mov
push
movsb
pushf
xchg
mov
dec
sub
andb
lahf
mov
dec
add
lret
xor
rol
adc
hlt
cmp
stc
je
adc
push
and
pop
dec
and
dec
lahf
clc
inc
and
sbb
xor
cmp
dec
ret
add
and
jno
daa
jle
mov
sub
xor
ud0
push
rcl
in
dec
insb
and
pop
lahf
mov
jbe
and
pop
cmp
test
jle
or
fdivs
and
insl
jno
jo
jg
jge
add
mov
add
pop
and
inc
ljmp
pop
fidivrs
lods
cwtl
movsb
pushf
pushf
cmp
jbe
mov
cltd
xchg
es
adc
pop
cmpsb
and
daa
test
movsb
jno,pt
jns
mov
stos
testl
mov
sub
mov
xchg
push
mov
mov
add
dec
mov
je
fnstenv
inc
mov
push
inc
ret
jne
xchg
mov
xor
addb
push
sarb
adc
js
and
andl
adc
lea
ja
sbb
das
mov
getsec
xor
sbb
lret
cmp
loopne
fcoml
lret
mov
mov
clc
or
in
popf
enter
shl
jecxz
lods
mov
push
ficoml
and
sarl
fistpl
aaa
dec
cld
adc
sub
jecxz
test
aam
xchg
sbb
add
fadds
ljmp
addl
and
test
push
daa
sbb
mov
xor
loopne
popa
or
adc
sarb
rolb
add
xchg
add
insb
or
xchg
imul
add
pop
rolb
js
mov
or
dec
and
jg
aas
push
js
imull
or
xor
pop
sbbb
in
in
in
cmp
fstl
fisttpl
push
sarb
test
cwtl
andb
push
test
out
jmp
sbb
pop
and
jns
addb
push
test
mov
pushf
sub
addb
xorb
fidivrs
inc
dec
push
pop
fs
inc
dec
jl
sbbb
mov
cwtl
push
test
andb
test
imul
test
lret
pop
jo
test
cmp
cs
sub
call
out
push
lahf
lret
xchg
cmp
shr
gs
or
add
push
push
fwait
adc
and
ret
add
dec
mov
add
inc
insb
lret
jne
xchg
lcall
cmp
jge
inc
mov
pop
movb
sbb
pop
add
and
pop
and
push
mov
aam
and
or
call
adc
mov
sbbl
lods
scas
adcl
notl
and
lea
test
and
or
in
pop
mov
mov
cmp
and
je
sahf
daa
fwait
xor
adc
inc
orb
aas
and
or
xchg
test
je
in
cmpsb
xorl
add
jae
je
int
xchg
cli
jl
or
or
dec
sbb
push
andb
jmp
adc
mov
ret
inc
mov
and
jne
lock
insb
or
push
adc
and
or
xor
add
mov
jbe
push
dec
bound
xor
lock
test
and
push
jb
clc
movsl
or
inc
pop
jnp
pop
outsb
cmp
or
mov
out
and
mov
cwtl
outsl
push
dec
imul
aam
aam
test
sub
loope
testb
test
ja
enter
or
call
and
inc
ds
mov
js
mov
mov
push
mov
add
mov
pop
or
sbb
and
jge
shl
lock
and
adc
jl
ljmp
mov
rcll
jg
lret
or
inc
sbb
pop
loopne
inc
inc
cmp
sub
es
mov
test
push
popa
jne
or
cmpsb
lea
inc
sub
mov
or
inc
sub
das
add
or
push
pop
cmp
ja
int
loopne
bound
push
inc
inc
in
jo
or
js
jmp
xor
cli
or
add
inc
shlb
mov
push
xchg
pop
dec
in
push
shrb
ret
lods
mov
and
push
push
add
fdivl
push
mov
pop
test
xchg
rolb
push
dec
or
or
clc
arpl
enter
push
aaa
jecxz
push
sub
test
ficoml
pop
xchg
pop
push
mov
adc
lea
jmp
jbe
push
inc
loopne
xchg
lcall
pop
xor
inc
ret
aaa
sahf
jno
cmp
lock
divl
or
loopne
pop
js
mov
ds
mov
dec
pushf
scas
xchg
jl
sbb
xor
pop
mov
dec
ljmp
or
or
push
sub
pop
cmp
add
add
inc
pusha
les
rcrl
mov
and
xchg
aam
sbb
mov
and
mov
push
fs
cwtl
lock
cmp
mov
or
or
inc
or
ret
insb
rcr
je
cmpl
inc
rcrb
jmp
shr
call
add
push
inc
cmpl
pop
outsb
or
cmpl
les
xor
adc
dec
mov
je
or
in
cmpsl
scas
icebp
dec
jecxz
movsb
sti
and
jb
lods
in
or
aam
xchg
lret
in
fadd
fmuls
in
ds
xor
out
push
inc
mov
sti
mov
out
mov
test
and
test
inc
leave
mov
leave
test
lods
jl
loopne
or
movl
inc
adc
icebp
sti
inc
xor
imul
cld
jbe
rcrb
jl
pop
icebp
mov
fstp
loopne
sbb
test
js
push
sar
pop
mov
cmp
cmc
or
bound
xchg
inc
movsl
jnp
lock
les
xchg
lret
aam
clc
fmul
lods
loop
popa
mov
sub
dec
or
je
or
nop
out
adc
adc
int3
pop
addr16
pop
or
add
loope
pop
addl
out
int
nop
cli
xchg
sub
notb
rorb
aam
fsubs
add
sub
test
mov
sarb
adc
inc
or
ja
movsl
mov
jns
and
mov
hlt
out
jo
dec
sbb
cmpsb
inc
stc
nop
je
or
inc
insb
je
xor
mov
test
data16
insb
xor
pop
icebp
cmpsb
pusha
sub
in
mov
mov
pop
and
pop
or
and
mov
dec
xor
cmp
and
movsl
addr16
int3
add
fs
or
sbb
fwait
imul
lcall
pop
xlat
cmc
test
mov
add
push
jno
lock
lret
pop
lea
fisubl
sbb
sbb
je
cmp
adc
or
xlat
inc
lock
mov
ret
add
hlt
mov
test
fdivr
shrb
and
test
mov
je
push
jae
dec
testl
stos
out
jbe
jle
aaa
jne
das
mov
adcl
xchg
add
dec
and
and
or
lock
es
mov
or
sti
nop
popa
pop
push
mov
add
push
insl
fwait
cmp
stos
cmp
add
negl
mov
testb
call
push
aam
add
cmp
test
sti
cmpl
mov
shlb
push
mov
aas
push
cmp
add
mov
loop
setp
hlt
mov
inc
roll
lret
mov
subb
or
xchg
or
js
jecxz
mov
xchg
lea
cmp
cmp
xchg
js
clc
push
sbb
xchg
test
push
pop
fnstenv
cli
add
add
je
adc
add
addr16
lods
cld
inc
inc
push
push
outsb
je
test
ss
sub
aas
add
pop
insb
xor
test
mov
je
data16
pop
push
add
orb
adc
mov
test
pop
pushf
or
adcb
jp
fcoms
push
add
ret
add
sar
mov
jne
mov
jmp
cmp
jle
out
je
insl
cmpl
add
pop
inc
sub
shlb
adc
mov
out
test
cmp
xor
adc
sbb
hlt
subb
lea
ret
fwait
pop
js
mov
cs
jecxz
lea
stc
mov
movsl
push
pop
test
inc
call
mov
cmpb
jne
and
stos
inc
adcl
punpckhdq
add
ljmp
mov
es
addr16
decb
mov
mov
add
in
fldt
imul
data16
push
cs
js
sub
lret
push
popf
out
mov
jne
push
and
in
je
adc
in
data16
repnz
or
xor
add
add
je
xchg
pop
jl
int
rorb
inc
adc
cli
loop
sbb
in
pop
fimull
rorb
mov
or
movl
dec
test
adc
push
and
lea
lods
outsb
das
sbb
or
cmc
ret
pop
push
inc
je
mov
cltd
push
lods
sub
aas
mov
cmp
push
nop
xchg
clc
ja
call
sahf
add
mov
dec
jmp
pop
xchg
sub
inc
adc
mov
aas
and
add
je
and
pop
mov
dec
shlb
xor
ss
movsb
add
dec
mov
loope
xchg
lods
dec
jmp
dec
data16
push
inc
inc
xor
sub
cmp
jecxz
fwait
sbb
je
gs
cmovo
into
daa
mov
jmp
and
sub
push
test
sahf
mov
outsl
inc
and
mov
jmp
popf
fcoml
or
pop
inc
negb
shl
push
jp
cltd
fdivl
dec
fdivrl
lea
stos
jns,pt
jns
xchg
mov
cltd
out
adc
push
jbe
dec
andl
adc
fdivs
out
add
jno
aaa
cmp
aaa
pusha
xor
fistps
rcll
jnp
movsl
push
sbb
mov
xchg
lods
add
cmpsb
mov
int3
xor
pushf
adc
icebp
jl
xchg
test
push
xchg
adc
lahf
clc
cmp
mov
push
in
ret
in
sub
movsb
cmp
push
loope
add
jp
adcl
js
sub
decb
push
push
movsb
ret
jl
xor
xor
iret
mov
jecxz
sbb
mov
pop
mov
lcall
loopne
ret
inc
mov
jp
and
idivb
pop
sbb
push
lea
bound
inc
je
inc
mov
flds
cs
out
dec
and
rolb
lock
lcall
test
add
sub
mov
rorl
je
rcll
je
push
pop
sar
mov
inc
js
inc
jl
push
pop
cmpsb
cltd
mov
add
out
mov
adc
inc
xor
inc
or
jb
flds
push
add
sahf
dec
icebp
adcl
les
push
out
sub
inc
and
cmp
ss
mov
sbb
push
jne
sbb
push
push
xchg
arpl
lock
sbb
lods
and
imul
mov
xchg
orl
lea
cwtl
test
cld
testl
ss
jg
push
mov
or
or
adc
sub
loop
jmp
clc
or
sbb
nop
rol
adc
in
mov
mov
and
sahf
aad
sub
sarb
out
jnp
dec
imul
mov
inc
lock
dec
or
outsb
pusha
in
add
pushl
push
lea
mov
mov
mov
loop
out
add
xor
jne
sar
inc
incl
cmp
jbe
push
pop
lcall
jg
push
subb
jae
mov
shr
lea
not
and
sar
mov
sub
sbb
lea
dec
loope
loopne
pushf
mov
loopne
pop
pop
add
push
dec
pop
add
addr16
jnp
add
pop
and
push
or
or
jmp
or
cli
pop
clc
and
notb
or
out
jne
and
sti
add
sbb
lods
mov
cmp
fcomp
mov
imul
cli
idivl
and
cmp
je
fs
fwait
lret
cmpsb
data16
mov
shr
not
and
add
pop
dec
add
xor
insl
mov
dec
loopne
mov
xor
push
jle
pop
dec
add
gs
cmpsb
clc
mov
mov
jnp
jb
push
push
fisubs
lea
xchg
rcl
int3
inc
or
dec
or
adc
or
dec
pusha
mov
mov
incb
mov
mov
and
out
add
pop
mov
jmp
dec
xchg
imul
push
mov
rorl
and
xor
and
mov
or
and
icebp
or
pusha
jg
jne
imulb
shl
add
mov
fmuls
scas
jp
push
call
aas
gs
fld
sti
or
sbb
cmp
add
decb
adc
jg
jns
fsubl
and
pushl
push
push
mov
adc
and
sbbl
or
call
js
bound
pushf
test
adc
outsl
insb
jl
lahf
outsb
call
push
jbe
insl
or
mov
pop
or
das
mov
add
mov
xorb
imul
push
outsl
or
cmp
rorl
packuswb
add
jo
jp
negb
xor
rclb
stos
pop
dec
stos
cmp
bound
test
push
imul
cmpsl
and
sti
inc
fucomi
fwait
orl
mov
or
incl
xor
push
push
mov
shlb
fistps
stc
mov
imul
in
xor
inc
clc
pop
add
add
or
hlt
or
sti
mov
pop
pusha
gs
int
adc
popa
mov
lea
xchg
adc
cli
ja
sub
shr
cmp
inc
orl
orl
add
or
adc
out
pop
ja
fstl
add
sub
sbb
pmullw
je
clc
add
push
rorb
and
hlt
jb
adc
cmp
sahf
inc
pop
mov
or
inc
inc
mov
lock
xor
inc
jne
or
icebp
stos
popl
and
or
xchg
les
sbb
notb
cmp
int
mov
pop
shr
test
push
pusha
jb
cld
inc
dec
or
mov
and
pushf
aaa
jno
out
jle
int3
inc
mov
mov
cmp
scas
add
fs
add
mov
int3
add
pop
sub
mov
xor
stc
sbb
clc
push
cs
pop
add
push
xorb
or
mov
add
push
jns
nop
jge
push
into
add
ljmp
adc
pushf
sar
dec
jns
add
fstpl
lea
aad
pop
xchg
add
adc
jle
shll
pop
pop
push
cmpsb
imul
lcall
sub
xchg
adc
js
pop
shl
ss
and
js
test
inc
jne
imul
mov
out
add
add
mov
sub
jl
int
sbb
cltd
inc
or
mov
sub
pop
xor
push
sar
dec
ret
sbb
and
add
adc
cmp
dec
xchg
xor
dec
je
fbld
mov
fadds
roll
ja
dec
ficoms
add
mov
loope
lea
mov
pop
ret
mov
mov
mov
push
cmp
sub
bswap
mov
push
cmp
rdmsr
and
jns
dec
dec
add
add
add
js
xlat
add
pop
and
loopne
push
inc
cmp
push
push
push
jge
or
out
adc
mov
or
in
or
lock
stos
dec
or
or
and
and
or
jne
add
mov
cmp
jb
push
jne
mov
addb
jne
jmp
jnp
add
jns
jae
xor
aaa
arpl
outsl
add
mov
and
push
sub
out
mov
sub
pop
add
push
xor
and
pushl
sbb
add
popa
mov
es
mov
dec
pop
iret
jne
push
jno
mov
and
sahf
xchg
jp
mov
mov
jmp
fcmovu
mov
mov
and
jne
mov
jns
jle
push
pop
outsb
leave
inc
test
inc
push
ficoml
sbb
sbb
fdivrl
inc
dec
dec
inc
mov
dec
pop
xchg
or
sbb
iret
push
ja
js
xchg
cmp
or
pop
mov
adc
filds
decb
jne
sbb
cmp
jp
or
sub
dec
mov
pop
pusha
dec
bound
dec
push
and
jo
push
clc
into
xor
sub
jns
jp
pop
mov
xchg
xor
push
data16
das
pop
xor
addb
and
dec
pop
jbe
ret
out
or
dec
mov
or
inc
or
inc
or
push
mov
mov
aaa
sub
aad
or
adc
aad
ficompl
shrl
ret
or
push
lea
ds
jne
cmp
rorl
call
jo
xchg
sub
xor
mulb
sbb
loopne
or
in
jb
or
xorl
lock
jne
jo
mov
xorl
push
adc
xchg
or
cmp
test
push
mov
add
or
or
dec
enter
insl
shlb
pop
sbb
inc
hlt
movb
aas
adc
es
stc
mov
add
roll
xchg
jle
cmp
cmp
sub
add
push
mov
and
or
mov
adc
or
cmp
pop
fcoms
and
xchg
push
in
rorb
jl
dec
push
xor
out
xchg
inc
add
push
sbb
push
add
fcomps
mov
lahf
pushl
lds
testb
in
pop
ret
divl
pop
outsl
or
push
adc
std
pop
and
jmp
sbb
pop
mov
js
jl
iret
lcall
dec
inc
js
push
or
adc
push
jmp
mov
mulb
sub
call
hlt
and
pop
mov
lahf
insb
int3
push
rorb
mov
xchg
jle
or
je
dec
sbb
sub
inc
int
test
mov
jle
jle
andl
add
adc
push
push
add
shrb
adcb
out
sbbl
mov
and
xchg
lret
js
popf
call
pusha
aam
hlt
mov
and
addb
xor
in
sarb
mov
adc
jge
jmp
movzwl
xchg
add
add
in
je
je
add
cmp
mov
dec
dec
inc
rorl
cmpb
xchg
imul
test
fsubrs
pushf
mov
pop
lcall
mov
fadds
and
add
iret
inc
mov
mov
loopnew
lahf
ljmp
sub
cmpsb
sbb
adc
ret
inc
xchg
pop
cmpsb
insl
lret
pop
add
imulb
arpl
or
mov
cmp
lea
lahf
ljmp
ljmp
hlt
faddp
lods
loopne
mov
jb
repz
push
inc
pushf
aam
out
push
fistpll
insb
jne
jbe
arpl
or
pop
mov
mov
mov
xchg
notl
inc
cmp
insb
arpl
xchg
xor
or
adc
or
sbb
cmc
jmp
push
nop
out
int3
les
sub
inc
or
movsb
xor
ret
jne
sahf
xor
in
sbbb
lcall
mov
add
sbb
push
sbbb
cmc
sub
cmp
dec
cmpsl
cs
add
or
xchg
push
leave
enter
cmp
xchg
dec
pushf
pushf
push
sub
fmulp
call
insl
and
add
inc
dec
outsl
lahf
add
xchg
call
sbb
lahf
mov
ret
or
fimuls
cld
popf
push
sbb
pop
mov
andb
test
mov
xchg
xchg
lret
call
mov
mov
mov
push
hlt
xchg
lahf
push
cltd
xchg
or
lods
in
cmp
or
lods
rclb
sbb
call
add
lods
pop
leave
orl
mov
orl
lds
in
nop
or
xchg
in
pop
push
cmp
test
test
test
mov
int3
test
xchg
jle
xchg
mov
ret
or
sysret
mov
and
shlb
test
cmpsb
push
ds
aaa
cmpsl
or
pop
jecxz
lea
fists
test
daa
cmp
sbb
jbe
push
dec
lea
xchg
sub
xor
cmp
lock
lret
mov
inc
mov
xor
xchg
ret
stos
xchg
lock
xchg
jne
lods
dec
ret
movsb
je
in
sbb
rcll
and
and
adc
mov
xor
fwait
and
sub
adc
mov
push
outsl
sbb
mov
mov
or
or
dec
xchg
lcall
and
mov
adc
and
inc
popf
adc
add
shr
lds
clc
pop
add
ret
mov
cmp
loope
int
jne
push
cmp
and
insl
push
sub
inc
popf
xor
mov
adc
push
movsb
fcmovb
add
jne
mov
nop
sbb
rcll
xchg
cmp
pop
fadds
sub
mov
mov
out
add
add
xor
or
in
mov
add
or
rolb
or
push
fists
call
add
insb
cmp
inc
add
push
cmp
add
jne
inc
cmpsl
adc
or
push
aaa
inc
cld
push
ds
or
pop
and
dec
cmp
call
push
adc
das
dec
call
int3
pop
or
pop
icebp
mov
or
stos
xchg
icebp
not
and
adc
int3
jno
cmp
sub
dec
dec
shrl
sub
clc
add
cli
sti
inc
dec
shll
std
dec
inc
adc
cwtl
cmp
xor
inc
jno
xchg
push
jg
cmp
lret
fldcw
mov
sbb
add
xor
push
jmp
insl
mov
int
mov
ljmp
movsl
xchg
je
push
or
mov
inc
fmul
daa
jno
fisubrl
or
loopne
fldl
or
fldl
or
sub
dec
jae
push
mov
dec
icebp
cmpsb
lea
lcall
push
leave
pop
jmp
mov
outsb
jns
dec
push
dec
insl
mov
xor
dec
xlat
das
dec
imul
sub
je
dec
je
add
mov
fsubrs
adc
push
sti
flds
lods
repnz
ljmp
insb
sbb
mov
pop
test
sbb
sub
xchg
lock
add
sbb
inc
add
jno
mov
lret
xchg
adc
adc
fmulp
stos
test
or
push
add
sahf
dec
addl
adc
lock
clc
lock
xchg
push
push
and
push
push
sbbb
das
and
inc
lock
arpl
cmp
push
adc
sbb
es
mov
out
out
fwait
push
inc
push
push
pop
andl
add
jecxz
adc
fnstcw
sub
int3
or
jno
mov
insb
lock
fs
xor
pop
cli
push
or
jne
ds
xchg
xchg
jle
adc
sbb
and
inc
or
and
jb
push
xchg
jmp
inc
push
fildl
push
cs
or
push
jmp
test
add
fmull
mov
mov
and
ret
and
push
push
sbbl
out
jle
jecxz
xor
jecxz
adc
or
mov
and
push
jne
add
push
mov
xor
aad
les
sbb
inc
xchg
dec
lea
mov
mov
pop
cs
lock
call
cmp
addl
imul
xchg
jne
cmpsl
pop
mov
sub
clc
cmpsb
jo
adc
sar
sbb
lea
mov
push
mov
inc
and
jne
dec
sbb
std
xor
loopne
sar
lea
testb
sbb
sub
mov
pop
in
repz
or
mov
rolb
or
jns
push
dec
sbbl
or
ja
movsbl
loopne
xchg
lret
mov
lods
jge
ret
xchg
test
pop
cs
out
rorb
shl
enter
loope
sub
lds
dec
push
pop
or
pop
cs
pop
add
andl
and
jo
les
cmp
mov
xchg
sbb
push
stc
or
mov
mov
xchg
push
mov
jbe
lods
es
sub
stos
lea
mov
dec
je
or
inc
mov
dec
mov
cmp
lahf
repz
imull
cmp
inc
sub
xchg
imul
aad
pop
and
cmp
jne
cmpb
mov
jne
cmp
inc
xor
hlt
inc
dec
pop
movsb
data16
aad
cmp
push
int
rclb
lds
js
loope
xchg
mov
lods
cmp
fwait
sub
pop
mov
fdivs
leave
addl
repz
lock
jns
jg
in
mov
movsb
mov
jns
imul
call
dec
cmp
jmp
pop
dec
daa
orb
pop
orb
shr
sbb
adc
dec
sti
push
inc
cmp
lea
pop
popf
in
cmpsl
cmp
std
mov
mov
mov
inc
pop
cwtl
add
in
inc
dec
lods
or
cmpsb
pop
es
xchg
mov
push
adc
pop
shrl
jo
mov
pop
and
mov
mov
cwtl
lret
add
push
push
ja
sbb
jns
daa
mov
push
sbb
sahf
add
mov
mov
xor
and
xchg
mov
fiaddl
pop
enter
mov
enter
sub
jno
sub
sbb
cmpsb
mov
pop
or
cwtl
cmc
mov
xor
lds
mov
and
dec
mov
mov
in
mov
repnz
push
sti
jecxz
xor
adc
mov
das
xor
std
aaa
addr16
lret
iret
das
lock
mov
fsubp
fdivr
adc
jbe
ret
jae
jmp
jle
test
andb
rcrb
inc
add
jno
outsb
mov
gs
mov
xchg
iret
addr16
std
call
mov
push
mov
dec
mov
jbe
gs
jge
divb
aam
std
inc
mov
xor
jne
std
ffree
or
lea
stc
aad
lock
out
cwtl
cmc
popf
xchg
imul
mov
lods
dec
sarl
xor
cmpb
enter
xchg
jno
inc
movb
cld
mov
adc
out
cli
imul
imul
xchg
sub
test
pushf
adc
int
jp
dec
jp
into
dec
xor
sbb
adc
mov
sbb
adc
insl
scas
dec
inc
cmp
cmp
and
cmp
mov
fs
call
sbb
xor
inc
imul
test
in
std
mov
cmp
inc
repz
daa
cmp
jp
mov
popa
fwait
push
fsubrp
into
jp
decl
fwait
ds
cs
xor
xor
push
hlt
sub
add
or
fstl
dec
pop
add
cmc
and
stos
sar
cmpsl
mov
xor
push
sub
lods
sbb
adc
mov
int3
sbb
jge
int3
cmp
loopne
sub
pop
addl
inc
dec
dec
test
iret
lret
std
add
mov
mov
popa
cs
lock
dec
cmpl
mov
sub
je
lods
call
insl
mov
movsb
adc
movsl
pop
pop
xor
xor
push
cmp
push
inc
lret
jne
cmp
pop
cmpsl
mov
cmovge
or
mov
addr16
fdivr
mov
jae
das
push
dec
pop
nop
lret
jno
push
je
enter
cmp
std
or
jb
loope
pop
push
xor
sub
ret
xchg
aaa
fsubrl
into
test
xor
shlb
mov
cmp
mov
test
inc
push
jns
test
loope
push
insb
adc
imul
orb
stos
add
icebp
xor
push
inc
rolb
pushaw
and
repz
and
cltd
add
out
loope
xchg
push
mov
test
mov
cmpb
adcl
sbb
lahf
stos
icebp
pop
sbb
adc
subb
cmp
ja
repnz
cmp
mov
or
mov
loope
jecxz
mov
iret
dec
ret
xchg
add
xchg
xchg
xlat
jo
lock
in
and
dec
dec
in
inc
pop
gs
lock
or
cmpsb
pop
add
xor
add
enter
pop
test
mov
inc
scas
movsl
call
xchg
or
mov
xchg
xor
xor
adc
and
cmp
or
enter
aam
les
imulb
or
or
aam
aaa
sbb
mov
mov
movsb
jb
ja
adcl
xchg
xor
adc
and
movsb
inc
mov
insb
scas
dec
lods
test
mov
mov
dec
sbbl
xor
dec
fdivrs
adc
cmp
lea
in
movsb
loope
xor
out
xchg
and
mov
or
inc
repnz
mov
mov
inc
es
pop
popa
imul
inc
lods
xchg
mov
pop
jb
mov
xchg
rcll
enter
addr16
mov
adc
fiadds
mov
lea
mov
mov
in
movsb
mov
xchg
dec
push
enter
or
pushf
movsb
call
push
aas
dec
mov
leave
adc
cs
repnz
test
test
nop
test
xchg
stos
inc
pushf
pushf
dec
inc
scas
in
nop
nop
cmp
lods
aad
inc
push
lods
or
cmp
pop
fidivrl
push
addr16
je
stc
xchg
lcall
fbld
mov
add
imul
jne
lcall
enter
pop
mov
iret
in
xchg
or
loopne
shrb
pop
push
jne
std
fmul
pop
enter
fidivrl
or
or
adc
and
add
rcrb
mov
or
push
or
inc
sbb
ret
aaa
or
in
fistpll
test
sarb
push
inc
mov
mov
and
push
add
jnp
int
fsubrs
dec
fs
cltd
fwait
xor
and
xor
test
orb
dec
inc
jmp
jl
dec
sub
mov
pop
mov
dec
lahf
or
mov
inc
dec
or
and
jno
test
shl
adc
insb
mov
pop
bound
ret
cmpsl
mov
sbb
ret
or
pusha
xchg
and
jle
sub
pop
sub
in
scas
loop
mov
sbb
je
jmp
bound
mov
shl
test
sbb
sbb
or
imul
lahf
les
cld
lods
or
orb
call
mov
movl
add
pushf
xor
test
cmpsb
adc
ss
insb
imul
add
xor
test
lods
jmp
mov
mov
dec
or
xchg
cltd
cwtl
inc
arpl
lahf
or
push
shlb
adc
cmp
jns,pt
push
jecxz
add
je
hlt
daa
clc
inc
push
cmpsb
fsts
jae
testl
cmpsb
jmp
cmp
fistpll
repz
and
cmc
jno
movsb
scas
les
sbb
or
jmp
inc
in
add
mov
sbb
addb
scas
or
arpl
lcall
jbe
push
lock
fs
mov
add
jmp
push
pop
push
push
inc
repz
std
call
jmp
rcr
or
jne
div
pop
dec
adc
inc
out
out
fildll
out
jb
cmp
or
cmp
or
xor
lahf
out
gs
adc
or
and
rolb
sbb
iret
cmpsb
insb
arpl
or
fiadds
add
clc
add
inc
es
pop
jmp
and
adc
lcall
inc
or
in
inc
stc
adc
push
and
sbb
icebp
daa
push
mov
adc
ss
andb
dec
adc
push
and
mov
clc
stos
je
andb
movsb
lsl
sbb
or
or
mov
push
push
xchg
xchg
sbb
adcl
sub
mov
xchg
pusha
orl
xor
leave
pop
jne
mov
xchg
call
clc
and
mov
cld
adc
repnz
cmovg
and
xchg
ret
lcall
aam
movsb
push
xchg
dec
add
jg
adc
fidivrs
jne
lea
les
jb
pop
mov
aas
inc
test
or
push
mov
sub
test
and
out
ret
cmc
jne
sbb
fbld
add
lea
xchg
adc
jbe
and
pusha
icebp
and
sbb
mov
mov
xchg
push
push
pop
mov
dec
jne
js
gs
into
jl
leave
add
push
fistps
test
sbb
subb
mov
test
push
movsl
adc
cmc
scas
pop
push
cmp
andl
mov
adc
insl
xor
inc
inc
xor
jge
xchg
ficomps
sub
imul
movl
dec
xor
pop
sbb
out
and
add
cmp
lock
mov
xor
outsl
pop
imul
test
xchg
loope
not
xor
push
jp
sub
ffree
rclb
ret
xchg
add
sbb
xor
xchg
loopne
mov
sub
pop
das
dec
inc
cmp
pop
dec
cltd
test
into
fsubrl
dec
lret
adc
sub
movsl
mov
shl
and
sub
lea
and
in
sub
mov
les
sbb
jbe
add
or
movsb
das
or
sahf
ret
add
call
pcmpeqb
iret
mov
cmp
fdivrl
push
ret
shl
push
adc
and
loopne
xor
les
xor
inc
iret
xor
andb
dec
xor
sub
mov
in
and
mov
lret
int3
inc
push
cs
out
cmp
je
ss
cmp
sbb
and
faddl
aam
xchg
mov
outsb
or
cld
jbe
mov
mov
and
out
fmull
dec
sub
je
sbb
fimuls
inc
cld
iret
push
mov
pushf
lret
insb
clc
xchg
test
and
pushf
jno
test
icebp
repnz
hlt
hlt
call
lea
imul
push
ja
cmp
jb
inc
fildll
mov
inc
fld
inc
cld
into
shrb
inc
cmp
roll
mov
dec
sbb
pop
jne
or
ss
test
lods
inc
xor
jno
inc
subb
push
sbb
es
dec
or
mov
jmp
sti
jb
inc
sub
imul
lahf
jb
mov
or
mov
push
jnp
shll
sub
inc
arpl
ds
inc
and
pop
jno
xchg
xchg
and
or
dec
dec
mov
pop
jbe
inc
sub
add
and
lahf
dec
adc
push
fcmovb
movb
lret
mov
push
jbe
imul
popf
test
mov
fiaddl
ret
add
push
inc
fstp
or
mov
jo
inc
mov
xor
popa
loope
cmpb
add
push
shrb
aaa
dec
pusha
sbb
jo
add
adc
fwait
xor
mov
cmp
sub
or
and
sub
and
cmp
sti
subl
xor
and
sarl
call
mov
jle
cmp
jle
lods
inc
sbbl
pop
orl
xchg
test
cmp
inc
scas
cs
pop
push
mov
xchg
pop
mov
sbb
inc
or
or
leave
push
sbb
sub
orb
mov
fwait
dec
mov
les
push
inc
xlat
out
xor
cmpsl
out
push
cmp
div
imul
or
sbb
pop
lds
hlt
add
pop
and
cmp
or
aam
mov
cli
xor
or
out
inc
ret
mov
push
or
fdivrs
jne
fnstcw
sbb
out
insb
rcr
inc
mov
ja
mov
int3
clc
sub
rol
clc
jmp
xchg
sbb
cmp
push
je
dec
je
sub
sbb
xchg
push
push
mov
dec
pop
dec
or
dec
dec
jmp
mov
jge
jb
push
jnp
cmp
les
mov
xchg
add
adc
scas
dec
cwtl
fwait
add
mov
pop
or
mov
aam
inc
pusha
jne,pn
sbb
ja
rol
inc
mov
jbe
sti
popa
adc
cmp
jge
mov
sub
mov
mov
mov
or
fildl
cmp
pop
sbb
imul
and
and
insb
insb
inc
lock
add
xor
add
test
push
adc
bound
dec
shlb
mov
jne
pop
add
xchg
es
xor
add
int
xor
xlat
mov
mov
sbb
inc
pop
pusha
fs
jo
sbbb
es
loope
or
je
adc
std
xor
js
and
mov
stos
sbb
and
and
jno
mov
cmp
cmp
outsb
filds
sub
lahf
xor
jecxz
movsb
popa
push
xor
mov
and
shlb
test
cwtl
shl
and
and
or
mov
popf
arpl
dec
ret
rcll
test
test
imul
and
mov
lahf
outsl
rcr
cmp
jbe
dec
pop
test
push
xchg
inc
jge
push
in
cmp
xchg
mov
movsl
lods
mov
fxch
adcl
popa
xchg
es
push
orb
je
push
inc
jecxz
addr16
push
xor
and
imul
cs
dec
mov
jecxz
aaa
and
mov
mov
or
sub
mov
dec
add
rcl
stos
lods
in
rcl
fcomp
xchg
dec
push
out
mov
jb
add
add
cwtl
or
in
repz
aad
fdivs
adc
mov
or
jmp
call
daa
inc
pop
or
jb
push
mov
inc
mov
enter
movb
mov
idiv
xchg
sbb
xor
sbb
or
xor
jg
add
inc
fmuls
loop
sbb
jl
push
or
repz
jmp
xor
les
pop
dec
jb
inc
adc
add
outsb
add
inc
cltd
aam
jo
je
pop
mov
fcmove
je
jmp
dec
pop
dec
adc
orl
inc
fs
stc
add
adc
subl
xchg
xchg
fwait
roll
or
lods
and
mov
movsb
or
mov
pop
and
inc
mov
mov
mov
xor
inc
pop
rol
pop
add
rolb
arpl
sub
insb
pop
jne
mov
mov
popf
mov
xor
push
insb
inc
pop
and
outsb
je
jmp
adc
sbb
or
pushf
cld
push
xor
or
jge
shl
xor
push
inc
stos
scas
aas
adc
dec
mov
mov
repnz
add
push
sub
daa
negb
mov
jge
push
push
orl
hlt
cmp
clc
or
shl
push
xor
in
test
je
push
and
sbb
inc
lea
daa
inc
inc
jnp
fistpll
mov
jo
sub
or
shll
jne
mov
lahf
mov
jle
cmp
dec
inc
inc
or
jne
hlt
adc
enter
push
sar
inc
pop
out
jl
loopne
loopne
add
je
mov
ret
ror
and
outsl
fmull
dec
je
xor
dec
jge
inc
lret
js
ret
jmp
fmuls
sbb
push
inc
addb
push
and
repnz
negb
lods
fcompp
sub
out
int
pop
push
cwtl
inc
push
or
shrw
pop
pop
jg
add
xor
sbb
lea
pop
xchg
push
pop
push
dec
clc
mov
pop
push
xchg
pop
inc
or
lea
loopne
xor
or
or
or
mov
and
push
and
xor
mov
mov
in
out
fnstenv
js
into
mov
sbb
and
add
mov
sar
jl
mov
sbb
jb
cmovl
dec
loopne
rcrb
and
nop
and
dec
inc
lock
andb
pop
rolb
scas
sar
sarb
jg
cmpsl
xchg
mov
popf
dec
adc
add
mov
add
mov
shrl
push
push
mov
push
jne
or
jmp
jmp
clc
add
out
add
and
lods
inc
pusha
inc
add
and
mov
leave
add
in
sti
lcall
add
sub
xorl
push
scas
or
orb
movsb
push
or
xchg
orl
ret
dec
je
jbe
jge
cmc
pushaw
pop
addl
push
mov
ljmp
mov
jne
leave
push
stos
inc
clc
stos
add
or
je
and
popl
add
add
mov
movsl
jb
loope
jo
push
cmpsl
hlt
notb
cmc
adc
xor
adc
push
pop
out
out
mov
ljmp
shlb
mov
cs
xor
add
and
push
rorb
lcall
sti
or
lods
mov
mov
or
jmp
test
adc
loopne
or
xor
fs
fincstp
push
roll
incl
enter
and
add
cs
pop
fsubl
and
sub
jne
jmp
sbb
sub
add
shrb
scas
lea
jg
jg
adc
and
mov
test
jo
cltd
and
xor
dec
sub
mov
adc
cltd
or
sub
sub
cmp
or
and
jo
lret
mov
je
sub
jmp
sub
mov
mov
add
jge
idiv
mov
ss
neg
add
lock
iret
sub
push
push
or
outsb
or
xchg
decb
mov
mov
adc
xor
adc
mov
fs
push
in
mov
rorl
inc
xor
ljmp
and
push
mov
fimull
jp
jae
mov
add
ficoml
dec
cmp
add
jmp
pushl
dec
leave
negb
push
add
push
push
jae
pushf
xor
push
sub
arpl
mov
mov
fadd
push
stc
mov
inc
adc
xor
lret
lock
xor
repnz
sahf
lret
jl
adcb
xor
and
cmpsl
test
pop
js
movsb
adc
fistl
add
mov
stos
or
adc
out
clc
jl
outsl
push
push
dec
adc
push
and
jne
out
test
inc
or
sub
jle
pushf
outsl
ja
xchg
push
jg
test
scas
jecxz
scas
sbb
hlt
xor
or
adc
mov
xchg
lret
or
loope
or
test
into
and
call
ljmp
dec
andl
sub
ja
xchg
and
sub
add
sub
xor
pop
mov
lock
in
lock
rep
add
aam
pop
mov
outsb
sbb
rcll
in
in
mov
push
jp
or
insb
push
js
adc
push
jmp
pop
dec
xor
xor
pop
xor
cmp
pop
add
push
hlt
push
jmp
adcb
daa
push
cli
addb
inc
or
pop
movsl
mov
jno
imul
or
arpl
sbb
cltd
push
pop
or
fnsetpm(287
pop
and
jb
xchg
and
dec
sub
push
dec
enter
testb
lods
add
push
mov
inc
add
insl
inc
sti
adc
jns
stos
push
add
cmpsb
or
pop
fidivl
cmp
inc
rep
in
mov
imul
dec
nop
dec
or
cmpsl
or
xchg
pushf
or
push
and
rorl
insl
les
adc
mov
push
clc
mov
cs
push
xor
adc
pop
or
push
cmp
mov
fnstcw
pushl
loopne
aas
add
jmp
test
or
fnstcw
pusha
jle
ret
orb
mov
test
outsb
cmpsl
outsb
sbb
aam
sarb
ret
imul
mov
sub
popa
outsl
fcomp
and
icebp
test
push
push
lahf
xor
push
fsubrl
ds
int3
add
xlat
mov
bound
test
adc
js
sbb
add
outsb
movsl
repnz
jae
adc
inc
add
cwtl
push
ss
adc
mov
insl
jmp
push
push
faddl
rcrb
fmuls
sbb
fsubp
jo
int
insl
adc
loop
add
and
push
rorb
sbb
cltd
sub
mov
insl
jecxz
imul
push
xchg
loop
xor
cmp
inc
jmp
das
sbb
pop
dec
xchg
push
ret
cmp
imul
pop
add
cmc
aas
sbb
inc
or
mov
xor
adc
cmovge
popa
inc
scas
inc
or
pop
adc
adc
fstpt
inc
push
jo
test
xor
fsub
pop
rcrl
idivb
xor
xor
push
push
ja
fucom
divb
and
add
cmpsl
ja
mov
sub
adc
mov
mov
xchg
lods
sub
out
and
lcall
xrelease
xor
sub
and
mov
mov
mov
push
or
sbb
rolb
ficoms
mov
rcll
out
add
and
push
add
pop
or
popf
sbb
adc
sbb
in
sub
or
out
inc
add
test
inc
loopne
mov
dec
mov
mov
or
mov
sti
pop
jle
sbb
or
call
jg
sarb
cmp
test
mov
insl
jno
jne
push
je
nop
fadds
add
and
movsb
popf
into
adc
insl
je
enter
loopne
sub
adc
inc
or
add
in
pop
xchg
xorl
cmpsl
call
jmp
adc
push
jl
jae,pn
xlat
sahf
sub
sbb
adc
ret
cmp
mov
stc
add
rcll
push
and
and
inc
sbb
rolb
cmp
sbbl
lods
loop
inc
sbb
dec
dec
rcrb
push
sub
rcrb
xor
inc
fisttps
sbb
imul
loopne
mov
inc
or
lret
test
sbb
and
les
push
jl
js
mov
xor
or
add
push
dec
aaa
addl
loopne
or
jg
aas
mov
adc
popf
sub
add
sbb
or
xor
add
add
xchg
sub
xor
push
inc
jg
cmp
push
loopne
sahf
pop
enter
pop
jg
xchg
sbb
fcmove
lcall
pop
jl
mov
cwtl
xor
subb
sbb
fucom
clc
mov
call
jo
fadds
sub
xchg
dec
ja
fsts
ljmp
mulb
jbe
lock
xchg
mov
repnz
sbb
jb
out
loope
sbb
aaa
mov
xor
inc
push
clc
dec
inc
bound
jl
add
push
jp
jo
mov
outsl
mov
jb
gs
mov
ficomps
cmpl
dec
or
aas
xchg
add
cmp
jae
and
push
fs
pusha
xor
cmp
xchg
clc
mov
rolb
cmc
loope
xchg
sub
jbe
xchg
add
xor
addr16
push
inc
xchg
inc
jo
and
adc
inc
push
inc
test
pop
mov
mov
rolb
add
mov
inc
or
and
and
mov
ret
gs
cltd
sysret
test
loop
popa
and
jno
jo
pop
lcall
cmpsb
popf
testb
push
or
dec
es
inc
push
and
jle
xchg
cmp
mov
js
push
cld
mov
test
mov
mov
ja
dec
xor
repnz
shl
push
sbb
add
repz
sub
fs
sbb
in
sub
test
je
test
aam
push
repz
cmpl
sub
dec
jl
push
jmp
cmp
mov
ja
popa
xchg
je
mov
fadds
mov
addb
sub
loopne
lea
shl
add
inc
test
dec
sub
mov
lret
cmp
cmp
add
gs
jg
push
in
pop
adc
xchg
int3
aam
shlb
movsb
add
mov
into
add
ja
rol
jno
push
or
sbb
and
xor
or
push
popf
addl
and
mov
push
shll
loope
push
and
push
icebp
shll
cli
fildl
pop
inc
cs
arpl
mov
mov
js
je
cs
jns
pop
lahf
or
mov
push
test
mov
jb
xor
sbb
pop
pop
je
pop
cmc
and
pop
imul
mov
and
push
lcall
ss
sub
cld
ret
pop
movsl
jg
xor
pop
push
cmp
jl
filds
mov
mov
inc
dec
dec
daa
sbb
adc
mov
sub
or
jmp
add
and
push
mov
ret
mov
popa
cmpsb
into
rorb
push
ljmp
jno
fstpl
sub
jle
icebp
xor
add
mov
bnd
add
in
dec
nop
inc
pop
stos
dec
add
stos
mov
test
leave
mov
icebp
push
sub
mov
js
fwait
sub
gs
pop
popf
data16
or
repz
cmpsb
pushf
adc
cmc
scas
dec
jmp
mov
xchg
wrmsr
shll
rclb
jle
sbb
jns
jne
jmp
fcomp
vpand
or
push
mov
jl
sbb
dec
inc
mov
jecxz
out
add
and
dec
fs
jle
xor
clc
ss
pop
int3
jmp
inc
cmp
jecxz
dec
jl
mov
subl
pop
mov
xchg
stc
loopne
push
mov
sbb
sbb
push
jle
add
lock
jbe
xchg
lea
dec
push
push
lock
sbb
adc
aaa
sbb
js
inc
cmp
jl
adc
mov
pusha
add
aam
les
in
pusha
jbe
add
add
loopne
mov
ret
cli
sbb
dec
in
mov
dec
jg
adc
xor
jecxz
mov
call
lret
pop
hlt
jno
mov
in
mov
cmp
or
fadds
ljmp
pop
or
mov
xor
and
sbbb
loop
mov
test
or
cmp
notl
bnd
pop
jp
and
push
push
aaa
fadds
mov
adc
es
sbb
adc
stos
push
mov
ljmp
add
test
pop
inc
mov
mov
mov
addr16
xlat
je
cmp
icebp
call
mov
and
cmp
jb
testb
or
inc
add
inc
dec
xor
add
add
das
cmp
add
inc
xabort
inc
jnp
cwtl
and
clc
out
mov
jns
jb
cmp
jbe
mov
inc
add
add
pop
push
in
rcll
shr
jmp
das
sti
xchg
mov
and
jmp
adc
cwtl
inc
jl
push
push
inc
mov
push
push
insl
cld
mov
je
fisttpll
and
es
jmp
inc
pop
adc
js
cli
jne
push
inc
pop
pop
scas
or
cmp
fs
sub
push
movsl
adc
push
push
adc
es
sub
sub
rolb
enter
into
je
xchg
cli
adc
lea
lea
or
clc
add
ret
ret
outsb
cmpsl
es
repz
push
sbb
mov
popl
adc
in
or
lcall
adc
adc
or
ss
pop
rcrl
dec
cmp
test
jecxz
cmp
mov
xor
lods
fisttps
and
sbb
sbb
push
js
pop
jo
loop
mov
xor
aam
pop
or
ja
ljmp
push
and
repz
xor
out
int3
push
sbb
jnp
fisubl
js
inc
daa
lea
inc
adc
sub
nop
xor
cmpsb
push
iret
or
cmp
imul
in
sbb
sbb
sbb
in
in
sub
xor
loope
in
cmp
in
movsb
dec
addl
ror
leave
dec
push
push
pop
add
pop
pusha
fs
insb
jo
js
add
jb
mov
xchg
dec
imul
cltd
fs
xchg
cwtl
es
fs
pushf
mov
call
sub
add
je
inc
add
push
imul
filds
add
fcmovb
and
call
adc
in
adc
cwtl
nop
inc
sbb
sbb
lcall
dec
dec
enter
sbb
test
inc
insb
pop
inc
adc
mov
data16
xchg
xchg
cmp
add
sbb
enter
dec
and
test
out
rorb
nop
push
adc
pop
push
mov
inc
shrb
or
pop
sarl
xchg
cli
jnp
cs
xchg
loopne
orb
test
mov
xor
jb
sbb
sbb
es
push
push
cmp
arpl
dec
mov
in
lcall
adc
push
gs
rcpps
or
mov
outsb
ret
add
cmpsl
lret
lods
lret
mov
xor
inc
mov
or
fsubrs
cmp
sbb
loop
cmp
ss
loop
inc
ds
je
sub
imul
sbb
popf
test
aad
lock
hlt
inc
xchg
nop
xor
cmp
add
fmuls
in
or
popf
in
lcall
or
or
ret
inc
jp
add
add
cmp
outsb
jbe
xor
cmpsb
aam
add
sarl
je
push
pushf
dec
mov
rcl
and
jb
adc
or
jge
subb
dec
sub
addb
mov
stos
in
add
adc
cltd
sbb
add
jns
in
int3
cmc
push
mov
add
cmc
adc
mov
pop
enter
in
and
adc
jp
add
sbb
adc
adc
pop
ds
xorb
add
or
dec
arpl
rolb
sub
mov
and
loopne
add
popa
sub
pop
movsb
scas
mov
lcall
pop
and
call
pop
sbbb
loop
insb
add
mov
mov
adc
rcrl
or
insb
jl
cmp
and
adc
push
mov
push
pop
fsubrs
adc
lods
lea
or
push
cmc
cmp
push
mov
loope
sbbl
dec
mov
push
xor
in
mov
mov
mov
cmc
inc
insl
lods
test
out
mov
sbb
adcl
lret
xlat
mov
rclb
xchg
jnp
xor
loop
cmc
dec
cmp
add
loop
pop
and
xchg
or
cmp
xor
es
pop
into
daa
jecxz
adc
mov
sub
mov
push
lea
add
out
out
jle
pop
fmull
sar
mov
or
popa
inc
cli
pusha
xchg
sub
jne
sbb
std
hlt
or
push
mov
and
dec
or
add
popf
add
mov
inc
sbb
mov
les
dec
ljmp
adc
outsl
inc
pushl
mov
jns
mov
sub
xchg
dec
rclb
push
sahf
pop
popf
pop
addl
pop
mov
orb
inc
mov
loop
push
addr16
mov
jbe
jmp
cmp
in
lods
mov
mov
movsb
mov
mov
mov
jle
jo
sbb
mov
leave
ljmp
loope
cmp
add
cmp
cmp
movsl
mov
lret
xchg
add
aaa
cmc
test
inc
inc
mov
ds
sbb
inc
dec
call
jno
add
or
lea
mov
cs
lods
jnp
test
ret
mov
xchg
cmp
push
xchg
test
jnp
bound
dec
sub
icebp
dec
xor
sarl
cmp
test
repz
and
cmpsb
int
mov
andl
pop
jmp
xorl
mov
sbb
pop
scas
adc
scas
sub
dec
cmp
and
sub
adc
push
sbb
aam
cmp
add
inc
shr
mov
jmp
inc
push
sub
les
pop
dec
pusha
push
iret
test
push
adc
adc
sub
mov
cmp
sbb
dec
jg
pushf
fisttps
cmp
std
test
insb
or
adc
push
sysenter
xchg
xchg
mov
cmp
dec
add
roll
xchg
mov
pop
fbstp
and
jmp
xchg
mov
cli
fsubr
sub
sub
mov
push
cmp
mov
adc
loopne
inc
cmp
cmpsb
aas
movb
inc
mov
in
adc
cmpl
fmuls
push
rcll
and
inc
pop
pop
pop
pop
fldl
mov
test
mov
xchg
lret
loopne
or
pushl
pop
fbld
mov
sbb
enter
cmp
movsb
js
inc
cmp
fbstp
orl
pop
mov
xor
fiaddl
sbb
or
in
mov
sub
add
adc
jl
xchg
sbb
lods
dec
dec
stc
pop
xchg
cmp
in
push
inc
mov
mov
add
xchg
push
or
or
or
add
test
mov
jecxz
push
xchg
jmp
ret
cmpsb
pushf
or
or
cmp
std
jno
or
or
pop
pop
sbb
testl
xor
add
aaa
jo
lret
jmp
or
and
lods
pop
rcrl
or
iret
rcll
ret
mov
adc
lods
adc
ret
sub
mov
fdivrs
jne
ljmp
lock
adc
xchg
or
jnp
add
jle
xor
pop
sbb
inc
cmpb
xchg
and
das
dec
outsb
jg
or
iret
movsl
loopne
or
cmp
pop
cmp
ds
and
add
js
leave
pop
mov
inc
repz
leave
mov
cmp
je
aaa
push
or
mul
mov
mov
in
ljmp
sbb
incl
pop
mov
ret
mov
rcr
push
stos
sbb
jno
popf
out
and
adc
or
push
push
ret
xchg
arpl
or
sbb
mov
pusha
adc
sub
and
mov
adc
dec
xlat
inc
mov
add
jge
mov
popa
push
push
movsl
or
dec
dec
mov
mov
cltd
inc
jle
inc
scas
mov
sub
and
add
push
pop
inc
test
mov
out
pushf
cli
add
pop
push
mov
or
inc
js
sbb
into
insl
aam
xor
hlt
aaa
inc
cmpb
std
xor
cmp
xor
inc
dec
adc
ja
into
jo
sub
cmpl
cs
adc
add
pop
adc
jge
mov
pop
mov
push
shlb
gs
jne
lods
es
pop
cmp
lods
jg
jnp
js
rclb
hlt
jge
shlb
adc
and
addr16
pop
pop
mov
push
dec
or
add
push
adc
mov
adc
push
jle
push
jne
or
mov
nop
pop
sub
pop
adcb
push
movb
jecxz
lods
pop
cld
pop
pop
push
inc
lcall
mov
inc
and
jg
mov
add
pop
rol
fwait
xchg
add
clc
je
xor
add
fsubl
cltd
into
lcall
clc
adc
bnd
jl
test
mov
mov
je
push
cmp
mov
jmp
push
and
push
enter
jl
xchg
ret
stos
test
push
js
pop
sbb
outsb
dec
mov
or
dec
sub
aad
cld
dec
push
enter
inc
mov
and
xchg
adc
mov
cmp
pushl
leave
push
xchg
stos
sub
dec
outsb
or
sub
push
dec
and
xchg
inc
jmp
icebp
xor
adc
push
jecxz
push
mov
sbb
jle
mov
pop
jp
sahf
dec
xchg
ret
push
pavgb
pop
mov
jb
cmp
cli
sbbb
xor
sbb
xchg
lcall
sbb
sub
leave
cmp
rol
push
mov
or
fistpl
cmp
mov
sub
shlb
push
das
ret
push
test
insl
add
sti
das
adc
sub
enter
adc
push
andb
dec
es
cs
int3
jne
mov
dec
jge
gs
pusha
dec
pop
mov
les
das
fmull
inc
dec
cmp
xchg
movsb
mov
push
insl
sbb
jp
adc
pop
lea
pop
mov
sbb
pop
sbb
sub
outsb
cmpb
push
mov
dec
inc
jne
adcl
jmp
mov
and
subl
int3
cld
fwait
dec
xor
mov
jbe
jnp
aas
repnz
das
adc
dec
jp
leave
inc
arpl
xchg
mov
push
out
jle
cmp
adc
add
jle
mov
sub
or
pop
icebp
push
xor
in
inc
je
popf
adc
gs
and
jne
or
jo
or
adc
inc
data16
es
inc
jno
add
jecxz
inc
lock
pop
jbe
push
jmp
test
test
jne
inc
mov
test
dec
or
ror
call
js
test
adc
jp
push
mov
xchg
or
xor
xlat
jne
sbb
mov
dec
push
mov
mov
sub
mov
xor
pop
sub
je
push
popf
ds
add
pop
call
rolb
push
data16
pop
div
popa
fcompl
outsl
add
push
mov
cmp
pop
in
mov
dec
lretw
and
push
or
addr16
cmp
loope
pop
add
into
out
and
push
mov
xchg
jbe
ret
lret
and
add
xor
in
or
and
nop
pushf
and
shll
dec
nop
fcmovne
outsb
xor
adc
or
outsb
jb
jmp
and
dec
add
js
lock
stos
test
pop
jns
test
adc
test
es
jp
test
xor
pusha
lds
lret
or
je
or
or
or
out
sub
fcmovnbe
cmp
jbe
jmp
cs
outsl
sbb
lock
and
mov
and
ja
jl
and
jecxz
jge
int
out
jmp
xchg
jmp
lahf
adc
ret
jnp
fimull
cld
shll
loope
or
or
or
je
sbb
loope
idiv
push
and
add
fstps
aas
pusha
mov
pusha
loope
pop
add
icebp
sub
dec
and
sub
xchg
jecxz
pop
fstp
shll
pusha
pusha
adc
call
push
addr16
or
adc
sub
adc
sti
add
pop
jns
testl
fisttps
inc
js
mov
test
je
add
dec
jne
orl
inc
jmp
push
mov
pop
movsl
stos
mov
adc
testl
mov
xorb
lods
imul
push
and
inc
add
mov
jnp
inc
fld
push
inc
jecxz
push
fldenv
ret
push
orb
push
mov
std
sbb
xor
sbb
rdtsc
rol
inc
movsb
cmp
ficompl
cmc
pop
sub
sub
arpl
fimuls
adcb
rolb
sbb
mov
or
mov
aam
xchg
push
aaa
lret
and
sbb
aam
adc
sbb
add
in
lods
sbb
add
sub
sub
jmp
sub
inc
dec
push
jp
push
or
psubusw
xchg
out
add
adc
div
add
pop
popa
and
mov
lcall
repnz
adc
lock
into
jbe
or
xadd
fmull
sbb
lods
mov
inc
jg
add
js
repnz
push
push
ret
xchg
repnz
hlt
insl
bound
test
lahf
sbb
into
ss
insl
in
sbb
inc
sbb
push
jp
dec
in
jo
lock
loopne
push
loopne
mov
push
or
pop
lds
sahf
jmp
pop
movsb
aam
xchg
push
inc
add
repnz
and
mov
decb
push
and
jbe
lods
or
sub
movl
push
push
add
mov
jg
mov
sbb
pop
test
sub
or
jmp
or
push
xchg
dec
out
pop
loopw
inc
push
mov
in
and
mov
add
popa
or
mov
je
loopne
loop
aam
jl
mov
sbb
mov
sbb
sbb
add
sub
hlt
adc
or
jl
sub
sub
add
pop
ja
pop
nop
out
mov
adc
xchg
xor
push
add
or
jno
fst
or
dec
inc
and
inc
loope
cmp
shlb
or
or
cltd
pop
xchg
or
rolb
dec
or
idivb
outsb
sbb
pop
inc
mov
fsubl
in
mov
pusha
data16
sti
pop
in
cmp
and
or
or
jbe
sub
or
pop
sbb
xchg
movsl
push
add
cmp
popa
or
mov
ficomps
adc
js
inc
adc
das
jmp
mov
fsubs
jo
sub
enter
inc
add
ror
pop
cld
inc
test
push
adc
lahf
enter
cs
scas
and
or
sahf
icebp
stos
inc
imul
jg
or
ret
in
mov
popf
mov
ljmp
xchg
mov
xchg
mov
mov
mov
jnp
adc
push
pop
sub
fadds
into
xchg
sub
fdivs
cwtl
mov
movsb
mov
test
stos
test
pop
or
mov
aad
icebp
sbb
inc
mov
mov
gs
or
fwait
cmpsb
lods
enter
push
or
push
out
and
sbb
mov
push
pop
push
in
fnstenv
call
xor
push
mov
loopne
add
fmul
fdivl
sub
shr
loop
pop
fwait
popa
in
sub
dec
aad
cmp
sub
push
fstp
mov
xor
cmp
dec
mov
int3
add
xchg
mov
jnp
fldcw
push
push
mov
add
hlt
or
sub
fldl
clc
sahf
adc
sbb
adc
inc
adc
and
pop
test
mov
icebp
jb
mov
dec
out
xchg
jo
push
adc
mov
je
sbb
and
ldmxcsr
mov
and
es
mov
je
mov
and
xchg
mov
jbe
in
out
add
pop
or
aam
add
pusha
mov
dec
jmp
or
jmp
add
call
cmp
xchg
movsb
shlb
shlb
or
pusha
dec
adc
lock
mov
push
mov
sub
data16
test
ja
mov
jae,pt
sbb
and
adc
out
or
adc
rolb
imul
das
adc
adc
test
and
mov
push
mov
ficomps
scas
psubq
xchg
dec
or
mov
push
lods
lock
cmpl
enter
loop
or
or
add
loope
sbb
dec
in
stos
stos
xor
mov
test
inc
inc
sub
jge
in
rorb
cmp
or
inc
inc
xor
sub
loop
lods
ret
lea
ds
pop
sub
scas
mov
dec
or
loopne
test
stos
aaa
add
and
or
aas
sub
push
push
cli
sti
add
push
inc
clc
and
mov
pop
test
jne
or
push
sbb
jl
mov
xchg
inc
outsl
shrl
xor
inc
add
push
cmp
dec
cmp
fdivs
popf
cmc
push
enter
and
add
adc
lret
or
dec
fimull
mov
pop
in
and
pop
pusha
sub
inc
shl
mov
mov
loop
rolb
push
inc
jmp
adcl
fsubr
push
hlt
repz
push
cltd
insb
pop
and
mov
out
xor
inc
fbld
inc
insb
sub
pushf
mov
add
nop
loop
enterw
and
cli
sbb
cmc
mov
cmp
mov
les
add
dec
push
push
mov
sarb
loopne
inc
cmp
sbb
add
lock
shlb
add
in
orl
ljmp
dec
rolb
jl
addr16
mov
mov
mov
dec
xor
cmp
nop
mov
rorb
popa
add
push
out
and
push
cld
not
dec
mov
popf
je
mov
and
pop
ds
js
adc
push
or
out
xchg
mov
jo
push
test
out
mov
pop
sub
sarb
je
mov
inc
xor
jmp
mov
push
popa
pop
in
iret
int3
mov
test
mov
push
and
inc
and
aam
push
lea
sub
cmp
invd
movsb
xchg
das
mov
inc
icebp
push
fs
push
pop
xor
pop
loop
push
sbb
add
mov
dec
jns
loopne
movsb
inc
lock
test
ret
jecxz
xchg
mov
shl
jae
cmp
mov
out
addl
mov
fs
sbb
jl
popa
addb
pop
andl
gs
mov
mov
lea
and
xor
or
jno
cld
sbb
jge
and
nop
add
pop
adc
jmp
loop
xor
and
call
lock
cmp
mov
or
push
outsl
add
stc
and
scas
mov
jg
sbb
xchg
and
mov
add
xchg
pop
add
and
sub
inc
subl
and
lret
and
nop
pop
add
and
pop
or
inc
pop
adc
inc
push
xchg
pop
loopne
mov
xor
push
adc
into
mov
jl
mov
xor
movsb
mov
in
dec
jne
ljmp
and
mov
mov
js
push
cmp
in
jne
inc
jmp
mov
sub
test
or
xchg
add
xor
ret
lods
mov
sub
cmp
ja
push
dec
jmp
mov
adc
fs
mov
push
cmp
rolb
push
add
call
or
mov
lods
scas
enter
incb
sbb
mov
jmp
cmpsl
sub
lods
jbe
mov
movsb
lods
pusha
sub
add
cmp
jle
jbe
inc
jle
cmp
push
xor
lock
es
push
jmp
dec
push
mov
and
push
jbe
inc
bound
pushf
cmp
cmp
fs
repz
jmp
cmp
inc
and
mov
or
mov
push
pop
jge
cmp
pop
cmp
test
mov
add
in
ds
dec
jae
imul
sbb
pop
push
cmp
jmp
and
popf
loopne
fisubrl
call
divl
mov
out
push
sub
mov
or
orl
dec
or
scas
mov
shl
stc
sub
cmp
mov
stos
mov
pop
mov
jmp
je,pn
scas
call
sti
je
mov
insb
mov
mov
incl
js
adc
add
inc
testl
mov
jmp
ficoms
stos
and
xorl
push
sbbb
inc
xchg
sbb
and
sub
fld
rolb
or
jecxz
add
pushf
jmp
push
cwtl
pop
push
mov
pop
mov
sub
into
dec
rcrb
dec
hlt
cmp
arpl
pushf
xor
xor
push
roll
push
cwtl
jge
neg
add
mov
push
inc
sbb
xlat
test
cmp
jnp
mov
sbb
push
ret
ret
ja
jnp
jge
jle
lock
xor
jne
push
adc
inc
xadd
or
dec
test
loop
jge
pop
push
inc
add
sbbl
test
or
mov
dec
mov
add
pop
scas
dec
or
les
fs
jmp
jle
mov
push
xor
and
and
xorl
into
nop
fs
out
adc
mov
fisttpll
mov
ja
xlat
xchg
ja
mov
pop
push
mov
movb
testl
dec
xor
adc
les
test
into
dec
mov
inc
or
cmp
in
aad
and
xor
hlt
int3
add
and
pop
xchg
jne
mov
rolb
xor
test
rcrb
mov
clc
je
fisubrl
lea
dec
cltd
mulb
insb
clc
adc
add
sub
shlb
lock
ja
mov
test
cld
js
subl
lcall
inc
pushf
sub
xchg
lods
shr
jg
add
ja
stos
es
dec
test
js
mov
add
cs
aam
gs
mov
rcr
add
or
shr
loop
rcll
rcrl
mov
jg
nop
loop
jmp
dec
sub
stos
lret
mov
notb
pusha
inc
outsl
ret
mov
std
jg
fcom
insl
fadd
loopne
shr
or
mov
sahf
dec
push
ret
or
shrl
xor
mov
enter
sub
and
dec
mov
mov
cmp
add
mov
push
sar
pop
loopne
inc
subb
imulb
lcall
mov
fidivrl
jb
dec
push
pushf
in
xchg
push
fmull
mov
insl
xor
lock
cmp
or
sub
outsl
popf
inc
lret
into
jmp
scas
jnp
ret
or
movsb
dec
and
scas
add
int3
call
test
int3
add
lcall
lret
sub
jmp
sub
add
negb
mov
movups
int3
sub
and
ret
fisubs
or
call
xchg
mov
shrb
add
ds
sti
push
cs
add
mov
sub
pusha
sarl
je
mov
dec
fstp
push
lods
mov
add
push
cmc
pop
sbb
or
add
pop
sbb
icebp
cmp
add
shrb
mov
mov
fld
xchg
mov
rorl
sahf
pop
cmp
push
pop
in
inc
cwtl
dec
adc
imulb
adc
inc
cs
or
or
stc
gs
or
clc
jg
inc
xor
mov
dec
cmpb
je
mov
push
idiv
sbb
sbb
add
or
mov
out
push
shlb
fldz
call
sbb
arpl
je
sbb
adc
clc
cmp
les
xchg
or
mov
adc
or
je
xor
sub
cmc
xchg
rolb
and
aam
push
xchg
imull
adc
gs
jb
inc
mov
and
add
cmp
test
xor
mov
add
jnp
mov
jge
jbe
xlat
mov
shlb
fdivs
or
add
jl
dec
xchg
and
mov
xchg
mov
sub
hlt
dec
setg
sub
mov
aas
adc
aas
sub
mov
jne
movb
mov
mov
test
cmp
mov
jo
ficoml
xor
mov
clc
add
pop
pop
inc
pand
loop
lock
lcall
jmp
push
ret
clc
add
les
aam
test
fistpl
minps
lea
mov
fiadds
inc
pop
pop
dec
sub
jns
les
sub
jns
stos
lea
pop
idiv
xor
push
or
jo
or
sub
add
mov
add
subb
pop
sub
dec
stc
mov
pusha
push
adc
xor
sub
push
clc
pusha
or
sub
cmp
and
rclb
jmp
cli
mov
ret
jbe
enter
push
mov
aam
sub
rcrb
adc
lahf
adc
inc
xor
shlb
enter
sbb
cmp
sbb
dec
loopne
add
inc
test
mov
in
mov
adc
out
push
adc
mov
mov
cli
insb
xorb
sbb
inc
push
sbb
pop
call
add
pop
cld
pop
loopne
xchg
fldl2t
call
in
sub
cmp
bound
sub
lods
and
fcoml
adc
addl
leave
lock
test
lret
lret
sbb
data16
nop
pop
add
outsb
rorb
sbb
pop
fcmovnb
inc
jmp
sub
fcompl
push
testb
bound
inc
cmp
popa
loopne
test
sub
inc
mov
jno
add
push
xor
push
sub
xchg
jbe
add
xchg
mov
or
sbb
inc
xor
xchg
dec
and
add
cmpsb
movb
shlb
gs
je
dec
or
dec
fwait
icebp
add
pop
sbb
neg
sbb
jecxz
mov
jg
loopne
jg
ret
daa
xor
or
jne
pop
cmp
mov
cmp
ficoms
scas
test
movb
ret
xor
push
sub
push
mov
xlat
adc
jg
and
bound
sub
xchg
fstps
dec
push
sub
adc
mov
or
mov
test
movswl
les
or
xchg
and
bound
clc
cmp
add
mov
add
dec
pop
addb
lods
enter
fbstp
ss
jl
jne
mov
cmpsl
clc
mov
or
fisubrl
stc
xchg
stc
inc
add
dec
jmp
xor
sub
or
cmp
or
js
sub
loopne
inc
call
push
rolb
mov
movups
lock
ret
push
adc
mov
and
out
and
je
shrl
add
sbb
js
jg
icebp
lods
or
in
push
sub
or
inc
adc
neg
cmp
mov
lock
push
push
jle
cmp
sbb
mov
sub
xor
jbe
adc
add
shll
or
push
jg
lods
jb
xchg
mov
dec
pop
rorb
or
or
loope
lcall
lods
ret
mov
adc
jae
stc
push
mov
push
es
mov
add
je
lods
add
sbb
mov
adc
loopne
test
or
and
and
sub
repnz
inc
push
mov
add
or
mov
jmp
lock
inc
sub
orl
es
jne
or
adc
mov
fwait
popaw
push
mov
pop
xor
push
stos
ficompl
out
into
mov
dec
or
adc
rclb
in
nop
adc
je
sbb
and
je
push
rorb
in
repz
cmp
lahf
les
push
addl
adc
dec
xchg
rolb
lea
mov
mov
enter
pusha
mov
push
jmp
insl
cmp
cld
jl
loopne
shlb
fisubrs
mov
mov
inc
ljmp
incb
adc
sbb
loop
mov
in
jmp
xor
ds
pop
dec
je
jle
gs
or
pop
aam
je
data16
fwait
ss
in
out
sub
inc
popa
je
inc
je
sti
lds
dec
sub
xchg
or
stc
sub
pop
dec
push
in
add
cs
and
aad
push
or
sbb
cmp
mov
repz
loop
xor
adc
call
jne
fmull
insl
push
pop
clc
fstps
add
pop
xor
out
dec
imulb
ljmp
cmp
inc
dec
rol
add
push
pop
ret
xor
dec
pushf
add
push
or
clc
inc
mov
or
je
inc
lahf
mov
dec
inc
push
inc
add
mov
ja
popa
sbb
or
test
mov
cmpb
jne
dec
rol
jp
inc
test
xor
xchg
sarl
xchg
shrb
hlt
xchg
hlt
xor
xchg
cmp
push
addb
cmp
add
lret
orb
cmpsl
hlt
ja
lahf
dec
push
sub
cvtps2pi
push
push
add
shrb
popf
ret
inc
push
sub
aaa
je
xchg
jle
add
mov
shll
out
loopne
push
cmp
sub
or
sub
dec
mov
sub
mov
pop
inc
mov
loopne
iret
xor
pushf
jmp
insl
loop
dec
inc
mov
bound
mull
mov
cmpl
sub
or
push
dec
test
push
mov
push
mov
or
inc
or
bound
sub
call
shrb
xor
imul
test
and
jmp
dec
cli
add
lret
mov
fdivs
jge
imul
sbb
out
adc
push
add
mov
pop
fs
je
and
ficoms
lahf
int
lock
rclb
out
pop
cmp
mov
mov
icebp
or
lret
mov
mov
je
sbb
mov
sbb
std
fistl
dec
rorb
push
push
jmp
or
jmp
divb
sahf
jle
xchg
push
ljmp
xorl
negl
cs
sbb
int
jae
shrl
dec
fst
jne
test
sbb
les
sbb
mov
adcl
add
adc
sbb
xor
int
dec
cmp
in
inc
subl
jecxz
adc
cmpsl
mov
fs
jp
arpl
rol
into
push
dec
dec
add
add
mov
pop
cld
mov
dec
dec
and
shr
lods
add
mov
jecxz
push
push
sub
mov
add
sub
into
push
arpl
jo
ss
add
mov
xchg
xorb
or
dec
bound
add
mov
cmp
inc
dec
dec
xrelease
mov
sbb
dec
and
and
mov
enter
jge
mull
pop
dec
and
cltd
sbb
aaa
mov
cmp
push
cli
jb
insb
jl
je
push
inc
pusha
das
add
pop
adc
sub
push
rcrb
and
xor
loop
inc
daa
sbb
inc
jmp
jb
inc
fs
xor
sbb
push
popa
ret
outsb
bound
inc
inc
test
data16
sub
push
inc
dec
adc
push
cmp
and
iret
and
scas
rorb
outsb
test
jns
mov
inc
jmp
in
cld
jo
adc
mov
je
xorl
lea
push
das
adc
push
addb
in
adc
fs
ljmp
rcrb
repnz
push
xchg
cld
dec
lods
xor
xchg
mov
and
popa
mov
sbb
enter
lea
mov
cld
leave
push
cmp
clc
and
adc
and
repnz
adc
sysexit
ret
int3
jp
arpl
ljmp
inc
jmp
cwtl
loopne
pop
ldmxcsr
mov
and
mov
add
cmp
or
test
adc
add
or
sbb
mov
or
push
leave
xchg
or
pop
incl
xor
scas
xchg
sbb
ret
xchg
inc
push
stos
jae
les
lret
adc
inc
xchg
adc
aaa
jbe
inc
push
xor
adc
pop
lock
push
pop
xor
jmp
pushf
or
cmp
les
adc
mov
xchg
push
cs
and
loop
sbb
adc
nop
cmp
imul
loope
loop
testb
movsl
cmp
pop
inc
or
adc
lret
aas
add
adc
xor
push
shr
add
or
add
fstl
inc
fcmovb
jmp
shr
or
pop
sti
or
rorb
xlat
bound
scas
push
bound
js
or
sti
in
stos
test
or
mov
cmp
inc
sub
es
int3
cld
push
jne
add
js
inc
xchg
dec
and
sub
lret
pop
les
add
lea
mov
shr
xchg
or
inc
cmp
mov
adc
subb
push
pop
mov
adc
repnz
orb
movsb
sbb
xor
jo
add
out
inc
jbe
mov
mov
lods
push
ss
fldpi
sbbb
imul
push
cli
push
notb
or
shl
andl
adc
mov
sbb
push
add
sbb
decl
pop
fsubs
stos
imulb
or
test
sub
push
xchg
lret
je
test
add
push
or
rorl
sub
addl
fdivl
ret
inc
call
sbb
mov
push
call
and
inc
pop
mov
push
add
pop
cmp
add
cmpsl
push
cld
fidivrl
aaa
sub
jne
add
call
sub
in
or
into
adc
inc
push
adc
and
inc
xor
cli
out
mov
aam
test
sub
inc
cs
rclb
movsb
fnstsw
adc
mov
pop
add
push
add
mov
lret
mov
leave
inc
xor
mov
or
cmp
lock
aaa
pop
lret
adc
xor
cmpb
idiv
or
mov
add
or
adc
adc
push
roll
loopne
stos
push
adc
inc
scas
orl
push
push
and
movsl
nop
iret
ds
inc
adc
aad
inc
fsts
lret
jne
sub
pop
or
sbb
stos
inc
cmp
sub
and
add
adc
pushf
push
lock
mov
jbe
dec
add
xchg
shl
or
or
push
out
or
test
jne
sub
flds
and
shll
jns
fisttps
test
je
mov
dec
jo
or
test
add
or
addr16
add
push
jne
loop
xchg
xor
xor
mov
sbb
mov
xchg
add
aam
xchg
or
cltd
rol
and
outsb
inc
push
or
xchg
pop
mov
push
push
dec
sarl
or
inc
inc
div
fdiv
fiaddl
fidivrs
sbb
inc
ss
or
cltd
sbb
jne
and
or
xorl
sbb
fcoms
inc
lcall
jne
icebp
inc
push
test
adc
gs
and
data16
or
dec
jns
jnp
call
daa
pop
pop
pop
icebp
mov
stc
inc
jae
or
jae
lods
rcl
ljmp
dec
and
shr
test
mov
stc
test
pop
shl
idiv
and
cld
je
xchg
pop
xchg
pop
not
je
ljmp
sets
xor
push
and
ret
and
pop
add
jno
scas
nop
pop
inc
adc
hlt
inc
dec
jle
jne
xchg
inc
orb
or
int
or
into
jbe
jns
pop
les
jmp
lcall
sub
out
mov
add
push
pop
in
hlt
or
adc
das
push
lods
sbb
xor
pusha
adc
setle
cmp
les
test
adc
and
les
ds
fidivl
mov
mov
mov
cltd
in
or
fldt
cmp
pop
and
xor
cld
inc
ss
dec
pushl
pop
mov
ss
jg
push
ds
adc
add
dec
movsb
popf
lret
lret
mov
mov
rol
das
cmpsb
call
or
je
call
inc
mov
mov
into
es
mov
shll
loope
je
movsb
and
jg
pushl
cmp
ja
add
cmp
adc
cmp
jne
sbb
xor
adc
mov
xor
idivl
pop
xchg
and
test
cmc
aam
subl
mov
mov
ret
ja
jmp
mov
pop
jmp
dec
aaa
push
pop
pop
push
pop
mov
sbb
incb
jmp
neg
pop
stos
pop
arpl
push
pop
dec
mov
pop
jnp
cmp
jne
mov
aad
pop
xchg
cmp
pop
not
mov
sarb
xchg
cmp
xor
add
xor
lea
je
adc
out
cmp
aad
pop
aam
mov
lock
xor
lods
fwait
or
test
lods
xlat
mov
xchg
sarb
push
outsb
pop
mov
inc
xchg
sahf
test
sub
xchg
xor
pop
xchg
add
dec
inc
or
movsl
xor
add
sub
mov
sti
cltd
dec
sub
pop
add
add
sbb
scas
xchg
inc
and
add
mov
lea
jle
iret
sar
or
movb
push
rcl
sarl
repz
aad
xlat
fcoms
out
sti
fstpt
mov
sbb
aas
fcmovb
inc
add
outsb
inc
outsl
shrb
lock
push
mov
or
pushf
enter
add
mov
add
push
add
push
inc
push
add
fisttpl
faddl
push
bound
call
test
aam
sub
push
icebp
adc
fucomip
jle
cmp
das
or
push
sbb
push
jns
and
adc
addl
sbb
fldcw
adc
xchg
mov
scas
jmp
ficomps
lea
add
ljmp
dec
lea
sar
inc
js
mov
fdivr
or
test
lfs
test
sub
out
loop
outsb
inc
xor
cwtl
pushf
sub
inc
call
or
xchg
jo
mov
lock
ficoms
or
push
sbb
and
jp
mov
mov
les
and
stos
push
or
xchg
adc
hlt
mov
ljmp
add
and
and
lea
pop
sbb
les
sarb
decb
xchg
mov
add
or
or
bound
data16
jnp
iret
in
ljmp
insb
inc
inc
or
movsb
call
cmp
and
jnp
fldl
dec
test
ret
dec
rolb
push
mov
mov
dec
xchg
or
or
dec
xchg
mov
outsl
and
dec
cwtl
dec
push
dec
enter
cmp
mov
ret
movsb
repz
mov
mov
push
addl
push
cmpl
mov
and
and
rorb
jle
jle
adc
fmul
jne
enter
and
xchg
rolb
sar
fbstp
hlt
rorb
add
movsl
push
push
push
lret
push
jo
dec
inc
xchg
test
adc
or
mov
test
dec
shrl
in
shr
xchg
mov
or
dec
pop
inc
sub
inc
dec
add
pop
repnz
push
lock
imul
xchg
out
lods
cli
inc
cli
div
das
or
inc
mov
and
adc
mov
xor
loopne
mov
push
jnp
sbb
adc
mov
test
adc
clc
xlat
aaa
push
xor
xor
mov
js
js
rolb
jae
cmp
iret
dec
rol
xor
lock
nop
mov
pop
and
jp
dec
mov
mov
sub
loop
out
int3
shll
mov
jb
in
pop
add
movsl
mov
or
inc
xor
call
xor
lods
or
dec
int
shlb
fdivrs
aam
movsb
enter
inc
test
dec
ss
or
xor
sub
jl
mov
xor
call
or
push
cmp
cld
lea
fcmovu
mov
rcrl
insl
fnsave
lods
lods
rolb
adc
adc
sbb
push
sbb
popf
clc
sbb
nop
mov
sbb
xchg
mov
lock
out
or
add
and
jge
dec
les
js
xor
adc
cmp
jne
in
jno
jne
sbb
or
loopne
mov
into
mov
adc
sub
or
sub
fcomps
sub
insl
movups
movb
inc
mov
push
add
sbb
jg
push
nop
cmp
call
jb
pop
jle
out
adc
gs
add
stos
xor
jl
shr
adc
mov
jb
test
jne
push
shll
unpcklps
sbb
neg
and
out
jae
data16
inc
imul
inc
mov
loopne
loopnew
or
xchg
fsubrs
add
cmp
daa
and
shlb
mov
les
into
pusha
loopne
pop
sti
and
test
ds
repnz
mov
push
lret
add
sub
into
les
mov
or
and
xchg
and
stos
insb
imul
clc
js
adc
mov
aam
mov
cmp
push
shlb
add
str
negl
sahf
add
pop
xorb
sbb
testb
cmpb
lock
inc
ljmp
jmp
movsb
dec
jmp
add
xor
mov
bound
movb
dec
cmp
mov
mov
add
add
jp
sub
fadds
add
and
add
mov
rcrl
xor
dec
mov
jb
int
test
adc
push
and
add
push
add
xor
add
in
mov
or
or
adc
and
dec
xor
lret
mov
vorps
mov
push
or
shlb
add
adc
movsl
or
jmp
mov
xchg
push
or
add
or
push
xor
pop
pop
scas
add
ret
mov
sbb
cmp
sub
imul
sub
pop
mov
imul
xchg
adc
xchg
mov
jae
jo
jbe
test
lret
movsb
repnz
and
cmp
xor
into
pusha
jg
push
fs
mov
and
sahf
mov
and
shll
or
pop
mov
adc
pop
or
movsl
popf
loope
inc
push
pop
jae
or
or
sub
adc
and
or
or
mov
add
clc
adc
jl
or
mov
mov
xchg
dec
pop
enter
mov
pop
fwait
rclb
push
add
mov
jne
and
and
or
dec
lea
mov
ret
or
aas
movsb
push
enter
loope
fldcw
dec
xchg
xor
mov
cld
cmp
je
ja
or
jnp
add
stos
jg
sub
push
add
and
add
jne
aam
out
dec
pusha
dec
cld
mov
mov
rcrb
mov
cltd
ss
or
add
int
xor
add
add
pushf
xorl
jbe
jle
iret
nopl
sub
xor
xchg
xchg
out
inc
jg
into
into
adc
pop
and
pop
sub
push
pop
nop
and
cwtl
pop
mov
cmpb
rcl
js
cmc
push
pop
add
jle
add
push
mov
or
lcall
adc
test
inc
ficoms
add
add
in
add
test
xchg
out
push
and
je
and
or
or
sub
jmp
pushf
pushf
push
cs
jmp
int3
push
ret
testb
push
scas
test
and
push
dec
xchg
dec
add
loop
shll
add
shrb
add
cmp
rclb
mov
adc
push
xchg
jno
sbb
dec
pushf
outsb
sub
pop
and
adcb
push
push
icebp
cmp
fwait
adc
sbb
xlat
jle
and
daa
scas
popa
rorb
cmp
lcall
loop
push
lcall
ljmp
xor
inc
icebp
inc
and
icebp
dec
rorl
push
ret
movsb
clc
dec
sbb
xor
mov
pop
mov
cmp
xchg
jae
and
insl
add
inc
push
add
inc
adcl
dec
sub
mov
loopne
ds
add
jo
je
push
fisttps
enter
cmp
lret
inc
sub
call
jle
sbb
sahf
or
inc
lds
mov
mov
jo
add
jbe
pusha
loop
test
jmp
pop
inc
cmpl
dec
ret
clc
push
aam
mov
sbb
mov
repz
xchg
ret
dec
mov
sarb
loopne
sub
pop
sub
lods
test
and
add
inc
push
pusha
xchg
mov
iret
mov
pusha
add
jns
andb
jb
jnp
inc
pushl
nop
cmp
pop
cmpsl
test
je
test
je
insl
mov
mov
aam
pop
addr16
lret
mov
push
loopne
fs
cwtl
pop
mov
xchg
scas
jge
mov
sbbl
push
pusha
push
sbb
ss
shlb
rclb
fcoml
add
sahf
fldcw
stos
fisttpl
inc
sbb
dec
pop
xchg
dec
clc
call
inc
rcll
jge
lea
xor
mov
push
imul
push
pop
push
imul
rolb
enter
popa
add
and
or
lods
adcb
push
or
in
push
rcll
sub
xchg
inc
push
in
push
mov
adc
adc
bound
xor
aas
repnz
push
mov
lcall
mov
inc
sbb
cmp
test
pop
adc
fnsave
mov
lods
fsts
insl
add
mov
add
sbb
dec
js
repnz
dec
inc
aad
cmp
or
push
jne
push
inc
das
adc
shlb
add
cmpsb
push
outsb
mov
in
xchg
pop
jns
and
push
rorb
or
and
inc
ss
mov
push
sub
sahf
add
das
or
push
adc
xchg
xor
add
rolb
orl
repz
mov
jno
add
cmp
mov
jns
cmp
dec
sbb
dec
rorl
inc
pusha
mov
out
test
adc
addb
sahf
xor
or
call
add
jl
loope
movsb
push
push
cmpsb
mov
insl
pushf
dec
lea
or
push
pop
enter
mov
cmp
js
pop
pop
in
mov
sbb
inc
dec
mov
in
addr16
jae
fsubs
loope
out
adc
mov
dec
loop
adc
sub
inc
add
xlat
pop
push
dec
ss
cwtl
mov
ja
call
add
mov
sbb
sbb
cld
sbb
or
cmpsb
cmp
push
sbb
mov
push
pop
lea
pop
dec
adc
roll
sub
movb
sbb
sbb
push
dec
aam
or
xor
dec
hlt
lcall
push
and
pop
adc
inc
hlt
mov
les
xor
sub
add
push
pop
shlb
adc
push
mov
xchg
pop
testb
fisttpl
inc
ds
push
or
mov
add
cld
sbb
xchg
movsb
sbb
xchg
or
xor
dec
orb
or
adc
les
add
push
enter
cmp
shlb
daa
pop
fildll
and
daa
and
test
aam
es
jg
data16
sub
in
inc
ret
push
inc
loope
cmc
and
test
pop
inc
or
adc
gs
and
push
xchg
mov
or
and
jo
lret
add
and
mov
mov
loopne
clc
out
cvttps2pi
adc
push
mov
sub
inc
pop
aas
push
pop
inc
je
pop
cs
fnstcw
inc
adc
mov
jbe
insl
fstl
ret
in
aas
adc
test
jns
fstps
push
jno
icebp
lahf
pop
rorb
and
lcall
cmp
fcomp
adc
jbe
in
adc
ret
fstps
sub
xchg
and
xlat
pop
je
pop
push
fucom
mov
or
adc
movsb
xor
pop
jno
adc
xor
out
mov
jmp
mov
adc
outsb
push
movb
stc
dec
or
sbb
add
fdivl
inc
es
mov
imul
in
mov
ds
loopne
mov
cmpb
insl
leave
and
aad
popl
and
mov
imul
push
ret
mov
dec
and
shlb
mov
subl
dec
sub
mov
shlb
sub
xchg
xchg
ss
cmpsb
mov
insb
jne
es
jge
or
adc
inc
cmp
adc
lock
and
and
xor
push
cmp
inc
popa
add
repz
push
jb
add
or
fsubs
sbb
xchg
pop
xor
mov
rolb
mov
cld
add
or
cld
in
push
nop
fsubs
int3
add
inc
jle
aas
pushf
js
or
in
hlt
dec
jg
mov
adc
mov
sub
cmp
add
inc
stc
pop
outsb
xchg
inc
adc
push
aad
pop
xchg
or
jb
adcl
ds
push
cmp
or
rclb
sbb
jo
dec
sbb
add
movsb
xchg
mov
dec
ds
mov
fsubs
jecxz
shrl
adc
rclb
test
cmp
or
and
stos
sub
push
inc
daa
pop
or
call
dec
xchg
daa
int
mov
stos
ret
aam
mov
in
jg
sub
or
xor
movups
fisttpl
pop
fwait
ss
movsl
fadds
aad
imul
cmp
push
mov
faddl
xor
sub
push
xlat
mov
ftst
push
and
cmpsb
xchg
cld
pop
hlt
add
add
cmpl
push
dec
leave
lock
adcl
fildll
andb
add
adc
addr16
mov
inc
or
fwait
pop
imul
mov
jmp
sbb
mov
dec
or
aaa
push
xor
in
test
shll
mov
insb
test
rcrb
sub
loopne
test
inc
mov
leave
aam
mov
adc
sub
stc
insb
xchg
push
xchg
inc
shrb
jae
test
sub
mov
dec
add
pop
adc
xor
adc
xchg
dec
xor
and
xor
and
cmp
leave
and
inc
inc
dec
and
insb
pop
xchg
imul
inc
add
mov
push
pusha
add
pop
cmc
sbb
int3
repnz
push
in
aam
add
movsb
cltd
popa
ret
clc
hlt
xchg
dec
or
cld
sub
add
inc
push
lods
xchg
or
xchg
lock
sub
hlt
sti
add
dec
xor
adc
fs
call
lret
mov
fwait
aam
in
test
leave
in
xchg
fcoms
mov
add
aam
sbb
nop
and
sub
xor
mov
pop
daa
mov
inc
inc
out
add
dec
insl
push
in
addl
jnp
add
call
test
dec
or
in
inc
std
clc
jg
in
imul
add
fidivs
loopne
lods
sbb
jg
in
sbb
pop
or
ds
ret
jnp
add
pusha
enter
pushl
pop
movsb
addl
in
mov
shl
jg
sub
xor
adc
mov
mov
xchg
mov
push
inc
fcom
or
call
in
or
add
call
inc
mov
lods
xchg
jbe
adc
fsub
push
add
sub
mov
and
or
dec
sub
jmp
or
aam
mov
lea
cmp
or
mov
shrb
repz
cltd
nop
outsl
leave
dec
mov
fcoml
cs
sbb
add
adc
or
loopne
mov
icebp
or
fcom
xchg
pop
push
sbb
xchg
or
pushf
inc
dec
fwait
insb
int3
out
sub
popf
xor
lcall
xchg
loopne
xchg
push
xchg
mov
add
popl
sbbl
inc
cmp
scas
rorb
fcomp
aam
lds
dec
sub
icebp
mov
or
mov
call
daa
mov
pop
fcoml
test
lods
mov
daa
daa
daa
mov
mov
daa
enter
sbb
or
inc
pop
dec
inc
jae
movsb
adc
pop
xchg
sbb
mov
clc
adc
sbb
xchg
lock
dec
add
rcll
stos
movsb
xchg
popa
in
push
mov
xor
xchg
add
push
call
cmp
push
icebp
insb
xchg
imul
mov
xchg
pop
aas
inc
mov
mov
or
cmpsl
or
jbe
pop
adc
and
and
xchg
sbb
pop
push
add
stos
push
enter
loopne
xor
jne
shlb
sbb
fcom
fmulp
xor
adc
inc
adc
fcoms
addb
sbb
clc
xchg
loopne
faddl
inc
mov
scas
sbb
adc
mov
push
cmp
ffree
test
dec
or
sti
outsl
enter
daa
jo
fsts
call
roll
jg
in
and
add
sbb
push
imul
xchg
decl
call
aad
and
dec
bound
add
movsb
and
xchg
pusha
call
ret
mov
mov
mov
adc
mov
mov
adc
fwait
in
pop
cltd
pusha
inc
add
jb
je
js
and
jl
adcb
cwtl
sub
sub
lahf
push
dec
adc
jbe
add
sbb
xchg
dec
dec
mov
lea
setg
shll
leave
and
and
dec
add
pop
lahf
lock
jo
and
dec
and
mov
mov
lahf
insl
shrb
and
movsl
in
lcall
push
rorb
or
lea
push
adc
or
sarl
movsl
xchg
xor
out
fadd
ficoml
rcrb
pushf
in
jne
add
dec
push
mov
sti
aam
cmp
add
push
fstpl
js
test
imul
mov
test
in
pushf
pop
push
xor
lock
in
je
mov
popf
push
mov
mov
dec
sarb
mov
fdivr
push
inc
orb
pop
inc
pop
adc
inc
lods
lea
pop
adc
in
inc
es
sub
and
and
or
xor
cmpl
in
popa
push
or
or
or
inc
push
cmp
or
or
xchg
in
or
fisttpl
sti
or
add
inc
mov
rorl
aam
adc
iret
inc
mov
or
jnp
outsb
and
mov
and
gs
and
dec
or
cmpsl
pop
fstl
movsl
sbb
add
inc
ret
fbld
push
inc
jp
in
mov
mov
scas
push
sub
mov
sub
mov
push
mov
aas
lods
jl
cmpsb
inc
push
push
mov
test
xchg
mov
or
aam
add
mov
cmpsb
jb
push
aas
cwtl
sub
xor
inc
sub
movsl
or
adc
mov
aam
je
dec
jns
mov
sbb
push
test
rcr
rorl
mov
adc
sub
in
cmpb
loope
or
movsb
push
les
lea
sbb
add
and
and
int3
jae
aaa
in
add
sti
movsl
or
lret
mov
or
movsb
leave
mov
test
sub
nop
inc
adc
imul
xchg
fildl
jno
bswap
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
cwtl
mov
pop
insb
nop
dec
outsl
movsb
mov
roll
addb
adcb
lret
inc
adcl
shrl
inc
mov
rcl
mov
in
sbb
cmpsl
and
jne
shrb
xchg
rcrl
test
movsb
xchg
nop
ficoml
fs
cmpsl
out
xor
fmull
mov
jmp
test
mov
nop
or
mov
xor
pop
jns
imul
xchg
add
lds
test
add
dec
aaa
pop
movsl
outsl
hlt
adc
push
dec
lock
jno
mov
rclb
imul
outsb
pusha
jo
fcompl
sbb
or
je
call
cmp
test
jg
xchg
sbb
stos
in
call
xor
jge
push
dec
sbb
xorl
jae
pushf
mov
jne
stc
mov
add
cld
aaa
test
or
jb
fsubrl
loopne
call
int
fstps
inc
enter
push
test
xor
and
pushf
and
add
sahf
mov
lcall
inc
test
pop
cmp
pop
movsl
insb
mov
sbb
in
call
lock
outsl
dec
and
call
in
mov
push
add
dec
je
push
xchg
test
rorl
adc
adc
jno
inc
fadds
aam
leave
loopne
test
outsb
loop
adc
add
les
mov
insl
loop
dec
out
outsb
aam
dec
cmovne
add
roll
pop
fcoml
dec
push
adc
xchg
mov
call
sbb
fsubrs
movsb
mov
push
xchg
mov
dec
mov
adcb
mov
mov
push
pop
xchg
daa
js
pushf
std
xor
pop
repnz
adc
cwtl
and
ret
repnz
add
xchg
dec
cmpsb
adc
es
or
jns
xchg
add
adc
inc
lds
dec
loope
jno
lret
xchg
jne
or
jge
loope
mov
and
loop
pop
in
arpl
fadd
adc
test
add
inc
aam
inc
inc
and
fsubrl
ja
adc
push
and
inc
inc
cmpsb
mov
xor
mov
xchg
xchg
cltd
scas
mov
fdivrl
sub
or
lods
mov
xchg
leave
dec
test
mov
mov
or
fdivs
adc
fcomp
dec
rorb
fcoms
les
xor
roll
mov
jo
rorl
adc
inc
test
mov
das
lods
es
adc
pop
dec
mov
adc
pop
in
cwtl
cmp
test
xchg
sbb
mov
pusha
xor
mov
and
out
mov
mov
bound
cwtl
inc
stos
push
inc
and
lahf
add
mov
push
inc
pop
aas
add
jb
inc
sti
mov
enter
sar
test
push
and
adc
insb
adc
add
in
and
pop
movsl
movsl
lcall
lcall
inc
dec
adc
ficoml
add
mov
lds
mov
xchg
call
es
jmp
dec
mov
mov
outsl
bound
adc
sbb
mov
adc
in
add
out
add
or
mov
cmpsb
popf
mov
push
les
les
hlt
mov
fcoms
pop
rorb
xor
push
jge
mov
jge
inc
lock
mov
and
dec
enter
mov
pop
mov
lcall
adc
in
mov
mov
mov
push
repz
dec
in
push
sbb
xor
add
lock
pop
js
and
inc
adc
mov
push
loopne
cwtl
pop
faddl
mov
mov
mov
adc
dec
test
jnp
xor
test
adc
cmp
mov
imul
out
psubq
es
lock
incl
inc
push
mov
push
lock
arpl
shrb
daa
lods
lods
dec
mov
mov
push
sbb
lret
test
test
mov
stos
sarb
pop
jg
les
repnz
push
bound
enter
jp
cs
fwait
aaa
data16
pop
test
movsl
aam
lcall
rcll
add
sbb
mov
filds
jns
xor
and
pop
mov
jns
ret
add
dec
push
int3
aas
pusha
mov
arpl
nop
jno
jb
push
imul
outsb
out
popa
xchg
movsl
aam
rclb
cmp
jne
sub
lea
mov
or
or
push
dec
sbb
add
xorl
int3
inc
ret
xor
fcomps
and
sub
aas
pushf
in
mov
jne
push
les
mov
pop
xchg
push
jnp
or
jae
push
cwtl
adc
nop
fs
or
fadds
sub
cmp
push
or
lds
pop
aad
adc
push
or
adcl
clc
or
fcompl
int3
or
dec
mov
cmp
and
add
or
sbb
jb
or
add
test
cmp
push
jae
inc
inc
rorb
mov
sub
aas
or
mov
jmp
fwait
pop
jne
dec
pop
dec
pop
in
mov
cmpsb
in
mov
dec
xor
sub
mov
rorb
imul
xor
xor
cmpb
test
push
repz
insb
mov
mov
pop
call
mov
insb
js
xchg
fisttpl
push
mov
addb
add
mov
or
les
add
pushf
or
fs
shlb
movsb
sbb
or
ret
inc
lods
sahf
push
in
inc
mov
rorl
repnz
pop
jg
iret
inc
add
xor
xchg
adc
aam
fs
sub
std
mov
cs
dec
xchg
imul
jb
ret
fisttps
negl
adc
out
and
pop
push
fidivrs
jo
arpl
mov
adc
insl
cmp
sahf
xor
jle
or
inc
lock
and
add
leave
aas
int
inc
sub
lock
pop
mov
inc
add
out
aaa
les
fsubr
out
pop
dec
mov
add
enter
mov
orb
enter
mov
popa
add
stos
and
inc
lock
add
and
test
inc
outsb
inc
mov
popf
lock
dec
scas
pusha
mov
jno
jns
add
in
scas
add
mov
bound
fwait
pushf
cmp
in
cmp
and
es
push
andb
mov
cmp
and
inc
push
dec
push
fadds
test
and
sbb
push
int
mov
or
pinsrw
push
movsl
push
out
int
sbb
lds
loopne
loopne
sub
dec
sbb
add
loopne
xchg
mov
dec
pop
aaa
inc
fwait
push
push
pop
lock
outsl
inc
push
stc
xchg
add
add
nop
or
fs
or
adc
and
mov
xchg
inc
inc
mov
jae
sysenter
adcl
sub
rcrl
test
sub
mov
cmpsb
sbb
pop
add
dec
gs
in
add
jbe
gs
add
ja
and
dec
das
call
mov
shll
out
inc
in
sub
repnz
nop
pop
inc
faddl
fs
push
sub
cmpb
jl
xchg
add
sub
mov
cmp
xchg
adc
insl
push
or
das
enter
fildl
or
loope
test
pusha
shlb
or
inc
push
mov
out
inc
sahf
and
add
mov
inc
btr
add
sarl
rorl
ja
mov
fwait
push
movsl
pop
xor
mov
and
push
jb
cld
adc
ficompl
shrl
jb
push
call
stos
in
add
rolb
push
inc
inc
or
mov
clc
xchg
xchg
adc
rcr
mov
rolb
cmp
inc
xchg
pushl
xor
in
dec
call
std
stos
adc
xor
subl
adc
loopne
ret
fadds
aam
scas
xchg
inc
xchg
mov
aam
imul
mov
aas
mov
fcom
icebp
push
js
and
adc
lret
packsswb
fadds
dec
and
dec
sub
bound
mov
cmc
gs
sub
pushf
test
cmc
cmp
andb
gs
and
inc
xor
sbb
test
dec
sub
jne
fcoms
add
dec
ja
push
enter
inc
mov
andb
dec
call
dec
sbb
jo
xchg
sbb
push
inc
stos
scas
lret
inc
mov
loopne
fisubl
pop
es
sbb
xor
popa
les
jno
nop
inc
xor
fcomi
push
pop
fwait
dec
pop
jno
pop
shl
jg
test
sti
pop
xchg
cmp
imul
mov
cmp
test
add
dec
jg
fcmovnb
in
dec
sbb
es
jl
insl
pop
xchg
dec
xor
insb
hlt
pop
push
dec
xor
and
push
dec
sbbb
xchg
cmpsb
shlb
movsb
cwtl
inc
pusha
sbb
jno
fdivs
adc
cmp
xor
les
in
inc
push
fdivrl
cmp
dec
addb
es
jbe
addr16
dec
je
fs
dec
cwtl
aam
sbbb
es
imul
addb
mov
inc
lea
mov
je
sbb
fdivrl
mov
jne
adc
dec
mov
pop
je
orl
pop
test
push
adc
or
xchg
sbb
xorb
lods
test
mov
pop
mov
dec
mov
adc
adc
or
arpl
xor
mov
xchg
pop
stos
jl
cmp
mov
aam
popa
inc
and
sub
scas
inc
std
aam
ss
pop
loope
out
adc
mov
nop
inc
jg
test
mov
pop
inc
stc
add
xchg
jg
movsb
pop
mov
fmull
mov
subb
mov
push
mov
xor
add
sub
je
stc
cltd
scas
add
adc
push
jmp
mov
cmp
jmp
rolb
scas
add
xchg
dec
mov
rolb
mov
mov
sub
mov
adc
test
test
push
rorb
jecxz
add
push
sarb
in
pusha
add
add
gs
in
sbb
xchg
cmc
adc
pop
inc
into
sub
inc
cmp
cmpsb
cmc
ret
pop
test
bound
add
push
and
jne
sub
into
dec
nop
loopne
and
xor
sbb
stc
lock
inc
or
jge
inc
sbb
enter
pop
insb
test
lock
add
adc
mov
ja
dec
pusha
add
sub
sbb
and
add
ffree
inc
and
jno
test
adc
repnz
stos
mov
div
enter
shl
mov
aad
push
mov
repz
mov
jno
fistps
mov
incl
in
aam
test
jo
test
mov
mov
pop
sbb
inc
inc
pop
jo
add
and
mov
test
fdivrp
mov
leave
pop
or
sbb
cli
mov
jb
cld
cli
scas
fs
cmp
cmp
inc
dec
fmuls
cmp
add
adc
js
pushf
inc
mov
dec
shlb
test
jbe
add
and
adc
cmpsb
jae
xor
and
or
inc
and
daa
inc
insl
mov
roll
nop
cmp
repz
cli
call
test
movsb
adc
rcll
mov
es
ss
sbb
inc
pop
dec
les
pusha
sub
adc
mov
jo
pusha
inc
add
push
pop
in
add
push
loop
push
sbb
in
pop
adc
push
jo
push
adc
push
nop
imul
aas
and
fwait
rclb
fiaddl
adc
cmp
out
roll
mov
mull
sbb
nop
lret
pop
rorb
and
adc
or
stc
aas
xor
mov
movsb
jge
pop
push
mov
sub
fisubl
lods
push
repnz
mov
push
pop
jo
movb
xor
rorb
mov
inc
xchg
testl
subl
add
lock
hlt
out
pop
adc
add
pop
sti
cmp
int
clc
dec
push
enter
stc
popf
push
inc
mov
pop
popf
pop
xor
jne
lds
les
mov
mov
andl
movsb
cmpsl
inc
ret
cmp
test
xchg
cmp
push
mov
aas
rclb
pop
pop
imul
lock
mov
push
std
pop
mov
aaa
es
mov
popf
adc
xchg
fisttpl
out
ffreep
jns
jle
stos
cmp
js
xor
int3
mov
lahf
xor
add
dec
inc
hlt
add
fiaddl
cmp
xor
out
imul
lock
pop
insb
pusha
cmpsl
push
add
sahf
mull
aas
lea
inc
fsubrl
add
je
iret
mov
dec
pop
mov
inc
mov
push
push
pop
adc
pushl
cmp
dec
mov
fistpl
or
jnp
mov
add
ljmp
and
lahf
and
jnp
or
jg
rcll
mov
mov
jns
mov
jle
test
inc
xchg
test
cmpb
sahf
js
pusha
pop
inc
inc
inc
inc
inc
inc
inc
dec
mov
test
dec
dec
dec
dec
dec
dec
dec
push
push
push
out
and
pop
pop
pop
popa
bound
gs
imul
jo
aaa
clc
pushl
je
jbe
js
jp
xor
xor
sub
daa
adc
into
ljmp
mov
rcll
xchg
adc
push
or
cmp
rclb
cmpl
mov
pop
push
mov
sub
push
mov
mov
jmp
push
rorb
gs
outsl
arpl
fs
out
sbb
push
sarl
int3
aaa
jne
push
mov
jb
gs
xor
cs
adc
popa
and
stos
imul
xchg
sbb
push
cmp
lock
rdpmc
add
psubq
pop
sub
and
rolb
inc
outsl
jb
js
je
jb
gs
xor
mov
insl
add
arpl
outsl
add
add
add
pop
pop
lock
push
gs
push
je
mov
popa
jbe
mov
jb
mov
outsb
dec
and
in
xor
xor
cmp
cmp
cmp
fs
dec
and
jns
cmpsl
jge
mov
push
das
das
adc
push
dec
push
inc
fcomps
push
insl
bound
daa
dec
outsl
jbe
ds
sar
arpl
push
jo
sub
addr16
rcr
orl
rol
xchg
jg
inc
jo
imul
bound
out
or
mov
cmp
jns
ja
cmp
jg
addr16
push
jne
xor
cmp
lahf
mov
daa
mulb
push
scas
clc
sbb
dec
jae
mov
js
push
jne
xchg
pop
imul
dec
inc
ds
popa
das
jo
or
pop
fcomip
mov
mov
andl
fmul
nop
aad
repnz
les
inc
pusha
mov
and
lahf
loop
and
sub
sub
cs
movsl
les
stos
jg
cmp
pop
pop
jg
stos
sbb
jnp
jge
jg
jo
mov
cmp
inc
test
cmp
and
push
pop
or
fadd
mov
pop
push
inc
insb
jae
mov
push
fs
mov
cmpsl
dec
mov
mov
fwait
in
int
xor
insl
and
jb
fucomp
in
pop
jbe
dec
push
push
sbb
inc
mov
fimuls
inc
and
add
xor
or
sbb
push
jo
imul
push
pop
mov
je,pn
test
mov
xchg
idivb
adc
inc
and
fs
mov
mov
push
insb
gs
xor
popa
and
daa
sbb
insl
mov
jne
pop
xor
and
and
fidivs
adc
inc
cs
lock
loopne
xor
mov
jnp
pop
push
mov
lcall
cmp
dec
mov
xchg
and
or
imul
popa
add
or
fs
popf
jmp
and
push
mov
rcr
xorl
cmp
push
or
fidivrl
popf
jb
loopne
outsl
mov
xchg
fcmovu
push
daa
sub
dec
addb
das
arpl
cmp
adc
dec
popa
sub
mov
pop
pop
push
idivb
inc
xchg
insb
imul
xchg
xor
int3
or
add
sbb
push
lcall
ret
insb
popa
pop
xor
add
mull
push
push
mov
sbb
cmpsb
cmp
sbbb
xor
shll
and
cwtl
add
pop
dec
add
add
fisubl
outsl
outsl
sub
and
je
pop
roll
cli
jbe
add
sarb
push
mov
adc
gs
or
lds
pop
mov
inc
jle
outsl
push
outsl
mov
arpl
lcall
bound
cmp
jecxz
mov
ljmp
imul
sub
outsb
popa
pop
or
in
inc
jno
push
aas
into
add
push
push
leave
nop
lds
add
imul
xchg
fnstsw
adc
or
or
and
and
adc
popf
lret
cmp
addr16
jae
xor
pop
pop
popf
push
pusha
jo
sub
test
jo
jb
push
sub
or
aas
lret
inc
sub
pop
dec
jmp
dec
or
jo
and
cmp
mov
mov
imul
inc
inc
cmp
pushf
mov
push
push
dec
cmp
jg
pop
fisubl
pop
loopne
add
cmpb
rol
das
dec
mov
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
or
xorl
push
adc
push
loop
imul
or
gs
popa
dec
add
adc
jg
js
js
mov
jae
je
pop
dec
pop
add
and
ja
sub
sahf
leave
icebp
imul
xchg
adc
int
add
adc
add
add
add
add
imul
pop
pop
or
aaa
ds
push
pop
xlat
in
pop
jns
and
or
pusha
add
js
jbe
data16
pop
sub
add
sbb
cmp
addb
push
xchg
test
int
lods
add
orb
popf
fnstenv
push
and
sub
jb
sbb
in
int3
push
jo
add
dec
jno
mov
stos
outsl
xor
int3
js
jo
dec
rclb
sbb
xchg
pushf
cmp
mov
nop
xchg
xchg
xchg
mov
es
pop
and
adc
xor
dec
pop
cmp
test
pop
add
loope
adc
cs
adc
dec
pop
data16
loope
adcb
pop
push
mov
lock
or
mov
or
add
stos
in
sub
dec
add
add
in
in
addl
mov
cmp
mov
mov
dec
cmp
inc
add
add
stos
pusha
pop
xorb
cs
sar
adc
mov
lods
sbb
add
add
shr
decl
insl
and
add
test
decl
mov
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
ljmp
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
dec
lret
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
sub
xchg
roll
sbb
add
ljmp
push
sarl
add
push
pushl
or
fists
outsl
ja
out
mov
inc
cs
jae
jb
bound
mov
stos
inc
lods
xchg
jbe
ss
popa
mov
bnd
mov
lea
dec
mov
inc
in
fldt
bound
inc
push
mov
outsb
insb
shlb
inc
sahf
insb
gs
mov
dec
sub
pop
mov
daa
add
insb
in
divb
out
pop
jns
inc
mov
imul
ds
and
inc
jb
jns
push
test
les
pop
enter
fsubrs
mov
mov
outsb
rolb
xchg
or
or
cmp
outsb
data16
sbbl
jns
push
or
pop
fisubs
jbe
push
push
or
fs
and
xor
or
mov
clc
popl
cmp
sbbb
gs
xor
or
fisubl
dec
dec
lahf
pop
dec
and
lock
xchg
pop
pop
push
push
jae
sbb
push
cmp
cmp
arpl
or
movsl
jae
addr16
sub
out
push
das
outsb
gs
mov
data16
insb
adc
or
sti
dec
push
push
push
push
dec
testl
pushf
inc
or
mov
cmp
or
jge
lods
cmp
aas
jg
inc
or
jae
call
mov
popa
test
outsl
jae
inc
mov
inc
push
in
xchg
jg
jo
pop
shlb
cmp
sub
push
jne
adc
or
push
outsl
xchg
lods
jo
aaa
daa
xchg
mov
popw
repz
cmpsl
cmp
es
cmp
iret
repz
and
sub
inc
jl
lcall
sub
sub
addr16
mov
dec
sub
sub
push
scas
xchg
loopne
inc
jmp
cmp
and
add
pushf
ficompl
cwtl
jb
jmp
adc
fs
jb
imul
mov
ss
lret
push
sarb
and
xor
jo
sub
mov
jl
lahf
xor
neg
sub
sbb
inc
add
or
add
repz
repz
rol
mov
mov
push
hlt
sti
aam
sahf
mov
clc
inc
push
movsb
mov
rcrl
jnp
iret
adcb
js
xor
cmp
cmpsl
jge
clc
das
push
je
adc
aam
jnp
repz
push
insb
push
out
imul
cmpsb
pop
push
out
sahf
cmpsl
push
dec
dec
inc
inc
jns
cmpsl
mov
xor
adc
lahf
out
add
lcall
push
iret
repz
int3
lods
mov
sahf
cmpsl
stc
cmp
in
dec
test
jns
out
fs
push
dec
cmp
jl
out
or
lock
aam
repz
mov
fs
hlt
sahf
out
lcall
mov
ljmp
push
lea
lcall
jo
jns
push
xor
jb
xor
sub
add
cmpsl
pop
push
js
cmpsb
bound
fs
sbb
jae
jb
xor
test
jne
pcmpgtw
xor
add
jle
push
ret
jne
xor
dec
jae
lret
mov
pop
stc
mov
dec
inc
push
dec
inc
dec
xor
inc
dec
dec
dec
push
inc
incb
push
dec
inc
dec
add
dec
dec
inc
add
lcall
das
adc
sub
adc
mov
inc
call
rclb
mov
xor
jnp
inc
loop
mov
stc
pop
jnp
ds
pop
adc
clc
lret
sbb
enter
jb
xchg
jge
arpl
cmp
adc
dec
scas
jp
mov
in
fstl
mov
and
and
mov
imul
lret
add
inc
mov
sarl
or
push
test
sub
fwait
ss
sbb
mov
jns
ds
xor
incb
int3
dec
dec
xor
cld
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
mov
xor
sahf
icebp
mov
cld
or
loopne
popa
sar
cmp
inc
mov
xchg
push
pop
popa
push
or
scas
int
mov
ljmp
outsb
mov
xchg
dec
hlt
scas
lods
pop
ret
fcoms
mov
iret
adc
daa
test
push
pop
pop
repnz
loopne
std
or
es
jle
adc
iret
push
dec
push
push
ret
in
adc
or
outsb
jbe
and
add
out
mov
inc
xorl
gs
out
out
cmp
push
bound
out
aam
dec
push
dec
push
sub
out
dec
mov
sbb
pop
and
xor
or
cs
and
dec
dec
adc
and
out
incl
dec
or
xor
sbb
and
dec
inc
or
sbb
sbb
pop
inc
mov
dec
dec
or
or
jbe
pop
ss
int
outsl
ss
and
pop
cmp
and
jle
frstor
pop
adc
xor
pop
pop
or
adc
push
push
pop
inc
adc
mov
in
aas
or
cmp
aaa
push
and
lods
outsl
mov
out
cmp
sub
adc
cmp
fdivrp
mov
cld
cmp
inc
sbb
sub
aas
dec
pop
mov
sbb
dec
pop
sbb
jnp
or
aas
aas
pop
es
pop
dec
add
or
add
or
dec
or
push
or
es
push
inc
push
test
push
inc
addb
neg
mov
dec
xor
inc
aaa
or
xlat
pop
aad
pop
dec
pop
push
ss
addb
je
lea
push
inc
cmp
sbb
adc
and
sbb
pop
dec
and
fsts
repnz
sbb
sbbb
xor
jo
mov
cmp
push
dec
adc
xlat
int3
sub
outsl
adc
mov
inc
dec
or
orb
add
sub
sub
push
sbb
rolb
cmp
and
gs
es
aas
sub
sbb
adc
sbb
sub
adc
cs
mov
push
inc
push
add
in
sub
pusha
daa
clc
sbb
push
sbb
testb
xchg
das
or
inc
sbb
sub
movsl
sbb
jnp
inc
pop
adc
dec
nop
xchg
fdiv
dec
cwtl
in
pushf
xchg
pop
out
out
jns
scas
xor
jo
push
adcb
push
lcall
out
in
sahf
testl
insl
inc
outsl
jg
sahf
out
push
andb
sub
nop
data16
push
lock
sti
dec
push
aas
maskmovq
negl
dec
dec
pop
push
jo
adc
and
push
inc
dec
adc
xor
leave
adc
popa
push
and
fcompl
push
xchg
inc
fmuls
jmp
popa
add
add
imul
push
notb
mov
cvttps2pi
enter
push
scas
xor
push
jo
mov
es
scas
xor
pusha
dec
jmp
out
nop
loopne
das
push
push
and
into
out
push
pusha
rclb
push
xor
loopne
cmp
push
push
cs
sub
pop
push
pushf
xor
push
aaa
sub
dec
push
pusha
pop
pop
pop
scas
test
call
pop
xlat
adc
cmp
inc
fidivrl
js
inc
jbe
mov
jae
or
pop
or
and
inc
adc
nop
dec
or
jmp
adc
mov
and
push
cmpsb
inc
dec
sub
fistpl
and
mov
push
arpl
sbb
inc
jb
cmp
in
pop
push
cs
and
push
rol
sub
inc
pop
and
xor
pop
push
fildll
imull
sub
cmp
adc
inc
or
cs
inc
sarl
pop
adc
push
push
mov
sub
mov
ja
push
xor
cmp
pop
out
or
ja
ja
sub
out
xor
ret
cld
xor
pop
sbb
fs
pop
pop
sbb
jecxz
or
mov
scas
btr
scas
jge
add
cmp
outsb
jo
shll
pop
push
sbb
pop
test
cmp
fs
daa
pop
pop
shlb
sbb
scas
out
jl
xor
cmp
jae
pop
push
pusha
sub
fisubrl
cs
adc
dec
push
fmul
cmpsb
out
inc
and
fadds
push
daa
push
fsubr
shll
jbe
loopne
jmp
inc
add
cmp
in
mov
or
ret
inc
cwtl
gs
and
cmp
imul
and
sub
dec
and
push
jle
mov
scas
dec
cld
adc
loop
dec
outsl
push
dec
dec
loope
add
mov
mov
lcall
ss
push
das
adc
ds
and
inc
pop
fmul
outsl
xchg
dec
dec
inc
push
adc
adc
xor
adc
xor
mov
adc
pusha
addr16
cmp
call
mov
dec
dec
push
adc
or
sahf
and
pop
roll
out
iret
daa
xchg
or
and
adc
pop
pop
push
push
lods
xor
lods
adc
popa
and
sbbb
cmp
jge
xor
push
test
xor
mov
adc
pop
mov
xor
fdiv
das
scas
xor
cmp
fs
sbb
adc
sub
bound
cmp
pop
and
push
lahf
and
push
ss
ss
jo
jbe
adc
sbb
lret
aaa
repnz
xchg
pusha
mov
mov
add
xchg
cs
lcall
mov
pushf
add
sub
bound
daa
popa
and
and
ss
inc
daa
in
insb
add
ret
stos
sub
adcb
or
cmp
popa
mov
push
adc
movsl
xlat
subb
stc
es
jo
sbb
mov
mov
icebp
sbb
ss
xchg
imul
pop
pop
or
or
inc
imul
pushf
add
push
and
pop
xchg
jg
das
pop
dec
and
push
push
cs
sbb
mov
sbb
aas
sbb
add
or
xchg
pop
push
sbb
push
cmp
or
mov
mov
fsubs
rol
ds
fisttps
je
mov
lcall
stos
adc
jae
insl
popa
imul
push
sbb
push
pop
addr16
in
jge
outsl
jo
mov
push
ja
push
outsb
and
xchg
adc
out
sahf
out
hlt
push
inc
in
add
aam
sahf
push
in
ss
negl
daa
adc
add
adc
aam
jecxz
outsb
fldl
int3
pop
cmp
and
add
lahf
dec
and
in
test
shl
pop
je
sub
stos
scas
mov
pop
sbb
push
add
sub
sub
and
daa
push
call
and
xor
into
loop
add
fistpl
sbb
sbb
inc
out
mul
int3
inc
xor
fs
pop
xor
adc
sub
xchg
sbb
sub
add
fmuls
adc
inc
dec
push
addb
or
mov
xor
sbb
imul
add
rorb
fstpt
les
push
imull
or
es
outsb
aaa
cmp
add
sub
push
or
and
push
sub
pop
sbb
xor
dec
jne
add
or
adc
ret
out
push
sti
int3
lods
call
pop
bound
mov
mov
fimuls
push
push
je
and
push
rcl
jae
popa
mov
cwtl
push
mov
mov
mov
jae
and
xchg
enter
add
aaa
popa
and
jae
ds
enter
push
jo
fsub
pop
decl
dec
push
push
push
das
xor
xor
dec
enter
pusha
jbe
jno
fcom
fiadds
pop
sbb
pop
nop
imulb
inc
das
or
and
out
mov
js
mov
sbb
and
dec
fwait
js
mov
xor
pop
adc
stc
mov
push
data16
dec
or
movsl
xchg
xor
rcr
dec
pusha
sti
cmp
mov
add
mov
out
fldenv
pop
inc
add
cs
sub
mov
xorb
pop
ss
aas
adc
dec
pop
adc
sbb
add
aas
outsl
cli
mov
or
and
sahf
inc
adc
hlt
mov
inc
sub
push
pop
inc
pop
sbb
fsts
pushf
mov
mov
mov
aam
inc
dec
dec
and
xor
insl
not
pop
jle
sbb
or
and
in
inc
cmp
cmp
mov
mov
clc
adc
insl
xor
adc
lret
leave
ljmp
popa
sbb
cs
and
enter
pop
inc
push
pop
dec
cmp
push
daa
out
sbbl
popa
push
dec
cli
lcall
xlat
dec
push
es
or
xchg
pop
cmp
push
xlat
adc
inc
std
or
dec
adc
pop
mov
sahf
mov
in
and
and
adc
arpl
cmpsl
cmpsl
fldenv
inc
cmp
pop
xchg
mov
jg
push
outsl
test
cmp
ss
dec
mov
sbb
push
inc
inc
and
lret
gs
inc
add
incl
or
out
inc
sti
shrb
xor
inc
dec
push
xchg
push
sub
sbb
cmp
pop
and
loop
sbb
or
dec
adc
and
jge
pusha
loopne
inc
filds
scas
push
mov
push
rclb
push
jo
imul
adc
lock
daa
aaa
rolb
and
pop
sub
adc
addb
cmp
mov
push
dec
push
jo
pusha
data16
inc
mov
ljmp
xor
or
lcall
sbb
adcb
and
push
imul
hlt
daa
rol
test
outsb
fildl
adc
cltd
lcall
sub
aaa
cmp
push
cs
pop
mov
adc
mov
das
sub
and
call
sbb
xor
sub
addl
ss
test
xor
inc
es
sbb
int3
dec
loope
pusha
fistl
pop
cmp
and
cmp
icebp
mov
xor
pop
mov
sbb
das
pop
arpl
int
cmp
pop
pop
push
daa
xchg
mov
push
and
repz
sub
pop
flds
sbb
and
and
xorl
sub
inc
and
mov
insl
xchg
and
aad
pop
es
push
adc
ds
mov
das
mov
and
enter
pop
xchg
nop
xor
ljmp
sbb
dec
jno
cmp
daa
xor
lcall
inc
dec
dec
nop
bound
call
fs
leave
add
cld
or
jb
ss
add
or
jp
push
xchg
xchg
xlat
add
dec
ljmp
fstpt
xor
push
dec
es
sbb
sbb
or
pop
add
pop
sbb
add
xor
push
xor
or
push
or
dec
int3
xor
push
jl
inc
push
xor
sbb
sub
test
fidivl
lods
filds
push
imul
aaa
adc
daa
mov
or
dec
scas
sbb
into
or
pop
pop
inc
shrb
ret
and
outsl
sti
mov
xor
adc
addb
and
filds
adc
adc
outsb
jo
push
out
cmp
fucomi
cltd
mov
adc
cmpl
sbb
in
sub
jle
nopl
fistl
mov
mov
xor
pop
sbb
xor
inc
loopne
pop
xor
and
inc
adc
movsl
inc
aaa
insb
xor
sbb
fs
out
adc
andl
not
inc
xor
stos
hlt
push
cmp
int
and
mov
xchg
inc
push
jae
aaa
gs
pop
pop
cmp
add
inc
sub
or
insl
call
les
or
adc
xor
adcl
aam
xor
mov
dec
inc
push
dec
cmp
dec
arpl
jg
xchg
fucomip
aaa
inc
add
das
test
add
inc
cmp
ljmp
add
and
pop
sbb
fs
daa
jge
add
into
sar
loopne
xor
push
cmpsb
push
push
adc
ret
adc
push
sbb
repnz
cs
jne
mov
and
pop
inc
cld
push
cmp
and
pop
inc
imul
gs
lock
cmp
dec
pop
outsb
and
inc
sbb
bound
adc
adc
jae
sbb
xchg
lods
or
cmp
sub
xor
xchg
jp
adc
mov
or
daa
xchg
ss
movaps
aas
adc
imul
sti
push
add
adc
aas
pop
pop
push
xor
aam
inc
insb
pop
or
lcall
icebp
aaa
jo
insl
or
sub
clc
push
add
mov
call
sbb
sub
insb
gs
mov
imul
mov
pop
stc
mov
das
and
rolb
in
or
cmova
dec
xchg
mov
fwait
cmpl
outsl
test
inc
add
sahf
xor
fsts
adc
push
adc
shl
das
fwait
int
repz
and
sarb
out
out
ds
push
inc
pusha
xor
jnp
sbbb
inc
inc
dec
push
push
xor
mov
push
std
add
push
pop
inc
testb
adc
push
addr16
push
dec
xor
sahf
mov
aaa
filds
jg
and
mov
mov
outsl
sbb
ljmp
add
adc
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
addr16
jg
push
insl
ss
adc
cli
mov
sub
sub
das
idivb
mov
sbb
mov
ds
pop
sbb
lods
sub
or
jg
jle
jo
fsubs
sbb
jg
pop
test
xor
dec
xchg
pop
shl
dec
push
pop
cmp
pop
add
pop
adc
adc
pop
push
and
xor
ficoms
inc
sub
cmp
int
adc
movsl
mov
mov
add
push
fadds
jb
out
daa
outsl
fsubrs
push
dec
imul
pop
pusha
sub
sub
xor
in
in
and
adc
sahf
xchg
xor
cmp
and
jb
pushf
loopne
rol
add
jae
dec
mov
mov
sub
clc
je
inc
js
cmp
out
pop
add
loope
rorb
dec
pop
int3
pop
jnp
pop
add
pop
fistps
mov
dec
cltd
jnp
cmp
incl
xor
sub
sub
xor
inc
xor
inc
adc
adc
enter
jle
pop
test
jne
cmp
insb
push
outsb
add
addb
jne
adc
loopne
js
push
mov
into
nop
add
push
dec
jp
push
push
jb
push
scas
inc
cmp
xlat
bound
xchg
lock
std
je
bound
mov
aas
xor
shrb
loopne
lahf
and
cmpsl
aaa
xorl
xchg
rclb
das
lea
xlat
das
not
mov
adc
out
inc
and
mov
aaa
ja
aaa
add
sbb
test
add
fcoml
daa
sub
xor
push
cmpsl
dec
xor
fisttps
adc
push
add
adc
xor
sub
sbb
cmp
fs
mov
sbb
xchg
outsb
and
adc
pop
inc
or
loope
jno
inc
or
ficompl
ss
pop
xor
outsl
inc
dec
test
inc
dec
rcrl
xlat
adc
das
hlt
adcl
lcall
dec
mov
xchg
add
addr16
inc
add
pop
xor
aam
push
lret
xor
mov
add
add
dec
mov
out
into
ds
imul
mov
iret
test
sub
xor
xchg
mov
cmp
pop
mov
mov
pop
mov
xchg
mov
shlb
arpl
fwait
add
mov
mov
sub
fwait
mov
stos
imul
lock
push
or
and
pop
fsubl
ret
adc
imul
cmpsl
adc
je
out
mov
pop
dec
flds
mov
mov
outsb
push
mov
push
mov
and
push
sbb
fisubs
push
loop
push
repnz
js
lcall
jns
dec
imul
addl
sub
aaa
repnz
mov
daa
aam
jge
repz
mov
push
add
aaa
cmpsl
stc
mov
mov
stc
mov
pop
sub
pop
mov
sahf
out
cmp
nop
mov
repz
cmpsl
sub
jge
notl
shl
stos
sub
xchg
outsl
test
push
mov
jge
xlat
lods
push
add
mov
shll
lahf
cmpsl
ss
fcomip
cmp
cwtl
and
mov
jnp
out
imul
push
test
cmp
es
es
adc
repz
sahf
xchg
mov
jl
jge
inc
jbe
imul
out
cmp
push
jno
scas
lahf
out
lahf
loope
jg
push
andb
sbb
dec
sahf
leave
jns
or
mov
cwtl
scas
repz
add
inc
addr16
idivl
mov
test
out
push
ja
xchg
lahf
out
push
xchg
push
into
sti
cmp
imul
cld
mov
xchg
aad
pop
dec
sbb
scas
sub
aaa
imulb
adc
stc
add
or
out
adc
adc
push
mov
xor
adc
bound
mov
pop
mov
cs
mov
loopne
mov
jmp
pop
int3
push
das
in
sti
and
pop
sbb
enter
adc
push
cmp
iret
pusha
or
sbb
pop
adc
add
ret
dec
add
outsl
adc
int3
pop
push
dec
mov
outsb
push
push
jae
popa
mov
out
fldt
add
fstpl
lods
jo
sti
or
aaa
push
imul
fisubrl
aas
jae
stos
mov
xlat
push
lcall
jae
dec
cmp
dec
shr
imul
or
imul
push
inc
cmpsb
push
insb
pop
xor
dec
pop
je
jns
out
push
scas
aaa
push
fisttps
jp
das
sbb
rclb
mul
push
inc
imul
pop
xor
pop
retw
dec
es
push
dec
mov
ja
cwtl
lock
push
enter
and
in
int3
mov
out
movsl
and
push
es
ds
xor
or
scas
stc
push
loope
lock
insl
jo
es
cld
std
in
insb
je
push
addr16
jo
jae
es
outsl
data16
xchg
aas
adc
fnstcw
or
cmpsb
mov
int
jg
mov
xor
xor
xor
xor
xor
cmp
data16
cmp
push
xor
xor
cmp
push
add
dec
lret
rcrb
push
adc
out
sub
add
inc
dec
cmp
lea
push
dec
or
stos
add
outsl
pop
bound
jo
and
inc
adc
push
ljmp
cmp
adc
cmc
dec
popa
daa
pop
push
inc
notl
arpl
test
ds
push
and
lahf
mov
lea
cs
or
mov
pop
xor
or
or
imul
mov
ret
or
dec
and
or
or
jg
and
inc
and
inc
pop
dec
pop
js
jbe
xor
cli
dec
xor
cmp
popa
xlat
ret
inc
inc
sbb
pop
add
push
cmp
out
lock
cmp
inc
sbbl
daa
popa
pop
fcoms
sub
add
call
and
xchg
mov
xchg
pop
call
push
add
es
push
sbb
sahf
out
inc
push
addr16
jl
mov
cltd
or
jge
add
add
add
pop
push
add
or
adc
adc
sbb
and
inc
iret
xor
mov
insb
sbb
push
mov
data16
icebp
mov
rorb
fwait
int
add
test
sub
add
or
pop
adc
pop
add
sub
adc
push
push
ss
int
dec
str
add
inc
stc
das
incl
outsb
dec
mov
aas
lea
xchg
lock
repnz
push
loop
outsl
sbb
push
adc
jo
lea
push
insb
or
ret
add
pop
inc
push
add
cmp
sbb
ss
adc
cmp
fildl
fprem
or
dec
fs
xor
test
pop
aaa
push
ds
out
es
test
add
ja
daa
push
and
cmp
inc
test
test
addr16
aaa
pusha
or
or
daa
and
insl
mov
jmp
mov
das
sub
js
frstor
lods
daa
jge
pop
sbbb
push
pop
in
das
divl
les
fcmove
jmp
loope
adc
aam
push
ret
daa
pextrw
sub
fsubrs
xchg
pop
mov
das
dec
inc
mov
js
js
jo
pop
or
repnz
pop
inc
sub
xorl
push
cwtl
and
or
push
lock
pop
das
mov
loopne
imul
pop
cltd
daa
jo
loopne
lahf
pop
xchg
outsb
pop
fwait
adcb
pop
pop
int
add
ficompl
addr16
arpl
out
sbb
std
push
xchg
popa
lods
daa
fstp
or
pop
xor
sub
inc
lcall
push
aaa
outsl
lret
es
aad
pusha
pushf
les
in
xor
dec
repnz
xchg
xor
push
js
jl
icebp
jo
dec
jl
and
add
outsl
imul
jno
or
fildl
ss
cmp
or
push
dec
js
xchg
ja
mov
push
ret
pop
fldenv
or
and
add
xchg
stc
pop
or
push
adc
adc
xchg
lcall
pop
loope,pn
dec
or
sbb
fistpll
das
pushf
das
mov
aaa
push
stc
pop
inc
pop
cmp
ret
xor
jo
out
mov
lcall
xchg
faddl
das
outsb
test
push
das
push
adc
bound
les
jnp
or
addr16
adc
das
mov
adc
pop
and
xor
pop
dec
cmc
xchg
bound
sub
dec
inc
lds
xor
das
das
dec
xchg
icebp
push
sbb
sbb
invd
add
push
mov
fcoms
mov
add
inc
jo
sbb
andl
ss
pop
sbb
pop
and
fsubs
popa
and
xchg
aas
push
cmp
loope
testl
xchg
sub
pop
push
sbb
xor
call
add
adc
call
mov
ljmp
xor
jle
gs
adc
fstpt
inc
sahf
out
push
xor
notb
sbb
std
or
dec
push
fs
xorb
xlat
mov
adc
mov
and
push
cmp
xchg
fucomi
into
or
mov
xchg
mov
and
cmp
dec
add
jb
jo
sbb
mov
data16
pop
or
dec
cmpsb
xor
test
sbb
imul
dec
or
dec
cld
int3
add
shll
and
dec
lahf
test
adc
push
ss
sub
fisubl
xor
js
lahf
inc
lret
rorb
mov
inc
or
mov
mov
testl
rol
ficompl
das
sbb
addr16
test
flds
movl
mov
pop
push
sub
add
or
aam
or
mov
mov
test
xor
jno
notl
sbb
fst
pusha
dec
sbb
xor
pop
or
mov
xlat
lods
sub
and
sbb
push
cmpsl
dec
ret
push
push
and
and
jae
add
pop
cs
sbb
cmp
push
cmp
pop
ljmp
pmuludq
xor
push
popf
cmp
sub
nop
ds
jg
jb
jo
inc
jo
mov
in
jbe
fs
mov
xor
xor
loopne
sbb
dec
rorb
sbb
push
fcmovnu
pop
sub
push
adc
stos
mov
push
add
push
adc
rorb
pop
aaa
fdiv
pop
aas
add
add
or
stos
and
adc
adc
adc
xor
and
push
dec
push
ss
inc
and
or
sub
dec
inc
push
dec
push
cmp
sub
inc
inc
push
sbb
or
adc
js
call
or
and
sub
push
jg
jbe
lret
out
push
sbb
push
cmp
sbb
dec
xor
pop
inc
xor
or
cs
andps
fcomip
out
mov
inc
add
pop
sbb
sub
unpcklps
ss
decl
push
and
and
inc
es
or
inc
dec
and
xor
ss
sub
push
jo
stos
add
ret
mov
dec
ret
xchg
and
and
push
mov
ret
test
or
dec
in
cmpsl
push
fcmovbe
jg
jb
inc
sub
aas
push
dec
inc
daa
push
cmp
testb
cmc
push
mov
sbb
lea
sub
inc
inc
inc
push
push
aad
loopne
dec
cmp
out
inc
inc
sub
inc
and
xor
sbb
mov
xor
mov
stc
xchg
push
push
dec
std
add
inc
jo
dec
and
rorb
jno
xchg
push
xor
pop
daa
les
dec
sub
push
lret
add
push
sbb
lock
jnp
inc
xchg
sbb
inc
into
jb
add
jecxz
mov
loope
dec
aaa
dec
adc
and
push
dec
push
push
dec
sgdtl
mov
sub
push
inc
sub
into
ja
add
adc
adc
pop
push
push
inc
daa
inc
dec
mov
xchg
out
add
sub
jl
adc
mov
xor
ja
pop
adc
cmp
adc
pop
daa
sbb
fldl
add
and
sti
mov
adc
nopl
pop
push
and
ficomps
push
aaa
push
xor
jbe
negb
xor
xor
push
inc
add
out
inc
push
pop
inc
inc
xor
dec
fdivrs
and
aaa
inc
push
inc
cs
imul
ucomiss
ss
cmpsl
add
ljmp
pop
add
inc
xchg
inc
aaa
jno
sti
shlb
ret
lods
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
ljmp
xor
jge
push
je
mov
andb
fwait
rol
fwait
jg
cmp
out
popf
rorl
and
sub
sub
pushl
test
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
mov
push
arpl
push
sub
or
cs
insl
sub
adc
cmp
jae
gs
leave
ret
sub
xchg
mov
data16
mov
ljmp
call
cltd
test
push
push
shll
ja
daa
mov
pushl
cmp
fmuls
lret
rep
cs
outsl
arpl
test
add
inc
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
cmp
cli
decl
jg
push
push
mov
fwait
stos
flds
pop
jnp
ss
ja
xor
aaa
gs
ljmp
inc
sub
dec
addr16
cmp
and
js
ds
daa
je
jns
xor
dec
cmp
and
ljmp
das
sub
or
inc
and
or
fs
jo
cmp
sub
pop
stos
data16
dec
imul
popa
loopne
or
iret
test
mov
pushf
lds
faddl
sub
dec
popa
and
fisttpl
lea
or
popf
or
bound
add
jmp
inc
push
push
xchg
das
jl
int
das
fdivl
loop
adc
arpl
xchg
mov
data16
rcll
adc
and
jae
test
test
mov
pop
and
ss
sbb
push
pop
xorb
scas
popf
or
mov
and
adc
pusha
mul
sbbl
loopne
loopne
or
inc
and
mov
shlb
inc
jp
dec
or
mov
mov
popa
adcb
daa
rcll
jp
pop
or
sahf
pop
mov
push
sbb
xor
and
int3
add
sub
pop
lock
lock
mov
adc
mov
and
inc
pop
push
push
pushf
ret
scas
divb
sub
cli
mov
gs
lret
jnp,pt
mov
or
jge
or
orb
lods
sbb
and
mov
mov
xchg
mov
pop
add
add
xor
adc
bound
xchg
cmp
cltd
mov
pop
inc
std
inc
data16
mov
fs
adc
loopne
push
inc
icebp
icebp
fmuls
arpl
dec
add
fadd
adc
outsl
fistps
add
lods
enter
sub
push
xchg
push
popf
sub
adc
test
les
inc
add
in
in
dec
movd
rdmsr
imul
jo
inc
mov
jae
popa
insl
gs
cmp
sarb
or
out
add
aad
xchg
mov
sbb
je
loop
or
stos
and
push
dec
sbb
int
lcall
je
arpl
xor
add
sbb
mov
sbb
sub
and
aaa
or
pop
push
andb
fstpl
pop
pop
mov
loopne
dec
or
push
test
insl
lea
xor
aam
push
test
int
add
adc
scas
les
and
test
popf
push
fs
and
jne
dec
andl
fmull
data16
pop
adc
movsl
jno
mov
ss
enter
lds
add
cs
xchg
lock
mov
xchg
fcomp
pop
inc
inc
push
push
mov
nop
dec
add
bound
fs
mov
popa
dec
stos
pop
push
and
popa
jb
pop
add
cmp
jae
inc
jne
push
inc
mov
test
xor
cmp
sbb
sbb
icebp
pop
daa
dec
push
ret
sbb
or
test
cs
test
ficoms
cmp
lea
push
aaa
add
rclb
or
push
es
pop
jbe
mov
enter
daa
ficoml
mov
hlt
addr16
jo
pop
sbb
or
stos
loope
jo
stos
push
outsl
imul
fsubs
push
dec
dec
mov
incb
push
dec
pextrw
test
push
jl
cmp
mov
and
pop
pop
das
dec
xor
sub
and
shlb
cltd
dec
add
movsl
mov
push
rclb
push
sbb
ja
xor
movsb
or
xchg
arpl
sbb
and
pop
mov
pop
adc
and
or
dec
hlt
inc
mov
inc
sbb
push
out
add
sbb
sub
push
inc
inc
jg
push
mov
ja
int3
add
outsb
insl
add
pop
lahf
and
outsb
xor
pminsw
nop
lds
add
cmpsb
xor
je
imul
or
add
push
dec
iret
pop
xor
inc
jne
or
sub
xor
adc
orl
jb
mov
pop
pop
pop
aas
or
and
lods
mov
adc
mov
jbe
fdivs
dec
pop
dec
pop
movsl
insl
outsl
mov
mov
repz
cs
aad
sub
dec
cmpsl
shll
test
test
sub
pop
test
outsl
std
xor
pop
push
das
add
lods
dec
shll
inc
and
orb
pop
mov
adc
and
mov
jnp
inc
and
inc
sbb
pop
add
or
jns
cmp
movsb
arpl
gs
push
gs
movsl
shlb
lods
push
mov
dec
je
test
addr16
popa
aam
push
dec
sub
outsl
insb
push
jmp
jae
movzbl
xchg
jbe
cmpsb
punpckhwd
dec
outsb
push
sub
pusha
mov
push
add
dec
ja
repz
ja
push
inc
dec
push
inc
pop
push
dec
inc
dec
negb
xchg
cmp
enter
gs
fiadds
push
test
pop
or
pop
daa
dec
push
dec
addb
jb
addb
ret
dec
daa
loop
cmp
jo
fsubs
adc
fs
rclb
or
inc
adc
mov
cmp
shlb
adc
xchg
push
xorl
xchg
ret
jb
push
adc
mov
push
xchg
jecxz
mov
pop
or
mov
xor
mov
aaa
pop
sbb
test
stos
inc
mov
dec
gs
add
cmp
rorb
dec
sbb
cmpsb
xchg
lock
fmuls
fmuls
pop
nop
or
dec
dec
xor
xor
adc
dec
mov
clc
movsl
cmpsl
in
dec
or
stos
sbb
add
in
loope
inc
push
adc
add
cltd
js
inc
inc
movsl
pusha
icebp
fstps
pop
dec
mov
add
pop
add
stos
loopne
xor
dec
push
jo
inc
stos
cli
mov
outsb
insb
or
or
xlat
aam
mov
inc
pusha
mov
or
mov
insl
push
xchg
or
dec
lods
push
fiaddl
lahf
xlat
outsl
out
mov
xor
pushf
insb
sahf
rolb
test
sub
push
or
jmp
jo
and
clc
rolb
das
popa
daa
xchg
fsub
insb
dec
add
out
testb
xadd
sbb
inc
pop
add
out
insb
mov
inc
out
jnp
sahf
lock
adc
cmpb
aas
in
mov
arpl
pop
pop
inc
dec
add
loopne
mov
arpl
daa
mov
add
adcb
push
inc
pop
or
sti
jne
cld
push
add
inc
aas
add
stc
out
loopne
push
addr16
movsb
testl
push
push
mov
xchg
movsb
add
pop
mov
ror
cmpsl
ja
lahf
add
daa
test
out
lcall
add
test
enter
insl
outsl
and
adc
pop
and
sub
mov
stos
sarb
addr16
outsl
mov
dec
data16
inc
push
daa
dec
inc
scas
in
scas
inc
cmp
scas
in
xor
dec
scas
in
and
jno
js
add
daa
pop
pop
dec
sti
pop
test
in
pop
push
rorb
gs
ds
repz
les
js
jge
out
pop
inc
and
mov
out
iret
mov
cwtl
pop
pop
pop
pop
ds
jns
jns
pop
pop
pop
push
inc
sub
int
or
pop
adc
pop
fsubl
pop
push
push
and
or
adc
or
inc
or
out
dec
inc
es
jg
dec
xor
idiv
imul
pop
repz
je
sub
in
pop
dec
add
add
cmp
cwtl
loopne
push
in
mov
sbb
ja
shrl
mov
les
sbb
dec
jns
xchg
sub
xor
dec
es
lock
adcb
pop
das
jo
jl
push
xor
jns
ret
filds
sub
mov
in
pop
jb
mov
cmp
outsl
cmp
cmpsl
ss
add
and
xchg
pop
add
dec
xchg
fsubs
out
pushf
pop
leave
adc
xchg
out
pusha
pop
lods
xor
fiadds
jl
inc
pop
mov
popa
sub
scas
add
insb
mov
ljmp
add
xor
cs
dec
xor
inc
es
enter
ljmp
and
fwait
pop
lods
fs
mov
sbb
sub
fdiv
inc
inc
sahf
pop
sub
xchg
pop
clc
fidivrs
movsb
push
cmp
nop
fs
popa
sub
in
rol
pop
jg
cmp
fs
sub
lods
or
add
leave
xor
lahf
ja
add
pushf
test
mov
popa
imul
mov
sbb
outsl
and
cmp
pop
sahf
sub
and
out
sub
push
cmp
add
sbb
popa
mov
jno
pusha
mov
add
or
fsubl
mov
shlb
addr16
scas
mov
sbb
cmp
outsl
and
pop
xor
mov
daa
add
mov
movl
cmpsb
lahf
mov
cmp
popa
push
push
cmp
xchg
cmpsb
mov
popa
push
mov
pop
mov
pusha
push
xor
pop
sbb
jmp
pusha
inc
jbe
dec
enter
fs
notl
enter
push
push
fwait
mov
add
mov
xchg
scas
or
pop
lock
daa
testl
bound
xor
data16
scas
clc
arpl
fadd
mov
push
pop
lds
mov
xor
and
cwtl
pop
lods
bound
add
or
lcall
sbb
add
pop
jne
daa
xlat
or
cmp
arpl
fs
cmp
sub
arpl
jbe
pop
mov
dec
inc
sbb
testl
xchg
fdivs
add
lock
sahf
cld
add
fs
addl
cmp
enter
aaa
shlb
inc
mov
xorb
pusha
mov
imul
dec
xchg
call
or
add
gs
mov
xchg
inc
iret
add
sub
pop
add
mov
repnz
sbb
rclb
addr16
nop
int
mov
mov
cltd
add
jb
bound
sub
data16
fdivp
adc
jl
inc
addr16
outsl
add
ss
sub
push
pop
pop
cmpsb
enter
sbb
cmp
data16
leave
adc
xor
add
jl
and
xor
je
inc
addr16
pop
leave
test
iret
push
xor
xlat
add
jo
sahf
iret
mov
aad
daa
dec
out
cld
lahf
or
jae
push
jb
add
out
or
pop
test
push
xor
out
fisubl
cld
push
cmp
xchg
mov
push
push
sub
repnz
scas
cwtl
xchg
aas
or
push
aam
push
push
or
pop
or
ljmp
dec
xor
imul
xchg
add
leave
fwait
xchg
sub
add
pop
add
imul
scas
add
and
or
out
and
add
pusha
push
addr16
add
or
mov
and
jb
push
sbb
daa
add
xor
jl
imul
popf
xorb
push
push
dec
das
push
xor
outsl
cmp
ljmp
iret
xor
xor
jbe
mov
daa
sub
cwtl
sub
cmpsl
test
subb
into
jnp
clc
push
xor
ss
push
cmp
fsubrs
call
xchg
add
adc
pop
and
ficoms
outsl
movsb
xor
pop
in
jne
scas
pop
push
xlat
sbb
loopne
data16
pop
iret
lds
push
jae
out
enter
ret
xchg
addr16
pop
xor
mov
push
xchg
imul
xchg
insb
push
inc
outsl
mov
iret
repz
cmp
sarl
repz
pop
outsb
inc
push
out
mov
out
cmp
pusha
andb
jns
xorb
imul
jb
ja
out
idivl
and
push
ja
iret
sarl
out
je
pop
fwait
int
stc
cmp
add
mov
mov
ja
push
ja
out
lcall
mov
ja
call
mov
out
ficomps
push
mov
iret
repz
cmpsl
call
lahf
out
mov
dec
jns
out
movsl
or
inc
push
stc
xor
out
in
jg
adc
inc
jns
loopne
and
cmpsb
leave
in
jno
out
xor
out
xor
mov
test
push
stc
jns
cmpsl
stc
sub
stc
cmp
repz
mov
jl
cmpsl
js
out
mov
pop
mov
orb
repz
out
cmp
and
iret
sarl
out
and
repz
xchg
xor
iret
sarl
xorl
pop
fmuls
imul
xchg
enter
jl
xchg
loop
cwtl
jo
xor
out
lcall
imul
imul
jnp
mov
cmpsl
stc
cmp
and
lahf
out
and
mov
dec
jnp
jmp
mov
add
mov
pop
mov
movsb
sbb
jns
pop
cmpsb
jb
or
outsb
push
outsl
lods
repz
jno
cmp
pusha
mov
sahf
out
xor
lcall
clc
xor
sub
call
outsb
scas
push
scas
push
cwtl
shl
popf
in
repz
mov
es
push
enter
int
mov
add
jl
dec
shrb
pop
fnstsw
sahf
cmpsl
ss
in
cmp
lahf
cmpsl
dec
insl
cmp
xchg
fdivp
jns
out
shll
ret
cmp
push
test
repz
sub
popf
loopne
lds
jns
outsb
mov
stos
data16
cmp
nop
lret
xor
lcall
int
mov
addr16
adc
add
iret
and
and
sahf
mov
inc
xchg
push
ffree
or
fdivrp
jno
iret
in
movsb
sbb
sub
sub
fsubl
xchg
jb
mov
mov
xchg
add
leave
jae
lcall
daa
rcr
enter
xlat
add
pop
paddq
jle
inc
and
jb
aas
cld
shr
xchg
or
adc
xchg
ss
lcall
adc
mov
daa
xchg
push
test
mov
paddsb
pop
xchg
mov
pop
adc
pop
or
in
add
in
shlb
rolb
das
cltd
nop
pop
pop
mov
imul
push
pop
pusha
je
jo
loopne
xchg
loopne
adc
lds
xchg
arpl
js
pusha
jp
pop
outsl
mov
dec
and
fistpll
xchg
stc
mov
ss
mov
movsb
pop
bound
fimull
sarb
dec
fistpl
iret
rcr
and
scas
fisubrs
fbstp
inc
fistpll
shl
adc
or
adc
push
iret
mov
add
pop
push
and
cs
repz
je
aad
inc
jmp
push
mov
mov
pop
in
jbe
popl
leave
dec
repz
jbe
or
inc
mov
inc
pop
add
sbb
hlt
adc
daa
cmp
testl
ficomps
lahf
mov
jb
ja
sbb
cld
pop
xor
rcrl
push
inc
mov
mov
sbb
mov
rolb
outsl
push
je
adc
ss
fdivr
mov
inc
jg
mov
pop
or
mov
leave
and
push
mov
aas
dec
or
dec
inc
push
and
add
xor
jne
sub
iret
pop
mov
sub
adc
pusha
call
push
add
inc
mov
inc
dec
in
dec
push
movsb
jns
jns
jns
jb
movsl
scas
rorb
cld
add
jp
in
stos
in
push
pop
inc
jle
out
dec
push
leave
add
push
test
enter
jg
inc
pop
jnp
mov
jnp
jmp
and
jp
push
add
iret
add
daa
daa
adc
or
in
pop
leave
and
leave
inc
fwait
subb
push
cmp
inc
jb
pop
call
dec
pop
cmpsl
mov
adc
daa
xor
and
or
pushf
pop
insb
mov
and
in
loope
test
inc
push
fisubrs
scas
gs
outsl
add
lahf
xchg
pop
jg
jge
sbb
dec
or
movsl
xchg
jge
add
outsb
push
sar
pushf
mov
add
lods
and
mul
mov
and
inc
xchg
in
je
leave
and
push
daa
xor
cmc
das
js
mov
or
daa
xchg
dec
rol
loopne
jns
pop
jl
jg
jg
daa
nop
and
jg
outsl
inc
lahf
aaa
jb
out
icebp
outsl
cld
push
add
jo
iret
repz
adc
cmp
push
pop
xor
mov
jmp
or
jo
mov
arpl
in
push
les
add
inc
scas
aaa
or
dec
jb
cmpb
out
cmp
add
adc
xchg
or
add
pushf
loop
and
mov
jno
repnz
mov
jno
add
js
jb
xor
dec
jno
outsb
and
cmpsl
push
cmp
xchg
jb
cmpsb
scas
mov
jb
rcr
loope
jb
jb
icebp
stc
loopne
repz
sbb
inc
cmp
insl
notb
pop
xor
cmp
inc
leave
out
sahf
dec
jb
pop
xor
cs
xchg
pop
outsl
jb
lahf
cmp
pop
ja
cmpsl
imul
mov
pop
leave
jae
mov
sahf
mov
lahf
jl
inc
xchg
xchg
cmp
out
inc
xorl
cmp
cmp
loopne
mov
dec
data16
js
pop
adc
inc
daa
rolb
add
jb
sbb
mov
ja
xchg
pushf
mov
insl
lds
test
pop
leave
and
add
cmp
ret
imul
out
dec
je
and
mov
ret
sbb
xor
pushf
call
je
je
mov
dec
mov
fmull
outsb
xchg
enter
add
daa
dec
pop
faddl
cmp
xchg
push
daa
inc
dec
push
xor
and
xchg
lahf
xor
pop
jne
das
das
das
arpl
jne
jne
jne
das
das
das
jne
jne
jne
repz
repz
or
repz
rorl
or
repz
paddw
or
sahf
out
adc
adc
adc
jns
out
adc
adc
sahf
push
push
pop
arpl
jno
mov
sbb
and
das
xchg
dec
es
adc
pop
leave
and
inc
add
aaa
jb
cmp
add
fisubl
jp
ja
mov
mov
rorl
cs
les
inc
lahf
lret
arpl
bound
xchg
add
pop
and
das
push
mov
js
cmp
or
push
js
mov
iret
insl
adcb
mov
cmp
mov
rol
in
outsl
das
sarb
fdivrs
mov
mov
movl
inc
dec
insl
loop
inc
pop
or
push
in
aaa
inc
test
cmpsl
fdivrl
ss
add
pushf
inc
ja
loopne
fs
push
lods
aaa
pusha
xchg
push
ret
aaa
push
jns
cmp
in
jg
mov
add
lcall
or
add
jbe
lea
push
and
mov
ret
dec
rcrb
fidivrl
enter
mov
hlt
jae
mov
leave
inc
mov
in
jb
xlat
js
jnp
hlt
and
popa
jnp
pop
mov
sarb
subb
mov
inc
lea
lea
inc
jb
push
pop
iret
mov
in
leave
notl
jl
nop/reserved
jl
add
jl
dec
jl
mov
ficoml
lock
repnz
add
in
mov
jb
cmp
call
pop
movsb
mov
jp
enter
mov
mov
mov
cmp
or
xor
outsb
jge
jns
test
and
xchg
jge
xchg
add
in
shl
paddb
add
test
push
repnz
iret
gs
in
in
or
nop
inc
rcr
and
daa
dec
decl
pop
add
es
mov
and
cmp
xchg
mov
xchg
incl
jg
pop
pop
ds
movq
jg
jg
jg
pop
pop
pop
das
jg
jg
jg
jg
pop
pop
pop
dec
jg
jg
jg
jg
pop
pop
pop
outsl
jg
jg
jg
jg
dec
mov
pop
femms
leave
leave
leave
leave
or
leave
leave
leave
or
pop
push
leave
leave
leave
leave
add
xchg
leave
add
xchg
jbe
pop
and
addr16
jbe
in
xlat
in
jl
decl
adcb
in
sub
imulb
cmp
jno
mov
ja
mov
mov
mov
fsubs
lock
mov
add
xchg
or
add
sub
push
xor
and
sahf
out
or
dec
orl
enter
mov
xchg
mov
xchg
pop
leave
jae
dec
sahf
ja
jo
xchg
pop
mov
iret
lods
push
in
in
test
orb
ja
and
add
push
pxor
leave
dec
sub
cmp
push
pop
iret
and
or
repnz
dec
push
cmovle
cmpsl
pop
add
popf
mov
mov
imul
xor
cmp
mov
jg
jns
jle
aaa
xchg
inc
pop
or
cmp
or
dec
xchg
dec
shrb
mov
movsb
ljmp
cmp
ret
fdivrs
cmp
or
xchg
mov
xchg
or
insl
xchg
and
subl
xchg
xchg
daa
daa
daa
pop
push
imul
pop
subl
sahf
xchg
out
cltd
pop
mov
adc
rolb
xchg
movl
leave
xchg
and
test
test
xor
aas
test
jb
dec
jo
js
ja
jb
mov
inc
ja
push
mov
sarb
repz
fisttpl
out
stc
cmp
repz
or
or
in
psubusb
sbb
jb
dec
test
pop
test
outsb
and
je
jg
mov
or
fs
cmpsb
js
leave
leave
inc
repnz
fdiv
mov
adc
iret
sbb
add
out
xchg
jae
dec
vmwrite
addl
daa
xchg
or
hlt
in
mov
prefetchw
mov
xchg
push
add
cmp
and
stc
add
xchg
inc
das
fwait
iret
rolb
sub
push
lcall
pushf
scas
pop
enter
mov
in
adc
or
cmp
add
xor
adc
daa
inc
iret
inc
into
icebp
fs
xchg
mov
sbb
rcr
adc
fcmovnbe
in
push
mov
stc
or
sar
adc
pop
xchg
and
pop
inc
jg
mov
jae
nop
xchg
xchg
mov
lea
mov
xchg
enter
add
mov
push
and
mov
jb
enter
mov
push
aas
xchg
xchg
pop
lock
mov
mov
jo
and
outsb
fisttps
or
xchg
je
shr
das
xchg
out
mov
cmp
sub
xchg
daa
pop
leave
aam
imul
jl
ja
sbb
jbe
add
repnz
mov
mov
repnz
mov
mov
repnz
decl
jb
sub
mov
mov
cmp
cmp
cmp
cmp
mov
int
out
cmp
out
or
or
xchg
push
leave
or
sbb
jb
daa
mov
mov
and
push
mov
imul
lahf
nop
dec
repnz
mov
out
enter
jmp
das
xchg
dec
fs
lea
mov
nopl
in
inc
add
lock
sbb
out
inc
into
pushl
cs
cmp
xlat
fisttps
jo
lea
mov
js
es
dec
mov
mov
mov
mov
and
stos
addb
mov
ret
mov
push
daa
xor
cmp
pusha
mov
adc
sbb
mov
out
int3
jg
pop
push
add
jbe
je
add
push
jb
leave
rep
and
sbbb
mov
or
xor
mov
jnp
add
mov
inc
mov
inc
or
cmp
inc
addr16
pop
leave
jae
mov
shll
into
leave
lcall
outsb
and
fcoml
and
dec
dec
and
xchg
andb
xchg
dec
push
add
out
jne
add
leave
test
xchg
lea
xchg
stos
ss
mov
sahf
enter
add
xchg
xchg
xchg
loopne
lock
xchg
pop
pop
pop
jle
add
sbb
and
pop
xchg
xchg
xchg
xchg
or
or
xchg
xchg
xchg
xchg
push
add
sahf
xchg
add
xor
cmp
inc
sbb
sbb
jns
pop
pop
pusha
iret
leave
leave
rorl
and
js
inc
iret
repz
and
dec
and
xchg
xchg
sub
movsl
mov
adc
and
int3
xchg
test
movsb
cmp
notl
xchg
iret
sbb
aaa
nopl
fwait
fs
xor
fiadds
xchg
add
outsb
daa
mov
arpl
jae
cmpsl
push
jb
xchg
jl
cmpsl
mov
jb
mov
and
in
pop
rclb
and
or
xchg
or
sub
or
daa
outsl
push
or
adc
cltd
loopne
repz
sub
in
xchg
test
incl
repnz
cwtl
lods
pop
xchg
xchg
in
orl
lods
mov
aaa
int3
test
push
aad
ret
out
out
enter
ds
or
mov
xchg
es
cs
add
test
or
test
iret
das
mov
xchg
mov
into
cltd
mov
mov
mul
xchg
pop
into
and
out
test
flds
jo
jb
fsub
out
stc
ja
inc
pop
pop
add
setbe
push
out
mov
xchg
cmp
xchg
and
pop
push
or
iret
push
jb
jge
mov
pop
xchg
xchg
adc
stos
in
bound
push
fists
inc
cmp
lock
push
jb
xchg
das
pop
xchg
inc
or
mov
es
fists
jb
xchg
clc
stos
iret
pusha
xchg
pop
cmp
fildll
jbe
fisttpl
outsb
fists
fistps
loope
stos
pop
push
scas
mov
mov
mov
xchg
lret
or
mov
into
xor
movsl
negb
in
pushf
inc
enter
shlb
add
daa
cmp
cmp
fistps
push
and
je
nop
xchg
in
fwait
cmpsb
mov
add
pushf
cmp
repz
add
inc
repnz
pop
out
fnsave
and
push
aas
push
mov
xchg
iret
in
cltd
cmpsl
push
adc
push
dec
dec
dec
dec
pop
pusha
pusha
pusha
fwait
in
dec
push
push
inc
xchg
vmxoff
daa
daa
daa
pop
mov
and
xchg
negl
lcall
daa
jns
ds
mov
push
bnd
into
mov
mov
mov
daa
test
mov
ror
or
jns
loope
pop
icebp
outsl
stc
cmp
or
pavgb
repz
adc
fwait
jns
insb
jle
adc
scas
cmp
cmp
lret
add
pop
pcmpgtw
adc
add
pop
pop
xlat
into
push
push
pop
fsubrs
or
jne
fwait
movsl
scas
lods
push
pop
mov
mov
lahf
add
mov
xchg
adc
js
pushf
outsl
or
cmp
fisttpll
add
cmp
cmp
inc
or
dec
iret
repz
or
pop
dec
and
xchg
pushf
or
jae
xlat
stos
addr16
into
sahf
fildl
pop
out
leave
push
aaa
jns
push
jg
pushf
dec
jb
cmp
mov
popf
test
lock
inc
popf
dec
popf
lds
and
pop
xchg
add
in
mov
lahf
mov
xchg
out
add
aas
cmp
mov
rorl
int3
daa
in
or
fildll
add
push
mov
inc
pop
lods
inc
daa
nop
out
enter
pusha
mov
popf
pop
sahf
dec
cmc
sarb
pop
sahf
movsb
fildl
pop
lar
sbb
mov
sahf
das
sahf
aaa
sahf
aas
xchg
jbe
pop
inc
cmovg
xchg
iret
enter
cwtl
mov
sahf
in
cltd
or
sahf
mov
mov
push
add
jmp
pop
fistpl
out
sahf
ja
ds
or
movsb
dec
pop
sahf
or
das
aas
bound
lahf
xlat
rolb
pop
lret
lret
lret
lret
push
lahf
pop
lahf
addr16
outsl
lahf
xchg
cmp
enter
pop
cld
lret
jb
stos
pop
cvtdq2ps
fnstcw
add
push
fidivrl
lock
daa
xor
pusha
clc
xchg
mov
in
inc
ja
mov
mov
out
addr16
mov
and
inc
mov
incl
mov
mov
push
mov
fldt
jns
daa
fisttpll
fninit
ja
aam
into
icebp
and
mov
mov
sub
mov
cs
dec
inc
mov
pcmpgtb
lahf
pop
mov
pusha
mov
movd
jns
js
orb
xchg
or
cwtl
ds
iret
repz
mov
sbb
rcrb
enter
shlb
inc
push
leave
pop
mov
add
enter
inc
mov
or
mov
incl
pusha
push
pop
and
mov
mov
inc
mov
mov
rorb
enter
lret
sub
loopne
pop
or
mov
or
mov
mov
das
clc
add
xorl
cmp
jo
jmp
out
mov
mov
dec
xor
mov
nop
sets
push
mov
das
gs
inc
jo
mov
movsl
mov
cmpb
mov
enter
movsb
dec
and
mov
outsb
test
movsb
iret
jp
shrb
inc
andb
cmp
pop
mov
mov
clts
sub
mov
movsb
ret
jae
cmp
movsb
rcrb
ficoml
loop
repnz
ljmp
iret
push
add
cltd
dec
ss
mov
and
pop
push
pop
push
out
movsl
jbe
mov
mov
mov
movsl
incl
pop
mov
push
mov
lar
movsl
push
sahf
out
sahf
or
fucom
jns
aam
or
jo
lahf
push
lret
lret
inc
mov
movsl
pop
cmpsb
xsha256
cmpsb
adc
and
mov
pop
repnz
push
repnz
jne
das
cvtps2pd
or
bound
cmp
push
pop
insl
inc
pop
lds
cmp
je
pop
shlb
adcl
outsb
or
out
jno
decl
mov
mov
xchg
fcmovne
popf
movsl
shrd
iret
repz
int
insb
xor
int
mov
and
and
add
mov
push
dec
cmpsl
dec
mov
add
es
sub
jb
pop
xor
ja
enter
jae
daa
ficompl
fiaddl
in
adc
shlb
xorl
cmp
nop
test
arpl
js
shrb
test
imul
pushf
cmp
loopne
add
lock
or
jl
or
jmp
jmp
and
sub
pushl
and
sub
mov
out
push
jns
rolb
and
dec
push
push
aaa
subb
movsl
pop
mov
leave
and
je
jb
pushf
dec
test
mov
loopne
pop
call
js
iret
clc
mov
je
testl
jp
stos
lahf
sub
dec
je
stos
add
xchg
mov
insb
roll
stos
stos
xchg
push
sub
xlat
sar
cli
sbb
rol
and
push
mul
stos
out
stos
out
inc
pop
insb
xchg
stos
cmp
ja
cltd
in
xchg
stos
sub
push
loopne
add
fs
imul
jae
repnz
jnp,pn
orl
in
repnz
sahf
mov
es
mov
cmpsl
push
shr
jns
loopne
call
jb
dec
ret
aaa
and
lods
mov
pavgw
jb
lods
punpckhbw
lods
lods
setno
lods
mov
shrb
mov
mov
loopne
leave
leave
ror
fldcw
adc
adc
addr16
jbe
cld
add
lsl
stc
mov
cmp
in
dec
xchg
jno
pop
fildl
rclb
lds
xor
movsb
xchg
pop
loopne
dec
das
xor
mov
cmp
add
iret
push
dec
pop
push
vmread
or
sub
scas
push
lds
das
cwtl
add
test
out
add
sarb
pop
bswap
push
or
or
loopne
call
lret
xlat
js
scas
incl
scas
or
mov
mov
add
jo
ja
cmp
orb
sub
inc
pop
mov
dec
enter
scas
test
cmp
fwait
je
mov
add
daa
daa
iret
repz
add
jg
out
in
pop
push
xchg
push
or
cmp
leave
repz
or
push
pop
mov
mov
sub
dec
adc
in
loopne
repz
or
sub
jbe
fmuls
pop
inc
pmulhuw
in
dec
push
jne
in
in
mov
icebp
stc
jbe
xor
sbb
jns
out
test
sbb
in
enter
hlt
pop
xchg
out
jl
mov
push
and
out
repnz
dec
dec
push
fs
mov
push
pop
mov
pop
enter
mov
mov
xor
call
and
mov
mov
fwait
dec
dec
rorl
daa
adc
aas
addr16
and
jp
mov
dec
mov
mov
outsl
in
imul
leave
inc
repnz
or
leave
leave
leave
leave
mov
sahf
fcmovne
in
cli
mov
les
mov
mov
iret
fwait
je
mov
add
add
pop
push
popw
outsb
shl
iret
or
jle
js
mov
mov
pop
jb
add
cmpsb
mov
mov
daa
pop
dec
xor
fsts
pop
loope
jmp
icebp
pop
cmovle
mov
in
in
mov
mov
mov
mov
in
in
mov
mov
mov
mov
in
in
mov
mov
mov
mov
fsubp
in
mov
mov
push
pop
mov
sbb
jns
ret
sbb
sbb
fstpl
call
sahf
out
sti
and
mov
sahf
out
iret
push
and
push
and
and
sub
xor
cmp
jns
out
inc
or
jae
je
pop
cvttps2pi
xchg
addr16
cs
jb
xor
add
push
xchg
cmp
pop
mov
mov
inc
inc
mov
mov
enter
pop
jmp
add
dec
sahf
aaa
jb
mov
and
rorb
add
in
xor
and
int
mov
into
scas
iret
mov
daa
pop
das
nop
cwtl
mov
dec
dec
shr
add
sbb
ss
jne
cmp
daa
jge
jge
adc
fwait
cmp
in
lods
lgs
fnstsw
invlpg
sahf
cmp
dec
das
cmp
daa
mov
punpcklbw
and
es
repz
xchg
add
in
in
mov
aas
sahf
outsb
daa
cmpsb
mov
leave
xlat
sub
jns
mov
add
sub
jns
xchg
out
push
outsl
xor
sahf
ja
jg
xchg
xor
in
aaa
lahf
cmpsl
imul
jae
cmp
idivb
ja
cmp
clc
push
inc
jp
mov
sub
popf
int3
pop
mov
push
jns
fnstsw
xchg
add
and
in
sbb
rcrl
shll
mov
dec
mov
mov
and
adc
iret
repz
mov
add
popf
lods
pop
mov
je
into
ud2
test
daa
daa
out
cli
or
fistpll
cmp
iret
jae
adc
dec
push
daa
iret
jae
push
pusha
sbb
daa
iret
repz
jbe
orl
jae
cmp
mov
mov
fnstcw
dec
jae,pt
cli
mov
dec
mov
pushf
inc
mov
and
das
fsubp
movsb
add
mov
jmp
test
in
sahf
push
mov
mov
xchg
scas
aas
enter
fcomps
or
repz
ds
repnz
clc
nop
jg
in
mov
movups
adc
lar
into
repz
pop
sub
lahf
push
push
movsb
test
sbb
aam
jecxz
out
inc
sbb
pop
insl
xchg
add
xlat
ror
inc
jle
divps
enter
jnp
add
mov
fsubrp
and
aam
xlat
mov
add
jbe
jns
mov
cmpsl
sahf
pop
and
push
cld
stc
add
test
sar
shll
test
xlat
sarl
mov
pop
xchg
jb
xchg
pop
pushf
jg
pushf
fsubl
js
rcl
lahf
cmpsl
iret
leave
repz
scas
push
mov
call
fidivrl
loop
pushf
dec
ds
add
ret
inc
mov
ret
pop
stos
incl
popf
fmull
pop
pusha
xchg
pusha
jb
mov
rcll
xlat
mov
jb
mov
out
mov
ret
inc
sahf
xchg
xchg
out
testb
cmp
mov
sbb
and
sub
inc
inc
mov
ret
cmp
inc
ret
jg
xchg
mov
mov
ds
je
xchg
fdivs
cmp
mov
cmp
iret
add
jae
loop
add
cli
pop
ja
daa
add
pop
or
lahf
adc
adc
les
and
mov
outsb
push
inc
jg
push
add
cmp
iret
pop
add
fsubrp
jbe
pop
jge
test
decb
xchg
je
jns
or
fucomi
in
mov
shl
jb
cmp
fcoms
mov
add
or
adc
sbb
outsb
pop
leave
and
ja,pt
js
mov
push
pop
pcmpgtd
mov
cmpsb
fdivr
fidivl
add
xchg
cmp
mov
xchg
out
mov
out
test
fmull
pop
pushl
loopne
jnp
dec
push
add
mov
push
addr16
leave
inc
repnz
dec
fildl
mov
repnz
xchg
add
lods
out
ja
pop
and
add
and
out
inc
es
mov
je
dec
syscall
push
push
mov
insl
js
add
mov
cltd
movsb
scas
lret
pop
jp
mov
rol
lret
lret
lret
lret
fcmovnb
out
icebp
cld
lret
lret
lret
lret
pop
enter
enter
lret
lret
lret
xor
ds
enter
lret
pop
enter
pop
nopl
cmp
sbb
aas
sbb
jb
jb
sbb
push
adc
adc
subb
cmp
repz
leave
enter
xor
pop
adc
cmp
fisttpl
jge
ret
int
cmp
repz
cmp
cmp
idivl
out
cmp
aas
repz
repz
cmovo
inc
and
inc
push
inc
cmp
repnz
mov
inc
xchg
jmp
iret
jae
dec
test
popf
cmp
mov
mov
jns
out
loopne
jmp
popf
mov
push
add
or
out
cmp
pop
jb
je
inc
cvtps2pd
cmp
jb
outsl
jp
filds
pop
dec
popa
or
ror
in
cltd
pop
enter
fmul
js
sahf
aaa
loopne
add
lock
sub
push
xchg
lret
xor
adc
pop
cmpb
nop
aas
cwtl
push
pmuludq
aaa
out
inc
into
pop
sub
xor
cmp
adc
inc
dec
push
pop
push
sbb
repnz
push
sbb
test
sbb
and
dec
mov
dec
xchg
and
lock
clc
lret
add
jns
cwtl
mov
push
add
sbb
int3
mov
xchg
iret
or
repnz
inc
repnz
inc
fsub
int3
loopne
pop
add
inc
fs
int3
int3
int3
outsb
shrl
iret
add
leave
leave
leave
leave
mov
cmp
mov
or
lret
push
push
enter
fmul
add
sub
loope
int
xor
int
int
xor
xor
int
int
inc
repnz
fsub
imul
daa
jnp
orl
fwait
mov
cmp
xchg
xchg
or
mov
dec
outsb
mov
pop
fbstp
in
pushf
rcrb
or
push
into
daa
mov
in
into
sub
aaa
pop
inc
dec
cmp
daa
daa
pop
arpl
out
fs
jns
test
repz
push
movsl
mov
sbb
out
mov
pushf
je
out
fmull
sbb
daa
iret
jae
out
and
or
iret
jnp
iret
call
push
and
sub
repz
xor
aas
daa
dec
iret
sbb
daa
push
das
pusha
iret
jg
cwtl
jns
cmpsl
xchg
loop
iret
mov
sahf
out
add
add
mov
cmp
fstps
add
add
jns
cmp
add
jns
out
add
pop
sahf
out
sahf
add
jns
jbe
dec
syscall
or
jns
out
shrb
xchg
shlb
adc
cmp
repz
iret
repz
adc
adc
xchg
daa
daa
std
or
adc
iret
xchg
outsb
sbb
push
shrl
pop
movhps
push
pop
aas
mov
cmp
dec
and
push
and
and
daa
jbe
andl
leave
mov
add
mov
sub
hlt
subl
test
in
loop
repnz
in
out
shll
mov
roll
rcr
sarb
sbb
daa
das
xor
cmp
push
dec
dec
rclb
pop
aas
cmp
repz
or
add
inc
out
adc
dec
rolb
ja
repnz
loope
add
dec
testl
dec
mov
pop
and
iret
into
mov
shll
sarl
rcrl
enter
rcrl
rol
lea
jb
jge
mov
iret
outsb
mov
cld
adcb
call
mov
mov
add
aam
adc
sbb
push
mov
decl
shl
lret
lret
ffreep
aam
dec
aam
aam
mov
insb
aam
add
jbe
pop
invd
cwtl
mov
or
out
sahf
les
cmp
mov
pop
invd
adc
iret
xor
in
push
aad
push
sbb
ja
cmp
daa
xor
sbb
dec
aas
push
sbb
sbb
insb
push
ja
and
repz
and
mov
and
dec
push
push
aad
cs
sub
test
xchg
int
loop
aas
cs
call
lahf
enterw
psrlw
jl
xchg
sahf
out
ficoms
test
cmp
cmp
mov
daa
iret
jae
aam
or
and
add
or
pop
and
out
adc
aaa
adc
inc
cmovle
outsb
mov
xlat
arpl
outsb
dec
movsl
vmwrite
leave
repz
sbb
jns
leave
repz
cmp
cmp
shl
cmp
iret
es
sub
rclb
or
adc
iret
mov
fsubrs
das
xor
das
aas
in
in
daa
push
push
xor
vmwrite
dec
xorl
cmp
cmp
jmp
xor
add
push
leave
lea
xor
aas
addr16
dec
mov
xor
push
push
jl
add
aas
inc
push
push
inc
sbb
inc
push
push
lret
xchg
mov
or
popf
jbe
aaa
das
jns
rcll
cmp
push
add
xorl
jns
inc
into
or
mov
xchg
or
or
or
fnstsw
scas
adc
adc
mov
das
and
cmp
inc
push
addr16
das
push
femms
outsb
mov
push
mov
insl
push
and
sbb
push
pop
andb
fildl
aas
addl
sub
popf
movsb
fbld
sbb
pop
data16
out
or
lods
add
cmp
movsl
jmp
iret
repz
dec
inc
inc
cmp
sub
adc
cld
call
jns
lock
call
out
aam
daa
iret
repz
mov
mov
push
cwtl
nop
test
jns
out
pusha
pop
push
cmp
xor
lahf
xor
add
pusha
adc
jg
sbbb
mov
and
mov
mov
and
les
add
std
sub
xor
daa
nop
sbb
pop
dec
mov
add
into
sahf
jl
movsb
add
cmpsb
fisttps
mov
inc
sbbl
mov
fisubl
inc
mov
pop
inc
mov
iret
mov
jmp
call
adc
std
xchg
jl
push
ficompl
mov
xor
fcomp
loopne
mov
mov
xor
div
inc
adc
adc
sub
pop
add
fcompl
inc
hlt
cmc
shlb
mov
daa
pop
rcl
fnstsw
pmovmskb
add
bound
and
pop
adc
aaa
movups
inc
lock
stc
mov
test
push
adc
out
out
sahf
cmpsl
adc
jns
sbb
add
cmp
sarl
sbb
repz
dec
pop
ds
pop
mov
mov
js
jne
repz
ljmp
cmp
lcall
aam
lcall
mov
jl
insb
icebp
sahf
icebp
aas
test
inc
scas
mov
js
aaa
jmp
add
and
or
adc
xorb
push
cmp
push
push
pop
inc
jmp
add
inc
push
loopne
subl
inc
mov
xor
pop
inc
stos
jge
movsb
imulb
pop
xchg
dec
stos
insl
jg
out
cs
ljmp
add
shll
add
mov
test
pop
mov
inc
lret
xchg
es
add
sbb
js
add
adc
and
cmp
jnp
push
ds
or
xlat
jl
call
clc
add
pop
mov
adc
lock
push
or
out
jns
imull
or
or
pop
lock
jnp
out
add
call
cmp
repz
push
rclb
enter
repz
and
and
repz
mov
or
push
cmpsb
clc
imul
jg
movups
daa
xor
fwait
dec
in
inc
cmpsb
cld
xorb
outsl
in
add
iret
jmp
stc
idivb
cmp
pop
js
iret
repz
mov
repz
push
dec
insl
add
xor
shll
ja
mov
out
sbb
dec
insb
pop
push
add
dec
repnz
mov
add
in
inc
pushf
or
ret
psubw
pop
in
hlt
adc
mov
lret
mov
mov
ret
inc
and
sahf
mov
sub
lods
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
incl
adc
mov
decl
js
inc
outsl
loopne
jmp
call
imul
divl
jl
mov
popf
sti
jmp
stos
push
inc
mov
push
sub
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
dec
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
pushl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
or
add
aas
jno
or
mov
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
incl
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
ljmp
xchg
cmp
push
mov
xchg
aas
inc
jg
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
pushl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
hlt
jmp
push
ja
call
cmp
jp
and
cmp
mov
cmp
jg
cmp
fmull
call
cmp
test
pop
mov
jne
ljmp
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lcall
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
shrl
frstor
enter
pop
inc
inc
je
inc
inc
push
dec
dec
in
je
jnp
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
pushl
xchg
fs
xor
fdivrl
jmp
rclb
mov
incl
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
call
aam
movl
imul
std
in
leave
mov
add
insb
push
arpl
jmp
psubd
or
outsb
cmp
imul
addr16
add
aam
dec
jg
std
test
movsl
cli
test
xor
leave
mov
insb
fdivs
jne
mov
inc
iret
or
shrl
push
ficoms
push
xlat
enter
mov
mov
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
xchg
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
gs
decl
mov
push
movsl
in
lahf
xor
mov
js
stc
call
cwtl
push
loope
or
insl
or
pop
arpl
hlt
call
imul
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
pop
ja
fdiv
popa
mov
into
pop
cmp
xor
aam
movsl
fisttps
fadd
shll
jmp
outsb
xor
incl
lods
sarb
add
in
add
pop
dec
or
cmp
add
daa
call
adc
mov
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
jmp
cwtl
shlb
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
decl
mov
lcall
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
ljmp
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
pop
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
fmuls
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
sar
lret
sbb
outsl
and
ja
int3
add
mov
das
ljmp
sar
push
mov
or
add
mov
cmpsl
call
ret
ljmp
rcl
scas
fldcw
ret
es
pushf
mov
ljmp
test
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
pushl
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
ficompl
int
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
mov
push
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
out
rorb
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
mov
shrl
or
inc
call
aaa
pusha
mov
fidivrs
mov
jmp
inc
sbb
mov
lret
mov
cmpsb
mov
call
mov
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
filds
sub
or
pop
push
adc
daa
iret
pop
push
dec
push
jns
js
popl
aad
push
xlat
out
sahf
out
fcmovnu
xchg
out
sahf
fstp
loop
in
jns
out
call
out
sahf
in
in
repz
cmc
idivb
out
idiv
stc
cli
sti
mov
daa
adc
push
mov
inc
cmpsl
movsl
adc
test
mov
fs
movl
dec
bound
add
ficoms
lds
bound
push
dec
addb
call
inc
mov
xchg
pop
in
cltd
out
and
inc
push
lods
enter
inc
jns
idiv
push
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
xor
xor
bound
xlat
sahf
xchg
and
push
inc
jbe
pop
insb
imul
push
insb
gs
testb
xor
inc
fs
push
inc
fs
adc
rorb
popa
or
fs
push
pop
or
ss
jbe
or
fs
scas
add
and
push
addb
je
test
push
dec
jno
aad
js
arpl
push
add
inc
xor
insb
popa
jns
cmp
cmp
insb
cltd
popa
adc
fadd
xchg
cmp
je
push
movq
jge
pusha
pop
add
or
cltd
and
jae
adc
int
dec
mov
pop
pop
inc
aas
mov
pop
inc
inc
mov
sbb
inc
jg
add
jo
inc
inc
shlb
push
ds
mov
scas
add
mov
iret
int
push
dec
cmp
inc
xor
xor
andl
lods
pinsrw
insl
lods
mov
xor
mov
lret
pop
xor
jne
xor
or
add
ss
clc
xchg
lret
out
pop
jo
dec
inc
mov
or
inc
cmp
adc
in
scas
cltd
dec
lods
push
push
shlb
add
or
or
mov
xor
leave
xor
fwait
mov
mov
rcrl
xlat
mov
add
mov
and
jb
push
rorb
adc
addb
jo
lahf
push
sbb
test
dec
outsl
adc
shll
jno
stos
mov
push
dec
xor
nop
test
mov
out
add
mov
arpl
sbb
mov
mov
addr16
push
loopne
dec
xchg
insb
jns
or
and
das
inc
jb
push
cmpsl
mov
je
inc
outsl
roll
adc
mov
aas
inc
mov
inc
push
bound
ja
mov
popf
pop
inc
jbe
xor
dec
pop
push
jg
push
dec
xor
mov
jecxz
int3
lcall
add
lock
inc
add
or
push
add
ss
cmpsb
inc
or
sahf
lods
inc
outsl
pop
dec
pop
mov
inc
dec
dec
cli
or
inc
adc
daa
push
rorl
aas
sbb
sbb
push
mov
push
inc
dec
pop
cli
mov
sub
push
jns
arpl
je
cltd
xor
pop
pusha
in
add
aaa
dec
adc
repnz
pop
inc
test
mov
enter
idivl
add
inc
mov
test
and
inc
adc
add
bound
xchg
jbe
mov
push
xor
fdivr
loopne
enter
and
mov
add
add
add
filds
add
or
pop
pop
push
or
or
or
or
or
add
push
adc
push
adc
push
fidivrl
sbb
adc
adc
adc
add
data16
cld
sub
outsb
or
rolb
in
aaa
cmpsl
add
add
add
add
adc
add
les
add
jne
jno
mov
cmpsb
loopne
mov
add
or
call
adc
xor
adc
pop
and
xor
inc
mov
adc
xor
addb
adc
and
subl
and
pop
add
pusha
push
inc
add
inc
or
adc
add
sbb
incl
scas
xor
add
pushf
add
stos
add
pop
incl
jmp
scas
cmp
adc
push
adc
pop
popa
jno
sar
out
and
adc
xchg
mov
lock
pop
stos
and
loope
icebp
mov
mov
inc
roll
inc
lock
mov
fiaddl
or
jg
or
js
xor
sub
rcr
push
inc
cli
or
xchg
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
mov
cli
incl
inc
or
pop
les
fsts
dec
add
mov
mov
cmp
ja
out
cmp
xor
and
shll
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
in
addb
pusha
add
std
or
ljmp
add
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
std
jmp
lahf
mov
movsl
jecxz
pop
mov
dec
fs
clc
cmpl
jg
or
insb
ljmp
or
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
fs
jg
shll
pop
pop
mov
popl
movb
xchg
sbb
decl
scas
adc
mov
xor
lods
scas
xchg
test
aam
and
sbb
call
mov
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
ss
push
in
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
pushl
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
outsl
jg
testb
push
sahf
pop
clc
sti
jg
jno
lock
jg
in
call
sarl
xor
hlt
and
xchg
jmp
sbb
subb
mov
loope
out
pop
jb
mov
mov
mov
sub
pop
mov
jl
push
jo
lock
adc
stos
div
mov
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
testb
inc
push
in
sbb
scas
fadds
in
sub
jbe
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jmp
outsl
sbb
jb
adc
push
lock
lods
jp
testb
sbb
idiv
inc
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
jle
decb
xchg
in
add
inc
adc
loope
fisttpll
mov
icebp
aas
std
cli
push
push
push
idivl
fstpt
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
ljmp
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
sti
stos
adcb
js
jmp
xchg
pop
clc
pop
hlt
divb
stc
add
xlat
call
lea
jg
gs
std
xorb
jg
aad
adc
js
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
ljmp
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
incl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
imul
pusha
adc
and
sbb
xchg
jo
and
out
test
jae
push
dec
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
call
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
loopne
ficoms
xchg
or
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
fildl
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jg
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
das
add
ja
xor
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
scas
ss
out
jae
shrb
shlb
out
aas
stc
add
pushl
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
cld
xor
cmp
fmull
enter
iret
in
lret
mov
pop
mov
sub
fldt
pop
mov
dec
incb
fisubrl
aas
mov
or
cld
pop
sti
add
pop
ret
cmpsb
push
pop
jg
add
out
pop
jg
mov
aad
test
mov
mov
fistpll
aas
iret
push
jbe
push
sbb
stos
icebp
pop
incb
pop
out
dec
jno
adc
push
inc
jecxz
sbb
sarl
repnz
jg
adc
loopne
sar
adc
paddsw
lahf
xor
imul
dec
sahf
cmpl
mov
aas
mov
fsubrl
orb
and
jg
ret
push
clc
xchg
pushf
mov
repnz
loope
cld
push
and
mov
adc
inc
aas
push
rcrl
lahf
loope
pop
rolb
pop
inc
jb
fistpl
adc
call
jno
repz
fbld
nop
mov
inc
sti
arpl
daa
std
or
sbb
lock
jg
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
ds
fistps
lds
fidivrl
jg
stos
pop
ds
ljmp
add
dec
mov
sub
jge
xor
lahf
les
sbb
incl
cld
addl
sbb
mov
lahf
outsl
imul
clc
int3
push
sbb
pop
xchg
incl
test
bound
pop
outsl
xchg
inc
test
jg
loop
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
pushl
jp
adc
lahf
mov
or
out
lcall
jle
pop
shl
cld
mov
adc
stos
pop
jg
pop
sar
jmp
fildll
rcl
jg
adc
xor
pop
rcr
dec
mov
gs
decl
movsb
idivl
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
jmp
imul
or
inc
pop
xor
rorb
and
add
lret
xchg
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
mov
or
and
xchg
fidivrs
mov
insb
test
aas
repz
outsl
lock
outsl
push
paddsw
pop
stc
out
mov
clc
push
std
mov
je
icebp
or
mov
lcall
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
std
insl
and
hlt
out
rolb
pop
or
or
sti
xor
dec
ss
lods
movsb
or
incl
pslld
pushf
imul
jl
in
add
imul
out
scas
cli
pop
in
cmp
jmp
mov
sub
ljmp
lock
jmp
hlt
dec
mov
xlat
inc
jo
inc
aas
mov
jg
mov
sub
outsl
mov
or
daa
jp
std
adc
cltd
or
mov
ret
das
ret
nop
cmp
das
incb
lock
pop
pop
div
cld
adc
push
mov
js
fs
sbb
stc
lahf
loope
jae
jmp
push
das
je
jge
pop
jb
out
xchg
add
out
icebp
mov
loope
mov
jle
insb
sbb
fbstp
cmpsb
bound
das
hlt
mov
out
es
call
xor
decb
pusha
xlat
pop
push
adc
mov
and
call
or
iret
and
mov
cmp
int
add
push
pop
aaa
std
js
dec
enter
inc
sbb
mov
mov
aas
icebp
ret
xor
or
ror
sbb
aaa
inc
pop
lds
ficoms
shrb
mov
pop
push
inc
mov
loope
mov
lahf
jp
dec
leave
push
test
add
xlat
jmp
fildll
fimull
iret
fdivrl
xchg
lcall
xor
decb
push
xor
gs
inc
sub
sti
sarl
pop
out
jg
jno
ret
fs
dec
push
dec
cmp
inc
lcall
ficompl
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
ljmp
or
sbb
xchg
imul
jmp
outsl
jmp
push
cmp
std
mov
daa
jmp
faddl
mov
addb
outsl
mov
push
imul
pop
stc
push
dec
out
fstpt
adc
xchg
pop
push
adc
rolb
push
sar
push
out
daa
icebp
push
lahf
sti
inc
pop
imul
cmpsb
scas
call
insl
addr16
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
add
add
sti
push
sti
pop
inc
push
xor
stos
dec
push
mov
push
cmp
bsf
popf
int3
pop
iret
and
add
repz
jmp
adc
in
jne
xlat
mov
fnstenv
mov
jmp
in
jg
movsl
call
dec
mov
cmc
add
nop
mov
push
sar
iret
jmp
xchg
or
lcall
xchg
or
lahf
shl
inc
rcr
sbb
in
inc
fiadds
sbb
je
call
or
push
lea
lods
push
push
jmp
and
dec
xor
or
sbb
jns
arpl
mov
add
int3
jne
incl
mov
and
dec
imul
sub
imul
and
inc
clc
cwtl
rorb
std
repnz
test
xor
loop
mov
push
orl
cmp
sbb
call
daa
andb
int
ja
clc
mov
inc
pop
jge
loopne
lea
xchg
ljmp
dec
sub
mov
cmp
test
adc
cmp
dec
test
pushf
incl
sti
push
mov
movsl
dec
and
addr16
push
sti
call
dec
pop
repz
push
dec
incl
sbb
clc
pushf
mov
mov
jae
fstpl
cld
sbb
mov
movsb
fwait
lahf
mov
jmp
cmpb
mov
sti
cs
dec
adc
ljmp
out
outsb
pusha
inc
fidivrs
lret
fistpll
push
fs
push
cmp
in
mov
in
call
cli
push
cmp
inc
mov
fwait
or
loope
fstps
fnstenv
leave
mov
incl
fwait
clc
xor
xchg
sub
out
adc
sbb
ljmp
adc
rcll
mov
int
test
gs
pop
jecxz
xchg
mov
lahf
fstps
das
out
hlt
jecxz
pop
loope
ret
call
dec
fnstenv
dec
scas
xchg
insb
test
in
hlt
and
cli
xchg
jg
sub
es
adc
mov
nop
aam
out
pusha
cmp
es
jno
movsl
es
push
scas
addb
shrb
lcall
fdivr
jg
pop
jmp
mov
scas
dec
xor
sub
jg
mov
pop
incl
and
fisubl
fwait
cwtl
inc
push
jbe
jmp
mov
sub
incl
mov
adc
aas
fadds
addr16
ljmp
mov
ljmp
push
dec
lret
xchg
and
adc
ret
outsb
cmpsl
mov
inc
orb
inc
ss
mov
jmp
sbb
jg
lahf
inc
inc
sub
inc
mov
imul
mov
push
jbe
loopne
decl
dec
shlb
sub
adc
mov
rclb
push
pushl
mov
lret
test
xor
push
push
lea
hlt
inc
ljmp
cmpsb
addl
inc
std
stc
loop
sub
test
add
test
ljmp
psllq
into
lret
icebp
xor
xor
call
dec
lods
es
dec
testb
xchg
mov
cli
push
aam
push
inc
push
xor
ficoml
call
and
xchg
or
adc
mov
push
aaa
test
and
mov
pop
std
pop
mov
pop
sar
sub
shlb
push
fs
imul
testl
call
outsb
sahf
dec
int
lods
lock
add
cmp
jecxz
cmpsl
sub
xchg
arpl
sub
decl
mov
mov
imul
sbb
sbb
sbb
rcrl
xor
pop
jl
mov
sub
in
std
push
jle
cmp
test
pop
out
lock
fistps
jmp
shrb
xor
sahf
scas
outsb
loop
dec
lret
jg
mov
gs
pusha
lock
decl
pop
test
mov
push
fistpll
int
mov
lcall
ljmp
mov
adc
es
dec
mov
inc
push
ud0
call
movsb
fdivl
xor
ret
mov
in
insb
add
test
jge
inc
pushl
decl
hlt
fsubp
mov
adc
cmp
js
call
mov
nop
push
rorb
clc
pushl
dec
cli
mov
rcl
incl
test
fists
mov
test
ljmp
sub
jmp
jge
lods
fcoml
outsl
lds
adc
xor
add
inc
fidivs
das
mov
in
mov
push
or
add
loop
jno
shll
cmp
jmp
sub
sbb
push
and
cmpsb
das
fidivl
cltd
imul
rcr
movsl
adc
inc
xor
mov
call
lretw
orl
or
test
movsb
das
sbb
mov
mov
das
enter
or
in
mov
loopne
adc
xlat
movl
daa
out
in
stos
add
rcl
rcrb
fsubl
incl
andnps
push
ljmp
outsb
in
leave
aaa
pushl
ficoml
pop
cs
mov
out
fwait
mov
lcall
dec
jbe
stc
int3
pushf
enter
popa
mov
push
test
out
cld
and
lcall
and
dec
pop
pop
das
dec
xbegin
in
not
in
jae
push
jnp
jns
jnp
pop
push
decl
sbb
xor
std
stos
inc
into
clc
sbb
fcmovnb
nop
cmp
add
xor
shrb
inc
pushl
lods
test
xor
add
aam
xor
cmc
in
fsubs
and
je
insl
test
fildll
lcall
mov
sbb
das
add
sub
jmp
adc
xchg
shl
jmp
pop
in
shrb
xor
inc
mov
iret
jl
aas
clc
in
test
filds
cmpsl
or
fstp
sbb
mov
sti
aad
les
outsl
xor
lock
mov
ss
mov
xchg
dec
cmp
jmp
leave
in
pop
jnp
xchg
hlt
pop
mov
gs
xor
xchg
fsubr
sub
imul
cli
incb
lods
stos
leave
call
and
jbe
std
pop
aaa
and
in
mov
ret
lods
xor
or
sub
push
enter
aad
mov
in
jae
aad
jmp
ljmp
ficoms
arpl
ffree
int
das
fmul
jne
jne
imul
pop
xor
loopne
adc
popa
or
mov
call
mov
or
cltd
gs
add
loop
movsb
mov
shr
push
test
mov
sar
push
jnp,pn
cltd
mov
push
push
push
pop
int
fdivrl
mov
push
call
andl
and
fcomip
lcall
lret
ljmp
adc
mov
ss
lret
ljmp
das
lock
push
dec
jne
or
arpl
insl
call
js
inc
cli
dec
clc
mov
enter
idiv
sbb
push
out
mov
notl
repnz
outsb
out
aam
xor
incl
sbb
mov
inc
push
inc
faddp
fmull
jmp
mov
jge
jns
in
loopne
rolb
xor
faddl
mov
cmp
std
push
xchg
mov
dec
lret
mov
mov
jmp
mov
call
cld
pop
add
fs
pop
notb
mov
rcrl
push
mov
dec
adc
dec
test
incl
push
mov
lahf
stc
add
sub
pop
popa
and
mov
lea
cltd
lret
outsb
call
aaa
sbb
roll
mov
mov
scas
andb
mov
daa
incl
cld
push
outsb
fsubs
bound
xchg
sub
mov
in
dec
je
outsl
dec
fwait
test
in
out
add
jbe
xor
pop
lock
xchg
mov
cmp
mov
dec
xor
add
data16
ret
sbb
scas
enter
cmc
scas
popf
vprotq
ljmp
lods
rorl
cmpsl
cwtl
hlt
inc
nop
sub
in
mov
fidivrs
notl
sub
push
ljmp
pop
mov
mov
mov
shrl
sbb
jle
push
out
ret
push
pushf
mov
lock
pushl
fxch
pop
mov
and
fwait
jmp
decl
cmc
rcl
or
jp
jnp
xchg
jmp
push
scas
mov
sbb
xlat
ss
scas
insb
and
in
and
std
cmc
pop
pop
push
insl
call
fsub
cmp
sbb
scas
cli
mov
mov
addb
call
and
or
sbb
test
call
mov
inc
data16
and
gs
cld
push
in
mov
lcall
add
daa
cmp
jge
and
cli
or
jg
dec
pusha
push
dec
mov
add
call
lret
jl
nop
inc
hlt
insl
aaa
jl
push
ljmp
xchg
rorl
int
ljmp
sub
popa
in
mov
cs
mov
cmp
incl
lret
mov
jmp
js
insl
ss
cld
cli
mov
jp
mov
imul
sarl
jb
mov
fidivl
jne
sahf
aad
dec
jmp
ljmp
inc
pop
xchg
insb
inc
jo
xor
pop
mov
scas
mov
test
jmp
push
js
pushf
js
xlat
loop
push
dec
lcall
cltd
jg
pop
xchg
mov
gs
and
jno
inc
outsl
xor
cli
clc
iret
ss
std
jmp
int3
cmp
add
js
and
dec
mov
pushf
dec
notl
xor
pushl
jnp
and
push
pop
gs
les
loope
pushl
pop
andl
call
push
insl
mov
rcrl
mov
push
aas
sbb
jo
in
jmp
repnz
out
cli
call
cmp
cli
dec
xchg
addr16
lods
jmp
out
jecxz
adc
vmaxsd
add
sbb
cltd
mov
dec
shlb
addr16
sbb
mov
sub
xlat
pop
icebp
insb
aam
sahf
inc
xor
inc
movsl
mov
movups
int
lcall
sbb
mov
jae
add
es
jp
dec
int
lahf
add
repz
mov
jo
std
fistpl
insb
push
int3
movhps
or
mov
cmp
loope
lcall
xchg
orb
lcall
mov
ljmp
lcall
fisttpll
testl
decl
es
push
and
mov
xchg
movsl
in
jae
dec
test
fnstsw
lea
dec
fidivrl
ja
movsl
dec
inc
repz
pop
and
push
inc
decl
movaps
testb
test
mov
pushf
and
lret
cmp
pop
add
sub
fcmovu
inc
jg
mov
xor
cmc
sub
push
paddq
jo
leave
jbe
rcll
push
jg
inc
nop
and
daa
mov
xchg
push
or
out
inc
outsb
mov
add
adc
dec
dec
push
cmpsb
xchg
nop
pop
je
xchg
inc
add
mov
call
inc
jl
mov
popa
pop
clc
mov
xchg
and
lret
arpl
sahf
cmc
inc
addr16
bound
in
incl
pop
out
mov
stos
inc
mov
xchg
inc
adc
fmuls
jg
dec
mov
inc
hlt
mov
in
jp
add
sti
xchg
sbb
in
xchg
pushl
test
sub
fcoml
mov
lea
jge
rol
std
decl
lahf
sub
xchg
mov
pop
sbb
jns
repz
repnz
movb
mov
mov
xchg
pop
and
push
popa
es
out
incl
xor
lods
jae
xchg
cmp
fiadds
aaa
xchg
cld
insl
push
xchg
or
mov
lea
or
cmp
ljmp
stos
loop
out
clc
mov
dec
ret
in
icebp
stos
imulb
inc
outsb
notl
bnd
mov
call
in
inc
lds
mov
loop
mov
mov
push
insl
push
lahf
dec
sub
decl
loopne
push
xor
and
test
mov
add
mov
lds
out
jne
fcomip
dec
outsb
and
cld
std
or
imul
fdivl
jg
sbb
jle
orb
lock
pop
pop
stos
mov
pop
lock
jnp
inc
add
ljmp
or
fbstp
aas
jns
dec
xchg
lcall
int3
xor
sub
rcrb
lcall
adcl
sarl
movsb
addr16
aaa
stc
cltd
mov
outsl
push
call
pusha
xor
and
cltd
jno
mov
push
mov
cwtl
mov
sub
push
fcomip
pcmpeqd
iret
sbb
push
loope
adc
out
mov
jmp
inc
pushl
xchg
imul
adc
test
inc
scas
ljmp
jmp
repnz
arpl
mov
les
sbb
add
adc
daa
enter
ljmp
dec
mov
out
jne
sbb
test
faddp
cltd
sbb
pushl
xchg
stos
pop
jno
dec
out
or
loopne
push
fs
rclb
das
sub
stos
pushf
lcall
movsl
xchg
jne
test
icebp
push
xchg
dec
fdivrl
jne
shr
fnstsw
gs
fcmovnb
pop
clc
pop
mov
call
out
int
adc
dec
jge
sub
jp
sub
bound
cmpsl
loop
into
movsl
into
outsb
lcall
mov
xor
out
fmull
test
lcall
inc
test
mov
aas
mov
push
push
pop
js
or
lds
jecxz
mov
lahf
jg
mov
push
out
stc
lock
cmp
shll
dec
dec
xchg
mov
pop
pop
inc
stos
jno
adc
pushf
movsl
cmp
fcompl
lods
cmp
aaa
cld
ljmp
jmp
push
pop
ja
mov
or
sbb
jno
add
scas
add
xchg
cmpsl
lcall
xchg
adc
shl
insb
push
gs
js
jle
test
mov
pusha
push
lcall
and
dec
push
push
fadds
dec
test
popa
int3
aam
jl
push
std
sbb
pop
icebp
pushl
test
dec
imul
mov
flds
std
ljmp
fstpl
jnp
cmp
stc
ret
hlt
pusha
inc
pop
mov
add
mov
stos
pop
xor
mov
cmp
push
cmp
add
sbb
xchg
sub
jmp
in
call
nop
movsl
in
jl
push
scas
mov
push
adc
mov
xor
sbb
push
jp
cmc
movsb
mov
push
sub
inc
ss
mov
fxch
mov
lret
inc
adc
xor
jb
pushf
xor
outsl
cmpsl
add
sub
lcall
xorl
mov
adc
jns
out
mov
fcomip
sarl
push
mov
dec
pop
ret
sbb
out
cmpl
ljmp
std
xchg
adc
aad
jo
adc
add
cmp
ror
ja
mov
decl
stos
push
adc
mov
loop
jae
shlb
jnp
sbb
push
sub
addr16
hlt
cmp
sbb
dec
inc
push
outsl
dec
mov
sub
ljmp
jmp
cmc
jnp
les
pushf
adc
ljmp
sti
icebp
scas
lods
jp
cmpl
outsb
push
inc
vhsubps
mov
mov
fwait
jecxz
loopne
xor
js
cli
ret
xor
ljmp
xorb
xchg
sbb
and
ja
in
pop
xor
in
mov
mov
mov
scas
adc
mov
fmul
scas
clc
fnstsw
in
and
mov
xchg
loop
inc
sub
std
xchg
cmp
loopne
push
aaa
rolb
js
je
mov
jmp
pop
aad
mov
loop
push
pop
ret
jo
sub
push
jno
sub
sar
pushl
std
cmp
stos
adc
leave
cmc
dec
jmp
xor
mov
incl
push
sub
rclb
pop
mov
mov
sti
lcall
jmp
shrl
xchg
mov
push
mov
sbb
repnz
push
imul
ljmp
out
lods
enter
ds
insb
stos
ds
mov
sub
cli
popf
xor
dec
add
cmp
cmpsl
mov
loope
inc
xchg
dec
cmpsb
or
lret
adc
test
pushl
iret
fmuls
ja
dec
cwtl
adc
negl
pop
out
ret
add
push
push
jmp
push
stos
mov
sub
jl
mov
jl
shrb
xchg
daa
xchg
decl
xchg
pop
mov
repz
pusha
das
cmp
jne
push
mov
test
ljmp
dec
add
andb
rorb
push
pop
call
les
aaa
cld
fwait
in
jno
lods
mov
enter
addb
ljmp
inc
rcrb
ljmp
addr16
addr16
mov
mov
sbb
and
adc
aas
in
es
je
mov
dec
lods
push
incl
pop
xor
sti
sub
xlat
inc
sbb
xchg
aam
mov
adc
dec
mov
incl
ror
sub
psllq
lret
sub
cmp
push
nop
mov
jge
jg
dec
and
mov
sbb
pop
push
stc
mov
fcompl
inc
in
inc
and
add
push
and
in
addb
cmpsl
aad
adc
dec
inc
sar
xor
clc
mov
jmp
mov
out
and
sarl
pop
cmp
push
jg
pop
mov
and
lret
and
push
out
ljmp
mov
pushl
lock
xchg
shrb
mov
pop
pop
mov
jnp
out
mull
mov
jl
sahf
xchg
pop
xchg
lahf
test
cmpsl
dec
jge
fldcw
call
in
xchg
call
adc
imul
fcomps
pop
pushf
lahf
xor
and
add
adc
mov
stc
mov
inc
imul
pop
add
push
imul
sub
ds
pushl
mov
pusha
adc
jo
daa
xor
and
add
iret
sbb
push
lcall
sahf
and
rep
and
je
jae
xor
and
dec
outsb
cmpl
jmp
fstps
sar
scas
inc
xchg
mov
xor
sbb
pop
inc
adc
jmp
cld
sbb
fs
pop
cmpsl
lea
ljmp
or
sbb
sub
dec
pusha
mov
lods
pop
loop
imul
dec
push
aaa
push
ljmp
pop
inc
and
aam
or
mov
mov
loopne
xchg
aaa
cmpsl
lcall
sti
scas
jmp
outsl
jl
xchg
and
adc
les
mov
jle
cmp
call
mov
jns
lret
test
jae
add
mov
cltd
in
pop
neg
xchg
hlt
lods
fists
mov
fcmovbe
sub
hlt
pop
mov
mov
pop
fs
leave
ljmp
fwait
out
add
jno
and
shufps
mov
incl
scas
ljmp
and
and
shlb
lcall
fwait
cmc
arpl
mov
push
cmp
imul
test
idiv
pushf
push
idivl
lods
aas
scas
negl
std
jmp
test
or
jge
iret
dec
mov
mov
sti
push
and
lock
movsl
pop
mov
test
out
js
jno
shl
jno
mov
sahf
jg
scas
cli
or
icebp
sub
cmp
mov
scas
sti
jne
call
push
loop
dec
mov
popa
mov
xlat
add
mov
mov
jmp
out
and
xchg
and
paddusb
cmp
cld
mov
mov
inc
add
sbb
aam
mov
ficomps
xchg
popa
cmp
dec
aaa
std
lcall
mov
test
js
dec
jo
fcmove
xchg
cld
loope
xor
xlat
fcos
mov
arpl
jmp
call
pop
fisttpll
xlat
out
loop
lret
les
mov
adc
push
call
mov
sbbl
jbe
aam
push
cld
call
cmp
pop
push
fs
cmp
loopne
int
mov
adc
pop
mov
sbbb
dec
clc
mov
dec
mov
popf
mov
cmc
das
mov
adc
cmpl
fcomp
pusha
std
pushl
sub
in
mov
aad
add
dec
push
popa
cmp
fucomp
adc
cli
mov
xor
adc
imul
mov
fwait
repnz
xor
das
es
sbb
repnz
mov
adc
pushf
pop
gs
cmp
jo
jmp
sub
add
je
std
jl
sub
popf
std
in
dec
xor
repnz
stos
test
mov
push
imulb
sbb
xchg
rorl
call
vsqrtps
sahf
mov
xlat
bound
in
jae
lret
xchg
xchg
pop
mov
lret
pushl
getsec
sarb
jg
cmpsb
mov
test
sbb
inc
rorb
lcall
jle
adc
cs
xor
cmp
insl
push
dec
or
ret
lds
mov
decl
add
or
inc
inc
dec
cld
pop
mov
push
fistpl
call
dec
lods
je
mov
pop
test
loopne
aas
stos
mov
fstpt
cltd
add
in
and
in
jmp
and
in
inc
inc
xchg
test
or
jnp
call
pop
and
cltd
push
mov
mov
hlt
xor
mov
mov
jo
data16
incl
fisubrl
inc
and
repz
jge
cmp
repz
in
mov
cmp
int
hlt
gs
subb
add
aaa
push
inc
gs
push
frstor
sbb
jg
inc
cli
dec
mov
test
jle
push
lahf
or
movsl
insl
std
jecxz
dec
and
push
notb
sbbl
fisubrs
je
adc
push
xchg
loopne
pop
jb
adc
sub
cs
mov
loopne
insl
insb
test
cli
cli
jo
lret
fsubp
and
mov
mov
fcomp
mov
pushl
xor
lahf
push
dec
test
movsb
ffreep
lret
out
bound
aad
adc
std
jle
and
lods
sub
enter
cltd
je
mov
es
mov
pop
jae
add
dec
mov
pushl
inc
adc
fldenv
inc
lcall
or
xor
mov
lcall
mov
xchg
push
jp
sbb
mov
dec
ljmp
sub
and
frstor
nop
mov
das
iret
rcll
push
mov
shl
leave
inc
jb
lods
mov
div
adc
jecxz
lcall
mov
cmp
mov
xor
ds
mov
inc
sti
jmp
ss
and
mov
imul
mov
push
pusha
pushf
inc
xchg
lds
and
cli
and
jge
push
or
lcall
cwtl
xchg
sub
xchg
jno
rolb
fnsave
add
fistps
call
xchg
xor
sbb
sbb
fmulp
repnz
sub
js
fsubrs
imul
ljmp
jmp
jne
cwtl
dec
and
jg
mov
popf
jle
push
lds
pop
push
adc
adc
or
xor
mov
or
ljmp
stc
and
pop
lahf
repz
mov
rcrl
or
lock
loope
sbb
loop
pushl
shrb
and
scas
mov
add
ret
or
leave
lret
pop
mov
daa
mov
in
cmovnp
mov
mov
cli
loopne
std
insb
int
push
lret
pushl
and
or
popf
jbe
jp
xchg
hlt
mov
mov
push
mov
inc
mov
or
or
lcall
xor
test
dec
subb
mov
pop
sbb
cld
cmc
sbb
and
pop
aam
pop
adc
xor
xchg
lret
std
pushl
dec
lds
mov
mov
stos
lcall
cmpsb
cmp
adc
push
movsb
shll
xchg
inc
and
stos
add
cmpsl
int3
sub
mov
sbb
xor
pop
lods
clc
ljmp
jbe
mov
test
push
sahf
pop
inc
add
decl
ljmp
cmpsl
sub
jmp
jg
popf
aaa
mov
addr16
ljmp
lods
out
jno
pop
mov
pop
fdivl
ljmp
jb
lea
cli
mov
insb
cmp
and
and
mov
push
mov
ljmp
inc
add
hlt
cwtl
outsl
push
sarl
sbb
cs
cmpl
pushl
fndisi(8087
mov
jg
pushf
xor
dec
cmpsb
jg
xor
sbb
cmp
inc
cmpsb
push
shrl
neg
mov
xchg
mov
scas
mov
xchg
outsb
hlt
pop
add
fsubr
lahf
push
inc
jnp
movsb
or
incl
int3
in
stc
xorb
lahf
xchg
ds
pop
lds
jg
cmc
jl
nop
xchg
shll
fwait
xchg
inc
and
adc
dec
mov
jmp
out
ret
jmp
pop
pop
adc
and
decb
mov
clc
mov
popa
ljmp
cli
fwait
mov
pusha
mov
mov
xchg
push
int3
pop
outsl
add
push
pushl
push
push
mov
filds
js
sbb
cli
call
aam
add
ss
xor
ja
movaps
fucomip
popf
loope
ljmp
fldl
stos
jae
jg
xchg
repnz
jp
gs
repnz
push
add
pop
mov
fdivs
sbb
lahf
xor
jns
add
inc
sbb
stos
mov
lahf
or
incl
push
add
adc
movsb
shl
mov
rolb
xchg
adc
in
xchg
jnp
jge
int
test
gs
aam
jbe
pop
xchg
and
cmp
incl
es
les
lahf
jge
push
jecxz
jge
icebp
lahf
or
cmc
or
fucom
lcall
into
out
pop
push
cwtl
stos
cmc
sbb
test
push
std
xchg
xor
cs
mov
stc
arpl
hlt
inc
jmp
call
push
jecxz,pt
sub
cmp
out
fildll
cltd
mov
inc
mov
cmp
xor
jge
mov
cli
test
out
mov
dec
pop
cli
ljmp
dec
push
cmp
push
test
sbb
cmp
sbb
adc
dec
pop
cs
fs
daa
pushl
sbb
loopne
or
jmp
cld
add
std
mov
aaa
iret
mov
or
jo
insb
orl
jmp
ffree
inc
andb
mov
add
xchg
ret
lods
dec
leave
aaa
add
pop
sbb
sub
pushl
push
hlt
pop
es
push
sub
jp
cmp
dec
sbb
incl
out
movsb
test
aaa
add
sti
jae
sbb
test
test
mov
add
orl
mov
pextrw
xchg
gs
fcomi
jg
or
adc
lahf
fsub
cs
cltd
push
mov
adc
rcll
inc
adc
decl
xor
xlat
div
inc
jbe
cli
pop
fcoms
lea
sub
pop
and
in
cmpsb
dec
aam
incb
jmp
jl
add
inc
inc
jo
sub
jmp
xchg
loop
and
fsubrs
jmp
pop
add
push
pop
enter
inc
ret
test
fisubl
push
xacquire
and
sbb
add
movsb
rolb
or
mov
adc
add
out
shll
jg
call
mull
repnz
adc
aas
rclb
mov
push
nop
mov
mov
cmp
imul
push
pop
je
ljmp
js
or
int3
adc
test
fs
aad
pop
mov
icebp
call
mov
dec
dec
jb
ret
ja
add
and
popf
shlb
add
fildl
lea
fnsave
push
in
loope
xchg
call
or
jg
mov
cltd
roll
or
xchg
ja
fs
jg
or
sub
mov
bound
pop
aad
pop
ja
or
and
aad
dec
pushf
dec
add
decl
loope
or
cmp
jnp
mov
add
loop
mov
aad
in
leave
gs
vmread
cmp
jecxz
insb
pop
jle
decl
jo
and
enter
mov
cld
pop
lock
call
call
and
fidivs
test
popa
pop
sbb
into
xor
cli
push
add
lcall
rorb
mov
sub
jmp
pop
cmc
push
fisubs
or
incb
call
cmc
inc
shl
int
inc
dec
stos
jbe
int3
shr
lods
rcr
push
insl
jp
dec
in
mov
cwtl
push
dec
mov
jns
inc
insb
imul
pusha
mov
hlt
ljmp
mov
jns
pushf
push
adc
aam
sbb
gs
adc
outsl
out
addr16
pop
xchg
outsb
pop
mov
adc
add
jg
ja
das
aas
aad
or
sar
cli
ret
fiadds
pushf
pop
cwtl
js
fcomi
jbe
decl
inc
xchg
fisubrs
std
rcll
fdivrl
addb
or
fdivrs
out
mov
aam
in
lods
mov
cmp
sub
incl
push
push
test
cmp
test
addr16
add
movzbl
stos
jbe
pop
and
ljmp
insb
mov
cld
jno
jnp
sbb
cli
daa
mov
jne
cmpw
adc
mov
dec
sarb
dec
test
pushf
es
aam
jmp
lret
xchg
xor
sbb
or
xchg
hlt
and
mov
cli
xchg
scas
movsb
pop
sbb
dec
inc
loop
stos
fucomp
pop
and
adc
mov
fsubl
and
jmp
xchg
cmpsb
lret
outsl
cltd
movsb
xchg
push
mov
data16
lock
sbb
jg
out
mov
dec
mov
loopne
pop
cmp
sbb
cwtl
fs
dec
xor
ljmp
lods
xchg
push
cmp
stos
loope
mov
mov
mov
popa
fdivs
jle
repz
push
mov
subl
loop
mov
fcomip
pop
cltd
int3
pop
repnz
pop
push
subl
mov
movb
call
sbb
mov
pop
sbbl
popa
mov
xchg
sbb
mov
jmp
push
stos
sub
incl
fstpt
mov
cmp
je
stos
notb
inc
imul
push
mov
jmp
movsb
aaa
fcmovne
sub
and
jmp
jle
sahf
add
lcall
jecxz
jge
cmp
xchg
dec
test
rcrl
dec
push
push
lods
xchg
cmc
add
aas
jmp
out
mov
arpl
movsb
xchg
xor
into
mov
or
mov
push
test
or
push
sub
xlat
add
scas
clc
inc
les
int
cmp
cmc
cmc
insb
lcall
pushf
jg
cmp
aas
ljmp
add
das
sahf
push
and
adc
stos
xor
sbb
in
fldcw
ljmp
cmp
rorb
jnp
ljmp
int
lret
xor
add
pusha
repz
pop
lcall
pop
or
addr16
ss
cmp
decl
fwait
clc
xchg
inc
xor
and
mov
cmp
decl
lret
mov
mov
test
dec
je
mov
aad
cmp
mov
call
pop
cmp
cmp
roll
or
pop
push
cs
in
jo
jo,pn
in
decl
adc
ss
mov
lea
icebp
jbe
mov
mov
pop
or
decl
lock
push
pop
subb
leave
imul
repz
cmp
mov
in
inc
adc
sbb
and
ss
lds
sarb
push
and
jp
scas
sbb
or
shrb
roll
lcall
pop
cmp
or
jmp
mov
fisttpl
sub
push
loope
push
cmp
mov
ja
mov
dec
lods
bound
jo
fcoms
or
lret
in
mov
pushl
add
mov
and
or
faddp
fsub
cs
testl
aaa
ljmp
xchg
mov
sbb
loop
sub
inc
inc
into
movsb
in
mov
movsl
in
decl
or
sarb
add
stc
xor
es
cmp
test
mov
sbb
jge
clc
fisubl
jmp
dec
cmpsl
dec
mov
add
call
dec
jg
dec
cld
cmp
orb
jecxz
mov
push
pop
jg
dec
cmp
stos
subb
mov
ss
negb
and
push
cmc
mov
jmp
xchg
dec
mov
inc
stos
adc
adc
scas
jnp
dec
and
bound
repz
addl
adc
push
pop
xor
mov
inc
inc
loope
jb
les
fucomi
jb
sub
push
icebp
sbb
jb
paddusb
cmpsb
repz
fildll
fwait
xchg
inc
loop
sub
int3
sbb
lcall
mov
mov
je
fildll
or
mov
jmp
ret
pop
vmovdqa
add
pop
fiaddl
sbb
shrl
mov
pushf
xchg
push
pop
sub
mov
sbb
pusha
lcall
movsb
and
push
scas
inc
adc
adc
pop
test
and
xchg
fstps
pop
lret
push
and
xchg
push
xor
dec
fcomps
pop
insl
dec
jns
and
jbe
pop
cltd
jae
stos
or
call
xchg
mov
scas
sub
movsl
mov
jle
frstor
into
daa
int3
es
icebp
push
pop
pop
sbb
test
aas
addr16
shll
inc
inc
fildll
jp
negl
and
add
data16
call
test
dec
insb
sbb
ret
lcall
jg
pushl
loop
or
and
inc
std
repnz
sahf
cmp
ds
adc
jmp
shrb
int
jg
mov
loopne
cmpsl
push
mov
cwtl
aas
adc
cli
mov
sbb
push
das
call
loopne
push
mov
iret
lods
sti
xchg
sub
cmp
lret
imul
mov
cli
das
add
push
sti
bound
push
stc
sub
int3
movsb
dec
mov
lret
mov
or
mov
cltd
xor
lcall
ss
adc
jge
xor
les
loopne
sub
or
add
jo
clc
ljmp
or
jnp
mov
cmp
jo
cmp
decl
jo
imul
add
aas
and
daa
int
pextrw
xor
sar
decl
push
push
loope
push
sti
sti
test
shlb
push
mov
pop
out
jbe
loop
popf
cmp
mov
fisubl
lcall
in
mov
jmp
jp
std
push
add
gs
test
or
mov
mov
or
outsl
or
repz
push
mov
jae
adc
arpl
mov
push
testl
xchg
loopne
loope
int
ficompl
sbb
xchg
pop
xchg
lcall
jmp
into
and
or
and
in
jle
cli
imul
hlt
push
pop
sub
cli
jmp
mov
mov
cmp
add
lods
and
aam
call
cmp
clc
add
neg
mov
les
push
dec
push
or
mov
xor
test
xor
incl
scas
jecxz
add
sub
push
dec
inc
dec
or
add
inc
mov
pushf
lret
xor
inc
push
inc
iret
mov
pop
sub
int
std
xor
addl
outsl
hlt
rolb
loop
rorb
ficoml
sti
cli
imul
lock
in
int
xchg
fwait
mov
ficomps
test
ss
test
ljmp
jge
out
fdivr
loopne
xor
mov
push
inc
adc
out
push
adc
dec
out
jmp
adc
xchg
xchg
push
or
or
jecxz
xor
pop
loope
and
xlat
mov
incl
push
inc
adc
push
cmp
out
sbb
cld
das
sbb
add
pop
lahf
decl
movsb
lcall
mov
sbb
dec
dec
inc
ds
test
push
lcall
or
test
mov
int3
fldenv
out
loope
mov
repnz
stos
decl
fwait
sbb
mov
xchg
push
mov
sub
sbb
fbld
incl
inc
mov
or
sub
mov
mov
ljmp
fiaddl
cs
clc
imul
cmp
loope
cmp
pop
aam
int
lock
push
lods
add
mov
mov
push
jmp
adc
push
adc
or
or
sbb
or
cmp
push
sbb
xchg
call
jge
scas
lret
jne
addb
adc
les
add
call
mov
xchg
xchg
xlat
ret
dec
mov
jmp
sbb
mov
fwait
jl
inc
imul
sub
sbb
js
mov
call
adc
negb
and
xor
lods
push
cmpsb
mov
xchg
mov
push
popf
and
rclb
or
rol
add
incl
cld
jecxz
mov
and
mov
xchg
add
jl
aam
push
lcall
lcall
lcall
cmp
xor
mov
out
popa
xor
lcall
push
aaa
loopne
dec
imul
mov
in
or
sar
das
clc
pop
lret
inc
and
sub
mov
cmpsb
js
ficompl
stos
cmp
jns
push
daa
enter
sarb
mov
dec
cmp
dec
loop
inc
xor
pushf
addr16
fsubrl
std
mov
in
mov
repz
or
xor
std
mov
lcall
fldl
jg
xchg
xor
cld
cli
popf
jo
enter
mov
fs
dec
cmc
jmp
fidivl
call
push
jne
jmp
scas
fs
iret
cmp
sbb
lret
lcall
mov
test
dec
cmp
dec
push
sbb
jb
idivb
pushl
inc
mov
or
mov
addb
mov
or
loopne
movsb
mov
xor
fwait
cmp
mov
jmp
pop
push
jb
jo
loope
mov
jmp
mov
mov
dec
notb
mov
push
dec
jmp
loope
xchg
bound
sbb
shll
ds
pushl
adc
xchg
and
dec
cli
sub
cwtl
cmp
pop
test
lcall
lcall
xor
daa
sub
or
mov
and
scas
ljmp
and
int
fs
popa
mov
loop
cmp
cmpb
push
in
ja
insb
incl
in
ret
leave
dec
xor
ljmp
jns
and
lahf
test
stos
aas
sub
data16
fdivl
pop
adc
push
test
sbbb
nop
gs
inc
out
lahf
jl
lods
push
cmpl
mov
shll
insl
xchg
loope
in
in
pushf
lcall
jge
js
jno
push
mov
adc
mov
out
xor
stc
add
aas
adc
lret
mov
push
push
jg
cmp
and
nop
test
cmp
inc
out
push
mov
lcall
mov
mov
ds
push
aas
movsb
sbb
sub
jg
sub
push
pushf
mov
cmp
icebp
scas
lock
and
cmpb
imul
int
xchg
xchg
je
fcomps
ja
push
outsb
or
pop
out
repz
sbb
ljmp
in
dec
es
and
or
mov
sub
fwait
aad
mov
incl
aas
int3
je
push
xchg
scas
js
adc
sbb
repz
push
push
dec
pushf
inc
inc
mov
loope
lcall
mov
outsl
out
out
lods
jno
mov
fsts
mov
ds
pop
push
cmpsb
cmp
pop
add
icebp
sub
gs
pop
mov
xchg
push
fcomip
pushl
dec
dec
add
sbb
xor
xchg
and
push
in
dec
xchg
ss
push
mov
or
decl
lock
movsb
and
dec
inc
or
pop
nop
je
mov
cmc
push
aad
lods
lret
cwtl
lods
adc
outsl
enter
inc
and
sub
ljmp
push
rcrb
test
inc
xchg
dec
xchg
js
movsb
in
hlt
mov
inc
cmp
xchg
sbb
je
ret
inc
mov
push
mov
sub
sub
aaa
cli
lret
cld
fcompl
inc
iret
add
sub
inc
fs
mov
sbb
push
in
insl
inc
andb
call
mov
dec
lods
pusha
xchg
int3
fs
sbb
inc
jns
cmpsl
mov
cmp
fcomip
push
jae
in
dec
sti
jp
pop
add
sbb
and
or
and
decl
xor
xor
stos
inc
xor
loopne
inc
sbbl
sbbb
repz
pushl
sbb
or
cmp
xchg
inc
jg
push
imul
dec
adc
jmp
cwtl
fwait
mov
out
ret
cmp
and
and
or
out
inc
in
rcrb
nop
sti
out
bound
fidivl
imul
outsb
mov
mov
sub
pushl
inc
out
test
into
xchg
js
inc
dec
adc
movsl
pop
pop
iret
cmp
movsb
mov
jecxz
call
fwait
jo
repnz
dec
ret
pop
mov
decl
jbe
add
pop
mov
cld
push
mov
lods
ja
xchg
in
push
outsb
fisubl
mov
ret
sub
loope
xchg
pop
jnp
mov
and
aam
daa
or
push
fdivr
dec
movsb
dec
sub
xchg
jp
inc
test
test
jo
dec
stos
inc
xchg
stos
inc
hlt
fcmovbe
jbe
call
ja
sbb
cwtl
mov
add
std
lods
jp
jne
mov
loop
outsl
ret
add
xor
testb
cmpsb
dec
loope
sti
shrl
xor
sti
xchg
xchg
nop
dec
data16
jo
sub
fiaddl
incl
fdivrs
into
add
rcrl
xchg
push
jnp
inc
outsb
mov
out
daa
and
and
push
cmpsb
repz
xor
fimull
cmp
outsb
es
cmpsl
cltd
mov
gs
cld
push
imul
aaa
popa
pop
mov
jp
popa
pushf
ja
add
mov
inc
outsb
cmc
jae
ds
fnstenv
loopne
mov
cmpsb
or
add
cmp
gs
jmp
sbb
inc
sti
add
test
fnsave
fdivs
xchg
clc
pop
ljmp
decl
lea
cmp
mov
int3
sub
lods
aad
inc
mov
inc
in
test
or
push
mov
cs
pop
xchg
jno
fmuls
push
int
fdivrp
xlat
fadds
mov
mov
push
mov
fcmovnbe
sbb
pushl
popa
add
out
data16
fistpl
clc
or
repz
xchg
enter
dec
jno
push
sub
pop
shlb
fimull
cmp
pusha
push
dec
mov
push
cmp
adc
in
mov
jmp
inc
xchg
or
xchg
xchg
xchg
call
inc
cmp
jo
mov
lods
repnz
daa
pop
push
mov
xorl
ljmp
push
aad
lock
sub
mov
in
shrl
jmp
pop
push
push
filds
sarb
push
fmuls
test
push
jp
nop
test
lcall
dec
clc
outsl
inc
jbe
mov
sub
jecxz
leave
sbb
push
daa
push
push
js
lcall
daa
mov
push
jbe
mov
mov
xor
jbe
icebp
push
daa
pushl
sti
in
mov
and
pop
mov
cwtl
push
ret
out
and
mov
in
decl
cltd
fldenv
daa
jle
imul
rsqrtps
mov
sti
adc
loop
push
notl
movsb
les
mov
inc
pop
dec
mov
ljmp
cli
test
test
lock
imul
add
movsl
jge
cmp
dec
mov
fstl
sbb
adc
mov
xor
lcall
stos
mov
out
adc
shl
mov
mov
push
inc
decl
lock
cwtl
cmpsl
cld
popa
test
sub
mov
pop
sbb
add
and
jp
jmp
mov
popf
out
dec
push
out
addr16
or
xor
or
lods
or
mov
out
ja
in
out
push
inc
cmp
sahf
loopne
pusha
mov
jne
scas
cli
jg
imul
dec
or
xor
js
test
mov
mov
cmp
rolb
sti
cmc
pusha
mov
jg
loopne
push
scas
lcall
cmpsl
mov
adc
pushf
fcomp
mov
ljmp
fldl
out
xor
mov
popa
jo
lods
mov
repnz
decb
test
lcall
adc
push
pop
scas
fnsave
scas
sub
lret
push
dec
ljmp
xor
fnsave
sub
jg,pn
ja
nop
aad
loope
and
jg
fstl
lock
cmp
push
lods
scas
cli
aaa
mov
out
decl
les
fstps
rcrb
add
in
sbb
cs
or
sti
xor
pushl
add
jge
cwtl
lods
into
out
xchg
roll
jg
xchg
leave
mov
call
jae
dec
sub
push
mov
dec
dec
pusha
inc
movsb
inc
aam
mov
pop
aad
or
dec
ja
in
ljmp
scas
adc
sbb
mov
jl
je
xchg
stos
xchg
mov
inc
es
mov
mov
cmpsl
xchg
add
push
mov
adc
pop
add
call
jb
push
push
xor
ret
lods
pop
adcl
mov
inc
popf
mov
lds
fldt
mov
insb
orb
jle
pushl
cmp
add
mov
mov
cmp
cmp
pushl
mov
stos
cli
pop
cmp
das
pop
mov
iret
jo
inc
aam
pop
icebp
ljmp
jns
or
test
xchg
orb
mov
jnp
cmp
fbstp
or
inc
add
imul
mov
cmpsl
push
mov
jecxz
sub
jl
adc
lock
ret
addr16
decl
jae
in
pop
cmpsb
or
inc
pusha
aaa
inc
mov
push
incl
add
mov
pushf
cmpsb
pop
xchg
popf
cli
sbb
ljmp
mov
cmp
call
inc
dec
ds
faddl
sarl
daa
sub
jbe
pop
inc
and
iret
cwtl
aas
enter
cs
push
sbb
repz
mov
mov
jg
outsb
lcall
mov
cli
loopne
pop
subl
xor
call
jl
in
arpl
shll
sti
aad
xchg
or
ffree
cld
aaa
xor
sub
cmp
lock
push
test
call
xchg
aad
jno
add
fcomp
xchg
fs
pop
inc
mov
clc
lcall
inc
je
pop
xor
jb
daa
inc
sub
nop
jp
cmp
cmpsl
fsubs
mov
scas
sti
xchg
add
pusha
insl
sbb
dec
mov
sti
or
dec
add
call
xor
mov
add
les
mov
push
shll
movsb
jbe
pop
pop
jg
xlat
push
or
cmpsl
lods
ss
cli
sub
push
aam
sar
ljmp
ljmp
cmp
mov
in
jns
js
imul
pop
lcall
outsl
or
repnz
cwtl
mov
or
popa
ljmp
je
test
jne
fwait
popl
push
pop
sbb
mov
and
ljmp
sub
aaa
inc
adc
xchg
xchg
stc
out
pop
icebp
pushf
cmp
jno
stc
decl
inc
dec
shlb
arpl
sub
mov
fstpt
scas
jae
hlt
push
dec
js
xor
mov
jns
cmp
cmp
inc
arpl
push
sti
pmulhw
cmpsb
xlat
ret
jns
or
add
lcall
and
xchg
cmpl
mov
adc
mov
fs
icebp
pushl
sub
pop
inc
inc
cmpl
cmpsb
inc
add
aas
cld
filds
jo
jo
int
mov
out
shrb
jmp
data16
out
mov
adc
iret
cmp
icebp
lock
mov
add
dec
mulb
int3
and
movsl
cmp
sahf
mov
push
sbb
sub
ljmp
or
jbe
lcall
ja,pt
cld
sub
fidivl
dec
xlat
std
lods
jno
jg
fldln2
aaa
ds
call
xor
rcr
sbb
and
outsl
xlat
fstpl
bound
incl
mov
jns
in
mov
fwait
scas
out
xchg
cmp
mov
fstp
loop
add
lcall
push
popf
xchg
loopne
stos
or
arpl
addr16
test
cmc
dec
shl
stc
sar
jg
add
mov
insl
pop
movsb
sbb
ds
inc
pop
cltd
mov
push
mov
insl
jmp
int
inc
xorl
dec
lret
mov
push
hlt
xchg
sar
call
out
popa
xchg
in
push
addb
fsts
dec
cltd
and
jbe
mov
mov
nop
sbb
or
fs
xchg
xchg
sub
iret
push
sbb
and
fidivrl
lcall
jno
popa
mov
xchg
and
popf
rcrl
xor
sbb
pop
inc
dec
ljmp
fwait
shrl
mov
dec
push
push
js
pop
in
ljmp
mov
jns
inc
rorl
mov
push
rolb
mov
push
insl
imul
xor
negb
adc
jb
call
pop
lds
enter
in
inc
inc
pop
sub
mov
pusha
idivb
mov
ljmp
jg
test
sti
jo
mov
add
cld
xchg
dec
inc
mov
pop
ja
nop
pop
add
fisttps
sbb
xchg
inc
lret
sub
call
sub
mov
fadds
daa
data16
xlat
jo
in
adc
fnstcw
pop
jno
mov
aad
mov
dec
push
mov
adc
imul
idivb
dec
adc
aas
test
loopne
rcrb
out
pop
mov
repnz
and
pop
mov
ljmp
mov
sub
jbe
xchg
pop
pop
shrb
call
ljmp
out
jmp
cmp
mov
leave
add
cmp
add
sbb
es
jg
mov
pop
call
dec
imul
lea
mov
je
shlb
idiv
hlt
adc
cmpl
pop
leave
imul
push
bound
pushl
aam
mov
test
dec
jmp
stos
ds
push
xchg
sub
ficompl
js
or
push
decl
out
scas
inc
mov
pop
pusha
loope
xchg
loope
sub
incl
nop
fimull
cmp
mov
pop
ljmp
idiv
call
xchg
ljmp
js
iret
in
fidivl
push
decl
pusha
rorl
scas
fildl
xor
and
data16
pop
or
pop
cld
lcall
fiaddl
ss
loopne
push
mov
lods
aad
sahf
int3
adc
cmp
sti
ljmp
in
aam
in
cwtl
lret
cltd
pop
popf
std
mov
jns
inc
inc
ljmp
incl
jb
stos
les
pop
cli
and
inc
inc
fwait
mov
add
adc
lods
outsl
lcall
test
xor
mov
mov
loop
cld
mov
mov
mov
lcall
stc
aam
mov
outsb
mov
cmp
insb
dec
cmp
lcall
xor
aaa
sub
push
ljmp
jp
lahf
jno
subl
ljmp
adc
pop
and
jmp
mov
bound
insb
pop
jnp
cmpsl
pop
fiaddl
mov
incl
lods
stos
cmp
add
mov
arpl
sub
ss
cmpsb
movsl
xlat
pushl
jg
dec
xchg
xor
fadd
and
pop
mov
adc
call
insb
es
stos
andl
dec
gs
xor
jne
ja
cmp
test
xor
cmp
decl
jne
and
insl
mov
jge
das
xchg
push
pushf
pop
leave
mov
cmpsl
mov
and
leave
nop
inc
inc
cmpsb
subb
out
lea
arpl
dec
ja
or
xor
inc
dec
adc
mov
add
loope
fiaddl
xor
popa
je
lcall
push
jae
xchg
scas
inc
dec
push
outsb
pop
push
fs
int
orl
add
mov
mov
push
movsl
inc
popa
outsb
sub
inc
push
jmp
je
fcomp
add
pushl
aaa
add
cli
out
sub
stc
sbb
jno
fidivs
mov
cwtl
sar
and
outsl
rcpps
xchg
mull
insb
jmp
sbb
sbb
test
jne
std
fdivr
lahf
scas
jmp
mov
repz
adc
lds
in
jge
fildll
xor
daa
jno
inc
icebp
dec
cmp
shrl
cwtl
and
jg
jo
ds
ja
inc
pop
js
dec
daa
mov
xchg
stos
dec
cmp
adc
add
icebp
pop
inc
in
mov
stos
cmp
cmp
xor
and
lret
sub
inc
sarl
adc
xchg
push
fisttps
pushf
push
les
xchg
cs
rolb
addr16
mov
into
sar
ljmp
rcrl
lret
loop
mov
cmp
test
cld
test
pop
jo
call
sarl
lret
rclb
fcoml
pop
in
fisttpl
xchg
add
jl
sub
lea
xchg
xor
push
int
and
cmpsl
imul
push
push
cmpsl
mov
jbe
mov
jg
les
jmp
adc
and
add
cmp
jmp
mov
fdivs
jmp
jns
aas
es
pushl
cmp
leave
add
stos
cmc
xorl
adc
jmp
cmp
sbb
fstl
sbb
cs
cltd
mov
cmp
and
call
inc
sbb
jo
xchg
mov
pop
or
mov
insb
mov
pop
aad
dec
inc
xchg
or
repz
mov
push
lods
dec
test
gs
shlb
out
repnz
inc
mov
aam
jl
sti
cmp
dec
adc
xchg
jp
mov
ljmp
xlat
sbb
cli
in
cmp
mov
stos
pusha
xchg
pop
jo
pop
or
lcall
ja
fidivrs
mov
inc
pop
mov
jge
stos
lretw
in
mov
pushl
dec
jp
out
imul
lahf
sbb
imul
and
sti
jge
dec
pop
out
clc
pushl
mov
pop
insl
lods
pushf
add
and
push
jp
push
sub
in
sar
call
vpaddd
xor
cmp
bound
inc
jge
sti
add
shll
pusha
mov
xchg
call
inc
mov
shl
shrl
les
mov
stos
leave
ss
incl
push
lcall
mov
lcall
and
out
addb
xor
out
jecxz
jmp
jbe
mov
mov
pop
fnstsw
jo
xchg
mov
push
fcoms
sbb
mov
mov
cmp
out
scas
insb
lret
sub
insl
data16
cmp
lcall
xor
ds
inc
scas
adc
jno
xor
cmp
push
cmpb
pop
push
loop
fsubs
fmul
push
dec
sbb
in
imul
pop
mov
incl
fisubs
in
push
sub
sub
mov
dec
mov
clc
jns
loop
sbb
out
cli
push
xorb
adc
xchg
mov
sub
push
push
jb
mov
enter
dec
jg
jl
pop
out
sti
add
ds
out
nop
mov
or
aas
stos
sbb
ss
loope
dec
leave
sbb
loop
ret
push
xor
or
fs
ret
dec
add
mov
lock
das
cld
adc
adc
inc
gs
jo
adc
xchg
in
xchg
shrl
xchg
adc
ljmp
cli
dec
filds
cmp
sbb
sbb
fildll
jnp
aam
loopne
fcomip
pushl
repz
jge
jne
adc
aas
inc
lret
dec
inc
std
scas
out
call
mov
push
push
fdivp
aad
pop
test
dec
lds
jmp
cmc
das
pushf
mov
jle
pop
inc
pushf
movsl
scas
imul
xor
adc
out
inc
sbb
ljmp
cmc
sub
rcl
push
sti
incl
jecxz
cmp
stos
xlat
cs
mov
imul
arpl
insb
pop
xlat
mov
lcall
inc
loope
out
mov
notl
push
mov
add
loope
dec
in
push
push
ljmp
pushf
outsl
mov
fcompl
lret
fildl
dec
mulb
mov
xchg
sbb
jle
inc
ds
lahf
mov
push
es
mov
std
jle
cld
leave
rcrb
xchg
lock
call
and
sbb
rcrl
gs
sbb
push
pop
pop
xchg
add
pushf
mov
in
pop
mov
imul
and
bound
pop
sbb
mov
jg
enter
and
cld
popf
aas
daa
movsl
sub
sbb
test
cld
in
loopne
bound
fldl
mov
jecxz
iret
mov
cmc
or
xchg
sub
xchg
xor
push
or
add
fistps
and
jmp
pop
mov
push
pusha
mov
push
enter
decl
xchg
xchg
in
test
inc
lcall
daa
sub
hlt
inc
pop
ss
lcall
sub
popf
out
insl
std
push
and
add
scas
gs
sub
xchg
mov
pushl
sub
popf
xchg
fidivrs
xchg
jmp
int
cld
adc
pushl
xor
outsb
test
mov
divb
or
stc
cld
ljmp
mov
shll
cmpsl
or
mov
aas
mov
pushf
ljmp
mov
cmp
xchg
mov
mov
incl
loop
push
mov
fidivs
inc
das
jge
fs
inc
aam
lahf
xchg
mov
push
test
pushl
std
ljmp
cltd
adc
jg
scas
popa
pop
pusha
push
xor
sti
ljmp
ret
jecxz
out
stos
push
and
pop
inc
cmp
decl
pop
insb
int
pop
push
cwtl
cmp
dec
xchg
inc
mov
mov
mov
jb
adc
je
clc
decl
pop
mov
push
ror
mov
pushf
sub
pop
sub
cmp
pusha
popf
or
inc
test
and
jnp
fs
inc
int
test
adc
xchg
lods
nop
inc
mov
mov
je
cmpsb
push
ljmp
clc
mov
fwait
stc
xlat
pop
fcoml
pop
lea
dec
incl
loopne
mov
pop
sbbb
scas
inc
imul
jmp
mov
aam
push
mov
xchg
decl
pop
shrl
cwtl
fsubp
jbe
jno
fcmovnbe
lods
mov
shll
nop
mov
out
mov
negb
push
jns
iret
jp
mov
push
in
out
or
cmpsb
scas
loope
repnz
jmp
shl
out
push
sub
sbb
mov
insl
scas
dec
lret
xchg
jl
or
adc
jns
enter
aad
sub
jg
push
xor
jb
into
adc
mov
pop
mov
jg
mov
pop
adc
inc
int
xor
lret
xchg
out
mov
ljmp
inc
data16
movsb
mov
stos
inc
mov
sub
mov
arpl
sub
jnp
xchg
xchg
fnstcw
cmc
mov
loop
rcr
push
movsl
jne
mull
ljmp
gs
mov
jo
jnp
add
repnz
xchg
pop
mov
std
cmpl
clc
cmp
inc
inc
imulb
fwait
jo
xchg
sbb
jae
ljmp
cli
sbb
xchg
lds
cmp
push
or
sahf
ds
movsb
loope
adc
fsubl
pushl
cld
incl
add
dec
mov
mov
loope
rcll
push
or
incl
jmp
mov
punpckldq
sbb
cmc
cmp
jmp
scas
lahf
imul
pusha
pop
push
test
xor
cmp
jne
mov
cmc
incl
sbb
fmuls
notb
int3
xchg
ret
ror
jle
xor
xor
add
test
adc
dec
push
shlb
sbb
in
lcall
mov
std
jmp
test
push
int3
lahf
mov
cmpsb
adc
sbb
jg
push
jg
or
in
add
lcall
push
scas
xor
and
lods
push
sub
test
lcall
cmp
stos
lcall
jns
fisttpll
dec
insl
pop
into
shl
sbb
shrl
sbb
adc
fcomip
inc
mov
mov
xor
mov
in
push
adc
leave
insl
lret
roll
dec
sub
sbb
mov
ss
lods
and
fbld
jo
imul
lock
fisttpll
pop
inc
testb
into
cmp
aaa
xchg
xor
decl
dec
xchg
cmp
or
int3
movsl
adc
nop
dec
push
sbb
sahf
insl
cmp
jp
insb
push
repnz
pop
and
xor
xchg
pop
nop
xor
insb
sbb
test
call
stos
inc
fists
pushf
mov
inc
add
xor
ljmp
decl
jno
and
add
or
fxch
dec
cmc
divl
pop
ljmp
pushl
adc
xchg
and
loopne
loope
test
xlat
and
lcall
mov
xchg
dec
mov
push
mov
push
das
int
mov
aaa
call
inc
aaa
in
cmp
inc
mov
mov
daa
push
push
test
popf
inc
mov
mov
inc
cmp
push
out
setg
lahf
sahf
pop
fdivrp
push
jno
inc
jae
lods
mov
retw
add
add
call
jp
mov
bnd
rolb
sub
pop
sahf
pushl
jb
sub
addb
int3
jge
pushw
in
lcall
dec
mov
repz
ljmp
mov
and
pop
adc
xchg
popa
add
add
cmp
sub
sub
dec
sub
xchg
insl
ret
lret
sbb
jno
and
push
xchg
les
jg
mov
movsb
xor
adc
mov
xchg
sub
xor
movsl
subl
xchg
and
lahf
sarb
les
and
ljmp
dec
into
adc
mov
js
lock
sbb
int
pop
dec
cs
sub
fiadds
mov
ljmp
mov
or
or
push
and
and
pop
test
aas
stos
cmpsl
aaa
inc
xor
mov
sbb
in
pusha
cmp
nop
dec
xchg
int3
cli
sahf
mov
scas
leave
mov
jne
cmp
mov
xor
mov
pop
dec
call
cltd
dec
shl
dec
sbb
scas
pushl
inc
not
jbe
inc
sub
test
daa
pop
pop
push
gs
pusha
stos
xchg
adc
incl
inc
mov
push
fdivl
xchg
test
idiv
cmp
into
cmpsl
jecxz
xor
add
out
sub
je
fwait
test
dec
lock
push
jmp
cmp
pushf
outsb
pop
cmp
jmp
and
jg
incl
stos
sbbl
sub
movlps
and
or
rorb
js
rcl
out
test
lahf
aad
push
iret
mov
jl
mov
adc
fninit
cs
and
jmp
aas
rcrb
and
mov
jbe
lds
push
je
in
sbb
data16
xlat
out
cmp
or
jp
sub
mov
out
fisubl
mov
jl
or
sahf
cmp
orl
dec
dec
xchg
dec
insb
jnp
aaa
cltd
hlt
repnz
aam
incl
xor
imul
mov
push
jno
stos
out
sub
ljmp
jmp
fnsave
cmp
arpl
test
push
jle
jge
jnp
dec
cmp
cli
int3
jmp
or
dec
test
and
cmc
and
mov
fiadds
scas
jl
cltd
invd
imul
inc
scas
shll
fidivrs
fsubs
xchg
xor
cs
incl
pop
fmuls
pusha
int
mov
jle
adc
or
xor
sbb
test
test
sbb
test
loopne
mov
dec
or
cmp
adc
ljmp
sbb
sahf
pop
sahf
xchg
xchg
mov
jb
cmpsl
imul
cmpsl
popa
inc
jmp
lds
dec
roll
xchg
xor
pop
shl
call
dec
ljmp
mov
sub
mov
cmp
pushl
insb
cmp
add
testb
dec
adc
adc
scas
ja
push
mov
outsl
pushl
pop
mov
rep
lds
pop
in
dec
out
clc
cmpsb
jl
outsl
mov
add
sbb
fcmovbe
push
pusha
dec
fisubs
frstor
sub
push
lret
call
jecxz
cmp
mov
leave
mov
xchg
lods
int3
mov
xor
js
mov
call
dec
outsl
xchg
scas
inc
imul
adc
mov
out
aad
xchg
cmpsl
pushl
cmpsb
xor
out
es
arpl
xchg
sub
pop
imul
push
cmp
lds
ljmp
xchg
add
pop
or
bound
dec
or
xor
lock
lcall
mov
mov
or
add
adc
aas
mov
insl
or
mov
decl
cld
sbb
push
and
pop
mov
testl
mov
lcall
cmpsb
mov
push
movsb
xchg
dec
sbb
into
int
push
test
dec
lret
decl
test
pop
fsts
sti
mov
test
shr
lahf
or
mov
popa
adc
incl
xchg
jle
add
inc
std
jl
inc
or
and
mov
push
mov
std
mov
lret
pop
mov
movsl
push
jmp
push
and
add
and
or
mov
jg
cmpl
xchg
sbb
out
add
xchg
jl
lock
jg
call
or
scas
pop
push
mov
or
xchg
adc
jmp
daa
and
push
dec
std
mov
icebp
jl
mov
mov
pop
imul
ljmp
popa
and
orb
mov
pop
inc
jnp
or
movb
incl
or
pop
imul
push
js
decl
jge
fadds
add
stc
sbb
repnz
and
ja
adcl
mov
ljmp
cmp
mov
int3
sbb
hlt
mov
sbb
adc
stc
sub
cltd
out
in
jge
cmpb
mov
cmpsb
imul
mov
fbstp
mov
pop
xchg
in
sarb
mov
lahf
xchg
xor
xchg
dec
mov
ljmp
out
hlt
call
pushf
pop
adc
aaa
int
mov
dec
imul
mov
sub
or
lret
sbb
outsb
push
jmp
sub
mov
dec
fsubr
sti
scas
pop
pop
adc
jg
mov
mov
jns
jmp
xchg
aaa
xchg
stos
iret
jl
mov
scas
inc
cwtl
adc
ja
cmc
and
jns
and
bnd
mov
das
dec
add
adc
das
arpl
mov
add
fadds
adc
dec
xchg
or
mov
pop
pop
aaa
pop
into
movsb
fwait
add
call
mov
pop
mov
sbb
dec
push
jno
es
call
inc
cmc
insl
mov
mov
loopne
sbb
mov
les
fistpl
cli
jmp
xor
or
addr16
iret
inc
inc
sub
mov
in
mov
lcall
sbb
jmp
shll
aam
jo
jmp
and
inc
in
dec
adc
in
mov
dec
mov
push
shl
mov
pop
cmp
mov
inc
mulb
pop
pop
mov
cmp
lahf
inc
aas
xchg
lds
incl
jo
push
in
insb
mov
cmpsl
dec
js
and
adc
dec
sub
pop
sub
jmp
lcall
dec
xchg
pop
dec
hlt
inc
push
xchg
and
lahf
aad
add
stc
test
ret
sub
jmp
pop
xor
cmpl
adc
mov
add
out
in
test
aas
jge
cs
xor
pop
push
stos
decl
and
xor
sbb
mov
insb
inc
xor
jnp
pop
xchg
inc
addr16
fnstsw
sub
xchg
aaa
outsb
dec
fmul
leave
push
cmp
jmp
lret
sub
sub
pushl
xor
xchg
in
inc
mov
mov
lods
test
jg
xchg
mov
jg
sbb
int3
jb
jle
mov
mov
push
mov
test
inc
or
js
call
pop
jo
mov
outsl
jecxz
mov
ljmp
pushl
daa
sahf
call
cmp
stos
ljmp
push
push
push
inc
popf
mov
add
xlat
shl
icebp
call
xchg
aam
scas
rclb
clc
inc
pop
scas
call
mov
jns
fbld
push
aad
lahf
insb
cwtl
imul
int3
xor
jle
sarb
inc
jmp
mov
or
push
xchg
mov
setg
sbb
push
pop
stos
decl
adc
inc
xor
movsl
and
xor
jns
test
stos
test
jae
dec
add
push
fwait
sbb
sbb
jae
mov
in
orl
add
popa
stos
xchg
cmp
decl
outsb
inc
adc
out
in
enter
hlt
push
or
out
jmp
fs
fcom
add
rclb
test
lret
rorb
jne
jle
xchg
cli
or
cli
lahf
mov
sub
cltd
call
mov
inc
jb
inc
fs
jg
mov
push
sub
inc
pop
cld
jge
mov
call
stos
inc
adc
jne
adc
lret
mov
mov
push
cmp
fsubrs
push
mov
cld
sbb
dec
lock
popf
insb
ficompl
in
jne
xlat
push
push
adc
add
daa
scas
ljmp
ljmp
mov
std
xlat
loopne
loop
add
repz
or
pushl
mov
sub
jne
xchg
sbb
movsl
push
xchg
jbe
mov
decl
sti
pop
jae
loop
xlat
sub
jo
sti
cltd
xor
xchg
ljmp
add
xchg
sub
sub
push
push
divb
jne
sbb
movsb
push
cmp
dec
add
jp
and
mov
flds
sbb
icebp
or
outsl
inc
popf
pop
into
in
mov
jmp
shll
xchg
adc
xchg
jo
inc
leave
aas
cmp
or
loopne
push
sbb
pop
mov
jmp
fistpll
test
cs
test
sarb
and
push
mull
fcmovnbe
xchg
adcb
dec
loop
out
nopl
out
jmp
pop
insl
in
incl
leave
cmpsl
cmpsb
and
push
mov
pop
repz
mov
pushf
sbb
movsl
lods
ss
ljmp
inc
cs
jns
mov
push
cltd
imul
int
decl
adc
cwtl
dec
or
shlb
cmpsb
imul
ljmp
fwait
subb
fstl
scas
outsb
mov
mov
test
xor
shll
outsl
movsb
mov
ljmp
and
lcall
ret
xor
fidivs
mov
mov
sub
add
mov
jmp
fmull
xor
xchg
push
aam
adc
into
and
sub
push
aas
in
ljmp
outsl
fimull
fidivs
mov
jbe
repnz
ljmp
sbb
ljmp
outsl
pop
out
ret
test
adc
add
mov
into
pop
rorb
xor
outsl
ljmp
dec
lcall
iret
pop
fsubrp
stc
sub
es
push
lea
mov
mov
stc
cld
ja
out
adc
jo
lcall
mov
shrb
insb
and
call
xchg
scas
mov
test
or
pusha
fnstcw
push
inc
mov
mov
mov
cmp
dec
jo
jno
mov
sub
jmp
aam
cli
xchg
and
sbb
cli
push
cmp
in
cli
cli
sbb
cmp
cmp
pop
xor
decl
insl
mov
mov
push
sbb
les
inc
add
call
sbb
cmp
jns
cmp
in
sub
jmp
jp
jl
jmp
pop
xor
lret
or
decl
iret
push
sub
xor
ret
sti
mov
insl
or
lcall
imul
cs
adc
push
adc
xlat
in
mov
gs
push
stos
ds
int
and
rcr
aaa
mov
in
inc
adc
stc
push
push
out
inc
int
mov
enter
rcrl
dec
inc
pop
stos
pop
push
lods
add
and
shr
cs
lcall
fstpl
sub
jns
jg
fwait
insl
pop
mov
les
popa
push
sbb
aas
stc
or
mov
jbe
lea
fsubs
cli
ljmp
out
pop
bound
dec
push
adc
pop
adc
xchg
fidivs
sub
mov
decl
leave
jp
in
cwtl
adc
xchg
xor
pushl
loope
pop
or
xor
push
jbe
aad
jno
enter
pop
jge
push
incl
das
cmpsb
inc
je
push
outsl
jns
push
movsb
sbb
test
xor
cwtl
sbb
xchg
decl
sbb
sbb
adc
popa
clc
sbbb
movsl
jbe
sub
es
xchg
or
jnp
push
push
mov
push
sbb
call
popf
js
jg
sub
lret
imul
jns
and
jg
daa
and
inc
dec
mov
push
mov
push
push
mov
out
pop
cmpsl
xor
call
aam
and
mov
jbe
outsb
loopne
inc
jge
mov
lcall
dec
fdivr
cmp
jae
xchg
push
mov
fs
jb
push
xchg
cmpsl
leave
push
arpl
push
mov
sbb
loopne
sti
bound
imul
js
mov
pop
ja
xor
mov
ljmp
jp
std
shl
stc
xchg
mov
xchg
push
pop
fcmovbe
sbb
mov
repz
je
cltd
mov
incl
int3
cmpsb
lea
out
enter
inc
mov
sbb
std
ljmp
ret
insl
inc
nop
xchg
pusha
aaa
dec
out
pop
cmc
lods
in
jae
aaa
inc
rorl
loopne
mov
xchg
hlt
fwait
daa
insb
jnp
leave
roll
mov
or
jp
clc
sub
cmpsl
or
jb
int
dec
and
stos
jmp
sub
lret
inc
mov
jno
inc
popa
fsubrs
aam
into
scas
adc
imul
rcrl
test
outsb
scas
or
lret
mov
lea
ja
decl
inc
lret
movsl
sub
cmp
jb
mov
push
dec
add
in
insl
adc
adc
into
or
and
lods
mov
test
or
sbb
das
int
sbb
add
jo
loope
adcb
mov
add
xlat
ret
adc
push
push
or
add
mov
inc
orb
lret
addb
jbe
xor
inc
ljmp
mov
je
aaa
and
mov
add
imul
or
add
ss
add
ret
push
inc
out
or
inc
and
loopne
adc
push
lock
add
ljmp
iret
push
outsl
outsl
insb
push
mov
loope
push
outsb
popa
jo
push
in
dec
push
add
fsubrs
pop
and
push
or
adc
push
dec
lods
lods
insl
dec
cli
fcomip
push
jb
movsl
addb
push
inc
fld
cmpl
or
pusha
add
insb
push
das
enter
and
xchg
insl
push
js
aad
inc
push
add
cmp
popa
dec
sbbb
fisttpll
sbb
mov
adc
push
imul
mov
inc
push
mov
xchg
test
dec
mov
pusha
loope
out
xor
and
dec
push
jge
jecxz
xchg
jo
or
xor
add
dec
daa
roll
loopne
adc
leave
subl
outsb
imul
or
add
sub
sbb
in
mov
outsb
sbb
jbe
pop
dec
inc
orl
outsl
adc
out
pushf
xchg
lock
inc
mov
std
loopne
shlb
fisubs
fwait
rolb
mov
pop
ja
cld
push
ds
insb
jne
addl
popa
popa
pop
andb
push
xor
sub
sbb
fcmovu
sub
fildl
inc
fistps
mov
jne
addr16
jae
outsb
or
xchg
nop
test
push
inc
mov
inc
fistpl
or
das
push
jns
mov
inc
jae
pop
fwait
rcrb
push
or
push
push
hlt
fs
jnp
adc
dec
jns
out
cmp
ret
push
or
stos
pop
adc
popa
pop
subb
and
inc
or
jo
packuswb
xchg
imul
adc
or
inc
dec
sbb
out
call
pop
ret
push
notl
dec
popa
and
sub
std
inc
add
out
cltd
or
xor
popa
lea
xchg
rcll
sbb
mov
test
fsubrl
pop
push
gs
movsl
or
js
insb
cmpl
fs
movb
or
or
and
fwait
or
adc
adc
fisttpl
in
sbb
sub
hlt
shr
and
adc
inc
ficoml
jns
pusha
push
mov
adc
add
mov
out
nop
dec
jb
push
sbb
imul
mov
mov
lock
js
lods
mov
sub
pop
mov
ja
sub
cmp
into
mov
inc
popa
es
jp
lods
inc
adc
popf
popa
ss
jg
sbb
xchg
nop
jge
push
mov
shlb
or
ret
pop
int3
outsl
jns
int
add
add
push
pusha
mov
and
popa
pop
jne
repz
adc
fisubrs
push
inc
nop
pusha
pop
outsl
inc
out
sti
and
cltd
inc
sbb
push
mov
mov
and
cmp
insl
adc
xchg
sbb
stc
mov
add
fldt
xor
xchg
adc
jns
mov
mov
inc
stos
nop
andl
cmpsb
adc
push
test
and
push
mov
mov
jne
inc
push
inc
mov
mov
jae
and
es
lahf
cs
cmp
xchg
xlat
mov
mov
popa
mov
cmpl
add
inc
mov
outsl
add
or
pushf
inc
xor
sbb
sti
adcb
cmpsl
sub
outsl
int
jl
xchg
cmp
aaa
jbe
lods
cs
jmp
lods
mov
inc
insb
add
add
add
test
or
stc
test
push
insl
xchg
leave
and
add
icebp
dec
gs
push
inc
adcb
jne
outsb
mov
clc
pusha
pop
and
inc
jne
subl
pop
cmpsb
sbbb
sub
arpl
stos
push
inc
insb
mov
fs
fstl
push
loopne
dec
sub
sub
and
pop
scas
addr16
inc
sbb
insb
pop
es
dec
xor
and
cmp
int
cmp
pop
xorl
pop
mov
test
mov
fdivs
jbe
push
popa
pusha
mov
pop
popa
pop
or
add
adc
lods
popa
fbstp
jmp
fs
xchg
push
inc
mov
je
and
or
in
rclb
inc
jb
and
sbb
inc
sub
jo
inc
inc
inc
push
arpl
stos
sbb
xor
mov
subb
sahf
outsl
inc
pop
mov
mov
cmpb
mov
lahf
mov
jle
nopl
inc
es
sbbl
xor
mov
dec
jae
jno
cs
xor
nop
popf
jb
mov
lods
pusha
loopne
ret
mov
push
imul
rcl
dec
xor
sbb
ja
xchg
enter
pop
and
jno
jecxz
add
dec
loop
xor
mov
cmp
inc
dec
push
push
pop
xor
rcrb
lock
adc
enter
out
adc
push
adc
and
and
cmp
xbegin
insl
dec
outsb
dec
fildll
mov
mov
lcall
dec
add
mov
shll
xchg
movsb
dec
lcall
or
movhps
dec
imul
xchg
mov
lcall
or
mov
loope
pop
shrl
pop
loop
cmp
adc
sub
and
sub
outsl
bound
movsb
bound
pop
add
xor
out
inc
jb
imul
push
jb
inc
jae
push
leave
inc
push
imul
mov
imul
push
fcmovnbe
inc
jo
sbb
addr16
dec
and
push
jns
rclb
rorl
icebp
and
or
orb
jle
jbe
jbe
ja
push
aaa
out
pop
lea
cs
imul
push
pmulhw
cmp
push
adc
les
mov
aad
mov
adc
in
adc
inc
inc
fildll
and
pop
iret
inc
cmp
pop
mov
mov
cmpsb
push
xor
subb
insb
pop
popa
add
jecxz
mov
enter
div
jne
addl
xchg
insb
mov
mov
pop
adc
xchg
mov
jo
loope
repz
xor
pop
xchg
jge
and
dec
js
enter
push
inc
push
xchg
in
xchg
jge
pop
and
sbb
adc
dec
sub
xchg
ja
add
sbb
adc
mov
mov
xchg
adcb
fidivs
sarl
dec
insl
pop
push
dec
mov
jno
or
arpl
ret
test
and
ret
push
popf
jo
sub
lret
cmp
mov
inc
lods
sub
movsb
or
enter
add
les
outsb
shrl
int3
arpl
xor
sub
and
inc
jbe
fsubr
push
subl
mov
lods
mov
lds
jo
outsb
call
adcl
or
sub
mov
dec
popw
lea
add
bnd
pusha
sub
outsl
ret
mov
aaa
or
jo
pop
push
stos
xchg
jmp
mov
movhps
stos
psrlq
inc
outsb
adc
outsl
rol
insl
cmp
sbbl
pop
ja
pop
lock
or
mov
aam
stos
fmull
and
fsub
or
and
mov
mov
cmpsb
addr16
subb
push
inc
and
xor
jbe
sub
ljmp
cmc
jp
and
jbe
test
push
dec
inc
mov
xchg
jae
xchg
adc
push
js
xor
mov
pushw
mov
mov
jo
add
jae
shrb
xchg
negl
movsl
sbb
adc
pop
test
jge
add
add
dec
inc
cwtl
inc
or
or
mov
or
add
cmp
shl
xor
fstl
inc
pop
in
repnz
imul
adcb
jl
rorb
or
adc
mov
ss
imul
dec
js
xchg
xchg
xor
pop
cs
adc
lock
add
and
fsubrl
jb
popa
adc
add
sub
sti
adc
shlb
loopne
ss
rcll
dec
add
push
repz
fsubrl
sahf
jae
arpl
xlat
jo
mov
pop
lahf
add
es
jg
xchg
and
dec
inc
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
and
inc
add
insl
inc
add
add
