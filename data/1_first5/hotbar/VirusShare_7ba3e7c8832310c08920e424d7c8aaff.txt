divb
in
mov
mov
mov
push
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
add
stc
out
aas
mov
test
je
cmp
pcmpeqd
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
rcll
jp
jge
add
pop
push
push
push
push
xor
mov
push
mov
scas
stos
mov
std
adc
inc
add
cmp
pushf
or
jnp
or
push
mov
push
xor
cwtl
pop
jnp
mov
xchg
push
sbb
add
divb
inc
sub
ret
mov
jmp
pushl
sar
insb
jbe
jecxz
lea
or
lock
dec
test
jg
sbb
xor
adc
push
add
outsb
mov
push
scas
adc
mov
add
inc
jne
sub
sar
mov
je
daa
ret
push
repz
outsl
or
fadd
adc
pushl
mov
or
xor
dec
mov
mov
mov
call
pushl
mov
or
insl
adcb
data16
pop
cld
add
movsb
or
andl
mov
dec
lock
adc
push
xchg
adc
push
jge
pusha
outsl
adc
test
mov
fcomps
sub
dec
xor
dec
and
or
mov
mov
or
or
pop
cmpsl
push
cmp
mov
mov
aaa
ret
data16
call
sbb
add
push
jle
call
inc
mov
lea
mov
adc
cmpl
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
mov
and
or
ret
test
push
xchg
mov
call
lcall
dec
and
add
dec
adc
pop
xlat
fistpl
scas
push
sbb
push
or
sbb
push
scas
bound
fisttpl
sahf
add
push
jnp
mov
aas
fadd
push
pop
divl
mov
pop
pop
push
jno
lahf
out
aad
pop
add
pop
or
push
push
sbb
outsb
or
sub
icebp
mov
mov
cmp
push
mov
clc
nop
mov
aaa
xchg
xor
sarl
loop
ficoml
push
mov
cmp
insl
je
or
jge
insl
ds
fildll
cli
mov
mov
xor
mov
pop
ret
push
push
das
push
cltd
inc
rol
push
pop
jae
popf
popa
cmpb
int
inc
sub
mov
ja
inc
clc
sub
enter
loopne
jge
push
inc
ss
push
add
or
cvtps2pd
outsl
jo
das
lods
inc
test
jne
push
pop
testl
jmp
add
or
inc
clc
jg
mov
adc
adc
ret
pop
dec
jo,pt
add
jp
pop
movsl
pop
xchg
or
push
and
in
inc
decl
sub
push
mov
sar
imul
cld
ja
adc
pop
clc
stos
push
dec
dec
clc
add
push
loop
shr
adc
inc
sbb
push
in
sbb
cmpsb
adc
or
aam
out
sbb
enter
leave
ret
mov
ret
adc
cld
clc
fistpll
iret
jle
mov
cmpl
idivl
pop
push
out
jmp
push
cmp
jge
sti
testb
push
jle
add
pop
cltd
jge
mov
push
aam
push
sahf
xchg
add
push
sub
or
push
jne
test
incb
add
xor
xlat
adc
jbe
mov
add
ds
inc
add
inc
add
lea
push
add
push
push
lea
cmp
inc
or
adc
xor
into
mov
aam
pop
insb
hlt
cmpsl
cmpsl
jo
fsubrs
out
sbb
pop
adc
cld
fdiv
jbe
mov
stos
mov
decb
ret
imul
jge
test
jle
fld
ficomps
cmp
mov
inc
mov
fistpl
jle
sbb
pop
xchg
pop
jmp
push
push
or
lock
loop
cmp
and
sub
fsubr
mov
inc
sbbl
addl
mov
xchg
arpl
pop
sbb
lcall
sbb
adcb
and
sti
jbe
push
and
cmp
or
not
sbb
cmp
notb
shl
cmpsl
cmp
adc
cmp
jle
mov
inc
or
or
cmpl
je
push
cmp
cmp
jae
push
cmp
push
mov
inc
xchg
pop
pop
adc
ror
or
add
add
inc
push
sub
jb
pop
add
xchg
pop
std
notb
sub
ret
lea
ljmp
lcall
adc
push
push
sarb
cld
rcrl
mov
jmp
xchg
call
insb
or
addb
mov
pop
es
and
and
inc
sub
jo
cmp
aad
aaa
add
incb
rcrl
or
cmp
call
stos
sub
lea
cmp
jne
push
push
sti
mov
fdivp
push
push
pusha
in
js
scas
push
mov
mov
or
pop
pop
pop
pop
mov
push
mov
roll
test
mov
jge
mov
jne
cmp
add
sub
pop
iret
ja
mov
cmp
and
jno
add
jae
mov
cli
add
outsb
push
mov
nop
sub
imul
lahf
cmc
push
mov
pop
fdivl
lahf
testb
sbb
in
stc
or
add
imul
popa
jne
stos
or
pop
push
pusha
jo
mov
add
nopl
cli
movl
or
push
incb
dec
lea
aaa
clc
sbb
xchg
push
fisubs
out
out
fs
sbb
pop
add
dec
lcall
lock
mov
jb
push
lea
lods
enter
xor
cmp
cmp
mov
push
mov
xor
or
mov
outsb
daa
cmp
pop
sub
mov
mov
cs
loopne
scas
aas
roll
xchg
add
push
cmp
je
fidivrs
stos
bound
adc
or
jne
call
fisubl
jl
pop
xlat
mov
or
adc
cmpb
push
leave
jb
mov
out
sarb
loopne
push
fucomp
pop
cmp
cmp
fcmovbe
fcmovb
dec
or
mov
out
in
out
fildll
push
sbb
call
arpl
mov
push
add
or
jl
jg
xor
or
mov
outsb
int3
push
sbbl
or
stc
sub
add
or
and
push
rorb
or
dec
sub
add
nop
xchg
lock
push
ja
lock
mov
ret
pop
mov
mov
lahf
insb
out
xchg
loopne
addb
pushf
jb
lods
sbb
out
icebp
adc
adc
xor
cvtps2pi
shlb
adc
sub
add
mov
inc
lea
lods
ret
shrl
mov
mov
fistpl
insb
call
insl
or
out
popa
inc
lret
xchg
jo
leave
lahf
addr16
push
aas
mov
inc
or
push
mov
dec
in
sub
and
les
inc
and
mov
add
sbb
mov
js
jecxz
fs
sub
mov
adc
lahf
push
xchg
int3
or
jne
pop
inc
mov
sarb
es
orb
arpl
sub
lcall
mov
cmc
sbb
rorl
sub
jns
pop
and
push
test
insb
outsl
js
and
adc
popa
add
sti
clc
push
je
add
je
lock
es
fcomps
sar
inc
adc
jg
aad
andb
add
nopl
test
push
sarl
pop
imul
mov
mov
mov
bound
cmp
out
das
push
and
cmpb
mov
test
adc
jl
jo
jmp
or
incl
sbbb
adc
repz
aaa
mov
add
sub
and
repnz
and
outsb
sarb
jl
ret
pop
adc
fmuls
ja
fcmovnu
mov
xor
pop
sub
pop
mov
out
or
dec
rorb
inc
xchg
mov
fs
xor
enter
xor
sbb
xlat
and
gs
lcall
je
cmp
andl
or
add
or
push
or
push
sub
mov
std
pop
pushf
and
in
addb
jo
adc
sub
sub
jo
int3
mov
dec
add
adc
jb
iret
inc
out
and
sbb
je
scas
adc
lahf
xchg
mov
mov
sub
scas
sbb
adc
push
push
or
mov
xor
push
in
mov
clc
lea
repnz
mov
push
insl
in
sub
lcall
add
cmp
cmp
dec
xor
pop
xor
rclb
in
jle
jo
jne
lods
or
sub
mov
punpckhbw
das
push
loop
into
movsl
ss
imul
fadd
fistpl
test
popa
jbe
dec
std
in
test
add
push
adc
repz
fsubrp
sub
push
mov
push
mov
into
fsubrl
or
push
pop
sbb
push
adc
ret
sbb
mov
mov
ret
jno
bound
cmp
inc
jl
loopne
lods
lock
xchg
and
imul
aas
mov
fidivrs
aam
jge
aas
mov
push
push
cld
das
cmp
push
push
and
lock
add
loopne
clc
nop
dec
lock
rclb
fldt
mov
ja
push
aam
jnp
mov
cmp
test
push
pop
pop
adc
add
in
jecxz
cmp
stos
push
ljmp
mov
jmp
xor
push
pop
js
inc
pusha
je
sbb
pop
in
sub
mov
push
xor
add
js
fnstcw
dec
and
lods
stos
mov
test
dec
enter
loopne
in
test
mov
push
sbb
scas
jp
sub
fistpl
fistpl
jae
ret
je
popf
shll
push
stos
and
outsl
fcmovnb
shlb
nop
jb
gs
nop
les
xor
dec
sahf
inc
or
pusha
dec
mov
adc
push
jo
sbb
lock
xor
sbb
mov
pop
jnp
and
pop
lock
push
nop
or
in
enter
push
shlb
inc
cmpsb
ror
cmp
inc
aad
jl
cwtl
xor
lea
jno
pshufw
mov
fldcw
fdivp
push
xor
sub
les
inc
mov
hlt
fcoml
xor
mov
jge
out
sti
cmpsb
xchg
out
push
mov
pop
and
mov
mov
and
mov
lea
test
adc
and
cwtl
mov
enter
jo
jns
mov
enter
pop
les
xchg
and
les
adc
mov
dec
dec
arpl
xchg
and
iret
sbb
xchg
inc
movsb
sbb
jmp
shlb
inc
scas
movsb
insb
sbb
in
sbb
xlat
mov
shll
and
jmp
inc
rcrl
sub
mov
ss
hlt
sbb
jnp
jo
loopne
mov
in
jge
jmp
jle
adc
sub
push
xchg
test
fisttpl
pusha
and
push
sbb
adc
lds
add
add
sbb
adc
jnp
hlt
lock
adc
and
add
mov
in
js
btsl
and
push
mov
and
and
mov
sti
movsb
and
push
aaa
adc
xchg
jmp
inc
je
jo
xchg
call
clc
fs
lods
adc
xchg
fsubl
je
jne
add
test
xor
outsb
pop
je
sub
test
ret
and
pop
dec
loopne
int3
adc
push
ja
shr
aam
add
mov
xor
adc
aad
mov
nop
sub
push
jle
dec
xor
add
jne
mov
fcmovne
push
xlat
pop
enter
jmp
loopne
insb
roll
aad
xor
shll
mov
adc
test
push
or
lcall
or
adc
xor
mov
call
das
xchg
insl
test
or
sbb
shll
mov
mov
push
scas
jmp
push
lea
and
or
add
mov
pop
jecxz
inc
xchg
sarl
test
mov
mov
jo
and
pop
push
adc
icebp
aad
insb
inc
adc
shrl
inc
xor
jno
shrl
sbb
out
xchg
pop
out
into
adc
cmc
es
inc
adc
shlb
idivl
add
sub
push
add
push
or
cltd
cmp
subl
fs
push
xor
sbb
add
fistpl
sbb
pop
inc
jne
pop
sub
cmp
mov
sbbb
xor
push
xchg
in
cmpsl
jl
popf
sahf
sbb
jecxz
or
cmpb
adc
sahf
les
mov
and
nopl
xorl
fs
testl
imul
add
stos
push
xlat
inc
push
push
or
cmp
xor
inc
ds
ret
pushl
adc
mov
movsl
push
inc
adc
mov
psrlw
ret
or
add
jl
mov
mov
mov
lods
jl
push
stos
xorb
jle
test
cmp
add
aaa
push
push
fs
sahf
loopne
loop
sbb
test
ljmp
pusha
mov
movsl
lock
adc
add
cld
int3
inc
sbb
lock
std
xchg
ja
add
stos
and
test
mov
push
sahf
sub
loopne
lret
sub
push
and
inc
adc
and
cmp
push
call
bound
das
add
ret
ret
mov
fadds
jnp
add
sbb
test
ss
std
daa
cmp
negb
pop
rcr
xchg
add
incb
imul
and
push
adc
outsl
cltd
test
or
mov
in
push
icebp
mov
scas
sub
pop
and
push
sub
push
ljmp
sub
push
test
pop
pusha
cwtl
sbb
shll
xor
ret
test
movsb
ljmp
outsb
sti
in
or
stos
add
imul
xchg
inc
pop
mov
sbb
xchg
ljmp
ss
pusha
sub
sbb
movsb
mov
loope
inc
and
movsb
sub
imull
mov
lret
pop
mov
adc
sbb
adc
inc
aad
icebp
xor
lret
push
or
sarb
scas
add
sbbl
cltd
stc
jmp
test
adc
sub
test
sub
imul
mov
fsubrs
mov
andb
cmpsl
mov
fmull
or
inc
push
fsubs
popf
cmp
stos
inc
and
cmp
dec
mov
push
bound
sub
popa
call
sub
mov
mov
inc
popw
enter
in
cmp
sbb
xchg
daa
or
sbb
outsl
pop
xchg
pushl
jnp
xchg
dec
nop
sbb
sub
shlb
inc
imul
lock
inc
sbb
outsl
inc
sub
jnp
xor
sub
fldt
inc
cmp
fldcw
jae
mulb
add
popa
nop
add
sbb
pop
mov
xor
sbb
push
movsl
js
inc
pusha
sbb
ret
push
cli
push
sbb
xchg
sbb
and
jae
sub
sub
inc
sahf
add
cmp
and
test
xor
and
or
mov
jmp
push
push
ret
shll
add
adc
inc
xor
add
adc
add
popf
sbb
pop
cmpsb
fisttps
stos
test
jecxz
fistpl
adc
icebp
movb
push
add
imul
and
sub
and
fdivrs
sub
ret
xor
sbb
jo
jo
xchg
int
push
inc
mov
loop
mov
pop
jge
jge
adc
je
sub
fcomp
push
pop
dec
pop
push
lock
dec
adc
mov
and
fcoml
jg
and
push
sub
mov
insb
pop
mov
je
mov
adc
bound
mov
xchg
push
mov
stc
adc
bnd
daa
push
add
jge
mov
add
adc
mov
mov
jo
stos
lcall
mov
add
xchg
push
aaa
xchg
les
aam
mov
mov
mov
icebp
cs
cs
adc
push
inc
cwtl
pop
popf
movsl
sbb
cs
add
and
mov
in
jbe
std
lock
push
inc
jns
cmp
loope
sub
add
in
into
cmc
mov
pop
xor
jno
test
mov
add
loop
lock
dec
setne
mov
xchg
pushf
or
mov
sub
push
data16
decl
in
gs
pop
out
jne
or
je
rorb
cs
push
imul
xchg
and
xchg
das
mov
sub
in
push
rclb
faddl
out
pusha
dec
out
add
orl
cmc
add
lods
push
jne
or
test
cmp
test
add
lret
pop
test
lcall
mov
not
add
push
lahf
je
mov
add
push
push
cld
sub
inc
jnp
fsub
push
out
inc
out
push
je
push
jo
or
icebp
lahf
sbb
mov
imul
shrl
pusha
scas
jne
aad
jb
leave
mov
iret
push
mov
dec
sub
addr16
mov
dec
imul
push
mov
or
pop
push
pop
mov
icebp
ds
inc
int3
add
mov
aad
mov
or
fsubl
dec
dec
mov
push
ror
push
loopne
insl
adc
mov
hlt
movzwl
test
xor
add
ss
out
dec
pop
pop
jmp
jge
imul
push
jmp
adc
mov
mov
daa
sub
int3
mov
lcall
or
push
mov
dec
mov
mov
add
aas
inc
ret
sub
test
or
mov
mov
xor
inc
mov
sarl
add
jae
out
push
pop
dec
dec
push
mov
jl
jae
ret
cmp
jle
inc
mov
cmp
fisubl
test
pusha
ret
add
jp
mov
inc
mov
add
ja
movsl
and
cmp
mov
mov
add
or
mov
mov
jae
add
or
mov
mov
add
adc
fcompl
dec
scas
leave
sti
add
push
mov
filds
jge
push
and
lea
push
into
out
mov
lcall
daa
iret
into
or
jne
loopne
sbbl
and
push
popa
or
inc
icebp
test
sub
cmpsb
and
lods
in
setns
mov
fcoms
shlb
cmpsb
cltd
fisttpl
dec
outsb
loopne
mov
out
int3
mov
add
push
iret
dec
test
out
push
add
inc
cmp
enter
pop
es
cmp
inc
sub
es
or
out
das
jnp
call
sub
or
shll
icebp
jmp
fadds
test
incl
push
lods
aam
lods
pop
data16
subb
mov
cli
jg
fwait
push
test
pmulhuw
sbb
and
push
push
mov
adc
or
iret
fcoml
in
pop
mov
outsl
cmp
loopne
mov
ja
cltd
test
or
mov
lock
xor
push
lods
sbb
mov
scas
in
push
movsl
imul
arpl
scas
aas
xchg
add
movsl
add
mov
mov
push
lahf
addl
loopne
lea
push
add
in
push
clc
push
push
call
and
sbb
addl
iret
add
ss
lret
sahf
mov
sbb
jmp
call
push
inc
std
or
cwtl
leave
mov
jbe
mov
or
xor
setbe
cwtl
xor
insb
adc
cmp
mov
adc
or
inc
sahf
mov
and
sub
cmpxchg
jge
icebp
addb
jbe
retw
or
add
fs
mov
mov
push
and
cmpb
mov
movsb
fcoms
sahf
lahf
imul
loopne
add
and
mov
mov
xor
sub
pushl
call
and
ret
shr
movzbl
mov
adc
push
ret
push
push
inc
push
sbb
inc
mov
repnz
imul
mov
das
mov
jl
cmp
mov
pusha
arpl
adc
xchg
jbe
add
je
cmp
gs
mov
xor
mov
jecxz
xlat
cmp
icebp
addl
or
push
ror
cmc
add
mov
jmp
lahf
mov
jmp
sar
xor
dec
enter
inc
push
push
mov
cmp
jg
mov
leave
clc
inc
adc
jge
leave
rorl
sbb
negb
pop
xchg
cmp
cmpsl
aaa
cs
push
popf
xchg
enter
mov
scas
nop
enter
out
popa
cld
or
mov
mov
ljmp
push
jne
jmp
mov
insb
cs
dec
ret
popa
dec
movsb
mov
mov
push
pop
pop
and
ret
cmp
in
and
popa
mov
hlt
test
aaa
mov
outsl
inc
xlat
push
mov
aam
dec
in
mov
mov
jg
lea
cmp
jae
mov
incl
xor
cmp
pop
add
jp
and
loop
div
jmp
lea
pop
jb
cmpl
mov
fbld
sbb
sub
sahf
imul
add
int3
loop
cmp
add
repnz
mov
push
mov
icebp
sbb
flds
cld
ret
lcall
je
nop
add
mov
sub
xor
sbb
jp
dec
add
lea
and
push
push
sbb
pop
mov
dec
push
push
adc
dec
cmp
and
xchg
add
lock
mov
sub
inc
push
mov
insb
mov
cmpsl
mov
dec
popl
cld
dec
mov
ljmp
or
es
push
aas
je
test
js
push
hlt
jg
in
cs
or
push
sub
dec
jmp
cmpl
insl
sub
loope
mul
dec
jae
xor
add
inc
xchg
loope
outsb
push
push
push
pop
or
push
push
xor
adc
mov
xchg
push
inc
lahf
pop
notb
inc
adc
mov
test
cmp
jl
repz
push
or
add
mov
push
push
push
cmp
inc
mov
push
cmp
shll
adc
adc
jae
ja
mov
fdivs
sbb
xchg
push
dec
cwtl
dec
mov
lcall
mov
pop
hlt
lea
xchg
movsl
lods
stos
cmpsl
mov
or
scas
test
ss
inc
scas
jl
pop
rorb
mov
clc
shrb
push
mov
cs
jbe,pt
cmp
cmp
sbb
loop
pop
mov
add
jg
add
or
add
push
add
mov
mov
sub
frstor
mov
adc
mov
cli
inc
shrl
outsb
ljmp
sbb
std
and
adc
jle
mov
mov
movsl
test
pop
ja
adc
sarl
xchg
sub
insl
cld
or
in
xchg
jg
cmpsl
push
je
fildll
cmp
jne
cmp
negb
pushl
movb
test
jmp
push
push
push
and
inc
lfs
insb
mov
jecxz
push
ja
sbb
pop
inc
leave
push
and
jno
mov
xor
sbb
push
sbb
sub
setne
shrb
outsl
pop
addr16
inc
inc
jne
jecxz
outsl
call
add
aad
push
test
adc
js,pt
in
adc
loop
clc
jg
mov
jbe
inc
daa
call
shll
icebp
std
push
ds
sti
ret
aad
adc
sub
adc
outsl
ss
xor
cli
cmp
jne
scas
mov
add
pop
ficomps
add
pop
push
jl
insl
and
lock
cmp
clc
jge
movsb
push
out
sbb
hlt
push
addb
add
add
or
sarb
push
pop
add
ss
inc
shrb
and
inc
push
push
or
sbb
push
cmp
add
pop
sub
jle
mov
sub
shr
fwait
jg
sar
or
pop
jg
aas
sbb
xchg
sub
mov
lock
add
insb
cld
cmp
lea
jbe
mov
push
inc
add
test
push
inc
add
ss
test
mov
int3
mov
scas
roll
call
movl
pop
fdivl
adc
cmp
cmp
add
movsl
cmc
les
popf
push
fwait
push
mov
xlat
in
pop
inc
fsubl
ds
mov
test
add
sub
add
mov
aas
and
or
addb
jle
mov
scas
mov
daa
push
cmp
int3
sbb
lcall
sub
lods
add
add
sbb
pop
or
sub
mov
dec
or
cmp
sbb
incl
popa
testl
imul
pop
sub
mov
cmc
mov
mov
cmp
cmp
aad
add
push
cmp
xchg
jmp
js
dec
mov
mov
dec
jb
popf
call
in
ja
add
fsubrs
push
inc
test
cmp
add
pop
pushf
dec
test
aad
dec
xorb
in
jo
push
inc
cmpsb
sbbb
add
add
mov
add
rcl
jmp
mov
pop
les
push
push
into
cs
pop
cmp
clc
inc
and
insb
add
xchg
dec
push
inc
jmp
mov
sbb
jmp
xchg
pop
and
and
leave
adcl
mov
push
repnz
cld
mov
inc
pop
lock
dec
dec
sti
mov
or
je
pop
add
dec
popf
xor
push
pop
and
cwtl
mov
dec
cs
mov
inc
inc
in
or
pop
push
out
mov
adc
fwait
hlt
ds
sahf
sub
lcall
push
dec
jns
xor
sahf
mov
out
cs
push
enter
scas
push
int3
inc
add
ljmp
movsb
add
clc
loope
push
leave
repz
mov
and
mov
repnz
lock
sbb
mov
inc
add
and
clc
sub
inc
inc
push
shrl
adc
inc
push
jns
adc
sbb
xlat
mov
call
mov
add
or
sub
mov
sbb
mov
push
adc
pop
or
sbb
in
sbb
mov
loop
inc
and
int
daa
cmpsb
mov
ret
adc
mov
and
push
lea
jb
sub
negl
push
adc
sub
dec
adc
leave
rorl
xchg
adc
and
pop
in
mov
push
and
in
fmul
mov
inc
sbb
cmp
and
sbb
sbb
stos
outsl
push
cmp
test
loop
push
lcall
xchg
push
test
jle
mov
and
enter
xor
stos
or
stc
jg
rclb
sbbb
imul
stc
adc
cmp
popf
mov
jge
inc
pop
sbb
push
cmp
mov
ret
shrl
pop
negl
mov
push
adc
sarb
roll
jle
push
mov
sbb
into
pop
mov
cmpps
sub
or
dec
add
pushf
push
jbe
mov
jne
data16
mov
sbbb
clc
je
pusha
jmp
or
sub
dec
je
mov
je
sub
adc
fsts
test
ss
wbinvd
sub
dec
push
jmp
mov
mov
loop
fwait
sub
jne
and
mov
jecxz
jne
lock
lret
push
add
push
mov
cld
pop
rcl
or
lea
inc
call
sbb
mov
jp
fcomps
xchg
or
pop
out
fscale
push
mov
mov
sbb
loopne
dec
inc
mov
mov
iret
xchg
mov
insb
push
xor
push
push
mov
jg
daa
pop
pushl
js
insb
outsb
sub
sub
imul
inc
sbb
sarl
cmp
je
cmp
in
scas
imul
jmp
inc
sbb
leave
adc
stc
sub
cli
mov
sbb
fstpl
jge
cmp
jmp
sbb
movsl
inc
xchg
push
and
jmp
and
icebp
rcrb
movsb
jmp
xchg
sbb
loope
cmp
pop
bound
lea
lods
rorl
pop
sbb
dec
out
repnz
std
push
fcomi
pop
decl
or
adc
and
icebp
das
pop
push
in
sbb
inc
sbb
fstl
lea
enter
pop
adc
sub
mov
or
int
push
xchg
es
mov
xchg
out
push
push
push
or
xchg
xchg
daa
movsb
cld
js
jge
pop
decl
inc
push
mov
mov
mov
lea
push
lea
push
push
push
push
add
push
lea
sub
xchg
mov
jne
inc
cmpsb
add
dec
mov
inc
test
fwait
xor
mov
pop
test
or
xorl
pop
push
push
pop
or
pop
repnz
arpl
sbb
jnp
shrb
and
scas
push
je
xchg
scas
sbb
push
or
pop
push
push
add
jl
inc
xor
add
popf
push
cmp
xchg
test
sub
ret
lods
push
popa
jp
rorb
dec
adc
dec
adc
cmc
adcl
mov
dec
xchg
jne
movl
outsb
jo
jno
jle
ss
in
or
push
jno
jmp
sahf
pusha
and
cmp
repz
xchg
insb
sub
testl
sub
push
add
shll
inc
dec
and
or
or
xchg
je
mov
aam
or
push
enter
imul
pop
stos
xchg
call
in
in
inc
xchg
pinsrw
icebp
in
push
dec
pop
popa
ret
mov
push
lock
xor
arpl
mov
or
aas
arpl
mov
push
mov
sub
push
push
push
into
imul
cmp
jbe
mov
jb
adc
rolb
flds
cmp
je
add
jecxz
jbe
xor
cmp
mov
les
push
xchg
clc
push
add
aam
push
loopne
lds
jnp
popa
and
push
cmp
loop
push
stc
add
inc
mov
imul
adc
add
jle
cli
fucomi
lods
adc
outsb
inc
add
cmp
xchg
fmull
or
xchg
rorb
adc
jecxz
int3
cmp
setno
out
jne
push
sub
xor
pop
pop
inc
adc
fdivrs
enter
mov
or
je
lea
push
loopne
add
rorb
lret
jo
and
std
cmp
push
sbb
cmp
jne
call
push
pop
int
ret
adc
and
push
pop
xchg
sub
or
sub
les
jbe
mov
lock
div
fidivrl
push
dec
je
dec
push
outsl
aam
rcrb
jge
je
movsb
sub
sub
push
push
pusha
cmp
lcall
cmp
push
mov
insl
fstpt
add
mov
inc
adc
dec
cmp
iret
and
pop
xor
dec
stos
rcl
loopne
fcomi
jge
push
shlb
or
repz
rep
push
in
in
jno
and
or
adc
jecxz
into
daa
mov
sbb
mov
pop
neg
sbb
dec
sbb
fildl
mov
add
inc
out
pop
sbb
xor
mov
movsb
in
imul
push
pop
divl
adcb
push
idivb
push
sub
mov
xor
ret
je
mov
into
in
mov
sbb
and
push
push
lds
sahf
sub
out
insl
pop
mov
pop
out
jl
mov
test
push
test
pusha
sahf
jl
dec
mov
scas
and
add
pop
inc
ja
dec
cmp
adc
punpckhdq
xor
jne
push
pop
out
imul
or
jp
or
test
xchg
pop
insl
or
loop
pop
pop
jns
mov
lock
ret
loopne
idivl
rorb
loop
jle
cmpl
jo
mov
jne
pushl
sbb
int
push
sbb
push
adc
fcomps
je
outsl
fcoml
mov
add
sbb
test
fmuls
and
dec
cmc
add
pop
stos
inc
loopne
xor
sti
je
cmp
cmp
rcrl
push
lcall
shl
or
and
pusha
test
add
inc
mov
ret
mov
in
push
dec
aam
jmp
xor
sbb
icebp
jg
pop
incl
jne
movb
jmp
cmp
jne
mov
adc
fldz
xor
push
loop
ret
cwtl
sahf
jo
jle
xor
adcb
repnz
mov
jp
cmp
lea
lea
mov
lret
sub
cmp
dec
sbb
or
mov
mov
loopne
sti
dec
mov
or
popf
sub
mov
out
inc
rorb
sbb
push
sbb
es
add
push
pop
pop
ret
dec
rcl
push
mov
cmp
ja
loope
iret
push
adc
enter
cltd
add
shrl
out
push
mov
push
fsub
jl
std
jmp
add
add
mov
mov
ja
je
sub
test
pop
cmp
sarl
js
sbb
dec
inc
push
push
push
lea
cli
adc
js
push
shlb
xchg
mov
adc
sub
push
push
lret
jl
xchg
andb
cmp
cmp
jbe
xor
popf
test
mov
adc
and
inc
adc
cmpb
dec
xor
clc
test
enter
mov
cmp
inc
outsb
imul
aaa
inc
fldl
fmull
dec
pushf
push
out
popf
mov
push
add
rcll
mov
movsl
and
fdivl
adc
adc
cltd
cli
les
sub
add
out
mov
inc
add
js
incb
add
insb
inc
jae
mov
pop
movsb
popa
in
and
loop
ds
or
sbb
cmp
adc
mov
cmp
adc
fmuls
dec
rorl
dec
and
xor
pop
or
aam
or
cmc
jmp
nop
dec
xchg
push
and
shl
stos
mov
adcl
adc
lds
push
jle
cld
icebp
iret
popl
xor
aaa
push
pop
cmp
pop
inc
ss
push
es
push
std
pop
nop
pop
jne
cs
sub
push
push
out
out
fstps
add
jmp
adc
sbb
and
jp
jbe
repz
mov
or
fisubrs
add
mov
loopne
fidivrl
push
cli
or
push
icebp
into
subb
push
xchg
pusha
adc
push
gs
push
jmp
cmp
popa
add
push
lods
push
push
cltd
sub
push
jecxz
popf
adc
fidivl
divb
or
out
jo
addr16
out
mov
inc
lea
icebp
add
xor
xchg
jle
in
adc
inc
mov
push
xor
and
xor
cltd
mov
inc
inc
and
lea
ret
shr
fcmovnb
decl
orl
rcrb
and
mov
cwtl
mov
jge
mov
lahf
fisubrs
idiv
push
mov
push
push
mov
and
push
ret
xor
idiv
xor
mov
out
mov
jp
fstpt
mov
stos
xor
push
test
push
pop
divl
cmp
andl
sbb
clc
pop
mov
or
aam
mov
hlt
lock
fucomip
or
out
sbb
fstpl
push
pop
insb
xor
clc
arpl
sub
sub
clc
je
popf
hlt
aaa
add
lea
cltd
idivl
fistl
jp
xor
pop
sarb
daa
pusha
js
or
popa
jg
fs
or
xchg
sub
mov
test
movsl
fisubrl
jbe
lahf
xor
not
lahf
sbb
dec
int3
loope
call
jl
outsb
sti
pop
xchg
sub
cmp
or
or
js
decl
out
insb
mov
hlt
out
stos
mov
mov
test
jns
faddl
adc
sub
loopne
enter
fdivrp
mov
sub
mov
lea
test
mov
inc
fidivrs
cmp
add
pop
sbb
push
insl
add
or
clc
fidivl
jmp
add
dec
subl
cli
outsb
lods
iret
xor
push
pop
mov
shr
pop
pop
movb
push
adc
test
jmp
mov
mov
jp
pop
add
mov
cli
stos
ljmp
clc
lea
dec
xlat
and
cmpsl
je
sub
in
mov
jne
push
gs
sub
je
or
in
dec
jecxz
pop
and
xor
shrb
cmc
push
xchg
dec
mov
or
into
pop
leave
movsl
and
ds
aad
sbb
scas
push
out
pusha
stos
sub
js,pn
nop
sub
add
imul
call
sub
repnz
data16
imul
fs
mov
mov
testl
and
rorl
mov
mov
inc
jne
sti
inc
das
jle
mov
push
movsb
sbb
fldpi
adc
push
fisttpl
pop
leave
xor
sub
shrb
ljmp
lea
push
sbb
sbb
inc
mov
adc
push
lods
dec
shlb
mov
ja
test
roll
or
add
inc
dec
cmpsb
mov
dec
in
adc
inc
pop
pop
mov
das
pop
adc
sub
js
test
insb
scas
jle
sub
add
outsl
pop
jge
imul
call
push
sbb
scas
leave
sub
sbb
jb
xor
sbb
inc
ljmp
adc
inc
pop
dec
shlb
lods
dec
mov
pop
int3
out
pop
rorl
xchg
and
push
add
repnz
stc
lock
adc
test
mov
addr16
inc
cli
and
loop
leave
push
cmp
sti
and
pop
aaa
and
mov
pop
mov
and
in
dec
or
sbb
popa
inc
rcll
push
sub
clc
fs
fisttps
mov
sub
inc
cld
mov
shrb
mov
clc
setb
test
pop
add
add
mov
sub
cmp
add
lock
mov
dec
adc
data16
push
lea
push
mov
fisttps
aaa
cmpb
jle
je
push
loope
mov
pop
pop
pop
lcall
insl
dec
shlb
in
add
shll
inc
dec
adc
adc
imul
je
dec
imul
sti
xchg
add
shrl
inc
cmp
or
mov
das
push
mov
jp
pop
mov
push
adc
sarb
push
cmp
jl
inc
aaa
sbb
or
jp
fdivrl
xor
mov
cmp
jo
mov
inc
cmp
add
icebp
xchg
ret
push
das
mov
cmp
jg
imul
stos
add
push
push
lock
sub
enter
xlat
cltd
sbb
or
jo
fs
sbb
sarb
out
adc
out
das
sub
pusha
sbb
xor
jg
add
pusha
jmp
push
adc
fisubrs
or
test
pop
cmp
push
fs
pop
in
shll
and
push
and
adc
push
mov
cs
fisubs
insl
sub
or
cmp
or
sbb
mov
xor
add
scas
adc
into
xchg
insl
loopne
and
rorl
hlt
outsb
arpl
aam
les
imul
adc
pop
cmpsl
inc
ss
lods
xor
les
enter
push
test
les
jle
push
enter
test
dec
shrl
pop
in
out
add
leave
xor
fadds
insl
adc
testl
repnz
arpl
insb
fmull
xchg
addb
fisubs
out
xchg
xor
aaa
pushl
push
imulb
sub
and
les
or
cmp
fstl
sbb
scas
test
add
call
push
das
jle
gs
mov
orb
xchg
add
adc
sbb
push
mov
and
and
push
adc
push
cwtl
pop
bound
pusha
mov
call
xor
push
adc
movsb
pop
push
or
jo
inc
lock
testb
outsl
and
cmp
hlt
imul
or
pop
lods
imul
and
or
xlat
push
or
adc
sbb
mov
or
xor
jbe
inc
mov
adc
jnp
imul
mov
test
or
dec
xor
mov
sbbb
dec
sbb
xchg
push
pushl
pop
les
adc
out
adc
pop
xor
arpl
dec
cmp
das
mov
xor
xor
ret
je
scas
dec
jae
sbbb
cmp
jmp
decl
mov
jmp
dec
mov
sub
sbb
push
mov
lcall
dec
add
dec
inc
pusha
inc
xor
mov
cmpsl
xchg
sub
ficoml
js
mov
sub
mov
clc
jg
js
cmp
jge
mov
mov
jl
movb
or
cmp
jle
sub
xor
int3
or
cld
mov
std
push
xor
xchg
pop
push
inc
movl
or
mov
mov
mov
and
insb
sbb
fmul
aad
dec
ja
xor
dec
dec
mov
cmp
in
mov
enter
add
and
cmp
sete
cmp
fistl
sbb
loope
and
je
movsl
add
arpl
and
stos
push
or
lods
mov
test
insl
invd
cwtl
jno
dec
out
les
stos
mov
jge
mov
dec
adc
subb
pop
rolb
mov
ljmp
rcrl
repz
push
sbb
push
aam
pop
loop
xchg
jl
add
clc
push
mov
add
add
add
sbb
pop
int
pusha
jo
pop
loope
mov
xor
and
jo
je
add
and
fstps
dec
sti
mov
jecxz
js
push
cli
fsubs
adc
enter
ret
pop
mov
fcmovu
push
iret
ss
xchg
cmpsl
push
outsl
mov
popf
jae
mov
cmp
push
pop
or
loopne
push
or
aam
pop
xchg
sti
add
push
jo
xor
mov
inc
mov
out
cmpsl
sahf
outsl
mov
jne
mov
adc
push
pop
loop
push
in
adc
dec
imul
pusha
xchg
aaa
sbb
fldcw
lock
or
repz
sahf
jo
pushf
call
xchg
push
fdiv
in
and
rolb
pop
jl
pop
or
arpl
dec
movsl
imul
in
test
xchg
jle
testb
cmpsb
enter
or
jbe
sbb
enter
enter
scas
or
jp
xor
xorl
popf
shlb
enter
xorl
mov
jl
xchg
loopne
cmpsl
xchg
fnstenv
sarb
or
jg
mov
dec
movsl
jbe
movzwl
jp
push
push
jne
jecxz
pop
ds
pop
dec
test
jb
push
jecxz
cmp
push
push
call
test
sub
dec
adcl
mov
into
clc
aam
pop
test
push
sbb
ret
mov
lods
sbb
mov
jecxz
lahf
adc
movb
mov
std
lds
addr16
rorb
xor
inc
lahf
xor
push
push
popf
pop
imul
or
dec
nop
popf
add
insl
push
or
inc
loopne
cmp
and
into
push
repz
mov
and
mov
test
mull
jge
addl
pop
mov
sub
xor
inc
push
inc
imul
out
shl
sub
push
adc
mov
inc
je
push
mov
push
sbb
push
and
or
ret
mov
ja
andl
mov
add
add
repz
pop
fsts
sub
ret
add
outsb
clc
addr16
movl
dec
lea
xchg
dec
sub
add
loop
movsb
sub
and
xchg
pop
loop
push
xor
push
mov
les
cmp
push
add
inc
imul
movsb
subb
leave
int
sbbb
stc
pop
ljmp
adc
test
jp
mov
sbb
out
daa
das
nop
sbb
xchg
mov
cmpsb
rcll
inc
add
inc
inc
jg
test
mov
jmp
mov
mov
pop
xor
jae
push
cmp
pop
or
js
fneni(8087
push
add
inc
test
lock
xlat
or
inc
sub
ds
xchg
addl
sub
test
adc
in
add
aam
dec
js
call
and
ficoml
jbe
dec
cmp
and
inc
nop
or
inc
push
jb
nop
fnstenv
jno
inc
pop
call
inc
push
add
stc
adc
js
imul
shlb
ja
dec
or
mov
mov
orl
sbb
je
xchg
jb
outsl
pop
cmpb
cmp
add
add
or
jae
add
dec
or
nop
sub
ljmp
cmp
ljmp
pop
dec
add
in
dec
push
ja
or
inc
inc
add
fcmovnb
shlb
in
add
adc
mov
inc
adc
mov
rcrb
pop
stc
sub
test
xor
fstps
push
sub
add
loopne
adc
sbb
loopne
sarb
sbb
inc
or
lret
es
data16
sbb
punpckhwd
lcall
or
stos
mov
mov
mov
mov
cli
push
push
mov
mov
test
jp
or
xor
push
std
js
or
addr16
loopne
sub
popf
jl
inc
lock
ficoml
add
xchg
lea
ret
mov
push
add
repz
lea
fisubrs
dec
mov
xor
cmp
pop
mov
fwait
sbb
add
push
lock
inc
dec
mov
test
leave
aad
in
xor
pushl
js
stc
cs
sub
cli
lods
xchg
popa
mov
pop
imul
xchg
xchg
lods
ret
rdmsr
sub
push
sbb
in
je
outsl
pop
dec
lock
cmpl
faddl
jp
jecxz
mov
popf
push
shl
sub
sub
ds
loope
sbb
out
pop
icebp
sbb
mov
sahf
pusha
push
jg
adc
cmp
or
rclb
insl
fnstenv
dec
dec
mov
ja
push
sti
push
jno
testb
mov
push
push
push
and
das
mov
stos
push
or
push
add
shll
sarl
push
call
xor
cmp
orl
pop
lret
stos
push
lock
mov
jne
inc
lea
icebp
adc
scas
rol
subl
je
mov
mov
cwtl
nop
out
and
sbb
out
pop
in
cmpsl
sbb
xor
cs
jns
adc
or
fs
and
push
dec
cs
stos
add
test
or
xchg
dec
pop
push
inc
jb
dec
int
popf
int
js
rcrb
mov
and
adc
add
add
mov
push
mov
cmp
mov
sub
test
xor
mov
popf
adc
sbb
pushf
movzwl
pop
iret
shrb
mov
nop
je
fbstp
xor
cmp
jecxz
xchg
test
inc
popf
pop
int3
mov
jl
xor
inc
test
jbe
rorl
xchg
shlb
jge
push
jp
std
sarl
mov
push
outsl
mov
add
test
cli
rcr
test
fs
xchg
outsl
or
push
lock
inc
divl
das
daa
mov
push
cmp
sbb
mov
sahf
xchg
inc
in
add
cmc
inc
ret
sbb
cmp
fdivr
sub
movsl
jb
js
cmp
push
sbb
inc
mov
sub
pushfw
stos
loop
or
push
add
loopne
popa
icebp
scas
stos
out
mov
lea
push
mov
mov
in
pop
setg
cmp
add
add
popf
in
pop
mov
mov
lock
mov
cmc
mov
inc
mov
xor
fdivr
mov
loopne
insl
sub
xchg
pop
adc
xor
mov
adc
mov
cwtl
jno
dec
xchg
aam
pop
mov
rolb
mov
or
aas
dec
out
rol
push
push
adc
jg
pop
pop
mov
add
inc
out
sbb
xor
inc
aam
push
loope
test
dec
push
fisttpll
aam
add
push
repnz
les
add
or
mov
aas
inc
popa
dec
sub
jnp
enter
push
outsl
add
mov
xchg
or
clc
jbe
xchg
mov
mov
aam
in
xor
cmpsl
aam
fnstenv
inc
pop
adc
push
popa
insl
popf
or
xor
and
jns
mov
call
fiaddl
push
gs
fiadds
fisttpll
adc
dec
pusha
int3
xchg
jno
inc
fmul
adc
js
loop
aaa
les
imul
pushf
lods
xor
repnz
push
fsubl
adc
repz
gs
or
add
jecxz
enter
jmp
das
mov
lods
loope
push
mov
test
jae
inc
xor
lcall
and
mov
mov
mov
adc
rorl
cmp
add
mov
bound
das
push
popa
xchg
and
pop
loop
popf
mov
test
dec
and
pop
pusha
pop
popa
cld
stos
add
rcrl
push
and
xorl
jecxz
inc
ret
sbb
mov
movsl
sub
lds
or
icebp
lret
sub
jne
pop
loope
add
jge
inc
xchg
push
add
cli
mulb
and
sti
push
sbb
fadds
jns
pop
testb
inc
xchg
mov
cmp
jg
insl
je
push
push
stos
arpl
xchg
xchg
pop
push
adc
das
pushf
inc
pop
push
sbb
pop
sub
jbe
addb
add
popa
pusha
and
pop
imul
xlat
jnp
push
pop
add
inc
or
xor
sbb
sbb
stc
shlb
outsl
jno
xor
or
rcrb
jno
cmc
lds
cmpsl
mov
jne
push
pop
cmp
les
push
mov
xor
mov
pop
ss
and
cmp
mov
movsl
xchg
xor
movb
pop
add
and
and
add
cltd
fiaddl
and
lea
and
add
mov
cmp
inc
sbb
jl
and
or
rcll
pop
es
mov
sub
or
sbb
cmc
fdivl
daa
int3
sub
pcmpgtd
and
jge
xchg
mov
mov
lock
cmpl
sbbb
sbb
jl
fcoms
aas
aam
mov
dec
jle
daa
das
insb
inc
xchg
xchg
das
fcoml
sub
rcrb
sub
push
xchg
or
out
insl
mov
int3
xor
dec
mov
sub
dec
paddusb
in
adc
inc
push
xor
mov
sub
push
repnz
fdivr
sarb
xor
add
pop
sub
sub
insl
sub
test
out
jecxz
out
ja
push
mov
or
mov
jp
push
les
or
popa
pop
add
loope
ljmp
mov
js
add
push
push
clc
push
push
pop
mov
rcl
or
mov
cmp
ret
mov
loop
mov
ljmp
leave
test
adc
ss
or
add
loopne
data16
scas
adc
fcompl
cmp
cld
xchg
test
sbb
mov
incl
push
add
sub
or
add
xchg
mov
popf
or
or
add
or
fisttps
and
mov
jno
inc
out
repz
xchg
pop
or
sub
push
xor
lea
inc
movl
xor
or
inc
and
ja
dec
subl
lock
jnp
or
fwait
lret
add
and
cli
inc
call
addr16
jmp
cmpl
push
mov
and
adc
xchg
adc
int3
int3
push
mov
fildll
es
xchg
adc
out
divl
mov
nop
mov
push
add
dec
loopne
out
mov
insb
xlat
jno
add
imul
or
or
sub
add
js
push
stc
sub
push
xchg
jmp
loopne
lock
cmpb
outsb
sub
push
push
pop
imul
jecxz
add
mov
popf
fadds
mov
xor
or
push
sub
popf
cmp
aad
push
sub
mov
inc
loopne
jecxz
add
mov
sub
pop
sahf
sbb
int3
orl
ficomps
adc
push
adc
shlb
sub
push
loopne
jbe
push
sub
dec
imul
out
jno
nop
int
mov
daa
imul
mov
adc
or
push
jno
js
imul
sahf
or
leave
cmp
mov
jae
div
mov
inc
lret
dec
pop
add
lods
sub
or
cmpsb
adc
pushl
mov
out
mov
xor
sbb
ss
outsb
clc
mov
pop
sbb
add
or
mov
mov
ret
sub
mov
sbb
out
xor
dec
shlb
dec
or
inc
push
aam
js
frstor
mov
inc
inc
push
popf
xchg
or
jnp
adc
jle
xor
fs
push
push
mov
jmp
push
push
jne
push
pop
jmp
lods
and
cmp
in
or
enter
mov
lds
std
mov
or
adc
xchg
jns
inc
call
add
push
mov
lcall
addr16
mov
mov
lret
push
or
sbb
imul
movsl
and
add
pop
out
and
or
push
and
ret
in
test
adc
and
pusha
adc
mov
fsub
xorb
stos
push
aaa
push
mov
sbb
pop
popf
xorps
xor
mov
je
je
xor
dec
dec
hlt
push
pop
mov
loop
out
cmp
push
add
sbb
mov
stos
roll
and
push
bound
xor
cmpsl
cli
pop
ret
mov
xchg
fistl
stos
jg
lret
cmp
jl
insb
mov
int3
xor
cmpsl
sti
idivb
sarl
pop
sub
cmp
jle
mov
cmp
jne
repz
push
lahf
sbb
push
add
outsl
pop
push
mull
ss
pop
movsb
dec
out
loope
mov
dec
cmp
je
sub
mov
push
loope
push
js
xchg
fcmovu
cld
ret
xorl
dec
fstps
sti
xchg
adc
sub
pusha
dec
jmp
pop
in
bound
in
pop
adc
ret
mov
lahf
in
xor
out
fldcw
fisttps
dec
ret
in
out
push
dec
or
in
out
leave
inc
aam
xorl
cmpsb
push
xchg
movsb
out
mov
fstl
call
dec
xchg
insl
xor
pop
fwait
add
ja
adc
loopne
or
push
adc
ds
push
mov
add
cld
sub
and
push
add
and
fistl
or
les
jbe
or
addb
or
je
mov
mov
jne
xchg
push
faddp
xchg
lock
lea
sbb
roll
or
or
sbb
xor
cmpl
jb
cmp
adc
xchg
push
aaa
nop
jns
adcb
pop
outsb
push
hlt
scas
xchg
lret
mov
adc
jp
addr16
or
sub
ret
or
mov
or
aam
mov
imul
cmp
dec
dec
shll
test
imul
adc
add
dec
shlb
test
mov
push
in
adc
inc
mov
mov
mov
xor
cmp
cmp
fdiv
pusha
cmp
mov
and
cwtl
mov
push
movsb
pop
sbb
stos
fnstenv
rclb
pushf
sub
imul
ret
or
cs
push
xor
das
test
sub
lods
add
aas
mov
faddp
jmp
inc
es
mov
sbb
push
std
cli
jmp
mov
jle
or
negb
inc
cmp
ret
jae
add
ds
insb
cmp
jmp
jp
mov
ret
cmpl
cmp
mov
lea
push
pop
fildll
fidivs
cltd
insb
sub
mov
inc
test
loopne
hlt
jmp
push
sub
ljmp
mov
dec
jns
pop
sub
fistl
lret
xchg
scas
popa
fs
dec
or
mov
xor
lock
jae
fucom
mov
inc
adc
inc
cmp
add
mov
orl
push
mov
jbe
dec
and
push
xor
ret
in
movsl
add
imul
push
push
popl
outsl
push
or
dec
sub
pop
mov
hlt
jmp
imul
push
mov
mov
jmp
fs
cs
mov
sbb
add
mov
cmp
pusha
sahf
sti
xchg
dec
enter
movl
inc
jmp
ret
cmp
lea
push
mov
cmp
je
ret
icebp
dec
mov
mov
or
push
stos
pop
gs
xor
je
dec
rclb
xchg
ret
and
or
or
jge
data16
push
add
inc
push
jl
mov
inc
ficoml
test
data16
icebp
add
jmp
push
clc
cwtl
in
sarb
xchg
mov
and
cmp
out
sub
jecxz
push
cmpsb
lock
xor
je
ret
jecxz,pn
out
adc
cmpsl
xor
roll
out
mov
jp
popf
bound
and
mul
gs
dec
out
loopne
add
mov
jbe
sub
jno
push
or
ret
mov
cli
jp
or
out
jne
pop
pop
add
test
adc
add
mov
cmc
fmull
int
sub
pop
push
xchg
stc
mov
xchg
add
lods
xor
movsb
dec
fbstp
pop
sbb
inc
mov
je
bound
dec
push
xor
cmpsl
addl
fdivl
lret
out
xchg
xchg
or
pop
fisubrl
scas
and
jne
int3
jnp
or
add
pop
mov
xor
pop
sbb
jne
dec
xor
mov
or
dec
cmp
sbb
mov
movsb
daa
popa
lock
add
jl
pusha
iret
movl
sub
fstpt
aam
jae
push
or
pop
rolb
std
test
adc
notb
pop
sub
data16
mov
mov
sub
jmp
pusha
mov
or
mov
shrl
push
lock
push
je
popf
add
loopne
push
aam
sbb
js
jl
add
outsb
cmp
xor
int
add
mov
sbb
les
push
add
shll
push
push
inc
pop
jg
pop
divb
or
pop
pop
push
or
xor
js
xchg
pop
sub
nop
arpl
inc
push
je
jo
mov
push
cmp
popf
in
dec
cmp
cmp
sub
xchg
rcll
dec
or
int3
push
mov
push
pop
leave
ret
push
int3
sub
lock
loopne
mov
xchg
jno
test
sub
cs
adc
mov
test
sub
add
je
orl
push
dec
lahf
xchg
push
cmp
dec
rcll
or
mov
mov
cmp
sbb
mov
mov
or
mov
jg
pop
cmpb
mov
jne
fwait
test
sbb
dec
adc
dec
sbb
pusha
or
scas
mov
mov
popf
dec
push
inc
loopne
lahf
cmp
inc
rcll
xor
mov
andb
mov
mov
loope
mov
test
popa
lods
mov
push
fucomp
push
cmc
adc
jmp
repz
lea
add
add
and
push
outsb
and
scas
and
sbb
push
and
or
sub
add
shrb
and
test
dec
adc
adc
push
mov
aam
inc
jb
push
rcrl
ret
pop
repz
or
punpcklbw
mov
shl
jbe
mov
xlat
ljmp
sbb
adc
mov
jl
cmc
enter
inc
xor
and
adc
leave
ret
jb
push
push
xchg
pop
out
out
popa
pop
insb
xor
ds
sub
mov
shll
in
sub
leave
lea
jg
mov
push
adc
cltd
fldl
fmuls
mov
cld
push
dec
xor
js
rorl
ret
fadds
push
cmp
add
in
cmp
outsl
sbb
jae
loop
orb
xor
xchg
fsubs
fisubrs
or
jno
movsb
out
in
or
icebp
aam
jmp
aaa
push
sahf
inc
lcall
inc
dec
mov
mov
mov
dec
sub
dec
push
lods
add
sbb
hlt
lea
push
or
outsl
iret
cltd
sbb
insl
ss
push
mov
mov
loop
mov
xor
cmpl
ret
dec
and
inc
or
lahf
xor
xchg
pop
dec
inc
cmpsb
fnsave
sbb
and
cmpsl
and
inc
nop
add
sbb
lock
jo
leave
mov
adc
iret
cmovle
push
push
pop
xchg
pop
pop
push
mov
push
sub
pushf
mov
inc
lcall
xor
sbb
xchg
push
cmp
inc
fmull
movsl
loop
popa
jg
sti
faddp
call
cmpb
fs
ret
jo
test
sub
inc
inc
pop
jmp
insl
or
loopne
fidivs
add
mov
aad
mov
push
sub
adc
xor
stc
mov
enter
add
dec
xor
daa
std
lods
add
shll
sbb
iret
sbb
adc
and
lret
jbe
int
inc
aas
pop
push
dec
jbe
jmp
mov
sub
pop
push
cld
dec
loope
and
push
pushl
mov
outsl
adc
repz
xchg
add
adc
mov
inc
push
push
or
sbb
mov
or
sbb
xorl
scas
and
in
es
mov
pusha
loope
inc
jle
add
cwtl
pop
mov
xchg
icebp
test
push
popa
push
pushf
sbb
push
cmpsl
push
inc
sbb
test
inc
dec
cmp
in
popf
or
add
shrb
lea
out
aas
sub
dec
lea
dec
sar
js
loop
hlt
in
mov
mov
cmpsl
adc
cwtl
add
fnsave
push
xor
lea
sahf
push
push
arpl
ss
mull
or
or
pop
adc
add
dec
movsl
and
cwtl
xchg
sub
test
nop
xchg
add
shll
dec
xlat
or
jbe
sbb
or
icebp
adc
mov
or
inc
jp
add
subb
or
xchg
add
loop
imul
sub
inc
pop
mov
mov
jbe
inc
inc
xor
push
test
idivb
jno
sub
mov
shll
mov
jo
sbb
mov
mov
mov
sbb
xor
stos
daa
mov
sahf
test
jo
in
or
or
or
divl
pop
mov
fwait
add
adcl
jmp
dec
xchg
jo
mov
call
adc
idivb
xchg
xchg
push
int3
ret
jle
mov
push
lret
bound
in
add
push
lea
sarb
fmuls
jnp
cmp
inc
mov
shrl
pop
adc
sbb
pop
ret
aaa
negb
mov
out
inc
scas
in
leave
ret
negl
mov
int3
and
sahf
sbb
arpl
push
add
leave
pop
lods
icebp
andb
outsl
cwtl
mov
aas
xchg
push
daa
int
push
call
sbb
push
pop
test
mov
mov
mulb
ss
aas
es
mov
mov
lea
test
pusha
cmpsl
test
pop
xor
icebp
sti
add
test
or
stos
shl
jno
adc
fstpl
ret
dec
adc
pusha
push
cmp
repz
loopne
andl
enter
xchg
test
rorl
aas
xchg
jnp
stc
adc
dec
cs
mov
mov
pop
dec
dec
fdivrl
pushf
sbb
and
and
xor
mov
xlat
push
adc
movsb
adc
dec
and
aad
inc
sub
and
aad
pop
xchg
enter
mov
arpl
lcall
mov
test
mov
imul
imul
add
or
in
cmpb
int3
pop
mov
scas
pushf
push
dec
or
hlt
mov
jl
ud0
shlb
inc
into
adc
inc
je
inc
sub
adc
push
lods
mov
cmp
sbb
sub
or
add
dec
mov
pop
clc
pop
xor
mov
mov
dec
out
test
dec
dec
xor
dec
insb
test
test
and
cmp
or
repz
test
jns
cmp
int
loopne
in
mov
andl
cmpb
push
push
mov
or
and
jmp
jb
out
adc
pop
and
dec
test
lods
gs
cmp
pushf
mov
mov
lock
cmp
jae
fistl
loopne
inc
adc
fsubr
aam
out
cvtpi2ps
shlb
mov
fwait
pop
sbbl
add
jmp
cmp
pop
test
xor
dec
push
fwait
push
aas
cld
push
out
add
test
hlt
dec
popa
sbb
nop
cmpsb
invd
jnp
loopne
std
dec
sti
dec
rclb
dec
insb
push
push
push
cmp
mov
sub
dec
jo
jmp
adc
cmpsb
arpl
push
cmp
sbb
xchg
add
jno
lcall
movsb
jmp
lds
ss
adc
push
jp
xchg
sub
mov
enter
adc
test
adc
inc
dec
xor
pop
test
loope
incl
cmpsl
mov
nop
inc
adc
or
or
mov
and
cmpsl
adc
xchg
or
movsb
pop
adc
adc
ds
enter
inc
adc
orl
mov
mov
stc
dec
or
imul
mov
xor
movsb
adc
pop
nop
addr16
xchg
insl
mov
out
dec
cmp
imul
xchg
push
cmp
xor
insb
arpl
add
add
push
es
movsl
mov
xor
or
sbb
out
sbb
jo
xchg
sbb
test
mov
mov
cmp
dec
xor
sbb
movsl
lret
push
fs
pusha
mov
dec
sbb
xchg
stos
add
mov
aad
sbb
mov
in
dec
add
mov
cld
lret
inc
add
push
stc
or
pop
cmp
push
sbb
inc
cmp
pop
jge
or
mov
xlat
clc
divb
xchg
jecxz
pop
orl
jno
lea
xchg
mov
mov
cwtl
nop
loope
and
pop
sbb
bound
imul
or
adc
inc
fimuls
mov
xchg
add
clc
inc
bound
and
push
jp
sbb
adc
add
cmp
and
cmp
call
cmp
mov
dec
jno
fcom
lret
mov
cmp
mov
sub
mov
mov
add
add
subb
mov
ror
push
sti
add
dec
cmp
sub
je
lods
call
inc
or
sarb
cmp
mov
imul
adc
xor
out
and
mov
dec
imul
out
lahf
lods
es
popa
sub
adc
enter
mov
xor
or
xor
mov
cmpsl
jmp
nop
lcall
push
dec
jo
jmp
add
rolb
jle,pt
testb
sub
popf
jb
pop
add
mov
xor
scas
mov
adc
or
movl
push
lcall
ljmp
pop
push
inc
cmp
mov
xor
xorl
pop
mov
jns
in
push
mov
add
ret
rcl
cmp
out
andl
add
addl
cmpsl
sbb
inc
sbb
js
inc
adc
jno
inc
mov
and
shl
adc
aaa
adc
je
dec
jne
jo
int
loope
jo
clc
adc
add
push
sti
movsb
xchg
lcall
push
insb
and
add
jecxz
leave
fiaddl
xchg
outsl
cld
lcall
mov
cmp
je
xchg
lcall
das
xchg
divb
mov
xchg
mov
or
jge
jnp
arpl
pop
add
or
inc
movsb
mov
daa
xor
sub
cmp
jne
and
jp
cli
jb
lea
or
mov
add
jno
dec
outsb
or
jmp
lea
lcall
pop
lock
ja
xchg
ss
sub
andl
pop
je
mov
cld
ljmpw
and
mov
out
adc
test
xor
out
cmp
or
iret
mov
xorl
popf
dec
add
adc
outsl
orb
cmp
testb
adcb
adc
sbbb
sub
int3
adc
mov
dec
push
mov
aam
or
aam
or
cmpb
popf
loope
data16
pop
and
ret
or
or
xorb
or
dec
lea
push
jae
sbb
cmp
pop
xorb
adc
stos
jbe
aam
and
mov
dec
adc
in
and
lods
cmpb
mov
pushf
cmp
push
push
les
cmp
incb
icebp
or
jl
mov
mov
aaa
movsb
xchg
sub
nop
adc
push
shll
sbb
push
hlt
push
add
push
xlat
mov
adc
sbb
cmc
jg
out
and
jbe
add
adc
sti
or
pop
add
cwtl
das
add
push
adc
and
sub
and
pop
push
stos
inc
or
pop
or
jae
fs
add
push
mov
pop
lods
in
mov
jmp
inc
popa
popl
adc
adc
mov
inc
sbb
push
inc
movsl
or
loopne
cmp
jge
loope
xchg
push
adcb
or
imul
cmp
lds
test
inc
pop
out
movsb
mov
dec
add
popa
adc
sbb
andb
addr16
or
sbb
inc
js
es
jp
test
lods
icebp
sarl
adc
xor
movsb
mov
lea
rorb
mov
mov
and
xchg
sarl
pop
pop
ja
push
sub
ss
xchg
push
mov
or
push
pop
addr16
mov
jae
inc
sub
add
sbbl
mov
mov
sbb
into
push
mov
mov
inc
cmp
cmpb
je
sbb
jmp
or
dec
arpl
jnp
xchg
and
mov
shrl
or
dec
push
xchg
movsb
fdivrl
mov
sbb
arpl
or
xchg
ret
aad
imul
mov
aam
pushf
jecxz
in
jmp
rorl
je
and
and
mov
jae
push
xchg
movsl
std
mov
sub
adc
fistps
inc
ficompl
sub
xchg
push
add
daa
push
loope
sbb
cmc
add
or
incl
cmp
jmp
test
sbb
push
add
aas
repz
inc
enter
movsb
pop
xor
pop
and
push
sub
subl
push
faddl
push
sub
pop
sahf
int
int
add
mov
into
icebp
ja
sbb
lods
call
add
inc
dec
jl
jns
shll
mov
mov
jle
dec
mov
es
and
dec
inc
insl
and
cld
sbb
sub
rorb
pop
push
test
jbe
inc
rclb
lea
add
sbb
mov
lea
mov
dec
xchg
sbb
test
data16
hlt
sbb
dec
lahf
xor
adc
push
outsb
push
xchg
movsb
jb
cs
aad
sub
cmp
mov
imul
daa
pop
stos
pop
xor
add
adc
ja
out
adc
dec
data16
pop
sbb
std
mov
mov
mov
jb
jg
scas
push
test
cmp
std
push
popf
pop
lock
dec
cwtl
jnp
jno
test
add
jle
testl
and
pop
insb
adc
xchg
push
push
aas
adc
inc
pop
and
cli
ret
dec
insb
cmp
shlb
sbb
movsb
or
jmp
mov
xchg
jge
call
inc
test
jge
cmp
movsb
lret
and
fwait
xchg
cmp
mov
sbbb
jecxz
inc
adc
sbb
pop
shlb
movsb
add
pop
and
jl
in
sbb
in
dec
inc
sub
dec
lcall
or
xchg
mov
insl
sub
je
nop
add
imul
out
pop
imul
and
push
and
inc
mov
adc
add
andl
pop
in
mov
lock
pop
orl
fistl
fistps
xor
xchg
adc
into
and
pop
inc
and
or
xor
rolb
xor
xor
and
xor
dec
cmp
sti
and
pop
cmp
dec
ret
std
aas
movl
lret
pop
push
pop
mov
xchg
adc
popf
push
xor
sbb
out
or
sub
push
mov
push
push
imul
cmp
and
and
aad
and
gs
jb
or
dec
pop
imul
pushl
jns
add
cld
pusha
movsb
mov
push
int3
js
mov
loope
pop
sub
xor
jne
mov
push
or
sub
inc
mov
idivl
pop
mov
or
push
cmp
jo
sub
and
sahf
aaa
jmp
mov
add
xchg
xchg
pop
je
pop
mov
out
ret
loopne
or
out
rorb
xchg
das
push
clc
xor
add
xor
je
mov
push
mov
mov
insl
nop
inc
push
mov
sub
mov
push
mov
popf
pop
popf
push
enter
sub
push
sub
pushf
cmp
add
ss
les
clc
pop
dec
cmp
je
jae
rcrl
mov
mov
jno
sbb
pop
push
stos
adc
out
je
cwtl
sub
cmp
dec
inc
dec
inc
push
xor
cltd
cmp
jge
or
movsb
outsl
jecxz
inc
cmp
mov
insb
dec
or
mov
addb
xchg
mull
add
jne
mov
adc
outsb
add
testl
and
pop
jmp
fimuls
sub
ja
cmp
push
push
es
rcrl
add
inc
sub
scas
push
mov
sbb
jo
mov
les
mov
les
inc
cltd
scas
pusha
movsb
pop
bswap
add
and
pop
clc
mov
adc
dec
push
xor
pop
pop
mov
mov
push
mov
mov
fs
cld
repnz
cmp
decl
ljmp
pop
into
sub
mov
push
inc
push
inc
ffreep
jg
nop
xchg
dec
cmp
jne
cld
pop
test
mov
lahf
sbb
sahf
into
xor
jmp
loope
ret
dec
mov
dec
jg
push
pop
mov
sub
cmp
push
jbe
test
sbb
cwtl
mov
cmovs
lahf
mov
pop
dec
int3
test
movsb
loopne
or
bound
arpl
mov
sub
loopne
push
ficompl
cmp
dec
scas
test
xor
adc
adc
leave
mov
xchg
in
or
and
or
push
add
cmp
or
add
push
sub
mov
movups
sub
pop
dec
std
push
mov
pop
gs
adc
cmc
or
xchg
push
fnstenv
clc
divb
mov
add
pop
cmpsl
into
les
lock
or
or
mov
push
pop
and
pop
jge
hlt
or
lea
adc
mov
push
mov
push
or
or
mov
cmpsl
fcmovnbe
mov
in
mov
out
push
mov
mov
mov
push
pop
cs
xchg
and
push
xor
cmp
cmp
sbb
aam
cmp
test
cmp
adc
mov
xor
fimuls
sbb
in
push
push
pop
addr16
test
popa
das
push
inc
adc
aad
es
popa
pusha
aad
in
push
test
out
lea
mov
dec
dec
or
lcall
test
subb
push
sbb
sbb
test
mov
xchg
or
nop
sbb
jb
inc
jb
xchg
sbb
xor
inc
sbb
jecxz
jl
iret
mov
push
pop
push
adc
ss
push
jne
inc
dec
mov
dec
mov
dec
lds
scas
inc
sub
push
xor
adc
and
sub
inc
and
mov
leave
xor
and
pop
xchg
hlt
inc
or
dec
xchg
daa
inc
jb
sbb
mov
and
adc
pop
aam
sub
sub
mov
sub
dec
and
xchg
push
xchg
nop
dec
iret
inc
dec
jo
lods
pop
insl
andb
call
xor
ret
cmp
pusha
add
test
popa
test
test
add
inc
lcall
sub
add
mov
or
add
addl
xor
enter
sbb
ret
xor
jne
add
and
rcll
push
xchg
lahf
add
call
push
nop
repz
dec
scas
inc
ret
popf
sbb
inc
ret
add
roll
ja
les
rcrb
or
pop
xchg
adc
mov
popf
roll
xor
xor
cwtl
mov
cmp
movsl
push
rcr
ja
and
sahf
lret
sub
push
cmp
lahf
dec
repnz
sar
addb
push
repz
test
fyl2x
xchg
cmpsb
loop
push
add
xchg
in
aad
sbb
adc
flds
jnp
pop
rcrl
into
jae
jle
test
js
in
fdivrl
sbb
lea
mov
and
jno
xor
loopne
xor
or
inc
es
lock
jl
fiaddl
add
ja
into
inc
cmp
and
or
cmp
or
lods
lods
adc
sub
dec
daa
mov
pop
mov
test
stc
push
cmp
add
add
push
movsb
sub
cmc
outsl
xchg
cmp
jle
data16
inc
add
outsb
mov
cs
scas
jl
shlb
loopne
ret
in
adc
in
and
xchg
mov
push
sarb
push
add
xchg
hlt
jno
cmp
rorb
add
cmp
pop
sbb
xchg
jl
mov
push
lock
loopne
fs
or
lea
dec
cmpsb
scas
or
daa
stc
cmpsb
dec
adc
inc
add
jmp
lea
or
sbb
pop
xchg
push
cmpsl
adc
into
lock
mov
sbb
push
insb
mov
push
hlt
jnp
push
ret
mov
lret
pop
mov
inc
inc
add
add
lea
sub
lret
sub
das
push
dec
in
add
movsb
les
inc
data16
xlat
pop
cltd
shll
inc
cltd
add
mul
insl
jle
mov
cmp
mov
xor
pop
sub
pusha
pop
or
mov
sbb
test
or
push
loop
pop
xor
push
jno
lret
push
adc
mov
pop
mov
ss
dec
or
notl
loopne
movsl
mov
sbb
adc
mov
les
inc
jecxz
cmp
pop
and
mov
iret
inc
nop
mov
js
cmp
dec
fs
jecxz
jbe
cmp
adc
adc
push
mov
popf
adc
fadd
jg
add
xor
jmp
sbb
popf
int3
and
pushf
pusha
xchg
jbe
jbe
popa
ds
pusha
jo
xchg
fwait
je
pop
mov
movsb
mull
inc
pop
cmp
out
mov
push
adc
shrb
sbb
lds
or
aad
cmp
call
ret
adc
enter
mov
jle
dec
xor
pop
and
mov
fstl
xchg
adc
jmp
lea
sbb
sbb
inc
test
adc
pop
and
fwait
xlat
mov
push
xchg
adc
adc
mov
dec
adc
arpl
pop
movsb
push
pop
sti
add
stos
add
jo
rolb
insl
out
cmpsl
lret
enterw
orl
pop
cltd
dec
out
lea
inc
hlt
pop
push
xor
int
and
mov
pop
xchg
rcll
inc
loope
push
sbb
pop
in
pop
sbb
push
xor
add
in
call
pop
jl
jnp
push
push
xor
sbb
push
imul
stos
push
jno,pn
push
notl
lret
enter
mov
je
stos
incl
or
xor
add
fstl
lock
les
adc
je
das
jae
xor
mov
fs
cmp
popa
js
movsb
pop
adc
cmc
or
movsb
xchg
out
adc
or
inc
dec
movb
movsb
adc
cmpsl
or
push
or
lsl
push
lods
movsl
mov
repz
add
xor
dec
cmpsb
or
repz
inc
popa
dec
adc
add
xor
dec
repnz
mov
mov
inc
xchg
mov
call
mov
sub
js
and
cmp
cmp
sbb
lret
inc
arpl
or
or
sub
enter
hlt
jge
sub
pop
sub
iret
clc
imull
cmp
ja
add
jmp
test
push
jge
add
ljmp
stos
mov
cmp
adc
sbb
jge
fs
test
pop
xor
arpl
test
cmp
sub
xchg
inc
xchg
pop
fisttpll
dec
dec
adcl
out
out
inc
sub
and
inc
fs
xor
pop
loop
cmpb
inc
and
xor
sbb
push
adc
mov
mov
push
mov
fwait
insl
movq
pop
andl
push
ret
pusha
xor
cmp
hlt
mov
adc
push
mov
rcr
add
inc
xchg
inc
add
sub
cmpsl
and
pop
popa
dec
dec
and
xor
push
or
cmp
scas
jns
jno
int
add
sbb
jnp
push
sub
or
push
push
pushf
cmp
and
push
adc
push
xbegin
test
les
in
test
js
nop
outsb
sbb
aas
lods
in
sbb
adc
f2xm1
jmp
pop
push
push
je
into
scas
shr
push
cmpsb
cmp
xchg
enter
xchg
adc
pop
bound
js
leave
sbb
mov
xchg
add
ja
push
dec
jne
int3
add
adc
dec
jmp
jne
cltd
jmp
test
pop
or
jae
or
fstl
jmp
adc
fadds
es
sub
dec
shl
mov
add
movsb
ret
popa
and
xor
scas
rolb
push
inc
je
add
push
mov
add
cmp
and
pop
out
sub
fimuls
push
dec
add
movb
mov
push
pop
sub
inc
jge
sbb
dec
inc
add
insb
fstps
xchg
in
or
mov
fstps
sub
in
mov
sbb
test
jl
cwtl
pushf
into
push
movl
adc
movl
iret
xchg
subl
mov
dec
loope
fmuls
sbb
sbb
subl
push
ret
mov
sbb
insb
and
mov
addl
arpl
push
scas
push
pushf
pusha
xorb
loope
push
mov
pop
sub
mov
outsl
and
call
mov
cmp
push
push
sbb
xor
nop
insb
insb
mov
push
and
push
cmp
mov
push
pop
clc
loop
scas
inc
dec
pusha
stc
xorl
push
dec
add
xor
inc
sub
adc
enter
aas
enter
adc
mov
adc
inc
in
insb
hlt
cmc
mov
icebp
mov
pop
dec
loopne
fcoml
sbb
out
or
xor
dec
push
loop
mov
cmp
testl
mov
stc
xor
xchg
lock
leave
add
scas
jle
jnp
js
mov
mov
sbb
lret
mov
jnp
mov
adc
and
aas
xchg
adc
add
mov
add
movl
enter
shr
dec
shl
sbb
ret
cwtl
testb
pop
je
dec
loopne
add
push
ret
or
inc
or
iret
sti
lds
test
xor
xor
cmpb
sar
add
imul
cmp
mov
mov
lock
fistps
scas
mov
jae
out
push
sub
mov
nop
clc
pop
add
or
jne
nop
add
push
call
inc
movsl
in
mov
dec
sub
std
sub
insb
leave
ret
xor
pop
add
shlb
xchg
outsl
fistps
cmp
or
push
sbb
adc
test
sbb
or
add
push
cld
pop
outsl
test
les
pusha
adc
adc
add
mov
or
mov
fcoml
std
jl
jl
xchg
add
inc
or
jmp
fcomip
ljmp
popa
add
data16
mov
sbb
mov
hlt
jne
and
or
pusha
movsl
jb
or
fwait
dec
inc
push
cwtl
dec
mov
mov
xor
cmp
scas
insl
hlt
push
inc
jecxz
push
fisttpl
rolb
mov
adc
dec
ds
je
push
inc
cmp
stos
or
push
hlt
out
push
shll
pushf
ret
lea
daa
mov
xchg
nop
add
shrl
push
loopne
adc
cwtl
lahf
addl
inc
cmp
cmpsb
sub
cmp
sub
ss
mov
sbb
lea
and
mov
push
sbb
imul
ja
inc
push
shll
mov
xchg
cmp
dec
sbb
dec
add
sbb
loopne
inc
pop
add
xor
das
int3
out
fwait
push
sbb
shlb
and
lcall
das
jo
es
enter
rcrl
ss
push
or
and
and
aaa
imul
sbb
lcall
adc
mov
and
push
sbb
cmpl
jl
adc
and
lahf
push
xlat
mov
inc
pop
jp
adc
sub
lret
movsb
add
dec
or
repnz
iret
adc
push
lret
imul
in
lods
or
sbb
fs
push
bound
mov
inc
test
out
jle
clc
and
and
xchg
das
push
add
push
and
push
aam
mov
fdivp
aam
or
xchg
mov
shl
imul
js
pop
out
cwtl
and
mov
xor
mov
push
add
rolb
push
clc
xor
mov
jecxz
mov
inc
jmp
int
call
add
sahf
insb
and
imull
xor
idivb
add
push
fiaddl
call
xor
mov
push
enter
ret
inc
in
stc
fadds
movb
movzbl
dec
int3
mov
loope
daa
std
jnp
pop
movl
pop
inc
sub
or
mov
shl
fs
adc
mov
movsl
inc
and
or
andl
std
inc
bound
and
mov
into
xchg
clc
mov
adc
mov
xor
pop
sbb
clc
or
jno
sti
jmp
pop
sbb
adc
and
mov
inc
sub
inc
sub
xchg
rclb
cli
jge
inc
dec
mov
push
loopne
lea
push
jle
aam
js
or
les
pop
push
dec
mov
sub
and
roll
ljmp
jbe
das
and
mov
push
xor
popa
sbb
jbe
cmp
cs
push
outsl
aas
scas
jge
add
sub
incb
bound
movsl
add
rcll
push
or
inc
jle
pop
aas
dec
adc
and
xlat
mov
ljmp
or
ss
pop
loop
push
stc
movsl
std
aas
sbb
push
add
push
push
push
push
pusha
in
mov
xor
ret
in
pop
rcrb
je
inc
lcall
test
push
jne
mov
call
test
push
or
or
push
cmp
jne
dec
cmpsl
xor
jle
jl
rorb
lds
popl
cmp
lea
nop
mov
push
movsb
push
sub
test
sub
xor
dec
xchg
nop
sbb
adc
cmpsl
loopne
pushl
pushf
nop
loopne
fiaddl
int3
jmp
and
sahf
mov
and
add
adc
or
sub
ds
jp
je
sbb
movsl
cs
in
xlat
mov
jbe
inc
cwtl
lcall
dec
or
ljmp
lea
add
lea
cmpsl
lds
in
js
mov
dec
fnstsw
mov
incl
pushf
cmp
jle
cmp
js
rcrb
add
xor
pop
nop
jnp
xchg
xchg
jbe
mov
cwtl
push
popf
enter
adc
cmpsb
inc
cld
sbb
jnp
xlat
cmp
hlt
push
imul
jne
adc
std
ss
cmp
test
pop
inc
and
icebp
pop
pushl
lret
nop
lods
addb
inc
xor
lcall
fwait
pusha
xor
sub
sbb
inc
shll
scas
stos
mov
imul
enter
stos
xor
mov
scas
sbb
andl
jae
xor
xor
mov
push
sarl
push
pop
rol
add
adc
jle
fistps
push
inc
cmp
addr16
in
in
pop
jg
shll
and
push
cmp
jge
or
xchg
and
inc
jne
inc
clc
jo
or
jnp
in
cltd
ret
test
mov
into
insb
and
mov
adc
loop
push
jecxz
lea
fildll
mov
xchg
add
fs
mov
nopl
mov
push
in
jg
jnp
lcall
inc
or
outsb
pop
xor
sub
pop
add
ja
cmc
adcb
popa
and
cltd
call
push
roll
cmp
rcrb
loope
mov
pop
leave
or
inc
fcmovbe
add
cmp
es
push
jg
pop
in
into
sarb
cmp
cmpsb
cmpsl
std
jb
dec
jmp
and
dec
mov
popf
sbb
scas
push
int3
test
cmp
cmp
cmp
or
in
hlt
jae
adc
add
sti
dec
or
mov
xor
and
adc
inc
shrb
adc
lock
int3
je
int3
push
int3
pop
loop
add
in
adc
out
sbb
push
add
add
fdivl
pop
xor
push
jmp
das
cmp
and
or
xchg
or
daa
dec
xchg
add
mov
fdivs
xchg
cmp
je
test
sbb
jle
enter
iret
mov
fsubl
inc
repnz
sbb
cmp
add
les
sar
pop
push
scas
add
aas
xor
dec
dec
add
push
adc
lret
cmpb
int
xchg
jae
lcall
arpl
insl
dec
mov
jmp
mov
cli
mov
jns
push
xor
pop
xchg
into
aas
inc
popf
loope
jecxz
es
shlb
push
imul
xchg
xor
sub
clc
loopne
cmp
push
loopne
lods
pusha
bound
and
push
lret
mov
add
jge
in
es
cltd
push
pusha
push
fldcw
pusha
lret
or
pop
fisubs
xor
loopne
push
subb
dec
and
push
fildl
add
adc
sub
idivl
add
cmpw
sbb
cmp
hlt
outsb
aad
adc
add
fucomip
or
pop
mov
add
sar
mov
jmp
es
push
je
repz
lcall
adc
pop
jns
adc
mov
add
cs
pop
and
or
lea
fwait
inc
and
les
fcomps
dec
dec
dec
jl
int3
test
jp,pn
sub
jmp
outsl
add
mov
movzwl
outsl
out
dec
sub
add
pop
or
or
xor
xchg
sbb
cmp
or
add
add
fisubl
cmp
inc
fwait
mov
xchg
das
adc
jae
xorl
adcl
nop
add
add
icebp
inc
outsl
cmp
std
pshufw
imul
sar
xor
jb
and
pop
and
loope
enter
mov
cmp
jne
jb
fs
dec
xchg
add
enter
pop
dec
pop
push
pop
push
dec
lods
rorl
mov
cmp
fdivl
and
or
imul
push
mov
pop
adc
and
icebp
push
sbb
mov
js
and
je
add
push
psllw
jge
sbb
roll
sbb
in
pop
subl
dec
jge
addl
xor
mov
jne
push
adc
stc
fldl
pushf
or
adc
push
fs
nop
xchg
xor
bound
lock
test
mov
adc
or
adc
mov
shrl
mov
js
xchg
or
insb
dec
inc
iret
mov
push
push
mov
pushf
xchg
pushl
mov
or
in
add
ja
xchg
scas
movl
and
sub
or
dec
mov
rorb
and
fwait
nop
arpl
shll
dec
lods
pusha
or
sbb
mov
scas
sbb
stc
sbb
in
sbb
push
sbb
stos
add
add
dec
cmp
mov
pop
je
pop
jmp
push
pop
dec
insl
std
adc
daa
push
push
cmpl
cmc
and
pop
jo
or
add
pop
adc
and
and
imulb
mov
mov
dec
sti
mov
inc
sarl
clc
cli
mov
loop
stos
push
negl
mov
hlt
fadds
dec
jmp
mov
push
mov
into
test
shr
mov
dec
pop
jne
test
popa
movsl
add
adc
mov
xchg
loope
fwait
nop
push
xor
or
push
roll
andb
cmc
scas
orl
repz
mov
cmp
je
jge
ss
adc
mov
loopne
push
pop
in
push
fldl
sahf
out
nop
sbb
pop
pushl
loopne
das
test
cmp
xor
sbb
fyl2x
fcoml
sbb
in
aad
sbb
pusha
inc
and
xor
insl
push
jnp
or
xchg
dec
loopne
adc
leave
scas
push
popf
mov
test
inc
jle
cli
sub
push
aam
pop
mov
push
dec
lods
and
out
lock
adc
lahf
in
jge
xchg
mov
mov
dec
jo
jecxz
push
in
cmp
shrl
mov
stos
imul
addb
inc
pusha
mov
popa
dec
jae
sub
adc
ljmp
push
inc
pop
ret
aaa
movsl
cmp
pop
jmp
push
push
das
rclb
jo
lcall
xor
sbb
inc
cmp
cwtl
adc
ljmp
in
addr16
xchg
mov
insl
arpl
pop
not
add
adc
dec
sub
adc
orb
cmp
inc
add
cwtl
nop
xchg
xor
push
xor
pop
fs
cmp
imul
or
jns
or
and
add
xchg
divl
adc
mov
outsb
inc
mov
sbb
push
xor
mov
dec
test
inc
push
clc
inc
push
sub
sub
xor
add
js
test
jo
sahf
addr16
shlb
sub
mov
out
popf
outsl
push
add
mov
popa
iret
cmpb
inc
inc
dec
push
jle
and
scas
test
out
cmp
adc
and
jne
push
call
sbb
or
sub
adc
sahf
loope
mov
rol
or
cmp
repz
push
pop
dec
xchg
adc
sbb
dec
mov
dec
push
cmp
dec
jbe
lea
sub
inc
notl
loope
test
adc
mov
insb
xor
loopne
incb
popf
adc
imull
adc
cwtl
jge
mov
mov
int3
push
jle
inc
into
ror
roll
enter
fidivrl
push
xchg
mov
mov
and
lods
rclb
mov
scas
pop
subl
loopne
repz
xchg
or
add
sahf
stos
push
test
mov
call
inc
or
insb
sbb
dec
cmp
inc
xorb
or
or
inc
jp
dec
in
add
jmp
fisubl
mov
shrb
popf
data16
pop
in
push
jmp
rolb
cmpb
adc
add
lret
in
daa
lods
mov
sub
in
test
aaa
adc
xorb
push
jle
and
ret
adc
push
adc
mov
add
pop
add
dec
and
or
mov
pop
pop
cmpsl
gs
and
popf
or
sub
sub
add
int
push
gs
fsubrl
add
bound
icebp
cmpsb
xchg
mov
stos
sbb
jl
xor
jmp
rclb
aas
mov
shll
or
pop
mov
push
push
push
push
adc
jo
add
mov
inc
outsb
adc
sbb
lods
popf
iret
adc
ret
std
incl
jg
lea
xor
je
cmp
jbe
adc
jmp
outsl
lods
cmp
jmp
push
jg
lods
push
repz
cmp
jb
dec
pop
mov
xor
pop
rorb
and
addl
xchg
sub
jecxz
adc
arpl
sub
dec
and
mov
jle
negl
stos
movsl
and
jl
call
bound
or
xor
and
jmp
cmp
jne
xor
insl
mov
int
sbb
jmp
ss
shlb
or
clc
cmp
cmp
jne
push
jmp
std
divb
cmp
cwtl
loopne
cmpsl
push
pushf
jne
push
push
and
les
into
mov
mov
mov
seto
neg
or
push
pop
sbb
in
aam
add
adc
notl
fstpl
cmp
repnz
jge
jbe
popa
fwait
enter
shl
fcoms
jbe
mov
xor
jle
mov
lret
je
mov
mull
mov
mov
ljmp
jecxz
popa
push
int3
mov
mov
add
inc
inc
and
mov
subl
pop
mov
cmp
into
adc
adc
pop
inc
xchg
xor
add
push
sbb
lcall
cmp
insb
mov
in
pushf
inc
mov
les
or
cmpsl
repz
adc
inc
mov
dec
add
sub
jns
adc
or
cmp
incl
andl
mov
lcall
mov
jno
or
enter
cld
mov
or
jo
or
fisubs
adc
pop
sbb
sbb
adc
mov
push
push
mov
push
and
adc
andl
mov
insl
or
test
scas
add
pusha
dec
loopne
mov
jno
and
dec
push
or
adc
sbb
add
push
lds
repz
xchg
outsb
inc
add
aaa
or
ljmp
cmp
xchg
out
pop
adc
mov
sbbl
gs
add
and
and
inc
rcrb
dec
mov
in
add
ffree
leave
aaa
stos
scas
sub
adc
jl
sub
outsl
dec
xor
mov
pop
ret
movsl
xorl
orl
scas
adc
clc
push
sarl
and
sbb
orb
in
pop
add
imul
xor
cwtl
cmp
es
mov
js
inc
test
push
and
add
xor
cmpb
cltd
pop
dec
scas
and
xor
add
popf
or
popa
sbb
mov
cmp
adc
pop
sbb
pop
add
add
mov
imul
xor
xchg
add
stos
or
cmp
inc
mov
lea
mov
insb
fs
fildll
jb
movb
or
pop
adc
movups
or
das
inc
cmp
lret
pop
pop
movl
dec
inc
sbb
jbe
popa
cmc
or
sbb
add
push
inc
add
negb
sahf
xchg
popf
les
or
dec
push
or
pop
enter
adc
jge
adc
nop
and
mov
fwait
adc
mov
sbb
dec
push
pushf
shrb
jmp
pop
jge
cmpsb
push
or
imul
jb
xchg
addl
mov
mov
add
mov
popf
les
sbbl
add
lea
sbb
dec
inc
mulb
cwtl
sub
sbb
xor
push
sub
pop
iret
mov
sbb
xchg
push
lea
in
movsl
pop
cmpsl
adc
push
ret
pop
popa
cltd
subl
xchg
inc
push
add
xor
adc
xor
add
sub
andl
mov
rcrb
xor
sbb
and
xor
fwait
mov
fs
je
cli
call
push
cmp
mov
ss
sub
push
insb
inc
pop
xor
or
and
daa
add
push
cltd
mov
shlb
arpl
scas
loop
xor
jns
adc
and
sub
add
daa
popf
cld
icebp
mov
xchg
add
and
stos
in
push
mov
xchg
enter
ss
sub
bound
out
xor
jae
jb
punpckhbw
ss
cmp
mov
inc
arpl
xchg
lock
leave
test
sahf
or
jmp
pop
popa
fdivr
mov
sbbb
rolb
ret
or
pop
in
push
pusha
xor
or
pop
movsb
ljmp
and
rorl
lock
dec
shrb
sub
and
daa
pushf
jae
ja
push
movsb
sub
or
xchg
ficoms
add
out
mov
lea
das
push
scas
jecxz
lea
push
insl
or
out
and
call
mov
dec
and
and
in
addb
add
rol
mov
orl
int3
ret
and
add
mov
outsl
adc
lret
ret
pop
or
shll
cs
cmp
cwtl
jecxz
data16
push
fs
lea
dec
jb
or
ss
bound
iret
cmpsl
lods
pop
addr16
sbb
and
fistl
dec
int
roll
or
mov
mov
add
sbb
mov
test
scas
xor
sbb
lock
xor
aam
cli
repnz
adc
push
pop
and
setne
mov
aaa
jae
dec
push
sbb
test
dec
inc
adc
adc
in
push
or
jno
stos
cmc
or
cmp
push
fs
cmc
mov
add
ret
repz
and
fistl
add
xchg
jmp
ja
lods
sub
sbb
add
adc
xor
orb
xorl
sbb
adc
rorl
cmp
add
movzwl
add
adc
or
pop
sbb
test
outsl
movsb
jb
sbb
inc
sbb
adc
push
or
or
xor
and
xchg
push
fimull
test
or
adc
inc
daa
push
ret
jne
outsb
cmp
es
adc
sub
mov
jo
mov
push
mov
cmp
je
push
mov
leave
cmp
mov
or
sbb
sbb
cmp
fmuls
jge
daa
mov
jg
es
xor
aaa
cmp
jne
mov
sub
hlt
nop
inc
xor
fbstp
mov
iret
push
sbb
push
push
xor
or
psubsw
sarl
inc
rolb
push
sbb
es
add
in
and
add
add
into
ds
and
jle
clc
xchg
es
ds
cmp
adc
sub
sbb
sub
dec
inc
or
insl
mov
and
sbb
cltd
sub
dec
rcl
cmpsb
les
scas
mov
clc
mov
fisubl
push
jbe
pop
int
adc
pop
mov
mov
adc
test
ret
cmp
mov
rcrb
mov
jp
add
ficomps
sbb
sub
or
adc
adc
das
les
xlat
pop
pop
jae
arpl
test
popa
fdivrs
aam
dec
mov
jae
repnz
push
add
adc
shlb
shl
adc
pop
or
adc
add
fdiv
out
add
sbb
inc
pop
dec
out
xchg
and
mov
adc
cwtl
xor
and
adc
jno
mov
rcll
add
fcomps
imul
fldl
loop
dec
divl
xor
jns
das
icebp
push
add
fstl
mov
and
mov
daa
push
push
inc
pop
jmp
in
mov
xchg
xor
jae
in
jno
or
adc
add
enter
and
gs
inc
es
stos
sub
jb
and
sbb
aaa
xor
or
jno
arpl
sub
dec
adc
adc
pusha
sub
test
jae
aaa
sbb
push
cmp
shrb
inc
jge
mov
cpuid
push
ss
sbb
pop
rolb
pop
fildl
int
cmp
push
dec
lock
push
ja
rcll
push
movzbl
stos
and
in
adc
sbb
xchg
hlt
iret
nop
in
jne
push
dec
imul
sbb
test
and
ja
in
repz
sbb
mov
cmp
mov
test
je
test
or
insb
shrb
ret
mov
push
rol
xchg
and
shll
mov
mov
jge
addr16
mov
push
mov
sub
test
cmp
jne
mov
pop
cwtl
cwtl
fisttps
lds
mov
jne
cmp
mov
ss
push
aad
scas
imul
shrb
jne
shrb
xchg
popa
pusha
cmpsb
push
push
and
add
je
pushf
lds
adc
dec
dec
test
je
or
and
in
or
adc
and
push
iret
test
cltd
sti
add
xchg
sub
dec
test
cmp
ljmp
test
sbb
daa
cmpsb
inc
mov
or
and
nop
js
lea
daa
xor
add
xor
push
sbb
jge
and
mov
add
hlt
dec
add
fldt
je
and
out
inc
hlt
jne
js
xor
dec
ret
int3
outsl
add
mov
outsb
sbb
adc
movsl
cwtl
jg
ficompl
popf
ficoml
adc
addl
jns
add
mov
dec
or
lea
inc
bound
or
in
leave
rolb
xchg
mov
jmp
dec
sub
mov
adc
mov
lcall
popa
push
mov
add
aas
and
push
add
ja
mov
sbb
push
fisttpl
arpl
cltd
lods
xor
bndstx
sub
mov
pop
imul
xchg
mov
into
les
add
insb
or
push
sahf
popa
leave
sbb
mov
add
sbb
or
dec
movsl
lock
pop
pop
or
call
jne
inc
mov
in
stos
and
push
jl
push
test
sub
adc
enter
stc
sti
push
nop
and
movsb
lea
inc
push
jle
jno
cmp
push
das
fmuls
push
adc
leave
jne
fdivs
push
adc
mov
push
mov
push
jg
push
adc
loopne
sub
fcomps
stos
jno
adc
inc
out
sbb
rolb
icebp
jne
mov
int
or
sbb
shlb
cmp
je
xchg
xchg
inc
push
mov
ret
loopne
xor
inc
or
jmp
push
pop
mov
dec
push
mov
test
imul
add
jnp
jbe
scas
cmp
sub
or
filds
test
lock
and
adc
push
sub
jle
shll
fs
push
jg
or
inc
loop
push
push
fld
jmp
push
inc
inc
sub
cmp
sub
insl
or
test
xchg
jne
push
jmp
imul
stc
or
and
nop
rolb
push
lahf
in
in
xchg
sahf
pop
sbbb
push
add
jb
dec
faddl
rclb
outsb
in
sub
and
pop
jnp
mov
enter
and
sbb
ljmp
sbb
test
mov
push
roll
mov
inc
cmp
roll
push
sub
pop
adc
mov
dec
sti
mov
leave
mov
sub
inc
cmp
jb
iret
push
sub
lea
pusha
dec
loopne
add
mov
dec
inc
sub
adc
push
loopne
inc
and
popa
daa
test
cs
hlt
adc
movl
in
shll
cmp
push
rorl
and
sbb
sbb
add
push
push
pop
lcall
pop
xor
cwtl
fs
adc
xorb
xchg
mov
mov
mov
and
mov
dec
adc
lret
fisubs
movsl
push
cmpsl
mov
fdivl
inc
jno
sub
dec
pop
cli
cmp
push
jmp
and
pop
fstpl
test
pop
or
sbb
inc
cmp
xor
push
dec
push
pop
sbb
adc
in
pop
or
mov
fisubs
xor
aad
leave
mov
icebp
je
push
out
jbe
std
adc
rclb
sub
fcmovbe
pop
lock
adc
jne
cmp
fistl
jns
clc
mov
sahf
lret
or
mov
leave
pop
dec
mov
push
test
orl
push
mov
call
xchg
movl
or
lods
rcrb
movl
or
sti
push
stos
pop
and
add
jge
pop
imul
cmp
and
sub
addl
push
mov
adc
xchg
cmp
push
sbb
mov
push
push
mov
or
lea
or
push
ret
ret
adc
add
push
sbb
push
push
shlb
add
test
sub
lea
mov
fisttpll
sub
sarb
loopne
cltd
and
xor
ljmp
inc
test
sbb
call
call
jecxz
loopne
and
mov
movlps
mov
jg
pop
push
bound
hlt
mov
fstps
iret
outsl
mov
add
push
cmp
push
cmp
jle
cmp
jp
cmp
repz
cmp
cmp
inc
add
add
incl
leave
rclb
movl
test
daa
mov
enter
mov
decl
push
cltd
pop
idiv
js
jne
lock
cmp
imul
or
adc
dec
push
test
aam
cmp
dec
subl
into
jl
add
cmpsb
xorl
inc
call
hlt
cmp
outsl
xor
dec
mov
data16
pop
xchg
stos
xchg
adc
xor
insb
push
xor
fwait
imul
dec
movsl
or
sbb
pushf
push
dec
sahf
and
adc
xchg
sub
mov
sbb
daa
int
cmp
add
add
push
testb
sahf
add
cmpsl
add
xchg
add
js
scas
fs
stos
iret
pushf
or
adc
popl
pop
les
xchg
stos
pop
pop
pop
sub
xor
les
pop
and
and
insl
or
in
mov
aam
inc
and
enter
arpl
pushf
cmp
imul
dec
add
and
insl
je
mov
je
mov
jl
outsl
mov
aaa
mov
movsl
adc
les
daa
xor
movsb
fwait
xor
arpl
sbb
dec
pop
mov
dec
push
sub
test
test
pusha
push
add
mov
cmp
xchg
sbbb
inc
dec
sbb
push
mov
or
and
push
add
xchg
dec
leave
jmp
push
add
popa
xchg
stos
push
and
adc
mov
sub
hlt
pop
ret
push
sbb
movsb
test
outsb
or
xor
xchg
sub
push
lods
jne
add
sub
in
or
and
sbb
sub
inc
sbb
in
sub
add
or
push
sbb
add
inc
fwait
test
mov
push
inc
sbb
stc
add
xchg
nop
mov
xchg
pusha
in
push
push
outsb
and
jnp
sbb
push
fstpl
sarl
inc
xchg
iret
adc
inc
cwtl
mov
adc
inc
cltd
rcrl
push
pop
mov
lods
cmpsl
std
sub
movsb
lds
test
inc
divb
data16
loopne
cmp
add
adc
popf
adc
imul
add
mov
leave
dec
cs
adc
adc
orb
add
or
cmp
xchg
adc
mov
subb
or
dec
ret
push
lock
mov
cld
cmp
in
jo
out
pop
mov
push
and
xor
jge
push
in
sbb
lret
mov
or
jo
xor
push
loope
and
xor
and
pop
xor
mov
enter
aam
and
sbb
rol
push
sub
and
cli
ficoms
nop
out
imul
pop
int
jae
ss
stc
sbb
sub
add
sbb
jbe
mov
sti
cltd
or
adc
das
cmp
xor
xchg
out
sarb
add
stos
sbb
xor
lock
add
xor
add
ret
pop
or
stc
xchg
xchg
nop
inc
outsb
and
lods
mov
arpl
and
fwait
adc
adc
xchg
sbb
dec
leave
xchg
testb
or
inc
jno
adc
icebp
adc
xor
cmp
cmp
ljmp
jbe
pop
mov
xchg
mov
adc
inc
dec
cli
push
rcrb
xor
ret
int3
inc
std
dec
popf
inc
and
inc
xchg
or
xor
mov
jb
mov
and
std
jb
test
inc
cmp
sbb
flds
adc
outsb
xorl
stos
push
inc
inc
lock
sbb
imul
les
in
cmp
stos
jge
cmp
popa
mov
jne
pop
mov
sbb
outsb
jns
scas
lock
add
pop
stos
push
rcll
push
cmp
pop
addl
xlat
pop
pop
in
cs
xchg
add
roll
mov
adc
sbb
add
xchg
mov
add
inc
shrl
add
xor
add
push
push
sti
mov
adc
push
leave
lock
ficoml
pop
adc
dec
lods
popa
push
add
push
imul
je
add
adc
ss
nop
or
adc
loope
dec
jno
lea
mov
int3
orl
and
push
es
cmp
je
cmp
jle
push
es
jecxz
add
or
jbe
jecxz
add
inc
int
loop
sbb
loopne
pop
pushl
jecxz
mov
cmp
add
dec
sbb
bound
pop
js
imul
int
inc
push
and
mov
xchg
xchg
push
mov
xor
or
mov
adc
popa
negl
in
pop
daa
loop
xchg
out
inc
dec
push
add
or
jge
mov
xchg
xchg
fldl
pop
mov
les
nop
mov
add
inc
inc
mov
push
fldl
push
sbb
cmp
invlpg
sbb
and
cmp
fstpl
into
loop
in
jge
push
pop
mov
pop
or
adc
and
pop
fsub
pop
fsubrp
sub
daa
fwait
sub
sub
jp
popl
movl
xchg
or
neg
ss
idivb
aaa
inc
adc
inc
sub
mov
cmp
push
add
imul
roll
ljmp
xor
mov
jge
mov
lahf
fidivs
loopne
movb
cmp
roll
cmpl
add
pop
jo
cmpb
insb
cmp
outsb
outsl
mov
ret
ja
loopne
xor
push
mov
movsb
jo
loop
adc
xor
and
insl
idivl
mov
push
std
ret
add
mov
nop
hlt
andl
sqrtps
mov
push
insb
mov
outsl
dec
loopne
fwait
mov
pusha
or
lea
mov
ret
nop
push
cmp
xor
clc
jg
fcomip
xor
or
lock
stos
xor
shld
add
cs
push
ja
jb
lret
inc
ja
lea
push
push
and
push
sbb
popa
ret
popa
dec
and
add
push
leave
adc
cmc
in
push
mov
push
adc
push
push
pop
addr16
jecxz
ret
or
sbb
mov
ret
push
int3
mov
push
lcall
ror
test
dec
mov
inc
dec
push
dec
roll
add
dec
push
mov
adc
ja
xchg
decb
clc
push
jne
dec
shll
add
adc
pop
mov
cmpsb
mov
popf
mov
push
sbb
jb
cld
ja
pop
dec
inc
cmpw
jne
mov
cld
sahf
repnz
inc
inc
cld
cmp
sti
push
xchg
dec
push
push
jl
mov
mov
inc
xor
lea
cmp
or
insb
leave
out
push
loopne
or
or
push
push
ret
adc
and
imul
dec
pusha
sbb
lods
sbb
sbb
push
push
cmpsl
lods
aaa
scas
add
push
mov
pop
add
mov
xor
and
sbb
sbb
push
sbb
pop
sbb
add
sub
mov
scas
mov
shll
cmp
dec
ss
cmp
gs
xchg
arpl
mov
xor
cld
lods
or
adc
popf
or
mov
dec
stos
inc
sbb
inc
sbb
jp
dec
jno
movsb
std
aaa
and
pop
icebp
ljmp
mov
nop
dec
sub
inc
sbb
scas
stos
sub
lods
mov
sub
mov
movsl
push
cmpsl
sbbl
ret
dec
and
gs
cmpsb
insl
popa
mov
out
or
movsl
sub
dec
jo
or
add
test
pop
and
sbb
mov
xor
xchg
arpl
orl
mov
sbb
aam
cwtl
mov
rcr
pop
sbbl
jb
xor
cmp
pop
ret
pop
add
xor
fcoms
xchg
ja
shlb
movsl
xor
dec
add
lock
into
inc
ret
jmp
popa
jno
xor
add
adc
add
insl
aaa
push
lcall
cs
hlt
fdivs
and
pop
ret
and
pusha
adc
sarb
movsb
pop
inc
cmp
cmp
inc
or
pop
mov
and
outsl
xor
cmc
cmp
jbe
mov
ret
jge
sub
push
cmp
fs
in
test
lods
and
and
add
stos
fstps
insb
or
mov
insl
mov
test
add
adcl
lods
add
test
adc
cs
mov
loopne
sub
and
lcall
add
and
rcl
outsb
cmp
mov
mov
fimuls
loop
or
int
or
mov
or
inc
pop
pusha
jp
or
test
sbb
push
ja
sub
dec
mov
outsb
mov
jg
jbe
fmuls
mov
lock
cwtl
jmp
mov
aad
and
pop
add
rclb
inc
pop
mov
je
loopne
ret
je
sub
dec
sbb
cmc
dec
roll
sbb
dec
jne
cmp
int3
dec
push
repnz
repnz
out
adc
jmp
push
push
push
push
adc
pop
push
jne
adc
xor
add
dec
shrl
pop
jmp
in
rcr
cmp
shll
push
pop
fadds
loop
xor
jmp
push
push
por
mov
push
scas
adc
xchg
sahf
pop
movsb
sbb
aam
data16
mov
cmpsb
inc
arpl
jbe
add
idiv
loop
insb
inc
ja
or
adc
adc
cmp
add
xchg
push
or
inc
adc
push
inc
dec
jo
jns
sbb
cmp
sub
inc
ficoms
pop
inc
inc
inc
cmp
cmp
sub
pusha
inc
in
push
sub
daa
adc
mov
and
mov
push
neg
je
pushf
dec
jnp
addr16
jo
insb
loopne
cld
mov
dec
daa
icebp
add
mull
jae
orb
xchg
cwtl
dec
jp
aas
mov
inc
mov
push
fildll
dec
imul
and
sbb
sbb
jo
jg
sbb
cmp
lahf
in
push
mov
push
sahf
xlat
lock
sbb
jl
xchg
cltd
mov
jns
out
iret
frstpm(287
icebp
iret
repz
sbb
inc
dec
cmp
repz
outsl
jns
repz
repz
cltd
mov
cmp
ror
loope
negl
push
or
jo
jns
xor
sbb
orl
pop
push
roll
and
scas
and
aad
jp
jle
mov
xchg
xor
popf
mov
pop
loop
mov
imul
adc
and
sub
jp
int
shr
jno
add
sub
ja
daa
adc
pop
or
aas
insb
sub
fwait
jmp
jl
mov
sub
xor
pushf
push
imul
in
inc
cmp
popf
cmp
cmp
xchg
push
nop
or
inc
adc
xor
std
xor
mov
xchg
xchg
arpl
je
add
inc
or
xchg
inc
xchg
cmpsl
xor
push
pop
add
enter
or
push
cmp
cwtl
and
sub
dec
test
pop
jo
adc
adc
inc
jo
movsb
xchg
push
ds
cmpsl
or
int3
sahf
idivb
push
ja,pt
rorb
cmp
pop
sti
sbb
js
push
xor
cmpb
test
push
mov
add
push
add
imul
lea
out
cmp
adc
js
rorb
pop
andl
xor
scas
mov
fstl
andl
push
xor
clc
daa
int
xor
stc
jl
pop
inc
popa
and
outsb
sub
sbb
or
and
imul
sub
sub
adc
pop
jo
enter
sar
cmc
xor
sub
je
cli
stos
dec
pop
inc
pop
push
inc
adc
mov
inc
dec
xor
jnp
mov
test
pop
push
fcmovne
lea
add
out
jnp
imul
xlat
shlb
push
lds
push
pop
or
mov
adc
jno
or
sbb
push
arpl
inc
and
adc
jns
call
lea
or
sbb
fcompl
jne
int3
rcrb
shlb
les
test
movhps
sub
notl
fwait
je
mov
inc
icebp
mov
es
in
xor
xor
loop
rolb
sub
sarb
and
icebp
push
ds
jge
xor
cmp
enter
enter
pop
dec
aas
sub
mov
gs
sbb
sub
bound
push
jbe
push
and
std
cmp
cs
les
mov
push
sbb
bound
out
fimull
xor
mov
xor
sbb
xor
xor
sub
sub
sub
enter
or
sub
xor
xor
popf
inc
or
scas
jnp
int
jns
xchg
adc
xchg
faddl
ret
or
loope
aaa
ret
xchg
xor
push
insb
inc
sub
xlat
sarb
xor
repz
xor
dec
mov
rolb
loope
inc
inc
cmp
sarb
cmp
jbe
inc
cld
cmp
jnp
mov
cmp
sbb
rclb
out
fwait
sbb
and
sub
dec
sbb
sbb
mov
movsb
test
and
push
and
aas
and
sbb
push
jg
sub
movsb
sbb
negb
add
test
sub
lcall
icebp
loope
mov
hlt
lock
and
jmp
pop
fdivr
ja
pop
jo
jecxz
xor
fstl
jge
pop
frstor
dec
inc
ss
popf
mov
push
sbb
aaa
out
insb
mov
sbb
push
mov
js
push
enter
sbb
mov
xor
hlt
push
scas
rorl
mov
pop
push
xor
fmul
ds
enter
dec
push
iret
and
mov
cmp
enter
test
push
lahf
push
lret
sub
push
xor
orb
cs
mov
stos
xchg
jl
nop
and
jmp
or
ds
aaa
cmp
repnz
mov
jnp
inc
inc
mov
inc
push
sbb
cmpsb
enter
cltd
rolb
mov
mov
aaa
daa
cmpsl
aam
xchg
cmpsb
inc
outsb
rclb
inc
push
dec
dec
xchg
fwait
inc
pop
mov
inc
xlat
inc
or
inc
ret
ret
push
je
or
stc
pop
out
sbb
sub
repnz
pop
inc
ss
pusha
inc
inc
ret
and
adc
lea
sbbl
adc
mov
jp
dec
dec
add
push
fwait
inc
cmc
cmp
inc
xchg
push
gs
cmpsl
std
fdivrs
push
in
mov
rorb
fnstenv
and
pop
pop
fisubrs
or
sbb
adc
and
add
dec
loop
inc
ljmp
dec
and
es
mov
dec
push
push
aas
push
cld
pop
test
inc
dec
jge
jb
fadds
hlt
fsubl
imul
xor
movsb
sbbb
dec
mov
leave
and
jo
je
jno
hlt
in
outsl
mov
iret
dec
pusha
fwait
popa
cmp
std
mov
xor
or
mov
lcall
jmp
popf
and
pop
jne
scas
pop
orl
mov
cmp
mov
in
movsb
mov
mov
in
fsubl
xchg
push
loope
jnp
aas
add
aas
dec
adc
pop
push
sahf
xchg
push
push
adc
ds
rcr
lock
enter
enter
adc
je
dec
xor
cld
push
adc
in
push
pop
xchg
push
adc
mov
nop
fwait
ja
mov
sbb
push
cwtl
sbb
or
mov
push
xor
sbb
test
push
jl
push
pop
push
repnz
pop
mov
clc
dec
adc
adc
mov
inc
bound
and
repnz
pop
jnp
push
loope
lods
inc
sbb
add
sarb
ret
rcll
fiaddl
jmp
inc
sbb
cltd
nop
je
xchg
adc
add
daa
movsl
enter
sar
adc
sub
adc
fdiv
cld
jnp
and
ret
test
rcrb
push
push
cwtl
imul
mov
push
xchg
xorb
imul
or
inc
lcall
lcall
dec
out
mov
add
and
add
xor
int
or
add
aas
rcrb
je
cmp
jecxz
inc
cmp
push
mov
leave
inc
xchg
movl
sbb
repnz
fsubs
int3
cli
dec
mov
prefetcht0
mov
aam
cltd
mov
scas
add
sbb
faddl
fwait
jp
cs
pop
xchg
cli
inc
push
daa
mov
sbb
mov
push
xchg
call
cmp
mov
outsb
adcl
xor
push
or
jne
mov
stc
or
nop
inc
mov
in
sub
or
sub
fldl
pop
comiss
lahf
pop
mov
call
jge
mov
scas
cmp
inc
out
adc
test
pop
adc
fmuls
and
inc
or
int
pop
adc
xor
add
pushf
add
xor
xor
mov
push
xchg
ja
cmp
adc
sbb
pushl
or
mov
pop
inc
mov
jp
sbb
subb
inc
cltd
sub
jge
adc
sbb
rorb
scas
sbb
test
imul
ret
rol
push
add
and
int3
sbb
mov
push
and
or
nop
fwait
and
mov
sahf
sub
adc
test
add
es
rorb
mov
test
mov
mov
and
sub
mov
movsl
into
cmp
or
mov
add
insb
lea
add
xor
push
mov
push
push
aam
push
loopne
or
sub
sbb
ja
add
mov
add
add
add
rol
mov
jo
pusha
push
bound
mov
add
popa
out
les
sbb
cmp
ret
and
addl
sbb
ds
mov
je
dec
push
adc
imul
xor
stc
adc
cmp
mov
xor
dec
push
mov
or
jge
inc
jp
pop
and
sti
fdivrl
or
push
add
pop
clc
pop
subb
inc
mov
in
cmp
mov
int
inc
or
push
les
insb
sub
add
loope
js
aam
jno
add
lock
iret
add
cmp
cmp
cmp
dec
test
or
imul
movsl
lock
sbb
add
loop
push
jle
cmpsl
cs
jl
jg
jb
repnz
movsb
push
push
jl
or
loop
mov
loop
lea
addr16
int
mov
sub
inc
in
sbb
and
jmp
or
add
sub
dec
add
dec
dec
pusha
sbb
aad
cmc
iret
out
xchg
mov
xchg
jl
mov
sub
xor
adc
sub
loopne
cmp
or
add
cmp
inc
clc
lock
cmp
sbb
lods
adc
cmp
fsubrs
ljmp
clc
jno
test
push
into
push
scas
add
jb,pt
mov
ds
inc
loope
mov
mov
js
addl
inc
pop
adc
or
es
lea
xchg
aam
aam
xor
pop
cmp
mov
cmp
jbe
add
jg
cmp
cmp
jne
inc
fs
jo
adc
jb
jl
add
mov
aas
push
push
hlt
subl
or
iret
jne
pop
add
or
mov
repz
jae
ja
push
cmp
movsl
fidivs
iret
je
mov
dec
sar
jg
jg
xchg
mov
jmp
adcl
lret
cmpsb
jle
decl
mov
cmp
roll
lds
push
mov
sbbb
sbb
ja
jo
adc
leave
fs
xchg
jno
aad
movsl
push
adc
aam
or
addr16
push
orl
cmp
movsb
inc
arpl
cmpsl
add
inc
pop
mov
rolb
stos
xchg
adc
inc
sbb
hlt
mov
sahf
sbb
mov
sbb
add
imul
xchg
pop
lahf
push
ret
mov
adc
ss
cltd
sbb
xchg
into
lock
out
pop
in
test
or
das
add
add
fdivr
aas
fcom
aaa
xor
and
jg
ud0
cmp
add
and
mov
movb
movsbl
shr
mov
decb
mov
and
mov
rcll
nop
inc
mov
jne
pop
outsl
loopne
inc
cmp
mov
testl
pop
inc
sub
inc
mov
test
mov
xorl
cmp
dec
xchg
loopne
cmp
inc
pop
out
scas
test
jae
mov
adc
mov
shll
push
sbb
test
std
add
in
stos
test
xor
push
pop
add
mov
rolb
sub
ret
xchg
ss
in
jg
dec
mov
cmp
je
dec
and
sbb
dec
push
insb
cmpsl
and
xchg
cmc
add
cmp
into
adc
stc
fwait
mov
xor
daa
test
jle
jne
sbb
je
das
test
mov
lods
data16
sbb
inc
enter
mov
inc
push
inc
sub
sub
sbb
andl
adc
in
jne
pop
pusha
filds
or
mov
push
ret
loopne
lock
inc
pusha
dec
orl
jg
imul
adc
push
dec
adc
jbe
sub
push
add
add
jecxz
cltd
iret
shl
push
jmp
ja
or
pop
shrb
dec
push
cmovs
andb
push
fidivs
adc
adc
cwtl
inc
imul
dec
sub
dec
adc
adc
sub
push
adc
push
add
push
cmp
xor
mov
sbb
pop
imul
add
and
ja
jl
out
test
or
ljmp
mov
lods
jne
or
pusha
xchg
pop
sub
mov
shll
mov
pusha
insb
shrl
aam
add
mov
or
add
outsl
sub
inc
mov
pop
xchg
inc
popf
sbb
nop
lret
add
inc
jb
lods
adc
lods
imul
add
leave
xor
aam
adc
or
outsb
orb
adc
mov
xchg
and
xchg
add
pop
push
adc
sti
add
call
and
or
lds
pushf
mov
mov
adc
rolb
fimull
xchg
add
test
push
xor
test
lods
and
or
jbe
and
push
inc
sbb
add
cmp
movsl
add
pop
cmp
lock
adc
and
ljmp
lret
loope
dec
aas
cmp
shrb
or
sbb
int3
cwtl
mov
add
dec
cmp
outsb
add
dec
jb
inc
xchg
sbb
or
push
sbb
sub
dec
addb
or
dec
and
push
lods
popa
out
push
cmp
and
add
xor
mov
jne
pusha
push
nop
push
add
jmp
pop
or
pushf
loopne
xor
aaa
mov
sub
test
das
jecxz
rclb
or
jg
pop
andl
cli
xchg
mov
mov
sub
hlt
pop
cmp
cli
sub
or
fstpt
mov
mov
jmp
xor
sbb
call
push
dec
ds
mov
xor
sub
mov
rorl
nop
in
mov
test
mov
adc
dec
cwtl
inc
inc
inc
add
xor
repz
or
jnp
scas
push
jb
and
sbb
das
or
pop
pop
adc
mov
add
in
jns
add
lock
add
mov
lock
dec
jg
cmp
je
inc
push
cmp
jl
add
int
xchg
test
js
lods
imul
add
add
flds
in
push
faddl
iret
test
adc
mov
adc
popa
lcall
cmp
add
ret
sub
jb
pop
inc
push
enter
cmpsb
or
fneni(8087
call
jb
jbe
insl
mov
mov
jo
inc
ja
mov
dec
mov
repnz
imul
pop
in
and
add
cmp
dec
scas
loopne
dec
or
sti
mov
xor
or
mov
xchg
call
lahf
push
mov
hlt
xor
shl
orb
rcrl
mov
xor
les
or
lods
adc
jo
test
lret
inc
das
je
jge
aad
cmpb
xchg
out
ret
jns
leave
test
outsl
das
mov
push
sahf
fdivrl
in
cs
in
sub
cmp
call
shll
cmp
sti
xchg
lods
mov
sbb
sbb
add
insb
pop
lods
or
mov
and
inc
xchg
sbb
sub
push
xchg
adc
and
pusha
sbb
jle
sbb
sbb
mov
or
out
daa
shll
sub
gs
mov
rorb
cli
das
in
add
orl
stos
add
ja
mov
or
pop
push
cmp
sub
add
or
mov
loop
dec
lret
push
lahf
inc
add
inc
or
add
mov
notb
sub
pusha
pop
lea
inc
inc
sbb
inc
inc
sub
jne
cmp
pop
mov
add
ret
xchg
mov
sub
outsb
ds
xchg
mov
sbb
pop
enter
cmpsb
push
fstp
add
into
outsl
sub
aaa
adc
adc
jne
iret
repz
daa
bnd
adc
hlt
jne
or
and
cmp
jne
or
push
mov
and
lock
xor
xor
pop
mov
or
mov
aad
cld
test
lea
movl
into
pop
aam
icebp
sbb
push
jecxz
aaa
fistpl
and
push
fstl
mov
ds
pop
mov
fisttpll
cli
pop
hlt
lea
repz
or
push
xor
inc
xlat
inc
mov
test
movsb
ja
jae
ja
sbb
addb
cmp
cmp
sbb
xchg
xlat
xor
into
fmull
or
sub
cmp
int3
int3
pusha
lea
cmp
jne
adcl
adc
lods
push
add
fisttpll
ss
adc
loopne
and
xchg
lods
shrb
adc
push
xchg
popf
add
jl
fwait
clc
repnz
cmp
mov
rcrl
fwait
push
incb
aaa
popa
xchg
push
inc
loopne
or
out
es
cmpl
dec
cmp
xchg
sahf
xor
mov
xor
std
sub
mov
pop
orl
sbb
int
mov
pushw
pop
mov
sbb
pushf
push
enter
jne
pushf
into
xor
xor
fs
sbb
inc
insb
lock
mov
add
cld
mov
mov
push
sbb
push
flds
and
or
and
in
out
or
add
fwait
ss
push
jnp
mov
jae
mov
jbe
call
movsl
cmp
mov
or
mov
inc
subl
xchg
loopne
sub
push
rclb
pop
or
sub
loopne
ret
dec
and
in
iret
cwtl
add
adc
flds
push
or
jge
pop
mov
and
xor
xchg
push
mov
inc
mov
and
sub
je
insb
sarl
fwait
in
push
pushl
lods
and
jp
verr
sbb
lea
orb
add
icebp
sub
dec
mov
mov
inc
fisttpl
aas
jnp
push
jb
ss
lods
xor
mov
subb
idivl
loopne
xorl
cld
add
popa
arpl
dec
test
out
in
and
and
subl
aaa
dec
sti
enter
fwait
xchg
sti
pop
sahf
popf
movsb
rcrl
xor
mov
mov
or
cmpl
and
cmpsl
xor
ss
xor
shrb
cmpsl
mov
cmp
bts
xor
dec
sbb
pop
adc
enter
adc
push
xor
inc
adc
imul
in
nop
arpl
inc
adc
gs
sub
fs
jb
xor
push
sbb
inc
es
sbb
loop
adcb
xor
add
and
xor
lds
int
adc
and
test
xor
cmp
xor
add
push
add
mov
xor
xorb
sub
xor
jp
mov
fsubl
daa
adc
inc
adc
adc
lahf
add
cs
cmp
imul
and
cli
sub
cltd
shrl
pusha
outsl
sub
loop
or
je
insb
and
enter
add
sbb
sbb
jle
add
lods
adc
push
mov
jno
mov
mov
mov
pusha
dec
arpl
or
add
mov
fdivrl
jae
in
shll
and
or
dec
loop
mov
scas
or
je,pn
push
lcall
inc
add
aam
add
sbb
mov
ffreep
loopne
sbb
fcompl
push
or
mov
lock
sub
subps
movsb
clc
mov
in
rolb
inc
ror
test
inc
push
add
js
movl
outsl
push
or
les
add
fadds
nop
cmp
call
je
cmpsl
cmp
add
lret
jne
mov
or
fadds
pop
mov
inc
das
adc
sub
add
popf
inc
in
test
push
cmpsb
cmpsl
pusha
adc
mov
lea
jge
jecxz
adc
in
ja
shlb
add
lock
and
iret
and
or
and
je
cmp
js
mov
mov
dec
or
dec
sub
out
ficoml
adc
mov
loopne
mov
jbe
push
xchg
fistl
pop
or
mov
adc
jae
sbbl
imul
fadd
cmpsl
sub
push
je
inc
or
fildl
mov
and
xchg
pop
syscall
loop
xor
adc
mov
jo
xchg
pop
push
sbb
gs
ds
ljmp
add
push
adc
and
jne
mov
aaa
pop
test
ljmp
and
pop
mov
jmp
adc
xor
aaa
xor
pop
aaa
add
push
call
addb
or
dec
ret
sub
and
fdiv
sarb
add
push
test
mov
test
mov
cmp
add
inc
sbb
lret
clc
lcall
js
sub
dec
cld
fwait
push
subb
sub
cmp
mov
mov
add
ret
in
jnp
mov
adc
mov
pusha
dec
jb
push
push
or
push
out
inc
push
dec
daa
inc
jecxz
cwtl
movsl
dec
pop
and
test
lds
loopne
pmaxsw
lds
pop
call
jmp
movsb
push
aam
out
je
fisubrl
shlb
lock
sbb
inc
push
add
mov
xor
mov
add
int
add
push
jne
adc
movsb
inc
pop
popa
outsl
iret
add
mov
lcall
add
or
mov
sbb
ret
pop
dec
push
je
mov
mov
and
stc
push
xor
orb
add
xor
jmp
pushl
xor
add
insl
jo
fdivrs
pusha
mov
cltd
shr
ja
mov
sub
dec
xor
ss
sbb
add
adc
push
push
add
or
jmp
xchg
sub
sarl
adc
sub
push
mov
and
mov
aas
mov
test
inc
ret
call
fisttps
jo
aaa
das
sbb
mov
dec
fcmovne
jo
scas
jo
adc
outsl
push
je
jae
insl
in
ja
or
inc
pop
xchg
repnz
cmp
je
lahf
mov
dec
or
xor
add
xchg
clc
enter
sete
push
inc
xchg
ds
mov
adc
pop
push
cmpb
ret
sarb
js
hlt
jae
movsbl
repz
mov
inc
mov
mov
sub
or
sbb
data16
cs
jmp
enter
ret
incl
call
mov
add
or
jecxz
or
add
inc
cmp
clc
dec
jmp
jl
adc
sbb
decl
add
sar
add
jle
jmp
add
clc
xor
fldcw
loopne
ss
cmp
jecxz
sbb
inc
jbe
lahf
lock
enter
adc
or
jl
or
out
jb
dec
dec
aaa
sahf
mov
cmp
xor
shlb
and
or
dec
stos
push
jbe
jo
mov
decb
movsb
ret
or
inc
xorl
roll
pop
or
sbbl
insb
cmp
jl
int3
test
sub
add
mov
out
or
cmp
js
lret
adc
incl
inc
add
fistl
jg
sub
mov
mov
aam
repnz
sahf
xchg
int
add
cld
and
push
ret
or
mov
mov
add
test
leave
cltd
sub
push
and
sub
dec
sub
xor
out
gs
pop
ficompl
adc
in
mov
pop
cmpsl
push
xor
in
push
xor
mov
sbb
adc
xchg
or
pop
cmp
ljmp
xchg
scas
xor
repnz
call
mov
lret
hlt
add
nop
je
add
lea
push
add
push
jmp
add
push
and
or
data16
rcrl
insb
cmp
out
fcomps
pop
jb
jne
push
dec
pop
add
jb
notl
jmp
push
add
loopne
jb
push
push
aaa
stos
adc
push
or
push
cmp
dec
mov
add
xchg
sbb
sub
icebp
subl
sbb
xor
into
dec
inc
or
push
es
pop
ss
jns
add
in
push
mov
mov
mov
repz
out
rcl
xchg
jle
mov
bound
mov
xchg
push
rorb
in
sbb
lret
rorl
popf
gs
adc
push
jl
iret
push
mov
add
xchg
xchg
cmp
xchg
lea
bound
push
fucomip
xchg
popf
fcmovne
push
les
inc
xchg
pop
jbe
pop
add
push
cmp
push
mov
pop
test
sarb
inc
and
ret
adc
or
ja
outsb
sub
arpl
push
inc
call
xchg
ret
ja
dec
push
call
scas
mov
cmpsl
out
loopne
jecxz
mov
cmp
add
xchg
pop
lcall
scas
mov
lret
je
pop
add
mov
adc
push
call
sbb
movb
shrl
sbb
add
in
shrl
jl
imul
push
push
pop
aam
int
jb
inc
mov
mov
aam
add
int
jne
or
mov
jle
aaa
mov
adc
push
add
cmp
sub
mov
add
lret
in
sbb
or
mov
sbb
mov
cmp
mov
loopne
sti
push
pop
cmp
sarl
or
repz
je
mov
adc
adc
adc
das
popa
jno
pop
xchg
sahf
out
and
enter
or
rolb
ret
xchg
pop
enter
add
mov
mov
xchg
aam
and
push
pop
add
adc
pop
sub
jo
and
aam
leave
sbb
clc
out
shll
mov
push
stos
mov
imul
jge
sub
push
in
or
sbb
sbb
movsbl
shl
call
std
sub
decl
mov
sub
pop
cli
das
jp
dec
out
test
sbb
lret
and
pop
movsl
sub
xchg
jae
cmp
pop
sbb
dec
rolb
shlb
fcoms
cmp
pop
loope
shlb
cmp
add
xor
push
xlat
movsl
cvtdq2ps
roll
jno
inc
pop
call
add
popf
ja
cli
or
mulb
xor
stc
mov
cld
mov
jne
lods
xchg
xor
pop
jl
jecxz
test
or
xor
fldenv
orl
pop
leave
test
add
sahf
inc
push
jl
add
adc
jo
data16
sbb
mov
mov
jge
pop
pop
and
cmp
dec
jae
sbb
pop
test
xchg
std
lock
pop
mov
mov
clc
loopne
dec
xlat
pop
mov
das
mov
sub
ss
cmp
rcrb
pop
cmp
jle
mov
cmpsb
jl
hlt
push
inc
add
mov
push
fisubl
daa
fmull
jecxz
imulb
xor
decl
mov
mov
inc
mov
mov
cmp
jl
dec
clc
addl
sbb
out
lods
icebp
cmp
sarb
sub
push
icebp
or
orb
mov
mov
add
add
mov
nop
and
pop
popl
add
cld
push
leave
push
xor
mov
xchg
mov
adc
pop
or
cmc
ret
nop
and
pop
cltd
inc
out
xchg
pushl
stos
pop
mov
js
mov
xchg
call
hlt
add
pusha
add
mov
lea
xor
push
test
add
fwait
add
mov
push
mov
in
out
dec
in
mov
fldenv
xlat
mov
pop
xor
repnz
fsubs
pop
pop
pop
mov
cwtl
adc
mov
cmp
testb
aas
fbstp
jae
pop
cmp
into
inc
shll
dec
es
mov
ret
push
mov
gs
push
or
and
loope
pop
adcl
sbb
add
mov
xor
popl
cli
loopne
xor
and
adc
add
imul
movsl
pusha
lds
ret
push
fadds
add
test
lret
push
xchg
lods
and
mov
xchg
mov
popf
mov
mov
add
pop
movsl
sbb
cwtl
adc
xor
add
mov
adc
dec
pusha
stos
mov
dec
cmp
cmp
jbe
cmp
jbe
mov
sbb
push
test
mov
mov
cs
notl
sbb
adc
xchg
xchg
cmp
sbb
idiv
cmp
inc
dec
xor
dec
xchg
or
push
jne
loopne
fbstp
fdiv
cmp
push
dec
aas
or
jne
push
fldcw
in
inc
mov
aad
test
insb
push
push
push
cmp
xchg
push
push
cli
jmp
push
or
xchg
sti
push
mov
jmp
ret
and
xor
test
mov
cwtl
mov
or
arpl
out
lcall
dec
call
pop
inc
js
xchg
cmpsl
sti
lea
pushf
shrb
loop
push
push
xchg
push
fiaddl
sub
lret
xchg
push
pushf
data16
or
mov
vmovdqu
cmpsb
leave
loopne
in
mov
into
roll
or
and
enter
scas
test
mov
mov
fsubs
mov
or
out
add
fcompl
sub
cltd
dec
shlb
add
mov
xchg
outsl
add
adc
ret
adc
dec
sub
imul
cmp
aam
cmp
or
loop
fldenv
jle
sbb
mov
test
mov
mov
sub
movl
jno
das
mov
pop
jecxz
scas
test
rclb
push
dec
enter
out
pop
add
jmp
inc
or
add
pop
xor
xlat
inc
mov
ss
jp
push
mov
fstl
mov
testl
jo
sbb
imul
lret
mov
pop
push
loopne
xor
dec
stc
mov
sti
ret
aas
sbb
lcall
add
jge
push
mov
stos
jle
add
bound
or
scas
ret
fwait
add
push
aam
dec
and
scas
out
add
je
adc
fistl
cltd
push
and
fistps
adc
out
fdivl
mov
je
test
packuswb
sbb
les
les
lea
jbe
mov
jnp
orps
ret
clc
pop
fwait
and
test
pop
or
pop
ljmp
cmpl
adc
push
push
push
mov
sbb
lahf
movl
aas
push
jns
inc
xchg
jge
cmp
les
add
jg
mov
std
or
jae
fdivl
push
out
pusha
stc
adc
inc
add
leave
inc
aam
inc
pop
insb
or
sub
add
adc
jge
out
scas
mov
or
jmp
pop
je
sbb
mov
imul
pop
in
pop
xchg
sbbb
lods
sub
popf
stc
hlt
mov
ret
je
mov
or
popa
daa
sbb
or
push
popa
shrl
sahf
addr16
divl
jg
pop
out
jo
ja
int3
or
jmp
out
pop
push
cld
outsb
adc
gs
pop
inc
incl
je
addl
adc
add
inc
fldcw
data16
jmp
das
push
xor
add
call
pop
loopne
hlt
mov
test
mov
loopne
sub
sbb
push
push
push
xlat
rorb
dec
jle
pop
int
loopne
dec
daa
jne
adc
dec
sbb
ret
lahf
imul
sbb
ja
xor
loopne
fnstsw
jne
cmp
jbe
or
sub
or
push
pop
push
sbb
xchg
sti
and
or
sub
insb
mov
adc
loop
lret
icebp
sti
int3
adc
xchg
cmpsl
or
push
inc
adc
repnz
ja
xor
sbb
pop
clc
jne
mov
loopne
outsb
adc
sti
or
pop
mov
shlb
arpl
lret
jecxz
inc
add
rcrb
push
fldenv
xchg
loop
fildl
jecxz
and
jmp
push
scas
sub
cmp
push
adc
mov
cwtl
inc
push
push
call
cmp
sbb
dec
scas
dec
push
and
add
enter
mov
ljmp
pop
arpl
loop
test
push
icebp
or
cmp
jae
sarb
insb
jb
jmp
add
lock
mov
dec
in
inc
jp
mov
dec
xchg
or
pop
roll
jmp
pop
orl
out
mov
fisttps
push
sub
adc
sub
pusha
bound
cmpsl
cmp
ret
imul
push
fs
xor
push
dec
or
gs
push
fs
xor
add
dec
gs
sbb
sbb
adc
iret
sub
mov
cmp
xchg
adc
xchg
and
sub
jae
jns
pop
inc
shlb
das
mov
push
mov
xor
into
adc
fstpl
xor
enter
and
mov
push
fmuls
insb
fadds
inc
nop
mov
xchg
xor
test
addb
pop
mov
out
pop
les
mov
xchg
inc
loope
das
or
adc
or
cs
or
or
adc
sbb
mov
xchg
adc
andb
ret
dec
subl
sbb
cmpsb
dec
xor
xchg
test
jae
cmpsl
pop
adc
add
xchg
pusha
enter
and
xchg
pop
and
adc
dec
or
ret
mov
push
xor
inc
andb
or
sub
ja
aad
int
jnp
add
mov
push
es
mov
int3
movsl
sbb
push
dec
push
popf
nop
loopne
outsb
shlb
fs
adc
jne
sbb
push
push
xchg
sbb
adc
sti
inc
push
mov
and
aam
mov
test
loopne
cli
and
adc
aam
lcall
jb
dec
or
adc
adc
test
les
test
lds
xchg
test
or
sub
sbb
push
mov
inc
cmp
daa
je
fiadds
sbb
jge
sub
xchg
js
cmp
jb
inc
sub
and
push
jnp
nop
mov
push
aam
inc
mov
inc
cmp
dec
mov
pop
mov
rcl
ds
in
ret
sbb
pop
push
rorb
fcomp
ljmp
inc
add
jp
xchg
out
mov
test
sbb
pop
fbld
nop
or
and
jge
dec
push
cmp
lds
lahf
mov
and
mov
or
push
and
ret
ret
and
jnp
fdivs
add
int3
add
ret
rolb
test
ja
sbb
jo
jp
pushl
push
sbb
aas
xchg
jne
adc
adc
dec
cltd
and
add
xchg
test
add
jbe
fcompl
cli
inc
or
add
sub
insl
add
sbb
adc
std
bound
fadd
mov
xlat
push
loop
cwtl
stos
add
push
xorb
xor
outsb
push
lea
iret
xchg
dec
lock
subb
push
imul
xchg
dec
mov
testl
rclb
xor
or
sub
dec
fnstenv
icebp
pop
sbb
inc
pusha
ljmp
xchg
fld
inc
push
push
fsts
inc
cmp
jb
cmp
dec
mov
daa
dec
cmp
inc
aaa
popa
cwtl
leave
js
push
ret
es
ficompl
dec
je
add
push
sbb
insl
or
pop
pop
mov
imul
pop
push
inc
xor
and
out
stc
loopne
or
hlt
xchg
adc
repnz
mov
xorl
mov
mov
imulb
push
xor
das
je
or
mov
cmp
out
mov
je
cmp
jne
mov
sbb
add
adc
fistps
dec
lea
cli
mov
pop
dec
std
ja
repz
push
cmpsb
mov
sub
inc
adc
je
idivl
lods
cs
and
cld
cmp
jbe
push
lea
adc
cmp
je
sub
inc
jmp
inc
and
xchg
pop
xor
mov
sub
pop
mov
call
dec
push
cs
ljmp
cs
or
out
aam
mov
roll
dec
jp
adc
into
inc
add
mov
in
loop
cli
sbb
hlt
xor
fisubrl
bound
les
push
cld
inc
xchg
cmp
add
shll
sti
cmp
outsb
hlt
cmpb
mov
pop
cli
mov
aam
jb
sub
ljmp
jb
sbb
xchg
sub
adc
lds
push
out
pop
jno
push
aad
jge
jne
lea
add
sarb
or
pushf
movsl
inc
sahf
jno
mov
loopne
jne
lea
add
pop
add
dec
dec
pushl
mov
data16
je
inc
add
jae
mov
fneni(8087
movl
mov
mov
add
fsubr
adc
aas
insb
sti
and
cmpsb
or
or
push
test
data16
fs
jne
xor
push
jo
dec
lock
mov
pop
sub
or
push
mov
jmp
dec
das
orb
shlb
and
mov
mov
or
insb
mov
push
shrb
push
int3
push
inc
add
mov
add
jbe
jg
or
jge
pop
xor
fmull
and
es
sub
sub
and
pop
adc
pop
jl
or
adc
pushf
call
test
jbe
lea
cmp
jbe
loopne
outsb
jp
pop
arpl
pop
adc
adc
je,pn
test
jne
pop
subb
sbb
std
sub
jb
andb
loop
add
add
adc
movb
inc
or
pop
fs
sub
cwtl
adc
and
rcrb
xchg
data16
add
xor
mov
inc
and
push
push
adc
add
sbb
loopne
add
daa
jp
adc
sbb
dec
inc
lcall
cmp
hlt
clc
lods
mov
adc
xor
push
enter
push
adc
push
adc
popa
pop
je
sbb
sbbb
and
inc
insb
mov
push
mov
lea
loopne
test
lret
add
xor
into
sbb
sahf
test
pop
das
imul
add
repz
test
xchg
mov
jg,pn
imull
sbb
in
mov
jmp
jbe
push
ret
lods
add
arpl
cmp
push
xor
jae
iret
rorb
int
jp
and
sbb
cmp
mov
pop
sub
cmp
int3
outsl
cltd
out
lret
lcall
xchg
add
mov
mov
pop
lea
add
out
repz
jne
pusha
and
in
cmp
adc
jle
push
andl
jo
pusha
mov
adc
mov
insl
inc
pushf
test
lcall
rolb
or
shrb
pop
push
movl
push
adc
dec
or
push
cld
cmc
pushl
push
lahf
mov
pop
jae
mov
cli
data16
out
adc
inc
xchg
push
mov
stos
idivb
fucomi
xor
int3
add
push
add
add
outsb
xchg
cmp
rol
test
test
int
cmpl
lods
xor
push
ret
outsb
rcl
lock
pushl
jle
ljmp
cmp
add
mov
jae
pop
push
sbb
cmpl
jns
and
pop
jne
lods
mov
lea
inc
jnp
mov
rcrb
int
or
pop
push
inc
lret
negl
xor
and
in
dec
jae
jbe
mov
push
gs
add
inc
ficoml
cmp
cld
pop
xchg
push
sbb
nop
push
cmp
emms
sub
je
cmpsl
popf
pop
lea
jo
sti
mov
push
mov
mov
movsl
xchg
stos
pop
inc
jl
pop
adc
xchg
sbb
mov
clc
pop
je
test
dec
push
call
inc
jmp
xor
lea
sub
shll
xorl
nop
add
push
dec
mov
xor
cld
pop
cltd
sub
pop
or
mov
sub
clc
mov
das
add
inc
xchg
jecxz
xor
push
sbb
inc
push
in
mov
stc
loop
cmp
inc
and
sbb
push
aaa
les
xor
add
push
add
add
pop
add
lret
les
fiadds
add
mov
adc
mov
ret
adc
push
andl
ret
or
sti
pusha
jb
push
mov
ljmp
add
daa
push
xorl
mov
xchg
push
gs
mov
jmp
and
xor
sub
test
rorb
push
ljmp
clc
mov
and
aad
lds
sub
and
cld
inc
inc
push
push
popf
test
jns
inc
pop
xchg
addl
cmpsl
lret
and
int3
mov
test
adc
push
or
inc
mov
loope
fstl
frstor
push
xor
test
inc
pop
xchg
fs
add
xor
push
rcrb
or
push
leave
jae
call
or
idivb
faddp
sbbl
dec
mov
int3
rcr
mov
push
xchg
push
xor
ficomps
lods
mov
hlt
test
add
cmpb
je
mov
mov
ret
cwtl
cmpl
dec
push
js
mov
es
push
push
push
lret
pop
loope
and
jne
fmul
mov
lods
xorl
jg
jnp
das
movl
lock
into
cmpl
rcr
lahf
sti
pusha
add
andl
aas
mov
cmp
sub
cwtl
xor
cmpsb
or
xchg
cmpsl
jno
jl
jmp
bound
and
push
cmp
pop
jge
push
sbb
inc
mov
add
xor
popf
jne
push
cmp
call
lock
shlb
and
fiadds
test
adcl
std
test
dec
fcmovb
pop
or
fcoml
loope
adc
sub
mov
add
dec
inc
movsl
es
ficomps
jo
pop
mov
xchg
pusha
cmp
mov
dec
mov
icebp
cmpsl
jl
loope
lods
fwait
mov
loopne
fmuls
insl
cwtl
cmpsl
mov
jg
cmp
aas
je
cmp
rclb
pop
jne
aam
pop
inc
cmp
cmpsl
jne
push
imul
jne
or
mov
pop
call
push
jecxz
mov
and
or
insl
in
xor
cmp
fucomip
mov
jne
jmp
sbb
xor
xchg
sub
mov
mov
sbb
mov
gs
hlt
xchg
add
cmp
jo
mov
sbb
cs
add
je
pop
in
or
pop
in
stc
mov
fs
jmp
inc
cmp
fdivrs
outsb
push
div
jmp
pusha
mov
jae
movsb
push
mov
add
xchg
xor
pusha
mov
adc
xchg
mov
sub
decb
adc
adc
inc
lret
addl
loopne
pop
adc
orl
sbb
pop
cmp
pusha
push
shrb
inc
decb
or
or
ret
pop
pop
jle
push
add
je
adc
push
rclb
fucomip
pop
push
clc
std
push
mov
orl
jbe
aas
add
inc
arpl
sub
xchg
xchg
pop
cmp
mov
add
mov
shlb
mov
xlat
push
push
cs
lret
in
push
pop
pop
pop
in
mov
fs
sbb
pop
sub
cmp
xor
jae
sub
sbb
dec
loopne
lret
push
sub
adc
ja
inc
lret
mov
cmp
xlat
aad
and
mov
dec
push
sub
sarb
push
aas
jmp
push
shrl
mov
adc
and
adc
push
xor
push
or
inc
adc
sub
int3
adc
pusha
sbb
xor
imul
adc
or
or
sbb
mov
or
xor
dec
pop
leave
es
pop
sbb
or
insb
scas
sbb
ljmp
or
aas
push
loop
mov
fwait
cli
jp
push
pop
pop
lea
jmp
shr
mov
je
fists
add
or
sti
and
add
mov
addl
testl
sbb
fstpt
pop
push
and
inc
cmc
testl
popf
push
popf
hlt
or
jp
aas
push
xor
sti
es
sahf
lcall
dec
jnp
dec
pop
push
mov
mov
or
shlb
mov
bound
push
test
cmpsl
and
cmp
cmp
sub
cmp
push
fwait
add
or
and
push
mov
je
aaa
adcb
mov
cmp
jne
ss
mov
inc
pop
loopne
jbe
xor
je
jg
adc
adc
je
sbb
int
fldl
sbb
and
pop
sbb
sbb
sub
add
pushf
add
pop
sbb
lods
push
and
push
dec
mov
xor
std
and
shl
adc
rcrb
mov
jbe
mov
adc
ds
fidivrl
lock
push
rcr
in
and
inc
shll
in
testb
jne
or
or
push
mov
sbb
pop
jbe
jo
mov
dec
adc
sbb
rol
mov
je
or
daa
in
dec
ret
push
jae
push
shrb
aas
js
bound
cmpl
popa
ficoml
add
incl
cmp
addl
adc
inc
adc
hlt
dec
movsb
stos
mov
push
ret
in
cmp
clc
jne
push
xor
mov
or
mov
addl
push
cltd
mov
cmp
je
divb
push
test
jle
or
push
inc
add
or
jge
mov
jmp
jne
push
jmp
cwtl
and
leave
inc
cmp
out
push
xchg
rorl
inc
hlt
mov
jnp
clc
lock
hlt
arpl
adc
mov
mov
ss
test
add
add
mov
or
cli
add
push
rcl
jae
pusha
ret
pop
enter
jb
gs
push
adc
add
jmp
cmp
add
jecxz
mov
jecxz
and
cmc
mov
stos
outsl
mov
and
daa
dec
pop
push
push
push
ficoml
jle
xchg
jg
fdiv
push
xchg
add
fisubl
mov
or
jmp
inc
mov
test
int
and
call
pop
mov
cmpl
fidivl
jne
addr16
fnstenv
hlt
test
test
sbbb
je
sbb
js
push
mov
out
adc
mov
inc
pusha
scas
xchg
adcb
int
cmpb
jns
pusha
shlb
xor
or
cmp
fsubl
fsubl
and
test
add
or
sbb
adc
mov
inc
fsub
push
adc
stos
mov
push
pop
sbb
push
sub
and
push
test
pusha
es
adc
je
adc
push
popa
mov
adc
xchg
adc
cli
jno
xor
clc
jmp
sub
das
cmc
mov
push
push
xor
sbb
inc
add
mov
mov
mov
mov
adc
jle
mov
je
push
jmp
rcll
sbb
lret
gs
in
sbb
sub
push
dec
cmp
dec
cmp
pop
mov
sbb
dec
push
mov
jne
jns
add
cs
sbb
xor
call
push
sbb
jg
jbe
push
aas
in
clc
jge
ja
jmp
mov
or
add
mov
inc
dec
mov
xor
adc
mov
inc
pop
pop
in
aam
lret
xor
or
test
jle
push
es
loopne
movsb
testb
adc
mov
mov
fcompl
cmp
push
mov
sbb
sub
pop
cltd
sbb
jb
or
nop
dec
insb
mov
dec
jecxz
jb
test
fwait
ret
push
adc
cmc
sar
ret
inc
cmp
jl
jmp
ret
mov
mov
fwait
cmpsb
ret
mov
sbb
add
addb
popa
dec
loope
movsb
mov
xlat
and
cmp
clc
movsl
mov
fs
fcmovu
push
or
stos
xchg
mov
jmp
ss
jb
jno
xor
lea
mov
mov
inc
imul
and
or
rep
int
lret
sbb
int3
mov
add
lock
push
inc
inc
push
loop
sti
call
push
xor
add
push
xlat
inc
ds
lret
push
add
xor
push
rol
mov
jmp
push
into
adc
lds
or
movsl
mov
dec
and
or
pop
int3
or
aas
ret
rclb
aas
cs
xchg
pop
sbb
mov
sbb
push
xchg
repz
mov
cmp
leave
mov
add
adc
mov
pop
xor
ds
or
jmp
icebp
rol
inc
inc
dec
inc
push
adc
push
cmpsb
push
data16
inc
xlat
sub
dec
inc
inc
push
daa
add
xlat
mov
or
cmp
or
or
popa
pop
pop
xchg
clc
pop
mov
cmp
pop
ret
fstpl
or
fs
test
cmp
cmpsb
fdivs
pop
push
or
idivb
jp
and
mov
pop
jmp
push
add
loopne
mov
ret
repnz
jo
daa
xchg
shrb
push
push
popa
pushf
adc
jge
rolb
cmp
test
dec
nop
push
add
sbb
sbb
push
loopne,pn
mov
mov
loopne
pop
xchg
ret
dec
test
inc
sub
mov
push
iret
clc
pop
ja
jae
sbb
cmpsl
jo
movb
cltd
jo
cmc
mov
jo
cmp
ret
in
jge
cmp
cmc
fwait
add
aam
cmp
push
lcall
ds
inc
rclb
inc
sti
rcrl
mov
mov
mov
mov
or
xor
adc
stos
sti
mov
das
adc
dec
loopne
xchg
popa
cmp
stos
or
pushf
add
rol
add
sub
inc
mov
pop
inc
jle
and
sbb
push
xchg
add
inc
cmp
mov
in
loopne
out
add
enter
or
sub
sub
or
mov
scas
test
js
mov
cld
dec
xchg
hlt
imul
test
cmpsl
mov
stos
dec
popf
add
ret
dec
sahf
cmpsb
add
popa
lods
daa
add
jo
loope
inc
inc
add
sub
xchg
mov
mov
cmp
jo
adc
add
xchg
sub
add
xlat
data16
mov
hlt
push
leave
fdivl
dec
subl
or
outsl
iret
or
pusha
cmp
adc
pop
add
aaa
pop
scas
xor
sarl
xlat
or
popa
adc
pop
mov
dec
or
cli
incl
jne
cmp
adc
jbe
fcomp
stos
repz
in
mov
push
pop
sbb
adc
or
push
pop
dec
addl
lea
adc
stos
nop
jle
push
mov
fcoms
jmp
imul
push
pop
mov
push
or
or
add
lds
stos
pop
test
xor
push
adc
es
stos
test
xor
cmp
xchg
shll
and
mov
or
sub
add
xor
pop
js
adc
sbb
push
fdivs
or
adcl
es
arpl
dec
test
add
sbb
jnp
and
dec
jge
stos
or
pop
sahf
xchg
mov
inc
rorb
or
insb
mov
xchg
mov
stos
sub
cmp
xor
test
in
add
stos
mov
sarb
rcrb
push
push
inc
ss
jge,pn
test
outsl
ss
sub
mov
xchg
das
sbb
fsubrl
popa
test
fsubrl
or
or
mov
dec
pop
sub
xor
lret
jg
jg
xchg
lea
or
cmp
add
cmp
idivl
pop
mov
mov
pop
xchg
addb
pop
movl
cmp
inc
dec
test
dec
insl
mov
inc
dec
jecxz
or
sub
cwtl
movsb
es
scas
pop
dec
daa
test
add
push
call
pop
mov
inc
sub
or
push
cs
imul
jecxz
inc
pop
push
inc
mov
popa
or
mov
mov
movsb
or
adc
and
sub
add
add
cwtl
dec
andb
sub
dec
dec
xchg
xchg
add
xchg
scas
fnstenv
ret
jno
inc
sub
push
xchg
inc
sbb
lret
jnp
sbb
es
inc
andl
inc
or
mov
push
lods
and
push
sbb
ja
jbe
mov
or
dec
and
aam
pop
and
push
aam
inc
lcall
das
jmp
inc
cmp
std
fidivrs
mov
insb
sbb
mov
ss
inc
pop
inc
push
dec
out
fstp
cmp
enter
xchg
ja
sbb
mov
sbbl
negl
jge
adc
loopne
add
pop
sub
mov
jnp
call
sbb
sbb
and
and
push
push
data16
and
shll
shll
cmpl
push
adc
or
sbb
jno
inc
dec
mov
pushf
lret
jnp
lods
xor
adc
jne
xor
pop
adc
fisubs
and
int3
mov
and
cmp
or
jmp
movsb
inc
pushf
xor
mov
mov
or
testb
lcall
or
shlb
pop
dec
inc
sub
sbbl
add
inc
sub
xchg
xchg
cmp
rcrl
xchg
pop
sbb
enter
jecxz
cs
mov
push
sub
add
mov
aam
es
ds
sub
mov
pop
mov
insb
or
stc
enter
xchg
mov
push
lods
pusha
jne
andb
jo
inc
jl
mov
bound
test
xchg
mov
out
sub
adc
lock
cmp
call
fcoms
adc
push
pop
data16
dec
and
cmp
jbe
adc
imul
dec
loop
jle
pop
add
js
sub
dec
cmp
bound
sarl
iret
mov
add
xor
jp
pop
dec
sub
add
mov
jbe,pn
fdivl
ret
out
fwait
mov
fdivrl
sbb
into
add
mov
jo
adc
mov
lods
push
les
insl
popf
jecxz
enter
mov
imul
or
push
sbb
fsubr
adc
dec
cwtl
jo
add
test
and
rolb
dec
xlat
je
cwtl
cld
mov
mov
add
dec
ds
adc
push
add
push
mov
jg
pop
mov
mov
push
cmp
pop
lock
daa
aas
das
cmpl
adc
add
jb
jmp
mov
adc
push
push
add
xchg
jno
and
insb
arpl
std
jp
add
xor
cmp
daa
fwait
add
aad
add
cwtl
movsl
dec
loop
cltd
push
or
dec
pop
sub
add
or
inc
push
mov
or
sub
es
push
mulb
sub
jbe
xor
fiadds
and
push
push
mov
mov
movb
test
popa
lock
pop
fmull
icebp
xor
push
popf
xor
les
inc
fwait
add
jge
outsl
aaa
add
inc
and
jne
mov
jmp
cmp
push
pop
push
add
and
mov
aas
push
or
sbb
pusha
mov
lods
mov
xchg
jo
push
mov
test
add
pushf
rcll
sub
cmp
add
rcrb
add
roll
arpl
cmp
movsb
push
pop
or
inc
jno
out
add
sbb
cltd
cwtl
adc
mov
adc
jb
mov
pop
aad
adc
aaa
incl
dec
add
ret
sbb
jns
icebp
add
push
test
jp
fstps
popf
cmp
inc
mov
push
pop
inc
js
jmp
mov
push
and
xchg
scas
jp
jne
je
or
cld
add
out
xor
call
dec
add
push
push
or
mov
jo
in
pop
inc
dec
movsl
adc
shlb
sarb
das
int3
or
dec
add
or
popa
popf
int3
jo
jmp
fwait
mov
push
mov
cmpsl
dec
jne
mov
mov
ficoms
dec
mov
ret
dec
adc
subb
xchg
pop
adc
sahf
insl
jb
mov
adc
arpl
sub
xchg
and
xor
sbb
rorl
adc
inc
dec
sbb
mov
or
jl
enter
lods
pop
sub
pop
add
mov
lods
push
sub
movsb
add
mov
pop
loopne
xchg
shll
ficomps
testb
xor
push
pop
jp
cmp
sbb
mov
push
inc
xchg
loope
sahf
dec
loop
mov
rorb
outsb
add
in
rorl
je
pop
fs
sub
fnsave
leave
mov
add
sbb
and
xor
arpl
pop
insl
in
add
mov
cld
popf
or
jae
ret
and
push
jns
adc
notl
adc
adc
pop
xor
and
inc
cs
adc
adc
adc
adc
adc
ret
in
inc
pop
add
jae
xorb
add
das
push
jecxz
mov
enter
push
ss
cli
pop
mov
cmpw
je
cmp
pop
adc
adc
test
xlat
xchg
cmpsl
and
jno
in
push
xor
neg
leave
mov
add
rcl
cmp
or
mov
jecxz
cmp
pop
lea
jo
shll
or
mov
ja
call
lock
mov
inc
in
jl
inc
test
and
das
jmp
cmp
jle
cmp
sub
cmp
bound
cwtl
sub
test
or
push
jbe
movsb
pusha
es
mov
lea
in
mov
add
movsb
stc
test
lods
out
popl
push
test
mov
in
mov
sbb
xchg
push
sub
push
adc
add
dec
push
pop
jo
enter
push
sbb
outsb
nop
xor
cmp
imul
sahf
sub
sbb
test
fmull
xorl
jp
pop
and
std
xchg
and
dec
pushf
aad
das
andl
xorb
ljmp
pop
add
adc
hlt
add
call
divl
pop
bnd
cmpl
sbb
push
out
mov
mov
inc
adc
cs
imul
mov
push
cli
fdivr
ja
dec
iret
loopne
ret
insb
inc
xor
mov
or
pop
iret
scas
out
adc
lods
cmp
cmp
data16
push
push
push
mov
sarb
cmp
fstl
dec
cmp
test
pop
cwtl
push
sbb
jp
std
mov
out
mov
jecxz
jecxz
adc
rcl
sti
pop
notl
mov
call
leave
mov
mov
hlt
add
push
sub
out
sbb
pop
loope
add
mov
or
je
andb
jle
or
xor
pop
cld
sti
jl
cmp
add
ja
popf
clc
imul
xchg
fldl
pop
add
sub
lret
push
je
or
push
mov
push
aas
cmp
mov
leave
pop
and
daa
dec
repnz
add
cs
cmpsb
dec
les
icebp
sub
adc
adc
pop
ds
lret
push
lock
pop
lock
and
or
in
inc
enter
add
sub
pop
add
push
push
mov
cmpsb
pop
push
aas
rolb
sub
inc
push
and
mov
xor
pop
sub
je
jbe
pop
aaa
jmp
cmp
je
mov
and
push
add
xor
fstps
movsb
adc
push
jge
xor
loopne
repnz
and
cmp
clc
mov
inc
push
fdivrs
inc
or
push
nop
ret
stos
jb
pop
xchg
inc
push
setae
outsl
cs
sbb
test
xor
mov
push
pop
cs
xchg
inc
inc
sub
loopne
pop
jl
lea
movsl
xchg
sub
adc
adcb
mov
frstor
jmp
mov
pop
adc
out
mov
daa
or
test
push
cmp
mov
add
add
ret
ljmp
popf
repnz
cmp
mov
lea
loope
jg
push
ror
pop
mov
lea
mov
inc
push
push
pop
or
push
lock
repz
add
cmp
inc
dec
adc
roll
push
std
pop
pop
push
mov
cmpl
push
shlb
mov
imul
push
shll
pop
rorl
loopne
xchg
popf
dec
sbb
ja
push
or
and
rorl
mov
cmp
or
int
and
adc
das
sbb
xor
pop
mov
iret
jp
xor
mov
push
push
sub
hlt
std
xor
cmovne
mov
loopne
sub
xor
and
scas
pop
jbe
add
inc
push
dec
jmp
outsb
or
arpl
sub
mov
push
adc
das
dec
xor
and
or
cmp
xchg
imul
xchg
push
ljmp
push
mov
in
pop
mov
ret
popa
mov
add
add
pop
xor
xchg
bound
xor
scas
dec
fadd
lea
aam
cmp
cmp
sbb
inc
dec
jmp
repnz
ja
mov
adc
rcrb
push
lods
add
adc
xor
and
mov
add
cmpsb
mov
fcmovnu
scas
adc
cmp
fwait
inc
out
daa
loope
or
mov
loope
leave
mov
popa
mov
sub
inc
mov
roll
lea
push
mov
xor
sti
mov
jns
sub
nop
inc
inc
cmp
arpl
mov
cmp
adc
inc
mov
rolb
xchg
dec
xchg
mov
push
pop
pop
repnz
lcall
pop
rcrl
ss
adc
mov
or
add
fwait
stos
push
adcb
sub
fisttps
into
xchg
out
shlb
pop
lea
lods
pop
jne
pop
lcall
mov
inc
jg
sbb
push
popa
cld
rolb
pop
add
push
jecxz
adc
in
sub
bound
ret
sbb
loope
adcl
add
xchg
jl
add
sbb
and
cs
ljmp
sub
inc
enter
add
loop
addr16
int
mov
icebp
outsl
pop
xor
mov
dec
pusha
nop
data16
and
mov
or
jge
or
cwtl
test
fs
jmp
addr16
xchg
pop
add
in
ss
push
fnstcw
pusha
xor
insl
aad
sub
dec
je
dec
adcl
fs
sbb
xlat
jmp
inc
orl
and
lret
add
cltd
mov
arpl
pushf
jae
lea
outsl
call
cld
jmp
cmpl
sub
shll
xor
mov
out
in
xchg
in
lods
push
mov
mov
test
in
sub
sbb
sub
add
cltd
mov
incb
daa
push
insb
sbb
shlb
xchg
loop
sbb
outsb
cmp
add
sub
adc
fs
or
mov
mov
or
pop
popa
repz
inc
add
add
mov
push
xchg
sub
add
out
test
push
sbb
jb
xor
inc
adc
inc
lock
xor
xor
jns
or
cmp
push
mov
sti
add
sbb
lods
adc
pop
inc
or
add
int
push
bnd
xchg
dec
scas
enter
pop
test
mov
fnstcw
fsts
mov
pop
adc
sub
push
dec
dec
insl
xor
rcll
pop
mov
sbb
mov
gs
sbb
scas
sub
push
mov
icebp
add
lahf
push
je
out
xor
push
movsb
jg
or
pop
xchg
mov
pop
jp
xchg
sbbb
xlat
xchg
js
add
lret
push
call
inc
outsb
push
push
enter
fsubrs
hlt
push
insb
push
mov
xchg
aam
and
mov
dec
cmp
and
sub
pop
mov
bound
jge
mov
sbb
daa
push
wbinvd
add
and
mov
xor
and
imul
pop
or
inc
xor
xchg
xor
nop
add
adc
je
movsl
add
jbe
orl
popf
daa
cmp
add
bound
pop
pushl
push
pop
push
lds
lea
enter
js
js
and
pop
mov
dec
idivl
clc
mov
add
ja
push
adc
push
mov
pop
xor
in
das
or
adc
aad
sbbb
ss
cmp
ja
cs
andb
jnp
les
jb
je
pusha
dec
push
xchg
pop
ja
cmp
data16
mov
rolb
jmp
and
or
je
ja
mov
test
dec
adc
jne
sti
int
imul
aaa
lret
sub
mov
cmp
stos
es
add
xor
andl
xchg
mov
hlt
xor
or
jns
mov
movsb
mov
pop
pop
pop
xor
adc
or
cmp
jae
add
addb
sbb
adc
push
js
loopne
xchg
sub
adc
loopne
fnstenv
rcrl
push
mov
rclb
repz
gs
stos
dec
inc
testb
or
mov
fnstcw
push
cmp
xchg
mov
mov
and
xorl
mov
jnp
jnp
out
pop
inc
lods
or
pop
cs
pop
pusha
push
mov
mov
testl
ficompl
shlb
shl
jo
push
test
mov
push
sub
push
adc
mov
mov
xchg
cmp
and
jns
push
fidivl
insb
popa
lret
lcall
mov
cs
scas
rorb
mov
fcomi
mov
popf
aas
push
cmpsl
insl
or
fs
adc
loopne
aas
in
movb
cmp
jbe
or
jne
push
cmp
inc
dec
in
push
jnp
pop
dec
out
mov
sbb
ljmp
lods
mov
addb
jbe
jmp
cmp
jl
add
test
test
setb
jbe
sbb
ja
lea
jmp
add
and
mov
fmulp
mov
in
fsubs
stos
xor
sbb
ljmp
jl
cmp
jo
xor
push
xorb
insl
addb
and
aad
add
dec
add
leave
js
inc
pop
test
loopne
out
inc
jecxz
dec
adc
das
mov
in
push
mov
add
popa
xchg
mov
sub
inc
sub
and
scas
enter
add
mov
test
je
inc
fwait
imul
test
out
inc
sbb
rclb
mov
fwait
nop
fwait
push
push
test
test
fdivl
push
sbb
inc
cwtl
test
add
jle
add
fadds
xor
lock
adc
dec
jae
and
adc
mov
sbb
imul
jae
andl
leave
ret
mov
add
or
inc
das
imul
sub
daa
add
data16
xor
aas
aad
xchg
or
push
cmp
sbb
cmp
into
pusha
dec
jle
xor
jnp
sbb
pop
xor
or
cmpl
and
jmp
jbe
mov
push
jae
outsb
hlt
mov
xor
push
call
sub
cld
jge
lods
and
push
leave
sbb
or
mov
jne
push
mov
addr16
filds
jecxz
or
inc
adc
add
jmp
xor
add
xchg
xchg
ljmp
xchg
xor
ja
inc
cmp
jae
cmp
je
mov
shlb
xor
cmp
pop
pusha
and
pusha
test
add
pushf
or
and
aam
sbb
jmp
cmpb
push
fcmovnu
rol
testb
add
rcrb
or
pusha
mov
pop
or
add
int3
add
xor
dec
rol
or
je
cmp
gs
cli
and
test
sbb
pop
or
push
pop
lods
mov
jne
add
fisttpl
mov
std
lock
sbb
faddl
jae
pop
inc
shrb
into
rcrb
add
mov
cmpsl
sti
repz
adc
mov
sbb
cmc
pop
and
sub
mov
jmp
pop
mov
add
cltd
addr16
cmpsl
adc
je
jmp
push
mov
mov
jne
mov
fxch
sub
or
sbb
jae
jp
pop
arpl
sub
nop
nop
icebp
scas
out
xor
dec
jo
mov
movsl
fsubl
pop
addl
pop
and
shr
add
jge
dec
mov
call
pop
iret
loop
arpl
test
dec
or
scas
pop
addl
icebp
ret
daa
dec
dec
xchg
repnz
xlat
xchg
addr16
and
test
mov
gs
push
and
mov
out
cmp
xchg
pop
mov
xchg
xchg
ds
inc
shll
inc
pop
mov
push
sub
mov
xchg
out
pop
push
pop
and
lea
jl
sbb
mov
mov
xchg
push
or
cmp
or
mov
inc
mov
push
clc
shll
xor
jbe
in
andl
out
push
aam
add
or
sbb
mov
and
sub
xorb
jle
lock
jo
fisttpll
jg
es
xchg
dec
push
popf
pop
adc
aas
mov
mov
lahf
call
jge
mov
test
cltd
je
pop
in
push
pop
lcall
jle
push
push
cli
and
add
or
inc
cmp
shl
jb
pop
fisttpll
cmp
popf
mov
mov
push
push
sub
arpl
or
jne
cmp
lods
adc
repnz
sub
sbb
sti
jb
mov
mov
out
mov
pop
or
pop
dec
ds
lea
mov
pop
mov
into
xor
test
sbb
add
popf
pushf
outsl
jno
mov
xor
sub
enter
cmp
mov
repnz
sbb
pop
je
dec
adc
js
aaa
jno
jae
lea
ja
push
cld
adc
fidivl
push
ficoms
cmp
out
stc
mov
les
sub
jae
xchg
in
push
xor
xchg
fldcw
mov
lea
mov
pop
push
sub
jle
dec
or
dec
mov
or
lea
pop
out
hlt
leave
jbe
adc
scas
xor
xchg
add
xor
jmp
push
inc
sub
sub
and
dec
shr
adc
mov
push
xchg
movsl
stos
sbb
push
adc
jo
sub
add
mov
dec
pusha
sbb
stos
incb
cmc
and
sahf
mov
push
sbb
rorl
and
fists
mov
je
mov
sbbl
xchg
adc
or
adc
ja
adc
inc
mov
add
das
dec
and
sub
adc
mov
loope
adc
push
xor
xchg
xorl
pop
push
xor
push
pop
lea
cmp
jle
movsl
sub
add
outsl
inc
or
mov
jb
pop
adc
mov
mov
pushf
nop
and
or
fcoms
add
stos
pop
push
add
xor
push
pop
pop
dec
or
ret
xchg
jp
lahf
and
inc
adc
or
pop
sub
outsb
mov
mov
call
lea
dec
or
iret
and
and
inc
cmpl
lret
imul
int
push
or
xor
je
dec
add
and
data16
bound
add
jns
adc
nop
sub
sbb
jmp
push
inc
mov
push
pop
lea
cmp
mov
orl
test
adc
daa
push
push
mov
scas
jbe
out
sbb
jmp
adcb
adc
pop
adc
xor
or
addl
pop
or
push
mov
daa
bnd
mov
mov
mov
cmp
cmpb
ret
push
pusha
loopne
sti
jae
lea
push
sub
sbb
sbb
ret
push
pop
sbb
cli
dec
les
dec
pop
ret
adc
or
punpcklbw
fdiv
andl
fsub
adc
insb
lret
cmp
das
clc
pop
push
fdivl
cmpb
xor
fnstenv
inc
jmp
push
xor
cmp
sub
jg
daa
mov
orb
inc
add
enter
mov
test
sbbl
lcall
fdivs
sub
sub
jmp
push
dec
jp
movsb
sti
sub
mov
out
insb
imulb
call
lcall
dec
in
xor
lea
push
dec
dec
shrb
push
dec
ret
xor
ja
aam
scas
xor
outsl
popa
lea
sbbb
out
test
cld
jns
sbb
cmp
sbb
addr16
adc
xor
mov
xchg
int3
or
cmp
cmp
push
mov
xchg
or
out
jmp
push
sbbb
inc
adc
cmp
cmp
push
xchg
cmpsb
cmp
push
rorb
loopne
shl
insb
and
sbb
loope
in
pushf
movsl
in
cmp
js
add
int
das
or
ror
stos
mov
clc
lret
inc
dec
cmpb
js
test
vmread
scas
lods
adc
pop
mov
cmp
sub
call
inc
or
add
dec
lahf
inc
insl
es
jb
pop
enter
sti
ret
and
and
and
aaa
mov
add
dec
add
std
jno
aas
push
mov
and
mov
mov
lds
adc
mov
das
add
cmp
arpl
addr16
mov
imul
imul
sub
orl
add
pop
in
enter
and
fiadds
jbe
adc
pusha
add
mov
add
push
cmp
rclb
inc
stos
push
rcrl
sub
or
xor
sbbl
cmp
pop
bound
cmp
mov
xchg
jmp
mov
sbb
shl
pop
jbe
add
pusha
sub
and
add
js
rorb
mov
or
rep
fsubs
test
lock
push
push
mov
dec
xchg
std
rolb
rclb
or
jmp
cs
clc
shlb
cmp
add
sbb
ret
dec
pop
lods
jg
xchg
clc
dec
cmpl
iret
sbb
pushl
sbb
or
lahf
push
mov
adc
inc
adcl
ret
daa
and
inc
in
inc
pop
in
lock
sbb
pop
adc
addb
std
mov
adc
loopne
inc
dec
cmp
sub
xchg
inc
push
adc
int3
loopne
xor
test
nop
mov
ds
push
sbb
or
mov
dec
adc
inc
gs
notl
add
mov
adc
repz
sub
test
adc
add
jmp
adc
bound
sbb
js
movl
shlb
jecxz
push
jmp
inc
jbe
sbb
repnz
mov
pop
adc
or
or
push
xchg
cmp
jp
jp
add
pop
xchg
push
inc
test
fs
pop
mov
xchg
mov
gs
adc
cmpl
xchg
lret
mov
pop
cmp
lea
push
adc
push
les
test
ret
inc
mov
push
cmpl
and
sub
ficompl
xorl
xlat
daa
pop
cld
clc
stos
sbb
call
jne
dec
insb
mov
cmpsb
inc
and
adc
out
adc
inc
jae
sbb
lock
lock
mov
and
mov
sbb
call
lock
outsl
dec
fdivs
jae
and
inc
sbb
leave
mov
jbe
inc
cmp
mov
rclb
loopne
fisubs
add
and
add
jmp
scas
add
add
adc
cld
std
sbb
nop
pop
outsb
and
sub
mov
loope
mov
jb
cmpl
mov
push
cmp
xchg
test
push
jp
inc
inc
or
adc
or
fs
call
dec
int
or
or
add
or
xchg
mov
dec
add
sub
and
sarl
xor
or
cmp
data16
pop
or
int
adc
mov
pop
das
mov
sahf
mov
xchg
push
dec
fnsave
xchg
adc
data16
jnp
mov
mov
jo
cwtl
dec
jo
sbb
or
pushf
and
mulb
adc
pop
fwait
ret
cltd
jo
jbe
popf
dec
push
movsl
adc
out
jns
mov
aam
cmp
rorb
out
nop
add
movzwl
test
je
test
sbb
or
pusha
sub
xchg
and
push
mov
js
push
jmp
add
scas
aaa
andb
adc
or
inc
dec
xchg
add
pop
inc
das
jmp
cmp
and
clc
push
push
add
adc
insb
divb
sub
push
xor
mov
pusha
lock
mov
fidivs
adc
shll
xor
sbb
pop
pop
and
sub
or
dec
or
and
lock
mov
jl
pop
jo
pop
and
push
sub
or
aam
xor
mov
inc
and
mov
shl
cwtl
cmp
in
pusha
pop
xor
mov
int
push
shr
pop
jns
and
loop
ret
loop
mov
add
cld
mov
gs
jo
and
push
pop
sbb
pop
sbb
mov
add
fdivs
add
mov
pop
xchg
and
adc
stos
nop
xchg
in
cmpsb
ret
mov
mov
stos
or
loope
jp
mov
out
jno
push
xchg
fs
cs
pop
daa
cltd
not
adc
jne
sbb
ret
rclb
std
fs
cli
xchg
and
jl
sub
sbb
repz
xchg
push
adc
cld
js
pusha
mov
insl
cmp
inc
jb
lock
dec
clc
sbb
xor
test
adc
dec
div
or
jne
dec
add
ret
xchg
cmpsb
xor
loopne
jne
mov
stos
push
mov
push
xor
clc
clc
popa
or
mov
inc
lret
mov
add
aam
xchg
push
push
sti
push
loopne
add
mov
mov
daa
jge
adc
lock
mov
enter
ret
loopne
jp
jp
xchg
test
dec
scas
cmp
adc
mov
test
sahf
and
jl,pt
subl
insl
loopne
addr16
sbb
gs
mov
das
js
lea
subl
mov
aam
sub
int
not
dec
pop
inc
jg
adc
test
pop
jmp
hlt
jg
inc
sub
push
sub
push
or
pop
mov
dec
add
inc
or
mov
into
lods
es
inc
stc
cmp
pop
call
cmc
std
call
ficompl
pusha
subl
fisubrs
push
dec
push
cmp
ds
jne
jecxz
inc
or
pusha
sarb
cld
sub
mov
cmp
pushf
and
dec
pop
clc
sub
test
mov
data16
jmp
into
out
push
loope
cmp
pop
mov
es
inc
lock
jg
idiv
lret
jg
cmp
add
mov
outsl
push
xor
mov
js
jne
inc
daa
icebp
test
add
dec
sub
sub
inc
mov
imul
insb
ror
push
sahf
jb
inc
filds
lea
mov
mov
cmpsb
in
fsubp
push
mov
dec
dec
jns
adc
lret
insl
jmp
shrb
push
adc
adc
shlb
inc
add
popa
sub
jmp
clc
ljmp
add
hlt
js
push
movsb
pusha
rorl
fcoml
dec
in
dec
add
mov
je
and
mov
ljmp
mov
xor
xchg
jl
in
xchg
jo
rcll
loop
jno
jp
adc
push
xchg
ret
js
je
cs
push
push
dec
cmp
jmp
or
mov
std
scas
sbb
xor
dec
jns
push
scas
add
sub
sbb
dec
push
sub
or
adc
xchg
xchg
scas
movsb
xchg
mov
loop
loop
testb
test
sub
push
xor
jb
cmovge
ljmp
pop
cmp
mov
xorl
mov
pushl
sub
lock
mov
jle
xchg
or
pop
push
dec
loop
or
loopne
pop
push
cmp
sbb
xchg
loopne
outsb
mov
outsl
imul
pop
aaa
popa
mov
inc
adc
cmp
imul
push
dec
enter
inc
aaa
dec
xchg
sbb
pop
push
jl
insl
inc
adc
dec
cmp
mov
lret
scas
femms
je
mov
lods
pop
loop
adc
push
mov
adc
stc
or
or
mov
add
outsl
mov
xchg
jne
andb
and
hlt
or
jmp
or
mov
mov
add
adc
or
das
int
data16
or
push
or
jne
mov
cmp
les
adc
push
ljmp
cmc
int3
test
cmp
cmp
or
mov
sbb
sbb
adc
pusha
lret
fsubs
mov
cwtl
xchg
fcoms
gs
insl
repnz
cld
loopne
pop
inc
notb
popa
inc
add
cmp
in
dec
add
mov
rorb
push
dec
pop
pop
clc
mov
jae
movsb
inc
rorb
mov
jne
dec
push
in
xchg
xor
xor
cmp
sub
mov
mov
push
cmp
ret
test
mov
sub
mov
lock
or
mov
orl
sbb
mov
addr16
sbb
lcall
inc
dec
fbstp
aam
pop
mov
jg
xchg
jecxz
mov
jg
cwtl
pop
enter
push
cmp
rcll
inc
inc
ficoml
fmuls
jmp
adc
sub
insl
insl
adc
daa
cmp
or
popf
mov
flds
sub
pop
adc
jnp
xor
pop
loope
inc
adc
mov
aam
sbb
sub
add
pop
xchg
dec
adcb
andl
inc
sbb
fisubl
arpl
jne
push
cmc
xor
jne
sub
cmp
fiaddl
sbb
jne
add
iret
xchg
out
push
je
xor
mov
sbb
dec
insb
jne
inc
jno
and
cmp
scas
std
sti
or
aaa
mov
inc
mov
gs
lret
xor
add
and
add
cmp
je
icebp
sbb
or
jne
imul
fst
mov
imul
fsubs
loopne
or
xchg
cmp
sub
or
jnp
jnp
xchg
mov
cmp
push
notb
imul
jl
mov
rorb
xor
cmpsl
fidivs
js
out
fidivs
pop
sbb
in
aaa
hlt
arpl
cmc
push
push
mov
pop
xor
and
cmpb
jns
lea
out
nop
sbb
fmull
mov
out
cltd
jne
pusha
or
lea
and
sarb
pop
loopne
fisttpll
orb
mov
inc
mov
add
int3
add
call
or
inc
or
add
cmp
add
xchg
sbb
add
mov
push
loopne
sub
push
adc
jb
outsl
add
or
addr16
js
and
inc
sbb
js
mov
mov
jle
add
subb
adc
lcall
cmp
push
pusha
imul
rol
js
mov
xchg
and
movsl
or
call
lods
xchg
cmpsb
cwtl
fidivl
enter
dec
int3
int
add
daa
inc
mov
xor
addr16
scas
sub
and
or
mov
jge
xchg
ret
mov
sub
and
pop
movb
sbb
push
xchg
push
out
pushl
sbb
xchg
jae
cmp
sub
sbb
add
and
and
xor
add
and
pusha
push
cmp
inc
and
push
iret
inc
addb
xor
dec
dec
xchg
push
notb
lods
shll
loopne
cmp
out
xchg
inc
rolb
pop
sbb
inc
adc
mov
cmp
dec
cmp
jnp
sbb
pop
adc
pop
inc
add
ja
mov
mov
fwait
repnz
rolb
add
shlb
and
or
les
sbb
rorl
inc
dec
cmp
mov
dec
data16
ds
ret
dec
js
sbb
mov
sbbb
pop
dec
mov
jl
jbe
xchg
sbb
js
test
in
push
mov
dec
and
in
mov
inc
sub
clc
dec
or
and
test
and
xchg
add
add
sbb
pushf
ss
and
addl
xor
aaa
and
das
xorl
cmp
inc
cmpsb
pop
jne
orl
fdivrl
jne
imul
sub
inc
pop
dec
test
pop
jmp
and
xchg
mov
fidivrs
adc
das
call
push
stc
fldl
sar
dec
jb
sbb
lods
jo
cmp
sub
sub
push
arpl
inc
xchg
xchg
inc
outsb
dec
les
mov
add
mov
stc
push
jne
loopne
mov
mov
sub
mov
clc
dec
jne
cmp
inc
icebp
data16
cmp
cmpsl
lods
xchg
jne
xor
add
fwait
jl
sub
lahf
jo
cld
ja
xor
dec
mov
mov
xor
xchg
cli
sahf
loopne
movsb
into
js
out
and
addr16
lock
or
jmp
sbb
push
cwtl
jl
adc
sbb
into
cmp
lods
ds
jnp
push
inc
cmp
les
push
popf
lock
jbe
push
mov
push
mov
jo
cli
out
fidivrs
pushf
push
adc
daa
add
or
mov
sbb
jae
sub
pop
cmovo
adc
push
bound
inc
or
fists
roll
jae
sar
insl
adc
mov
mov
adc
sbb
out
push
rorl
test
sub
enter
mov
and
or
push
mov
mov
lock
sbb
lea
out
rol
stos
push
fcompl
pushl
scas
xlat
sti
in
and
mov
adc
add
int3
lock
loopne
dec
inc
inc
push
add
in
inc
lock
and
or
push
add
mov
or
xorl
and
pusha
insb
insb
test
xor
push
je
inc
out
movsb
xor
jno
sbb
lea
pusha
cmp
testl
pushf
cmp
cli
je
popf
xor
js
jne
lds
scas
sbb
lods
mov
xor
sahf
fwait
xchg
mov
hlt
sti
push
sub
push
mov
fwait
jmp
orb
push
jne
or
inc
xchg
roll
andb
dec
adc
jnp
lock
enter
dec
sub
cmp
adc
push
push
push
pop
loope
ja
in
adc
sbb
out
and
loopne
pop
test
movsl
movswl
hlt
jmp
pop
mov
ret
imul
jecxz
shrb
xor
sub
sub
xor
cmpsb
dec
aad
cmp
xor
mov
inc
cmp
aas
and
pop
xor
pop
push
push
test
or
mov
and
dec
roll
rclb
pop
pop
mov
sbb
jp
test
rcll
cmp
push
adcb
out
inc
test
push
sbb
jns
in
insb
push
mov
sub
test
popa
pop
rol
addr16
jg
int
test
cs
add
mov
adc
push
aas
jne
cmp
shrl
push
xor
xchg
mov
outsb
cmp
idivb
out
mov
xchg
mov
daa
mov
int
fidivrs
jbe
sub
mov
cmp
sbb
test
adc
push
and
add
loopne
dec
push
lea
or
adc
out
adc
pop
sbb
adc
dec
push
or
out
add
xor
lock
jl
rorb
fcoms
add
les
adc
pop
popa
add
test
stos
push
or
out
push
test
and
push
enter
pop
arpl
fcoms
xor
and
test
jo
sbb
or
or
lea
or
test
call
jo
add
ds
pusha
pop
add
out
cs
testl
adc
pushw
cmp
adc
ss
dec
sub
sti
pop
jg
add
stc
push
ret
jge
int3
mov
movsl
loopne
sbb
pop
jp
mov
jo
pop
arpl
lret
sbb
sbb
shrd
adc
or
mov
test
push
or
dec
out
fdivs
hlt
jmp
or
adc
push
cmpsl
xchg
xchg
mov
push
mov
jo
arpl
adc
and
out
push
adc
xor
push
xor
adc
mov
daa
and
push
lea
sbb
and
pusha
cmp
mov
jecxz
push
xchg
dec
inc
mov
sbb
push
push
bound
push
adc
push
or
ja
scas
bound
inc
pop
mov
mov
cmpl
pop
movb
mov
fmuls
sub
push
sar
add
mov
orl
mul
je
push
testb
mov
and
mov
loopne
idivb
pop
jae
sarb
lcall
out
inc
xor
dec
pusha
cwtl
add
pop
mov
movsl
add
or
jl
sbb
and
push
pop
testl
dec
jmp
daa
addb
add
jl
add
cmp
mov
xor
mov
push
or
dec
pusha
fcmovnb
jmp
xor
sbb
push
imul
aaa
cmp
and
flds
pop
jl
sbb
fdivp
fidivs
push
stos
hlt
sub
mov
movsl
jns
jne
xor
lcall
insl
movsb
jns
inc
and
repz
push
divl
push
and
movsl
dec
in
adc
push
shl
sbb
cmp
rclb
push
std
pop
scas
push
or
and
test
push
fcoml
mov
push
push
or
out
add
js
xchg
jnp
je
and
or
inc
out
mov
or
test
aas
adc
push
test
sub
push
imul
ret
or
sub
popf
inc
jg
adc
mov
int
sar
lea
push
adc
push
popa
hlt
jo
or
in
cmp
push
ljmp
or
mull
pop
loope
xchg
add
jp
push
add
push
cs
or
fcmove
int
pop
push
and
sbb
adc
shlb
addb
adcb
test
cmp
jge
cmp
push
imul
test
adc
test
subb
aaa
pop
dec
xor
call
or
rolb
sahf
push
mov
and
adc
xorb
pop
sub
xlat
mulb
mov
xor
add
daa
push
push
or
pop
jo
push
jbe
pop
or
je
lods
push
adc
and
or
pop
sahf
inc
sbb
xor
pop
ds
add
sbb
and
popa
xchg
jnp
xor
ret
sub
lcall
push
inc
xor
sub
dec
xor
add
add
pop
ficoml
loope
xor
movq
loopne
fwait
xchg
cmp
loope
lods
add
sahf
xor
sub
js
pop
loop
ret
movsb
push
push
push
in
xor
insb
xor
xor
push
pushf
push
test
iret
in
shrb
dec
fscale
incl
ljmp
jecxz
or
push
dec
xchg
push
les
lds
pop
sub
sub
inc
push
inc
in
jmp
xchg
or
add
bound
push
arpl
lods
stc
mov
cmc
js
aas
fdivs
jmp
pushl
add
push
pop
mov
lds
clc
lea
push
subb
ret
cmpsl
mov
inc
in
in
xor
xor
or
or
xchg
dec
into
data16
mov
adc
sub
adc
mov
mov
jl
andl
mov
mov
js
jb
repnz
push
add
cltd
movb
inc
ficompl
or
pop
cmp
fs
dec
xor
pop
test
push
in
js
ud2
adc
scas
inc
xor
add
push
fcoml
xor
movsl
fildll
test
and
mov
or
or
lods
mov
adc
xchg
add
dec
xlat
push
jmp
cmp
mov
push
lds
pop
add
inc
and
add
xchg
cmpsl
pushf
push
jl
xor
je
push
pop
ja
out
sub
sub
xor
addb
pop
jmp
and
sbb
jno
mov
das
pop
bound
or
or
sub
sbb
add
rcrb
sub
push
or
in
pop
pop
sub
xor
xor
jo
push
nop
push
pop
lock
sub
sub
je
and
fildl
jle
aam
add
cmp
cmp
xor
xor
add
lock
pop
testb
je
int
fcoms
mov
sub
fdivr
dec
or
dec
jl
loope
xor
push
adc
xlat
vunpckhps
jl
inc
loope
or
pushf
jbe
int3
add
push
fisttps
add
push
leave
pop
sub
or
adc
xchg
cmc
pop
gs
or
lahf
out
or
mov
rorb
mov
inc
and
pop
push
and
out
leave
adc
pop
inc
push
pop
push
jb
mov
inc
cs
frstor
add
rorb
imul
cli
jo
test
sub
mov
js
xor
pop
mov
and
and
or
or
xchg
push
xlat
inc
decb
add
push
test
dec
add
scas
pop
bound
je
fmull
cmovle
jb
pop
ds
mov
mov
out
mov
test
mov
xchg
or
mov
mov
mov
mov
xor
nop
ljmp
cmp
mov
add
mov
daa
push
mov
or
mov
es
xlat
mov
fwait
mov
fimuls
push
push
inc
push
aad
aas
pop
cwtl
imul
idivl
push
add
push
adc
lds
push
in
xchg
sub
add
cmp
add
cli
push
push
ret
push
xchg
mov
cmp
inc
or
mov
movsb
scas
inc
inc
imul
out
rcll
stos
mov
or
movsl
add
xchg
and
xor
mov
loop
or
sbb
add
testb
xrelease
je
adc
fstpt
aas
or
add
pusha
ljmp
sbb
adc
sbbl
int3
data16
cmp
add
out
mov
dec
andl
pop
cwtl
push
stos
loope
les
out
popl
adc
mov
lcall
or
sub
lar
faddl
cli
or
test
sub
sbb
cmpsb
sbb
inc
mov
hlt
jle
aaa
xor
push
or
jae
push
popa
hlt
xor
or
xor
lods
fcomp
mov
shl
orl
lahf
ficompl
cwtl
aad
in
cmp
dec
sbb
andl
nop
dec
mov
push
shr
das
je
xor
add
push
hlt
hlt
fisubs
test
mov
mov
sbb
adc
push
dec
mov
aad
out
incb
adc
add
xchg
mov
movb
fs
shlb
insb
cwtl
adc
loope
add
push
pushf
xchg
jp
loope
adc
push
pusha
fs
mov
push
mov
push
push
mov
jno
xor
test
and
aas
pop
xchg
and
xor
mov
push
jae
jae
ja
cli
push
lea
test
dec
add
push
rcrb
sbb
pop
adc
in
dec
idiv
inc
insb
shr
inc
add
out
push
lock
adc
cmp
sbb
add
push
inc
sbb
or
add
stos
push
pusha
insb
std
jg
insl
dec
inc
pusha
repnz
adc
pop
mov
sbb
xor
inc
adc
pop
ss
xor
jge
sbb
fsubs
mov
jo
cmpsb
sbb
jne
sbb
mov
arpl
pop
adc
js
mov
inc
lock
inc
mov
jns
int3
rcl
add
add
mov
int
dec
pop
fucom
add
xor
hlt
push
mov
xor
jns
js
push
orl
mov
dec
js
push
sbb
arpl
inc
and
mov
jge
shrb
inc
xchg
add
outsl
inc
imul
adc
loope
out
mov
pop
adc
or
cmc
arpl
subb
inc
test
jno
adc
xchg
cli
push
popa
jo
xor
cmpb
pop
psrld
add
inc
frstor
movb
mov
lds
adc
inc
scas
add
add
pop
pop
push
movsb
js
arpl
jg
add
sbb
cwtl
adc
push
mov
je
jl
jmp
push
not
aam
jne
loopne
pop
mov
push
lea
cmp
das
adc
lock
push
cmp
movb
orl
cmp
add
push
int
sub
fs
iret
or
jne
repz
cmp
push
repz
jo
sbb
cltd
nop
test
cmp
hlt
sti
dec
sbb
and
cmpsb
cmp
push
xchg
or
mov
or
inc
add
aam
add
add
mov
adc
shrl
mov
mov
mov
cmp
flds
insb
insb
mov
sub
mov
notb
sbb
loope
mov
lea
xor
jp
out
push
stc
test
outsl
loope
sbb
push
adc
mov
or
sbb
pop
sarl
mov
xor
xor
mov
rol
arpl
incl
mov
fidivs
pusha
push
cmp
push
xchg
fs
xor
mov
les
stos
mov
jnp
mov
and
fs
or
mov
pop
testl
push
je
cmc
sahf
addl
enter
mov
ja
hlt
add
inc
cli
and
rcr
pop
leave
pop
xchg
flds
xor
roll
out
mov
push
loop
push
nop
mov
sub
adc
cmp
push
add
loopne
call
sbb
out
pop
pop
rcrb
fnsave
add
xchg
lock
pop
push
add
testb
pxor
jle
xor
or
mov
addr16
daa
imul
rcll
and
and
test
or
jno
xchg
andl
sbb
push
jae
push
push
fsubrl
imul
sbb
sbbl
cltd
in
lods
jmp
pop
pop
push
push
je
cmp
push
or
dec
int
mulb
push
xor
mov
push
clc
test
xchg
push
js
xchg
xor
dec
adc
mov
push
mov
imul
testl
xorl
lret
test
sub
or
push
and
sub
jle
ret
popa
ja
or
adc
out
push
mov
cmp
add
sub
push
lret
mov
repnz
and
aad
adc
jo
adcl
cmp
push
stos
sti
xorl
test
dec
jno
sbb
shl
fnsave
inc
rclb
das
in
es
add
push
push
cmp
inc
fwait
cmpsl
sub
jbe
cmp
ljmp
push
or
lea
loop
cmp
dec
sbb
or
and
add
dec
out
inc
adc
adc
cld
push
add
mov
xor
add
shl
sti
cmpsl
lock
xchg
adc
adc
mov
je
bound
or
sub
es
pop
out
push
xchg
mov
nop
push
jbe
xor
cmpsb
jne
ret
aas
xor
dec
popl
sub
sub
sub
sub
adc
das
adc
je
stos
jns
cmp
loope
jge
push
or
add
cli
js
jne
sahf
add
ret
push
jnp
ds
xor
cmp
adc
lcall
push
cmp
mov
push
inc
adc
add
ret
int3
ret
add
mov
dec
out
push
jmp
call
jmp
xor
sahf
or
mov
das
add
mov
cmpsb
xchg
rolb
or
add
inc
push
adc
push
push
pop
mulb
loope
push
push
sbb
adc
xchg
pushf
insb
or
inc
popa
fiadds
push
cli
and
dec
push
add
pop
repnz
inc
pop
mov
inc
inc
push
roll
and
imul
dec
je
sub
outsb
add
or
xlat
push
in
inc
fidivrs
bound
stos
xor
scas
mov
daa
mov
ret
push
adc
inc
adcb
push
dec
add
leave
xchg
ds
in
out
xchg
insl
inc
cmp
dec
fsubr
or
sub
xor
data16
rolb
and
push
pop
and
inc
test
pushf
adc
pop
ljmp
push
or
and
in
push
rcrl
inc
inc
lds
pop
fsub
ret
mov
stos
shl
adc
cmp
mov
dec
or
ret
rclb
jg
repz
push
loope
enter
xor
mov
xchg
jle
cmp
push
int3
push
and
mov
jge
xor
or
call
add
aaa
xchg
test
add
pusha
test
or
mov
pusha
daa
mov
addr16
int
dec
lcall
push
movsb
imul
les
add
xchg
xchg
cmpl
gs
push
je
and
enter
cmp
xor
pop
add
mov
pop
cmp
inc
inc
sahf
fcoms
in
xchg
test
adc
jo
ds
in
add
insb
jge
mov
les
ficompl
cmp
js
or
push
lods
rcl
fs
shrd
fcoml
fsubl
dec
xchg
in
push
xor
mov
cmp
xor
out
ret
pop
cmc
fmuls
les
jb
xor
push
hlt
or
bound
loopne
xor
insb
mov
movl
into
jl
mov
cmp
mov
xchg
aas
mov
dec
jo
stos
dec
aam
push
orb
jp
es
fisubrs
jo
in
xchg
rcrl
sub
add
outsb
lcall
mov
and
adc
inc
cli
lods
or
sbb
pop
jne
push
movsb
mov
jnp
sahf
cmpsl
bound
adc
adc
push
imul
or
or
ds
sub
xor
xor
inc
xchg
adc
sahf
movsb
xor
push
pop
adc
je
mov
mov
or
mov
xor
push
mov
lcall
jmp
or
jne
mov
movsb
mov
out
xchg
xor
ja
ret
jge
in
call
lahf
ds
divb
hlt
or
lret
icebp
test
pop
stos
pop
or
sub
pop
mov
add
xchg
lock
sbb
push
add
sub
outsb
test
outsl
cmpsl
dec
push
and
dec
je
movsl
fcompl
add
dec
imul
or
lods
test
ret
mov
int
loopne
pop
mov
or
xor
data16
mov
lea
xchg
movsl
pop
inc
pop
sbb
push
arpl
sub
loop
jns
sbb
pop
ss
cmp
lock
addl
or
xchg
xchg
xchg
inc
inc
inc
xorb
jne
mov
cmp
ds
loope
scas
cs
mov
icebp
sub
pop
xchg
or
cmp
mov
inc
jae
in
inc
jo
int3
cmpsl
mov
aam
or
mov
or
jp
adc
pop
push
inc
leave
cmpsb
repnz
pop
rcl
add
outsb
popa
fdivrl
adc
sahf
cwtl
in
add
push
push
xchg
push
sub
sub
int
mov
imulb
repz
inc
xor
movzwl
sub
or
divps
xor
inc
aaa
in
mov
and
ds
jae
jnp
pusha
les
mov
or
or
loop
call
lock
mov
enter
sbb
icebp
out
scas
add
mov
fcompl
cmpb
and
cmp
xor
inc
or
es
mov
push
or
pop
adc
mov
popa
inc
or
test
adc
add
adc
psraw
mov
add
add
jp
dec
in
xchg
lods
mov
mov
dec
mov
pop
xchg
mov
popf
inc
jne
cmpsl
insb
add
push
add
xchg
scas
and
mov
iret
inc
out
add
push
sub
test
enter
sti
mov
andl
cmp
adc
xor
sub
or
mov
test
clc
outsl
jnp
xchg
or
sub
test
jg
mov
adc
or
pop
pop
sbb
cmp
jne
ficoms
push
cmpsb
adc
sub
mov
aas
xchg
cli
es
push
jg
cmovnp
mov
or
cmp
cmp
push
js
je
pop
push
xchg
pop
cmpb
lock
mov
out
cmp
or
jl
sbb
clc
sub
call
jge
push
sbb
jmp
or
pop
pushf
std
and
adc
les
mov
dec
adc
and
in
out
sub
test
int
adc
pop
cmp
pop
jecxz
jg
movsl
push
add
insl
arpl
jl
jb
add
cmpb
in
xor
ror
adc
pop
sub
pusha
popa
or
das
insb
and
divb
loope
dec
fdivs
sub
into
jle
jno
push
in
fs
pop
arpl
jbe
pop
add
insl
or
sti
mov
push
mov
push
adc
add
sbb
dec
sbb
in
add
nop
push
sub
mov
xor
pusha
add
push
das
jnp
push
enter
test
or
sub
ja
ret
pop
sub
inc
inc
pop
mov
sbb
push
in
dec
lods
cmc
mov
dec
pusha
or
sub
lea
sbb
imul
int
lock
fnsave
in
cmp
shlb
lods
repz
lock
dec
and
loope
popf
dec
cmpsb
lock
mov
pop
push
push
adc
mov
fcomp
dec
in
out
or
or
xor
add
sarb
jl
push
fcompl
adc
add
iret
outsl
dec
or
inc
lock
or
lods
add
sbb
popf
xchg
mov
cmp
je
loopne
push
mov
insb
in
mov
popf
mov
outsb
in
dec
mov
shrb
dec
test
fdivrp
and
shll
jmp
dec
fwait
push
inc
stos
movsb
lahf
call
jmp
je
inc
inc
or
dec
rorb
add
enter
lahf
push
insb
add
sbb
fisubs
cld
mov
mov
xor
xlat
sbb
adcb
sbb
or
into
cmp
leave
mov
add
lds
sub
cmp
dec
and
cmc
xor
mov
push
sub
lods
aas
pop
mov
movb
cld
adc
mov
sbb
mov
inc
aaa
xchg
adc
jo
cmc
ja
popa
pop
outsb
pop
adc
lea
jmp
js
add
nop
and
fdivrl
stos
cltd
push
cs
addl
jae
data16
pop
xchg
push
xchg
and
sub
adc
xorb
jp
adc
scas
sbb
lret
adc
imul
cmp
and
jl
cld
push
and
nop
data16
jne
sub
fwait
lret
xchg
and
imul
shrb
and
lea
xlat
sbb
xchg
lcall
push
xchg
sub
dec
push
adc
mov
jae
mov
mov
cmp
imul
inc
mov
rcrl
inc
fs
mov
jne
ss
popa
inc
out
imul
leave
fs
dec
es
add
sbb
push
dec
and
jmp
push
cwtl
outsl
push
mov
or
push
insb
add
bound
out
pop
jp
pop
push
pop
xchg
jns
aaa
leave
das
popa
iret
push
or
inc
xor
pushf
out
icebp
jg
adc
push
push
inc
ret
dec
sub
jne
push
lea
adc
and
inc
daa
adc
in
mov
leave
xchg
and
push
xor
inc
sbb
pop
adc
and
cs
aad
cmc
push
jg
js
sbb
pop
inc
sub
dec
insl
imul
sub
mov
pushf
addr16
movsl
movsl
push
sbb
mov
movsl
bound
sbb
insl
or
ljmp
adc
jg
pop
xchg
inc
test
in
lock
outsl
or
inc
or
dec
fsubrl
jo
jle
jb
add
lds
int
je
cltd
fadd
and
into
mov
in
add
push
in
jne
cs
push
xchg
call
adc
frstor
dec
pop
repz
adc
testb
outsb
mov
sbb
mov
sub
lret
inc
jnp
aaa
jge
sbb
pop
aas
loopne
loopne
loope
jns
add
int3
sbbl
in
and
and
push
stos
inc
sahf
cmp
add
cmc
add
pop
xor
loope
pop
mov
mov
or
push
test
or
nop
push
mov
xor
popf
mov
or
or
jne
push
in
int3
adc
jne
sahf
add
xor
test
xlat
daa
add
or
loopne
and
lahf
dec
bound
imul
mov
daa
dec
call
add
or
cmp
adc
shrl
fiaddl
dec
rorl
les
mov
roll
insl
lock
dec
xchg
cli
scas
loopne
add
xchg
shrl
push
mov
lds
loopne
pop
sbbl
add
lds
sub
aaa
cmp
push
push
aaa
mov
cltd
mov
mov
and
cmp
jae
adc
sub
mov
cmp
popa
or
jne
sbb
pop
push
into
pop
jl
test
orl
sub
mov
mov
or
push
add
cmp
nop
xor
push
xor
add
call
or
or
int3
and
jmp
into
sar
and
ja
in
jns
push
dec
xchg
jbe
dec
and
push
and
sub
jmp
pop
daa
sbb
and
push
fsubr
cmpb
or
bound
push
mov
push
xchg
mov
jno
rcl
call
jne
xchg
cmp
lgs
enter
sbb
push
shlb
pop
push
push
loopne
pusha
mov
fchs
int
xchg
inc
mov
push
clc
sub
aam
sbb
jge
adc
pusha
and
push
inc
and
sbb
in
and
mov
push
shl
push
mov
rorb
arpl
jp
lds
sub
and
ljmp
ret
inc
mov
xchg
mov
pop
pop
or
adc
mov
cmp
sti
popa
pop
push
sub
cmpsb
xor
nop
outsl
lock
lock
xor
add
pusha
fs
jecxz
push
mov
repz
push
in
adc
xor
add
shll
push
leave
push
xor
shll
push
out
mov
nop
add
mov
or
cmp
jno
push
adc
les
inc
xor
push
leave
lock
or
dec
dec
pop
sub
sbb
jne
repnz
cld
pop
movsb
mov
add
sbb
and
adc
loopne
popl
pushw
push
dec
stc
add
test
add
xchg
mov
cmpsl
call
add
mov
cmp
push
cmp
sub
pop
pop
lods
leave
push
sbb
fwait
ret
sbb
int3
js
test
add
test
xchg
rolb
lea
or
lahf
popa
cltd
dec
sub
push
lea
cmpb
stos
xchg
leave
pusha
adc
and
inc
xchg
andl
push
and
lock
addb
repnz
jb
inc
fldenv
pop
aaa
aas
ja
push
pop
rcrb
dec
inc
lret
or
push
dec
shrl
test
dec
adc
add
xor
add
fmuls
sbb
mov
mov
jge
mov
lds
inc
stos
cmpsb
push
inc
xchg
mov
imul
jb
ret
cmp
icebp
outsl
inc
cmp
hlt
push
sarb
andl
test
pop
inc
shlb
xor
les
jnp
scas
xor
inc
push
call
mov
mov
jnp
inc
cld
je
dec
aaa
fwait
push
mov
sbb
rorb
mov
lret
cmp
outsl
dec
sbb
or
cmp
inc
mov
repnz
insb
xchg
lahf
push
mov
jbe
push
xor
mov
ja
clc
hlt
sub
push
xor
dec
mov
mov
sub
lret
and
add
inc
fxch
mov
jb
inc
loope
nop
pusha
xchg
sbb
nop
cmpsb
dec
push
ds
inc
and
nop
or
push
enter
push
repz
rorb
push
sub
mov
xchg
mov
mov
loopne
sub
pop
mov
adc
leave
ss
int
inc
or
sub
out
adc
jns
add
add
or
mov
xsha1
cmpsb
or
es
movsl
sahf
mov
shlb
pop
mov
pushf
mov
xchg
push
add
stos
movsb
sbb
mov
or
inc
lret
adc
fisttps
out
inc
and
or
push
xchg
add
inc
mov
mov
scas
out
ficoms
bound
or
lea
test
push
mov
xor
jp
rcl
pushf
mov
adc
inc
nop
push
pop
mov
or
add
or
dec
dec
faddl
jbe
cwtl
inc
cmp
pushf
or
push
dec
cmp
adc
les
lret
and
rcll
sbbb
mov
mov
fmuls
xchg
xchg
xchg
sbb
gs
bound
sbb
sbb
jns
or
jo
jno
dec
ret
dec
repnz
and
inc
loopne
dec
out
push
cmpsl
or
push
or
pop
xor
mov
arpl
clc
pop
ret
push
shrb
je
and
decb
cmp
pusha
adcb
push
push
sbb
push
inc
or
xchg
andps
add
jg
xchg
or
pop
lock
cmpl
repnz
sbb
sbb
mov
sub
add
and
roll
xchg
in
pop
mov
rcll
cmp
mov
pop
jecxz
std
ljmp
cld
fdivl
jg
push
call
clc
pop
sbb
or
pop
add
sahf
inc
and
jae
or
jbe
sub
lea
js
push
push
xor
push
sub
ljmp
inc
bound
andl
arpl
dec
xor
inc
stos
addr16
sbb
mov
sbb
cmp
dec
mov
jo
test
or
pop
dec
push
sub
sub
repnz
inc
xor
nop
xor
cltd
inc
popa
push
enter
add
push
inc
lods
popa
mov
xor
xchg
xchg
mov
cltd
jg
cmp
push
lock
mov
sub
mov
aam
pop
outsl
loopne
pop
mov
or
or
icebp
jg
mov
add
jmp
mov
cmp
call
popf
into
mov
out
lock
push
cwtl
push
es
xor
push
je
cli
rol
mov
popaw
and
push
or
add
xor
pop
pop
jbe
adc
or
xor
das
das
sub
adc
cmp
inc
dec
inc
pusha
fidivrl
das
das
dec
test
insl
addb
xor
push
movl
movl
pop
dec
vcvtsd2ss
inc
jae
mov
jno
data16
inc
decl
add
xor
jne
in
adc
xlat
je
push
bound
imul
cmp
mov
push
mov
loopne
pop
dec
mov
jbe
mov
add
mov
xlat
test
sub
inc
cwtl
pop
fstpt
or
lret
sub
push
roll
lcall
inc
jb
inc
adc
dec
cmpb
test
sbb
add
mov
jb
sbb
mov
test
and
gs
lret
ror
arpl
imul
jb
xchg
xchg
bound
jecxz
test
dec
xchg
and
lods
pop
xchg
cmp
jl
cmp
sahf
push
dec
or
mov
mov
xchg
mov
cs
and
cmp
idivb
dec
sub
mov
dec
adc
or
dec
sahf
and
lret
fisttpll
push
shlb
xor
je
loop
inc
jbe
cmp
dec
inc
test
or
inc
aam
mov
push
sti
rep
mov
icebp
dec
push
inc
xor
or
add
jbe
sbb
jmp
sub
jae
dec
inc
mov
add
inc
sbb
shlb
scas
andl
das
xchg
icebp
mov
pop
push
push
inc
push
clc
popf
fsts
cmpsb
xlat
push
and
push
mov
mov
adc
dec
adc
lahf
adc
adcl
mov
std
adc
adc
mov
adc
aas
or
cmpl
popa
mov
xor
xor
jnp
data16
or
push
xor
int
sub
sbb
outsb
sub
sbb
sbb
xchg
enter
into
jmp
or
mov
mov
fildl
cmp
cwtl
das
pop
movb
add
jnp
pop
inc
jmp
push
push
push
jmp
xchg
xor
or
dec
add
and
xor
push
mov
cwtl
add
push
push
int
cmp
lock
icebp
pop
lret
mov
push
sbb
adc
push
inc
test
lahf
les
mov
jno
lcall
insb
int
push
xlat
push
push
push
dec
mov
sub
dec
mov
mov
xlat
mov
adc
dec
les
lods
cmp
ret
pop
mov
movb
cmp
roll
pop
lock
xor
cmp
outsb
loopne
pushf
dec
fsin
mov
sti
bound
adc
push
loope
sbb
jno
loop
fcomip
add
cmp
or
dec
ss
mov
in
rcr
dec
ror
sub
jnp
jl
jg
arpl
dec
pushf
add
loop
sbb
clc
adc
inc
fadds
add
push
movsb
add
call
jb
inc
xchg
jle
sbb
repnz
jne
mov
rclb
dec
and
jle
jnp
test
or
dec
xchg
and
push
cmpsb
adc
xlat
test
push
lock
clc
test
cmp
mov
testl
adc
ss
add
je
sbb
mov
mov
mov
imul
add
jp
pop
add
or
add
rcrb
cmp
mov
mov
and
bound
ret
sub
jecxz
pusha
xor
in
jbe
sbb
inc
pop
xchg
jb
jo
mov
imul
cmp
sbb
ret
sub
add
or
add
or
lea
icebp
xchg
je
mov
rorl
sahf
call
fbstp
int3
add
xchg
addl
cmp
dec
ret
and
shr
cmp
inc
push
mov
push
hlt
adc
fistps
jl
sbbb
and
xchg
notb
xor
push
push
imul
or
xor
jl
jno
push
and
inc
jmp
push
mov
mov
jle
scas
add
or
jbe
pop
dec
xor
pop
inc
mov
jne
pushf
sbb
rcll
push
xor
adc
adc
dec
dec
gs
add
xor
or
adc
scas
push
or
inc
jmp
dec
cmp
mov
stc
and
loope
in
fsubrs
incb
mov
jp
cmp
mov
cmp
jb
jae
mov
lret
jl
pusha
iret
jmp
es
hlt
jae
pop
inc
adcb
add
pop
mov
ret
pop
mov
pop
aam
add
repz
push
mov
leave
shrb
mov
call
clc
sub
push
enter
rep
shl
inc
add
nop
inc
sbb
lcall
lods
jmp
mov
stos
ret
loopne
and
mov
nop
or
mov
jb
cmp
cmp
nop
dec
es
sbbb
jl
push
sbb
insb
and
and
jnp
push
daa
or
cmp
dec
jae
or
in
nop
inc
add
mov
sbb
adc
sub
mov
and
jae
enter
adc
or
fisttpl
fwait
lahf
jae
arpl
or
sbb
cmp
mov
fsubrs
jae
jmp
pop
push
cltd
or
inc
cmp
pop
jae
and
clc
jae
inc
xorb
popa
cmp
mov
and
jne
mov
inc
jbe
insb
addr16
and
or
arpl
or
fwait
add
shlb
stos
and
push
push
pop
sub
jmp
jmp
or
pushf
and
test
subb
dec
ljmp
addr16
push
enter
and
push
jns
add
and
imul
add
enter
and
enter
sub
jb
add
cwtl
enter
sub
sub
insb
jae,pn
xor
or
mov
add
fdivrl
xor
xchg
stos
sub
push
pop
xor
test
or
dec
sti
xor
or
xor
mov
mov
mov
cmc
call
lea
leave
stc
xor
mov
fidivrl
ret
xor
std
pusha
adc
mov
or
mov
mov
or
sbb
test
sbb
mov
andb
mov
adc
mov
pop
mov
inc
movb
adc
mov
clc
shrb
sarb
dec
jne
or
mov
out
pop
cli
stos
add
cs
test
xor
add
ja
or
or
stos
fstp
push
daa
rcrb
add
or
mov
pop
mov
mov
xchg
addl
lcall
fimuls
es
sub
sarb
out
shr
aam
sbb
xchg
mov
mov
ret
jge
ret
test
xor
mov
mov
popfw
ret
mov
inc
aas
sbb
push
or
cltd
ret
push
orb
sar
xor
andl
adc
test
mov
adc
in
push
mov
pop
mov
and
es
add
fcmovu
push
add
in
push
dec
pop
lock
or
rcrb
sbb
sbb
fsubl
call
lock
out
outsl
loope
lods
jg
in
adc
dec
add
and
fs
daa
push
xor
lea
xchg
popa
addl
sahf
mov
js
jno
push
push
mov
sub
js
add
xor
icebp
ficompl
scas
fcompl
and
icebp
into
pop
mov
std
cmp
or
sbb
or
lock
push
adc
js
jl
test
cmp
int
jbe
or
jbe
mov
jmp
inc
adcb
fnstenv
addl
movsb
inc
popf
mov
inc
push
cs
fnstcw
dec
xor
jb
adc
pop
or
add
mov
push
or
mov
int
and
jno
inc
mov
xchg
xor
push
or
je
popf
xchg
mov
sbb
pop
iret
xchg
nop
mov
add
and
inc
fcomps
xchg
gs
arpl
pop
ret
movsb
jns
movsl
inc
cmpl
sbb
pop
add
rorb
movsl
ret
pop
xor
and
adc
scas
mov
mov
sbb
or
push
clc
lock
inc
pop
inc
mov
je
xor
inc
xchg
push
and
sub
xlat
int
fildl
pop
push
fwait
inc
pop
out
loope
ficoml
pop
fmull
pop
pusha
jne
pop
xor
aam
jns
and
mov
aam
mov
sarb
imul
xor
es
or
mov
faddl
inc
adc
les
push
popa
xor
cmp
aam
add
and
adc
pop
fidivl
sbb
push
jmp
jne
push
in
sar
push
sbb
xchg
ds
jmp
xchg
pop
xor
push
cmp
dec
push
lret
dec
or
les
imul
es
xchg
ret
mov
sar
add
fcoms
test
movsl
cmpsl
adc
les
in
clc
jmp
mov
xchg
mov
mov
insb
sub
in
inc
adc
add
es
cwtl
or
jno
ljmp
popa
pop
push
cmp
jl
mov
adc
inc
sbb
cmp
cld
sarl
mov
lret
stos
push
add
cmp
leave
shrb
loopne
shrb
ja
lea
popf
jnp
adc
sub
and
sub
push
pop
imull
push
push
ljmp
ror
rolb
mov
aaa
mov
dec
add
popa
daa
sbb
push
and
mov
cmp
add
jno
dec
add
pop
mov
pop
sbb
subb
scas
or
add
jbe
sbb
push
xchg
add
adcb
loope
sub
add
xchg
mul
mov
pop
push
push
nop
mov
sahf
sub
or
divl
push
dec
sbb
mov
xchg
add
fdivl
loop
mov
mov
pop
jne
mov
aas
push
fsts
ficompl
es
push
sbb
insl
push
cwtl
call
push
cmpsb
sbb
jle
iret
movsl
mov
clc
in
push
xor
lock
mov
inc
stos
mov
je
or
xchg
cltd
push
sub
jg
mov
insl
add
or
sub
pop
shll
mov
ret
pusha
popa
jp
dec
add
xchg
cmpsl
adc
aaa
mov
loope
mov
mov
loopne
nop
sub
adc
in
or
fwait
or
cmp
push
push
cmp
loopne
shll
pushf
and
cmp
add
mov
rclb
ss
or
insl
insb
dec
movsl
fsubs
xor
sub
push
add
movsb
insb
mov
and
sub
lock
pushf
ret
or
sbb
movsb
mov
xchg
aad
dec
les
xchg
xchg
incb
mov
sub
dec
ljmp
rcr
les
pop
fsubs
leave
movsl
mov
icebp
fcoms
out
or
loope
arpl
mov
leave
add
cwtl
lret
and
sbb
adcl
xchg
push
jl
inc
cmc
xor
adc
in
mov
sub
jo
inc
pusha
fs
sbb
dec
aas
pop
adc
icebp
push
sbb
xchg
js
mov
add
int3
cli
cmpsl
je
shlb
cmp
inc
mov
pop
push
add
and
pop
outsl
cwtl
rcr
sbb
outsl
push
loope
sbbb
fwait
sbb
faddl
push
test
jo
xchg
pop
dec
jnp
and
xchg
or
mov
adc
adc
push
arpl
xor
add
movsb
sbb
outsb
and
sbbl
add
push
test
mov
xchg
or
push
sub
sbb
push
mov
mov
sbb
and
inc
push
test
dec
rclb
adc
or
lahf
sbb
adc
test
adc
loope
aas
pushf
xchg
jnp
mov
add
inc
push
sub
add
sbb
cmpsl
and
mov
dec
or
fistl
push
adc
pushf
es
adc
ret
sbb
push
xor
mov
std
xchg
mov
data16
adc
ret
fildl
adc
jnp
mov
or
inc
cmp
nop
mov
enter
xlat
xchg
mov
pop
clc
mov
sub
pop
xchg
loope
addl
mov
repnz
xchg
or
das
fs
rclb
push
push
mov
push
adc
mov
mov
sub
stos
lahf
clc
sbb
pop
dec
mov
add
sub
sbb
push
or
les
js
jecxz
cli
cmp
cmp
call
dec
mov
mov
add
pusha
dec
test
sarl
pop
lods
mov
cwtl
ja
cli
mov
cmp
iret
add
fs
lock
and
jle
subl
hlt
dec
iret
adc
mov
xor
cmc
jle
xor
xchg
mov
xchg
inc
or
push
push
jo
ss
push
mov
sbbb
insl
loope
les
imul
insb
and
pop
mov
jecxz
in
cmp
sbb
and
iret
mov
in
call
pop
out
push
jne
mov
sbb
adc
lods
mov
pop
icebp
xchg
adc
test
push
popf
or
clc
xorl
lret
aad
inc
push
movsl
mov
push
cmp
fsubl
adc
insb
enter
or
call
push
sahf
push
dec
add
or
add
fcoms
dec
enter
or
cmp
pop
add
add
mov
inc
call
inc
imul
sub
xchg
push
mov
es
lock
mov
mov
sub
popa
sti
jg
adc
and
les
dec
pop
and
inc
push
mov
icebp
mov
nop
add
pop
xchg
cwtl
pushf
jne
shll
mov
pusha
loope
mov
sub
loopne
movb
rcrl
scas
fsubrl
mov
and
movsb
aam
jecxz
enter
and
popf
mov
fdivs
daa
and
loopne
rorb
or
pop
ret
sti
imul
jmp
cmp
cmp
xchg
inc
movsb
sub
mov
fmull
xlat
lea
xchg
and
cmp
or
orb
cld
jge
lea
pop
lock
adc
adc
jmp
push
lea
sub
shlb
push
in
inc
mov
mov
cmp
sbbl
mov
or
cmp
mov
mov
mov
jge
mov
add
lods
jno
sbb
pop
pushf
pop
or
test
popf
movsb
gs
or
add
inc
enter
or
rcrl
jge
jne
cmp
jl
repnz
mov
in
sub
nop
push
pop
pop
popa
mov
mov
sub
bound
call
das
mov
mov
or
adcl
cmp
pusha
jae
xchg
sub
mov
jp
lods
or
push
test
subb
adc
inc
dec
mov
je
push
push
mov
loope
cmp
pop
add
cmpsb
mov
adc
je
add
nop
push
data16
mov
xchg
adc
sbb
js
ds
je
lock
sbb
rcll
add
push
int
movsl
push
cmp
sub
or
push
dec
iret
add
sbb
mov
icebp
add
xlat
popa
mov
push
sbb
pop
sahf
mov
sbb
cmpsl
or
mov
mov
mov
fcoml
es
pushf
loop
aam
inc
xlat
sti
push
cmp
xlat
scas
sub
mov
pop
lea
sbb
mov
mov
cmpsl
cmc
add
movzbl
dec
shlb
cmp
adc
and
cmpb
mov
mov
adc
sbb
sub
push
jl
sbb
mov
pop
push
jno
and
xlat
scas
pop
pop
or
inc
fs
pushf
mov
lods
sbb
sub
rcrb
add
push
inc
arpl
jge
xchg
bound
adcb
pop
call
in
test
roll
out
out
ret
xchg
push
mov
out
or
mov
push
dec
jmp
mov
repz
cmp
sub
stc
ja
mov
xchg
ss
add
clc
pop
mov
xor
imul
mov
mov
pop
mov
fdivl
lea
clc
ss
xchg
cmp
or
pushf
xor
jle
fs
mov
cmpb
scas
add
add
push
cmp
mov
add
push
push
ja
mov
fsubl
push
call
imul
jle
pop
sbb
in
xor
push
pop
or
loopne
fsin
test
test
decb
imul
mov
or
fcmove
aaa
lods
mov
outsb
lock
inc
bnd
es
loopne
mov
sbb
sbb
cmpsb
cmp
loopne
jmp
bound
inc
mov
lea
es
cmp
fs
dec
inc
hlt
cmpsb
enter
clc
js
mov
xor
arpl
mov
sbbl
sarl
loop
and
outsb
std
adc
lock
bound
sub
jnp
mov
add
jle
mov
ret
jg
ss
outsb
adc
inc
cmp
or
je
mov
outsb
add
push
jge
push
sub
sbb
xchg
push
or
jbe
das
cmp
mov
pop
jne
jge
push
jbe
sbb
pusha
sbb
js
cmc
push
lock
bnd
int
and
je
push
cmpsb
dec
cmp
xor
mov
sbb
xor
xchg
idivl
adc
inc
inc
jmp
inc
jo
add
mov
addr16
and
jne
insb
inc
lock
adc
insb
jl
inc
inc
pusha
mov
cmp
pop
adc
data16
add
iret
pop
xor
or
mov
idiv
lret
jmp
pop
cmpsb
mov
xchg
fwait
pop
enter
rorl
sub
fst
aam
mov
mov
hlt
fsubrs
sbb
call
insl
pop
in
xor
cmpsl
jb
daa
push
dec
std
sbb
es
push
add
roll
adc
xor
cmc
fcoml
add
add
shlb
jecxz
fadds
push
push
aas
insb
ja
pop
add
xchg
test
add
test
js
loopne,pn
fisubrs
mov
adc
decl
pop
jl
iret
shrb
movsb
sub
fs
or
out
hlt
lcall
push
inc
jbe
mov
out
push
jle
add
fadd
xor
fcomps
mov
inc
add
and
rol
pop
sbb
out
jo
push
aam
andl
fcoml
rclb
or
or
add
repnz
in
or
arpl
js
xchg
imul
dec
jbe
inc
and
adc
fidivs
xor
jnp
and
sahf
add
dec
pusha
insb
or
hlt
bnd
das
jl
xchg
dec
mov
adcb
adc
jb
xor
pop
imul
xchg
jnp
sbb
mov
dec
push
lds
cwtl
sub
pop
cmp
movl
xor
lcall
and
pop
outsl
mov
mov
push
int
fs
test
adc
cmpb
lods
fstps
inc
inc
or
test
adc
iret
jo
push
jne
jns
and
sbb
adc
sbb
jle
sub
mov
sbb
into
faddl
inc
mov
aam
jmp
cmp
pop
inc
in
cmp
dec
pop
or
fwait
mov
add
dec
and
clc
and
out
nop
and
incb
dec
cmpsl
fistl
aas
mov
test
nop
rorb
out
inc
popa
push
push
sub
aas
xchg
sbbb
jo
sub
pop
hlt
push
into
sub
or
popa
insl
mov
xchg
push
pushf
and
insl
jecxz
push
push
dec
bound
je
mov
xor
xor
xchg
mov
incl
lea
xor
cltd
test
gs
pop
cmp
and
xchg
jo
sub
xor
push
jge
int3
popf
sub
mov
add
push
das
mov
sub
inc
sbb
mov
adc
int3
xor
pusha
jno
or
cmp
es
xchg
sub
sbb
sbb
jno
pop
imul
mov
icebp
sub
fdivrs
mov
xor
pop
cmp
mov
cmp
inc
and
inc
cmp
rcrb
mov
mov
sbb
xor
jl
xor
lea
xchg
push
movsl
add
adc
dec
xor
loop
xchg
xor
shr
xchg
nop
loopne
test
push
or
jb
mov
imul
sub
sbb
test
ljmp
cmp
call
add
aaa
jmp
add
in
or
fistl
and
cs
jns
dec
loopne
inc
inc
mov
nop
pop
jbe
jl
sbb
or
outsl
jb
add
mov
jns
sbb
xchg
or
add
mov
inc
mov
add
test
ss
inc
das
mov
mov
cmp
mov
imul
gs
push
fidivl
xchg
mov
lcall
mov
aaa
rclb
pop
xchg
enter
ljmp
push
and
sbb
aam
push
pop
mov
and
sbb
sbb
mov
push
sub
add
mov
jo
outsl
rcll
nop
cmc
sub
adc
cs
xchg
jb
push
mov
and
inc
arpl
sub
or
mov
inc
dec
push
scas
outsb
test
ljmp
mov
lcall
dec
in
imul
pop
mov
adc
xchg
xchg
add
pop
push
push
mov
jo
or
push
shll
outsl
divb
andl
cmc
subl
mov
push
dec
add
or
xor
or
sbb
add
je
push
add
push
lods
je
int
popf
mov
test
inc
int3
mov
in
in
shrl
fucomip
andb
push
std
add
lahf
jle
xor
push
or
repz
xchg
or
cwtl
mov
xor
ljmp
loopne
lock
sub
pop
and
push
mov
xor
or
dec
aam
or
jmp
adc
icebp
jl
add
mov
sub
aam
xchg
adc
or
inc
popf
and
push
je
inc
pushf
je
xlat
cmp
lret
push
popa
fsubrl
cli
mov
push
push
and
push
lcall
js
xor
xor
fs
faddl
nop
push
femms
mov
cs
add
mov
or
adc
lahf
pop
adc
aam
shl
push
jbe
aam
fistl
mov
cmp
xchg
cld
mov
inc
test
gs
or
out
sbb
push
xor
lods
repz
push
pop
out
aam
imul
dec
push
sub
test
push
xor
push
push
lret
mov
mov
inc
je
pop
push
and
stos
gs
les
fsubrs
jnp
and
sub
fnstsw
xchg
sub
sbb
lret
int3
dec
cmp
adc
pop
push
ret
ret
inc
fdivrs
mov
or
das
arpl
rolb
pop
adc
add
mov
fadd
test
loopne
and
or
jns
and
mov
repz
inc
sub
cmpsl
cmp
dec
push
push
xor
xor
inc
or
inc
cmp
push
push
pop
mov
int
addl
rolb
xchg
cwtl
es
sub
fisttpl
push
gs
lds
cmp
pop
test
lods
and
lds
jecxz
les
sub
js
lahf
lock
push
or
mov
shr
push
lahf
or
or
inc
mov
mov
mov
push
mov
dec
rcrl
cmp
ret
add
jbe
push
mov
add
or
pushf
test
mov
imul
mov
or
lods
push
dec
nop
in
jbe
mov
lock
or
in
mov
mov
pop
or
pop
pop
les
add
add
jg
je
cmp
jne
add
loopne
mov
jns
add
jo
dec
sbbb
imul
push
cmpb
imul
pop
mov
es
jg
xchg
stos
outsb
mov
test
les
mov
mov
outsb
cli
je
jo
out
add
mov
mov
xchg
jl
orl
decb
test
add
xchg
dec
enter
sub
mov
mov
int3
les
add
xchg
ds
fs
cltd
call
jmp
add
pushf
xchg
xor
or
add
inc
in
adc
pop
loopne
inc
loope
shrb
add
dec
mov
fildll
cmp
je
sbb
pop
std
hlt
push
and
and
insl
lea
pop
mov
push
testl
out
sub
mov
lods
or
xchg
mov
mov
push
sub
repnz
push
sub
xor
add
sbb
or
bound
mov
lret
sbb
daa
fwait
pop
dec
adc
inc
mov
test
push
or
shll
aaa
cmp
push
cs
mov
inc
push
push
aaa
stos
mov
movsb
stos
mov
push
psubb
pop
and
push
push
mov
ja
lds
movhps
nop
rclb
out
xorb
test
test
ret
stos
push
push
push
and
jle
xor
stc
test
cmp
add
and
fwait
cmp
popa
lock
add
add
in
test
sbb
out
hlt
pop
push
sub
sbb
cltd
or
ja
insb
or
jecxz
cmp
cmp
inc
sub
cs
imul
dec
imul
test
outsb
mov
xchg
dec
pop
pushf
cltd
push
adc
xlat
add
inc
sahf
inc
mov
dec
xor
cmp
push
movsb
inc
cltd
cmp
mov
or
mov
push
add
cmc
dec
std
adc
les
jle
push
mov
sbb
aaa
push
add
and
push
xor
sub
outsb
std
leave
jne
insb
inc
cmp
sbb
dec
mov
lock
clc
mov
in
inc
and
dec
out
ljmp
xchg
jne
pusha
testl
adc
add
divl
sbb
xchg
push
push
dec
sbb
mov
inc
ja
stc
inc
out
repz
arpl
cmc
dec
jb
rcrl
inc
cmp
mov
jne
mov
jmp
fldl
jne
lcall
mov
dec
sahf
enter
push
mov
rorl
pusha
adc
jae
jno
mov
push
adc
mov
push
push
mov
push
clc
push
push
lock
psubusb
fnstsw
lods
in
ljmp
insb
fldl
pop
fsubr
pop
faddp
andl
sbb
push
or
xchg
adc
stos
xor
faddl
ja
add
pop
cmpsb
inc
inc
jecxz
rcll
mov
or
pusha
cltd
push
mov
lods
sub
adc
filds
push
pop
cltd
cli
add
dec
cmp
inc
adc
inc
lret
pop
mov
mov
mov
add
push
js
xor
test
iret
sub
shll
aad
xor
push
or
lea
push
inc
jmp
jb
lret
pop
pushf
sbb
pop
sbb
push
inc
lret
arpl
pop
xchg
inc
fcmovnbe
pop
and
fstl
mov
dec
mov
int3
dec
add
cld
sarb
outsb
push
xchg
add
sahf
dec
sbb
jp
mov
es
in
sub
pop
insb
in
push
lock
bswap
enter
sub
xor
dec
hlt
jge
adc
fwait
cli
xor
dec
aam
ret
sub
outsl
jbe
fisubrs
mov
jmp
adc
rolb
and
daa
inc
stos
xchg
outsb
xchg
rcrl
shl
push
cwtl
ja
mov
test
xor
cmp
pusha
sub
ds
adc
dec
pop
pop
fwait
pop
outsb
cmp
mov
imul
inc
add
jb
or
push
push
add
pusha
or
jns
mov
adc
xchg
dec
jp
pop
add
or
data16
or
mov
dec
in
mov
arpl
jno
add
adc
dec
loope
testl
outsb
ja
cmp
rcl
dec
mov
pop
ret
dec
dec
rcrb
arpl
cmp
decl
inc
adc
popa
pop
shlb
test
repz
mov
inc
pop
int3
adc
xchg
cmp
dec
cmp
insl
xchg
mov
add
adc
sub
sbb
push
imul
fisttpl
cmc
fisttpl
les
adc
push
test
sbb
fadd
xor
in
subl
xor
xchg
pxor
in
cmp
push
inc
push
add
fcoms
adc
shl
mov
xor
jne
and
lret
xor
add
mov
jo
mov
je
popf
inc
aam
sbb
mov
cmp
scas
pop
ret
mov
xchg
sbb
or
leave
fcoml
stos
fdivl
dec
sbb
dec
cmpsb
jle
push
or
rcll
outsb
adcb
in
add
cmpsb
push
or
js
mov
adcl
fsubrl
sbb
cmp
sti
adc
push
add
push
mov
ds
mov
std
xor
mov
sbb
jo
xchg
cmpsl
mov
jae
imul
or
in
push
push
hlt
rcll
test
sbb
pop
jns
adc
daa
scas
mov
push
jge
leave
hlt
movsl
popa
sbb
idivl
popa
cmpsl
lret
cmpl
lock
mov
icebp
mov
hlt
sbb
movsb
cmp
mov
sbb
mov
cmpb
pop
push
push
fldz
or
inc
add
mov
arpl
push
mov
dec
and
notb
and
adc
mov
lahf
xchg
adcl
sub
sbb
leave
and
sub
daa
add
mov
daa
add
xchg
clc
subl
imul
jb
push
inc
in
pop
inc
dec
push
xor
push
pushf
jmp
xchg
sub
fnstsw
sbb
add
add
add
std
dec
adc
subl
add
adc
frstor
lock
add
or
daa
and
daa
setl
cwtl
push
mov
ljmp
mov
xchg
push
jmp
add
cmp
loope
fdivl
pop
aas
add
scas
popa
mov
inc
jp
scas
aad
loope
xor
mov
sbb
xchg
xchg
adc
fsts
outsb
mov
ja
add
pop
imul
mov
xor
pushf
call
xlat
cmp
sub
pop
or
mov
adc
and
adc
aas
pop
push
adc
mov
insl
loope
push
xchg
push
push
insl
loopne
sub
mov
or
popa
xchg
mov
or
sbb
add
mov
je
ja
add
and
adc
mov
sbb
pop
cmpl
and
mov
sbb
dec
fistpll
or
outsb
jne
xor
inc
ret
mov
clc
cmp
mov
clc
mov
daa
arpl
and
dec
cmp
faddl
popa
add
sbb
push
in
jmp
xor
fsubrl
js
jb
mov
mov
dec
mov
mov
sub
je
hlt
push
in
sahf
sub
adc
push
jbe
xchg
cmp
inc
fmuls
sub
popf
or
xor
fadd
cmpsb
cmp
pop
mov
adc
push
fmull
iret
repz
inc
mov
test
xlat
push
movlps
push
push
ds
pop
imul
fcoms
cmp
insl
movsb
inc
cwtl
fdivrl
add
push
int3
push
push
xchg
mov
loopne
pop
in
lock
pop
push
push
cmp
xor
daa
add
or
lock
notb
movsb
ret
cmp
push
jbe
cmp
enter
jmp
or
sbb
push
jge
jnp
add
cmp
jnp
inc
mov
inc
mov
rclb
outsl
add
lock
or
sarb
shrb
adc
push
test
test
add
lods
loop
mov
ja
aam
les
popa
cmp
fadds
aam
mov
add
les
jo
sub
cld
sbbl
dec
or
aas
add
lods
mov
addl
in
sbb
cmc
xchg
and
jbe
adcb
aaa
push
faddl
jg
sbb
xchg
inc
cmp
jne
lcall
mov
call
pop
cmp
ret
dec
out
dec
enter
cmp
repnz
repnz
push
add
or
insb
xchg
pop
inc
push
enter
push
mov
addb
push
daa
jmp
ss
push
jno
std
cmp
mov
loopne
clc
jl
adc
or
sbb
and
and
test
sarb
shlb
add
leave
loopne
leave
leave
xchg
dec
fwait
sbb
repnz
les
in
push
les
xchg
cmp
xchg
add
or
and
add
sbb
lahf
jo
sbb
jmp
add
dec
aaa
add
jl
inc
str
mov
push
dec
or
lcall
stc
inc
xor
push
xor
pop
push
cmp
or
push
mov
push
cmp
gs
je
xchg
cmp
push
adc
sbb
mov
cmp
push
mov
xchg
or
icebp
mull
or
cmp
sub
adc
xor
setg
xor
inc
fwait
or
loopne
shlb
sbb
add
push
hlt
jge
add
or
xchg
add
lock
and
pop
and
call
fwait
int
inc
in
xor
cmpb
dec
mov
add
out
pop
fdivl
mov
inc
sbb
movsl
add
cmp
jecxz
jmp
or
lret
cwtl
xchg
mov
fldl
cmp
fdivs
xorb
mov
mov
dec
inc
mov
cmp
xor
and
or
sub
mov
push
cmpsb
push
push
sbb
imul
jmp
je
rcrl
ret
arpl
cmp
aad
in
leave
push
into
sub
mov
sbb
test
sarb
lret
push
cli
lea
adc
inc
and
pop
inc
cmp
test
xor
mov
in
jp
imul
cs
inc
inc
push
mov
or
jbe
loopne
dec
je
js
lock
sub
mov
loopne
ss
push
sbb
dec
push
mov
icebp
mov
fadds
into
push
xor
hlt
adc
push
and
push
inc
pop
or
dec
and
in
outsl
jge
sub
lods
sbb
sti
push
adc
or
lods
pop
push
dec
add
inc
xchg
ret
insb
xlat
sbb
rcll
jp
xchg
cmpsb
lret
mov
jp
and
xchg
orl
pusha
test
test
or
push
lods
fistpll
test
stos
insl
rclb
pop
bound
mov
jmp
adc
data16
loopne
aam
inc
inc
cmp
sbb
movb
cli
aad
xchg
test
mov
mov
popl
insb
cmp
jb
add
ja
mov
loop
data16
pop
sbb
lock
pop
sbb
xor
lods
dec
inc
mov
add
cmp
or
test
xor
add
jne
daa
std
cmp
add
in
push
jl
push
inc
inc
cmpsl
enter
push
push
pop
mov
xor
xorl
mov
pop
sbb
jbe
clc
insb
sbb
inc
andl
dec
xchg
pusha
adcl
mov
sub
addb
sahf
outsb
adc
and
xorl
inc
push
stos
pop
or
xor
mov
cmp
dec
add
ljmp
sub
add
negb
and
adc
add
cmp
rcrb
or
shrb
mov
or
pop
xchg
adc
ret
jecxz
xchg
int
xor
push
enter
cli
std
sbbl
jge
or
jns
dec
sub
cmp
jo
sbb
fdivs
sahf
adc
or
add
or
stos
adc
mov
xchg
mov
add
or
and
sub
pop
sbb
and
xor
mov
push
inc
lret
dec
mov
xchg
sbb
pop
pop
xchg
icebp
and
xchg
pop
roll
loope
bound
pop
inc
adc
push
add
inc
sub
xor
inc
xorl
adc
and
nop
outsb
pop
lret
lock
sar
add
lock
in
incl
push
inc
pop
adc
shlb
or
and
cmpb
push
and
fisttps
pop
sbb
add
jnp
xchg
push
push
inc
mov
call
xor
xchg
push
mov
jbe
push
sbb
mov
push
pusha
imul
adc
ss
lock
adc
pop
test
add
sbb
pop
rolb
mov
movsl
lret
ror
fsubr
bound
in
sub
mov
je
sub
lcall
lods
jl
je
js
and
pop
cmp
jl
mov
cmp
into
mov
dec
cpuid
sbb
fcoms
add
ljmp
xchg
neg
xor
cmpb
es
into
jl
shrl
pop
enterw
xchg
cmpsl
sahf
ret
xchg
jge
push
jle
cmp
dec
mov
push
push
je
push
mov
cmp
sahf
mov
or
cmp
or
push
xor
ds
test
ret
cltd
into
outsb
out
dec
inc
and
pop
jne
jns
pop
mov
or
push
jmp
push
dec
faddl
imul
jl,pt
pop
pushl
jmp
int
stos
xor
push
pop
mov
outsl
lock
jne
jns
push
mov
push
fwait
roll
lret
push
lods
mov
xor
insb
lea
xchg
flds
shl
cs
dec
add
sub
stos
xchg
sahf
fcompl
insb
mov
xor
push
mov
add
sbb
adc
dec
sahf
dec
jl
inc
orb
xorl
push
pop
xchg
and
mov
xor
and
ss
js
add
movb
je
push
cltd
ljmp
lock
clc
mov
lock
push
adc
add
fs
stos
or
pop
add
push
clc
mov
and
push
stos
cwtl
aad
pop
lea
push
js
cmp
dec
xchg
add
add
or
add
nop
xchg
in
dec
sbb
lock
addr16
dec
or
adc
test
mov
mov
icebp
jle,pn
nop
add
xchg
inc
rolb
repnz
sub
xor
and
or
jmp
jecxz
pop
jecxz
lds
dec
daa
xchg
outsb
fdivrs
dec
imul
das
cmpl
mov
fadd
push
std
loope
xchg
pop
arpl
pop
insl
popa
out
jno
dec
sbb
pop
xchg
test
cmp
jae
pusha
push
jecxz
xor
add
add
sbb
sbb
je
xchg
data16
add
nop
or
fcmovb
cmp
xor
push
cmp
pop
ret
sbb
mov
aas
jne
sbb
mov
sbb
or
movsl
std
push
adc
mov
movsl
cmp
and
test
dec
in
fidivrl
inc
call
orl
mov
cltd
aaa
loope
cmp
or
inc
ret
aam
add
outsb
ss
pop
fdiv
je
and
add
or
push
fiadds
mov
jmp
adc
adc
leave
jne
or
jmp
cmp
xchg
xchg
cmpsb
mov
movsl
add
push
mov
test
es
mov
fadds
adc
and
jle
pop
es
dec
xor
adc
fbld
adc
pop
add
inc
xchg
jge
out
or
stos
mov
popa
mov
mov
sti
shrb
outsl
fld
cmp
mov
inc
dec
mov
sbb
mov
mov
int
push
pop
dec
pop
mov
xor
push
jbe
dec
cld
dec
cmp
shlb
ficompl
imul
nop
mov
mov
iret
jge
iret
xchg
dec
xchg
stos
add
mov
arpl
mov
push
push
out
dec
adc
xor
fdivs
or
scas
mov
cmp
jmp
mov
dec
push
cmp
add
fs
push
xor
add
xchg
or
stos
cmpsl
or
adc
nop
jmp
push
test
notl
push
sub
add
adc
out
ss
call
or
add
dec
test
movl
jge
jp
add
inc
pop
xchg
jb
pop
aas
mov
inc
movsb
or
or
pop
mov
into
mov
jne
sbb
xchg
stos
frstor
loope
or
adc
or
fadds
mov
ret
mov
hlt
adc
push
jle
sarl
cmp
mov
push
xlat
inc
cmp
pop
and
mov
pop
popf
popf
loopne
xchg
rorb
pop
in
adc
xchg
jo
movsl
adc
push
xchg
pop
addb
pop
and
pop
dec
cmp
addr16
jmp
push
xchg
adc
push
xchg
dec
pop
aas
ja
daa
and
jo
lods
ret
daa
add
arpl
enter
add
xchg
xchg
or
test
or
jmp
cmpsb
xchg
mov
pusha
andb
sub
jnp
fiadds
sti
iret
or
jmp
xchg
fldl2t
test
pop
jge
pop
dec
inc
lock
add
inc
jle
call
testl
push
mov
add
xorl
sti
lds
and
xchg
pop
or
stos
pop
xor
and
adc
sub
dec
or
jg
cmpl
popf
shrb
adc
pop
add
pop
add
adc
test
dec
pop
add
jl
adc
idivl
movsb
in
popa
ret
and
jnp
ds
sahf
sub
repz
add
and
enter
out
mov
ds
icebp
adc
sbb
in
cltd
loop
out
lret
push
lods
jmp
inc
lahf
mov
inc
adc
adc
popa
or
cmp
jl
push
push
push
sbb
popf
test
mov
mov
popa
mov
dec
xor
in
int
pop
divb
stos
cli
lea
scas
or
pop
jmp
mov
add
outsl
test
add
insl
pop
mov
ret
in
cmp
sarb
cmp
les
arpl
loope
shl
jge
sbb
enter
inc
insl
cmp
adc
mov
or
or
mov
cmpsl
xchg
cld
mov
call
enter
cli
inc
test
call
leave
jno
jge
push
daa
fwait
mov
pop
movsl
sbb
push
xchg
lock
mov
shr
push
push
pop
les
test
fcomp
dec
mov
push
inc
dec
aaa
mov
sbb
mov
adc
lods
add
sti
jne
cmp
xor
cld
cld
push
outsb
inc
insl
jmp
je
les
outsb
adc
pop
pop
adc
xor
mov
jp
ret
push
addb
add
fs
cmp
ss
je
add
jle
mov
cld
sub
lock
inc
loop
loope
je
jb
pushf
inc
fdivrl
jno
cmp
rcll
icebp
mov
mov
jmp
nop
negb
sub
add
push
push
add
push
jp
cmp
inc
loop
add
sahf
sub
mov
jp
cs
fadds
shlb
add
push
pop
add
repz
lea
inc
add
push
cmpb
xorb
js
mov
pop
jg
push
test
data16
cltd
xchg
jo
or
insb
sbb
test
shlb
lock
std
sbb
push
xor
fmul
adc
inc
jp
xchg
rorb
out
or
in
sti
mov
icebp
lcall
hlt
mov
sub
dec
lods
mov
inc
fdivs
incl
add
and
loopne
xor
shrl
addl
insl
adc
pop
mov
out
nop
or
lcall
pushf
sti
xchg
in
cmp
jecxz
sub
insb
lea
jmp
push
nop
add
mov
and
mov
inc
enter
add
add
add
push
push
dec
or
orb
and
aam
jae
jne
fsubs
mov
mov
fists
rorb
xchg
add
cmp
add
push
push
mov
sbb
push
sbb
aas
pusha
push
push
xor
add
mov
dec
jb
sub
roll
or
or
inc
cs
or
xchg
addl
or
inc
mov
insb
js
or
push
dec
push
cli
sbb
in
ss
adc
leave
repz
sbb
or
std
daa
inc
popa
imul
sub
enter
pop
jge
jne
push
pop
leave
sbbb
popl
test
pop
fdivs
and
or
nop
stos
fldl
test
std
adc
mov
add
fiaddl
push
loope
pop
subl
loopne
pop
mov
dec
das
push
sbb
push
inc
enter
ret
adc
cs
push
inc
adcl
cld
xor
dec
jmp
push
out
fiaddl
inc
lock
out
testl
gs
mov
mov
mov
jmp
les
push
push
cmp
ja
adc
push
and
add
rcrb
popf
orb
add
cmpl
adc
inc
pop
inc
push
stos
xorb
iret
dec
fnstenv
inc
inc
dec
sbb
imul
call
subb
shlb
iret
inc
movsb
stos
cmp
dec
lock
jo
sub
add
sub
jbe
push
jmp
adc
push
in
push
lea
in
in
push
pop
and
in
and
inc
loopne
lret
jmp
test
das
sbb
adc
and
adc
pop
inc
push
cwtl
jne
add
pop
cli
fdivrl
jl
sti
xor
add
push
mov
sub
or
push
ret
dec
mov
adc
fsubrl
pop
mov
or
int
mov
mov
aam
cwtl
data16
push
jle
outsb
mov
stos
add
rclb
mov
ljmp
out
xchg
out
mov
repnz
jno
test
stos
xchg
cmp
sahf
inc
in
xor
loopne
hlt
mov
jbe
jecxz
sbbl
rclb
ret
xor
outsl
sbb
pop
lea
cmp
sbb
js
jecxz
mov
out
les
add
or
rcrb
imul
inc
xor
lock
or
mov
insl
push
add
ja
cs
dec
fldt
or
das
push
push
xor
xchg
cmp
test
add
pop
adc
pop
push
rorl
mov
mov
jo
push
pop
orb
pop
pop
add
pushf
nop
out
cmp
push
aam
and
pop
rclb
lea
jmp
sahf
mov
fdivr
mov
add
imull
test
mov
outsl
lds
shll
mov
test
pushf
rorb
outsl
mov
cmpsl
in
in
and
andps
cmp
stos
mov
nop
push
adc
jl
ss
addb
nop
jns
push
imul
inc
test
ds
sbb
push
pop
mov
xchg
out
and
add
jmp
or
push
and
insb
dec
or
loopne
jno
outsb
cmpsl
jge
push
mov
push
enter
jle
aam
push
push
and
or
loope
push
mov
push
dec
mov
inc
lcall
in
movzwl
xchg
mov
xor
insl
mov
mov
add
std
jl
cmp
sti
jecxz
mov
outsb
sbbb
adc
mov
lds
insb
pushf
push
jp
in
int
push
cmp
pop
int3
jg
iret
iret
and
dec
popa
mov
out
lds
aam
jl
jge
loopne
sbb
adc
push
adc
sub
dec
add
sbb
mov
les
outsb
mov
out
movb
cs
cmp
xchg
popa
js
add
rorb
sbb
ror
int3
inc
cmpl
pop
ret
sti
add
cmp
xchg
icebp
das
in
and
pop
enter
sbb
xor
cmc
xor
adc
test
gs
sbb
sbb
movsb
std
cwtl
push
dec
xor
cmp
mov
fcoml
shr
mov
mov
jecxz
mov
scas
ret
inc
imul
or
adcb
rcrb
add
jg
push
jne
pop
fstl
mov
fnop
rolb
dec
movsbl
sti
scas
inc
fldcw
pop
lahf
cmp
jb
jbe
push
popf
mov
push
push
sbb
and
mov
repz
inc
daa
dec
xor
push
mov
dec
or
push
in
aas
pop
cmp
push
rcr
xchg
pusha
xchg
inc
js
hlt
mov
aas
test
add
bound
inc
add
inc
jns
gs
sub
addr16
adc
or
in
dec
cmp
mov
pop
cmp
cmp
push
pop
cmp
jl
test
pop
mov
fisubl
or
ret
push
jns
xor
xchg
mov
mov
adcb
ret
add
cmc
mov
pop
cli
adc
cmp
lods
and
hlt
add
jl
inc
pop
xor
xchg
and
xchg
jnp
lock
int
lods
repz
push
jle
push
ficompl
imul
cmp
cmp
fdivrl
cmp
or
jnp
or
jbe
jmp
or
por
jmp
adc
pop
adc
push
adc
dec
adc
dec
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
fcompl
pop
pop
jmp
and
or
and
outsb
and
xchg
pop
hlt
inc
ret
into
xor
sbb
insb
xor
dec
ja
ds
mov
jl
icebp
repnz
es
repz
cs
dec
iret
repz
push
pop
data16
jae
cmp
repz
addb
repz
fwait
repnz
sahf
out
mov
mov
sahf
enter
fsub
push
push
out
out
pop
fadds
jmp
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
dec
sbb
push
pop
and
and
aas
push
jne
xor
add
or
rcr
pusha
pop
push
pop
mov
popf
dec
push
jecxz
sub
test
mov
loop
inc
jo
add
adc
mov
dec
sti
fnstcw
inc
pushf
les
lret
imull
faddl
dec
push
hlt
jo
sbb
mov
jo
out
imul
add
add
push
orl
sbb
dec
fwait
xorb
push
test
test
jb,pn
inc
lea
out
pop
decl
call
mov
jns
nop
adc
out
push
jmp
jns
ljmp
enter
mov
push
cmp
fdivrl
add
or
jbe
ja
jb
mov
fwait
xchg
call
push
test
adc
sbb
pop
sbbb
xor
mov
push
loope
pop
loop
add
push
gs
fcompl
in
enter
push
mov
cmp
sub
ja
sarb
mov
and
push
enter
ljmp
and
mov
sbb
mov
sbb
lcall
push
sbb
js
clc
cmp
vmread
xchg
cmp
mov
jle
pop
sbb
sub
and
or
or
or
pop
inc
sbb
jp
shr
add
add
rcll
and
ret
inc
shll
rcll
push
sub
popa
mov
cmovb
jb
insl
lcall
pop
lods
sarb
out
rcll
push
pusha
scas
daa
jo
lods
shrb
je
mov
or
das
dec
movb
js,pn
ret
movl
mov
push
insb
das
test
jbe
jp
dec
add
aas
sub
pop
adc
cmp
fimull
push
jge
out
or
incb
ds
test
jg
push
ja
lea
imul
cmp
ja
sarb
jnp
stos
mov
inc
rorb
sub
inc
cmp
sbb
lock
mov
lret
adc
xchg
rorb
mov
and
xor
cmp
adc
xorb
mov
jbe
push
xor
subb
cmpl
push
and
clc
loope
test
pop
pop
icebp
and
or
pop
cmovbe
push
xchg
pop
stos
xchg
xchg
sub
hlt
out
aas
pusha
je
add
push
sbb
pop
and
inc
xchg
add
lock
adc
add
add
add
mov
lods
cmp
sbb
add
pop
dec
shlb
push
dec
js
lret
out
push
cmpsb
jmp
inc
test
jo
mov
pop
lods
xor
sbb
or
movl
loope
rcr
and
xor
jb
popf
push
pop
int3
ljmp
push
in
add
and
sub
test
and
xchg
jg
add
inc
test
and
add
lret
xchg
ljmp
out
adc
jl,pn
and
sub
or
xor
push
push
pop
mov
adc
jg
add
cli
es
lea
cmp
addb
jne
or
js
dec
imul
or
cmp
or
aad
or
adc
pop
mov
or
dec
mov
cmp
jl
dec
adc
js
push
imul
pop
sub
and
dec
movsl
daa
pushf
cwtl
cmp
jae
rcl
decb
mov
push
push
and
pop
push
mov
je
scas
js
clc
push
add
sub
or
xor
inc
xchg
pop
push
inc
jecxz
addl
jl
loopne
or
jg
mov
sub
movl
mov
sbb
mov
inc
outsl
push
jmp
pop
push
lahf
cltd
fidivl
lock
jmp
nop
jbe
cwtl
test
sbb
loopne
mov
cmp
inc
in
inc
shll
test
add
daa
and
ret
push
mov
sbb
shlb
sbb
icebp
js
adc
rol
sub
mov
adc
cmc
jmp
sbb
add
pop
clc
add
xchg
mov
mov
dec
mov
js
adc
adc
jmp
mov
ret
xchg
sbb
or
cli
mov
cmp
aam
jle
cmp
jne
adc
dec
sub
inc
adc
xor
inc
cmp
roll
and
adc
cmp
push
dec
inc
loopne
add
inc
outsw
ret
sub
cli
popa
cltd
nop
mov
dec
rolb
insb
sub
scas
in
add
mov
jmp
add
neg
dec
xchg
cmpsl
repz
sbb
mov
or
jns
fldz
outsb
pop
je
int3
and
mov
jge
dec
xchg
mov
loopne
popa
push
sbb
and
addr16
adc
sub
or
aaa
test
std
adc
fists
ret
mov
pop
xchg
popl
mov
jae
imul
js
jbe
call
jmp
push
pop
bound
jecxz
pop
iret
push
xor
es
xchg
fstpt
into
add
push
shl
shlb
pusha
xor
enter
nop
jb
mov
and
int
fwait
push
or
push
inc
cmp
jmp
cmp
stc
jnp
stos
mov
or
lock
and
push
add
jg
testb
loopne
mov
fisttpl
or
mov
inc
lcall
repz
addl
ror
out
jo
fdivrl
iret
je
ss
pop
inc
adc
pop
sbb
ljmp
fiaddl
sub
js
cmp
and
cmp
push
add
mov
mov
mov
push
pop
ret
pop
ret
sbb
mov
aam
dec
js
mov
orl
cmc
inc
and
dec
in
pop
mov
dec
push
nop
pop
rcll
movsb
pop
and
and
adc
adcl
sub
cmpsl
cmp
push
es
or
lock
push
dec
xchg
jmp
test
sbb
mov
test
inc
or
xchg
lret
outsl
sbb
jo
clc
mov
imul
push
cmp
or
cmp
mov
pusha
add
mov
loope
pop
or
jmp
mov
or
xor
or
sbb
sub
lea
imul
cmp
or
jmp
inc
pop
inc
inc
aad
sbb
xor
in
push
sub
dec
ds
push
or
mov
scas
loope
and
pop
and
out
add
xor
dec
lods
jno
mov
cmp
jecxz
sub
stc
sbb
movsl
fnsave
jne
inc
fdivl
push
je
or
pop
push
mov
jae
clc
jo
cld
cmpl
push
push
xor
dec
adc
sbb
adc
pop
jmp
push
mov
xorl
adc
jmp
jno
mov
sbb
push
push
fsub
nop
js
sbb
es
push
mov
and
je
adc
cwtl
push
bound
sbbb
sbb
clc
hlt
rorb
mov
cwtl
in
or
ss
push
adc
fimuls
push
in
rorb
lods
lock
sub
add
sbb
ljmp
dec
in
and
cmp
popf
fadds
or
or
jecxz
and
push
cmp
sbb
popa
mov
ret
subb
call
or
stc
push
out
sub
pop
or
ds
jnp
sub
xor
ret
mov
ja
push
inc
mov
pop
push
aam
sbb
xchg
addl
rcl
sub
xchg
jb
js
lret
dec
daa
fs
xor
ds
test
arpl
sub
xchg
inc
pusha
inc
inc
shl
add
push
dec
mov
mov
xor
mov
xor
inc
shll
outsl
jns
xchg
pop
div
mov
clc
sub
xor
push
sub
out
mov
insb
shrl
dec
imul
sti
and
push
push
mov
xchg
and
mov
xorb
xchg
mov
loopne
xchg
jbe
adc
repnz
mov
push
addb
or
cmp
add
out
sub
sub
and
mov
xor
jg
mov
xor
xchg
sub
and
imul
cmp
push
insl
stos
test
and
insb
add
das
imulb
inc
leave
mov
add
pop
and
lods
jb
inc
and
xor
xorb
cmpsb
imul
in
push
and
and
jo
call
sbb
bound
loopne
pop
dec
adc
in
repz
sbb
pop
add
pop
call
xor
xchg
and
out
jne
or
shrl
pop
stos
jge
cli
sbb
and
sub
jl
adc
add
or
pop
jp
lods
dec
and
xchg
and
cmp
scas
test
pop
push
push
insl
add
mov
sbb
and
cld
xor
dec
fildl
daa
imul
rcl
adc
sti
dec
and
or
aas
pop
fsubrs
sbb
sub
cmp
jne
and
rorb
xchg
lret
mull
mov
cmp
je
cmp
add
jp
mov
push
inc
fs
adc
into
pop
mov
movsl
fildll
push
inc
sub
ds
pop
or
mov
xor
ljmp
or
lret
push
add
ret
jp
sub
add
ret
cs
fstpl
adc
aad
bound
pop
or
pop
adc
nop
dec
mov
je
push
fiadds
into
pop
add
stc
cmc
lods
ret
add
pop
push
nop
xor
pop
mov
adc
nop
and
adc
repnz
mov
xchg
shlb
dec
jne
and
add
jae
movzbl
loope
xorb
je
or
stos
adc
bound
dec
jmp
clc
inc
pusha
cmp
cmp
push
sbb
push
mov
ljmp
les
cmp
dec
ret
push
lea
pop
shrl
cs
push
insl
jmp
and
push
cmp
jge
mov
jp
adc
inc
inc
mov
int
jno
cmp
dec
dec
js
or
jl
xor
pop
xchg
insl
sub
cmp
lock
mov
clc
cld
inc
jae
pop
pavgb
movl
or
push
mov
add
push
popf
gs
cmpsb
and
xor
decl
add
dec
je
add
adc
cmp
dec
or
mov
shr
decl
mov
sbb
loopne
lret
ljmp
xor
lea
dec
lahf
inc
test
mov
xchg
mov
mov
cli
std
mov
adc
or
mov
aad
or
je
push
add
rol
or
out
loop
jno
imul
fistpll
add
jmp
sub
test
call
push
add
jne
sbb
jle
mov
pushf
cmp
cmp
cmpsb
roll
xor
add
sbb
inc
lods
clc
xor
inc
xorb
testb
inc
jmp
sbb
inc
jb
cltd
idiv
inc
inc
imul
retw
sub
cld
mov
ficoml
fwait
out
jp
xor
mov
popa
je
mov
add
fwait
sbbb
aas
cmp
mov
stc
mov
lods
add
xchg
movb
lock
mov
je
pop
nop
pop
jbe
inc
test
jmp
or
xchg
imul
cmp
out
sti
int3
xor
repnz
cld
insl
addr16
push
lock
jae
lcall
add
push
ds
jne
push
jns
push
decb
xor
xchg
cmp
je
cmp
pop
cmp
je
cmp
jne
inc
jne
mov
sub
jnp
dec
and
or
ret
sub
lods
in
xor
jb
mov
nop
cmp
mov
cmpl
incl
sub
sub
popf
cmp
jne
mov
ret
sbb
das
cli
or
sbb
push
fwait
push
pop
add
xor
aaa
insb
add
cmp
xor
cmp
xchg
notb
mov
jmp
and
push
mov
int
jmp
inc
jl
inc
jg
aaa
push
fwait
sub
shl
mov
sub
mov
call
mov
fscale
push
nop
es
jg
xchg
jg
imul
and
inc
adc
sbb
test
insb
push
rcrl
cld
and
xchg
sbb
mov
sbb
xor
and
xor
xchg
cmpsb
enter
rcrl
push
xor
jmp
add
xor
fs
imul
mov
mov
inc
cmc
add
roll
in
les
adcb
cmpsl
daa
dec
decl
clc
sub
cld
inc
and
add
mov
adc
push
movsl
pop
das
xchg
xor
mov
cmp
and
cmp
or
test
sub
lea
idivb
fsubr
inc
inc
adc
add
jmp
xor
sub
aam
adc
and
mov
xor
data16
mov
cld
aad
or
mov
add
ds
data16
insl
cmp
cmp
dec
addb
xchg
xchg
sub
call
out
cmp
je
cmp
je
add
add
fnstsw
cmp
fnsave
inc
out
clc
inc
push
lret
in
mov
add
sub
call
jne
mov
mov
cld
mov
jmp
pop
push
sub
lods
mov
shr
pop
adc
je
and
jne
ret
or
pop
fdivp
or
mov
adc
adcb
aaa
add
pop
xor
mov
inc
call
dec
mov
push
lcall
clc
andl
dec
or
dec
movsb
add
sbb
mov
mov
sbb
bnd
popl
push
lock
sub
jge
jne
mov
sub
and
cmc
aam
push
push
sbb
pop
push
es
pop
dec
add
repz
or
push
xor
xor
loop
or
inc
add
dec
mov
icebp
les
xchg
movsl
test
insb
xchg
pop
dec
mov
imul
inc
lock
add
add
xor
xor
icebp
jmp
inc
rolb
mov
push
orb
add
mov
push
shlb
inc
adc
fmuls
inc
inc
or
mov
jle
jge
in
cmp
adc
add
or
adc
inc
cmp
or
dec
mov
sub
aas
mov
movb
pop
mov
mov
xor
orl
fiaddl
push
cmp
mov
cmp
dec
mov
lods
cmp
cmpb
or
sbb
test
sbb
pop
xchg
cmp
roll
dec
xor
js
xor
xor
push
mov
sub
shrb
icebp
xor
jno
or
repnz
pop
rcll
faddl
nop
sub
mov
jb
jo
outsl
shrb
inc
mov
or
mov
lock
movb
jbe
mov
adcb
add
jmp
add
pop
and
cmpb
jne
imul
or
imull
and
jb
insb
shrl
inc
mov
mov
sbb
fldenv
add
pop
clc
sub
cltd
add
enter
mov
push
cmpsl
cmp
lods
aam
out
test
je
les
dec
cli
inc
inc
or
mov
pop
push
xchg
test
jmp
jmp
mov
loope
pop
out
aas
push
popf
lods
xor
mov
inc
sbb
clc
fildll
jb
jmp
push
xchg
int3
pop
repnz
notl
pushf
addl
in
pop
push
push
addb
xchg
test
or
push
cmc
test
jle
add
mov
adc
dec
sbb
or
and
pop
jne,pn
scas
and
movsl
mov
adc
add
sbb
outsb
mov
loopne
adcl
or
push
inc
insb
je,pt
jo
or
lock
push
mov
pop
scas
xorl
sbb
adcl
movb
jl
cmpb
cmp
inc
test
lock
repz
lock
sub
push
arpl
add
add
mov
pop
jne,pt
xlat
mov
popa
adc
addb
push
jo
push
jnp
addl
addl
in
rclb
xlat
jle
push
pop
cmp
lret
inc
es
xchg
sub
dec
popa
mov
call
inc
jmp
loop
fadd
shlb
push
sub
push
addr16
in
sbb
pop
xchg
mov
data16
sub
add
imul
mov
sub
arpl
std
jmp
aam
stos
sub
insl
test
leave
push
mov
sahf
push
sbb
hlt
mov
push
jae
ret
test
mov
sbb
lcall
xor
cmp
jb
sbb
xor
mov
mov
addl
adc
je
ret
and
sbb
test
or
or
add
jo
pop
cmp
je
inc
inc
jne
pop
mov
add
push
xchg
xchg
mov
push
ljmp
xor
push
mov
cwtl
pop
inc
dec
dec
insb
dec
jne
mov
pop
test
sti
inc
je
cmp
test
jne
or
push
rcrb
dec
or
mov
or
lea
lcall
push
lahf
push
andl
inc
pop
push
jge
or
push
out
mov
addb
fs
adc
les
jp
push
ret
adc
cld
dec
push
add
shll
fbld
pop
jbe
pop
je
cs
cmpsl
test
sub
divl
push
sti
fnstenv
push
add
mov
rolb
das
adc
mov
inc
and
add
js
repnz
add
add
das
in
dec
push
adc
mov
cmpsb
inc
stc
cmp
bound
jge
add
cmp
jne
xor
sar
add
jne
sbb
lret
push
aas
pusha
lea
xchg
add
inc
sub
loope
jmp
xor
mov
in
ds
adc
aam
shr
mov
mov
pop
mov
jne
cli
and
pop
sub
jne
lods
xchg
sbb
sbb
xchg
adc
and
inc
outsb
jne
push
pop
dec
aaa
pop
ret
or
inc
stc
sub
xchg
mov
out
mov
mov
dec
rolb
or
jne
mov
inc
jno
mov
cmpsb
mov
add
jmp
pop
js
imul
jno
xchg
xchg
cmp
jo
or
cmc
dec
sub
push
mov
push
test
into
mov
push
mov
mov
mov
cmpsl
fadd
jno
mov
sub
frstor
das
adc
lahf
xchg
imul
xchg
inc
xor
mov
mov
sub
and
lods
cmp
xor
bnd
push
push
sbb
in
movl
add
sbb
out
sbb
push
cmpsb
jo
orb
divb
xor
pop
loope
sbb
mov
pop
add
mov
jnp
xabort
or
imul
mov
lods
je
movsb
mov
movsb
mov
movsb
jmp
andb
addb
mov
or
sbb
adc
pop
inc
jb
adc
ds
popf
add
out
test
xor
jmp
fsubr
mov
jae
push
or
insb
loop
inc
xchg
mov
add
or
addb
jmp
adc
adc
call
adc
push
mov
pop
js
dec
push
dec
test
test
add
pusha
scas
add
adc
push
icebp
adc
or
sarl
adc
push
dec
xorb
ss
add
and
add
add
test
imul
mov
movsl
fs
test
inc
fadds
in
push
jo
push
ljmp
mov
inc
mov
cli
or
jg
fwait
mov
xchg
lcall
pusha
ret
aad
loop
jl
inc
adc
das
push
cmp
push
xor
push
or
xor
mov
test
lahf
mov
or
mov
jle
xchg
dec
xor
clc
mov
xor
loop
inc
or
sbb
enter
and
push
xor
jmp
push
rclb
mov
xorl
mov
and
cmp
orl
divb
push
adc
inc
fsubs
xor
imul
sbb
sahf
testb
ret
outsl
inc
fists
cmc
jno
in
push
test
das
jecxz
pusha
cmp
add
lods
loopne
or
test
mov
sbb
adc
push
or
jle
or
lods
mov
jb
pop
lcall
lds
and
xchg
lea
inc
loope
jl
pop
ss
pop
jmp
rorb
pop
aaa
ficoml
push
or
or
je
ret
add
out
cmp
stc
pop
sbbb
adc
xlat
sub
insl
and
out
adc
inc
pop
add
movl
mov
or
sti
mov
bnd
or
or
in
outsb
jbe
in
sub
jmp
loopne
sub
push
and
pop
ja
cltd
mov
pop
and
mov
or
xor
repz
xchg
jns
daa
dec
addr16
push
cli
push
out
cwtl
pop
adc
push
and
sub
dec
adc
inc
loop
lahf
mov
ret
mov
clc
jmp
fdivl
jb
call
sbb
push
out
clc
adc
mov
xchg
cmpb
or
cmp
aad
xchg
adc
cmp
mov
pop
pop
mov
rcll
sub
outsb
jo
outsl
pop
push
jae
mov
es
fs
or
inc
pop
aam
jno
mov
mov
ds
insb
hlt
movb
jecxz
int
aad
dec
hlt
jmp
lea
fdivrp
dec
daa
sub
in
scas
and
cmc
dec
or
or
adc
sbb
test
fidivrs
adc
add
ret
lods
xchg
rcl
inc
push
add
and
xor
lock
inc
push
in
popa
popa
inc
dec
and
insb
pop
cmp
adc
jo
mov
js
lock
add
imul
sub
aam
call
or
add
rol
ret
mov
in
jecxz
cmc
push
repnz
adc
scas
mov
outsb
jp
pop
jmp
cmp
jne
repz
push
push
adc
xchg
xchg
mov
hlt
out
hlt
adc
pop
rcrl
std
push
add
je
in
jae
push
ss
iret
cmp
pop
mov
fiadds
or
push
mov
sub
push
fmul
rolb
and
sahf
aaa
cmp
orb
lea
jmp
mov
shl
push
sti
out
jecxz
ret
rep
adc
data16
ja
ret
shlb
insb
das
inc
dec
sbb
in
adc
arpl
xor
mov
jmp
pop
and
inc
pop
mov
fwait
scas
stos
pop
jg
push
in
pop
sub
jp
sahf
sub
shll
xchg
shll
adc
jae
cmp
ja
xor
sub
inc
jae
sbb
push
add
mov
in
pop
push
jge
je
mov
xorb
outsl
es
cmp
sub
mov
push
push
ds
test
or
call
dec
rorl
mov
loope
xor
inc
push
lods
sarb
dec
add
inc
cmp
movsl
adc
js
fistl
or
push
or
add
mov
cmpl
je
inc
or
fdiv
fadd
add
pop
inc
xchg
or
popf
rcll
enter
xchg
push
push
cmp
or
shll
add
aad
test
xchg
inc
add
or
add
test
and
inc
pop
faddl
cmp
jmp
push
sbb
adc
push
je
outsb
sbb
adc
cwtl
js
rolb
xchg
faddl
int3
adc
jo
inc
jo
aas
xor
loopne
sbb
inc
mov
add
ret
divb
js
data16
add
and
mov
xor
mov
pop
cmp
pop
js
add
pop
in
mov
sbb
pop
dec
and
inc
enter
scas
jge
or
push
add
or
pop
inc
inc
test
aam
or
sbb
mov
dec
aam
clc
imull
pop
loope
lods
adc
repz
sbb
adcb
jmp
xchg
push
insb
sub
cld
sbb
ljmp
sub
mov
outsb
inc
loopne
jb
in
sbb
jo
lret
push
cmpsb
out
adc
bound
ret
mov
dec
popf
dec
dec
pop
jle
nop
icebp
add
push
je
sar
imul
mov
out
cld
mov
pop
in
cltd
test
lcall
dec
test
xchg
imul
loop
push
jg
cmp
pop
ret
sbb
or
call
mov
rorl
sbb
hlt
jg
push
dec
call
ret
push
idivl
sbb
cmp
pop
rclb
imul
popa
dec
push
adc
and
add
in
ds
btc
jne
out
sub
dec
inc
std
or
js
sbb
push
jmp
add
add
add
xchg
cmp
jbe
push
push
sbb
push
addr16
cs
add
loop
push
and
mov
cmpsl
sbb
es
pop
ret
int
lcall
ret
popa
xlat
push
insb
lock
fwait
cmp
arpl
icebp
or
add
js
xchg
inc
inc
inc
adc
inc
pushf
outsb
mov
cmp
sub
jmp
push
mov
and
xor
dec
insb
pop
or
cld
jno
cld
push
cmp
or
jo
fimuls
or
cwtl
stc
cmp
das
jmp
xor
scas
push
icebp
out
adcb
sub
inc
jo
ljmp
add
adc
push
cmp
push
push
xchg
mov
add
push
adcb
pop
out
adcl
pop
inc
aam
jo
push
sbb
data16
jge
aad
pop
mov
sub
adc
sbb
sub
pop
ja
xor
and
xor
jne
push
xchg
lock
mov
mov
mov
mov
bound
cmpxchg
lret
jne
push
sub
cmp
jmp
in
push
mov
jle
push
xor
pop
div
dec
inc
mov
lea
test
xchg
sbb
jmp
lods
push
push
or
dec
fcoms
fidivs
or
mov
inc
jmp
add
push
fsubs
or
cli
gs
push
or
add
lock
dec
loopne
js
cmp
ret
and
mov
fsubl
andl
gs
shr
and
orl
cs
or
fiaddl
out
or
or
ret
leave
sub
aas
xchg
movsl
push
xorb
mov
sub
imul
jno
push
sbb
adc
ss
cmpsb
sub
sub
jne
bound
inc
or
ret
add
lret
fisubl
aad
inc
jle
dec
inc
adc
jo
movsl
out
shrb
repz
leave
pop
pusha
push
outsl
fucomip
push
dec
int3
add
push
mov
fisubrs
fimull
stmxcsr
in
pop
xor
and
sbbb
outsb
add
cmp
movsb
add
and
clc
jg
fs
jg
mov
dec
test
movd
movaps
int
push
enter
shlb
jle
xor
std
add
ror
test
decl
data16
push
sub
cmp
or
dec
mov
xchg
ret
adc
jnp
mov
loop
std
mov
aam
ret
or
dec
test
fwait
push
and
stos
sbb
int
add
ret
mov
jbe
and
mov
jle
mov
int
add
sbb
adc
repnz
sbb
out
add
out
sbb
jmp
mov
hlt
test
ja
rcll
sub
sub
nop
xor
cwtl
xor
add
pop
ljmp
push
mov
and
sbb
or
cmpsl
and
pop
and
pop
ja
sbb
add
data16
jl
and
add
in
and
jns,pn
inc
cmp
popw
dec
nop
or
cmp
jne
and
imul
sbb
nop
push
mov
push
push
xor
and
sbb
pushf
jns
in
pop
addr16
sbb
pop
sub
adc
mov
sbb
and
pop
rcll
shlb
push
pop
adc
shl
cmp
adc
jnp
out
jbe
je
jp
leave
xchg
xor
xchg
adc
mov
movsl
mov
sti
insb
lods
dec
add
or
push
pop
inc
cwtl
pop
cmp
test
jmp
dec
ucomiss
and
add
xchg
faddl
mov
jne
orl
pop
mov
dec
aas
inc
hlt
or
xchg
xor
pop
call
add
add
ss
xchg
jnp
nop
test
or
xor
rcll
cmp
or
push
sbbb
push
push
cmp
sbb
test
int3
dec
out
out
sub
repz
and
je
xchg
jg
enter
xchg
inc
sub
add
sbb
inc
jb
or
and
inc
jo
test
pop
sub
call
je
data16
aas
data16
adc
faddp
mov
movsb
or
pop
mov
ret
add
je
adc
jmp
add
ret
enter
js
sbb
jne
inc
pop
or
adc
add
pop
shr
arpl
pop
enter
loop
icebp
mov
dec
repz
rcl
mov
mov
inc
mov
adc
add
inc
hlt
lock
or
leave
and
pushf
or
add
icebp
and
fiaddl
dec
pusha
jnp
push
xor
jle
sub
add
roll
inc
in
cltd
jg
jb
sub
inc
sti
std
push
or
sub
adc
lods
ds
sub
or
mov
cmp
adc
je
cmp
jne
inc
cmpb
out
subb
add
cwtl
sbb
cld
ja
mov
inc
inc
and
adc
fistpl
jne
arpl
cmpl
ret
daa
xor
mov
arpl
cltd
mov
psubusw
inc
inc
ret
cwtl
xchg
mov
enter
outsl
addl
ds
popf
les
in
lock
shl
inc
xor
adc
shl
outsl
dec
mov
leave
es
loope
or
cmp
inc
mov
jmp
shll
sub
xor
lret
jne
inc
aaa
push
lds
mov
push
loope
xchg
inc
shll
in
pop
cmpsb
push
inc
jb
push
pop
xchg
call
jne
lret
push
pop
mov
lock
inc
sub
mov
jecxz
mov
inc
mov
pcmpgtw
inc
imul
adc
rclb
rclb
dec
push
lods
in
push
inc
aaa
add
adc
fidivs
sub
add
fists
jo
mov
push
lds
mov
sub
sbb
outsb
subb
incl
and
inc
adc
fsubrl
add
adc
aas
shl
or
sub
pop
or
pop
mov
adc
cmp
xor
push
pop
fimull
outsl
push
pop
pop
add
sbb
jne
rolb
inc
mov
imul
pop
and
enter
mov
ds
jp
xor
lret
or
inc
and
mov
arpl
jb
fcomps
and
enter
dec
insl
jno
and
lea
push
sbb
dec
mov
cs
pop
scas
in
ss
mov
or
fisttpl
lock
test
dec
push
jbe
sub
not
push
cmpsb
cli
aaa
pop
cmp
pushf
mov
cmp
jbe
mov
into
lea
cmp
push
lret
sub
mull
mov
sbb
push
adc
or
shll
add
mov
sub
sbb
fidivl
add
inc
cwtl
pop
je
jne
push
ds
inc
in
inc
xchg
pop
into
je
js
push
or
dec
mov
subb
add
sub
addr16
dec
pop
add
adc
mov
mov
int
add
push
mov
or
inc
add
fadds
jbe
mov
sub
mov
adc
imul
in
xor
adc
sbbl
js
adc
rcr
mov
ja
pop
jg
push
rsm
mov
mov
mov
adc
and
enter
push
pop
pop
rcrb
testb
add
fwait
jmp
or
add
add
jo
sub
jne
pop
or
cs
mov
int3
push
fwait
add
xchg
scas
addb
adc
lcall
outsb
pop
inc
imul
in
stos
test
xchg
push
sbb
scas
fadd
push
pushf
pop
pop
arpl
jmp
xlat
add
add
jg
insb
lods
lods
loopne
and
aaa
push
ljmp
in
mov
test
xchg
adc
push
push
dec
inc
out
add
lahf
fdivs
mov
outsl
js
or
pop
fstp
mov
in
rcrb
adc
push
rorl
sbb
add
inc
cmp
adc
idiv
push
mov
push
test
push
fnstsw
fldenv
ja
pop
jbe
lea
xchg
mov
adc
sbb
jp
addl
leave
pop
inc
push
cs
jb
jae
adc
push
clc
jbe
add
mov
adc
test
or
sub
add
jmp
loop
sub
add
add
jmp
test
jne
test
stos
loopne
clc
cmp
xorl
ja
ret
jbe
cld
inc
jnp
divb
dec
out
xor
pop
jmp
add
sub
push
test
cmp
and
hlt
stos
cld
pop
icebp
and
xor
cmp
dec
jecxz
mov
or
push
sub
ds
add
addb
adc
sbb
js
hlt
lods
aad
or
pusha
sub
add
insl
adc
add
inc
into
and
or
sub
fwait
mov
or
or
rolb
jns
xor
push
test
shl
popa
adc
data16
inc
jl
sbb
lods
cmp
pop
pop
add
jb
dec
ret
mov
daa
jmp
xor
hlt
push
xchg
push
lret
jnp
xchg
pop
loope
push
rcrl
push
add
sti
frstor
andl
leave
pop
dec
mov
mov
push
push
xor
dec
and
xchg
add
dec
jne
jmp
push
dec
lods
lods
xchg
repnz
adc
dec
es
jne
mov
test
or
xchg
inc
push
sbb
dec
pop
xor
jge
test
mov
xchg
sub
mov
xorb
push
shlb
jae
outsb
into
into
data16
adc
call
push
cld
jne
mov
push
cmp
jne
dec
cmp
int
jne
call
aam
add
cltd
test
mov
push
inc
incl
dec
or
adc
repz
repz
jmp
std
push
xor
cld
lahf
xor
sub
scas
adc
in
adc
daa
sbb
adc
inc
inc
inc
sahf
out
stos
ror
les
or
bnd
adc
inc
cmp
sub
out
push
mov
mov
push
cmpsb
sub
shrb
and
and
fists
or
sbb
pop
inc
mov
jo
lock
xor
lea
adc
pop
and
adc
add
nop
imul
adc
xchg
inc
push
xchg
and
or
dec
push
or
sub
pop
pop
dec
scas
shlb
mov
fildl
rol
inc
xor
mov
add
add
mov
xor
add
rcrl
pop
loop
stos
addb
inc
sbb
xchg
xchg
jge
pop
add
xlat
xchg
out
shlb
sub
iret
je
mov
ret
pop
adc
cmp
jg
add
mov
xor
inc
cmpsl
nop
mov
jo
mov
jb
call
push
push
cmpsb
icebp
lods
add
push
add
mov
inc
push
jae
out
test
cs
jg
mov
cmp
push
and
pusha
inc
or
mov
and
or
sub
add
pop
xchg
jo
popa
nop
pop
pop
push
sub
stos
add
sub
and
je
adc
andl
aaa
shrl
movsb
lds
rorb
sbb
push
sub
xchg
dec
cwtl
nop
ret
mov
je
pop
lods
dec
aam
addl
or
pop
lea
and
mov
adc
mov
mov
decb
add
clc
or
add
jp
adc
fbstp
fists
popaw
sti
fistps
lea
add
not
and
sub
inc
pushf
add
hlt
adc
pop
adc
xchg
rol
pop
pop
mov
loope
movsb
and
sub
push
add
add
push
push
or
adc
push
test
dec
ja
jne
int
fs
pop
mov
push
lcall
xchg
jmp
cli
sar
stc
or
in
sti
and
mov
inc
je
mov
cwtl
in
mov
mov
sbb
or
add
jmp
or
sti
mov
lock
inc
inc
push
pop
loope
roll
scas
mov
pop
add
mov
inc
cmp
jb
add
jae
movsl
dec
lods
loop
cmp
jl
add
or
fcomps
lea
pushf
outsb
int3
stos
push
add
hlt
mov
and
add
adc
add
iret
pop
push
testb
or
ret
shl
push
adc
jne
mov
jle
divl
lret
add
and
lock
iret
mov
stos
jo
and
sbb
or
and
jne
inc
xchg
push
or
ret
adc
and
pop
push
out
cmp
je
test
je
xchg
sarb
and
faddl
aam
xchg
pop
push
inc
ficomps
or
cld
and
and
inc
int3
add
xchg
push
xor
or
xchg
lock
in
cmpsb
cmp
ljmp
add
jg
jo
jne
and
add
aas
cmc
pop
mov
jo
inc
lret
cmpl
xchg
xor
jg
push
incb
mov
inc
jmp
cmp
fstp
mov
add
add
sub
push
test
scas
jmp
and
cmp
pop
push
xor
adc
lret
decl
or
and
adc
sbb
adc
pop
fmuls
scas
icebp
int
mov
js
adc
movsl
xchg
mov
nop
incb
dec
mov
and
je
lret
xchg
jno
loop
dec
cld
mov
dec
jp
sub
andl
scas
popa
add
or
push
test
xor
push
add
push
xchg
sub
dec
sub
push
shlb
shrb
stos
shll
adc
shl
cld
cltd
sbbb
std
mov
and
adc
sbb
mov
jns
adc
imul
or
mov
ja
lods
insb
adc
add
cmp
pop
xor
push
sbb
adc
scas
xchg
or
test
aaa
jne
mov
rcrl
lock
mov
inc
mov
dec
jne
fs
add
mov
gs
cmp
add
je,pt
add
adc
jae
and
add
shrb
xlat
mulb
hlt
enter
sub
dec
dec
add
add
mov
cmp
ret
xchg
rorb
dec
or
shrb
shlb
add
mov
insb
sbb
xor
and
loopne
ret
push
jne
add
lock
push
xchg
cld
fwait
lea
int
jo
push
adc
jb
lea
push
fsubrs
pusha
adc
or
adc
pushw
pop
cmp
sub
popa
dec
mov
sti
mov
mov
adc
in
or
sbb
mov
les
pushf
sbb
mov
jne
nop
adc
or
divl
add
pop
xorb
call
xchg
testl
test
adc
xor
test
es
in
stos
in
sbb
int3
mov
adc
or
mov
push
cmc
xchg
jo
mov
push
push
ficoml
mov
adcb
add
es
fmull
add
adc
add
push
into
xchg
pop
jp
mov
pusha
hlt
movsb
xchg
add
inc
jecxz
loope
cmpsb
sub
int3
add
push
ret
mov
out
sub
mov
mov
inc
cltd
nop
and
incl
mov
inc
ficomps
sbb
ds
push
or
sti
daa
rolb
push
frstor
loop
adc
jecxz
sbb
rcll
and
fsubl
push
or
add
push
push
into
and
jmp
stos
add
mov
mov
dec
shlb
out
mov
inc
mov
jne
ja
cmovg
or
xchg
test
subb
xchg
and
lods
js
dec
sbb
inc
mov
cld
scas
jb
ret
lret
out
push
dec
test
fiadds
in
inc
rcrl
sbb
adc
jmp
test
sbb
je
push
dec
or
cmp
pop
cld
push
push
rolb
jne
pop
ja
dec
dec
lret
sub
fwait
mov
idiv
decl
mov
sub
cli
add
pop
push
pop
xor
push
mov
dec
movsl
ljmp
xchg
inc
rorb
cmpb
adc
dec
or
movsb
mov
mov
loopne
dec
fs
fiaddl
pop
mov
mov
mov
mov
mov
int3
dec
arpl
mov
push
cli
fsubs
ljmp
in
sbb
inc
adc
mov
jns
or
repnz
add
or
ss
dec
clc
adcb
ret
mov
push
and
xchg
loopne
mov
jl
mov
mov
test
xor
test
sub
cmp
push
push
push
sub
mov
sbb
add
jbe
and
lods
add
addl
js
sub
dec
dec
pop
mov
mov
pop
jmp
xchg
jo
sub
je
inc
mov
adc
loopew
inc
cmp
clc
adc
js
outsb
clc
fs
sub
jmp
daa
adc
inc
sbb
sbb
mov
rorb
popa
nop
call
and
jbe
jo
jmp
dec
je
mov
sbb
dec
jne
push
pop
inc
mov
or
push
inc
push
inc
lea
or
mov
dec
push
push
inc
push
outsl
add
dec
mov
sub
push
push
push
lea
push
test
jle
testb
push
add
mov
jo
xchg
push
fimull
loopne
sbb
push
jne
mov
push
xchg
shl
pop
add
dec
cmpb
add
xchg
inc
jne
inc
mov
ljmp
in
sbb
jbe
and
test
and
mov
movsb
dec
xchg
cmovp
andl
cmp
pop
je
jg
mov
mov
push
jo
adc
clc
loopne
dec
mov
iret
or
js
push
pop
cmp
jbe
leave
add
ja
in
imul
pop
rorb
add
dec
inc
sar
inc
pop
push
jmp
sub
dec
mov
mov
push
pop
out
xor
push
fdivrs
loope
adc
inc
test
push
movb
inc
add
cld
mov
jns
jmp
cmp
jae
pop
add
push
outsl
adc
ljmp
jne
test
mov
loopne
int3
inc
sub
mov
loop
pop
lea
add
sub
arpl
mov
sbb
mov
push
push
adc
test
mov
dec
fst
fsubrl
add
xor
je
push
sbb
dec
and
push
add
loop
or
sar
clc
mov
pop
jle
sub
imul
adcl
rorb
sub
xchg
and
dec
dec
jae
int
jb
jo
addr16
xor
push
pop
lods
pop
mov
decl
das
jle
loopne
jns
xor
out
adc
dec
push
pop
dec
incb
dec
stc
push
pop
sub
sub
xchg
leave
test
mov
push
push
pop
xchg
movsl
lcall
scas
sbb
mov
jne
imul
into
cmp
lret
push
dec
jnp
jo
add
sbb
push
inc
lods
pop
movsl
loopne
movsl
stos
sbb
adc
cli
orb
mov
sbb
leave
ret
add
jl
inc
cmp
test
int3
loope
push
jns
push
data16
push
mov
cmp
inc
jns
adc
stc
xchg
clc
push
mov
stc
mov
mov
cmc
int
pop
cltd
mov
fs
mov
lods
pop
lcall
call
movsl
adc
or
mov
cs
add
rcll
sbb
cmp
addr16
add
and
movsb
cmp
stos
cltd
pop
inc
mov
inc
add
sbb
mov
jno
daa
mov
mov
mov
stos
xlat
je
cmc
add
and
or
stos
outsl
insb
insl
push
je
cltd
pop
jne
pop
sets
push
fcmovne
push
lret
int
push
sbb
push
inc
mov
jg
fldl
pop
das
in
add
aam
or
push
fisttpll
imul
mov
lret
inc
loopne
rcl
dec
xchg
mov
test
pushf
ret
lock
sahf
adc
cmp
rcl
stos
mov
mov
jl
xor
dec
dec
add
dec
sub
jno
aaa
jb
ds
call
mov
test
push
popa
cmp
or
sub
xchg
and
hlt
fs
mov
adc
xchg
mov
adcl
sbb
xchg
xchg
cli
jnp
icebp
adc
movsb
adc
aam
pop
lret
movsb
sbb
sbb
push
mov
xorb
pop
or
lea
dec
fsubs
push
jo
or
xor
in
dec
mov
dec
xor
loop
push
in
or
and
or
sub
pop
ret
ficoms
sbb
sbb
push
add
and
fisttpl
jmp
adcb
loopne
mov
fbld
pop
add
push
in
push
out
mov
add
mov
cli
scas
in
jle
mov
fwait
or
test
cmpb
cmp
or
call
pop
pop
dec
or
push
lock
test
sbb
adc
lea
dec
jmp
pop
jae
and
or
dec
in
add
jl
cmp
stc
xlat
repnz
jle
sbb
or
lock
add
push
mov
clc
and
adc
ja
mov
add
les
xor
into
je
fstpt
pop
jne
mov
jno
addr16
dec
jns
mov
adc
enter
add
stos
ret
mov
daa
dec
leave
sbb
add
add
sahf
aad
leave
enter
lret
mov
mov
mov
scas
add
push
aad
mov
int3
and
xchg
jp
mov
in
cmp
int3
add
fs
jge
cli
dec
inc
jo
add
cmp
xchg
in
aaa
push
clc
jb
imul
es
fistl
pop
and
dec
jbe
icebp
pop
pop
jne
push
les
test
mov
add
or
rep
jmp
add
fcoml
pop
xor
or
add
test
cmp
mov
push
xor
es
add
jnp
adc
and
cmp
xor
jbe
xchg
mov
or
lods
adc
xlat
mov
dec
xchg
add
cmpsb
nop
movsb
rcrb
add
xchg
or
push
jl
je
out
cmp
fs
push
mov
mov
sahf
out
sahf
call
lock
out
hlt
hlt
clc
clc
cld
js
lcall
mov
jmp
jns
fdivs
sub
nop
inc
pop
sti
push
andl
inc
and
mov
ret
push
lea
jl
cld
pop
and
repnz
cld
out
cmp
neg
and
pop
fimuls
sub
in
out
sub
inc
pop
nop
push
push
je
pushf
outsb
xor
fiaddl
jl
mov
fstl
sahf
inc
xchg
push
ficoms
push
add
imul
out
mov
xor
xorb
push
clc
push
add
push
adc
iret
repz
and
bound
sbb
sbb
repz
adc
adc
repz
repz
or
add
dec
enter
or
and
aaa
push
add
pop
or
add
call
sub
cmp
adc
movsl
pop
orl
jno
adc
stos
push
lahf
and
fists
fmull
or
sub
testb
jne
pop
mov
sbb
pop
add
sar
pop
loope
clc
aad
inc
xor
or
pusha
xchg
add
mov
and
jne
push
sbb
xor
popa
push
stc
mov
loopne
mulb
ss
mov
and
add
mov
or
and
enter
xchg
jbe
adc
xchg
rcr
and
leave
sub
repnz
test
pushf
dec
or
lods
pop
mov
push
adc
or
jmp
idivb
fbld
mov
cmp
int3
shrl
imul
jbe
sbb
sbb
data16
in
icebp
dec
or
lock
xchg
inc
imul
xchg
js
pop
ja
hlt
rolb
push
icebp
fwait
std
inc
jbe
jbe
scas
push
mov
aam
insb
lods
loopne
push
roll
adc
test
cld
add
and
push
xor
dec
or
inc
dec
dec
addps
loopne
cmp
push
jp
ljmp
jne
ret
int
sbb
daa
mov
xlat
shrl
pop
or
mov
cltd
je
fimull
or
jp
pop
lret
jmp
inc
jecxz
or
loope
iret
std
add
mov
and
push
mov
adc
inc
stos
int
pop
pop
inc
ss
push
or
dec
stc
push
add
adc
roll
daa
dec
test
test
inc
pop
cwtl
lock
inc
dec
ss
jnp
nop
mov
mov
pop
les
test
cmp
dec
push
rcrl
inc
add
cmp
xor
cli
add
je
sub
pop
cld
jmp
cmpsl
pop
xor
sub
rorl
shlb
push
rep
mov
dec
ljmp
push
pop
sar
push
rolb
stos
pop
pop
fnstcw
jl
adc
jo
stc
std
pop
cmp
cwtl
or
cld
jns
jns
fs
popl
loope
lods
test
add
mov
mov
in
ja
mov
add
cmp
lods
ret
les
js
sarb
mov
sub
inc
out
adc
adc
cs
sub
dec
fwait
dec
jmp
pop
lcall
pop
notb
js
lret
or
push
pusha
out
leave
not
xor
mov
test
add
call
or
xchg
andl
inc
dec
inc
adc
adc
pop
inc
sbb
fsts
pop
inc
sub
mov
mov
fcoml
rclb
int3
jle
clc
or
xchg
xchg
xchg
enter
shrb
les
add
hlt
in
lcall
call
cwtl
push
cmpsl
xor
jo
das
arpl
inc
and
pop
in
xchg
xor
sahf
clc
jno
insl
push
scas
push
xchg
jbe
mov
jmp
inc
and
mov
inc
cmp
imul
xchg
sbb
lods
movl
pop
incl
into
test
testb
inc
outsb
test
mov
push
mov
das
les
test
jb
test
inc
or
cli
add
dec
or
fwait
pop
push
cltd
jne
cmp
jecxz
int
or
push
clc
test
xorb
cmpsl
inc
mov
xor
adc
jbe
das
test
fcoml
inc
call
lods
ret
test
push
push
or
pusha
testl
sbb
movsb
leave
frstor
divl
cli
cmpsb
xor
adc
dec
push
je
mov
sbb
clc
dec
adc
and
int
sbb
pop
and
adc
and
mov
inc
pop
test
mov
ror
mov
movsb
adc
add
sbb
push
push
pop
mov
and
inc
fsubl
enter
push
push
mov
fnstsw
ss
inc
out
dec
jmp
popa
and
mov
inc
push
in
lahf
xchg
pusha
popa
or
in
inc
nop
or
xchg
lret
in
shl
fdivrs
cmp
cmp
add
or
nop
adc
fsubs
jne
cmpsl
xchg
gs
jp
data16
pop
fidivl
leave
xchg
call
loopne
push
cmc
cmp
fs
pop
imul
mov
mov
lahf
lea
mov
lar
mov
loopne
ljmp
pop
sbb
sar
pop
lods
jno
pusha
pushf
movsb
in
xchg
push
mov
jbe
rolb
cmp
mov
or
clc
les
lret
fldt
je
or
je
or
mov
popa
adc
jg
idivb
sbb
pop
or
add
jb
add
sarb
mov
aaa
and
ss
mov
adc
xchg
jo
aas
clc
cs
add
adc
push
imul
dec
lock
pop
mov
inc
or
ja
test
movsl
mov
mov
cmp
leave
hlt
pop
sbb
or
stc
fidivl
es
or
inc
insb
mov
lock
sbb
test
in
or
loope
insb
jle
pop
ret
mov
sub
adc
and
js
add
aaa
mov
cmpb
and
xor
movsl
je
in
or
incl
insb
cmp
sbb
imul
jae
and
pop
ds
test
adc
mov
dec
call
dec
jge
pusha
jmp
nop
and
jns
das
add
jecxz
push
inc
je
scas
adc
out
pop
push
or
add
lcall
inc
sub
mov
outsl
xor
adc
pop
jge
push
arpl
testl
xor
mov
jo
xchg
aaa
iret
aad
jbe
mov
add
mov
and
push
mov
sti
inc
push
movsl
shrl
push
sub
in
add
fdivl
add
fisttpll
adc
ljmp
inc
inc
push
insl
cmp
or
mov
arpl
cmp
sub
loopne
div
dec
mov
pushf
dec
ss
cmp
mov
adc
jo
or
push
or
mov
ret
stos
sub
or
popf
push
mov
mov
inc
or
pop
mov
inc
lods
hlt
xor
pop
dec
push
lods
iret
addb
xor
mov
je
push
xchg
xlat
lock
push
sbb
cmpsb
jecxz
inc
sub
jp
xchg
add
inc
gs
test
addr16
xchg
xchg
call
or
sub
cmpsb
ss
sbb
push
enter
dec
xor
xorb
fildll
mov
loope
jo
dec
leave
enter
or
adc
gs
pushf
jle
int3
lds
les
test
push
stos
add
add
jmp
pusha
shlb
movsb
addr16
mov
jmp
cmp
jle
popa
mov
lds
and
pop
add
mov
sub
rcll
adc
incb
add
shr
push
push
xor
push
xor
mov
inc
cld
adc
and
sbb
mov
sub
inc
sbb
xor
mov
jo
sbb
rolb
push
jne
popf
push
push
inc
cltd
or
scas
data16
call
nop
addl
adc
mov
inc
stos
push
das
fldcw
hlt
sub
test
jae
pusha
cld
or
pop
mov
add
pushf
mulb
push
push
arpl
and
pop
ret
push
into
jbe
das
push
xor
pusha
mov
mov
inc
mov
rcll
dec
push
js
rcll
jl
inc
cld
jmp
dec
nop
lcall
push
cltd
dec
dec
sbb
pop
jl
jae
pop
mov
mov
mov
ficompl
sbb
nop
and
jge
sub
clc
xor
and
mov
inc
dec
sbb
mov
or
mov
int
mov
test
test
pop
push
inc
add
sbbl
xor
xchg
mov
mov
dec
repnz
sahf
add
mov
sub
sub
inc
cmp
push
dec
in
imul
into
sbbb
adc
cmc
movb
inc
jmp
nop
rclb
mov
jmp
dec
pop
and
dec
sbb
dec
fs
ret
fists
cmp
sub
cli
xchg
add
sub
mov
sub
cmp
test
loope
subb
or
decl
ds
in
jle
or
aas
dec
pusha
cmp
fs
fidivrs
mov
fs
xor
leave
and
lcall
xor
add
xor
inc
aam
js
cmp
addr16
sub
sbb
pushf
jmp
cmp
pop
mov
out
pop
jl
pop
loope
xor
jg
jmp
in
dec
andb
es
push
pop
int
dec
rcrl
mov
pop
jo
xor
sbb
arpl
imul
jle
in
mull
xchg
xor
call
mov
movsb
adc
mov
xchg
pop
sbb
mov
pop
divl
lcall
inc
add
push
test
insb
push
or
lods
ss
inc
cmpsb
mov
int
jb
ja
jbe
or
pop
xorb
out
nop
ja
ja
imul
push
xchg
ja
ja
add
lret
adc
js
js
mov
mov
js
dec
shll
jns
jns
xor
sarl
jns
imul
daa
push
mov
xor
outsl
mov
testb
sub
adc
sbb
mov
icebp
pop
ljmp
pop
call
mov
jno
jle
or
adc
nop
ficoms
mov
push
jbe
push
jae
or
pop
pushf
in
lret
and
push
xchg
nop
outsb
xor
dec
pop
jecxz
lcall
and
dec
in
push
insb
flds
cmp
push
ds
push
or
and
add
push
or
mov
lods
push
push
idivl
pop
in
mov
push
inc
add
push
and
mov
test
jb
into
js
pop
add
mov
xlat
and
add
lcall
and
add
push
add
sbb
cwtl
add
or
add
mov
mov
in
int3
push
lods
adc
nop
sbb
pop
call
rcrb
fsubrl
adcb
es
add
pop
fcomp
sub
push
sub
loopne
jo
mov
iret
std
sbb
pushl
insl
and
lahf
xchg
fstp
xchg
cmp
je
mov
stos
mov
stos
mov
xor
or
adc
adc
jmp
inc
cltd
in
gs
loopne
loopne
xchg
icebp
es
jmp
sbb
sub
jmp
and
jecxz
imul
or
loope
sbb
nop
push
sub
pop
out
and
pop
sbb
add
gs
xor
ret
dec
popa
xor
cs
push
push
jb
push
add
lds
add
push
xchg
add
or
mov
call
shrl
out
pop
std
popl
mov
xchg
jmp
imul
or
inc
adc
lods
xchg
push
int
inc
xor
sub
int
or
mov
icebp
and
jge
sti
sbb
pop
push
outsl
ss
add
xchg
xor
pop
jge
cmp
sub
lea
into
inc
add
fcmovnb
sar
fildll
fnstcw
inc
or
stos
mov
das
sbb
jne
pushl
cwtl
daa
xchg
push
jo
sbb
pop
pop
push
add
insl
subl
sub
jmp
pop
mov
je
fs
mov
mov
loopne
sbb
divb
cmp
rcrb
mov
aaa
sub
fcmovnb
adc
add
inc
loop
cmc
jo
in
in
pop
lods
push
jb
push
jecxz
enter
sub
mov
add
pop
icebp
pop
ret
inc
inc
movsl
and
jb
adc
mov
mov
inc
or
outsl
mov
push
jmp
push
ret
cltd
dec
mov
pop
jl
shlb
filds
sbb
hlt
or
int3
push
addr16
push
shrl
cmp
sarb
clc
mov
rcll
sub
pop
fs
fwait
lea
xchg
test
mov
js
mov
adc
dec
and
or
imul
dec
test
xchg
adc
fwait
and
xor
bound
orb
or
movsb
add
iret
xor
mov
shrb
sbb
add
sbb
aam
fs
mov
cld
mov
in
sti
addb
fs
dec
xchg
inc
test
add
or
push
in
cs
add
jg
orl
andl
cmp
xchg
add
mov
jo
jmp
cmp
pop
inc
xor
dec
mov
xchg
and
mov
add
push
inc
popa
cltd
xor
das
and
stos
sarl
push
add
jecxz
adc
rcrl
mov
ja
adc
or
mov
sub
roll
xor
push
jle
adc
lret
test
mov
sub
mov
dec
or
or
dec
mov
push
dec
pop
addb
int
ret
dec
mov
outsb
test
cld
cli
mov
push
jmp
pop
and
adc
cmp
jbe
jl
dec
jecxz
ds
std
jae
inc
cmpl
jne
push
cmp
xor
iret
das
nop
jge
adc
adc
out
arpl
dec
movsl
or
sahf
lods
clc
dec
movsl
adc
hlt
ret
fdivl
jno
sub
add
mov
imul
imul
in
xchg
sub
jb
test
enter
or
add
pop
adc
inc
inc
cmp
push
lahf
sub
push
loopne
pop
ja
mov
out
adc
mov
test
adcb
nop
cmpb
shll
add
inc
push
pop
ja
pop
repnz
dec
mov
sar
adc
push
out
mov
xor
ret
adc
mov
or
sub
xchg
pop
add
stos
adcb
stos
xor
les
xchg
pop
sbb
shr
pushw
mov
add
dec
cmpsb
pop
xor
scas
and
push
add
lods
loopne
icebp
mov
push
jb
inc
rcr
cmp
or
lea
adc
pop
and
add
sbb
adc
insl
jb
jno,pt
cmp
xor
inc
add
in
or
inc
cmp
in
das
es
pop
xchg
push
pusha
aam
cmpsl
lds
movsb
and
push
cmpsb
cltd
in
rcrl
or
xchg
xchg
mov
enter
xchg
js
int
push
dec
push
jbe
fwait
incl
dec
sbbl
and
clc
adc
cwtl
lret
mov
je
dec
insb
xor
xor
loope
push
mov
lret
int3
mov
jb
in
int
add
dec
in
pop
orb
push
add
mov
jne
pop
add
std
add
in
and
mov
shrb
stos
add
js
sbb
xchg
cmp
in
mov
sub
out
add
mov
mov
jp
stc
inc
andl
sub
call
xchg
call
leave
xchg
rcll
xor
ja
adc
lcall
insl
pop
stos
movsb
xor
mov
xchg
iret
and
fdivrl
dec
push
nop
inc
call
and
cwtl
in
in
lods
pop
es
and
dec
fcoms
pop
dec
or
push
xor
and
movsb
cwtl
dec
add
aam
in
inc
add
aam
pop
sub
xor
adc
imul
jb
aam
dec
mov
js
imul
test
in
outsb
or
xchg
test
lock
pop
lods
xchg
push
shrb
call
add
or
fxch
cmpsb
fsts
or
cmc
test
push
in
sar
and
inc
addl
into
sbb
jns
test
insb
arpl
pop
pop
sbb
lods
cmp
pop
sbb
cmp
out
mov
mov
xchg
inc
out
or
xchg
les
cld
lret
aam
arpl
xor
xchg
ret
call
arpl
mov
fwait
rcrl
sub
mov
adc
sbb
mov
insb
das
mov
jge
mov
adc
or
nop
dec
add
int3
adcb
into
adc
cmp
mov
jg
loop
test
mov
mov
jp
pop
add
dec
iret
jbe
fldl
jne
or
std
cmp
sbb
sbb
adc
fiaddl
mov
jne
push
jo
sbb
shll
add
xchg
in
mov
mov
jp
push
add
add
mov
mov
pop
or
mov
movsb
je
test
or
or
push
out
cmp
push
fisubrs
adc
or
lock
add
in
and
ret
xor
push
and
mov
inc
pop
mulb
sbb
fs
or
push
stos
add
add
into
mov
and
inc
add
sbb
push
add
or
sbb
enter
add
cmp
sarb
mov
outsl
jecxz
pop
push
loopne
mov
rolb
out
cli
mov
and
fistps
enter
insl
mov
ja
sub
ds
or
push
inc
add
fs
cs
jbe
loopne
ficoms
push
push
dec
xor
add
jb
insb
sub
pop
cmp
push
push
imul
fsubl
leave
jbe
movlps
orb
mov
sti
xchg
into
imul
and
mov
cmpsl
mov
lahf
ja
jnp
mov
sub
mov
cmp
add
lea
cmp
ja
mov
xor
sbb
and
les
outsb
cld
jmp
sub
sbb
popa
imul
clc
mov
fcmovnb
inc
fs
loop
ja
mov
outsl
sarb
mov
push
cltd
inc
outsl
add
and
call
js
rorl
cmp
cmp
mov
mov
jns
pusha
scas
xorb
or
jmp
mov
mov
dec
xchg
movl
push
inc
pop
cmp
addr16
outsb
inc
std
jne
lods
jmp
sub
cmpsl
xor
cmp
les
add
cmp
inc
inc
mov
cmp
cmpb
sbb
push
push
jnp
jnp
andb
test
mov
sbb
xor
ss
incl
cld
out
jb
or
inc
cmpsb
movsl
push
jmp
dec
lea
lds
ss
mov
and
xchg
ljmp
inc
inc
jnp
or
mov
push
call
ret
inc
shl
jne
test
jmp
inc
dec
sub
inc
test
jge
imul
loopne
mov
aaa
ficoml
outsb
enter
jg
test
push
jmp
loopne
subb
inc
cmp
lcall
and
mov
jo
cld
jge
rolb
loopne
xorb
push
sbb
sub
xchg
push
fs
cmpsb
mov
inc
sub
add
jg
cltd
add
icebp
mov
jo
orl
xchg
jle
sbb
and
shr
add
inc
jbe
mov
inc
dec
jne
jg
add
push
scas
stos
mov
jmp
loopne
sbb
addr16
mov
jmp
cmp
vandps
repz
push
push
mov
sbb
lcall
imul
and
push
push
call
pop
mov
sarl
rcrb
xchg
loope
pop
jo
movl
pop
ret
sbb
dec
add
cmp
pusha
dec
pop
push
lret
sti
xlat
testb
insb
ljmp
add
xor
and
sub
or
btr
mov
add
ret
ror
dec
out
inc
sbb
idivl
call
or
mov
add
dec
jmp
stos
xchg
int
sub
ljmp
out
and
sbb
push
ljmp
popf
inc
popw
loop
and
imul
xchg
outsb
inc
xchg
loopne
lea
inc
add
jle
pop
movsl
push
and
cmc
inc
lret
jns
cmp
hlt
insl
sbb
ds
push
sbb
sbb
lea
sub
test
mov
mov
fisttps
jnp
je
popf
and
xor
ret
adc
xorb
addb
sbb
adcl
xor
xor
mov
loopne
rcl
ret
je
cmp
jo
aam
icebp
mov
pop
sbb
icebp
adc
out
rorb
mov
sarb
das
adc
fidivl
inc
inc
sbb
sub
dec
and
push
ljmp
shlb
jl
sbbl
cmp
cwtl
daa
sbb
xchg
jbe
dec
ljmp
push
lcall
add
pop
cld
inc
add
inc
and
jns
mov
cmp
mov
fisubs
jp
call
fstp
cmp
fcomps
xchg
pop
jbe
in
or
pop
pop
loope
push
flds
cwtl
and
in
push
cmp
sub
stos
and
or
push
call
insb
leave
mov
decl
lods
fimuls
mov
dec
pushf
xor
pop
ret
or
add
mov
test
dec
add
fsubrs
or
inc
cwtl
fsubrl
cmp
je
and
sti
adcb
push
inc
adc
xor
mov
pop
xor
andl
mov
push
movl
xor
pop
data16
cmpb
jbe
inc
or
add
jg
test
add
test
mov
inc
sub
inc
mov
mov
xchg
mov
aas
mov
inc
add
push
imul
mov
or
adc
ret
in
mov
and
dec
xor
sbb
enter
push
push
ds
xor
js
xor
xchg
push
clc
adc
out
sbb
or
xor
rcr
pop
test
fsubl
adc
mov
loopne
insl
add
sbb
add
fadd
fldt
xor
add
nop
cmp
inc
cwtl
lds
cmp
cmp
and
and
sbb
das
xor
add
push
dec
mov
loopne
lahf
mov
jbe
and
pop
cmp
unpcklps
or
sarl
add
mov
loope
add
popf
cmp
adcl
ror
ror
dec
push
push
subl
outsl
mov
add
mov
mov
mov
pushf
cmp
cmp
inc
bound
addr16
es
adc
aam
mov
mov
mov
push
lcall
cmp
mov
and
or
xchg
mov
sub
or
xor
pop
fldt
xor
out
jl
out
xchg
arpl
fwait
inc
test
add
fwait
pop
shlb
push
add
cmpl
jo
pop
mov
xor
add
lods
xchg
insb
xchg
add
fisttps
mov
or
jmp
lds
inc
js
sub
mov
vmovd
push
dec
and
fdivr
xor
daa
sbb
mov
fst
or
and
add
sbb
or
mov
mov
fisttps
xchg
push
icebp
push
bound
test
add
adc
outsb
push
xchg
adc
ret
and
dec
sub
push
or
shll
enter
or
cmp
dec
ds
xchg
lock
clc
testb
mov
test
pop
mov
mov
loopne
mov
jge
pop
push
js
sbb
push
add
sub
lret
test
jecxz
sbb
cmc
add
dec
lret
jo
je
push
or
test
add
fcoml
cs
arpl
push
add
jo
test
rcr
push
adc
push
call
lock
rcl
ja
leave
sti
nop
pop
xchg
cmp
outsl
arpl
jno
fiadds
jmp
addb
cmpl
addr16
sbb
nop
inc
jo
mov
das
add
pop
jg
rorl
cs
sbb
dec
add
and
sbb
mov
or
adc
shll
mov
lock
push
xchg
and
shll
addl
cmp
call
aas
mov
das
cmp
cmc
or
imul
xor
inc
mov
imulb
xchg
jmp
call
or
orb
xchg
inc
push
les
jns
mov
mov
clc
bound
cld
fmull
fstl
mov
sbb
push
hlt
xchg
jne
lea
dec
mov
and
repz
loopne
mov
mov
iret
repz
rcll
aaa
cs
loopne
cmp
std
push
lcall
pop
sub
dec
mov
mov
testl
dec
movsb
out
push
mov
mov
and
lret
into
jne
inc
cmc
mov
add
and
out
push
and
inc
mov
pop
out
dec
sti
or
je
push
cltd
jmp
inc
faddl
or
ljmp
and
or
inc
test
fisubrl
jmp
xor
jp
xchg
and
ret
and
push
xchg
inc
aaa
mov
test
jmp
ret
pusha
adc
mov
sub
or
ds
orb
inc
push
sub
js
mov
int
inc
xchg
xchg
push
jl
lret
in
mov
fadds
pop
cs
call
dec
mov
jg
std
lods
std
lahf
mov
xor
fstpl
sub
sbb
mov
sar
cmc
mov
sbb
lret
cmp
stc
orl
jno
pop
push
jle
idivb
arpl
dec
sti
mov
mov
out
cwtl
cmp
call
cld
cmp
xchg
dec
mov
cmp
mov
mov
mov
popa
xor
insl
xchg
dec
fdivl
jl
xchg
mov
or
xchg
jl
or
inc
test
or
notb
add
xorl
addb
mov
test
pop
cld
in
es
inc
pop
fimull
mov
mov
add
xchg
dec
add
cmp
lods
es
jo
xchg
push
sti
fiaddl
mov
push
or
je
adc
push
cmp
popf
adc
mov
dec
aas
insb
jne
inc
sub
pop
aad
pop
and
ss
cmpb
inc
outsb
das
xchg
movl
inc
mov
movsl
xchg
inc
push
mov
repnz
rclb
imul
cmpsl
test
rcrl
dec
push
ds
test
adcb
js
inc
cmp
mov
sub
dec
loopne
popa
xchg
loopne
lea
sbb
inc
inc
scas
incb
xchg
jecxz
clc
or
add
sti
lock
cmp
pop
mov
or
mov
mov
jle
ror
nop
cmc
push
inc
lea
js
xor
inc
cmpsl
jo
cmpsl
nop
dec
push
xchg
cld
sub
lret
xchg
cwtl
add
jnp
push
cwtl
iret
cmp
shlb
inc
xor
jo
pop
push
jmp
out
test
push
popa
sub
stos
or
mov
push
fldcw
dec
xor
mov
daa
mov
ljmp
out
add
xor
mov
cld
popa
xor
pop
movbe
imul
push
jp
xchg
jbe
enter
mov
or
sub
push
or
add
or
call
or
inc
push
mov
in
lcall
sub
sub
imul
test
sbb
ret
push
dec
popa
shll
sti
cmp
mov
icebp
push
pusha
out
push
sti
adc
jp
dec
sahf
icebp
add
push
inc
out
imul
std
pusha
popf
push
add
ja
jne,pn
sbb
rclb
andb
mov
push
cmp
and
cmpl
mov
xor
call
loop
mov
pop
mov
mov
call
in
ret
adc
repnz
mov
mov
mov
sub
sub
lea
enter
scas
push
imul
je
push
pushf
push
sbb
inc
cmpl
stos
adc
rorl
dec
out
dec
cltd
mov
dec
add
jl
dec
loope
cld
scas
test
loope
inc
daa
add
clc
imul
jo
inc
add
pop
mov
enter
aad
pop
sub
push
xchg
rol
bnd
sbb
lret
inc
dec
dec
shrl
or
dec
ja
nop
pop
inc
dec
adc
pop
or
orps
imul
test
inc
and
es
sub
fstps
rolb
inc
sbb
dec
loope
pop
sub
sarl
or
outsb
sub
aas
dec
data16
sub
xor
sub
jmp
dec
pop
in
adc
dec
call
test
or
dec
jno
push
sub
sbb
jmp
test
sub
js
and
out
in
pop
repz
cmp
cmp
push
clc
test
jne
jmp
push
clc
mov
dec
mov
sbb
or
xchg
xor
dec
rol
cmp
pop
lods
in
addr16
rclb
adc
fcoms
fisttpl
fstpt
sbb
inc
and
mov
je
push
push
mov
mov
sbb
mov
int3
nop
xor
sub
loope
xchg
sub
push
dec
or
shr
int
or
mov
inc
pop
mov
inc
add
addb
pop
adc
cs
add
adc
test
mov
xor
std
lea
movsb
cld
xor
xchg
sti
lret
and
pop
imul
cmpsl
inc
add
push
jge
daa
cmpsb
sbb
repz
js
testb
push
sbb
movsl
push
leave
fcoml
push
xchg
add
inc
add
or
or
inc
push
ret
popa
xor
sub
mov
arpl
leave
stos
push
mov
rol
pop
or
inc
xor
popa
fs
lds
xchg
push
stc
add
pop
xor
adc
jo
pop
lret
push
imul
or
xchg
inc
mov
mov
lock
add
inc
sub
mov
dec
xchg
imul
xor
and
in
add
aad
pusha
in
push
push
das
scas
movsl
cmp
out
in
aad
lods
scas
mov
push
push
out
xor
scas
jge
out
mov
adc
and
inc
dec
xor
out
in
enter
in
aad
xor
inc
aaa
add
adc
test
test
mov
into
xchg
inc
push
push
cmp
repz
xchg
push
push
and
movsb
inc
cmpsb
shll
mov
and
pop
aad
test
leave
enter
add
pop
pop
dec
inc
lea
xor
or
cmc
movsb
rol
mov
sbb
in
xor
xchg
push
lea
mov
and
or
jb
movsb
jg
xchg
cmp
in
add
mov
mov
add
and
mov
adc
inc
mov
mov
ds
mov
in
or
mov
je
cmpsb
cmp
test
xchg
dec
mov
cmp
dec
in
jne
add
repnz
adc
out
pop
leave
adc
test
xor
lods
lods
test
sbbb
fisubs
rorb
jb
hlt
adc
pop
pop
inc
mov
add
jbe
cmpsl
stc
cmp
push
mov
jo
mov
ss
ss
daa
clc
add
mov
mov
mov
ret
icebp
inc
add
clc
xor
add
roll
and
sbb
adc
push
xor
xor
jle
or
pop
pop
sub
mov
push
popa
mov
pop
std
xlat
sbb
lahf
push
sbb
ds
stos
lods
aad
imul
in
test
or
iret
push
jmp
ja
fiaddl
stos
cwtl
add
push
js
int
jg
mov
xor
sbb
xor
pop
adc
or
pop
mov
add
mov
test
testb
shlb
cld
xchg
cltd
adc
jne
jns
xchg
mov
jmp
add
test
pop
and
add
mov
and
add
or
or
clc
arpl
adc
in
mov
inc
call
test
mov
add
xchg
popf
or
je
jmp
outsb
and
rol
std
or
sbb
lret
or
and
push
dec
mov
and
fdiv
xor
out
inc
aam
mov
ret
or
addb
xor
jne
lea
mov
add
sub
mov
sbb
data16
and
stos
bound
sbb
lock
cmp
ljmp
or
or
outsl
nop
xchg
dec
hlt
mov
test
jne
jo
call
inc
sub
cmp
inc
xchg
add
or
mov
sarl
push
fldl2e
scas
and
add
sub
cs
mov
pusha
pop
clc
sbb
lret
jp
jg
jmp
inc
cmp
mov
add
mov
inc
lcall
ror
mov
jmp
fs
xor
add
xchg
stos
add
jmp
scas
xchg
mov
pop
nop
push
jl
mov
add
xorb
sbb
cld
cmpl
jne
lret
add
cmp
out
or
cmp
xchg
mov
mov
ss
add
push
xchg
dec
pop
test
cmp
lock
add
imul
add
adc
jae
xor
mov
xchg
test
fnsave
cmc
cmp
jne
lock
scas
cmpsl
xchg
xor
pusha
push
fbld
test
andl
out
orl
or
stc
mov
fs
fs
inc
cmpl
gs
sub
pop
subl
or
pop
cmp
lea
ds
xchg
xchg
xchg
push
push
mov
cmp
jmp
pop
pop
mov
je
call
lret
addl
sbb
mov
sbb
jp
cwtl
rolb
and
and
xor
xchg
mov
add
sbb
mov
stos
sarb
stos
mov
or
imul
add
sbb
sti
push
ret
mov
push
clc
cmp
sarb
inc
sbb
inc
mov
pop
pop
xchg
inc
push
adc
pop
adc
lods
inc
sahf
cmp
gs
jmp
outsl
mov
jbe
add
gs
leave
inc
call
out
outsb
cmp
cmp
lea
pop
mov
imul
dec
and
xor
pop
test
mov
jne
dec
adc
or
add
inc
push
sbbl
pop
orl
or
rol
rolb
cmpsb
stos
add
xor
adc
push
push
pop
pop
xchg
in
adc
movsl
test
ret
gs
cmp
test
mov
enter
or
jne
dec
rorb
mov
cmpsb
fmull
in
push
fnsave
dec
add
sub
fimull
movsl
adc
js
fidivrs
add
inc
cs
je
cmp
jb
push
add
outsb
int
mov
stos
or
js
and
cmp
xor
out
ljmp
push
popa
push
pop
jle
xorl
test
and
cld
add
mov
push
ret
mov
push
mov
test
or
rcll
pop
cli
sahf
dec
in
sub
sarb
pop
and
fs
cmc
dec
sub
xor
push
pop
mov
mov
sarl
mov
or
clc
enter
mov
pop
clc
int3
mov
mov
pop
cld
push
mov
jae
data16
jg
push
and
aas
lea
add
add
cmp
push
lahf
jbe
jp
jns
orl
push
and
mov
mov
jbe
mov
and
cmp
js
cli
enter
push
pop
push
push
je
cltd
enter
sarl
lea
push
fldcw
jbe
mov
push
test
or
pop
out
dec
inc
jae
dec
jne
call
inc
push
pop
push
int
xchg
dec
add
fwait
mov
lea
lock
or
std
pop
push
mov
movw
mov
adc
rcrl
sbb
mov
xchg
pop
dec
inc
lock
movb
push
adc
inc
inc
dec
mov
mov
lret
sbb
pop
out
addr16
add
mov
cltd
rcr
jl
cmp
fs
aad
addl
push
addl
and
xor
inc
sub
faddl
add
xor
aas
cmp
push
mov
and
das
rorb
and
into
sub
shll
into
int3
shlb
add
mov
cmp
jb
fcmovbe
rcll
pop
push
push
or
incl
cmp
pop
ret
cmp
clc
add
xor
jmp
sbb
mov
adc
ret
add
movsl
add
inc
jo
sbb
clc
mov
jne
outsb
repz
incb
push
add
jmp
mov
jmp
lea
rcrb
xchg
cmc
push
hlt
rcl
pop
adc
xor
ds
aaa
xor
mov
mov
jne
jmp
call
add
or
je
push
mov
mov
jbe
movl
sub
add
mov
inc
cmp
sbbb
mov
cmp
mov
dec
aaa
inc
aam
movsb
movsb
pushf
test
jno
xor
mov
inc
mov
add
jge
test
not
mov
push
dec
nop
rorl
das
cmp
mov
adc
lock
pop
mov
dec
lock
add
adc
and
inc
imul
out
add
test
inc
insb
add
inc
bound
lock
dec
and
loope
mov
mov
xor
orb
ljmp
je
ret
mov
arpl
shll
push
sbb
fists
sub
push
lock
in
xchg
mov
int
dec
jbe
and
add
out
add
fistl
jle
pop
cmp
or
xor
xlat
cs
xchg
xchg
das
xchg
popa
das
sub
jb
pop
sbb
push
jns
addr16
add
inc
ds
inc
adc
fldt
loopne
daa
jg
faddp
aaa
xchg
xor
xor
add
stos
fildll
je
mov
push
adc
jle
and
sahf
daa
jp
negb
stos
sub
fsubp
repnz
dec
adc
xchg
cmpsl
repnz
js
cmp
inc
adc
adc
pop
out
inc
push
pop
pop
rcrb
mov
nopl
enter
out
sub
imul
cmp
std
ja
add
and
or
jne
rolb
add
add
inc
cli
data16
leave
push
and
lcall
inc
sbb
xor
lea
pop
pmulhuw
ret
and
in
lock
and
test
add
pop
xor
mov
enter
inc
mov
adc
insb
adc
mov
cmp
sub
push
mov
xor
roll
push
add
rcr
adc
xchg
pop
xchg
dec
and
lret
leave
add
jo
xchg
nop
xchg
sbb
add
test
adc
jne
dec
cmp
xchg
dec
sbb
not
lret
in
mov
jge
inc
push
sbb
cs
sub
and
xor
inc
add
sub
mov
and
add
insb
push
jne
jne
and
cld
sti
mov
mov
xchg
or
aas
ljmp
cmpsb
adc
out
pop
hlt
mov
out
fcmovnbe
loopne
sbb
xlat
xchg
xor
or
mov
mov
dec
jge
nop
cmp
clc
add
stos
icebp
lret
inc
add
jno
jno
cwtl
mov
mov
scas
jns
dec
ja
push
js
push
in
je
movl
in
jmp
sbb
lea
aas
clc
lock
jb
fildl
and
or
push
test
fisttpl
jmp
xor
xor
sbb
lea
dec
and
or
mov
leave
lock
mov
leave
insb
hlt
mov
jp
fcomp
enter
dec
clc
or
les
jb
mov
pop
xchg
fadds
sub
sub
pop
add
call
rclb
or
imul
jne
fcoms
or
lock
mull
movswl
out
mov
push
pop
push
push
inc
shr
rcr
shr
nop
cmp
rcr
or
mov
repz
dec
jg
pop
xchg
mov
jb
cmp
or
leave
cmpb
dec
sub
sbb
adc
sahf
adc
or
fcmovbe
fimull
lret
iret
pop
pop
pop
and
bound
ja
sar
dec
sbb
cmp
xor
daa
pop
ss
mov
push
aas
testl
inc
fsts
inc
in
cmpb
js
dec
sub
out
fcomip
test
xor
add
add
push
jmp
cli
and
jb
sub
cmp
sbb
mov
sbb
movsl
sbb
xor
popf
dec
movl
mov
mov
jo
push
cld
nop
jo
int
inc
lcall
mov
mov
xor
cmc
test
dec
add
or
sbb
mov
jmp
insl
or
sarl
shr
xor
sbb
cmp
sbb
cmp
sbb
fs
mov
jmp
dec
and
sub
xor
mov
sbb
jmp
or
sbbl
xchg
sbb
push
pop
sbb
add
loope
sbb
dec
adc
call
xchg
fsub
push
pop
pop
inc
jne
pop
add
and
mov
inc
cmp
mov
cmp
pop
andb
rol
adc
adc
rolb
repnz
inc
decb
dec
xor
add
push
pop
adc
sbbl
out
add
hlt
pop
xor
cmp
pop
clc
int
xor
lock
jge
lock
insl
cmp
mov
xor
ret
mov
outsb
sub
stos
in
ret
scas
rcrb
and
lods
fadds
loope
sub
enter
iret
decl
dec
sbb
or
mov
shlb
test
dec
xchg
inc
je
mov
sub
rcrb
sub
mov
roll
jg
inc
jmp
push
cmp
add
mov
in
lods
lods
aaa
in
mov
xchg
sti
stos
or
pop
and
inc
xor
add
insl
add
adc
or
mov
dec
fcoml
cmp
mov
sub
add
sub
mov
or
sub
push
fcoms
xor
or
add
push
cmp
shlb
xor
or
data16
mov
jmp
adc
outsl
fisttpl
mov
dec
in
or
or
mov
fcoml
ret
dec
rorl
xor
sub
push
nop
aam
test
xchg
lods
push
inc
inc
fidivl
mov
fsubs
add
cli
xor
add
sub
sahf
enter
lea
rcrb
sub
xor
cmp
inc
jmp
push
rolb
mov
jbe
jne
imul
cmp
cmp
push
adc
sbb
cmp
xor
cmp
pop
sbb
pop
je
dec
cmp
or
mov
icebp
xor
icebp
arpl
call
sub
jbe
insb
jne
push
rcr
ficoms
jne
and
add
cmpsl
push
les
mov
stos
jo
or
xor
adc
pop
ljmp
je
dec
adc
insb
das
addb
push
dec
adc
push
and
lods
out
out
cmp
push
jg
outsl
inc
or
idivl
lahf
push
jbe
jle
xor
jg
jg
in
lahf
ja
jg
lea
xchg
mov
dec
in
in
mov
ffreep
lea
lea
inc
out
mov
rol
popa
push
pop
xor
mov
dec
test
fisttpl
add
or
inc
inc
push
negl
adc
add
mov
lret
cmp
push
mov
inc
push
mov
shr
fdivrs
cwtl
dec
pop
les
xlat
xchg
xchg
mov
mov
pop
push
ret
adc
adc
push
ret
subb
lods
mov
rcrb
dec
push
dec
and
outsb
and
mov
sub
sbb
push
sub
mov
stc
and
ljmp
out
mov
ret
add
test
and
shl
sbb
clc
or
or
add
sahf
cli
insb
iret
sbb
adc
pop
add
lret
cmp
into
xor
push
mov
dec
and
mov
adc
push
fdivrl
decl
int3
fwait
push
aam
or
popf
adc
scas
push
sarb
cmpsb
push
pop
add
pop
inc
out
xorl
js
cld
pop
pop
pop
cmp
or
sub
xor
push
pop
ja
mov
sbb
loopne
addr16
push
dec
pop
xchg
adc
cmp
and
cwtl
inc
dec
sbb
push
adc
mov
in
push
test
cmpsl
xor
mov
and
or
in
mov
cli
xor
mov
push
je
xchg
cli
adc
fisttps
and
lea
lea
or
dec
cmp
adc
push
ret
out
mov
mov
xorb
jmp
fs
sub
sub
jle
push
xlat
ret
je
cmp
sbb
xor
adc
shrb
sbb
adc
dec
pop
inc
jnp
loopne
mov
dec
and
ss
sub
jno
add
jno
push
or
or
ljmp
jp
sub
roll
ljmp
inc
cmp
cmp
aaa
push
push
push
mov
push
imul
movlps
add
dec
leave
inc
in
out
mov
and
leave
jnp
shlb
jo
push
sbb
jne
iret
dec
je
test
sbb
shlb
sub
call
pop
adc
add
push
pop
cmp
and
xchg
aas
sub
cmp
loop
add
add
ja
sbb
fimull
ret
sbb
fcmovbe
scas
je
imul
clc
add
andl
sbb
pop
pop
mov
pop
mov
aam
adc
in
je
mov
mov
sub
mov
ss
xor
sbb
insb
das
mov
movd
adc
pop
and
popf
or
lret
lcall
cmp
loopne
jl
sbb
push
jmp
lret
xchg
sbb
gs
adc
or
pop
inc
mov
dec
cmp
jns
movsl
into
test
jmp
cmp
lea
adc
inc
pop
sbb
addb
adc
mov
push
push
add
push
in
xor
ds
mov
test
js
mov
push
push
sub
leave
push
or
inc
ljmp
ds
xor
iret
int3
xchg
ficomps
cmp
and
out
pushl
leave
fcmovb
cmp
pop
cmp
fistpll
jbe
add
pop
sub
add
mov
sub
inc
adc
or
jp
mov
push
push
nop
imul
fcomps
shll
mov
cmp
loop
dec
and
rorl
push
lods
mov
cmp
sti
add
or
push
mov
cs
sbb
ja
test
outsb
dec
iret
and
dec
and
dec
addb
dec
cmpsb
mov
mov
xchg
test
add
add
mull
out
or
sub
jg
xchg
and
rorb
notb
jmp
mov
stos
popf
adc
adc
shlb
dec
and
fdivrl
lds
or
cmp
xchg
loope
mov
or
sbb
cmp
xchg
pop
mov
cmpsl
inc
jae
out
int
icebp
mov
lock
jo
adc
sbb
push
mov
ret
pop
jmp
adc
clc
pop
jge
push
sahf
call
mov
jmp
in
nop
add
jne
dec
dec
jae
imul
sbb
in
mov
or
push
pusha
cmp
jmp
and
outsb
mov
rclb
bound
pop
push
sub
and
je
or
cwtl
imulb
push
and
andb
cmp
mov
push
movsl
jbe
sub
mov
jmp
stos
loopne
je
mov
loop
pusha
and
jge
inc
nop
mov
lea
push
popa
mov
cmp
sub
add
add
or
loope
testl
fnsave
clc
inc
jmp
mov
imull
mov
pop
cwtl
inc
repnz
test
lea
mov
xor
cmp
or
jecxz
clc
call
inc
jmp
cmp
push
xor
pop
adc
hlt
adc
aaa
jne
rsm
xchg
stos
loopne
adc
cmp
lret
jge
add
mov
pop
push
sbb
test
pop
jecxz
and
cmp
adc
addb
pusha
jp
outsb
das
ljmp
mov
in
into
sub
xor
jne
loopne
jp
sbb
lods
cld
or
push
fsubrp
lods
sarl
add
test
mov
sbbl
sbb
mov
jb
sbb
jge
movsl
add
enter
sbb
push
mov
fnstsw
das
mov
mov
roll
xor
sbb
inc
xchg
aam
push
rcl
jae
rcll
pop
mov
push
or
je
jle
mov
or
sbb
xchg
daa
and
xchg
push
push
cli
pop
inc
testl
mov
jne
out
les
xor
pop
dec
into
sub
jne
push
dec
clc
gs
or
cmp
sbb
inc
adc
and
insl
xchg
pop
xchg
cmp
loopne
mov
test
cli
push
mov
pop
xchg
test
push
pushf
fcoms
mov
testb
lea
pop
inc
rorb
adc
sub
ret
xor
cmp
jb
sub
push
loope
add
shlb
pop
cmpl
insl
mov
push
pushf
mov
inc
mov
test
sti
cmp
mov
add
xor
mov
xchg
pop
sub
push
shll
shr
mov
add
or
shr
mov
dec
inc
aas
or
push
jmp
pop
sar
mov
dec
sub
inc
mov
push
or
into
test
lods
pop
pusha
nop
add
cmpsb
push
shrl
rol
idiv
loopne
shr
or
mov
sahf
dec
mov
push
shl
pop
jne
outsb
mov
jno
inc
sarl
adc
and
lret
sub
jne
push
or
rcr
out
push
adc
fiaddl
mov
dec
add
fiadds
push
mov
jmp
or
lods
mov
push
data16
les
xchg
add
dec
and
fimuls
fmul
int3
jmp
out
or
daa
mov
pop
lret
jl
push
lods
or
mov
dec
and
mov
test
les
push
xor
sbb
movsl
mov
push
lret
das
sub
test
sbb
push
sahf
sbb
movups
fidivs
les
mov
inc
mov
adc
push
movsb
inc
in
xchg
add
lods
orb
fildl
sahf
out
mov
push
cwtl
shl
cmp
sarl
sub
or
aaa
push
mov
sub
popa
daa
rcll
incb
jne
testb
adc
sbb
mov
fiadds
subb
imul
or
sub
jg
dec
dec
imul
xlat
sbb
aaa
fidivrs
adc
inc
fldl
xchg
or
nop
cmp
mov
in
mov
test
xor
mov
sbb
stc
or
pusha
out
es
jnp
rcrl
or
pushf
mov
push
jns
sbb
and
ret
add
push
es
mov
or
mov
adcl
out
pop
imulb
mov
xchg
xchg
es
int
mov
sub
mov
cs
shll
inc
pop
lea
xor
add
mov
icebp
pushl
add
mov
dec
adc
push
shll
shrb
daa
adc
jg
and
pop
data16
pusha
pop
je
adcl
and
inc
adc
and
repz
xchg
out
inc
inc
inc
jo
mov
jne
shlb
mov
jo
testb
adc
mov
xor
mov
push
xor
xchg
add
ret
sbb
add
xchg
loopne
mov
sbb
cli
pop
pop
ret
cs
pusha
popf
loopne
sub
dec
push
mov
jns
fcmovne
bound
add
cli
shr
add
and
mov
and
and
test
inc
lods
mov
cli
xor
rcrb
pop
sub
dec
xlat
jmp
jb
push
or
sub
jl
xor
adc
outsl
inc
jmp
lea
adc
bound
pop
dec
mov
sub
cmp
push
cli
mov
dec
cmp
stc
mov
mov
jg
mov
rcrl
leave
lock
loope
adc
test
sbb
aam
scas
xchg
andl
jmp
ret
rcll
mov
addb
cmpsl
and
mov
adc
cmp
xchg
aam
in
cmp
xor
jle
pop
jmp
push
xchg
popl
push
fstpt
movsl
sbb
add
leave
shlb
and
push
call
aas
or
add
push
shll
mov
insb
add
and
cmp
ljmp
or
or
loop
pop
ret
mov
adc
sbb
aam
jb
ljmp
inc
pushl
mov
js
subl
cmp
cmpb
or
mov
push
push
lcall
jns
push
sub
mov
and
add
inc
mov
add
addr16
or
mov
lods
mov
incl
xchg
xchg
lahf
adc
push
hlt
mov
and
testb
pusha
sbb
fs
insb
or
add
adc
or
lods
and
out
lret
add
cmp
xchg
cmp
fsubs
adc
inc
push
push
loopne
scas
shll
push
inc
inc
call
pop
es
lock
bound
inc
pop
les
dec
push
fcoml
inc
add
jnp
sti
inc
cmp
dec
cmp
push
imul
add
xor
mov
jns
add
or
rcr
cmp
mov
mov
sbb
sbb
add
out
sbb
or
js
loopne
add
mov
sbb
loopne
add
add
xchg
cmp
rorl
add
int
push
mov
repz
push
jmp
pop
add
call
mov
iret
test
pop
mov
and
dec
or
rcl
sbb
pop
sbb
out
or
push
fisttps
cmp
jbe
jnp
adc
push
sysenter
movsl
xchg
loopne
sbb
dec
xor
inc
mov
ret
data16
mov
and
or
out
dec
std
xchg
lret
int
clc
xor
adc
cmp
pop
cwtl
mov
mov
cmp
jne
push
dec
pushf
shufps
mov
push
add
adc
aad
gs
xchg
sub
sub
lea
rol
out
dec
add
mov
pop
mov
and
or
cwtl
sub
insb
pushl
push
inc
mov
movsl
pop
jl
add
jbe
fs
pop
loopne
popa
sbb
adc
fiadds
into
mov
stc
cltd
jg
sbb
mov
pop
data16
daa
mov
test
imul
cmpl
add
push
mov
daa
mov
jne
movsl
jne
lea
push
lods
stc
cmp
add
push
add
shlb
and
pop
jg
xor
or
lret
lods
testl
inc
jmp
mov
mov
test
or
mov
jg
jmp
push
mov
and
mov
sbb
pop
xchg
aas
push
jae
adc
inc
lods
cmp
out
sub
mov
addr16
add
adc
sub
das
and
adc
mov
ficoms
adcb
jno
xchg
jp
das
cwtl
inc
je
xor
xchg
int3
test
sbb
mov
aam
or
jmp
inc
cmp
dec
test
and
dec
stos
aad
pop
pop
daa
push
adc
add
mov
mov
clc
xchg
lock
or
mov
xor
fdivrs
and
mov
add
adc
mov
out
inc
inc
outsb
mov
dec
or
mov
mov
xor
pop
subb
and
popf
add
mov
mov
and
mov
pop
fcoml
inc
dec
cmp
insl
xlat
and
mov
and
cmp
or
movsb
mov
add
subb
mov
rcrb
jne
adc
aaa
loop
pop
xor
aaa
inc
or
hlt
mov
mov
add
push
jmp
test
push
cmp
pop
jl
jno
mov
addl
js
pop
sbb
xor
push
jmp
js
adc
push
dec
cmp
inc
es
mov
dec
mov
xchg
mov
sub
lock
dec
add
or
aas
add
adc
andb
add
and
cli
adc
push
aad
sbb
jo
fstps
xchg
xor
pop
or
sbb
lea
clc
inc
jmp
xor
add
mov
and
add
getsec
or
xchg
ret
push
pop
mov
mov
adc
gs
cmp
dec
subb
xchg
data16
test
jmp
inc
sbb
iret
shlb
sahf
sub
mov
sub
add
xchg
mov
xchg
scas
pop
shl
mov
clc
xor
add
dec
adc
adc
rclb
test
jnp
mov
sbb
andl
mov
adcb
mov
rolb
insl
sbb
rcll
insb
cld
xor
or
fcoml
aaa
nop
jecxz
cwtl
push
jne
push
ds
xor
out
int
xor
push
shlb
pop
aas
xor
adc
inc
xor
pusha
rcl
and
popa
adc
adc
inc
add
sbb
shlb
loope
or
push
push
sbb
jne
pop
push
pcmpeqw
pop
or
cmp
sbbb
test
mov
jmp
adc
pusha
adc
lret
or
inc
and
mov
adc
rorb
mov
jbe
frstor
cmp
xor
mov
imul
add
fiaddl
jo
jb
imul
dec
or
lret
jge
jecxz
xor
addr16
push
lock
dec
test
fdivrs
or
jns
mov
pop
sub
int3
push
or
pop
sbb
push
jne
push
clc
push
or
xor
fwait
mov
xorb
push
jl
rorl
xchg
or
sbb
call
cmpl
and
adc
push
mov
cmpb
push
mov
mov
sub
addr16
and
push
adc
jo
in
add
loopne
fnstsw
sbb
pop
loop
push
outsl
add
rclb
sbb
or
push
outsb
rorb
push
inc
pusha
jne,pn
sbb
inc
mov
sub
rorb
les
sbb
or
mov
adc
fsubr
cmpsl
loop
test
xchg
push
icebp
in
ret
sub
je
pop
add
loopne
jmp
cwtl
roll
lods
cmp
add
repnz
and
inc
dec
push
daa
jecxz
shlb
subl
jmp
inc
xor
fnstsw
rorl
roll
lret
out
xor
and
iret
dec
sbb
jno
mov
mov
addl
mov
sub
cmp
cmp
pop
add
adc
ja
stc
jb
push
fnstcw
or
sub
call
add
rcll
shl
mov
adc
and
or
clc
jnp
and
and
mov
jo
mov
cmp
sub
or
mov
and
pop
test
pusha
cmp
pop
dec
pop
xor
mov
nop
addl
pop
repz
je
decl
push
into
lock
push
xorb
xlat
xchg
adc
adc
jne
push
sbb
rcl
pop
nop
mov
ret
mov
xor
addr16
add
add
sbb
cltd
jmp
push
push
cmp
insb
push
jb
in
push
cwtl
mov
loope
fsubrs
mov
xorb
in
out
cs
xlat
in
xchg
inc
cmp
fdivl
lcall
mov
xor
rcl
les
mov
icebp
inc
sbb
cld
cmpsb
mulb
cmp
pusha
mov
xor
dec
cmp
xchg
imul
sti
push
mov
ja
cwtl
xor
fdivrs
rolb
cmp
push
daa
jbe
add
or
fcmovnu
scas
adc
pop
in
adc
and
fisttpll
movb
mov
jne
stos
out
rorl
or
ret
jmp
or
xchg
movl
mov
hlt
adc
je
stos
or
movsb
dec
outsl
add
arpl
jae
and
add
nop
adc
mov
jle
cmp
daa
pop
mov
jp
push
mov
loope
icebp
push
in
mov
clc
and
lock
flds
jmp
in
push
aaa
popa
scas
and
call
sub
mov
lcall
in
gs
rorl
or
adc
ss
and
and
sub
xchg
xchg
xchg
xor
cmp
sbb
inc
daa
daa
daa
mov
cmovs
leave
leave
add
pusha
leave
leave
leave
leave
fs
leave
leave
je
jl
movsb
cmp
test
mov
cltd
cwtl
pushf
mov
movsb
test
and
dec
xor
enter
leave
int3
sarb
dec
fcomp
loopne
xchg
dec
xor
call
leave
aam
hlt
clc
push
cmp
and
add
add
add
dec
or
gs
dec
xor
mov
adc
leave
and
and
leave
and
dec
sub
xor
xchg
dec
xor
cmp
fiaddl
dec
mov
cltd
fs
push
pop
sub
fs
pop
pusha
sbb
sub
inc
pushl
add
jl
and
test
outsb
sbb
xor
fs
stc
and
or
cmpsl
test
test
rorb
sbb
xor
and
xor
cmp
adc
lods
inc
mov
dec
dec
xor
mov
dec
mov
push
enter
pop
mull
adc
movsb
push
insb
rorl
xchg
or
movsb
rorl
xor
adc
jmp
mov
bnd
pop
push
or
and
pusha
or
cmp
xor
clc
push
or
or
xchg
faddp
mov
pop
mov
add
test
and
movsl
or
add
or
or
or
and
enter
dec
xor
adc
or
add
and
shr
add
dec
outsb
xadd
add
add
lret
and
out
ret
js
adc
popa
push
lock
or
sbb
add
mov
adc
das
add
shll
and
xor
dec
or
sub
and
call
add
outsl
int
adc
lock
ja
frstor
cld
mov
and
aaa
int
out
jecxz
sbb
add
or
sbb
inc
adc
std
shrl
and
sub
sbb
fidivs
jge
je
test
jge
std
push
xchg
flds
and
pop
adc
pusha
mov
pusha
loope
pop
adc
and
sub
xor
inc
jecxz
push
jns
adc
fnstsw
cmp
pop
cmp
jns
imul
addl
xchg
xlat
dec
cmp
adc
sti
add
ja
test
pop
xor
mov
rcrb
ret
mov
or
das
add
inc
mov
scas
jmp
push
and
mov
or
scas
rcrb
testl
insl
add
jb
imul
xor
push
and
or
pop
or
flds
fldcw
jmp
fisttpll
orl
inc
dec
mov
adc
andb
xor
testl
repz
push
inc
andb
adc
xor
test
loop
add
cmp
push
or
hlt
pop
aas
and
ret
dec
push
aaa
sbb
out
inc
cwtl
jo
sbb
pop
stos
sub
clc
addb
dec
jmp
sub
sub
jmp
cmp
mov
sub
push
xorb
or
psubusw
xchg
test
into
adc
lods
rcrl
add
push
or
or
mov
adc
xchg
jnp
bound
or
adc
mulb
mov
cli
das
or
sub
stc
call
jge
ffree
repz
js
push
mov
or
mov
repnz
adc
or
push
jmp
add
mov
xchg
test
sbb
xchg
dec
mov
insl
in
pop
loope
cwtl
or
orl
mov
les
mov
push
jno
jle
push
pop
jmp
pop
xchg
orb
pop
add
movsb
pop
cmp
loopne
adc
or
daa
mov
push
pop
movsb
inc
aam
add
adc
jle
push
add
or
shll
sbb
cmpsb
cmp
dec
loop
add
pop
adc
repnz
lods
pop
ds
add
inc
jl
incb
sarb
or
dec
pop
push
sub
add
ss
imul
or
pop
or
sbb
sbb
hlt
mov
loopne
cmp
mov
or
mov
mov
data16
jle
mov
repz
pop
fstpl
test
xor
jmp
jno
and
lcall
aad
jnp
outsl
loopne
add
es
cmc
adc
into
sub
imul
jo
lret
jo
mov
cmp
fcompl
lock
lods
fcoml
adc
inc
popa
imul
add
pushl
dec
ror
enter
jg
icebp
js
and
push
das
or
adc
xlat
js
rolb
mov
cltd
pushf
arpl
mov
cmp
jge
js
dec
mov
jnp
xor
sub
ja
pop
bound
dec
and
test
xlat
into
sbb
push
inc
cld
loope
movb
adc
in
or
and
xor
cmp
mov
or
mov
push
push
lret
lock
or
sbb
ljmp
xor
jnp
decb
mov
sarb
xorb
jmp
lods
sbb
notl
in
adc
daa
mov
push
enter
fbld
dec
out
fld
fucomp
pop
flds
mov
sbb
out
mov
in
pop
lods
push
xor
test
cmovge
xchg
shrl
icebp
das
sti
sbb
and
sbb
gs
push
fiaddl
or
inc
mov
dec
lcall
les
fsubs
jne
push
push
xlat
mov
xor
push
and
nop
push
movsb
pop
sti
fsubl
sbb
sub
push
push
push
sub
sahf
sbb
jl
xor
stc
loopne
ret
inc
mov
fnstsw
movswl
pop
sti
ret
fnclex
and
pop
lock
adc
sub
shrb
push
xchg
xor
fmull
or
insl
or
push
mov
addb
js
fldt
fldl
clc
test
fsubs
outsb
fwait
sbb
add
repnz
fdivp
jle
movsb
xor
fstp
jmp
leave
xor
shl
sarl
sbb
cmp
mov
je
sbb
xorb
scas
ss
shlb
or
pop
cmp
mov
nop
ret
pop
andl
or
mov
pop
jbe
or
leave
jns
dec
and
movsb
add
adc
lcall
pop
jnp
jo
sar
adc
jg
lods
add
xor
roll
testb
lock
mov
je
or
imul
push
add
and
adc
inc
test
inc
mov
out
mov
sarl
mov
or
adc
inc
js
test
jne
adc
ljmp
or
je
repnz
inc
xor
jo
cs
push
sti
jbe
js
shrl
idivl
cmp
xchg
or
pop
xor
jne
push
add
loope
push
or
aaa
hlt
or
fcmovnb
adc
pop
xor
cmp
sub
mov
out
cli
inc
es
or
push
push
push
cmpsb
insl
test
push
or
dec
add
adc
jmp
aas
sub
jg
inc
and
cld
push
push
daa
mul
pop
test
push
or
jbe
jl
xchg
jbe
fcoms
lahf
lock
stos
jp
pop
pop
mov
push
jle
inc
jae
sub
jl
sub
int3
test
dec
or
mov
add
pop
add
or
imul
adcl
es
jns
dec
or
inc
lea
pop
jno
icebp
xor
lret
scas
rolb
xchg
inc
lret
mov
jnp
loop
rolb
cmpl
adc
add
repz
mov
push
out
pop
and
mov
out
mov
inc
adc
pop
sub
mov
mov
loop
sahf
sub
loopne
cmp
jb
cmp
cmp
sub
ss
rclb
jno
pop
lret
insb
lock
or
dec
decb
adc
adc
faddl
loope
push
and
lea
sub
cmp
jge
je
inc
xor
and
daa
or
aaa
je
or
push
movaps
fimuls
xchg
push
or
cmp
addl
rorl
mov
das
sub
loopne
cmp
daa
pop
mov
shl
sub
sub
mul
lea
sub
lea
ds
ret
cmp
cs
aam
out
inc
rorl
mov
ret
push
inc
shl
adc
lret
sbbb
ret
ret
js
xor
or
push
incl
lcall
dec
lea
push
xor
inc
push
lods
sbb
test
push
adc
nop
mov
pop
sbb
stos
rol
out
or
inc
and
addl
es
xor
cmpsb
sar
cmp
cmp
mov
mov
mov
lods
fsubr
pop
pop
push
pop
adc
scas
push
jb
push
repnz
sub
xor
add
xor
cmp
push
push
imul
js
push
push
aas
mov
sbb
mov
inc
ret
frstor
jge
lock
movsb
addr16
cmp
test
jecxz
adc
andl
shll
or
push
cld
pop
push
sub
dec
add
mov
lock
add
into
out
es
lea
out
inc
cmp
sub
mov
in
xchg
jge
pusha
and
add
std
lods
shl
test
xor
xor
popa
iret
or
fidivl
or
dec
add
inc
jbe
cmp
and
push
inc
into
fildll
lret
jmp
jne
and
or
mov
add
add
push
mov
fs
add
cmpsl
mov
mov
or
mov
jmp
mov
cmp
add
inc
xor
leave
dec
adc
or
je
inc
add
inc
adc
fsubrl
pop
jne
cmp
aaa
xchg
js
add
jb
push
out
addb
xchg
test
mov
mov
rorl
jp
dec
pop
mov
pop
sub
add
sub
xchg
xchg
adc
sahf
mov
insb
inc
cs
or
ss
cmp
je
add
packssdw
inc
xor
mov
dec
cmpb
je
mov
call
sbb
sbb
add
or
mov
xor
jl
add
call
fcompl
fistpll
or
add
inc
adc
sub
insb
dec
push
xchg
xchg
test
jmp
gs
pop
imul
xor
and
xchg
mov
add
inc
adc
fsubrp
mov
adc
jno
bound
gs
jle
fmuls
lods
sbb
fcoms
in
fnstenv
xlat
movsb
lds
insl
mov
fdivs
or
add
jno
jmp
inc
ffreep
push
pop
jne
and
je
mov
dec
bound
cmp
test
sbb
popf
pop
clc
aad
cmpsb
adc
aas
sub
clc
inc
loopne
sub
jle
or
cld
mov
lds
add
loopne
xor
add
add
lods
cli
dec
ret
popa
shrb
sub
add
jbe
loopne
or
test
je
mov
xor
push
inc
inc
push
loopne
sub
mov
dec
dec
jns
neg
movb
mov
insl
jbe
jl
cltd
push
enter
xor
jp
xchg
or
or
add
jl
pop
into
fs
push
sbb
mov
rclb
dec
mov
fadds
inc
push
xor
insl
loopne
ret
push
test
addb
dec
jae
add
lahf
pusha
mov
mov
iret
ret
jmp
add
jmp
insb
xchg
xchg
jge
xchg
sub
adc
sbb
inc
sub
xchg
rclb
mov
cmp
xor
faddl
filds
cmp
sbb
sbb
aam
pop
adc
aaa
push
jmp
addb
jno
sbb
pop
repnz
jae
pop
data16
push
popl
mov
fadd
xor
add
jl
dec
push
pop
popa
into
jge
adc
sbb
aas
in
and
clc
adc
xchg
lea
add
push
mov
enter
loopne
xchg
sahf
les
mov
je
add
js
mov
ss
mov
fidivl
imul
pop
cmp
push
xchg
push
fmull
sub
ret
add
add
int
push
jbe
sub
jmp
inc
xor
add
mov
mov
bound
mov
cli
pop
mov
and
add
insb
movb
mov
push
xchg
scas
and
mov
push
inc
popf
or
pop
neg
sbb
mov
pop
loopne
jecxz
adc
jg
ret
add
call
jne
bound
xor
sahf
mov
lret
xor
sub
add
pop
mov
pop
call
xor
and
push
add
or
mov
or
inc
arpl
mov
sbb
jg
hlt
test
or
adc
pop
dec
mov
clc
xor
rcl
lods
mov
bound
sbb
dec
in
pusha
dec
cmp
clc
dec
jge
fs
cld
add
hlt
shrd
xchg
sbb
sbb
xchg
inc
sti
jge
inc
jge
sbb
xchg
faddl
clc
cwtl
xor
jge
int3
data16
inc
and
xor
cltd
pop
jmp
xchg
cld
sub
sarl
cmp
inc
mov
adc
cmc
fs
xor
add
fidivl
or
sbb
lock
out
dec
bound
in
and
imul
sbb
js
jg
pop
sub
mov
mov
adc
pop
lds
ljmp
sub
pushf
or
push
shll
mov
xchg
xchg
sbb
add
mov
push
lock
jg
and
mov
push
jg
mov
jb
enter
jb
dec
inc
dec
pop
or
or
or
ficomps
and
lods
jmp
pushf
push
adcl
lods
ja
dec
frstor
loope
mov
cmp
adc
fwait
and
mov
adc
add
data16
scas
jp
loopne
sub
fcmovb
sbb
push
jle
in
push
sbb
ss
jmp
lock
sahf
popa
pop
mov
fwait
adc
mov
call
inc
or
or
ret
pop
or
lds
outsl
lea
flds
pop
xor
mov
inc
inc
add
insb
mov
das
push
repnz
sbb
js
je
aad
fld
inc
cmp
into
inc
add
pop
xor
xor
testl
ret
add
and
movsb
fadds
rcll
jne
push
cmp
imul
and
xchg
mov
popa
inc
dec
sub
inc
adc
hlt
leave
xor
enter
push
push
cmc
mov
lret
push
out
cs
mov
cld
jl
rorb
sub
out
adc
pop
scas
stc
mov
rorl
cwtl
push
add
scas
pop
ret
sbb
mov
adc
dec
pop
gs
or
pop
data16
shr
mov
lods
or
lea
imul
inc
je
repnz
mov
xchg
xor
or
pop
sub
add
lcall
je
cmpsl
jp
push
into
rorb
call
adc
push
jo
mov
or
mov
xor
add
inc
loope
ret
pop
cmp
imul
sarl
test
mov
or
push
adc
mov
cmpb
jne
mov
dec
dec
sbb
testl
jl
xchg
sarl
and
inc
jmp
push
sbb
rcll
or
and
sbb
cmp
cmc
jge
mov
xchg
cmp
je
pop
test
movsl
cmp
stc
push
leave
and
inc
rcrb
pop
sbbl
pop
das
lea
outsb
loop
mov
mov
lcall
mov
mov
mov
mov
aaa
es
pop
and
push
jg
mov
sbb
mov
cld
jg
mov
push
push
and
shll
mov
adc
jge
push
push
dec
jl
push
push
adc
push
pop
sub
mov
pop
sub
fcmovnbe
and
fdivrl
into
or
cmp
jbe
or
jp
test
mov
ljmp
adc
xor
mov
rcr
xchg
adc
mov
cmpl
xchg
inc
or
cmp
mov
mov
mov
mov
or
mov
dec
out
cli
and
mov
push
mov
fidivrl
sarb
insb
sub
pop
cmp
nop
scas
lea
pop
ret
icebp
jb
and
outsb
add
or
ss
ja
fildll
adc
or
push
push
sub
cltd
fucomi
or
cmc
jmp
push
and
orl
pop
adc
jmp
xchg
out
ss
imul
shlb
mov
adc
enter
jecxz
js
mov
int
push
inc
mov
test
push
add
add
and
js
sub
loopne
shlb
sbb
jmp
adc
insl
dec
xchg
adc
adc
cmp
je
mov
sahf
fiadds
inc
mov
or
mov
in
or
mov
push
or
inc
rolb
adc
add
and
mov
fiaddl
into
push
dec
fwait
and
jae
loope
rcrb
adc
add
push
sbb
mov
inc
add
cmp
mov
or
adc
ficomps
pop
rolb
xchg
add
int
adc
mov
rorl
sub
lret
movsl
into
test
xor
clc
shr
add
or
add
shr
or
pop
jae
iret
mov
push
push
adc
test
and
mov
add
xor
adc
lret
add
lock
mov
mov
jp
push
add
add
dec
pop
fcmovu
inc
jbe
add
jl
in
sbb
cmp
les
sbb
push
mov
roll
repnz
mov
mov
adc
bound
xor
cs
push
xor
pop
movsb
clc
xorb
mov
clc
adc
pushf
stc
rolb
dec
jmp
or
decl
inc
mov
inc
je
cmc
frstor
and
xchg
mov
sbb
sbb
cli
cmp
rclb
xor
adc
verw
sub
mov
sub
cli
sub
dec
sti
jne
mov
sbb
loope
test
add
mov
inc
mov
rcrb
je
data16
sub
adc
nop
test
nop
sti
lret
sbb
sub
ret
pop
add
xor
test
cmp
leave
hlt
adc
fwait
jo
enter
enter
push
push
mov
pop
lret
and
rorb
add
or
pop
or
lret
xor
sub
pusha
cltd
xchg
or
pop
bound
int
push
mov
or
iret
xchg
inc
cmp
sub
and
daa
add
fisttps
insl
rcr
orl
push
mov
stos
mov
pusha
sbbb
jge
punpcklbw
and
mov
daa
lock
mov
push
mov
sbb
out
insb
push
cmpb
pusha
test
sub
and
and
lods
fisttps
nop
mov
and
mov
js
or
clc
sbb
fistps
push
or
ss
repnz
lds
xchg
add
js
pop
loop
movl
movl
add
ret
or
outsb
mov
sub
sub
push
sbb
pop
sbb
fadds
or
xor
test
push
xchg
outsb
sbb
jne
mov
cmp
and
jmp
jge
add
add
call
pusha
push
ljmp
and
cmp
test
jae
push
cmp
push
mov
push
loopne
push
call
push
cmp
imul
jle
inc
and
xchg
mov
hlt
int
ret
sbb
insb
scas
fidivrl
jnp
and
fcoml
adc
cmpb
jl
xor
aad
incb
adc
rcrb
push
incl
adc
push
and
add
pop
push
push
and
in
jmp
push
push
mov
add
imul
mov
ds
mov
inc
and
pusha
adc
dec
inc
and
sub
inc
or
jne
cmp
jne
pop
inc
pop
int
adc
inc
adcb
cmpsl
dec
add
mov
popa
call
ds
rorb
push
cltd
pusha
dec
mov
fprem
out
roll
fistps
ljmp
test
je
mov
iret
and
roll
adc
cmc
call
cmp
sahf
gs
adc
inc
push
jecxz
shlb
pop
bound
rolb
popf
jle
movsb
movsw
sti
int
push
dec
or
pushf
add
mov
lret
outsl
inc
aaa
add
bound
adc
pop
or
add
push
add
push
decb
xchg
je
sub
inc
inc
out
or
xor
fiaddl
sbb
and
repz
inc
sbb
add
add
sbb
xchg
adc
sbb
in
push
fcoms
adc
and
jmp
sbb
gs
sbb
sbb
and
xchg
add
pop
xchg
jne
pop
pop
lret
test
int3
test
shll
and
lods
rcl
ljmp
dec
and
shr
sub
adc
pop
and
push
idiv
and
sub
neg
cld
lock
je
pusha
mov
add
repz
mov
addr16
dec
mov
inc
into
add
fildll
jae
adc
shlb
push
jne
int3
xchg
and
push
or
aad
inc
cmp
jbe
push
or
aas
add
xchg
mov
das
aam
jne
mov
or
push
addb
push
inc
jae
roll
inc
cmp
add
into
paddusb
cwtl
adc
sbb
sbb
xor
push
or
cmp
ljmp
add
movsb
mov
dec
lret
or
ljmp
daa
jne
repnz
aaa
xchg
dec
or
dec
sub
das
sbbb
jns
rcrb
je
cld
xchg
or
aam
jne
pop
push
aam
or
pusha
inc
add
pop
les
cs
mov
js
ret
cmp
inc
es
add
jg
xchg
mov
dec
fwait
adc
pop
mov
push
es
mov
je
incl
lea
and
jb
cmp
ja
add
cmp
adc
cmp
jne
scas
mov
sti
shll
leave
adc
mov
adc
mov
pop
je
mov
cmp
xor
mov
iret
and
jb
add
push
and
subl
test
inc
lcall
sti
pop
leave
scas
pop
push
movb
jmp
or
and
dec
cmp
xor
hlt
iret
cmp
rcrb
test
push
mov
or
ds
movw
jb
int
call
rcrb
mov
pop
mov
into
testb
sbb
jb,pn
jp
mov
add
pop
push
insl
loope
mov
or
jne
adc
push
andb
mov
or
push
jmp
into
push
add
std
cmpb
push
cmp
mov
jb
push
imul
bound
shr
shr
inc
imul
lea
clc
in
mov
lret
jne
into
movswl
pop
neg
in
sbb
push
ljmp
cwtl
repnz
pop
pop
popf
test
mov
call
cwtl
inc
xorl
cmp
push
sti
add
imul
mov
jbe
push
sbb
adcl
adc
mov
cmp
or
dec
jle
repnz
stc
pushf
mov
sub
mov
mov
mov
mov
and
and
lea
inc
pop
and
nop
push
cmpsl
add
pop
lcall
decb
xchg
test
nop
nop
ja
jge
dec
adc
sahf
xchg
iret
insb
or
inc
call
testl
inc
inc
ret
cmc
mov
or
inc
mov
clc
or
lods
lea
rolb
lods
xor
shrb
push
lea
sub
cltd
push
dec
or
or
xchg
or
inc
test
push
nop
rcrb
mov
movsb
mov
cmp
mov
in
lods
shll
xor
pusha
data16
xchg
sub
sub
in
dec
sub
lods
and
shlb
aaa
lea
adc
sbb
out
adc
mov
shll
mov
add
shr
or
pop
fstps
in
cmp
rorb
fdivrs
push
lret
cmp
movsl
cli
inc
mov
loope
imul
inc
mov
jle
int3
shrl
mov
mov
out
or
mov
dec
mov
pop
cli
push
jmp
nop
sti
lock
dec
and
sti
stc
repnz
sub
push
testb
dec
cli
cli
inc
cli
add
add
add
dec
movsl
test
add
mov
or
call
sub
mov
sbb
adc
and
ficoml
ret
mov
dec
mov
shll
and
pop
sbb
jecxz
mov
insb
xor
add
enter
cmpsl
mov
xor
sbb
cmp
es
inc
repnz
shlw
loop
out
mov
rcrb
dec
add
enter
jne
adc
push
aad
dec
in
aam
daa
adc
push
pop
sub
jne
push
or
es
shlb
fdivrs
aam
lcall
and
pusha
inc
mov
shrb
or
dec
insb
ljmp
add
or
fmull
or
cmpsl
add
push
lret
pusha
mov
fnstcw
dec
add
insl
test
mov
cmp
mov
sbb
add
pusha
inc
je
jge
inc
adc
adc
jg
or
orl
mov
in
sub
or
jge
add
mov
and
movsb
loopne
cld
icebp
jmp
add
jne
pop
push
jns
or
orb
pushf
pusha
push
outsl
das
sbb
cwtl
sbb
cwtl
in
scas
dec
sub
mov
sbb
movb
cmc
push
jge
and
adc
pop
outsb
call
xchg
sub
xchg
cltd
and
or
pop
dec
add
adc
pop
cli
mov
inc
rcrl
sub
fcoms
xor
fiadds
push
mov
insl
call
push
jmp
loopne
call
xchg
frstor
mov
pusha
lea
push
and
sbb
ret
mov
add
in
fmulp
or
fsubl
pop
in
cmp
add
popf
xor
inc
in
mov
or
mov
or
mov
dec
repz
xabort
push
mov
dec
enter
sahf
mov
insl
push
shlb
add
sub
test
jnp
or
call
add
cld
push
call
into
or
mov
inc
ljmp
or
dec
stos
aas
std
in
ret
jmp
cmp
jge
sub
cmpb
arpl
push
cld
or
add
dec
cmp
add
fldl
add
fadds
cmovle
pop
add
hlt
ret
dec
outsl
mov
jp
jne
dec
mov
jb
or
orb
sub
jbe
dec
ret
and
add
push
mov
inc
mov
imul
push
add
lcall
and
ret
and
dec
popa
lcall
stc
sub
adc
and
add
push
mov
movsb
adc
imul
xor
xchg
add
stos
int3
movsb
jle
jne
or
push
pop
setp
scas
je,pt
push
ret
sbb
adc
push
xor
cld
mov
add
push
ret
or
xchg
adc
xchg
dec
add
add
mov
or
pop
mov
mov
andb
cmp
xor
into
pusha
or
and
inc
and
jbe
cmc
pop
sub
and
pop
pop
jbe
sub
or
prefetch
or
mov
adc
push
loopne
push
inc
dec
push
mov
inc
ficompl
or
mov
lret
or
adc
and
or
push
movsl
push
or
inc
aad
mov
sbb
lret
pop
or
inc
out
lcall
insl
out
sbb
xchg
adc
jne
cltd
ret
out
and
mov
rorl
pop
dec
jge
out
aaa
addb
and
push
or
and
shrl
lds
lock
loop
clc
sub
xchg
adc
clc
test
cmp
adc
or
push
jo
push
xor
shll
mov
xchg
push
pusha
fadds
xorb
jo
shl
or
dec
add
nop
lock
ds
or
add
xor
int
or
adc
xchg
into
mov
mov
out
mov
xor
inc
jg
mov
into
into
mov
or
inc
pop
sub
push
pop
xor
aaa
nop
pop
sahf
pop
mov
aam
pop
stos
adc
shlb
or
sbb
stos
sub
insb
mov
dec
pop
push
push
sub
pop
lcall
dec
lea
lahf
pop
xchg
out
popl
add
movsb
mov
cmp
mov
pop
test
mov
and
jecxz
mov
cltd
and
jb
cwtl
sbb
cmp
mov
sub
sbb
mov
sub
cmp
xor
mov
out
add
scas
push
pop
mov
imul
mov
stos
xchg
mov
pop
dec
imul
or
cmp
add
pusha
jbe
sbb
into
lret
push
xchg
sbb
ffree
fisubrs
push
shrl
popa
in
xor
jge
enter
test
jns
je
negb
mov
cmp
cs
rclb
lock
andl
jno
out
and
movsl
sbb
je
dec
sub
mov
into
cmp
je
mov
dec
ret
jb
hlt
mov
decl
add
lret
dec
sub
enter
jmp
push
insb
cltd
dec
xor
push
rol
imul
sub
lock
push
or
aam
sbb
push
mov
jle
fwait
repz
inc
les
and
inc
or
pusha
andl
ret
mov
jb
popf
scas
mov
inc
sbb
hlt
mov
pop
cmp
test
pushl
insl
pop
sbb
aad
xor
mov
je
inc
test
xor
mov
in
fsubs
adc
imul
push
push
rorb
mov
pop
subb
xor
push
shll
pushf
and
xor
xor
adc
jne
movsl
push
ljmp
pop
aam
inc
cmp
cmp
push
jo
in
sbb
adc
inc
imul
or
add
cmp
add
inc
loope
daa
in
or
ljmp
lock
or
mov
xchg
cmpb
add
and
std
nop
stos
notl
add
dec
loope
lds
bound
imul
sub
lahf
xor
aaa
push
adc
xchg
push
popa
xchg
mov
pop
mov
inc
orl
call
add
push
ret
pop
or
inc
sub
pushf
popf
xor
insb
cmp
pop
mov
mov
addl
sti
xor
mov
and
sbb
lds
dec
in
test
inc
repz
clc
cli
fistl
test
xor
je
mov
jg
xor
int3
ret
sti
scas
lock
sub
jne
sbb
lahf
pop
enter
fisubs
dec
lea
push
mov
mov
enter
cmc
ret
push
add
xor
add
lock
dec
mov
add
jae
dec
mov
jecxz
cmpsb
loopne
jmp
dec
adc
mov
fs
pop
inc
in
int
ss
subl
push
js
mov
fimull
fidivs
push
sbb
sub
mov
loope
inc
dec
sbb
inc
insl
inc
add
xchg
push
xor
iret
xor
pushf
xor
aas
push
sub
add
fs
inc
sbb
inc
xchg
arpl
sbb
xor
nop
scas
mov
je
jno
lods
push
jg
scas
sbb
xor
and
aas
pop
cmp
pop
mov
ja
mov
aad
adcl
mov
cs
inc
and
mov
inc
fs
and
repnz
loop
cmp
xor
das
add
mov
push
or
sub
fcomps
and
int
pop
mov
lods
loope
adc
incb
sarb
loop
sbb
inc
cli
test
pop
xor
and
sbb
xor
add
inc
arpl
jmp
push
push
sub
cmp
popa
loop
movsb
jmp
insb
or
push
push
xor
mov
outsb
xchg
add
xchg
dec
dec
movsl
dec
in
sub
pushl
repnz
out
pop
shlb
jmp
ret
mov
add
shlb
sub
add
adc
in
add
bound
dec
push
sar
xor
sbb
pop
pop
push
addl
repnz
jne
inc
cwtl
pop
sub
dec
add
mov
shll
push
rclb
and
in
stos
push
mov
clc
adc
mov
cmpsb
ret
add
and
rolb
test
sub
call
or
lds
sub
pushf
daa
test
add
adc
mov
add
outsb
aad
lret
icebp
push
add
push
sub
ror
int3
nop
add
jmp
dec
xor
sbb
pop
movsb
roll
xor
cld
mov
loopne
popf
shrb
adc
sbb
outsb
inc
sbb
jbe
or
push
xchg
inc
xchg
clc
pop
mov
adc
ret
imul
add
sbb
sbbl
adc
cwtl
and
inc
jle
xchg
cmp
mov
xor
pop
dec
or
into
pop
and
inc
mov
andl
mov
mov
cmp
and
lock
add
sbb
jecxz
loopne
add
mov
fwait
mov
repnz
pop
xchg
push
aam
add
mov
inc
addr16
hlt
and
lret
fisubrl
clc
pop
add
and
xchg
iret
aad
rcrb
sti
xchg
incl
add
aam
inc
movsl
add
add
bound
adc
sub
mov
imul
addb
sub
dec
or
add
ret
inc
sar
data16
xchg
or
add
and
jo
jmp
push
xor
sbb
adc
or
ret
gs
testb
lret
or
test
jge
aaa
gs
gs
mov
xchg
int3
cmp
jo
arpl
imul
dec
sarl
fidivrl
int
les
mov
jmp
push
rcrb
jb
das
mov
rclb
sub
jge
cmp
sub
inc
clc
push
jg
movsl
jge
adc
mov
sbb
cmp
ja
mov
sbb
inc
pusha
or
roll
pop
das
push
aaa
xlat
cwtl
push
add
mov
xchg
xchg
mov
inc
mov
or
or
push
repnz
idivb
push
dec
test
jg
adc
lock
cmpsb
add
lcall
sub
mov
jmp
or
icebp
cmp
push
test
add
pop
shlb
popa
and
aam
movsl
inc
add
into
lock
fsubrs
in
repz
dec
jecxz
mov
add
push
jl
push
pop
adc
sbb
sub
pop
test
enter
or
inc
mov
push
mov
cmc
jb
lea
xchg
and
inc
or
or
aam
push
aaa
sub
push
add
pop
fs
mov
mov
test
inc
imul
sub
fcoml
inc
loopne
pop
cmp
cmp
sti
jns
mov
add
push
and
push
jle
decl
arpl
mov
mov
add
shrb
je
jg
jae
push
lret
push
es
imul
cmp
bound
inc
inc
mov
cmp
ja
imul
lods
cmpsl
xor
adc
add
pop
pushl
mov
push
int
shrb
or
and
adc
adc
cltd
mull
jno
jnp
mov
rcrl
outsl
push
in
ret
adcb
cmp
rcrb
xor
and
push
cmpsb
or
jne
inc
sbb
enter
fimull
or
aam
or
inc
jae
push
and
call
push
sbb
push
xor
sbb
pop
jae
xchg
xchg
sarb
leave
inc
sub
add
les
add
lcall
test
add
test
push
add
add
js
das
sar
push
push
jo
movsb
aas
push
loop
add
push
shlb
sbb
pushf
sbb
inc
inc
push
sbb
xor
push
and
bound
loop
cmp
xor
and
pop
jg
lods
ljmp
push
pop
jl
testb
bnd
rorl
xchg
xchg
or
rcrl
pushf
adc
xor
loopne
iret
loopne
adcb
clc
cmp
jb
lcall
adc
mov
movsb
fs
or
jmp
pop
cmpsb
scas
mov
mov
or
aaa
loope
fdivs
push
mov
mov
inc
xchg
jo
mov
lods
sbb
push
hlt
adc
outsl
andb
pushf
pop
xchg
jb
sbb
cmpl
add
cmp
jae
and
sbb
mov
lret
cmp
jg
imul
xchg
lock
daa
mov
dec
jge
mov
test
adc
jns
ret
inc
xchg
jmp
and
fsub
loopne
inc
outsb
fcomps
pop
mov
adc
push
pusha
rcl
stos
or
mov
jle
cmp
lock
pop
cmp
int3
test
movsb
push
shrl
ret
fisttpl
xor
xchg
jmp
and
in
imul
mov
jle
cmp
adc
or
andb
mov
add
adc
dec
mov
gs
pop
dec
dec
inc
mov
fisttpll
stc
repnz
loope
je
or
add
adc
push
es
daa
flds
sbbb
pop
je
addr16
scas
pop
or
adc
jg
or
push
and
dec
cli
add
ss
jmp
cmp
ja
cmp
popa
xchg
je
mov
mov
xor
cmp
add
xor
sbb
jp
jmp
add
inc
mov
cltd
push
dec
sbb
adc
push
add
sbb
xor
inc
std
repnz
cwtl
xor
add
pop
adc
lock
into
xchg
adc
cmp
push
fxch
aas
out
dec
je
dec
jne
push
rol
sbb
jno
push
adc
jmp
xor
inc
xor
mov
adc
fsubrl
jg
xor
sub
adc
inc
xor
pushl
lds
or
jne
enter
negb
cli
arpl
mov
add
inc
or
or
cli
push
je
stos
add
xchg
pop
loope
inc
sbb
jg
mov
ret
and
sbb
add
push
xchg
lods
inc
sbb
test
cmp
and
inc
hlt
push
cli
push
jb
cmp
or
lea
add
cli
fucom
js
cmp
jl
xorb
inc
mov
add
add
push
cmpb
sub
add
je
shll
and
pop
out
inc
sub
bswap
xchg
cwtl
fcmovb
mov
ret
jb
arpl
ret
fcomp
pop
pop
sbb
rolb
add
ret
insb
jl
aad
mov
mov
cmp
ret
mov
sbb
push
xor
int3
mov
jb
or
jo
lret
sbb
adc
roll
scas
add
leave
test
xchg
xor
or
xor
test
mov
or
adc
or
push
in
adc
cmp
loope
and
pop
mov
fs
pop
inc
pop
ljmp
sahf
dec
add
fistl
mov
lret
xor
inc
call
cmp
jne
pop
enter
dec
sub
cmp
dec
je
pop
push
in
mov
pop
rolb
sub
jg
add
cmp
and
nop
mov
sub
dec
pusha
test
rcrb
pop
fmuls
add
je
in
mov
or
xchg
dec
hlt
adc
pop
cld
add
jle
out
nop
lea
add
shrl
in
mov
and
je
lock
adc
jge
imul
ret
fimuls
fstl
orl
jg
jmp
adc
outsb
dec
addr16
es
mov
ss
push
add
xchg
call
add
jb
test
jb
or
cmpsl
pop
xchg
push
pop
scas
subl
and
or
jae
or
and
push
popa
shll
xchg
pop
sub
push
inc
bound
add
sbb
dec
js
or
adc
or
inc
adc
js
jno
orl
inc
insb
and
mov
pop
sub
xchg
fidivrl
xor
mov
mov
xlat
je
cmp
or
adc
cmp
jb
testb
add
add
cmp
loopne
js
ret
rorb
jge
push
jmp
inc
addr16
sbb
sbbl
je
cmp
clc
jns
jb
cmp
imul
jbe
push
push
push
or
xchg
pop
scas
in
push
mov
push
stc
shr
imull
das
xor
inc
jne
mov
jg
cli
add
add
push
mov
and
dec
lods
and
mov
les
pop
es
jmp
scas
or
aas
push
inc
pop
pop
and
aam
lods
push
iret
pusha
scas
and
mov
mov
pushf
adc
mov
xorl
mov
popl
mov
hlt
inc
cmpsb
jb
bound
and
sbb
ja
cmp
mov
jne
daa
inc
push
pop
mov
ja
jl
jo
inc
mov
test
jb
sbb
in
dec
cmp
and
push
pcmpeqw
and
mov
out
pop
mov
xor
adc
sbb
cs
aas
cmp
add
push
pop
and
lret
push
dec
jne
add
lcall
dec
and
pop
je
call
and
fld
fxch
fists
push
mov
insb
or
inc
jp
rcl
cmp
jmp
pushf
jns
fstps
icebp
aaa
cmp
lea
rolb
ret
mov
sub
das
fmuls
cwtl
adc
ret
fnstcw
cmpsb
pop
sbb
mov
sbb
add
mov
jb
jb
test
jb
or
or
in
fisubl
xchg
mov
mov
cltd
shlb
push
ret
jg
aam
loope
adc
daa
add
je
cmovp
sub
adc
dec
xor
lock
mov
jmp
dec
in
pop
int
pop
in
jns
add
jo
or
int
in
jb
sub
dec
mov
push
in
add
cmp
dec
xchg
in
mov
push
in
lock
adc
jne
pop
fsubrs
pop
insb
mov
dec
xor
lock
xor
and
cld
pop
dec
leave
dec
mov
movsb
or
rclb
sub
faddl
add
push
shrl
xlat
xchg
pop
not
ret
pop
pop
pop
dec
enter
jae
sbb
sbb
roll
enter
cmc
sar
dec
inc
and
mov
add
fadds
fmuls
push
pop
cmp
rcr
js
add
xor
test
push
lock
cli
add
and
dec
jb
negl
test
lock
or
sbb
xchg
jge
xchg
pop
and
push
lcall
adc
stc
xchg
cmpsb
dec
in
inc
adc
es
mov
adc
adc
pop
mov
pop
test
or
and
xchg
filds
movsb
mov
pop
cmp
in
mov
adc
mov
insb
ljmp
add
push
je
or
mov
in
ficompl
mov
out
adc
cmpb
sub
and
inc
fcoml
add
arpl
int3
daa
enter
enter
rol
shlb
inc
fiaddl
rcr
les
or
xchg
test
add
shl
fstl
leave
adc
push
cmc
jo
aas
jle
xor
cmp
pusha
fdivl
leave
imull
push
jno
pusha
fs
and
dec
push
dec
xor
in
xchg
rolb
pop
push
call
or
ficoms
jle
lea
rcr
cmp
adc
inc
nop
dec
shlb
shlb
push
mov
mov
in
sti
push
adc
mov
fcomp
stc
xor
imul
jbe
xor
jl
sbb
sbb
sarl
inc
mov
dec
and
push
ficoms
icebp
inc
pop
ret
sbb
ret
pop
push
inc
adc
sarl
sub
popf
add
out
in
pop
cld
popa
js
lret
jl
add
push
inc
cmp
dec
bound
adc
rorl
sub
cmp
or
push
jnp
sbb
sub
cmpb
enter
add
sbb
aam
sbbl
loope
leave
dec
or
or
inc
mov
rorb
jmp
das
ret
push
dec
pop
cmpsb
dec
int3
popf
lock
dec
cmpsb
mov
loop
or
dec
in
and
popf
sub
pop
or
push
dec
mov
pop
pusha
loop
ret
adc
or
nop
sbb
aam
in
loop
ret
cmp
push
ljmp
xchg
inc
pushf
aam
mov
sbb
jmp
in
and
in
dec
xor
sbb
add
lea
loopne
or
aam
pop
test
rolb
cltd
es
imul
in
sbb
push
pusha
jns
out
sub
and
pop
fucom
lds
xor
or
rol
cmpsb
je
xor
and
add
clc
aas
sbb
mov
out
inc
fiadds
out
adc
mov
or
lock
test
inc
or
jns
or
lods
out
jecxz
xlat
or
out
add
jmp
adc
adc
cmpsl
push
call
jl
repz
fsubr
mov
adc
jecxz
rcll
push
and
sahf
fdivl
fsts
cmp
xor
adc
adcl
nop
mov
fadds
add
or
inc
or
cmp
jb
or
mov
ja
scas
jbe
add
fs
pop
sbb
push
mov
mov
adc
jae
ljmp
adc
or
repnz
and
sub
inc
add
rcl
and
addr16
inc
inc
lock
icebp
jo
pop
repnz
inc
call
cltd
dec
jmp
mov
inc
pop
jmp
loopne
movl
aam
jno
and
flds
loope
in
test
jmp
in
and
in
xor
xchg
test
in
mov
je
mov
or
cmpsb
mov
xchg
cmpsb
add
call
rolb
loopne
faddl
xchg
in
sbb
cmp
scas
cmp
or
sbbl
sub
sbb
fsubs
test
push
xchg
nop
sbb
in
decb
adc
dec
sbb
jecxz
lods
loopne
adc
bound
inc
jo
rcrb
pusha
rcr
or
xchg
movsb
sti
xchg
movd
sbb
cmpb
insb
xchg
sbb
adc
mov
mov
out
fsubs
inc
adc
out
popf
loop
pop
mov
mov
or
sbb
jecxz
fcompl
xchg
lock
hlt
daa
lods
stos
cmpsb
mov
lock
imul
pop
mov
sub
or
lock
inc
dec
sar
stos
insl
add
arpl
mov
or
or
nop
dec
push
or
or
or
cmp
lods
in
push
icebp
sbb
mov
enter
xor
jbe
xor
punpckhwd
fstl
test
cmpb
rcll
pop
mov
xor
sbb
movsb
icebp
pop
or
pop
jb
add
or
call
add
pop
repz
dec
adc
inc
inc
push
mov
push
sbb
dec
addr16
in
mov
mov
and
adc
adc
dec
adc
lret
cmpsl
mov
adc
mov
scas
sbb
testl
cmp
add
imul
add
sbb
fdivl
pop
ret
sub
or
inc
xchg
lret
mov
cmpsl
mov
adc
sub
es
hlt
test
jb
cwtl
in
or
or
imul
sti
mov
mov
sub
xchg
dec
ficoml
add
xchg
loopne
sub
test
pop
outsl
adcl
inc
sub
push
add
arpl
adc
call
nop
ja
stos
jmp
add
mov
jb
sti
or
ret
adc
or
insl
bound
dec
xor
fadd
fmuls
and
insb
fsubrs
rcrb
or
mov
fiaddl
sbb
psubsb
add
cs
xor
mov
mov
fs
adc
mov
imul
mov
mov
mov
dec
imull
popl
arpl
ja
stos
cmp
or
and
outsl
in
or
insl
inc
pavgb
add
lahf
mov
and
add
movsb
mov
fs
fcoms
int
inc
mov
in
cltd
or
ret
sbb
cmc
or
enter
clc
jne
loope
adc
mulb
xchg
jl
xor
push
jb
fldt
daa
jno
adc
sar
or
out
fmuls
pop
jge
sub
pop
xchg
mov
jge
call
dec
mov
js
movsl
pop
inc
loopne
sar
add
mov
cli
sub
push
fmul
test
rcrl
sti
push
mov
xchg
adc
movsl
aaa
mov
or
loope
sti
pop
sbb
inc
call
ret
lock
or
test
rcll
adc
dec
or
jb
and
or
add
jno
pop
xor
enter
movsl
push
lds
cwtl
lods
add
cmp
jp
stc
mov
out
mov
jb
dec
add
sbb
rclb
andb
sbb
push
mov
std
stc
and
push
cmp
add
cmp
sbb
lea
fcoms
test
outsl
insl
scas
dec
adc
inc
sbb
imul
pop
in
pop
xor
call
pop
add
and
pop
inc
outsb
inc
repnz
les
nop
inc
jp
xchg
in
shlb
int3
mov
mulb
aam
enter
adc
fistpll
mov
and
rcrb
rcl
mov
inc
add
std
pop
inc
les
inc
mov
push
add
mov
mov
push
xchg
or
insb
iret
mov
pusha
xlat
push
inc
inc
nop
add
mov
aad
xlat
jl
test
inc
out
fcoml
cmp
aam
mov
fsub
and
enter
sbb
in
adc
fcom
test
cmp
adc
inc
ret
ja
add
test
dec
adc
shll
inc
pop
ret
adc
leave
clc
add
inc
sbb
test
rorb
adc
cmpsb
in
aas
fdivrs
test
mov
xlat
in
hlt
add
dec
ljmp
cmc
pop
call
xor
jbe
outsl
les
ficoml
popf
mov
xchg
arpl
cltd
nop
pushf
mov
test
inc
add
inc
mov
data16
adc
ret
mov
lds
jl
adc
add
cmc
xchg
pop
rorl
sbb
xchg
fistpl
inc
outsb
imul
mov
ja
jge
ss
xorl
sub
lret
hlt
and
inc
mov
aaa
test
sti
enter
jo
dec
add
adc
loope
nop
mov
cwtl
and
xchg
inc
and
imul
daa
or
and
xor
sbb
rorl
stos
adc
mov
adc
and
cmp
int
sub
mov
sub
prefetcht2
xor
inc
or
gs
fcom
movsb
sbb
pop
sbb
cli
adc
insl
addl
mov
and
or
inc
pop
dec
inc
pop
dec
pop
lret
in
xor
cwtl
pop
cmp
pop
ljmp
movsl
pop
int
loopne
adc
cmp
inc
dec
orb
fs
rcr
inc
mov
stos
fdivr
notb
sub
inc
mov
cmp
adc
mov
inc
mov
xor
fisttpl
inc
test
sub
pop
sub
dec
xlat
mov
pusha
cmp
xchg
ret
xor
popa
les
or
xor
les
and
or
adc
push
aad
or
pop
push
inc
mov
and
call
dec
inc
mov
addb
adc
std
and
jae
popa
xchg
or
aad
jecxz
ret
pop
inc
or
insb
call
sbb
xor
mov
push
sub
push
inc
fmul
ss
lock
inc
sub
adc
cmc
scas
loopne
dec
xor
das
call
add
inc
xchg
or
cmpsl
mov
cltd
add
sbbb
inc
xor
add
insb
int3
push
and
clc
push
xchg
mov
or
int3
lods
shrl
cmp
push
sub
rolb
cmp
xchg
push
testb
orb
shrb
jo
lds
stos
adc
stc
jecxz
movsb
jno
in
lcall
sub
and
sbb
mov
sbb
jecxz
dec
or
int
sub
lahf
call
inc
or
and
and
cmp
jo
int3
or
repz
enter
adc
push
pop
andb
insb
shlb
shrb
or
not
adc
dec
adc
xchg
fwait
xchg
mov
jns
aam
in
inc
sbb
push
mov
cmp
scas
mov
pop
adc
adc
inc
push
test
int
push
les
xor
les
rcrb
call
nop
inc
in
sbb
inc
fldt
and
jge
pop
mov
sbb
sarb
xor
dec
lea
rcll
adc
inc
xor
inc
lea
xchg
sub
in
cmp
lds
in
sub
in
and
jb
punpckhdq
dec
ret
test
jne
je
sbb
adc
dec
and
push
aas
insl
cmp
adc
inc
add
std
xor
mov
dec
push
and
gs
lods
xchg
dec
pusha
lahf
pop
adc
jbe
push
pop
rolb
in
xchg
mov
mov
in
arpl
xchg
fildl
mov
lods
mov
test
sarb
cwtl
or
or
ret
sbb
in
test
xchg
lods
mov
repz
mov
scas
leave
pushf
or
cmp
sbb
test
nop
data16
popf
movsb
mov
insb
icebp
pushf
dec
test
loopne
ret
mov
push
pop
and
jl
xchg
mov
push
mov
xchg
mov
movsl
add
or
ljmp
and
cmp
and
mov
jl
xchg
dec
cmpsb
dec
xor
inc
pushf
test
test
sub
or
sub
rol
push
jns
mov
enter
iret
jo
jae
add
fwait
je
dec
rorb
decb
sbb
ret
xor
insl
mov
cmp
or
cmpb
lods
push
inc
sbb
sbb
leave
lods
or
pop
xchg
dec
insl
push
inc
or
or
cltd
sbb
mov
or
cltd
jmp
jmp
std
dec
stos
xchg
testb
or
sbb
mov
mov
jb
mov
test
out
sub
fcoml
add
pop
leave
test
jl
mull
or
adc
add
rcl
lock
in
sbb
sub
stos
xchg
xchg
fmuls
and
movsl
js
jne
sbb
sub
leave
and
aam
dec
sbb
sbb
and
shl
jmp
cmp
mov
lea
cmp
dec
adc
mov
xchg
jbe
pop
clc
xchg
ret
or
mov
sub
test
xchg
enter
add
or
inc
mov
lea
dec
cmp
fs
and
pop
mov
insl
out
jbe
or
push
pusha
adc
es
es
cmp
sbb
cltd
and
cwtl
fs
inc
sub
inc
xchg
push
nop
xor
fadds
xor
adc
inc
xchg
fmul
lods
or
insl
addb
jne
sub
rclb
je
enter
movsb
lea
pop
xor
and
xchg
aad
cmpb
jbe
add
test
adc
insb
sub
aam
and
or
and
in
adc
cmpsb
enter
in
mov
test
and
ficoml
push
shr
jge
ret
inc
insl
or
cmp
and
enter
in
lods
test
mov
test
pusha
push
jb
jne
call
mov
es
cmp
jmp
gs
int3
test
or
jno
test
cli
push
or
mov
in
dec
pop
pop
int3
rclb
fcomps
pop
jb
or
adc
and
pop
dec
daa
cmpsb
sbb
pop
adc
dec
frstor
sbb
push
xchg
dec
rolb
lds
rorb
adc
aam
inc
mov
sub
mov
push
test
in
add
adc
movsb
sub
fsubl
movsl
sbb
jl
xchg
mov
mov
dec
sbb
sub
and
out
jns
inc
and
sbb
movsl
aam
nop
inc
popf
or
sbb
push
sub
push
inc
adcb
mov
xchg
or
or
fisttpll
push
push
stos
sbb
test
push
bound
lods
mov
loopne
and
in
rcll
xor
xor
add
aad
xchg
xor
add
xchg
push
rcll
mov
or
push
loopne
or
jecxz
cwtl
fldcw
and
xor
adc
push
mov
push
mov
mov
in
sbbb
out
nop
push
in
lods
jns
testl
sub
cmpsb
mov
xchg
enter
add
int
inc
cmp
dec
or
inc
inc
mov
filds
imul
jne
adc
test
pop
sar
mov
inc
cltd
mov
in
roll
mov
sub
and
cmp
sub
cld
shr
jmp
xchg
push
and
push
dec
and
or
xchg
mov
leave
movsb
adc
inc
sbb
in
ja
or
mov
xchg
test
shll
sti
xor
and
xlat
mov
pusha
jne
lret
insl
inc
rcrb
sub
leave
xor
xor
shlb
xchg
dec
xor
loopne
arpl
adc
add
xchg
xor
lcall
aam
pop
pop
or
scas
lods
jbe
aam
pop
aam
mov
sbb
fbld
or
out
fildll
pop
into
das
punpckhdq
jae
dec
sub
jg
pop
or
rcrb
out
cwtl
xor
cmpsl
mov
xor
sbb
push
cwtl
ss
lock
xchg
mov
pop
mov
mov
aaa
fsubl
mov
arpl
mov
roll
aam
and
sub
mov
fnstsw
cmp
das
mov
fs
mov
rorl
jl
inc
or
jb
nop
xchg
pushf
adc
mov
les
xchg
nop
icebp
add
in
adc
cwtl
js
push
in
shrb
adc
mov
cltd
or
leave
out
mov
inc
mov
subb
and
jb
in
nop
bswap
les
jb
mov
in
jb
xchg
mov
setnp
fwait
adc
leave
insl
xchg
pop
aam
mov
and
cmp
pop
pushf
pushf
arpl
xchg
sbb
pop
ja
fcom
add
dec
jno
push
cmp
mov
xor
mov
adc
inc
mov
out
mov
sarb
movsl
push
lea
cmpsb
stc
insl
cmp
icebp
jecxz
xchg
jbe
or
sub
arpl
and
jns
xchg
push
push
enter
cmp
icebp
loope
dec
inc
xchg
in
mov
sbbb
std
cmp
sub
pop
movsl
adc
inc
test
adcl
shlb
push
stos
shlb
add
and
sbb
dec
aam
sbb
fs
lods
addr16
test
fs
fs
mov
push
jb
jl
mov
pop
dec
fimuls
mov
or
add
ret
lods
sub
and
lods
add
xor
leave
pusha
js
mov
fidivl
inc
push
xor
jmp
mov
dec
mov
movsl
xor
dec
xor
fs
fs
cmp
test
pushf
add
mov
pop
dec
sbb
pop
mov
pop
adc
or
xchg
xor
pop
xlat
dec
rorb
insl
call
mov
sub
jne
and
add
or
sub
jns
cltd
adc
fcoms
and
lods
and
sub
xchg
scas
test
ds
adc
mov
mov
mov
ja
push
data16
loopne
ja
enter
invd
push
aas
outsl
jo
jne
loopne
dec
enter
and
clc
aas
sub
mov
mov
sub
cwtl
pop
leave
xor
xchg
iret
int3
mov
or
inc
test
mov
sbb
mov
pop
aaa
sbb
shrb
mov
and
xor
cmpsb
fldl
pushf
mov
adc
dec
shlb
inc
xchg
mov
lods
imul
add
cwtl
ss
dec
mov
xchg
adc
shlb
adc
lods
mov
or
popf
cmc
cwtl
rcrb
out
fcoml
xchg
xorl
dec
jb
enter
or
push
sub
stos
jecxz
pop
leave
out
xchg
test
or
rcrb
fwait
test
dec
fimull
mov
add
push
push
sti
fisubl
lods
mov
adcb
repnz
repz
nop
imul
adc
shl
repnz
mov
xchg
inc
shrl
cwtl
nop
add
sbb
and
sbb
dec
dec
insb
in
push
lret
and
or
push
nop
stos
push
jbe
std
jo
in
pusha
out
lods
sbb
sarl
and
jo
lock
les
sbb
or
jo
or
lret
lock
fcoms
add
or
dec
fimull
dec
fwait
in
in
adc
push
jnp
pop
and
adc
imul
cmp
jg
cmp
test
in
mov
leave
fists
cmp
and
and
sub
push
shll
mov
adc
clc
mov
or
cltd
add
push
xor
test
jns
xor
mov
or
lds
lret
aam
fsubl
push
mov
cwtl
sbb
jae
sti
push
or
push
addl
andl
xor
mov
sbb
mov
adc
stos
es
out
xchg
xchg
cs
fsubr
call
pop
test
sub
inc
add
call
int3
ds
push
pop
hlt
cmpsb
aas
in
das
aas
fimuls
inc
mov
faddl
outsl
ret
cmc
lods
shrb
pusha
push
das
lock
or
lods
add
sbb
add
int3
sub
jae
fstps
out
xchg
sub
sti
mov
adc
push
jmp
and
xor
cmp
xor
inc
lea
adc
push
jo
subl
push
xor
sbb
sbb
idivl
push
mov
pusha
notl
inc
dec
test
cli
shrb
divl
cmp
jno
loope
mov
lods
fcos
adc
and
orb
dec
insl
inc
in
xorl
or
mov
sub
fildll
mov
sbb
push
negl
inc
add
nop
xchg
or
rorb
push
bnd
adc
jb
xchg
jmp
and
inc
stos
xor
xor
push
adc
subl
inc
faddl
mov
dec
loope
pusha
mov
mov
cmpsb
pop
xor
xor
mov
add
pop
pop
nop
ret
inc
mov
dec
inc
or
nop
xor
push
jge
aad
fbstp
xor
mov
xorl
popa
adc
rorb
cmpsb
in
or
stc
sub
popf
push
and
nop
imul
cli
test
or
frstor
adc
imull
sbb
inc
mov
cli
lea
jbe
adc
sbb
inc
cmpsb
adc
rclb
pop
dec
rclb
imul
cwtl
inc
popa
pop
adc
cmp
and
sahf
cmp
std
enter
imul
add
inc
rorb
mov
rorb
not
sbb
adc
sub
or
or
imul
sahf
xor
jo
mov
push
inc
nop
cmp
and
mov
dec
sbb
movsb
sbb
mov
cwtl
mov
dec
and
sub
sub
adc
sbb
mov
movl
mov
movsl
xchg
bound
and
sbb
and
scas
jno
xchg
pop
add
in
mov
adc
cwtl
inc
mov
sbb
add
ret
pop
scas
sbb
mov
sub
loopne
insl
xchg
dec
dec
and
adc
fidivl
mov
dec
es
fs
mov
movsb
icebp
lods
mov
adc
or
sub
push
pop
sbb
adc
or
adc
repnz
mov
add
loope
mov
sub
or
rclb
push
mov
adc
push
dec
mov
les
cli
push
scas
cltd
mov
push
xchg
shlb
repnz
imul
sub
sub
inc
cwtl
fcoms
cwtl
imul
sub
xor
subl
dec
sti
adc
push
jnp
out
push
clc
inc
pusha
out
cld
adc
add
repnz
mov
xchg
add
adc
push
and
sub
push
nop
push
push
pop
inc
sbb
nop
mov
jmp
arpl
jne
popf
mov
push
and
aam
pushf
mov
mov
xchg
fs
push
and
sub
push
mov
mov
or
mov
sub
leave
orb
fcomp
push
lods
pusha
aam
sbb
push
xchg
popa
movsl
sbb
xchg
adc
pop
push
loopne
addr16
pop
mov
outsb
mov
lcall
lcall
addl
push
sbb
push
stos
pop
adc
pop
mov
push
aaa
fbld
sbb
add
iret
repz
jmp
cmp
repz
push
cmp
cld
pop
outsb
xor
jp
sahf
push
outsb
add
sub
xchg
push
jnp
inc
aad
js
and
in
mov
aas
dec
das
push
or
inc
xchg
add
inc
orb
jnp
mov
mov
mov
or
adc
mov
rcll
xchg
adc
or
cmp
sar
jmp
adc
mov
test
add
nop
add
into
pop
adc
test
and
repz
negb
jbe
dec
and
jns
or
sbb
es
popl
cmp
sub
xor
mov
add
pop
sub
addb
sbb
popa
and
insb
outsl
arpl
fwait
aam
je
outsl
outsb
cmp
test
gs
fildll
push
je
arpl
jne
jb
outsb
je
add
das
add
push
insl
jge
sarb
push
test
fucomip
in
incl
inc
outsl
jb
js
je
jb
gs
add
or
outsl
add
mov
add
add
add
jne
les
pop
jl
fiaddl
and
and
and
xor
add
aaa
or
sbb
out
xlat
push
fstpt
inc
xor
inc
push
add
xor
push
pusha
aas
push
add
pop
dec
add
sub
push
insl
xchg
mul
loopne
je
je
and
jae
dec
fucomi
sti
sbb
dec
adc
insl
push
sub
subl
adc
jae
bound
jns
push
jne
imul
andl
xchg
aas
imul
ds
jp
outsl
or
insl
xchg
imull
dec
fs
fnstsw
cmpsl
lret
aas
and
outsl
jmp
jo
ja
ja
mov
lret
jo
jnp
stos
insl
sub
push
imul
scas
cmp
jne
add
push
data16
xor
sub
idivl
insb
jp
sub
insb
lcall
repz
addl
sbbl
arpl
or
cmpl
daa
dec
jbe
fistpll
fisubs
inc
xor
je
lds
loope
jnp
sbb
jo
arpl
mov
xchg
mov
mov
fbld
sbb
push
das
jb
mov
shll
aas
cs
pusha
xor
xor
movsb
daa
outsl
andl
xor
fidivrl
jg
push
sub
jno
in
call
aaa
xor
pop
push
jg
dec
iret
push
enter
ss
or
dec
fbstp
jne
jbe
jb
inc
mov
xchg
jne
pop
stos
nop
mov
jbe
xor
cmc
mov
js
das
rcrl
stos
popa
mov
push
adc
push
jo
insb
push
cmc
fistps
pop
mov
iret
arpl
inc
sbb
add
mov
insl
lret
imul
stos
fs
imul
shll
orb
popa
jnp
xor
jle
pop
cmpsl
outsl
pop
sub
das
xchg
rcll
cmp
pop
add
lds
pop
addr16
cmpsb
mov
mov
cmp
lock
popa
mov
mov
push
jg
scas
popw
inc
stos
pop
jecxz
push
push
ret
or
sbb
cmp
xor
sub
dec
addr16
or
add
iret
repz
out
inc
inc
subb
jns
adc
adc
in
adc
adc
push
sbb
out
push
mov
cmp
das
ljmp
xor
lahf
jmp
js
cmp
pushf
jp
push
cld
mov
lcall
pusha
lock
data16
mov
jp
fwait
sbb
out
sub
push
push
mov
sbb
fcmovne
add
cmovl
mov
cmp
fdivrp
lock
ja
ds
negb
shll
cmpsl
push
fwait
mov
xlat
dec
add
sbb
mov
add
in
sbb
jns
add
das
test
adc
das
and
jp
shlb
dec
ljmp
dec
inc
and
test
inc
jmp
imul
mov
idivl
aas
pusha
mov
ret
dec
inc
mov
mov
test
jne
jne
outsl
dec
and
mov
pusha
pop
inc
das
insl
insb
rorl
pop
imul
lea
mov
jns
out
out
add
push
arpl
or
jp
sahf
scas
jne
jae
push
and
pop
sbb
jne
dec
fbstp
push
ds
neg
insb
sbb
iret
mov
jg
jle
imul
insl
cmp
pop
idiv
mov
fs
dec
and
jns
add
outsl
rcll
das
das
jns
push
dec
push
inc
inc
arpl
std
loop
bound
dec
outsl
jbe
dec
arpl
movd
add
je
inc
jne
jne
xor
das
mov
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
out
jae
adc
xchg
pushf
jae
cmp
ja
divb
ja
inc
popa
je
jb
xor
and
mov
push
gs
sbb
dec
outsl
outsb
pushf
jae
std
and
jbe
dec
cmp
dec
inc
aas
add
out
dec
ja
icebp
or
mov
cmp
push
push
inc
push
pop
call
jne
inc
inc
mov
xchg
test
daa
and
sub
sub
cs
xor
cld
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
and
push
sbb
pop
pop
pop
pop
pop
adc
popa
bound
incw
push
insl
outsb
outsl
jo
add
jbe
js
jp
jl
cltd
mov
dec
adc
lcall
loopne
or
and
add
orb
push
sar
lret
jno
in
in
mov
mov
repz
ret
movsl
add
mov
cmc
loop
je
arpl
imul
mov
outsl
das
sub
adc
push
add
jo
xor
popa
js
addl
je
pop
dec
pop
sbb
clc
sahf
pusha
gs
ret
ret
sub
iret
loopne
int3
adc
mov
sti
out
add
push
add
add
add
test
pop
and
push
pop
push
add
xor
pop
hlt
and
add
pusha
push
lcall
add
or
xor
fidivrs
addb
add
xchg
imul
ret
add
orb
dec
daa
push
cmpb
push
and
sub
mov
jnp
jb
int3
push
jo
add
jbe
pusha
mov
push
outsb
imul
outsb
and
push
xor
add
add
sub
test
mov
mov
mov
pop
sbb
in
lea
mov
nop
xchg
and
mov
add
xchg
ja
mov
sahf
or
push
leave
inc
scas
mov
je
out
add
lods
push
stos
aad
mov
mov
in
add
sbb
push
pop
scas
sub
pop
sbb
inc
push
inc
sub
ss
test
jge
js
dec
dec
inc
dec
inc
adc
mov
je
notl
fs
je
add
push
jae
dec
bound
je
mov
shrl
xor
push
jbe
dec
out
outsl
push
add
je
xor
push
xchg
daa
sti
iret
xchg
gs
lea
mov
outsl
js
aas
xchg
das
inc
push
xchg
cs
and
insl
ficoml
jo
and
and
daa
pop
and
aaa
insb
les
dec
imul
mov
mov
mov
ds
cmp
cmpsb
and
jb
jns
daa
pop
and
stos
ss
jns
mov
mov
and
arpl
je
inc
inc
imul
addr16
outsb
jle
cmpsb
sbb
jo
or
insb
lock
jne
imul
mov
push
push
lahf
adc
mov
insl
and
lods
jp
cmp
inc
and
pushw
mov
faddl
mov
cmp
pop
pusha
gs
sbb
adc
pop
and
mov
lock
push
outsb
lods
mov
or
pop
pop
pop
push
push
jae
jno
mov
or
cmp
push
shrb
fdivrl
push
subl
gs
adc
sub
cmp
xchg
inc
push
push
push
push
dec
mull
fnstenv
fs
push
mov
fisttps
dec
jge
test
add
insl
jle
lock
imul
call
or
test
jg
jae
enter
inc
in
adc
mov
das
gs
sbb
pop
xor
jg
fadd
subl
push
or
push
lea
test
mov
mov
daa
xchg
mov
in
mov
daa
popw
pop
cmp
jnp
sti
cmp
or
ds
and
sub
fst
cmp
push
addr16
jle
imul
add
add
sub
cmp
mov
sbb
das
push
jb
lea
ret
aaa
aaa
and
push
inc
hlt
in
mov
xchg
out
mov
pop
pop
jne
stos
addr16
push
jmp
push
xchg
sbb
jo
push
xor
gs
imul
ret
xor
addr16
dec
sbb
ret
sahf
inc
pop
sub
mov
cmp
push
jl
push
push
out
sub
incb
push
int
jns
sub
add
std
lock
repz
push
sub
inc
xchg
enter
sub
repz
mov
out
sahf
out
pushf
cwtl
xchg
nop
mov
outsb
test
cmpb
popa
rcll
repz
jo
push
push
cmp
repz
push
push
dec
dec
iret
repz
inc
inc
cmp
xor
cmp
repz
and
add
cmpsl
stc
call
mov
jns
out
dec
sub
sti
iret
repz
les
iret
repz
xor
or
cli
jns
out
in
shlb
lahf
out
or
stc
int3
test
sbb
iret
jl
xor
jg
push
add
test
push
lock
jle
mov
adc
add
add
adc
leave
and
dec
cmp
push
jb
add
addl
pop
sbb
push
jne
and
fsubs
addl
add
add
ja
push
lret
jbe
push
add
lea
or
in
and
push
pop
fbld
ss
jle
add
out
or
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
rol
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
or
and
mov
loope
adc
lds
test
incb
loopne
lcall
gs
popa
data16
mov
shlb
jns
push
xor
add
fiaddl
lahf
js
test
push
arpl
inc
insb
fs
sbb
mov
je
xor
cmc
or
push
invlpg
jae
pcmpgtw
xor
push
inc
lcall
adc
dec
push
push
dec
and
xor
push
dec
inc
das
mov
inc
add
adc
push
jo
ljmp
adc
aaa
adc
popa
into
mov
mov
jnp
jnp
std
adc
outsb
mov
ds
pop
adc
clc
idivb
stc
lret
sbb
jb
jge
arpl
cmp
pop
dec
scas
jp
jno
in
fstl
mov
repz
in
and
cmp
dec
imul
std
dec
lret
add
inc
mov
mov
sub
ficomps
fadds
inc
sbb
pop
jns
ds
xor
incb
ljmp
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
ljmp
cmp
cmp
cmpsb
das
xchg
pop
and
xchg
lret
sahf
icebp
lock
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
jg
fstps
insb
mov
out
leave
ljmp
orb
popa
pop
lock
push
or
scas
int
mov
leave
hlt
mov
ja
decl
sahf
xchg
dec
add
scas
lods
dec
lock
xor
pop
mov
pushf
fdivr
icebp
pop
pop
repnz
icebp
iret
mulb
and
es
sbb
push
lcall
xor
mov
and
daa
or
or
jmp
fildl
sub
inc
loopne
clc
mov
xchg
and
inc
cmovg
fisttpll
xchg
and
and
adc
sti
fwait
imul
into
inc
sti
es
jae
xchg
pop
ret
out
and
mov
adc
data16
scas
mov
or
frstor
push
jl
andl
jne
or
pcmpeqw
rcr
xlat
sti
or
ja
popa
daa
daa
je
js
inc
mov
sub
lahf
je
sub
push
lahf
fucomi
push
sub
lret
xchg
ret
cmpsl
lock
testb
js
jb
add
fadd
or
sbb
bound
inc
inc
stos
add
test
jb
jae
outsb
js
fbstp
insl
jle
fs
mov
lock
pop
cmpsl
mov
and
xchg
ret
jg
jnp
scas
xor
loop
fbstp
out
pop
jno
push
mov
push
mov
jle
push
ret
rorl
lds
add
xor
push
ret
jecxz
shl
dec
stos
jg
out
dec
jo
mov
sbb
xchg
jns
outsb
xlat
cs
pop
out
mov
jg
mov
cmpsl
xlat
data16
sbb
adc
shrl
test
incl
rol
push
sub
iret
push
push
pop
je
mov
negl
sbb
cmp
bts
jecxz
je
js
mov
pop
inc
adc
xchg
insl
repz
dec
outsl
cld
jp
test
aas
ret
gs
pop
and
add
popa
adc
addr16
cmp
bound
stc
inc
cmp
fwait
ja
adc
addr16
jbe
iret
out
pop
addr16
repz
je
push
lea
jge
dec
pop
aas
arpl
daa
pop
arpl
cmp
sti
push
loopne
ja
sahf
or
xor
and
push
mov
insb
scas
inc
mov
jecxz
dec
sbb
mov
fildl
push
xor
cmpsb
push
idivl
or
iret
mov
push
and
inc
xor
mov
jnp
add
inc
aas
outsb
sbb
xchg
push
push
test
pop
jb
push
jl
cmp
data16
push
arpl
sbb
adc
aaa
les
add
sbb
sub
sbb
push
into
or
sub
fmull
or
out
cmc
dec
mov
lahf
neg
sbb
adc
aaa
push
in
ficoms
orl
and
arpl
sub
push
je
or
xor
inc
sub
test
xchg
push
mov
cmp
cmp
cmp
mov
lcall
dec
mull
loope
inc
out
repz
push
test
notb
pop
loope
inc
pop
mov
dec
popf
sub
jp
jne
movl
jb
xor
push
push
jo
jmp
add
add
fstpl
out
pop
push
lret
pop
pop
pop
outsl
and
pop
sti
sbb
rcrl
insb
dec
xor
push
inc
inc
jno
xor
addr16
pop
xchg
les
inc
shll
outsl
or
ret
out
mov
push
pop
pop
fwait
ds
xchg
cs
out
pop
adc
dec
jecxz
push
es
ret
aaa
sarl
dec
xchg
scas
out
test
fnsave
inc
push
inc
mov
ret
idivl
arpl
dec
insb
cmpsl
fidivs
inc
dec
add
dec
out
test
out
adc
mov
add
ss
mov
dec
mov
es
ds
xchg
dec
ud2
adc
lahf
insb
sub
sti
cmp
addr16
cmp
mov
cmpsl
mov
ja
sub
sub
inc
mov
bound
pop
outsl
push
lcall
movsl
add
cmp
inc
inc
mov
mov
mov
inc
jl
jl
mov
pop
jl
mov
iret
push
addr16
aaa
and
addr16
pop
sbb
push
loopne
sub
ja
xchg
adc
out
jns
jo
pop
xchg
mov
fsubl
push
out
push
adc
jl
pop
ja
xor
imul
out
es
pop
icebp
into
sbb
add
push
cmp
push
imul
jl
loopne
outsb
jo
popa
pop
arpl
mov
jl
xorb
jl,pn
js
int
outsl
lret
jl
jo
sbb
jp
bound
jns
add
loopne
mov
loopne
sarl
mov
loopne
shlb
fs
lock
loope
mov
imul
push
ret
sbb
xchg
jl
into
orl
les
iret
jl
mov
jle
daa
or
cmp
addr16
outsl
push
and
mov
incl
sub
outsl
push
push
push
push
insb
pop
xchg
mov
fbld
daa
ds
sbb
ret
daa
fisttps
jl
popa
pop
add
jns
daa
inc
test
jae
out
add
jo
aas
dec
loop
cmp
push
stos
pop
mov
js
mov
fwait
xchg
stos
jo
jno
cmpsl
pop
pop
scas
jle
ret
jb
bound
data16
xchg
call
add
inc
aas
popa
sub
sbb
fwait
push
and
xchg
imul
push
sub
lcall
mov
push
add
xor
inc
add
dec
int
repz
sbb
dec
and
rcl
jl
push
sbb
inc
add
adc
fidivs
inc
pop
enter
mov
data16
aas
fimull
mov
push
in
dec
jl
dec
push
mov
and
out
ss
jp
and
xlat
out
dec
sti
push
push
push
push
ret
push
xor
scas
fnstcw
add
push
pushf
sub
imul
aas
pop
pop
into
lds
mov
jae
push
inc
push
rcrb
filds
jecxz
in
sarl
pushl
push
lock
push
and
jmp
iret
repz
arpl
addl
out
fisubrs
test
je
jns
dec
inc
mov
push
out
sbb
pop
aaa
aad
and
test
pop
jae
out
lods
jg
jo
jns
add
inc
pop
popa
jl
cmpl
push
mov
arpl
insb
pop
jno
push
pusha
aaa
das
jae
push
ja
lret
loopne
jae
push
push
and
popa
outsb
arpl
push
gs
insl
pusha
push
popa
jne
shll
jo
mov
push
dec
bound
out
sbb
sub
and
pop
lock
push
jb
push
push
jb
sahf
mull
push
xchg
enter
out
and
js
iret
repz
ret
aam
clc
cmp
outsb
les
out
jge
pusha
sahf
bound
jne
pop
inc
adc
add
pop
ds
gs
cmp
cmp
sahf
shlb
xchg
jo
jb
dec
jb
popf
mov
add
jae
ss
sbb
jg
lods
xor
and
and
jae
imul
cmp
fs
adc
iret
add
or
or
push
adc
or
or
imul
dec
outsw
sub
ja
adc
imul
or
mov
sbb
test
je
aas
scas
imul
movb
push
xchg
push
inc
int3
push
push
pop
push
inc
push
mov
inc
out
dec
push
call
add
js
popa
xchg
dec
aas
mov
xorb
sub
adc
sbb
adc
xlat
adc
mov
cmpsl
imul
arpl
popa
xchg
add
sbb
scas
cmp
hlt
adc
add
sub
mov
fcomi
fsubrp
icebp
add
jbe
mov
mov
inc
sbb
inc
sbb
add
out
fldl
add
or
xlat
dec
test
jae
icebp
ja
mov
aaa
and
and
fs
xchg
push
pop
xchg
popa
les
sbbb
xor
add
mov
jae
pop
xchg
inc
scas
jg
stos
lea
bound
pop
popl
mov
xchg
inc
rolb
cmovns
or
add
inc
das
add
and
xor
hlt
test
mov
imul
push
pop
shl
orb
jg
push
lock
cmp
pop
pop
dec
mov
sti
sub
inc
jmp
adc
and
addl
mov
inc
inc
addr16
test
aad
and
xchg
shrl
add
jg
lods
and
push
jae
and
and
cmp
sbb
sub
or
ja
sub
iret
xchg
push
pusha
mov
jae
mov
mov
push
ljmp
mov
fildl
mov
dec
lahf
aaa
lock
inc
arpl
dec
add
aas
pop
call
outsl
fs
push
add
push
adc
xchg
xor
push
cli
pop
shr
addr16
fisubs
xsaves
vmovdqu
inc
fwait
ss
pop
pop
or
lcall
mov
push
cmp
xchg
dec
xchg
out
fsubs
push
mov
idivl
arpl
rclb
pop
sti
add
aam
pop
add
sahf
jg
mov
cmp
inc
pop
mov
aas
inc
push
mov
mov
sbb
add
mov
inc
fcomi
mov
dec
fnsave
popl
xlat
and
jb
lds
pop
vmwrite
sub
mov
jno
pop
fwait
test
je
jns
push
xor
and
sbb
sub
arpl
pop
mov
xor
shlb
dec
imul
sub
fwait
and
cmp
pop
lret
or
sbb
pop
imul
outsb
aam
pop
and
cmpsl
cmp
cmc
push
cs
and
add
xor
cmpsb
mov
test
lahf
xchg
shrb
xor
and
insl
lds
xlat
inc
push
stos
aad
pop
imul
cmp
inc
dec
inc
pop
add
lock
add
aaa
inc
cmp
push
cmp
das
das
dec
adcb
dec
inc
hlt
rorb
mov
xchg
xchg
xchg
inc
adc
das
inc
addr16
fnstsw
daa
push
lret
adcb
jae
imul
pop
stos
out
outsl
dec
sub
arpl
jae
push
out
fwait
ret
or
imul
lahf
arpl
adc
jo
shll
fdivs
and
push
inc
sub
stos
dec
imul
sbb
push
ficomps
mov
dec
and
lods
adc
rcl
fwait
daa
push
inc
shll
jne
lods
imul
cmp
xadd
inc
fsubs
roll
dec
and
lods
ret
scas
pop
cmp
pop
sbb
iret
sbb
mov
sbbl
adc
aas
xor
gs
and
repz
inc
add
test
sub
cld
mov
sub
shll
mov
dec
pop
mov
imul
icebp
push
call
movsb
or
xchg
stc
lds
sub
add
xlat
jnp
add
pop
inc
imul
arpl
fs
in
mov
imul
in
int
negl
xor
jge
das
subl
mov
jmp
imul
stos
push
jle
sub
or
inc
pop
arpl
imul
movb
push
bound
imulb
push
and
lahf
inc
insb
adc
xlat
popa
xchg
mov
cmp
adc
or
adc
imul
lods
add
ret
icebp
jo
addr16
mov
aam
and
data16
cmpsb
imul
daa
andl
adc
push
stos
xor
nop
outsb
pusha
insl
push
push
jmp
aaa
sti
fsubs
sub
mov
mov
ja
adc
imul
in
xor
push
enter
dec
popl
cmp
push
sub
mov
packuswb
or
lcall
pop
push
shlb
fwait
dec
jl
push
push
mov
pop
pshufw
loopne
jg
fisttps
mov
pop
testb
insb
fcmovnu
dec
push
add
mov
mov
push
sub
push
jl
add
xchg
jo
fs
cs
and
dec
jge
jge
iret
outsl
iret
jp
cmpsl
testl
fwait
arpl
xchg
mov
repz
mov
sub
and
call
fistpll
insb
shrb
dec
mov
inc
and
mov
xlat
iret
mov
out
xabort
loopne
jl
and
stc
sarl
cld
jnp
mov
push
idiv
aam
push
repz
and
pop
add
sahf
out
push
jp
or
movsl
push
aaa
lahf
out
or
or
or
lods
imul
fists
addl
and
bound
xor
imul
lods
loop
pop
xor
or
movsl
mov
inc
mov
mov
out
lahf
xor
and
or
xchg
mov
cwtl
popaw
divl
push
scas
out
lret
push
jae
jae
imul
lods
adc
cmp
lahf
pop
mov
mov
call
arpl
shlb
pop
mov
out
adc
pop
mov
push
mov
negl
arpl
cmp
int
lods
add
ljmp
shll
push
sub
push
push
pop
mov
lea
popa
adc
mov
out
xchg
out
clc
sbb
and
add
pop
stos
cmp
and
mov
aas
sub
addb
pop
roll
shlb
jnp
bound
add
mov
jecxz
mov
add
arpl
lea
mov
push
pandn
jnp
jge
mov
fisubrl
jae
xor
mov
addr16
jl
sub
outsb
and
iret
pop
inc
in
rorb
lock
aas
aaa
subb
adc
mov
mov
pop
insl
pop
outsb
push
mov
cmp
mov
and
dec
lods
das
test
test
push
push
jb
std
insl
mov
mov
push
jae
push
add
adc
stos
inc
xchg
pop
and
in
jb
mov
xchg
insb
sbb
test
js
dec
cmpsb
xchg
push
aam
adcb
xor
cmpsl
pop
and
call
dec
xchg
inc
and
movsl
mov
dec
cld
movsb
scas
xchg
stos
fs
add
xchg
mov
xchg
push
leave
push
adc
push
repnz
pop
and
stos
in
and
lahf
xchg
pop
and
sub
sahf
nop
dec
and
popf
xchg
in
jb
inc
in
pushf
dec
scas
xchg
test
xchg
mov
xchg
push
leave
dec
clc
lcall
or
cltd
push
sbb
popa
pop
mov
mov
jno
arpl
dec
and
fdivrs
lods
push
pop
inc
insl
xor
cmpsl
divl
loop
mov
mov
sub
mov
inc
dec
xorb
stos
lods
xlat
adc
pop
xor
cmp
dec
inc
inc
pop
xchg
mov
insb
iret
dec
out
dec
andl
das
inc
mov
adc
cmpxchg
pop
mov
adc
and
mov
mov
fwait
add
mov
and
movsl
lea
lods
lea
filds
insl
adc
mov
push
pop
shrb
and
mov
mov
add
dec
setbe
aas
insl
aam
mov
or
mov
mov
inc
and
das
addr16
test
outsl
mov
pop
ret
pop
cltd
leave
in
push
scas
sbb
aas
xchg
rcrl
neg
scas
add
scas
jg
fimuls
ffreep
and
dec
aaa
inc
fildl
inc
imul
and
xchg
mov
jo
mov
jp
and
mov
js
aaa
arpl
insb
xor
adc
mov
outsl
shl
iret
aaa
outsl
pusha
vmovlhps
scas
or
add
push
push
inc
mov
outsl
jecxz
sub
lahf
cmpsl
adc
jge
cmp
cmp
fadds
inc
pop
loope
jbe
mov
pop
mov
movb
ja
adc
inc
out
scas
hlt
dec
sbb
pop
iret
inc
arpl
int
dec
push
sbb
mov
cmp
aas
mov
push
pop
out
outsl
jbe
rclb
inc
pop
call
xlat
leave
fwait
ret
push
sub
outsb
sub
fdivs
fldl
es
pop
inc
pavgb
jbe
imul
sbb
dec
pop
or
push
rclb
add
sub
lds
fimuls
cmp
xchg
sub
pusha
push
jmp
testb
aas
dec
inc
sbb
jecxz
sub
ret
fnsave
aaa
xor
dec
jne
addr16
push
arpl
je
insl
cmpsb
xor
insl
je
inc
bound
xor
xor
sahf
add
dec
fs
or
loop
leave
cmp
add
mov
sub
xchg
fstps
popa
pop
jae
lret
out
out
insl
xor
les
sti
ss
aaa
jnp
pop
dec
pop
bound
jae
js
sbb
cmpsl
cmp
sub
or
rolb
xor
inc
pop
jecxz
push
sbbb
pop
xor
insb
and
jecxz
xchg
mov
out
jle
or
xor
mov
ficomps
movzwl
inc
jns
out
push
sub
int
loopne
push
stos
add
outsb
out
mov
push
test
dec
push
push
subl
push
sub
add
cli
jg
mov
jb
push
or
imul
scas
xor
adc
push
ret
pop
add
xchg
shlb
dec
xchg
fcomps
call
or
or
ret
cwtl
add
add
inc
mov
pop
cmp
push
rcrb
int3
inc
ja
mov
adc
fildl
fisttps
inc
and
or
idivl
iret
adc
push
mov
add
iret
aam
test
jns
movsb
sbb
sub
pop
mov
push
push
fwait
outsl
jmp
aad
push
xlat
je
mov
push
ja
pop
or
mov
aaa
jecxz
jmp
jnp,pn
cmpsb
mov
aaa
xchg
cmovb
hlt
or
pop
ret
ljmp
add
stos
xlat
shrl
or
fbstp
popf
cwtl
mov
inc
xchg
shlb
pop
xor
addb
subl
xchg
pop
ss
push
je
push
bound
push
push
push
mov
cmp
xchg
xor
push
pop
and
out
es
and
push
subl
scas
push
insl
xchg
xchg
and
neg
cmp
jns
xor
cmp
fs
dec
stos
push
je
jbe
loop
xor
jecxz
pop
jns
dec
shlb
mov
inc
or
js
push
or
xor
stc
cmp
cmp
xchg
mull
dec
or
inc
in
fidivrs
rorb
mov
ss
push
dec
mov
push
bound
xor
js
adc
push
mov
cmp
push
lret
jb
adcl
es
xor
xlat
cmc
rolb
inc
data16
xor
ficomps
shlb
sub
arpl
fs
mov
mov
cmp
testb
out
cmp
mov
cs
idivl
imul
pop
mov
mov
push
es
ss
outsb
pop
mov
push
xor
dec
jb
das
inc
pop
ret
jnp
pop
dec
es
das
add
fbstp
push
and
or
sysexit
js
pop
ja
iret
jns
dec
cs
sahf
push
jnp
sub
outsl
push
push
neg
insl
sub
push
insl
xlat
fidivrs
mov
inc
ja,pn
xor
push
ds
notl
jp
jp
ds
scas
cmc
push
push
dec
jg
dec
das
pxor
xorl
pop
outsb
or
outsl
dec
xor
lock
push
into
xor
sbb
jo
outsl
imul
pop
jb
push
and
mov
ffreep
add
push
imul
bound
repz
xchg
sub
addr16
jmp
shll
lock
dec
fbstp
fmuls
sub
inc
dec
jnp
pushf
cs
sub
add
jle
orb
push
mov
inc
jecxz
lcall
mov
xchg
pop
or
xchg
enter
sbb
pop
xor
mov
push
loop
mov
push
movntps
ret
shlb
inc
cmp
lret
pusha
pop
xchg
mov
nop
test
adc
push
cmpsl
push
repz
inc
and
add
arpl
arpl
sub
mov
inc
stos
scas
lcall
fs
mov
cltd
arpl
lahf
mov
cmc
xor
jle
shlb
dec
daa
sub
adc
sbb
pop
addr16
jmp
push
add
dec
and
pop
fwait
jecxz
mov
mov
loop
pop
sbb
incl
sbb
cs
push
xchg
adc
inc
pop
sub
inc
add
mov
sbb
aaa
icebp
es
outsl
popa
fs
outsl
cld
call
das
aas
sub
xchg
sbb
jo
pop
shrb
shrb
mov
or
les
imul
dec
movsb
inc
sbb
insb
pushf
in
jle
lods
xchg
rcrb
js
sub
jp
sub
add
sbb
sub
shlb
dec
stos
fisubl
addr16
sbb
xor
clc
sti
jae
add
mov
pop
xchg
jae
imulb
cs
jmp
xor
sub
and
cmp
flds
mov
add
adc
out
sahf
inc
cwtl
add
mov
mov
jne
xor
pop
pop
cmp
cmpl
arpl
ss
rcr
mov
xor
xor
push
test
inc
rolb
xchg
das
pop
or
ret
pop
xchg
mov
bound
je
js
stos
lock
outsl
jle
je
fcmovb
push
mov
fisttpll
imul
mov
xchg
push
xchg
roll
lahf
add
xorb
aaa
das
push
sub
outsb
mov
inc
mov
outsl
loop
ret
incl
jg
ret
inc
sub
lea
mulb
bound
push
test
pusha
ret
insb
repnz
lret
jbe
addr16
pop
xor
push
xor
sub
fwait
and
cmp
mov
fcmovnb
das
aam
ljmp
xchg
inc
clc
pop
adc
mov
popa
fldt
xor
rep
xchg
dec
ror
dec
push
mov
lahf
lods
push
sbbl
sub
inc
loop
push
out
cmp
jne
fistps
adc
xlat
dec
pop
pop
ds
inc
daa
jns
push
add
pusha
mov
or
filds
sub
and
ret
outsb
dec
arpl
out
xchg
jbe
dec
dec
test
xlat
pushf
pop
outsl
mov
mov
das
xchg
xor
pop
add
fbstp
int3
inc
or
fs
jne
test
add
mov
lahf
cmp
push
ds
shrb
pop
cmc
adc
jle
or
mov
mov
push
dec
add
das
pop
push
sbb
ja
mov
inc
mov
cmpsl
xchg
in
xchg
packuswb
push
rolb
outsl
dec
aas
sub
fbstp
cmp
push
sahf
testl
sub
or
adc
jnp
pop
push
sbb
scas
roll
pop
iret
add
addl
jl
out
roll
add
or
ss
in
roll
add
add
fldcw
pop
or
cmp
jns
adc
sub
xor
sahf
int
sbb
push
mov
mov
mov
popa
xchg
add
shrb
mov
int3
insb
ret
sub
shrb
xchg
pop
insb
ds
adc
pop
add
fcompl
sbb
lret
psubusw
add
add
inc
enter
stc
das
incl
mov
push
push
adc
ret
pusha
js
mov
outsl
les
orb
adc
pop
add
mov
and
mov
clc
aam
adc
and
mov
add
adc
mov
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
insb
out
adc
cli
mov
sub
sub
out
inc
mov
mov
sbb
mov
ds
pop
sbb
iret
imulb
subb
mov
dec
fsubs
jg
sbbl
xor
dec
xchg
xorb
jecxz
dec
push
pop
mov
dec
push
xchg
add
jg
inc
jbe,pn
pop
push
and
inc
cmp
ds
cmc
or
dec
sbb
call
push
push
mov
leave
and
xchg
pusha
add
addl
inc
add
and
cmp
cs
xchg
andl
iret
leave
jae
dec
pop
cmp
sub
jb
and
in
imul
dec
sahf
xchg
out
cmp
inc
mov
dec
lods
pushf
dec
rolb
dec
jo
xchg
test
test
jo
setg
sub
xor
push
icebp
cmovs
push
pop
push
dec
paddq
lret
mov
cmp
push
pop
pop
mov
pop
mov
lds
push
cmpsb
jecxz
lret
ss
jne
mov
sub
adc
inc
push
jp
inc
jno
addl
ss
sbb
out
cmpsb
jp
mov
inc
ret
cmp
dec
imul
cli
adcl
jnp
mov
mov
cmp
popa
outsb
imul
mov
stos
mov
rorb
pop
add
dec
inc
mov
insl
sarb
xlat
push
or
test
add
pop
xchg
inc
sub
cmp
push
mov
scas
test
add
add
das
pop
xor
jo
xchg
outsb
roll
nop
aas
inc
dec
popa
jno
inc
lahf
mov
jp
lds
aas
data16
jne
inc
sbb
movsl
cmc
incl
or
push
ret
push
add
mov
mov
add
xlat
xchg
shlb
out
mov
pop
jb
pop
pop
dec
ficoml
fcmovnbe
gs
repz
push
jmp
dec
jg
pusha
adc
xor
push
pcmpeqb
inc
add
outsl
jbe
insb
stos
add
outsl
dec
adc
cltd
dec
push
push
push
mov
aaa
dec
inc
arpl
xor
cmpsb
jl
js
fisubrs
test
pop
push
fs
jge
out
addl
jne
scas
xchg
test
mov
mov
inc
mov
addb
jge
cmp
xchg
sbb
sahf
inc
xchg
fisubs
mov
xor
and
and
mov
dec
sti
aad
pop
cmp
test
aam
jnp
daa
pop
inc
shll
data16
jnp
ja
in
push
xchg
mov
jne
sbb
out
outsl
inc
popl
mov
mov
inc
fiadds
jecxz
jmp
imul
or
daa
fidivrs
pop
mov
xchg
fldcw
cmpsb
pop
es
cmpsl
jnp
or
and
add
dec
rcll
iret
movsb
adc
shr
push
inc
outsl
fs
cmpsb
mov
mov
fs
repz
cmp
push
push
or
out
ds
dec
insb
adc
inc
pop
pushf
in
jnp
jle
js
or
insb
inc
pop
inc
insb
inc
hlt
aas
es
cmpsb
inc
in
cmp
xor
mov
xchg
iret
repz
xchg
repnz
mov
dec
insb
je
dec
jge
jl
out
pop
mov
adc
out
sub
push
sti
sahf
imull
les
push
mulb
push
mov
xchg
xchg
push
fists
inc
xlat
mov
push
xchg
inc
jecxz
cs
lahf
idivl
mov
push
pop
sahf
aas
neg
shrl
jno
adc
cmpsl
pop
jg
cmp
sarl
es
popf
lahf
mov
sti
sub
pop
mov
in
int
pop
xor
adc
push
shll
sahf
out
lcall
ds
sarl
daa
pop
lock
aaa
fimuls
push
cmp
pusha
sub
pop
fcomps
jns
xchg
push
push
jno
ror
mov
hlt
inc
cmp
sahf
out
and
inc
xchg
fiaddl
cs
mov
cmp
repz
push
repz
repz
lods
leave
repz
out
aas
cmp
add
dec
xor
daa
push
jg
dec
sbb
scas
sub
adc
jg
xor
rcrb
push
push
mov
xor
adc
fisubrs
pop
pop
mov
and
push
mov
loopne
sub
test
mov
sti
das
int3
push
and
pop
sbb
enter
adc
inc
repnz
iret
pusha
or
mov
orl
add
outsl
inc
sub
xchg
push
adc
mov
insb
vdivsd
ja
add
insl
push
inc
lds
leave
and
xor
ja
les
loope
outsb
outsb
jp
xor
push
push
mov
enter
push
imul
insl
gs
cmp
inc
pop
jmp
jp
or
dec
inc
call
iret
aam
stos
imul
pop
dec
jo
dec
pusha
lds
cmpsl
add
and
push
dec
ljmp
les
popa
je
mov
popa
mov
mov
add
shrb
mov
out
jo
mov
adc
mov
fwait
mov
fmull
daa
jb
push
adc
subb
fisubrs
arpl
popf
pop
sub
aas
xchg
mov
or
bound
pop
daa
xchg
mov
pop
or
arpl
push
jo
mov
adc
or
add
mov
cmp
xorl
mov
push
pop
aam
dec
jecxz
inc
jecxz
lods
movb
mov
fs
in
testl
ficoml
cmpsl
or
popa
out
jb
inc
sbb
xchg
pop
xor
jmp
pop
add
cmpsl
mov
addr16
add
jns
arpl
add
jo
add
adc
cs
pop
insb
pop
daa
add
xchg
or
xor
xchg
mov
lds
imull
sbb
popa
xchg
aam
das
fs
jo
xor
cmpsl
imull
push
outsl
imul
jnp
xchg
xchg
shrb
rclb
jno
getsec
push
inc
inc
es
jnp
outsl
aaa
test
pop
jb
addr16
loopne
add
pop
pop
addl
push
sahf
enter
xlat
push
dec
add
sbb
lcall
inc
adc
cmp
inc
shlb
aas
jmp
or
xor
cmp
jbe
inc
iret
das
push
push
and
lea
inc
aaa
push
mov
test
push
push
sbb
pop
addr16
fwait
inc
adc
inc
ja
inc
shr
iret
fs
adcl
bound
pop
add
push
xchg
mov
sti
ljmp
ret
mov
mov
and
xchg
data16
or
aas
add
push
daa
scas
outsl
aaa
in
aam
fldt
fldt
out
xchg
lea
inc
das
add
or
pop
pusha
mov
or
shrl
add
fcomps
push
mov
mov
mov
fsubs
xchg
add
stos
push
or
pop
mov
ret
add
addb
and
in
fwait
arpl
out
jbe
add
mov
adc
pop
mov
scas
push
insb
mov
dec
jo
or
push
ret
loope
xor
sbb
sbb
add
ret
das
push
aaa
push
jnp
imul
inc
inc
push
inc
imul
jb
pop
sbb
jae
or
rcrb
pop
out
sarb
push
xor
pop
pop
jmp
es
orb
sarb
mov
lcall
jnp
loopne
and
dec
sti
inc
push
pop
orb
pop
inc
ss
inc
pop
mov
dec
scas
mov
push
cmpsl
dec
add
jbe
iret
inc
cmpsl
push
out
sub
insl
daa
ret
pop
test
add
inc
xor
xchg
inc
and
inc
daa
mov
adc
subl
scas
xlat
cmpsb
lret
cmpsb
lret
adc
sbb
stos
mov
xchg
es
insl
jo
je
sbb
jbe
add
addr16
jo
jae
xchg
jo
frstor
pop
jno
outsl
xor
push
aaa
sbbb
sbb
fadds
adc
jg
xchg
je
jne
or
and
scas
mov
lahf
insb
and
dec
out
aaa
mov
dec
jae
into
sbb
bound
insl
mov
cmp
inc
fwait
mov
jb
inc
je
mov
sbb
imul
push
fadds
and
inc
gs
xlat
loope
data16
repz
inc
sbb
aam
mov
dec
testl
pop
stos
sub
push
fbld
push
push
cmp
and
sbb
add
jg
pop
inc
dec
test
jmp
and
sub
into
dec
mov
cmp
push
arpl
orb
loopne
pop
xor
pop
inc
sub
cmpsl
pop
cmp
imul
pop
adc
inc
push
dec
and
push
aam
adc
fidivrl
jb
iret
mov
add
mov
mov
test
fdecstp
adc
or
aaa
inc
insb
pop
stos
sahf
dec
cwtl
sysret
daa
mov
mov
cmpsb
outsb
cmpsl
jecxz
movsl
jo
inc
decl
mov
out
push
test
scas
cmp
push
ljmp
dec
push
xchg
add
adc
nop
add
fidivrl
sub
movl
add
adcb
and
inc
push
add
fstl
ja
andl
js
xor
push
sub
cmp
rorb
push
das
sbb
imul
or
daa
daa
lcall
and
push
pop
inc
inc
inc
push
inc
cmp
pop
pop
or
aas
js
insb
cwtl
mov
sbb
push
and
outsb
push
les
pop
outsl
insb
lods
jne
pusha
insb
pop
gs
and
sbb
ds
push
pusha
jo
sbb
push
sbb
pop
out
dec
aaa
push
add
xor
cmpsl
and
dec
push
pop
adc
lcall
fdivrl
push
fadd
mov
cli
push
adc
add
mov
sbb
push
outsb
inc
or
push
mov
sbb
or
pop
lahf
lahf
outsb
lea
loopne
push
inc
mov
sbb
jl
mov
lock
aaa
xor
cmp
invd
cmpsb
pop
icebp
imul
add
pop
pop
nop
scas
sbb
enter
mov
iret
outsl
jbe,pt
mov
mov
daa
dec
movsl
dec
inc
xchg
enter
push
lods
xchg
mull
lea
jnp
in
enter
or
loop
lds
movsb
mov
push
out
push
imul
fstpt
adc
xor
and
cmp
clc
sub
bound
cmp
jo
int3
es
insb
jns
loopne
pop
sti
fs
and
popa
in
xchg
rol
stos
pusha
dec
cs
incl
test
sub
sub
push
jle
lods
add
js
mov
inc
dec
inc
iret
int3
aam
push
and
push
pusha
mov
movsb
push
pusha
insl
outsl
pop
in
jle
fs
gs
jo
jns
iret
inc
add
insb
adc
pop
inc
mov
dec
outsl
insl
jne
int3
loop
sahf
sbb
add
lret
xchg
or
addr16
cmp
and
push
inc
je
bound
dec
insl
gs
inc
insb
xchg
inc
popa
imul
inc
xchg
push
in
mov
aaa
xor
mov
std
push
sahf
dec
pop
mov
lods
sub
mov
ret
orb
inc
or
out
out
testb
xadd
sbb
inc
cmovo
stos
inc
movswl
cmpb
mov
divb
rorb
pop
pavgb
and
jp
mov
test
add
inc
test
int
test
sub
bound
das
sbb
or
xor
fistl
and
jl
inc
imul
jbe
addr16
dec
push
daa
outsb
jnp
or
fs
jo
mov
inc
pop
mov
mov
xchg
outsl
pop
iret
test
mov
adc
mov
xchg
mov
out
daa
clc
add
inc
jns
mov
daa
outsl
inc
xchg
lods
test
xchg
daa
xchg
jge
pop
push
xchg
xchg
push
nop
push
rclb
or
out
outsb
out
inc
push
je
int3
scas
fildll
js
push
sub
aam
popa
in
lods
out
push
mov
in
push
jle
in
add
stos
jne
cld
ja
test
cwtl
fmuls
cmp
lds
lahf
add
pusha
scas
pop
leave
test
mov
add
add
jns
int3
cmpsb
adc
mov
xchg
lahf
mov
pop
js
xchg
scas
push
inc
xchg
inc
inc
lahf
or
cmp
xchg
jb
xor
push
pusha
cmp
mov
push
or
inc
cs
xchg
faddl
mov
xchg
xor
fadd
sub
cmp
adc
inc
js,pn
sbbb
push
aam
hlt
sarb
outsl
daa
and
pop
int3
aas
add
mov
push
mov
fists
and
adc
xchg
outsb
jnp
fwait
pusha
push
jo
sar
dec
cmp
jb
add
nop
iret
test
and
in
ret
or
adc
scas
add
ja
pop
jnp
in
loopne
insb
mov
mov
mull
lods
xor
movsb
daa
divl
adc
idivl
in
hlt
add
je
out
aaa
movsb
faddp
ds
pop
inc
xchg
push
push
pop
sbb
pop
addr16
jl
iret
test
cwtl
mov
and
mov
rclb
mov
mov
daa
les
adc
sbb
sub
xor
stc
pusha
insl
inc
daa
addr16
adc
leave
jnp
mov
cwtl
je
mov
sub
pop
enter
lods
addr16
jb
outsb
scas
add
fs
dec
sahf
mov
iret
lds
fdivrs
mul
mull
stos
cltd
pop
cmp
dec
push
jl
mov
subb
aas
ja
test
lahf
sarb
add
cmp
repnz
hlt
int3
fsubr
and
enter
jge
mov
and
sbb
sub
cmp
lods
lods
mov
lahf
dec
lahf
ja
cs
lahf
push
insb
jl
inc
cs
or
in
nop
out
mov
inc
jl,pn
fdivs
and
push
sub
lahf
add
testl
xchg
andb
movsb
push
add
or
mov
add
xor
enter
add
int
neg
adc
sub
aam
push
cmpsl
enter
jg
push
pop
es
pop
push
sahf
or
and
sbb
pop
enter
lods
movsb
in
mov
adc
and
shlb
jg
lahf
out
sahf
fcoml
fs
add
sahf
or
adc
xchg
jl
test
mov
or
enter
out
push
lods
cmpsl
cmp
jae
pop
cld
push
jns
pusha
je
stos
push
jg
nop
sub
daa
addr16
les
dec
add
pop
enter
adc
jae
pop
enter
or
in
lahf
push
fs
lods
sub
adc
or
movsb
xchg
movsb
mov
nop
add
lahf
xchg
inc
test
in
add
jae
pop
enter
stos
mov
movl
or
cs
cmpsl
cwtl
mov
ss
ljmp
pop
mov
shlb
adc
mov
fisubrl
xor
out
sahf
fldenv
pusha
push
shrl
test
sahf
or
call
sahf
clc
mov
stc
pop
enter
mov
cmp
dec
mov
iret
mov
jg
sarb
loop
mov
int
mov
jbe
loop
loopne
mov
mov
and
ss
jl
xor
dec
mov
jl
or
cmpb
and
sahf
cwtl
mov
in
lahf
js
enter
or
call
or
loopne
movsb
sub
aaa
and
push
cmp
ja
fiaddl
push
imul
fmull
lahf
jl
and
mov
add
lea
push
inc
or
pop
enter
movsl
mov
cwtl
fisubl
movsl
lahf
push
jns
inc
nop
pusha
movsl
jo
pop
sarl
push
aam
nop
repnz
pop
jg
mov
pop
les
fidivl
loopne
cmpsb
lea
or
sub
les
cmpsb
push
jmp
int3
or
daa
addr16
jmp
add
pop
shrl
and
add
push
inc
test
pop
enter
or
lahf
pop
enter
inc
cld
mov
mov
pop
push
jo
shrb
jg
nop
dec
mov
sub
ja
or
inc
lock
push
iret
lock
fiaddl
xchg
fsubrl
imul
lahf
push
pop
ds
xchg
test
movsb
mov
loopne
push
inc
jg
nop
addb
clc
lahf
and
add
addb
es
lods
cmp
mov
subb
mov
fmull
subb
and
pop
inc
add
fsubr
pop
inc
fsubrl
inc
stos
outsl
push
inc
out
add
or
push
inc
lahf
dec
inc
nop
addr16
ja
push
addb
mov
sahf
or
mov
jl
jl
in
test
stos
or
xor
inc
stos
lahf
test
in
imul
sahf
jo
sub
aam
pop
dec
lods
ja
sahf
shlb
dec
lahf
xor
popa
insl
ja
xor
lods
leave
les
lahf
xor
mov
or
fs
jb
jne
daa
addr16
inc
in
pop
pop
aad
outsl
aas
test
test
mov
cwtl
xchg
out
iret
lods
loopne
lock
out
cs
lods
loopne
fimuls
shrb
lcall
inc
push
les
adc
das
enter
out
nop
out
je
nop
lods
sub
outsl
adc
xchg
xchg
loopne
mov
addr16
hlt
test
in
ljmp
add
dec
insb
and
ljmp
pop
bnd
test
mov
add
stos
sarb
addr16
idivb
mov
bound
enter
lcall
add
scas
xlat
xchg
push
mov
ljmp
lcall
jge
push
push
mov
call
adc
add
ja
jbe
xor
ja
rorl
mov
lcall
pop
mov
adc
sbb
addr16
data16
lds
inc
xchg
xchg
out
js
aas
mov
addr16
sbb
push
pop
out
jbe
mov
lahf
ja
daa
scas
fs
inc
dec
scas
in
inc
cmp
dec
scas
in
xor
in
scas
sub
int
ret
dec
daa
negl
jns
mov
push
push
pusha
imul
mov
stc
cmp
repz
mov
or
mov
mov
push
jns
push
sahf
inc
sub
ds
out
fiadds
cwtl
inc
sub
mov
repz
out
pushf
andb
iret
push
xor
enter
mov
push
es
jp
adc
movsl
fldenv
inc
pop
loopne
mov
xor
aas
dec
inc
cmpsl
jns
int
fwait
add
xchg
out
xchg
add
add
xor
mov
rcrb
fs
sahf
negl
push
sub
clc
les
add
call
ja
nop
fiaddl
pushl
jg
xchg
dec
pop
in
in
adc
xchg
dec
inc
push
pushf
inc
cmp
jb
push
lock
mov
popa
dec
push
dec
or
outsl
add
inc
insb
iret
test
jl
leave
mov
outsl
add
ret
or
mov
imul
filds
pushf
ljmp
mov
xor
inc
mov
mov
add
add
jb
mov
inc
jb
xchg
in
fbstp
jp
jmp
popf
cmpsb
aaa
mov
pushl
mov
aam
sbb
sbb
ljmp
and
testb
xor
popf
fbstp
in
and
pusha
mov
jl
popa
sub
xchg
outsl
add
or
mov
push
cmpl
mov
push
scas
push
repnz
mov
sahf
negl
enter
and
mov
add
or
insb
js
ja
lods
ss
lods
out
ja
pop
leave
adc
ja
cmp
xchg
testb
mov
fildll
popa
sub
add
and
pop
jb
shrb
in
push
xor
jmp
loopne
sub
pop
mov
adc
outsl
js
ret
adc
add
sahf
daa
jae
pusha
cmpsl
cmp
inc
orb
cmpsl
movsb
inc
jae
call
es
pop
leave
add
daa
cmpb
call
adc
mov
mov
arpl
mov
mov
push
enter
jg
push
nop
jbe
dec
mov
fs
nop
push
mov
ret
pop
sbb
xor
cmpsb
lahf
xchg
dec
aam
mov
nop
cmp
mov
xor
push
mov
adc
daa
scas
daa
shlb
nop
push
fs
jl
aam
push
mov
mov
dec
insb
push
xchg
enter
mov
xchg
mov
jb
jmp
cmp
add
adcb
mov
lods
or
fcmovnb
sbb
test
add
xlat
and
ds
or
dec
lock
je
movsb
mov
adc
or
or
pop
sbb
add
sarb
mov
outsl
and
ss
repz
leave
add
pop
add
pop
pop
sarb
xor
in
aaa
mov
push
sbb
arpl
aad
addr16
sbb
outsl
addr16
add
sub
cmpsl
nop
mov
mov
mov
in
add
xchg
in
rcrb
pop
mov
xchg
addr16
out
ja
add
mov
pushf
pop
enter
test
add
sub
mov
or
rol
das
mov
leave
mov
add
or
or
stos
aaa
pop
mov
jno
pop
push
push
sub
pusha
ret
aaa
add
inc
nop
xchg
add
les
jnp
cmpsl
add
mov
or
or
push
sub
push
daa
mov
mov
daa
in
scas
or
clc
sub
lods
negl
adc
ds
sti
inc
push
push
les
xor
cld
ret
ja
out
test
cmp
insl
stos
or
or
scas
adc
add
lahf
or
ret
xchg
pop
mov
pop
add
inc
lcall
fwait
mov
popa
outsl
add
enter
or
ffreep
dec
pop
repnz
aam
xchg
add
push
repnz
fs
add
xchg
mov
lods
fs
pop
scas
add
pushf
outsl
out
xchg
or
dec
popl
mov
mov
mov
inc
or
push
in
in
outsb
daa
or
push
and
sbb
push
lods
daa
aas
addr16
daa
stos
mov
ffreep
mov
mov
sahf
add
addr16
gs
adc
and
push
mov
push
dec
divl
mov
inc
xchg
jo
fadds
xchg
sahf
or
mov
rolb
inc
dec
call
repnz
insb
lahf
nop
lock
adc
nop
or
pop
enter
or
inc
sahf
push
pusha
lods
xor
sbb
dec
cmpsl
mov
lods
push
hlt
das
inc
mov
xchg
in
adc
in
in
push
sbb
loopnew
xchg
rcl
data16
fiaddl
nop
and
inc
push
std
dec
sbbb
sahf
fwait
rcr
pop
inc
jnp
iret
repz
int3
repnz
out
jae
ret
out
pop
repz
shrl
ja
ljmp
sub
popf
iret
sarl
out
popa
jbe
lret
sti
cmp
and
push
jo
idivl
iret
xlat
and
sarb
cmp
repz
std
and
xor
cmpsl
stc
inc
pushaw
addl
and
cmp
repz
jl
into
add
jns
cmpsl
daa
inc
push
xor
loope
imul
jns
push
dec
arpl
out
idivl
sbb
movsl
jl
stc
mov
insb
push
loope
insl
imul
fsts
sahf
out
xchg
mov
add
repz
sub
jo
out
sahf
daa
dec
xchg
fisubs
jno
sahf
out
cmp
sbb
pop
ds
repz
add
leave
adc
out
insl
mov
jns
iret
repz
jbe
xor
out
fists
ja
out
lcall
loopne
jns
int
jns
jp
mov
jnp
repz
bound
out
jl
sahf
push
outsl
stos
jl
jge
push
repz
repz
cli
ss
push
xchg
sarl
adc
lret
pop
orb
cmp
mov
cmp
repz
out
sbb
xor
cmpsl
stc
daa
test
test
outsb
int
xchg
xchg
jl
cmpsl
stc
and
adc
rcll
mov
jl
out
sbb
iret
shl
mov
out
xor
cmc
and
dec
repz
inc
push
test
cmpsl
stc
cmp
add
lahf
out
ds
xchg
pop
scas
loope
xchg
sahf
cmpsl
stc
xor
and
sarl
cmp
lahf
out
dec
shrb
iret
repz
into
add
sahf
out
movsl
clc
dec
cltd
mov
jns
iret
flds
cld
sub
mov
adc
shll
scas
shll
ja
sahf
ja
stos
add
cltd
xlat
stc
cmp
repz
addr16
lahf
cmpsl
mov
mov
aam
movsl
push
test
cmpsb
ds
repz
mov
cmpsl
dec
cmpsb
loop
lahf
cmpsl
stc
xor
push
test
push
test
mov
out
ds
stos
mov
out
xor
ljmp
repz
inc
scas
jl
repz
jbe
cmpsb
push
and
fnstcw
testb
dec
mov
mov
jne
fidivrs
push
ja
fwait
int
mov
add
insb
ss
int
lds
enter
lret
shll
int3
incb
and
shrl
aam
rcr
ss
or
and
aam
xchg
xor
jns
aas
push
sub
xor
mov
inc
and
cmp
addr16
ja
sbb
pop
inc
leave
adc
aaa
pushf
mov
adc
rorb
push
test
dec
enter
sbb
es
jle
add
mov
in
fwait
dec
ss
jg
arpl
dec
mov
jg
test
or
xchg
push
fwait
inc
pop
inc
dec
insb
xchg
xchg
sbb
pushf
add
dec
pop
pop
sarl
aam
mov
inc
dec
jecxz
pop
scas
out
sbb
jecxz
mov
outsl
leave
mov
fs
nop
adc
fcomi
out
cmc
cmp
sahf
inc
mov
cmp
data16
in
jbe
jg
and
in
jge
scas
mov
push
inc
pop
sub
mov
daa
nopl
inc
cmc
inc
sarl
sub
rorl
push
xlat
and
dec
sub
xor
dec
cmp
loopne
imul
mov
mov
jb
jl
inc
push
sbb
lahf
pop
dec
sahf
popa
dec
pushf
in
jb
dec
pushf
shrb
mov
repz
out
push
pop
inc
sbb
push
pop
push
bound
pop
testl
sti
adc
shrl
js
mov
out
push
pop
jne
mov
inc
shll
notb
mov
popf
pop
jle
or
add
sarb
mov
inc
scas
cld
xor
pop
insl
add
or
aam
jbe
fwait
sub
daa
dec
scas
adc
outsb
ret
negb
dec
or
fistl
and
addr16
ja
fnsave
repnz
pop
aaa
fistpll
cltd
cmp
fbstp
das
cmp
aad
mov
and
push
daa
xchg
dec
cs
das
or
daa
sbb
push
pop
and
push
icebp
mov
push
cltd
dec
pop
jb
sub
mov
in
xchg
out
mov
mov
mov
ss
hlt
pushf
aas
ficoms
xchg
dec
repnz
pop
hlt
or
and
xlat
out
inc
repz
addr16
addr16
push
cmpsb
inc
scas
inc
xor
mov
sub
and
icebp
mov
xchg
pop
xchg
sbb
jb
pop
movsl
pop
mov
fsub
je
stos
xlat
out
fdivrs
mov
push
movsb
sbb
testl
sbb
xor
dec
pop
mov
add
pushf
push
jb
fdivrl
xchg
cmp
scas
mov
xchg
daa
iret
add
add
add
leave
dec
divl
lret
enter
out
pusha
or
mov
xchg
inc
push
xchg
xchg
pop
and
sarb
ficomps
ficompl
popa
xlat
or
pop
pop
push
into
rep
sbbl
cmp
push
inc
push
imul
addr16
mov
add
mov
leave
leave
add
in
popa
ljmp
pop
leave
fistl
pop
stos
pop
ja
data16
shll
inc
mov
mov
dec
ja
iret
mov
scas
lret
test
lar
or
xchg
fisttpl
popf
fildl
mov
and
popl
repnz
add
cmp
or
arpl
arpl
cmpsl
add
pushf
pushf
mov
pop
gs
pop
and
in
btc
outsb
mov
cmpsl
cwtl
pop
mov
pop
adc
loope
mov
fnstsw
cmp
andb
out
out
cmp
stc
add
femms
add
sbb
and
out
sahf
out
or
push
xchg
test
or
imul
dec
ss
fstl
test
test
in
leave
mov
es
xor
inc
push
adc
inc
jg
fiadds
lret
inc
movsb
faddp
fisubs
in
scas
js
or
jns
in
cld
sbb
paddd
repnz
and
je
enter
jbe
andl
gs
cmpsb
gs
enter
mov
gs
repnz
loope
decl
mov
ss
in
or
adc
data16
pop
rorb
out
and
xchg
pushf
sbb
in
adc
and
mov
sbb
push
pop
mov
jnp
loopne
sahf
mov
stos
mov
push
add
add
sbb
mov
jmp
mov
popl
fbld
filds
pop
daa
iret
enter
loope
clc
pop
fisubl
nop
loope
addr16
inc
lods
jno
mov
aas
addr16
movsl
inc
jmp
loopne
mov
cmp
loop
mov
das
push
loop
jmp
ret
inc
sbb
push
xchg
mov
inc
xor
push
iret
fmul
in
sbb
daa
loop
and
inc
jo
fwait
adc
daa
xor
mov
cmp
push
pop
xor
fdivrl
scas
shl
add
pop
je
shll
in
xlat
sbb
fldenv
add
cld
add
inc
ja
popf
xchg
jne
mov
ljmp
outsb
daa
daa
mov
xchg
push
pop
popa
xchg
mov
and
jns
inc
in
pop
jo
mov
test
mov
bswap
xlat
and
pop
jo
addr16
cmp
pushf
in
pushf
push
adc
jp
mov
fldl
lock
mulw
cmpsb
scas
push
ja
xlat
xor
mov
out
out
ss
scas
iret
jl
das
inc
outsb
scas
pushf
adc
pushf
pop
xor
aam
jb
fidivs
bt
sub
in
fldl
add
ja
mov
ja
imul
fistps
out
shl
daa
jmp
mov
addr16
fnstsw
data16
xchg
setl
test
pop
adc
repnz
cmpsl
pusha
call
pushf
or
jo
xlat
adc
sahf
fstpt
inc
inc
sub
jmp
inc
push
sub
mov
dec
push
pop
push
push
add
repz
pusha
add
jbe
fcmovne
repz
push
mov
sahf
or
shlb
das
bound
xchg
xchg
pop
in
xchg
cld
clc
mov
xchg
xchg
xchg
rorl
mov
insl
iret
pusha
ljmp
pop
ud1
jb
mov
mov
mov
mov
mov
hlt
loopnew
jae
aaa
xor
cltd
push
push
fs
cmp
dec
cs
mov
mov
mov
cli
clc
add
cmp
sbb
and
sbb
je
push
xlat
inc
mov
test
mov
jmp
leave
add
jo
ss
pushf
or
inc
push
xor
jne
and
addr16
xchg
or
pop
mov
mov
xchg
push
jno
femms
in
sbb
daa
push
nopl
rcr
jb
pop
inc
jno
out
stc
fcmovbe
into
mov
inc
push
mov
jne
daa
dec
cmpsb
pop
cltd
fcmovbe
fnsave
push
iret
pop
mov
cmp
divb
out
stos
hlt
addb
sbbb
out
int3
out
in
out
xchg
pushf
fiaddl
out
and
add
sub
inc
out
dec
jb
or
outsb
push
push
mov
jmp
leave
shlb
andb
push
iret
leave
repz
lcall
mov
mov
and
dec
jb
scas
jno
gs
dec
push
enter
add
add
inc
jae
lock
pop
es
or
lock
jl
adc
jae
xor
mov
push
lahf
jo
bswap
repz
push
jge
push
mov
push
mov
or
xchg
xchg
sub
icebp
aas
mov
scas
pop
je
daa
xchg
push
fnstcw
icebp
push
rcr
and
push
out
nop
mov
cmp
push
push
lahf
pop
je
add
pop
bswap
icebp
cmpsl
mov
inc
pop
push
repnz
out
mov
fbstp
mov
das
xchg
cmp
jne
je
xlat
popf
out
pop
ss
pop
dec
push
out
dec
sahf
add
das
gs
add
outsl
ja
or
cmpsb
jne
pushf
jne
repz
and
out
cltd
jbe
pop
pcmpeqd
pusha
sbb
add
imul
pop
int3
mov
pop
and
add
dec
insl
ja
iret
cvtpi2ps
xchg
xor
cli
jbe
pop
leave
and
ja,pn
inc
or
pop
inc
push
mov
in
ror
insb
ja
sbb
inc
mov
psubusw
add
sbb
lock
or
adc
and
dec
xchg
popf
mov
fists
jbe
movd
mov
mov
outsb
pop
addr16
das
xchg
xchg
add
and
push
iret
es
add
jns,pt
inc
jns
dec
ss
pop
pop
dec
imulb
in
mov
add
xchg
pop
pop
stos
push
out
popf
cmp
shrl
or
or
push
or
dec
repz
add
push
jp
cmp
sbb
and
adc
cmp
test
push
aad
mov
push
pop
mov
stos
addr16
fisubs
out
js
fucom
jg
ja
pop
incb
daa
mov
jg
leave
mov
daa
push
jnp
or
imull
xchg
adc
dec
xchg
add
inc
clc
mov
in
inc
jb
clc
lods
push
lods
lret
xchg
mov
jnp
fdivrs
xor
lret
loopne
call
cmp
jl
push
jl
and
cmc
subb
movl
push
daa
push
jne
sbb
pop
add
leave
jae
or
pushf
scas
add
stc
dec
stos
scas
repnz
in
add
addr16
add
setb
jl
jb
and
in
ret
lds
push
add
popf
cmp
out
xlat
testl
pop
leave
xor
andb
pop
xor
fists
adc
pop
jbe
ja
mov
push
add
jns
add
add
out
int
fisttps
inc
xlat
inc
bound
sbb
repnz
and
pop
xor
adc
test
leave
loopne
jle
adc
mov
jl
mov
mov
push
daa
xchg
inc
jecxz
cmpsb
xchg
cld
scas
mov
das
rorb
add
xchg
call
push
add
ja
iret
sub
jg
jg
bound
mov
jg
and
xchg
jg
jg
jg
mov
xchg
mov
xor
mov
icebp
cld
ja
ja
popf
loope
das
sbbb
ja
push
rcll
inc
addb
subb
jge
insl
mov
jmp
leave
stos
mov
out
loopne
jne
push
outsl
jl
stc
js
dec
mov
movups
iret
test
xor
cmp
inc
pop
dec
iret
jmp
cwtl
xchg
xchg
pop
push
add
cmp
insb
je
jl
repnz
test
mov
push
or
pushf
cmp
mov
mov
les
int3
adc
daa
iret
repz
push
in
das
xchg
xchg
lock
mov
xorb
sbbb
dec
mov
cmp
fdivr
xchg
jbe
nop
push
out
pushf
sbb
inc
pop
orl
sbbl
loop
inc
orl
addr16
pushf
pop
jnp
aam
dec
mov
lds
mov
nopl
xor
dec
addr16
in
sbb
mov
add
jg
xchg
movsb
outsb
fnstsw
ja
fstpl
ja
dec
ret
lret
daa
daa
rcr
dec
or
loop
xchg
cmp
or
or
repnz
test
cli
push
lar
out
test
cmp
mov
jl
adcl
pop
pop
push
push
aas
pop
cmpsb
or
mov
or
push
mov
adc
out
jns
dec
adc
sahf
adc
push
es
lods
add
mov
out
out
mov
out
sbb
daa
cmp
bound
fistps
dec
test
rep
sbb
pop
push
add
sbb
shr
or
out
mov
xchg
or
shrl
pop
mov
ret
clc
mov
jmp
add
outsb
add
call
repz
add
push
push
rcrb
push
out
fs
pop
mov
leave
enter
bound
ja
xor
sahf
jne
pop
ja
lods
push
iret
mov
jns
out
or
or
or
aaa
repnz
testb
ffreep
mov
xchg
lret
lret
lret
inc
xchg
xchg
cmp
repz
mov
repz
or
or
int
arpl
or
leave
add
shlb
push
int3
xchg
mov
sbb
das
mov
push
inc
dec
ja
add
and
jb
inc
dec
push
repnz
sub
sahf
xchg
insb
push
jmp
inc
xor
xchg
fdivrl
lahf
xchg
mov
popf
add
adc
dec
and
fdivr
and
loop
jb
mov
lret
sbb
xchg
mov
mov
pop
insb
mov
add
xor
fisubl
pop
jmp
fmull
jl
pop
leave
inc
repnz
scas
xchg
mov
mov
ficompl
addr16
in
push
addr16
ljmp
mov
mov
or
mov
mov
fstpl
mov
jns
sbb
mov
verw
sbb
ljmp
or
or
and
inc
es
or
lock
xor
aaa
pop
jg
mov
rcr
pushf
push
daa
int3
adc
sbb
or
or
or
and
adc
in
pop
inc
push
add
add
inc
push
aas
ja
fstpl
or
jns
xchg
mov
pop
mov
add
mov
mov
jae
enter
cwtl
call
lcall
xchg
inc
dec
push
add
sbb
aas
sub
jg
cmpsl
fnsave
pop
addr16
cmpsl
pop
ja
lods
cmp
mov
stos
cmp
aad
mov
cmp
pop
mov
pushf
dec
dec
jb
mov
adc
sbb
icebp
jbe
cmp
cs
ja
push
pop
cmp
mov
mov
sahf
ja
push
add
iret
lods
daa
jne
mov
daa
xchg
or
xchg
pop
mov
pusha
xchg
cmp
out
pop
mov
add
jbe
repnz
fwait
mov
cs
shl
out
stc
pushf
faddl
mov
dec
jne
lahf
inc
pop
push
lods
call
pop
lcall
ja
sahf
popf
das
lods
mov
push
cmpsl
push
push
in
mov
add
movzwl
enter
es
pop
cmp
iret
repz
inc
add
jns
ja
xcrypt-ofb
cmpsl
cs
pop
or
dec
sahf
out
or
push
or
je
leave
mov
andb
rsm
mov
jg
mov
push
mov
wrmsr
xchg
outsb
xor
outsb
getsec
psubb
iret
leave
lods
orl
pop
cmp
popf
cmp
and
movaps
aas
or
inc
pop
jl
out
popf
fs
add
cmp
xchg
xchg
add
pop
sahf
out
add
mov
xchg
aas
negl
fimuls
pop
xchg
adc
or
sbb
fisttpll
or
insl
lds
lcall
cmp
push
repnz
mov
jne
inc
push
jg
push
in
sub
push
nopl
fisubrs
push
add
mov
pop
gs
fimull
icebp
jnp
mov
pop
daa
scas
xchg
call
out
je
loope
jmp
leave
jnp
outsl
out
add
repnz
ds
xlat
or
cmp
fists
push
enter
outsl
ja
sti
jno
mov
push
aas
push
iret
xchg
push
inc
stos
mov
leave
rep
push
add
lret
or
xchg
rclb
cmc
std
add
test
es
popf
xchg
iret
pop
dec
sahf
out
daa
arpl
imul
jnp
out
jns
orl
xchg
xchg
xlat
mov
pushf
pushf
pushf
mov
cs
mov
iret
les
psubw
xlat
or
popf
mov
inc
xchg
jb
push
or
xchg
out
in
outsl
emms
jg
add
add
xchg
xchg
daa
daa
pop
leave
fsubr
cmc
std
outsb
mov
jg
xchg
pop
unpckhps
adc
sbb
sbb
push
dec
ja
addr16
cmp
addr16
inc
loopne
jnp
adcl
mov
mov
movb
dec
outsb
ja
stc
add
dec
lock
out
and
xchg
mov
mov
addr16
push
fisttps
cs
out
pop
lea
rcrl
fdivl
push
rclb
xor
push
xchg
push
add
std
mov
call
sahf
xchg
lock
dec
rcr
xor
push
mov
ja
pshufw
mov
clc
dec
dec
outsb
mov
out
lods
lgs
dec
shll
adc
insl
hlt
addr16
negl
pop
das
sbb
jl
aas
pop
nop
sbb
repnz
lcall
into
add
add
pushf
cmp
or
jbe
jmp
sub
sbb
fwait
ja
comiss
mov
mov
cmp
aaa
cmovae
pop
iret
jae
jb
outsl
jp
test
iret
repz
xchg
or
stos
cmp
daa
daa
mov
iret
adc
ja
mov
repnz
movq
repz
adc
pop
dec
push
dec
and
xchg
pushf
sbb
daa
fstl
pop
popa
ja
jl
mov
cmp
add
xchg
cmp
rcr
lds
psraw
jp
popf
out
xor
adc
dec
lahf
das
popf
out
or
mov
aas
popf
das
fdivrl
dec
pop
lar
pop
repz
repz
or
rep
daa
iret
or
movq
or
cwtl
mov
dec
mov
lahf
adc
fcompl
jg
popf
or
cmp
nopl
sahf
scas
pop
aaa
movsb
jl
testb
sbb
dec
xchg
sbb
daa
push
insl
scas
out
bsf
lahf
xchg
add
sti
outsb
repnz
xlat
xchg
push
fistps
push
iret
cmpsb
sahf
decl
mov
and
sahf
push
pop
roll
cld
data16
lahf
das
or
pop
adc
iret
lods
add
lahf
mov
inc
xor
mov
aas
lahf
lahf
xchg
xchg
fucomi
dec
pop
push
maxps
pop
leave
mov
mov
xchg
lcall
das
push
jmp
ss
push
dec
lds
mov
aad
fucom
xchg
in
lret
push
fistpl
clts
cmc
lahf
push
and
pop
pop
jno
xchg
mov
and
adc
and
push
inc
mov
mov
or
in
lods
pop
in
adc
adc
mov
enter
inc
push
daa
inc
dec
repnz
sar
mov
push
push
roll
repz
addr16
aas
fs
push
jmp
mov
mov
sub
cmp
add
push
sahf
out
sahf
or
or
out
jns
test
out
push
cmpsb
pmaxub
and
adc
adc
repz
repz
adc
adc
repz
pop
or
sbb
push
pop
sbb
in
movsb
fwait
prefetcht1
push
in
in
adc
in
in
adc
push
ss
in
sahf
sub
and
cmovo
daa
mov
mov
jne
dec
xor
jnp
nop
pop
or
jb
fsubr
daa
mov
cwtl
movsb
mov
push
divl
mov
in
pusha
dec
daa
push
jp
xor
stos
outsl
adc
mov
enter
add
and
jmp
add
mov
dec
pop
and
mov
fisttps
mov
iret
repz
mov
adc
pop
mov
dec
mov
mov
daa
pop
mov
in
fs
lahf
jmp
repz
pop
or
add
adc
sbb
and
add
cmp
iret
leave
add
sub
or
addr16
cmp
inc
divps
cmp
enter
pusha
xor
repnz
outsb
movsb
and
dec
xchg
iret
cltd
movsb
incl
mov
lods
pop
ja
insb
fcmovne
leave
out
idiv
pop
pop
movsl
xchg
pop
sub
movsl
cmp
enter
push
add
xchg
daa
pop
leave
jae
in
insl
jne
lea
inc
es
cs
ljmp
pop
ja
mov
push
add
rolb
fcomp
pop
loopne
cmp
repz
or
or
clc
out
jns
testl
push
push
adc
xor
es
aas
adc
xor
jns
add
dec
add
push
inc
ss
sub
outsb
xchg
popf
out
test
add
add
test
lock
testb
push
mov
cmp
daa
pop
dec
cmp
fsub
psubsb
mov
verr
add
lods
fists
prefetcht0
stos
xchg
out
and
xchg
nop
xchg
cld
ret
scas
add
je
daa
pushf
mov
cmpsl
outsb
cmpsl
outsl
push
pop
jo
jmp
jle
xchg
inc
mov
or
sub
and
add
mov
scas
into
sub
test
sbb
and
lahf
test
js
push
rclb
test
sub
addr16
iret
jbe
leave
inc
int
push
out
dec
and
hlt
out
test
sub
test
call
test
mov
iret
pop
jmp
xchg
pop
sub
cltd
test
mov
inc
and
push
aaa
mov
inc
cmp
inc
daa
pop
or
xor
sbb
add
inc
outsb
daa
add
int3
les
in
aaa
or
mov
aad
xchg
add
stos
sbb
sub
xchg
mov
add
push
rclb
jbe
das
fdivrs
lahf
push
mov
push
xchg
push
xchg
insl
push
pop
pop
clts
rcll
or
sbb
jns
xchg
and
or
ds
cmp
inc
push
stos
xlat
adc
pop
jp
jae
jnp
adc
daa
jns
stos
sub
dec
push
cmpsb
stos
push
leave
iret
shl
jbe
rcr
pop
jecxz
mov
xchg
sub
mov
cld
jo
scas
sbb
daa
pop
paddusw
jns
add
invd
xchg
out
cmp
push
push
or
js
je
or
je
aaa
psrlq
and
cmpsl
lods
pop
insb
xchg
or
xchg
cs
xchg
pop
mov
xchg
cwtl
lea
movsb
xlat
jo
push
iret
lods
pop
por
push
sbb
pop
stos
jno
pop
dec
shll
xor
pop
out
jae
daa
inc
mov
xchg
or
loopne
jp
aam
push
ja
xchg
sbb
jb
lods
push
lods
pop
lods
rolb
subb
daa
mov
xchg
lods
lea
xchg
lahf
loopne
jns
cmpsl
push
cld
ret
outsb
mov
pop
push
xor
loope
pop
scas
pop
movzwl
ja
arpl
inc
xor
jb
leave
lahf
xchg
cld
fnstsw
leave
rcr
push
add
outsl
jmp
xor
add
xor
sbb
cmp
push
scas
aas
push
scas
push
scas
es
cmp
cmp
add
xchg
ss
add
repz
inc
pop
add
pushf
pushf
pushf
add
or
outsb
repnz
or
cmp
sahf
xchg
or
data16
repz
xchg
inc
push
scas
out
scas
pushl
test
xor
inc
fdivl
pop
push
cmpsl
xchg
cmpsl
fwait
pop
mov
cmc
pushf
cmp
add
or
stc
ds
mov
rcr
inc
pop
cmovs
pop
pop
divb
cmp
pop
test
mov
cmp
cmpsl
addr16
xorl
jg
dec
push
mul
mov
push
jo
cmp
repz
adc
movsb
fwait
movups
fdivrs
cmp
cmp
call
das
jmp
xor
nopl
aaa
jns
xchg
or
pop
sbb
in
daa
dec
and
sub
and
aaa
jns
in
cmp
push
es
setle
jns
sub
sub
pusha
jns
out
sub
jo
in
sahf
out
subb
push
lcall
jg
mov
pop
add
testb
mov
pop
fcmove
pop
push
dec
das
in
inc
lret
out
push
hlt
xor
add
pop
enter
mov
aad
adcb
sbb
mov
sub
dec
adc
incl
pop
movq
adcl
mov
movsb
scas
pushf
add
popf
mov
out
mov
push
cmpsl
enter
sarb
fsub
das
out
dec
testb
fiadds
mov
or
push
push
cs
repz
adc
adc
iret
repz
dec
adc
repz
repz
iret
repz
pop
lea
xchg
sbb
sbb
cmp
repz
iret
repz
pop
in
out
lcall
push
mov
jns
out
adc
jns
out
xor
sub
sub
pop
mov
aas
outsl
pop
ja
jg
xchg
xchg
fistps
and
and
repz
enter
fcomps
iret
repz
sbb
sbb
sbb
iret
repz
pop
cltd
sahf
out
xor
adc
mov
or
cmp
mov
mov
je
push
lea
pop
xchg
mov
mov
mov
iret
mov
or
cmp
repz
or
or
mov
push
divb
repz
push
adc
push
adc
cmp
repz
xor
cmp
repz
repz
adc
adc
iret
push
fs
jno
jnp
iret
repz
mov
xchg
sbb
cmp
repz
sbb
sbb
iret
push
rcrb
and
mov
das
jmp
stc
or
jnp
mov
movzwl
pop
mov
sahf
pop
jns
mov
pop
xor
out
adc
adc
iret
repz
adc
xchg
bswap
daa
push
adc
jo
js
jns
out
dec
push
or
or
xchg
push
sahf
out
sahf
or
repz
push
cmp
fisttps
aas
jmp
out
sti
mov
add
xor
add
insl
ss
cs
iret
sti
jno
popl
add
repz
pop
or
andl
or
jns
nop
mov
iret
cmp
add
add
in
aas
hlt
pop
cld
cmp
jns
mov
jae
jb
and
xor
jbe
cmp
cmova
push
pop
bswap
leave
in
in
insl
das
jne
leave
leave
leave
leave
test
iret
leave
movsl
lods
sbb
sbb
ret
into
pop
scas
mov
and
cld
mov
xchg
mov
out
jns
and
sub
out
dec
sahf
pop
ds
cmovle
or
sahf
jno
push
push
pmulhrw
xchg
out
push
outsb
jbe
jle
adc
mov
xchg
mov
push
repnz
sbb
cmp
rorl
add
jmp
jbe
hlt
decl
or
lahf
pop
mov
pop
and
or
push
jecxz
out
inc
mov
dec
sahf
ja
push
movq
test
out
pop
nop
adc
out
mov
mov
cmp
fstpl
call
repz
or
adc
pop
and
xor
and
orps
leave
leave
leave
popa
insb
ja
cltd
jecxz
leave
lea
daa
loopne
push
cmp
fs
mov
xchg
icebp
es
push
add
dec
pop
fs
mov
pop
flds
or
dec
dec
dec
push
pop
fs
dec
dec
insb
je
jl
cmp
in
test
mov
leave
repz
movsb
nopl
lods
out
es
sbb
enter
les
enter
pop
invlpg
leave
adc
and
inc
mov
mov
push
test
das
push
mov
jbe
jl
xchg
addr16
xchg
xchg
xchg
negl
add
lahf
stos
mov
ret
fucomp
push
or
or
prefetch
cmp
push
adc
pop
daa
mov
cmp
cmp
push
push
adc
popf
cmp
repz
jns
cmp
jle
push
sbb
mov
push
sbb
jns
in
mov
test
jbe
jg
lahf
mov
mov
outsb
mov
fbld
push
sub
out
sub
sub
out
sahf
out
call
ja
sahf
xor
and
mov
xor
push
xor
jnp
ss
aas
call
jns
iret
cmp
sarl
cmp
cmp
fsts
sub
aaa
aas
repz
repz
inc
dec
inc
pop
iret
inc
addr16
jg
mov
sub
sarl
aam
and
xchg
and
dec
xlat
cltd
and
ds
testl
add
sarl
jg
shl
inc
ret
jnp
pop
push
pop
push
and
out
cmp
inc
push
pop
pop
cmp
repz
push
ja
repz
repz
xchg
adc
test
repz
dec
sahf
adc
sbb
enter
clc
lsl
adc
jns
sbb
sbb
push
pushf
fmull
and
punpcklwd
test
es
fistps
imul
xchg
push
daa
ja
mov
cmp
ja
std
ret
pop
ret
pop
or
pop
push
in
in
push
add
or
dec
dec
or
out
sahf
pusha
or
or
out
orl
dec
sahf
out
push
adc
sahf
xlat
unpckhps
lds
rclb
iret
cmp
fistpl
out
cs
iret
sbb
cmp
pop
lds
push
sbb
daa
sub
mov
sahf
out
and
push
repz
pop
push
daa
jne
repnz
sub
pushf
mov
out
lods
push
sub
cmpps
mov
inc
das
xor
inc
loope
cmp
lds
lds
out
xchg
add
push
add
in
in
sahf
add
aas
push
push
pop
ja
leave
push
imul
inc
cmpsl
outsb
pop
fsubrl
xchg
leave
dec
aaa
mov
fisttps
pop
ljmp
add
cmp
int
or
or
push
or
pushf
mov
iret
or
in
fdivp
push
inc
adc
dec
adc
jns
out
adc
adc
sahf
push
mov
xchg
sbb
sbb
jns
sbb
sbb
mov
enter
loopne
or
iret
push
enter
and
jnp
mov
sub
rolb
inc
and
cmp
sub
push
popf
push
out
lahf
jb
and
add
jge
stos
test
pop
push
add
xchg
enter
fmull
test
or
jns
out
or
or
lahf
out
sahf
or
or
mov
js
adc
adc
pop
leave
iret
repz
push
adc
adc
xchg
out
cmp
pop
push
push
gs
rep
mov
outsl
jnp
xchg
sbb
cmp
test
xchg
xchg
cmp
dec
leave
pop
inc
sahf
cmp
push
add
add
or
or
sbb
pop
and
sub
je
out
pop
xor
or
repz
sahf
ja
or
push
or
pop
push
pusha
imul
psllq
ja
push
adc
popf
cmp
xchg
adc
out
sahf
out
mov
out
sahf
int3
sbb
sbb
cmp
repz
pop
mull
xchg
jmp
mov
cwtl
dec
ss
lret
outsb
mov
lcall
pop
das
mov
jp
into
imul
repz
pop
mov
out
mov
cmp
aaa
jns
femms
int3
pslld
repz
adc
adc
fsts
add
push
int3
das
popf
pushf
pushf
mov
push
sbb
jns
out
and
das
sbb
in
sahf
sbb
sbb
ret
cmp
jae
jg
int3
iret
repz
xchg
and
daa
iret
repz
stos
es
insb
pop
add
lret
int3
aas
sub
dec
shrl
sbb
scas
xchg
aas
insb
dec
pop
dec
push
jb
add
jl
sbb
and
inc
mov
sub
xor
dec
int
mov
xor
das
jl
das
mov
pushf
pushf
or
mov
stos
stos
dec
mov
pushf
mov
pop
syscall
lret
out
outsb
daa
pop
loope
in
je
dec
sahf
or
syscall
or
jnp
stc
into
add
or
and
repz
in
inc
pop
push
adc
repz
leave
data16
jl
leave
repz
aam
fistps
ljmp
add
or
sbb
cmp
push
sbb
iret
cmp
dec
and
push
and
test
mov
iret
repz
es
daa
aam
fbstp
jmp
das
sub
mov
iret
ljmp
outsl
iret
or
xor
push
iret
sbb
sub
xchg
out
aaa
push
ss
dec
movq
repz
push
sahf
xchg
xchg
jae
mov
push
cmp
in
aas
scas
leave
into
inc
adc
dec
ja
mov
sub
mov
pmaxsw
jns
in
fldt
out
push
icebp
das
daa
iret
xor
rorl
adc
pop
sub
jbe
cmp
xor
xchg
out
ficomps
adc
outsb
in
jbe
mov
xchg
das
pushf
setae
jns
cmpsl
push
pop
mov
mov
enter
loopne
clc
out
bnd
add
push
nop
in
sahf
and
jae
pop
mov
and
out
sahf
out
lahf
sub
xchg
mov
rcrl
rcrl
das
out
in
fisubrs
cmp
inc
push
push
xor
repz
cmp
xor
jbe
faddp
sahf
xor
loop
mov
leave
leave
in
clc
add
adc
movsl
sar
sete
jbe
fs
inc
inc
dec
pop
add
idivl
add
push
aam
pusha
push
and
xchg
xchg
pop
data16
pminub
pop
or
sbb
test
push
aam
fiadds
dec
push
aam
es
or
or
fsubl
in
push
aad
inc
jae
adc
sbb
xor
addl
or
loope
mov
adc
test
adc
cmp
push
pop
negb
xor
add
adc
and
outsb
shll
sub
testl
js
add
aas
inc
push
dec
adc
mov
pop
mov
negl
sub
inc
scas
pop
cmp
dec
aaa
test
leave
sbb
push
jmp
xlat
sbb
jns
dec
pop
push
push
or
fmull
sahf
or
or
aaa
or
jbe
xchg
scas
or
daa
in
xchg
fcmovne
leave
in
xor
addr16
das
push
xorps
push
pushf
test
xchg
pop
jo
jns
push
pop
andb
jo
mov
test
xchg
fcmovne
leave
repz
in
adcb
xlat
and
movsb
loope
pop
data16
sbb
lock
mov
add
add
and
or
push
nop
add
incl
popa
les
arpl
adc
jb
in
mov
movsb
add
cmpsb
fisttps
cs
jb,pt
movsl
sbbl
test
pop
shll
cmovo
pop
inc
mov
or
mov
sbb
in
call
adc
push
ficompl
push
pop
fisubrl
xor
mov
rcr
fsubp
stc
jb
jle
mov
or
negb
js
je
insb
push
fs
push
dec
inc
out
sahf
out
sub
sbb
sahf
out
sahf
adc
or
add
cmp
sarl
clc
hlt
lock
int3
repz
les
mov
iret
mov
mov
iret
repz
je
push
or
das
adc
cmp
cmp
repz
and
push
iret
repz
cld
repnz
fadd
mov
cmp
repz
nop
mov
repz
pop
pusha
pop
push
sahf
out
sahf
dec
inc
xor
add
sahf
ja
clc
icebp
mov
fmul
mov
movsb
nop
dec
cmp
neg
or
jl
push
push
inc
icebp
and
test
adc
mov
imul
insl
and
fadds
sub
push
sar
jbe
js
mov
add
movsb
mov
add
aas
sbb
div
and
out
cs
pop
orb
orl
sub
xor
mov
punpckhdq
popw
icebp
call
push
mov
daa
push
add
ljmp
leave
adc
sgdtl
push
adc
jg
add
mov
addb
es
mov
add
jnp
mov
push
mov
das
pop
ror
outsl
iret
push
les
or
pop
cs
stos
mov
pop
jg
cmp
fildll
mov
orl
out
sub
adc
or
icebp
jb
das
adc
pop
push
sbb
movsl
out
add
dec
or
jne
aam
push
jns
arpl
paddq
xor
mov
adc
mov
mov
cmp
jns
int3
or
adc
iret
push
pop
push
sbb
shl
outsl
iret
push
sbb
push
aas
dec
jmp
pushf
push
filds
push
and
cmp
repz
lock
and
in
fmul
test
out
cmp
pop
imul
daa
xor
pop
mov
xchg
cld
subb
inc
rol
jl
incl
xorl
fistl
cmp
pop
repz
repz
mov
repz
in
repz
enter
insl
add
push
sahf
out
sahf
pop
ja
mov
repnz
das
push
dec
insb
dec
insb
adc
aas
pop
jb
xchg
inc
enter
pop
repnz
inc
pushf
or
ret
mov
adc
pop
stc
and
mov
push
incb
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
ljmp
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
call
popl
cmp
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
incl
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
decl
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
xchg
xor
decl
in
cmp
sahf
xchg
pop
lcall
or
mov
aaa
popa
sar
mov
and
decl
xchg
clc
repz
mov
subb
fwait
xchg
and
aas
xor
adc
int
add
aas
jno
or
out
xlat
mov
pop
fs
dec
lea
aas
ret
shrl
mov
push
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
call
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
call
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
cmp
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
call
arpl
cmp
mov
cmp
std
xlat
cmp
mov
sbb
fcmovbe
xchg
pop
mov
jne
fldt
cmp
pushl
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
lcall
adc
xor
push
scas
into
imul
faddp
jge
call
mov
idiv
call
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
frstor
fmuls
sahf
or
or
and
inc
inc
imul
inc
pusha
push
inc
inc
je
inc
inc
push
dec
sti
jg
add
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
push
sar
jg
ljmp
cmp
fucomi
idivb
push
inc
dec
inc
jo
inc
popa
push
outsb
jbe
imul
or
gs
outsl
leave
lds
mov
inc
loopne
imul
jo
pop
cmp
iret
xor
jle
mov
inc
jbe
je
dec
push
inc
dec
push
or
sub
addr16
push
inc
inc
inc
inc
inc
mov
loopne
add
gs
gs
pop
inc
sbb
arpl
mov
jo
sbb
rolb
pop
sti
jae
outsl
push
dec
pop
mov
xchg
xchg
xchg
push
subb
xorb
xchg
aam
cmpsl
push
or
sbb
push
mov
add
das
sbb
push
inc
aaa
aas
dec
ret
pusha
or
out
dec
inc
dec
in
inc
and
daa
daa
dec
jae
imul
jne
push
and
inc
inc
inc
jg
inc
jns
push
in
sbb
dec
lahf
push
push
ficompl
push
cmp
or
in
adc
jb
jns
inc
add
lret
or
dec
in
inc
orb
sbb
push
dec
dec
pop
imul
in
bound
jbe
dec
imul
push
mov
sub
adc
inc
cmpsb
dec
inc
or
inc
iret
arpl
into
nop
decb
outsb
arpl
outsl
addl
adc
add
addb
push
out
push
mov
imul
dec
sub
mov
nop
ss
push
sub
testl
mov
addr16
or
jbe
mov
add
add
test
push
clc
push
outsb
or
addr16
movsb
adc
gs
inc
stos
and
xacquire
outsl
push
inc
arpl
push
pop
les
cmpsl
adc
movsb
pusha
out
mov
mov
sbb
xchg
lds
orb
imul
hlt
outsb
data16
popa
mov
add
subb
insb
and
pop
ja
andb
insb
add
xchg
inc
arpl
pop
pop
inc
sbb
and
push
stc
pop
sbb
add
add
xchg
lods
cmpsb
sar
cmpsl
push
sbb
scas
xlat
fs
adc
dec
insl
add
dec
lahf
inc
or
pusha
mov
add
mov
add
pop
stos
pop
jb
or
aas
ljmp
lahf
inc
or
fs
arpl
lds
cmp
out
inc
xchg
adc
xchg
dec
xor
or
dec
xchg
lret
mov
mov
sbb
push
mov
pusha
ja
insl
imul
jne
shrb
outsl
add
push
lock
push
rorl
dec
outsl
addr16
addb
iret
inc
imul
stos
pusha
inc
jecxz
movsb
adc
mov
xlat
sbb
jg
mov
push
lods
xchg
js
xor
out
cmp
adc
loopne
cmp
repz
mov
cs
mov
ds
iret
repz
push
and
daa
call
xchg
xor
ja
popa
push
out
mov
les
incl
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
lcall
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
call
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
add
cmp
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivr
pushl
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
jmp
and
mov
cltd
xchg
mov
mov
or
or
lcall
add
mov
jl
das
adc
stos
sbb
data16
inc
fdivr
pushl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
ljmp
stc
test
xchg
sbb
push
jg
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
ljmp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
jg
jmp
sub
rorl
popa
mov
into
pop
cmp
mov
mov
mov
dec
xlat
xchg
fadd
shll
jmp
outsb
xor
mov
call
mov
add
in
add
pop
dec
or
cmp
add
daa
adc
or
xchg
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
pushl
mov
orl
mov
in
mov
mov
add
lcall
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
test
push
or
push
in
mov
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
incl
sbb
loopne
rorl
int3
dec
frstor
fistpll
mov
pushl
pusha
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
pushl
dec
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
ljmp
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
incl
and
es
lds
or
sub
mov
cmpsl
call
ret
shlb
fldcw
ret
es
pushf
mov
insl
add
ss
jmp
addr16
fcomip
pop
jb
push
mov
dec
mov
loop
sub
or
mov
xchg
or
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
clc
jmp
mov
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
pop
hlt
lcall
clc
sar
imul
push
js
or
push
addl
decl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
incl
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
call
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
nop
lcall
sub
aaa
mov
or
sbb
add
add
pop
into
pop
xor
add
add
inc
cmp
je
ja
imul
dec
je
push
insb
imul
sti
call
pop
inc
jbe
push
jns
arpl
arpl
pusha
cmpsl
lods
sbb
push
inc
insl
mov
shll
pop
inc
jne
outsl
insl
fadds
xchg
dec
and
fildl
xlat
dec
sub
dec
fstl
cli
cmp
xor
jle
dec
inc
js
add
sbb
mov
ret
jo
inc
popa
or
lahf
push
dec
sbbl
mov
inc
jno
xor
pop
inc
insl
ljmp
inc
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
or
or
xor
bound
scas
cmp
inc
jbe
pop
sbb
inc
add
cmpsb
fs
mov
push
dec
rolb
add
mov
sbb
ror
and
dec
pop
add
ret
fbld
stos
dec
push
mov
stos
pop
or
push
jbe
arpl
or
inc
aas
imul
cmp
bound
push
dec
push
rcl
js
sbb
aam
loopne
aaa
add
pop
subl
jno
push
dec
insb
nop
pusha
add
xor
cmp
cmp
push
push
je
aaa
aas
inc
push
add
xchg
pusha
lds
add
and
dec
mov
jae
dec
popf
int
pop
ret
ljmp
sahf
bound
aaa
inc
jnp
adc
sbb
inc
pop
adc
or
pop
es
mov
jg
inc
inc
inc
add
ds
mov
int
add
aas
int
push
dec
dec
lea
add
fists
inc
mov
mov
dec
aas
dec
inc
outsb
jne
gs
pop
insl
inc
popa
mov
push
pop
xor
xor
insl
fwait
cmp
add
int
mov
xchg
into
pop
jo
sti
push
pop
inc
cmp
push
mov
jg
aaa
insb
jmp
mov
xor
imul
add
outsl
inc
add
adc
dec
xor
sub
movsb
jo
ljmp
nop
fsubs
push
sbb
mov
sbb
and
xchg
lock
inc
jb
cmpsl
and
inc
addr16
dec
popa
mov
lahf
lret
inc
aas
push
outsl
outsl
test
mov
inc
adc
mov
jno
push
sbb
sub
lcall
push
nop
test
lods
cmp
pop
inc
or
push
push
jae
add
sarl
jo
push
sbb
xchg
pop
push
outsl
insb
jns
shrl
sub
add
push
popa
jb
addb
mov
test
and
dec
or
call
bound
add
aad
arpl
addr16
and
divl
mov
jo
xchg
adc
xor
pusha
add
add
sub
add
jns
addl
cld
mov
popa
dec
scas
addr16
add
push
mov
loop
add
jns
or
or
test
aas
sbb
push
inc
xor
cmc
push
aaa
fcoms
aam
aaa
xor
add
xchg
cs
les
rcll
cwtl
jb
inc
add
test
daa
dec
add
inc
adc
mov
adc
sbb
stos
add
pop
push
fistl
mov
fdivr
loopne
adc
dec
adc
out
mov
fildl
add
fstpt
add
or
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
mov
add
pop
sbb
adc
adc
adc
add
mov
or
adc
pop
adc
incw
adc
and
xchg
add
add
adc
sar
outsb
add
shlb
inc
mov
fdivl
xor
jge
call
call
xor
adc
pop
and
xor
inc
mov
adc
xor
sti
and
bound
js
xor
inc
inc
add
or
rol
dec
inc
mov
and
xor
loope
or
adc
lds
or
mov
and
sbb
pusha
xor
into
add
adc
shlb
pop
scas
cmp
adc
add
int
push
adc
pop
popa
jno
and
adc
mov
push
pop
sar
or
xor
adc
loope
icebp
mov
add
pop
mov
xorb
scas
or
inc
lock
or
js
pop
les
sar
or
add
decl
cld
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
ss
incl
mov
movsl
jecxz
cli
pop
mov
jmp
jmp
clc
cmpl
jg
or
insb
sub
addr16
out
data16
decl
sbb
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
mov
in
mov
orb
int3
lcall
mov
in
fwait
rolb
js
pop
mov
popl
movb
xchg
sbb
ljmp
sbb
lods
scas
xchg
test
aam
and
sbb
sarl
xor
gs
roll
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
decl
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
or
cld
push
sahf
mov
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
inc
pop
mov
jmp
sbb
add
dec
out
pop
jb
mov
or
push
mov
sub
subb
pop
mov
jl
rorl
adc
mov
std
lahf
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
aas
stos
push
testb
mov
scas
fdivr
incl
in
sub
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jne
subl
jb
adc
push
lock
lods
jp
testb
call
gs
sbb
into
fcomps
sbb
sbbl
into
andl
aas
outsb
jmp
pop
cli
adc
aaa
xchg
in
add
inc
adc
loope
fstp
cmp
leave
or
icebp
aas
std
cli
push
push
push
idivl
fists
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
call
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
icebp
jae
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
jl
cmp
cmp
js
jmp
xchg
pop
mov
cmpsb
in
clc
pop
hlt
lret
movsb
add
lea
mov
leave
gs
std
xorb
jg
aad
adc
ret
decl
lock
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
lcall
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
mov
jb
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
mov
push
pop
jns
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
inc
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
call
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
clc
add
pop
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
fildll
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
inc
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
mov
xor
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
jg
inc
std
xchg
and
jae
shrb
jle
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
jl
adc
pop
cld
addl
adc
and
data16
cmp
fmull
enter
jecxz
scas
sub
icebp
jmp
decl
hlt
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
jg
idivb
fadds
jg
mov
aad
test
mov
incb
xchg
movsb
mov
iret
push
aas
js
pushl
push
sbb
stos
icebp
pop
incb
jno
adc
push
jo
inc
jecxz
sbb
sarl
adc
loopne
jbe
jecxz
and
clc
xorl
and
scas
fiaddl
dec
push
in
aas
mov
iret
rorl
push
and
aas
rolb
clc
xchg
or
aas
sub
jne
push
and
mov
adc
div
jg
inc
aas
push
rcrl
rolb
pop
inc
jb
fistpl
adc
outsl
mov
lock
jno
pop
nop
mov
addr16
scas
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
cld
jg
imul
xor
dec
xor
fsubr
fistps
lds
fidivrl
jg
pop
sbb
stos
pop
add
dec
mov
sub
jge
cmp
pop
ja
lahf
les
sbb
sbb
cld
addl
cld
incl
sbb
mov
lahf
outsl
int3
push
sbb
xorl
mov
jle
xchg
popa
add
inc
sti
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
sbb
mov
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
pop
fadds
cld
or
out
lcall
shl
cld
clc
mov
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
mov
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
mov
adc
inc
lds
push
pop
adc
imul
dec
or
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
push
pushl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
das
cld
cwtl
inc
mov
insb
test
cld
outsl
scas
jo
aas
repz
sbb
lock
in
jmp
cmp
mov
sbb
aaa
clc
push
std
mov
pop
lret
js
or
jne
or
lds
dec
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
mov
incl
out
rolb
pop
or
or
mov
mov
dec
ss
lods
movsb
or
repnz
lock
pushf
imul
jl
fistps
jl
xchg
imul
pop
in
outsl
out
cmp
jmp
mov
pop
lock
in
scas
and
jmp
hlt
dec
mov
xlat
inc
incl
ja
pop
aas
mov
jg
mov
sub
addr16
jbe
mov
cld
daa
jp
std
adc
cltd
or
mov
ret
clc
push
std
and
add
lock
pop
pop
div
cld
testl
sbb
add
stc
lahf
loope
jae
jmp
or
je
jge
fbstp
xchg
mov
stc
add
out
icebp
mov
loope
mov
mov
popf
sti
mov
fbstp
in
sub
push
das
push
jge
out
cmp
call
xor
decb
adc
jbe
mov
mov
and
call
shr
cltd
add
mov
mov
cmp
int
add
push
pop
aaa
std
lock
cltd
nop
fisttps
inc
sbb
mov
mov
aas
icebp
ret
arpl
ror
sbb
aaa
inc
mov
adc
mov
sub
mov
pop
clc
scas
xorb
ja
and
dec
jno
or
add
xlat
rcrl
xchg
fldenv
iret
fdivrl
xchg
lcall
sbb
dec
sbb
lahf
dec
or
jo
sarl
pop
imul
jno
ret
fs
sub
inc
arpl
out
jg
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
adc
decl
in
sbb
xchg
imul
add
push
rcrl
into
daa
jmp
faddl
add
lock
mov
test
bound
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
das
inc
pop
add
fsts
and
stos
loopne
or
add
push
test
push
sti
pop
inc
xor
sbb
push
push
push
push
mov
test
jmp
add
and
insb
sub
lret
mov
sbb
fnstenv
loop
sbb
negl
dec
lcall
popa
sahf
mov
fdivr
lods
stos
int
push
push
inc
jmp
rcrb
jmp
ficoms
adc
icebp
cltd
popa
inc
pop
aad
xorb
out
hlt
mov
decl
add
xchg
mov
or
mov
clc
xor
pop
add
sbb
mov
inc
bound
stos
shll
arpl
sar
imul
or
scas
dec
pop
lahf
sbb
pop
cmpsb
mov
adc
je
cltd
popf
or
enter
in
ljmp
ss
mov
stos
mov
sub
loopne
outsb
add
push
popa
and
in
fcomps
jno
pop
cmpl
mov
out
sbb
mov
call
or
rclb
mov
sqrtps
outsb
xor
cmp
incl
rclb
ds
lret
lods
xchg
inc
lret
jmp
ja
insb
push
or
decl
mov
out
in
push
mov
and
xor
ret
cld
jmp
mov
cmp
gs
mov
clc
inc
lcall
adc
jecxz
call
hlt
inc
lcall
out
mov
out
jge
cwtl
mov
cmp
icebp
cli
pop
dec
xchg
dec
xchg
jno
sbbl
out
sub
in
xchg
mov
lret
stos
inc
outsb
xchg
xor
jmp
cmp
jb
sbb
jg
sti
sub
xor
dec
dec
inc
jmp
sbb
das
cmp
out
dec
mov
inc
inc
repz
pop
fcomip
call
mov
and
jmp
int3
and
push
or
jp
fs
cmp
lcall
mov
es
mov
ja
dec
mov
sti
jg
jnp
cmp
jno
inc
decl
iret
lahf
out
mov
out
adc
fisttps
stc
aam
dec
mov
sbb
mov
cmc
dec
xchg
ret
into
cs
in
dec
es
sub
inc
jae
jecxz
or
push
or
mov
dec
mov
ljmp
inc
int
ljmp
and
call
fcmovnbe
pusha
push
pop
decl
adc
mull
lcall
std
arpl
shlb
mov
call
imul
mov
sarb
pop
dec
push
mov
mov
imul
pop
pop
or
sbb
xor
fldcw
mov
mov
test
xor
aad
xchg
mov
mov
xor
cmp
int
mov
cmpsl
les
lods
sti
or
scas
clc
cmp
xor
pop
in
inc
xchg
jns
fs
or
jmp
ja
inc
xor
cmp
test
mov
jecxz
fldcw
push
adc
int
cld
in
fdivrs
cmp
lcall
nop
sahf
mov
or
mov
nop
add
inc
testl
pushl
orb
pop
and
sbb
fs
mov
mov
pushf
jmp
push
xor
mov
pop
loopne
int
mov
out
xor
jl,pt
mov
jmp
jge
pop
arpl
cmc
in
inc
jge
ljmp
adc
adc
cmp
xchg
adc
sub
xchg
add
decl
or
repz
pop
addr16
shrd
sub
ja
xor
fmull
lock
stos
incl
mov
xor
idiv
stos
jbe
lcall
rclb
jmp
mov
inc
std
sbb
fwait
out
mov
stos
call
lds
call
ror
cmpsl
push
mov
mov
push
add
jae,pt
push
mov
jge
nop
or
dec
adc
jg
cli
call
leave
or
inc
or
push
cld
ljmp
call
mov
and
and
adc
xor
mov
aad
cmp
adc
sbb
rcll
xchg
and
out
xchg
cmpsb
arpl
decl
xchg
sbb
call
inc
or
sbb
stc
lods
xor
jg
pop
inc
int
and
inc
mov
mov
jnp
ljmp
adc
inc
inc
cli
lahf
adc
add
sti
pusha
xchg
outsl
loop
ljmp
lcall
cltd
les
hlt
cli
bound
imul
rcr
mov
mov
add
decl
xchg
hlt
out
mov
cmp
push
lods
test
xor
les
mov
jmp
ret
sarb
loope
add
jmp
sahf
xchg
mov
cmp
outsb
cmp
les
or
dec
in
movsb
pop
cld
jg
ljmp
jle
jbe
jmp
cmpxchg
push
cmpsb
scas
repnz
xchg
pop
mov
mov
in
bnd
shl
cs
mov
enter
xor
jecxz
pop
pop
adc
clc
cmp
inc
push
pop
xor
mov
or
sbbl
adc
mov
mov
jbe
movq
mov
shlb
jmp
aam
add
pop
cwtl
inc
jecxz
cmp
ds
mov
mov
gs
pushf
daa
jp
or
incl
imul
test
jbe
sbb
stc
pop
mov
lcall
in
mov
mov
gs
inc
xchg
sar
sarl
dec
jge
outsl
incl
adc
xchg
cli
cld
xchg
gs
mov
pop
add
call
jb
mov
adc
sub
icebp
pop
ret
aaa
mov
jnp
sbb
sub
popa
in
aad
lcall
mov
cmpsb
push
outsb
inc
lret
mov
jmp
out
jp
mov
incl
xor
cwtl
mov
push
mov
call
nop
loopne
fimuls
push
push
and
add
mov
jge
repnz
call
mov
ds
mov
out
test
leave
mov
xchg
inc
testb
lcall
fwait
push
jg
pop
push
movsb
jae
dec
movsb
push
ljmp
dec
test
or
mov
fwait
lret
call
ja
repnz
mov
jge
jb
aaa
imul
add
jl
incl
dec
mov
jns
xor
aaa
jns
jmp
sbb
es
mov
loope
dec
push
pop
or
add
xchg
std
and
lcall
sbb
es
fldenv
mov
std
aaa
inc
fwait
rcl
fdivrs
popa
arpl
inc
mov
out
adc
and
lahf
and
aad
push
dec
xchg
inc
daa
push
fwait
push
cmpsb
decl
pop
ja
or
out
cmp
xor
xor
cmp
aad
cmp
jmp
sub
adc
jne
mov
fisttpl
mov
jmp
cmp
stos
repz
push
sub
mov
mov
push
or
xchg
test
push
jmp
and
ret
jp
popf
lock
jmp
push
xchg
ficoml
stos
in
enter
adc
pop
scas
iret
int3
imul
or
sub
out
scas
xchg
push
lret
lods
pop
jp
insb
leave
dec
mov
mov
lcall
fwait
into
mov
ljmp
pop
adc
gs
hlt
sbb
pop
add
decl
addr16
mov
bound
pop
or
fisubrl
decb
rcr
cmp
mov
fwait
push
sub
sbb
mov
mov
in
mov
pushl
in
cld
in
and
and
add
decl
cli
push
xor
xorl
cli
jne
xor
lock
adc
jmp
arpl
fs
sub
ret
xchg
cmpl
pushf
shll
fisubrl
push
incl
cmp
xor
jne
jge
pop
mov
roll
lcall
cmp
mov
arpl
cld
mov
and
jmp
xchg
test
fsts
dec
inc
insb
jbe
cmp
push
aam
repnz
imul
pushl
push
stos
addl
pop
cmc
jne
test
adcb
je
adc
in
and
into
insb
xchg
xchg
cmpsb
repnz
in
out
jb
cld
add
push
aaa
enter
cmc
sti
orl
ljmp
cmpsl
imul
push
aas
add
test
mov
mov
call
adc
jno
popf
push
lahf
sti
pop
aad
sbb
or
jb
fisttpll
jmp
hlt
cli
adcb
in
jae
push
cwtl
cmpsl
jle
inc
and
aaa
mov
jg
jle
test
les
rol
popf
hlt
cmp
push
fistps
and
inc
dec
cs
cmc
scas
cli
ret
lret
movd
std
lods
je
pop
push
test
adc
sub
add
incl
or
adc
and
rclb
pop
loopne
inc
xlat
adcb
mov
and
sbb
movzbl
fsub
mov
nop
xor
jmp
jle
es
pop
lcall
sahf
inc
hlt
dec
add
mov
cmp
lods
push
inc
xchg
and
jmp
sub
cmc
jb
test
lahf
mov
ja
cmpsl
jl
fucom
mov
sarb
sub
fistpll
sub
sbb
jmp
cmp
in
mov
leave
dec
pop
inc
xorl
in
sbb
mov
loopne
ljmp
loope
fnstsw
jns
shll
xchg
in
insb
mov
sysret
sbb
push
lock
cmc
loope
cld
decl
sbb
mov
jns
nop
roll
xor
into
addr16
xor
leave
and
jnp
pushl
lcall
in
push
sub
faddp
pushf
lret
inc
xchg
cmpsl
out
lcall
scas
in
cmp
mov
add
int3
jbe
sbb
insl
jbe
mov
call
and
xchg
inc
mov
mov
adc
les
ljmp
add
and
pop
mov
push
and
dec
mov
int3
mov
dec
push
ret
ja
jg
ja
xchg
xorl
dec
aaa
cmp
cld
pushl
std
mov
outsl
mov
jg
sbbb
pop
cmp
test
into
sub
ljmp
call
scas
fistl
jg
adc
orl
aad
inc
jno
cld
call
pushf
mov
mov
jb
clc
mov
int3
lea
sbb
or
roll
pop
mov
push
out
cmpsl
hlt
inc
cmp
xor
std
mov
test
rcrl
lock
jmp
sar
cmp
sbb
test
xchg
ljmp
mov
xchg
testl
jae
test
pmulhuw
pop
push
mov
decl
movsb
scas
lods
or
jns
stc
fbstp
lea
xchg
cmp
lock
adc
fld
pop
cmc
outsl
lock
hlt
mov
sbb
ret
jg
outsb
daa
push
adc
inc
push
sbb
inc
into
cmpsb
inc
mov
xchg
ja
jnp
cmp
dec
mov
repz
testl
mov
xchg
inc
jno
shll
sti
add
loop
adcl
ja
imul
mov
mul
add
push
sub
inc
inc
aaa
loopne
xchg
and
stc
int3
ja
lcall
cmp
loopne
mov
pop
pop
adc
lret
addl
jge
add
sahf
fiaddl
mov
push
outsb
outsl
pushl
pop
pop
sub
sbb
mov
cmc
push
xchg
gs
xor
in
push
sbb
xorl
lods
stos
notl
push
cmp
fldt
jg
xor
sub
jmp
ds
push
jae
movsl
pop
incl
js
sub
fisubs
pushf
icebp
add
cmpb
rolb
push
fidivrs
and
or
icebp
mov
out
data16
push
idivl
sbb
insb
sub
jno
mov
fwait
xor
adc
mov
or
mov
jl
push
pop
dec
push
fidivrl
scas
xor
lcall
cmp
aaa
pop
sbb
pop
sub
mov
xor
pushl
dec
cmp
dec
dec
gs
xor
cmpsb
or
test
lds
ss
pushl
enter
lds
inc
or
cmpsb
out
mov
arpl
fld
sub
ds
jne
xor
repnz
push
inc
cmp
imul
mov
push
push
pop
mov
push
into
mov
add
push
loop
je
lret
fldl
nop
popa
dec
call
jnp
mov
in
or
push
push
xchg
fidivs
inc
int3
aam
or
loop
xchg
out
out
pop
or
clc
lcall
hlt
mov
into
push
add
enter
mov
incl
jg
push
sub
out
aas
xlat
mov
fildll
daa
cmc
imul
repz
jmp
imul
push
out
movsb
fldl
add
or
adc
ljmp
jne
push
in
inc
push
out
fistps
out
mov
inc
push
stc
and
iret
cltd
dec
out
scas
pop
push
fsubrs
jmp
orl
icebp
das
jns
insb
push
imul
push
pushf
imul
ret
add
fdivl
popl
mov
xor
cwtl
stos
mov
lcall
push
clc
push
sahf
jle
cs
decl
test
rorl
mov
jg
mov
jnp
inc
dec
sub
dec
adc
imul
sbb
inc
fldenv
cmp
aad
mov
jg
jno,pn
ljmp
adc
inc
push
mov
sbb
out
dec
fadd
and
push
add
decl
lods
pusha
pop
jne
aaa
scas
and
inc
add
sbb
aad
test
cmp
jns
out
jge
push
dec
jle
test
sub
shll
popa
lahf
inc
cs
repnz
pushl
clc
insl
jp
sub
addr16
push
std
xchg
xchg
imul
pushl
mov
mov
fbld
pop
add
sbb
adcl
aaa
decl
cli
movsl
push
jns
sub
inc
stos
jb
push
pop
and
sub
pushl
jmp
scas
mov
jmp
jnp
sbbl
sbb
and
ljmp
mov
movsb
mov
mov
sbb
adc
dec
xchg
addr16
cmp
bound
ljmp
inc
push
das
ljmp
dec
movsl
push
push
push
jbe
mov
test
fcompl
out
jbe
mov
sub
test
jnp
mov
push
fcompl
pop
test
test
out
cmpsb
pop
psllq
dec
mov
stc
add
adc
cwtl
cmpsb
out
aam
in
xorb
jg
call
sbb
xchg
xchg
lret
rcrl
adc
pop
std
incl
fstpl
movsb
js
mov
je
cld
add
xor
add
mov
loope
mov
and
mov
xchg
xor
adc
ret
xor
in
subl
mov
cmp
pop
sbb
adc
jge
adc
daa
lock
mov
aas
jecxz
and
jo
int3
ds
or
jmp
sbb
rep
sub
add
cmp
imul
loop
jmp
sbb
sub
mov
stos
pushw
xorb
scas
fidivs
and
pop
mov
cmp
incl
mov
lret
jae
mov
push
xchg
ljmp
in
ljmp
out
push
int3
fbstp
fisttpl
es
pop
mov
inc
rclb
push
rolb
test
into
faddl
sub
leave
outsb
pop
flds
pop
lret
or
mov
cmp
incl
rcl
movsb
enter
outsb
push
jne
xor
stc
cmc
jle
scas
lcall
jmp
in
pop
jle
mov
dec
xchg
lcall
rol
les
jne
jp
mov
shrl
sub
pop
jbe
add
jmp
xchg
scas
xor
rcll
mov
or
sub
ja
and
rcll
loopne,pn
decl
jmp
xor
std
fs
mov
inc
sbbl
jb
incl
pop
sub
insb
shll
adc
cmp
cmpsb
dec
in
cmp
mov
push
cli
aaa
sbb
pushl
fldt
push
es
arpl
stos
and
pop
lcall
loopne
rolb
mov
aad
arpl
fdiv
lods
xor
ljmp
jl
movsl
dec
mov
and
cmpsl
dec
ljmp
mov
jl
je
dec
cmp
iret
mov
sbb
popf
pop
lods
aas
dec
or
into
and
imul
sub
cmp
dec
adc
inc
xchg
xor
adc
mov
and
cmp
insb
je
or
pop
xchg
test
not
dec
inc
pop
ljmp
mov
rcrl
add
call
shrl
in
jge
jp
dec
mov
data16
dec
dec
and
call
test
call
addr16
fildll
xor
mov
roll
jle
addb
and
pop
mov
je
ja
lcall
jb
xor
mov
xchg
pop
mov
cmc
pop
lods
shlb
xorb
inc
clc
jmp
adc
shl
aam
cmp
add
xor
js
lar
out
orb
scas
mov
or
andl
out
jg
daa
mov
cs
dec
leave
inc
scas
lock
loop
hlt
and
dec
decl
jl
insb
subl
xchg
jge
mov
das
sub
pop
or
fwait
enter
int3
rolb
outsb
xchg
push
daa
in
and
jb
sub
jno
hlt
pop
mov
shl
cmp
mov
adc
ss
call
jl
repnz
imul
test
mov
sub
ss
stc
or
stc
gs
pop
pop
in
lods
mov
push
call
clc
stc
fs
out
cmp
jno
add
mov
in
test
pop
iret
lods
xrelease
decl
jb
pop
leave
lcall
pop
mov
adc
cli
adc
push
incl
push
pop
std
push
sbb
repz
into
or
mov
jns
cmp
call
pop
sbb
and
dec
pushf
pop
jo
push
aaa
test
pop
rcrl
mov
test
jecxz
sbb
ds
push
int
xor
cld
out
bound
jge
hlt
sub
dec
dec
loop
pop
jge
xor
repnz
xchg
jbe
addr16
in
ret
icebp
jbe
add
push
mov
sub
int3
push
add
fstps
pop
ljmp
nop
mov
push
jl
xor
ja
dec
pop
push
lcall
lea
jae
dec
and
imul
mov
cltd
call
cmp
arpl
jg
sub
aad
and
jbe
xchg
mov
dec
orl
gs
pop
clc
in
mov
cmp
lret
pop
add
sbb
ds
push
sbb
push
cmp
xchg
test
repz
xchg
data16
ret
in
bound
xchg
adc
cld
sar
ljmp
mov
sarl
aas
mov
mov
or
stos
pushl
inc
push
or
pop
cs
nop
cmpsl
dec
jo
xchg
ret
pop
shlb
sub
aad
mov
shl
sbb
jg
mov
ret
into
iret
or
ret
dec
cmp
jae
faddl
dec
push
lods
sbb
lahf
andl
mov
fsubl
call
or
jp
jbe
fcomps
push
inc
and
cmc
xchg
cs
jle
in
adc
jmp
imul
adc
incl
cld
and
lods
cli
test
imul
fcmovbe
aaa
jae
cmc
add
call
dec
scas
adc
arpl
mov
icebp
fsts
push
out
jns
dec
adc
jmp
add
adc
in
lods
test
lret
sub
xor
popf
shlb
mov
mulb
mov
incl
sub
fsubs
bound
mov
inc
xlat
bound
paddd
sbb
mov
lcall
stos
fs
sbb
jg
daa
bound
ficompl
add
clc
test
lea
fsubl
mov
bound
mov
rorb
adcl
ja
or
xchg
push
dec
mov
mov
xchg
mov
rorb
jae
loopne
int3
push
add
jmp
movl
jmp
xchg
push
push
pop
add
test
dec
scas
and
jmp
cwtl
mov
and
fcomps
or
or
jecxz
pop
mov
jo
incl
cwtl
sub
fdivl
sbb
push
mov
inc
push
subl
add
sub
sbb
sbb
jmp
push
loope
pushf
xchg
xchg
fisubrs
cmpsb
fs
jmp
dec
scas
fdecstp
jo
or
mov
call
fs
rcrl
push
xchg
and
jmp
mov
dec
ds
decl
hlt
or
push
xchg
fwait
xchg
sub
jg
pop
cmpsb
loope
xchg
jnp
cmp
shll
and
push
lcall
lods
sbb
out
daa
leave
xchg
push
xor
push
mov
or
sub
push
cs
call
mov
cmpsb
dec
mov
xlat
fbstp
cmp
les
inc
mov
and
pop
stc
incl
dec
les
addr16
std
out
decb
xor
shl
sub
ljmp
or
mov
fs
mov
sub
jo
incl
cmovb
jne
mov
mov
xorb
sub
add
adc
incl
shlb
or
cmpsl
cmc
pop
rclb
mov
hlt
adc
jg
jg
lret
leave
scas
jge
inc
adc
ds
enter
cli
pop
dec
cli
jbe
dec
iret
mov
aaa
pmuludq
ljmp
repnz
lea
mov
or
test
jl
pop
sahf
jbe
and
push
std
xlat
mov
jmp
aad
pop
jg
inc
mov
fs
mov
xor
ja
out
xchg
lcall
jmp
push
das
mov
xchg
leave
push
adc
jmp
xor
ficompl
call
insb
ljmp
in
cwtl
mov
in
scas
sbbl
jns
movsl
es
ljmp
or
mov
sbb
insb
pop
cmp
jne
fisubl
jae
cmp
iret
insl
stc
ror
jg
jp
adc
js
cwtl
push
loope
inc
jmp
mov
lret
inc
dec
inc
imul
sti
lods
dec
aas
insl
push
mov
mov
jmp
outsb
movsl
testl
jge
inc
lea
pop
addr16
jne
pushf
mov
push
lcall
rcll
xor
mov
shrb
call
pop
lret
nop
mov
sub
xchg
mov
pop
das
cmp
and
inc
push
jg
outsl
pop
mov
andb
call
int
push
pop
aas
xor
sub
push
or
ret
cmc
ja
sahf
scas
aad
xor
adc
decl
cmp
sbb
mov
enter
rorb
outsl
nop
mov
mov
std
call
out
dec
xchg
mov
hlt
mov
inc
add
pop
in
push
cltd
clc
mov
mov
movsl
gs
ljmp
jno
nop
hlt
imull
mov
test
push
mov
add
cmp
cmp
in
rcrl
mov
fisttps
stos
loop
dec
mov
ja
push
adc
fildll
xchg
sbb
adc
aaa
std
incl
sarb
pop
aam
or
negb
in
xor
ret
call
xor
stos
push
adc
push
xor
roll
xor
mov
test
ljmp
mov
cmpps
loopne
mov
inc
add
enter
jnp
fcompl
ljmp
adc
inc
xchg
mov
das
and
icebp
push
fisubs
lcall
daa
adc
mov
add
add
nop
push
sbb
sub
jbe
pop
test
cld
jmp
lea
outsl
dec
outsb
ljmp
dec
in
arpl
pop
popf
jo
jbe
mov
insb
dec
cld
gs
call
lahf
xor
push
shr
pop
decb
jle
adcl
or
xchg
jb
stc
outsb
jmp
popf
mov
mov
sarl
loop
insb
push
imul
add
ljmp
jg
jmp
xor
pop
mov
push
fwait
and
ret
pushf
movsl
iret
mov
jo
sarb
lcall
jno
retw
cmpl
push
and
sub
daa
jbe
ret
pop
or
mov
ljmp
loopne
test
jmp
test
insb
into
out
mov
decl
lock
adc
rcrl
std
adcl
and
fs
xor
push
into
push
push
and
xor
scas
jne
pop
arpl
push
jge
out
lods
lds
call
into
xchg
xchg
xor
das
shlb
insl
xor
scas
dec
outsb
mov
add
loopne
fstpt
sub
dec
mov
mov
push
iret
pop
idiv
xor
pop
jl
sub
lret
add
push
lcall
mov
in
lcall
jmp
sbbb
jp
mov
cmp
push
cmp
clc
in
jb
sbb
jmp
inc
loopne
dec
mov
xchg
das
xchg
add
mov
fsubrp
and
pop
pop
mov
jl
lret
jmp
and
jmp
inc
sub
adc
jno
cli
dec
add
incl
mov
imul
cmp
xor
xor
adcl
pop
sti
mov
loopne
inc
test
hlt
loope
movsb
fs
aad
push
ss
mov
bound
xor
jg
js
in
push
movb
orb
divl
in
add
dec
sbb
call
xchg
mov
cs
iret
popf
mov
mov
lds
mov
jmp
rcrl
jnp
add
jg
repnz
mov
hlt
lcall
ja
pop
sub
adc
repz
fs
xor
iret
push
aad
push
scas
jns
xlat
mov
andb
cmp
bound
lcall
leave
ret
mov
insl
push
sub
xor
mov
mov
jnp,pt
and
lcall
out
jb
add
mov
pop
fnstenv
xchg
imul
lcall
ret
fcmovnb
and
mov
shrb
lret
mov
pushf
lods
xchg
push
ret
loope
int
dec
cmc
fildll
shrl
pop
and
mov
adc
lret
filds
scas
adc
mov
sti
cs
or
or
add
sbb
dec
arpl
jno
mov
mov
fcmovnb
leave
mov
xor
ljmp
fldenv
pop
loope
insb
or
stos
arpl
pop
or
dec
xchg
sub
push
mov
aas
loope
pushl
std
popa
pop
fwait
inc
movsb
mov
movsl
sbb
sbb
sbb
mov
cmp
xchg
sub
std
insl
addb
enter
test
movsb
jmp
outsl
sbb
cmc
ret
push
inc
jbe
hlt
iret
inc
aad
into
imul
jecxz
pop
das
rcrb
push
jp
inc
ljmp
sbb
stos
add
cld
loope
jecxz
mov
jne
mov
fwait
imul
jno
dec
xor
clc
xchg
sahf
sysret
ss
fimuls
stos
fldt
jecxz
mov
jbe
scas
xchg
popf
or
inc
ss
dec
scas
out
fwait
add
adc
mov
adc
add
and
jl
dec
leave
outsb
aas
cmp
jp
out
movsb
or
ror
lods
fcompl
repnz
arpl
push
cld
push
int
icebp
pop
xor
call
mov
ja
xchg
and
inc
fwait
push
mov
in
lret
sahf
add
jge
out
lret
loop
ss
adc
push
ret
scas
cmp
sbb
cltd
out
inc
xor
mov
add
mov
lods
repz
fcomip
jnp
or
inc
pop
cmp
rol
lcall
dec
sti
fsubl
cmc
jmp
add
xchg
mov
xchg
push
and
push
repnz
xchg
int
add
sbb
pop
pop
push
jae
push
insb
repz
ret
popa
push
loopne
incl
adc
or
sbb
sub
dec
mov
ret
repnz
scas
and
adc
aas
popa
stos
push
fadds
ja
push
insl
into
xlat
outsl
mov
test
push
std
push
insl
clc
jb
mov
adc
mov
mov
mov
fistl
xchg
and
jp
fwait
dec
fldcw
xchg
das
mov
shll
lods
mov
movsb
das
lods
and
pop
lock
cmp
push
fnstsw
mov
xor
mov
lods
cmp
filds
jg
push
jle
aas
pop
insl
push
bound
or
push
fs
outsl
stos
or
mov
dec
pop
pop
jno
pushl
scas
jb
call
inc
je
push
in
popf
pop
jg
mov
lahf
pop
and
decl
nop
and
cmc
dec
jb
repz
sub
scas
jmp
cs
push
and
roll
nop
pop
loop
fwait
jae
stos
das
or
push
cmp
das
and
sub
das
inc
cmp
loopne
inc
fcoml
cmp
popf
dec
out
push
sub
sub
incb
cmp
call
lea
loope
xchg
mov
push
mov
call
sbb
loopne
lret
mov
mov
adc
xor
sbb
xchg
fwait
pop
hlt
adc
ds
pop
cld
or
je
scas
push
fdivl
xor
mov
loop
cwtl
das
mov
arpl
lcall
imul
loopne
test
add
push
ret
shll
sub
and
jo
les
scas
push
mov
int3
pop
icebp
ljmp
mov
adc
pop
jle
xor
pop
ds
decl
or
xor
jne
xchg
rcrl
and
lock
stos
mov
fwait
out
ljmp
ret
xor
mov
stos
mov
ds
mov
jg
adc
mov
out
add
pushf
js
shrb
xchg
xchg
clc
fdiv
dec
sub
cmp
xor
fimuls
and
repz
stos
adc
jmp
xchg
inc
lcall
pop
jecxz
outsl
in
not
jae
push
pop
jmp
ja
hlt
mov
or
out
sti
shlb
das
add
lcall
mov
pop
js
mov
xlat
outsb
in
test
gs
decl
dec
testb
jne
push
movsl
hlt
test
or
push
xor
ficoms
stos
dec
fldln2
mov
lret
sbb
dec
jecxz
xchg
mov
xor
ljmp
sub
cmpsb
jae
ja
sbbb
mov
mov
jns
adc
xchg
incl
cwtl
xchg
inc
xchg
push
mov
sbb
pop
sahf
mov
sbb
xchg
cmc
adc
dec
cltd
dec
test
shl
push
addr16
sti
or
jl
pop
cmpsl
leave
lcall
ret
jne
cmp
inc
shlb
sub
ss
sti
sbb
icebp
fsubl
ljmp
into
cmpsl
out
or
or
ss
nop
lea
out
sub
lret
inc
add
decl
dec
lahf
sbb
cmp
cmc
add
dec
inc
add
shlb
out
fs
lcall
ss
jnp
mov
pop
mov
mov
mov
testl
or
jo
mov
jns
lds
psubusb
mov
push
fdivr
lcall
mov
sti
dec
imul
mov
mov
lods
xor
lahf
lods
and
push
std
jmp
sub
cld
cmpl
xchg
aas
ja
push
sahf
data16
shr
movsb
rclb
xchg
mov
lds
xchg
les
cmp
add
push
addr16
idivb
mov
xchg
push
mov
fs
lods
xor
into
aam
add
test
clc
ljmp
sbb
mov
and
push
cld
push
ljmp
jnp
dec
pop
std
sub
in
test
dec
or
lahf
dec
pop
pop
pop
xlat
and
mov
js
and
test
call
jmp
sbb
ret
pop
xchg
test
xor
inc
pop
and
sar
dec
jns
or
int3
jno
aam
addl
pop
cmp
dec
jmp
push
decl
fs
add
fidivs
sub
or
cwtl
dec
add
and
pusha
into
xor
decl
das
lods
jo
xor
push
loop
stc
aaa
daa
outsl
push
or
call
jg
mov
xor
xchg
lock
inc
jecxz
or
lahf
inc
rcrb
hlt
lcall
pop
cmpsl
sub
popf
jge
sub
jg
mov
iret
hlt
pop
stc
mov
pop
ds
jge
mov
fld
out
test
dec
sbb
pop
mov
mov
iret
leave
lret
dec
inc
xor
cli
mov
sbb
fsubrs
jnp
sbb
addl
insb
out
mov
jmp
mov
leave
stos
aaa
or
addr16
sub
ja
push
scas
std
lcall
arpl
pop
or
mov
out
xchg
jge
aas
inc
add
sbb
mov
mov
push
jo
stos
das
sbb
cmp
inc
inc
mov
cltd
sub
adc
cltd
cltd
movsl
inc
inc
mov
loop
mov
xor
or
dec
inc
in
mov
pop
hlt
pushl
fiaddl
shrl
mov
cmpsb
push
jnp
cmp
sbb
ljmp
outsl
mov
fcompl
inc
push
push
xchg
sub
aam
cmp
push
orb
pushl
cmp
mov
mov
xchg
call
add
mov
mov
mov
rcrb
pushl
xchg
imul
mov
repnz
cwtl
mov
sbb
insb
jg
nop
or
jmp
mov
jge
in
mov
ret
inc
or
mov
jmp
std
xchg
sbb
mov
in
lahf
dec
stc
mov
jmp
cmpsb
xor
mov
mov
cmp
sub
pushf
mov
mov
pushl
or
sub
arpl
and
leave
jbe
jno
cmp
adc
cmp
fistpl
jle
inc
push
cld
loop
add
dec
bound
shll
xchg
sbb
incl
pop
or
cmp
js
mov
test
imul
mov
call
xor
push
popa
mov
cmpb
fildl
loope
mov
xor
or
sub
xchg
mov
pop
pushf
push
cmp
mov
dec
cld
and
call
fistps
jp
sub
pushf
loope
sub
shrl
decl
jp
push
cmp
mov
xor
or
fs
out
pushf
pop
dec
adc
scas
and
pusha
sarl
sahf
mov
cmp
inc
dec
add
mov
jmp
mov
call
or
push
pusha
xor
xor
push
enter
inc
icebp
cltd
mov
push
inc
mov
mov
xchg
enter
popa
out
xor
lock
out
cmp
cmp
cld
mov
addr16
xor
outsl
dec
mov
lcall
sbb
imulb
adc
push
pop
inc
inc
add
ret
sub
sarl
add
out
rcr
sbb
stos
sub
clc
xchg
out
je
adc
in
mov
leave
mov
add
call
cmp
xor
shl
jmp
incl
jl
push
cvtdq2ps
xchg
cmp
cmpl
mov
xchg
fsubrp
cmp
push
fucomip
movsb
mov
mul
and
call
cmp
lds
enter
movsb
sbb
and
mov
mov
cmp
pop
movsb
xchg
xlat
sti
inc
sarl
adc
jge
mov
xor
mov
incl
or
pop
scas
out
int
push
in
stc
mov
lock
sar
cmp
or
xchg
inc
les
add
jbe
pop
mov
push
cli
popf
add
pop
dec
cmp
sub
addl
cli
push
mov
outsb
imul
mov
into
mov
ret
add
clc
incl
test
andb
cs
mov
sbb
sub
sahf
sbb
insb
or
out
xor
push
inc
lret
int
loop
stos
dec
mov
mov
pusha
push
inc
sbb
push
jo
out
cli
jmp
into
xlat
dec
or
cmpsl
dec
jo
cmp
psubq
dec
fbstp
jle
cli
cmp
movsl
jne
sbb
mov
adc
dec
mov
push
cmp
inc
xchg
ficomps
mov
rorl
push
outsb
stos
mov
xor
mov
or
out
imul
test
int
mov
nop
pop
push
int3
lahf
pop
insl
mov
mov
push
lret
pop
iret
repnz
jb
jnp
push
stc
insb
jmp
and
pushl
or
cmp
movsb
inc
mov
in
scas
push
fstps
jmp
das
rcl
cmp
ds
push
mov
int3
and
and
cmpsb
xchg
push
ret
ljmp
ja
adc
outsl
xchg
aaa
lods
push
insl
sahf
and
enter
in
aaa
cmc
or
jg
pop
xor
adc
testb
sbb
shl
std
lahf
les
mov
aas
stos
stos
les
jo
sbb
hlt
das
inc
inc
ljmp
dec
insl
mov
jo
loopne
mov
imul
out
notb
push
mov
enter
lea
sbb
lcall
loope
pushf
mov
push
inc
pop
movsb
sarl
pop
jl
push
and
pop
mov
mov
hlt
cli
out
cmp
les
sbb
cmp
cltd
ljmp
addb
ficoms
cmpsb
inc
pop
mov
mov
rcrl
ljmp
xchg
pop
cmc
sub
inc
adc
add
rorl
cmp
sub
or
fistl
add
mov
mov
fisubrs
pop
sub
or
adc
scas
fisubrl
cli
pop
lret
inc
fcomps
arpl
jb
push
xchg
mov
jmp
arpl
adc
xlat
sbb
cmp
cwtl
scas
or
push
stc
mov
stos
mov
ljmp
insb
aaa
out
adc
icebp
xchg
lahf
xchg
icebp
into
mov
lock
mov
in
loopne
sbb
scas
inc
cld
imul
cmp
ljmp
or
pop
jp
jge
fsubr
pop
xor
add
lea
mov
lcall
repnz
call
cmp
arpl
push
loopne
lret
out
dec
mov
xor
incl
dec
and
add
into
lods
sbb
xchg
insb
cmp
decl
jns
mov
in
outsb
mov
mov
xchg
jp
lahf
dec
ljmp
jae
xor
mov
mov
adc
nop
pop
lods
divb
loopne
call
cld
shrb
sbb
push
xor
push
insl
jmp
xor
inc
lahf
aam
xor
iret
dec
in
bound
xchg
scas
adc
ljmp
push
mov
mov
xchg
jbe
repz
enter
inc
loop
dec
push
dec
sbb
push
jmp
test
fmul
and
mov
or
mov
popa
cli
pusha
jmp
or
jnp
ret
pushl
xchg
cmc
pop
sti
into
aam
sbb
popa
mov
cli
jg
insl
in
data16
inc
fwait
test
xor
ljmp
test
mov
jle
rol
xchg
jb
bound
cmp
adc
lock
call
push
adcb
xchg
pop
xor
add
mov
imul
mov
lcall
out
inc
fdivs
inc
xor
inc
loop
mov
or
xchg
mov
pushl
ljmp
pop
cmpsl
jecxz
cmpsl
adc
or
incl
mov
repz
xchg
addl
jg
jmp
mov
jns
or
push
lock
sbb
loope
or
sarb
cmp
mov
xorb
pop
add
jl
push
out
adc
push
ret
mov
ljmp
je
stos
lock
cmp
cmpsl
cmpsb
loope
pop
in
shll
movsl
mov
or
inc
xchg
pop
pop
mov
rcl
jle
push
fsubrl
sub
mov
xor
cs
pushl
bound
aam
shl
rorl
push
and
out
push
push
pop
outsb
push
jno
movsb
inc
fiaddl
pushf
ret
cld
jmp
stos
iret
push
psrad
aas
icebp
and
mov
mov
in
jmp
pop
mov
xor
nop
mov
negb
or
jecxz
cld
xor
add
cli
xlat
cltd
call
jg
dec
xchg
test
dec
cmp
xor
add
scas
clc
fidivrs
jmp
jae
dec
subb
mov
loopne
pop
sub
std
clc
mov
aas
lret
push
lock
cmp
in
dec
ret
fwait
xchg
cmp
mulb
ret
jns
jno
outsl
push
adc
das
ret
jmp
into
leave
inc
loop
shrl
jne
dec
jae
call
fcmovb
ja
out
pushf
mov
addr16
cmp
dec
add
jp
test
shrb
pop
lock
in
test
cmp
mov
outsb
in
in
fistpll
lret
lcall
xchg
cmp
push
adc
mov
and
rclb
xor
nop
cmp
ljmp
push
push
jl
dec
call
mov
push
adc
dec
jnp
lret
pop
fidivrl
call
sub
xchg
dec
and
shl
add
pop
xchg
sub
cli
pop
sbb
ss
incl
andl
xlat
inc
fcom
cwtl
notb
pop
popf
insb
movsb
mov
or
mov
imul
pop
mov
bound
int3
add
sbb
cmpsl
fcomip
dec
adc
mov
jl
aaa
push
or
add
mov
lcall
xchg
xchg
push
inc
or
sahf
inc
ret
inc
outsl
jb
xchg
xchg
sbb
lret
test
xor
incl
inc
jle
xlat
and
arpl
leave
insb
pop
mov
xchg
outsb
push
test
data16
call
jg
cmpsb
ret
mov
xor
dec
fldt
push
jl
ds
add
push
cwtl
das
xchg
pusha
xor
sbb
decl
test
sbb
cld
sub
out
or
lods
inc
mov
lds
hlt
add
call
popf
mov
sbb
push
mov
into
or
cmpsl
in
sbb
roll
cltd
xchg
lea
ljmp
shll
popa
inc
or
sti
int3
adc
insl
icebp
cmp
fdivrs
out
jle
fcomp
push
aad
add
xor
cmpsl
testb
repnz
stos
cmp
fadd
xchg
jmp
add
jl
mov
fstl
push
sbb
aaa
jae
dec
mov
decl
iret
bound
testl
inc
dec
jecxz
daa
jb
inc
rorl
subb
xlat
sbb
sub
icebp
mov
js
xchg
shl
js
int3
add
decl
mov
mov
rol
ret
add
xorb
mov
inc
jns
test
sub
jp
test
sti
xchg
lds
pop
mov
jbe,pn
inc
add
mov
push
adc
incl
mulb
push
loope
or
es
or
mov
mov
js
mov
in
test
jmp
push
hlt
pop
std
aas
xchg
or
scas
xchg
icebp
mov
cmp
pop
lea
add
jmp
in
cmp
xchg
cvtpi2ps
mov
lea
insl
jb
add
dec
movsbl
pop
push
mov
cmpsl
jmp
int
roll
push
jno
sub
cmp
in
addr16
cmp
addr16
fcomps
fldpi
inc
les
or
ficomps
mov
jle
cmpl
inc
sub
imul
jmp
inc
std
fidivl
das
ss
dec
push
mov
jb
int3
fwait
imul
xchg
add
or
incl
sbb
into
cmp
mov
fptan
jb
fidivs
rcrl
inc
and
adc
push
movsb
lret
mov
mov
rcl
push
imulb
or
cmpsb
sub
das
xor
inc
mov
jecxz
mov
bound
push
stos
mov
mov
sub
ljmp
mov
fs
add
inc
push
mov
inc
mov
arpl
adc
push
lcall
adc
mov
mov
and
pusha
roll
scas
lods
or
mov
pop
rcl
pop
xor
test
loop
lcall
jo
lods
adc
outsb
ds
cmp
xor
fcoml
data16
inc
add
pushl
cmc
push
decl
fisubrs
out
dec
mov
push
xchg
ds
incl
cmp
pop
shll
inc
or
into
mov
jecxz
ljmp
lds
lcall
std
into
scas
and
lret
push
and
cmpsb
jbe
pop
lock
inc
mov
int
jmp
mov
cld
xor
bound
add
dec
in
sub
push
mov
cli
jmp
and
xchg
mov
sahf
dec
pushf
or
stos
out
mov
shll
ljmp
or
push
and
dec
cmp
jbe
fadds
pop
xor
dec
sar
mov
ljmp
cld
mov
cld
sub
add
ret
sub
inc
adc
push
cmpsl
shlb
mov
mov
jge
vphsubdq
jb
movsl
pop
sarb
shrb
aad
call
and
push
fsubrs
mov
xchg
pop
adc
sub
in
push
cmp
ljmp
jne
in
jne
xchg
into
and
dec
test
movsl
push
fildl
test
or
mov
dec
jb
repnz
jo
lock
mov
ret
incb
inc
adc
ret
cmp
mov
cli
fs
js
sbb
pop
fdivrl
dec
sub
ja
divb
or
inc
inc
mov
push
leave
int
dec
xchg
jge
popa
cs
jle
decl
mov
or
in
int
fimull
xor
lcall
cmp
lcall
pop
mov
xchg
fdivl
mov
outsl
adcb
lret
jg
jmp
loope
sbb
cmp
xchg
enter
xlat
rcll
sbb
jg
daa
adc
dec
lods
repz
popa
test
jnp
jb
sub
lcall
dec
lahf
js
loopne
xchg
fs
xor
mov
stos
dec
sbb
test
dec
sub
jp
incl
xor
cmp
cmp
cmp
aad
ds
iret
add
push
sub
popa
pop
fsubr
mov
lcall
inc
mov
sub
sub
lds
pop
test
add
mov
fcomps
inc
cltd
leave
add
cmp
pop
push
push
mov
inc
xor
or
mov
xor
ss
xchg
in
jmp
sbb
xor
dec
ret
in
jns
and
in
incl
pop
enter
cmpsl
scas
jecxz
push
lcall
iret
cs
and
ljmp
and
pop
cltd
lock
cmp
jbe
mov
pmulhw
in
xor
pushl
mov
jmp
mov
lret
in
jb
or
mov
push
dec
adc
jno
mov
in
xor
jns
or
imul
jbe
bound
sbb
movsl
fdivp
test
push
call
xchg
roll
mov
es
xor
mov
jmp
mov
push
data16
call
sub
gs
push
sub
in
or
das
pop
jle
sub
in
jg
mov
fists
add
mov
pop
sti
enter
xchg
sub
add
lods
mov
push
popa
int
mov
push
dec
insl
xchg
filds
sub
inc
ds
pushf
in
mov
mov
inc
mov
sub
decb
jl
dec
hlt
sbb
movups
dec
lcall
adc
jg
cmp
aas
loopne
pop
sbb
push
sbb
sub
inc
test
sbb
push
sbb
nop
cs
adcb
hlt
jg
mov
int3
push
sar
ljmp
mov
fistl
iret
fsubrp
mov
jl
movsl
and
xchg
popa
pop
call
sbb
fs
jge
scas
clc
scas
and
cwtl
outsb
mov
int
jmp
push
sbb
cltd
sub
jmp
sbb
dec
xor
pushl
push
sar
push
movsl
addr16
test
xchg
mov
mov
repz
pushl
std
lcall
dec
leave
ss
aas
popa
insb
sub
lcall
dec
add
adc
call
stos
fcoms
not
jmp
rorb
push
push
mov
mov
lcall
and
jp
movsb
fs
mov
dec
clc
cmp
adc
mov
push
ret
lcall
iret
enter
fstpt
sbb
jp
jo
arpl
arpl
cmp
lahf
mov
popa
xchg
mov
out
jnp
dec
or
cs
adc
incl
in
inc
jmp
and
jne
xchg
dec
lahf
or
jo
jno
imul
call
push
sahf
data16
sub
push
sbb
xchg
cltd
shlb
outsl
jo
push
ljmp
std
dec
push
in
add
mov
out
cld
sbb
imul
sbb
jmp
jo
jae
cli
leave
nop
repnz
outsl
popa
dec
sub
in
push
jmp
mov
repz
cmpsb
cltd
add
fstps
ret
xor
pop
das
ficoms
cli
cld
push
stos
adc
ljmp
mov
mov
and
dec
bnd
lds
ljmp
sub
adc
lcall
sahf
cmp
add
imul
inc
fidivrs
call
inc
data16
jae
pop
inc
ds
fcos
imul
adc
dec
pop
int3
sbb
or
sub
add
out
mov
lcall
jecxz
iret
dec
jno
sbb
and
adc
add
push
mov
pop
and
lahf
mov
jnp
jle
daa
add
adc
xor
add
sub
pushl
fnsave
cmp
incl
add
mov
sub
mov
mov
xchg
push
repnz
cmpsb
out
mov
adc
inc
jg
xor
insl
lods
xchg
lret
sub
pop
jp
adc
and
dec
loop
jmp
push
pop
clc
cwtl
inc
imul
xor
call
std
and
cs
mov
mov
movsl
pop
mov
ljmp
jecxz
push
jecxz
mov
in
jp
mov
adc
ljmp
cli
ds
jecxz
cmp
mov
jge
mov
mov
and
mov
jmp
mov
cld
sahf
pminub
dec
pusha
fldenv
popa
aas
sbb
rorb
out
lcall
or
jnp
or
and
mov
jg
lock
pusha
jns
sbb
sub
push
and
mov
incl
jno
fs
xor
xor
xchg
rcll
rcll
call
xchg
adc
divl
pushf
test
ret
inc
sbb
add
pop
sub
adc
or
sarl
xor
lods
imul
pushl
std
ljmp
ljmp
jne
popf
xor
ret
xor
jge
rcll
jmp
and
int3
dec
les
pop
stos
and
fs
daa
nop
inc
decl
lret
xor
andb
lcall
inc
hlt
popa
arpl
test
dec
stos
dec
int3
pop
pushf
scas
aaa
lea
lods
lea
cmc
mov
cmp
leave
btr
jns
sub
jecxz
pop
gs
shrl
push
add
aaa
pushl
cmp
mov
push
xchg
sub
aas
cld
jne
lret
xchg
aaa
aas
dec
mov
call
mov
mov
stc
ds
adc
add
pushf
mov
fisubl
push
je
push
mov
cmpsl
test
jp
js
mov
leave
insl
xchg
pop
fcmovbe
xchg
mov
sbb
test
int3
cmp
fstpl
outsb
and
aam
mov
push
or
ljmp
pop
sbb
cmp
lahf
mov
orb
mov
cltd
stos
or
pop
mov
cmpsl
pop
in
clc
shlb
mov
pop
and
mov
jo
pop
jb
lahf
sar
mov
clc
cmp
mov
into
jnp
push
shlb
cmc
incl
lea
mov
sarb
mov
push
fwait
or
fstl
add
aas
and
std
xlat
sub
lods
mov
or
les
outsl
bound
into
or
mov
lcall
push
stc
mov
cld
enter
inc
out
test
daa
daa
jo
jb
pop
add
mov
xchg
xchg
cltd
mov
or
in
ficompl
sbb
mov
insb
stc
stos
loop
cli
push
out
lret
sbb
incb
mov
push
cli
iret
outsb
pop
divl
lds
inc
mov
cmp
std
imul
pop
addr16
lret
in
in
cltd
sub
arpl
jmp
pop
imul
sbb
sahf
sbbl
sahf
outsl
or
xor
testl
fdivl
fs
decl
cmp
jecxz
add
js
xchg
sub
ds
mov
fcmovnb
es
popf
cmp
push
push
pusha
js
es
aaa
xchg
sbb
mov
ljmp
cli
stos
add
lods
pop
pop
or
sarl
mov
lahf
add
pop
sbb
sub
sub
enter
adc
shll
incl
mov
add
push
insl
sbb
out
cmp
xchg
js
fists
hlt
in
insb
cmp
sub
inc
push
jecxz
jg
scas
mov
sub
lods
movsl
mov
gs
scas
push
mov
imul
repnz
pop
hlt
mov
sbb
sub
test
icebp
and
dec
jne
lcall
mov
ja
xchg
pop
into
mov
cmpsl
sub
sbb
push
push
xorb
mov
aaa
incl
add
test
std
xor
movsb
or
fdivrl
icebp
sub
push
xchg
enter
ljmp
mov
jge
adc
imul
aaa
sbb
or
mov
xor
mov
cli
decl
mov
ds
pop
lcall
rcl
jp
imulb
popl
and
push
cmp
jl
std
das
mov
clc
mov
inc
push
lods
and
jg
mov
xchg
aas
enter
scas
dec
shll
dec
pop
nop
ja
dec
sbb
cld
ljmp
xorb
ss
mov
mov
push
pushl
mov
ret
xchg
in
mov
rdtsc
mov
lock
jmp
jb
mov
xchg
fwait
out
jle
cmpsb
movsl
adc
pop
or
out
pushw
pushl
daa
xorl
add
push
jns
adc
aad
scas
jle
pusha
or
mov
add
out
popf
fdivrp
push
xchg
mov
mov
shrb
decl
xlat
loope
jge
lahf
pop
arpl
hlt
jle
xor
test
call
lret
stos
lea
mov
jmp
movswl
addb
pushl
xor
or
xor
sub
jmp
lods
or
sub
sahf
out
decl
add
push
or
mov
cmpsb
das
iret
mov
repz
sbb
dec
mov
test
or
scas
unpcklps
imull
xchg
adc
jb
incl
push
dec
jle
push
int3
mov
push
int
and
sbb
sahf
nop
mov
mov
outsb
cmove
decl
xor
test
in
dec
jnp
mov
call
xchg
xor
decl
sahf
sbb
sub
mov
imul
and
sbb
and
ret
les
call
sti
das
std
nop
push
std
xchg
push
lcall
mov
dec
cwtl
js
or
nop
mov
insb
lcall
lods
out
dec
sub
add
aas
notl
cmc
or
in
into
lods
rcr
mov
mov
loop
sbb
xor
push
stos
push
sarl
push
ret
mov
test
sub
push
jge
cs
cmp
jns
lret
popf
inc
incl
mov
inc
mov
mov
gs
inc
push
sub
loop
mov
inc
add
pop
std
cmp
lock
sub
push
stos
stos
xlat
icebp
inc
lret
jle
jmp
ss
jo
mov
shl
xchg
jnp
rol
dec
ljmp
inc
sub
shll
lods
or
dec
or
add
cmp
dec
push
mov
shlb
xchg
push
fisttps
pop
or
sub
ret
mov
insb
leave
mov
push
push
jae
push
sub
fnstsw
xor
or
pushl
cmp
jg
xlat
inc
or
leave
ret
xlat
mov
mov
roll
or
call
decl
ds
call
dec
cmpsb
mov
cmp
pop
rcll
xchg
mov
test
aad
jmp
dec
dec
ja
cmp
mov
movsb
ficomps
sub
pop
mov
cmc
fistps
cmp
pop
out
xchg
xchg
notb
pop
xchg
les
jmp
mov
xor
stos
getsec
mov
pop
lods
lods
iret
adc
pop
in
cli
jno
pushl
ss
rolb
inc
sub
sbb
scas
cld
jg
inc
pusha
out
lods
stos
xchg
cmp
fimuls
jmp
adc
add
jae
loope
sbb
das
or
or
cmp
dec
call
cltd
jae
daa
data16
clc
mov
push
out
pop
adc
xlat
ljmp
out
int3
xor
arpl
repz
add
fcoml
in
mov
sar
ljmp
xor
fisubrs
sbb
repz
dec
pop
mov
jg
xchg
or
pushf
cli
mov
ret
in
jns
sbb
mov
call
pop
and
mov
jne
ss
imul
shll
in
icebp
mov
pushl
jecxz
data16
lea
push
push
nop
out
mov
lret
test
dec
dec
nop
xchg
test
lcall
dec
dec
pop
ds
mov
divl
insb
cmp
xlat
sub
lcall
flds
jmp
ret
dec
fdivl
fwait
cmpl
test
ljmp
pushf
mov
inc
fists
icebp
aad
pop
mov
adc
insb
jl
and
push
xchg
mov
ljmp
out
pop
mov
rolb
sbb
and
push
xchg
pop
mov
loopne
inc
and
sbb
loopne
push
fcomip
call
xchg
mov
cli
lahf
sahf
enter
push
mov
mov
data16
cwtl
mov
pushl
loop
mov
into
mov
add
jo
loop
xchg
lahf
fistpl
int
aas
mov
insb
xchg
ficomps
mov
cmpsl
dec
inc
adc
shl
into
pop
cmp
out
leave
cmpsl
in
addl
lcall
cmp
pop
mov
std
imul
movsb
or
pop
push
add
ljmp
xchg
or
lods
rcll
jmp
mov
mov
ljmp
add
aaa
cmp
mov
pop
sub
fidivs
cwtl
shlb
dec
imul
pushl
jecxz
mov
sbb
ljmp
adc
cmc
push
arpl
or
pop
incl
mov
lret
mov
das
sub
pop
leave
jnp
loopne
ljmp
data16
xchg
cmp
call
xlat
push
sbb
xor
add
push
int
adc
mov
jbe
sbb
incl
int3
jbe
ss
adc
pop
jl
jbe
add
shrb
in
or
jno
jmp
jnp
div
add
rcrb
roll
pop
maxps
push
ret
cld
decl
pop
iret
and
movsl
scas
or
pop
pop
enter
xchg
loopne
fst
cld
xor
jge
inc
ret
mov
push
sarb
sti
movsl
jl
insl
push
mov
in
add
decl
push
rcrb
mov
or
add
xor
fbld
ljmp
sub
out
cli
ret
out
repz
fs
jecxz
push
scas
sub
ljmp
addr16
shrb
sub
testl
cmp
dec
call
mov
test
pusha
dec
mov
nop
push
and
imul
call
movsl
dec
std
pop
movb
fs
scas
xchg
repnz
lea
ljmp
mov
mov
outsl
xchg
imul
insb
xchg
jmp
add
bound
imul
xor
inc
mov
ljmp
movsl
push
arpl
push
add
xchg
inc
int3
insl
inc
mov
das
ja
and
pushl
cld
adc
push
lods
pop
data16
stc
pop
jg
mov
push
sub
lret
mov
decl
je
dec
mov
mov
mov
int
and
fmuls
push
cmp
shrb
dec
ljmp
pop
inc
lds
insl
dec
iret
roll
and
add
add
push
les
sbb
mov
ret
jno
cli
jb
push
roll
or
mov
sbb
inc
pushl
inc
out
imul
mov
and
mov
adc
xchg
decl
mov
cmp
xchg
fistl
ljmp
pop
push
call
in
aad
ja
arpl
les
fwait
add
stos
adc
roll
sbb
cmp
adc
mov
sar
cltd
pop
mov
sti
xor
loopne
sub
jmp
push
out
pop
mov
or
inc
out
leave
push
pop
lahf
outsb
xor
cld
or
add
lds
mov
ljmp
push
pusha
mov
into
jp
and
mov
lcall
stos
je
pop
xor
mov
xchg
adc
lods
aaa
push
stos
arpl
into
iret
stos
stc
scas
fwait
les
loope
mov
movsb
mov
out
cmp
sti
lret
orl
popf
repz
cmp
jge
cmp
push
popa
sub
leave
push
xor
call
dec
adc
mov
mov
pushl
call
mov
idiv
or
pop
add
inc
loop
jg
in
add
andl
mov
push
ljmp
cmp
leave
xor
adc
pushl
insl
jnp
lock
sahf
shrl
mov
xchg
js
sub
incl
cmp
pop
mov
dec
adc
mov
fildl
loopne
jmp
xchg
adc
les
stos
mov
cli
xor
test
pop
pop
icebp
mov
shr
adc
adc
or
sbb
and
ret
pop
sarl
out
aad
dec
ret
jbe
push
stc
and
jp
orb
dec
fwait
xlat
xor
imul
ljmp
mov
mov
and
adc
out
lret
sbb
incl
ljmp
mov
fsts
out
push
or
orb
stos
inc
or
sbb
pop
xlat
lea
cmc
out
testl
add
incl
sbb
f2xm1
fsts
addr16
sbb
daa
adc
pop
dec
cmp
mov
mov
outsb
or
in
adc
ret
popf
fstpl
cmp
popa
mov
test
jecxz
sahf
jp
inc
pop
jecxz
repnz
ljmp
push
adc
xchg
mov
push
mov
stc
and
xchg
fs
int3
lcall
sbb
scas
adc
imul
loope
fistl
cmp
mov
outsl
lret
ljmp
mov
jg
xchg
push
sbb
test
fs
adc
incl
js,pn
and
dec
add
in
int3
repz
fcom
ret
inc
cmpsl
sub
ljmp
jb
mov
sahf
jno
jmp
sahf
dec
cmc
jae
mov
cmp
fs
dec
call
sbb
mov
cwtl
jne
std
inc
xor
mull
dec
adc
lds
lcall
push
sti
mov
out
les
inc
test
dec
pop
jmp
out
clc
xor
cmpsl
sub
int3
xor
icebp
mov
dec
loop
sub
adc
call
std
xlat
loope
mov
stos
scas
mov
add
bnd
loopne
mov
jle
or
sbb
adc
add
test
mov
xchg
or
mov
mov
incl
mov
mov
push
mov
or
mov
ljmp
jno
fldl
pop
dec
mov
decl
in
lock
dec
repnz
jl
leave
jb
cmp
and
daa
incl
cmc
push
cmp
push
ror
out
jle
lea
fsubrp
fucomip
cli
ljmp
scas
stos
repz
xchg
mov
fcmovb
xor
inc
int3
out
mov
call
xorl
dec
sbb
sarb
sbb
sub
jg
cli
xchg
stos
sub
ds
mov
pop
push
xchg
inc
mov
pop
hlt
pushl
cmpsb
mov
mov
loope
mov
in
add
call
pop
xor
cwtl
sti
mov
mov
mov
jmp
xor
fnstsw
stos
push
lods
pop
push
and
sub
in
jns
shrl
lcall
mov
adc
inc
lcall
fcmovne
lds
clc
mov
add
and
jge
push
pop
or
push
sarb
fsubp
mov
jae
test
movsb
repnz
fmulp
int3
data16
decl
lods
mov
inc
push
sbb
jl
jb
mov
sub
enter
push
clc
jno
xlat
sub
pop
cmp
sbb
arpl
inc
subb
lret
adc
jge
icebp
lock
or
insl
lods
cmpsl
ss
jo
imul
xchg
mov
inc
sbb
stos
cmc
mov
and
andl
xchg
jne
mov
aam
je
mov
in
jmp
clc
and
pop
mov
sub
sbb
aas
bound
testl
popf
push
aas
imul
jmp
push
sub
cltd
sbb
jns
mov
ds
repz
shrb
push
mov
or
je
push
in
push
mov
fldl
test
push
adc
jne
cwtl
incl
push
loop
add
and
fsubrs
dec
int3
enter
xchg
stc
xor
decl
cs
rcrb
mov
pop
cmc
shrl
jg
cmp
scas
cli
jg
sbb
xchg
sahf
imul
shrb
sbb
mov
cmp
cmpsb
jp
mov
mov
jl
imul
jno
pusha
ljmp
pushl
shl
lahf
pop
icebp
push
hlt
and
mov
in
or
gs
ljmp
rclb
push
xchg
lea
sub
sti
int3
les
cs
push
sbb
pop
and
out
and
std
ja
jae
mov
cmp
out
mov
mov
mov
inc
sub
cli
add
xlat
loop
fbld
add
repnz
xor
pop
inc
pop
ja
sub
adc
aad
and
arpl
decb
daa
xlat
stos
jmp
int
jmp
adc
dec
pop
lods
je
inc
sahf
imul
mov
out
sbb
rcr
pop
loope
jae
fdiv
clc
lods
push
clc
sub
pushl
jns,pt
and
arpl
les
sub
jbe
es
mov
sub
cli
call
int
lahf
lahf
jo
mov
jg
add
imul
pop
lea
incl
mov
loope
push
into
or
pop
sub
inc
jp
pop
cld
lds
jmp
add
int
shl
dec
sub
pop
xor
xor
cmp
out
rcrl
decl
lock
jle
pop
xor
push
push
pop
mov
dec
mov
xor
incl
sahf
sub
xchg
mov
and
mov
dec
and
jge
call
and
push
add
pop
inc
or
adc
mov
dec
mov
decl
es
mov
ss
push
xor
inc
pop
aad
cmp
cmpsl
mov
shll
inc
lret
adc
call
insl
xor
mov
mov
push
add
lds
in
lea
cmp
lods
out
andb
cmp
add
mov
mov
push
xchg
adc
lds
shl
out
cmp
decl
push
cmp
pop
pop
or
inc
lret
lods
jge
sub
fdivs
call
jle
pop
add
nop
dec
jae
dec
mov
ror
add
fstpt
loope
ljmp
push
jmp
loopne
insl
push
popa
ss
mulb
add
sub
divl
dec
mov
aad
jns
jne
mov
aam
je
nop
push
mov
and
hlt
in
mov
nop
in
inc
out
jo
std
jne
xor
scas
dec
inc
mov
mov
bound
sbb
daa
push
ret
fcomp
mov
mov
dec
cld
push
fiaddl
movsl
ficomps
mov
sub
adc
clc
push
adc
out
jge
add
addb
push
lds
pop
push
repz
decl
outsl
sub
xor
in
dec
adc
mov
push
aam
sub
jge
pop
mov
sbb
push
xor
rorl
add
int3
jb
adc
orl
pop
sub
incl
inc
sub
rorl
std
mov
ja
mov
cmp
aas
push
ljmp
lods
jmp
lea
aam
in
loopne
adc
push
sarl
loop
mov
or
stc
push
cmp
mov
clc
adc
arpl
dec
out
cmp
ss
add
decl
adc
inc
test
cmp
mov
add
sar
push
adc
pusha
lcall
scas
mov
mov
adc
mov
shll
lds
filds
lcall
pop
pop
or
jo
push
mov
lcall
std
rcll
pop
stos
cmp
push
das
leave
test
fcomps
arpl
cmp
lcall
fnsave
and
add
mov
cld
adc
push
xor
ljmp
jne
aad
adc
jl
dec
adc
or
jl
nop
fcomp
loope
push
pop
add
inc
aam
mov
cmp
ljmp
das
sub
fsubl
mov
out
cld
test
add
or
xor
dec
sub
xor
in
xor
jmp
loopne
jno
jl
sti
out
jle
jl
ret
jmp
cs
mov
xchg
outsl
or
pushl
sti
pop
cmpsl
rclb
adc
les
loop
or
cmc
aam
xchg
movl
cli
movsl
push
mov
cmpsb
mov
into
int3
lods
cmp
jle
std
xchg
sub
sar
jns
jl
mov
or
inc
adc
test
jns
jl
daa
sti
call
push
in
fstl
loopne
and
fstl
std
fs
mov
in
call
lcall
adc
lahf
fucom
or
out
push
xor
jb
rcrl
call
scas
inc
bound
sub
ljmp
inc
xor
cmpl
loopne
xchg
out
push
mov
fildll
outsb
fs
sbb
bound
push
fldl
sahf
or
aad
dec
cltd
nop
push
dec
fnsave
loope
incl
lods
cli
push
repnz
add
push
incb
mov
push
mov
mov
pushl
push
jmp
jae
xor
cwtl
dec
adc
push
shrl
xor
lcall
push
aaa
int
stc
jo
popf
and
inc
aam
aam
cmp
xchg
enter
lcall
in
pop
mov
decl
mov
inc
jne
aas
lret
sbb
push
xchg
pop
aaa
fidivl
movsl
inc
and
ret
lcall
movsl
push
push
add
jp
xor
test
out
rcr
out
sub
lcall
pop
movsb
addr16
fstpt
mov
popa
add
jb
and
nop
int
outsb
inc
jg
pop
adc
pushf
les
push
mov
aaa
xor
and
js
xor
idiv
or
sbb
ds
mov
xor
incl
arpl
outsb
aas
or
jo
xor
mov
out
pushf
ret
out
sar
call
imulb
or
in
inc
stc
shlb
push
mov
test
std
call
outsl
pushl
ljmp
stos
sti
and
stos
cs
sbb
push
js
jmp
push
add
imul
sub
subl
inc
insl
adc
jg
call
xchg
icebp
stos
adc
adc
sbb
mov
cli
mov
push
add
rcr
adc
loop
add
xorl
jmp
fmuls
fldt
sub
jmp
test
pop
xchg
enter
lock
popf
adc
inc
mov
shl
icebp
inc
ss
jno
roll
clc
jno
imul
imul
add
sub
bnd
ds
ljmp
lea
ss
inc
cmp
inc
data16
ret
fimuls
push
mov
addb
aad
cmp
fs
adc
push
push
les
add
ja
cmpsl
push
push
incl
inc
add
fmull
push
and
dec
cmpsl
dec
addr16
add
and
dec
xchg
mov
dec
xchg
push
adc
or
jle
iretw
out
jbe
mov
bound
add
add
decb
bound
xchg
testl
data16
sti
cmp
in
les
ret
jecxz
in
lock
shr
fnstcw
pop
stc
sub
gs
std
fcomip
add
cmp
cmpsl
push
add
adc
cwtl
push
test
pop
cmp
mov
loop
sbb
cs
jb
bound
xlat
cltd
outsl
cmp
pop
jecxz
pushf
je
xchg
push
adc
test
je
sahf
inc
adc
pop
movsb
icebp
add
addr16
push
dec
stos
jecxz
jmp
lods
jmp
notb
sets
lcall
mov
jnp
xchg
or
loop
sbb
call
jl
aam
inc
addb
pop
push
jg
mov
into
sub
fcoms
loopne
push
push
pushl
incl
cld
cmp
cmpsb
call
add
mov
or
cli
int3
or
jmp
mov
and
sbb
xchg
fs
mov
out
mov
mov
les
stos
add
mov
mov
adc
ljmp
outsl
sbb
xor
test
rorb
nop
lret
mov
scas
fwait
cltd
ljmp
fsubl
xor
push
mov
loop
out
xchg
push
lea
int
test
xchg
lcall
movsb
jecxz
cli
ss
scas
stos
lret
inc
ret
push
sbb
dec
movups
dec
and
stc
test
stos
or
jo
and
xlat
cmp
xor
hlt
mov
jo
aam
nop
in
lcall
and
hlt
fists
pushf
mov
jns
pop
pop
dec
cltd
out
sbb
mov
and
sbb
or
pop
push
mov
mov
fiaddl
dec
cmpl
mov
xor
incl
cmp
pop
cld
xchg
in
inc
dec
into
mov
fsts
addr16
mov
or
dec
and
pop
mov
mov
lds
fs
push
push
sub
loopne
dec
test
pop
pop
sarb
and
pop
loope
xor
subb
incl
xor
or
push
test
inc
sti
xor
pusha
mov
lock
cld
fnstsw
sbb
andnps
aam
stos
call
pusha
cmp
outsl
xor
mov
add
mov
arpl
int3
lcall
std
sarb
jae
movsb
out
xor
pop
xor
aad
push
dec
jge
push
push
push
je
push
inc
mov
pop
inc
clc
outsb
pop
sbb
mov
jbe
lock
and
shrb
inc
lahf
insl
fs
sete
or
outsl
adc
dec
mov
add
xor
push
pushf
sub
mov
sbb
add
fsubrs
or
pushl
sti
lret
popl
ja
mov
jne
loope
mov
imul
decl
stos
sar
push
fistps
or
inc
rorb
and
ljmp
xchg
pop
push
jecxz
aas
sbb
mov
pop
dec
pop
nop
lcall
icebp
mov
pop
mov
lahf
popa
dec
cli
push
and
fstpt
mov
pop
xor
scas
xchg
xacquire
mov
ja
rolb
mov
loop
sub
cmc
sbb
sbb
fs
mov
testb
lahf
ja
jmp
notb
hlt
mov
outsb
hlt
test
mov
xchg
xchg
push
ss
out
dec
mov
or
dec
ret
fldpi
test
mov
popa
push
lods
xchg
dec
pop
xchg
notb
xor
stc
jmp
ljmp
addb
push
and
add
or
mov
stc
ljmp
lcall
mov
mov
cmp
jle
fldcw
call
stos
mov
xlat
call
sbb
cli
mov
xor
fistpll
adc
mov
cmp
sti
call
jmp
and
rcrb
mov
mov
cs
ret
hlt
bound
push
xor
in
int3
mov
fld
test
mov
cmp
push
jno
ljmp
adc
stos
mov
pusha
jle
sahf
xchg
in
jb
mov
push
sub
shll
pushl
inc
leave
mov
lock
jnp
cmp
lahf
les
jmp
pop
jp
incl
incb
push
ja
xor
call
scas
pop
pop
lock
pop
stc
bound
cmp
bound
mov
adc
jno
pusha
shll
incl
add
cltd
movups
mov
cmp
enter
jns
push
jg
dec
jge
mov
leave
imul
or
mov
dec
xchg
insl
std
jp
or
scas
xor
sub
mov
mov
cltd
push
add
xchg
sub
clc
shrb
push
shlb
mov
decl
leave
jae
es
cmp
das
out
fwait
inc
mov
or
icebp
rcll
jge
pushl
inc
mov
add
imul
mov
imul
mov
pop
fstpl
cld
inc
fdivr
sbb
mov
and
mov
fldl
lea
aaa
imul
hlt
paddb
and
ljmp
sbb
cs
mov
ss
and
xor
sti
ret
mov
repnz
mov
outsb
mov
inc
lret
inc
jno
xor
jl
inc
inc
lret
incl
outsl
stc
mov
xorb
clc
xchg
into
vpsubsw
mov
xor
push
mov
mov
sub
push
lods
xor
dec
aaa
push
jge
and
sub
adcb
or
jmp
adc
push
xor
repnz
ljmp
lcall
mov
sar
ljmp
lods
xchg
lahf
add
arpl
aam
or
nop
into
lret
jge
mov
and
push
out
insl
or
leave
cwtl
fstpt
push
and
adc
jg
inc
shrb
xor
mov
adc
in
jle
aad
out
icebp
inc
inc
test
incw
daa
fdivl
in
jne
shrl
movsb
adc
dec
mov
leave
xor
xor
inc
fidivrl
das
ja
ljmp
jne
aas
repnz
push
xor
imul
lods
stos
roll
pop
pop
lcall
adc
in
gs
mov
jg
push
insl
pop
aas
in
enter
sbb
and
pushl
inc
scas
and
mov
in
shrl
sub
pusha
stos
clc
mov
mov
stos
pop
in
sbb
jbe
ror
pushf
outsb
outsl
sbb
jge
inc
daa
lahf
insb
push
loopne
cmp
jge
rcrb
cmpsb
test
fcoml
call
mov
sub
mov
push
xchg
mov
dec
inc
mov
mov
adc
push
xchg
decl
in
push
aaa
into
iret
inc
cld
fucomi
push
pop
fdivrp
fstl
rol
mov
clc
lret
mov
push
add
and
fwait
aas
mov
call
out
clc
clc
test
adc
mov
repz
stc
leave
adc
ds
das
dec
mov
sub
test
pop
loopne
inc
ret
mov
jae
push
sbb
popa
jmp
inc
rorl
pushw
mov
enter
movsb
xlat
rcrl
mov
mov
mov
ja
sbb
insl
icebp
jae
gs
add
loope
sub
or
jnp
jecxz
jmp
xor
push
add
push
enter
ljmp
mov
mov
mov
mov
add
mov
adc
imul
push
sub
sub
pop
fwait
sbb
xor
out
sbb
push
cmp
or
inc
je
shll
call
jo
adc
insb
arpl
cwtl
cwtl
pop
sbb
fcoml
aam
mov
dec
fwait
mov
insl
pushf
in
xor
call
fbld
sahf
addl
push
shrb
cli
push
fisubrl
jns
add
clc
jmp
jl
dec
xchg
jns
subl
test
or
add
sar
jnp
jnp
or
ljmp
lcall
pop
rorl
inc
das
outsb
repnz
call
incl
jecxz
int
movsl
xchg
sub
push
inc
idivl
lods
xor
sbb
xor
call
push
jg
add
std
xor
mov
adc
mov
jmp
jp
shl
popa
loopne
gs
sbb
decl
cmpsb
jg
test
rorb
jnp
adc
movsb
xor
sbb
fldenv
xor
lret
mov
aam
lds
dec
xor
les
test
pushl
outsl
fcomp
fldcw
inc
out
lahf
in
cli
shrb
mov
out
or
lcall
fwait
push
cmp
aas
dec
push
icebp
or
lods
push
jbe
xchg
mov
xor
mov
jbe
ss
xchg
je
fdivr
jg
std
sub
pop
pop
pop
loopne
movsb
ret
xor
repz
fdivrs
cmp
leave
xor
mov
jmp
aam
cmp
inc
mov
in
xor
adc
out
pop
inc
les
test
dec
or
mov
sub
pop
pop
lret
lock
jmp
int
int
jle
movsl
and
adc
mov
xor
and
mov
ja
dec
fbstp
xorl
insl
sbb
lods
add
mov
testl
enter
pop
xor
sahf
sub
pushl
dec
incl
dec
ret
add
mov
movsb
inc
fistpll
mov
jg
imul
dec
jecxz,pn
mov
sbb
lods
adc
push
outsb
mov
les
jb
lods
out
mov
hlt
fidivl
idiv
jg
add
push
adc
push
jae
push
loope
xchg
les
gs
jae
fcoml
or
sbb
mov
ljmp
and
xor
xchg
cmpsb
jp
testb
jo
add
decl
mov
sbb
inc
or
fistps
mov
test
cmp
xchg
ret
incl
cmp
loope
fdivrl
mov
pop
cmp
xor
icebp
or
mov
jmp
xchg
xor
push
insb
popa
in
mov
movsb
stc
sbbl
push
jmp
dec
push
push
fldl
orb
adcb
dec
mull
daa
push
push
add
sbb
out
push
xchg
jl
xlat
xor
stos
insb
in
dec
inc
xchg
test
repz
clc
clc
sbb
out
fcomi
out
icebp
ljmp
sub
mov
mov
ljmp
js
das
cli
lcall
mov
pop
dec
mov
jnp
pop
inc
mov
loop
call
sub
push
mov
pop
xor
mov
sub
shr
mov
cli
es
hlt
push
pushl
clc
xchg
sbb
xlat
into
div
lret
pop
gs
incl
mov
or
mov
imulb
xchg
pushf
leave
xchg
ja
ljmp
fs
jb
pop
enter
inc
sahf
jbe
out
insl
cmp
adc
lods
sarl
iret
xor
jmp
pop
jle
out
dec
int
mov
mov
xor
cmp
jbe
arpl
data16
jmp
pop
fisubrl
fwait
push
add
test
sub
push
scas
cmp
push
mov
mov
fistps
lods
scas
jl
insb
adc
jmp
cmp
dec
std
sar
outsl
outsl
clc
mov
mov
cs
ljmp
inc
ret
mov
stos
fcompl
xor
jmp
pop
popf
mov
cmp
out
imul
icebp
jmp
lcall
jmp
sbb
pop
in
out
cmp
jb
dec
push
mov
xor
mov
mov
lock
pop
push
adc
and
and
fs
xchg
xchg
jg
pop
dec
mov
push
dec
jo
and
lret
gs
pop
imul
ljmp
cli
cmp
cmp
pop
pop
call
mov
xchg
stos
inc
cmc
and
pop
push
lcall
push
mov
inc
mov
mov
flds
mov
decl
ljmp
add
in
imul
daa
pop
add
xchg
mov
jo
std
ljmp
xchg
out
inc
scas
adc
addl
add
push
mov
pushl
stos
ss
xor
jg
inc
jb
sub
daa
movsb
mov
add
js
pushf
sbb
dec
cmc
jg
jge
std
hlt
cltd
test
jge
iret
jns
jne
ror
decl
mov
lods
int
icebp
inc
mov
jecxz
sbb
fistps
sub
test
bound
mov
pusha
lods
xchg
mov
ds
push
lds
xor
pushl
push
js
leave
pop
movsl
pop
lods
repz
and
sub
out
jmp
sbb
xchg
jae
mov
ficompl
clc
sub
arpl
pop
push
fidivs
aam
imul
mov
lahf
sarb
or
adc
jp
icebp
mov
inc
push
dec
push
xchg
xor
cmp
fnstenv
pusha
push
jp
incl
inc
outsb
and
xchg
int
jo
idivb
fimuls
cmp
and
or
and
dec
testl
push
nop
mul
mov
mov
aas
add
push
lret
clc
notb
ljmp
popa
and
hlt
mov
fcmovu
jo
enter
jnp
jno
mov
mov
fbstp
sti
sti
sbb
ficoml
sti
and
mov
cmp
pop
and
mov
imul
pushl
lret
mov
fnsave
add
clc
int3
or
insl
sbb
mov
fstpl
call
xchg
mov
movsb
pop
insb
cmp
inc
scas
rolb
popa
clc
gs
xchg
mov
push
sar
pop
call
pop
sub
xchg
vmptrld
loopne
lods
call
shrl
push
push
iret
mov
decb
xchg
in
ljmp
incb
orb
shll
mov
jle
aas
push
mov
loop
inc
js
ljmp
mov
aad
xchg
or
adc
enter
mov
mov
popf
jmp
jle
and
lea
mov
aas
inc
leave
mov
push
aaa
jo
call
test
inc
in
bswap
repnz
jmp
cmpsb
xor
adc
aad
test
das
xchg
mov
enter
aaa
test
movsl
fs
sti
test
out
pop
mov
call
and
les
add
decl
xor
jnp
and
sub
dec
shrl
sbb
in
addr16
ljmp
pop
cmp
mov
in
xor
xor
add
mov
sub
xchg
lcall
fcoml
or
sbbb
or
into
cmpsb
add
out
aas
movsl
enter
adc
jno
out
or
lock
xchg
leave
mov
cmp
das
sbb
add
sar
das
sar
lret
jl
cmp
lcall
in
outsl
cli
jg
xor
jle
or
js
dec
mov
inc
out
dec
dec
std
inc
inc
sub
pop
fstl
xchg
int
inc
dec
popa
idivb
jmp
movsl
push
shll
out
aam
mov
cmp
and
pop
repz
jl
pushl
add
addr16
jbe
gs
pop
inc
fnstcw
out
add
incl
xchg
jp
out
jp
pop
add
test
test
push
add
fildll
sbb
popf
xor
andb
mov
sbbl
pushl
cwtl
pop
adc
mov
movsl
xor
stc
mov
data16
xor
sar
call
add
and
inc
and
sub
xor
lods
shll
cld
xlat
or
decl
insb
movsb
rclb
jno
and
push
cmp
out
jmp
ds
adc
xbegin
ljmp
cvtps2pd
loopne
mov
or
ret
outsb
js
cmc
aaa
xchg
add
ljmp
test
js
mov
adcl
xchg
xchg
flds
js
insb
cld
out
jnp
jbe
out
ds
call
jge
imul
fadd
in
mov
sbb
call
and
out
out
push
pop
int3
mov
fs
punpckhdq
mov
jmp
out
fwait
push
in
jl
push
xlat
cmp
jo
dec
mov
add
jg
fnstcw
mov
add
and
inc
imul
mov
xchg
pop
popf
push
rcll
cmp
xchg
in
mov
fs
rorb
loop
aad
shrb
cli
adc
ljmp
pop
sbb
push
loopne
pop
push
inc
shlb
or
mov
xchg
call
lock
aam
jecxz
cmpsb
icebp
lahf
dec
sub
fsubrp
dec
ljmp
insb
std
insl
stos
call
cli
rcrl
stos
adc
adc
push
in
inc
ljmp
xchg
lds
ficoms
sub
gs
adc
mov
pop
dec
push
icebp
decl
outsl
push
xchg
lds
aad
jmp
xor
lcall
add
mov
add
mul
lods
sbb
dec
inc
lret
jge
inc
es
filds
push
or
inc
les
and
rorl
pop
xor
adc
in
jne
sub
arpl
mov
inc
fcomi
inc
scas
fptan
dec
inc
fnstenv
mov
push
test
popf
loopne
enter
ljmp
mov
push
dec
addr16
decl
bswap
bound
es
jecxz
fadds
aam
filds
xchg
out
call
pop
or
scas
stc
mov
dec
out
notl
jbe
mov
scas
outsb
mov
roll
mov
aam
jb
imul
mov
in
adc
ds
cs
mov
sarb
push
jnp
sbb
fsubrl
push
decl
jo
sahf
movsl
cmp
push
into
mov
xchg
mov
pop
clc
dec
ss
mov
stos
sub
aaa
in
call
inc
cmp
loopne
dec
ja
mov
leave
call
in
popl
popa
ljmp
int3
sub
dec
mov
out
loop
insb
stos
sbb
and
xor
xchg
mov
mov
jno
orl
or
lea
fisubrl
mov
rorb
or
imul
inc
mov
pop
imul
jbe
sub
or
scas
outsl
cli
incl
pop
xor
scas
or
fmuls
jo
imul
pushl
or
mov
or
push
push
sub
aaa
jge
pop
arpl
lock
cmp
inc
adc
jg
mov
mov
cmp
jecxz
add
icebp
sub
sti
daa
push
sahf
jo
add
xchg
and
popf
jp
incl
imul
jnp
and
subb
addr16
sbb
aaa
adc
mov
call
ret
aad
push
out
jge
sbb
cmp
push
mov
sar
ljmp
sahf
and
pop
jae
add
mov
ljmp
cmp
loope
xor
cld
xor
or
dec
incl
incb
adc
inc
jl
mov
xchg
lcall
mov
adc
in
xor
dec
mov
divl
mov
loop
rolb
stos
adc
push
xchg
add
dec
lds
adc
hlt
add
pop
aaa
inc
lcall
lods
and
push
ss
inc
fdivrl
daa
lock
das
js
pop
sub
inc
xchg
jbe
ljmp
jno
sub
dec
js
lods
mov
sbb
pushf
loope
fisubrl
or
pushf
jns
aad
inc
cmp
pop
jne
sub
rcll
enter
lods
pop
pushf
roll
nop
ds
adc
gs
jmp
iret
mov
cmp
sub
xor
je
push
and
xchg
mov
aas
sbb
jae
adc
add
or
pop
adc
push
xchg
enter
jb
jb
mov
into
out
clc
stc
jle
xchg
dec
cmp
lds
lock
sbb
das
push
call
push
dec
repz
sbb
enter
adc
pop
aaa
out
insl
xchg
pop
jno
xor
loopne
popf
sti
clc
call
cmp
sbb
sub
shlb
stos
std
jb
notl
hlt
ror
aaa
or
jge
incl
mov
fwait
out
pop
rcrl
pushf
and
jp
adc
call
cmpb
cwtl
bound
stc
loope
inc
out
gs
dec
push
cltd
call
std
ljmp
nop
out
rcll
or
clc
outsb
cwtl
mov
mov
scas
adc
xor
lcall
in
jp
subb
rorb
outsb
jo
stc
jge
leave
mov
cmpsb
loop
jno
mov
aad
decl
cwtl
dec
push
and
data16
scas
pop
mov
pop
sbb
or
ret
hlt
repz
lcall
mov
or
xchg
je
xchg
imul
test
xchg
inc
mov
das
add
sbb
and
fimuls
mov
out
cli
pushl
fs
jbe
mov
sbb
arpl
in
xchg
cmpsb
push
xchg
sbb
lock
mov
mov
decl
jle
sbb
mov
mov
mov
je
mov
xchg
test
fcoml
lcall
pop
cmp
jmp
sbb
cmp
cs
movsb
xchg
cli
scas
aaa
cld
ljmp
add
lods
xor
mov
push
mov
call
adc
sbb
pop
add
pusha
mov
inc
movsb
mov
ds
icebp
sbb
pushl
or
sub
xor
js
mov
dec
add
xchg
test
and
call
mov
hlt
fwait
inc
jle
inc
mov
dec
in
xorl
sub
aaa
aas
add
ror
or
ljmp
popf
bound
add
mul
imul
xchg
push
gs
test
push
mov
cltd
push
and
inc
inc
jbe
in
cmp
jmp
dec
dec
sbb
lds
inc
in
fmuls
sti
mov
adc
fldcw
fildl
pop
add
mov
cli
inc
lcall
lods
popf
mov
imul
sbb
mov
jnp
pushl
xlat
test
stc
out
mov
jne
lea
scas
dec
xchg
mov
mov
add
and
add
aas
push
jb
pushf
or
mov
mov
pop
out
test
sbb
mov
pop
push
clc
lcall
mov
pop
jle
add
cmpsb
pop
clc
and
or
xchg
rcrb
daa
inc
loope
push
mov
dec
cmpsb
and
add
xlat
mov
cmpl
decl
lcall
rolb
pop
lret
adc
jg
nop
sbb
pop
jmp
cltd
cli
iret
adc
sub
ja
inc
lcall
ss
ljmp
js
loope
mov
call
dec
lods
clc
lcall
das
sarl
xchg
add
xchg
lahf
jae
popf
iret
fdivl
incl
inc
js
dec
xchg
jge
sbb
pop
imul
into
jl
enter
call
dec
mov
mov
pop
popf
push
les
out
add
and
push
aad
dec
cmpsl
sahf
push
repnz
lcall
mov
arpl
push
mov
cmp
testl
ljmp
icebp
mov
sub
inc
sub
inc
xor
shlb
int3
sahf
cld
mov
cmp
test
lcall
cmp
sub
xor
sbb
mov
push
notl
mov
nop
iret
imul
cmp
pushl
fsubrs
and
rcrb
out
in
mov
mov
sub
loop
push
ljmp
incl
mov
lahf
aaa
adc
inc
data16
xchg
cmp
stos
mov
mov
lcall
repnz
push
faddl
adc
imul
arpl
fstl
pop
aam
or
xchg
xorl
fcomps
dec
outsb
add
fmull
and
clc
outsl
js
and
sti
cmpsb
pusha
fldcw
lcall
and
adc
cld
inc
or
filds
test
mov
or
cmp
mov
jns
pushl
xchg
xchg
pop
mov
cmp
inc
adc
dec
jl
in
dec
xchg
sbb
jmp
mov
repnz
inc
jbe
xchg
or
cmp
and
hlt
ljmp
scas
enter
std
dec
adc
rol
inc
into
add
imul
xchg
sbb
ljmp
ja
mov
cmp
fstl
lcall
sub
mov
lea
ret
and
scas
fiadds
pushf
mov
inc
enter
dec
stos
idiv
mov
pusha
divb
ljmp
mov
push
push
inc
out
cwtl
jno
mov
lods
das
jmp
sbb
ss
decl
rcll
adc
mov
mov
jnp
mov
mov
ljmp
inc
loop
and
jns
push
rorl
mov
cld
out
loopne
cmp
pop
clc
dec
jmp
ljmp
les
cltd
cld
pop
xor
push
cmp
mov
mov
mov
jp
nop
jg
cmpsb
cmp
pushl
push
jmp
mov
imul
pushf
decl
std
test
push
jbe
mov
aas
roll
pop
scas
xor
ljmp
cmp
ret
mov
loopne
lahf
mov
pop
std
push
jns
lods
or
shlb
or
hlt
sub
or
fimuls
test
adc
inc
test
ljmp
bound
cmp
fwait
mov
mov
jno
sub
add
sbb
mov
mov
sarl
ljmp
inc
add
scas
stos
rcl
push
and
pop
movsl
out
inc
sub
int
cs
jecxz
shl
or
lret
stos
out
mov
dec
or
and
mov
cmp
lods
insb
lret
pop
scas
cmp
cmp
incl
cmc
cmc
pop
pop
mov
stos
cmpsb
or
out
inc
vmovupd
cmp
pushf
ljmp
mov
xchg
push
test
mov
and
mov
call
scas
stos
jns
andb
jmp
lret
rcll
cmp
or
in
js
sub
int
test
les
push
push
sub
jg
cmc
add
je
int3
lahf
mov
shr
push
jp
mov
cld
mov
notb
xchg
repz
mov
inc
aad
fstenv
xchg
xchg
or
fisubl
mov
cmp
cwtl
sbb
adc
jg
or
rol
or
gs
mov
pusha
pop
aas
inc
xor
stos
push
test
call
adc
xchg
and
int
mov
das
sbb
std
fwait
shrl
xchg
ss
inc
out
lahf
divl
xchg
addr16
mov
xor
pop
pop
sub
mov
in
sub
imul
ret
cltd
sub
sbbl
outsb
adc
call
and
rcll
jae
or
test
mov
dec
dec
outsl
push
outsl
jle
movb
dec
mov
lcall
rolb
ss
push
stos
lret
repz
sbb
inc
test
jmp
jb
out
lock
pushl
ljmp
icebp
add
into
sub
adc
jmp
mov
fwait
xchg
mov
push
cmp
mov
jge
or
mov
int3
pop
out
inc
add
cmp
in
sub
jmp
or
sbb
clc
jmp
addr16
movsb
jle
out
jmp
jbe
rorb
addr16
adc
jmp
or
dec
add
inc
mov
cld
mov
xchg
dec
scas
cmp
aas
jo
mov
dec
add
push
cmp
sub
imulb
inc
in
dec
pop
test
cli
mov
cmp
ljmp
add
cmp
mov
mov
in
mov
xchg
push
loope
decl
pop
lea
iret
push
imul
loop
arpl
nop
xchg
xchg
cmp
loope
inc
sbb
cmp
xor
pop
loope
insl
mov
or
lods
mov
jae
mov
push
out
mov
jmp
shl
ja
add
jbe
xor
sub
adc
jge
push
or
inc
and
inc
cmpsl
xchg
mov
leave
push
mov
add
call
fdiv
loope
pushl
dec
fisttps
lret
and
nop
pop
add
and
call
xor
jo
xchg
aas
sbb
xchg
push
xchg
ret
or
xchg
fisubs
mov
xchg
call
xchg
and
push
incb
mov
rcl
rcrl
dec
insb
sti
or
push
lea
jmp
in
mov
cmp
cmp
mov
pop
int
rcl
mov
pop
xor
add
call
sub
or
stc
cmp
xor
pusha
inc
movsl
xor
jg
movsl
scas
push
aas
mov
jmp
insb
mov
pop
fistl
mov
outsl
pushl
mov
pushl
mov
mov
dec
mulps
pusha
lret
mov
mov
roll
xor
ljmp
sbb
push
push
adc
dec
mov
hlt
and
adc
incl
sub
fs
mov
pop
fldl
cld
xchg
sbb
inc
negl
or
dec
mov
push
mov
push
rcll
xorb
ret
mov
lcall
sub
sub
test
sbb
cltd
andl
sti
andl
push
dec
or
inc
add
add
mov
pusha
mov
jb
xchg
aaa
xor
cmpsl
cltd
ljmp
sbb
xor
jae
flds
cmc
dec
pop
rcrb
les
dec
das
and
cld
mov
pushl
shlb
fisubrs
mov
in
sbb
xor
adc
push
clc
mov
outsl
lods
xchg
mov
icebp
inc
int
xchg
mov
and
in
xchg
pushf
outsl
ljmp
rcll
cmpsl
push
leave
idivb
mov
outsb
lods
push
in
push
cmpb
xchg
scas
insb
addr16
jmp
xor
imul
mov
pop
pop
bound
add
mov
aam
mov
jg
jmp
outsb
mov
xchg
pop
in
mov
cmp
cld
inc
xlat
xlat
pusha
xchg
decl
scas
jle
imul
shl
inc
cwtl
popa
push
in
test
adc
mov
incl
lods
js
or
movsl
out
outsb
cmp
notb
or
call
cld
stos
sbb
std
imul
out
into
cmp
cs
mov
jb
mov
inc
cmpsb
xor
pushl
push
push
cmc
or
cmp
push
sbb
mov
pop
xchg
lcall
jp
and
pop
push
cmp
scas
xchg
adc
mov
sub
pop
jg
lcall
jmp
outsl
mov
push
sbb
lods
jg
imul
andl
pusha
ret
push
mov
xor
je
incl
jg
xchg
xchg
in
jb
dec
nop
mov
ja
or
lahf
dec
cmp
aam
xor
or
imul
mov
les
cmp
adc
inc
inc
inc
push
out
add
or
lahf
and
fcoml
test
out
jno
out
repnz
pop
jg
cmp
and
jmp
cs
dec
iret
pop
test
inc
out
imul
fnstsw
cmc
sub
sub
add
decl
int3
cmp
es
call
movsl
mov
jae
lock
mov
cmpsb
ljmp
adc
bnd
fisttpl
xor
sbb
cli
ja
xchg
fcmovb
outsl
lods
stos
sbb
pop
add
incl
nop
xor
sbb
mov
repz
jp
scas
mov
add
popf
faddl
rclb
lock
in
hlt
lret
xor
shlb
mov
aaa
mov
mov
cld
jp
clc
xchg
cmp
lret
pop
loopne
adc
mov
iret
lret
ret
iret
cmp
adc
push
sub
or
dec
mov
mov
pushl
ljmp
inc
mov
fwait
cmpsb
enter
jb
mov
pcmpgtb
adc
jmp
arpl
jno
adc
das
add
adc
incl
cld
and
ss
in
push
jno
push
jae
out
shl
cmp
ljmp
or
dec
ja
sub
cwtl
lret
push
pop
adc
jle
fwait
xchg
fstp
ret
jb
mov
push
jo
jne
dec
mov
stc
pop
mov
insl
push
incb
lahf
rorb
test
xchg
stos
cmp
sbb
cwtl
je
outsl
les
ror
stos
jle
fmull
inc
iret
cmpsl
cmp
lret
ret
fwait
push
mov
test
scas
mov
les
ret
ja
and
jmp
add
mov
mov
inc
push
ljmp
add
and
imul
cmp
and
cmp
pop
divl
std
lcall
std
lahf
cmpsl
fldenv
lret
pop
aaa
stc
daa
xor
pushl
cld
call
sbb
cli
adc
or
jle
pop
cmp
mov
push
jle
or
ljmp
cli
sbb
lahf
jne
lods
inc
pusha
pop
jnp
ja
inc
in
ficompl
jbe
loope
ret
jmp
xchg
out
add
cs
movsb
out
incb
sahf
nop
lods
xor
addr16
jmp
or
hlt
cmp
js
icebp
mov
jo
je
call
mov
and
loop
jo
outsb
xorl
mov
sub
stos
lods
jmp
jge
ret
or
xchg
daa
push
cld
jae
cmp
xor
mov
adc
ljmp
push
roll
and
lcall
dec
cli
sbb
decl
dec
pop
pop
fwait
xor
sbb
fmull
and
mov
shll
das
clc
incl
xchg
lods
mov
fildll
call
mov
push
lcall
and
popf
sbb
insb
cwtl
test
clc
lret
lret
test
add
inc
ja
shrb
test
lret
dec
loopne
call
out
pop
int3
pusha
pop
rcr
iret
mov
in
mov
stc
push
cmp
lret
repz
xor
and
xchg
push
cmpsb
push
cmp
sti
ss
cmpsb
pushl
movsb
adc
or
cmp
mov
xorl
aam
jp
pushl
jbe
int3
cmp
inc
les
cmc
inc
not
inc
adc
and
fwait
pop
push
adc
cld
pushl
mov
xchg
push
cltd
cmp
cltd
cmp
pushl
pop
xchg
bound
mov
cwtl
data16
dec
enter
or
lods
pop
dec
shll
mov
out
jnp
jge
stos
add
push
aaa
inc
push
push
xlat
lods
das
leave
mov
incl
xor
popf
push
jo
pop
sarb
in
lock
ljmp
cmpsb
lret
mov
mov
and
add
xchg
mov
decl
ficomps
mov
xlat
imul
test
sub
pop
cmp
adc
scas
pop
xchg
jmp
lods
adc
pop
mov
pop
sub
sar
test
pop
insb
sahf
mov
mov
jmp
add
insl
mov
leave
dec
test
ljmp
loop
xchg
imul
mov
and
add
fstpt
fistl
dec
in
call
adc
out
rcrb
cli
pop
in
xor
pop
push
arpl
call
sub
inc
cld
lcall
ret
dec
sarl
shll
xchg
test
incl
int
sbb
push
adc
xchg
loopne
and
rcl
int
fsub
dec
jmp
decl
pop
scas
mov
or
fs
rcl
add
mov
jo
adc
incl
cld
inc
pop
fwait
jne
lret
rolb
mov
xor
jl
in
ljmp
push
push
cmp
scas
cld
sub
cltd
test
jecxz
stos
xlat
call
cwtl
push
cmpsb
jbe
jecxz
push
and
pop
xor
xor
sbb
and
mov
rcl
enter
test
dec
push
fdivr
imul
filds
inc
jg
cmc
rolb
out
xor
gs
cs
xchg
and
nop
fcomip
sub
pop
add
popa
lahf
mov
sti
pop
shll
or
insb
clc
or
inc
enter
leave
sub
ja
decl
psadbw
mov
bound
adc
loop
rcr
pushl
popf
aaa
pusha
push
sub
fwait
movsl
vpsrad
subl
mov
decl
sbb
icebp
daa
lahf
jle
pop
pop
jmp
subb
jmp
clc
lcall
adc
lock
lock
repz
outsl
push
and
ljmp
lods
jnp
fxch
jns
popf
cmp
adc
mov
or
xchg
dec
filds
sub
les
dec
jecxz
fwait
stos
jns
xor
mov
jne
cmp
ljmp
or
adc
xchg
nop
mov
out
pop
out
test
js
lahf
pop
addr16
hlt
movsl
jb
sub
pop
test
call
mov
pop
lock
add
aas
gs
pop
nopl
mov
into
push
gs
std
ljmp
pop
pop
mov
lahf
in
jo
or
xor
mov
mov
pop
or
sub
xor
push
jmp
iret
les
cli
aam
sbb
cmp
jmp
lret
pop
scas
dec
xchg
cmpsb
mov
loope
fs
popf
sarl
push
sbbb
or
inc
ljmp
push
insb
pop
cwtl
jbe
mov
pushf
jo
add
jmp
xor
dec
jle
pushf
aas
pop
jb
xchg
cmpsb
insb
inc
pop
fnsave
call
loop
inc
mov
sbb
dec
push
test
addr16
incl
fisubl
and
cmpsb
cs
adc
mov
cwtl
and
scas
cmp
pusha
pop
ds
bound
cld
add
push
movsb
push
div
cmc
sub
js
andl
dec
shll
decl
xchg
out
repz
popf
and
outsl
add
jecxz
mov
mov
call
imul
sbb
pop
aad
bound
cmp
ja
push
mov
xor
mov
push
and
add
out
lcall
inc
loop
ror
outsl
cld
mov
jg
pop
jnp
jl
out
xchg
cmp
lods
mov
ljmp
ret
movsb
btr
insb
shr
add
sbb
aam
ds
out
out
push
pushl
mov
pop
test
and
push
dec
mov
call
mov
popa
sbb
ljmp
ret
aad
sub
lds
pushf
jmp
insb
iret
dec
jg
xchg
mov
lds
pop
lea
aad
add
push
jl
repz
inc
xchg
push
shlb
aaa
cld
ljmp
icebp
push
xor
stc
aad
lea
loop
je
xchg
jmp
add
test
mov
jmp
jne
inc
mov
loopne
and
dec
sbb
dec
cmp
pop
push
add
and
adc
mov
scas
icebp
mov
cmp
sub
ret
pop
cmc
call
lods
jge
mov
stc
fucomi
jmp
ljmp
xlat
fldcw
loope
mov
xchg
mov
xchg
push
xchg
incl
dec
jae
leave
imul
xchg
dec
mov
push
mov
rcr
dec
les
sti
lcall
jecxz
or
sti
testb
push
cld
pushl
leave
enter
ja
jp
pushf
inc
stos
push
out
subl
cmpsb
or
sub
aad
adcb
jl
imul
cmp
adc
adcb
inc
inc
arpl
pop
js
lret
sbb
mov
jecxz
sbb
jo
jmp
sub
imul
jecxz
jns
sub
fs
mov
test
dec
mov
iret
subb
cwtl
mov
jmp
and
mov
and
movsl
loopne
dec
sbb
negl
xchg
clc
push
in
int
clc
mov
sahf
xor
outsb
cmpb
pop
inc
pushl
push
mov
jmp
fs
lahf
adc
sub
fimull
mov
loop
sub
and
clc
in
push
and
xchg
jg
pushl
cs
mov
or
nop
es
nop
fisubl
imul
lock
ljmp
push
sahf
xchg
hlt
cmp
pop
pusha
je
je
inc
lcall
lds
lods
out
pop
call
sbb
sbb
in
aas
add
xchg
out
jae
or
jbe
mov
push
mov
stos
outsl
outsb
jnp
cmp
adc
adcl
lcall
aaa
sbbl
call
iret
aad
jmp
js
rclb
dec
xchg
push
cli
ds
or
sbb
or
les
aas
or
dec
cmp
sbb
aad
clc
push
add
add
push
or
add
or
pop
xor
out
xchg
jo
ja
push
push
test
jg
jg
xchg
sbb
das
out
lret
xchg
xor
ljmp
adc
cltd
sub
cld
fcomip
jmp
sub
xorb
scas
loopne
jne
decl
out
nop
loopne
mov
and
or
dec
je
jg
fs
jb
lret
jo
gs
push
cmp
jns
xor
stc
fisttpll
es
enter
xchg
divb
push
test
pop
aas
test
imull
cwtl
arpl
decl
cmpsl
cli
mov
shlb
loopne
xchg
sahf
add
jle
scas
frstor
call
jg
lea
and
jbe
adc
jl
and
push
clc
bnd
cmp
decl
negb
sti
stc
ret
ret
out
sub
dec
and
clc
daa
lcall
cs
mov
cs
xor
mov
xchg
jno
or
fwait
pop
aas
add
pop
pop
inc
nop
jae
imul
xchg
int3
mov
inc
jmp
enter
fcoml
mov
jb
sti
fimull
inc
xchg
in
mov
push
push
sti
or
mov
mov
incl
aaa
push
out
adc
test
adc
xchg
pushf
dec
test
popf
xor
inc
cmpb
call
je
mov
sbb
lock
push
cmp
hlt
out
pop
fnstcw
aas
dec
imul
mov
insl
mov
xchg
mov
push
nop/reserved
sti
orb
jp
negb
lcall
mov
fwait
mov
ret
mov
test
xchg
stc
adc
ljmp
dec
rcrb
clc
rcll
int3
imul
jo
arpl
cld
and
pop
cmc
fs
call
jmp
loopne
jmp
sub
xchg
xor
int3
xor
test
sbbl
adc
decl
xchg
xchg
in
ficoml
fwait
pop
cmp
and
jecxz
dec
mul
pop
jno
dec
das
sar
jg
cmpsb
hlt
jmp
inc
scas
fadds
pop
out
jbe
add
jecxz
add
cmp
pop
mov
sbb
in
icebp
inc
mov
popf
roll
pop
fnstcw
sub
dec
outsl
stos
movsb
mov
xchg
adc
push
je
pop
iret
fwait
mov
pop
decl
jmpw
push
mov
sti
push
mov
repz
xor
xor
xor
fdivs
lds
jns
ljmp
cmpsb
pop
mov
cmpsb
sbb
stos
push
add
add
cs
movsl
jb
push
jmp
cwtl
add
outsl
rclb
pushl
pop
sbb
es
inc
scas
sbb
mov
add
repnz
sub
mov
mov
fcomip
inc
fsubl
enter
clc
xchg
mov
ss
out
js
lcall
test
sub
cmp
into
sarl
push
int
call
cmp
outsl
adc
inc
aas
jns
addr16
filds
testl
insw
insb
in
xor
stc
inc
pop
std
decl
dec
and
xchg
stos
inc
lret
or
jnp
ficoml
icebp
sbb
cmp
lcall
gs
push
pop
das
gs
daa
aam
sar
je
nop
xchg
fwait
rcrl
sbb
cmpsl
jb
fadds
stc
mov
stc
fsubrs
sub
mulb
dec
mov
pop
pusha
fisttpll
jns
jmp
inc
push
movsl
dec
repnz
in
pop
pop
movsl
xorb
adc
je
pushl
mov
orl
lods
in
xchg
leave
or
cmc
repz
shrb
jg
mov
adc
mov
cmp
xchg
stos
mov
xchg
pop
mov
decl
mov
sub
pop
frstor
addb
out
out
push
xchg
sbb
das
xchg
pop
scas
add
sub
add
mov
addr16
out
xchg
adc
inc
sarb
jle
sar
call
xor
adc
in
cmp
daa
cltd
arpl
loopne
fsts
std
add
pushl
js
push
sbb
inc
std
mov
sub
cs
xor
pop
dec
decl
push
cld
in
mov
arpl
aam
nop
gs
xchg
fidivl
daa
cmp
ljmp
rcrb
mov
jae
movb
jne
push
xor
out
test
sub
mov
mov
int3
in
leave
and
mov
xor
js
jl
mov
cli
lret
pop
and
fwait
testl
xchg
pop
lock
sub
fwait
mov
and
cmpsb
lods
jne
lret
mov
cmpsb
data16
or
pushl
adcl
mov
dec
xchg
jnp
arpl
mov
ss
fildll
jmp
xor
mov
arpl
repz
movsl
mov
pop
or
in
jnp
xchg
stc
addl
repnz
pop
push
mov
inc
inc
xchg
dec
push
jmp
jbe
or
cmp
jmp
test
inc
call
out
push
inc
bt
pop
incl
aas
or
jne
add
sbb
lods
jne
rorb
mov
jmp
fisttpll
xor
cmc
dec
call
pop
lret
fisubrl
sbb
mov
incl
pusha
nop
fimull
pop
inc
xchg
adcb
fcomps
pop
adc
lods
aad
mov
sahf
pop
cmp
test
mov
jnp
sbb
sbb
divb
loop
popf
ret
add
fists
adc
repnz
push
nop
sub
shrb
shlb
aas
lret
pop
sub
call
cli
mov
dec
test
inc
out
das
int3
fisttpll
xchg
not
mov
push
ljmp
adc
push
sarl
dec
and
push
fwait
out
lcall
call
or
fwait
mov
scas
out
mov
dec
ljmp
sahf
inc
jecxz
dec
push
and
fsubs
mov
enter
xor
and
pop
in
push
cmpsb
add
push
popf
mov
pop
jnp
nop
int
sub
jl
fs
scas
outsl
and
popa
cmp
ljmp
rorl
mov
fnstsw
jnp
inc
js
and
push
ljmp
push
das
mov
dec
rcrb
pop
mov
addr16
hlt
int3
mov
aad
ljmp
lret
xlat
imul
xchg
das
mov
lods
cmp
push
sarb
fmuls
lcall
jae
in
inc
sahf
xchg
dec
push
jb
cmpsl
ljmp
inc
rcrl
insb
sub
in
mov
outsb
outsl
push
out
bound
and
jmp
ljmp
pop
stos
jns
or
scas
aam
dec
jne
mov
cmp
fwait
stc
scas
adc
push
sub
insb
mov
or
mov
negl
mov
je
cmp
xor
loopne
dec
mov
fcos
decl
and
aad
clc
and
push
mov
jle
pop
addb
int
out
enter
pop
or
adc
mov
repz
cmpsl
cs
ljmp
imul
dec
ja
ljmp
jnp
pusha
push
les
incl
das
test
jmp
pushf
mov
sub
mov
daa
cli
js
push
ljmp
push
adc
enter
jbe
add
push
shlb
or
push
lcall
jns
arpl
xor
push
xchg
jb
mov
and
test
dec
decl
sub
push
jge
std
testl
mov
in
jmp
xchg
lods
out
jle
xor
sub
cmp
std
jmp
sarl
pushl
sub
xchg
call
dec
cmp
mov
push
out
sbb
cmp
call
fsubp
cltd
push
jmp
mov
test
mov
push
jno
mov
mov
std
incl
adc
mov
pushf
call
inc
mov
pushl
std
ret
add
pop
push
jno
jle
pop
xlat
insb
mov
mov
or
cltd
mov
repnz
sub
dec
cmpsl
push
sub
cmc
mov
mov
xchg
nop
lret
xchg
hlt
mov
xchg
mov
cltd
push
pop
xchg
aaa
xor
jnp
test
js
ljmp
rcll
cwtl
and
shr
scas
cmp
xor
adc
pop
callw
push
sub
stos
xlat
subl
cli
cmp
incl
or
lea
imul
in
mov
dec
nop
scas
add
fcomip
push
pop
cmp
mov
lea
out
fildl
inc
mov
fwait
cmp
xchg
jb
mov
and
add
push
push
sub
mov
push
adc
adc
jae
es
mov
sub
out
add
outsl
pop
insl
pop
pop
add
and
loope
mov
or
fdivrs
jl
mov
aad
fwait
lret
test
popf
dec
cli
in
add
xchg
sbb
jbe
decl
cmp
pushf
add
push
sbb
bound
ljmp
insl
sahf
lcall
lcall
imul
pusha
jo
in
and
aam
movsl
clc
ljmp
incl
and
mov
rcr
je
push
sarb
addr16
daa
add
and
xchg
push
incl
jb
xor
push
or
in
jl
xchg
stos
mov
aaa
pop
icebp
lcall
nop
cwtl
push
inc
lea
loop
je
xchg
insl
dec
stc
daa
dec
push
xchg
popa
call
int
inc
sub
sbb
cmp
mov
xor
xchg
aaa
leave
std
adc
xlat
enter
shl
adc
lock
lcall
xchg
jns
cltd
in
sbb
or
cmpsl
pusha
outsl
popf
por
call
sub
cmp
sub
imul
decl
jbe
js
mov
xor
cltd
dec
jmp
or
decl
sbb
jecxz
adc
sbb
into
out
pop
es
mov
pop
jg
rcl
mov
movsl
jge
loopne
sub
push
sti
test
in
dec
ja
ljmp
loop
fdivrl
sbb
cmc
inc
out
or
fsubl
popa
imul
int3
and
pop
std
fs
out
hlt
repnz
cwtl
pop
pop
push
sub
mov
pushl
pushl
or
push
pop
push
repnz
fdivr
mov
lds
int3
outsb
stos
loopne
rcrb
decl
mov
jg
icebp
repnz
outsb
rorb
pop
hlt
mov
mov
test
pushf
sub
mov
adc
xchg
mov
jbe
xor
mov
and
cmpsb
lods
into
mov
cs
cs
cmpsb
nop
fwait
popa
js
je
pushl
fidivl
add
out
cmp
sti
ljmp
lret
loope
out
int
dec
lods
add
or
call
sub
inc
bound
xchg
mov
cmp
incl
stc
or
add
xchg
or
call
pop
mov
dec
lods
jp
ds
jmp
jno
mov
xchg
iret
mov
jmp
lcall
orb
mov
xchg
test
cmp
and
mov
push
mov
test
sub
sub
cs
sarb
xor
cmp
add
movsl
fcoms
mov
dec
movsb
hlt
cmp
dec
cmp
cmp
mov
pop
and
rclb
outsb
inc
sbb
nop
cmpsb
iret
or
inc
push
sub
cmpsl
data16
ljmp
cs
xchg
xor
cs
sub
aad
jmp
xor
fs
pop
inc
pushl
xor
insl
inc
mov
xor
cs
iret
rcll
insl
and
mov
ja
adcl
mov
sub
mov
gs
xchg
loopne
ljmp
push
fcompl
mov
xlat
xor
push
xchg
and
std
jmp
into
xor
push
add
insb
pop
ret
jne
jnp
out
cmp
or
push
bound
mov
nop
mov
jno
pop
push
dec
test
subl
mov
pushl
mov
aaa
sbb
jb
mov
mov
imul
mov
cmpsl
incl
decl
loopne
xchg
xor
mov
pop
aaa
rcr
aad
fcomp
cmp
lcall
adc
pushf
add
daa
inc
cmc
mov
jb
dec
push
fistpll
mov
das
scas
sub
jnp
xor
fsubrl
and
jns
xchg
das
sub
pop
and
mov
adc
jg
and
add
adc
or
and
cmp
pop
adc
lods
xlat
sub
and
popf
pop
xor
movsb
cmpsb
lcall
call
push
sti
jo
shrb
ds
pop
or
fwait
push
imul
dec
mul
dec
lcall
adc
mov
dec
xchg
shll
std
lods
clc
jae
das
mov
loope
inc
std
incl
fsubl
xor
stc
mov
and
dec
cwtl
jg
xlat
loop
mov
push
or
or
xor
sbb
mov
mov
pushf
and
nop
loopne
or
shrl
and
jecxz
call
movsb
mov
xchg
sub
cmp
and
dec
test
das
mov
icebp
or
out
shlb
and
xor
push
pop
addb
in
test
les
test
jmp
mov
add
adcb
xchg
loopne
aad
data16
in
out
mov
pop
fisttps
aas
jmp
loope
jle
fwait
mov
cmp
add
test
cmp
js
lcall
lcall
nop
popa
cs
call
in
xor
pop
push
sub
xchg
test
lock
lds
std
or
adc
lods
push
fisttps
sbb
imul
push
sbb
or
sub
xlat
push
cmp
push
imul
int
mov
or
addl
clc
ljmp
cs
jl
add
movsb
xor
mov
adc
incl
xor
ficoml
jmp
pop
adc
out
mov
cmp
mov
ljmp
add
sub
cmp
insl
pop
fldenv
or
dec
pop
pop
mov
incb
fnstenv
xorb
sub
or
dec
push
nop
hlt
cmp
inc
inc
add
cmp
push
jnp
stos
sub
push
jne
aad
jmp
jg
mov
push
mov
dec
cwtl
test
add
push
lds
dec
inc
out
clc
cmc
push
leave
adc
decl
jmp
xchg
cmp
fsts
pop
imul
popf
xchg
stos
test
movsb
mov
es
push
imul
or
push
jecxz
jo
cmpsl
pop
xchg
sbb
aam
in
jno
and
mov
jp
mov
sar
call
rcrb
scas
add
dec
enter
mov
sub
jg
mov
cs
aaa
cwtl
lea
or
imul
out
mov
rorb
aas
lahf
pusha
inc
or
xor
pop
cmp
lcall
fildll
sub
xchg
or
jb
jne
xorb
mov
fdivrl
sbb
sub
decl
or
cs
fadds
lcall
sub
lcall
daa
stos
insb
leave
sub
dec
aad
mov
in
cwtl
mov
decb
daa
push
shrl
lret
js
dec
pusha
dec
decl
lret
sub
into
adc
xchg
es
pop
clc
pop
pop
xchg
in
pushf
int
mov
pop
es
mov
sbb
outsl
pop
popa
iret
sub
jmp
push
jmp
addb
cmp
push
fs
cmp
jp
sbb
mov
sbb
adc
in
xchg
adc
sbb
sub
inc
push
or
addr16
inc
jecxz
stc
cltd
adc
pop
sar
mov
fimull
or
add
xor
mov
sbbb
sar
push
inc
mov
jl
mov
dec
outsl
pop
or
mov
pop
adcb
sarl
test
cmp
mov
jmp
ficoms
test
push
loop
int3
cmpsl
fld
inc
mov
pop
cs
out
or
fcomip
incl
lock
xor
or
mov
adc
iret
jecxz
ja
decl
jne
cmp
inc
out
push
repnz
mov
icebp
add
sarb
mov
pop
push
addb
pushl
mov
loope
imul
xchg
stc
test
mov
mov
xchg
jmp
cli
mov
loopne
push
imul
push
shrb
movsb
add
push
gs
add
scas
sbb
mov
jmp
sbbl
in
pop
sub
jecxz
icebp
fptan
mov
cmp
xor
out
adc
ret
decl
addl
push
cmc
lds
ljmp
mull
adc
sub
jmp
dec
imul
enter
lret
movsb
mov
jns
movsl
mov
fcoml
mov
mov
cmpsl
leave
decb
push
inc
in
jge
push
sbb
push
mov
cmp
jg
push
jle
dec
cltd
in
dec
add
xchg
cmp
push
popa
push
in
sbb
push
js
pop
sarb
call
push
pop
fisubl
ljmp
hlt
push
xchg
push
dec
jmp
stc
inc
fwait
mov
fmul
call
fxch
cld
stc
aaa
lcall
xchg
loop
mov
sti
mov
mov
cmp
pushl
jnp
stos
lods
cmpsl
jge
dec
loope
mov
pop
je
mov
setbe
bound
lcall
jbe
sbb
test
gs
insl
scas
sub
or
loop
mov
call
inc
cmpsl
push
sub
xchg
or
ficomps
mov
popa
std
mov
lret
xor
pushl
xchg
mov
cld
iret
cltd
sar
pop
sub
push
mov
jae
mov
std
cmp
lcall
jns
ss
lahf
jae
mov
add
lret
lods
dec
push
mov
jg
popa
inc
lods
mov
cld
pushl
xor
inc
pop
pop
insl
and
out
pop
test
or
jp
jmp
sbb
pop
cmp
xor
jecxz
mov
jecxz
daa
js
push
mov
push
sahf
in
fstps
cmp
and
test
aam
ss
sbb
sub
ret
dec
mov
mov
ljmp
in
add
mov
sti
push
leave
push
adc
fbld
sub
arpl
inc
arpl
cwtl
inc
inc
or
add
call
xorb
xchg
dec
lds
and
lea
jne
pop
jmp
mov
rcrl
pop
dec
jp,pn
gs
inc
cmp
xor
jnp
cli
call
xchg
sti
pop
shrb
pushf
push
dec
aas
cmp
add
sti
lods
pop
jmp
out
mov
or
or
cmp
sub
xchg
loop
mov
jns
outsl
xchg
lahf
pop
sub
jno
out
xor
stos
out
mov
xlat
and
mov
mov
add
mov
cmp
sub
jg
mov
inc
xor
mov
mov
cltd
pop
add
jmp
jb
sbb
lds
adc
fbstp
outsb
sbb
clc
sbb
clc
imul
xchg
cmp
decl
push
inc
out
arpl
out
dec
adcl
ljmp
in
or
dec
sbb
aas
and
mov
inc
xor
sbb
push
jmp
mov
sbb
xor
add
jno
jno
sahf
jmp
add
dec
lret
pop
andb
jg
or
jns
and
les
pop
inc
idivb
xor
mov
js
mov
ljmp
cwtl
lahf
xchg
or
jno
dec
sbb
aam
sub
mov
cmp
stc
arpl
sti
and
data16
imul
push
loopne
rorl
lcall
push
mov
aad
pop
sbb
xchg
sbb
or
sbbl
xchg
dec
push
leave
jmp
insl
push
dec
sbb
arpl
clc
in
and
insb
loope
push
icebp
jl
or
in
stc
clc
pop
decl
mov
insb
xchg
inc
xor
pop
add
shlb
in
and
mov
adc
sub
call
ret
out
mov
movsl
gs
xchg
lret
sbb
inc
jo
cwtl
xlat
mov
lcall
std
add
out
push
lret
sarb
popa
ds
nop
sub
mov
cmpsb
icebp
call
lods
cmp
xchg
xchg
pushl
xor
in
mov
sub
or
repz
xchg
jge
cmp
jmp
dec
add
xchg
mov
push
sub
mov
jge
mov
sbb
fwait
dec
lcall
or
xchg
aas
adc
int3
add
push
mov
mov
pop
inc
xchg
add
out
mov
es
decl
mull
push
inc
in
jge
daa
nop
fisttpll
pop
jl
filds
inc
mov
xor
jmp
icebp
movsb
iret
pop
out
movsb
or
cmp
push
inc
aad
std
jp
pop
and
inc
lock
push
mov
sub
je
ss
stos
jg
rol
fwait
inc
jg
fiaddl
inc
repz
outsb
mov
push
decl
mov
ljmp
in
pop
gs
cwtl
incl
mov
pop
or
sahf
mov
mov
pop
scas
xor
adc
lcall
fadd
inc
sub
pushf
pop
mov
ja
decl
popa
ljmp
pop
je
mov
jp
stc
inc
mov
icebp
pushl
cld
dec
adc
lods
sub
pop
push
scas
pop
insb
imul
ljmp
loopne
pop
stos
gs
repnz
xchg
jp
aaa
inc
loope
xchg
inc
jg
out
inc
cmpsl
mov
out
clc
mov
ret
ret
test
loope
aam
cli
cli
iret
mov
mov
lock
call
add
mov
jae
cmp
in
push
and
xor
decl
lret
shl
sbb
iret
push
clc
test
lcall
ljmp
xor
mov
pop
icebp
or
sbb
outsb
je
fs
and
orl
lcall
int3
inc
mov
test
mov
cwtl
pop
xor
add
movsb
test
mov
inc
leave
outsl
fisubl
cmpsl
inc
mov
mov
lret
xchg
cld
outsl
cmpsb
lods
inc
inc
xlat
int
rclb
cmp
fwait
incb
jle
dec
ret
into
xchg
mov
sub
mov
pushl
daa
inc
push
movb
pop
mov
pop
movsl
or
xor
sbb
jle
dec
xlat
add
add
inc
mov
push
fldlg2
test
lret
mov
in
leave
sub
adc
lret
sti
lock
inc
loopne
out
out
movsb
jo
mov
mov
pusha
or
cmp
xor
cwtl
inc
jne
pop
inc
lods
pushl
loopne
mov
repnz
and
ds
test
mov
xchg
in
call
mov
and
push
clc
pushl
cmpsl
lret
es
les
sub
or
pop
xor
push
call
dec
mov
sub
jl
and
or
clc
adc
lods
jbe
push
out
nop
mov
dec
sub
xor
push
mov
inc
clc
lock
cld
pusha
xchg
pop
xchg
and
cltd
scas
mov
jno
mov
push
push
shll
outsb
mov
lcall
xor
dec
xchg
sbb
pop
jmp
pop
or
in
sbb
jns
call
dec
mov
leave
in
push
clc
push
cltd
push
or
jp
push
mov
lods
push
out
insb
decl
lock
imul
mov
adc
lret
div
out
clc
mov
dec
mov
ret
iret
enter
add
bnd
push
or
xchg
int
in
adc
dec
jmp
jecxz
mov
jns
in
dec
es
incb
cli
movsb
loope
stos
imul
mov
movsl
push
jle
pusha
std
xor
shll
repnz
arpl
lcall
ds
cmpsb
dec
repz
insl
jb
xlat
shlb
add
xor
popa
jae
or
or
call
cmpsl
xlat
cmpsb
adc
xor
outsw
test
pop
xchg
outsl
ljmp
cwtl
fldcw
pop
hlt
setb
lret
fcomip
dec
sti
jp
je
sbb
inc
clc
xchg
push
and
mov
fidivl
pushf
notb
xchg
xor
jmp
mov
aas
addl
lds
ja
lcall
outsl
fcomip
incl
or
push
ret
mov
testl
mov
cmp
jne
addr16
xor
cmpsl
add
int3
mov
or
xchg
sahf
add
loopne
lcall
test
fldl
cmp
aam
lods
adc
pop
push
insb
pop
in
rorl
jmp
sub
sbb
bound
std
cmp
sbbl
fwait
incl
in
jmp
pushf
lods
and
xorb
push
xor
mov
cli
xchg
ja
in
and
jp
je
mov
jnp
jle
dec
leave
mov
call
jl
xchg
pop
call
jne
sbb
and
aad
insb
outsb
in
gs
xchg
fwait
test
adc
mov
fisubl
dec
and
aaa
std
add
mov
or
mov
fidivl
insb
add
jecxz
push
cmp
mov
jae
fadds
jmp
fcoml
fstpl
pop
mov
je
or
pop
sbb
scas
jbe
rcrl
in
dec
push
dec
fwait
jnp
js
loope
sub
adc
jg
fiaddl
cwtl
jo
sub
cmp
call
dec
subb
into
xchg
jbe
sub
call
sti
rcrl
ss
iret
inc
mov
std
sbb
loopne
push
pop
divb
and
mov
mov
call
movb
test
in
cmc
cmp
leave
xchg
pusha
sbb
mov
jb
add
enter
nop
lock
mov
and
int3
rcl
sub
ljmp
addb
int3
dec
fwait
xor
test
fidivs
push
sub
loop
sub
jg
mov
mov
and
jg
pushf
incb
sbb
push
rolb
fmuls
pop
pushl
std
jp
ja
scas
les
or
mov
stos
jp
nop
and
inc
add
jno
lods
rcll
rcl
lcall
push
imul
imul
stos
xchg
insl
xor
mov
mov
addb
fs
mov
stos
inc
stos
xor
out
and
push
xlat
adc
cmovg
js
jae
mov
jmp
inc
call
imul
in
mov
shlb
decl
jecxz
sbb
adc
mov
orb
inc
mov
pop
pop
aam
jg
ffree
and
mov
int3
cwtl
dec
jmp
push
repz
repnz
mov
or
ljmp
mov
leave
mov
clc
roll
xchg
xchg
mov
jmp
jbe
sub
je
fcmovb
and
dec
loop
gs
or
sbb
mov
xchg
cs
in
sar
mov
pop
mov
xchg
cmpb
lcall
dec
and
jl
jnp
sbb
loopne
andl
lcall
inc
mov
ljmp
fimull
jae
and
sub
hlt
mov
loop
imulb
incl
stc
or
sysexit
or
jns
mov
jae
mov
adc
push
enter
mov
cmp
movsb
leave
addr16
mov
sbb
mov
cltd
mov
jmp
adc
int
pop
jp
mov
jo
lret
cmp
push
fwait
adc
pop
adc
cmp
decl
xchg
popfw
gs
mov
movsl
jmp
mov
mov
lcall
ja
jge
ljmp
call
mov
imul
mov
xor
fstps
cmp
cmp
ljmp
dec
lds
sbb
in
cltd
jg
inc
cs
inc
adc
repnz
or
addb
push
stos
pop
mov
stc
inc
scas
outsl
shll
jl
push
cltd
fwait
loope
shll
mov
ret
out
mov
outsb
push
xchg
xchg
sbb
pop
lds
mov
in
loopne
dec
insl
jp
sbb
icebp
dec
mov
test
out
test
mov
add
jbe
lock
add
ss
push
repnz
jg
out
pusha
out
jno
cmp
mov
xchg
pop
test
jl
lret
decl
jmp
test
or
mov
idiv
mov
les
xor
shll
adc
popa
cmp
xchg
nop
decl
bound
rorl
pop
jge
mov
in
cs
cmp
cli
in
call
dec
mov
ja
js
push
fdivrs
jno
loopne
cmc
xor
inc
or
cmp
fldenv
adc
push
lods
or
inc
std
dec
add
mov
loop
mov
adc
sub
mov
sti
mov
dec
and
adc
cmp
inc
mov
cmp
dec
cli
mov
jecxz
loopne
push
adc
ss
or
jmp
lcall
mov
cld
movsl
jg
loop
subb
pop
idiv
mov
jmp
pop
pop
call
mov
dec
mov
xor
mov
xchg
fdivrp
call
dec
fldt
push
and
cltd
lea
xchg
jp
movb
jg
jecxz
not
sbb
or
ds
repnz
lock
test
mov
in
and
jmp
add
mov
add
mov
cmp
mov
inc
dec
hlt
push
ret
pusha
call
les
aad
loop
pop
mov
adc
xchg
testl
incl
jbe
fmul
cmpsb
inc
sbb
mov
fists
loopne
xor
mov
fcomip
lret
into
js
xor
lods
stos
pop
jo
rep
faddl
clc
decl
cmpsb
out
inc
ficomps
mov
add
cmpsb
cmp
scas
or
dec
or
or
pop
jnp
pop
mov
dec
mov
mov
shll
enter
add
inc
icebp
ljmp
clc
das
cli
rcll
fidivrs
jp
aas
cmp
push
outsb
xchg
scas
lds
jns
roll
test
jbe
adc
mov
push
in
lea
adcb
and
rol
sti
inc
data16
mov
and
ljmp
cmp
and
fnstcw
pop
in
mov
cmpsb
push
xchg
inc
pop
jmp
jae
mov
mov
mov
repz
in
pop
xlat
inc
pop
or
repz
pushl
and
jbe
lds
dec
shl
aad
adc
and
ljmp
jmp
pushf
gs
xchg
xor
arpl
pop
lahf
adc
xchg
ljmp
out
and
mov
das
fneni(8087
or
jmp
fcomip
dec
xor
lea
push
ret
scas
cmpsl
pop
push
cmp
and
cmc
push
les
pushl
dec
push
and
in
movsb
mov
test
sbbb
movsb
stc
jle
jg
jmp
jp
or
lret
bnd
lcall
push
nop
std
xchg
imul
stc
pushl
xor
xor
popa
ljmp
clc
lahf
and
fidivrs
mov
push
cltd
clc
lods
push
push
movsb
push
hlt
sahf
xchg
test
and
andl
xor
iret
inc
sahf
lcall
ljmp
das
and
pushf
fwait
adc
lahf
pusha
aad
or
adc
out
pop
lea
cmp
mov
or
xchg
out
xchg
fdiv
or
jo
sub
mov
call
jmp
negb
inc
or
test
aad
sbb
and
inc
pop
nop
mov
jne
jmp
dec
sti
out
mov
loope
pop
outsl
das
stc
push
cmc
inc
cmpb
arpl
vmwrite
outsb
sahf
loopne
in
cwtl
ds
mov
insb
and
pushl
push
aas
inc
lock
icebp
test
daa
cmpsb
inc
ja
sbb
sahf
jns
cmp
pushf
xor
jmp
je
hlt
lcall
inc
jno
cmp
push
jnp
adc
mov
in
or
pop
add
jmp
adc
sub
jg
dec
and
stos
pop
cmpsl
in
cmp
lcall
ror
push
mov
jp
mov
sbb
fcompl
inc
test
inc
pop
jmp
scas
clc
jmp
dec
xchg
mov
sbb
xchg
ret
and
and
dec
cmpsl
outsl
hlt
lcall
outsl
cmp
xor
movsb
push
inc
rcll
and
cltd
stos
sub
cmpsb
mov
xchg
loopne
add
cld
xor
mov
mov
xchg
incl
lahf
sbb
dec
xchg
inc
mov
push
cmp
pop
xchg
mov
mov
stos
cli
pop
out
cmc
decl
xchg
in
push
lahf
push
xchg
sarb
cmp
xchg
aaa
xor
stc
xchg
fbstp
and
jae
jmp
ja
jecxz
jg
mov
adc
test
inc
mov
push
jns
inc
mov
jg
sbb
leave
ljmp
nop
gs
in
inc
add
loopne
add
lea
lds
dec
icebp
rcrb
adc
out
lcall
mov
add
cmp
cld
ljmp
cmp
js
dec
cs
jmp
jg
int3
jnp
inc
mov
popf
cwtl
push
mov
xlat
mov
mov
dec
lds
sbb
push
test
pushf
clc
std
inc
arpl
icebp
fidivs
jmp
and
cli
inc
mov
cmpl
cmpsb
mov
dec
or
shlb
jmp
jmp
jg
inc
cs
mov
fists
arpl
xchg
test
push
xor
aaa
decl
sti
inc
push
out
cmp
and
and
or
pushf
xrelease
call
jb
fdivl
pop
outsb
mov
mov
cmp
jg
ljmp
xrelease
jno
sbb
add
sbb
jl
loopne
jge
shll
mov
loopne
std
dec
repz
adc
mov
jno
std
repnz
sub
decl
push
xorl
pusha
cmp
lea
adc
add
ljmp
call
dec
lds
jl
iret
or
pop
push
xor
and
mov
call
ret
mov
stc
sub
in
js
sahf
pop
jbe
lret
outsl
in
jo
icebp
aas
xlat
add
sarb
movsb
dec
and
xchg
cmpsl
mov
scas
cltd
adc
push
pushl
mov
dec
push
lret
aad
fisubrs
pop
mov
sarb
test
mov
leave
sbb
sub
cmp
jno
add
les
inc
jno
cmp
andl
ljmp
push
pop
jmp
adc
xor
push
mov
mov
mov
mov
or
mov
mov
xor
fstpt
cs
pop
incl
mov
mov
lahf
jmp
call
or
pop
dec
cmp
lea
mov
jmp
in
cli
and
add
push
repnz
jo,pt
mov
cmp
ret
std
mov
aas
and
sbb
mov
jae
in
mov
mov
jo
add
jmp
inc
jno
dec
or
cld
jne
cmpsb
int
jae
fidivs
pop
fbld
push
pop
inc
fsubrs
bound
cli
lods
sub
inc
inc
mov
out
xchg
sbb
js
and
mov
cld
push
int3
mov
repz
mov
xor
sbb
decl
shlb
dec
cld
mov
sbb
popa
call
cmp
dec
cmc
mov
mov
shl
shrl
fdivr
mov
jmp
fistps
and
mov
mov
xor
lods
popa
pop
or
push
inc
lcall
loopne
jo
inc
sub
cwtl
adc
insb
lods
sbb
jmp
pusha
scas
mov
rol
mov
and
xchg
xchg
in
stos
lcall
dec
outsl
push
xor
add
mov
cmc
jg
pop
ret
fldl
sub
ljmp
jmp
dec
aam
lret
testl
mov
mov
sub
mov
mov
dec
data16
mov
imul
ljmp
cmpsl
mov
jbe
nop
aas
gs
decl
xor
jmp
mov
lcall
bound
xor
mov
lcall
insl
sub
pop
rorb
insb
cs
lods
push
pop
ret
push
or
or
mov
mov
inc
mov
adc
dec
bound
test
icebp
inc
inc
js
mov
cmp
cmpsl
adc
outsl
out
xchg
fiaddl
xor
mov
and
sub
jg
decb
cmp
in
xor
add
out
add
out
mov
rep
test
adc
lds
lods
jbe
in
incl
repnz
sbb
loope
or
test
add
mov
fnstsw
sti
ja
cmp
mov
std
call
icebp
xor
call
add
push
or
xchg
xchg
mov
pop
std
call
test
xor
cmpsl
in
hlt
sub
call
pushl
bound
imul
xchg
push
sbb
jbe
call
adc
or
xor
scas
ss
cwtl
adc
mull
dec
sub
dec
dec
xor
or
pushl
jne
jp
les
mov
jge
mov
cltd
adc
mov
and
incl
test
jno
xchg
mov
push
jne
lods
call
mov
pop
dec
sub
rcr
adc
push
enter
sub
mov
dec
cmc
pushl
fnsave
enter
mov
mov
dec
push
and
in
dec
adc
ljmp
mov
in
sti
pop
sbb
dec
pop
mov
lcall
push
inc
aaa
into
out
mov
inc
stc
out
mov
xchg
popa
push
push
je
iret
push
pop
imul
push
mov
sbb
mov
adc
push
adc
in
pop
aaa
ds
dec
push
cld
shll
sbb
negb
adc
int
cmp
out
lock
xchg
jo
mov
ja
mov
js
popa
and
jmp
add
dec
mov
fnstenv
mov
jmp
fisubl
pop
movsl
mov
inc
or
sub
addl
fsub
push
hlt
mov
pop
mov
sti
lahf
stc
lods
xlat
lcall
movsl
fcompl
inc
pop
jns
call
call
stos
bound
fisttps
xor
push
inc
jl
sbb
fldenv
jmp
in
or
adc
xchg
inc
stos
decb
gs
test
hlt
call
mov
dec
pop
fisttpl
and
pop
sub
inc
jle
call
push
sub
add
repz
and
test
decl
mov
out
sarl
jge
jle
inc
lret
int3
pusha
cmp
mov
loopne
mov
add
xchg
mov
sub
xorb
and
lds
sbb
insb
pop
ljmp
cld
pop
push
fwait
mov
mov
jno
cmp
cmp
jecxz
sbb
pop
aas
enter
lcall
fsts
icebp
xchg
jl
xchg
aam
inc
scas
or
dec
jne
stc
notl
jns
sbb
xor
and
and
int
jmp
or
mov
addb
pop
and
push
nop
insb
sbb
test
jnp
mov
icebp
jmp
rcrl
cld
xchg
add
call
pop
dec
call
les
cmpsl
xchg
nop
sbb
sbb
fbld
cmpb
jmpw
dec
ljmp
mov
mov
incl
shlb
jb
or
add
aam
outsb
nop
mov
dec
aam
shl
inc
fnstenv
test
mov
sbb
std
ljmp
mov
adc
xchg
sub
in
xchg
add
add
sub
int
jmp
outsb
outsb
cwtl
cs
arpl
push
push
stos
and
lret
add
jl
add
call
js
sbb
pop
push
jns
outsl
pop
js
sbb
shrl
imul
pop
xchg
adc
hlt
cmp
das
sbb
std
insb
cli
push
sti
sbb
xor
pop
sub
mov
in
ret
mov
data16
sti
out
movsb
adc
jge
lods
jmp
pop
mov
mov
inc
cld
aaa
rorl
insl
pop
repnz
and
adc
pop
in
jmp
stos
dec
cltd
inc
aad
movsl
mov
lcall
cmc
cmc
mov
dec
test
dec
or
call
inc
test
insb
push
mov
jge
fcoml
mov
mov
sti
test
or
pushl
shl
pop
jno
push
sub
jmp
mov
xor
js
lret
mov
test
pop
addr16
iret
enter
cmp
add
ret
or
or
enter
flds
add
inc
mov
lcall
or
int3
mov
mov
int3
cs
xor
adc
or
dec
and
cmp
jnp
jno
test
or
jb
xor
inc
or
call
jno
push
xchg
or
fildll
ljmp
push
mov
aam
cltd
jb
or
xchg
and
pushf
mov
jl
sub
or
test
mov
mov
scas
or
mov
ret
jno
dec
bound
fildll
mov
cwtl
or
jecxz
ljmp
mov
jmp
mov
nop
aas
je
pop
xchg
mov
xor
call
in
aaa
pop
sbb
jmp
xchg
xor
cmp
mov
dec
push
sub
pusha
call
hlt
xchg
xor
push
mov
mov
xchg
add
pop
int3
in
sbb
mov
int3
addr16
xor
push
pop
cmp
test
mov
idiv
jmp
ljmp
mov
sbb
arpl
sbb
sub
imul
jmp
aad
jae
sbb
pop
fstpt
cwtl
push
negb
repz
jl
jle
out
cwtl
mov
and
insb
stos
or
shl
xchg
int
mov
loop
lds
xor
fisubrs
xchg
jmp
mov
dec
inc
mov
pop
mov
mov
fidivs
ss
je
mov
arpl
incl
sub
mov
lcall
sti
insb
iret
inc
mov
dec
bound
std
jmp
call
jno
adc
xor
inc
mov
jmp
adc
clc
sbb
xchg
jl
push
mov
inc
stc
or
fnstenv
xorb
fistps
add
xchg
mov
clc
and
cmc
mov
out
push
mov
decl
inc
loopne
je
xor
push
xchg
repz
dec
int3
xchg
shll
cmpsb
sbb
stos
fdivrp
inc
divb
mov
sti
das
mov
aam
jbe
and
push
inc
or
mov
pop
ret
jnp
les
xchg
jecxz
push
inc
pop
mov
arpl
test
addb
jmp
dec
lret
addr16
imul
outsl
cli
mov
jmp
pop
loopne
cmp
sbb
jle
addr16
ljmp
cmpsb
dec
fiadds
jecxz
or
lea
xchg
sbb
or
std
inc
mov
repnz
sub
adc
push
inc
jmp
push
orl
lret
mov
mov
mov
and
adc
decl
fcom
aam
push
cmp
ret
insl
push
push
outsl
sub
jg
ljmp
in
mov
dec
in
adc
fxch
jg
sub
out
cli
call
mov
add
jb
mov
scas
xor
mov
xchg
pushf
adc
mov
dec
push
push
dec
lahf
lahf
and
sub
cwtl
imul
lds
cmovnp
pop
stos
cmpsb
cmp
in
xlat
incl
push
mov
add
xchg
push
jg
mov
push
adc
add
mov
xor
iret
push
mov
lock
inc
call
incl
cmc
rcr
jne
mov
out
mov
out
dec
pop
hlt
test
out
adc
stos
xor
or
add
and
repnz
lcall
decl
add
mov
call
push
stos
pop
mov
and
sbb
test
fmull
pop
sub
xor
mov
sub
ljmp
ss
dec
lds
mov
jno
inc
call
lcall
inc
aad
pop
dec
adc
pusha
test
out
aas
insb
or
sbb
jmp
pushl
pop
mov
push
arpl
and
je
push
shrb
scas
push
mov
pusha
roll
inc
dec
inc
sub
sub
ljmp
pop
cmpsl
cmc
aad
xchg
dec
pop
popf
jbe
cmp
adc
or
and
mov
or
call
movsl
push
pop
fwait
add
add
jg
jg
cmp
dec
filds
mov
sub
sub
decl
jmp
mov
mov
or
fcoml
xchg
les
xor
jns
insl
pop
mov
cltd
cmp
insb
jle
or
js
orb
jmp
or
out
xchg
test
out
into
ljmp
cmp
push
and
inc
adcl
ljmp
push
adc
jp
dec
fsubs
ficomps
xor
fisttps
add
pushl
cld
fisubrl
lods
add
mov
dec
sbbb
jg
cmp
xchg
jnp
jnp
pop
lock
pop
nop
push
shlb
aaa
mov
mov
sub
incl
sti
add
inc
mov
rorl
push
cmp
pop
and
arpl
fistps
or
mov
lret
inc
lcall
sub
pop
push
pushl
mov
shrb
mov
pop
iret
in
loop
inc
jnp
ja
mov
mov
loop
pushl
and
sti
sub
mov
xor
mov
shr
lret
jne
cltd
cmp
mov
jge
sbb
mov
pushl
test
sub
int3
sub
outsl
mov
mov
sub
out
pushl
arpl
icebp
aam
and
and
subl
sbbl
movsb
std
jbe
jp
std
int3
mov
add
icebp
bound
dec
jl
add
out
sub
int3
sbb
outsl
lods
cld
xor
fwait
insl
or
mov
mov
xor
push
or
push
nop
pop
loopne
incl
adc
leave
pop
lahf
cli
mov
popa
jne
stc
dec
lods
jno
int3
cmpsb
adcl
decl
call
int3
cmp
scas
out
out
pop
js
insl
and
mov
inc
es
cmpsl
cmp
notl
in
shll
sbb
sbb
push
movsl
repz
ljmp
clc
xor
lea
out
icebp
je
sbb
cmp
mov
in
mov
out
mull
push
fxtract
rol
pop
imul
movsb
mov
popa
xchg
enter
add
push
ljmp
sbb
js
mov
out
jns
out
push
push
adc
das
rcr
mov
mov
and
add
cwtl
loop
and
mov
cmc
and
lcall
stos
lock
cmp
out
push
mov
aam
fistl
push
fdivr
dec
push
inc
fiaddl
arpl
xor
cltd
test
nop
insb
lahf
lcall
imul
push
outsl
je
fs
pop
xchg
rolb
pushl
sub
xor
mov
mov
sub
negb
shl
sti
flds
out
fmulp
pop
icebp
jmp
xor
jno
dec
clc
mov
pop
or
arpl
fwait
in
xor
dec
sub
in
lea
mov
mov
mov
cmp
fnsave
mov
sti
cmp
cmpsl
sbb
xor
lods
leave
fadds
jno
loop
cmpsl
pushf
cwtl
sub
call
stos
mov
into
repz
mov
leave
mov
dec
aaa
les
out
call
out
sub
jns
cmp
jo
dec
outsb
mov
push
cmp
lcall
jb
mov
push
add
jmp
push
cmc
popf
cmp
in
movsl
mov
incl
insb
fdivs
mov
push
ret
les
jo
out
sbb
test
ds
jecxz
mov
mov
pop
add
xor
mov
pop
or
das
jb
jmp
adc
testb
push
dec
test
cmpsl
sbb
mov
es
pop
dec
sub
incl
stc
xchg
or
test
mov
test
std
sbb
ljmp
in
sub
jecxz
leave
subl
pop
add
cmp
jge
incl
mov
sbb
rolb
and
and
cmp
or
pop
pushl
ja,pt
aad
sbb
and
adc
pop
push
or
icebp
or
mov
pop
dec
mov
stc
cmpsb
fisttpll
cmp
dec
insb
adc
out
js
aam
scas
mov
dec
cs
pusha
jle
iret
sub
xchg
pop
or
das
or
xchg
adc
push
fcomip
ds
ljmp
inc
fsubl
adc
out
sbb
stc
or
lcall
push
lods
lock
setne
mov
jae
or
insb
insb
das
fs
cmp
decl
insb
jbe
mov
cli
pushf
into
test
incl
push
movsb
sti
mov
in
sahf
std
xchg
add
pushf
aam
decb
shrl
test
ret
shlb
mov
fcoml
jp
push
ja
shll
inc
rol
arpl
rol
rcrl
imul
push
dec
mov
rcrb
cli
mov
sub
pop
mov
xchg
call
xchg
js
fsts
pushf
sbb
adc
and
mov
add
push
les
xchg
xchg
fs
jg
jg
or
push
out
rolb
add
roll
mov
int3
and
loope
xor
xchg
and
ljmp
mov
jae
rcrb
icebp
fdivs
cmc
ds
fistl
jl
popa
cmpsl
sbb
movsb
mov
decl
int
les
xlat
cmc
loopne
mov
mov
jns
stos
sub
repnz
mov
lock
xchg
cmp
inc
imul
xchg
dec
insl
dec
inc
or
lcall
cwtl
ljmp
inc
in
add
xorb
xor
mov
lcall
ljmp
lcall
cli
dec
lods
pop
outsl
lret
les
xor
mov
lcall
mov
ljmp
jl
pushf
push
dec
movsl
movsl
pop
pop
xor
sub
push
das
test
jmp
int
cli
aad
decl
xchg
sub
mov
xor
iret
call
ljmp
aas
cmc
jns
scas
jge
lcall
pop
lods
push
push
adc
divb
add
cmp
decl
or
jle
jp
inc
xchg
xchg
dec
scas
mov
sub
lret
fdivr
ret
insb
dec
push
daa
lds
mov
mov
push
repnz
mov
or
sbb
or
jne
jg
and
xlat
mov
dec
shr
sarl
jno
cld
ljmp
out
adc
xor
push
into
dec
cmp
dec
or
xchg
std
jmp
and
and
pushl
lods
enter
adc
aad
ret
pop
pusha
je
test
imul
popa
bound
inc
movw
pop
lea
adc
sbb
cmp
addl
push
and
outsb
push
cltd
or
cltd
lret
arpl
and
mov
mov
int3
xchg
add
lea
push
cmp
push
jg
adc
inc
adc
cmpsl
mov
out
pop
out
lock
push
push
jmp
mov
jg
insb
sbb
sahf
push
movsl
lods
mov
push
and
lahf
fcoml
lcall
pop
sbb
xchg
cmp
cwtl
rcl
stc
pop
cmc
call
push
sub
mov
fimull
fwait
push
add
xor
idiv
out
jbe
adc
je
or
in
call
lcall
xchg
inc
test
mov
sti
cmp
xor
imul
adc
lcall
xor
mov
stos
ljmp
call
loop
testb
fldt
mov
mov
inc
addr16
jp
and
or
decl
daa
inc
xor
ret
popf
cmpsl
aas
add
mov
pusha
add
setb
jle
push
jmp
dec
jecxz
pop
jp
shll
dec
aaa
imul
das
or
lcall
jp
sub
jne
and
fwait
daa
dec
inc
je
test
mov
jp
mov
pusha
mov
push
mov
pushl
push
mov
fs
sbb
dec
pop
int3
or
dec
sub
xor
call
mov
jno
repz
and
inc
cmp
mov
push
nop
pmaddwd
mov
aas
jecxz
out
dec
and
mov
call
cwtl
pop
clc
jb
int3
pop
ljmp
inc
mov
jne
lods
in
add
ja
call
iret
push
sbb
inc
ja
xchg
xlat
xacquire
add
stc
and
js
cmpsl
fiaddl
cmp
sub
gs
xchg
mov
incl
add
add
gs
jmp
pushl
std
inc
xlat
cmp
inc
ficoml
out
lahf
mov
and
jb
jg
das
stc
sbb
xchg
sti
and
pop
fldt
sbb
push
call
xor
out
xlat
mov
jo
adc
mov
pop
cmpsl
sarb
jecxz
push
push
push
int
xor
push
stos
add
pushl
add
imul
pop
inc
dec
pop
iret
cmp
sub
or
pop
out
cli
lcall
subb
xchg
aas
dec
js
aaa
cmp
aaa
test
mov
loope
lcall
enter
xor
jo
xchg
fcomps
jne
mov
fsubl
jmp
das
mov
xor
iret
shl
and
mov
rclb
mov
fidivl
pop
and
or
dec
cld
cltd
popf
movsl
cmc
call
insb
punpckldq
add
adc
ljmp
in
pop
aaa
test
pushf
jo
jmp
push
incl
cld
ljmp
xor
cld
xchg
adc
jle
loop
loop
lahf
pop
pop
sub
jg
ljmp
daa
scas
xor
inc
fldt
rcl
jne
jg
test
inc
mov
jns
mov
sahf
nop
sub
outsb
mov
and
sbbl
addb
jo
out
sahf
adc
pop
xor
xchg
xor
sahf
xlat
cltd
stc
lcall
cmp
push
fwait
jbe
mov
sub
and
fldcw
push
or
jno
lcall
ss
push
arpl
xor
std
dec
fisttps
scas
sub
pop
sub
sbb
jmp
test
out
cmp
ds
das
and
inc
inc
push
inc
and
push
push
inc
add
fbstp
inc
sub
add
ficompl
sub
jnp
add
incl
out
add
dec
insb
push
js
add
mov
push
jg
add
pop
push
jb
movsb
jg
inc
xor
imul
dec
orb
sub
pop
mov
mov
in
adc
mov
xchg
jle
setle
push
jg
add
psllq
sahf
dec
test
dec
xor
decl
push
add
xchg
movsl
jnp
data16
push
daa
add
xchg
dec
and
cmpsl
push
and
cs
fildll
es
push
movsb
push
movsb
inc
scas
push
enter
stos
push
and
push
test
and
idiv
jbe
xchg
imul
push
inc
pop
pop
add
stos
dec
lods
push
mov
pop
sbb
add
xor
outsl
inc
mov
pusha
sbb
mov
addr16
mov
fs
mov
insb
or
lret
imul
fnstsw
cld
imul
imul
ss
in
push
add
fnstenv
fdivs
pop
stos
pop
cltd
insl
call
pop
or
jbe
add
jo
mov
mov
ret
outsl
push
shll
add
outsl
push
shll
fidivrl
iret
outsb
or
push
ret
je
fsubrp
mov
fidivrl
out
jge
fisttps
add
fwait
inc
mov
rorb
movsb
push
jl
stc
repz
fcmovnu
mov
shlb
mov
xlat
mov
mov
push
jne
push
lahf
jbe
fcmovnbe
jb
ret
add
mov
jnp
add
push
pop
dec
add
sarl
add
inc
xchg
jns
fstpl
cs
push
shlb
into
divb
stos
aas
add
ja
out
mov
jne
add
ja
push
subl
push
xlat
ja
js
push
fsubp
mov
neg
jns
push
jp
jp
inc
push
fidivrl
mov
mov
sarl
ja
fldl
or
push
ret
jmp
ljmp
je
roll
xchg
in
xchg
sub
xchg
xor
jne
push
xchg
push
setbe
xor
outsb
fisttpl
push
lcall
loope
addr16
cmp
pushf
cmp
popf
aaa
xor
notb
inc
push
lahf
inc
lahf
mov
outsl
mov
push
jecxz
push
imulb
movl
iret
jmp
ds
push
hlt
clc
stc
repz
repz
sti
cld
std
decb
add
jecxz
mov
fwait
int
inc
jae
add
imul
pushw
add
pop
add
pop
add
jo
insb
add
enter
mov
add
adc
add
mov
or
or
outsl
or
and
stos
add
test
mov
or
push
sbb
push
pop
pop
adc
adc
xor
lods
pop
stos
cvtdq2ps
lods
pop
mov
mov
insl
cmp
scas
insl
lods
pop
pop
adc
push
scas
lods
push
and
fldcw
sbb
scas
scas
scas
and
subl
inc
and
mov
mov
add
pop
push
mov
push
pusha
cmp
and
xor
lock
test
mov
pop
and
sub
pop
sub
pop
pop
sub
or
sub
daa
in
ret
sub
pop
daa
mov
dec
xor
push
and
xchg
and
pop
pop
or
mov
fsubs
add
pop
aaa
cmpsb
insl
lcall
add
mov
pop
xor
pop
lahf
cltd
popf
cltd
or
or
add
mov
cmp
pop
pop
das
push
cs
xor
add
xor
das
fbstp
add
pop
push
cs
dec
inc
das
inc
inc
xor
adc
inc
mov
xor
push
push
popa
jbe
cmp
jl
jge
jno
outsl
add
jmp
pushw
dec
dec
cmpb
jo
mov
inc
xorl
mov
call
popf
pushf
fwait
lcall
mov
mov
xchg
pop
jle
inc
xchg
push
dec
ja
jns
dec
push
bound
js
adc
xor
jne
je
shll
add
add
cmp
sbb
add
pop
pop
pop
popa
mov
sub
lods
outsl
dec
jle
xchg
mov
mov
add
push
mov
cmpsb
push
mov
testb
dec
xor
xor
ja
push
ja
jb
cs
xor
out
insl
mov
add
add
mov
and
push
imulb
out
mov
xchg
jo
push
inc
push
push
inc
add
jae
xchg
jp
inc
iret
cld
fildll
popf
inc
mov
aaa
add
xchg
jno
lret
push
bound
pop
mov
mov
inc
shll
out
sahf
mov
insb
fistpl
out
outsb
add
xchg
xchg
pop
push
pushl
cmpsb
dec
push
dec
push
movsb
jae
add
rolb
shll
outsl
pop
xlat
pushf
push
pushl
loop
add
fwait
imul
lcall
push
rep
mov
dec
push
add
ja
sahf
jbe
add
out
mov
sahf
push
add
add
ds
push
add
mov
jp
add
js
mov
popa
scas
data16
shrl
insb
imull
ja
outsb
push
outsl
ror
push
mov
pop
jns
lret
jno
add
jge
push
jg
fiadds
fisttpll
lock
mov
in
adc
mov
add
test
inc
dec
push
loopne
iret
sahf
mov
dec
add
jb
out
in
dec
adc
jg
jle
or
cmp
push
fnstcw
aad
push
divb
int
mov
ficoms
push
xorl
sbb
sbbl
mov
roll
test
test
sbb
test
in
mov
add
xchg
nop
and
out
xchg
in
cmpb
push
sub
imulb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
push
outsl
mov
in
cmc
sahf
xor
lcall
push
cmp
aam
cmpb
jle
push
cmpsb
scas
jo
test
sahf
std
mov
fsubs
pop
jbe
stos
into
shll
gs
push
mov
cmpsb
sub
cmpsb
sarb
rorl
mov
popf
mov
ret
data16
pushf
sahf
and
add
addr16
dec
xor
jne
out
je
dec
addb
cltd
sub
incl
push
or
or
or
es
and
adc
push
adc
push
add
add
jg
adc
ds
add
mov
adc
aaa
test
sbb
imul
mov
mov
mov
sti
aad
mov
push
add
and
lods
pop
or
and
cs
mov
xorb
sub
fldcw
out
cmp
aas
in
inc
sahf
aas
cmp
cmp
pop
sahf
sub
sarb
mov
sbb
inc
jbe
xorl
inc
jle
cmp
scas
xor
dec
mov
out
ds
jle
aas
adc
jbe
dec
sti
ds
xor
dec
inc
test
mov
push
jg
in
imul
ds
mov
ds
lods
stos
test
mov
sti
test
cmpsl
cmpsb
cmpsl
add
test
mov
lods
std
fistpl
daa
sub
sub
sub
sub
fcmovnb
jl
sub
dec
and
inc
mov
add
call
push
push
push
imul
push
pop
push
push
push
imul
das
pop
ljmp
mov
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
cli
pop
cmp
insl
popf
mov
jge
jns
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
addl
dec
out
sbbb
add
incl
jl
push
add
cmc
repz
xchg
push
add
jg
push
aas
add
xchg
pop
cmp
test
add
mov
add
mov
outsl
fisttpl
push
fnstsw
repnz
inc
dec
sub
es
push
in
outsl
fisttpl
pushf
add
mov
push
in
lcall
sarl
fs
dec
std
jg
lretw
js
into
xchg
add
mov
push
cmpsb
mov
test
scas
xchg
js
in
and
out
es
nop
sub
sti
fimull
sub
nop
sub
mov
fistl
xchg
xor
xchg
xor
xchg
outsb
lcall
in
imull
jbe
negl
fcmove
fst
clc
cltd
int
es
push
lret
loopne
push
std
adc
fdivrp
divl
xchg
add
test
jg
adc
data16
jge
or
mov
add
pop
repnz
dec
dec
dec
dec
dec
dec
add
pop
mov
add
dec
or
adc
cmp
adc
dec
or
arpl
dec
push
adc
add
or
pop
pop
lcall
inc
push
dec
sbb
aas
in
and
dec
and
adc
sbb
dec
add
outsl
jmp
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
pop
push
pop
and
adc
sub
xor
inc
in
ljmp
xor
sub
sub
push
add
sti
addb
mov
pop
mov
mov
mov
popw
mov
mov
add
outsb
mov
push
ret
cmpb
bound
add
popl
push
enter
or
or
outsl
mov
cmpsl
dec
xor
or
into
incl
jg
sub
inc
xlat
sbb
shll
or
push
jnp
pop
mov
es
xor
cmpsb
pop
daa
iret
fdivrp
sysret
in
lock
pusha
rcll
punpcklwd
rcll
inc
sbb
or
push
lock
outsl
pop
mov
sub
sahf
jg
test
sub
lahf
mov
into
adc
out
cli
mov
add
mov
cli
filds
add
cmp
pop
jg
add
xor
cli
inc
test
adc
les
or
jg
inc
mov
cmp
pop
das
sti
mov
pop
pop
add
jle
rcll
mov
sti
jg
jo
insl
pop
xchg
ret
mov
adc
and
pop
test
sbb
push
les
dec
idivb
ljmp
cld
add
and
bound
or
push
or
std
test
add
xchg
les
xchg
pop
jg
push
orl
add
mov
or
sub
decl
push
loopne
xor
inc
xor
incb
jg
and
adc
xor
incl
jg,pt
sbb
sbb
mov
shl
pop
pop
xor
mov
jle
mov
push
sub
sbb
and
xchg
ffree
mov
push
call
and
xor
lods
jle
lret
imul
mov
xchg
add
inc
imul
scas
jle
mov
lcall
push
popa
mov
xchg
cmp
jg
sbb
adc
data16
sub
add
or
dec
cmpsb
das
add
jg
adc
add
pop
adcb
dec
jg
mov
mov
fldcw
pop
push
stos
pop
stos
sbb
mov
pop
daa
aas
or
mov
aaa
pop
pop
add
xchg
pop
jle
add
inc
push
je
or
mov
daa
mov
fstl
cwtl
adc
xchg
push
bound
add
pop
cmp
mov
insl
jnp
jae
pop
daa
push
arpl
fmuls
mov
push
mov
fcmovnbe
out
decl
cmp
push
dec
push
or
fstpl
dec
je
decl
inc
or
jle
jle
or
fists
idiv
fnstenv
add
cmp
ja
push
jbe
xchg
mov
and
push
jnp
push
jp
insl
adc
push
js
dec
jbe
pop
aaa
out
pop
add
mov
mov
jae
es
push
jne
popf
nop
outsb
ljmp
pushl
iret
or
dec
jmp
into
or
ss
adc
mov
or
int3
ja
xchg
test
jns
fmulp
or
xchg
push
push
mov
dec
mov
sahf
inc
fs
out
mov
xchg
cs
aas
popf
inc
push
pushf
cmp
pushf
ds
cmp
sub
mov
xchg
xor
xchg
xor
sub
push
cs
nop
sub
nop
daa
ss
cs
fstpt
cwtl
aaa
data16
mov
call
and
incl
push
imul
xor
incl
adcl
and
movb
es
inc
addb
push
add
cmp
or
xor
dec
push
xchg
nop
mov
ja
loopne
divb
mov
add
add
cmp
stos
mov
sbb
cmpb
adc
outsl
adc
add
outsl
or
sahf
sub
or
sub
push
cmp
jmp
adc
pop
push
orl
lea
jns
jno
popf
push
imul
mov
sbb
test
push
lock
cmp
cmp
icebp
test
jp
imul
add
cmpb
push
decl
pop
add
jmp
cmpsl
push
mov
sub
push
push
sbb
nop
add
xor
sbb
xor
out
andb
std
into
jmp
syscall
jbe
add
mov
sub
push
mov
sub
outsl
add
pop
lcall
or
mov
sub
iret
add
daa
cld
pop
mov
adc
das
pop
cld
pushl
adc
dec
jmp
push
rcrb
std
out
and
seta
lret
inc
lcall
or
xor
or
mov
mov
arpl
cmp
incl
incl
decl
call
sub
mov
mov
pop
push
or
mov
sub
dec
or
dec
outsb
decb
mov
xor
clts
add
adc
punpckhbw
or
iret
jle
adc
inc
mov
inc
sti
out
paddq
push
lcall
add
pop
dec
incl
pop
or
push
outsb
push
ljmp
add
or
push
je
sub
pop
lds
adc
push
std
jmp
insl
or
push
add
or
andb
mov
decl
jg
dec
aaa
push
popa
cli
idiv
loop
add
imul
adc
xchg
decl
push
xor
incl
fcmovbe
inc
xorps
aaa
mov
xor
push
shll
adc
jne
roll
dec
hlt
pop
and
sahf
ret
incl
lcall
ljmp
lahf
inc
inc
dec
mov
inc
pop
inc
pop
mov
aaa
push
pop
sahf
movsb
dec
push
stos
int3
jnp
fwait
push
popf
inc
cmpsb
dec
dec
inc
negb
dec
mov
shlb
int
insl
push
shrb
rcl
outsb
shrb
fwait
dec
mov
jb
inc
mov
push
iret
insl
jmp
daa
outsl
pop
imul
push
push
dec
stos
xchg
dec
push
cmp
lcall
xchg
dec
dec
pop
add
adc
push
repnz
jmp
insl
popf
cmp
aas
decb
xor
fs
xor
data16
leave
push
push
aaa
push
lcall
ss
xchg
push
xchg
es
xchg
jnp
leave
cmc
xchg
ja
dec
dec
sar
pushl
and
incl
int3
jb
test
ds
inc
or
neg
je
aad
or
faddl
dec
movb
push
jnp
jp
or
jl
or
in
cmpsb
jns
jl
push
jge
jg
int3
in
pop
cwtl
es
jbe
adc
fidivrl
push
dec
push
fucomi
out
fisttps
fnstcw
repnz
jae
pop
fidivrl
push
mov
rol
loope
out
fs
cli
mov
mov
negl
add
sub
push
sbbb
dec
mov
outsl
add
stos
lahf
push
adc
adc
mov
int
push
addb
jnp
lahf
dec
es
xchg
bound
in
orb
inc
fnsave
and
push
sub
iret
jbe
int
out
mov
cli
pushl
clc
ret
push
enter
stc
push
jb
sbb
out
inc
sub
jg
mov
icebp
dec
pop
cld
std
outsb
popa
xchg
daa
jno
sub
popa
add
mov
icebp
and
mov
inc
daa
jg
mov
inc
and
mov
das
aas
jp
es
xchg
ds
xorb
cmpb
jmp
mov
inc
jg
push
sub
xchg
dec
in
sarb
pop
push
imul
push
xor
jge
idiv
push
fmuls
dec
push
push
fsub
pop
jmp
inc
push
int3
out
sub
mov
fidivrl
push
xchg
mov
decl
pushw
pop
push
pop
dec
sbb
or
scas
call
ds
jg
jge
lcall
jns
shl
sub
mov
jmp
xchg
jmp
xor
push
xchg
mov
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
or
xchg
or
jns
fadds
mov
add
ja
inc
or
mulb
push
cmovno
lret
push
and
jae
xor
fiaddl
push
mov
add
lret
sbb
addb
push
sbb
aaa
orb
lret
adc
repnz
cmp
push
inc
test
pop
push
sbb
xor
in
ja
sbb
push
or
and
or
inc
or
push
add
stos
push
stos
call
dec
mov
add
and
add
cwtl
jbe
adc
out
add
push
sbb
add
inc
pop
or
xchg
push
push
adc
jb
xor
inc
arpl
lock
pop
popa
enter
dec
mov
or
or
lods
jae
push
pop
inc
bound
mov
lcall
ret
in
int
insb
push
ss
das
pop
ret
sbbl
and
jns
outsl
push
pusha
jnp
push
imul
push
popa
imul
outsl
jb
and
add
imul
jg
inc
hlt
jb
fisttpll
adc
inc
sbb
xor
pop
movsb
push
add
dec
sarl
pop
mov
scas
sbb
cmpsb
insl
andb
adc
mov
lea
push
jo
aas
aaa
add
subb
mov
js
test
inc
push
and
jbe
repz
push
mov
out
sbb
push
dec
in
cltd
fbld
or
sahf
lret
gs
xor
cmpsl
jmp
push
outsb
adc
sbb
jge
std
outsb
jbe
push
and
jp
xor
mov
stos
xchg
imul
jo
inc
dec
sar
mov
jne
push
das
std
jae
cmp
fadd
int3
mov
push
rcrb
push
sbb
out
push
ja
outsl
dec
inc
xor
ja
xor
fimull
gs
das
popf
subl
jns
pop
insl
cmp
xchg
cmpsb
jno
jge
mov
fldl
push
outsb
nop
fildll
jp
gs
cmp
cmp
lods
mov
fldcw
jb
lcall
sahf
sbb
inc
dec
into
sbb
or
mov
and
jo
xor
shll
pop
andl
in
dec
push
fimull
rcrb
psrlw
sahf
lcall
aaa
lcall
mov
mulb
inc
imul
das
sbb
movsb
jecxz
pushf
cmp
pop
arpl
push
sbb
subl
mov
pop
sbb
sub
and
inc
ficoml
sub
lock
inc
dec
fistl
inc
psubusb
adc
xchg
lea
bound
xorb
adc
push
adc
cmp
leave
xor
inc
sbb
lsl
and
and
cmp
jnp
jne
je
sti
popa
es
push
sbb
xor
fsubrs
adcl
test
dec
or
mov
push
lods
cmp
xchg
in
insl
or
int
dec
insb
cmpl
sub
dec
push
mov
push
outsl
cmp
data16
jno
adc
mov
ja
dec
outsl
xchg
and
sub
inc
push
adc
in
sbb
pop
adcl
rcll
mov
xor
sbb
dec
push
add
scas
mov
mov
je
call
and
ja
dec
and
insb
repz
mov
cmp
pop
xchg
jns
ja
popf
repz
sbb
fildl
xorb
fsts
adc
push
cmc
jge
adc
stos
jne
jbe
cmp
mov
inc
mov
pop
jbe
inc
and
sub
arpl
inc
movsb
sub
je
add
add
orb
inc
xor
push
dec
int
push
jbe
mov
jno
daa
or
fcoms
roll
mov
in
shrb
out
fistl
imul
cmpsl
cmp
bound
test
push
sub
cmp
push
test
pop
in
jno
cmp
sbb
cmp
push
pop
roll
scas
gs
rolb
loop
dec
xor
add
cmp
addr16
clc
inc
jne
sub
js
push
mov
xchg
ja
xor
in
mov
dec
gs
inc
arpl
lods
movsb
lock
iret
sub
or
add
sub
and
mov
mov
dec
out
into
popa
lret
or
mov
mov
insb
xchg
jg
and
test
push
pop
shll
imul
loop
dec
popa
jae
cmp
push
jae
xlat
inc
sbb
movsl
popf
pop
and
lret
ficoms
flds
inc
sbb
sahf
lds
sbb
outsb
push
or
pop
add
shr
dec
sub
pop
xchg
imul
sub
pop
jl
insb
rcpps
js
mov
sub
jb
inc
inc
xlat
mov
fs
mov
cld
in
inc
imul
xor
mov
insb
push
sbb
xor
sbb
scas
xor
imul
outsl
sub
fs
mov
stos
dec
and
data16
and
outsl
xchg
out
jmp
dec
jne
jns
shll
outsb
fs
sti
js
inc
xchg
inc
rcr
add
and
mov
fldcw
pop
push
mov
mov
inc
out
sbb
xor
xor
imul
and
bndldx
jne
outsb
inc
imul
push
sub
or
lea
and
adc
xor
xor
aad
add
jae
sub
sub
push
ss
mov
sarl
int3
sar
pop
add
add
sbb
mov
add
sbb
movsb
dec
adc
iret
xor
inc
or
push
lcall
adc
mov
xchg
pop
add
es
setl
cmp
repnz
andl
or
ds
adc
and
pop
mov
loopne
mov
insb
mov
and
sbb
cmp
adc
daa
out
mov
je
jo
sbb
inc
out
push
imul
addl
lods
test
or
nop
mov
sbbl
inc
sbb
loopne
out
cmp
jecxz
or
push
int3
arpl
sbb
add
dec
jno
jge
jl
out
cmp
mov
xor
mov
lcall
jne
xchg
push
add
sub
or
fidivs
nop
adc
sbb
int3
mov
scas
aas
ss
outsl
test
sbb
adc
ret
and
sbb
mov
jle
inc
sbb
scas
cmp
ja
pop
jo
mov
lock
sub
repnz
mov
das
jg
mov
fsubl
xlat
adc
or
mov
fdivs
mov
fstpt
arpl
xchg
xor
inc
mov
enter
out
push
imul
mov
cmp
cmp
mov
jbe
sbb
add
pop
pop
sub
cmpsl
adc
push
xchg
push
sarb
mov
push
inc
sbbl
outsb
cmovns
shll
dec
inc
push
sub
inc
dec
test
mov
addr16
adc
arpl
and
jne
pop
xor
xchg
dec
mov
push
jg
roll
jb
shrl
add
sbb
mov
nop
fs
xor
mov
cmp
jns
test
adc
int3
adcl
jecxz
dec
adc
out
mov
cmp
jmp
pop
push
jo
rorl
and
ret
aas
cwtl
mov
scas
inc
sub
aad
inc
inc
pop
mov
mov
and
outsl
test
xchg
sahf
pop
pusha
mov
mov
incl
push
inc
push
bound
sub
push
fsubrs
mov
sbb
sahf
mov
dec
or
cmp
cmp
outsl
mov
outsb
inc
test
jmp
scas
xchg
imul
jo
jbe
imul
and
push
jecxz
sarb
cmp
movsl
dec
in
dec
cmpsb
imul
mov
ret
ret
loopne
mov
push
inc
or
or
enter
add
sbb
push
adc
daa
lcall
push
and
xor
add
sbb
idivl
adcl
mov
int3
jmp
push
dec
insb
inc
xor
pop
sub
popl
inc
dec
dec
push
lds
or
mov
pop
and
add
and
outsb
inc
fwait
or
jb
popa
adc
lea
imul
dec
in
test
cs
ficoml
out
add
pop
push
dec
add
ja
rcrb
out
movsb
in
sahf
dec
xchg
push
lods
push
and
mov
push
mov
pop
fstp
pop
dec
inc
inc
ss
and
fucom
pop
jg
mov
add
inc
and
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
add
enter
add
