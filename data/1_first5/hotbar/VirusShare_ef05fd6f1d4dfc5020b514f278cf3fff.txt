fcomp
decl
cwtl
pop
inc
add
mov
or
adc
jge
add
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
mov
and
jbe
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
mov
mov
add
or
dec
and
sti
enter
push
hlt
js
pop
push
dec
lahf
xorb
sbb
les
insl
pop
push
push
push
xor
pop
fdivr
call
and
inc
add
sarl
lea
inc
dec
sti
pop
cld
pop
nop
adc
incl
sbb
inc
push
mov
rcll
push
mov
je
push
push
push
mov
push
neg
mov
mov
inc
nop
jne
out
push
mov
pop
jg
mov
add
mov
inc
or
sti
jg
dec
push
xadd
dec
test
jg
add
mov
call
ret
pop
ret
testb
add
ljmp
jns
mov
mov
sahf
mov
les
outsb
adc
mov
xor
insb
in
push
pop
imul
sub
dec
movd
inc
ret
mov
or
aaa
push
notl
mov
sbb
call
push
and
push
push
add
cwtl
sbb
add
push
rclb
pop
push
or
mov
push
xchg
dec
add
mov
adc
fs
clc
push
cld
hlt
add
push
imul
dec
add
cmp
xchg
mov
add
int
addr16
shlb
add
std
jae
hlt
push
and
in
sti
push
push
push
xchg
or
sbb
push
push
cmp
xchg
push
mov
adc
adc
inc
rcr
cmp
cmp
lret
push
xor
or
loopne
ret
fbstp
enter
push
push
insb
sti
xor
push
pop
xchg
xchg
jae
push
push
sub
adcb
jl,pt
add
out
enter
add
lcall
fstpt
sbb
push
imul
sete
bswap
inc
jle
push
mov
into
mov
dec
test
push
lock
je
adc
push
cwtl
fidivrl
lcall
add
fadds
cs
push
and
and
mov
dec
cmp
add
add
cmp
insb
cltd
pop
cs
shll
cmp
push
into
les
sub
and
pop
addl
aam
das
mov
push
push
inc
push
mov
lea
cmp
push
push
or
mov
dec
jo
jle
sub
mov
dec
add
sbb
shrb
les
pop
add
pop
in
adc
dec
push
stc
or
test
jo
pop
pop
jmp
push
in
mov
and
mov
mov
dec
push
lea
out
jg
mov
mov
stos
pop
sahf
ja
fistpl
mov
pop
ret
xor
push
inc
push
dec
dec
sbb
jp
sub
cmp
sub
ret
and
pop
stc
jl
movsb
adc
mov
inc
les
leave
jmp
in
fsubl
mov
sub
lds
adc
sub
jl
push
pop
or
int
out
inc
and
add
push
cmp
jb
inc
xor
je
push
and
push
int
add
pusha
push
add
add
fstpl
mov
ret
int
je
icebp
mul
inc
or
dec
jne
bound
lock
in
dec
inc
loope
pop
idivb
rolb
andb
cmp
cmp
lea
loope
ljmp
and
adc
je
shlb
aas
sub
push
lods
push
insb
sbb
pop
inc
mov
sub
or
jb
cmp
cmp
sbb
cmp
popf
adc
adcl
orl
mov
lcall
pop
je
in
or
dec
or
addr16
pop
js
push
push
stos
xchg
or
ret
add
push
lea
push
xchg
bound
push
adc
ds
xor
ljmp
jb
in
dec
fwait
xchg
push
jg
dec
or
test
pop
testl
or
lea
and
pop
mov
popf
mov
pop
mov
jb
sub
mov
xchg
mov
sbb
cmova
sbb
and
icebp
add
inc
test
push
ds
mov
pusha
push
inc
mov
xchg
push
es
or
push
add
push
push
repnz
dec
push
cmp
or
push
pusha
daa
mov
sete
test
test
jle
bound
xor
xchg
and
nop
and
es
sbb
insb
pop
ljmp
and
sub
cmpsl
rclb
adc
or
xchg
inc
or
pusha
lds
scas
push
pop
punpckhbw
inc
mov
mov
jne
push
sbb
push
adc
bound
jecxz
add
loop
push
push
mov
shl
xchg
adc
mov
xchg
adc
insb
mov
punpckhbw
mov
mov
dec
push
push
xor
push
xchg
or
popa
push
or
jmp
sub
sub
dec
add
addr16
adc
add
scas
dec
push
cmp
cmpsl
sbb
and
sbb
xor
psrlq
addl
nop
inc
mov
cmp
repnz
mov
jle
push
cs
inc
add
sbb
xchg
jle
cmpb
cmp
test
jmp
push
sbb
mov
xchg
icebp
sbb
cmp
int
inc
jle
xor
insb
ja
push
push
pop
push
data16
fistl
adc
adc
leave
mov
add
sti
add
push
mov
xor
adc
and
inc
je
loop
add
and
push
cmpsl
xor
mov
ret
xchg
xor
push
pop
cmp
mov
adc
mov
lea
popf
cmp
ss
icebp
bound
adc
fmull
or
mov
ficoml
push
data16
or
sub
mov
js
mov
sub
cmpl
je
mov
lea
push
mov
aas
mov
xor
fcoml
jmp
push
sarb
cld
mov
adc
fstl
testl
cmp
inc
mov
inc
fmulp
call
xchg
mov
loop
mov
xchg
cld
daa
add
adc
xor
or
ret
loopne
sbb
data16
mov
cmp
and
mov
mov
test
in
push
mov
sarl
pusha
adc
and
aaa
push
repnz
sbb
loopne
icebp
lea
pop
test
jl
and
xchg
aad
sbb
xor
dec
mov
lods
aam
jno
push
push
pop
add
loop
xchg
inc
jo
lods
mov
mov
aad
dec
test
jg
int
push
cli
jmp
cmc
inc
add
bound
scas
stos
mov
pop
pop
and
int3
xlat
ds
add
ret
incb
scas
mov
and
aam
enter
int3
or
divl
jmp
hlt
push
xor
xchg
cmpb
jns
mov
sbb
sbb
jmp
add
inc
add
pop
sub
sbb
adc
jle
jne
mov
push
mov
addr16
xor
aam
popa
lahf
sub
ret
push
mov
pop
pushl
cmp
je
or
lock
mov
or
sbb
and
and
mov
loopne
sbb
test
mov
dec
add
inc
mov
or
xor
sub
movl
push
outsb
lahf
sbb
add
mov
outsl
sub
cmc
sub
xor
push
cli
sbb
cmp
call
adc
call
inc
cmp
jl
aas
add
mov
pop
sti
shrb
pusha
jne
jb
sbb
lods
outsl
fnstcw
push
mov
xor
jo
repnz
test
push
divl
imul
and
push
sbb
je
and
out
shl
scas
pushl
movzwl
ljmp
push
je
push
xchg
into
push
sbb
jmp
jmp
mov
lea
add
inc
test
jne
sub
push
push
mov
ud0
cmp
aam
adcb
jp
push
pop
jg
add
lods
cmp
sbb
xchg
sbb
shl
fs
insb
jne
das
mov
jecxz
pop
dec
es
lea
push
sub
pop
jb
iret
cmp
jg
inc
in
push
mov
push
jge
xor
mov
cmp
jl
repnz
fistpll
cmp
cmp
insb
pop
pop
ret
mov
pop
sbb
ss
push
daa
aaa
adc
pop
shll
add
push
mov
push
or
lcall
jne
pop
mov
sbb
or
xor
and
aaa
adc
lea
stos
xor
ficoms
rcrb
fisttps
add
push
orb
mov
or
mov
sub
test
jge
push
in
loope
loop
mov
or
mov
stos
dec
clc
jle
mov
mov
cmp
pop
testb
clc
mov
lea
push
jo
pop
fmuls
sarb
movl
lods
ljmp
add
jmp
insb
fcoml
add
push
outsl
or
mov
cwtl
jl
inc
jo
stos
jle
loope
test
add
add
or
or
and
or
push
fldcw
clc
mov
je
cmpl
insb
jge
ror
and
sub
add
mul
movl
sti
push
pop
or
cmc
mov
in
adc
and
loope
rorb
push
fld
or
sbb
jg
pop
pop
push
ds
jne
jo
push
pushf
cwtl
lods
in
jp
xchg
mov
cld
mov
or
lret
cld
in
mov
repz
cmp
ja
push
clc
lea
push
push
xor
jmp
xchg
clc
push
add
rorb
mov
dec
fists
repz
pop
shrl
je
out
lahf
adc
adc
adc
fisttps
or
inc
and
push
inc
xchg
push
mov
lret
xor
dec
cmp
push
push
jmp
push
jg
outsl
add
add
sbb
pushf
subl
sahf
aaa
or
push
mov
js
cmp
adc
push
add
push
mov
pop
jecxz
mov
test
inc
add
sti
loop
sub
xchg
push
imul
test
pop
fldl2e
lods
sahf
dec
test
mov
lods
aaa
les
je
cmpl
sti
cmp
push
lea
jl
mov
push
jne
push
jmp
fisubs
xor
dec
test
push
mov
sahf
lds
add
std
jnp
stos
push
hlt
push
push
frstor
dec
pop
test
or
lcall
push
or
inc
or
jae
adc
push
negl
loop
add
push
mov
ret
push
cli
pop
xlat
out
jae
sub
orb
adc
jae
push
imul
roll
push
jle
cmp
and
aaa
or
inc
inc
pop
jb
fisttps
xor
mov
ret
jg
add
leave
lds
xchg
adc
mov
dec
pushf
test
test
stos
jne
pop
or
mov
push
push
cltd
add
jl
jecxz
add
fldt
xor
idivb
mov
js
inc
lds
cmpsb
pop
mov
push
stos
mov
mov
mov
jb
push
jns
sub
adc
mov
push
je
hlt
add
xchg
sarl
jge
jmp
inc
add
ret
push
pop
xchg
push
nop
adc
mov
lea
test
inc
cmpsb
lds
scas
test
sbb
sub
add
js
add
fcompl
mov
pop
jle
mov
jbe
push
loopne
push
dec
or
ret
add
push
mov
ja
pop
add
shlb
ret
push
fdivs
and
shrb
dec
push
adc
push
out
jno
je
das
xor
cltd
ret
mov
adc
enter
push
cmpb
add
inc
add
inc
push
add
or
enter
adc
divps
cmpl
mov
push
xor
jge
out
adc
lea
pusha
inc
rcrb
out
push
roll
mov
push
hlt
xor
sar
lret
fidivs
subb
rolb
ud0
add
shrl
dec
and
ret
jb
xor
lock
mov
sbb
push
add
inc
sub
xor
fisubl
subl
sbb
sub
or
mov
or
insl
rorl
push
jge
jp
inc
pop
pop
aas
icebp
cmpsb
add
jbe
jmp
pop
mov
mov
add
repz
mov
lods
lds
pop
pop
lcall
fstp
push
ja
je
sub
fucomi
lret
test
xor
cmpsb
insl
sub
pop
lea
lods
in
adc
pop
pop
insb
adc
data16
stos
sub
xor
incb
pop
out
jnp
out
jbe
jmp
mov
or
sbb
push
cwtl
out
inc
adc
pusha
cmpsb
adc
adc
adc
in
les
dec
cmp
lods
and
stos
or
push
and
fs
test
xchg
jge
shlb
iret
negb
je
mov
rolb
xlat
xor
mov
pop
mov
pop
sbb
movsb
push
push
movsb
rclb
pop
xor
fwait
mov
add
mov
or
aaa
sbb
jg
mov
in
sbb
adc
rcr
divl
rclb
dec
pop
outsb
or
sbb
fimull
jl
repnz
push
lea
add
ret
ds
inc
sbb
mov
test
push
gs
or
or
rcll
xor
shl
cmp
inc
icebp
push
cmpsl
mov
and
and
jg
in
adcl
inc
mov
sbb
jbe
ror
and
and
xchg
jl
scas
and
sbb
jbe
sbb
sbb
add
or
daa
sub
sub
into
rcrb
or
push
xor
pop
and
jo
or
jae
ret
fimull
xchg
lahf
mov
xor
cmp
fiadds
ja
dec
aad
xchg
mov
je
or
push
or
xchg
cmp
push
push
stos
xor
hlt
rcrb
ret
pop
push
adc
xor
aam
and
stos
pop
testb
adc
sub
sbb
test
ret
cmpl
and
jle
in
pop
mov
dec
or
jmp
ret
or
inc
clc
pop
add
jne
mov
sarb
rcr
jle
insl
test
push
repz
dec
jecxz
into
rcll
mov
lods
xor
je
or
adc
cld
mov
pop
subl
je
pop
cmp
ret
mov
push
in
lods
xchg
jne
loope
pushf
xchg
outsl
cmp
sahf
mov
movb
jno
add
xchg
mov
inc
or
inc
and
mov
daa
mov
or
jg
mov
cmp
dec
je
lcall
dec
cmp
dec
into
mov
orb
hlt
sbb
fnstsw
add
mov
loop
in
insb
or
enter
dec
rcrl
and
mov
mov
sbb
shrb
jnp
pusha
cli
xchg
insl
rorb
jp
lods
cwtl
push
lea
jp
sub
cltd
pop
mov
sbb
adc
imul
out
int
dec
mov
popf
jns
lds
fisttpl
xchg
dec
cmp
pop
repnz
sbb
xchg
fldz
movl
sahf
or
mov
stc
xchg
dec
inc
lds
sub
stc
mov
daa
je
xor
jne
scas
mov
clc
pop
dec
sbb
in
fnstenv
push
inc
cmp
repz
dec
bound
repz
inc
mov
iret
in
rolb
cmp
mov
pop
and
cmp
call
sbb
fstl
loope
push
mov
add
and
sahf
in
sahf
in
or
mov
call
add
jb
pop
jae
dec
ljmp
repnz
add
push
daa
and
ret
push
call
mov
pop
push
lea
push
pop
dec
std
push
ficoml
add
push
lea
cmp
out
jle
xchg
push
enter
dec
aam
les
lret
pop
push
pop
sahf
ret
mov
pop
sbb
push
inc
jle
jmp
push
js
add
add
adc
sbb
in
sbbb
xor
aas
push
in
mov
add
fiaddl
cld
ret
lret
xchg
mov
adc
test
in
add
add
lock
push
push
push
fnstsw
insl
jle
ficompl
add
pushf
sbbl
xor
mov
or
aas
adcb
xor
sub
mov
cltd
dec
and
or
das
pop
je
lahf
push
aad
and
lret
add
mov
xchg
sbb
cwtl
mov
cmp
call
in
out
sub
mov
shrl
nop
mov
mov
js
cmp
sbb
out
dec
xchg
xchg
sbbl
mov
push
and
add
mov
push
setne
push
or
push
and
pop
add
xor
push
jbe
lea
pop
dec
std
mov
rcpps
add
aaa
push
push
inc
mov
pop
cmp
je
lea
test
push
add
add
add
add
xchg
pushf
push
mov
test
sahf
pop
mov
push
daa
xchg
dec
scas
or
ret
pop
in
sbb
fsubs
mov
pop
mov
inc
xor
adc
subb
test
jp
xor
mov
sub
ret
push
push
inc
mov
push
lea
or
scas
or
ret
jmp
clc
push
push
mov
mov
insb
push
dec
dec
mov
push
jle
inc
loop
xor
push
inc
dec
adcb
and
sub
push
std
inc
cld
sub
sar
add
mov
xor
outsb
in
mov
dec
sub
mov
add
sahf
inc
add
push
add
into
cmp
mov
jecxz
jno
dec
repnz
stos
js
xor
push
inc
inc
push
jns
jbe
fadd
sti
mov
mov
adc
push
xor
cmp
shr
dec
inc
or
scas
outsb
inc
xor
sub
push
push
pop
fbld
popf
icebp
adc
xchg
xchg
popa
mov
neg
sbb
cs
js
and
add
jb
out
orb
inc
movsl
and
push
adc
adc
push
xor
push
shll
sbb
shrb
push
icebp
pop
adc
addb
mov
inc
pop
mov
in
repz
out
pop
clc
cmc
cmpb
lret
fisubs
or
cmp
fisubs
cltd
or
and
mov
inc
mov
filds
cmp
add
cld
out
push
std
mov
add
jmp
lret
xor
loope
jnp
push
push
push
and
push
add
cwtl
aas
ljmp
mov
push
mov
pop
fidivs
loop
and
cmp
mov
add
inc
sub
mov
pop
xlat
loop
pop
push
xor
add
add
lock
pusha
jne
andl
add
lahf
sbb
loope
arpl
sar
aad
sbb
jmp
addb
test
aad
stos
add
push
pop
cmpsl
add
cmp
adc
rcrb
insb
adc
dec
mov
push
push
inc
mov
out
fldz
fisubrs
call
push
sbb
adc
daa
dec
adc
scas
add
flds
mov
cld
xchg
aaa
ds
mov
cs
mov
mov
inc
pop
xlat
push
add
push
xchg
mov
xchg
les
add
testl
push
jne
push
mov
sbb
jno
inc
and
es
mov
sub
mov
mov
push
cmp
sbb
push
pop
jecxz
sbb
shufps
outsl
cmp
cmp
push
stos
fucom
imul
mov
pop
repnz
and
or
enter
mov
sub
lods
and
push
mov
sbb
cmp
aam
sub
lds
add
dec
push
movsl
adcb
sbb
fs
push
dec
dec
inc
inc
push
push
sub
out
ds
push
addb
inc
inc
xlat
jo
or
xor
pop
push
jmp
sub
push
dec
sbb
push
push
nop
cmp
sub
push
push
pop
sarb
fcoms
mov
js
jo
jp
xor
push
push
or
add
loope
add
or
jg
dec
testl
cmpb
int
addl
jl
pusha
sbb
xor
add
inc
imul
dec
orb
mov
enter
or
ds
or
push
mov
xchg
lds
and
push
and
push
push
and
leave
xor
mov
daa
push
sbb
subb
and
push
inc
ja
mov
cmpsb
dec
mov
stos
or
faddl
sub
aad
aas
inc
shrb
inc
scas
sarb
fldl
fmull
add
inc
mov
jl
inc
mov
dec
cltd
xchg
push
sahf
fildl
lahf
push
mov
adc
cmp
xchg
enter
adc
loope
adc
add
inc
addl
xor
and
push
or
pop
and
sub
jo
jne
pop
sarb
add
enter
xchg
ret
jne
or
sti
ja
dec
inc
push
add
push
mov
add
subb
out
and
push
and
jp
loop
ret
push
cmp
sub
dec
pop
xchg
or
dec
jb
es
and
arpl
fsubrs
cmpb
inc
xor
jno
adc
push
enter
in
shll
inc
and
sbb
jecxz
mov
addb
push
xchg
push
push
lds
pop
cmp
mov
cs
cld
add
ficomps
dec
mov
jns
mov
lock
push
stos
test
push
incl
out
or
inc
test
fs
mov
int
dec
push
mov
bound
push
push
and
xchg
add
loopne
ret
sub
fdivl
enter
pop
and
xor
int
adc
adc
dec
sbb
int3
int3
xchg
arpl
dec
push
push
into
inc
mov
xchg
jo
xor
cmp
push
movsl
push
mov
or
popf
js
fstpl
push
sbb
mov
dec
addl
ret
cwtl
clc
movsl
jno
inc
mov
pop
dec
popa
dec
lds
out
push
aad
add
leave
enter
popa
leave
inc
push
mov
xor
mov
jno
inc
and
xor
add
rcrl
dec
clc
or
jl
cltd
and
mov
add
clc
or
fldenv
fwait
in
enter
adc
jl
dec
add
dec
add
out
xchg
int
call
bound
mov
idiv
call
dec
bound
imul
sar
mov
shr
add
mov
imul
push
or
or
adc
insb
movsb
jg
in
jle
ret
add
jmp
ja
stc
dec
sahf
cmc
sub
mov
stc
add
cmp
mov
push
enter
xchg
sub
sub
jo
or
divl
jg
pop
data16
cmp
cmp
jne
push
push
and
cmpsl
icebp
call
inc
sbb
ret
ficomps
ds
es
lea
or
push
xor
mov
lds
hlt
aam
outsl
sbb
mov
out
add
or
inc
dec
push
dec
adc
sbb
fisttpll
dec
cs
cmpsl
sbb
and
inc
pop
sub
fldz
data16
push
ljmp
nop
sub
sub
xchg
sub
adc
mov
ss
jl
lcall
add
inc
push
aaa
ds
sub
in
lea
and
sbb
scas
push
xorl
push
jo
mov
jl
insl
arpl
mov
xchg
fisubrs
jle
cmp
add
xor
sbb
shrb
inc
out
jbe
in
add
popf
imul
cmpl
or
out
or
jmp
mov
dec
xlat
jp
pop
fistl
outsb
rclb
nopl
faddl
orb
decl
mov
sub
xor
mov
fdivrp
roll
jno
ds
sbb
xor
inc
mov
mov
jns
inc
push
fmuls
push
fsubrp
xchg
cmp
add
add
mov
xor
adc
je
add
lods
add
filds
fiaddl
pop
repnz
in
push
pop
mov
aas
add
mov
stos
lea
jge
sbb
ret
call
push
leave
call
jbe
rorb
aad
adc
and
add
pop
cmc
cmp
mov
orb
jge
je
sbb
mov
cwtl
rcll
loopne
adc
xor
xchg
dec
loopne
cs
and
inc
insl
pop
jno
jo
xchg
xor
or
mov
xorl
movsl
jno
sbb
xchg
add
rolb
push
lcall
cmp
adc
mov
xchg
mov
pop
or
inc
push
pop
mov
cltd
pop
pop
xchg
outsl
loopne
test
jmp
jecxz
lds
pushf
adc
pop
add
or
and
xor
sbb
xor
add
pop
xor
pop
clc
cltd
mov
sub
dec
and
cmp
pop
icebp
add
add
or
push
mov
add
aam
jge
push
push
popa
notb
or
cmp
fisttps
cmpsl
lea
push
push
inc
int
mov
mov
xchg
dec
and
lods
outsb
cmpsb
cmpsb
jo
fstpl
inc
data16
cmc
cmp
add
or
dec
pop
dec
sahf
adc
sub
and
mov
add
inc
cmpsb
sub
test
sbb
cmc
pop
mov
adc
cld
dec
fs
jmp
pop
push
push
repz
stc
lea
pop
jb
or
push
jle
imul
push
pop
cmp
pop
test
mov
dec
mov
mov
mov
mov
dec
and
pop
sub
sbb
leave
and
arpl
cmp
or
ret
lahf
and
and
sbb
and
inc
movsl
xor
into
in
or
int3
test
repz
push
sub
clc
loop
es
xchg
rorl
dec
sub
xchg
shlb
scas
jecxz
sub
mov
push
adc
fadd
js
lret
mov
xor
dec
or
xor
cli
and
popa
pop
push
cmp
js
push
add
inc
adc
push
stos
push
je
lea
push
adc
xor
push
aad
push
movsl
push
shlb
pop
pop
pop
jnp
mov
mov
rolb
jecxz
dec
mov
xor
sbb
leave
push
pop
cmp
test
and
mov
adc
in
inc
sbb
int3
cmp
or
mov
gs
inc
adcb
lret
dec
push
inc
push
push
les
jo
dec
push
les
or
cmp
add
cmp
adc
mov
adc
pop
ljmp
dec
out
push
pop
pop
mov
mov
ja
mov
mov
test
inc
cmp
pushf
fldcw
cmp
xchg
dec
ja
cmpsb
jge
orl
jbe
sub
add
ja
xor
popa
fs
pusha
or
inc
pop
mov
mov
dec
fiadds
ret
ds
fdivr
push
and
inc
xor
orl
jmp
mov
jmp
push
sbb
dec
push
inc
inc
xor
sbb
xor
xor
sub
cltd
and
cmp
shlb
cmp
movsb
pop
enter
nop
push
pop
out
lds
xchg
sub
in
ret
subb
mov
sbb
ret
and
sbbb
ret
xchg
shlb
sub
add
pop
pop
test
add
push
jb
push
or
xor
pusha
dec
mov
or
jne
push
sub
or
push
push
ss
cmp
lea
sbb
mov
out
mov
pop
dec
insb
stos
xchg
pop
fdivl
push
mov
or
lea
jo
inc
sub
and
inc
mov
rcll
and
subps
push
bnd
push
pop
or
or
ljmp
dec
dec
sbb
add
sub
shlb
rclb
lods
gs
pop
ret
aaa
mov
sub
inc
cmp
cmpb
pop
pop
and
leave
es
rcll
mov
je
xlat
jno
xor
pushf
or
and
movsl
dec
jmp
xchg
inc
lods
mov
cmp
movsb
inc
adc
sub
mov
or
cmpsb
std
and
mov
jg
out
js
in
pop
xchg
push
or
movsb
fs
push
or
xchg
push
and
dec
xchg
cmp
jnp
hlt
push
dec
mov
es
push
clc
mov
fistpll
dec
pop
jg
xchg
sub
aaa
jne
inc
add
add
dec
sbb
sbb
add
pop
sbb
xchg
add
xor
nop
and
les
or
inc
xchg
push
push
sbb
test
lret
push
push
lret
or
pop
loopne
add
mov
cld
int3
cmp
addl
pusha
jns
inc
jbe
or
push
das
rorb
add
add
add
pop
mov
fcmovnu
int
insb
or
inc
push
push
pop
push
fs
xchg
add
push
mov
and
push
fisttpl
and
mov
or
xchg
pushf
dec
push
mov
and
and
cmp
and
fisttps
inc
push
add
jne
adc
mov
xchg
cwtl
loope
or
out
test
test
call
inc
add
mov
adc
jno
nop
or
lods
mov
xchg
mov
mov
jmp
xor
je
popf
int3
or
addb
clc
cmpsb
ret
mov
add
leave
mov
pop
sti
mov
test
mov
mov
inc
es
jmp
movl
jne
ret
push
sub
push
xchg
rclb
add
jb
rorl
or
mov
pop
sub
sub
insl
sub
lods
mov
rclb
lds
daa
cmc
or
xchg
fidivrl
inc
dec
test
mov
xor
daa
pop
jg
push
and
jge
out
lcall
mov
sub
insb
push
xchg
bound
cmp
dec
mov
mov
ret
dec
adc
mov
inc
cmp
jl
mov
jae
adc
cmpsl
rclb
adc
add
push
add
or
adc
insb
dec
mov
jp
sbb
insl
push
in
ljmp
add
xchg
push
push
mov
sub
popf
push
adc
aam
jb
sub
adc
or
pop
mov
xor
sbb
ja
cmp
cmp
cmpsl
out
xor
inc
sub
in
pop
mov
dec
add
adc
jp
mov
sub
cltd
js
repz
sub
pop
mov
bound
sbb
jle
bound
int
jl
int3
add
push
repnz
sahf
sbb
in
imull
into
xor
cmp
cmp
jb
dec
int3
mov
andl
jmp
adc
mov
pop
inc
or
push
test
into
popa
jp
xlat
inc
and
or
jge
pop
shlb
push
fs
mov
pop
out
fsubs
push
sbb
jo
xchg
xor
pop
mov
adc
add
mov
mov
or
sub
adc
movsl
xor
push
lock
je
movsl
and
add
push
daa
xchg
add
push
enter
pop
add
or
pop
insb
sbbb
sub
dec
and
movsb
xor
scas
push
pop
mov
in
add
addl
cmp
jl
fs
stos
dec
sbb
ret
out
add
fwait
dec
dec
xor
inc
outsl
roll
in
lock
cltd
add
ja
push
fmull
push
mov
push
sub
rclb
push
sbb
pop
imul
sub
sarb
sub
lods
cmp
xchg
push
push
sub
dec
mov
jae
adc
shlb
pop
aam
repz
mov
inc
mov
sbb
jb
push
sbb
inc
ds
add
push
xor
mov
and
dec
xchg
cmp
movsl
loopne
jl
pop
push
dec
push
add
and
adc
mov
push
jbe
cmp
sub
add
xor
mov
push
nop
lea
mov
push
cmp
or
outsb
xlat
test
add
pop
add
jmp
sbb
jne
adc
xchg
pushf
pop
xor
add
or
cmc
and
test
and
mov
bound
es
loope
xor
pop
xor
and
sahf
mov
and
rol
bound
dec
and
push
test
icebp
lods
jge
nop
sub
shlb
je
or
sub
xchg
jb
test
sbb
imul
xor
ljmp
xorb
push
mov
and
fists
push
sbb
pop
sub
cmp
xchg
add
fiadds
fstps
jmp
stos
jp
mov
fsts
in
push
outsl
dec
add
pop
pop
dec
repz
clc
jmp
cli
adc
inc
jno
mov
sbb
imul
adcb
inc
push
adc
inc
daa
pop
rolb
lods
inc
or
leave
sub
sbb
mov
adc
std
add
pop
push
or
in
or
cs
roll
das
jnp
sub
xlat
inc
sbb
movl
call
xchg
mov
dec
cmp
xor
add
jo
fnsave
std
add
xchg
pop
add
in
seto
push
push
pop
nop
or
or
movsl
nop
dec
sbb
jo
ljmp
test
pop
dec
xor
orb
pop
add
jp
sbb
xchg
nop
xchg
jl
and
add
dec
push
pop
ljmp
dec
mov
ret
stos
add
mov
cmp
sbb
xor
pushf
aaa
and
push
loop
orl
in
pop
pusha
cmp
jb
cmpsl
push
sub
add
push
test
sub
shll
wrmsr
fdivrp
and
lret
rcr
xor
mov
mov
xchg
add
notb
and
movsl
lock
xor
sub
mov
push
adc
cmp
xor
or
jbe
inc
aad
stos
inc
cmp
push
cmp
xor
inc
fimuls
les
push
sub
call
add
mov
pop
test
adcl
mov
lods
rorb
or
clc
insl
pushf
jmp
push
sbb
insl
dec
jge
push
cli
add
or
jne
movl
push
int
and
inc
sub
dec
dec
cmp
push
add
leave
sub
cmpsb
inc
arpl
cmpl
dec
pop
mov
inc
lods
mov
lods
js
or
add
mov
mov
mov
jo
sub
sub
sbbb
or
mov
js
inc
movb
add
xchg
jno
lcall
imul
adc
fsubs
xchg
hlt
xchg
xchg
fmulp
mov
mov
mov
mov
and
int
fmull
fsubr
fists
jbe
iret
add
or
add
mov
jno
mov
stos
in
push
and
addb
in
push
sbb
fsubrs
cmp
iret
mov
dec
popf
dec
shlb
sub
sbbb
ret
rorb
icebp
add
jmp
hlt
push
mov
adc
pushf
pop
cs
mov
loopne
mov
ljmp
sbb
add
mov
cmpsb
loope
jmp
inc
jmp
ss
out
test
fstpl
dec
xor
in
and
repnz
fcoml
push
pop
imul
push
xor
dec
inc
cmp
fnstcw
cwtl
mov
insb
out
xor
add
lds
in
in
clc
testl
push
mov
subb
pop
inc
xchg
aam
subb
pop
lret
and
cmp
sub
rorb
std
cmp
cmp
popf
jno
mov
dec
push
in
test
mov
or
movsl
xor
les
loopne
jno
addr16
sbbl
and
inc
pop
xchg
in
pop
daa
mov
in
pop
mov
and
leave
push
test
je
add
or
or
in
in
test
push
mov
je
or
push
mov
insb
push
rolb
xchg
sub
jo
sti
sbb
or
iret
dec
lods
mov
mov
jl
add
pop
push
and
out
lcall
test
add
loopne
jl
or
les
mov
nop
sbb
sub
add
lret
rol
push
std
std
dec
enter
push
mov
xchg
pop
xchg
sbb
xor
or
je
mov
loopne
pushf
mov
sti
jg
nop
pop
scas
adc
in
add
inc
cmpsw
xchg
movsb
push
push
push
iret
ret
aaa
iret
mov
dec
push
cmp
mov
or
push
push
pop
sub
adc
test
adc
add
dec
adc
dec
subl
pop
out
add
xor
adcl
and
filds
push
dec
jl
cwtl
xchg
mov
cwtl
jae
test
adc
sub
push
push
in
outsl
sub
mov
cmp
adc
and
sub
adc
fs
jbe
iret
add
pmulhuw
and
lock
push
dec
cmp
jecxz
outsb
dec
dec
xor
js
adc
adc
push
adc
push
add
inc
test
pop
mov
xchg
bound
in
test
add
push
shl
pop
cmp
cltd
nop
popf
push
adc
xchg
or
push
out
nop
or
add
push
and
popa
pop
add
nop
or
daa
sti
into
mov
push
insb
add
es
inc
sbb
mov
cmpsl
ret
adc
mov
pushf
lsl
and
les
or
pop
lock
sub
sahf
divl
les
cmp
sbb
imul
add
sbb
cwtl
push
mov
xor
inc
xor
loopne
push
lea
mov
inc
ds
pop
pop
push
sub
into
mov
cmp
push
mov
mov
lahf
push
outsl
sbb
or
push
or
sub
xor
idivb
testl
cmp
cmp
push
jmp
jo
sub
orl
pop
add
sub
aaa
out
insl
cltd
mov
adc
jmp
mov
je
add
and
and
adc
fistpll
call
jae
or
pop
jle
jg
mov
mov
fs
or
cbtw
rcl
cmp
push
pop
stos
xchg
sbb
mov
nop
sbb
std
test
jb
sbb
inc
mov
xor
add
jecxz
xchg
fldenv
or
fbstp
mov
dec
add
mov
dec
or
push
fs
dec
rcrl
push
dec
fs
inc
sbb
or
push
inc
dec
subl
test
push
sub
fnstenv
lret
xor
popf
pop
sub
add
pop
insb
add
mov
shr
mov
inc
sub
mov
mov
in
jl
mov
push
jnp
adc
xor
frstor
xor
push
cmpsl
and
inc
jne
out
adc
jb
enter
push
lds
ja
je
cmpsl
mulb
hlt
dec
clc
and
or
loop
pop
ljmp
xchg
icebp
arpl
dec
jmp
lock
mov
shlb
clc
jg
idiv
rorb
push
xor
jl
lock
je
push
jl
lahf
add
dec
fucomi
repz
xor
add
hlt
sub
jne
push
jg
incl
js
lea
outsb
mov
lea
jnp
aaa
sbb
fucomi
pop
int3
lock
pop
or
add
cmp
fs
mov
imul
add
nop
push
sub
push
push
cmp
popa
leave
xchg
jl
pop
inc
fdivl
rcll
xor
aam
adc
sub
jle
jb
inc
add
and
lcall
jmp
cmp
nop
add
push
cmp
cld
jp
movsl
mov
adc
test
cmpb
jle
or
mov
add
and
mov
sub
loop
adc
test
mov
test
mov
jge
aas
aad
les
ret
jno
sbb
shlb
ret
xor
inc
ds
mov
add
nop
cmp
leave
js
inc
or
xor
aad
test
mov
lods
adc
hlt
add
cmp
jne
mov
pop
pop
movsb
addl
ss
cmp
adc
pusha
icebp
pop
push
pop
add
insb
add
clc
dec
cmp
jnp
and
add
push
push
sti
and
out
xchg
push
cmpsb
mov
ret
out
cmp
adc
or
xchg
dec
inc
ja
in
jo
add
dec
imul
xlat
cwtl
pop
js
je
lret
daa
add
mov
scas
jae
jo
subb
hlt
aam
push
xchg
test
jbe
xlat
jecxz,pn
orb
pop
sub
mov
add
add
rcrb
cmp
sub
sbb
in
push
lods
push
or
mov
into
mov
orb
pop
hlt
add
dec
adc
fisubrl
je
int
adc
loopne
push
and
dec
xchg
test
push
sahf
add
cmp
push
popa
loopne
pop
jg
pop
mov
sub
leave
inc
pusha
pop
pusha
ja
loopne
jb
stos
sbb
dec
mov
jle
fsubs
rorb
jg
pop
dec
cld
lea
sub
fs
or
jle
dec
jo
sbb
fimuls
in
jo
sbb
mov
jecxz
push
xorb
mov
cld
xor
or
add
sub
dec
xor
into
sbb
lea
jp
add
mov
pop
sub
pop
repnz
rorb
and
xor
fnsave
outsb
loop
add
push
test
mov
jmp
repnz
xor
and
mov
int
subb
pusha
test
js
les
xorb
or
cmpsb
adc
push
aas
mov
xor
dec
fimuls
ds
inc
leave
add
adcl
es
mov
adcl
icebp
dec
xor
sbb
xlat
stc
sub
sbb
xor
das
jno
cmpsl
xor
dec
fsubrs
jp
add
inc
push
cmp
push
push
popf
inc
adc
xor
fsubs
enter
mov
cmp
add
ret
je
inc
cmpsl
aad
adc
xlat
insb
loopne
push
aas
push
push
into
dec
std
fsubrs
push
aam
jmp
push
cmp
test
mov
jo
mov
jne
xor
xchg
fwait
cmp
add
hlt
mov
xchg
mov
repnz
push
fiaddl
pushf
sub
leave
sub
and
and
jecxz
xchg
push
mov
inc
sbb
fistpl
mov
je
mov
or
loop
clc
inc
add
jns
js
sete
mov
inc
mov
push
movsl
test
test
sbb
sbbl
add
dec
loope
xchg
mov
inc
or
rorl
test
jle
sub
jb
and
lock
adc
ljmp
incl
sub
subl
mov
subl
sbb
push
nop
addb
xor
ret
or
mov
dec
in
cmc
inc
mov
ljmp
jno
adc
aas
xor
lea
pop
test
sub
test
addb
outsb
test
andl
jg
loope
dec
testl
pop
lea
or
out
and
insl
mov
or
jne
pop
or
or
dec
inc
pop
sbb
jno
pop
mov
imul
mov
adc
jno
and
sub
repz
or
add
xor
or
xor
lret
adc
pop
jl
xchg
adcl
setge
sub
cmpsb
rcrl
pop
sub
sub
cmp
int
shrl
and
jl
sub
fcoms
and
pop
test
and
jo
inc
ret
xchg
and
loope
pop
je
inc
push
cmp
inc
cmp
outsb
mov
jnp
adc
lahf
mov
sub
mov
and
sub
into
test
lock
cmp
pop
inc
or
cmp
or
adc
add
or
movsb
inc
adc
add
dec
cmp
push
pop
push
ds
scas
adc
jle
sbb
rorb
stos
xor
leave
and
push
cmpb
dec
jno
jmp
ja
and
aaa
push
and
add
jb
aas
test
or
push
les
call
or
or
add
out
or
xor
xor
imul
push
mov
cmpsb
dec
sub
fisttpl
outsb
insl
rclb
mov
and
sbb
mov
daa
sub
push
push
leave
xchg
push
mov
inc
lock
or
adc
adc
movsl
mov
jle
or
or
pop
push
pop
and
and
sub
cmp
les
outsl
or
sub
mov
sbb
jbe
adc
testl
dec
mov
inc
push
sub
ret
mov
push
add
cs
lock
popf
or
inc
dec
or
or
adc
movsl
adc
andb
sbb
ja
mov
push
add
jmp
xor
pop
retw
dec
or
push
out
popf
loopne
loopne
in
sub
mov
popw
cmp
adc
mov
test
cmpsb
and
pop
clc
mov
leave
xor
mov
ret
in
fwait
add
push
bound
add
nop
mov
pop
jmp
repnz
xor
xor
hlt
cmp
lcall
es
fistps
dec
les
into
ja
repnz
push
push
push
ret
push
sbb
cmpsl
adc
aaa
mov
sarl
std
pushf
mov
pushf
roll
sti
adc
xchg
sub
jno
cwtl
sbb
jae
je
mov
mov
adc
mov
jg
add
or
lea
jge
push
push
add
lock
imul
test
jl
dec
push
add
enter
iret
sub
add
fidivrs
sub
add
mov
pushl
mov
inc
adc
or
sub
sub
outsl
cwtl
mov
sbb
rcr
mov
jmp
mov
mov
out
add
push
dec
out
leave
dec
sub
out
and
sbb
sbb
or
int
or
int3
mov
lds
pop
out
inc
or
in
aam
shl
ss
cld
inc
push
ja
jp
jecxz
xor
je
cmpb
pop
clc
cmp
ret
cwtl
lea
add
cmp
shll
push
aas
out
xlat
add
sub
in
loope
sarb
fnstenv
mov
mov
add
cmp
push
cmp
sub
pop
sti
test
sarb
dec
hlt
jge
inc
mov
xor
jp
add
faddl
faddl
xchg
xchg
int3
push
movl
test
push
es
pop
jno
data16
fmul
fsubrs
push
adc
xchg
or
ficomps
adc
sahf
jl
mov
push
jg
mov
lock
add
push
out
sub
ret
push
gs
test
dec
je
dec
dec
cld
sub
loope
add
pop
pop
lea
mov
test
adc
test
adc
mov
jo
mov
hlt
sub
push
ss
test
push
pop
ret
mov
dec
adc
add
adc
xor
dec
pop
ret
mov
push
jo
push
fadds
dec
loope
mov
aaa
pop
iret
mov
les
push
adc
mov
xchg
repz
or
ret
jg
inc
push
bound
adc
or
sbb
adc
or
and
lods
dec
and
or
mov
setbe
mov
jne
jae
jo
or
test
add
ljmp
inc
jle
ret
cli
mov
add
ret
fbstp
es
cmp
cmp
mov
orl
jns
addr16
jp
lahf
pop
adc
add
jno
add
in
outsb
ret
pop
sbbb
sbb
scas
dec
push
cwtl
nop
fcoms
pop
cmp
insl
popf
pop
mov
test
push
push
test
popa
es
inc
pop
sbb
adc
xorl
mov
mov
loope
mov
xor
mov
clc
add
jl
or
jle
pop
adc
movb
cli
sub
sub
lock
loop
cltd
sub
gs
mov
mov
shlb
lret
dec
popf
or
sbb
je
add
into
jp
sub
lea
cmpsl
push
lea
rolb
dec
push
cltd
or
inc
imul
sbb
cs
push
fnstenv
push
outsb
push
add
and
or
xchg
pop
fists
fucomi
mov
pop
insb
pop
mov
pop
hlt
add
cmp
popf
mov
mov
mov
sbb
sub
pop
pop
ret
std
imul
adc
pop
pop
mov
add
ret
pop
shlb
loope
inc
jg
push
adcb
in
push
or
cmp
lea
push
div
test
cmp
mov
push
dec
fld
and
cmp
pop
push
lods
push
ljmp
addl
rcrb
add
add
mov
jns
pop
sub
dec
and
fcoms
mov
jp
arpl
movl
test
dec
jle
insb
add
jns
lock
or
cmp
cmc
inc
or
jp
pop
enter
inc
repz
inc
pop
cmp
dec
sbb
rol
mov
mov
add
fcoms
ficoml
cld
sub
pop
lods
push
add
je
cs
js
push
mov
jne
repnz
je
push
pop
sub
fcoms
andl
bound
inc
mov
fs
pop
or
pop
test
adc
lock
js
sbb
andb
pushl
pop
mov
cwtl
mov
mov
pop
inc
mov
mov
push
mov
inc
xor
xor
and
in
jp
push
lds
jmp
mov
shll
fldl
push
dec
or
pop
stos
shrb
nop
cmp
fldt
lret
mov
jmp
xchg
sbb
scas
add
out
adc
imul
xor
pop
push
and
mov
ret
mov
push
xor
jmp
sub
jne
rolb
clc
jge
or
mov
fstpl
mov
inc
dec
test
movsbl
sub
or
cmp
inc
addr16
shl
add
push
xchg
lret
push
and
xor
lods
dec
arpl
jp
shrb
push
push
cli
fisubrs
add
sub
out
xlat
dec
mov
adc
cmpsb
aam
ret
jne
mov
sbb
add
mov
xchg
sub
adc
fsub
or
xor
loopne
and
mov
pop
dec
jae
movsl
mov
sbbl
adcb
add
xchg
ljmp
adcb
das
or
push
push
push
xchg
xchg
xchg
sbb
in
sti
addr16
loopne
mov
push
adc
dec
dec
stos
or
inc
pop
add
gs
xchg
and
notb
rcrb
mov
dec
dec
loope
sub
adc
jmp
mov
xchg
into
add
adc
sbb
ja
xchg
jmp
add
call
sti
cmp
push
dec
jge
lea
push
dec
cmc
xor
sub
or
fldenv
sahf
cld
and
xor
mov
pop
cwtl
sbb
aam
sbb
and
and
add
inc
mov
mov
sub
sub
mov
scas
mov
jo
jne
cld
cmp
fcomps
dec
xor
xor
cmpb
mov
sarl
xchg
and
sbb
jbe
inc
pop
adc
pop
adc
push
dec
cmpsb
pusha
rcrb
add
mov
lret
adcl
aaa
add
lahf
sub
pop
add
adc
and
push
shrb
cmp
sub
push
cmc
int
fdivrs
pop
mov
inc
mov
push
insl
or
xchg
xor
mov
and
add
push
jecxz
or
add
mov
jle
pop
jne
ret
adc
pop
push
cltd
out
and
or
dec
push
negb
mov
sbb
pop
xchg
enter
lahf
or
lock
push
mov
add
or
inc
mov
or
cmc
sub
push
leave
cs
call
or
sub
fdivl
xorl
pop
jle
jb
xchg
sbbl
mov
repz
add
push
repnz
stos
and
rorl
mov
jp
add
and
mov
add
incl
pop
sub
pop
pop
and
push
test
xor
xchg
cwtl
fs
inc
xor
mov
inc
cltd
enter
lock
frstpm(287
push
nop
cmp
sbbl
and
add
jno
mov
push
sub
hlt
xor
lock
pop
push
cltd
dec
repnz
dec
add
add
xchg
or
push
nop
push
xor
fisubl
sub
ret
push
and
pop
aam
aaa
xchg
push
adc
sub
xor
jmp
addb
sbb
pushf
rolb
daa
add
jmp
adc
and
xor
adc
gs
or
sbb
movb
add
and
pop
icebp
cmp
mov
cmpsl
mov
je
push
push
sbb
mov
push
lods
int3
cs
inc
or
and
mov
vandnps
pop
or
xchg
mov
js
movsb
adc
push
inc
dec
clc
imul
inc
add
jb
push
or
inc
add
fldenv
shld
sysexit
dec
subb
sbb
push
dec
push
shl
out
dec
or
punpckhbw
xchg
xor
leave
enter
push
sbb
cs
or
and
inc
add
insb
insb
ss
inc
call
pop
js
into
mov
jo
mov
xor
scas
add
jl
loope
cmpsl
ds
sub
mov
js
xchg
addl
or
add
rorl
icebp
mov
ficoms
inc
push
pop
jns
mov
movsb
fidivl
jno
mov
dec
xlat
pop
cmp
out
or
add
cmp
or
nop
test
roll
push
and
xor
push
cmp
lcall
add
pop
sbb
dec
mov
or
mov
lock
lods
xor
dec
sbb
loop
mov
je
add
push
jo
and
add
imul
adc
mov
cmpl
push
xor
outsl
cmpsl
je
mov
jg
jne
ret
push
jb
popa
aas
dec
popa
push
js
cmp
sub
or
sbb
ret
sbb
enter
add
cli
lods
adc
loope
pusha
xor
push
push
nop
sbb
gs
call
sub
or
out
pop
subb
fdivl
cld
adc
dec
pop
add
rcr
loope
sub
fistpl
adc
inc
sub
test
std
cmp
jb
pop
pop
cwtl
jg
xchg
pop
cwtl
data16
push
inc
push
orb
jl
inc
sub
dec
stos
add
pop
mov
shlb
jb
mov
mov
add
jle
mov
in
decl
mov
sub
imul
add
in
fisttps
push
cmpb
clc
ss
clc
sub
or
jge
lret
mov
or
out
cmp
mov
mov
rcll
dec
or
pusha
loope
bound
sub
sub
lea
add
pop
push
push
push
push
loop
dec
mov
ds
xchg
ss
mov
inc
and
test
lret
sub
add
add
push
movb
mov
jo
stos
cwtl
cmp
add
fsubr
lds
dec
pop
sarl
andb
sti
cmpb
pusha
mov
js
jg
shlb
hlt
sbb
cmp
aas
adcl
mov
sbb
mov
xor
and
or
and
sbb
adcl
lcall
in
mov
mov
aas
sahf
push
sbb
rolb
cltd
lds
push
movsb
sbb
push
add
aas
scas
lea
jmp
mov
mov
dec
sub
mov
aam
push
rorl
ret
add
sub
cmpsl
js
nop
sbbb
inc
push
leave
or
pop
cmp
ss
pop
stc
adc
sub
shl
or
adc
inc
loope
mov
add
dec
shll
push
enter
push
lods
xchg
ret
cmpsl
ret
push
jo
insb
mov
test
outsl
add
shll
nop
repnz
inc
dec
or
or
jnp
and
inc
push
imul
mov
in
add
sub
dec
call
cmp
sub
push
add
add
cmp
loopne
movl
push
mov
rolb
shll
add
cmpl
dec
or
add
testl
mov
sqrtps
lock
xor
sub
aad
push
push
dec
mov
mov
ds
or
adc
push
es
push
and
and
sbb
or
mov
roll
cmp
es
push
inc
mov
cmp
xor
push
xchg
loopne
cld
shlb
mov
xchg
mov
lret
adc
xor
mov
xor
mov
dec
add
shll
mov
cmpb
xchg
les
cwtl
fbld
xor
sbb
cwtl
out
pop
iret
inc
adc
rorl
mov
add
add
std
jnp
iret
push
shrl
push
je
popf
sbbb
mov
or
addb
xor
ja
mov
xor
idivb
cld
add
dec
repnz
sbb
sbb
add
and
sub
and
cmpl
push
xor
xlat
or
fisubs
int3
xor
push
xorl
cld
nop
inc
and
mov
xor
push
mov
rclb
ret
pop
aaa
pop
rorl
dec
add
or
push
adc
pop
lods
adc
pop
push
push
inc
inc
jg
push
inc
out
cmc
xor
xor
jg
cwtl
mov
xrelease
movl
adc
in
and
mov
add
sarb
add
cwtl
ret
push
mov
or
in
xor
add
pushf
popa
pop
aaa
inc
dec
inc
js
or
dec
mov
adc
jno
test
fisttpl
lret
dec
rolb
test
bound
cmp
jae
and
ret
or
sbb
adc
push
mov
lea
mov
jmp
xor
push
mov
cmp
sub
or
xchg
xchg
push
jle
pop
cmp
sub
push
inc
jl
mov
sub
test
xor
cmp
test
dec
movsl
and
movl
sti
subb
pop
ret
sub
rcr
movb
imul
rorl
clc
adc
and
sub
aas
mov
mov
fists
cmp
lea
jne
push
push
jl
jb
push
cld
inc
inc
jl
cmpsb
mov
mov
xor
or
dec
push
js
push
scas
pop
or
adc
add
add
or
cli
call
inc
sub
pop
sahf
mov
jp
cmpsb
add
movl
je
push
outsb
sbb
jl
test
cmp
nop
or
mov
sbb
unpcklps
loop
std
movsb
insb
push
dec
xchg
push
out
aam
mov
xchg
or
pop
pop
movsl
mov
push
mov
pop
arpl
xchg
movb
pop
es
push
cs
js
movsb
lock
sbb
inc
add
mov
push
push
xchg
add
inc
or
sbb
mov
test
mov
adc
lods
fnstcw
test
sbb
push
mov
fidivrl
rorb
sub
mov
xor
xchg
ljmp
sub
loopne
daa
and
popa
xor
pop
mov
movl
test
add
inc
inc
or
sbb
push
inc
das
add
dec
or
shl
pop
sbb
xchg
or
hlt
fistpll
fdiv
xchg
sbb
sbb
ja
push
cmpsb
sub
hlt
inc
js
mov
or
mov
inc
push
fistpll
mov
mov
loope
sahf
sub
ret
pushl
sbb
mov
rorl
imul
cmc
test
test
and
add
push
jl
jl,pn
in
cmp
cmp
or
imul
je
or
add
cmp
push
add
les
in
popf
jb
aam
mov
dec
xor
mov
inc
xor
roll
cmp
jno
sub
add
vmulpd
loope
inc
mov
add
dec
dec
iret
andl
cmovs
push
and
push
push
jmp
call
and
jmp
sarl
dec
sti
xchg
cmpsl
pop
xor
dec
add
sub
add
xchg
mov
lcall
scas
mov
mov
orb
pop
or
xchg
xchg
dec
adc
xlat
jns
shlb
or
dec
mov
mov
inc
mov
sahf
jmp
jae
call
jl
mov
jb
and
lahf
mov
mov
dec
rcll
mov
sbb
rolb
hlt
dec
subl
js
dec
ljmp
lods
dec
adc
push
add
xchg
sbb
adc
pusha
pop
mov
aad
insl
ret
xchg
es
sbb
ss
mov
lods
cmpsl
shrb
push
notb
add
cmpl
mov
mov
mov
push
outsb
je
add
xorl
or
jo
and
push
and
lods
movsb
sub
adc
push
pop
inc
add
adc
enter
jmp
dec
mov
je
repz
lea
or
pop
or
sub
enter
adc
cmc
pop
or
push
push
mov
call
sbb
in
adc
mov
ss
cmp
clc
lock
xor
fdivrl
jle
int
push
and
cs
sbb
je
inc
pop
push
push
xor
fiaddl
cmp
push
sarb
fwait
cmp
pop
cltd
aaa
jo
nop
in
shll
and
xchg
and
and
dec
xlat
xor
sbb
adc
sub
mov
fsubrs
push
pop
popf
mov
and
loopne
mov
pop
mov
mov
xor
sub
lahf
mov
sub
xchg
or
gs
push
xchg
push
sarb
mov
das
imul
je
xor
sub
adc
adc
jns
in
enter
outsl
adc
adcl
test
mov
loope
loope
loop
out
xlat
mov
push
mov
cmp
jle
je
mulb
rorb
loopne
xchg
shlb
sbb
out
inc
mov
test
or
push
outsl
jne
fistpl
mov
lret
adc
and
adc
addr16
or
pop
mov
in
inc
sbb
pop
jmp
xchg
lret
adc
and
jo
fldl
mov
jmp
adc
or
or
sbb
dec
dec
in
push
jmp
int3
ljmp
jno
xchg
dec
add
and
cmp
sti
inc
adc
shll
enter
inc
mov
cmp
sarb
and
adc
jge
popf
sub
xor
lcall
add
add
int
imul
mov
test
jle
cmp
xor
cmp
mov
push
fstpt
sbb
rclb
pop
mov
insb
adc
iret
inc
je
push
sbb
lds
pop
mov
push
xor
xor
fdivs
and
adc
lods
xor
or
je
add
dec
mov
bound
sbb
sbb
cmp
aad
les
add
inc
dec
adc
mov
pop
adc
lret
jo
rorl
popa
pushf
inc
inc
push
push
ss
xor
add
and
rcrl
inc
push
sbb
mov
pop
call
cwtl
lods
inc
imul
ret
inc
inc
push
push
push
xor
fisubl
je
add
lcall
xchg
pop
push
pop
mov
out
inc
and
mov
lcall
xor
sbb
dec
and
popa
inc
or
cmp
and
push
and
and
jp
adc
push
pop
sahf
scas
adc
dec
nop
xchg
sub
push
jmp
ss
shlb
repz
add
cmp
mov
cltd
shlb
xor
pop
jb
mov
pop
pop
cmpsl
mov
xor
push
adc
add
cltd
in
dec
jne
pop
mov
and
mov
dec
in
add
pop
sub
shrl
pop
mov
inc
add
mov
ljmp
lods
mov
or
inc
sbb
jno
push
and
push
sbb
xchg
je
pop
das
out
mov
jl
test
mov
jle
add
testb
sbb
loop
sbb
xor
mov
and
mov
add
xor
mov
pop
lret
das
clc
cld
push
movb
push
push
xor
push
fwait
jmp
mov
hlt
adc
or
xor
roll
icebp
adc
push
and
outsl
sub
mov
mov
sbb
add
and
xor
or
adc
test
cltd
cmp
xchg
test
cmp
enter
jae
js
lock
aaa
adc
mov
jns
pop
pop
push
ds
mov
repz
sub
mov
mov
push
addr16
cmpsb
xchg
push
add
sbb
jmp
shlb
pusha
and
rcrb
stos
insb
pusha
or
roll
xchg
ss
fnsave
push
pop
mov
push
add
fstps
mov
or
pusha
adc
les
push
pop
int3
add
dec
xor
sub
mov
pop
int
mov
in
lock
xchg
orl
and
cltd
ds
fdivrs
or
add
push
add
in
roll
cmp
fsubs
add
pop
pop
insb
xor
sub
add
es
xor
ret
cmp
push
cmp
xorl
cmp
leave
out
nop
out
push
sbb
mov
xchg
push
sub
ficomps
in
pop
jo
add
sub
inc
sub
and
or
pusha
in
and
sbb
cltd
lcall
push
add
xchg
inc
push
add
fs
and
inc
pusha
or
mov
sahf
xor
pop
mov
iret
adc
or
stos
movsl
nop
repnz
inc
es
push
shl
inc
stc
sbb
push
inc
or
push
or
pusha
mov
sub
jge
xchg
jae
pop
rcrb
sub
js
mov
add
add
mov
or
loope
inc
js
push
insb
jmp
sub
push
push
xlat
xchg
lods
mov
adc
scas
push
xchg
pusha
mov
or
testl
leave
sbb
insb
and
push
push
add
test
test
je
les
into
cmp
std
pop
push
xchg
xchg
and
push
or
sub
cmp
loopne
mov
roll
sub
and
xlat
mov
add
mov
or
test
enter
pop
pusha
cltd
mov
xchg
lock
push
jae
pop
and
xchg
adc
push
dec
sub
sbb
and
inc
adc
int3
mov
sub
repz
and
bound
and
push
sbb
loopne
nop
sahf
pop
test
and
hlt
lock
test
xor
aam
add
aam
and
int
add
jl
jge
pop
std
adc
adc
aam
sub
fildll
mov
push
and
add
sub
test
insb
not
xor
xchg
sahf
and
add
call
jl
mov
push
lea
sbb
sub
mov
jge
push
sbbb
xor
shlb
xor
jno
mov
xchg
jmp
stos
fstl
jmp
lea
mov
popa
pop
repnz
push
aaa
sbb
adc
popa
clc
addb
cmpb
je
inc
inc
add
push
call
fiadds
sbb
imul
sub
orb
push
mov
ret
or
and
aas
add
addl
dec
loopne
shrb
inc
loope
add
push
jbe
pop
sub
mov
sahf
cld
sbb
popa
in
inc
adc
or
sbb
pop
movsb
addr16
pushf
mov
jbe
hlt
cli
push
push
adc
hlt
js
sbb
inc
into
jns,pn
lods
imul
in
push
mov
adc
call
sbb
shrl
sub
imul
inc
inc
stc
inc
scas
adc
and
repz
gs
lods
add
and
adc
push
or
or
pop
arpl
rolb
pop
push
and
test
push
and
sub
movsb
push
mov
popl
je
orl
xchg
aam
or
dec
adc
adc
xchg
pop
mov
jnp
jmp
mov
je
pop
mov
mov
cmp
pop
aaa
xor
pop
popf
sbb
wrmsr
adc
adc
cmp
and
pushf
pop
cmp
inc
cmp
adc
mov
adc
pusha
out
adc
mov
adc
pop
cmp
mov
js
in
fdiv
in
jg
sbb
push
mov
shr
adc
dec
sub
mov
push
rcll
push
ljmp
cmpsb
ljmp
mov
inc
testl
jne
lds
leave
xchg
pop
pop
push
and
cmp
push
inc
sbb
cmp
mov
sub
dec
stos
mov
pop
inc
dec
mov
pop
cmpsl
xchg
xchg
push
cld
adc
push
scas
pusha
push
or
nop
pop
or
aam
stc
dec
mov
je
mov
cmpb
or
adc
ss
jno
push
roll
notb
add
push
and
mov
add
xorb
jl
adc
lds
mov
adc
jmp
jne
cmc
ret
add
jmp
daa
inc
sub
and
sub
adc
clc
std
sbb
mov
inc
pusha
cmp
xchg
das
or
mov
add
sub
cmpsb
je
mov
movl
inc
sub
pop
inc
add
les
fdivrl
cmpb
punpckldq
mov
mov
lahf
add
push
test
adc
push
inc
cld
dec
adc
cmp
je
icebp
mov
movb
push
pop
sarl
call
adc
fistpl
push
sub
ret
or
ja
mov
push
jg
push
xchg
add
fbstp
mov
adc
fs
mov
rclb
mov
jbe
test
stos
decb
call
mov
pop
scas
xor
add
movsb
xor
aas
jl
clc
sbb
push
xor
sbb
inc
jl
xchg
pop
jecxz
ret
add
dec
cltd
shl
daa
fadds
push
sbb
cmp
es
cs
push
movsb
call
adc
je
lret
mov
push
add
ret
lods
es
adc
inc
mov
pop
clc
jg
repz
push
lea
push
inc
push
and
and
and
sbb
adc
dec
push
pop
inc
js
jno
jecxz
cmp
push
adc
hlt
inc
fnsave
int
mov
dec
inc
test
pop
xchg
mov
adc
or
addb
movsb
fdivl
faddl
aas
xchg
in
sub
push
pop
inc
hlt
and
movsb
jnp
out
add
push
inc
aad
and
lock
or
push
sbb
sbb
and
fldt
pop
scas
fcoml
jmp
in
repnz
lods
or
push
push
or
call
push
arpl
stc
add
cmpsl
or
js
dec
loop
hlt
rorb
dec
adc
push
enter
outsb
cmpb
jne
movsl
test
xchg
xor
dec
or
or
shl
loopne
inc
cmpsb
cld
sbb
aam
push
sbb
and
inc
movsb
cwtl
and
sbb
jno
sbb
imul
inc
dec
or
jmp
xchg
or
setno
xchg
push
pop
xor
xor
xor
mov
cld
and
nop
or
outsb
int3
dec
cmp
xchg
cmp
test
and
insb
jle
xor
mov
mov
lds
imul
add
ja
fldl
adc
mov
test
and
xor
mov
inc
add
fisubrs
dec
aad
mov
xchg
out
jbe
ret
lea
mov
test
cltd
clc
fdivs
ret
rorb
dec
lret
lock
rolb
fstps
enter
push
and
mov
push
std
daa
out
sub
push
add
scas
lock
jne
sbb
and
lret
imul
js
push
stc
jns
add
xchg
scas
add
and
sub
sub
push
inc
popa
sarb
push
call
cmp
inc
lcall
loope
lods
xchg
and
or
mov
mov
push
push
enter
clc
clc
cmp
push
inc
push
xor
lods
mov
sbbb
mov
push
inc
pop
rorl
or
rcll
aad
sub
adc
sub
enter
sub
adc
shlb
sar
sbb
xchg
shlb
orl
adc
dec
dec
cmp
xor
xchg
or
inc
add
dec
cltd
movsb
or
mov
dec
push
adc
and
push
jecxz
push
jb
or
xorl
push
or
or
lret
pop
test
adc
mov
das
jne
addl
test
xchg
test
inc
cwtl
mov
push
loopne
or
cmpsb
fadd
jmp
push
or
ret
or
ljmp
mov
movsb
dec
outsb
out
and
les
jecxz
mov
sbb
mov
cmp
test
scas
cmpb
or
add
repnz
test
mov
outsl
rorb
pusha
inc
adc
cmpl
mov
or
stc
call
adc
out
sub
and
and
jns
xchg
adc
arpl
and
sub
dec
imul
sbb
mov
ret
pop
arpl
cmp
hlt
inc
mov
popf
loopne
test
ret
pusha
bound
xor
es
hlt
push
rclb
adc
out
or
fsubr
pop
mov
in
dec
cvttps2pi
repz
sub
loopne
hlt
add
dec
jne
dec
leave
outsb
dec
jnp,pt
push
pusha
nop
sbb
jbe
and
xor
mov
sti
repz
mov
pop
inc
sbbl
push
mov
mov
adc
mov
adc
sbb
push
and
and
mov
sbb
push
fimuls
or
cmp
push
adc
lret
adc
push
add
sbb
inc
add
inc
sbb
mov
xor
inc
adc
pop
inc
add
add
push
jge
sbb
lock
inc
in
push
shlb
or
inc
stos
daa
fisubs
xchg
fisttps
push
pusha
out
add
push
faddp
xor
aas
and
cmp
imul
xor
sbb
into
sbb
or
push
cltd
add
enter
jge
mov
add
adc
push
jbe
xor
addl
sbb
xchg
rolb
and
aam
sbb
and
cmp
push
dec
pop
repnz
push
je
pop
pop
mov
incb
shlb
mov
push
test
inc
hlt
movsb
or
and
lea
sbbl
dec
fstps
inc
pop
stos
push
in
dec
sub
inc
add
jns
sbb
imul
pop
add
xchg
pop
mov
std
add
dec
adc
pop
sub
movsl
ss
fidivrl
inc
mov
rcrb
sbb
icebp
lret
insb
push
xorl
mov
scas
cwtl
rorl
add
push
and
ss
outsl
fisttpll
cltd
ffree
mov
loope
mov
adc
pop
mov
add
dec
xor
nop
xchg
or
mov
inc
popa
adc
dec
add
rolb
addr16
fistl
push
push
inc
push
mov
mov
xchg
sbb
xchg
js
push
dec
jmp
js
js
cltd
in
ja
mov
sbb
aam
push
push
adc
dec
dec
pop
cs
adc
add
fdivrl
call
mov
ret
lahf
dec
sbb
fmuls
pop
or
push
pop
es
and
lea
push
outsl
rolb
aaa
xor
dec
loope
jge
sbb
mov
subl
addr16
and
or
pop
inc
or
clc
push
int3
enter
in
or
pop
imul
jo
lret
loopne
add
mov
push
fcoms
push
mov
fsubr
adc
jge
dec
mov
inc
loopne
or
add
xor
xchg
hlt
mov
lret
dec
lcall
fadds
pop
dec
aam
xor
ret
mov
test
sub
cli
inc
sbb
adc
scas
or
mov
push
or
addl
int3
imul
sarb
enter
enter
int3
add
inc
add
mov
test
jle
jg
sbb
xchg
push
divl
and
adc
pop
pop
movsl
daa
mov
and
fstl
and
push
lsl
loopne
cmp
ret
sbb
scas
test
push
adc
push
rorb
push
pop
add
add
aad
xor
cltd
and
inc
dec
out
or
insb
add
jl
adc
xor
jp
sbb
lret
or
jno
mov
pushf
cmp
adc
and
aad
or
sbb
push
and
jnp
repz
cwtl
adc
sbb
and
add
sbb
adc
adc
lock
test
jecxz
addl
pop
cmp
pop
pop
mov
xchg
add
cmpsb
mov
or
jb
jne
cmp
aaa
inc
add
mov
push
sbb
pop
pop
cwtl
test
push
fisttps
xor
sbb
scas
shlb
es
push
push
or
jae
sbb
mov
ret
fidivrs
ja
sbb
xchg
or
xchg
loope
xor
mov
jge
test
mov
rolb
cmp
xchg
bound
fsubs
and
mov
cmpsl
mov
xchg
inc
pusha
ljmp
or
cmp
jl
jmp
pushf
es
lcall
or
or
icebp
in
fisubrs
mov
push
push
inc
ret
pop
mov
and
sti
jbe
repnz
xchg
sbb
sbb
or
nop
add
and
or
add
inc
hlt
lea
jo
aas
ret
repz
jae
add
loope
outsb
cltd
mov
sub
rclb
mul
mov
and
iret
sub
push
xor
cli
js
sbb
das
mov
mov
sub
std
mov
je
jmp
inc
cmp
mov
cmp
adc
dec
rolb
add
inc
jne
dec
sub
mov
or
mov
pusha
mov
adc
adc
dec
negb
add
add
inc
xchg
mov
pop
mov
adc
xor
push
mov
or
push
and
and
mov
lcall
repz
push
dec
js
push
xchg
push
in
push
in
jecxz
sbb
mov
dec
inc
clc
rcrb
jns
mov
fdivp
insb
or
mov
ficoms
dec
and
mov
enter
xchg
cs
push
add
mov
mov
mov
hlt
es
fs
add
gs
inc
add
pusha
sub
xchg
xor
js
pop
pop
pop
add
add
shll
cmp
inc
xchg
push
pop
add
out
enter
negb
add
test
rorb
cmpsb
mov
es
hlt
pop
adc
clc
lcall
sub
cltd
dec
sub
xor
and
mov
ret
cli
scas
pop
cmp
add
ds
nop
adc
scas
pop
or
xchg
jmp
rorb
push
xchg
popf
lods
sub
clc
and
dec
loope
fs
ret
add
enter
dec
xor
inc
mov
adc
mov
inc
lea
cs
push
pop
push
sarb
stos
fstpt
mov
inc
cmp
adc
push
sub
pop
sbb
add
pusha
leave
pop
cmp
add
adcl
push
cmp
mov
mov
mov
adc
mov
sbb
push
or
and
mov
push
mov
inc
or
shlb
sbb
jb
xorb
cltd
cmp
jae
mov
sub
lea
jmp
xor
adc
mulb
xor
ja
push
push
push
sub
xchg
xchg
xor
or
mov
lods
call
jmp
ret
jg
mov
in
cmp
mov
fstpt
outsb
add
das
inc
imul
pop
ss
andps
add
cmp
jl
pop
ds
jle
add
outsb
mov
mov
aaa
add
hlt
push
pop
mov
or
lcall
adc
push
movb
enter
mov
add
push
push
aas
sub
push
sbb
push
dec
add
xor
mov
lock
loop
adc
inc
jle
mov
dec
or
pop
sbbb
cmc
adc
mov
ds
mov
loop
mov
and
ds
jecxz
push
fs
stos
sbb
sbb
in
adc
lods
call
in
loopne
fisubl
xor
cs
push
mov
adc
adc
adc
in
lock
ret
or
cmp
mov
add
add
ljmp
jcxz
in
cmp
arpl
fnsave
mov
adc
jnp
aam
sub
push
or
out
add
nop
push
out
mov
js
and
hlt
inc
pop
in
dec
add
lret
sub
mov
aas
inc
push
push
push
dec
or
roll
cmp
clc
push
xor
jle
and
push
test
xchg
insb
pop
pop
or
dec
or
mov
call
lock
pop
aaa
das
xchg
mov
inc
ficoms
rorl
push
sbb
adc
pop
dec
mov
adc
fsts
loop
aas
xchg
scas
pop
pop
mov
addb
in
leave
outsb
daa
sbb
push
popa
or
cmc
push
lods
cmpsl
addb
lahf
dec
mov
jo
sub
mov
movsb
jle
test
push
repnz
or
or
inc
out
cld
inc
and
jb
lea
je
and
mul
xchg
jge
sub
sub
sahf
int
add
adc
lds
or
nop
mov
or
xchg
cmpsl
shlb
ja
or
arpl
arpl
mov
sbb
andb
xor
mov
add
sbb
xor
cld
jae
enter
mov
rorb
jmp
jle
ds
insl
loopne
push
push
adc
and
ja
in
push
sahf
or
add
jp
mov
insb
mov
enter
add
add
inc
xor
jge
sub
clc
andb
mov
mov
inc
or
loope
pop
mov
lock
jnp
jo
and
rolb
sahf
stos
jbe
in
dec
adc
stos
in
dec
adc
imul
adc
into
outsb
ljmp
ja
pusha
leave
adc
mov
incl
jb
push
not
std
xor
aaa
inc
sbb
cmp
mov
jl
jmp
shr
dec
xchg
dec
jecxz
and
mov
and
add
jns
and
dec
cmp
out
and
cmpsb
or
mov
add
mov
push
and
mov
adc
loop
ret
filds
and
push
enter
push
pop
dec
pop
aad
lcall
and
or
add
inc
sub
dec
add
add
and
and
push
push
nop
pop
sub
xchg
add
add
sub
dec
gs
inc
or
inc
push
push
push
nop
lret
adc
and
clc
cmpsb
nop
push
sbb
inc
cld
lea
sub
adc
adc
xchg
test
les
enter
enter
fcomp
arpl
js
add
dec
mov
or
lcall
fsubr
mov
fisubrs
push
movl
sbb
xor
aas
popa
lret
enter
add
rorl
fwait
inc
repnz
adc
cmp
adc
and
pop
push
xchg
inc
mov
orb
add
mov
sbb
sub
dec
sbb
pop
sub
xchg
rclb
int3
imul
and
cmpsl
popf
sbb
aad
pop
insb
pcmpeqw
push
push
add
mov
dec
movsb
sbb
or
dec
lcall
mov
lcall
sub
movsb
sbb
and
sbb
add
dec
lcall
mov
add
inc
dec
pop
inc
adc
sub
in
pop
add
stos
cld
add
add
add
inc
ror
ja
pop
dec
js
fldcw
mov
inc
cmp
mov
pop
pop
js
ror
add
mov
or
inc
pop
add
sbb
pop
shlb
stos
sbb
add
mov
std
jne
orl
and
jl
xchg
and
mov
fdivl
sarb
lea
aam
lcall
adc
sbb
jmp
push
cmp
push
rolb
fs
sbbl
addb
mov
cmp
andb
adc
adc
sbb
cmpsl
add
roll
add
xchg
lods
add
push
out
and
or
cmp
pop
add
nop
xor
loope
sbb
sub
sub
sbb
mov
sbb
cs
popa
pusha
and
add
jmp
icebp
jb
test
fwait
inc
mov
adc
mov
nop
sub
push
and
xor
ss
sbb
sbb
inc
push
lret
sbb
sbb
mov
push
xor
lock
mov
es
cmp
jge
push
push
push
movsl
cmpsl
repz
push
sub
es
pop
push
or
cmp
stos
push
sbb
mov
and
xchg
inc
cmp
ret
in
and
sbb
js
add
push
push
mov
add
sub
test
int3
cld
inc
add
jmp
stos
cmp
or
inc
repnz
or
sub
popa
xlat
add
rcl
sbb
sbb
sbb
sbb
adc
sbb
adc
add
pop
push
mov
rcll
push
sbb
push
adc
add
sub
fcompl
loope
and
lahf
push
hlt
sti
adc
aam
push
mov
lahf
push
leave
adc
adc
inc
leave
add
shrb
je
insb
jo
push
pop
mov
pop
aam
add
flds
mov
clc
add
sub
fisubs
jbe
orl
addl
add
loopew
ljmp
mov
nop
pop
dec
push
push
and
cld
cmp
mov
inc
xchg
scas
xchg
sub
fprem
pop
les
add
ret
les
push
loopne
lds
call
or
in
out
push
or
push
nop
push
sbb
add
push
scas
fnstsw
mov
int
xor
popa
je
mov
cmp
add
test
sub
mov
pop
hlt
call
jo
popa
outsb
inc
test
mov
inc
call
js
test
insl
or
add
jle
pop
jge
add
dec
mov
push
sti
push
cld
addb
and
add
fisubs
inc
cld
mov
fcoml
cmp
sub
popa
adc
es
mov
aad
cmp
push
lods
call
push
nop
push
loopne
loopne
outsl
dec
fsub
push
push
mov
dec
in
push
pop
inc
push
xchg
adc
inc
in
test
push
or
in
and
dec
shr
aam
jle
arpl
xlat
lea
add
ss
inc
hlt
push
inc
ret
sbb
pusha
shlb
xlat
sarb
ret
mov
inc
fisttpl
loopne
push
call
pop
add
lret
pop
adc
shlb
push
pop
or
subb
inc
cmc
mov
test
fs
and
sub
sbb
notb
mov
addr16
aas
xchg
push
inc
aas
push
cmpb
daa
push
jne
push
ficoml
cld
movb
bound
xor
bound
cmp
or
lea
nop
hlt
push
adc
sub
lea
cwtl
adc
jnp
pushf
jmp
lea
dec
xor
orl
pop
in
adc
or
and
or
cwtl
enter
loop
push
xor
add
mov
lock
push
sbb
jge
jae
push
inc
sbb
sti
jmp
mov
push
shr
mov
enter
push
mov
rcll
adc
push
ja
push
sub
and
mov
sub
and
lods
mov
push
adc
sub
or
xor
add
sbbb
push
fwait
daa
adc
insl
fs
inc
dec
and
inc
or
xchg
push
pushf
jo
push
rol
inc
fisubl
mov
or
lret
fcomps
insb
cmp
int
and
ret
shll
jmp
push
imul
outsb
dec
or
or
adc
bound
inc
out
mov
and
xlat
jb
loopne
leave
inc
cmp
add
movmskps
xorb
add
scas
mov
dec
inc
and
rcrl
adc
popl
inc
push
cvttps2pi
sbb
xchg
dec
adc
and
sbb
loope
mov
adc
adc
or
insb
push
roll
bound
pop
sahf
dec
insb
cmp
test
inc
filds
adc
sbb
addb
ja
or
inc
and
inc
fadds
mov
inc
inc
data16
cmp
or
jo
adc
jo
js
add
xchg
stos
and
mov
sbb
adc
inc
insb
sbb
cmp
dec
iret
add
xchg
push
inc
mov
adcb
mov
xchg
or
or
pop
lock
mov
xchg
ds
pop
mov
jl
fs
sbb
push
les
lods
push
adc
inc
enter
pop
cmp
icebp
int
movsb
cmp
xor
inc
push
dec
sbb
leave
add
sbb
int
pop
dec
and
adc
pusha
xor
xchg
sbb
push
cs
cmp
cmp
ljmp
cmp
gs
push
xor
dec
lcall
push
addb
sbb
fs
fcmovnb
push
ret
aad
push
dec
cmp
enter
imul
movsl
test
fs
pop
pop
sbb
sbb
popa
xchg
adc
jns
jb
ja
push
inc
filds
add
mov
jge
out
pop
and
add
or
push
add
fs
pusha
pusha
xchg
dec
mov
add
push
and
push
add
imul
cmpsl
push
and
fimull
cmp
cmp
fidivrl
lret
lea
lods
push
stos
aad
shlb
pop
lea
add
xchg
mov
jbe
and
dec
insb
push
loop
xchg
fdivrl
jmp
dec
jl
cmp
and
lea
sbb
add
push
orl
sub
test
push
outsl
push
mov
or
jmp
push
repz
xlat
fmul
cmp
mov
cs
stos
inc
js
es
add
icebp
inc
sbb
adc
cmp
xor
push
jns
xor
inc
inc
cmpsb
lret
sbb
add
cmpsl
jno
adc
sbb
and
clc
jl
mov
add
sbbb
dec
popf
inc
stos
sbb
test
jne
mov
jmp
loope
lret
cmp
push
and
enter
xchg
rorb
dec
aas
addl
jg
push
add
xchg
mov
rclb
test
movsb
stos
lea
cmp
or
sub
xor
pop
lods
or
or
pop
dec
ror
lea
xor
xor
es
inc
dec
add
mov
push
adc
call
dec
jl
mull
jecxz
push
nop
dec
test
das
in
adc
aas
or
adc
jns
push
insb
icebp
push
ljmp
es
repnz
pop
adc
xor
xor
xor
cmp
xor
nop
aaa
xchg
push
mov
pop
inc
inc
sub
add
cmp
mov
xor
lea
ret
or
loop
in
dec
fidivrl
lret
aad
and
movl
aas
fsubrl
mov
pop
and
mov
ja
aas
add
cmp
jl
adcl
xchg
adc
cmp
push
mov
sub
jno
pop
pop
or
lea
int
rolb
nop
add
rolb
clc
or
sarb
nop
xchg
dec
adc
sbb
or
push
jmp
or
lods
sarb
je
nop
popf
pop
or
xchg
fiadds
push
sub
lahf
ss
jne
inc
jp
or
xor
inc
test
nop
pop
sahf
or
dec
lock
mov
test
jbe
lods
lahf
dec
mov
cmp
adc
cld
hlt
shlb
dec
push
push
pop
insb
pop
iret
mov
imulb
movsl
and
incl
mov
sub
cmp
test
and
adc
mov
pop
and
daa
adc
cmp
stos
push
pop
sub
iret
loopne
shll
and
and
pusha
or
push
fistpll
push
adc
mov
mov
aad
pop
aam
sbbl
repnz
lds
outsb
hlt
adc
pop
add
inc
shrb
lret
andb
jo
and
inc
or
or
inc
lock
lahf
and
ljmp
mov
dec
and
sub
xor
dec
xchg
add
sbb
or
mov
imul
sbbl
sub
inc
cmp
sbb
pusha
cli
cs
je
or
mov
mov
inc
dec
les
push
cli
xchg
je
popa
sbbl
pusha
daa
add
dec
arpl
fwait
mov
out
push
lock
orb
pushw
pop
jo
orb
cmp
test
or
mov
add
mov
outsb
xchg
mov
sub
jae
mov
popf
add
je
push
jo
pop
push
sub
adc
jb
push
enter
enter
pushf
xchg
and
mov
xchg
push
xor
add
and
test
sbb
xchg
subl
js
cmp
lret
jle
cmp
jg
dec
lcall
loopne
cmp
inc
addl
adc
push
add
push
or
pop
shll
dec
jae
add
xor
nop
sbb
mov
push
and
pop
sbb
sub
adc
insb
fs
sbbl
sub
sbb
xorl
add
sub
cli
addl
push
nop
sbb
test
daa
adc
outsb
mov
icebp
ret
movsb
xlat
cmp
test
dec
dec
mov
rep
xor
mov
sbb
or
mov
inc
outsb
or
cmp
adc
pop
push
push
jb
add
or
jl
je
sub
xor
push
in
jl
dec
je
lods
xor
mov
loopne
mov
into
mov
call
jle
push
popa
in
mov
jp
mov
lods
idivl
jmp
cmp
lds
xchg
add
lret
call
les
shrl
add
aaa
xchg
js
aas
inc
add
je
lahf
adc
lods
pop
mov
push
and
dec
add
xchg
psubusw
shrb
xor
or
inc
pop
lea
push
pushf
push
cmp
cli
and
dec
in
test
sub
pop
push
popa
rorb
dec
sub
add
pop
push
push
push
mov
xor
inc
jb
push
mov
push
pop
mov
inc
mov
and
pop
xchg
lea
daa
and
inc
adc
subl
xor
dec
sbb
xor
pop
and
popf
add
insl
adc
pop
sub
add
cmc
add
enter
rcl
push
leave
jne
mov
xor
mov
fldenv
add
inc
add
mov
jae
mov
mov
dec
and
cld
add
ret
das
add
push
add
add
mov
pop
stos
mov
orb
and
cmp
add
mov
or
hlt
mov
xchg
shrb
dec
cld
gs
push
dec
faddl
push
insb
lcall
and
icebp
or
cs
ret
inc
xor
pop
add
mov
or
adc
test
push
leave
ret
orl
adc
mull
lret
push
jmp
add
push
pop
andl
aad
sub
or
mov
clc
push
lret
inc
lock
loopne
jno
inc
add
scas
icebp
or
test
add
dec
je
bound
dec
or
test
push
jns
test
ljmp
push
pop
push
imul
cmp
inc
leave
pop
jle
pusha
adc
icebp
pop
xor
sub
jl
jae
and
imul
rolb
inc
inc
das
inc
mov
mov
dec
xor
std
mov
movsb
cmp
and
call
mov
mov
clc
das
imulb
push
xchg
outsb
roll
mov
in
and
dec
cmp
cmp
push
fs
cmc
push
push
sbb
and
scas
sub
push
popa
sbb
pop
popa
stos
push
push
xchg
jp
sbb
pop
stos
dec
popf
adc
pop
icebp
cmp
inc
xchg
or
inc
and
dec
push
pop
mov
loopne
push
push
xor
stc
cmc
or
and
into
sbb
movzbl
dec
sbb
adc
pop
subb
sub
arpl
pop
lods
mov
pop
push
inc
fs
leave
out
adc
cmp
pusha
cmp
xor
in
xor
iret
sub
jbe
or
push
in
and
sub
scas
and
push
and
imulb
jmp
mov
and
loope
mov
xor
in
ss
loope
cmpsl
movsb
xor
mov
sub
mov
sbb
clc
call
in
ret
jmp
rclb
xchg
inc
loope
jecxz
andl
push
add
inc
cmp
adc
sbb
in
call
push
das
idivb
les
xor
mov
lock
xor
lea
movb
or
add
pop
cmpl
ret
pop
test
or
xchg
push
push
subb
mov
addb
jo
data16
add
cmp
je
adc
pop
arpl
push
testl
loop
add
and
add
sbb
mov
sti
ret
insb
mov
dec
bound
shlb
jb
mov
out
adc
je
mov
push
pop
fisubrl
and
and
ret
cmp
jae
nop
les
mov
out
sbb
enter
icebp
lods
mov
movsl
push
add
insb
jg
rolb
stos
dec
mov
xchg
sbb
push
cmp
mov
js
push
inc
pop
adc
jge
outsl
mov
mov
jmp
fisubrs
and
xchg
xchg
add
push
xor
pop
fisttpll
stos
inc
add
xor
and
call
pop
mov
jnp
adc
mov
push
push
xor
xchg
jnp
push
roll
push
jne
inc
xor
push
xchg
sbb
test
adc
in
dec
mov
imul
movsl
add
dec
cmp
xchg
add
cmpsb
xchg
or
pop
add
cmp
data16
xor
dec
inc
inc
mov
insb
push
push
sbb
pop
add
and
pop
outsl
adc
sbb
xchg
nop
mov
fwait
add
jne
xchg
sub
jne
dec
sbb
test
ficompl
mov
add
pusha
push
adcb
jle
popf
aam
jmp
nop
data16
xor
xor
iret
stc
mov
pop
adc
adc
jmp
cmp
pop
clc
out
jnp
pop
cmp
jne
push
push
jns
shrl
idivl
or
test
repnz
bswap
inc
dec
outsb
pop
xchg
inc
out
adc
fs
jb
insb
pop
xor
jmp
push
hlt
xchg
adc
sub
add
inc
cmp
mov
mov
sub
and
fsubrl
add
push
inc
mov
push
mov
cmp
frstor
jge
jg
mov
dec
adc
into
mov
push
fcoml
sbb
add
cmp
dec
add
inc
ja
lahf
popa
fldl
jge
jl
mov
xchg
pop
sbb
jo
dec
cmp
inc
mov
sub
sub
test
jno
pop
fldenv
dec
xchg
dec
out
mov
lcall
push
js
pop
xor
mov
lret
sub
jb
push
aaa
les
inc
sub
incb
inc
push
inc
add
pop
fistps
divl
mov
push
xchg
push
je
outsb
popa
push
jmp
popl
pop
in
add
sbb
fists
push
push
les
pop
aaa
xor
nop
push
push
stc
insb
aaa
adc
push
cmp
jae
add
pusha
dec
cmp
fidivs
ja
icebp
or
andl
sbb
test
cmp
sub
push
or
repnz
push
in
daa
test
dec
cmp
jle
dec
adc
sub
dec
adc
and
ret
xchg
add
gs
mov
mov
out
and
adc
aaa
jns
xor
scas
cmp
push
add
fcomps
inc
mov
cmp
fs
or
pop
jnp
int
cmp
xchg
in
sub
repnz
jbe
adc
lods
mov
add
pop
or
mov
add
bound
aas
jne
pop
scas
rcrb
ljmp
cmp
adc
jne
sarl
push
push
add
add
inc
mov
sbb
add
test
fistps
iret
jge
movzbl
aad
mov
test
dec
and
popa
mov
push
xor
mov
xchg
pop
jb
or
sbb
dec
fsubrl
pop
aaa
jne
sub
shr
test
mov
cmp
je
sub
push
loope
add
lods
dec
int
jo
sub
push
mov
lds
test
or
shll
loopne
xchg
ds
jbe
push
ds
jbe
sub
push
lcall
cmpsl
dec
xor
mov
pop
mov
lret
jo
sahf
push
and
or
call
xor
shr
or
xor
out
int
add
dec
jae
adcb
inc
pop
mov
mov
mov
rolb
push
std
jo
mov
mov
mov
loopne
xchg
sarl
test
dec
pop
adc
int3
mov
jge
adc
sbb
pusha
mov
adc
jns
cmp
jle
push
jg
rcll
mov
dec
xor
repnz
inc
shr
add
mov
sbb
jae
and
adc
lods
dec
jg
pushl
fdivr
pop
ja
sub
js
jg
add
sbb
pop
mov
cwtl
sbb
dec
pop
mov
mov
jle
mov
movl
xor
or
cmovae
add
or
jne
push
pop
lea
mov
sub
add
test
movsb
xchg
insb
add
loopne
sub
or
inc
rcll
inc
inc
adc
lods
clc
lea
jno
add
mov
lods
sub
sub
xor
mov
mov
push
cmp
out
imul
xor
pop
lea
out
ret
and
fwait
jge
insl
fwait
or
sub
jne
push
js
jl
aas
push
enter
xchg
cmp
and
mov
adc
adc
xor
and
call
adc
sahf
mov
or
testl
jl
dec
and
and
mov
dec
and
push
pop
cmp
jbe
inc
dec
or
sub
and
sub
pop
aam
cmc
jp
mov
or
and
dec
or
scas
xchg
orb
jl
adc
insl
sbb
js
xchg
xor
lods
pusha
je
or
add
pop
insb
cmp
rolb
push
inc
pop
cwtl
dec
ficoml
int3
pop
dec
push
jae
mov
mov
movsb
jmp
inc
and
insl
and
dec
mov
std
ss
sbb
xor
or
pop
scas
or
inc
in
inc
sub
pop
in
inc
adc
adc
pop
test
movsb
and
aaa
push
adc
mov
mov
add
mov
add
pushf
dec
and
sub
push
xor
add
scas
in
sub
jp
jne
cmp
pop
seto
in
test
cmp
or
aaa
leave
out
aad
and
and
fs
dec
mov
push
inc
or
and
sub
shlb
and
mov
fwait
push
das
pop
fnstcw
fwait
sub
jno
inc
inc
xchg
xorb
and
cmpb
mov
add
aam
ror
cmp
cmp
mov
sbb
sub
adc
lea
and
aam
inc
add
cmp
add
jle
or
or
inc
mov
cmp
sbb
inc
pop
cwtl
dec
inc
jbe
dec
sub
inc
or
mov
add
mov
into
cltd
lea
add
xchg
mov
adc
movsl
sbb
pop
lahf
xor
cmp
jae
xchg
push
adcb
jno
xchg
cmp
mov
es
or
and
movsl
or
or
pusha
in
add
ss
mov
mov
lds
mov
ret
pusha
cmp
inc
in
push
in
cmp
in
gs
cmp
adc
inc
xor
pop
pop
cmpl
pop
cs
movsl
popa
cmc
ljmp
arpl
inc
sbb
adc
lea
sub
jnp
and
add
dec
push
imul
inc
inc
movsb
mov
push
inc
mov
sti
inc
dec
sbb
add
xchg
sbb
arpl
aam
imul
test
clc
mov
popa
js
shl
leave
xchg
aam
xchg
xchg
pop
xchg
xchg
mov
mov
xor
mov
test
repnz
adc
adcl
mov
adc
push
jle
or
or
add
push
mov
sbb
adc
dec
cmp
sbb
stos
cmc
inc
inc
je
mov
add
sbb
and
push
cmp
aaa
je
jb
shrb
sub
je
push
orb
das
lea
and
rcll
push
push
add
rcrb
cmp
jmp
inc
fs
nop
shlb
hlt
cmp
lock
dec
mov
test
sbb
xchg
mov
pop
mov
adc
insl
pop
insb
cmpl
sub
sub
mov
cmpsl
sbb
sub
test
inc
xchg
ljmp
mov
in
inc
imul
pop
jo
mov
jecxz
add
jle
add
stc
or
dec
adc
mov
stos
mov
dec
int
jne
sbb
pop
add
sbb
adc
call
ja
or
jne
pop
inc
and
loopne
daa
push
mov
sub
jnp
push
inc
es
xchg
mov
push
lock
cmp
pop
inc
mov
or
sbbl
add
dec
or
xlat
mov
mov
rorb
push
add
stc
decl
shll
push
add
lcall
or
std
cmp
and
mov
stos
jo
cmp
push
aaa
or
push
inc
frstor
inc
or
pop
mov
xor
inc
pop
call
jmp
push
xchg
and
xchg
mov
test
add
adc
cmp
lret
dec
shll
adc
mov
sbb
mov
dec
js
sub
dec
push
dec
out
jl
pop
adc
bound
pop
sbb
xor
fs
sahf
aaa
stos
push
je
and
popa
pusha
jo
ret
or
inc
or
pop
and
shll
shr
mov
push
cs
lahf
add
test
popf
hlt
push
sbb
xor
mov
sbb
mov
enter
add
andb
lock
lret
push
dec
popa
sub
inc
xor
mov
push
fdivl
sbb
lods
jo
xchg
subl
data16
pop
cmpl
add
sbbl
or
mov
cmp
sbb
pop
sbb
add
push
repz
js
pop
xor
rcll
dec
movsb
nop
push
pop
inc
out
in
push
push
test
dec
sbb
imul
popa
mov
mov
and
gs
and
pusha
push
xchg
xor
and
push
pop
and
jb
dec
and
mov
push
and
push
loope
mov
and
dec
adc
pop
movl
add
adc
sbb
and
xchg
cs
jb
or
adc
testl
dec
jo
inc
imulb
pushf
cmpb
or
js
sub
jle
addb
pop
cmp
or
adc
lock
and
mov
inc
xor
inc
inc
push
xor
stos
and
jge
mov
mov
cld
xorb
jno
inc
dec
ljmp
lock
and
push
or
push
leave
mov
and
hlt
lods
inc
and
xchg
sub
or
stc
ret
xchg
sti
sub
xor
add
movsb
in
jp
push
fwait
xchg
insl
sbb
dec
pop
push
or
in
push
cltd
push
xor
push
add
call
xchg
inc
push
mov
int
push
in
pop
sub
xchg
or
int
push
sub
sbb
and
and
fwait
sub
inc
jge
adc
mov
dec
push
push
pusha
rclb
mov
xor
mov
dec
aad
fs
sub
lods
mov
rcr
outsl
inc
das
inc
sub
add
mov
daa
adc
mov
cmpsb
mov
jbe
in
mov
mov
insl
mov
push
push
jo
sub
ficomps
ss
xchg
clc
and
add
push
daa
movsb
or
call
inc
sti
push
or
inc
jl
adc
jmp
mov
xchg
and
add
add
pop
leave
add
mov
and
xor
xchg
or
xchg
mov
pop
lods
xchg
sub
cmp
adc
pop
ret
jecxz
rcrl
jbe
and
decb
call
cwtl
clc
xor
nop
adc
push
add
or
lock
scas
mov
rolb
gs
jnp
insb
cld
lods
lds
sub
aaa
add
adc
pop
cmp
adc
fsubl
inc
je
movsb
inc
insb
lock
mov
and
pop
xlat
int
lret
jne
mov
push
shrl
in
mov
xor
mov
mov
inc
xchg
adcb
cmp
add
stos
and
in
cmc
out
inc
leave
dec
syscall
popa
or
adc
movsl
add
fidivl
xchg
insl
or
aaa
rolb
stc
xchg
sbb
mov
or
or
in
in
xor
push
xor
push
pop
xchg
or
sub
add
xchg
push
mov
dec
mov
sub
inc
mov
in
adc
push
popf
sub
setge
adc
aaa
sub
inc
ljmp
icebp
inc
cmp
inc
mov
sub
test
mov
lret
nop
ficompl
lds
jmp
jmp
add
ret
gs
bound
adcl
mov
sbb
movsl
push
leave
xor
cmp
add
icebp
cmp
lods
in
and
sbb
mov
xor
adc
sub
xor
push
sbb
jbe
xor
pop
push
pop
add
add
cmp
or
add
inc
es
pop
push
or
add
pop
pop
push
or
push
fs
sbb
popa
push
int
imul
adc
cmpsl
mov
add
xchg
cmpsl
insb
and
out
dec
mov
lea
and
and
sbb
insl
sbb
add
add
xchg
pushf
enter
jle
push
jecxz
push
jns
lds
push
push
addb
inc
xchg
sbb
sbb
push
xor
aad
sbb
or
mov
cmp
movsl
push
add
xchg
push
dec
dec
push
add
sbb
dec
stos
inc
cmp
or
and
adc
inc
pusha
loop
loopne
add
int3
lea
pop
mulb
fists
test
cld
push
sub
push
cmpb
insb
cs
pop
cmpsl
test
xchg
pop
or
sub
cli
jns
cmpsb
adc
jge
dec
mov
daa
test
sub
shll
and
pop
and
outsb
lret
popa
add
add
call
cmpl
sbb
pop
rorb
add
jne
dec
pop
cmp
aad
jg
mov
sbb
and
lret
dec
push
sbb
mov
call
xor
inc
cmp
repz
sub
aas
mov
add
or
push
and
adc
aam
inc
xor
lahf
negw
sub
cmpsl
mov
sbb
js
xor
cmp
adc
lods
test
addb
fcomip
push
das
add
xchg
xchg
pop
pop
mov
pop
add
push
add
push
inc
pop
nop
and
push
pop
push
add
outsb
add
or
sub
and
adc
add
dec
push
dec
jl
xchg
cmp
add
je
loope
xchg
lea
pop
lock
push
mov
fsubrl
rorb
int3
mov
adc
xchg
into
shl
pushf
not
sub
fmull
je
aam
sub
clts
lea
mov
incl
into
or
popf
pop
add
imul
dec
aad
xchg
xchg
xchg
add
pop
push
jecxz
xor
adc
xor
adc
loopne
xchg
lret
cmc
je
jae
sub
mov
pop
enter
jo
push
mov
and
mov
fadds
cmp
cmp
movsb
cmp
push
test
dec
adc
or
daa
sbb
test
fs
cmp
and
push
ret
out
xchg
xor
push
cmp
hlt
push
push
mov
outsb
inc
mov
int
dec
xchg
push
cmp
adc
arpl
lret
test
xchg
lea
lea
adc
mov
test
or
je
or
or
repnz
and
push
rorb
xor
jo
mov
cmp
adc
popa
mov
inc
adc
xchg
adc
inc
and
lret
insl
dec
adc
push
push
pop
pop
push
out
xchg
fs
pop
leave
and
into
repz
jne
mov
pop
nop
pop
xlat
in
push
xchg
cmp
sbb
inc
scas
movsb
cmp
int3
call
sbb
xor
xchg
fcom
popa
push
and
leave
sbb
gs
sbb
ds
sbb
push
xchg
sbb
push
rcrb
push
sub
and
xchg
rcrb
cmpb
push
and
and
mov
cmp
es
enter
fsubrl
enter
add
test
repnz
cmpb
mov
mov
xchg
or
subl
pop
test
push
in
add
cmp
nop
push
pop
xchg
and
inc
es
lahf
jmp
pop
jbe
xor
cwtl
pusha
test
imul
call
test
je
xor
pop
pop
adc
dec
jg
inc
rcll
shrl
mov
add
orb
dec
pushl
ret
lock
fucom
dec
add
imul
or
jne
push
fucom
pop
jmp
push
add
and
test
and
jne
push
push
fs
sbb
enter
cmp
adc
mov
and
pop
mov
enter
cmp
cmc
dec
mov
xchg
ret
push
pop
mov
xor
add
cmp
and
sub
inc
movsb
imul
leave
and
arpl
inc
repnz
and
cld
inc
fcomps
sbb
scas
add
push
hlt
or
pop
adc
aam
xchg
lret
sarl
pop
sbb
adc
imul
jecxz
lods
xor
adc
loopne
inc
in
out
adc
inc
clc
mov
and
ret
cli
jo
pop
mov
adc
fs
stos
mov
and
add
rolb
fwait
inc
push
rolb
cmp
and
xor
repnz
inc
movsb
aas
xchg
add
lods
ds
push
leave
jae
dec
cmp
xchg
cmp
cmp
push
cwtl
add
scas
add
xchg
mov
add
push
xchg
es
inc
jge
inc
lea
iret
inc
addr16
push
add
dec
roll
enter
scas
test
add
insl
dec
dec
pop
mov
or
ja
enter
dec
push
sub
cmp
mov
pop
inc
sbb
pop
xor
rolb
pop
mov
cltd
in
rcl
adcl
jne
add
mov
push
test
push
imull
push
das
jl
add
add
and
dec
sbb
repnz
mov
adcl
popa
sub
mov
push
clc
and
mov
jecxz
jnp
cmp
push
inc
aaa
mov
adc
or
sbb
cmp
xchg
pop
add
lds
dec
in
hlt
push
adc
jb
jecxz
xorb
test
jnp
pop
lcall
mov
add
push
aam
push
clc
push
mov
cltd
sbb
mov
xor
xor
repnz
mov
test
sub
fmuls
jge
sub
xor
loop
inc
jb
aad
lea
out
dec
push
sar
shrl
dec
mov
push
add
and
in
pop
addb
or
in
dec
xchg
xor
in
fmul
dec
pop
sub
jne
cmpb
add
scas
mov
lods
xchg
xchg
add
lock
pop
lock
sub
sbb
mov
push
dec
xor
sarb
and
dec
and
and
dec
test
or
orb
or
jns
call
sbb
sub
inc
dec
push
outsb
fisttps
iret
mov
adc
cld
cmp
in
add
cmp
jb
lcall
lods
push
dec
dec
clc
or
cmp
push
lds
and
push
cli
sbb
dec
scas
shrl
faddl
pop
cld
nop
outsb
loope
jp
sub
xchg
add
divb
dec
sub
and
dec
adc
mov
jae
xchg
pusha
fstps
mov
mov
and
dec
cmp
pop
sbb
jmp
jmp
inc
xchg
sbb
push
add
bound
cmp
push
cmp
sub
ret
fwait
and
inc
push
push
xchg
enter
rcll
push
test
jmp
add
outsl
mov
lods
fcmovnu
in
rorb
or
in
and
xor
lods
xchg
aam
xor
cmpsl
ffree
push
lret
rcll
lock
mov
jb
cltd
xor
mov
addl
mov
aam
pop
mov
sub
xor
sbb
adc
popl
and
push
sbb
mov
pop
xorl
mov
mov
push
mov
ja
xorl
add
ret
arpl
sub
xor
cmp
push
fcomp
loopne
imul
or
enter
enter
ja
mov
mov
rcrl
push
adc
popa
in
test
scas
rclb
pop
xchg
lret
aaa
and
cmp
inc
sbb
xchg
test
leave
sbb
cli
mov
cmp
imul
js
xchg
adc
fistl
pop
dec
mov
xor
xchg
mov
push
xchg
dec
pop
repnz
mov
add
xor
adc
pop
xchg
adc
adcb
cmpsb
xchg
data16
mov
xor
push
add
sub
add
mov
mov
push
xor
cmp
dec
sahf
stos
in
add
cmpsl
mov
je
xor
nop
es
xchg
sbb
cmpsl
ss
mov
add
push
xor
jge
ljmp
pusha
mov
mov
or
push
dec
gs
nop
sub
daa
mull
or
and
push
lock
push
dec
lods
or
jmp
dec
inc
and
push
push
cmp
inc
insl
and
call
aaa
pop
mov
out
mov
mov
fs
pop
cmp
mov
add
popa
push
pop
inc
ret
jnp
jne
mov
popl
push
mov
xchg
cmp
test
sbb
nop
les
mov
sbb
inc
sub
cmpsb
pushf
and
mov
test
pop
enter
js
repnz
or
sahf
xlat
push
cld
add
and
mov
nop
inc
pusha
pop
add
or
adc
std
jle
jmp
push
adc
or
cmp
outsl
pushf
push
push
mov
inc
xchg
sub
lea
scas
sbb
and
repz
sbb
pop
push
xorl
push
push
adc
test
inc
ljmp
jnp
xchg
sub
popa
fists
ds
xor
and
mov
push
add
dec
and
and
or
or
jp
dec
inc
inc
lock
adc
push
popa
add
or
pusha
xorb
imul
xchg
sbb
push
push
fptan
cmpsl
sbb
fcoml
xchg
lea
fldenv
cmp
xchg
bound
jae
mov
mov
loop
xchg
test
lea
daa
testb
pop
mov
shlb
cld
jp
nop
adc
lock
sbb
sub
mov
or
stos
inc
mov
movsb
fistpll
aas
and
push
sub
dec
pop
sub
call
jnp
roll
dec
adc
sub
and
jo
fsubl
mov
inc
sbb
outsl
jmp
sub
inc
call
xlat
and
add
xor
je
test
adc
lahf
xchg
addb
sub
xor
push
push
mov
or
lods
or
inc
and
imul
repz
cltd
or
fwait
imul
imul
sub
ficompl
pop
rolb
stos
adc
lahf
ficoml
movsl
push
inc
sub
pop
push
push
cmp
add
je
sbb
jmp
or
xchg
shr
dec
cmp
push
pop
or
push
xchg
cs
add
xchg
mov
outsl
scas
sub
pusha
and
sahf
inc
inc
xchg
adc
mov
sbb
pop
and
loope
sbb
or
sbb
pushf
or
sbb
es
pop
xchg
lret
jle
cmp
jae
mov
xchg
or
jo
pushf
xchg
push
xchg
sarl
je
inc
cmp
jl
and
sbb
inc
pop
pop
sbb
call
xor
and
dec
or
ja
mull
pop
addb
push
mov
inc
ret
xor
dec
ret
and
xchg
add
sarb
pop
adc
add
fistl
xchg
mov
mov
mov
sbb
mov
loopne
test
scas
incl
mov
lods
sti
push
lahf
sbbl
add
jb
shrl
shll
push
sub
cmp
jb
mov
ds
mov
push
sbb
movsb
jg
adc
mov
adc
or
pop
add
aad
xchg
adc
push
cmp
mov
fdivs
add
sbb
or
ret
fidivs
xchg
pop
mulps
insl
gs
push
jecxz
popf
cmpb
imul
ret
or
dec
les
lds
add
push
sbb
add
lcall
pop
push
fwait
mov
mov
fs
insb
fldcw
jge
pop
or
pushf
mov
adc
pop
add
cwtl
xor
or
and
pop
imul
adc
sbb
and
or
add
cmp
sub
ljmp
bswap
mov
and
add
test
movsl
adc
or
xlat
mov
and
push
inc
cmp
lds
mov
cmp
lcall
adc
jl
cmpsb
sub
pop
pop
or
inc
cmp
insl
insb
adc
lods
cmp
neg
mov
push
insb
sub
loopne
insb
mov
push
or
popf
sub
fists
add
add
adc
or
cmp
mov
inc
cmp
cmp
shl
mov
sub
push
lea
sub
ss
mov
rorl
outsb
xchg
test
icebp
mov
sbb
or
orb
mov
jecxz
ficoml
jbe
les
mov
icebp
ret
xchg
hlt
sub
sbb
adc
lea
jbe
xchg
stc
xchg
cltd
dec
dec
push
scas
mov
lods
insl
add
mov
jnp
cmp
push
pop
les
jns
ret
clc
xor
dec
enter
fwait
jo
pmulhuw
cmpb
sub
test
es
push
xor
fcompl
adc
loope
or
pop
lcall
and
mov
lea
adcl
test
clc
dec
insb
inc
arpl
xchg
mov
fdivrl
mov
test
adc
pushf
out
inc
xchg
outsb
addb
jg
lahf
add
or
popa
add
xorb
fadds
js
jp
add
out
add
or
insl
inc
loopne
dec
leave
add
enter
lahf
mov
push
push
out
push
test
fwait
ret
push
js
mov
lods
add
inc
add
rol
jbe
xchg
loop
sbb
push
mov
jge
ss
push
loopne
pop
hlt
mov
rcrl
adc
je
cmp
je
cmp
je
cmp
je
push
je
dec
xchg
jmp
ret
jnp
jmp
das
stos
loopne,pn
mov
adc
lods
subl
push
or
add
add
lret
mov
andb
adc
mov
fdivrs
inc
hlt
cli
pusha
adc
and
push
daa
mov
testl
push
hlt
fadd
mov
inc
rclb
lock
shl
daa
rcrl
mov
ret
add
lds
test
xor
pop
pop
adc
sub
adc
dec
sar
xor
pop
rorb
xchg
hlt
and
add
adc
adc
mov
mov
ljmp
push
mov
mov
mov
nop
push
push
dec
add
andl
xor
pop
xchg
fbld
and
cmp
xchg
xor
mov
sbb
aas
loopne
inc
add
stos
sbb
add
sub
pop
or
xor
jge
jmp
mov
test
js
sub
ret
inc
fdiv
inc
xchg
add
mov
lods
iret
daa
and
and
out
int3
sbb
insb
mov
sub
inc
push
mov
mov
inc
lret
sbb
mov
mov
xchg
and
test
sbb
mov
mov
xchg
int
xlat
push
std
arpl
in
pop
repnz
int3
push
movsb
call
ficoms
sbb
repz
push
mov
push
std
sub
es
enter
pop
sub
push
pushf
pop
or
inc
lods
cmpsl
loopne
loope
es
dec
mov
mov
pop
and
sbb
inc
les
xor
inc
mov
sbb
jecxz
mov
inc
and
mov
call
and
lahf
dec
push
sarl
pop
jmp
loope
shll
and
add
mov
clc
hlt
test
sbb
cmc
sti
and
mov
adcl
add
sub
faddl
adc
int3
mov
adc
in
jno
mov
inc
test
mov
or
push
and
sub
pop
lods
sarb
mov
xchg
inc
es
in
adc
cmp
sbb
mov
xchg
or
mov
jbe
mov
sar
and
cs
mov
loop
xor
lds
inc
adc
mov
imul
add
test
dec
aam
pop
push
shlb
and
stos
adc
or
or
inc
sbb
call
mov
stos
inc
mov
mov
test
and
xchg
enter
fimuls
pop
xchg
xchg
scas
bound
sbb
inc
fs
out
imul
mov
loope
js
jl
add
jae
xchg
fimull
jge
jge
dec
call
lods
add
and
inc
nop
stos
add
sbb
mov
adc
and
lods
sub
in
nop
data16
inc
xchg
fcomp
aam
shll
or
push
sbb
xchg
xchg
mov
jne
sub
mov
fmuls
pushf
mov
je
push
sarb
daa
out
adc
mov
cs
stc
xchg
cmc
dec
les
pushf
stc
bound
std
inc
test
push
pop
mov
adc
out
nop
out
add
adc
jae
shrl
add
imul
dec
dec
push
fcmovbe
lods
inc
faddl
dec
mov
lds
sbb
mov
pop
pop
xchg
outsb
pusha
lcall
or
cmp
je
jg
and
nop
mov
adc
leave
ds
dec
fcmovnbe
or
pop
add
pop
push
jg
cmp
inc
mov
jo
sbb
and
or
push
push
mov
pop
movl
and
mov
or
fimuls
mov
cmp
nop
iret
inc
test
mov
sbb
jge
je
mov
mov
push
cld
sub
mov
add
aas
pop
push
add
rclb
cmp
sbb
nop
cmc
add
inc
inc
sub
adc
jp
aas
add
push
xchg
add
pop
lea
adc
adcb
xorb
or
sub
xor
sarl
test
mov
shrb
adc
pop
and
lea
mov
inc
push
ljmp
lods
fisubl
and
adc
lods
push
sub
imull
sbb
andl
mov
je
fadds
adcb
jge
sub
cwtl
push
pusha
bound
mov
pop
mov
cmp
imul
pop
add
cli
xchg
popf
adc
jl
testl
sub
sub
jge
dec
dec
into
imul
clc
sbb
sar
icebp
fcoms
stc
push
pushf
xchg
dec
cmp
xchg
dec
das
popa
sbb
or
jl
je
inc
imul
test
mov
out
add
pop
shll
jne
jne
imul
je
inc
mov
insl
loope
xchg
inc
fistl
mov
das
mov
imul
sbbb
ljmp
mov
adc
xchg
daa
mov
or
push
jnp
mov
add
std
shrb
xor
inc
sbb
xor
lock
jmp
and
mov
fs
push
fildl
and
pop
dec
xchg
adcl
xchg
inc
ja
hlt
dec
addr16
test
pop
ret
jo
js
inc
stos
sub
add
les
ficompl
test
inc
add
hlt
or
mov
das
test
rol
xchg
lods
or
xchg
cmp
nop
mov
aad
jnp
sub
insl
or
pop
pop
adc
push
sbb
or
or
adc
imul
cmpsb
ss
ja
sbb
cmp
push
stc
bound
bnd
adc
and
sub
xor
sbb
out
jg
sbb
cmpl
mov
ss
decb
sub
push
sub
push
push
push
mov
aam
mull
push
inc
add
xchg
mov
rorb
and
add
and
push
xlat
adc
test
push
jmp
xchg
sbb
dec
push
les
aas
addr16
ja
idivl
inc
add
inc
shlb
dec
pop
shrb
push
jl
jecxz
sbb
cmc
hlt
push
rorl
inc
dec
add
adc
and
movsb
popf
lock
mov
cmp
imul
sbb
add
xchg
dec
and
xchg
push
fsub
pop
mov
shrb
add
and
loop
es
cld
add
and
std
or
or
push
add
pop
jns
add
mov
inc
jne
adc
mov
clc
jo
and
jnp
sbb
push
pop
fnsave
rcrl
mov
ret
mov
add
cmp
jae
mov
dec
xchg
cmp
adc
cmp
cmp
adc
adc
sbb
adc
es
sub
cmpsb
add
shrb
push
and
add
and
js
test
or
mov
mov
mov
xor
int3
xchg
jg
inc
xchg
dec
adc
aaa
mov
test
int3
mov
das
orl
movsl
push
sub
mov
pop
or
inc
dec
iret
push
dec
sbb
add
enter
jp
hlt
lea
lret
mov
jl
pmulhw
inc
xchg
or
push
addb
adcb
ds
addl
dec
test
push
lea
mov
xlat
sbb
aas
fsub
cltd
sub
add
push
cmp
mov
shrl
add
and
xor
imul
and
add
or
sbb
adc
cmp
inc
jo
icebp
sub
push
rolb
pop
shll
dec
add
xchg
cmpsl
inc
addr16
inc
add
xor
in
popl
pop
jmp
push
add
push
cmp
sub
mov
rcrb
mov
adc
pusha
test
or
sbb
lods
fcmovnbe
js
or
or
mov
addl
sbb
adc
push
jo
mov
inc
add
test
sub
xchg
dec
push
leave
ljmp
sub
cmp
mov
jl
xor
xor
xchg
xor
push
and
cmp
jle
push
lret
aad
lret
and
xor
and
pop
arpl
dec
or
sub
add
xchg
xor
test
inc
leave
push
mov
loope
lea
mov
stos
pop
add
lret
outsl
push
or
or
es
add
std
cmp
dec
mov
leave
add
adc
push
aad
add
inc
and
bound
sbb
test
or
cmp
inc
adcb
dec
push
in
or
xor
loopne
or
xor
sub
fimuls
lahf
icebp
jecxz
mov
ja
jb
cs
scas
fs
fnstenv
or
sub
sub
add
clc
push
shrb
inc
add
adc
les
sub
test
sub
mov
nop
sub
mov
ffree
xor
add
jecxz
lds
sub
fs
sub
mov
iret
aas
out
loope
or
mov
jmp
jne
cmp
jb
sub
jmp
push
dec
movzwl
pop
icebp
int
pop
dec
pop
cmpl
push
setl
movzbl
push
idivl
shrl
push
push
push
cmpsl
jp
add
inc
mov
sbb
les
shll
cmpsb
push
inc
popa
add
repnz
rcrb
lds
sub
xchg
sub
sbb
xchg
dec
push
fcmovnbe
push
repz
push
shll
cmp
mov
jmp
push
imul
stc
jmp
pusha
push
jne
or
lock
adc
cld
iret
leave
in
push
test
cmp
mov
xchg
mov
negl
pop
roll
pop
and
lret
add
mov
push
pop
cmp
xor
lcall
lcall
mov
pop
push
push
rcrl
and
dec
pop
aas
loope
push
jecxz
push
push
push
jecxz
and
test
imul
mov
mov
add
decb
adc
jecxz
loopne
mov
mov
push
pop
jmp
ds
xor
sub
dec
jns
test
and
xchg
pop
adc
pushf
xchg
dec
push
pop
sub
and
pop
xchg
push
push
cmc
xor
push
jo
add
cmp
mov
push
sbb
xchg
bound
jmp
inc
faddl
and
push
mov
es
and
inc
adc
inc
inc
cmp
das
inc
xor
sub
fs
pop
sbb
inc
insl
xor
push
or
enter
or
insl
or
fwait
movb
push
imul
aam
push
dec
lahf
sub
mov
push
push
push
adc
sbb
or
mov
push
sbb
lret
fistl
inc
cmp
xor
cmp
mov
pusha
and
aaa
xchg
mov
add
iret
sbb
adc
and
adc
inc
xchg
cmp
rorb
mov
sbb
fistpll
jge
inc
and
mov
data16
push
sbb
pushf
push
push
sbb
lds
adc
inc
lods
ficompl
loopne
pop
add
mov
jge
inc
inc
es
push
subb
adc
add
adc
jle
add
cld
dec
cld
xchg
xor
xchg
cmp
add
sub
inc
jne
rclb
push
mov
cmp
movsb
ja
lock
or
sub
dec
cwtl
and
jecxz
sbb
out
das
orb
push
xchg
adc
push
inc
inc
push
xor
cmp
xchg
cmp
push
rep
adc
dec
and
or
nop
dec
inc
insl
sti
mov
dec
hlt
jo
lea
sub
or
adc
pop
and
repz
cmpb
jne
insb
mov
outsb
xor
mov
pop
fsts
inc
xor
add
arpl
and
leave
jl
add
cltd
ljmp
push
push
mov
or
jo
lods
out
sbb
and
or
rolb
inc
xchg
pop
or
add
jl
lret
shr
xchg
mov
sbb
inc
jns
sbb
push
cmp
sbb
iret
inc
adc
sbb
xchg
cmp
orb
push
xor
xchg
test
xchg
hlt
xchg
add
leave
sub
push
fs
pop
sbb
leave
and
dec
push
lea
shlb
or
mov
or
or
jge
je
cmpsb
aas
sub
test
mov
sbb
mov
push
int
jmp
lahf
and
push
in
add
mov
cwtl
test
add
sub
pop
scas
or
sub
test
fists
sbb
dec
add
sbb
leave
ret
mov
add
rcrl
xchg
adc
enter
enter
sbb
sbb
nop
ds
test
ss
enter
cmpsb
icebp
xlat
dec
loope
push
jg
sub
jne
push
xchg
movb
jp
add
mov
nop
adc
repz
dec
pop
jg
pop
mov
fsubrs
shrb
and
push
mov
dec
out
aas
push
imul
lea
add
pusha
and
nop
addb
cwtl
je
pop
xor
js
or
push
push
fs
fdivrs
aaa
push
add
push
or
sub
inc
sbb
inc
add
cmp
movsl
js
jno
push
dec
xor
cli
mov
mov
jl
js
add
push
loop
js
mov
adcl
lret
sbb
popa
jmp
mov
cmpsb
pop
adc
js
pop
pop
and
add
pusha
sti
and
sub
imul
insl
das
pusha
fucomp
push
sbb
jnp
or
and
push
mov
xor
add
rol
enter
daa
mov
adc
inc
jo
mov
rorl
into
popa
xor
addb
or
or
cltd
inc
inc
or
test
pop
mov
pop
xchg
mov
dec
sub
jae
enter
inc
cmp
inc
cmpsl
or
push
push
adc
sub
mov
ret
inc
shll
pop
and
jne
sbb
add
pop
paddw
inc
scas
push
sahf
inc
mov
xchg
dec
sub
dec
in
and
push
cltd
in
dec
push
subps
dec
stos
jb
xchg
inc
dec
adc
jo
mov
test
pop
xor
ss
jmp
fwait
mov
add
push
and
or
enter
adc
nop
adc
adc
sub
sahf
shll
mov
iret
add
xor
push
js
push
push
jge
sub
pop
pop
mov
mov
jmp
push
lahf
cltd
nop
out
pop
pop
or
mov
push
push
fwait
add
mov
repz
repnz
sbb
mov
push
mov
inc
sbb
or
add
out
clc
jo
cmp
mov
jo
jmp
fiaddl
punpcklbw
int3
enter
or
lcall
icebp
sub
sbb
inc
jle
pop
jmp
adc
and
in
jb
pop
rolb
sbb
xor
add
incl
add
sbb
push
gs
jp
dec
mov
call
and
aaa
add
outsl
jns
je
ret
push
add
cltd
sub
adc
push
and
jl
shlb
sub
cmpsl
sub
push
aad
adc
and
push
inc
pop
enter
or
jmp
jbe
pop
add
hlt
push
sub
dec
adc
or
daa
xor
jo
push
mov
dec
pop
sbb
push
frndint
adc
jecxz
cmp
rcr
inc
inc
nop
sbb
pop
pop
adc
std
mov
inc
cmpb
je
push
add
scas
mov
ljmp
jge
adc
and
jle
int
sbb
insb
loope
int
and
pop
test
jp
mull
and
or
push
imul
jg
sub
mov
mov
inc
mov
xor
pushf
mov
jle
fildll
cmp
fiadds
dec
dec
les
test
lahf
adc
cmpsl
aad
lret
jge
std
or
incl
push
add
mov
xlat
sub
adc
jl
lea
in
sub
push
mov
gs
mov
jge
cmp
cmpb
dec
push
mov
mov
dec
adc
push
js
cmp
push
push
imul
or
push
pop
xor
adc
xor
aaa
pop
cmp
lods
dec
sbb
repz
gs
and
cmp
and
or
sbb
push
test
xor
sub
out
add
or
outsb
rcll
cmp
sar
pusha
push
push
call
mov
cld
push
sbb
insb
sbb
push
push
out
sbb
out
inc
loopne
jo
xorl
mov
dec
xchg
cmp
test
pop
mov
dec
xchg
xchg
out
test
rclb
mov
or
jo
mov
sub
mov
jnp
push
xor
mov
xor
mov
dec
stos
push
fadd
scas
push
adc
mov
jp
sbb
jl
cld
fwait
rclb
les
add
sub
add
cmp
pop
pusha
jg
sahf
repnz
cmp
pushf
push
sub
jle
scas
or
fisttps
or
out
inc
add
jne
clc
push
into
fildl
sbb
imul
sub
cmp
stos
out
add
xchg
jle
dec
and
in
dec
jge
cmp
ret
sbb
aad
and
push
mov
push
and
shll
enter
sbbl
outsl
jmp
mov
out
es
sahf
cwtl
jne
jp
mov
mov
movsl
or
mov
pop
les
inc
dec
inc
enter
or
or
data16
mov
jae
and
mov
mov
push
enter
loop
jb
xor
push
mov
in
pop
loope
sbb
mov
mov
rcll
imul
mov
aam
repnz
xor
xchg
or
sub
call
sbb
mov
rorb
xchg
mov
bound
jb
push
fs
mov
fs
adc
hlt
and
in
push
call
fiaddl
jno
fldcw
movzwl
add
or
fldcw
stos
adc
sbbb
into
or
adc
inc
inc
cmp
adc
mov
ja
es
test
adc
mov
push
push
jle
jne
mov
and
adc
push
add
pshufw
cli
add
push
push
inc
pop
pop
adc
sub
test
and
rol
loop
mov
add
clc
cs
sub
push
push
les
ss
xor
cmpb
ret
int
js
adc
push
call
or
adc
xchg
cmp
adc
push
movsb
scas
inc
insb
es
or
push
mov
lcall
dec
cmp
jbe
rclb
lods
or
out
out
pop
sbb
or
mov
fsts
push
andl
mov
subl
mov
scas
sub
out
or
adc
add
mov
fstps
flds
flds
cmp
les
imul
fmulp
lret
leave
iret
mov
jg
les
fldcw
fmuls
push
sbb
rep
dec
inc
sbb
jae
adc
js
or
fdecstp
xor
pop
aam
xchg
xor
pop
jae
movsl
scas
sbbb
add
jnp
adc
cmpl
sbb
cwtl
sarl
cmp
jne
jno
lods
sbb
cmp
mov
or
pop
fs
dec
dec
or
xchg
dec
cmp
fadds
mov
add
sbb
pop
cmp
push
jg
pop
nop
dec
sar
mov
sbb
inc
jecxz
loopne
or
cld
add
in
adc
push
in
bound
cmp
add
sub
pop
or
insb
lock
mov
jmp
dec
hlt
sarb
outsb
rol
mov
cwtl
stos
add
xchg
mov
push
lea
iret
pusha
ret
test
aam
enter
and
add
push
adc
add
push
andb
push
and
adc
xor
or
cmpsl
scas
dec
pop
mov
repnz
rolb
clc
push
or
cmp
mov
push
call
inc
insb
in
idivl
dec
mov
mov
in
sub
inc
out
and
push
add
mov
or
mov
sti
dec
and
out
mov
je
adc
dec
cld
xor
xor
leave
loopne
cmpsl
pop
cmp
push
ret
push
punpckhdq
pop
xchg
data16
js
lock
aaa
jnp
pop
imul
out
adc
or
stos
push
sub
xor
mov
sbb
push
mov
push
push
cld
mov
cmp
je
add
pop
cmpsb
sbbl
test
cmp
jg
addr16
push
sub
dec
mov
cmp
pop
jmp
fildll
add
andl
jg
push
inc
dec
pop
cmc
test
mov
mov
ja
inc
fldcw
roll
in
lock
mov
dec
or
sbb
and
add
adc
inc
orl
fsubs
xchg
jecxz
push
dec
dec
lahf
arpl
test
xchg
add
jl
enter
cmpl
cmp
inc
sbb
dec
lcall
cmpw
jne
mov
je
test
push
test
or
push
mov
pusha
mov
pop
pop
clc
aas
gs
mov
push
push
call
jb
cmpsb
aas
jmp
cmpl
push
dec
xor
cmp
cmpl
arpl
lods
dec
ret
xchg
lea
mov
mov
loopne
mov
sbbb
mov
sbbb
adc
rol
clc
ror
std
loopne
xor
mov
or
sbb
fadds
jbe
gs
add
loopne
lea
push
push
jg
pop
push
adc
negb
push
in
or
adc
adc
into
mov
adc
sub
jne
pop
mov
or
pop
cmp
pop
and
fbld
xchg
or
jecxz
sbb
mov
and
loope
push
je
mov
loop
sarb
andl
out
cs
ljmp
add
dec
push
push
mov
or
jl
push
mov
sbb
mov
in
pusha
out
sbb
int
fs
sbb
xlat
testb
outsb
push
push
add
inc
notl
mov
in
rcrl
out
dec
das
loop
xchg
pushf
adc
sbb
or
roll
push
call
jne
xor
stos
insb
push
mov
push
call
push
aas
xchg
cmp
adc
adc
call
add
or
xchg
shr
dec
push
adc
sbb
adc
and
aas
pop
shrb
aam
xchg
push
xor
ror
or
mov
fwait
test
call
mov
testl
add
loopne
call
or
jle
mov
das
add
pop
add
jb
in
mov
pop
in
dec
jne
or
loopne
inc
lock
ljmp
xor
push
aad
in
bnd
mov
in
dec
lock
int3
cmp
inc
in
inc
shrb
add
push
cmp
scas
in
lods
jae
out
mov
add
push
push
icebp
cli
sbbb
dec
aam
cmp
sub
cmp
cmp
popa
jg
adc
add
daa
push
mov
jl
subl
insb
push
adc
lock
jb
xor
lock
and
push
mov
sub
push
mov
jne
mov
lods
fisubs
sbb
std
add
rolb
ljmp
add
add
repnz
mov
jmp
cmp
div
adc
add
inc
inc
cmp
icebp
mov
ds
test
aad
mov
mov
mov
fs
push
das
xchg
gs
or
add
cmp
mov
cwtl
test
ljmp
lock
lock
push
jmp
xor
dec
mov
push
ss
pop
push
mov
pusha
in
push
adc
pushf
inc
lods
lret
jp
jmp
mov
jb
and
push
mov
ja
push
adc
xchg
pop
pop
mov
cmp
jnp
xchg
lods
nop
fxch
fst
or
xor
and
push
ror
and
jb
sarb
inc
mov
sti
je
shrl
mov
cmp
imulb
das
push
push
xor
add
bound
mov
push
cld
push
xor
mull
inc
cmpsl
clc
sbb
imul
dec
add
push
sbb
sub
add
in
xchg
aad
stc
jbe
dec
sub
idivb
add
mov
mov
lock
sub
dec
test
xor
adc
push
push
mov
je
jne
int3
fwait
pop
cs
push
aam
imul
inc
sarl
xlat
movzwl
mov
mov
xchg
cmp
or
push
loop
cld
push
clc
sbb
roll
shlb
push
adc
lods
pop
push
int3
sahf
je
cmp
xchg
test
inc
test
je
push
daa
push
push
pop
scas
mulb
fsubrs
jmp
adc
sbb
push
sbb
in
adc
add
and
sub
add
push
setbe
xchg
adc
scas
or
sbb
mov
call
push
or
sub
push
add
iret
lcallw
adc
inc
push
xor
ret
or
dec
and
pushl
daa
mov
ret
cmp
xchg
push
dec
sbb
push
pusha
movsl
jp
sbb
pop
cmp
daa
bound
je
sbb
pop
jbe
mov
add
add
scas
inc
or
and
in
data16
andl
lea
aaa
dec
aam
push
mov
lret
test
or
add
shll
inc
les
int
push
dec
sub
repz
inc
xchg
push
imul
push
sbb
jo
sbb
xor
add
xchg
jnp
sub
es
jbe
lret
mov
leave
mov
jo
pushf
mov
loopne
or
sbb
pop
cli
cmp
cmpsl
ret
ficoml
ret
or
in
movsl
mov
and
ficomps
repnz
cmp
mov
inc
lahf
dec
cs
ror
push
daa
ds
jl
pop
lock
imul
scas
push
sbb
adc
sahf
jo
fwait
pop
cmp
loopne
pusha
mov
pop
push
cmpb
jmp
insl
jp
das
cmp
int3
xchg
rclb
or
out
rorb
cs
push
lock
xchg
cwtl
jmp
loopne
les
push
inc
jl
and
xchg
xchg
fwait
mov
add
and
in
hlt
or
add
adc
or
jmp
mov
pop
stos
int3
xchg
rolb
jb
and
data16
fs
push
shlb
or
and
outsb
movsb
lock
jmp
push
mov
cmc
jge
out
adc
clc
xchg
dec
cmp
ss
mov
divl
dec
and
push
sub
js
les
shlb
jne
push
jmp
cli
repnz
rcr
mov
add
ljmp
jg
push
enter
dec
xor
insl
jne
cmp
xchg
mov
inc
add
push
jae
arpl
repz
mov
push
je
inc
mov
jg
push
or
and
lods
push
fmull
jle
cmp
push
push
push
adc
mov
cmp
cmp
movsb
sarb
call
rorl
jo
mov
cli
mov
je
mov
mov
nop
pop
mov
xchg
int3
cmp
je
push
fiadds
out
sbb
outsl
sbb
xchg
je
push
je
daa
cmp
and
push
adc
addl
add
jmp
sbb
add
cmp
mov
push
jb
push
push
push
inc
mov
jo
xchg
rorb
cmpsb
and
je
stos
push
fcoms
fmul
sbb
lcall
pop
dec
sbb
sbb
push
sub
sarb
xor
xor
mov
cmp
push
xor
add
ret
repz
decl
and
dec
loopne
adc
fisttps
les
fildl
mov
mov
add
xor
sub
jnp
and
ds
in
or
xor
mov
or
or
jb
mov
lock
fistl
stos
in
mov
or
xor
mov
adc
mov
into
push
dec
scas
sbb
aad
lcall
adc
push
loop
jle
repz
imul
sbb
push
lcall
insb
jo
dec
inc
sbb
mov
rorb
fsubr
mov
idiv
outsb
inc
nop
sti
or
push
mov
inc
int
dec
popf
int3
imul
xor
addr16
scas
sub
push
jle
dec
jnp
rcrb
xchg
pop
mov
xchg
int
adc
and
add
sbbl
pop
mov
sub
push
fadds
add
nop
sbbl
sbb
nop
add
fs
push
cmpsb
mov
jbe
push
or
add
adc
xor
add
jne
or
jne
xor
sbb
fiadds
dec
jo
js
pop
push
xor
xchg
push
add
scas
dec
and
inc
ret
das
iret
mov
add
pop
imul
add
sub
leave
insb
xchg
jo
push
dec
adc
fbstp
mov
jmp
cmp
sbb
rorl
jae
mov
sbb
cld
push
add
or
or
ret
dec
cmp
ja
fs
adc
psubusw
lret
ja
pop
inc
shll
mov
dec
mov
fldl
dec
fdivrs
or
lea
or
pop
sahf
adc
sbbb
xor
adc
mov
in
adc
inc
or
adc
outsb
rcrb
incl
and
pop
decl
push
rol
ljmp
add
xchg
add
inc
fistps
xchg
std
mov
mov
clc
or
testb
dec
or
adc
popf
push
push
das
lret
notb
lock
or
ret
inc
sbb
push
fisttps
fdivrs
xor
adc
fistl
adc
mov
stc
incb
repnz
xchg
pushf
je
out
add
iret
rcll
xor
xor
shl
stc
sarl
push
mov
out
fnop
dec
negl
add
ret
stc
push
adc
adc
dec
jne
stc
pusha
clc
xor
lock
push
dec
lock
cs
jne
dec
ds
shll
xorl
aas
ss
movsl
fwait
pop
lahf
sub
xchg
cld
sub
insb
pop
dec
pop
call
lods
push
mov
and
inc
stos
aam
sub
divb
or
push
mov
ret
adc
shrb
and
mov
andb
push
mov
clc
scas
mov
pop
rorl
mov
in
sub
loop
mov
jo
sti
push
or
mov
xchg
sbb
iret
dec
sbb
adc
mov
cmc
arpl
sub
or
push
push
mov
dec
inc
pushf
add
jp
adc
push
inc
adc
or
outsb
jl
fsubr
adc
pop
push
push
or
or
add
repnz
mov
pop
test
enter
push
popa
add
inc
mov
xchg
call
push
push
mov
inc
and
mov
mov
mov
push
inc
push
mov
wrpkru
sbb
scas
jnp
cmpb
pushl
out
or
mov
mov
adc
adc
cmc
dec
xor
lock
daa
mov
sbbb
loopne
out
mov
and
and
sbb
nop
gs
je
or
mov
xor
enter
push
push
cmpsl
fmulp
insb
aaa
add
mov
int
les
xchg
ret
ja
sub
mov
loope
es
pop
cmp
je
testb
jne
mov
cmp
mov
add
iret
je
xor
or
push
rclb
lods
fdivs
sti
push
sub
inc
pop
imul
sbb
mov
leave
imul
andps
js
push
add
lock
adc
inc
cs
dec
lock
lock
jmp
addb
test
leave
push
push
adc
jmp
pushf
mov
add
cmp
jp
dec
ss
mov
jbe
mov
lcall
leave
add
add
push
mov
out
sub
lea
mov
sub
cs
inc
daa
repz
aas
or
je
dec
popf
xorl
xor
pop
jl
testb
popf
inc
cmp
jno
fcoml
adc
ret
mov
or
inc
add
sub
inc
and
out
repz
scas
mov
adc
and
mov
jae
sbbl
adc
mov
jns
insb
shrb
jge
jne
ret
add
addb
mov
dec
xor
sahf
cs
or
popa
insb
fisubrl
mov
cld
adc
outsb
sbb
dec
jnp
xor
xchg
clc
data16
mov
dec
push
sbbl
lock
fidivrs
sub
and
rolb
lock
cmp
je
jle
mov
out
cmp
push
and
sbb
push
lea
add
push
adc
add
andb
aam
sbb
dec
rolb
lret
push
or
sbb
pop
imul
lods
add
adc
fadd
movsb
popf
xchg
fcoms
cli
les
es
cs
add
clc
pop
xor
pop
xor
ljmp
bound
fistl
xor
fs
adc
mov
jb
call
pop
arpl
jnp
jns
and
sbb
adc
inc
rclb
fcoml
out
andl
inc
loopne
or
loopne
les
adc
adc
dec
inc
pop
movsl
aad
popa
xor
mov
mov
cmp
je
and
incb
inc
mov
enter
sbb
jg
inc
jae
or
sbb
xlat
mov
add
cmp
addb
push
jns
pop
jae
call
mov
and
adcl
push
push
adc
jae
nop
sbb
inc
or
pop
cmp
xchg
push
pop
into
adc
insb
jecxz
lock
js
lods
adc
push
leave
int3
clc
loopne
cmp
repz
cltd
cmc
add
stc
loopne
lret
push
inc
clc
aad
int
addr16
out
pop
add
pop
add
and
cmp
or
xlat
pusha
cmp
adc
or
push
dec
jge
dec
cmp
je
test
mov
jmp
mov
cs
repnz
nop
sbb
test
push
jmp
pop
in
jle
mov
and
aaa
sarb
jo
addr16
fistpl
lea
fs
in
loop
gs
mov
jg
test
pop
dec
pop
mov
movsl
add
idivb
je
xor
sbb
mov
rcll
mov
pop
out
cmp
es
lahf
shl
out
jo
push
cli
sahf
cmpsl
cmc
mov
add
cmp
cmp
xor
xor
inc
cs
and
insl
pop
push
xor
jb
mov
and
shlb
mov
ss
aad
movsl
cmp
fadds
and
aas
mov
cli
jmp
jne
imull
push
movsb
mov
push
orl
mov
or
pmaddwd
adc
push
outsl
lea
add
push
push
sbb
sti
rorl
ficoml
or
add
ficomps
pop
sub
add
xchg
xor
adc
dec
or
test
pushf
dec
lahf
aam
adc
loopne
icebp
inc
into
sbb
or
sbb
outsb
stos
sbb
sub
jl
or
stos
xor
les
and
jb,pt
dec
add
or
mov
bound
xchg
pop
imul
ret
xchg
jge
lea
push
push
dec
sbb
sbb
xor
rorb
ficoms
movsb
and
xor
cmc
add
ljmp
sbb
int
add
test
mov
clc
test
std
decl
xchg
popf
xchg
xchg
lods
cs
cmp
rdmsr
sarb
ret
inc
popf
mov
testl
addl
call
mov
xor
shlb
test
xor
push
jo
bound
jnp
mov
test
jo
dec
push
xor
add
sbb
out
or
imulb
pop
cmp
fldl
or
mov
mov
test
stos
rclb
lret
lret
in
lods
jno
std
push
and
fbld
les
ret
mov
sub
sub
jmp
mov
and
neg
sbb
push
cmp
ret
inc
es
xor
and
adc
lock
fcoml
sbb
sbbl
insl
inc
insb
js
js
adcb
je
xor
jnp
cmp
lea
sub
subl
push
cmpl
sbb
inc
cwtl
test
pusha
adc
xor
pop
inc
xchg
dec
add
rolb
imul
or
lret
inc
jl
stos
cmp
fidivrl
sbb
inc
jmp
pushl
xchg
mov
pop
mov
iret
call
inc
lea
loope
out
ss
out
and
mov
aaa
mov
push
mov
sbb
push
pop
inc
push
inc
testb
test
jns
inc
push
out
ljmp
inc
inc
push
add
and
rorl
jl
cld
and
push
ds
sbb
inc
or
imul
jecxz
fistps
xchg
cmp
cltd
pop
push
sahf
push
xchg
dec
outsb
mov
in
inc
push
cltd
adc
xor
dec
rcrb
adcl
mov
insl
or
test
lret
and
inc
lods
pop
mov
mov
mov
mov
in
push
mov
push
inc
dec
cmp
mov
loope
jl
or
push
push
je
push
sub
adc
cld
andb
sbb
add
shr
pop
sbb
icebp
push
add
js
in
dec
dec
adc
pop
push
push
cmp
inc
push
inc
adc
inc
rcrb
fdivs
imul
or
mov
jae
pushf
pop
addl
pop
shrb
xor
and
repnz
loope
or
repnz
push
scas
xor
adc
push
sub
mov
add
cmp
adc
push
or
sub
cmc
mov
imul
ret
idiv
pop
testb
je
and
call
add
xor
and
xor
add
pusha
or
in
pop
sbb
movzbl
ret
adc
mov
dec
pop
outsl
or
jns
xchg
push
xor
push
adc
cs
jnp
inc
lret
mov
lahf
sbb
dec
ds
addl
aas
fcomp
dec
mov
mov
rorb
jge
push
fadds
and
popf
add
jmp
aaa
add
add
jb
das
add
iret
sbb
sbb
mov
test
aad
or
bound
stos
cs
xchg
push
cmp
fistps
ret
adc
sbb
cmp
ret
pop
xor
or
adc
xchg
and
or
pop
out
adc
mov
aaa
movl
xor
push
cmp
and
nop
test
sbb
nop
jmp
jno
xchg
dec
xchg
or
shlb
pushf
pushfw
inc
xlat
adc
push
aam
mov
push
mov
imul
push
mov
mov
xor
stos
and
add
mov
add
push
jo
jmp
xor
mov
pop
outsb
pop
cmpsb
jl
push
push
push
pop
cmp
sub
imul
sti
sub
cwtl
les
sbb
mov
cwtl
mov
mov
adc
adc
js
jne
cmpb
sbb
push
out
ds
jne
jb
or
imull
mov
pop
xor
xlat
or
mov
cmp
enter
xor
add
jns
and
enter
push
addl
or
pop
cmc
xchg
add
xchg
dec
pop
add
je
lock
adc
add
adc
call
andl
pusha
mov
mov
rcl
movsb
int
xor
pusha
outsl
inc
shrb
jle
into
add
and
cwtl
add
clc
test
lock
sub
inc
lea
cmp
pop
scas
scas
sub
add
scas
add
mov
mov
push
repz
ljmp
sbb
pop
and
test
shll
and
jecxz
testb
sub
mov
pop
int3
mov
mov
pop
jae
jbe
andb
jo
jl
dec
add
cmp
insb
mov
add
pop
lds
test
scas
sub
dec
push
push
cmp
shlb
xor
mov
mov
push
mov
adc
sbb
fisubl
cmp
dec
jge
adc
movb
add
dec
pusha
pop
cmp
cmp
mov
push
pop
mov
xor
cmp
add
testb
shlb
dec
mov
lods
xor
and
sbb
sbb
adc
xchg
pop
mov
jbe
xlat
adc
andl
mov
and
xchg
lock
inc
cli
push
cld
mov
lds
aas
rorb
jge
movl
shr
inc
add
adc
cmp
adc
dec
inc
add
loope
mov
adc
push
sub
sahf
loope
stos
pusha
insb
std
mov
decb
adc
fucom
movsb
test
mov
aam
add
adc
jge
clc
subl
jo
lods
lock
inc
fiaddl
cmp
jnp
adc
je
push
adc
les
fists
pop
adc
sub
insl
xlat
dec
cmp
out
xchg
jne
add
inc
aam
jp
xchg
loopne,pn
push
cmpsl
dec
jnp
jge
icebp
push
shlb
or
jle
push
push
mov
xchg
dec
cmp
data16
roll
aaa
push
inc
or
mov
jnp
push
adcb
push
sbb
inc
cmp
cmp
push
imul
jmp
pop
mov
addl
insb
mov
adc
aad
fwait
jno
loope
or
pushl
mov
mov
js
xorl
xor
lahf
sarl
add
pop
sbb
pop
sub
xor
xor
pop
adc
add
fwait
pop
cs
and
mov
adc
add
push
aaa
mov
adc
push
pop
mov
loopne
mov
pop
inc
loopne
mov
and
cmp
mov
or
and
cmp
dec
or
loopne
hlt
rcll
jmp
push
xchg
mov
pusha
xchg
adc
dec
out
lret
pusha
jb
xor
fnsave
cmp
sub
or
xchg
bound
inc
adc
jmp
pop
clc
in
cs
xor
mov
mov
adc
xchg
or
push
dec
mov
jmp
movsb
push
mov
or
push
mov
or
add
fnstcw
and
mov
js
or
cltd
inc
push
dec
add
mov
dec
int3
les
ret
call
adc
cmp
push
pop
adc
xchg
mov
jge
dec
cmp
aam
roll
les
mov
shll
fs
rolb
push
aam
inc
fprem
add
or
xor
pusha
daa
mov
insb
cmp
in
adc
cld
lock
jnp
cmpsl
stos
bound
pop
mov
xchg
xchg
stos
push
adc
shrb
pop
idiv
add
test
pop
push
in
mov
rolb
call
inc
mov
jno
lds
cmpsl
aas
mov
popf
out
cmpb
lods
inc
lcall
jmp
fbstp
sbb
andl
out
xor
jmp
or
xchg
lock
sub
xchg
cwtl
push
and
fcmove
into
mov
add
mov
daa
loop
test
jno,pt
neg
je
add
shl
inc
mov
testl
add
lcall
aaa
ds
add
push
ss
jne
adc
lret
test
adc
mov
cmpsb
add
adc
jne
imul
inc
ret
fimull
push
mov
pusha
mov
add
jae
push
push
sbb
and
mov
sbbl
pop
lods
jmp
pop
pop
push
push
cmp
aas
add
insb
dec
sub
sub
dec
sub
and
xchg
sbb
add
stos
in
xor
ss
sbb
or
aas
jle
es
push
testl
mov
flds
sbb
push
fcmove
push
mov
push
rolb
insl
subl
ja
xor
mov
jnp
pop
dec
pop
lods
push
repnz
lods
out
push
inc
xlat
add
ds
mov
add
pop
inc
or
shlb
adc
loopne
loopne
or
lds
rcrl
mov
sti
sub
rolb
mov
mov
shlb
cmp
fmuls
in
orps
roll
cmp
inc
testl
loopne
cmp
or
push
xor
xchg
mov
scas
jo
loopne
inc
push
push
sub
mov
lahf
pop
dec
ja
cld
sbb
adc
cld
push
pcmpeqb
mov
mov
mov
loopne
add
pusha
dec
inc
les
pop
and
mov
pop
adc
push
and
sbb
cmp
xor
and
adc
outsl
mov
or
dec
ja
je
or
je
or
sub
xchg
in
or
scas
cmp
stos
jecxz
and
cmp
icebp
movsl
push
or
add
ss
jne
lcall
mov
adc
jmp
cmp
adc
rclb
adc
sub
xchg
cmp
inc
add
lds
mov
dec
lret
stos
shlb
jbe
popf
pushf
cmp
inc
jmp
jb
sbbb
xchg
mov
es
test
les
or
rorl
dec
sti
sub
add
je
lock
movsb
or
push
sti
xchg
pop
or
adc
test
pop
sbb
pop
loope
rolb
and
and
lock
mov
add
push
movb
sbb
sysexit
icebp
cmpsl
and
dec
je
add
out
jp
cmpl
push
aad
add
incb
adc
add
loopne
inc
push
adc
in
out
mov
jp
mov
cmp
das
ds
or
push
adc
inc
daa
push
mov
loopne
push
pop
jo
ds
lds
cmp
cli
cs
dec
pop
xchg
in
or
ret
sahf
sbb
sub
call
or
or
add
cld
in
pcmpeqd
jmp
pop
add
gs
xchg
jo
add
jp
jae
sbb
adc
push
rorl
pop
fcoml
add
xor
mov
sti
je
push
sub
mov
inc
add
sub
sar
xchg
jno
mov
push
or
jbe
data16
nop
fcomp
sbb
ret
ss
test
xchg
in
push
push
in
push
cltd
add
sbb
cwtl
add
sbb
subl
call
xchg
xchg
add
and
sub
mov
mov
cwtl
cmpsl
dec
jnp
push
add
xchg
frstor
and
in
call
cltd
mov
cmp
test
in
repnz
add
cmp
int
aam
push
lock
jae
call
sbb
pusha
aas
push
push
or
fmull
lret
jo
outsl
inc
fnstsw
pop
jge
scas
push
sbb
xor
call
in
mov
push
xchg
fcoml
in
mov
and
in
xlat
pusha
dec
push
mov
xor
dec
lcall
push
aas
or
mov
jno
push
push
lods
test
xchg
push
adc
dec
inc
cwtl
idivl
sub
add
popa
test
sbb
adc
add
mov
clc
dec
fisubl
mov
sbb
adc
jbe
cmc
inc
sub
ret
adc
pushf
popa
push
lods
negl
jmp
rorb
stos
inc
out
add
test
jb
sbb
jmp
jle
or
dec
sbb
or
test
xor
rorl
xorl
scas
popa
dec
mov
adc
loop
dec
loop
sub
pop
mov
data16
mov
adc
sbb
nop
loopne
fldt
daa
adc
mov
enter
lret
xor
push
jne
add
popa
mov
xor
andl
pop
call
lock
je
cltd
nop
data16
icebp
les
and
adc
push
jo
int
dec
leave
pop
sub
and
nop
outsl
je
je
add
jmp
add
or
js
mov
iret
xchg
xor
loopne
mov
in
out
scas
xchg
enter
or
pop
mov
add
lods
stc
fwait
aaa
adc
dec
sub
and
sbb
insl
cmp
mov
pop
push
or
push
lret
add
push
xchg
mov
add
cmpsl
dec
inc
adcl
mov
sub
fsubrs
cwtl
inc
xchg
push
cmp
cli
or
out
dec
loope
add
test
aas
xor
outsb
and
add
sbb
add
sbbl
add
hlt
call
xor
cmp
incl
sub
sub
inc
stos
decl
inc
ds
popa
cmpsb
movsl
pop
stos
push
jl
mov
add
out
pop
cmp
movsb
pop
jp
ret
pop
cli
lock
leave
pop
mov
dec
aas
or
lea
jge
mov
rclb
cmp
mov
pop
fcoml
add
push
or
add
into
loope
iret
xchg
pop
pop
push
add
dec
shrb
and
inc
adc
fiaddl
dec
sub
aam
clc
xor
test
pusha
or
scas
int3
push
push
cwtl
add
push
xchg
pop
add
dec
fs
or
popf
jne
cmpsb
loopne
jg
clc
or
push
push
mov
sarb
mov
es
cmp
push
loopne
filds
gs
orb
popf
cmp
test
inc
sub
add
cli
or
adcb
jg
sbb
jo
cmp
add
sti
mov
jne
shlb
iret
or
les
sbb
in
in
or
lods
fistl
push
xchg
fmuls
cli
jl
sbb
fistpl
ja
push
movsb
push
out
mov
arpl
dec
lock
xchg
js
mov
repz
out
dec
or
fsub
jge
mov
outsb
sarb
sbb
roll
xchg
sbb
and
xchg
cmpsl
sbb
adc
movsl
sbb
in
add
mov
fiaddl
inc
jecxz
stos
mov
pop
dec
adc
and
mov
sbb
inc
setl
push
dec
std
mov
aas
pop
outsb
xor
push
xor
xor
mov
xor
addb
push
cmp
movb
mov
dec
adc
ret
push
adc
or
out
push
loop
lods
mov
mov
inc
add
scas
push
push
mov
sbb
add
push
cmp
out
adc
push
mov
pop
pop
sbb
enter
or
cmpsl
inc
mov
inc
xor
nop
cmp
xchg
adc
push
add
or
notb
xchg
cmp
cmp
hlt
repz
sbb
pop
fisubrs
es
rorl
shr
test
ljmp
hlt
cwtl
mov
adc
lcall
es
in
mov
sbb
dec
js
or
loope
or
dec
addl
fcom
jmp
push
xor
call
arpl
add
rclb
or
sub
jo
or
cmpsl
push
push
jbe
pop
fcoms
sbb
and
add
push
subl
dec
dec
cli
add
pop
je
or
push
cmp
pusha
test
fst
pop
sub
scas
adc
int
test
mov
xor
sbb
sbb
test
bound
inc
dec
adc
cmc
fmuls
add
pop
daa
and
xchg
sbb
sub
insb
stos
test
fiadds
and
mov
es
push
jmp
sbb
inc
pop
mov
inc
pushf
push
adc
and
sub
pop
mov
adc
push
cld
push
xor
test
repz
mov
orb
call
mov
adc
scas
xchg
or
lea
mov
or
sub
mov
and
push
rorb
pop
push
sbb
insb
mov
cmp
lock
dec
or
lds
push
dec
out
add
push
xchg
iret
lcall
daa
push
sbb
out
pusha
sbb
pusha
enter
les
xchg
push
and
jns
push
cmp
push
insb
add
xchg
sbb
movsl
repnz
push
aaa
sub
or
and
push
fs
ds
push
sub
add
sub
clc
or
xchg
add
arpl
jae
leave
mov
add
mov
jbe
sbb
push
mov
pusha
rolb
dec
mov
loopne
xor
push
push
lret
leave
cmp
push
iret
mov
mov
enter
push
mov
test
inc
ret
cmp
sbb
movsl
repnz
push
jmp
push
fwait
inc
xchg
or
insb
mov
or
dec
sbb
ja
add
loopew
jl
inc
repnz
sti
sbb
push
dec
sahf
xchg
add
adc
sbb
cli
stos
loope
push
in
jmp
sbb
mov
push
mov
push
jl
add
dec
push
mov
rol
scas
sub
mov
roll
sbb
arpl
lods
inc
divb
sarl
mov
sbb
sbb
ret
dec
adc
mov
pcmpeqw
mov
imul
popf
call
add
mov
add
or
sbb
mov
adc
or
movsl
aaa
sub
push
scas
mov
pop
jno
insb
pop
lret
js
mov
xor
and
mov
iret
stos
add
or
sbb
das
rorl
push
movsl
sub
pop
push
ficoms
sbb
sbb
add
sbb
out
push
xlat
xchg
out
push
dec
testb
mov
mov
inc
jecxz
cs
xchg
jae
xor
dec
loopne
sub
repz
movsl
jbe
lds
xchg
and
push
xchg
pop
xor
mov
sbb
dec
aam
icebp
loopne
nop
aas
pop
lcall
dec
shrb
xchg
dec
scas
in
call
lret
and
cmp
pop
pop
xor
idiv
xor
jne
add
out
cmp
mov
jecxz
imul
xor
cld
sbb
or
repz
sbb
xchg
and
push
std
repz
dec
sub
and
rcrb
enter
xor
adc
sub
jne
pop
add
xchg
or
dec
push
pop
or
test
mov
adc
pop
out
mov
mov
xchg
add
xor
add
pushf
push
aaa
in
loopne
dec
dec
add
cmp
js
or
or
aam
push
mov
add
popf
cwtl
roll
push
mov
dec
in
mov
insb
lcall
dec
in
mov
dec
sbb
push
sti
inc
add
inc
add
test
rcrl
jo
pushf
dec
sub
add
mov
sbb
pop
lods
inc
fwait
or
jns
jne
aam
add
es
cmp
ret
sbb
dec
ss
popf
leave
imul
rorl
stc
frstor
in
inc
adc
stos
and
mov
pop
add
sarb
adc
jbe
push
filds
mov
or
push
repnz
push
jl
cmp
pop
shlb
inc
mov
and
ret
inc
out
pop
cmp
jne
pop
adc
pop
stos
jbe
pop
cmp
jge
cmp
rclb
or
mov
pop
pop
mov
fwait
dec
jp
sub
loopne
sbb
sub
adc
ds
shl
outsb
in
add
push
or
add
faddl
les
addb
rcrl
enter
xchg
or
outsb
mov
sbb
sbb
movsb
pop
pop
hlt
aam
adc
mov
mov
xchg
or
inc
pop
mov
data16
mov
push
dec
or
add
xor
cli
and
and
subl
xchg
pop
and
pop
lcall
xchg
or
jo
adc
inc
mov
pop
scas
sbb
or
insl
inc
ret
pushf
aas
push
pop
or
pop
or
add
jnp
data16
in
insb
add
stc
ljmp
or
movsb
arpl
ja
popa
stos
fstpt
sbb
mov
idivl
scas
xchg
dec
ret
imul
inc
es
mov
sub
aad
sub
xchg
js
lock
jns
xor
loope
add
sbb
sbb
sbb
test
roll
test
mov
sar
sbb
mov
lods
sar
push
xor
push
lds
and
sbb
mov
add
sbb
sub
add
stos
inc
sub
jo
jno
aaa
test
dec
sbb
and
cltd
pop
repnz
pop
mov
arpl
push
and
and
mov
pop
or
mov
dec
stc
add
test
mov
xchg
push
sub
cmp
jbe
mov
cmp
adc
cmp
push
sbb
push
pop
outsl
loopne
adc
xor
add
in
sbb
test
jbe
xchg
lea
jae
imul
jo
pop
xor
rorl
jae
iret
popa
inc
dec
inc
mov
mov
mov
shll
andb
jb
cmp
pusha
rclb
icebp
or
sbb
orl
adc
add
push
push
rcl
fiadds
cmp
jb
cmp
cmp
and
push
mov
xor
inc
jmp
xor
rcl
scas
js
cmp
push
push
push
pop
xchg
xchg
cmpsl
fstpl
mov
inc
lods
push
jg
aam
mov
ret
sbb
in
adc
pop
ret
or
pop
addb
jno
decb
inc
or
and
cmp
std
adc
jo
jne
andl
mov
push
pop
sub
enter
add
jle
sbb
test
jmp
notl
mov
add
add
add
mov
enter
jo
jecxz
popa
or
dec
leave
mov
jmp
inc
adc
xchg
lahf
inc
or
and
scas
rcr
pusha
jno
or
scas
mov
fisttpl
or
add
and
sub
ds
sbb
or
in
mov
in
or
or
leave
rolb
adc
xorl
sbb
pop
out
jns
mov
jno
in
imul
sbb
and
xor
rcrb
push
aam
jmp
out
mov
pop
and
or
std
add
andl
adcl
sub
fs
xor
xor
fdivrp
mov
ret
shll
inc
mov
cmpsb
dec
fmull
dec
loop
pop
stos
push
add
push
sbb
mov
push
scas
dec
fcoml
js
rorb
pop
and
pop
mov
test
mov
cli
push
rdtsc
movsb
push
inc
or
lea
add
les
cli
rep
mov
xchg
test
rorb
fildl
ror
mov
lea
pop
popa
or
pop
and
es
sbb
pop
jg
push
xor
add
or
jns
or
cmpsb
roll
cwtl
push
jge
xorb
icebp
and
adc
pushl
adc
in
hlt
pop
ret
push
mov
lret
or
push
push
pop
mov
jo
jnp
lahf
jne
test
and
les
push
cmp
xchg
popf
pop
in
shr
dec
and
jmp
push
mov
loopne
test
sbb
push
push
sub
sbb
cmp
andps
inc
add
cmp
dec
push
adc
cmp
pop
jg
inc
int3
fs
test
push
add
enter
stos
insb
insl
mov
lock
add
je
or
ret
inc
cmc
pop
pusha
mov
scas
cmp
outsb
push
clc
rcll
in
movsb
std
mov
mov
ljmp
cld
or
jo
sbb
clc
loopne
mov
lds
inc
inc
and
int3
insl
mov
clc
lea
inc
dec
imul
mov
push
cmp
pop
daa
popa
jb
sbb
nop
fisttpl
and
aaa
in
arpl
cmpsl
dec
mov
movb
add
pushf
call
or
inc
mov
or
inc
pushf
adc
jle
mov
test
rorb
int3
push
cld
loope
cmp
xor
mov
sbb
inc
je
jno
imulb
jge
jne
pop
inc
mov
and
mov
sub
xchg
add
fwait
sbb
daa
pop
loope
jmp
sbb
inc
cs
push
jecxz
sbb
test
or
xor
sbb
ss
shlb
imul
pop
enter
test
jg
mov
jb
xor
or
cmp
je
or
ret
mov
test
adc
or
orb
clc
mov
dec
add
jmp
xor
nop
inc
add
ror
cmc
sbb
out
sbb
jnp
int3
push
shll
push
xor
in
je
cli
jg
stos
int
add
ja
pop
pop
inc
stc
pop
push
loopne
out
test
or
jl
sub
xor
or
cmp
mov
inc
mov
dec
cld
pop
push
dec
jmp
and
repnz
dec
add
add
mov
cmpl
inc
add
inc
dec
cmp
fsubrp
or
add
mov
js
loope
xchg
cltd
inc
add
decl
loopne
or
jno
mov
or
cmc
adc
dec
or
lods
fimuls
adc
xor
leave
add
adc
or
mov
push
mov
xchg
fs
push
std
lea
mov
or
lods
ja
cmp
adc
dec
mov
jnp
sub
jmp
fistl
cmpb
or
and
inc
sbb
mov
push
ja
sbb
xchg
iret
lcall
jo
popa
and
iret
inc
sbb
adc
push
mov
ret
push
addr16
or
je
or
fstpt
je
cmp
cmp
push
sub
pop
add
adc
cmp
push
divb
mov
dec
sub
sahf
ss
push
or
adc
xor
xchg
mov
xchg
push
xchg
jecxz
push
adc
sub
add
mov
pop
add
sahf
mov
cmpsb
inc
xor
or
adc
xchg
fisubrs
jmp
sub
jae
ds
and
sub
inc
sbb
inc
movl
mov
loopne
sub
jne
push
push
push
cmp
in
sub
les
sbb
dec
into
mov
dec
jbe
or
adc
data16
add
roll
sub
lret
xchg
loop
jge
sbb
or
add
sbb
sbb
shll
testb
jbe
sbb
addb
xchg
lock
stc
jl
xchg
push
and
add
push
sub
xor
xor
or
adc
andl
test
rorl
mov
sbb
add
pop
shl
push
dec
mov
mov
pop
rolb
mov
mov
cmp
sete
push
pusha
fwait
loopne
mov
jmp
mov
adc
sarl
shl
mov
sub
loopne
xchg
inc
mov
cmpl
enter
add
inc
cmp
mov
inc
mov
push
cld
clc
pop
js
mov
xor
add
lret
lret
add
jnp
push
adc
mov
push
push
ja
xchg
push
mov
sti
push
or
or
or
push
sbb
outsb
inc
or
mov
mov
push
loope
incb
sahf
push
mov
dec
mov
and
dec
in
ss
add
mov
jo
push
cmp
jno
mov
push
mov
addl
push
jb
bound
sbb
inc
adc
arpl
and
add
add
adc
popa
bound
cwtl
popa
xor
cmp
sti
dec
or
and
sarb
dec
jne
push
loopne
mov
add
cli
bound
loopne
push
push
inc
sbb
and
mov
xchg
xchg
push
jno
dec
lahf
movsl
push
push
mov
mov
xor
and
je
mov
out
push
es
rcrl
cltd
cmp
jl
orb
gs
orb
sub
push
cmp
sub
pop
xchg
pop
subb
stos
push
sbb
pop
sbb
or
andb
js
les
push
xor
bound
or
push
mov
into
call
aad
pop
pop
or
adc
xchg
in
mov
std
pop
add
mov
inc
inc
call
adc
push
loop
mov
and
pop
or
shrb
add
and
jl
push
imul
add
testb
movsl
ljmp
ds
add
add
jle
daa
add
mov
pushf
out
lret
popa
insb
loope
pusha
scas
daa
insl
insl
push
adc
imul
stc
jb
jg
adcl
and
dec
rorb
or
outsb
sub
imul
jbe
xor
rcl
mov
adc
push
outsb
sub
sar
cmp
jbe
or
add
jmp
fcmovb
lret
addl
rorl
add
jecxz
sbb
movsl
pushf
faddl
xchg
rcrb
in
mov
cmp
movsb
add
sbb
push
add
ret
sub
jb
pop
test
add
pop
insb
and
ja
lea
mov
fdivp
inc
xchg
xor
imul
daa
movsl
push
aad
mov
cmpl
shr
jbe
jnp
in
aad
test
mov
and
lea
lea
mov
cmp
dec
or
cmp
nop
shll
push
adc
push
aas
nop
mov
sub
iret
pop
pop
xchg
popf
or
mov
dec
add
sbb
inc
dec
stos
xor
mov
ret
pop
movsb
rolb
inc
and
shlb
dec
sbb
pop
dec
push
jge
mov
sbb
enter
scas
mov
orl
jne
mov
jg
sub
lea
jp
cmp
lret
sahf
mov
push
call
jae
jb
pushl
lock
loopne
mov
pop
or
pop
jmp
inc
pop
icebp
or
clc
jae
adc
and
push
add
mov
push
jecxz
insb
rcrl
out
fwait
and
int3
incb
std
jb
imul
imul
jp
dec
and
movsl
pop
lock
int3
mov
repnz
jle
ja
shrl
stc
adc
pop
test
push
out
add
loopne
mov
mov
out
lret
add
jmp
pop
lock
pop
add
pop
xor
jmp
cmpsb
adc
mov
push
sub
test
xor
mov
popa
or
inc
and
adc
push
pop
arpl
fcomps
add
mov
aaa
lahf
dec
cmpsb
scas
mov
and
mov
popa
add
xchg
sbb
dec
data16
pop
enter
sbb
sub
push
andl
jmp
adc
daa
or
jbe
cmp
sbb
or
add
adc
fcmovne
daa
pop
fidivs
adc
fsubrs
sub
ja
and
in
adc
or
jb
rcll
sub
ss
dec
or
pop
dec
lahf
sbb
outsb
xchg
out
jmp
adc
and
adc
and
dec
add
mov
add
or
or
setl
push
test
mov
or
lock
xor
xor
in
jo
fidivs
cwtl
jne
and
fwait
sub
je
bound
dec
dec
or
and
mov
cli
movsb
jbe
int
loopne
in
xchg
movsl
push
cmp
ret
sub
ss
xor
hlt
add
insb
mov
sti
adcl
faddl
push
sbb
aas
and
or
and
or
xchg
xchg
dec
and
sbb
xchg
jl
xchg
xchg
and
add
sub
jae,pn
nop
inc
dec
or
in
add
jmp
push
push
add
inc
push
xchg
sub
mov
or
mov
pop
mov
mov
movsl
dec
xor
and
fstpt
jb
xchg
cmp
or
fbld
frstor
add
and
adc
sbb
adc
shr
pop
adc
jmp
add
dec
sbb
inc
inc
add
or
movl
lods
test
andb
les
mov
adc
add
jecxz
adc
test
subl
push
push
jmp
aaa
mov
ja
dec
shll
ja
inc
rolb
mov
pop
pop
adc
add
xor
orb
neg
mov
mov
or
lret
sbb
pop
imul
call
imul
movsl
xchg
xchg
and
fbstp
rolb
mov
sbb
pop
cmp
jbe
or
data16
pop
push
nop
mov
ret
js
ds
pop
mov
add
cmp
je
stos
fstps
fmull
jecxz
movaps
mov
lock
fwait
or
lea
popf
add
sub
adcl
add
adc
loopne
push
add
shlb
in
inc
cmpl
bnd
push
add
dec
dec
mulb
out
je
dec
pop
push
mov
stos
or
xor
sahf
pop
dec
rolb
pop
inc
sub
pop
movb
pop
sbb
jae
jne
sbb
sbb
add
or
test
lea
cs
in
inc
call
ret
or
cmp
je
les
ret
mov
dec
sub
cld
mov
pop
or
mov
push
cmpb
int3
loope
push
jae,pn
outsb
mov
xor
inc
int3
mov
or
adc
idivb
cmp
jl
push
lds
cmp
sub
inc
in
adc
test
je
lock
js
adc
stc
add
add
clc
pop
jmp
pushw
push
ret
clc
or
cmp
jg
iret
outsb
inc
xchg
insb
jle
push
xchg
dec
pop
push
jo
dec
add
sbb
push
enter
insb
xor
fcmovnb
push
push
movl
or
enter
in
call
xchg
in
adc
and
fdivrl
push
sub
pop
jmp
cmp
psraw
inc
ljmp
add
fadds
test
sbb
xorb
mov
sti
fwait
add
repz
data16
lock
add
pop
or
xor
loopne
test
push
pop
or
bound
test
add
or
test
xchg
loopne
xchg
dec
cmp
sbb
or
insl
or
sbb
or
mov
jmp
push
mov
lahf
fsubrl
lock
sbb
mov
fwait
cmp
or
repnz
stc
data16
lods
mov
cwtl
mov
or
push
shrb
movsb
xor
fnsave
les
ret
push
inc
mov
sbb
inc
adc
pop
and
or
xchg
adc
fisttpll
xchg
je
cwtl
repnz
ret
nop
lret
xchg
repnz
dec
and
inc
js
cmp
ss
push
aaa
inc
js
shll
adc
stos
shrl
xor
push
lock
xchg
cmpb
and
add
packssdw
repz
lahf
incl
pop
js
xor
push
mov
cmp
jl
cmp
jbe
sti
pop
jle
cmp
push
jp
or
pop
inc
cmp
aas
lods
jmp
xorl
sub
jge
mov
pop
and
pop
enter
xor
je
cmp
je
push
or
lock
pop
xor
lcall
iret
lods
mov
pushf
jae
cs
pop
addl
xor
mov
jbe
testl
push
outsl
inc
inc
mov
mov
add
dec
inc
adc
lock
push
cs
dec
enter
ret
imul
fidivl
jmp
sbb
fdivr
outsl
mov
and
aaa
and
iret
cmp
jne
movl
hlt
inc
mov
mov
add
test
jle
loopne
push
adcl
adc
jmp
sub
lock
or
lea
mov
orb
repz
push
out
push
mov
mov
add
mov
or
mov
pop
and
jo
nop
cli
cmp
ja
sahf
jle
ret
or
dec
cmp
ret
jo
das
movsb
incl
mov
movsl
add
sbb
cmp
add
dec
mov
rcr
fistl
je
and
mov
fildl
sub
mov
iret
sub
lahf
pusha
mov
call
or
enter
sub
cld
jo
push
sbb
leave
clc
adc
lea
mov
test
jo
je
pop
jecxz
fnsave
call
or
cmp
leave
pop
je
popa
loope
dec
inc
arpl
js
sbb
outsb
cwtl
or
fld
push
pop
lar
inc
xor
stos
sarb
das
sbb
sub
adc
xor
add
xlat
mov
push
push
gs
sahf
pop
pop
pusha
fs
out
sbb
push
cmp
ss
add
inc
insl
cmp
sub
adc
jns
or
data16
add
arpl
inc
es
dec
adcl
imul
bound
and
xor
jp
xchg
cld
out
xor
add
xor
sub
jne
mov
or
scas
loope
ret
lea
add
imul
aaa
pop
and
dec
and
jl
je
sub
cmp
push
ficompl
mov
loop
rclb
ret
addb
mov
sub
jle
and
loopne
add
sbb
push
imul
or
mov
addb
add
jo
std
cmp
push
pop
sbb
push
sbb
mov
cli
loope
add
jne
mov
sbb
jnp
xchg
repnz
por
sub
add
push
out
and
sti
in
pop
xchg
add
push
push
lahf
pop
jb
loope
mov
mov
pop
loopne
loop
fucomi
jae
cmp
sbb
fdivrl
icebp
ss
insl
sarl
les
jnp
xchg
push
adc
fdivl
lret
jmp
into
adc
clc
add
jmp
sub
out
sbb
mov
adc
sbb
into
test
dec
pop
xchg
sbb
rorl
pop
adc
fstps
mov
fwait
movb
dec
sarb
add
push
out
xor
out
inc
pop
cld
in
xor
inc
call
and
sbb
loop
adc
in
dec
mov
mov
test
out
and
daa
je
cmp
lock
xchg
subl
push
mov
pop
mov
xchg
lods
inc
mov
outsb
dec
cmp
xor
xor
popf
and
inc
int3
fs
ficoml
add
add
mov
jl
je
push
jne
in
sbb
es
into
sbb
lods
pop
pusha
movsb
or
push
inc
repnz
mov
pop
adc
mov
sub
jne
aaa
sub
pop
je
sbb
mov
cmp
pop
mov
or
fs
inc
sub
mov
insl
inc
add
cmp
jne
xchg
and
mov
xchg
and
adc
enter
imul
and
das
imul
arpl
adc
movb
vfmsubsd
std
push
insb
ljmp
mov
cmp
inc
lock
popa
push
jbe
fdivrs
add
jo
movsb
sbb
test
dec
dec
pusha
mov
mov
mov
cmpb
fildll
pop
or
jle
enter
incl
repz
add
push
or
push
push
hlt
call
inc
sahf
sub
call
jbe
cmpl
adc
movsb
xchg
and
adc
in
or
push
push
hlt
jg
mov
sub
push
nop
and
cmp
or
aas
add
jmp
loope
lds
jl
push
adcl
mov
mov
xor
add
add
or
decb
cmp
xor
mov
or
dec
lods
insb
roll
test
loopne
mov
roll
jg
mov
dec
test
push
lock
pop
pop
test
cmp
dec
adc
shrl
rolb
clc
add
stos
outsb
aam
mov
pop
pop
or
jns
jb
loope
addb
mov
testb
inc
cs
adc
pop
add
push
or
add
lods
and
aaa
call
jmp
gs
push
es
mov
sbb
rcrl
jne
in
push
ja
mov
adc
sarb
aas
ret
js
xlat
cld
push
jae
mov
mov
jl
xchg
pop
and
dec
clc
ret
jmp
and
mov
pop
test
adcb
pop
and
xor
sub
add
add
outsb
lret
inc
mov
adcb
xlat
jmp
adc
push
rcrb
loopne
lea
and
or
roll
dec
fs
mov
cmc
xchg
push
push
adc
shl
push
mov
dec
cmc
adcb
int3
lea
dec
inc
daa
addb
cmp
push
mov
lea
test
lret
jae
lea
call
push
inc
sbb
mov
divb
pop
xchg
xor
or
xor
jbe
inc
and
push
popa
or
jb
mov
test
pushf
pop
jle
mov
pusha
cmp
loope
push
push
test
inc
xor
dec
loope
or
push
fcomp
sbb
stos
push
repz
push
fldl
pop
push
push
adc
cmp
fstpl
dec
cld
ss
pop
data16
jne
adc
adc
jne
push
lahf
out
stc
divb
or
jne
or
jne
push
js
cld
jecxz
or
or
push
fldz
add
pop
andl
xchg
cmp
loop
inc
in
into
add
or
pop
xor
mov
scas
mov
sub
add
loopne
xor
dec
jg
fistl
lret
mov
jnp
fstl
jecxz
loop
jbe
ret
xchg
je
movsl
lea
movsl
mov
ret
or
mov
adc
mov
fidivrl
mov
stos
inc
cmp
sbb
mov
jae
mov
push
lea
fsts
fidivrs
xchg
pop
sbb
aam
aam
shrl
pusha
inc
fucom
cvtdq2ps
ret
jne
cmp
pop
sub
push
or
mov
mov
or
pminub
cs
add
push
push
sbb
and
push
and
jle
shr
push
test
rolb
add
fsubr
pop
or
pop
jb
push
leave
scas
inc
add
outsb
cmp
les
pushf
shr
mov
dec
fsubl
loopne
or
pop
fs
sbb
movsl
daa
jge
xor
lahf
aad
lock
std
push
mov
add
popa
popa
out
sbb
cmp
cwtl
add
push
adc
shr
jecxz
in
sbb
add
fs
popa
add
push
adc
cwtl
xchg
xchg
jl
push
push
lods
movsb
outsb
pop
inc
shlb
fstps
movsb
and
push
pop
or
jmp
push
fwait
mov
sbb
popa
jecxz
ret
les
adc
push
and
ja
push
inc
adc
or
pusha
xor
or
dec
add
and
aas
push
adc
adc
data16
inc
mov
pop
pusha
cmpsl
lret
mov
add
or
bound
bound
js
mov
add
fwait
nop
inc
add
insl
push
test
push
enter
lret
or
jo
aam
fs
outsl
arpl
fisttpll
int3
shl
or
or
fmuls
add
inc
fmuls
fcompl
sbb
fsub
push
inc
jmp
xor
xchg
mov
imul
dec
dec
xchg
adc
sub
sub
mov
add
push
popf
leave
xchg
xchg
xchg
push
push
ror
enter
xchg
sarb
mov
test
mov
daa
cmp
inc
xchg
mov
in
imul
push
dec
ds
or
push
xor
loopne
jl
shrb
repz
pop
or
push
xor
push
cs
js
bound
ret
xchg
or
popf
cmp
jle
sub
imul
adc
or
lods
imul
or
add
mov
mov
push
adc
jle
inc
shr
mov
mov
pop
xor
lea
pusha
xor
fiadds
add
cs
test
pop
dec
data16
jbe
leave
jp
add
orb
hlt
cld
cmp
jl
pusha
push
cli
pop
sbb
into
fistpl
test
aaa
xor
test
addl
test
or
dec
xor
add
push
or
or
xor
jle
mov
jp
scas
push
frstor
daa
pop
sbb
mov
push
mov
sbb
push
call
push
pop
xchg
push
mov
add
add
jb
mov
push
push
test
aad
dec
jb
fsubrs
jp
cmp
decl
loop
test
insb
add
adc
mov
or
rcr
flds
in
sub
lock
pusha
jg
mov
jl
aas
xor
jl
pop
call
or
pop
wbinvd
test
push
jns
sub
add
out
addl
push
ret
cmp
mov
cmp
sbb
arpl
fists
ljmp
movsb
or
addr16
aaa
lock
mov
adc
jl
mov
mov
push
inc
lock
or
inc
imul
mov
push
adc
mov
stos
fs
pop
jle
pop
in
and
fadd
lret
cmp
mov
cmp
je
popf
xchg
xlat
outsb
inc
pop
and
jno
jecxz
into
or
add
push
and
adc
loope
mov
jnp
jg
loope
adc
les
test
lock
cs
shl
adc
lods
or
pusha
xor
or
test
test
out
fcomps
push
imul
push
iret
pop
jp
movsl
stos
xor
mov
xor
cmpsl
gs
andb
xchg
pop
pop
stc
inc
outsb
sbb
loopne
xchg
sbb
mov
sti
adc
mov
lea
popa
add
mov
mov
mov
das
sbb
pushf
shlb
loop
cld
mov
jne
outsb
cmp
or
iret
pop
lds
push
in
leave
scas
push
jns
add
and
ja
adc
adc
mov
or
jg
inc
inc
push
add
inc
inc
outsb
je
rorb
or
js
xchg
mov
outsl
cmp
inc
pusha
dec
adc
sub
lock
dec
loope
sbb
icebp
cmp
jp
pop
gs
and
pop
push
fsubrl
jle
cmc
ret
add
in
stc
mov
pop
inc
lds
mov
int3
push
mov
lds
or
pop
ja
adcl
shrb
lahf
mov
cs
inc
out
xchg
push
movsl
sub
xchg
xor
xchg
sbb
stos
adcb
pop
insl
add
bound
insb
lahf
mov
mov
mov
ficoml
push
rcrb
lahf
lret
add
lds
in
movsl
and
jbe
cmpsl
arpl
push
sub
inc
lahf
sbb
shrb
lods
enter
push
loope
push
sub
jb
popa
jbe
in
lock
je
ds
das
jne
pusha
push
call
test
iret
adc
add
test
jmp
jae
sub
sub
mov
adc
adc
sbb
mov
in
cld
rolb
mov
loope
mov
fnstenv
aas
pusha
mov
jp
or
push
insb
adc
adc
sub
lods
mov
pop
cmp
pop
testl
stos
je
inc
mov
pop
mov
sbb
adc
addr16
arpl
leave
sub
add
push
push
popa
pop
or
sub
aaa
or
pcmpgtb
or
push
sbb
mov
jl
sub
jno
lea
test
mov
adc
adc
sarl
dec
add
jl
push
sbb
fsubr
pushl
pop
test
push
add
cwtl
xor
adc
push
sub
pop
mov
jecxz
adc
inc
in
je
call
inc
frstor
ja
int
cwtl
aam
push
dec
std
arpl
cli
arpl
mov
add
sbb
lret
push
mov
lock
and
push
inc
add
sarl
xchg
pop
mov
adc
arpl
mov
loopne
add
xor
ds
sbb
adc
xchg
xchg
add
inc
adc
ret
sbb
mov
or
in
add
add
fistps
fisttpll
inc
sbb
into
imul
mov
push
add
out
dec
aam
dec
loope
mov
loopne
or
in
scas
lahf
lods
push
inc
push
test
popf
pop
pop
push
orl
lahf
adc
push
jns
jmp
add
sub
xchg
add
mov
popf
adcl
aad
das
loopne
daa
xchg
sub
fistl
inc
push
pusha
subl
shlb
or
xchg
aam
cwtl
xchg
mov
add
test
mov
sbb
push
fsubl
cmp
popf
clc
jno
fimull
sahf
mov
mov
xchg
cmp
mov
aaa
aam
push
aas
icebp
jne
inc
enter
loop
stos
push
rcll
cld
jae
mov
scas
pop
cmpsb
push
test
loopne
pop
dec
jp
fnstenv
mov
jnp
push
dec
add
dec
xchg
ja
dec
add
insb
mov
mov
enter
mov
push
add
push
sahf
into
mov
inc
mov
mov
push
push
push
test
jmp
ljmp
in
add
mov
pop
jne
push
mov
clc
or
jb
decb
pushl
cli
cld
and
xor
jo
movb
iret
rolb
mov
xor
add
dec
adc
inc
push
xchg
movsl
pop
ljmp
push
pop
add
ss
dec
add
cmp
sub
xchg
mov
sub
nop
ret
stos
imul
add
or
in
adc
mov
push
pop
push
pushf
and
stos
sti
push
pushf
pop
movsb
jb
pop
xor
lods
out
or
push
mov
push
pop
sub
xchg
jb
xchg
outsl
or
pop
sub
movsb
or
cmpsl
lods
or
mov
mov
cmpsb
loope
adc
mov
xchg
and
mov
jo
addr16
dec
idivb
mov
and
xchg
lret
in
cs
mov
movsb
out
jae
sub
inc
cld
and
cli
enter
sub
in
scas
sbb
sub
mov
lret
add
mov
add
or
xor
inc
sbb
and
loopne
mov
cmp
inc
loope
and
je
icebp
sub
and
sbb
dec
or
roll
push
nop
lret
addr16
xor
mov
in
cmp
sub
push
jbe
push
adc
setno
push
and
cwtl
and
cltd
in
mov
push
sub
pusha
lods
mov
sub
cmp
and
and
sbbb
adcl
push
xor
ud2
or
cmc
pushf
lock
push
insl
and
movsb
xchg
push
ficomps
jb
xor
mov
sbb
insb
pop
sub
cmp
cld
sbb
dec
xor
sub
sbbb
fistl
mov
mov
adc
add
push
adc
js
int3
push
cmpb
jnp
insb
xor
cs
or
clc
cmpsb
je
xor
das
inc
mov
jns
push
jl
lea
add
adc
stc
add
ret
xor
out
inc
add
and
sub
inc
lea
xor
movb
aaa
sbb
jns
or
pop
add
test
add
je
pop
mov
or
inc
inc
dec
movsb
testb
adc
or
pop
pushf
fcoml
push
jle
xchg
js
push
lea
adc
sub
push
rorl
test
mov
rolb
fs
xor
out
loopne
pop
pop
loope
stos
or
aaa
xorb
aad
add
lods
cld
adcb
xchg
mov
outsl
imul
pop
mov
mov
outsl
rorl
mov
pop
and
ret
imul
add
add
js
push
fldcw
jo
popa
xchg
fdivrl
lock
fstps
sbb
adc
adc
push
pop
sbb
dec
fcomps
jae
into
nop
sbb
sbb
sub
mov
cltd
gs
enter
addr16
mov
push
cli
xchg
xchg
sub
rol
cmp
mov
push
fisttpll
flds
insb
sbb
aam
inc
xor
pop
jne
mov
pop
popl
fisubrl
fmuls
cmp
pop
call
adc
ds
mov
ds
mov
aad
scas
xor
push
sub
sbb
push
lret
pop
push
and
shr
and
pushf
jbe
mov
or
sub
shll
sub
add
nop
or
cmp
pop
ret
pop
jg
and
adc
pop
cmp
xchg
repz
cmp
mov
add
or
lea
inc
mov
in
ret
test
sbb
push
mov
fildl
mov
loope
fsubs
add
xor
les
outsl
movsb
push
outsb
imul
xorb
and
mov
mov
shll
fistpl
icebp
xchg
mov
fs
inc
std
jmp
cmp
je
cmp
or
je
inc
and
cmp
loop
push
push
add
cmp
fldl
jne
jmp
fnsave
fstpl
fldl
loopne
jge
sti
test
je
and
jp
push
pop
and
enter
sbb
jo
mov
add
add
int
mov
dec
aas
cli
lahf
push
div
dec
ficomps
fsubrl
push
jge
lods
push
aas
mov
pusha
nop
out
cmp
add
lods
mov
or
fsub
pop
fsubrp
lea
enter
int
call
adc
mov
push
add
jg
icebp
xchg
xchg
int
and
xor
push
shl
add
fldenv
add
imul
repz
sub
dec
je
add
es
inc
insb
adc
int
popa
and
bound
sbb
lahf
iret
out
out
ss
adc
sub
test
pop
push
add
mov
sbb
mov
sbb
mov
mov
das
sub
add
jbe
stc
out
fidivl
int3
push
sbb
push
push
imul
mov
int3
les
iret
fistl
xor
test
js
xchg
ss
push
sahf
fstl
ljmp
sub
cwtl
lcall
inc
jbe
jp
and
add
push
fildll
sbb
or
fsts
subl
enter
lods
fcomip
and
cld
sub
fs
push
push
push
push
subb
dec
dec
push
push
adc
cmp
in
test
icebp
push
aaa
add
add
cmpsb
pusha
inc
xor
hlt
and
xor
cmpl
and
or
xor
dec
shl
xor
and
cs
lret
out
sub
push
jecxz
mov
pop
dec
dec
xchg
and
pusha
and
mov
pop
in
cmpsb
pusha
aaa
mov
ss
mov
cmp
lret
push
push
lods
rorl
fadds
and
call
adc
hlt
adc
dec
pop
jns
push
sub
fcomps
lret
test
xor
imul
xchg
pop
and
add
bound
sbb
daa
aad
and
xchg
gs
cmpsb
and
push
xchg
or
hlt
xor
inc
xchg
lods
cmp
xorb
push
add
lret
adc
lret
and
cmpsl
arpl
and
mov
fcoml
pop
daa
mov
and
js
push
inc
je
shl
cmp
test
or
mov
out
cmp
hlt
add
sahf
out
cmp
xchg
mov
mov
out
iret
repz
or
pop
cmp
repz
adcb
repz
aad
testl
cmpsl
sbb
cmp
and
jo
mov
push
je
mov
or
inc
adcb
test
leave
and
dec
pop
xchg
sahf
sbb
adc
js
les
or
leave
shlb
mov
mov
or
daa
stc
in
and
add
popl
or
and
es
mov
xchg
adc
test
call
push
lods
mov
push
add
adc
jo
pop
push
loope
out
xchg
pop
jp
popa
add
dec
iret
or
or
add
pop
mov
enter
sbb
fildl
js
test
xlat
and
test
mov
or
push
iret
push
ret
mov
push
sub
push
xchg
sahf
add
hlt
inc
roll
repnz
adc
add
inc
mov
or
pop
pop
inc
add
cwtl
popa
mov
or
push
mov
mov
xchg
iret
lods
inc
scas
add
adc
xor
sub
out
test
repnz
sahf
stos
mov
dec
scas
cwtl
inc
jb
test
push
lds
mov
add
inc
aam
in
xchg
sub
add
popf
daa
push
in
cli
add
jns
pop
jbe
repz
dec
int3
gs
fidivrs
mov
add
andb
jle
lahf
mov
cmc
add
lock
jnp
xor
inc
jo
testl
mov
imul
inc
and
push
sbb
loopne
push
popa
push
mov
call
in
add
scas
nop
inc
jbe
or
xchg
adc
xchg
in
in
inc
test
mov
and
ret
jle
jle
xor
add
pop
popf
sbb
loop
out
lock
add
push
or
mov
out
inc
add
xor
out
xlat
pop
pop
nop
sub
dec
outsl
add
sub
es
sahf
lret
cwtl
pop
push
jg
sbb
push
shl
ret
dec
push
sub
aad
xchg
add
push
mov
xor
sbb
and
adc
push
sbb
mov
movsl
mov
out
movsl
aad
mov
inc
ret
in
daa
scas
fs
sbb
jnp
enter
movsl
ret
popa
and
xor
in
shl
add
add
and
mov
push
push
mov
adc
mov
push
insb
cmp
data16
add
ffree
loopne
mov
stos
inc
or
in
pop
dec
adc
sbb
sbb
mov
add
lock
and
push
sub
sub
pop
sub
into
pusha
or
lcall
test
in
mov
adc
xchg
pop
push
lods
nop
push
jns
mov
pop
mov
pop
cmpsb
fs
or
jecxz
cltd
bound
jo
add
and
inc
pushf
roll
roll
stc
add
push
or
adc
aad
pop
xchg
jo
dec
pop
mov
xchg
add
add
test
or
mov
imul
lea
jg
nop
adc
or
or
cwtl
jo
iret
or
imul
xchg
and
pop
push
xor
ret
pusha
dec
test
test
shl
cmpl
add
or
sbb
leave
out
fcoml
jg
add
pop
mov
add
fwait
add
add
pop
sbb
add
push
cmp
call
add
sbb
xchg
into
push
std
and
adc
aad
jae
aam
or
f2xm1
aad
jae
xchg
test
push
bound
cltd
add
iret
sub
pop
jnp
add
rolb
or
mov
and
aas
push
outsb
jne
push
jg
cltd
lahf
outsb
add
mov
and
pop
enter
add
mov
popl
sbb
sbb
pop
sbb
addl
jb
adc
fwait
xor
adc
pop
xchg
xor
mov
and
out
push
inc
mov
mov
cmp
add
lcall
inc
fs
loopne
and
add
and
int3
ret
mov
cmp
or
add
mov
test
add
push
adc
or
cs
outsl
lcall
add
push
cli
cltd
push
or
push
bound
cmp
aaa
push
aad
adc
mov
sbb
or
xchg
fnstsw
dec
push
jle
add
or
mov
xor
and
cltd
or
nop
sub
inc
in
lret
arpl
mov
int3
xchg
popa
pop
shlb
add
jae
push
push
push
pop
inc
inc
cmp
sub
sbb
pop
adc
adc
inc
jnp
push
std
arpl
push
cmp
and
add
inc
mov
and
push
push
in
mov
and
lret
mov
and
imul
dec
imul
shll
push
cmpb
je
adc
or
dec
cld
cmp
inc
cwtl
dec
adcb
inc
nop
out
or
cmp
mov
or
addr16
scas
sarb
pop
dec
cmp
and
push
filds
adc
test
aam
jl
cmpsl
rol
mov
sahf
sahf
push
test
cmp
mov
add
pusha
sbb
arpl
pop
mov
lods
js
mov
lods
shrl
adc
xor
mov
ret
ret
ja
mov
sbb
pop
pusha
sub
push
out
xor
movsl
in
xor
add
lret
xchg
gs
imul
add
insl
jmp
push
nop
mov
push
add
lcall
adc
mov
mov
add
repnz
jp
sbb
adc
and
adc
push
jl
push
pop
movsb
push
adc
mov
push
pop
test
andl
popf
and
add
sbb
mov
sbb
dec
pusha
outsb
dec
sub
testl
mov
sbb
cmp
inc
sub
out
adc
ss
rolb
ljmp
pop
in
mov
push
xor
loopne
jae
jo
jle
sub
xchg
pop
add
add
mov
mov
inc
xor
add
add
nop
xor
mov
ficoml
jb
mov
in
cmp
test
push
pop
loopne
insb
sbbb
or
xchg
gs
add
add
cwtl
mov
fcmovbe
sub
push
pop
mov
push
inc
sub
insl
imul
ret
mov
push
lock
xorb
icebp
push
dec
push
jl
cwtl
push
sbbb
arpl
dec
adc
mov
call
or
les
xchg
xchg
jg
pop
inc
addb
test
sbb
dec
cli
stc
mov
lret
pop
pop
push
mov
xor
sub
cmp
mov
jl
xor
jmp
sbbb
jl
or
sbb
popa
jp
adc
cld
jg
push
cmp
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
hlt
lahf
and
fs
pop
idiv
xchg
pusha
xlat
test
repnz
in
lret
xor
pop
mov
add
iret
or
loope
icebp
adc
sub
outsl
mov
cmpsl
push
faddl
mov
and
das
mov
clc
loopne
jbe
cmp
shr
add
or
dec
pop
push
dec
or
dec
inc
push
lock
in
hlt
incb
push
in
sbb
mov
jne
iret
cmp
decb
dec
faddl
sbb
jnp
cmp
repz
push
adc
cmp
push
sub
sbb
arpl
dec
divl
aam
mov
xchg
sub
mov
add
xchg
fisttpll
rorl
rolb
test
lea
sbb
ret
mov
js
inc
test
sbb
lock
dec
dec
sahf
and
xchg
lods
iret
add
pusha
lods
or
push
fisttpll
aad
jl
lea
and
push
and
xor
xchg
and
mov
push
test
call
jo
imul
jmp
popa
mov
push
lods
aad
mov
adc
adc
push
mov
pop
dec
sbb
cmpsb
sub
adc
in
mov
dec
jno
push
pop
mov
jge
test
push
xchg
daa
mov
jae
xchg
daa
push
in
mov
jl
add
call
mov
xor
cmp
enter
leave
and
enter
leave
enter
es
push
daa
mov
push
xorb
enter
push
push
call
inc
mov
mov
sbb
sbb
cmp
cltd
cwtl
jns
les
push
push
pop
rcrb
dec
imul
xchg
pop
jae
and
fdivl
sub
fisubl
shr
mov
and
aam
or
and
inc
loopne
jb
mov
test
and
test
sbb
mov
scas
dec
in
mov
lret
scas
inc
scas
cmc
es
icebp
lahf
daa
cmpsl
leave
mov
jns
ret
aaa
stc
adcl
mov
in
adc
inc
adc
xor
int
fisubs
dec
jb
mov
and
dec
nop
pop
cwtl
dec
jb
mov
jb
leave
adc
sub
leave
leave
leave
leave
movsb
pushf
xchg
mov
stos
jl
int3
ret
lcall
push
mov
outsl
fdivs
mov
inc
add
push
sahf
add
fcoms
sbb
rcrl
mov
push
dec
pop
cmpsl
xor
arpl
scas
push
in
mov
jb
cld
xor
pop
mov
jp,pn
mov
xor
sahf
pop
rorl
dec
xor
or
dec
rolb
loopne
and
dec
push
mov
inc
jnp
in
mov
jecxz
or
movsb
fcompl
sbb
movsb
fmull
pop
sahf
lods
addr16
js
pop
or
push
mov
fdivs
inc
xor
and
testl
inc
mov
mov
pop
dec
test
pop
nop
inc
dec
imul
js
scas
xchg
lret
push
push
stos
inc
fwait
and
xor
push
add
xchg
cmp
es
inc
cltd
xchg
jne
jge
or
xchg
leave
xlat
and
xor
pushf
pop
or
and
cmp
fmuls
cwtl
lods
push
cmp
movsb
daa
jbe
clc
pop
insl
or
dec
cmc
nop
fsub
push
stc
or
test
lods
and
jo
sub
addr16
xchg
xor
adc
jb
mov
jle
repz
lret
inc
push
xor
es
or
into
adc
cmc
pop
test
cltd
xor
push
andps
movsb
mov
push
and
scas
movsb
andl
and
cmpsl
jecxz
push
or
pusha
fs
adc
and
or
out
jne
sbb
and
sub
or
inc
mov
mov
add
sarb
sub
or
mov
daa
xchg
fisubs
sub
fsubrs
sub
add
xor
adc
cmp
jle
es
mov
inc
or
push
push
mov
and
adc
imul
mov
inc
popf
inc
inc
add
or
xor
leave
pop
pushf
add
test
or
mov
mov
pop
push
inc
mov
loop
push
jecxz
cmp
test
in
psubsw
jns
fwait
pop
fisubrs
hlt
xchg
add
or
jno
inc
sub
subb
mov
sub
mov
adc
xor
repnz
ret
xorb
or
aam
xorl
out
and
dec
pop
adc
loope
pop
aas
lret
xor
sub
mov
mov
loopne
ja
enter
loop
iret
mov
outsl
iret
fsubrs
cmp
ja
fcomps
lods
pop
adc
sbb
inc
clc
add
arpl
addr16
push
rcrl
movsbl
mov
lds
cmpsb
clc
add
xor
decl
cmp
xchg
fucomip
or
iret
adc
push
sbb
int3
cmp
aam
imul
push
xor
sbb
rorl
call
jns
and
inc
loopne
iret
jg
mov
test
mov
insl
into
or
adc
mov
or
xchg
pop
xchg
lret
lret
and
push
xor
not
and
or
mov
adc
add
pop
call
cmp
aam
mov
cli
pminub
cmp
or
loopne
push
push
lcall
cli
or
scas
xor
out
es
add
jmp
call
repnz
jecxz
or
mov
lcall
jne
iret
push
enter
js
aam
mov
movsl
jp
jo
xchg
decw
movsl
push
cmpsl
cli
add
jae
in
xchg
inc
clc
int3
rcll
aam
xor
test
xorb
sub
add
adc
imulb
dec
jne
pop
adc
pop
pop
or
ljmp
sub
pop
out
push
sbb
push
cmc
clc
pop
in
scas
into
aam
or
cltd
adc
pushl
push
mov
dec
aam
jo
loope
fstps
add
push
lea
xchg
cmp
mov
mov
int
jo
or
push
pop
fcoms
or
ljmp
fcmovne
fmulp
movsl
add
dec
sub
mov
into
add
je
dec
inc
je
or
dec
push
lret
pop
mov
jae,pn
xlat
jp
shr
pop
cwtl
cwtl
dec
cmp
add
and
rol
add
stos
clc
dec
and
inc
cmp
add
rcrl
and
cmpsl
test
push
xchg
aas
dec
sub
add
xor
mov
pop
xor
and
mov
rcll
and
subb
daa
mov
jne
ja
and
divb
sub
pop
pop
fldl2t
pop
rcr
cmp
sub
adc
in
or
cmp
jb
cmp
push
cmp
lret
push
dec
cmp
cmp
in
cmp
es
xchg
lahf
push
scas
sbb
adc
cmp
xchg
movsb
xchg
popa
pop
mov
sub
xchg
mov
das
mov
or
pop
leave
cmp
mov
pop
leave
cbtw
aad
jmp
jmp
and
bound
add
rcrb
pop
adc
in
loope
inc
ss
sbb
cli
pavgb
aaa
adc
pop
mov
gs
fisubs
add
je
adc
das
aam
in
cmp
fadd
push
sub
push
and
pushf
xchg
jns
push
xchg
push
sbb
sub
in
or
xorb
sbb
andb
orb
gs
mov
jge
add
fmull
adc
pop
ror
lcall
dec
lods
cmp
xchg
dec
lret
loopne
cli
outsb
test
jne
shrw
outsb
out
inc
iret
or
pop
dec
or
cmp
sbb
fstpl
cmp
mov
sub
sub
out
loopne
inc
push
add
push
cmp
lods
call
push
xlat
push
mov
mov
fbstp
call
inc
cld
add
mov
scas
dec
cmp
lret
imul
or
nop
jne
mov
lock
sbb
pop
enter
cltd
or
and
test
mov
xchg
insb
mov
pusha
sbb
lea
push
and
dec
push
push
mov
lock
pop
adc
add
inc
and
and
sti
in
imul
mov
lods
div
scas
push
xchg
xchg
ucomiss
mov
or
or
aam
push
jno
add
jno
nop
xchg
mov
aam
in
add
andl
mov
ret
push
aaa
lods
aad
push
add
popf
aam
and
cmp
loopne
stc
lock
fs
test
mov
sbb
imul
loope
loop
push
xchg
out
ret
or
andb
enter
addl
sub
mov
sbb
icebp
imul
or
push
add
sub
or
rcl
stos
jo
or
and
mov
je
gs
push
add
out
or
dec
ljmp
lcall
insb
daa
push
mov
sbb
jo
add
addr16
test
push
js
leave
mov
add
dec
shlb
clc
imul
and
push
mov
dec
fs
push
imul
mov
or
pop
lret
adc
and
add
outsb
int
ja
jne
mov
push
add
pop
mov
cltd
jb
or
mov
pop
unpcklps
pop
pop
xchg
mov
jnp
loop
push
fistpll
add
push
fbld
ljmp
cmpl
jne
inc
cmp
jb
cmp
cmc
dec
sbb
test
cwtl
clc
push
dec
rorb
inc
cltd
sub
mov
mov
mov
or
inc
cmp
jae
mov
subl
xor
jnp
add
jmp
ret
sbb
sub
push
sub
push
jge
insl
dec
dec
jne
dec
out
cmp
add
fmull
roll
push
add
dec
jge,pt
popf
lret
adc
pop
pop
ficomps
xlat
adc
sbb
xchg
xor
mov
inc
sub
cmpsl
inc
jae
and
inc
cmp
jno
push
inc
pop
insb
jns
repz
loope
sub
les
out
sbbb
test
sbb
bound
add
ljmp
enter
imulb
pop
clc
cs
pusha
pop
push
push
arpl
divl
cmp
sbb
rol
shlb
mov
insb
hlt
xor
shl
sub
insb
and
sbb
and
mov
mov
sub
push
adc
cwtl
lods
push
or
ficomps
xchg
xchg
dec
xor
inc
sub
mov
imul
dec
das
test
int3
sbb
pusha
rcll
adc
fs
and
loope,pt
adc
dec
jnp
sbb
popa
mov
fsub
pop
pop
push
fists
jb
lods
push
popf
inc
ffreep
and
mov
push
fsubs
add
add
xor
addb
jge
xor
jg
inc
cmp
jb
or
mov
insl
lds
adc
divb
push
sbb
rcrb
pusha
or
add
movsl
xor
xor
sbb
mov
sbb
or
sub
cmp
mov
and
data16
and
add
lock
js
sbb
or
shll
push
cvtdq2ps
xor
arpl
and
push
inc
inc
mov
sub
movsl
arpl
movsl
test
sbb
mov
push
xchg
shlb
fildl
push
test
add
mov
pop
mov
sub
lds
adc
pop
xchg
mov
mov
imul
mov
add
shrb
adc
pop
add
add
mov
movsb
add
dec
clc
pop
negb
pop
out
lret
or
movsl
jg
and
push
movl
insl
jmp
jmp
add
push
mov
out
mov
pop
fdivp
orl
add
or
mov
pop
addr16
mov
add
scas
fwait
cmp
push
add
xor
or
adc
cmp
xchg
scas
dec
cmp
push
jg
dec
and
add
leave
dec
in
jecxz
add
fs
inc
mov
iret
push
popf
aam
add
mov
push
rcl
push
test
sbb
stos
imul
ja
in
xor
pop
xlat
sbb
and
in
xchg
dec
addr16
sbb
mov
add
or
testb
pop
int
xchg
jl
xor
loope
push
xor
and
insb
lds
xchg
lods
push
pop
or
loopne
pop
or
enter
out
into
and
js
sbb
jb
xor
dec
mov
les
push
lods
inc
adc
sub
push
inc
std
cmpsb
bound
outsl
mov
dec
cs
fsubl
cmpsb
pop
movsl
xchg
xor
in
xor
loop
sub
jns
insb
adc
inc
dec
pop
cmp
adc
sbb
add
js
iret
cmp
fsubrl
cmc
psrlw
adc
out
or
adc
mov
add
sub
jo
shl
pop
push
loop,pt
push
push
xchg
adc
mov
add
loop
inc
loope
or
adc
sbb
mov
lret
mov
testl
scas
inc
scas
push
rcr
test
xor
or
ljmp
add
popf
test
int
adc
shll
cmp
movsl
push
cmp
stos
pop
pop
mov
sbb
cmp
push
fsubl
xor
out
lea
push
js
mov
mov
loopne
lods
mov
das
addr16
lcall
pop
sbb
fsubl
daa
or
loopne
daa
iret
push
and
andb
jo
adc
mov
sbb
pushf
jo
push
push
xor
and
jae
sub
inc
mov
mov
bound
xchg
sbb
cmp
xlat
push
mov
leave
and
cmpb
xor
movsl
and
mov
arpl
sub
pop
ret
pop
add
xorb
shll
in
or
aam
xchg
and
mov
mov
and
xchg
sbb
add
es
loope
mov
ja
add
addr16
sbb
push
sub
pusha
mull
leave
or
pop
mov
mov
or
xchg
fwait
daa
cmp
hlt
xchg
inc
push
sbb
outsb
push
jl
sbb
add
in
loop
inc
push
lods
ds
mov
in
or
stos
cmp
sub
add
aam
or
mov
je
xchg
je
push
xchg
pop
sub
push
jo
and
and
sub
test
xchg
aam
mov
lods
bnd
sbb
stos
mov
loopne
add
arpl
push
xchg
sub
mov
addl
and
test
xor
dec
or
arpl
mov
andb
pusha
in
cmp
sbb
and
in
add
mov
subb
inc
imul
inc
push
sbb
or
dec
dec
push
add
call
sub
imul
pop
cmp
lea
subl
jmp
pop
sbb
sbb
or
push
xchg
push
xchg
dec
loope
push
clc
sbb
adc
mov
sbb
je
pop
dec
or
rorb
and
pop
adc
nop
xchg
push
test
sub
and
mov
push
push
sbbl
fnstcw
aam
xor
in
les
pusha
add
lods
mov
add
jne
mov
stos
pop
xchg
xor
add
sub
xor
cmp
add
xchg
xchg
cli
lar
inc
into
fldl
sbb
or
rolb
cld
pop
mov
push
add
fisubrl
pop
rcrl
mov
xorb
add
notb
and
add
sbb
xchg
cmp
mov
jb
iret
test
enter
mov
incl
jmp
nop
push
xor
sbb
roll
dec
mov
sub
test
inc
cmp
jg
mov
pop
pop
push
rorl
in
test
jne
movsb
shrb
ffree
push
or
loopne
xchg
pop
cwtl
mov
add
scas
aas
xor
test
sbb
jmp
xchg
shlb
mov
movsl
test
dec
out
pop
cs
xor
cmp
inc
loop
roll
cmp
je
imul
loope
inc
jno
mov
sar
adc
loope
sbb
push
sub
dec
ret
mov
sub
xchg
in
test
add
pop
psubw
out
nop
rcrb
adc
adc
sti
pusha
hlt
sub
ja
sub
adc
jmp
adc
and
xchg
mov
ret
stos
outsl
vmread
loopne
sub
sub
pop
cmpl
pop
test
push
jge
and
lea
ljmp
cmp
jb
jb
int
cmpsl
xchg
cmp
pop
and
jo
lds
xor
push
and
dec
jl
jne
cwtl
and
fbld
mov
and
or
mov
scas
adc
and
dec
jns
xor
imul
dec
mov
pop
imul
or
in
push
and
cmp
cmp
or
or
std
mov
add
jo
cmp
mov
js
adc
adc
mov
push
das
dec
test
xchg
movsl
or
es
mov
lret
jmp
and
daa
and
mov
or
fildl
or
or
pop
inc
fmuls
inc
leave
pusha
fsubs
lds
xchg
out
pushf
insb
mov
mov
sbb
lea
cli
and
sbb
dec
imul
push
adc
lock
inc
lcall
lods
inc
sbb
xchg
push
or
dec
pop
call
lea
icebp
ret
add
in
jnp
and
xchg
or
xor
and
adc
pop
repz
aam
fcoml
xor
jb
push
push
hlt
dec
pop
jns
xor
dec
and
pop
and
jb
push
add
sbb
adc
or
ret
into
mov
shr
rolb
movsl
ficoms
popf
js
or
lret
out
lock
jecxz
mov
adc
ja
enter
jge
pusha
lea
test
xor
inc
adc
mov
add
rorb
lods
pop
js
mov
cmp
jb
add
push
rcr
and
or
pop
jbe
inc
mov
adc
rolb
xchg
xchg
or
imul
mov
pop
mov
adc
cwtl
pushl
stos
inc
jmp
pop
inc
or
popa
cld
inc
cwtl
lea
or
mov
subb
ret
sub
push
inc
sbb
adc
push
and
and
dec
inc
mov
add
pusha
lret
and
pop
sbb
pop
inc
mov
mov
adc
mov
jae
inc
jmp
aam
mov
test
sbb
add
loop
inc
popw
int
sbb
xchg
fsubrl
or
ljmp
xchg
adc
push
and
and
imull
dec
add
or
mov
or
outsl
sbb
popf
mov
push
jo
xchg
jb
inc
adc
mov
dec
inc
test
sbbl
add
pop
test
adc
mov
loopne
rolb
cwtl
in
or
jg
imul
xlat
loopne
dec
dec
enter
loopne
js
js
rcll
or
inc
jmp
lods
mov
add
call
dec
or
leave
ljmp
sbb
xor
pop
jp
rclb
pop
dec
test
push
mov
dec
test
or
and
dec
adc
and
and
sahf
stos
cmp
pop
pop
fdivr
adc
sub
aad
je
sti
fwait
sbb
xor
push
mov
xor
adcb
lret
mov
add
and
push
sbb
movb
repz
inc
scas
cltd
test
add
std
jl
pushl
fnstsw
test
sbb
daa
and
or
aad
cmp
sub
mov
ret
leave
outsl
jg
pop
inc
lock
cmp
xor
push
xorb
jo
loope
and
pop
jge
and
lods
mov
aaa
out
or
add
sbb
mov
adcl
add
test
and
repnz
insl
mov
inc
popa
je
cs
sub
daa
sub
inc
lahf
xor
scas
mov
add
and
scas
std
push
or
jo
and
push
push
lcall
push
jmp
mov
mov
loopne
outsl
movsl
inc
inc
fs
push
add
dec
out
push
or
in
in
jmp
test
call
imulb
xchg
loopne
fsubl
jecxz
mov
lahf
sbb
js
lret
addr16
adc
inc
add
bound
aad
xor
hlt
scas
push
stos
ds
test
shrb
das
sbb
rcl
pushl
sbb
add
insb
cvtps2pi
jne
push
pop
fbstp
int3
sub
out
scas
dec
jl
cmpsb
add
movb
mov
mov
mov
or
xchg
adc
xchg
inc
lret
mov
lea
inc
sbb
mov
dec
mov
fiaddl
imul
insl
mov
or
mov
xchg
mov
sub
mov
jmp
or
idiv
push
push
jbe
dec
test
add
enter
iret
jbe
mov
jg
lret
lea
mov
add
mov
stos
mov
mov
popa
add
sub
push
cmp
insl
test
mov
add
or
fdivrs
jmp
sbb
cmp
push
pop
ffreep
jne
pop
mov
push
stos
push
call
in
mov
mov
xlat
jo
and
sub
pop
ret
push
jle
scas
jmp
xor
cmp
jb
push
sub
popa
movsb
sbb
rorb
push
cmp
mov
mov
stos
adc
cwtl
mov
push
xchg
es
insl
cli
jbe
gs
leave
pop
and
mov
sbbl
pop
mov
sub
sbb
shl
cmpb
insb
push
lcall
aas
call
push
push
inc
xor
adc
or
rcrb
and
mov
add
and
shll
int3
adc
add
push
fdivl
mov
mov
xchg
pop
je
addb
sahf
lea
push
andb
ret
add
or
outsb
mov
sbb
adc
shl
and
stc
push
dec
dec
mov
sub
or
pop
inc
inc
adc
mov
lock
dec
sub
inc
inc
dec
dec
ljmp
lret
jl
and
daa
sbb
cmp
jo
mov
add
pushf
mov
push
mov
mov
aam
and
inc
cmp
mov
dec
leave
sbb
pusha
xor
and
lret
xchg
test
or
fildl
jmp
xorb
adc
jns
and
into
mov
adc
pusha
outsb
sub
in
out
popa
arpl
test
cmpsl
mov
test
or
icebp
adc
inc
xchg
into
out
mov
push
pop
adc
add
pushf
and
je
cmp
jne
mov
push
aam
sbb
mov
lea
mov
push
sahf
test
fcomp
xor
mov
lret
outsb
call
add
xchg
sbb
in
sarl
inc
std
int
xchg
jnp
mov
loopne
sbb
push
rclb
outsb
or
loopne
and
loope
data16
int
cs
jmp
mov
add
in
jl
testl
jno
dec
orb
clc
jne
pop
adc
in
and
pop
popa
rep
out
xor
in
dec
cmp
enter
sub
push
andl
enter
loope
add
and
pop
push
sub
leave
add
mov
sbb
rcl
sub
test
mov
fdivs
fisttpll
adc
xor
inc
ficoml
adc
pusha
sbb
push
aas
jg
pop
mov
add
fisttpll
xorb
cmpl
roll
js
lock
push
ja
jns
imulb
inc
pop
sarb
sti
cmp
jg
adc
pop
or
fisttpll
cltd
add
sub
mov
jle
mov
andl
nop
icebp
push
add
add
roll
jbe
mov
sbb
xchg
inc
push
loopne
cmp
mov
jmp
lock
scas
jge
data16
call
aas
dec
or
push
xchg
dec
mov
jmp
ss
or
sbb
mov
roll
std
orb
sub
mov
inc
ss
addr16
mov
aam
jo
mov
mov
push
andl
sbb
push
loop
loop
or
push
add
mov
cmp
sub
dec
add
outsl
add
pop
sbb
pop
inc
xor
inc
push
fsubl
popa
nop
mov
rorb
mov
push
sbb
inc
sub
loope
pop
sbb
sahf
std
mov
jae
faddp
sbb
adc
aas
push
or
add
sub
adc
cld
add
jmp
dec
add
xchg
fwait
test
insl
mov
scas
ret
mov
push
push
mov
mov
pop
call
es
cmpb
les
mov
push
mov
dec
mov
mov
dec
daa
add
add
ss
cmp
xlat
mov
xchg
jge
mov
jle
add
mov
cmpsb
xlat
es
pop
or
hlt
faddl
or
or
adc
out
es
jnp
out
sub
cmp
jne
loopne
or
sub
int
xchg
cmp
iret
out
and
push
and
dec
fnstsw
fisttps
add
push
shrb
pusha
inc
xchg
shld
push
add
and
in
pop
mov
sub
push
xor
loop
nop
jbe
jecxz
mov
xor
lahf
xchg
pushf
rcrb
push
fcmovu
loopne
push
push
fadds
lods
cld
popf
mov
aas
pop
sbb
je
lods
mov
scas
sarb
das
cmp
jo
and
or
add
xlat
push
icebp
psubsb
jmp
sub
or
jo
ret
lods
call
test
fidivrl
movsb
push
pop
xchg
pop
mov
sub
push
pop
stos
or
add
or
ret
and
loopne
addl
test
rorb
out
push
lods
sarb
push
hlt
mov
dec
or
mov
inc
mov
orb
sub
adc
push
out
stos
xchg
sbb
push
push
lret
mov
add
fsts
sbb
jnp
xlat
mov
cmpsb
push
xlat
mov
push
das
pop
stc
pop
hlt
or
int
cmp
jns
movsl
movsl
push
lea
aas
daa
adc
inc
pushf
push
jge
mov
test
xchg
int3
mov
mov
call
loopne
dec
mov
add
mov
mov
sti
rcr
vmread
push
mov
dec
andb
sti
mov
dec
push
or
insl
shl
push
aad
jnp
jbe
fmul
pop
dec
add
fcomps
push
sbb
xor
cli
mov
mov
inc
mov
inc
stos
cmp
in
push
fnstcw
mov
ljmp
jbe
mov
mov
out
or
push
mov
jne
push
add
or
std
mov
lret
fisttpll
or
shrb
pop
sbb
in
imul
sub
and
cmp
xchg
dec
mov
adc
in
add
nop
push
loopne
add
mov
out
sbb
je
push
scas
inc
cmp
or
faddl
test
push
loop
hlt
or
mov
xor
cmp
mov
in
stos
adc
stc
mov
jg
jmp
in
sbb
add
and
cld
mov
inc
into
adc
add
sbb
mov
mov
hlt
fwait
sti
rep
movsw
push
cld
xchg
jecxz
mov
cmpsl
decl
xor
mov
shr
mov
inc
mov
mov
adc
movb
cmpb
cmpsb
add
adc
mov
mov
and
aam
test
lret
movsbl
xor
jbe
push
push
or
roll
jb
and
push
cld
ret
xchg
je
push
push
sbb
and
sbb
mov
mov
sub
mov
inc
or
movsl
cmpsl
fs
dec
jae
lea
inc
add
movl
mov
enter
or
push
or
sbb
or
xlat
das
insb
shrl
push
mov
dec
mov
inc
rclb
sub
rclb
add
adc
and
dec
mov
push
shrl
decb
mov
lret
xor
push
dec
mov
lahf
mov
mov
enter
imul
mov
add
mov
push
add
add
in
in
add
push
sti
in
in
or
or
jnp
jae
jae
or
jbe
jmp
or
addr16
jae
por
jmp
adc
pop
adc
push
jae
jae
adc
dec
adc
dec
adc
aas
jae
jae
pop
jmp
sbb
xor
jmp
jae
jae
sbb
es
and
pop
jae
jae
pop
jmp
and
or
jmp
adc
adc
out
test
leave
cld
pop
ret
sbb
pushf
and
add
fcos
or
ds
iret
repz
pop
data16
jbe
cmp
repz
mov
iret
lcall
iret
repz
mov
cmp
repz
fneni(8087
in
repz
ljmp
fbstp
push
or
add
add
push
pop
or
and
idiv
jg
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
gs
mov
ret
sub
inc
sbb
inc
addr16
push
ret
or
mov
cmpb
sbb
xor
cmp
jle
mov
imul
mov
movsl
jmp
js
xor
cmpl
sub
loopne
outsb
test
push
and
lea
pop
call
shll
or
xchg
pushf
nop
test
lock
sub
xor
aaa
mov
test
pop
enter
out
sub
mov
notl
pop
dec
and
stos
and
or
adc
or
xor
dec
jmp
roll
mov
inc
js
add
inc
dec
push
mov
add
dec
cmp
sub
xor
in
sbb
aaa
sbb
testl
cmpsb
jmp
cmp
movsl
or
mov
jp
fs
adc
dec
cmp
and
dec
xchg
adcb
sub
push
push
and
xchg
add
inc
push
jle
push
pushf
and
dec
xchg
test
mov
jmp
es
inc
lock
push
push
pop
mov
xor
inc
mov
mov
mov
pop
out
xchg
add
add
mov
jmp
stos
pushf
push
imul
push
push
mov
adc
adc
pop
push
cmp
test
cmp
mov
xor
adc
dec
xor
adc
mov
sub
out
lock
mov
cli
aaa
jmp
push
add
or
call
or
xchg
cli
pusha
push
push
sbb
and
jne
adc
cmp
shrb
push
push
repnz
ss
and
jle
inc
xchg
jo
xchg
sbbl
mov
movsb
push
jne
add
test
mov
sbb
inc
loopne
xchg
jne
lock
jno
loope
pop
rcr
outsl
and
add
sbb
scas
aam
or
or
jmp
inc
xchg
pusha
dec
mov
jb
mov
inc
inc
or
mov
in
loopne
test
adc
insb
mov
push
cmp
or
or
push
dec
push
add
enter
or
mov
lds
mov
je
je
leave
cmp
sbb
sbb
cs
lock
dec
inc
rorl
clc
adc
cmp
sub
or
add
nop
sbb
inc
idivl
in
rorb
sub
aad
sbb
dec
sbb
pop
jnp
nop
sbb
pop
int3
sahf
nop
xchg
cs
idivb
pop
jmp
xchg
arpl
fists
xor
popl
jb,pt
dec
push
mov
add
push
pop
imul
add
dec
sbb
sub
or
xor
or
push
mov
inc
mov
shlb
movsb
clc
push
mov
cmp
mov
shrb
mov
int3
rcl
push
in
lret
adc
jle
mov
mov
pop
repz
xchg
loopne
mov
jmp
cmp
insl
in
cwtl
es
call
cmc
pop
xor
test
std
mov
stos
cmpsl
shlb
enter
dec
shll
shl
shrb
xchg
xor
mov
aam
or
lret
add
jno
and
icebp
subl
mov
push
std
mov
fmull
xchg
in
test
sbb
test
es
outsl
cmp
jne
outsb
dec
mov
lcall
fs
addr16
pop
dec
int3
mov
or
ss
inc
and
repnz
testb
fdivrp
xchg
xchg
push
fdivr
movsl
xor
incb
fdivl
or
bnd
nop
cld
mov
mov
loopne
cmp
jo
adc
mov
loop
int
sbb
iret
enter
add
loopne
or
and
loopne
orl
sti
sahf
xchg
out
testl
enter
xchg
push
xchg
pop
add
sub
add
ret
negl
test
fsts
int
cmpb
mov
and
addb
pop
pop
add
xchg
pop
push
cltd
push
or
dec
es
mov
cmp
pop
push
pop
mov
xor
mov
movsb
shll
repz
stos
pushl
ljmp
sar
flds
inc
lods
int3
rorl
pop
or
mov
add
adc
es
push
sti
ret
sbb
sbb
mov
imul
jp
ficompl
das
add
or
jnp
jo
mov
in
pop
jle
pop
sub
cs
loope
rolb
mov
pusha
push
into
fisubrs
push
inc
sub
dec
sahf
int3
shlb
adc
shl
add
push
pusha
test
fidivs
inc
lods
pop
xor
inc
xchg
fmull
loope
test
pop
or
push
xor
pusha
mov
iret
int
in
loope
hlt
fisttpll
pusha
test
fistl
xchg
cmc
sbb
in
addl
pop
icebp
pop
sbb
add
mov
clc
inc
dec
and
adcb
cmp
inc
cld
add
mov
pop
xor
hlt
push
pop
cmpsl
je
push
push
xchg
addr16
dec
mov
sub
jne
stos
pop
sbb
je
in
jmp
and
outsl
push
bound
inc
or
sbb
add
push
add
loopne
fadds
push
sbb
dec
sub
xor
js
pop
sub
popa
and
dec
add
add
add
hlt
pop
es
pop
jle
ret
add
or
xchg
mov
cmp
pop
jne
mov
je
pop
inc
mov
adc
or
movsb
push
jnp
pop
mov
push
inc
sbb
mov
mov
insl
mov
int
shl
cld
icebp
xchg
lar
in
or
imul
sbb
lock
push
push
insb
and
iret
sbb
dec
sub
shlb
add
xor
inc
cmp
sub
push
add
jp
or
cmp
sub
ror
es
shrl
push
int
push
scas
sahf
leave
adc
movsb
jl
pop
psubd
xchg
dec
dec
xor
jl
xorl
adc
mulb
add
xchg
pop
cmpb
xor
and
and
cmp
shlb
inc
data16
push
dec
js
sbb
and
or
sub
movsl
push
add
loopne
mov
inc
bound
push
inc
add
ror
aam
mov
pop
cmc
xchg
iret
or
pusha
jmp
or
cmp
mov
sbb
enter
or
mov
and
xor
push
dec
mov
sbb
xor
sbb
ss
jb
adc
adc
adc
sub
sbb
lods
gs
es
sbb
xchg
test
jne
andb
outsl
lds
out
inc
add
pop
or
dec
and
jns
pop
or
or
enter
push
mov
ja
aas
and
sub
fs
sub
test
xor
in
push
sysenter
and
cmp
aaa
dec
ja
cmp
inc
inc
jg
movsb
cmp
dec
pop
mov
fwait
movsb
push
push
pop
pop
pop
es
push
negb
ljmp
adc
es
and
sub
jg
setge
cmpb
add
and
lea
push
mov
test
negb
cltd
ret
insl
and
ret
push
mov
and
or
je
or
lea
in
jl,pt
sub
lea
cmp
hlt
cmp
je
dec
jecxz
add
push
xor
ja
or
sbbl
fildl
cltd
adc
frstor
and
jo
lods
sub
inc
and
and
aas
xchg
lods
push
pusha
outsl
pop
jl
jmp
out
push
lret
push
push
fstl
loop
call
mov
sti
cmp
fcomp
in
and
pop
jne
jge
and
insl
mov
jmp
jno
add
rcrl
mov
in
mov
xchg
int3
and
mov
das
sub
or
je
or
mov
jl
test
and
outsb
sbb
push
fwait
xor
aas
sub
mov
and
je
mov
lds
daa
pop
inc
cmp
aaa
fidivl
xchg
lods
fadds
xlat
sbb
pop
lods
cli
in
int3
clc
and
jo
mov
lea
shlb
std
mov
mov
pop
sbb
mov
adc
repnz
dec
adc
call
jle
mov
push
pop
add
pop
pop
sub
push
adc
test
cld
dec
lods
adc
mov
xchg
clc
cmp
je
cmp
jne
push
inc
pop
inc
enter
add
pop
xlat
mov
push
mov
mov
add
add
xor
cli
daa
adcb
push
push
clc
mov
mov
mov
in
mov
or
sbb
sub
cld
sub
push
dec
or
lock
std
xor
inc
je
cmp
adc
sbb
and
sahf
sbb
loop
ds
mov
jo
adc
ja
add
jns
push
and
add
mov
sbb
cmp
or
cmp
mov
push
jnp
pop
addb
jge
cmp
cmpsl
gs
les
mov
inc
jmp
mov
dec
mov
adc
dec
pop
push
shrb
sub
mov
xchg
jle
aas
jne
push
nop
icebp
xbegin
adc
scas
adc
mov
and
daa
push
dec
push
cmpb
sbb
and
inc
inc
xchg
sub
dec
loopne
or
and
mov
in
mov
mov
sbb
ss
push
push
imul
neg
cmp
jo
inc
pusha
sbb
mov
push
into
push
mov
mov
xchg
sbb
jmp
adc
mov
xchg
or
andb
inc
int
rcrb
jne
inc
sub
js
icebp
xchg
rorl
test
pop
lock
lods
shl
xor
pop
bound
push
andl
add
lea
or
add
inc
add
adc
xchg
cmpb
mov
xchg
int
mov
jmp
aad
movsb
pop
mov
jb
pop
or
bound
mov
aas
into
shrl
popa
sbb
jmp
jp
lock
cmp
mov
xorb
sbb
shlb
mov
add
or
push
pop
mov
mov
push
fsubrs
loopne
push
mov
push
push
and
jmp
pop
jo
pop
pop
pop
clc
mov
sbb
sbb
mov
in
out
faddl
sar
adc
mov
adc
fildll
sbb
sbbl
sub
dec
cwtl
add
insb
std
addb
sub
out
pop
adc
adc
out
jge
inc
xlat
sub
in
jmp
mov
inc
or
hlt
sub
test
in
cltd
pop
rcr
jmp
stos
xchg
sub
js
mov
and
adc
jns
ret
inc
rorb
aam
jae
xchg
push
jl
insl
je
add
cmp
add
test
mov
push
and
jmp
lock
or
lret
push
push
rclb
addr16
popa
outsl
addl
pop
pop
out
popa
xor
popf
pop
sub
pop
test
pop
dec
sbb
xchg
pushaw
jne
sub
ss
rol
icebp
dec
and
mov
and
hlt
les
cmpsl
or
sbb
je
cmp
aaa
xor
loope
rcrl
mov
ret
sti
mov
sbb
jno
dec
and
stos
push
rorb
jmp
inc
inc
xchg
pop
inc
and
mov
daa
jo
shr
and
or
adc
insb
mov
insl
push
xor
xchg
cmp
insl
dec
add
xchg
xor
jnp
or
xor
fisubrl
add
sub
pop
arpl
lea
int3
and
adc
movsl
sbb
fildl
push
push
sub
pusha
movl
add
lea
mov
xchg
ja
sub
push
dec
mov
and
inc
push
ds
push
xor
add
shll
out
xchg
imul
xor
aas
push
fnsave
add
add
mov
and
adc
fldz
fcomp
fnstsw
mov
add
pop
fnsave
pop
fsubr
pop
faddp
inc
dec
cmc
add
fstpl
insb
xorb
sub
cs
mov
add
push
or
hlt
mov
fs
xchg
add
sub
jo
push
xchg
mov
fs
push
cmp
clc
or
sub
pop
add
mov
xor
in
adcb
jp
sub
inc
mov
cmp
push
dec
or
mov
ret
out
sub
jmp
adc
xorl
incb
xchg
and
jmp
sbb
or
dec
iret
xor
add
test
adc
push
ds
sbb
add
inc
outsb
adc
fldl
mov
hlt
fs
or
mov
add
test
xor
repz
mov
cld
mov
fimuls
enter
into
sarl
shr
cwtl
xorl
test
push
shlb
lcall
or
add
mov
call
cltd
pop
lcall
push
jne
jae
and
jmp
sbb
pusha
lods
ljmp
push
dec
sbb
mov
xor
or
jecxz
test
dec
jnp
adc
sbb
aam
mov
jmp
add
pop
enter
mov
clc
or
mov
jne
mov
aas
and
imul
xchg
out
xchg
dec
pop
lods
jne
xor
xor
and
jb
push
or
push
std
mov
sub
adc
push
push
les
and
mov
xchg
arpl
mov
sti
rorl
dec
push
push
mov
cmpsb
xchg
imulb
and
sti
andb
gs
int
in
jle
add
or
aaa
add
pop
imul
jmp
dec
test
hlt
and
mov
repnz
cmp
jb
mov
add
sub
in
daa
and
pop
jb
cmp
imul
sbb
sbb
push
lock
inc
lock
and
cwtl
adc
sbb
in
inc
cld
push
mov
adc
nop
mull
clc
add
push
push
jmp
testb
mov
inc
and
mov
cmp
subb
or
sub
dec
xor
mov
cmp
idivl
test
movb
enter
inc
mov
cmp
and
inc
dec
lock
add
scas
xchg
inc
or
test
add
jbe
and
cld
sbb
and
popa
imull
pop
mov
xchg
mov
pop
sbb
pusha
mov
lock
pop
push
es
cli
cmpsl
push
pop
scas
pop
pop
jge
cmp
jne
ret
and
mov
lcall
and
out
cmpsl
rcll
xor
inc
mov
mov
test
rclb
jne
or
es
sbb
jo
add
pop
inc
movsl
cs
xor
mov
into
je
xor
push
jmp
cmp
call
sbb
sub
test
push
imul
inc
rclb
loope
repz
push
or
scas
dec
popf
sub
ja
je
rcl
fcomp
rclb
and
fidivl
adc
sbb
xor
adc
insb
cltd
repz
or
je
cmp
lock
shlb
popf
jg
and
out
or
add
pop
jbe
fmuls
add
push
dec
xchg
cmc
sahf
jbe
dec
push
push
xor
movsb
cmpsl
subl
xchg
scas
test
out
dec
ljmp
pop
es
inc
jge
add
test
xchg
or
adc
mov
inc
mov
push
aaa
mov
ret
sub
and
ror
inc
mov
xor
xlat
nop
loope
lea
and
shlw
roll
mov
rcr
push
push
aam
mov
add
mov
les
pop
sbb
call
lods
sub
or
test
dec
inc
scas
cmpsb
pop
xchg
dec
pcmpeqb
loopne
xor
mov
push
add
aad
cmp
repz
xor
in
mov
inc
das
repz
push
test
and
dec
jge
dec
pop
inc
test
add
in
inc
push
flds
call
push
call
cmp
dec
in
repz
or
push
or
xchg
xor
mov
cmp
pop
outsl
arpl
cmp
xor
stc
xorb
es
push
movl
fadds
imul
adc
mov
xor
and
ret
repz
jo
dec
mov
or
add
mov
inc
adc
push
aam
push
test
dec
sub
aas
adc
inc
push
add
out
test
adc
cld
add
mov
outsb
scas
add
mov
sub
mov
or
in
mov
aad
and
sbb
insl
xlat
lret
and
orb
jg
pop
sub
or
inc
mov
shlb
loop
in
mov
inc
call
ret
add
push
xchg
movb
ja
and
or
xlat
fchs
into
sub
sub
mov
add
push
les
shll
jbe
xor
lods
xor
sti
sub
jle
pushf
add
stos
pushf
mov
loop
inc
mov
push
or
add
and
cmp
xchg
negl
jge
dec
in
add
es
xor
jnp
inc
sbb
lock
mov
cmp
mov
mov
mov
test
jge
add
and
and
lea
pop
into
sub
fisttps
into
ret
push
daa
push
push
insb
cmpsl
rcl
add
mov
insb
sub
add
adc
jle
in
dec
ret
jl
sahf
or
inc
sbb
sbb
mov
fsubrs
in
out
lods
adc
add
add
arpl
imul
and
pop
leave
sbb
add
das
dec
inc
and
sub
dec
and
dec
shlb
inc
add
push
js
gs
or
adc
xlat
push
push
nop
addl
or
dec
dec
rcll
dec
and
and
or
xchg
push
jno
push
nop
mov
jae
rclb
or
stos
mulb
popf
and
sbb
mov
scas
jne
shrl
add
push
pop
cmp
sub
repz
push
fisubrl
add
sbbb
jae
xchg
arpl
cmp
loope
pop
loopne
pop
sbb
or
in
cmpsl
mov
add
popf
das
xchg
pop
ret
mov
adc
sub
cld
inc
or
mov
inc
sbb
xchg
push
jl
leave
clc
incb
or
inc
jge
jp
sbb
loopne
insb
or
and
lock
lods
bound
inc
mov
sub
imul
test
push
rorb
ja
xor
out
push
scas
or
mov
fdivl
bound
insb
outsb
cmp
sbb
mov
orl
lret
ret
push
fistl
call
das
ret
push
sub
mov
stc
int3
dec
divl
rcl
adc
mov
insl
rcrl
mov
mov
shr
or
lret
or
xchg
pop
mov
addr16
or
lea
mov
mov
repnz
mov
fsubl
and
adc
je
jo
jge
or
sbb
push
sti
lock
adcl
mov
imul
jbe
scas
and
test
pusha
inc
and
mov
xchg
sarb
and
push
jnp
mov
mov
in
mov
stos
xor
scas
dec
repnz
out
clc
addr16
xchg
sbbb
push
push
xchg
sbb
push
push
shr
sbb
pop
xor
adc
and
fadd
adc
test
sbb
mov
push
stos
jmp
push
daa
xchg
shrb
rol
dec
cmp
nop
adc
adc
sbb
sbb
pop
aas
or
and
mov
js
and
iret
cmpsb
xor
roll
hlt
or
mov
out
mov
sti
sub
jmp
cmp
sub
lock
add
js
lcall
cpuid
xchg
mov
fwait
lods
das
add
pop
dec
pop
push
sbb
out
push
add
add
push
jle
jmp
or
mov
rclb
push
pop
adc
adcl
pop
dec
cwtl
cli
jle
push
incb
int3
or
push
pop
jmp
lret
sub
and
xor
cmc
subb
sbb
cwtl
inc
ja
inc
xorb
pushl
add
inc
push
mov
pop
in
sbb
sub
movsl
mov
nop
mov
cmc
adc
aam
jo
imul
and
mov
xchg
das
popf
and
aam
daa
xchg
xor
and
add
call
adc
test
loope
dec
push
push
cmp
je
or
add
and
loopne
loopne
test
je
imul
cmp
xchg
subl
push
dec
pop
aam
mov
pop
rcr
xchg
adc
cmp
rclb
or
cmp
outsb
or
mov
inc
lea
sub
or
xchg
sub
adc
sub
jl
pop
test
pop
xchg
insb
and
push
out
sub
or
movsl
xlat
mov
fiadds
mov
jno
jge
aam
push
js
dec
es
jp
aam
push
nop
stos
jnp
add
faddl
fsubl
sub
pushw
jl
mov
lods
imul
pop
test
sub
pop
or
push
push
push
bound
fnstenv
lret
adc
icebp
add
lods
cltd
add
fbstp
mov
aam
mov
add
test
add
mov
inc
mov
jmp
rcll
pop
dec
push
add
mov
inc
out
sub
mov
movsl
lret
mov
ret
out
ss
movsl
stos
cwtl
mov
or
dec
or
push
jno
and
sahf
cmpsb
xor
mov
andl
mov
jne
mov
rorb
push
lret
loopne
enter
jne
mov
push
and
push
je
or
je
in
testl
nop
sub
jne
mov
popl
jbe
shll
ss
jne
mov
clc
leave
mov
addr16
or
push
mov
jne
stos
adc
inc
mov
sub
sub
push
lods
in
mov
mov
inc
mov
and
cltd
or
fcoms
outsl
mov
dec
shrl
sub
jo
mov
test
add
mov
leave
add
sub
sub
xor
or
push
mov
sbb
dec
dec
xchg
imul
insl
scas
call
mov
dec
jecxz
je
int3
arpl
pop
push
arpl
test
mov
xchg
icebp
mov
scas
pop
add
addr16
cmp
test
insb
push
or
movsb
mov
inc
lea
push
mov
mov
mov
inc
mov
test
xor
les
jbe
mov
adc
sbb
das
pop
dec
cld
add
push
test
aam
dec
in
cli
inc
das
mov
and
and
sbb
pushf
add
movsl
popa
aam
in
je
push
iret
xor
ja
xor
jae
or
push
jae
lds
and
negl
or
outsl
stc
pop
or
add
subl
mov
sub
xchg
fdivrp
pop
mov
lcall
mov
ja
cmp
xor
movsl
testl
cmp
jne
or
inc
sub
inc
add
push
sub
jl
or
lret
es
std
pop
inc
mov
in
in
fildll
sahf
xchg
cmpsb
pop
jg
dec
inc
outsb
mov
insb
push
dec
cmp
add
xor
int3
sbb
call
xor
adc
pop
mov
xor
mov
int3
or
out
sub
mov
aad
and
xor
xchg
pushf
arpl
aam
clc
adc
shl
xchg
shl
jmp
push
sbb
jo
adcb
insl
add
mov
mov
mov
xchg
mov
pop
mov
or
sbb
or
aad
dec
shrl
sbb
int3
and
xchg
test
orb
sbb
xor
push
sub
mov
sarl
rcrb
icebp
loopne
sbb
jb
mov
push
xor
retw
pop
cmp
sbb
ljmp
and
popa
dec
xor
mov
enter
mov
imul
or
sbb
push
inc
in
add
inc
out
outsl
pop
sbb
outsl
call
nop
call
inc
imul
cs
mov
push
sbb
movsb
push
test
inc
sbb
jns
sub
cmpsb
push
inc
test
in
xchg
out
pop
add
ret
mov
sbb
popf
jp
nop
jp
sbb
or
mov
mov
jnp
sub
lret
mov
push
loop
movsl
nop
int
popa
das
push
das
loope
xor
or
add
xchg
cli
movsb
sub
loop
fadd
xchg
dec
pop
sub
xlat
add
mov
xor
shlb
mov
mov
out
fnstenv
xor
jmp
xchg
call
and
subb
add
int3
adc
mov
mov
popf
lret
pop
pop
ficomps
pushf
fsubl
mov
xor
pop
and
mov
pop
mov
test
imul
mov
cmc
fdiv
add
negl
xor
xchg
inc
js
mov
cmp
mov
cmp
dec
ss
or
sub
xor
push
ret
cmpl
add
movsb
cld
push
pop
cmp
rcl
push
dec
movsb
pop
fldenv
sub
lahf
in
lods
mov
pop
fimuls
hlt
ss
and
or
and
xchg
andb
aad
push
or
jne
and
jo
adc
jl
rcr
test
jne
adc
les
lock
and
xor
mov
mov
or
stc
sub
arpl
adc
adc
mov
xor
lret
mov
push
dec
mov
adc
jecxz
xchg
les
mov
xchg
dec
test
sub
shrb
inc
lods
pop
hlt
mov
xor
pop
pop
sbb
mov
xor
xor
or
scas
cld
push
mov
enter
je
iret
roll
mov
inc
hlt
das
add
push
xchg
aad
ret
jg
mov
fldt
push
or
push
add
dec
push
scas
in
adc
into
repz
clc
pop
cmpsl
mov
scas
pop
in
pop
adc
xor
das
sbb
pop
ljmp
sbb
push
stos
cmpb
push
mov
jp
jle
cmpsb
sarb
rcrb
or
push
jmp
push
cmp
jne
inc
inc
jmp
inc
fs
sub
sbb
cmp
mov
je
icebp
add
push
nop
sub
dec
jmp
test
inc
fbstp
add
repnz
outsb
or
sub
xchg
mov
cwtl
cmpsb
lcall
movsl
scas
arpl
in
push
aaa
push
inc
adc
and
cwtl
paddsb
je
xor
int
dec
sbbl
ret
sahf
negb
jl
xchg
aam
pop
in
mov
cld
pop
ss
and
lods
xor
cs
test
adc
push
or
dec
push
int
push
mov
sub
xchg
push
mov
xchg
inc
aam
loope
repnz
pop
push
push
dec
in
mov
jne
cmp
inc
mov
push
cmp
fcompl
inc
aas
sub
add
arpl
test
pop
jp
push
mov
pop
les
sub
fadds
jnp
in
aam
test
or
and
xor
dec
ret
mov
shl
and
push
es
xchg
lods
sbb
or
je
xchg
jo
jb
jle
add
push
imul
in
js
ret
jo
test
xor
inc
inc
mov
popf
xor
jne
push
cmc
push
mov
loopne
mov
jle
xor
fistpl
sbb
enter
sub
sbb
pop
sbb
inc
pop
jns
add
lret
and
mov
mov
push
sbb
sbb
bound
push
or
dec
add
das
rorb
js
daa
in
inc
xor
scas
call
aaa
add
dec
enter
aad
dec
sti
push
imul
jo
xchg
xchg
xchg
jne
and
bound
lods
and
mov
daa
test
add
push
movsl
or
push
ret
cmp
add
scas
ret
adc
or
push
daa
mov
mov
scas
inc
ret
cmc
call
mov
ret
cmp
leave
and
mov
lret
insb
ret
or
cli
test
ss
mov
inc
cmp
je
cltd
test
scas
test
xchg
stc
test
push
mov
pusha
pushf
in
dec
leavew
and
sub
or
xchg
fs
xor
call
stos
add
push
add
test
insb
hlt
or
test
xor
inc
jecxz
push
in
mov
lea
or
cld
push
fdivl
push
ljmp
adc
daa
jle
ret
jmp
rorl
inc
pop
jp
mov
cmp
loope
mov
mov
mov
cmp
or
data16
jl,pn
mov
sub
or
sbb
ljmp
xchg
add
pop
hlt
dec
mov
shlb
cli
shr
xor
adc
repz
movsl
fsubl
roll
cmpb
fisttpll
push
mov
shr
cmp
jbe
xor
icebp
add
jmp
jbe
in
repnz
in
pop
call
pop
and
or
inc
dec
lea
push
and
jl
pusha
pop
sub
push
frstor
dec
stos
in
add
adc
xchg
or
xchg
ret
nopl
inc
sbb
lods
sbb
insb
add
js
insl
mov
movl
mov
rolb
aaa
mov
insb
push
out
or
inc
sbb
fbstp
jne
out
lods
pop
outsb
cmp
testl
adc
adc
call
push
jb
xor
xchg
cmp
push
aas
sbb
mov
cmp
stc
mov
cmp
bound
or
xor
lret
scas
les
and
add
mov
loope
pop
popa
xchg
ss
les
push
adc
jo
aad
pop
xchg
fdiv
jne
xorl
addl
loopne
cld
mul
nop
decb
js
scas
mov
pop
xor
jecxz
test
push
adc
inc
or
test
dec
bound
sbb
adc
pop
sbb
push
add
pushf
and
test
xchg
pop
into
cld
pop
xchg
sbb
xchg
repnz
push
je
jge
sub
add
mov
jp
jmp
cmp
mov
jge
cmp
or
push
fcmovnb
shrb
sbb
dec
xor
lahf
cmp
xchg
sub
and
add
adc
push
add
sbb
cmp
outsb
insb
add
or
lods
inc
add
flds
cmc
push
jecxz
pop
add
add
dec
aas
sub
adc
loope
sahf
push
or
and
repz
mov
pop
jmp
sbb
and
cmp
cmp
adc
mov
mov
pop
shr
aam
dec
adc
pusha
cmp
adc
xlat
lods
inc
push
inc
xor
test
add
push
mov
inc
mov
adc
inc
jle
jle
mov
shlb
or
xchg
or
enter
sub
repnz
cmp
in
or
fcoms
es
jmp
ljmp
push
add
or
fcmovbe
adc
mov
les
jns
mov
mov
adc
ss
dec
inc
jge
xor
into
outsb
or
push
push
xor
int
adc
je
xor
lods
mov
insl
lods
inc
and
add
in
cmp
jns
or
pop
adc
bound
insl
cmp
and
arpl
inc
inc
lods
out
les
pop
jmp
push
dec
aad
movsb
inc
push
imul
popa
inc
lret
scas
adc
jbe
cld
push
stos
mov
adc
pop
jne
add
xlat
sub
sbb
daa
sbb
sbb
sub
push
call
in
dec
les
add
and
add
add
or
imul
inc
push
mov
push
shrl
xchg
mov
rolb
scas
std
dec
ret
or
lret
add
sub
and
je
gs
fcoml
adc
or
lods
and
daa
push
or
fsubs
mov
jno
add
add
mov
sub
popf
pusha
lcall
add
mov
mov
xorl
add
or
sub
lea
add
pop
fsubl
mov
rcl
dec
push
pop
imul
jbe
jmp
test
mov
mov
cltd
shlb
movsb
mov
push
jp
push
cmp
xor
ret
inc
out
lods
pop
sub
ret
push
adcl
inc
sbb
and
cwtl
aaa
test
sub
sbb
sbb
and
or
sub
sub
xchg
push
pop
sbb
push
cwtl
sub
sub
add
push
mov
dec
sub
js
and
push
jbe
imul
xchg
lahf
loope
imul
mov
mov
out
movsb
mov
and
loopne
mov
orb
or
push
pusha
add
xchg
andb
int3
les
add
fists
pop
or
lock
pop
jne
dec
cmp
xorb
adc
out
sbb
dec
jno
cld
add
pop
pshufw
cmp
enter
movsb
or
or
dec
adc
pusha
or
add
shlb
bound
dec
mov
sub
add
test
dec
outsl
and
push
or
and
add
rcr
mov
aam
or
or
push
mov
add
bound
inc
loopne
outsb
ret
dec
adc
add
cmpsb
sbb
add
inc
scas
mov
xchg
pop
jp
add
adc
call
sbb
lock
lret
frstor
or
push
adc
or
or
jle
push
inc
hlt
xchg
jg
sub
outsl
clc
iret
stos
adc
lcall
push
sub
dec
cmp
jbe
pop
jp
dec
nop
hlt
sub
xor
shrb
insb
leave
mov
dec
push
cmp
lock
add
jmp
xor
sub
xor
sbb
adc
shlb
mov
sbb
add
shl
testb
dec
lds
add
cs
popa
xchg
stos
cmp
sbb
sbbl
jno
or
jns
movsb
push
or
mov
sbb
loope
mov
xchg
push
popa
rolb
lods
push
in
xor
or
shlb
mov
cmp
add
mov
mov
movsl
add
seta
mov
pop
pop
sbb
add
lds
std
xlat
mov
inc
sub
js
mov
int
push
mov
ja
filds
dec
je
or
and
data16
mov
jae
xchg
mov
jb
rcrb
nop
rorb
mov
mov
push
push
leave
add
inc
or
mov
hlt
cwtl
ss
out
sbb
movsl
sub
lret
jne
push
sti
pop
xchg
push
into
fsubl
fstpl
xchg
aas
and
mov
psubsb
add
sub
xchg
mov
je
data16
or
filds
movsl
dec
movsb
xor
inc
fadd
frstor
test
adc
add
data16
cs
sub
cmp
les
movsl
pop
adc
add
push
adc
push
shrb
cmovo
in
inc
or
mov
popf
sub
push
fwait
xor
fs
sbb
push
popa
sub
sbb
movsb
push
and
mov
adc
imul
xchg
je
inc
add
movsb
dec
lret
adc
push
loop
push
in
push
and
bound
fistpl
es
push
add
push
std
pop
ljmp
sub
inc
lea
push
sub
mov
ret
push
add
test
mov
fisubrs
dec
jns
pop
add
sarl
jo
das
in
xor
dec
xchg
loope
or
lret
push
inc
adc
pop
cli
leave
shl
cltd
addr16
jb
cmp
cmp
xor
imul
or
fsubl
test
stos
test
stos
adc
mov
in
push
sbb
int3
mov
test
jl
xor
lock
adc
in
jo
pop
or
jl
mov
lcall
insb
ret
aam
inc
xchg
adc
mov
sbb
cli
test
adc
and
rclb
rcr
gs
mov
das
add
les
or
push
and
xchg
adc
and
push
scas
mov
mov
in
ljmp
push
movsb
sbb
xlat
orl
addr16
xor
cwtl
js
push
mov
xchg
and
pop
push
jp
inc
cmp
adc
add
ss
mov
add
test
gs
xchg
mov
jge
jle
sahf
jmp
mov
add
push
add
inc
inc
add
push
subl
imulb
add
int
add
xor
repnz
and
jo
repnz
leave
sub
add
inc
imul
lcall
push
int
push
movb
pusha
add
push
add
lret
addb
pushf
xor
jo
stos
xor
and
push
lock
nop
or
xchg
xor
cmp
cli
addr16
sbb
sub
into
outsl
fs
and
f2xm1
mov
movl
inc
inc
sahf
xor
iret
shlb
or
in
xchg
sti
stos
cmp
add
fbld
jne
sbb
adc
je
loopne
pop
pop
clc
notl
sbb
lret
mov
loopne
adc
add
cmp
addr16
pop
push
outsl
push
cmp
aad
jo
loop
sbb
dec
dec
aas
or
lods
push
int
out
and
adc
jbe
test
push
pop
inc
cs
cli
mov
xorb
or
loop
fcom
xchg
add
out
pop
test
inc
push
jl
push
in
andl
xor
mov
lods
inc
xchg
or
cwtl
mov
and
and
push
sub
mov
push
mov
lret
and
push
or
adc
adc
and
push
cmp
xor
mov
lds
pop
push
nop
mov
sub
sbb
adc
iret
ja
jo
adc
sub
hlt
imul
lret
cmp
adc
sub
inc
cwtl
sub
insl
mov
cwtl
jle,pn
and
and
js
push
stc
pusha
or
dec
jns
xor
mov
enter
cmp
scas
leave
or
mov
fisttps
cmp
mov
push
add
inc
push
sub
xorb
add
mov
push
add
je
pusha
add
adc
mov
push
into
insl
loopne
add
orb
js
inc
dec
data16
mov
cmp
rol
enter
jmp
imul
gs
inc
mov
xchg
sbb
pop
loop
js,pn
adc
adc
xor
test
and
sub
shlb
sub
int3
into
jp
sub
push
lea
sub
js
gs
pop
loope
les
xchg
cmc
push
sub
in
or
mov
std
mov
scas
in
ds
mov
mov
push
icebp
add
in
fwait
push
pushf
test
int
inc
testb
lock
mov
xor
push
test
push
imulb
stos
stos
fisttpl
insl
hlt
mov
cmc
ret
sub
rolb
dec
push
dec
insb
ss
ret
out
sbb
mov
ja
movsb
dec
mov
pop
mov
shrb
mov
cmp
add
int3
test
and
inc
stos
aas
in
adcb
and
mov
or
or
or
adc
in
cmp
push
pop
loopne
jg,pn
scas
or
push
cmp
sahf
sbb
or
test
pop
adc
pop
push
in
lcall
jmp
mov
mov
rol
mov
ror
xor
shr
xor
ljmp
jnp
xor
shr
xor
add
add
add
or
mov
enter
repz
iret
or
jae
or
fstpl
call
add
aam
sub
jge
subl
push
repz
ror
cli
fisubrs
or
jge
xor
and
and
xchg
push
aam
sub
and
cmp
mov
test
repnz
lea
sub
fmull
pop
push
jl
push
loopne
xlat
ret
rcl
add
add
sbb
add
add
nop
cmpsb
fsubr
rcl
or
orl
stc
data16
dec
xor
ljmp
jae
movsl
shr
add
push
xor
fsub
shll
xchg
in
shlb
in
test
call
push
sbb
in
push
cmp
bound
push
adc
pop
mov
add
mov
xor
fadd
cs
call
test
shl
orl
int
add
cmp
pop
cmp
push
shlb
aam
sub
cmp
fmuls
jo
int
or
int3
out
add
in
adc
xor
and
and
cmp
out
into
add
and
int3
lcall
inc
adc
add
adc
mov
cmp
jo
ret
push
jo
sbb
adc
ret
xchg
sub
cmpl
adc
push
lock
pop
iret
loop
mov
add
add
jle
fadds
pop
jbe
call
sub
ret
lret
push
clc
jp
push
cmpsb
bnd
add
gs
fdivrs
imul
and
psllq
inc
mov
mov
xor
cli
nop
or
jmp
aam
dec
shll
aaa
cmp
adc
xor
sub
mov
xor
in
in
shr
rolb
rcll
inc
aaa
cli
xor
xchg
add
fcom
aaa
or
inc
or
cmpsb
sub
dec
loopne
in
pusha
in
call
jne
movsb
loope
inc
push
sbb
adc
xor
and
nop
data16
or
xchg
lock
xor
cwtl
add
cmp
and
push
adc
int
push
pop
cmp
or
xor
clc
pop
pop
adc
test
add
or
push
or
and
cld
pop
lcall
pusha
dec
sub
or
and
movsl
mov
repnz
mov
or
rolb
dec
sahf
les
dec
jno
in
sub
push
cmp
cmpsl
add
fs
xor
lcall
aam
xor
mov
adc
clc
inc
mov
dec
imulb
dec
inc
fmuls
adc
dec
shll
adc
sbb
dec
mov
adc
xchg
rorb
sbb
and
xchg
mov
or
jno
and
sbb
shrl
mov
dec
add
inc
add
lret
jb
or
popl
mov
or
add
sub
lea
push
aad
negb
adc
cli
decl
sub
sarb
cld
pop
and
rol
and
mov
dec
insl
insl
fstl
jne
ret
jae
inc
fsubl
cmpsb
mov
sub
lds
cmp
aas
lea
scas
add
js
lea
push
sub
mov
add
or
mov
dec
jne
pop
clc
loope
push
dec
sarb
mov
jl
in
xchg
sub
mov
cmp
jbe
or
adcl
inc
aam
lea
sub
jae
push
pop
mov
xchg
sub
sub
stos
or
sbb
cmp
scas
or
mov
mov
outsl
pop
loopne
ror
mov
mov
xchg
or
xchg
ljmp
adc
mov
adc
add
lar
xor
xor
adc
cmp
ja
andl
sbb
inc
aaa
popa
jae
test
shrl
je
add
mov
add
mov
test
mov
push
inc
xor
pop
vmovapd
or
mov
add
addb
lret
jmp
fstpt
mov
mov
imul
das
je
or
mov
adc
imul
jne,pn
or
negb
rcrb
inc
lea
inc
mov
jmp
dec
mov
dec
xor
push
movsb
jne
jmp
cmp
jnp
xorb
insb
and
sahf
add
sbb
cli
or
mov
cs
sub
imul
push
jno
dec
inc
push
inc
and
or
jbe
insl
cltd
push
insl
mov
fsubrs
pop
cwtl
bound
clc
lahf
mov
lock
pop
lea
pop
jp
pop
sarl
sbb
hlt
and
dec
divps
outsb
lret
sahf
jmp
jbe
sahf
xchg
sarl
rcrb
cmp
notb
push
jg
cmp
mov
or
inc
je
outsb
or
jb
or
ja
pushf
push
inc
push
nop
mov
push
add
ret
add
jmp
inc
loopne
mov
andl
fildl
jne
mov
and
test
mov
movzwl
data16
jb
add
aaa
jb
cmp
imul
add
jmp
cwtl
aas
rcll
and
and
dec
hlt
xor
jle
adc
test
jne
pushf
and
sub
test
sub
dec
or
add
adc
jae
mov
jmp
dec
shlb
mov
nop
addb
xor
mov
xor
inc
call
mov
push
jle
bound
mov
inc
jg
or
jge
and
jle
es
mov
sub
sub
and
pop
cmp
jl
pop
jle
rcrl
movsl
pusha
and
clc
add
jp
add
and
jbe
mov
test
aas
mov
jne
or
je,pn
test
jne
je
mov
ds
outsb
and
jb
add
sub
adc
and
push
mov
ljmp
loop
js
or
xchg
push
inc
shrb
mov
shll
inc
and
je
fsubrs
sbb
xor
mov
or
jae
add
inc
es
adc
dec
push
scas
stos
or
add
push
mov
push
adc
roll
mov
pushl
push
xchg
dec
imul
mov
pop
or
xchg
out
mov
dec
mov
cmp
ljmp
mov
ret
cmp
xchg
cmp
pop
sub
inc
mov
and
negb
and
mov
lea
and
cmp
cmp
in
lock
cmp
mov
mov
inc
or
clc
or
xchg
sbb
test
pop
jl
cwtl
xor
jne
ficompl
stos
dec
daa
shrl
stc
mov
add
inc
arpl
push
inc
and
lock
ret
repz
jo
insl
pop
pop
cmp
je
test
adc
mov
sti
mov
push
dec
clc
dec
add
jp
push
jbe
pop
adc
fnstsw
mov
dec
add
dec
mov
xchg
arpl
or
mov
ss
notb
movb
adc
pop
test
sub
and
fdivrs
inc
inc
in
scas
xchg
ret
mov
lidtl
cmp
fmul
les
cmp
sub
or
push
or
add
sahf
push
cmp
int
cmp
hlt
stc
popa
pop
pop
add
inc
dec
inc
shlb
test
call
jge
outsl
mov
or
incl
adcl
loopne
xorl
ret
or
inc
sarl
mov
ret
in
es
loopne
jae
add
inc
fisttpl
sub
addr16
dec
pop
rcll
int3
mov
stos
pushl
or
dec
insl
mov
cwtl
push
mov
push
outsb
lds
dec
add
add
xor
add
cmp
push
clc
mov
xchg
jne
lahf
push
jb
jb
cwtl
addl
xchg
xchg
xor
out
push
out
pop
lock
or
lods
rorb
dec
xor
xchg
mov
mov
and
xchg
push
enter
inc
nop
lods
sub
cmp
pushf
test
aaa
push
cmp
sbb
aad
xchg
add
push
idivb
faddp
inc
or
iret
ja
rclb
sub
aam
push
sbb
xor
fprem
mov
xor
add
and
push
loopne
pop
adc
jge
sub
mov
cmp
add
sahf
inc
and
aam
out
push
push
fdivl
xor
jo
pop
cwtl
inc
mov
das
dec
das
push
push
cmp
sbb
mov
bound
sbb
mov
mov
or
push
xchg
inc
cmpl
add
pop
lcall
mov
push
adc
inc
je
sbb
je
loop
movsb
sbb
cmp
sbb
incb
add
inc
xchg
fsub
adc
mov
jge
pop
and
aaa
sbb
or
add
sub
lock
lcall
add
add
inc
fsubr
cmp
xor
in
lods
ljmp
frstor
inc
xor
cmpsl
movsb
or
outsb
insb
jne
jl
sub
into
mov
jp
sbb
call
inc
pushl
sbb
repnz
inc
and
inc
ud0
shll
cmp
jne
les
imul
pop
cmp
cmpsb
ret
or
adc
ret
add
call
pop
dec
and
mov
popf
insl
push
jmp
test
movsb
push
adc
cltd
test
jge
push
ss
cmp
sbb
addl
and
jae
sbb
push
xor
jns
and
mov
or
ret
ljmp
cmp
lahf
xchg
ret
mov
jmp
inc
push
sbb
push
ret
ficoms
cmp
je
pop
mov
sbb
pop
adc
mov
mov
mov
adc
add
jne
imul
outsl
cs
test
and
mov
or
lcall
xor
cmp
or
lcall
and
inc
clc
add
push
push
cmp
rolb
sbb
ficoml
jo
xorb
das
mov
rcll
imul
lret
push
cmp
movsl
sbb
add
and
outsb
jns
inc
and
mov
sub
stos
xchg
lret
in
push
sub
xor
jb
pop
cs
cmp
in
cmp
mov
jae
sbb
inc
orb
ret
mov
aaa
rcrl
data16
notl
and
push
sbb
inc
push
and
inc
insl
sbb
inc
mov
jp
in
lea
js
add
sub
or
imul
xchg
sahf
push
test
mov
jmp
sbb
test
mov
push
push
add
push
inc
push
pop
cmpsl
insl
adc
adcl
mov
mov
sbb
adc
or
or
or
popa
pop
ret
sub
cmpl
mov
stos
fs
mov
shlb
pushl
rcll
lahf
jb
sub
jne
sbb
les
push
pushf
dec
lret
int3
imul
movsl
dec
jl
push
je
push
movzwl
cmp
gs
loopne
sbb
inc
fstpt
xor
mov
jne
jne
and
lret
xor
push
inc
call
jbe
shr
inc
loop
mov
ret
pop
les
pop
inc
rol
jl
jb
xor
daa
loop
sbbb
or
cmp
mov
inc
insl
cmp
cmp
dec
mov
add
add
mov
mov
addb
and
inc
ret
adc
lret
pop
lods
testl
jge
and
push
pop
xlat
aam
orb
or
pop
xlat
push
mov
add
cmp
les
es
sbb
sub
rcr
loop
jno
sbb
negb
push
leave
add
ret
lock
out
add
enter
insl
es
bound
sbb
out
push
or
test
fwait
sahf
sbb
test
in
ret
or
xchg
adc
cmp
or
cmpsl
nop
adc
subb
lods
mov
inc
pop
inc
rol
imul
or
sbb
jmp
xchg
pop
imul
xorl
arpl
adc
loope
or
dec
enter
mov
push
mov
scas
test
or
or
scas
dec
hlt
imul
inc
notb
aaa
jbe
cmp
cmp
push
and
jmp
in
xchg
and
pop
sbb
xor
rorb
loop
dec
out
sbb
xor
adc
cmp
rclb
mov
mov
std
xchg
mov
mov
adc
push
js
add
push
adc
dec
imul
cmp
or
and
cmpsl
mov
loop
pop
sub
xor
adc
shl
or
cmp
das
jo
dec
inc
add
dec
lea
sahf
adc
inc
adc
inc
xor
rorl
xchg
pop
xor
ror
scas
mov
mov
fisubs
pop
dec
in
pop
pop
pop
mov
xor
pop
xorb
mov
cmp
sahf
mov
adc
sbb
lcall
subb
in
stos
loop
inc
mov
dec
inc
das
cmc
loope
push
mov
outsb
or
out
test
push
adc
adc
imull
and
les
jo
adc
inc
dec
dec
sti
movsb
adc
addr16
add
dec
add
mov
add
insb
and
ja
mov
cmpsl
lea
add
scas
loope
rclb
xchg
cmp
movsl
cli
jle
dec
push
orb
ljmp
dec
jmp
and
sub
and
dec
fldcw
sbb
mov
push
and
adc
push
and
sub
daa
mov
push
dec
dec
xlat
insl
or
inc
push
and
rolb
or
movsl
data16
rcrl
int
lcall
fs
adc
cmp
lods
lds
add
in
xorl
inc
dec
imul
or
and
add
adc
fwait
add
jo
sbb
add
xchg
and
jae
inc
es
dec
bound
push
pop
push
push
xorb
dec
pop
add
mov
inc
popa
or
add
pop
and
test
clc
jo
mov
mov
pop
adc
imulb
mov
loope
mov
inc
sub
pop
ljmp
js
mov
rolb
gs
pop
shlb
mov
xor
add
enter
mov
adc
fwait
push
pop
fs
mov
xor
sbb
and
mov
shl
ss
repnz
jo
mov
scas
mov
or
push
pop
movsb
lret
add
push
dec
lcall
pop
cmpb
mov
lods
inc
subl
cmp
repnz
inc
xchg
push
lods
and
in
mov
pop
inc
inc
test
add
add
pop
roll
rorb
inc
mov
and
jne
aaa
test
add
dec
mov
sbb
sbb
inc
subb
pop
push
xor
jae
cmp
stos
cwtl
push
inc
jmp
jge
pop
addl
das
pop
mov
lock
push
sahf
dec
test
jge
dec
or
cwtl
push
mov
fmuls
into
sub
lods
lods
lods
mov
mov
out
fistps
cmp
push
push
pusha
pop
daa
push
push
add
fst
adc
xor
push
xchg
or
and
mov
loope
pop
mov
or
sub
cmpsl
lods
jbe
adc
sub
or
pop
outsl
adc
sub
push
aam
mov
jo
je
cmp
jbe
lds
insb
jmp
jbe
dec
loope
sbb
xor
add
adc
ret
or
aad
jp
in
insl
inc
leave
out
xor
and
xor
mov
mov
jnp
adc
les
dec
repnz
mov
jmp
push
mov
push
movsb
cmp
xchg
test
jbe
mov
insl
outsb
orl
push
jge
ret
push
dec
or
scas
jp
pop
mov
or
dec
add
mov
add
adc
push
push
dec
xchg
sub
cmp
push
cmp
clc
pop
cmp
lcall
dec
sbb
mov
push
dec
lods
int
lods
ret
jb
push
and
shlb
mov
test
sbb
push
mov
fisubrs
cmp
mov
pop
repz
push
mov
sub
loop
cli
nop
mov
mov
push
jae
push
mov
sub
sti
cmp
iret
jmp
dec
stc
mov
push
sub
enter
add
or
or
add
push
mov
jp
movsl
test
mov
arpl
xor
dec
daa
mov
push
add
push
mov
jno
loope
dec
lret
dec
pop
inc
fidivrl
push
and
xrelease
inc
imulb
fwait
xor
fsubrl
jo
cmp
and
mov
pop
bound
and
ja
cmpsb
push
and
dec
sbb
shl
or
pop
push
or
and
dec
add
das
sub
imul
or
add
test
and
jmp
pop
repz
and
adc
and
mov
adc
pop
cmpps
sub
add
in
imul
sub
cmp
adc
lret
jbe
sub
add
mov
inc
test
sub
das
sahf
push
mov
add
andl
fsubrl
push
adc
cmp
jb
std
adc
xchg
sbb
in
pop
push
inc
push
ret
sbb
sub
sub
enter
mov
pop
mov
cwtl
stos
inc
push
ret
jg
adc
sbb
xor
popf
xor
xchg
jmp
dec
shrb
cmp
xchg
mov
je
sub
clc
pop
xlat
adc
add
mov
cmpsl
and
lock
mov
andb
xor
or
dec
lock
or
cmpsb
cmp
push
add
xor
or
sbb
push
xchg
pop
jno
icebp
xchg
bound
mov
dec
or
add
mov
jl
rorb
sti
add
mov
sub
or
xor
jbe
jmp
and
insl
xor
loopne
mov
add
sub
jo
sbbl
outsl
ret
das
pop
pop
jl
add
je
push
adc
inc
mov
or
adc
inc
add
test
adc
inc
scas
ret
dec
mov
push
fldenv
dec
adc
popa
xchg
movsl
mov
jnp
outsl
cmp
sub
sub
and
push
fsubrl
loop
sbb
push
dec
xchg
sbb
dec
jmp
or
filds
pop
imulb
lcall
xchg
mov
pop
inc
ss
cmp
jmp
popa
cmp
jae
ss
jb
add
push
test
jne
mov
mov
ror
mov
inc
push
adc
push
out
dec
adc
loope
or
inc
adc
push
jmp
loope
js
lock
bound
daa
cld
push
stos
dec
in
insb
std
add
in
xor
and
inc
add
bound
adcb
pop
sub
jo
out
or
pop
sahf
cmp
add
in
add
cmpsl
and
add
in
and
xchg
inc
pop
stc
fs
loop
sarb
movsb
int3
xor
xor
add
xorl
dec
adc
jmp
xor
lcall
jle
cmp
xchg
clc
push
fnstcw
sbbl
add
pop
loop
or
mov
test
add
movsl
cmp
rcr
dec
sub
pop
ficompl
arpl
add
ror
jo
add
loope
add
and
cmp
rcrl
jne
jbe
push
fiaddl
mov
inc
insb
dec
xor
mov
loop
xorl
jae
pop
pop
in
stos
cmp
orl
sbb
jnp
xchg
cltd
xor
mov
inc
add
and
push
pop
sub
test
sub
sbb
adc
xchg
xchg
call
mov
sbb
aam
popa
gs
cmpsb
insb
and
and
loope
inc
das
shrl
push
ljmp
aas
rorb
nop
and
mov
xchg
mov
sub
mov
adc
adc
jmp
cmp
and
shr
in
mov
mov
mov
add
adc
imul
xchg
xor
sbb
mov
dec
mov
inc
mov
push
cmp
cmp
mov
jl
cmp
add
dec
fwait
add
insl
loopne
ret
pop
xchg
cmpsb
shr
rcrb
sub
ret
call
add
shl
push
psllw
and
js
add
lock
jge
jecxz
mov
inc
or
mov
or
sbb
add
push
fsubrs
imul
sub
mov
pop
mov
and
pop
and
sbb
jg
mov
adc
mov
jbe
jne
bsf
add
adc
add
aad
fdivr
dec
mov
pop
das
mov
jnp
movsb
out
or
inc
movb
push
pop
jmp
gs
pop
popf
inc
stc
mov
mov
adcb
adc
mov
lret
cltd
mov
and
roll
add
sbb
push
fs
pop
inc
add
xchg
add
push
push
push
test
and
add
or
dec
inc
pop
pop
insb
sbb
dec
xchg
jns
sbb
xchg
arpl
pop
and
movb
xchg
clc
add
je,pt
jl
insb
mov
and
sbb
xchg
aad
cmp
mov
mov
repnz
inc
mov
add
sub
lods
pushl
insl
or
and
push
int
test
cmpl
test
mov
lret
test
and
popa
or
dec
xchg
xchg
mov
scas
mov
or
add
jle
addl
mov
daa
pop
mov
jmp
push
adc
add
xchg
cmp
dec
add
iret
mov
inc
push
sbb
adc
mov
add
imul
cmp
adc
mov
adcb
dec
in
inc
dec
pop
and
or
cltd
lods
dec
jne
adc
or
outsl
cmp
ret
mov
pand
pop
mov
jno
add
push
and
adc
sti
scas
lods
mov
jns
and
imul
inc
mov
jmp
aaa
lret
aas
int
insb
mov
mov
loopne
ds
jmp
test
bound
cmp
sti
inc
mov
jmp
mov
mov
inc
lds
aaa
mov
mov
pop
xchg
ret
xor
insl
inc
pop
mov
out
push
adc
lcall
push
cmp
aas
mov
pop
mov
xor
popa
pop
mov
sbbl
sub
in
movsl
pusha
inc
in
mov
aam
loopne
adc
shrb
das
inc
xor
subl
lea
xor
fwait
ret
dec
pop
xchg
or
and
icebp
or
xchg
cmp
mov
ret
xchg
and
pop
add
jne
movsl
push
pop
sti
xor
pop
push
lea
cltd
shr
or
data16
dec
ret
lea
imul
lea
pop
loopne
icebp
inc
inc
push
push
in
aam
jnp
push
cs
mov
mov
aaa
sub
mov
mov
leave
or
imul
xor
enter
sub
pop
mov
mov
pop
sahf
outsl
xor
js
fidivl
jmp
ret
popl
shll
gs
pusha
push
mov
or
test
jecxz
adc
shlb
jns
push
es
aam
pushf
aam
call
add
push
add
inc
mov
or
ljmp
dec
and
shll
sbb
or
repnz
pushf
xlat
fcoml
push
test
mov
xchg
rcrl
mov
lods
push
add
jle
gs
sbb
jbe
test
dec
add
and
mov
ror
xor
popa
pop
leave
shlb
mov
cmp
add
sbb
adcb
lret
cmp
in
jbe
cmp
xchg
cmp
je
mov
push
dec
mov
push
mov
ss
in
ds
jle
cmp
adc
xchg
adc
mov
mov
iret
dec
mov
repnz
pop
mov
add
lret
mov
add
in
mov
mov
or
push
les
cmp
movsl
xor
sahf
mov
lcall
inc
roll
xor
pop
jmp
xor
sbb
mov
push
dec
movsl
icebp
mov
dec
lea
xor
mov
cmp
inc
es
daa
movsb
sbb
push
cmp
aam
enter
xor
clc
out
dec
add
jmp
mov
sbb
adc
subl
cmp
inc
cli
and
adc
shl
je
fs
xchg
stos
pop
pop
test
inc
jae
push
push
add
pop
adc
clc
in
push
movsb
fstps
push
pop
in
cmp
add
pusha
ljmp
or
and
mov
clc
dec
or
ss
shl
xchg
or
sub
jg
iret
out
out
push
lret
mov
push
jae
addb
add
pop
mov
adc
mov
adc
or
or
testl
cmpsl
pop
add
xchg
add
add
sbb
sti
test
cltd
repnz
sbb
or
sahf
repz
scas
inc
dec
shrb
outsl
dec
sbb
mov
inc
xchg
mov
push
inc
hlt
sub
push
leave
rcrl
scas
mov
cmp
push
pop
xor
int
call
push
push
add
les
jnp
or
stc
push
je
mov
lea
inc
xchg
sub
mov
jl
inc
add
xor
sub
or
add
hlt
jge
push
jne
pop
mov
push
lock
push
jbe
movsl
xor
adc
fs
test
bound
xchg
xor
pusha
shlb
xchg
lock
and
cmpsl
add
pop
mov
add
push
das
cmp
mov
push
addl
mov
add
mov
in
sub
or
sub
add
cmp
or
sbb
inc
mov
xchg
add
dec
jae
or
sub
and
popa
nop
clc
lea
jns
push
and
rclw
push
jmp
pop
ret
mov
jnp
dec
aam
aaa
mov
testb
jmp
add
or
mov
stos
or
jnp
cmp
xchg
pop
add
add
movsb
mov
adc
pushf
jbe
push
divb
dec
rorl
dec
dec
dec
clc
jne
mov
push
test
cmp
dec
fs
sahf
mov
sub
xchg
push
push
stos
sub
dec
mov
inc
lcall
and
and
jns
rorl
dec
dec
adc
lcall
test
add
cmp
call
movsl
add
add
fxtract
jne
push
pop
push
add
js
fistl
cld
aam
sbbb
sub
jne
mov
xchg
mov
sbb
repz
add
or
nop
data16
add
xlat
add
jb
cld
clc
pushl
xor
mov
daa
mov
int
mov
loope
fwait
xchg
mov
adc
cld
pop
cs
xor
inc
movl
cmp
push
mov
push
xor
out
inc
aas
rorb
sub
mov
cmp
js
adc
inc
mov
mov
inc
mov
push
cmp
xchg
mov
inc
adc
sub
sub
rcrb
push
add
cltd
add
push
lahf
lea
cltd
jae
mov
mov
dec
insl
pop
dec
add
das
mov
adc
push
movb
popf
push
or
ds
jbe
push
cmp
adc
outsl
imull
jge
xchg
mov
push
mov
add
test
loop
add
sbb
mov
pop
or
jmp
in
inc
fwait
push
add
iret
xchg
fisttps
pop
in
fcoms
test
xchg
sub
jl
das
pop
xchg
or
jnp
iret
cbtw
js
and
repnz
arpl
mov
and
lock
inc
test
loopne
sbb
mov
es
mov
inc
xchg
mov
mov
jge
or
cmpb
push
fistpll
pop
sub
inc
adc
leave
lret
pop
xor
inc
dec
test
jge
jne
xchg
jns
cli
pop
push
rorb
jle
ja
add
mov
add
pop
mov
outsl
jno
sbb
daa
gs
cwtl
icebp
cmp
js
xor
dec
cmp
stos
imul
in
jg
jae
loopne
sub
cmp
je
call
imull
mov
nop
lret
cmp
std
xchg
imul
aam
cmp
jb
aas
mov
push
dec
in
aas
sub
cmpsl
sub
shll
cmp
lcall
fstpt
test
jp
push
jne
mov
jge
fmull
dec
cli
insb
insb
dec
cmp
jb
out
push
add
test
sarl
cmpb
jbe
inc
mov
fwait
loop
add
add
jmp
jnp
mov
enter
lea
cli
addr16
jmp
enter
mov
mov
mov
bound
nop
pop
sbb
enter
xchg
rcrb
sbb
or
sub
lock
fcmovb
xchg
and
or
out
scas
inc
xchg
pop
xchg
call
roll
and
test
xor
jb
addr16
inc
dec
mov
das
bnd
sbb
and
rorb
cwtl
cmpsl
ret
push
or
pop
xchg
and
call
mov
or
mov
and
jae
xchg
inc
add
xchg
cld
js
gs
jle
test
adc
lcall
inc
jmp
insl
mov
dec
mov
pop
and
sub
add
mov
enter
fwait
iret
shlb
pop
je
push
jae
adc
mov
jmp
cmp
add
mov
add
sbb
mov
in
adc
pushf
push
lea
in
outsl
cwtl
loopne
or
xor
jbe
mov
loopne
lahf
inc
sbb
out
loopne
rorb
inc
dec
xor
out
xchg
test
add
mov
gs
push
shr
push
repnz
add
enter
dec
jbe
dec
push
es
cmp
cmpsb
mov
call
test
add
xor
adc
jge
sbb
in
inc
rcl
jmp
or
xor
sub
xchg
jo
jb
mov
in
in
jl
cmp
test
jmp
call
sub
pop
cmp
pop
shrl
insl
popa
popf
sub
bound
mov
or
filds
clc
add
clc
jno
lods
loopne
xor
xchg
or
add
icebp
or
repz
sbb
push
cmpsl
and
popa
cmp
jns
sub
je
sti
adc
pop
cmp
push
or
adc
cmp
nop
aad
das
popa
sub
mov
sub
mov
jle
test
jmp
jge
shll
popf
loopne
or
dec
sti
loope
inc
test
jne
dec
fcoml
mov
or
push
loope
jge
sarb
ret
push
xchg
and
inc
adc
jle
jl
cmp
fiadds
inc
fsubr
pop
push
and
ror
inc
xor
mov
mov
mov
bound
push
dec
jnp
insb
loope
xchg
ja
xor
test
and
scas
xchg
rcrl
pop
add
xchg
sbb
adc
push
sbbb
xor
mov
clc
gs
imul
in
or
sbb
fcompl
cmp
push
dec
add
nop
lea
das
sub
testb
inc
jmp
jo
cmp
cmp
add
add
movsl
or
addr16
mov
loopne
scas
mov
add
mov
je
dec
dec
push
jle
jnp
lea
sub
sub
mov
push
pop
add
cmpsl
mov
outsl
loope
shlb
std
mov
cltd
sarl
rcrb
pop
imul
sub
hlt
ret
icebp
jo
leave
mov
in
and
int
mov
jmp
mov
repnz
push
fmulp
cmp
jae
sub
mov
icebp
int
or
enter
sub
inc
sub
xor
das
lds
push
xor
add
sarl
push
mov
fwait
addr16
jnp
and
das
incb
mov
xor
or
insb
aaa
or
push
int3
popa
repz
push
decl
js
enter
fisubrs
push
adc
ja
adc
cmp
xchg
sbb
sub
mov
adc
pop
dec
add
sbb
xchg
rclb
xchg
call
adc
cld
pop
mov
rol
addl
inc
cmp
fistl
andb
mov
add
xor
cmp
lea
jge
test
decl
je
in
jp
jecxz
xchg
shll
xchg
lods
imul
je
mov
mov
push
inc
sti
dec
add
cmpl
js
aaa
dec
adc
adc
pop
imul
rorl
inc
data16
xchg
loopne
ret
and
jb
push
ss
dec
mov
jmp
push
mov
inc
sub
xchg
inc
js
add
and
pop
outsb
or
int
nop
jmp
push
mov
push
daa
xor
mov
nop
cmc
sub
add
sti
xor
mov
and
adc
mov
cmpsl
sub
or
movsb
js
cmc
ret
out
push
jae
lea
push
sub
xor
outsl
add
mov
pop
bound
or
dec
pop
ret
inc
sbb
cmpsb
xor
out
adc
pop
imul
int
inc
fisubrs
mov
mov
fnstenv
inc
jmp
push
sbb
fdivl
sub
xor
popf
and
lea
inc
enter
pusha
notl
add
add
dec
ljmp
sub
clc
subl
out
mov
lods
test
push
inc
iret
fcompl
jbe
imul
dec
pop
dec
add
jo
push
push
pop
push
push
xchg
sub
lcall
bound
sti
add
imul
cld
jle
xor
sbb
jbe
jmp
xchg
add
pop
out
in
stos
push
push
cmc
xorb
push
pop
pop
fldln2
pop
sbb
scas
mov
pop
ret
lret
push
inc
adc
jno
loopne
mov
mov
arpl
jae
pop
nop
xlat
lods
add
loopne
in
or
inc
adc
mov
test
dec
jne
loope
jns
mov
cltd
xchg
je
mov
xor
bnd
movsl
mov
add
cmpb
push
out
dec
fwait
or
or
lcall
xchg
les
addl
push
out
jb
inc
daa
xchg
aam
lcall
add
unpcklps
mov
sbb
je
cmp
outsl
mov
fs
inc
or
add
test
xor
jbe
test
mov
pop
xor
mov
mov
jmp
mov
adc
shlb
lea
lods
leave
mov
cmpb
out
aas
ret
sbb
testb
jle
or
sbbb
jmp
add
xor
aam
mov
sbb
and
test
dec
inc
xor
cmpsl
popf
push
loopnew
in
out
cmpsb
imul
imul
xchg
sbb
xor
and
and
push
adc
push
cmp
push
jmp
or
jb
mov
mov
jle
jae
enter
or
popf
sbb
mov
or
mov
stos
lods
fistps
xor
cmp
inc
dec
inc
fdivrl
xchg
jmp
test
mull
mov
push
mov
dec
mov
push
or
xchg
add
inc
and
ja
int3
ss
sub
dec
and
lods
add
inc
insl
mov
icebp
mov
pop
sbbb
mov
adc
pushf
push
inc
and
inc
popa
add
movb
xchg
adc
mov
fiadds
fsubl
xor
iret
jns
adcb
inc
sbb
cmp
sub
inc
mov
dec
ret
sub
and
out
add
or
pop
mov
push
adc
adc
xor
add
in
pop
fiaddl
pop
xchg
jbe
cmp
fiadds
inc
sarb
dec
add
mov
pop
dec
lret
js
test
mov
in
outsb
mov
inc
ss
inc
sub
xchg
adc
fimuls
test
push
xchg
icebp
dec
cmp
mov
pop
les
popf
mov
js
inc
adc
xorl
ret
dec
add
jbe
cmpl
rolb
mov
xchg
sub
inc
dec
xor
mov
addr16
pop
mov
push
push
mov
lsl
repnz
call
dec
orb
lea
inc
test
push
push
and
mov
movb
or
sbb
or
pusha
add
pop
dec
addb
repnz
xchg
pop
mov
sub
adc
inc
mov
sbb
shl
push
scas
dec
hlt
jp
push
adc
sbb
sbbb
ss
jne
or
test
pushl
pop
mov
outsl
into
cmc
sbb
adcl
pushf
std
ja
adc
fstps
fcoms
clc
dec
mov
insl
xor
push
adc
in
fwait
jp
out
pop
sbb
pop
cmp
gs
sbb
out
fwait
cltd
insl
out
jo
inc
sbbl
fstps
xchg
loopne
push
fldl
xor
or
sub
adc
jno
movsb
cltd
mov
mov
mov
pop
pop
pop
mov
sahf
pop
gs
repz
js
jge
jo
shrl
or
pop
loopne
jnp
xorl
addb
cwtl
add
cwtl
testl
inc
mov
jle
jne
mov
jne
cmp
cmp
lods
mulb
inc
add
xchg
pop
inc
add
push
and
mov
rol
add
xchg
lock
inc
mov
movsb
mov
subb
or
fldl
cmc
jmp
add
fld
fsubr
adc
flds
mov
push
pop
rolb
jns
ss
adc
out
enter
loop
jbe
push
or
jle
xchg
mov
xor
or
imul
gs
lret
inc
add
adc
pushf
add
movsl
adc
inc
in
or
sbb
sbb
push
push
sub
inc
pop
outsb
int3
xchg
lret
or
mov
imul
leave
mov
subb
ret
repz
inc
mov
pushf
hlt
lea
sub
xor
mov
pop
mov
mov
pop
mov
and
cli
test
out
fisttpll
mov
dec
pop
dec
adcl
mov
mov
adc
mov
pop
xchg
push
jg
cwtl
xor
mov
jne
jmp
fimull
add
out
incb
rorl
xchg
out
frstor
and
pop
xor
push
adc
pop
add
dec
add
add
imul
dec
std
push
lock
adc
insb
loope
add
push
loopne
jge
push
nop
jle
push
mov
pop
and
xchg
xor
inc
cmp
roll
outsb
sub
adc
xchg
emms
or
shlb
bound
sub
push
xor
icebp
nop
inc
sbb
inc
inc
adc
js
xchg
aad
fisttpl
leave
test
jb
out
add
mov
or
jle
adc
shrl
outsl
iret
xor
pop
ret
push
das
mov
adc
mov
add
cmp
int3
sahf
xchg
rclb
sarl
mov
popf
add
shl
aaa
pushf
sbb
popf
loopne
xchg
push
lea
jae
int3
rcrb
ss
sbb
and
call
jg
push
lcall
pand
and
cmp
push
lea
stos
jnp
xor
xor
sub
xor
pop
das
push
mov
inc
pop
in
push
jmp
jmp
pop
push
inc
xor
pusha
movsb
icebp
mov
inc
xor
mov
or
or
in
mov
shl
and
add
mov
enter
shl
add
add
out
and
xadd
add
lret
mov
pop
sbbb
or
mov
es
fmull
push
je
jge
pop
xchg
outsb
xchg
stos
or
sbb
loopne
ja
add
adc
fildll
jge
fisubrs
dec
cmp
push
xor
lret
shr
add
add
fs
adc
mov
cmp
in
stos
jge
lds
lock
add
pushf
sub
lock
or
inc
push
mov
aas
scas
lret
or
enter
daa
mov
pop
scas
xor
sbb
adc
jl
dec
mov
movsb
je
dec
sbb
xchg
pop
mov
cmpsb
lods
mov
stos
test
xor
ds
push
jle
pop
pushf
cmp
adc
cmp
push
fisubrs
xor
add
icebp
cmp
andb
aam
sbb
xorb
adc
or
mov
push
rorb
adc
push
jge
dec
ljmp
add
movsb
or
add
cmp
in
pop
dec
and
outsl
sar
int3
inc
jb
pop
gs
jae
movsb
imul
jns
adc
test
xchg
or
mov
mov
fiadds
in
pop
xchg
pusha
mov
or
jbe
add
mov
call
push
add
mov
mov
dec
mov
dec
sbbl
mov
nop
test
or
test
push
add
xor
fstps
js
rcll
dec
sub
es
lcall
das
shrl
jg
cli
pop
jnp
in
orb
jbe
ss
jmp
push
js
mov
addl
mov
jmp
das
mov
sarb
inc
enter
inc
inc
cmp
dec
outsl
inc
xor
sahf
rcll
push
adc
or
les
jge
inc
add
add
add
push
cmp
push
xchg
push
adc
push
ret
mov
mov
sub
add
cltd
or
sub
pusha
cmp
out
jne
movsb
mov
cmp
or
test
jb
jl
and
jae
lcall
insb
push
jecxz
testb
add
fimuls
xchg
sbb
inc
jmp
jg
arpl
cmp
sbb
mov
cltd
ret
popa
and
adc
jo
ja
pop
pop
ret
mov
or
pop
adc
sar
rorb
or
sarl
stc
in
xchg
subl
add
pusha
shr
bound
jl
fildll
push
sub
insb
and
nop
inc
or
add
dec
mov
mov
xchg
add
pop
or
adc
sar
or
and
in
mov
int
mov
imul
mov
stos
lods
push
or
adc
mov
or
leave
inc
lock
into
or
or
push
inc
cmpsb
xchg
aam
sub
loopne
test
aam
mov
push
push
gs
adc
ds
sbb
into
dec
cmc
inc
mov
cwtl
mov
xchg
test
xor
jge
push
add
push
and
pop
mov
or
lods
jno
push
ficompl
mov
mov
dec
push
inc
xor
jne
push
push
mov
cld
call
mov
or
push
push
adcb
xchg
mov
dec
mov
cmpsb
push
push
call
je
cld
xor
aam
pop
icebp
cmpl
clc
or
xchg
test
sti
xchg
or
pop
pop
popf
mov
pop
push
or
mov
pushf
push
cwtl
push
fdivl
add
or
add
outsb
mov
cmp
add
push
and
lods
test
dec
ret
and
add
movl
cmpl
jne
sbb
jmp
mov
dec
jmp
cld
inc
jb
sbbb
cmp
add
sub
lcall
pusha
push
aas
jo
test
jle
jle
mov
outsl
dec
int
inc
movzwl
inc
cmp
in
mov
or
add
cs
pop
cmp
fsub
call
jo
push
cmp
xor
adc
pop
lea
lock
cmp
pushf
add
test
ret
ret
arpl
dec
or
dec
insb
mov
cltd
lods
ret
push
xor
shll
or
jo
call
inc
inc
mov
jl
push
idivl
push
adc
dec
xor
or
aam
add
ljmp
testb
jne
addl
mov
pop
cmp
inc
push
mov
xlat
dec
stos
hlt
ret
lods
cmp
ret
dec
adc
push
mov
xchg
call
lret
jne
insb
fsts
movl
add
inc
mov
adc
mov
and
sub
push
inc
cld
inc
push
clc
je
cmp
je
push
mov
add
adc
testb
je
cmp
mov
addb
fmul
shlb
ret
sub
pusha
inc
or
out
aam
out
out
shll
inc
mov
jne
pop
xor
imul
test
dec
popa
xor
or
or
adc
xlat
ficompl
xlat
aam
in
push
test
add
push
pop
mov
push
add
or
jg
sub
loopne
rcr
push
jae
dec
and
icebp
jmp
push
fdivs
out
sbb
xchg
enter
pusha
fs
push
mov
loopne
das
jg
add
sbb
ret
add
dec
hlt
adc
popa
inc
jno
cmp
cmp
insl
aaa
addl
jle
movsb
and
pop
rcl
mov
pop
push
test
clc
jg
xchg
push
pop
add
push
push
mov
mov
test
sbb
or
add
ret
icebp
inc
mov
cmpsb
loopne
or
xchg
jne
or
dec
fdivrl
and
push
add
push
push
add
mov
mov
loop
and
orb
push
aam
pop
mov
jbe
scas
rcrl
std
add
loop
lock
enter
or
testb
or
cmp
sbb
or
loopne
loop
sbb
roll
add
cmp
clc
sbb
lea
push
sbb
inc
lock
and
or
cmovge
pop
jne
push
data16
lret
adc
adc
stc
jmp
outsl
clc
pop
or
add
sbb
jmp
test
dec
pop
pop
xor
sub
fsts
xor
xor
sbb
pop
xor
shl
int3
mov
std
cwtl
nop
inc
push
xor
outsb
in
outsb
inc
pusha
xor
mov
pop
cmc
jns
pop
fisubrl
and
or
adc
fs
fdivs
jne
cmp
fimuls
jne
push
sub
add
call
xor
aad
sbb
xor
add
scas
adc
jl
sbb
aaa
les
dec
clc
mov
bound
lods
sbb
xor
outsb
xor
test
sub
xor
sbb
cmp
inc
and
xor
bndldx
sbb
pushl
out
sti
sahf
les
pop
sub
cmpsb
jo
add
inc
sub
insl
mov
xchg
sbbb
push
mov
pop
cltd
push
and
push
add
push
pop
pusha
mov
insb
int3
or
push
pop
fwait
loopne
sbb
and
loopne
and
pop
mov
and
adcb
imulb
cmp
fdivrl
or
and
dec
rorl
in
or
dec
adc
and
add
push
fnstsw
adc
dec
inc
ja
xchg
dec
push
cltd
cmp
mov
test
mov
out
or
loopne
xchg
push
pop
mov
cli
mov
or
lods
or
push
pusha
mov
ja
sbb
dec
adc
cmp
xor
push
cmp
or
adc
in
loopne
loop
lcall
inc
adc
cmpl
push
ljmp
fdivr
outsb
adc
cmc
push
mov
xor
or
mov
cmpsb
fistl
sbb
lock
mov
dec
adc
cmp
mov
sbb
add
cmpsl
scas
xor
lds
push
sbb
cmp
pop
ret
cmp
add
aad
test
jns
push
ds
outsl
sbb
xor
mov
adc
je
insb
inc
or
sarl
dec
cmp
cmp
stos
add
push
xchg
push
pop
add
aas
pop
cmp
loop
lods
pop
dec
insb
mov
in
jle
mov
dec
dec
pop
dec
in
stos
sbb
ficompl
xchg
shr
add
ja
in
jmp
cli
adc
push
jg
lds
add
jp
clc
dec
or
mov
mov
nop
xchg
aaa
cmp
or
inc
cmp
and
fidivl
cmpsb
je
xor
loopne
pusha
mov
cld
pop
ds
jb
or
sub
lea
add
outsb
addr16
xorl
ds
jae
xor
push
dec
sub
add
fimull
pop
rorl
cmpl
je
sar
lock
hlt
xor
loopne
pop
mov
ja
sbb
mov
jo
and
ret
dec
or
push
xchg
xor
sahf
les
pop
imul
pop
ret
adc
enter
rorb
or
loopne
mov
loope
push
sub
lahf
loope
mov
call
hlt
shl
lret
int
adc
gs
dec
xor
inc
push
out
jb
cmp
jmp
mov
pop
push
mov
fwait
sbb
lods
scas
pop
es
imul
cld
les
xchg
fdivrs
pop
push
out
jecxz
jbe
rclb
push
js
stos
imul
mov
fsubr
inc
push
dec
movsb
test
push
lods
jbe
cld
mov
mov
insl
sub
cwtl
inc
pop
inc
inc
inc
test
push
nop
cmp
in
pop
clc
pop
cmpsl
add
das
jl
shlb
test
and
loop
inc
mov
cld
xlat
stos
or
jp
adc
sub
mov
or
push
loopne
push
je
lods
inc
sti
add
cld
cmp
push
bound
mov
push
mov
and
sbb
push
jne
repnz
push
in
sbb
popf
in
push
mov
cwtl
pushf
push
add
ret
filds
xor
dec
rorl
rcll
and
dec
and
scas
dec
xlat
sbb
inc
cmp
add
sub
push
push
dec
out
jecxz
inc
cwtl
mov
pusha
xchg
mov
sbb
add
cs
add
cmp
push
ficoms
rcrb
loopne
mov
ss
xor
icebp
jo
lea
imul
adc
movsb
sub
and
push
aaa
and
pushf
es
push
jno
mov
inc
pop
pop
and
pop
mov
gs
test
dec
jecxz
mov
xchg
clc
jo
inc
adc
out
sbb
arpl
aas
or
sti
dec
adc
xchg
xor
pop
in
add
push
mov
xor
rolb
sbb
add
mov
inc
data16
lea
or
jmp
sub
inc
cld
ss
jb
mov
push
pop
in
pushf
push
jge
push
test
jl
dec
push
push
ja
xchg
es
or
adc
xor
push
jmp
cmpsl
and
cltd
adc
adc
add
pushf
mov
cmp
and
test
cmp
sbb
dec
sbb
jle
cmp
jne
and
adc
testl
mov
ret
and
sbb
dec
je
xchg
jno
or
push
test
dec
inc
xor
dec
sbb
pusha
push
loop
int
roll
xchg
cmpb
adc
inc
shlb
add
mov
adc
or
out
lock
add
rorl
or
adc
fsubrl
jle
rcrb
js
and
push
mov
and
pop
sbb
insl
rcrl
sub
jle
sub
jbe
je
inc
add
jg
or
scas
pop
sub
addr16
jne
adc
mov
jp
mov
and
clc
jg
jg
pop
dec
dec
test
movd
movaps
out
rcll
clc
jae
xor
jle
aaa
das
mov
xor
cli
rcl
lret
adcl
or
jge
repz
lcall
or
sbb
xchg
rorl
fcmovnb
adc
jnp
mov
ja
dec
insb
adc
add
adc
loopne
sbb
push
add
adc
mov
mov
repnz
roll
add
mov
mov
pusha
addsd
int
out
ja
fldl
sbb
sbb
inc
pop
icebp
or
jns
xchg
and
jmp
xor
inc
or
loopne
sub
sahf
push
scas
sbb
fwait
push
mov
mov
adc
dec
and
aam
pop
addr16
dec
xor
xchg
xchg
clc
ret
jge
mov
xchg
ret
xchg
pop
enter
pop
jmp
dec
and
xchg
sub
xchg
loope
mov
inc
jbe
adc
xor
or
xchg
adc
loope
adc
mov
sub
je
pop
movsl
pop
and
xor
notl
sar
fisubl
jnp
aaa
sbb
push
sbb
shlb
jno
pop
mov
push
xchg
cmp
sub
cmp
push
mov
cmp
idivb
jbe
add
mov
lock
jne
push
lahf
cmpsb
and
pop
sbb
or
inc
xchg
pop
ljmp
lcall
lcall
lret
cmp
scas
xchg
push
adc
inc
and
or
fimull
push
sbb
insl
ret
arpl
dec
movsb
or
popf
fwait
jl
xor
hlt
out
adc
pop
lock
out
rcll
mov
arpl
pop
cmp
and
das
stc
fld
push
in
outsl
xchg
jmp
push
xchg
xor
dec
gs
clc
push
cltd
cld
les
mov
push
aas
imul
out
adc
adc
jne
inc
cmp
pop
pop
or
test
mov
lret
push
loope
inc
inc
push
jbe
cmpsb
push
push
adc
mov
and
leave
mov
push
jo
inc
dec
hlt
add
pop
pop
inc
inc
cmp
cmp
cmp
movsl
pushf
or
fisubs
push
rorb
arpl
xchg
cmp
sbb
adc
cmp
rcrb
push
lret
loopne
in
loope
es
or
mov
or
add
in
daa
jae
addb
lods
push
inc
xorl
out
adc
mov
cmp
inc
mov
stos
jno
out
push
ljmp
enter
sbb
ret
idivl
shl
shlb
dec
leave
sbb
pop
or
inc
pop
cmp
mov
add
mov
mov
loopne
rcrl
push
rol
inc
inc
cmp
aam
lret
jne
dec
adc
imul
jg
jmp
jnp
xor
movsb
xchg
add
add
movsl
movl
and
mov
add
outsb
mov
stos
xchg
popf
pop
insl
cmp
and
jns
xchg
and
nop
ret
and
stos
inc
or
sub
cmp
mov
jne
orl
cmp
inc
push
mov
sarl
and
cmp
cs
sbb
aad
insb
lock
in
leave
inc
jne
adc
rorb
loopne
pop
fiaddl
inc
push
sar
lahf
add
jge
stos
mov
cmpsb
lock
pushf
mov
cs
adc
test
ds
fmuls
sbbl
jge
push
div
adcb
mov
data16
jne
idivb
and
and
and
xchg
push
fiaddl
or
popf
call
in
xorb
add
or
adcb
push
pop
pusha
push
pop
lods
sbb
sbb
push
add
inc
cmp
sbb
inc
mov
xchg
mov
mov
jbe
push
xor
pop
div
cmp
daa
in
mov
dec
adc
dec
adc
out
adc
xchg
sbb
add
loopne
imul
jae
sub
les
mov
push
sbbb
sbb
push
mov
mov
add
xchg
ja
faddp
mov
mov
pop
out
leave
add
outsb
jp
xor
popf
mov
push
and
das
jle
push
mov
push
add
repnz
pop
dec
icebp
jl
add
xor
lock
lock
xor
jo
push
fildl
jb
cmp
pshufw
or
in
cmpl
sarb
mov
push
repz
sbb
push
test
push
mov
push
fnstsw
sub
mov
inc
mov
and
and
or
loopne
ret
sub
inc
or
pop
call
sub
adc
sbb
jecxz
adc
mov
mov
cmp
sub
pop
push
lods
sbbl
shll
sub
fdivrl
loopne
out
add
cmp
jb
xor
cmpsb
push
in
sbb
ss
jp
lods
adc
test
sub
inc
loopne
mov
movsb
mov
ret
mov
lahf
push
push
add
or
add
lods
cmc
adc
shrb
push
test
shrb
jbe
je
xlat
pop
xchg
mov
cld
mov
nop
add
pop
sbb
add
lret
xchg
or
jle
jle
xchg
pushf
fwait
pop
mov
outsb
xchg
push
inc
add
fistpl
mov
adc
mov
hlt
icebp
dec
ret
cmp
mov
testb
dec
mov
adc
ds
rcrb
or
or
data16
jmp
bnd
pop
xchg
je
inc
scas
cli
leave
adc
aas
push
jp
mov
jmp
mov
adc
sub
scas
dec
cmp
sub
xor
lock
inc
inc
sti
rclb
add
adc
inc
loope
and
mov
or
pop
adc
cli
insb
pop
pop
jae
or
and
cmpsl
jle
xor
ret
pop
shll
or
movsl
notb
pop
cmpsb
lods
inc
or
jmp
scas
lret
inc
divl
sub
or
cmp
add
lds
pop
xor
and
dec
adc
loop
jo
ret
test
dec
js
dec
pop
add
pop
jne
mov
push
cs
fnstsw
jne
mov
sbb
sub
mov
in
mov
adc
xor
das
jo
cmpsb
cs
pop
pop
push
into
cmpb
push
push
repnz
adcb
mov
sub
jge
aad
mov
mov
push
aas
stos
sti
mov
dec
or
adc
or
dec
sti
sub
repz
push
inc
imul
mov
inc
or
push
inc
cmpsl
jo
mov
xchg
pop
pop
jne
pop
cmc
sub
push
cmpsb
xor
mov
sahf
fcoml
dec
xor
mov
adc
push
bound
arpl
jmp
outsb
dec
test
bound
mov
cmpsl
jge
xchg
mov
and
pusha
insb
pop
ljmp
out
movsb
sbb
push
int
inc
inc
or
mov
inc
test
pop
in
jbe
mov
xor
xor
sub
bound
jle
dec
inc
jp
lea
rep
fisttpl
ss
push
pop
add
cmp
pop
dec
add
and
xor
add
adc
je
push
lcall
lcall
flds
add
in
mov
inc
push
xchg
pop
push
pop
iret
movsl
test
or
or
mov
dec
or
and
enter
or
repnz
or
repnz
in
add
or
or
fsubp
add
add
sbb
cwtl
push
push
mov
push
rsqrtps
adc
pusha
adc
sub
adc
nop
xchg
out
repnz
adc
ret
jns
cmpsb
adc
adc
adc
and
cltd
adc
sbbb
push
push
push
cs
enter
xor
push
nop
ja
sbb
lcall
sbb
call
iret
sbb
sbb
test
sbb
sahf
ja
je
pop
sbb
or
iret
jmp
jge
sbb
enter
inc
push
pop
cli
jg
cmp
jne
add
add
sub
cmp
sti
sub
movl
dec
jg
pusha
xchg
into
and
jp
inc
lods
std
das
xchg
cmp
add
mov
cmp
je
lcall
out
sub
rol
lea
aad
add
jnp
cmp
mov
repnz
out
xor
xchg
xor
add
call
out
popf
mov
adc
inc
jmp
sub
enter
sbb
xorl
in
enter
cltd
mov
cmpb
sahf
out
out
adc
jb
out
sbb
nop
inc
lcall
jns
push
xor
icebp
seto
pslld
out
std
repnz
repz
std
fdivs
cmpsl
cmpsb
hlt
hlt
rorl
pusha
hlt
fwait
add
push
mov
and
enter
pop
jns
cmp
idivl
cmp
add
dec
push
clc
clc
clc
cltd
jns
mov
stc
lock
and
enter
iret
sti
push
push
and
sbb
stos
cld
cld
mov
fdivr
je
cld
push
setb
xchg
lret
xor
inc
sahf
out
sbb
adc
ret
inc
or
mov
push
in
sbb
lahf
in
cmp
stos
cmpsl
movsb
or
es
in
shll
mov
inc
fsubp
inc
in
scas
and
icebp
inc
mov
sbb
xchg
sti
out
out
sbb
inc
out
outsb
call
add
sub
pop
xchg
xchg
sbb
or
inc
repnz
in
add
in
cli
sbb
dec
push
out
out
out
cltd
leave
and
das
cli
adc
xchg
pop
push
cli
sbb
jmp
cltd
sbbl
imul
jb
stc
xchg
cmpsb
jb
fstpl
div
negl
cmp
pop
fwait
xor
jns
cmp
add
stc
out
clc
push
push
xor
orb
mov
outsl
cld
inc
cld
sbbl
pusha
sbb
add
cmp
and
xlat
lret
dec
call
xor
loop
repnz
in
repnz
imull
mov
mov
out
orb
bound
mov
pop
inc
idivl
inc
mov
and
sbb
dec
push
ljmp
shl
pop
mov
mov
mov
int
insb
out
out
jno
pop
lret
and
and
add
sbb
repnz
mov
pop
dec
pop
and
xchg
cmc
jae
xor
inc
pop
pop
dec
cmc
div
into
add
mov
repnz
push
mov
clc
adc
add
hlt
stc
popa
cmp
mov
lret
and
jno
hlt
pop
and
hlt
push
hlt
or
pushw
dec
scas
mov
hlt
idivl
jo
or
push
sti
lahf
or
adc
ds
or
xor
loope
jmp
adc
gs
scas
xrelease
mov
cmpsb
jb
repz
repz
add
pop
leave
and
push
sbb
jmp
outsb
cmc
mov
xchg
pusha
leave
mov
sub
mov
leave
and
and
add
mov
movsl
mov
icebp
icebp
js
in
rorb
in
xlat
mov
test
push
cmp
mov
sub
cmc
jb
sbb
cmc
add
mov
lock
or
popf
lock
imul
popf
dec
push
jne
push
lock
pop
xor
sbb
scas
lock
mov
ss
ja
inc
imul
out
pop
xor
rol
in
xchg
add
jne
inc
ds
add
sbb
inc
sahf
add
stos
add
loop
mov
add
push
jnp
and
push
insl
add
cmp
inc
in
adc
dec
add
sahf
and
adc
mov
daa
pop
add
psubsb
adc
push
fwait
insl
mov
push
sbb
cmp
sahf
adc
jle
mov
repz
pmaxsw
sbb
repz
sbb
adc
mov
ss
int
adc
pop
std
sbb
jl
out
dec
outsb
rorb
mov
cmp
jnp
mov
das
dec
jl
and
filds
roll
mov
add
mov
and
add
sti
icebp
or
jle
rolb
push
pop
push
sbbl
in
test
xlat
lcall
sbb
sub
std
cmpsb
add
xchg
out
add
sbb
mov
icebp
inc
imul
hlt
xchg
lock
pop
lock
adc
jg
lcall
jge
push
cmp
testb
je
push
dec
inc
or
add
insl
cwtl
mov
or
adc
inc
mov
inc
decl
fs
fdivs
fucomip
in
xor
cmp
mov
mov
and
testb
repz
xor
push
pop
mov
or
add
sub
inc
lea
mov
aas
adcb
or
sub
sbb
cmp
sub
jb
cmpl
imul
neg
pusha
and
mov
rorl
faddl
pushf
idivb
enter
or
out
xlat
push
sbb
push
rep
mov
dec
ljmp
mov
enter
push
push
dec
mov
fidivl
adc
adc
and
sub
sbb
in
inc
adc
adc
in
test
xchg
sub
adc
pop
fadd
cld
add
adc
or
insl
addr16
mov
out
lea
or
add
pop
sbb
das
inc
inc
inc
inc
xor
sbb
cld
pop
cmp
enter
pop
mov
xor
mov
imul
ficoms
and
gs
iret
push
mov
cmpsb
and
push
sub
pop
pusha
in
gs
xor
inc
and
sub
inc
sbb
aam
je
pop
in
dec
add
jnp
sbb
inc
inc
pop
cmp
enter
add
adc
push
rcrl
adc
adc
dec
and
sar
sbb
xor
pop
loope
shlb
scas
add
push
les
adc
and
push
sub
jb
add
and
mov
lods
push
mov
push
lea
mov
popl
adcb
mov
jo
out
out
xchg
xchg
sub
outsb
out
xor
inc
fnstsw
inc
jmp
cmp
jne
orl
add
push
int3
les
jp
dec
addr16
xor
sar
jg
cltd
mov
add
test
mov
sub
fildll
adc
insb
adc
pop
jne
popa
rcr
jl
add
add
lds
push
incl
adc
lret
ss
adc
or
div
adc
fwait
cld
xor
sbb
je
mov
sub
cmp
cld
mov
jmp
cmp
jae
push
enter
movsb
shrb
pop
and
add
dec
test
rclb
inc
popa
aam
add
inc
rcrl
neg
xchg
push
jge
or
test
jne
test
cmp
sub
ret
or
sub
jbe
inc
mulb
scas
cltd
clc
pop
minps
jo
loop
movb
es
stos
mov
or
imul
das
in
rolb
sbb
mov
xchg
rcrb
adcl
std
call
add
jo
pop
and
jmp
push
xor
decl
cmp
insl
popa
push
sub
add
and
cli
cld
fisttpl
add
cmp
sti
out
lea
loopne
rorb
outsb
pop
mov
neg
mov
cmp
jne
mov
push
cmp
jne
cmp
int
es
jne
call
mov
or
lcall
inc
out
stc
jns
jmp
std
std
jmp
int3
nop
xor
fildl
mov
adc
inc
or
jb
shrl
shr
repnz
dec
shll
lock
mov
mov
and
repz
mov
cld
ret
leave
jns
adc
into
cmp
inc
pusha
push
sti
adc
jnp
inc
fwait
std
add
add
or
or
push
leave
and
or
xor
add
or
mov
adc
adc
sbbl
or
sahf
int
lret
xor
pop
rclb
rorb
aaa
adc
adc
add
sbb
fimull
inc
mov
and
jnp
dec
jne
jo
sub
es
shll
inc
divl
push
push
rolb
fcoms
clc
fidivrl
push
jmp
mov
rcll
or
out
mov
inc
inc
cmp
push
push
jmp
sbb
ja
push
dec
outsb
out
jns
mov
dec
mov
movsb
mov
lahf
scas
mov
lcall
sbb
ja
inc
push
movb
sbbb
and
pop
daa
rorl
sbb
inc
dec
loop
dec
cmp
push
shrb
mov
inc
add
mov
lock
jmp
xor
mov
lret
clc
lock
mov
test
stc
adc
pop
imul
stos
add
testb
insb
adcl
sbb
out
out
sbb
pop
das
enter
or
mov
adc
push
dec
jne
mov
mov
popf
fdivrl
inc
adc
inc
or
ds
shrb
aam
mov
mov
into
push
and
xor
dec
cmp
roll
movb
cmp
andb
stc
mov
push
pop
and
pop
pop
lods
cmovs
scas
push
pop
test
sbb
movl
ljmp
xchg
cmp
jb
rep
jmp
imul
cmp
or
fcoml
dec
int3
add
xor
jnp
repnz
aam
pop
call
push
frstor
mov
and
int
or
scas
adc
stc
rcrb
lea
dec
add
in
dec
movl
mov
add
out
out
mov
cmpb
repz
inc
mov
mov
call
iret
repz
lock
hlt
callw
clc
clc
cld
or
or
lock
fldcw
je
imul
push
call
sub
nop
inc
pop
sti
push
andl
inc
and
mov
ret
push
lea
jl
cld
or
repnz
cld
out
pusha
das
neg
adc
xchg
into
lea
xchg
daa
stc
sub
pop
nop
je
cwtl
push
sarb
jl
mov
add
jbe
sub
jns
push
out
push
add
lods
dec
dec
addr16
add
les
mov
iret
repz
sbb
and
xor
iret
repz
inc
push
das
aaa
sbb
sbb
repz
adc
adc
repz
repz
or
add
dec
enter
or
cmpsb
and
aaa
push
add
pop
sub
add
or
test
jbe
push
xor
mov
dec
jg
cmp
decl
jne,pn
pop
pop
roll
loop
or
cmp
mov
cmp
jbe
push
cltd
pop
idiv
add
mov
pusha
or
xor
std
push
adc
ja
xchg
aaa
dec
mov
mov
mov
dec
aam
bnd
cmp
jae
nop
or
sub
mov
jae
fimuls
push
mov
dec
sarb
add
sub
faddl
pop
pop
adc
fwait
repnz
mov
sbb
mov
lret
dec
sbb
add
test
add
mov
sbb
dec
dec
je
mov
push
push
mov
or
mov
xchg
int
scas
imul
xchg
mov
xor
pop
and
or
dec
repz
push
mov
inc
and
sbb
add
sbb
js
mov
add
xchg
adc
add
lock
push
adc
xor
push
dec
cmpsl
aam
push
adc
cmpsl
jge
int
dec
jp
push
adc
fimull
loopne
sbb
xchg
mov
lret
jmp
cmp
leave
mov
jecxz
fsubl
aas
jge
loopne
cmp
push
push
cltd
pop
idiv
xor
fmuls
inc
fisttpl
pop
out
cmp
and
cmpsl
and
fmull
pop
add
or
add
sub
fidivrl
adc
fs
jmp
jl
movsl
lods
pop
sub
adc
imul
mov
pop
and
jecxz
repnz
xchg
in
jl
cmp
add
mov
pop
pop
mov
pop
incb
inc
jns
adc
cmp
scas
mov
add
cs
sti
cmp
rcrl
inc
dec
push
negb
cmp
add
in
xor
add
xchg
and
cmp
add
and
pop
xchg
push
cmp
les
jmp
jge
pop
je
sbb
jno
out
cmp
jle
mov
call
jno
mov
mov
dec
rcrl
pop
je
jp
sub
rorl
mov
mov
out
inc
dec
sub
mov
lahf
pop
pop
mov
cmovne
or
fisttps
push
in
or
ret
jno
inc
mov
push
aaa
adcl
ss
cltd
cmp
loopne
mov
stc
pop
push
adc
push
adc
xchg
inc
jmp
push
pushf
pop
pop
pop
addl
mov
push
mov
mov
imul
adc
push
movsb
xchg
aaa
outsb
and
pusha
movsl
shll
cmp
or
push
in
mov
add
push
data16
ja
and
adc
inc
adc
or
cmp
or
add
call
in
push
imul
mov
mov
dec
es
ljmp
xchg
imul
mov
fwait
cmp
clc
push
pop
or
loop
fcomps
cld
dec
sbb
dec
js
mov
mov
icebp
imul
fadds
and
out
xor
decl
inc
jg
jbe
cmc
dec
xor
gs
push
xchg
mov
stos
and
das
jo
cld
fisubl
mov
inc
inc
cmp
je
push
sub
jbe
gs
cli
orb
adc
add
fidivrl
dec
je
and
rorb
popa
mov
or
outsb
add
pushf
lock
mov
les
mov
incl
inc
pusha
pusha
in
push
push
mov
push
inc
sbb
xchg
and
and
jno
pop
or
insl
sub
bound
pop
mov
sbb
or
xchg
sbb
lret
dec
push
mov
dec
add
add
inc
cmp
push
std
fisttpl
jo
add
test
pop
pop
dec
xchg
adc
test
xor
rorl
cmp
mov
into
sarl
mov
fsubrp
jne
int3
or
jno
add
dec
lock
mov
mov
int
sub
enter
imulb
pusha
shll
cmp
cs
mov
mov
cmovs
add
leave
mov
inc
sbb
mov
adc
pusha
lock
pop
fcom
scas
mov
repnz
add
roll
pushf
mov
shlb
jne
jmp
dec
or
in
inc
sub
das
dec
mov
push
dec
sbb
into
push
mull
adc
adc
ret
and
cmp
mov
push
mov
ret
addl
sub
aam
push
es
push
push
bound
sbb
ret
loop
test
adc
add
sub
mov
jp
lahf
jge
outsb
jns
and
jne
push
sub
jo
sub
call
sbb
push
push
jo
bound
or
rcrl
int3
and
adc
pop
fiadds
jmp
adc
or
les
or
inc
inc
int3
mov
lcall
testl
imul
shlb
out
sub
cltd
pop
stos
sbb
push
dec
mov
lock
and
mov
es
inc
lea
aas
pop
cli
imul
mov
pop
das
repnz
dec
test
mov
rorb
leave
jne
inc
jb
sbb
in
addr16
and
pop
push
leave
pop
dec
jnp
rcr
out
push
xor
adc
inc
push
dec
data16
push
or
and
ret
repz
mov
pop
mov
jb
fsubl
ret
in
add
sbb
jne
fchs
and
adc
jnp
stc
push
imul
add
mov
mov
fisttps
mov
arpl
jmp
pop
arpl
xchg
push
sub
gs
fs
loope
xor
mov
nop
iret
add
ss
lds
mov
lock
nop
cmp
pop
sbb
cld
adc
sub
push
mov
icebp
loop
les
ror
mov
sub
in
push
mov
addb
into
jbe
rorb
movsb
jbe
pop
repnz
jbe
push
add
mov
and
pop
mov
aas
jecxz
sti
rclb
xchg
andl
xchg
bound
lods
push
xorb
jne
or
subl
in
and
add
lock
test
or
into
gs
clc
rclb
xor
mov
popf
sahf
enter
or
or
dec
adc
sarl
jae
push
int3
inc
push
js
imul
or
mov
jmp
popa
or
mov
mov
adc
dec
lcall
std
data16
pusha
inc
sbb
or
jmp
push
xor
dec
test
or
adc
push
stos
fwait
rorb
sub
adc
push
sbb
pop
movsl
mov
mov
push
or
jl
sbb
imul
cmp
cltd
mov
cmp
sub
outsb
pop
into
inc
sbb
adc
sahf
inc
orb
jge
cmp
mov
adc
inc
ret
mov
lret
mov
nop
inc
mov
sbb
ja
test
mov
sarl
push
fisttpl
loopne
xor
ret
mov
cmpsb
dec
add
dec
xchg
jle
add
or
repnz
inc
xchg
loope
aaa
xchg
pop
dec
xchg
jg
adc
in
pop
pop
sbbl
push
xchg
cmp
cld
mov
or
fstp
out
push
pop
xor
rcrb
lea
xor
push
and
add
roll
in
nop
xor
push
cmp
rcl
aam
inc
aam
dec
dec
sbb
sub
sbbl
mov
or
incl
sub
push
gs
sub
shrl
fbld
gs
push
inc
imul
inc
lods
popa
ljmp
push
pop
cmpsl
push
xor
icebp
mov
xor
mov
bound
mov
ja
inc
pusha
pop
adc
adc
pop
fiadds
sahf
rcrb
jmp
inc
loop
gs
incb
mov
dec
clc
test
mov
lea
neg
mov
cmc
sbb
cli
or
add
jmp
xor
test
or
push
cld
jb
fistl
shll
jb
lahf
mov
cld
pop
mov
orb
pop
inc
sub
aaa
or
or
ret
adc
shlb
jne
insb
ret
fdiv
or
add
push
sub
cmp
test
inc
dec
lods
imul
adc
test
sarb
add
sbb
data16
lret
xchg
mov
adc
add
insb
mov
and
xor
xor
and
enter
movsb
gs
push
and
adc
add
test
rcrl
xchg
or
jae
lods
lds
jae
fdiv
sub
mov
jb
xchg
adc
pusha
ljmp
sub
add
jbe
sbb
pop
mov
addb
cmp
clc
pop
ljmp
adc
xor
inc
and
and
sub
or
xor
movl
or
xchg
mov
sbb
lea
add
dec
adc
push
and
out
enter
add
fdiv
mov
sar
dec
xor
fldt
sub
mov
icebp
lea
push
adc
fldt
push
push
pop
dec
ss
addb
test
lcall
mov
and
inc
ret
es
loopne
add
jbe
xor
xor
pop
xchg
pop
add
lahf
xchg
jne
push
pop
push
sub
dec
addr16
inc
adc
push
add
push
enter
jmp
pop
movsb
sbb
ret
icebp
jae
jo
or
nop
orb
lcall
xchg
xor
xor
mov
gs
xchg
sub
das
daa
cmpsb
jbe
pop
test
cmpsb
mov
cwtl
arpl
cmp
or
loopne
push
pop
adc
add
rol
inc
decb
daa
leave
sub
std
add
cmpl
clc
add
test
adc
sub
add
and
out
or
add
fnsave
sub
adc
lahf
sbb
shl
into
and
aad
jb
pop
loopne
fwait
aas
adc
imul
jo
mov
mov
je
sub
pushf
or
push
pusha
mov
popa
adc
ret
fists
scas
test
xor
mov
scas
mov
or
jnp
je
loopne
jl
add
iret
xor
push
dec
or
add
pushf
testb
test
fs
call
or
sti
adc
dec
inc
pop
push
lea
dec
xchg
pushf
mov
mov
shrb
iret
adc
fiaddl
adc
inc
jg
push
cmp
into
dec
adc
cmp
and
mov
push
scas
xor
ret
inc
add
lock
insb
and
imul
push
add
sbb
test
mov
das
and
xor
pop
or
or
je
pusha
mov
rorl
sbbl
adc
xor
mov
jp
shll
push
or
push
lods
lret
test
test
les
sub
imull
sub
adc
gs
and
mov
in
or
sbb
sbb
repz
adc
popl
btc
stc
add
inc
mov
ficoms
or
movl
cmp
xor
sarb
mov
mov
mov
fadd
mov
dec
adc
jae
sahf
sub
push
dec
loopne
loopne
sbbb
inc
sub
or
orl
dec
sub
or
in
adc
or
xchg
ja
stc
cmpsl
add
adc
or
hlt
xorb
inc
or
xchg
repz
bound
shl
and
loope
and
stos
add
divl
pusha
mov
sub
mov
roll
mov
inc
dec
jne
lea
cld
cmp
or
ret
shlb
les
inc
call
bound
hlt
jb
sbb
add
and
out
push
movb
and
lea
adc
bound
push
sub
dec
xchg
or
mov
inc
or
adc
fnstsw
push
repnz
push
fisubs
and
sub
pop
loopne
imul
push
inc
inc
outsb
inc
cld
popf
dec
loopne
dec
pop
and
int
cld
pop
mov
push
sbb
jge
in
jmp
and
je
and
sbb
adc
xchg
test
jmp
mov
call
lods
hlt
pop
mov
mov
test
cmp
stos
lcall
rol
cmpsl
sar
add
jmp
cmp
push
and
and
xor
je
inc
sahf
shl
inc
ret
pop
and
adc
loopne
ja
mov
xchg
inc
jo
jg
sub
test
ja
test
and
adc
scas
pop
push
mov
mov
cmp
sbb
dec
push
mov
jno
pop
push
jns
mov
dec
inc
mov
aas
inc
loop
push
clc
pop
cmp
mov
or
ret
mov
outsb
pop
lock
cmp
sub
cmpsb
push
sbb
int3
mov
pop
ljmp
adc
in
xor
shr
fldt
push
cmpsl
or
stos
enter
push
add
das
adc
or
jae
icebp
or
cmp
mov
push
and
fldl
test
pusha
cmp
pop
xchg
lock
jle
cmp
xor
or
movsl
fnsave
push
jmp
aad
movl
push
and
xor
cli
stos
dec
lea
push
inc
rolb
lds
cmp
add
push
call
pop
lcall
mov
inc
xor
cmc
inc
pop
leave
inc
jne
ljmp
imul
add
and
jmp
mov
into
sub
jb
fs
addb
or
lcall
mov
in
inc
bnd
sti
xchg
sbbb
inc
mov
loopne
andb
clc
jb
mov
xor
mov
mov
inc
scas
xor
out
adc
mov
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
cmp
pop
mov
es
sbb
ja
divb
outsl
lock
sbb
rorl
inc
dec
jne
data16
sahf
sub
or
add
or
gs
inc
mov
gs
test
xor
jmp
pusha
cltd
daa
stos
add
xchg
add
or
shl
call
sbbb
xchg
mov
sub
loop
push
and
and
jp
punpcklbw
xchg
sbb
pop
jno
add
jmp
lcall
dec
int
cs
add
pop
adc
sub
xlat
cli
repnz
add
xchg
in
add
and
cmp
andl
mov
rolb
adc
loopne
or
pop
sub
mov
call
or
mov
jmp
lret
add
subb
mul
jmp
out
and
sbb
push
ljmp
xchg
fisttpll
and
cltd
imul
popl
leave
cld
fisttpl
inc
mov
std
and
jmp
mov
mov
lret
jnp
sub
cmp
es
dec
jmp
test
pop
sbb
pop
adc
mov
ds
cltd
sub
dec
not
pushf
sbb
int3
call
sbb
sub
or
and
adc
sub
or
xchg
pop
cmp
aam
pop
push
insl
jo
cmpsb
pushw
cwtl
sub
lret
rcr
inc
leave
jnp
aaa
out
jle
in
stc
mov
or
push
cmpl
add
add
cmp
sahf
inc
pop
dec
pusha
mov
sub
jne
add
xor
in
fldl
popa
mov
mov
mov
mov
mov
mov
lea
jnp
mov
aaa
xorl
aam
jnp
or
pop
out
ja
adc
movsl
sub
test
jg
sbb
xor
inc
sub
or
xor
pop
pop
mov
dec
inc
fimull
aas
hlt
sub
imul
in
clc
xchg
dec
js
mov
jbe
and
ret
dec
test
jle
sbb
jo
mov
fs
add
add
ds
cltd
inc
add
stos
jmp
push
ficoms
inc
or
in
inc
pop
rcll
mov
and
push
cmp
mov
lock
rol
cmp
daa
mov
pop
lret
adc
pop
aas
or
mov
sbb
lret
inc
mov
mov
out
add
cmc
leave
push
xor
je
pop
xlat
add
ror
sti
popa
loopne
out
call
ss
testb
add
sub
test
nop
mov
mov
outsb
aas
push
mov
add
pop
pop
pop
sarb
bound
dec
push
add
cmp
mov
inc
movsb
cwtl
and
mov
sbb
sbb
pop
push
sti
lret
insb
push
jp
fmul
cld
push
jo
sbb
mov
ret
or
inc
mov
adc
lods
add
movsb
sbb
mov
cmp
addb
mov
and
jae
bound
push
cmp
push
aaa
ret
outsl
mov
xor
sub
xchg
ret
mov
xchg
icebp
dec
push
rclb
cmp
movsb
pushf
popf
adc
sbb
dec
mov
jmp
mov
xor
not
les
push
mov
xchg
xorb
in
push
push
jmp
mov
inc
and
jb
pop
rcrb
sub
cmp
jb
pop
inc
inc
dec
sbb
xchg
and
test
push
daa
jle
adc
adc
push
add
mov
scas
iret
jnp
jbe
and
pop
cmp
je
jle
or
scas
jge
dec
mov
adc
jge
popa
inc
xor
addl
scas
popa
lahf
pop
add
fucom
pushf
pop
movsb
lret
mov
jb
sbb
hlt
out
cmpl
cmpsb
cmp
xchg
es
adc
mov
and
daa
test
dec
jno,pt
push
int3
insb
lcall
out
scas
dec
adc
or
mov
jge
xlat
pop
out
mov
and
pop
pop
iret
loopne
bound
ret
jne
rcll
push
xchg
mov
pop
inc
mov
addl
add
or
ja
movsb
jp
and
sub
andl
mov
mov
adcb
mov
inc
stos
push
xor
jle
mov
rorb
or
fcoml
mov
aam
sarb
clc
or
in
popf
enter
shrb
stc
rep
mov
fimuls
rolb
call
js
dec
cld
adc
sub
aam
mov
mov
andnps
fcomps
pop
jno
mov
add
add
ret
jne
in
cld
add
mov
jge
dec
bound
ret
fists
lahf
test
jp
dec
xchg
add
insb
or
jmp
int
inc
call
add
adc
and
push
incl
jbe
loop
mov
pop
mov
aas
ret
in
or
pop
jns
pushf
sbbb
je
out
fisttpl
xchg
pop
push
push
out
sahf
dec
inc
cmp
sub
outsb
add
fsts
test
jns
jmp
pop
pop
enter
adc
pop
out
in
xchg
inc
adc
pop
nop
and
dec
push
jo
daa
sub
mov
les
repz
push
int3
push
aam
in
add
jecxz
hlt
pop
pop
pop
ds
int
inc
and
sub
cmp
or
and
clc
or
or
sbb
push
cmpsl
loope
test
push
push
cmp
addb
bound
mov
jmp
inc
jnp
call
movl
mov
cld
cli
dec
movsb
sub
mov
lret
jne
jle
add
dec
cmp
subb
jge
inc
mov
mull
mov
test
mov
inc
adc
pop
push
or
adc
es
adc
in
adc
pop
dec
cli
sbb
add
add
orl
jg
addl
lea
or
imul
hlt
mov
dec
sbb
cmc
mov
daa
fwait
xor
daa
and
dec
pop
mov
push
enter
or
testl
sub
insb
popf
dec
dec
adc
mov
jae
dec
mov
andl
jl
xchg
xor
push
jge
add
dec
imul
sbb
pop
je
rclb
rcll
xchg
data16
add
jne
or
push
adc
and
ret
mov
mov
sbb
jbe
push
push
jno
inc
bound
xor
lock
loope
dec
or
push
xchg
jle
or
sub
inc
imul
getsec
out
adc
pop
sbb
outsl
push
xor
push
xor
aam
mov
ret
lds
shr
xor
mov
sarl
test
ja
enter
xchg
call
rorl
pop
sub
pop
sbb
das
push
mov
les
jno
sbb
hlt
jecxz
adc
cmpsl
mov
sub
out
sbb
and
mov
or
shl
sub
jl
ljmp
mov
cmp
mov
dec
sub
inc
sbb
loope
or
adc
adc
repnz
dec
popa
add
sbb
adc
loopne
add
lea
inc
test
jg
dec
sub
lea
inc
cmp
push
test
cs
push
push
cmc
mov
pop
push
pop
std
dec
push
adc
int3
push
push
push
push
das
ss
inc
lcall
or
sub
lock
out
into
jp
sub
lret
pop
out
adc
dec
inc
in
add
shrb
sub
ficomps
mov
rclb
sub
lock
xor
lret
or
test
mov
pop
or
adc
and
add
jecxz
dec
xchg
pusha
ss
push
xchg
cmp
lahf
and
fwait
adc
or
mov
jbe
push
inc
and
and
shrb
push
ficoml
inc
mov
jno
mov
cmp
stos
std
adc
pop
divl
in
adc
loop
push
or
into
sbb
clc
dec
xchg
movsb
xor
pop
pop
jle
push
push
jne
mov
and
dec
ljmp
jns
fldl
push
sub
loopne
xchg
shl
add
loope
jp
mov
and
mov
scas
adcb
imul
and
mov
push
and
outsb
mov
dec
jmp
cmp
add
add
mov
lea
sti
jl
or
cs
lret
clc
aam
fadd
not
mov
jne
xor
inc
jecxz
or
xchg
mov
mov
jo
dec
loope
cmpsl
pop
and
jl
push
mov
test
in
or
cld
cmp
pushf
or
inc
push
sbbb
jnp
push
xorb
cld
jbe
icebp
lea
cs
ja
mov
movsbl
shlb
adc
je
fnstcw
add
sar
pop
mov
mov
xchg
mov
cmp
adc
orl
lea
jb
or
aam
clc
stos
clc
push
pushf
fsubs
int3
lret
push
dec
or
or
add
jle,pt
dec
inc
pop
adc
pop
pop
cs
mov
add
mov
or
inc
or
cmpsl
cmp
pop
cld
adc
out
cmp
mov
pop
or
imul
lret
or
mov
mov
ja
movsl
mov
mov
sahf
dec
enter
or
adc
movsl
hlt
hlt
stc
out
mov
in
je
or
inc
insb
je
and
sbb
mov
test
ret
insb
nop
pusha
in
sbb
sub
adc
jnp
loop
and
pop
or
xor
mov
movb
dec
xor
movsl
pop
add
out
sbb
or
imul
outsl
cmc
jne
pushf
data16
sbb
pop
xlat
inc
jl
xor
movsb
mov
sbb
mov
pop
lret
fs
lcall
sbb
sbb
jnp
mov
je
pop
push
or
in
stos
mov
add
mov
ret
add
hlt
sbb
les
cld
jp
mov
and
push
ds
addr16
push
jae
mov
test
cmp
in
xor
pop
je
cwtl
das
ret
loope
ja
ret
adcl
pop
or
mov
sbb
dec
and
in
dec
add
mov
outsb
and
adc
fstps
sub
mov
push
mov
add
push
insl
cmp
cmp
scas
jl
xor
ds
mul
sub
xor
adc
mulb
push
push
movsb
add
mov
jnp
aas
cmpsl
xor
mov
sub
mov
pushl
xchg
xor
sbb
daa
jge
lcall
mov
inc
mov
dec
mov
pop
je
cmpsb
xor
push
sbb
xor
add
pop
cmp
adc
cmp
ret
out
movsl
sbb
icebp
push
fsubrs
sub
gs
add
add
into
add
or
mov
scas
push
or
repnz
outsb
je
test
outsb
jp
jns
inc
je
aas
add
or
xchg
addl
mov
push
pop
movsb
fimuls
je
add
adc
mov
xorb
sbb
or
addb
rcr
stos
add
push
add
xor
ret
pop
pop
mov
jne
out
jge
mov
jmp
cmp
jle
insl
cmpl
incl
outsl
loopne
xchg
test
mov
jbe
pop
xor
jl
call
mov
adc
dec
adc
mov
mov
lea
mov
sti
andl
test
jo
jecxz
lea
stc
lcall
pop
test
in
push
jo
sbb
dec
adc
icebp
pop
cmpb
jne
and
ds
adcl
dec
push
push
or
jne
mov
cmpsl
dec
pop
out
addr16
decb
mov
std
inc
daa
add
sub
adc
push
cmpsl
xor
int3
xor
sbb
push
sub
adc
inc
cmp
jne
push
sbb
add
adc
pop
aaa
add
or
aas
insb
aaa
int3
je
cltd
sub
sub
jl
sub
cli
lds
int3
in
pop
sbb
test
jne
jge
inc
sbb
dec
test
pop
mov
or
jne
and
ficomps
testl
xor
aas
nop
clc
sarl
cltd
push
xchg
lds
adc
cmp
push
nop
xchg
clc
sahf
add
mov
dec
jmp
pop
xchg
sub
inc
cmp
ljmp
or
into
addb
xlat
pop
dec
shlb
xor
ss
sbb
or
or
inc
inc
mov
outsl
pop
dec
repz
sbb
in
je
gs
mov
test
sub
push
jmp
sub
icebp
dec
orb
jmp
test
cli
and
mov
cltd
push
hlt
push
cld
sub
sub
pop
rcrb
push
jp
outsb
xlat
mov
cmp
in
fdivrl
lea
xchg
add
jns
cli
adc
pop
mov
dec
sbbl
pusha
dec
push
jne,pn
jno
push
add
push
aaa
cmp
call
add
pushf
push
shrl
add
popa
jle
sbb
mov
test
mov
xlat
sub
pop
jg
ljmp
xchg
push
and
cmp
add
jnp
das
or
les
icebp
sti
and
adc
movsl
daa
pop
mov
mov
mov
ret
fisubrl
movsb
cmp
add
cmp
push
mov
nop
mov
gs
cmp
push
bound
mov
add
addr16
add
fs
adc
jno
pusha
loope
iret
lret
and
cmp
sbb
xchg
rcrb
andb
testb
xchg
jo
and
add
sbbb
aaa
add
xor
mov
pop
mov
jne
lea
jl
jecxz
mov
sbb
je
test
movsl
mov
rolb
ret
andl
xchg
sub
pop
mov
cmpl
fs
sbb
testb
or
testl
pop
push
push
cwtl
ret
jne
push
aas
out
out
mov
mov
es
ret
pop
cli
nop
daa
inc
mov
push
sub
add
jmp
xor
cmp
push
mov
outsb
push
xchg
adc
jecxz
jne
push
test
orl
sar
add
add
arpl
inc
repz
or
lds
clc
pop
jb
adc
add
lea
add
adc
js
adc
sub
mov
mov
push
or
adc
enter
mov
cmp
mov
jl
push
adc
mov
inc
xchg
incl
sub
xchg
clc
push
and
shr
mov
imul
or
inc
and
dec
or
out
pusha
and
bound
mov
lea
mov
pop
mov
nop
rolb
dec
dec
jne
sar
dec
cmp
jbe
push
pop
outsl
lahf
rclb
cmp
jne
addb
dec
adc
dec
shr
lea
not
and
decb
jne
sub
aad
sbb
lea
xor
mov
push
pop
add
push
stos
xor
ljmp
clc
dec
push
or
push
sub
jg
movsb
mov
jecxz
sti
mov
shlb
and
sti
add
add
add
dec
pop
cmp
ficoms
mov
imul
sbb
popf
adcb
fsts
jno
mov
shr
not
sbb
shll
pop
dec
add
xor
mov
loopne
mov
pop
lock
stc
xor
dec
add
dec
lret
push
push
mov
adc
inc
jb
push
mov
sub
faddp
xchg
dec
lock
int3
inc
push
pop
dec
or
adc
mov
mov
inc
mov
mov
mov
lock
push
or
pop
mov
das
dec
or
jmp
dec
adc
cmp
mov
or
cltd
ficompl
fwait
inc
xor
push
or
dec
repz
add
and
test
xor
mov
loope
add
scas
jp
fistps
push
push
call
aas
gs
push
or
jle
andl
iret
push
decb
adc
inc
mov
pusha
add
and
pushl
push
push
jp
movsb
dec
mov
inc
orl
fsubr
in
push
mov
push
enter
dec
adc
std
inc
js
dec
in
push
cmp
push
insl
or
mov
loopne
sbb
mov
mov
mov
pop
dec
jo
xchg
jne
xchg
push
inc
dec
push
loopne
loope
dec
call
sbb
outsb
add
adc
stc
negb
les
inc
and
int3
in
adc
adc
incb
push
xor
or
adc
sti
jae
sahf
int
jmp
orl
or
xor
xor
and
push
and
shlb
popl
ss
inc
ljmp
in
rorb
pop
outsl
xchg
int3
imul
jne
gs
mov
adc
pop
pusha
gs
negb
xor
repnz
sub
adc
mov
test
call
iret
shr
mov
std
cmpl
orl
or
adc
sti
out
imul
inc
cld
lock
call
mov
jne
je
clc
add
clc
dec
and
add
jo
jo
sub
fs
inc
arpl
mov
pop
mov
mov
lock
pop
jge
fists
or
lds
not
stos
xchg
add
and
sti
or
or
adc
dec
repz
xlat
sub
pop
shr
xchg
test
jp
mov
jo
cmp
push
je
dec
scas
rclb
jle
mov
daa
jl
fld
xchg
fmuls
cmpsb
stos
lret
sbb
dec
mov
int3
push
dec
add
movsb
pop
mov
pop
inc
add
xor
clc
shr
xchg
dec
add
loopne
out
test
nop
dec
or
jae
add
push
jns
and
into
add
inc
sub
pushl
stos
movsl
adc
pushf
sar
dec
mov
cs
fidivrs
fstpl
lea
xor
jg
or
xor
shll
dec
pop
pop
push
imul
or
adc
js
je
dec
data16
and
js
rclb
test
iret
adc
pop
dec
mov
inc
insb
xor
xorb
sbb
sub
subb
xchg
das
mov
jle
imul
pop
xor
push
sar
dec
jp
jo
xor
movsb
pop
imul
cmp
cmp
and
cmp
xor
addr16
je
fisttps
push
in
mov
add
fcomp
fbstp
ja
dec
int3
fcmovb
add
adc
fimull
out
sbb
or
mov
or
ret
lods
bnd
mov
mov
push
cmp
lods
push
sub
out
cmp
push
mov
or
lods
dec
mov
sbbb
mov
jp
insb
push
push
js
xlat
add
loope
inc
insb
loop
cmp
push
push
push
jge
push
push
jo
or
out
adc
cmpb
cld
in
or
stos
rolb
out
fldcw
push
push
xchg
js
nop
cmp
and
decb
xlat
push
ret
adc
and
addb
push
jle
cwtl
jnp
jg
sbb
jne
out
inc
test
jnp
add
je
mov
xor
aaa
arpl
cwtl
lods
sti
add
mov
and
imul
sub
adc
push
std
fimull
jle
pushl
sbb
in
cli
jle
xchg
xchg
inc
mov
push
sbb
sub
xchg
mov
push
and
stos
ljmp
repz
insl
out
mov
mov
and
jne
mov
push
pop
outsb
js
or
leave
inc
push
pushf
mov
sub
push
and
icebp
sbb
or
xchg
dec
cmp
dec
pop
xchg
sbb
and
push
ror
push
repnz
loop
inc
and
mov
shrl
jne
in
lock
jmp
jp
int3
or
pusha
and
addr16
bound
dec
push
and
push
clc
into
xor
dec
je
inc
imul
xor
push
or
xor
adc
pop
xor
sub
jge
scas
ret
jle
cmc
push
or
dec
cld
or
mov
or
sbb
inc
mov
out
or
nop
dec
mov
add
ja
call
lods
sahf
aad
shrl
push
lea
mov
sbbb
sbb
sbb
push
call
and
inc
add
rcll
out
and
sbb
loopne
daa
xchg
cld
jno
fbstp
or
xorl
jp
xor
imul
mov
loopne
fs
sbb
push
rclb
inc
cwtl
jp
mov
push
sub
add
dec
bound
out
test
jno
and
movb
adc
es
pop
repz
sbbl
xchg
cld
in
cmp
cmp
sub
add
push
mov
repz
insb
cltd
jmp
ret
mov
and
mov
fcoms
int3
or
xchg
or
movsb
pop
mov
push
in
into
or
xor
insb
adc
jp
daa
cmp
lcall
pop
fcomps
cmp
lahf
pushl
lds
adc
push
in
pop
ret
divl
pop
outsl
or
push
or
std
pop
and
jmp
rcrl
inc
sbbb
mov
les
sbbl
inc
push
xor
mov
and
inc
jge
cmpsl
pop
jl
xchg
hlt
or
adc
inc
hlt
and
outsb
data16
insb
int3
push
mov
adc
inc
or
je
sbb
inc
jmp
insb
xor
sub
test
scas
lcall
sbb
adc
outsl
sub
cmpl
pop
pop
push
jg
xchg
ljmp
flds
jg
xor
or
lock
jmp
dec
insb
mov
or
shll
jns
adc
test
cmp
inc
aas
xor
shll
imul
and
pushf
inc
and
add
add
sbb
push
es
aam
sub
test
and
and
mov
sbb
sarb
mov
loop
call
jns
jns
in
int3
test
jns
xor
je
cmp
mov
into
push
mov
call
movzbl
rolb
clc
test
mov
or
xor
sub
dec
mov
xchg
jae
mov
inc
push
sbb
sarb
adc
xor
in
xlat
add
xchg
fisubrl
pop
add
arpl
stos
outsl
sbb
xchg
arpl
outsb
push
fsubrl
gs
mov
push
pop
insl
rorb
cmp
xchg
pushf
jp
leave
jp
xchg
add
and
stos
sbb
push
push
jo
icebp
push
ja
cmp
inc
pushf
fistpll
insb
jne
push
add
sbb
and
pop
sbb
jg
adc
pop
inc
cmp
xor
cmp
leave
inc
or
push
pop
sub
les
add
push
pop
std
pop
dec
movsl
sbb
mov
rol
ret
in
shll
lea
test
dec
leave
je
push
leave
orl
and
mov
ds
lret
lock
aaa
cmc
dec
and
inc
dec
call
enter
xchg
js
nop
push
and
call
add
js
js
negb
lret
and
or
pop
xor
inc
call
or
inc
orl
in
iret
out
add
mov
mov
ja
stc
or
mov
push
test
mov
movsb
roll
cmp
jb
in
je
push
or
xchg
inc
push
lods
inc
sub
in
lods
add
inc
sahf
rclb
and
and
adc
push
jb
lods
mov
ret
nop
sub
mov
xor
in
inc
leave
add
in
pop
enter
test
adc
and
mov
test
dec
pop
aas
mov
cld
enter
cmp
mov
pop
adc
or
fmuls
or
xor
into
sub
cmp
mov
inc
movsb
loop
ja
sbb
adc
cmp
push
or
lea
ljmp
add
xor
lret
pop
xchg
test
mov
jge
pop
enter
ret
xchg
or
sub
pop
mov
fdivl
jmp
mov
adc
sbb
mov
lret
or
inc
push
andl
adc
pop
lock
lods
push
cld
mov
xor
mov
loop
inc
sbb
out
add
sub
es
adc
mov
jl
cmp
shr
lds
mov
pop
test
aaa
cmp
add
add
and
mov
es
jne
or
je
out
insb
imul
push
mov
xchg
add
xor
adc
xchg
mov
add
add
xchg
test
xchg
push
je
movsl
mov
add
inc
mov
repnz
dec
add
mov
add
xor
testb
push
ljmp
fiadds
mov
sbb
and
adc
adc
je
aaa
std
rorl
sub
jne
add
hlt
jp
sbb
inc
cld
push
or
fadds
add
mov
nop
cmp
rcl
add
imul
or
pop
or
lret
xchg
hlt
aaa
or
push
or
shll
enter
stos
jbe
and
cmp
xchg
loop
adc
sub
sub
sub
clc
shll
sti
cld
std
cwtl
cmp
dec
inc
and
adc
xor
dec
and
lahf
push
or
cmp
cmpsb
popa
pop
loop
inc
lret
je
pop
or
push
sbb
add
in
cmp
adc
rcrl
int
sbb
outsb
mov
ljmp
mov
je
dec
je
push
or
mov
sub
or
dec
fstpl
jae
mov
push
fldl
or
fldl
or
xlat
push
dec
sub
dec
mov
and
sbbl
pop
push
leave
pop
jmp
jo
insl
neg
outsb
push
dec
cmp
mov
sbb
pop
pop
sub
das
sub
xchg
dec
je
add
and
sbb
je
or
sti
fldenv
lcall
xchg
insl
ljmp
jae
lahf
lret
pop
push
fnstcw
sbb
cmp
sub
sbb
stc
fwait
add
mov
jmp
jns
outsl
or
xchg
adc
rorb
push
test
xlat
inc
push
in
lret
loopne
adc
faddl
push
imul
cmp
push
push
xchg
mov
psrlq
push
mov
aaa
jne
das
and
inc
lock
pop
xchg
nop
cmp
jns
lods
mov
dec
lret
xor
sahf
out
sub
loopne
andl
sahf
loope
mov
rcrb
push
mov
inc
or
xchg
js
mov
dec
sbb
xor
lock
push
imul
push
xchg
jmp
jecxz
sub
sbb
jl
pop
push
inc
or
lods
cmp
addr16
jp
push
push
xchg
jmp
inc
insl
sub
faddl
imul
mov
or
aas
push
call
push
clc
push
fmull
xchg
inc
jp
xchg
xchg
inc
aaa
mov
sub
push
push
adcl
in
mov
sub
insl
or
adcb
and
add
or
mov
addl
adc
gs
addb
test
xlat
jp
cmc
sub
ss
adc
lods
adc
dec
scas
xchg
mov
dec
jecxz
dec
or
mov
lea
mov
in
mov
inc
lods
add
and
lods
std
mov
inc
gs
push
pop
pop
mov
pop
mov
adc
xor
pop
pop
add
incb
insb
add
mov
repnz
jne
dec
sbb
jg
adc
pop
sar
lea
ret
and
mov
pop
incb
cmp
xchg
mov
mov
mov
loopne
mov
xor
shll
push
sub
enter
pusha
pusha
mov
xor
ja
stos
movsb
mov
jns
sbb
std
js
hlt
jb
data16
and
mov
jge
mov
int3
shl
cmp
into
sub
daa
sub
dec
dec
push
lret
and
push
pop
add
lret
mov
xchg
or
lods
mov
push
daa
cld
mov
cmp
mov
stc
or
lods
and
push
jns
je
xor
lods
es
mov
call
mov
push
or
inc
subl
lahf
cmp
lods
movsl
dec
cmp
inc
sub
jb
or
aad
pop
and
inc
shlb
enter
xor
pop
inc
jne
cmp
mov
jb
inc
xor
push
scas
aad
cmp
push
rclb
int
lds
loope
xchg
cmpsb
js
pop
lods
or
xchg
push
mov
out
ret
xor
test
lea
mov
jg
jo
dec
enter
fs
sbb
inc
push
or
add
repnz
adcb
pop
xor
push
sbb
xchg
pop
xorb
pop
rclb
cmp
mov
popf
lea
iret
out
in
mov
lods
scas
out
jns
cwtl
add
dec
jnp
dec
xchg
cmp
jmp
sbb
mov
push
adc
xor
pushf
adc
mov
dec
pop
sub
pop
xchg
enter
fcmovb
cmp
clc
daa
mov
test
aad
sahf
add
rolb
sub
lods
cld
jecxz
hlt
or
push
add
in
mov
pop
enter
mov
sub
aaa
dec
nop
dec
jno
or
push
aaa
push
pop
outsb
into
je
divl
mov
insb
ffree
in
lcall
pop
jb
mov
test
mov
lret
insl
pop
xor
fwait
aaa
addr16
xor
subl
jecxz
das
pop
fdivr
sar
clc
cmc
mov
orb
push
scas
test
subb
shlb
cmp
gs
out
fimuls
mov
call
enter
mov
add
push
in
mov
std
aad
es
mov
fdivs
xor
daa
xchg
stos
lcall
out
loope
cmp
nop
std
lds
sub
sti
lea
lock
lret
out
imul
mov
push
mov
inc
imul
sub
cmp
sbb
cwtl
jmp
mov
fs
std
mov
mov
test
scas
mov
out
imul
test
xor
dec
scas
test
arpl
or
aas
dec
dec
xor
roll
xor
imul
adc
lods
cmp
xchg
iret
es
cmp
cmp
mov
sbb
call
std
orl
xor
sbb
mov
test
xchg
loopne
mov
dec
std
inc
repz
cmc
ljmp
popa
cmc
mov
fdivrp
or
fsubrl
cs
lods
cmp
push
test
sub
enter
jmp
dec
jmp
mov
cmc
shrl
sar
lock
xor
push
sub
movsl
cwtl
push
jmp
jmp
jo
sbb
jge
mov
cmp
subps
or
pushf
repnz
xorb
and
mov
enter
jns
xchg
in
addr16
dec
add
xchg
cmpb
je
jbe
mov
insl
mov
movsb
or
ret
or
dec
pop
mov
inc
push
inc
lret
or
dec
out
jne
cmp
xchg
sbb
jo
hlt
or
xor
inc
ds
das
push
or
xchg
clc
dec
pop
jno
push
je
sbb
test
sub
gs
loopne
cmp
push
enter
das
and
sbb
and
add
push
iret
repz
mov
popf
lret
xchg
or
mov
movsb
test
and
pop
mov
inc
adc
sarb
xchg
outsl
sbb
mov
arpl
mov
lret
push
or
and
inc
or
dec
jo
jp
add
add
pop
sub
xor
pop
ss
xchg
xor
mov
mov
jb
lock
cltd
rcll
dec
dec
mov
popa
xchg
push
lock
pop
pop
mov
arpl
mov
and
test
push
test
shl
out
scas
movsl
call
dec
es
push
xchg
sbb
pop
cltd
rcll
pop
enter
xor
adc
and
mov
push
cltd
rcrl
and
les
imulb
or
sub
pop
mov
mov
dec
in
ja
subl
outsl
popa
pushf
sbb
pop
dec
inc
xchg
popf
xchg
mov
lods
test
sbb
aad
lcall
cmp
imul
outsl
or
pop
movsl
jb
sbb
ss
iret
enter
mov
insl
and
into
inc
sub
inc
leave
push
sbb
cltd
movsl
cmpsl
add
mov
mov
test
xchg
add
js
adc
inc
mov
jb
pop
pushf
pop
repz
xchg
mov
or
outsl
xor
scas
pop
mov
dec
or
mov
pop
xchg
bound
pop
movsb
push
mov
dec
mov
imul
mov
mov
add
sbb
cltd
fs
movsb
bound
je
push
push
aas
dec
cmpsl
jns
adc
adc
test
and
repnz
enter
jb
leave
push
pushf
pushf
nop
xor
pushf
xchg
pushf
push
and
add
popa
and
je
push
and
je
stc
inc
push
mov
incl
jge
adc
inc
add
mov
push
push
lods
stc
add
and
jnp
lret
push
adc
popf
pop
lock
ret
push
pop
rclb
js
pop
xor
xor
pop
and
or
inc
les
push
jne
add
xor
cmpb
imul
and
sbb
mov
icebp
adc
mov
mov
mov
test
jne
push
xor
addl
mov
sub
leave
add
xor
mov
pop
inc
subb
dec
mov
mov
add
cltd
jmp
mov
sub
filds
mov
mov
outsl
mov
test
je
mov
xor
pusha
mov
punpckldq
ret
cmpsl
mov
sbb
mov
pushf
or
into
mov
jne
lea
ljmp
cli
sub
mov
sub
sbb
je
jmp
bound
ret
jb
xor
sub
mov
jno
les
rcl
adc
cld
lods
or
out
out
and
sbb
sub
xchg
test
pushf
xor
adc
inc
push
xchg
es
icebp
gs
and
xor
pushl
adc
mov
movsb
icebp
dec
and
mov
lahf
or
rolb
sahf
push
es
sti
fistpll
cmp
add
je
sub
clc
inc
push
inc
sbb
sti
and
testl
xor
adc
mov
test
inc
cs
les
pop
mov
pop
mov
dec
push
cwtl
movsl
mov
jae
ss
jl
adc
fimull
scas
lds
shlb
adc
jmp
and
adcb
jb
loop
jmp
mov
dec
lret
inc
stc
adc
mov
push
daa
push
xor
add
shll
lcall
and
push
and
ret
leave
xor
pop
and
sbb
sbb
push
push
adc
ss
push
or
mov
fiadds
movl
call
sbb
jns
and
or
add
stos
add
push
imul
xor
push
fisubrl
mov
outsl
sbb
mov
daa
imul
sar
lret
cmp
or
sbb
inc
adc
or
sbb
xchg
dec
push
xchg
enter
pop
inc
push
out
inc
cmp
push
push
ja
or
cmp
lret
orb
fcompl
rol
imul
daa
sub
lea
pop
pusha
mov
and
sahf
push
les
pop
pop
xchg
sbb
mov
push
hlt
jne
push
loopne
jae
pop
dec
addr16
ret
icebp
out
or
adc
ficomps
pusha
sti
arpl
cmp
ljmp
jb
les
or
mov
bswap
cmp
cmp
roll
cmp
mov
or
or
das
mov
jnp
or
bound
jl
jno
push
xchg
sub
sbb
sbb
mov
or
or
loop
cmp
or
sub
adc
lahf
leave
test
xor
add
and
jne
xchg
xor
daa
push
dec
dec
dec
xchg
mov
sub
and
mov
mov
nop
inc
stos
add
pop
jbe
xor
add
dec
mov
push
pop
mov
divb
adc
test
lock
and
ficoml
inc
lds
ljmp
and
adc
fidivrl
add
jl
sbb
rorb
or
pusha
leave
adc
movsb
adc
push
test
push
mov
or
xlat
in
pop
icebp
jge
imul
jle
andl
cmp
jo
add
and
sarl
shrl
mov
ret
jle
xor
inc
sbbl
pop
xorl
xchg
test
cmp
or
cs
mov
xchg
cmp
fld
mov
shlb
push
rorl
jmp
leave
push
sbb
adc
int3
insl
mov
mov
rorb
push
push
notl
or
add
shl
loope
imul
pusha
ret
push
sub
pop
xor
fisubs
cmp
and
dec
xchg
in
movsl
sub
xchg
push
pop
inc
call
adc
jg
movsb
ret
pop
faddp
je
push
or
fld
ljmp
loopne
and
or
pusha
pushl
inc
push
mov
pop
cmpsl
popa
or
pushf
enter
xchg
movsl
movsb
lds
je
mov
mov
clc
sub
sbb
jmp
mov
rclb
pop
dec
or
popf
or
pop
sbb
jl
or
fdivrs
push
les
in
popf
push
in
sub
loope
add
sub
or
add
js
dec
mov
mov
je
dec
sti
jne,pn
sbb
inc
mov
jb
sub
adc
lcall
sbb
xchg
ret
adc
adc
dec
pop
mov
pop
push
sub
je
pop
sbb
push
push
dec
jmp
dec
ret
mov
ret
add
push
inc
dec
add
xchg
xchg
shll
fs
jno
inc
and
loop
or
pusha
js
mov
test
jl
fs
das
cmp
nop
lahf
data16
pop
and
dec
addl
push
test
push
scas
push
je
push
adc
or
pop
ret
add
fs
les
cs
scas
es
iret
sbb
flds
mov
and
shl
push
adc
dec
cmp
xor
lret
les
and
loop
xor
test
xor
testl
loope
jne
and
gs
sub
out
sbb
arpl
jne
mov
inc
out
dec
mov
cmp
je
out
mov
out
and
faddl
aam
xchg
pop
xchg
xchg
ja
addr16
outsb
or
cld
loop
xchg
and
pop
add
and
repnz
ret
mov
push
out
fmull
test
js
xor
test
pop
addb
xchg
push
scas
adc
and
and
cmp
ss
loopne
pop
cmpsl
adc
sbb
dec
fs
and
inc
cld
lods
or
dec
aas
jae
pop
or
and
or
arpl
push
add
scas
and
push
sbb
add
sbb
mov
mov
inc
cmc
insl
mov
mov
dec
fldcw
and
mov
imul
mov
loopne
mov
push
sub
cwtl
jno
cli
clc
mov
lret
dec
adcl
popa
jbe
jecxz
mov
xor
jo
xor
mov
xor
repz
fisubs
mov
add
daa
dec
insb
or
inc
add
pop
push
cs
pop
fmull
adc
jg
stc
xchg
push
imul
dec
push
out
mov
push
lds
pusha
add
jne
mov
add
adc
fdivs
lock
cld
mov
inc
and
cmp
imul
push
rorb
or
inc
mov
fs
or
fs
mov
loop
xchg
mov
push
sbb
mov
and
or
xchg
add
lret
outsl
or
loop
ja
cmp
psrad
repz
jmp
xor
rol
and
inc
inc
adc
add
lods
enter
pop
je
pop
fdivrs
inc
cmp
int
or
xor
lret
and
xchg
mov
popa
bound
cmp
pop
cld
pop
loopne
bound
icebp
xchg
xchg
cmp
add
je
repnz
loop
and
pusha
or
push
test
push
ror
inc
add
xor
jae
fimuls
pop
add
ret
scas
adc
xchg
pop
pop
sub
cwtl
rorl
cmp
pop
movsl
push
ja
mov
daa
lods
lds
mov
xorl
cli
jle
cmpb
cmpsb
fiaddl
lret
cli
and
mov
out
punpckldq
gs
mov
pop
cmpb
add
push
push
orl
xchg
inc
ljmp
arpl
nop
dec
jns
pushf
push
shrl
fildll
sbb
adc
inc
adc
and
jo
mov
loopne
cmp
mov
xorb
sub
sahf
cmp
dec
inc
inc
or
jne
bnd
push
add
push
sar
add
hlt
rcrl
das
mov
push
ret
jmp
add
adc
aam
xchg
lea
pop
pop
mov
xor
sbb
jmp
pop
pop
daa
or
mov
testl
sti
or
out
int
xchg
xor
lock
ljmp
stos
pop
fwait
or
mov
jle
sbb
cmp
xchg
inc
push
pop
push
dec
push
add
mov
mov
add
jmp
add
out
rorb
or
or
push
and
imul
mov
outsl
add
jge
mov
cwtl
add
sahf
and
pop
popa
std
mov
cmp
mov
mov
movsb
mov
roll
sbb
outsb
lock
mov
sbb
and
mov
dec
andb
mov
push
cmp
daa
insl
andl
or
sar
sarb
or
mov
mov
push
inc
pop
sbb
incb
mov
mov
roll
cld
jl
push
push
mov
or
add
dec
call
and
clc
add
or
pop
shl
add
pop
lods
push
sahf
inc
add
sub
xorl
mov
hlt
inc
adcl
pop
test
jl
fs
xorl
paddsb
push
orb
jb
xchg
adc
jmp
ret
jmp
sub
cmp
jge
sub
aas
push
aaa
xor
ds
adc
mov
jne
shrl
or
je
and
mov
mov
movl
jl
mov
loope
push
aad
xchg
sahf
notb
xlat
adc
dec
insb
xchg
mov
testl
mov
push
adc
test
inc
jmp
push
push
xchg
push
xlat
cs
push
xor
xor
pop
lock
shlb
dec
lock
std
add
xor
and
test
mov
or
adc
lock
xor
push
rol
adc
fisubl
sub
mov
enter
add
adc
jb
rcrl
imul
ret
sub
ss
jge
inc
sbb
jmp
jl
rclb
jg
jg
adc
and
pusha
movsl
push
test
lea
ljmp
pushf
iret
mov
and
sbbl
add
pop
mov
jg
cmp
je
sub
xchg
pop
shrl
dec
push
shrb
inc
add
ja
sub
rep
ss
cs
add
jp
imul
je
adc
mov
lds
mov
or
inc
push
xor
inc
dec
out
adc
dec
fwait
in
mov
mov
jno
shrl
or
mov
popa
push
mov
jnp
jp
jae
mov
cltd
loopne
jbe
xor
mov
vpshab
inc
orb
cmpsb
fs
inc
xchg
push
add
lcall
push
pop
orl
cwtl
mov
mov
xchg
add
add
inc
adc
mov
addr16
addps
stos
jl
je
xor
sbb
movd
dec
orb
push
adc
les
or
sub
mov
push
or
add
or
out
add
imull
outsl
push
push
dec
adc
dec
in
iret
push
and
jne
push
clc
jl
lahf
pop
outsl
inc
or
jbe
jle
dec
movsl
push
stc
pushf
outsl
ja
mov
out
jo
test
rolb
loopne
or
xor
mov
enter
sub
mov
loope
loop
test
out
in
and
call
or
sub
std
mov
dec
sub
dec
pop
and
pop
add
sub
imul
fsubrs
fld
lock
in
mov
mov
movsb
add
shlb
arpl
inc
adc
push
jno
mov
and
or
es
mov
jmp
add
mov
pop
idivl
push
inc
mov
pop
add
mov
hlt
push
lea
inc
pop
scas
and
loopne
mov
push
sub
test
xor
fwait
mov
mov
lcall
lahf
cmpsb
jne
jo
test
pop
and
nop
sub
mov
in
adc
in
dec
rcr
fsub
push
fwait
xchg
push
les
dec
orb
lods
jnp
fdivl
mov
lret
jecxz
test
sub
orb
iret
decl
mov
pop
xor
cltd
cmp
mov
jb
xor
xor
pop
test
jl
dec
pop
sub
jg
sbb
mov
or
push
mov
cmp
xor
or
sbb
dec
jmp
ret
and
and
and
mov
repnz
sbb
or
sarb
add
sbb
jae
outsb
adc
add
sub
sub
adc
fidivl
xor
push
fcompl
xor
ds
nop
jp
mov
stos
mov
add
sub
dec
jne
mov
mov
ret
mov
jmp
adc
outsl
mov
push
jae
fnstsw
inc
add
or
inc
stos
jmp
mov
push
fcompl
ljmp
cli
cmpsb
mov
cmp
adc
test
jno
push
stos
clc
mov
sahf
movsb
lock
adc
sub
pop
imul
fsubs
cmp
adc
jg
enter
cmp
jg
inc
jmp
bound
pop
sub
jne
imul
add
shrb
aas
sbb
arpl
or
mov
adc
fmull
and
popa
sbb
adc
inc
cmpsb
rcrb
nop
mov
adc
test
adc
sub
xor
xor
adc
jne
and
or
rcrl
mov
mov
mov
lcall
lahf
test
mov
or
sub
adc
pop
push
mov
cld
or
nop
mov
shlb
out
and
nop
mov
rol
add
dec
pop
mov
or
fiadds
movsl
bound
or
aas
inc
pop
inc
xchg
aam
adc
push
mov
shll
add
pop
or
aam
mov
in
das
stos
mov
adc
movsl
mov
inc
loopne
aad
push
adc
push
mov
iret
and
jle
sbb
fisubrs
lock
jge
cmpl
sub
insb
jae
call
jbe
or
jne
sub
pusha
jle
cmp
push
and
mov
add
mov
fs
inc
mov
mov
add
pushl
andl
xchg
pop
rcrb
clc
dec
mov
hlt
or
jns
mov
jmp
sahf
xchg
push
in
mov
or
ret
dec
cmp
loopne
stc
dec
imulb
lods
adc
and
and
inc
cmp
xor
or
jecxz
jbe
dec
jmp
push
jno
sub
aas
and
cld
rol
orb
add
sti
mov
mov
inc
or
xchg
ret
lret
xchg
cmp
es
add
pop
add
hlt
push
dec
mov
movsb
push
adc
or
add
add
or
or
jg
aas
in
or
insl
jle
aam
jbe
inc
inc
sbb
pushf
sbb
push
mov
add
or
sub
xor
push
nop
jle
jno
add
nop
sbb
add
and
mov
aas
repz
push
pop
jl
mov
leave
aaa
dec
mov
call
fstl
dec
mov
call
pop
pop
pusha
imull
cli
nop
ret
arpl
les
jle
test
mov
jp
stos
fsubrs
xchg
mov
mov
aaa
mov
loope
fdivs
and
push
cmp
mov
or
push
mov
das
dec
loop
outsl
mov
cmp
fdivrl
cmpsb
pop
mov
pop
cmp
test
dec
pop
adc
cmp
cmp
jae
lock
cmp
cmpb
jg
adc
dec
add
rolb
fmuls
gs
and
lock
mov
adc
xor
and
sbb
pop
lock
cs
pop
mov
pop
add
rcl
cmpl
xchg
xchg
fwait
jle
mov
pop
cmp
loope
xor
push
aad
jp
xchg
ret
push
xor
sahf
ljmp
loop
mov
add
mov
jmp
or
add
test
xor
andb
mov
inc
insl
push
sbb
or
push
add
inc
icebp
mov
movsb
xchg
ja
cwtl
lret
xor
repnz
and
ficoml
mov
movsb
mov
add
repz
aas
inc
mov
in
mov
dec
test
aam
push
pop
orb
clc
cmpl
inc
std
outsb
mov
push
jmp
cmp
mov
ja
popa
xchg
je
mov
fadds
mov
addb
sub
loopne
mov
sub
pop
add
inc
or
jge
jmp
shlb
fimull
cltd
mov
xor
mov
push
xor
adc
test
sbb
adc
leave
pop
mov
inc
adc
test
or
mov
adc
les
or
sbb
cmp
inc
xor
and
and
jbe
mov
mov
sub
cmpsb
lahf
jo
add
jne
hlt
dec
clc
sub
pushl
leave
push
icebp
xlat
hlt
sub
inc
fidivs
adc
fsubl
or
mov
push
push
jge
test
pop
loop
add
pop
mov
lea
pop
je
pop
cmc
and
add
adc
push
inc
rorb
pop
fadds
jbe
add
dec
dec
addr16
cs
pop
inc
cmp
jae
push
cmp
add
loope
jl
mov
inc
adc
lock
dec
adc
mov
jbe
or
cmp
pop
adc
add
and
push
mov
mov
jp
jmp
lods
mov
jb
ss
movsl
movsb
sub
iret
and
lret
popf
popa
mov
or
jle
dec
dec
dec
mov
enter
insb
aad
mov
mov
push
mov
adc
or
pop
icebp
fisubl
bound
pop
fdivl
test
mov
stos
push
xchg
mov
jns
jne
jmp
insb
out
loop
frstpm(287
or
push
fmulp
push
push
arpl
adc
dec
lret
mov
add
dec
scas
pop
jle
daa
ss
xchg
ret
mov
or
ljmp
pop
pop
inc
mov
inc
mov
insl
push
nop
xchg
sbbl
jl
xchg
push
jbe
adc
push
jecxz
inc
push
lock
adcl
sbb
cmp
push
or
outsb
sub
xchg
cs
es
push
adc
in
pcmpgtb
add
or
sbb
dec
in
adc
js
xchg
insl
dec
jg
adc
mov
call
push
mov
hlt
add
loopne
cmp
ja
data16
or
rclb
popf
nop
sub
pop
mov
or
sub
pop
and
negb
std
jb
or
ja
pop
js
invd
test
es
dec
out
cmp
not
jmp
sbb
repnz
les
call
or
mov
mov
out
loopne
push
lret
mov
clc
push
mov
ljmp
dec
and
imul
mov
into
dec
and
lcall
lock
nop
adc
xlat
je
cmp
adc
cmp
jb
test
and
inc
mov
clc
testb
push
add
cmp
je
jge
push
fidivrl
or
push
movb
daa
test
pop
je
ret
lds
cmpl
sub
pop
adc
daa
mov
push
or
cmpsb
in
push
fldenv
adc
movsb
gs
cmpsb
inc
shr
jmp
das
xor
or
mov
rcr
adc
leave
push
push
jne
or
mov
inc
nop
mov
insl
mov
xchg
out
mov
call
bound
jmp
adc
adcl
inc
add
fcmovnb
pop
pop
push
les
xchg
xchg
mov
or
mov
or
lock
lock
rorb
dec
mov
inc
push
pop
push
push
inc
shr
rcr
shr
rcr
fwait
imull
leave
div
pop
dec
adc
inc
mul
jnp
ljmp
jb
cmp
or
cmp
or
xor
and
out
add
adc
or
ficoml
ficompl
rolb
fxch
xor
aam
adc
ficompl
sbb
ret
adc
jbe
jecxz
pop
pusha
ret
fcomps
add
jne
mov
insb
loop
pop
mov
add
call
adc
mov
xchg
dec
decl
es
sbb
pop
push
insb
lcall
sbb
movsb
rcll
mov
inc
rorb
dec
push
test
mov
xor
xchg
shll
add
in
jnp
adc
adc
cmp
push
sti
inc
mov
loop
sub
test
ret
dec
cwtl
push
fstps
cmpsl
std
mov
cmp
adc
pusha
cmpsl
cmp
pusha
ror
pop
sbb
jno
loop
sub
sub
mov
lea
arpl
inc
inc
rclb
and
stos
add
lods
jl
mov
pusha
xchg
pop
add
cld
xor
in
cltd
sbb
subb
mov
xor
pop
push
mov
sub
ja
push
dec
push
push
cli
mov
lcall
loop
ss
loop
xor
mov
sahf
je
xchg
cli
divb
push
push
add
lea
lea
push
inc
adc
or
daa
xor
inc
or
fildll
mov
jmp
popl
or
xchg
mov
and
adc
dec
enter
sbb
outsb
push
mov
and
mov
dec
mov
dec
pop
rcll
and
pusha
add
sub
rcll
enter
ljmp
xor
xchg
call
pop
sbb
add
add
ffreep
push
inc
cmp
xor
out
aad
xchg
call
pop
flds
pop
push
xchg
lcall
adc
inc
or
pusha
lea
test
cld
inc
outsl
add
add
dec
dec
dec
fimull
or
adc
fldl
sbb
sbb
cmp
cmp
sub
xor
cmp
cmp
cmp
cmp
push
inc
and
inc
cmovs
jb
dec
push
push
pop
pushf
pushf
pushf
pop
add
pushf
pushf
pushf
pushf
insb
jo
js
add
pushf
jl
sbb
ficoml
mov
xchg
cwtl
dec
es
fs
mov
xchg
test
sub
sub
sub
or
add
out
cmp
loopne
push
ret
xor
mov
push
mov
or
call
adc
in
adc
movsb
cltd
nop
lock
sbb
inc
or
clc
and
daa
adc
and
enter
pop
out
adc
scas
push
jo
add
data16
ret
aam
lcall
loop
fcoms
push
imul
lret
sbb
or
mov
or
push
rorb
sub
loopne
xor
add
adc
cmp
sub
xchg
mov
add
push
push
cmpl
add
faddl
push
sub
mov
es
mov
sbb
rolb
movsb
ds
push
cltd
ja
add
add
cmp
and
and
dec
addb
inc
pusha
fwait
push
fdivrs
pop
inc
or
cmp
insl
push
lea
je
cmp
xchg
cmp
lret
loope
jo
push
xor
and
sbb
ret
into
push
push
add
sub
std
je
lea
push
jle
jns
lret
sbb
push
popf
stc
pop
int3
test
adc
sbb
inc
orl
mov
cmp
fcompl
into
test
aam
dec
pop
je
pop
inc
fdivrs
pushf
fldl
idivb
sub
and
loopne
test
and
mov
jge
scas
nop
sbb
xor
push
test
lret
lods
adc
sbb
adc
add
and
bswap
jle
mov
push
push
or
add
xchg
pop
or
mov
mov
xchg
movsl
and
stos
adc
adc
or
jl
adc
inc
adc
insb
jmp
hlt
push
or
cmpsb
dec
mov
mov
jb
adc
pop
data16
iret
pusha
sub
sub
mov
addr16
mov
mov
lcall
cs
rorb
cmp
bound
cmc
aam
sbb
in
push
pop
pusha
loop
add
in
sub
cmp
or
pushl
push
mov
push
addb
popa
mov
lea
xor
sub
aad
cs
loope
addl
adc
in
add
notb
xor
scas
push
test
aaa
clc
jmp
fwait
mov
or
lods
rorl
pop
mov
jne
lock
cmpsb
clc
push
and
xor
in
xchg
shlb
add
xor
push
cmp
call
or
fdivrs
dec
push
sbb
ret
loopne
std
push
lea
in
cmp
aas
in
scas
xor
mov
add
sar
mov
ret
jle
cmp
mov
and
fsubs
sub
and
xor
adcl
xchg
push
adc
mov
dec
popf
add
pop
inc
mov
test
nop
jmp
jbe
inc
dec
ljmp
push
sahf
push
inc
pushl
mov
inc
mov
dec
sub
mov
cmp
popf
pop
sbbl
xchg
insl
insl
inc
cli
sbb
mov
xchg
test
lock
or
or
lods
jg
push
xchg
push
xor
push
hlt
pop
add
loop
dec
cmc
lods
test
ljmp
add
cmp
add
cmp
fsubs
xchg
mov
mov
push
clc
loopne
xor
sbb
mov
lret
dec
inc
lea
push
sub
mov
inc
shlb
loop
lods
jnp
not
mov
fsubr
fs
rclb
add
test
cmpsl
loopne
insl
dec
sub
loop
clc
add
cmp
in
stc
lea
cmpl
rcr
roll
push
or
out
rolb
jno
add
call
scas
sub
sarl
add
push
xchg
cmp
xor
js
add
aam
dec
xchg
loop
cmp
add
inc
int
addb
jmp
inc
int
sarl
mov
iret
sub
add
je
pop
int
inc
mov
and
repnz
jp
std
popf
lret
cmp
xlat
mov
push
mov
inc
mov
sbb
sarb
repnz
xchg
sub
push
inc
fisttpl
adc
popa
ds
lret
mov
jmp
xchg
mov
andl
add
aaa
sar
scas
jnp
push
cmp
mov
adc
cli
or
aas
js
aas
movb
inc
mov
adc
xor
jnp
cmpl
fmuls
push
and
adc
pop
inc
cmp
mov
cmp
jmp
cmpsb
leave
push
or
pushl
in
js
mov
dec
add
enter
cmp
mov
xchg
rclb
inc
cli
scas
in
lods
push
orl
pop
mov
dec
fistl
and
add
cmp
mov
lret
bound
pop
add
add
aas
mov
push
stos
xchg
dec
dec
stc
pop
xchg
pop
mov
add
and
orb
add
sub
dec
loopne
repnz
test
mov
inc
push
pop
lock
dec
cmp
or
cmp
xchg
and
dec
push
adc
mov
orb
mov
sub
push
mov
jns
je
add
push
jo
lret
jmp
or
popa
aad
pop
and
push
fiadds
aas
lea
arpl
pushl
lods
adc
xchg
inc
ja
pop
lcall
ljmp
push
cmp
adc
sub
mov
xor
jnp
add
mov
inc
sbb
xor
inc
cmpb
sbb
pop
cwtl
fdivrl
or
cs
xor
dec
ret
movsl
dec
push
sub
sbb
and
pop
leave
inc
pop
push
and
mov
scas
or
sarl
add
sub
or
je
fstps
adc
stos
sbb
or
cmpb
push
les
orl
rcr
xor
adc
add
push
rcrb
andl
sub
xor
cmp
dec
pop
rorl
into
stos
jo
push
repz
inc
call
shufps
mov
adc
outsb
adc
adc
sub
pop
rcr
out
std
mov
adc
or
add
mov
add
mov
fnstcw
sbb
push
and
mov
les
sub
cmp
addr16
scas
bound
mov
shll
stc
mov
out
jl
push
pop
inc
xor
ret
push
sbb
fstp
inc
shll
xor
sahf
in
jl
js
std
into
and
bound
aam
mov
nop
sti
inc
out
xchg
pushl
pusha
push
sub
mov
and
sbb
sub
imul
push
sbb
sbb
adc
dec
cmp
pop
pop
jo
dec
mov
mov
gs
pop
sbb
cmp
lods
jg
leave
in
fiadds
rclb
mov
jo
cmp
stos
jge
addr16
les
or
mov
mov
sub
mov
sub
pusha
xor
or
sti
xor
mov
clc
and
pop
lods
mov
int3
pop
pop
mov
inc
and
jg
cmp
add
xchg
add
clc
je
xor
addl
mov
imul
mov
adc
cmpsb
js
sbb
sbb
dec
cmp
fcoms
ljmp
xor
lods
je
inc
das
sbb
mov
pop
jl
inc
test
add
js
pop
mov
pop
sbb
push
add
push
popa
add
dec
int3
movsl
jmp
scas
inc
ds
dec
add
sub
and
repz
jno
add
and
adc
jo
pop
test
cmpsb
mov
loopne
mov
dec
sti
inc
jmp
xor
push
jecxz
test
dec
cli
add
and
mov
mov
push
cmpsb
push
rcrb
and
mov
jb
cmp
inc
fs
lds
sbb
and
add
stos
inc
sbb
gs
lahf
loopne
sub
rclb
les
mov
shrl
inc
outsl
jbe
out
push
gs
aad
inc
es
sub
sub
rorb
xchg
xchg
add
dec
int
adc
mov
jmp
or
lret
test
pop
dec
inc
xor
push
sbb
jno
xor
push
nop
dec
ja
mov
sbb
js
pop
sbb
inc
sbb
pop
adc
pop
in
sub
inc
arpl
sub
sbb
fadds
lods
push
notb
mov
lock
orl
dec
scas
xor
and
lahf
mov
pushf
cld
xchg
int3
or
rcr
fadds
adc
repnz
rcrb
ret
mov
adc
inc
mov
rorl
jl
xor
jle
loop
jnp
call
sub
mov
pop
sbb
lods
mov
fiadds
or
sbb
or
cmp
inc
data16
jmp
inc
sbb
dec
int3
adc
push
lods
mov
jecxz
test
jne
and
mov
fistps
inc
and
ror
jo
stos
adcb
or
sbb
jmp
fwait
stos
sub
dec
pop
pusha
sbb
or
push
imul
sub
mov
mov
xor
dec
push
popf
pushf
pop
sub
je
push
popf
ds
cmp
add
adc
pusha
mov
jmp
push
data16
pop
idiv
movsb
lret
ja
je
test
or
adc
sbb
imul
lret
adc
or
or
test
push
or
and
mov
pusha
mov
push
mov
xchg
fsubs
and
add
iret
and
adc
in
shl
not
xor
outsb
aas
mov
or
mov
jmp
and
es
aaa
loop
shlb
sahf
lock
test
inc
push
in
adc
test
lcall
xor
adcb
lret
ss
sbb
or
sub
outsl
mov
incb
jmp
sbb
lock
and
movsb
pop
mov
jl
and
fcmovne
int3
mov
pushf
jge
add
or
jmp
sub
or
aad
clc
orl
and
jge
mov
insl
adc
fisubs
loope
flds
jecxz
out
sti
and
pop
adc
pusha
mov
pusha
loope
pop
sub
add
and
rclb
fstp
ds
test
insl
xor
push
rcrb
push
addr16
or
sub
or
push
sahf
lret
es
adc
sti
add
cmp
test
fisttps
jo
mov
push
clc
or
movsl
or
sub
je
jmp
push
mov
mov
adc
testl
cmpsl
pop
in
lcall
sbb
jmp
push
and
inc
add
fwait
cmp
xor
fiadds
inc
push
flds
fisttpll
add
adc
jmp
lret
test
sub
out
cmpsb
aas
adc
imul
push
cmp
sbb
imul
pop
insl
pop
mov
fsubp
mov
movsb
and
xor
lret
lods
ja
cmp
mov
jmp
push
ffree
iret
enter
fldz
rcr
jle
and
sbb
loopne
add
les
add
jmp
sub
sub
jmp
sub
cmp
nop
jns
push
sbb
test
push
adc
negb
int
sti
hlt
add
pop
loope
or
jnp
addl
fstpl
mov
inc
mov
or
jle
repz
faddl
push
add
inc
ror
div
sbb
sub
add
adc
nop
dec
push
test
enter
adc
sbb
jp
dec
in
mov
sbb
shl
out
mov
push
jno
jp
push
sahf
jmp
pop
loopne
sub
fsubr
xchg
inc
add
xchg
and
mov
and
sbbb
pop
pop
orb
mov
sbb
jg
xchg
sbb
pop
and
dec
test
push
jmp
or
or
push
ret
out
faddl
add
and
pop
movzbl
mov
dec
pop
push
lea
mov
je
das
adc
inc
movsb
sbb
js
add
or
adc
scas
sbb
rcrb
add
adc
or
mov
sub
hlt
inc
or
dec
push
jle
add
or
inc
test
clc
out
pop
push
add
jp
ffreep
lods
fsubrp
fwait
jno
mov
mov
je
mov
cmp
or
or
xor
push
mov
cmp
leave
jmp
insb
ret
insl
ret
imul
scas
adc
cli
pop
jo
mov
fdivl
in
shlb
add
sbbb
pushl
lea
push
push
mov
or
mov
leave
and
mov
xor
mov
shll
out
addb
popa
out
mov
jae
and
or
adc
and
xor
pop
lods
adcb
fimull
sub
pop
cmp
clc
out
sarl
cs
pop
into
rolb
shrl
imul
cld
push
shl
jne
jb
xor
jo
gs
cmpsl
push
sti
dec
jecxz
mov
ljmp
adc
test
into
sahf
ret
fadds
into
sbb
pop
or
addl
cwtl
ljmp
test
test
cmovge
lods
push
or
mov
stos
adc
gs
or
xor
adc
xchg
cmpsb
imul
push
mov
jle
and
adc
inc
sbb
add
push
add
xlat
sahf
jl
sbb
sub
shr
xchg
inc
das
jae
incl
sub
dec
aad
subl
sti
ret
cmp
adc
pop
movsb
dec
pop
inc
fstps
push
xor
and
xor
push
or
insl
or
push
mov
jg
adc
fldt
or
enter
fwait
int3
and
push
imul
les
daa
sub
or
jle
push
icebp
jb
fsubrl
mov
mov
or
push
addr16
cwtl
adc
not
add
mov
rolb
inc
and
ldmxcsr
xchg
jnp
faddl
pop
or
test
and
mov
rol
jp
repz
out
add
mov
lods
add
add
jbe
imul
ret
fiadds
sbb
adc
lea
adc
xlat
data16
inc
js
shlb
xor
mov
pusha
das
pop
arpl
test
loope
xor
or
cmp
push
jnp
test
add
pop
push
sarl
sahf
mov
adc
xor
or
jo
das
and
gs
mov
fdivrs
or
inc
inc
psrlw
sti
jbe
movsl
cmp
test
dec
inc
sbb
mov
adc
enter
or
andb
add
loope
or
adc
inc
lods
inc
add
pop
push
popa
add
pop
xor
or
adc
std
sub
mov
rorb
cmpl
xor
pop
jle
inc
test
sub
loop
test
dec
inc
aad
xchg
movsb
faddl
orb
dec
or
sbb
dec
push
or
inc
push
adc
add
add
jmp
aas
daa
adc
out
sbbb
mov
test
jb
add
scas
cwtl
pop
test
jne
xchg
popa
jg
push
add
repnz
or
cmc
push
in
inc
stos
stos
repnz
pop
pop
shlb
lock
mov
push
push
xor
addr16
popf
cmp
pop
add
rcrb
push
mov
jns
dec
xchg
loopne
sbb
pop
lock
inc
shl
mov
pop
fnsave
pusha
inc
aam
loop
rolb
adcl
add
outsb
dec
cltd
insb
inc
out
pop
and
mov
out
mov
inc
into
jbe
lea
xor
xor
or
sbb
shlb
cmp
sbb
iret
dec
cmp
enter
mov
or
add
dec
mov
adc
imul
movsb
push
and
sbb
sbb
hlt
test
or
sbbl
ljmp
sti
cmp
dec
dec
aaa
or
jo
inc
lock
loopne
adc
push
aam
sbb
js
movsl
cmp
mov
lahf
xor
push
movsl
xor
stos
sub
pop
lods
jg
sub
sub
not
rcrb
sub
add
and
push
ds
adc
loop
or
and
lock
or
adc
push
xor
and
scas
xor
mov
xchg
outsb
sub
sarb
je
mov
or
jmp
adc
push
and
in
and
cltd
sbb
and
adc
stos
push
data16
or
mov
push
mov
cli
cmovs
cmp
pop
test
push
cmp
pop
xor
pop
xchg
dec
sbb
cli
adc
sbb
fiadds
roll
mov
jecxz
aas
sbb
push
cmp
loopne
cmp
imul
mov
gs
dec
xor
dec
hlt
lea
sbb
mov
push
ret
add
stos
stos
mov
into
out
loop
int
ret
jl
mov
out
and
loop
jb
sub
rorb
sbb
jge
cmovbe
and
pop
scas
pop
mov
rcl
jecxz
cwtl
dec
roll
add
rcrb
mov
rolb
es
movsl
loop
stc
and
mov
lock
rcrb
pop
pop
xchg
negl
xchg
cld
add
jns
and
add
add
lret
fwait
cmp
xchg
lods
pop
clc
or
jl
jns
xor
push
xchg
je
jb
or
jl
xlat
les
movsb
push
add
mov
leave
push
adc
into
mov
stos
or
test
mov
and
xchg
sbb
push
je
test
jae
xchg
mov
mov
or
jg
jo
cmp
loop
jne
inc
jmp
mov
sub
aad
ret
or
xchg
add
stos
ja
jg
pop
mov
sub
cmp
ja
push
dec
jmp
pop
or
add
mov
mov
cmp
into
add
sbb
sub
add
stos
mov
into
or
pop
sti
in
pop
jo
sbb
mov
jmp
cmpsl
push
push
lods
jbe
mov
adc
or
cmp
jle
mov
cmp
push
xor
sbb
mov
jge
jmp
dec
push
push
roll
pushf
push
jbe
xor
xor
pushf
push
cmp
add
push
jmp
dec
push
outsb
mov
fdivs
ret
push
insb
inc
pushf
mov
pop
jge
pop
in
pop
negl
mov
nop
add
sti
lods
xchg
les
js
jae
imul
sbb
aad
cmp
jmp
subb
and
outsb
mov
ja
test
sbb
out
push
sub
jle
pop
cmp
in
orl
cmp
pushw
and
addl
cmp
jbe
sub
mov
jp
xchg
scas
call
mov
add
mov
mov
pop
mov
gs
pop
cmp
adc
push
incb
testl
movsb
pop
mov
mov
dec
cmpl
push
cld
je
cli
and
rclb
fsubrs
mov
stc
push
adc
std
add
mov
std
jecxz
add
pushf
jmp
xchg
movsl
mov
push
cwtl
xor
adc
xor
push
mov
dec
addr16
mov
jmp
mov
add
xor
test
incl
push
cwtl
jge
neg
add
mov
orb
movsb
sub
cmp
dec
les
cmp
adc
nop
pushf
add
pusha
jp
cmp
push
in
into
outsb
jle
lock
xor
lods
pop
ret
les
push
adc
inc
movb
sbb
in
dec
test
cmp
mov
sarl
push
add
cmp
mov
sbbl
add
adcl
jb
mov
dec
mov
xor
mov
or
roll
push
es
decb
mov
mov
ret
and
jne
and
rorb
xchg
pushf
andl
adc
sbb
std
mov
or
lods
push
fnsave
mov
pop
mov
pop
daa
movb
testl
jne
mov
and
jne
mov
jne
test
into
jne
inc
or
cmp
cmp
jne
hlt
int3
and
lcall
inc
cvtps2pi
cwtl
or
add
pop
and
pusha
mov
andb
mov
sbb
les
scas
sbb
cld
or
pusha
or
icebp
dec
lock
loope
jns
dec
ja
aaa
mov
push
data16
subl
lcall
sub
sub
add
jnp
jg
add
dec
add
js
mov
jl
sbb
lock
bound
jmp
lods
push
rcll
clc
lret
mov
into
or
adc
inc
mov
xor
and
les
add
not
fwait
mov
adc
jge
pop
adc
shrl
shl
shr
or
mov
dec
lods
adc
sahf
dec
arpl
jne
int3
movsb
and
insb
mov
mov
das
mov
enter
xor
add
sub
xchg
push
cmp
lcall
ficompl
rolb
pop
in
mov
inc
jmp
call
pop
mov
jle
jb
adc
jnp
ficoml
mov
jo
adc
or
dec
add
cmp
or
sub
pop
dec
sbb
jmp
scas
fidivl
lods
pop
mov
and
les
push
test
data16
or
push
lret
push
add
jmp
sub
add
cmpl
jns
sub
and
mov
les
bound
inc
xor
mov
xchg
xchg
add
loop
jge
inc
add
push
daa
or
repz
lahf
xlat
jmp
or
mov
test
lods
adc
push
jo
or
jmp
inc
jmp
aas
mov
rcrb
cmp
adc
imul
inc
inc
scas
inc
fcoms
adc
mov
mov
cmp
adc
mov
or
adc
dec
pop
mov
stos
or
xchg
adc
inc
pop
adc
cs
or
ss
cmp
je
add
packssdw
inc
xor
mov
dec
cmpb
je
mov
call
sbb
sbb
add
or
mov
out
add
push
add
fcompl
add
test
cmc
pop
jae
sbb
xchg
add
clc
adc
inc
daa
iret
or
mov
pop
ficoml
xor
in
popf
xor
sub
repz
call
fwait
sub
push
add
mov
jnp
cmpsl
adc
gs
xlat
pusha
repnz
jmp
or
or
testb
sub
add
inc
jnp
mov
jmp
jge
sbb
add
xchg
lods
or
add
or
adc
cmp
sub
pop
push
jle
test
lahf
push
cmpl
rcl
adc
clc
add
hlt
aam
pop
mov
les
sub
movb
pop
add
adc
sarb
add
push
cld
loop
adc
push
xorb
mov
in
jmp
sbb
loop
std
or
pop
lret
jmp
sub
add
push
movsl
or
jecxz
mov
xor
xorb
add
pusha
inc
mov
out
adc
jns
les
sub
adc
jl
negb
dec
in
test
or
xor
cmc
cmpsb
add
testb
inc
add
xor
lea
or
sbb
popf
pop
scas
xor
add
cltd
xorl
sbb
fbstp
aam
test
cmp
adc
addb
push
xchg
out
jo
add
push
pop
cmpb
ret
jbe
xchg
clc
fmuls
pop
lcall
sub
adc
jo
add
lahf
adc
movsl
xor
shlb
enter
xchg
xchg
add
inc
push
sbb
sbb
ljmp
cmp
mov
sarl
repz
and
push
add
mov
inc
std
dec
xor
sbb
push
mov
jge
adc
mov
add
jle
lock
fldl2t
call
mov
jge
xchg
mov
pusha
add
adc
pop
push
add
clc
sub
cli
adc
push
push
and
mov
cmpb
in
pop
outsb
fwait
or
loopne
dec
sar
lea
fcompl
enter
jo
add
enter
add
int
ret
adc
pop
push
xor
sbb
enter
xor
loopne
js
push
mov
push
sub
push
dec
mov
xor
leave
and
add
cmpsb
movb
in
or
xchg
inc
and
popf
fcmovb
mov
fwait
jbe
sbb
neg
sbb
jecxz
loop
mov
jg
ret
daa
xor
or
jne
pop
dec
je
sarl
add
mov
or
push
sarb
loop
sbb
inc
xor
cmp
and
or
and
adc
xor
adc
insl
sub
adc
and
mov
push
movswl
shrl
and
and
data16
adc
xor
cmpl
outsl
mov
ret
mov
add
and
adc
dec
shrd
push
jle
pop
pushf
int3
ss
ss
mov
push
cmpsl
clc
mov
or
jg
outsb
cmp
nop
stc
inc
add
dec
lret
cltd
pop
shr
out
xchg
clc
sub
mov
adc
or
mov
inc
call
push
pusha
and
mov
adc
cmp
jo
xchg
lock
sti
xchg
out
and
mov
shll
push
pop
sbb
js
jg
clc
push
or
jmp
cmp
inc
adc
neg
cmp
mov
lock
xor
shll
push
js
add
jbe
dec
sbb
or
mov
test
jne
inc
push
jg
lods
jb
jnp
scas
fs
dec
inc
dec
pop
add
jns
or
or
sbb
mov
inc
pop
mov
adc
jae
stc
mov
in
or
pop
es
mov
inc
fmuls
je
sub
lcall
pop
mov
fwait
mov
loop
call
jb
mov
pop
fbstp
sub
push
lcall
add
push
lock
inc
sub
mov
cmp
and
jge
mov
jne
or
cmp
jl
popaw
inc
add
push
mov
pop
xor
shrb
or
mov
orb
jo
je
pop
mov
push
mov
xor
or
je
push
rolb
jne
cmp
clc
xchg
js
or
inc
lret
jbe
adc
xor
inc
test
lea
sbb
or
dec
fwait
sbb
enter
push
adc
insl
push
jmp
insl
cmp
cld
cld
jl
or
or
lock
fimull
sbb
loop
mov
pop
je
jge
std
add
pop
or
pop
outsb
loopne
mov
in
fs
sahf
add
je
inc
je
mov
insb
sbb
or
call
xchg
pop
dec
xchg
and
adc
add
test
loopne
and
cmp
pop
pop
test
lcall
or
lods
std
pop
call
jne
fmull
insl
push
pop
clc
fstps
add
filds
aam
push
push
rorl
dec
rol
ret
vaesenclast
xchg
movsl
addb
cmp
inc
dec
loope
idivl
xor
dec
sbb
push
dec
inc
add
js
add
ja
leave
clc
jmp
xchg
push
jb
sbb
std
cmpb
jne
jp
sbb
cltd
xchg
jp
rcrl
data16
sub
add
hlt
jmp
mov
xchg
push
cmp
cld
sbb
dec
and
sahf
xchg
pop
call
lahf
xor
mov
rolb
push
push
or
or
ret
subb
sub
int3
rcr
and
add
mov
into
sub
push
fcmovu
xchg
rorb
cmp
outsl
lret
sub
xchg
ds
sub
mov
pop
movsl
in
pop
jp
mov
adc
insl
inc
jg
sahf
movsl
xor
mov
cmpl
pop
int3
loopne
sub
push
push
or
push
data16
mov
mov
mov
push
mov
or
jl
pop
insl
sbb
adc
inc
rolb
mov
push
ret
cld
scas
test
lret
movsb
das
and
sub
je
mov
xor
adc
js
mov
mov
es
cmp
cmp
je
outsl
int
lock
and
stos
iret
or
or
xchg
push
mov
icebp
mov
mov
pop
movb
nop
add
xor
and
sub
xchg
or
aam
jne
push
push
jmp
or
jmp
testb
je
push
ljmp
adc
and
xor
xor
sbb
xchg
stos
int
jae
movsl
pusha
push
xchg
cmp
jne
loop
cmpsb
outsb
test
adc
add
fimuls
xchg
rorl
xor
sub
or
sub
sub
data16
push
incl
ja
add
or
pusha
sbb
lea
adcl
or
add
dec
jno
sub
mov
push
mov
push
decb
js
dec
push
add
lods
sbb
mov
mov
push
jecxz
push
push
mov
movsl
add
sub
imull
jne
cmc
iret
mov
cwtl
push
jp
sahf
xchg
pop
arpl
lods
adc
out
or
add
push
hlt
xor
add
popa
mov
add
ljmp
int3
add
ret
push
xor
adc
xlat
add
jge
notl
sub
cmp
push
movsb
loope
ret
lret
ss
mov
das
add
fisubrs
jl
dec
fiadds
jnp
clc
arpl
or
add
pushl
cmp
jns
dec
cld
sbb
inc
jmp
pop
add
dec
push
add
dec
lods
pop
dec
push
and
cmp
sti
and
push
or
sub
push
or
cmp
pop
shlb
movd
mov
mov
mov
enter
jo
and
fsin
mov
cmc
and
js
mov
jmp
adc
insl
jnp
cmp
pop
testl
xor
pop
pop
fldenv
lea
mov
push
ret
inc
jmp
mov
sbb
lea
dec
rorl
push
lea
inc
inc
xor
lods
cltd
mov
sub
mov
dec
movsb
xchg
mov
jmp
dec
rcrb
bound
or
xchg
jno
adc
sysexit
ss
lods
and
ljmp
inc
jmp
push
lods
out
mov
fwait
push
add
push
arpl
adc
mov
adc
test
aad
leave
pop
andl
fabs
push
pop
decl
leave
fcomps
xor
push
xor
pop
or
enter
add
lret
dec
movb
insb
sbb
xchg
mov
out
imul
loope
outsb
bound
out
push
subb
pop
xor
jmp
pushf
sbb
sti
and
repz
cmp
mov
cmc
mov
cmp
mov
ja
push
mov
sub
push
push
xor
mov
adc
push
in
icebp
mov
mov
xchg
adc
lea
aad
lret
pop
add
cmp
lea
or
jp
shr
add
or
add
sub
cld
mov
jmp
shr
or
mov
add
push
int3
mov
xlat
bound
scas
push
bound
sti
in
stos
mov
sbbb
inc
sbb
and
js
rcr
or
fldln2
cwtl
add
int3
cld
push
push
idivl
push
cli
adc
fnstcw
inc
jl
add
fsubrl
ds
ja
inc
dec
add
lea
mov
shr
push
mov
mov
adc
sub
push
mov
xor
mov
inc
sub
add
xchg
and
lret
cmp
iret
adc
out
or
sar
inc
jbe
sbb
dec
pop
daa
push
pop
rcr
jle
in
jmp
cmp
shr
adc
xchg
or
shl
andl
adc
rcrl
push
sarb
ds
cli
loopne
sbbl
int
loope
test
adc
ficoml
dec
call
dec
sbb
shrb
sbb
push
xor
movsb
ficoml
fmul
popa
mov
mov
xor
insb
in
push
mulb
jne
dec
cmp
or
xor
test
add
add
call
or
ss
adc
adc
mov
lret
mov
cmpsb
mov
sbb
pop
dec
pushf
fldl
aam
and
mov
jle
subl
ja
cmp
pusha
add
mov
mov
cmp
out
push
nop
mov
std
fildll
je
cmp
lock
jl
cmpb
jl
push
outsb
mov
cmp
adc
xor
inc
xchg
adc
xchg
push
fsts
push
and
aad
cli
mov
rcll
inc
push
push
mov
push
push
dec
pop
add
mov
or
stos
xor
cld
aam
push
or
or
adc
xor
jmp
or
pushf
pop
cmp
jbe
scas
shrb
fs
and
shl
or
or
sbb
jne
mov
xor
lret
add
shll
jmp
je
mov
shlb
scas
or
xor
xor
mov
xor
and
loop
loopne
inc
adc
rclb
les
push
jl
out
movsl
xor
cmp
or
hlt
mov
les
jae
pop
and
inc
or
aad
mov
pop
int3
add
push
xor
das
hlt
iret
push
in
imul
inc
push
neg
lahf
ja
lock
sbb
sub
inc
fnstcw
jns
sbb
xor
xchg
fwait
aad
adc
or
sbb
push
push
dec
imul
rcr
aad
icebp
and
adc
jne
fs
insb
cmp
pop
jne
pop
pop
pop
add
pop
mov
cmp
jae
or
jae
lods
rcl
ljmp
dec
and
shr
mov
fimull
mov
jmp
das
ljmp
lock
je
push
mov
je
cld
add
xchg
push
cmp
cpuid
nop
push
sbb
adc
push
pop
mov
sub
push
test
push
nop
ss
xchg
push
sbb
xor
sbb
sbb
gs
int
sbb
into
jbe
jns
movsl
add
jmp
bound
jne
cmc
aam
sbb
outsb
std
cmp
daa
push
or
adc
inc
cltd
and
ds
sub
loop
push
and
fwait
mov
push
es
xor
out
adc
inc
insl
test
adc
adc
gs
or
cmpsl
sahf
mov
stos
cs
fidivs
sbb
cld
and
jno
ss
dec
pushl
dec
out
ss
hlt
pop
push
lahf
add
adc
inc
or
movsl
adc
arpl
jne
cmp
testb
and
jmp
fists
or
jg
jmp
je
leave
mov
mov
mov
xchg
in
pop
je
test
fisttps
add
out
push
cmp
ja
add
cmp
adc
fcomps
loopne
or
push
jge
je
mov
cmp
pop
xor
pop
add
or
add
push
aad
mov
mov
addl
and
in
fbld
outsl
sbbb
sub
fimuls
inc
dec
sbb
lea
inc
imul
je
fildll
push
xor
enter
nop
cmp
pop
int
jmp
xor
add
pop
mov
sbb
and
jne
pushf
ret
adc
cltd
cmp
jo
in
arpl
imul
mov
test
jns
cmp
mov
imul
inc
adc
lcall
test
add
xor
or
pop
imul
mov
in
and
test
add
and
push
lock
add
sbb
or
pop
nop
jg
xchg
add
push
sarl
repz
rcl
aad
insb
ds
repz
fcomp
fstpt
scas
inc
inc
inc
shlb
andb
inc
add
add
ss
data16
and
xor
dec
sub
shl
mov
fwait
std
lea
mov
mov
add
push
pop
push
inc
and
out
adc
push
ret
out
pop
sub
hlt
add
mov
jb
je
test
in
pusha
call
ret
adc
cmp
das
or
pop
xor
push
push
sub
push
cwtl
sbb
sub
jg
adc
push
dec
jecxz
and
push
mov
imul
or
ljmp
sbb
dec
lea
sar
inc
inc
sbb
or
bound
bound
sbb
xlat
sbb
or
out
push
test
sbb
cmpb
testb
repz
call
adc
push
mov
adc
sti
add
es
ficoms
dec
stos
pushf
push
cmpl
adc
jo
nop
ret
or
dec
movb
xchg
or
sub
add
hlt
pop
ljmp
or
decb
or
mov
and
lea
pop
sbb
movsb
subl
jae
xchg
sub
filds
mov
outsl
xchg
and
mov
add
divl
sarl
ljmp
ss
inc
or
loop
inc
or
mov
mov
jne
or
rolb
test
rolb
push
mov
fstps
dec
fmull
not
dec
xchg
mov
push
push
or
andl
frstor
ret
movsb
jns
bound
mov
push
addl
xor
cmpsb
cwtl
mov
jge
jl
loop
imul
rol
add
or
jle
jle
or
insb
scas
jne
fcmovbe
or
sbb
add
or
loop
fstps
loopne
cmp
or
cmpb
jg
or
cmp
movsl
adc
inc
xchg
mov
daa
cltd
jb
inc
lods
pop
mov
shrl
jecxz
adc
out
mov
jmp
and
inc
push
dec
adc
or
test
test
div
cli
enter
cli
inc
cli
div
mov
pop
mov
or
popa
inc
sbb
loopne
lret
or
jnp
sbb
ret
fcoml
adc
push
add
aaa
test
mov
sbb
shll
or
and
pusha
mov
xorl
rolb
xchg
cmpsb
mov
mov
xor
xor
mov
inc
add
mov
stos
mov
add
and
jge
pushw
cmp
loop
out
jge
enter
xchg
mulb
test
inc
nop
add
and
mov
xor
call
xor
dec
or
jns
inc
shlb
fdivrs
aam
inc
nop
and
and
jge
and
mov
adc
mov
scas
add
xor
or
call
sub
xor
cld
lea
push
jns
sub
fnstcw
pop
xor
rcll
lods
rolb
dec
les
cltd
add
imul
sahf
mov
sbb
imulb
sbb
mov
test
enter
mov
out
or
adc
orl
inc
lock
movsb
adc
cmp
jne
xchg
dec
les
jne
sub
je
loopne
inc
inc
mov
add
jb
xchg
xor
mov
push
xor
sub
cld
mov
scas
movb
inc
pop
xor
push
mov
push
add
push
nop
sbb
and
jecxz
call
fbld
push
out
adc
cwtl
shlb
gs
sbb
pop
shr
cmp
mov
popw
sub
shll
adc
mov
sbb
neg
and
rcrl
call
test
loopne
fadd
xchg
std
mov
pop
add
and
xor
mov
cltd
into
xchg
pop
cmp
aas
pushf
lret
shr
sti
and
pop
int
xchg
mov
add
or
mov
stos
xchg
or
xor
les
enter
nop
inc
js
sbb
mov
fimull
add
enter
xchg
sahf
mov
cmp
push
shlb
add
pop
add
add
mov
add
add
in
rcll
into
or
mov
inc
test
sahf
adc
pop
in
dec
nop
pop
cmc
cmpsl
decl
add
xor
inc
cmpb
or
add
dec
in
pushf
les
mov
add
rclb
incb
sub
orb
pusha
mov
movb
mov
jmp
xor
dec
mov
jb
mov
lock
pushfw
adc
dec
inc
ret
and
add
push
add
inc
jbe
pop
mov
aam
inc
or
test
add
add
cmpsb
mov
jp
mov
mov
adc
call
push
imul
cmp
or
out
or
jmp
cmpsl
outsl
fs
iret
xchg
push
or
dec
or
or
sbb
cltd
scas
pop
pop
scas
add
adc
inc
xchg
mov
andl
lret
push
xchg
lcall
or
xchg
dec
add
add
mov
lea
ret
mov
mov
andb
cmp
xor
into
pusha
jmp
and
inc
into
mov
incb
pop
and
pop
pop
xor
testb
pop
shll
or
add
mov
cmp
xor
inc
push
pop
jae
or
or
imul
or
xchg
mov
add
cmpsl
inc
inc
mov
mov
mov
and
pop
mov
or
dec
pop
push
xchg
jp
scas
push
add
popf
jmp
pop
and
and
and
and
sbb
or
push
sti
lret
add
movb
or
and
inc
push
in
daa
popa
inc
mov
mov
cld
sbb
sub
or
adc
out
push
inc
stos
jg
adc
faddl
xchg
daa
jmp
cmp
test
out
add
push
into
in
stmxcsr
test
push
dec
bound
cltd
ss
or
imul
add
loopne
pushf
sbb
xchg
jnp
call
mov
xor
inc
jg
into
into
dec
cmc
test
into
mov
fstpl
and
sub
push
pop
imul
cwtl
pop
mov
nop
int3
or
shlb
or
push
pop
adc
jle
sub
ds
lds
mov
or
lcall
fiadds
out
adc
add
in
jns
add
add
test
and
xor
ret
xchg
and
mov
pop
jo
mov
sub
jmp
jmp
lret
ret
test
push
xor
xchg
incb
push
push
scas
sub
push
pop
or
and
pushf
add
shll
rol
fmul
jl
fsubrl
cmp
call
push
dec
test
xor
inc
or
loop
lret
sub
nop
mov
es
ret
sbb
sub
xlat
jle
and
nop
pusha
cmpsb
js
or
and
sbb
xchg
adc
jge
addr16
sbb
xchg
jl
or
ret
inc
mov
icebp
test
cmpxchg
mov
ljmp
dec
sbb
sarb
cmp
push
loop
inc
dec
cwtl
orb
pop
sbb
jmp
and
mov
sub
add
add
mov
dec
ds
je
nop
fisubrs
push
test
mov
cmp
mov
aad
cmp
jbe
inc
inc
fsubrp
jmp
pop
out
leave
nop
jb
jle
mov
lds
xchg
popa
imul
mov
jnp
mov
jo
jbe
js
loope
into
test
fcomp
xor
or
xor
cmp
cmp
movsl
xor
sub
pop
cmpb
sbbb
jnp
jo
cmp
mov
mov
lods
test
adc
or
push
mov
scas
inc
lock
ret
xlat
out
add
ss
adc
je
fdiv
or
test
push
xor
mov
ja
pop
and
sub
hlt
popf
xchg
fcoms
movb
stos
pop
mov
fsub
pusha
xor
sub
shrw
sub
adc
shlb
xchg
test
push
rclb
fcoml
fwait
popf
jbe
jmp
xchg
push
cltd
in
inc
sbb
clc
fsubr
test
push
pop
jge
pusha
or
and
mov
insb
lock
pusha
push
pop
push
imul
dec
enter
rorb
and
je
add
add
dec
leave
jae
lods
push
shll
gs
xor
inc
das
dec
push
dec
std
adc
loopne
test
adc
or
sbb
jo
cs
add
mov
xlat
scas
sbb
sbbl
cmp
and
and
push
sub
mov
ds
add
mov
mov
popa
sar
imul
ret
push
sub
call
inc
pop
stos
ss
pop
or
mov
mov
inc
aas
lods
jne
jo
movsb
adc
push
out
mov
push
xchg
xor
sti
gs
jbe
pop
fisubrl
add
push
sub
adc
mov
test
outsb
cmp
cs
mov
cmp
lret
add
loop
push
fsubs
mov
add
out
push
pop
xchg
clc
mov
or
sub
aam
mov
jns
rorb
popa
sbb
dec
ret
imul
fnsave
shr
aaa
pop
adcb
jg
xchg
arpl
inc
jl
xor
push
lock
and
or
push
jecxz
jl
and
xor
ss
or
int3
sub
fadd
adc
xor
sbb
pop
nop
js
sti
flds
mov
out
stos
loopne
jmp
dec
loop
add
push
das
movsb
fisttps
inc
xchg
sub
cmp
scas
push
sub
js
cli
adc
movsb
or
mov
pop
movl
push
inc
js
sbb
loop
sbb
inc
sar
inc
and
sbb
push
das
shlb
loope
shrb
push
aas
sub
sub
add
into
mov
push
imul
shll
adc
ljmp
add
pop
sahf
cmp
inc
hlt
xor
mov
inc
add
sub
mov
push
lock
mov
pop
push
adc
sbb
lock
inc
inc
ds
push
mov
mov
and
or
cmp
pop
adcb
xor
loop
rcrb
push
or
out
dec
or
pop
mov
fisttpll
loopne
add
daa
xor
mov
in
adc
adc
sub
js
popl
xorb
shlb
sbb
lea
cmp
and
inc
mov
and
push
xchg
mov
and
ret
pop
gs
sbb
pop
sbb
mov
aad
push
div
cvttps2pi
mov
test
cmc
dec
pop
je
daa
add
fld
adc
insb
sar
cmp
push
and
jmp
fldcw
testb
lahf
cmp
mov
test
cmp
lcall
adc
ret
jbe
adc
pop
xchg
orb
je
and
rcrb
sti
arpl
add
rcrb
loopne
mov
adc
iret
dec
mov
in
stc
mov
xchg
push
pop
ret
push
ljmp
sbb
ret
addr16
sbbl
mov
pushf
call
xchg
dec
in
in
call
sbb
xchg
or
mov
xchg
dec
jb
in
cmp
outsl
and
dec
sub
mov
pop
imul
xor
inc
sub
add
mov
int3
jecxz
pop
add
orb
xchg
or
shlb
in
add
in
mov
and
or
mov
lock
adc
or
rcll
xor
or
adc
gs
rcll
testb
pop
dec
or
lock
or
pop
add
dec
pop
fcoms
pop
incl
dec
adcl
jne
test
adc
mov
in
js
cmp
ja
pop
xchg
pop
dec
mov
adc
mov
sub
cmp
movsb
dec
inc
stc
pop
outsb
xchg
inc
adc
bnd
andb
add
xor
and
mov
sti
or
shr
cmp
add
sbb
pop
insb
xchg
mov
or
dec
push
out
and
loop
add
fwait
cmpsl
jb
push
add
or
in
add
dec
sub
mov
xor
sbb
call
mov
sub
test
aam
jb
movsb
xchg
in
pop
add
test
in
movups
xor
pop
movsl
add
pop
fadds
sbb
test
popa
outsl
fmull
shlb
add
mov
push
aad
aam
lock
pop
hlt
add
bound
pop
xor
in
inc
pop
in
inc
mov
hlt
rclb
xor
mov
inc
jbe
movsl
and
stos
scas
and
push
add
js
gs
inc
jmp
inc
xor
dec
or
aaa
adc
arpl
rcll
cmp
fs
sarb
imul
pop
loopne
sub
jl
cltd
mov
dec
aam
mov
xor
cmp
data16
sbb
inc
shrb
orl
int3
add
push
daa
adc
adc
and
adc
xor
and
and
leave
and
dec
xor
and
dec
xor
inc
mov
dec
fs
fld
insb
add
cld
popa
gs
sbb
add
mov
les
enter
inc
int3
rcrb
es
loopne
lret
pop
enter
hlt
inc
data16
lcall
dec
lcall
push
mov
cmpw
sbb
dec
mov
add
jecxz
dec
pop
scas
cmpsb
xchg
cld
shl
test
aam
dec
xchg
arpl
push
fs
aad
or
pop
push
pop
test
xchg
pop
repnz
fcomps
sbb
push
fiaddl
fwait
aam
xor
inc
push
adc
cmp
les
xchg
sbb
aad
loop
add
imul
jl
aam
push
add
or
inc
test
and
or
mov
xor
das
add
and
and
movsl
mov
in
and
insb
cmp
mov
or
pop
enter
dec
imul
mov
imul
or
adc
insb
imul
call
add
inc
xor
jmp
pop
in
xchg
jl
mov
in
adc
insl
cmc
aam
enter
insl
call
add
fs
pop
call
add
fsubrs
push
adc
push
adc
adc
pushf
dec
outsb
out
lock
pop
jp
sbb
arpl
movq
xor
mov
gs
inc
sub
sbb
fcoml
or
sahf
xchg
xor
mov
sub
les
cli
sbb
insl
mov
adc
and
mov
pop
loop
leave
out
or
sti
int3
out
sub
jae
sub
sub
fisttps
push
mov
mov
cwtl
lock
stos
int
add
mov
dec
lods
imul
mov
sahf
fcom
or
jnp
mov
dec
imul
jb
jb
test
lods
mov
jb
jb
mov
jb
jb
int3
rcl
les
lret
stos
jno
adc
cmp
push
imul
stc
ds
sarb
ret
sbb
dec
ret
add
movb
jl
or
pusha
xlat
test
lcall
jb
mov
scas
call
push
test
mov
jae
das
nop
mov
imul
pop
aas
rsm
xchg
or
cmpsl
or
or
lahf
mov
clc
jae
cmp
je
sbb
call
jns
cmp
enter
je
or
push
test
sbb
fcom
unpcklps
inc
adc
sbbl
nop
daa
ret
mov
mov
jne
xchg
push
arpl
stc
mov
rcl
xor
mov
movnti
outsb
xorb
cmp
fisttpll
sti
cmp
inc
inc
das
enter
mov
mov
xchg
test
in
ljmp
pop
fwait
and
mov
out
add
out
push
and
loop
push
or
xor
mov
jmp
pusha
mov
inc
push
and
add
pop
in
mov
sub
xchg
sub
pop
xchg
adc
jb
ss
cltd
pusha
inc
add
jb
inc
xchg
dec
fwait
je
js
inc
fs
mov
adcb
ja
add
xchg
dec
adc
add
lock
data16
sub
lea
mov
mov
jo
dec
lods
adc
mov
push
and
fimull
cmp
pop
lock
push
mov
push
loopne
aas
lock
rcrl
mov
jns
mov
xlat
or
dec
out
inc
idiv
cmp
sub
add
sbb
dec
test
nop
add
push
jb
add
dec
mov
add
in
jne
pusha
rcrl
sbb
inc
int
lahf
sbb
pop
pop
call
in
add
fnstsw
fadds
nop
ss
mov
decl
add
pop
add
fisubl
movd
adc
je
in
mov
lcall
adc
sbb
cs
mov
iret
je
inc
es
sbb
fwait
js
adc
loopne
or
jnp
inc
xchg
movsl
or
inc
push
cmp
or
or
cmp
nop
or
or
loop
xchg
inc
or
rcll
aaa
push
xor
add
lock
test
jge
in
mov
pop
pop
jo
enter
add
adc
sbb
push
inc
icebp
rclb
sbb
orl
mov
mov
stos
push
sub
aas
aam
xchg
in
xchg
xchg
or
jle
imul
jnp
jg
dec
xchg
scas
jne
and
push
cmp
cmp
insb
or
sbb
or
lock
pop
int3
mov
jno
add
push
xchg
cwtl
arpl
xchg
lods
nop
incb
cmp
xchg
xchg
sbb
or
das
and
pop
lock
push
pop
aam
test
fwait
mov
add
adc
mov
xchg
xchg
adcl
and
pop
loopne
xchg
cmp
dec
jbe
aad
adc
insb
mov
orl
loopne
mov
adcb
sub
sarb
push
or
js
mov
jmp
cmp
cmp
sarb
mov
bound
cmp
cwtl
mov
cmpsb
addr16
dec
outsl
movsb
sub
imul
test
orl
adc
adcl
aam
das
ret
adc
inc
mov
or
aaa
movsb
dec
add
jne
loope
ds
jno
push
mov
outsb
xchg
test
xor
fcoml
fisttpll
mov
mov
fcoml
loope
icebp
daa
test
mov
add
xchg
cwtl
test
test
adc
rcll
rorl
adc
jne
repz
addl
or
sub
fadd
loopne
adc
enter
dec
xor
aad
and
call
js
xchg
lea
popf
dec
mov
push
mov
inc
xor
push
lcall
xorl
orb
call
inc
in
inc
je
jne
fdivr
dec
inc
dec
jae
xchg
mov
pop
nop
popa
pop
mov
mov
xchg
adc
js
inc
fsubs
mov
inc
cmp
add
pop
in
aas
pextrw
dec
aad
je
maskmovq
testl
inc
shrb
pop
push
inc
rcr
mov
jno
cmpsl
sbb
add
fcoml
mov
add
push
add
faddl
dec
xchg
xorl
aam
in
sbb
mov
fcoms
ret
xor
fadd
xchg
std
xchg
ret
jae
inc
jb
aaa
in
movsl
or
cmp
fimuls
mov
mov
sbb
faddl
call
xlat
data16
sbb
mov
paddsb
arpl
nop
out
int3
dec
mov
mov
enter
fadds
das
mov
mov
pop
or
and
ret
ret
inc
cwtl
or
lock
mov
mov
dec
cwtl
inc
sahf
sub
fsubs
fcom
adc
fmuls
adc
or
mov
rcrb
pop
and
xchg
jno
mov
stos
je
fadds
inc
and
fs
jb
xchg
mov
jne
adc
xor
push
fcoms
adc
sbb
les
add
aaa
dec
je
adc
or
imul
dec
sub
pop
adcb
loope
xor
and
add
add
aam
dec
sar
cmpl
lds
jns
in
push
pop
or
add
out
or
ret
mov
test
in
xchg
nop
xorl
mov
flds
imul
sbb
push
fdivrl
mov
test
das
fsubs
cmp
inc
int3
fs
subb
inc
rcrb
fidivs
or
inc
xor
aas
sbb
or
inc
push
mov
jno
out
loopne
or
fadds
scas
les
pusha
les
scas
or
xchg
fildll
push
adc
dec
lahf
sbb
fldl
scas
pop
sub
iret
mov
mov
shll
ja
push
add
inc
push
push
jnp
call
fstl
test
dec
arpl
dec
inc
adc
iret
scas
inc
faddl
lahf
pusha
xchg
or
sbb
xchg
xor
cmp
push
xchg
lds
push
or
lock
mov
and
in
test
adc
test
push
xor
pop
jo
insl
mov
lods
mov
fsubrs
arpl
das
adc
mov
mov
sbb
sbb
addr16
cwtl
adcb
movsb
mov
pop
pop
xor
aas
imul
or
push
pop
or
cld
arpl
adc
and
add
sub
sub
pushl
lods
lods
daa
ret
xor
push
add
enter
sub
lret
test
lea
xlat
lods
pop
mov
inc
add
movsb
nop
or
pop
add
and
pop
mov
mov
xchg
lcall
fistps
pusha
or
je
mov
jne
mov
or
test
mov
mov
mov
and
mov
scas
pushf
cmp
test
or
mov
in
pop
push
mov
lock
fwait
das
nop
mov
rcrb
dec
and
scas
adc
pop
and
nop
out
call
ds
aas
test
adc
fs
pusha
jo
lea
mov
out
mov
repz
jns
out
out
cmp
enter
stos
dec
mov
ret
fcom
sub
add
rcll
mov
imul
rorb
mov
sahf
cltd
xor
push
dec
cld
push
les
or
pop
xor
add
aam
sbbl
push
or
ja
bound
jns
lahf
test
mov
mov
pop
call
adc
fisttps
pop
push
mov
outsl
or
imul
cmp
mov
sbb
add
outsb
sbb
push
fsubs
fwait
nop
sub
mov
enter
cmp
andb
xchg
aad
sub
jo
aam
xchg
adc
pop
in
cmp
inc
icebp
addb
in
adc
int3
xchg
mov
jo
imul
int3
mov
push
aam
pushf
or
jb
sub
movsb
mov
mov
roll
daa
arpl
mov
add
push
test
ljmp
imul
rcrl
xor
movsl
mov
fmuls
inc
pop
insl
pop
inc
jno
adc
lcall
or
loope
les
pop
xchg
mov
mov
mov
je
aaa
or
bswap
insl
in
pusha
dec
adc
sbb
mov
mov
pop
xor
nop
popa
dec
pushf
cmp
movsb
rorb
negl
adc
nop
xor
fildll
ret
inc
faddl
cwtl
jbe
mov
out
xor
pop
and
pushf
nop
xlat
inc
add
mov
add
enter
adc
xchg
add
xlat
movsb
jb
mov
or
cwtl
dec
in
es
subb
xor
jo
lea
mov
cli
pop
enter
enter
aaa
pop
mov
jg
cmpsl
fucomip
roll
jno
das
inc
mov
xchg
mov
fcoml
sub
cmpsl
add
out
mov
fs
sub
xor
add
jmp
or
add
sbb
mov
mov
mov
ret
lock
ss
inc
mov
test
adc
mov
xchg
sub
push
xor
shrb
popl
adc
pushf
sub
xor
pop
lods
cltd
ss
mov
adc
daa
xchg
fsubl
andb
leave
and
dec
cwtl
xchg
mov
inc
cltd
xchg
cltd
push
test
lock
enter
and
or
inc
inc
pushf
pop
mov
sbb
cmpsl
push
adc
inc
mov
xchg
inc
pop
mov
scas
add
and
jb
add
add
xchg
or
enter
adc
and
jno
adc
aaa
cmp
inc
mov
dec
testl
ret
cmova
pop
mov
dec
pop
fdivs
lret
mov
lret
xchg
in
add
xchg
or
xchg
add
ja
jo
cwtl
or
call
jo
xchg
fsubrs
adc
inc
in
inc
sub
repnz
nop
pop
faddl
andl
cmpb
xchg
jl
add
push
jbe
fdivrl
std
xchg
btr
insl
or
das
fildl
or
dec
loopne
leave
mov
wrmsr
ss
test
mov
or
leave
xchg
stos
add
cmp
scas
int
loopne
rclb
xchg
inc
mov
fs
push
or
add
test
xchg
sub
jg
and
mov
jno
add
adc
in
and
nop
dec
fisubrl
call
adcl
or
push
in
add
cltd
mov
ss
or
andb
lock
jno
movsl
cs
push
mov
push
rolb
jo
jmp
mov
mov
or
or
dec
sbb
nop
enter
call
lds
loopne
adc
enter
stos
pop
lds
loopne
scas
add
stos
lods
dec
mov
test
bound
fwait
pop
mov
test
cmp
inc
or
icebp
clc
cmp
test
inc
mov
mov
test
inc
cmpsb
adcb
add
xor
cmpsb
ficoml
insb
jne
insl
sub
les
cmp
lds
cmpsl
xchg
inc
sub
dec
and
in
mov
addl
xchg
inc
sub
push
pop
adc
push
fwait
push
loop
mov
hlt
test
xchg
lret
in
xor
mov
add
rclb
test
shl
nop
or
dec
dec
and
fdivp
mov
roll
xorb
sbb
lcall
outsb
stos
je
outsl
fwait
mov
adc
sar
xor
mov
cmpsb
dec
xor
pop
es
fs
insb
hlt
pop
push
cltd
fs
dec
js
dec
add
inc
es
jo
and
movsb
in
movsb
clc
inc
pusha
xor
jecxz
fcoms
or
rol
ljmp
cwtl
pusha
push
lret
loopne
and
adcb
andb
inc
cmovl
andb
dec
je
leave
and
cwtl
aam
add
xchg
dec
enter
push
mov
mov
enter
adc
scas
lea
adc
in
jno
pop
cmp
push
ljmp
mov
xor
mov
push
push
mov
xor
mov
jg
pop
orb
mov
mov
mov
call
and
test
test
js
mov
lahf
aam
es
pop
mov
leave
pop
sub
or
loopne
sub
mov
aas
outsl
mov
fs
and
push
pop
pop
inc
inc
inc
push
mov
movsb
call
add
pop
test
prefetcht1
je
mov
xor
in
cmp
movsl
stc
fs
aam
shlb
shlb
in
jmp
add
xchg
pusha
cmpsl
cltd
int3
push
xor
pop
inc
lock
mov
jno
sub
ficoml
lock
sub
mov
scas
adc
movsb
repnz
movsl
lods
test
add
sub
pop
pop
loopne
xchg
dec
cmpsl
loopne
call
dec
sbbl
or
movl
js
nop
or
lods
int
cmp
shlb
call
sub
add
or
mov
andb
jmp
mov
xchg
pop
pop
call
jo
or
das
add
cwtl
dec
fwait
xchg
xchg
adc
enter
leave
mov
push
ret
or
push
imul
sub
cmp
fisubl
lahf
cmp
mov
mov
xchg
add
lock
scas
and
pop
in
call
sbb
loopne
hlt
dec
rcl
push
push
adc
adc
push
xchg
jno
les
in
cld
dec
enter
or
fcom
sbbb
inc
clc
and
scas
pop
enter
pop
insl
adc
dec
mov
aam
jo
sbb
fwait
adc
pop
or
push
pop
dec
xor
hlt
cli
mov
sti
cltd
in
inc
cld
cli
scas
fs
fs
dec
es
dec
popf
fs
add
add
xchg
jbe
adcb
push
rorl
sub
pusha
sti
mov
fwait
ss
inc
and
adc
test
pop
and
sbb
sub
inc
inc
dec
rorl
cs
adc
and
outsl
rorb
fisttps
xor
test
loop
add
iret
mov
mov
sbb
ror
xor
loopne
les
roll
inc
push
push
push
adc
xor
dec
adc
jmp
int
sbbb
enter
and
pop
lods
pop
jp
inc
sbb
sub
push
push
fsubrs
sub
xor
sbb
pop
mov
sub
adc
pop
lret
fdivrs
or
cld
cmpb
addb
xchg
mov
pop
mov
and
roll
ret
mov
push
jle
daa
push
pop
inc
aam
jle
adc
add
aaa
int
iret
scas
std
and
lret
mov
sub
pop
push
in
icebp
push
adc
mov
xor
push
dec
mov
test
adc
dec
and
pusha
or
sub
push
dec
pop
add
mov
in
mov
pop
sbbl
push
mov
mov
mov
pop
out
dec
sbb
pop
adc
lret
mov
mov
fistpl
push
jl
out
loope
cmp
cmp
sbb
lods
fsubs
xlat
mov
out
pop
or
jl
inc
add
repz
jmp
mov
mov
rolb
mov
adc
sahf
out
and
aaa
dec
data16
cs
adc
icebp
inc
add
bound
cmp
push
mov
aas
inc
sub
cs
incl
mov
ljmp
add
fistpl
or
test
clc
jnp
mov
add
and
repz
inc
mov
test
cmpb
iret
js
pusha
pop
dec
ljmp
sahf
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
aaa
sbb
and
pop
pop
jmp
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
xor
xor
ss
cmp
sub
out
pop
das
mov
rcll
xchg
adc
push
sbbb
or
cmp
rclb
cmpl
negb
push
pop
xchg
lods
fs
jg
out
enter
dec
outsb
je
popf
jge
pushl
outsl
arpl
fs
out
sbb
push
dec
imul
xorl
jae
cmp
jb
gs
xor
cs
std
out
fs
insb
push
bound
and
pop
popa
je
outsl
outsb
dec
or
add
testl
adc
pop
in
incl
sub
jg
out
cmp
inc
js
je
jb
arpl
jae
mov
or
outsl
add
add
mov
add
push
gs
push
je
mov
subl
inc
jne
jb
mov
outsb
pop
aam
in
dec
xor
xor
jle
std
cli
cmp
cmp
dec
and
sti
scas
imul
push
dec
push
cmp
orb
gs
insl
bound
daa
dec
outsl
fadds
dec
arpl
push
jo
sub
jne
jne
dec
jne
xchg
mov
jl
xchg
inc
jo
imul
fstl
xorl
insb
adc
into
mov
xchg
jae
mov
addr16
push
data16
out
jne
xor
in
int
mov
daa
push
scas
clc
sbb
pushf
insl
aas
lds
and
jbe
out
pop
dec
inc
ds
popa
das
jo
mov
pop
fildll
sub
lock
pop
dec
mov
and
mov
pop
fisttpll
mov
add
mov
std
aas
inc
dec
out
and
sub
sub
cs
push
push
pushl
ds
inc
das
pop
adc
mov
cmp
fs
jnp
jge
jg
cmp
inc
test
lds
addr16
and
push
pop
or
jnp
movl
aaa
xor
jae
cs
fs
dec
xchg
jl
mov
inc
inc
mov
fwait
and
xor
insl
and
fldcw
add
jbe
dec
push
push
sbb
pop
mov
fimuls
inc
and
pop
mov
jle
push
xor
sbb
push
jo
imul
push
pop
mov
je,pn
adc
and
mov
in
je
sub
and
fs
add
imul
cs
push
insb
xorb
inc
popa
and
xor
scas
mov
sbb
xor
and
mov
push
xchg
int
aas
xor
or
scas
loopne
dec
mov
lcall
imul
dec
mov
and
or
dec
inc
jnp
imul
push
pop
cmp
xlat
loopne
fs
xchg
mov
add
and
push
add
cmpb
fisubrl
imul
jb
loopne
outsl
data16
aaa
cmpb
mov
addb
das
arpl
jo
subb
push
arpl
insb
or
outsb
mov
stos
in
cmp
inc
xchg
insb
imul
out
xor
int3
or
xor
cmp
push
lcall
mov
or
xor
mull
sarl
sbb
cmpsb
xchg
add
xor
shll
xor
xchg
cmp
pop
dec
xor
inc
add
aaa
inc
popa
push
add
ja
outsl
enter
outsl
ss
mov
jo
cli
jbe
add
test
xchg
push
mov
xor
push
gs
or
lds
xor
out
inc
jle
jb
mov
outsl
push
or
arpl
jb
pushf
ficomps
movl
push
inc
mov
fwait
or
sbbb
das
imul
pop
or
stos
jle
add
rclb
leave
call
insl
imul
cmp
adcl
in
fadd
inc
enter
push
and
push
cmp
pop
mov
sub
push
jae
xor
mov
fsubl
out
mov
test
test
jb
push
loopne
jle
sub
lret
inc
sub
pop
dec
push
jmp
jmp
jo
and
ja
mov
cmp
cwtl
ja
ds
inc
inc
cmp
inc
and
dec
cmp
pushl
lcall
loopne
imul
jg
push
rcrb
das
lret
jno
icebp
pusha
inc
mov
adc
ret
movsl
add
xorl
jae
jae
push
loop
imul
and
cmpsb
gs
popa
dec
es
cmp
enter
popa
sahf
imul
js
jae
je
pop
dec
mov
lock
add
add
xchg
xchg
jecxz
jae
imul
xchg
adc
add
add
adc
add
add
add
add
xor
cmp
pop
or
aaa
fnstcw
pop
hlt
and
or
pusha
add
out
int3
mov
or
sub
add
div
in
sbb
addb
add
xchg
mov
add
orb
fildll
cmpb
push
and
sub
jb
lods
fnstcw
adc
push
jo
add
push
mov
inc
lods
inc
push
xor
dec
stos
int3
js
jo
lcall
or
sbb
cmp
lea
mov
nop
xchg
xchg
mov
push
shll
fiaddl
dec
sub
sub
dec
jo
adc
pop
add
or
pushf
adc
or
pushf
jo
dec
pop
daa
pushf
jo
data16
nop
jns
insb
mov
lret
lcall
xlat
in
stos
sub
add
and
in
push
xchg
adc
addl
jg
add
add
xor
add
inc
push
add
add
add
add
mov
ja
cmp
cmp
adc
or
add
or
out
lcall
add
test
decl
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
ljmp
scas
mov
mov
mov
mov
mov
mov
ret
enter
dec
lret
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
ljmp
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
push
test
cmp
roll
xor
add
fsubs
push
xor
sbb
push
pop
outsl
ja
iret
or
inc
cs
jae
jb
bound
inc
lea
dec
dec
stos
inc
pop
and
clc
ss
popa
mov
repnz
mov
mov
lea
dec
mov
outsl
fisubrl
push
inc
push
mov
into
movsb
inc
sahf
insb
gs
mov
dec
push
ljmp
aaa
insb
in
in
in
out
pop
jns
inc
mov
imul
ds
and
inc
jb
jns
mov
pop
enter
mov
mov
mov
frstor
arpl
push
cmp
outsb
pushw
push
rorb
mov
or
test
imul
pusha
inc
jbe
push
push
sbb
jns
and
arpl
xchg
es
fprem
popl
cmp
push
push
adc
mov
dec
lahf
mov
inc
mov
cwtl
xchg
pop
pop
push
push
jae
cmp
cmp
out
push
adc
movsl
jae
addr16
adc
fdivrl
adc
and
mov
notl
dec
testl
dec
cmp
mov
jnp
filds
dec
jge
pop
jno
aas
jg
mov
shl
imul
bound
fistpll
ret
push
inc
outsl
jae
inc
imul
and
push
shlb
jbe
bound
jg
sub
push
or
scas
mov
mov
pop
loope
aaa
daa
xchg
mov
popw
out
dec
jnp
cmp
cmp
add
ds
push
das
push
sub
divl
in
es
jle
sub
sub
addr16
out
imul
sub
seta
cmp
jmp
cmp
and
add
cmp
pop
cwtl
jb
cltd
push
scas
sbb
push
jb
imul
outsb
fnsave
xor
lret
sbb
sbb
and
arpl
pop
es
jo
sub
mov
jl
lahf
fs
mov
inc
add
push
call
cmp
les
cmp
jnp
in
add
fildl
aam
cwtl
push
loopne
iret
repz
addb
js
jo
in
repz
pusha
push
jmp
pop
pop
xchg
dec
pop
stos
daa
pop
adc
cmp
cmp
push
mov
push
cmpsl
push
jnp
jns
dec
dec
push
inc
inc
outsl
ds
push
push
fdivp
fidivrs
cmp
xor
sub
iret
repz
and
sbb
adc
sahf
cmpsl
stc
cmp
clc
fcomip
in
jns
out
shrb
out
sub
or
fiadds
test
jns
out
pusha
inc
xor
sub
cmp
out
hlt
fucomp
loopne
iret
repz
mov
insb
inc
sbb
sahf
out
lcall
xchg
pop
xor
cmpsl
pop
aam
mov
lcall
fisttpl
outsb
push
xor
add
ljmp
cwtl
cmpsl
pop
push
loope
cmpsb
bound
fs
sbb
jae
jb
xor
mov
shrd
sub
add
sarb
insb
pop
xchg
or
cmp
inc
inc
dec
jae
insb
inc
gs
pop
sub
sbb
dec
inc
jg
jg
dec
xor
inc
dec
dec
dec
push
push
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
ljmp
and
adc
sub
adc
and
inc
call
mov
adc
jnp
inc
loop
mov
ds
in
xchg
popa
pop
adc
clc
lret
sbb
and
pushl
pop
arpl
cmp
adc
dec
scas
jp
mov
jno
in
fstl
mov
and
cmp
xchg
cmp
dec
imul
lret
add
inc
mov
fcos
or
push
test
sub
fwait
ss
sbb
jmp
std
sbbl
xor
incb
int3
dec
dec
xor
dec
clc
lcall
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
jmp
pop
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
pop
jmp
mov
xchg
push
pop
mov
ds
dec
xchg
scas
ret
mov
cmp
mov
iret
adc
mov
mov
pop
pop
repnz
pop
insb
jg
and
es
mov
jle
add
fwait
sbb
dec
sbb
outsl
or
xchg
sub
mov
std
out
leave
ljmp
lahf
dec
test
push
push
inc
inc
or
mov
jo
outsb
jbe
and
and
cmp
lock
inc
popf
js
loope
pop
push
gs
es
xchg
mov
dec
jmp
jns
push
dec
push
sub
mov
sti
incl
push
adc
or
cs
sbb
sub
push
dec
dec
pop
ds
adc
sub
add
sti
adc
sbb
ds
push
add
add
or
xor
dec
fsubrs
pop
push
jno
jb
jbe
adc
mov
mov
xchg
add
fistpll
jnp
add
adc
add
dec
adc
pop
sub
sub
dec
in
sbb
xor
push
pop
aas
push
add
push
add
std
mov
lods
das
pop
dec
ret
inc
sbb
xor
add
lock
sub
and
xor
dec
sub
dec
pop
sub
jl
dec
pop
xor
cmp
pop
or
out
pop
cli
outsl
mov
pop
adc
sbb
sbb
xor
dec
inc
sub
dec
xor
pop
mov
or
adc
sbb
jge
inc
rcr
add
or
pop
jnp
ja
mov
pop
aad
adc
adc
sbb
and
dec
das
or
adc
cmp
je
lea
push
and
or
sub
adc
unpcklps
mov
popa
lret
cmp
adc
push
adc
sub
pop
inc
mov
addr16
sbb
push
sub
pop
fisubrl
sbb
xor
rorb
outsb
mov
add
and
pop
mov
cvtps2pd
dec
sub
call
push
fsubrs
push
jle
xor
sbb
adc
loope
push
and
js
sub
add
imul
jbe
push
mov
inc
arpl
out
mov
and
gs
jg
inc
xchg
pop
cmp
xor
dec
sbb
dec
push
dec
xor
pop
mov
aas
add
pop
in
popf
mov
inc
push
inc
adc
push
pop
xorl
and
dec
sub
fsub
pop
mov
inc
add
cmp
insl
inc
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
cmp
xor
xor
pusha
cmpsl
cmp
rorl
push
jo
addb
sarl
rolb
xor
out
pop
push
push
pusha
andb
mov
nop
pop
xor
push
and
mov
testl
pop
scas
adc
cwtl
pop
mov
push
pop
addr16
data16
dec
jp
cmp
outsl
insl
mov
aad
and
mov
inc
sub
push
popa
inc
test
xor
lahf
add
imul
bound
xor
and
jnp
into
push
push
push
and
push
ds
pause
mov
loopne
mov
adc
push
ds
jnp
push
push
inc
push
push
mov
push
fidivs
ja
and
push
push
and
ds
mov
fstps
push
add
adc
icebp
roll
add
mov
pusha
adc
scas
cs
adc
lock
push
cmp
push
sbb
pop
push
aad
lods
ret
pop
js
inc
jbe
sti
popf
stos
ret
mov
pop
pop
or
dec
or
mov
dec
push
nop
pop
or
jmp
dec
in
mov
and
push
xor
out
dec
pop
fcoms
jb
aas
mov
add
add
or
push
jb
pop
xor
push
pop
ds
jno
and
add
add
push
fildll
subl
sub
dec
xorps
sub
cmp
or
jp
pop
pop
dec
dec
mov
in
out
mov
xor
cmp
push
xchg
xchg
out
push
ja
ja
xchg
ret
sub
pop
cld
xor
inc
adc
out
pop
adc
or
js
cmp
mov
scas
jge
data16
imul
or
pop
lcall
cwtl
adc
fs
daa
or
pusha
popa
push
mov
pop
or
pop
pusha
sub
or
sub
pop
adc
pop
ss
inc
es
push
lds
add
push
daa
add
cs
and
jmp
pushf
sahf
adc
das
cltd
pop
in
mov
sub
or
gs
and
pop
ret
xor
and
mov
adc
push
pop
mov
sub
cld
nop
arpl
add
outsl
xor
pop
add
xchg
loope
pop
mov
sub
dec
push
lcall
ret
push
stc
and
fmul
outsl
das
ds
add
push
xchg
push
sbb
or
sbb
das
xor
ja
pop
mov
mov
and
sub
insl
int3
call
imul
xchg
call
jle
loop
popa
cmp
cltd
into
scas
daa
int
cmp
xor
in
push
mov
loopne
loop
mov
adc
cmp
jge,pt
adcl
jmp
xor
leave
or
or
movsb
pushf
push
test
das
xor
cmp
adc
fdiv
pop
dec
das
movsl
cmpsl
cli
add
jne
push
hlt
inc
or
bound
cmp
pop
and
push
jg
insb
jne
sbb
ret
jle
mov
dec
movsl
jo
jbe
jae
xor
sub
ss
shrb
xchg
pusha
mov
mov
add
xchg
cs
int
inc
dec
cmpsb
sub
mov
pushf
add
or
bound
daa
popa
and
inc
add
dec
imul
inc
daa
in
insb
add
mov
pop
adcb
or
cmp
popa
mov
sbb
adc
jb
test
subb
outsl
fldenv
das
jo
xor
pop
or
mov
mov
icebp
inc
ja
ss
xchg
dec
dec
sub
or
or
and
adc
push
into
aam
push
outsl
xor
adcl
idivl
pop
xor
xor
cmpb
pop
inc
push
add
or
data16
cmp
ss
ss
push
ja
ja
mov
sarb
popa
jne
push
fidivs
ja,pt
and
cmp
das
dec
or
fucomip
leave
add
fwait
sub
push
or
shlb
push
lock
sub
push
sbb
inc
or
mov
push
jle
push
push
or
pop
sarb
stos
jo
adc
testb
pop
aad
mov
jp
xchg
push
cmp
inc
adc
inc
push
dec
pop
adc
imul
ret
in
add
daa
and
inc
cmp
add
shl
push
mov
jb
mov
je
jae
push
bound
pop
add
jo
push
and
mov
adc
xchg
push
scas
pusha
xchg
outsb
sub
ljmp
pop
bound
ds
push
rcr
insb
push
je
and
jae
movl
je
add
cwtl
outsb
aas
xor
idivb
daa
cs
and
xor
js
pop
jp
xchg
push
add
into
test
test
ret
dec
ret
pop
sub
inc
push
and
lds
sti
aaa
pop
inc
add
xor
mov
gs
ds
pop
or
xor
or
das
cld
fistpl
adc
dec
xor
das
scas
js
dec
mov
cmove
fadds
adc
cmp
add
sbb
and
ret
sarl
aam
cmp
ret
xor
mov
popa
xorb
xor
sub
das
sbb
xor
jp
cmp
insl
stos
bound
adc
or
into
into
mov
leave
cli
or
ret
and
push
or
xchg
sbb
dec
dec
enter
adc
push
les
cmp
push
scas
add
inc
mov
push
daa
xor
popf
jbe
jne
inc
and
fadds
pop
push
mov
dec
inc
loop
adc
ss
sbb
int3
lcall
add
pop
pop
xor
add
out
jle
loopne
adc
and
add
or
dec
and
jmp
xor
cs
jo
daa
sbb
repnz
test
sub
lods
sbb
pop
loop
sbb
shr
mov
ficomps
rolb
jne
inc
repnz
hlt
outsb
stc
dec
pop
cli
stos
mov
popf
daa
nop
add
mov
sub
cld
pop
sub
in
push
jo
nop
aaa
loope
test
dec
push
out
push
je
add
add
adc
cmp
or
inc
out
xor
aas
sbb
or
in
or
out
inc
add
rolb
aaa
nop
add
dec
lret
dec
dec
dec
add
ret
dec
push
xchg
js
lcall
cs
sub
das
pop
and
and
dec
and
loope
add
adc
repz
fstl
sarb
inc
jmp
xor
xor
repz
mov
pop
call
pusha
cmp
pop
fdivs
dec
and
pop
pop
cmpsl
jnp
jl
cmp
adc
push
seta
test
sbb
mov
cmp
mov
xchg
cmp
call
and
and
sub
arpl
fldcw
jno
mov
push
es
lods
adc
and
and
clc
lahf
pop
aas
int
cs
pop
aaa
outsl
pop
popa
sbb
inc
cmp
sahf
push
push
adc
jae
cmp
cmp
adc
xor
rclb
test
pop
push
pushf
adc
and
and
dec
cli
lea
pop
cmc
pop
push
dec
cmp
imul
push
push
pop
aas
inc
mov
pop
sub
sub
add
xchg
cltd
imul
adc
jns
sub
lcall
mov
push
pop
andps
adc
pop
sbb
adc
ljmp
adc
and
and
dec
pop
adc
or
adc
xor
dec
dec
sbb
adc
or
cs
dec
adc
push
repnz
loope
cmpsb
ret
in
icebp
add
pusha
jo
push
mov
push
adc
icebp
scas
out
cmpsb
cli
loop
orb
jg
filds
push
jo
jns
pop
inc
call
jge
dec
mov
fnstenv
nop
xor
and
pop
and
sub
sahf
mov
popf
jge
xchg
cmp
dec
iret
mov
push
imul
push
xchg
inc
mov
push
sbb
mov
outsb
jnp
and
adc
out
fidivs
sbb
and
mov
insl
adc
xor
push
or
xorl
movsl
push
aaa
mov
sbb
adc
popf
sbb
aam
out
adc
or
inc
xor
pop
sbb
cmp
stos
push
stos
dec
cmp
aaa
cmp
xor
jo
fimuls
xchg
fstl
in
add
push
xchg
cmp
vpmacssww
adc
cmpsb
or
int3
xor
orl
pop
xor
dec
sbbb
dec
les
shll
sbb
dec
imul
cs
mov
lods
arpl
ds
pushf
or
mov
call
push
sub
inc
sub
push
sarb
outsl
mov
inc
or
scas
pushw
add
adc
add
xor
lret
nop
inc
inc
es
push
cmp
and
add
or
sbb
pop
sbb
mov
pop
adc
das
decb
ficompl
sbb
and
xor
sbb
nop
push
cmp
jp
or
sbb
sub
inc
cmp
mov
inc
inc
and
test
int
data16
cli
inc
cmp
sbb
xor
pop
icebp
pop
cs
sbb
cld
push
sbb
add
push
xchg
popa
dec
jmp
aam
or
testl
pop
fdivl
mov
xor
pop
mov
pop
push
testb
mov
outsl
jo
insb
xchg
xor
je
push
or
or
jo
das
inc
inc
sbb
push
mov
mov
pop
mov
sub
sahf
out
sahf
and
addr16
out
andl
lahf
out
cltd
or
xchg
test
pop
push
fsubs
stos
push
or
int
adc
sbb
ss
int
sub
xor
inc
mov
mov
jnp
mov
mov
popa
xchg
data16
insb
sbb
sub
add
fwait
int
or
adc
fwait
int
repz
add
add
mov
insb
ss
str
lcall
stc
das
incl
add
mov
add
enter
ss
dec
repz
xor
lock
ss
xlat
fidivs
loopne
jo
fsubl
fsubp
jnp
ja
pusha
andb
mov
jecxz
out
sahf
push
in
out
xor
inc
mov
pop
add
dec
push
dec
dec
lods
adc
pop
int3
push
aaa
shlb
mov
mov
pushl
pushl
pop
sbb
ljmp
mov
ja
mov
lods
pop
dec
jmp
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
mov
fnstcw
sub
mov
sbb
inc
sbb
pushf
ds
pop
sbb
or
dec
fsubs
fsubrs
xchg
pop
sbb
mov
lds
in
pop
dec
xchg
pop
shl
dec
push
adc
cld
or
and
xor
aaa
xor
or
inc
push
dec
cmp
inc
push
and
dec
dec
pop
cmp
add
inc
pop
push
test
ss
jb
outsl
or
mov
dec
sub
pop
or
dec
repz
clc
add
cmp
das
cmp
enter
in
pop
mov
jns
sahf
cwtl
inc
mov
cmp
push
sbb
insb
inc
js
cmp
lock
scas
pop
add
dec
pop
lea
dec
or
lods
pop
pop
push
push
dec
mov
ljmp
jnp
cmp
xor
sub
sub
xor
inc
xor
inc
push
xor
out
jne
bound
outsl
add
cmp
insb
push
outsb
rcll
pop
lret
jge
rclb
je
in
js
mov
adc
adc
arpl
lock
ss
adc
pop
dec
push
jb
jo
lock
outsl
jne
cmp
popa
outsb
imul
pop
push
fsubs
ret
jnp
outsb
adc
and
outsl
and
adc
adc
mov
ret
dec
push
ja
sbb
ret
rcr
mulb
das
shlb
push
cs
xor
out
sbb
sub
or
aaa
stos
es
adc
daa
add
xor
add
dec
xor
xor
adc
outsl
xchg
adc
sbb
inc
adc
cmp
or
dec
mov
fdivs
cmp
pop
inc
ficompl
mov
add
push
xchg
cmp
fldl
xor
jns
stos
inc
addl
adc
aas
sbb
dec
sub
mov
inc
mov
dec
imul
adc
cli
sbb
das
outsl
push
push
or
mov
mov
push
xor
dec
rcll
dec
leave
push
out
add
repz
inc
add
pop
mov
push
imul
pusha
cs
sub
inc
outsl
xor
lahf
div
inc
inc
out
js
pop
ljmp
out
xchg
sub
outsb
dec
mov
cmc
push
pop
xchg
push
mov
sub
xchg
and
pop
outsl
out
fwait
jmp
les
mov
pop
lock
xor
arpl
pop
loope,pt
or
cmpsl
std
push
rcrb
imulb
cmpsl
pop
cld
or
scas
setns
push
pop
pop
pop
mov
testb
into
clc
inc
cmpsb
dec
pop
mov
inc
dec
push
push
pop
data16
dec
shl
push
scas
gs
jns
sub
data16
sahf
mov
cmpsb
inc
ss
ja
jnp
js
and
cs
push
cmpsl
stc
cmp
cmp
jp
inc
sbb
out
jns
lea
inc
sahf
out
lea
xchg
scas
sub
push
push
push
cmpsb
jl
sub
add
push
imul
push
mov
jne
aaa
mov
aas
sub
adc
mov
scas
ja
push
adc
repz
dec
js
xchg
fwait
lods
mov
add
ljmp
pop
nopl
loope,pt
idivl
xchg
mov
push
jns
aaa
sti
sub
xor
fdivp
xor
push
push
or
mov
jnp
push
add
daa
push
pop
push
pop
imul
mov
push
push
push
xchg
mov
mov
pop
cli
idivl
in
mov
test
ficomps
sbb
push
dec
xchg
jns
icebp
adc
inc
xchg
test
jl
nop
push
add
mov
ja
sub
ficoml
repz
and
mov
repz
aaa
xchg
sahf
out
or
xor
test
dec
repz
int3
and
jns
out
inc
pop
jg
mov
xor
out
hlt
push
daa
ss
adc
test
addr16
jg
dec
sbb
scas
decl
add
cs
adc
stc
add
adc
loop
fisttps
adc
push
mov
xor
adc
mov
pop
pop
mov
scas
int
mov
iret
mov
leave
loop
and
push
pop
sbb
add
idivb
sar
mov
pop
int3
push
and
pop
sbb
enter
stc
cmp
adc
or
adc
cs
mov
add
shll
add
cltd
imul
sbb
pop
push
outsb
fldt
aas
aas
cmp
push
out
inc
push
mov
int3
rcr
daa
inc
sbb
or
lods
jo
addr16
push
mov
mov
jae
fisubl
into
test
ficoml
out
sbb
cmp
dec
dec
mov
insl
push
ljmp
cmpsb
dec
add
sbb
push
inc
imull
ljmp
fwait
imul
loope
jns
push
fisttps
jp
das
cmpl
fisubrs
inc
imul
ret
inc
lds
retw
dec
ret
push
or
dec
mov
ja
filds
stos
push
clc
dec
add
repnz
insb
in
fistpll
dec
push
rorb
fimuls
push
ds
or
das
adc
sbb
es
insl
jo
into
mov
insb
je
push
addr16
jo
jae
es
ljmp
cmpb
out
insb
pop
jle
cmp
or
cmpsb
mov
lods
push
or
cmp
xor
xor
outsl
mov
cmp
cmp
and
xor
push
xor
xor
cmp
push
mov
imul
pop
adc
sti
mov
xlat
adc
or
add
bound
sub
ja
add
lcall
lock
dec
sub
or
sbb
mov
hlt
sub
movlps
or
jp
sbb
push
aaa
js
push
scas
adc
add
into
jmp
lods
ja
push
subb
sbbb
pop
inc
pop
or
push
rcrb
pop
fisttpl
mov
add
test
push
sub
sub
dec
and
adc
xor
add
lahf
inc
cli
lcall
adc
adc
push
daa
sbb
mov
sbb
xchg
or
xorl
sbbl
sti
ret
adc
ss
inc
outsb
rcrl
add
sbb
lea
push
xor
or
jo
or
cs
and
inc
fstpl
jecxz
sbb
ljmp
cmp
jb,pn
mov
mov
pop
das
rcrl
adc
pop
pop
cmp
rcr
daa
xorl
push
xor
orl
fcmovnb
aaa
xor
mov
pop
pop
sbb
daa
xor
mov
fidivl
in
aaa
adc
pop
mov
in
and
fadds
ljmp
daa
and
mov
add
push
fdivrs
lods
pusha
adc
push
jnp
xchg
das
das
xorl
pop
repz
out
push
mov
pop
jno
in
and
mov
mov
das
popa
daa
push
sub
sub
push
loope
pop
icebp
das
dec
inc
sahf
jbe
es
pop
test
or
aaa
arpl
cmp
pop
push
add
xor
add
sub
mov
or
push
das
fiaddl
scas
pop
js
js
cltd
daa
lahf
pop
pusha
adc
sub
cmpsb
pop
push
pop
int
pop
lea
inc
addr16
push
aam
sti
jg
int3
sbb
or
sbb
mov
enter
pop
dec
sbb
jbe
inc
imul
add
xor
sbb
icebp
or
pop
das
fcoml
sbb
pop
cli
adc
mov
add
and
fisttpl
sbb
movb
imul
and
pop
fmull
ret
out
and
das
sbbb
xorb
dec
js
xchg
pop
mov
pop
ret
dec
xchg
adc
data16
loop
sub
sub
push
adc
ss
push
and
add
sub
faddl
je
push
loopne,pn
xor
push
das
das
dec
xlat
or
or
xchg
inc
sub
mov
data16
cmp
pushf
bswap
adc
lods
sbb
xchg
cmp
das
addr16
sub
das
pop
adc
sahf
sbb
push
jp
sub
and
dec
pop
fcoms
add
pop
push
dec
sub
push
xchg
pop
push
jne
dec
mov
rcll
sbb
int3
cs
je
pusha
mov
sub
or
inc
jecxz
push
test
xchg
pop
mov
inc
or
sbb
sbb
inc
pop
dec
ljmp
cltd
test
mov
push
add
and
test
pop
push
cmpsb
fs
sbb
jno
nop
pushf
push
adc
imul
loopne
ficomps
xorb
loopne
into
adc
xchg
jo
roll
les
movsb
inc
or
dec
jbe
gs
es
mov
or
lock
out
adc
hlt
jnp
sbb
or
pop
pop
pop
and
cltd
fldl
jo
or
mov
in
pop
pop
mov
pop
pop
add
cmp
sbb
mov
add
cmp
dec
mov
sti
inc
test
add
das
pop
adc
sub
push
cltd
dec
leave
mov
mov
jnp
mov
rcrb
or
pop
cwtl
cltd
pop
popa
mov
fsubs
sbb
adc
xor
xor
mov
call
push
mov
data16
or
or
adc
dec
push
sub
push
and
or
push
and
das
adc
aas
es
add
push
inc
cmp
adc
les
inc
sub
aas
shll
dec
std
add
je
or
push
adc
push
inc
aas
jbe
test
sub
lods
jno
fildll
inc
out
xor
add
roll
sahf
push
jnp
push
xchg
sub
or
pusha
or
lods
outsb
jno
lods
push
add
inc
mov
add
xor
pop
mov
push
arpl
sub
cs
adc
cmp
pop
pop
ljmp
pop
in
pop
mov
call
adc
imul
hlt
cwtl
cli
jb
jo
loop
push
and
xor
sub
out
add
add
mov
lret
adc
out
adc
push
push
mov
xor
pop
adc
push
pop
pop
pushl
cld
filds
sbb
dec
push
add
add
das
or
pushl
pop
pop
dec
cmp
dec
inc
push
add
sbb
or
push
das
dec
dec
add
sub
pop
add
xor
cmp
and
adc
xor
and
xor
and
aam
cmp
cmp
xor
lret
out
pushl
push
pop
das
cmp
pop
xor
mov
sub
dec
xor
dec
fcomip
out
mov
xchg
mov
and
xor
push
adc
or
lcall
pop
pop
dec
inc
add
sbb
push
add
pop
push
pop
push
push
sub
or
push
dec
dec
or
decb
or
daa
inc
idivb
inc
mov
adc
adc
or
jb
dec
mov
add
loop
dec
mov
adcb
cmpsl
pop
rcrb
sub
xor
add
mov
and
push
inc
cld
pusha
dec
setg
push
cmp
js
mov
inc
outsb
loopne
pop
out
jns
mov
out
add
aas
pop
xor
ficompl
or
xor
inc
movsb
xor
pop
filds
shrb
push
push
dec
sub
ret
je
loopne
scas
push
add
xchg
mov
pop
lods
movsb
xor
cmp
mov
add
push
add
pop
and
push
push
inc
test
or
jb,pn
adc
xor
hlt
push
push
inc
fadds
dec
ficomps
push
push
inc
push
dec
adcb
add
add
xor
outsl
out
nop
inc
push
inc
sub
mov
inc
aaa
jno
sti
shlb
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
fisttps
mov
jge
push
je
mov
andb
pushl
rol
fwait
in
inc
mov
js
and
sub
sub
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
call
jae
gs
leave
ret
sub
xchg
mov
data16
mov
inc
sbb
xchg
shll
cltd
test
push
push
shll
ja
daa
mov
mov
mov
or
cmp
fsubrs
pushf
pop
rep
cs
fbld
js
test
add
mov
mov
movsb
mull
jno
addr16
decl
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
pop
push
decl
inc
je
jl
and
jb
jo
xor
xor
outsl
jno
sub
inc
xor
cmp
cmc
jge
cmp
cmp
sub
dec
inc
dec
jnp
push
lcall
or
sub
sub
and
xor
jae
cmp
and
and
inc
outsb
or
icebp
bound
cld
arpl
ds
push
clc
fildll
cs
cs
daa
dec
jae
sbb
or
push
and
or
xor
dec
adc
mov
pop
orb
pop
lea
aaa
fstpl
daa
pop
daa
add
xor
sti
pop
xchg
and
daa
push
cmovnp
imul
pop
xor
push
and
xchg
fistpll
aaa
push
xor
inc
add
xor
xor
pop
outsb
cmpsl
cmp
inc
add
inc
jns
ret
jmp
inc
inc
xor
das
aaa
inc
push
inc
mov
inc
inc
ss
cmovb
and
xlat
xchg
pop
ss
cmpsl
ss
rolb
and
pop
cmp
mov
fadd
xor
or
out
gs
in
aaa
inc
or
xorb
add
rcll
mov
in
cmpsl
ret
scas
bound
adc
cli
inc
add
dec
push
jle
loope
xlat
and
ja
loop
xor
data16
mov
lods
fidivl
and
mov
mov
nop
jle
dec
inc
inc
inc
adc
dec
mov
inc
xchg
insb
lds
bound
add
pop
adc
jnp
rclb
js
or
push
and
adc
add
push
aaa
push
dec
push
cmpsl
add
sbb
or
pop
ja
dec
pop
rcll
sub
popf
or
mov
mov
adc
push
mov
push
into
popf
loop
sub
clc
inc
xchg
inc
mov
xorb
pop
sub
sbb
test
dec
popa
cmp
scas
out
sbb
fadds
jnp
cmp
jmp
addb
and
mov
sbb
xchg
mov
and
push
popf
add
pop
xor
pop
adcb
xchg
jbe
les
inc
sub
push
mov
cmp
pop
xor
xor
outsb
aas
jnp
sbb
adc
aam
jo
add
icebp
insb
test
out
push
push
insb
loopne
sbb
sahf
and
or
inc
mov
iret
pop
xchg
aad
bound
adc
dec
aad
das
test
push
test
cmp
or
into
outsb
inc
ljmp
je
xor
js
jbe
fwait
inc
xor
jae
popa
insl
packssdw
xor
cmpsb
mov
shrl
jo
into
and
inc
inc
mov
jo
fcomip
aad
insl
sub
xor
insl
loop
push
push
or
data16
out
testb
mov
dec
push
popa
je
push
pavgw
ret
mov
xor
dec
or
out
dec
xor
out
push
gs
dec
rcrb
out
test
push
sbb
jmp
dec
xchg
aaa
ds
aad
pop
add
or
dec
fisttpll
insb
ds
sbbb
es
test
add
cs
push
jae
and
fbstp
aad
and
fmull
push
cmp
fimull
cs
adc
mov
add
insb
mov
ljmp
jno
adc
dec
das
sbb
jae
sbb
xlat
or
push
xchg
pop
xor
inc
push
add
adc
sub
call
fs
push
fimuls
dec
cmp
adc
or
ja
jb
pop
repz
outsb
inc
lock
inc
jne
cs
xor
and
add
mov
pop
ds
cmp
cltd
sti
test
pop
test
xor
inc
inc
add
pop
nop
jns
fcoms
sbb
push
inc
call
call
popa
pop
lods
enter
cli
ljmp
jbe
jo
lret
and
push
das
or
xor
stos
push
outsl
imul
fwait
lods
dec
ss
mov
test
pop
pop
sub
lgs
scas
or
out
pop
sub
push
aas
in
add
adc
add
push
das
test
sbb
ds
leave
sub
fcomps
fisubl
or
test
sbb
ja
or
sahf
outsb
xchg
and
dec
mov
xor
pop
jnp,pn
add
jp
inc
xchg
mov
xlat
mov
inc
test
bound
cmp
mov
in
sbb
dec
sub
hlt
gs
adc
cmpsb
ja
outsl
or
scas
pop
xchg
dec
lret
mov
or
vmovshdup
sub
push
mov
or
mov
sub
das
imul
xor
mov
cmc
mov
ja
cmpsb
out
pop
pop
pop
dec
inc
or
sub
xchg
movsl
or
dec
pop
dec
insl
xchg
enter
orl
test
cs
movsl
xchg
ret
cmpsl
in
add
xor
aad
mov
pop
std
mov
mov
pop
inc
inc
add
in
cmp
fiaddl
and
mov
or
sub
inc
dec
rorb
mov
and
inc
add
or
add
cmp
ret
test
mov
shlb
jne
jg
aaa
shll
jne
or
lods
push
loopne
outsl
xchg
mov
add
clc
dec
es
addr16
popa
dec
outsl
jne
imul
outsl
and
add
inc
cmpsb
rcrl
dec
cmp
imul
sbb
sub
popa
mov
jg
adcl
dec
push
inc
pop
push
dec
inc
dec
hlt
pop
jns,pn
dec
pop
dec
xlat
jb
gs
xchg
aad
xchg
pop
or
fwait
pop
daa
dec
and
add
push
dec
jb
adc
pusha
and
jp
seto
fsubs
rclb
or
jle
loope
xchg
loop
das
mov
mov
nop
lret
std
cs
test
nop
push
xorl
adc
ret
jb
out
test
and
inc
add
or
add
inc
or
push
mov
add
sbb
das
jae
pop
jnp
push
push
addr16
push
subb
inc
ja
mov
add
adc
test
add
xor
iret
sub
in
lcall
dec
icebp
out
pop
cmp
loop
cs
xor
sbb
in
push
dec
or
xor
sub
push
rolb
pop
cmp
cli
xchg
pop
push
out
sbb
out
push
lret
adc
or
xor
cmc
dec
add
dec
xchg
cmp
sub
mov
dec
push
sub
cmpsb
adc
dec
lahf
push
pop
lahf
push
inc
jns
sub
and
inc
loope
xor
jns
loopne,pn
daa
jne
dec
mov
jno
out
adc
or
and
and
sbb
mov
sbb
lcall
arpl
push
lods
or
dec
stos
mov
dec
adc
push
sbb
and
add
insl
xor
xlat
jbe
imul
iret
daa
push
xorl
lds
in
xor
add
push
sub
mov
push
in
jne
je
sub
icebp
in
pop
das
and
push
das
xor
xor
dec
into
cmp
adc
call
sub
mov
mov
daa
enter
and
inc
outsw
insl
pop
xor
outsb
add
pop
dec
and
xor
push
jnp
jge
mov
dec
dec
dec
inc
mov
outsb
fists
lods
out
xlat
arpl
gs
cmp
or
dec
test
mov
aad
scas
inc
and
in
jmp
mov
sub
dec
jb
in
adc
dec
add
xchg
test
fisttpl
xadd
in
ss
inc
popl
lock
fidivs
cmpb
aas
mov
maxps
dec
add
mov
xchg
push
mov
lock
inc
add
outsb
sarb
xor
aaa
lods
sbb
rcr
dec
movsb
fs
cmp
out
cmp
adcb
mov
mov
aaa
enter
mov
daa
test
clc
mov
fwait
mov
push
adc
xchg
pusha
mov
daa
outsl
pop
mov
inc
add
fwait
nop
xor
aas
repz
fsubrs
jg
dec
outsl
mov
pop
ss
dec
inc
xchg
sub
mov
sub
sub
sbb
pop
pop
mov
or
push
cmp
sbb
mov
ss
inc
cwtl
or
aam
stc
cmp
mull
adc
hlt
cmp
repz
cmpsl
mov
cmp
cmp
sti
cmp
enter
cmp
cmp
repz
push
je
out
ds
cmp
inc
cmp
or
int
fdivp
aaa
out
push
push
out
jbe
aas
add
icebp
mov
out
dec
imul
add
jl
or
fmuls
add
jns
push
in
cld
add
xchg
xor
movsb
sub
add
out
jns
add
mov
fdivr
sahf
enter
dec
inc
mov
lods
add
mov
jg
leave
aad
ja
in
dec
xchg
hlt
ja
add
xchg
or
xchg
dec
mov
xchg
mov
dec
inc
rorb
jns
or
xchg
subb
mov
outsl
xchg
popa
sub
add
inc
in
mov
popa
dec
ss
adc
sbb
outsl
sub
mov
add
cmp
jae
mov
outsl
cmp
dec
ss
inc
icebp
dec
mov
dec
pushf
xchg
lods
sub
bound
ror
fsubrs
dec
cs
mov
xor
cmp
xor
cmp
loopne
push
push
je
pop
scas
add
push
lds
outsl
mov
add
and
mov
cltd
in
nop
cmp
cmp
push
xor
cmp
sub
mov
outsl
sub
inc
call
xchg
dec
cmp
repnz
or
add
mov
aam
push
xchg
popa
sub
rolb
add
shlb
leave
adc
out
sbb
jbe
cmp
xchg
pop
jb
sub
cmp
out
add
xchg
or
repnz
cmp
leave
mov
and
outsl
and
or
test
nop
or
and
fiadds
ds
mov
xchg
popa
sub
scas
add
mov
inc
xchg
outsl
out
mov
xchg
mov
pusha
jne
sbb
inc
xlat
or
cmpsl
adc
push
aaa
inc
in
or
mov
daa
pop
or
sub
mov
fs
insb
daa
addr16
mov
data16
in
inc
cmovle
push
xchg
cmp
inc
push
push
cmpsb
mov
inc
push
mov
movsl
mov
adc
mov
sbb
inc
icebp
pop
leave
add
mov
loop
test
xchg
inc
testl
jmp
fcom
outsl
push
push
outsl
pop
pop
xor
jg
pop
and
mov
daa
testl
push
add
push
fs
je
pop
shr
cmpsl
mov
sub
or
push
mov
loopne
xchg
push
jmp
dec
inc
mov
adc
faddl
inc
lahf
scas
xchg
dec
xlat
or
inc
fisubrl
dec
out
add
clc
sahf
push
mov
or
nop
inc
or
sub
lahf
sub
pushf
xchg
adc
lods
inc
pop
or
mov
push
inc
outsl
and
mov
add
xchg
add
scas
jo
loopne
negl
clc
push
test
mov
xor
ja
leave
adc
pusha
aaa
in
outsl
addr16
jo
xchg
add
adc
jo
inc
inc
out
dec
scas
in
outsl
xchg
je
out
jne
test
add
mov
xchg
sub
lock
scas
addr16
enter
and
xor
inc
faddl
sub
incl
out
jnp
push
lods
push
jo
das
outsl
pop
leave
mov
or
bound
pop
pop
adc
inc
pop
or
enter
ss
cmp
sbb
dec
cmpsb
nop
xorl
add
jnp
inc
xchg
cmpsb
jo
xchg
pusha
and
add
addb
sahf
iret
daa
xchg
int3
pop
sbb
daa
or
xchg
pop
leave
add
add
ret
xor
push
fs
cmpsl
jge
dec
push
mov
lock
out
fdivs
mov
pushl
call
xchg
inc
cmpsl
dec
scas
inc
or
bound
dec
xchg
dec
add
push
dec
outsl
jb
push
xor
pop
or
dec
leave
adc
fbstp
xchg
cmp
xchg
cltd
and
adc
popl
xchg
mov
lock
pop
cli
out
ja
push
dec
dec
pop
adcb
adc
outsl
out
mov
add
xor
push
nop
lahf
addr16
in
aam
pop
or
sub
push
jb
es
daa
or
adc
adc
xor
cmove
test
push
das
out
fiaddl
push
adc
xchg
fimull
imul
xlat
imul
sub
enter
sub
fcomps
mov
xchg
push
sub
aaa
push
inc
pop
insl
loop
or
sbb
fldt
ja
push
dec
outsl
repnz
mov
dec
outsb
jl
and
xchg
xlat
push
orl
filds
pop
mov
loopne
pop
int
sahf
lock
aas
sbb
sbb
addr16
mov
adc
nop
cmp
lcall
and
fadds
add
out
sahf
out
and
mov
jns
adc
jno
jns
iret
repz
repnz
jns
out
test
cmp
adc
pop
out
dec
int
jns
xor
jmp
dec
sbbl
mov
ret
jecxz
dec
xor
ds
repz
out
dec
push
jns
int
ja
push
add
xor
out
int3
pop
push
aaa
addr16
ds
xchg
or
popa
jns
jns
jl
fstpt
push
jbe
test
xor
out
jecxz
push
pop
xchg
imul
push
pop
xchg
iret
sarl
aad
push
push
xorl
shl
iret
sarl
inc
testl
jns
fsts
sahf
out
roll
pop
sub
lcall
pop
jl
pop
out
sarl
push
jns
mov
lcall
bound
stc
cmp
out
and
mov
int
fisubrs
xchg
mov
out
dec
lret
pushl
cmpsl
stc
cmp
outsb
scas
clc
xchg
iret
repz
std
sub
mov
xor
push
imul
insb
out
xor
rorb
insl
test
sbb
sarl
sahf
sbb
pop
lea
into
test
cmp
imul
jae
repz
repz
mov
out
jne
mov
into
jbe
jl
dec
sti
cmp
inc
js
out
lcall
ret
cmpsl
stc
cmp
pop
jp
nop
and
iret
sarl
fstpt
jl
xchg
fcomps
jge
mov
cmpsl
stc
xor
mov
fmuls
insb
notb
addl
imul
push
fcoml
test
xor
out
shlb
test
repz
out
xchg
cmp
ds
dec
ficoms
mov
xchg
mov
jne
mov
js
inc
cmp
jge
lea
push
sbb
sti
mov
push
mov
xchg
pushw
pushf
xor
out
jmp
cwtl
call
inc
cltd
mov
adc
outsl
jns
iret
repz
out
ds
repz
push
nop
sahf
cmpsl
stc
cmp
push
sahf
cmp
or
sub
mov
push
movsl
push
add
insb
sbb
stos
jecxz
jae
sbb
fnstenv
mov
call
jo
cli
addb
push
add
add
push
inc
pop
and
mov
stos
push
add
leave
in
fistpll
fwait
in
inc
lods
push
jns,pt
fucomp
cmovbe
dec
ja
fmul
in
in
jle
add
aaa
pop
cmpsb
nop
push
incb
jmp
pop
pop
in
mov
mov
rolb
out
mov
ss
aas
in
jb
mov
in
enter
decl
xor
inc
add
xor
loope
inc
pop
push
xchg
out
lcall
mov
lods
inc
pop
enter
mov
in
mov
sub
ja
inc
jo
ljmp
inc
fadd
push
adc
jo
aas
int3
jg
cmp
push
aas
lds
cmp
lock
inc
pop
fmuls
mov
in
push
mov
fldt
cmp
cmp
cltd
xchg
aas
fwait
push
in
inc
dec
stos
mov
repnz
and
iret
pop
mov
leave
vmovss
ss
aas
mov
inc
mov
jae
ja
aas
mov
xchg
inc
pop
jp
lcall
push
inc
jbe
aas
sub
jmp
push
aad
add
push
rolb
push
inc
imull
lret
inc
mov
das
sbb
push
inc
xchg
cmp
push
daa
push
push
mov
icebp
int3
popa
push
push
dec
fldt
in
fmul
inc
add
into
jno
jne,pt
jb
mov
push
lahf
adc
je
dec
test
daa
aam
jno
push
jmp
dec
sub
outsb
dec
icebp
idiv
push
sti
aas
pushf
push
inc
mov
and
int3
mov
sbb
cmpsl
mov
or
sub
aaa
cs
ret
shlb
pop
add
pop
divb
and
je
nop
pop
nop
or
pop
jle
or
jecxz
test
sub
das
leave
mov
mov
mov
sbb
fcompl
pop
scas
repnz
scas
inc
incl
inc
dec
dec
xor
pop
in
push
lock
aas
mov
cmpsb
mov
dec
push
loopne
inc
mov
cmp
scas
movsl
xchg
ret
ret
out
sub
and
push
xchg
pop
push
push
cmp
repz
add
imul
dec
cmp
pushf
movsb
xchg
pop
mov
mov
ljmp
cmpsl
dec
jb
push
fcompp
inc
pop
xor
adc
fstl
mov
in
xchg
sub
repnz
in
loopne
pop
pop
dec
addr16
pop
jno
pop
into
enter
pop
fs
test
pinsrw
test
nop
pmulhuw
inc
add
add
xor
add
test
inc
pop
mov
test
xchg
mov
cmp
movsb
or
add
sub
inc
cmp
inc
sbb
pop
sub
sub
scas
pop
enter
jbe
inc
iret
sbb
jb
dec
mov
push
add
add
add
iret
repz
pop
into
or
mov
fldl
inc
xlat
xchg
dec
repnz
push
sar
cmp
sub
inc
dec
and
pop
sbb
cmp
push
test
dec
push
outsl
pop
leave
jae
mov
iret
insl
in
push
test
xchg
pushf
pushf
pop
and
mov
popf
int
add
add
in
repnz
sub
dec
mov
jb
dec
push
dec
push
dec
es
pop
leave
and
cs
jl
daa
daa
daa
daa
pop
popa
imul
rcrb
movsb
cmpsl
lods
pop
mov
mov
cmpsl
les
int3
mov
pop
popa
jbe
sbb
push
lock
das
dec
jns
inc
dec
mov
dec
aas
dec
out
add
and
clc
and
xor
int3
cmc
inc
and
xor
and
inc
lock
sbb
push
mov
or
and
fimuls
or
cmpsl
or
loope
aas
pop
adc
arpl
xchg
inc
sbbl
arpl
sbbl
and
pushf
arpl
and
lods
or
lcall
pop
inc
or
hlt
sbb
mov
xchg
mov
mov
iret
dec
dec
xlat
dec
cmp
push
fs
xchg
sub
sbb
and
aas
xchg
adc
add
fs
loope,pn
xchg
pushf
hlt
fs
add
inc
dec
dec
repnz
dec
cmp
in
and
mov
in
in
mov
dec
fisttps
adc
in
dec
cmc
dec
orb
jns
out
or
push
or
out
sahf
out
sub
aaa
push
sahf
out
sahf
inc
cmovge
pop
adc
out
arpl
outsb
adc
sahf
out
mov
jns
movsl
pop
mov
rcrl
iret
add
cmpsl
push
negl
push
add
fs
xchg
mov
xchg
and
in
xchg
add
cmpl
push
enter
cmpsb
add
adc
xor
pop
add
and
arpl
mull
jg
and
les
fstl
out
out
push
daa
notl
jmp
cmp
inc
aas
cmp
in
add
test
dec
repnz
push
lcall
push
adcb
fnstsw
mov
daa
into
pop
and
add
and
sub
adc
push
ljmp
mov
xchg
adc
push
xchg
scas
sbb
push
leave
or
mov
shlb
lahf
movl
setb
push
push
xorb
loopne
xchg
and
inc
dec
fildll
push
xor
pop
and
in
and
add
loopne
add
test
ret
push
outsb
aad
call
inc
or
pop
xor
cmp
pop
and
jl
mov
outsb
xchg
jns
ds
inc
iret
pop
out
in
add
in
and
xchg
xchg
hlt
ss
ds
lods
cmp
push
decl
sbb
mov
insb
and
and
sub
je
in
adc
ljmp
in
scas
int3
mov
test
xor
push
pop
das
xchg
dec
cs
mov
push
ja
push
mov
mov
mov
xor
and
adc
stos
inc
mov
and
std
push
insb
outsb
push
fnstcw
pop
cmovle
add
and
add
das
cmp
outsl
dec
mov
inc
inc
pop
push
jb
outsl
cmp
pop
outsl
setb
outsl
and
das
das
das
sub
pop
dec
pop
in
jns
xchg
add
in
in
test
mov
mov
or
fistl
dec
rcl
fbstp
mov
es
jo
push
mov
sub
lea
pop
addr16
mov
outsl
pop
ja
jg
xchg
mov
xchg
pop
lahf
pop
cmpsl
pop
mov
pop
mov
mov
mov
xlat
pop
fistps
pop
xchg
xchg
outsb
mov
push
xchg
xchg
xchg
xchg
or
xchg
xchg
xchg
or
pop
push
xchg
xchg
xchg
xchg
add
xchg
push
xchg
add
repnz
adc
sbb
repnz
pop
inc
pop
jb
out
nop
push
xchg
dec
cs
int3
sarl
or
shll
clc
jmp
or
adc
xor
xor
cmp
xchg
in
add
sbb
arpl
pop
jae
jnp
iret
mov
mov
push
xchg
fcompl
mov
xchg
pushf
dec
cmp
adcb
testb
iret
in
ja
dec
and
push
inc
mov
enter
jg
pop
outsl
pop
out
outsb
push
in
pop
outsl
sbbl
xchg
mov
mov
or
pop
ja
leave
das
test
or
mov
inc
pusha
mov
push
mov
aas
push
pop
or
ja
xchg
mul
popf
push
jne
pop
or
mov
loopne
test
xor
jo
in
hlt
fsubl
js
cld
add
decl
sbb
push
sub
push
sbb
hlt
or
pop
or
in
inc
imul
leave
out
xor
jbe
daa
daa
adc
jns
outsb
pop
loope
add
icebp
das
jns
fnsave
pop
pop
xlat
or
xor
cmp
pop
enter
dec
pop
pop
pop
xlat
fs
popf
lcall
das
and
and
pop
pop
pop
pop
and
and
pop
pop
pop
pop
and
and
pop
pop
pop
pop
add
and
pop
pop
cmp
inc
pop
and
jo
and
fsubl
sbb
mov
push
mov
dec
add
in
sbb
sbb
pusha
sub
repnz
pop
inc
push
dec
and
jae
or
pusha
sahf
or
pusha
xchg
dec
mov
hlt
in
mov
outsl
call
inc
dec
cmpsl
pusha
or
repnz
inc
push
add
mov
in
xchg
adc
popa
mov
mov
insl
sarb
popa
iret
shlb
popa
push
xor
cltd
pop
loopne
call
jns
bound
bound
fsubl
dec
add
in
nop
mov
cmp
enter
fadds
leave
loopne
arpl
dec
ds
arpl
add
leave
jae
cltd
push
pop
add
outsl
ret
push
pop
sbb
cwtl
je
xchg
arpl
mov
jnp
xchg
dec
ja
daa
aam
leave
daa
daa
mov
pop
aam
fucomip
cmc
and
andb
or
in
xchg
and
cmp
stc
dec
dec
or
jl
decl
fs
jle
mov
dec
inc
xchg
lahf
stos
mov
push
dec
dec
ror
or
xchg
stos
in
or
stc
cmp
enter
sbb
and
sbb
cmp
gs
fnstcw
gs
fisttps
sbb
repnz
jge
out
dec
push
add
mov
pop
popf
mov
clts
out
jle
ss
ja
sub
add
mov
xchg
inc
into
lock
xchg
data16
pop
mov
cs
add
dec
jb
pop
ret
cbtw
xlat
mov
data16
jg
shll
cmp
addr16
xor
xchg
dec
jnp
addr16
test
xorps
mov
aaa
nop
push
iret
ja
mov
mov
xor
in
ja
jg
repz
into
dec
es
push
add
dec
mov
das
inc
push
dec
push
or
cmp
in
ud2
outsb
or
adc
leave
jbe
push
add
mov
mov
in
adc
andl
xchg
imul
repnz
add
daa
daa
pop
leave
js
test
xchg
lcall
mov
loop
cmp
jge
fcomi
movups
sbb
add
and
push
xor
push
in
and
sbb
push
or
mov
scas
fs
fistps
jl
mov
repnz
push
push
repnz
push
push
push
pop
pushf
pushf
fdivrl
or
pushf
pushf
pushf
pushf
pop
push
add
pushf
add
sbb
iret
repz
sbb
sbb
sbb
cmp
repz
in
push
hlt
pop
and
and
or
repz
adc
sbb
and
lret
sub
sub
dec
data16
adc
mov
sbb
out
xchg
lods
jb
loope
add
mov
pushf
cmp
pop
int3
or
mov
aas
mull
cltd
cmp
insb
sysret
insb
cmpsl
push
in
mov
movsb
inc
insb
dec
insb
jae
loopne
push
xchg
pop
pusha
aas
push
pop
imul
js
iret
repz
jle
subb
nop
or
leave
repz
or
test
iret
jae
je
cmpxchg
scas
daa
enter
clc
test
enter
insb
clc
insb
add
mov
popf
mov
xchg
xchg
xchg
insl
insl
insl
insl
jnp
insl
push
push
jp
out
test
pop
stos
sbb
iret
das
mov
iret
shr
iret
leave
sar
sub
cmp
jmp
inc
fwait
lret
dec
push
pop
or
push
and
xchg
outsb
or
mov
adc
outsb
xchg
xchg
xchg
outsb
outsb
outsb
xchg
ss
jl
xchg
mov
rcl
jb
lret
in
aaa
sahf
fxch
enter
push
outsl
mov
lods
pushf
sbb
outsl
mov
outsl
andl
dec
outsl
push
outsl
jl
push
mov
mov
lahf
mov
mov
cmp
out
and
mov
mov
iret
add
lods
xchg
xchg
mov
leave
imull
cmpl
xchg
outsl
xor
inc
inc
outsl
paddd
cmp
mov
add
add
jb
sub
or
jbe
cmp
inc
dec
pop
push
out
jns
or
cmc
in
sahf
adc
jl
enter
js
mov
inc
dec
mov
jo
cmp
inc
pop
fsubrs
aaa
imul
pop
orb
mov
nop
mov
jbe
or
adc
sbb
cmpsl
fwait
cmp
and
sub
aaa
cmp
enter
cmp
sar
mov
or
movd
dec
dec
sahf
cmpl
test
push
mov
jb
xor
mov
inc
sub
push
push
outsb
push
daa
aas
jne
ja
push
pop
pusha
push
or
nop
out
iret
movsl
push
add
mov
out
cmp
das
or
daa
cmp
pushf
or
das
cwtl
mov
aas
push
add
dec
sahf
add
lar
ja
ja
cs
or
out
mov
outsb
mov
loopne
call
test
jae
adc
cmp
enter
push
add
pop
repnz
jae
add
add
outsb
sysret
fs
push
or
jns
leave
je
or
mov
jae
mov
cmpsl
aas
lods
jae
jae
adc
add
xlat
ja
cmp
loopne
clc
jae
or
and
pop
adc
aam
pushf
mov
inc
push
pop
paddsw
jns
jg
mov
mov
insb
mov
mov
cltd
je
outsb
enter
inc
pop
rorb
push
out
rcr
mov
les
fidivl
fwait
inc
incl
popl
jne
push
push
push
add
jne
mov
aas
push
pushf
or
stos
xlat
cmp
mov
xchg
xchg
js
mov
jo
leave
rep
iret
jnp
add
dec
cmp
xchg
sahf
jne
cmpsb
jne
int
jecxz
jne
or
popl
leave
add
pop
nop
jno
cmpsl
mov
aas
enter
jbe
or
jbe
cmp
push
jbe
jbe
jbe
aas
jbe
jb
and
outsl
push
jbe
jbe
test
jbe
pop
xorl
xchg
push
push
mov
repnz
lods
jbe
jbe
jbe
es
test
xchg
inc
es
push
xor
xchg
xor
sbb
jb
ja
ja
ja
ja
mov
nop
ja
mov
cmpl
push
inc
adc
shlb
dec
shr
and
ja
xchg
or
das
in
enter
cli
add
push
add
out
adc
or
or
dec
sahf
out
or
xor
jle
adc
fstl
and
pshufw
in
ja
hlt
mov
dec
dec
xor
outsb
and
fdivrs
psubsb
sbb
in
clc
js
test
xor
nop
inc
xchg
or
or
in
xchg
xchg
and
fcmovnb
and
push
aas
stc
int3
lock
popl
call
and
xchg
xchg
jo
js
add
jae
cmp
mov
stos
mov
xchg
jb
jb
fdivp
incl
add
jp
jp
rcr
inc
fsubl
leave
out
jb
dec
xchg
xchg
int
cmp
jo
ja
mov
into
addb
xchg
stos
les
fisttpll
add
stc
sbbb
jp
jp
jp
xchg
and
add
jnp
jnp
int
loopne
jnp
or
das
cmovge
jnp
addr16
or
jnp
jnp
int
mov
cmpsl
cmp
mov
fmull
frstor
ret
cmpsl
lret
rcll
repnz
idiv
sahf
fldt
push
jl
movhps
push
add
es
cs
xor
popf
or
ss
sbb
pop
jl
jl
xchg
out
ja
xchg
mov
inc
repnz
add
scas
pop
leave
mov
mov
ror
cld
repz
cmp
addr16
pop
maskmovq
in
repnz
rcll
pop
pop
push
incl
andb
mov
ror
loopne
ja
lock
jle
test
cmpsl
iret
and
call
jg
movd
push
sbb
dec
fiadds
push
imul
out
xchg
jno
jle
jle
xchg
cmp
inc
aas
punpcklbw
jle
cmp
xchg
jle
loopne
push
call
lock
clc
add
bound
sgdtl
scas
or
pop
pop
pop
adc
jg
jg
jg
outsb
mov
pop
ud2
iret
repz
sahf
adc
dec
ds
push
pop
cmp
repz
sbb
push
jo
sbb
jg
add
icebp
jmp
repnz
daa
inc
fwait
adc
enter
xor
fwait
sbbb
xor
addb
cmp
addb
repnz
inc
dec
push
or
out
jns
pop
pop
or
enter
push
jnp
push
repnz
jecxz
sbbb
jb
mov
mov
loopne
rcrb
shrb
loopne
rorl
ja
push
or
cmp
sbb
clc
push
outsl
or
cmpsl
push
push
pushf
xorl
pushf
cmpsl
andl
add
popf
nop
fcmovne
repz
test
xchg
test
inc
popf
subl
sbbl
or
pop
push
repnz
bound
xchg
mov
jp
addb
mov
xchg
lcall
lods
fwait
cmp
ret
clts
pop
iret
repz
add
cmp
repz
rorb
ficoml
daa
iret
jae
loop
adc
cli
ficomps
stc
cmp
add
adc
mov
mov
lock
dec
push
mov
jae
pop
ja
in
push
js
xor
daa
addr16
mov
mov
dec
stos
push
or
or
outsb
repnz
aam
or
pop
pop
and
sahf
pushf
incl
test
pop
sub
xchg
nop
xchg
lahf
mov
lods
pop
mov
das
cvtps2pd
push
mov
bound
scas
jae
nopl
inc
pop
xor
xor
jnp
lahf
push
daa
mov
jg
push
add
push
pop
out
dec
es
iret
add
mov
dec
ja
enter
cmp
fisubl
pop
dec
out
or
out
cs
push
cmovs
dec
inc
daa
jo
mov
cmp
add
mov
test
enter
cltd
cltd
outsl
test
mov
outsb
test
enter
push
add
out
add
rcll
lock
mov
pop
xchg
lsl
mov
test
leave
dec
sahf
xchg
out
roll
mov
jae
hlt
push
add
leave
inc
xor
pop
xchg
daa
pop
add
xchg
push
das
push
add
push
fwait
xchg
jb
enter
xchg
popf
into
in
ret
pop
lret
xlat
shll
and
and
push
mov
dec
pop
or
lcall
mov
add
mov
decl
pop
insl
push
jg
jg
fcomps
das
or
leave
repz
add
es
push
sbb
or
mov
enter
mov
push
push
or
pop
lock
jle
mov
in
repnz
dec
adc
nop
mov
xor
mov
jb
ror
psllq
psubq
mov
push
daa
daa
daa
daa
push
xor
daa
daa
xchg
mov
fcoms
and
xchg
push
sbb
mov
lods
push
push
ror
cmp
fmuls
and
jmp
and
ds
or
test
inc
daa
ja
incl
cs
push
pusha
xchg
push
mov
fwait
mov
fcmovne
cmpsb
mov
mov
jb
out
idiv
sahf
out
jp
lea
add
add
aaa
push
aas
lea
fadds
mov
lea
daa
daa
daa
and
xchg
jl
mov
cmp
int
jb
jb
out
idiv
pop
stc
sarb
femms
mov
sahf
out
sahf
pop
push
or
or
jns
out
or
or
or
jns
out
add
push
xchg
iret
enter
pop
mov
cwtl
test
test
cmpsb
test
loopne
lret
mov
mov
pop
movsbl
mov
fmuls
mov
mov
mov
push
mov
push
es
cs
in
mov
popl
in
loop
push
pop
dec
addr16
in
in
jb
jp
test
jns
cwtl
push
pop
mov
sahf
out
mov
mov
sahf
out
shll
jns
in
in
sub
or
iret
sarl
sub
or
icebp
pushf
cmp
sbb
dec
and
xor
xor
cs
nop
push
fistps
inc
mov
jp
nop
fistps
syscall
stc
fsubl
pop
ficoms
mov
add
dec
inc
dec
int3
pop
lmsw
pandn
in
or
fs
pop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
pop
push
imul
mov
xchg
xchg
xchg
xlat
cmc
std
add
sbb
or
adc
add
mov
add
pop
aas
arpl
or
das
mov
mov
pavgb
jl
out
lock
and
xchg
lock
rdtsc
xchg
aas
push
push
daa
leave
in
ss
ds
xorps
pop
repz
cmp
addr16
mov
leave
stos
mov
shr
fcmovu
leave
repz
decl
pop
xchg
push
xor
sete
aaa
pop
js
mov
push
cmp
aas
xchg
or
pop
cmp
cmp
scas
xchg
sub
aam
push
dec
fimull
loopne
ja
dec
add
xchg
xchg
mov
and
add
pushf
mov
push
jo
and
aaa
sete
mov
in
in
fabs
lock
repz
dec
xor
push
add
leave
leave
xor
inc
xchg
fcmovne
repz
dec
aaa
jns
jae
jle
or
or
lahf
pop
stos
jns
sahf
out
adc
into
adc
out
ftst
adc
cli
das
mov
js
push
add
out
jns
sbb
sbb
sbb
cmp
inc
out
jns
push
pop
pop
push
xchg
jae
add
loope
in
xchg
lahf
xchg
stos
xchg
pop
inc
es
int
xor
leave
xchg
mov
cwtl
shlb
cwtl
dec
inc
cwtl
fucom
jns
dec
push
add
clts
enter
pusha
pop
mov
mov
cs
xlat
dec
sahf
pop
push
or
femms
ds
out
sahf
cwtl
push
adc
mov
adc
cmp
rorl
add
pop
fsubs
loopne
sbb
orl
sahf
cvtdq2ps
das
mov
inc
inc
sbb
sub
xlat
add
repnz
outsl
daa
mov
cltd
mov
aas
xor
aas
cmp
repnz
xchg
add
fucomi
jbe
mov
jbe
cmp
mov
rcll
dec
cs
hlt
paddb
adc
imul
das
dec
xor
outsb
addr16
movsbl
pop
dec
xorps
push
pop
and
leave
or
cmp
pop
pushf
xchg
aas
lcall
mov
out
aad
add
mov
dec
add
xchg
imul
cmovae
add
add
sahf
ja
pop
arpl
push
imul
jns
or
in
cmpsb
scas
mov
and
in
mov
xor
icebp
stc
pop
mov
adc
push
mov
sbb
and
sub
jb
daa
xor
xchg
xchg
sahf
out
mov
outsl
repz
ja
pop
xchg
xchg
pushf
lahf
lahf
pushf
loopne
jbe
xorb
mov
in
rorb
fcmovu
loop
ljmp
pop
cli
filds
popf
pop
or
out
popf
daa
xchg
iret
add
or
xor
and
xchg
add
add
jbe
orb
ja
sbb
stos
mov
mov
leave
ret
lret
psrlq
push
push
push
mov
popf
pop
mov
sbb
sahf
inc
repnz
addr16
pop
fs
loopne
sahf
out
pop
out
jns
insb
add
leave
out
xchg
test
and
jl
mov
call
push
cs
pusha
or
cmpsb
mov
xor
iret
sub
add
out
pushf
pop
orb
jns
mov
mov
iret
repz
ret
mov
lahf
jecxz
out
lahf
pop
jmp
lahf
add
fisttps
mov
sbb
xor
cmp
pop
mov
addr16
jge
mov
xchg
mov
mov
fnsave
jns
mov
nopl
daa
daa
sbb
aas
sbb
dec
dec
dec
dec
sbb
push
adc
adc
loopne
enter
jmp
imulb
add
or
xor
mov
xor
xor
movsb
rcr
mov
sub
cmp
cmp
iret
repz
dec
cmp
cmp
repz
inc
jp
test
cmp
repz
nop
inc
fwait
inc
fmulp
cmp
cmpsb
inc
mov
push
inc
rep
stc
cmp
decb
mov
sahf
dec
adc
cs
sub
sahf
out
sahf
xor
push
mov
out
push
push
popa
insb
pop
ja
daa
daa
daa
orb
repnz
fimuls
dec
iret
fcmovu
in
inc
leave
out
das
popa
cmp
cmpsb
mov
mov
out
inc
ds
add
cmp
mov
jns
or
pavgb
pop
call
aas
add
or
jns
out
nop
adc
mov
rclb
pop
mov
cmp
mov
jp
mov
fcoms
movsb
xchg
addr16
sbb
ja
leave
push
pop
movsb
lahf
outsb
rep
into
pusha
addr16
push
movsb
mov
pop
pop
jo
js
andb
movsb
mov
subb
mov
add
daa
and
push
lret
leave
leave
rcr
loopne
jbe
movsb
dec
movsb
outsl
clc
pop
push
jb
sti
add
inc
cmp
jae
dec
adc
mov
pop
push
or
movsl
fs
js
movsl
aas
adc
xchg
jns
movsl
cmp
xchg
xchg
movsl
movsl
push
add
adc
leave
repz
cmp
lret
mov
daa
leave
leave
leave
lods
fcmovnb
jecxz
repz
mov
je
cmpsb
jns
lret
sub
push
pop
xor
sbb
fucom
aas
push
mov
cmpsb
push
bswap
lret
inc
js
cmpsb
das
imul
lret
andl
dec
dec
mov
leave
mov
in
adc
cmpsb
cmpsl
cs
repz
sbb
xchg
outsb
repnz
cmp
sbb
jns
sahf
push
inc
push
and
popf
cmp
push
jns
xchg
outsl
lahf
push
daa
stos
mov
cmp
fisubrs
shlb
repnz
test
test
out
cmp
push
add
cmp
add
inc
dec
test
push
ror
jb
xor
daa
iret
jae
add
ret
push
push
rorb
out
pop
syscall
ds
or
fimuls
out
ficoms
imulb
sahf
out
movups
adc
adc
jns
out
adc
adc
sahf
push
xor
pop
inc
dec
fwait
cmp
repz
mov
mov
pop
insb
dec
sahf
out
mov
and
fmulp
repz
and
xchg
push
es
out
repnz
fisubs
iret
repz
mov
sbb
add
aad
jle
inc
add
jae
shlb
sub
ret
das
outsb
lods
in
mov
rep
xchg
xchg
stos
stos
pop
xor
add
leave
leave
cmp
push
push
dec
jb
outsb
xchg
stos
das
jbe
dec
stos
leave
repz
scas
or
fisubs
and
call
js
pushf
and
add
cmp
jb
stos
push
add
cmp
leave
repz
fwait
cmp
repz
push
movsb
pop
jae
or
iret
xrelease
mov
cmp
stos
lods
stos
mov
ret
mov
inc
int
fsubrs
test
jns
mov
cs
dec
sahf
out
add
and
packssdw
pushf
pushf
dec
nop
fwait
cmpsb
mov
cmp
sarb
sahf
cmp
jbe
pop
invd
call
enter
lods
or
iret
repz
push
sub
xor
or
adc
ljmp
pop
push
leave
repz
sahf
pop
ja
push
sbb
fwait
aas
cmpsb
sbb
sbb
mov
and
sub
jle
aas
idivl
in
add
sbb
cs
out
sahf
and
sub
push
scas
mov
push
cs
lds
scas
scas
pusha
sub
enter
rorb
or
cmp
sahf
scas
verw
or
pop
sbb
and
iret
repz
sub
xor
shr
adc
cs
dec
push
dec
js
pop
push
sbb
repz
cmp
pusha
sbb
xchg
cmpsl
fwait
cmp
nopl
mov
and
iret
jae
mov
sahf
ja
cmp
ror
sub
cmp
in
sub
loopne
sub
flds
nop
pop
or
cmp
jbe
adc
dec
sbb
xor
je
mov
mov
ss
nop
mov
push
scas
add
stos
fidivrl
push
inc
push
mov
cmp
ds
push
mov
xor
lret
cmp
add
pop
push
add
pop
jp
aas
inc
push
dec
pop
push
inc
lret
inc
push
movsl
xchg
push
into
pop
inc
push
sbbl
outsl
aaa
pop
jnp
cmp
leave
pop
xor
xor
out
sub
and
sbb
xor
out
or
enter
repz
aam
int3
enter
cmp
sarb
out
lods
movsb
cwtl
nop
iret
repz
js
fs
cmp
repz
inc
inc
cmp
xchg
or
sbb
or
add
xchg
fstpl
inc
das
push
push
add
psllq
jae
sbb
cmp
or
or
or
in
or
or
outsb
mov
scas
adc
adc
adc
daa
daa
mov
and
jbe
push
das
push
xorps
shr
das
insl
push
and
mov
push
pop
andb
mov
aas
addl
sub
xchg
add
aas
xlat
pop
push
insb
ret
repnz
add
xor
add
add
bound
xchg
stc
nop
loop
jne
imul
add
mov
cld
inc
xchg
pop
adc
add
movsb
add
in
leave
pop
lods
pusha
cmpb
cmpsb
fisttps
mov
jl
lahf
loopne
inc
jle
test
shll
push
mov
mov
cmp
mov
sbb
in
out
adc
mov
mov
ficompl
dec
leave
mov
mov
xor
fcomp
loopne
jb
jle
xchg
mov
and
addr16
inc
mov
sbb
dec
jnp
push
fdivr
inc
and
lods
mov
inc
fmuls
inc
pop
pop
mov
js
jle
pmovmskb
add
mov
sub
inc
mov
aas
pop
inc
push
mov
ret
jle
iret
imul
push
or
into
adc
jns
out
adc
sahf
adc
sbb
int
iret
repz
lods
sbb
cmp
repz
push
sub
ret
sbb
pop
outsb
enter
out
dec
fwait
aas
lret
push
jns
repz
mov
jg
push
pushl
sub
jnp
xchg
clc
call
aas
cld
inc
pop
pop
inc
popa
add
jg
and
xchg
call
push
jae
xorb
mov
stos
sahf
addr16
push
push
pop
inc
jg
je
adc
inc
push
xchg
jo
rcll
pop
pop
je
pop
aam
pop
and
mov
out
cmpsl
dec
fsubrs
jg
stc
mov
add
push
and
mov
fidivs
roll
mov
mov
in
add
xchg
es
rclb
xor
cmp
sbb
and
sbb
jns
pop
aas
lock
and
push
ds
repnz
cld
sarb
jns
loopne
add
adc
cmp
jae
fsubl
das
push
or
or
jnp
repz
adc
in
jns
idivl
adc
rcrb
out
sahf
out
mov
test
sahf
out
sahf
movsb
and
popf
out
xchg
mov
adc
aas
clc
mov
mov
orb
inc
out
aam
push
push
xor
xchg
enter
cs
inc
cmp
repnz
sbb
jns
jae
cmp
pop
js
dec
repz
mov
repz
xor
jns
ds
add
push
pop
ja
loopne
sahf
xchg
mov
bnd
das
sub
jns
dec
insb
xchg
push
loopne
add
mov
and
jb
add
or
and
repnz
ret
mov
adc
dec
pop
and
sbb
dec
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
call
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
fistpll
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
stc
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
jmp
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
lock
xchg
and
and
add
pushl
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
jmp
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
cmp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
jmp
leave
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
ljmp
mov
jp
popa
push
pop
sarl
jl
mov
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
in
fs
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
pushl
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
call
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
lcall
sahf
out
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
cld
ror
add
cmpsb
fmuls
pop
push
in
or
inc
je
inc
inc
push
dec
sub
cmpsl
inc
jnp
cmpsl
decl
add
ja
popa
push
out
mov
les
incl
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
lcall
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
call
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
add
inc
aam
dec
std
test
movsl
cli
test
xor
leave
mov
cmc
jmp
insb
fdivs
jne
filds
or
shrl
push
ficoms
push
xlat
dec
push
popa
sarb
and
mov
cltd
xchg
mov
mov
or
or
inc
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
lcall
mov
mov
movsl
in
lahf
xor
mov
js
stc
decl
xchg
sbb
push
sub
insb
fs
call
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
incl
fnstenv
adc
mov
mov
bound
ficoml
jg
decl
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
mov
shll
jmp
outsb
xor
mov
sarb
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
dec
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
inc
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
jp
iret
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
ljmp
push
test
ss
sbb
push
imul
aam
loopne
rorl
int3
dec
jmp
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
mov
shll
mov
aas
dec
ss
fisubrl
or
scas
testb
incl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
sar
mov
rclb
or
add
mov
das
es
lds
loopne
pop
loopne
mov
add
mov
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
pushl
push
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
clc
jmp
mov
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
pop
hlt
lcall
clc
sar
imul
push
js
or
push
addl
decl
mov
cmp
cmpsl
notl
pusha
rorb
imul
lret
shrl
or
inc
push
add
jg
aaa
pusha
mov
fidivrs
mov
jmp
cmp
mov
lret
mov
cmpsb
mov
sarb
sub
call
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
test
pop
out
add
cld
mov
adc
inc
add
pop
add
lea
clc
push
lock
dec
add
pop
inc
push
xlat
fcomp
fidivrl
out
fcmovnu
fstp
loop
out
out
in
call
jns
jmp
in
repz
sahf
out
cmc
div
clc
je
jns
stc
cli
sti
cld
daa
inc
or
adc
sub
or
push
mov
sarb
xor
push
dec
bound
dec
addb
popl
mov
insl
std
push
dec
dec
inc
ss
je
push
pop
stos
inc
in
cltd
out
and
enter
inc
dec
dec
inc
jns
push
push
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
divb
xor
or
xor
bound
aam
push
fs
push
inc
jbe
cli
shl
pop
insb
imul
push
insb
gs
push
dec
inc
ljmp
or
enter
repz
je
adc
popa
or
das
or
or
push
je
scas
ss
fs
push
jbe
add
jbe
jge
aas
fsts
jle
gs
push
and
push
xor
test
cli
adc
dec
arpl
add
inc
loopne
xor
insb
popa
jns
cmp
pop
dec
insb
and
rcrb
xchg
cmp
movq
aas
inc
push
add
pop
push
inc
aas
sub
aas
cltd
and
ja
push
int
or
inc
aas
inc
push
dec
mov
pop
sbb
fs
inc
inc
es
xorb
je
jbe
jae
inc
inc
inc
add
ds
cmpsb
in
adc
scas
add
shrl
jnp
iret
int
push
cmp
dec
push
dec
cmp
inc
mov
pusha
stos
or
jb
mov
movsb
xchg
inc
outsb
jne
jno
push
mov
pop
fnstenv
add
add
or
adc
xor
addr16
clc
rcr
mov
jo
mov
inc
cmp
aas
aaa
leave
cli
adc
push
mov
gs
mov
or
pop
sbb
adc
mov
xor
cmp
mov
mov
inc
mov
scas
or
ss
out
jb
mov
add
addr16
and
push
dec
popa
jo
andl
outsl
outsl
test
mov
push
sti
xorb
and
sub
pop
or
pop
or
nop
test
pop
cmp
push
dec
xor
arpl
cmp
mov
jo
push
push
add
jns
inc
mov
jb
pop
push
add
gs
notl
outsl
arpl
insb
daa
sub
mov
xchg
mov
in
bound
ja
inc
jbe
shrb
xor
daa
es
ja
dec
xor
cmp
les
das
adc
imul
or
push
add
add
xorb
sub
iret
xchg
mov
adc
pop
inc
xor
hlt
out
sub
call
sbb
pop
mov
sbb
shrl
outsb
rclb
inc
pop
sbb
inc
dec
pop
bound
fsqrt
push
jns
arpl
je
mov
in
push
addb
insl
aaa
pop
stos
loopne
mov
lea
inc
testb
imull
daa
sub
and
add
push
cmp
or
sub
xor
loopne
ret
jl
cmc
mov
xchg
push
test
addb
xchg
cmp
fstpl
jmp
cmp
inc
or
pop
dec
leave
stos
xchg
loopne
xchg
movb
mov
mov
in
cltd
cmp
sub
mov
xor
int3
jge
hlt
sbb
mov
jbe
decl
lea
sub
and
or
stc
pusha
leave
ljmp
call
jecxz
inc
inc
imulb
std
sub
cmp
inc
pop
movsl
repnz
scas
cwtl
jge
push
mov
cld
and
stc
dec
push
inc
and
les
int3
mov
mov
push
cmp
fadd
mov
jmp
xor
or
aaa
ss
dec
fiadds
and
bound
mov
cltd
sub
push
push
dec
int
inc
push
sub
addr16
dec
aaa
push
mov
cwtl
addb
dec
sub
imul
lcall
adc
adc
or
mov
push
lods
add
pop
mov
enter
stc
cmp
xchg
lcall
mov
test
scas
in
push
sahf
sub
ja
mov
xor
dec
fsubs
inc
into
mov
push
jg
int
add
cmc
lahf
popf
push
leave
addl
xor
cmp
push
mov
dec
dec
adc
lock
test
mov
insl
push
fsts
in
lea
and
lret
mov
mov
mov
sbb
pop
mov
dec
iret
jne
pop
cmpsb
jge
incl
outsl
pop
and
sub
in
pop
mov
mov
adc
mov
mov
xchg
ret
add
call
stos
cmp
jle
adc
pop
xchg
aam
fcos
filds
stos
aas
sbb
pop
cmpl
cli
gs
jo
add
mov
loope
jnp
sti
pop
mov
mov
jg
pop
mov
pop
mov
sbb
sub
mov
xchg
rcrl
pop
aad
fsubrs
ud0
ljmp
adc
iret
adc
in
jp
scas
sub
xor
inc
pushf
cmovno
sub
pop
dec
mov
xchg
out
mov
xchg
int3
xchg
jge
inc
fcoml
dec
add
xchg
int3
xchg
in
icebp
add
iret
jmp
mov
ss
arpl
sbb
insl
imul
xchg
fs
ljmp
sbb
sbb
pop
pop
in
stos
pop
and
fistps
mov
jmp
xchg
cs
pop
pop
mov
xchg
mov
mov
push
dec
popa
cwtl
movsl
fbstp
push
mov
pushl
stc
add
imul
push
push
mov
add
mov
or
push
fbstp
int
pushl
pusha
iret
push
sti
xor
xorb
mov
fidivrs
mov
lcall
lds
mov
fisubl
aaa
mov
out
cmp
in
or
inc
outsl
jmp
mov
dec
jmp
lea
movsb
cmp
jg
call
pushf
scas
sbb
imulb
roll
push
ficompl
incl
lods
inc
clc
inc
out
push
ds
xchg
lea
rcrb
push
mov
inc
lock
sub
jmp
repnz
gs
test
mull
in
sub
dec
ljmp
outsb
mov
stos
mov
data16
arpl
jp
js
xchg
call
mov
mov
xchg
cwtl
hlt
lods
scas
adc
testb
jp
mov
lods
sbb
jns
dec
enter
pop
xchg
mov
std
shrl
and
call
incb
adc
aad
das
inc
jmp
jno
lock
incl
and
pop
lahf
fucomip
adc
js
idivb
xchg
and
xor
fs
aas
pushl
outsl
insb
lahf
hlt
cmp
test
jo
push
int3
in
stos
gs
add
push
out
lock
ljmp
pop
push
lods
stos
sub
pop
pop
dec
mov
fwait
or
decl
add
dec
movsb
mov
mov
mov
push
addr16
cmp
mov
and
ljmp
sbb
mov
mov
lahf
push
dec
xchg
cli
jns
cmc
sbb
adc
mov
pop
adc
pop
mov
jl
neg
out
or
or
fidivl
inc
jmp
push
fistpl
fistps
mov
in
mov
mov
mov
in
push
das
adc
fiadds
cmp
mov
pop
xchg
shll
inc
xchg
push
movsb
xchg
icebp
andb
cmp
pushf
outsb
std
jbe
pop
pop
xchg
out
outsb
loop
and
stc
ja
sub
push
sbb
add
mov
out
sub
movsl
pop
in
jge
dec
cmc
incl
jnp
xchg
cmp
push
call
and
mov
ljmp
scas
adc
test
ss
loop
iret
mov
ja
cmp
xchg
call
xchg
js
jl
sbb
push
nop
leave
mov
call
cmpsl
adc
jecxz
leave
in
cld
push
jl
xor
fldenv
in
call
movl
sbb
or
sbb
push
push
clc
add
xchg
imul
cmp
jmp
inc
rcr
data16
xchg
push
add
jae
ljmp
lahf
jns
clc
pushl
pop
mov
add
push
dec
mov
in
sub
nop
pop
mov
add
bound
mov
clc
add
bound
cmp
leavew
jg
sar
xor
fdivrs
leave
and
mov
or
rol
mov
inc
lods
enter
movsb
or
and
lret
mov
jmp
xchg
ficomps
adc
jl
loope
mov
pop
sbb
ds
cli
mov
ret
imul
xor
push
mov
jmp
pop
add
and
in
mov
cld
jmp
pop
leave
and
nop
xchg
xchg
xchg
cld
shrb
dec
addr16
fcomip
push
inc
aaa
adc
jecxz
sub
clc
jae
out
inc
jge
in
ret
call
xor
adcb
test
or
ds
and
and
into
cli
loop,pt
ljmp
and
data16
sbb
pop
fadd
add
call
sbb
cmp
add
xchg
lret
gs
jle
mov
or
mov
fs
inc
xor
bts
mov
gs
ja
jge
pushf
mov
cli
adc
pop
xor
fstps
out
pop
jo
arpl
jp
out
out
push
es
lcall
lods
ret
leave
rcll
xchg
leave
mov
cmp
addr16
loopne
popf
insb
pushf
mov
sub
movsl
out
fs
and
sbb
xor
outsb
push
mov
rcll
pop
ljmp
out
aas
adc
adc
and
cmp
add
jmp
pop
pop
or
adc
dec
in
inc
sbb
jle
popf
test
fs
dec
sar
jne
enter
test
cmp
dec
inc
cmc
mov
leave
mov
mov
push
enter
sub
js
neg
inc
hlt
div
cmp
decl
sub
push
ja
push
es
imul
into
test
push
out
xor
ret
fmull
push
out
sahf
push
ret
aas
hlt
scas
sub
adc
imul
jp
outsb
pusha
mov
dec
sub
pop
jl
xchg
jae
fdivp
and
ja
outsl
data16
xor
mov
gs
mov
inc
mov
pop
popf
mov
bswap
dec
stos
out
xlat
mov
lahf
out
push
repnz
cmpsb
lcall
xchg
pop
push
cwtl
imul
int
decl
lock
cltd
mov
hlt
cmpl
mov
mov
and
mov
jns
pusha
dec
inc
dec
fdiv
je
ds
xor
insb
push
dec
pop
mov
cli
xchg
in
mov
cmp
push
ret
xor
sbb
notb
repnz
dec
ret
mov
fiadds
pop
jp
hlt
jnp
mov
shrb
and
push
and
fucomp
push
or
jae
into
mov
push
fs
push
call
test
repnz
cmp
aad
jb
ljmp
enter
incl
lret
nop
lret
jp
aam
ja
stos
clc
sbb
test
rcll
leave
lods
dec
fwait
leave
sub
jmp
add
cmp
or
in
xchg
cli
cli
out
pushf
inc
xchg
sbb
cmp
incl
xchg
jnp
jae
adc
or
xchg
jle
sub
repz
pushl
popa
sbb
clc
mov
jb
std
sub
ret
xor
repnz
pushl
cs
lods
dec
lcall
add
pop
xchg
cmp
inc
or
jne
data16
lcall
mov
sub
xor
push
cmp
sub
push
bound
or
pop
decl
sub
pop
das
adc
out
push
lock
mov
push
addr16
mov
and
in
ljmp
sbb
add
sub
sbb
mov
int
pushf
or
inc
push
sub
in
hlt
int3
adc
push
test
mov
mov
push
xchg
jg
enter
stc
cwtl
sub
xor
push
push
stc
xchg
push
mov
roll
fisubs
jle
ljmp
mov
bound
mov
pop
jno
mov
loopne
mov
call
and
imull
pop
and
loopne
and
ret
pushl
xchg
sti
add
push
jnp
loopne
pop
imul
decl
sahf
cmp
push
out
jl
dec
ds
mov
loopne
call
and
lock
pop
adcb
test
add
mov
and
mov
ficomps
mov
xchg
scas
nop
mov
push
lcall
dec
push
mov
jns
mov
cmp
outsb
lahf
jo
aad
dec
mov
clc
aas
leave
sub
dec
rcrb
fidivrl
sub
sub
pop
icebp
xchg
jnp
insl
inc
xor
pop
out
jnp
dec
jg
test
arpl
and
push
push
adc
pushl
leave
mov
in
aad
popaw
es
jns
test
mov
sub
add
decl
mov
in
jb
adc
sub
in
dec
rcll
testl
decl
xchg
xchg
dec
mov
lret
mov
iret
imul
dec
adc
ret
mov
cli
decl
mov
stc
cmp
out
push
mov
cld
and
cmp
ljmp
mov
loopne
jl
stos
stc
scas
push
mov
aas
or
mov
lcall
xchg
mov
jno
inc
cmp
ret
fsubp
mov
xchg
lds
cli
pop
and
sar
dec
bnd
inc
adcb
dec
adc
sbb
mov
mov
sub
nop
mov
mov
jge
cmp
and
out
push
adc
mov
mov
movsb
mov
sahf
sti
sbb
pop
dec
fbstp
jmp
das
out
cmc
dec
cmp
jnp
popa
mov
insl
scas
movsb
and
in
mov
decl
cli
clc
mov
and
sahf
and
inc
shlb
inc
stc
ret
and
cmpl
pop
mov
aam
jg
push
xor
test
dec
and
cld
clc
pop
sahf
sahf
inc
jl
in
ljmp
test
daa
aaa
xchg
adc
iret
push
stc
adc
repnz
jns
or
pmovmskb
jg
jp
in
add
mov
fildll
fwait
incl
out
loope
out
mov
lods
push
jmp
loopne
shrb
sbb
xchg
cmp
xchg
adc
inc
aas
add
push
cmp
sar
incl
or
push
xchg
xor
or
adc
jns
sbb
mov
fistps
cmovnp
lret
add
dec
jg
aad
test
orl
push
inc
ficoms
cwtl
les
xor
or
jmp
leave
xor
xor
pop
push
jecxz
shll
dec
dec
ss
dec
inc
call
dec
fcomps
das
and
sbb
std
and
push
mov
outsb
ljmp
pop
xchg
push
inc
fmull
andb
push
les
fwait
std
cmc
in
into
sub
shlb
popa
ljmp
pop
lock
inc
nop
add
xor
shr
ret
and
aam
xchg
scas
ficoml
pushl
into
jno
js
out
fsubl
out
je
mov
xlat
mov
adc
ja
inc
movsb
jo
mov
sti
push
fwait
and
mov
xchg
pop
fs
adc
aaa
dec
imul
bound
pop
subl
in
xchg
cmpsb
adc
ja
jl
stos
decl
jge
hlt
pop
lahf
or
inc
sbb
in
nop
fwait
pop
test
push
sarl
in
shll
out
nop
xor
sbb
sti
push
sub
call
clc
push
mov
sbb
xchg
mov
hlt
icebp
insl
cwtl
pop
test
jmp
jb
jg
or
push
push
xor
add
adc
pop
repnz
jp
fcoml
or
inc
sbb
push
nop
sbb
dec
int
daa
cmp
adc
and
decl
mov
stos
out
fnstenv
jbe
and
xchg
cmpb
int3
inc
call
mov
jne
inc
pushl
shlb
loope
push
lcall
mov
adc
push
mov
imul
lret
xor
pop
popa
call
sub
add
mov
pop
stc
sub
dec
divl
and
dec
xor
pop
sbb
xor
add
inc
pop
mov
ss
lods
sar
sbb
test
dec
sbb
outsb
adc
outsl
int
lret
jg
sub
popl
inc
pop
rol
mov
sub
test
stc
cmp
test
jmp
ret
xchg
fmull
add
cmp
xor
mov
cmc
jle
stc
flds
or
sub
xor
xchg
test
cmpsl
cmp
add
fildll
pusha
jmp
jge
movsb
add
xchg
test
pop
pop
push
cmp
bound
idiv
pushl
add
out
mov
mov
outsl
adc
mov
push
test
add
insb
movsl
mov
mov
neg
adc
push
or
loopne
stos
add
adc
lcall
xchg
popa
rep
dec
les
xchg
sub
lret
mov
dec
and
ljmp
movsb
pop
push
test
or
mov
cli
call
or
mov
adc
pushf
stos
cmp
inc
mov
mov
mov
ds
push
insl
or
pop
push
out
inc
lahf
sub
inc
mov
std
xchg
test
decl
iret
inc
jp
lret
mov
mov
call
xor
or
repz
cs
sub
xchg
pushl
fiaddl
cs
mov
sbb
pop
repnz
mov
repnz
ljmp
add
inc
pop
push
mov
push
mov
jp
stc
jle
call
orb
or
rcll
xchg
xchg
xor
popf
mov
decb
xor
mov
jno
arpl
dec
mov
cmp
addl
jmp
fimull
ret
mov
cs
jae
adc
pop
ds
mov
mov
push
imul
jge
aas
cmp
pop
bound
mov
adc
push
cmp
pop
add
ljmp
inc
bnd
ffreep
pop
dec
adc
mov
mov
xchg
jns
push
scas
mov
push
ret
adc
and
cld
jle
and
mov
adc
mulb
sub
repnz
and
aaa
mov
sbb
ljmp
xor
and
dec
pop
dec
mov
test
int3
add
mov
ljmp
or
xchg
pop
movsb
mov
ljmp
pushf
cmp
aad
cmc
cltd
adc
stos
cmc
mov
pop
mov
jg
or
stos
pop
xor
cmpsl
adc
in
test
sahf
mov
movaps
jl
xchg
or
jmp
imul
adcb
mov
outsb
or
incl
test
test
test
adc
sub
imul
xchg
push
cs
cli
mov
call
xor
inc
push
mov
outsb
lea
dec
push
dec
jge,pn
sub
add
or
push
dec
xchg
xchg
sti
mov
test
in
cmpsb
cmp
push
jmp
jae
pop
jl
and
xor
add
xchg
cld
dec
rorb
pop
in
adc
or
popw
ljmp
test
imul
mov
push
cmp
int
adc
fsubs
or
incl
xor
call
inc
xchg
sbb
dec
add
lds
mov
xor
mov
hlt
aam
mov
lcall
and
test
add
idiv
hlt
inc
dec
mov
or
std
dec
sbb
push
shll
adc
push
rcr
scas
inc
jmp
pop
cmp
xlat
mov
jg
in
adc
loope
dec
test
or
iret
sub
mov
push
jo
sar
call
daa
dec
shlb
test
or
cltd
iret
mov
sub
xor
inc
ljmp
or
pusha
js
push
lcall
int3
mov
loopne
cmp
xchg
mov
call
sbb
mov
data16
mov
sbb
dec
jns
std
decl
pop
lds
movsl
add
js
jge
sbb
xchg
jmp
pushl
fcompl
pop
add
aaa
inc
sub
mov
gs
mov
cli
cmp
sarl
jmp
das
int
insl
adc
jg
inc
es
loope
pusha
nop
arpl
xchg
xchg
xchg
mov
loop
scas
test
aaa
rol
aad
sbb
mov
lods
inc
push
clc
fdivrp
decl
insb
adc
push
sti
rorb
and
mov
into
lcall
call
mov
lods
sub
jno
add
and
dec
cmp
sbb
clc
add
xor
cmpsb
mov
ret
cmp
ficoms
in
fcoms
add
loop
orb
ss
jmp
pop
mov
shlb
push
lret
mov
dec
dec
dec
push
loop
test
pop
push
mov
repz
in
cmp
xchg
out
jb
mov
iret
pop
arpl
outsb
call
subb
mov
xchg
mov
push
pop
pop
xchg
das
adc
add
cmpsl
mov
jmp
jo
push
mov
subb
lcall
bnd
pop
sub
pop
fwait
stos
dec
ret
cmpb
mov
mov
cmp
adc
or
cmp
mov
scas
ljmp
pop
inc
mov
or
and
imul
popa
fldl
cld
leave
dec
fdivp
push
cmp
push
inc
lret
sub
mov
push
test
jo
incl
test
xorb
mov
std
insb
sbb
dec
out
loopne
mov
and
jmp
jns
pop
stos
idivl
or
mov
pop
cwtd
test
adc
mov
scas
clc
push
dec
out
mov
inc
push
dec
bound
imul
insl
rclb
add
jmp
divl
rclb
sbb
cli
mov
lcall
xorb
sbb
scas
sbb
cmp
inc
ds
add
mov
push
es
loope
push
push
mov
inc
mov
jp
inc
add
dec
jae
fdivrs
ret
mov
cmp
popa
ljmp
or
test
or
out
mov
out
xchg
jl
pop
push
idiv
jmp
add
mov
out
cmp
lods
add
mov
in
decb
popa
inc
sub
xor
incl
jecxz
scas
adc
adc
jle
push
cmp
stc
inc
push
ljmp
dec
orl
push
mov
push
mov
fs
push
repz
jg
lcall
aaa
cmp
mov
fidivrl
subb
pop
stos
inc
or
ljmp
mov
adc
sub
mov
in
dec
cmc
or
cmp
pop
int3
sar
pushl
mov
inc
les
icebp
ret
mov
xchg
out
pop
mov
cmp
push
sub
outsl
pop
jmp
clc
ljmp
adcl
fidivrl
shrl
std
call
ljmp
cmp
repnz
jns
push
es
bound
into
and
call
clc
cs
jo
inc
xchg
mov
and
inc
addr16
adc
pop
cmpsl
adc
sbb
aaa
lea
or
sbb
cli
or
or
popf
xor
bound
arpl
mov
stos
movsb
stc
cmp
ret
test
xor
out
jle
ljmp
cmp
and
ror
loopne
xchg
js
dec
test
test
dec
or
pushl
xchg
dec
mov
push
iret
jne
add
enter
ja
xchg
outsl
xor
lods
aad
xchg
adc
out
or
call
sub
int3
outsb
jnp
pusha
aad
movsb
mov
inc
pusha
aas
call
push
or
cmpsb
stc
xor
jae
je
xor
mov
loop
js
rcr
jmp
cli
mov
mov
int
mov
imul
push
ret
cmp
fwait
sbb
loop
mov
decl
lock
inc
pop
xor
or
push
mov
fistl
inc
cld
decl
fimuls
out
aas
lds
std
cmp
add
sti
xchg
stos
cmp
incl
dec
cltd
fwait
out
or
jns
push
lock
mov
mov
jo
cld
jnp
imul
mov
jo
mov
jmp
push
rorl
lods
test
pushl
int3
sarl
popa
xchg
sub
xor
and
or
ljmp
icebp
incl
ret
adc
xchg
sub
push
xchg
push
xor
xor
add
or
ljmp
inc
cs
test
in
scas
outsb
push
jns
and
sub
idivb
outsl
or
and
or
fwait
mov
ret
test
ficoml
or
add
lret
add
aaa
cltd
mov
xchg
cmp
xchg
pop
mov
ljmp
clc
incl
jmp
rcll
xchg
mov
mov
loopne
add
incl
pop
and
loop
and
or
and
js
imul
xchg
in
and
cmc
scas
sbb
xchg
mov
iret
push
dec
in
ljmp
pushl
mov
adc
inc
cli
les
dec
leave
add
xchg
je
mov
movsl
fwait
enter
incl
inc
out
repz
lds
mov
scas
inc
pusha
adc
enter
cwtl
jno
call
lret
sbb
inc
out
jmp
movsb
stos
sbb
sbb
mov
xlat
es
mov
aas
and
jns
push
and
loope
stos
push
subl
or
incl
add
pop
mov
mov
stos
inc
or
lds
shlb
xor
pop
add
dec
sbb
cmp
rcl
sub
cltd
jmp
push
or
call
popa
push
dec
sbb
insb
sar
ljmp
lea
inc
ja
jnp
dec
mov
or
mov
test
cmp
cmpl
push
sub
jo
xor
push
loopne,pn
dec
addr16
daa
in
dec
inc
fdivl
ret
mov
mov
outsl
mov
cmc
lcall
pusha
mov
ljmp
faddl
push
addr16
xchg
push
int3
ud0
lcall
es
div
xor
in
jge
dec
inc
xchg
test
push
sbb
pop
aad
test
call
jp
into
xchg
or
btr
jge
mov
cmp
pop
repnz
lret
pushl
testl
and
inc
dec
mov
xchg
lods
jnp
push
ljmp
daa
fwait
test
xchg
rcrl
and
in
xchg
or
mov
sbb
pop
mov
push
outsb
int
xorb
out
decl
hlt
or
aam
aas
pop
jno
and
je
jle
cmc
testl
decl
jne
sahf
ljmp
or
mov
pop
pushf
push
mov
sbb
jmp
scas
insl
pop
xchg
add
mov
push
outsl
jo
inc
add
push
xorl
ja
loop
lcall
push
jmpw
scas
jbe
mov
cmp
nop
aas
mov
jl
dec
addr16
mov
rorb
idivb
xchg
push
mov
out
clc
pushl
notb
mov
jge
stc
popf
add
ret
or
imul
test
decl
lahf
cmc
es
xchg
mov
jle
orl
pop
add
jge
or
call
das
mov
test
in
push
push
lahf
or
sbb
loop
fbld
jmp
jl
push
or
sub
jb
mov
lcall
addb
call
orb
inc
jmp
xor
mov
jno
sbb
cmpsb
lcall
mov
cmp
ja
xchg
inc
repnz
cmp
adc
add
sbb
cwtl
xor
jmp
in
mov
insw
inc
xchg
mov
mov
mov
inc
fmuls
daa
sub
sbb
hlt
mov
mov
sub
mull
jge
cs
or
test
pusha
cltd
pushl
or
lock
out
cmp
es
nop
add
stc
cmp
mov
outsl
xchg
pop
jmp
or
xchg
fcoml
xchg
icebp
inc
lods
sbb
dec
dec
cmp
pop
clc
stos
hlt
adc
in
scas
pop
fneni(8087
sbb
mov
call
popf
out
add
sbb
into
ljmp
decl
dec
ror
push
mov
lret
pop
dec
stc
insl
test
add
daa
aam
adc
jg
push
sarb
sub
jmp
pop
lcall
int
addr16
dec
insl
cwtl
into
adc
incl
sahf
sub
inc
pop
enter
stos
xor
call
pop
dec
or
add
mov
addr16
pop
cmp
call
out
cltd
ljmp
sbb
int
rcrb
jecxz
ljmp
xchg
cmp
ljmp
xchg
lret
add
andb
jns
cld
div
fs
call
mov
int
xchg
arpl
jmp
pop
cmp
in
movsl
orb
jmp
int3
xor
out
iret
fdivs
xor
sbb
or
jmp
jl
jg
cmc
pop
push
fisubl
nop
loop
popf
pop
xlat
cmpsl
stos
pushl
in
sub
stos
inc
stc
mov
outsl
inc
sub
mov
xor
mov
inc
xor
lret
pop
lret
movsl
mov
mov
fisubs
adcb
jl
mov
add
ljmp
fsubs
mov
xchg
jmp
add
loopne
sbbb
mov
fwait
iret
aad
decl
jmp
push
xor
cld
out
push
lea
jae
sub
imulb
mov
push
pop
mov
dec
sub
lods
mov
mov
xchg
insb
add
popa
cmpsl
pushl
arpl
lea
push
mov
or
test
std
out
clc
dec
fildl
clc
test
lods
lcall
pushf
jbe
call
xor
outsb
pushf
mov
push
xchg
jle
out
dec
psadbw
lahf
inc
or
lea
ljmp
dec
pushf
or
and
dec
and
in
push
out
xchg
ja
dec
ljmp
cmovns
and
mov
inc
adc
and
lcall
rcll
les
fistps
pop
dec
popf
sub
xchg
sbb
pushf
loop
push
sub
je
fstpt
sbb
decl
dec
imul
outsl
dec
cmpsb
shll
out
mov
les
stos
lcall
and
aaa
xchg
xor
pop
incb
scas
mov
mov
pop
mov
inc
xchg
jp
and
cmp
jbe
push
std
adc
out
push
jo
ficoms
jmp
lahf
fcmovnbe
dec
call
or
imul
outsl
pushl
std
jmp
jno
sti
test
aaa
dec
xchg
xor
mov
ljmp
call
mov
lret
or
ljmp
cmp
adc
jle
mov
jno
xor
mov
mov
xchg
adc
clc
ss
jmp
inc
push
in
outsb
repz
or
pop
fwait
xor
std
inc
sub
idivl
nop
inc
out
dec
jmp
mov
imul
cli
jne
jle
pop
call
test
sbb
mov
sarl
int
pushf
punpcklwd
mov
cmp
int
cwtl
and
or
adc
sbb
and
push
pop
insb
and
and
push
push
mov
mov
data16
decl
jns
dec
cs
sbb
popf
bound
loope
xor
insl
cmp
push
ret
or
push
bound
ja
inc
ljmp
adc
mov
jae
and
xor
adc
lcall
cs
mov
pop
inc
popf
rcrl
cmp
sti
jbe
jbe
faddl
arpl
out
and
decl
mov
mov
cmc
dec
inc
hlt
fstps
iret
in
push
ljmp
sub
cmp
mov
pop
jg
cmpsl
mov
inc
js
mov
dec
arpl
pushl
sbb
test
pop
mov
addr16
sbb
sbb
sbb
push
cmp
push
mov
cmp
test
in
lods
stc
lock
ljmp
jmp
in
mov
data16
jg
mov
in
mov
cmc
mov
pop
subb
out
push
loopne
in
dec
ret
mov
incl
jae
pop
fs
xor
int
jno
ret
sub
mov
xchg
pop
push
mov
lahf
sbb
jmp
mov
push
adc
lret
pop
lahf
adc
and
push
inc
mov
lcall
out
pusha
hlt
lahf
pusha
leave
sub
jb
mov
sarb
mov
inc
filds
pushl
in
lahf
ret
push
xlat
out
stc
ret
xchg
fcmovne
aas
mov
xchg
lcall
pushl
in
inc
mov
into
inc
adc
test
int
sub
outsl
call
inc
ljmp
stos
lret
andl
mov
shrl
scas
sub
jmp
pop
divb
jne
sub
enter
mov
mov
mov
lcall
insl
ror
xor
mov
jbe
movsb
in
and
and
ret
ud0
mov
push
or
sbb
imul
and
sub
add
cmp
xchg
push
and
mov
dec
fmull
mov
incl
mov
lcall
mov
inc
and
and
pop
pop
pop
mov
fcomip
dec
ret
mov
cwtl
fnstenv
cmp
pop
xor
and
jb
cmp
int3
in
jp
jg
fists
test
push
shll
pop
add
mov
es
shlb
hlt
push
xchg
lea
pop
aam
lret
js
outsb
call
sub
jp
xchg
sbb
mov
leave
adc
loopne
mov
sub
inc
sbb
mov
aas
jmp
cmc
cld
incl
js
pushf
mov
lods
or
aad
mov
in
cmc
sub
fwait
pop
or
incl
lcall
mov
arpl
outsl
inc
ljmp
mov
sahf
pop
jl
mov
popa
push
rorl
mov
inc
cmp
ljmp
nop
jmp
inc
cmpsb
fimuls
and
jo
imul
call
sbb
lcall
divl
xchg
out
push
mov
movsl
mov
add
jg
xor
jp
lods
hlt
mov
inc
je
push
clc
or
mov
push
sbb
lcall
addb
je
xchg
and
inc
push
in
pop
loopne
lock
mov
nop
hlt
or
mov
pop
push
mov
dec
mov
jg
mov
test
stos
cmp
or
in
dec
jmp
shll
xchg
scas
xchg
mov
inc
push
pop
sub
sbb
inc
pushl
pop
jbe
int
add
or
and
sbb
push
pusha
and
daa
cwtl
jno
decl
mov
cmp
pop
mov
adc
jp
and
cmpsl
loopne
sub
shrl
pop
dec
pusha
mov
jae
xchg
insb
nop
sub
lcall
aam
or
lcall
insb
pop
loop
push
adc
cmp
cmpsb
orl
test
inc
inc
fsubl
adc
and
int
or
shrb
push
aas
pop
sti
sbbb
decl
mov
xor
push
dec
sahf
sbb
icebp
cmp
test
sbb
add
sbb
int3
movsl
pop
cmp
adc
js
add
das
inc
aas
cmp
sbb
sarl
aaa
and
or
push
sbb
jns
fimull
in
or
mov
push
push
jns
or
imul
hlt
lret
pop
dec
scas
pop
xchg
adc
lock
cmp
or
dec
pop
pop
fsubrs
inc
test
xchg
cmpsb
sub
imul
sbb
mov
outsb
lds
push
lcall
ffreep
dec
jecxz
out
sub
xchg
rorl
mov
lods
or
cmpsb
push
and
arpl
mov
dec
jl
shrb
addb
decl
loopne
jnp
xchg
push
dec
xchg
jg
and
mov
pop
mov
fwait
sub
add
mov
xchg
xor
sbb
ja
incl
jl
pop
stc
xor
int
loop
ror
sar
jg
mov
mov
fwait
dec
sar
movsb
icebp
dec
testl
xchg
xor
call
jmp
inc
gs
jge
aaa
xlat
add
pop
ds
or
lret
nop
mov
xchg
jbe
add
call
push
mov
adc
xchg
fcomip
jmp
cmpsl
mov
fnstcw
pop
mov
imul
pushl
jb
adc
aam
jae
push
out
cmpsb
out
in
sbb
mov
mov
out
inc
mov
pop
fsubl
xor
jbe
inc
cmc
test
or
je
std
xchg
ror
inc
xchg
jns
push
div
stos
inc
mov
jge
mov
push
aad
xchg
pop
imul
inc
and
jmp
rcr
dec
add
push
outsl
push
pop
inc
push
int
es
add
push
decl
sahf
adc
jnp
mov
clc
cli
aad
rclb
pop
xchg
mov
xor
cmp
loopne
or
dec
jge
in
ljmp
dec
and
push
rcrb
mov
cld
fsubl
xor
icebp
int3
sbb
ss
fdivrp
fcomip
ficompl
mov
cmpsl
ret
dec
addb
adc
mov
call
sub
and
mov
lea
push
loope
decb
mov
int
push
decl
xchg
cli
jg
pop
pop
adc
xor
pop
push
sub
mov
sti
push
es
jns
ja
call
and
cltd
mov
xlat
cmp
nop
ret
fdivrs
xchg
in
inc
test
mov
incl
cmpsb
pop
add
and
mov
add
subb
mov
repnz
xchg
push
pop
rcrb
mov
xchg
sub
movsl
fdivrs
pop
test
test
cmpsb
cmp
lcall
add
sub
sub
push
jle
push
inc
ret
ret
cld
sti
adc
daa
push
adcl
decl
jns
into
push
rorl
ljmp
mov
test
leave
out
mov
scas
push
lcall
mov
repz
sub
je
push
cmp
mov
jp
mov
push
add
push
hlt
pop
arpl
sub
ljmp
aad
xchg
jo
mov
incl
loop
xor
imul
mov
cmp
mov
inc
jmp
mov
xchg
or
incl
fisubrs
sub
dec
jmp
js
inc
cmp
fisubrs
adc
or
out
scas
sub
or
add
out
adcl
pop
scas
jb
fiaddl
bound
ss
decl
out
call
in
mov
cmp
inc
pop
xchg
out
std
or
incl
cltd
arpl
clc
sbb
jp
and
fistl
call
mov
cld
mov
inc
dec
jbe
sub
das
stos
xor
popa
cwtl
insl
testb
inc
pop
loope
lods
rclb
xchg
dec
mov
sbb
push
mov
lcall
mov
sub
icebp
jg
mov
inc
push
mov
push
xlat
xor
call
mov
mov
cmp
mov
ret
push
push
daa
mov
inc
nop
push
mov
xchg
mov
arpl
lock
xchg
test
hlt
cmp
adc
adc
jmp
pop
fidivs
or
xchg
imul
es
push
repz
inc
mov
pop
xor
add
push
mov
loope
jne
xor
jge
inc
mov
call
repz
jecxz
sbb
test
lret
sbb
xor
aam
mov
push
int3
cmpsb
jecxz
imul
pop
jns
mov
inc
cltd
pop
imul
sbb
mov
pop
push
push
les
push
xor
sti
call
push
mov
in
mov
out
mov
dec
cli
outsl
outsl
jl
sub
mov
xor
rcrl
adc
inc
mov
push
xchg
mov
inc
inc
pop
addr16
ss
mov
int
jmp
sbb
add
pop
mov
jle
inc
jb
sub
fwait
popl
sbb
rcpps
stos
mov
pushl
mov
pusha
and
fldt
inc
cmc
cld
ja
data16
or
xor
divl
clc
mov
sub
jno
cmp
repz
leave
stc
pop
ds
int
out
jge
ss
add
movsb
dec
and
out
aaa
inc
scas
pusha
and
adc
repz
shr
lcall
js
mov
icebp
cmp
jae
xor
repnz
pop
push
iret
xlat
in
mov
outsl
clc
inc
dec
mov
nop
faddl
scas
addb
std
dec
popa
in
lcall
aas
pop
mov
or
add
stos
mov
sbbb
fisttpl
stc
jecxz
mov
fmuls
adc
movsl
stos
insl
jl
int3
ljmp
lcall
imul
jg
jmp
xor
xorb
addr16
cmp
xor
xchg
or
adc
xor
out
das
push
and
pop
inc
mov
aaa
call
decl
or
cltd
mov
dec
ss
adc
jae
subl
clc
lods
arpl
lock
call
jge
push
push
test
cmovne
sti
inc
test
in
decl
negb
js
outsl
stos
xchg
jne
mov
push
jo
decl
mov
inc
fistl
cltd
clc
push
arpl
and
enter
push
jbe
mov
test
call
call
mov
fucomp
push
or
lcall
dec
xor
dec
inc
cmp
int3
push
push
mov
push
fimuls
lds
dec
sub
lock
incl
inc
sahf
adc
call
mov
add
jg
shrl
int3
cmp
out
jno
lock
inc
jb
xchg
pop
int3
pop
cwtl
mov
adc
xchg
loope
fsts
int3
xor
mov
sbb
pop
in
cmp
xchg
in
nop
adc
push
push
adc
repz
pop
push
adc
cli
decl
out
call
push
les
adcl
mov
mov
es
ljmp
sub
sub
in
xor
xor
shrb
lret
aas
mov
hlt
cmp
mov
mov
cmpsl
cmp
xor
xor
inc
je
push
jo
dec
mov
subb
hlt
mov
add
mov
test
jmp
adc
into
pop
lock
jmp
mov
sub
stos
mov
repz
dec
jmp
jge
push
mov
pop
cli
xchg
sub
mov
jae
adc
aad
and
sub
xlat
mov
push
inc
ret
sbb
dec
jg
dec
sub
js
ret
ja
pop
ret
xchg
cmp
aaa
jns
pushl
add
in
lods
scas
mov
pop
inc
imul
adc
icebp
out
cmpsl
xchg
call
pop
jge
iret
ljmp
xor
mov
push
dec
mov
add
popf
ljmp
inc
arpl
lods
hlt
jge
mov
daa
pop
or
popa
mov
bound
icebp
decl
into
mov
dec
jg
dec
xchg
sub
ljmp
xchg
movsl
test
mov
sti
sub
incl
cmp
mull
inc
jl
out
cli
xchg
cltd
inc
push
imul
push
pop
cltd
dec
jmp
mov
xor
je
mov
call
mov
jle
mov
mov
push
or
pushl
cmp
jle
pop
sub
xor
pop
inc
push
jno
sbb
jmp
and
ljmp
daa
jl
sbb
adc
or
lahf
mov
xor
sub
dec
repnz
mov
dec
call
mov
lods
fldt
xchg
lret
pop
push
mov
fidivrs
mov
cwtl
pop
decl
lock
jae
adc
cld
outsl
out
xor
ja
out
push
and
std
adc
xchg
inc
pop
sbb
cli
das
pop
mov
cmp
xchg
xchg
inc
and
xorb
or
notb
out
jl
push
inc
xlat
fdivs
ljmp
pop
roll
pop
push
adc
add
mov
mov
inc
lret
scas
cmc
xchg
mov
mov
loop
and
test
mov
ds
mov
daa
fldenv
outsb
lds
push
jg
shll
jp
in
ss
pop
xchg
shll
lret
fsubl
orb
inc
sbb
mov
bound
xchg
push
inc
or
incb
addr16
pushl
adc
xor
lods
shl
cmp
jmp
loopne
sbb
pop
imul
add
inc
es
dec
mov
sub
es
and
icebp
sub
lcall
xor
and
mov
loop
cli
xchg
xchg
sbb
out
cmpsl
mov
jg
xchg
mov
xchg
jle
mov
jmp
decl
lea
jb
je
fwait
jecxz
mov
inc
sets
aas
or
ljmp
mov
cmpsl
inc
clc
insb
aam
inc
aam
adc
mov
leave
outsl
push
test
decl
xor
xchg
dec
add
xchg
jmp
xchg
sub
daa
add
mov
in
pop
dec
sbb
push
adc
outsb
scas
xor
out
mov
jg
jg
fidivrs
inc
push
pop
roll
test
pop
jmp
clc
rclb
into
pop
xchg
inc
cmp
pushf
push
pushf
iret
out
clc
jmp
cmp
movsl
mov
xor
aad
pop
arpl
aam
push
xchg
decl
decl
dec
movsb
sub
push
lcall
pop
jg
pop
mov
repnz
and
test
mov
xchg
std
mov
push
cli
mov
inc
es
in
xchg
pop
mov
push
and
lret
push
divl
xor
mov
xor
push
and
push
xor
decl
gs
ljmp
loopne
ret
bound
add
inc
es
sub
mov
call
cmp
jle
lods
ds
lods
icebp
xor
mov
xchg
pop
add
mov
ljmp
push
mov
mov
es
aaa
icebp
ret
sbb
mov
mov
adc
pushl
aas
mov
sub
sub
mov
inc
fdivr
and
push
aam
xchg
testb
cmp
add
les
test
pushf
in
fstp
fmull
push
inc
in
test
dec
sti
dec
sti
or
sub
cmc
in
es
mov
test
and
pop
stc
jnp
cmp
call
std
fwait
or
push
fdivs
pop
push
scas
repnz
xor
jmp
fisubrl
sbb
adc
jno
outsb
cmp
push
mov
adc
fldt
jmp
pop
pop
dec
cltd
js
mov
jns
jb
f2xm1
insl
inc
in
leave
addr16
fisttps
pop
pop
xor
sub
scas
pop
mov
push
idivb
int
cmpsb
lcall
sub
cmp
scas
mov
or
cld
cwtl
sub
imul
hlt
out
pushf
ja
repz
or
cmpsb
mov
ficompl
in
push
xchg
inc
sub
mov
leave
lret
mov
pop
test
adc
lods
mov
push
loopne
dec
jb
decl
mov
imulb
add
int3
daa
daa
shlb
outsb
sbb
dec
sbb
jmp
test
push
mov
repnz
inc
rorl
out
pop
sahf
call
jg
jmp
std
xor
mov
mov
pop
mov
jb
mov
test
dec
faddl
call
scas
inc
out
adc
jbe
int
movsb
leave
bound
mov
addr16
pop
mov
push
xchg
pusha
cld
mov
inc
stos
cmpsb
sti
adc
lds
sar
jg
add
test
mov
addb
dec
xchg
sub
inc
mov
into
imul
pushl
lcall
push
testb
xor
or
cmp
inc
gs
add
jne
pop
xor
std
das
inc
jp
xor
sub
aad
scas
jg
pop
mov
sub
mov
rcrl
and
dec
push
cmp
fisubl
icebp
cmp
lds
inc
je
out
and
cwtl
xchg
fucomp
add
dec
lcall
ljmp
and
jb
ret
std
aad
scas
lock
xchg
out
and
popa
sahf
fwait
call
popf
sbb
xor
pop
sbb
xor
inc
pop
popa
scas
outsb
popf
sbb
sub
ljmp
lock
or
or
lret
jns
lcall
jmp
mov
call
gs
xchg
push
dec
jo
mov
jns
pop
or
inc
sbb
mov
push
pop
adc
fsubrl
push
ret
sub
aad
sub
scas
add
int3
ficoml
lcall
mov
sub
dec
adc
imul
clc
mov
data16
mov
push
into
pop
mov
sbb
cmp
fcompl
incl
nop
pop
sti
jb
inc
mov
addr16
jg
inc
lock
pop
push
mov
dec
imul
xchg
incl
mov
addr16
insb
insl
sub
cmpb
subl
lods
out
mov
pop
popa
xchg
sub
add
nop
cld
xor
jg
incl
xchg
jl
cs
jae
pushl
lahf
into
scas
xor
sbb
loope
inc
icebp
cmpsl
mov
ficoml
divb
insl
adc
sahf
or
mov
dec
adc
flds
cld
jae
push
jg
cmp
pop
fcomp
add
mov
sbb
cmpsl
mov
push
fs
jae
movsb
iret
pop
call
icebp
repnz
fcmove
xor
stos
add
jnp
incl
adc
lret
and
and
icebp
test
xchg
cmp
mov
inc
pushf
xor
jmp
mov
and
add
orl
fwait
add
jg
sbb
inc
cs
lods
xor
in
pop
xor
shl
lcall
xchg
idivb
inc
inc
clc
lcall
lock
imul
adc
xchg
xchg
mov
aas
pusha
cmp
mov
sbb
fisubrl
push
dec
inc
in
push
outsb
iret
aas
push
jne
dec
arpl
lret
inc
sbb
jns
xchg
cmp
xor
rolb
mov
add
pop
mov
loop
in
cmp
hlt
ret
push
lcall
fdivrl
jg
outsl
mov
dec
cmc
mov
lcall
andb
push
movsl
mov
push
roll
sahf
std
sbbb
cmp
jge
mov
movsl
test
pop
xchg
xlat
push
ds
jg
movsl
add
mov
pop
xchg
ljmp
add
sub
xchg
aad
push
mov
push
pusha
pop
mov
movsb
xlat
mov
ds
fisubs
dec
push
or
mov
or
call
jmp
lcall
lock
bound
cli
adc
fcmovu
imul
dec
dec
dec
fistps
enter
fimull
cmp
repz
or
pop
push
shr
ret
ds
jmp
pop
jno
lods
push
lret
mov
clc
in
or
movsb
or
push
xchg
mov
cmp
cmpsl
xor
in
and
xchg
xchg
ss
cmp
inc
das
mulb
scas
xchg
cmp
outsb
aas
into
adc
je
add
push
xor
cmpsl
pop
and
mov
or
incl
testl
mov
fcompl
inc
sahf
test
shrl
dec
call
sbb
adc
repz
addr16
mov
ret
jns
or
mov
ret
mov
sbb
data16
pushf
rcrb
fildll
decl
out
and
add
mov
loopne
jae
xchg
adc
mov
adc
jl
lods
lock
mov
imul
les
iret
pop
sub
cld
rcl
out
in
je
jno
jl
jmp
and
in
lret
ss
xchg
mov
pop
hlt
and
mov
jg
xorl
push
stc
mov
lods
cmp
iret
dec
out
jecxz
or
or
pushf
call
mov
int3
ret
adc
or
das
add
fcoms
cld
shrb
dec
mov
and
xchg
in
dec
std
jl
pop
shr
inc
adc
int
push
lock
out
cli
lcall
pop
sbb
shll
popa
mov
pop
sbb
cmp
mov
call
std
cmpsb
cmpb
mov
and
testb
sti
jg
loop
push
push
int3
mov
cwtl
inc
pop
int3
sbbb
data16
loope
mov
jmp
idivl
andl
mov
sbb
ret
push
ljmp
negb
pop
js
jo
fld1
orb
imul
mov
sar
jg
push
outsl
mov
ljmp
inc
mov
mov
cs
and
repnz
mov
mov
imul
mov
push
sbb
inc
xor
fcom
addl
cmc
loopne
call
ds
ret
and
mov
gs
rcrl
mov
arpl
jg
mov
movsl
fisubs
add
xchg
pop
push
sahf
jecxz
or
or
sarb
jl
out
nop
sahf
mov
loope
push
or
call
mov
mov
in
pop
pop
and
clc
scas
clc
jno
ljmp
jl
aaa
clc
fdiv
mov
and
call
jb
dec
enter
mov
jns
push
fiadds
leave
in
inc
lcall
cmp
outsb
inc
jno
cmp
cmpb
xor
xchg
dec
add
movsb
cltd
sar
lcall
xor
or
dec
mov
adc
ror
or
pushf
mov
add
xchg
push
dec
shll
scas
mov
sbb
les
cli
test
stos
ret
mov
scas
jg
pop
mov
test
mov
sbb
xchg
into
sarl
sar
call
leave
mov
loop
mov
push
add
push
lea
leave
call
add
std
lcall
pop
filds
mov
lock
jbe
mov
push
mov
pushl
dec
dec
cmc
loop
jmp
add
xor
int
in
add
jp
fwait
sbb
and
mov
ljmp
shll
cmp
aaa
dec
mov
dec
jle
inc
mov
and
jno
xor
gs
xchg
push
mov
inc
xor
jns
adc
jno
sahf
jmp
shll
pushl
addr16
jne
ret
addb
rorb
lds
int3
loop
pop
adc
fstps
sahf
shlb
or
jecxz
mov
sub
jp
cmp
daa
mov
rol
ljmp
mov
lret
stos
mov
stos
fs
push
mov
insl
jle
or
cmp
ret
inc
mov
cmp
mov
call
in
adc
adc
inc
jp
cmp
mov
sub
xor
pop
das
mov
dec
mov
sub
cli
push
icebp
jo
jge
push
mov
in
movsl
decl
test
aam
loope
inc
xlat
in
outsb
ffree
sub
xor
jmp
pop
enter
mov
in
inc
jmp
push
in
push
jbe
fcomip
repz
fs
push
addr16
mov
jns
out
inc
adc
stc
loopne
jp
cli
inc
xor
popf
je
outsl
lods
lret
lods
js
stc
inc
mov
cmpsl
in
lcall
popa
hlt
flds
sub
adc
enter
lcall
pop
mov
cmpsl
inc
insb
cmc
cmp
xchg
or
mov
inc
fcoml
clc
pushl
std
ljmp
and
xor
cmpb
aad
jo
dec
push
sbb
pop
jecxz
incl
jmp
shl
and
jbe
jp
jne
popa
adc
pushf
scas
jle
jmp
fnstcw
std
in
lahf
dec
push
inc
nop
in
push
sub
fwait
xchg
subl
stc
pushl
imul
movsb
sti
jle
jg
sbb
fsub
rcl
dec
loope
ljmp
sub
dec
sbb
inc
jo
or
jl
mov
mov
movsb
ret
aad
add
mov
roll
cmp
mov
pop
push
xor
pushf
int
xlat
jg
or
arpl
mov
repnz
adc
in
mov
xlat
aam
cld
std
mov
hlt
cmp
jmp
inc
nop
loope
or
jns
incl
dec
cmp
adc
call
sbb
outsb
add
data16
dec
mov
adc
lcall
lcall
int
cltd
daa
jne
mov
pop
or
mov
push
jo
adc
decl
push
sub
test
aam
hlt
pop
pop
sbbb
es
loopne
push
aad
incl
adc
pusha
jle
inc
push
inc
jo
pop
jge
xor
xor
pop
fistps
lcall
outsb
mov
aam
push
movsl
inc
mov
ljmp
incb
data16
mov
outsb
xor
cwtl
jp
sar
imul
ljmp
cmc
jnp
fstpl
int3
imul
test
mov
bound
sub
out
lcall
mov
adc
push
outsb
popf
clc
dec
dec
cld
cld
scas
xor
pop
inc
out
or
adc
inc
cmp
iret
lcall
add
inc
jb
push
pushf
push
or
jle
in
cmp
add
mov
inc
inc
loope
fstpt
fdivs
sbb
mov
loope
ret
dec
cs
cmp
fs
in
js
ret
lock
cli
jno
inc
pop
dec
fwait
fcoml
adc
pop
insl
daa
push
mov
fmull
in
sahf
lret
jmp
call
test
push
xchg
sub
push
fdivrl
mov
sub
mov
mov
stos
push
jne
dec
fcmovne
push
in
repnz
mull
sbb
lea
jmp
lods
test
negl
sti
xchg
icebp
rcrl
cmp
adc
cmp
or
mov
dec
sub
push
push
xor
sub
lods
fisttpl
mov
ljmp
pop
mov
js
pushf
or
and
lcall
sbb
adc
jbe
sbb
mov
imul
outsb
push
pop
or
dec
pushl
add
sti
cmp
or
mov
lds
test
ss
cmp
addr16
or
call
lods
add
fsubr
pop
or
fcomps
pusha
rclb
cld
and
test
jg
call
mov
add
lcall
out
testb
imul
xor
mov
loopne
call
mov
pop
outsl
mov
push
scas
leave
ds
mov
ffreep
emms
stc
xchg
fisubl
decl
xor
lock
adc
jl
dec
movsl
std
pushl
cld
cwtl
xor
and
pop
sbbb
aaa
jle
mov
jge
test
dec
adc
sub
incl
cld
mov
xor
mov
sbb
ds
repz
mov
ljmp
ss
or
mov
jmp
fistpl
or
sub
adc
mov
ljmp
testl
ljmp
clc
xor
mov
test
cli
mov
and
mov
xchg
jns
pop
loopne
incl
push
and
testl
xchg
lods
cmp
pushl
je
jg
scas
in
pop
fnsave
jnp
xchg
movsl
data16
jns
ljmp
out
cli
call
and
cmp
dec
clc
movsl
pop
xchg
pop
and
jnp
pop
add
pushl
icebp
test
cmpsb
push
jbe
add
imul
fimuls
jmp
call
pop
jo
lock
enter
outsb
xchg
dec
or
fwait
sub
pop
xchg
nop
rcrb
movsl
xchg
sub
fwait
sub
xlat
pop
cmp
out
iret
lcall
inc
cmp
jb
aam
inc
enter
mov
hlt
inc
call
pushl
div
sbb
aaa
outsb
or
sbb
sbb
mov
repnz
fisubs
inc
fistps
and
mov
outsb
imul
rcl
loop
pop
outsl
hlt
dec
dec
adc
outsl
mov
pop
push
ret
pop
sub
push
adc
add
mov
mov
rcrb
mov
in
or
rorb
sub
xchg
mov
pop
addr16
cmpsl
mov
xor
arpl
lods
repnz
lock
mov
push
cmp
out
push
jb
pushf
repz
cmp
lcall
cmp
adc
jne
xchg
mov
sti
push
cmpsb
push
loopne
push
mov
loope
jg
stos
sbb
incl
hlt
push
push
mov
ficoms
cmp
je
mov
mov
or
sub
xchg
or
xor
sub
call
scas
gs
fistpll
inc
les
popa
stos
push
cmpsb
xchg
xlat
movsb
and
icebp
jmp
aad
das
iret
or
push
pop
mov
test
jg
dec
outsl
call
in
lock
jno
out
jb
scas
loope
push
mov
sbb
mov
mov
jmp
mov
stos
xchg
or
mov
cmp
cs
sub
test
xchg
pop
idiv
decl
sbbl
inc
cwtl
mov
ds
mov
hlt
shll
xchg
or
jmp
mov
pop
dec
jl
notl
mov
out
cmp
jno
jmp
dec
stc
inc
mov
jo
xor
jb
cmpsb
das
test
push
pop
hlt
ljmp
test
mov
fiaddl
inc
data16
loope
and
decl
call
or
pushf
cmc
andb
push
pop
sub
mov
and
xchg
mov
adc
and
xor
jg
loop
jp
push
cmp
cmpsb
xchg
push
in
or
addb
orb
xorl
sub
aas
popf
inc
xchg
idivl
push
fildl
xchg
pop
jg
mov
cmpsl
popa
dec
push
jecxz
lahf
int3
push
xor
pop
into
mov
pop
push
or
out
imul
push
pop
pop
sub
sahf
stos
ja
in
shrl
inc
pop
ficomps
mov
mov
incl
push
xor
jmp
subl
ret
xchg
adc
pop
inc
hlt
lds
pop
fwait
inc
mov
sbb
push
xor
mov
push
sub
in
xlat
scas
incl
jmp
mov
mov
dec
jmp
test
fstps
outsl
insb
or
decl
in
cmpsb
lock
xchg
in
mov
les
sub
insb
xorb
jg
mov
mov
lea
stos
push
dec
mov
mov
gs
out
inc
shl
push
addr16
test
xchg
out
jo
xlat
movl
mov
int3
loop
insl
and
and
ljmp
xor
mov
into
cmp
mov
mov
movsb
aad
movsl
xchg
ljmp
sbb
mov
xlat
and
call
and
in
pop
mov
negl
mov
cwtl
or
pushl
xchg
imul
int
in
pusha
adc
popf
xor
jecxz
mov
mov
sub
ret
je
push
sub
or
incl
mov
stc
and
movsb
rorb
pop
jp
mov
mov
pop
or
xchg
fwait
push
xor
mov
xchg
ljmp
sti
stos
ret
rcrl
lret
adc
xchg
scas
bnd
scas
popf
fcompl
push
dec
jb
in
movsl
or
inc
xlat
sbb
cmp
insl
or
xchg
jae
push
enter
int
mov
xchg
push
add
cli
movsb
stos
loope
nop
pop
fcoms
in
xlat
in
lods
cld
pop
pop
mov
mov
js
lret
pop
jae
int
in
mov
lcall
and
pop
add
add
push
sbb
mov
xor
dec
testb
insb
mov
ljmp
push
inc
mov
pop
mov
cmpsl
push
sahf
ss
mov
ljmp
sub
icebp
jmp
and
jne
xchg
inc
cli
mov
and
sbb
stos
or
mov
dec
fxtract
repnz
cmp
cmp
outsl
daa
cmp
mov
std
fdivs
push
jns
pop
ss
orb
ss
or
push
mov
outsb
mov
lcall
or
dec
xchg
decb
leave
daa
in
mov
mov
cmp
insl
dec
test
lock
ljmp
dec
inc
sub
push
mov
jnp
adc
mov
xlat
test
or
adc
cmpsl
cltd
pop
dec
nop
imul
push
divl
cmp
pop
xchg
out
clc
ja
xchg
mov
decl
mov
xchg
sbb
loopne
imul
and
sahf
scas
fs
mov
inc
sti
neg
pushf
or
aam
out
addl
mov
jle
xor
inc
dec
push
xchg
lods
ljmp
or
jg
les
and
movsb
pop
mov
hlt
xchg
inc
jno
outsl
ljmp
mov
sti
int
test
dec
dec
dec
xor
ljmp
fwait
ljmp
sbb
leave
test
test
ss
sub
fdivr
decl
mov
mov
push
cmp
mov
adc
xchg
lods
lcall
jo
mov
and
sbb
shrb
add
add
lcall
insb
fcmovnb
cmpsb
mov
mov
mov
push
cld
lcall
shll
int
out
add
mov
add
imul
incl
clc
and
dec
cmp
jo
xor
dec
jg
stos
add
nop
mov
cli
xor
mov
cltd
adcl
fidivrs
sbb
xchg
jmp
jl
lea
std
pop
incl
jl
xor
sbb
push
xor
mov
in
fisubrs
enter
and
dec
stos
jp
sbb
nop
dec
scas
xchg
mov
xchg
gs
lock
movsb
dec
test
pushl
ss
es
mov
daa
or
dec
pop
test
or
clc
mov
inc
lret
and
xor
mov
adc
into
sub
jmp
leave
movb
jl
mov
mov
cli
jnp
aas
mov
pop
pop
cmpl
aad
mov
mov
leave
jne
dec
out
repnz
fwait
mov
aas
shlb
cmp
push
loop
cltd
addr16
jge
adc
push
nop
fistpll
dec
add
icebp
cmp
fmull
stos
jbe
incl
push
test
dec
adc
fwait
cmp
test
outsl
aas
or
xlat
sbb
fwait
enter
jmp
ret
lahf
dec
outsl
out
xchg
fistl
fnstsw
cli
test
push
lea
mov
sar
call
mov
loopne
push
cmpsl
sub
clc
push
daa
push
loopne
sar
mov
pop
roll
jns
dec
pop
lock
push
push
xchg
push
je
push
clc
cld
pushl
cld
je
stos
inc
shll
adc
sub
mov
pop
push
cmpsl
xchg
adc
add
out
or
sete
sbb
inc
fdivrp
ljmp
add
stos
ja
sub
movsl
ds
mov
cmp
icebp
mov
std
push
ljmp
shlb
cmpsb
test
dec
mov
loope
sarb
cli
jmp
clc
mov
aas
imul
mov
xchg
mov
dec
lea
pushl
push
popf
add
xchg
repz
jbe
xor
inc
and
jnp,pt
mov
in
xchg
mov
ljmp
jae
adcl
jge
push
adc
ret
cld
jbe
jmp
push
gs
decl
mov
inc
out
lret
pop
add
rorl
out
cmpsl
sbb
mov
mov
jo
mov
mov
gs
cmpsb
loopne
jg
add
repnz
jmp
js
popf
fisubrs
sbb
cmc
pop
getsec
cmpl
lcall
push
test
xchg
fadds
into
cli
in
inc
mov
out
imul
loop
ds
pushl
arpl
addl
rcrb
push
loop
mov
and
cli
push
es
out
adc
push
jno
dec
fbstp
push
ret
xchg
mov
pop
and
fcoms
mov
iret
jg
pushl
cltd
pop
xchg
cmpb
loop
pop
jl
movsb
xor
loope
icebp
ljmp
shll
repnz
popa
ret
fbstp
out
imul
jmp
test
mov
sub
mov
aam
cltd
mov
jae
cwtl
lods
push
mov
das
cli
pushl
ja
sarb
push
pop
or
int3
mov
xchg
cmp
call
adc
pop
xchg
sub
mov
les
push
push
mov
in
call
push
decb
movsl
scas
movsl
add
mov
jl
sub
lock
cltd
cli
mov
test
add
lret
out
in
dec
loop
jmp
out
mov
cmp
push
push
jbe
ljmp
enter
adc
ljmp
dec
add
and
fisttps
inc
adc
fs
ret
mov
ljmp
pop
scas
bound
xor
and
mov
clc
repnz
rcll
inc
sub
add
dec
adc
sbb
pop
jmp
mov
aad
cmp
mov
test
or
jle
cwtl
add
push
cwtl
aas
dec
cli
xor
jl
xchg
inc
iret
dec
jge
push
xchg
ud1
lods
enter
jmp
xchg
sbbl
sub
call
or
bound
movsb
das
jle
xor
jb
adc
jmp
cli
jle
mov
inc
dec
daa
mov
mov
push
rolb
mov
pop
and
dec
xchg
lcall
insl
ss
cmp
dec
cmp
test
daa
and
lods
mov
sbb
flds
mov
xor
mov
enter
add
xor
outsb
bound
lret
xor
cmp
lods
inc
repnz
fbld
shr
stos
jnp
pop
inc
adc
test
in
sbb
incl
popa
ja
mov
stc
xlat
clc
jmp
add
fldenv
add
xchg
lcall
or
xchg
mov
mov
pop
mov
xchg
bound
pusha
mov
popa
ljmp
dec
rolb
fwait
cmp
cmp
jl
bound
sub
xor
icebp
sub
mov
or
in
cmp
cmpsb
mov
mov
mov
push
movsl
int
jmp
or
and
add
scas
mov
push
sub
jae
adc
imul
sar
lcall
mov
loope
int3
scas
dec
xchg
data16
and
sbb
fldcw
cs
aam
ljmp
arpl
xor
push
stc
jecxz
add
add
leave
call
in
daa
jbe
push
inc
cmp
sub
mov
imul
jg
mov
andl
pop
insl
cmp
jecxz
jl
cld
push
inc
xchg
leave
pop
ficoms
jg
jnp
lea
fstpl
daa
in
pop
aad
or
mov
pop
and
stos
shrl
mov
cs
or
mov
insl
mov
imul
cmp
add
mov
ljmp
std
int
imul
mov
and
push
pop
cmp
cmp
cmc
jecxz
fdivr
jle
push
pushf
mov
push
dec
push
sahf
and
push
aad
inc
pop
repz
and
and
lods
cmp
xchg
sub
mov
xchg
mov
mov
leave
cmp
or
ficomps
push
jae
in
int
jae
cmpl
and
xor
hlt
iret
in
mov
xchg
adc
inc
cli
movsl
imul
enter
mov
pop
push
adc
xchg
jns
push
insb
sub
jmp
test
adc
push
jbe
add
mov
mov
imul
xchg
push
sar
lcall
ret
adc
mov
jb
rolb
sti
hlt
popf
pop
adc
push
add
js
ljmp
push
sti
es
lcall
push
and
sbb
mov
scas
sub
jae
pop
xchg
mov
sbb
mov
xor
cmp
scas
out
stc
mov
xorb
notb
movsb
xor
js
addr16
mov
xor
hlt
lods
xor
inc
insb
mov
stos
outsl
or
clc
or
aaa
xchg
out
fwait
scas
inc
popa
mov
mov
pop
xchg
pusha
or
pop
and
fbld
ljmp
mov
sbb
cs
xchg
cmpl
cli
lods
daa
arpl
gs
and
mov
imul
cmp
mov
mov
xor
lret
inc
sbb
shll
push
aas
cmp
xchg
adc
insl
mov
sbb
push
nop
cli
sub
in
add
clc
push
push
push
loopne
hlt
loop
loopnew
pop
fs
aad
inc
or
mov
sub
negb
xchg
sub
push
cmp
loop
jae
outsb
lods
lret
jle
mov
mov
test
ret
pop
lock
pop
addl
pop
ja
int3
mov
cmc
fidivl
out
mov
push
dec
jnp
test
mov
jge
ss
mov
inc
fildll
dec
decl
nop
mov
mov
push
lcall
and
sub
fstl
push
imul
jmp
test
mov
test
nop
ljmp
enter
pop
bound
jbe
mov
jp
pop
cmp
mov
mov
into
insl
scas
xor
inc
subb
mov
jne
adc
or
call
push
lds
pop
loope
mov
cmpsl
lock
or
inc
push
sti
push
add
jg
add
mov
and
sub
mov
call
sub
shl
push
and
mov
xor
lcall
loope
cmpsb
adc
incl
or
loope
leave
cmp
mov
ss
sub
data16
xchg
mov
mov
adc
dec
movsl
sarb
pushl
mov
fbstp
jbe
jmp
push
repnz
push
leave
cmp
mov
ret
cmp
imul
mov
add
call
jl
enter
xchg
stos
andl
mov
aad
pop
cs
les
out
sbb
mov
ljmp
out
jo
movsl
lods
aam
xor
jg
jns,pt
jge
pop
mov
orl
push
in
dec
es
int3
inc
faddl
cmp
push
add
popf
neg
and
insl
push
lret
ret
rolb
pop
or
ret
pop
popa
and
jp
mov
stos
in
sbb
mov
lods
sbb
xchg
xchg
or
xchg
mov
adc
fstpt
shrb
xor
cmp
ret
sub
mov
push
decl
xor
pusha
cmp
imul
test
shrl
mov
pop
scas
fbld
jo
xchg
pusha
cmp
add
xor
pop
lock
mov
clc
test
leave
and
lods
shrl
cltd
dec
fwait
inc
lcall
mov
sbb
push
bound
fcomps
cli
jnp
cmp
push
fst
adc
call
ljmp
and
hlt
dec
aas
xchg
xchg
mov
aam
push
xchg
pushf
std
cltd
dec
ds
jmp
mov
push
out
insl
inc
sarb
rcrl
jmp
out
repnz
jmp
fs
clc
push
mov
gs
or
mov
in
int
add
shrb
ja
aaa
inc
pushf
jg
pushl
sub
sub
add
push
sar
sbb
cld
incl
pop
push
inc
stos
xor
roll
lods
dec
icebp
hlt
push
cmp
mov
inc
shlb
or
les
push
movsl
enterw
das
sar
push
lods
or
sbb
pusha
push
mov
push
pop
ret
call
sbb
testb
mov
xchg
xchg
xchg
ret
and
scas
fisubrs
int
decl
inc
fdivs
xor
push
jmp
jns
cmp
mov
push
inc
call
adc
pop
lret
notb
add
pushl
fcom
int
es
movsb
xchg
inc
push
jge
aaa
add
and
and
xor
addr16
loope
idiv
lcall
cmp
push
inc
adc
add
inc
ret
in
mov
les
mov
ss
xchg
add
incl
in
jmp
cmp
cmpsl
fnsave
clc
cs
sar
les
xor
mov
stos
sbb
mov
jbe
mov
ljmp
add
sbb
hlt
sar
ljmp
rorb
cmp
icebp
repnz
jb
shr
xor
out
mov
push
dec
sub
cmp
adc
mov
push
je
js
mov
clc
shlb
dec
cmp
decl
jnp
das
xor
out
cmp
stc
fidivrl
or
nop
sbb
add
jl
lcall
int3
int3
lods
mov
push
push
fcmovnb
cmp
repnz
push
fstl
call
adc
xchg
mov
aas
test
iret
jmp
int
xchg
mov
mov
and
incl
test
push
movsb
stos
or
adc
aaa
das
lods
enter
mov
inc
loop
sbb
jle
inc
xchg
mov
jp
sbbl
test
imul
cmp
add
push
mov
mov
std
iret
enter
add
out
and
xchg
pop
sub
push
clc
into
or
cmp
lret
mov
inc
inc
in
jle
sbb
fs
and
pushl
lods
outsl
adc
push
mov
out
hlt
jno
aas
movsl
out
jnp
jno
lock
incl
outsl
push
push
hlt
ds
mov
aad
out
out
add
in
hlt
dec
cmp
jg
lcall
xlat
mov
test
les
push
mov
xor
lsl
sarb
push
xor
fildll
jae
xchg
xchg
ret
dec
pop
dec
xchg
add
ret
add
iret
fbld
out
push
pop
inc
repz
movsb
hlt
pop
push
arpl
jb
fucomip
xor
mov
sub
sbb
jle
int3
xchg
aas
mov
mov
push
add
inc
lods
fcoml
pop
cmp
mov
incl
jae
push
add
lret
push
jb
jne
pop
nop
push
outsb
cmpsb
mov
xchg
xchg
xchg
cmp
xchg
cmc
mov
fwait
sbb
mov
adc
xchg
les
push
fimuls
clc
decl
mov
jecxz
enter
faddl
xchg
push
fcomip
xchg
cmp
ljmp
inc
mov
fsts
push
clc
and
cwtl
sub
addl
push
xor
push
test
into
mov
shlb
xchg
pop
xchg
jp
negl
scas
jmp
cld
push
sub
lcall
call
xchg
addr16
mov
xor
jne
adc
inc
xorl
mov
aaa
pop
into
enter
pop
mov
insb
stc
jns
or
sbb
lret
pop
cs
pushl
insb
inc
adcl
jb
lds
ljmp
fidivs
xor
jns
test
adc
jns
jae
pop
les
cld
sahf
aad
lahf
jl
mov
decl
cmp
gs
jecxz
push
pop
sahf
movq
dec
sub
int
shl
incb
inc
push
push
dec
sub
cmc
addl
pushl
inc
int3
dec
orl
lcall
roll
push
jmp
fimull
ljmp
aas
repz
sub
lock
dec
call
mov
addr16
adc
push
movsb
or
or
ja
std
mov
cmp
pop
and
pop
dec
adc
xor
xchg
insb
lea
movsb
adc
pushl
adc
sbb
push
jns
xchg
cmp
in
das
mov
xlat
push
mov
mov
or
push
in
stos
in
mov
add
scas
lret
xchg
adc
dec
decl
out
das
loopne
out
pushf
push
xchg
jno
and
insl
lahf
jge
test
xadd
push
push
std
jmp
insl
je
ret
dec
aad
push
mov
push
sahf
jno
stc
mov
mov
sub
cld
jl
cmp
mov
aaa
fnstsw
cmp
lcall
in
gs
push
decb
pop
mov
add
xchg
loopne
add
ljmp
xchg
imul
sub
dec
push
adc
ss
add
pop
sbb
xchg
decl
pop
ret
loopne
mov
push
push
and
push
out
sub
dec
scas
mov
nop
fcoml
fdivl
jne
cmpsl
fwait
ljmp
call
sti
inc
test
push
aad
leave
dec
dec
dec
stos
adc
decl
adc
jno
and
and
lcall
lahf
jne
cmp
push
sub
sbb
mov
mov
xchg
adc
and
push
push
ficoml
pop
rclb
xchg
cmp
dec
stos
jmp
call
cmp
xchg
mov
repnz
mov
popa
lret
adc
sub
xchg
xorl
mov
cmpb
lcall
or
imul
hlt
data16
sbb
push
in
nopl
mov
incb
jmp
sbb
and
dec
das
aaa
stos
mov
sbb
into
inc
fdiv
push
je
mov
pushl
or
jae
rol
sbb
getsec
sarb
jmp
mov
jl
ljmp
cli
add
das
or
push
mov
cmp
or
jle
aaa
adc
mov
rep
xchg
int3
shl
jae
cmp
andb
sar
cmp
hlt
cmc
lock
adc
incb
inc
inc
sub
xchg
lds
dec
sbb
push
icebp
xchg
fcos
decl
fidivrl
xor
push
mov
jg
jo
sahf
jmp
out
outsl
add
insb
xchg
das
inc
stc
push
mov
add
dec
push
enter
cmp
repz
fs
pop
lret
lcall
or
jmp
jg
sahf
pop
push
mov
mov
and
gs
adc
lcall
stos
cld
outsb
es
cwtl
pop
test
rcll
fildll
into
movsl
js
cmp
insl
int3
jle
roll
les
push
sti
fcompl
sub
std
lds
push
lea
pop
lea
dec
cmpsl
int3
mov
insb
and
xchg
incl
loop
sub
loopne
rep
icebp
shlb
xchg
out
jmp
mov
lcall
addb
sbbb
fidivrs
scas
cmp
daa
neg
je
mov
faddl
lock
aas
or
lret
addr16
out
outsb
xor
test
pushl
rcrl
or
les
out
ds
stc
cs
in
pop
mov
push
iret
xchg
int3
lods
mov
xor
dec
mov
push
pop
push
in
lret
xchg
loop
loopne
call
adc
lcall
dec
test
ds
call
and
jns
out
test
xor
insb
cltd
fstps
movsb
daa
nop
in
dec
mov
jmp
into
cmpsl
and
add
and
push
nop
dec
pop
fisttpl
jo
mov
call
in
jge
repz
push
into
pop
fildl
adcb
dec
movsb
inc
fs
add
push
sub
xorb
mov
in
and
add
sub
popf
adc
cmp
dec
sbb
push
dec
pop
xor
out
arpl
push
repnz
lahf
or
sbb
pop
sub
pop
push
sar
pop
cmp
aaa
push
fdivs
jmp
je
dec
jb
popa
dec
lods
in
push
sbb
xchg
out
popa
sub
pushl
lret
lods
cmp
insl
mov
fsubr
fs
or
xchg
mov
xchg
adc
adc
pusha
nop
ret
daa
test
xchg
mov
and
ficoml
xchg
cmp
into
incl
ss
cmp
jae
das
test
shrb
lcall
mov
mov
es
gs
cmpsb
or
aam
imull
ds
mov
test
call
stc
pop
lods
leave
push
movl
daa
fstl
dec
mulb
fwait
outsb
clc
out
sti
adc
mov
xor
fs
ljmp
decl
dec
cmc
hlt
push
mov
and
mov
xchg
sub
rcll
outsb
mov
pushl
out
pop
xor
int
js
push
sbb
add
ds
sbb
mov
scas
add
outsl
imul
pop
pop
ljmp
dec
inc
fcmovnb
xchg
int3
es
xchg
push
movsl
jmp
hlt
pushf
push
je
sub
addr16
mov
out
push
jbe
jne
push
stc
jge
data16
in
dec
cmp
dec
fdivrs
stc
xor
call
inc
scas
lahf
js
adc
mov
popf
enter
lcall
push
lds
and
loop
push
aam
lods
loope
js
add
decl
mov
jl
dec
push
fdivs
inc
mov
pop
jge
xor
sub
cmp
cmp
cld
push
leave
jbe
sti
inc
scas
dec
push
mov
and
jne
lods
lret
daa
lret
lret
cli
fwait
pop
cld
adc
pushl
jmp
jg
xor
arpl
fidivrs
jp
mov
ljmp
popa
addl
adc
xchg
mov
std
pusha
jl
mov
shr
xor
jmp
push
and
notl
jmp
ret
popf
pushf
shll
jg
jb
or
xchg
stc
dec
jns
imul
mov
insl
jae
adc
jg
movsb
shll
jmp
divl
xor
and
mov
lcall
cmpsb
into
insb
jle
rcll
cs
addr16
cmpsb
jmp
inc
lods
jnp
and
mov
mov
das
inc
cltd
pop
or
or
xchg
insl
ret
sti
imul
cmc
clc
call
dec
sub
xor
push
push
mov
fstl
shrl
loope
xchg
pop
inc
mov
mov
incl
addl
mov
out
test
enter
push
incl
je
mov
pop
test
shll
mov
jmp
adc
imul
lcall
loopne
mov
ret
popf
es
cld
mov
dec
xchg
cmp
int3
jbe
orl
fisttpl
movsb
jae
mov
cli
insb
fnstsw
inc
mov
inc
mov
repnz
arpl
mov
sbb
and
subl
or
and
jecxz
rclb
jnp
cmp
xor
mov
jg
inc
and
clc
insb
xlat
pop
negl
sub
cmp
incl
sbb
stos
insb
jl
nop
fwait
dec
sti
inc
nop
movsl
push
call
popf
push
inc
cld
call
aad
outsb
sbb
aam
and
xor
ljmp
shll
and
adc
inc
fcomip
adc
mov
mov
mov
jge
jg
shlb
js
cld
clc
inc
mov
arpl
mov
negb
incb
in
and
hlt
decl
cmp
xor
sub
push
mov
lods
in
mov
int3
mov
clc
cld
sbbl
cmpsb
add
repz
ljmp
jmp
repz
pop
dec
pop
jns
add
jns
cwtl
cmc
movsl
sbb
aam
lret
jmp
test
xchg
jnp
mov
arpl
repnz
adc
fucomi
out
inc
sub
push
pop
in
fnstenv
cmp
push
jbe
xchg
xchg
adc
sbb
mov
add
pop
mov
inc
negb
les
outsl
lds
fucomip
loope
jp
dec
xchg
cs
sbb
loop
add
repnz
call
stos
adc
pushf
pop
add
or
mov
out
dec
and
js
xor
lcall
jmp
mov
sbb
mov
pushf
jno
lret
mov
cs
ficomps
jbe
mov
ret
out
mov
in
mov
js
mov
xor
or
ret
jg
jl
inc
aam
push
xchg
xchg
decl
pusha
or
pop
adc
mov
aad
call
ljmp
mov
adc
xchg
out
in
cmp
loope
decl
push
lock
mov
jae
cwtl
fstpl
std
push
shrb
pusha
shl
mov
incl
popa
push
push
frstor
fwait
imul
mov
xor
outsb
and
jg
add
test
adc
sbb
hlt
pushl
cmpsb
pop
xchg
mov
xchg
pop
sti
jmp
xchg
aaa
mov
cmp
mov
jns
cld
incl
mov
mov
lds
inc
and
jmp
mov
ja
fistl
ja
repnz
out
mov
imul
repz
mov
push
jmp
mov
xor
mov
test
clc
es
push
push
jb
fs
jmp
sbb
push
fdivrp
sub
sbb
pusha
pop
jp
loopne
mov
mov
jmp
jl
out
or
xchg
adc
int
pop
fxam
fadds
mov
cltd
mov
mov
ret
ljmp
out
test
inc
pusha
stc
xlat
pop
cwtl
dec
roll
or
inc
inc
out
jp
pop
ficomps
test
pop
sarl
cwtl
mov
cmp
push
js
push
insb
sbb
push
rcrl
xchg
or
adc
push
xchg
pop
mov
aad
std
inc
jno
xchg
mov
ljmp
xchg
mov
jl
cmpsb
and
jnp
xor
fdivs
mov
pushl
sub
dec
das
hlt
addr16
mov
mov
dec
iret
mov
push
mov
push
cli
jg
pushf
mov
add
or
es
or
xchg
out
ljmp
das
push
pop
rorl
jb
mov
xchg
xor
insl
xchg
sub
inc
or
push
repnz
sahf
stos
pop
mov
cli
push
pop
mov
pushl
inc
mov
add
sbbl
push
mov
jb
jbe
or
cli
fdivp
ror
lcall
into
adc
xor
dec
data16
or
in
pop
jae
push
mov
fcmove
lods
enter
fcomip
pushl
test
jae
mov
cmpb
test
idivl
stc
fstp
aam
cld
pop
adc
lret
push
dec
ljmp
jne
push
mov
pushl
jbe
mov
test
dec
jg
adc
pop
mov
fs
jbe
fcompl
xchg
fisttpl
mov
cmpsb
ljmp
xchg
repz
xchg
mov
jp
scas
xchg
sub
push
cld
call
mov
pusha
push
or
mov
mov
mov
lock
xlat
lret
es
scas
inc
addl
sar
insb
fimuls
pop
fstp
icebp
mov
repnz
scas
sbb
in
adc
inc
push
pusha
push
out
xor
jle
xchg
scas
daa
or
jnp
negb
fyl2xp1
int
mov
adc
pop
popf
cmpsl
incl
xchg
push
imul
aam
pop
jnp
mov
sete
and
xor
mov
push
call
jbe
push
cmp
add
je
or
sar
cmpsl
or
rep
cwtl
push
fwait
call
push
xchg
jae
jg
and
arpl
ds
sti
push
pop
pop
sub
cmp
in
push
mov
pusha
mov
pop
push
aas
push
es
cs
jle
jae
decl
decl
fisubrl
and
lcall
decl
jmp
mov
xchg
cmpsb
ret
sub
mov
das
aam
xchg
or
cmp
scas
clc
add
lea
inc
int3
mov
jmp
mov
cmp
insb
divb
repz
and
and
movsb
in
ja
adc
and
jg
lahf
xchg
mov
sub
and
fcmovnu
xor
fwait
mov
cmp
arpl
stos
add
popf
pushl
inc
call
adc
mov
mov
xlat
jmp
data16
jmp
jle
pushf
sub
pop
lods
xchg
loopne
ss
lock
sbb
ja
add
mov
pop
stos
testb
add
ja
out
cmc
xchg
ds
sbb
fcmovnbe
adc
shrb
mov
mov
and
fiaddl
ljmp
mov
cwtl
add
sarb
cli
xor
in
push
jecxz
jmp
sub
decl
sbb
mov
imul
mov
sbb
mov
xor
aaa
push
ja
cld
out
pusha
test
loopne
jmp
xlat
lods
aam
call
xorl
or
adc
movd
stos
xor
repz
pop
shll
inc
or
fs
inc
inc
loopew
xor
jge
jae
jge
cmp
xchg
jg
dec
in
repnz
sbb
lds
dec
inc
add
mov
push
mov
mov
lahf
aad
sub
pop
jp
mov
xchg
in
dec
add
or
enter
mov
in
add
aad
inc
addl
cmpb
aam
lcall
xchg
xlat
ficoms
outsb
and
and
cltd
add
mov
pop
and
push
push
ja
ss
leave
es
sbb
mov
mov
jmp
push
shlb
outsb
push
movsb
fdivrl
xor
cli
or
sti
mov
push
incl
inc
mov
inc
fsubr
sbb
loop
outsl
dec
clc
adc
clc
lret
dec
jb
and
lcall
fbstp
pusha
xor
in
mov
sub
insl
mov
call
addl
mov
mov
outsl
into
mov
call
test
or
xchg
negb
repz
scas
add
and
stos
fsts
jecxz
dec
inc
test
fisttpl
push
push
clc
pusha
xchg
jo
sbb
xor
mov
xor
repnz
jmp
push
scas
in
jg
hlt
fisttps
shll
popa
jmp
dec
add
xchg
pop
nop
scas
out
loope
icebp
sbb
pushf
fcmovu
pop
andl
out
shl
call
std
jmp
push
imul
out
stc
mull
or
xchg
test
cmpsl
and
inc
jae
outsl
inc
in
pop
call
jbe
cmpsl
jmp
lret
ret
xlat
xor
lret
dec
jle
loop
gs
out
inc
xchg
pop
fnstcw
jmp
or
fisttpl
sub
outsl
and
cwtl
push
js
mov
mov
pop
and
ret
push
movsb
inc
lds
es
pop
sbb
pop
pop
pop
clc
fdivr
call
js
xchg
shrl
ljmp
mov
imul
xor
mov
mov
ljmp
xchg
inc
and
push
mov
hlt
xor
fs
mov
lcall
lret
mov
lcall
sbb
test
scas
in
mov
minps
in
mov
sbb
xchg
and
stos
ljmp
push
mov
sahf
daa
push
cs
or
fisubl
push
sub
aad
mov
jns
fistps
cmpl
aas
push
add
data16
xor
lcall
add
xchg
push
divb
js
and
in
cld
call
add
mov
cmc
ljmp
inc
mov
lret
inc
jae
or
mov
jns
addr16
mov
insl
call
add
idiv
mov
sub
scas
insl
dec
popf
lret
jp
icebp
pusha
mov
xor
loopne
ja
test
out
dec
mov
roll
xchg
cli
ds
in
aaa
or
mov
pop
push
std
out
inc
out
inc
mov
mov
and
push
test
cli
enter
call
popf
jnp
xor
add
stos
les
dec
repnz
jns,pt
pusha
xor
das
sar
xor
adc
fs
dec
lea
andl
sbb
incl
xor
cli
cli
aad
ret
mov
out
pusha
std
pop
and
pop
sbb
jnp
sub
enter
xor
rclb
sahf
xchg
sbb
pop
std
jo
sti
in
sete
jg
cmc
out
in
into
js
inc
and
push
push
xor
iret
ljmp
stos
test
les
and
mov
call
dec
xchg
cltd
icebp
xchg
push
movsb
mov
jmp
aam
add
out
push
das
lcall
scas
dec
sub
ljmp
mov
sbb
fsts
push
fcomps
or
mov
data16
cwtl
push
or
ss
push
adc
cli
jno
lcall
imulb
and
push
das
scas
daa
push
mov
test
mov
dec
add
xchg
lods
pop
sbb
in
incl
std
mov
pop
repz
imul
push
cmp
dec
pop
sarb
icebp
fwait
rorb
negb
mov
jle
shll
lcall
xor
mov
movl
sub
outsb
push
pushl
rorl
and
test
outsl
adc
mov
xor
incl
mov
je
sub
adc
mov
cmp
fs
inc
cmp
inc
call
sbb
aam
fsubrs
fimuls
shll
cltd
adc
xchg
rcr
push
call
inc
sub
nop
fmull
bnd
or
cwtl
fld
or
add
mov
lcall
test
jbe
das
cmp
fbld
das
int
push
xor
shrl
repz
cmp
cmp
cs
and
imul
test
push
popa
jecxz
imul
shl
test
arpl
aad
xchg
dec
xor
out
das
xlat
sbb
pushl
lahf
cmp
addb
dec
jle
mov
mov
out
or
mov
sub
test
pusha
std
xchg
cmp
xchg
xchg
push
pop
jo
cmpsl
stc
fadds
push
stos
pop
adc
fisubrs
popf
cmpsl
cmp
sbb
nop
out
nop
add
clc
lods
out
std
inc
out
add
imul
mov
add
adc
loopne
ljmp
scas
xchg
pop
scas
xchg
jle
add
jb
jp
add
mov
lret
cmp
clc
cmpl
adc
inc
dec
mov
xor
mov
mov
lock
sub
and
insl
rcrl
popa
in
dec
cld
int3
xchg
leave
xor
icebp
outsl
mov
push
add
je
je
rcrl
fcmovb
ss
jmp
movsl
cld
push
cld
jns
mov
fstpt
cmp
push
mov
scas
add
pushf
and
mov
jnp
add
loope
inc
mov
imul
sub
ds
adc
jmp
pop
or
cmc
adc
testb
pusha
and
inc
sbb
mov
lret
or
icebp
and
adc
sbb
jg
add
xchg
cmp
repz
and
adc
ret
pop
lahf
insl
mov
mov
call
add
mov
xchg
std
fsts
mov
decl
mov
lcall
pop
xchg
call
add
lock
pop
ljmp
shr
fiadds
and
and
aaa
pop
xchg
jmp
andb
dec
cs
jmp
gs
pop
mov
dec
cmc
dec
ss
mov
in
fsubrp
scas
xadd
adc
jmp
aam
lods
cli
dec
mov
int
pusha
and
sub
xor
add
mov
fs
dec
dec
ret
or
mov
jecxz
mov
lcall
mov
pushw
mov
aas
add
xor
rolb
outsl
cmp
xchg
jno
std
andl
and
pop
pop
pushl
lcall
enter
bound
arpl
mov
outsl
sub
stos
fstps
lahf
sbb
in
fistl
hlt
insb
and
pop
in
mov
xchg
clc
in
sahf
lcall
in
repnz
lret
fists
fisubrl
and
fdivr
incl
add
sbb
jmp
pop
lahf
mov
test
add
lcall
dec
xchg
rorb
popf
ds
mov
xchg
call
cld
inc
add
or
adc
jne
pop
icebp
ljmp
pop
lods
mov
cmpsl
mov
movsb
ret
push
lret
out
xor
pop
adc
out
das
sar
lds
mov
fwait
out
test
add
call
and
imul
mov
xor
jne
cli
mov
sub
adc
aas
jmp
idiv
flds
add
call
mov
aaa
pop
pusha
std
mov
pushf
jge
lret
shlb
subb
xlat
adc
pop
addr16
pushf
rorl
pop
pop
std
decl
mov
dec
push
inc
dec
cmp
add
call
filds
cmpsb
or
leave
mov
jp
lret
or
outsb
loope
mov
imul
loopne
mov
nop
xor
mov
cltd
scas
jg
and
fadds
pop
jb
les
or
inc
mov
push
jg
add
icebp
jne
mov
ret
jne
lret
bswap
mov
cli
jnp
fcoms
mov
pop
mov
lahf
fs
div
mov
and
rcrb
push
pop
ljmp
sbb
mov
jp
ss
repz
lahf
enter
js
lret
call
rclb
insb
movsl
jo
clc
jp
add
testb
cmp
xor
out
imul
inc
scas
ret
add
cmc
push
xor
adc
pushf
add
das
sar
lods
lret
pop
test
mov
inc
fadds
add
fcomip
cmp
push
fucomp
xor
stos
rcr
add
inc
out
pop
jns
test
decl
arpl
enter
insl
sbbl
lret
add
add
mov
lahf
mov
jne,pt
sub
cmc
mov
sbb
enter
adc
jbe
mov
mov
clc
sbb
or
leave
lods
test
dec
sub
jb
pop
or
stos
sbb
or
std
pop
inc
push
pavgw
stos
out
push
movsb
and
aam
outsb
add
mov
mov
fwait
lds
aad
in
sti
pop
lret
pop
repnz
jg
out
or
push
pop
mov
xor
in
xor
mov
fdiv
pushl
outsl
clc
pop
or
push
bnd
xchg
call
ljmp
lret
mov
fcompl
or
ja
bound
lods
call
add
pause
lock
sti
out
aam
call
das
call
repz
lcall
jnp
aam
aaa
jg
ja
jmp
cmpsb
dec
push
mov
cltd
push
pop
jg
insl
stc
mov
fs
push
adc
test
jne
ljmp
inc
mov
mov
psubb
bound
jno
pop
add
cs
stos
inc
loopne
sub
and
mov
and
pop
mov
decl
pop
sub
pop
pop
push
jno
sub
mov
mov
popf
mov
orl
or
lahf
fistpl
sbb
fistpl
mov
nop
mov
xlat
js,pt
call
add
test
imul
ja
jb
push
jbe
pusha
dec
and
jb
inc
ffreep
or
outsb
daa
cltd
dec
cli
mov
inc
imulb
adc
incl
push
imul
inc
insb
push
out
add
pop
mov
cld
dec
mov
inc
cltd
lret
jmp
fwait
pop
outsb
sbb
mov
aam
jle
cmp
mov
push
jecxz
daa
mov
adc
add
add
add
lods
adc
aad
aam
sbb
xchg
adc
lahf
je
call
xchg
test
and
mov
fsubl
js
dec
cltd
scas
icebp
jle
cltd
fs
adc
dec
movsb
shl
call
mov
sub
or
icebp
stc
aad
loopne
add
add
fs
aas
or
push
shll
mov
lea
insl
pop
repnz
icebp
idiv
jmp
hlt
mov
sub
es
and
stc
loop
xchg
mov
jmp
mov
pop
mov
xchg
inc
in
je
pop
imul
cwtl
and
inc
jp
fdivs
jmp
mov
adc
inc
ret
lods
das
adc
jae
int3
mov
jp
or
and
or
xchg
jmp
aas
and
sub
or
inc
mov
push
out
jp
xor
or
ljmp
mov
push
cli
add
push
mov
jbe
xorb
sbb
dec
cmpsb
insb
in
bound
cli
call
jmp
out
clc
dec
js
pop
add
or
push
xor
adc
out
cli
ljmp
dec
push
mov
xchg
xchg
dec
jecxz
mov
lcall
sti
lcall
and
pop
xor
push
js
popa
mov
fidivs
ljmp
push
sub
pop
scas
pminsw
cld
mov
dec
xor
jecxz
mov
xor
push
push
rcrl
cmp
jns
xchg
push
sbb
ja
lea
repz
inc
xchg
mov
inc
iret
pop
add
loop
je
or
mov
jg
outsl
add
out
clc
push
add
cld
dec
xlat
gs
mov
dec
jge
xor
inc
les
imul
pushl
pop
pop
mov
jno
jno
push
jb
pushf
cltd
in
and
lods
stos
sbb
hlt
xor
int
faddl
rcr
push
cltd
ds
xor
lock
or
or
ljmp
pop
std
test
pop
mov
pop
xchg
loop
pop
loop
jns
jne
pushl
jne
testb
jo
sbb
in
mov
test
inc
das
sbb
std
incl
dec
idiv
nop
sub
mov
pop
cs
insb
inc
cmp
filds
in
push
or
and
ljmp
mov
fcoms
repz
sbbb
dec
rol
inc
repnz
int3
incl
movsl
fcmovbe
and
pop
push
cltd
jbe
repz
adc
es
iret
xlat
addr16
cld
jle
mov
dec
lret
pop
jae
rorb
xchg
push
out
adc
out
xchg
and
jbe
stos
ret
shlb
mov
mov
out
test
pop
popf
cmc
in
lret
xor
pop
lock
loop
mov
cli
aad
xor
jno
and
adc
incl
insl
mov
xchg
sub
sti
sbb
jbe
xchg
aas
fidivrs
pushl
cld
pop
or
adc
repnz
dec
sarb
mov
outsb
out
pusha
xchg
jnp
in
dec
mov
incl
cld
and
sahf
xor
rcll
test
inc
test
lods
xchg
fisttpl
int3
ja
add
add
popf
ret
and
push
adc
sti
loopne,pn
inc
shll
pop
push
jo
inc
add
xor
incl
mov
adc
mov
stc
or
sub
mov
ljmp
add
xchg
push
xor
gs
cmp
ud0
out
insl
out
and
stos
cwtl
adc
lret
scas
sbb
shl
decl
lret
psrad
cmp
push
mov
pop
jae
mov
dec
pusha
aas
hlt
dec
movsb
xchg
data16
pop
lret
adc
nop
out
stc
push
or
and
pushf
cli
aaa
jge
lahf
jecxz
scas
ljmp
insl
xchg
lcall
ss
mov
mov
xor
sbb
inc
mov
dec
cmp
iret
xchg
clc
rolb
fisttps
sbb
sub
rorb
cmc
pusha
push
sti
into
push
add
pusha
or
ret
cmp
hlt
cmp
jmp
in
add
mov
jmp
rcrl
incb
xchg
jmp
outsb
std
das
xor
and
test
hlt
push
out
pop
and
adc
or
dec
mov
xchg
push
sbb
shrl
ljmp
hlt
dec
cli
mov
mov
mov
dec
and
jp
adc
xor
idiv
cli
xchg
mov
dec
mov
sub
pop
aad
xchg
dec
shlb
mov
clc
repz
call
mov
pop
pop
jno
and
mov
adc
mov
push
push
sbb
inc
cmpsl
cmpsl
jmp
push
fdivr
loopne
adc
les
pusha
add
neg
sbb
add
or
jg
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
scas
push
or
sbb
adc
fnsave
mov
add
or
adc
dec
clc
push
lods
pop
adc
inc
add
int
outsl
es
add
add
add
jmp
out
add
push
and
inc
mov
pusha
or
cmp
mov
adc
push
adc
pop
and
xor
inc
mov
adc
out
cmpb
and
gs
add
or
mull
mov
rclb
xor
xchg
inc
xor
inc
imul
rclb
or
inc
inc
or
or
add
pushf
into
cmp
add
add
sub
cmp
adc
aaa
incl
push
pop
popa
jno
and
adc
xchg
mov
stc
and
push
lock
loope
icebp
mov
or
push
mov
xorb
scas
dec
addb
js
ljmp
sub
rcr
push
ret
jae
xchg
jae
sar
ljmp
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
jge
xchg
mov
inc
dec
bound
push
mov
cmp
dec
mov
xchg
sti
push
in
and
fistpl
jg
inc
cli
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
push
repnz
rcll
cmc
add
call
les
add
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
call
mov
test
pop
lahf
mov
movsl
jecxz
pop
mov
aas
insb
jmp
clc
cmpl
call
repnz
addr16
out
or
push
push
xchg
add
repnz
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
mov
lcall
fs
scas
mov
pop
pop
mov
popl
movb
rorb
sti
ret
scas
adc
mov
xor
lods
scas
xchg
test
jmp
push
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
jg
idiv
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
call
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
mov
std
jmp
leave
mov
jp
push
out
or
push
sahf
pop
clc
push
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
decb
sar
mov
xchg
outsl
fcomip
stos
sub
pop
jb
mov
mov
mov
mov
inc
fwait
sbbb
mov
dec
jp
push
gs
sti
sub
hlt
push
add
stc
loope
mov
sar
andl
stos
jbe
cmp
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jg
movl
clc
jb
adc
push
lock
lods
jp
sti
push
mov
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
jg
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
int
fwait
in
loope
fisttpll
out
aas
std
cli
push
push
push
ljmp
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
ljmp
dec
mov
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
sar
call
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
inc
xor
jmp
push
mov
pop
hlt
sub
movsb
add
jmp
jg
lea
jg
gs
std
xorb
jg
aad
mov
js
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
push
ljmp
jno
or
sarb
std
pop
les
cli
mov
mov
inc
jmp
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
jae
call
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
decl
xchg
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
pop
lock
call
push
movsb
xchg
or
mov
stos
dec
lods
xor
jg,pn
cmpsl
in
andb
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
call
test
mov
mov
cmp
xchg
mov
cwtl
pop
xchg
incl
ftst
jbe
xchg
and
jae
shrb
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
adc
jno
call
imulb
cld
xor
repz
jge
cmp
fmull
enter
jecxz
scas
sub
decl
hlt
sub
mov
dec
incb
fisubrl
aas
mov
sti
sbb
push
inc
or
pop
jg
add
iret
mov
jg
mov
aad
test
mov
xchg
movsb
mov
iret
push
jbe
jmp
sar
push
sbb
stos
icebp
pop
incb
jno
adc
push
inc
jecxz
std
outsl
sti
push
sbb
sarl
adc
loopne
sar
andl
lahf
xor
lock
or
add
mov
mov
imul
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
cld
decl
rolb
pop
inc
jb
fistpl
adc
call
pop
in
xor
pop
pop
nop
mov
inc
sti
ljmp
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
push
lcall
dec
xor
fsubr
fistps
lds
fidivrl
jg
inc
stos
pop
add
dec
mov
sub
jge
xor
lahf
shrb
mov
push
cld
addl
pop
incl
mov
in
stc
mov
lahf
outsl
int3
push
sbb
jmp
pop
test
bound
pop
outsl
das
sar
xchg
inc
test
in
jge
popa
push
test
jbe
outsb
incl
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
sub
shl
cld
mov
cld
movsl
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
xor
pushl
mov
gs
pushf
lea
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
or
inc
pop
jg
pushl
daa
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
sti
dec
inc
mov
into
test
xchg
movsb
insb
or
and
xchg
ficoms
pop
jp
clc
insb
test
repz
push
lock
in
jmp
stc
out
cmpsl
and
jle
aaa
clc
push
std
mov
out
sub
mov
jne
or
cmc
mov
decl
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
sarb
out
pop
or
or
dec
ss
sti
adc
inc
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
jge
in
add
pop
in
aam
fidivs
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
adc
xlat
inc
aas
mov
jg
mov
cmp
or
addr16
sbb
cld
daa
jp
std
adc
loope
fldt
cltd
or
mov
ret
nop
cmp
das
test
mov
lock
pop
pop
div
cld
idivl
scas
pop
or
and
loope
lock
fidivl
jmp
or
push
jge
fbstp
out
xchg
jg
push
out
icebp
mov
loope
mov
clc
inc
mov
cmpsl
popf
sti
mov
fbstp
cmp
outsl
das
rorl
out
rcrl
popf
js
data16
decb
faddl
outsl
decb
dec
adc
call
xor
cltd
add
sbb
mov
cmp
int
add
push
pop
aaa
std
sbb
inc
sbb
mov
mov
aas
icebp
ret
rol
enter
sbb
aaa
inc
adc
adc
mov
sub
mov
pop
clc
loope
add
and
dec
add
push
adc
jae
xlat
jmp
jg
push
and
fdivrl
xchg
lcall
jecxz
imul
andb
rorl
outsl
pop
out
jg
jno
ret
cmp
pop
and
out
jg
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
xchg
ret
in
sbb
xchg
imul
pop
outsl
push
cmp
jmp
std
mov
daa
jmp
faddl
fadds
push
jae
mov
add
mov
lcall
push
dec
out
fstpt
mov
enter
add
inc
add
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
std
std
mov
xchg
mov
fildll
fsubrl
dec
add
mov
add
xchg
inc
dec
push
mov
or
cmp
sbb
iret
and
inc
jo
add
ljmp
or
xchg
jnp
aad
cs
xor
dec
push
and
push
push
inc
or
jmp
push
xor
ja
push
and
lret
addb
inc
dec
push
or
dec
ja
adc
and
mov
add
imul
or
add
ss
add
fisubrl
push
inc
dec
sub
xor
add
inc
or
adc
inc
mov
mov
xchg
mov
mov
pop
add
loope
jbe
sub
dec
pop
push
outsl
outsl
insb
mov
mov
push
push
xchg
jo
push
and
or
out
dec
gs
push
pop
fistpl
dec
jo
inc
push
shlb
je
pop
addb
xchg
rcr
imul
gs
std
dec
jne
js
stos
nop
push
insb
pop
pop
inc
fists
das
dec
nop
adc
mov
and
cmovs
mov
adc
add
push
es
mov
int
outsl
insl
insl
add
dec
pop
pop
sub
jb
cmp
cmpsl
stc
sub
inc
xor
xchg
jmp
jnp
outsb
dec
sub
inc
imul
inc
insb
sbb
dec
sbb
rcll
fnop
loopne
push
jl
mov
arpl
inc
mov
sub
dec
nop
or
imul
adc
ds
insb
jne
add
mov
data16
push
pop
fwait
orb
xor
dec
mov
add
push
fcmovnb
mov
rorl
pop
cmp
jne
arpl
jnp
test
gs
xor
xchg
outsl
push
jns
sbb
or
cmp
xor
add
push
jp
loope
mov
dec
and
xor
out
cmp
subb
popa
scas
cmp
inc
enter
or
dec
packuswb
jp
xor
dec
mov
or
inc
dec
sbb
ss
out
pop
jmp
jns
and
adc
mov
push
sub
das
and
xchg
pop
or
and
inc
push
xor
sarb
inc
enter
je
subl
add
pop
fsubrl
pop
mov
mov
inc
pop
fcmovu
popa
inc
jno
mov
pusha
lods
mov
and
mov
push
cmp
dec
outsl
daa
sub
sbb
inc
mov
dec
jae
in
ljmp
mov
adc
mov
mov
or
loopne
jb
gs
mov
push
jecxz
cmp
lods
aaa
mov
je
ja
mov
inc
pop
jg
je
or
pop
push
dec
insb
or
ja
and
mov
and
inc
popa
es
inc
push
into
aas
jp
ss
popf
push
jg
sbb
mov
mov
sbb
cmp
rcl
or
movnti
outsl
jns
or
add
int
push
and
xchg
sbb
sbb
mov
mov
inc
lock
xchg
inc
je
add
jp
push
inc
inc
iret
sti
shrl
orl
pushf
dec
push
mov
sub
and
and
jno
insl
adc
out
shl
or
clc
fidivrl
mov
add
insb
push
adc
jns
xchg
cmp
and
xor
lods
and
ss
pop
mov
inc
xchg
iret
xor
dec
add
or
sbb
pop
std
gs
leave
loopne
cmp
aaa
inc
enter
out
and
out
xor
inc
sub
popa
mov
jae
xor
xchg
sub
sbb
mov
jno
adc
dec
mov
daa
ret
nop
icebp
add
jno
or
adc
inc
filds
in
or
dec
outsl
pop
cmpsb
xorb
fwait
inc
inc
test
mov
pop
cmp
out
push
outsl
ja
jb
mov
mov
daa
jbe
dec
lock
cwtl
fisttpll
add
add
jmp
dec
insl
sarl
push
adc
lock
push
xor
dec
and
jmp
orl
mov
test
xchg
rol
aaa
xor
arpl
push
inc
pop
jl
sub
push
pusha
dec
int
inc
add
adcl
push
mov
out
and
sub
sbb
gs
mov
dec
xor
and
loopne
into
jge
cmp
and
ss
sbb
into
mov
fldt
mov
sub
add
popa
push
sahf
xlat
xorb
adc
add
dec
fildl
popa
fbld
pusha
arpl
fs
inc
mov
lret
test
shlb
push
outsl
mov
push
repnz
jb
and
or
inc
sub
lods
jns
pop
jo
inc
inc
inc
push
arpl
stos
sbb
imul
loop
shlb
add
cmp
js
insb
mov
outsb
inc
insb
jle
punpckldq
xchg
cmpsl
inc
lea
stos
mov
xchg
and
dec
jae
jno
and
jl
mov
lea
cmp
leave
lods
ret
mov
jns
cmp
rclb
loopne
dec
inc
cmp
sbb
xchg
rcl
dec
lret
push
mov
dec
shl
rcll
and
in
mov
push
push
pop
xor
add
adc
in
mov
outsb
inc
push
push
adc
and
scas
dec
in
push
pop
jnp
or
dec
outsb
dec
push
dec
shll
xchg
dec
ss
xchg
mov
lcall
xor
filds
add
mov
mov
imul
xor
rorl
movhps
xchg
pop
rcrl
inc
push
add
jo
or
mov
pop
sub
pop
loopne
nop
and
in
sbb
mov
jl
outsl
bound
popa
or
dec
movsb
bound
sbb
push
inc
rolb
decl
add
push
jb
inc
jae
mov
mov
dec
inc
rcrl
sbb
mov
xchg
imul
iret
push
repz
jo
sbb
jmp
push
lock
cwtl
push
rclb
push
bound
or
or
and
cmovg
mov
outsb
sbb
pop
push
aaa
addb
fdivrl
je
pop
cmpsl
push
pmulhw
test
dec
mov
lods
pop
insl
addr16
add
fldl
sbb
jbe
jbe
add
xor
or
inc
push
fsubs
adc
inc
lcall
mov
push
cmpsb
sub
icebp
push
mov
dec
std
and
jb
inc
std
xchg
sub
push
inc
insb
roll
xor
sbb
cld
popa
imul
jge
sahf
shlb
and
dec
xor
and
loopne
sbb
jmp
add
adc
sub
loop
xchg
sub
dec
or
mov
int3
sub
or
pop
dec
lock
xchg
push
sbb
xorb
and
push
adc
lock
imul
movsb
push
insl
lret
lds
pop
cmp
andl
sub
jb
and
int
push
mov
push
sbb
push
lds
outsb
arpl
xor
sub
push
xor
jbe
pop
pusha
lret
in
xchg
icebp
mov
popf
mov
adc
xor
jo
outsb
pusha
add
pop
call
mov
lods
xchg
scas
roll
inc
xchg
mov
imul
xchg
or
jo
pop
stos
jne
pop
jmp
mov
cmpsb
roll
inc
mov
data16
push
fs
pop
shrl
cmp
xor
rcrb
sbb
and
addr16
inc
mov
push
pop
fistl
cld
adc
lahf
fdivs
or
add
xor
pop
out
add
sbb
iret
stos
call
push
js
pop
lret
push
push
inc
out
adc
repz
and
rcll
fdivrl
icebp
mov
test
add
mov
lock
cmp
mov
and
jo
add
pop
enter
icebp
jae
bound
fisubrl
es
imul
dec
out
push
dec
mov
inc
sub
xchg
push
dec
push
jo
dec
mov
mov
or
cmc
inc
push
push
incb
push
mov
sbb
out
fcmovbe
push
push
out
mov
pop
cmp
fcmovnb
pop
dec
decl
push
add
adc
lods
mov
adc
dec
shlb
inc
cwtl
bound
lods
pop
dec
js
pop
cmp
push
rcrl
add
cmp
add
jb,pn
popa
pop
pusha
orb
and
bound
rclb
push
sbb
into
push
dec
rorl
mov
jb
mov
out
scas
jne
sbb
clc
add
ss
iret
das
inc
xchg
add
or
dec
incl
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
inc
add
add
