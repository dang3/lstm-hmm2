divl
in
mov
mov
mov
push
push
call
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
cmpsb
push
mov
andl
mov
or
push
add
add
punpckhwd
aaa
mov
imulb
mov
in
iret
negl
push
in
loopne
movb
inc
xchg
outsb
ds
inc
add
add
call
mov
cmpl
jne
mov
in
mov
jl
das
add
push
mov
sbb
out
std
jnp
add
jbe
sbb
pop
dec
push
push
test
xchg
in
in
lret
add
loop
inc
adcb
adc
or
imul
push
or
movsb
into
push
cwtl
in
and
fs
push
lock
pop
lcall
mov
push
push
mov
xor
sbb
push
push
lods
cmovs
clc
addl
add
fdiv
fistpl
fisttpl
ret
add
iret
icebp
sub
test
je
pop
add
pop
mov
push
push
push
loop
loopne
sbb
rolb
sbb
mov
mov
pop
inc
mov
push
dec
in
pusha
les
sub
dec
add
sub
imul
call
cmp
sahf
or
cmpsb
stc
call
in
aas
or
loopne
js
in
lahf
outsb
clc
push
push
mov
in
inc
inc
mov
fwait
add
les
push
mov
dec
cmp
jge
mov
jmp
mov
push
push
sub
inc
inc
dec
jb
mov
jno
and
and
jmp
push
in
jnp
cmp
adc
es
inc
shlb
and
aaa
jb
mov
lds
mov
xchg
add
aaa
pop
and
inc
cmp
jae
xchg
add
outsb
fistpll
push
pop
stc
push
mov
add
and
sbb
add
mov
hlt
sub
push
insl
test
lock
adc
pop
cwtl
mov
pop
push
jle
cmpb
add
enter
adcl
pop
mov
test
mov
repz
out
dec
lock
add
call
sub
loopne
cmp
jb
and
popf
jmp
sbbb
jno
push
push
cmpl
inc
push
or
shrb
mov
jle
xor
test
iret
sub
jo
push
rolb
push
fimuls
sub
stc
fisubrl
push
shlb
mov
and
push
stos
add
xor
out
pusha
xchg
or
push
or
cmp
and
or
insb
or
and
std
repz
fbld
mov
fwait
je
bound
add
lods
punpckhdq
loopne
std
adc
push
daa
mov
jnp
jno
int3
push
xchg
mov
or
icebp
jmp
push
cmp
nop
andl
into
ret
push
cmp
stmxcsr
inc
add
jmp
push
xchg
loop
std
and
sbb
push
pop
test
jne
data16
addl
outsb
push
xchg
jb
push
shrb
sbb
sub
cmp
xchg
dec
gs
sub
adc
adc
scas
ja
sbb
inc
pmulhw
enter
imul
popl
adc
push
add
pop
push
or
adc
adc
inc
push
jle
jbe
scas
xor
nop
sbb
lahf
punpckhbw
sub
pop
push
push
ja
popf
inc
int
sbb
roll
cltd
mov
mov
push
push
jmp
pusha
sbb
mov
push
in
repz
loop
jg
push
mov
in
movaps
or
and
jo
out
lahf
lds
inc
cmp
push
mov
mov
mov
out
loopne
add
lea
or
push
push
push
in
outsb
cmpsb
call
cmp
ficompl
jl
or
pusha
push
jmp
clc
out
mov
int3
pop
push
xchg
sti
ds
xor
mov
sub
xor
fwait
cmpsb
pop
jecxz
xchg
mov
shrb
ret
outsl
or
mov
movsl
cltd
fmull
or
or
sbb
mov
mov
rclb
fs
pop
pop
push
mov
or
std
inc
mov
push
dec
mov
pop
inc
clc
pop
hlt
je
or
shl
push
mov
aaa
je
negb
adc
cli
mov
xchg
or
js
les
icebp
jno
bound
adc
mov
pop
mov
mov
inc
push
daa
ficomps
mov
je
inc
mov
lds
or
and
mov
jae
or
insl
ss
mov
xchg
and
xor
sbb
inc
mov
out
pop
aad
aad
pop
cmc
push
stc
ret
bound
mov
add
ljmp
sub
mov
sbb
bound
sar
sti
dec
in
xor
or
ret
push
mov
fsubr
xor
ficoml
scas
clc
push
dec
insl
icebp
mov
push
add
lcall
cmp
lock
jne
pop
mov
inc
out
icebp
sub
fs
fildll
scas
cmp
je
sub
dec
pushl
pop
in
or
rclb
adc
and
cli
xchg
fwait
pop
in
pop
sti
xlat
mov
mov
lds
mov
push
push
mov
cmp
lods
push
sub
sub
fisubrs
clc
loopne
outsl
add
call
mov
test
jne
stc
sti
mov
inc
cmp
jl
jmp
pop
pop
push
mov
push
pop
push
push
pop
push
pop
sub
in
sahf
jmp
sub
outsl
mov
pushf
jl
pop
mov
ret
add
loop
popa
aad
adc
xor
lea
jns
adc
loop
loopne
jne
sbb
bound
and
mov
dec
jl
out
mov
adc
stos
push
jmp
add
jns
add
add
push
dec
push
adcl
ret
and
scas
push
mov
xor
adc
or
lret
cmp
and
pusha
adc
adc
pop
ret
push
adc
pushf
in
sub
shr
jbe
xlat
jmp
and
push
dec
mov
pop
jmp
test
jne
pop
ja
jl
scas
and
pop
push
cs
out
dec
outsl
jg
fwait
inc
aam
push
mov
sub
pop
js
sub
pop
cmp
mov
inc
jg
cld
jge
jecxz
out
cwtl
cmp
je
outsb
shlb
add
sub
cmpl
pop
lea
push
mov
imul
divl
add
jmp
mov
addr16
push
push
in
lods
loop
or
mov
push
inc
mov
loope
leave
ret
icebp
cmp
cmp
push
std
or
in
add
or
std
or
adc
adc
adcb
mov
or
stc
jne
mov
rorl
in
add
subl
mov
inc
das
pop
lock
repz
push
ja
lea
decb
pushl
cmp
or
fwait
xchg
pop
popaw
push
or
pusha
fsubl
pop
pop
arpl
adc
into
or
pop
xor
out
jo
pusha
xchg
add
nop
test
je
inc
pusha
or
pop
cwtl
rorb
mov
pop
push
sbb
movsb
mov
insl
aam
jle
je
ljmp
imul
push
and
sbb
push
popl
adc
pop
and
pop
xchg
mov
push
call
je
test
ret
mov
add
icebp
inc
js
aas
or
add
push
popa
popl
fwait
sbb
adc
adc
cmp
clc
mov
aaa
fs
cmp
je
cmpl
std
das
bnd
mov
cmp
jne
push
push
imul
xchg
popf
ret
jl
pop
jmp
fcoms
jg
mov
cmp
rorl
leave
push
inc
sub
hlt
bound
inc
or
sbb
enter
fldenv
or
adc
jo
clc
push
inc
clc
jg
inc
fimuls
movb
dec
aad
cmp
shr
mov
and
add
lods
adc
out
je
or
inc
inc
or
shlb
adc
ret
inc
pop
push
inc
outsl
or
pop
pop
out
lcall
push
mov
das
inc
pop
and
mov
adc
xchg
cmpl
or
push
test
or
dec
push
push
call
outsl
sub
inc
ror
adc
add
adc
sbb
push
cli
pushf
mov
push
jnp
inc
mov
mov
mov
mov
cld
xor
out
lods
shll
jge
inc
or
push
or
jae
push
pushf
cli
loop
add
clc
cmp
sbb
add
cmp
jmp
xor
cmpl
jle
push
cmp
jmp
push
xlat
fstpt
cmp
jge
mov
ret
ret
mov
and
push
out
cmp
cmp
lea
cmp
or
mov
inc
mov
sbb
packssdw
inc
add
or
adc
adc
pop
push
js
pop
push
ljmp
pusha
fimuls
jge
mov
cmpsb
adc
pmuludq
pop
pusha
shrl
lock
roll
push
cmp
cmp
ret
push
lret
stc
ficoml
jmp
fdivs
mov
mov
xlat
xlat
sahf
and
xchg
mov
push
les
xor
and
dec
add
lea
inc
adc
or
jb
mov
mov
call
outsl
inc
fistpl
jmp
sbb
mov
mov
clc
and
out
call
mov
mov
adc
mov
pop
pop
jmp
mov
shlb
fs
outsl
popf
mov
push
dec
or
adc
sbb
js
insb
fs
sbb
pop
stc
mulb
pop
scas
into
add
inc
std
jbe
lods
int3
jno
andb
jp
pop
movsl
push
xor
inc
mov
enter
add
mov
or
or
xor
inc
aam
testb
or
push
cmp
cli
stos
add
sbb
mov
inc
and
push
in
mov
add
or
sbb
inc
mov
add
in
js
push
ret
push
push
shrb
cs
inc
adc
imul
or
push
and
jbe
fsubl
sub
sbb
das
sbb
or
mov
push
stc
mov
sbb
adc
into
adc
pop
js
inc
mov
ss
notl
jl
ret
push
adc
cltd
lcall
adc
dec
pop
mull
dec
or
pop
incl
xchg
add
xor
cmp
ja
cmp
test
adc
and
out
push
cmp
popf
cmpl
push
cmp
fildl
pop
sbb
cmp
mov
push
cltd
pop
test
jne
lock
mov
inc
cmp
push
jle
push
jb
jmp
push
ret
mov
sti
dec
sbb
adc
icebp
fstpt
pop
cwtl
push
jbe
call
jne
enter
and
rcr
in
out
je
and
jmp
sub
dec
je
push
inc
pusha
idivb
je
sub
test
adc
dec
ss
fistps
sbb
test
movsb
std
dec
xchg
cmp
cltd
ret
mov
jmp
nop
jecxz
pop
jne
jp
pop
jo
cmp
rolb
aas
add
insb
xor
and
call
sub
push
add
mov
scas
adc
or
test
clc
adc
push
mov
xchg
xchg
mov
loope
fimuls
add
shlb
add
pop
or
push
sub
aad
std
pop
pushl
js
inc
push
in
in
fsubrl
sti
ficompl
or
sbb
adc
jmp
ficompl
jg
dec
sbb
jae
mov
shr
fs
sbb
push
imul
mov
mov
dec
fstpl
imul
jmp
sbb
and
push
jmp
and
jmp
data16
xlat
lock
sbb
repnz
iret
repz
and
das
inc
pop
push
cmp
jle
enter
xchg
push
push
fs
aad
cld
sbb
cld
cmpsb
add
mov
rol
pusha
aaa
outsl
dec
adc
jae
xchg
hlt
clc
sbbl
xrelease
push
push
jns
mov
add
mov
das
jmp
dec
lahf
dec
push
dec
mov
pop
push
lea
out
jb
pop
push
sbbl
lea
imul
dec
cmp
cmp
xchg
inc
adc
les
scas
pop
or
add
dec
xchg
popf
mov
pop
stc
jge
mov
pop
sub
sbb
push
jle
push
add
sbb
lea
btr
fmull
testb
adc
sahf
in
jnp
push
call
add
add
clc
push
ja
ja
mov
je
ljmp
lret
ret
jnp
push
test
mov
sbb
cmp
mov
insb
cmp
adcl
fimull
or
cld
xchg
cmp
push
sahf
mov
imul
imul
andl
in
adc
inc
fcmovbe
xorb
js
adc
nop
inc
sbb
pop
pop
inc
jp
push
loop
adc
dec
dec
rclb
not
and
shr
sub
mov
mov
adc
xchg
xor
mov
imul
dec
fildl
pop
push
push
cmp
loope
add
nop
jnp
push
push
push
stos
push
out
mov
loope
pushf
jp
js
jmp
push
xchg
push
push
ja
mov
lods
adcb
and
sahf
insb
rcrb
clc
add
push
pop
pop
scas
jb
daa
lea
je
mov
xchg
insl
and
in
roll
or
and
cmpl
add
mov
sbb
clc
push
push
cmp
push
sub
hlt
dec
pusha
adc
sub
or
inc
sub
sbb
clc
push
xor
pop
call
xor
clc
mov
adc
dec
push
dec
push
mov
dec
lea
or
dec
daa
sarb
je
dec
call
in
mov
ret
ret
add
bound
in
dec
insl
mov
cmp
push
mov
add
mov
xor
mov
add
inc
cmp
cmp
pop
leave
cmp
mov
xor
sub
scas
sbb
leave
push
insl
and
pop
sub
lea
mov
push
mov
pop
add
inc
or
dec
outsl
icebp
push
and
push
push
lock
mov
cmp
cmpsl
pop
loop
adc
dec
test
jle
neg
sbb
and
and
fildll
mov
insb
adc
pop
andl
dec
xor
inc
jecxz
xor
dec
or
pusha
sbb
dec
mov
push
icebp
jg
mov
dec
maskmovq
sbb
and
or
pusha
test
aas
mov
roll
adc
mov
adc
pusha
loopne
ja
js
in
test
inc
nop
push
mov
rorb
jge
sti
push
lods
lock
push
mov
inc
lock
pushl
and
push
repnz
incl
sbb
jo
mov
xor
or
cmp
cmp
jge
add
jge
xchg
jne
rol
fisubl
adc
xchg
sbb
jnp
adc
into
cmpsl
aaa
jp
jg
jmp
mov
add
shll
andl
inc
test
sbb
mov
push
jbe
cs
cld
ret
push
aas
js
push
push
sbb
cmp
in
cmp
orb
push
hlt
movb
pop
cmp
jne
mull
ljmp
clc
dec
jne
sbb
scas
fldt
pushf
inc
loope
jo
jle
mov
mov
add
out
cmp
mov
pop
fs
je
cwtl
incl
test
test
inc
pop
loopne
popf
pop
not
mov
and
popf
push
fnstcw
pop
jae
dec
xor
pusha
mov
test
cmp
xchg
jle
or
pop
lea
inc
dec
push
es
cmp
pop
jbe
adc
xlat
cmpxchg
cmp
mov
mov
xchg
insl
shlb
fisubl
insb
inc
jbe
push
sub
or
nop
or
cmp
sub
push
enter
adc
sahf
cmp
jl
pop
insb
sbb
and
inc
test
es
pop
test
ret
xor
cs
sub
adcl
cmpsb
dec
lock
pop
stos
xor
sbb
sub
fwait
cli
xlat
call
xor
addb
or
xor
xor
sarl
mov
push
cmpb
lock
sbb
pop
ds
testl
dec
mov
cmpsl
cltd
out
inc
dec
fldl
fmull
in
pop
ljmp
push
fmull
enter
es
push
add
ret
rcrl
imul
adc
or
lds
test
pop
or
inc
and
pop
ds
rcl
and
dec
ds
and
or
sub
iret
icebp
jne
pushf
and
push
pop
loope
scas
push
xorl
arpl
outsw
dec
pop
dec
push
add
push
addl
mov
push
test
cmp
xlat
stos
fsub
cltd
xchg
xchg
pop
dec
dec
or
sbb
mov
inc
adc
orb
insb
pop
mov
js
ret
cmp
in
push
mov
das
adc
adc
pop
sbb
and
popa
mov
nop
mov
sbb
mov
mov
push
adc
test
xchg
mov
sbb
std
dec
cld
je
cmpb
mov
je
mov
pop
roll
inc
sub
xchg
push
stc
cmp
sbb
pop
cs
sub
push
push
cmp
cmp
or
xor
push
insb
repz
dec
cmpsl
dec
jmp
nop
push
inc
xchg
mov
movsl
imul
pop
inc
shlb
mov
pop
mov
loopne
push
add
or
inc
push
in
adc
jl
xor
push
je
sbb
inc
ret
xchg
mov
xlat
rolb
pushf
popa
dec
xor
jo
rol
test
jecxz
inc
mov
frstor
sbb
cmp
sbb
pop
inc
xchg
pop
cs
jp
cwtl
adc
rclb
sbb
mov
sti
ljmp
mov
incl
and
add
sar
push
int
xor
push
adc
jl
dec
inc
mov
cmpsb
lock
cmc
mov
fists
mov
mov
pop
mov
sti
push
pop
push
adc
ja
push
xor
idiv
jle
mov
fwait
aaa
jp
push
jecxz
iret
mov
add
jne
loopne
fmul
or
pop
jmp
fldl
insb
cmpsl
int
mov
and
mov
sti
in
push
mov
cmp
sbbl
mov
shrb
or
out
xor
jge
call
push
ljmp
sti
sub
clc
je
test
out
out
mov
lcall
add
cli
xor
dec
scas
mov
test
cld
mov
mov
jg
out
mov
jl
movl
mov
cmp
lahf
xor
outsl
adc
sbb
and
lods
lea
clc
add
ds
inc
pop
xchg
imul
cmp
or
sub
jge
jmp
mov
pop
hlt
fstpt
hlt
pusha
or
add
adc
roll
or
enter
or
stc
mov
dec
sub
mov
mov
add
pop
add
fisubrs
push
js
out
add
inc
mov
mov
cmpb
or
clc
fidivl
jmp
sub
xor
outsb
mov
mov
push
push
stos
sahf
lods
jmp
jne
add
or
jl
dec
jmp
dec
mov
aad
cmp
mov
lea
cmp
or
lock
push
aad
aam
push
adc
add
loope
and
dec
mov
jne
push
jbe
mov
je
je
xchg
popa
push
push
push
inc
pop
and
jne
push
jmp
sbb
mov
lods
add
rcll
sti
adc
sbb
xchg
pop
addr16
sbb
sbb
aam
mov
or
nop
arpl
clc
into
arpl
and
push
std
pushf
jae
popf
roll
pop
lods
and
mov
adc
push
into
adc
mov
xchg
dec
sbb
sbb
pushf
loopne
outsl
sub
scas
jmp
leave
push
leave
add
test
push
mov
xor
push
lea
push
mov
push
mov
pop
pushf
sbb
xorl
popa
rclb
push
mov
sub
dec
push
dec
add
push
xchg
arpl
or
xlat
enter
loope
mov
ficompl
pop
and
adc
lock
add
jp
test
insb
popa
push
or
and
adc
xchg
and
push
sbb
xchg
adc
mov
push
shlb
push
pop
and
push
push
pop
add
stc
mov
xor
push
in
mov
ret
mov
mov
dec
push
repz
inc
adc
push
mov
xor
leave
stos
mov
orl
mov
pop
xchg
and
nop
sub
arpl
or
adc
loopne
jno
mov
mov
push
xor
jmp
ret
pop
pop
mov
add
mov
add
push
out
cwtl
add
clc
lods
sub
clc
setb
test
jne
mov
int3
or
add
cmp
sbb
mov
dec
rol
fimuls
andl
lea
push
pop
adc
mov
je
sub
shr
xor
aam
fld
fimull
inc
mov
nop
lock
hlt
mov
test
dec
xchg
test
push
add
dec
rorl
call
shrb
inc
sbb
dec
mov
and
cmp
push
jmp
hlt
pop
adc
loope
hlt
scas
shrb
aam
imull
call
out
push
push
shlb
dec
push
rorb
and
ret
sub
inc
fisttpll
call
in
loope,pn
call
push
add
push
push
push
pop
pop
int
pop
fst
int3
xor
clc
or
and
push
je
and
je
lahf
push
mov
icebp
jmp
pop
or
mov
or
adc
rolb
jb
inc
hlt
shlb
xor
pop
movl
testl
add
clc
push
mov
mov
dec
loopne
push
sbb
dec
lods
sbb
xor
sbb
shlb
arpl
jne
mov
fildll
add
je
js
les
sti
pop
enter
push
pop
push
in
std
inc
push
sub
test
je
inc
mov
mov
mov
xor
mov
ret
jne
push
push
sub
pushf
or
mov
jmp
divb
jmp
sbb
das
test
inc
or
cltd
mov
xor
push
push
mov
bound
inc
add
or
inc
roll
aad
and
cld
xor
in
test
fs
sbb
clc
or
add
loopne
es
push
add
xor
sbb
inc
or
mov
daa
repnz
add
or
nop
xchg
jl
sub
shrb
add
sub
xor
dec
lock
gs
test
mov
mov
inc
insl
lcall
mov
icebp
xor
decl
mov
push
pop
repnz
and
enter
test
xor
dec
dec
lea
loop
lcall
ds
sbb
or
fcomps
adc
loope
inc
fcomps
sub
addr16
add
mov
test
inc
rep
mov
bnd
and
clc
fneni(8087
add
or
add
mov
and
test
sahf
xor
stc
lds
mov
adc
xchg
add
sub
mov
jg
push
scas
mov
or
cs
xchg
add
pop
and
inc
or
stos
and
pop
xor
icebp
fildl
add
test
stos
mov
orl
bnd
push
out
scas
pop
aad
pushf
pop
je
mov
jnp
cmpsb
jne
stc
shrl
popf
inc
pusha
scas
adc
inc
add
add
adcb
pop
mov
mov
cmp
sub
push
sub
bound
mov
mov
ret
aam
call
rorl
in
add
pop
ds
or
fsubp
and
mov
xchg
mov
push
mov
loop
push
add
es
and
shl
daa
add
insl
xchg
in
xchg
psubd
fadd
push
and
fdivrl
sbb
inc
adc
adc
jge
jl
bound
loopne
jmp
adc
movsb
sbb
push
in
mov
sbb
int3
mov
test
adc
loope
jmp
mov
add
aam
mov
add
adc
scas
adc
fdivrl
mov
adc
leave
or
bound
xchg
pop
cwtl
sub
mov
lods
clc
xor
add
sar
adc
data16
xor
xchg
xor
jp
push
add
in
jns
aam
add
pusha
addl
cmp
or
mov
loope
pop
adc
fmuls
pop
bnd
sub
inc
and
xchg
fidivrs
lea
cmp
jo
pop
add
xchg
pop
fcompl
aam
pop
inc
cmp
lods
cltd
lret
scas
nop
xchg
add
pop
mov
or
mov
pop
push
push
and
sarb
add
sub
cmpsl
mov
sbb
mov
pop
or
mov
ret
lahf
inc
into
movsb
sub
jle
jne
pop
push
mov
loop
adc
jl
or
adc
out
xchg
orb
sbb
jbe
mov
jne
vpminuw
add
ret
subb
loopne
add
insl
repz
sbb
je
dec
stc
sbb
mov
sub
cwtl
cmp
dec
xchg
jmp
repnz
jne
nop
je
sub
mulb
cmp
jno
jae
rcrb
push
iret
inc
sub
ljmp
repnz
adc
jp
jo
cmc
or
not
push
notl
test
cltd
pop
sbb
mov
leave
shlb
push
mov
sti
add
sbbb
lea
push
rclb
push
adc
rclb
push
fstpl
pop
mov
or
add
jle
push
repz
cwtl
push
stos
sub
xchg
push
pop
leave
test
sbb
pop
push
mov
push
jg
push
or
or
push
add
das
and
add
sbb
jle
push
and
mov
and
xor
shll
pop
rcrb
or
mov
dec
pushf
sbb
mov
push
pop
add
cmp
jae
lods
jnp
or
adc
push
fcmovb
fcmovbe
cmp
xor
in
dec
test
pop
in
or
inc
sub
fdiv
in
and
jle
cld
adc
js
lcall
daa
vmwrite
adc
push
stc
cld
add
push
sub
push
leave
push
sub
sub
sub
sbb
xor
sbb
daa
daa
lock
dec
adc
shld
sub
or
test
and
sub
stc
jo
dec
jecxz
push
cld
inc
mov
add
cmpl
jno
add
ja
enter
push
push
or
push
inc
sub
outsl
or
pop
push
or
jbe
add
mov
inc
test
mov
popf
out
inc
pop
or
push
xor
push
cmc
je
mov
jmp
xor
or
int
xor
popf
xchg
js
jecxz
adc
or
insl
or
sub
es
sub
scas
xchg
arpl
sub
push
mov
pop
stc
inc
outsl
xor
in
dec
mov
push
ret
pop
icebp
movsb
outsl
add
jo
out
mov
pop
xlat
inc
push
xor
adc
test
repz
mov
cmp
data16
or
inc
sbb
mov
dec
lock
add
mov
push
fnstsw
fs
jo
mov
or
mov
inc
and
idivb
jo
jle
addl
xchg
cli
aaa
mov
or
clc
rorb
add
push
outsb
ja
xchg
in
push
mov
sub
add
add
push
int3
stc
lea
ret
in
scas
pushf
cwtl
nop
mov
push
and
shll
aam
shll
orl
and
xor
push
outsl
mov
sahf
push
outsl
testb
xchg
test
jge
andl
lret
mov
mov
mov
scas
inc
bound
jae
test
push
inc
dec
and
or
sub
loope
inc
pop
dec
dec
xor
push
sti
scas
adc
inc
in
inc
testb
testb
jmp
add
aad
cs
fdiv
lret
or
or
enter
or
sti
mov
sbb
test
jne
and
out
jl
mov
jns
or
divb
pop
mov
rorl
test
repnz
rclb
or
sbb
loope
sbb
call
and
iret
add
test
inc
pop
dec
xor
and
fiadds
jns
inc
fists
aam
mov
inc
add
or
inc
adc
js
insl
mov
add
cmp
push
sbb
inc
pop
sbb
add
mov
repz
dec
int3
add
adc
mov
int3
xor
lcall
leave
xor
out
dec
scas
pop
cmp
aam
or
repz
adc
push
popf
or
jne
fildl
repz
ds
decb
push
cmp
dec
add
add
movsb
xor
xor
add
xor
pop
mov
test
cmp
shlb
cmp
mov
lret
adc
cmp
mov
arpl
pop
or
mov
adc
or
loopne
push
jg
push
fsubl
lock
sub
aaa
push
or
cli
lret
inc
dec
adc
dec
xor
loop
je
xchg
xchg
push
lock
and
pop
adc
sub
inc
xchg
out
mov
aam
adc
pop
fwait
adc
adc
iret
mov
test
jp
mov
icebp
pop
data16
push
inc
insl
sub
ret
jnp
div
std
or
pop
push
andl
sti
push
sbb
mov
xor
fwait
push
movups
mov
xchg
icebp
adc
js
gs
jge
jo
or
movsb
repnz
fs
xchg
outsb
xchg
lea
push
add
aas
add
ja
pusha
sbb
mov
leave
jl
sub
repz
sub
sub
sub
pop
push
lods
or
mov
repz
jecxz
mov
outsl
push
or
mov
xor
sbb
push
xchg
sub
add
xchg
movsl
js
pop
ss
and
sbb
jl
xchg
sbb
cmp
jne
int3
shll
pop
sbb
dec
xor
int3
enter
cmp
test
jge
mov
mov
or
add
in
xchg
sarb
push
push
push
orb
pusha
pusha
mov
mov
test
add
add
repz
fmull
lock
push
js
mov
jne
pop
lcall
jl
test
adc
data16
js
push
js
imul
pop
adc
adc
pop
repnz
int3
mov
mov
lds
sbb
xchg
ret
imul
div
xchg
aam
jl
and
xor
rcll
push
push
jecxz
cmp
jns
je
push
js
mov
cmp
add
push
jle
sbb
in
inc
xchg
mov
lret
clc
pop
sbb
mov
ds
das
test
fsubr
jns
lret
test
into
mov
test
pop
out
add
sbb
sbb
and
sub
xor
jne
jne
js
push
xchg
ret
hlt
add
mov
loop
add
les
xchg
pop
dec
in
sahf
add
sbb
cld
fs
adc
int3
sar
dec
pop
out
pop
push
daa
jne
cmc
and
pop
push
stos
xor
inc
lods
popf
dec
jmp
pop
add
jge
cmp
jecxz
leave
add
ficompl
test
mov
xchg
stos
divb
or
mov
shr
inc
xlat
mov
pop
or
sbbb
mov
xor
sub
sti
mov
ljmp
cmp
movsb
into
cwtl
sbb
inc
fiadds
jmp
xchg
mov
add
repnz
add
sub
pushf
and
xchg
movsl
xor
and
xor
call
fildl
test
insl
popf
test
xchg
dec
adc
xchg
lods
sbbl
add
mov
je
mov
mov
out
mov
push
les
movsb
or
lcall
mov
inc
in
inc
push
test
movsb
repz
loop
pop
hlt
setne
mov
sbb
inc
loopne
pop
repz
sti
aas
push
push
mov
mov
adc
hlt
jne
push
push
push
cwtl
movsb
mov
push
andl
addr16
daa
loopne
xchg
mov
andl
pop
lock
shrb
or
popa
xchg
push
repnz
loopne
xchg
test
nop
sub
adc
and
sub
inc
sbb
mov
testb
add
aas
popf
outsb
add
sete
jne
push
push
or
sub
dec
add
push
lret
loope
and
add
jg
push
dec
mov
test
andb
sub
push
add
dec
xchg
inc
loope
push
ret
clc
add
aad
dec
mov
xlat
push
adc
mov
jno
popa
sub
popf
push
cmp
pop
fwait
add
or
inc
and
dec
testl
and
jge
lcall
sbb
and
sbb
in
xchg
imul
mov
and
outsl
add
or
ds
or
add
lret
pop
inc
push
scas
inc
adc
movsb
fisubrs
flds
movsb
inc
sub
mov
adc
adc
sbb
int
xor
adc
mov
sbb
js
int
inc
jnp
ret
jo
bound
pop
push
mov
lret
in
in
insb
repnz
lret
xor
add
mov
cmc
or
movsb
lahf
push
mov
adc
rcl
std
sbb
pop
into
sti
sub
adc
inc
in
mov
jb
sub
inc
jle
lock
xor
add
mov
out
cltd
dec
or
mov
pop
push
add
sub
inc
dec
imull
imul
cli
scas
rol
pop
cmp
or
les
lock
jle
sbb
push
xor
leave
jb
mov
ret
jge
mov
pop
insb
and
sbb
test
lock
ds
icebp
sbb
nop
add
lds
mov
push
pop
lods
ja
scas
sub
clc
jb
xrelease
test
add
andb
dec
jge
mov
push
out
sub
xor
mov
push
aam
mov
dec
test
cmp
jbe
stos
jle
movq
jno
mov
inc
add
push
inc
add
in
and
jo
mov
test
popf
hlt
mov
add
push
je
ljmp
cli
loopne
divl
xchg
push
adc
lods
xor
push
aam
push
push
cmovbe
mov
push
push
add
movsb
xchg
ds
lds
push
aam
push
mov
enter
daa
cmpsl
push
mov
insb
cmp
into
lock
addr16
adc
shll
sbb
or
lea
add
cmp
jae
push
and
outsb
icebp
or
imul
and
daa
out
mov
shrl
push
fmull
add
add
ja
push
adc
mov
jmp
cmp
dec
ret
fisttps
mov
cltd
mov
add
mov
outsb
movsb
push
xchg
inc
ljmp
jmp
ljmp
imul
shrl
test
jl
mov
cmp
dec
insl
mov
jg
loope
shl
outsb
inc
or
push
jmp
fmuls
pop
mov
hlt
mov
adc
and
pop
or
adc
pop
nop
pop
xor
inc
hlt
sub
stos
xchg
fadd
push
pop
movsl
psubusw
inc
test
pushl
jae
add
lock
or
xchg
nop
mov
jae
mov
pop
add
scas
jno
imul
jge
xorb
and
outsl
stos
push
sbb
adc
cmp
aam
out
iret
cmpsb
mov
mov
cmp
lods
mov
pop
push
mov
clc
jo
and
test
xlat
sbb
inc
xlat
int
push
cmpsb
cmp
cli
inc
jo
cli
cmp
mov
ljmp
sub
inc
js
add
sub
adc
jle
cmp
dec
add
pop
push
cmp
data16
sahf
push
sti
lret
sbb
pushf
aam
xchg
sbb
iret
jp
mov
pop
push
ds
and
sbb
or
or
push
or
and
pop
hlt
mov
pop
sbb
add
mov
mov
push
out
mov
cli
or
icebp
inc
xor
es
or
cmpsb
mov
cmp
jecxz
ljmp
movsb
pushf
jo
arpl
mov
or
pushf
movl
fcmovbe
mov
push
es
push
sbb
jne
leave
pcmpeqw
mov
or
pop
arpl
add
mov
mov
and
lods
dec
lods
sbbb
pop
jo
push
rol
popa
pop
push
mov
and
cmp
mov
pop
adc
inc
dec
cmp
push
pop
mov
and
dec
test
cltd
jecxz
xor
cli
adc
adc
roll
js
mov
fimuls
test
pop
jg
test
ret
pop
je
fnstenv
adc
test
xchg
dec
shlb
sub
les
pop
cmp
inc
jne
jmp
jne
pusha
xchg
push
mov
push
push
push
scas
test
imul
mov
cld
xchg
loopne
add
stc
cmp
in
cmpb
inc
test
loope
mov
sbb
sbb
out
xchg
shr
adc
pop
jp
inc
push
adc
inc
sub
fmuls
cmp
adc
adc
imul
push
jl
adc
fnsave
sti
adc
adc
repz
jge
mov
add
pop
adc
loop
push
mov
xchg
test
ds
je
xchg
icebp
and
inc
pop
lock
iret
xlat
pop
daa
dec
dec
xor
push
add
lea
leave
cmpsb
pop
leave
lea
sub
mov
add
push
inc
push
sub
enter
ret
adc
pop
sbb
mov
push
popf
pop
add
jbe
inc
test
xorl
call
cmp
xor
insl
push
out
fucomi
int
call
shlb
les
add
sbb
adc
inc
push
jmp
inc
stos
jno
mov
cmp
loop
jne
sbb
gs
movsl
call
sub
add
into
popa
pop
jmp
jl
add
adc
mov
mov
cmp
mov
es
xchg
inc
mov
subb
pop
xor
cld
rolb
sbb
in
add
inc
shrb
lods
or
sub
and
loope
popa
inc
mov
sti
addl
mov
popf
pusha
sbb
push
mov
cmc
adc
mov
cmp
push
stos
sub
push
pushf
cmp
in
dec
or
sub
jne
scas
repz
arpl
and
and
aam
pop
mov
repz
push
push
push
imul
ja
sub
adc
push
jl
push
push
js
test
pop
adc
dec
sahf
pop
or
push
push
xchg
cmp
or
shld
xor
lds
adc
cltd
mov
sbb
sbb
out
pop
pop
sarb
outsl
ds
cmpsl
cld
add
fldl
rolb
popa
sbb
call
sbb
add
in
and
jmp
fistpll
add
leave
push
mov
aaa
sahf
mov
std
js
fnsave
push
cmp
cmp
fsubl
nop
ret
dec
adc
mov
and
or
loopne
mov
inc
subb
sbb
rorl
xchg
push
negl
xor
xor
sub
daa
mov
or
xor
pop
lods
cmp
div
stos
insb
pop
leave
sbb
cmp
popa
cmp
add
mov
rolb
cmc
les
push
sahf
or
xlat
loopne
and
je
lods
test
jne
sbb
lods
outsb
popa
int
in
fwait
mov
pop
adc
shl
cli
lods
add
daa
shlb
mov
adc
push
adc
cmp
push
nop
mov
mov
rcl
fisubrs
lods
or
push
push
test
and
xchg
popa
lret
jp
in
adc
sbb
mov
leave
xchg
mov
hlt
or
fstpt
add
pop
leave
pop
out
pop
cmp
jge
sub
movsb
push
or
in
mov
push
push
mov
sbb
cmp
pop
inc
or
push
xor
xchg
xchg
push
in
pop
sbb
mov
push
push
cmp
addb
int
outsl
gs
sbb
add
lea
and
jmp
unpckhps
add
and
cmp
out
mov
inc
jmp
mov
imul
jne
xor
push
push
xor
fsubl
mov
lock
pop
inc
ficoms
addl
adc
or
enter
or
push
lea
push
lock
lret
decl
cmp
sub
mov
imul
jo
fimuls
loopne
jg
adc
lock
call
loop
sbb
lods
pop
hlt
shr
mov
rolb
push
sub
sub
add
iret
push
push
add
push
xlat
mov
aaa
or
or
adc
pop
sub
add
hlt
adc
mov
or
lods
hlt
addl
enter
dec
sbb
pop
add
pop
push
movsb
lahf
orb
push
mov
mov
add
push
lret
or
pop
mov
xor
sbb
test
movsb
lock
xchg
add
je
jmp
mov
sub
push
insb
into
and
cmpsb
push
movsb
ret
dec
sub
test
or
ljmp
add
xchg
add
push
mov
push
call
ret
ljmp
nop
std
or
cmp
je
sbb
push
rcrb
push
mov
pop
lret
inc
lods
aad
cmp
mov
bound
pop
and
jp
dec
test
fnsave
jl
loope
push
movsb
push
push
sub
push
push
outsl
mov
sub
jle
lods
nop
push
call
decl
jl
push
push
nop
xchg
iret
popa
sub
jecxz
push
or
dec
imul
cs
pop
push
test
or
leave
mov
mov
adc
incl
shll
push
cld
push
push
outsb
mov
xchg
xor
cmp
sub
push
sbb
subb
lock
fmull
pop
or
adc
movlps
cld
sarb
data16
dec
lret
mov
xlat
push
aas
push
adc
stos
push
jns
xchg
xor
xchg
xor
mov
inc
dec
fldt
call
clc
add
hlt
push
in
mov
in
lods
jbe
inc
mov
sub
push
mov
neg
push
add
test
cli
frstor
pop
in
jl
ret
mov
sbb
push
ljmp
sbb
and
test
ja
setne
jbe
movsl
push
push
xor
cmp
push
push
cmp
je
fcmovbe
push
push
xchg
push
push
add
add
and
ss
mov
adc
fdivrs
fnsave
push
aas
sub
add
inc
mov
xchg
push
xchg
outsb
mov
jmp
dec
cs
cs
mov
mov
sub
cmp
adc
idivl
test
loopne
sbb
data16
repnz
pop
inc
or
lock
stos
imul
scas
in
push
dec
sbb
decb
jnp
dec
or
xor
and
imul
inc
or
xor
xchg
dec
sbb
add
pop
insb
pop
or
and
xchg
pop
sub
inc
adc
adc
adc
ret
add
jb
pop
movsl
aam
pop
cmp
nop
inc
push
push
rcrb
xor
lahf
ss
pop
jns
lret
push
and
pushf
mov
js
lea
clc
lcall
je
cmp
je
cmp
jne
add
cs
rclb
stos
pop
push
add
gs
or
cmc
mov
or
sbb
pop
mov
cmp
xor
adc
push
mov
loope
das
pop
clc
cld
jo
dec
cmp
inc
mov
pop
les
enter
pop
dec
lea
cmp
jne
xchg
ja
add
and
sbb
popa
pop
adc
mov
mov
or
pop
mov
sub
cld
subb
sub
enter
sub
add
leave
pop
pop
jb
scas
pop
pop
aam
js
inc
jmp
add
push
add
sar
add
cmpb
or
ja
leave
shrl
xor
inc
add
push
ret
mov
movsl
data16
call
add
addl
add
sub
pop
push
inc
adc
addl
push
mov
add
add
fs
jmp
jge
cmpsb
in
xor
xchg
mov
mov
cmp
add
mov
cmp
out
mov
je
cmp
jne
mov
sbb
add
fistpll
inc
lock
mov
pop
dec
xor
popa
adc
jne
jmp
testb
lcall
adc
sbb
cli
cmp
jbe
jne
orb
fs
sti
in
inc
cmp
fs
dec
inc
jmp
inc
and
aad
jo
or
loopne
mov
lods
add
cmp
or
inc
clc
dec
out
lahf
out
cmp
cmp
je
mov
lea
add
mov
and
lahf
call
inc
xor
sub
jge
pop
sahf
jne
cmp
and
mov
cmp
push
mov
adc
je
sub
adc
or
ja
shrb
enter
aam
popa
cs
cmp
cmp
add
push
cmp
push
stos
adc
or
femms
ds
outsl
lds
loop
jne
cmp
push
jno
push
test
mov
add
sbb
int
mov
pushw
mov
push
lret
aaa
jb
cmp
rol
pop
shl
add
jmp
cwtl
aas
sub
jne
and
dec
hlt
add
je
fs
jne
xor
shlb
dec
lock
test
sub
push
mov
or
add
pop
jae
aaa
sbb
jmp
dec
shlb
cld
jbe
test
mov
or
push
sar
dec
add
outsb
data16
sub
push
icebp
rol
mov
stc
lret
cmp
jg
or
jge
int
in
or
or
jle
es
sub
dec
jle
sub
and
pop
cmp
jl
pop
jle
pusha
pusha
and
jbe
lock
jle
push
adc
and
or
je,pn
test
jne
je
add
jb
xchg
je
add
ss
je
xor
mov
adc
movb
inc
mov
push
sub
push
sbb
or
inc
andl
inc
push
push
mov
call
and
je
adc
mov
sahf
inc
outsl
dec
mov
push
mov
icebp
js
add
jp
inc
es
mov
push
or
insb
add
push
xlat
fldcw
add
jecxz
mov
andb
push
cmpsb
imul
mov
xor
insb
mov
rolb
jecxz
jno
clc
mov
loopne
es
out
add
mov
jne
fiadds
mov
fisubs
push
sub
push
mov
imul
add
movb
dec
cmpsl
cli
and
lea
push
faddl
popf
mov
add
pop
jb
jg
sub
pop
cmp
mov
stos
push
mov
loopne
or
das
mov
or
xchg
lods
cmp
pop
cwtl
jne
imul
fiaddl
stos
dec
daa
mov
add
cmp
push
push
dec
fadds
inc
and
jae
je
xor
mov
cmp
je
test
adc
mov
loop
in
push
fsts
sti
mov
add
jbe
pop
or
sti
pop
daa
dec
add
and
push
and
stc
pop
add
data16
or
hlt
add
xor
pop
inc
or
mov
mov
add
out
pop
popf
xchg
and
es
jl
add
cmp
stc
or
data16
mov
jg
scas
push
or
mov
cmp
lock
cld
xchg
mov
sub
inc
xchg
mov
pop
xchg
loop
aaa
rolb
jge
jne
add
push
cmp
adc
lds
adc
icebp
sub
sti
pusha
jb
or
shlb
mov
andb
add
sti
pop
fwait
adc
mov
xchg
sbb
xor
add
jno
call
insl
repz
or
pop
sbb
cmc
or
push
mov
dec
mov
sub
in
js
lods
jmp
lock
xchg
xchg
jne
lahf
jne
cmpsl
in
cwtl
addl
xchg
xchg
ret
mov
xor
mov
in
out
popa
das
or
jne
and
push
mov
cmp
or
test
mov
fs
push
and
fs
stos
test
and
pop
lahf
cld
mov
test
mov
imul
jle
setne
inc
sub
sub
mov
mov
mov
add
aam
jge
pop
jge
sub
xor
loope
test
cs
mov
xor
loop
xor
sbb
in
int3
es
add
push
push
shlb
sub
push
jne
out
and
jne
fwait
mov
push
push
fdivl
jne
ja
rclb
insb
lods
cmp
jnp
das
shrl
loop
inc
fdivrl
sbb
das
bound
push
lock
into
cmpl
add
cmpl
add
push
dec
jae
pmulhw
mov
jb
fcomps
out
adc
and
jmp
cmp
ja
pop
shlb
cmp
inc
data16
inc
inc
xchg
in
loope
jge
pop
and
inc
inc
fdivs
sbb
sahf
stos
cmp
jne
cwtl
mov
js
dec
out
shl
mov
adc
push
mov
imul
in
test
dec
fsubrs
push
loopne
mov
in
or
call
xor
jbe
adc
mov
jp
sbb
incb
jae
clc
jg
mov
jmp
pop
inc
cmp
je
lea
cmpb
cmp
jne
mov
xchg
les
aam
adc
clc
or
out
jmp
cmp
mov
mov
inc
incl
filds
dec
fcompp
xchg
push
jmp
test
movsb
push
jbe
mov
cltd
test
adc
pop
jge
cmp
cmp
gs
jo
and
bound
jae
lock
push
xchg
or
jo
enter
lahf
sbb
add
ret
sti
sub
lds
dec
popa
in
adc
push
imul
ret
aad
ret
xor
cmp
orl
push
int
add
int
dec
sbb
add
movsl
jne
fwait
in
sub
test
mov
cmp
cmpsl
xor
pop
cs
imul
cmp
inc
mov
xchg
data16
mov
xchg
add
cld
lret
push
push
push
sbb
push
add
lock
push
flds
das
mov
popa
pop
pusha
adcl
xchg
movsb
sub
mov
mov
jbe
cmp
inc
and
cmp
xor
push
fadds
mov
sub
xor
jb
pop
xor
cmp
sub
cmp
sub
sbb
pop
ret
imul
loope
cwtl
push
in
add
in
test
data16
rolb
xchg
dec
out
sbb
int
adc
ds
xor
xchg
push
mov
cli
test
loopne
cmp
test
sbb
in
les
dec
enter
xor
jmp
push
push
in
cmpsl
in
push
push
cmpsb
sub
push
push
add
js
jo
mov
pop
mov
mov
shrb
xchg
nop
cmpsb
or
sub
in
dec
addl
sbb
or
pop
inc
dec
movl
cmpb
or
js
or
jo
mov
xchg
inc
inc
xor
repnz
hlt
test
mov
in
sbb
or
or
or
popa
pop
lcall
aas
js
pop
jg
xor
or
dec
xor
lock
ds
push
loopne
in
jne
pushf
add
xor
test
in
or
fadds
fbstp
add
push
lcall
hlt
cmp
add
stos
ja
loopne
inc
dec
rclb
jnp
mov
and
adc
sub
adc
fucomi
ud0
add
mov
xchg
mov
lea
mov
faddl
xchg
xor
shll
or
cmp
outsb
bound
lea
imul
lock
cmp
mov
dec
inc
or
sbb
push
cmp
in
xchg
rclb
push
inc
xorl
inc
fsub
in
in
or
adc
jo
mov
pushf
loope
mov
sbb
out
xchg
iret
ret
mov
orb
outsb
lock
aam
clc
push
xchg
lret
pop
imul
push
or
adc
cmpsl
mov
sbb
idiv
pop
and
call
cmp
shlb
mov
sbbl
sub
ja
adc
bound
call
or
fcompl
adc
mov
and
cmp
test
add
cmp
dec
ret
xchg
add
add
push
cmpsb
sub
push
stos
add
imul
rcr
add
xchg
push
jns
loopne
jns
xchg
shlb
pop
sub
repnz
push
jl
cld
rol
arpl
or
add
cltd
inc
mov
popa
push
dec
in
adc
pop
or
scas
mov
cld
mov
out
loopne
sub
addr16
sub
pop
pop
sbb
adc
or
loop
aaa
cmpsl
add
js
sub
and
push
pop
mov
mov
movl
sbb
adc
add
dec
xor
imul
dec
sbb
push
xor
ret
dec
cmp
mov
or
popf
pop
sbb
ja
ds
ljmp
sub
add
daa
aam
sbb
or
mov
push
cli
call
pusha
mov
dec
cmp
cmp
test
shr
push
mov
adc
jb
sbb
pop
shr
rorl
inc
inc
popf
or
mov
push
rcr
in
jl
xchg
or
or
out
popa
add
pushf
xor
stos
addb
mov
hlt
sti
mov
hlt
movsl
add
pop
shrb
inc
insl
xchg
ret
xchg
stc
cmp
pop
or
cmp
inc
inc
or
mov
sbb
jecxz
lods
insb
dec
ja
cmp
jecxz
add
jo
or
push
mov
jecxz
into
fwait
sub
jg
cld
push
popa
push
loope
ja
in
xchg
mov
out
loop
mov
aad
fadds
adc
lods
and
les
and
and
and
xor
stos
mov
mov
xlat
and
dec
push
sbb
adc
sub
sub
jg
and
insl
loopne
mov
pushf
out
mov
pop
outsl
adc
gs
pop
orl
lahf
xchg
inc
inc
ficoml
dec
stos
mov
stos
movsb
ja
xchg
or
lret
aas
mov
xchg
scas
inc
cwtl
pop
and
mov
sub
pop
test
push
or
inc
dec
sub
jecxz
sub
int3
jecxz
pop
xlat
push
mov
insb
adc
or
fsubs
jo
sub
fdiv
add
mov
lea
cmp
js
add
push
and
jmp
pop
dec
inc
push
insl
inc
adc
push
or
iret
rorb
xchg
imul
push
jecxz
jecxz
inc
push
mov
xchg
fildl
test
jns
xor
inc
xchg
adc
mov
rclb
jbe
pop
pop
mov
or
je
ja
je
and
mov
pop
mov
test
jns
out
lcall
cmp
loope
aaa
push
inc
dec
fimuls
lea
mov
addr16
sahf
ret
mov
dec
xor
jecxz
inc
in
sub
jge
loope
push
push
xor
xor
inc
arpl
push
jl
dec
adc
push
add
andb
adc
pop
and
inc
push
fiadds
pop
mov
adc
adc
por
test
ret
and
push
outsb
pop
cs
addr16
or
out
push
lods
rolb
test
sbb
add
mov
mov
or
or
pop
int
ret
sub
or
dec
mov
lods
push
pop
incb
test
jg
out
lahf
ret
sbb
adc
push
pop
inc
outsb
lahf
mov
push
sub
or
pop
add
jmp
dec
pop
cld
mov
add
sub
mov
loope
cmp
sub
xor
lea
jb
or
mov
lcall
pop
insb
inc
push
pusha
test
inc
push
pop
adc
cmpps
stos
xchg
shlb
push
mov
xchg
pop
outsl
adc
add
jns
loopne
mov
aam
loop
sub
je
mov
sub
pop
mov
adc
inc
sub
push
adc
cltd
aas
adc
icebp
cmp
and
daa
fistl
dec
adc
push
adc
incb
cmc
pop
dec
or
mov
mov
mov
pop
sbb
popf
add
or
dec
pop
xchg
push
sub
loope
pop
push
adc
fiadds
mov
rolb
push
aaa
add
xchg
push
inc
iret
cmpsl
or
push
lods
mov
adc
pop
mov
push
push
jns
test
sub
sahf
dec
mov
sbb
dec
or
repnz
xor
sbb
inc
scas
and
add
push
or
ret
fisubl
sbb
jge
adcl
push
cmc
iret
xchg
loopne
sbbb
add
adc
inc
aas
add
dec
bound
sub
test
stos
sub
mov
inc
fwait
sbb
cmp
movsb
cmpb
out
lcall
pop
add
mov
add
cmpsb
cmp
lds
push
sub
and
sub
xchg
push
xchg
fcompl
or
jbe
xor
add
and
repnz
dec
mov
enterw
dec
push
or
xlat
pop
push
add
cmp
mov
lea
push
cmpb
or
pop
mov
pop
xor
xor
pop
xor
and
jo
ss
adc
iret
xor
cmp
mov
mov
or
xchg
rorb
pop
and
add
add
pushf
stos
dec
adc
cmp
or
sbb
xor
add
and
push
mov
nop
outsb
sbb
aad
push
lcall
fsubrs
and
or
lock
jne
cmpsb
sub
sub
mov
or
ret
add
mov
jmp
and
sub
mov
jmp
dec
pop
and
sbbb
sub
push
mov
or
mov
cmp
pop
sar
sub
push
xor
sub
popf
test
push
add
adc
andb
shlb
inc
xor
cmp
add
cmp
push
shll
incl
and
xchg
pop
fiaddl
fs
add
sub
je
loopne
add
in
mov
jbe
mov
push
add
mov
sahf
in
push
xor
cmp
mov
movsb
and
sub
in
popa
movsl
movsl
push
js
dec
dec
cmp
dec
cld
mov
mov
xor
xchg
xor
rclb
in
xlat
mov
out
xchg
adc
sub
mov
xor
sbb
in
inc
cmp
dec
adc
mov
jmp
loopne
enter
inc
mov
xor
pusha
mov
sbb
imul
jb
sub
dec
xor
and
add
push
xlat
enter
add
xchg
inc
push
shlb
jp
mov
scas
dec
aaa
mov
clc
sbb
mov
cmp
push
imul
lahf
pop
or
mov
adc
inc
add
dec
cmp
add
or
sub
fistl
cmp
jne
push
mov
sbb
mov
das
xor
scas
jl
xor
roll
mov
xchg
test
addr16
imulb
xor
mov
inc
sbb
mov
fstpl
sahf
test
inc
lahf
mull
repnz
adc
xor
jb
sub
pop
addb
mov
lds
push
mov
add
les
or
xor
jecxz
test
jge
fwait
and
imul
fistpll
aaa
fpatan
push
call
push
fldl
out
inc
xchg
or
fbstp
mov
dec
jns
pop
pop
or
arpl
xchg
dec
lret
bnd
stos
cmpl
mov
fnstcw
push
push
mov
rorb
lret
pop
xlat
and
sbb
pop
xchg
mov
lods
push
dec
or
dec
mov
pop
xchg
push
xchg
xor
or
int3
fsubrl
sbb
pop
mov
decl
mov
or
mov
sbbb
xadd
inc
push
inc
jo
cmp
pop
mov
or
dec
je
or
or
jno
pop
xchg
sbb
imul
sub
fmuls
or
enter
scas
or
push
add
add
push
rclb
rolb
movsl
push
bound
or
orb
or
movsl
adc
or
dec
arpl
lock
fdivrl
outsb
add
dec
loopne
sbb
jg
sahf
gs
sbb
lahf
mov
stos
fucomp
rorb
xor
pop
inc
data16
shrb
push
push
pop
inc
in
loopne
jo
pop
xchg
add
in
or
repnz
push
test
add
cs
mov
xchg
lock
les
shlb
add
and
rcrb
dec
add
insl
loop
dec
icebp
pop
arpl
out
adc
shll
stos
sub
dec
dec
je
and
jb
subb
mov
inc
stos
cmp
mov
sub
mov
xor
sub
sub
cmpb
inc
cli
fidivrl
push
inc
in
sti
add
mov
int
lret
xchg
mov
lcall
insb
sbb
cmc
or
jecxz
sbb
adc
xchg
fdivs
or
mov
jle
fildll
cmp
sahf
push
add
inc
adc
mov
mov
jmp
aad
popa
addr16
pop
popf
push
insl
leave
shlb
rcll
mov
xorl
inc
xchg
sahf
add
pop
lahf
add
mov
ret
mov
jg
mov
add
das
test
xchg
and
and
xchg
or
fists
mov
pusha
leave
dec
adc
adc
add
pusha
sub
pushf
mov
jno
mov
call
jge
adc
loopew
pusha
sub
xchg
jg
stos
push
ljmp
dec
das
or
out
out
rolb
lahf
mov
add
dec
sbb
push
outsl
cmp
push
push
push
mov
cmp
inc
sbb
shlb
inc
lahf
xchg
rolb
inc
mov
test
xor
fucom
push
insl
inc
xchg
outsl
xchg
cltd
les
pop
addr16
or
push
jmp
cli
adc
mov
xchg
jne
ret
xchg
xchg
fistps
jge
movzbl
push
xor
ja
push
sub
jg
aaa
mov
mov
push
xor
mov
inc
rclb
popa
pusha
pushf
fisubs
mov
sbbb
fisttpl
jnp
fnstenv
je
sub
push
fistpll
ret
push
jmp
push
and
sub
mov
sbb
add
pop
add
sub
mov
movsb
jns
inc
mov
sub
lea
push
lea
push
inc
push
loope
loopne
jge
lock
or
or
or
cmp
pusha
cmpsb
push
cmp
push
xor
sub
sbb
arpl
pop
ret
js
lcall
adc
jmp
fwait
xor
mov
xchg
mov
cmp
inc
leave
dec
xor
movsb
sub
jmp
movl
pop
add
mov
dec
mov
add
push
jge
jb
cmp
inc
insl
testl
pop
cmp
pop
std
add
inc
sub
pop
int
push
mov
testb
outsb
ss
sbbb
or
add
fnsave
cmpb
adc
cmp
jbe
inc
xchg
daa
lret
imul
cmp
mov
movb
push
jnp
aaa
mov
adc
pusha
xchg
cmp
push
inc
mov
fimull
dec
sbb
inc
and
adc
lods
test
mov
ja
or
stos
add
cmp
je
jg
or
adc
es
xchg
fs
jl
insb
or
adc
mov
pop
lret
mov
add
push
cmp
aad
je
mov
pop
xchg
decl
enter
iret
jbe
mov
sbb
pop
xchg
inc
mov
jg
roll
push
lahf
mov
mov
push
enter
sbb
add
incl
mov
mov
xor
xor
rolb
xor
es
mov
push
es
mov
cld
pop
add
popf
loop
lahf
mov
mov
leave
popl
add
lea
sahf
out
mov
cmp
cmp
call
sbb
push
push
cmp
adc
lock
mov
mulb
loopne
pusha
movsl
ret
nop
mov
sbb
outsb
sub
movsl
dec
sub
ss
movsb
pushf
adc
bound
fwait
inc
scas
sbb
addb
pop
push
xlat
or
in
arpl
dec
add
push
xor
stc
fdivrs
cmp
jnp
add
fsubr
psrlq
jne
mov
inc
icebp
sbb
jl
icebp
push
or
push
sbb
and
cmp
or
and
pushl
cmp
test
cmp
jb
jmp
cwtl
sbb
and
push
cmp
pusha
outsb
ja
sbb
pushf
adc
xchg
outsl
jl
or
jg
pop
or
cwtl
mov
push
insl
sub
sub
out
pop
inc
movsl
push
lcall
testl
push
shl
rcr
lea
cmc
jg
flds
movsl
push
mov
push
daa
fstps
and
xor
std
orl
fistpl
sub
add
mov
int3
rcrl
dec
sbb
and
sub
push
outsl
fwait
test
mov
sbbl
bound
xchg
lea
sbb
or
mov
sub
inc
jno
inc
js
sub
pop
or
es
mov
mov
js
pop
adc
adc
dec
inc
lea
lea
shl
push
outsb
testl
cmp
lea
inc
mov
and
mov
pop
and
xor
cmp
pop
cmp
and
addb
mov
cmp
ret
cmpsb
push
es
loop
adc
mov
jl
inc
insb
pop
loopne
imul
fwait
aam
adcb
jg
cmp
add
and
test
test
out
xor
shl
xor
sbbl
loopne
rclb
or
rolb
shlb
and
ret
push
cmc
test
rcl
lahf
movsb
mov
arpl
add
jo
push
push
mov
addr16
cmp
xchg
pop
cmp
jne
rcll
pop
pop
rcrl
dec
movsb
cmp
jnp
lock
cld
and
push
add
cmp
jb
adc
pop
mov
shlb
das
les
xor
mov
pushf
push
adc
fwait
fwait
push
arpl
sub
or
mov
movsl
test
lea
rolb
enter
sbb
cwtl
jne
popl
xor
mov
pop
mov
jmp
ljmp
cmpb
xchg
faddl
sbb
push
xor
js
mov
cmpsb
adc
sbb
pop
addb
sbb
ss
insb
and
jmp
or
call
mov
mov
inc
daa
jge
data16
jns
mov
int
sub
xchg
sbb
xchg
cmp
movsl
add
cmpsl
add
or
fidivrs
cli
cmpsl
test
cmp
cmp
xor
cmp
add
add
clc
add
testb
mov
sbb
sbb
xchg
pop
bnd
add
es
add
mov
cmpsl
add
push
cmpsb
pop
mov
pop
xchg
mov
cmpb
inc
xor
jge
call
into
mov
inc
jle
ret
pop
lock
mov
in
movsl
xlat
xchg
int
jp
inc
cmp
jge
dec
lahf
mov
mov
add
pop
sbb
add
mov
call
pop
fmulp
cli
imul
and
xor
ja
lock
pop
sbb
enter
inc
xor
or
push
or
dec
pop
cwtl
pop
pop
push
push
lea
fiaddl
add
dec
push
lock
jle
aas
jnp
pop
notl
aas
les
mov
test
jmp
push
fwait
cld
sub
push
inc
ss
in
pop
xor
inc
mov
mov
icebp
fiadds
sub
pop
mov
roll
jle
add
rclb
pop
xor
loopne
add
pop
sbb
push
push
mov
stos
rorb
and
mov
or
pop
pop
pop
jge
cmp
xchg
xchg
testb
add
push
mov
dec
jl
adc
fisttpll
xor
add
aad
addr16
cld
insl
push
incl
dec
cmp
ret
sbb
je,pt
cmp
jbe
adc
mov
mov
sbb
cmp
or
lcall
xchg
sub
and
mov
aam
out
sbb
inc
sbb
adc
cmp
std
mov
scas
jle
push
shl
sub
sub
dec
mov
sub
mov
xlat
push
fidivrs
jb
pop
pop
dec
xorb
push
sub
rclb
lods
repnz
and
insb
jp
cmp
mov
add
or
jmp
inc
das
dec
push
mov
movsb
push
cmpb
push
mov
dec
mov
js
insl
and
popf
lock
test
testb
sub
mov
cmp
in
dec
scas
in
add
mov
cmpps
and
add
or
adc
pusha
js
sbb
enter
sbb
and
aaa
pop
mov
pop
pop
std
mov
pop
pop
or
int3
aad
jg
dec
jno
pop
mov
add
push
test
dec
push
push
clc
mov
sti
mov
bound
imul
jmp
test
inc
xor
mov
or
lret
pop
addr16
cs
clc
clc
leave
lods
pop
jp
add
scas
ret
cmp
push
int3
xchg
jb
xchg
lea
je
add
sub
pop
add
cmova
mov
adc
xor
ljmp
inc
cld
push
fstp
push
jns
adc
sahf
jmp
push
sbb
testb
jecxz
or
test
push
inc
fmuls
outsl
xlat
jno
xchg
pop
in
dec
push
fsubp
in
cmp
pop
jecxz
xchg
fsubp
mov
mov
pop
jecxz
test
jp
insl
xor
test
add
lock
shll
jno
or
or
xchg
and
fdivs
test
mov
test
adc
pusha
cmp
ja
xor
shlb
dec
adc
xlat
jmp
movsb
inc
hlt
into
xor
xchg
push
nop
pop
cmp
or
cmp
mov
mov
mov
int3
sbb
or
out
xlat
sarl
mov
idiv
js
dec
add
inc
cmp
mov
or
jp
sub
cmp
es
dec
mov
imul
arpl
inc
in
xchg
ss
jne
mov
cmp
aam
lods
ss
xor
add
xchg
int3
loopne
inc
mov
add
push
inc
std
jle
mov
jmp
push
add
inc
je
rolb
out
stos
pop
xchg
sbb
lea
icebp
inc
std
inc
jle
cmp
je
mov
lock
mov
test
sub
icebp
dec
cmp
jne
adc
jo
fstpt
lahf
sbb
jmp
ret
sarl
push
dec
xorl
jmp
not
mov
xchg
fmull
lock
inc
dec
in
hlt
sbb
or
and
je
dec
or
out
mov
js
cmp
and
inc
mov
and
xor
or
mov
daa
and
adc
call
stc
mov
cmp
jae
lea
jmp
cmpl
or
cmp
jbe
mov
add
mov
fmull
enter
sub
popf
bound
scas
or
and
sub
sub
inc
lcall
xor
orl
add
cwtl
jo
xchg
adc
fs
in
in
cmc
sar
lods
inc
add
mov
jae
dec
incb
call
call
dec
inc
nop
out
push
arpl
or
pop
xor
inc
and
mov
arpl
push
and
sbb
xor
jb
xor
pusha
sub
mov
mov
cmp
add
push
add
pushf
pop
xor
cli
cmp
add
pop
add
add
cwtl
fcomps
in
mov
les
pop
inc
or
xor
add
cmpl
in
out
nop
test
push
sub
dec
insl
inc
fcompl
xor
cmp
mov
xor
cmp
sub
dec
cmp
rorb
leave
les
mov
test
push
popa
mov
jnp
mov
xor
lock
test
loopne
call
gs
push
je
jo
xchg
std
add
loopne
cwtl
js
stos
xchg
pop
cmp
sbb
test
pop
loopne
in
ret
test
xchg
je
jbe
sti
and
or
call
lods
mov
mov
or
fstl
mov
rcrb
shll
cmp
shl
shrl
inc
faddl
sbb
lods
cld
or
sbb
data16
xorl
xchg
mov
xor
lock
add
xor
cmp
je
inc
xor
mov
adcb
dec
push
call
test
pop
andl
aad
mov
xchg
cvtps2pd
add
push
test
sti
push
inc
andl
adc
lea
popa
nop
dec
inc
clc
lea
or
pop
rorb
pop
call
push
popf
push
xchg
lock
cmp
es
jge
push
mov
lahf
add
jno
sarl
jbe
jnp
cmp
xor
incb
and
pop
out
cmp
push
sub
xlat
push
les
jns
addr16
dec
dec
dec
clc
jne
mov
push
test
adc
jle
add
aaa
sub
lea
add
sahf
pop
cmp
stos
es
mov
dec
in
xchg
sbb
xchg
mov
hlt
xchg
jb
mov
pop
js
inc
xorb
dec
pusha
dec
arpl
xor
cmp
call
fsubs
addb
pusha
je
push
fxtract
jne
push
js
sbbb
scas
fistl
cld
loopne
fnstenv
mov
cld
lods
push
mov
popa
addb
repz
gs
add
or
add
movsb
lock
cld
clc
pushl
bsr
dec
add
jae
mov
les
orl
data16
or
pusha
mov
cs
rol
xchg
cld
jmp
pop
cmp
push
mov
bound
sbb
iret
je
out
inc
or
adc
cltd
shr
lea
das
adc
xor
mov
and
pusha
xchg
int
lahf
nop
adc
xor
arpl
inc
adc
sbb
ret
inc
cwtl
mov
loop
loopne
scas
lcall
lea
and
cli
dec
arpl
loopne
xor
add
stos
and
mov
inc
mov
mov
cmpl
scas
dec
jnp
shlb
cmp
adc
add
in
sahf
adc
jbe
push
mov
cmp
mov
rorb
js
adc
push
mov
jae
lret
mov
aas
imul
popf
mov
roll
sub
das
push
jmp
pusha
ret
sbb
loopne
cltd
mov
push
pop
and
popf
hlt
xor
sbb
cs
jnp
xchg
or
adc
mov
loopne
add
xchg
in
lods
push
cmpsl
lahf
sbb
pop
pushf
mov
or
cltd
bound
dec
or
cmpb
mov
adc
sub
sub
xlat
push
movzbl
lock
push
lds
aaa
inc
sub
xor
pop
mov
mov
xor
in
mov
daa
loope
cs
aam
das
ljmp
inc
push
pop
add
dec
movsl
push
jns
mov
aad
add
mul
seto
inc
daa
xor
enter
sbb
or
fcomps
or
mov
sub
out
adc
pushaw
pushf
mov
mov
ss
push
push
test
out
pushf
aam
xchg
int3
call
add
mov
mov
scas
dec
popl
inc
movsl
das
cltd
rolb
lret
in
push
xchg
mov
jmp
or
cwtl
cli
jbe
cmpsb
test
pop
or
movl
add
cmpsl
les
out
fwait
mov
js
pop
sbb
adc
call
test
jae
or
xchg
popf
push
jbe
inc
int
movsl
imul
imul
insl
sar
stos
dec
sbb
pop
or
sbb
mov
mov
mov
lds
fnstenv
sbb
lock
mov
mov
test
xorl
or
push
cmp
clc
outsb
call
test
sarl
cmpb
shr
fidivs
cmp
adc
lock
addb
jl
jmp
mov
add
and
daa
mov
imul
jmp
enter
mov
lock
jo
repz
nop
pop
cmp
lock
xchg
mov
sub
push
subb
or
or
outsl
shlb
inc
xchg
mov
xchg
test
xchg
xchg
or
sbb
fldz
inc
cmp
jae
cmp
and
jnp
or
add
cmp
pusha
idiv
add
and
movl
xor
mov
imul
cmp
scas
jb
loop
sbb
or
es
jb
rol
add
push
mov
je
cmp
add
test
test
jno
loopne
inc
stos
mov
je
je
add
pop
and
sub
ljmp
or
adc
jns
cmpsb
sub
xchg
lret
ja
sahf
mov
xor
push
adc
shlb
daa
in
in
add
adc
pop
xchg
and
add
lods
and
out
add
test
sarl
movsl
rolb
inc
sbb
cmp
xchg
sbb
xor
or
jne
lods
lret
cmpsl
jp
push
repnz
in
sbb
daa
and
jo
es
fisubl
loopne
mov
sbb
mov
cmp
add
movsb
jecxz
insb
test
jge
push
xor
rcl
test
sbb
jp
xor
or
cmp
iret
pop
mov
adc
jne
in
in
jl
cmp
push
jmp
clc
mov
dec
movsb
or
lahf
cmpsl
call
mov
inc
orps
popa
push
push
xchg
call
shr
popl
or
ja
clc
add
clc
jno
sub
rcll
or
and
icebp
or
dec
and
add
jne
sbb
repz
sub
or
sbbl
sti
mov
aad
aas
or
xchg
cmp
xor
lea
call
xchg
mov
movl
mov
ret
push
loop
or
nop
test
pop
pop
xchg
divb
dec
faddl
fdivr
mov
loope
in
arpl
mov
cltd
loop
add
adc
lods
cmp
pop
mov
test
xchg
push
test
sub
jo
rorl
cmpsb
cmpsl
jl
sub
cmp
sbb
push
int3
in
test
adc
mov
jmp
mov
aam
ret
insl
popf
xor
push
lock
mov
add
push
and
dec
lds
andb
not
sar
add
lret
jb
sbb
addr16
int3
mov
dec
add
fisubrs
sbb
das
das
mov
sti
inc
loopne
in
jmp
mov
roll
add
movsl
or
clc
xor
mov
xor
sub
rolb
ja
push
pop
ds
pusha
addr16
adc
push
lods
outsb
pop
lea
lods
mov
sbb
das
push
ret
pop
jae
jge
jbe
mov
mov
add
push
pxor
inc
cmpsb
and
imul
cmp
pop
or
xchg
mov
cmovg
jmp
mov
out
iret
inc
inc
dec
int3
cmp
jae
sub
loopne
inc
gs
adc
or
lahf
int
mov
ljmp
push
enter
push
cmc
xchg
shlb
fisttpl
cmc
push
inc
mov
aad
cmp
fstpt
add
cmpsb
js
dec
dec
gs
js
idiv
inc
inc
mov
xor
aam
pop
mov
or
sti
mov
pop
jmp
lcall
mov
fisubl
adc
push
stos
xchg
jle
je
loopne
sub
cltd
jg
gs
insb
int3
add
in
mov
mov
filds
rolb
test
ja
or
cld
adc
mov
pop
insl
enter
hlt
pop
sub
lea
sub
add
pop
add
add
out
lea
mov
pop
or
sbb
lea
jne
roll
dec
mov
je
hlt
sbb
mov
push
sub
cmp
test
inc
cmpl
adc
icebp
xchg
add
imul
or
andl
jle
cmp
xchg
or
mov
add
insb
rcll
xor
icebp
ret
fisttpll
rorb
dec
adcb
add
jbe
or
cmp
add
mov
xor
arpl
sti
add
lret
stos
jle
out
inc
jb
push
loope
decl
hlt
fcoml
mov
push
dec
push
sbb
ret
xor
push
push
out
movb
and
xchg
aas
bnd
mov
fstl
lcall
or
add
jb
sbb
icebp
mov
jo
push
sub
sbb
xchg
bound
jge
xor
aas
xor
push
dec
enter
xchg
or
or
sbb
and
mov
inc
cmpsl
cmc
imul
dec
rcrl
push
rolb
pop
aad
add
add
hlt
push
or
pop
jecxz
clc
mov
stos
and
std
push
gs
movb
add
add
pop
dec
fcom
sub
cmpb
add
and
jne
ror
int
popf
dec
fstps
add
push
jmp
jle
test
sub
xor
mov
test
call
mov
mov
or
inc
sbb
jl
pop
mov
inc
lret
xchg
inc
popa
sbb
push
mov
addb
lods
jge
pop
scas
sbb
adc
pop
mov
mov
or
add
test
or
pushf
and
mov
arpl
jae
mov
xor
or
sub
sbb
xchg
push
adc
cld
rorb
add
insl
xor
clc
pusha
sbb
roll
jb
adc
ja
cmpb
push
or
outsb
push
or
or
xor
sbb
add
add
dec
inc
mov
pop
xchg
lret
inc
roll
fstpt
cmpb
fadds
cli
cmovne
data16
cmp
cmp
sub
push
inc
or
adc
std
lea
es
and
aam
push
fistps
add
movb
aaa
jge
mov
cli
adc
shlb
lea
cli
ja
cmpb
test
mov
aas
ret
push
adc
movsl
and
repnz
les
nop
sub
mulb
in
mov
pop
or
cld
xorl
and
push
xchg
fsubrl
mov
imul
pop
add
stos
int3
scas
push
je
icebp
data16
test
pop
in
shrb
insb
jno
das
pop
push
fildll
xor
push
into
loopne
dec
roll
sbb
mov
and
cmp
mov
or
movsb
or
pushf
dec
add
or
cmp
mov
jl
imul
int3
outsb
inc
or
add
rcrb
fiadds
xchg
pop
adc
sub
sbb
aam
incb
mov
mov
push
mov
push
mov
out
or
les
inc
sbb
lea
ljmp
inc
shlb
push
push
rolb
js
cmpsl
cltd
in
ret
cmpsl
inc
mov
jmp
dec
fadds
lock
xchg
insb
or
xchg
sar
inc
lock
dec
aam
ficomps
cmpsb
repz
dec
inc
and
or
or
mov
lahf
out
mov
or
mov
or
xor
mov
mov
push
add
hlt
jge,pn
out
jbe
aas
xor
push
jg
or
cwtl
or
stc
xor
or
subl
cmp
jne
and
pop
aam
adc
inc
in
aam
js
and
lret
push
push
xorb
inc
cmp
cld
dec
xor
hlt
jle
arpl
sub
cmpsl
xorb
xor
jns
and
mov
push
jl
xchg
sub
aam
jbe
dec
mov
inc
pop
sbb
mov
sub
add
into
push
dec
enter
sbb
sarb
les
mov
addl
pop
dec
pop
lods
in
push
cmc
lret
ror
movb
sbb
mov
popf
pop
cmpsb
cmp
movsb
add
xchg
inc
fiaddl
mov
or
decb
loope
inc
mov
or
cmp
lahf
cmp
or
test
call
scas
cmp
sbb
adc
push
cs
adc
push
mov
push
or
add
movsl
loopne
ficoms
test
add
jns
mov
aas
pop
outsl
movsl
hlt
add
push
and
insb
nop
out
and
push
jns
es
loope
ds
xor
inc
pushf
dec
pop
pop
and
sbb
out
imul
push
mov
pop
mov
and
scas
and
mov
xchg
inc
ret
mov
inc
mov
mov
ja
fisubrl
mov
or
add
jl
sbb
cli
test
pushf
cwtl
dec
les
mov
xor
pop
ret
xor
push
push
rcrb
std
pop
stc
xor
jge
add
mov
add
pop
pop
sub
mov
pop
rolb
cmpsb
fst
sub
jg
aad
mov
and
cmp
jns
mov
int
das
fninit
outsb
mov
fsubr
pop
push
js
sub
ja
fsubrl
pushl
push
add
dec
in
pop
jmp
or
dec
repnz
push
xor
sub
shl
fidivs
adc
mov
push
into
push
push
inc
js
pop
push
push
adc
jmp
push
aad
lock
mov
hlt
hlt
call
cmp
or
push
mov
es
fiaddl
and
loopne
bound
dec
add
jne
adcb
jns
cs
xor
lock
mov
lret
movsl
call
and
lahf
lods
add
and
aaa
es
les
lock
add
loop
mov
mov
jp
pop
xchg
add
movups
mov
es
xor
push
sub
xor
repnz
icebp
adc
rcrb
pop
adc
xchg
jl
test
mov
xchg
cmp
and
lret
cmpb
push
iret
cltd
or
into
or
push
push
imul
daa
pop
add
out
rorl
and
aam
cmpsb
cld
call
sbb
mov
jmp
or
jl
je
roll
jbe
arpl
bound
jo
xchg
sbb
inc
jns
bound
inc
inc
and
inc
dec
leave
add
xchg
ljmp
mov
sub
jo
je
fnstenv
dec
xor
in
std
mov
ja
adc
movl
mov
call
mov
rolb
clc
sarl
lock
testb
test
dec
add
clc
mov
adc
adc
repz
movsb
or
pusha
push
or
sbb
decl
xor
mov
sbb
or
andb
pop
adc
xorl
enter
sbb
push
test
fdivrs
push
xchg
addl
add
test
push
ret
pop
push
mov
sub
pop
mov
and
jle
sbb
mov
push
mov
add
xchg
insb
push
fs
push
fmuls
push
daa
ficoml
fdivrs
push
jns
or
push
xchg
test
rorb
imul
add
xlat
rolb
movsl
xchg
inc
cmp
enter
insl
jecxz
js
gs
imul
enter
and
lea
ds
cs
xchg
xchg
sbbb
inc
push
popa
adc
mov
jo
xchg
mov
movsl
adc
adc
ja
sbb
addr16
je
add
test
cmp
push
xorl
inc
push
jae
sarb
sbb
push
sbb
lock
xor
mov
add
add
ret
or
cs
ret
push
cmp
adc
push
loop
lods
or
nop
es
sub
pop
add
lea
mov
into
test
jno
push
inc
ljmp
rcrb
push
xor
xchg
mov
js
stos
pop
je
sbbb
movsb
pop
sbb
sbbb
test
popa
jnp
xchg
rcl
test
or
mov
data16
es
adc
mov
sbb
pop
call
cmp
jl
cmp
sub
inc
test
jl
aaa
in
push
dec
mov
lods
mov
fs
add
inc
or
daa
add
pop
inc
adc
and
add
xchg
or
mov
mov
xlat
pop
outsl
adc
xor
es
pop
dec
jle
adc
cmp
adc
or
jno
pop
idivl
inc
inc
push
xchg
pop
push
dec
or
mov
jmp
or
rorb
lea
cmp
cmp
fidivl
sbb
loopne
or
or
push
in
xchg
or
in
cmpsl
fxam
or
into
pushw
jnp
cmpl
scas
out
test
aas
jne
aaa
jno
add
and
cmp
push
sbb
outsl
push
mul
pop
fistl
xchg
ficoms
mov
aam
lds
bound
mov
inc
rolb
fsubr
mov
imul
cmp
neg
or
lock
mov
into
leave
add
fs
pop
xor
mov
sbb
test
mov
lock
aad
test
adc
in
fmuls
xor
outsb
ret
jge
into
je
nop
cmp
pop
or
mov
mov
push
and
in
pop
nop
in
jne
push
push
push
dec
stos
mov
loopne
sbb
test
mov
cmp
fimuls
das
aad
and
popf
jae
movsb
dec
aam
loope
and
rolb
dec
in
mov
jl
repz
mov
inc
dec
dec
add
sbb
dec
lock
enter
add
cmp
jb
mov
cltd
and
cli
xor
leave
lods
mov
dec
and
rol
push
cmp
rclb
ljmp
add
ja
xor
cmp
lods
js
int
inc
add
rolb
mov
pop
add
lods
and
mov
mov
push
mov
pusha
negb
scas
xor
mov
jmp
xor
mov
aad
add
add
jmp
inc
jle
pop
mov
pop
ret
mov
stos
mov
ja
nop
push
jg
push
loopne
pusha
push
aam
adc
add
test
mov
xor
in
mov
dec
ret
inc
repz
sub
sbb
int
and
add
or
xchg
cmp
testl
or
xchg
lea
jno
mov
add
lahf
jno
jae
test
pop
push
repz
jne
das
push
fdivs
sti
arpl
sub
divl
cmp
test
push
mov
loop
gs
jo
push
aaa
or
and
inc
and
test
mov
push
or
mov
fdivrs
fsubl
push
test
dec
adc
jae
js
aas
aaa
and
or
popf
push
push
jbe
mov
js
ret
lret
mov
add
stos
add
ret
in
and
mov
imull
ja
sub
cmpsl
or
mov
xchg
cmp
mov
leave
mov
push
add
and
pop
mov
arpl
les
push
jmp
rcrb
jns
jnp
cld
add
sahf
dec
iret
jbe
jb
fdivs
out
mov
xchg
rorl
push
xchg
or
test
pop
sbb
jb
sub
pop
dec
xchg
jb
add
mov
setle
inc
inc
mov
fsub
andb
int3
aas
fldl
fcompl
ja
jno
and
in
adc
sarl
pop
or
inc
inc
outsb
imull
sbb
adc
mov
loopne
push
dec
pop
push
adc
loop
and
daa
test
adc
pop
jbe
jne
push
insb
mov
fcompl
les
dec
sub
ficomps
cs
stc
ret
cmp
in
imul
vsqrtps
mov
jb
cwtl
mov
jmp
nop
xchg
xor
sahf
in
pop
aam
xchg
arpl
test
pop
xor
push
mov
push
or
aad
adc
dec
in
jb
add
add
xchg
xchg
lret
and
sub
push
dec
sub
xor
xor
push
cmp
lret
movsb
or
inc
sub
xchg
xchg
or
inc
push
dec
push
pop
dec
testl
pop
adc
add
les
mov
movsl
pop
int3
sbb
xchg
dec
rcr
mov
dec
mov
or
sahf
fsubrs
sarb
dec
dec
aam
push
movl
loop
inc
pusha
add
pop
mov
lret
pop
sbb
cs
stos
push
add
cmp
lock
sbbl
incb
sbb
clc
lea
into
subl
and
and
or
enter
xor
adc
adcb
jnp
fs
push
cmp
dec
inc
inc
push
cmp
nop
cmp
xor
cmp
nop
inc
sub
and
nop
inc
push
sbb
mov
push
cmp
or
xchg
pop
js
aad
clc
add
call
subb
popl
mov
push
jecxz,pt
mov
fnstsw
dec
loope
adc
orl
push
ljmp
movsb
pop
or
xchg
sub
xchg
sub
out
lea
push
add
or
xchg
mov
pop
push
test
xchg
subb
sub
ret
loopne
andl
pushf
push
movsb
pop
divb
push
and
dec
or
imul
sarb
push
mov
cmp
inc
imul
pop
xor
jno
pop
pop
inc
mov
pop
sbb
es
and
sbb
cmp
ja
or
xchg
push
pushl
xchg
ret
out
mov
push
push
add
add
sbb
scas
jge
add
dec
and
inc
or
jmp
lea
cs
dec
insl
adc
pushf
add
jo
fbstp
loop
sub
add
ljmp
das
arpl
in
mov
push
subl
or
add
xor
push
inc
add
call
in
xchg
cwtl
push
rolb
xchg
lea
movsb
sub
sub
mov
jo
nop
dec
mov
adc
mov
sub
jo
mov
lock
lret
pusha
cwtl
fwait
and
push
or
sbb
sub
cs
xchg
clc
cltd
dec
out
push
shlb
add
dec
cmp
orb
pop
test
fisubrl
ss
pop
loopw
add
add
lods
or
fbld
pusha
lock
mov
mull
loopne
push
mov
loopne
clc
lret
sub
pop
adc
int3
push
xor
or
or
gs
pop
mov
xor
pop
addb
mov
sub
mov
push
xor
in
adc
dec
aam
mov
insl
push
inc
jnp
aaa
je
sub
xchg
test
mov
push
js
and
adc
mov
loop
dec
lret
xor
cltd
mov
mov
insb
or
xchg
jo
mov
push
sti
push
pop
pusha
icebp
inc
cmp
and
pusha
mov
fwait
jp
cwtl
outsb
clc
inc
fwait
test
jne
pop
jmp
iret
rclb
ret
cmp
dec
push
es
adc
mov
shl
add
sbb
idivl
hlt
outsl
pop
jne
cmp
jae
push
imul
jmp
mov
add
xor
push
stos
repz
sbbl
pop
ret
pop
xchg
mov
loopne
rcrb
dec
push
push
sbb
inc
call
testb
dec
sbb
mov
cmp
or
aam
push
ret
jns
loopne
add
dec
mov
inc
arpl
ja
add
flds
adc
inc
pop
pop
pop
inc
push
sub
and
mov
or
and
in
sub
sbb
out
fnstcw
jmp
adc
and
mov
mov
pushf
test
cli
inc
or
mov
or
cmc
push
add
imul
cmp
xor
mov
call
lea
pop
or
insb
fcomi
ffree
mov
and
push
pop
shrb
add
add
jmp
decb
cli
sub
mov
lea
ja
outsl
mov
inc
xchg
out
adc
pop
lock
clc
xor
out
adc
es
add
lea
jmp
insl
xor
mov
xchg
mov
mov
mov
loope
out
pop
xor
sub
jne
ja
pop
lcall
pusha
jl
mov
or
push
addl
push
push
mov
shrb
add
test
ret
or
add
imul
mov
fsubrl
hlt
icebp
push
stos
xor
mov
push
scas
rcr
shrl
adc
pop
mov
mov
push
sbb
les
push
inc
pop
mov
mov
or
cmp
loope
ret
and
mov
hlt
cmpxchg
stc
xchg
cmpb
xchg
add
lcall
xchg
xor
jne
push
rorb
arpl
xchg
das
test
mov
xchg
add
xor
ja
pavgb
aam
inc
push
jae
xor
adc
pop
jmp
xchg
xchg
aad
and
sub
movd
jmp
mov
and
pop
or
sti
js,pt
and
dec
test
adc
inc
dec
push
mov
mov
stc
or
or
pusha
sbb
xor
sahf
jns
movsl
mov
dec
dec
pop
inc
and
mov
xchg
add
pusha
add
cwtl
sbb
cmpsb
lcall
xor
dec
or
xchg
xor
adc
pop
es
push
push
popf
jno
ret
pop
orl
pop
xchg
and
cmp
js
in
loopne
outsb
push
jp
mov
nop
nop
sub
fwait
and
movsb
cmc
xor
and
inc
mov
and
jg
lret
xor
dec
pusha
add
repz
mov
jle
mov
orl
scas
cmpl
leave
inc
add
scas
rolb
push
add
push
lds
and
mov
clc
inc
popa
inc
test
lock
mov
adc
inc
icebp
das
test
bound
inc
leave
add
cmc
mov
jl
mov
dec
cmove
bound
and
pop
aaa
mov
jae
jnp
shlb
or
inc
xchg
jo
aad
or
popa
loope
ud0
movsl
xlat
and
inc
fisttpl
cmp
mov
out
and
and
push
pop
pusha
and
or
push
cmp
xlat
lret
pop
xchg
loopne
xchg
lock
sbb
test
sbb
lock
sbb
std
orl
ja
idiv
mov
out
add
and
das
or
push
ds
mov
add
insb
xor
insl
adc
arpl
pop
enter
inc
out
mov
add
shrb
and
cld
pop
test
add
iret
inc
mov
mov
js
jae
out
sub
lods
add
jbe
xorb
mov
cmp
nop
arpl
jae
jmp
xorl
das
sbb
push
and
lods
insl
addl
or
or
shrb
push
inc
repnz
mov
nop
add
pushf
dec
push
sbb
pop
jl
push
mov
in
sbb
or
call
sbb
stc
mov
jnp
lret
dec
repz
jl
adc
icebp
fs
bound
jb
adc
jg
movsb
sub
sub
sub
dec
add
mov
cmpl
mov
push
push
adc
jbe
xchg
add
sub
aaa
push
movsl
outsb
addr16
mov
add
insb
rorb
mov
lahf
icebp
xor
push
mov
mov
fs
popf
arpl
scas
int
adc
push
adc
enter
in
pop
sbb
cmp
mov
enter
dec
imul
jbe
mov
fisubs
sub
in
mov
inc
mov
aad
add
and
mov
scas
sbb
adc
jmp
lock
cwtl
aam
sahf
popf
sub
xchg
incb
pop
or
push
movsb
loopne
mov
sahf
test
and
rcr
push
inc
pop
fsts
push
jo
rolb
loop
imulb
popa
inc
cmp
mov
add
lea
push
pop
loopne
sbb
das
in
push
inc
inc
push
mov
cld
add
add
jle
sbb
dec
shl
adc
mov
push
in
mov
add
push
loop
addr16
shl
adc
mov
pop
pop
sahf
shlb
sar
loope
jg
pop
sbb
or
sub
lea
fcmovb
mov
cmp
adc
incl
mov
add
add
jecxz
decl
xor
dec
push
je
dec
jne
rorl
xor
adc
xor
adc
sbb
push
push
dec
aaa
inc
lahf
mov
xor
lret
sub
inc
xlat
cmc
lock
mull
sbbb
push
jmp
cmp
add
shrb
dec
lcall
inc
sbb
xor
jecxz
dec
or
dec
mov
std
rcrl
cmp
push
outsl
mov
sub
jo
rorb
add
mov
xchg
lahf
mov
mov
xor
adc
xor
jge
inc
mov
sub
push
stos
xorb
mov
dec
sub
rcr
jp
mov
jbe
xor
push
dec
mov
sub
xor
ffree
inc
pop
or
inc
or
inc
mov
mov
xor
or
std
dec
mov
add
inc
mov
push
sbb
or
sub
pop
cltd
dec
popa
mov
push
mov
add
inc
mov
movl
sub
cli
sub
loop
sub
xor
xchg
sbb
adc
xorb
jb
pop
into
addl
sub
or
push
stos
or
shl
popf
mov
pop
aaa
inc
sub
sti
je
mov
xor
gs
testl
mov
mov
inc
pop
and
test
in
fsubr
or
cld
push
jno
test
mov
jno
or
add
and
sti
dec
xchg
or
push
inc
mov
dec
shll
xor
cmp
push
pushf
push
pop
rcll
pop
add
test
gs
pop
fs
neg
push
xor
sub
js
xchg
or
jecxz
cmp
test
jno
or
mov
fwait
and
and
xchg
xchg
sbb
push
sub
inc
movb
lcall
nop
or
mov
dec
adc
or
lods
js
imul
dec
jp
push
decb
xlat
lea
mov
jmp
cmp
jae
add
xor
pusha
and
inc
jl
add
loop
xchg
and
call
add
lret
mov
cmp
add
pop
sub
sti
sbb
pop
adc
add
fs
adc
xchg
cltd
xor
inc
xor
orb
test
sbb
cmp
pop
pop
and
adc
sbb
xchg
loope
icebp
cmp
dec
inc
cltd
inc
inc
dec
push
push
dec
sbb
xor
dec
bound
aas
mov
or
cli
fwait
inc
xchg
mov
roll
js
inc
xchg
xor
out
sbb
mov
movsb
jne
lea
jmp
dec
pop
jnp
addl
xorb
mov
lods
jge
cwtl
clc
cmpsl
rcrb
mov
or
jne
es
jbe
sbb
xchg
mov
int3
dec
xor
addl
mov
mov
mov
cmp
roll
sbb
xor
cmpsl
or
sbb
xchg
mov
shrl
inc
loopne
xor
nop
add
sbb
inc
sbb
or
je
pop
faddl
aas
or
jne
sub
stos
or
add
mov
sub
shlb
pop
fidivs
mov
and
adc
jg
outsb
inc
stc
lock
fadd
sbb
in
aas
or
rclb
cmpsb
pop
jmp
push
cwtl
adc
cmpl
adc
inc
jl
pop
sarl
xchg
jne
mov
push
shlb
jge
pop
xor
add
jle
pop
lods
pop
daa
dec
lock
add
push
call
inc
mov
mov
shlb
lea
xor
cwtl
pop
cwtl
adc
mov
outsb
xor
sbb
rcrb
push
pop
sub
xchg
xchg
enter
pop
sarb
into
xor
mov
dec
mov
and
push
lds
bound
jle
push
test
adc
lea
rcrb
or
or
decb
push
loopne
inc
test
cmpsl
push
pushl
sub
push
lods
test
nop
adc
jp
push
and
les
in
int3
sub
in
and
ja,pn
fdiv
lret
inc
aas
sbb
dec
lds
adc
jbe
inc
test
add
aas
add
fsts
pop
fs
je
jae
or
es
movsb
push
push
sbb
dec
aaa
ficoml
add
sub
movsb
lds
or
pusha
ljmp
xor
call
lock
adc
and
in
sbbl
imul
daa
adc
cmp
test
inc
inc
add
pushf
cmp
movsb
mov
push
insb
push
mov
fists
lock
lods
inc
fmuls
addb
rorb
push
dec
and
push
movsl
loope
lods
dec
std
cmp
sahf
or
popa
int
push
adc
or
mov
or
out
jb
jb
inc
mov
pop
mov
cmp
mov
push
test
sbb
adc
adc
rcr
rcr
repz
mov
lock
push
push
cltd
mov
enter
sbb
fildl
fsubrs
cmp
mov
mov
inc
or
lods
es
mov
stc
push
mov
orb
sti
lea
sbb
mov
sbb
sub
rorl
inc
push
or
jns
add
int
mov
sbb
lcall
leave
dec
sbb
sbb
sbb
cltd
mov
stc
jnp
insb
fildl
sarl
sahf
dec
push
test
sbb
loope
inc
add
add
sub
sub
sub
lea
pop
stc
fwait
mov
and
lock
add
and
jae
mov
push
mov
cmp
mov
les
mov
pop
jns
loopne
mov
sbb
adc
pusha
pop
cli
push
push
cvtps2pd
lea
fisttps
inc
iret
inc
jecxz
push
push
orl
les
in
add
daa
inc
jae
test
stc
dec
in
push
push
or
sbb
push
js
cmpb
and
cmpl
push
ja,pn
adc
sub
or
xchg
ds
iret
mov
mov
push
inc
xchg
negb
lds
add
and
leave
aad
test
cs
sub
or
xor
mov
lret
call
push
cltd
sarb
cmp
xor
scas
orb
add
ret
mov
sbb
arpl
or
roll
mov
inc
cli
addr16
sub
popa
ret
mov
shll
rclb
xchg
mov
xor
xchg
dec
sub
xor
sbb
fmuls
or
cmp
cmp
add
xchg
lret
or
add
inc
sbb
adc
xchg
arpl
or
pop
dec
xchg
dec
sub
icebp
es
xchg
sbb
add
or
inc
es
sbb
icebp
sahf
or
xchg
fwait
mov
inc
xor
pop
add
jle
jns
imul
fwait
aaa
inc
addl
xor
push
push
sub
xchg
stos
andb
aaa
mov
push
iret
mov
lods
andb
mov
gs
jns
pop
mov
and
mov
push
xor
xlat
and
and
pusha
int
clc
stos
sub
lea
jno
pop
xlat
xchg
das
aas
jne
mov
lcall
add
ja
add
xor
sbb
sbb
repz
mov
and
adc
ja
out
inc
dec
bound
jne
or
mov
add
or
add
insb
or
mov
add
fimull
push
roll
and
test
jmp
add
jne
and
fstpl
je
lds
add
fwait
xchg
or
adc
sub
sub
add
add
xchg
cmp
and
testb
cmp
sbb
xchg
popa
movsb
cmp
jbe
cltd
movsb
mov
sub
cmp
dec
push
fists
inc
out
inc
pop
cmp
xchg
outsb
or
jo
jmp
jp
sub
dec
and
xor
popf
into
adc
mov
pop
std
push
mov
push
stos
adc
xlat
or
sbb
inc
ss
popa
in
adcb
popa
and
sub
xchg
adc
mov
std
leave
shrb
xchg
inc
push
push
inc
mov
inc
sub
push
mov
addr16
or
or
mov
inc
aaa
mov
jmp
mov
inc
lret
dec
shll
and
and
sub
push
and
push
repnz
cmp
cmpsl
jnp
into
xchg
rclb
dec
mov
sub
mov
mov
adc
rolb
adc
pusha
inc
outsb
outsb
dec
iret
lock
inc
loope
inc
sahf
xchg
nop
mov
daa
xchg
dec
mov
push
cwtl
inc
push
jns
insl
enter
jb
and
mov
sbb
inc
aam
cwtl
iret
jae
sbb
xor
xor
mov
add
repnz
test
out
xchg
test
insb
pushl
or
testl
xchg
inc
push
stc
adc
repz
int3
pop
mov
aam
adc
repz
add
or
xor
xchg
jl
sbb
xor
imul
jge
push
cwtl
nop
adcb
scas
dec
sbb
cmp
mov
popa
mov
and
add
mov
jo
mov
lock
mov
add
mov
ljmp
or
cli
push
pop
sbb
inc
sbb
push
shrl
pop
jmp
add
test
in
adc
pusha
and
add
xchg
and
and
jmp
inc
push
rcl
ljmp
add
push
dec
andl
xchg
cmp
stc
mov
sbb
es
xor
jne
or
jno
in
cmp
mov
iret
js
inc
ljmp
and
push
stos
les
push
xor
imul
push
and
es
inc
push
nop
xchg
fldl
mov
or
jae
sbb
xchg
sbb
or
mov
jecxz
add
mov
dec
xor
mov
dec
mov
dec
xchg
sub
sub
enter
xlat
push
push
sub
fwait
pusha
push
sbb
sbb
push
xchg
icebp
and
loopne
sub
mov
repnz
or
push
imul
out
inc
add
lods
cmp
dec
fdivs
or
pop
xchg
out
xor
shll
adc
das
fs
int3
push
ljmp
into
out
push
dec
xor
push
sub
lea
movsl
xchg
data16
clc
int
sub
sub
jbe
sub
push
or
sbb
dec
std
push
push
cmc
fcoml
fistpl
lock
jb
je
xor
xchg
push
xor
sahf
sbb
bswap
gs
leave
push
outsl
sbb
nop
sbb
xor
enter
movsl
stos
punpckhbw
mov
roll
mov
int
icebp
push
sahf
popl
shlb
xchg
mov
adc
mov
mov
jmp
dec
or
popf
mov
repz
out
push
lahf
fstl
sbb
nop
mull
scas
fmul
or
adc
dec
jo
test
add
pop
test
enter
add
fs
jb
sub
nop
and
and
ds
mov
push
in
int3
das
loop
test
test
and
adc
mov
jb
sbb
and
add
nop
sbb
filds
xchg
fs
jg
lcall
xor
inc
loop
dec
popa
inc
notl
jl
fwait
mov
pushf
or
fsubs
inc
xlat
dec
and
and
jbe
fwait
ds
stos
adc
push
mov
mov
xor
sub
and
mov
test
mov
pusha
cmpb
das
sbb
dec
jns
movsb
push
cs
push
aad
in
shll
sub
inc
aas
adcb
popa
jge
push
dec
jecxz
bound
out
push
cmp
loope
shl
mov
xor
jmp
push
pop
add
xchg
nop
test
dec
jne
sbbl
add
push
xor
jae
mov
push
jo
xor
sub
imul
scas
inc
jns,pn
and
in
mov
test
das
xchg
cmpsb
mov
test
shlb
xchg
push
cmpsb
dec
out
xor
cwtl
inc
push
adc
add
lea
pusha
aam
ja
mov
shrb
mov
loopne
rclb
daa
jno
ret
bnd
adc
aaa
adc
fucomip
cmc
repnz
push
or
nop
shrl
dec
add
push
xchg
sub
mov
sub
jle
ljmp
dec
std
sbb
loop
cmp
ret
jne
and
inc
cmp
pop
jae
in
lock
add
cmp
add
dec
in
clc
pop
push
add
push
xchg
lahf
aaa
pushl
call
in
sub
dec
xor
mov
lret
jl
inc
and
les
xlat
aam
sbb
jmp
push
xchg
fwait
cltd
in
add
sti
orl
push
je
adc
push
push
jmp
xor
filds
xchg
dec
lds
adc
fisttpl
dec
repnz
or
pop
mov
insl
addr16
sbb
add
or
dec
push
cmp
sbb
or
inc
fstps
pop
pop
stos
inc
dec
or
ds
in
ja
adc
push
dec
faddl
push
loope
fadds
xor
pushl
lock
cmp
ss
pushl
add
jnp
pop
rcrb
fld
adc
outsl
add
add
and
xor
push
notl
jns,pn
xchg
fs
sbb
pop
mov
xchg
cmp
xor
notl
and
dec
sbb
xor
and
dec
and
shr
rcrl
es
mov
cmp
dec
push
jns
loopne
sbb
lcall
push
nop
call
lods
pop
ja
sbb
subl
sbb
jb
jl
push
sbb
xchg
aam
cmp
bnd
addl
subl
pop
pop
test
push
mov
les
mov
jmp
xorl
mov
xchg
cwtl
fnsave
pop
inc
sub
insb
out
sub
sbb
push
sbb
test
cmp
inc
pop
mov
adc
xor
jns
dec
mov
jmp
add
jecxz
fidivl
in
rcll
mov
pushf
push
and
lock
add
sar
jne
gs
roll
lret
pop
adcl
push
sbb
xorb
les
sbb
mov
sbbl
xor
mov
xor
mov
xor
loope
sbb
jbe
mov
ss
pop
fs
xchg
xchg
sub
aaa
mov
cmp
std
cmp
sub
inc
sbb
push
xchg
xchg
cmp
shll
outsl
pop
jo
insl
fdivrs
push
xor
lods
movsl
lret
mov
ret
add
das
lock
jae
push
loopne
cmpsb
aaa
sub
and
mov
mov
sbb
rcl
sbb
mov
subl
mov
cmp
lock
imul
push
in
and
adc
mov
andl
pop
bnd
inc
dec
push
push
adc
cmp
push
js
fwait
mov
adc
aaa
dec
xor
enter
and
mov
mov
hlt
fsts
outsb
outsl
lock
subl
imul
inc
adc
outsl
push
sub
push
sbb
ffree
aad
push
xor
lds
leave
les
aaa
lods
push
xchg
and
mov
shrb
insl
daa
xor
adc
jb
sub
mov
inc
sub
xor
adc
jae
sub
leave
and
xor
fmul
sub
xor
mov
jno
int3
dec
xor
shlb
inc
xor
inc
test
xchg
lret
in
dec
andl
xlat
cmp
mov
aad
adc
pop
inc
push
movsb
cmp
sub
lret
pmulhuw
xor
or
fisubrl
inc
xor
push
call
xor
rcrl
dec
pop
mov
inc
icebp
imul
or
es
addr16
push
bound
lods
xchg
mov
lods
push
jo
pop
call
or
in
push
hlt
test
sub
nop
or
inc
lods
rol
or
pop
sub
mov
and
push
or
cmp
pop
sbb
pop
stos
faddp
and
ret
sbb
hlt
jle
ds
xlat
ljmp
aaa
aam
inc
ds
sti
mov
jb
adc
push
adc
pop
pop
pop
or
pusha
pop
stos
ret
stos
ja
outsb
roll
test
lea
fwait
and
push
add
bound
test
push
rorl
dec
pop
int3
xchg
dec
nop
mov
jmp
sbb
xor
std
icebp
pop
and
xor
fsubrl
aad
jg
in
pop
adc
scas
jo
enter
cmp
int3
jnp
sbb
mov
popa
dec
shr
dec
es
xor
cld
sbb
pusha
push
xchg
lods
enter
mov
movsb
lret
nop
in
xchg
inc
xchg
sub
cld
push
inc
in
pop
out
add
insl
insb
sbb
jp
cmp
jae
leave
lret
das
or
mov
loope
test
mov
jge
cmpsb
das
mov
jmp
test
jl
cmp
and
and
mov
pop
dec
xchg
adc
sub
cmpsb
dec
push
lods
jae
stc
adc
pushf
iret
adc
ret
lea
test
hlt
test
daa
jae
add
or
add
movsb
shlb
or
rclb
fidivl
xchg
shlb
add
or
lock
pushf
orb
sbb
dec
inc
push
pop
push
push
cmp
jmp
adc
add
mov
and
inc
je
repnz
pop
cmp
inc
ss
pusha
sub
mov
jle
pop
pop
dec
inc
add
push
pop
adcb
fimuls
fisttpl
pusha
dec
ret
rorl
cmp
xor
aam
icebp
and
aam
cmp
push
stos
movsb
mov
call
mov
in
je
and
cmp
or
inc
add
push
mov
adc
and
xor
dec
stc
test
cmc
or
out
das
mov
cmp
add
or
push
xor
int
ss
fsubrs
mov
or
lods
jae
xchg
xchg
pop
icebp
rcrb
mov
mov
jne
lods
adc
stos
lock
xor
xor
mov
mov
pop
stos
iret
add
add
imul
sbb
bound
sarb
mov
test
mov
jge
xor
cmp
mov
ja
sub
dec
es
je
jne
orl
call
lock
jo
or
fdivrl
xor
xor
push
movsb
xchg
orl
adc
das
cmp
cmpsl
cmc
add
mov
testb
movl
mov
cmpsl
cmp
jae
add
lock
nop
push
insl
mov
inc
add
mov
or
push
sbb
pop
cmc
fwait
push
cltd
cmc
pop
sub
insb
jo
in
mov
pop
xchg
dec
sbb
fstps
mov
lods
mov
inc
inc
add
and
and
int3
fcmovb
aaa
sub
lock
push
adc
inc
enter
jle
ficompl
das
mov
jo
cmp
test
mov
add
xchg
xor
mov
in
les
or
pushf
lret
repz
outsl
inc
insb
inc
cmp
sbb
mov
cmpb
add
sarb
pusha
test
jbe
movl
mov
push
xlat
dec
sarl
mov
dec
insb
sub
push
sbb
xchg
idivl
lea
sub
pop
mov
dec
pop
pop
dec
sahf
or
int3
cmp
lea
add
rcrb
sub
in
shlb
js
hlt
imul
imul
jbe
push
sbb
xchg
sbb
ret
ret
and
cmpsl
test
xor
sub
sub
inc
push
mov
test
cmp
add
testb
add
stos
inc
push
mov
sbb
loopne
hlt
add
mov
mov
sti
or
icebp
cwtl
iret
cwtl
pop
fdivrs
or
mov
jne
test
mov
enter
js
push
mov
xor
je
mov
aas
push
mov
pop
add
les
or
mov
dec
mov
xchg
in
sbb
add
or
adc
inc
add
test
push
sbb
stos
outsl
or
test
xor
inc
les
sbb
adcb
xor
dec
pusha
mov
popa
mov
jecxz
mov
loop
inc
push
sub
lock
cmp
jp
test
sub
outsb
orl
jne
fcomip
pop
mov
imul
and
data16
decl
je
cmp
je
cmp
je
push
inc
cmp
out
fadds
imul
hlt
jne
push
fidivrs
movsl
outsl
mov
pop
mov
mov
je
and
add
mov
push
dec
in
ret
push
ret
xor
or
inc
add
adc
das
dec
add
je
or
pop
mov
push
int3
adc
and
scas
loop
movsl
xor
enter
add
inc
lock
xor
add
insl
dec
imul
xchg
pop
scas
and
loopne
mov
repnz
sub
enter
int3
cwtl
and
jb
and
or
sub
int3
pop
and
jo
pop
inc
jecxz
shlb
mov
movb
xchg
ror
pop
xchg
push
stos
mov
adcb
jbe
and
sar
mov
xor
sbb
dec
fdivrl
dec
adc
rcrb
imul
pop
shrl
call
and
sbb
out
and
notb
test
inc
xchg
repz
and
nop
clc
and
and
ret
and
jns
or
adc
mov
jb
outsl
pop
and
jmp
pop
and
es
stos
test
arpl
js
push
daa
mov
xor
fimull
add
pushl
xchg
dec
shlb
xchg
fbld
mov
rolb
rclb
int3
adc
loopne
or
aas
es
add
dec
and
and
sub
sub
dec
jae
sub
hlt
jb
push
xchg
sub
xor
add
hlt
iret
cmp
aaa
sbb
call
jb
dec
aad
lock
and
and
xor
imul
pop
insb
test
loope
xchg
popa
insl
cmp
jne
jp
repz
pop
inc
inc
addr16
insb
rclb
js
adc
xchg
jge
push
call
sub
mov
adcb
mov
cmp
push
shlb
adc
andl
aas
jg
cltd
daa
pop
jb
dec
mov
xor
mov
sub
mov
jmp
aam
enter
nop
ficoms
pop
xor
les
cmp
je
adc
insb
add
test
adc
adc
loop
or
inc
adc
int
bound
push
mov
add
mov
mov
push
dec
insb
pop
sbb
xlat
sub
adc
jbe
sbb
lea
or
jecxz
les
jge
adc
sub
dec
cwtl
mov
adc
and
push
xor
and
xchg
adc
insb
loopne
adc
mov
or
cmp
fimull
sarb
rolb
lcall
pop
or
nop
sub
add
cmp
mov
mov
mov
cmp
in
xchg
or
push
clc
or
aad
neg
fildl
push
cmp
dec
femms
in
adc
cld
lea
icebp
push
push
mov
add
out
pushf
out
test
bound
sub
mov
bsr
inc
pusha
xchg
mov
fcmovnbe
push
fnstsw
inc
clc
mov
sub
sub
cmp
mov
mov
cmc
clc
push
add
jo
jecxz
sub
cmp
insl
inc
jmp
sbb
push
outsb
and
aam
leave
inc
aad
jne
adc
add
cmp
jne
cmp
xchg
xchg
add
fs
add
add
xchg
test
mov
mov
sub
xchg
add
in
stos
or
fsub
stc
or
in
ljmp
push
rorb
cmp
jle
pushl
dec
lods
mov
aam
movsl
es
lock
push
mov
and
fimuls
xor
mov
and
icebp
push
movsb
pop
pushl
dec
adc
push
lods
bound
cmp
push
sbb
scas
mov
lds
inc
clc
or
add
xor
js
les
and
jle
xor
in
outsb
sbb
inc
aad
adc
jno
jl
push
mov
or
sarl
xchg
mov
jge
inc
jb
cmp
out
mov
adcb
push
inc
jne
ja
mov
pop
fs
or
jnp
insl
pop
mov
push
pushf
jecxz
dec
rcrb
inc
test
iret
mov
adc
adc
inc
cmp
adc
sahf
xor
leave
jnp
or
pop
push
mov
cmp
sub
xor
mov
pop
inc
cmp
mov
jae
or
jmp
xlat
call
cmp
xlat
or
jo
cmpsl
adcb
dec
out
fbstp
and
adc
add
and
mov
push
lcall
mov
mov
add
aad
jmp
fs
ret
inc
push
mov
push
stos
add
pop
rclb
lahf
and
les
dec
cli
cmp
and
and
mov
dec
sbb
push
repz
mov
add
mov
xchg
int3
addl
orb
loopne
scas
nop
shlb
cmp
xor
imulb
fs
jmp
push
add
cmp
popa
dec
and
leave
stos
inc
gs
inc
adc
ja
sbb
fildl
int3
dec
cmp
or
cli
xchg
mov
xchg
pop
movsl
mov
pop
xor
mov
sbb
or
rorb
aas
ss
dec
fadds
sub
ret
add
push
nop
iret
sbbb
int3
cmpsl
in
jo
test
imul
jae
push
test
insb
dec
sub
sbb
mov
xor
aas
stc
adc
mov
mov
add
int3
sbb
add
insl
dec
xor
hlt
sbb
inc
inc
mov
pop
mov
mov
rcr
imul
pop
mov
es
xor
mov
add
bound
loopne
cmp
cmp
aas
mov
xchg
pop
cs
dec
or
lock
stos
and
push
mov
mov
cwtl
fwait
xchg
jp
and
lret
xor
cmp
iret
push
add
add
out
mov
sbb
jne
add
xor
test
mov
das
mov
stc
or
jb
pop
test
cmpl
cmp
mov
fmull
cwtl
js
push
divb
cmp
inc
xor
stos
pushf
and
adc
inc
sbb
cld
sbb
inc
xchg
xor
sbb
clc
ret
pop
jo
push
test
dec
or
and
mov
or
fsub
xor
cmp
push
fldt
sub
inc
push
or
push
pop
addr16
cld
loope
inc
pushf
out
cmp
shlb
jne
jle
adc
xchg
loop
pop
mov
jo
repz
push
mov
test
push
jbe
push
popa
or
ret
lods
mov
mov
repz
loopne
in
daa
les
jbe
mov
repz
cwtl
or
int
add
sbb
mov
pop
sar
xor
add
dec
adc
mov
nop
into
cmp
push
sbb
js
imul
mov
xor
add
sbb
lock
setne
push
mov
mov
push
push
and
sub
test
sbb
add
aas
ficomps
nop
or
mov
push
js
sbb
fs
icebp
add
mov
and
jo
mov
sub
mov
insb
adc
rcll
adc
movsl
cmp
cmp
rolb
jp
aam
cmp
jb
mov
lock
jp
or
pusha
mov
pop
push
push
or
es
lods
mov
inc
dec
call
enter
je
call
bnd
insb
inc
pop
inc
push
sbb
add
add
inc
les
mov
jbe
jne
push
fsubl
mov
jmp
pop
jmp
add
mov
insb
pop
cmp
adc
add
dec
pop
je
enter
cmpsb
push
inc
jmp
stc
push
sbb
adc
pop
addl
or
sbb
dec
les
add
cmp
pop
orb
mov
inc
push
ud2
pop
inc
mov
cmp
lea
js
pop
loop
xchg
enter
add
stos
sub
cmp
jne
aad
lods
dec
mov
roll
rcl
sahf
sbb
shr
dec
sub
sub
xor
and
ss
push
sub
orl
mov
xchg
sbb
jg
inc
push
call
or
out
inc
ds
in
or
pop
inc
mov
or
dec
in
dec
insl
xchg
jge
nop
mov
pop
xchg
scas
sub
or
insl
loopne
push
mov
push
es
and
add
push
or
adc
in
add
dec
push
nop
or
call
sub
clc
mov
cld
les
divl
mov
cld
dec
dec
xor
sti
sbb
fmull
and
xor
idiv
cld
add
xlat
mov
pusha
xchg
pushf
bound
dec
xchg
jb
pop
lods
inc
movsb
nop
xor
or
mov
pusha
inc
inc
push
addb
inc
mov
mov
imul
add
test
fs
mov
cs
mov
xor
les
push
push
push
xchg
mov
add
push
loopne
xor
cmp
mov
enter
xlat
sbb
sbb
mov
out
xor
push
sarb
in
lea
aas
clc
mov
sbb
lcall
jns
popf
arpl
sub
out
outsl
es
sub
pop
inc
imul
jl
sub
pusha
sub
sub
in
mov
xor
sub
adc
pop
sbb
and
inc
push
xor
dec
ret
fs
mov
inc
dec
jle
inc
push
or
dec
or
adc
jp
xor
mov
stc
inc
jae
inc
xchg
xorb
jnp
orb
or
dec
add
push
mov
cmpsl
push
loopne
aam
imul
xor
in
movb
pop
cmp
into
sbb
mov
psraw
sub
aas
daa
add
mov
push
adc
notl
jge
push
cmpl
xchg
xchg
in
dec
or
dec
push
mov
pusha
xchg
pop
shrb
pushf
mull
push
inc
mov
lret
push
inc
fmull
cmp
xchg
hlt
sub
or
nop
mov
add
in
pop
jo
xchg
cmpb
aaa
jne
pop
clc
add
cmp
add
pop
rcrb
jl
xchg
push
or
dec
sahf
add
lds
add
jl
incb
and
jle
lea
cmpb
inc
sub
pop
push
inc
xchg
mov
cs
sub
movb
push
int
sub
cltd
nop
mov
cmp
pop
jl
pop
je
mov
clc
sbb
and
pop
inc
fdivl
mov
sbb
cmp
sub
ljmp
outsb
ds
cmp
mov
ret
push
movsb
inc
inc
fxch
dec
pop
sbb
lea
insb
pop
jae
mull
add
or
insl
int
int
push
sti
or
push
pop
pop
paddusb
sbb
test
aas
movsl
mov
test
hlt
jnp
rol
xchg
and
sbb
dec
or
cmp
lods
pop
or
sbb
jmp
dec
adc
ds
pop
or
adc
inc
popa
pusha
and
hlt
mov
mov
inc
push
cwtl
mov
xchg
add
add
stc
sub
in
and
test
jnp
sar
sti
mov
test
push
repnz
inc
cmp
jb
pop
pop
sbb
pop
push
pop
pusha
loop
inc
inc
ja
jle
pop
pop
ret
mov
push
add
pop
pop
rolb
lods
fwait
je
nop
xor
and
jmp
cmp
jne
xor
add
lock
lret
out
stos
push
mov
or
lods
into
jg
ss
push
xor
add
imul
cs
jb
clc
mov
shl
jecxz
cmp
add
jmp
mov
mov
mov
cmpsl
add
icebp
mov
cwtl
test
xchg
push
pop
sbb
leave
dec
inc
orb
adc
and
mov
mov
test
cli
inc
add
xchg
pandn
inc
mov
dec
or
xor
sub
inc
sbb
sub
call
fimull
add
fisubrl
loop
jns
movsl
ror
fadds
xor
push
xchg
jne
and
adc
sub
mov
add
in
mov
sub
sbb
pop
mov
add
fadds
or
enter
fadds
mov
adc
jp
mov
jle
sbb
sbb
clc
adc
js
push
testb
or
sub
insl
adc
cmpl
or
mov
lcall
xor
push
add
push
or
dec
or
adc
push
jl
pop
sarl
cmp
cmp
push
and
push
fstpl
mov
hlt
cmpsb
xor
or
cltd
mov
pop
jecxz
add
add
push
call
mov
pop
std
es
sub
mov
frstor
gs
iret
repnz
mov
leave
inc
sub
and
push
mov
add
adc
popa
lods
scas
aad
loopne
and
rolb
add
or
outsb
push
push
int3
dec
lret
fwait
pop
xor
pop
push
subb
mov
xchg
test
or
push
pop
fmull
mov
mov
or
insl
ffreep
rorb
inc
and
jbe
dec
jge
sub
outsb
jl
add
sbb
xor
into
xchg
push
dec
push
mov
dec
dec
xor
push
jne
loop
dec
jnp
loopne
xchg
sbb
scas
stos
and
jne
cmp
mov
dec
mov
mov
mov
fists
fimuls
mov
and
jo
inc
dec
movsb
cmp
enter
addw
movzwl
test
je
test
pusha
cmp
mov
and
adc
enter
pop
pop
add
push
push
call
adc
std
mov
lcall
xor
or
inc
jecxz
sbb
cmp
ss
mov
cwtl
add
mov
daa
je
mov
std
xchg
addl
and
aad
or
sub
push
ja
sbb
cli
jmp
mov
inc
xchg
lock
and
push
add
adc
daa
outsb
and
jle
add
mov
loop
adc
xor
sbb
sbb
push
xchg
mov
xchg
out
nop
dec
or
jecxz
sbb
mov
and
xor
lock
mov
add
mov
pop
jo
jl
enter
aam
mov
xor
adc
test
ds
popa
lock
in
pusha
pop
push
in
lea
incl
je
jmp
sub
xlat
sub
popa
outsb
fisttpll
pop
push
add
jle
mov
mov
out
mov
fisttpll
pop
sbb
and
inc
ret
mov
imul
mov
push
mov
push
xor
ficompl
jno
push
and
and
cwtl
pop
sub
or
or
pop
les
mov
dec
pop
cmp
pop
es
push
or
or
add
add
lods
or
loopne
sbb
xor
xor
or
lcall
faddl
push
cmp
pop
inc
aas
xor
in
xchg
push
xor
xor
xor
test
fs
push
and
int3
and
jae
cmp
jecxz
adc
int3
div
or
lahf
ljmp
test
stos
push
loopne
push
mov
lahf
add
mov
add
inc
je
popa
jg
adc
lret
inc
test
lock
subl
je
roll
or
add
xor
lcall
dec
push
or
call
xor
lea
in
sbb
mov
inc
inc
dec
lods
push
hlt
inc
jg
roll
adc
int3
and
add
nop
loop
inc
mov
cmpl
and
mov
push
mov
and
sub
push
sub
push
mov
inc
cmp
inc
or
mov
cwtl
xchg
adc
out
cmpsb
pushf
pop
or
das
lods
cwtl
adc
iret
mov
lahf
mov
pop
je
insl
call
pop
mov
pop
push
ss
pop
jl
adc
add
push
movsl
cmp
rclb
mov
inc
rcll
mov
add
adc
mov
pop
pop
ret
shll
fwait
gs
sub
int3
fst
or
and
xlat
push
rorl
sbb
cmove
jmp
mov
mov
repnz
push
push
jnp
ret
ljmp
push
cmp
add
bound
fisttps
dec
push
cmp
adc
jl
mov
pop
mov
dec
add
dec
or
roll
add
pop
and
cmp
add
xor
idivb
mov
mov
sub
push
cmp
and
imul
mov
push
cmp
ljmp
cmp
movsl
pop
insb
imul
or
enter
ret
mov
inc
out
cmp
in
pop
mul
xor
jbe
subl
add
xchg
sub
shr
xor
sub
jle
test
sbb
adc
repz
dec
in
xlat
outsb
inc
mov
je
pop
inc
push
add
jb
add
addl
lods
jmp
adc
adc
adc
add
sub
dec
or
sbb
adc
into
push
mov
adc
rcr
and
sub
lret
and
sbb
dec
and
xchg
setle
loopne
or
mov
push
xor
push
mov
xor
ds
fnstenv
pop
mov
inc
popa
pushf
inc
sbb
or
loop
sbb
push
or
je
adc
cmp
push
jns
cmp
lcall
jl
out
inc
adc
scas
icebp
push
lcall
pop
mov
les
adc
push
movsl
shl
sbb
add
adc
push
pushf
jbe
movsl
std
cmp
cmp
dec
dec
or
push
repnz
sbb
push
mov
imul
ljmp
nop
loopne
addr16
call
jne
movsl
mov
lods
pop
in
sarl
dec
sub
dec
push
test
push
iret
jb
push
adc
jae
cmpsb
shl
loopne
push
pop
mov
xor
mov
mov
loope
inc
int3
inc
lahf
jl
loop
and
inc
push
mov
jnp
lock
or
jg
mov
push
ja
sub
add
push
test
xchg
out
inc
faddl
cli
jg
push
cmp
ret
push
xorb
or
or
adc
outsl
jbe
scas
mov
add
out
aam
add
add
sbb
add
out
popa
pop
add
clc
jmp
nop
sbb
xor
cli
test
xchg
or
test
mov
inc
add
and
je
push
add
dec
adc
popf
mov
fisttpll
add
mov
mov
sub
shrb
xchg
and
insl
sarl
iret
mov
mov
insl
push
and
aam
pop
fwait
pop
push
test
push
pop
lret
pusha
push
mov
jae
shlb
add
lret
and
fmuls
rclb
pop
and
cltd
ror
push
xor
jmp
loopne
xchg
push
mov
sbbl
fisttpll
pop
cmpsl
in
test
adc
push
cli
es
adc
fidivrl
adc
shrb
or
pop
dec
push
cmp
movb
not
rcll
je
inc
in
add
or
jae
add
push
sahf
das
iret
repz
arpl
push
idivb
je
inc
or
push
loopne
das
iret
or
and
jle
cmp
push
inc
jle
test
sub
rcrb
adc
add
jbe
cmp
and
or
nop
sub
cmp
lret
testb
add
sti
or
or
push
mov
push
or
add
cmp
dec
mov
rorl
and
sbb
faddl
mov
pusha
movb
inc
popf
xchg
jmp
push
lret
ret
iret
dec
fnstcw
add
fs
rorl
jb
pop
xor
xchg
cmp
mov
mov
fsubl
push
loopne
jbe
push
pop
and
jecxz
fstpl
push
sub
outsb
sub
xor
xor
fstpl
sbb
jnp
rclb
call
xor
or
or
cwtl
or
dec
loopne
adc
ja
pop
cmp
or
mov
mov
outsb
sbb
jns
inc
jl
rolb
rorl
mov
mov
fwait
or
test
add
push
add
aas
repz
ss
push
xorl
pop
or
mov
inc
mov
out
orb
imul
adc
inc
and
add
cmp
shll
insb
jo
or
dec
je
jl
mov
imul
enter
dec
js
mov
sti
or
mov
loopne
inc
int3
test
inc
mov
scas
dec
jnp
mov
dec
inc
and
pop
js
mov
out
imul
add
loopne
or
xor
ljmp
rcl
pusha
xor
add
mov
inc
jl
js
and
xor
jo
xor
add
push
and
push
cmp
jbe
lock
push
pop
ret
adc
dec
cmp
and
xchg
xor
fwait
xchg
dec
inc
add
and
adcb
pop
cmp
push
clc
adc
and
inc
lds
icebp
cmp
jne
pop
push
xor
incb
shrl
pcmpeqw
popa
sbb
or
adc
inc
adc
adc
or
imul
jp
add
sub
popa
add
fucomip
pop
sti
and
cmp
sbb
jns
iret
outsb
shlb
repz
adc
sbb
ror
test
jno
xchg
add
cli
push
inc
gs
out
ja
add
jne
mov
jb
mov
adc
jo
jmp
idivb
push
inc
dec
or
or
xchg
inc
or
pusha
mov
imul
pusha
jne
lods
mov
imul
mov
mov
pop
in
xchg
insb
sbb
jo
mov
inc
incl
push
rol
ljmp
shl
pop
add
pop
aaa
enter
jmp
cmp
out
int
or
jne
lea
add
mov
jne
adc
addr16
push
jl
notb
push
clc
out
test
out
andl
adc
cmp
add
mov
jg
mov
pop
mov
nop
mov
test
addr16
xchg
out
out
add
iret
jne
or
cmp
pop
int3
in
xor
add
imul
inc
xchg
out
jge
xchg
rolb
mov
stc
push
adc
ret
pop
scas
mov
stc
xchg
clc
push
stc
mov
sysret
je
icebp
jne
in
ds
xor
ja
arpl
ficompl
fldcw
sub
jge
dec
sub
add
mov
insl
jbe
testb
or
adc
rclb
nop
iret
push
mov
mov
sbb
inc
test
orl
clc
mov
dec
mov
jg
loop
jmp
cmp
sbb
add
dec
or
or
pop
dec
jnp
inc
pusha
mov
ret
dec
or
inc
mov
arpl
or
cmp
jno
push
stos
mov
je
dec
add
add
xorl
and
orb
insb
cmp
jecxz
mov
push
dec
popf
sub
sub
or
mov
xchg
pop
pop
and
cmpsb
push
or
gs
dec
xchg
sub
je
pusha
push
sbb
mov
dec
int
mov
or
jo
jecxz
neg
cmp
mov
adc
rorb
in
lods
add
xor
icebp
mov
cwtl
notl
or
sbb
inc
test
lods
outsl
mov
jnp
je
je
pop
sbb
fs
pusha
insb
inc
inc
push
sbb
insb
call
add
mov
ja
fcomps
pop
icebp
pop
testl
je
cmp
je
testb
movsb
aas
mov
rorl
lds
cmp
je
sbb
adc
or
lock
push
sub
sub
cmpsl
js
pop
xchg
jmp
lea
sbb
dec
adc
sub
add
mov
push
add
lock
pop
enter
lock
hlt
and
and
push
cmpsl
mov
add
push
push
adc
cmp
in
adc
sbb
repz
dec
ss
xchg
cmp
mov
jbe
pop
sbb
into
add
push
mov
insl
loopne
rorb
mov
push
pop
cs
popl
lods
lock
xchg
leave
loopne
dec
rolb
and
lock
sbb
or
bound
push
inc
sub
add
cmp
fidivs
and
mov
dec
xlat
test
add
test
ljmp
in
arpl
and
or
ret
adc
xor
adc
enter
test
dec
mov
insb
clc
fdivrs
mov
jne
int3
inc
cmp
pop
mov
adc
mov
mov
xor
popa
push
addr16
lods
xchg
adc
fdivl
xor
xchg
fsubs
mov
jb
xchg
stos
or
inc
ss
pushf
cwtl
fidivrs
roll
inc
movsb
push
test
sub
xchg
mov
je
sbb
add
cmp
push
cmp
outsl
and
dec
push
lea
sub
push
adc
roll
xchg
add
lea
insl
icebp
loopne
dec
push
or
lcall
add
adc
pushf
aaa
imul
mov
jno
out
or
jns
add
lods
in
mov
xchg
inc
adc
fs
inc
xorl
and
pop
arpl
xchg
push
insb
sbb
jle
imul
push
add
lea
fmul
inc
mov
pop
mov
mov
push
ret
push
pop
cmp
je
push
add
xor
je
test
dec
mov
cmp
je
aaa
sbb
add
ja
cli
std
rcrb
dec
sbb
cmp
out
sbb
jg
adc
test
mov
jl
pusha
mov
and
and
add
test
arpl
add
pusha
pop
pop
inc
ljmp
push
mov
adc
and
pop
mov
and
lods
push
or
leave
sarl
fcmovnb
xchg
loope
pop
into
jecxz
inc
and
pop
lock
cmp
push
xchg
int3
lret
ja
push
bound
push
daa
xchg
lret
ds
loope
inc
verr
and
pusha
cli
pop
aam
inc
adc
fildl
jecxz
sub
test
stos
test
push
cmp
cmpsb
fsubr
sarl
xor
test
sti
dec
jl
rcrb
test
push
rsm
mov
add
mov
and
add
mov
jo
lret
xor
xchg
mov
mov
mov
xchg
shrl
ret
rol
push
je
mov
popf
add
aam
sbb
mov
loopne
push
out
jo
push
pop
pop
lahf
sar
fdivrs
cmpsb
xchg
sahf
cmp
push
xchg
popa
cwtl
bound
ljmp
xchg
mov
xchg
mov
inc
cmp
jo
sub
pop
add
add
dec
jmp
inc
aas
mov
xchg
mov
adc
cli
jne
daa
mov
imul
xor
movsb
push
push
push
je
push
xchg
orl
or
adc
cmp
jg
cmpsl
adc
push
pop
lea
push
push
jp
pop
pusha
das
mov
popa
and
mov
dec
pusha
dec
push
add
push
adc
sub
pop
dec
pop
xchg
pop
cmp
mov
aad
rclb
jp
lock
push
push
adc
inc
sub
stos
sbb
stos
add
and
xor
push
mov
dec
adc
popa
add
test
mov
and
and
aad
cmp
orb
nop
adc
xchg
les
pop
imul
adcl
dec
add
hlt
cmp
lcall
xor
mov
lock
mov
jp
add
data16
cmpsl
jno
mov
in
mov
mov
inc
ret
mov
xchg
jo
rcll
xor
ss
ljmp
cmp
lret
xchg
xor
ds
rdmsr
rcrb
data16
mov
xchg
loope
inc
mov
ret
cli
xchg
sbb
xchg
dec
xor
call
rolb
mov
shrb
mov
add
pop
and
jmp
mov
scas
xchg
jns
or
xor
pushf
xchg
ds
push
or
jnp
icebp
lea
push
xchg
push
and
sub
push
dec
xchg
fimuls
push
push
or
mov
push
lret
outsl
adc
push
and
cwtl
mov
mov
enter
sub
sub
cmp
in
neg
sbb
push
and
dec
jle
xor
or
cmp
cmp
inc
je
pop
adc
jb
sbb
cmp
cmpl
outsl
inc
insb
cmc
sub
test
push
xor
inc
lock
pop
aas
mov
fimull
adcl
mov
or
inc
adc
pop
inc
xchg
mov
cld
sub
xchg
sub
ror
inc
or
mov
push
mov
mov
aas
or
sbb
and
cmp
or
sub
fcoms
das
rcr
lods
fildl
mov
or
jl
pop
pop
pop
pop
jge
inc
testb
test
jns
jb
out
pop
or
hlt
mov
jl
inc
push
add
pop
adc
mov
pop
sbb
and
push
add
les
inc
or
loope
pop
mov
cmp
dec
xor
pop
sahf
xchg
xor
outsb
mov
rcll
inc
jecxz
fs
xor
add
jne
cmovb
movsb
mov
cmp
and
dec
stos
test
icebp
repnz
inc
mov
fdivl
pop
mov
adc
test
push
xorb
in
xor
pop
bnd
dec
cmp
mov
jl
inc
aaa
adc
or
mov
adc
add
pop
push
in
shr
pop
or
js
add
cmp
jbe
dec
adc
pop
jg
inc
adc
inc
test
in
fadds
or
in
add
xor
addl
in
sbb
pop
pop
jb
jmp
jecxz
xor
xchg
les
mov
or
sub
call
add
add
mov
cmpb
mov
xor
add
xorl
testb
out
mov
mov
jl
mov
or
xor
xor
add
and
xor
xchg
push
sbb
or
inc
ret
inc
mov
bound
pop
mov
mov
inc
std
ss
mov
mov
xor
scas
push
imul
lahf
sbb
in
stc
pushf
mov
sbb
addl
xor
xchg
jp
add
and
cmp
add
lea
xchg
into
mov
aaa
add
and
add
or
lock
aas
push
push
test
mov
mov
je
xor
mov
jne
rol
filds
adc
lods
cmp
jne
xchg
push
aas
add
adc
call
jns
cmp
push
push
sbb
stos
pop
les
push
mov
inc
jo
inc
addl
mov
and
fs
nop
jmp
sbb
push
lea
fmul
lods
ret
mov
mov
shlb
pushf
xchg
inc
xlat
adc
aam
mov
push
or
test
cmpb
push
add
cmp
call
popa
sbb
rcl
sti
inc
xchg
xchg
push
pop
sbbb
lock
mov
ret
jmp
nop
mov
add
int3
popf
xchg
jbe
xor
mov
push
pop
or
mov
mov
mov
es
negl
cwtl
push
push
ss
cli
dec
clc
loop
je
mov
mov
push
or
push
add
xor
mov
add
add
mov
pop
call
add
pop
xor
nop
add
jb
jbe
cwtl
cmp
pusha
stos
sub
mov
addl
nop
mov
mov
loopne
push
std
lret
mov
push
and
movsb
adc
jge
inc
cmpsb
les
cmpsl
or
adc
pushl
mov
test
pop
bound
adc
add
adc
jle
test
cmp
clc
sti
adc
jae
lea
or
inc
mov
or
inc
adc
mov
cmp
pushf
ljmp
add
pop
and
loope
cmp
pop
clc
xor
cmp
xchg
testb
sub
sbb
fiaddl
mov
mov
mov
or
jae
mov
add
push
mov
or
sub
lahf
mov
repz
jbe
mov
in
cmp
push
push
in
rcrl
mov
sub
add
xlat
orb
or
into
add
addr16
fidivl
lcall
adc
add
testl
jne
xor
sub
and
mov
lea
push
push
movsb
sub
mov
or
pusha
lods
sub
xor
pusha
sbb
test
mov
add
and
aas
or
cli
mov
cmp
push
jae
mov
jno
and
inc
cli
push
cld
jg
push
lahf
or
aas
rolb
sbb
pop
sbb
lea
add
inc
inc
out
pushf
cmpsb
test
push
fadd
imul
dec
adc
cmp
cmp
push
push
mov
xchg
dec
popf
sbb
cld
fcomi
or
pusha
insb
std
stos
sbb
mov
divl
adc
xlat
out
dec
test
lea
adc
jb
jge
sub
je
xor
mov
push
js
in
jle
add
clc
push
or
in
fsts
push
push
pop
adc
loop
subl
out
jae
mov
push
jns
mov
add
xor
xchg
mov
mul
je
lods
adc
push
lcall
icebp
mov
dec
sub
adc
and
dec
push
rolb
push
push
sbb
shl
and
pop
xor
adcb
in
bound
loope
pop
pop
dec
or
in
jbe
pop
jmp
sbb
add
addl
insb
sbb
cmp
mov
or
data16
ud0
mov
xor
testb
movb
mov
lds
cmp
cmp
xor
cli
xor
je
ss
movsb
mov
sub
jne
adc
add
jl
sub
sub
push
dec
shlb
mov
pop
mov
fisttps
ljmp
add
push
xor
pop
adc
or
lods
cmp
sub
dec
sub
mov
ljmp
jmp
sub
pop
jg
addps
add
cwtl
sbb
mov
xor
fidivs
aas
pop
or
cmp
lods
add
hlt
addr16
mov
cmp
adc
mov
sbb
mov
out
xchg
lret
push
adc
mov
lcall
adc
mov
push
ret
and
cmp
dec
jno
mov
lcall
fcomps
xchg
sbb
xchg
mov
xor
lea
call
add
push
in
jbe
fists
ja
push
adc
push
push
adc
jge
push
and
pop
roll
popf
pop
fs
or
sub
movsb
ret
addb
or
sub
mov
lea
std
adc
push
cmp
mov
mov
insb
aad
nop
mov
dec
mov
cmp
pop
push
pop
scas
lock
mov
mov
nop
push
push
in
loopne
pop
test
ret
loope
sub
aas
push
inc
and
jl
dec
ret
inc
mov
inc
or
dec
or
arpl
dec
or
movsb
pop
inc
xchg
push
xchg
ret
fdivrl
jmp
xor
add
and
arpl
dec
fmull
pusha
push
adc
lea
jbe
into
jl
add
push
sbb
nop
push
pushf
mov
add
sub
add
or
pusha
xchg
push
cmp
inc
mov
jle
xor
enter
mov
push
add
jecxz
hlt
and
test
push
lret
sub
and
shlb
loope
bound
in
push
mov
push
mov
outsl
rolb
jae
push
push
or
jae
movsb
fdivrl
sbbl
sub
sbb
push
in
or
les
aas
mov
in
lods
imul
daa
mov
andl
or
pop
aas
inc
stos
xor
mov
sbb
out
cmp
jno
push
jae
add
int
cmpl
mov
push
ror
inc
cwtl
inc
fildl
sbb
inc
and
fisubrl
lods
push
sbb
fdivp
sub
add
and
sub
enter
aaa
adc
xchg
std
adc
sti
xchg
cmp
sub
sbb
aaa
out
push
call
pop
cltd
cmp
sub
or
push
ret
adc
pop
in
rclb
or
push
xor
xchg
mov
inc
push
push
fnstcw
adc
mov
stos
test
sbb
push
adc
push
adcl
pusha
loop
dec
pop
add
stos
shl
inc
les
adc
add
imulb
cmp
mov
test
pop
inc
pop
mov
sbb
adcb
pushf
mov
mov
ficompl
cmpsb
jne
ret
dec
call
ret
int
imulb
fadds
je
or
je
or
sub
sti
je
jbe
adc
pushf
fildl
lods
push
or
jo
mov
xchg
movsb
loope
push
fistpll
jne
lcall
sub
sti
xor
negb
sbb
adc
adc
push
xor
inc
xchg
xor
xor
shlb
lds
pop
dec
mov
orb
pop
and
jbe
call
jge
adc
mov
clc
adcl
mov
inc
mov
test
cmp
and
je
shlb
cli
add
add
mulb
int
jmp
daa
or
in
aad
hlt
inc
mov
movsl
and
add
sub
pop
dec
push
and
dec
pop
lea
or
ret
je
jne
add
es
dec
je
sub
out
cvtps2pi
pop
push
lea
add
adc
int3
or
in
sub
or
or
xchg
fisttpll
push
adc
inc
xchg
adc
sub
cmp
pop
les
out
ljmp
push
mov
or
jecxz
sub
movl
push
or
or
test
mov
dec
scas
pcmpeqd
popf
enter
mov
addl
jmp
sbb
adc
fdivrl
notl
popa
add
push
testb
and
das
and
push
jne
sar
mov
inc
push
inc
push
push
push
imul
and
je
dec
push
xor
add
mov
sbb
loopne
loopne
loopne
push
cmpsl
pop
sub
jne
enter
das
xchg
push
push
arpl
and
inc
test
test
sub
adc
cmp
jne
pop
in
mul
mov
insb
xchg
mov
jl
and
adc
jmp
mov
adcb
scas
pop
or
out
fwait
out
jle
jo
les
inc
sbb
leave
jecxz
mov
mov
aaa
mov
sub
ds
push
xor
ret
ret
push
dec
sarl
mov
push
xchg
dec
push
cs
dec
pop
fdivrs
repz
sbb
pop
lcall
inc
jae
push
push
push
icebp
outsb
test
and
add
or
repnz
cltd
mov
sarl
ja
xor
xor
fsub
add
mov
push
aam
aam
or
fdivs
push
xchg
in
popf
jo
popf
clc
addr16
add
aas
adcl
mov
pop
imul
fsubrs
xor
xchg
and
mov
out
popa
add
sti
sar
sbb
popa
pop
test
into
jno
xor
fisubrl
flds
mov
jb
andb
dec
pop
les
cmp
divl
dec
pop
inc
inc
mov
fisubl
mov
sbb
sbb
addb
add
adcb
test
mov
adc
and
mov
ret
mov
sbb
jmp
xchg
mov
in
jle
sbb
mov
leave
push
rcrb
sar
test
inc
hlt
enter
cmp
push
xor
pop
mov
pop
mov
xor
xor
mov
mov
and
push
mov
fildl
mov
daa
pop
inc
subb
movl
xor
int3
dec
mov
add
or
push
or
mov
push
lahf
dec
in
sub
inc
rolb
dec
sub
mov
pop
popa
insl
pusha
xlat
cwtl
mov
pop
mov
jo
xchg
or
daa
orb
pop
sub
xor
or
add
je
and
test
mov
mov
popa
push
or
pop
or
insb
inc
add
aas
das
mov
or
mov
add
icebp
xor
mov
sbb
jne
sbb
adc
sbb
sbb
scas
xor
add
or
push
mov
aam
fdivrs
mov
dec
xchg
lret
pushf
loope
add
nop
mov
imul
mov
add
jg
xor
lods
movsb
rcrb
call
rclb
dec
in
fcoms
scas
arpl
sbb
and
pop
incl
sbb
loopne
mov
daa
push
sbb
xor
inc
mov
nop
loope
sub
push
dec
and
cmpsl
sbb
sbb
movsl
inc
pop
test
and
push
imul
add
pop
jle
and
cmpsl
or
dec
or
sbb
inc
and
lea
ja
neg
sbb
mov
push
cmp
rolb
int3
mov
mov
sub
sbb
lahf
xchg
push
adc
mov
rolb
inc
pop
sti
jl
iret
fsubr
push
dec
pop
mov
adc
push
lret
dec
popa
push
cmp
push
push
pop
mov
in
mov
inc
push
push
test
movsb
ja
jl
in
nop
pusha
pop
fisttpll
push
xorb
in
jl
call
jno
or
test
ret
or
sub
and
pop
adc
jg
imul
call
inc
ljmp
pop
jg
sti
je
fmull
test
lods
aam
loopne
add
cmpl
je
push
sbb
inc
call
and
lock
cmp
jle
jne
push
adc
movsb
dec
sbb
inc
adc
cmp
xor
int3
and
inc
fistpl
mov
cmp
sbb
call
je
or
push
pop
push
push
sbbb
jl
mov
xor
mov
mov
mov
arpl
jge
jl
sbb
xchg
pushf
cmpsl
fstl
and
push
inc
add
add
mov
sub
adc
add
pop
cwtl
and
mov
sbbb
adc
pop
jmp
push
adc
out
sub
xor
cs
in
cmp
enter
add
mov
ret
mov
jge
xchg
add
sbb
push
lock
jle
push
clc
mov
mov
mov
les
fistps
jmp
clc
add
ss
mov
sbb
push
movsb
mov
push
jnp
mov
pop
loopne
pop
jno
movsl
add
inc
sub
jnp
ljmp
sub
pushf
out
sbb
inc
sbb
or
js
cmpsl
loopne
out
pop
fidivs
aaa
roll
or
aaa
leave
enter
or
xlat
loope
jno
pop
or
fidivs
into
hlt
je
mov
bound
jo
imul
add
pop
xor
bound
stc
cwtl
dec
imul
push
adc
sbb
xchg
fnstcw
add
adc
mov
adc
outsb
je
pop
push
stos
outsl
inc
adc
push
adc
add
add
mov
inc
inc
aad
fwait
add
add
not
sti
and
add
fnstcw
insl
mov
dec
dec
hlt
add
pop
je
mov
push
cmp
push
cmp
addb
clc
sarb
shlb
pop
push
mov
lret
add
test
test
xor
out
fs
lcall
test
leave
incl
dec
adc
sbbl
gs
pop
mov
add
int3
cmp
and
das
gs
fmuls
inc
push
pop
outsl
aas
lods
add
dec
push
add
add
mov
push
mov
fstpl
adc
lea
push
add
or
ja
or
in
out
popa
rolb
xor
in
or
mov
push
and
mov
cmp
xor
jo
dec
dec
mov
lods
push
or
add
in
loop
mov
bound
movsb
xchg
mov
mov
fsubr
dec
or
je
adc
mov
orb
inc
jecxz
sbb
jnp
or
pusha
adc
xchg
xor
xchg
jge
add
pop
pop
cmp
push
and
dec
and
xchg
xchg
or
sub
in
mov
inc
and
push
xor
sbb
sub
or
mov
clc
jecxz
ljmp
sbb
in
fs
mov
inc
jo
push
push
sub
in
sub
push
mov
stos
xor
push
sub
xchg
call
bnd
push
mov
and
xor
add
xchg
push
je
ret
movsb
bnd
cmp
or
sub
sub
or
xchg
xchg
out
pop
sbb
cmp
icebp
mov
pop
and
flds
enter
adc
pop
push
xchg
lret
push
in
imul
pop
es
or
xlat
mov
push
push
mov
inc
or
inc
popa
stc
cmp
std
and
nop
pop
mov
pusha
push
test
repz
cmp
adc
gs
enter
add
ret
pop
dec
addl
clc
call
xor
add
outsb
je
scas
mov
aad
pop
adc
or
xchg
es
push
add
add
rorb
push
and
mov
shll
mov
push
or
adcb
mov
mov
push
push
add
rcl
lcall
mov
pop
ja
mov
test
iret
fistps
add
sub
ret
add
inc
int3
jp
ret
lret
test
or
dec
lcall
sarb
jge
ret
rorb
js
repnz
adc
push
bound
jb
add
push
inc
or
inc
or
add
and
cwtl
cmpsl
mov
mov
and
aam
push
jl
cmp
jae
or
dec
mov
push
shl
pop
cmp
jne
jg
mov
pop
dec
or
mov
add
jp
mov
jp
mov
inc
jns
call
push
push
sar
inc
jmp
pop
shll
dec
andb
jne
cli
outsb
dec
xchg
iret
sbb
aam
pop
cmpl
mov
jl
sub
mov
out
les
mov
add
call
sahf
imul
leave
or
lods
jge
addr16
mov
add
pop
jmp
push
mov
xchg
pcmpgtb
push
test
aam
adc
hlt
subb
fstps
test
xor
or
subl
add
add
pop
mov
mov
and
add
and
fwait
shlb
jbe
jecxz
dec
push
mov
lret
sti
mov
inc
xor
ret
pop
dec
sub
push
fdivrl
jb
scas
fsubrl
mov
mov
cld
jae
push
lcall
add
jne
jmp
popf
daa
popf
fcmovnbe
mov
push
dec
jmp
jnp
sub
push
jg
int
push
mov
push
insb
push
in
in
call
imul
rolb
ret
and
cmp
jns
xor
lock
jge
push
loope
cmp
lds
aas
scas
mov
mov
std
fadds
test
mov
cmp
jbe
sar
rol
xor
leave
push
xor
inc
in
push
pop
lret
push
add
and
add
adc
int
fstpt
imull
testl
push
lock
nop
mov
ret
lock
mov
add
nop
add
sub
leave
mov
cld
jo
push
je
cmp
push
dec
and
cmp
sub
push
cmp
sub
mov
adc
add
dec
stc
add
test
push
std
sti
cld
sbb
push
push
cmp
jo
add
mov
cmp
adc
cmp
push
inc
lock
push
sub
shlb
jmp
jg
fs
xorl
inc
jp
aaa
jbe
mov
enter
xor
xchg
mov
push
lea
xchg
xchg
out
in
push
subb
dec
xor
enter
scas
enter
sbb
sub
add
orb
or
xchg
sub
sbb
push
or
rorb
int3
ss
imul
inc
in
add
dec
incb
sarb
add
ja
push
push
pop
xchg
cmpl
je
mov
pop
aam
rolb
mov
and
pop
scas
push
je
sbb
test
mov
fs
cmp
daa
or
fdivrp
testl
inc
adc
adc
lret
push
jmp
sbb
push
test
xorb
mov
or
or
pop
leave
jp
add
fdivs
cmpsl
or
fiadds
sarl
out
push
xor
faddl
or
mov
and
or
mov
movsl
or
or
add
sahf
test
lea
pop
cmp
lea
mov
pop
popa
repz
inc
and
xchg
or
and
sbb
mov
jecxz
mov
rcr
mov
xor
add
ds
jno
les
pop
push
add
or
lahf
loope
or
in
or
adc
mov
adc
invd
out
pop
std
pop
ret
push
imul
scas
push
push
rolb
lods
test
sub
push
push
sbb
add
mov
adcl
sub
dec
add
pop
push
popf
sub
push
out
push
aam
shrb
adc
fstpl
hlt
fcoml
fmull
xchg
or
mov
iret
adc
sub
jl
pop
pusha
push
push
je
pop
fs
dec
add
adc
add
pop
mov
add
and
adcl
ss
lcall
mov
rcrl
push
sub
add
loopne
pop
ss
xor
pop
mov
push
xchg
movsl
jae
xchg
subb
mov
adc
bound
add
addb
hlt
and
jo
in
daa
jns
dec
adc
xor
pusha
dec
adc
push
repnz
xchg
and
ds
adc
cmp
push
int3
add
jbe
mov
mov
loope
mov
adc
out
pop
stos
sbb
in
iret
in
sbb
sbb
dec
mov
fadds
push
pusha
sub
jg
sub
push
mov
add
add
mov
push
jmp
sub
push
sbb
xlat
sbb
push
add
je
fisubrl
inc
sub
stos
and
test
hlt
add
add
mov
xor
and
imul
in
pop
js
sarl
bound
ljmp
cld
jo
mov
call
mov
ja
lret
mov
mov
mov
repz
and
mov
push
jbe
sub
lea
fisttpl
mov
pop
inc
inc
cmp
jb
filds
pop
pop
ja
jb
leave
mov
aaa
divb
in
roll
adc
cli
sbb
mov
add
sbb
and
or
inc
xor
clc
and
cmpl
push
xor
roll
inc
je
xchg
push
fsts
or
imul
enter
lods
negb
inc
pop
cmp
leave
fsubs
mov
or
je
xor
jmp
inc
movsl
cmp
push
pop
push
mov
inc
xchg
sti
jl
test
pop
icebp
int3
jg
cmp
adc
jg
sbb
mov
sub
mov
jb
add
mov
ss
mov
push
cmp
dec
imul
add
jmp
test
rcrl
inc
aas
push
sbb
das
xchg
jne
add
push
shll
into
add
gs
xor
enter
aam
outsl
add
jp
or
test
inc
addr16
lret
outsl
movsb
cli
je
or
in
gs
pusha
sub
cmp
in
inc
fmuls
dec
dec
sub
je
or
and
add
ret
pop
mov
jnp
add
jge
sbb
push
cmp
inc
add
jecxz
aas
stos
adc
add
push
adc
add
or
jno
push
sbb
or
or
mov
xor
push
lods
fsubp
adc
dec
push
mov
pop
scas
mov
mov
test
adc
rclb
pop
cmc
jb
xchg
mov
mov
or
es
fisubrl
push
imul
pop
add
sbb
inc
push
inc
and
jl
sbb
lods
nop
jge
jmp
ss
xchg
test
pop
add
test
or
shlb
leave
add
mov
pop
jne
dec
mov
cmp
popa
cmp
sub
push
mov
push
ret
or
jl
add
cmp
cmp
push
inc
jno
ret
cmp
and
add
or
mov
dec
push
cmpsb
sahf
jbe
adc
adc
jmp
xor
data16
mov
jne
pop
cmp
sub
adc
adcl
popa
test
xchg
adc
rep
bound
cmpsl
mov
or
sbb
cmp
jae
mov
shlb
add
dec
sub
inc
sbb
andl
mov
adc
and
and
into
dec
mov
push
push
mov
cmp
cld
push
and
push
mov
clc
push
loopne
adc
push
js
jge
pop
data16
inc
sub
xorb
add
pop
int
mov
xor
cmp
fldenv
ret
adc
testb
pop
punpckhbw
inc
xchg
pop
mov
ret
ret
or
adc
jne
mov
xor
rcrb
and
andl
ret
pop
push
sub
adc
mov
or
xchg
push
push
pop
and
add
and
inc
jo
cs
fdivr
xor
lret
hlt
add
cmp
dec
fsubs
sbb
mov
jmp
test
jno
jl
inc
out
aaa
adc
aam
mov
sub
mov
xor
and
aas
insb
xor
pop
mov
push
fiadds
call
clc
pop
test
jge
mov
push
lret
add
lock
ds
push
push
push
inc
push
jp
shrb
xor
cmpsl
lods
out
or
je
push
call
adc
rclb
in
and
fidivs
push
or
ficoms
aad
xchg
aam
push
or
insb
jge
leave
fstp
loope
xor
lods
stos
adc
dec
ret
jno
incl
out
ret
adc
inc
rolb
cli
dec
mov
mov
xlat
mov
adc
arpl
push
and
add
mov
pop
mov
leave
xor
js
dec
adcb
int
cmp
jle
xor
cmp
mov
loopne
mov
lods
test
add
add
loope
add
incb
roll
pusha
and
jo
add
add
aas
pop
shrl
push
sbb
shr
and
je
mov
andl
jle
testl
jo
pop
cltd
mov
or
inc
dec
cmp
inc
stos
jno
push
icebp
jl
ret
enter
sbb
sub
sub
dec
adc
or
jl
lock
adc
dec
mov
inc
das
popa
mov
aad
lret
adc
ret
adc
into
dec
pop
mov
lret
lea
lret
es
pop
push
inc
sbb
adc
int3
adc
add
or
shrb
and
dec
push
es
ret
and
sub
jns
iret
das
mov
xchg
cmp
jp
testb
sbb
adc
jbe
wrmsr
int
push
ds
push
or
dec
clc
adc
fbld
pop
stos
sbb
loope
insl
push
int
and
or
adc
push
pop
cmp
add
adc
pop
push
mov
dec
add
add
dec
or
inc
add
adc
dec
push
rol
add
clc
jbe
mov
jb
mov
jmp
sbb
lret
dec
inc
imul
xor
pop
sub
ror
jle
clc
faddl
and
repz
mov
add
mov
shlb
jmp
pop
lea
adcl
sarb
inc
or
or
adc
and
ja
lea
mov
lret
push
fdivp
push
xchg
cmc
aam
daa
sbb
movsl
jo
dec
jmp
loopne
leave
push
mov
jnp
ret
clc
in
mov
and
lods
repz
xor
lret
leave
push
xor
testb
sbb
pop
in
sbb
push
xor
push
sbb
or
adc
mov
and
jnp
pop
push
add
mov
imul
movsb
je
movsb
push
call
repnz
ret
sbb
xor
test
push
adc
test
jmp
dec
ss
arpl
inc
jnp
orl
jne
sub
icebp
sar
mov
cmp
inc
lret
mov
add
and
jae
jb
pushl
mov
cmp
xor
es
sub
jae
adc
or
cwtl
jmp
and
rolb
unpcklps
sbb
push
adc
icebp
dec
inc
cmp
dec
xchg
aaa
icebp
lret
sbb
inc
inc
sub
mul
sbb
jns
lret
sub
lcall
adc
push
repz
inc
and
cs
test
push
xchg
jle
push
fwait
jg
mov
sub
ret
xor
nop
adc
cmp
push
leave
test
sarb
jle
insb
and
lock
addr16
scas
sbb
or
enter
rcr
xchg
arpl
cmp
and
daa
lds
arpl
arpl
inc
mov
push
dec
or
adc
addr16
nop
das
and
je
mov
add
sbb
cmp
ja
mov
jmp
adc
fmull
xchg
lcall
lds
stc
std
addb
or
imul
pop
cmp
add
testl
je
pusha
cwtl
pushf
pop
sarb
daa
add
dec
cmp
lret
lcall
add
ror
push
push
outsl
movsb
inc
sti
jae
test
ss
push
jns
pop
stos
mov
xor
push
shlb
sbb
mov
push
push
cmp
dec
and
push
cmp
jl
inc
push
cmp
and
mov
cmp
hlt
or
daa
and
sub
sub
cs
add
out
or
jmp
push
enter
push
xchg
push
push
nop
call
das
lock
sti
pop
xor
or
xor
mov
mov
mov
pop
or
lea
setno
fistpll
in
cmp
or
out
push
push
and
out
ficoms
cli
push
or
stc
sbb
adc
sbb
andl
inc
cmp
or
push
imul
or
or
lock
inc
adc
aaa
add
xor
lcall
je
push
mov
and
pop
adc
nop
add
add
lea
fmull
adc
insb
mov
adc
pop
mov
pop
pop
pop
inc
test
xor
mov
xchg
lea
and
push
push
addb
cmp
add
pop
sbb
push
out
lods
mov
fcmovb
lret
or
mov
sbb
xchg
jge
popa
dec
mov
das
and
test
inc
fistl
add
pushf
fsts
sbb
les
sbb
adc
mov
pushw
mov
push
js
ds
ja
je
pop
cmp
xchg
ret
lods
mov
fsub
movsb
pop
add
push
and
jae
rorb
jns
call
shll
test
jl
or
add
or
and
lret
jo
pop
loopne
xor
jne
push
cltd
daa
mov
es
inc
mov
dec
add
mov
out
or
loop
cmpsb
mulb
dec
cs
cmp
ds
lock
xchg
mov
pop
sbb
stos
mov
xor
mov
pop
xor
sub
xor
adc
jne
and
stos
loopne
push
je
daa
add
inc
pusha
xor
sbb
sbb
mov
cmp
push
je
xor
sbbl
sbb
mov
mov
xor
and
inc
jmp
loopne
sbb
pop
sbb
mov
cmpsl
dec
movsl
pop
dec
mov
mov
sub
mov
cmp
xchg
mov
add
jne
lock
mov
nop/reserved
add
or
sbb
shrb
das
jnp
test
dec
cmp
jg
pop
not
aam
mov
sbb
sub
popa
push
es
or
xor
inc
and
adc
pop
add
add
add
and
call
scas
cmp
dec
and
add
sbb
rorl
inc
cmp
fiaddl
cmpl
lahf
int3
stc
testb
add
clts
jae
fcmovne
xor
loope
repz
add
cmpl
loop
push
das
or
fadd
adcb
xchg
inc
mov
push
push
jmp
pop
or
mov
bound
rorb
jmp
push
adc
dec
stc
dec
mov
add
bt
std
call
jno
popa
call
or
push
mov
push
hlt
sub
push
push
stc
pushf
add
in
adc
adc
shrl
iret
push
and
xor
sbb
stos
testb
loope
lock
dec
rorb
cld
lock
call
addl
cmpsl
mov
lahf
xchg
or
push
adc
lock
push
jae
test
and
lods
or
or
sbb
mulb
push
lock
ljmp
mov
mov
fisttpl
jmp
test
nop
nop
add
add
std
jg
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
mov
or
mov
orb
loop
cmpsb
cmp
idivb
jge
mov
pop
and
cmp
jl
push
repnz
cmp
je
cmp
je
jne
or
nop
xchg
and
or
add
mov
dec
shlb
cs
inc
adc
sbb
pop
adc
loop
testl
outsb
fnstcw
adc
lods
mov
pop
inc
rorl
sub
mov
cmp
jl
cs
jl
cld
add
jl
in
inc
or
subb
add
mov
in
mov
pushl
push
push
push
or
hlt
mov
inc
mov
dec
lock
xor
dec
adc
sub
js
jbe
mov
rcrb
call
cmp
adc
xchg
dec
mov
xor
xor
dec
inc
out
mov
xor
or
cmp
mov
insb
stos
lea
or
jo
movsl
js
test
adc
in
clc
imul
inc
dec
and
pop
add
push
pop
out
pop
fiadds
sbb
or
aaa
push
dec
adc
or
push
or
movsb
je
icebp
mov
sbb
call
por
xor
dec
push
mov
clc
cmpsb
add
mov
lcall
push
sbb
cmp
pop
sbb
lock
adc
xchg
icebp
lcall
inc
lods
and
test
mov
sub
sbb
mov
mov
pop
xchg
dec
and
sbb
fldt
or
enter
add
pop
adc
jns
or
lods
add
pusha
sbb
push
js
dec
loopne
add
sbb
push
xlat
mov
ret
scas
hlt
push
pop
ja
push
jge
lret
xor
xor
cmp
mov
sub
addb
shrl
inc
cmp
lods
push
hlt
inc
insb
adc
icebp
push
and
jo
or
jmp
push
movl
mov
lahf
or
pop
push
xor
mov
push
inc
mov
std
push
xchg
add
ja
leave
push
inc
cmp
lods
pop
nop
ret
cmp
and
movsb
pop
addb
push
adc
sbb
jne
nop
pop
shlb
push
xchg
ret
sbbb
inc
rorb
pop
jle
and
rclb
inc
fs
inc
push
outsl
outsl
adc
cltd
arpl
mov
flds
mov
fdivl
divl
sbb
popa
xor
mov
dec
and
inc
ds
test
outsl
seto
jmp
and
addb
push
out
popa
sbb
add
fwait
adc
pop
fcompl
cmp
jmp
inc
jl
fucomi
mov
gs
daa
mov
mov
pop
scas
push
xchg
xor
or
lds
in
aas
sub
dec
or
sbb
pop
xor
mov
or
and
jbe
test
mov
je
sub
xchg
push
dec
xor
dec
jne
shll
inc
stos
push
xchg
mov
cmc
lcall
ja
loopne
leave
add
adc
xchg
jp
ret
mov
cwtl
xchg
adc
sub
cmpl
lock
sbb
leave
or
mov
mov
mov
sbb
daa
je
cmp
cmc
out
adc
jg
pop
push
inc
dec
sub
push
cs
incb
ds
inc
adc
les
and
testb
fs
push
jle
or
mov
dec
add
and
mov
sbb
mov
sarb
insb
sub
dec
leave
mov
jne
push
repnz
mov
and
mov
sbb
xchg
add
push
cmp
lcall
mov
addr16
xlat
mov
inc
adcl
inc
dec
sbb
daa
push
negl
int
mov
adcl
xor
push
mov
mov
mov
loopne
add
mov
cmp
in
and
pushf
dec
push
ret
cltd
in
fsubr
addb
adc
rorb
cmpb
dec
fists
sbb
mov
jle
into
insl
ljmp
sub
inc
add
clc
loopne
js
rcl
sbb
pop
xchg
rorl
inc
xchg
jno
test
sub
push
inc
pop
and
and
sub
push
int
dec
inc
jo
mov
xchg
out
push
mov
jl
sti
mov
push
mov
sub
sub
test
lea
and
pusha
pop
test
loope
ret
lcall
orps
adc
loope
xor
in
lret
sub
xchg
cmp
cmp
or
sub
lea
daa
add
lret
pop
ret
fcoms
out
sub
adc
test
add
testb
xor
icebp
pop
repz
mov
adc
shrl
or
or
push
mov
inc
adc
repnz
mov
sub
push
or
adc
jmp
dec
mov
insb
add
or
add
shlb
add
inc
push
sti
insb
add
sahf
push
inc
lret
pop
mov
push
ja
mov
or
loopne
xor
repz
add
and
mov
or
jmp
pop
lahf
adc
out
sub
pop
sbb
rclb
mov
push
daa
fst
inc
add
push
addb
outsb
lret
xor
sbb
bound
add
repnz
lea
pop
sbb
rsqrtps
sub
cs
loopne
lods
inc
js
push
mov
push
push
push
adc
shl
push
mov
dec
cmc
adcb
and
cmpb
jnp
cmp
pushl
sub
xor
push
jns
lret
dec
sbb
push
inc
outsb
or
mull
je
movsb
pop
pop
xchg
sub
pop
es
shlb
incl
cmp
xchg
push
in
jo
mov
fidivrs
sbb
push
sub
roll
or
cmc
mov
shrb
fdivrs
add
pop
je
fldl
rcrl
sbb
dec
in
rcll
cmp
aaa
adc
adc
jne
push
divb
cmp
iret
iret
or
jne
or
jne
or
add
cld
sbb
fldz
lret
andl
inc
add
das
or
cmp
inc
dec
stos
dec
add
sbbl
and
mov
inc
fidivs
pop
cmpl
push
sub
fisubs
mov
andl
inc
mov
jnp
fstl
jecxz
fsubs
and
into
or
inc
push
outsb
mov
xlat
orl
lock
rorb
xchg
negb
add
xor
jl
cmovge
or
cwtl
add
dec
call
sbb
shl
fdivrl
sub
rcr
fmuls
pusha
add
aam
adc
jp
rcrb
mov
mov
les
emms
sub
mov
movsl
or
lcall
push
xor
lock
orb
ds
xlat
push
or
mov
loope
dec
or
cmpsb
pusha
fsubl
sbb
push
jmp
push
xor
adc
mov
jbe
test
or
push
jo
sub
xor
xor
and
pop
xchg
jbe
orb
rcrb
push
or
cli
add
mov
mov
hlt
or
push
add
mov
sahf
pop
insl
xlat
lcall
push
repnz
inc
adc
sub
push
mov
pop
adc
or
iret
add
hlt
cmpb
mov
mov
adc
add
adc
sub
xor
ja
sub
mov
stos
dec
adc
push
dec
mov
add
mov
inc
pop
xor
dec
or
add
in
mov
or
mov
cmpl
mov
inc
jno
arpl
xor
les
fnstsw
imul
push
mov
fs
pop
enter
pop
pusha
addl
out
fmull
int3
daa
xor
cltd
rorb
sbb
pop
daa
movsl
scas
imul
leave
enter
jns
adc
fcompl
xchg
xchg
or
push
paddusw
imul
fs
mov
test
addb
shll
int3
cltd
jbe
sub
rclb
mov
push
xchg
add
icebp
sub
add
xor
pop
push
sbb
dec
cmp
sahf
or
pusha
and
clc
or
divl
in
or
testl
cld
lock
repz
push
out
ret
cli
or
js
sbb
mov
push
int
test
lea
and
lods
gs
sub
fcompl
or
add
or
push
mov
cmc
mov
push
jne
adc
fstpl
push
add
inc
and
jmp
in
loopne
pop
add
frstpm(287
sub
sbb
cmc
mov
cmp
jl
enter
shlb
inc
xor
stos
inc
and
fstpt
dec
add
ja
or
add
add
add
lret
sub
cmp
mov
cmpsl
rcrl
je
das
pop
lods
push
mov
mov
int
imul
or
jno
pop
dec
shr
lcall
add
imul
mov
rclb
daa
or
sbb
ret
dec
stos
rol
cmp
xchg
pop
fmull
mov
push
leave
sub
sbb
shlb
and
aaa
jae
movsl
mov
enter
xchg
xor
pushf
push
andl
xor
add
add
das
mov
mov
xor
lods
adc
scas
jecxz
aad
xlat
out
insl
mov
insb
repz
xor
stos
lret
aad
and
cmp
out
call
arpl
ss
in
jmp
sbbl
pop
add
inc
arpl
push
test
mov
aad
xchg
mov
lods
mov
loopne
xor
or
xor
cs
cwtl
mov
in
or
xor
aam
inc
xor
imul
sahf
cltd
clc
jnp
pusha
mov
inc
push
in
sub
xor
shrb
push
push
shr
popf
pop
out
add
dec
push
sarb
push
push
add
scas
clc
inc
cmc
mov
mov
add
lods
mov
or
fstl
mov
aad
cli
adc
pop
icebp
lea
push
fisubl
iret
loope
or
adc
fistl
lcall
lret
pop
je
mov
and
mov
adc
push
adc
add
cli
sub
push
pop
or
adcl
dec
test
ss
xor
sbb
pop
hlt
lods
movsl
sbb
mov
outsb
aam
xor
pop
lea
sti
or
xor
fstps
xor
xor
fwait
dec
mov
dec
add
sbb
clc
pop
inc
dec
inc
out
or
push
add
inc
ret
ljmp
pushf
sbb
imul
dec
pop
js
hlt
cltd
and
pop
or
sub
enter
pop
jb
sbb
or
shlb
dec
mov
pop
jp
sbb
nop
xchg
das
push
jno
xchg
mov
shl
fstl
mov
adc
cmpsb
push
in
mov
add
dec
sbb
sbb
mov
and
xor
popf
mov
dec
mov
mov
stos
mov
popf
push
xchg
movsb
push
push
and
sub
adc
sbb
outsb
adc
push
shll
movsl
les
mov
mov
jge
mov
movsl
popf
mull
lock
les
xor
or
mov
das
inc
shrl
imul
or
adc
nop
pop
cmp
enter
xor
or
mov
and
punpckhbw
cmp
add
adc
iret
xchg
xor
cmp
push
xchg
mov
test
or
sti
loop
dec
rol
xor
mov
test
xor
gs
add
addl
movsl
gs
icebp
scas
ret
movsl
scas
sbbl
stos
mov
push
enter
mov
loop
adc
mov
jmp
cmpsb
and
shrl
bnd
push
in
lahf
add
daa
add
xor
popa
data16
rclb
mov
cmp
mov
push
pop
enter
stc
or
in
or
in
aas
and
pop
ret
or
xchg
add
bound
loop
push
ret
rolb
out
jecxz
ljmp
shlb
dec
test
mov
add
pop
mov
roll
test
sti
in
lods
aad
pushl
cmpsl
cltd
mov
cmp
fsub
sbb
adc
and
and
mov
cmpsb
mov
call
push
mov
push
cmpl
or
xlat
mov
mov
mov
and
dec
lock
orb
fistps
stos
add
mov
add
ret
dec
dec
jp
nop
xchg
push
mov
jne
pop
cmc
nop
repnz
mov
xor
outsb
push
adc
and
push
mov
adc
sub
outsl
push
cmp
shrl
shlb
ja
fwait
push
pop
rcrb
mov
test
push
push
shrl
cmp
xchg
jns
addr16
in
iret
push
mov
jo
add
xchg
sahf
icebp
add
addr16
push
icebp
add
adc
call
inc
mov
insl
xor
push
xor
and
mov
push
adc
add
loope
lds
sbb
add
out
jge
xchg
ss
loope
add
ljmp
out
and
jne
aaa
push
adc
xor
test
test
mov
outsb
sub
pop
rcrb
lcall
jbe
icebp
dec
mov
adc
mov
or
sub
test
pop
push
xchg
push
adc
lea
inc
ret
xor
popa
mov
push
shlb
sbb
add
shrb
pusha
push
scas
sub
xchg
dec
mov
negl
ret
mov
add
jo
jle
sbb
ds
push
mov
pop
stc
aas
cmpb
cwtl
jmp
ds
sub
jno
loop
aaa
or
inc
test
stc
sub
pusha
leave
gs
and
jmp
sbb
pushl
and
inc
push
in
imul
cmp
pusha
push
inc
mov
or
pushl
push
pop
and
mov
andl
sbb
add
pop
pop
xchg
add
test
mov
and
and
cmpsl
pushl
push
xor
add
xchg
or
out
mov
add
imul
cmp
add
pusha
xor
or
mov
or
add
add
dec
push
in
mov
inc
mov
dec
pop
adc
iret
nop
push
xchg
cs
cmp
pushf
pop
pop
xor
call
lods
or
adc
inc
or
pop
push
pop
enter
rolb
icebp
mov
or
xor
movsb
or
in
stos
out
xorb
imul
sahf
enter
dec
push
or
push
or
stos
ret
sub
mov
pop
sub
xor
fsubl
xchg
les
test
outsb
popf
xor
adc
inc
sbb
and
int
daa
sbb
cmc
sbb
lahf
enter
add
xor
pop
mov
or
mov
flds
int
and
jmp
hlt
mov
jns
andb
and
xor
or
mov
pop
mov
test
pushf
and
lcall
adc
ret
icebp
dec
roll
cmpl
or
xor
imul
movsb
xchg
ret
xchg
mov
dec
adcl
mov
imul
adc
mov
or
pop
add
pop
dec
cli
imulb
push
popa
bound
cmp
xor
fiaddl
sbb
insb
imul
sub
cmp
rorl
loope
sub
xchg
gs
or
mov
push
fidivrl
gs
out
lcall
pop
mov
sbb
or
jne
sub
dec
mov
xor
jge
les
sbbb
fsubrs
loopne
fwait
add
inc
inc
lcall
fstps
stc
inc
sbb
xchg
hlt
fcompl
insl
ds
add
add
add
movsb
xor
std
inc
adc
dec
jmp
mov
shr
sub
inc
add
je
push
fimuls
incl
xchg
or
adc
and
rcl
test
and
sub
mov
add
lods
pusha
mov
jmp
std
cli
add
outsl
int3
and
push
into
rcrb
add
in
and
int3
inc
inc
push
sub
test
stc
inc
inc
sub
adc
fwait
adc
cld
addr16
dec
sbb
test
inc
add
cltd
inc
sub
sub
mov
jne
notl
adc
movsb
sub
jle
add
arpl
inc
cmp
xor
adc
hlt
or
sub
push
ja
test
cmp
mov
mov
mov
jmp
adc
js
xor
pop
jns
out
or
ja
push
ret
fwait
popa
mov
into
mov
push
xchg
xchg
imul
or
add
adc
jnp
sub
stc
add
mov
scas
xor
rclb
rolb
rcrl
adc
xlat
adc
jb
popa
add
adc
or
xor
adc
in
jne
std
addr16
loop
xchg
repz
cmp
jae
mov
inc
jbe
mov
les
jmp
add
mov
push
fstps
adc
sbb
pop
enter
jge
add
pop
add
xchg
adc
mov
mov
push
hlt
cmpb
push
cmp
adc
xchg
jmp
shll
testl
and
push
dec
test
mov
or
or
pop
pusha
lret
addr16
cmp
je
mov
inc
push
sub
cs
pop
pusha
xchg
push
xchg
sub
test
insb
and
mov
and
add
add
out
inc
fdivs
int
dec
loopne
mov
fwait
notb
adc
inc
cmp
cmp
ja
mov
pusha
xchg
cmc
adc
shll
push
es
in
cli
std
cmovge
pop
adc
stc
mov
push
shlb
imul
add
shlb
ret
pop
js
mov
mov
xor
dec
mov
push
cmp
je
sbb
cld
call
xor
or
dec
add
pop
decb
push
push
notb
cld
movsb
mov
and
lods
outsl
test
jmp
or
stos
jnp
jmp
es
sbb
jmp
shlb
sbb
into
shr
adc
pop
mov
dec
cmp
clc
std
sbb
mov
or
dec
mov
in
xor
or
lret
je
outsl
add
aad
dec
xchg
xchg
lret
xchg
jo
lods
aaa
or
int3
dec
xchg
mov
les
push
aas
sbb
sub
cmp
and
cmpb
arpl
adc
dec
push
xor
or
pop
cmpsl
adc
push
push
loop
xchg
mov
xchg
adc
cmp
xor
xchg
xchg
adc
je
sub
xchg
xor
ret
jbe
sub
jge
jbe
test
xor
dec
sub
fisttpll
lock
hlt
popa
hlt
fstpl
fldl
notb
mov
loopne
les
adc
call
add
pop
cmpsb
add
or
bound
jecxz
add
xchg
pusha
push
push
insb
aas
and
adc
sbb
push
sar
fsubrl
push
xor
pop
es
adc
out
out
out
fildl
cmpl
sbb
and
movsb
push
or
pop
fsub
pop
fsubrp
out
in
cmc
mov
inc
mov
in
jnp
adc
jg
add
cs
lcall
or
ret
gs
add
sahf
xchg
adc
sub
dec
je
add
shlb
mov
fisubrl
pop
push
js
inc
sbb
in
push
sahf
cs
push
test
test
push
cmp
dec
xchg
mov
mov
or
insb
xorb
xor
in
shlb
sub
ss
push
jns
push
dec
sub
xor
pop
dec
jb
int3
in
cmp
cld
sbb
data16
stos
push
jns
xchg
ss
xor
sub
sbb
in
pop
push
mov
in
repnz
and
sbb
test
push
lahf
cmp
xor
movsl
pop
jle
or
ret
mov
lock
outsl
dec
dec
cs
sub
fs
repz
adc
xor
push
push
vmwrite
cmp
in
adc
push
mov
shr
xchg
out
adc
cmp
in
in
dec
repnz
cld
lret
in
and
adc
sahf
pop
repnz
push
jle
repz
ss
sub
xorb
loope
incl
sub
mov
pop
sbb
aam
adc
sahf
pop
repnz
adc
xor
push
push
pop
in
adc
jmp
and
push
pop
stc
adc
sbb
ja
out
and
xchg
xchg
out
push
push
push
dec
sub
jns
jo
cwtl
jl
push
es
mov
vmwrite
bound
jnp
mov
shll
adc
aam
xor
loopne
fmuls
clc
and
punpckhbw
cmp
or
mov
push
sbb
jns
enter
inc
and
push
xchg
jl
fsubrs
sub
aaa
leave
fs
push
pop
repnz
push
in
adcl
cmp
add
adc
mov
repz
in
sbb
std
push
push
sbb
xor
repz
inc
push
arpl
lcall
add
jns
out
and
sahf
out
mov
jge
lret
sbb
sbb
out
sahf
out
xor
arpl
jns
test
push
add
leave
lods
push
movb
and
outsb
decb
push
mov
add
aas
jp
lock
les
push
or
inc
mov
mov
or
mov
push
mov
pop
xchg
push
add
dec
stc
imul
cli
sub
int
insb
mov
mov
and
xorb
cld
rol
shlb
fld
inc
icebp
sbbb
pop
sti
lds
xor
mov
lea
jae
cmp
bound
sub
fdivs
inc
nop
inc
adc
jbe
jecxz
push
fstpt
sub
mov
pop
aaa
fstl
inc
mov
aaa
int
push
xchg
cmp
push
xor
cmp
xor
mov
aas
das
add
rcll
dec
scas
add
iret
rclb
mov
and
cmpsl
or
mov
xchg
outsl
call
sarb
sbb
fs
dec
cmp
adc
push
dec
addr16
and
adc
les
pop
cmp
aaa
leave
inc
push
stos
jmp
cmpb
push
fnstcw
sbb
out
add
mov
cmpb
jecxz
sbb
aam
jle
xor
add
jecxz
sbbb
push
adc
sub
enter
jle
jnp
push
cld
ss
in
cwtl
dec
arpl
in
mov
loopne
mov
call
or
fldt
mov
pop
dec
leave
add
xchg
les
stos
adc
add
lret
addl
leave
test
int
add
bound
stc
adc
lock
cmp
mov
and
adc
adc
test
sbb
cmpsb
adc
aad
xlat
sbb
push
enter
add
or
mov
pop
or
mov
push
out
or
sbb
adc
popa
roll
sub
leave
add
push
and
or
and
adc
sub
sbbb
shl
xchg
es
pop
mov
push
das
mov
xor
adc
xor
das
push
add
dec
sahf
inc
notb
cmp
add
les
in
call
leave
in
roll
xchg
add
mov
push
push
xor
sbb
or
add
or
sub
xchg
xchg
inc
lret
push
es
sbb
mov
cmp
adc
loope
or
sbb
loopne
sti
test
add
push
xor
leave
lock
add
ffree
adc
mov
mov
shr
adc
mov
fidivl
jge
cmp
adc
adc
adc
cmpsl
jo
add
outsl
sub
mov
add
add
stc
les
push
sub
push
lods
pushf
adc
add
cld
add
xor
inc
add
pusha
inc
icebp
inc
or
je
frstor
or
xchg
aaa
or
add
or
xor
add
xor
mov
and
dec
aam
pusha
dec
lods
cmpsl
adc
jo
xchg
mov
adc
mov
dec
sahf
add
pusha
dec
cli
clc
lcall
test
lcall
stc
pop
mov
and
scas
xchg
add
adc
dec
adc
add
adc
rcr
sbb
adc
pop
pop
sbb
jbe
push
or
sub
adc
mov
mov
adc
leave
orl
cmpsl
mov
jg
ret
mov
scas
pop
pop
adc
cli
pop
es
das
jl
add
leave
sbb
mov
and
add
xor
test
push
leave
add
pop
or
inc
pop
and
roll
adc
xor
lods
add
or
mov
pop
add
icebp
sbb
xchg
mov
xchg
mov
imul
add
fs
pop
push
or
mov
or
and
push
jne
test
mov
push
sbb
push
jg
adc
out
shrl
adc
xor
bound
pushf
or
push
or
push
xor
jno
cmove
push
inc
lds
xchg
lods
flds
rorl
aaa
jecxz
inc
addl
push
mov
test
add
das
add
add
and
add
add
push
inc
es
popa
imul
lods
jmp
inc
popa
sub
test
or
sbbl
in
jl
ds
mov
pop
cmp
fldcw
mov
pop
cmpsl
xor
roll
push
dec
insl
int
imul
mov
repz
rcrl
jne
enter
adc
add
stc
adc
aaa
in
jno
inc
push
ja
jge
cwtl
inc
loopne
or
inc
jo
movsl
lret
shll
dec
repz
and
jb
or
sbbb
dec
cltd
dec
test
or
jns
xchg
ja
movsl
mov
mov
cmpsl
sub
test
fisubrl
aaa
xorl
int3
test
push
testl
inc
pop
bsr
xchg
adc
push
inc
add
mov
jno
scas
movsb
inc
add
and
mov
sarl
pop
insl
cmp
movsl
les
mov
or
popf
sub
mov
push
sub
test
add
imul
push
inc
xor
mov
fmull
mov
push
sbb
and
push
fbld
test
jp
adc
ret
xchg
add
iret
sbb
push
and
jnp
xor
and
xchg
push
inc
insb
sbb
mov
push
xor
push
jge
pop
shr
xor
xchg
xor
jmp
sbb
mov
push
mov
rorb
jge
cmc
subb
xchg
adc
or
call
or
sub
rclb
les
jge
fwait
std
xor
sbb
push
jecxz
js
fsubrl
xchg
sub
mov
cmp
push
mov
and
lea
xchg
push
inc
inc
add
sbb
inc
add
lret
xchg
push
pusha
fnstsw
push
and
push
loopne
lahf
xlat
pop
in
sub
pop
es
loopne
push
int
daa
aad
sub
mov
adc
add
stos
popa
sbb
mov
lcall
ds
fdivl
je
cmpb
xor
imul
pop
sub
push
adcl
std
adc
std
imul
add
pop
mov
aas
inc
inc
xor
push
loopne
inc
imul
rorb
or
adc
jl
xor
jae
jmp
cmp
jl
or
sbb
popa
jp
adc
out
decl
cmp
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
cld
push
pop
cltd
idiv
cmpb
in
repnz
ljmp
jno
mov
in
popf
dec
push
inc
inc
pop
call
movsb
dec
mov
mov
xchg
cmpsb
inc
xor
jbe
sub
adc
rclb
pop
fbld
shrb
push
test
orl
inc
in
mov
in
in
je
hlt
incb
loopne
or
xlat
xchg
lret
cmp
mov
dec
ficomps
cmp
hlt
cmp
xchg
fcompl
push
push
push
mov
mov
aaa
gs
sbb
adc
movsl
jmp
mov
fmulp
shrb
push
les
push
pop
dec
ljmp
push
sub
mov
xchg
cld
or
pop
ljmp
dec
inc
fisttpll
leave
push
icebp
pop
lret
jo
mov
push
enter
inc
sbb
pop
sbb
cmp
call
sub
xchg
aad
and
mov
test
and
mov
push
test
dec
imul
push
pushf
pop
mov
or
cmpsl
pop
lock
and
in
dec
jbe
xor
push
das
push
insl
cmpsb
mov
or
xor
adc
lds
repnz
adc
jge
push
push
push
pop
pop
xor
push
stos
pusha
popf
idivb
js
movsb
sti
fnstsw
push
pop
push
push
dec
add
cltd
les
stc
sbb
rolb
enter
rorb
sbb
out
cmp
xor
pop
int
dec
imul
in
nop
push
fdivs
sub
pop
fmuls
xor
aam
and
jb
repnz
adc
sub
aam
rcrb
shlb
jae
adc
and
mov
loopne
test
ret
or
and
fsubr
rclb
aam
enter
cmp
dec
in
mov
iret
arpl
cltd
es
add
and
dec
or
inc
daa
push
inc
dec
sbb
leave
sub
add
jge
xorl
inc
mov
sbb
dec
nop
adc
orl
xor
fs
jo
push
adc
movsb
pushf
xchg
inc
cmpsb
dec
xor
push
in
enter
loope
fucomp
jns
push
lods
fsubr
call
int3
sub
mov
lea
rcrb
int3
imul
add
dec
int3
xchg
dec
mulb
mov
clc
dec
add
or
cmp
test
xchg
jno
fldt
xor
and
nop
imul
popa
loopne
leave
popl
mov
pop
push
dec
cmp
sbb
jecxz
dec
xor
push
jecxz
inc
movsb
fmull
fildl
or
add
icebp
hlt
dec
push
test
jecxz
mov
clc
lcall
adc
jge
push
jo
jno
pop
cmp
pop
data16
mov
mov
pusha
and
add
add
push
movsb
cmp
push
or
pop
push
mov
cs
dec
dec
jne
push
jmp
add
test
in
push
inc
inc
loop
shll
xchg
js
sub
or
int3
aam
cmp
mov
dec
jae
or
stos
jae
and
pop
and
jle
xor
decb
movsb
movhps
push
pop
sbb
out
das
lods
adc
ret
dec
mov
loopne
jo
sbb
pop
cmc
dec
mov
and
add
sbb
cmpsb
pop
cmp
and
cmp
into
imul
fiadds
jbe
add
xor
or
frstor
rolb
js
mov
movsb
push
in
mov
cmp
in
neg
fwait
jp
ljmp
add
orl
call
and
shll
sub
cmp
jp
add
and
adc
shrl
jl
push
add
add
adc
mov
mov
sbb
jmp
push
push
add
inc
or
in
xor
jg
mov
pop
cmp
mov
inc
dec
fwait
iret
rcrb
xchg
insl
sbb
xchg
lds
add
mov
mov
fldenv
andb
in
and
dec
jae
mov
xchg
sbb
fiaddl
daa
sub
pop
shlb
jo
dec
pop
lcall
pop
cmpsb
clc
dec
xor
or
mov
cmc
dec
add
jge
les
and
fsubrs
cmp
ja
pusha
push
pop
scas
add
inc
mov
push
rclb
rcrl
in
movsbl
and
add
mov
cmpsl
js
add
mov
hlt
cli
sub
mov
adc
aam
repz
push
movb
loop
mov
int3
pop
lock
add
das
pop
hlt
push
fnstcw
add
push
or
inc
call
sbb
aam
xchg
iret
push
mov
fldcw
outsl
sub
sub
nop
aam
xchg
shr
sbb
aaa
out
cmp
xor
cld
stos
and
sub
or
sub
push
jno
push
stos
sarb
mov
jl
add
add
pandn
jl
jne
cmp
stos
mov
push
loopne
push
sbb
mov
cli
or
jp
add
pop
cld
jl
or
aad
enter
and
loopne
cmp
jne
mov
push
mov
or
dec
push
js
push
sub
aam
mov
inc
fdivrl
sub
jecxz
sub
jge
test
adc
sbb
stc
fwait
dec
or
lea
push
or
add
and
and
lea
and
fadds
popa
adc
adc
fdivs
ret
xchg
cmp
aaa
push
int3
adc
push
aas
add
push
jnp
mov
nop
cmc
cmc
and
jo
test
add
shrb
or
or
flds
cmp
xchg
mov
ss
lds
push
addb
push
out
imul
in
rorb
call
mov
inc
xor
gs
dec
or
add
xor
xchg
nop
insl
push
inc
mov
lcall
and
jae
sub
pop
push
push
sbb
stos
movsb
in
adc
cmpsl
sbb
arpl
pop
and
rorb
xchg
adc
cmpsb
mov
in
add
push
and
das
add
mov
mov
and
add
xor
mov
popa
aam
and
data16
inc
xor
xchg
mov
and
push
sub
jne
ja
sbb
adc
jmp
daa
xchg
cmp
fbld
xchg
cmp
subl
lods
jp
rorl
cmp
shll
aam
cmp
push
scas
pop
mov
cmp
cmp
sub
es
jb
cmp
adc
pop
rcl
mov
mov
cmp
enter
shlb
cmpsl
movsl
or
sbb
rolb
fadds
inc
int
and
mov
add
int
iret
mov
add
adc
shl
dec
and
enter
mov
enter
clc
out
adc
pop
ss
cld
into
add
add
inc
pop
add
inc
dec
sti
mov
sbb
mov
jecxz
push
lods
jl
cmp
jne
rclb
sub
jae
jmp
cmp
xor
pop
roll
jo
xor
sbb
pusha
xchg
movsb
adc
pop
in
fidivl
xor
mov
inc
daa
and
push
in
xchg
xor
insb
dec
data16
mov
or
jl
mov
adc
in
sbb
sbb
pcmpeqb
lret
movsl
roll
jo
and
push
cmp
imul
inc
popl
xor
add
and
clc
inc
in
pusha
fisubrs
jecxz
sbb
add
ret
sbb
adcl
lea
and
push
sbb
push
pusha
cmp
mov
fldenv
loope
xchg
sbb
loope
mov
fistpl
sub
shl
pop
fadd
sbb
in
in
sbb
in
ret
roll
and
mov
dec
out
push
mov
xchg
push
rcrl
inc
pop
movsb
lock
test
inc
aam
js
es
dec
imul
pop
or
add
sub
pop
fsubs
cmp
movsl
inc
inc
mov
adc
xor
mov
div
out
push
mov
mov
inc
sub
mov
adc
pushf
dec
and
mov
dec
enter
iret
es
test
jp
xchg
mov
push
pusha
jmp
mov
das
repnz
dec
lret
xorb
push
mull
push
cmp
pop
mov
pop
mov
shr
or
mov
mov
add
push
jmp
xor
adc
adc
mov
orl
push
pop
fs
arpl
js
push
or
loop
mov
frstor
test
jne
xor
mov
and
rorb
movsl
stc
fwait
pop
out
ficomps
sub
xchg
fwait
sub
sub
pop
sbb
xor
push
push
jne
sbb
lret
mov
mov
push
dec
mov
pop
inc
sub
sub
or
iret
in
push
push
sub
cmp
daa
push
test
add
test
cmpb
cmp
jne
xchg
pcmpgtb
mov
fisubrs
and
pusha
ljmp
dec
push
add
cmp
add
mov
loope
ja
lds
add
push
cltd
aaa
and
pusha
jb
or
pop
add
jmp
mov
ret
fstl
fistpll
add
lods
mov
fs
cmp
pop
or
addl
gs
cmc
dec
or
push
arpl
in
dec
add
or
and
sub
xor
cmp
jae
les
mov
aad
notl
mov
pop
mov
mov
fiadds
jmp
in
fisubrs
sub
jbe
push
or
out
xlat
jne
adc
jle
aad
ret
faddl
xor
push
cwtl
loope
dec
adc
push
fs
andb
out
das
xor
pop
sub
insl
pop
push
jae
add
and
sarb
cmp
sub
inc
mov
push
fiadds
leave
cmp
imul
cwtl
mov
and
mov
cmp
or
sbb
and
pop
outsb
in
xor
push
inc
lods
arpl
xchg
rcr
adcl
push
or
and
pop
push
sbb
jo
add
push
jne
pop
and
test
sub
adc
dec
add
pop
fldl
sub
shlb
pop
add
add
push
inc
sub
add
adc
and
mov
dec
add
cmp
in
cmp
dec
sub
out
loopne
and
cmp
xor
in
addl
call
or
push
xchg
mov
xchg
cmp
or
fidivl
jo
inc
mov
in
sahf
adc
add
push
push
mov
inc
or
pop
or
add
push
sbb
dec
mov
into
and
or
int
ds
and
pop
adc
addb
xor
add
daa
sbb
xor
shufps
sbb
jg
les
lods
je
pop
or
movsb
pop
fstpl
test
pop
fs
inc
mov
shlb
sub
adcb
ret
shlb
and
pop
daa
roll
cmc
push
nop
and
or
fimull
push
mov
push
cmp
mov
xchg
sub
xchg
adc
add
push
push
rcrb
ret
lock
sbb
fwait
sub
les
adc
xchg
shrb
pop
pushl
shrb
lods
call
movsl
mov
aaa
cltd
add
push
arpl
fadds
into
sbb
sub
sub
push
push
cli
pop
pop
or
sub
sub
adc
enter
es
loopne
sbb
outsb
sbb
or
cmp
pop
add
push
pusha
cmpsl
mov
insb
movsbl
sbb
or
xchg
pop
cltd
nop
cmp
insb
xchg
lret
or
push
adc
jp
sbb
and
in
and
and
push
into
sub
enter
or
or
add
add
sbbb
or
and
fcmovb
sub
add
aad
mov
shlb
pop
push
mov
and
or
jmp
or
push
jecxz
mov
aad
cs
sub
leave
nop
fsubrl
inc
insl
pop
icebp
icebp
cmp
dec
adc
inc
mov
in
nop
or
mov
push
cs
push
cmpb
movsl
cmp
fidivrs
rcrb
and
cwtl
mov
pop
lods
nop
pop
stc
and
cmpsl
shrl
sub
ret
sti
lret
push
mov
inc
stc
test
pop
enter
lcall
dec
outsl
sbb
mov
lret
mov
popa
cmp
pop
ret
push
arpl
jns
clc
punpckhbw
lods
push
call
and
inc
xor
mov
iret
arpl
or
mov
sbb
pop
cmp
sbb
dec
sub
sbb
aaa
mov
push
inc
dec
data16
dec
in
cmp
dec
js
sub
pop
lods
dec
inc
and
jbe
xchg
push
dec
rclb
xor
andb
adc
les
sub
dec
push
shlb
cmp
shlb
xchg
adc
mov
xchg
fldenv
cmpsb
hlt
mov
aaa
daa
inc
pop
insl
mov
add
les
inc
pop
sub
and
jmp
sub
adc
push
cmp
cmp
data16
les
sub
and
mov
ret
sbb
mov
and
jmp
pop
add
xor
and
out
inc
mov
lock
adc
scas
and
and
enter
adc
sub
and
lret
leave
pop
shll
and
stos
sbb
jns
jnp
fmull
clc
sbb
fimull
and
mov
cwtl
cwtl
add
add
sub
mov
mov
mov
push
dec
sub
xchg
adc
sub
cmc
enter
and
sbb
stos
add
sub
int
dec
fcomps
add
and
sbbl
xor
ret
adc
pop
pop
cmp
and
push
add
mov
lret
in
sub
in
add
adc
push
cmc
mov
sbb
shrl
jecxz
pop
andl
lock
mov
mov
add
pop
fs
or
push
adc
xor
push
inc
addb
test
addr16
enter
adcb
test
dec
sub
dec
dec
sbb
aad
mov
je
incl
push
push
ja
rolb
addb
sbb
adc
ret
pop
sub
xchg
sub
adcl
cwtl
stc
add
cmp
mov
fsubrp
ror
sahf
fwait
dec
loopne
shll
cmp
orb
mov
or
loopne
test
add
inc
orb
bound
pushf
dec
js
call
mov
mov
fcompl
dec
imul
imul
push
pop
xor
add
lods
adc
sub
fs
xchg
fwait
sbb
mov
addr16
lret
test
push
das
aam
dec
mov
into
clc
or
dec
pop
das
aad
test
pop
or
adc
add
mov
loope
add
je
imul
insb
push
test
test
push
or
inc
out
mov
jne
mov
incl
dec
add
mov
and
push
mov
pop
push
mov
adc
test
inc
cmp
inc
jb
pop
pop
nopl
cld
andb
ja
sbb
test
and
or
add
xor
push
mov
inc
dec
das
scas
sbb
add
and
push
dec
cmpsl
shlb
dec
in
pop
lcall
inc
loopne
sbb
clc
mov
jp
pmaxub
ja
or
pop
cmp
xor
mov
pop
jbe
pop
sbb
into
push
sub
add
mov
push
es
in
ffreep
add
psubw
negl
or
ja
dec
inc
dec
ret
cmp
or
push
xchg
orb
xabort
or
cmp
add
adc
jmp
pop
lock
cmpl
cwtl
add
jno
adcb
loope
pop
pop
in
inc
cmp
jb
jmp
xchg
cmp
aas
xor
inc
sub
mov
ret
dec
mov
imull
push
jne
push
ljmp
xchg
pop
ret
or
pop
fistl
mov
add
mov
inc
call
sub
dec
mov
pop
push
push
aad
pusha
and
add
das
pop
add
sbb
movsl
mov
adc
jl
or
pushf
xchg
cmpsb
test
repnz
xchg
push
das
dec
test
inc
sahf
xchg
js
es
sub
dec
xor
andl
cld
nop
loope
jmp
adc
or
sti
jl
mov
adc
insb
mov
sbb
pop
cmp
popa
aam
into
pushf
adc
or
enter
icebp
loopne
dec
std
cs
add
sbb
push
add
adc
insb
mov
imul
dec
push
imul
outsb
sbb
pop
jns
xor
sbb
sub
xor
add
sub
aam
sbb
xor
add
xchg
fdivrs
test
inc
push
pop
inc
sbb
xor
fs
inc
adc
scas
push
lahf
pushf
ret
push
std
fdivr
or
push
fstl
fsubrl
mov
js
sub
add
mov
loopne
xchg
add
movsb
mov
std
add
int3
dec
cmp
pop
shlb
aam
mov
xchg
fwait
sbb
imul
push
and
sbb
negb
mov
add
pop
rclb
cmp
ret
lret
test
and
fdivrp
mov
cmp
lea
xchg
cmp
scas
xor
or
ret
mov
cmpsl
mov
xchg
imul
les
push
cmpsl
rclb
loopne
and
ja
clc
dec
jecxz
cmpl
pushl
sbb
jmp
popa
fwait
xchg
popa
movl
lea
mov
ret
mov
iret
les
pop
lea
push
cmp
mov
add
cmpl
pop
and
lea
insb
sbb
jp
push
les
aam
lock
or
xchg
orl
stc
and
push
loopne
xchg
add
fsub
cmpsl
mov
inc
aam
jl
pop
stos
insb
les
lock
and
cmp
enter
scas
and
or
mov
pop
jb
sub
pop
jo
into
sahf
inc
pop
jp
mov
mov
ret
or
sub
sub
in
loopne
imul
pop
mov
sub
arpl
mov
push
and
shl
or
sahf
lods
xlat
addr16
inc
add
inc
mov
push
mov
mov
cmp
adc
call
popa
xlat
lret
adc
enter
inc
stos
cltd
pop
iret
lds
and
loope
push
inc
add
pop
jle
add
ret
xor
stos
sbb
xchg
cmp
mov
adc
jb
or
test
push
pop
or
add
push
loopne
xchg
dec
pop
or
popf
adc
pushf
and
sub
push
je
enter
push
mov
jl
mov
mov
sbb
sbb
hlt
js
push
adc
push
pusha
xlat
imul
mov
xor
adc
cmp
mov
add
out
and
pop
inc
jmp
imul
test
or
mov
jbe
dec
push
push
out
push
push
inc
pop
enter
or
pop
adc
test
setge
sub
test
or
arpl
pop
sahf
sbbl
sbb
jb
ret
shlb
dec
and
incl
adc
push
mov
adc
push
sahf
cmp
mov
fldenv
adc
bswap
xor
fmuls
pop
sbb
adc
in
je
mov
popa
fcoml
xchg
or
fcoml
jne
les
and
ret
sub
inc
jmp
mov
dec
jge
in
lahf
cmpsl
movsl
inc
sbb
xor
and
add
or
dec
movsl
push
test
or
aaa
xchg
jmp
in
dec
cmp
inc
mov
inc
mov
test
test
cmp
flds
gs
sub
in
ret
subb
push
mov
mov
ds
xor
nop
mov
mov
add
mov
movsl
shlb
ja
mov
add
or
xor
testb
inc
es
sbb
push
sub
xchg
jb
fsubrl
sbb
dec
mov
call
call
in
sti
add
insl
cmc
movl
imul
js
add
or
cmp
cmp
jb
push
add
shlb
add
adc
xor
add
fwait
mov
sbb
jne
mov
adc
adc
lret
dec
pop
dec
dec
fsave
rorb
xor
mov
loopne
shlb
fbld
lcall
imul
push
adc
fbstp
lods
enter
in
test
aaa
adc
inc
in
mov
push
xor
push
adcb
sbb
or
sbb
stc
pop
adc
popa
lea
or
push
sbb
xor
scas
cmp
xorl
adc
incl
mov
ret
idivb
mov
shr
out
int3
out
xchg
faddl
xlat
and
push
mov
sbb
pushf
cmpsb
dec
aam
cmp
rorb
add
add
push
int3
ret
hlt
mov
jbe
in
addl
mov
add
lds
cmpsl
sti
into
out
roll
iret
ret
push
int3
jae
sub
xor
jae
mov
jne
fiadds
inc
hlt
push
or
push
aam
or
ds
call
xchg
addb
aad
jle
clc
jl
fiaddl
pop
fs
enter
jp
divb
pop
rep
popa
std
ss
or
movsb
and
fmul
push
sub
xor
pop
movsb
add
push
dec
and
iret
adc
movb
jne
test
popf
call
push
adc
cli
incb
push
mov
add
shlb
push
jmp
push
xor
bound
xchg
rcl
mov
or
sbb
ja
pusha
mov
sbb
lea
mov
ja
scas
lret
mov
add
inc
push
nop
clc
cmp
jne
cmpsb
xchg
add
dec
ja
sahf
popf
movsb
fbstp
jnp
lock
cld
jmp
xor
mov
push
shll
mov
and
pushf
mov
mov
dec
or
sub
ss
mov
push
pop
int
add
lret
jmp
dec
add
imul
dec
mov
mov
sub
jmp
xorb
repnz
loop
pushf
cltd
jne
pop
lret
adc
or
jo
out
inc
push
add
inc
jne
adcl
popf
mov
icebp
sub
adc
pop
mov
pushf
push
sahf
aam
inc
pusha
mov
and
jg
push
neg
pop
sbb
xchg
lock
dec
inc
push
or
adc
mov
push
push
hlt
adc
or
xchg
js
cmp
movsb
jne
sbb
popa
mov
lock
scas
pusha
test
push
lods
loope
jae
mov
and
insb
add
dec
inc
sarb
addl
mov
pop
sbb
cmp
adc
mov
mov
cmp
das
sub
jne
out
cmpsb
subb
sub
adc
sahf
test
xchg
popa
sbb
add
jmp
test
mov
mov
xor
sub
xor
js
xor
fxtract
xor
jmp
lods
push
sbb
push
or
pop
add
sti
orl
into
es
or
inc
jmp
nop
test
ljmp
rep
jmp
subl
adc
imull
push
and
scas
cld
and
fidivl
jns
cmp
pusha
inc
mov
inc
dec
pop
mov
mov
xchg
mov
pop
jmp
lock
filds
xorl
and
inc
and
push
cld
push
xor
push
xorl
add
data16
push
push
push
call
cmp
inc
and
sub
add
inc
inc
push
insb
mov
pop
ret
fidivl
xchg
shrb
mov
xor
push
mov
mov
or
ret
cmpl
jmp
add
lret
imul
call
outsl
mov
adc
movsb
fiaddl
shlb
pushf
pop
add
jnp
ret
mov
lods
sar
outsb
mov
mov
dec
add
inc
push
jne
xor
jae
lods
xor
cmp
cmp
pop
shlb
test
or
scas
adc
add
xchg
and
jb
mov
negl
cmp
movsl
dec
push
push
push
rolb
repnz
push
test
int3
rcr
mov
call
adc
aas
pop
inc
and
add
mov
pop
push
mov
push
push
vmread
and
mov
dec
iret
negb
push
push
leave
cli
insl
xlat
out
popa
inc
loope
push
aad
fmul
pop
pop
pop
jp
dec
ds
addl
sub
mov
pop
push
movzwl
inc
mov
inc
loopne
stc
lock
push
jl
cmp
mov
adc
sbb
mov
or
push
mulb
cmc
lea
cmp
xor
dec
mov
lahf
js
mov
lret
sub
or
mov
fidivl
insl
xchg
pop
xor
in
mov
sbb
repnz
fcoml
daa
rcrb
add
add
nop
andb
les
cmp
cmp
or
faddl
test
push
loop
hlt
or
cli
xor
cmp
mov
imul
stc
inc
cmp
mov
sbb
lret
and
repnz
and
cld
mov
andps
adc
add
fwait
sbb
clc
mov
movsl
jecxz
loope
movsw
push
cld
movsb
aas
es
xchg
or
mov
fnstsw
std
shr
mov
inc
mov
adc
movb
add
push
lea
or
in
jg
push
or
mov
mov
push
inc
cmpb
add
movsbl
xor
test
xchg
mov
ss
push
jge
xchg
jl
jbe
jb
and
push
cld
je
ret
adc
imul
lods
enter
xlat
push
cmp
mov
or
rolb
mov
mov
lods
outsl
repz
insb
les
mov
or
subl
mov
mov
mov
dec
cmp
push
insb
or
cmp
mov
outsl
imul
mov
cmpsl
popf
sbb
out
inc
imul
jp
sub
sbb
subb
push
push
lock
xor
lret
aaa
faddl
mov
sahf
dec
ja
loop
mov
pop
xchg
inc
nop
jbe
add
lds
sahf
add
movsb
jge
or
cwtl
push
add
in
in
add
push
pop
jae
in
or
or
jnp
or
jbe
jae
jae
jmp
or
por
jae
jae
jmp
adc
pop
adc
push
adc
dec
jae
jae
adc
dec
adc
aas
pop
jmp
jae
jae
sbb
xor
jmp
sbb
es
jae
sbb
and
pop
pop
jmp
jo
jae
and
or
jmp
and
add
cmc
fimull
push
pop
push
or
or
inc
adc
mov
push
je
sahf
cld
iret
repz
aam
push
fsub
in
hlt
cld
sahf
out
ds
or
sbb
jns
out
sub
xor
out
inc
dec
dec
push
sahf
out
sahf
pop
pop
bound
jno
sahf
out
jbe
addb
xchg
cltd
sahf
or
fnstcw
add
and
or
or
push
movups
adc
adc
push
pop
sbb
cmp
sbb
push
pop
and
and
aas
or
cld
repz
add
test
mov
xchg
mov
decb
inc
cmp
add
idivl
mov
xchg
pop
xor
cmovb
cld
lea
push
pop
jae
inc
and
push
push
cmp
imul
dec
or
jbe
or
cmp
sub
hlt
xor
sub
cld
dec
inc
pusha
gs
inc
mov
inc
cmp
jbe
int3
lods
adc
bound
das
and
cmpb
push
mov
push
fwait
movsb
cli
push
pop
call
or
push
aas
pop
pop
js
mov
and
mov
push
fbstp
popf
fcoms
add
ret
or
test
pop
fwait
bnd
lods
push
add
mov
je
push
and
jbe
dec
nop
movsl
das
faddl
push
in
cmp
add
or
pop
enter
add
push
test
or
mov
daa
nop
mov
push
push
sub
je
add
xor
inc
sub
xchg
xor
sub
jmp
ja
xor
xor
mov
add
xchg
sub
adc
add
testb
lret
sub
mov
adc
mov
push
and
xchg
push
popa
int3
addl
call
in
outsl
adc
adc
pushf
lahf
mov
sahf
fsubs
jecxz
lock
xlat
jmp
mov
mov
adcl
pop
adc
ret
xor
jno
or
xor
and
cmp
fstpl
je
sub
sub
push
push
dec
xchg
mov
ss
test
outsb
xlat
andl
repz
push
jne
aaa
add
push
inc
pop
loopne
add
dec
or
adc
lock
imul
insl
daa
jbe
jmp
mov
jne
and
mov
adc
jne
jno
inc
stos
daa
push
jo
ss
popa
push
xchg
jbe
movl
in
and
push
or
mov
aad
fdivrl
add
loopne
inc
dec
xor
stc
aas
orl
testb
mov
xor
xchg
je
dec
sahf
mov
mov
push
test
inc
insb
out
xor
xor
xor
out
sub
test
sarl
cmp
add
or
or
add
inc
int
movsb
and
sahf
nop
mov
add
jo
adc
cmp
movb
dec
sbbb
jae
icebp
aam
push
mov
pop
in
scas
mov
addl
ljmp
push
dec
add
push
or
cmp
xchg
dec
ds
mov
mov
xchg
cmpsb
push
xchg
add
movsl
inc
mov
and
test
int3
mov
cltd
or
adc
sub
push
js
push
lock
mov
xor
push
leave
adc
push
aam
sub
test
and
adcb
shr
sbb
test
repnz
faddl
xor
mov
test
movl
adc
add
in
addl
lods
loopne
or
ljmp
push
pop
mov
pop
clc
test
rsm
nop
add
xor
loopne
mov
lcall
jmp
add
nop
mov
adc
dec
lea
addr16
xchg
inc
and
adc
enter
fsubs
add
sbb
adc
inc
icebp
sub
pop
push
stos
push
icebp
aad
push
push
push
lods
js
test
rcrl
sub
jne
add
xor
cmp
lret
xor
mov
mov
sbb
jo
movl
test
mov
or
dec
push
lahf
sbb
inc
and
sbb
inc
push
addr16
lea
dec
xor
xor
daa
push
insl
fimull
add
mov
pop
pop
mov
push
stc
mov
lret
mov
stos
sub
je
nop
test
iret
rclb
in
cli
mov
sub
mov
sub
popa
sub
sbbl
add
inc
dec
mov
mov
xchg
ror
movl
pop
jge
fcompl
push
inc
mov
mov
sbb
pop
dec
mov
or
push
testl
sub
outsl
loopne
mov
es
sub
add
jp
xchg
out
sub
or
lcall
inc
jp
dec
add
and
fldt
ror
fisubrl
adc
dec
inc
ret
xchg
jne
mov
cmpsl
test
dec
jne
mov
imul
movsl
mov
mov
dec
cmp
repnz
jne
jmp
sbb
int
pop
inc
add
adc
pusha
inc
divl
xchg
mov
or
repz
sub
in
aad
pusha
inc
push
outsb
push
movsb
mov
lea
pop
dec
sbb
xchg
xor
shl
inc
add
pop
inc
dec
pusha
inc
sbb
inc
push
pop
jo
aas
enter
je
push
jl
pop
test
clc
cmp
js
inc
mov
cwtl
lahf
pushf
mov
xchg
lret
push
test
gs
outsb
xchg
lods
mov
mov
fwait
movsb
xor
rol
jmp
push
xor
or
lcall
push
sub
movsb
cmpsb
push
pop
or
movb
xor
mov
lar
or
iret
frstor
mov
xchg
cltd
and
xchg
je
jl
and
je
or
scas
mov
push
cmp
jl
sub
xchg
addr16
cwtl
lea
dec
pusha
loopne
je
dec
push
or
inc
push
or
sbbl
das
lods
xchg
push
outsb
outsb
std
jmp
bnd
and
inc
and
mov
push
pop
add
idivb
or
push
add
out
xor
sahf
loope
cmc
push
push
mov
cmp
je
lret
inc
or
jge
and
lret
push
repnz
out
add
sbb
jmp
aaa
ret
addr16
xor
mov
bswap
das
sub
popl
mov
dec
mov
loopne
int
sbb
push
fwait
push
mov
jbe
aas
sub
mov
in
or
call
adc
movsb
pop
sub
ret
adc
sti
jge
add
push
hlt
cmp
jl
cmp
jle
insl
add
int3
ret
cmc
or
and
add
pop
inc
and
pop
adc
fmull
lea
sub
mov
int3
sahf
sbb
jo
mov
lock
sub
ds
push
cmpsl
dec
adc
pop
pop
inc
or
adcb
cmpb
jne
fimuls
or
mov
je
cmp
push
adc
inc
cli
rclb
cmpsb
push
jbe
jbe
add
addr16
cmp
imulb
mov
or
or
subl
adc
lea
jne
mov
dec
ret
repz
mov
sbb
pop
pop
or
dec
ret
mov
out
jl
ret
xor
mov
daa
iret
je
cmp
adc
pop
and
orl
mov
sahf
leave
test
mov
xchg
lods
rorb
in
or
xchg
inc
and
and
hlt
cmp
jns
rclb
call
or
lahf
add
sub
jne
sbb
out
push
iret
pop
aam
mov
or
and
cmp
je
xor
jne
push
mov
out
clc
adc
adc
rol
mov
pop
xchg
add
mov
dec
movsl
or
lods
inc
nop
cmp
loopne
js
test
add
push
aaa
push
rorl
push
sbb
xor
stc
call
les
mov
push
loop
inc
shlb
adc
loopne
xchg
cmc
lock
and
sbb
push
jmp
sbb
push
out
jnp
daa
or
jne
xlat
jmp
inc
jl
cmc
add
leave
test
mov
sub
mov
fnsave
movsl
add
adc
xor
or
push
test
ret
pop
mov
or
jno
xlat
mov
sbb
push
sbb
push
and
int3
loope
cmp
mov
adc
mov
test
push
sub
adc
add
stc
aas
push
push
and
mov
and
insl
mov
xchg
mov
icebp
adc
jo
fdivs
add
jmp
ss
stos
xchg
xor
lods
sbb
mov
xchg
jo
dec
outsl
pop
and
mov
push
inc
inc
jno
loopne
lea
adc
int3
sarl
inc
cld
or
movzbl
sub
ds
xchg
add
and
xchg
lock
xchg
adc
pop
cwtl
fcompl
add
das
or
inc
lods
mov
scas
imul
inc
adc
test
and
add
loopne
bound
ss
mov
adc
cmp
rclb
mov
sti
rolb
push
mov
out
leave
xor
popf
inc
aam
jl
push
test
jbe
or
cmp
add
ret
psubw
push
xor
add
hlt
in
rolb
popf
or
mov
sbb
jne
cmp
jmp
xor
push
jg
inc
sub
and
dec
sub
shlb
inc
pop
imul
pop
inc
dec
and
inc
jo
stos
dec
pop
fsubs
mov
push
dec
ss
jae
push
jle
lock
in
arpl
insl
ret
lahf
pop
orb
loope
mov
xchg
lock
add
xchg
scas
gs
in
ret
fwait
inc
fs
push
pop
xchg
mov
cmp
or
movsb
fdivrs
or
sub
pop
xor
sbbl
xor
mov
and
hlt
cwtl
sbb
pop
dec
lea
push
leave
pop
mov
sub
adc
or
inc
enter
pop
add
dec
in
addl
or
xchg
insb
rorb
cmp
xchg
push
int3
pop
gs
cmp
push
aad
lock
dec
xor
xchg
add
push
dec
sahf
dec
and
je
test
aas
push
add
es
in
movsb
imul
push
cmp
sbb
push
add
inc
or
push
adc
mov
fstl
fldz
fcomp
fnstsw
imul
fsubr
pop
faddp
cmp
dec
test
push
jb,pt
inc
or
and
or
dec
clc
xor
jl
xchg
and
add
jl
test
pop
hlt
nop
xchg
or
xchg
xchg
inc
jl
cmp
pop
fs
push
lea
hlt
push
pop
mov
xchg
jmp
loop
cmc
mov
sbb
es
leave
rcr
push
mov
aaa
ss
fwait
push
icebp
das
mov
adc
clc
decb
dec
fsubs
cmp
mov
pop
mov
faddl
rcr
and
cmp
fcmovbe
inc
sahf
and
cmc
inc
mov
lea
pop
popa
xor
mov
pop
xorl
ss
inc
jne
xchg
lods
mov
adc
ss
in
add
add
adc
and
ja
push
fwait
inc
imul
fldl
inc
xor
and
pop
dec
jmp
fldenv
sub
lcall
and
cmpsl
jge
dec
push
enter
out
ds
imul
in
dec
cmp
mov
mov
sub
je,pn
clc
push
adc
jmp
cmp
scas
pop
mov
push
cltd
and
inc
push
jae
or
cli
bound
ror
lret
jle
lock
pop
mov
sarb
mov
ss
sbb
xlat
dec
or
sbb
inc
mov
dec
jae
test
mov
test
insl
push
xchg
pop
inc
lods
insl
out
or
jmp
dec
fistpl
ja
popf
push
leave
rcrl
fcompl
adc
cwtl
push
fldt
and
fdivrl
push
or
and
insl
rolb
nop
add
ret
cs
rcl
add
xor
jle
push
popf
mov
jge
js
cmp
sti
and
ss
mov
or
fildl
sub
add
mov
xchg
movsl
fs
fwait
mov
cwtl
add
jb
or
aaa
xchg
shrb
je
push
jne
push
push
add
stos
or
pop
inc
mov
pop
cmp
jb
push
or
stos
xor
daa
dec
pop
jb
adc
or
mov
or
div
and
jno
mov
lods
adc
in
sub
xor
fs
fmuls
or
or
jo
sub
insb
xchg
jno
stc
sbb
inc
inc
and
and
fstps
push
jb
testl
fadds
dec
pop
ss
inc
jne
lcall
jne
mov
or
inc
jae
sahf
sub
mov
xlat
cwtl
lods
sub
aam
xor
in
call
bound
sub
dec
sub
test
or
pusha
or
push
lock
pop
pop
push
daa
lock
pop
data16
vminss
sarl
cmp
and
sub
jmp
mov
test
xchg
loopne
mov
rcrl
sbbb
out
data16
loope
adc
xchg
ds
pop
daa
cmp
add
xchg
aam
dec
add
test
pop
jbe
sub
pop
sbb
pop
xor
push
jmp
addb
sub
icebp
and
pop
aas
mov
cmpb
xor
mov
outsl
mov
negl
mov
jae
outsb
pop
es
aam
add
and
or
pusha
pop
ss
test
sub
lock
and
das
fstpt
or
data16
push
and
jb
mov
jg
and
aam
lea
outsb
popa
pop
jbe
hlt
cmp
push
xor
lods
notl
lock
out
mov
add
push
pop
imul
sub
add
int
stos
push
push
push
dec
loope
call
pop
ret
mov
jmp
inc
test
or
add
dec
jmp
lock
orl
and
pop
imul
mov
and
add
inc
test
jle
test
pop
xlat
xor
call
jmp
or
xchg
shrl
adc
xor
je
fiaddl
cmpsb
aam
jb
push
cmp
adc
popa
sub
cld
aam
jb
jg
das
xor
mov
adc
xor
dec
cvttps2pi
and
iret
or
jno
xor
add
ljmp
mov
lods
add
ud1
insl
push
call
add
pusha
daa
int
mov
lock
push
test
mov
pop
imul
aaa
push
push
lods
leave
test
mov
xchg
or
repnz
push
movsb
mov
mov
pop
pop
add
outsb
fmull
dec
orb
cmpsb
xor
push
js
mov
pop
push
mov
pop
mov
inc
pop
sbb
mov
mov
mov
lahf
je
add
mov
loope
mov
int3
lea
xchg
fst
cmp
jne
xor
and
aad
xor
mov
sbb
mov
ret
add
xor
test
cmp
xorb
faddl
inc
or
mov
add
push
sbb
hlt
pop
repnz
or
push
call
stc
mov
mov
call
add
mov
and
pop
add
popf
dec
roll
cmp
xor
push
add
stos
or
in
test
xor
cmp
aam
jbe
add
mov
push
sbb
aaa
stos
decb
push
iret
or
loope
inc
lret
psubsw
pusha
mov
shrb
adc
jl
sub
lock
jge
dec
mov
repnz
inc
sub
adc
lods
fists
mov
cltd
inc
lcall
mov
fmull
rep
add
outsl
test
fcmovu
and
push
add
inc
push
pop
sub
inc
pop
push
pop
sub
mov
dec
fildl
sahf
mov
orb
mov
lock
pop
push
xor
rcrb
xchg
push
dec
and
cmpsl
push
fbld
icebp
add
rcrb
aam
popa
add
out
aaa
dec
rclb
mov
nop
iret
sbb
addl
or
mov
push
adc
jnp
mov
jle
inc
add
push
cwtl
xor
test
test
or
scas
or
sbb
in
xorb
sbb
ret
or
xchg
pop
lret
xchg
clc
orb
jo
push
push
xchg
mov
or
and
adc
rorb
je
lock
fmuls
loopne
dec
sbb
mov
mov
sbb
push
mov
in
lods
test
arpl
add
lods
shrl
sbb
bound
pop
xor
es
fildll
jb
jae
inc
and
and
js
jle
xchg
jae
and
scas
and
movsb
in
add
add
in
aaa
addb
je
mov
sub
stos
xor
cld
push
loopne
jge
mov
adc
les
adc
mov
inc
jno
sub
cmp
push
mov
pop
sub
push
testb
mov
inc
testl
addr16
cmpsl
repnz
xor
push
or
in
xor
or
ffree
movsl
lea
or
push
arpl
pushf
xchg
sbb
add
insl
into
test
push
js
das
xlat
xchg
mov
add
sub
mov
or
xorb
dec
fcoms
mov
or
es
push
adc
iret
shr
add
lret
dec
push
fcoml
inc
or
out
add
inc
imul
xor
mov
sbb
adc
sbb
mov
bound
int
inc
adc
sub
adc
xchg
rorb
or
xchg
pop
and
and
inc
pop
inc
jo
lods
or
sub
cmpsl
push
dec
in
sbb
sbb
pushf
xor
pop
cltd
sbb
out
or
jmp
mov
test
imul
adc
nop
dec
push
lahf
xchg
pusha
pop
add
nop
and
imul
and
push
lock
sub
xor
jb
lods
cmp
inc
call
subb
push
xchg
lods
and
and
loopne
sub
fsubrl
or
dec
sbb
pop
jle
cwtl
xor
cwtl
insl
clc
jae
add
dec
in
daa
lock
push
add
adc
loope
addb
int3
es
or
and
fisubrl
leave
icebp
jmp
cmp
sub
fisubs
test
mov
jg
dec
popa
xchg
sarb
push
insl
subb
mov
pop
push
pop
test
daa
xchg
mov
add
lock
cmpb
pmaxsw
dec
push
adc
ret
dec
or
and
cli
lods
stc
mov
dec
mov
fmuls
mov
in
adc
add
cmc
lret
and
push
xchg
adc
cmp
xor
popa
loopne
mov
add
or
movsb
push
scas
inc
imul
sti
fldl
jge
jne
inc
adc
mov
mov
stos
push
andb
xor
xchg
add
xlat
xchg
xor
cmp
loopne
out
xchg
cmp
mov
and
sub
xbegin
sub
sbb
add
sbb
shlb
fdivl
loopne
dec
rolb
in
fs
push
push
and
push
imul
inc
cmp
inc
mov
add
rorb
int3
mov
add
loope
fcmovbe
lret
or
ret
call
xchg
push
loopne
outsl
andl
and
sbb
daa
fldl
enter
inc
in
daa
jns
add
add
jl
test
cmpsl
or
bnd
or
jno
xchg
insb
js
and
push
dec
cltd
sahf
hlt
push
mov
xchg
lock
add
movzbl
xchg
outsl
xor
sti
xchg
out
xchg
subl
popf
push
inc
and
ret
mov
pop
test
sub
stc
add
sbb
clc
xchg
or
rol
or
out
jl
sbb
push
xor
out
add
or
add
movsb
push
dec
scas
insb
add
push
and
dec
ret
adc
adc
pusha
mov
sbb
punpcklbw
scas
push
mov
sub
push
in
dec
movsb
and
lock
int3
add
adc
je
xbegin
hlt
mov
iret
cmpsb
and
xchg
lods
bound
cmp
jecxz
hlt
hlt
dec
std
aaa
inc
jmp
cmp
cmp
gs
push
je
or
je
cwtl
and
mov
sub
jne
mov
add
jo
cmpsb
ss
sbb
mov
lea
rolb
jnp
push
sbb
pushf
and
imul
xchg
fcmovu
mov
scas
xchg
movsl
movsb
or
mov
mov
and
pop
lea
or
mov
lea
jl
popf
nop
pop
js
xchg
pop
jmp
js
mov
sbb
loop
push
mov
jmp
push
sbb
or
push
mov
inc
adc
or
add
rorb
sbb
lods
fs
stc
mov
movl
cld
mov
mov
idivl
mov
lea
stos
mov
and
mov
sbb
add
out
mov
xchg
mov
push
sub
mov
mov
loop
fcmovnbe
cmp
popf
adc
and
pop
es
mov
int
out
jle
incl
sub
pushl
out
fldl
pop
cmpb
es
stos
loope
cmp
xchg
std
jbe
cmpsl
sbb
push
enter
dec
cmp
and
loop
mov
jle
movsl
adc
clc
push
cwtl
std
jno
xor
outsl
les
mov
pusha
xchg
and
mov
xor
inc
fwait
out
fs
mov
stos
in
adc
subl
cmp
test
jne
rcrl
insb
dec
sti
add
enter
pop
pop
jo
movsl
std
or
or
mov
or
sub
std
or
sbb
cld
clc
or
mov
sahf
std
mov
adc
xor
ds
cli
ja
or
rolb
roll
clc
add
or
push
add
xchg
cmp
push
lea
data16
sbbb
adc
aaa
call
imull
fcomps
enter
rorl
fidivs
lret
cmp
fimuls
cmp
pop
inc
pop
cmp
rorb
pop
add
lahf
mov
lods
mov
push
push
jmp
or
adc
addr16
cmpl
push
mov
pop
adc
mov
xor
or
inc
xor
push
sbb
mov
cli
out
das
jnp
nop
dec
and
rclb
sbb
add
sahf
aaa
jbe
test
jmp
xchg
mov
and
aad
lret
lods
inc
mov
nop
pop
movsb
dec
cwtl
sbb
sub
add
add
shrb
mov
pop
add
mov
sbb
pop
sbbb
fstl
adc
xor
adc
cld
pop
out
xchg
xchg
outsl
rorl
out
inc
fmuls
sbb
loopne
mov
outsb
jne
stos
inc
in
mov
or
inc
lods
xor
mov
push
sub
or
mov
movsb
pop
mov
pop
adcl
mov
rorb
push
les
and
push
fmuls
mov
jns
fldenv
mov
leave
add
cld
add
push
dec
or
pop
and
into
in
inc
dec
out
ret
xor
sbb
pop
add
loop
shl
fwait
sarl
xor
or
mov
in
loopne
push
sahf
lret
add
loopne
sub
dec
xor
push
dec
into
add
mov
lret
je
rcll
call
inc
xchg
fsubl
mov
xor
dec
adc
mov
mov
les
pop
xor
inc
jo
pop
out
dec
mov
mov
outsl
and
sbb
lahf
pop
mov
dec
lret
ret
push
add
push
repnz
add
pop
rcl
dec
movsb
pop
pop
push
aaa
dec
bnd
iret
fs
sub
push
fimuls
insb
adc
js
adc
xor
or
xor
push
xchg
or
ret
add
cmp
loope
scas
xchg
and
in
inc
jae
or
xchg
sbb
jo
and
jmp
nop
lcall
inc
or
daa
push
add
adc
mov
mov
pusha
cs
pop
subl
pop
mov
jns
or
and
and
sub
add
enter
or
inc
pop
popa
jecxz
call
dec
cld
lret
sbb
lock
xchg
mov
les
sub
lods
sub
data16
cmp
mov
sarb
aad
ret
jg
mov
addb
mov
or
sub
lea
jbe
cli
pop
cmpsl
mov
push
push
es
dec
adc
jne
and
mov
jg
jg
ljmp
shlb
mov
ret
cmp
imul
pushf
xor
sti
imul
dec
in
pop
bound
shll
inc
inc
jmp
inc
fs
sub
push
mov
cmp
fadd
icebp
add
call
adc
ja
push
jmp
test
popf
sub
jle
repnz
jle
sub
fimull
mov
arpl
mov
rorl
or
push
ds
je
ficoms
popf
push
mov
js
call
je
test
inc
shlb
sahf
in
test
inc
in
es
inc
xchg
dec
and
jmp
pop
pop
in
mov
repnz
sbb
lods
shl
cmp
and
xor
push
jmp
mov
movsl
shll
mov
dec
mov
inc
subl
fiadds
and
mov
and
xor
push
or
cmpsb
mov
sbb
mov
dec
cmpsb
sub
push
cmp
icebp
push
loopne
mov
les
les
enter
movsl
sub
stos
jnp
in
cmpsl
andl
test
or
sub
lds
call
push
sub
dec
sbb
push
dec
clc
or
je
xor
andl
je
ss
add
jle
mov
sub
sub
jns
sbbb
orl
and
mov
push
push
cltd
fsubs
enter
insl
mov
xor
sub
add
sarb
push
push
dec
cmpsb
push
adc
mov
cmpsl
add
mov
pop
shlb
cmpsb
add
mov
addl
jge
push
subl
or
inc
pop
call
pmaddwd
push
mov
lods
dec
xchg
xor
clc
lahf
je
xchg
add
cmp
clc
fisubrl
and
jne
ljmp
dec
xor
test
gs
pop
cmp
cmp
adc
and
sub
js
jmp
insb
icebp
push
mov
xlat
sahf
pop
test
or
mov
pop
fldl
ret
xorb
stc
or
dec
mov
data16
xor
sub
push
sub
jne
jbe
inc
and
push
insb
inc
jle
jle
int
inc
sbb
mov
fsubrl
sub
push
enter
mov
in
test
add
inc
aas
mov
xchg
rorl
addb
lcall
and
cmp
unpckhps
mov
xlat
pusha
xchg
aas
call
out
or
cmp
test
xor
ret
adc
pushf
push
test
test
cmp
test
movl
fmull
cmp
jbe
add
movsl
rcr
add
mov
or
fstl
test
pop
push
shlb
lock
push
ja
adc
test
cmc
xor
and
stc
xchg
xor
dec
xor
add
les
insb
inc
hlt
dec
adc
inc
mov
mov
add
inc
pop
mov
mov
add
push
push
dec
pop
aam
mov
test
and
movsb
cmc
or
test
adc
out
jp
sbb
mov
and
adc
sbb
mov
int
or
jb
cwtl
repnz
test
lcall
enter
or
lahf
xor
sub
test
add
push
jmp
mov
inc
push
nop
mov
cmp
add
enter
xchg
or
and
ret
mov
add
pusha
and
dec
int
jno
inc
lret
cmp
decb
shrb
add
lret
out
pop
pop
lahf
inc
popa
mov
call
lahf
xchg
or
fldl
sahf
adc
lcall
or
and
cvtps2pi
push
inc
test
decl
das
ss
sbb
andb
es
xchg
dec
loopne
adc
pop
jmp
mov
roll
shlb
mov
xchg
mov
push
adcb
decb
sbb
xchg
popa
filds
jns
pop
pop
add
pusha
rcrb
and
inc
mov
int3
push
push
add
mov
or
and
adc
xchg
pushf
and
and
sbb
push
and
dec
js
lea
push
adc
push
dec
movsb
xchg
inc
cmp
sub
jp
and
push
inc
daa
inc
xor
push
scas
or
addl
xor
jo
cmp
test
js
or
aam
cmp
cmp
push
int3
or
add
push
aas
mov
mov
and
fdivrs
jmp
push
and
aaa
or
data16
add
inc
sub
sbbl
mov
add
sbb
mov
or
rclb
mov
movl
aas
loopne
es
insb
in
mov
jl
movsb
push
out
mov
or
xor
pushf
sub
cwtl
push
inc
aaa
stos
lock
mov
inc
adc
jo
loope
pop
cmpsl
es
popa
sub
icebp
cmp
setno
iret
or
fs
test
sub
dec
xor
jns
and
xor
pop
call
mov
lea
cmp
mov
xor
cmpsl
mov
and
pop
lods
jbe
adc
push
pop
es
xchg
in
les
dec
sbb
mov
add
sbb
add
mov
bound
mov
je
and
enter
and
cli
inc
push
movsb
push
sbb
mov
int
mov
push
sbb
jo
ror
pop
incb
fmul
and
pop
mov
xor
movl
mov
xor
daa
mov
jns
add
sub
test
dec
adc
in
cmp
or
mov
popa
mov
movsb
push
mov
mov
cwtl
in
push
mov
es
xchg
xor
shr
test
mov
mov
mov
mov
movsb
mov
adc
dec
and
popf
dec
rcrb
call
push
fdivrs
add
iret
mov
mov
jo
outsl
pusha
pushf
mov
mov
inc
xchg
ret
sub
or
pop
add
dec
xchg
mov
and
push
cmc
jbe
push
sub
xchg
dec
je
icebp
xor
test
inc
jp
and
push
dec
or
fstp
shlb
lahf
ficoml
jne
mov
dec
inc
adc
mov
push
add
and
sarl
add
sbb
es
xchg
and
loopne
xor
push
ja
inc
insl
lea
pop
movsb
test
or
into
std
jmp
scas
ss
dec
pop
aam
call
mov
stc
call
out
test
cwtl
sbb
lods
popa
dec
push
push
icebp
or
add
inc
hlt
test
xchg
gs
push
subl
sbb
push
sub
xlat
aaa
pop
mov
cmp
dec
mov
xchg
xchg
xchg
cmc
fwait
push
dec
fst
icebp
sub
mov
push
or
pop
xor
mov
or
lods
xchg
je
inc
jle
loopne
push
jmp
or
arpl
inc
and
mov
test
je
jmp
cwtl
icebp
out
repz
sub
fadds
jo
and
aaa
push
adc
xchg
mov
lret
adc
pop
and
adcl
jns
push
mov
sub
ret
pop
pop
adc
dec
stos
fstps
pop
dec
arpl
pop
dec
cmp
inc
popa
and
xor
dec
nop
dec
lcall
xchg
stos
dec
inc
pusha
xchg
adc
sub
pop
cmp
cmp
je
jp
add
in
dec
xchg
dec
add
inc
jbe
inc
mov
out
stos
sbb
ja
dec
je
or
clc
inc
call
gs
pop
dec
cmpsl
test
jb
es
int3
adc
add
ss
adcb
int
fsts
sub
push
icebp
pop
popf
mov
stc
xchg
cmc
test
sbb
imul
xchg
mov
pop
push
and
int
push
jmp
fisubl
fstpl
jnp
add
icebp
xchg
ja
daa
call
mov
push
mov
add
shlb
or
inc
adc
sub
dec
ret
fcomp
dec
push
jbe
dec
add
mov
lods
mov
adc
xchg
js
movsl
pop
adc
fs
or
push
insl
cmp
enter
fistpl
nop
dec
add
sub
in
addb
mov
pop
js
push
push
in
movsb
add
lahf
sbb
mov
fst
adc
xchg
dec
add
movsb
push
xor
icebp
daa
dec
js
out
jne
or
xor
hlt
push
jle
mov
sub
push
pop
mov
sub
inc
ss
cli
es
push
rorb
sbb
push
sbb
cld
mov
jbe
push
enter
jecxz
sub
arpl
pushf
mov
popa
lea
pop
and
insb
mov
or
in
push
ret
mov
sub
mov
out
pop
or
movsl
jg
and
in
and
jg
movsb
repnz
mov
and
jmp
pop
and
fsubrl
sbb
xorl
or
cmp
fdivs
rol
xor
das
dec
enter
je
pop
push
push
mov
scas
or
xor
clc
and
xorl
pop
dec
ror
roll
sbb
shrl
xchg
adc
push
pop
jp
bound
ret
test
adc
icebp
add
pop
or
cmp
test
leave
push
or
imul
movsl
in
movsb
push
and
xor
lods
loopne
sub
and
js
iret
rclb
push
lahf
xchg
jb
or
pop
inc
or
add
popa
pop
push
inc
add
dec
inc
out
cs
call
jmp
sbb
jns
cld
aam
inc
sub
mov
das
push
xchg
sbb
cmp
sub
and
repnz
repnz
repnz
pop
or
cltd
inc
or
lret
inc
dec
fadd
push
add
decb
jg
sub
push
movb
push
adc
mov
jne
push
scas
xor
mov
add
jg
pop
xchg
rorb
ret
ss
lock
jge
adc
gs
cmp
add
sub
mov
jl
mov
mov
rcrb
movl
mov
or
jmp
add
xchg
dec
cmp
or
ds
jne
push
add
in
sbb
add
sti
mov
or
jecxz
lret
fidivrs
sub
out
adc
sbb
pop
xchg
pop
push
dec
out
jle
push
push
outsb
dec
pop
pop
test
adc
aas
in
push
sub
cmp
mov
pusha
adc
add
sbb
push
mov
dec
mov
add
pusha
stos
cwtl
orb
ds
inc
cmp
popa
outsl
vhaddpd
icebp
pop
mov
push
in
xorl
push
test
xor
dec
or
push
jo
mov
push
pop
and
add
je
push
xlat
adc
adc
push
enter
shl
push
or
adc
pshufw
cltd
jmp
push
fwait
in
stos
sbb
adc
xor
int3
adc
pusha
sub
imul
bound
aas
add
shll
movsl
xor
add
cmp
push
cmpsb
pop
sbb
xor
in
add
stc
data16
cmp
push
stc
gs
pusha
or
or
sbb
xchg
push
sbb
sub
adc
outsb
xor
xor
pop
or
push
stc
rclb
add
push
sub
lds
jo
sub
imul
movl
jo
int3
call
push
out
inc
push
cmpsb
dec
add
shlb
fs
sub
adc
xchg
arpl
addl
sbb
inc
arpl
hlt
mov
xchg
jge
adc
mov
test
dec
subl
pop
les
mov
daa
sub
enter
popa
cmpsl
pop
fwait
loopne
mov
and
pusha
adc
lar
mov
addr16
rorb
inc
addb
pop
loopne
and
repnz
sbb
cmp
push
loopne
sbb
pop
in
push
fistpl
dec
fwait
jno
inc
int
in
pop
inc
fsubl
mov
sbb
test
adc
imul
js
mov
add
mov
mov
insb
aad
rolb
dec
cmc
ret
mov
pop
arpl
out
int
jne
shll
add
rorb
inc
faddl
adc
mov
mov
pusha
xchg
xor
outsl
pop
inc
adc
push
outsl
adc
cmc
cmp
add
mov
or
adc
testb
fdivs
add
adc
in
adc
and
xchg
jnp
mov
fucomi
jo
pop
lea
jbe
dec
push
scas
push
in
xor
nop
dec
pusha
mov
rol
mov
ror
xor
ljmp
xor
sub
jnp
xor
shr
xor
add
add
dec
orb
add
mov
sarb
fs
or
jae
or
clc
push
shll
pop
call
add
aam
sub
or
add
stos
mov
ror
cli
fisubrs
shrb
and
and
xchg
push
aam
aaa
adc
xor
push
fs
xor
repnz
repnz
movsl
rcrb
or
mov
neg
push
or
xlat
ret
rcl
add
add
push
rol
sub
add
add
in
imul
aam
call
push
scas
sub
ljmp
push
lcall
add
push
sub
dec
shll
fcomp
loopne
jae
imul
lret
xor
call
xchg
shl
in
push
cmp
jns
mov
sbb
push
bound
pop
mov
or
cmp
pop
aaa
mov
loopne
shll
cltd
call
xor
loopne
loopne
in
dec
in
call
jo
loopne
xor
sarl
rcl
xorl
xor
cmp
int3
popa
mov
into
add
mov
push
xor
and
and
out
iret
or
out
into
add
and
shrb
inc
adc
orl
mov
addb
pop
inc
inc
jo
ret
push
jo
rcll
add
mov
cwtl
pusha
lcall
mov
adc
push
loop
sti
rcrl
mov
add
add
pop
bound
jbe
call
insb
fisttps
or
clc
jp
push
and
add
inc
lcall
inc
nop
cmpsb
imul
int3
popl
rolb
inc
add
aas
mov
xchg
cmpsl
rorl
and
stos
addb
aam
aaa
xor
and
dec
sub
dec
shl
call
lret
inc
inc
shr
rolb
inc
or
push
xorl
push
push
push
xor
shlb
rcrb
inc
sub
dec
xchg
sub
xchg
pop
orb
dec
add
or
xor
jb
push
sahf
dec
dec
dec
or
pop
mov
xor
push
push
movsb
sub
xchg
xor
adcl
push
and
or
push
push
rorb
pop
cmp
xchg
or
add
pop
sbb
push
dec
mov
push
cmpsb
repnz
rolb
push
xadd
or
xchg
or
pop
lcall
add
inc
inc
pusha
and
sbb
pop
mov
rclb
adc
orb
rorl
loopne
jno
and
cmpsb
imul
dec
dec
and
xchg
icebp
stc
stc
stc
mov
das
add
cmp
xchg
inc
push
sub
orb
dec
cmpsb
imul
fcoml
sbb
jo
adc
in
pop
in
out
push
sbb
sub
xor
or
add
sub
add
sub
mov
movb
dec
loope
incl
pop
std
add
xlat
push
lea
cmp
pop
cld
sub
push
insb
inc
mov
mov
pusha
adc
enter
aad
pop
jmp
jp
sarb
rol
and
or
or
mov
adc
imul
push
inc
jae
mov
adcl
mov
sub
mov
lea
jmp
std
stos
mov
sub
out
mov
add
ret
dec
or
mov
dec
jne
pop
lock
in
ss
add
mov
sbb
aas
jl
sub
mov
pop
addb
clc
aaa
jbe
or
fs
ljmp
dec
popa
xor
push
jae
push
pop
push
adc
xchg
sub
sub
stos
or
scas
cli
popf
lods
mov
or
mov
push
std
fldt
pop
loopne
ror
mov
testl
ljmp
mov
dec
pushf
xchg
push
xor
push
adc
mov
movsl
inc
mov
aam
and
aad
push
daa
xchg
cmpsb
and
inc
add
mov
add
dec
lea
add
ss
jge
repz
push
lods
in
mov
mov
mov
or
sub
inc
in
sarb
dec
and
mov
rcrb
dec
fcoms
inc
sub
mov
adc
je
loope
adcb
stos
or
add
push
lods
mov
scas
sbb
or
mov
mov
mov
andl
or
and
and
xor
cs
in
addr16
add
dec
add
xor
sbb
adc
and
jo
dec
xor
inc
push
and
and
loopne
or
je
sub
jle
fistl
ret
or
pusha
ljmp
mov
sub
adc
xor
scas
sbb
xorb
mov
inc
mov
movsb
pop
ret
dec
dec
push
stos
popa
adc
adc
push
sub
and
dec
fistpll
fildll
cs
pop
push
sbb
inc
or
adc
jno
sub
pusha
jnp
inc
std
push
mov
add
adc
push
xor
xchg
cmpsb
std
xor
pop
cmp
sub
loopne
cmp
add
add
gs
adc
and
add
mov
cmp
dec
mov
or
dec
add
add
jae,pt
dec
jle
es
lds
push
ret
pop
push
push
ds
loop
enter
insb
pusha
unpcklps
imul
or
cld
xor
sti
jo
cmpl
hlt
mov
scas
and
xor
sub
outsl
or
and
icebp
push
lds
mov
loope
adc
and
push
mov
fildl
ret
xor
or
scas
fstp
sbb
test
popa
push
jmp
adc
bound
divl
and
add
test
popf
mov
cmpsl
sahf
adc
mov
cld
jnp,pt
or
sbb
cmpb
mov
fsubl
xchg
insb
add
push
add
xor
mov
jb
mov
repnz
outsl
jmp
inc
lock
fistl
imul
testb
pop
inc
xchg
adc
or
insb
loopne
or
lea
mov
or
cmp
or
push
inc
jmp
mov
jo
pop
lea
or
fsubrs
pushl
lock
and
imul
adc
mov
cmp
lret
mov
aas
mov
cmp
push
cmp
enter
push
pushf
sbb
jnp
test
xor
cmp
xor
xor
and
push
push
dec
iret
and
xchg
mov
xor
je
and
outsl
cmpsb
dec
adc
sub
push
and
inc
scas
jp
fstps
cmp
xchg
in
es
or
or
andl
xchg
or
cmp
xchg
shr
in
and
xor
add
push
pop
mov
push
popf
or
testl
jbe
xorl
pop
hlt
out
dec
mov
or
test
xor
out
adc
and
movsb
gs
filds
mov
push
xchg
and
mov
or
push
pusha
outsb
xchg
adc
cmp
cmp
push
sbb
adc
and
sbb
or
jle
jo
out
fistl
dec
xor
push
pcmpgtd
adc
in
into
pop
or
sub
leave
sub
mov
rcll
xchg
adc
and
fsts
cli
dec
idiv
push
xchg
test
jbe
push
push
cmc
std
mov
pop
adc
es
jae
push
jb
push
mov
fwait
cmp
jmp
jmp
sub
jbe
shrb
mov
push
stos
xor
mov
jecxz
repnz
sub
ret
imul
rorl
and
sbb
add
push
mov
imul
push
inc
or
icebp
pop
mov
mov
jns
je
movsl
sbb
in
sbb
add
mov
int3
sahf
mov
sbb
cmp
out
and
xchg
inc
pop
icebp
sub
mov
jae
or
dec
inc
fdivrl
inc
jl
sbb
popf
xchg
fwait
dec
inc
and
jne
pop
push
add
sub
lea
pop
cmc
ret
jle
adc
or
sbb
adc
add
push
cmp
inc
mov
das
imul
sar
pop
push
jbe
sub
add
and
out
movsb
push
pop
cli
push
jbe
or
push
call
add
insb
or
push
mov
repnz
adc
push
mov
mov
pop
mov
add
imul
lret
cld
roll
scas
push
mov
jbe
push
push
ja
or
cmp
jne
push
lcall
movsb
xor
popa
jmp
cs
dec
xchg
cmpsl
icebp
repnz
cmc
xchg
loopne
lods
enter
sub
mov
clc
push
xor
and
xor
ss
ja
xor
xor
repz
push
or
pop
ret
inc
mov
jbe
or
add
mov
mov
scas
push
cmp
test
xor
dec
loopne
loope
pop
cmp
dec
pop
loope
add
fnsave
sti
notl
sub
sbb
and
repnz
mov
push
dec
sub
dec
and
sbb
dec
jno
adc
test
push
cmp
adc
or
addr16
inc
frstor
adc
inc
lret
iret
dec
aam
bound
stc
ja
aas
rol
ja
ss
cmp
jb
mov
lds
clc
mov
rclb
inc
add
adc
sahf
andb
out
push
in
push
or
fisttps
pop
push
leave
cltd
sub
jmp
mov
sub
pop
adc
out
test
dec
ret
and
test
pop
dec
adc
addl
imulb
ret
xlat
fcoms
inc
xor
or
dec
mov
test
mov
scas
jl
xorb
cs
dec
xor
xchg
dec
sbb
pop
ret
int3
jmp
lods
mov
in
shl
leave
mov
sbb
add
sub
repnz
jnp
stos
lret
push
cmp
sbb
inc
ret
shrb
stc
sub
movsb
mov
mov
inc
cmp
mov
fnstsw
inc
cmp
mov
dec
mov
lock
les
xchg
nop
in
or
sbb
pop
cwtl
xor
mov
lret
int
xchg
or
jbe
dec
add
add
cmpl
mov
out
xchg
xchg
xchg
xchg
or
sahf
and
pop
nop
dec
add
jl
add
imul
sbb
std
pop
adc
mov
cmp
je
adc
mov
or
pop
push
mov
outsb
add
lea
and
sahf
xor
inc
cmp
jl
add
and
jne
mov
or
mov
adc
aaa
ret
push
xor
mov
cmpsb
adc
adc
push
push
shll
push
out
or
jle
push
push
ss
es
mov
xor
pop
ret
push
adc
add
das
xchg
or
aam
pop
fcoms
cltd
lea
add
push
xlat
or
xchg
jns
xor
cmpsb
lock
jo
ss
arpl
xor
jmp
test
xchg
push
fsubs
cmp
pop
pusha
pusha
xchg
mov
cmp
cmp
xor
fcomps
lea
stos
sub
movntps
comiss
in
and
mov
inc
cs
inc
cmp
pop
mov
xor
mov
xchg
or
rorb
mov
ja
shl
and
add
mov
enter
shl
add
mov
xadd
add
lret
mov
mull
dec
push
adc
movsb
mov
ret
add
jne
pop
into
mov
jge
imul
dec
jb
iret
push
fidivrs
add
add
stos
mov
arpl
or
sub
dec
jmp
cmp
ret
test
or
cmp
xor
xchg
lock
push
xchg
sub
sub
add
dec
and
mov
inc
or
ret
add
inc
rclb
loop
fs
or
mov
int
adc
sbb
mov
scas
xor
cmp
jl
mov
fistps
sbb
lahf
add
or
adc
ret
icebp
or
mov
xor
clc
enter
inc
push
aad
rorl
pusha
stos
lea
cmp
xor
pop
jo
mov
icebp
cmp
and
jp
pop
ljmp
sub
popf
adc
test
test
adc
shll
add
jmp
push
outsl
push
jge
sbb
sbb
cltd
add
jae
pusha
and
imul
ja
inc
stos
rol
push
leave
add
in
mov
mov
add
push
mov
sbb
subb
mov
pop
and
xor
dec
dec
mov
rclb
and
xchg
cmc
mov
or
pusha
mov
xor
sbb
mov
into
xchg
and
aaa
inc
adc
test
jl
or
push
ret
adc
loopne
fcmovne
push
push
add
mov
pop
push
sbb
aas
mov
jmp
push
js
add
daa
dec
fucomi
call
mov
cli
xor
cmp
iret
dec
add
adc
out
xchg
inc
sub
pop
dec
push
sbb
aam
push
dec
xchg
shrl
push
ret
adc
sub
jno
jecxz
in
sbb
sub
pusha
cmp
orl
jbe
sub
sbb
insl
popf
mov
sbb
jmp
mov
add
or
and
lds
or
push
push
testb
mov
orb
dec
faddp
xchg
xor
dec
roll
out
std
mov
push
sbb
nop
negb
mov
popa
and
adc
mov
xor
add
mov
sub
sbb
xorl
loopne
jmp
rorb
sbb
jecxz
lea
xor
mov
subb
push
andb
mov
popa
rcr
push
fisubs
stc
frstor
imul
adc
scas
test
or
push
adc
dec
inc
lock
add
mov
mov
gs
sbb
ds
pop
or
ja
or
add
or
outsb
sbb
int
xchg
jecxz
and
sbb
fstl
sub
repz
lds
and
inc
or
test
mov
push
push
fs
and
push
pop
inc
mov
add
push
fnsave
xor
adc
test
cwtl
test
xor
cmpsb
adc
add
cmp
and
clc
pop
add
sub
push
jmp
xchg
add
mov
or
sbb
sbb
mov
mov
inc
inc
xor
push
fwait
shlb
sbb
adc
push
ret
sub
inc
xor
xchg
sub
mov
dec
in
push
das
cwtl
pop
mov
insl
icebp
ret
loopne
jae
icebp
cmpl
ljmp
outsb
dec
push
sti
into
cmp
outsb
out
pop
pop
mov
outsl
jl
repnz
push
xchg
push
push
push
or
pushf
lods
adc
dec
dec
jmp
rcrl
popf
dec
gs
mov
push
arpl
mov
push
and
mov
mov
nop
in
addb
adc
push
or
lea
cmp
cmp
sbb
cmpsl
es
sbb
mov
or
inc
lcall
and
mov
pop
and
inc
packsswb
and
daa
pusha
cld
add
out
cmp
jle
mov
rcrb
mov
push
push
movsb
xchg
jne
and
inc
cmp
in
sub
sbb
jle
nop
imul
cmp
jle
inc
sub
pop
or
or
pop
xlat
push
insb
jmp
stos
or
pushf
or
jmp
inc
jbe
xchg
jne
repz
imul
dec
loopne
popa
sub
lods
dec
fstpt
jo
insb
mov
or
sub
insb
inc
or
aam
inc
nop
or
jo
add
push
jbe
sarl
push
inc
out
add
inc
aas
or
call
outsb
xchg
nop
sub
inc
jo
jne
addl
xor
je
into
or
inc
add
pusha
lods
jmp
out
add
cwtl
test
pusha
cmp
outsb
or
pop
dec
add
testl
call
xor
add
add
xor
and
adc
adc
jo
push
jp
jmp
push
sarl
sbb
les
mov
mov
add
aaa
sbb
adc
push
add
int
fs
cmp
rol
add
out
test
aam
adc
add
fstp
cmpsl
xor
mov
sub
shrl
dec
mov
or
lcall
mov
push
addr16
fdivrl
dec
push
sbb
xor
pop
push
or
sub
loopne
jp
add
jae
dec
and
pushf
mov
mov
jmp
call
xchg
jle
ret
adcl
imul
jne
jg
add
es
dec
adc
and
jmp
inc
add
fisubrs
push
xor
stc
pop
push
sub
inc
lods
inc
pusha
movsl
or
test
gs
xor
hlt
push
push
mov
insb
data16
sbb
or
inc
mov
push
mov
cmpb
ljmp
mov
cmp
jne
push
push
add
push
push
sbb
cwtl
iret
mov
andl
dec
xor
pop
mov
and
scas
rcrl
std
add
mov
xor
enter
or
testb
push
cmp
sbb
or
clc
test
roll
add
cmp
jle
aaa
pop
leave
jmp
lea
push
sbb
mov
sbb
adc
js
adc
inc
unpckhps
pop
sbb
lret
into
jne
data16
pop
pop
push
sbbb
or
cmpsl
xchg
jmp
cmpl
xor
lret
jmp
push
and
mov
xor
mov
leave
sbb
addr16
daa
mov
ror
out
std
cwtl
nop
inc
xor
fnstenv
jb
xor
ss
dec
sub
cmp
js
testl
pop
rolb
jp
out
fdivs
cmp
jne
push
xchg
adc
mov
inc
popa
adc
je
xchg
imulb
das
pop
or
mov
sbb
xlat
mov
subl
and
cmp
lods
sub
iret
rolb
in
adc
test
mov
stc
sbb
lret
sbb
xchg
add
sti
push
lock
adcb
and
nop
les
cmpsb
ret
xorl
hlt
loopne
xchg
push
testb
sub
popa
jl
push
mov
mov
out
mov
cltd
mov
addb
cmp
push
pop
cwtl
or
adc
fwait
mov
inc
inc
or
mov
and
xlat
loopne
pop
xchg
mov
add
push
push
and
pop
lret
popl
loopne
pop
or
xor
and
mov
add
rorl
xor
je
mov
add
dec
and
lock
lea
jle
rolb
xor
pop
add
or
andl
inc
cld
jb
test
mov
push
lcall
push
je
jmp
mov
lret
sub
cwtl
sbb
sub
dec
cmp
cmp
shll
addr16
mov
push
mov
xchg
orb
push
mov
out
or
jae
sub
bound
push
push
scas
mov
xor
jo
jle
and
xor
add
pusha
sbb
mov
cmc
ss
pusha
dec
adc
or
sbb
cs
sbb
rorl
lock
not
add
loopne
cmp
insl
loopne
ljmp
add
mov
shl
fsubs
rorb
int3
adc
mov
jecxz
fisttpl
sub
cmp
imul
fldt
pop
or
adc
or
and
and
adc
mov
adc
and
scas
pop
push
push
sbb
scas
scas
jae
or
popa
jmp
adc
push
popf
sub
push
or
je
je
enter
fwait
ret
sub
or
adc
jp
sbb
mov
mov
aas
pop
cmp
jmp
enter
and
dec
dec
pop
nop
je
test
add
add
xchg
push
popa
add
jmp
sbb
loopne
mov
loope
imul
push
push
dec
add
dec
pop
clc
jmp
lods
mov
insb
imull
push
scas
aaa
adc
inc
cmp
call
xor
aaa
cmp
or
adc
push
stos
stos
pop
es
mov
mov
fbld
fstp
sub
add
ja
adc
dec
push
into
inc
and
clc
jae
mov
push
sub
push
xlat
push
add
scas
inc
pop
leave
enter
bound
inc
outsb
mov
sar
xor
repz
mov
mov
push
dec
loopne
jge
xor
ffreep
push
dec
push
cmp
cmc
dec
cld
out
or
out
sbbl
pop
pop
ret
inc
mov
sbb
or
lock
add
vunpckhps
test
repnz
mov
mov
dec
addr16
adc
adc
scas
jae
mov
mov
jb
lds
jo
inc
jmp
in
movsl
inc
subb
mov
scas
pop
pop
push
sub
pop
inc
or
push
das
je
call
adc
pop
rolb
sub
and
push
pop
push
out
sahf
popa
loopne
push
in
sub
stos
cli
jp
jl
movsb
jbe
addl
sarb
inc
mov
pop
clc
scas
cmp
in
pop
clc
dec
mov
lahf
insl
daa
shll
jp
push
jcxz
sbb
push
sbb
push
add
inc
xchg
jge
pop
push
call
mov
in
mov
adc
ficoms
and
pop
jp
loope
inc
cmp
je
inc
cs
push
outsl
jne
fisubrs
icebp
fsubp
popf
pop
inc
mov
jne
mov
int
jmp
push
pop
push
push
cltd
stos
xor
sub
adc
popa
insb
sbb
enter
mov
mov
sbb
cmp
pop
je
jmp
or
push
dec
inc
cmp
sub
out
add
or
add
push
inc
sbb
rcrb
sub
xchg
mov
cltd
inc
and
jno
push
xor
icebp
mov
imul
inc
cmp
mov
cs
pop
sub
aaa
and
mov
add
push
movl
pop
and
pop
cmpsl
sbb
sbb
les
jb
pop
xor
ret
adc
or
ds
adc
inc
lds
sbb
pop
or
sub
and
les
imul
mov
jmp
xor
inc
inc
dec
lcall
pop
jmp
inc
sbb
cld
ss
jb
cmc
imul
push
lahf
js
lahf
pushf
push
cltd
jl
jmp
and
dec
push
push
js
push
adc
data16
jmp
cmpsl
and
inc
add
adc
push
jo
sub
out
jne
jno
mov
push
test
loop
sbb
cmp
push
fisubs
mov
int3
test
dec
insb
mov
sub
bound
loop
shll
mov
cli
pop
ja
subl
fmuls
push
cmp
jne
arpl
rorl
jbe
mov
adc
shll
adc
pop
sbb
mov
shrl
shlb
add
add
add
and
sbb
adc
mov
sbb
pop
inc
js,pt
xor
mov
add
shrb
xchg
cld
sbb
mov
je
imul
fcomps
push
jmp
push
cld
mov
ret
es
and
or
fnstcw
mov
imull
out
loopne
clc
jg
fs
test
movd
mov
sub
push
clc
jae
xor
out
mov
jle
xor
cli
rcl
lret
adc
mov
add
and
inc
mov
repz
or
jg
ss
fstpt
xchg
ret
adc
jnp
mov
mov
mov
add
adc
push
add
adc
lock
scas
and
mov
pop
add
fadd
roll
add
imul
addps
int
add
mov
adcb
dec
sbb
xchg
pop
fistpl
and
test
and
dec
inc
cmp
ja
scas
pushf
sbb
pop
adcb
insb
push
or
lds
push
mov
adcl
or
xchg
adc
pop
call
aam
pop
xor
lahf
xchg
pop
push
push
ret
jge
mov
cmpsl
adc
jge
jge
pop
or
pop
and
and
sub
inc
mov
add
mov
push
hlt
xchg
jo
addr16
pop
add
ret
ss
loope
adc
popa
cld
cli
add
xor
fldenv
sub
mov
adcl
jmp
loopne
add
or
aas
lret
or
stos
mov
inc
add
dec
ljmp
and
add
sbb
int
add
mov
add
nopl
andb
add
and
pop
and
cmovs
decb
mov
scas
push
mov
inc
sti
inc
mov
stc
or
rep
jmp
xor
sub
cmp
jb
data16
sbb
test
das
ds
hlt
push
js
or
pop
dec
mov
inc
pop
xor
mov
or
scas
adc
repnz
dec
add
addl
add
xchg
mov
cmp
mov
rorb
mov
out
aas
iret
mov
in
inc
in
sahf
out
sahf
call
hlt
jno
out
hlt
clc
clc
cld
sti
test
adc
clc
fnstenv
scas
subl
xor
adc
nop
inc
subl
pop
sti
and
jbe
or
sbb
lea
and
fmul
jl
cld
or
scas
cld
out
xorb
adc
xor
daa
stc
sub
pop
nop
xchg
push
mov
outsb
xor
jl
mov
add
xchg
mov
inc
push
imul
mov
jno
addr16
add
mov
push
mov
jns
out
inc
dec
push
pop
fs
out
ja
aaa
sbb
sbb
out
sahf
out
adc
adc
out
sahf
or
or
ds
int
inc
nop
or
and
push
add
or
mov
lods
adc
add
cmp
sbb
adc
clflush
dec
sub
pop
and
daa
mov
in
or
fbld
lods
fisttps
bound
adc
sbb
jo
pop
mov
test
je
incb
push
cmp
aad
add
push
cmp
std
bound
inc
sbb
mov
jmp
jp
je
mov
push
jmp
rorl
sahf
mov
test
mov
pop
xlat
sub
xorl
mov
jne
or
and
mov
mov
or
cmp
fidivs
je,pn
cmpsl
add
mov
pop
push
ret
lret
sbb
call
sub
popf
sub
cmp
xchg
push
hlt
in
js
cmp
lock
inc
pop
sub
fcomi
add
add
inc
sub
in
iret
jne
xchg
push
push
inc
dec
jmp
push
lcall
ret
sub
notb
add
push
xchg
inc
push
lahf
sub
mov
push
push
out
or
adc
adc
jne
inc
cmp
push
or
cmp
aam
loopne
push
jmp
adc
scas
inc
inc
adcb
adc
mov
jbe
and
test
and
adc
adc
call
inc
cmp
cmp
rorl
mov
jae
arpl
dec
adc
out
adc
cmp
lret
jnp
or
es
or
add
adc
cmpsb
or
and
lods
pusha
inc
in
mov
rcrb
pop
cs
daa
nop
and
push
cli
xlat
inc
popl
cmp
add
into
lret
sbb
stos
lcall
mov
fstl
clc
jnp
sub
add
ret
jne
shl
fiadds
or
dec
leave
sbb
or
or
inc
pop
push
sbb
rcrl
pop
movsb
push
rol
inc
inc
cmp
aam
dec
adc
or
jne
sbb
shl
or
jg
jmp
xorl
jnp
adcb
xor
jmp
lods
jne
add
or
movl
jbe
sub
xor
jno
seta
movsb
sbb
lea
addb
sub
out
testb
out
add
orl
outsl
mov
stc
push
cmp
dec
inc
adcb
push
movl
in
sub
inc
xor
lea
bound
add
cmp
mov
bound
cvtpi2ps
insb
ja
je
add
push
inc
dec
cmp
in
inc
cmp
inc
and
rclb
aam
xchg
cmp
ja
push
into
fisttps
jmp
shufps
lea
neg
mov
mov
mov
out
cli
or
add
jmp
shlb
mov
inc
lock
adc
int
cmp
jb
xor
outsl
sbb
add
jmp
mov
dec
mov
mov
dec
dec
mov
inc
cmp
jb
mov
mov
gs
ja
fs
lret
add
inc
in
outsb
ret
lds
enter
push
cmp
jnp
sub
test
add
lret
dec
fildll
jge
cmp
jb
lea
mov
int3
lcall
lcall
addl
dec
mov
push
cmp
out
outsb
std
jne
es
jne
pop
les
call
in
xorl
mov
inc
incl
dec
jmp
repz
mov
jmp
std
std
jmp
iret
into
sbb
cld
cld
ret
pmaxub
or
adc
push
outsl
scas
popa
jb
push
push
movb
shr
push
adc
repnz
hlt
or
dec
add
adc
scas
lock
popf
rcll
or
testb
inc
les
add
push
shrb
jo
scas
mov
sub
inc
cmpsl
into
jae
pop
inc
mov
aad
push
insl
cmp
mov
or
or
xor
xchg
or
imul
dec
add
xor
push
and
push
lock
pop
or
cmp
cmp
mov
jge,pn
rorb
add
add
or
add
add
into
and
cmc
cli
out
testl
add
mov
mov
dec
jg,pn
insb
rclb
jge
sahf
mov
push
popa
and
and
and
repz
jae
adc
stos
fidivrs
xor
inc
push
push
pop
testl
daa
push
jno
sub
iret
pop
clc
pop
iret
push
push
jne
or
lods
insb
push
dec
pop
pop
sub
pop
adc
push
xchg
aam
mov
loopne
les
lret
cmp
loope
add
arpl
fcoms
adc
adc
ja
sub
xchg
mov
sbb
sbb
cs
mov
enter
int3
stos
shlb
mov
out
clc
adc
adc
loope
add
lret
add
mov
sub
xchg
sub
movsb
leave
xor
adc
ja
push
mov
or
mov
mov
adc
jle
cmpl
pop
pop
out
je
inc
xchg
roll
xchg
add
dec
cmpsl
xor
pushl
mov
inc
jmp
cmp
jne
orl
jmp
adc
jne
sub
iret
add
nop
testb
lock
xchg
add
cmp
and
cmp
jno
mov
push
xor
dec
or
stc
out
push
pop
or
and
out
outsb
xchg
adc
insb
adc
pop
jne
dec
add
or
lds
outsl
or
sub
lret
or
test
adc
jg
pop
mov
jmp
xchg
fiadds
out
pushl
lret
sub
cmp
ja,pn
xor
loopne
or
dec
adc
sbb
loopne
daa
and
retw
movsb
and
rcrl
cmp
dec
test
push
push
add
sbb
lods
movsb
mov
movsb
lods
pop
cld
bound
adc
hlt
adc
flds
mov
nop
test
jne
test
jne
push
addl
ja
lahf
push
ficoms
inc
mulb
sbb
je
dec
mov
push
mov
add
add
into
mov
jnp
test
das
in
and
add
xor
sbb
mov
pop
jecxz
dec
sbb
adcb
add
xchg
cld
clc
loop
add
das
sbb
inc
pop
fsubrs
mov
sub
adc
mov
pushf
inc
or
jb
xor
pop
pushf
or
sub
jp,pn
jge
xchg
leave
popa
cld
stos
mov
shr
shlb
dec
or
adc
ljmp
jbe
inc
and
push
mov
pop
int
andl
jne
testb
sub
adc
rcrb
inc
xchg
ds
adc
adc
and
shlb
mov
mov
inc
inc
data16
testb
and
add
rol
daa
mov
cmp
or
js
adc
lock
inc
mov
sbb
and
mov
or
mov
dec
jmp
dec
push
or
aam
scas
jno
or
fidivrl
dec
jbe
out
push
aas
push
es
push
jmp
xor
adc
scas
push
test
cmpsl
jb
jno
lock
pushf
mov
push
xor
push
dec
push
and
jbe
ret
stos
and
sbb
decb
mov
adc
mov
add
add
sbb
inc
dec
ret
pop
cmp
movsl
xor
rolb
jbe
or
add
fstps
sbb
scas
sbb
or
add
xor
lret
nop
or
dec
or
mov
test
lock
sub
incb
fists
shl
or
jne
rolb
loopne
je
inc
andl
fdivr
stc
sub
in
push
adc
cmp
ss
add
andb
or
imul
jle
mov
and
dec
or
dec
xor
pop
push
mov
or
or
nop
pavgw
push
out
cmp
data16
sbb
add
inc
pop
jmp
pop
xor
pop
jno
push
push
push
dec
stc
inc
jo
rcrb
lret
push
mov
inc
jae
and
push
dec
or
cmp
jae
or
outsb
fnstenv
adc
add
enter
xchg
sbbl
and
icebp
add
mov
or
hlt
add
nop
scas
out
call
jge
or
dec
and
int
adc
mov
movb
mov
dec
push
sub
leave
sub
insl
jge
add
xchg
push
or
adc
jecxz
orl
je
adc
or
mov
rorl
daa
jle
pop
adc
jmp
adc
loopne
aad
push
jns
rcll
mov
dec
popa
ja
add
imul
ficomps
out
mov
data16
push
add
test
insl
push
out
xchg
fwait
jle
push
pop
xchg
aad
push
popf
aaa
outsb
pop
jmp
or
or
roll
ds
sbb
addl
ljmp
add
pmulhuw
add
in
xlat
dec
ret
ds
repnz
jnp
ds
int3
pop
or
and
cwtl
add
or
sub
push
mov
jno
mov
pop
push
je
push
pop
inc
clc
shlb
dec
into
mov
push
orb
pop
and
movl
sub
inc
loop
int
xor
adc
push
mov
popf
addr16
and
jmp
pop
fmuls
adc
test
test
add
out
add
je
xor
call
pushl
push
mov
ljmp
test
imul
loopne
push
fnsave
ret
xor
xor
jmp
push
pop
and
negl
call
pusha
inc
cmp
mov
and
push
test
lock
cmp
imul
add
add
pop
adcl
fstpt
mov
pop
jl
aas
sub
sub
jmp
loope
sub
out
aam
shll
add
push
push
test
push
cmp
add
add
or
mov
adc
or
je
into
cmp
lcall
cmp
or
sub
add
xor
mov
and
rolb
xchg
and
imul
add
mov
out
scas
mov
pop
push
mov
mov
into
mov
dec
add
mov
jbe
mov
dec
nop
dec
inc
push
pop
push
inc
roll
pop
sbb
inc
pop
clc
adc
add
loop
cmp
fnstcw
daa
mov
sbb
mov
adc
mov
adc
sbb
mov
es
loop
mov
cmpsl
pop
push
cmp
sarb
in
mov
xchg
adc
leave
pop
in
insb
shlb
inc
pop
orl
stos
mov
mov
mov
or
loopne
jbe
or
cmp
pop
mov
inc
test
andb
dec
enter
sub
push
cli
cmpsl
pop
or
cmp
loopne
inc
mov
mov
loope
xor
mov
mov
push
jle
mov
xor
add
ret
xchg
cmp
gs
lock
test
out
jmp
adc
fcompl
lcall
sbb
or
idiv
in
dec
dec
or
enter
cwtl
dec
mov
push
iret
push
push
pop
jle
inc
mov
cmp
je
movzbl
or
sbb
je
fimull
scas
loopne
pop
sbb
adc
imul
sbb
dec
add
enter
daa
add
xchg
lea
clc
cmp
sahf
divl
je
lcall
enter
add
cmpb
pop
dec
in
jb
pop
jb
or
in
jns
or
dec
inc
push
nop
or
sub
addr16
jns
pop
or
nop
or
add
seto
lcall
add
inc
or
mov
ja
push
setne
jb
push
adc
pop
addr16
mov
sub
cmp
sbb
adc
adc
adc
jae
and
adc
mov
add
adc
jns
pop
enter
inc
adc
js
push
push
inc
sahf
xchg
add
pop
mov
sbb
sbb
orb
inc
sbb
jns
psubsb
sbb
and
pusha
in
sbb
sbb
mov
sbb
je
pop
sbb
iret
sub
inc
stos
jge
sbb
and
push
cmpl
pop
es
jg
and
ret
sub
cmp
push
movsb
add
add
cmp
xchg
je
adc
bound
repz
mov
mov
push
in
jno
repnz
sub
push
sahf
repnz
lea
aad
or
out
in
in
out
cmp
enter
out
pusha
sbb
jbe
enter
add
call
adc
dec
dec
cwtl
jmp
inc
push
sub
pusha
in
jmp
jmp
inc
lcall
cltd
add
pop
push
mov
cmp
xchg
sahf
out
out
jge
or
sbb
sbb
pop
pop
enter
lock
cmp
icebp
icebp
seta
enter
out
std
repz
jns
cmp
leave
std
hlt
pop
in
cltd
push
hlt
rorl
pusha
hlt
fwait
mov
cmc
cmc
inc
jg
push
nop
addr16
pop
imull
idivl
std
clc
enter
clc
clc
cltd
adc
inc
stc
lock
cli
adcl
sbb
sub
cld
cld
je
sbb
inc
cld
push
in
add
std
sbb
nop
out
adc
ret
clc
xor
cmp
roll
lahf
fwait
inc
cmp
adc
shrl
push
or
pop
cmpsb
push
xchg
es
and
movsb
jecxz
mov
enter
in
push
in
stos
icebp
inc
mov
ret
daa
xchg
sti
out
xchg
add
dec
out
cltd
outsb
pop
leave
and
sub
adc
xchg
sti
sbb
lcall
dec
push
jno
in
add
mov
cli
rolb
sub
out
out
cltd
jns
xor
das
cli
and
and
cli
sbb
jmp
cltd
nop
stos
in
sar
push
sub
stc
rclb
fstpl
div
and
int3
jmp
pop
fwait
xor
das
xchg
inc
pop
add
stc
out
clc
lret
and
mov
lcall
add
cld
inc
cld
subl
inc
pusha
scas
out
mov
sbb
das
mov
pushf
inc
fdivrp
rcll
mov
ss
loop
notl
leave
and
scas
in
ret
xchg
idivl
testl
sbb
out
leave
and
inc
notl
rcll
sub
in
imul
ljmp
negb
andb
sbb
insb
out
out
jno
xchg
xchg
mov
add
imul
cmc
repnz
push
jno
jno
cmc
jns
cmp
pop
xchg
cmc
jae
push
push
jno
pop
dec
cmc
testb
jmp
div
jns
and
pop
add
clc
pop
xchg
pop
enter
stc
popa
xor
inc
or
mov
xchg
mov
jne
push
hlt
js
or
test
cmp
mov
push
jo
cs
in
push
sti
lahf
xor
jb
pusha
adc
ds
sub
shl
loope
call
loop
scas
repz
test
imul
mov
andl
add
pop
and
repnz
jmp
mov
repnz
sbb
dec
in
in
dec
and
mov
repnz
sbb
mov
xchg
pop
dec
aaa
divb
icebp
xchg
pop
pop
daa
jb
test
dec
in
ret
cmp
leave
and
cmc
add
ljmp
mov
lock
movsl
test
jne
cmp
push
lock
sub
xor
sbb
xlat
mov
lret
ret
ret
fisttps
sbb
sub
out
push
inc
shlb
ret
inc
push
fcom
cmovno
push
add
add
add
stos
add
cmp
dec
add
push
jnp
mov
xchg
adc
jo
adc
cmp
or
dec
add
jmp
and
mov
test
ljmp
cmc
sahf
pop
and
cmp
add
int
fldcw
pop
pop
popa
mov
test
pop
lret
or
insb
ds
push
jle
mov
pop
stc
xor
dec
pxor
pop
sbb
push
xlat
insb
lahf
cmpsl
pusha
insb
lea
icebp
push
rol
cmp
jnp
outsb
push
inc
dec
outsb
add
push
loop
push
and
add
add
mov
push
out
clc
loope
mov
pop
aam
lock
cs
push
push
cld
cld
jge
push
push
sbb
fstpt
push
lahf
xor
adc
rcl
fs
movsl
pop
xor
cmp
mov
adc
add
fdivs
fbstp
cmp
cwtl
fmuls
mov
sub
and
add
insb
sub
test
mov
daa
in
xor
pushf
dec
add
sub
adc
int3
mov
lea
enter
jecxz
enter
sub
jl
adc
dec
js
sahf
jge
outsb
test
cli
jl
out
shlb
fsub
movl
push
push
adc
test
add
test
lcall
sahf
mov
cld
add
jmp
jne
insl
ret
mov
cmp
lcall
pop
and
sub
sub
pop
movsl
xor
inc
inc
inc
pop
pop
mov
data16
jmp
jb
jp
or
adc
sarb
fisubs
xor
xor
iret
js
in
xor
mov
sub
sub
dec
outsl
cmpsb
or
and
pop
and
repnz
je
pop
sub
in
dec
roll
sub
inc
inc
push
jnp
sbb
cmp
enter
add
xor
orps
push
push
and
cmpb
cmp
pop
inc
ja
adcb
sub
fs
dec
insb
xor
ja
shl
sbb
fimull
ljmp
jne
jo
inc
and
shll
cmc
int
add
add
xchg
fcoml
in
mov
aad
and
clc
es
lret
imul
adc
jne
mov
mov
inc
js
inc
roll
push
push
jmp
sbb
lods
dec
ret
out
jns
mov
dec
mov
add
bound
push
mov
sbb
pop
pop
push
xchg
cwtl
inc
mov
inc
ja
stos
xor
mov
adc
ret
clc
sbb
or
insb
jl
mov
sbb
sub
pop
fistpll
add
inc
loope
je
sahf
push
clc
out
adc
stos
add
testb
push
mov
mov
sahf
loop
inc
or
push
sub
dec
push
data16
mov
mov
mov
test
push
leave
adc
mov
inc
loop
jns
jo
fists
mov
or
dec
mov
xchg
xor
das
adc
repnz
jg
mov
mov
adc
mov
mov
incl
inc
decl
jne,pn
adc
mov
loop
repnz
mov
cmp
cmpl
mov
mov
sbb
cltd
pop
idiv
rclb
pusha
or
pop
mov
pusha
ja
sub
dec
mov
mov
xor
ja
mov
jo
jmp
cmp
jae
dec
lods
pop
push
cltd
sub
xor
mov
jbe
mov
dec
test
mov
jmp
adc
cmpl
dec
pusha
sbb
sub
pushf
push
push
jg
mov
dec
sbb
add
call
or
sbb
sbb
dec
dec
je
push
push
jne
lcall
ffreep
xchg
insb
adc
int
mov
dec
mov
xor
pop
decb
out
loopw
push
test
mov
inc
pop
rcrb
fstps
cmp
das
or
mov
pushf
cmp
aaa
test
loope
mov
filds
dec
add
idiv
mov
xor
rol
pop
add
popa
xor
or
and
xor
adc
fiaddl
ja
sub
mov
stos
cmp
or
mov
or
sbb
loopne
fsubr
pop
cmp
mov
sub
sub
insl
or
jle
xchg
icebp
aas
jge
push
push
cltd
pop
idiv
inc
mov
add
mov
inc
xor
mull
push
xchg
inc
out
cmp
pop
xchg
dec
push
jmp
or
mov
shlb
je
xor
fs
bound
outsl
sub
adc
fs
jbe
insl
mov
add
call
movsl
bound
pop
insb
sub
lea
jecxz
repnz
sbb
dec
jae
mov
add
sbb
or
add
adc
jg
jmp
incl
pop
push
sti
inc
pop
mov
sub
loopne
inc
and
xor
loopne
in
mov
in
cmp
xchg
mov
push
mov
fisubrs
xor
mov
jge
pop
je
sbb
add
movl
pop
das
mov
ud2
lcall
adc
outsl
fnsave
test
mov
jo
sbb
je
dec
inc
hlt
or
in
es
inc
inc
adc
lretw
test
jae
and
adc
insb
lahf
pop
inc
xchg
or
shrb
push
or
cmp
cltd
push
or
mov
out
aaa
subl
inc
dec
xlat
jl
test
pop
push
adc
mov
rorl
jg
mov
pushf
add
jp
ret
in
and
inc
and
sub
push
je
mov
flds
cmpb
ret
movb
inc
dec
sbb
cli
and
cmp
and
mov
push
hlt
mov
add
sahf
ja
push
fs
loopne
adc
adc
or
cmp
or
add
jmp
push
jae
sbb
bound
pop
pushl
push
int3
dec
ljmp
pop
imul
ficoms
dec
jg
push
pop
lock
pop
adc
inc
sbb
hlt
dec
js
or
or
sbb
aad
pop
or
mov
aam
add
out
xchg
jbe
push
inc
jg
cmp
je
gs
lret
xchg
dec
xor
and
lock
fisubl
mov
inc
inc
cmp
je
xchg
mov
cmp
dec
sbb
adc
add
fidivrl
dec
mov
dec
popa
aaa
fiadds
mov
sbb
ss
ss
add
sbb
clc
bound
pop
mov
push
inc
sbb
push
or
pop
cmp
mov
jnp
dec
push
pop
sbb
lods
mov
popa
and
sbb
xorl
rcll
or
xchg
dec
push
push
je
jg
xchg
mov
or
add
sub
dec
pushw
lock
mov
addr16
negb
js
mov
lret
test
loopne
cmp
cmp
je
and
fwait
les
test
add
shll
rolb
add
add
push
pop
inc
mov
add
popa
rcll
lcall
out
push
add
fdivr
frstor
rorl
dec
movsb
jb
add
pop
inc
jns
pushf
cmp
dec
out
inc
sbb
mov
adc
adc
clc
test
fiaddl
fcomps
jns
ror
add
sub
into
xlat
sarl
lea
js
and
jmp
dec
mulb
pop
lcall
jmp
das
cmpsl
add
add
push
dec
sbb
movl
pop
add
cmp
inc
icebp
pop
and
sub
push
stos
jno
sbb
ret
imul
call
movl
sbb
dec
dec
ret
out
sbb
mov
adc
sub
inc
subl
movsb
ret
push
push
xchg
push
push
jns
and
stos
adc
pop
push
mov
or
add
mov
push
inc
mov
or
mov
add
les
idivb
inc
push
jmp
cmp
pop
in
movsb
int3
ja
or
inc
inc
int3
jmp
pushf
ss
vphaddbw
andl
jge
mov
mov
or
xor
clc
and
pop
mov
pop
xor
es
rolb
scas
inc
jmp
aas
pop
push
imul
cmp
aad
dec
jns
pop
adc
jns
daa
adc
es
jne
add
and
inc
in
add
adc
mov
jne
and
jmp
movsl
mov
adc
or
pop
jo
call
push
mov
insb
sbb
movsl
dec
jo
xor
pop
lret
test
test
adc
hlt
add
jl
lods
add
sbb
loopne
adc
add
push
addr16
sbb
push
outsb
add
mov
adc
gs
cld
jmp
pop
arpl
xchg
push
jno
sub
outsb
fs
outsb
ss
je
iret
or
sub
push
int
push
std
rol
inc
add
enter
idivb
fs
mov
or
add
test
cli
adc
ds
pusha
sbb
in
cld
add
adc
xor
popa
out
inc
mov
or
jbe
js
jp
xchg
adc
push
jle
jbe
jp
add
jbe,pn
and
cmc
rcl
and
sub
push
loopne
or
lds
sbb
lods
xor
mov
xor
or
call
insb
xchg
jmp
pop
mov
pop
out
mov
popf
sahf
enter
sbb
inc
int3
or
scas
lret
sbb
cmp
push
jmp
adc
aam
cmp
sub
fs
in
jne
ret
push
mov
jmp
mov
sbb
inc
loope
add
dec
lcall
std
data16
incb
mov
pop
sub
dec
add
mov
sbb
adc
and
inc
loope
lcall
jp
fldenv
add
push
stc
pop
gs
jo
arpl
imul
push
or
fidivrl
or
stos
cmpsb
pop
sub
cld
inc
mov
pusha
sub
imul
repz
or
dec
jge
cmp
cmc
cmpsb
add
test
mov
jge
fiaddl
xor
sbb
pop
or
movsb
jbe
sub
daa
insb
js
out
mov
fistl
push
sbb
push
push
sub
mov
jle
shll
inc
mov
dec
push
jg
adc
lods
popf
mov
lcall
xchg
cmp
test
sbb
icebp
cmp
push
lock
fistpl
ror
roll
mov
push
call
xchg
shl
hlt
fadds
jno
sbb
in
push
jne
sub
mov
jbe
mov
pusha
adc
adc
loope
xchg
push
incl
popa
scas
and
sub
mov
mov
je
sub
aam
and
inc
gs
add
inc
add
leave
sarb
xchg
mov
les
faddl
mov
sub
mov
insb
push
paddsb
out
out
into
add
adc
loope
in
imul
xacquire
inc
and
mov
pop
jae
xor
add
jecxz
stos
xchg
or
je
out
test
xor
push
dec
or
pop
or
mov
mulb
sarl
jge
sbb
mov
js
mov
sti
sbbb
lods
mov
dec
xchg
js
insb
xchg
pop
es
jl
dec
mov
xlat
mov
cmp
jl
jg
pop
fadds
into
mov
dec
adc
addl
push
mov
jne
mov
test
push
repz
push
inc
pusha
fidivrl
cwtl
mov
mov
call
loopne
ficompl
push
pop
or
shll
and
cmp
inc
daa
dec
sub
or
add
adc
and
cmp
loop
scas
xor
lods
lret
test
cld
pusha
jl
sub
xchg
xchg
fnsave
xor
lahf
xchg
sub
push
or
xchg
xchg
xchg
and
adc
out
or
add
mov
inc
scas
mov
push
movl
cmp
mov
or
cmp
xor
add
adc
loope
and
xchg
mov
outsb
add
in
shl
pushf
loop
adc
add
xchg
loopne
sub
shrl
sbb
pop
cld
sub
and
je
rclb
or
repz
xor
add
adc
sub
push
or
push
adc
jno
adc
sbb
inc
and
fadd
add
jmp
pop
or
shl
or
or
insb
add
cmp
sbbl
adc
jne
stc
jle
testl
popa
loopne
cmc
sub
jb
call
mov
test
outsl
sar
mov
fsubs
adc
out
aas
or
push
movb
out
roll
or
ret
dec
ja
sub
arpl
je
add
popf
or
push
cmp
add
cld
fidivrl
mov
fstl
push
push
dec
fadds
ljmp
std
push
cmp
push
push
ficoml
adc
cld
pop
dec
add
fs
jecxz
adc
orb
mov
mov
and
je
and
shl
in
movb
sarb
sbb
pushf
mov
test
pop
mov
cmp
lahf
jbe
pop
and
sbb
lret
add
jmp
cmp
mov
and
and
and
jmp
inc
add
mov
inc
mov
stc
loopne
cmc
pop
and
call
ja
mov
mov
jo
jg
or
ja
ss
fcomi
pushf
mov
imul
jno
push
add
orl
sbb
lock
or
push
rclb
mov
mov
cmp
sahf
dec
pop
insb
push
hlt
call
outsl
das
jmp
sbb
jmp
add
shll
cmpsb
push
sub
cmp
xchg
aam
inc
cmp
sarl
add
jne
fsubr
fldt
je
or
stos
enter
mov
xchg
or
scas
popa
xor
cmp
mov
push
popf
insb
popf
adc
in
cmp
mov
jb
nop
xchg
repz
xor
lock
out
into
std
fidivl
call
jmp
pop
push
xchg
and
loope
add
push
out
and
xor
pop
push
push
inc
movsb
push
xchg
mov
inc
jae
cmp
jbe
mov
lea
mov
test
lock
xor
inc
pop
leave
inc
nop
push
imul
aaa
popf
loop
call
lea
push
in
dec
popa
loopne
sub
mov
jmp
loopne
andb
cmp
adc
inc
inc
mov
pop
adc
jne
outsb
incl
aas
adc
jge
add
jb
mov
xor
mov
cmp
push
fistpll
out
inc
adc
mov
inc
mov
inc
inc
roll
loopne
inc
dec
jne
mov
inc
insl
push
outsl
out
jp
xor
sbb
jle
fistl
or
cld
push
aaa
jo
mov
inc
dec
jne
add
cmp
mov
add
pusha
sbb
xor
cltd
push
jnp
test
xor
cli
test
movsl
fmull
je
adc
adc
jno
add
mov
fimuls
mov
loop
push
arpl
clc
shll
mov
add
mov
loopne
xor
js
je
outsl
mov
loopne
sbb
add
inc
sbb
jbe
inc
shrb
sbb
fsubrs
sub
xlat
cli
jo
jmp
ljmp
or
xchg
std
and
fs
push
or
ret
orb
std
outsb
xor
lret
pop
sub
jmp
xor
add
mov
mov
add
cmp
pusha
push
scas
mov
push
jmp
adc
jno
es
jb
jmp
xchg
inc
data16
push
inc
and
loope
add
aad
jp
sub
leave
cmpl
push
and
pop
movl
andl
fisubrs
and
in
or
push
xor
or
pop
sbb
rcll
pop
push
dec
xor
ds
jge
mov
lret
xor
lahf
jno
rcl
rcrl
sbb
sub
cltd
xchg
int3
mov
imul
shr
scas
popa
scas
mov
push
int3
push
cwtl
mov
jne
cld
mov
mov
out
jle
or
push
and
clc
pusha
or
fs
bound
pop
cld
rolb
sub
push
decl
jne
sbb
dec
xor
test
mov
push
sbb
mov
lea
dec
outsl
sbb
or
out
pusha
fsubrs
ret
jo
cmp
or
jl
xor
sub
sbb
clc
and
xchg
dec
xor
and
icebp
je
push
mov
lcall
lahf
cmp
add
imul
jae
pop
jbe
inc
ds
sub
mov
jle
sbb
add
pushf
sub
loopne
push
les
xchg
jmp
orl
and
push
pop
mov
js
inc
int3
jno
and
jne
sbb
push
cmp
shl
xlat
ljmp
mov
add
jns,pn
hlt
aaa
adc
dec
ljmp
fisubl
cmc
dec
mov
leave
mov
xchg
fisttpl
add
call
sub
mov
dec
inc
inc
mov
movsb
cmp
push
push
push
mov
or
aas
push
loope
mov
sbbl
cs
mov
inc
adc
repnz
push
out
adc
cwtl
and
sbb
inc
xchg
lret
popa
cmp
insb
push
cld
push
jo
pop
gs
rcl
addl
test
jecxz
mov
movsb
xchg
js
js
add
imul
in
in
jae
in
xchg
test
insb
jg
mov
sbb
outsl
mov
dec
cmp
push
xchg
ja
or
ret
dec
push
add
scas
cmc
cmp
push
push
movsb
pushf
xchg
add
fldl
adc
add
repnz
out
xor
not
movsb
xchg
fwait
xor
pop
sub
adc
add
mov
mov
clc
dec
addl
dec
sub
cmp
enter
inc
dec
popa
int3
loop
pop
cmp
cmp
jle
pop
sbb
sub
push
dec
out
lret
jp
sti
jbe
in
stos
mov
pop
cmp
je
jle
add
mov
cs
jae
jge
jg
fsubrl
pushf
add
orl
push
rolb
dec
lds
jle
pop
and
cmpl
jbe
mov
xor
es
adc
jge
and
daa
test
xor
jno
xchg
dec
dec
insb
lcall
aad
dec
orl
imul
mov
xchg
lret
jbe
mov
and
mov
pop
pop
sarb
xchg
mov
push
jo
jb
xchg
mov
or
push
xor
and
das
mov
cld
shll
leave
fwait
inc
sub
andl
dec
lea
popf
in
test
sub
nop
roll
xor
sbb
mov
dec
sub
loopne
fcoml
mov
aam
sarb
clc
or
in
popf
enter
sarb
clc
rep
mov
adc
aam
inc
xchg
add
sarl
xchg
call
adc
sub
cmp
ljmp
inc
or
test
lahf
lea
mov
mov
test
nop
xchg
add
mov
loopne
adc
or
and
cmpb
add
add
js
pop
dec
bts
jmp
mov
jae
push
es
mov
or
daa
mov
loop
xor
iret
push
dec
and
inc
aas
push
enter
sahf
mov
test
test
jns
pushf
sbbb
mov
or
push
adc
sarl
add
mov
call
and
fsts
jmp
jns
sbb
lahf
rclb
adcb
out
nop
in
adc
nop
jns
jb
lahf
rclb
mov
mov
or
push
xchg
lock
out
movsb
lods
mov
nop
or
loopne
lahf
inc
and
repz
or
push
clc
or
jmp
adc
lahf
pop
mov
sbb
scas
outsb
cmp
cs
push
pop
adc
test
xorb
dec
lea
xor
mov
add
push
jle
adc
dec
loope
ret
or
testb
mov
pop
repz
cmp
jge
inc
mov
xlat
or
sub
int3
inc
and
add
pop
and
aam
xchg
adc
ds
clc
shl
lds
movsl
and
lds
das
lods
inc
jno
mov
push
sub
dec
imul
adc
hlt
fdiv
mov
ds
hlt
call
das
and
and
cmp
daa
and
adc
pop
orb
test
aas
cmc
loopne
or
inc
or
je
mov
xchg
test
dec
adc
adcl
enter
dec
sbb
int
or
dec
pusha
movsl
or
push
push
jge
jmp
mov
mov
xchg
sub
and
and
jne
or
push
cmpsb
addl
and
add
pop
lahf
add
push
js
mov
imul
or
aaa
sub
and
popa
adc
dec
adc
movsl
sahf
inc
fcomp
aaa
outsb
cmp
add
cwtl
outsl
or
out
xor
dec
ret
xor
aam
add
cmp
and
sbb
scas
xchg
jle
test
ja
enter
xchg
ret
ffree
pop
sub
faddp
ret
xchg
push
mov
sbb
fcoms
bound
mov
pusha
add
xor
inc
and
insb
pusha
lock
es
xchg
loope
sbb
jl
ljmp
pushf
loopne
mov
jmp
test
pop
or
inc
jp
pop
mov
mov
sbb
adc
mov
andl
test
or
jp
dec
mov
lods
lret
or
inc
dec
mov
ficompl
pop
test
and
xchg
ret
mov
push
inc
leave
rolb
adc
adc
data16
push
add
and
hlt
add
pop
pop
push
add
shrb
sarb
sbb
mov
or
push
cld
aaa
imul
pop
test
pop
popa
or
adc
push
dec
or
dec
loope
add
sub
mov
xor
js
lock
or
add
inc
dec
fnsave
jbe
push
inc
mov
test
cmp
in
or
inc
fistpll
or
pop
cmp
pop
divl
in
mov
iret
mov
inc
add
dec
xchg
cmp
add
jle
push
push
jne
mov
fidivl
ljmp
jns
adc
push
lcall
pop
sub
add
add
add
cmpb
or
and
les
xchg
add
ret
and
xchg
sbbl
pusha
xor
lock
jp
enter
jmp
lock
mov
imul
push
fld
jecxz
pusha
pusha
jg
stos
inc
add
jmp
rcll
inc
hlt
fcomip
add
lcall
ret
cmpl
inc
or
pop
out
mov
rorb
je
and
cmpsb
jno
test
xor
lret
dec
sti
rorb
popf
in
mov
clc
aam
fadd
shr
jae
mov
xor
mov
fadd
push
add
push
jmp
mov
mov
andb
pop
dec
xchg
xor
ja
or
in
or
call
or
icebp
or
pop
mov
cmpsl
je
mov
out
mov
lea
rcrb
jl
fwait
lock
loopne
pop
sbb
adc
ja
rcrl
pop
sar
pop
mov
orb
mov
adc
lea
pop
mov
fdivr
sub
xchg
fmulp
sub
dec
call
add
loop
je
sbb
jne
cs
scas
pushf
pop
or
mov
add
ds
cli
dec
mov
bound
pop
shrb
adc
clc
loopne
mov
mov
shrb
inc
mov
shlb
adc
lods
shll
jb
xchg
daa
out
sbb
pop
hlt
stc
nop
je
push
cmpl
insb
je
lock
mov
subb
xlat
ds
xor
sub
pop
mov
and
mov
or
xor
mov
xor
repnz
dec
xor
movsl
mov
dec
fs
mov
or
adc
pop
outsl
imul
js
sub
je
mov
add
and
push
dec
inc
sub
lret
pop
scas
pop
sbb
rorb
sbb
sbb
jle
inc
je
pop
jge
xchg
jns
or
add
and
movsb
nop
mov
cmp
mov
fdivr
xchg
dec
pop
dec
add
lock
sub
je
push
jae
lcall
xor
in
outsb
cmpsl
popf
xchg
pop
das
mov
mov
add
pop
loopne
icebp
dec
and
in
or
fmuls
mov
mov
dec
andl
sub
xchg
es
pop
push
mov
inc
scas
mov
movsbl
in
add
push
insl
cmp
push
cmp
or
int3
negl
fucomp
divb
inc
pop
cmpsl
dec
dec
lret
sbb
or
ss
iret
sub
and
pushf
je
in
pop
cli
inc
mov
push
mov
or
inc
pushl
cmp
xchg
std
add
sarl
setp
hlt
mov
ds
dec
nop
inc
mov
inc
pop
fwait
pop
fwait
cmp
push
js
jecxz
mov
lea
iret
sbb
push
sbb
xchg
or
lret
sub
loop
stos
mov
into
add
addr16
outsb
in
cmp
je
cmp
je
test
sbb
push
rcr
enter
clc
xor
bound
test
add
or
inc
mov
loopne
orb
adc
push
popf
movsb
jb
xchg
ret
or
inc
mov
push
mov
aam
add
ret
sti
movsb
std
cmc
nop
push
jne
mov
jne
mov
jmp
cmp
icebp
jmp
insl
cmpl
incl
int3
push
andl
sub
mov
jbe
out
jl
call
cld
adc
sti
enter
divl
ret
dec
sub
inc
add
or
pop
test
jecxz
lea
dec
fcmove
mov
lcall
imul
sbb
lds
enter
cmpb
jne
and
add
push
push
lea
aam
test
add
gs
pop
cmp
out
addr16
decb
mov
mov
inc
daa
add
adc
pop
cltd
in
xor
sbb
mov
sub
lret
out
mov
adc
push
in
push
fbstp
inc
push
aaa
roll
jmp
out
or
aas
insb
aaa
int3
je
cltd
nop
test
je
mov
pop
jl
jae
orb
in
cltd
cli
loop
pop
fimull
shll
mov
or
sbb
dec
idiv
adc
add
pop
mov
or
jne
and
lods
jne
testl
loope
push
push
inc
and
sbb
and
mov
cmp
push
cld
xchg
nop
xchg
clc
sahf
add
mov
dec
jmp
shrb
movb
shlb
js
aas
je
and
mov
shlb
mov
movb
inc
jmp
es
stos
aaa
mov
loope
or
popa
ret
ret
movb
pop
cmp
sub
push
push
test
sub
inc
roll
push
jmp
and
rorl
push
test
sahf
and
leave
fcoml
cltd
sub
xchg
mov
fcoml
or
pop
shl
imull
mov
fsubrl
fdivrl
lea
jns
cmpsb
add
or
add
test
mov
xor
push
fadds
mov
nop
pop
or
jnp
cmp
mov
int
fistps
jno
nop
popa
jle
sbb
mov
mov
add
fs
mov
cmp
sti
push
and
inc
pop
icebp
jl
testl
push
mov
adc
daa
pop
mov
loop
insl
mov
mov
sub
cmp
mov
or
push
ret
xlat
pop
add
mov
dec
loope
push
movsb
cmp
mov
adc
push
es
adc
pusha
loope
clc
and
sbb
add
add
mov
call
inc
test
mov
or
and
idivb
cld
idivb
lea
addr16
cmp
push
inc
sub
fistps
loopne
mov
popa
mov
rolb
and
hlt
shr
inc
or
scas
out
add
push
mov
mov
nop
test
push
add
push
push
insl
ljmp
sub
mov
inc
jl
fdiv
push
lock
pop
popf
or
add
cmpsb
xor
aas
out
ret
cmp
inc
xor
pop
or
sahf
cwtl
pusha
insb
or
inc
mov
les
pop
pop
pop
pop
fs
cmp
pop
mov
outsb
push
xchg
lock
jne
inc
jmp
push
and
je
xor
xchg
popa
sub
imul
jne
jle
fdivs
xchg
or
cmp
sbb
movsb
lea
and
mov
testl
push
pop
adc
push
jnp
cwtl
jae
or
mov
adc
enter
or
clc
sub
add
jb
rclb
ret
jmp
add
popa
and
loop
or
adc
cld
shr
mov
js
inc
shrb
mov
add
pop
arpl
and
cmp
movsl
outsb
dec
xor
xor
push
sbbl
incl
jne
sar
dec
cmp
jbe
push
pop
in
sbb
sub
inc
subb
dec
jmp
pushl
mov
shr
lea
not
and
decb
jne
scas
jp
and
adc
mov
pop
cmp
pop
add
mov
add
push
or
cld
add
pop
inc
inc
jl
and
push
or
sub
jmp
clc
and
std
pop
mov
shlb
and
sti
add
mov
dec
pop
cmp
out
lret
pop
test
jl
and
xor
jo
jp
xchg
dec
shll
cmp
fsubs
and
shll
jne
sub
jmp
lea
cltd
repnz
xor
mov
mov
add
mov
cltd
or
add
or
dec
lock
lea
mov
inc
add
pop
dec
or
adc
negl
ss
mov
mov
inc
mov
mov
out
lret
sbb
lods
push
or
pop
mov
inc
dec
or
jmp
dec
adc
push
mov
or
inc
ss
or
mov
dec
mov
repz
pop
scas
or
and
add
je
and
adc
and
test
loope
add
scas
fidivs
push
call
aas
gs
push
or
call
fxch
js
mov
sub
dec
inc
adc
sarb
pusha
add
and
inc
mov
hlt
jne
push
push
mov
sbb
clc
jecxz
inc
das
das
int
mov
mov
adc
sbb
fisttps
cmpsl
mov
add
cmpsl
sbb
or
mov
pusha
test
loopne
ret
mov
xor
xchg
je
jne
data16
cwtl
outsl
push
fst
shrb
mov
addl
adc
inc
ret
les
cmp
adc
inc
mov
mov
xor
jecxz
cmc
outsl
and
adcb
fwait
orl
mov
lds
mov
xor
scas
push
popa
pop
and
sbb
add
inc
xchg
scas
mov
ret
imul
cmpsl
test
fiaddl
push
mov
jne
or
add
imul
int
lcall
xchg
je
adc
test
push
inc
sub
roll
push
mov
ds
xor
dec
clc
ds
fucom
adc
adc
or
adc
out
mov
cld
lock
call
jmp
add
je
clc
add
pushf
nop
dec
jo
cmpsl
add
popa
push
sub
fs
pop
mov
fistps
inc
inc
mov
lock
dec
dec
inc
sbb
cli
clc
jne
or
lds
not
and
and
les
push
xlat
sub
sarb
mov
pop
and
cld
push
inc
jnp
clc
mov
and
pushf
jle
clc
cmp
ret
int3
inc
mov
add
adc
stc
add
mov
int3
push
push
subb
pop
inc
pop
mov
dec
inc
stc
sbb
clc
sti
dec
in
rolb
es
add
cmp
add
or
mov
add
push
jns
add
iret
repnz
add
ljmp
adc
pushf
sar
dec
mov
dec
cs
fstpl
fcompl
loopne
sbb
jbe
jg
rcl
int3
adc
jle
mov
pop
sub
xor
push
pop
adc
and
adc
cmc
subl
and
jne
pop
sarb
test
xor
adc
inc
insb
xor
add
jae
out
sahf
shrl
and
and
clc
mov
cli
jl
sbb
lea
loop
fimuls
cmc
sub
pop
xor
push
pusha
push
cld
push
sar
dec
jp
movsb
and
mov
imul
out
push
jl
cmp
dec
cmp
or
je
fisttps
mov
push
push
fbstp
adc
fnstenv
dec
fimuls
inc
jecxz
add
ret
ja
lea
mov
xchg
dec
test
mov
ret
adc
push
lods
pop
sub
out
cmp
ret
mov
test
lods
push
push
add
sbb
ja
add
stos
add
ret
lods
pop
and
inc
cmp
add
mov
jge
sgdtl
cli
in
sub
lods
stos
dec
add
out
fldcw
push
nop
cmp
mov
or
pop
ret
adc
pusha
cwtl
or
jae
fcompl
push
jne
mov
xlat
outsb
cli
fnstenv
jmp
jnp
add
xor
aaa
arpl
mov
sti
adc
cwtl
mov
ds
mov
pop
lcall
fcmovnb
outsl
pop
cmp
je
mov
in
pusha
ret
movzwl
and
mov
dec
int3
loopne
fcompl
iret
jne
fwait
jno
inc
aam
xor
cmp
xlat
cvttps2pi
inc
xchg
cltd
add
out
mov
dec
mov
and
jne
cltd
aaa
loopne
mov
push
pop
outsb
leave
inc
test
sbb
push
pushf
mov
sub
icebp
sbb
fdivrl
aam
xor
test
xchg
dec
add
loopne
cmc
call
iret
push
xor
cmp
push
or
cld
jge
pop
mov
decb
jne
sbb
cmpsw
pop
repnz
jmp
jp
mov
pop
pusha
dec
bound
dec
push
xlat
int
and
test
xor
jp
dec
jp
movsl
call
mov
mov
or
pop
xor
xchg
fsubrs
sub
jge
hlt
roll
aad
cmc
push
or
out
add
or
inc
or
inc
or
push
mov
cs
mov
mov
mov
or
adc
cmc
lods
jbe
add
scas
and
lods
jo
pop
mov
sbb
dec
jne
cmp
loop
push
ds
jg
fsubl
inc
add
outsl
or
mov
jno
sbb
cmp
sbbb
in
jb
or
xorl
mov
adc
test
imul
inc
mov
fs
ljmp
lcall
push
lock
roll
orl
cltd
push
push
arpl
fwait
shrb
and
movb
xchg
adc
es
mov
push
orl
xchg
pop
inc
or
inc
inc
cmp
test
mov
sbb
push
mov
test
xchg
je
addb
push
je
repnz
cmp
adc
adcl
xor
jbe
nop
xchg
mov
fistps
inc
or
cmp
orb
aam
aad
fidivrs
pop
mov
mov
sti
lods
fnsave
push
adc
loope
adcb
jl
or
push
push
rcll
pop
mov
jne
mov
std
pop
sbb
mov
iret
sbbl
adc
mov
push
or
pop
mulb
mov
cmpsl
pop
daa
je
loopne
sub
fisubs
push
fisttpl
sub
add
imul
inc
je
pop
rcrb
int
ret
mov
mov
popa
loop
add
pop
add
pop
dec
adc
xchg
or
xchg
stos
mov
nop
jg
or
cwtl
sbbl
jnp
jle
pop
sub
mov
xchg
push
push
js,pt
popf
call
jp
test
popa
push
sbbl
jmp
shlb
jg
clc
fldenv
adc
jge
jmp
movzwl
add
aad
in
int3
mov
lods
in
je
scas
pop
add
cmp
mov
pop
jns
rorl
sbbb
cmc
imul
test
mov
mov
push
aam
or
repnz
pop
ja
movsb
sarb
out
mov
aas
iret
into
dec
xor
sbb
xlat
add
jl
inc
xchg
fisubl
lret
pop
add
lcall
mov
loopne
mov
sub
rcrl
into
ror
jge
fs
cmp
scas
cmp
and
cs
xor
mov
rorb
push
inc
icebp
outsb
and
jne
xlat
xor
jp
or
cmp
mov
pop
and
jb
rorb
jg
adc
inc
fidivrs
xor
xor
adc
cmp
or
push
lcall
les
sub
inc
pop
std
lcall
ret
sarb
ret
in
shll
lea
jb
cmpsl
fisubl
nop
call
push
sbb
mov
mov
lock
push
sbb
xor
push
int3
cmpsl
call
movsl
mov
leave
enter
and
nop
push
and
in
lods
lcall
lret
and
or
or
xor
lahf
call
loopne
lahf
mov
orl
fimuls
iret
out
push
cld
stos
data16
loopne
ret
icebp
test
andb
movsb
nop
sub
mov
loopne
mov
hlt
xchg
lahf
push
lods
push
cltd
xchg
or
shrb
xchg
test
sbb
call
in
test
add
mov
pop
orl
jb
rolb
xchg
in
push
nop
or
inc
xchg
test
pop
push
cmp
test
jle
clc
mov
mov
xchg
pop
mov
sysret
adc
cmc
or
data16
data16
ret
fidivs
cmpsl
stc
xor
ss
or
pop
lea
repz
adc
aas
jne
cmp
mov
pop
lea
inc
sub
mov
dec
les
leave
mov
pop
enter
clc
xchg
ret
lods
sbb
pop
xchg
mov
mov
pusha
int3
inc
or
fwait
rcll
xor
xchg
or
je
adc
std
or
xor
inc
add
mov
adc
mov
push
scas
popa
pop
cmp
and
shll
lods
bound
daa
sbb
jo
push
push
dec
add
jp
enter
pusha
daa
xorb
popa
xchg
mov
jmp
jno
mov
add
xlat
push
testb
sti
mov
sub
lods
or
fsubs
push
clc
xor
fistl
adc
mov
in
jne
imul
add
mov
inc
cld
push
cs
fdivs
nop
add
add
int3
rclb
adc
and
inc
pop
shlb
sbb
mov
aam
lret
not
and
xor
out
lret
cmp
sub
rol
enter
shll
stc
cli
sti
rcl
xor
cld
std
mov
mov
es
xor
mov
gs
adc
cmpsb
xor
jg
mov
pop
sbb
add
aad
fidivrl
shrl
pop
sub
sbb
dec
mov
ss
dec
addb
xchg
push
or
rcrb
inc
fmul
lret
adcl
imul
lock
imull
ffree
push
push
xor
add
mov
fbstp
cltd
jo
push
fldt
dec
xor
mov
pop
lret
lret
das
sub
in
mov
xchg
dec
je
add
and
sbb
xchg
pop
and
sti
fldenv
lcall
xchg
push
test
jns
insb
sbb
add
mov
mov
fadds
sub
xchg
lock
add
sbb
inc
add
jno
mov
lret
xchg
adc
lock
and
call
in
push
jns
loopne
adc
faddl
push
fdiv
punpckhwd
push
fsubrl
fstl
push
shrl
adc
lock
xchg
aaa
jne
fsub
mov
das
and
inc
lock
push
lret
roll
fsub
push
dec
repz
out
testl
prefetchnta
and
pop
pop
push
cmp
mov
adc
mov
mov
inc
push
sbb
insb
or
push
dec
fldt
push
outsl
xchg
add
fdivs
ds
sar
mov
inc
jle
test
mov
push
inc
sti
pop
dec
cld
clc
add
pop
jmp
push
push
xchg
and
out
dec
jmp
inc
faddl
popw
hlt
adc
and
or
aas
push
inc
mov
loopne
repnz
clc
push
fmull
sti
iret
mov
faddl
cmp
test
jne
push
xor
adc
outsb
test
inc
jns
and
add
nop
mov
adc
insl
sbb
push
push
xorl
mov
mov
push
inc
mov
enter
out
add
inc
arpl
scas
sub
call
test
lock
call
in
cmp
mov
lods
std
sarl
or
jne
scas
pop
mov
mov
add
rol
add
xor
or
pop
add
lret
jg
xchg
dec
sbb
pop
lock
mov
push
lea
testb
dec
or
mov
adc
mov
iret
movsl
cmp
xchg
out
test
or
inc
pop
sahf
aad
lret
push
out
push
or
add
es
ja
mov
push
inc
adc
rorb
rcll
lods
push
rorl
pop
lcall
int3
movntq
shl
enter
sbb
inc
cli
int
dec
scas
push
inc
push
pop
or
add
sub
push
jp
xchg
imul
sub
cmp
hlt
out
lods
in
mov
add
popa
cmp
mov
dec
mov
and
mov
mov
or
inc
cli
cmp
lods
add
arpl
call
push
inc
sub
pop
in
adc
push
outsb
xchg
sub
jne
testl
pop
inc
jne
cmp
inc
mov
xchg
lret
xor
xor
cmp
push
int
cmpsb
rclb
jne
js
cmpsl
test
cmp
iret
nop
cmp
dec
cmp
ret
mov
sbb
repz
mov
push
fisttpll
xchg
jl
jae
in
sbb
lret
push
cmpsb
adc
repnz
addr16
cmp
push
mov
sbb
sti
push
gs
lds
popf
push
sahf
iret
lahf
gs
in
mov
pop
fildll
popf
mulb
dec
mov
shrl
movsb
xor
cltd
cmp
adc
adc
sbb
testl
mov
loopne
mov
or
ds
movb
daa
jno
imul
sahf
add
pop
pop
imul
xchg
xchg
repnz
cmp
inc
pop
enter
pop
sti
jmp
mov
sub
jno
mov
jp
pop
pop
out
stos
inc
adc
into
je
notl
rorb
add
adc
mov
std
dec
sub
jecxz
xchg
xor
xor
mov
shrl
std
dec
mov
or
xlat
das
in
dec
sahf
lods
lock
fdivr
adc
sbb
ret
jecxz
lds
jmp
lods
mov
test
push
mov
mov
shlb
popa
and
sti
and
popf
mov
sbb
std
call
cmp
push
mov
shl
ret
js
push
mov
popa
cmpsl
pop
fcomp
jge
mulb
push
shrl
fmull
mov
nop
std
lds
fistpll
arpl
cltd
sub
out
imul
push
push
fmuls
fnstcw
daa
rdpmc
sbb
push
mov
fwait
xchg
jns
fsubl
je
cld
mov
mov
xor
lods
mov
add
movb
movsl
test
sahf
aad
test
jns
aaa
mov
iret
dec
xchg
mov
roll
adc
cmpsb
jb
inc
mov
popa
insb
mov
mov
and
cmp
mov
sbb
std
nop
xchg
std
lock
xor
dec
imul
test
dec
loopne
mov
xor
inc
repz
mov
mov
push
fdivrp
or
ds
data16
hlt
sub
test
sub
jmp
jmp
dec
bound
push
cmc
shll
sar
lock
xor
jge
jmp
push
sub
sub
or
sbb
jge
mov
cmp
jmp
test
xchg
push
ds
cmp
aam
insl
jns
out
jl
lock
dec
or
adcl
fbstp
into
dec
pop
push
pop
insl
mov
movsb
adc
inc
dec
rcr
sbb
imul
push
inc
lret
addb
sti
jne
cmp
xchg
sbb
pushf
dec
hlt
or
xchg
iret
jne
fdivr
das
push
inc
xor
jl
je
inc
inc
sub
inc
std
or
and
std
std
pop
shrl
add
mov
enter
das
dec
mov
xchg
std
inc
mov
and
pop
leave
inc
add
repz
cmpsl
push
jmp
enter
inc
or
mov
fbstp
or
mov
fmull
enter
adc
test
outsb
and
aas
xor
sbbb
aad
pop
pop
leave
mov
nop
dec
push
mov
jb
mov
add
and
pop
and
loopne
push
sbb
aad
or
jg
xlat
adc
sub
cmp
ja
add
adc
in
jo
push
icebp
or
add
sub
xor
outsb
mov
cmc
ds
cs
or
lock
int3
stc
ljmp
mov
push
rep
sbb
mov
add
or
pop
mov
xlat
out
test
int3
stc
xchg
or
stos
jno
and
mov
faddp
pop
push
cmc
int3
stc
adc
inc
scas
int3
stc
mov
sbb
dec
and
stos
cmc
int3
stc
int3
stc
sbb
sbb
int3
les
out
mov
in
xor
cs
aad
or
movsb
xor
push
dec
sub
ljmp
xchg
pop
xchg
push
xor
pushf
inc
repnz
sub
aad
out
in
fisubrl
xchg
pop
lret
cmp
es
inc
leave
lcall
je
cmp
dec
inc
lea
xchg
add
js
std
lret
outsb
cmc
inc
dec
dec
sub
mov
insl
jno
push
jns
fwait
mov
cmc
sbb
int3
frstor
clc
fs
lret
out
push
cld
lret
pop
mov
nop
and
dec
scas
sbb
mov
divl
and
addr16
mov
push
jecxz
xchg
aad
sub
lcall
leave
enter
movsb
cmp
enter
and
dec
inc
mov
lret
xchg
dec
sbbb
push
aas
dec
sbb
adc
pop
and
leave
or
cmp
pushf
fs
cs
nop
nop
xchg
sub
pushf
lods
xor
or
out
lock
shlb
or
je
jmp
dec
aaa
add
aad
fnsave
pop
pop
aad
add
push
out
ds
mov
xor
cmp
mov
sbb
imul
jmp
call
xlat
xor
nop
sbb
jg
adc
sub
inc
push
pusha
mov
lea
xchg
test
sbb
adc
cltd
inc
into
fnsave
cli
sub
or
jg
je
and
xchg
cmp
xchg
lret
mov
out
or
inc
sub
push
nop
inc
add
test
jge
dec
jmp
stos
ss
neg
pop
mov
sub
movsl
lock
push
lods
xor
xchg
ljmp
or
loope
sbb
xlat
andl
adc
int
jl
add
adc
push
and
sti
test
push
pop
outsl
inc
or
push
jbe
jle
sbb
adc
sub
mov
imul
nop
adc
lock
lods
lret
insb
enter
sub
mov
rorb
shl
pusha
into
and
call
mov
sub
push
into
jo
mov
push
mov
clc
ja
ss
sub
mov
add
sub
sbb
cmpsb
mov
inc
rep
jge
mov
cli
inc
aaa
or
rcll
in
in
je
ja
hlt
and
or
cmp
sub
ret
imul
sbb
sub
bound
inc
jnp
dec
dec
pop
add
pop
or
hlt
pop
sbb
leave
or
push
loopne
pop
fcmovnu
loop
pop
push
movb
adc
pop
sbb
cltd
inc
mov
push
shl
pop
aam
loop,pn
add
divl
xchg
nop/reserved
sbb
sarb
dec
push
xor
add
mov
dec
jl
rcl
mov
sub
cmp
push
inc
mov
mov
pop
cltd
add
jnp
fsubrs
dec
push
xor
rcrl
and
test
movb
ds
gs
fistpll
dec
and
mov
dec
cld
push
mov
icebp
pop
inc
pop
and
outsl
mov
test
je
lahf
xlat
divl
adc
loop
ret
jo
xor
sbb
push
adc
mov
mov
lea
popa
add
pop
cli
std
mov
les
mov
push
mov
cmp
jae
and
stos
bound
or
pop
or
loop
sbb
insl
cmp
popf
lret
pop
inc
cs
add
or
jmp
das
add
imul
inc
aaa
mov
mov
sbb
sub
in
inc
loope
fcmovu
push
pushl
shr
add
pusha
cmp
push
cmpsb
icebp
and
loope
ds
pusha
fwait
mov
xchg
sub
sahf
and
popf
loope
ret
inc
cld
cmp
add
gs
dec
fidivs
daa
clc
inc
push
inc
aas
test
sbb
jae
testl
ja
jo
mov
into
rclb
sub
sub
sub
inc
jp
pusha
pop
daa
jb
cs
scas
mov
jae
mov
and
sahf
and
jmp
or
push
pop
push
ret
cs
cmp
movsb
jle
fistps
push
pop
push
push
inc
shr
rcr
shrl
mov
ljmp
div
pop
dec
adc
inc
mul
in
std
std
mov
dec
ja
jb
cmp
or
xor
and
repz
fiaddl
fcmovu
lret
adc
jo
dec
verw
add
add
sub
jbe
pop
jmp
lcall
pop
stc
movb
sbb
pop
and
movb
sbb
jae
fwait
push
jno
in
adc
daa
push
lahf
or
adc
lcall
ljmp
xor
add
nop
arpl
hlt
sbb
or
clc
out
sub
or
adc
cmpsl
sbb
xchg
sar
jge
ret
adc
add
and
dec
lahf
pusha
fsubl
leave
std
jne
roll
pop
pop
cmpsb
sub
cmp
lock
enter
inc
lods
xor
push
adc
lea
cmova
dec
sbb
sbb
mov
inc
cmp
cs
pop
inc
jle
jne
lea
jb
jo
js
sbb
pop
sbb
aas
pop
xor
nop
lret
push
sub
test
call
cmc
jne
or
sti
cvtps2pd
xchg
dec
jae
and
adc
dec
or
pusha
ficompl
or
add
dec
adc
sbb
prefetch
mov
inc
mov
fs
push
adc
fdivrs
and
mov
in
adc
cld
sbb
subb
mov
ss
sub
pop
push
sbbb
lock
mov
sbb
push
stc
mov
or
jo
repz
xor
push
sub
pop
mov
lret
push
add
iret
add
add
xchg
data16
add
pop
sbb
adc
jo
jmp
stos
add
push
push
dec
lea
out
ret
lea
imul
mov
lahf
mov
cli
cmp
or
xchg
sbb
inc
lock
mov
sbb
sbb
push
add
xchg
hlt
adc
int3
inc
cmp
test
mov
sub
mov
faddl
cmp
in
push
fwait
sub
loopne
xchg
pop
pop
pop
and
gs
add
inc
addl
or
pop
ret
hlt
or
outsb
gs
pusha
xchg
loopne
test
pcmpeqb
cmp
fdivrp
iret
jle
jnp
lods
iret
sub
or
mov
jecxz
push
adc
or
sarl
or
stc
xor
dec
xor
aas
in
xor
jo
and
or
and
cmp
jne
gs
push
int3
pop
inc
jl,pn
adc
push
out
cmp
je
ss
mov
shlb
iret
push
aam
xchg
pop
addr16
outsb
or
or
enter
popa
adc
scas
add
out
add
lds
pop
std
sbb
mov
cld
into
inc
add
push
mov
nop
mov
or
pushf
ret
xchg
dec
dec
icebp
lods
hlt
icebp
repnz
xchg
push
ds
inc
inc
or
jo
add
jbe
cmp
cmp
jb
inc
les
sbb
pop
add
xchg
dec
sub
loop
and
cmp
roll
sbb
into
and
dec
sbb
insl
mov
jne
mov
bound
inc
add
push
push
dec
ljmp
dec
out
xor
mov
push
mov
xchg
loopne
ja
sti
jb
inc
sub
or
mov
mov
push
push
or
rol
or
add
lock
ret
adc
insl
imul
jo
xor
pop
ja
sub
sub
adc
and
pop
add
cmp
dec
pop
dec
and
mov
rol
push
es
mov
jbe
andl
add
ja
push
pop
mov
or
mov
push
rorb
dec
sub
imul
or
push
xor
stos
add
mov
mov
mov
scas
sub
cmp
subb
int
and
popf
dec
cmp
sbb
pusha
lcall
js
test
mov
repz
lock
cmpsb
rorl
and
leave
outsb
cmpsl
popa
push
and
cmp
xor
sbb
sbb
push
outsl
add
jle
cmp
fldenv
xor
cmp
pop
sbb
ds
xchg
test
cmp
inc
scas
push
cmp
xchg
mov
pop
mov
aam
roll
jmp
leave
push
sbb
adc
lret
sbb
cltd
js
mov
shrb
dec
or
xor
cli
sub
movsb
push
cmp
test
and
imul
and
rol
in
hlt
add
xchg
push
pop
out
cmp
xor
into
test
shrb
jne
pop
inc
or
sub
mov
or
lock
shll
fs
xor
nop
dec
fstps
mov
lock
adc
mov
mov
les
rolb
mov
jmp
xchg
fdivl
lock
fcoms
sub
sbb
ja
sti
adc
scas
mov
mov
in
dec
or
jne
addr16
pop
sti
inc
mov
cmp
shlb
push
in
push
in
adc
add
mov
add
ja
sub
push
or
je
add
pop
mov
mov
jne,pn
sbb
inc
mov
inc
ja
and
fwait
sub
adc
jbe
sti
mov
cmp
jge
mov
mov
adc
push
pop
mov
adc
idivl
xchg
addb
andl
push
dec
jmp
pushf
and
push
insb
shl
and
and
add
add
test
sub
dec
sbb
adc
fs
mov
pop
add
pop
mov
push
sahf
mov
pop
xchg
insb
in
das
je
inc
adc
push
popf
addl
lds
stc
mov
jecxz
dec
jne
mov
js
and
cmp
or
ja
bound
and
cmp
jbe
and
movsb
ljmp
movsl
mov
cmp
mov
push
aaa
dec
jae
clc
andl
mov
ja
cwtl
scas
sub
inc
test
add
jo
imul
into
add
loope
rcll
mov
or
cmc
sbb
mov
in
adc
sbb
in
cmp
jbe
or
inc
fadds
inc
js
ljmp
popf
loopne
sub
subl
inc
popa
mov
pushf
sbb
je
sbb
sub
test
cs
mov
and
repz
jmp
enter
lds
loopne
daa
mov
mov
mov
dec
add
add
add
in
aam
lret
xor
push
out
mov
movl
mov
mov
in
repz
pusha
fdivs
xchg
cld
mov
push
xchg
inc
and
pop
ficompl
push
push
jb
push
fdivs
sbb
fs
mov
push
inc
pop
push
xchg
or
les
and
sub
xor
test
shrb
jne
xchg
add
inc
call
dec
xchg
fsubrs
push
cmp
ss
jmp
xor
js
out
push
inc
inc
xor
push
adc
add
add
inc
pop
je
pop
es
into
movsb
sahf
jb
je
loopne
and
popf
and
or
mov
std
mov
jmp
add
adc
andl
icebp
xchg
xchg
leave
roll
or
sub
inc
clc
cmp
loopne
and
inc
mov
mov
mov
xor
inc
pop
loope
pop
add
rolb
arpl
sub
ljmp
cwtl
mov
mov
or
inc
mov
xor
sbb
sub
mov
sbb
mov
adc
pop
cmpsb
sbb
inc
xor
or
jno
pop
sbb
adc
jae
mov
add
shl
setle
lods
mov
ss
stos
mov
fimull
pop
testl
jecxz
or
sbb
add
and
js
jo
jle
or
pop
pop
loope
jne
rorb
inc
jb
push
inc
or
or
mov
aaa
sahf
and
cli
cmpsl
inc
jbe
jne
in
mov
cmp
dec
sbb
or
jne
repnz
sub
push
sar
mov
pop
and
arpl
arpl
and
or
pop
clc
dec
mov
aad
gs
xor
add
cld
sub
pop
push
cmpl
inc
addb
lock
mov
add
add
jo
and
or
out
int
pop
or
js
sbb
push
sub
lds
es
pop
adc
lea
and
or
push
push
pop
push
dec
add
loop
add
add
call
mov
mov
jmp
add
insl
mov
or
or
push
and
push
cmp
inc
mov
pop
mov
js
jae
add
dec
cwtl
pop
mov
nop
jno
and
add
cmp
mov
jmp
add
sbb
pop
add
push
cmpsb
shl
rorl
and
lea
cmpxchg
pusha
and
and
push
addb
adc
add
inc
cmp
ret
cmp
adc
add
fsts
jo
add
jle
mov
dec
push
and
push
mov
clc
ljmp
dec
push
mov
add
out
add
and
push
jae
or
scas
sub
sarl
decl
pop
push
inc
adcl
pop
xor
xor
jae
cmp
push
orb
mov
sub
jb
xchg
andl
testb
pop
dec
shl
mov
add
in
push
gs
aaa
xor
rorl
mov
add
or
sbb
mov
movl
add
mov
jmp
scas
pop
push
dec
dec
notb
jae
push
imul
mov
ret
arpl
frstor
mov
jp
or
mov
push
mov
sarb
and
push
xchg
movsb
cmp
jns
loope
lock
cmp
xor
and
dec
daa
cli
test
mov
or
adc
lock
xor
push
rcrl
cwtl
ret
add
enter
das
outsb
js
les
jb
rcrl
add
adc
rol
ret
sub
pusha
rcrl
mov
sub
ljmp
inc
das
in
mov
xor
gs
jle
mov
insb
cmc
mov
into
bound
push
mov
addr16
dec
clc
subl
add
mov
cmp
fs
clc
add
ret
pushl
add
lcall
jae
and
and
lods
xlat
add
ds
mov
out
push
addb
inc
inc
adc
in
cmp
jl
cmp
in
mov
inc
xor
mov
nop
adc
xchg
add
cmp
cmp
daa
adc
js
je
push
cmp
fnclex
pop
cmpsb
xor
push
shll
outsb
sbb
push
jne
lcall
ficomps
xchg
or
or
add
sti
or
add
mov
and
xchg
and
dec
pusha
jb
push
aam
inc
dec
or
add
ret
loopne
pop
subl
push
das
pop
add
shr
push
insl
and
fdiv
or
fsubrs
and
stc
push
mov
or
roll
call
out
decl
cwtl
mov
sub
push
push
xor
movsl
das
les
jo
js
push
and
inc
cwtl
cmp
cmp
xor
and
push
push
mov
pop
mov
dec
mov
cmp
inc
jo
popf
jg
add
or
mov
jmp
repnz
xorb
dec
fs
orb
jns
jo
sub
mov
mov
sbb
aam
sarb
fxch
flds
ret
xor
mov
mov
aam
fsubr
push
and
sbb
push
rol
jge
push
jmp
sbb
push
call
call
or
push
scas
int
sub
adc
outsl
jo
push
stc
mov
fdivs
adc
sbb
or
dec
fwait
mov
push
imul
popl
mov
aam
sbb
addl
test
mov
aaa
adc
sub
mov
jl
adc
push
nop
add
jle
imul
jne
movsb
sub
jl
cmp
jg
push
cmp
adc
out
scas
hlt
pop
cmp
jbe
jne
imul
enter
push
test
movsb
sbb
ss
popa
cmp
push
shll
and
addl
push
mov
jle
inc
push
mov
ds
sub
xchg
mov
adc
mov
xor
push
mov
cmp
std
mov
push
ja
cld
and
add
sbb
popa
mov
mov
test
xchg
or
rolb
stc
pop
or
push
rol
push
or
movl
mov
or
pop
push
inc
ret
cs
je
and
adc
mov
cmp
add
je
testb
je
in
mov
adc
sbb
in
dec
stos
mov
xchg
adc
sub
dec
inc
loopne
aad
data16
stc
sub
mov
mov
dec
and
jle
sbb
sbb
cmp
jecxz
test
push
jg
mov
push
add
mov
notb
or
call
gs
rcrl
test
cmp
jl
xchg
mov
dec
lods
add
mov
add
mov
fs
adcb
jle
sub
add
mov
add
fld
out
out
in
and
mov
out
jmp
adc
std
lock
sahf
sub
or
cmp
mov
dec
push
imul
pop
inc
sbb
add
or
or
add
dec
andl
rorb
test
ret
loope
push
arpl
mov
xor
xor
jge
push
cs
fs
xor
mov
adc
scas
and
push
loopne
addb
xor
aad
mov
lret
dec
mov
sti
jg
mov
inc
bound
add
adc
nop
daa
sbb
pushf
adc
lea
fstpt
test
add
addb
push
push
mov
imul
rclb
out
sahf
out
pop
jg
leave
xor
mov
lahf
fs
pop
jl
mov
sub
xchg
data16
adc
adc
sbb
xor
fneni(8087
lret
adc
stos
lock
jecxz
and
sbb
mov
add
cwtl
jbe
out
sub
and
addr16
mov
mov
mov
aaa
mov
mov
adc
ss
push
or
cmpsl
inc
inc
push
clc
addb
mov
jmp
mov
pushf
cs
lock
pop
cmp
outsb
lret
mov
ja
sbb
or
sbb
push
ss
pop
sub
jle
pushf
jg
pop
stos
xlat
add
dec
shlb
aaa
xchg
pop
popa
cmp
lods
adc
cwtl
or
repnz
inc
cmpsl
and
adc
ljmp
push
pusha
cs
rcl
addl
inc
cmpl
inc
push
int
popf
jne
movsl
and
jge
push
scas
out
rcrb
sbb
lods
xchg
ret
sbb
pop
lock
mov
or
shlb
pusha
sub
imul
pop
cmp
adc
mov
fisubl
or
test
mov
loopne
add
or
cld
sub
inc
js
setb
ja
xor
lcall
and
and
loope
sbb
add
repz
mov
jbe
lcall
mov
cltd
and
cmp
pop
push
jecxz
push
and
cmpl
addr16
fwait
mov
push
jmp
cmp
out
pop
jnp
or
je
xchg
je
mov
arpl
fs
sbb
jmp
outsl
les
push
sub
adc
ds
add
inc
arpl
xor
scas
and
inc
add
in
add
add
call
or
mov
cmp
bound
jle
cmpb
leave
repz
and
add
and
push
or
sbb
rolb
cmp
and
push
ja
sbb
add
sbb
add
inc
je
pushl
mov
icebp
dec
pop
and
adc
inc
insl
add
dec
or
adc
xor
jns
xor
mov
add
mov
mov
fs
in
aas
sbb
flds
je
pop
cmc
and
xor
or
or
mov
cwtl
dec
add
scas
adc
aad
cmc
fistl
cmp
jae
add
aaa
jl
mov
inc
add
push
cld
fmull
xchg
add
outsl
les
sbb
pop
jns
jle
pop
lock
call
jne
clc
push
mov
cmp
inc
cmc
or
cmc
dec
push
ljmp
jb
mov
sub
and
and
xorb
in
dec
dec
and
mov
movsb
adc
stos
insl
inc
enter
icebp
cmp
data16
sub
mov
sbb
and
pop
push
mov
scas
or
dec
incl
sbb
or
xchg
adc
lods
mov
shll
xchg
or
insl
sbb
xchg
xlat
jns
jne
fadd
cmc
jle
and
in
rcll
arpl
lods
xchg
cmp
add
stos
dec
subl
sbb
xor
je
xchg
lock
inc
jp
jecxz
add
push
xchg
adc
adc
aas
push
test
push
mov
push
jle
adc
cmp
push
jp
pop
and
mov
jno
inc
push
lock
adcl
sbb
stos
jo
rorl
aam
jl
hlt
outsb
push
mov
and
shrl
mov
adc
in
pusha
lock
add
and
adc
push
popa
jge
sbb
decl
xor
dec
fdiv
fstpt
adc
orl
sub
sarl
jnp
pop
hlt
pop
sarb
out
insb
shl
or
rolb
sbb
popa
fadds
pop
pop
jne
pop
and
adc
cmpb
lds
inc
popa
or
push
adc
or
cmp
cmp
xchg
notl
repnz
push
mov
sub
cwtl
das
sbb
scas
shl
push
push
fwait
jnp
es
lret
scas
sub
mov
push
mov
ljmp
xor
or
lret
out
mov
or
rcr
pusha
mov
adc
xlat
je
cmp
repnz
shll
testb
and
add
push
or
rolb
orl
xchg
jge
push
jmp
cmp
fmulp
inc
movb
cmp
adc
je
cmpsb
xor
sub
dec
loop
pop
adc
push
push
or
jo
outsb
lret
push
sub
push
inc
push
sub
shr
jmp
das
xor
js
mov
cmp
icebp
xorl
scas
or
add
mov
imul
aas
adc
fstpl
pop
jmp
adc
mov
rolb
push
cmp
les
cmp
call
push
push
fmull
inc
mov
stc
and
and
test
sub
sbb
jbe
xor
outsb
je
xchg
cli
inc
sti
das
adcb
bnd
lea
lea
or
test
and
add
int3
outsb
ja
into
cmp
repz
sti
ret
sbb
mov
popl
movb
or
push
dec
je
or
adc
push
cmp
cwtl
push
test
adc
cli
sarl
mov
xor
arpl
dec
and
or
sbb
add
add
or
mov
mov
shlb
inc
jg
call
pop
ja
ljmp
xor
xchg
and
out
shrb
inc
jnp
add
loop
jp
mov
push
adc
rorl
push
dec
test
adcl
outsb
mov
xchg
adc
ss
dec
dec
dec
sub
xor
dec
dec
dec
sbb
cmp
dec
fimull
cmovs
push
pop
daa
daa
daa
pop
add
daa
daa
daa
daa
insb
jo
js
mov
daa
jl
cltd
fs
negb
adc
mov
xchg
cwtl
xchg
dec
es
pushf
mov
fs
sub
adc
or
es
mov
xchg
xor
lods
pop
sub
and
jle
or
clc
cltd
nop
and
and
adc
xor
mov
or
and
sbb
and
or
and
fwait
add
or
ror
mov
pop
and
lret
push
jo
add
and
inc
ret
add
rclb
add
dec
jne
out
inc
sbb
jbe
pusha
lret
pop
mov
nop
sbb
sub
mov
inc
and
cli
dec
mov
sbb
cmp
push
fstps
mov
dec
sbb
add
add
rolb
pop
call
dec
int3
push
aam
inc
xchg
lret
pop
repnz
sub
roll
inc
or
js
pop
fiaddl
jne
mov
iret
pop
jno
xor
inc
movsb
and
call
fadds
pop
es
push
jb
pop
cmp
sbb
or
das
cmp
add
andb
scas
cmp
js
ret
testb
inc
outsl
lods
sub
inc
out
mov
sub
add
fmuls
in
in
ret
push
popf
inc
arpl
or
pop
int3
sbb
lcall
inc
lcall
pusha
bound
jne
negb
pop
mov
je
push
pushf
xor
in
sub
sub
inc
push
dec
and
and
sbb
test
sub
pop
add
and
lods
or
sbbb
repz
push
sbb
cmp
int3
add
cmpsb
add
mov
dec
cmpsb
push
cltd
outsl
sbb
sarl
pop
fwait
mov
and
sbb
xor
mov
cmpsb
cs
push
adc
push
inc
loopne
ret
xor
xorb
cmpsb
cli
xlat
jmp
jbe
sahf
mov
jg
int
icebp
push
adc
outsl
xor
jo
jbe
mov
xor
fcmovnb
add
and
rclb
popf
or
ja
cmp
push
outsb
or
popl
loop
inc
sub
pop
mov
adc
icebp
adc
and
insl
lods
std
testb
push
push
sub
inc
outsl
jmp
enter
mov
lea
cmpb
psubb
loope
orl
xlat
inc
xchg
add
inc
or
xor
and
and
sti
inc
and
jp
push
xor
lods
sub
mov
out
pop
dec
cltd
mulb
ja
pop
mov
popf
sbbb
into
sub
sbb
mov
in
mov
xor
cmp
stos
das
inc
out
mov
std
ljmp
jecxz
loopne
jno
mov
push
dec
ret
test
or
and
out
mov
out
cmpsl
std
pop
and
fcmovnbe
sti
mov
or
sbb
sbb
insb
pop
fadd
negl
jne
mov
iret
xchg
ret
adc
rclb
mov
pop
adc
add
shll
mov
inc
sbb
xchg
inc
insb
push
dec
ljmp
add
push
inc
pushl
dec
shrl
add
jns
cmp
sub
add
loope
pop
addl
pop
outsb
xchg
push
movsb
cmp
sbb
mov
mov
and
or
or
cmp
lods
mov
inc
loope
inc
loope
mov
mov
mov
cmp
loopne
add
stos
jmp
ja
fcmove
push
cmc
mov
cmp
add
xor
mov
mov
push
jnp
add
adc
jl
push
mov
scas
inc
call
jmp
les
inc
lea
pushf
rolb
xor
cmp
lea
mov
jnp
dec
pop
pusha
cmp
pusha
popa
push
imul
xchg
push
lea
jl
mov
movsb
add
jns
jecxz
andb
cmp
add
mov
ljmp
and
add
test
push
or
push
add
iret
sbb
scas
sub
or
or
cmp
jne
movzwl
sub
push
cmp
shll
add
inc
int
call
jmp
inc
cmc
jae
movsb
dec
pusha
push
mov
sub
sahf
stos
cmp
fcomps
lcall
dec
dec
dec
clc
fisttps
sbbb
and
adc
push
sysenter
enter
sbb
dec
add
xchg
sbbb
adc
jl
shl
lret
out
mov
jmp
xchg
mov
jge
jbe
andl
mul
sub
push
cmp
mov
adc
lock
adc
cli
or
inc
mov
mul
in
mov
adc
dec
mov
sub
sub
sub
sbb
lods
sub
inc
add
fidivrs
daa
jmp
insb
adc
andl
pop
in
movsl
sbbb
add
push
cmp
inc
cmp
pop
push
cwtl
inc
lods
push
orl
pop
mov
inc
inc
sbb
or
repnz
cmp
mov
xchg
push
jb
add
inc
sarl
inc
xchg
or
dec
stc
pop
xchg
cmp
jbe
and
into
xchg
push
inc
out
add
add
sub
addb
in
test
mov
and
jmp
pop
fcmovu
or
sub
out
gs
mov
std
jno
sbb
adc
stc
or
mov
sub
mov
jns
je
add
mov
or
repz
aad
sti
mov
fiadds
push
addb
pushl
lods
adc
lret
xchg
inc
ja
fdivrs
add
insb
ljmp
pop
cmp
adc
cld
ret
xor
jnp
xor
nop
add
sbb
cmp
cmpb
mov
xor
sbb
andb
dec
rorl
xor
xchg
inc
add
ja
sub
and
and
or
push
je
aaa
push
mov
add
mov
pushf
cs
pop
sub
and
jl
popa
or
or
loop
cld
clc
mov
scas
inc
clc
mov
orl
sbb
push
jp
add
xor
popa
and
dec
adc
rorl
or
ret
aaa
and
sbb
or
int
add
mov
add
out
shrb
inc
xor
push
aad
rclb
jno
jno
sub
sub
push
ja
mov
dec
cmc
fdivrl
sbb
push
and
mov
xor
inc
sbb
scas
repnz
ja
sub
and
insb
aam
pminsw
pop
inc
inc
push
mov
mov
adc
out
pushf
cli
sbb
insb
mov
dec
iret
imulb
add
mov
pop
adc
aam
jecxz
cmp
adcb
pushl
sbb
out
adc
nop
divb
into
xor
and
cmpb
fisubrs
and
lods
pop
xorb
sbb
adc
push
mov
pop
mov
push
shlb
gs
jne
lods
and
pop
cmp
lods
jg
jnp
js
rclb
fdivrl
shlb
adc
and
addr16
pop
push
mov
push
inc
or
add
ljmp
imul
xchg
add
rclb
ss
cmp
and
jecxz
jl
pop
adcb
push
pop
or
add
lods
pop
lods
pop
pop
jnp
mov
mov
cmp
push
jns
int
insl
xchg
add
clc
je
xor
jl
add
inc
dec
into
lcall
test
add
jle
rclb
ljmp
hlt
mov
adc
add
jbe
push
push
and
jge
add
pop
jl
data16
jge
push
nop
test
add
js
pop
sbb
add
push
push
add
push
popa
add
in
test
clc
xchg
dec
jns
add
add
inc
fbstp
xchg
pop
popf
adc
or
push
jmp
pop
mov
test
lret
jae
dec
inc
imull
sub
push
dec
xor
inc
jmp
icebp
xor
jmp
jge
mov
out
cmp
loop
jle
mov
fildl
test
xchg
ret
push
jp
imul
out
test
gs
cmp
out
sbbb
test
sbb
pop
adc
jnp
lock
sbbl
bound
xchg
rclb
jp
inc
push
push
cmp
mov
adc
stos
adc
sub
and
std
lea
ret
loope
fmuls
mov
mov
std
sub
inc
fnstenv
data16
stos
add
jo
mov
adc
pop
dec
inc
dec
add
out
dec
pop
mov
mov
mov
mov
ret
or
sbb
cmp
jecxz
inc
sbb
mov
lods
and
jecxz
cmp
mov
xor
pop
inc
jb
mov
dec
dec
in
dec
insb
jbe
pop
jbe
jbe
mov
loope
inc
mov
xchg
fldenv
cmp
dec
cmp
mov
sarb
repnz
das
inc
rcrb
ret
adc
inc
nop
mov
dec
into
jl
call
jle
xchg
adc
shl
or
jmp
or
push
or
or
xchg
into
lcall
test
mov
mov
mov
push
inc
les
jle
shr
inc
pop
test
xchg
in
popa
cmp
cwtl
add
pop
or
in
pusha
icebp
jne
and
adc
sarb
inc
jl
or
ror
js
aam
and
add
pop
jmp
sub
cwtl
sbb
or
mov
push
incb
and
pop
mov
xor
dec
push
popf
pushf
pop
sub
je
push
popf
ds
cmp
add
xchg
shr
sbb
pop
testl
xor
push
sub
adc
add
push
cmpb
fnstsw
shr
imul
cmp
or
repnz
loop
lock
or
mov
add
test
and
fsubs
and
cmp
and
nop
aas
mov
shl
not
xor
loope
xor
and
inc
outsb
and
shr
add
es
and
xor
sub
and
aaa
loop
cmp
test
adc
jmp
adc
test
xor
pop
stos
cwtl
out
inc
mov
adcb
and
xor
lock
sub
inc
jmp
pop
clc
incb
jmp
pop
mov
or
jmp
inc
and
mov
and
mov
movsb
jl
and
jecxz
jge
lcall
xchg
jmp
pop
sub
adc
dec
or
loope
mov
cmp
adc
fisttpll
sbb
loope
or
sub
call
out
pusha
mov
pusha
loope
pop
sub
sub
inc
jecxz
pop
fisttpll
rclb
pusha
fst
test
insl
pop
sbb
es
addr16
add
inc
or
push
es
adc
sti
fists
add
test
fists
xchg
les
xchg
cli
cwtl
mov
stos
mov
dec
jne
orl
xor
sti
xor
fsubrs
cmp
and
adc
lods
movsl
jmp
xorb
sbb
fsubr
imul
adc
out
movb
push
fnstenv
cs
sub
or
pop
push
stos
shrb
mov
into
adc
std
out
cwtl
push
inc
bound
xchg
mov
insl
dec
or
sbb
adcb
adc
xor
or
add
cmp
mov
cmp
xchg
push
xchg
lods
addr16
sbb
aaa
pop
ret
fcompl
rolb
mov
jl
add
sub
sub
jmp
cmp
mov
sub
push
xorb
or
inc
xor
xchg
test
int3
adc
mov
cmpsb
jg
hlt
add
mov
roll
bound
insl
pop
test
xchg
fstpl
pop
mov
shlb
cli
imul
or
or
lahf
mov
mov
inc
xchg
inc
movsb
shrl
loopne
sub
mov
or
jecxz
mov
repnz
leave
stos
mov
into
test
shrl
outsb
sub
cmp
orl
loopne
push
testl
sub
lea
cmp
lods
in
aam
xor
adc
mov
decb
push
and
mov
push
dec
pop
sub
cmp
adc
mov
push
add
fwait
and
add
das
adc
test
xor
add
add
adc
push
push
shlb
mov
mov
jnp
lea
or
dec
cmp
pop
inc
pop
sbb
sbb
add
push
or
sbb
das
adc
rcrb
cmp
adc
mov
and
sub
add
pop
sub
pop
push
je
jmp
insb
lea
sbb
loope
rcrl
rcrl
sti
pop
adc
incb
jno
jbe
das
gs
mov
test
cmp
add
xorl
addr16
sbb
insb
jo
sbb
dec
sbb
out
gs
cmp
incl
mov
fsubr
les
test
mov
and
xorb
inc
inc
push
lea
sub
mov
or
mov
icebp
and
xchg
and
sub
sbb
mov
mov
add
into
popa
sbb
mov
jae
jb
fldl
inc
adc
adc
sbb
pop
jbe
test
jecxz
mov
or
bt
or
jge
fsubl
data16
cs
dec
jl
loope
ret
mov
push
aam
jle
inc
shl
jne
pop
adc
and
shrl
xchg
mov
enter
jmp
movl
adc
ret
dec
xchg
push
pop
fadds
into
or
test
jne
das
pop
cwtl
sbb
xor
xor
test
cmovge
mov
pop
or
mov
test
icebp
sbb
shll
push
or
stos
inc
add
or
ret
dec
jle
out
mov
cli
inc
and
mov
sbb
or
xlat
xorl
dec
mov
fsubrs
sub
ljmp
cltd
pop
sub
dec
aad
add
fisttpll
mov
loop
verr
fsts
and
xor
push
or
insl
or
push
mov
mov
sub
or
enter
fwait
int3
and
push
imul
aam
loope
outsl
cmp
jle
call
xchg
cmp
push
mov
or
bound
cli
and
jp
mov
sbb
adc
ldmxcsr
sub
and
jb
mov
or
jmp
and
inc
ret
repz
pop
cld
mov
push
mov
adc
push
push
aas
mov
sbb
inc
mov
lea
and
jle
mov
shrb
addr16
or
bound
pop
pusha
xchg
insl
push
mov
lds
das
lods
sbbl
push
mov
push
jnp
add
addr16
and
mov
int
adc
aam
add
imul
adc
aam
les
gs
repnz
sti
xor
out
sbb
psubq
xchg
adc
sbb
lock
cmp
or
or
les
loope
push
sub
mov
insl
xlat
sub
add
adc
adc
mov
sub
or
sbb
cmpl
xor
pop
adc
mov
adc
dec
cmp
cmpsl
int
rclb
mov
push
mov
loopne
add
push
or
or
add
jmp
aas
sub
lock
sbb
sti
add
clc
and
push
daa
mov
pop
test
jne
sbb
movl
and
roll
stos
stos
test
loopne
lret
fs
mov
xor
cli
sbb
and
add
xor
jge
and
pop
dec
jns
loop
loopne
lea
xchg
mov
push
subb
inc
shl
shlb
mov
pop
or
outsb
call
shl
not
test
add
lods
call
outsb
push
cltd
insb
pop
and
mov
loop
mov
dec
or
inc
insb
sub
mov
lea
xor
repnz
xor
cmp
std
jae
les
pusha
sub
adc
jnp
or
jb
incb
jae
sub
push
mov
sarb
je
pop
add
and
or
insb
xor
test
push
mov
inc
mov
loope
cmp
dec
dec
stos
inc
pop
enter
fmuls
shrb
xor
xor
movsl
cmp
sub
loop
xor
outsl
sbb
or
clc
out
and
push
cld
or
in
popf
je
adc
gs
and
pop
ds
mov
and
and
lock
test
andl
or
test
out
mov
aaa
sub
sarb
je
mov
and
jge
popa
mov
sub
pop
in
add
int3
or
pop
hlt
test
xchg
sub
adc
adc
lcall
lea
dec
add
cli
jne
mov
mov
push
pop
xor
pop
sub
and
iret
dec
jns
inc
lock
sahf
inc
inc
add
push
inc
or
add
jae
cmp
cmp
cmp
imul
mov
and
out
loopne
inc
sbb
jl
pop
sbb
js
andl
xchg
push
cmpsb
into
out
jo
mov
iret
and
mov
loopne
or
xor
or
addb
sub
dec
aas
sbb
shl
out
addl
and
call
mov
or
insl
add
sbb
mov
xor
pmulhuw
clc
xchg
jp
and
bound
pop
pop
add
or
sub
sub
enter
adc
adc
adc
pusha
inc
xchg
cmp
adc
repz
add
adc
sub
cmp
or
adc
or
sbb
or
xchg
sub
mov
test
sbb
lods
cmp
dec
push
lahf
and
push
in
xor
push
adc
cmpsb
imul
test
mov
pushf
mov
sbb
jne
imul
adc
rolb
lods
mov
sub
or
cmp
lock
jne
inc
jmp
mov
sub
or
xchg
add
aam
out
enter
incl
or
push
dec
jmp
fs
fldl
push
mov
mov
hlt
fadd
fwait
rolb
call
adc
dec
cmc
fsubl
je
add
into
jmp
loopne
or
push
ds
jo
sarb
cltd
cmpsl
mov
inc
xchg
je
adc
adc
mov
sub
pop
inc
push
inc
jle
cmp
push
xor
cmp
pop
les
orl
in
sub
adc
xchg
lods
jbe
inc
pop
fisubrl
pushf
subl
cmp
fs
dec
or
mov
and
sbb
mov
ret
jbe
insb
cmp
inc
mov
pop
iret
sarl
jge
pop
cmp
test
out
jge
sub
jbe
nop
add
jne
mov
dec
jae
imul
sbb
test
lds
and
outsb
mov
call
decb
push
cmp
mov
adc
gs
in
orl
add
pop
push
and
xchg
jl
sub
cmp
mov
stos
sub
jmp
and
call
je,pt
mov
test
nop
mov
sub
fldcw
sub
pusha
pop
cmp
sub
add
jl
incb
dec
mov
jmp
dec
inc
cmove
hlt
pop
push
mov
subl
xor
mov
jge
test
and
sub
stc
push
adc
dec
push
or
jmp
mov
or
push
cwtl
pop
mov
or
mov
dec
mov
imul
xor
rcl
in
jg
or
jge
neg
add
mov
orb
movsb
sub
cmp
loop
and
cmp
adc
mov
sbb
ret
mov
jle
add
sub
push
sub
jbe
jle
jne
push
pop
lea
out
dec
test
lods
sarl
push
cmp
and
flds
rorl
push
mov
rolb
cmpb
pop
mov
or
mov
mov
sbb
mov
loop
icebp
mov
ret
and
inc
imul
adc
nop
fs
xor
push
andl
adc
sbb
jle
sbb
ja
ja
mov
push
jae
sbb
pop
movb
adc
int3
jne
cmp
jne
or
jne
test
sub
lret
out
jne
inc
or
cmp
imul
jne
hlt
int3
add
jne
mov
and
mov
test
mov
or
test
rcrb
mov
push
lea
sub
mov
rolb
sbb
cld
sahf
add
add
dec
lock
push
clc
je
ja
data16
dec
fs
js
subl
lcall
cltd
jbe
mov
stc
dec
push
sbb
jg
add
adc
lods
aaa
sbb
aaa
pop
bound
shll
add
pop
add
lods
add
or
shr
adc
push
out
mov
jae
bound
or
adc
inc
mov
mov
add
div
lods
mov
in
sti
jg
ss
fcom
insl
fadd
loopne
shr
or
mov
xchg
inc
push
dec
fwait
aam
shrl
xor
cs
push
jl
mov
mov
and
mov
mov
cmp
shll
sbb
sar
pop
or
popa
pop
jl
fiadds
dec
xor
or
scas
fisubl
mov
mov
and
push
fmull
mov
push
dec
add
cmp
shr
popf
stos
or
sub
sbb
lret
into
jmp
scas
rcrl
push
xchg
rolb
mov
sbb
movsb
int3
sbb
fadds
test
int3
add
jne
push
lret
mov
jmp
sub
add
imulb
mov
movups
xor
push
stos
mov
bound
inc
sbb
xor
mov
add
cmpsb
cmp
push
push
cmp
enter
iret
repz
outsl
pop
fxch
int
test
or
mov
aad
out
and
add
fs
fildl
cmp
add
jge
add
scas
inc
mov
mov
adc
and
mov
jo
andl
cmp
pop
push
in
popa
and
push
or
negb
push
xchg
xchg
adc
inc
cs
or
or
ss
cmp
je
or
loopne
popa
xor
mov
dec
cmpb
je
mov
cmp
push
sbb
add
or
mov
out
insb
insb
add
adc
add
xlat
push
sbb
dec
cmp
outsb
fisttps
loope
xchg
pusha
or
in
cltd
call
dec
andb
push
out
cmc
jns
or
cmc
xor
xchg
movsb
xor
out
and
and
idivl
rcr
push
adc
jbe
add
cwtl
dec
fwait
and
xchg
movsl
pop
adc
rolb
mov
xor
addr16
xchg
mov
jle
pusha
adc
mov
shlb
fdivs
or
add
mov
xor
mov
cli
test
pop
je
setg
sub
out
clc
add
mov
mov
mov
lcall
cmpl
mov
jne
movb
lea
sarb
adc
sarb
add
push
cld
loop
adc
push
xorb
mov
in
jmp
sbb
loop
clc
or
pop
lret
jmp
sub
add
bound
dec
lret
xor
push
dec
add
insb
inc
dec
inc
lcall
xor
les
sub
inc
fs
sub
idiv
xor
push
or
and
sub
add
add
pop
sub
add
pop
mov
sbb
mov
bound
aas
xor
sub
sbb
xor
lods
popa
loop
jmp
test
push
andb
cwtl
jmp
ja
push
ret
jbe
dec
andl
jle
dec
adc
insb
xchg
mov
aam
sub
adc
and
lods
scas
sbb
mov
xor
enter
dec
xchg
or
pop
mov
cmp
xor
andl
inc
fnsave
xchg
add
and
test
jle
and
call
es
mov
test
into
adc
adc
icebp
out
jmp
aas
push
fldl2t
call
xor
cmp
dec
xchg
rorb
fcoml
inc
ljmp
adc
add
add
mov
lret
lret
push
inc
jecxz
int
mov
loopne
test
or
sar
lea
add
icebp
test
mov
or
ret
add
out
pusha
loopne
jg
add
push
or
enter
lcall
js
push
pop
sbb
xchg
mov
dec
lods
decl
addr16
xor
leave
and
add
mov
mov
cmp
or
cmpsl
nop
fmulp
je
cmp
dec
icebp
bound
imul
fsubrs
jecxz
mov
jg
ret
daa
xor
or
jne
rcll
add
pop
cmp
sahf
pop
sub
and
mov
or
repz
scas
test
movb
or
adc
into
shll
jno
and
or
mov
or
and
sub
inc
push
and
or
movswl
pop
mov
sbb
les
lods
data16
enter
or
cmp
add
mov
add
adc
push
mov
add
jle
sub
ss
pop
pop
add
jl
cmpsl
clc
mov
or
mov
stc
xchg
stc
inc
add
in
cs
clc
sub
mov
subl
jle
or
mov
push
push
xor
and
pop
xlat
adc
lcall
xor
jo
push
sbb
dec
and
add
sbb
js
jg
mov
in
push
sub
or
fidivrl
rorl
loopne
mov
lock
aad
push
cli
inc
shll
push
jns
shlb
jbe
and
mov
xchg
sahf
xchg
hlt
jmp
jg
lods
jb
push
pop
mov
inc
dec
pop
or
out
inc
repnz
or
push
pusha
pop
jne
adc
or
jae
stc
mov
jecxz
ficoml
sub
or
jbe
jbe
push
dec
push
arpl
les
pop
movups
jb
add
or
and
das
and
sub
data16
mov
xor
mov
add
je
lock
inc
sub
adc
push
or
mov
jne
jl
rclb
sub
popa
addb
loop
mov
pop
xor
movsb
stos
ficompl
rolb
xchg
jo
add
adc
jl
test
mov
movsb
pusha
je
dec
inc
push
sub
je
push
rorb
inc
cs
repz
cmp
cmp
inc
lret
jbe
adc
imul
lea
xor
sbb
stos
sub
icebp
adc
push
or
out
subl
pop
insl
cmp
jecxz
mov
cld
cld
jl
and
hlt
jle
mov
mov
xchg
pushf
stc
mov
inc
sarb
add
ss
loop
mov
sbb
jge,pt
sti
add
je
or
pop
ffree
pop
jne
jne
out
xchg
int
jns
jnp
popa
je
inc
je
sarb
dec
cmp
jmp
xor
adc
pop
inc
and
dec
dec
xchg
adc
push
sarl
insb
mov
mov
or
stos
push
rorl
dec
lret
xor
repz
test
add
adc
int3
outsb
in
call
jne
fmull
insl
push
pop
clc
fstps
or
cmp
adcb
pushf
loope
push
xchg
cmp
add
rolb
mov
adc
add
xchg
pop
adc
or
adc
ds
cmp
dec
aas
je
fstps
enter
add
push
ja
popa
inc
cltd
or
jmp
arpl
mov
cmpb
jne
jp
sbb
and
and
dec
xchg
rcll
sub
add
hlt
sbb
inc
dec
das
stos
xchg
movsl
hlt
push
jp
cmp
fmull
dec
mov
dec
jo
pop
call
lahf
dec
imul
lahf
shlb
push
push
and
jo
insl
or
ret
lret
mov
shrb
sub
aaa
jmpw
cs
mov
sub
push
mov
xor
push
cmp
fidivs
jno
sub
sub
xchg
sub
mov
pop
js
mov
inc
mov
adc
mov
xor
xor
sbb
mov
mov
cmpl
pop
lret
or
push
ljmp
push
mov
adc
adc
ss
and
dec
sub
or
jp
pop
call
pop
rorb
mov
test
adc
or
notl
inc
sub
je
mov
and
jbe
jge
enter
pusha
mov
jno
adc
in
testb
sbb
xor
negl
mov
or
das
out
pop
cmp
test
inc
mov
add
les
je
mov
dec
cmp
push
mov
nop
or
push
jmp
or
hlt
cmp
jmp
testb
add
icebp
sub
addl
pop
aam
ficompl
and
negl
inc
mov
mov
ljmp
and
sbb
dec
arpl
adc
rcrb
hlt
mov
popf
mov
roll
mov
gs
rol
push
push
sbb
push
or
jne
in
add
add
dec
xchg
sbb
xor
sbb
mov
mov
or
popa
xor
arpl
adcb
push
jne
ss
movsl
movsl
jbe
fmul
scas
ret
sub
dec
cwtl
adc
movsl
jno
sti
xor
mov
add
cmp
push
adc
sub
push
dec
shlb
iret
mov
cwtl
hlt
cs
xor
les
add
mov
ret
cmp
sahf
movb
jae
dec
or
and
cwtl
xor
cmp
sbb
xlat
add
add
cmp
xlat
jge
notl
ret
cmp
sbb
sbb
in
push
lcall
out
iret
sbb
add
call
sub
jle
or
and
rolb
hlt
pushl
cmp
bnd
clc
sbb
inc
jmp
mov
push
mov
xchg
sbb
adc
fcomps
or
jbe
cmp
inc
test
es
sub
sub
sub
push
cmp
dec
xchg
fsubrs
outsb
and
fmuls
pop
mov
adc
pop
test
cld
dec
jl
jo
dec
mov
sbb
xchg
scas
dec
jne
lea
jmp
adc
inc
divb
addb
in
adc
repz
mov
cmc
jl
repz
inc
loopne
mov
push
xchg
push
ret
fsubl
movsb
push
sbb
test
rorl
lea
or
or
sub
adc
fs
mov
cmp
xchg
cmp
jmp
rcpps
sbb
adc
pop
fcomps
add
data16
ljmp
out
mov
loopne
mov
ret
arpl
push
sub
add
test
or
js
adc
movsl
andl
sbb
test
xor
pop
call
rorb
inc
xor
or
inc
inc
xor
jb
sub
mov
sub
mov
xorl
mov
sbb
sbb
push
lock
add
es
jmp
jp
adc
pushf
popa
mov
and
and
lea
negb
insl
inc
sbb
pop
cmp
jb
jno
adc
jo
inc
aam
sbb
cmp
sbb
push
add
or
dec
popf
or
rorb
lret
std
inc
dec
cmp
lea
or
es
add
sahf
and
leave
or
dec
testl
fcmovb
jmp
shr
or
mov
add
pop
sti
testb
or
bound
scas
push
sar
in
stos
mov
cmp
sbb
push
add
or
test
xlat
out
jne
fwait
es
fnstcw
inc
push
or
imulb
ds
in
cmp
inc
dec
add
lea
mov
shr
cmp
mov
adc
or
mov
cs
or
push
jp
adc
adcb
cltd
repnz
push
nop
sub
fldl
or
cmp
adc
sbbb
pushf
push
out
mov
cmp
xchg
ret
insl
or
cmp
ficoms
or
and
adc
iret
shl
orl
adc
lds
xchg
push
add
incl
cmp
loope
or
test
test
adc
test
je
dec
call
mov
cmp
nop
cmp
cmpsl
cmp
popa
js
pop
fsubl
data16
orb
xor
and
leave
mov
jg
pop
call
cmpsl
push
cld
xlat
out
add
add
call
or
ss
adc
adc
mov
xchg
mov
cmpsb
sahf
inc
add
adc
dec
jbe
fldl
mov
jle
subl
ja
cmp
add
pop
fcomp
popa
imul
inc
xor
mov
inc
jbe
cmp
lock
jl
cmpb
jl
xor
cmpb
idiv
push
push
test
or
push
push
xchg
adc
or
addb
push
adc
inc
push
push
mov
je
enter
and
cs
iret
ds
inc
adc
fldcw
and
and
push
dec
cmp
inc
aam
rclb
sub
and
push
rorb
inc
adc
loopne
andb
call
jbe
dec
add
mov
adc
enter
out
add
loope
into
adc
push
sub
flds
and
shll
jns
fisttps
test
je
mov
dec
jo
or
test
jmp
and
dec
jnp
pop
movsb
test
outsl
addr16
cmp
mov
movsl
xor
rol
ljmp
mov
add
aam
bound
push
jp
or
jmp
and
and
pop
test
push
xor
in
cld
pop
std
and
jge
inc
inc
div
fdiv
fiaddl
adc
adc
sbb
xchg
xor
adc
stos
mov
sbb
push
push
imul
rcr
xchg
movsl
icebp
sbb
adc
xchg
adc
sbb
test
test
test
push
jbe
fwait
dec
jne
pop
pop
pop
fldt
fldcw
adc
fs
or
jae
mov
rcl
ljmp
shr
test
xor
jecxz
cmpsl
outsb
push
idiv
and
mov
je
negb
ret
jb
or
add
inc
or
add
push
sbb
hlt
pusha
cs
dec
mov
jecxz
lods
pop
add
es
in
jle
sbbl
es
xchg
dec
mov
or
push
loop
jnp
or
into
jbe
jns
aas
test
dec
adc
ljmp
mov
adc
push
jb
ljmp
cmp
pusha
adc
setle
sbb
mov
aam
or
pop
and
bound
insl
cmp
popa
mov
fiaddl
dec
loopne
xchg
cs
aaa
or
push
int3
push
cld
and
cltd
mov
pushl
dec
mov
pop
cmp
ss
jg
xor
sub
adc
and
dec
in
leave
jne
sub
shll
testb
fists
push
leave
je
ret
mov
pop
inc
clc
inc
mov
mov
out
es
mov
je
lcall
mov
push
cmp
ja
add
aam
out
out
adc
cmp
jne
jge
xor
adc
mov
ret
mov
ss
add
leave
xchg
jp
push
add
rolb
lea
pop
mov
add
pop
inc
or
sbb
insl
test
push
into
scas
sbb
adc
xchg
ret
jmp
neg
je
mov
push
push
addr16
les
dec
mov
adc
mov
pop
aas
or
lea
mov
pop
dec
cmp
jne
movsl
push
repnz
xor
test
sbb
dec
mov
cli
fstp
pop
in
jmp
mov
pop
repnz
cmp
push
dec
scas
test
mov
add
jno
cmp
push
imul
adc
sub
xor
adc
sub
lods
xor
mov
test
adc
or
mov
in
inc
lods
sti
cltd
push
push
shrb
jns
push
roll
sbb
or
jle
mov
or
dec
repz
mov
ror
push
rcl
ror
repz
aam
xlat
fcomp
inc
inc
insb
ds
fstpt
mov
mov
xor
inc
inc
add
push
into
bound
das
cmp
test
or
mov
mov
mov
adc
mov
mov
add
push
jl
sub
inc
push
add
xchg
fisubrs
aas
jne
sub
mov
inc
out
divb
in
cmp
frstor
icebp
adc
idiv
pop
idivl
push
xor
push
test
shrb
testb
add
adc
push
push
sbb
add
xor
mov
imul
xchg
mov
jmp
sbb
sbb
lea
or
mov
inc
js
mov
test
sbb
neg
scas
add
pusha
popf
test
pop
addl
adc
outsb
outsl
loopne
sub
mov
xor
inc
adc
sar
fisubs
addr16
call
jecxz
les
mov
adc
les
or
dec
movb
decb
inc
rcll
add
hlt
pop
sub
icebp
in
out
mov
testl
into
and
lea
pop
and
js
subl
jae
xchg
ja
add
add
push
mov
lods
mov
mov
outsl
in
pmulhuw
ljmp
loopne
inc
or
jmp
jg
and
jnp
lea
mov
repz
test
ret
dec
rolb
push
mov
push
or
mov
lea
dec
xchg
mov
or
or
mov
cmp
mov
ret
movsb
repz
mov
mov
push
addl
push
cmpl
mov
ret
and
rorb
jle
jle
adc
fsubrs
sub
jecxz
adc
rolb
sar
fbstp
hlt
rorb
add
movsl
push
push
push
lret
push
jo
dec
inc
xchg
test
jbe
inc
lods
mov
test
dec
shrl
in
shr
xchg
mov
or
dec
pop
inc
sub
inc
dec
add
pop
repnz
push
lock
imul
xchg
out
lods
cli
inc
cli
div
wbinvd
sub
sbb
pop
adc
or
xor
loopne
mov
push
jnp
sbb
adc
mov
test
adc
clc
or
sub
push
aaa
cmp
mov
rolb
lcall
mov
imul
ret
xor
dec
pop
jnp
xor
push
mov
mov
loop
int3
shll
xchg
testb
or
mov
adc
jp
cmp
or
adc
xor
into
xchg
out
mov
inc
shlb
fdivs
aam
inc
inc
test
dec
ret
sub
jge
mov
lods
dec
pusha
add
icebp
or
mov
mov
or
push
xchg
cmpsl
call
lea
fcmovu
mov
mov
push
mov
lods
lods
inc
jl
aaa
rolb
cltd
add
sbb
clc
sbb
xchg
add
sbb
mulb
call
testb
xchg
lock
xor
cmpb
jge
jno
or
inc
lock
adc
jmp
inc
pushf
xchg
aas
add
jne
inc
pop
push
stc
sbb
in
add
or
mov
pusha
mov
jge
add
sub
pop
adc
jbe
sbb
data16
add
inc
add
add
push
nop
daa
mov
cmp
call
push
pop
jle
out
adc
lret
mov
sub
dec
pop
shr
popf
test
test
fisttpl
jb
add
cmpsb
mov
std
lds
sbb
neg
and
call
insl
call
rol
mov
and
test
mov
add
and
jecxz
cmp
adc
pusha
loopne
addr16
out
data16
into
push
sti
and
xchg
mov
push
ljmp
mov
add
sub
dec
push
lret
out
enter
and
sub
cmp
jbe
insl
movsl
insb
imul
dec
enter
adc
mov
cmp
push
dec
gs
shlb
add
negl
pop
orb
sahf
jne
cmp
sbb
testb
lock
inc
adc
pusha
test
inc
in
ljmp
mov
mov
dec
cmp
jge
andb
cli
jmp
cmpb
or
add
dec
cmp
jbe
mov
add
add
fadds
dec
jb
pop
add
xchg
or
and
mov
js
hlt
xor
dec
mov
jb
int
jg
sbb
adc
lret
or
mov
mov
mov
add
adc
imul
add
add
fisubrs
in
dec
add
test
mov
mov
vorps
push
add
inc
mov
or
fisttps
jmp
mov
xchg
push
or
add
or
scas
movsl
xchg
add
adc
push
add
and
mov
mov
lods
ret
les
pop
movsl
or
jae
loopne
in
pusha
test
lret
dec
in
mov
xor
into
pusha
cmp
rolb
pop
and
pop
cmp
dec
mov
inc
push
das
add
shll
or
mov
inc
adc
pop
sbb
mov
inc
push
pop
jae
or
or
adc
and
adc
sbb
mov
add
sub
inc
or
mov
je
sub
adc
sahf
xchg
jne
xlat
dec
pop
lahf
push
add
cli
and
xchg
xor
and
enter
pop
icebp
add
xchg
mov
nop
mov
test
push
jle
cmp
fldcw
mov
pop
nop
and
xorb
inc
es
or
inc
stos
add
or
add
ret
dec
cmp
dec
aam
adc
mov
sete
nop
mov
bound
data16
cmp
or
add
addr16
lcall
cmp
pop
jbe
jle
pusha
xor
pop
mov
xor
inc
jg
daa
daa
iret
lret
into
into
into
mov
pop
and
pop
sub
mov
pop
nop
pop
cwtl
rorb
mov
dec
cld
pop
mov
or
pop
mov
pop
movsb
nop
cmpps
xor
dec
in
pop
lcall
add
leave
lahf
pop
test
pop
or
add
push
add
add
add
imul
and
scas
push
imul
sub
dec
inc
sub
jmp
dec
in
jmp
ret
lods
xchg
lret
xor
sbb
cmp
scas
flds
adc
add
push
cltd
aad
dec
xchg
adc
push
sbb
nop
loope
pop
or
pop
fmul
cmp
das
xchg
push
mov
and
push
dec
and
cmp
test
addb
fidivs
mov
xor
jmp
push
and
daa
or
and
jg
add
adc
jge
xor
bound
mov
ljmp
xor
sarb
mov
push
mov
inc
push
inc
adc
cwtl
dec
sbb
xor
mov
out
push
adc
cwtl
xchg
cmp
add
inc
shrl
iret
jmp
test
dec
sub
inc
aas
lock
or
out
je
inc
push
aam
xor
rorb
or
push
cmp
jbe
inc
inc
or
mov
int3
call
jle
adc
testb
fdivrs
jo
jbe
jle
loope
into
sub
push
jns
clc
push
inc
orl
lock
filds
mov
leave
rolb
repz
sbb
add
sub
mov
lods
test
pop
cvtps2pd
mov
jnp
push
pusha
test
xchg
mov
pop
in
push
pusha
add
cmpb
fbld
push
pushl
cmp
pop
test
push
xor
sbb
out
je
and
pop
addr16
popf
push
je
lret
push
loopne
pop
xchg
fs
insb
out
mov
sbb
push
mov
es
adc
sbb
dec
xchg
shll
fcoml
mov
int3
out
dec
das
repnz
xchg
dec
inc
sbb
stos
dec
repnz
call
in
hlt
je
add
jno
jge
lea
xor
mov
push
imul
push
pop
push
imul
xchg
cmp
popa
add
and
or
lods
adcb
push
or
in
push
shll
sub
xchg
inc
arpl
dec
mov
push
loopne
bound
aas
aas
into
xor
aas
inc
cs
push
mov
xor
sbb
out
jae
or
jmp
push
push
xlat
and
or
add
lods
sub
sub
add
insl
add
pop
jmp
sbb
hlt
xor
mov
inc
xchg
sub
hlt
or
and
scas
push
jne
push
inc
das
lods
lods
and
mov
mov
xchg
push
mov
lock
cmp
loopne
sub
push
mov
push
faddl
outsb
mov
sub
and
push
xor
in
xchg
sbb
dec
xchg
jecxz
mov
fcomps
xor
adc
adc
test
mov
data16
je
outsb
jns
cmp
mov
ret
notl
cmp
enter
addl
sbbl
out
xor
les
sub
shl
jl
add
sub
test
cmp
lea
popa
inc
jno
jecxz
int3
add
in
pusha
adcl
gs
jbe
repnz
pop
nop
sahf
lret
mov
fsubs
lock
push
jmp
add
dec
js
loop
xor
fisttps
cmp
outsl
push
sub
js
mov
rorl
mov
and
xchg
cli
or
mov
mov
push
pop
leave
inc
js
loop
sbb
sbb
inc
and
cmpl
das
pusha
xor
inc
std
shll
dec
aas
shrb
sub
add
sbb
les
lret
outsb
inc
jb
loope
adc
add
fwait
push
push
add
nopl
hlt
xor
sub
mov
push
adc
lock
push
mov
pop
insl
pop
testb
lock
push
testb
push
push
or
cltd
inc
mov
xor
sbb
xchg
cwtl
or
ja
dec
cmp
push
add
mov
ror
das
or
push
or
loop
xlat
pop
or
js
add
fmuls
sarb
add
inc
add
fisubs
jecxz
les
test
cli
int
sahf
and
data16
add
shlb
inc
pop
movsl
jo
lea
roll
adc
test
out
mov
push
jg
bt
jmp
pop
dec
loop
loope
and
dec
sub
xchg
in
out
cvttps2pi
movsl
push
and
xchg
pop
fbstp
test
pop
cs
fnstenv
fists
loope
or
sbb
adc
jmp
fstps
icebp
lahf
or
lea
rolb
sbbb
sub
das
fdivs
scas
sbb
adc
test
sub
cmpsb
pop
sbb
xchg
movsb
lds
push
jge
dec
rolb
sub
adc
add
stos
or
pop
dec
jecxz
inc
or
dec
in
jl
or
mov
push
jae
loope
sub
mov
aad
fdivr
add
addr16
or
enter
lock
mov
inc
gs
loopne
outsb
arpl
adc
hlt
daa
mov
xchg
in
aad
sub
popf
or
jecxz
jbe
or
sub
sbb
xor
mov
dec
add
enter
push
in
push
dec
dec
lock
sbb
jb
jp
lock
hlt
and
lea
mov
xor
nop
inc
shlb
inc
adc
xorb
inc
lods
mov
pusha
mov
add
pop
fdiv
jl
add
push
je
push
int3
jl
push
xchg
jge
adc
sbb
xor
sub
adc
imul
jno
dec
push
sar
mov
mov
cwtl
pop
in
jb
xor
sbb
sti
push
cmp
pop
fwait
cmp
jl
dec
jl
and
test
fstpt
imul
in
jle
in
mov
and
sub
arpl
nop
and
jg
sbbl
sbb
and
xchg
and
xor
les
test
leave
mov
jge
jg
cmpsb
mov
or
in
movups
push
mov
in
inc
andb
inc
mov
and
fimuls
cld
jo
mov
pusha
cmp
mov
or
add
cmp
mov
adc
xchg
cld
pop
hlt
add
cmpb
cmpsl
or
andl
or
ds
push
clc
lods
mov
mov
inc
fstps
in
inc
jb
and
subb
add
mov
cmp
xor
lock
in
cmp
inc
xorl
mov
rclb
data16
push
icebp
repz
fcompl
dec
cmpsb
dec
sbb
cltd
nop
xchg
xchg
imul
cmpl
test
stc
insb
xchg
inc
shrb
scas
mov
test
dec
adc
xchg
int3
push
xlat
sub
leave
and
cmp
leave
and
inc
inc
dec
and
insb
ficomps
cli
jl
or
sbb
sbb
adc
adc
lods
sbb
repnz
push
in
rcr
add
test
lods
cmpsb
dec
pop
push
sbb
inc
in
in
cmp
stos
aad
fwait
test
cmp
dec
aad
in
ljmp
xchg
ja
push
loopne
fstpl
xchg
lock
in
dec
mov
js
orl
sub
shlb
mov
pop
xchg
sub
mov
or
fstp
add
jmp
inc
sub
inc
add
in
xchg
cld
dec
js
cmp
mov
aam
outsb
mov
cltd
in
mov
or
dec
and
xchg
mov
xor
jb
add
movsl
in
cmp
je
call
in
mov
jae
push
call
flds
jno
add
mov
in
inc
insl
mov
and
adc
test
loopne
insl
mov
and
jg
xchg
gs
loopne
in
jne
mov
and
inc
xchg
and
adc
mov
xchg
cli
mov
sbb
xchg
call
or
fcom
lock
test
fnstcw
popf
loop
out
sub
imul
nop
add
cmpb
push
sarb
inc
or
leave
test
pop
in
rorb
fcomp
aam
pushf
mov
mov
push
push
add
fs
in
cmp
lock
inc
rorl
lock
dec
dec
dec
mov
mov
dec
rol
int3
xor
aam
stos
rorb
xchg
mov
popl
nop
pop
jno
imul
ret
add
ret
sbb
cwtl
pop
arpl
test
xor
ljmp
popa
pop
push
mov
adc
inc
leave
sbb
fmuls
call
or
daa
movsb
mov
mov
pop
das
add
cmp
lock
add
sub
or
shrl
test
inc
rclb
dec
lret
lea
mov
push
jnp
unpcklps
inc
adc
insb
xchg
mov
sahf
or
push
mov
adc
pop
mov
ljmp
push
sub
xchg
mov
dec
xchg
in
ret
stos
add
nop
xchg
jg
enter
mov
lret
mov
lds
jne
aaa
sub
nop
ss
ret
jns
mov
jb
xchg
xor
xchg
daa
pop
enter
add
sbb
adc
xor
dec
mov
fs
add
xorl
orl
sbb
inc
lods
cwtl
cmp
in
test
mov
ficoml
xchg
fidivl
roll
pop
xor
das
jnp
pushf
imul
inc
repnz
xchg
mov
adc
cmp
test
adc
jne
add
popa
popf
add
dec
inc
xchg
aam
push
fisttpll
ret
dec
movsb
stos
add
lea
stos
or
call
lock
or
sbb
stos
add
push
stos
andb
in
add
add
lock
fcoml
lods
and
adc
sbb
test
rcrl
or
cltd
popa
cmp
push
pusha
loope
or
nop
inc
push
or
or
or
sub
and
andb
or
stos
or
or
jo
lcall
mov
inc
or
jmp
push
test
push
add
xlat
rclb
es
inc
nop
jnp
mov
mov
ret
test
push
jno
add
jmp
and
fwait
fwait
inc
fcompl
jbe
fisttpll
andb
enter
in
test
sbb
xor
mov
incb
fsubl
movsb
stc
jl
repz
incb
dec
es
pushf
std
mov
in
cmp
adc
add
cmp
lea
popf
mov
push
call
mov
insb
addb
popf
mov
js
loopne
paddusb
aam
in
add
pop
sbb
fildl
push
test
or
scas
xor
lret
push
adc
jnp
xchg
inc
add
nop
imul
dec
lcall
cmp
mov
sarb
cmp
mov
cmp
cmp
cmpsb
bound
dec
outsl
or
shrb
adc
xchg
inc
cmc
test
andb
or
mov
pop
xor
xor
add
sbb
mov
insl
sbb
in
fmull
push
mov
mov
dec
jae
movsb
xchg
nop
push
mov
dec
mov
jnp
in
or
mov
lods
lods
mov
mov
mov
add
mov
xor
rcr
jg
scas
sbb
and
jns
xchg
mov
aam
jns
sti
call
mov
push
test
lahf
push
dec
xorb
loopne
nop
mov
xor
xor
adc
pop
clc
mov
adc
xor
sti
movsl
adc
mov
nop
outsb
or
sbb
adc
call
jbe
pause
in
mov
dec
stos
mov
je
push
movsl
mov
fcmovne
mov
mov
adc
push
rcrb
dec
mov
int3
jmp
ror
fdivl
andb
es
mov
int
shrl
jb
add
or
push
in
or
or
insb
mov
test
lret
xchg
inc
dec
push
movsb
cltd
sub
inc
xchg
popa
pop
rcrb
inc
sub
adc
test
enter
imul
and
std
adc
in
lea
jb
int3
fisttpl
mov
aam
push
lcall
mov
adc
sub
dec
jmp
adc
aas
aad
bound
dec
and
repnz
shrb
or
insb
lock
xchg
repz
push
add
pushf
imul
insl
inc
test
adc
dec
in
mov
lea
adc
cmp
mov
stos
adc
adc
mov
mov
push
stos
jne
mov
out
enter
and
mov
ret
aad
leave
jecxz
movsb
lods
inc
push
test
stos
push
rol
mov
inc
mov
movsb
shrl
jecxz
loope
add
stc
mov
movsb
lret
mov
inc
sbb
fsub
imul
xchg
fdivl
xlat
mov
cmp
fsubl
inc
mov
scas
jmp
insb
sub
rcrb
lcall
das
sub
test
enter
inc
sub
pushf
sbb
inc
enter
mov
pusha
and
enter
mov
xchg
cmp
inc
mov
xor
mov
popa
mov
cmp
insb
std
pushf
std
xchg
negb
add
pop
adc
test
cmp
inc
pop
pop
insb
xchg
fs
imul
movsb
test
loope
mov
leave
and
or
dec
and
mov
in
push
lds
inc
nop
inc
adc
call
add
pop
push
stos
jge
lods
outsb
loope
lds
mov
gs
and
and
adc
je
or
or
cmp
mov
pop
mov
movsl
mov
pop
sbb
jno
mov
sub
pop
fdivs
loop
aas
enter
xor
cmp
leave
mov
cmp
lods
push
inc
mov
movsl
push
test
dec
sub
and
outsl
xor
loopne
xor
lea
cmp
xor
or
mov
enter
fcoms
push
mov
or
dec
mov
mov
cmp
sub
mov
xchg
and
mov
push
xor
lret
and
aam
call
insb
adc
adc
pusha
out
mov
bound
loope
loopne
int3
xchg
ret
xor
test
mov
dec
mov
mov
les
and
xor
cltd
jo
sub
mov
insl
sbbb
in
loopne
lcall
in
mov
mov
or
jb
inc
or
inc
or
inc
paddusw
mov
fdivl
mov
adc
ret
repz
add
mov
xchg
lock
and
fistpl
mul
push
mov
jne
or
xchg
mov
mov
loope
mov
call
popa
sbbl
add
and
xor
sub
and
mov
pmulhuw
imul
mov
aam
inc
xchg
inc
adc
or
inc
push
aad
fistl
cmp
roll
test
jg
sahf
dec
dec
outsb
add
mov
addb
enter
and
cmc
pusha
inc
cmp
push
or
xor
pop
pop
inc
sub
mov
and
xor
dec
sbb
add
xor
cmp
mov
add
lock
adc
ret
out
insl
sbb
movsb
and
and
inc
dec
jae
ja
jae
mov
push
gs
test
cmp
and
add
adc
test
add
lods
dec
gs
sti
cmp
push
rcl
ret
loopne
mov
fsubs
adc
xchg
fwait
push
sbb
xor
xchg
pusha
sub
and
mov
in
in
mov
mov
loopne
jmp
loopne
shlb
xor
dec
pop
enter
out
and
mov
pusha
rolb
dec
cmp
mov
sbb
sbb
jae
aad
in
sbb
js
mov
and
roll
dec
cmp
inc
pop
cmp
cmp
and
int
xor
pop
movsl
pop
test
les
add
sbb
push
mov
xchg
mov
scas
pop
je
and
dec
ret
xchg
push
ret
test
lods
fwait
mov
jo
xlat
js
mov
push
addb
dec
outsb
xchg
faddl
nop
and
xchg
cwtl
pusha
mov
cltd
test
mov
sbb
sub
pop
test
enter
inc
push
repnz
mov
orl
stc
aas
and
inc
mov
ja
les
loopne
loopne
faddl
loop
mov
mov
mov
xchg
call
call
push
sbb
popf
sub
dec
fidivrl
sbb
into
or
adc
cmp
mov
fdivs
adc
pusha
and
cmp
sbb
arpl
call
push
test
mov
rcl
add
jmp
sbb
sub
std
adc
test
or
adc
xchg
and
filds
stc
ret
inc
mov
or
xchg
fimull
cltd
aam
test
and
xchg
in
aam
add
add
aam
add
or
sbb
jmp
xchg
push
push
movsb
adc
shlb
add
xchg
insb
dec
push
addb
adcb
aam
add
enter
jo
dec
mov
mov
push
arpl
xlat
add
adc
xor
adc
aam
xchg
xor
or
and
ss
mov
fiaddl
scas
cltd
mov
es
pinsrw
mov
adc
inc
add
rclb
loop
pxor
movsb
pusha
inc
pusha
test
push
xor
push
mov
pop
adc
sbb
test
dec
fistl
push
or
or
lea
push
gs
insl
sub
push
pop
mov
add
aam
push
or
xchg
jne
int
or
mov
pop
shlb
push
jb
add
leave
inc
fadd
call
adcb
into
stos
imul
push
pushf
test
shll
xchg
call
in
cmp
sti
ss
je
iret
push
lods
push
add
jno
fadd
dec
dec
adc
or
les
or
es
in
mov
lret
js
or
inc
aam
and
mov
in
in
adc
xchg
dec
cmp
and
dec
fwait
fs
sbbl
pop
insl
addb
fistpl
push
push
sub
insl
add
imul
inc
push
xor
fsub
adc
aaa
cs
sub
or
insb
sbb
cmp
and
rolb
and
mov
mov
or
fadd
test
jl
imul
int3
scas
inc
cmp
mov
sub
push
sub
xor
in
inc
xchg
xor
nop
mov
shll
in
pushf
adc
dec
xchg
js
fs
dec
es
and
es
mov
xor
outsl
mov
int3
mov
lods
sbb
enter
adc
clc
loopne
or
add
mov
and
test
cld
add
sub
fs
arpl
icebp
push
sub
cmp
inc
add
jo
push
cmpl
sbbb
insb
adc
pusha
sub
push
mov
mov
movsb
fsubrs
mov
insl
ficoml
pop
add
test
lea
fcoms
into
sbb
subl
sub
mov
mov
adc
movsb
mov
test
xlat
cmp
sub
mov
and
push
dec
cmp
push
add
xor
xchg
movsl
adc
fadds
int3
adc
mov
aam
int3
es
xor
clc
mov
add
sbb
fstps
shlb
and
je
repnz
pusha
mov
fcomps
scas
test
jb
fisubl
cmp
subb
stos
pop
inc
ficoml
js
outsl
pop
dec
dec
out
cmpl
fisttps
cltd
mov
in
mov
add
push
sub
lods
cmpsl
mov
sbb
mov
cld
lret
faddl
push
xchg
sub
xlat
test
lock
xchg
cmp
lock
scas
notb
mov
in
jb
inc
lock
decb
loop
mov
mov
xchg
mov
sub
lcall
inc
adc
push
nop
mov
pop
jmp
or
sbb
cld
in
mov
sbb
adc
jno
aaa
cmp
mov
aam
fstl
aam
addr16
or
pop
int3
mov
das
and
fcoml
call
mov
movsl
jne
xor
aad
ds
and
cmp
push
stc
leave
scas
arpl
rorl
adc
movsb
xchg
cwtl
dec
or
push
and
push
ret
mov
jbe
inc
push
test
ficomps
dec
adc
sub
dec
cmpsb
dec
push
pusha
pop
insb
jo
mov
pop
subb
and
cltd
nop
dec
pop
mov
dec
cltd
subb
cltd
mov
fiaddl
sbbl
sub
cmpl
imul
xchg
inc
adc
and
inc
faddl
inc
loopne
adc
loopne
pusha
mov
aad
and
xchg
and
in
mov
or
in
xchg
inc
xchg
lcall
enter
sarb
jl
pop
fdivrs
lret
repnz
mov
xchg
cmp
mov
xor
aam
movsl
std
fisttpll
and
add
sbb
push
pop
inc
and
pop
adc
add
fisubl
pop
test
xlat
push
in
cs
or
cld
mov
push
mov
mov
or
pop
mov
cmp
mov
or
mov
pop
inc
xor
cs
and
ds
lahf
pop
lret
rcl
jl
rcr
and
gs
add
repz
std
outsl
mov
call
pop
orb
or
or
out
adc
add
ds
repz
fcmovnu
inc
add
push
sbb
xor
cld
fadds
jbe
shll
or
push
add
jns
lds
gs
xchg
mov
sarb
and
outsb
mov
xchg
les
ds
aas
adc
fisubl
push
clc
jae,pn
jo
or
in
cmp
dec
mov
fistpl
or
jnp
mov
add
dec
cs
and
shlb
leave
or
adc
aaa
dec
mov
out
leave
ljmp
cmpb
or
jns
xlat
add
xor
xor
add
out
adc
add
incl
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
decl
lds
mov
pop
popa
bound
gs
jmp
push
insl
outsb
outsl
jo
jb
je
jbe
js
jp
xor
xor
sub
out
subl
adc
mov
rcll
xchg
adc
push
or
cmp
in
cld
outsl
cmp
adc
push
push
dec
push
imul
aas
iret
repz
dec
dec
outsb
je
jb
outsl
arpl
fs
mov
out
sbb
push
dec
imul
or
cmp
jb
gs
xor
cs
mov
repz
adc
popa
and
popa
je
outsl
outsb
push
cwtl
push
jbe
mov
pop
lock
rdpmc
add
pop
in
aad
incl
sub
mov
mov
jb
js
je
jb
gs
outsl
cmp
or
outsl
add
add
add
cmpb
je
push
je
shrl
jne
jb
mov
outsb
inc
dec
imul
mov
stc
jns
cmp
cmp
dec
and
in
mov
add
das
das
adc
push
dec
push
inc
out
or
ds
gs
insl
bound
daa
dec
outsl
jbe
pmaxsw
pop
dec
arpl
push
jo
sub
out
lock
jne
jne
dec
jne
xchg
mov
inc
jo
imul
bound
dec
nop
or
into
mov
scas
cmpsl
xchg
popl
cmp
xchg
addr16
push
jne
lcall
mov
mov
push
fsubl
push
scas
clc
sbb
dec
jae
std
adc
and
jbe
out
pop
dec
inc
ds
popa
das
jo
xor
pop
insl
or
fbstp
mov
sahf
add
mov
faddl
movb
out
ret
pop
orb
fcomi
call
int
es
sub
sub
sub
cs
dec
push
std
shll
ds
inc
das
pop
pop
push
push
or
jnp
xchg
insl
cli
jl
jle
add
arpl
test
icebp
adc
subl
pop
or
out
ffree
inc
adc
push
sbb
insb
jae
cs
fs
cmp
xor
inc
mov
outsl
mov
out
jo
insl
and
addr16
jbe
dec
push
push
sbb
insl
in
dec
dec
inc
sbb
and
jp
data16
add
xor
sbb
push
jo
imul
push
pop
mov
je,pn
push
push
xor
jo
xchg
idivb
mov
sub
and
fs
adc
out
scas
mov
push
imulb
and
and
fmul
insb
mov
sbb
xor
and
imull
xchg
add
and
jne
sub
mov
rolb
les
shrl
mov
fldl
and
or
das
add
popa
add
or
ljmp
jb
bound
lods
mov
je
and
push
or
push
or
int3
fidivl
popf
jb
loopne
outsl
mov
faddl
fcmovu
push
daa
sub
dec
addb
das
arpl
cwtl
shlb
dec
popa
in
gs
sub
mov
fidivrs
test
out
add
inc
xchg
insb
imul
out
xor
int3
gs
rcl
push
cmp
push
lcall
mov
and
xor
gs
push
divl
push
fistps
push
adcb
aaa
xor
scas
or
fs
xor
rol
push
hlt
pop
dec
add
add
test
ja
outsl
and
and
outsl
ss
mov
lods
pop
xor
imul
ret
xchg
push
mov
xor
push
gs
or
lds
dec
add
inc
jle
lret
mov
mov
arpl
lret
jp
jo
bound
push
pop
repnz
cmp
insl
in
sarb
shr
or
or
xchg
imul
pop
or
lods
cli
jno
add
push
push
leave
push
mov
insl
imul
cmp
orl
popa
in
xor
pusha
or
and
push
mov
pop
push
cmp
addr16
jae
xor
loopne
or
fsubl
out
mov
jo
sub
popa
adcb
jb
push
sub
imul
dec
stos
mov
dec
jmp
jo
and
imul
inc
adc
lods
mov
and
dec
cmp
call
es
jg
lcall
loopne
cmpsl
popf
lock
sarb
fadd
ljmp
lret
jno
icebp
pusha
inc
mov
clc
sub
ret
movsl
add
xorl
fdivs
push
loop
imul
sbbb
gs
popa
dec
fwait
test
jecxz
enter
popa
js
scas
sub
je
pop
dec
pop
and
jno
add
add
xchg
testb
imul
xchg
adc
xchg
push
add
adc
add
add
add
add
xor
cmp
pop
or
aaa
ds
push
test
hlt
and
or
pusha
add
mov
add
pop
sub
add
sbb
mov
addb
add
xchg
mulb
ret
add
orb
jge
push
cmpb
push
and
sub
jb
mov
out
adc
push
jo
add
mov
push
xor
or
push
stos
int3
js
jo
imulb
pop
dec
rorb
sbb
add
lea
cs
nop
xchg
mov
xchg
sar
xchg
js
es
jmp
pop
push
adc
push
inc
or
xor
js
or
test
dec
add
and
dec
adc
loope
data16
cs
test
sbb
addl
fisubrs
add
mov
out
xor
aaa
push
and
sub
dec
add
jb
push
jb
adc
add
xorb
leave
add
and
push
add
add
add
add
insb
or
mov
test
incl
adc
fisubl
jbe
aaa
add
pop
lods
and
shr
ljmp
and
add
test
mov
mov
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
ljmp
mov
mov
mov
mov
mov
ret
enter
int3
int
dec
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
sub
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
inc
dec
and
test
sar
xor
sbb
roll
mov
mov
mov
outsl
ja
inc
aam
sar
cs
jae
jb
bound
dec
stos
rorb
ss
popa
mov
sub
mov
jo
pop
fnstsw
out
add
popa
addr16
outsl
js
push
push
inc
push
mov
test
dec
and
insb
outsb
jnp
int3
out
mov
dec
mov
daa
add
jle
pop
movsl
insb
in
dec
imul
ss
fcmovnu
mov
imul
xchg
xchg
fdivs
jb
jns
daa
pop
pop
jnp
or
and
mov
jo
dec
aad
lcall
addr16
cmp
lods
and
inc
outsb
pushw
mov
add
mov
mov
inc
jbe
push
sbb
fs
dec
movsb
sbb
rclb
inc
inc
lock
cmp
push
rorl
and
mov
dec
dec
sub
test
jno
xchg
fisubrl
push
jae
cmp
cmp
and
jae
addr16
in
push
subl
gs
or
jbe
xchg
xchg
inc
push
push
push
push
dec
testl
push
jne
repnz
mov
jae
cmp
fildll
mov
or
imul
call
push
test
jg
jae
enter
inc
in
xchg
into
ljmp
sub
jg
outsb
bound
jns
pusha
push
or
pop
das
je
scas
idivb
daa
xchg
mov
mov
mov
cmp
fisubrs
cmp
cmp
push
das
push
sub
out
sub
es
jle
sub
sahf
mov
dec
sub
addr16
sub
sub
sbb
pop
push
cmp
popf
lret
jmp
cmp
mov
dec
pop
pop
imul
addr16
push
jb
imul
jo
ss
lret
xchg
push
lods
sbb
push
fadds
and
es
dec
test
cmp
aam
and
sub
cld
push
cmp
repz
rol
mov
mov
cwtl
cmp
out
jns
sti
push
aam
cwtl
nop
mov
repz
test
cmpb
iret
repz
fs
add
fidivl
dec
pop
pop
cmp
data16
inc
push
idivl
jl
adc
int3
push
fmuls
lcall
inc
inc
mov
lods
repz
jo
push
cmp
iret
repz
sub
and
sbb
mov
repz
adc
decl
out
in
shrb
dec
sub
or
out
sahf
out
test
pusha
inc
xor
repz
xor
sbb
std
in
loopne
iret
repz
mov
insb
inc
jns
out
sbb
cld
aam
mov
jo
out
xor
cmpsl
pop
pop
pushf
mov
aam
lcallw
shlb
jns
push
xor
aad
pop
mov
cbtw
push
js
sbb
cmpsb
bound
sub
sbb
je
repz
jae
or
ficompl
lods
pcmpgtw
xor
add
jg
pop
sarb
insb
cmp
inc
inc
dec
jae
lret
mov
pop
stc
mov
dec
inc
push
dec
inc
dec
xor
inc
dec
dec
dec
push
inc
incb
push
dec
inc
dec
add
dec
dec
inc
add
lcall
das
adc
sub
adc
mov
inc
call
rclb
mov
xor
jnp
inc
loop
mov
aas
cwtl
arpl
clc
lret
jmp
sbb
jb
xchg
jge
arpl
cmp
adc
dec
scas
jp
insl
incl
adc
fisubrs
and
jns
test
push
cmpsb
iret
lret
add
decl
inc
inc
mov
mov
sub
fwait
int
add
ss
sbb
pop
jns
ds
xor
incb
dec
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
incl
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
ds
cld
or
loopne
cmp
inc
mov
xchg
push
pop
mov
ds
dec
jg
test
lods
mov
xor
lahf
fdivrs
into
mov
pop
and
addl
mov
flds
aas
mov
inc
inc
outsl
push
dec
push
push
adc
or
pop
clc
jmp
outsb
jbe
and
aaa
nop
stos
adc
inc
std
mov
push
gs
xchg
jns
jmp
add
push
dec
add
sub
mov
or
adc
sub
sbb
or
cs
scas
xor
cmp
sub
adc
or
adc
pop
cmp
sbb
cmp
or
cmp
sub
insl
lods
std
xor
inc
sbb
cmp
pop
dec
or
or
mov
or
adc
add
sub
fucomp
cmp
cmp
inc
adc
sbb
xor
or
sub
push
adc
cvtpi2ps
sbb
dec
aas
add
xor
out
mulb
lods
push
dec
or
adc
fdivrp
mov
ljmp
push
xor
cmp
xor
aas
icebp
or
adc
inc
jg
std
incl
or
xor
sbb
sbb
pop
adc
dec
adc
cmp
add
add
mov
add
cmp
ss
inc
and
pop
dec
push
adc
cmp
divb
pop
aad
adc
adc
cld
dec
or
es
test
jbe
adc
inc
lea
and
inc
adc
push
or
ja
aas
adc
sub
adc
pop
sbb
inc
insb
jns
mov
adc
fisubrl
sbb
fdivl
cmp
btrl
dec
cs
push
int3
or
movsl
lods
mov
jle
xor
cmp
or
inc
pop
into
or
sub
dec
cmp
adc
stos
push
push
mov
pusha
movsb
arpl
int
xor
and
aaa
pop
push
gs
xchg
xor
and
out
clc
fildll
inc
add
dec
add
sub
roll
mov
push
sub
add
cmp
ja
aas
cld
pop
inc
push
jle
xor
fildl
dec
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
scas
jmp
mov
daa
adc
push
jne
jg
cmp
out
sub
lea
push
iret
repz
lahf
daa
mov
jns
idivl
push
fsubr
cli
jl
dec
repz
loop
lock
je
rcl
and
pop
idivl
hlt
cmp
mov
sub
xor
cmp
inc
jp
cmp
outsl
insl
pusha
outsb
cmc
sbb
popa
outsb
insb
and
mov
push
popa
mov
ret
lahf
add
imul
outsb
fimuls
push
xor
cvttps2pi
push
or
sarl
movaps
cmp
repz
out
cmp
sahf
mov
sahf
out
sahf
aas
push
push
jno
lods
jns
out
fisubs
notb
repz
sub
sub
push
cmp
adc
push
pushf
sbb
sub
push
pusha
adc
cmp
cmp
inc
add
cmp
push
xchg
sbb
and
adc
js
pop
sbb
dec
mov
xor
jnp
in
or
aad
cmp
seto
mov
cmp
sahf
inc
fisttpll
or
or
cmp
xor
or
ss
push
jmp
mov
xor
add
jb
sub
mov
dec
xor
push
insb
push
sub
mov
and
sub
sub
sbb
push
xchg
fildll
xor
mov
psignd
cmp
lret
or
sbb
inc
xor
in
adc
iret
adc
in
sbb
add
mov
jae
ss
fsubrl
xor
adc
or
push
jecxz
or
mov
fadds
mull
pusha
push
int3
cmp
outsb
scas
lcall
jo
scas
fildl
daa
inc
xor
pusha
popa
push
sahf
mov
xor
dec
or
ds
sub
or
or
xor
pop
ss
inc
or
push
lds
add
ds
add
push
push
cld
popa
jmp
pushf
jbe
inc
pop
pop
mov
cmpsl
sbb
push
xor
xor
lock
jo
dec
pushf
sbb
inc
dec
xlat
sti
pusha
adc
jle
sub
aaa
pop
lods
sbb
xchg
imul
fwait
pop
rcll
dec
pop
cmp
and
xchg
inc
add
and
jae
dec
xor
mov
mov
push
inc
dec
cmp
adc
push
in
dec
cs
push
dec
xor
shl
adc
cs
sbb
or
xor
pusha
pop
cmp
or
in
and
fidivs
push
aaa
or
jle
push
xchg
ret
scas
and
aaa
daa
push
loopne
jmp
dec
xor
mov
dec
addr16
jmp
loope
into
cmp
and
mov
xchg
sbb
dec
or
sbb
and
mov
imul
pop
adc
cmp
xor
push
add
xchg
loop
xchg
js
sub
xor
cmp
adc
out
and
jo
mov
jle
in
dec
dec
cmpl
xor
jp
cmp
pop
adc
gs
push
shll
sahf
sbb
stos
jbe
int
cs
cmpsb
xor
and
inc
mov
and
ss
bound
add
adc
dec
stos
sub
adcb
or
and
stos
mov
push
adc
pop
loopne
stos
mov
repnz
jae
inc
cmp
repz
pop
sub
mov
push
je
xchg
jbe
inc
or
or
pop
xchg
imul
push
aas
push
adc
sti
aas
push
jg
and
push
dec
sub
sbb
jge
dec
inc
push
mov
push
add
or
xchg
js
push
loopne
cmp
jbe
lock
add
inc
std
push
xorb
push
jl
jns
popa
jne
push
scas
add
ja
inc
shll
dec
out
jae
insl
popa
imul
dec
mov
jo
pop
outsl
jo
jle
test
fisubs
push
ja
pop
js
in
jbe
adc
push
dec
push
repz
jae
cs
add
cmp
dec
lcall
fisubrs
ja
and
cmp
and
jns
jl
add
and
adcl
pop
lahf
mov
pop
je
sub
out
repnz
sbb
cmp
pop
add
int
push
mov
adc
mov
push
and
and
shrb
cmp
icebp
xor
pop
xor
push
pop
xor
xor
xor
jnp
out
push
or
sbb
mov
and
stos
call
pop
ds
xor
xchg
push
out
push
cmp
xchg
addb
or
pop
mov
or
xor
mov
mov
or
push
popa
ret
and
and
daa
dec
or
cs
cmp
mov
add
or
es
and
push
into
pop
inc
insb
pusha
mov
dec
sub
aaa
sbb
sub
iret
dec
rcll
mov
out
pop
mov
add
push
dec
outsl
jae
into
les
push
gs
sub
or
add
pop
cld
negl
dec
push
push
push
das
xor
xor
lock
and
jnp
sub
sbb
xlat
or
pop
sbb
xor
scas
jge
loop
and
dec
sbb
cmp
xor
dec
fsubl
je
jae,pn
push
mov
arpl
fldcw
dec
fidivs
test
cmpsb
mov
imul
xchg
jle
notl
fistpl
jge
xor
xchg
xchg
inc
in
test
pop
lock
jmp
mov
cmp
dec
pop
pop
push
sti
or
dec
and
xor
adc
adc
cwtl
cli
inc
xor
pop
mov
imul
push
dec
xor
mov
push
add
sbb
add
cmp
xor
mov
pop
cmp
aam
mov
sbb
sub
sbb
in
inc
orb
aam
jle
inc
fmuls
and
xor
insl
adcb
and
adc
sbb
repnz
jbe
mov
pop
mov
xor
ss
mov
and
leave
cmp
push
mov
lcall
fadds
cmp
dec
adc
cs
sub
sub
daa
mov
cltd
xor
pop
add
pop
sub
xchg
sbb
mov
xor
mov
rcll
adcb
or
and
xchg
inc
cmpsl
stos
scas
add
xchg
mov
or
inc
cmp
sbb
and
pop
daa
pop
pop
fwait
arpl
sti
insl
sub
sbb
es
push
data16
pop
sbb
dec
xchg
add
in
pop
sub
inc
nopl
pop
rorl
xor
push
or
cmpsl
sub
inc
push
sahf
push
loopne
cmpsl
repnz
loop
js
cs
pushf
pop
dec
pop
sbb
mov
movsb
fisttpl
imul
push
or
int
dec
mov
mov
push
sub
pop
pushf
js
cwtl
mov
daa
daa
call
pop
cmp
xor
ljmp
push
in
push
jo
loopne
pop
in
add
jp
inc
mov
xor
pop
mov
and
xor
mov
and
inc
push
xchg
sub
out
sub
popa
jle
dec
outsb
pop
lcall
add
sub
push
pop
aaa
cltd
dec
sub
dec
push
daa
push
cmc
dec
mov
comiss
cmp
pop
xor
cmp
fstpl
push
inc
mov
sbb
mov
cmp
dec
into
mov
cmp
inc
aam
sub
fsubs
sbb
adc
mov
inc
jo
insl
push
test
pop
cmpsl
daa
test
stos
sbb
popf
mov
mov
das
adc
pop
inc
ret
inc
push
jecxz
push
push
arpl
push
and
ss
outsl
dec
sub
xor
inc
cmp
scas
insb
mov
test
mov
push
adc
push
lea
sbb
dec
and
pop
pop
pop
add
sti
sbb
cld
xlat
pop
push
movaps
mov
mov
xchg
loopne
insl
and
adc
push
test
fmuls
rcll
xor
adc
in
push
loopne
mov
pop
pop
mov
cmp
sbb
sub
adc
add
fdivrl
push
test
add
sub
aad
jmp
scas
shrl
dec
dec
lret
fsubrs
push
xchg
int3
cmp
in
adc
add
sbb
cmp
or
sbb
sbb
mov
cmpb
or
dec
or
cmp
cmp
ret
mov
pop
push
cmp
adc
in
pop
sbb
pop
js
jl
and
pop
mov
push
adc
jg
sub
jno
cmp
mov
sahf
adc
adc
sbb
jnp
or
movups
imul
iret
mov
push
jae
add
xor
dec
cmpsl
hlt
lods
pop
xor
cwtl
xchg
mov
mov
sbb
sbb
mov
and
cmp
stos
das
adc
add
adc
aad
push
xchg
sbb
sub
mov
inc
cmpsb
mov
insb
inc
push
pop
or
dec
cmp
adc
hlt
jg
or
inc
cmp
adc
xor
sbb
dec
cltd
jno
cmp
inc
jnp
mov
adc
jbe
subb
loopne
mov
out
dec
cmp
mov
jmp
jge
int
mov
cmp
mov
sub
aam
adc
or
es
pop
cmp
fsub
dec
cmp
pop
loop
cmp
and
mulb
aad
adc
cmp
adc
or
and
dec
cltd
adc
fsubrl
fists
imul
icebp
js
cmp
cmp
pop
sub
mov
and
lock
sub
insl
pop
lods
mov
xor
test
xor
adc
pop
pop
xor
shrb
cmp
fsubs
notl
and
jns
mov
int3
and
inc
dec
sbb
cmpsl
mov
insb
cmp
test
stos
push
dec
sub
scas
sbb
or
cwtl
je
das
push
cmp
data16
adc
xchg
pop
nop
push
adc
pop
push
push
push
incl
and
sbb
adc
and
cmp
cmp
cmp
adc
inc
ja
jmp
fimuls
or
sub
dec
jno
sbb
outsb
dec
xor
mov
sbb
sub
daa
adc
pop
push
sub
lahf
gs
xchg
push
imul
push
pop
sub
sbb
dec
add
pop
pop
ds
int3
jo
pop
dec
inc
dec
xor
xorl
insb
cmp
inc
dec
dec
or
adc
xor
fisttps
pop
add
adc
clc
mov
je
inc
cmp
sub
inc
stos
pop
push
add
xchg
jo
insl
jbe
dec
jge
sub
outsl
push
clc
add
sub
pmaddwd
sub
insb
gs
ja
dec
pop
mul
fs
imul
add
xor
movl
in
adc
movsl
and
dec
fisttpl
stc
xor
push
jg
inc
add
movsl
pop
push
xchg
fwait
int
int
push
sbb
adc
push
jp
jl
divb
sahf
pop
push
pop
push
shl
inc
pop
repz
rcrl
push
mov
int
negl
popa
add
xor
cmpsb
inc
mov
add
es
dec
push
dec
dec
push
fidivs
jnp
ljmp
shlb
mov
mov
pop
sbb
lcall
mov
adc
mov
mov
lods
pop
dec
movsl
enter
push
push
insb
out
pushl
ss
adc
cli
mov
sub
sub
inc
cmp
mov
sbb
mov
ds
imulb
in
pop
sbb
xor
mov
dec
das
addb
cs
pop
sbb
mov
xor
dec
xchg
pop
shl
dec
push
add
pop
pop
in
bound
adc
adc
incb
aaa
xor
cmp
and
jb
lods
pop
pushf
add
lea
inc
jb
fistpl
ss
push
dec
imul
mov
jl
pop
dec
sahf
xchg
out
sub
mov
pushf
sbb
xchg
out
xor
cld
and
repnz
cmp
in
inc
fmull
pop
jb
mov
add
inc
mov
mov
xor
lret
inc
sahf
pop
add
xchg
adc
aam
dec
je
mov
mov
dec
mov
cmp
xor
sub
sub
fistps
sub
xor
inc
pop
xor
and
push
jne
test
pop
cmp
insb
push
outsb
add
push
rcl
mov
js
push
and
and
sub
out
mov
call
dec
jp
pop
xchg
je
push
jb
jo
das
sti
out
sub
bound
je
bound
mov
inc
subl
pop
xchg
mov
mov
xchg
or
fsubl
outsl
jnp
and
cmp
rorb
popa
xor
in
inc
mov
xlat
inc
pop
mov
sub
cs
xlat
out
cmp
lock
pop
add
pusha
mov
sbb
repnz
iret
shll
push
cmp
stos
je
add
dec
nop
cmp
outsb
add
pop
inc
pop
push
xor
aaa
jg
and
xchg
mov
rorb
xor
loop
sub
out
jge
imulb
inc
and
and
inc
or
cmp
jns
inc
and
xor
xor
pop
fimull
out
xorb
add
or
inc
or
dec
adc
das
test
rolb
mov
rdmsr
and
push
add
outsl
dec
push
repnz
fs
mov
aad
rcr
pop
test
in
insb
repz
and
pop
sub
ds
iret
shrl
inc
scas
add
in
repz
pop
mov
xchg
jge
xchg
in
loope
push
mov
mov
out
xchg
cmpsl
push
subw
aad
fucom
int
mov
pop
je
ds
addr16
mov
leave
into
bound
jne
and
in
xlat
add
cs
jle
ret
push
pop
jbe
insl
or
out
jbe
loope
es
pusha
pop
pushf
popa
scas
add
mov
dec
sti
es
cmpsl
cwtl
xor
in
repz
clc
faddp
outsb
push
push
loopne
push
stos
insb
fistpll
rcrb
push
sbb
rclb
sarl
iret
sbb
jnp
lds
push
mov
sarl
push
das
mov
out
lcall
pop
test
sarl
or
mov
xchg
daa
xchg
dec
out
iret
fwait
jge
test
cmp
xchg
aaa
push
push
pop
mov
cmpsl
stc
cmp
fcoms
mov
adc
push
idivl
out
dec
ja
mov
mov
mov
sbbb
out
in
aam
aaa
cmp
mov
cltd
xlat
insb
push
inc
or
cmpsl
stc
mov
mov
pop
addr16
pop
cmp
dec
xchg
rcll
push
bound
sub
push
es
pop
push
jle
pop
cmp
cltd
das
sbb
rolb
push
sbb
jnp
iret
jmp
mov
aas
push
pop
nop
lahf
stos
cmp
mov
add
push
ficomps
or
mov
sti
faddp
loope
xor
inc
aam
lea
pop
stc
cmp
repz
out
sahf
cmpsl
aaa
push
jle
into
out
ss
mulb
push
xchg
jge
dec
repz
mov
call
ds
repz
jge
mov
loop
xor
pop
and
jg
dec
aas
adc
lcall
adc
cs
adc
stc
loop
cld
sti
add
adc
adc
and
xor
adc
pop
xlat
add
mov
iret
testb
int
mov
leave
loop
and
push
test
mov
pop
mov
je
decb
adc
push
and
pop
sbb
or
sarl
enter
adc
or
adc
cs
mov
daa
or
repnz
add
sub
add
outsl
pop
imul
inc
data16
outsb
push
sbb
mov
filds
inc
push
lret
cmpb
or
mov
addr16
push
pop
cmp
inc
sbb
jae
fcmove
test
push
repnz
lcall
dec
cmp
dec
dec
mov
insl
push
ljmp
cmpsb
dec
add
stos
mov
push
inc
cmpsb
push
insb
pop
mov
push
dec
pop
je
jns
mov
fisttps
jp
das
jno
outsl
mov
xchg
outsb
addr16
scas
adc
adc
push
ret
inc
lds
retw
dec
ret
push
or
dec
mov
ja
filds
js
mov
xchg
mov
push
pop
push
in
xor
push
imul
cmp
or
or
dec
ret
cs
adc
pop
repz
insl
jo
es
insb
je
push
addr16
push
stc
sti
popa
jo
jae
es
outsl
and
cmpb
sub
and
cmpsb
jg
sahf
mov
or
aaa
mov
cmp
xor
xor
xor
jle
cmp
push
fisttps
xor
add
and
cmp
dec
or
dec
jle
bound
add
push
push
cmp
scas
adc
add
or
pop
lret
adc
adc
add
jo
aas
and
jl
dec
sbb
pop
daa
adc
xchg
imul
adc
dec
adc
bound
lcall
aam
mov
push
pop
adc
push
jle
addr16
pop
or
les
add
bound
cmp
and
aam
jbe
incl
mov
pusha
push
inc
pop
xor
xor
stos
daa
xchg
fidivrl
pop
daa
push
sub
adc
xorb
mov
cmp
mov
add
js
mov
bnd
nop
cmpsb
xor
pop
adc
daa
test
outsl
sar
pop
sbb
and
js
jnp
popa
adc
cwtl
mov
sub
dec
or
in
inc
sarl
lods
rcr
or
xor
push
sarb
addr16
lods
push
push
push
ret
and
adc
das
dec
xor
and
movsb
test
pop
cmp
cmp
mov
or
or
scas
sbb
daa
test
in
mov
push
add
dec
xor
aaa
dec
ds
in
and
test
jecxz
les
andb
aaa
jo
jns
sub
mov
dec
in
xor
aaa
pusha
add
or
daa
and
insl
mov
jmp
mov
push
push
aaa
js
frstor
lods
daa
jge
pop
adcb
push
pop
in
das
divl
les
fcmove
sti
cmp
jbe
xchg
das
push
pop
adc
push
ret
daa
pextrw
sub
fsubrs
xchg
pop
mov
das
dec
inc
fwait
test
into
pop
sbb
xchg
js
test
inc
or
and
mov
or
adc
das
mov
js
fiaddl
fsubrl
js
lahf
pop
xchg
outsb
cmpsb
pusha
adc
pop
cmp
sub
test
addr16
lea
jg
lea
fdivl
or
lea
xchg
fmuls
push
pop
mov
cmp
xor
or
add
outsl
lret
adc
or
adc
mov
dec
sbb
adc
js
jl
pop
or
inc
sub
mov
inc
imul
cmp
sbb
and
insl
fnstsw
xchg
adc
or
fsubrs
xchg
outsb
cmpsl
call
jecxz
rclb
add
loop
or
adcl
ss
push
and
inc
daa
push
sbb
push
lret
mov
je
es
cmp
add
cmp
das
jbe
dec
lret
loope
dec
sbb
rclb
mov
pusha
shr
test
adc
inc
testl
and
lahf
or
push
hlt
sub
sbb
or
jnp
push
add
andb
outsb
pop
push
test
divb
das
dec
sub
adc
pusha
mov
popa
mov
or
or
pop
push
sbb
inc
mov
sbb
inc
pop
in
subl
ret
xor
or
push
and
pop
mov
pop
sub
adc
adc
enter
andl
pop
sbb
pop
and
fisubrl
popa
popa
mov
dec
xchg
fists
or
dec
sbb
push
adc
mov
out
or
inc
and
adc
stos
push
adc
aas
pusha
int
das
movsb
jbe
adc
ret
scas
arpl
sub
clc
sub
mov
or
daa
jnp
push
inc
jp
pop
push
push
sahf
xor
in
push
testb
ds
movsb
lods
pushf
push
lods
mov
icebp
ds
dec
fsubl
sbb
add
fs
xor
cwtl
cmp
repnz
imul
mov
lret
adc
bound
daa
insb
mov
daa
cmp
loop
mov
mov
xor
lods
pop
pop
xchg
xor
pop
daa
xchg
mov
dec
shlb
sbbb
cmp
sbb
inc
lock
shlb
subb
inc
hlt
adc
push
or
gs
daa
xor
or
mov
xor
and
daa
sbb
push
add
add
daa
sub
popa
xor
push
adc
lret
sbb
sbb
daa
dec
adc
loope
test
out
sbb
push
jp
insb
dec
fdivl
jno
push
pop
ja
hlt
adc
inc
sub
xor
inc
sbb
and
insl
cmpsl
dec
cmovp
pop
ljmp
cmp
pop
xchg
dec
xor
add
imul
push
mov
push
inc
stos
xor
xor
push
push
popa
lds
out
adc
pop
sbb
iret
repz
push
andl
repz
add
or
fwait
int
roll
or
pusha
ss
stc
xlat
lea
adc
adc
add
and
sub
fldcw
xor
inc
mov
mov
mov
lret
mov
popa
xchg
insb
ss
int
add
test
sub
add
or
pop
adc
pop
add
sub
adc
push
push
ss
int
dec
str
add
scas
fldcw
stc
das
incl
pop
add
pop
and
inc
inc
xchg
lcall
pop
and
sbb
push
and
pop
add
loopne
mov
mov
inc
adc
mov
daa
test
dec
mov
jo
mov
inc
jmp
imul
sbbl
pop
xor
sub
jge
add
pop
pop
adc
das
mov
push
and
into
add
adc
push
pop
xor
pop
inc
lcall
aaa
cvtpi2ps
push
pusha
pop
sub
or
push
inc
push
sub
or
pushl
aaa
add
inc
cmp
add
push
add
inc
inc
push
adc
inc
xor
pop
dec
rorl
lock
add
dec
sysenter
pop
or
and
hlt
sub
inc
pop
add
dec
lret
out
std
mov
pop
ds
inc
cmp
sbb
mov
sbb
push
sub
cmovbe
jg
xchg
mov
adc
or
pop
sbb
pop
xor
sub
inc
jg
or
aaa
pop
sub
add
ds
inc
cs
pop
aaa
xor
add
pop
hlt
push
inc
push
add
jno
rcll
cmp
rorb
addl
cli
pusha
lahf
add
pop
push
mov
das
cwtl
sub
push
xor
sub
dec
imul
mov
lret
cwtl
pusha
push
dec
xor
loope
orb
or
mov
repz
add
cs
sub
pop
xor
fisubs
xor
dec
imul
inc
adc
dec
pop
xchg
clc
movsl
xchg
fsts
and
fstl
push
inc
add
sub
movzwl
push
orb
bound
mov
lret
add
shlb
inc
pop
mov
test
fiaddl
movsb
push
popf
add
push
push
xchg
icebp
pop
pop
dec
mov
push
dec
inc
dec
push
mov
add
xor
outsl
add
sub
mov
xchg
inc
aaa
jno
sti
shlb
ret
adc
pop
movsb
cmpb
call
pop
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
pushl
rol
fwait
in
inc
mov
bswap
mov
jmp
dec
fsubrl
fimull
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
out
cli
adc
adc
or
cld
insl
sub
push
decl
gs
leave
ret
sub
xchg
mov
data16
mov
call
xchg
shll
cltd
test
push
push
shll
ja
daa
mov
mov
scas
incl
movsb
sbb
dec
stos
fmuls
lret
rep
cs
jmp
js
js
test
add
mov
mov
movsb
mull
jno
addr16
push
cmc
ljmp
outsb
cmp
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
daa
jg
pop
rclb
dec
addr16
gs
push
push
aas
xor
ds
ss
data16
jmp
pop
jo
pop
es
push
imul
xor
jl
sub
push
or
dec
cmp
decl
enter
bound
sub
js
inc
dec
sub
sub
jp
pop
dec
insl
cld
test
call
and
inc
inc
pop
pop
sub
inc
pop
cs
std
add
and
dec
sub
aas
sub
push
add
cmp
inc
inc
addr16
sahf
ja
mov
and
mov
mov
daa
cmp
sub
leave
mov
pop
and
pop
cmp
jl
jg
cmp
and
xchg
fistpll
aaa
push
xor
inc
add
xor
xor
pop
outsb
cmpsl
cmp
inc
add
inc
cmp
jmp
inc
inc
xor
and
aaa
inc
push
inc
repnz
insb
and
ss
cmovb
pop
adc
cli
fidivl
pop
cmpsl
ss
or
dec
add
add
mov
jo
js
ja
pop
inc
or
subl
adc
ds
xchg
add
call
hlt
scas
bound
inc
cmp
mov
push
outsb
xchg
jnp
xchg
fistpl
dec
int
aaa
xor
arpl
xchg
rcll
push
scas
sbb
movlps
cmp
mov
pop
cmc
inc
add
orb
mov
bound
push
xor
inc
jnp
shrb
sbb
push
loopne
push
and
mov
adc
pop
aaa
push
cmp
mov
aaa
mov
fsubrl
sbb
rcrl
sub
sahf
xor
popf
push
sbb
stos
fadds
mov
xchg
mov
adcb
das
sub
dec
adc
cmp
sbb
push
inc
daa
jge
inc
xor
cmp
rorl
jge
cmp
sti
or
cmp
and
adc
dec
xchg
add
popf
xchg
call
sbb
cmp
add
pop
imul
cmp
sbb
sbb
mov
fs
dec
adc
scas
aad
xor
sbb
push
cmp
cmp
xchg
popa
outsl
cmp
sub
enter
or
inc
adc
lds
into
adc
or
or
and
ret
add
stos
xchg
in
dec
pop
outsb
outsb
je
xor
js
addr16
mov
jae
popa
insl
gs
cmp
ret
adc
pusha
or
out
add
aad
xchg
sub
fistl
loop
femms
xor
shrl
lret
testb
int
ljmp
je
push
mov
insl
push
push
and
mov
cmp
xor
and
dec
or
pop
push
sarb
pop
sbb
pop
pop
dec
inc
fimull
or
andb
cs
pop
inc
les
xor
xor
adc
add
pop
ds
mulb
add
inc
mov
pop
fwait
mov
sbbb
and
or
rcl
ret
sbb
stos
sbb
mov
jae
jle
sbb
adc
cmpsl
add
push
xchg
mov
xor
sbb
pop
inc
jae
pop
and
movd
insl
fdivrl
push
mov
sub
add
inc
dec
or
sbb
add
test
inc
xor
inc
mov
ja
jb
pop
repz
or
jg
mov
pop
inc
jne
inc
fldt
push
xor
and
or
pop
test
dec
das
pop
sub
push
push
rolw
xor
test
cmc
fiadds
testb
adc
adc
or
add
ret
daa
fs
call
cmp
dec
enter
test
hlt
lahf
leave
nop
mov
fs
jo
out
or
test
push
cli
and
leave
pop
dec
or
iret
or
pop
pop
lgs
cmp
cmp
push
aas
mov
nop
push
cmc
dec
cmp
cmp
loopne
shrl
cmp
arpl
insb
mov
cmp
pop
mov
loop,pt
aas
adc
inc
dec
add
xor
mov
pop
sub
cs
inc
inc
adc
xor
mov
insb
xor
mov
pop
sbb
jmp
sub
das
dec
add
mov
test
cmp
xchg
scas
pop
inc
sahf
rolb
and
out
jmp
dec
add
sbbb
or
imul
scas
or
mov
pop
pop
aas
cvtpi2ps
testb
sbb
js
outsl
mov
inc
pop
stos
imul
jle
and
pop
movsl
repz
imul
pop
repz
test
jge
push
arpl
inc
dec
xor
mov
cmp
mov
cwtl
bound
scas
maxps
inc
jnp
gs
push
jge
sbb
cmp
adc
dec
cld
jbe
scas
xchg
sub
sub
inc
dec
mov
or
and
inc
push
out
mov
dec
cmp
xchg
call
or
out
xor
jmp
push
jne
or
pop
add
fs
fstpl
sub
dec
jae
push
popa
mov
xor
mov
dec
sbb
jae
shld
push
punpckhwd
fsubr
lods
inc
dec
outsb
push
je
scas
orl
cmc
lcall
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
mov
pop
orl
xor
add
fwait
pop
daa
dec
mov
dec
jb
inc
popa
mov
roll
jb
mov
xchg
sbb
and
push
pop
sbb
adc
add
pop
push
sub
jl
add
rol
dec
add
ret
test
mov
pop
cmp
aaa
test
cmp
adc
push
mov
add
inc
pop
or
inc
or
cli
ljmp
inc
pushl
out
cmp
adc
aad
clc
inc
cmp
inc
push
sub
nop
sub
add
call
sub
dec
test
cmp
adc
xchg
pop
add
cmp
and
mov
push
loope
int
jno
in
or
test
push
cmc
cmp
cmp
stos
push
push
call
sbb
lret
sub
fcomps
pop
pop
mov
or
mov
dec
insl
or
stos
pop
adc
lods
or
adc
xor
xor
ja
mov
pop
xchg
mov
ds
sbb
dec
inc
jnp
push
aaa
xlat
shlb
aad
or
mov
adc
inc
add
adc
inc
add
inc
std
lcall
add
popf
pop
bound
add
xchg
dec
xchg
dec
inc
xadd
sbb
inc
cmp
inc
xchg
inc
cmovo
pop
lock
adc
sbb
mov
nop
jo
maxps
dec
iret
adcb
add
mov
sbb
das
test
lods
push
inc
sbb
pop
sub
push
les
aas
jbe
addr16
add
test
lea
mov
movsb
hlt
daa
add
into
imul
inc
add
ror
push
mov
adc
pop
lahf
add
out
mov
daa
mov
pop
repnz
cwtl
movsb
inc
daa
rcr
push
outsl
mov
iret
inc
pop
in
aas
out
mov
jg
dec
outsl
nop
sbb
mov
daa
dec
inc
inc
and
xor
and
sub
and
xor
dec
clc
pop
sbb
mov
push
cwtl
push
push
enter
dec
repz
fdivr
call
push
fs
sahf
out
pop
mov
sti
cmp
cmp
add
pop
xchg
je
jnp
negl
pop
sahf
pop
pop
ds
pop
stc
cmp
cmp
je
add
pop
repz
cmpsl
int3
mov
pop
mov
iret
andb
sbb
pop
mov
add
adcb
jno
dec
inc
testb
outsb
fsubs
mov
mov
and
je
or
leave
repz
dec
add
add
sbb
pop
lock
add
idivb
pop
mov
mov
add
movl
jg
inc
mov
mov
test
add
popa
and
in
in
dec
outsl
hlt
push
inc
clc
sbb
adc
and
xor
cmp
dec
mov
or
outsl
add
inc
inc
pop
leave
inc
adc
inc
sub
mov
in
outsl
fists
jbe
outsl
cmp
ss
dec
adc
in
sbb
dec
sub
dec
jb
push
je
pop
scas
add
push
adcb
leave
mov
add
xor
xor
and
int
pop
mov
in
jl
pop
hlt
pop
pop
add
pop
mov
add
sub
mov
outsl
out
daa
push
xor
xor
xor
xor
pop
pop
cmpsb
or
fildll
testb
outsl
sub
fs
sbb
fcomps
sahf
out
lcall
cmc
dec
push
pop
fs
clc
xchg
or
push
jl
push
fs
mov
add
test
or
cmpb
adc
mov
call
sub
add
mov
sbb
dec
pop
popa
imul
pop
fildll
sbb
stos
jo
mov
outsl
and
push
cwtl
sbb
or
add
and
insb
add
clc
pop
scas
sub
push
xor
add
pop
out
shlb
cmpsl
filds
jo
cmpsl
and
add
aaa
and
jns
aaa
in
sbb
popa
fcomi
push
push
cld
daa
addr16
mov
ss
lds
pusha
push
lahf
lds
pop
xlat
push
insb
popa
jbe
aaa
ret
testl
jg
push
rclb
dec
sarl
push
xor
xor
inc
inc
pop
leave
sbb
sbb
dec
out
jbe
adc
fidivs
divl
sbb
push
popa
pusha
popa
outsl
push
push
mov
jg
pop
pop
xor
push
push
push
xor
sahf
push
pop
hlt
push
add
imul
arpl
pushf
push
lock
adcb
xor
adc
or
or
shl
and
insb
adc
jl
lahf
xlat
or
pushf
nop
push
mov
shlb
scas
iret
stos
pop
in
add
xlat
or
pushf
orb
xchg
movsb
fs
test
pushf
and
or
mov
cmp
pop
dec
arpl
testl
and
add
repnz
and
add
cmp
push
adc
mov
popa
xorl
add
fcmovb
aaa
inc
ja
add
jl
icebp
dec
xchg
add
and
or
shll
mov
cwtl
add
iret
add
movsl
xchg
adc
jg
add
mov
sub
and
or
mov
jg
addr16
add
iret
test
int3
jb
push
jb
dec
sub
mov
data16
daa
addr16
outsl
add
out
dec
shlb
mov
cmpsb
mov
ret
jno
ss
push
add
es
mov
xchg
xor
andl
pop
leave
mov
sub
xlat
add
iret
aad
push
daa
push
out
mov
xchg
pop
leave
add
movq
push
inc
xchg
push
hlt
lcall
dec
sub
push
jns
dec
xchg
inc
xchg
ja
and
or
enter
aas
or
push
xchg
push
xchg
popa
outsl
add
enter
or
fcomip
and
adc
mov
pop
hlt
add
push
repnz
fs
add
imul
scas
add
push
sbb
int3
outsl
out
dec
xchg
popl
mov
add
out
push
addr16
pop
or
jo
or
addr16
nop
sub
add
and
nop
daa
add
loopne
and
cld
xlat
or
test
push
repnz
mov
xor
bound
xor
pop
imul
xor
ja
push
inc
insb
push
jl
mov
inc
icebp
or
inc
cwtl
imul
or
rolb
or
mov
outsl
lods
pop
es
leave
add
or
sbb
push
pop
sti
push
and
xlat
retw
popa
adc
das
sahf
mov
orb
insb
sbb
addr16
pop
int
loopne
out
push
jne
pop
jbe
loopne
fdivr
xor
orb
sub
push
mov
out
sahf
cmpsl
xor
iret
repz
icebp
sub
dec
jne
stos
sahf
out
cmp
jmp
cmp
out
outsl
sti
push
jge
pop
jns
iret
repz
sbb
mov
cmp
repz
jbe
into
cmp
mov
push
popa
jl
iret
mov
xor
sahf
out
or
cmp
sarl
inc
pop
jbe
jns
out
hlt
pop
test
mov
cmp
out
add
out
ds
aad
xor
jl
xbegin
ret
imul
stos
aad
out
jl
mov
add
out
cmpsb
roll
xchg
jl
iret
repz
pop
mov
iret
sarl
mov
stc
cmp
repz
nop
je
out
pop
xchg
sarl
insl
shl
push
xchg
shrw
mov
xchg
pushf
out
ds
ljmp
xor
ficoms
xchg
dec
repz
jno
iret
or
sti
cmp
fistpl
imul
mov
or
sahf
out
popf
xchg
mov
jb
into
es
sahf
push
insb
pushf
sahf
out
jl
mov
shl
jns
jns
sub
out
ss
sti
in
pop
movsb
aaa
xchg
xor
out
das
movsl
scas
push
sar
cmpsb
jns
sahf
out
int
cmpsl
inc
cld
xor
jns
iret
shrl
adc
cmp
out
sbb
jns
out
stos
outsb
xchg
mov
ds
dec
xchg
push
lods
out
scas
out
cmp
sub
ret
scas
iret
sarl
loopne
mov
fwait
int
stc
cmp
cmp
lahf
sbb
cmp
stc
mov
mov
cmp
out
add
mov
fidivrl
inc
add
pop
mov
ror
xor
ret
push
xchg
out
and
out
lcall
js
out
cmp
negb
int3
pextrw
ds
repz
popf
sar
push
cmp
push
mov
int
enter
jl
into
ss
iret
pop
lahf
out
jl
shll
aam
cmp
dec
shl
shrd
xchg
jns
add
cmp
add
add
dec
jno
pop
add
xchg
cmp
mov
mov
cli
test
jp
pslld
jbe
and
add
cmp
leave
inc
pop
gs
sbb
ja
or
pop
paddq
pop
in
imul
stos
cltd
nop
pop
jb
popf
and
sbb
imull
shll
cli
notrack
jb
cmp
ja
cmp
fnsave
jae
mov
ret
ja
clc
push
fisttps
aaa
inc
loop
test
dec
rcrl
leave
mov
ss
pop
cmp
xchg
into
push
outsl
push
fs
sti
push
or
jg
jb
inc
outsb
xchg
mov
inc
pop
xchg
pop
mov
jb
ss
outsb
jle
fisttps
movsl
adc
or
fimull
mov
xchg
sarb
pushf
bound
aad
mov
and
fs
sarb
ds
ss
out
aas
mov
adc
out
not
idivb
mov
push
or
cld
iret
gs
jbe
in
sti
mov
cmc
mov
lods
push
inc
pop
push
scas
push
decl
push
pop
jmp
scas
jbe
shlb
cmp
pop
fsubp
mov
inc
xor
cmp
jbe
loop
dec
stos
add
scas
push
cmp
add
jb
and
ja
or
inc
rcll
or
adc
shl
dec
rorb
fwait
push
push
and
and
fiaddl
aas
les
xchg
adc
ficoms
in
je
stos
iret
jne
mov
loop
push
sbb
mov
pop
js
pop
pushf
sbb
leave
in
or
pop
inc
mov
push
mov
sbb
xchg
cmp
push
push
jbe
dec
hlt
js
inc
dec
leave
xchg
js
jns
cmp
in
adc
jns
bound
cmp
aas
loopne
mov
jbe
inc
jle
inc
bnd
enter
push
jl
scas
out
aam
cmp
repnz
adc
add
pop
pavgb
mov
inc
push
add
xchg
mov
jns
inc
adc
imull
pushf
push
mov
xchg
sbb
pop
add
hlt
and
test
jnp
roll
inc
pop
jb
dec
jnp
push
leave
imul
push
in
es
push
push
daa
iret
enter
jo
add
mov
rclb
mov
mov
xor
adc
add
jl
pusha
stos
fs
scas
into
movl
add
inc
sahf
mov
jge
and
lock
jl
in
cltd
xchg
jl
jl
push
add
repz
add
add
repz
xlat
pop
loop
popa
leave
jmp
in
out
dec
repnz
push
mov
jne
int3
jge
and
mov
enter
adc
and
adc
or
xor
dec
jge
push
insb
adc
jp
loop
mov
mov
lea
add
xchg
xchg
xchg
mov
in
hlt
cltd
sbb
popl
movd
repnz
jle
jle
mov
inc
jle
jle
pop
pushf
pop
and
orb
cwtl
mov
xchg
mov
outsb
mov
cmpsl
fistpl
jecxz
jmp
repz
inc
repnz
sti
mov
mov
into
inc
fwait
in
jg
push
dec
daa
js
andb
jg
data16
repnz
and
add
jb
sahf
loopne
and
in
mov
inc
adc
sub
rolb
jo
push
mov
iret
insl
test
jl
add
and
mov
adc
addb
jne
popf
inc
add
daa
pop
ja
dec
dec
nop
jl
sbb
stos
into
lock
dec
jb
sbbb
mov
jg
mov
bound
insl
mov
jns
flds
add
inc
loope
aaa
leave
and
sbb
or
cmp
xchg
adc
push
and
pop
gs
mov
insl
xchg
mov
shll
into
cltd
or
jns
test
lods
filds
outsb
fildl
stc
cmpl
and
mov
or
repz
repz
or
iret
repz
or
mov
repz
xchg
adc
repz
iret
repz
adc
out
orb
sbb
sub
and
lods
nop
addb
adc
adc
je
push
dec
pop
and
int
add
xchg
out
jae
add
dec
mov
adc
repz
addr16
cmpsb
sbb
daa
test
xchg
add
fcom
inc
xchg
enter
enter
ds
inc
xchg
xchg
jp
dec
dec
dec
xchg
and
dec
test
das
faddl
in
in
mov
sbbb
add
nop
scas
or
mov
loopne
rolb
out
mov
aaa
daa
adc
popf
cmpsl
shll
fdivrl
sbb
cmp
aas
test
jg
push
add
mov
jp
sbb
push
jb
inc
aas
add
decl
and
add
inc
jb
ficoml
std
cltd
in
jb
and
and
iret
int
out
movswl
lock
xchg
pop
and
and
addr16
inc
mov
mov
dec
push
mov
pop
out
and
pop
push
leave
jae
jmp
add
dec
jb
pop
mov
mov
inc
add
mov
xchg
inc
loop
in
js
jb
xchg
add
jb
mov
dec
jb
mov
pop
push
push
js
pop
xor
lret
lret
xchg
mov
xchg
add
pop
clc
lock
jnp
mov
sbb
leave
and
or
outsl
ret
push
pop
sbb
mov
shlb
sbb
add
pushf
out
push
cmp
and
daa
push
pushf
xchg
add
imul
outsb
xchg
mov
jno
jae
int
loopne
das
lret
xchg
jo
es
clc
mov
lret
lret
lret
add
sbb
and
mov
lret
lret
lret
inc
mov
push
mov
lret
lret
lret
lret
pusha
mov
jo
js
cmp
jmp
femms
or
or
or
cmp
cmp
or
push
add
add
add
repnz
mov
jb
inc
mov
mov
mov
mov
stc
push
xlat
push
lock
push
mov
inc
dec
inc
pop
mov
mov
mov
scas
nop
ja
sahf
add
cmp
rorl
mov
mov
pop
in
xlat
hlt
sbb
jb
mov
or
in
daa
iret
add
push
push
and
lock
sub
or
cmp
jns
insb
or
xor
es
push
jg
xchg
mov
and
iret
mov
cmp
loope
xchg
jg
mov
lea
lea
lahf
push
emms
in
in
sbb
sub
push
ljmp
or
fisubrs
scas
lea
cmp
cmovle
cmpsl
dec
pop
add
stos
mov
sub
je
or
pop
xchg
cmp
sahf
xchg
inc
pop
or
cmp
das
adc
daa
mov
xchg
add
lea
in
lea
jb
mov
xchg
jbe
pop
out
push
add
stc
mov
out
lahf
ljmp
pop
mov
pop
jle
or
xor
mov
push
mov
pop
outsl
in
xchg
mov
jae
jle
add
cmp
cmp
lahf
mov
mov
mov
loopne
les
int3
es
iret
add
out
mov
add
out
fimuls
add
add
out
cmp
inc
or
jns
out
pop
or
repnz
sahf
jo
jle
mov
vmread
xchg
jl
xchg
call
enter
nop
adc
sbb
and
in
outsb
pop
sub
xor
or
dec
sahf
or
sqrtps
sahf
or
cmpsl
and
aam
inc
mov
ffree
push
daa
in
stc
add
nop
xchg
nop
and
inc
and
iret
add
xchg
dec
xchg
sbb
xchg
xchg
movl
out
ret
jns
add
or
in
int3
jg
and
in
mov
xchg
add
in
test
daa
and
xor
cmp
pop
xchg
leave
in
and
rcr
leave
leave
cwtl
mov
pop
xchg
jae
cmp
enter
pop
insl
test
jmp
lcall
push
xchg
push
xchg
add
leave
inc
inc
dec
xchg
xchg
xchg
out
jb
xchg
pop
xchg
fmull
orl
lret
in
pop
hlt
addr16
push
xchg
jb
enter
xchg
sbb
daa
xchg
inc
mov
xor
push
xchg
mov
xchg
insb
xchg
jg
imulb
fldcw
cltd
xchg
lcall
movsl
mov
in
in
rcr
out
pop
aas
pusha
adc
sbb
push
xor
xchg
xchg
and
inc
xchg
dec
xchg
push
xchg
cmp
enter
xchg
js
adcl
xchg
inc
out
add
in
and
mov
inc
pop
add
xchg
xchg
xchg
xchg
mov
fwait
ja
cmp
xchg
inc
xchg
inc
jmp
fistps
test
iret
jb
ds
addr16
mov
pop
in
xchg
popl
test
inc
sub
adc
daa
cmp
sahf
or
mov
movl
push
mov
aad
push
add
enter
in
xchg
fwait
jmp
std
das
add
repnz
leave
add
and
js
xchg
outsl
mov
leave
repz
push
jbe
dec
add
es
iret
add
xchg
cs
dec
dec
pushf
mov
filds
les
leave
leave
ljmp
inc
and
cwtl
xchg
jl
inc
inc
cwtl
xchg
sahf
xor
jp
fs
cwtl
lcall
lcall
pop
aaa
jns
mov
dec
insl
in
enter
fcomp
or
sti
add
repnz
cltd
repnz
inc
cltd
repnz
cltd
push
cltd
pop
cltd
arpl
imul
or
or
pushf
pushf
pushf
pushf
or
push
add
add
add
repz
repz
jnp
or
cmp
sbb
sbb
outsb
repnz
mov
jns
dec
mov
and
mov
js
and
cltd
sub
jb
stc
and
pop
mov
pop
push
lock
push
outsl
pop
push
add
fnsave
stc
push
arpl
insl
xchg
cmp
xlat
xchg
dec
sahf
out
xchg
add
mov
scas
cmpsl
push
and
jb
leave
inc
loope
jg
pop
jns
jb
stc
add
inc
fwait
js
and
cmp
fwait
inc
iret
enter
fists
pop
fwait
push
cmp
jle
or
outsb
rcll
iret
lds
cmp
int
fisttpll
ljmp
or
mov
jmp
test
mov
mov
enter
pushf
inc
pushf
dec
pop
cmp
mov
push
add
pop
pushf
or
mov
jle
xchg
xchg
add
pusha
jns
xchg
xchg
mov
in
fs
into
out
ficomps
add
mov
das
das
or
add
dec
cmp
popf
out
repz
in
popf
insb
mov
jp
pop
and
leave
mov
pop
mov
xchg
cmp
lmsw
loop
ljmp
cmp
adc
cmp
out
and
sub
pop
repz
jae
or
or
iret
push
push
push
adc
cmpsb
daa
iret
adc
sahf
scas
adc
nop
push
leave
loopne
lea
fdivl
movzbl
mov
cmp
jg
fimuls
xchg
pop
call
add
pushf
out
push
daa
clc
push
out
int
outsb
scas
filds
lahf
pop
push
push
add
push
daa
stc
loop
push
scas
push
lahf
xor
incl
dec
cs
mov
in
pop
ret
jo
jg
incl
mov
daa
fmuls
jecxz
adc
js
outsl
pop
stc
lahf
pop
add
adc
xchg
jge
popl
repnz
loope
cmpsl
out
or
cmpsl
jo
jae
jb
aaa
mov
jns
add
lahf
inc
mov
push
in
dec
aaa
lar
cs
mov
mov
outsl
mov
push
repnz
nop
mov
cmp
in
mov
lret
in
pop
pushf
rcrl
fistpl
add
fisttpll
pop
jmp
pop
sti
pushf
jmp
mov
adc
sbb
sub
enter
mov
out
xchg
test
add
iret
repz
add
repz
add
jae
xchg
ret
push
je
rorb
test
cmp
mov
stc
and
pop
sahf
mov
mov
rcr
and
push
out
lock
inc
dec
push
fists
adc
mov
cmp
push
addb
repnz
test
daa
daa
adc
xchg
stos
stos
mov
cmp
add
add
lods
push
repnz
push
int3
and
divl
stos
add
daa
inc
pop
cmp
enter
mov
loope
mov
mov
jns
push
out
out
push
or
jns
out
orl
jns
xchg
or
or
jmp
ret
mov
xchg
sbb
mov
and
leave
jmp
push
sbb
or
sbb
movsb
das
pop
movsb
bound
movsb
jb
jp
sbbb
add
push
pop
mov
dec
inc
loopne
mov
and
inc
ds
lods
lock
dec
cs
sbb
movsb
das
ret
rorl
dec
dec
out
divl
mov
pop
push
pop
jmp
cmp
movsl
pop
nopl
in
movsl
shrd
pushf
loopne
movsl
aaa
push
movsl
pop
movsl
bound
push
jg
mov
cld
lods
les
and
add
movsl
push
pop
ds
out
inc
ficomps
dec
push
mov
pop
lahf
movsl
mov
jmp
push
aas
push
push
leave
dec
incb
rep
shrb
push
cmpsb
cmpsb
es
push
jl
sarl
add
and
mov
and
pop
iret
in
in
popa
imul
pop
and
lods
mov
xchg
cmpsl
fwait
lsl
jo
cmp
call
cmp
psubb
cmpsl
das
sbb
es
add
cmpsl
ja
cmpsl
mov
xchg
outsb
fnstsw
andl
xchg
shlb
enter
lds
cmpsl
ss
out
icebp
cmpsl
dec
or
cmp
and
sub
sub
pushf
dec
mov
addr16
push
pop
mov
mov
movq
daa
addr16
push
in
lea
cmpsl
mov
mov
lcall
leave
jae
mov
aad
outsb
daa
daa
fucom
paddsw
cmc
pop
ds
repz
seto
or
testb
divl
test
iret
insl
inc
ja
jl
xchg
pop
mov
ja
int
out
cmpsl
addr16
ja
jb
jo
addr16
cmpsl
loope
ja
pop
movups
insb
mov
dec
popf
pop
and
add
flds
add
in
sub
popf
fcmovne
pop
ja
stos
mov
pop
insl
inc
push
push
loopne
add
lock
iret
sbb
roll
outsl
or
mov
repnz
and
add
add
repz
pop
sub
xor
les
int
mov
dec
stos
punpckhbw
mov
xchg
dec
mov
mov
jmp
inc
pop
fdivl
or
leave
and
add
mov
xlat
pandn
out
pop
ds
jbe
ud0
add
aad
out
movhps
or
lock
stc
insb
mov
pop
fldt
mov
push
mov
mov
mov
jg
add
mov
lock
push
sti
or
xchg
cmp
lods
cmp
xchg
das
lods
iret
inc
lods
dec
lods
cmp
jae
push
pop
push
push
jbe
jmp
or
adc
lods
lahf
lods
cs
das
das
outsb
lods
mov
leave
repz
cmpsb
adc
pushf
cmp
push
into
in
rcr
pmaxub
mov
or
sbbl
add
sbb
inc
and
push
rclb
cmp
xchg
addr16
in
into
leave
inc
dec
daa
push
scas
fisttps
cmpsl
arpl
roll
mov
lcall
or
test
jge
inc
pop
push
add
testl
or
popf
ja
mov
stos
pop
testl
xor
scas
in
and
mov
scas
sbb
movsb
cmp
dec
andps
pop
and
add
xchg
seta
mov
mov
add
pop
pushf
pushf
cmp
rcr
pop
or
jbe
cmp
sti
push
enter
fistpll
loop
enter
cs
daa
pop
leave
xor
in
outsb
xchg
dec
cs
mov
inc
fwait
in
mov
ja
iret
inc
dec
and
add
add
or
fsub
jns
adc
add
add
pop
dec
and
sub
xor
mov
cmp
fucomi
jbe
iret
outsl
pop
ja
jg
outsb
repnz
sahf
xchg
adcl
mov
mov
pop
in
lret
mov
loop
ljmp
push
pop
cli
cli
nop
fmulp
out
add
mov
in
sahf
adc
daa
mov
mov
inc
dec
mov
rcll
xchg
js
in
pop
out
scas
xchg
add
cwtl
cmpxchg
mov
aaa
jns
leave
push
or
push
mov
fnstenv
inc
mov
adc
sbb
dec
dec
outsb
cs
dec
dec
dec
dec
dec
push
jo
mov
mov
daa
and
mov
dec
insl
sahf
out
outsb
das
jne
jge
test
pushf
fmull
bts
sbb
popf
cmp
rcrl
fabs
dec
sbb
jmp
mov
adc
lods
mov
leave
aaa
fcomps
leave
mov
mov
mov
js
leave
leave
inc
cmp
xchg
leave
mov
mov
and
icebp
push
add
xchg
and
fimull
push
mov
mov
jb
enter
mov
mov
mov
in
sbb
lods
nop
mov
xchg
mov
inc
mov
sar
mov
loopne
and
mov
and
adc
out
fmulp
sub
pop
sahf
out
pushf
inc
push
push
or
cmp
pusha
out
mov
xchg
js
iret
jo
mov
push
jne
mov
aaa
shrl
fmull
mov
mov
mov
insl
daa
pop
pop
mov
lret
lret
or
ljmp
lret
lret
lret
or
and
cs
inc
mov
dec
mov
mov
lret
lret
outsb
mov
dec
lret
lret
lret
mov
stos
mov
mov
push
mov
cmp
repz
fsubs
jecxz
repz
and
and
and
cmp
or
cmp
repz
sbb
daa
sub
js
sahf
outsb
cvttps2pi
aas
cs
mov
ret
jmp
jne
jge
test
fucom
jns
lea
call
and
out
dec
popf
shlb
addb
mov
jns
daa
add
fdivrp
or
cmp
sbb
xor
jp
mov
pop
leave
cmp
fcomps
mov
jns
adc
jmp
add
cmp
xor
add
out
jbe
and
rorl
or
or
cmp
pop
jp
jns
xchg
out
xchg
popf
adc
mov
mov
cmp
fistps
ljmp
cmc
sbb
mov
or
sbb
sub
repnz
aaa
and
mov
jmp
lds
xor
cmpb
movsl
mov
in
cmp
mov
jb
repnz
jb
jb
jl
mov
stos
lss
mov
ret
lret
fimull
sahf
pushf
clc
push
mov
adc
push
mov
mov
pop
jb
cwtl
mov
cmp
daa
mov
enter
mov
es
repz
cmp
dec
sub
cmp
fistpl
popw
outsb
sub
repz
mov
inc
dec
icebp
or
jo
out
bswap
push
add
pavgb
mov
fisubrs
jg
idivl
dec
inc
pop
pushf
mov
ds
rcrb
leave
rep
and
aas
das
push
adc
dec
aaa
jns
aas
push
adc
lar
xor
pop
push
sbb
in
adc
pop
ljmp
pop
inc
insb
cs
dec
sbb
leave
sbb
shlb
shlb
sub
shr
aas
loopne
jb
aas
mov
mov
and
fst
in
fldt
cmc
mov
syscall
jns
cmp
shll
jnp
sbb
rcll
mov
xchg
imul
in
jae
jnp
mov
test
loopne
rcl
into
cmp
iret
jae
push
out
sarb
jns
or
adc
sbb
ja
mov
sub
repnz
inc
xchg
add
daa
pop
leave
jo
jg
xchg
dec
popl
daa
pop
xchg
mov
in
cmc
cmpsw
jp
std
pop
add
pop
adc
push
sbb
mov
pop
addr16
sbb
jnp
ret
xlat
pusha
ret
push
leave
jae
movsb
xchg
fwait
jns
daa
daa
mov
leave
in
in
into
xchg
fdivrp
pushf
cmp
out
out
add
jno
adc
xchg
les
iret
jae
pop
pop
sub
xor
out
repnz
inc
dec
les
push
les
loop
mov
jg
fildll
fcmovne
jl
jl
out
jbe
fstp
movsb
pop
lods
fbstp
sbb
cmp
or
clc
fucomi
in
out
out
negl
push
cmp
dec
ret
pop
lds
into
xchg
sub
and
sbb
lds
lds
dec
daa
pop
leave
and
popf
fsubrl
jge
test
jl
aas
push
or
mov
ror
add
fmull
jmp
add
loopne
push
pop
cmp
pop
pop
add
ds
xchg
out
inc
dec
pushl
mov
jns
pushf
xchg
mov
xor
pushf
movsb
out
imul
fisubrl
xchg
push
outsl
loopne
inc
cli
add
pop
in
push
add
bswap
and
outsb
cmp
lret
lret
lret
lret
inc
push
pop
push
lret
jae
jle
mov
xchg
pop
lahf
mov
outsl
stos
mov
rol
mov
loope
in
mov
movl
enter
mov
cmp
inc
enter
mov
sbb
xchg
xchg
xchg
sbb
sbb
xchg
xchg
xchg
xchg
pop
push
adc
sahf
sub
gs
sahf
out
jnp
xor
out
xor
jns
xor
xor
sahf
out
aaa
fidivrs
jmp
out
cmp
cmp
imul
push
ds
repz
das
inc
inc
dec
leave
repz
dec
inc
push
inc
out
sahf
fldt
js
orl
jns
mov
dec
movsb
daa
daa
daa
mov
pop
mov
outsb
repnz
out
push
icebp
daa
and
cld
pop
lret
mov
xorl
mov
lretw
repnz
inc
jl
fiadds
cmp
lret
in
xchg
and
lret
cmp
lret
fcomip
lret
mov
or
push
lret
iret
sbb
jb
lret
sub
aaa
push
adc
cmp
dec
pop
pop
sbb
cmp
repz
outsb
sbb
repz
sbb
iret
repz
movsl
pop
mov
jns
ja
mov
and
sahf
out
and
repnz
in
and
int3
adc
push
push
outsb
and
fisttpll
fildll
int3
xor
aas
cmp
repz
dec
das
push
xor
cmp
repz
jbe
mov
out
pop
mov
out
jns
pop
mov
in
sahf
cmp
cmp
fldln2
in
sahf
ds
out
cli
out
fs
int
sbb
xor
pop
iret
leave
repz
xor
fiadds
and
enter
je
dec
int
fisttpll
ja
push
add
jns
out
push
mov
leave
push
repnz
jecxz
inc
aaa
jns
repz
add
push
mov
add
or
pop
adc
andb
ljmp
leave
xchg
jl
call
adc
jmp
into
cmp
cmp
into
popa
into
imul
jno
pop
clts
cmpl
cltd
mov
or
into
push
pusha
pop
int3
aam
daa
pop
je
fcompl
in
into
lahf
cmpsl
loope
fs
cld
filds
lahf
clc
xlat
pushf
dec
push
pop
xlat
iret
mov
iret
mov
aaa
iret
aas
iret
inc
iret
xchg
xchg
pop
fsubr
xchg
adc
jp
aaa
nop
mov
daa
mov
fwait
pop
fwait
mov
mov
mov
pop
or
or
sahf
out
or
repz
outsb
daa
and
rclb
pop
sub
mov
jns
xor
jns
dec
cs
iret
repz
sbb
repz
cwtl
nopl
mov
leave
repz
les
and
fimull
add
mov
in
outsl
sti
daa
out
sbb
push
rcl
das
sbb
jg
sbb
xchg
jl
fcomps
push
push
iret
repz
add
jle
xchg
in
daa
mov
add
cmpsb
xchg
iret
or
fcmovbe
roll
leave
repz
rorl
aaa
jb
or
adc
pop
push
pop
sub
jbe
dec
syscall
or
scas
xor
rclb
repnz
popa
pop
xrstor
out
repnz
adc
push
adc
repz
mov
je
out
les
iret
movlhps
in
xchg
ficompl
push
in
loope
repz
and
push
sarl
repz
scas
adc
and
repz
cmp
iret
dec
sub
push
roll
pop
cld
push
add
inc
dec
inc
add
repz
shrl
sub
inc
addr16
mov
pop
pop
pop
xchg
rcrl
mov
out
cs
rorl
fidivrs
iret
repz
jmp
out
adc
push
fcompl
push
push
daa
aam
das
aam
aam
inc
pop
pop
inc
aam
aam
arpl
out
pop
outsb
pop
jns
test
sysret
pop
xchg
xchg
pop
mov
aam
movsl
aam
aam
sahf
out
xchg
aam
push
adc
adc
stos
in
jo
adc
jmp
aad
aad
push
das
daa
cmp
das
add
aas
aad
outsw
adc
inc
cmovg
fisttps
mov
xchg
jb
sbbb
rorl
add
repnz
push
pop
stos
cmovle
xchg
add
mov
ret
out
or
iret
leave
repz
call
int3
push
fstps
or
adc
lahf
daa
iret
repz
sbb
xor
mov
cmp
inc
pop
sbb
ja
pop
data16
sbb
frstor
ja
jb
xchg
popf
test
push
mov
sahf
out
pop
mov
jns
or
fisttps
ljmp
testb
ud2
push
pop
and
leave
leave
sub
inc
adc
fwait
cmp
repz
iret
repz
sbb
outsb
sbb
test
dec
lcall
sahf
xchg
mov
and
xchg
mov
xlat
jns
out
push
and
int3
into
cmc
in
or
call
fcomps
push
jns
leave
repz
xor
sub
out
dec
push
push
xor
fcomps
pusha
vmwrite
xchg
mov
js
mov
cmp
movsb
sub
adc
es
lahf
inc
mov
xor
dec
cmpsl
fldenv
sub
cmp
cmp
insb
and
pop
out
aas
inc
push
mov
pop
cmp
inc
aas
into
pop
in
push
xchg
sub
inc
aaa
mov
pop
or
fcmovne
repz
cmp
push
add
setle
jns
add
add
xchg
out
pop
or
or
mov
or
xchg
ja
scas
adc
adc
adc
and
cmp
inc
push
addr16
in
jbe
das
push
xorps
jns
outsb
das
insl
push
and
fildl
pop
andb
iret
add
addl
cmp
mov
fsubrl
cmp
sbb
add
or
xor
ret
add
jmp
push
xor
lahf
out
sahf
and
sbb
or
call
lock
cmp
repz
enter
out
iret
mov
lods
movsb
mov
nop
mov
iret
repz
pop
push
inc
iret
repz
inc
cmp
sbb
or
stc
sub
inc
sbb
dec
or
sbb
in
cwtl
add
adc
and
add
and
pusha
inc
sbb
add
and
mov
pop
adc
cmp
sahf
jl
das
ss
movsb
add
cmpsb
lret
pop
movsl
sbbl
fildll
mov
xchg
or
leave
inc
mov
inc
xchg
mov
lahf
mov
mov
in
call
idiv
sbb
add
mov
xor
sti
sub
fcomp
loopne
jb
jle
test
cld
mov
inc
lahf
fcomps
adc
fisubrl
in
or
inc
push
push
clc
jle
lds
push
lds
lods
incl
xchg
mov
subb
es
pop
add
sub
movl
lret
loopne
mov
or
jns
out
adc
adc
jo
inc
sbb
cmp
out
in
sbb
je
dec
push
sub
mov
in
and
jns
repz
jns
imul
pushf
out
cmpsb
push
mov
pop
sub
push
rorb
cmp
add
pop
and
inc
test
addb
js
aaa
imul
cbtw
push
push
xor
xorb
test
shl
addr16
push
push
mov
mov
adc
push
push
mov
pop
aas
pop
daa
push
lods
push
negl
fildll
and
lahf
call
in
push
jg
out
cs
jp
mov
add
rorl
out
adc
inc
daa
addr16
xchg
adc
add
sbb
sbb
icebp
clc
add
lock
and
js
repz
jns
repnz
sbb
cld
lock
add
out
push
pop
lock
push
and
sahf
out
sahf
push
or
or
adc
pop
rcrb
in
enter
mov
mov
iret
repz
test
movsb
and
repz
mov
es
dec
enter
mov
mov
inc
out
xor
fs
mov
cld
jle
inc
mov
incl
xorl
jg
cmp
cmp
repz
pop
js
mov
idivb
iret
repz
xor
add
adc
lcall
and
mov
jae
das
push
push
xchg
cmp
dec
insb
cmpsl
push
push
xlat
add
dec
inc
pop
enter
xchg
add
or
and
repnz
ret
mov
adc
dec
pop
and
sbb
dec
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
call
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
fistpll
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
stc
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
jmp
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
lock
xchg
and
and
ja
cltd
add
sti
aas
jno
or
mov
pop
fs
dec
lea
incl
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
ljmp
jmp
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
decl
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
dec
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
adc
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
fwait
lea
pop
or
mov
jecxz
cmpsb
add
movb
pushl
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
ljmp
adc
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
in
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
fisubrs
mov
lahf
into
ror
add
cmpsb
fmuls
das
pop
push
in
or
inc
je
inc
inc
push
dec
sub
cmpsl
inc
jnp
cmpsl
ljmp
add
ja
popa
push
out
mov
les
hlt
adc
ljmp
xor
xchg
fs
xor
mov
loopne
xchg
sub
mov
sub
mov
sbb
pushl
repz
test
ficompl
jmp
mov
hlt
movl
lcall
imul
in
leave
mov
add
insb
push
arpl
psubd
or
jmp
outsb
cmp
imul
addr16
add
aam
dec
std
test
movsl
cli
mov
xor
leave
mov
jecxz
fdivs
jne
filds
or
xchg
pop
cmp
fsts
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
pushl
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
add
out
mov
mov
movsl
in
lahf
xor
lcall
pop
js
stc
test
push
loope
or
push
sub
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
incl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
loope
frstor
sub
rorl
popa
mov
into
pop
cmp
mov
xor
dec
adc
ret
movsb
sti
hlt
shrl
imul
ljmp
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
popa
jmp
add
adc
or
and
ljmp
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
pushl
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
call
popf
adc
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
jmp
jno
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
pop
aad
mov
call
xchg
shll
push
repnz
jmp
shll
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
hlt
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
ffreep
push
xchg
ja
int3
add
mov
das
es
lds
or
or
mov
cmpsl
call
ret
shlb
lcall
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
call
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
jmp
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outsl
pushl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
ljmp
cli
clc
sar
imul
push
js
or
push
addl
mov
cmp
pop
inc
ljmp
rorb
imul
scas
fsubrl
fldenv
filds
aaa
dec
mov
sahf
mov
inc
jmp
lcall
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
ljmp
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
inc
pop
pusha
xor
daa
iret
mov
pop
push
dec
inc
push
pop
js
push
mov
jns
out
push
xlat
fcomp
fcmovu
out
sahf
out
fstp
loop
jns
out
in
call
sahf
out
in
in
repz
sahf
out
sahf
cmc
div
clc
stc
cli
ret
jns
cld
pop
adc
aas
jg
inc
adc
test
movsl
addb
movsl
xchg
push
movl
fs
dec
hlt
jbe
rol
into
add
fisubs
inc
insl
bound
inc
pop
stos
std
dec
popa
je
push
adc
and
cmp
std
adc
pop
inc
jno
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
or
xor
xor
xor
popa
ds
mov
inc
jbe
pop
insb
imul
push
insb
imul
jnp
fdivrs
inc
or
push
inc
jp
pop
mov
bound
dec
push
ret
lret
sub
popa
or
fs
shll
gs
je
movl
push
jbe
mov
push
inc
int
aas
xchg
lea
roll
sub
sbb
inc
and
js
lea
mov
jecxz
add
popa
jns
mov
dec
insb
roll
lcall
stos
mov
aas
add
mov
push
push
aas
or
and
aas
cltd
jns
adc
jae
insb
daa
pop
ret
sub
daa
pop
inc
cltd
add
aas
sahf
mov
nop
sbb
push
fcmovu
insb
sbb
inc
pop
fnstcw
jae
inc
inc
inc
add
mov
push
scas
add
stos
cmp
in
inc
int
push
dec
cmp
inc
subb
loop
xor
fs
ja
lcall
sbbl
dec
jge
iret
mov
add
add
mov
arpl
add
addr16
out
push
clc
xchg
into
pop
jo
pop
sti
call
inc
cmp
push
mov
jg
aaa
gs
xor
push
add
sub
add
outsl
pop
insl
sbb
mov
aam
sbb
rcll
dec
mov
push
add
lret
lahf
mov
out
jb
and
inc
and
popa
dec
popa
jo
lahf
or
xchg
outsl
outsl
test
mov
pop
in
pop
add
jno
cmp
push
mov
stos
lds
and
nop
test
pop
cmp
pop
sub
mov
or
cmp
mov
jo
push
test
push
outsl
insb
jns
adc
jb
push
add
je
inc
fcmovnu
push
inc
outsl
arpl
insb
lahf
mov
inc
push
gs
fcmovnbe
dec
mov
lods
ja
inc
jbe
add
jg
les
ja
dec
xor
dec
movl
out
cmp
inc
repz
add
jg
inc
sbb
scas
lods
xor
movl
test
shlb
sbb
adc
test
mov
sbb
sbb
pop
shrl
inc
dec
inc
pop
bound
outsb
arpl
sbb
sbb
add
insl
or
aaa
inc
jne
push
pop
fldcw
movsl
inc
xchg
fisttpl
or
xlat
test
adc
sub
or
adc
mov
add
insb
cmc
cmova
cld
pop
pop
test
inc
fdivr
loopne
adc
dec
pop
mov
add
add
imul
mov
add
or
pop
pop
push
or
or
lret
or
or
or
adc
adc
cmpsb
push
shl
adc
or
pop
sbb
adc
adc
adc
add
data16
or
pop
adc
inc
add
pusha
mov
pushf
nop
add
add
add
adc
loopne
add
add
mov
repnz
sbb
cmp
decl
call
xor
adc
pop
and
xor
inc
mov
adc
cmp
and
bound
js
add
mov
pusha
xchg
xorb
jbe
fsubs
xchg
sub
sbbb
add
addl
add
inc
or
pop
xor
pusha
add
aas
xor
adc
or
pushf
into
add
cmp
scas
adc
mov
or
adc
push
adc
int
mov
adc
or
xchg
mov
lock
add
and
adc
inc
mov
mov
dec
rorl
scas
fiaddl
or
ja
adc
dec
mov
sub
inc
fists
xchg
and
sub
std
cmpsb
xor
aas
imul
pushl
fdivrl
add
mov
mov
loopne
mov
fsts
rcrb
orb
mov
cmp
and
mov
xchg
sti
push
call
in
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
mov
inc
xchg
pusha
add
std
or
incl
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
inc
mov
test
pop
lahf
mov
movsl
jecxz
pop
mov
push
sbb
push
stc
or
xchg
jg
or
push
push
addr16
out
or
push
push
xchg
add
repnz
inc
lock
call
xor
fdivrp
cmp
fisubrl
in
mov
orb
int3
lcall
std
aaa
cmp
mov
scas
mov
pop
pop
mov
popl
movb
call
adc
adc
mov
xor
lods
scas
xchg
test
aam
and
ljmp
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
stos
lahf
fdivs
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jmp
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
mov
jp
push
out
or
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
sbb
das
fcomps
add
pop
jb
mov
mov
push
mov
sub
pop
mov
jl
rorl
adc
xlat
gs
jg
hlt
push
add
stc
loope
aad
outsl
jg
mov
sar
andl
aas
icebp
testb
mov
jg
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
ljmp
cli
push
inc
sbb
paddb
inc
mov
clc
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
es
or
dec
fisttpll
out
aas
std
cli
mov
push
push
idivl
cmp
sub
inc
scas
incl
cmpb
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
dec
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
clc
sub
sub
cmp
dec
inc
push
sub
xchg
pop
clc
pop
hlt
sub
movsb
add
add
lea
jg
gs
std
xorb
jg
pushl
outsl
adc
ret
das
pop
pop
pop
shlb
mov
sarb
sbbl
jno
or
sarb
std
pop
les
cli
ss
xor
jmp
mov
inc
arpl
mov
jb
jmp
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
jns
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
jl
sbb
cmpsl
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
inc
in
mov
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
sbbb
mov
stos
dec
lods
xor
jg,pn
cmpsl
scas
in
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
cmp
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
mov
ja
xor
cmp
xchg
mov
sbb
ftst
jbe
xchg
and
mov
shrb
shlb
out
aas
stc
add
out
gs
jno
mov
call
adc
pop
cld
addl
adc
and
ds
cmp
fmull
enter
jecxz
scas
jg
jg
sub
in
pop
mov
sub
mov
dec
incb
outsb
mov
aas
mov
or
cld
inc
or
in
pop
cmpsb
push
pop
jg
add
jg
mov
outsb
jg
aad
test
mov
mov
iret
cmp
jg
push
jbe
push
sbb
stos
icebp
pop
incb
jno
insl
lcall
sub
push
inc
jecxz
sbb
sarl
adc
sbbl
sar
adc
lahf
xor
ds
and
cmp
dec
push
js
mov
aas
mov
fsubrl
lock
incl
ss
and
clc
xchg
inc
rcrl
sbb
jne
push
and
mov
adc
xchg
lahf
or
push
rcrl
rolb
pop
inc
jb
jge
aas
fistpl
adc
call
jno
pop
dec
jg
mov
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
inc
call
sbb
or
imul
xor
dec
xor
fsubr
fistps
lds
fidivrl
adc
stos
pop
add
dec
in
stc
clc
pushl
mov
lahf
les
sbb
sbb
cld
loop
pop
fiaddl
mov
in
stc
mov
lahf
outsl
int3
push
sbb
movsl
loopne
test
clc
pop
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
lock
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
hlt
jmp
fistpl
out
lcall
sti
jg
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
decl
mov
popf
pop
rcr
dec
mov
gs
pushf
lea
jp
cmp
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
ljmp
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
sbb
cwtl
inc
mov
insb
stc
push
mov
fistps
outsl
lock
in
jmp
stc
out
rcll
clc
push
std
mov
ja
jl
or
mov
xchg
pmullw
clc
decl
repnz
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rcr
hlt
mov
inc
out
pop
or
or
dec
ss
mov
incl
pslld
pushf
imul
cli
daa
pop
and
imul
cmpsl
lret
pop
in
cmp
dec
filds
mov
pop
lock
jmp
hlt
dec
mov
push
mov
sbb
xlat
inc
aas
mov
jg
mov
loopne
fisttps
addr16
sbb
cld
daa
jp
std
adc
outsb
cmp
inc
cltd
or
mov
ret
nop
cmp
das
incb
adc
stos
imul
cmc
cld
idivl
mov
and
loope
jae
shll
je
jge
call
mov
jg
stc
add
out
f2xm1
aas
inc
icebp
mov
loope
mov
cmpsl
popf
lds
aaa
cld
sti
mov
fbstp
push
dec
outsl
das
jge
mov
inc
add
cmpsb
cmp
call
mov
iret
decb
adc
mov
inc
sbb
and
call
mov
pop
add
jg
push
mov
inc
add
nop
test
aaa
std
fisttps
fdivp
push
dec
inc
sbb
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
jae
arpl
adc
jbe
mov
mov
pop
clc
loope
loope
mov
or
scas
sbbb
jg
mov
xchg
stos
jmp
xor
sarl
jne
push
cmp
repz
jno
pop
gs
imull
jg
pop
out
jg
jno
ret
xchg
xchg
cmp
mov
cwtl
arpl
out
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
ljmp
pop
outsl
jmp
std
mov
daa
jmp
faddl
add
inc
push
jae
push
pop
mov
pop
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
mov
add
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cli
jmp
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
add
smsw
inc
xchg
int3
les
push
cmp
pop
mov
bsf
popf
int3
pop
iret
and
add
lcall
dec
jb
inc
mov
push
pusha
mov
cli
int
jo
test
mov
lea
pop
mov
les
and
pushf
inc
adc
lahf
pushf
jg
in
addl
rcr
daa
jmp
sahf
insb
fcompl
fidivl
adc
cmp
jo
ss
jecxz
inc
jne
jns
test
cmpsb
ja
mov
jo
push
out
mov
lock
xchg
fadd
cmp
cmp
fisttpll
das
in
jnp
test
sub
cltd
je
out
aad
jb
lret
out
out
enter
pop
daa
sbb
popa
outsb
sti
cmp
or
xor
inc
mov
cmpl
popa
int
inc
mov
mov
dec
ficoml
test
ljmp
rdmsr
aad
or
mov
push
mov
iret
push
and
ljmp
bound
mov
std
xor
mov
pop
pop
out
jmp
pop
adc
xchg
jmp
jno
mov
mov
hlt
inc
std
jne
arpl
cmp
js
hlt
test
dec
dec
mov
sarl
into
add
aam
inc
inc
iret
jg
ljmp
arpl
ljmp
hlt
dec
mov
out
mov
adc
dec
pop
mov
pop
inc
cmc
clc
inc
add
jmp
insb
jb
xchg
push
mov
adc
or
or
fwait
push
outsb
pushf
stos
mov
fs
sub
mov
and
push
insb
jecxz
xor
mov
ror
add
dec
ret
dec
jl
add
mov
or
ljmp
es
dec
shlb
xor
sbb
xchg
xchg
adc
dec
jp
out
fxch
sbb
clc
fldl
insb
pop
into
test
jbe,pn
sbb
sub
call
pop
cmp
xchg
push
ljmp
adc
sub
and
mov
fisubrs
add
inc
fstcw
js
test
or
add
mov
das
cmpsb
dec
inc
fists
fistps
fcomi
cmp
sub
aaa
cmc
inc
push
inc
push
cmp
xor
push
outsb
sbb
incl
mov
inc
dec
pop
movsb
push
mov
and
jb
aas
leave
jo
adc
idivl
sar
cmp
push
pop
pop
in
ds
lods
movsl
loop
push
call
mov
fsubs
mov
shrb
jns
movsl
add
pushl
ja
fsubrl
icebp
xor
jle
push
dec
mov
jp
add
xchg
push
inc
mov
pop
popf
loope
stc
and
int
pop
das
adc
cs
mov
sbb
call
cld
add
cmpsb
jmp
out
scas
loop
stos
xrelease
aas
ja
xlat
xchg
cmp
ljmp
mov
loope
sub
adc
pop
jg
pop
xchg
or
test
pushl
loope
aam
mov
or
shr
sbb
mov
jecxz
lds
aaa
cld
jmp
xchg
dec
jp
add
mov
nop
and
sub
mov
xchg
jg
fisubrs
mov
xchg
repnz
cmp
hlt
sub
dec
outsl
shll
dec
push
push
dec
ljmp
scas
sti
mov
test
push
loopne
jmp
add
push
into
push
mov
ljmp
mov
aad
mov
mov
fildll
stc
xchg
jmp
or
xor
jns
jmp
in
lahf
cmc
mov
cmpsb
sub
fsubrp
addr16
pop
test
inc
call
cli
push
ljmp
or
movsl
push
jge
faddl
dec
pop
lcall
cwtl
mov
in
and
push
cmp
pop
xor
sub
mov
push
fsubs
fbld
out
out
push
adc
and
cltd
packuswb
jge
cmp
call
and
into
ja
loopne
mov
lahf
stos
or
adc
xor
mov
je
fcos
jmp
in
fcoml
shr
push
idivl
icebp
shrb
scas
clc
aas
sahf
ja
adc
xor
push
push
pop
bound
or
cmp
incl
pop
cmp
dec
jge
mov
popf
pop
mov
ss
arpl
dec
fdivp
xor
test
and
lcall
or
stc
and
sbb
sub
scas
add
incl
int3
fcmovbe
inc
push
xor
sbb
jg
sbb
inc
and
rclb
mov
xchg
rcrl
call
dec
push
int3
xlat
lcall
test
icebp
add
test
ret
mov
fnsave
sub
sbb
popa
mov
sahf
mov
aaa
cld
pop
lea
test
decl
and
testl
add
inc
ds
mov
bound
out
pop
jmp
out
inc
jg
lods
adc
mov
imul
out
das
sbb
mov
mov
ljmp
mov
and
adc
cmc
xchg
mov
push
pop
add
jne
movsb
sbbl
out
jp
and
wbinvd
mov
cwtl
add
inc
mov
aad
sar
fstps
repnz
lret
mov
mov
xchg
gs
sub
cmp
mov
incl
pop
jmp
lret
orb
in
push
fisttpl
jg
add
rclb
xor
ss
movsb
pushf
sub
pop
mov
adc
mov
pop
cmc
jmp
test
movsl
pusha
outsb
daa
and
movl
mov
jg
or
sar
jb
idivb
inc
js
fisubs
call
mov
outsb
cmp
xor
enter
mov
aam
mov
and
shlb
mov
dec
loopne
push
loope
inc
iret
xchg
add
mov
pop
jo
push
pop
iret
jg
sub
mov
int3
js
mov
popf
cmp
add
lds
mov
add
xor
cmp
mov
bound
sbb
push
sahf
add
jne
adc
ret
sub
fdivrs
sub
imul
std
add
movl
jmp
pusha
aas
cmp
mov
ret
mov
call
les
outsb
sarb
mov
jno
xchg
dec
mov
pop
jae
decl
aaa
mov
mov
jnp
ss
mov
mov
loop
leave
adc
mov
es
sti
dec
rcll
negb
inc
hlt
mov
imul
mov
and
cmpsl
add
addb
adc
das
lods
fcomip
idiv
or
lock
xor
in
sbb
jno,pt
mov
lcall
in
dec
cli
inc
rolb
and
xchg
dec
popa
mov
mov
mov
ljmp
add
jns
pop
fpatan
aaa
pop
fdivp
pusha
ret
add
add
mov
push
lcall
pop
dec
shrl
dec
leave
xor
in
lcall
add
ficoms
scas
repnz
inc
sub
ss
aad
test
cwtl
stc
hlt
clc
mov
jno
xor
sub
or
les
clc
incl
add
fwait
test
shll
or
mov
outsl
hlt
adc
lahf
int
sub
add
jb
inc
fistpll
dec
sbb
cmp
cmc
call
sti
push
mov
les
push
mov
stos
int3
es
imul
and
fbstp
jnp
stos
faddl
stos
dec
cs
adcl
ljmp
mov
gs
lcall
bsr
push
cmp
add
lods
ljmp
in
inc
cmc
mov
mov
inc
or
pop
jae
outsl
iret
mov
xchg
mov
pop
push
call
stos
fnstcw
cld
xchg
inc
ds
popf
ja
mov
mov
in
inc
cmpsl
add
jbe,pt
mov
jmp
jae
mov
adc
jbe
mov
xor
adc
mov
outsl
sub
push
mov
std
adc
xor
xchg
mov
xor
ljmp
dec
mov
hlt
add
enter
out
insb
mov
cmpl
add
mov
inc
ret
xor
mov
mov
jge
sbb
sbb
mov
or
pop
fcos
incl
fimull
pop
sbb
stos
push
dec
cmovs
adc
inc
sbbb
mov
je
rcl
fsubl
jg
sub
xchg
aam
sub
hlt
cmp
or
adc
movsl
dec
xchg
push
hlt
cltd
sbb
enter
sub
incl
cli
adc
nop
aad
loope
cmp
mov
loop
mov
add
loopne
test
lcall
lahf
inc
leave
idivl
mov
pop
mov
inc
addl
scas
fmulp
mov
cmpsl
xchg
adc
sbb
in
pop
mov
sbb
bound
sbb
decl
out
pusha
ds
mov
icebp
arpl
lea
int
in
sbb
adc
mov
jnp
lcall
xchg
sbb
cmp
stc
in
mov
shr
xchg
dec
fs
mov
call
pop
fadds
imul
or
mov
ret
mov
mov
jne
das
cli
decl
xchg
in
xchg
rcl
fildll
inc
mov
test
sbb
xchg
push
add
dec
mov
push
mov
ret
dec
cmpsb
push
mov
in
fbstp
stos
mov
data16
lcall
cwtd
inc
push
cmpsl
fsubr
loop
sub
aad
mov
jg
add
xchg
in
idiv
fsubr
in
and
push
insb
andl
js
rcr
mov
jmp
or
ror
test
into
gs
lock
repnz
inc
cmp
xor
sub
out
add
dec
fidivs
dec
ja
fs
pop
mov
test
push
shrb
xor
pop
incl
mov
flds
addr16
xlat
repnz
push
aad
push
mov
inc
and
sub
jecxz
sub
pop
or
lcall
jmp
cltd
cmp
sbb
out
outsb
adc
test
call
repnz
mov
lcall
push
adc
xchg
cli
mov
jmp
mov
add
xlat
jp
adc
xor
popa
out
mov
rorl
push
mov
testl
cmp
decl
in
daa
mov
mov
test
lock
push
add
mov
into
xchg
pop
dec
jno
sbb
lds
or
cmp
xchg
sub
incl
js
ja
in
dec
xor
stos
lcall
mov
std
xor
ja
bound
mov
sub
adc
pop
leave
jp
or
cmpsb
cmp
pop
inc
hlt
push
loope
mov
cmp
fisubrs
xchg
int
loopne
sbb
xor
out
dec
int3
or
pop
and
flds
call
mov
and
dec
or
add
inc
push
lcall
jmp
cld
cmp
add
iret
pop
in
mov
xor
cld
cwtl
push
cmp
xchg
inc
and
shll
stos
adc
pop
negl
mov
push
push
add
pushl
or
popa
cwtl
xor
loop
mov
mov
xor
call
sub
jmp
mov
or
mov
pop
dec
scas
mov
aaa
jns
xchg
pop
cmp
data16
orb
mov
loopne
ljmp
into
dec
mov
icebp
mov
jno
mov
mov
jmp
fdivrl
xlat
inc
enter
in
xor
dec
aas
mov
mov
fisubs
cmp
aaa
sub
and
std
push
out
add
xlat
dec
in
incl
aas
xchg
jae
xor
cli
push
in
jecxz
ret
or
mov
imul
cmp
clc
stos
pop
mov
loopne
ja
sub
jle
xor
and
pusha
sub
jl
fbstp
mov
add
subl
push
jbe
popf
xchg
xlat
pop
hlt
jmp
push
inc
push
insl
cld
add
jo
es
aas
mov
mov
push
fdivrl
es
decl
xor
nop
jmp
jecxz
sbb
adc
pop
mov
decl
sahf
lods
or
out
into
repz
das
dec
push
mov
lods
adcl
add
mov
jno
xor
daa
pop
movsl
xor
jmp
dec
sub
stos
dec
andl
mov
bound
je
std
and
inc
push
xlat
call
int
inc
in
stos
imul
imul
roll
cmpsl
mov
das
inc
inc
sahf
add
cld
jg
rolb
test
int
sahf
adc
lds
pop
sbb
jg
push
mov
push
push
mov
fldt
xchg
int
push
call
int
inc
ret
and
aaa
mov
pushf
dec
out
inc
dec
mov
ljmp
mov
cltd
mov
xchg
fdivrp
cmp
push
pop
mov
sub
in
enter
push
jmp
mov
mov
mov
cltd
ljmp
fcmovb
movsl
fistl
add
in
fwait
sub
lods
negb
std
lret
ja
mov
jg
pop
push
xor
dec
aam
sbb
cli
sbb
ret
ljmp
loopne
dec
add
dec
push
or
rorl
or
out
and
imul
inc
test
pop
addr16
imul
dec
ljmp
adc
cmp
stos
in
mov
pop
scas
popa
test
xchg
loopne
lock
lock
daa
jnp
iret
clc
mov
call
andb
out
inc
inc
stc
or
jnp
ljmp
xor
or
mov
sub
sub
pop
aaa
mov
ret
mov
js
lcall
mov
out
xchg
push
or
adc
popf
adc
xchg
mov
jmp
cmp
adc
mov
and
inc
mov
ljmp
add
cli
or
dec
sub
clc
shll
push
js
mov
repnz
repz
incl
mov
sub
idivl
dec
push
push
pushf
xchg
push
pusha
rcll
aaa
in
fbld
and
inc
add
movsb
add
inc
out
pushl
cmp
es
jne
inc
xchg
inc
popa
xor
jmp
adc
inc
fistl
dec
sub
into
jns,pn
pop
mov
pop
loopne
lret
jne
inc
cmp
inc
dec
pop
test
stc
xchg
or
add
add
dec
lahf
cmpl
jmp
jmp
divb
loop
adc
sarb
insl
and
repnz
xor
lcall
repz
xchg
inc
jbe
dec
mov
cmpsb
vsubsd
xchg
mov
lcall
xor
ds
pop
mov
ss
call
iret
imul
call
sbb
decb
int3
mov
add
cmp
mov
nop
push
les
mov
cmp
sub
jbe
mov
mov
fs
sbb
in
ss
fbstp
mov
adc
js
push
mov
fmulp
inc
out
mov
cmp
mov
cltd
and
movsl
popa
add
es
xchg
jo
mov
inc
xchg
jg
push
xor
fcmove
ds
icebp
mov
rcrb
popf
fimull
jecxz
mov
mov
push
adcb
push
and
push
ljmp
adcl
and
mov
adc
sbbb
push
mov
outsb
push
push
jl
fistpll
pop
std
incl
jecxz
cld
daa
adc
mov
bound
mov
pop
adc
sub
in
xchg
push
jno
and
inc
push
inc
sub
insb
and
pop
fcomip
call
test
pop
shrb
sti
test
push
pop
add
outsl
dec
jbe
scas
pushl
adcb
push
bnd
es
adc
jecxz
mov
sti
jmp
test
sub
movsl
cmpsl
pop
pop
rcr
mov
mov
rorb
in
call
mov
dec
aaa
pop
cld
pop
xor
cmp
das
xchg
mov
cld
xchg
jp
lret
insb
bnd
repnz
movsl
pop
xchg
int
rolb
insl
loop
stos
jns
call
scas
jnp
cmp
rcrl
incl
mov
mov
pusha
test
icebp
adc
and
adc
xor
jecxz
push
ljmp
pop
inc
popf
xor
repnz
in
cmp
mov
inc
ficomps
mov
incl
addb
test
jg
loop
lret
jle
add
shrb
jl
add
dec
fisttpl
hlt
testl
sahf
pop
push
mov
ret
fmull
push
shlb
push
xchg
sahf
xor
call
mov
fcos
incl
lods
sbb
sbb
repnz
arpl
shlb
sbb
sub
fwait
jb
jmp
dec
add
xchg
xor
std
rol
jo
push
sbb
pop
rcl
mov
add
mov
pop
frstor
hlt
sbb
adc
xchg
lock
sahf
rorl
mov
fwait
rol
data16
jmp
lcall
mov
inc
mov
shrb
outsl
pop
lcall
jnp
enter
int
test
push
or
xor
ja
and
stc
jae
add
inc
mov
add
xor
or
sub
add
fistpll
cli
dec
arpl
cmp
or
fbld
sbb
clc
sbb
out
push
push
cmp
fisttpl
or
mov
mov
repz
shlb
incl
outsl
lea
push
ret
mov
pop
sub
fmuls
cmpsl
push
push
add
xchg
sbb
call
inc
jno
ret
pop
mov
idivb
nop
mov
fldl
push
jb
xchg
push
add
inc
or
dec
fnstenv
fadds
cs
push
jl
pushl
mov
xchg
sub
enter
cmp
mov
cmp
stc
adc
lds
jle
add
mov
aaa
rcll
bound
sti
not
fmul
xor
pop
jmp
test
push
and
pop
incb
inc
dec
mov
or
jp
push
cld
movsl
sbb
icebp
incl
inc
repnz
adc
sar
dec
insl
nop
sub
lahf
int3
push
push
pop
cmpsl
cmp
cmp
lds
or
push
jg
xchg
push
stos
les
pop
add
mov
mov
cltd
lret
cwtl
or
repz
incl
rol
fidivrs
cmp
lds
mov
ljmp
ljmp
lea
lea
inc
mov
mov
out
sub
sub
ljmp
lds
ret
icebp
add
dec
cwtl
pop
inc
bound
mov
imul
mov
mov
das
cli
decl
outsl
movsl
faddl
outsl
pushf
xchg
cmp
and
lcall
xchg
out
insb
imul
mov
mov
pop
mov
sub
movsb
loope
sbb
lcall
lea
aad
jb
mov
bound
frstor
pop
lret
stos
scas
in
js
mov
ret
dec
push
out
pop
inc
xor
inc
add
insb
test
ljmp
jmp
cmpsl
rdmsr
sbb
xchg
push
jo
mov
sub
into
popf
je
lcall
cltd
je
in
jnp
iret
pushf
out
daa
mov
dec
mov
dec
call
stos
lcall
cs
jne
out
iret
cmc
lret
cmp
mov
cmc
sub
bound
fcomip
ja,pt
mov
mov
test
imul
out
incl
inc
cltd
adc
jns
push
daa
dec
mov
cmp
mov
jb
and
cmp
dec
lcall
les
inc
dec
and
mov
xchg
dec
dec
xor
nop
cmp
or
xchg
mov
and
jmp
sub
pop
mov
and
cmpsl
pop
mov
xchg
or
movb
ljmp
xor
sbb
jno
inc
into
adc
pop
fdivrs
push
nop
sub
mov
incl
lret
or
or
and
push
sbb
js
xchg
push
and
fs
jg
in
pusha
pop
int3
jmp
andb
inc
and
mov
dec
mov
jg
xor
out
dec
pop
push
and
aas
shr
sbb
mov
outsb
subb
add
ret
sti
ljmp
lock
sbb
fadd
or
jae
lahf
insb
pop
cmp
mov
neg
lds
lds
mov
xor
ljmp
xchg
cld
fldl
out
int
mov
pop
xor
xchg
loope
decl
mov
cld
cmpl
and
xchg
or
push
movsb
das
vcvtsi2ssl
dec
aam
decl
pop
mov
inc
mov
cmp
das
leave
inc
lods
fisubrl
jl
xchg
pop
js
call
ret
test
xchg
add
fstpt
in
fmull
mov
and
adc
cmpsl
sub
adc
in
adcb
cmpsb
sub
mov
jle
lock
mov
mov
ret
jae
cmp
xchg
aad
out
int
insb
cmpsb
mov
and
cld
pop
lock
cmp
jno
dec
dec
lcall
or
inc
sub
in
daa
imul
mov
dec
jo
mov
incl
mov
shrl
lock
mov
jg
cwtl
repz
rcrl
insb
cltd
stos
cmp
cmp
scas
orb
xor
fidivrl
fstpl
loope
insl
mov
add
jg
mov
xchg
push
pop
inc
or
add
cmp
lods
loopne
dec
test
cli
sub
cmp
ret
jmp
out
or
sbb
push
in
lret
xchg
outsl
stos
jne
xor
incl
addr16
sbb
lret
faddp
je
fs
xchg
push
mov
mov
pushl
jns
and
aam
pop
pusha
fisttpl
shll
ja
loop
mov
mov
mov
mov
pop
xchg
xor
push
test
call
int3
and
add
add
cmc
sbb
jno
lea
movsb
fldl
pop
and
aad
call
jl
arpl
fmull
push
lds
stos
xor
push
js
xlat
jmp
pop
cld
lcall
call
cltd
pusha
mov
dec
ljmp
pop
loopne
repnz
adc
cmp
mov
in
jae
pop
int
stos
cmp
ret
pop
xor
mov
cli
scas
add
xor
mov
lret
cwtl
jne
sbb
insl
jb
mov
outsb
call
inc
push
jge
int
popf
pop
shl
repz
and
loope
js
push
or
mov
push
imul
jmp
movsl
xchg
inc
xor
ret
shlb
aam
inc
mov
fcoms
add
push
ljmp
pop
push
and
mov
xlat
xchg
adc
jno
xor
mov
imul
incl
out
jns
sbb
pop
sub
jae
cmp
sbb
test
cli
lcall
pop
in
dec
sbb
mov
sbb
pop
or
ljmp
add
push
adc
into
out
sub
call
inc
bound
arpl
xlat
mov
inc
add
mov
sub
adc
pushl
mov
cmpsb
sub
rorb
xchg
xor
xor
ds
aad
sub
jg
int3
loop
insl
or
mov
in
popa
stos
push
xor
ret
add
sarl
mov
xor
loope
add
inc
fistps
mov
adc
pop
call
inc
push
and
adc
fstp
adcb
call
sbb
cltd
insb
push
and
push
inc
jo
pop
mov
dec
mov
sub
mov
sbb
decl
or
cmp
les
sbbb
aam
in
inc
int3
dec
add
jecxz
xchg
sar
lcall
push
mov
push
int3
ljmp
push
frstor
clc
xor
fdivrl
mov
mov
adc
loop
pop
xor
mov
clc
incl
popa
push
and
dec
add
popf
leave
enter
ljmp
lret
cmp
and
fcompl
or
inc
mov
in
iret
lock
ret
in
mov
scas
push
test
mov
stc
cmp
rclb
add
fidivl
stos
or
sbb
mov
incl
pop
push
insb
mov
mov
stos
jmp
decb
mov
mov
add
or
std
dec
ja
push
movsb
stos
dec
icebp
adc
xchg
pop
into
ljmp
scas
dec
mov
cmp
push
dec
popa
mov
adc
outsb
test
aam
and
adc
add
call
mov
mov
cmpsb
shlb
mov
into
or
movsb
add
adc
std
rcll
cmp
clc
in
cmpsb
pusha
lret
out
jmp
out
andl
mov
pop
sub
js
jo
fisubl
mov
cld
fwait
iret
ret
iret
jmp
incl
mov
sub
imul
aam
mov
xchg
jg
xchg
ret
pop
hlt
mov
jo
es
testl
jg
dec
jbe
inc
jg
or
jg
lret
into
jmp
push
mov
ja
mov
lcall
lcall
in
loop
addr16
adc
lods
cltd
dec
adcb
adc
sub
lcall
xor
movb
test
or
and
call
call
push
jle
and
clc
ftst
frstor
lods
insb
popa
and
icebp
sub
enter
mov
add
push
mov
lret
mov
push
sub
mov
loop
iret
mov
out
push
out
fwait
inc
lahf
stos
cmp
js
sub
inc
pop
bnd
shll
jl
lods
mov
sarb
push
test
fstpt
xor
mov
xor
mov
dec
mov
jg
mov
fildl
adc
sti
cmp
sub
or
out
and
jmp
cld
lea
sbb
addr16
lcall
shlb
mov
leave
faddp
movsl
push
or
mov
add
mov
repnz
test
imul
pop
in
cmp
into
iret
jle
pusha
lcall
and
adc
mov
adc
ss
sti
lock
xchg
in
push
push
pop
stos
xchg
imul
cld
dec
fnsave
enter
push
ficompl
lahf
mov
mov
sarb
sbb
call
mov
cwtl
cmp
mov
push
push
lret
push
lods
paddq
sarl
incl
hlt
add
cwtl
ret
add
adc
xor
fisttpl
ret
xchg
jns
aas
pop
lcall
adcl
mov
xor
insl
adcl
shrb
mov
pop
xlat
call
dec
fs
and
and
xor
jnp
pop
negl
xlat
inc
jg
or
xchg
push
dec
pushf
pop
nop
cmpsl
adcb
dec
mov
cmp
movb
mov
cmpsb
out
mul
lret
in
pop
mov
inc
add
arpl
or
in
or
sbb
sbb
test
cmc
mov
es
xchg
mov
push
and
inc
sub
outsb
xchg
fcoms
lcall
daa
flds
push
sbb
dec
stos
loope
arpl
leave
jbe
cld
fcoml
ret
aam
divb
out
inc
cmp
push
test
push
aas
mov
adc
sahf
sbb
arpl
mov
xchg
sub
iret
mov
ljmp
std
jl
pop
add
pop
mov
push
push
cmpsb
jb
pushl
stos
ror
jnp
ds
mov
xchg
adc
fmuls
and
add
pushl
int
sarl
test
add
pop
add
or
dec
jg
insb
mov
inc
dec
jg
nop
sub
cli
icebp
in
aaa
mov
in
lock
mov
xchg
sbb
lcall
jmp
out
xchg
nop
rep
lret
dec
imul
jo
shll
push
mov
call
imul
negb
pop
mov
mov
and
mov
mov
mov
pop
inc
jmp
ret
mov
loop
adc
mov
mov
push
cmp
setbe
pop
add
sbb
mov
ror
icebp
jg
ljmp
ja
mov
sahf
mov
xor
filds
popf
rcl
lea
out
inc
mov
mov
imul
mov
loopne
pop
lods
mov
nop
cmpsb
pop
xor
jg
daa
add
lcall
inc
scas
dec
add
mov
pop
mov
cli
mov
pop
sarl
decl
aas
loopne
dec
std
in
push
pusha
negb
push
sti
stos
jb
popf
outsl
xor
mov
iret
sbb
js
xchg
add
pop
push
data16
sti
xchg
addr16
jge
adc
aas
and
sub
xchg
push
cmp
cmp
push
mov
jg
jo
stos
or
mov
or
into
into
cmp
pop
test
js
arpl
lock
jg
pop
jg
xorl
cltd
sbb
addr16
lods
shlb
lcall
and
mov
jnp
loopne
xor
mov
adc
or
dec
es
incl
jl
pop
pop
xor
mov
das
je
jbe
jp
push
call
je
adc
shlb
ja
fadd
cmp
inc
faddl
xchg
jae
xchg
mov
dec
push
enter
pushl
add
pop
stos
and
push
sub
fdivrs
mov
mov
test
decl
push
xor
shr
adc
lret
out
loop
jbe
inc
jl
mov
ud0
jmp
xchg
sub
dec
jp
lds
popa
jo
mov
mov
mov
call
enter
mov
sti
int3
imul
stc
jbe
cmp
cmp
mov
decl
mulb
mov
mov
push
in
xor
pushf
cmc
popf
fisubl
add
xor
sbb
repnz
lea
mov
cmp
jmp
sub
push
sbb
shrl
sbb
stos
test
rolb
ljmp
fstl
outsl
or
rcll
adc
outsl
pop
arpl
sub
jmp
mov
jbe
pushf
xor
pushf
arpl
jno
clc
dec
dec
dec
loope
add
jmp
and
pop
or
and
jmp
adc
and
sub
out
mov
sub
jns
sbbb
pop
sub
push
fisttpl
aaa
mov
mov
aaa
jg
jo
mov
mov
loope
sub
pminsw
xchg
das
dec
cmpsb
outsl
xor
pushf
pop
lods
mov
cwtl
pop
xchg
out
incl
pop
daa
mov
adc
push
mov
cs
pushf
int
adc
pushl
sbb
cmc
xchg
sahf
mov
lret
jbe
mov
pop
fs
lcall
shll
rolb
adc
xor
or
mov
clc
cmp
imul
mov
decl
lds
stos
cmp
ljmp
out
shrb
cli
pop
jns
inc
rorb
ret
sahf
insb
mov
int
stos
outsb
mov
es
xor
scas
sub
add
mov
jmp
aas
out
leave
or
mull
fwait
imul
mov
jg
lds
push
orb
ret
or
call
loop
ljmp
mov
mov
outsl
scas
push
push
hlt
mov
icebp
jp
rolb
adc
mov
cltd
fistpl
je
lods
mov
jae
pop
test
iret
mov
jle
adc
ljmp
lcall
data16
out
daa
jp
push
or
jg
insl
es
sub
push
notb
pop
imul
adc
xorb
test
imull
cwtl
dec
scas
ljmp
pushl
jge
iret
aaa
call
push
adc
xchg
inc
out
pop
lods
jne
add
call
xchg
and
mov
jb
mov
mov
sahf
popa
aad
jmp
outsb
push
add
push
mov
ja
pop
sub
adc
jne
pushf
xor
lods
adc
icebp
jg
leave
lret
add
push
in
shr
dec
xchg
decl
clc
pop
cmpsl
out
das
mov
lret
lcall
int3
sbb
fbstp
dec
ret
xor
push
out
addr16
enter
shrb
jge
aad
jb
daa
inc
adc
push
adc
pop
lods
fisttpl
dec
sub
leave
mov
inc
mov
lods
or
aam
lcall
test
mov
out
cld
xchg
mov
dec
sub
mov
inc
and
scas
rcll
push
aas
push
test
scas
adc
or
in
test
insb
jmp
and
imul
dec
pop
scas
fsubp
pop
push
and
inc
xchg
cmc
mov
sbb
push
mov
ret
pop
dec
pop
adc
cli
incl
mov
pop
mov
scas
divb
lods
fisubrl
mov
ret
decl
mov
and
inc
pushf
ficomps
in
or
dec
jno
in
cmc
sbb
mov
repnz
cld
incl
out
mov
test
and
or
sbb
in
sbb
lcall
pop
xor
mov
mov
jnp
out
shrl
lret
push
mov
lods
and
fildll
pop
inc
pop
test
sahf
cmp
ljmp
repnz
ret
lcall
push
add
xor
inc
insl
and
daa
xchg
mov
pop
push
test
jb
inc
fldl2e
mov
lcall
xchg
movsl
fidivs
dec
jo
pushf
mov
sub
jnp
lods
repnz
testb
ljmp
mov
jmp
xchg
inc
inc
dec
add
std
in
cld
mov
jmp
or
xchg
into
cmp
or
mov
inc
mov
scas
or
mov
push
sar
lcall
adc
push
imul
insb
clc
jg
addr16
pop
cmp
and
push
shrb
jno
incl
lret
pop
xchg
stos
imul
lds
test
call
fwait
dec
adc
stos
jmp
ja
and
mov
mov
jnp
sbb
enter
mov
aam
jmp
push
mov
push
fistps
into
ret
cmc
mov
stc
popf
fcomps
inc
outsb
jge
pop
cmc
sbb
adc
out
stos
jb
add
ljmp
pop
sti
pop
jl
popf
int3
jecxz
into
adcb
inc
pop
in
mov
lods
cli
lock
ljmp
mov
loope
cmovno
adc
lret
movsb
fnstcw
cs
jbe
and
aam
jmp
movb
lret
les
or
xor
pop
paddb
rorb
stos
std
stos
ljmp
sti
push
insb
pop
dec
sbbl
push
pop
inc
aad
decl
scas
sahf
lret
test
enter
fcoml
mov
lcall
out
jo,pn
sub
mov
mov
mov
stos
jg
mov
ljmp
clc
fcomip
lret
loop
push
imul
insb
inc
inc
or
jae
iret
gs
jmp
xchg
rol
mov
push
adc
mov
lcall
mov
stos
das
xchg
aam
jne
dec
sub
dec
repz
mov
jg
loopne
loop
decl
dec
ret
cmpsl
clc
add
jecxz
push
insw
jno
add
enter
mov
adc
cs
mov
sub
mov
sbb
mov
cwtl
outsl
push
fadds
lret
orb
pushf
jmp
call
inc
cmp
mov
jne
outsl
mov
imul
stc
cli
add
mov
imul
cwtl
or
mov
push
pop
mov
out
es
leave
cli
int3
gs
mov
es
sub
pop
xlat
orl
jnp
movsb
adc
sbb
push
in
or
add
pushl
fidivs
data16
test
adc
aaa
cld
fwait
push
cltd
and
pop
and
in
or
adc
jg
sbb
call
xor
cli
iret
and
mov
sub
sub
push
cmp
repnz
mov
xchg
inc
jne
push
dec
mov
xor
inc
decl
inc
in
push
jno
push
nop
pop
dec
aaa
mov
mov
sub
xadd
out
decl
clc
lock
imul
push
push
lds
packuswb
movsl
ret
and
int3
mov
shll
jge
xchg
out
mov
or
pushl
lcall
sub
jl
lods
push
cmp
inc
pop
sbb
xchg
aad
xor
call
fnstcw
adc
adc
pop
in
iret
movsb
xor
inc
sub
sbb
incl
dec
xor
sbb
js
mov
and
or
test
ljmp
sub
icebp
adc
jae
out
lcall
cmp
jg
movsl
sbb
call
add
mov
bound
and
cmpl
in
cmp
fs
sub
out
add
inc
mov
xchg
push
out
bound
xchg
jp
lods
mov
pop
adc
std
pushl
pop
xchg
push
xor
shll
stos
test
mov
pushf
pop
dec
adc
incl
cld
pop
mov
popa
mov
insl
jp
dec
pop
in
xor
fcomip
mov
xchg
out
sbb
mov
hlt
cmp
gs
dec
jb
dec
cmpsb
cmp
aad
or
incl
adc
mov
add
out
test
xor
clc
or
dec
ljmp
or
sub
mull
shll
cwtl
pop
movsl
cmp
lret
add
xorl
in
dec
cmp
out
push
sub
test
add
loope
xorl
shll
push
push
mov
jl
das
stos
daa
movsl
aas
add
adc
xlat
lods
jl,pt
push
dec
repz
mov
cmp
pop
hlt
jmp
in
adc
ret
mov
inc
mov
into
jecxz
pop
jmp
xchg
jnp
jge
sahf
loope
rcl
cmp
push
mov
and
mov
insb
clc
icebp
pop
shlb
popa
jmp
js
add
jns
in
clc
xchg
xor
aas
push
dec
loop
movb
call
and
repz
pop
xchg
push
xor
out
inc
imul
add
jg
enter
cmp
cmp
incl
rolb
ja
sbb
and
popf
mov
inc
mov
mov
dec
jno
sub
cmp
gs
push
dec
popa
outsb
into
call
pop
ret
ja
daa
dec
inc
pop
dec
and
xchg
std
inc
mov
incl
jg
mov
push
cli
push
lret
adc
sub
push
sarl
in
dec
aas
xchg
dec
push
push
push
divl
call
mov
pop
insb
jge
pop
imul
mov
jmp
call
sub
int
hlt
in
and
fs
scas
sti
mov
xchg
mov
aaa
stos
pop
out
and
ljmp
testl
out
loop
incl
repnz
clc
dec
cmp
mov
or
push
in
out
out
dec
or
arpl
ficomps
int3
test
push
dec
sbb
dec
ret
mov
mov
jbe
es
jnp
gs
pushl
popf
pop
scas
fidivrl
jmp
jp
sbb
pop
dec
adc
or
mov
in
add
ja
jge
test
xor
dec
test
aam
sbb
mov
scas
out
ljmp
cmp
shr
ja
sahf
enter
popf
push
adc
or
incl
cmpsb
imul
outsl
out
add
js
fsubrs
sar
out
mov
push
mov
fsts
push
jmp
mov
mov
decl
mov
jmp
movsb
cmpsb
jl
push
aad
jne
xor
inc
in
xor
aas
adc
ljmp
aaa
fs
jl
dec
and
mov
dec
adc
and
jp
sub
sti
aas
std
xor
pop
hlt
pop
lcall
xchg
roll
clc
out
cwtl
pop
loopne
cmp
push
stc
sub
mov
clc
stc
jg
mov
lret
stos
cmp
xchg
stos
sub
pop
insb
push
test
cmp
jle
cwtl
aaa
fwait
jge
in
orb
mov
push
lods
sbb
stos
sub
and
call
test
lds
lods
ljmp
imul
cmc
loope
ja
mov
leave
mov
jp
cwtl
mov
sbb
call
push
in
jmp
aaa
pop
inc
cmp
mov
xor
test
es
jbe
mov
mov
out
mov
lcall
lcall
testb
jle
add
aad
or
sub
jbe
sub
shll
std
mov
adc
ljmp
push
imul
fbld
mov
and
push
inc
sbb
lahf
icebp
mov
add
push
mov
cmp
mov
mov
in
jg
hlt
scas
ret
sbbb
mov
movsl
push
jmp
ljmp
jae
mov
stos
or
cmp
cmp
inc
cmpsb
xorb
shrl
lds
ljmp
xchg
cli
shrl
push
ds
daa
sbb
xchg
outsl
clc
jg
cmp
pop
test
push
lret
mov
mov
jl
cmpsl
shl
and
xchg
leave
loopne
out
ds
jmp
ja
mov
mov
or
sub
and
outsb
shlb
cmpsb
popa
data16
pushl
pop
dec
lret
imul
dec
orl
or
test
std
jg
ret
pop
ja
add
int3
lock
cmpsb
inc
arpl
pop
mov
adc
imul
push
adc
insb
icebp
jbe
std
pop
mov
xor
jo
stos
lret
int3
dec
push
hlt
jg
sub
jne
add
mov
inc
shlb
inc
fs
aaa
and
cwtl
cmp
bound
decl
adc
jmp
les
pop
dec
mov
fists
pop
ja
mov
lods
sbb
decl
push
pop
jmp
aaa
std
fdivrl
imul
into
data16
push
xchg
mov
push
insl
sarb
inc
pop
decl
test
lea
insl
inc
dec
push
mov
jns
or
cmp
dec
idivb
or
inc
cli
xchg
adc
subl
xchg
jns
sub
push
rcll
les
lahf
mov
ss
pushl
call
dec
pop
or
xlat
stos
fmull
iret
mov
mov
lock
pushl
arpl
cmovo
in
ds
cmp
jo
xchg
out
fwait
dec
or
mov
rcr
out
fdivrl
or
cmp
aad
sbb
leave
rcr
in
jmp
test
mov
popf
leave
lret
mov
and
lcall
sub
stos
dec
ret
lcall
in
mov
inc
icebp
in
mov
ret
shrl
or
or
mov
jp
or
sbb
aas
add
jmp
sbb
add
cmp
insb
sbb
test
decl
xor
jg
mov
enter
das
pop
xchg
decl
mov
ret
xlat
addr16
jnp
pop
cld
mov
push
and
fwait
inc
xor
mov
pop
mov
test
mov
aaa
sub
pop
fldcw
jns
das
aas
add
or
push
sub
decl
jbe
mov
sahf
mov
insl
das
aaa
xchg
es
incl
mov
push
pusha
cmp
movsb
push
movsb
jmp
inc
ret
mov
scas
cmc
push
sbb
iret
es
test
sub
pop
loope
sbb
jmp
sti
sbb
test
shl
pusha
pop
test
fcmovnu
icebp
mov
pop
pushf
sub
mov
and
aas
gs
sub
xor
incl
mov
sub
iret
sbb
roll
fwait
jo
cs
fwait
js
sub
fdivrp
mov
pop
xchg
inc
and
rcrb
shr
shl
daa
rcl
test
ljmp
add
pop
int
xor
or
loope
jl
mov
cltd
sbb
sbb
and
jecxz
aaa
std
mov
add
fisttpll
dec
popf
insb
pop
mov
int
adc
xor
cmp
add
jno
std
sub
pop
push
push
outsb
ljmp
cltd
push
xor
xor
mov
push
scas
test
aam
pusha
jns
test
lea
fnstsw
mov
pop
xor
push
hlt
pushl
cld
call
out
xrelease
cmp
sub
popf
jns
lahf
iret
dec
jg
inc
mov
sub
daa
div
outsb
pop
pop
das
mov
push
mov
cli
ret
repnz
decl
mov
out
shrl
dec
dec
pop
xchg
mov
es
push
jnp
repz
ljmp
test
in
mov
mov
aam
pop
and
shrb
lcall
xchg
cs
and
movsb
jecxz
arpl
mov
call
adc
test
outsl
sahf
movsb
fstl
and
clc
and
loop
dec
adc
clc
xchg
call
mov
xor
vshufps
jb
push
pop
lret
xchg
push
xor
mov
jae
dec
lret
mov
cmp
lods
xchg
or
xor
pop
aaa
xchg
mov
jmp
cmp
decl
mov
scas
mov
ds
aad
mov
in
adc
jns
cmp
cmpsl
rorl
or
jecxz
adc
add
fwait
orl
jg
pop
incl
leave
inc
in
and
and
push
add
mov
cmc
test
ljmp
popf
cli
push
arpl
cmp
dec
jl,pn
push
sti
fistpll
mov
ja
sar
lcall
int
pop
xchg
enter
mov
mov
inc
addl
imul
rcrb
pushl
addl
push
mov
sub
jae
scas
add
movsb
lock
dec
inc
pop
xchg
fbld
mov
out
data16
and
or
dec
movsb
addl
scas
mov
inc
pop
pushf
and
dec
cmp
addb
cmc
adc
mov
frstor
or
stc
xor
movsb
pop
sbb
decl
sub
adc
loope
lcall
in
aaa
fwait
mov
lcall
ljmp
fcompl
out
sub
dec
orb
ljmp
pop
mov
call
cmp
shl
pop
daa
pop
hlt
xchg
jmp
daa
fcomps
lahf
inc
mov
aad
incb
xor
mov
adc
ja
rcrl
and
dec
cmp
mov
int3
pop
mov
test
cmpsl
repz
jg
or
test
lea
mov
cmp
jp
in
jg
lock
pusha
xchg
adc
sub
aad
mov
xor
loope
mov
imul
push
sub
loopne
push
lds
pop
mov
clc
scas
xor
stos
sub
mov
adc
outsl
movb
dec
in
or
pop
lcall
cmp
sbb
inc
xor
jo
jae
leave
push
idiv
cli
gs
es
lret
inc
int
incb
cmp
xor
push
xor
mov
pop
jne
fisttpll
cmp
add
das
repz
out
push
xor
mov
jnp,pt
fildll
xchg
cmp
xchg
cli
pop
push
lcall
ljmp
mov
or
xchg
in
xchg
subb
inc
stc
mov
in
or
jl
stc
out
je,pt
push
push
das
mov
repz
lods
mov
mov
cmc
cmpsl
push
mov
push
xchg
into
lock
ret
cmp
ret
xchg
add
xor
lcall
roll
xchg
mov
fs
mov
xchg
js
mov
jg
adc
or
aaa
pop
outsl
dec
pop
fisubrl
xchg
push
mov
imul
lcall
sahf
jg
mov
add
into
add
test
sbb
and
or
stos
pushf
inc
icebp
push
lea
mov
push
mov
mov
jmp
cmpsb
dec
stos
call
repnz
lods
xchg
mov
movsb
lock
mov
cmp
cwtl
hlt
test
inc
pop
mov
xor
repz
in
stc
icebp
sub
in
inc
xor
incl
adc
popf
mov
es
ret
or
mov
mov
aas
mov
icebp
jl
mov
test
cmp
enter
mov
add
mov
cmpsb
dec
enter
ljmp
orb
xchg
lret
stos
dec
mov
jl
dec
das
loopne
mov
add
xchg
mov
jmp
xchg
out
outsb
sahf
pop
and
cmpsl
dec
loop
pop
fnstcw
iret
bound
xor
cli
dec
dec
push
or
mov
inc
add
fldenv
sbbl
sarb
call
pop
cmpsb
jae
push
clc
jnp
bound
ljmp
push
jg
mov
cmpsb
lahf
pop
cmp
imul
mov
mov
dec
stc
call
in
jge
pop
xchg
or
sub
jmp
pop
mov
sbb
in
push
cmpsb
mov
jg
mov
sub
lods
push
icebp
jns
xchg
int3
xor
cmp
inc
std
ljmp
jns
mov
out
cs
test
fwait
test
and
jne
popf
incl
mov
xchg
cwtl
cmp
scas
mov
outsb
cmp
pop
out
insb
out
mov
adc
jo
cltd
lds
pop
cwtl
icebp
mov
adcb
mov
dec
shlb
cmp
ret
cli
testb
inc
cwtl
xchg
sbb
es
out
out
jns
add
cli
mov
sahf
lea
jp
sbb
sub
lcall
jge
xor
inc
xor
call
ja
add
lods
cs
or
jle
es
pushl
std
lcall
cmp
inc
and
push
and
iret
add
out
mov
test
inc
test
push
fsubrs
mov
gs
mov
jb
xchg
out
jb
mov
ja
lcall
and
sub
push
and
mov
jmp
adc
insb
loope
xor
xor
ljmp
gs
jae
ret
jecxz
or
and
in
lods
jle
xchg
mov
leavew
inc
call
rcrb
fwait
in
outsb
insl
dec
bound
enter
stos
stc
mov
and
xor
jb
or
mov
sub
rclb
xchg
incl
test
add
popf
dec
pop
insl
xchg
or
lcall
decl
bound
jbe
cs
adc
mov
das
outsl
enter
std
sbb
cmp
dec
xchg
das
std
ficomps
xor
sbb
and
fnstsw
sub
sti
daa
mov
sbb
cld
dec
repz
pop
lods
in
xlat
add
ljmp
sti
sbb
and
push
mov
push
cmp
sbbb
out
cs
xor
outsb
fistl
fs
inc
dec
out
sub
add
dec
and
xchg
dec
aaa
mov
sub
aad
out
or
cmpsl
sarl
pop
insl
js
call
sub
stos
sahf
icebp
jmp
cs
cmp
sub
dec
in
dec
fsubl
call
call
dec
push
pop
pusha
mov
and
and
fsubrs
push
sbb
ljmp
push
sbb
xchg
shlb
aad
inc
pop
in
cmp
xchg
cmp
outsl
out
fsubl
push
sbb
adcb
imulb
adcb
push
pop
cltd
xchg
outsb
jno
lcall
ljmp
stos
scas
outsb
lret
jnp
and
mov
data16
jnp
arpl
jmp
mov
xchg
ret
xor
mov
inc
fldt
push
push
dec
mov
rcrl
pop
rorb
loop
outsl
fsubrl
sti
outsb
push
xchg
or
ljmp
fistps
sbb
push
pop
std
push
xchg
int
or
shrl
add
pop
mov
push
ljmp
add
sbb
jge
sub
xchg
push
cmp
mov
push
cld
pushl
ljmp
pop
sbb
jae
rorb
or
mov
rol
fcomip
clc
push
sbb
test
js
idivl
xor
adc
sbb
addr16
out
movsb
stc
imul
jge
sub
imul
push
add
arpl
rcrb
lret
ljmp
xchg
jmp
cmc
mov
lods
sub
xchg
hlt
rorb
int
icebp
jmp
and
xchg
shl
shll
lret
decl
call
mov
mov
cmp
mov
xchg
rcl
jnp
cmpsl
lds
test
call
mov
add
lods
xor
out
shll
jbe
sbb
popa
test
mov
pop
jp
scas
in
jp
dec
jmp
jg
ljmp
call
push
movsl
adc
outsl
ret
inc
out
subb
adc
adc
roll
jg
into
cmpsl
js
out
pop
xlat
xor
into
and
pusha
mov
adc
jns
jecxz
cmp
dec
xchg
insl
jno
test
xor
cld
sbb
add
nop
cmp
fwait
adc
jnp
or
mov
dec
cmp
data16
xchg
xchg
mov
test
incl
ljmp
ret
mov
mov
loopne
jo
push
call
fisubrl
push
xchg
into
inc
sub
sbb
fs
or
popa
ret
hlt
xchg
out
mov
fwait
je
lcall
pop
mov
sar
jmp
mov
es
or
int
insb
scas
push
into
push
test
jne
cmp
in
rorl
cs
std
call
adc
lock
decl
xchg
out
lahf
adc
xor
mov
pop
sbb
dec
pushf
ret
inc
mov
fdivrp
ljmp
leave
adc
xor
scas
xchg
mov
or
xchg
mov
mov
insl
sbb
mov
jecxz
into
sbb
fs
insb
jae
cli
out
jnp
xchg
inc
dec
adc
cli
push
std
decl
cs
jp
jl
push
mov
mov
cmp
into
hlt
mov
out
xchg
iret
mov
mov
mov
pop
sti
pop
js
ret
scas
inc
jb
or
adcb
scas
aas
add
pop
movsl
das
mov
lods
and
inc
into
push
ljmp
ljmp
mov
xchg
push
mulb
inc
mov
jp
cs
jns
fwait
xor
arpl
in
push
pop
lcall
inc
cmp
insb
fsubr
jl
fisubl
ljmp
mov
hlt
jle
dec
daa
out
jg
aam
shrb
adc
insb
xchg
or
aam
jecxz
mov
rorl
cmpl
paddd
ds
sbb
jle
shll
in
sub
cmp
cmpsb
xor
stos
lcall
lcall
lods
lret
int3
nop
loope
cmp
sti
jns
call
sub
jg
repz
fldcw
mov
add
push
ds
ljmp
or
sub
mov
xorb
mov
push
ljmp
orl
cmp
ljmp
rcrb
inc
sti
add
sub
pop
cmp
sub
ret
mov
lods
dec
jl
test
test
push
dec
jle
push
inc
push
push
push
ja
stc
shlb
inc
mov
pop
xchg
in
adc
push
jg
ja
sub
pop
cmc
pushf
hlt
xchg
inc
mov
jge
push
insl
repz
sahf
cli
inc
addr16
stos
lret
int3
cmp
jl
fiaddl
std
movsb
sbb
shrl
sub
cld
xor
ss
jl
loopne
jg
fnstenv
roll
xor
mov
inc
adc
shll
das
jle
xorl
aad
inc
xchg
mov
pusha
pop
sar
mov
lahf
sbb
jle
fs
xor
test
call
jge
in
adc
cmp
inc
pop
aad
loopne
scas
add
xor
mov
pop
jb
or
dec
adc
mov
xchg
pop
les
push
and
lcall
rorl
fwait
sbb
adc
test
lds
call
mov
dec
cmpsl
cmp
andb
mov
in
jl
loop
sbb
stc
cmp
pop
insl
scas
mov
jae
lahf
sbb
jmp
and
mov
mov
mov
inc
stos
inc
iret
lret
insb
lcall
mov
cs
jb
in
incb
fimuls
jle
mov
jmp
pop
cli
sbb
lds
inc
push
push
push
sub
push
js
mov
lret
push
test
and
decl
sbbl
or
jnp
cmp
mov
xchg
js
jl
pop
dec
dec
je
sti
pop
cmp
popa
xor
stos
or
mov
xchg
push
mov
cli
jg
nop
mov
mov
jge
fwait
cmp
inc
movsb
mov
add
mov
pushl
sub
repnz
lret
pop
les
inc
dec
ret
cld
into
mov
fnstsw
pushf
cmc
cmp
fmuls
xlat
shll
mov
and
add
mov
std
lods
inc
mov
pushl
xchg
jbe
mov
inc
mov
push
insb
xor
xor
add
or
mov
shrl
add
shr
mov
mov
fcmovnbe
mov
jne
int
lea
xor
int
sub
mov
cwtl
dec
decl
mov
jmp
enter
cld
ljmp
xlat
xchg
shlb
fs
push
movsb
mov
inc
aad
frstor
movsl
das
mov
mov
inc
rcrl
jg
clc
test
xlat
aaa
sub
and
data16
mov
div
or
lcall
ja
in
add
sbb
iret
dec
dec
inc
int
xlat
data16
lods
lcall
gs
adc
mov
push
lret
push
dec
fistpll
xor
in
xchg
mov
fsubs
mov
jp
mov
and
push
xchg
lret
repnz
cmp
decl
in
imul
hlt
stos
scas
mov
push
jmp
dec
cmp
push
clc
cwtl
or
lcall
dec
addr16
jb
fs
inc
mov
fisttpl
xlat
and
pushf
fidivrs
fwait
outsb
push
testl
incl
cmp
stos
outsl
and
or
adc
icebp
adc
cmp
pushl
dec
dec
xor
mov
shll
fists
ja
cli
sub
lock
frstor
cmpsb
incl
mov
pop
fbstp
pop
mov
sub
mov
jg
incl
push
scas
mov
icebp
push
clc
aam
popf
adc
les
xor
jl
mov
mov
push
add
mov
loopne
addr16
cs
cmp
sbb
jg
sub
in
ret
mov
inc
pop
sub
xchg
sbb
xor
inc
popa
pop
or
incl
cmc
leave
or
cmpsb
loope
lock
xchg
int
lret
bswap
nop
pop
jg
add
lret
sbb
mov
rcll
out
push
cld
mov
dec
ret
ficomps
lods
mov
or
sbb
insl
push
cmpsl
jmp
push
movsl
mov
push
jl
mov
xor
repz
jmp
cmp
adc
clc
cld
inc
sub
mov
dec
shlb
ljmp
lcall
test
mov
stos
int3
sar
decl
xlat
mov
jmp
enter
mov
mov
or
les
call
inc
in
add
adc
mov
lds
or
nop
push
xor
sti
add
andl
mov
out
xchg
call
lahf
push
adc
dec
enter
sub
sarl
xchg
aam
loopne
testb
das
out
cmp
xchg
xchg
cmpsl
inc
mov
loopne
int
xchg
xchg
or
push
jp
cmpsb
cmpsb
fbstp
ret
andb
mov
sbb
xor
push
sub
jnp
ljmp
ficoml
fwait
out
pop
mov
stos
push
ret
mov
push
sti
adc
test
incl
lods
das
arpl
into
inc
popf
jns
insb
popf
sti
loopne
addr16
and
aad
cmp
lcall
lock
push
fstps
ss
imul
sub
cli
jmp
or
loop
xchg
jb
mov
jbe
xor
cmp
decl
push
repnz
dec
adc
fwait
in
in
jge
popa
mov
cmp
jg
inc
mov
xchg
popf
dec
call
in
dec
mov
and
into
ds
push
jmp
aaa
mov
jmp
sub
and
jo
dec
xchg
mov
sbb
cmpsl
imul
dec
pop
or
xor
in
mov
test
xchg
hlt
inc
add
mov
xor
cld
jmp
sub
pop
mov
push
mov
icebp
imul
fucomi
mov
mov
or
loopne
sbb
mov
or
std
int3
cwtl
pop
sbb
xor
andl
dec
lcall
sbb
mov
sub
sbb
or
aaa
decl
pusha
mov
inc
sub
insl
xchg
cmpsb
rcrb
mov
xor
insb
mov
shll
iret
jp
xchg
loop
call
insb
mov
decl
jecxz
push
js
or
mov
inc
mov
sbb
dec
xchg
lcall
mov
enter
adc
les
cltd
jo
mov
sbb
int3
pop
imul
movsb
mov
ja
adc
inc
mov
pop
mov
pop
mov
test
scas
scas
call
in
sub
pop
into
cmpsl
xor
lock
add
push
xor
cltd
push
test
enter
jnp
fiaddl
xchg
loopne
loope
xchg
mov
and
sub
jecxz
and
ljmp
pop
mov
mov
jecxz
cmc
xor
pop
inc
sub
lret
aam
fimuls
repz
inc
jl
and
mov
jge
out
cmp
ja
ljmp
adc
jle
testb
fnsave
call
inc
mov
stos
cmpsb
imul
cmp
stc
bound
push
adc
incl
out
loopne
nop
loope
or
out
inc
add
sub
mov
lds
mov
jmp
imulb
and
or
mov
jecxz
mov
sub
jae
ljmp
fimuls
vcvtss2sd
mov
hlt
push
int
test
xchg
sub
push
incl
cwtl
xchg
adc
xchg
jo
push
int
sbb
jp
out
test
or
decl
icebp
push
pop
repz
push
or
cs
xchg
ljmp
fcmovbe
sbb
pop
cmp
sbbb
lret
push
roll
push
mov
test
std
jl
je
aad
rcrl
enter
or
insb
xor
mov
push
call
dec
add
arpl
mov
fldcw
mov
push
pop
and
push
xorb
call
pushf
arpl
push
sub
scas
rcll
jnp
dec
adc
xchg
pushf
inc
mov
jo
sub
mov
adc
xchg
inc
xchg
xchg
cmpsl
ss
cmpsb
or
mov
sahf
test
imul
and
incl
stos
push
into
jle
nop
les
lahf
sbb
repz
xchg
mov
movsl
dec
mov
lcall
movsl
pop
sub
cmp
add
movsb
jge
in
pop
stos
scas
in
jae
inc
inc
sbb
push
add
jl
adc
mov
pop
mov
dec
cmp
mov
sub
mov
sbb
rcrb
cld
ss
jno
loopne
xchg
push
fwait
or
fs
adc
pop
loopne
jmp
subl
mov
outsl
jmp
insl
cs
and
fdivs
mov
mov
aam
arpl
add
push
mov
and
mov
and
jg
in
enter
pop
and
in
roll
clc
xor
and
adc
mov
xor
incl
mov
shrl
fidivrs
pop
je
xchg
mov
shrl
mov
mov
adc
scas
xlat
and
inc
sbb
ucomiss
xchg
cld
lret
jo
jnp
sti
cmc
mov
pushl
jb
adc
in
rorb
push
cld
push
mov
pop
emms
scas
push
pop
mov
movsb
pop
xchg
mov
xor
jl
cli
mov
int3
cs
bswap
icebp
sub
push
cmpsl
jno
nop
sub
sti
ja
mov
je
inc
sub
neg
roll
cmp
lahf
mov
in
lahf
inc
incl
fmull
adc
or
jle
pop
add
cmp
lahf
mov
decl
jns
stos
in
or
lock
lahf
jmp
pop
or
fwait
lcall
adc
and
mov
inc
lcall
repnz
test
pop
icebp
sahf
or
ljmp
push
pop
mov
ljmp
push
xor
xchg
out
mov
jmp
call
outsl
mov
xchg
jns
pusha
imul
jp
insl
cld
das
adc
xchg
cmp
pop
mov
inc
mov
repz
xchg
leave
and
in
inc
mov
call
add
cmp
test
icebp
push
mov
enter
mov
lcall
loop
out
sub
loopne
fcomp
xchg
in
jl
pop
sub
loope
inc
add
in
dec
cmpsb
leave
cmp
decl
gs
push
mov
push
mov
push
hlt
adc
inc
inc
dec
jnp
xchg
jp
ss
jmp
outsl
stos
inc
mov
jg
pushf
rol
icebp
push
stos
adc
insb
jmp
or
cmp
and
inc
imull
iret
inc
mov
test
movsb
lret
push
and
jmp
out
lret
mov
push
add
es
in
cltd
mov
sahf
add
push
decl
jmp
cmp
xchg
js
mov
push
in
cmp
push
mov
fwait
push
or
pop
add
incl
cmp
xchg
ds
fnsave
icebp
jle
xor
pop
dec
jae
shlb
cltd
inc
addl
mov
adc
pop
cltd
in
shl
cmpsb
mov
scas
cmp
adc
push
mov
aaa
mov
push
hlt
jg
pop
cmp
into
push
dec
js
add
inc
jmp
jle
mov
jl
jns
test
xor
aas
inc
aaa
rcl
gs
call
add
xlat
or
bound
lcall
cmp
jns
xchg
inc
adc
lcall
mov
fcmovbe
jg
adc
xchg
fadds
imul
repnz
push
loopne
call
insb
jg
popf
sub
push
xchg
outsb
lret
iret
pop
and
mov
fsubrs
ret
lods
push
stos
mov
add
inc
cmpsb
xor
mov
test
test
test
push
mov
or
iret
dec
ljmp
sub
out
lock
nop
jle
jno
mov
xchg
adc
dec
dec
xchg
inc
sbb
or
lods
push
call
xchg
in
sti
mov
pop
pop
jg
mov
ljmp
cmp
incl
cmc
cmp
dec
out
xchg
sbb
fisubrl
cmp
jmp
adc
daa
xor
arpl
jae
adc
imull
dec
cmp
pop
insb
push
call
scas
aaa
mov
inc
xchg
scas
xor
push
pop
sub
jle
and
xchg
cld
decl
pop
clc
adc
mov
pop
ret
dec
and
mov
sub
cmp
inc
or
sub
outsl
icebp
shll
mov
lods
jmp
cmpsb
aas
iret
inc
xchg
outsl
mov
xor
xlat
int3
aaa
aas
adc
jae
jecxz
test
inc
in
loop
lock
ljmp
fadd
addps
sti
out
jbe
add
out
jecxz
pcmpeqd
repz
lcall
fdivl
jbe
dec
and
aas
pushl
cmp
repnz
and
pusha
mov
jecxz
pop
push
mov
addr16
mov
add
push
aaa
cld
inc
jbe
mov
sub
mov
or
enter
in
sbb
pop
xor
out
outsl
in
jmp
adc
fstps
ja
mov
sti
pop
jecxz
add
aad
push
inc
xchg
hlt
ror
sahf
ret
mov
jp
movsb
pop
insl
lock
aam
adc
cli
xchg
idiv
jmp
jo
shlb
jae
rcpps
lcall
push
pushf
sbb
cmp
lock
jno
out
arpl
je
outsb
or
pushl
pop
xor
scas
in
stos
aaa
int
push
push
stos
out
push
aad
add
decl
lock
jns
aam
pop
push
cmpsl
mov
jg
call
pop
add
sub
pop
cmp
push
ja
test
imul
loop
jne
xchg
jmp
arpl
adcl
push
mov
shlb
push
jne
decl
lcall
int
insb
fwait
push
xor
jecxz
jmp
inc
bound
inc
mov
das
cmp
dec
push
jnp
stos
push
je
jns
ljmp
add
or
es
fisubrl
mov
or
mov
mov
loope
iret
lret
ret
inc
xchg
sar
mov
shr
rcrl
jb
shrb
cmpsb
ja
incl
lahf
addb
sub
mov
data16
add
cltd
xor
fstpt
ljmp
push
jns
inc
cmp
jl
cli
aaa
jecxz
stos
dec
jle
rcl
xchg
into
pop
and
pop
push
push
xchg
decl
stos
jb
jmp
add
bnd
push
sbb
fdivl
je
decl
xor
jo
jl
dec
cmpsb
mov
out
test
cmc
incl
cs
mov
js
es
or
cltd
mov
cmp
push
aad
or
pop
clc
lahf
xchg
mov
and
sbb
dec
call
call
popa
sbb
push
icebp
push
lret
stc
mov
lds
psadbw
push
outsl
cli
ljmp
push
fidivrs
insl
mov
in
das
sub
insl
xor
xchg
pop
jmp
ljmp
hlt
xchg
stc
sub
rcl
mov
add
les
mull
inc
push
inc
dec
out
fbld
je
sub
icebp
inc
fisubrs
stc
dec
mov
mov
ljmp
dec
enter
shlb
pop
bound
or
lods
sub
xchg
imul
lcall
and
mov
fwait
out
mov
shrl
dec
mov
inc
into
pushf
cmc
inc
cli
jb
pushl
bound
mov
aaa
fistpl
in
outsb
into
pop
fisttpll
jmp
iret
js
jg
jno
cmpsl
aaa
lret
push
push
mov
hlt
lea
ret
js
add
add
outsl
popl
cmpsl
jl
and
aad
cs
and
dec
nop
lock
and
push
xchg
or
mov
inc
xlat
add
jp
bound
mov
addb
inc
jae
mov
mov
bound
imul
pop
mov
add
imul
fisubrs
insb
or
ds
or
sbb
test
pop
out
test
inc
and
nop
shrb
inc
clc
xor
add
imul
insb
push
pop
add
adc
pop
sti
sarb
faddl
and
inc
imul
sbb
dec
adc
xor
gs
pop
and
push
xchg
push
outsl
outsl
insb
push
push
jo
push
outsb
popa
jo
push
insl
pop
es
rorl
sub
push
add
popa
out
or
dec
dec
jne
js
or
pop
inc
scas
ret
add
popa
jno
add
adc
cmp
ss
inc
jns
push
adc
push
imul
fsub
sub
dec
ljmp
dec
ss
pusha
pop
add
or
adc
and
rcrl
dec
xchg
jo
or
or
repnz
data16
loopne
sub
jle
test
add
lcall
sub
inc
or
mov
or
cmpl
imul
pop
dec
inc
or
jae
cli
arpl
mov
ret
adc
inc
cmp
mov
fisubs
mov
dec
adc
fiadds
inc
insb
jne
addl
xchg
xchg
test
add
clc
ss
imul
dec
xorb
fldcw
inc
push
fildl
push
addl
sub
mov
mov
popa
andl
push
pop
jb
xchg
and
loopne
in
or
cmp
xchg
adc
xchg
inc
ret
push
push
push
hlt
add
popw
fs
inc
jecxz
das
sarl
dec
cmp
imul
int3
adc
push
insb
xor
jo
xor
inc
or
dec
lods
inc
xchg
add
addr16
push
pop
xor
pop
pop
mov
inc
popa
sbb
xchg
adc
pop
bound
outsl
leave
mov
xor
arpl
mov
outsl
adc
xchg
fdiv
mov
and
test
shlb
fisubrs
popa
inc
fidivrl
or
pop
or
fcmovu
xchg
popw
push
shlb
push
mov
fcmovu
mov
inc
xchg
popa
and
jmp
inc
push
inc
in
push
dec
jae
pushf
inc
or
fistpl
inc
dec
or
inc
dec
push
cmp
mov
push
test
lahf
or
fs
js
std
xchg
lods
xor
fnstsw
ljmp
inc
sbb
rcl
inc
jg
pop
push
rcl
adc
ja
in
mov
pop
and
and
ret
sbb
popa
es
jp
mov
loope
push
jb
sbb
jg
sbb
rorb
push
and
push
inc
xchg
mov
outsl
jns
int
dec
rcrb
add
sbb
gs
and
jbe
inc
push
pop
aad
mov
jns
add
fwait
xchg
inc
je
push
inc
adc
lods
jmp
out
sti
xlat
addb
push
inc
sbb
shlb
mov
into
mov
adc
jno
addl
insl
adc
or
push
es
mov
mov
loopne
add
push
or
jns
push
push
cmp
and
or
xor
cmp
pop
xchg
or
add
out
ret
pop
aaa
cmp
or
bound
test
inc
dec
pop
dec
and
andb
pushf
push
jne
inc
mov
shlb
adc
fbld
adc
jecxz
dec
xor
mov
lret
inc
xchg
rolb
push
cmc
test
ret
adc
jo
add
addr16
outsl
jg
mov
inc
adc
fisubrs
inc
scas
pop
stc
add
pop
outsb
push
outsl
add
add
sub
pop
pop
jbe
insl
and
movsl
sub
jnp
push
sarb
and
jns
rcrl
shlb
data16
push
and
arpl
sub
sub
mov
add
adc
or
mov
jno
fisubs
push
xorl
imul
xchg
add
dec
jnp
and
jnp
xchg
push
popa
sbb
cmpsl
push
outsb
adc
fs
mov
push
fadds
adcl
dec
fstl
push
je
push
aad
sahf
and
push
outsl
xor
push
fsubs
jb
and
jl
inc
push
or
in
lods
jo
pushf
dec
inc
inc
and
arpl
sbb
pop
inc
imul
shll
sahf
mov
inc
pop
mov
ss
push
inc
insb
jle
clc
popa
dec
aad
call
xor
mov
movsb
jae
out
pushf
jmp
nop
mov
mov
add
lds
inc
mov
push
and
sbb
dec
add
mov
dec
rcr
push
les
movsl
push
movsb
push
out
jnp
push
xor
push
pop
xor
ret
ficomps
shlb
mov
add
imulb
push
push
dec
rorl
adc
push
and
pop
cmp
out
mov
jns
je
insl
dec
outsb
dec
or
jnp
int
loope
ss
sar
pop
add
add
cmpsb
xor
mov
xchg
xor
imul
or
cmpsl
imul
xchg
mov
inc
push
addb
pop
adc
cmp
ds
pushf
sbb
inc
jb
mov
sbb
and
dec
and
jl
outsl
flds
ret
movsb
bound
add
test
out
inc
add
mov
jb
inc
jae
insl
insb
insl
insl
inc
leave
inc
shll
ret
or
dec
imul
cmc
push
sbb
jo
insb
and
adcb
rclb
shlb
push
jl
cs
mov
mov
mov
pop
adc
sbb
push
fsubrl
add
add
or
je
cmpsl
push
movsb
in
mov
out
adc
push
and
es
aad
sbb
jp
sub
outsl
or
adc
rcrb
fisttps
inc
pop
or
inc
mov
or
sub
jmp
push
outsl
adc
aad
test
jb
lods
faddl
add
roll
rcrl
jbe
adc
insb
jl
sbb
add
imul
xlat
push
mov
or
mov
dec
mov
and
rorl
push
sbb
cmp
jg
cwtl
dec
inc
rol
push
adc
push
or
outsb
push
push
mov
cltd
lret
call
xor
jae
pop
push
mov
movsb
pusha
jnp
mov
inc
and
pop
stos
lods
pop
adc
mov
test
mov
and
inc
lds
sbb
and
inc
or
and
or
pusha
enter
xchg
dec
insb
test
test
mov
mov
cs
jbe
pusha
mov
cwtl
push
jno
icebp
add
das
sbb
popa
or
mov
dec
mov
cmpsl
xlat
in
pop
dec
fs
int3
add
lods
sub
bound
iret
fiaddl
push
jns
loop
shl
int
nop
lods
call
fs
jecxz
mov
jnp
or
push
pop
mov
xchg
sub
dec
popf
mov
dec
lea
aam
out
les
add
iret
or
mov
sub
or
add
fucomp
push
push
inc
out
adc
add
sub
or
test
cmc
xchg
dec
push
pop
xchg
testb
out
sahf
popa
or
ror
jne
mov
adc
shrb
jo
add
jae
mov
sub
int
icebp
rcrb
pushf
ret
popf
mov
add
push
add
sub
xor
dec
add
or
jg
mov
or
add
test
inc
imul
xor
pop
lret
pop
in
cmp
add
incl
adcb
sub
add
or
and
and
inc
mov
add
pusha
lods
cmp
pop
dec
pop
add
adc
imul
mul
and
add
and
jb,pn
or
sbb
adc
push
rolb
jge
push
out
inc
cs
adc
fisubl
cmp
rcrb
jb
push
xlat
pusha
dec
xchg
push
lahf
mov
push
out
shl
add
xchg
and
add
test
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
