divb
in
mov
mov
js
inc
add
add
int
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
and
stc
out
aas
mov
test
je
cmp
add
and
jbe
decl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shll
cmp
jge
add
pop
push
push
push
push
xor
mov
push
mov
scas
stos
mov
std
sbb
movl
cmp
pushf
or
jnp
or
push
mov
push
xor
cwtl
pop
jnp
mov
xchg
push
sbb
add
divb
inc
sub
ret
mov
jmp
pushl
sar
insb
jbe
repz
lea
or
lock
dec
test
jg
sbb
xor
adc
push
add
outsb
mov
push
scas
adc
mov
add
inc
jne
sub
sar
mov
je
daa
ret
push
repz
outsl
or
fadd
adc
pushl
mov
or
xor
cwtl
mov
mov
mov
call
pushl
mov
or
insl
adcb
data16
pop
cld
add
pushf
sbb
andl
mov
dec
lock
adc
push
adcb
push
jge
pusha
outsl
adc
mov
mov
fcomps
sub
dec
ret
mov
not
push
jo
or
mov
mov
xor
pop
mov
pop
cmpsl
push
ret
enter
cmp
jae
insb
xchg
push
call
jbe
fcmovnu
add
add
rcrb
outsb
loopne
mov
jecxz
ds
mov
jge
mov
adc
in
add
ja
push
shr
mov
iret
jbe
ret
enter
ja
mov
mov
add
mov
xchg
mov
inc
add
xchg
popa
jmp
mov
mov
xlat
insb
ja
ja
add
and
add
push
mov
sahf
add
push
jnp
mov
aas
fadd
pop
jge
xlat
jae
push
pop
pop
push
jno
jge
push
mov
add
pop
or
push
push
sbb
outsb
or
sub
mov
sbb
enter
add
push
mov
loopne
mov
aaa
ja
inc
pop
bound
inc
mov
adc
inc
lock
push
mov
cmp
push
clc
mov
or
jge
insl
cli
clc
jg
cmp
mov
mov
xor
mov
pop
ret
push
pop
mov
ret
push
pop
jae
jne
xchg
cmp
pop
inc
sub
rclb
or
clc
sub
enter
addb
in
push
mov
in
je
testl
pop
adc
inc
test
add
js
mov
cmp
jg
mov
adc
adc
push
pop
cmp
push
inc
add
fldl
add
outsl
pop
xchg
sbb
pop
cs
pushf
sbb
mov
sub
push
mov
sar
scas
mov
sysexit
lea
push
cmp
ja
adc
sbb
in
lock
cmc
add
push
push
mov
jmp
pop
scas
and
and
jo
push
sbbb
pusha
sahf
lret
or
ret
mov
stc
sub
adc
cmc
cmp
lock
push
std
jle
mov
cmpl
or
push
fsubrp
sub
xor
jge
dec
cmp
add
or
add
pop
cltd
xchg
add
push
ljmp
ret
enter
aaa
cld
sbb
add
push
jne
mov
mov
xor
jbe
mov
out
pop
mov
shll
mov
mov
or
inc
add
adc
lea
mov
jnp
xorb
push
xor
mov
mov
aam
push
cmpsl
mov
cmp
cmp
cmpsl
mov
cli
scas
sub
lea
or
rcr
stos
mov
roll
pusha
jnp
clc
cmp
or
test
jle
cmp
mov
inc
sbb
sahf
mov
pop
loope
add
icebp
sbb
adc
cmp
push
push
mov
pushf
jmp
sub
pop
out
ja
daa
repz
push
sarl
lea
inc
shll
das
xchg
and
pop
sub
nop
or
add
lcall
mov
and
hlt
adcb
mov
or
pop
and
jg
nop
adc
add
xchg
test
mov
mov
adc
shlb
jb
orl
or
or
mov
xor
mov
mov
xorb
fists
adc
dec
call
ficoms
in
movb
fistl
add
push
repz
xchg
xor
push
mov
jge
mov
mov
rcrb
sub
call
mov
push
pop
add
push
cmp
xchg
rorl
sub
add
sub
aad
in
outsb
push
lea
iret
in
pop
cmp
je
es
fdivl
or
testl
cmp
jmp
fdivs
ljmp
jle
aad
lds
into
or
imulb
sbb
ret
addr16
push
dec
adc
pop
repnz
xor
push
push
clc
lock
or
push
or
cmp
lods
sbb
pop
pusha
repz
xchg
fdivrs
dec
es
pop
loopne
mov
les
push
cmp
or
pop
or
and
jp
pop
push
test
bound
pop
push
cmc
mov
addr16
cli
jb,pt
pop
rclb
push
les
sarl
xchg
mov
push
lea
dec
cmp
je
cmp
or
enter
mov
dec
pop
mov
and
mov
jmp
cmp
scas
jp
call
cmp
push
mov
ss
cld
pop
je
and
and
inc
sub
cltd
jmp
lret
aaa
cmp
outsb
or
mov
in
data16
mov
or
cmp
jne
add
xor
jno
cmp
ss
cld
jne
push
push
push
push
pusha
cmc
mov
in
daa
int
mov
or
jo
leave
push
sub
pop
pop
sbb
pop
add
xchg
inc
mov
mov
in
or
push
sub
cmp
pop
imull
adc
pop
or
mov
orb
push
adc
inc
mov
ficoms
xor
pop
call
sbb
jne
xor
push
jl
mov
inc
test
stc
push
or
lock
fisttpll
push
popa
cmp
and
aaa
js
cltd
cmpsl
inc
pop
pop
mov
mov
mov
and
push
stc
rorl
cmp
in
add
mov
out
fsubs
push
decb
push
sbb
sbb
mov
or
add
inc
sbb
mov
mov
ficoml
les
cwtl
jl
push
sbb
mov
add
fcomi
cmpw
jne
shrb
or
jne
mov
jmp
xor
jg
mov
or
lahf
stos
xorl
ljmp
push
add
pop
jp
pop
cmpsl
std
sub
pop
jmp
shr
mov
jg
std
enter
je
add
dec
jmp
mov
mov
movsl
loopne
inc
adc
in
and
push
mov
sub
lret
mov
jmp
lcall
mov
lea
jg
push
push
mov
hlt
or
pop
sbb
mull
fwait
mov
stc
sti
es
sti
pushl
push
mov
in
inc
ja
inc
xorl
push
jp
or
outsl
decb
jmp
repz
cmp
sbb
push
repnz
sub
jno
decl
std
mov
mull
push
mov
dec
add
dec
add
pxor
add
inc
add
ds
ret
je
incl
adc
push
fnstenv
adc
push
lock
cmp
jmp
rclb
and
pop
sbb
pop
icebp
or
loopne
mov
inc
pushf
add
pop
adc
add
pop
cmp
pop
push
xor
pop
jg
push
je
jecxz
ret
push
push
pop
movsb
sub
mov
inc
inc
mov
jbe
push
adc
ds
mov
in
sbb
adc
int3
imul
clc
outsl
lcall
xor
shr
int
or
push
cmp
jbe
jo
mov
dec
adc
sbb
rol
mov
je
or
daa
lods
dec
add
cmp
jge
push
shrb
aas
js
jle
sbb
fbld
sar
incl
cmp
jge
orl
call
push
xchg
pcmpeqb
in
mov
sti
lret
js
cmpb
dec
clc
jne
call
hlt
sub
add
mov
mov
add
cmpsl
test
cmp
testl
jne
push
insl
mov
xchg
or
xor
add
inc
shll
mov
xchg
and
jge
jb
in
mov
xchg
push
xchg
rorl
lds
jmp
sbb
fiadds
pop
mov
je
mov
xor
mov
test
inc
inc
sbbl
mov
ret
ret
xchg
dec
aam
pop
enter
cli
jno
cltd
fadd
mov
ss
push
sub
push
push
xchg
es
push
or
call
xchg
incl
mov
and
movsbl
addb
jg
fdiv
push
popa
add
mov
mov
js
xchg
mov
or
mov
pop
push
xchg
bound
outsb
inc
cld
sub
test
mov
xor
das
je
jo
sbb
pushl
push
out
xchg
mov
adc
scas
xchg
push
push
shrb
inc
jns
push
and
push
dec
sbb
pop
or
jo
fsubl
movsw
fimull
xchg
and
mov
roll
or
subb
jle
adc
mov
fcomps
push
adc
pop
mov
cmp
jmp
pop
push
test
icebp
adc
mov
inc
je
and
fstl
jae
test
and
adc
movsl
push
inc
adc
testb
add
jmp
sub
popa
xchg
ret
loopne
js
add
xchg
sub
sub
sbb
sub
inc
add
sub
daa
out
loopne
or
in
or
mov
adc
xchg
inc
cmp
inc
add
sbb
je
push
jmp
mov
push
ds
hlt
and
notb
add
rcrl
push
mov
mov
cmc
loop
xor
or
dec
jne
push
add
cmp
xor
addl
in
sbb
daa
andb
jg
jbe
push
loopne
adc
in
shr
mov
and
cmpl
push
adc
enter
inc
adc
stc
pop
fdivp
insl
push
inc
shlb
dec
aam
and
jns
push
fcoms
dec
fdivl
fs
out
inc
and
add
lea
sbb
dec
mov
sti
pusha
xor
push
push
aas
push
cld
mov
cmp
mov
sub
popf
cmc
nop
rcrl
lods
rclb
or
nop
fmulp
les
mov
pop
and
test
aaa
xchg
call
inc
mov
test
inc
cmp
jl
jmp
pop
mov
mov
cmpsb
cmpsb
add
add
jmp
add
inc
cwtl
cmp
add
aas
mov
adcl
outsl
pop
sub
pop
push
xchg
outsl
movsb
push
xor
add
push
push
aas
shr
ficompl
hlt
stos
data16
std
loopne
xchg
adc
mov
data16
pop
ret
push
mov
push
mov
test
sbb
xor
inc
inc
jle
cmp
push
ret
mov
or
cmpb
jb
mov
jg
enter
call
cmp
mov
adc
lahf
push
loopne,pn
dec
in
push
mov
mov
sbb
aas
cmp
cmp
xor
push
xor
mov
aas
add
mov
jmp
push
divb
pop
sbb
test
add
push
loope
loopne
movsb
rolb
adc
sub
lds
xor
loopne
dec
sbb
mov
push
sbb
jl
mov
lock
mov
jp
jo
aas
xchg
ret
cmp
jne
jmp
push
inc
or
lea
pop
test
inc
push
xor
push
ds
test
arpl
jmp
pop
inc
pop
ret
cmp
jb
cmp
ja
movzbl
sub
sbb
dec
sahf
out
inc
aaa
popa
push
ret
imul
jbe
push
call
je
add
push
andl
mov
add
insl
jbe
push
pop
push
inc
adc
out
imul
iret
fsubr
mov
push
or
sar
sti
je
cmpl
in
xor
mov
cmp
je
lock
mov
or
mov
cmp
addr16
je
jb
mov
dec
js
inc
add
add
pop
dec
lea
ficomps
dec
or
dec
xor
jge
dec
jp
push
lock
mov
xorb
icebp
xchg
xchg
or
ss
and
sub
or
jne
cmpsb
outsl
jp
cmp
add
out
add
and
xor
xor
cltd
and
pop
dec
cld
andb
call
into
adc
push
add
mov
xchg
push
repnz
fs
add
hlt
jb
into
out
test
or
inc
push
push
cmp
jle
dec
in
test
pop
sub
jmp
das
fadds
or
push
pop
clc
cmp
jne
inc
sub
push
outsb
hlt
cmpb
push
in
mov
hlt
sub
movb
or
jb
or
ja
js
sub
inc
push
sub
jl
or
add
push
bsf
jbe
inc
cld
rorb
mov
adc
sbb
roll
arpl
and
mov
mov
push
stos
mov
fsubs
dec
mov
inc
add
jae
sbb
rclb
jg
sub
pop
shl
add
jmp
pushf
aas
insb
sti
push
movsb
js
and
cmpsb
and
hlt
scas
mov
dec
cmp
js
fs
jne
xor
add
lock
mov
fdivrs
push
pop
jae
mov
jmp
dec
dec
fdivs
xor
cld
je
repnz
mov
push
push
icebp
pusha
rcll
mov
push
add
or
shlb
or
or
push
jmp
inc
jg
or
jge
int
int
add
and
es
sub
sub
int
idivb
jmp
or
jl
or
adc
je
lea
cmp
loopne
sar
pop
lea
cmp
jbe
mov
arpl
fcoml
adc
je
test
jne
inc
add
sub
sahf
mov
gs
add
mov
and
jae
movb
inc
mov
mov
in
push
sub
push
push
push
and
pop
or
dec
and
or
aas
xchg
js
jno
mov
inc
and
push
jmp
inc
sub
out
jae
int3
loope
rorl
sbb
ret
inc
push
lcall
sbb
clc
push
push
push
mov
jo
or
movsl
or
xchg
hlt
mov
rorl
out
mov
mov
add
lret
setne
ret
xchg
adc
sbb
sub
push
ja
popf
nop
pop
sar
mov
sti
mov
mov
jno
roll
sahf
sbb
push
push
adc
cmpsl
ret
push
adc
push
pushf
dec
inc
xchg
lea
sbb
adc
inc
in
pop
mov
jmp
jbe
push
dec
or
data16
repnz
lret
addr16
into
mov
fldcw
push
jle
push
add
out
cmp
mov
inc
push
or
out
add
loopne
ss
xlat
and
test
mov
or
fnstsw
jns
pop
lea
stos
xlat
dec
or
sub
xor
xor
je
pop
leave
clc
std
push
adc
add
mov
mov
or
fwait
cmp
loopne
dec
mov
movsb
lock
bound
dec
xor
xchg
add
adc
sti
mov
add
fcomip
pop
mov
fadds
lods
sbbb
pop
push
sub
test
push
and
add
push
adc
mov
mov
ffree
movsl
or
jbe
adcl
pop
cmp
test
fucomip
inc
inc
xchg
push
mov
bound
jbe
inc
sti
jo
adc
call
add
jp
push
cmp
test
cmc
cmp
rcrw
add
pop
mov
push
pushl
mov
push
lret
mov
imull
outsb
push
call
push
pop
push
sbb
int3
cmpl
inc
add
cmp
pop
push
lods
stos
or
inc
pop
aam
add
pop
xor
enter
mov
pop
push
inc
add
pop
xor
and
jbe
mov
inc
das
push
gs
xlat
loopne
jnp
inc
sti
inc
inc
fwait
cmp
imul
out
xchg
inc
jmp
cmp
aad
pushf
popf
mov
fcoms
inc
mov
movsl
xchg
stos
pop
scas
jp
pop
adc
aam
clc
das
je
pusha
clc
outsb
or
test
dec
push
inc
movsb
mov
xor
push
fs
addb
shll
adc
xor
xor
xlat
fsts
or
or
in
or
fs
adc
mov
scas
or
push
pop
je
mov
add
sub
inc
mov
jl
add
or
sbb
add
push
sbb
inc
push
in
mov
lods
pusha
cmp
push
or
add
sahf
jmp
mov
push
aaa
aas
cwtl
pusha
repz
and
add
add
pop
shrb
push
cmp
ret
lods
xor
in
andl
loopne
push
push
push
dec
js
or
ret
or
sti
pusha
jb
jle
stos
push
and
ljmp
inc
scas
and
push
orl
pop
imul
mov
mov
test
hlt
das
push
push
mov
gs
pop
fsubrs
pop
or
push
ljmp
push
mov
jo
push
dec
sub
loop
enter
and
jbe
outsl
insb
mov
mov
mov
pop
xchg
int3
xchg
xor
and
xchg
or
xorl
fimuls
fmuls
sarb
loope
fucom
subb
xchg
dec
ret
pop
or
xchg
and
in
xchg
pop
xchg
fs
popf
push
xor
push
push
loope
pop
loope
xor
testb
movb
in
cmp
mov
cmc
popf
lret
int3
ror
add
push
sub
test
or
and
testl
mov
mov
testl
addb
pop
sub
dec
add
jp
cmp
sbb
or
std
jne
mov
mov
and
sbb
insl
jnp
das
ljmp
mov
loopne
shlb
push
push
call
lea
cmc
push
add
int
sub
inc
add
sbb
cs
or
xchg
cmp
inc
xchg
lea
mov
je
ret
push
cmp
add
add
or
flds
xchg
adc
je
add
push
cmp
mov
sbb
mov
mov
jne
mov
clc
andl
out
test
dec
cmpsl
or
adc
push
adc
insl
leave
lret
and
repnz
push
sbb
fisubs
pop
in
push
cs
dec
mov
xchg
jne
fmuls
xchg
lods
es
jbe
fwait
mov
loopne
fdivrs
imul
jmp
xlat
push
shlb
aas
je
cmp
push
pop
jne
aam
fiaddl
cmpsb
and
jmp
sub
inc
pop
jne
pop
call
repnz
inc
xchg
notb
std
or
xor
xchg
outsl
xlat
jg
jne
jmp
sbb
in
sbb
mov
icebp
lcall
adc
test
fsubrp
addr16
mov
cmp
pop
lea
fldl
add
je
pop
sub
subl
mov
add
je
imul
dec
xchg
jge
inc
repz
jmp
pusha
in
arpl
mov
jae
scas
jg
mov
and
xor
leave
mov
pop
inc
cmpsb
scas
push
das
add
out
inc
mov
testb
jmp
adc
cmpl
orb
das
sbb
inc
inc
sti
addb
add
mov
push
mov
mov
pop
pop
fs
shl
push
mov
dec
inc
in
or
rcrb
ret
push
bound
pop
repz
push
mov
addl
push
rclb
jmp
pop
pop
loopne
mov
add
loope
xchg
ret
fstpt
add
inc
arpl
mov
xchg
sbb
or
push
jae
lret
loopne
sahf
xchg
pop
cs
push
push
pop
pop
pop
xchg
lret
in
pop
pusha
pusha
mov
cmpsl
sub
adc
inc
inc
pop
sub
gs
test
sub
xlat
mov
loopne
ret
adc
inc
jo
jo
cld
je
push
push
movb
push
out
pop
sar
inc
add
dec
inc
pushl
cmp
jae
cmp
mov
or
out
or
sub
fstpt
loopne
mov
cmp
je
mov
jmp
sub
push
mov
icebp
mov
push
lea
push
les
cmp
mov
push
inc
push
or
xchg
adc
mov
call
mov
mov
and
add
and
or
or
or
jle
jne
pushl
mov
pop
inc
push
dec
or
adcb
roll
or
scas
jmp
test
ficomps
xor
pop
ret
pushl
and
mov
push
mov
xor
xchg
cmpsl
jo
adc
out
mov
jmp
push
add
inc
mov
mov
jno
cmp
loopne
es
jbe
lcall
daa
push
mov
jg
pop
sbb
sbb
jbe
data16
dec
lock
inc
push
adc
pop
iret
mov
inc
inc
pop
jno
lods
add
xor
divb
push
movsl
mov
call
loopne
mov
shll
sub
bound
cs
xor
adc
test
mov
sahf
xorb
or
push
pop
stos
jne
sub
icebp
cmp
repz
or
xchg
jbe
enter
or
bound
add
adc
out
roll
mov
xorl
pop
pop
movsb
or
push
add
and
mov
stos
ret
pushf
sub
sahf
cmpsb
add
js
pusha
loopne
or
loop
loopne
fildll
mov
andl
adc
jle
cmp
stos
add
sub
xchg
dec
loopne
adc
sahf
xor
push
leave
fmull
dec
xor
and
outsl
adcb
iret
loop
pop
jb
xor
push
pop
pop
cmp
jne
mov
or
pusha
popa
adc
pop
mov
addl
push
sahf
dec
mov
out
cmpsl
mov
push
and
arpl
inc
stos
xlat
jge
adc
sbb
adc
or
xor
ljmp
js
outsb
jmp
jg
ret
xor
push
pop
sub
add
aad
dec
ja
inc
adc
push
or
add
and
xor
dec
xor
push
adc
enter
mov
rolb
add
cmp
pop
adc
and
mov
jb
cmpsb
fstps
test
scas
out
imul
movl
pop
or
cld
add
jnp
mov
mov
inc
xchg
cld
sahf
stos
sbb
mov
out
imul
sub
cmp
loope
repz
mov
pop
fcompl
std
xor
cmpsl
push
mov
sub
xchg
lret
insb
orb
loope
ret
jae
ret
dec
push
and
sub
rolb
cli
movl
inc
shll
pop
dec
xor
inc
test
inc
lea
int
adc
lea
pop
cmp
fs
repz
jo
iret
sbb
pop
inc
jae
jae
dec
add
add
pop
lea
push
cltd
arpl
cmp
xchg
jg
inc
pop
push
add
jb
push
mov
loopne
xor
movsb
cwtl
test
ds
pop
out
sbb
mov
sbb
jae
dec
lea
mov
mov
mov
push
insl
jo
adc
lcall
fwait
insb
fwait
pop
rclb
fs
loope
and
cmp
push
pusha
or
aaa
sbb
xor
call
mov
add
pusha
pop
and
mov
clc
lods
or
mov
dec
xor
decb
stos
mov
mov
je
sub
cli
cli
pop
in
pop
pop
inc
adc
fmull
inc
lods
pop
mov
xlat
jp
push
cmpsb
lock
and
movb
fisttpl
push
jg
cmp
cmp
mov
xchg
cmp
xchg
iret
jmp
adc
orl
lahf
mov
push
in
jns
mov
jnp
mov
jnp
push
js
mov
dec
sbb
push
leave
mov
ficoms
lock
aas
jns
out
iret
jl
in
add
inc
call
mov
jg
pop
lahf
dec
push
fidivrs
aas
sbb
xor
xchg
dec
lahf
adc
ret
jmp
xor
xchg
push
repz
outsb
into
add
cmpb
jb
in
popf
adc
pop
mov
sbb
pop
cmpl
push
call
or
or
insb
popa
sub
sub
aas
dec
lods
outsb
push
or
xacquire
sbb
or
test
std
lds
mov
cld
inc
mov
pop
pop
das
and
sti
pop
cmp
sarb
andl
xorl
pusha
add
mov
inc
push
sti
add
sbb
into
jp
pop
sbb
mov
adc
mov
aad
loop
test
push
sub
jnp
sqrtps
rorl
pop
xor
pop
and
in
xchg
test
fidivrs
adc
popa
push
and
cmc
add
xlat
jbe
dec
ret
add
dec
dec
fldl
pushl
pop
fcmovb
push
cmp
fcomps
sar
inc
adc
andb
je
or
xchg
jne
repz
sbbb
push
sti
loopne
sbb
call
movsl
push
shlb
jbe
out
push
scas
or
das
push
and
and
rolb
dec
push
lock
jl
inc
or
out
sbb
cmp
cmp
jle
lock
inc
repz
out
push
sbb
and
das
movsl
mov
cmp
rcr
je
js
xchg
ret
pop
adc
inc
and
ja
mov
rorb
pop
mov
ret
cld
xor
ret
inc
or
mov
cltd
mov
push
pop
jns
and
nopl
inc
add
pop
mov
into
push
inc
jo
gs
mov
je
mov
icebp
into
scas
mov
xchg
adc
mov
push
or
shl
xchg
mov
inc
push
inc
repnz
sbb
xor
and
loop
pusha
jmp
in
adc
leave
inc
jae
adc
daa
pop
repnz
and
je
inc
je
cmp
mov
jno
or
std
mov
push
or
mov
xor
xorb
mov
lea
mov
or
push
fcmove
shrl
lcall
xor
mov
mov
pop
addr16
add
out
out
mov
pop
lea
imul
and
punpckhbw
mov
insb
lods
and
and
cmp
cmp
jo
lea
jp
sbb
rolb
pushf
mov
ds
mov
lods
mov
adc
cmp
divl
and
lret
mov
lock
sub
bound
clc
and
mov
or
jge
ret
ja
out
shrb
dec
loopne
push
call
and
sbb
push
xor
jo
xor
mov
jge
jl
cld
rorb
cld
das
pop
cs
out
add
js
adc
lock
pop
loopne
movl
dec
cmpl
xor
test
aam
lods
shlb
cmp
and
loopne
jle
sbb
push
and
mov
adc
in
jecxz
add
add
pop
incl
add
fldt
pop
js
inc
pusha
je
insl
fsubs
in
sub
cmp
add
nop
scas
sbb
jecxz
push
dec
pop
push
cmp
cmp
cs
stos
movsb
add
ja
clc
jle
bound
mov
xchg
push
sbb
sub
fistpl
fistpl
jae
xchg
ret
je
push
stos
repnz
add
mov
in
in
pushf
mov
dec
cmpsb
mov
leave
enter
in
jns
mov
add
mov
imul
lock
xor
inc
cmpsb
nop
bswap
xchg
icebp
lock
lods
or
lods
lods
add
and
adc
mov
cmp
test
fs
movsl
xchg
lods
sbb
aad
xlat
cltd
dec
cld
comiss
mov
add
xor
mov
fsubrl
dec
xor
mov
sub
fcoml
dec
out
aaa
sbb
out
sti
jns
mov
js
fwait
rclb
or
pop
mov
adc
push
stos
je
xor
or
movsb
arpl
mov
shlb
pop
xchg
fwait
xchg
out
or
push
mov
pushf
enter
pushf
push
mov
mov
int3
sbb
push
test
and
sbb
sub
enter
leave
enter
sbb
sarb
mov
mov
mov
pop
leave
enter
mov
jle
or
inc
sbb
sbb
push
push
jo
fcom
jno
push
dec
jmp
ja
sub
or
das
and
pusha
adc
push
mov
hlt
iret
pop
pop
popa
fs
mov
and
and
adc
push
or
dec
sub
outsl
lock
sbb
or
rcrb
inc
bound
orl
push
sbb
cmp
adc
add
dec
add
adc
and
lock
add
or
aam
cltd
push
mov
sub
fst
lahf
test
and
data16
and
sub
movsb
and
push
jmp
adc
dec
sub
mov
adc
sti
or
mov
test
xor
pop
hlt
mov
pushf
push
push
inc
in
dec
sbb
cmp
pop
shlb
xor
iret
jg
test
add
insl
pop
adc
pop
add
je
mov
xchg
sbb
mov
rclb
jl
mov
jmp
fnstenv
xor
in
adc
inc
mov
fcmovne
push
ret
pop
and
push
jmp
push
mov
xchg
xor
rcrl
adc
mov
ret
js
or
or
adc
push
adc
insb
rclb
out
push
jnp
xchg
or
sbb
mov
ja
add
stc
mov
sbb
jl
mov
in
or
push
add
btc
fiadds
in
or
mov
xorb
push
and
pop
xchg
sbb
icebp
aad
adc
rol
movsl
jno
ret
pop
sar
cmc
dec
rcrl
add
shr
into
pushf
loop
dec
adc
outsb
and
mov
inc
adc
in
add
cmc
xchg
push
mov
or
xor
mov
insl
or
iret
sbb
sarb
add
fistpl
jne
es
ret
jno
jno
xchg
test
sbb
pop
push
sbb
inc
clc
popf
sub
sbb
push
rclb
pop
mov
mov
push
sahf
les
mov
ret
and
add
mov
pop
stc
lret
popa
pop
iret
mov
fs
testl
imul
das
xor
je
sbb
pop
inc
pop
and
push
mov
inc
insl
add
mov
jge
pushl
movsl
and
scas
pop
dec
pop
jecxz
daa
add
popw
mov
add
mov
inc
and
pop
inc
imul
cmp
pop
mov
xor
mov
sbb
xor
aaa
push
push
pop
inc
jbe
or
sbbb
add
shl
pusha
lock
hlt
push
sub
sub
mov
sbb
lock
sbb
jae
in
mov
mov
cwtl
add
add
repnz
sub
mov
fisubrl
cmpsb
sbb
inc
push
push
addb
insb
jno
cmp
and
ret
and
sub
popl
jo
jo
mov
mov
cmpsl
and
xchg
pushf
std
daa
cmp
mov
add
incb
adc
jp
mov
lcall
in
dec
cmpsl
ret
cltd
test
test
fimuls
mov
aam
mov
pop
sub
pop
in
cmp
sub
push
fs
fdivrs
jno
pop
push
ret
sbb
lret
ret
test
lret
lahf
sbb
or
pop
shrb
stos
add
adc
xchg
ljmp
xor
fcmovnu
dec
cmc
mov
dec
pusha
insb
adc
xchg
testl
rorb
mov
sub
sub
pusha
cmp
jnp
and
pop
or
in
mov
daa
sbb
sbb
inc
rclb
inc
loopne
clc
ror
push
insl
inc
add
mov
xchg
push
ror
call
push
mov
shll
adc
and
dec
test
and
cmp
push
push
mov
scas
test
mov
mov
fadds
shrl
cmp
mov
push
nop
add
xchg
icebp
push
ljmp
jb
adc
dec
cmovae
add
dec
fidivrs
sub
push
enter
sti
inc
cs
loope
add
sti
xorb
jbe
pushl
jnp
insl
jmp
adc
xorl
adc
std
rcr
sbb
sbb
cmp
outsl
inc
pop
lds
xor
sub
and
loopne
cmp
pop
sub
mulb
add
or
xor
stc
pop
repnz
fs
xor
push
andl
out
xor
xchg
addl
push
jo
push
clc
inc
sbb
in
cmp
and
cmc
sub
and
add
or
pop
and
xor
movsb
adc
sub
mov
and
or
jns
add
sbb
popa
aaa
cmpsb
inc
sub
jns
pop
adc
xchg
shll
mov
mov
inc
jnp
sbb
cwtl
xlat
popf
imul
jl
mov
sub
add
lret
mov
adc
stc
cli
add
mov
add
filds
mov
push
in
movsb
push
and
pavgb
ja
mov
lods
mov
jo
jo
mov
pop
dec
push
mov
and
sbbl
and
repz
push
push
bound
mov
mov
aam
test
push
pop
dec
mov
jne
popa
sub
push
sub
xor
arpl
or
push
popf
mov
out
or
aas
jmp
cmp
mov
out
push
jo
mov
ret
insl
inc
mov
lea
mov
add
sbb
mov
xchg
cmp
mov
add
cmp
popf
jg
add
adc
dec
add
jge
fldl
jo
add
ret
in
iret
adc
sub
pop
push
out
cwtl
pop
popf
sbb
cs
les
dec
push
push
jo
cmpsl
std
lock
out
push
dec
inc
jns
shll
sti
sub
xor
out
mov
rclb
in
sub
push
or
ret
mov
lock
inc
out
pushf
lods
adc
or
push
inc
fimull
push
jbe
andl
jg
xchg
pop
out
jne
or
je
sub
loopne
cmp
xor
mov
xchg
pop
pusha
js
or
xor
add
faddl
shlb
and
push
pop
leave
add
call
daa
cli
cmpb
push
jne
or
mov
emms
xchg
cmp
test
add
pop
test
in
std
ja
inc
and
mov
sar
lahf
je
adc
sarb
fadds
add
push
lods
adc
out
inc
out
js
mov
push
je
push
aad
add
fnstenv
sbb
add
and
inc
jb
clc
adc
xchg
jns
push
mov
sbb
push
push
mov
mov
pusha
es
jg
mov
or
ljmp
enter
inc
int3
popf
stos
push
rolb
mov
or
xchg
and
fs
cwtl
jle
jbe
in
test
mov
test
in
cmc
inc
stos
xlat
aas
or
dec
je
sub
or
bound
adc
push
cmc
jbe
mov
xor
xchg
pop
out
int
or
mov
dec
adc
lret
mov
pop
mov
jne
bound
mov
into
add
cmp
out
xchg
pop
outsl
arpl
cli
addb
push
popf
sbb
jnp
or
inc
hlt
aad
pushf
shll
inc
pop
lock
jle
mov
push
mov
clc
fistps
mov
jl
or
je
pop
pop
or
fistpl
sub
mov
mov
xor
lds
xchg
shl
adc
loopne
lsl
pop
fisttps
cltd
or
mov
mov
call
push
xchg
xor
add
push
add
aaa
add
inc
mov
adc
push
add
das
mov
pop
adc
cmpl
fiadds
in
push
daa
xlat
inc
test
sub
loopne
push
jne
jae
jo
jo
pop
push
cmovne
or
and
xchg
or
mov
mov
add
setns
mov
fcoms
mov
les
or
dec
push
lock
push
pop
enter
pop
cmp
add
lock
out
lret
xchg
cmp
jae
inc
cmp
lock
pop
inc
fiadds
xor
add
mov
les
sub
inc
js
push
mul
es
or
or
push
xor
stos
push
inc
loopne
push
shll
icebp
sahf
fdivrs
test
jge
mov
pushw
cmpsb
cli
jge
and
in
dec
add
push
clc
adc
mov
sub
xor
outsb
loop
adc
cwtl
test
push
mov
fdiv
and
inc
dec
in
pop
mov
lock
adc
or
ja
xchg
adc
popa
pop
pop
or
clc
xor
movsb
scas
stos
or
mov
mov
lods
mov
sbb
stos
fs
movsl
add
xchg
inc
aam
adc
rolb
loope
jmp
call
sub
or
and
outsb
jnp
fistpl
je
fs
test
iret
int
xchg
ret
lret
pushf
fcomps
pop
call
push
inc
xchg
jno
icebp
or
or
loope
loopne
jbe
mov
or
push
pushf
mov
icebp
add
adc
mov
pop
push
out
adc
jmp
inc
adc
mov
dec
pmulhuw
in
and
jge
ja
popf
js
jbe
dec
push
cld
retw
mov
mov
pop
movsl
dec
mov
mov
es
jo
sbb
jns
sbb
xchg
fcoms
fdivl
sbb
shl
in
jg
mov
mov
je
jmp
call
cmp
ret
shr
scas
push
aas
xor
rclb
or
ret
fs
hlt
sub
cmp
add
orb
fists
in
jle
jp
popa
xchg
je
arpl
loop
es
cltd
add
movsl
enter
or
pop
cmpsl
cli
gs
ret
push
lret
adc
or
cmp
push
lods
mov
arpl
jne
add
xchg
outsb
sbb
incl
add
push
test
pop
cmp
jmp
lds
pop
sub
mov
add
and
and
dec
jle
dec
enter
adc
push
push
aaa
shrl
push
cmp
jg
mov
adc
lods
xchg
iret
jmp
movsb
addr16
sbb
add
add
cs
testl
push
mov
adc
andl
ss
or
shrd
sti
dec
or
or
leave
lea
xor
outsl
add
mov
addl
push
jl
mov
push
jne
xchg
pop
rcrb
sub
jmp
mov
push
mov
mov
ja
push
arpl
subb
packuswb
mov
or
call
lret
or
dec
in
and
or
push
cmpsb
loope
test
cs
adc
sub
sahf
rolb
adc
inc
fisubrl
push
lea
cmp
jae
hlt
jmp
xor
lret
fcmovnu
inc
gs
call
inc
add
loop
adc
testb
rorb
pushf
in
inc
cld
or
sub
stos
imul
add
jb
adc
cmp
jg
lods
xchg
push
sbb
add
shlb
cmp
pop
nop
cmc
jg
pop
scas
cld
ret
mov
popa
nop
add
mov
adc
insl
xchg
sub
xor
push
add
lea
lea
dec
fwait
enter
add
dec
aam
adc
cmp
adc
in
xchg
add
add
jle
push
mov
js
cmpsl
mov
dec
popl
xor
jg
jb
ret
cwtl
fs
sub
dec
mulb
xor
leave
ss
imul
cmp
loope
loopne
push
cmp
jmp
pop
fwait
sub
test
cmovnp
jg
pandn
push
push
inc
inc
jl
add
push
mov
pop
testl
mov
orl
push
xor
add
outsl
stc
add
dec
ds
cmp
pop
outsl
rcrb
es
dec
fistpll
fildl
test
mov
push
add
adc
push
sar
leave
ret
lahf
pop
mov
xorl
xor
je
ficompl
scas
sbb
dec
repz
ret
icebp
push
sbb
push
cmp
push
dec
or
cmp
inc
shll
mov
test
pop
mov
sbb
int3
cmp
jl
repz
clc
sbb
jmp
xor
push
push
cwtl
push
inc
push
lcall
pop
cmpsb
ret
fldenv
cltd
pop
jecxz
cltd
jbe
add
dec
js
mov
cmpsb
pop
ficoml
xchg
dec
mov
mov
popf
xchg
shlb
mov
xchg
pop
mov
lods
stos
cmpsl
pop
mov
mov
test
in
hlt
scas
in
jle
int
sbb
enter
sbb
pop
adc
adc
xchg
sbb
sbb
cmpsb
repnz
push
push
sub
int3
rcrl
clc
imul
inc
cmp
je
push
popf
jbe
daa
insb
stos
cmpsb
add
mov
mov
out
mov
neg
jo
out
xchg
dec
rolb
cmp
push
movsl
sub
lods
movsb
mov
inc
or
sbb
decb
mov
jp
sub
je
fiadds
sbb
ret
jo
ss
pop
clc
cmp
outsb
jbe
cmp
cmp
sti
iret
jbe
mov
sbb
sub
add
add
fbld
add
ja
into
aas
insl
mov
jne
sub
push
sbb
adc
xchg
out
mov
xor
add
dec
mov
mov
mov
divl
orb
insl
mov
rcr
mov
push
sbb
lret
mov
sbb
or
pop
sbb
xchg
fadds
mov
or
add
aam
jmp
movl
lods
jge
rclb
inc
mov
sbb
add
dec
dec
adc
adc
imul
sub
push
adc
or
add
jp
xchg
jb
je
and
stos
push
and
test
jno
xchg
fildll
add
and
lock
jb
fistpl
sub
xchg
sub
jmp
addb
lock
xchg
and
dec
shrl
xor
inc
cmp
or
rcrl
and
sbb
adc
loope
mov
in
outsl
loope
sub
call
rol
pop
sbb
or
movsl
cwtl
mov
sbb
adc
outsl
lods
sbb
flds
mov
xchg
cmp
fstps
aad
in
or
les
or
xchg
or
sub
and
pop
mov
stc
mov
dec
fldpi
fwait
cmp
mov
inc
mov
xchg
push
mov
xor
scas
mov
pop
mov
add
fisubrl
addl
stos
add
loopne
jo
in
jo
pop
das
mov
ss
dec
or
lods
adc
push
ret
std
imul
call
in
in
add
add
cmp
repz
push
shl
or
out
sbb
js
push
jge
rorl
sbb
inc
jg
subb
add
mov
lock
inc
in
pop
xor
mov
or
adc
lea
add
cmp
jne
sub
adc
sub
movsb
add
stos
add
push
fidivs
std
push
push
sarl
and
add
scas
pop
push
or
xor
mov
notl
dec
adc
pop
inc
push
add
pop
mov
faddp
xchg
fistl
push
les
data16
mov
lock
sub
lret
mov
lock
cmp
ss
pop
outsb
icebp
mov
sbb
inc
je
scas
lods
incl
cmp
jne
dec
cld
sti
or
adc
inc
and
gs
fsubs
push
pushl
aas
mov
sbb
adc
inc
push
repnz
xor
lock
loope
push
cld
ret
or
clc
pop
mov
inc
mov
xor
xlat
arpl
out
dec
inc
add
aad
loope
movsb
popf
xchg
and
lock
jae
das
mov
adc
add
loopne
push
fbstp
mov
jne
xchg
fdivl
fcoms
aad
cmpsb
or
adc
jmp
push
das
sbb
fistps
add
push
mov
addl
fiaddl
add
adc
dec
pusha
and
addr16
dec
mov
pop
or
les
incl
pop
adcb
push
or
int3
xor
dec
rcll
or
add
add
cmp
lea
jbe
dec
mov
jp
push
cmp
aad
movsl
adcb
jne
xchg
jmp
cmp
js
pop
add
cmp
cmp
mov
imul
mov
ja
cmp
cmpsl
jne
sbb
push
cmpsl
add
add
adcl
jl
sarb
shll
add
xchg
push
test
into
add
add
add
xor
pop
mov
add
add
outsl
icebp
pop
sahf
shrb
or
push
mov
cwtl
ljmp
adc
and
mov
sub
add
jne
pop
pop
inc
sbb
mov
rorl
add
fimuls
or
das
movsl
adc
jns
jnp
pop
or
or
add
pop
inc
dec
movl
shrb
cmp
push
lret
adc
aam
jne
sub
add
push
insl
cmpsl
fldenv
movsl
flds
ljmp
pop
sbbl
push
sbb
stos
sbb
jae
lcall
sbb
sub
or
fcompl
mov
xchg
insl
out
mov
insl
test
adc
pop
or
pop
shrb
jns
push
fdiv
sbb
lea
add
iret
pop
jb
xchg
or
adcl
bound
dec
cmpw
cltd
jmp
mov
lret
xchg
xchg
lods
xchg
subb
cli
xchg
sbb
lods
pop
mov
xor
mov
jge
mov
push
jb
in
shr
imul
addr16
jo
mov
ljmp
inc
mul
push
add
popf
mov
sti
dec
adc
pop
push
push
cmp
jl
inc
and
cmp
adc
or
test
cmp
testl
ja
data16
adc
xor
inc
mov
dec
jp
and
xchg
adc
dec
jmp
lea
hlt
mov
movsb
add
mov
add
movsl
sbb
cmp
mov
je
je
sbb
adc
or
test
lret
mov
sbb
add
xor
dec
mov
push
mov
mull
cmp
insl
cwtl
xor
lea
daa
out
movb
nop
xchg
mov
mov
psubusw
push
and
jb
rcrl
xchg
dec
leave
jmp
or
fmull
mov
or
scas
pop
shrb
lods
sbb
jo
inc
adc
in
mov
in
rorb
jge
cmpl
push
add
push
add
aas
sar
xchg
js
add
addb
repnz
fs
push
sbbl
lret
js
mov
xor
divl
stos
mov
adcl
xor
push
loopne
dec
out
pop
mov
inc
or
cpuid
sti
aas
test
mov
mov
jmp
xor
dec
pop
hlt
imul
and
sub
pop
cmp
mov
lcall
adc
je
sarb
or
fisttpll
pop
mov
pop
int3
inc
or
int3
popa
es
fadds
js
xchg
sarl
pusha
inc
push
jg
mov
add
test
and
shll
jmp
pop
stos
jmp
pop
xchg
lahf
or
orl
xor
cmp
cmp
jmp
cs
add
sbb
pop
movsb
jne
jmp
std
xorl
sbb
call
hlt
inc
pushf
or
push
jne
andb
cmp
popl
repnz
cmp
add
movsl
stc
aaa
or
dec
add
mov
loopne,pt
ret
pop
lock
push
inc
cmpsb
nop
ja
add
xor
and
mov
push
push
mov
gs
stc
lea
shlb
mov
jge
pop
and
jg
lock
lock
sbb
je
cmp
jbe
insl
das
les
push
int3
cmp
jmp
push
jg
jnp
popf
shlb
cmp
out
pop
andl
int
cmpb
adc
rcrl
jns
xchg
add
push
pcmpeqb
jle
cmp
dec
and
mov
leave
inc
jecxz
je,pt
lret
add
mov
call
mov
dec
or
jnp
xchg
add
xchg
in
fcomi
fsubrs
pop
cmpsb
sub
in
decl
adc
cmp
jae
cmpl
push
ljmp
xchg
jle
push
mov
movsb
cmp
jle
jle
mov
cmpsl
cmp
adc
fcos
inc
enter
mov
cmp
insl
btc
mov
push
clc
add
sbb
aaa
repnz
fmuls
jne
mov
sti
cmc
stos
cld
sti
push
insb
mov
and
push
lea
xchg
pop
sarl
inc
adc
or
push
pop
cmp
test
ds
mov
mov
ljmp
xlat
mov
sbb
std
add
imul
out
push
mov
pop
jl
testb
pop
or
mov
xchg
shrb
mov
orb
jmp
je
xor
repnz
lea
push
cld
shlb
lea
mov
push
mov
mov
ss
loope
sti
pop
leave
jb
add
mov
test
je
push
push
in
pop
jg
jmp
cmpl
push
mov
test
andl
popa
mov
mov
sub
addb
mov
nop
lret
fwait
mov
rorl
push
or
loope
or
subb
fidivs
sub
jle
jns
push
and
adc
adc
xor
out
sar
insb
inc
push
rorb
in
sub
mov
fldcw
add
setne
loopne
xor
mov
hlt
mov
mov
jno
ss
pop
or
not
mov
js
push
pop
jo
dec
xor
and
sysexit
insb
mov
inc
push
pop
mov
xchg
sub
mov
ret
sbb
cmpsb
cmc
sarl
cmc
cmp
lea
xor
pop
add
mov
inc
sbb
push
sbb
cmp
popa
pop
xchg
lea
test
cmpsl
xorb
roll
xchg
dec
add
inc
outsb
xchg
outsb
andl
lea
das
rclb
or
cmovae
pop
data16
je
dec
shll
push
out
pop
jge
pushl
mov
test
dec
xchg
push
pop
inc
sub
jno
lret
lds
dec
lea
push
cmpsl
dec
cmp
cmp
inc
cmp
inc
iret
cmp
or
adc
mov
fisttps
mov
imul
insl
or
mov
add
sub
mov
orl
cmp
jne
ljmp
push
inc
mov
sbb
test
jo
mov
push
ja
insl
xchg
jmp
pop
mov
out
and
imul
js
cmpl
dec
push
jecxz
push
lret
add
loop
jmp
inc
cmc
dec
add
xorl
and
sub
sbb
test
sbb
andl
push
test
add
jo
movsb
xchg
aam
sahf
orl
movsb
add
cld
mov
cmp
je
or
add
mov
xchg
ljmp
dec
cmp
jne
shll
and
les
xchg
push
movups
lock
jl
jmp
lret
adcb
jge
cmp
inc
push
jmp
xchg
and
test
or
inc
aas
push
fadds
add
lahf
jo
and
push
sbb
leave
adc
jbe
inc
cmp
inc
add
testb
stos
mov
mov
and
cs
enter
and
push
sbb
inc
repz
mov
int3
cmp
test
insb
leave
sbb
ficomps
scas
outsl
ss
shlb
out
jle
add
jnp
scas
mov
dec
testl
pop
push
mov
cmpsl
cmp
mov
mov
add
xor
mov
inc
xor
jmp
cmpl
sub
repz
js
clc
jle
pop
sub
lahf
adc
outsb
push
out
pop
jbe
dec
xchg
adc
xlat
push
iret
sub
scas
xchg
sbb
cmp
sub
arpl
pop
sbb
mov
cmp
push
fs
adc
adc
fistps
ss
xchg
add
pop
cmpl
cmp
je
roll
das
aaa
pop
push
mov
and
in
xor
jo
out
xor
lea
xchg
adc
push
pusha
xor
or
loope
popl
or
sub
cmp
mov
push
xchg
mov
or
ds
sbb
and
dec
inc
mov
movsl
sbb
nop
andb
insb
sub
add
mov
push
pop
inc
ret
scas
sbb
cmp
inc
mov
add
stc
dec
or
xchg
pop
arpl
mov
leave
les
fs
aaa
test
je
xchg
pushf
pusha
xchg
mov
xchg
dec
sub
mov
sbb
or
rorb
add
xorl
pushf
pop
lods
xchg
fcom
xchg
push
loopne
nop
sub
mov
and
test
out
xor
dec
mov
addr16
xor
xor
jmp
cmp
lret
aaa
clc
sub
gs
cmp
ja
scas
mov
add
pop
or
mov
enter
cmovnp
out
add
in
push
or
push
mov
in
aas
rorb
je
push
dec
adc
shlb
sub
cwtl
cmpsl
jg
hlt
pusha
cmp
push
and
mov
adc
out
and
and
add
push
roll
mov
lock
mov
mov
sti
pop
push
sub
add
or
or
xchg
jno
into
inc
lds
dec
mov
daa
leave
inc
sub
push
cmp
dec
mov
lret
ficompl
sub
cmp
inc
push
lock
and
subb
lahf
lock
xor
inc
cwtl
pop
into
push
je
testl
fidivs
mov
cmp
inc
rol
insl
pop
push
cmp
data16
pop
fmuls
push
pusha
jmp
cmp
mov
test
fucomi
push
jns
dec
dec
clc
jne
mov
insl
lret
out
mov
test
add
aaa
sub
lea
xor
shrb
cmp
stos
es
test
xor
lods
dec
xor
lahf
loopne
in
adc
or
clc
hlt
hlt
lock
scas
jns
or
inc
repnz
and
or
hlt
pop
cmp
add
pop
cmp
jae
cmp
pushf
inc
sbb
clc
subb
push
js
add
shll
adc
loopne
fnstenv
jo
add
mov
add
jp
push
mov
stc
repz
orb
push
add
xlat
pop
push
sbb
push
cmp
cmpsl
push
push
xchg
pop
pop
jbe
dec
das
lea
cmp
lods
lea
xor
ret
popa
push
loope
sbb
sbb
ret
outsl
fmull
imul
and
add
mov
mov
push
sub
push
adc
stos
rorb
pushf
in
loopne
aad
mov
les
adc
rcrb
jo
add
je
cmp
add
push
push
adc
sub
popf
aam
pop
call
test
xlat
sub
aas
test
jge
add
cmp
jbe
or
jne
push
ja
lods
and
dec
mov
jnp
lock
add
idivb
das
jne
mov
dec
jbe
popa
adc
add
jmp
aam
nopl
mov
add
lahf
fbstp
add
jns
jp
sbb
mov
sbb
aad
fidivrl
fistps
in
push
fldenv
andl
inc
pop
or
inc
xlat
bound
out
or
mov
add
fistpl
and
push
rorb
xor
ja
out
loopne
and
pop
xchg
js
jnp
outsl
rcrl
pusha
or
and
ss
testb
push
or
fldt
jo
mov
sub
bound
push
enter
ss
lods
xchg
movsb
inc
mov
push
dec
mov
jmp
mov
insb
dec
das
xchg
adc
or
or
or
dec
add
in
in
push
fsubrs
push
mov
cmp
aas
sbb
outsb
lods
push
jne
push
push
or
xor
dec
xor
mov
sub
test
loop
nop
shl
or
add
xchg
pop
pop
pusha
addr16
out
adc
xchg
push
cltd
jbe
ror
cmp
aam
sub
push
and
mov
and
mov
jbe
in
lcall
or
in
adc
rolb
jp
insl
push
arpl
nop
dec
or
nop
sbb
or
shrb
adc
mov
lret
fs
xchg
int3
xor
outsl
dec
mov
mov
add
mov
inc
sub
xchg
push
repnz
xchg
stos
nop
adc
leave
xchg
and
add
dec
outsb
add
mov
cli
jbe
cmp
jbe
push
loope
xor
add
int
test
pop
mov
cli
jecxz
sbb
call
dec
lret
push
ret
jmp
mov
mov
cmp
fbstp
push
mov
xlat
or
mov
inc
sub
mov
push
or
bnd
add
cmovs
movsl
clc
mov
add
aad
jbe
loopne
test
cld
mull
inc
cmp
fadd
aas
push
aas
adc
iret
ret
cmp
fdivrl
push
pop
push
and
dec
pop
outsl
iret
icebp
inc
js
inc
jg
xor
or
cmpsl
cmp
outsb
cmpl
xor
xor
mov
cmp
push
inc
popa
sub
out
and
xor
cwtl
int3
fisttpl
pop
test
push
insl
inc
and
and
inc
mov
push
je
or
dec
fs
push
add
dec
adc
mov
lcall
in
sbb
and
and
xchg
subl
jae
or
addr16
mov
jb
addr16
je
mov
push
hlt
push
dec
mov
cmp
cld
push
push
lea
pushf
or
ja
pop
push
lret
jle
mov
sti
rol
cmp
push
jb
push
jae
lods
scas
test
aad
push
mov
add
push
push
pop
adc
repnz
test
test
sub
sbbb
cmp
sarl
mov
outsb
dec
cs
push
in
push
rorl
nop
jl
and
mov
xorl
sub
sbb
and
rclb
mov
add
test
or
sbb
sti
push
ret
ja
std
mov
out
les
loopne
sbb
inc
or
add
push
aas
or
push
lret
scas
lcall
scas
sub
and
xor
shll
inc
testl
push
cmp
jne
sbb
cmp
push
in
dec
xchg
shl
mov
mov
cmpl
popf
mull
and
mov
and
sbb
mov
notb
cltd
imul
sbb
adc
dec
jbe
jne
mov
cmp
jle
ja
xchg
jbe
jbe
mov
add
mov
cld
mov
jp
cmpsb
jne
jge
push
push
cmpsl
cmp
scas
es
hlt
jl
and
adc
or
or
inc
pop
adc
sub
add
pop
xchg
dec
hlt
andb
add
aaa
lahf
imul
pusha
pop
pop
pop
icebp
add
pop
ss
xor
daa
icebp
or
push
mov
or
and
xor
and
stos
adc
roll
push
fs
out
sub
loopne
lret
cmp
jo
push
cmp
sbb
push
mov
push
mov
jo
test
fcoms
push
xor
into
xor
push
xbegin
ds
leave
test
ss
push
xlat
adc
pop
lcall
mov
add
gs
fistl
arpl
and
dec
jae
das
or
aam
jns
add
jle
push
pop
lret
test
into
fmull
fwait
mov
xchg
add
sub
cmc
gs
push
mov
das
mov
push
arpl
test
mov
inc
lret
jno
mov
jae
cmp
or
lds
xchg
pop
push
lea
cmp
mov
rol
lea
xlat
sub
add
adc
in
pusha
rorl
push
aad
lock
xor
add
mov
sbb
lock
int3
test
ret
scas
jl
fimull
sub
add
push
je
dec
dec
rcll
sbb
ja
cmpb
jne
rcrb
push
sahf
jne
mov
sbb
repz
add
das
stc
push
xchg
shlb
pop
mov
inc
lock
int3
push
mov
lea
test
lock
jge
sub
mov
decl
push
orl
lea
pop
jae
and
push
push
cmp
jmp
cs
fs
sub
and
or
sub
mov
gs
fstps
and
mov
lsl
add
rorl
ret
rcl
fistps
and
out
loop
imul
and
cli
cmp
jle
mov
pop
and
dec
test
pop
test
cmpsb
pop
mov
je
test
sbb
add
cmp
xor
push
pop
sbb
sub
dec
pop
sbb
test
mov
xchg
xor
shll
and
xchg
adc
pop
sub
adcb
inc
push
mov
testb
or
mov
push
push
aas
push
adc
cmp
mov
ror
rolb
lods
adc
xchg
add
mov
into
inc
aad
xchg
push
mov
push
add
xorl
adc
sbb
leave
shlb
inc
xor
sub
sahf
add
loop
add
push
xchg
cmp
mov
addr16
test
sbb
loopne
push
inc
pop
cmpsl
loopne
push
or
jle
aaa
xor
mov
in
add
sbb
pusha
inc
fildl
shr
sub
mov
aam
lahf
pop
and
je
lea
xchg
push
leave
in
inc
andl
fistpll
repz
fs
sbb
test
shlb
xor
inc
and
or
loopne
mov
aad
pop
movl
jge
iret
adc
fdivr
and
jmp
mov
sub
data16
sub
and
mov
or
add
or
fldl
sbb
and
aas
inc
pop
pushl
dec
push
inc
push
mov
xchg
jb
sbb
outsb
aad
lods
jno
mov
mov
test
je
cmp
imul
into
js
cmpb
ret
push
jae
lea
push
inc
ret
sub
jecxz
pop
push
imul
stos
xor
or
sub
pop
xchg
int
push
push
xchg
add
div
data16
loopne
jge
push
les
leave
dec
pop
lock
in
fsubrs
xor
fnstenv
inc
xchg
adc
ficomps
cmp
sub
mov
mov
and
pop
add
jp
push
sub
sub
jbe
add
mov
mov
icebp
call
sub
xchg
rolb
or
dec
in
sti
sti
jp
ret
outsb
mov
test
lock
pop
call
lea
mull
cmc
dec
in
pop
arpl
mov
mov
mov
mov
das
imul
sub
mov
aam
jmp
popf
xchg
es
sbb
xchg
sbb
jb
cmp
push
test
or
or
lea
test
or
fwait
loopne
add
xchg
jae
adcb
push
and
and
out
jmp
push
or
mov
sub
and
jns
into
push
mov
add
adc
cmp
xlat
cmp
add
call
cmp
cmpsl
jg
stos
mov
cli
mov
cmp
jb
inc
repnz
inc
sbb
inc
add
movzbl
loopne
or
inc
mov
cmp
push
xor
inc
or
add
adc
inc
inc
es
xor
inc
mov
pop
push
mov
loop
or
test
mov
jmp
add
add
movl
cmp
stos
mov
xchg
out
xor
xor
daa
xchg
push
shlb
fs
jmp
imul
aam
test
test
xchg
or
test
cwtl
push
jp
pop
in
inc
push
mov
pop
cmp
jne
movsb
jecxz
pop
mov
out
xor
pop
push
jnp
sub
cltd
and
inc
addr16
out
and
sbb
push
xchg
dec
push
cmpb
clc
and
addr16
xor
xor
incl
negb
cmp
je
mov
push
jp
jp
pop
push
es
jne
dec
lods
xchg
mov
add
mov
mov
mov
or
pop
jge
cmp
pop
popa
loopne
jne
adc
and
ja
and
fldl
movsl
adc
jmp
roll
rorb
mov
mov
movb
dec
jns
mov
xchg
out
xor
popa
popa
pop
leave
sub
push
loopne
daa
pop
add
lods
adcl
mov
xchg
adc
daa
das
inc
push
adc
or
lock
aas
sub
jns
cmp
jbe
frstor
out
push
iret
or
push
icebp
ficomps
loopne
dec
push
sub
sbb
ljmp
dec
test
nop
pusha
movl
lret
sbb
movl
sub
cmpsl
xchg
sub
xor
dec
add
lock
cmovbe
sbb
and
les
push
call
es
push
pusha
dec
mov
aad
faddl
jne
andl
mov
pop
xlat
jecxz
xchg
adc
sbb
mov
shlb
clc
add
adc
adc
push
aad
xchg
mov
sbb
in
mov
xor
add
iret
in
xor
mov
lods
cmp
sbb
and
aam
or
ret
dec
xchg
add
sub
incl
sbb
decl
in
sub
add
dec
and
pusha
popa
xor
add
jmp
shlb
inc
dec
and
aad
push
shlb
sub
dec
xlat
push
jno
cmovl
dec
jb
scas
xor
call
inc
ja
add
fsubrs
test
push
test
pushf
dec
repnz
call
jecxz
flds
enter
and
dec
add
push
xlat
nop
or
nop
push
fcmovb
add
push
nop
stos
xchg
dec
clc
mov
cmp
sub
cmp
test
das
shl
shll
add
adc
pop
and
adcl
roll
enter
push
les
and
push
inc
and
jo
mov
pushf
ss
jno
xchg
inc
pop
mov
and
pop
daa
inc
mov
jmp
push
sub
mov
push
xor
sbb
adc
or
adc
mov
mov
repnz
add
cwtl
xor
or
and
cs
push
hlt
sahf
out
push
push
pop
subl
fs
add
adc
jl
je
loope
lret
test
shrb
mov
cmp
stos
lock
nop
or
cmc
gs
jo
xor
mov
pop
inc
adc
and
test
les
inc
enter
es
xor
jge
and
push
xor
sub
add
mov
and
and
jb
leave
orb
xor
jnp
insl
jg
and
add
pop
mov
pop
ja
inc
and
mov
cmp
sbb
dec
fwait
sbb
lea
dec
les
and
push
sbb
mov
in
jnp
sti
bound
or
jecxz
rorb
push
and
mov
inc
sbb
cmp
and
or
das
add
jecxz
ds
push
movsb
sub
push
ret
pop
pop
dec
and
mov
icebp
pusha
push
mov
mov
cmp
ja
adc
lcall
loope
sbbb
imul
add
je
jl
test
pop
sbb
cmp
loopne
cmp
push
cltd
pop
not
mov
push
adc
add
or
add
push
mov
or
push
push
add
push
test
add
mov
push
add
add
push
or
mov
cmp
aad
outsl
mov
sub
dec
je
add
fisubrs
adc
in
jge
adc
les
dec
mov
sub
test
jmp
mov
mov
adc
leave
jmp
test
jecxz
jne
pop
add
sub
out
rclb
sar
push
mov
xor
aaa
jl
and
repz
cmpsb
or
adc
fcomps
xchg
and
mov
icebp
xchg
pop
or
push
cmpsb
mov
mov
pop
incb
jae
push
or
add
push
rclb
daa
lret
cmpsl
ficomps
js
sbb
mov
fdivl
mov
jnp
fstps
jmp
mov
sar
jmp
ficompl
jg
dec
sbb
jae
mov
jmp
inc
sbb
push
imul
mov
push
movb
and
rcr
insl
sub
sbb
and
jmp
and
jmp
xchg
sbb
mov
mov
cmpsl
stc
push
cs
out
sahf
out
mov
outsl
jne
xchg
sahf
rorl
add
data16
pop
insl
push
and
mov
sbb
inc
sbb
inc
mov
pusha
push
jo
aaa
in
lret
pop
adc
sub
mov
fistps
movb
add
iret
rcll
xchg
xchg
pop
add
inc
jo
incl
push
dec
push
dec
mov
lea
push
lea
push
sbbl
xchg
ja
dec
cmp
add
inc
cmpsb
add
fs
jns
mov
cmovno
cltd
lahf
addb
jl
push
cli
mov
dec
inc
lods
pushf
lea
xor
pop
adc
mov
or
push
pop
rorb
or
push
cli
sbb
sbb
je
mov
bound
mov
sbb
ljmp
push
pop
ret
cmpb
inc
xor
add
add
xor
es
lods
in
test
lods
dec
inc
inc
rolb
adc
and
push
pop
dec
adc
xor
inc
icebp
jp
push
add
loopne
loopne
insb
jno
jle
add
jbe
scas
adc
jmp
pusha
pusha
and
xchg
test
xchg
mov
xchg
in
xor
jae
and
xor
sbb
push
aas
jmp
xor
inc
push
add
sbb
or
sub
jae
fdivrl
push
repz
shll
movsb
insb
aam
sub
addr16
jl
lock
imul
pop
lret
repz
cmpsb
lds
mov
xchg
push
add
aas
push
lea
notb
cmp
out
mov
add
push
pop
cmp
push
lods
fs
scas
dec
add
sub
movsb
pop
dec
and
rolb
mov
lea
push
jl
sbb
add
pop
inc
insb
repz
test
and
rclb
pop
mov
popa
aam
push
aam
das
in
or
sbb
push
clc
addl
push
jae
xor
sbb
aam
xchg
out
das
cmp
fmuls
add
jle
jne
adc
shrl
adc
divb
lock
ret
sub
mov
mov
adc
fucomp
or
int3
cmp
jne
push
sub
pop
and
push
hlt
pop
loopne
add
js
sbb
xor
push
iret
push
rcr
rclb
rolb
mov
fwait
lret
jo
out
push
out
decl
ret
nop
sbbb
aam
xlat
push
or
jle
jb
adc
cmpb
mov
es
shrb
les
inc
push
mov
lock
js
push
idiv
push
dec
je
dec
push
cmc
push
cmp
int3
je
pop
xchg
sub
sub
in
jnp
and
jmp
sub
mov
sub
in
cmp
fnstenv
add
mov
inc
adc
pop
add
notl
or
cwtl
dec
mov
pop
or
or
sar
add
add
pusha
xchg
out
out
in
pushf
or
call
fildl
fdivs
in
xor
mov
sbb
testb
xor
xor
mov
inc
out
pop
jle
and
dec
dec
fnsave
sbb
dec
dec
cmp
fidivl
cmp
or
test
adc
test
dec
inc
pop
stos
push
rorb
out
neg
sbb
and
push
push
in
sahf
pop
adc
fildll
in
nop
inc
push
and
mov
push
out
mov
jmp
test
adc
and
dec
adc
punpckhdq
xor
in
sub
or
jp
loopne
sub
dec
pop
and
pop
lea
mov
push
mov
rol
popf
pop
loopne
flds
dec
add
idivl
or
xor
adc
sbb
adc
adc
ja
mov
jmp
push
adc
or
xorl
adc
shrb
xchg
or
push
inc
lods
jecxz
fmuls
and
dec
xor
push
and
ret
xchg
push
add
pop
cmpsb
mov
adcl
mov
testl
arpl
mov
in
push
push
dec
mov
clc
clc
push
pusha
je
adc
push
jne
movb
add
cmp
jne
xchg
or
ds
movsl
fldz
xor
pop
adc
push
mov
mov
xchg
outsl
sti
mov
jnp
pop
ret
dec
aas
cmp
insl
lret
xor
shl
jg
inc
jp
jge
test
dec
pop
xchg
mov
xor
cmp
dec
cmpb
pop
push
inc
or
and
lock
jne
or
or
popf
sub
mov
sbbb
dec
or
js
sbb
fwait
mov
shlb
or
sub
dec
add
push
les
imul
nop
pop
cmp
iret
push
adc
orl
hlt
push
mov
andb
stos
pop
xchg
mov
sbb
jge
or
xchg
fldcw
adc
cwtl
ja
or
pop
xchg
mov
sbb
add
push
add
xchg
clc
push
lea
sbb
mov
test
cld
test
pop
xchg
mov
xor
push
lret
jl
aam
ja
andb
js
enter
xor
rcll
and
inc
jge
sub
jae
das
insl
mov
clc
test
and
xorb
les
imul
filds
inc
pusha
fmull
xchg
andb
xor
add
push
push
aaa
movsl
cmp
outsb
add
mov
stos
jb
cltd
loop
sbb
cli
mov
jns
push
jbe
stos
and
add
add
xor
negl
in
push
ds
loopne
lea
push
fsubrs
jge
fcoml
cli
dec
adc
orb
inc
fmuls
call
aaa
cli
repz
or
pop
enter
push
sbb
jmp
mov
or
sbb
rorb
test
roll
mov
push
adc
movsb
xchg
andb
orb
shlb
pop
cmp
lcall
nop
pop
mov
mov
fstps
sub
push
push
mov
adc
sbb
inc
jbe
cmp
push
insb
repz
or
push
push
mov
fidivrl
push
stos
or
mov
or
push
icebp
pusha
mov
xchg
mov
push
cmp
jecxz
call
pop
fstps
cs
sub
cltd
sub
pop
adcl
je
xlat
divb
adc
out
addr16
sbb
test
xchg
push
or
shl
mov
jl
mov
test
repz
jg
push
add
aas
mov
push
cld
xchg
cltd
mov
cmp
push
sti
js
decl
orl
or
cld
idivl
call
add
push
idivl
mov
idiv
push
mov
push
push
mov
xchg
mov
ds
xor
not
sub
mov
cmp
or
hlt
jp
fstpt
mov
xorl
or
hlt
loop
in
push
sbb
movsl
adc
mov
mov
adc
mov
jg
jge
add
inc
and
adc
std
nop
les
out
cmpsb
fstpl
push
outsl
imul
pushl
lock
sub
dec
jg
mov
out
sbb
mov
inc
push
into
jp
xor
mov
or
cmpl
dec
push
mov
jl
movl
fwait
insl
lahf
lock
test
mov
lahf
xor
push
cld
in
sbb
negb
aas
dec
lods
sti
int3
loope
cmpsb
jl
xchg
addr16
cli
mov
nop
or
gs
dec
jge
jmp
mov
cmc
ja
inc
hlt
mov
test
jns
faddl
nop
loopne
add
or
enter
stc
das
fnstsw
mov
sub
mov
adc
mov
test
mov
inc
les
cmp
add
push
mov
xor
push
pusha
push
or
clc
fidivl
jmp
push
rolb
xchg
cli
jle
cmc
cmp
push
pop
mov
pop
rcrl
clc
ffree
xchg
mov
push
loopne
mov
lock
arpl
lcall
addr16
inc
cmp
or
movsl
jae
mov
clc
lea
outsl
push
adc
je
pop
jne
push
sbb
sbb
bound
je
or
inc
pop
and
jne
sub
stos
mov
dec
pop
or
movsl
fcoml
cs
and
inc
rol
push
add
cmp
inc
pop
jp
cwtl
mov
test
pop
and
imul
in
add
insb
jo
push
std
in
int3
and
xor
xchg
gs
inc
mov
sub
arpl
xor
mov
jle
xor
push
sti
inc
js
mov
add
pop
sbb
adc
push
leave
xchg
sbb
adc
xor
rcr
js
add
push
pusha
sbb
push
mov
fwait
sub
mov
push
inc
aas
mov
in
mov
lea
sbb
lea
dec
es
push
push
adc
xor
mov
inc
inc
lods
pop
std
mov
andl
cmp
inc
cs
sub
pop
cmpsb
jle
and
or
push
popa
loope
lock
je
mov
pushf
inc
popa
add
ljmp
adc
scas
jb
xor
sbb
sbb
jecxz
inc
mov
push
shlb
xchg
mov
xor
inc
push
push
pop
aam
pop
pop
or
dec
popf
dec
sbb
and
mov
sbb
dec
and
mov
cli
and
xchg
sub
mov
jb
daa
sbb
mov
pop
mov
and
andl
movsl
fwait
xor
addr16
mov
inc
sbb
sbb
sub
dec
cld
pop
aam
cs
setb
test
push
das
test
enter
push
push
jae
dec
adc
push
lea
push
lret
lock
aaa
subb
loop
xchg
fstps
push
or
dec
scas
mov
in
add
call
dec
dec
mov
fwait
adc
mov
es
jecxz
inc
add
sub
mov
cmpsb
sbb
shrl
sti
and
das
push
adc
push
loopne
push
add
pop
jg
hlt
xchg
out
add
pop
pop
sbb
pop
jmp
jo,pt
rcrb
scas
add
mov
mov
sub
pop
fs
mov
pop
jmp
pop
or
hlt
test
adc
xor
mov
xchg
add
add
jmp
test
inc
dec
sub
mov
xor
lret
jne
loop
sarb
and
push
and
rol
jge
insl
sbb
imul
pushfw
inc
js
fdivl
push
sub
or
sbb
ret
adc
or
aaa
mov
shr
push
mov
adc
mov
popa
add
in
mov
jno
stos
xchg
lcall
js
imul
dec
and
pop
add
lret
push
fdivrs
mov
mov
xor
lret
movsl
insb
fsubl
adc
or
or
lods
outsb
movsl
or
pushl
dec
in
and
fdivs
push
in
scas
and
pop
les
arpl
or
push
dec
mov
add
int3
test
add
call
inc
add
xor
aaa
mov
jo
jo
pop
jle
mov
rcll
push
sbb
xchg
test
aam
clc
sbb
bound
pusha
xor
mov
mov
mov
fsubrs
cmp
xor
or
push
and
pop
fistpl
sti
es
popa
push
dec
mov
enter
xorb
xor
dec
inc
lcall
cmp
or
adc
xor
fidivrl
mov
push
pop
cmp
adc
mov
std
mov
push
test
and
insb
loopne
inc
popf
jne
mov
push
fbstp
in
and
or
sbb
xchg
push
pushl
sub
lods
sbb
push
ja
cwtl
pop
andl
dec
rcl
sti
cmp
mov
sbb
mov
js
je
mov
xor
mov
xlat
insl
decl
jae
jmp
dec
mov
sub
and
out
lock
lcall
dec
add
mov
inc
xor
pop
mov
xchg
sub
fwait
dec
and
leave
js
cmp
jge
xchg
mov
clc
mov
mov
mov
fwait
or
cmp
jle
in
pushl
inc
dec
and
subl
push
repz
mov
dec
jnp
enter
mov
sbb
adc
ljmp
mov
ja
dec
mov
cmp
in
mov
or
jbe
add
and
cmp
sete
movsl
lea
je
inc
or
es
and
dec
ret
inc
xor
les
negb
cmp
push
push
jno
dec
out
pop
shrb
sbb
sbb
or
jno
adc
push
sbb
lods
add
pop
je
stos
inc
nop
mov
ret
cmpsb
push
fdiv
in
andb
sub
clc
es
aad
push
stos
js
jo
fildl
pop
push
xchg
pop
sbb
loope
cmp
push
sub
jecxz
push
mov
xor
sub
push
rcrl
push
inc
ret
popa
testb
inc
push
les
or
iret
ss
mov
out
gs
pop
or
inc
sub
enter
daa
push
popa
push
or
mov
sub
xchg
jg
add
roll
stc
inc
roll
xchg
inc
inc
cli
outsl
mov
fcomps
inc
dec
jne
mov
adc
push
pop
pop
mov
int3
inc
pop
xor
pusha
ret
adc
popa
es
mov
cbtw
loope
repz
repz
out
cmp
in
call
xchg
sbb
add
push
cmpl
or
imul
ja
and
in
add
mov
lret
mov
popf
add
xchg
jle
xor
add
jge
adc
mov
pop
push
mov
or
jge
push
xor
pop
lret
out
fcmovb
fstp
cwtl
and
xchg
fdiv
xchg
inc
jbe
jno
arpl
rcrb
xchg
das
inc
jbe
movzwl
cli
mov
push
push
pop
and
push
cmp
push
subb
jne
or
add
hlt
add
add
mov
or
add
or
jbe
jo
push
movsb
lock
scas
sbb
adc
sbb
cmp
or
dec
pop
mov
movsb
mov
ljmp
lea
movsb
sbb
add
mov
pop
or
lahf
or
xor
dec
add
mov
aas
jmp
popa
and
xchg
lahf
push
into
cmc
jp,pt
mov
adc
mov
sbb
movsl
push
jb
add
call
add
lods
mov
cwtl
cmp
data16
divl
movl
inc
arpl
sub
lret
push
or
and
sub
scas
mov
push
sub
aaa
scas
cs
mov
inc
movsl
jg
orl
in
jno
push
arpl
les
sbb
xchg
inc
adc
icebp
sbb
clc
cmp
jo
sub
jp
jge
out
daa
ljmp
xchg
sarl
and
pop
gs
mov
jg
add
sbb
sbb
fs
adc
xor
or
push
adc
pop
test
js
fiaddl
sbb
clc
outsl
roll
leave
inc
add
outsl
aam
stos
jbe
inc
js
mov
pop
bound
int3
cmp
or
test
xor
shrl
mov
adc
sub
sub
xor
pop
and
xchg
adc
ret
repz
adc
push
dec
sbb
sbb
sbb
sarb
adc
mov
call
mov
cmp
or
xor
test
cltd
dec
fcomps
jns
js
or
jno
mov
orb
in
addl
punpckldq
nop
or
lods
paddw
enter
jno
pop
xchg
jmp
sub
subl
lret
in
leave
mov
test
add
adc
cli
adc
mov
popa
sbb
rclb
adc
sbbb
or
mov
push
inc
inc
sbb
xchg
mov
and
sahf
or
dec
push
in
pop
lods
addb
cmpsb
add
mov
push
mov
mov
sbb
ja
or
and
cwtl
js
addr16
cmp
jle
insb
sbb
mov
popf
jl
inc
lock
bound
ljmp
setne
sbb
pusha
sub
aaa
repz
cmp
jo
fs
push
lds
pushf
repnz
cmp
or
clc
xchg
fsubrp
sub
std
add
sub
cmp
test
leave
aad
mov
pop
adc
imul
test
aad
and
sub
fwait
stc
addl
loopne
mov
into
sbb
sbb
leave
inc
test
mov
in
sub
add
xchg
dec
mov
mov
js
and
xadd
fisttpl
rcrl
neg
mov
mov
insl
lock
lea
cmp
pop
push
addr16
pushf
sub
push
jge
out
mov
mov
ja
into
movsb
in
jno
jle
ja
and
xchg
adc
pop
rclb
enter
and
pusha
roll
push
sar
xor
rcll
gs
ja
push
jns
or
pop
ret
mov
pushf
addb
sbb
mov
frstor
outsb
push
mov
ret
fstl
mov
roll
in
and
jmp
pop
and
adc
jo
inc
out
adc
or
xchg
loopne
and
push
dec
adc
nop
stos
add
cmp
sbb
push
jle
mov
cmp
das
mov
xchg
adc
and
xor
and
inc
cmp
push
mov
mov
inc
push
cmp
mov
popf
mov
popf
movzwl
jo
add
push
pop
mov
daa
add
pop
cltd
mov
fnstsw
mov
nop
xchg
popa
xchg
xor
cmp
sub
mov
test
lea
xlat
jle
leave
imul
mov
or
xchg
pop
fsubrs
push
jp
jle
push
roll
mov
lods
pop
outsl
aaa
mov
mov
scas
stos
pop
outsl
ds
mov
push
ljmp
xchg
fs
cmp
add
cmp
xor
subb
cmp
enter
aas
mov
cmp
in
add
iretw
sub
push
and
mov
adc
xchg
ja
out
cli
sub
movsl
int
and
push
movzbl
mov
or
pushfw
mov
push
sahf
loopne
pop
push
push
adc
out
mov
scas
mov
jb
mov
scas
fiadds
sbb
mov
ljmp
pop
pop
mov
fistpl
mov
xor
push
mul
mov
mov
mov
xor
mov
mov
sub
cmp
sbb
xchg
das
sar
or
or
shrl
mov
sbb
dec
mov
sub
adc
pop
loopne
jnp
aaa
dec
int
mov
lahf
and
inc
pop
fs
sub
jecxz
inc
inc
add
inc
push
je
ss
sbb
xchg
inc
aam
ja
ja
push
mov
ss
or
or
push
repnz
cmpsb
or
ss
sti
push
mov
into
jle
inc
rolb
or
mov
mov
jp
enter
cltd
fistpl
outsl
mov
xchg
or
mov
leave
inc
xorb
add
sbb
repz
add
mov
cmpsl
int3
inc
loope
ret
ret
pop
daa
adc
or
ret
push
test
mov
movsl
rclb
call
fisttps
mov
xchg
add
push
jns
adc
and
dec
pop
or
sbb
mov
or
jbe
push
inc
add
mov
into
imul
pushf
xor
aam
fcompl
jo
pop
inc
gs
or
bound
sub
dec
clc
sub
sub
mov
adc
mov
test
jae
lods
lods
or
add
pop
fwait
cmp
mov
jne
cwtl
push
inc
dec
sub
mov
jecxz
adc
lret
or
pop
sub
loop
pusha
sub
lods
addb
rcr
jns
dec
out
shll
in
stos
add
or
push
inc
dec
sbb
movb
fdiv
inc
mov
push
inc
loopne
mov
adc
sbbl
inc
lds
adcb
push
xchg
mov
ds
inc
iret
maxps
movsb
pop
das
sub
pop
jne
dec
rolb
clc
push
ret
or
sub
lds
add
fdivr
addl
xor
or
rcl
int
dec
mov
movl
cmp
adc
add
cmpsl
pop
push
inc
fs
test
sub
pop
sbb
shrl
jmp
sub
sbb
stos
addr16
add
popa
push
loop
dec
dec
xlat
jnp
mov
or
push
dec
xchg
aas
sbb
adc
xor
or
pop
inc
cs
push
jno
add
sbb
mov
lmsw
mov
mov
or
cmp
sub
cmpsl
mov
call
and
pushf
faddl
fisttpl
push
shll
loopne
lods
add
adc
lea
cmp
push
adc
jge
and
mov
add
cmp
fiaddl
je
and
push
sub
orl
pop
mov
repnz
pop
sub
cmp
push
pop
mov
sub
shll
mov
xchg
mov
push
add
dec
psraw
push
mov
sub
push
mov
loope
test
jge
sub
add
ljmp
dec
fcoms
aas
pop
cwtl
popf
call
das
or
adc
and
adc
test
jge
adc
in
or
adc
jne
cmpsl
sbb
push
sarb
je
or
push
pop
out
in
jbe
xor
mull
adc
mov
fdivr
shl
shlb
dec
loopne
int3
sub
sub
adc
popf
call
lahf
jge
dec
call
mov
pop
in
hlt
aad
xchg
push
jle
adcb
adcb
pop
xor
cmpsb
pop
loope
and
test
loopne
mov
sub
push
call
add
add
mov
cs
pushf
or
add
mov
ljmp
leave
mov
repz
sbb
pop
push
xor
sbb
jo
leave
mov
aad
in
ret
and
fsubs
jecxz
lcall
cmpsl
and
and
push
mov
xchg
mov
xchg
or
lock
out
lret
sbb
push
lods
in
pop
xor
and
mov
jae
mov
popa
or
pop
or
mov
fsubrs
ljmp
hlt
add
jmp
mov
mov
xor
cli
ja
cmp
xchg
jnp
adc
lret
and
daa
sub
out
mov
cli
inc
aas
repz
fcmovnbe
jmp
cmpl
mov
data16
mov
mov
xchg
jmp
adc
int3
orl
push
fildll
push
push
jne
int
mov
lea
gs
test
mov
bound
mov
fcomps
cltd
adc
xlat
sub
push
lea
sbb
jmp
xor
xchg
xor
aam
pop
dec
pop
dec
inc
cmp
ja
jl
push
mov
cmpsb
push
sub
xor
jne
mov
adc
and
add
add
add
pusha
outsl
sub
fisubs
out
push
insl
rorl
fnstsw
dec
lcall
ret
loopne
ss
jmp
xlat
inc
popa
pop
jno
or
mov
and
lret
jbe
inc
and
pusha
mov
in
lea
adc
mov
ja
xchg
and
dec
or
add
sub
std
mov
adc
xor
mov
insl
sti
or
pop
cmpsl
pop
stos
jnp
mov
js
js
pop
clc
mov
pop
adc
add
or
pop
leave
add
add
repnz
adc
psubq
push
enter
mov
mov
sarb
aas
and
jae
push
pmulhw
mov
cmpl
or
es
clc
stos
and
fldl
fistpl
jns
inc
cmp
push
jae
xchg
or
mov
xor
dec
in
mov
cmp
inc
mov
ret
and
xchg
add
pop
and
mov
push
add
movsb
fdivs
insb
cmpb
cmpsb
dec
mov
adc
sbb
jae
inc
cmp
xorps
jp
clc
gs
jne
movsl
cmp
cmp
push
rcrb
ret
movsl
dec
sti
lea
cmpsl
jno
mov
popf
sahf
xor
repnz
mov
mov
sub
ficoml
fcmovnu
hlt
fs
lret
cmp
jl
je
mov
hlt
int3
xor
sarl
pop
sub
cmp
jle
sbb
sbbb
icebp
jne
nop
imul
jno
push
add
ds
sti
push
sub
push
stos
xchg
xor
xor
and
out
ss
fnstsw
pushw
push
adc
adc
lods
xchg
add
sbb
inc
mov
inc
dec
jmp
sarl
in
pop
adc
xor
mov
fs
mov
cmp
push
sbb
in
cwtl
cmp
xor
dec
imul
sub
lcall
pusha
or
out
in
mov
lcall
mov
push
test
jne
and
mov
mov
insb
mov
or
or
aas
lods
js
mov
jne
jnp
in
pop
xorb
pop
sub
shll
test
adc
stos
es
aam
adc
pop
xchg
adc
mov
in
xor
test
add
xor
fstps
or
inc
push
roll
popa
mov
inc
and
mov
subb
mov
repnz
add
inc
cmpl
jb
sti
add
test
cmpsb
inc
pop
dec
aaa
mov
scas
adc
aad
popf
bound
cmp
test
je
cmp
fildll
das
mov
inc
loopne
test
push
sbb
popf
xchg
roll
cmp
pop
and
mov
mov
and
pushf
jae
or
cmpsl
mov
sub
and
test
sub
push
xlat
mov
push
or
vaddpd
cmp
mov
inc
add
ret
roll
adc
in
add
out
jmp
xorb
or
or
test
or
jae
addr16
orl
nop
inc
inc
test
fwait
jmp
sbb
jl
jmp
mov
leave
add
nop
sbb
or
push
or
mov
out
xchg
sbbb
push
or
ret
ds
or
cmpb
add
popa
idiv
pushf
add
inc
inc
and
rolb
or
bnd
std
int3
jmp
faddp
jmp
adc
or
sbb
fs
lea
mov
jmp
or
outsl
cmp
inc
jno
cmp
push
inc
cmp
jae
add
mov
cmp
mov
je
inc
add
test
fs
push
ja
push
adc
inc
out
in
lret
jb
sub
test
or
or
push
dec
loopne
dec
pop
sub
or
and
cmpl
cmp
and
insl
in
sbbb
add
pop
sub
rclb
icebp
lret
inc
push
add
imul
jae
xchg
mov
inc
mov
mov
rolb
dec
sbb
add
dec
adc
ja
lahf
xor
movsb
push
ja
rcll
repnz
add
pop
add
or
dec
mov
mov
add
or
add
jb
in
dec
icebp
inc
movl
rclb
push
or
inc
aad
or
orb
hlt
push
mov
push
and
ret
sbb
mov
push
sahf
cli
push
dec
add
jle
xchg
into
push
pusha
sarb
pop
sub
lcall
outsb
push
and
xchg
negb
inc
push
jl
push
sub
add
dec
subl
adc
inc
outsl
push
clc
hlt
jnp
push
sbb
inc
not
repnz
sub
xlat
add
sub
push
mov
ret
mov
inc
dec
pop
inc
and
and
adc
inc
push
xor
jmp
bound
loopne
jns
mov
cmp
inc
add
int3
jbe
push
add
testb
add
mov
movl
pushf
mov
clc
mov
push
je
inc
jmp
push
push
mov
mov
add
sub
add
add
mov
pop
add
jle
and
adc
mov
ret
sarb
add
sub
or
call
xchg
cmp
cs
outsl
cwtl
push
sbb
jg
add
xchg
xor
insl
andl
jnp
sub
dec
enter
adc
sti
xor
out
jne
push
lcall
insb
adc
popa
cmc
dec
pop
inc
jp
iret
cmp
adc
dec
movl
or
inc
add
mov
loopne
pop
cmp
pusha
inc
or
cltd
fnstcw
pop
adc
notb
adc
js
test
pushf
add
sbb
sbb
add
mov
sub
push
jae
fwait
imul
movsl
sbb
mov
add
add
add
mov
add
enter
cmc
jl
into
ljmp
inc
insb
xor
fld
inc
or
inc
and
pop
aaa
inc
adc
mov
pop
mov
pop
or
pop
pop
push
or
enter
sub
push
je
jo
xchg
insb
push
pop
inc
push
dec
lahf
cmp
pop
sbb
ret
in
cmp
inc
push
sub
sbb
leave
and
add
sbb
mov
or
adc
add
fmull
jo
push
test
sub
xor
arpl
dec
adc
int
lahf
push
dec
add
pop
or
push
jmp
ja
lea
mov
add
jg
jbe
in
cwtl
jne
dec
dec
jo
dec
test
push
pop
dec
or
cmp
push
mov
cmp
mov
popf
inc
faddl
jecxz
ror
mov
cmp
ss
sub
mov
push
std
mov
push
sub
xor
pop
and
mov
sbb
add
or
fcoml
cmp
cmp
lods
pop
iret
lea
test
int
data16
fdivrs
movsb
and
cmp
movsb
sbb
sbb
or
add
sub
lds
out
sub
adc
mov
into
and
adc
mov
lea
inc
push
loop
sbb
ret
pop
cmp
aad
repz
popf
jg
mov
push
and
js
add
iret
mov
insl
inc
ret
fldl
js
andb
out
fcompl
repz
lret
and
adc
push
pop
mov
and
ficoml
insb
xor
int3
inc
mov
or
sub
push
xchg
inc
es
shrl
add
rorl
lea
sarl
negb
ljmp
clc
enter
clc
adc
mov
jne
rorb
xor
sbbb
jno
test
loop
push
cmp
mov
cmp
jp
sbb
or
or
icebp
mov
xchg
inc
sbb
fsubrs
out
dec
insl
negb
pop
mov
jmp
imul
testl
push
bswap
mov
or
enter
pop
cmp
movsl
lret
add
lea
sub
pushf
push
cs
cmp
cltd
dec
add
loopne
xchg
insl
pop
xchg
xchg
xor
pop
push
loop
mov
roll
mov
jg
outsl
or
and
inc
or
cld
inc
push
xchg
and
sub
ja
arpl
sub
inc
add
add
sbb
sbb
pop
sbb
cwtl
out
mov
insl
loopne
push
pop
inc
or
imul
push
scas
jb
fstl
xor
nop
mov
xor
dec
pushf
sbb
sbb
in
sbb
sbb
lock
nop
add
push
icebp
mov
add
sti
faddp
je
inc
xlat
cmpb
xor
pop
inc
fwait
clc
rolb
inc
inc
xchg
sub
sub
mov
sub
push
xchg
pop
aad
sbb
test
and
pushf
jl
push
and
add
and
std
mov
cmpsl
and
andb
xor
ret
dec
adc
into
and
fcoms
stos
add
int
add
cld
jmp
inc
cmc
daa
adc
pop
sub
and
subl
je
cmp
ret
and
jecxz
cmpsl
cmp
and
mov
push
mov
and
daa
insb
and
adc
call
cmpsl
mov
push
loopne
add
movsb
cmp
cmp
sub
xor
clc
ljmp
push
insl
pusha
addr16
fucomip
imul
daa
xchg
mov
xor
inc
mov
mov
push
mov
or
sub
sbb
adc
les
out
lahf
lea
addr16
int
and
sub
sar
js
adc
insb
pop
ljmp
cmpsl
jo
insb
outsl
inc
hlt
lea
cmp
cmpsb
push
mov
sahf
pop
out
arpl
mov
pop
pushl
insb
testl
xor
pusha
imul
xchg
pop
and
pushf
pop
jne
jmp
insb
mov
cmp
cmp
lea
pop
and
push
adc
cwtl
sbb
icebp
ja
lea
rolb
sarb
and
lea
pop
inc
movsb
movl
inc
mov
mov
xchg
add
and
shrl
add
inc
pop
clc
xor
inc
inc
push
aas
idivb
adc
mov
or
jl
fdivs
pop
movsb
sub
ret
add
in
aam
nop
es
mov
iret
add
in
xchg
jmp
push
or
mov
cmpsl
xor
xor
push
or
add
insl
nop
push
adc
sbb
push
sbb
and
lock
pop
jo
test
xchg
and
mov
pop
int3
inc
jle
out
pop
push
aas
lea
fnstsw
movsb
add
test
lea
pop
jnp
movsl
jl
stos
lea
outsl
cmp
and
inc
mov
xchg
call
pop
push
adc
sbb
jle
mov
adc
popf
mov
out
inc
mov
in
xchg
jne
cmpl
push
mov
cltd
mov
decb
repnz
arpl
push
add
add
inc
dec
mov
lea
fs
in
cld
inc
push
aam
push
pop
into
fs
dec
lcall
lcall
out
nop
imul
arpl
mov
imul
sti
add
xchg
inc
cmp
sub
mov
xchg
push
xchg
fnstsw
mov
add
mov
sbb
xor
loopne
pop
jae
enter
add
mov
xchg
sti
jge
push
push
or
cs
mov
mov
pop
push
dec
mov
pushf
sbb
insl
and
xor
mov
xlat
push
adc
dec
sub
fldl
dec
pop
rorb
mov
xchg
enter
mov
arpl
add
xor
adc
xlat
shlb
sub
xor
and
xor
int
cmp
in
cmpb
idivl
lret
aam
cmpsb
push
jb
mov
hlt
mov
ud0
shlb
mov
mov
and
rclb
dec
loope
xor
pop
mov
cmp
or
add
ret
lcall
xchg
inc
sbb
adc
fcmovbe
add
or
out
xor
int3
arpl
aas
jl
ret
js
jne
inc
mov
push
add
stos
testb
cmp
in
data16
xor
jle
push
inc
cmp
lds
cmp
push
mov
lods
dec
or
push
sub
pop
scas
or
cmp
inc
movsb
ret
cmp
fsubrs
mov
cmp
pushf
mov
jle
cmp
jae
ret
and
or
xor
fsubr
aam
out
shlb
roll
mov
or
mov
enter
pop
test
decb
push
dec
push
out
add
test
hlt
dec
fcoml
dec
int
jge
roll
dec
rclb
sbb
xchg
dec
insb
push
push
push
jmp
iret
cmpsb
or
xor
aaa
mov
adc
shlb
rcl
push
cmp
roll
xchg
adc
cmp
jecxz
xor
cmpsl
adc
in
insl
add
dec
rol
scas
jge
fadd
push
inc
aam
jp
pop
jmp
pop
push
mov
inc
adc
dec
xor
enter
cmp
lock
shrl
and
lods
or
or
mov
mov
add
cmpsl
adc
sbb
push
pop
rorb
adc
adc
adc
mov
dec
mov
dec
or
adc
jne
enter
or
xor
pop
mov
jno
repnz
fsubl
roll
sbb
or
lods
cmp
clc
dec
jp
xor
insb
xchg
mov
push
mov
cwtl
xor
push
or
imul
xchg
sbb
fcompl
and
xchg
clc
push
inc
in
jp
pusha
sbb
sbb
lret
inc
ror
call
insl
xchg
sub
loopne
pusha
sub
repz
and
aas
jl
xchg
dec
add
inc
add
add
sub
push
push
ret
out
jno
sbb
xlat
inc
es
nop
pop
and
shll
clc
divb
xchg
jecxz
pop
orl
jno
lea
xchg
mov
mov
cwtl
nop
loope
and
pop
sbb
imul
sub
int3
pop
mov
mov
adc
movsl
dec
inc
mov
sub
xchg
jae
adc
add
popf
mov
jno
loopne
cmp
and
cmp
lods
pop
jecxz
or
xor
gs
les
pop
jp
mov
or
shll
xor
sub
or
les
mov
and
and
inc
xor
leave
mov
dec
xchg
sbb
adc
lods
call
push
sti
or
int3
test
or
push
mov
add
xchg
test
xor
into
orb
ss
add
and
push
out
mov
mov
iret
insb
roll
mov
sbb
lds
aas
int
xchg
in
pop
sbb
ja
dec
int
jmp
sti
pushf
mov
rolb
pop
mov
scas
sub
popf
jb
adc
shll
test
jecxz
je
xor
inc
jge
mov
and
lret
mov
mov
daa
lcall
push
fwait
popl
adc
jge
lds
jns
and
add
sub
add
push
ljmp
std
in
jmp
aad
inc
lahf
les
jb
fsts
inc
adc
in
aaa
mov
push
jns
pop
inc
mov
dec
testb
xchg
cmp
pop
jae
xor
adc
pop
subb
push
cmc
lahf
adc
xchg
dec
negb
jp
adc
out
cmp
aam
in
movsl
xor
ffree
or
addr16
xor
js
add
icebp
push
imul
xchg
xchg
js
lock
xor
mov
enter
movl
xchg
daa
xor
fbstp
pop
mov
mov
lea
cli
jmp
inc
sti
jb
lea
or
mov
lock
dec
test
jb
jmp
inc
adc
jge
leave
mov
inc
loope
ja
in
pushl
ret
push
popa
je
mov
fcompl
pop
and
mov
lcall
adc
dec
ret
ljmp
cmpsl
mov
inc
mov
stos
lods
jmp
lock
loope
or
xor
inc
push
push
pop
test
out
push
hlt
xor
inc
inc
jb
ljmp
dec
push
mov
sub
jge
filds
daa
xchg
inc
jmp
push
and
adc
or
mov
jecxz
or
or
call
lahf
mov
leave
fldz
decb
or
lret
fs
pop
pop
int
imul
pop
mov
mov
iret
sbb
in
fildl
jae
pop
sbb
xor
sbb
push
inc
mov
mov
adc
clc
test
bound
push
adc
fisttpl
push
sub
mov
rorb
fs
mov
dec
cli
jne
aas
add
sbb
push
ss
inc
jbe
les
mov
sbb
inc
adc
cmpb
add
movl
mov
adc
push
and
sub
lods
inc
or
insl
mov
es
iret
inc
dec
adc
sub
push
dec
mov
pop
adc
inc
push
cmc
arpl
push
cltd
xor
insl
in
adc
lds
adc
test
dec
dec
loope
lock
ja
jge
push
dec
mov
iret
test
or
ja
inc
cmp
movsl
test
inc
pop
xchg
jbe
adc
push
sbb
test
out
inc
ret
sbb
andb
addr16
cwtl
mov
dec
mov
ljmp
test
push
jo
enter
add
and
in
lcall
call
lock
jno
mov
xchg
pop
xor
jo
pop
mov
mov
push
shrl
pusha
sub
shlb
fs
inc
adc
mov
xor
mov
and
jae
inc
ja
daa
lret
orl
ds
aaa
xchg
xchg
mov
sbb
push
dec
ljmp
mov
inc
cmp
cmpb
je
push
mov
xor
sbb
inc
xchg
movsl
dec
sbb
and
xor
pop
pushf
push
sub
lods
or
cmp
mov
lods
lods
inc
inc
adc
call
add
cmp
sub
mov
xchg
es
push
cmp
mov
gs
inc
jp
mov
xor
adc
loope
or
insl
sub
popf
in
jae
mov
push
cmp
mov
cmpsl
sbb
inc
ss
nop
lock
addl
or
xor
orl
fdivr
inc
dec
mov
add
test
test
popf
cli
pushf
adc
dec
sbb
fistps
pushf
jmp
mov
js
and
push
sub
subl
push
faddl
dec
roll
pop
sahf
int
int
add
mov
mov
icebp
ja
sbb
lods
call
add
inc
dec
cwtl
adc
fadd
jno
mov
mov
jle
dec
mov
es
and
dec
inc
insl
and
pushf
sbb
sub
rorb
pop
push
test
mov
pop
ret
iret
lea
xchg
push
sub
out
add
adc
aas
cmp
push
xlat
cmpsb
inc
sbb
test
adc
pop
shrb
stos
push
pusha
pusha
dec
mov
push
call
push
xchg
mov
adc
cmpsl
aad
mov
and
cmp
cmp
mov
mov
shlb
mov
test
out
adc
es
std
sub
mov
pop
pushf
cld
or
xchg
loopne
js
and
cmp
pop
negb
mov
aas
dec
cwtl
test
and
push
push
add
mov
insb
cwtl
loope
cmc
jns
cwtl
fisttps
jmp
aas
aaa
xchg
pop
xchg
filds
aas
mov
insb
cmp
pop
pusha
pop
movsb
or
je
or
add
add
incl
xchg
jmp
call
push
out
cmp
jge
and
movsb
fwait
mov
je
mov
xchg
mov
jno
or
inc
mov
add
into
push
dec
and
sbb
add
pop
and
mov
jl
mov
cmp
in
sbb
and
stc
lds
sbb
add
adc
pop
mov
inc
rcll
jecxz
push
xchg
inc
fidivrs
push
out
pop
add
pop
aas
mov
xor
add
adc
add
inc
addl
and
add
add
fistps
mov
pop
or
mov
in
dec
add
shlb
or
shl
and
or
and
testl
add
sti
sbb
cmp
pop
add
repz
xor
movl
mov
enter
sarl
sti
push
dec
sbb
out
xchg
loopne
dec
adcl
xor
sbb
push
cmp
mov
imul
sbb
mov
push
sub
and
xchg
orb
jb
dec
stos
xchg
add
and
xor
or
cmp
pusha
loope
shr
js
int3
js
movsb
xchg
mov
pop
sub
xor
loop
jne
lods
lea
or
inc
and
push
fnstcw
sbb
mov
lods
pop
mov
fbld
cmp
and
sub
xchg
and
subl
cwtl
loopne
jb
jle
test
cwtl
out
nop
cmp
out
das
and
push
bound
clc
xor
test
xorl
sbb
nop
or
je
mov
cmp
push
cmp
xor
and
lods
add
rorl
sbbl
dec
adc
sbb
push
sub
pushf
movsb
jecxz
sbb
ss
pop
dec
fs
in
cmpl
mov
mov
cmc
mov
nop
lret
push
stos
adc
out
je
cwtl
lret
loop
mov
dec
inc
dec
xor
and
pop
cwtl
inc
pusha
sbb
pop
pop
sbb
mov
push
dec
push
rcrb
sub
fwait
push
enter
jmp
inc
addr16
push
adc
sti
sbb
push
mov
aaa
add
push
js
jbe
pop
ljmp
outsl
test
push
push
push
std
dec
xchg
pop
xor
jns
clc
in
adc
scas
scas
push
pop
sub
cmp
inc
das
push
clc
movsb
mov
ja
pop
push
xor
cltd
dec
je
push
add
lahf
testb
sbb
add
pop
pop
mov
mov
jecxz
pop
pop
sub
mov
xchg
cmp
jnp
cmp
decl
ljmp
lea
lea
adc
or
pop
sahf
mov
cmp
jne
mov
mov
pop
loope
sbb
inc
sahf
into
xor
jmp
or
lock
adc
cmp
test
mov
inc
sbb
test
rcrl
dec
les
mov
mov
cmp
or
enter
pop
dec
push
or
mov
pop
xchg
push
mulb
loope
push
or
mov
pop
inc
xor
orl
ja
out
xchg
add
in
scas
push
or
sahf
dec
lods
mov
ss
enter
push
add
cmp
les
mov
sub
mov
xchg
xor
adcl
pop
push
int
and
cmp
lods
cwtl
xor
sbb
fistpl
push
xchg
test
out
arpl
testb
add
pop
xchg
or
mov
adc
mov
or
mov
imul
jmp
add
xor
inc
xor
adc
push
cmpsb
or
inc
lock
xchg
cmpsl
fcmovnbe
mov
in
mov
out
push
pop
lods
mov
test
jns
or
xor
inc
cmp
xor
js
xor
push
daa
sub
and
add
mov
pop
adc
push
dec
jecxz
adc
lods
lcall
test
aad
cmp
adc
in
pusha
xchg
sbb
push
test
cli
sarb
imul
dec
or
int
inc
dec
push
in
int
inc
sbb
push
sbb
sbb
nop
sbb
test
xchg
or
sbb
sub
and
sbb
push
xor
sbb
enter
iret
pop
push
xchg
or
nop
pop
push
mov
ss
jne
popl
mov
mov
dec
mov
adc
scas
sub
cltd
subb
push
xchg
and
and
sub
pop
pop
and
sbb
in
cmp
cmp
adc
xchg
lods
es
mov
push
mov
cmp
sub
push
inc
cmp
pop
leave
and
ss
or
pusha
sub
pop
leave
and
jno
and
xchg
pusha
call
iret
ljmp
andb
mov
xor
sbb
or
test
aas
mov
xchg
sbb
xor
roll
inc
add
je
and
andl
pop
add
cwtl
and
jecxz
and
movsl
mov
lret
cmp
sbb
sbb
pop
xor
leave
fiaddl
and
rcll
adc
xchg
add
call
push
xor
repnz
scas
inc
ret
popf
sbb
inc
bound
add
jp
roll
ja
les
rolb
pop
xor
adc
mov
outsl
jae
xor
xor
xchg
mov
sbb
lock
or
add
ja
into
add
push
cmp
lahf
dec
repnz
sar
addb
push
repz
lds
std
hlt
mov
push
add
cmpb
jne
inc
popl
fsubrl
bound
ss
mov
into
jae
jle
mov
mov
cwtl
mov
rcrb
pop
and
jno
in
stos
push
xor
loopne
push
mov
movsb
jl
fiaddl
mov
and
mov
xchg
push
popa
adc
js
mov
mov
sbb
call
xor
push
mov
stc
xor
and
adc
or
pop
pop
movsb
enter
int
aaa
or
aam
mov
cmp
jge
mov
jl
rolb
ds
cmpsl
mov
mov
sub
xchg
mov
fs
sti
mulb
loopne
ja
add
lret
inc
fdivrl
adc
push
ss
lock
sub
dec
loop
fs
fsubrp
sub
rorb
mov
adc
inc
lea
push
or
int
sbb
pop
cmpsl
mov
es
lock
outsl
cmp
xor
sbb
mov
in
or
lret
inc
es
lret
mov
rolb
adc
shlb
lods
sub
pushf
mov
mov
dec
in
add
inc
rclb
cltd
data16
cltd
popa
add
cmpsl
test
int
int3
and
pusha
cmp
mov
jns
sub
pop
or
or
sub
or
test
test
je
insb
dec
lock
aaa
push
pop
xor
push
outsb
xor
xor
xor
aaa
mov
mov
pushf
sbb
xchg
test
dec
or
jmp
jmp
mov
imul
mov
sar
loopne
mov
pop
xor
movl
rorb
pop
rcll
adc
push
adc
and
adc
add
cld
add
add
rclb
xor
jle
shrl
jns
sbb
ds
push
sub
aaa
jmp
cmp
inc
pop
cmp
or
and
pop
aam
inc
or
inc
inc
lea
lea
stc
jae
popa
js
xor
push
pusha
and
ret
adc
pop
cltd
nop
push
mov
setge
push
pop
and
xchg
fmull
xor
adc
push
addb
frstor
inc
mov
cmp
or
add
adc
xlat
mov
push
xchg
adc
adc
sub
adc
arpl
adc
cmp
add
adc
dec
stos
lds
in
cmp
idivb
xor
sbb
xor
cmp
pop
push
insb
inc
rol
test
fidivs
adc
enter
out
or
rcll
gs
push
sbb
imulb
in
pop
in
scas
fstpt
push
xor
inc
push
mov
jle
lahf
clc
ficomps
dec
sub
out
push
pop
and
stos
adc
sbb
repnz
test
aad
adc
je
stos
incl
inc
or
xlat
xor
dec
and
push
jae
and
call
xor
mov
leave
enter
aad
orb
push
cmc
sbb
dec
and
inc
pop
nop
ljmp
cmpsl
or
test
adc
movsl
push
dec
or
mov
repz
adc
dec
dec
adc
xchg
movsb
dec
add
xor
ja
in
push
xor
js
and
add
jle
call
push
insl
loopne
test
stc
repnz
je
cli
pop
sbb
cmp
and
add
push
jg
or
mov
sub
hlt
jge
daa
in
mov
mov
incb
xchg
and
clc
adc
insb
cmp
ja
add
jmp
test
add
imul
and
mov
daa
pop
std
push
pop
adc
mov
inc
aam
cmp
cmp
leave
xor
rcll
sbb
adc
mov
aam
dec
add
or
fsubrs
test
xor
adc
mov
add
xor
sarb
or
dec
loopne
lea
pop
icebp
push
imul
xor
imul
ljmp
cmp
sbb
or
fcoms
dec
popa
movsb
push
sarb
lret
sub
jns
div
lods
mov
inc
or
jmp
cmp
je
aaa
sub
cmpsl
js
in
jns
xchg
dec
adc
sar
adc
icebp
jge
imul
xchg
push
ficomps
push
cmpsb
pop
xor
adc
jl
sbb
insl
adc
or
add
xor
xchg
mov
jecxz
sbb
sbb
add
and
dec
and
jbe
pop
mov
fstl
or
adc
cld
cwtl
fwait
movl
mov
mov
je
movsb
test
subb
sti
xchg
inc
inc
push
mov
add
cmp
dec
push
inc
insl
test
xorl
dec
or
push
pop
cmp
add
aaa
add
adc
push
jnp
or
fwait
out
jo
int
dec
test
mov
jl
mov
or
adc
fcoml
inc
ss
push
lea
pop
mov
cmp
enter
lock
ss
lcall
xchg
pop
pusha
loopne
or
and
jo
cmp
sub
insb
and
sub
sbb
scas
add
or
cmpsb
shll
mov
inc
clc
cmp
lds
icebp
adc
mov
movsl
cmp
pop
cmp
dec
sarl
push
push
sbb
insb
mov
adc
push
and
sbb
stos
movsb
pop
pop
sub
sbb
inc
dec
jo
pop
xchg
pusha
inc
pop
cmp
push
dec
dec
lcall
dec
cmp
lods
rolb
sbbb
and
inc
jbe
aam
aam
lea
adc
add
shl
sub
adc
hlt
out
xor
ret
push
xchg
jno
or
je
mov
aaa
xor
andl
jle
movsl
loopne
push
dec
cmp
addr16
sub
xor
jnp
sbb
xchg
xchg
into
inc
dec
adc
scas
fmul
call
pop
add
or
in
sbb
push
add
or
pop
sbb
dec
jnp
stos
jae
les
lock
mov
loope
cmp
cmp
push
mov
sti
mov
adc
jne
cmpb
add
add
cmp
push
and
ficompl
xchg
jle
stc
mov
xchg
add
lock
movsl
fbstp
or
adc
cmp
xor
sbb
loop
push
inc
mov
dec
push
mov
adc
mov
ret
movsl
in
mov
add
sarb
push
std
insb
aaa
les
js
xchg
pop
test
lock
pushf
repnz
or
xor
jo
scas
test
add
pop
jbe
adc
test
sbb
mov
lods
adc
sbb
jge
sbb
adc
adc
add
xchg
iret
xor
inc
out
cmp
push
shlb
pop
adcl
sti
mov
inc
rclb
adc
aad
add
jp
jmp
mov
movsbw
jne
subl
outsb
out
into
clc
and
or
or
fwait
out
and
dec
inc
push
insl
push
or
inc
lods
lds
inc
hlt
aad
mov
scas
insl
hlt
push
inc
js
sbb
inc
mov
out
dec
cmp
je
push
stos
or
or
mov
popf
mov
lock
ret
lea
js
cmp
mov
xor
aam
pop
mov
xor
dec
push
loopne
cli
call
call
setno
lea
dec
mov
pop
ss
sti
sbb
shll
jp
mov
sbb
dec
cmp
sub
xor
jmp
ja
xor
sbb
pop
push
in
adc
push
fdivrs
out
cs
add
sbb
fldpi
pop
dec
xor
sbb
pusha
mov
pop
loopne
jo
xor
inc
es
jo
sbb
pop
in
pop
adc
andl
pop
xchg
lret
mov
in
int3
sbb
pushf
loopne
jecxz
mov
sahf
push
fsubs
push
sbb
in
inc
sub
mov
and
mov
jg
inc
mov
adc
push
xor
popf
adc
lret
adc
cs
imul
sarb
lods
adc
icebp
push
ret
push
je
sub
rcr
ds
inc
leave
movsl
jmp
out
jmp
adc
and
dec
call
jg
shlb
mov
ret
aam
sub
nop
lock
or
xchg
lock
imul
inc
cmp
inc
cwtl
mov
mov
imul
sbb
add
mov
fildll
std
cld
adc
in
sbb
mov
lock
mov
xor
dec
aas
and
fidivrl
jnp
and
push
call
mov
or
push
in
stc
mov
lea
mov
inc
cmp
int
popa
dec
sahf
std
xchg
push
inc
ret
jnp
pop
movl
testb
sub
movb
dec
cmp
mov
insl
and
pop
xor
test
inc
loope
addb
push
movsl
pop
inc
bound
adc
and
pop
mov
pushf
sub
les
jo
jge
lahf
xor
call
inc
jno
mov
push
dec
or
dec
jne
or
fnstsw
mov
movl
mov
mov
lea
xchg
sbbb
stos
movsb
imul
les
gs
and
pop
inc
add
ljmp
adc
bound
and
add
popf
add
and
add
or
cmp
add
mov
insb
adc
inc
loopne
in
outsb
add
pop
xchg
bound
movsl
push
push
insl
ret
add
movsl
shll
imul
cmpsl
icebp
and
inc
aas
js
imul
push
cwtl
mov
mov
pop
hlt
imulb
sub
add
push
aam
pop
aam
repnz
in
stc
add
clc
push
add
push
push
push
push
std
fdivr
adc
mov
insl
add
cmc
or
movsb
xlat
add
icebp
inc
jne
mov
nop
call
test
cmp
cld
movups
cmp
jne
add
pop
out
mov
jle
fisubs
mov
movsb
cmp
inc
dec
cmp
sbb
dec
or
push
add
and
nop
xor
test
dec
push
mov
lods
movsb
mov
dec
xchg
nop
decb
jle
aam
mov
and
jbe
sub
cwtl
cld
jmp
push
add
movsl
and
sahf
test
fildl
push
sub
inc
push
ret
test
xchg
jp
cmp
dec
cmpsl
fldl
movsl
movsb
mov
in
jmp
push
inc
cwtl
lcall
inc
dec
sti
rcll
ljmp
nop
inc
inc
add
lea
in
push
sbb
js
mov
andb
dec
xchg
mov
idiv
aam
pushf
cmp
jle
cmp
js
out
cmp
jbe
jp
xchg
xchg
notb
in
jbe
or
enter
adc
jle
cmp
jnp
shrb
jne
mov
mov
inc
adc
add
lahf
and
cmp
adcb
pop
pushl
fwait
inc
push
addb
fs
xchg
add
sub
scas
xor
lcall
xchg
mov
jne
imul
enter
cmp
lea
movsl
js
cmp
outsl
mov
enter
inc
jae
aad
mov
notl
push
sarl
push
push
sar
mov
inc
adc
dec
push
inc
inc
and
add
std
sbb
ret
in
shll
mov
jle
bound
cmp
lcall
adc
ret
ret
add
or
notb
jnp
jnp
nop
repz
rcrb
adc
nop
and
adc
push
divl
fsubrl
lea
mov
idivl
es
inc
je
xchg
int3
js
loopne
mov
xor
jg
sub
adc
adc
testb
adc
outsb
lods
xor
push
sub
add
mov
and
push
int
mov
rorl
insb
lods
mov
int
notb
mov
sti
dec
push
push
xlat
dec
in
rclb
inc
movsb
pop
fwait
fisubl
fs
les
mov
xchg
dec
lret
enter
neg
gs
les
pop
jmp
and
dec
lods
notb
lcall
pop
in
insl
adc
int3
iret
pop
pop
mov
paddusb
phaddw
push
xor
mov
jae
push
sbb
add
fimuls
in
fidivrs
push
sbb
dec
pop
call
pop
test
sub
inc
rolb
jmp
sbb
or
pop
int3
je
xchg
adc
adcb
push
andl
adc
mov
and
cmp
popa
push
aam
sbb
push
xchg
push
les
mov
push
xor
adc
stos
sbb
cltd
add
push
fwait
mov
push
jbe
sti
push
fisttps
or
sbb
and
icebp
jp
mov
cmpsb
inc
fiaddl
and
xor
fsubp
and
sbb
add
jecxz
or
jnp
inc
xlat
add
add
gs
mov
mov
cmpl
mov
sub
mov
idivl
insl
dec
xchg
imul
ljmp
fcoms
nop
in
mov
xchg
adc
ja
loope
loop
es
dec
jno
push
adc
imul
xchg
popa
cmp
clc
loopne
cmp
push
loopne
lods
pusha
bound
and
push
lret
mov
ss
lods
in
cmp
push
pusha
mov
jnp
lret
lret
fwait
imul
adc
movb
dec
and
push
dec
mov
std
aaa
inc
lock
jle
add
cmpw
sbb
mov
jne
push
push
inc
xchg
add
dec
arpl
mov
xor
imul
add
stc
fs
push
je
add
mov
add
repz
ljmp
add
push
adc
js
movb
xchg
les
pusha
jne
dec
dec
push
sub
lock
sub
jmp
jae
aaa
mov
lcall
dec
movzwl
jnp
add
pop
mov
pushf
rorl
leave
push
mov
sbb
push
add
sbb
or
imul
loop
adc
fidivrl
and
mov
out
jae
dec
seta
pushl
adc
test
mov
xor
or
cs
enter
mov
clc
pop
and
push
mov
inc
jo
fsin
xchg
bound
hlt
jne
jb
fs
push
cwtl
insl
add
call
dec
pop
push
pop
push
dec
xor
jo
xchg
xchg
fwait
fdivl
and
and
lea
jle
dec
rolb
insl
movsb
test
push
loop
xchg
in
and
je
mov
ret
push
imul
and
pushf
push
aas
icebp
ret
jge
pop
mov
lock
dec
and
sbbb
dec
xlat
push
addb
mov
push
or
jne
nop
and
cmp
mov
add
sbb
jne
ljmp
cmovs
add
push
xor
bound
lock
cmp
xor
fadds
ss
mov
xor
test
cmp
pop
rorl
mov
lcall
sbb
cmpsb
xor
cmp
ljmp
dec
shlb
inc
and
ja
cmpsb
jmp
sub
add
js
mov
mov
cwtl
arpl
or
shll
nop
and
lods
shll
mov
adc
addl
push
repnz
sbb
add
pop
dec
xchg
movsb
in
or
sar
pop
movsb
movntps
or
sbb
testb
cmc
push
cmpl
pop
jo
or
pop
xor
push
and
inc
mov
gs
or
mov
in
pop
or
mov
xchg
mov
and
jp
insl
mov
xchg
jl
fs
jge
push
divl
aam
insb
xor
inc
hlt
fadds
and
mov
or
add
dec
pop
jne
arpl
or
push
les
mov
andb
push
and
adc
scas
push
cmp
icebp
push
or
mov
push
pop
std
and
inc
in
push
fisttpll
sbb
jmp
call
cwtl
ja
mov
sub
int3
sbb
sbb
shrb
int
sbb
push
xchg
adc
push
gs
popa
mov
pusha
adc
psubw
lods
inc
inc
adc
mov
cs
cld
cmc
mov
dec
jmp
adc
and
cmp
jne
out
lock
jo
lahf
in
lahf
adc
mov
in
loopne
dec
xor
cmpb
mov
roll
dec
cmp
loope
adc
cmp
dec
mov
xlat
nop
or
das
or
adc
insl
mov
aas
jmp
in
adc
sub
pusha
inc
and
jle
xor
push
inc
ja
mov
mov
add
xor
jmp
push
push
mov
dec
enter
addl
cwtl
popa
cmp
xor
xor
pop
and
pop
dec
pop
sub
or
nop
lods
and
iret
xchg
sub
inc
xchg
inc
push
rcl
dec
inc
sbb
rcll
push
push
inc
bound
and
movsb
cmp
push
dec
dec
xor
add
icebp
fidivrs
mov
fcmovnbe
pop
aam
add
dec
das
and
mov
or
mov
push
sbb
mov
sub
stos
pop
aaa
adc
sub
lods
inc
cmp
lretw
xor
xor
pop
ret
push
pop
fisubrl
sbbl
les
ret
pop
ljmp
push
inc
add
mov
popa
sbb
inc
inc
jmp
push
test
push
add
add
jnp
dec
mov
popa
dec
inc
enter
inc
dec
push
cltd
std
xchg
test
pusha
sub
pop
je
push
jmp
push
ljmp
xor
sub
sbbl
xchg
push
dec
pop
aaa
inc
sub
arpl
adc
mov
aam
mov
cwtl
sub
rolb
inc
pop
ret
bound
mov
mov
sub
xor
push
and
mov
mov
addb
lods
xor
sub
cmp
and
imul
mov
outsl
fnsave
or
add
inc
int3
push
rorb
inc
in
insb
subl
hlt
popa
jl
testl
adc
shll
pusha
push
xchg
add
mov
push
cmp
pop
out
rcrb
push
mov
mov
icebp
shrb
loope
out
xchg
mov
and
or
mov
mov
in
das
dec
jo
push
or
dec
cvtdq2ps
dec
in
inc
shr
dec
pop
sbb
push
lret
mov
les
or
push
shrb
test
mov
rcll
or
rolb
pop
aam
push
jb
push
imul
movsb
dec
and
and
cs
fildl
sbb
les
inc
sub
cmp
jne
cmp
jo
out
sub
jae
push
fbld
lods
push
pop
inc
insb
adc
pop
and
movsb
imul
cld
hlt
mov
test
sahf
adc
rclb
lods
popl
inc
jno
xor
jecxz
xor
fwait
call
pop
loopne
stos
in
pop
insb
mov
mov
nop
push
xchg
frstor
loopne
add
mov
jle
xor
pop
hlt
das
ror
lret
xor
and
jmp
cmp
dec
xor
or
cmp
pusha
enter
mov
xchg
inc
add
sbb
push
cmp
jno
mov
inc
sub
mov
je
sub
stc
aad
lcall
add
je
xchg
and
dec
clc
mov
mov
test
and
adc
test
or
pop
frstor
add
push
fs
inc
rcrb
in
inc
pusha
adc
aaa
test
popf
xchg
sbb
or
or
loope
cmp
pop
xchg
imul
sub
cmpb
repnz
mov
pop
add
enter
lds
mov
out
pop
bound
rcrb
mov
rolb
xchg
jnp
dec
loopne
mov
push
rol
out
and
mov
and
pop
inc
sub
loopne
sub
cmp
and
mov
jb
sub
xor
arpl
mov
xchg
es
mov
iret
push
outsl
push
cmpl
xor
cmpb
cltd
pop
adc
int3
fiadds
xchg
mov
rcrb
or
or
and
add
popf
add
xor
and
push
aaa
pop
sarl
movsb
or
lahf
push
das
addl
add
add
loop
mov
fcoms
adc
xor
cmpsl
xor
ficomps
inc
repnz
push
in
je
pop
lods
test
cmp
into
sbb
cs
xchg
dec
adc
nop
cmp
and
loop
jecxz
call
push
or
mov
mov
push
push
and
add
mov
push
pop
adcl
nop
and
mov
fistl
cmp
cmp
xor
mov
rclb
sbb
xor
dec
mov
sub
jns
js
repz
ds
push
sbb
push
jmp
push
dec
mov
inc
les
dec
and
scas
dec
mov
jp
sub
sub
imul
imull
mulb
pop
xchg
inc
aaa
pcmpgtb
sub
movsl
mov
pop
dec
add
loop
sbb
rcl
test
inc
cmp
movsl
pop
cmpsl
adc
push
or
inc
imul
dec
jmp
inc
push
lahf
insb
dec
or
test
pop
xchg
cmpsb
movsl
sti
sub
cmp
or
mov
fistpll
leave
and
fnstcw
xchg
popa
mov
and
sbb
lock
ret
xorl
in
dec
add
xor
or
push
fs
xor
mov
mov
js
roll
lcall
xchg
mov
jae
pop
adcl
sbb
add
xchg
add
out
xchg
sub
popf
cld
icebp
mov
and
push
and
stos
in
repnz
pushf
sub
lahf
jb
enter
dec
mov
sub
cmpb
mov
pop
loopne
cmp
dec
data16
sahf
add
mov
rcl
pop
daa
aas
popa
sbb
jl
pop
adc
jmp
jmp
push
sbb
adc
andl
jb
lods
xor
add
add
data16
or
pop
cmp
dec
mov
rorl
xchg
xchg
dec
mov
sbb
insl
out
push
adc
xlat
add
sub
outsl
sbb
xchg
ficoms
add
mov
mov
push
sbb
or
lea
push
or
push
add
and
or
dec
rcrb
and
sbb
add
mov
or
mov
dec
add
inc
inc
inc
add
nop
shr
imul
adc
xor
mov
lret
or
xor
xor
sbb
clc
cmp
xchg
jns
and
push
and
test
outsl
stc
iret
nop
dec
insl
xchg
sbb
ja
imul
data16
mov
adcl
repz
jo
adc
or
mov
mov
shlb
xor
xor
loope
dec
jl
lea
daa
adc
push
pop
andb
mov
dec
push
mov
test
repnz
rclb
push
xor
cmp
add
cmp
test
xlat
test
faddl
inc
notb
fldl
sbb
inc
add
leave
push
mov
cwtl
pop
sub
and
adc
xor
icebp
dec
add
xor
and
roll
sbb
shll
mov
add
push
or
inc
mov
sub
cmc
push
xchg
pop
mov
xchg
inc
inc
sbb
inc
sub
xchg
jo
cmp
xor
movsl
add
hlt
test
mov
mov
daa
jne
xor
fsubrp
push
in
shl
adc
repz
sbb
jo
cltd
loopne
aam
push
fucomi
add
xor
pop
adc
loope
inc
inc
dec
xor
push
inc
orb
fsubr
fwait
gs
es
repnz
dec
xlat
or
mov
pusha
sub
movsl
loope
fsubs
xor
or
out
or
jnp
add
psubsw
shrl
inc
imul
add
mov
movsb
adc
cli
shl
addb
addl
or
imul
out
adcb
adc
ret
add
jl
or
insl
adc
sub
add
pushf
add
imul
xor
inc
clc
mov
push
sti
mov
pop
pop
mov
sbb
or
scas
xor
push
sbb
mov
and
jno
mov
push
pop
scas
sbbl
sub
sbb
push
push
and
adc
adc
das
les
mov
sbb
pop
jae
sub
xor
dec
pop
orb
lock
aam
dec
mov
jae
fidivs
push
push
inc
shll
lds
inc
lcall
sbb
leave
cmpsl
add
sbb
cmc
and
pusha
aaa
incl
push
push
scas
jl
sbbb
adc
jo
jno
cmp
adc
fimull
mov
dec
push
mov
sub
aam
push
es
inc
je
sub
inc
outsb
xlat
xor
push
nop
push
add
or
and
and
mov
sbb
or
stc
clc
push
lock
in
jecxz
xchg
xor
lahf
and
loop
fisttps
adc
orl
cmc
add
es
push
in
pop
and
rol
push
outsb
stos
aaa
mov
aaa
or
jmp
sub
lret
sbbl
adc
mov
cmc
or
fsubr
xorb
pop
jo
jns
ret
sub
es
inc
jge
add
push
push
push
daa
jmp
add
xor
cmp
scas
dec
ss
push
ja
jno
push
inc
movd
ja
jo
pop
push
and
adc
adc
dec
pop
xor
pusha
dec
or
das
xchg
push
and
add
adc
mov
in
lret
imul
add
dec
orl
adc
test
mov
push
push
movsb
scas
and
inc
pop
lock
jge
or
add
push
cmpb
push
mov
mov
jnp
add
cwtl
dec
divl
xor
ja
les
ja
push
and
aad
mov
nop
scas
jp
mov
dec
fists
cmp
popa
aas
jmp
sbb
mov
adc
sbb
xchg
pushf
jmp
je
enter
xchg
xchg
test
je
or
and
in
or
adc
and
push
sbb
add
xchg
sub
dec
test
cmp
ljmp
test
sbb
daa
cmpsb
out
mov
adc
xor
add
add
adc
mov
inc
cmp
fimull
sbb
aam
lahf
pop
mov
inc
lods
add
hlt
jbe
push
andl
mov
jnp
shrb
sub
adc
sub
jg
rclb
push
jne
sbb
cmp
adc
cmp
ficoml
adc
adc
pop
movsl
add
jns
and
dec
fsubrp
lea
dec
xor
lea
dec
or
mov
cmp
inc
xchg
or
sbb
sub
sbb
pusha
sbb
xor
pop
loopne
test
sub
xor
scas
out
or
mov
cmp
jne
mov
pop
mov
cmp
mov
subl
dec
dec
xor
jbe
mov
loope
ja
dec
adc
sbbl
and
sub
or
mov
adc
jne
je
mov
jmp
jo
sub
xchg
or
inc
xchg
pop
orl
pop
testl
mov
sub
and
enter
adc
xchg
jbe
leave
dec
imul
or
pusha
xchg
or
adc
mov
lea
inc
push
jle
jne
cltd
mov
pop
sub
iret
push
sbb
adc
mov
push
in
les
testb
ret
add
mov
xorb
loopne
jne
mov
aad
xchg
lods
push
rcr
cmp
add
sbb
and
test
or
jle
or
jbe
bound
add
mov
dec
cmpsb
out
test
sahf
in
mov
lods
cmp
sub
fsubl
dec
add
or
loopne
xchg
add
push
pop
push
push
testl
aad
lods
xor
or
adc
push
fstps
dec
xor
imul
sbbb
scas
inc
mov
mov
fwait
push
lods
sbb
pop
mov
cmpsb
xlat
push
decb
pop
add
pop
movl
daa
ficoms
flds
adc
es
add
xchg
in
sub
jg
and
decw
jecxz
ljmp
outsl
push
sbb
sub
jno
pop
shlb
mov
inc
arpl
call
xorb
in
and
test
sti
mov
in
or
adc
sub
cmpl
inc
out
push
pop
xor
cwtl
sar
iret
push
sub
lea
push
adc
test
ss
ja
mov
mov
mov
insb
sub
or
inc
hlt
adc
push
ret
cmpsl
out
inc
or
adc
pop
adc
jg
adc
push
jo
xchg
mov
es
cmpsb
or
adc
dec
aam
or
and
mov
outsl
es
add
mov
inc
and
fwait
rcll
mov
lds
push
inc
into
pop
lret
sub
pop
push
push
and
and
addr16
stos
jne
adc
adc
xchg
pop
ss
and
xor
rcrb
rcrb
push
test
icebp
jmp
dec
dec
push
xor
repnz
mov
pop
movsb
jo
pop
cmp
mov
pop
arpl
xchg
push
pop
sbb
adc
out
imul
inc
inc
adc
cwtl
adc
std
add
push
jns
pop
pop
in
adc
mov
loope
xlat
or
rcll
add
rcr
clc
add
mov
mov
pop
je
and
xchg
pusha
sub
add
ret
mov
test
in
in
fisubrl
pop
imul
inc
rorl
pop
push
adc
and
inc
movl
faddl
pop
or
pop
imul
fldz
and
add
and
cmp
and
scas
jge
add
sub
pop
xor
cmp
adc
fidivs
into
push
cmp
inc
fidivl
push
sbb
incb
pop
mov
ret
sbb
pusha
add
ret
inc
xlat
fiaddl
add
add
xchg
nop
pop
push
xchg
or
adc
in
mov
inc
enter
loopne
test
lea
loopne
movsb
in
pop
fisttpll
mov
push
in
mov
shlb
cmp
fsubs
mov
jmp
push
or
lock
adc
or
jnp
jg
iret
pop
and
mov
add
cltd
outsb
test
pop
add
jle
jne
test
loop
dec
rcrl
cmp
jl
aas
mov
inc
push
cmp
jle
cmp
jp
push
cmp
cmp
mov
dec
add
add
inc
jmp
bound
incl
sahf
push
movw
jns
and
push
mov
andl
scas
data16
lds
xor
cltd
pop
idiv
clc
fidivl
or
ds
dec
inc
movsb
or
or
push
adc
or
push
jnp
jnp
pop
iret
push
shll
add
add
flds
push
push
hlt
pop
inc
cmp
push
xor
dec
mov
mov
pop
or
xchg
pop
sbb
or
mov
bound
cmp
popf
cmpsl
test
and
movsl
or
adc
and
adc
or
cmp
and
inc
das
int
enter
cmp
push
mov
sub
sbb
cmp
mov
cmp
cmp
add
es
dec
add
popf
sbbb
shll
les
or
fcoml
pop
pop
pop
sub
les
mov
and
and
or
mov
xchg
xchg
or
nop
addr16
mov
dec
cmp
dec
ficoms
mov
fdivrl
push
insl
add
add
push
pop
popf
out
loopne
mov
stos
outsl
sub
add
jnp
daa
cltd
loopne
pop
adc
adc
fwait
add
pop
mov
pop
sub
pop
dec
push
and
sub
push
test
mov
sbb
sbb
xchg
lock
sub
sbb
shll
inc
or
and
xor
popa
add
push
dec
sbb
test
adc
popa
and
fcmovnbe
push
push
adc
cmpsl
add
inc
stc
and
imul
cmp
loope
sbb
xor
xor
sbb
mov
and
sbb
popa
jb
xchg
aad
sub
mov
adc
fisttps
fwait
pop
inc
sbb
xchg
stc
add
jbe
dec
enter
push
outsb
sub
jnp
pop
mov
xchg
sub
fstl
or
pushl
xchg
lcall
rcll
arpl
lods
aad
sbb
jmp
mov
xor
push
jo
data16
and
cmp
popf
test
adc
add
subb
in
mov
dec
fs
leave
xor
xchg
adc
adc
imul
mov
pop
add
cltd
inc
dec
hlt
shll
inc
add
loopne
mov
test
ret
push
rorl
lods
push
or
jo
lods
mov
shrl
and
je
jo
mov
add
mov
shrb
adc
lahf
rorb
in
popa
test
loope
rclb
pusha
les
pop
nop
adc
ret
sbb
adc
inc
mov
and
and
mov
imul
push
movsb
xor
adc
fdivs
stc
sbb
sub
add
ja
rcl
cltd
or
adc
das
cmp
xor
xchg
out
adcb
sbb
shll
leave
lock
add
dec
add
xchg
mov
or
nop
inc
outsb
and
lods
mov
arpl
and
fwait
adc
and
xchg
sbb
dec
leave
xchg
testb
or
inc
jno
adc
icebp
xchg
push
xor
enter
mov
add
pop
inc
out
fiaddl
xchg
pusha
outsb
pop
or
cmp
insb
movb
dec
ret
fldcw
and
push
jb
jecxz
xor
mov
push
or
and
std
mov
cmp
inc
pushf
insl
xchg
fnstcw
insl
jo
add
aam
push
lock
add
dec
test
arpl
pop
lods
or
ja
jl
pusha
cmp
sbb
stos
cmp
jne
mov
push
outsb
jns
pop
scas
lock
add
push
rcll
sbb
loope
subl
push
inc
push
jo
loopne
fildl
or
sbb
xchg
add
in
jne
push
pusha
shll
xor
dec
sarl
les
xchg
cmp
jb
dec
sti
add
add
addb
lahf
jg
sub
in
adc
lods
loopne
mov
addl
and
andb
and
dec
insl
xchg
add
or
adc
adc
dec
shlb
mov
lock
mov
pop
mov
fs
jo
ret
das
flds
xor
jle
ffreep
jecxz
add
insl
xchg
adc
loopne
xchg
cmp
mov
xchg
lahf
ss
mov
or
fisubl
and
push
mov
xor
push
pop
jnp
in
orb
es
mov
mov
out
mov
mov
loop
and
mov
incl
cli
sbb
add
aas
mov
fnstsw
test
je
sbb
add
dec
imul
mov
sti
push
fldl
push
sbb
xchg
loop
sbb
fstpl
and
inc
fstp
pop
into
fstpl
pop
jge
sub
mov
shlb
fnsave
jnp
xchg
loope
cld
testl
fsub
pop
fsubrp
jp
cmp
into
adc
rorb
outsb
pop
mov
jle
inc
aaa
dec
cmp
ljmp
nop
inc
jg
cmp
push
or
mov
jnp
rol
cmp
lods
or
and
dec
dec
shll
and
adc
stc
jge
or
aaa
xor
sarb
xchg
lods
dec
add
imul
cmp
pop
or
test
xchg
negb
test
int3
jnp
and
in
ret
ja
push
mov
or
out
rcll
and
add
or
cmc
xor
faddl
jbe
repz
or
push
sub
and
insb
mov
mov
mov
fmull
mov
or
add
push
cmp
xor
clc
jge
fbstp
push
lea
cmp
jb
stos
xor
shld
loopne
sub
cmp
ja
jb
mov
push
lea
push
push
and
and
push
je
adc
pop
inc
inc
or
outsl
mov
push
mov
push
push
and
or
or
cli
adc
push
push
push
pop
add
xchg
mov
pop
pop
dec
adc
dec
jns
xchg
jecxz
and
loopne
arpl
roll
add
push
lcall
sbb
ja
ljmp
fwait
in
adc
lret
ja
push
adc
sbb
push
mov
loope
and
add
jns
jle
ss
cmpsb
dec
inc
cmpw
jne
adc
inc
inc
cld
push
in
cmp
push
mov
push
jl
aaa
shrl
lea
sti
jg
stc
std
mov
or
imul
inc
or
pop
loope
lock
push
push
push
or
add
push
dec
and
es
inc
and
arpl
push
push
push
dec
mov
pop
push
popa
jecxz
push
adc
fimull
in
lods
in
or
cltd
arpl
pop
imul
enter
rcr
sbb
mov
add
nop
dec
loope
mov
pop
or
add
mov
push
aaa
pop
fdiv
into
mov
mov
scas
imul
test
cmp
outsb
pop
in
xor
and
or
add
mov
addr16
in
jmp
addl
dec
ljmp
test
xlat
loop
insl
or
out
or
push
les
sub
sbb
xlat
or
adcl
imul
sub
sbb
add
jo
sbb
push
cmp
sub
dec
cmpsb
nop
add
mov
push
xor
pusha
cwtl
inc
mov
stc
xchg
icebp
lods
ret
push
popa
xchg
shl
jno
xor
xor
jno
aaa
out
and
sbb
cs
cli
imul
xchg
or
or
imul
pushf
sbbb
and
or
inc
es
sbb
mov
pop
mov
or
xchg
cmp
adc
jo
ret
or
dec
sbb
push
mov
mov
jnp
in
add
xchg
lret
fadds
inc
arpl
cs
push
xchg
or
mov
outsb
out
push
mov
es
mov
adc
mov
clc
ficoml
push
rorb
dec
add
mov
inc
ret
loopne
adc
adc
sbb
push
cwtl
or
and
mov
popa
ja
test
and
cltd
lds
cmp
add
xchg
cs
mov
push
push
adc
ljmp
out
pop
add
rclb
inc
je
out
pop
sub
cli
and
push
add
sbb
mov
mov
mov
fs
xchg
scas
jl
jmp
push
push
push
push
adc
pop
push
stc
testl
jmp
push
shll
fnstsw
add
dec
push
pop
mov
mov
pop
or
jb
mov
jmp
push
sbb
jmp
sub
scas
sahf
push
push
push
or
lea
dec
xchg
adc
jnp
hlt
mov
mov
pop
jl
sbb
sarb
pop
cmp
push
and
cmp
push
ss
int3
pop
xor
sbbb
cmp
sbb
pop
sbbb
pop
xchg
and
dec
daa
sub
loopne
pop
lock
add
cmp
sub
xchg
sub
adc
adc
push
arpl
test
push
popa
mov
or
sub
or
in
jbe
and
push
dec
pop
jnp
pop
or
jo
insb
nop
push
lods
dec
mov
loop
push
jnp
pop
notl
pop
jae
xor
es
or
test
lea
movsb
imul
fsubs
mov
pop
shll
pop
jg
xor
inc
pop
out
pop
lahf
xchg
adc
adcb
adc
outsl
jns
ret
sbb
push
push
and
out
sahf
out
cmp
out
sahf
bound
jg
mov
sahf
out
ror
fucomip
repz
out
decl
mov
sbb
sub
cmp
iret
repz
jno
xchg
fwait
cmpsl
mov
lds
jae
fxch
cld
mov
pop
les
lock
pop
frstor
inc
subl
add
addb
fldt
push
xor
jo
xor
loop
mov
adc
sbb
sub
mov
int
sarl
pusha
jno
ja
arpl
mov
adc
or
fwait
jmp
dec
mov
mov
dec
mov
lds
push
enter
pop
cmpsb
test
mov
fisubl
out
fcompl
cmp
in
mov
test
fmull
xchg
mov
mov
pop
faddl
adc
das
xor
push
add
sub
subl
and
je
mov
xchg
sti
dec
test
mov
add
sar
xor
scas
jb
sti
aas
daa
sub
jbe
les
ja
shlb
imul
js
mov
pop
push
cmp
push
xchg
inc
movsl
dec
mov
lcall
add
inc
ljmp
pop
mov
repnz
jbe
movsb
sbb
mov
and
testb
popa
lock
sub
sarb
mov
push
push
sar
jnp
adc
enter
cmp
sbb
ror
jno
dec
dec
jmp
or
enter
inc
lcall
push
cs
bound
and
decl
sub
mov
inc
pop
iret
inc
scas
add
add
adc
push
mov
sbb
test
shlb
jecxz
pop
adc
inc
jp
adc
aad
test
arpl
lahf
and
or
mov
rcll
or
add
fstps
add
ret
jno
xor
jmp
add
adc
sbb
hlt
and
mov
or
push
out
sbb
out
sbb
aad
loopne
cmpl
movsb
clc
mov
xchg
fwait
je
jmp
cmp
or
in
sub
imul
sub
sti
add
int3
mov
or
sub
xor
mov
cwtl
div
push
popf
xor
aad
inc
push
xor
ret
sub
push
push
in
lahf
push
xor
es
out
push
cs
fdivrp
dec
shlb
dec
push
das
mov
mov
test
je
incl
lret
scas
imul
xor
mov
popf
nop
pushf
xor
jle
sbb
xor
pop
mov
sbb
pop
rcrb
xor
das
pop
rcrb
jo,pn
pop
rcrb
sub
sub
pop
shrb
enter
mov
imul
mov
jg
ss
movsb
xchg
imul
add
mov
into
stos
adc
je
or
push
aaa
lret
enter
cmp
testb
shlb
aas
sub
pusha
sub
add
stos
jmp
add
and
xor
mov
lret
in
out
add
and
movsb
bnd
inc
jb
push
pop
jb
sbb
test
add
jae
jae
repnz
sbb
enter
sbb
inc
push
mov
jb
nop
push
nop
and
test
and
mov
mov
sbb
and
cltd
pushf
addr16
test
in
xor
test
or
pusha
aad
and
inc
subl
lret
xchg
rcr
mov
sbb
bound
inc
adc
popf
insl
mov
cmp
push
mov
or
pop
and
mov
enter
popf
mov
nop
imul
aaa
rcrl
imul
jle
adc
int3
mov
dec
dec
sarl
cmp
mov
jp
cmc
sub
scas
daa
in
movsb
pop
movsb
aas
push
pop
xlat
mov
cwtl
xchg
inc
push
push
cltd
or
ds
nop
cmp
in
aaa
xor
add
mov
add
ss
or
inc
lcall
rcrb
sbb
loop
sarl
dec
aam
mov
push
inc
push
pop
addl
out
or
dec
fisubl
jle
jmp
jge
inc
lea
mov
cmpsb
or
push
jne
fisubs
and
and
test
or
cmp
push
xor
add
add
xchg
ret
mov
cmpl
js
stos
inc
sbb
pop
dec
jle
and
add
aaa
cs
fwait
xchg
test
xchg
push
push
cli
pushf
test
mov
addl
aam
imul
popa
lret
and
push
aad
lods
or
pop
sub
pushf
clc
test
add
andb
sbb
adc
loopne
es
xor
ret
cmp
sti
add
and
add
or
mov
xor
fisttps
push
or
loopne
adc
add
in
jle
mov
sar
inc
mov
mov
ds
xor
cmp
push
pop
mov
out
ja
push
in
jo
or
cltd
or
xchg
push
mov
pop
sbbb
dec
cmp
mov
mov
inc
mov
or
stc
nop
push
sbb
and
pop
cwtl
ror
paddusb
and
pop
lret
pop
cmp
inc
adc
add
mov
int
mov
xor
or
lock
adc
repz
enter
adc
pop
sbb
push
test
int
outsl
pop
push
pop
xchg
push
dec
push
jb
mov
push
aam
enter
movsb
xor
push
movsb
push
test
jl
dec
enter
push
dec
dec
mov
push
pop
pop
mov
mov
cmp
test
rolb
lahf
pop
cmp
mov
into
mov
push
adc
lods
inc
sbb
adc
and
movsb
mov
int
cmpl
inc
sbb
push
xor
xchg
fwait
jno
add
nop
jmp
mov
adc
out
xchg
adc
leave
dec
adc
test
lfs
adc
add
nop
or
movsl
mov
leave
mov
adc
dec
dec
jo
push
xor
push
pop
pop
inc
loopne
add
outsl
add
inc
xor
cmp
or
outsb
cmp
aas
pop
add
outsb
inc
xorl
lock
push
out
sub
loopne
cmp
movl
pop
movb
or
add
push
dec
jne
add
mov
test
int
rclb
lea
add
jl
faddl
test
hlt
xorl
popa
cmp
mov
inc
data16
xchg
call
inc
adc
cmp
pop
add
rclb
or
xor
push
decl
test
push
mov
shrb
mov
xor
add
adc
jns
or
xchg
dec
je
rcrl
xor
cmc
push
das
or
push
sbb
clc
roll
cmp
mov
loopne
nop
adc
adc
rol
adc
cmp
and
sbb
xor
in
adc
xor
ret
insb
dec
xchg
xor
adc
dec
ja
cmp
push
mov
sbb
xchg
pop
pushl
adc
mov
insb
jo
cmpsl
cmc
in
jne
pop
inc
xchg
push
inc
mov
xor
mov
sbb
adcb
cmp
push
sbb
mov
push
mov
mov
les
bound
jbe
push
sub
sbb
inc
imul
and
in
and
or
adc
or
sti
daa
insl
testb
iret
and
scas
in
inc
lcall
ret
sub
sub
dec
sub
mov
rclb
xor
pusha
xchg
push
into
sub
inc
and
xchg
pushf
std
and
mov
dec
jbe
dec
ret
add
sub
cmpl
adc
xchg
mov
and
push
sbb
cmp
dec
es
add
pop
xchg
andl
test
movsb
test
xor
mov
mov
addr16
inc
pushf
push
push
fs
sbb
dec
clc
test
lea
test
mov
adc
adcb
sbb
mov
sbb
sbb
push
or
jge
inc
inc
dec
sub
pop
sti
sub
mov
push
xchg
jae
das
clc
pop
add
mov
loop
sarb
lret
fadds
inc
or
push
ret
fcomp
fsubr
jne
push
dec
add
and
inc
dec
movsb
xchg
mov
inc
fwait
or
sub
cmp
xor
shlb
test
test
pop
cs
nop
adc
int
inc
add
fsubl
or
sub
inc
retw
and
std
inc
adc
mov
jnp
mov
dec
cmp
jbe
push
pop
or
and
nop
jmp
cmpb
into
sub
sbb
add
clc
dec
movsb
or
cmp
and
sub
jmp
adc
cmpsl
or
pusha
inc
cmp
push
fucom
sub
inc
fstpt
and
pusha
jg
popf
ret
add
or
mov
cmp
fsubs
loope
mov
pop
add
stos
dec
add
dec
nop
push
loopne
jnp
inc
out
data16
mov
push
lods
jg
mov
mov
add
addl
jb
adc
dec
sub
leave
jne
addr16
aam
xor
cmp
pop
mov
adc
xlat
jbe
pop
fabs
dec
adc
cmp
jne
inc
rol
jb
mov
inc
jmp
jmp
das
addb
hlt
subl
add
mov
movsb
pop
adc
inc
dec
mov
das
test
enter
jae
inc
pop
test
cmp
or
iret
je
mov
rorl
mov
jmp
and
pop
inc
mov
xchg
xor
shll
or
lock
popa
inc
insb
sar
adc
pop
mov
cs
aam
push
in
mov
or
das
xor
pop
xchg
sbb
inc
xor
xchg
xchg
adc
aad
aam
or
ds
imul
push
popa
and
push
cmp
or
push
or
cmc
xchg
xlat
adc
cmp
push
and
jne
xlat
push
push
pop
xor
or
push
pop
or
shrb
sbb
sbb
cmpsb
popf
jo
add
fdivrp
sbb
arpl
mov
lcall
test
fmul
mov
into
push
jmp
add
xlat
adc
adc
inc
das
add
mov
xor
push
push
xlat
imul
negb
pop
data16
fdivr
jmp
cmp
jl
or
je
cmp
or
incl
and
mov
movb
movsbl
shr
mov
imull
dec
repnz
mov
nop
push
mov
rolb
fidivl
pop
jb
jle
movsl
out
sub
pop
push
mov
sbb
sbb
or
and
cmp
mov
test
adc
outsl
mov
test
cmp
push
mov
mov
lods
push
or
pop
adc
testl
push
xor
sub
pop
add
mov
or
fucom
or
insl
pop
mov
add
add
call
cmp
je
dec
and
dec
cmp
dec
push
xchg
lods
push
in
gs
xor
into
loope
push
hlt
lds
mov
rclb
test
pop
jnp
sbb
lods
sbb
add
add
mov
add
dec
loope
jo
dec
push
inc
add
enter
aas
rcr
mov
inc
jb
or
jae
test
jb
shll
inc
in
jp
loop
lret
jns
jge
loopne
dec
movsl
jl
in
jae
push
inc
sub
add
jecxz
adc
push
stos
arpl
addr16
sub
push
bound
sub
outsl
pop
ret
ja
inc
dec
jno
jp
adc
dec
repz
inc
adc
sub
xlat
rcrb
push
sbb
jae
and
data16
leave
mov
add
lea
sbb
mov
pop
adc
mov
aad
jge
pusha
in
daa
adc
ror
mov
mov
mov
xor
iret
push
pop
daa
and
xchg
subb
lods
pop
shlb
jg
lock
push
xchg
inc
adcl
add
and
mov
stc
xchg
or
fcomps
push
xor
adc
add
das
add
sbbb
add
sub
pop
push
sub
mov
scas
xchg
aam
enter
push
and
clc
pushf
or
test
sbb
dec
mov
jg
push
pop
fistps
sub
dec
jns
or
mov
pop
adc
sbb
push
pop
or
movb
test
inc
faddl
mov
cltd
andl
arpl
dec
pop
and
or
dec
in
cmp
adc
push
xchg
dec
aaa
adc
or
pop
test
cmp
loopne
movsl
jnp
packuswb
cmpsl
ljmp
enter
and
rcl
fnop
lods
aam
lea
or
and
dec
sub
popa
xor
sub
shll
pop
lahf
sbb
add
sub
test
add
fsubrl
iret
pusha
and
push
and
sbb
sbb
cmp
xchg
cs
xor
or
sbbl
pusha
push
jmp
or
sbb
scas
rorl
aaa
mov
das
mov
ret
pop
sarb
pop
subl
jns
outsl
insl
mov
add
dec
pop
cmp
fsubrs
pop
push
push
sub
popa
xorb
push
test
jmp
xor
pop
mov
les
iret
call
les
je
aad
loop
mov
sbb
jmp
in
in
nop
or
mov
xchg
or
pusha
shl
xor
loope
dec
and
lcall
add
sbb
into
sub
mov
mov
ss
ds
mov
adc
je
je
mov
adc
dec
cld
add
add
sahf
adc
movsl
mov
push
xor
jne
je
inc
push
inc
mov
cmp
jl
or
js
nop
cmp
in
mov
arpl
mov
mov
sbb
jl
pushf
iret
test
adc
inc
cmp
mov
adc
stos
push
cmp
sbb
fidivrl
pop
sub
mov
decb
xchg
or
fisttpl
cmpsl
push
adc
jbe
ret
inc
jnp
mov
mov
jo
lods
mov
dec
mov
inc
jne
push
and
adc
dec
xchg
add
cmp
dec
test
ficompl
lea
dec
xchg
call
dec
push
mov
jp
xor
outsl
pop
cmp
imul
rorb
xor
xor
add
lods
test
insl
jge
xor
scas
jb
clc
inc
das
je
jge
jne
pusha
mov
mov
shrb
inc
lea
and
inc
sbb
xchg
jb
sahf
sub
sbb
sub
dec
in
out
jnp
cmp
jne
es
loopne
shl
in
pusha
jne
jno
inc
lret
pop
jbe
mov
sbb
or
add
and
fcmovne
and
xor
dec
or
sahf
push
sub
sub
push
push
mov
add
cmp
nop
sarl
addr16
sbb
cmp
sbb
icebp
mov
mov
cmp
add
adc
nop
add
adc
clc
mov
cmp
or
stos
add
ret
ja
mov
jbe
cmp
test
mov
lcall
add
inc
or
sub
pushf
notb
inc
test
lea
cs
add
pop
sbb
inc
fwait
nop
inc
sbb
inc
aaa
add
cmp
fwait
add
sti
pop
ret
ret
xchg
movsb
inc
inc
xor
adc
addl
sbb
xchg
push
mov
push
fldl
push
mov
push
sbb
inc
data16
jne
adc
adc
jne
daa
jle
lahf
ja
jne
adc
hlt
jne
or
jne
sub
clc
push
rorb
pusha
test
cs
inc
pop
mov
pop
cmp
ljmp
or
sbb
add
das
sbb
enter
pop
les
xor
test
fstl
mov
jge
mov
mov
pop
hlt
lea
ret
and
jne
fisubrs
adc
arpl
cmp
psllq
out
into
pop
das
push
out
add
pop
cmp
sub
jmp
je
mov
scas
addr16
add
dec
mov
or
push
pop
scas
sub
int3
int3
pusha
lea
or
rorl
aas
fadds
jmp
clc
adc
lret
fwait
xchg
cmc
mov
adc
sub
fcomps
rolb
inc
lea
xor
adc
adc
mov
add
fidivrs
dec
or
cmp
cs
cmp
or
jmp
push
ss
jo
out
ficoml
inc
loopne
or
mov
and
jno
jo
mov
xchg
dec
inc
mov
and
nop
mov
pop
orl
pusha
fidivrl
or
test
mov
jb
or
fs
pop
and
add
jne
push
into
mov
or
lods
and
enter
xchg
mov
lea
insb
pop
add
icebp
mov
cld
mov
orb
inc
xor
mov
jo
addb
cmpb
and
or
add
shlb
fnstsw
fmuls
rorb
or
or
fiaddl
push
sub
int3
xor
test
xor
shr
add
inc
dec
add
inc
pusha
enter
jns
fildl
and
arpl
leave
dec
and
mov
je
popa
xor
mov
test
popa
je
xchg
push
mov
sarb
push
loopne
xchg
stos
les
dec
xor
pop
mov
dec
insb
push
pushl
nop
enter
gs
roll
cmp
icebp
and
imul
sbb
orl
push
fadds
pop
cmp
jo
push
mov
sub
pop
or
je
gs
add
bswap
cltd
sub
jmp
xorl
test
clc
cwtl
and
aaa
dec
sti
mov
pop
dec
jp
lret
in
jg
push
dec
mov
push
mov
add
cmp
dec
pop
icebp
sarl
aaa
loope
cmc
fs
imul
lea
into
sub
int3
xor
xorl
push
inc
movsl
jmp
xor
pop
dec
sbb
adc
mov
sbb
enter
and
cmp
call
adc
sti
fsubrs
mov
sub
cmp
in
adc
fwait
nop
addr16
sub
pop
or
push
sbb
sbb
or
xor
jecxz
jle
lret
xor
and
dec
dec
xor
adcl
rorl
inc
jg
xorb
pop
and
rolb
add
daa
stc
and
pop
inc
sub
xor
lcall
pop
adc
clc
push
pusha
lods
test
adc
jae
mov
dec
cs
and
cltd
sub
pop
shrl
loop
sub
pusha
popf
or
outsl
sub
je
insb
cwtl
nop
bound
add
add
imul
sub
or
jg
mov
in
je
jno
je
stos
add
inc
rorl
and
inc
or
sub
cmp
and
js
xchg
xchg
hlt
jg
clc
divl
sub
pop
testb
sbb
mov
push
sbb
fdivrl
loopne
adc
xor
cmp
addl
sti
dec
jne
movsb
push
cmp
cmp
leave
lods
test
mov
test
add
xchg
pop
rorl
test
movl
icebp
cmp
cmp
test
les
test
pop
inc
call
mov
xchg
fldpi
lods
or
in
call
les
xchg
xchg
xchg
add
jmp
shl
inc
add
icebp
sbb
add
or
lods
mov
js
jge
jecxz
mov
in
push
lock
mov
xchg
lods
adc
lock
test
sbb
mov
mov
pop
jae
mov
cmpsb
add
add
mov
adc
mov
ficoml
adc
xchg
mov
cmc
push
pop
paddsb
jo
ja
xchg
lods
inc
mov
jmp
mov
xchg
sbb
push
dec
int
rolb
sub
push
fsubl
shlb
push
cltd
dec
inc
mov
xor
jecxz
syscall
adc
icebp
sbbl
lock
jns
cmp
adc
xchg
mov
ljmp
and
jne
mov
rorb
ljmp
jl
or
mov
jmp
or
inc
add
push
xor
bound
xor
fimull
in
aaa
add
adc
in
push
sub
add
daa
faddl
sub
and
mov
mov
pop
jno
xchg
mov
or
imull
inc
das
add
xchg
sbb
add
js
xor
push
shll
and
add
mov
push
mov
out
xor
mov
adc
dec
sub
mov
xchg
sub
pusha
sub
inc
push
push
or
inc
ss
mov
lods
arpl
in
mov
mov
rol
stos
sub
dec
push
loopne
nop
popf
mov
das
cltd
pop
jmp
out
xchg
aam
jp
ds
divb
sub
adc
ficompl
add
add
inc
test
dec
cmpb
fdivrl
test
add
add
mov
sub
hlt
jns
pusha
in
or
mov
jbe
xor
mov
sbb
addb
push
je
shll
xchg
push
orb
add
cmpsb
sbb
add
sti
sub
sub
pushl
pop
test
addr16
pop
popa
loopne
ja
add
sbbl
shrb
pusha
mov
shrb
jmp
xor
mov
pop
ss
add
inc
push
push
push
add
test
mov
jo
sbb
xchg
inc
flds
xchg
sub
ror
and
aas
push
mov
adc
mov
aas
idivb
lock
aas
mov
rcl
pop
or
mov
sbb
fidivs
or
and
js
push
popa
jo
and
mov
fisubl
push
jb
movsl
jne
or
test
xor
or
mov
je
or
nop
std
cmpsl
cltd
xor
add
sbb
xchg
ret
clc
add
push
push
cmp
mov
es
loopne
pop
sbb
hlt
jae
movsbl
movsb
mov
mov
sbb
cli
xchg
cmpsb
rorb
add
sbb
mov
push
ds
jmp
enter
ret
incl
mov
dec
inc
inc
lock
outsb
or
jecxz
or
add
inc
cmp
jl
mov
mov
pop
add
sar
xor
or
xor
mov
pop
xor
ss
cmp
jecxz
lahf
lods
add
or
lret
shr
sub
mov
mov
dec
jne
sldt
lods
ret
fcompl
lcall
xorb
and
xchg
in
mov
test
sbb
add
or
sbb
pusha
lea
roll
cli
ret
add
addl
adcb
fiaddl
jl
mov
mov
or
jle
insb
dec
popa
mov
cli
mov
das
mov
pop
cli
js
inc
mov
lods
ja
dec
add
fstpt
arpl
shrb
mov
sbb
add
mov
jg
add
adc
mov
mov
lds
mov
xchg
or
push
pop
sub
mov
fcomp
push
adc
ss
mov
pop
cmpsl
push
xor
loope
push
xor
mov
sbb
adc
xchg
or
pop
in
dec
leave
sbb
adc
inc
xchg
cmpsl
dec
add
xchg
insl
sahf
or
add
jo
stos
sub
and
outsb
ja
ret
insl
gs
je
add
leave
loopne
mov
or
leave
pop
push
xchg
loopne
sbbb
jecxz
push
pop
out
pusha
loopne
push
es
into
lret
in
adc
sbb
test
pop
add
xchg
inc
mov
cwtl
imul
xchg
in
push
push
mov
and
add
inc
lcall
inc
mov
in
xor
push
addb
aam
ss
dec
js
out
cmp
into
fsts
rolb
pusha
inc
test
sub
in
push
mov
sti
lret
int3
cltd
incb
cltd
inc
sbb
lea
sbb
jp
aaa
mov
mov
stc
dec
mov
lea
sbb
insl
loopne
sub
lret
sbbl
jp
adc
aaa
in
pop
fadd
dec
aaa
test
jg
lds
or
pusha
arpl
sub
jmp
sub
inc
sahf
mov
enter
push
lock
cmp
aas
inc
jo
adc
dec
dec
push
hlt
imul
ret
sbb
ljmp
call
dec
add
add
loopne
dec
imul
adc
mov
add
dec
xor
adc
add
nop
aam
loope
push
cltd
scas
daa
jmp
sarb
jp
lock
jl
xchg
rcll
mov
sarb
movsb
sub
aad
lret
mov
ret
add
jno
in
ss
and
pop
aam
jle
lcall
sarl
mov
divl
loop
sbb
or
aaa
mov
daa
adc
or
mov
sub
call
cmp
sbb
ret
xchg
pop
mov
fwait
adc
add
add
int3
pop
mov
dec
int3
or
fwait
cmp
and
cmp
icebp
aas
push
pop
cmp
mov
mov
sub
loope
cmpsb
je
jne
lods
or
or
xchg
mov
les
dec
pop
or
les
and
push
and
mov
sub
mov
cld
xchg
mov
lret
dec
ljmp
aam
add
mov
rclb
pop
sub
psubusb
dec
pop
dec
aam
jo
dec
push
pop
mov
fcmovu
sbb
cmp
jl
cwtl
loopne
fdivrl
clc
mov
pop
jge
and
mov
repz
push
sbb
pop
mov
daa
movsbl
add
add
xor
idiv
xchg
add
mov
fdivrl
out
test
lock
dec
out
test
sbb
inc
insb
add
movb
cs
mov
insb
add
and
adc
shlb
ss
or
dec
push
dec
xchg
scas
dec
pop
lea
roll
ds
inc
mov
push
xor
mov
cmpsl
jo
movlps
data16
mov
aas
sbbb
rorb
mov
xor
iret
popf
pusha
xor
lods
pop
fistpll
loopw
xor
je
xchg
add
add
add
ret
cli
sbb
xchg
subl
jns
rcrb
mov
imul
add
and
js
pop
in
pop
popf
xchg
jge
mov
mov
stc
mov
mov
dec
xlat
std
daa
clc
pop
mov
xor
loopne
loopne
xchg
sub
movsl
clc
xor
arpl
cmpsl
sub
pop
lods
popa
xchg
inc
or
loopne
dec
dec
jl
repnz
andb
push
fmull
or
clc
add
mov
add
fisttps
jbe
mov
inc
mov
mov
cmp
jl
dec
clc
addl
int
mov
jle
sub
push
icebp
or
cmpb
mov
mov
add
or
lods
lods
add
push
mov
nop
and
dec
nop
add
or
cld
push
leave
push
xor
cmp
jne
pop
lret
mov
cmp
jb
push
push
out
pushl
push
scas
dec
lret
add
movsb
mov
push
and
out
pop
add
inc
xor
jg
loopne
or
push
adc
test
add
pop
es
clc
in
in
jae
es
cld
push
in
nop
pop
mov
subb
pop
adc
aaa
adc
cmpb
imul
push
enter
mull
fbstp
inc
dec
mov
cmp
lahf
lret
push
scas
and
jge
lods
les
popa
xchg
inc
imul
loopne
and
xor
or
xor
lods
das
mov
dec
mov
xor
and
adc
add
adcl
jno
push
and
mov
nop
add
push
jp
xor
lret
push
imul
fdivrl
je
das
jl
mov
cltd
mov
pop
aaa
addr16
cmp
jmp
sbb
sbb
fs
lret
push
xchg
loope
add
mov
xchg
add
inc
dec
mov
sub
xor
pop
xor
add
xor
enter
dec
add
test
add
dec
pop
add
xchg
pop
xor
add
ss
xchg
inc
add
or
mov
sarl
adc
adc
call
cmp
js
push
cwtl
jno
je
lea
mov
ficoml
or
add
pushf
and
dec
cmpb
xor
mov
gs
std
cmpsb
mov
or
jmp
in
mov
es
add
std
jnp
push
mov
test
inc
and
lds
aad
sbb
jp
push
adc
popf
aas
jb
movsl
inc
pop
and
sub
scas
add
cmp
sbb
push
inc
mov
enter
adc
in
pushf
adc
dec
rorl
adc
aam
cmp
pop
pop
push
loope
add
icebp
add
add
les
mov
mov
cmc
push
pop
mov
pop
pop
and
sbb
pop
shrl
push
mov
jmp
push
mov
cmp
lock
call
scas
and
inc
or
jle
cwtl
dec
aad
xor
adc
adc
push
xchg
dec
loopne
sbb
dec
sti
and
faddl
popf
mov
add
and
push
test
cmp
cmpsb
cld
mov
loopne
mov
jbe
lcall
cmpl
add
insl
ret
roll
test
add
jo
in
out
adc
fwait
shrb
dec
andl
pop
add
sbb
adc
sbb
or
call
clc
and
je
out
popa
daa
loopne
out
fdivl
mov
je
roll
or
xor
cmpsl
rcl
xor
les
inc
mov
sbb
nop
jmp
pushf
movsb
xchg
in
mov
out
mov
cmp
adc
push
dec
fwait
movl
aas
or
and
push
shr
repnz
cli
mov
jg
fadd
ficompl
outsl
pop
fdivl
or
sbb
xchg
call
push
dec
test
sub
add
mov
sahf
sti
repnz
pop
sub
in
or
push
pop
je
mov
ljmp
add
push
or
adc
aam
popf
test
push
jmp
cmp
ret
adc
lock
into
mov
iret
xchg
rclb
mov
pop
movsb
rclb
int3
pop
cmp
rolb
movsl
pop
and
jle
mov
testl
adcb
jl
sub
jb
mov
or
add
fs
jmp
ret
loope
or
fucomip
and
stos
int3
rorb
pop
loopne
test
or
adc
push
cli
iret
pop
push
push
push
xchg
sahf
mov
sti
pushf
adc
jne
subl
and
sbb
lahf
imul
jo
mul
push
pushl
xor
loopne
cmp
or
cmp
js
hlt
xor
ljmp
jmp
push
pop
push
sbb
mov
icebp
cmp
add
sub
repnz
iret
or
ds
cmpsl
or
push
out
ds
sub
bound
xor
and
sbb
fdivs
mov
xchg
outsb
adc
shrb
outsl
gs
push
sbb
dec
sbbb
pop
leave
scas
jp
add
dec
xchg
out
sub
into
pop
aas
cld
shlb
bnd
fucomi
cmp
jo
ja
dec
jmp
js
jmp
mov
aaa
xchg
fidivl
push
adc
push
push
call
cmp
sbb
roll
and
jmp
xor
sub
push
jl
mov
pop
lock
add
pop
ret
dec
jmp
or
outsb
cmpl
shll
or
insb
dec
icebp
mov
dec
ret
add
xchg
jb
jge
aas
cwtl
sbb
pop
sti
pop
jno
mov
mov
aaa
add
popa
or
in
xor
in
je
mov
shrl
cmp
dec
fs
ret
inc
aaa
xor
mov
xor
adc
lods
gs
push
int3
fs
xor
cmp
sbb
sub
xchg
jl
jl
pop
add
xchg
jge
mov
xor
xor
xor
xchg
and
ret
jge
jae
sbb
cmp
fcmovnb
movb
insb
pop
jmp
cmp
mov
sbb
adc
inc
outsb
sub
pop
sahf
add
mov
push
and
orb
mov
pop
inc
ljmp
daa
sahf
test
lea
scas
movsb
jo
adc
je
and
ss
xlat
push
inc
and
sub
lods
adc
lea
dec
clc
sub
or
adc
sbb
mov
jo
js
pop
repz
add
inc
mov
dec
cmpl
mov
dec
xor
into
loopne
sub
jl
jae
fiadds
sbb
stos
and
test
inc
dec
movsb
cwtl
les
adc
or
lods
stc
push
pop
sub
adc
shlb
mov
add
mov
mov
xor
imul
fs
in
push
mov
push
cwtl
outsb
shlb
test
cmp
push
ljmp
in
testl
test
xchg
mov
push
mov
insb
push
pushf
lret
lods
add
or
pusha
pop
loopne
adc
xor
paddsw
or
and
jnp
std
jo
adc
adc
lea
test
xchg
or
adc
mov
loopne
addl
pop
sbb
enter
lods
jno
popa
rol
insb
and
icebp
jb
fucomp
adc
adc
jnp
push
mov
and
les
sbb
test
movsl
jge
mov
ret
sbb
dec
movsl
sbb
pop
fcomps
sub
cmpsb
dec
aam
mov
add
cmpsl
mov
ja
sub
fucom
sbb
cwtl
pop
adc
push
sub
fcoms
ss
jp
jge
jne
and
mov
subl
lea
inc
lods
or
push
test
imul
jge
loopne
pop
ret
pusha
adc
xchg
push
lea
clc
mov
arpl
stos
inc
and
movsl
addl
lret
js
add
xchg
imul
pop
cmp
sub
xchg
shlb
cmp
inc
add
andl
dec
lret
cmp
xchg
push
push
imul
imul
xor
add
jns
adc
repnz
scas
push
dec
jge
sub
stos
add
mov
pop
push
or
jecxz
data16
mov
lret
aam
push
rclb
jo
or
push
push
and
and
cmp
push
lret
outsl
lret
ljmp
xchg
shll
fmuls
je
arpl
dec
adc
pop
nop
decl
push
pop
or
lahf
push
push
imul
sub
or
sahf
inc
add
push
push
repnz
insl
iret
mov
or
movsl
es
insb
mov
scas
and
imul
shrb
inc
dec
sbb
test
dec
mov
enter
ret
dec
mov
sbb
mov
in
sub
push
push
jno
push
and
jo
pop
mull
inc
sbb
insl
mov
cs
and
pop
or
sub
and
push
inc
mov
jno
push
and
dec
inc
jnp
cmp
push
rolb
iret
sub
mov
pop
les
dec
push
xchg
mov
and
xchg
test
mov
aam
and
mov
sub
xchg
xlat
xchg
lods
pop
dec
jnp
xor
add
sbb
dec
dec
and
imul
in
add
xchg
jbe
outsb
sbb
not
rcrb
push
enter
lret
lods
mov
push
sub
dec
aam
mov
pop
shrb
jl
adc
pop
or
mov
jns
sub
push
adc
mov
or
orl
inc
push
test
sub
dec
mov
sbb
mov
sbb
mov
or
adc
sbb
jbe
jno
push
jnp
fsubs
movsl
inc
pop
test
jb
add
sub
or
pop
mov
mov
std
call
inc
mov
pop
push
fs
sub
push
mov
xchg
push
addb
mov
xor
loopne
add
inc
adc
movsb
dec
jae
or
or
lock
dec
sub
repz
leave
cli
jnp
add
push
jo
in
fisubs
int3
mov
and
sub
or
jmp
ss
inc
pushf
dec
imul
enter
or
mov
inc
lods
add
dec
lods
or
fdivrs
inc
scas
pop
shlb
or
mov
push
xor
push
add
rcll
or
mov
hlt
push
sbb
ret
cltd
jmp
fs
pop
movsb
sbb
jae
nop
call
mov
pop
mov
inc
cli
test
imul
mov
insb
clc
fwait
fs
ret
je
cmp
ss
and
push
jae
and
loopne
sbb
cli
jp,pt
bound
test
xchg
or
mov
push
sub
mov
and
cmp
jbe
mov
sub
push
mov
data16
lock
dec
out
pop
cmp
jbe
or
adc
dec
cld
push
xor
sbbl
xchg
jo
inc
mov
and
fdivrp
in
xchg
popf
jge
push
push
fbld
push
and
and
aam
jge
or
dec
fdivl
ret
repz
loope
add
or
insb
sbb
jb
sti
je
mov
jo
nop
push
mov
aam
push
cmpsb
push
fsubrs
clc
adc
jae
cmp
orl
mov
push
jg
cmp
jne
cmp
push
adc
cld
loopne
mov
jno
pop
adc
xor
dec
iret
adc
sarb
outsb
push
or
add
cmpsl
inc
xor
lock
mov
inc
ja
push
pop
push
out
outsb
and
add
mov
aaa
movsl
sti
insl
adc
add
mov
mov
and
incl
cmp
and
xor
lcall
cli
sub
jbe
cmp
jmp
mov
jp
push
push
dec
test
mov
cwtl
sub
cmp
sub
pop
dec
sub
xchg
fidivrl
leave
js
push
cs
cltd
cltd
push
ret
test
dec
cmpsb
repz
mov
insb
pop
pusha
or
sub
pusha
pop
adcb
mov
icebp
and
mov
jle
sahf
or
dec
mov
lock
mov
lock
or
dec
add
mov
mov
mov
out
and
jne
nop
jne
xlat
jmp
xor
add
mov
mov
push
cmp
scas
pusha
mov
push
mov
pop
mov
js
push
xchg
push
faddp
jge
push
ljmp
sub
sub
add
add
das
movsb
push
push
mov
sub
push
rol
bound
ljmp
add
inc
push
rolb
scas
push
push
jb
mov
dec
or
hlt
or
call
xchg
stos
mov
mov
mov
sbb
jp
cmp
nop
mov
adc
jne
xlat
lret
int3
ljmp
lods
xchg
popa
dec
hlt
jne
je
adc
sub
add
out
xor
outsb
and
add
insl
cli
cmp
pop
or
push
or
pushf
jae
sbb
cli
sarb
jmp
mov
clc
push
push
add
pop
inc
sub
ret
dec
cmp
dec
inc
or
lcall
mov
addl
popa
sub
test
pusha
lods
add
ljmp
sub
int
inc
sub
cmp
test
fstp
cmp
mov
mov
cmp
push
mov
add
adc
or
adc
push
aas
mov
inc
xchg
sub
push
adc
mov
insl
loopne
cli
push
and
mov
leave
push
mov
ds
xor
pushf
xchg
push
std
mov
jmp
hlt
std
fsubrl
jp
dec
push
adc
ret
dec
pop
fidivrs
repz
push
pop
mov
xchg
adc
jge
sbb
aad
insb
idivb
test
push
xorl
jo
out
sbb
loopne
or
pushf
and
pop
fwait
ret
cltd
cmp
mov
popf
pusha
loopw
cwtl
or
out
ja
jne
pushf
aam
js
push
push
or
adcb
add
movzww
test
push
test
out
jp
or
lret
cmp
xchg
xor
adc
enter
mov
decb
sti
mov
cmpl
xlat
xor
or
loop
adc
push
das
jmp
push
sbb
andb
push
sbbl
test
jl
pop
adc
or
push
cmp
sub
mov
mov
dec
vunpcklpd
sbb
sbb
or
pop
push
mov
push
lods
push
jb
jecxz
sbb
out
and
sub
js
push
dec
ret
pop
jb
loope
hlt
into
and
loopne
adc
add
dec
adc
mov
inc
loopne
inc
and
pop
xchg
rorb
in
pusha
pop
or
pusha
push
loopne
loop
xchg
push
sub
loope
vmovaps
dec
adcb
and
testl
in
xor
aam
mov
mov
dec
or
test
dec
and
adc
mov
in
jo
pushf
inc
xchg
push
es
dec
adcb
test
adcl
inc
andb
jp
mov
sub
test
adc
aad
aam
adc
xchg
out
xor
ja
ss
xchg
mov
add
and
and
inc
pop
cltd
dec
mov
pop
add
data16
adc
bnd
insl
xor
fs
nop
ds
sbb
repz
into
idiv
adc
push
adc
cld
enter
insb
add
add
sti
push
fs
cs
clc
xor
xorb
and
in
loopne
insl
insb
hlt
jne
mov
fdivrs
xor
pop
sbb
out
cs
push
jl
repnz
popa
mov
sbb
lret
std
jmp
mov
jge
push
pop
lock
pop
test
sbb
pushf
daa
loope
daa
jno
add
mov
cmp
sarl
test
cmc
fcmovb
cmp
adc
mov
add
add
loopne
rcrl
inc
subl
push
je
sbb
gs
test
or
push
lea
dec
outsl
jb
push
sbb
popa
adc
jne
and
and
cmpsb
jne
repz
int3
pop
or
mov
push
sub
push
xchg
fwait
into
js
dec
add
inc
or
mov
pop
cmpsl
sbb
rclb
retw
leave
sub
out
hlt
test
mov
cmp
xor
pop
pop
cmp
pop
or
push
pushf
push
cmp
add
roll
insb
inc
cmp
mov
test
inc
mov
cs
mov
aad
or
pop
push
sub
imul
mov
mov
out
push
loope
sub
mov
test
or
cld
jne
rorl
cmp
lock
insl
inc
loope
xor
das
outsl
push
xor
faddl
je
mov
testl
adc
cmp
jl
mov
jp
lret
sahf
mov
es
rorb
adc
and
loopne
pop
push
insb
sub
inc
sub
dec
dec
jns
call
mov
sub
daa
sbb
adc
adc
dec
add
imul
inc
add
jmp
xchg
aad
jl
add
inc
inc
add
hlt
push
roll
fdivl
mov
in
xor
or
cmp
or
inc
cwtl
add
fwait
or
add
mov
adc
adc
or
push
scas
js
xchg
jns
sbb
adc
push
test
pop
jle
add
aam
sbb
lcall
orb
add
and
push
pop
cmp
inc
sub
dec
movsl
sub
mov
adc
sub
pop
lods
xchg
shrb
subb
and
pop
cmc
and
push
test
sbb
enter
les
xor
jo
jo
ljmp
xchg
jge
and
sahf
xor
lods
lock
mov
es
das
and
push
mov
shlb
lret
inc
or
jnp
xchg
cmp
mov
add
adc
add
aaa
fcoms
addr16
dec
add
and
xor
ret
sbb
dec
enter
sbb
xchg
push
inc
or
adc
out
add
daa
xor
rorb
lods
pop
loop
pop
hlt
aam
mov
stc
imul
inc
sub
add
or
mov
jne
jle
or
and
in
xor
cmp
sbb
out
shlb
mov
inc
cmp
sti
movsl
stc
or
call
pop
cmpsb
icebp
mov
xchg
mov
jne
mov
aam
xlat
pushl
js
sahf
mov
cltd
dec
loopne
sbb
ror
push
fwait
push
add
enter
or
jmp
lea
cmp
push
in
movsb
push
lret
bnd
pusha
fcomps
rcrl
insl
in
test
lods
repnz
cld
sub
xchg
out
xor
push
es
dec
push
sub
xchg
sarb
push
stc
fcoms
popa
mov
mov
and
push
inc
xor
sarb
sub
mov
adc
fisttpll
push
pop
test
adc
aad
mov
pop
lea
jb
xor
inc
outsl
jp
or
mov
aam
sahf
sbb
sarb
scas
xchg
dec
dec
sub
test
or
mov
mov
enter
sarl
aas
jg
push
nop
xor
pop
shl
mov
mov
xor
mov
js
rcll
cmp
cmp
rclb
adc
insl
mov
sub
lret
pop
mov
push
mov
jmp
into
test
lretw
mov
xchg
dec
aam
inc
adc
jl
shlb
lahf
and
clc
addl
inc
mov
sub
mov
stos
jb
jne
cli
or
pop
sub
xchg
out
rcrb
push
jae
push
add
push
jne
push
push
je
xor
outsl
loopne
out
sbb
dec
insb
jne
pushw
mov
fs
jne
scas
aaa
xor
or
rorb
inc
mov
push
push
mov
mov
add
cwtl
js
cmp
je
add
push
or
inc
cmp
lcall
mov
pop
push
rolb
add
xor
lcall
mov
xchg
or
adc
outsb
jnp
push
imull
jnp
cmp
push
cmp
idivb
fisttps
je
rorb
or
aaa
push
push
jb
mov
xor
sbb
xchg
cli
xor
add
movsl
sbb
cmp
fsubrs
and
sbb
jns
insb
dec
rorl
adc
or
orb
std
mov
cld
cmp
jne
push
out
es
and
into
loopne
pop
mov
orb
das
or
mov
popl
jns
mov
add
mov
xchg
fs
add
push
divb
pop
dec
popf
xchg
or
adc
daa
dec
inc
or
or
xchg
and
mov
inc
or
insb
jecxz
cmpb
movb
inc
or
repz
mov
mov
shll
adc
imul
cmpsb
imul
insb
lcall
ljmp
sbb
imul
insl
xor
add
or
push
sub
inc
fmuls
cmpsl
int
jae
mov
add
push
cltd
cli
mov
cmp
pop
out
outsb
int
adc
and
pop
test
pop
add
fistps
push
cmp
pushl
cwtl
sti
xchg
and
mov
inc
jl
js
and
xor
jo
xor
add
push
and
push
cmp
adc
mov
mov
mov
cmp
rolb
adc
jno
mov
xchg
and
cmp
add
test
out
dec
pop
sbb
pop
orb
add
jo
push
jo
call
xor
and
addps
cltd
clc
add
addb
add
adc
popa
fstl
mov
add
test
xor
and
push
pusha
xlat
test
loope
xor
inc
jne
sbb
and
popa
sbb
mov
dec
loopne
leave
jb
ret
adc
sbb
or
push
ds
mov
jp
add
adc
data16
xor
and
repz
jl
js
push
xorl
inc
pop
pusha
inc
sbb
push
and
push
mov
test
and
dec
xchg
adc
push
je
dec
ja
xor
mov
das
outsl
mov
and
inc
mov
jne
sub
pusha
orl
dec
adc
imul
pop
out
inc
push
or
xchg
mov
xchg
mov
lea
movsl
repnz
cmc
dec
mov
stc
out
nop
mov
fldl
sar
lds
out
addr16
xchg
add
xor
adc
enter
clc
sbb
insl
mov
inc
xchg
les
cmp
add
xchg
out
add
adc
movsb
sub
mov
cmp
mov
data16
cmp
je
xor
ds
xor
ja
mov
push
ficompl
pusha
stc
jo
cld
sub
mov
dec
mov
fisubl
gs
and
cli
fs
xchg
mov
cmp
mov
xchg
dec
das
or
shl
in
mov
inc
mov
jle
lahf
fstl
inc
cmp
nop
inc
jne
popf
lock
jbe
push
jecxz
ds
or
sbb
jo
cli
out
fidivrs
mov
add
or
gs
push
push
arpl
shrb
jns
pusha
xchg
dec
pop
aas
add
push
xchg
mov
cmpl
in
aaa
add
subl
xor
sub
inc
xor
leave
ret
xchg
pop
arpl
push
test
lods
pop
dec
je
sub
enter
push
sbb
inc
and
inc
or
inc
mov
mov
jb
sbb
jnp
adc
lea
stos
cmc
xor
stos
bound
pushl
loop
push
and
mov
add
cmc
jp
jno
orb
push
mov
ja
fstpt
xchg
inc
lock
add
jne
cmp
and
or
nop
sub
cwtl
cmp
jae
or
xor
fs
pusha
insb
add
orl
mov
xor
lret
jne
sbb
jnp
mov
notl
pop
sub
js
es
imul
pop
cmp
je
popf
add
icebp
mov
xchg
or
inc
pop
mov
push
jo
sbb
adc
push
push
push
je
or
fwait
adc
dec
icebp
inc
and
mov
mov
or
adc
lcall
xchg
adc
jnp
lock
cwtl
mov
mov
mov
add
ja
daa
out
push
push
pushf
hlt
ja
push
or
loope
sbb
push
and
movsl
std
out
sbb
in
push
mov
lret
add
push
push
shrb
adc
mov
sub
adc
ret
cmp
int3
orb
mov
adc
pop
call
push
flds
pop
sub
xchg
mov
add
enter
or
adc
lahf
shlb
movsl
or
dec
orl
outsb
pop
pop
mov
sbb
inc
jbe
and
outsb
sbb
adcb
sbb
test
sbbl
lock
adc
in
insb
inc
bound
jno
push
test
popa
sub
xor
add
mov
push
cs
fisubrl
xor
jae
aas
arpl
outsb
les
je
xchg
js
test
cmp
add
outsb
in
adc
ret
fistl
mov
cwtl
fidivrs
xor
sub
xor
and
cmp
jl
jle
pop
shll
js
push
and
push
fmulp
cwtl
dec
push
lea
inc
mov
push
out
adc
add
lea
or
push
xchg
shrl
sbb
in
jne
adc
dec
shll
pop
fcoms
jl
mov
mov
pop
rolb
push
or
mov
lret
push
daa
adc
push
adc
push
sbbl
clc
xorl
ret
ja
pop
test
popl
cmp
lea
inc
loopne
mov
ficompl
cmp
jns
dec
sub
mov
cmp
cs
adcb
inc
dec
sarb
cmp
add
clc
jp
sarl
aam
or
mov
dec
ret
jge
int3
mov
ds
inc
outsb
stos
push
cmpsb
add
mov
xor
in
pop
mov
daa
and
sbb
adc
or
mov
mov
inc
icebp
push
or
pop
out
mov
xor
out
jmp
dec
xor
xchg
push
stos
dec
sbb
jmp
and
and
xchg
add
push
adc
xor
xchg
or
push
adc
test
and
lds
lea
and
loop
cli
sub
and
jecxz
or
lcall
push
mov
push
push
or
ja
mov
fiadds
mov
mov
sbb
mov
pop
inc
inc
lcall
fmuls
lds
push
pop
xlat
aaa
js
push
dec
popa
dec
dec
je
fiaddl
sbb
sbb
mov
test
xor
fadd
test
pop
add
or
mov
pop
jecxz
in
inc
outsl
jbe
xor
xor
dec
jecxz
sbb
xor
mov
movsl
add
ret
push
push
mov
sbb
and
insb
lea
push
adc
or
es
daa
or
add
cmp
jae
lock
lods
sub
push
xor
out
mov
scas
ret
xor
dec
inc
lock
imul
sbb
cmp
loop
push
lahf
and
dec
sbb
ficoms
push
shl
fdivp
sub
cmpsb
jne
xor
aas
sarb
sub
das
and
sarb
or
divl
inc
and
push
cmpsl
in
adc
cmc
sbb
add
cmp
xchg
cli
xor
scas
dec
jecxz
decl
lret
inc
xchg
aam
hlt
sbb
insl
xchg
dec
cmp
pop
pop
pop
jno
and
or
test
push
xchg
orb
or
sub
adc
fsubl
dec
into
cmp
stos
adc
sbb
sub
and
hlt
into
mov
popf
inc
jg
adc
sbb
inc
rcrl
adc
pushf
clc
inc
lret
push
js
popf
or
cmp
push
or
stos
rcrb
jnp
out
cmp
andb
sar
push
fs
mov
push
cs
das
je
pop
or
pop
lea
push
and
jo
js
sub
arpl
and
xor
lods
jge
cmp
push
ds
adc
mov
test
call
dec
xor
call
or
je
pop
sahf
push
mov
dec
inc
or
mov
pop
sbb
lods
push
sub
cmpsl
mov
dec
and
xor
or
push
rorb
push
push
push
xchg
push
or
pop
mov
sub
pushf
adc
inc
mov
pop
pop
movsl
sbb
inc
popa
mov
add
sbb
xchg
sbb
insl
test
sub
add
cwtl
sbb
xchg
push
pop
ss
inc
xor
xchg
mov
add
or
pop
mov
enter
add
fwait
movsl
add
mov
add
cmp
add
or
sbbb
push
push
push
mov
cmpsb
sub
or
push
sarb
mov
cmp
incb
lret
push
dec
pop
outsb
lds
sub
sbb
inc
in
mov
cs
push
push
or
inc
inc
xor
lods
add
cmc
js
aas
pusha
lea
cmp
jmp
pushl
push
and
mov
pop
mov
pop
add
push
subb
test
sbb
mov
inc
lret
cmp
cwtl
pop
testl
es
adc
enter
pop
sbb
pop
imull
ret
xor
mov
jl
popl
mov
adc
fisubs
mov
ret
ss
mov
orb
cltd
add
and
cwtl
scas
jae
cmpsb
icebp
fs
imul
mulb
xorb
mov
cmp
lea
dec
adc
fmuls
xor
push
ret
push
fcoml
dec
xor
movsb
push
mov
dec
push
inc
out
xchg
test
sbb
jbe
mov
adc
add
rclb
ficoml
mov
pop
mov
inc
adc
and
xlat
cmc
adc
xchg
ret
je
push
pop
and
js
call
push
sbb
jo
sub
inc
ljmp
mov
push
das
pop
bound
xor
rclb
pop
pusha
mov
insl
fcomp
js
sub
movsl
repnz
out
or
ljmp
nop
or
test
pop
inc
imul
fisubl
or
jle
call
xor
sub
xchg
or
pusha
fnsave
add
adc
testb
nop
sub
mov
sahf
or
cmp
js
std
dec
jl
loope
xor
push
fildl
lret
jl
inc
in
xor
data16
mov
iret
rorb
mov
leave
ds
test
pop
adc
xchg
cmc
lods
mov
mov
dec
fstl
sub
add
enter
mov
aas
mov
jl
inc
repnz
add
inc
push
loope
dec
add
mov
add
pop
cmp
and
pop
enter
fcompl
mov
pop
sahf
adc
arpl
enter
or
push
movsb
xor
cld
push
test
mov
xchg
mov
adc
push
cmovle
push
push
mov
mov
data16
jns
push
test
xchg
cmp
mov
and
sub
inc
neg
adc
inc
mov
or
cmc
daa
out
movsb
pop
add
jae
inc
pushf
jmp
es
scas
xor
push
pop
js
rcrb
push
push
inc
xchg
ljmp
cmp
cltd
idivl
push
add
mov
push
push
inc
test
inc
adc
repnz
mov
sbb
fildl
ret
lds
xchg
mov
add
or
mov
movsb
fxch
pop
test
push
jecxz
xchg
sub
push
push
adcl
cmp
aad
leave
scas
add
movsl
add
dec
push
and
push
mov
push
xor
cmp
rolb
push
xchg
fcoms
adc
xchg
dec
push
xchg
aas
or
inc
cmpsl
inc
sub
daa
js
imul
popa
lret
pop
jmp
push
dec
loopne
cmpsl
pop
mov
popa
push
je
add
imul
or
inc
fs
fstps
mov
ds
adc
mov
pusha
inc
mov
or
cmp
adc
jbe
arpl
or
cmp
sub
mov
cmpsb
sbb
push
mov
rcll
push
inc
outsl
sbb
notb
pop
jae
divl
dec
add
xchg
or
insl
js
fdivr
dec
add
dec
insb
repnz
insl
sarb
inc
cmc
pop
cmp
dec
mov
daa
xor
movsb
dec
cmpsl
mov
adc
xor
call
repz
jnp
and
stos
add
cmp
cmp
setns
cmp
adc
sbb
sbb
aam
jne
int3
and
shll
sub
shlb
js
sub
enter
je
jp
push
push
or
adc
cld
add
fisubl
pusha
cmp
shlb
aas
inc
mov
cmp
aad
jbe
sbb
cmpl
loopne
xchg
inc
cli
push
cld
daa
push
add
popa
push
cld
sub
lds
movsb
mov
sbb
inc
inc
insb
mov
fucom
shr
inc
add
movlhps
sti
mov
loopne
adc
cmp
inc
sbb
add
test
mov
jb
jp
insb
std
lahf
pop
push
dec
xchg
add
adc
adc
cmp
mov
cmp
cwtl
outsl
insl
out
in
sub
fsubs
mov
cmp
or
hlt
sbb
gs
mov
popa
sbb
push
arpl
pop
outsl
inc
cmpsl
adc
inc
lock
adcb
sbb
push
dec
jns
hlt
add
mov
loopne
idivb
add
xor
sub
jle
push
push
in
fdivs
xor
jno
cmp
call
xor
push
sbb
push
in
xor
xor
or
pop
push
jge
js
xchg
mov
repz
cltd
enter
push
lock
or
insb
leave
out
mov
inc
add
insb
insb
or
ljmp
cmp
cmpb
dec
push
loopne
add
out
ror
adc
out
movb
bound
mov
add
add
pop
loopne
sub
in
imul
out
push
loopne
mov
pop
jp
sub
rolb
pop
add
jmp
push
jnp
add
push
lcall
cmpsb
out
push
push
lea
or
xor
psubb
or
add
inc
xor
and
in
addr16
xchg
ret
mov
sub
mov
xor
jne
xchg
add
jecxz
or
cmp
jo
and
nop
test
cmp
lock
add
nop
mov
dec
adc
inc
xor
pop
mov
jb
sbb
mov
pop
pop
fsubp
xor
jb
adc
je
loopne
cmp
xor
xchg
rcrl
cld
sub
jp
inc
or
sbb
popf
push
adc
cmp
mov
xchg
push
repz
int
cmp
mov
lea
outsb
add
xor
popf
insb
push
ds
ja
adc
push
cld
jbe
adc
pop
dec
fwait
sbb
add
push
xor
in
pop
or
adc
sar
imul
call
inc
lock
or
mov
and
xor
jbe
dec
fsubrs
cmp
test
fldcw
cmc
pop
xor
sub
aam
sub
into
pop
testl
pop
je
stos
dec
cmp
ja
call
dec
mov
adc
add
xor
add
adc
insl
sqrtps
cmp
adc
outsl
cmp
add
and
out
andl
xchg
push
add
into
push
out
inc
xchg
push
pushf
lods
jnp
mov
mov
jl
push
idiv
je
add
xchg
lock
dec
testl
inc
jle
xor
testl
or
inc
and
rorl
out
cmp
in
and
dec
xchg
insl
jne
and
orl
adc
push
sbbl
jo
push
pusha
cwtl
push
and
insb
out
dec
in
sbb
sbbl
sub
xor
mov
pop
push
push
hlt
or
xchg
loopne
out
push
sbb
es
dec
in
or
xchg
cmc
push
pop
or
push
call
cmp
sbb
mov
push
inc
cld
jo
sarb
andl
pop
loopne
mov
add
push
xchg
add
test
jo
mov
sub
mov
pushw
and
inc
rolb
loope
orl
loop
xchg
lock
insl
adc
cmp
mov
xor
push
lret
mov
add
rcl
adc
sbb
and
rolb
aas
mov
stos
sti
cmp
and
sub
jno
fs
add
add
pop
das
in
daa
add
in
xchg
xchg
pusha
fisttps
jecxz
enter
xor
test
adc
xor
lret
sub
lea
add
cmp
cs
insb
push
cmp
jecxz
pop
frstor
addb
pop
cld
push
leave
inc
mov
fs
ret
pop
add
shl
mov
in
lahf
ret
adc
repnz
mov
mov
lcall
xchg
sbb
nop
fs
jo
out
movsl
jp
cmpsb
jne
ret
outsl
cwtl
dec
jbe
and
cmp
ja
je
or
je
or
test
adc
mov
icebp
sti
das
adc
in
adc
js
pushw
or
ja,pt
pushf
stos
add
mov
sahf
popa
jnp
pop
inc
push
test
outsb
cmp
mov
jbe
adc
imul
push
dec
mov
mov
lds
mov
xchg
dec
sbb
mov
divb
lcall
cmp
sbb
push
add
mov
xchg
mov
insb
loopne
bound
sub
adc
and
ds
inc
inc
es
dec
mov
pop
pusha
push
test
lahf
sub
adc
popa
pop
repnz
mov
repnz
cmp
pop
xchg
and
add
add
add
bound
push
add
inc
adc
mov
jb
dec
je
sub
add
sub
rcrl
or
adc
les
scas
out
inc
jo
rorl
add
shll
or
push
adc
inc
inc
sbb
xor
inc
cmc
into
xchg
sbb
xor
ret
insl
dec
mov
pop
nop
push
or
test
inc
sbb
lock
adc
and
push
nop
jns
xlat
and
mov
mov
cmp
loopne
adc
jne
push
or
dec
pop
mov
rorb
shrl
inc
inc
mov
sbb
pop
fsubl
push
testb
xor
jmp
sarb
repz
inc
cmpsb
nop
fsts
out
inc
adc
push
jbe
ret
insb
imul
call
call
xchg
mov
shlb
or
lods
push
iret
push
add
test
outsb
movl
push
push
jge
cmp
lcall
inc
or
fsub
fstl
pusha
xor
or
inc
sub
stos
pop
add
cmpl
gs
mov
in
inc
add
add
add
test
pop
add
add
pop
mov
mov
in
push
add
dec
adc
jg
push
out
rcll
jge
mov
add
sub
sbb
cmp
js
imul
lods
adc
shll
out
push
sub
cmp
and
push
xor
out
sbb
push
ret
pop
xor
xor
cmc
fmul
mov
xchg
test
jb
les
bound
mov
in
lahf
test
loopne
push
daa
daa
dec
mov
out
inc
sbb
sahf
ret
cmp
jne
push
add
ret
or
mov
fs
fldln2
mov
push
xchg
icebp
mov
add
ljmp
test
dec
inc
sbb
mov
mov
jmp
rorb
movsb
sahf
cmpsl
std
xchg
gs
mov
decl
or
pop
jnp
adc
jmp
cmp
imul
sub
test
lret
sahf
cs
movsb
cmp
push
pop
xor
ja
dec
loop
mov
mov
sbb
mov
mov
loop
sbb
data16
or
out
jne
mov
and
xor
sbb
ljmp
jge
add
sub
add
mov
in
clc
or
pop
pop
mov
or
clc
aam
mov
dec
stos
das
push
cmp
dec
or
adc
sbb
push
shll
sarb
sub
push
and
push
shll
pusha
insl
std
mov
xchg
js
mov
movl
mov
or
mov
mov
xor
sbb
dec
orl
and
xor
push
mov
pop
in
add
inc
loopne
loope
stos
popa
enter
push
or
add
enter
pop
ficompl
or
push
dec
lret
dec
mov
sahf
add
stos
add
jno
inc
lsl
add
sbb
scas
xchg
or
push
adc
inc
sarb
in
cmpsl
push
sub
jp
add
ds
fmull
push
inc
leave
lret
mov
aam
fadds
test
pop
jb
push
loope
sbb
mov
xchg
mov
mov
sbb
add
out
int
call
inc
xor
xor
aaa
cmp
divps
in
mov
xor
dec
cmp
hlt
adc
sbb
add
and
pusha
dec
outsl
test
movsb
pop
adc
fwait
push
nop
cmp
sbb
adc
mov
and
mov
test
out
sbb
add
jl
mov
sub
fildll
mov
mov
adcl
or
ret
add
and
xor
add
out
adc
jne
mov
stc
lods
cwtl
jae
add
scas
cmp
cmp
add
mov
cmpsl
jns
xchg
nop
jo
xchg
mov
add
add
cmp
in
loop
cld
sub
push
pop
and
and
mov
cmp
or
xor
loopne
inc
or
es
xor
mov
out
jge
cmpsb
or
sub
and
mov
fbstp
push
jmp
pop
mov
enter
jne
xor
adc
cmpsb
dec
add
mov
popf
xchg
mov
popl
sbb
test
dec
or
inc
mov
js
push
xchg
jge
jns
adc
lock
out
cmp
sti
or
jl
call
sbb
sbb
das
push
sbb
or
pop
or
pushf
std
and
mov
dec
cmp
pop
roll
js
sub
push
pop
push
mov
sub
adc
jecxz
call
int3
push
sbb
ss
sub
cmp
cmc
add
in
mov
jg
movb
add
and
lret
add
xor
in
add
jae
sub
cmc
pop
and
jle
orb
std
test
pop
push
add
js
mov
mov
mov
jnp
mov
xchg
mov
jp
xchg
and
fsubp
inc
and
cmp
in
xchg
push
sub
push
xor
ret
clc
sbb
sbb
dec
testl
sub
jl
lcall
fldenv
add
xchg
add
imul
packsswb
loope
mov
pop
xor
add
ja
pop
cmp
cmpsl
repnz
pop
cmp
repz
imul
sbb
xchg
cmc
inc
lock
xchg
jmp
shr
fsub
xorb
aam
sub
fsubrs
insl
in
stc
cmp
call
cmp
ss
pop
and
adc
cmpsb
jp
lds
xchg
sub
test
xor
add
subb
sbb
popf
lods
insb
adc
je
cmp
jne
push
in
push
mov
lahf
les
xor
add
sub
mov
ret
in
daa
or
fdivrp
and
inc
mov
jle
dec
fnsetpm(287
push
scas
push
inc
dec
dec
xchg
sub
je
sub
lods
xchg
mov
inc
cmp
add
mov
mov
add
and
sub
mov
jge
mov
inc
popl
mov
sbbb
sbb
or
or
sub
leave
call
add
mov
sbb
aam
pop
mov
push
cmp
cmc
aaa
inc
mov
inc
outsl
jo
loopne,pn
cmpb
nop
push
rorb
push
add
faddl
loop
jp
jo
fadds
inc
add
or
push
mov
adcb
lea
dec
out
test
add
orb
jmp
adc
stos
cltd
push
jb
orl
pop
adc
jne
mov
pop
cmpsb
push
xchg
and
sub
cmpsl
add
je
fxch
jle
adc
scas
sbb
jno
jnp
add
push
xchg
andl
int
insb
jmp
push
jo
xor
mov
jne
sub
and
xlat
sub
sbb
sbb
jbe
imul
push
inc
scas
pusha
and
sub
jl
add
jl
xor
xor
xor
xor
adc
in
fs
mov
inc
rclb
jb
jne
fsts
enter
fbstp
jne
and
xchg
rorb
add
enter
pop
pcmpgtw
and
dec
jmp
push
mov
je
jmp
or
push
add
or
gs
pushw
outsl
test
inc
push
push
pop
xchg
loope
mov
xchg
adc
test
jp
pusha
and
pcmpeqw
push
hlt
andb
lcall
push
add
mov
test
or
pusha
addr16
pop
adc
and
pop
lcall
pop
dec
and
and
push
mov
lret
lods
addr16
mov
movsl
movsl
adc
sbb
cltd
cmp
push
sbb
xor
call
xor
push
pop
arpl
xor
dec
rclb
or
pop
jg
fcmovnu
sbb
sbb
mov
pop
cmp
fsubrl
jle
adc
inc
xchg
jnp
push
cmp
jecxz
roll
hlt
cltd
fdivl
xor
data16
sbb
add
or
in
push
xchg
push
ljmp
out
or
pop
in
mov
sbbl
add
xor
inc
cmc
sbb
shrb
lods
aaa
mov
jecxz
add
movsl
pop
inc
jns
jnp
loopne
loopne
add
rol
xor
pop
int3
subl
add
push
mov
pop
jb
stos
mov
incl
jne
lock
iret
cmc
add
pop
pop
mov
icebp
mov
movsb
std
ljmp
sbb
push
sbb
popf
add
sub
adc
inc
cmpsb
mov
xor
popf
bound
cmpsb
test
jne
pop
rcrb
mov
pop
jne
sub
fs
inc
push
lds
xlat
daa
add
sbb
loopne
adc
mov
test
inc
int3
sbb
les
add
ja
pop
cmp
cld
push
mov
ljmp
inc
or
mov
and
repz
insl
test
scas
push
adc
gs
ds
push
ljmp
clc
jb
sbbb
sti
jns
test
and
pop
addl
mov
add
or
cmp
fcmovb
jb
xchg
jbe
push
push
xor
test
xor
pop
ret
dec
or
mov
in
stc
add
or
pop
cmp
jne
sbb
or
and
push
nop
mov
xchg
sub
cmp
push
lahf
lcall
inc
add
aad
xchg
pop
or
sub
push
outsb
adc
lahf
and
inc
push
adc
mov
rcl
fidivrl
or
inc
mov
xchg
js
dec
and
push
and
inc
scas
in
or
jmp
cmp
fsub
fdiv
inc
lcall
sbb
mov
push
or
jno
mov
leave
insl
punpckhwd
cmp
pop
enter
enter
push
cmp
pop
sbb
xor
cmp
jo
push
push
push
mov
adc
dec
jns
gs
loopne
mov
and
fsubrp
sub
jge
adc
jo
cwtl
decl
xchg
push
jb
mov
fsubl
and
mov
enter
inc
and
popf
addl
or
and
mov
xchg
push
jge
outsl
sub
inc
ja
xor
pop
xor
adc
pop
outsl
sub
in
xchg
out
lahf
dec
sbb
adc
imul
addb
lock
add
push
orl
pop
mov
bound
repz
xchg
mov
das
aaa
sub
add
rcll
scas
cltd
xor
leave
push
xor
enter
rcrl
sbbb
testl
or
arpl
xchg
inc
lock
nop
mov
enter
jns
bound
sar
push
xchg
push
daa
inc
mov
sbb
pushf
ds
mov
lea
aam
add
stc
add
test
add
sub
jo
add
shll
cmp
push
cmp
push
sbb
das
xchg
jmp
push
xor
les
mov
mov
push
scas
sbb
adc
push
xchg
or
sub
sarb
shlb
repnz
fwait
pusha
test
loop
inc
jne
fildl
add
xrelease
int3
lods
and
lock
fs
inc
lds
das
push
and
sbbb
int3
push
cwtl
cli
mov
rolw
mov
xchg
nop
test
add
jnp
jp
xchg
jecxz
sbb
loop
mov
xchg
fs
cmc
movsb
mov
push
push
inc
pop
movsl
jo
sbb
inc
xor
mov
jns
lock
or
add
pop
roll
or
inc
and
sbb
jo
cli
jmp
adc
cmp
in
jnp
push
add
insb
scas
cmpsl
js
rcr
pop
push
imul
or
sub
jae
jbe
and
adc
jb
pop
sbb
clc
push
out
data16
xchg
sub
repnz
sarb
call
hlt
cmpsl
and
add
jbe
push
jns
clc
add
jecxz
cli
sub
push
dec
sbb
inc
and
ret
iret
inc
loopne
jo
loopne
mov
xor
loopne
add
mov
add
or
and
loope
dec
push
and
loope
xchg
mov
mov
arpl
enter
xor
cmpsl
jo
pop
push
imul
mov
rcrb
dec
imul
push
cmp
and
out
inc
mov
xchg
cmp
pop
sbb
fwait
mov
or
jmp
sbb
sub
add
xor
push
cmp
jae
or
or
and
fs
shl
lods
inc
pop
daa
lds
xor
aaa
lahf
arpl
stos
inc
imul
xchg
push
dec
stos
call
sbb
push
outsl
lret
mov
rolb
mov
and
or
inc
mov
ljmp
mov
aaa
mov
mov
cmp
jl
sbb
enter
pop
je
push
mov
pop
jp
sbb
inc
and
andb
fs
and
shlb
mov
shll
movsl
ret
add
faddl
test
or
ret
xchg
push
dec
inc
jmp
ds
push
adc
push
push
rcll
push
sahf
loopne
pop
es
stos
sti
mov
dec
cmpb
dec
mov
pop
ret
aaa
xor
sbb
hlt
bound
nop
sbb
or
jmp
or
mov
rorb
rcrb
rcrb
ss
and
cmc
push
movsb
sbb
jno
add
inc
pop
das
push
hlt
pop
xor
push
mov
inc
push
dec
push
enter
adc
ss
pop
and
pushf
hlt
sarl
push
inc
incl
push
push
jo
fldenv
and
adc
fisttpll
push
cmp
pop
dec
cmp
sbb
push
sbb
sbb
add
fcoml
pusha
popa
pop
push
add
pop
xor
pop
xchg
in
mov
inc
arpl
push
clc
rcll
imul
cs
sub
push
call
clc
pop
insl
mov
mov
pop
add
mov
insl
xor
inc
and
lea
add
mov
mov
push
cmp
xor
ret
inc
imul
cmp
inc
sub
scas
loopne
inc
xor
inc
leave
nop
sbb
xchg
add
cmp
lods
mov
aam
adc
or
push
mov
pop
syscall
inc
push
inc
xor
mov
inc
jne
add
sbb
jno
push
inc
mov
insb
pop
sbb
jl
test
ss
sahf
jg
cmp
cld
filds
xchg
mov
sub
mov
xchg
sbb
loop
cltd
pop
mov
cwtl
dec
cmp
sbb
push
pop
in
out
sub
mov
shr
not
cmpsb
xor
adc
push
imul
mov
pop
ret
in
xor
push
lds
jno
addr16
sub
dec
mov
dec
add
sbb
xor
test
xchg
mov
fdivl
pop
xorl
cmp
dec
hlt
cmp
out
inc
and
ret
xlat
push
inc
icebp
jecxz
inc
push
addb
movl
cmpl
movl
arpl
jae
jnp
repnz
add
mov
add
jno
jne
mov
or
push
bound
arpl
jne
add
pushf
jecxz
sub
lcall
jnp
mov
ss
add
movl
push
mov
lret
inc
pop
sub
out
jnp
inc
push
pop
outsb
lahf
mov
shr
inc
adc
adc
subb
xorb
lock
xchg
rcrl
sub
mov
or
lahf
or
sbb
add
clc
rclb
mov
add
shrb
pop
movsl
dec
js
mov
push
nop
add
out
sub
out
sub
pop
cltd
cmp
sub
mov
sarb
push
push
lods
and
mov
xchg
pop
or
and
rclb
add
aam
test
adc
or
and
clc
lods
mov
xor
dec
fs
test
mov
cmp
sub
inc
inc
mov
addb
jge
stos
push
pop
lea
rep
jnp
and
fs
outsl
aaa
dec
sub
or
sbb
cmp
jae
add
jnp
leave
shlb
add
or
sbb
andl
pop
pusha
jnp
and
jne
push
push
push
xor
mov
mov
or
mov
push
pop
loopne
adc
imul
insb
stos
data16
data16
sbb
adc
xor
divb
pop
adc
aas
and
pop
call
push
into
add
or
out
sbb
int3
jno
sbb
add
sbb
fs
add
xchg
hlt
pop
add
xor
leave
repnz
or
enter
outsl
in
mov
scas
push
flds
sbb
das
adc
movb
lock
inc
jnp
adc
das
mov
push
push
push
movsl
push
xor
dec
dec
xor
dec
add
rcrb
adc
out
dec
or
push
mov
mov
mov
adc
hlt
mov
in
jle
xchg
xor
push
or
push
push
pusha
mov
movsb
sbb
mov
test
les
adc
ss
insb
stos
les
push
fcomps
sub
lea
mov
lds
push
lret
sbb
fwait
cld
cmp
out
mov
icebp
addl
mov
orl
dec
push
add
xor
rolb
mov
je
jne
mov
pop
sbb
inc
bound
jmp
stos
mov
jbe
inc
cmp
out
inc
data16
adcb
arpl
outsb
push
test
push
inc
rolb
in
and
lret
pop
add
iret
daa
test
outsl
or
lea
push
shlb
cmp
addb
inc
mov
mov
iret
adc
mov
mov
into
inc
and
push
mov
aaa
jnp
pop
add
mov
mov
adc
inc
adc
dec
jle
jb
pop
daa
or
sbb
mov
push
cmp
xchg
or
adc
aam
or
cmp
lahf
or
sti
xorb
jo
add
adc
ja
or
lea
push
adc
outsl
mov
or
gs
sbb
rol
add
inc
out
loope
and
add
rcrb
insb
xor
lret
dec
jns
out
cmp
hlt
and
sub
clc
jecxz
in
dec
push
dec
es
outsl
arpl
add
pop
mov
dec
sub
jge
xorl
inc
or
ret
sahf
ja
test
lret
mov
kmovw
insl
std
ja
and
or
push
mov
xchg
adc
insl
cmp
xchg
rcl
scas
xor
mov
dec
popa
popa
cmp
push
shl
rcrb
add
cmpl
or
jl
inc
call
mov
icebp
pop
notb
je
push
lret
pop
andb
xchg
add
and
cmp
lcall
push
or
mov
sbb
pusha
test
nop
sub
test
hlt
inc
or
das
cmp
sbb
icebp
sbb
push
push
xor
roll
cmp
jo
pop
mov
adc
sub
pop
mov
scas
mov
mov
imull
add
jne
sub
outsb
sarl
loopne
pop
cmp
xor
push
mov
jb
mov
xor
lret
in
jns
add
jmp
dec
hlt
jae
adc
insl
add
jae
ret
out
enter
fsubrl
popf
dec
inc
or
bound
test
pusha
dec
pop
push
cmp
orb
mov
or
adc
pop
cmc
dec
sub
scas
mov
fidivrs
adc
pushf
mov
or
rolb
sub
cmp
stos
popf
stos
inc
or
add
lods
dec
pop
mov
test
add
dec
inc
imul
fimuls
stos
jmp
sbb
leave
cmp
pop
dec
xor
pop
stos
mov
loope
xor
add
sub
outsl
cwtl
outsl
je
sbb
daa
or
and
push
sub
and
jnp
leave
and
and
mov
ja
adc
mov
popa
mov
and
xchg
adc
or
sub
fmull
mov
mov
ja
or
sbb
cmp
es
xlat
mov
inc
adc
cmp
ret
mov
add
jnp
adc
loopne
sub
adc
mov
loope
scas
jno
add
push
push
push
mov
fnsave
xor
xor
pop
mov
and
rcrb
dec
pop
test
pop
sub
sbb
or
jecxz
pop
je
repnz
inc
pop
fs
sbb
push
jno
push
dec
fdivs
enter
daa
push
dec
sti
mov
es
add
sbb
test
nopl
sbb
insb
and
cmp
jg
and
inc
push
cmp
enter
cmp
fs
xchg
xchg
daa
or
sbb
cmp
cmp
mov
out
and
inc
test
das
sbb
bound
insb
pop
cmp
mov
push
cmp
mov
push
out
ss
cmp
xor
or
xor
mov
mov
je
dec
pop
lea
leave
jmp
cmp
cld
or
pusha
ret
xor
in
pusha
adc
push
sub
mov
es
mov
adc
adc
and
and
fs
mov
sahf
add
push
mov
pop
lods
push
sbb
or
test
xchg
fisttpl
sub
jp
cli
push
insb
lret
mov
fcom
pop
loopne
or
clc
or
mov
mov
cld
ds
outsb
push
pusha
sbb
lea
mov
sarl
cmp
movsb
sub
dec
push
jae
movb
cmp
jmp
leave
mov
repz
outsl
das
adc
inc
mov
xor
repz
loop
fimuls
rcll
enter
push
xor
mov
shr
aam
push
jns
sub
rorb
mov
add
mov
fwait
mov
dec
hlt
push
push
mov
add
sub
sbb
mov
push
inc
scas
xchg
inc
andl
add
insl
loop
mov
test
adc
and
test
in
push
mov
pop
xchg
fadds
and
ss
inc
or
mov
rcr
push
jne
pop
lock
rclb
pop
jge
mov
push
xchg
push
adc
or
jne
adc
jecxz
lock
sbb
and
in
mov
loopne
and
jecxz
mov
fs
mov
pop
icebp
scas
adc
push
push
mov
xchg
hlt
pusha
repz
iret
mov
mov
inc
and
or
jo
or
pop
add
add
or
out
xor
in
push
mov
and
adc
js
addb
mov
or
jne
and
add
addr16
mov
xor
and
cmp
inc
add
push
cs
lcall
pop
jb
adc
pop
or
dec
or
mov
loopne
rcll
ret
filds
jo
cmp
or
sbb
subb
stos
dec
popf
adc
dec
mov
add
sub
fadds
pcmpeqw
arpl
or
xchg
scas
in
add
and
fnstenv
add
inc
cmp
cwtl
push
add
add
inc
xor
pop
orl
aaa
xor
push
add
jecxz
and
push
clc
lock
dec
adc
add
call
or
push
and
lret
inc
int
fistl
inc
pop
push
pop
cmp
mov
inc
adc
adc
jl
rclb
ss
xor
or
stos
mov
aas
xchg
in
jle
push
dec
popa
call
pop
cmpb
push
and
faddp
adc
inc
jne
inc
adc
call
int3
cmp
roll
pop
dec
mov
jae
sbb
push
jmp
dec
cmpsl
es
jp
push
jmp
inc
xchg
or
and
adc
or
and
inc
mov
sbb
mov
mov
pusha
cli
aam
add
test
movsb
stos
fsubs
adc
xchg
jmp
mov
dec
mov
mov
clc
mov
push
jnp
inc
adc
aam
cwtl
push
xlat
adc
inc
aam
or
and
jb
sbb
daa
pop
decl
push
pop
clc
jl
mov
mov
pusha
enter
jle
pop
int
test
jbe
jmp
lds
or
or
adc
test
mov
xchg
xchg
inc
add
jnp
pusha
test
or
and
sub
push
inc
imull
mov
or
ljmp
rcrb
movb
mov
jo
jo
sub
adc
xchg
mov
icebp
nop
adc
lods
pop
pop
scas
add
cmp
std
xor
adc
mov
jne
inc
push
mov
or
test
pop
xor
lea
mov
rolb
arpl
push
cli
push
call
lea
mov
jo
cmp
dec
jcxz
mov
push
adc
push
jl
cmp
je
mov
mov
gs
fadds
mov
test
andl
inc
mov
and
jns
add
cmp
clc
mov
xchg
adc
mov
add
dec
loop
fwait
jmp
push
pop
push
loope
xor
insb
mov
addr16
and
dec
add
push
or
inc
jmp
dec
in
mov
in
pusha
stc
rorl
pop
pushl
leave
or
lock
push
outsb
push
jne
in
adc
ret
scas
cmpsb
pop
fldenv
mov
add
inc
xchg
loopne
pop
shll
cmp
cwtl
xchg
or
insb
pop
insb
aam
inc
pop
loope
xor
lahf
ss
cmp
pop
dec
movsl
fcoms
mov
add
scas
push
add
adc
mov
adc
test
mov
dec
or
ret
inc
and
pop
shrb
into
sub
incb
loopne
or
adcl
and
test
int3
ret
and
leave
popa
add
shlb
and
jmp
xor
fmuls
addl
lea
pcmpgtw
push
or
jg
fcoms
dec
negl
mov
nop
aaa
movsb
rcrb
push
loopne
sbb
inc
cmc
xorb
sbb
mov
out
pop
dec
pop
mov
and
addr16
pop
xchg
ret
aas
icebp
push
loopne
push
xchg
sub
xchg
add
cltd
cmp
mov
movsl
jmp
sbb
inc
jl
in
aas
xor
adc
pop
push
scas
ss
push
pop
outsl
int3
sbb
outsl
push
stc
push
push
inc
mov
xor
inc
mov
xor
je
and
inc
jb
ds
mov
dec
xchg
xor
sub
shll
or
sbb
adc
pushf
mov
arpl
mov
push
sbb
sub
sbb
push
adc
inc
or
push
cmp
xchg
aam
or
or
mov
inc
sarb
lahf
je
movsb
push
xchg
mov
mov
incl
adc
adc
inc
mov
inc
fisubrl
xor
xor
test
jbe
cmp
xor
iret
push
adc
mov
jo
pop
pop
ljmp
inc
mov
inc
loopne
jno
adc
sub
push
adc
add
nop
or
mov
inc
movq
push
mov
or
mov
pop
incl
clc
adc
clc
mov
and
or
cmp
popf
lods
mull
daa
push
and
fldcw
push
xchg
or
mov
mov
add
or
cltd
call
jno
in
pop
dec
mov
add
xor
push
mov
test
xchg
popf
orl
and
xlat
enter
inc
mov
mov
daa
inc
nop
adcl
dec
dec
mov
ss
addr16
xlat
test
sub
inc
iret
add
test
pop
pop
mov
and
das
aaa
mov
adc
xor
adc
ss
incb
pop
xor
xchg
add
adc
popa
icebp
xor
sub
mov
pop
js
sbb
pop
jno
inc
xchg
pushf
test
aas
or
lea
xor
pop
jmp
add
pop
or
call
mov
stos
insb
iret
les
jecxz
loope
std
pop
or
imul
sbb
inc
les
sub
clc
or
outsb
xorl
lret
lods
pop
push
and
mov
inc
iret
push
mov
pop
insb
enter
or
fadd
dec
add
fiaddl
adc
rorb
or
or
out
in
std
and
enter
or
rolb
jo
enter
jnp
push
lods
loop
inc
push
inc
imul
pop
or
fwait
pusha
cmc
pop
push
das
stc
clc
addb
bound
xor
arpl
je
sub
pop
call
rcrb
push
push
sbb
test
mov
nop
xchg
cwtl
pushf
sub
test
add
push
lods
lock
add
repnz
lods
sub
pusha
xchg
inc
addb
mov
xor
movsl
clc
sub
mov
mov
fldl
add
mov
ss
sbbb
loop
ja
lcall
inc
pusha
pop
pusha
cmpb
dec
lea
out
call
or
dec
or
fistpl
dec
mov
fwait
or
or
jo
push
addl
add
popa
call
push
cmp
push
cmp
leave
sbbb
add
fsubl
js
add
xchg
outsl
mov
call
adc
xchg
popf
xchg
sbb
sbb
lods
loope
ret
or
bound
mov
push
add
push
jp
xlat
in
push
popl
movsb
pop
addr16
gs
jne
scas
add
push
add
mov
sti
mov
jne
inc
lcall
mov
xchg
addb
bndstx
mov
inc
cmp
sub
stos
mov
adc
jge
inc
mov
mov
ret
insl
js
rclb
adcl
rol
cli
fistpll
lods
repz
fwait
lods
or
push
test
jo
cmpsl
push
push
mov
je
push
je
jne
push
adc
ss
cmp
pushf
pop
cmpsb
mov
dec
mov
outsb
adc
out
inc
adc
std
push
adc
rol
or
sbb
inc
fildl
push
je
rorl
sub
xchg
int
movsl
xchg
loopne
add
jmp
sahf
fldcw
nop
scas
sub
lods
test
sbb
inc
repnz
sub
dec
cmp
out
stc
push
loop
loope
dec
fs
scas
sub
or
out
pushf
int3
gs
xchg
dec
or
xchg
dec
xlat
mov
aas
int
es
add
xchg
mov
push
in
add
scas
mov
inc
outsb
lea
fimuls
mov
pop
mov
mov
sbb
sub
push
sub
or
cmc
mov
daa
adc
mov
mov
incl
push
sub
fsubrl
jl
inc
test
sbb
push
jno
pop
xchg
scas
pop
pop
or
jb
mov
mov
push
pop
xchg
nop
sbb
sub
adc
add
push
lods
adc
or
dec
add
mov
call
xor
leave
sub
add
out
out
and
push
mov
dec
dec
int
push
cmp
add
push
ret
xchg
xchg
addr16
in
xchg
push
insl
add
mov
dec
pop
inc
adc
and
or
scas
push
mov
loop
sub
mov
rcll
or
dec
or
lea
clc
pop
dec
sbb
jmp
add
mov
lret
cmpsb
pop
mov
sub
jo
or
adc
cwtl
shll
jbe
and
aad
add
out
inc
push
add
loopne
call
out
add
xchg
add
lea
rolb
ficompl
in
push
lds
or
pop
test
mov
decb
imul
dec
lds
clc
push
sub
andl
jmp
outsb
lock
pop
repnz
push
es
loopne
xor
xchg
inc
ficomps
pop
pop
sub
pop
mov
or
in
mov
mov
icebp
cmp
inc
hlt
loope
xchg
push
cmpsb
ss
mov
dec
push
pushf
decl
push
jns
andl
jns
lcall
add
ret
rol
adc
je
data16
out
adc
jmp
pushf
jle
sti
dec
inc
pop
ret
jg
outsb
adc
imul
or
outsb
add
fldt
jl
push
jge
push
jle
jecxz
out
xchg
push
or
loopne
mov
outsb
and
add
call
jbe
loopne
xor
inc
arpl
es
js
jb
jmp
out
int
or
jge
cmpsb
dec
cmp
mov
shlb
jp
sbb
xor
fs
xchg
daa
xchg
testl
add
incb
mov
and
jne
shrb
lock
inc
push
rorl
xor
orb
or
stc
pop
dec
jecxz
push
or
add
sub
xchg
push
and
loopne
jmp
or
lret
lea
icebp
ds
pop
cmpsb
outsl
dec
sbb
imul
push
and
mov
stos
cmp
push
test
rcrl
arpl
mov
rclb
adc
sbb
jns
shlb
dec
rorb
pop
push
mov
pop
adc
push
mov
add
mov
pop
jae
out
test
inc
add
scas
cmp
adc
enter
add
sub
add
incl
jbe
orb
push
inc
out
js
movsb
sub
push
sub
adc
mov
add
in
sbb
push
outsl
hlt
sbb
and
fcomp
sbb
clc
inc
sub
push
jl
rcrb
imul
popa
aaa
testl
inc
xchg
shr
or
movsb
inc
pop
lcall
popa
inc
arpl
inc
test
push
or
dec
pop
and
loope
pop
push
xor
aas
popa
xchg
pop
dec
or
xchg
add
incb
mov
das
addb
cmp
jns
imul
ret
nop
aam
icebp
das
adc
xchg
jnp
cmp
pshufw
faddl
sbb
test
xchg
add
in
jle
inc
inc
push
mov
sub
and
pop
outsl
push
data16
jnp
sbb
pop
and
adc
pop
test
inc
mov
pop
sbb
fwait
inc
mov
loop
insl
pop
sbb
adc
cwtl
mov
bound
add
lods
inc
cmp
enter
ljmp
mov
popf
mov
mov
fwait
cmpsl
lods
enter
ret
test
dec
cmpb
test
push
cmpsl
fldt
test
popf
mov
sbb
pop
test
xor
pop
in
xchg
or
mov
sbb
in
test
fmull
sbb
dec
cmc
sbb
arpl
mov
and
and
push
mov
shll
adc
xor
sub
lods
push
ljmp
incl
mov
je
cltd
test
adc
das
sbb
pop
cmp
push
sti
fadds
sub
add
lahf
lcall
sub
mov
lret
jae,pn
add
cmp
push
test
xor
int
cmp
xor
push
and
or
push
es
push
xlat
pop
data16
mov
sub
andl
mov
cmp
mov
cmp
faddl
or
mov
call
and
ja
push
mov
jbe
add
inc
cmp
clc
add
xor
mov
xchg
ret
push
movsl
add
divb
rolb
ja
lock
shr
xchg
xor
loope
lret
mov
sub
push
lods
and
test
mov
pop
cmp
call
add
aaa
mov
xor
add
stos
rorb
ret
and
pop
pushf
jns
dec
loopne
inc
inc
push
push
jno
jbe
jl
xlat
lods
fiaddl
push
dec
push
dec
xchg
or
push
pop
cmp
icebp
push
pop
mov
mov
cwtl
mov
jbe
or
mov
filds
loope
dec
clc
rorb
ss
fcoms
aam
add
iret
and
rorl
or
ss
gs
pop
lret
imul
out
add
loop
outsb
inc
daa
add
dec
xchg
jge
sub
enter
jl
push
jl
add
into
nop
enter
pop
sub
sbb
fcoml
lods
mov
sbb
imul
and
mov
adcb
out
mov
cs
mov
aaa
adc
push
jb
push
or
pop
xchg
pop
jo
push
mov
les
movsb
xchg
cwtl
test
mov
pushw
outsb
sub
jg
jge
mov
or
stos
je
in
jmp
and
mov
push
mov
add
in
add
in
loopne
xchg
mov
push
sbb
adc
mov
inc
mov
mov
sbb
test
xor
add
pop
pop
push
xchg
pop
andl
sbb
inc
sub
out
addb
jl
fcoml
adc
movl
dec
push
push
adc
int3
test
pop
adc
aad
xor
sub
mov
sub
add
test
or
xchg
dec
push
xchg
push
dec
sub
test
imul
jmp
test
ret
dec
loopne
sub
add
push
push
add
add
nop
fnsave
push
adc
sub
jl
add
mov
sub
fadds
or
outsb
pop
fildl
xchg
mov
bound
cwtl
sub
and
push
iret
out
inc
pop
repz
jl,pn
test
je
mov
mov
out
or
push
jo
pop
xorl
mov
minps
test
or
dec
mov
pop
sbb
jmp
or
cmp
or
in
push
sbb
jmp
adc
push
inc
jns
xor
and
push
fcompl
xor
repz
pop
out
aam
adc
test
dec
sbb
outsl
out
inc
rcll
and
xchg
sub
xlat
add
mov
mov
inc
je
pop
sub
stc
rol
test
fsubrs
mov
and
aas
dec
jge
ret
cltd
jns
mov
cmp
add
pop
or
aam
push
cwtl
aam
fcmovnbe
jbe
sahf
adc
or
fisttps
sarb
rcrl
add
shlb
xor
popf
loopne
and
lret
dec
mov
sub
fbld
pop
xrstors
push
push
xor
addl
and
inc
jg
dec
es
push
pop
mov
cmpsl
cmp
scas
inc
cmp
insb
cltd
sbb
pop
xchg
cwtl
jnp
add
cld
mov
dec
daa
push
add
lods
or
push
pop
mov
subl
pop
dec
js
int3
jnp
xchg
lods
pop
lahf
lock
or
push
cmpb
mov
mov
push
fiadds
pop
push
cmp
dec
test
sub
pop
mov
lcall
inc
pop
push
mov
jbe
pushf
xchg
add
or
jbe
popf
xor
mov
das
dec
shr
stc
mov
cmp
mov
fldcw
dec
nop
mov
jo
jns
jns
mov
rclb
call
sbb
cmp
pushf
xchg
xor
pop
movsl
adc
addb
test
cwtl
inc
inc
mov
cmpb
cli
add
sub
mov
push
cmp
into
into
cmpb
sar
mov
add
mov
test
jbe
or
pusha
ss
hlt
cs
shlb
mov
lret
movsb
mov
test
add
movsl
mov
cmp
je
lock
push
xchg
dec
test
lods
add
xchg
add
add
in
add
push
or
mov
mov
js
mov
xchg
adc
mov
stos
xor
and
int3
les
es
add
pop
lcall
jmp
jae
test
inc
fwait
xor
roll
fldt
loopne
sbb
push
inc
popa
arpl
test
dec
add
cmp
je
sbb
push
std
ret
adc
and
mov
andl
mov
xlat
push
fmulp
shl
out
sub
lock
ret
les
dec
mov
and
pop
enter
sub
jge
jp
or
xor
and
pop
push
pop
lods
push
lods
pop
push
jae
inc
add
shrl
add
sub
add
stos
leave
cmp
cmpsl
lea
push
and
clc
sbb
stos
jmp
pushf
stos
sbbb
jae
or
out
test
pop
mov
scas
jae
push
push
push
cli
adc
mov
test
xorl
mov
cmp
inc
jb
or
mov
pop
pop
adc
out
xorb
hlt
pop
inc
sbb
fs
xor
dec
sbb
adc
gs
lock
imul
mov
or
in
push
pop
popl
fwait
sbb
xor
call
sbb
sub
xor
lahf
xor
pushf
jne
jmp
inc
adc
popa
testb
fwait
xchg
sbb
adc
jmp
adc
mov
inc
fs
nop
push
mov
test
adc
dec
ss
leave
jne
add
jge
call
arpl
ds
dec
cmp
incl
loope
test
push
and
push
nop
idivl
inc
orb
adc
mov
ds
cmp
mov
sub
mov
push
push
or
xchg
ret
stc
inc
out
repz
ljmp
jmp
in
adc
sbb
adc
std
andl
mov
ss
call
pop
inc
sahf
enter
add
call
or
add
adc
mov
push
push
movsl
inc
inc
ljmp
faddl
fstl
repz
cmp
loopne
jp
fldl
xorb
pop
faddp
andl
sbb
xor
lret
jg
mov
xchg
imul
cmpsb
les
adc
mov
sub
ds
and
repnz
adc
je
add
mov
bound
das
push
inc
cmp
loop
outsl
add
xchg
inc
add
dec
adc
iret
fistpl
fcmovnb
sub
xchg
lea
push
or
movsb
orl
and
andb
or
ljmp
dec
inc
push
scas
lret
jp
js
cmovb
stc
dec
adc
and
mov
enter
cmp
push
add
dec
lock
jecxz
add
into
lock
push
add
sub
jp
mov
es
in
sub
push
lock
test
mov
into
enter
sub
xor
dec
hlt
jge
adc
sarl
push
dec
add
jbe
les
fwait
pop
push
ja
adcb
loopne
add
andl
jecxz
inc
xchg
outsb
rolb
rcll
rol
addl
pop
test
pop
push
mov
xor
add
lods
or
dec
pop
adc
xchg
mov
das
dec
fs
sbb
mov
imul
inc
add
jle
adc
push
dec
jns
mov
cs
mov
mov
mov
mov
shlb
aam
jbe
push
xchg
mov
push
sbb
test
sub
push
dec
sub
imul
inc
add
test
ret
adc
sub
call
decl
inc
adc
lea
jg
and
inc
cmp
mov
push
xor
xchg
sbb
jecxz
mov
adc
push
lcall
cltd
and
dec
or
cmp
data16
xchg
das
inc
and
adc
xor
xchg
test
sbb
outsl
add
addb
or
in
xor
dec
cmp
cltd
scas
fidivl
iret
push
push
push
mov
repnz
adc
fcmovnu
push
mov
stc
adc
aas
pop
ret
jne
and
lret
xor
add
out
and
and
data16
adc
arpl
inc
movb
out
clc
and
push
inc
add
popa
icebp
lret
xor
xchg
or
sub
stos
fdivl
aam
lcall
or
pmulhuw
jge
std
in
sub
push
or
dec
mov
loop
dec
fcoml
sub
popf
inc
dec
adc
xchg
shlb
push
add
std
mov
pop
xor
mov
pushf
xchg
loopne
cmp
mov
push
imul
pop
or
push
push
push
hlt
rcll
add
xor
icebp
daa
inc
mov
push
jge
leave
hlt
movsl
popa
sbb
idivl
popa
cmpsl
xor
lock
adc
or
jns
shll
mov
inc
adc
push
pusha
xchg
in
outsb
sbb
popf
fdivs
mov
loopne
add
add
inc
mov
mov
jle
sarl
xchg
ljmp
and
push
subb
mov
pop
adc
sbb
ljmp
loope
xlat
sahf
or
test
mov
and
pop
mov
cmpsl
fs
dec
push
xchg
js
dec
rcrb
dec
insb
je
xchg
push
cs
das
mov
dec
push
xchg
adc
out
mov
mov
add
mov
lret
add
insb
cwtl
aaa
sbb
push
mov
in
mov
adc
shlb
or
daa
xor
push
loopne
add
sbb
adc
out
cltd
cmp
sbb
jle
add
xchg
call
cmp
mov
pop
inc
or
inc
paddq
push
push
sub
push
ja
insb
adc
and
jno
jg
jns
cmp
mov
push
addr16
lcall
dec
jne
or
fadds
or
notb
and
mov
or
ss
ret
xchg
lds
push
orl
clc
insl
loopne
test
sub
or
sub
adc
call
sbb
popa
ja
ja
add
and
mov
addl
repnz
pop
sub
test
add
mov
les
or
fbstp
xor
pushf
call
xlat
or
lahf
push
pavgb
mov
sbb
ret
enter
xchg
push
insl
add
adc
dec
cltd
pushf
sbb
add
es
fidivrs
xchg
inc
inc
inc
lea
clc
cwtl
mov
dec
jo
test
popa
add
add
hlt
andb
xor
adc
sub
test
and
pop
je
push
dec
loopne
or
xor
ret
cmp
pop
fiadds
and
jne
or
addl
leave
add
test
or
pop
push
and
test
push
push
shlb
leave
or
dec
sarb
rcl
push
insl
gs
stos
jae
sbb
int3
jns
push
push
ret
sbb
aaa
push
cmp
rcrb
push
pop
push
push
cmp
xor
dec
xor
adc
or
lock
js
cli
and
jmp
mov
leave
cmpsl
inc
inc
fld
arpl
add
add
or
cmp
push
cmpxchg
pop
or
xchg
mov
push
aad
in
lock
mov
lock
stc
inc
sarb
or
call
call
push
mov
lret
add
cmp
aam
in
inc
imul
lea
cmp
add
les
pushf
add
dec
push
cld
or
popa
add
fldcw
sub
icebp
clc
in
pop
js
popa
test
daa
mov
mov
sbbl
jecxz
xchg
xchg
xchg
inc
cmp
jne
mov
ja,pt
add
out
sub
jnp,pn
shlb
jnp
dec
enter
shlb
mov
pop
repnz
pop
repnz
add
rolb
or
push
enter
push
fcoms
add
mov
add
cmp
cmp
pop
jo
or
loopne
clc
jl
or
test
cltd
xchg
sbb
sbb
inc
bound
loopne
rcrb
lock
aam
loopne
in
ret
push
inc
dec
fwait
sbb
jns
add
add
jb
push
les
dec
sahf
lret
or
testl
add
sbb
or
pop
test
out
push
mov
jl
inc
xchg
add
or
andl
sbbb
dec
inc
xor
test
sbb
stos
sahf
pushf
cmp
push
push
sub
push
cmc
bound
ss
jge
dec
fidivrs
adc
ret
enter
sub
adc
ret
mov
or
jbe
test
lahf
addb
or
shlb
sub
inc
dec
sbb
lock
fs
add
push
hlt
jge
inc
pop
jmp
pop
xchg
jge
pop
shrl
es
pop
pop
adc
sbb
xchg
je
add
out
fisubl
add
cmp
lcall
mov
add
inc
loope
out
push
xor
or
shrl
fsubrl
xlat
cmpl
and
and
inc
dec
dec
les
adc
ret
sahf
movsl
and
or
les
mov
push
pop
mov
fs
rcl
adc
rolb
mov
mov
or
jmp
loopne
sub
call
sbb
ret
aad
adcl
daa
into
sub
leave
int3
inc
xchg
or
sbb
push
inc
and
mov
and
pushf
aas
jne
mov
out
jmp
lods
leave
ljmp
mov
into
lret
jbe
push
decb
je
sub
shrl
inc
fisubrl
sbb
lret
or
leave
or
pushf
add
cmp
lahf
sahf
jae
cmp
push
inc
and
insl
test
jns
in
rcrb
sub
push
or
fbstp
push
icebp
pop
add
adc
jo
imul
xchg
push
adc
inc
mov
or
ret
cli
jle
add
adc
add
pop
mov
mov
adc
xchg
aaa
jp
inc
cmp
sbb
sub
xchg
testb
push
mov
jmp
lods
subl
cmp
into
inc
add
fdivrs
loop
data16
sarb
out
add
and
adcl
test
push
add
jnp
dec
lret
lret
sub
push
xor
add
cmp
add
in
sub
inc
lds
icebp
repz
dec
push
nop
pop
mov
sarl
inc
pop
or
sbb
les
push
icebp
repz
sbb
jbe
sti
shlb
andl
dec
xchg
add
and
out
ljmp
mov
vunpcklps
rcrb
inc
cwtl
imul
pop
or
ds
or
nop
fcoms
dec
lcall
jne
add
in
lods
subl
pop
add
jns
push
jmp
push
xor
daa
add
sub
push
enter
imul
and
pop
push
push
rol
int
xor
in
cmpl
jge
dec
sub
or
jl
xor
push
mov
fnstcw
sbb
push
repnz
adc
add
pop
or
icebp
mov
enter
bnd
mov
and
cmp
add
loop
or
pop
sbb
lds
push
inc
add
dec
in
or
scas
mov
cs
or
jl
fiadds
movb
xor
pop
in
or
es
push
and
inc
jecxz
xchg
jo
sar
add
incl
push
inc
pop
adc
add
cmp
push
adc
movsb
xor
xchg
mov
sbb
inc
pop
dec
dec
call
les
pop
std
movsb
add
mov
adc
inc
xor
mov
call
or
loop
inc
add
xchg
lods
movsl
mov
pop
clc
add
movsl
mov
cwtl
inc
sbb
rolb
imul
daa
in
cltd
cmp
bound
or
sub
cmpsl
jns
je
sub
mov
orl
sti
lahf
or
incl
cmp
jl
xor
lret
into
jo
repnz
dec
inc
dec
fdivs
dec
xchg
dec
cmp
pop
sti
outsb
andb
cmpb
sbb
into
jl
shl
push
inc
sti
insb
push
pop
enterw
das
lock
lret
jae
and
fidivrs
mov
push
pop
je
push
mov
cmp
adc
nop
pop
cmp
or
ret
es
jbe
xor
push
out
dec
repnz
lret
cltd
inc
and
sbb
outsb
or
jns
pop
sbb
cs
push
jmp
push
sbb
fimuls
mov
dec
sub
dec
push
pop
jl,pt
ss
xor
pusha
dec
lock
jne
jl
jp
stos
les
dec
mov
push
fwait
push
jge
lret
xor
xchg
fsts
mov
dec
data16
cs
cmp
sahf
mov
pop
leave
xor
insb
ss
push
mov
and
sbb
outsl
xorl
sahf
xor
or
stc
pmaxub
or
pop
push
pop
adc
nop
xor
ss
and
je
lods
pop
push
sub
and
ss
fists
ficoml
mov
frndint
pusha
lock
mov
lods
es
aas
add
sbb
jp
clc
mov
push
lds
mov
add
mov
dec
imul
test
test
movsb
in
jge
rorb
or
jnp
push
lods
xorb
and
and
js
sub
sub
imul
adc
cmc
jmp
adc
jae
movsb
jecxz
mov
mov
dec
or
test
mov
pop
popf
out
das
cmpl
mov
add
rclb
mov
xor
insl
popa
out
cmpsl
mov
push
insb
dec
sbb
lods
dec
inc
add
push
xor
and
sub
sbb
mov
dec
popa
push
shll
popaw
mov
in
inc
xor
push
cmp
pop
or
jle
data16
jne
test
xchg
and
mov
jmp
ja
mov
sbb
mov
movsl
lea
inc
mov
movsl
cmp
aas
inc
xchg
dec
call
and
sub
cltd
aaa
adc
pusha
or
rorb
cmp
lea
fwait
nop
ss
xorl
divb
jns
jmp
lret
add
jmp
sub
cmp
xor
leave
jne
push
jmp
aad
push
pop
xchg
push
and
fwait
movsl
aaa
or
andb
popa
imulb
arpl
mov
cltd
in
and
nop
inc
enter
pop
xor
cld
and
aam
or
pop
adc
faddl
mov
push
push
das
push
mov
fsts
repnz
leavew
ret
rcl
inc
stos
mov
jl
les
adc
loop
mov
xrelease
push
in
in
insb
insb
pushf
orl
inc
out
jmp
or
orb
stos
push
dec
cmp
shlb
fidivrl
test
movsl
mov
movsl
nop
xchg
mov
mov
dec
fxch
push
dec
rol
addb
cmpsl
mov
jne
jl
call
jb
dec
andl
rorb
add
dec
push
mov
sarl
inc
or
or
andb
mov
rcrl
fs
push
jns
stc
stos
aam
or
mov
or
push
int3
mov
jmp
pop
jp
orl
movsl
movsl
icebp
sub
js
int
ret
push
aad
add
imul
and
jg
movl
dec
push
jp
add
pop
mov
mov
and
jb
sub
inc
movsb
or
inc
sbb
stos
test
call
fbld
arpl
mov
lcall
xor
outsl
and
add
adc
arpl
adc
out
rorb
jge
in
aam
fwait
lea
roll
data16
mov
test
pushf
pop
adc
dec
cmp
jl
inc
adc
or
in
inc
ret
jo
jle
add
dec
cmp
xchg
cmp
xchg
jmp
aas
ds
test
xchg
or
and
lret
test
jns
and
sbb
lods
sub
push
pop
or
gs
jp
inc
add
test
or
shlb
pop
mov
or
mov
or
sbb
xchg
in
jmp
add
popa
imul
inc
jle
call
in
scas
add
clc
clc
sub
push
idivl
add
mov
push
in
push
orb
mov
push
or
push
pop
sub
and
adc
add
notb
dec
mov
jle
setge
xorb
pop
jnp
roll
ret
ja
pop
add
icebp
or
jl
loopne
adc
xor
fdivl
inc
popa
ret
cmpl
xchg
xor
addb
repz
in
xlat
and
inc
and
jo
ds
and
mov
imul
in
shrl
lods
jmp
stos
mov
jno
pop
dec
xchg
inc
js
cmp
jl
push
push
push
or
and
add
and
xchg
adc
push
mov
xlat
leave
adc
fsubs
push
hlt
stos
cli
lea
jmp
outsl
inc
lock
test
mov
adc
adc
and
mov
pop
loop
cmpsb
rcr
cmp
in
mov
sub
loope
or
jmp
and
inc
mov
movsl
dec
xchg
xor
mov
push
or
add
or
dec
xchg
aam
arpl
jae
sub
cwtl
sub
push
lahf
xchg
adc
xchg
lret
jbe
aaa
push
sbbb
adc
xor
dec
add
lret
push
push
pop
inc
dec
push
cltd
movsb
dec
push
pop
pop
nop
inc
or
inc
subb
sbb
jecxz
arpl
rcll
jne
cmp
xor
push
cmpsb
bound
cld
push
lods
fdivs
push
scas
add
es
es
cld
add
or
jp
ret
push
and
and
inc
mov
fs
sqrtps
outsl
adc
jg
das
and
jle
xor
sub
lods
inc
and
inc
push
inc
addl
ret
pop
push
cmp
rorb
jmp
nop
icebp
mov
rolb
sbb
sub
add
push
push
add
push
xlat
adc
and
in
or
jp
sahf
hlt
pop
mov
loopne
xchg
add
shlb
and
shlb
adc
call
lea
add
jb
inc
add
and
xor
lds
test
push
adc
jle
fisubl
repz
and
adc
test
add
mov
in
or
mov
cmp
aad
loopne
pop
sbb
or
test
or
pop
orb
mov
ffree
in
sub
inc
aam
repz
dec
push
and
inc
and
jne
std
adc
pop
mov
shlb
xchg
lock
add
xor
scas
mov
add
pop
mov
mov
inc
mov
and
fdivr
fnsave
cmp
and
sub
test
dec
jecxz
pop
leave
ret
lea
jmp
push
fldl
sbb
fbstp
mov
inc
add
nop
sub
xor
push
js
sub
pop
ret
xchg
dec
cwtl
pop
dec
push
xor
pop
push
or
fsubs
mov
push
pop
sarb
inc
cmp
pusha
pop
inc
ret
push
or
push
jo
out
inc
add
push
push
in
lret
aam
push
and
jb
test
or
pop
inc
mov
hlt
jno
or
out
inc
push
mov
cmc
add
imul
icebp
dec
or
scas
js
roll
dec
push
cli
add
stos
adc
sbb
stos
jecxz
enter
std
aam
inc
arpl
in
std
ss
dec
insb
push
orb
pop
scas
fs
scas
push
push
cmova
loopne
lock
add
or
aad
add
rcrb
xchg
adc
mov
adc
sbb
sahf
xorb
mov
or
roll
mov
pop
or
adc
test
adc
lods
xchg
inc
jmp
push
adc
pop
insb
add
mov
lock
clc
aam
mov
inc
sbb
ds
jp
out
mov
add
fs
leave
es
in
cmp
addb
mov
int
and
in
or
add
or
add
subb
or
or
scas
jae
inc
mov
test
test
in
jb
sub
push
stos
iret
dec
jge
sbb
fldenv
test
inc
jo,pt
mov
mov
jmp
push
enter
add
movsb
call
cmp
stos
cmp
push
test
add
xchg
mov
aam
sbb
add
xchg
or
adcl
hlt
push
jmp
in
push
nop
xchg
fildl
mov
mov
cltd
push
in
lods
arpl
and
jle
pop
add
fs
push
mov
adc
or
fsubrs
adc
mov
popa
and
jl
fsubrs
or
push
mov
sub
or
push
ret
dec
mov
adc
fcoml
daa
movsb
xchg
jle
hlt
ja
mov
int
mov
mov
inc
xchg
mov
jle
in
mov
imul
add
rclb
mov
ljmp
in
fmull
out
xchg
out
lods
push
nop
es
mov
cmp
add
pop
shll
hlt
mov
pop
add
mov
je
adc
rclb
push
mov
ret
jb
fadds
xor
or
cmp
imul
sbb
add
cmpl
adc
fsubrl
xchg
in
rorb
ret
sarl
pop
inc
jecxz
fs
jo
insb
adc
divb
cltd
inc
sbb
or
scas
das
push
push
xor
or
pushf
fs
xchg
cltd
or
adc
pop
push
sar
inc
pop
inc
mov
mov
pop
ret
jle
push
mov
mov
mov
and
ja
cmp
adc
adc
xchg
dec
cmpsl
adcb
jo
cwtl
pushl
jle
fsubrs
in
xchg
cmp
sub
jnp
adc
push
sub
shll
enter
add
shrb
xchg
mov
push
shrb
push
test
mov
push
out
movsb
cmp
clc
cmp
stos
ds
push
adc
mov
hlt
addb
nop
psubb
inc
test
push
lea
call
cmp
mov
clc
mov
and
add
mov
push
mov
add
and
stos
ss
in
mov
push
enter
testb
or
push
lods
shl
cmp
lds
loop
push
adc
imul
inc
add
sub
in
movzwl
mov
rcr
int
mov
sbb
in
sub
xchg
add
fnstcw
sahf
sbb
jmp
and
or
sbb
sub
and
pop
cmp
out
shlb
cmp
or
iret
mov
jns
rolb
out
jae
jb
xchg
cmp
pop
mov
fcoml
daa
cwtl
adc
js
jmp
daa
add
iret
adc
je
mov
into
or
js
rolb
movb
push
popf
hlt
or
xor
sub
push
add
and
pop
xor
ror
mov
leave
int3
inc
cmp
adc
mov
mov
xchg
movsb
or
popa
and
add
adc
or
push
add
repz
push
sbb
cld
movsb
cmp
xor
or
shrb
mov
shr
mov
fists
mov
mov
mov
jle
jmp
cmpb
push
rolb
push
sbb
mov
faddl
or
mov
jne
movsbl
mov
pop
lahf
addl
clc
adc
jbe
push
paddb
ja
push
mov
xchg
lret
or
jge
lret
and
sysexit
xchg
and
adc
lea
inc
sbb
xchg
insb
push
and
xchg
ja
lods
push
adcl
lahf
push
les
loope
sub
gs
ret
sbb
loopne
push
into
leave
add
xor
loope
jnp
cmp
je
push
push
pop
cmp
jl
cmp
push
ret
mov
lahf
sub
stc
dec
xor
movsb
mov
xor
insl
mov
ds
cmp
mov
cli
dec
xchg
cmc
xor
adc
add
xchg
ja
add
insb
mov
inc
pop
xor
cmc
xchg
pop
fs
ja
mov
inc
aas
xchg
xor
push
adc
push
add
ljmp
pushf
add
pushf
pop
or
or
jnp
outsb
outsb
outsb
or
jmp
or
jno
jmp
push
jmp
outsb
outsb
outsb
outsb
por
jmp
adc
pop
adc
push
outsb
outsb
outsb
outsb
adc
dec
adc
dec
adc
aas
outsb
outsb
outsb
outsb
pop
jmp
sbb
xor
jmp
outsb
outsb
outsb
outsb
sbb
es
and
pop
and
outsb
outsb
pop
jmp
and
or
and
and
and
pop
hlt
inc
cmovge
pusha
inc
in
sbb
popa
xlat
sbb
inc
dec
fsubs
leave
inc
iret
cmp
jl
int
add
or
cmp
repz
and
xor
repz
repz
dec
dec
push
pop
iret
repz
pop
arpl
jb
cmp
repz
addl
lahf
movsb
test
scas
mov
mov
xor
pop
fadds
add
and
sti
aas
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
sub
lock
push
stos
das
adc
mov
and
jecxz
inc
les
cmpsb
mov
jb
fstp
inc
sub
xchg
add
adcb
or
mov
addr16
js
fnstcw
jl
enter
out
mov
add
jo
jo
out
xor
xor
push
test
add
push
xor
orl
cltd
fwait
xor
fwait
xorb
push
test
fnstenv
inc
lea
sub
call
call
or
push
adc
mov
sahf
jo
add
xchg
shll
in
gs
sbb
sub
pusha
js
movsl
call
sub
ljmp
sti
mov
xchg
xchg
shll
or
inc
jmp
xchg
and
add
xor
call
and
fsts
mov
sahf
xchg
pop
es
imul
test
dec
rolb
cmp
jae
add
jmp
decl
mov
inc
add
in
and
pop
lods
pop
add
loopne
or
xchg
push
inc
jmp
adc
test
les
shr
inc
push
push
mov
inc
test
pop
mov
ret
movl
jl
sbb
gs
add
dec
cmp
jbe
push
cmp
mov
add
popa
inc
fmull
int
out
and
sub
fwait
add
dec
rorb
rorl
adc
push
xchg
dec
mov
bound
or
dec
xchg
stc
ja
lea
imul
lret
outsb
repz
or
cmp
lcall
movsl
dec
push
fcomip
das
inc
inc
loopne
add
push
std
and
or
pop
jmp
jb
and
dec
mov
int
add
popf
add
push
or
lock
ja
jns
cmovno
and
mov
push
and
push
dec
call
adc
and
adc
nop
rcl
pop
stos
xchg
push
inc
test
repz
test
outsl
incb
jbe
mov
loope
out
mov
inc
lds
mov
jne
xor
rolb
adc
jb
inc
jo
cmp
jne
jo
mov
add
cmpsb
mov
cmpsb
lret
sbb
add
mov
jge
outsb
or
jnp
push
push
arpl
enter
mov
pop
sarb
mov
sbb
push
xor
insl
cs
pop
cltd
and
enter
lods
fwait
xchg
ja
repnz
fs
xchg
add
sbb
add
and
push
mov
ja
xchg
sbb
xchg
jne
add
push
inc
jnp
adc
icebp
push
hlt
shld
lcall
or
xchg
loope
cmp
jl
rcr
add
sub
push
add
fsubr
testb
cmc
xor
jbe
cli
es
lea
cmp
mov
testb
push
or
js
sahf
push
push
xor
lock
lods
nop
cmp
add
mov
inc
mov
or
ljmp
loope
cmp
inc
mov
dec
cmp
jl
dec
imulb
cmp
push
js
mov
jmp
and
cmp
xchg
ds
mov
and
movsl
sbb
push
mov
sub
mov
push
push
loopne
daa
sti
mov
dec
fldl
mov
test
xor
pop
pop
inc
and
or
movb
fstl
or
cli
add
and
adc
or
inc
and
sbb
pop
shll
sub
call
sub
cltd
ja
jmp
nop
jbe
adc
inc
jo
icebp
fwait
and
push
mov
loope
ret
cmp
in
xor
or
add
add
sbb
ret
push
mov
shlb
es
pop
ss
sbb
adc
sub
lahf
adc
push
int
cmp
add
sbb
cld
pop
adc
rorl
jo
faddl
inc
call
mov
add
add
ret
push
mov
sbb
or
arpl
into
sarl
add
add
sarb
not
mov
inc
add
xor
and
xchg
es
push
sbb
jge
enter
cltd
sub
xor
sub
xor
and
jo
cmp
scas
fs
xor
add
mull
lcall
xlat
mov
xchg
dec
enter
mov
lds
in
jno
shr
push
icebp
icebp
cld
push
dec
sbb
fsubrl
sub
mov
add
ja
sbb
sbb
aaa
test
and
jmp
test
pop
movsl
roll
push
cld
daa
xor
dec
pop
pop
inc
dec
sbb
insl
push
std
xchg
les
jo
je
jmp
push
push
xor
test
xor
pop
mov
sbb
xchg
fiaddl
adc
xor
test
lods
sbb
inc
fwait
push
or
addl
push
mov
sbb
sub
sub
or
lods
and
push
adc
push
xor
adc
enter
pushf
outsl
mov
fisttpl
inc
ds
js
inc
fstpl
repz
inc
orb
adc
lret
scas
icebp
out
je
ss
xor
mov
mov
sbb
or
pushf
xchg
mov
sbb
xor
dec
sarb
adc
call
shrb
outsb
test
mov
test
push
push
ret
sbb
dec
test
stos
cmpsl
ror
pusha
sbb
addr16
cltd
xchg
pop
inc
in
pop
sbb
dec
push
nop
pop
int
cmpsb
xor
xchg
mov
add
mov
test
test
es
or
dec
sbbb
mov
mov
adc
addl
out
pop
sub
push
mov
push
cld
ja
adcb
push
mov
cmp
push
clc
add
sbbl
push
js
icebp
mov
or
or
lea
jge
pop
dec
shll
cmp
inc
inc
popa
shlb
aad
jl
pushf
scas
iret
in
adc
stc
push
jge
ret
mov
pop
mov
add
fidivl
pusha
and
cltd
cmpsl
jno
movsl
fadd
push
add
negb
cmpsl
cs
sbb
andl
insl
xor
jb
mov
jae
mov
movb
mov
jo
es
adc
xor
js
movl
mov
add
lea
jnp
dec
dec
mov
in
bound
push
js
jl
mov
push
lods
or
popf
clc
je
inc
mov
push
hlt
cli
and
inc
sarb
into
je
in
je
lea
push
lock
mov
mov
xlat
adc
ss
push
jg
hlt
sbb
lock
pop
dec
sub
add
stos
ljmp
or
xchg
in
movsb
push
js
cmp
sub
add
sbb
cmp
pop
imul
das
adc
jl
or
xor
inc
cmp
enter
adc
sbb
pop
scas
loop
pop
js
lods
adc
mov
mov
test
loop
js
jg
call
add
xchg
inc
dec
inc
lock
test
vcmpss
mov
inc
pusha
jle
adc
ds
lds
mov
cli
test
cmc
xor
or
sub
mov
sbb
mov
mov
sub
add
insb
pusha
xlat
lods
xor
mov
je
fdivr
adc
sti
shlb
push
arpl
in
and
mov
jns
adc
add
inc
xor
fwait
rcll
dec
and
push
dec
mov
andl
cmc
push
out
or
cmp
inc
mov
sub
clc
and
xor
psubusw
sbb
dec
xor
fsubrs
mov
and
imul
xor
test
std
repz
inc
xor
push
cmp
adc
hlt
cmp
aam
mov
and
sbb
sbb
pop
or
rclb
dec
sbb
out
xor
and
and
andl
cmpb
sbb
loopne
cmpsb
jns
xor
sbb
sbb
je
sbb
pop
add
pop
fcmovne
leave
sbb
sbb
add
push
and
adc
gs
push
cltd
filds
dec
dec
mov
cmp
mov
imul
xor
rclb
inc
mov
and
sub
lea
push
movsl
adc
cs
jp
pop
inc
fisttpll
ficomps
arpl
inc
ret
dec
mov
pop
fidivl
repnz
xchg
clc
jg
add
popa
adc
inc
loope
mov
aas
or
mov
sub
mov
xor
sti
sti
ja
bswap
push
cmp
jne
and
adc
or
mov
inc
sbb
sbb
sub
xor
jo
dec
mov
push
push
xor
jbe
inc
mov
fsubl
mov
leave
adc
xchg
adc
test
xchg
js
mov
mov
adc
adc
cmp
add
loop
jle
sub
pop
mov
mov
xor
popf
test
div
jmp
mov
pop
push
lahf
movsb
andb
bound
ljmp
test
dec
fisubs
lds
and
add
sahf
in
shlb
dec
cmp
inc
mov
sbb
push
push
stos
ss
pop
pop
xchg
lcall
xchg
and
or
jo
mov
xlat
aas
orl
mov
jle
cmp
mov
je
or
dec
ret
icebp
aaa
push
lods
shl
push
push
cmp
inc
pusha
cmp
loopne
pusha
xchg
inc
cmp
pop
dec
inc
add
push
mov
jo
cwtl
push
adc
or
cli
sbb
push
lea
daa
sbbb
je
cmp
stos
inc
std
scas
xchg
shrl
push
cmp
jge
mov
jp
inc
push
out
adc
mov
add
xor
addr16
or
sub
loopne
add
add
mov
stos
or
lock
clc
push
xorb
cld
fistl
or
add
cs
add
test
push
add
add
into
xor
dec
int
jmp
dec
je
add
adc
cmp
dec
or
mov
roll
sbb
loopne
lret
ljmp
rcrl
xor
sbb
xchg
andb
jne
or
mov
adc
push
adc
je
dec
je
push
add
out
loop
jno
dec
inc
stos
dec
mov
adc
add
lret
sub
test
call
push
add
jne
sbb
jle
mov
pushf
cmp
cmp
outsb
roll
xor
add
add
inc
xchg
clc
xor
inc
xorb
testb
sbb
or
inc
cltd
idiv
inc
inc
imul
cli
pushl
mov
jb
addb
jle
jg
and
je
mov
add
add
or
cmp
jns
or
cmp
or
add
adc
push
push
lock
ljmp
out
rcrb
sbb
sub
fiadds
daa
pop
ficoms
jae
adc
and
aad
leave
repnz
cld
insl
addr16
jae
mov
lcall
scas
ljmp
decb
or
pop
adc
cmp
je
cmp
pop
cmp
sub
add
cmp
inc
jne
mov
sub
ds
test
inc
or
mov
aad
cmpsb
adcl
jb
mov
movsb
cmp
loope
sbb
clc
cmp
jne
xchg
lcall
nop
jp
js
outsl
xchg
rolb
sbb
call
jnp
pop
bound
push
pusha
imul
leave
adc
in
xchg
cld
jmp
jle
jl
or
movsb
sar
mov
mov
jmp
and
jno
mov
inc
jl
inc
jg
aaa
shrb
pop
jle
add
shl
dec
mov
sub
mov
mov
mov
cmp
cmp
les
outsl
adc
jl
mov
or
jp
inc
jl
gs
cltd
xchg
fists
arpl
cmp
icebp
or
sbb
xor
push
sbb
mov
rol
les
aaa
adc
push
and
sti
jbe
cmp
pusha
mov
jg
fcomi
enter
add
dec
mov
test
out
mov
roll
dec
jl
xor
cmp
inc
icebp
iret
orb
sub
loop
jp
sub
xor
cmp
mov
pop
das
test
push
sub
inc
cmpb
mov
int3
pop
add
mov
rolb
in
in
inc
inc
mov
out
jmp
xor
xor
mov
loopne
adc
and
mov
mov
adc
sti
add
popa
mov
push
cmp
dec
addb
popa
inc
and
jmp
mov
outsl
cmp
je
cmp
je
add
jne
lock
movb
nop
jp
out
mov
hlt
or
movsb
push
push
ss
pop
rcrb
shl
jne
mov
mov
cld
push
jmp
pop
push
mov
xchg
sub
inc
stos
lret
mov
inc
out
jmp
adc
test
je
and
mov
pop
mov
adc
lods
jp
ret
adc
adc
arpl
lock
rclb
popa
sti
push
iret
push
push
out
push
push
lcall
clc
cmpl
add
or
push
xorb
loopne
popa
js
add
mov
add
pop
xorl
mov
sub
jge
jne
repnz
sub
and
rcl
loopne
sbb
pop
push
add
js
push
xor
int3
adc
and
xor
push
jbe
mov
inc
or
jg
xchg
mov
jbe
or
pushf
insb
xchg
subb
lods
pop
and
or
pop
and
popa
sbb
mov
or
and
js
addb
jmp
sbb
cmp
inc
push
mov
loopne
xlat
mov
sbb
jbe
test
xchg
roll
out
imul
jb
sbb
inc
jmp
pop
push
sub
rorb
inc
add
adc
test
cmpsl
add
mov
inc
xor
inc
sub
push
mov
cltd
test
fidivl
orl
push
cmp
loope
cmp
dec
add
push
and
and
es
add
adc
test
ret
cmp
cmp
inc
js
xor
lods
push
roll
xor
add
xor
jnp
or
push
or
repnz
rcll
xchg
ds
lods
push
insb
sub
jb
jo
or
inc
inc
mov
sub
or
fcomi
add
movb
jbe
andl
mov
popf
sbb
add
push
enter
jmp
and
fcoms
cmpb
jne
lods
and
mov
outsl
jb
jbe
push
out
ret
fstps
cmp
ret
flds
pop
xlat
xor
pop
clc
sub
aad
add
popf
push
fwait
mov
cmp
mov
aas
add
lods
fiadds
je
into
push
inc
or
mov
xor
xchg
test
pop
pop
jb
xchg
cmp
mov
stos
or
call
mov
jno
cmp
repz
sub
and
insl
test
mov
arpl
js
ret
int3
pop
repnz
sbb
push
xchg
push
repnz
scas
test
mov
addb
rcr
test
inc
cltd
or
cmp
push
add
mov
mov
dec
xchg
xchg
and
dec
or
rorl
enter
push
push
sub
lret
fsubl
testb
rorl
xor
ret
pusha
inc
insb
scas
adc
jo
je
inc
jo
push
jecxz
sbb
xchg
popa
jmp
pop
jle
cmpl
lea
fadds
dec
mov
xor
push
aam
mov
or
test
mov
dec
add
lock
ret
mov
adc
sub
adc
cmp
and
xlat
or
push
sbb
sti
sbb
lret
push
jo
mov
or
repz
test
push
dec
shl
jmp
fnstenv
jl
push
cmp
xchg
nop
mov
cmpsb
cli
xchg
cmp
dec
sub
call
inc
push
mov
sahf
inc
push
sbb
sub
mov
rcr
shlb
mov
aam
or
inc
fwait
addl
or
cmp
cltd
adc
aam
adc
push
adc
sub
mov
or
bound
push
mov
loope,pn
and
xor
lea
mov
push
lcall
xor
hlt
cli
es
push
jmp
push
dec
rol
pusha
pushl
jae
shll
push
pop
or
sbb
mov
ss
push
mov
or
mov
pop
inc
hlt
xchg
movsl
sub
add
les
sbb
mov
add
sbb
push
or
mov
cwtl
pop
dec
jne
jge
cmpsb
and
and
inc
je
and
mov
ret
in
push
or
cmovge
aas
mov
jno
cmpb
add
scas
pop
adc
inc
push
lahf
push
inc
xor
push
jge
ret
pop
mov
test
cmp
dec
adc
or
xlat
and
or
adc
add
sub
add
dec
and
loopne
lods
fistpll
xchg
or
nop
mov
add
dec
or
pusha
lods
jnp
sti
fnstenv
push
add
inc
out
xorl
lock
sbb
and
das
or
xchg
jb
ret
daa
sbb
add
das
out
in
sti
mov
cmpsb
inc
stc
cmp
pop
popf
inc
inc
mov
std
push
sarb
daa
jne
xor
jne
add
push
roll
pop
loopne
dec
mov
push
enter
xor
mov
in
enter
fidivrl
aam
shlb
adc
mov
ficomps
scas
push
pop
out
lods
xchg
sbb
sbb
push
jmp
sbb
out
js
push
push
ds
dec
aaa
pop
shll
ret
or
fdiv
mov
aaa
hlt
adc
stos
push
loope
dec
rorl
inc
and
cli
jne
adc
in
cmpsb
std
xor
mov
dec
mov
movsl
sbb
jno
cmp
mov
mov
nop
push
dec
movsl
jb
je
sub
xchg
cmpsb
mov
mov
sub
cmp
cmp
and
or
enter
inc
lods
adc
mov
movsl
lcall
addr16
nop
inc
inc
pop
das
or
lahf
orl
adc
insl
xor
pop
js
mov
xor
mov
and
jns
xor
outsl
lcall
sbb
in
movl
add
lsl
std
mov
xorb
pop
rcrb
clc
out
xor
fs
jl
clc
daa
mov
sub
cmp
test
or
jmp
insb
das
into
sbb
idivb
adc
jb
inc
imul
jmp
andb
adc
das
imul
cwtl
in
cmpb
jmp
cmpsl
movsl
rcl
adc
pop
inc
jb
pop
lahf
cmpsb
push
popf
add
out
test
sbb
pop
jmp
fsubr
mov
mov
icebp
cmp
roll
xor
mov
and
add
add
pop
pop
scas
xor
push
daa
push
clc
mull
add
cmp
sbb
dec
push
add
jmp
cmpb
fwait
in
lret
fcmove
pop
xchg
xor
push
jmp
xor
mov
mov
sbb
js
add
adc
push
sbb
adc
insb
and
add
add
adc
in
mov
scas
cmp
fadds
in
data16
in
out
cli
adc
adc
mov
or
xor
andl
add
push
inc
ret
lcall
mov
jl
pop
imul
dec
jge
pop
jge
sub
push
xor
xchg
fsubl
dec
inc
fsubs
push
sbb
add
lea
fisttpl
fimuls
jg
loop
sub
lret
pop
ret
insl
jmp
inc
outsb
add
xchg
fidivs
jmp
or
ja
hlt
jmp
inc
inc
call
dec
sahf
xor
dec
and
cwtl
pusha
loop
dec
or
jo
inc
shll
mov
fs
imul
pusha
cmpsl
sbb
sbb
pop
push
ret
ret
outsl
daa
test
add
ficompl
pusha
cmp
add
or
or
dec
add
adc
sti
test
and
or
adc
repnz
pop
mov
sub
xchg
lods
sub
addl
mov
adc
mov
jmp
sub
lea
inc
adc
je
push
or
ret
lcall
out
shll
and
push
sbb
mov
adc
add
imul
xchg
mov
dec
ss
xchg
mov
movl
sub
or
cmp
enter
sbb
sbb
mov
sub
sbb
int
adc
or
push
xor
mov
pop
fld1
cmp
adc
jns
push
loopne
or
mov
push
or
cmp
dec
mov
sahf
push
sub
lret
insb
loope
movsb
sbb
push
out
mov
std
push
and
adc
xchg
sub
xchg
std
js
loop
inc
mov
sbb
jle
mov
cmp
call
push
out
fprem
adc
sub
sbb
int
jnp
and
cmp
dec
aad
test
or
jne
mov
pop
mov
cmp
mov
sub
jle
jne
fmull
outsb
outsl
pop
push
jae
cmp
jmp
mov
adc
std
pop
out
add
add
push
cs
lahf
ds
xor
dec
mov
sbb
insb
out
jmp
lea
test
insb
dec
push
in
rolb
cmp
dec
sbb
xchg
or
ret
jmp
mov
mov
adc
sbb
sub
push
mov
dec
lods
fwait
dec
inc
dec
dec
lock
scas
insb
aas
or
jle
cmp
adc
xlat
mov
and
push
pop
mov
sub
lret
mov
mov
xor
dec
jo
dec
dec
jno
scas
shl
sbb
outsl
sbb
jo
or
pop
jmp
sarb
or
or
and
push
rorl
jo
xchg
dec
push
pop
cli
lods
push
insb
cmp
push
je
sub
sahf
std
scas
jae
cmp
pop
mov
jmp
ror
or
add
cltd
int
fists
add
mov
cmp
rorb
mov
inc
insl
or
shr
rep
adc
data16
lds
cmp
movsl
adc
fs
divb
inc
cmp
jb
xor
jl
popf
daa
ja
or
lods
jmp
pop
and
nop
pop
inc
mov
scas
stos
pop
jg
push
ds
loope
mov
call
imul
stos
sbb
addb
adc
popa
lahf
cmp
ja
neg
lahf
add
jae
sbb
push
or
sub
xor
lds
dec
jno
imulb
mov
push
rcl
xchg
jo
or
mov
cmp
in
loope
addr16
test
or
cld
jmp
inc
daa
adc
add
jmp
fsubrp
jne
xor
rorb
cli
lds
gs
push
mov
mov
js
outsb
xchg
sahf
adc
in
testl
addl
arpl
loopne
std
and
fadd
push
mov
gs
mov
push
js
in
xchg
scas
sbb
ret
fisttpl
sub
pop
mov
pusha
sub
and
xchg
aas
adc
mov
xor
sbb
jo
or
dec
pop
fwait
xchg
push
adc
adc
or
adc
call
loope
jbe
cmp
dec
pusha
cwtl
or
out
inc
enter
sub
ret
dec
loop
or
sub
rclb
std
loopne
adc
test
mov
push
loope
push
sbb
ret
or
xchg
lret
in
data16
call
je
and
push
push
pop
cmp
pop
cmp
pop
test
loop
in
mov
or
call
int
sub
pop
push
ja
inc
jmp
xchg
mov
xor
and
ss
imul
scas
and
push
sub
stos
cltd
cmp
dec
cmp
xor
jnp
xor
dec
sbb
and
cld
sbb
fisubrs
addl
xor
add
jne
and
inc
inc
bound
jo
aam
dec
push
in
cmp
adc
add
mov
test
inc
ljmp
aas
nop
out
enter
das
sar
shrl
adc
jo
out
jecxz
mov
sbb
lock
push
mov
pop
mov
pop
sub
jg
rcl
adc
push
stos
test
cmp
mov
xorb
push
and
outsb
test
push
addr16
cld
or
and
pop
dec
pop
imul
in
dec
push
adc
and
les
sub
cmp
mov
pop
les
loope
add
adc
js
sti
rol
dec
push
jmp
add
add
xor
cld
pop
cmp
je
cmp
jbe
push
addr16
sub
push
jmp
das
loopne
mov
mov
pop
push
movl
cmp
inc
movsb
nop
push
and
mov
mov
jle
xchg
or
mov
lock
pop
inc
aas
push
mov
stos
mov
or
adc
pop
xchg
or
dec
jne
cmp
je
sub
js
dec
pop
mov
sub
pop
xorb
pop
push
ss
add
dec
insb
rorb
push
xchg
push
cmp
mov
add
jne
nop
fdivs
add
aas
lahf
inc
mov
sub
inc
jo
pop
test
loop
subl
enter
cmp
push
nop
add
add
jl
es
xchg
je
xor
jge
dec
add
cwtl
xchg
jl
pusha
jo
mov
and
daa
sbb
daa
ficoml
int3
pop
push
arpl
cmp
cmpsl
adc
test
fcomip
cmp
inc
mov
adc
jb
or
mov
je
mov
pop
sub
test
inc
xchg
icebp
add
daa
add
pop
cmpsl
dec
add
rcr
sbb
and
add
int
enter
xor
or
popa
adc
and
push
jne
ljmp
test
pop
and
out
and
je
sub
js
js
int
rcl
add
add
inc
push
sub
rcl
js
pop
lea
jmp
push
sbb
push
adc
lock
or
addl
adc
loope
test
mov
jecxz
adc
rcr
or
jae
jmp
mov
xorl
sub
add
dec
jne
jmp
push
sub
jg
add
jg
push
dec
je
dec
jecxz
or
jne
mov
pushf
inc
aaa
sahf
xchg
pop
mov
lock
push
hlt
dec
pop
lods
enter
jo
daa
loopne
pop
pop
or
add
xorb
stos
mov
xor
push
push
add
test
adc
outsb
loope
mov
push
cmp
jne
mov
rcr
mov
jne
es
sub
cmp
jne
call
ljmp
sar
ret
movzbl
push
dec
cld
cmp
out
jmp
adc
jmp
std
std
jmp
xor
cld
jmp
fistl
adc
dec
pop
sbbb
fiaddl
inc
cltd
rcrb
jb
or
sbb
push
stos
adc
push
pusha
add
sbb
rol
or
mov
fistpll
lods
cmp
jmp
or
sti
and
cmp
rorb
cmp
push
scas
andl
pop
push
pop
inc
clc
jp
bound
add
sub
adc
inc
push
addb
add
sub
adc
nop
or
pushf
sub
or
xor
or
pop
pop
pcmpgtb
fs
pop
sub
insb
loop
lea
daa
cmp
movsb
sbb
ja
stos
mov
adc
xchg
xor
js
jg
movsb
sbb
jb
aas
push
bnd
or
sub
js
push
dec
mov
movb
jmp
enter
adc
pusha
mov
je
mov
loop
rolb
cmp
jg
add
mov
cmp
mov
scas
xor
add
push
mov
cmp
push
movsb
xchg
mov
outsb
sarb
pop
sub
dec
pusha
arpl
ja
fildll
out
es
test
inc
push
xor
pop
div
or
addl
sbb
in
shrb
arpl
mov
test
insb
sbb
cmp
pushf
jae,pn
xorb
clc
pop
adc
pop
movsl
or
sub
pop
sarb
sub
into
gs
add
sub
arpl
popa
inc
lcall
mov
sub
dec
jmp
or
cmc
pop
fs
jp
mov
les
sbb
push
insb
dec
icebp
pop
rcll
pop
test
pop
fisttpll
aas
shr
ror
cld
icebp
inc
je
dec
andl
or
push
nop
lock
mov
jo
mov
sub
pop
and
push
pop
sbb
sub
int
or
js
cmp
cli
add
pop
les
fdivs
fistps
xor
call
jge
add
test
not
and
sub
xchg
sub
sub
aas
xchg
push
rcrb
mov
sub
mov
stos
mov
inc
fnclex
push
lods
sbb
jbe
and
cmpsb
and
jne
jae
pop
pop
pushf
mov
sub
fiaddl
js
or
jmp
sub
incb
xorl
inc
movb
cs
out
sub
ds
scas
cli
or
sbb
ret
add
xor
shl
mov
or
scas
mov
dec
je
mov
inc
cmp
mov
inc
cmp
jb
loop
pop
mov
loop
enter
cs
jl
add
imul
lea
push
lea
mov
rcr
loopne
push
adc
ret
loope
mov
add
test
or
pop
mov
jmp
or
outsl
pop
shl
push
adc
jle
gs
sub
xor
add
lret
notb
push
xor
xor
xor
jo
and
sbb
je
stos
in
or
out
sbb
and
adc
pop
out
cld
int3
ss
push
add
cmp
je
test
je
jle
out
mov
xchg
inc
ficomps
outsb
or
cld
lods
xor
fdivrp
xorl
mov
and
test
in
test
xor
adc
or
jl
mov
jg
mov
push
mov
addb
hlt
add
xchg
test
sbb
or
xor
inc
xor
xchg
xor
outsl
testb
mov
inc
jmp
cmp
jne
sbb
jmp
adc
add
out
sub
sub
dec
scas
mov
inc
cmp
and
cmp
stos
push
xor
pop
cmp
je
cmp
mov
stos
jl
or
adc
or
adc
pop
into
dec
add
mov
or
xchg
pushf
push
mov
or
xor
lret
mov
loop
je
mov
dec
xor
dec
add
sub
push
and
in
mov
subl
sub
push
fnstenv
push
or
push
add
add
sbb
adc
mulb
pop
shlb
sbb
sbb
add
loopne
std
mov
dec
test
jne
test
cmp
movsb
dec
popl
sbb
xor
xor
jbe
mulb
dec
test
or
pop
jle
sub
add
adc
negl
mov
sbb
lds
rorb
mov
test
add
cmp
push
ss
dec
jmp
je
xchg
and
cmpl
fsubrs
push
push
das
popf
lcall
xor
inc
jne
loope
push
add
sbb
cmp
dec
inc
pop
add
mov
adc
push
ds
int3
sbb
sbb
imul
ljmp
cmpsl
dec
cmp
cmpsb
xor
sbb
fisubrs
lret
add
or
jae
jmp
jle
fs
jb
lea
adc
sbb
pop
pop
adc
push
stc
xchg
push
dec
push
lock
lock
inc
adcb
shll
cwtl
mov
push
out
adc
push
pop
in
and
inc
clc
xchg
int3
loopne
in
sub
sub
jae
or
popa
mov
outsb
xor
test
roll
inc
adc
scas
mov
xlat
popf
lods
loop
pop
pop
push
aaa
push
call
in
test
in
into
fisubrs
mov
dec
ljmp
icebp
cmpsb
arpl
jns
ror
adc
lret
xchg
cwtl
mov
xor
int
push
jne
lret
lods
push
stos
lods
and
add
fcoms
xchg
add
rorb
and
aas
dec
mov
fldt
dec
ja
pop
jbe
lea
adc
sbb
cltd
out
movsb
add
call
xchg
adc
sub
inc
dec
scas
and
add
and
dec
out
add
es
out
scas
or
or
out
adc
push
into
or
xor
push
repz
and
test
pop
notl
sub
adc
mov
in
add
add
shlb
std
or
cmp
call
lea
or
andb
inc
sub
sub
cmp
xchg
nop
adc
fmuls
or
fidivl
pushf
cmp
mov
sbb
pop
lret
and
or
jbe
add
std
jmp
cmp
jl
out
cs
or
lret
pop
and
sub
sbb
adc
rep
add
push
push
jb
mov
arpl
mov
dec
sub
ja
jne
mov
jo
mov
mov
out
repnz
jne
pop
add
add
xor
ret
cmp
test
rorb
add
or
jb
push
push
jns
inc
mov
xor
lea
jg
or
andb
cmp
or
add
repz
cmp
jmp
shr
mov
insb
sbb
data16
cs
mov
inc
les
sbb
jmp
aad
dec
loopne
loopne
xlat
jp
sub
aaa
sbb
decl
aad
call
push
lret
sbb
jns
pusha
add
test
lock
mov
push
int
nop
jbe
pop
and
jb
lea
push
adc
cmpsl
sbb
mov
inc
adc
dec
push
pop
cmp
ss
sbb
sub
xor
mov
and
lods
or
add
insb
pop
cmp
lock
or
loopne
lock
jnp
sarb
out
cmp
outsb
rclb
or
jmp
dec
lods
sub
scas
test
xor
mov
xchg
sbb
sbb
cmpb
inc
sbb
cmp
pop
push
jl
sbb
cltd
pop
bnd
nop
imul
mov
dec
jl
in
std
jne
add
xor
jne
dec
arpl
or
clc
jmp
mov
rclb
shll
and
mov
and
pop
pop
mov
mov
xchg
add
jmp
add
testl
push
test
add
movsl
inc
test
inc
clc
xchg
hlt
inc
pop
add
push
xchg
cmp
ljmp
inc
mov
ret
jmp
ss
lcall
imull
xor
repnz
mov
inc
cmp
add
rclb
in
adc
mov
sub
inc
ja
call
gs
mov
sbb
rcll
xor
data16
fstl
mov
push
and
call
sbb
cmp
je
lods
or
or
dec
jle
mov
sbb
jne
ja
cmovne
sub
jne
loopne
je
aas
cmpl
adc
outsl
lret
ret
outsb
jg
andb
and
sbbb
pop
aad
or
add
and
sti
mov
push
mov
dec
test
movd
jnp
std
movapd
push
clc
jae
sub
shlb
jle
xor
idiv
rcl
lret
fistpl
jl
dec
cmp
jge
repz
outsl
scas
insl
mov
adc
or
dec
mov
xchg
ret
adc
jnp
scas
jg
sarb
push
and
mov
mov
adc
or
add
adc
mov
pop
lock
add
shl
imul
sarb
addsd
int
add
sbb
jnp
push
dec
sbb
inc
aaa
test
push
add
or
jmp
popf
push
faddl
in
clc
ja
add
jecxz
scas
ret
mov
xor
or
in
das
js
aaa
sub
in
mov
aaa
lock
nop
pop
ret
push
adc
stos
imul
adc
movsb
jne
aas
jle
lods
or
jns
jbe
rorb
pop
mov
push
and
mov
inc
push
jne
inc
or
aaa
hlt
divl
push
mov
push
push
mov
pop
xchg
sbb
push
adc
and
jb
or
adc
and
jno
imul
dec
xor
inc
push
rcrb
push
push
pop
clc
cmp
in
nop
adc
xchg
movsb
jnp
je
adc
leave
adc
xchg
movsl
movl
je
sub
js
and
mov
push
dec
inc
cld
pop
nop
sbb
cmp
jecxz
int
xchg
mov
and
add
cmp
jp
fdivrl
cmp
inc
and
insl
std
add
mov
xor
and
push
roll
xchg
mov
jmp
or
fiadds
xor
cmp
into
loop
sbb
icebp
and
repnz
lret
je
xlat
add
sub
adc
inc
xor
repz
jo
inc
in
aas
loopne
rol
pop
and
pop
jbe
or
push
data16
sub
popa
enter
inc
jns
adc
add
lods
ja
or
dec
nop
mov
inc
add
or
inc
ljmp
dec
hlt
shll
pop
sub
imul
rolb
test
orb
xor
adc
push
mov
aad
jg
call
cmp
arpl
push
or
out
push
sub
adc
lods
ds
ret
adc
cmp
dec
lods
movsl
pushf
fdivl
adc
add
mov
jne
inc
cmpb
out
add
sarl
pushf
mov
inc
inc
and
adc
or
aas
insb
mov
and
jno
add
scas
or
jns
insl
mov
fldenv
cwtl
pavgb
inc
inc
cs
mov
jecxz
adc
mov
cmp
mov
hlt
sbb
cmp
pop
jmp
mov
push
pop
pop
lock
sbb
adc
andb
shl
or
add
or
jmp
rcll
cmp
inc
inc
xor
je
inc
bound
lds
jg
push
loope
push
mov
movl
pop
adc
jmp
pop
dec
adc
mov
icebp
jp
push
xor
inc
enter
add
add
das
and
out
sub
or
or
cmp
push
or
xchg
clc
rcrb
fcompl
mov
sbb
xor
cmp
cvtdq2ps
and
and
fcmovu
xor
push
jo
sub
dec
subl
pop
cmp
pushf
mov
cmp
fwait
jmp
add
cmp
dec
lret
jnp
es
sub
cmp
jne
push
adc
imul
ds
or
add
mov
sub
add
mov
inc
adc
loop
mov
pop
or
and
sbb
sub
add
insl
cwtl
nop
test
cmp
loope
fucompp
les
es
pop
add
inc
and
mov
push
mov
addr16
mov
sbb
push
jbe
mov
mov
adc
mov
sub
or
js
in
arpl
pop
and
imul
jns
orl
repz
add
adc
dec
or
inc
cs
and
lods
xor
loope
pop
addl
out
push
ss
enter
inc
dec
pop
xor
les
add
loope
add
jne
pop
sahf
or
fisttpl
sbb
mov
sbb
hlt
pop
mov
aam
orb
mov
mov
inc
or
push
jmp
cmpsb
jne
data16
dec
imul
push
jmp
je
test
push
jle
push
fidivrl
mov
add
inc
popf
add
sub
sbb
add
pop
adc
lcall
enter
push
rolb
out
add
dec
shl
arpl
lcall
addb
sbb
ds
jb
int3
dec
rolb
dec
mov
xor
imul
sbb
push
cmpl
loopne
pop
test
pop
fcmovnu
xor
shrb
in
orl
out
jno,pn
adc
ljmp
in
call
jmp
push
or
inc
cmp
pop
addl
push
sbb
cmp
pop
xor
call
pcmpeqd
stos
inc
jl
cmc
cltd
pop
idiv
test
rolb
ja
pop
lds
stos
adc
add
insl
js
jnp
xor
sbb
sub
and
add
xchg
inc
xor
daa
adc
pushl
ficoml
test
add
dec
loopne
adc
mov
movsl
sub
xor
add
loopne
mov
popf
out
or
mov
movsb
mov
and
mov
std
add
pop
jns
sub
or
in
sbb
inc
adc
cmp
or
repnz
add
or
test
adc
js
mov
sub
push
and
xchg
loopne
mov
adc
add
push
addl
adc
js
stos
push
pop
dec
dec
out
push
push
ret
fcmovb
filds
mov
push
in
mov
pusha
mov
jbe
and
lods
add
addl
or
jg
rclb
xchg
fcompl
pop
faddl
jo
dec
adc
ret
bound
insb
negl
push
xor
adc
sbb
popf
addb
mov
daa
adc
add
push
aam
sbb
popa
jnp
imul
or
adc
jmp
dec
faddl
or
jne
push
push
or
jg
dec
push
sbb
add
jmp
sub
mov
mov
push
cltd
fdivs
or
adc
xor
push
mov
push
test
fsubrl
lea
push
test
inc
sbbl
add
mov
add
clts
in
xchg
push
test
push
insb
push
addr16
jne
mov
add
sbbl
add
dec
and
sbb
jle
inc
jne
push
sub
dec
aam
sbb
push
leave
adc
mov
and
test
movsb
dec
xchg
cmovp
jns
jns
mov
or
push
and
push
sub
xchg
mov
inc
add
push
iret
js
rol
dec
push
xchg
jbe
scas
cmp
mov
add
ja
out
pop
std
enter
or
dec
dec
pop
push
jmp
aas
lcall
mov
aad
dec
pop
mov
dec
adc
loopne
or
pusha
ss
dec
and
jo
sbb
movb
mov
mov
in
cmp
mov
dec
and
jae
inc
jne
pop
lret
sub
adc
shr
jle
add
push
add
out
std
fildll
push
mov
add
add
sub
lea
dec
sbb
rclb
adc
mov
or
mov
test
adc
icebp
movsl
sub
je
or
dec
and
sbb
shr
cmp
jp
or
pop
jle
loopne
cwtl
push
jb
push
insb
ss
mov
xchg
cli
or
lea
mov
xchg
and
dec
push
mov
nop
out
addr16
rolb
fwait
stos
push
pop
int
add
sarl
das
enter
mov
push
sub
clc
push
inc
mov
outsb
dec
xchg
mov
imull
pop
add
pop
jp
xchg
pop
xchg
push
jl
pushf
je
push
push
dec
test
add
es
push
sbb
add
into
cmp
lret
mov
push
les
loopne
dec
jnp
dec
jmp
inc
lods
movsl
pop
mov
lcall
mov
mov
ret
test
inc
push
sarl
inc
xor
and
out
jnp
jns
add
inc
cmp
dec
ret
fldcw
cmp
cmp
stc
mov
pusha
sarl
shl
imulb
imul
add
pop
jmp
loopne
pop
fcmove
movsl
inc
sub
pop
adc
pop
imul
cmp
ret
add
push
addb
cmp
outsb
test
jmp
dec
or
cmp
cltd
pop
inc
mov
inc
add
out
jo
add
xchg
mov
add
dec
jne
sbb
xlat
je
cld
xchg
sub
jb
aad
pusha
mov
int3
scas
cmp
push
dec
pop
sets
sub
push
leave
pop
xchg
push
mov
jg
pop
jb
push
add
aam
push
cmpl
test
hlt
js
sub
lret
inc
dec
roll
fiaddl
stos
sub
cmp
fildl
js
aaa
fs
cmp
enter
js
lods
mov
adc
mov
and
pushl
lea
pop
lods
or
push
push
xchg
lret
and
mov
cwtl
sub
add
lock
push
popa
mov
push
pop
aam
test
cmp
and
dec
pop
hlt
and
mov
out
pop
and
or
xchg
sbb
jns
inc
and
adc
int
dec
mov
movsb
xor
addb
mov
popa
stos
sub
leave
dec
incl
aam
in
push
or
gs
ljmp
test
shlb
push
mov
dec
icebp
mov
inc
mov
or
shrl
or
adcb
sbbb
mov
xchg
and
and
fisttpl
jmp
loop
insb
fsubrl
mov
jae
add
inc
push
mov
inc
jecxz
ret
push
adc
sub
fisttpll
sbb
fwait
or
mov
mov
sub
rorl
bound
jecxz
inc
mov
fisubrl
hlt
push
lock
mov
jmp
pop
imul
xchg
int3
mov
or
daa
test
repnz
movsb
push
sub
and
sub
hlt
ret
fmul
scas
sar
pop
out
imul
mov
and
loopne
rcll
loop
mov
or
in
fmull
mov
dec
enter
popa
jp
push
dec
push
mov
enter
add
stos
inc
push
adc
data16
dec
push
pusha
loope
out
scas
xchg
adc
sbb
xor
jge
push
loope
pusha
add
mov
loope
insb
gs
push
daa
push
aad
inc
iret
push
stos
int3
add
popf
lods
xlat
andb
inc
inc
incl
mov
add
cmp
sub
pushf
lock
jb
sbb
xchg
push
sub
fwait
add
cmovbe
pop
fimull
repnz
xchg
test
incl
mov
movsl
jmp
imul
popa
jb
ret
cs
mov
ss
lock
push
je
or
stos
add
out
push
and
and
imul
add
add
nop
scas
mov
dec
push
test
dec
add
lret
inc
xor
xchg
mov
jns
or
mov
jns
movsb
pushf
xchg
mov
mov
call
call
repz
repz
hlt
clc
clc
cld
push
add
test
add
clc
sbb
jmp
clc
push
add
sbb
sub
nop
inc
pop
sti
push
andl
inc
and
fcompl
ret
xor
jl
cld
pop
and
scas
loopne
or
jl
divl
adc
mov
adc
sub
daa
stc
mov
subb
nop
push
mov
pushw
add
out
mov
mov
mov
inc
xchg
lret
push
out
push
add
nop
dec
dec
addr16
mov
push
gs
mov
repz
push
inc
dec
push
pop
repz
imul
cmp
sbb
adc
adc
cmp
repz
or
or
inc
mov
xchg
test
movsb
mov
and
pop
bswap
sbb
daa
ja
jg
mov
xor
or
pop
and
sub
fstpt
daa
or
inc
cmp
std
inc
je
mov
int
add
testb
jne
pop
into
pop
fldl
mov
and
sar
ljmp
mov
xchg
add
inc
cmpsb
mov
mull
jne
push
sbb
sar
push
roll
loopne
push
mov
inc
and
cmp
outsb
and
and
insl
sbb
adc
pop
xchg
mov
flds
lods
xor
pop
in
int
movsb
adc
dec
cmp
lock
pop
and
rorl
jmp
testb
cmp
cmp
fidivrl
fstl
fnstcw
ljmp
inc
sbb
or
xchg
mov
fcomip
addb
sub
mov
fs
or
enter
push
icebp
pop
enter
pop
pop
out
pop
enter
adc
shrl
or
mov
adc
push
or
outsb
adcl
jge
dec
mov
aaa
pop
or
subb
dec
inc
loopne
sub
aam
jge
push
lock
loope
push
in
lcall
mov
ret
sub
xchg
push
lods
mov
dec
insb
clc
add
movb
jmp
mov
xor
mov
out
mov
mov
push
push
sub
sbb
and
jo
arpl
or
mov
add
cmp
or
dec
stc
adc
rcrl
adc
lock
xor
adc
ret
dec
addr16
ret
nop
rorb
pop
and
imul
lcall
cmp
movsb
cmp
xchg
add
add
shr
call
add
fisubrl
add
sahf
outsb
add
or
idivb
je
rep
mov
dec
ljmp
push
mov
jmp
mov
or
gs
push
cmp
mull
adc
sbb
repz
and
popl
stc
imul
mov
fcomps
test
mov
add
jnp
add
pop
mov
or
mov
xorb
out
mov
ss
add
cmpsl
cltd
int
fldt
in
dec
xchg
xor
inc
fdivs
aam
inc
push
xor
leave
jecxz
jl
xor
sub
stos
push
add
sti
rorl
xchg
mov
testb
mov
mov
into
sbb
jl
add
cmc
arpl
loopne
fsubrl
popf
aam
sarb
loope
xchg
clc
or
or
les
test
or
push
imul
cld
xor
adc
out
pop
adc
aam
push
pushf
and
pop
in
xchg
rorl
push
adcb
mov
add
pop
push
sub
pop
mov
push
add
pop
stos
xchg
add
mov
xchg
adc
dec
incl
orl
push
add
stc
sub
lcall
lods
pop
das
mov
push
sbb
loope
test
rorl
dec
mov
rorb
popa
xchg
sbb
pop
subl
add
or
pusha
sbb
xor
mov
inc
cltd
adc
jbe
push
inc
fisttps
stos
add
test
int3
cmpsb
jae
adc
or
inc
add
mov
stc
mov
xchg
nop
sub
mov
divl
xchg
aaa
adc
js
ds
pop
gs
mov
mov
jecxz
pop
or
and
cmp
mov
loope
bound
add
xchg
add
fsubl
or
cmc
and
and
or
inc
fsubl
push
int3
or
push
lret
jbe,pn
fnstsw
mov
jmp
popa
test
fcomps
sub
popf
inc
notb
mov
dec
dec
mov
push
cli
rolb
cmp
xchg
adc
push
dec
push
sub
dec
xlat
test
and
or
cs
mov
fildl
out
mov
jne
sbb
popf
pop
roll
or
add
adc
ss
pop
cmp
mov
leave
xchg
call
push
jo
xchg
loopne
rorl
or
add
cmpl
sahf
sar
lahf
lea
mov
pop
ja
mov
add
shll
cmp
sbb
sar
pop
lods
movsb
cmp
pusha
xor
es
jno
xor
addb
lahf
lret
in
cmp
mov
or
clc
les
lret
fildl
je
or
je
or
adc
sbb
add
jb
add
sarb
mov
xchg
mov
mov
adc
mov
aas
clc
cs
add
adc
push
imul
dec
lock
lea
ja
test
movsl
mov
mov
cmp
leave
hlt
pop
sbb
or
stc
cmp
mov
fmull
push
adc
inc
sbb
test
add
dec
loope
insb
fsubl
imul
loop
add
adc
mov
mov
js
add
sbb
int
mov
into
enter
movsl
push
sbb
inc
fs
cmp
rcll
imul
out
and
pop
adc
mov
subb
mov
rol
adc
popa
lcall
ljmp
add
or
sbb
mov
inc
je
pop
push
in
imul
cmp
mov
mov
inc
adc
and
adc
push
cmp
cmp
adc
shll
jbe
je
push
arpl
imull
cmp
loopne
pusha
cmp
xchg
aaa
aam
loope
je
mov
add
ret
push
or
dec
and
in
add
jl
mov
jo
sub
in
mov
or
pop
sub
daa
shll
in
or
addr16
scas
cmp
xchg
add
push
insl
cmp
adc
imul
mov
push
sub
push
shl
jecxz
mov
mov
mov
ss
cmp
adc
test
push
sbb
and
divl
mov
push
nop
mov
push
movsl
mov
dec
loope
inc
and
out
std
xchg
sub
mov
inc
cli
inc
stc
jo
xlat
mov
mov
arpl
dec
mov
bswap
xor
xchg
dec
lea
cmp
pushf
mov
sbb
test
push
dec
sub
outsb
jo
jmp
mov
mov
add
addr16
insl
je
hlt
repnz
je
or
sub
cmpsb
inc
push
ss
ss
jo
jle
je
xor
bound
gs
stc
test
pop
sbb
imul
or
adc
insb
in
jmp
or
and
rcll
add
push
add
mov
divb
movsb
addr16
jle
mov
mov
jmp
cmp
jle
popa
popf
jecxz
fdivrl
cmp
orl
push
add
sub
scas
lret
inc
mov
fs
push
push
shr
push
push
insb
sbbl
cmp
xchg
mov
adc
adc
mov
sbb
out
int
push
xchg
sub
inc
sbb
fadds
sahf
xchg
mov
push
jne
inc
cs
jne
xor
mov
popf
push
push
inc
scas
data16
dec
add
or
adc
aas
sub
icebp
sbb
inc
stos
jo
dec
aam
pusha
push
js
sub
aam
jae
pusha
cld
or
bound
add
daa
add
sbb
or
xchg
and
mov
leave
push
push
into
mov
jecxz
jbe
mov
inc
mov
rcll
dec
sbb
mov
inc
cld
jmp
or
sub
cltd
in
or
sub
cltd
nop
dec
sbb
and
push
pop
jl
add
lods
jae
jecxz
adc
pusha
neg
mov
inc
shlb
aam
sbb
jge
sub
jno
loopne
and
mov
adc
add
and
jo
mov
das
sbb
bound
scas
dec
movsb
push
inc
mov
rolb
cltd
push
dec
movsl
cmp
or
add
cmp
repnz
cmp
jg
sahf
add
mov
mov
faddl
in
push
jnp
js
pop
scas
into
addb
mov
push
dec
shlb
outsl
cmc
movb
inc
jmp
test
push
jmp
dec
bound
je
repnz
sar
ret
rcll
inc
add
sahf
std
scas
sub
add
sub
mov
adc
and
xchg
fmuls
rcll
sub
or
jbe
in
push
idiv
in
jle
cmp
or
dec
sub
das
mov
jg
faddl
mov
mov
test
pop
dec
js
test
mov
xor
add
psubusb
sub
aam
or
or
sub
pushf
jmp
cmc
test
xor
xchg
jecxz
add
mov
cmp
adc
mov
daa
sub
sub
pop
int
push
lock
scas
fldenv
pushf
sub
mov
arpl
and
push
rolb
add
les
push
movsl
daa
pop
mov
bound
lock
sahf
and
movsb
adc
cmp
mov
mov
mov
insb
popf
aaa
dec
pop
imull
xor
sti
je
add
jb
pop
jae
add
jnp
ror
cs
add
adc
pop
adc
mov
and
sbb
xor
pusha
push
mov
dec
rolb
or
neg
sub
or
out
in
push
shl
sahf
in
aam
les
popa
add
lcall
sub
xor
jg
inc
push
repnz
lods
sbbb
cmpsl
sbb
jg
nop
rclb
push
or
add
add
pop
dec
subb
jnp
inc
mov
or
push
jo
add
idivl
mov
or
pusha
pop
inc
mov
loopne
push
aam
sbbb
sub
push
aas
ds
pop
adc
mov
arpl
movsb
pop
cmp
addr16
pushf
and
sbb
movsl
testl
fstps
dec
cmp
mov
mov
jle
pop
jmp
call
push
push
cmp
push
mov
or
test
jmp
inc
js
jmp
dec
and
jae
outsb
inc
sbb
addr16
shrl
mov
sar
dec
out
cmp
sbb
pop
cmp
pushf
push
or
and
pop
js
push
adc
push
or
jno
push
pop
lea
inc
mov
push
jp
and
add
test
icebp
dec
addb
into
pop
cs
rorb
sub
roll
loope
xchg
add
outsb
add
and
pop
adc
add
mov
sbb
add
outsb
mov
fsubl
lods
push
xlat
add
cmpsb
xchg
jmp
jl
adc
lcall
jmp
cmp
and
aam
jmp
fdiv
add
add
rorb
outsb
dec
mov
enter
pushl
insl
and
lahf
out
outsl
ret
ficoms
add
push
mov
adc
mov
stos
cwtl
rolb
jbe
push
xorl
or
adc
fstl
jmp
inc
loopne
loopne
loopne
adc
jae
pop
cmp
inc
fldt
jmp
xchg
je
cmp
imul
add
div
inc
dec
xchg
mov
jb
jae
nop
outsl
sub
sbb
pop
mov
addr16
pop
divl
int3
pop
insl
in
scas
decb
lock
push
jb
add
inc
and
xchg
cld
add
push
movsl
push
jbe
test
jmp
insb
add
add
cmp
ret
mov
mov
xor
cmp
sbb
push
loop
pop
xor
in
jp
shr
adc
ljmp
cltd
or
and
repnz
inc
pop
and
sti
sbb
xor
mov
xor
adc
sub
stos
iret
sbb
enter
sar
insb
arpl
mov
outsl
sub
stos
mov
xor
adcl
les
pushl
les
xchg
push
pusha
sub
in
pop
mov
push
push
adcb
cmp
xor
je
and
jle
les
mov
mov
cmp
xchg
cmp
loop
ret
pop
ljmp
ret
push
rcr
sbb
inc
cmc
jo
jo
ret
cli
jp
lret
jo
cvtps2pi
enter
loopne
add
add
sub
cmc
icebp
pop
jns
ja
sub
push
js
lock
push
ret
dec
je
add
test
lret
pop
es
int
jl
jmp
mov
pop
repnz
call
dec
mov
push
adc
or
pushf
lahf
test
adcl
sub
mov
dec
adc
mov
xchg
mov
mov
or
ror
popa
das
dec
test
std
push
leave
and
add
movsb
inc
xor
add
outsb
fldt
lret
add
add
xor
fadd
or
push
sbb
or
mov
movsb
data16
or
ret
mov
sbb
push
cld
mov
pop
sti
mov
dec
push
cld
dec
xchg
xchg
addl
jmp
or
scas
dec
jle
add
jg
es
mov
add
cltd
and
hlt
aad
and
jb
hlt
mov
jo
jmp
cmp
sub
sbb
push
aaa
push
mov
sub
inc
dec
out
and
xor
pop
scas
or
add
xchg
jno
rcl
shrb
add
fwait
inc
jb
rcll
aaa
cmp
dec
adc
lret
test
pop
mov
jg
mov
popa
jo
cld
mov
call
push
jmp
imul
and
cs
sti
out
inc
cmpl
jne
push
cmp
or
mov
js
das
nop
adc
fstl
sub
adc
add
pop
inc
lods
clc
push
sbb
xchg
hlt
fdivl
or
push
mov
mov
je
andb
ret
or
les
shlb
mov
out
adc
movsl
push
das
cmp
cmc
mov
loopne
pop
ja
sub
mov
in
mov
sbb
rcrb
call
test
push
pop
test
add
rorl
in
loopne
push
pop
ja
enter
mov
sar
pop
add
pusha
mov
adc
xor
ret
adc
add
lods
mov
push
pop
cmpsb
lods
add
lods
or
int3
lods
or
push
les
cmp
shlb
stos
add
xor
scas
add
jo
and
scas
and
pop
adc
cmp
rorb
xor
icebp
outsb
and
jne
xlat
xor
inc
jbe
or
pop
add
add
daa
subl
adc
shlb
aaa
jno
cmp
xor
cmp
dec
stos
or
inc
cmp
sahf
je
dec
es
add
test
dec
lds
push
xor
xor
and
pop
mov
push
and
inc
jns,pn
adcb
loopne
push
jb
cld
aas
ljmp
rorb
pop
sbb
push
fs
adcb
clc
push
push
cltd
dec
adc
mov
push
push
addb
icebp
xor
orb
mov
adcb
mov
nop
dec
sub
int3
mov
inc
adc
sbb
add
pushf
or
fdivrs
subb
mov
add
in
in
in
andl
das
sbb
cli
xchg
sbb
in
test
test
incl
cli
mov
mov
cmpl
pop
mov
lret
stos
add
call
adc
nop
mov
and
mov
mov
test
hlt
lcall
adc
mov
adcl
lret
sub
inc
pop
jg
call
call
mov
in
pop
dec
add
cltd
fmuls
loopne
push
enter
repz
push
nop
lret
fcompl
aam
in
adc
paddq
enter
test
push
rorb
xchg
fsubs
nop
lret
paddq
cmp
loopne
sti
paddq
xchg
dec
es
mov
outsb
push
jbe
shll
sub
test
pop
lods
pop
add
add
mov
push
add
add
or
lds
fisttps
movsb
mul
nop
orb
out
lcall
inc
or
daa
lods
pop
xchg
ret
xchg
cmp
in
mov
sbb
pop
or
lea
iret
cmp
sbb
and
xchg
add
enter
xchg
ret
xchg
or
scas
jne
dec
cs
das
mov
loopne
xor
xchg
clc
push
xchg
jmp
mov
xchg
cwtl
mov
push
xchg
test
pushf
sub
dec
add
mov
xchg
push
push
xor
mov
jmp
mov
xchg
mov
cld
xchg
cmp
pop
add
dec
mov
jne
add
add
or
fimuls
in
sbb
sbb
adc
adc
push
loop
add
xor
rorb
sbb
js
ret
xchg
sbb
out
pop
imul
mov
mov
cmp
lds
imul
mov
mov
mov
dec
mov
dec
pop
inc
lcall
xor
inc
outsl
fwait
and
mov
and
wbinvd
pop
ljmp
inc
push
shlb
adc
rorl
jbe
add
test
into
mov
mov
inc
cld
jns
arpl
daa
or
fisubs
test
or
inc
inc
outsl
stos
aam
outsl
or
nop
std
add
xchg
test
dec
adc
cli
mov
cmp
pusha
shlb
enter
aaa
adc
ja
sub
push
test
outsb
xchg
or
dec
sub
sti
dec
enter
or
cld
dec
add
push
notb
or
and
or
je
sub
out
fcomp
mov
push
push
or
sub
lcall
sub
push
orb
mov
mov
mov
mov
movsl
and
loop
push
out
pop
mov
lea
outsl
sub
mov
mov
cmp
and
mulb
loop
mov
in
cli
sbb
orl
and
jmp
mov
jb
add
cmp
loopne
clc
mov
or
push
jg
add
xor
push
xor
mov
xchg
add
leave
je
or
lret
pop
sarb
xchg
push
inc
clc
inc
sbb
jno
cmp
add
repz
mov
pop
insb
push
test
mov
jmp
mov
shll
xor
or
clc
pop
cmp
jne
movl
inc
inc
outsb
push
dec
imul
pusha
fisubl
jmp
sub
push
push
cmpsl
xor
stc
test
push
adc
dec
sbb
push
xchg
mov
roll
push
add
add
xchg
xchg
mov
push
mov
mov
rol
dec
jmp
loopne
call
out
into
std
xor
push
jmp
pop
rol
push
sbb
push
dec
push
subl
push
bound
rolb
hlt
push
pop
inc
jnp
jae
cmp
jbe
es
shl
jne
sbb
aad
push
cmp
inc
inc
push
leave
inc
mov
ret
subb
cmpsl
mov
aaa
jmp
outsb
prefetch
sub
mov
fs
test
out
mov
cmp
xchg
lock
mov
add
shlb
inc
adc
lock
add
jb
mov
cmpsl
test
frstor
xor
push
faddl
out
mov
nop
mov
adc
lahf
xchg
leave
ss
dec
jne
mov
dec
fwait
cs
sub
mov
adc
jbe
cmp
idivb
jbe
sbb
push
mov
inc
dec
jne
add
stos
mov
jmp
add
mov
addr16
jnp
bound
jmp
cmp
and
adc
adc
cmp
fwait
pushf
rolb
out
mov
es
cmp
outsl
popa
push
test
mov
shlb
daa
sti
xor
mov
and
cmpsl
mov
and
pop
loope
push
dec
pop
push
xor
pop
push
aam
xor
xlat
testb
insb
ljmp
add
testl
inc
push
ret
lods
repz
mov
xor
xor
lock
add
out
std
and
test
jmp
xor
or
mov
mov
add
cmp
sub
out
imul
stos
cmpl
xlat
mov
shr
popf
jmp
adc
push
xchg
flds
push
dec
adc
test
jmp
icebp
lret
mov
mov
pusha
and
add
xor
xchg
shlb
push
movsb
sti
dec
push
sbb
rorb
clc
mov
and
or
jl
enter
jnp
jb
aaa
push
add
andb
sub
fwait
or
dec
xorb
pop
sub
sub
add
mov
add
push
pusha
dec
aas
fadd
je
cmp
jo
aam
jns
mov
call
sbb
icebp
adc
inc
lcall
je
int
sbb
lods
sahf
testb
shlb
xchg
mov
call
sbb
inc
jp
loopne
jg
cmp
cwtl
daa
push
pushf
movsb
popf
sbb
lahf
ljmp
cmpsb
enter
or
insb
xor
cld
ret
sub
add
jns
jge
push
loope
adc
bswap
xor
ret
push
fisubrs
push
mov
sbb
jmp
inc
les
mov
inc
js
or
nop
cwtl
popl
movsl
or
icebp
test
add
jo
test
jle
sbb
jo
push
inc
push
test
or
rcr
iret
add
add
leave
nop
mov
mov
inc
jmp
pop
push
insl
dec
rclb
std
ret
or
in
fildl
js
push
inc
xor
icebp
sbb
sub
das
and
imul
mov
popa
dec
sti
adcb
push
and
mov
push
mov
xor
mov
andl
js
mov
icebp
adc
imull
add
cld
mov
inc
pop
dec
pop
inc
adc
xor
xchg
lret
sub
xchg
sbb
aad
dec
add
jg
pushf
mov
xchg
jbe
xchg
mov
add
mov
sub
push
bound
jg
popa
add
pop
in
push
imul
add
faddp
in
xchg
movsb
test
andb
dec
mov
mov
mov
xchg
adc
cmp
ds
cwtl
lods
push
sub
xor
testl
rolb
pop
jmp
ror
push
adc
sub
ret
xor
mov
orl
cmp
inc
pop
cmp
add
cmp
mov
and
ds
add
mov
jmp
push
dec
dec
dec
lds
xor
jno
insb
and
pop
cmp
jge
jle
or
mov
nop
mov
jg
push
fsubrl
jge
adcl
pop
sbb
or
xchg
xchg
dec
mov
or
push
enter
jo
xor
sbb
or
cmpl
cmp
cmp
or
sbb
and
mov
mov
sbb
add
sbb
ja
mov
push
push
or
jg
jno
sub
mov
in
xor
pop
and
sbbb
xor
pop
pop
aas
xchg
arpl
outsl
pop
push
jne
cmp
or
or
inc
xchg
sbb
rcrb
pusha
pop
mov
inc
es
add
xlat
xchg
ds
mov
orb
fadds
xchg
lret
int3
call
mov
push
loope
std
lods
std
mov
aas
xchg
jne
or
pop
mov
rcrb
lock
or
mov
mov
hlt
or
dec
stc
in
add
lea
dec
cmovg
rolb
mov
sti
xchg
hlt
mov
xor
xchg
or
xchg
dec
pushf
lahf
mov
xchg
out
fisubrs
or
cmp
xchg
outsl
jecxz
mov
cmp
cmp
std
lret
or
mov
jae
aas
fdivl
jl
xchg
mov
inc
movb
xor
ss
dec
dec
jne
xor
pop
or
add
pop
pop
popa
mov
cmpsl
fcomp
mov
mov
pop
xchg
cmp
ss
lea
mov
mov
or
mov
mov
lods
or
call
aas
pop
cwtl
inc
mov
push
sti
dec
je
or
or
push
and
lahf
mov
or
push
inc
sub
icebp
mov
add
imul
fdivs
in
jne
cmpb
movl
jl
cmp
inc
xor
xchg
inc
xchg
dec
movsl
in
add
push
jmp
imul
in
jno
pop
leave
mov
andl
scas
push
lods
jp
push
pop
aas
outsb
mov
in
pop
cwtl
dec
and
mov
loopne
cmp
xlat
shlb
xor
fs
das
dec
or
sbb
popf
cmc
cli
movsb
mov
jle
push
or
mov
inc
cmpsl
add
sbb
jg
rcr
cmc
push
inc
lea
aad
mul
lods
pushf
adc
sub
push
xor
mov
in
inc
icebp
cwtl
add
sarl
es
cwtl
xchg
stc
add
sarl
lods
jecxz
test
mov
add
or
and
mov
dec
xorl
cmp
push
jns
daa
mov
dec
std
stos
pop
cwtl
add
xor
mov
cld
jae
mov
mov
icebp
push
mov
testl
enter
mov
and
outsb
aad
sub
test
or
hlt
insl
mov
insl
mov
or
pop
push
mov
push
adc
push
push
push
in
fstpt
outsl
hlt
add
cmp
in
xor
lcall
std
and
sub
inc
pop
xor
ret
pop
cmp
in
sbb
adc
sbb
leave
jecxz
lds
jge
outsl
and
lahf
or
add
mov
sahf
and
subb
std
nop
popf
mov
hlt
add
jbe
cmpl
jno
imul
loop
imul
pushf
inc
pop
mov
or
jl
aas
repnz
stos
dec
push
mov
mov
pushl
fistpll
bound
insl
or
scas
push
ss
insl
mov
arpl
loop
cmpb
fildl
cmpsl
insl
cmp
sbb
lock
and
push
fwait
addb
add
mov
xchg
or
add
outsl
arpl
push
jo
push
and
jg
add
jae
nop
test
lcall
inc
push
ret
sbb
push
inc
inc
inc
pop
ffree
mov
push
mov
or
outsl
and
ja
adc
dec
push
shrl
daa
push
imul
lcall
js
and
sub
clc
fisttpl
repz
mov
into
sub
and
data16
xor
fiadds
repnz
pop
pop
in
pushf
jmp
push
cmpb
push
add
sub
mov
insl
push
jge
sti
sub
fstl
or
jmp
test
sbb
jmp
push
sbb
mov
and
loopne
add
adc
jne
dec
jns
jmp
and
mov
sbb
xchg
fisttps
sub
ss
loope
lods
pop
sub
pop
in
addr16
add
pop
jmp
fwait
mov
mov
dec
lahf
fstpt
roll
pusha
sbb
mov
je
push
inc
data16
push
mov
and
ret
movb
sub
jmp
js
inc
or
xchg
add
rcl
hlt
or
jmp
int
inc
jbe
xchg
insl
inc
mov
inc
pop
push
or
dec
push
lock
xchg
mov
lock
xchg
in
lock
pop
mov
lods
push
mov
movsb
add
mov
in
ffree
add
mov
test
push
outsl
idivl
and
fwait
ss
or
dec
sbb
andb
lss
pop
jmp
lahf
inc
mov
movb
fiaddl
aad
or
add
popa
mov
jbe
add
xor
and
add
cmc
adc
and
lods
add
add
dec
add
add
mov
or
ret
mov
jo
adc
push
popa
pusha
test
ja
cld
push
sub
sub
out
cmpl
push
cmpsl
add
fbstp
add
lock
add
loopne
sub
add
inc
mov
sarl
gs
sbb
dec
cmp
push
cwtl
test
xor
sar
incb
mov
cmp
addb
aam
jmp
and
int
add
outsl
sub
sbb
dec
dec
das
add
adc
gs
and
lock
pop
gs
jmp
xorb
jo
test
push
mov
out
sub
sub
fstpt
cmp
cmp
loopne
fidivrs
inc
dec
adc
pop
mov
je
sbb
mov
in
mov
fwait
loopne
mov
je
dec
dec
or
fadds
lock
ss
ja
popf
and
push
add
jmp
movsl
imulb
aas
les
cs
sahf
clc
lock
jb
pusha
fwait
popa
insl
pop
lods
and
or
push
jns
mov
pusha
dec
mov
xchg
xchg
sbb
push
subb
adc
pop
lea
sub
stos
or
lock
sub
and
mov
push
mov
or
rorb
add
sbb
or
int3
movsl
or
pop
cmpsb
int3
mov
add
push
mov
sti
enter
add
push
jb
adc
xor
jle
and
sub
clc
test
jmp
fists
add
cmp
or
push
or
js
or
fdivrs
push
lock
mull
lsl
jg
ljmp
lods
inc
shr
rcr
xchg
into
ss
shr
rcr
or
push
div
pop
dec
fdivrp
outsb
or
mul
pop
jb
cmp
or
cmp
jbe
dec
sub
sbb
je
loope
adc
or
ficoml
ficompl
jo
pusha
cwtl
fxch
pop
ret
add
or
adc
add
sub
in
or
lret
rcrb
add
js
mov
mov
dec
jmp
fiaddl
mov
les
dec
xchg
fld
xchg
inc
xchg
add
outsl
data16
xor
orb
adc
jae
clc
add
adc
notb
int3
pusha
push
sbb
in
test
push
lcall
and
aas
jb
mov
int
dec
jbe
dec
push
cltd
in
mov
nop
movsl
out
add
and
shlb
fimull
shll
arpl
das
inc
xchg
xchg
das
fwait
or
pop
push
push
jb
pop
sbb
mov
add
add
or
icebp
incb
cmp
fldcw
loopne
daa
jg
xor
push
mov
add
stos
lods
fst
xor
mov
mov
jl
lret
mov
jle
sbb
or
jl
lahf
mov
pop
das
jmp
jne
or
or
and
popa
jg
sub
dec
or
sarl
jl
cmp
dec
pop
testb
je
push
movsb
push
push
push
xor
jo
movb
pusha
mov
lret
push
push
ret
or
mov
and
adcb
lods
movsb
pop
pop
lahf
test
test
xchg
add
jecxz
push
dec
icebp
and
mov
inc
xor
rolb
mov
cmp
push
mov
inc
mov
add
movsb
lret
push
nop
xchg
sbb
add
insl
xorl
jne
adc
jecxz
mov
icebp
push
add
or
mov
inc
in
mov
imul
push
fldl
or
arpl
fisubrs
stos
dec
jp
xchg
popf
pop
dec
enter
bnd
in
jno
xchg
mov
jp
sub
pop
in
sbb
push
jo
into
das
nop
push
jo
in
mov
je
dec
add
nop
fstpl
je
or
adc
repnz
mov
jo
ja
push
push
lahf
xlat
shll
test
popa
pushaw
pop
dec
flds
fstpl
xchg
dec
insb
or
add
mov
push
mov
and
fwait
xchg
jmp
decl
enter
pop
stos
push
push
push
in
jo
dec
dec
jns
inc
xor
and
dec
clc
fstl
mov
cmp
ds
adc
lea
xor
dec
dec
loop
nop
mov
mov
push
jecxz
repz
out
inc
ds
add
hlt
xchg
test
push
sbb
and
js
cmp
stos
mov
cmpsl
mov
sbb
lret
xchg
std
push
mov
mov
iret
sub
push
sahf
inc
loopne
adc
jle
lock
and
inc
testb
push
std
jle
je
push
cltd
dec
sbb
popf
jmp
inc
faddl
fisttpll
adc
and
or
inc
push
shll
test
pop
jle
mov
jmp
xchg
outsb
push
ret
and
push
push
test
jmp
addr16
movsb
mov
xor
inc
or
lcall
test
test
mov
sarb
ret
xchg
movsb
push
sbb
aam
push
mov
lea
sub
iret
adc
sbb
jne
test
fidivrl
adc
es
mov
mov
mov
movsb
mov
cmp
rcrl
and
pop
xor
pusha
mov
test
push
inc
or
lods
inc
adc
pop
lahf
sbbb
out
mov
or
jnp
dec
lret
scas
stos
mov
xchg
int3
mov
outsb
jecxz
or
gs
insl
mov
jb
adc
stc
dec
jno
lock
rorl
xor
add
dec
shlb
add
add
push
adc
adc
or
or
cmp
scas
movsl
cmp
outsl
add
shrl
mov
shll
sarl
adc
adc
lcall
rcll
dec
orb
loopne
shr
in
xchg
xchg
xchg
fst
int
ret
add
xor
add
mov
test
xchg
adc
aad
lret
ljmp
fs
xchg
push
adc
test
mov
clc
rclb
mov
movsl
data16
or
sub
cltd
es
movsb
cmpsb
xchg
pushf
add
test
add
in
cmp
insl
fsubrl
sub
in
and
push
fsubrs
cwtl
adcb
or
and
inc
repnz
movsb
mov
subb
inc
clc
mov
mov
lods
inc
and
and
leave
mov
mov
pop
je
lret
dec
leave
les
mov
cmp
mov
push
add
push
enter
test
pop
inc
dec
mov
clc
cwtl
iret
leave
jne
lret
dec
xor
add
push
and
sub
in
xchg
subl
inc
mov
rorb
and
adc
lods
pop
stos
rolb
mov
cmp
ss
sarl
mov
jmp
push
and
mov
sub
and
roll
sbb
mov
sub
adc
mov
cwtl
nop
add
and
icebp
add
mov
and
xchg
inc
mov
or
pop
pop
push
cmc
or
fiaddl
and
inc
arpl
mov
push
sbb
jae
xor
push
sbb
loop
stc
mov
or
iret
push
jmp
lods
mov
dec
stos
dec
xchg
fstpl
add
push
jg
mov
test
xchg
mov
and
sar
cmpsl
lea
pop
mov
jecxz
mov
pop
stos
push
repnz
mov
cmpsl
rcrb
clc
cmpsb
orl
adc
pusha
mov
loope
rol
mov
mov
mulb
jne
add
lock
ret
mov
mov
fidivrl
cmpsb
mov
stos
push
cld
jb
test
mov
or
je
jmp
mov
xchg
fs
lret
sub
ret
adc
or
xchg
cld
pop
lret
adc
push
push
mov
sub
outsl
mov
testb
xor
dec
sub
ret
or
sub
fs
call
jmp
add
sub
add
les
mov
push
mov
and
mov
fldpi
stos
bound
adcb
sbb
xchg
pop
inc
rorb
movzbl
inc
std
jg
hlt
mov
test
jne
push
adc
cmp
xchg
and
pop
push
and
adc
mov
add
and
leave
or
mov
stos
aas
push
dec
add
add
add
or
stos
add
jmp
push
addr16
es
pop
cmpsb
dec
repz
out
mov
mov
lcall
test
jne
cmpl
jne
jb
fisttps
and
cmp
and
lret
pop
cmp
cld
xchg
sub
push
int3
inc
and
adc
sbb
dec
pop
push
rcl
inc
in
cmp
push
aad
cwtl
push
out
add
cmp
jae
xor
adc
dec
or
mov
jne
in
pusha
and
push
and
jl
adc
rcpps
mov
les
dec
loop
test
pop
pusha
jle
andl
or
outsb
sbb
stc
mov
fs
jp
insb
inc
fs
jle
nop
pop
push
push
mov
xchg
test
xchg
sbb
lret
dec
cmp
sbbl
xchg
cmp
mov
cmp
xchg
sahf
scas
test
add
inc
xor
scas
shr
rcll
pop
lock
mov
pop
ss
subb
stos
and
fsubrl
push
lret
pop
mov
mov
mov
jmp
bound
fstp
inc
or
out
imul
sbb
mov
sbbb
mov
add
cmp
jbe
xorl
out
hlt
inc
push
hlt
push
cmp
aad
jle
pushf
int
lods
xchg
add
shlb
in
jmp
outsl
mov
jbe
add
jnp,pn
shlb
xchg
jb
cli
pop
inc
cli
scas
mov
dec
lea
pop
push
adc
incl
and
je
add
fwait
pop
fistpl
out
dec
adc
add
in
int3
cmpsb
gs
and
inc
popa
mov
addb
mov
sarb
xchg
out
and
mov
cmp
ret
outsl
push
push
pop
pop
and
notb
add
or
gs
mov
je
or
adc
dec
icebp
dec
add
xor
fidivs
and
pop
xchg
addr16
jl
push
fldl
sub
fidivrl
movsl
fwait
sarl
incl
sahf
jp
add
js
inc
cs
je
cmp
cmc
push
push
outsb
jbe
or
int
mov
js
and
cmp
push
fs
inc
in
pop
pop
jle
in
pop
xorl
cmpsl
and
cld
add
sbb
fldpi
ret
push
mov
pop
std
cmp
cli
xor
push
push
jle
mov
ds
and
dec
add
dec
shll
shlb
cmp
clc
mov
or
popf
sub
clc
int3
idivl
push
mov
jl
xor
clc
jmp
push
and
jae
lea
add
add
test
push
xchg
mov
test
or
push
xchg
and
mov
nop
xor
mov
xchg
loope
int3
push
adc
mov
loop
push
push
je
cltd
xchg
sub
mov
push
sub
lea
push
fldcw
popa
mov
jo
pop
ret
and
push
mov
add
xor
push
push
pop
push
int
dec
push
mov
ret
cmpsl
lea
cld
mov
or
add
lock
movw
mov
addr16
mov
inc
and
xor
outsb
adc
nop
add
cld
cmp
jb
push
push
ret
shr
fdiv
inc
call
push
add
loopne
or
mov
push
cmp
inc
sti
push
rorl
or
add
mov
pop
lret
and
idivb
pusha
pop
orb
add
pop
pminub
cmp
or
rorb
and
into
sub
adc
jmp
lds
lahf
mov
test
push
jle
ljmp
push
fsubs
les
pop
cmp
fmuls
push
fs
leave
les
add
xor
or
jns
dec
xchg
mov
or
xchg
ret
mov
popf
incl
push
andb
dec
stos
mov
add
mov
repz
push
mov
testl
sub
mov
dec
push
pop
jmp
lea
lods
add
push
jae
cmpsl
inc
mov
inc
sub
push
aaa
mov
add
mov
jne
pop
add
jmp
or
or
je
push
mov
movl
fsubl
sub
jmp
lods
push
inc
pop
cmp
mov
push
or
aam
mov
addb
fwait
dec
mov
inc
mov
xchg
lock
jb
add
shlb
cmpsl
lock
push
add
sub
fstl
lock
push
adc
cmpsb
mov
mov
and
negl
scas
stos
fmuls
out
repz
or
or
mov
cmpl
sbb
mov
out
add
cld
and
inc
sbb
lret
stos
jl
sbb
xor
pushf
sbb
in
jns
xor
enter
int3
out
cs
adc
inc
cmpsb
sbb
les
sbb
push
outsl
fnclex
sarl
sbb
clc
dec
sbb
or
xchg
je
dec
or
mov
push
add
test
inc
jp
scas
or
pop
pop
inc
in
sbbb
sub
sarl
xor
add
add
into
bnd
mov
andb
cmpsb
add
test
jo
mov
pop
sub
add
or
mov
add
sub
push
or
xchg
and
dec
xchg
inc
xchg
nop
jp
mov
arpl
pop
jg
jne
pop
and
cmp
ljmp
insl
or
jmp
push
push
sub
in
mov
insl
cmpb
insb
dec
or
stos
jmp
dec
and
arpl
ret
xor
test
mov
mov
or
push
adc
mov
push
mov
es
sbb
xchg
mov
mov
pop
mov
jbe
sub
inc
adc
in
or
mov
push
loopne
pusha
loope
sbb
push
stos
arpl
pop
inc
cmp
mov
xor
loopne
adcb
dec
popa
add
mov
hlt
jle
inc
test
or
pop
dec
inc
incb
aam
cmovns
dec
mov
stc
inc
jp
mov
lret
hlt
rcrb
mov
pop
xchg
or
lock
leave
or
lock
loopne
enter
add
lea
cmp
adc
ffreep
push
in
call
sub
xor
repz
sahf
in
cs
dec
cmp
and
xchg
lods
fadds
daa
mov
cmc
jge
pop
js
out
in
inc
cld
mov
or
add
mov
or
mov
movl
and
dec
xchg
push
orb
add
add
push
xor
addr16
push
dec
mov
adcb
mov
jb
in
int
int3
adc
enter
mov
xor
push
xchg
dec
add
jns
or
jge
or
scas
and
imul
xor
sbb
push
cltd
into
adc
add
sub
push
sbb
sub
js
add
push
fistl
xor
push
add
inc
fsubrl
ds
sub
int3
outsl
add
xor
jne
sub
xchg
pop
adc
outsl
push
movsl
repnz
sbb
adc
fstl
outsb
inc
add
or
xchg
mov
outsl
scas
and
push
imul
add
jecxz
outsl
lret
aam
and
inc
inc
add
push
aaa
pop
push
mov
push
shl
sub
or
out
xchg
pop
imul
es
sub
push
loope
xor
cmp
inc
jmp
fsubs
pop
hlt
cmp
imul
bound
movsb
fisttpl
int3
push
cmp
inc
adc
cmp
jle
pop
test
xor
sbbl
mov
mov
mov
leave
xor
adc
adc
xor
or
and
pop
hlt
sahf
jne
push
adc
and
ja
xor
add
mov
stos
inc
hlt
push
sbb
pop
inc
jb
clc
sub
loope
shr
je
jbe
push
pop
jo
or
push
dec
adc
out
or
out
and
lods
push
dec
and
stc
jl
lahf
push
jg
outsl
inc
or
jbe
jl
idivl
xor
jg
jg
jg
jo
mov
mov
cmp
mov
lock
in
call
lods
ffreep
lea
lea
inc
out
and
fstl
insb
fimull
inc
xor
dec
cmp
push
popa
insb
enter
ficompl
mov
pop
es
psubq
shrb
lret
ret
mov
add
pusha
das
shr
dec
mov
pop
cmp
mov
shl
cmp
hlt
mov
adc
xchg
jns
pop
hlt
push
cmp
jge
mov
dec
cwtl
mov
dec
push
and
mov
and
xor
loope
pushf
sbb
cld
and
adc
shll
stc
and
cmp
push
pop
inc
mov
ret
les
mov
cli
and
shl
sbb
dec
lock
pusha
or
add
inc
jl
js
fwait
add
jnp
into
pop
push
sarb
cmpb
mov
inc
mov
sub
and
adc
ja
dec
add
mov
push
mov
lcall
cmp
rcrb
xchg
js
inc
clc
adc
push
mov
scas
push
xchg
push
pop
sub
and
and
filds
sbb
pop
cmp
pop
call
sub
rclb
push
pop
ja
dec
or
stc
loopne
addr16
pop
pop
les
mov
inc
pop
pop
xor
adc
ja
clc
ret
push
push
or
jae
or
and
or
xor
outsl
add
sbb
cmp
add
mov
lea
lea
or
insl
cmp
or
ds
pop
dec
pushf
sbb
sarl
sbb
jmp
fs
in
in
cmp
mov
ds
add
pop
jne
dec
mov
lock
add
repz
push
adc
loope
out
jbe
inc
mov
data16
jge
and
pushl
add
jno
push
je
adc
dec
loop
mov
adc
jb
adc
jb
adc
stos
add
and
mov
push
inc
cmp
ds
mov
push
push
push
jbe,pt
fcoms
insb
enter
adc
adc
or
mov
jl
fs
adc
sub
xor
leave
or
test
pop
aad
dec
xchg
cmp
cld
and
mov
add
in
pop
xchg
adc
sarl
pop
or
xchg
xor
jl
add
test
xchg
js
das
add
add
jns
pop
xor
test
sub
scas
je
in
shl
add
andl
xor
dec
popa
pop
pop
fcmovnbe
pusha
mov
ss
lods
mov
inc
test
jo
fwait
add
idivb
mov
cmc
adc
fistps
mulps
jmp
test
and
mov
cmp
orb
lcall
daa
or
pushf
add
fsubs
add
pop
mov
rcrl
das
xor
sahf
push
lea
gs
adc
or
pop
inc
pusha
pop
push
push
cli
or
xor
sub
lea
lods
jae
rcrb
cmp
lea
adc
push
add
mov
inc
adc
push
push
inc
int
int3
cmpsl
adc
mov
xchg
test
das
lret
popl
push
push
inc
adc
sbb
testb
adc
sysexit
and
fmull
mov
cltd
fcoms
or
cld
popf
pushl
test
mov
and
shrb
cmp
sbbl
jo
inc
mov
dec
add
sub
or
pop
jl
std
jp
inc
pop
rolb
inc
push
add
nop
fs
mov
cwtl
shll
test
mov
dec
mov
cmp
aad
jg
cmp
fdivrl
and
or
or
inc
sti
jmp
push
mov
cs
adc
ja
cmpb
iret
pusha
pop
dec
test
pop
dec
test
mov
mov
pop
testb
add
add
movsl
and
push
pop
or
add
repnz
loopne
sti
jmp
andl
jmp
mov
test
xor
mov
sbb
sub
mov
roll
or
cld
jle
sub
cmp
xor
leave
jmp
pushf
shl
dec
push
in
jbe
pusha
xchg
cmpsb
add
movsl
lods
call
cmp
mov
paddb
scas
lock
push
pop
icebp
mov
jae
mov
sub
aam
add
ss
jge
fdivp
sbb
jle
mov
add
jae
in
nop
add
jne
jmp
jae
imul
sbb
in
mov
or
push
pusha
cmp
jmp
and
outsb
mov
rclb
bound
pop
push
sub
adc
orl
pop
add
imulb
addb
stos
push
cmp
mov
lods
sub
add
inc
stos
imul
je
mov
push
jge
icebp
inc
adc
nop
mov
jne
sub
sarb
jbe
ud0
testl
and
ret
jecxz
fldl
pop
pop
mov
or
iret
nop
clc
shlb
clc
cmp
and
sub
addl
adc
jg
cmc
inc
push
or
jecxz
push
push
inc
jmp
cmpsb
ret
or
pop
xor
sub
into
dec
mov
inc
pop
stos
hlt
fbstp
push
add
sbb
and
fsubrs
cwtl
jge
add
adc
adc
xor
sub
cmp
cmp
clc
cmp
shlb
ljmp
jle
in
into
outsb
jle
and
adc
push
test
push
lods
pop
aaa
jae
jp
add
sarl
add
rcll
and
subl
cmp
jb
das
mov
dec
push
jge
movsl
add
dec
cmp
jbe
mov
or
or
das
add
jne
mov
rcrl
fldl
lea
nop
aam
mov
inc
cmp
jae
inc
adc
pop
mov
je
jle
push
or
mov
or
mov
pop
xchg
ja
push
push
cli
inc
mov
int3
or
jne
outsb
les
dec
into
jp
dec
clc
gs
jne
inc
or
cmp
outsl
or
push
sub
push
inc
and
xor
xchg
mov
subl
and
xchg
test
push
pushf
mov
test
push
lea
lcall
add
lret
or
push
fwait
add
sub
add
bnd
cltd
insl
adc
outsl
das
rorb
cld
shlb
pop
cmpl
insl
mov
and
pushf
shr
dec
mov
sbb
dec
cltd
test
sti
jg
add
test
jle
add
sub
adc
shll
shr
mov
add
or
shr
in
or
aas
or
push
mov
pop
mov
dec
mov
adc
inc
mov
push
subl
mov
fs
push
shrl
lods
jge
fadd
loopne
shr
or
mov
sahf
dec
mov
inc
xor
pop
jne
outsb
mov
fdivl
mov
aam
loop
xor
cli
sub
jne
addl
rol
pop
test
and
add
adc
and
fiadds
push
bound
jmp
or
lods
mov
fstps
jnp
mov
mov
rcll
dec
and
hlt
dec
jecxz
int3
int3
jmp
lods
or
or
mov
adc
outsl
push
dec
into
jmp
lods
jne
insl
loop
sarb
jae
scas
add
les
push
or
or
lods
xorb
lret
das
sub
test
sbb
repnz
sub
movups
xchg
int3
and
jo
mov
inc
mov
hlt
mov
mov
add
fcoml
sub
xor
aaa
ds
sar
aad
inc
add
jecxz
jb
call
out
xor
js
ljmp
push
mov
add
loope
jns
push
mov
mov
lock
testb
cli
push
inc
mov
mov
sbb
pop
mov
jb
fidivrl
mov
cwtl
dec
cmpsl
outsb
mov
jne
sbb
leave
mov
adc
shlb
or
xchg
test
aam
lahf
lock
cmp
pop
in
arpl
pop
xchg
jns
out
or
pop
add
add
insb
jo
cmp
push
fnstenv
dec
in
sbb
ret
add
dec
cwtl
mov
mov
mov
mov
push
jbe
push
or
imulb
cmp
pop
xor
sbb
cmpsb
mov
mov
les
in
push
pop
lea
cmp
fwait
mov
pushl
add
xor
push
push
call
mov
popf
push
dec
sarl
jg
xchg
dec
mov
pop
je
inc
dec
movsl
sti
mov
inc
adc
and
iret
lahf
out
out
inc
inc
jo
mov
adc
shlb
enter
out
and
jg
adc
pop
mov
pop
divb
fistl
push
add
sub
repnz
test
mov
mov
inc
inc
cli
pop
pop
ret
enter
lods
sub
dec
push
mov
bound
ja
aaa
add
cli
shr
add
inc
and
mov
sub
movsb
mov
out
sbb
loope
mov
jge
lret
adc
xor
jmp
jl
dec
hlt
addr16
jo
push
and
icebp
out
jb
adc
pop
inc
jmp
lea
call
and
dec
xor
inc
mov
leave
sub
lock
dec
mov
fwait
loopne
or
jmp
mov
ret
push
mov
iret
rorb
test
mov
imul
loope
dec
fcoml
cmpsb
sbb
mov
push
loopne
sbb
dec
inc
adcb
push
dec
mov
insb
pop
fisttps
sahf
mov
mov
pop
push
pop
cld
add
loopne
fists
sbb
or
cli
cmp
into
enter
cmp
ret
dec
inc
xchg
push
lea
jmp
xchg
aas
add
leave
sar
sub
mov
push
insb
je
or
pop
sbb
mov
mov
cmp
das
ljmp
inc
mov
ror
add
and
dec
pop
xor
cmp
sbb
or
dec
and
mov
push
inc
pushl
mov
js
cli
mov
jo
pop
pusha
cmp
push
dec
cmp
push
faddp
and
and
sbb
push
sub
jb
retw
ficomps
mov
add
addr16
mov
iret
or
mov
pop
mov
and
pop
add
ljmp
adc
push
hlt
mov
andl
xchg
inc
shrb
dec
je
out
pop
inc
mov
out
lret
add
cld
cmp
fsubs
and
and
scas
jne
or
cmp
inc
call
jmp
andb
outsb
mov
jne
push
hlt
or
sarl
inc
inc
ret
sbb
mov
enter
inc
dec
or
inc
dec
inc
and
je
test
loop
fs
mov
inc
mov
rcr
cmp
push
cwtl
testb
fidivl
test
jmp
shll
mov
xlat
or
mov
add
sbb
clc
add
xor
js
test
or
dec
cmp
add
cli
hlt
ficomps
push
push
jmp
push
sbb
adc
pusha
dec
iret
inc
loop
lahf
test
pop
dec
and
sbb
nop
rcrb
decb
stc
arpl
dec
mov
jnp
in
push
mov
inc
mov
sbb
dec
mov
dec
and
les
mov
inc
iret
movl
lock
lret
xor
sub
fs
xor
jae
shll
mov
cli
or
pmullw
sarl
add
mov
push
orl
lock
xchg
mov
inc
cmp
add
mov
mov
ret
sub
rclb
pop
les
add
push
lahf
test
jo
movsl
pop
clc
inc
or
jbe
fs
pop
rcll
xor
adc
fiadds
into
jg
xor
sbbl
mov
pop
data16
mov
add
test
shlb
and
enter
imul
sbbl
pusha
sub
lea
scas
lods
stc
cmp
push
andb
test
popf
test
rclb
push
or
loope
jmp
pop
dec
inc
pop
mov
push
add
fimuls
stos
mov
stos
dec
rolb
push
pusha
mov
jg
jmp
sbb
mov
mov
sbb
test
stos
mov
or
jae
adc
inc
lods
cmp
xchg
add
lcall
jne
adc
sub
pop
inc
clc
add
xor
and
mov
jno
xchg
lods
cmc
adc
cwtl
inc
je
xor
dec
and
or
sbb
adc
test
sub
jecxz
xorl
or
inc
mov
test
adc
pop
in
mov
in
or
xchg
cmp
lods
ja
add
cmp
inc
int3
or
fisubrs
jmp
sbb
ss
pushf
mov
and
lods
mov
adc
dec
and
adc
fisubs
mov
or
gs
xor
add
lds
inc
addb
cmp
mov
dec
popa
out
and
pushf
pop
out
movsl
inc
push
or
fcompl
aas
and
mov
and
cmp
inc
fldt
addl
pop
inc
xchg
push
subb
dec
xchg
inc
loop
les
mov
pop
xor
adc
outsb
scas
lock
mov
cmp
test
jle
testb
mov
jmp
test
push
and
je
inc
cmp
rorb
in
pushl
and
or
and
shr
or
cmpsl
dec
and
add
mov
mov
pop
lcall
cmp
sub
or
adc
and
adc
add
adc
stc
and
icebp
xchg
lock
repnz
push
xchg
xor
loope
out
pop
shl
sub
xchg
cmp
push
dec
ret
pop
mov
out
jmp
xor
xor
idivl
mov
or
add
add
fiaddl
loopne
push
js
fcoml
popf
jg
inc
pushf
pop
pop
les
cmp
and
jno
xchg
pop
add
sbb
inc
push
push
xchg
data16
or
sub
icebp
add
adc
mov
xchg
stc
mov
add
dec
cld
sub
mov
nop
sub
ret
xor
idivb
cmc
dec
les
adc
mov
adc
cmp
lods
sbb
jno
fadd
or
and
rcrl
mov
andl
mov
movsb
xor
ret
mov
add
xor
lret
es
push
push
filds
cmp
push
pop
cltd
mov
push
jne
push
notl
cmpsb
aas
out
int
xor
pop
scas
add
push
inc
inc
xor
test
cmp
push
mov
xor
outsl
xor
and
jmp
push
sbb
xor
dec
pushf
dec
push
push
adc
or
mov
jne
pop
push
pcmpeqw
es
push
add
sub
cld
sbb
xchg
scas
addb
jmp
or
mov
addr16
adc
add
pop
xor
dec
ss
je
pop
mov
pop
or
cmp
test
push
jo
imul
mov
add
or
sahf
xchg
jb
imul
dec
or
sbb
adc
adc
fcmovnu
inc
dec
test
mov
fdivrs
add
cmpb
pop
sub
int3
pop
sbb
jns
or
jne
mov
sahf
push
xor
jmp
pop
xor
or
push
or
pop
nop
jle
ljmp
lock
jle
loop
jb
pcmpeqb
inc
and
adc
pop
xorl
mov
push
mov
pop
pop
pop
or
int3
dec
imul
mov
mov
mov
sbb
pop
sub
push
in
xchg
sbb
add
sahf
cld
cwtl
test
xor
flds
outsb
lcall
mov
sbb
inc
mov
cmpsl
pushf
fadds
sbb
sbb
or
push
inc
bound
cli
fsubr
fnsave
and
icebp
jmp
xchg
sbb
fs
cmp
jmp
cwtl
or
outsb
cmp
push
add
sub
push
daa
push
sbb
shlb
or
jno
insb
jmp
movsb
and
jnp
outsb
xchg
inc
cmp
roll
movsl
out
xor
xchg
jo
test
ret
mov
addl
test
jno
inc
andl
rcrb
je
dec
test
jb
push
fsts
je
inc
or
sub
push
js
std
pop
push
add
mov
sub
faddl
or
or
out
cmp
sbb
jo
xor
mov
sub
or
add
repz
and
or
sbb
xorb
aad
and
push
repz
enterw
popa
incl
das
cmp
push
lea
ret
pop
cmp
jo
in
jge
mov
xchg
push
lret
jmp
inc
mov
outsb
test
cli
pop
add
dec
cli
or
pop
cmp
push
cmp
test
xchg
mov
popa
sub
jl
roll
out
sub
test
push
test
fnsave
cmpb
test
movsl
fiadds
adc
pop
sbb
fcmovnb
xor
inc
sbb
cld
sahf
mulb
orl
and
mov
dec
lea
sti
push
lcall
fcomps
inc
ss
jecxz
ret
daa
pop
popa
add
inc
sub
in
lea
mov
mov
pop
out
dec
xor
mov
stos
out
roll
or
ret
sarl
push
shlb
or
adc
push
sub
cmpsl
lret
and
push
or
imul
push
sahf
inc
cs
adc
aaa
push
xor
pop
dec
std
jg
cmp
ljmp
ja
sbb
sbb
jge
or
fadds
or
fidivs
icebp
sbb
subb
stc
cmc
push
push
scas
xchg
test
adc
gs
out
rclb
les
push
addb
in
movsb
gs
fldt
in
sbb
sbb
xchg
xchg
and
sub
adcb
cmp
xchg
mov
inc
cmovs
daa
daa
daa
dec
push
push
pop
leave
leave
leave
add
leave
leave
leave
leave
push
enter
addr16
movsb
cmp
mov
xchg
cwtl
fs
dec
es
mov
cltd
test
ror
xchg
dec
enter
andb
adc
xchg
fsub
in
and
dec
call
dec
xor
hlt
clc
dec
push
cmp
cld
add
add
imul
or
adc
adc
sbb
dec
xor
and
sub
leave
and
xor
xor
gs
fiaddl
push
xchg
dec
es
push
pop
pop
inc
sub
fs
sbb
and
jmp
pop
push
add
pushf
aas
add
je
and
test
js
stc
outsb
sbb
mov
xor
dec
and
shrl
outsb
or
xchg
adc
andb
or
sbb
movsb
cltd
nop
mov
and
or
and
sub
cmp
lods
inc
lcall
cltd
nop
mov
mov
imul
pop
pop
adc
orb
and
sbb
imul
jmp
pushl
cmp
and
mov
fs
or
insl
add
sbb
orl
ret
clc
lret
test
xor
lea
idivl
test
pop
adc
call
lahf
lods
xchg
cmpb
xor
add
adc
mov
pushf
mov
push
ja
xchg
and
mov
cli
xchg
mov
fistpl
add
adc
jle
jmp
adc
and
ficomps
mov
mov
xchg
push
nop
lret
je
or
jnp
out
xchg
nop
dec
push
jae
sti
movsb
outsb
add
xchg
rcrl
mov
rol
jle
lahf
xor
or
loope
sub
or
ds
mov
add
loope
rcrl
push
add
insb
pop
js
in
imul
inc
or
xor
and
add
or
js
bound
dec
adcb
popa
aas
mov
out
lret
and
or
je
xchg
add
or
or
xchg
mov
jmp
xor
sbb
jbe
adc
or
shll
nop
xchg
jmp
and
dec
add
ljmp
std
or
test
adc
pop
and
sbb
mov
clc
xchg
mov
shll
imul
or
int3
xchg
inc
subl
or
out
outsl
pop
std
clc
incb
adc
lock
ja
frstor
cld
mov
and
aaa
int
out
jecxz
sbb
add
or
sbb
sub
std
roll
loope
loop
or
call
jge
test
loope
out
mov
hlt
flds
and
pop
adc
pusha
mov
pusha
rorb
out
loope
pop
sub
xor
xchg
lret
inc
jecxz
pop
fstp
pop
out
inc
fidivrl
pusha
pusha
fldl
cmp
cli
mov
and
inc
testb
outsb
es
sahf
lret
adc
sti
add
add
or
out
test
fisttps
mov
push
mov
cmp
into
orb
jne
orl
test
sbb
and
sub
shll
pop
testl
out
and
sbbb
rorl
cmp
sbb
jmp
mov
fisubrs
push
and
or
jnp
jmp
xchg
flds
fstps
jmp
fisttpll
pusha
aad
xchg
roll
and
push
inc
pop
ret
push
or
adc
ljmp
ss
sub
aam
cmp
fcomps
add
sti
ja
or
incb
test
ljmp
inc
mov
xor
push
aaa
cmpsb
cmc
mov
in
aas
or
loopne,pt
add
jmp
movsb
insb
dec
jmp
sub
sub
nop
xchg
add
jmp
sub
push
push
rorb
fldcw
inc
test
into
adc
xor
scas
xchg
sub
nop
je
mov
outsl
jmp
scas
jnp
mov
aam
jmp
mov
fstpl
lock
aas
sub
stc
adc
iret
mov
movsb
fmull
jb
or
in
inc
inc
roll
js
repnz
orl
add
or
mov
dec
mov
jl
adc
pop
orl
sbbb
loopne
or
push
push
pop
jmp
pop
adc
loope
push
icebp
inc
loopne
or
add
inc
jno
loopne
adc
daa
xchg
int3
or
or
sbb
and
dec
mov
mov
push
add
cmc
lret
or
and
pop
mov
lret
pop
adc
repnz
inc
lods
mov
add
insb
and
mov
add
test
xor
jecxz
or
call
sarb
je
inc
sbb
test
cmpsb
imul
in
sbb
pop
or
sbb
hlt
adc
sub
and
dec
inc
dec
cmp
sub
pop
nop
dec
fs
or
shl
push
clc
jmp
cld
pusha
or
das
in
sti
or
fwait
jno
adc
in
add
dec
inc
and
fcomps
cs
push
add
stos
mov
fldl
jl
adc
adc
or
ds
fildl
scas
adc
jle
jecxz
mov
fmull
fnsave
mov
test
add
cmp
movb
pushl
inc
add
dec
dec
fcoml
jl
and
push
das
aaa
add
inc
pop
call
mull
arpl
lea
testl
test
or
push
jnp
sbb
add
cmp
data16
xor
rorl
jecxz
into
nop
lods
push
sbb
leave
arpl
push
loope
push
test
add
sbb
or
mov
stos
dec
xor
lock
or
sbb
imul
decb
mov
jmp
fsubs
into
pop
push
add
jbe
jmp
xchg
sbb
test
push
rolb
iret
addr16
sbb
fld
fucomp
pop
flds
or
jecxz
push
xor
test
xchg
orl
and
das
pushf
ficompl
popa
rol
adc
gs
or
shl
adcl
dec
lcall
push
mov
push
pop
sahf
mov
mov
fiaddl
xchg
movsb
es
mov
and
sub
push
push
push
je
fs
aam
loope
ljmp
jo
fstsw
movswl
sbb
loop
adc
andl
sbb
adc
and
rorb
data16
xchg
or
insl
or
add
dec
inc
or
sub
loopne
fcmovnbe
fwait
test
fcomps
ja
and
sbb
add
and
jl
repnz
and
fldpi
xor
inc
pusha
jb
push
jp
cld
je
lret
dec
sbb
adcb
loop
je
scas
xsaveopt
imul
popa
or
insl
mov
ret
loope
dec
das
andl
mov
mov
and
clc
mov
sbb
and
push
or
sub
enter
or
dec
mov
scas
dec
insb
xor
jle
sub
dec
and
xchg
outsl
cmp
icebp
inc
pusha
inc
js
test
push
add
add
mov
nop
push
inc
sub
pop
adc
imul
in
adc
js
cmp
faddp
dec
push
cmp
add
cmp
adcl
movb
add
inc
lea
pop
mov
sub
inc
shrl
inc
cmp
lcall
mov
rolb
cmpl
clc
add
mov
pop
pop
and
mov
out
mov
inc
adc
iret
mov
mov
jno
pop
xor
loopne
cmp
jb
cmp
push
add
dec
cmp
adc
imul
bound
pop
xor
mov
stos
jns
fsubl
les
sarb
out
xorb
push
and
xor
jge
lock
rep
cmpl
add
sbb
out
idivl
hlt
or
inc
stos
inc
add
test
or
xor
repnz
xor
cmp
lock
das
adc
enter
cmp
cld
push
mov
shl
sub
sub
negl
ljmp
movsb
mov
and
mov
out
push
or
jne
shl
mov
pop
dec
adc
add
shll
shl
negb
into
sbb
sbb
mov
mov
popa
or
jns
mov
jb
lea
push
shlb
and
faddl
mov
dec
fistps
out
test
mov
sub
out
or
inc
rcrl
dec
xor
ds
or
hlt
mov
pop
pop
push
push
jb
add
inc
xchg
dec
repnz
xchg
mov
shlb
jns
cmp
and
shl
hlt
push
loopne
xchg
mov
data16
rorb
xchg
sahf
loopne
dec
and
adc
xchg
cli
or
mov
arpl
ss
mov
arpl
adc
add
addl
add
jne
jo
filds
daa
andl
imul
icebp
dec
in
jl
stos
iret
and
mov
mov
or
sub
mov
in
xchg
jge
xor
or
xchg
dec
push
sarb
shl
test
mov
iret
or
fisubl
pop
lock
pop
cwtl
cmp
mov
pop
push
and
jne
and
sbb
mov
or
sub
push
mov
xor
notl
inc
jb
xor
test
adc
cmp
sub
andb
push
sub
sbb
enter
cmp
push
cmp
or
add
inc
push
sbb
cmp
jne
dec
aaa
adc
xchg
js
add
sub
lock
mov
pop
sti
push
jl
inc
mov
mov
rorl
test
test
sbb
out
fcomps
xchg
or
push
xchg
xchg
xchg
adc
inc
cs
or
sti
mov
or
or
out
mov
dec
cmpb
jmp
clc
xor
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
loopne
push
div
add
inc
fwait
push
mov
jp
sbb
add
sti
dec
enter
in
or
inc
cwtl
or
and
fwait
push
imul
cs
outsl
jecxz
adc
or
cmpsl
or
mov
add
mov
mov
outsb
test
notl
dec
mov
or
arpl
push
xchg
xor
ss
sub
jne
bound
imul
addl
insl
jbe
or
add
test
cmp
add
pop
sbb
adc
test
adc
sbb
sub
mov
or
sub
inc
or
add
test
scas
jle
mov
push
mov
adc
or
mov
pop
pushf
sbb
faddl
lock
fildll
or
sub
add
les
enter
shrb
popf
xchg
aaa
js
je
mov
add
rolb
das
cmpsl
cmpb
dec
jns
neg
movb
rorl
jl
cltd
push
aam
pop
sub
pop
push
or
add
gs
add
fiadds
punpckhdq
shlb
gs
test
jbe
jns
nop
dec
orl
or
pop
sub
roll
cld
loop
movsl
and
push
and
lret
or
nop
xor
dec
jno
jle
jmp
jl
xor
rcll
divl
imulb
adc
shlb
mov
xlat
imul
arpl
and
pusha
push
or
push
jmp
ret
jno
mov
call
shlb
and
push
fadd
xor
nop
add
xor
and
jge
dec
stos
adc
adc
and
call
mov
jbe
stc
movsb
inc
push
adc
sbbb
add
push
adc
add
mov
push
lret
jmp
pop
popa
lock
push
imul
add
xchg
loope
cmp
pop
inc
loop
push
xor
push
pop
daa
aad
cmpb
jbe
sub
add
clc
pop
test
enter
js
subb
mov
insl
or
push
js
ret
scas
incl
loope
add
insb
movb
jg
aas
xchg
adc
and
mov
loopne
popf
scas
xorb
sbb
mov
loopne
jmp
jg
ret
dec
jo
pop
xchg
shll
add
xor
xor
mov
add
data16
inc
fnstcw
sub
inc
xor
mov
or
add
ret
add
fisubs
xor
mov
xor
setg
or
sub
adc
dec
rorb
clc
lods
mov
sbb
rcrb
mov
popa
cmp
and
dec
xor
les
xor
jbe
mov
insl
cld
sarb
shrd
or
sbb
sahf
dec
sarb
loop
inc
jge
sbb
and
cwtl
xor
ffreep
xor
data16
inc
and
into
movsb
xor
xor
out
jl
sub
cmp
cmp
adc
inc
mov
xor
rcl
jo
xor
pop
mov
fisubl
addr16
insb
lock
xchg
jo
jbe
frstor
imul
test
xchg
sarl
jg
jb
popf
testl
adc
pop
adc
neg
mov
cmp
sarl
test
jb
orb
mov
mov
push
lock
call
je
mov
push
jg
mov
lea
push
dec
dec
xchg
out
mov
dec
pop
or
or
out
xor
cmpsb
mov
add
and
in
adc
scas
inc
sbb
test
loope
es
cmp
mov
adc
push
jb
add
movw
dec
or
pushf
fcmove
sbb
jle
push
push
mov
ss
mov
jmp
lock
sahf
fwait
inc
xor
adc
mov
neg
call
add
or
ret
aaa
push
roll
fsts
push
lods
pop
mov
add
xor
inc
insb
addr16
pop
mov
cmp
je
aad
rolb
and
jbe
xchg
push
sub
jl
into
rcll
add
add
mov
push
sbb
outsb
cmp
adc
inc
dec
adc
cmp
sub
pushf
sbbb
jne
adcl
nop
adc
mov
out
sub
mov
orb
cmp
pusha
inc
add
leave
xor
enter
sbbb
push
push
push
shll
out
dec
out
mov
jl
loopne
jge
clc
mov
mov
js
mov
push
inc
ret
add
cmp
jmp
xor
jo
fdivrl
sahf
clc
gs
or
pop
data16
pop
pop
mov
push
fs
adc
inc
popa
je
inc
je
pusha
sbb
xlat
jmp
xor
popf
jmp
bound
and
dec
adc
sub
inc
adc
movsl
sbb
rcrb
ret
je
clc
adc
mull
push
add
jo
gs
adc
xchg
xor
adc
adc
arpl
cmp
inc
sub
xchg
je
and
loop
inc
lods
xlat
subl
inc
mov
and
adc
out
rcll
cmp
enter
testw
xchg
rcrl
push
fs
ss
hlt
adcb
sub
push
jo
cmp
jp
push
mov
xchg
cmp
je
inc
sub
mov
push
fwait
ljmp
sbb
cmpsl
mov
sbb
add
fisttps
add
sub
mov
and
pop
push
sbb
sahf
shll
jbe,pt
test
jg
or
jg
shlb
push
and
add
mov
jge
push
ja
and
push
push
adc
enter
xchg
pop
adc
into
xchg
aam
mov
push
mov
fidivrs
fdivrs
cmp
or
dec
dec
sub
or
mov
push
das
xchg
push
pop
inc
mov
sahf
or
mov
fwait
push
lods
movsb
adc
mov
cmpl
pop
add
dec
loopne
push
push
or
push
mov
mov
push
mov
adc
mov
or
mov
pop
pop
pop
pop
pop
rcl
imul
insl
pop
adc
or
adc
and
je
add
stos
cmovno
and
jmp
adc
sub
je
dec
je
dec
dec
enter
push
push
jmp
or
jmp
sbb
inc
jle
orl
pop
adc
jmp
and
lcall
addb
jno
ret
fbld
add
sbb
sbb
push
lock
data16
int3
adc
xor
mov
pushf
cmpl
push
es
xor
jno
sbb
adc
outsl
jne
adc
sahf
and
sbb
and
dec
cmp
mov
pusha
and
testl
sub
cmpsb
mov
add
mov
loop
xchg
movsl
dec
mov
mov
fiaddl
into
mov
xor
mov
nop
xchg
inc
ffree
sbb
mov
pop
mov
mov
adcb
jns
adc
mov
cltd
pushf
and
cwtl
mov
push
push
push
add
mov
or
sbb
call
push
mov
rorl
or
sbb
lret
aaa
pop
ljmp
out
pop
add
or
daa
sub
add
shr
or
mov
push
or
mov
call
and
add
mov
mov
test
mov
lock
cmp
or
mov
adc
insl
insl
and
leave
inc
jbe
adc
movsl
fldl
jl
in
sbb
cmp
add
dec
pop
push
push
sbb
and
dec
fimuls
dec
loopne
and
out
xor
bound
xor
sub
inc
xor
mov
sub
dec
and
pushf
push
lods
orl
inc
out
push
or
hlt
inc
nop
mov
sbb
cmpsb
and
xchg
inc
and
mov
add
cmp
ljmp
cli
ficomps
inc
addl
push
and
add
jo
test
mov
add
ret
cli
jne
mov
sbb
leave
roll
incl
cmpsb
or
xchg
or
inc
mov
shll
in
mov
or
fcompl
enter
jns
sbb
aas
mov
push
in
orb
add
je
dec
xor
cmp
leave
loope
xor
mov
sbb
sub
loope
pop
leave
orl
mov
fsubl
arpl
xchg
and
addl
orl
fs
cmpsb
dec
jo
shll
ret
in
adc
bound
mov
nop
sbb
add
mov
sbb
enter
or
mov
inc
and
and
jo
cwtl
pusha
adc
and
sub
lods
adc
int
pusha
jmp
pop
sarb
or
test
sbb
fsubs
loope
scas
inc
sbb
jp
outsl
inc
xchg
icebp
adc
ficoms
pop
inc
stos
inc
xor
pop
dec
jae
add
sbb
xor
or
sub
mov
bound
add
or
subb
jno
add
add
pop
and
mov
fwait
les
ret
sub
dec
test
or
pop
mov
int3
insb
pop
fcoml
push
mov
xorb
inc
cmp
rclb
jge
add
call
add
cmp
add
jmp
fidivrl
pop
xchg
sbb
add
call
xor
in
or
into
xor
pop
add
dec
push
push
add
push
lock
adcl
push
loopne
in
mov
cmp
jle
inc
shrb
inc
and
ret
mov
hlt
int
pop
sbb
inc
insb
cs
leave
inc
xor
mov
jmp
in
outsl
adc
cmpb
jl
xor
inc
mov
push
xor
inc
add
xchg
aam
push
fstl
aad
or
push
push
pop
movl
pop
mov
and
push
push
dec
orb
inc
cmp
inc
and
and
mov
mov
sub
mov
adc
lret
lods
rcrl
inc
dec
add
or
or
mov
adc
shlb
fcompl
or
adc
xor
inc
mov
clc
out
roll
leave
add
scas
or
je
mov
iret
adc
add
push
hlt
gs
xor
shrb
and
cli
mov
enter
rcrb
xchg
pop
add
add
pushf
out
xchg
adc
inc
add
loopne
outsb
add
xor
dec
and
mov
xchg
adc
sbb
adc
lea
test
xor
cld
imul
stos
jge
inc
inc
push
neg
neg
sbb
out
adc
sbb
inc
sbb
dec
sbb
adc
sbb
mov
sbb
push
push
rorl
out
and
fsts
dec
icebp
sbb
adc
test
lret
adc
sbb
mov
and
mov
dec
jns
sbb
and
dec
jne
pop
pop
pop
sub
lods
add
shlb
and
or
pop
adc
ret
loope
shr
lcall
push
je
js
idiv
and
maskmovq
cld
lock
push
js
ret
inc
shl
and
add
inc
jb
add
lret
test
add
int3
sbb
push
dec
popf
insb
pop
adc
xor
enter
hlt
das
add
aad
adc
ja
int
into
jbe
movsl
das
test
aas
xor
pop
jmp
aaa
add
jne
or
push
mov
mov
dec
xchg
nop
lret
ss
outsb
add
add
pop
cmp
bndstx
adc
and
pop
cmp
push
in
mov
mov
sub
sarb
dec
ljmp
add
push
ljmp
cld
inc
repnz
aaa
dec
sub
pop
rclb
cmpsb
jnp
mov
hlt
ficoml
cmp
ret
jbe
aam
jne
pop
sub
mov
jge
jmp
xor
add
push
pop
enter
flds
xor
cmp
dec
adc
cs
push
xchg
mov
dec
fistl
jecxz
es
mov
outsb
es
mov
je
jmp
cwtl
inc
adc
jl
out
push
cmp
ja
dec
jecxz
testl
ret
cmp
jne
xchg
jge
shll
leave
adc
mov
jo
add
jl
pop
pop
je
inc
adc
adc
insl
cmpb
add
dec
ror
push
and
shlb
test
int
or
fdivr
aas
jmp
pop
push
movb
jmp
or
lahf
cmpb
sub
aaa
dec
mov
cmp
pusha
sub
xchg
test
data16
or
hlt
pusha
movw
jb
mov
imul
das
adc
pop
xchg
add
mov
jae
pop
mov
into
mov
adc
fwait
mov
mov
add
xlat
inc
sti
call
test
or
and
insl
popf
mov
and
sbb
xor
dec
into
push
add
push
add
cmp
mov
in
push
imul
incl
shr
inc
imul
lea
jmp
mov
lret
jmp
fimull
mov
fidivrl
ss
es
ljmp
cwtl
or
mov
cmpb
testl
call
or
add
push
dec
pop
ss
add
xor
push
cwtl
mov
push
push
mov
shlb
jl
mov
leave
adc
jle
rolb
lcall
adc
pushf
loopne
adc
push
mov
loop
or
fbld
and
and
lea
inc
xor
sub
cmpsl
add
into
sahf
test
decb
xchg
cmp
leave
mov
loopne
sub
inc
testl
in
ljmp
fs
inc
or
cmp
out
dec
adc
mov
jne
lea
rorl
lods
xor
add
fiadds
les
dec
or
sub
push
push
mov
data16
adc
dec
push
sub
test
add
movsb
xchg
cmpsl
inc
ja
or
ret
movsb
cltd
ret
fcomp
sub
mov
push
insb
in
xchg
mov
mov
cli
mov
in
inc
insb
fnsave
rorb
jno
faddl
loope
bound
shll
mov
add
shr
or
and
ds
test
rorb
sbb
push
lret
jmp
cli
inc
lods
add
loopne
clc
push
adc
addr16
mov
mov
int3
shrl
loope
shr
or
mov
cli
jmp
xor
inc
sbb
cli
push
sti
lock
lea
dec
and
pop
imul
mov
test
div
pop
adc
andb
sub
test
xor
and
pop
test
sbb
daa
mov
adc
or
or
pop
fisubrl
add
push
mov
sbb
cli
pop
cs
fidivl
fldenv
enter
jg
add
mov
insb
dec
negb
enter
mov
lock
and
stos
sub
xchg
or
pushw
sbb
loop
dec
inc
sar
out
jge
mov
enter
pusha
pop
stos
cmovb
inc
push
daa
jmp
in
aam
daa
inc
imul
mulb
inc
shlb
fsubrs
pusha
hlt
cmp
sub
jbe
orl
sbb
add
inc
add
test
adc
xor
fmull
sahf
or
adc
sbb
push
jns
and
fnstcw
sbbb
test
test
sbb
cli
mov
pop
add
sbb
addb
jns
adc
adc
adc
jg
or
jb
pop
dec
and
nop
das
test
or
or
sbb
in
das
nop
inc
lock
or
cmp
jne
jne
in
sub
fnsetpm(287
or
call
fcmove
pushf
pusha
mov
pusha
fs
jp
je
cwtl
sbb
sub
jo
ret
mov
negb
cmc
inc
jle
add
inc
mov
daa
mov
call
pop
inc
pop
sbb
call
pusha
fsts
or
inc
push
mov
adc
shr
in
pop
inc
rcrl
lcall
and
jl
sub
call
push
jmp
loopne
call
pop
jl
loopne
cli
add
sub
and
mov
push
in
faddl
out
in
cmp
mov
mov
xor
sar
sub
out
pop
popf
inc
les
enter
addr16
fimuls
repz
mov
lock
inc
dec
enter
mov
mov
and
dec
int3
or
mov
sub
test
call
or
add
into
sbb
adc
or
mov
inc
ljmp
jmp
in
or
sub
cmp
jge
push
cld
stos
aas
sub
cmpb
or
add
dec
cmp
xlat
aam
inc
dec
add
add
fadds
xchg
inc
mov
hlt
outsl
mov
ret
jp
jne
dec
add
jb
int
pop
or
filds
or
ret
and
inc
pop
dec
lds
inc
mov
jp
ret
adc
imul
add
add
push
lcall
rclb
mov
mov
add
sub
and
add
push
cmp
or
psubsb
or
cmpsl
xor
pop
jne
or
stos
int3
cs
pop
scas
je,pt
xor
ret
sbb
adc
mov
push
cld
mov
ret
or
dec
lret
add
xchg
adc
or
orl
ret
addb
mov
iret
and
xchg
out
lret
into
pusha
inc
and
pop
pop
or
sub
and
pop
pop
mov
jbe
xchg
mov
ret
push
sub
prefetchw
sahf
inc
ret
or
inc
dec
jne
js
add
lock
ficompl
jne
or
or
loopne
xchg
cmpsb
add
add
aad
lret
inc
je
inc
rolb
sbb
mov
out
sbb
or
push
pop
or
add
adc
jnp
sbb
and
mov
ret
ret
test
pop
fmuls
add
shlb
ret
mov
push
scas
popa
fdiv
push
xchg
push
xchg
xor
sbb
loop
clc
mov
and
sub
test
sbb
xor
cmp
push
scas
andl
jo
or
mov
pop
rcrl
fadds
and
xor
rcl
or
add
add
clflush
ds
pop
test
int
xor
adc
or
adc
xchg
into
mov
mov
sbb
and
sbb
repnz
push
inc
jg
into
into
dec
lret
mov
sarl
pop
sub
push
pop
nop
sarl
sahf
pop
mov
insb
add
fcoms
clc
shlb
or
sbb
stos
xor
pop
and
mov
mov
pop
pusha
inc
adc
lcall
test
out
adc
loope
jo
add
movsb
es
icebp
and
stos
arpl
idivb
test
mov
and
jo
jo
cltd
and
xor
scas
sbb
sub
addl
mov
mov
lret
es
lret
rcrl
push
xor
rcl
pop
mov
clc
xor
fabs
dec
pop
add
or
and
cmc
enterw
xchg
add
scas
inc
sbb
inc
lock
mov
fcomps
shll
mov
jl
lahf
movsb
mov
add
and
pop
cltd
cmp
mov
enter
cmp
cs
sub
js
sbb
jle
mov
adc
sbb
sbb
in
loopne
and
je
dec
sub
dec
loop
jb
out
cmp
je
mov
mov
inc
fmull
jle
test
add
lret
dec
sub
jmp
inc
push
stc
push
push
xchg
cwtl
sub
les
outsb
or
imul
inc
pop
leave
mov
repnz
or
aam
fdivrs
mov
mov
repz
stos
les
and
aaa
pop
and
inc
popa
test
dec
aam
add
scas
and
mov
adc
loopne
jp
or
cmp
add
inc
scas
pushl
mov
and
push
push
mov
push
mov
aam
jl
cwtl
ret
pusha
fdivs
push
and
fmul
xor
or
push
push
rclb
push
cmpsl
push
pop
xorb
push
lret
xor
leave
shll
in
cwtl
xchg
jmp
dec
push
push
or
adc
pushf
mov
cmp
and
lods
add
sub
push
inc
push
aaa
sbb
dec
scas
or
xor
xor
or
pop
adc
inc
xlat
cmp
add
daa
fxch
add
xchg
pop
fisubs
mov
pop
test
mov
sbb
pop
sub
shl
push
bound
lret
xor
adc
sub
jo
or
xchg
fs
lahf
cmp
mov
loope
test
xchg
movsl
mov
pop
pop
dec
add
andl
scas
mov
outsb
push
push
ret
adc
jp
push
push
pusha
inc
jnp
stos
add
xor
mov
pop
outsb
push
test
cmp
adc
or
sub
mov
cmp
lods
sbb
push
mov
push
clc
cli
arpl
pop
jne
jg
mov
jp
pushf
ret
js
test
lock
out
xchg
push
add
pop
sub
faddl
js
lea
add
cmp
rclb
add
adc
paddd
aaa
add
lret
mov
push
mov
out
test
outsl
cmpsb
loopne
jmp
dec
fs
and
jnp
xor
mov
ss
mov
sub
js
and
xor
pop
or
mov
sbb
nop
cmp
inc
insl
add
enter
push
pushf
cmc
popa
inc
sub
gs
cmpsl
cmpsb
mov
push
test
sub
add
mov
enter
jb
out
mov
sbb
mov
push
pcmpeqb
jg
subl
aam
mov
sbb
push
pop
cmp
jbe
clc
inc
aam
cmp
push
mov
pop
movsl
gs
jmp
int3
sbb
or
dec
test
inc
xor
cmp
repnz
push
and
nop
or
rclb
pop
lea
add
lret
or
mov
fcomps
daa
enter
mov
loope
cmp
sarb
pop
mov
add
hlt
test
repz
cwtl
inc
mov
dec
callw
bound
pop
dec
xchg
out
rorb
rcll
push
xchg
push
or
bound
adc
or
xor
ss
dec
push
das
clc
addr16
jo
outsb
insl
xor
or
movsl
sub
in
xchg
xchg
mov
mov
add
ret
shlb
jmp
add
inc
mov
movsl
add
adc
add
dec
je
sub
dec
push
rcrl
xor
sbb
mov
push
and
or
and
sub
sub
and
lods
pop
rol
shll
stos
push
pop
push
and
mov
cmpsl
sub
cmp
sahf
xor
mov
nop
push
in
jecxz
in
adc
clc
add
adc
jge
and
es
test
mov
shll
sub
movsb
add
ficoml
ret
pop
es
adc
add
mov
xchg
push
inc
lahf
cmpsl
int3
jmp
andb
mov
les
xor
mov
mov
loopne
pop
shrb
test
sbb
ss
mov
or
in
push
in
xchg
clc
pop
mov
adc
ret
imul
insl
loope
mov
cmp
sbbl
adc
cwtl
cmp
mov
xor
xchg
cmp
or
push
jno
push
add
dec
or
into
inc
adc
imul
and
lsl
and
cmp
and
loopne
daa
mov
sbb
add
shrb
scas
inc
shrl
rcll
dec
cs
mov
sbb
xchg
bnd
cmpsb
sub
rcrb
sbb
mov
call
sub
cltd
push
outsb
insl
clc
pop
xor
lock
popf
push
xchg
push
nop
loope
rorb
fnstcw
incl
cld
cmpsb
add
push
and
or
fsubrl
bound
popa
or
mov
imul
push
imul
ud2
xchg
std
data16
push
xor
or
push
lret
xlat
fwait
add
or
xor
jp
fiaddl
and
or
ds
pop
mov
jb
mov
xchg
arpl
imul
inc
inc
dec
rcr
sub
cmp
loope
fsubrp
sub
add
dec
stc
xchg
nop
dec
jb,pn
das
inc
imul
add
xchg
jge
cmp
sub
add
sub
jge
clc
push
jg
adc
mov
sbb
cmp
ja
fidivl
jge
aaa
pop
inc
pusha
roll
xlat
cwtl
xchg
pop
das
push
adc
push
add
jae
inc
cmpsl
je
sbb
jle
jp
or
push
dec
add
idivb
cmp
adc
lock
xchg
or
and
xchg
roll
add
icebp
cmp
push
adc
je
shlb
pusha
sub
push
add
fadds
mov
inc
dec
push
dec
movb
add
sar
push
cmp
pop
cwtl
repnz
cmpsl
movsb
pop
enter
mov
inc
mov
push
mov
cmc
jb
lea
mov
test
jp
adc
push
inc
or
push
mov
sub
push
add
pop
fs
mov
xchg
test
sbb
in
sub
or
inc
sub
je
inc
inc
loopne
pop
cmp
cmp
pop
jns
mov
add
pop
and
push
jle
decl
arpl
mov
mov
add
shrb
je
jg
jae
push
lret
push
mov
mov
cmp
or
mov
cmp
ja
dec
push
xchg
push
lods
cmpsl
xor
jl
or
add
out
pushl
mov
push
int
shr
sbb
adc
outsl
dec
out
and
les
out
cltd
testl
rcrl
or
mov
push
sbb
xor
cmpsb
rcrb
test
push
and
or
push
and
inc
sbb
ror
loop
rorb
cmpsl
mov
jge
out
xor
mov
mov
jbe
lds
push
add
mov
xchg
pusha
dec
cmp
or
int
xchg
aam
add
test
call
xchg
sub
cld
or
add
add
inc
sbb
push
aas
subb
es
add
pushf
sbb
pop
subb
xor
mov
push
in
push
push
push
add
fildl
sti
mov
pop
jg
dec
pusha
dec
mov
push
pop
jl
or
mov
pop
jmp
movsb
mov
arpl
push
sub
fstl
test
mov
aaa
iret
loopne
mov
xchg
jmp
inc
addl
adc
jae
mov
xor
or
pop
shrb
popa
loopne
les
add
pop
fsubrs
pop
sbb
addr16
loope
fdivs
das
xor
mov
inc
mov
xchg
push
inc
inc
cmc
jecxz
leave
xchg
jmp
mov
popf
sub
sub
jle
dec
cmpsb
pop
adc
loopne
xor
inc
or
sbb
push
sbb
call
lret
cmp
jg
push
dec
rclb
add
inc
inc
lock
xchg
popa
sub
pop
ret
adc
popa
sbb
jmp
cmp
xor
fcoms
scas
pop
mov
rcrl
stos
ds
cmpl
dec
dec
sar
push
pop
cmp
movsl
and
movsb
jne
inc
push
mov
stc
mov
jp
or
inc
popa
and
xchg
movsb
imul
push
mov
xor
push
or
dec
add
add
es
test
xor
cmp
inc
xor
cli
pop
add
or
or
jbe
xor
inc
lock
push
mov
stc
repnz
and
dec
or
push
es
mov
fs
sbbb
mulb
mov
pop
je
bextr
sub
cmpl
mov
and
dec
mov
negb
jmp
cmp
or
je
xchg
cs
push
mov
sbb
enter
jmp
outsl
sub
add
pop
add
sbb
cmpsl
roll
dec
jno
fiadds
sbb
push
ss
xor
push
repz
add
mov
inc
cli
and
ret
test
xchg
adc
cmp
aas
jnp
mov
je
dec
jne
push
sbb
xchg
int
jno
fadds
mov
sbb
push
add
add
jge
cmp
push
mov
das
dec
testl
sbb
xchg
sub
mov
aaa
loopne
hlt
adc
push
icebp
enter
imul
cli
test
fildl
arpl
mov
add
or
add
je
or
pop
dec
cli
mov
loopew
inc
outsb
add
jl
and
mov
push
sbb
mov
lahf
in
xchg
xor
push
inc
sbb
hlt
push
cli
adc
cmp
push
jb
inc
call
hlt
push
add
addr16
aad
pusha
cmpsl
into
js
cmp
jl
lahf
dec
add
mov
sbb
jg
push
cmpb
sub
add
and
xor
out
dec
push
cltd
rcrb
add
ficoml
ja
les
xor
pop
sbb
jo
frstor
adc
or
dec
test
insb
jl
enter
push
adc
pop
cmp
ret
push
sbb
push
jae
imul
pushf
mov
sub
add
push
dec
xchg
pop
fsubrl
rorl
stc
push
insb
sbb
mov
es
add
add
and
or
movsb
jne
jae
push
mov
jnp
and
and
mov
fs
lods
pop
lock
jle
movsl
jbe
xchg
movsb
ret
test
shlb
jp
mov
out
shl
jne
jge
dec
mov
or
outsb
push
dec
shl
int3
pop
push
adc
jg
jg
add
sbb
je
addb
lcall
push
and
sub
push
jge
cmp
mov
or
fisubl
dec
hlt
adc
xor
lds
out
mov
lea
add
in
mov
adc
jbe
add
push
jge
call
dec
fdivs
call
or
jmp
adc
sub
or
sbb
lods
mov
lods
mov
xchg
push
and
lock
adc
cmp
loopne
or
fadds
or
cmpsl
push
js
ds
sbb
adc
pop
jnp
pop
pushf
and
inc
sub
lret
lahf
push
jae
inc
test
mov
ret
and
jns
inc
or
lock
inc
roll
push
fwait
cmpsl
adc
push
rorb
js
loop
pop
xchg
pop
sti
dec
insb
and
mov
adc
fldcw
imul
cwtl
arpl
jmp
clc
aaa
sbb
mov
xlat
je
cmp
pop
je
mov
and
cmp
jb
testb
lock
sbb
cmp
pop
adc
js
cmp
add
push
jmp
inc
lds
add
sbbl
je
cmp
loopne
scas
sbb
sub
pop
adc
daa
clc
push
push
or
inc
add
push
cmpsb
inc
adc
mov
movsb
gs
pop
das
xor
push
mov
dec
lds
test
jg
add
push
sub
and
dec
outsb
sbb
enter
jbe
shlb
pop
es
jmp
jle
or
pop
aas
push
inc
pop
pop
cltd
mov
iret
pop
sti
or
push
xchg
xchg
push
mov
mov
mov
mov
inc
sbb
or
int
or
add
fiaddl
fldl
aad
lods
jecxz
jmp
and
sbb
and
jb
add
sub
add
add
stc
add
lahf
inc
push
imul
jne
add
and
inc
in
add
aad
cmp
mov
or
cs
loopne
ds
enter
and
out
aaa
adc
jge
cmp
add
push
push
sbb
pop
add
add
mov
outsb
dec
lret
add
and
lea
sub
mov
je
pop
cmp
rcr
filds
fildll
nop
push
xchg
cmp
jmp
pushf
jns
fstps
icebp
aaa
packsswb
sbb
rolb
ret
outsb
adc
sub
das
fsubs
nop
inc
ficompl
jo
shrd
sbb
lods
mov
mov
gs
lcall
sbb
sbb
leave
or
or
orl
mov
sub
movsb
mov
or
nop
jecxz
or
inc
sub
dec
in
test
es
and
inc
lock
jns
jnp
in
data16
andb
in
shrl
jno
imul
pop
pop
lock
mov
mov
pop
repz
xor
int
xchg
pop
enter
sub
ret
adc
push
inc
imul
dec
adcb
inc
push
in
lock
add
in
les
lock
or
jbe
out
fmul
adc
imul
fwait
loopne
add
leave
pop
xor
push
adc
dec
int3
out
mov
xchg
pushf
fdivr
shll
and
aam
sbbb
push
in
mov
push
ret
je
jge
xchg
inc
xor
pop
sbb
and
scas
fs
add
sub
je
mov
loopne
mov
in
filds
add
dec
inc
push
cmp
js
jb
adc
outsl
out
loopne
push
mov
pop
inc
ficoml
lock
mov
xchg
movl
sbb
xor
sbb
and
mov
dec
pop
in
or
mov
jnp
loopne
mov
dec
add
icebp
es
ret
repnz
xchg
jl
rcl
in
inc
adc
dec
add
call
or
mov
pop
adc
adcb
xchg
pop
in
mov
and
add
sbb
inc
pop
or
ret
sbb
push
cmpb
xor
pop
mov
mov
xor
sbb
in
shll
rcrb
push
je
dec
add
sti
xor
sbb
mov
rolb
xchg
or
mov
jl
loopne
xchg
mov
js
out
fcompl
inc
ss
ljmp
test
mov
add
nop
inc
xor
aam
cwtl
out
imul
test
push
sbb
add
xchg
out
adc
sub
add
adc
in
in
cmp
xlat
dec
out
inc
clc
mov
cmp
lock
jno
xchg
dec
repnz
dec
xor
insb
jo
js
xor
and
add
sbb
fsubr
xchg
sbb
lea
push
es
lahf
add
jbe
xchg
mov
adc
push
test
mov
imul
or
mov
in
sti
gs
enter
dec
adc
fbld
cmp
inc
js
and
dec
dec
loope
inc
adc
andb
or
js
mov
arpl
roll
inc
js
cmp
lock
add
popa
js
lods
add
pop
inc
cmp
lcall
mov
push
sbb
stc
push
cmp
lock
icebp
mov
jbe
nop
cmp
icebp
inc
clc
mov
or
mov
inc
adc
xor
nop
outsl
sbb
aam
enter
adc
dec
mov
xor
in
xor
push
ret
sub
push
loopne
subb
in
adc
fsubs
or
xor
cmp
nop
hlt
leave
dec
mov
fildll
sub
sbb
dec
and
test
imul
push
mov
pusha
fsts
xor
and
dec
xor
lods
call
dec
and
loope
andl
inc
lock
push
pop
pop
fs
cmc
or
mov
sbb
pushf
mov
shl
push
arpl
mov
call
cmp
aas
scas
outsl
ret
ficoml
dec
or
or
xchg
inc
cwtl
inc
je
dec
leave
testl
insb
dec
or
in
cmpb
sub
lea
or
mov
cmp
pop
movsb
gs
mov
jo
es
aam
idivl
jns
xchg
adc
out
sub
and
fnsave
dec
gs
adc
cmpsl
in
or
pshufw
adc
mov
mov
and
cld
jmp
or
loopne
daa
xor
ret
sub
or
cmpsl
xchg
loopne
pop
or
sbb
add
dec
scas
lods
loope
cli
jge
or
push
add
movl
or
mov
movsb
push
call
sbb
sub
mov
les
push
insl
and
lods
out
add
ret
cmp
mov
shll
or
adc
repnz
mov
sub
pusha
loope
fsubl
xor
add
loopne
lds
cld
leave
jbe
movsb
ret
in
je
into
xor
fiaddl
xchg
xor
out
test
fbld
mov
and
std
popf
sub
movsl
adc
popf
sub
jno
and
les
mov
push
leave
or
inc
cmpsb
sbb
add
or
mov
inc
sub
mov
jne
repnz
call
mov
push
push
xchg
popa
pop
loopne
mov
lea
cmp
mov
in
test
in
js
xorl
adc
lods
mov
mov
lcall
pop
mov
inc
in
in
add
adcb
push
out
in
shll
add
les
xchg
mov
dec
push
push
repnz
sbb
add
and
loopne
mov
mov
sub
push
or
or
push
cmp
sbb
add
xchg
movsb
sti
and
faddl
xchg
mov
orb
mov
mov
push
xchg
adc
dec
pop
popa
xchg
clc
xor
push
add
sub
test
in
pop
ret
pop
mov
sarb
movnti
loopne
leave
sbbb
jnp
sti
xchg
push
sub
jbe
stc
xor
or
or
in
inc
push
or
or
dec
push
mov
movsb
and
daa
jo
xor
xchg
sbb
orb
dec
dec
inc
mov
add
orb
repz
lods
fimull
andl
fwait
pushf
sbb
mov
fcmovnbe
adc
and
adc
popa
push
and
stc
mov
popa
push
mov
pop
sbb
repnz
ss
sbb
sub
sti
in
cmp
add
sbb
fdivl
mov
fs
lods
pop
mov
sub
push
mov
pop
mov
add
sub
faddl
arpl
or
cmpsl
mov
xlat
mov
inc
jp
jo
mov
mov
push
movsb
adc
add
arpl
enter
lods
xchg
or
sbb
xchg
add
shrl
aam
inc
pop
pop
and
movsl
or
sbb
push
mov
or
add
nop
add
or
sbb
push
pop
and
lea
insb
mov
xchg
ds
dec
jl
add
jo
arpl
mov
pusha
imul
sbb
ret
das
adc
pop
xor
sub
inc
pop
std
mov
add
popa
leave
int3
or
mov
mov
psubusb
xor
repnz
pop
jne
aam
sbb
roll
adc
or
movsb
dec
mov
addb
ja
inc
fcompl
mov
fmuls
das
rcrb
add
xor
shlb
nop
imul
cmp
idivl
adc
mov
rcrb
add
mov
push
sub
test
mov
clc
test
fwait
inc
stc
mov
in
call
mov
or
cmp
jno
andl
cmp
dec
xor
aad
dec
push
and
xchg
or
jecxz
xchg
sbb
loopne
popa
fiaddl
das
loopne
dec
add
mov
cs
push
mov
sbb
mov
imul
nop
or
sub
nop
lahf
jecxz
or
or
or
int3
cmp
inc
in
or
test
mov
push
xor
fdivs
jge
stos
mov
sub
cs
pop
roll
pop
mov
inc
fiadds
fmuls
push
outsl
sub
out
push
or
jae
lds
cltd
add
inc
in
lahf
lock
test
test
insb
popa
push
add
hlt
adc
sbb
enter
xor
lret
and
je
inc
push
push
fdivrs
push
push
push
adc
test
dec
enter
mov
lods
add
ss
fsubrl
call
dec
pop
mov
lds
sti
in
cmp
jmp
adc
cwtl
stc
sbb
dec
cmp
andb
cmpsb
sbbb
mov
pop
mov
cmpsb
loopne
jns
icebp
mov
xor
add
das
pop
adc
and
and
and
xchg
pop
loop
stos
enter
mov
fsubrp
in
xorl
int3
jno
maxps
mov
lret
test
mov
mov
enter
mov
data16
rclb
nop
shlb
inc
out
cmp
sbb
push
fs
xorb
or
pusha
xlat
test
and
pop
nop
fisttpll
pop
xlat
mov
inc
push
jl
fadds
lahf
mov
xor
add
fcomps
and
loopne
in
lret
orl
add
xchg
fcom
adc
cmp
inc
adc
jbe
mov
test
add
push
cmpsl
insb
adc
test
mov
sub
adc
dec
or
cmp
imul
andps
fcomps
xorl
aas
xchg
adc
inc
loope
and
inc
cmc
sbb
sbb
sub
test
mov
lret
enter
push
stos
mov
xchg
pop
popf
pop
fldcw
ja
sbb
sbb
mov
sti
add
dec
enter
sub
ret
mov
sbb
lret
cmp
xor
or
imul
call
pop
cmp
aam
pusha
mov
pop
imul
cmp
mov
stos
outsl
xor
xchg
test
fsubrs
dec
push
mov
shrb
mov
pop
sbb
rorb
add
fldt
aam
adc
daa
and
enter
mov
mov
dec
sbb
sub
xor
push
xchg
iret
add
push
cmp
call
adc
or
int
mov
sub
mov
in
out
or
push
ja
inc
imul
movsb
mov
xor
sbb
notb
stos
aam
jnp
je
mov
or
push
lock
sub
and
mov
and
repnz
push
loopne
rcll
mulb
repnz
fs
lahf
shl
andb
out
xchg
cwtl
adc
dec
mov
pop
cmp
pop
test
mov
adc
das
fisubrl
pop
add
pop
enter
jl
sbb
test
add
es
jmp
cli
push
shrb
cmpsl
pop
push
leave
decl
and
and
inc
lods
push
add
and
add
push
xchg
arpl
dec
add
jp
fnstenv
sti
lock
fiadds
jmp
cmp
shr
adc
xchg
fwait
and
fiaddl
mov
stc
sub
and
in
fldenv
jge
add
shlb
aad
push
movsb
loopne
popa
loopne
or
or
xlat
xor
xchg
mov
mov
or
inc
jge
adc
or
icebp
dec
or
cmpsb
rclb
inc
xchg
call
mov
in
and
inc
out
push
add
adcb
jl
jmp
adc
add
inc
lcall
or
int3
imul
test
pop
leave
add
fmul
dec
or
outsl
test
fistl
xor
pop
adc
in
push
and
add
pop
dec
adc
and
test
cmp
and
loope
dec
push
frstor
cltd
es
rorb
subl
ss
inc
jne
inc
push
imul
rcll
xchg
lret
and
push
test
xor
inc
xchg
pop
rcr
sbb
add
test
cmpl
pop
int3
gs
dec
leave
dec
not
adc
xchg
ja
dec
nop
xor
in
dec
mov
cs
or
mov
or
rclb
xchg
add
mov
jb
gs
jo
add
xchg
xchg
cltd
adc
les
xchg
mov
daa
sbb
mov
in
and
daa
loope
add
xchg
fdivl
xchg
popf
loopne
aaa
lock
xor
xchg
jne
mov
dec
js
movsb
push
adc
xor
outsl
mov
fmuls
adc
lds
pop
xor
add
jne
or
mov
cmc
or
push
jne
cmp
sbb
pusha
mov
pop
aas
mov
push
adc
sub
addb
aam
xchg
add
pop
sbb
mov
xor
mov
xor
fmul
push
mov
fwait
jne
rol
mov
xor
xor
add
dec
sub
popf
dec
outsb
daa
mov
das
mov
testl
sarb
loopne
sbb
sub
mov
add
lods
mov
scas
jge
cwtl
nop
andb
pusha
js
nop
data16
popf
movsb
mov
mov
pushf
ret
ss
adc
nop
mov
dec
ret
mov
push
pop
and
cmp
adc
cmp
mov
popa
xor
xchg
ljmp
cmp
dec
cmpb
es
xchg
dec
pop
inc
jl
xchg
and
es
xchg
subb
pop
jnp
into
test
adc
fiaddl
adc
imul
fs
adc
sarb
rolb
mov
and
gs
adc
call
or
nop
imul
lods
fs
fs
push
orb
sbb
sub
das
push
bound
flds
push
push
mov
popf
inc
adc
jmp
inc
sbb
dec
es
pop
jg
push
pushf
or
inc
je
leave
mov
shlb
inc
out
aam
xchg
insl
xor
std
mov
test
dec
jecxz
pop
cmpsl
mov
xor
pop
or
sbb
leave
and
les
into
pop
sbb
notl
inc
xchg
sbb
add
xchg
aam
ret
lea
add
testb
roll
inc
test
mov
jmp
mov
or
xchg
add
test
out
jne
mov
adc
push
test
aaa
push
nop
xor
movsb
and
fimuls
test
mov
ret
xchg
xlat
fdivs
cmp
mov
add
and
mov
fbld
cmpsb
jmp
cmpsb
shrb
xchg
shld
inc
push
sbb
test
lock
rcl
push
test
iret
xor
mov
aaa
add
jne
aas
or
mov
pusha
push
jns
gs
mov
idivl
add
jnp
es
add
adc
fs
push
sbb
les
cmpl
and
dec
xor
and
dec
xor
cmp
sbb
dec
xor
and
cmp
shll
sub
xor
jne
pop
mov
cli
or
mov
mov
loopne
or
xchg
imul
test
dec
inc
add
dec
push
movsb
jl
add
test
xchg
adcb
cmp
or
cmp
xor
sbbl
test
gs
popa
das
cmp
jne
mov
add
xchg
cmpsb
sbbb
push
jo
dec
in
xchg
lods
nop
aaa
loopne
test
lock
adc
push
repnz
idivl
jbe
jbe
jmp
fidivl
test
mov
fs
jmp
js
mov
int3
int3
add
loop
mov
aaa
and
popa
in
aam
pop
mov
rorl
jmp
imul
imul
lods
mov
mov
push
dec
jle
mov
xchg
int
jo
test
insl
fadds
inc
enter
cmp
cmp
test
jne
cmp
push
inc
or
pop
test
xchg
cmp
push
fwait
dec
ja
mov
arpl
inc
rcll
lcall
sub
inc
and
adcl
ds
gs
or
test
test
rorb
push
sub
lahf
mov
stos
movb
mov
shlb
ss
push
pop
enter
arpl
inc
inc
and
push
stc
xor
std
aam
fwait
sbb
dec
sub
mov
inc
fistps
mov
es
pop
repnz
js
in
lahf
rclb
inc
push
xor
roll
or
sbb
xchg
and
cwtl
lods
mov
jbe
adc
add
js
push
lds
ja
sti
mov
or
ljmp
push
dec
in
clc
jns
movsb
sbb
mov
adc
sub
enter
add
mov
enter
cwtl
inc
cmpsl
jne
mov
fadds
xlat
cmp
mov
sub
test
dec
ja
jns
inc
mov
and
aaa
pusha
stos
enter
mov
xchg
inc
xchg
fwait
addb
adc
dec
push
or
rorl
cmp
repnz
pop
fchs
popf
addb
push
cmp
ja
adc
mov
xlat
xorb
xchg
mov
test
xor
push
sbb
push
push
mov
fsub
ficoml
push
mov
cmpsl
or
outsb
dec
sbb
and
call
or
leave
mov
aam
loopne
fsubr
mov
fsts
fildll
sbb
bound
adc
jg
and
pushf
cmp
inc
or
popf
sbb
test
mov
gs
dec
mov
clc
lea
pop
jnp
dec
testl
das
adc
xor
xchg
lock
leave
and
mov
sub
cwtl
dec
sbb
dec
icebp
fsubl
pushl
mov
pop
pop
test
or
inc
lods
rcrl
shrl
inc
mov
lea
xor
dec
fistl
mov
xor
frstor
dec
je
dec
push
sub
test
pushf
adc
mov
les
sbb
cwtl
push
in
arpl
sbb
orb
xchg
or
jb
mov
subb
and
leave
insl
xchg
pop
nop
bswap
leave
leave
leave
leave
mov
xchg
fcmovne
pushf
xchg
mov
movd
dec
outsb
adc
or
mov
aam
mov
pop
and
and
push
sub
sub
pushf
pop
in
add
ja
inc
push
movsb
sbb
jo
push
jno
mov
mov
sbb
out
mov
sarl
addl
dec
mov
push
dec
dec
sub
jecxz
mov
pop
test
and
lods
neg
fistpl
in
sbb
fs
dec
dec
push
push
enter
sub
loope
mov
xchg
mov
lahf
mov
and
ret
sbb
cmp
or
enter
test
pop
test
dec
inc
or
je
shlb
sub
mov
sbb
decl
pop
dec
dec
xor
in
je
cmp
fsubr
adc
mov
pinsrw
mov
popf
pushf
pushf
nop
lods
mov
push
pop
shrl
mov
xchg
xchg
lods
dec
aad
mov
lcall
or
andl
repz
std
add
aad
push
mov
sbb
push
movl
and
arpl
rclb
xchg
loop
in
call
sbb
mov
inc
mov
insb
roll
sbb
push
and
insl
xchg
idivl
les
insb
fidivl
pop
dec
lcall
imulb
ret
insl
cmp
lods
and
push
cltd
pop
dec
push
subb
addr16
adc
loope
xor
cltd
pop
xchg
fildl
cltd
inc
inc
add
bound
pop
xchg
and
orb
add
push
pop
push
xor
loope
gs
loopne
inc
and
or
call
fisubrl
enter
add
rclb
les
dec
inc
sbb
popa
aas
and
mov
daa
mov
adc
xchg
dec
cmpsl
int3
jp
xor
xlat
or
push
sub
inc
aaa
loop
mov
pop
jge
test
ds
inc
xchg
mov
jns
add
rclb
in
pop
insl
sub
mov
sbb
or
mov
insb
pusha
add
sbb
xor
orb
mov
mov
adc
rclb
rclb
xchg
enter
les
mov
das
mov
xchg
xor
enter
jo
cltd
ss
enter
xchg
dec
pushf
xchg
nop
xorb
lds
shl
ror
aas
adc
xor
enter
stos
loope
push
sub
add
pop
or
sbb
xor
aas
fsubrs
sub
push
jbe
sbb
movsb
adc
mov
jecxz
push
jns
pop
and
add
cmp
rcll
repz
mov
jno
adc
xchg
sub
das
inc
sbb
or
dec
xor
sbb
orb
bound
cmp
push
imul
test
push
mov
std
jo
pop
jnp
sub
je
add
pusha
adc
cltd
lcall
add
pop
push
add
or
and
mov
hlt
or
xchg
mov
dec
pop
sub
in
ss
mov
adc
scas
notb
and
adc
ror
cltd
popf
add
add
repz
xor
test
in
sti
jo
popa
dec
leave
fists
dec
jb
and
and
adc
sub
movsb
addb
les
push
sub
clc
mov
push
pop
scas
cltd
add
icebp
mov
clc
xor
dec
xor
repz
dec
xchg
add
clc
icebp
pop
and
and
pop
arpl
int3
sub
xor
adc
push
xchg
sbbl
and
adc
dec
mov
or
add
pusha
and
mov
out
cmp
push
stc
dec
cmp
out
call
roll
fidivl
mov
pop
ds
push
aas
in
mov
lea
loopne
mov
call
gs
pop
fistpll
and
testl
int3
dec
adc
or
pop
add
add
fsubr
mov
mov
out
xchg
or
mov
push
movsb
sti
movsb
adc
sbb
stos
or
add
dec
test
add
xor
mov
ss
subl
inc
xor
sbb
das
xchg
mov
and
movsb
stos
mov
cwtl
hlt
in
testl
mov
add
jno
cmp
rorl
xor
les
je
in
lods
mov
adc
nop
sub
ret
test
pop
pop
add
add
mov
enter
pop
mov
sub
jo
pop
dec
inc
je
jo
fs
xchg
add
xchg
out
cmp
inc
cmp
sbb
push
pop
xchg
ret
and
push
test
sbb
adc
mov
push
enter
sbb
xchg
pop
pop
add
and
mov
or
xor
gs
fldt
dec
sarl
sub
add
popa
inc
pop
inc
cwtl
xor
jae
mov
xor
aas
ret
xor
call
xorl
or
test
mov
sub
repnz
in
insl
mov
lods
jbe
push
xor
or
pop
sbb
incb
bound
movsl
ja
inc
adc
mov
es
lods
dec
scas
and
scas
test
and
xchg
das
cwtl
and
xor
lods
cmp
shlb
mov
fsts
cmp
or
and
xchg
ret
inc
add
and
cmp
or
xor
popa
mov
add
es
in
xor
jo
sbb
xor
cmp
sbb
mov
push
nop
out
and
inc
mov
add
adc
mov
repnz
loopne
addb
gs
movsl
fstpl
subb
sbbb
or
into
mov
dec
fisubrl
stc
bound
and
sbb
xor
pop
nop
xchg
mov
mov
push
cwtl
inc
adc
add
mov
ret
mov
ret
scas
jne
insl
ret
inc
add
push
xor
push
ret
pop
pop
mov
jbe
xor
test
xor
sub
inc
mov
and
int3
test
mov
xchg
dec
xor
mov
mov
imul
push
or
xchg
xor
popa
cmp
cmp
lret
and
arpl
psubusw
dec
jo
je
adc
das
sub
adc
push
push
add
jb
std
sbb
push
loop
shl
ret
push
std
and
pop
add
sbb
movsb
sub
push
std
mov
lods
add
push
mov
cltd
inc
gs
mov
or
xor
movsb
mov
imul
and
mov
jae
loopne
jecxz
dec
jecxz
and
or
push
cmp
enter
mov
incb
sub
fdivp
sti
pop
push
fadds
neg
fcoml
movb
or
mov
xchg
in
xlat
sub
lret
push
push
pop
lock
shrl
icebp
andb
push
mov
gs
sub
mov
xchg
pop
push
and
bound
add
dec
mov
sti
jns
mov
mov
mov
les
xchg
push
mov
out
fstpl
xor
adc
sbb
divb
fdivrl
cmp
pop
xchg
add
push
or
inc
push
pop
imul
or
insb
jbe
adc
cmp
mov
jmp
add
cmp
dec
push
int
jns
ja
cltd
mov
loope
cmp
repz
sub
pusha
jbe
cmp
repz
lods
loop
data16
in
fists
add
popf
push
mov
std
xor
cwtl
int3
inc
aas
pushf
ss
popa
fldl
cmp
mov
add
aas
inc
xchg
sub
rcll
mov
mov
jns
mov
iret
incl
test
jnp
mov
xor
adc
mov
gs
mov
jle
push
or
cmp
rclb
cmpl
dec
test
add
nop
add
into
pop
adc
test
sub
sarl
push
in
sub
out
jl
sub
movsb
mov
and
gs
mov
popa
fs
je
arpl
jne
jb
outsb
je
gs
lock
rdpmc
add
psubusb
add
sub
lcall
pop
leave
push
and
insb
outsl
arpl
imul
sub
mov
adc
div
lcall
xor
push
inc
outsl
jb
js
je
jb
gs
add
fcomip
out
outsl
or
outsl
add
add
add
add
jne
mov
je
imul
dec
and
or
aas
push
push
add
aaa
jg
sbb
or
dec
add
jle
mov
xor
inc
push
add
aas
cmp
ss
sbb
and
push
push
je
push
insl
xchg
je
jge
push
fidivs
cmp
dec
fisttpl
scas
rcll
fs
cmpsw
insl
push
push
xorb
or
bound
sbb
push
jne
imul
in
cmp
jbe
aas
imul
ds
jp
outsl
or
mov
dec
fs
lret
mov
and
outsl
jmp
jo
cmp
je
arpl
xor
stos
add
mov
pop
push
imul
scas
cmp
jne
inc
pop
jo
notl
or
mov
ret
outsb
dec
sub
mov
jnp
fs
insb
lcall
repz
lahf
cmp
pusha
sbb
outsb
inc
xlat
fimuls
or
push
xor
pop
daa
dec
jbe
cs
jecxz
jb
outsb
bound
push
mov
sbb
jo
arpl
mov
xor
ret
insl
mov
adc
xchg
push
das
jb
ret
cmpb
pop
fidivrl
cs
or
inc
rorl
inc
outsl
andl
sbb
fidivrl
jg
popa
push
mov
push
adc
xchg
lahf
aaa
jg
rol
add
test
fbstp
or
mov
xor
jne
jbe
jb
jne
push
stos
imul
or
pop
stos
mov
js
das
rcrl
mov
push
pop
jae
pop
dec
insl
push
push
ljmp
shlb
lahf
outsl
aas
or
add
pop
scas
ret
sbb
xchg
push
mov
sbb
push
pusha
xlat
aaa
cmpsl
or
insl
lret
imul
jb
fs
imul
shll
sub
rdtsc
cmp
inc
xchg
ret
or
clc
das
xchg
sbb
push
lods
sbb
add
pop
pop
sbb
push
stos
pop
insl
sub
lret
je
scas
cmp
push
out
popa
mov
jg
cmp
sbb
fisttpll
movsb
pop
jecxz
push
push
sub
xor
cmp
xor
addr16
aad
lock
add
out
push
cmp
loopne
inc
inc
cwtl
push
adc
adc
std
adc
cmp
out
adc
push
sbb
cld
sbb
sbb
sbb
mov
push
pop
sahf
dec
cli
and
int
push
stc
mov
lock
out
out
jns
jp
push
cld
jp
adc
js
cmp
mov
aaa
add
mov
ja
pop
sub
sub
out
mov
push
mov
xchg
fcmovne
add
pop
es
pop
mov
imul
clc
xchg
ja
ds
mov
sti
mov
shll
cmpsl
push
fwait
cmp
mov
cmp
push
xor
pop
mov
sub
add
in
repnz
das
das
das
and
pop
mov
shlb
dec
ljmp
jge
and
decb
ret
inc
jmp
je
imul
dec
idivl
aas
pusha
xor
repnz
inc
mov
cmp
sbb
mov
jne
mov
mulb
outsl
dec
and
inc
jo
inc
das
pop
mov
pop
imul
iret
fcmovnb
mov
jns
out
out
outsb
sti
adc
push
arpl
daa
push
pop
pop
jp
jae
push
dec
xlat
daa
push
and
sub
scas
push
testb
dec
fbld
arpl
mov
ds
neg
iret
xor
lahf
jg
sbb
pushf
cmp
cmp
add
jnp
sub
dec
and
jns
add
das
ljmp
scas
das
adc
arpl
bound
mov
dec
outsl
jbe
dec
arpl
ds
popa
sbb
jo
sub
addr16
xor
insb
mov
push
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
into
mov
jae
mov
xchg
addr16
fcmove
fdivrl
je
jb
xor
and
jnp
data16
push
gs
sbb
dec
outsl
outsb
and
fdecstp
push
jne
xchg
pop
dec
imul
pushf
inc
aas
add
out
dec
or
jge
dec
jnp
mov
ja
adc
jae
fimuls
adc
popa
insb
outsb
mov
inc
inc
pop
push
and
call
lahf
and
sub
sub
cs
xor
xor
cmc
pushl
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
add
push
push
decl
insl
jl
pop
pop
pop
pop
movsb
pusha
popa
bound
gs
sbb
push
insb
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
cmp
sub
mov
sub
xor
push
add
fmull
adc
add
add
add
add
js
sahf
push
and
push
pop
outsb
add
xor
dec
and
push
add
pusha
jnp
add
push
add
inc
add
xor
add
sbb
enter
loopne
sti
fidivrs
orb
sar
dec
mov
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
pop
outsl
jno
ret
sbb
imul
sahf
xor
jb
pop
dec
add
dec
add
xor
aas
aas
popa
js
jne
mov
addl
pop
aas
fmuls
outsl
ja
push
addb
push
xchg
adcb
add
mov
rorb
data16
pop
cmpl
push
inc
pop
imul
pop
cmpl
add
jo
mov
shll
inc
mov
mov
scas
xlat
push
outsb
imul
and
jp
shll
push
fldl
pop
add
and
pop
inc
inc
out
sbb
xchg
add
xchg
out
xchg
add
lea
cs
nop
xchg
mov
xchg
mov
inc
fisubs
or
or
dec
dec
sub
inc
scas
mov
cmp
out
add
aad
pop
lods
mov
pop
lods
in
add
inc
sub
pop
sbb
fstpl
dec
arpl
inc
sub
ss
out
mov
js
dec
dec
cmp
xor
mov
lret
mov
push
jae
sbb
bound
je
outsb
inc
insl
xor
push
dec
je
xor
push
push
xchg
mov
daa
pop
lea
mov
popa
addr16
outsl
js
push
xchg
cs
popf
insl
decl
inc
outsl
insl
jo
jo
and
and
imul
daa
aaa
insb
les
dec
imul
or
inc
mov
fdiv
fidivrl
inc
cmp
dec
inc
jb
jns
daa
outsl
push
fwait
xchg
pop
and
gs
jg
bound
jae
lods
add
jmp
and
addr16
rolb
add
jbe
mov
outsl
jnp
in
jo
or
jb
and
xor
pusha
inc
jbe
push
xorl
push
lahf
fs
insl
and
add
push
jp
pusha
xchg
data16
out
pushw
popl
inc
or
subb
jp
cmp
push
jo
push
lds
shrl
mov
dec
adc
divb
fadds
pop
pop
pop
aad
mov
push
push
jae
or
add
xorl
add
or
sbbl
xor
outsb
gs
mov
data16
cmp
bound
push
push
push
dec
testl
xor
push
push
in
lods
fisttps
push
ds
inc
or
sub
nop
xchg
push
imul
push
pusha
wbinvd
pusha
jg
popa
test
outsl
jae
inc
mov
inc
push
in
xchg
andb
popa
sbb
push
insb
roll
push
pop
fadd
sub
or
push
mov
pop
das
je
outsl
xchg
pop
aaa
daa
xchg
mov
data16
imul
or
ds
jns
imul
push
das
push
sub
jnp
sahf
jl
push
addr16
jle
sub
iret
shr
popf
sub
add
add
fidivrs
cltd
sub
pop
or
sbb
das
enter
push
jb
aaa
iret
push
mov
cmp
ds
out
push
pop
pop
jne
loopne
mov
fs
jbe
push
lock
sbb
jo
ss
gs
imul
mov
dec
int3
and
cmp
pop
enter
sub
popa
sub
mov
jl
out
sub
repz
call
inc
xor
ds
repz
adc
add
or
call
fadds
mov
jns
aam
push
int3
enter
sahf
out
mov
lods
test
movsb
cmp
pushf
outsb
cwtl
xchg
nop
idivl
repz
inc
xchg
mov
push
sahf
out
sahf
cmpb
insb
jns
out
push
sahf
out
out
push
jg
dec
inc
cmp
jns
and
add
or
cmp
shl
shlb
iret
inc
sbb
fmull
mov
xchg
js
fs
dec
jl
out
sub
adc
call
ror
mov
iret
mov
push
xchg
push
mov
sbb
or
or
add
fs
outsb
and
sub
push
lcall
pop
fmuls
addl
cmpb
mov
nop
add
add
xchg
lods
stos
push
add
andl
add
add
mov
dec
adc
add
sbb
mov
pop
faddl
jle
popf
sub
inc
add
addb
xchg
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
ljmp
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
dec
lret
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
sbb
push
loope
addb
and
cmp
xor
jg
or
lcall
gs
popa
add
pop
rorb
pop
jns
push
xor
add
ljmp
cwtl
add
push
mov
lock
insb
fs
sbb
add
je
xor
les
jo
pcmpgtw
xor
push
inc
pop
add
cmp
dec
push
push
dec
and
xor
cltd
add
push
dec
inc
dec
cmovns
unpcklps
pop
mov
imull
adc
loopne
loopne
call
rclb
mov
dec
sti
fildll
fidivs
inc
jnp
inc
loop
mov
ds
enter
pop
adc
clc
lret
sbb
jb
imul
call
adc
dec
scas
jp
jno
pop
enter
sbb
xchg
fisubrs
and
cmp
call
cmpsb
iret
lret
add
inc
mov
mov
int3
push
test
sub
fwait
ss
sbb
pop
fistpll
xor
incb
int3
dec
dec
xor
dec
popf
pxor
add
pushl
mov
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
lcall
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
ret
out
fcoml
cmpsl
xor
ds
dec
xlat
ret
mov
repz
xor
pop
mov
into
or
icebp
pop
pop
repnz
jg
std
or
es
mov
jle
add
add
aas
gs
pop
push
test
pop
jle
push
inc
push
rcrl
data16
xchg
scas
orl
gs
stos
push
fwait
add
push
and
cld
into
mov
push
and
and
cmpxchg
cmpsl
dec
xchg
je
fbld
pop
and
inc
ret
pop
imul
sbb
mov
rorb
add
mov
adcb
xlat
scas
jbe
mov
mov
arpl
mov
jne
fs
js
test
sti
or
ja
popa
daa
fwait
je
test
ret
daa
je
sub
jae
test
push
ret
lahf
je
pop
fwait
jmp
lock
push
xchg
lret
xchg
sbbb
adc
arpl
notb
cs
jb
add
test
sbb
adc
mov
xlat
inc
outsl
add
mov
or
jae
insl
jle
or
push
fisubs
cmpsl
mov
jecxz
jecxz
pop
pop
inc
stos
aas
arpl
xor
rclb
jno
fbstp
out
sub
fisubs
push
push
ret
jg
jnp
jp
cmp
mov
fcoms
cmp
xchg
stos
add
add
sub
jl
imul
or
xor
aaa
mov
cs
fs
inc
and
into
xchg
ret
adc
cmp
push
mov
sub
cmpsl
cwtl
push
add
sti
lock
outsl
xchg
insl
mov
pop
add
outsl
cli
ja
mov
pop
lcall
mov
das
addr16
iret
jb
stos
add
loope
push
ret
add
jne
data16
gs
gs
push
xor
arpl
sti
mov
xor
ja
xor
xor
icebp
mov
mov
sahf
imul
sub
xor
add
adc
iret
push
inc
sbb
or
icebp
cmp
mov
leave
xor
push
pop
in
fcomps
pop
add
fnstsw
cmp
or
int
cmp
add
sbb
pop
push
das
pop
shrl
lock
stos
out
fwait
sbb
loope
ret
cs
mov
push
popa
or
push
fdivp
add
mov
sub
xchg
scas
jo
imul
stos
adc
jp
mov
es
xlat
je
cmp
mov
dec
inc
sbb
daa
mov
mov
pop
push
loopne
xchg
inc
cmp
add
push
ret
dec
dec
outsl
test
fimuls
aas
ss
out
stos
aaa
dec
add
push
inc
add
andl
jecxz
push
insb
aas
pop
mov
sub
or
inc
addr16
pop
sbb
pop
daa
fucomip
daa
je
and
outsl
mov
arpl
daa
pop
pop
ja
mov
sbb
pop
push
lcall
sub
jne
xor
adc
cli
sbb
cs
inc
ret
pop
pop
cmp
add
or
fiadds
das
sub
jnp
mov
pop
pusha
lcall
push
stos
mov
pop
adc
sub
jno
daa
add
loope
push
pusha
rcrb
dec
push
mov
mov
addr16
mov
into
adc
loop
ret
insb
push
imul
push
arpl
decl
jno
mov
lret
mov
sub
push
push
clc
sbb
daa
or
push
repnz
jl
je
jae
pop
mov
inc
imull
out
jmp
pop
push
mov
pop
dec
aaa
pop
xchg
in
lods
fmuls
pop
xor
dec
pushf
dec
inc
ljmp
pop
and
out
xor
push
sub
jecxz
mov
jbe
ret
clc
mov
inc
cmp
inc
cmp
shll
add
stos
cs
dec
pop
inc
out
dec
mov
jecxz
cmpsl
mulb
daa
mov
jp
xor
xor
jo
popf
sub
xchg
lahf
dec
adc
jb
subl
scas
sub
outsb
fldl
and
push
out
fsubl
pop
push
lret
and
and
pop
fmuls
and
and
and
dec
dec
jno
sub
loopne
mov
jno
pop
addr16
ja
out
mov
lods
mov
push
mov
aaa
das
loop
jmp
orps
in
mov
es
insl
mov
jl
mov
inc
mov
rclb
mov
pop
jo
getsec
jl
arpl
dec
insb
scas
push
push
mov
push
add
ja
aaa
lcall
mov
mov
aaa
mov
sbb
shl
sbb
mov
jge,pt
scas
pop
push
movlps
ja
data16
pop
cmp
mov
popa
add
addr16
mov
mov
ja
pusha
mov
sar
scas
lahf
inc
cmpb
imul
jg
mov
incl
pop
or
addb
mov
xorl
jl
jl
lea
jl
stos
sti
push
ja
sarl
and
addr16
bound
xor
push
das
nop
ret
xchg
jns
xor
cmp
jns
or
mov
pop
sub
push
fistps
rol
sbb
ja
icebp
jp
call
es
adc
testl
loopne
stos
div
jge
loopne
outsb
jo
popa
pop
arpl
mov
jl
xorb
jl,pn
mov
int
outsl
lret
jl
outsl
arpl
lea
outsl
or
andb
adc
xor
ljmp
xchg
iret
imul
pop
xchg
or
sarb
xor
sub
icebp
mov
daa
xor
inc
addr16
outsl
pop
or
pop
and
add
add
stos
push
push
ja
push
pop
pop
or
push
xchg
mov
out
fwait
adc
ret
daa
pop
ds
imul
clc
shr
jns
and
icebp
das
jae
incl
sbb
repnz
push
pop
das
stos
pop
push
xor
pop
fwait
xchg
push
loope
jecxz
push
pop
pop
pop
std
pop
test
add
xor
pcmpgtd
or
inc
insb
push
add
mov
dec
inc
aas
popa
push
sbb
inc
xchg
test
popa
inc
or
das
imul
push
fidivrl
pop
mov
imul
jno
xor
incl
test
dec
sub
jo
iret
repz
mov
outsl
adc
pop
sbb
testl
push
add
jns
andl
out
jp
push
cltd
or
xchg
xor
xchg
cwtl
pop
adc
add
inc
xor
loopne
adc
adc
sub
sbb
and
sub
xor
inc
fnstsw
data16
mov
mov
mov
add
add
shrb
ret
sub
fldcw
shrb
xchg
pop
adc
push
adc
pop
add
int
mov
xchg
rclb
lret
str
mov
and
das
ret
sti
add
incl
xchg
cli
lea
push
dec
sub
or
icebp
push
in
pushl
sub
inc
cmp
dec
adc
shr
or
push
dec
mov
xor
mov
lcall
cmovae
ds
test
sub
mov
xchg
push
mov
into
mov
incw
outsl
mov
cmpsl
push
test
imul
dec
imul
insl
mov
fwait
in
mov
jb
icebp
lahf
imulb
mov
ss
ds
push
mov
jl
shlb
out
add
decb
pop
cmpsl
sbb
shrl
mov
stos
xlat
cmp
int
lods
lods
loopne,pn
or
imul
cmp
outsl
fs
ds
mov
push
mov
mov
push
repnz
cmp
sarb
jnp
iret
roll
pop
in
inc
mov
subl
or
aaa
pop
rcr
scas
jns
test
adc
out
imul
jae
push
mov
cs
fmulp
out
fadds
testl
out
fsubrp
jg
push
or
es
dec
je
jns
cmp
sub
inc
dec
push
pop
and
sahf
cmpsl
pop
push
inc
mov
and
je
stos
iret
dec
bound
push
fwait
subb
jns
sub
inc
sarl
push
jae
push
imul
add
sti
push
dec
jecxz
jae
aas
iret
popa
scas
xor
fs
and
push
and
cmp
jae
mov
shll
push
popa
jne
or
and
push
dec
bound
mov
sbb
push
pop
push
jle
lds
cmpsb
add
and
cmp
repz
jne
int
fwait
jecxz
cmc
and
jge
test
out
mov
insl
fnstcw
das
lds
cli
add
fisubs
gs
outsb
cmpsl
fwait
mov
add
insb
je
data16
imul
adc
je
jb
mov
into
pop
sti
cmp
ss
sbb
ds
fidivrs
fdivrs
and
jae
imul
xchg
clc
insl
pop
adc
mov
cmpsl
push
xchg
loopne
sahf
and
xlat
fimuls
jne
je
ss
cmp
pusha
mov
cld
imul
jbe
sbb
ja
imul
orl
adc
inc
pusha
test
xchg
ds
imul
sbb
mov
mov
push
jecxz
daa
xchg
js
loopne
mov
sbb
pop
inc
add
pop
js
or
filds
sub
or
sub
mov
adc
and
push
imul
sbb
aaa
push
cwtl
rolb
mov
sbb
inc
adc
outsb
mov
fnstcw
out
push
mov
jle
and
jnp
push
imul
stos
ds
mov
das
lods
adc
fisttps
pop
mov
and
and
xchg
fiaddl
bound
mov
xchg
icebp
scas
loopne
jbe
fwait
shrl
sbb
test
dec
and
pop
je
aas
xchg
and
dec
sbb
scas
adc
dec
test
jo
mov
stos
and
out
inc
or
out
mov
push
xchg
push
pcmpeqb
inc
push
inc
decl
mov
dec
cmp
push
sub
inc
inc
lcall
add
push
jecxz
or
push
mov
push
movsl
adc
mov
stos
sbb
imul
repz
shlb
imul
dec
outsb
pop
int
dec
and
loopne
mov
pop
test
add
adc
push
ljmp
stos
mov
push
add
push
pop
add
jp
xchg
adc
mov
shlb
stos
or
aaa
aaa
pop
bound
lock
xor
dec
pop
inc
sub
pop
popa
cld
loope
jb
fs
add
cmpsl
ds
cmp
fstpl
and
nop
test
add
rorb
pop
fsubs
inc
aaa
mov
movhps
fbstp
mov
fsubrs
outsl
dec
fwait
ss
addr16
int
test
imul
scas
push
push
add
mov
push
shl
dec
es
push
push
add
sub
and
sti
add
dec
iret
xchg
pop
cmpsl
pop
dec
dec
rorb
push
inc
loopne
mov
aas
inc
push
inc
pop
lods
lea
aas
sbb
jmp
das
inc
int
es
push
sub
outsl
decl
or
xor
mov
addr16
arpl
jo
or
dec
iret
idivl
and
addr16
ret
and
sub
add
sub
push
pop
adc
sub
imul
mov
mov
jl
push
fsubr
push
lret
jno
test
iret
push
movsl
jo
or
ret
into
faddp
vpxor
cmpsl
push
adc
push
test
and
adc
xchg
add
mov
fisttps
lahf
iret
sub
outsb
mov
out
mov
adc
push
push
push
push
xchg
aas
imul
inc
dec
pop
sbbl
inc
adc
stos
insl
aaa
inc
mov
das
fiaddl
gs
mov
xor
fbstp
mov
adc
mov
lahf
lock
push
lret
push
cmp
arpl
adc
outsl
dec
rolb
inc
ret
fbstp
out
sbb
dec
mov
imul
inc
xchg
adc
shll
push
mov
iret
push
inc
movsb
add
das
jnp
subl
fs
mov
xchg
arpl
pop
bound
sbb
add
dec
js
fiadds
pop
out
loopne
loopne
jae
push
inc
arpl
rcrb
or
outsl
cmp
punpcklbw
push
pop
inc
addb
bound
dec
ret
scas
adc
xor
pop
inc
adc
divb
iret
push
sub
cmp
shlb
arpl
aas
pop
or
inc
divl
push
addb
lret
fs
push
jle
cmp
jne
arpl
imul
push
mov
push
test
push
loopne
insb
dec
and
jb
jp
scas
cmp
int
mov
pop
inc
frstor
or
arpl
addr16
fs
pop
add
imul
insl
push
xor
or
xchg
in
pxor
and
pusha
and
outsb
js
lret
jmp
cmp
jle
sub
push
or
daa
repz
xlat
sbb
stos
push
adc
mov
ret
cmp
ss
cmp
xlat
popa
xchg
mov
pop
cmp
mov
lret
cmp
and
rolb
js
inc
aam
out
dec
push
sbb
ret
or
cmp
test
inc
addr16
rcr
dec
ret
push
and
insl
inc
stos
push
ret
push
out
out
je
and
sbb
sbb
pop
inc
cmp
xchg
ja
push
jnp
lods
sbb
ja
hlt
pusha
in
jmp
xlat
dec
popl
and
jnp
mov
add
inc
cs
cvtpi2ps
inc
pop
push
adc
jo
mov
mov
shll
lcall
pop
jg
pop
mov
jmp
mov
ja
testb
push
add
push
mov
and
mov
push
xchg
gs
hlt
hlt
push
dec
ja
inc
bound
jg
inc
mov
mov
aas
iret
outsl
iret
jp
sub
cmp
addr16
sub
roll
insb
out
arpl
repz
jl
and
outsl
and
add
fistpll
out
jecxz
or
mov
sub
aas
add
xlat
daa
ret
iret
mov
jns
mov
es
push
jg
inc
push
sti
mov
dec
int
pop
inc
popw
test
stc
xor
in
repnz
push
rcrb
pusha
mov
lahf
cmpsl
jno
sbb
sar
xor
out
arpl
pushw
lea
outsl
jne
test
jnp
test
mov
mov
negl
sub
push
scas
xor
or
outsb
les
inc
mov
sti
cmp
arpl
mov
pop
pop
sbb
and
or
loopne
scas
test
push
jae
daa
push
xor
jae
rcrb
push
pop
inc
pusha
adc
outsl
imul
aas
push
and
ja
add
xor
push
push
and
push
sbb
mov
adc
arpl
cmp
loopne
adc
ljmp
shll
sub
dec
lds
mov
test
scas
aas
add
sub
shll
and
mov
pop
pop
les
loopne
stos
cmp
xor
test
xlat
lds
sbb
and
push
sub
ret
push
mov
add
mov
fwait
push
stos
ret
push
mov
cwtl
lret
imul
stos
add
xor
pop
fwait
int
push
xor
dec
mov
mov
xor
fldt
mov
leave
lods
leave
pop
and
cli
mov
insl
add
outsl
lds
aaa
jb
mov
mov
mov
add
mov
in
ret
sub
arpl
bound
cld
push
lods
negl
mov
inc
jns
test
cmpsb
push
jno
push
jnp
repz
ja
stos
pusha
inc
cmpsb
xchg
push
leave
adc
mov
dec
and
mov
subb
dec
pop
fdivrl
in
in
xchg
jns
pop
and
stos
sub
clc
mov
push
leave
push
jb
add
mov
pusha
or
push
repnz
push
sbb
mov
in
cltd
je
pop
and
js
sub
aam
andb
mov
jb
dec
test
xchg
test
inc
xor
mov
dec
clc
scas
sub
push
leave
push
repnz
lods
test
jns
pop
and
stos
sub
dec
and
test
int3
stos
imul
testl
xor
jg
shlb
add
inc
adc
mov
xchg
xor
pop
dec
xchg
adc
dec
inc
push
inc
xchg
dec
pop
sub
add
mov
push
pop
cmp
mov
sbb
xor
iret
iret
dec
fdivs
rcll
dec
subl
jbe
call
lods
mov
pop
cmp
mov
movsl
adc
les
or
inc
xor
out
push
test
sbb
inc
test
insl
xor
push
mull
mov
rcl
mov
mov
aas
add
sub
mov
test
adc
push
push
mov
push
shll
mov
mulb
das
test
dec
inc
push
outsl
arpl
in
ss
pop
push
scas
shrl
pop
test
mov
neg
mov
inc
scas
mov
add
pop
mov
cmpsl
lahf
daa
mov
mov
pop
aaa
inc
movsb
sub
loopne
add
mov
je
sub
xchg
imul
fsubrs
push
arpl
das
xchg
cmp
aaa
and
inc
iret
aaa
mov
sub
sub
add
movl
sbb
outsl
pop
cmp
lahf
and
daa
adc
dec
xchg
mov
sarb
aas
addr16
pop
das
pushl
mov
jg
aaa
add
ja
push
test
mov
cltd
call
sbb
pop
inc
dec
lret
inc
sbb
xchg
mov
pop
out
movsl
test
cmpsl
inc
addr16
fidivrl
xchg
bound
and
fs
insb
mov
mov
das
jbe
xlat
popa
xor
sbbl
daa
push
and
mov
mov
fildl
js
outsb
push
pop
or
sbb
aam
cvtpi2ps
jl
or
dec
loopne
cmp
sub
adcl
test
and
pop
sub
out
xor
pop
jne
addr16
out
mov
je
fs
sbb
sbb
insl
je
arpl
sbb
lcall
and
out
addr16
or
mov
push
push
add
js
push
push
bound
out
insl
les
in
ss
mov
jnp
cmp
popa
jae
js
outsl
les
sbb
xor
pop
mov
inc
and
addps
jno
jecxz
or
andb
roll
pop
xor
repz
xlat
lahf
stos
add
inc
or
jae
mov
xor
fwait
out
les
inc
stos
cmpsl
out
fildl
mov
pop
lods
dec
sub
divl
mov
outsb
push
daa
jno
iret
repz
inc
push
in
test
lods
lea
xor
sar
enter
xchg
jl
jg
add
push
add
jb
pop
and
imul
inc
dec
pusha
push
or
movups
aam
sbb
inc
xchg
push
ja
and
sub
packsswb
lods
cvttps2pi
cltd
or
dec
push
sbb
mov
pop
xor
push
dec
addr16
cs
rclb
mov
fistpl
nop
sub
or
pop
cmp
adc
push
mov
mov
paddq
aam
pop
jns
push
movsl
int
testl
ljmp
push
sbb
and
rclb
fwait
mov
push
pop
xchg
pop
sbb
mov
aaa
jecxz
call
pop
call
cs
imul
push
mov
xlat
scas
test
xchg
mov
ret
mov
mov
stos
pop
jg
addl
xchg
adc
flds
mov
jae
data16
pop
ds
jbe
push
test
stos
push
es
cs
cmp
mov
mov
push
mov
add
mov
imul
mov
sub
jecxz
insl
xchg
fidivrs
push
stos
inc
xchg
cmp
testl
ret
fs
dec
lock
bswap
push
je
xor
jbe
pop
scas
dec
shlb
stos
fildll
out
inc
mov
or
pop
or
xor
inc
js
xchg
jbe
sarb
js
inc
push
mov
in
fidivs
jbe
push
dec
mov
bound
adc
pop
incb
and
push
mov
arpl
jo
pop
outsb
jp
ljmp
inc
xchg
ja
retw
pop
negl
dec
arpl
inc
fidivs
mov
lcall
adc
cs
cmpsb
inc
mov
addl
dec
dec
daa
cmpsb
xor
sarb
mov
pop
js
inc
pop
fucomip
push
add
imul
pop
pop
mov
out
fidivrs
push
es
ss
outsb
pop
push
push
jge
push
mov
fs
inc
pop
dec
jnp
or
add
and
jge
sarl
pop
push
sysexit
mov
loope
aas
dec
cs
sahf
push
outsl
pop
out
loope
push
push
sub
xor
push
scas
push
insl
mov
inc
icebp
pop
jnp
ja,pn
xor
push
jp,pt
jp
js
pop
add
ds
movsbl
jae
jg
dec
das
xor
mov
pop
outsl
pop
sarl
js
push
into
roll
outsl
enter
imul
sbb
pop
push
imul
clc
and
mov
pop
lret
sub
call
sbb
pushf
shlb
mov
push
or
shlb
test
jnp
xchg
jo
adc
jo,pn
test
xchg
xor
or
aad
jne
fistl
scas
repz
xor
inc
push
cli
pop
xchg
rclb
cs
pop
xor
shlb
fcomp
lret
das
sub
push
sbb
ret
push
mov
mov
adc
test
loopne
adc
arpl
ret
andb
arpl
arpl
sub
pop
shrl
stos
scas
lcall
fs
mov
ret
xor
lahf
adc
xor
push
add
dec
daa
daa
sub
mov
inc
or
xchg
mov
loopne
dec
push
aam
xor
outsl
imul
stos
dec
outsb
mov
cmp
inc
cmp
shrl
dec
fiaddl
add
push
stos
and
adc
inc
xor
outsl
sahf
insb
outsl
popa
fs
outsl
sbb
inc
pop
xor
dec
aas
add
dec
jecxz
pop
scas
fisubl
push
cmpsl
xor
sbbl
pop
or
fstl
jo
jp
scas
add
add
int3
das
pop
push
push
pusha
and
pop
xchg
pop
add
aas
mov
mov
sub
push
inc
outsb
aaa
mov
lahf
and
mov
xchg
mov
add
das
push
or
lods
sub
mov
enclu
rorb
mov
push
sub
xlat
jmp
inc
sub
xchg
cmp
testb
mov
popa
inc
addl
addr16
inc
or
mov
mov
mov
insl
cmp
mov
ret
das
sbb
fwait
inc
xchg
push
pop
inc
stos
mov
popa
fldt
or
adc
jmp
push
mov
jae
add
push
pusha
es
outsb
arpl
and
jae
scas
add
sub
jns
or
add
mov
push
mov
out
wrmsr
mov
mov
bound
push
int3
push
xor
das
add
sub
inc
xchg
inc
add
nop
and
mov
mov
sbb
ljmp
mov
mov
mov
lods
push
lcall
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
jmp
mov
jle
sub
mov
sti
pop
repnz
adc
pop
sbb
xor
fadd
addr16
dec
fsubs
sbb
insb
std
mov
dec
xchg
jecxz
in
bound
rorl
adc
adc
pop
push
and
outsb
pop
dec
jecxz
ljmp
imul
mov
in
add
sub
push
xorb
inc
mov
xchg
cmp
sbb
cmp
push
dec
fmul
pop
mov
sub
pop
mov
jl
repnz
cmp
insb
xor
cmp
iret
leave
jae
inc
cmp
sub
leave
ret
and
inc
aam
sbb
bound
xor
loope
add
add
or
aaa
or
bound
clc
mov
pop
sub
pop
add
pop
cmp
jnp
cmp
mov
cli
ss
cmp
sub
fidivs
inc
adc
inc
push
mov
cmp
inc
jnp
add
inc
cmpsb
jp
mov
jge
bound
xor
sub
ljmp
sub
dec
jnp
cld
jg
hlt
repz
cmp
popa
outsb
imul
dec
add
ljmp
daa
add
test
ud0
add
sbbb
push
push
add
imul
push
negl
mov
push
scas
mov
out
je
mov
add
pop
das
imul
test
xor
outsb
pcmpgtw
lcall
push
mov
movzwl
add
test
out
aaa
and
jne
inc
ljmp
pusha
inc
mov
adc
and
outsl
add
xlat
out
dec
arpl
push
fbstp
sbb
je
fadds
movsb
push
sub
fstl
aaa
push
push
sub
mov
push
xor
dec
bound
xlat
push
shrl
movsb
add
add
dec
inc
arpl
or
rclb
push
jp
jle
pop
outsb
int
ret
out
leave
mov
pop
in
cmp
dec
sti
incb
cld
jle
inc
outsl
rolb
lahf
cmpsl
cmp
mov
fs
testl
sub
orl
es
mov
fsubrp
rorl
pop
sarl
in
jnp
data16
jle
stc
cmpsl
push
adc
es
sub
outsl
add
ds
stc
jge,pn
out
cli
shrb
in
loopne
sti
pop
dec
sqrtps
sub
aaa
dec
popw
mov
scas
mov
fsubs
sub
push
sub
dec
in
push
mov
xchg
idivb
fldenv
sub
mov
outsb
push
mov
gs
cmp
out
js
ss
jbe
aaa
icebp
jns
cmpsl
dec
imul
jns
xor
jns
in
jnp
inc
push
rolb
dec
stos
gs
xchg
loop
push
aaa
mov
push
cld
cmp
or
dec
dec
push
gs
mov
xchg
es
pop
int
push
fimull
dec
pop
cmp
fidivrs
mov
fldl
mov
mov
sarl
dec
xlat
mov
mov
pop
push
inc
cs
push
icebp
test
sub
cmp
jbe
js
push
xchg
mov
jmp
out
lds
subb
fdivp
push
adc
dec
pop
jns
inc
inc
xchg
fnstcw
out
inc
jbe
fnstsw
push
sbb
int
jns
pushf
mov
out
adc
cmp
cli
test
push
out
hlt
xor
pop
sahf
mov
push
or
sahf
cmpsl
stc
addr16
aam
inc
jno
push
cmpsl
stc
cmp
mov
lahf
out
sahf
dec
outsl
xchg
mov
out
xor
push
inc
jmp
repz
ds
adcb
sar
sbb
adc
popf
out
mov
lock
or
dec
sbb
scas
sub
fidivrs
mov
xor
outsl
mov
adc
push
mov
xor
adc
mov
bound
mov
scas
int
mov
mov
loop
and
push
pop
mov
or
bound
je
cmpsb
mov
bound
push
and
pop
sbb
enter
cmp
adc
or
adc
stc
pusha
or
add
inc
pop
enter
stos
ret
aaa
mov
subl
aad
mov
fistpll
push
fcom
mul
push
les
out
mov
mov
emms
imul
popa
nop
outsl
push
push
js
xor
pushf
popf
adc
insl
gs
cmp
dec
popf
xor
lea
push
or
sarb
xchg
push
pusha
lods
outsl
pop
aas
mov
imul
jo
jne
sub
out
insb
nop
lock
push
dec
mov
sub
jb
popa
je
and
fildl
dec
and
clc
mov
pop
inc
mov
js
popw
sysret
push
ficoml
cs
xchg
mov
mov
fmull
daa
jb
push
add
xor
call
push
sub
sti
mov
lods
pop
mov
inc
pop
pop
movsb
adc
cs
lahf
loop
mov
aas
test
cmp
scas
add
lahf
xlat
jo
push
jo
push
or
xchg
mov
mov
inc
add
outsb
insl
xchg
jmp
inc
loopw
xchg
dec
xchg
or
cli
push
sbb
jp
popa
jo
in
xchg
pop
bound
aaa
adcb
or
or
sbb
addr16
push
or
inc
inc
add
xchg
xor
xor
xor
lods
je
faddl
mov
shl
xor
cmp
push
bound
mov
dec
inc
cmp
dec
fs
jo
xor
inc
or
mov
outsl
imul
jnp
mov
add
pop
mov
dec
add
dec
cmp
xor
mov
cmp
adc
mov
add
add
pusha
xlat
lret
xor
sub
push
call
dec
testb
shll
aas
or
lods
push
add
add
or
sub
add
xchg
gs
movsl
mov
inc
orl
xor
fists
int3
movb
cmpsb
aaa
and
pop
push
jne
add
xchg
mov
push
stos
inc
pop
jae
adc
inc
add
dec
lods
or
cmp
mov
xchg
paddq
pop
inc
sti
divl
stos
xchg
mov
rolb
or
adc
sarl
ljmp
aas
data16
pusha
xchg
pcmpeqd
sbb
loope
scas
outsl
aaa
imul
mov
sbb
das
xchg
mov
mov
inc
das
outsl
je
daa
popa
pop
popa
mov
insl
or
das
pop
mov
add
push
pop
dec
mov
mov
inc
add
push
xchg
int3
add
inc
sub
add
ret
pop
mov
ret
stos
pop
insb
fldl
sbb
xlat
scas
out
jbe
stos
loopne
mov
push
daa
sub
add
add
scas
dec
cmp
dec
repnz
ja
push
xor
push
inc
iret
sbb
aaa
add
pop
cmp
ret
inc
push
inc
jg
cmp
jae
or
push
or
out
inc
cmp
pop
out
mov
ret
pop
sbb
pop
jmp
inc
mov
sarb
inc
aaa
xchg
dec
js
cmc
and
push
pop
cli
inc
push
dec
insl
mov
lahf
lock
mov
push
jbe
scas
xchg
pop
dec
add
cmpsl
in
insl
sub
push
out
ret
pop
sbb
mov
ret
testl
pop
jno
xchg
push
push
cmp
inc
aas
subl
loopne
lret
lcall
sub
jmp
nop
stos
or
jmp
popa
insl
jo
je
add
addr16
sti
sbb
aas
jo
jae
daa
pop
jno
outsl
xor
xchg
sbb
fadds
jg
adc
jns
je
xchg
push
jne
or
scas
adc
inc
test
pop
dec
out
or
add
mov
data16
mov
sbb
scas
inc
pusha
rcrl
mov
icebp
into
and
punpckhwd
arpl
dec
outsb
add
test
gs
data16
testl
movsb
andl
or
mov
mov
testl
ficompl
pop
or
test
ucomiss
dec
loope
push
cmp
dec
sub
mov
ret
sub
test
test
or
xor
mov
jmp
dec
pop
jo
xor
addb
pop
pop
push
stos
addr16
mov
rcrl
sub
adcb
or
mov
jns
jb
add
dec
iret
lea
lock
push
ret
add
movsl
mov
xlat
mov
out
inc
outsl
outsb
xchg
fnstcw
fisttpl
js
aaa
inc
insb
sub
stos
rorl
daa
pop
and
jmp
decl
jb
out
aam
push
cmc
push
loope
cs
pop
aas
cmp
std
inc
push
dec
inc
dec
push
xchg
add
add
loopne
cmp
fiadds
jg
sbb
fstp
ret
jle
add
add
stos
sbbl
and
cmpsb
out
andl
js
pop
ja
mov
and
ds
das
sbb
or
lahf
or
daa
daa
daa
push
and
dec
push
inc
push
pop
inc
inc
inc
push
inc
pop
and
or
mov
std
es
js
insb
cwtl
aas
add
pop
ficompl
push
and
pop
fildl
les
mov
add
xor
ss
pop
gs
out
adc
push
popw
add
mov
push
add
idivb
add
push
movsl
sbb
inc
and
pop
dec
pop
fisttpl
and
data16
push
pop
mov
pop
push
adc
inc
push
jb
out
mov
outsb
xchg
or
or
add
fwait
add
mov
in
rolb
rcr
test
push
loopne
iret
push
aas
and
jo
adc
js
ds
mov
inc
pop
dec
pushf
idivb
int3
or
pop
cmpsb
fbstp
jbe
pop
inc
cmpsb
add
push
mov
mov
mov
ja
arpl
cmp
push
out
push
mov
incl
fsub
or
mov
cld
fcmovu
xchg
out
fcompl
repnz
insl
adc
and
jl
adc
mov
or
and
adc
adc
loope
arpl
popa
adc
fistpl
out
outsl
and
and
arpl
int3
push
sbb
insb
jns
cmp
jno
xor
xchg
and
mov
mov
popa
stos
or
in
xchg
xor
out
add
jg
and
xor
and
push
js
aam
jle
mov
inc
dec
inc
out
pusha
mov
int3
and
push
push
jle
insl
add
outsl
fs
gs
jo
jns
lods
pop
in
mov
adc
dec
add
insl
jne
rcrb
push
or
loop
add
or
addr16
insb
lret
xchg
cmp
and
insl
inc
xor
pop
gs
inc
insb
daa
mov
push
scas
jbe
faddp
xlat
shrb
imul
inc
test
ja
pusha
mov
outsl
jo
data16
insb
in
gs
sahf
dec
sub
iret
mov
or
xchg
inc
dec
out
out
mulb
dec
xchg
dec
inc
xadd
sbb
inc
sysexit
mov
enter
inc
movswl
fcomi
mov
ja
cmp
lahf
nop
jo
maxps
imul
and
mov
mov
or
dec
xchg
imul
push
push
or
inc
insb
aaa
daa
sbb
mov
fisttpl
push
movsb
daa
ds
cmp
addr16
cmp
push
lock
sbb
inc
inc
add
and
ror
mov
xorl
daa
in
dec
enter
push
xchg
push
or
daa
push
out
movsl
mov
and
shl
movsb
xchg
in
cld
add
stos
loopne
push
out
jnp
arpl
loope
dec
fs
lods
jbe
daa
xchg
je
mov
fstpt
imul
push
in
push
sub
nop
dec
js
xor
sbb
jg
int3
inc
les
add
out
out
leave
jnp
insl
fsubs
aam
dec
pop
or
fstp
add
ja
push
pop
stos
cmp
pop
outsl
jl
cmp
and
ja
pop
add
ss
mul
xchg
xchg
jl
in
cmpsl
fdivs
xor
inc
dec
adc
and
pop
pop
mov
sub
inc
addr16
jnp
ret
out
pop
movsb
das
insb
push
js
and
mulb
pop
repnz
enter
mov
pop
les
cmp
add
adc
nop
lock
sbb
sub
movsl
push
pop
add
pop
int
xchg
outsl
pushl
cmpsl
movsl
ds
jl
sahf
or
es
lock
jl
test
jbe
and
cmpxchg
enter
sahf
cmpsl
cmpsb
push
test
add
outsl
jnp
aad
add
cmpsb
push
les
aam
aad
popf
out
cmpsl
pop
dec
add
mov
add
and
mov
lahf
xor
out
mov
cmpsl
ljmp
shrb
scas
mov
pop
and
dec
dec
repnz
rorb
add
mov
or
push
and
and
or
nop
test
inc
test
mov
pop
add
or
pop
in
sbb
mov
repz
enter
add
insl
in
pop
dec
in
cld
cs
aas
jl
orb
xor
push
push
test
outsb
adc
sbbb
addr16
push
cwtl
daa
dec
repz
insl
andl
enter
stos
xchg
in
mov
enter
call
addr16
mov
enter
sahf
mov
daa
call
mull
notl
mull
fs
stos
mov
mov
push
mov
nop
jne
repnz
dec
loopne
pop
stos
inc
cs
mov
enter
stos
inc
push
push
lahf
outsl
insl
sbbl
sahf
lods
adcb
lods
sbb
sahf
or
loopne
mov
rolb
mov
xor
inc
lods
lahf
int3
push
fisttpl
ja
xor
adcb
jo
mov
add
push
in
lock
aad
dec
push
add
pop
test
inc
testb
mov
test
and
mov
mov
js
fs
fisttpll
in
nop
push
cs
loopne
fsubs
mov
and
mull
and
xor
cmpb
push
jg
sub
and
and
pop
enter
fs
repnz
pop
and
fs
cwtl
or
sbb
xor
insb
mov
cmpsl
cwtl
jg
pop
bnd
les
test
nop
or
adc
out
lock
add
lock
ret
lcall
lods
mov
in
dec
add
push
sub
lods
stos
das
ja
sahf
pop
repnz
enter
inc
iret
test
jo
pop
enter
enter
jb
test
clc
dec
enter
mov
mov
ds
jb
clc
enter
nop
addr16
pop
push
add
lock
mov
ljmp
mov
mov
stos
jne
add
dec
mov
nop
add
addr16
cmpsl
in
jge
repnz
push
fs
or
xor
ds
bnd
mov
fwait
lcall
repnz
mov
enter
addr16
clc
pop
in
mov
dec
sahf
pop
pop
adc
out
nop
add
inc
mov
pushf
push
mov
out
add
mov
pop
loopne
push
jl
lock
aas
cmpsl
in
and
loopne
xor
insb
stos
clc
es
push
pop
mov
xchg
cmpsl
in
push
jg
rorb
cwtl
lods
mov
add
mov
lcall
sahf
cld
mov
pop
in
mov
add
iret
cmp
lahf
outsl
insl
orl
lahf
push
push
mov
or
out
cmp
lods
jg
cwtl
sarb
lahf
cwtl
inc
shlb
and
xor
and
les
rolb
jg
lock
sub
test
pop
lods
ja
sbb
iret
aam
mov
push
add
pop
enter
inc
sbb
inc
sub
imul
add
and
push
faddl
insl
sbbl
inc
xchg
mov
or
and
mov
push
xor
mov
jnp
dec
call
lahf
pop
pop
adc
ja
or
inc
adc
sub
adc
aam
jg
inc
mov
add
lahf
dec
inc
jl
pop
pop
ja
js
mov
fs
js
enter
push
enter
test
fiaddl
test
or
clc
pop
jbe
inc
or
sbb
das
and
add
fadds
push
mov
or
bound
jbe
ds
addr16
mov
push
jmp
pop
iret
push
add
and
insl
inc
xor
ja
xor
decl
mov
inc
mov
rep
sub
daa
and
frstor
lahf
mov
in
xchg
lahf
fsub
hlt
or
add
fmull
fnstcw
mov
inc
push
push
lahf
dec
lahf
pop
repnz
ja
xor
movsb
xor
aam
pop
and
repnz
pop
aam
nop
iret
test
insl
orl
out
sahf
outsl
lahf
mov
mov
sub
addr16
insl
push
lret
sub
shrb
mov
lods
mov
cld
pushl
cmp
sti
dec
inc
mov
lahf
outsl
insl
andl
out
dec
add
pushf
push
test
sub
pop
in
add
iret
jae
call
pop
pop
and
and
cwtl
nop
xchg
adc
jbe
iret
jl
mov
dec
mov
or
inc
call
cmp
dec
xchg
push
leave
jae
lock
and
and
add
push
jo
cmp
mov
pop
sar
addr16
lods
insl
subl
or
push
rorb
leave
xchg
mov
add
ja
pop
add
imul
lahf
xchg
mov
xlat
mov
push
scas
es
dec
leave
xchg
pop
leave
inc
inc
cmp
pop
xor
sub
pop
leave
xchg
sub
mov
leave
add
mov
lret
out
push
sbb
cld
lret
sahf
cmpsl
stc
cmp
cmp
js
mov
cmp
jnp
es
push
aam
fs
sahf
out
enter
sbb
repz
sahf
test
mov
popf
out
mov
push
push
dec
repz
cmp
and
or
cmpsl
sarl
shlb
mov
es
add
pop
iret
xor
cmpsb
addr16
aad
dec
ljmp
mov
mov
int
les
test
into
xchg
cmp
inc
add
push
push
in
push
push
inc
mov
sbbl
lahf
aam
popa
and
in
in
xchg
mov
aam
inc
mov
inc
xchg
xchg
sub
lahf
sbbb
lds
xchg
popa
sub
add
inc
nop
or
mov
mov
pop
xchg
sub
jns
lds
pushf
add
lds
insb
dec
jl
fs
xchg
add
scas
add
outsl
or
insb
out
xchg
sbb
xor
mov
adc
movl
pop
sub
sub
add
dec
xchg
in
xchg
or
xor
mov
enter
cld
xchg
stos
mov
dec
and
sub
dec
orl
dec
repz
pop
add
enter
cmpsl
js
movsb
enter
mov
xchg
int3
push
or
iret
lahf
adcb
add
sub
enter
adc
sbb
out
leave
sub
adc
jg
daa
push
xor
sub
and
mov
popa
dec
outsl
add
adcl
cwtl
iret
jmpw
push
xor
push
addb
or
rorl
scas
add
je
out
sbb
add
mov
ja
cmpsl
add
enter
or
pop
les
push
aaa
shl
dec
fiaddl
into
add
sbb
pop
mov
sub
mov
inc
push
dec
daa
add
xor
ret
mov
pop
nop
rcrb
xor
push
mov
test
xchg
jg
push
adc
push
mov
das
in
push
or
dec
movsb
mov
mov
adc
scas
jo
idivb
daa
mov
ja
int3
not
mov
add
xchg
outsl
push
push
outsl
in
loopne
icebp
jg
shll
mov
call
push
in
inc
push
cmpsl
push
mov
jne
or
push
in
into
rcrb
rcl
mov
mov
pop
or
pop
shll
xor
mov
xchg
inc
push
xlat
or
decl
imulb
into
pop
jne
cltd
daa
add
or
lock
test
dec
jo
hlt
iret
inc
jo
cmp
push
in
pop
xorb
mov
pop
pushf
into
mov
testl
and
ss
dec
sahf
out
dec
add
pop
mov
fadds
fs
aaa
popa
and
add
ja
lods
movsl
mov
ja
int3
outsl
pop
leave
adc
add
ret
cmp
daa
cmp
pop
dec
xchg
mov
rcrl
imul
shll
daa
xchg
jg
mov
insb
add
xchg
sarb
mov
invd
mov
xchg
sub
sbb
add
mov
notl
jb
call
push
mov
push
ficoms
das
outsl
add
push
lods
aaa
pop
lods
enter
fcom
pop
call
orl
sbb
cld
shll
add
inc
dec
cmpsb
add
mov
test
xchg
sub
jl
mov
dec
xchg
add
add
daa
mov
out
or
daa
or
mov
dec
cmp
pop
dec
push
inc
mov
push
cwtl
negb
or
ss
outsl
insl
stos
or
je
or
aas
and
dec
shll
or
addr16
movb
sar
fcoms
shrl
lods
add
or
call
sub
or
pusha
testl
add
leave
fwait
xchg
sub
add
adc
aam
push
xor
aad
scas
add
sbb
push
sbb
xchg
ret
out
outsl
add
aad
roll
addr16
mov
enter
and
fs
or
jecxz
jb
clc
loopne
xchg
nop
push
sub
aas
arpl
or
testb
sbb
das
and
push
movsb
or
dec
mull
xor
mov
xchg
lock
inc
mov
pop
adc
xchg
movl
push
inc
xlat
aaa
outsl
insl
orl
sahf
xorb
cs
mov
sahf
or
shl
packssdw
in
ja
mov
adc
and
sub
je
mov
mov
dec
lods
jne
iret
aam
daa
insb
imul
aas
addr16
xchg
out
filds
lcall
inc
dec
push
dec
push
shlb
cmp
sarl
xor
mov
sahf
out
out
sbb
aas
mov
ret
out
ss
out
cmp
jl
ret
addr16
out
sahf
push
andb
iret
repz
popa
rcr
imul
cmpl
push
push
popa
subl
cld
idivl
int
insb
push
insl
cmp
xor
xor
out
push
outsb
xchg
mov
outsl
dec
stc
cmp
repz
jo
jns
cmpsl
and
lret
mull
jno
repz
dec
data16
jns
jb
lea
iret
repz
insb
xchg
xrelease
scas
leave
push
std
imul
push
loop
jbe
repz
out
stos
push
ja
jle
stc
cmp
mov
aaa
dec
repz
bound
dec
lcall
sub
cmp
repz
add
aaa
bound
out
fbstp
roll
cmp
iret
repz
xchg
lret
pushl
jg
out
ds
movsl
loope
xorb
and
push
jo
cmp
mov
sub
and
cmpsl
stc
pop
test
out
ds
rcrl
mov
xchg
stc
cmp
add
cmp
sarl
push
jle
fdivrs
out
sti
aaa
mov
jmp
lcall
mov
repz
lea
stc
xor
out
lock
xchg
pop
nop
stc
cmp
mov
xchg
xorb
sahf
cmpsl
add
inc
xchg
pop
push
out
iret
sarl
cmp
xor
out
cmp
addr16
xchg
jns
out
out
xchg
gs
stc
cmp
repz
cltd
repz
cmpsl
ja
pop
lcall
push
fldcw
xor
out
popf
jno
sahf
dec
mov
jns
iret
xlat
pop
lahf
push
enter
int
mov
mov
mov
mov
fists
mov
repz
inc
movsb
scas
xor
jl
cmpsb
stc
sub
push
sahf
out
jl
test
xor
iret
sarl
shl
dec
stos
pushf
cmp
out
cli
push
lods
jnp
jl
cmpsl
stc
pop
scas
pop
mov
dec
scas
imul
out
and
out
shlb
mov
sahf
cmpsl
test
mov
out
ds
test
repz
out
push
mov
push
scas
push
mov
icebp
xor
cmpsl
stc
cs
repnz
out
mov
mov
ds
repz
into
xchg
fcompl
mov
shrl
rcrb
in
cmp
pop
jns
repz
int
leave
sub
outsl
lods
and
jl
int
stc
iret
inc
rolb
mov
sahf
data16
ss
mov
dec
fnstenv
push
fcoml
loopne
add
insl
push
pusha
dec
int3
nopl
pop
xchg
test
aas
aam
mov
aas
mov
xlat
or
paddq
inc
ja
push
cld
jne
adc
xlat
or
push
enter
int3
aaa
pop
lret
insb
pop
jb
inc
push
push
push
popf
dec
pop
enter
jmp
mov
notb
fsubrs
mov
xchg
mov
fmuls
repz
jg
adcb
or
popf
dec
mov
sub
mov
xchg
inc
in
dec
movsb
inc
pop
dec
and
jbe
fbstp
and
or
daa
fisubl
mov
jbe
fldlg2
mov
hlt
das
cmpsl
nop
adc
mov
mov
sub
jo
inc
ss
adc
push
jnp
cmp
aas
mov
inc
ja
jg
leave
in
inc
jp
aas
in
cli
mov
ss
dec
inc
mov
insb
mov
sub
loopw
jmp
pop
push
daa
lods
dec
inc
pop
ficoml
out
cmpb
hlt
dec
cld
loop
orb
inc
fimull
pop
and
pop
push
push
int3
subb
push
lahf
test
mov
lahf
dec
dec
and
jecxz
or
enter
jecxz
jno
addb
aas
aaa
push
inc
push
jno
cmp
scas
pop
cs
pop
imul
push
mov
in
cmp
movsb
movsb
jno
fldenv
ds
pop
shlb
add
inc
pop
add
repnz
mov
gs
out
cs
in
jmp
push
dec
push
fs
lods
ss
add
pop
repnz
sub
push
adc
sbbl
cmpsl
mov
xor
jo
xor
fs
jno
mov
daa
add
iret
ja
jne
leave
mov
addr16
leave
in
rcr
fsub
fmull
in
or
gs
arpl
dec
aaa
push
pop
and
pop
xor
pop
js
cmp
pop
adcb
insl
insb
or
cwtl
xchg
xchg
mov
push
fistpll
and
leave
inc
xor
add
cs
leave
add
jb
inc
jb
je
xchg
pop
roll
lock
sbb
in
xor
sbb
push
frstor
iret
lods
cmp
in
add
push
pop
add
inc
xchg
popa
ja
test
scas
cwtl
and
mov
popf
in
xchg
cmp
addr16
aas
xchg
fadds
rorl
inc
divl
adc
add
jmp
pop
mov
and
push
pop
mov
jne
daa
iret
add
xor
lock
adcl
mov
inc
ja
ljmp
mov
cltd
xor
pop
push
jmp
inc
jb
jl
xchg
cmp
repz
lahf
add
pop
mov
push
xchg
leave
dec
mov
call
push
push
js
dec
into
je
imulb
add
mov
xorb
push
jns
in
inc
dec
imul
inc
push
pop
in
xchg
fistpl
rcll
daa
dec
push
or
mov
push
mov
add
push
dec
cmpsl
sub
in
xchg
je
push
aaa
cmp
iret
pusha
dec
es
jl
in
mov
cmp
dec
scas
pop
lret
repz
pop
cmp
push
add
imul
imull
ss
inc
push
add
repnz
push
add
mov
leave
leave
xchg
cltd
mov
inc
les
int3
cmpsl
aam
outsb
mov
in
fmull
in
in
pop
hlt
mov
push
lea
cmp
andl
pop
insb
sub
mov
push
add
push
push
popa
insb
push
or
cmp
repz
orb
adc
iret
or
sbb
iret
daa
pop
fmull
pmulhw
lock
dec
and
outsb
xchg
add
insl
in
ret
dec
push
lock
popa
insl
mov
jb
insl
jns
test
insl
enter
pushf
insl
cmpsl
insl
mov
and
insl
in
insl
int3
out
or
out
std
or
rorb
aaa
sbb
mov
and
push
sbb
push
incl
dec
ja
push
jl
push
mov
pop
add
mov
push
lds
lods
push
lock
aas
sbb
jb
iret
outsb
fsubrl
outsb
repnz
and
inc
mov
outsl
push
push
pop
cmpsb
js
les
sbb
aas
daa
pop
pop
data16
daa
mov
and
inc
repnz
xchg
push
daa
addb
and
mov
inc
outsb
fidivrs
fdivrs
and
pop
cmp
or
xor
subl
outsl
lods
jbe
pop
pop
xchg
outsl
push
xorl
push
push
mov
pop
cli
jns
in
das
cltd
call
repz
pop
insl
and
scas
inc
hlt
add
xor
daa
push
das
sbb
push
jo
jo
hlt
mov
jo
xchg
and
daa
dec
jo
jo
jo
ss
jne
xorl
pop
mov
inc
repnz
mov
jo
cmp
addr16
mov
sbb
pavgb
dec
js
out
jno
dec
push
and
cmc
xchg
sbb
dec
mov
lods
cmc
aam
xchg
cmp
and
sbb
pushf
in
testb
notb
shrb
fs
jb
rclb
nop
shrb
into
int
aad
mov
mov
jnp
cmp
jl
adc
sbb
and
sub
mov
jb
in
nop
cmp
imull
jne
test
in
test
add
loopne
aaa
leave
lock
push
adc
mov
aaa
fsub
pop
cmc
in
jbe
psllq
push
jae
es
push
pop
cmp
sub
outsb
add
dec
inc
lds
addr16
lahf
fmul
or
clc
sar
call
inc
insb
rcll
addr16
scas
inc
stc
inc
dec
cs
xchg
int
js
dec
outsl
mov
jae
test
stc
jae
shl
push
ja
inc
imul
je
je
scas
int
mov
addr16
je
inc
addr16
cmp
fldl
das
test
xlat
xchg
cmp
icebp
lcall
inc
pop
jno
out
cmpsl
add
add
fdivr
adc
scas
insb
push
shlb
and
pop
and
out
pusha
sub
inc
movsb
push
sbb
inc
fwait
dec
rcrb
into
repz
addr16
push
add
iret
mov
addr16
add
add
mov
xchg
cmpsb
fistps
cld
aaa
leave
aam
shrl
insb
push
add
mov
addr16
out
aaa
and
scas
or
popf
int3
daa
in
mov
cmp
push
jbe
std
mov
jmp
xchg
push
pop
mov
std
out
insl
and
ja
pop
movd
pop
hlt
mov
push
mov
ja
mov
mov
mov
push
push
xchg
or
xchg
cltd
inc
add
insb
loope
ret
mov
cwtl
add
das
or
test
sub
js
jae
push
call
add
es
xlat
mov
xchg
pop
mov
push
mov
pop
in
mov
cs
dec
sahf
and
inc
sbb
or
inc
pop
push
pop
jb
pop
xor
pusha
xchg
pop
jb
mov
jge
jp
movups
sbb
and
add
mov
in
jp
mov
inc
push
imul
inc
add
push
daa
loopne
sbbb
data16
dec
pop
adc
rcrl
in
subl
scas
dec
ja
pushf
sub
sbb
daa
cmp
dec
push
cwtl
lahf
jnp
faddl
je
test
sahf
and
dec
repz
cmp
xchg
push
add
cmp
mov
mov
pusha
sahf
xchg
rorl
test
repnz
xchg
out
add
repnz
jl
jl
out
repnz
jl
jl
push
mov
jns
push
add
mov
imul
push
mov
out
ud0
pop
leave
jae
fsubs
jge
cltd
push
push
maxps
imul
daa
iret
mov
xchg
or
out
jns
movb
jmp
in
leave
add
pop
jle
xor
out
and
push
fisubl
or
aaa
pop
push
jb
inc
mov
jbe
into
inc
mov
mov
cs
out
cwtl
out
sahf
pop
mov
push
add
jg
aaa
roll
dec
push
add
and
push
pop
data16
push
iret
mov
inc
mov
shll
xchg
inc
and
lock
or
mov
movsb
lcall
inc
clc
out
das
or
or
enter
ds
adc
es
cmp
push
daa
jmp
rcrl
push
arpl
jmp
cmp
mov
push
cmpsl
mov
push
lcall
pop
or
fs
push
mov
ja
ja
adcb
orl
je
dec
pop
rcpps
movsb
sub
jno
add
mov
push
fdivrs
movsb
add
sub
lea
clc
pop
or
or
push
out
inc
ja
lahf
cmpsb
js
dec
stc
xlat
pop
filds
mov
das
out
orl
sbb
adcb
push
add
popf
push
subps
jmp
ja
sbbb
push
add
mov
ja
cmpsl
push
movsb
movsb
jae
jb
jecxz
cmp
imul
pop
or
pop
sahf
xchg
out
mov
and
pop
clc
fistl
pusha
iret
inc
jg
iret
rcrl
push
mov
push
xchg
cmp
jae
lahf
das
stos
or
ffreep
das
lret
push
or
loope
jae
cmp
in
notl
add
mov
adc
test
aaa
xchg
jl
or
or
mov
addr16
mov
mov
or
mov
stos
test
cmp
mov
test
cmp
mov
xor
add
add
inc
dec
test
inc
sarl
je
mov
ja
or
nop
dec
xor
or
and
add
daa
or
daa
adc
add
sbb
inc
inc
xchg
xchg
xchg
or
mov
addr16
out
das
lcall
daa
dec
ja
cmp
or
add
xchg
xchg
leave
movsl
lods
mov
inc
shlb
data16
call
jns
xor
add
rclb
das
xchg
add
push
pusha
push
jg
pop
ja
sbbl
push
iret
repz
sahf
add
add
ret
scas
shlb
fisubrs
xchg
out
nop
cmc
xlat
std
xchg
das
fisubrl
jmp
mov
leave
inc
jb
mov
subps
popf
and
out
jae
xchg
ja
into
leave
xchg
mov
push
jns
ja
add
rol
add
out
in
or
shrl
adc
jb
or
add
add
adc
or
subl
ja
mov
leave
mov
scas
cmp
or
xchg
outsb
mov
jbe
xor
daa
int3
adc
mov
sub
in
add
repz
xchg
pop
lock
mov
mov
daa
pop
push
dec
sahf
ja
packuswb
xchg
ja
leave
in
and
lcall
lods
add
ja
ja
pop
jb
fninit
inc
adc
pop
mov
cmp
mov
iret
sub
iret
xor
add
cmpsl
xchg
pop
mov
ret
mov
je
jl
jns
xlat
fisttpll
xchg
mov
add
out
pushf
movsb
or
or
out
or
sahf
out
jns
in
hlt
adc
jns
bnd
add
unpckhps
or
ret
xchg
out
adc
mov
leave
lock
push
aas
mov
aaa
orb
daa
iret
add
push
fcoml
pop
arpl
rclb
pushl
lea
inc
fwait
mov
mov
add
dec
cmp
and
add
adc
scas
mov
scas
pop
sbb
sub
push
mov
pop
and
in
orb
mov
pushf
lods
lgs
nop
pop
jo
xchg
fsub
pop
call
ja
xchg
les
sbb
sbb
add
and
movntps
cmp
repnz
dec
or
inc
or
cmp
and
das
or
repnz
cmovle
inc
leave
shrl
mov
fmuls
aas
adc
cmp
add
pop
or
dec
inc
or
push
test
adc
pushf
mov
enter
xlat
outsl
adc
daa
cmp
pop
mov
leave
or
iret
inc
mov
sti
cld
jp
sbb
pop
out
sub
repnz
nop
push
nop
jb
push
repnz
inc
mov
movsb
nop
mov
ret
nop
daa
daa
daa
and
out
decb
repz
or
or
mov
in
fidivs
xchg
or
je
push
add
add
dec
fstpl
sbb
mov
xchg
adc
fistps
and
xchg
pushf
adc
in
and
popf
and
push
mov
data16
in
mov
cwtl
pop
xlat
decl
mull
lahf
xchg
fildl
call
add
aas
xchg
lahf
cmp
cmp
pop
xchg
pop
lds
push
insl
xchg
xchg
xchg
bound
dec
outsb
daa
cmpsb
xsaveopt
iret
leave
mov
pop
mov
scas
mov
pop
push
daa
and
or
sub
xor
mov
mov
in
pop
push
xchg
pop
bndstx
xchg
mov
das
or
ltr
sysret
dec
sahf
pop
pop
mov
xchg
decb
faddl
ljmp
addr16
lahf
xchg
movl
sbb
iret
add
hlt
inc
in
add
pusha
mov
sbb
arpl
stos
jno
sti
fbstp
xchg
pop
outsl
inc
sbb
test
mov
xchg
arpl
xchg
daa
add
mov
in
xchg
stos
btr
mov
mov
pand
or
stc
fdivrp
sbb
xchg
in
int3
outsl
xchg
xchg
mov
loope
xchg
stos
inc
fisttps
pop
sbb
fmuls
scas
inc
insb
mov
outsb
scas
hlt
lahf
push
xchg
enter
pusha
imul
xchg
pushf
xchg
pop
loopne
pop
push
sub
es
mov
out
insb
push
mov
dec
mov
lcall
testl
or
movsb
in
push
jg
leave
in
repnz
daa
mov
add
pop
inc
sqrtps
scas
sbb
cmpsl
pop
pop
pop
leave
sub
scas
imul
inc
loopne
ja
mov
push
daa
nop
movsb
jae
cmpb
push
inc
enter
rcll
pop
mov
xchg
inc
out
insl
aaa
aas
fbld
aad
sbb
xchg
pushf
dec
mov
dec
and
push
pop
and
pushf
pop
test
mov
out
jg
xchg
add
dec
dec
ret
lret
xchg
jmp
shll
add
in
inc
ja
cwtl
sahf
pop
mov
dec
pop
popa
cwtl
mov
cwtl
subb
push
mov
cmp
add
xlat
mov
daa
ja
lock
and
cltd
pop
in
jns
bndstx
and
mov
cltd
ja
cmpsl
outsl
push
sub
xlat
and
jae
mov
lcall
leave
mov
ja
scas
into
jle
mov
push
ja
setp
fimull
mov
xchg
cmp
xchg
and
cltd
dec
addl
addr16
in
jns
add
mov
ror
xlat
out
fstpt
add
stc
cmp
pushf
in
xchg
or
fwait
insl
daa
iret
sbb
push
or
and
sahf
cmp
rorl
push
das
fwait
inc
leave
out
movhlps
and
jbe
lret
movsb
fwait
inc
push
xlat
jns
in
mov
nop
cwtl
in
cmp
das
psrlw
pop
xor
fisttps
pushf
hlt
out
mov
cmp
pushf
pushf
ja
xchg
daa
out
popf
pop
dec
popa
push
add
out
push
add
push
xchg
xchg
push
pop
mov
jns
push
mov
es
iret
or
and
push
fsubs
addr16
mov
xor
xchg
pushf
mov
popfw
in
mov
cltd
inc
rcr
imul
cmp
add
addr16
sahf
pop
cmc
add
in
mov
push
add
push
jno
xchg
dec
call
mov
outsb
xor
fistl
mov
addl
test
push
push
lcall
iret
pop
lahf
push
add
aas
into
cmp
cmpsl
push
mov
in
jbe
cmp
add
cmp
pop
cmpsl
bound
xchg
fildl
test
xchg
xchg
popf
xchg
sbb
rclb
jecxz
mov
outsb
iret
jmp
repz
sti
das
aaa
rclb
mov
push
cmp
push
adc
mov
outsl
pop
insl
enter
dec
mov
int
pop
pop
mov
xor
xchg
outsb
daa
daa
adc
leave
inc
repnz
in
fcmovne
paddq
fsub
fcomi
and
cmovle
jb
pop
daa
mov
cmp
adc
dec
outsl
push
mov
punpckldq
push
adcl
or
daa
adc
pusha
sub
pop
stos
jmp
das
add
call
dec
ss
sub
in
and
imul
ja
push
sahf
pop
xor
inc
ja
andl
jb
push
or
mov
jae
daa
xlat
aaa
sbb
ja
addr16
mov
aas
mov
leave
or
into
jmp
xchg
mov
add
cmp
xchg
add
push
jns
sahf
imull
fiadds
pop
or
xlat
lahf
lea
xchg
add
add
ja
aas
cmp
xchg
fcmovnu
pmulhw
xchg
in
jnp
adc
mul
in
xor
movsb
cmpsl
push
repz
cs
test
mov
leave
leave
leave
leave
jno
cmpsb
mov
pop
fsubrs
mov
hlt
movsb
and
aas
or
aad
movsl
scas
and
dec
xor
movsl
aaa
push
movsl
xor
push
ja
ja
popf
pushf
pop
add
out
das
movq
in
cmpb
cmp
cmp
out
repnz
push
or
cmp
stc
or
pop
and
sahf
xchg
out
cmp
inc
push
adc
fistps
stc
mov
push
adc
repnz
pop
dec
mov
fldl
push
shufps
cmp
cmpsb
adc
das
ja
cmpsb
xchg
leave
jmp
cmpsl
xchg
sub
sub
sbb
cmpsl
xlat
sub
xchg
dec
cmpsl
in
test
push
pushl
jb
mov
add
jge
pop
pop
xchg
push
test
daa
daa
in
clc
das
test
jbe
test
cmp
xlat
aas
sbb
test
cs
and
cmpsl
outsb
pop
jb
mov
pop
int3
sahf
xchg
pop
fdivrl
loop
inc
test
test
sbb
test
xchg
inc
sub
xor
ja
push
in
mov
test
push
add
out
outsb
fisttpll
add
pop
lret
or
or
or
aaa
bnd
jmp
repz
or
xchg
iret
enter
sub
enter
push
test
sbb
jb
jb
subb
sbb
iret
push
stos
or
jo
rcll
push
and
push
add
leave
jnp
ucomiss
add
cmp
adc
dec
dec
dec
cmp
inc
outsl
adc
lahf
inc
xor
add
daa
push
prefetchnta
mov
cmp
in
scas
mov
ret
push
iret
lret
stos
inc
mov
insb
decl
mov
icebp
and
adc
fildll
pop
mov
xor
stos
mov
xor
stos
sysret
sub
outsb
daa
mov
mov
je
jl
test
popf
pushf
mov
mov
xor
daa
adc
repnz
daa
cmp
fxsave
xor
lods
addr16
out
pushf
fmull
sub
cltd
sbb
inc
lods
dec
lods
xlat
or
rorb
ljmp
mov
inc
insl
addr16
xor
fwait
loope
out
pop
stc
lods
cmp
repz
add
add
jmp
pop
cmp
or
iret
repz
push
or
iret
jae
addr16
jge
repz
xrelease
xchg
adc
adc
cmp
repz
lret
push
repz
repz
jmp
mul
jns
iret
sbb
scas
sbb
in
in
sbb
push
adc
adc
adc
in
in
adc
push
or
sub
ss
lock
aas
add
scas
adc
add
push
inc
inc
pusha
enter
xlat
iret
cmp
sbb
push
daa
aam
ja
push
xchg
jp
lahf
mov
push
notl
push
rorb
aas
daa
mov
das
pop
cmp
jmp
push
daa
push
adc
scas
scas
mov
in
pop
mov
pop
ja
mov
and
add
out
sub
add
out
push
into
inc
scas
or
cmpxchg
addr16
cmp
addr16
mov
adc
jo
pop
iret
out
pop
leave
and
xchg
or
in
mov
ja
xchg
xchg
mov
dec
out
data16
xchg
pop
add
adc
jg
shrl
pusha
ja
in
jbe
mov
out
ret
mov
mov
sbb
xchg
cmc
std
mov
add
jns
ja
push
add
sahf
neg
push
pop
sub
repz
in
inc
push
or
or
push
push
pop
dec
ss
sar
adc
cmp
mov
cmp
mov
cmp
rcr
fisttpl
jecxz
shrl
iret
jmp
sysret
repz
pop
js
sti
out
add
inc
into
push
and
mov
mov
dec
outsb
and
cmovbe
jnp
ficoms
iret
divps
fcmovne
leave
inc
orl
pop
xchg
fcmovne
inc
jae
xchg
int3
les
push
enter
or
and
out
adc
adc
mov
pop
leave
jae
pcmpgtw
mov
outsb
out
mov
pushf
fucomp
cmp
arpl
add
in
inc
push
adc
mov
pop
inc
icebp
xchg
sbb
movl
pop
or
mov
push
mov
inc
cmp
pop
data16
lods
ss
scas
cmp
cltd
out
pop
jns
movsb
sbb
mov
add
out
ret
pop
add
lret
rorl
repnz
pop
pavgw
jmp
mov
jae
sbb
push
mov
sub
mov
cmp
leave
and
xchg
das
mov
xchg
mov
pop
adc
cmpsl
aam
filds
xlat
pop
ja
ljmp
sbb
mov
or
jg
adc
push
cld
xchg
fs
incb
push
ret
mov
mov
push
cmovle
daa
mov
es
xlat
movd
daa
daa
daa
orb
repnz
test
fnstenv
loope
jmp
dec
adc
mov
adc
sbb
iret
or
inc
loope
mov
scas
push
lods
outsb
sbb
pop
pop
mov
pop
syscall
jns
sub
invd
mov
es
cmp
stc
int3
lock
movzwl
in
insl
and
push
add
mov
mov
mov
mov
and
xchg
je
mov
pop
cmpsl
bound
mov
inc
test
sahf
mov
ja
ja
in
loop
sti
ja
sub
mov
in
mov
inc
sahf
ja
xchg
xchg
sahf
push
add
outsl
scas
xchg
pusha
inc
fcompl
daa
loope
popf
out
jmp
stc
mov
invlpg
pop
jae
jb
add
add
repz
adc
jns
mov
adc
leave
xor
push
xor
jbe
test
add
insb
inc
xchg
andb
mov
pop
push
mov
mov
pop
aaa
sub
mov
fadds
or
aam
cmp
or
inc
jmp
cltd
in
add
out
es
ucomiss
jns
add
das
xchg
mov
sahf
pop
dec
pop
scas
mov
pushl
cs
pop
fsub
pop
push
pop
movd
jns
out
adc
jle
xchg
pushf
je
xchg
adc
mov
pop
into
fidivrs
in
sbb
nopl
out
je
out
negb
decb
and
out
sbb
push
mov
push
fucom
jns
mov
movaps
out
dec
sub
sub
jns
out
dec
sub
sub
pop
cs
outsb
ss
test
jbe
jle
lahf
xor
push
mov
cmpsl
pop
ret
mov
sub
or
push
push
pop
cmp
jmp
int3
mov
aam
test
lahf
cld
mov
pop
add
push
dec
roll
dec
push
in
movl
mov
out
mov
fmull
mov
mov
pushf
cmpsb
mov
add
add
sub
xchg
pop
inc
pop
cld
lahf
ljmp
jnp
addb
das
clc
push
pop
pusha
repnz
outsl
sahf
outsb
repnz
add
fucomi
in
or
cmp
inc
dec
iret
repz
dec
rsqrtps
iret
repz
mov
xchg
adc
cmp
repz
cmp
adc
adc
iret
repz
loope
jmp
stc
cmp
repz
sbb
mov
sbb
sbb
jns
and
and
out
inc
and
pop
out
sahf
out
fs
jns
jnp
mov
xchg
sub
out
pushf
sub
jbe
mov
jg
lahf
pop
fsubrl
fstpt
stc
pop
add
cmp
add
or
and
iret
repz
sbb
and
sub
cmp
repz
sbb
inc
repz
repz
push
iret
repz
pop
adc
das
mov
cmp
or
rclb
dec
dec
xchg
test
mov
xchg
xchg
xchg
rol
rcrl
jns
pop
push
or
pop
jns
rorl
dec
or
jns
out
or
sbb
adc
sarl
jns
adc
jns
out
adc
out
sahf
pop
lds
iret
sbb
jns
out
sbb
sbb
sbb
enter
sbb
push
pop
mov
out
and
sub
outsl
dec
inc
ret
ret
ret
ret
addr16
imul
jbe
sbb
pop
iret
repz
push
xchg
adc
js
ret
into
lods
ret
cmp
push
adc
repz
push
aam
fdiv
cmp
repz
or
or
cmp
hlt
or
or
or
out
ficomps
adc
add
leave
rorl
cmp
lret
xchg
rcr
inc
das
dec
ret
ja
frstor
dec
jge
test
add
mov
push
loopne
jns
xchg
push
add
iret
mov
mov
decl
jns
lods
movsb
lock
in
cltd
test
es
pinsrw
pop
push
add
add
iret
cmp
inc
push
add
dec
outsb
addps
push
pushf
js
mov
setnp
cmpsb
mov
mov
out
adc
daa
daa
daa
fsub
in
hlt
sahf
xchg
daa
daa
cld
add
or
mov
push
and
cltd
loop
mov
in
loop
lds
arpl
pslld
mov
pop
jnp
add
jae
pop
popf
movsl
shrd
cmpsl
fistl
nopl
or
repnz
push
int
dec
mov
push
adc
in
pmaddwd
adcl
push
outsb
leave
sub
loopne
mov
outsl
mov
mov
xchg
fstp
push
cmp
push
ja
rclb
addr16
cmp
leave
pushf
push
add
out
mov
out
daa
iret
pop
loop
push
or
repnz
scas
or
push
push
or
sbb
mov
pmaxsw
sahf
out
mov
pop
pop
adc
out
jns
jno
push
xchg
in
dec
xchg
sbb
sahf
sbb
dec
sahf
out
push
fucomip
and
loope
in
sarb
popw
push
mov
aaa
pushf
pushf
pushf
pushf
inc
dec
pop
arpl
enter
push
call
enter
mov
pop
dec
popa
and
iret
repz
push
int
push
push
loope
sahf
out
cmp
or
fisttpl
pop
leave
scas
movhps
daa
das
aaa
jae
jns
aas
adc
pop
push
repnz
iret
adc
leave
repz
ja
jg
loope
mov
ds
in
pop
enter
pmulhuw
in
int3
aam
out
lock
out
idiv
leave
aas
push
lret
and
lret
das
and
sbb
push
cmc
cmp
lret
add
push
pop
notb
jae
pop
inc
pop
sar
inc
push
orl
iret
jae
shrl
push
pop
daa
ror
mov
mov
das
ljmp
inc
pop
add
lret
or
aaa
push
fsubrs
cwtl
push
mov
popf
popa
aas
fldl
iret
xor
add
push
pop
sbb
sahf
pop
pop
or
or
fucom
jns
dec
prefetch
pop
fucomi
jbe
addr16
jb
jge
mov
xchg
setle
adc
adc
jns
ror
fnstcw
fwait
call
push
sbb
enter
sahf
out
sbb
cmp
push
cld
pop
int
adc
jbe
popf
popf
jg
int
sub
mov
fdivl
in
icebp
paddb
jg
sub
iret
cmp
push
sub
push
sub
cmp
cs
dec
xor
repz
pop
xor
jns
fcomip
jne
into
or
sahf
ss
jns
out
aaa
mov
jnp
cmp
cmp
cmp
cmp
jns
cmp
fildl
cwtl
scas
mov
sahf
scas
inc
mov
xchg
out
roll
jmp
div
push
or
add
outsl
push
add
je
stc
jle
into
pop
mov
push
or
aaa
pop
inc
ja
and
nop
daa
adc
dec
into
mov
pop
push
dec
imul
jbe
jns
out
addl
pop
cltd
enter
movsb
or
daa
mov
leave
aam
loope
repz
push
out
psubq
dec
fidivrs
adc
adc
and
push
adc
adc
out
pop
pop
sbb
jp
jns
outsb
pop
xchg
fsubrp
lods
movzwl
and
int
adc
jb
jecxz
iret
lret
andl
dec
pop
daa
rolb
leave
lret
das
sarb
rcrb
mov
imul
outsb
mov
in
mov
sarl
out
or
xlat
or
out
sahf
out
in
push
clc
psllq
bndstx
adc
iret
jmp
iret
adc
unpckhps
cmp
cmp
repz
pop
push
sbb
sahf
out
push
jle
daa
iret
cmp
pop
sbb
mov
and
mov
push
shlb
outsl
loope
sahf
out
cs
in
sub
sub
ss
or
cs
pushf
mov
cmp
fbstp
fdivs
or
xchg
repz
add
adc
mov
add
test
xor
pop
ret
aas
lret
jg
and
fisttpl
or
pop
testl
or
add
and
push
sahf
adc
cs
sahf
cmpsl
pop
sysret
popa
or
cmp
ja
or
repz
or
jbe
pop
mov
ficoms
push
adc
fdivl
enter
jmp
aam
jns
aaa
push
push
sbb
sbb
jns
out
xor
sbb
sbb
push
push
pop
pop
push
loopne
in
ja
adc
aam
and
mov
pmaxub
addb
jnp
add
inc
and
ja
rorb
or
push
and
into
pop
xlat
lahf
jle
out
jmp
aam
inc
inc
inc
aam
mov
pop
cmp
mov
or
jns
out
or
pop
sahf
out
sahf
or
or
iret
repz
mov
adc
iret
repz
jns
leave
rcrl
push
fsub
outsl
inc
dec
cmc
jbe
paddw
outsl
or
adc
data16
and
sub
nop
pop
jl
cmp
data16
cmpl
jns
addr16
push
pop
popf
cmp
in
wbinvd
scas
mov
mov
mov
iret
push
xlat
loop
in
pmaddwd
ret
xchg
out
adc
add
repz
sahf
adc
sub
sbb
sbb
sbb
mov
sbb
pop
push
push
repz
repz
outsb
and
addr16
and
xlat
and
push
cmpsl
xlat
mov
mov
mov
pmullw
loopne
das
loope
adc
neg
sahf
out
pop
fmuls
push
or
pop
or
fucom
jns
sub
cmp
repz
cmovle
pop
cmp
leave
repz
jp
outsb
mov
pop
bswap
repz
fwait
sbb
cmp
sbb
sbb
popf
aam
pop
fucomip
and
pop
push
sahf
cmc
pusha
das
iret
repz
or
and
and
lea
fnstenv
cmovb
int
lock
add
jb
pushl
bound
cmp
bound
bound
cmp
fld
fstps
das
repz
mov
and
fidivl
xchg
fisttps
mov
fidivl
pop
syscall
cmp
in
in
dec
pop
pop
or
mov
syscall
or
xchg
out
jns
test
fsubrl
mov
adc
pop
sahf
cmp
call
cmp
repnz
fistl
sbb
popa
insb
repz
subb
repz
iret
sbb
std
test
iret
and
or
dec
adc
sahf
xchg
out
pop
pop
and
xor
jns
daa
dec
sub
fisttpl
pop
das
sub
cmp
in
sub
orb
repz
daa
iret
repz
xor
scas
push
ss
in
in
les
out
sahf
ja
stc
cmp
or
adc
pop
push
cld
jp
sahf
cmp
inc
stc
mov
arpl
fnstsw
out
jbe
or
push
das
pop
push
push
jae
popf
cmp
jne
orb
shrb
iret
or
fldt
bswap
adc
enter
fstpl
lock
adc
insl
mul
sti
or
das
adc
push
push
pop
mov
out
sub
xor
cmovl
dec
outsb
pop
push
outsl
push
cmp
in
in
test
nop
and
and
cmc
pop
cmpsb
and
enter
out
sahf
out
push
sub
sub
out
xchg
sub
sub
das
cmpsb
out
in
sahf
cs
mov
repz
cmp
fnsave
call
aaa
push
xor
pmulhuw
in
outsl
jp
sbb
cmp
repz
ud2
loopne
add
gs
loopne
insb
xchg
lcall
pop
fs
xchg
loopne
add
in
mov
pop
dec
push
or
fisttpll
jge
fiaddl
das
setg
out
shrl
pop
pop
xchg
add
pop
in
mov
mov
es
pop
and
inc
xlat
pop
sbb
dec
fimuls
out
incb
adc
mov
push
add
pop
es
add
push
add
or
nop
cld
xorl
lods
and
inc
movl
loopne
jg
inc
push
sbb
push
les
add
popf
shl
dec
add
mov
bound
test
rol
sbb
into
cmpsb
xchg
out
femms
pop
or
mov
or
or
fisttpll
imul
daa
jb
mov
and
jbe
inc
push
addr16
das
push
nop
outsb
mov
mov
insl
push
and
iret
repz
jb
pop
orb
or
jb
jns
or
xchg
sub
cmp
push
and
aas
xlat
pop
sbb
lds
mov
daa
cs
test
sub
cs
and
adc
aaa
cmpsl
adc
test
mov
sbb
insl
add
dec
inc
mov
movsl
and
and
add
add
mov
pop
ljmp
mov
pop
daa
inc
push
or
xor
adc
mov
add
movsb
add
scas
jl
in
cmpsb
fisttps
mov
cld
inc
jle
push
push
std
pop
test
shll
mov
inc
mov
inc
adc
cmp
mov
call
fucomip
jle
adc
push
ficompl
push
pop
fisubrl
xor
sub
fcomp
loopne
jb
jle
fs
lret
and
cmp
xor
mov
cmp
jl
insb
fs
dec
cmp
repz
cmp
sub
cmp
repz
sbb
iret
repz
adc
or
add
ficomps
in
pop
fmull
aam
int3
jns
out
sarb
sahf
out
mov
mov
lahf
fs
cmp
jns
pop
push
push
dec
inc
mov
xor
jl
cmpsl
into
adc
lock
int3
cmp
repz
mov
mov
pause
mov
out
sahf
push
sub
adc
add
add
xor
out
sarb
loope
notl
nop
mov
add
mov
pop
ret
imul
es
into
data16
lock
notb
neg
push
incl
in
adc
push
pusha
fsubs
sbb
inc
test
sub
icebp
pop
cwtl
xchg
andb
call
push
mov
push
inc
jg
lcall
pop
pop
push
lock
and
inc
sgdtl
push
adc
xor
sbb
add
adc
xchg
pop
in
mov
add
in
loope
mov
jae
or
sbbb
add
sbb
jnp
adc
rcr
and
mov
pop
fadds
lods
add
js
ljmp
sub
es
test
mov
sbb
iret
repz
or
pusha
sbb
and
repz
jns
mov
jae
jnp
adc
dec
add
jns,pn
jnp
adc
inc
and
push
or
fdivp
sahf
out
push
adc
dec
repz
adc
sub
iret
repz
and
sbb
adc
cmp
repz
and
and
jo
out
and
or
and
clc
fdivs
fwait
shr
pop
imul
daa
xor
scas
rorl
cld
push
outsl
inc
push
xchg
add
or
ret
cmp
pop
out
sahf
out
xchg
mov
rep
mov
dec
insl
add
push
pop
cmp
repz
xchg
mov
repnz
cmp
sbb
das
push
dec
insb
dec
arpl
nop
xchg
cmp
mov
cli
or
nop
psubw
or
ret
mov
adc
enter
cwtl
push
and
mov
xor
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
sar
lcall
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
incl
aad
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
call
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
incl
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
jmp
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
xchg
icebp
lcall
lds
mov
cmpsb
add
call
aaa
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fistpl
xchg
and
inc
add
int3
out
aas
xor
sti
aas
jno
or
mov
pop
fs
dec
call
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
pushl
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
jmp
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
ljmp
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
pushl
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
call
fstl
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
sub
inc
xchg
push
pop
or
mov
jecxz
pop
adc
xchg
pop
mov
jne
fldt
cmp
pushl
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
pushl
xor
adc
xor
push
scas
into
imul
jmp
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
cmp
adc
lahf
into
ror
add
cmpsb
fmuls
mov
lea
add
lds
dec
inc
out
repnz
pop
pop
add
inc
je
inc
decl
dec
inc
pop
inc
jbe
push
jns
arpl
sub
std
push
outsl
arpl
je
xchg
mov
inc
insb
imul
movb
ja
pop
sub
dec
gs
std
inc
push
dec
inc
aaa
xor
mov
pop
push
push
testl
sbb
dec
inc
jo
inc
popa
push
adc
xchg
push
test
outsl
in
mov
jnp
add
or
dec
or
ret
adc
mov
or
and
dec
mov
lcall
xor
push
stc
lods
cmp
bound
sub
dec
rol
lock
inc
dec
push
jb
inc
add
jo
jb
push
inc
sbb
inc
inc
test
or
jb
adc
xchg
add
inc
dec
je
adc
mov
dec
loopne
sub
dec
outsl
push
dec
pop
mov
push
push
xchg
rcll
insl
xchg
incl
add
insb
sbb
das
add
das
push
fs
xor
das
inc
xchg
push
xor
dec
xchg
xchg
dec
inc
dec
daa
hlt
out
fisttpl
imul
xor
inc
fdivs
jl
out
inc
inc
jns
dec
lahf
imul
push
jbe
push
push
cmp
and
jb
xchg
push
push
pop
fiaddl
imul
sbb
sub
pop
dec
push
dec
dec
lds
jae
or
dec
jbe
dec
test
push
adc
push
jecxz
int
push
mov
inc
cmpsb
dec
iret
add
adc
dec
popa
jne
add
dec
pusha
pusha
and
dec
sarl
inc
sub
ja
mov
xchg
push
mov
aad
cltd
push
js
cli
dec
sub
clc
pop
sub
pop
push
mov
addr16
add
dec
idivl
mov
push
ret
adcl
cwtl
loope
push
outsl
push
jb
addr16
bound
sub
pop
add
test
lock
push
mov
xor
push
xacquire
push
inc
arpl
test
push
cmpsl
outsl
add
or
pop
mov
mov
pop
sbb
lea
cmp
mov
data16
adc
pusha
pop
sub
xchg
lea
pop
fisttpl
ja
mov
pusha
das
ja
fildl
xchg
dec
insb
aam
push
pop
pop
rclb
or
pop
inc
jo
icebp
xor
ss
scas
std
push
gs
sub
add
xlat
adc
lahf
les
inc
inc
dec
lahf
cs
subb
leave
sub
shrl
roll
sbb
iret
add
mov
stos
or
push
lahf
mov
nop
addb
cmp
sbb
out
mov
xor
add
xchg
dec
inc
daa
inc
add
js
stos
adc
cwtl
xchg
jae
aam
xor
xchg
bound
imul
dec
push
pop
push
jne
les
add
push
adc
push
xchg
xor
rcll
outsl
addr16
push
sub
push
mov
insl
pop
repz
test
inc
sbb
out
call
dec
lahf
cmpsl
stc
cmp
push
push
sub
clc
sahf
fcomps
test
js
inc
cmp
jns
hlt
popf
faddl
cld
xlat
jae
cmp
cmp
add
inc
jo,pt
cmp
pop
push
and
decl
scas
xchg
xor
ja
popa
push
out
mov
les
hlt
push
pushl
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
ljmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
jmp
cmp
or
pop
adc
in
pusha
aad
jno
mov
inc
aam
decl
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
incl
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
lock
call
xchg
mov
mov
or
or
incl
or
adc
stos
sbb
data16
inc
fdivl
jno
incl
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
mov
or
mov
cmp
decl
xchg
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
lcall
shl
adcb
cmc
fnstenv
adc
mov
mov
bound
fisubrl
ss
call
gs
aam
pop
popa
mov
into
pop
cmp
loop
xor
dec
xlat
xchg
fadd
shll
jmp
outsb
xor
mov
ljmp
jae
add
in
add
pop
dec
or
cmp
add
daa
adc
or
mov
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
pushl
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
incl
lcall
ljmp
fildl
push
fdivl
or
test
fs
ds
or
decl
or
push
in
decl
xchg
daa
scas
add
mov
cmp
xchg
shlb
add
inc
push
imul
xorb
lcall
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
pop
aad
mov
call
xchg
shll
push
repnz
addr16
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
jmp
out
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
decl
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
call
mov
sahf
fldcw
ret
es
pushf
mov
insl
add
ss
decl
push
jmp
addr16
jb
push
mov
dec
mov
loop
sub
or
decl
aad
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
call
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
cmp
incw
lcall
adc
sahf
gs
clc
sar
imul
push
js
or
call
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
dec
xor
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
and
inc
add
push
sub
mov
or
sbb
mov
cmpl
lahf
mov
lods
daa
fiadds
or
mov
nop
mov
mov
jne
ja
add
rclb
fdivp
xchg
mov
push
insl
jnp
filds
cmp
cmpsl
jge
push
inc
fisttps
js
sub
bound
stos
push
inc
pusha
jbe
inc
inc
inc
ret
push
lcall
dec
orl
pusha
pop
call
aas
pop
inc
fistpll
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
or
fdivr
pop
sub
xor
xor
xor
pop
jnp
push
popa
push
inc
jbe
pop
test
mov
fsubs
push
dec
mov
cmpsb
mov
or
bound
lods
imul
popa
test
daa
pusha
inc
adc
imul
mov
cmp
bound
inc
aas
in
insb
ljmp
xor
dec
and
cs
sbb
fbstp
movsb
out
and
mov
insb
popa
jns
sbb
dec
insb
adc
adc
cmp
xchg
aaa
aas
inc
add
adcl
inc
add
jp
push
jae
sub
and
pop
inc
aas
sbb
mov
mov
inc
xchg
inc
sbb
and
xor
lret
jg
es
inc
inc
inc
add
ds
adc
or
int
push
mov
mov
int
push
dec
dec
lea
mov
filds
sub
mov
mov
jne
inc
sub
dec
jge
pop
aad
pop
xor
xor
or
add
addr16
push
pop
push
push
ds
pusha
jo
frstor
inc
cmp
aas
aaa
in
cli
adc
je
xor
add
or
fidivs
outsl
push
adc
mov
sub
sbb
lahf
jo
mov
xor
sbb
pop
dec
push
scas
aad
xlat
mov
movb
xchg
daa
adc
adc
jb
addr16
sub
mov
add
add
andl
mov
outsl
out
push
jno
or
xchg
mov
in
cmp
push
loop
xor
cmp
pop
adc
cmp
push
int
sarl
jo
push
or
pop
push
outsl
insb
jns
or
inc
mov
jne
lock
popa
jb
je
movsb
fiaddl
add
adc
mov
addps
jle
iret
inc
push
bound
rorl
loope
xor
insl
jno
add
shlb
xor
push
inc
sbb
push
sub
pop
inc
xchg
or
add
push
sub
add
xlat
pop
fmuls
add
jo
jmp
mov
inc
add
dec
scas
imul
push
testb
stos
dec
pop
mov
jns
aas
insl
xchg
inc
push
lds
dec
adc
pop
pop
aaa
movsb
push
sub
inc
aaa
or
les
adc
push
outsb
cwtl
or
movb
loop
cmp
daa
aas
pop
inc
add
inc
sub
addb
add
les
xor
adc
call
dec
sbb
mov
add
dec
inc
aam
push
fisubrl
add
fildl
add
add
or
pop
pop
push
or
or
decl
or
or
or
adc
adc
push
adc
xlat
decb
les
or
pop
sbb
adc
adc
adc
mov
shrl
add
or
adc
pop
adc
in
pop
lock
inc
add
or
xchg
add
add
adc
add
les
add
adc
pop
in
mov
push
cmpsb
pusha
adc
imul
ds
incl
and
inc
push
adc
pop
and
xor
inc
mov
adc
push
shl
and
bound
js
xchg
jo
or
and
sbb
imul
cmpsl
or
xchg
inc
inc
xchg
or
test
sbb
push
adc
or
push
scas
pushf
into
add
cmp
or
or
scas
cmp
adc
mov
adc
pop
popa
jno
and
adc
mov
or
xor
adc
loope
icebp
cwtl
and
mov
mov
adcb
sub
or
js
sbb
adc
std
or
mov
lds
cld
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
jmp
mov
bound
pop
lahf
mov
movsl
jecxz
cli
pop
mov
inc
mov
push
stc
or
xchg
jg
or
insb
sub
addr16
jmp
out
or
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
sbb
cmp
fisubrl
in
mov
orb
int3
lcall
mov
rolb
js
pop
mov
popl
movb
xchg
sbb
inc
dec
adc
adc
mov
xor
lods
scas
xchg
test
aam
and
sbb
call
gs
roll
fwait
movsb
jmp
push
lret
push
out
in
and
jg
divb
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
decl
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
std
iret
xor
testb
push
mov
mov
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
call
clc
xchg
jmp
sbb
add
mov
mov
pop
jb
mov
or
push
mov
sub
lock
pop
mov
jl
rorl
adc
mov
push
jg
hlt
push
add
stc
loope
mov
sar
andl
push
in
idivb
icebp
testb
mov
pushl
scas
fadds
in
sub
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
mov
mov
dec
adc
push
lock
lods
jp
div
decl
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
jmp
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
loope
cmpsl
aaa
or
icebp
aas
std
cli
push
push
push
div
sub
inc
scas
inc
mov
jg
incl
mov
mov
scas
call
les
jmp
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
popl
or
mov
cmp
das
jmp
xchg
pop
clc
pop
hlt
lret
push
aad
add
lea
jg
gs
std
xorb
decl
imul
outsl
adc
ret
das
pop
pop
pop
shlb
stos
jg
out
sarb
sbbl
jno
or
sarb
std
pop
inc
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
dec
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
pushl
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
and
fadd
or
mov
nop
enter
add
cld
call
js
cmp
call
outsl
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
add
fcmovu
ds
cmpsl
scas
popa
in
pop
or
pushl
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
call
xchg
and
push
push
jo
pusha
imul
add
mov
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
das
xchg
sbb
jae
shrb
shlb
out
aas
stc
add
pushl
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
cld
xor
cmp
fmull
enter
iret
in
lret
mov
pop
mov
sub
fldt
pop
mov
dec
incb
fisubrl
aas
mov
or
cld
pop
sti
add
pop
ret
cmpsb
push
pop
jg
add
out
pop
jg
mov
aad
test
mov
mov
fistpll
aas
iret
push
jbe
push
sbb
stos
icebp
pop
incb
pop
out
dec
jno
adc
push
inc
jecxz
sbb
sarl
or
jg
adc
loopne
and
clc
xorl
mov
imul
dec
cmp
sti
push
push
in
aas
mov
fsubrl
shlb
loope
lock
and
pop
imul
add
push
sbb
sar
add
push
and
mov
adc
inc
aas
push
rcrl
inc
pop
rolb
pop
inc
jb
fistpl
adc
call
ljmp
nop
mov
inc
sti
arpl
daa
std
or
sbb
pushl
ret
incb
popf
push
loop
sbb
or
imul
xor
dec
xor
pop
inc
pop
push
fistps
lds
fidivrl
jmp
mov
stos
pop
add
dec
mov
mov
jecxz
sub
jge
xor
lahf
les
sbb
sbb
cld
addl
jg
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
mov
subb
jle
jg
jmp
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
call
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
add
lcall
out
lcall
sar
push
icebp
push
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
call
push
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
pushl
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
fistps
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
test
sbb
cwtl
inc
mov
insb
test
aas
repz
sbb
lock
in
jmp
cs
push
out
sbb
aaa
clc
push
std
mov
lock
dec
or
mov
fists
dec
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
rcr
push
loop
lcall
jne
pop
cld
or
dec
div
and
mov
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
or
or
pop
in
cmp
int
pop
mov
fidivs
clc
adc
jmp
hlt
dec
mov
dec
mov
sbb
xlat
inc
call
loopne
aas
mov
jg
mov
sub
addr16
sbb
test
outsb
cld
daa
jp
std
adc
cltd
or
mov
ret
adc
stos
pop
nop
cmp
das
incb
lock
pop
pop
div
cld
idivl
adc
sbb
stc
lahf
loope
pusha
push
jmp
dec
shll
fbstp
out
xchg
add
lock
mov
out
icebp
mov
loope
mov
cmpsl
popf
and
cld
and
mov
fbstp
test
das
mov
inc
sub
cmp
mov
popf
js
data16
decb
adc
sbb
scas
mov
and
call
pop
inc
cltd
add
ret
or
mov
adc
add
push
pop
aaa
std
fistps
fisubs
adc
inc
sbb
mov
mov
aas
icebp
ret
ror
ja
or
sbb
aaa
inc
adc
mov
mov
sub
mov
pop
clc
loope
push
shr
ja
and
dec
add
cmp
sbb
cmpl
and
fdivrl
xchg
lcall
decb
js
pop
gs
push
dec
shll
jg
pop
out
jg
or
mov
cmp
arpl
out
inc
decl
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
sub
jecxz
imul
cld
outsl
sub
ljmp
jmp
std
mov
daa
jmp
faddl
insb
inc
add
mov
fisttps
imul
dec
push
pop
stc
push
dec
out
fstpt
mov
enter
out
pop
add
fsts
dec
add
pop
adc
cmpsl
mov
pop
inc
inc
cs
push
push
sbb
mov
test
and
call
hlt
mov
cmp
enter
int3
stc
roll
or
push
push
jne
push
cli
pop
jmp
add
hlt
jno
shrl
sbb
sti
fldt
lds
jbe
push
fildll
jmp
sub
or
push
mov
rcrb
jo
cmp
and
notl
cmp
pushl
sub
xor
jo
lahf
adc
imulb
fdivrl
outsl
xchg
js
aas
jae
out
call
fs
sti
movsl
shll
add
cmp
jp
cmp
lods
push
in
inc
cli
incl
jb
jmp
dec
push
fldl
push
xor
stc
inc
cmpsl
pop
inc
std
ljmp
lock
pop
test
bound
xor
jnp
jg
sahf
dec
mov
mov
mov
iret
sub
int
leave
dec
fstpl
jmp
cwtl
cld
mov
mov
inc
bound
mov
loope
jae
std
ret
mov
pop
incl
or
in
fdivrs
stos
dec
jnp
pop
sbb
jbe
push
pop
flds
mov
mov
jecxz
pop
xor
jecxz
xlat
fdivl
test
dec
inc
lcall
repnz
jno
fwait
sub
andb
inc
call
inc
push
mov
aas
movsb
or
sub
cmc
push
into
mov
movsb
inc
lea
and
cld
orl
stos
fmull
sbb
add
push
pop
dec
xor
xchg
clc
lock
mov
push
mov
xor
incl
insl
nop
adc
cli
lcall
mov
and
rclb
fistps
js
inc
cmpsl
in
fdivrs
inc
and
call
push
lods
mov
dec
push
or
sub
je
jecxz
bound
jl
jnp
inc
push
push
into
aaa
mov
aaa
data16
cmc
inc
test
inc
fdivr
mov
sub
je
push
lahf
incl
or
rclb
scas
xchg
stos
out
fld
inc
inc
xchg
mov
sub
cmc
cmp
pop
inc
fdivrl
cli
xchg
movsl
decb
xchg
adc
xor
adc
iret
add
pop
pushl
movsb
dec
cmp
push
aas
arpl
scas
mov
xchg
test
insb
xchg
repnz
idiv
jmp
imull
neg
ret
mov
mov
icebp
jb
or
mov
bound
mov
xchg
dec
jmp
or
leave
adcb
dec
ret
or
mov
pushl
or
test
inc
push
add
pop
mov
sbb
jge
mov
pop
lods
dec
jo
in
lahf
add
loop
mov
fnstenv
xor
inc
fistl
mov
mov
or
ljmp
fs
sbb
dec
jno
cmp
addl
inc
push
vmwrite
mov
or
aas
popa
popf
daa
std
inc
xlat
fdivs
iret
sar
dec
addb
push
cmp
jecxz
js
adcb
imul
insl
mov
dec
roll
adc
lock
and
fnsave
pushl
adc
mov
xor
stc
bound
daa
xchg
xor
loopne
push
jo
pushl
cmc
jo
inc
push
jg
fdivrs
outsb
mov
mov
jmp
and
mov
push
push
ds
sbb
cmp
repz
inc
mov
dec
mov
dec
mov
ss
das
shrb
jne
inc
push
pop
and
pop
adc
xor
incl
cmpsl
add
out
jl
push
jmp
sub
les
xchg
pushl
push
pop
repnz
pop
ret
into
sbb
jg
sub
mov
push
and
inc
movsl
scas
xor
pop
test
das
clc
frstor
stos
xor
push
or
jnp
lods
add
mov
lcall
or
lods
sub
shrl
test
sbbb
scas
jns
call
inc
ror
lcall
fistl
lret
and
dec
dec
add
xor
sub
ljmp
push
push
fsubrs
testb
addl
arpl
jmp
call
sbb
sarb
inc
hlt
push
mov
mov
fstpt
jb
and
ljmp
fsts
std
pop
and
cmpsl
lahf
aad
in
push
cmpsb
pop
imul
sar
cmp
ljmp
sbb
out
add
mov
pop
dec
mov
insl
insb
mov
lods
jmp
lds
arpl
cmc
push
jecxz
or
cmpb
push
clc
decl
iret
popa
js
cmp
pop
cmp
jmp
dec
nop
adc
outsl
cld
jo
xlat
fst
insb
push
cmpsb
cltd
mov
dec
int3
pop
in
or
pushf
jecxz
mov
stos
ja
lock
daa
inc
filds
insl
in
test
mov
xchg
into
bound
movsl
push
lahf
out
in
insb
ljmp
stos
lea
stos
adc
sbb
inc
cmp
inc
dec
add
std
fstpt
cmp
xor
addr16
add
leave
cmp
fisttpll
int
mov
pop
fsubrs
xchg
mov
out
call
cmp
xor
xchg
or
push
ret
push
iret
jns
add
test
mov
cld
incl
stc
sub
int3
dec
loope
int3
or
inc
fdiv
mov
cs
fsubr
mov
inc
rcll
mov
mov
in
mov
repz
mov
bnd
popa
and
stos
lret
jg
and
fisubrl
ljmp
xor
std
xor
jbe
test
jb
add
jae
test
mov
and
idiv
lcall
pop
mov
mov
sbb
sub
ljmp
cli
call
cmc
adc
icebp
out
enter
mov
dec
lcall
push
fwait
cltd
mov
out
call
cmp
inc
sub
adc
sarb
mov
xor
mov
mov
fidivs
dec
es
aaa
sbb
jmp
sbb
stos
daa
push
mov
inc
or
cltd
popa
shlb
sbb
cmp
sbb
jae
rorb
cmpsb
inc
ljmp
je
loop
aad
sub
inc
test
mov
sbb
es
out
aam
sbb
mov
addb
sarb
inc
clc
jg
stos
fisttpl
mov
mov
fcomip
push
fisubrs
mov
jno
fstl
adc
adc
jmp
loope
out
fxtract
fistpll
mov
lea
cmp
jecxz
insb
mov
and
je
or
ljmp
stos
ret
jbe
adc
movsl
cmp
getsec
sbb
decl
xor
nop
and
and
rcl
pop
pop
cmpsb
sar
pushl
pop
adc
mov
add
dec
dec
addr16
mov
data16
or
xchg
xchg
je
decl
inc
and
inc
pop
sub
ja
insb
mov
xchg
mov
jmp
add
jb
out
scas
aaa
pop
sub
int
sub
push
sub
xor
incl
fimull
mov
dec
cmpsl
movsl
pop
mov
cli
aam
mov
ljmp
hlt
std
mov
push
mov
cld
cmp
pushl
aaa
or
dec
dec
cmp
aam
jns
ja
xchg
sbb
push
jl
stos
pop
dec
jo
cmpsb
int3
fwait
pushl
loop
jge
in
xchg
and
popa
or
pop
inc
loopnew
les
cmp
sub
xchg
xchg
data16
lret
lea
xor
pop
sub
jo
divps
jae
inc
rol
pop
loopne
test
das
mov
and
scas
dec
and
adcl
adc
into
rcl
decl
and
mov
js
shl
mov
pop
imulb
icebp
mulb
push
dec
jg
xor
jg
mov
dec
or
inc
pushf
pushl
dec
repnz
addl
stos
mov
aad
pop
xchg
jns
mov
inc
test
scas
dec
push
shr
sub
push
push
xchg
and
fcoml
adc
aas
mov
cs
cs
sbb
push
imul
scas
jge
aas
cmp
push
pop
out
xchg
xchg
mov
fildll
xor
subb
sub
mov
movsl
pop
cmc
notb
inc
bound
hlt
sub
stos
add
and
cmp
push
pushf
arpl
clc
ljmp
add
fdiv
adc
xchg
mov
imul
cmp
incl
mov
mov
scas
adc
inc
stc
aas
mov
lcall
test
shlb
movsb
loope
inc
aam
ret
pushf
xchg
sub
ret
mov
decl
rcrl
jns
jb
xor
and
rcr
mov
ljmp
popf
cmp
jp
push
push
sub
sbb
sbbl
pushl
jo
mov
pop
mov
ljmp
cltd
sub
mov
and
push
jecxz
xchg
sahf
addr16
pop
mov
pop
lock
incl
cltd
mov
std
jnp
imul
push
arpl
ljmp
ret
jmp
mov
outsl
inc
and
sbb
insl
pop
ljmp
gs
loop
dec
lahf
in
and
adc
ret
sbb
ret
outsl
xor
jo
call
in
fucomp
ljmp
push
mov
je,pt
ficompl
cmpsl
pop
cmp
pop
inc
ljmp
ljmp
addr16
test
lods
jmp
jmp
mov
pushl
clc
cmpsl
int3
ja
mov
push
ret
dec
push
repz
cmpsb
xchg
jne
sti
mov
sub
push
cmp
add
std
ljmp
pop
movsl
sub
popa
push
int
mov
int
call
nop
out
sbb
in
jmp
mov
lea
aaa
jo
repz
push
inc
ja
lods
push
pop
lahf
ljmp
inc
sbb
xor
xchg
les
dec
adc
add
xchg
hlt
push
fcompl
jp
ljmp
xor
movsl
sbb
gs
int
inc
xlat
fldt
lods
sbb
push
clc
nop
mov
xor
sbb
cwtl
cmp
jb
pop
and
decl
fs
sub
nop
adc
jbe
jne
pop
daa
xchg
xor
cmc
dec
imul
arpl
aam
arpl
cmp
sbb
inc
das
cmp
std
adc
cli
std
xchg
dec
movb
push
mov
pop
inc
jmp
js
mov
call
mov
cmp
stos
mov
cltd
lock
or
sahf
aas
hlt
add
icebp
imul
insl
pushf
iret
cwtl
pop
push
cmpsb
in
jle
aad
insb
push
fmuls
sbb
sbb
xor
fidivl
inc
ljmp
adc
jns
sbb
sti
sub
es
dec
adc
ljmp
pop
sbb
rcr
cmpb
mov
pop
push
lods
pslld
dec
push
in
xor
adcb
in
mov
aam
addr16
and
jmp
jb
popf
pop
inc
cld
mov
xchg
cmp
mov
xor
mov
xlat
lahf
fldt
push
fmull
cmp
out
jmp
je
push
mov
dec
fst
xchg
cmpsb
jg
rep
scas
inc
add
outsb
fdivrp
test
mov
xor
imul
pop
cmpb
xor
xor
adcl
call
daa
jle
lods
inc
push
pop
xor
cltd
push
sbb
das
mov
jnp
addb
subb
sar
js
out
inc
stos
insb
inc
sub
jo
jo
rcrl
cmpsl
mov
imul
sbb
js
fwait
jno
fs
mov
push
out
imul
testb
loopne
dec
ljmp
mov
movsl
push
adc
mov
in
jp
call
shlb
out
fwait
cld
fiadds
ljmp
jo
mov
cwtl
cmp
jg
or
into
push
adc
test
lcall
hlt
pop
adc
daa
in
pop
ja
dec
ljmp
or
cmpsl
fcomip
sub
into
dec
scas
jns
xchg
cmp
nop
xchg
daa
mov
fwait
sub
pushl
stc
in
movsl
sbb
mov
insb
cltd
mov
lods
test
pop
loopne
pushf
int
mov
lcall
or
test
sub
sbb
and
add
dec
idivl
push
pushl
lret
push
push
ror
cmp
cmp
jle
mov
pop
lcall
lcall
sub
lds
aaa
xlat
xchg
jae
and
adc
add
xor
jmp
or
ds
lods
lret
imul
mov
jp
fstpl
cmp
mov
ljmp
sub
aad
push
sarl
incl
jo
inc
lcall
lea
pop
and
add
in
pop
cs
jnp
ljmp
pop
push
push
mov
push
mov
adc
jno
jg
stos
ja
dec
aas
mov
jg
sub
pop
mov
stc
mov
mov
mov
addr16
mov
mov
insl
dec
xor
adc
push
loop
stos
cmp
dec
lahf
in
cmpl
addb
stos
jg
sbb
lods
jb
mov
inc
dec
in
jmp
xchg
pop
fisubrl
cli
call
pusha
push
xchg
outsl
and
int
pop
lds
stos
sbb
es
out
enter
arpl
push
mov
sahf
ljmp
mov
rorb
loopne
mov
sbb
cld
jmp
clc
sbb
ret
dec
leave
nop
pusha
lods
sub
fcomip
jg
pop
pushf
and
push
add
adc
das
int3
bound
cmp
inc
mov
jo
mov
ret
jo
mov
in
mov
mov
stos
pop
fcmovnbe
sbb
cmp
decl
and
loopne
xchg
fdivrl
xchg
or
incb
int3
pop
out
push
lcall
mov
jbe
jl
jle
aaa
imul
lcall
or
fisttpl
pushl
sbb
xchg
ds
and
xchg
fimull
pop
pop
ss
test
jmp
xchg
xchg
in
sbb
push
sub
icebp
popa
cmp
pushl
aas
or
lret
mov
or
pop
inc
jne
std
lock
ds
and
mov
aad
mov
jnp
sub
gs
mov
cmp
sahf
aad
in
push
outsb
in
movsl
add
iret
mov
jecxz
mov
xchg
cmpsb
cld
mov
cli
jle
pop
sbb
mov
adc
loop
dec
ficoml
rclb
mov
sahf
mov
dec
jne
fmull
cmp
int
jmp
xorl
add
adc
dec
aaa
xchg
push
mov
jno
inc
xor
clc
inc
mov
xor
add
lcall
je
jg
mov
xor
sub
fwait
sbbl
mov
aas
ljmp
bndstx
sbbl
pop
out
stc
or
roll
jne
sbb
adc
push
idivl
jb
nop
adc
adc
movsl
dec
outsb
leave
pop
inc
imul
call
stc
mov
stc
lock
adcl
jbe
in
cmp
sti
rolb
jecxz
ljmp
addr16
xchg
mov
dec
add
inc
xor
int3
xor
jmp
xchg
sbb
hlt
inc
jae
in
jg
mov
jle
test
and
decl
ja
pop
push
mov
adc
aad
adc
adc
lcall
sarb
cmp
addr16
lcall
mov
loopne
dec
jns
cmp
cmp
icebp
cmpsb
add
aad
daa
add
ficoml
movsl
or
jg
dec
inc
lds
les
or
loopne
push
jecxz
out
dec
jg
jle
and
fbstp
mov
hlt
stos
push
pop
mov
jno
iret
arpl
sub
jns
gs
les
pop
mov
mov
jle
xchg
sti
daa
mov
pop
xor
int
hlt
or
stos
add
jmp
mov
test
pop
ss
adc
xlat
dec
pop
sbb
ret
xchg
sub
mov
shrb
pop
movsb
jg
jnp
sahf
push
adc
daa
ret
cmovns
jne
rcrl
dec
lahf
bound
jnp
clc
dec
or
pusha
decl
sahf
push
arpl
sub
jecxz
sahf
push
loop
mov
lock
test
call
in
fwait
jnp
push
push
mov
jg
adc
outsb
add
aam
enter
dec
and
ljmp
aam
pop
aas
imul
movb
nop
movsl
pushf
jecxz
pop
mov
ret
push
dec
lret
jnp
stc
pop
int3
icebp
add
pop
mov
imul
lods
or
or
sub
inc
jmp
adc
mov
movsl
movsb
out
xor
loop
pop
add
inc
cmp
decl
xor
cmp
jae
xor
lahf
cwtl
push
clc
les
inc
das
test
xchg
rolb
pushl
mov
mov
in
pop
cmp
jecxz
outsb
pop
push
ret
pop
popa
ja
or
decl
push
dec
mov
fsubs
int3
adc
lods
sub
incb
mov
inc
push
pop
pop
roll
lret
outsl
pusha
and
lea
inc
jmp
jg
xor
inc
pop
arpl
pop
inc
popf
out
lret
outsb
jmp
pop
pop
pop
mov
test
push
sub
mov
xchg
daa
enter
ret
sbb
jmp
and
inc
into
and
in
mov
inc
mov
fcoml
or
or
out
pop
mov
dec
rcr
sub
xor
xchg
cld
mov
mov
dec
int
cltd
stos
pop
mov
lret
fcmovne
bound
pop
nop
inc
lock
inc
add
push
movsb
std
in
mov
jnp
jno
call
and
dec
xor
cmovae
in
arpl
popf
mov
ljmp
std
mov
popa
popf
push
mov
jmp
lock
cmp
mov
fildll
mov
fucomi
sbb
scas
xchg
enter
sbb
inc
sbb
incl
dec
ret
test
push
and
dec
mov
sub
inc
mov
push
jecxz
std
mov
int3
leave
xchg
inc
lods
inc
mov
mov
bound
xchg
jns
add
in
jmp
stos
je
into
inc
popa
hlt
sbb
cmpl
and
jg
and
scas
fcoms
dec
xchg
xchg
sarl
lahf
lret
ds
and
pusha
in
ds
call
mov
inc
mov
lods
mov
int
jns
xchg
divb
fs
jmp
and
cmpsb
sub
shlb
test
inc
xlat
call
lcall
xchg
jns
cmp
ret
mov
roll
pop
stos
les
and
lcall
pop
addr16
ret
inc
cs
jae
push
or
inc
dec
daa
adc
mov
stos
xlat
jo
movd
push
push
ds
xchg
out
and
pushl
aas
push
mov
insb
jnp
fs
icebp
push
repz
rcl
ss
lahf
arpl
pushl
jp
xchg
jo
repz
idivl
add
call
mov
jl
in
mov
insb
push
xor
mov
setae
decl
mov
add
popa
les
sar
mov
ret
jmp
call
mov
mov
lahf
mov
les
jae
inc
out
adc
mov
cmp
jl
mov
fcmovu
jnp
pop
jo
push
or
das
mov
lcall
lds
cwtl
test
xchg
std
mov
cwtl
jge
fxch
mov
jmp
mov
lods
lcall
mov
push
icebp
mov
test
jns
fwait
ljmp
push
cmpsl
movsl
jecxz
mov
scas
push
or
pop
pop
adc
iret
insl
add
mov
push
outsb
xchg
push
push
sub
jecxz
pop
nop
jge
imull
dec
jne
push
mov
test
call
in
hlt
add
pop
xchg
ret
jg
pop
leave
xchg
mov
les
pop
lret
push
xor
mov
pop
xchg
stos
ret
iret
pushf
mov
pusha
in
mov
add
ljmp
jmp
mov
sub
aam
jmp
fucompp
rol
jns
pop
pop
aad
ret
jmp
mov
mov
add
cmpsb
dec
push
xchg
jg
push
enter
addr16
xor
inc
sahf
lods
cwtl
lret
loope
imul
call
fdivs
xor
cmpsb
stos
add
pushf
pop
leave
insb
repz
pop
push
pop
int3
mov
call
jge
aas
ficompl
push
dec
roll
stc
notb
xchg
hlt
call
decl
scas
sub
loopne
mov
mov
xchg
xchg
mov
jnp
xorl
or
incl
repnz
mov
insl
jb
jns
icebp
dec
sti
pop
adc
ljmp
cmp
or
movsl
cs
test
mov
test
xchg
ljmp
sub
cwtl
movsb
sahf
fidivrl
sbb
in
int3
decl
popf
adc
mov
fimull
xchg
ds
mov
mov
stc
mov
imul
aad
mov
aas
cli
push
andl
movsl
mov
call
std
cli
enter
sarl
fwait
stc
dec
inc
jecxz
inc
jp
cmc
aam
fsts
decl
int3
fistpll
xchg
xor
cmc
loope
push
and
sbb
sub
fldt
insb
jle
mov
or
mov
cmp
test
fs
ljmp
out
mov
nop
pop
out
mov
add
pop
mov
and
pushl
loop
stos
dec
pop
popf
mov
insl
mov
fsubs
jae
dec
enter
call
jne
shlb
into
jno
push
fcom
push
ja
clc
jb
lds
std
jmp
aaa
mov
mov
hlt
iret
push
or
rclb
xorl
mov
pop
fnstsw
xor
cmp
or
mov
pushf
ret
push
pop
mov
pop
rcl
sub
fs
jmp
loopne
movsl
xor
add
stc
dec
dec
jle
ds
push
inc
push
adc
sbb
or
flds
neg
fdivp
ljmp
sahf
pop
hlt
aaa
popl
pushf
orl
int
lcall
add
sbb
push
enter
mov
fildll
jl
test
push
je
scas
fimuls
ja
scas
repnz
xchg
subb
cmp
shll
cmpsb
mov
mov
and
pop
test
decl
push
sbb
pop
or
inc
stos
das
pop
sbb
sub
pop
cmp
dec
ret
hlt
inc
sarb
incl
mov
mov
mov
popf
xchg
loop
pop
add
leave
movsl
aaa
inc
pop
xchg
icebp
push
js
sbb
andb
scas
mov
imulb
daa
pop
imul
pop
stos
ret
mov
ljmp
jo
mov
negl
scas
jle
jmp
loop
fsubp
or
and
cmpsl
sub
pop
xor
shrb
call
ret
and
pop
movsl
or
jmp
xchg
push
dec
mov
ds
rclb
std
lcall
push
sub
mov
push
xor
cmp
sbb
xor
in
and
movsl
inc
push
loop
nop
xor
pop
inc
or
ja
int3
data16
sub
mov
aam
lcall
popf
lret
add
lods
dec
mov
push
xor
sub
mov
loope
jae
fdivs
insl
rcl
inc
stos
lahf
rorb
les
test
sub
rclb
test
jg
lcall
cmpb
mov
aas
sbb
lret
and
push
imul
mov
mov
fadd
cmp
mov
or
aas
movsb
sbb
jns
add
sub
aas
mov
xor
xor
pop
out
lret
enter
inc
mov
mov
idiv
stc
outsl
loopne
pop
ljmp
or
rcrl
pop
push
push
cmp
pop
ljmp
and
mov
push
loope
cmp
jl
cwtl
sti
fidivrl
sti
incl
cld
ljmp
cmpsl
cmp
lock
push
mov
mov
push
cld
cmp
jp
mov
aaa
dec
std
xorl
cmp
jae
push
mov
ljmp
pushl
xor
inc
pop
cld
lret
push
enter
into
mov
outsl
int3
mov
mov
in
cli
cmp
jmp
inc
in
ret
pop
cld
push
push
stc
call
ds
rol
sbb
stos
pop
leave
and
test
insb
and
add
sub
mov
es
jmp
movsb
jbe
aaa
jb
push
rorb
and
dec
jae
sahf
push
js
repz
aas
test
pop
and
fcompp
push
mov
dec
or
icebp
clc
sub
sub
jmp
cmp
shll
ljmp
sub
lcall
cltd
outsl
fbld
pushf
in
dec
cmovns
mov
sbb
arpl
mov
outsl
inc
roll
into
and
jmp
dec
repz
inc
pusha
mov
cmpsl
loopne
sub
pop
shlb
pushl
jmp
mov
add
inc
xchg
ds
lret
adc
aam
push
mov
mov
mov
adc
sub
xchg
pop
popf
mov
ljmp
mov
and
mov
xchg
xchg
sbb
lea
push
ss
or
filds
pop
lock
mov
movl
cld
adc
adc
cmp
dec
mov
std
add
inc
jb
insb
aad
data16
call
shl
sub
fidivrs
pop
xor
xchg
hlt
inc
or
sub
xor
in
call
testl
push
inc
push
mov
pop
dec
lock
jb
add
xchg
je
lcall
cmpsl
adc
xchg
cmc
ja
or
int
sbb
imul
fbstp
ss
aam
adc
mov
movsl
or
lea
das
test
in
stc
call
and
inc
sub
lods
pushw
xchg
fdivs
ljmp
sub
imul
test
jle
pop
or
mov
shrl
mov
movb
aam
leave
sti
cwtl
mov
in
push
stos
jo
xchg
cltd
jmp
push
add
mov
sahf
js
mov
mov
mov
push
cltd
sar
leave
push
fistps
adc
fnsave
cmp
decl
xchg
dec
inc
sub
lahf
jno
outsl
inc
dec
and
xor
lods
lds
int3
mov
adc
std
mov
cwtl
sbb
mov
mov
dec
adc
sti
or
mov
cld
lret
cmc
loop
push
cmp
scas
bound
mov
adc
cltd
inc
lcall
xchg
fsubr
mov
sti
lret
clc
test
stos
shl
add
jne
cmp
loop
pop
jle
sbbb
mov
iret
sbb
cmp
out
cmc
pop
push
mov
jecxz
mov
push
dec
andnps
call
cltd
mov
dec
in
mov
sti
popf
add
xchg
adc
or
mov
out
das
cli
ljmp
sbb
test
or
ja
repnz
dec
movsl
pop
or
mov
pop
cmpsl
pusha
rol
je
and
loopne
arpl
ret
push
add
daa
push
xchg
jp
mov
mov
cmp
scas
cli
call
and
sub
and
mov
mov
stc
imul
dec
js
fdivrs
xor
xorb
pop
sub
lea
js
hlt
decl
inc
mov
shrb
fnstcw
or
pop
dec
push
into
xchg
dec
scas
addr16
fst
mov
mov
xchg
dec
jmp
ss
decl
sbb
das
jecxz
lock
xor
cmp
mov
in
inc
cmp
adc
or
adc
sti
ljmp
jbe
or
xchg
jg
push
xchg
nop
adc
pop
fcoml
dec
adc
sbb
sub
fs
stos
int
and
out
mov
sub
sbb
in
out
cmp
lds
jecxz
or
mov
scas
mov
inc
mov
xor
pop
lock
lret
and
push
jno
dec
outsb
inc
lods
notl
lea
mov
jg
xchg
cmp
fcmovnb
out
dec
mov
std
in
jo
sbb
add
lcall
cli
dec
mov
inc
mov
xchg
mov
shll
dec
xchg
push
pop
cli
enter
sbb
jg
push
add
push
mov
sub
inc
jne
ror
push
cmc
push
cmc
sti
cmp
mov
cmp
cmp
sti
add
inc
dec
add
fdivr
mov
loop
in
jno
fcoml
scas
mov
aam
call
mov
fcoml
xchg
add
mov
addr16
push
mov
sbb
jmp
hlt
sub
aas
pop
cwtl
dec
mov
ss
lcall
cmp
js
jge
scas
or
cltd
sbb
jns
pop
loopne
ja
xor
add
xor
cwtl
repnz
jo
adc
jmp
mov
iret
or
inc
movsl
lods
inc
jnp
jbe
mov
pop
ss
push
mov
lock
decl
jge
adc
sub
mov
or
test
cmpb
scas
add
push
dec
cltd
aas
pushl
test
mov
imulb
sbbl
push
xchg
jp
test
stc
pop
imul
lcall
jg
cs
jae
xorl
mull
mov
movsl
arpl
loopne
rcr
fwait
xchg
adc
pushl
outsb
cld
fldenv
push
icebp
jecxz
adc
aaa
arpl
ficomps
pop
ljmp
jmp
pop
out
loope
mov
jle
movsl
push
xorb
jne
ljmp
mov
ds
ljmp
lahf
add
call
jmp
out
mov
stos
dec
jbe
mov
imul
bnd
inc
mov
gs
fs
inc
push
jg
and
cltd
out
push
lret
loop
test
or
xchg
xor
or
aam
ljmp
int3
aad
inc
sbb
mov
popa
sub
sbbb
sar
decl
out
je
jb
mov
lods
leave
scas
icebp
gs
inc
arpl
ljmp
mov
out
fbld
and
imul
loope
mov
xor
test
jge
imul
lock
xchg
and
mov
hlt
xor
add
rcr
pop
pusha
cwtl
push
jg
adc
vcmpnlt_uqpd
push
xor
push
dec
push
jb
or
in
push
jmp
pop
loope
cwtl
insb
call
sub
imul
pop
out
mov
lcall
pop
enter
rorb
popf
dec
dec
ljmp
fwait
popf
jmp
push
mov
fcomip
lcall
pop
pusha
aad
mov
cmc
dec
adc
inc
cmp
push
xchg
pop
ljmp
mov
test
jae
popa
cwtl
scas
testl
lods
lret
jnp
ljmp
clc
fucomi
jg
ja
imul
flds
dec
pop
push
pop
ret
lcall
outsl
popa
xor
lock
or
or
js
mov
or
test
mov
adc
push
cs
int3
cmp
add
mov
call
std
aas
rclb
dec
mov
xchg
stos
sti
test
pavgw
sahf
xchg
mov
cmc
sbb
lret
pop
fs
rcrl
pop
cld
lcall
les
rcll
dec
cmp
scas
data16
dec
incl
leave
xchg
in
movsl
mov
sub
call
shlb
ljmp
insb
lcall
adcl
xor
in
mov
mov
rep
inc
mov
icebp
add
pusha
scas
mov
add
pop
push
xchg
mov
mov
test
sub
dec
or
rol
sahf
in
mov
mov
mov
das
jp
add
sahf
pop
cmp
loopne
pop
lahf
cld
mov
shlb
mov
add
dec
mov
xor
xchg
sbb
and
lock
xchg
shll
xor
sar
adc
inc
in
pop
es
negl
pop
or
sbb
pop
icebp
ljmp
inc
mov
lcall
and
testl
xor
push
scas
aad
ja
and
mov
shl
pop
dec
out
dec
xchg
daa
jp
jo
ljmp
pushl
inc
scas
cmpsl
xchg
sbb
loop
fsubs
adc
push
decl
enter
xchg
sbb
repz
xchg
stos
adc
js
add
lcall
jp
ret
mov
mov
mov
cmp
aam
insb
jmp
jo
cmc
cmpsb
es
loope
das
outsl
outsl
scas
or
andb
pop
add
imul
mov
jp
lods
ljmp
test
loop
pushf
inc
cmp
dec
popf
pop
lret
imul
enter
loope
int3
fs
sub
lock
mov
pushl
or
push
mov
sub
loopne
jge
addr16
push
jl
jne
add
jmp
mov
jb
sub
insl
and
mov
dec
sub
clc
pushl
gs
pop
lods
sarl
out
jbe
andb
ret
jbe
cmpb
and
ljmp
rcl
add
mov
mov
loop
lods
jg
jmp
decl
add
xchg
mov
stos
es
fldt
jae
popf
push
jae
lea
lcall
stc
pop
in
add
aad
scas
mov
jns
mov
cmp
xchg
lret
das
scas
push
mov
adc
dec
and
inc
stc
jbe
mov
popl
jno
outsb
xchg
fcompl
les
adc
popf
arpl
or
jmp
movsl
and
jecxz
jb
clc
test
lcall
push
movsb
mov
push
pop
mov
fiaddl
ljmp
js
unpcklps
or
in
and
and
test
mov
jg
jmp
dec
mov
dec
jmp
inc
cmp
xor
leave
ss
jle
cmp
pushl
push
jb
and
fidivrs
paddsb
scas
push
cwtl
into
xchg
pop
push
push
gs
xchg
jg
call
mov
xchg
das
xor
dec
mov
and
mov
mov
and
jmp
xchg
xor
bound
int3
cltd
cmp
out
stos
push
shrb
adc
mov
scas
cmpsl
jecxz
mov
call
cs
jb
mov
mov
mov
ret
sarl
mov
push
mov
stos
lcall
clc
pop
lock
sbb
xchg
inc
mov
xor
out
out
cli
orb
decl
mov
cmp
cmp
mov
out
imul
jecxz
mov
lcall
adc
mov
jecxz
hlt
aas
sbb
xor
push
push
xchg
icebp
js
jbe
mov
and
lcall
or
test
filds
and
adcb
mov
mov
or
jg
sub
push
pop
aam
iret
test
stos
iret
pusha
fsub
jae
cmpl
call
aam
lock
add
mov
xor
xlat
in
mov
lds
pop
jmp
fbld
enter
movsb
aad
loope
outsb
xchg
clc
das
xor
and
scas
insb
inc
jmp
sahf
lcall
dec
cmp
xchg
pusha
mov
loope
inc
xor
popf
enter
incl
or
subb
push
add
stos
test
ret
jmp
sbb
ficompl
cmp
mov
dec
arpl
mov
mov
in
ret
scas
mov
cmpsl
cli
mov
cmc
pop
vmread
push
imul
out
dec
adc
adc
test
pushl
xor
inc
dec
xchg
inc
jae
add
mov
lods
push
sub
push
dec
data16
pushl
xchg
inc
mov
dec
call
or
dec
pusha
arpl
ret
mov
aas
sahf
pop
pushf
or
xchg
imul
jle
stos
and
mov
cld
repnz
incl
sub
scas
mov
mov
pushf
mov
shll
inc
fmul
inc
jl
xchg
cmpsb
jmp
inc
bound
jp
sub
add
pop
sub
and
pushl
mov
mov
jmp
cmp
and
inc
enter
cmp
incl
mov
mov
subl
xor
dec
out
mov
push
call
xor
adc
ja
xchg
lods
sbb
pop
sbb
ja
adc
aad
jnp
je
mov
mov
cs
adc
repnz
sub
nop
scas
cmp
lods
scas
add
data16
jge
das
leave
insb
xlat
jne
push
cmp
mov
aad
lcall
cmp
shll
sbbl
mov
jmp
ret
hlt
nopl
stc
xchg
add
mov
int3
dec
push
xor
mov
push
fistl
lods
js
inc
lret
gs
push
mov
cmpsl
and
ret
int
pushl
adc
popa
es
push
lret
mov
mov
pop
int
jg
cmp
pusha
pop
pop
jmp
jmp
out
outsb
ljmp
or
imul
aam
sub
addr16
push
repz
lret
jmp
mov
cmpsl
dec
push
jge
dec
bound
insb
cmp
pop
mull
pushl
enter
arpl
pusha
jns
adc
aam
out
lret
push
scas
adc
cmp
add
mov
jmp
push
mov
iret
or
and
cmpb
jg
cmp
js
pushf
push
loope
popf
fcomp
or
rorl
pop
icebp
lcall
lods
addr16
and
pop
push
jle
cwtl
adc
cmp
lcall
daa
clc
ljmp
aaa
imul
test
fstpl
adc
xchg
dec
shrb
mov
outsl
in
cwtl
jnp
cmp
fsubr
sbb
sub
inc
xchg
repnz
decl
repz
inc
je
jns
xchg
xchg
ss
mov
lods
jg
lods
xchg
ljmp
stos
in
fs
add
mov
pop
call
or
dec
adc
sbb
mov
data16
orb
ss
mov
pop
xchg
mov
jp
or
sbb
inc
shrl
test
inc
mov
cmp
pop
add
fmuls
pop
ds
hlt
and
push
push
jae
lods
shlb
sub
out
cmpl
lret
mov
or
sti
xchg
loop
xor
mov
sbb
lods
mov
inc
mov
ficomps
decb
adc
sub
pop
xchg
das
sub
shrb
inc
pushl
outsb
adc
xor
mov
lock
inc
cli
cld
dec
push
xchg
inc
mov
aaa
mov
aam
dec
push
mov
pop
xchg
cmp
loop
daa
lahf
xor
ja
jno
adc
jae
add
push
xor
roll
jo
inc
mov
add
or
add
idivb
cmc
inc
ljmp
sub
cmp
js
scas
or
aam
ds
add
jg
push
and
je
mov
ljmp
push
cmc
pcmpeqd
sub
jge
incl
fstl
stc
lahf
aas
jno
inc
imul
add
sub
mov
add
call
and
test
test
pop
inc
out
mov
pushl
addr16
fstl
or
push
lea
fcomps
xchg
xor
push
mov
into
mov
fbld
shrb
shlb
pop
mov
sbb
xchg
je
call
popa
cmpsb
sub
or
mov
insl
ret
repz
int
xor
out
inc
mov
jmp
das
mov
xor
std
sbb
sbb
inc
xor
push
popf
fbld
stos
mov
ds
enter
popa
icebp
lcall
lahf
or
cmp
lock
incb
sbb
popf
fadd
jp
ss
push
movsl
add
jmp
sub
fcomps
movsb
sub
movsl
xor
xchg
lods
push
jne
cltd
dec
arpl
pop
lock
jns
and
xor
cmc
cld
shr
test
stos
xchg
mov
push
jecxz
jmp
jp
das
jg
add
push
xor
jno
pushf
pop
lcall
incl
mov
fidivl
iret
or
xchg
daa
addr16
fcos
mov
jae
mov
mov
test
cmpsb
or
mov
sar
sub
lcall
js
outsl
aad
xchg
mov
lcall
loope
repnz
aam
in
ljmp
pop
push
pop
out
ds
mov
orl
jns
or
adc
sbb
pop
push
js
imul
int3
xor
lcall
jbe
les
sbb
push
adc
xor
out
and
js
inc
ljmp
scas
pusha
jno
sbb
in
repnz
add
dec
mov
cli
mov
push
sub
scas
mov
ljmp
aaa
in
ret
or
xchg
mov
push
aad
inc
pusha
push
leave
lret
sbb
movsb
outsb
es
insl
call
outsb
jbe
mov
pop
cmp
insl
push
inc
cld
test
into
sub
decl
push
sti
ficoml
loopne
inc
dec
adc
pop
sub
cltd
jl
insb
faddp
sbb
push
in
and
mov
es
insl
xor
cmp
popf
cld
data16
sub
fs
dec
pop
mov
insl
pop
xor
nop
lock
lods
addb
mov
cmp
pop
cmp
lahf
inc
enter
scas
nop
push
mov
cmp
outsb
mov
mov
add
mov
stos
sub
mov
rcrb
imul
dec
pushf
in
test
call
mov
fiaddl
leave
inc
rcrb
jmp
lcall
call
cli
xor
mov
or
lock
adc
and
xchg
sbb
mov
fldl
movl
fs
pop
and
js
xor
cmp
ljmp
fsubs
pop
sbb
cmp
ds
addr16
xchg
jnp
cmp
dec
fldenv
pushl
aad
fisubrl
inc
clc
aaa
repz
or
cmp
lods
jno
cmp
and
inc
notl
mov
or
or
adc
dec
sar
lock
inc
cmc
dec
outsl
xor
insb
stos
mov
ljmp
pop
mov
push
or
lret
pop
scas
leave
int3
sbb
jecxz
cld
stos
cwtl
fmuls
mov
incl
cld
daa
imul
xor
pushf
mov
mov
mov
incl
mov
jns
xchg
sub
jb
les
jl
push
mov
test
hlt
call
stos
push
int3
sub
dec
out
xchg
add
lds
ja
fildl
fucomip
sub
xlat
lea
test
mov
lds
mov
loope
mov
dec
enter
jno
sbb
repz
testl
incl
mov
in
scas
pop
ds
push
pop
push
call
mov
push
fstpl
add
jb
adc
hlt
test
fdivs
dec
dec
add
dec
dec
mov
decl
dec
clc
and
jecxz
inc
in
pop
xchg
filds
pop
xlat
int3
pop
inc
dec
xor
cmpsb
in
lcall
or
pushf
push
and
xorl
push
add
test
and
cmp
push
ret
mov
xchg
cmc
aaa
sub
loop
xor
push
jne
das
xchg
lcall
rcr
lods
insb
dec
inc
test
mov
in
push
lea
mov
in
std
stos
loop
cmp
fcoms
or
jg
pop
shll
pop
rorb
add
xlat
xchg
pop
cwtl
jp
pop
inc
cltd
pushf
adc
jne
incl
cwtl
test
aam
xor
jl
cmp
scas
push
popa
clc
jae
and
movsl
cs
mov
mov
cli
icebp
leave
dec
xchg
pop
add
decl
dec
or
sbb
jle
call
lret
sahf
insl
mov
cltd
daa
add
lcall
dec
pop
js
jo
cs
pop
jb
or
jbe
stc
push
cs
jnp
stos
jae
mov
jg
cmp
xor
mov
mov
sub
imul
mov
addb
push
incl
sbb
movsl
sub
subb
push
outsb
and
mov
es
jecxz
pop
or
push
push
pop
loop
mov
ficoms
pushf
add
dec
popf
aam
push
xchg
insb
inc
xor
cmp
or
jmp
cmc
adc
fisubrs
imul
or
mov
decl
cmp
or
sbb
mov
pop
and
mov
repz
lcall
outsl
sub
sbb
cwtl
fdivp
inc
and
xor
subb
pop
imul
decl
bound
adcb
subb
push
add
fldl
test
lcall
xor
push
xor
es
jl
mulb
adc
or
test
mov
test
gs
lret
sar
stc
mov
adc
sub
push
ret
insl
mov
ljmp
loopne
jbe
xchg
lret
outsb
inc
sahf
pop
add
div
or
lock
jmp
xchg
sub
mov
ds
icebp
cli
popf
fbstp
lods
push
rcl
and
xchg
decl
stos
repnz
xchg
mov
lock
sbbl
sbb
xor
jg
fisubl
or
cmpsb
arpl
mov
adc
decl
adc
fwait
les
icebp
mov
dec
cmp
cmp
xor
lds
cwtl
lret
adc
mov
xor
imul
dec
inc
add
xchg
lret
rcrb
adc
aaa
addr16
push
mov
dec
into
cmc
fcomps
incl
sub
repnz
inc
pop
sarl
test
fdivs
mov
aad
dec
incl
mov
inc
mov
push
ja
xchg
outsb
sbb
or
and
xor
xor
or
mov
xchg
mov
fwait
pop
jp
add
call
and
or
into
push
test
cvtpi2ps
fisttpl
cmpsl
movsb
lcall
call
jno
cmp
jmp
cwtl
mov
cmp
and
dec
lock
dec
sub
add
repz
mov
adc
sahf
stos
xor
decl
call
mov
and
rcl
mov
aam
xor
jne
push
jmp
mov
add
sub
repz
push
push
push
or
in
push
jae
lods
xlat
movsl
into
incl
bound
fisubs
outsb
lret
adc
cmp
xchg
outsl
jno
icebp
out
cli
call
adc
fst
scas
into
sbb
lahf
jmp
pop
test
pushl
mov
pop
jnp
xchg
mov
adc
das
sbb
rorb
add
xlat
nop
jne
push
mov
jmp
xchg
and
out
aaa
sub
dec
cmpsl
mov
scas
sbb
or
aam
pop
dec
mov
mov
xor
xor
and
pop
cmc
push
xchg
call
mov
dec
cmp
paddsw
mov
repnz
adc
add
jns
inc
lcall
aam
sbb
jmp
xchg
cmp
xchg
fs
jnp
jp
jg
jae
data16
lds
and
inc
imul
jns
in
jne
test
int
inc
jno
decl
sahf
lcall
or
insl
lret
mov
clc
outsl
repnz
and
jno
or
jmp
test
mov
xor
lock
mov
in
ret
xor
xor
faddl
xchg
and
mov
shrl
mov
cmp
jg
shll
cmp
adc
or
adc
push
testl
adc
test
stc
fisttpl
mov
andb
mov
sub
lea
xchg
adc
enter
cmp
lret
mov
shl
clc
jmp
pop
insb
and
loope
in
ds
push
sbb
mov
and
xchg
pop
mov
in
fbld
adc
lcall
fwait
add
ljmp
cli
cmp
in
sarl
and
fisubrl
call
cmp
xchg
out
jecxz
sub
inc
push
mov
dec
decb
cwtl
jbe
test
stc
jne
pop
and
jmp
repnz
je
push
and
or
ret
in
out
xor
push
fsubs
push
xchg
xchg
push
stos
cltd
loope
fs
jmp
mov
mov
mov
outsb
daa
lret
das
push
fwait
pushf
pop
jo
cs
sarl
inc
pop
cld
mov
and
ja
sbb
pushf
push
arpl
inc
fcoms
movsb
sub
sbb
fsubp
out
mov
dec
ja
sub
lods
cwtl
inc
lret
fldenv
imul
sti
pop
pop
clc
dec
stc
loopne
aam
lcall
jne
subl
mov
inc
cltd
dec
ss
jne
adc
mov
pushl
mov
pushf
push
xor
and
lods
mov
xor
movsb
inc
call
std
incl
hlt
fwait
out
jbe
inc
movsb
repnz
arpl
outsb
add
inc
jae
sar
lret
fdivs
xor
loop
ss
push
out
dec
xchg
andl
ljmp
movsb
mov
mov
scas
jnp
repnz
call
adc
ljmp
dec
nop
jb
leave
jmp
adc
jae
lahf
mov
jp
arpl
add
and
incl
mov
sarb
dec
jae
lret
lret
rol
xchg
mov
sarb
addb
or
mov
jbe
inc
mov
jg
sar
nop
add
dec
inc
pop
lods
test
scas
adc
sti
xchg
aaa
leave
pop
mov
call
sub
jns
aam
mov
cmp
aaa
sbb
fcoml
loop
incl
dec
dec
repz
das
mov
in
jmp
mov
jo
inc
lods
aas
incl
inc
ficomps
or
cltd
nop
adc
daa
push
frstor
jle
cmp
lds
lea
mov
call
cmp
dec
push
out
pop
push
scas
adc
sbb
ret
test
xorb
xchg
mov
stos
fcomip
fisubrl
adc
or
mov
cmc
add
test
ljmp
sbb
js
push
sbb
pop
icebp
push
mov
cmp
enter
test
jg
aaa
mov
sub
mov
mov
pusha
out
fstpt
inc
and
imul
pushl
pop
and
out
in
leave
xchg
fidivs
out
push
cmp
sub
inc
je
adc
pop
cmp
in
jnp
stc
in
and
mov
mov
add
subb
fwait
js
inc
popf
aas
pusha
jl
jb
mov
cmpl
dec
insb
jl
mov
idiv
out
clc
sbb
pop
fs
cltd
inc
mov
adc
lcall
ljmp
scas
data16
insl
mov
sbb
loop
adc
cmp
shld
xor
sarb
pushl
xor
cmpl
add
sbb
call
mulb
cmp
gs
popf
inc
cmp
es
inc
lds
int3
sbb
push
xchg
sbb
mov
ds
lret
std
dec
enter
sti
ljmp
stc
inc
pop
pop
push
jp
pop
sbb
inc
orb
in
pushf
shlb
iret
fldenv
push
inc
add
push
bound
jnp
daa
fwait
in
int3
push
dec
gs
fidivl
pop
popa
jmp
mov
outsl
clc
or
mov
sub
out
mov
mov
imul
ljmp
mov
push
pop
or
xor
dec
mov
inc
inc
mov
jmp
jg
popf
xor
in
mov
and
adc
push
mov
daa
into
push
inc
and
and
xchg
and
jle
xchg
push
notb
push
lock
add
in
push
rcl
out
ljmp
jmp
sbb
jg
scas
jb
ds
addr16
dec
cli
jne
adc
push
or
inc
push
or
pushl
jecxz
sbb
daa
in
lea
pop
push
movl
lahf
sub
lcall
rcrl
scas
inc
stos
adc
jmp
mov
xchg
xor
inc
ljmp
dec
push
mov
adc
pop
les
xchg
jp
jno
loopne
cmp
out
test
call
inc
pop
mov
mov
cli
xchg
icebp
ss
lret
sti
scas
add
lods
jno
dec
mov
rol
decl
lock
push
iret
rol
gs
inc
mov
dec
lret
mov
ljmp
jmp
clc
cltd
icebp
movsl
pop
pop
sahf
xchg
cmp
jbe
int3
or
faddl
mov
mov
loope
sarb
pop
sbb
fisttpll
fs
inc
jmp
mov
imul
lahf
outsl
jl
cmp
daa
das
repnz
repnz
out
jo
jl
mov
mov
jp
imul
ljmp
dec
cli
ret
jae
cmp
ret
pop
in
sti
sub
mov
mov
stos
xchg
and
inc
loop
fs
lods
lock
add
test
push
dec
push
cmp
lcall
and
inc
xor
xchg
and
pop
lahf
mov
dec
les
mov
or
or
ljmp
inc
mov
jg
mov
dec
out
push
sub
in
icebp
mov
push
aaa
inc
lods
in
and
dec
repnz
pop
std
mov
and
jnp
pop
xchg
jp
inc
mov
pushl
mov
inc
clc
imul
mov
xchg
dec
in
das
push
xor
loopne
cmp
push
repnz
shll
data16
push
add
and
ljmp
jge
loope
or
cwtl
and
add
lock
stos
lock
jle
jmp
dec
jnp
mov
sbb
ret
filds
addr16
jg
sbb
out
and
push
stos
ja
xchg
jmp
adc
clc
sbb
mov
imul
mov
cmp
ret
out
lods
inc
call
decl
mov
aaa
cs
insl
pop
cs
mov
je
arpl
ss
fwait
dec
ss
ljmp
adc
push
pop
mov
push
push
jae
arpl
mov
arpl
loopne
lret
adc
add
mull
pop
mov
andl
lods
jle
ds
sbb
cld
adc
test
mov
dec
jg
sarl
rcr
fucom
pop
mov
pop
ds
call
test
hlt
clc
pushf
js
jae
aam
js
repz
inc
push
and
dec
dec
mov
inc
and
nop
divl
cmc
push
cmp
dec
push
add
dec
push
jmp
inc
xor
hlt
idivb
sbb
call
lret
mov
lahf
sbb
lcall
movsb
jge
fsubs
popa
and
mov
scas
cmp
das
mov
stc
cmp
sub
pop
jnp
inc
jl
and
xor
mov
inc
insb
or
loope
call
jmp
xchg
sbb
fadds
mov
push
push
xchg
loop
xchg
xor
and
lcall
jge
scas
gs
cmp
imul
mov
xchg
xor
lahf
jo
jmp
dec
decl
or
hlt
and
xor
xchg
addr16
push
push
push
xor
add
incb
in
mov
add
lods
call
stc
xor
subb
mov
int3
xchg
xchg
pusha
push
aaa
jb
test
pushf
lcall
pop
fcmovnbe
mov
lcall
repz
fwait
les
dec
cmpl
push
outsl
xchg
movsb
call
cmpsl
in
mov
fdivrl
adcb
call
xchg
pop
addl
imul
push
sbb
mov
mov
adc
adc
jbe,pn
sahf
aas
aad
sahf
imul
insl
repz
jl
inc
pop
std
pushl
ret
sbbl
push
repnz
lcall
jmp
es
dec
or
xchg
adc
lret
push
loope
sub
clc
mov
imul
xchg
ret
arpl
lcall
mov
loopne
cmp
test
jmp
out
or
inc
or
fs
dec
add
fwait
and
and
xchg
mov
ficoml
lahf
fldl
pop
inc
cmp
sub
push
fimuls
pop
fnstenv
mov
xchg
in
jg
decl
lock
vsubss
or
sub
sbb
xchg
xlat
mov
lods
mov
call
mov
mov
sbb
cli
push
sub
xor
shr
lcall
and
rorb
mov
and
repz
mov
daa
out
loopne
jecxz
ljmp
dec
mov
push
into
and
sub
adc
sub
pop
adc
std
sbb
shll
adc
lcall
icebp
sub
sti
sub
clc
push
xchg
clc
daa
sub
int
mov
adc
adc
adc
xor
mov
sbb
rorl
lea
jecxz
lock
mov
filds
sbb
dec
loop
call
ljmp
in
dec
stos
out
sbb
fistps
sti
mov
jecxz
sti
test
dec
sbb
mov
sbb
ret
aad
xor
in
hlt
lods
pop
push
pop
mov
sbb
stc
mov
add
adc
inc
mov
inc
mov
push
xor
cli
add
jno
out
jne
pop
hlt
addr16
ljmp
test
push
mov
pop
addb
mov
push
push
dec
mov
std
jae
sbb
dec
and
sbb
fstpt
xchg
popa
sub
and
sub
fildll
ljmp
jmp
in
mov
xchg
daa
mov
fwait
sbb
fwait
cmp
jmp
xchg
dec
push
xor
imul
lds
test
rcr
hlt
lcall
sbb
test
mov
jbe
pop
shrb
cmp
ffreep
cmc
jo
out
sbb
mov
sbbl
sub
cmc
push
mov
cld
pop
iret
loopne
push
scas
xor
inc
mov
or
ja
hlt
jmp
rcrl
fcoml
lahf
sbb
jbe
aad
push
inc
push
push
inc
xlat
sub
mov
out
out
call
insl
jbe
or
loope
es
outsl
pop
pop
insb
cli
inc
push
jg
decl
cli
xchg
push
lock
dec
stc
movsb
cmpsb
and
jmp
xor
call
sub
les
inc
jle
std
test
mov
inc
adc
inc
xor
lcall
mov
add
in
cmp
xor
dec
jg
filds
mov
jmp
push
addl
clc
fsubrs
jbe
and
fwait
mov
loopne
jg
cli
push
lds
scas
jmp
mov
mov
enter
xor
push
stos
push
xchg
mov
insb
adc
ret
add
pop
and
das
jecxz
jns
loop
in
push
dec
ljmp
sti
mov
mov
loope
clc
andl
lods
shlb
or
aaa
or
decl
push
inc
push
divl
loope
std
fwait
jmp
xchg
lods
fnstcw
fimuls
jg
incl
sbb
sarl
out
xchg
push
inc
inc
and
popw
pop
pop
outsl
xchg
xor
cltd
jbe
add
inc
mov
push
mov
inc
negl
adc
mov
ja
lcall
dec
xchg
mov
jo
pop
and
ljmp
mov
lcall
mov
mov
in
and
jmp
xor
cmp
loop
pop
sub
jmp
xchg
js
pop
sbb
aam
add
mov
arpl
dec
mov
test
incl
mov
lods
mov
jno
aad
aad
push
int
xchg
out
mov
adc
incl
pop
repz
mov
xchg
pop
aam
decl
add
sbb
sti
and
js
lods
sti
popa
mov
add
jb
loopne
xor
adc
add
push
sbb
push
jecxz
idiv
mov
dec
add
cmp
dec
cli
add
inc
int
jbe
cmp
cmp
jmp
jge
dec
cmp
jg
sbb
push
in
sbb
stos
mov
imul
ljmp
shr
sahf
das
insl
mov
rorl
es
fwait
mov
mov
xor
jmp
clc
adc
jbe
mov
adc
add
cmp
adc
aam
sub
ljmp
or
nop
xor
xor
dec
popf
cmp
outsl
and
cmc
jg
ffreep
xchg
add
inc
lcall
lea
adc
ljmp
adc
push
pusha
push
das
jl
enter
xor
mov
cwtl
inc
ljmp
sub
fldenv
in
das
ja
cli
xlat
sbb
popf
or
decl
inc
jl
push
in
dec
roll
lcall
fildll
loop
push
cmp
pop
insb
popl
xchg
jmp
pop
in
dec
push
jmp
mov
lret
xchg
pusha
adc
inc
stc
mov
inc
lahf
icebp
cmpb
pop
mov
xchg
test
je
cmp
sub
xlat
scas
jbe
lods
decl
mov
push
adc
cmp
jg
and
xor
or
incl
mov
sarl
and
lahf
scas
test
pop
loop
outsl
xchg
insb
xchg
jmp
sar
push
jo
add
add
fsubr
cmp
push
adc
mov
sarb
aad
jp
popf
cmp
call
repz
mov
jae
daa
out
sbb
sub
dec
scas
mov
pushf
push
cmp
incl
nop
mov
movsb
and
test
jl
movsb
dec
push
dec
or
sub
mov
pushl
pop
and
ds
xchg
mov
dec
xor
jne
imulb
sub
ljmp
or
mov
push
in
movsl
outsl
jne
push
ss
iret
push
popa
ss
rclb
ljmp
inc
es
add
hlt
int
mov
lahf
ror
push
aas
test
test
jbe
pushl
inc
das
je
xchg
mov
les
jmp
call
mov
adc
call
test
mov
stc
mov
push
test
insb
incl
mov
push
fisubl
aad
stos
xchg
insb
dec
and
test
or
lcall
lcall
adc
adc
fisttps
mov
cmp
jne
jo
aam
jo
xchg
call
mov
cmp
lock
and
xor
xchg
add
push
lcall
push
leave
andb
or
rolb
mov
pop
jmp
cmp
decl
je
insb
pop
out
iret
sub
add
in
inc
mov
lahf
dec
js
add
sbb
incl
mov
popa
imul
lcall
mov
adc
jmp
repnz
test
inc
shl
dec
fdivr
lret
fcmove
jo
add
adc
add
call
into
inc
lcall
xchg
scas
in
cmp
out
addr16
and
mov
std
jg
pushl
or
ljmp
nop
mov
sub
mov
adc
call
jo
mov
cmp
push
inc
xor
lds
incb
xchg
lret
decl
lock
xor
hlt
mov
mov
dec
mov
aas
cmp
sarb
xchg
in
out
ss
pop
pop
sbb
in
clc
jg
ljmp
loopne
xchg
cmp
fwait
xchg
inc
sbb
fcoms
adc
ret
addr16
sub
xchg
fcomip
rolb
jge
aas
xlat
add
das
cmp
add
aad
jmp
imul
fmuls
gs
jmp
jbe
hlt
push
hlt
cmp
rorb
mov
mov
sub
pushl
mov
rcr
nop
pushf
and
lahf
in
jge
add
lret
nop
rcr
in
ret
jg
jmp
stos
incl
std
cmp
pushf
aad
aad
fwait
push
daa
stos
fnsave
push
rorb
pop
pusha
adc
std
repnz
pop
cmp
mov
incl
dec
loopne
frstor
xchg
jns
jns
mov
imul
divb
and
inc
pop
pushl
shll
adc
cwtl
in
insb
push
cld
in
mov
push
sbb
stos
and
decl
test
mov
cwtl
jmp
cmpsb
ljmp
xchg
lcall
xchg
test
cmc
nop
push
add
or
ja
inc
inc
adc
inc
sub
fcoms
cli
mov
mov
and
jo
mov
add
dec
hlt
or
jg
fmuls
call
mov
repz
js
call
or
sub
out
xor
cmpsb
and
stos
mov
mull
scas
insl
inc
push
mov
aad
rcrb
fdivrs
je
call
mov
mov
mov
dec
xchg
ss
movsl
scas
sub
sbb
push
jb
call
std
mov
pop
dec
pop
inc
in
adc
js
std
aad
xchg
lcall
cld
mov
cli
orb
add
mov
ret
iret
pop
pop
loop
push
push
daa
sub
xor
js
dec
outsl
xor
aas
daa
pop
cwtl
popa
push
cmp
jmp
and
cmp
cld
mov
cmp
scas
and
and
xor
out
dec
mov
push
jno
arpl
jae
push
lcall
or
cmpsb
pop
mov
pop
jne
mov
lds
lea
lea
daa
or
repz
cmp
das
pop
pusha
xchg
dec
mov
int3
push
ds
push
and
mov
cmc
outsl
cli
mov
movsb
sbb
sbbl
rcll
pop
divb
sub
push
test
cmc
xchg
sub
shll
pushl
sti
inc
dec
inc
int3
cmpsb
or
sbb
inc
push
pop
and
arpl
hlt
and
outsl
sti
lahf
sbb
insb
sahf
cmp
add
push
mov
in
sbb
sub
lods
sbb
fwait
dec
shrb
addb
andb
sub
and
jg
cmc
shll
stos
mov
in
inc
adc
mov
dec
xor
rcll
sbb
je
mov
clc
call
jmp
jnp
test
cmp
xor
push
jl
jp
addb
push
in
aaa
xchg
ljmp
clc
call
dec
cmpsb
sarl
pop
hlt
adc
jle
cmpsb
stos
mov
cmp
or
popf
dec
mov
shll
jge
in
or
adc
lcall
das
enter
jecxz
push
mov
cmpsb
jge
sti
nop
fists
mov
jp
pushf
fwait
cwtl
and
sbb
push
inc
ja
jns
add
fwait
into
aad
call
cwtl
lea
inc
cmp
int
ret
mov
sub
jne
call
das
cmp
dec
das
mov
je
rol
mov
pop
mov
xchg
aad
cmpl
data16
pushl
mov
inc
mov
subl
aam
in
mov
int
movsl
fistpl
and
aaa
std
decl
or
inc
popa
push
div
xlat
push
pop
int3
xor
jae
insb
mov
stos
je
pushl
bound
int3
adc
cmovb
jge
jg
push
mov
dec
push
int
out
mov
lcall
repnz
mov
and
iret
add
jmp
cmc
insl
jg
enter
lcall
jno
sbb
stos
pop
nop
cltd
mov
dec
jmp
call
or
xchg
push
stc
jno
cmpsl
mov
push
imul
addl
je
lock
in
jnp
dec
fsubr
cmc
fildll
add
jbe
gs
mov
decl
xor
adc
in
adcb
ljmp
mov
movsl
lea
jmp
cli
mov
mov
cltd
jge
dec
iret
ss
ljmp
call
mov
enter
inc
mull
aam
imul
inc
xor
dec
cmp
pop
daa
jne
inc
dec
data16
xchg
cwtl
dec
mov
sarb
push
cmpsl
inc
and
push
aad
pop
dec
lock
jmp
sub
rcrb
mov
and
shlb
pushl
test
stc
scas
ret
sbb
push
movsl
cltd
add
cmp
sar
add
lods
inc
loopne
in
sbb
pop
or
ljmp
repnz
xor
push
fs
rorb
inc
decb
sub
mov
cmc
ljmp
adc
test
fwait
mov
inc
lcall
dec
pop
in
clc
lcall
xor
mov
sbb
enter
lcall
pop
movsl
orl
xchg
jo
je
dec
xor
sub
mul
das
lret
fldenv
shlb
jmp
push
add
hlt
dec
and
lea
ds
enter
cld
jl
jp
pop
ljmp
pop
and
fldenv
ljmp
stos
and
dec
lods
jle
call
daa
pop
mov
clc
ljmp
div
and
jmp
mov
jno
jp
call
push
fstpt
stos
popf
out
popf
and
cmpsb
mov
sbb
add
loopne
int
mov
dec
xchg
adc
mov
daa
stc
icebp
push
pop
lcall
xor
decl
iret
dec
mov
mov
imul
sbbb
sub
mov
jmp
mov
cmpsb
cld
daa
or
xchg
nop
sahf
adc
jne
mov
iret
filds
jmp
mov
xlat
in
ja
ss
mov
dec
push
addl
test
dec
cmc
pop
mov
ljmp
fiadds
les
push
mov
dec
ja
lahf
sub
xchg
sar
mov
fmul
das
insb
cld
inc
sbb
pusha
mov
lea
inc
push
outsl
cmp
jmp
add
daa
scas
ja
stc
or
lods
adc
pop
xchg
mov
out
cltd
mov
nop
icebp
pop
mov
push
divb
xchg
pop
repz
mov
push
nop
inc
sub
add
and
data16
ljmp
call
mov
hlt
les
adc
mov
dec
mov
out
add
pushl
stc
out
cmpsl
mov
or
jle
gs
mov
cmp
subb
hlt
ljmp
xor
test
adc
xchg
ret
loope
nop
sub
cmp
add
pushl
jb
or
test
hlt
jae
jl
repnz
or
enter
jg
xor
dec
and
das
mov
mov
xchg
adc
aas
jbe
ljmp
and
outsl
fadds
or
dec
dec
aaa
ljmp
into
cltd
out
mov
xchg
test
jns
sbb
in
mov
es
incl
das
dec
cmpl
dec
fmull
and
dec
stos
ja
mov
inc
ret
mov
jno
inc
iret
pop
sbb
fiaddl
xchg
inc
xchg
pop
cli
frstor
jg
dec
adc
stos
inc
jge
mov
addl
pop
fld
pop
mov
int
lahf
into
inc
in
cs
pop
cmpsb
mov
ficoms
or
jmp
jle
sub
popf
push
es
in
cwtl
nop
cwtl
push
mov
inc
clc
mov
fadd
lods
mov
je
je
mov
bound
fwait
xchg
loope
pop
addb
fsts
add
lock
xor
shll
mov
cmp
cmp
ret
mov
arpl
ds
xchg
testb
addb
push
stos
cli
test
and
notb
or
dec
cmp
sub
sbb
fidivrs
sbbb
fsubrs
mov
adc
rcr
decl
fnsave
faddl
sbb
add
jle
fbld
jg
sub
stc
add
clc
mov
lock
lcall
cmp
lahf
push
xchg
loopne
aad
loop
test
mov
fcoml
arpl
adc
call
cwtl
cmp
xchg
ret
and
enter
jecxz
scas
nop
xchg
fcmovnb
data16
bound
adc
in
decl
and
mov
mov
popf
mov
lret
loop
int3
xorb
insb
sbb
imul
ljmp
pop
sub
push
jne
aaa
sub
lcall
jecxz
sub
jbe
test
mov
repnz
adc
xlat
sub
jns
add
and
push
call
adc
cmp
mov
rcrl
push
add
mov
xchg
out
sbb
in
xchg
das
imul
jge
rcl
test
or
out
pop
out
mov
cmp
mov
add
stos
inc
add
push
mov
imul
add
add
jmp
adc
cmpsl
inc
mov
jns
les
jmp
addr16
push
cmc
add
in
xor
mov
cmp
inc
dec
cli
xor
icebp
ds
jo
ljmp
and
mov
or
insb
add
insb
mov
out
push
into
rcrl
test
ljmp
in
or
xchg
in
cmpsb
sbb
xchg
mov
call
mov
lcall
in
mov
out
popl
xchg
imul
pop
mulb
aas
fildll
jmp
ja
jle
clc
outsl
dec
lcall
movsl
pop
and
sar
scas
in
jbe
jecxz
fisubrl
xchg
pushl
sub
mov
fiaddl
pusha
dec
lret
shrb
ror
push
stc
lcall
jmp
call
enter
fildl
jmp
xchg
pop
cmp
outsl
jmp
decl
out
sub
xchg
std
rclb
push
adc
je
jle
mov
aas
mov
das
decb
imul
loop
mov
leave
fidivrl
call
mov
scas
les
cmp
or
or
jge
mov
aaa
insl
and
das
clc
mov
cmc
fucom
leave
fwait
cltd
inc
inc
cmp
or
jl
call
les
loopne
cmp
nop
outsb
rcrb
cmpsl
and
add
pop
add
jg
and
aam
jp
lock
incl
fchs
sub
jns
insb
jl
idivb
dec
rorb
mov
dec
cmp
inc
loopne
sbb
flds
cmp
mov
sbb
ljmp
rorb
mov
jns
loope
or
aam
add
dec
out
cli
ds
mov
loopne
in
dec
dec
push
xchg
add
xor
sti
push
mov
test
pop
mov
and
cs
push
movsb
in
std
dec
int
and
push
ficoml
mov
push
out
cmp
pop
out
adc
push
ljmp
mov
call
rorl
jp
sbb
leave
icebp
mov
sarl
pop
fstpl
jmp
call
xor
int3
stc
data16
call
lock
subl
mov
jle
mov
test
xor
adc
xchg
dec
fmul
add
push
mov
fists
fnstenv
jge
ja
jmp
cli
push
adc
jecxz
rcrb
test
sub
fidivrl
inc
call
pop
data16
mov
icebp
jg
xchg
pop
pop
popaw
pop
test
jp
dec
pusha
rcrb
decl
add
sub
pop
xor
dec
cmp
jne
outsb
les
pop
outsb
sti
xor
xchg
pop
shll
incl
jno
pop
dec
testl
bound
loope
or
call
std
fs
ljmp
sbb
sub
sbb
test
add
add
jmp
dec
cwtl
cmc
add
mov
shrl
mov
add
out
jmp
and
add
mov
incl
lods
add
xor
aaa
sarl
movsb
out
sti
sub
stc
push
and
jecxz
or
or
incl
data16
mov
cmp
mov
inc
lods
push
loope
xor
inc
fsubl
xchg
jmp
inc
jns
in
mov
xor
dec
jno
push
in
lret
xor
andl
mov
dec
jmp
adc
rorb
adc
test
pusha
sahf
and
nop
jl
call
stc
les
sbb
insl
jne
sub
sahf
mov
fwait
scas
or
std
decl
pop
ljmp
int
pushf
bound
xchg
js
lods
ss
dec
mov
incl
test
sbb
inc
aaa
pop
sbb
pop
je
xlat
cmp
jnp
jg
call
or
dec
or
int
icebp
xor
jle
add
inc
orl
incl
scas
adc
xchg
stc
push
outsb
mov
jno
shll
push
pop
xchg
sub
jmp
call
bnd
arpl
lods
jecxz
mov
xor
insb
into
push
call
cli
mov
and
inc
jg
sub
into
pop
nop
ljmp
xchg
pop
test
fdivs
sahf
sti
xchg
cld
and
xchg
loopne
ds
adc
cwtl
ljmp
mov
xlat
add
sarl
popa
lock
shrl
push
sti
push
mov
fwait
dec
pop
cmp
in
in
sub
xchg
jo
or
emms
mov
icebp
push
jb
sbb
pop
pushf
cwtl
jge
adc
mov
jle
lock
adc
cmp
xorb
incl
fisttpll
lea
call
sahf
xchg
fildl
xlat
or
xor
lods
je
call
and
jecxz
sub
mov
mov
repnz
lock
dec
cltd
push
fldcw
incl
stos
fistpl
mov
mov
mov
xchg
outsl
stc
in
insb
dec
xor
pushl
addr16
jb
xchg
imul
test
add
stos
movsl
mov
pushl
imul
adc
cltd
sti
rclb
jo
je
stos
pusha
push
add
push
dec
stos
cmc
mov
and
inc
ljmp
xor
sbb
and
stos
cwtl
loope
dec
pop
ljmp
pop
pusha
lcall
jno
dec
repnz
mov
dec
pop
lret
push
hlt
sub
jp
test
ss
pop
pop
cmp
in
ret
xchg
faddl
scas
ja
dec
push
mov
hlt
and
mov
push
jno
mov
aam
and
das
call
or
sub
add
mov
mov
mov
sub
repnz
roll
decl
jp
jne
dec
fiadds
lcall
dec
xchg
adc
iret
cmp
pop
or
cmp
jmp
pop
and
in
push
dec
cmp
sarb
lcall
lods
inc
mov
xchg
and
ret
cmp
addr16
fsubs
add
mov
cmc
push
jg
cli
enter
pushl
mov
mov
iret
popa
andb
mov
or
sbb
xchg
into
pop
jb
pop
push
mov
call
cld
mov
xchg
jae
xor
gs
sub
xchg
pop
cs
push
or
fldcw
imul
popf
jl
jns
mov
pop
inc
insb
cwtl
shrb
xor
inc
inc
notb
xor
jbe
mov
gs
dec
out
or
xor
adc
aas
mov
or
mov
jmp
fisttpll
or
aam
addr16
rcr
cld
fcompl
cltd
and
hlt
and
ljmp
repnz
lds
jbe
pop
jecxz
inc
scas
sbb
fwait
push
mov
outsl
leave
mov
pop
mov
ljmp
out
adc
mov
icebp
sub
fmul
orb
xchg
cmc
mov
pop
lock
fstpt
ret
lea
sub
or
inc
pop
or
add
call
call
add
pop
clc
or
xchg
sbb
mov
jle
fs
movsb
leave
inc
shrb
adc
fmull
sbb
lret
es
nop
lahf
or
mov
daa
jp
mov
pop
std
mov
sbb
mov
fdivp
or
mov
imul
shrl
xchg
push
popf
or
pushl
std
sarb
test
fiadds
mov
clc
decl
jb
mov
mov
sahf
cld
into
ljmp
cmp
subl
out
push
stos
test
movsl
fimuls
inc
in
dec
mov
ljmp
push
lods
add
xchg
xchg
jle
and
mov
pop
cmp
imul
or
decl
xchg
movsl
push
ficomps
nop
mov
adc
push
dec
xor
mov
imul
loope
sbb
decl
lock
push
ljmp
xor
cmpsb
xor
pop
in
jecxz
decl
das
mov
push
mov
jp
aas
xchg
clc
test
mov
dec
mov
jg
arpl
loop
jecxz
add
jne
and
je
inc
or
xor
call
push
in
out
ret
pushf
jg
inc
lret
xchg
dec
adc
imull
xor
ja
incl
scas
lahf
mov
adc
fstl
or
add
test
mov
cmp
push
in
cld
mov
jmp
add
out
mov
popa
in
js
add
loop
cli
insl
xchg
inc
out
or
jmp
popa
jbe
scas
jecxz
cmp
lret
pusha
mov
in
inc
push
ss
or
movsb
jle
das
dec
lock
lds
mov
sub
decl
mov
shll
sbb
adc
inc
adc
les
push
inc
addl
lds
pushf
cmp
jo
mov
in
jp
dec
xor
push
sub
sbb
or
rcrl
dec
incl
pusha
dec
sti
dec
or
aam
dec
push
adc
test
jmp
sbb
jl
dec
inc
ss
sbb
cmpsb
pop
dec
mov
cmp
sar
pushl
pop
stos
cld
mov
mov
or
jno
nop
add
out
xor
xchg
push
jmp
jne
push
pop
jmp
repnz
mov
ja
jmp
mov
sbb
sub
pop
jbe
incl
xor
lock
cmp
dec
test
mov
stc
sub
push
lods
xchg
out
xor
scas
sub
adc
ds
push
ret
cld
lcall
nop
xor
int
pop
ljmp
arpl
leave
js
push
inc
enter
lcall
jecxz
add
cmp
mov
dec
jle
lods
call
jmp
push
iret
inc
adc
mov
inc
push
fwait
scas
fs
dec
sub
push
push
call
jb
cmpsb
dec
std
mov
loope
xor
mov
add
or
adc
mov
mov
call
pop
jnp
xor
into
lea
inc
imul
lret
pop
pop
and
pushf
jge,pt
jmp
ljmp
aad
inc
dec
out
pop
inc
sbb
jmp
popa
repnz
jo
and
sbb
jmp
mov
sbb
add
fdiv
jle
and
test
mov
sbb
fnstenv
rorb
inc
jecxz
gs
ret
test
adc
jmp
or
jmp
pushl
std
shl
ret
es
mov
sub
and
fnstenv
aad
call
adcb
sub
adc
jb
shlb
cmp
mov
movsb
shr
data16
int
outsl
pop
inc
and
pop
mov
push
cs
movsb
adc
decl
rclb
xchg
or
xchg
jge
jmp
icebp
mov
cmp
bound
adc
pop
lea
adc
xor
xchg
aaa
xlat
mov
inc
xchg
lds
js
jp
adcb
cmp
inc
inc
fnstsw
add
pop
dec
push
fsubp
inc
loop
push
enter
jb
out
xor
jg
pop
je
mov
pop
addb
ja
int3
cmp
xor
mov
jmp
cmpb
push
pop
jg
mov
inc
jmp
cmp
sbbb
pop
and
xor
adc
push
or
adc
pop
xor
dec
sbb
pushl
fwait
repz
sbb
subl
jmp
jno
cmc
mov
dec
stos
cmp
nop
and
aad
std
sub
lcall
sbb
ret
lcall
mov
in
lods
mov
mov
inc
cs
and
data16
mov
out
hlt
mov
sar
mov
inc
or
aad
clc
test
popf
icebp
mov
pop
or
sbb
xor
sbb
push
roll
ljmp
jmp
jmp
push
adc
test
pushf
lcall
jl
mov
js
les
lret
das
and
jl
adc
lods
jb
or
incl
inc
dec
lret
lods
mov
rol
leave
lcall
in
fbld
jmp
pop
cltd
rcrl
ret
cwtl
lock
pop
sub
mov
lds
mov
jns,pt
jbe
repz
inc
popf
mov
push
shlb
push
sub
ss
imul
int3
adc
or
fdivrl
dec
inc
aas
xchg
insl
ret
jae
jnp
loopne
in
out
add
push
outsb
enter
xlat
mov
addb
lods
push
and
cli
out
mov
jle
imul
jnp
mov
or
mov
cmp
fcomi
pop
shll
xorb
fs
insb
xchg
cmp
movl
pop
fldt
aam
xor
xchg
in
or
xor
cmp
xchg
mov
sbb
xchg
gs
aam
xchg
test
mov
out
mov
add
mov
sahf
fsub
adc
xor
call
push
sbb
test
pop
fmull
call
sbbl
stc
cmp
cmp
mov
ljmp
push
mov
mov
sti
outsl
std
dec
shlb
adc
std
cli
outsl
decl
lods
arpl
test
movsl
sub
mov
or
aaa
jge
addl
rol
mov
incl
dec
add
in
dec
movsl
arpl
insl
or
add
mov
sub
xor
mov
pop
std
in
xor
push
repz
sub
rcr
dec
test
ret
adc
aaa
call
sbb
sti
cwtl
jne
cmp
lret
adc
roll
inc
icebp
pushf
xorb
sbb
mov
incl
mov
sahf
adc
push
clc
xchg
popa
mov
push
or
fisubrs
out
dec
and
jno
push
mov
push
xchg
push
jl
dec
inc
leave
notl
mov
cwtl
dec
call
sti
mov
mov
in
pop
lcall
xor
push
push
aad
out
fmuls
mov
pop
adc
faddl
call
adc
or
testl
movl
jp
out
pop
adc
or
je
mov
push
cmp
push
out
cmp
enter
and
pop
inc
add
and
cli
out
sbb
sbb
xor
sbb
scas
dec
lahf
data16
push
sbb
cmpsb
outsb
mov
sbb
mov
xchg
mov
aaa
insb
push
and
hlt
xor
add
insl
dec
sbb
cmpsb
data16
or
incl
cmp
inc
jl
cmc
mov
lret
dec
sub
jno
ficoml
je
jno
push
mov
jmp
sub
or
add
fsubl
sub
sahf
jnp
daa
dec
gs
pop
stos
ljmp
call
pop
add
pop
stos
rorl
movsb
movsb
mov
loop
xor
incl
decl
sbbb
cs
xchg
in
mov
inc
call
ljmp
ds
cmp
aad
lret
push
test
mov
sti
repnz
negb
pop
mov
js
xlat
adc
cmp
fsubrl
test
lcall
and
xor
adc
ds
xchg
adc
popf
es
mov
out
mov
loope
dec
mov
clc
inc
mov
pop
bound
mov
cmp
ljmp
jbe
lods
orb
in
lahf
mov
lods
bound
vpsubb
ljmp
mov
das
xchg
out
xor
test
mov
and
fisttpll
adc
les
jae
xor
enter
mov
fcomip
inc
ret
adc
stos
dec
push
les
mov
sub
imul
mov
mov
sub
jmp
cmpsb
mull
in
add
mov
jo
in
icebp
je
mov
dec
test
sti
inc
ret
pushl
xchg
hlt
pusha
sbb
sbb
bound
sti
loopne
xchg
jp
in
push
pop
out
lock
sarl
push
sub
jge
mov
sar
mov
idivb
add
jmp
pop
lcall
or
push
test
mov
jle
fwait
or
ss
outsb
jns
pop
ljmp
xchg
mov
icebp
jg
je
cmpsl
jle
popf
or
mov
sbb
mov
sub
jmp
mov
int
adc
decl
sar
dec
out
addr16
daa
push
pusha
and
and
mov
incb
insb
mov
aas
adc
cld
arpl
hlt
decl
inc
inc
stos
or
fnstsw
fs
xchg
popf
jne
jno
popf
subl
call
test
lahf
cmp
imul
mov
mov
lods
mov
xchg
negl
fmull
mov
cmp
mov
jg
jl
rolb
imul
xor
fsubrs
sbb
xor
ljmp
mov
or
aas
outsb
xor
inc
inc
js
shl
ja
or
or
add
pop
leave
pop
mov
incl
out
mov
aam
out
cli
pushl
cmpsb
ja
stc
mov
fldl
xlat
and
dec
mov
and
sub
push
jno
cvttps2pi
add
in
mov
outsb
aas
xor
icebp
rcrl
cmc
xchg
mov
sub
cmp
scas
xchg
add
pop
loopne
push
jl
and
clc
incl
or
pop
add
pop
inc
push
sub
sbb
rorl
imul
repz
lcall
or
in
xchg
pop
div
pop
lcall
sub
mov
xchg
pop
xchg
out
notb
call
cld
push
xchg
iret
sbb
pop
xor
xchg
cmp
mov
cmp
lods
pop
mov
stos
fcomip
fcomip
and
lcall
jg
add
pop
ret
pop
cld
mov
mov
xor
jnp
inc
inc
pop
pop
xchg
pop
push
enter
pop
jp
adc
adc
call
test
jmp
xchg
adc
and
inc
push
pop
jle
ret
xor
mov
sub
pushl
xchg
mov
add
fnstcw
push
cld
in
mov
cmp
jp
repz
ljmp
enter
test
dec
jbe
mov
pop
ror
daa
loopne
sbb
movsb
pop
movsl
insb
jbe
shrb
hlt
fdivrs
pop
mov
push
pop
cli
int3
inc
mov
call
aam
bound
sti
adc
inc
inc
icebp
out
ss
lods
pop
mov
movsl
stc
and
sub
das
into
sbb
mov
pop
lcall
and
sbb
pop
or
pushaw
push
add
pushl
pop
push
hlt
cli
sub
jns
inc
mov
or
mov
dec
xor
lcall
xor
aad
jl
shrl
inc
xchg
inc
inc
rorl
dec
in
inc
clc
lcall
mov
xor
out
hlt
jge
or
out
into
cmp
shll
pusha
push
fcmovnb
cmc
jae
push
insl
cmp
cmp
dec
mov
dec
cmpsb
fdivrs
outsl
test
adc
cmpb
lcall
cs
mov
incl
xchg
pop
call
mov
popa
ljmp
push
dec
js
inc
iret
adc
lcall
inc
sbb
mov
in
pop
andb
inc
mov
loopne
cmp
sbb
cmp
dec
ljmp
fidivrs
aad
push
gs
icebp
mov
sbb
out
push
fwait
pop
mov
inc
popa
ljmp
int3
loop,pn
cmpsl
inc
pusha
mov
cmp
inc
lods
or
ljmp
adc
jecxz
dec
sti
jmp
or
int3
lret
movsb
or
jae
inc
push
stc
and
lcall
testb
ljmp
inc
iret
inc
xchg
int3
inc
push
xor
and
dec
pop
test
cmc
jg
int
push
xorl
inc
xchg
inc
lods
mov
daa
cmpsb
ret
icebp
incl
cli
scas
cmpsl
ror
bound
mov
mov
ljmp
jg
pushf
outsl
shrb
push
mov
xchg
jg
nop
dec
lods
inc
test
mov
pop
fwait
mov
jb
loopne
out
adc
jne
pushl
add
out
ficomps
loope
xlat
mov
fistps
gs
cwtl
pushl
int3
fildll
int
arpl
or
mov
add
in
mov
mov
mov
aam
imul
or
lahf
lods
arpl
idiv
clc
inc
leave
or
divb
cli
popa
xchg
pop
lahf
xor
jp
loope
add
ljmp
clc
dec
inc
icebp
mov
test
and
sahf
add
movsb
fidivrs
sbb
shll
ljmp
fiadds
ja
push
inc
adc
inc
inc
les
push
adc
cmp
hlt
insl
cmp
stos
jmp
mov
test
data16
jo
xchg
push
decl
dec
roll
mov
push
and
push
fucomi
push
int3
pop
jns
xchg
leave
int3
mov
decl
test
loopne
aaa
das
push
ret
jg
jge
inc
mov
pusha
jno
outsb
push
scas
outsl
mov
les
push
pop
adc
add
hlt
xor
mov
push
sbb
mov
lds
mov
jnp
pushl
test
push
xor
aam
cwtl
nop
jnp
stc
push
stc
lds
cmp
lds
es
jns
in
fchs
mov
aam
stc
out
push
dec
aam
es
lcall
jb
xchg
xchg
std
enter
fsts
in
dec
sub
and
arpl
dec
in
jecxz
sbb
pushl
jae
adc
mov
loope
pop
ja
pop
pushf
popa
or
pop
pop
dec
ret
mov
jge
lock
decl
inc
and
inc
and
fcompl
iret
and
fdivl
push
rcl
pushl
ds
fistpl
pop
push
aam
sahf
jle
xchg
sar
pushl
fldl
mov
pop
mov
mov
mov
push
xor
mov
ljmp
push
mov
iret
int
shrl
sbb
add
int
xlat
loope
sbb
inc
mov
hlt
call
mov
test
hlt
rcr
or
je
repz
sub
gs
dec
push
jo
rcrl
push
fcoms
dec
xchg
out
out
in
in
das
cli
ljmp
dec
cmp
movsb
dec
sub
rcrb
mov
movsb
call
les
cli
mov
sti
dec
xorl
mov
add
andl
pop
ret
dec
lods
lcall
xor
leave
sbb
pop
stos
push
sbb
jmp
mov
outsb
into
je
jb
push
outsb
les
in
mov
in
pop
repz
jg
dec
jecxz
add
fbstp
movsl
lret
jb
jnp
inc
sbb
ljmp
xor
pop
shll
outsb
aam
fcomps
popf
cwtl
jae
inc
lea
jmp
mov
or
out
push
and
sar
jg
std
cmp
stos
dec
xchg
les
and
sarl
xchg
cli
outsl
or
adc
stc
popa
mov
js
push
dec
mov
pop
iret
mov
lods
adc
push
xchg
das
inc
loope
or
ss
test
sbb
pushl
rol
pop
popa
popf
loope
movl
outsb
gs
pop
inc
decb
addr16
xchg
bound
call
xchg
or
je
inc
dec
mov
sub
sti
ficoml
cmpsl
pushl
and
arpl
ret
inc
paddb
adc
adc
je
mov
push
fldl
mov
lret
lods
call
inc
call
cld
repnz
push
add
mov
jo
insb
sarb
adc
lcall
add
sbb
and
xor
pop
ret
xchg
mov
add
jl
mov
call
fs
int
dec
add
push
cli
xchg
dec
dec
dec
ret
mov
bound
lret
clc
fadd
pusha
lret
loop
int3
lods
loop
inc
add
xor
call
shll
mov
in
not
push
out
ficoml
stos
xor
adc
pop
andb
fistpll
repnz
in
idivb
adc
cmp
mov
fstp
imul
push
hlt
mov
dec
hlt
icebp
test
mov
nop
nop
xor
mov
aam
incl
scas
sbb
push
mov
nop
fs
lahf
xchg
jae
cmp
cld
ss
lcall
ss
pop
shld
push
shll
imul
jne
xchg
loopne
rcr
jle
or
out
adc
pop
ret
sbb
jns
mov
insl
and
in
in
ljmp
xchg
xchg
out
imul
enter
pop
add
lods
stc
sbbl
push
add
push
cld
cmp
mov
icebp
cmp
jecxz
lods
jmp
dec
push
es
call
add
jbe
jbe
test
lret
xchg
dec
cmp
jbe
pusha
test
add
push
pop
std
jmp
stc
or
inc
sub
sub
dec
pop
clc
std
pop
pop
inc
lahf
insb
je
xchg
mov
ljmp
and
push
je
out
hlt
cmp
pop
ja
fwait
add
jecxz
insl
xlat
pop
out
popf
or
dec
movsb
stos
inc
mov
sbb
sti
inc
insb
icebp
das
testl
int3
or
insl
sub
mov
lcall
mov
stc
fildll
int3
shl
lahf
lahf
sub
cwtl
ret
pop
jbe
nop
cmp
ficoml
sub
mov
mov
and
rcrb
xlat
aaa
shll
loopne
sar
incl
out
stos
jmp
push
cltd
lock
out
jg
jge
jl
mov
cmp
fcomip
decl
inc
pop
mov
lret
hlt
or
aad
lret
mov
cmpsl
jg
xor
and
lcall
or
popa
into
call
mov
lahf
test
jecxz
mov
loope
hlt
dec
data16
lcall
add
sbb
leave
add
mov
sbb
or
mov
xor
ljmp
mov
jae
adc
mov
adc
ret
push
sti
aas
cwtl
sbb
test
inc
arpl
decl
ret
rcll
imul
outsb
push
pop
jle
pop
call
inc
inc
dec
data16
ljmp
dec
pop
aaa
sub
adc
lret
mov
cmpsb
call
lret
xor
jno
les
popf
mov
testb
jmp
rorl
push
out
es
mov
push
outsl
in
jne
scas
sub
decl
inc
cmpsb
xchg
sbb
adc
dec
stos
ficoms
aam
cmp
js
repnz
jg
sbb
push
aam
sbb
or
cmc
cltd
movsl
iret
stos
mov
ss
icebp
idiv
shrl
je
inc
jnp
pushf
adc
jmp
mov
mov
incl
shl
js
ss
pop
add
mov
add
js
imul
sub
xor
gs
decb
popa
and
cli
cmp
fs
call
cmp
out
mov
jp
outsb
jge,pt
ljmp
xchg
inc
mov
dec
mov
xchg
mov
call
ljmp
dec
jg
in
rorl
aam
pop
push
inc
sbb
nop
add
xor
dec
int
je
fbld
in
cwtl
mov
cmp
sbb
rorl
cmp
cli
mov
sub
mov
or
fscale
and
jo
cs
xor
hlt
nop
shll
decl
stos
jno
testl
sahf
insl
xchg
or
jecxz
cli
icebp
cwtl
insl
pop
jmp
cltd
mov
cli
xchg
inc
sub
sub
pop
paddusw
mov
dec
lcall
jno
sbb
imul
sub
ret
cmp
pusha
xacquire
jmp
negb
sbb
iretw
mov
or
mov
cld
jp
push
pop
repnz
jns
scas
xchg
test
in
test
jbe
xchg
fndisi(8087
xor
inc
idivb
adc
pop
jge
xlat
mov
jae
dec
test
jg
inc
aaa
push
mov
and
negl
inc
pop
and
cmp
push
testl
pushl
fnstenv
repnz
out
pop
std
jg
shl
pop
add
gs
in
cs
mov
adc
sub
in
add
xchg
cli
shrb
insl
sub
dec
xor
sbb
pop
mov
mov
xor
push
adc
daa
jmp
lahf
and
sbb
push
jg
jmp
in
push
imul
in
inc
sbb
ret
jl
add
jmp
sbb
inc
mov
std
and
pop
jne
mov
int3
sub
cmp
xchg
jmp
rcl
jo
cmpsb
dec
or
fnstenv
sbb
scas
dec
insl
and
mov
dec
pop
lcall
jmp
cmc
rcrl
outsl
sahf
stos
sbb
std
inc
jmp
dec
push
inc
lods
sahf
push
add
call
pop
inc
xchg
jns
sub
adcb
arpl
mov
or
mov
ljmp
ja
cwtl
sbb
dec
daa
bound
js
cwtl
lret
or
shl
jno
lcall
cmpsl
inc
or
les
nop
adc
in
mov
push
cmp
pop
dec
mov
sar
adc
or
lcall
sbb
insl
cli
sbb
inc
pop
pop
pop
xor
dec
popa
mov
xchg
adc
pop
inc
ljmp
mov
xchg
cmp
push
dec
push
jns
lret
inc
bound
imul
mov
call
fwait
mov
dec
lds
mov
inc
mov
mov
push
aam
jae
push
xor
in
sbb
lods
and
cmp
int
cld
inc
loope
aad
or
shll
lcall
dec
scas
mov
jnp
cmpsb
es
ljmp
mov
into
cwtl
repnz
mov
mov
icebp
clc
mov
aam
in
pop
or
in
push
addr16
adc
push
pop
popa
xchg
push
test
sbb
or
xchg
outsl
shll
imul
call
sbb
pop
ret
dec
xlat
sbb
jae
lock
ret
insl
mov
pushf
fwait
mov
lcall
add
mov
fdivs
mov
and
mov
sahf
adc
xor
stos
mov
pushl
pop
add
sar
cmp
cltd
mov
stos
jle
fs
jmp
push
or
cmpsl
adc
cld
push
ret
push
ljmp
xchg
enter
inc
and
xor
or
add
lcall
mov
data16
movsl
into
mov
push
push
out
mov
dec
loopne
decl
rcrl
and
xlat
int3
xor
movsb
aam
enter
mov
aad
mov
jae
jns
pop
lods
push
mov
pop
ret
and
loopne
jg
dec
pop
enter
lds
xchg
cmpsb
loope
dec
sarl
adc
pushl
add
stos
adc
mov
outsl
mov
lret
cmpsb
push
cmc
sbb
sub
fsts
push
int3
dec
test
les
decl
cwtl
das
push
pop
jecxz
loop
outsl
cmc
mov
jno
mov
push
push
or
pushl
lcall
clc
rcrb
jb
in
aas
adc
jge
mov
mov
hlt
mov
rcll
std
fldenv
ljmp
add
mov
addr16
jns
mov
test
sub
mov
lods
mov
es
add
leave
jno
mov
fisttps
dec
scas
jbe
std
xlat
ret
testb
mov
test
jg
sub
pop
jmp
mov
je
and
cmp
in
mov
shl
pop
std
data16
leave
aam
mov
push
or
xchg
in
lcall
mov
jo
cmpsl
jg
test
pop
add
ljmp
push
xchg
cmpsl
leave
js
jns
lods
jno
negb
push
pop
lcall
lock
int3
test
gs
jecxz
pushl
cld
leave
mov
add
cld
xchg
shrl
out
out
push
jae
loopne
call
sub
push
pop
in
adc
and
loop
push
xor
std
dec
cmp
shlb
xchg
push
push
stos
xor
std
cmp
into
sub
add
loopne
test
fimull
jno
dec
pop
stos
pushl
icebp
xchg
xor
add
cld
jns
mov
lds
cs
aas
push
mov
decl
test
mov
jae
push
pop
pop
iret
and
dec
mov
filds
movsl
xor
inc
cmpsb
ds
jg
mov
cmp
cmp
inc
test
scas
in
lret
push
cvtpi2ps
cmp
jmp
xor
and
jbe
ss
pushf
repnz
fisubl
pushf
mov
mov
push
pop
sub
call
mov
enter
out
push
jle
div
ds
jp
jecxz
pop
cmp
xor
sbb
cmp
pop
decw
mov
lret
negl
gs
lret
sub
dec
pushf
mov
popa
mov
sub
movsb
pop
sar
cmp
sub
jecxz
loop
addr16
push
xlat
jno
xchg
sbb
call
mov
mov
lcall
clc
js
dec
or
mov
es
push
fcompl
aad
in
inc
fnstcw
leave
rclb
cmpsb
lcall
add
push
fdivr
cli
std
idivb
bound
lcall
pop
push
jmp
enter
mov
mov
jmp
mov
int
sbb
add
decb
lret
out
icebp
mov
jmp
jo
push
sub
insb
leavew
in
or
orb
shl
fidivl
lret
push
lret
lock
mov
mov
out
aam
jne
in
xlat
loopne
xchg
stos
stos
clc
jp
imul
decl
lret
or
test
lea
rcrl
xchg
pop
cmp
mov
decl
or
nop
ret
test
adc
adc
sub
add
push
ss
xor
push
into
pop
sub
decl
fucomi
push
mov
pop
in
dec
lods
out
xchg
insb
incl
jp
cltd
xchg
push
mov
fnsave
push
aaa
jns
mov
xchg
dec
dec
ja
lods
sub
push
mov
push
adcl
or
fcomip
enter
mov
push
pop
scas
es
mov
aam
push
cltd
decl
mov
gs
hlt
fstl
and
push
mov
and
add
sbb
dec
call
sbb
push
push
flds
mov
dec
retw
call
mov
cmpsl
scas
rep
add
cmc
out
or
add
mov
mov
scas
aam
in
dec
imul
push
mov
xchg
stc
fldcw
out
leave
incl
shlb
aas
lds
pop
es
and
incl
je
in
xchg
iret
adc
in
cwtl
out
ss
cs
add
aaa
lcall
test
mov
cs
push
loop
and
mov
xor
xor
int
or
shl
sbb
das
inc
lahf
lods
movsl
lret
add
pushl
popa
test
fs
inc
int
jbe
jae
outsb
ja
mov
xchg
lea
imul
mov
cmp
ljmp
xchg
xlat
dec
cmc
push
sbb
cld
inc
jle
test
dec
cli
outsb
int3
xchg
xchg
lcall
pushw
pop
jo
xchg
push
and
push
cltd
sub
sub
inc
push
push
sub
xor
pusha
lock
jmp
pushf
sub
loop
mov
mov
aad
sbb
mov
test
std
cmp
das
icebp
sbb
xor
in
mov
std
xchg
out
dec
std
sub
dec
jmp
negb
int3
cmp
mov
iret
inc
jp
div
xor
sbb
sub
call
fistpll
loopne
and
and
dec
cmc
dec
popl
cmp
sbb
adc
ret
mov
sarl
cmp
ljmp
shlb
jns
sbb
xor
loop
rcrb
sub
movsl
adc
pushf
add
xor
jb
mov
and
decl
xlat
jle
icebp
in
into
add
test
adc
sbb
decl
test
popf
cmp
mov
adc
push
xchg
gs
cmp
inc
add
jno
rorl
daa
dec
jae
adcb
push
insb
orb
dec
cs
jmp
pop
cs
sbb
ja
jmp
mov
add
cs
and
in
push
xchg
mov
push
push
fistl
fadds
sub
xorl
std
mov
mov
cli
daa
cld
dec
dec
arpl
pop
sbb
fwait
inc
pop
pop
push
std
call
into
nop
jl
cld
sbb
stos
fildl
mov
cmp
repz
into
pushl
adc
mov
mov
es
stc
into
and
add
or
ja
rorb
ds
aad
out
inc
xorl
stos
incl
aas
sar
or
dec
test
cmp
cs
aas
lret
aas
movsl
mov
std
mov
mov
or
insb
sub
leave
pop
sbb
loop
es
mov
fdivrl
test
and
es
xchg
push
incl
mov
mov
inc
std
je
push
ror
and
pop
aas
and
shlb
cmp
xchg
adc
dec
ss
outsl
push
or
sub
cmp
ret
push
lods
fstl
filds
call
xchg
xchg
fists
out
sub
xor
xchg
stos
cmp
sbb
and
call
scas
mov
xorb
dec
cld
push
inc
jge
xchg
push
jns
sub
mov
incl
mov
inc
pop
mov
cwtl
xor
fstpt
cli
je
int
dec
mov
mov
nop
inc
adc
mov
daa
sahf
xor
dec
cld
addr16
call
ds
xor
shr
dec
ffreep
mov
fldenv
cmp
mov
test
inc
adc
lcall
fisubrs
jge
mov
pushf
incl
jae
xor
lcall
push
or
repnz
idivb
shll
fcmovb
ja
cld
je
lret
in
decl
incl
xor
push
xor
pop
cmp
xchg
cmpsl
leave
repnz
stc
in
fcomip
call
mov
fcomps
pop
dec
dec
jbe
dec
push
cwtl
mov
lcall
pop
repnz
cs
ja
das
jnp
sbb
cwtl
jmpw
mov
and
cmp
cld
jmp
push
imul
arpl
lret
inc
cwtl
sahf
in
cli
add
ljmp
aas
cmp
icebp
jne
movsb
mov
stc
fnsave
mov
and
in
loope
mov
jmp
leave
movsl
fs
dec
cmp
inc
call
mov
mov
pushl
test
add
fs
sub
pop
sub
xor
adc
std
cmpsb
std
lret
mov
gs
sub
les
add
stc
fwait
adc
sub
inc
sahf
outsl
pop
inc
leave
les
lea
enter
jmp
adc
mov
xchg
xchg
sub
inc
inc
inc
add
mov
stos
xchg
or
aaa
cld
mov
and
cmpsb
inc
jge
cmpsb
mov
jg
adc
cld
lahf
xchg
adc
xor
pop
inc
mov
jae
cmp
lods
fsubrl
testl
jb
in
mov
sub
loope
xchg
xchg
pop
add
and
into
loop
call
mov
es
ds
cld
sbbb
adc
mov
das
js
js
incl
sbb
xor
sarb
or
xor
es
outsl
jg
clc
and
pop
sub
cmp
out
fistps
jle
fstl
mov
add
dec
jge
or
jmp
das
jne
movsb
mov
and
pop
loope
xchg
std
stos
call
aad
add
inc
out
sbb
inc
mov
jmp
sbb
stos
popa
jo
loope
mov
xchg
inc
std
pusha
stc
inc
icebp
cmp
push
mov
cmc
push
jo
cltd
aad
cli
ja
dec
add
in
out
xor
pop
sbb
aad
mov
rcrl
inc
dec
mov
arpl
and
lcall
sti
andl
dec
push
jg
icebp
mov
jp
mov
out
mov
and
ficomps
cmp
test
jp
pop
lock
hlt
movsb
cmp
test
jmp
mov
outsb
int
out
dec
mov
lea
xchg
ret
fwait
inc
out
mov
test
les
lahf
mov
dec
cmp
ret
pause
cmp
pusha
call
std
fistps
out
mulb
imul
or
cli
pop
sub
decl
fs
mov
pop
sti
xor
and
cmpsb
sub
test
nop
jb
push
sbb
sbb
fmulp
jb
mov
push
inc
es
adc
push
add
mov
call
and
push
jmp
mov
out
dec
ljmp
mov
cmp
inc
fs
cs
inc
and
scas
mov
fimuls
cmp
icebp
add
cli
incl
sub
cwtl
aas
mov
cmp
sub
mov
fcmovnu
lock
scas
in
pop
xchg
xor
jmp
cld
add
xor
pushf
lcall
mov
ljmp
stc
push
inc
popa
out
inc
jo
cmpsb
ljmp
or
cmp
scas
xor
rclb
pushl
int
fiadds
cmpsb
int3
shr
mov
pop
rclb
and
add
pop
dec
sti
ljmp
shrl
ljmp
loopne
sub
test
mov
outsl
cld
jg
and
lret
or
pushf
int3
leave
sbb
sub
bound
push
dec
fadd
stos
jge
movb
roll
fimull
lcall
xchg
aas
nop
repz
int
fistpl
pop
lret
fisubs
cmp
leave
add
stc
loop
or
sub
out
bsr
call
scas
loope
and
pop
jbe
outsb
iret
add
jbe
loopne
and
mov
pushl
push
xor
xchg
lock
adc
pop
inc
or
inc
cmp
loopne
push
je
call
cld
aad
test
cld
in
jle
aam
pushf
dec
mov
ret
mov
incl
xchg
decb
enter
push
jae
decl
pop
loopne,pn
mov
call
test
dec
lods
movsbl
or
lods
pushl
xor
adcb
mov
push
aas
daa
imul
test
lock
shlb
sub
test
jmp
cmp
or
and
and
ret
inc
scas
mov
and
ljmp
jmp
test
mov
or
lea
sub
out
pop
xchg
sub
div
sti
or
ds
ja
aam
mov
pop
mov
sub
jno
daa
jl
mov
xor
lods
mov
fldt
push
sbb
inc
data16
and
pop
cwtl
std
incl
cld
in
cmp
adc
shlb
inc
mov
insl
fcomip
pop
add
sub
nop
int3
sbb
pop
or
loopne
aaa
dec
xchg
mov
sbb
filds
das
pop
xchg
push
mov
outsl
or
gs
push
and
lcall
xchg
pop
jb
pop
jbe
and
lahf
lcall
dec
inc
cmp
or
jmp
cmp
mov
pop
xlat
dec
xchg
inc
sub
inc
mov
clc
fcompl
arpl
decl
pusha
outsl
adc
lock
addl
pushf
into
inc
sub
sbb
lcall
jns
divb
lret
mov
hlt
cmpsl
cmpsb
inc
sbb
out
nop
insb
lret
das
cmp
inc
shr
push
and
sbb
mov
xchg
fisubrl
ss
push
inc
les
push
mov
bound
ljmp
dec
cs
pop
into
add
mov
stc
das
sub
adc
sbb
incl
es
mov
sti
xchg
mov
movsl
mov
and
adc
sub
lock
adc
mov
lret
adc
outsb
mov
dec
ja
mov
ljmp
fldlg2
xlat
jno
cmpl
call
mov
inc
inc
adcb
push
push
aas
xchg
fdivrs
dec
gs
call
nop
pop
gs
push
daa
jmp
ss
sub
sub
test
adc
push
out
jg
enter
jp
stos
lret
push
sbb
jns
push
mov
jmp
xchg
std
jmp
push
lds
pop
jne
cwtl
jge
dec
cltd
fisubs
ret
in
xor
push
pop
push
pushl
jb
iret
push
jmp
repz
mov
sbb
js
fnstcw
inc
xchg
fimuls
pop
lcall
loop
push
add
mov
mov
push
iret
cmp
add
loopne
scas
decl
xor
push
insl
out
aad
mov
and
fstpl
pushl
mov
inc
or
scas
cli
mov
lret
mov
adc
dec
imul
mov
or
ljmp
mov
movsl
pushf
and
sti
in
popa
call
cmpsb
inc
push
out
cmp
add
rcrb
add
loop
mov
cwtl
add
dec
in
pop
sbb
dec
lcall
xchg
in
out
scas
dec
push
fwait
mov
jo
lock
add
add
mov
xchg
pop
jmp
pop
push
imul
jle
dec
adc
xchg
addl
inc
xchg
movsb
popf
dec
lea
movsb
pop
and
mov
cmpsb
mov
lcall
icebp
in
ss
pop
jo
bound
pop
lret
mov
iret
pop
sbb
stc
cwtl
ret
insl
xchg
sahf
je
in
fcomip
decl
imul
enter
out
repz
xchg
stos
xchg
and
xchg
mov
out
aaa
outsb
imul
pop
test
bound
mov
mov
inc
add
mov
cmpsl
lds
inc
pop
in
shrl
sbb
push
sbb
pushf
jl
cwtl
or
arpl
mov
movsb
inc
clc
test
mov
out
incl
xor
fcmovb
and
js
ljmp
sbb
push
lcall
inc
int3
jecxz,pn
divl
add
ja
lock
adc
pop
push
lret
adc
fnstenv
jle
sbb
jecxz
lods
cltd
mov
or
add
push
sub
lcall
lahf
jae
jp
es
and
adc
stos
jp
mov
je
sahf
repnz
push
mov
xchg
inc
ss
int
cmp
add
xor
xor
jl
ljmp
insl
and
incl
inc
pop
xor
call
cmp
in
mov
ret
mov
ljmp
ljmp
outsb
adc
jns
fadds
cmp
arpl
imul
adc
xchg
popa
add
add
cli
or
aad
dec
xor
xchg
dec
xor
ljmp
outsb
addb
movsb
mov
fdivp
arpl
mov
adc
sbb
adc
xor
ret
mov
lcall
or
push
push
outsb
out
in
jns
push
imul
iret
dec
mov
lcall
push
shl
test
mov
pop
push
pop
push
adc
dec
lea
push
sar
pop
hlt
pop
icebp
rol
mov
cmp
iret
or
ss
mov
sub
xchg
cli
incl
lahf
insb
xor
or
mov
mov
and
mov
mov
mov
adc
imul
mov
sbb
lcall
in
sub
mul
notb
sub
sub
fs
push
lock
jmp
dec
imul
pop
xchg
xchg
jle
jb
mov
scas
push
push
in
cs
sbb
or
in
adc
lret
jbe
jns
ss
jmp
xlat
popa
xor
lcall
mov
loopne
jl
inc
and
mov
cld
mov
ja
call
sbb
sbb
add
add
out
lahf
pushf
inc
and
push
out
andl
cltd
push
test
push
and
std
add
cmp
add
jl
decl
outsl
jae
jae
lahf
push
inc
mov
pop
cmp
jle
xor
cwtl
sub
pop
in
ja
call
imul
add
pop
dec
aas
out
pusha
xlat
mov
xchg
decl
dec
shrb
jbe
xchg
mov
xor
shlb
xacquire
scas
into
cmp
decl
jno
inc
sbb
mov
jbe
xchg
jno
sarb
xchg
and
mov
rsm
mov
stc
call
sti
adc
push
pop
mulb
leave
mov
jecxz
xlat
cmp
jmp
mov
clc
xchg
jno
lea
adc
or
pushf
dec
mov
je
sar
mov
cli
push
pushl
paddw
jl
inc
mov
divb
cli
xchg
lock
test
fnstenv
lcall
xlat
adc
je
fisttpl
sub
cmp
cmpsl
ret
outsb
mov
aas
mov
dec
push
imul
or
les
cld
loopne
cmp
cmpl
pushl
shr
test
push
cmpsb
jb
push
jle
sub
cmp
in
jbe
add
mov
fildll
sub
add
pushl
cld
xor
jecxz
mov
or
pop
test
jecxz
idivl
lcall
cmp
pop
mov
adc
into
xlat
xor
rorb
pop
cld
and
mov
sub
cli
jg
decl
xor
sub
loopne
or
mov
stos
inc
lcall
je
fldt
inc
dec
cmp
mov
mov
lcall
call
mov
xor
xor
adc
out
inc
insl
dec
cmp
adc
lcall
ds
cmp
sarb
das
leave
jle
jnp
out
data16
ja
inc
stos
sti
xor
decl
inc
xor
sbb
and
test
dec
add
inc
aas
and
cmp
call
sbb
into
cltd
mov
cmc
inc
cld
mov
mov
xchg
lea
sbb
inc
jne
decl
cmp
clc
arpl
pop
push
inc
mov
push
push
add
push
clc
cmp
ljmp
ror
inc
movsb
push
leave
testb
imul
pop
and
dec
pushl
addb
loopne
fldl
sub
pop
jno
nop
mov
lret
rcr
pop
push
mov
sub
push
cwtl
enter
or
int3
xlat
std
cmc
jp
sbb
scas
rcrl
xchg
in
mov
cwtl
insb
push
push
shl
cmp
push
pop
sub
fdivr
inc
cmpb
int
dec
inc
int3
out
pop
push
cmp
push
adc
sbb
push
pusha
xchg
jno
ja
lcall
in
sub
adc
jae
xchg
dec
xor
sbb
adc
leave
sub
jmp
pop
xchg
js
dec
fimuls
fmulp
adc
data16
jo
fs
jle
out
int3
xchg
lret
stos
fs
dec
jg
mov
jecxz
arpl
fistpl
negb
and
add
call
mov
out
int3
push
ds
inc
push
negl
mov
pop
sub
xor
gs
leave
sub
lcall
pusha
pop
adc
mov
jbe
jp
pmaddwd
imul
xchg
nop
mov
cmp
fcomip
call
es
jbe
dec
or
xor
sbbb
lock
ficoms
xchg
xlat
jmp
sub
or
in
xor
pop
cmp
or
stc
push
stos
rcl
sar
add
push
sarl
xchg
mov
stos
pushf
outsb
inc
push
push
mov
sbb
adc
pop
pop
xchg
les
ljmp
inc
aam
icebp
in
scas
aas
test
cs
sbb
outsl
xorb
xchg
inc
sub
jg
clc
popl
or
and
pop
dec
add
sub
leave
data16
decl
fmull
lahf
ret
outsb
inc
mov
cmp
fisubl
adc
or
jmp
insl
inc
lahf
cmpsl
xor
jmp
out
pop
aaa
sub
lea
cli
andl
lcall
xor
repnz
shlb
ret
popa
jle
or
adc
adc
jge
jmp
push
push
and
sub
rclb
inc
in
push
push
clc
xor
rcrl
mov
lret
add
jmp
adc
test
imul
push
int3
dec
int3
in
add
push
popf
mov
movntq
out
jmp
xor
es
lods
sahf
dec
push
repz
fistps
and
adc
adc
fucomip
lahf
into
adc
emms
adc
dec
scas
adc
mov
push
rorb
xorl
mov
mov
das
ret
mov
aad
or
push
icebp
xchg
mov
sahf
cltd
xchg
decl
lock
adc
cli
xlat
cs
test
arpl
or
lods
jmp
push
movsb
sbb
mov
test
push
std
sahf
dec
insl
sbb
shlb
int
push
add
xchg
jns
out
into
push
or
sbb
stos
push
jnp
hlt
and
jecxz
mov
call
jne
xor
dec
insl
fidivrs
jnp
sahf
pop
shlb
cmc
cltd
push
inc
xchg
push
or
xlat
enter
dec
add
jmp
xchg
andl
int
in
adc
inc
insl
jmp
aad
dec
add
and
aaa
mov
jmp
xchg
sbb
ret
cwtl
pop
shll
xchg
in
shlb
adc
mov
loope
ret
bound
daa
jmp
sub
mov
loope
shlb
cmp
inc
mov
mov
xor
and
ljmp
push
mov
cmp
loopne
rclb
dec
add
sti
imul
incl
outsb
ret
pop
xchg
push
mov
or
and
xor
call
fcoml
mov
xchg
stos
sbb
ret
scas
sbb
push
js
ss
out
sub
and
decl
jmp
cmp
psrlq
push
ret
cmp
mov
pop
in
jecxz
bnd
repz
arpl
pusha
jnp
and
int
into
mov
xchg
ret
and
mov
gs
inc
xchg
mov
test
xchg
cmpsl
nop
clc
cmpsb
pushl
mov
test
adc
jae
iret
lea
addr16
clc
mov
inc
out
pop
sub
add
push
arpl
decl
pop
add
je
mov
inc
sub
aad
push
js
loopne
rorb
sbb
fimull
decl
scas
inc
sbb
cwtl
testb
je
pusha
inc
int3
shrl
test
es
xchg
sbb
mov
into
pop
mov
mov
add
inc
push
std
ljmp
cmp
stc
xchg
mov
add
stos
bound
cli
rclb
cmpsl
dec
lret
test
mov
mov
and
ja
adc
cli
and
popa
stos
clc
jg
add
insb
jnp
aad
out
pop
outsl
mov
movsl
sub
movsb
fisubs
push
dec
xor
incl
inc
sbb
dec
cld
and
dec
data16
jmp
repnz
jle
cmp
sbb
aam
and
addr16
push
jmp
in
decl
sarl
xchg
addb
loop
fidivrl
mov
adc
loope
fdivrp
jg
imul
push
xor
pop
sub
fsubrl
cmc
pop
ret
outsl
call
or
xchg
push
repnz
daa
cmp
loopne
ret
dec
and
stos
and
jmp
fdivp
out
pop
ret
xor
popf
scas
stc
jmp
cld
lods
mov
icebp
decl
sub
jmp
jnp
pop
xchg
push
in
imul
mov
push
jnp
call
xlat
shll
jae
cwtl
jne
push
fdivrs
and
jl
cmp
or
mov
jp
fwait
xchg
loopne
stos
ljmp
jmp
fbstp
test
sub
mov
push
adc
ret
nop
jmp
ljmp
out
mov
push
jp
repnz
dec
mov
pusha
pop
adc
stc
mov
in
sbb
mov
pop
mov
mov
jb
imul
cmp
cmp
or
movsl
xchg
mov
mov
xchg
push
xor
pop
movsl
incl
pushf
jg
testb
loope
inc
and
inc
andb
sbb
lea
or
decl
fcoml
xchg
sahf
gs
dec
sub
push
mov
daa
jle
inc
push
mov
movsb
mov
jmp
dec
inc
addb
rorb
and
sbb
test
add
jg
aad
cmp
call
adc
int3
jns
fs
inc
or
ljmp
sti
mov
insl
out
jg
shll
xchg
ljmp
ljmp
mov
fcomip
xchg
in
movsb
into
insb
inc
in
addb
dec
dec
sub
ret
push
add
xor
or
das
sub
cmp
hlt
test
lcall
cltd
dec
dec
or
imul
pushf
push
shll
movsl
scas
loopne
add
jmp
ljmp
push
imul
lea
sti
insl
sarl
fcmovu
mov
test
mov
call
leave
jno
pushf
inc
inc
xchg
cli
sub
jmp
mov
or
adc
sbb
cmp
cmc
outsb
daa
inc
xor
adc
inc
jno
and
push
subl
call
int3
aas
mov
or
push
jl
sub
xlat
add
sahf
lret
fwait
jmp
cmpsl
outsb
lock
lret
and
ret
sub
push
lock
lock
movsb
mov
faddl
popf
pop
sub
pushl
insl
pop
push
sub
fnstenv
add
out
dec
mov
sar
push
imul
jecxz
cmp
and
les
fldl
cmp
aas
pop
outsl
repnz
add
pushl
mov
cmp
in
xchg
out
dec
imul
adc
jno
les
sbb
mov
shl
dec
arpl
arpl
mov
adc
out
dec
sbb
lods
push
and
mov
xor
decl
or
cmpsb
cmp
xor
jecxz,pn
sub
push
jne
das
mov
add
jle
mov
xor
mov
xchg
and
push
aas
orb
lcall
mov
push
xchg
lret
dec
les
loope
mov
test
js
jnp
cli
cmp
or
xor
inc
cli
pushl
pushf
aam
dec
jae
popf
mov
jb
mov
into
cmp
xor
or
cmp
mov
aaa
imul
iret
or
lahf
and
mov
dec
jae
mov
lcall
push
or
xor
xchg
xchg
int
es
addb
mov
dec
sub
outsl
std
test
dec
repnz
hlt
sub
and
fstps
add
push
hlt
sub
inc
stc
lret
ljmp
push
pop
nop
fadds
insb
add
imul
cli
addr16
sahf
ret
mov
mov
and
je
xchg
mov
push
pop
adcl
repnz
inc
mov
aaa
test
in
mov
and
push
fildll
pop
or
outsl
cmp
mov
test
jp
fs
mov
pop
sub
das
mov
rorb
nop
mov
je
xchg
sarb
incl
bound
hlt
scas
mov
dec
dec
xchg
mov
cmp
jmp
sarb
xchg
and
mov
not
xlat
pop
pop
adc
out
adcb
roll
jg
insl
jno
icebp
stos
call
and
pop
lret
xor
xchg
mov
call
lds
and
pop
xor
dec
bound
lcall
jbe
push
dec
mov
jp
push
jns
lcall
mov
mov
push
push
push
jmp
js
jecxz
inc
jecxz
cmp
idivb
stos
add
ljmp
xor
test
leave
in
ljmp
pusha
cmp
pop
call
xchg
call
xchg
call
mov
gs
cltd
push
pushf
mov
pop
ret
idivl
call
jl
test
lcall
fstp
and
out
or
push
mov
lret
jmp
call
cmp
dec
movsl
push
pop
push
ja
pop
cwtl
push
xor
mov
out
lret
push
std
mov
inc
pop
adc
fwait
xor
addr16
mov
test
incl
mov
fs
inc
mov
in
in
jbe
and
clc
sbb
ret
mov
jmp
xor
scas
and
popf
cs
jmp
mov
test
enter
addl
jge
lcall
cwtl
sub
mov
test
pop
int
int3
rorl
fmul
out
or
add
aas
rorb
push
xor
mov
jmp
cmpsb
adc
adc
lea
dec
pushl
cld
lcall
cwtl
jecxz
inc
adc
in
xlat
mov
add
sar
lcall
fsubl
repz
in
enter
mov
sub
ljmp
push
cmp
ljmp
mov
push
ret
mov
cs
pop
add
jmp
fwait
orb
pop
decl
in
xlat
jo
in
jl
arpl
or
mov
push
pop
mov
test
mov
aaa
outsb
mov
xor
add
ds
pop
and
sbb
and
fidivl
push
bnd
jge
sbb
test
imul
je
lock
stos
addb
jbe
pop
sbb
fiadds
ljmp
mov
fstps
jg
adc
fadds
jle
std
fcmovnbe
jns
add
lcall
lret
cld
cmp
ret
lods
les
outsb
pop
ret
pop
in
cmpsl
pop
adc
insl
repnz
testb
imul
out
sarl
lret
nop
cmp
lock
out
int3
outsl
lods
in
pop
jns
cli
jg
std
cmp
adc
popf
sub
and
hlt
mov
inc
popa
out
add
mov
mov
andl
scas
jle
inc
dec
aam
imul
adc
adc
mov
call
dec
in
test
les
call
push
mov
pop
pusha
ljmp
jecxz
jge
leave
int
or
mov
push
ss
stos
add
and
imul
dec
add
mov
inc
push
pop
mov
sub
add
dec
lret
inc
pop
add
pushl
out
emms
pop
sub
push
stc
or
data16
push
cmp
cmp
xlat
cli
or
inc
enter
jg
in
scas
imul
inc
in
mov
cli
ljmp
mov
testl
push
out
in
sub
call
dec
sub
incl
aaa
mov
mov
testl
fistpl
fnstcw
mov
pushl
test
mov
lds
fistpll
imul
dec
mov
xchg
jecxz
pop
add
inc
add
scas
xchg
repz
sar
ljmp
inc
ret
stc
ljmp
bound
jg
fwait
inc
and
ja
jb
push
xchg
jp
mov
fcomip
mov
fdivl
dec
mov
add
sub
sub
jg
leave
movsb
cli
sarb
jp
sub
jb
dec
fildl
imull
imul
pushl
repz
mov
and
dec
jne
fistl
adc
mov
out
daa
xchg
lea
sbb
lods
xchg
cwtl
sbb
or
cld
add
jmp
sub
gs
fiaddl
cld
je
outsl
mov
das
adc
or
jg
adc
pop
adc
push
xor
push
sbbl
nop
xchg
test
shll
cmp
incl
dec
movsb
int
xor
xchg
mov
icebp
jno
daa
or
sbb
dec
leave
mov
movsb
dec
push
ljmp
mov
cmp
cmp
inc
ror
data16
fidivl
xchg
addr16
add
cmp
les
inc
xlat
jae
sub
bound
pop
scas
and
test
ljmp
cmpsl
jl
cltd
jmp
dec
and
ljmp
je
addr16
sti
mov
push
ss
pop
mov
stc
cwtl
fs
or
jmp
loop
xchg
jle
adc
cmp
call
das
fwait
popf
pop
xchg
das
lcall
call
push
cwtl
in
das
lret
ret
inc
inc
jno
addr16
mov
push
test
mov
jg
or
das
clc
pop
or
fidivrs
jbe
dec
sbb
lods
cwtl
fbstp
lds
push
flds
mov
ficompl
mov
mov
pushl
mov
lcall
pop
insb
add
mov
pop
js
adc
adc
jmp
fwait
imul
mov
xor
pop
push
lcall
xlat
inc
aam
jmp
cmp
sub
bound
es
cmp
rclb
mov
incl
scas
stos
jmp
andl
lock
icebp
out
imulb
int
xchg
mov
mov
out
jl
pop
sub
out
nop
imul
jae
negl
lods
incl
cli
sbb
xchg
push
sti
repnz
adc
decl
pop
add
test
xchg
add
lea
mov
push
mov
lcall
ficompl
in
je
imul
push
inc
cmp
call
sbb
outsl
pop
lret
inc
xor
popa
idivb
bound
push
aaa
cmp
mov
sub
sub
mov
decl
lock
cmp
xchg
mov
nop
test
or
adc
pop
cld
pusha
sahf
pop
fbstp
aam
xchg
pop
in
adc
stc
call
repz
cmp
add
repz
arpl
lahf
mov
mov
xor
jl
pop
jecxz
dec
adc
out
clc
decl
insb
cmpsl
into
sub
test
sub
clc
imul
jg
out
sub
xchg
adc
fldcw
xchg
push
cmp
cwtl
ljmp
iret
xchg
push
ljmp
dec
imul
outsb
ds
jmp
movsb
stos
cmc
inc
clc
xchg
mov
mov
dec
cmp
and
mov
sbb
je
xchg
pop
add
inc
scas
insl
les
cs
dec
sbb
in
out
in
mov
mov
lods
stc
dec
gs
test
inc
mov
jmp
sbb
or
xchg
andb
mov
cmpsb
fs
cmp
arpl
inc
and
sar
sub
data16
stos
fwait
fs
mov
data16
push
insb
jg
jns
jmp
cmc
pop
fimuls
lods
pushf
xchg
dec
jbe
clc
jne
fisubl
int3
add
rorb
jne
decl
aaa
inc
fcmove
pop
and
inc
es
loope
inc
subb
jg
arpl
pushl
std
adc
jecxz
and
and
mov
cli
jcxz
sub
jmp
pop
loopne
mov
test
cmp
sbb
cmp
rorb
in
inc
lret
jp
ljmp
inc
cmp
push
sub
adcl
sbb
cmpsl
jo
or
sub
incl
adc
xor
sbb
dec
xchg
dec
roll
inc
das
lcall
and
jo
iret
ret
imul
cs
packssdw
adc
cmp
cmpsb
dec
sbb
aad
cld
data16
sahf
enter
hlt
fisttpl
xchg
test
push
mov
lods
fdivl
incl
dec
lock
sbb
insb
jge
sbb
and
mov
lcall
xchg
pop
lret
add
push
fidivrs
xlat
testb
push
mov
jmp
sbb
jnp
adc
xchg
jns
setp
je
push
ljmp
cmpsb
and
and
jmp
pop
iret
push
popa
mov
mov
mov
test
fisttpll
add
cmp
or
out
pop
pop
mov
pop
call
stos
rorl
adc
incl
and
sub
arpl
jg
inc
or
pop
test
decl
mov
xchg
push
mov
mov
xor
test
ljmp
cmp
aam
outsl
xor
ljmp
push
test
ficoms
jmp
incl
inc
and
mov
xchg
or
lret
sbb
adc
lock
aad
sub
lret
or
repnz
inc
popa
push
mov
mov
call
das
icebp
cmp
ret
mov
adc
data16
std
or
add
add
jns
decl
pop
push
sub
mov
pop
jns
aas
xchg
lods
inc
movsl
outsl
ljmp
mov
pop
adc
lock
movsb
push
push
inc
stos
inc
loope
or
xchg
lcall
and
pop
int3
insl
imul
add
or
call
out
dec
into
cmp
dec
mov
or
fsubrl
cmp
jae
fdivrp
ljmp
clc
dec
fists
loop
and
ds
pop
pop
sub
aas
add
out
mov
sub
xor
mov
std
int
mov
loopne
add
and
pushl
pop
sahf
xor
shll
shll
outsb
push
jo
dec
stc
mov
data16
rclb
pushl
mov
in
cmp
jp
jne
fmuls
cmpsl
out
loop
jg
mov
jl
repnz
ror
addr16
xchg
adc
sub
and
sahf
mov
dec
jmp
mov
sub
mov
out
stc
pop
movsw
xchg
mov
leave
push
lods
sbb
sub
fs
sbb
aad
lea
lock
cld
push
ss
pop
mov
xchg
enter
movsl
out
adc
inc
arpl
push
arpl
jg
push
pop
inc
sar
cmp
clc
jp
jmp
hlt
add
pushf
jg
repnz
rcr
push
jmp
stos
sbb
mov
nop
dec
xchg
popl
sar
cmp
cmp
add
mov
sbb
popf
push
push
sub
push
hlt
out
call
xchg
stos
test
decl
xor
pop
enter
movsl
jne
divb
mov
sahf
pop
sbb
push
push
dec
xchg
js
dec
jo
push
cld
jmp
lret
daa
dec
jg
xor
push
sub
sbb
sub
or
subl
dec
jge
cmp
adc
pop
dec
and
push
fwait
lret
outsl
sbb
in
stos
sbb
movl
out
mov
mov
incl
mov
pusha
jp
hlt
jg
mov
dec
and
je
push
std
mov
or
aas
pusha
add
gs
daa
jmp
add
lcall
sbbb
es
pop
pop
pop
ja
push
outsb
out
xchg
inc
int
mov
ljmp
iret
popa
andl
add
cli
arpl
mov
test
mov
jo
and
pop
andb
enter
into
nop
fldl
pushf
jp
push
nop
cmp
mov
fisttpll
cmp
pop
xorb
in
sbb
je
push
lcall
je
bound
jg
ljmp
das
nop
sarl
jp
xchg
ss
pop
add
sbb
fdivr
decl
test
mov
es
popf
and
xchg
in
pop
inc
inc
dec
mov
incb
adc
ljmp
jno
cmp
push
out
fildll
popa
fbld
cmp
sbb
stos
adc
outsb
jae
adcb
lods
scas
inc
dec
decl
pop
sbb
ret
pushf
movsb
xorb
mov
ss
adc
ljmp
clc
pusha
jbe
mov
xor
pop
repz
mov
adc
mov
decl
xor
mov
je
loope
and
mov
ljmp
lcall
add
ljmp
xchg
fmuls
add
adc
or
stos
shr
cltd
and
incl
pop
xchg
leave
loopne
lcall
outsl
aam
mov
adc
stos
incl
sar
jbe
movsl
or
xor
fsubrs
out
aam
pushf
addl
pop
call
movsb
inc
clc
movsb
ljmp
adc
nop
and
popf
insb
les
test
negl
mov
jae
pop
dec
inc
incl
sbb
sar
xchg
and
cmpsb
in
lock
stos
ret
cld
cs
xor
pop
clc
jmp
jge
cmp
jnp
insb
cmp
into
lret
bound
add
subl
push
imul
jnp
or
sbb
add
jbe
loope
vpsubq
incl
pop
jle
xor
mov
pop
pusha
adc
cs
nop
pushl
call
out
imul
push
gs
pop
sub
icebp
in
mov
andb
outsl
sbb
insl
test
divl
and
into
xor
fildll
mov
cs
jmp
outsb
adc
jg
imul
xlat
mov
hlt
in
ret
mov
adc
xor
call
decl
inc
mov
adc
push
mov
in
and
sbb
push
jb
in
sar
mov
sbb
out
push
jns
addr16
lock
add
add
pusha
arpl
cmp
jg
jmp
shl
dec
push
xor
adc
mov
pop
cwtl
push
daa
adc
xor
fucomip
out
xchg
push
or
cmc
adc
xchg
lods
pop
cmp
pushl
add
and
int3
lods
out
jae
in
mov
push
clc
jno
push
fsub
mov
jp
adc
gs
fsts
mov
sti
hlt
test
jmp
xor
mov
dec
aad
adc
dec
cmp
xchg
mov
ficomps
mov
das
and
or
ja
mov
inc
ljmp
inc
inc
mov
sarl
mov
mov
and
fcomip
call
into
jp
stos
icebp
and
shrl
push
movsb
orl
inc
mov
repnz
jo
adcl
lods
pop
xchg
gs
lcall
push
loop
cmp
push
adc
pop
pop
fucomip
nop
push
fiadds
scas
cmp
in
js
mov
addl
pop
leave
xor
push
sub
lcall
scas
in
int3
stos
jb
pop
in
aaa
imul
inc
mov
and
push
mov
pop
mov
incl
add
inc
lods
cwtl
ret
or
and
rcrb
dec
icebp
or
fidivl
jmp
fs
dec
shrb
mov
pop
mov
xor
or
movsb
xchg
add
lcall
ss
scas
stos
push
clc
jmp
dec
dec
cmp
lods
pop
test
arpl
cmpsb
ljmp
inc
or
fstl
les
xchg
mov
sarb
jns
scas
enter
cmp
popf
pusha
and
pop
dec
loop
inc
gs
in
push
scas
sub
push
insb
jl
mov
sbb
mov
and
ja
sahf
movsl
ja
adc
sahf
inc
stos
cld
xor
orb
ljmp
mov
add
sahf
dec
cmpsl
dec
sbb
inc
ret
lret
jg
pushl
imul
jns
rcrb
ret
xchg
loopne
mov
gs
pop
mov
pop
adc
jge
cs
aad
gs
pop
mov
and
and
jnp
xchg
push
jecxz
addb
and
push
cld
cmp
decl
mov
notb
push
mov
aaa
outsl
ja
fcomps
mov
arpl
int
xchg
insb
inc
pop
test
mov
sub
cmp
das
cmpsl
ror
jg
test
lcall
rcrb
loop
test
lcall
push
pop
pop
push
cmp
jl
movsl
ret
out
ds
push
mov
aaa
cld
lcall
wrmsr
rolb
adcl
add
in
or
cmpsb
out
add
cwtl
mov
mov
inc
cwtl
or
sbb
clc
ljmp
add
rcl
mull
sti
arpl
fdiv
mov
sbb
sbb
test
push
lahf
fstpl
popa
mov
neg
dec
insb
cmp
loope
call
ficompl
out
imul
sub
js
sbb
adc
movsl
cmp
pop
or
push
call
cmp
addr16
nop
pusha
jg
sbb
test
add
rep
mov
incl
push
jne
scas
pop
push
add
or
cmp
and
pop
mov
xor
in
add
pop
cmp
lds
faddl
movsl
repz
push
sar
call
out
cmpsl
xchg
mov
std
imul
adc
jne
add
mov
lods
jp
ja
jbe
pop
mov
cmc
cmpsl
sub
in
hlt
decl
fistpll
mov
pop
mov
inc
ja
into
cmpb
mov
aas
fistps
repz
cmp
xchg
aam
jge
repz
push
ja
mov
mov
ljmp
xchg
test
inc
daa
stos
fcoms
out
out
js
aad
ljmp
inc
xchg
std
fwait
shlb
fbstp
mov
ljmp
xchg
sbb
inc
addr16
and
mov
ds
filds
call
push
push
lret
call
cmp
jns
inc
dec
int3
push
jp
inc
xor
scas
js
ljmp
rol
cli
jmp
jmp
negl
cltd
ljmp
adc
inc
push
inc
testl
jb
test
cli
repz
lods
lea
fs
ret
jl
repnz
jle
stc
cmpsb
stc
mov
or
push
ljmp
cld
jne
xor
xor
fcomi
fisubl
xor
lock
ss
loope
cmpsl
xor
dec
cmpsb
lgs
lea
mov
inc
pop
add
add
notb
rorb
das
ljmp
filds
mov
jecxz
scas
and
aad
lcall
mov
push
out
imul
jns
xor
negb
push
dec
add
mov
mov
cmp
test
lea
cmp
push
push
pushl
dec
int3
pop
mov
push
add
inc
push
and
xchg
hlt
ret
stos
pop
xor
push
dec
ja
xlat
int3
jg
ljmp
insl
decl
popf
vphadddq
fstpl
pop
xchg
inc
push
sbb
cmpsb
rorb
sbb
movsl
cmp
mov
aam
push
movsb
jb
lcall
andb
cltd
inc
rcrl
hlt
mov
test
dec
mov
add
or
jle
sub
jmp
fstps
mov
syscall
inc
xor
adc
sbb
loopne
test
incl
je
nop
out
jb
mov
push
js
lock
ds
mov
dec
arpl
das
or
clc
xlat
call
mov
movsb
mov
cmp
lods
icebp
jno
decl
sub
adc
fidivs
sub
mov
scas
lods
lea
and
test
inc
mov
ljmp
dec
mov
lahf
push
andb
shufps
mov
sbb
xlat
imul
lock
movsb
sbb
hlt
ds
call
iret
and
ljmp
vmread
cmpsb
pop
jb
dec
xor
cli
enter
in
pusha
stos
rol
aad
jl
xchg
push
jge
orl
pop
push
neg
dec
mov
div
rolb
mov
jmp
jb
adc
jne
add
mov
loopne
decl
mov
inc
cld
push
movsb
sbb
add
mov
or
pop
enter
aaa
sbb
ljmp
mov
pop
push
dec
es
lahf
lcall
mov
js
movsb
in
xor
movsl
and
mov
push
mov
xchg
cmp
ljmp
jae
or
dec
or
mov
cmp
mov
jb
daa
ss
jmp
hlt
test
iret
mull
clc
int3
mov
fisttpl
movsb
push
iret
je
pushl
andl
out
cltd
sahf
mov
xchg
nop
shll
mov
pop
xor
pop
lcall
imul
cs
adc
stc
lods
add
push
ss
into
sbb
adcb
pushl
jecxz
xor
push
jmp
dec
daa
sarb
add
push
fs
jno
push
cmp
jb
mov
mov
iret
in
push
das
ret
ret
call
fstpl
cmp
sub
ret
aas
push
xor
or
fcoml
cmpsb
jnp
adc
jo
jl
mov
sub
hlt
mov
scas
lcall
dec
cli
addr16
cltd
fsubrs
fdivl
adc
mov
jmp
lret
ljmp
ljmp
stos
pop
sti
out
in
fistps
inc
lea
cmp
insl
insb
xchg
es
inc
mov
bound
leave
xchg
cmp
stos
pop
xor
pop
jo
or
pushl
mov
mov
xor
xchg
aad
leave
or
xlat
xor
bound
mov
dec
mov
xchg
imul
test
test
std
fcomps
fadds
pop
lock
call
lcall
lret
fistps
xor
fcmove
lds
addl
xchg
in
cmc
push
addr16
pop
cmp
loop
ds
js
cmp
ret
xrelease
ret
jne
cmp
std
cwtl
into
mov
jge
mov
push
push
jg
push
addb
mov
lret
jb
rol
clc
out
pop
ret
loopne
cs
dec
fstpl
mov
inc
loope
test
incl
lret
jnp
scas
insl
lret
in
push
xor
lods
hlt
jp
mov
dec
or
call
and
mov
push
mov
fnstenv
push
call
pop
cli
ljmp
loope
xor
cld
add
sbb
mov
pop
rol
jbe
mov
outsl
jle
sub
scas
pop
or
pop
filds
test
rorl
or
lock
clc
sub
and
xor
and
test
mov
out
pusha
sbb
cmp
mov
push
or
pop
je
sbb
addr16
fcomp
push
idiv
call
adc
cmc
sub
pop
dec
push
js
insl
movsl
inc
stos
out
mov
sbb
mov
jae
bound
jge
cli
xlat
push
cld
cmpb
loopne
pop
lods
adc
jns
inc
test
cmp
stos
dec
ror
loope
ljmp
cmp
push
sahf
shll
sub
test
das
jns
push
int3
hlt
ss
pushl
cli
inc
call
inc
aad
or
push
mov
mov
aaa
pushl
ret
fisubs
sub
fidivl
push
loop
and
mov
into
mov
xchg
clc
inc
test
push
jbe
push
push
repnz
ret
popa
adc
xchg
enter
cmp
jmp
inc
adc
in
and
sbb
xor
sub
fs
loope
push
inc
mov
push
std
mov
pop
andb
movsl
cwtl
pop
sti
bound
orb
insl
lcall
push
jnp
sub
lret
push
icebp
jecxz
inc
test
daa
mov
incl
fnstenv
js
push
decb
jmp
fwait
ljmp
push
decl
or
pop
subb
sar
mov
orl
xchg
adc
and
mov
sbb
push
aam
or
aad
inc
sub
mov
gs
pop
call
std
lcall
sub
loope
pusha
adc
push
push
and
mov
and
pop
xchg
inc
arpl
xchg
xor
xor
jl
cmp
hlt
sbb
sbb
in
bound
or
cli
repz
xor
sbb
ljmp
or
daa
lahf
inc
jne
out
cld
mov
les
lods
mov
sar
and
xchg
xor
inc
rcl
data16
inc
add
or
jmp
mov
lret
jae
repz
add
jo
ja
fadd
daa
push
jb
ret
call
fdivr
pop
or
push
fwait
orl
and
jl
rcrb
xor
dec
repnz
pushl
adc
cmp
push
jl
jl
arpl
xor
divl
mov
mov
ljmp
mov
xor
ss
adc
xor
add
lods
inc
pop
add
lcall
data16
inc
std
push
outsb
adc
addr16
inc
dec
jge
mov
jbe
stos
pop
testb
lret
jmp
call
mov
loopne
stos
ja
jg
scas
stc
test
incl
data16
fidivrl
arpl
sbb
out
stos
icebp
icebp
dec
lcall
addb
arpl
out
sbb
jmp
pop
addr16
add
aas
outsl
clc
call
sub
ret
inc
fistpll
fnstsw
cmp
cmp
xor
and
sbb
sbb
decl
ret
addb
insl
loopne
daa
gs
loop
aam
inc
ljmp
cmp
mov
push
fnop
add
lods
stos
and
cmc
add
rcll
dec
mov
and
pop
popa
lds
jle
cmpsl
and
std
mov
xchg
movsb
jb
pop
cld
decl
lahf
inc
jmp
les
dec
ds
scas
lcall
nop
rorb
dec
push
mov
popf
jns
loopne
xchg
movb
lcall
jp
adc
sarl
push
xchg
cld
loop
push
push
push
or
jg
cmpsb
xor
pushf
and
fmull
mov
sbb
aas
adcl
stc
in
dec
sti
xor
mov
push
cmp
rorb
or
push
stc
pushl
decl
and
repz
movsb
and
cmpsb
sbb
cmc
and
mov
pushf
push
popa
push
jg
lcall
out
or
mov
cs
push
adc
icebp
and
call
and
xchg
jmp
dec
rclb
push
xor
jge
out
xchg
in
sbb
xor
js
decl
subl
loop
scas
insb
test
js
repnz
and
mov
cmp
inc
movsb
aas
in
fucom
call
aam
adc
cmp
leave
cmp
mov
decl
and
sbb
filds
jnp
pop
mov
hlt
adc
stos
jbe
or
mov
lcall
mov
jo
push
movsb
mov
movsl
in
mov
cltd
ret
ljmp
sbb
ljmp
xor
in
pop
inc
pop
xchg
jp
cmpsl
adc
mov
xchg
mov
mov
incl
mov
xchg
fistpll
cmp
jge
xor
gs
ljmp
jecxz
daa
cmp
inc
aad
mov
cmp
out
mov
dec
jae
loopne
pop
stc
xor
or
arpl
cmp
dec
add
call
xchg
loope
push
clc
mov
mov
mov
incl
and
insb
lret
xchg
ljmp
xchg
jg
aad
movsb
sbb
call
or
aaa
dec
std
sar
and
push
add
mov
xor
stos
adc
popa
outsl
cltd
xor
mov
in
mov
call
lcall
jl
xor
stc
mov
and
in
and
call
and
lcall
sbb
mov
pop
mov
mov
clc
xor
scas
sbb
push
cmp
pop
in
std
cmp
or
decl
out
les
pop
pop
adc
sbb
push
mov
pusha
inc
and
mov
sbb
cld
sub
push
xchg
push
int3
test
incl
mov
scas
shl
fidivrs
mov
cmp
jge
lahf
push
xor
dec
fs
or
mov
mov
fcmovnb
lahf
cli
mov
mov
cmp
jg
mov
notb
dec
fldt
mov
in
xchg
fstl
enter
in
aad
mov
shlb
mov
decl
sub
dec
fs
mov
iret
in
mov
imul
push
xchg
lret
jmp
jmp
aam
push
add
decb
sub
mov
jl
stos
stc
incl
push
jmp
loopne
outsb
adc
dec
testb
push
mov
fildl
inc
xchg
and
and
sbb
or
and
fildl
jne
adc
jg
sarl
sub
xor
sti
inc
pop
push
out
lods
xchg
clc
cmp
push
aam
jmp
cs
mov
mov
push
into
xchg
sub
fbstp
mov
dec
inc
adcl
rol
scas
test
jo
and
incl
mov
jg
mull
pop
add
adc
orb
stos
test
movsb
sub
test
sbb
ljmp
rorb
out
movb
dec
arpl
cmpsb
mov
decl
cwtl
ljmp
stos
ss
xor
dec
sbb
dec
xchg
sbb
test
adc
lcall
inc
testl
xor
fsts
das
mov
pop
sub
repnz
mov
and
mov
cmp
push
cmpsl
adc
push
aam
pop
sbb
dec
int3
incl
cmp
dec
mov
gs
jmp
mov
adc
lret
out
mov
sahf
pop
jb
fwait
inc
jecxz
fimuls
mov
jp
pusha
mov
lock
or
int
add
jmp
jge
push
cmpsl
xchg
gs
mov
mov
sub
test
out
jg
lods
add
inc
lcall
push
add
leave
mov
aad
xchg
sbb
loope
fsts
jns
adc
test
ljmp
jg
popa
ficoml
pop
out
xor
sub
dec
or
xchg
lods
insb
es
ds
push
inc
mov
sbb
push
pop
fstl
adc
mov
jmp
cli
xchg
or
stc
push
ret
test
imul
clc
cmp
faddl
jge
decl
pop
stos
frstor
sbb
push
jne
or
stos
loope
insb
sarl
pushl
sub
out
mov
aam
aas
jb
mov
inc
imul
push
call
loop
jne
xor
je
xchg
mov
mov
lcall
mov
adc
jb
cmp
mov
ja
icebp
or
repnz
push
mov
daa
xchg
cmc
and
ret
cmp
jp
push
lret
push
xchg
adc
int
je
pop
xor
jmp
or
fs
xor
aaa
sbb
leave
xor
aaa
jecxz
mov
mov
call
out
jno
cmp
xor
jmp
sbb
cmpsl
add
push
cltd
cmp
jmp
push
aas
mov
cld
sub
mov
adc
dec
fistpl
idivl
mov
call
aas
and
fidivrl
repz
adc
push
xor
cmp
shll
sarl
lret
pop
ljmp
push
filds
lods
loopne
mov
jnp
push
imull
into
cmp
fdivp
mov
lahf
sub
add
mov
cmpsl
dec
and
repnz
xlat
mov
and
adc
mov
or
insb
addr16
faddl
dec
jno
scas
fidivs
cld
ss
jg
nop
div
in
es
cmp
leave
mov
movsb
imul
or
pushl
out
inc
pop
pushf
cli
fwait
je
xchg
out
lea
out
sub
xchg
call
jge
in
lcall
cmp
xchg
repnz
sbb
push
push
imul
jmp
sub
mov
or
mov
mov
pusha
cli
icebp
hlt
imul
adc
aas
fcoms
mov
push
pop
rolb
mov
or
dec
inc
roll
cltd
ljmp
pushl
and
or
ret
mov
mov
aam
or
adc
jmp
mov
jnp
sti
jne
mov
ljmp
sub
push
fnstsw
pop
cltd
in
add
scas
sub
push
lea
lock
fiadds
fyl2xp1
cmp
lock
mov
push
jno
repz
fbld
out
inc
pop
push
jp
lahf
dec
inc
lods
adc
adc
and
push
incl
call
jns
int3
mov
shl
loopne
adc
out
xchg
mov
ljmp
sahf
xchg
fmull
in
inc
cmp
dec
xchg
push
fwait
inc
testb
add
outsl
xchg
in
mov
mov
push
jecxz
mov
arpl
pop
push
inc
sti
xchg
mov
cmpsl
std
jmp
jmp
int
movsb
into
addl
push
into
add
xchg
incl
cmpsb
push
inc
push
xor
mov
and
dec
icebp
cmp
fld
xor
in
push
aas
inc
sarb
imul
cmp
or
fsubrp
leave
arpl
insl
loop
incl
cmp
int
aaa
push
mov
leave
push
pop
cmpsb
mov
inc
dec
movsb
add
mov
mov
lcall
adc
out
cli
pushl
pop
pushf
sbb
xor
sbb
out
mov
call
lcall
bound
xor
push
jno
sub
mov
clts
push
imul
dec
dec
cmp
xchg
inc
lds
pop
call
push
lahf
stos
dec
inc
add
into
mov
pop
push
decl
mov
pop
mov
xchg
push
xor
aaa
movsb
mov
mov
push
mov
and
in
push
stos
adc
cmpl
add
pop
enter
jg
jb
iret
leave
xchg
xor
sbb
add
cmp
ret
and
sti
mov
addr16
sbb
xor
insb
inc
add
xchg
and
or
mov
decl
dec
jo
xchg
dec
aaa
jg
movsl
aas
sahf
cmp
nop
pushf
adc
lcall
call
pop
aad
add
sub
cld
push
cmpl
mov
push
leave
enter
call
in
mov
add
or
aad
leave
je
or
and
sahf
inc
sbb
shll
or
pushl
insb
outsb
sbb
inc
dec
inc
dec
and
gs
xor
fcmovne
push
push
fldt
xor
jp
andb
popa
enter
mov
rcl
and
imul
std
jg
sbb
js
or
xor
jb
mov
testb
cld
mov
push
popa
sbb
add
mov
lcall
repnz
dec
xchg
xchg
mov
dec
popf
jbe
inc
pop
pop
int
sbb
add
mov
imul
in
int
ljmp
dec
fs
subl
jl
scas
cmp
cmp
xor
pop
jle
call
mov
jle
mov
mov
or
fidivrs
cs
and
jp
movsb
dec
mov
adc
cmp
xor
test
aas
stc
inc
sbb
out
pop
icebp
les
movsb
push
adc
ficoms
push
fists
inc
pop
xchg
jnp
adc
pop
jne
mov
inc
test
std
xor
xchg
cmp
dec
clc
xchg
and
inc
iret
std
shl
cmp
add
add
icebp
loope
outsl
mov
mov
cmp
outsl
push
std
loop
inc
cmc
out
cmp
jae
or
sub
fisubrl
adc
add
sbb
ja
sbb
push
mov
push
stos
mov
in
add
dec
xor
insb
mov
push
nop
sbb
inc
daa
inc
xchg
add
lcall
out
lock
inc
jno
fldcw
and
in
rorb
mov
dec
xchg
ret
cmp
xor
in
jg
or
jg
sti
cs
mov
sbb
out
test
cs
dec
ja
and
jmp
cs
adc
test
lcall
push
jns
orl
cld
mov
jg
sbb
adc
mov
mov
and
in
xlat
in
push
incl
cmp
fnstcw
cltd
and
mov
adc
ds
lcall
push
xchg
pushf
ss
mov
inc
pop
icebp
sahf
movsl
jmp
shll
std
dec
push
jl
mov
mov
inc
dec
scas
mov
cmp
xchg
pop
jo
mov
dec
sbb
sbb
inc
out
test
pop
sbb
ljmp
and
stos
lock
xor
inc
jecxz
push
int3
jl
das
loopne
aas
mov
or
pop
sbb
imul
pop
ja
decl
jbe
rolb
imul
call
inc
roll
sarb
xor
push
jbe
cltd
jb
push
fisubrs
decl
pop
popa
and
fnstsw
push
jo
push
cwtl
stc
mov
js
xchg
xchg
push
pop
sahf
pop
call
fdiv
cltd
rcl
cmp
sub
push
xor
add
mov
sub
adc
imul
lcall
mov
clc
mov
cmpb
cs
push
out
je
xor
mov
decb
mov
sbb
enter
mov
out
call
cld
dec
cmp
push
mov
xchg
mov
sbb
adc
push
daa
pop
jbe
xor
pop
xor
lret
mov
sahf
add
sub
jno
adc
dec
pop
lcall
xchg
mov
jmp
test
shlb
mov
sub
pop
fisttpll
push
popf
dec
sar
mov
inc
in
loop
sbb
mov
inc
xchg
jl
and
dec
lock
or
xchg
pop
lcall
imul
or
leave
sbb
aad
inc
mov
mov
add
ljmp
mov
dec
jle
xchg
push
shlb
or
jnp
xlat
jnp
popf
cmp
mov
dec
call
and
xlat
sbb
adc
push
not
jne
int3
xchg
mov
mov
loope
decl
inc
test
adc
xchg
and
pop
mov
xchg
and
lock
lcall
mov
pop
fsubl
xor
and
movb
jg
ss
lea
pusha
scas
or
sbbl
mov
aaa
int
mov
loope
push
out
stos
dec
shll
mov
push
mov
cmc
cmpb
dec
cmp
adcb
aas
int3
sbb
xchg
xchg
lret
or
sub
dec
cli
out
cmpb
push
mov
pop
xchg
fnstcw
adc
mov
sub
add
jg
jmp
mov
cmp
inc
push
cmc
mov
fcomps
hlt
fdivrp
fcoms
pop
incl
xchg
mov
push
jae
and
and
int3
aam
mov
dec
jmp
xchg
pushf
and
push
cmovno
sti
shl
insl
mov
pop
add
dec
xor
sti
cmp
lods
mov
mov
add
mov
sbb
and
pop
pushl
adc
add
incl
and
xchg
call
xor
push
xchg
aas
stos
scas
inc
in
mov
mov
pop
scas
cli
sbb
out
xchg
fwait
rclb
inc
stos
push
dec
fstp
pop
sar
push
inc
push
cmp
int3
mov
aaa
cmp
ljmp
test
in
das
push
icebp
jno
pop
loope
dec
cmp
ret
xchg
gs
ja
pushl
aaa
popa
jp
ss
mov
or
and
adc
decl
jl
and
cltd
push
les
dec
xor
in
add
sub
ljmp
mov
adcl
scas
rolb
fs
jo
fwait
mov
test
fisttps
pop
xlat
out
dec
dec
sub
xor
add
repz
push
sti
ljmp
push
enter
add
fbstp
test
mov
jg
dec
fdivr
lods
sbb
jbe
pop
pusha
daa
push
aas
jo
adc
dec
cwtl
jmp
pop
mov
push
stc
cmpsl
test
or
hlt
adc
dec
hlt
mov
or
decl
inc
pushf
pop
dec
adc
scas
cmc
roll
lods
out
ja
jg
fiaddl
dec
les
cmpsl
xor
mov
leave
shll
ljmp
lods
xor
mov
jns
test
fisttpll
outsb
xchg
cmpsl
mov
or
mov
pop
fimull
pushl
cld
pushl
pop
inc
add
adcb
inc
and
mov
call
add
and
stc
cmc
jmp
xor
mov
jae
mov
notl
imul
decl
rcrl
jo
xlat
pop
jge
pop
push
cmp
mov
aas
into
scas
xchg
ds
pop
inc
mov
push
mov
xor
dec
int
sbb
jmp
mov
sbb
jmp
add
div
bound
inc
faddp
mov
les
outsl
push
sbb
test
insb
decl
xchg
add
cmpl
push
pop
pop
jb
out
jne
aam
add
incl
imul
cmp
push
pop
pop
jae
js
or
lock
hlt
call
std
dec
xchg
jle
and
bound
jle
push
pop
imul
cmp
fcoml
sbb
pop
mov
mov
mov
pop
mov
mov
pop
xor
dec
jmp
push
mov
cmp
or
adc
cld
mov
or
sub
jg
sbb
xchg
push
popf
lea
lret
adc
xlat
lahf
jle
gs
cmpsl
test
decl
or
jno
inc
loopne
push
pusha
test
pop
push
mov
iret
mov
sbb
mov
mov
es
cmpsb
das
lret
xor
cmp
popa
sti
xchg
inc
in
push
push
sub
mov
mov
or
jbe
ret
fistpll
xchg
repnz
sub
sub
and
push
or
jb
scas
mov
inc
icebp
push
xchg
adc
mov
daa
xor
call
pop
jbe
mov
jo
loope
and
out
enter
pop
or
nop
fisubrs
sub
stc
adc
xor
ljmp
je
out
mov
jmp
loope
cld
cli
daa
mov
das
movsb
inc
xor
or
xor
dec
mov
int3
sahf
xchg
test
lret
push
mov
push
fimull
mov
adc
clc
pushl
push
cmp
call
repz
or
mov
adc
ljmp
add
mov
test
mov
std
test
mov
and
lret
or
mov
mov
inc
mov
decl
mov
mov
inc
xor
push
ficomps
cmpsl
shlb
insl
push
je
sti
imul
std
sbb
and
imull
ljmp
imul
add
pop
test
xor
mov
and
ljmp
in
in
push
popa
mov
sbb
xorl
stos
pop
fidivrl
xor
add
movsl
addr16
rorl
ret
jle
std
cwtl
dec
out
aam
sbb
mov
movsl
and
mov
scas
lahf
mov
dec
sbb
outsb
mov
push
dec
insb
or
xchg
cmp
aad
scas
inc
inc
leave
adc
shl
fnclex
test
clc
decl
nop
inc
and
sbb
mov
int
stos
xchg
out
add
xchg
or
xor
std
out
movsb
cld
xchg
cltd
repz
ljmp
imull
sbb
or
inc
cmp
push
ret
jb
aaa
fisubrs
ror
mov
add
out
clc
xorl
pusha
adc
and
inc
dec
mov
lcall
push
xor
fidivrl
addr16
cmp
sub
jb
sub
in
sub
cli
mov
or
shr
stos
les
fildl
jo
hlt
or
out
pop
mov
jge
lods
popa
push
ja
add
clc
inc
jl
push
jl
je
xchg
push
fisubs
pop
lcall
inc
jne
cld
inc
and
pop
xchg
es
incl
aas
es
into
lods
mov
push
fisttps
addr16
fcomip
aad
and
das
sahf
rcr
scas
cld
xchg
movsb
pop
xchg
cmc
das
xor
push
sbb
add
ljmp
mov
mov
xor
inc
xchg
jb
add
les
mov
in
mov
push
or
cli
mov
or
fcmovne
in
idiv
mov
inc
inc
mov
stos
push
xchg
jmp
pushl
das
dec
out
lahf
sub
jbe
cmp
add
call
test
jl
and
pop
pusha
xchg
outsl
xchg
cmp
mov
int3
cs
cmp
fwait
sbb
mov
inc
add
incl
mov
arpl
shrb
cmpb
dec
fwait
aad
inc
push
or
js
loopne
jbe
mov
jne
add
adc
bound
lcall
loopne
push
mov
inc
fsubl
push
arpl
push
outsl
jae
in
mov
jge
jecxz
sub
dec
dec
clc
stc
cwtl
ljmp
icebp
cmpsb
movsl
loopne
bound
mov
jecxz
push
jmp
sbb
mov
cmc
dec
fisubrs
xchg
push
mov
bswap
dec
xchg
call
aam
mov
sub
push
out
mov
mov
fwait
mov
lahf
jo
into
mov
scas
movsl
inc
sbb
adc
pop
cmp
incl
mov
hlt
cld
lret
shrl
nop
in
inc
or
ljmp
push
mov
decl
jle
or
dec
cmc
aad
aas
lret
adc
cmp
dec
or
adc
inc
ss
lcall
add
jno
outsb
sbb
mov
xchg
bound
lods
mov
sub
je
int
or
sub
jmp
dec
cmp
dec
inc
pop
nop
cli
mov
push
jp
sbb
ljmp
into
ss
lcall
jbe
push
jne
ds
lcall
or
sub
lret
test
inc
dec
stos
mov
pop
xlat
pop
call
mov
aaa
pop
pushf
push
jmp
out
sahf
sub
fisubs
adc
jmp
jp
inc
in
cmpsb
hlt
clc
pop
stos
mov
mov
mov
ficoml
lods
xchg
shll
incl
lcall
or
adc
daa
pop
iret
xchg
mov
or
aas
jecxz
sti
jb
shlb
iret
mov
je
out
xor
cli
pop
push
in
lods
pop
int
mov
add
jb
xchg
imul
pop
sbb
push
sbb
cli
scas
push
insl
and
test
pushl
cmpsb
outsb
fucomip
cmpsb
out
add
jg
ljmp
idiv
lret
sbb
mov
xor
sub
decl
insb
cmc
arpl
push
mov
cmp
sbb
imul
mov
call
sbb
popf
fildll
bound
movsl
xchg
loop
insl
jne
cmp
sub
sahf
xchg
mov
das
sub
js
add
push
mov
mov
lcall
dec
mov
leave
or
adcb
hlt
add
rep
adc
sbb
and
ljmp
shr
adc
cmp
jecxz
and
cmc
in
addr16
mov
negb
or
test
push
insl
adc
nop
in
incl
sbb
popf
jmp
sbb
adc
jg
mov
lcall
push
cmp
decl
mov
push
jne
or
aas
in
add
scas
aas
dec
dec
fiadds
icebp
mov
adc
test
pop
cmp
mov
mov
lcall
jae
adc
daa
rcll
inc
fildll
mov
mov
pop
add
int3
cmp
push
jg
icebp
notb
fistps
lea
inc
mov
jo
dec
mov
fbld
pushf
rolb
mov
push
cmp
int
dec
xchg
repz
fcoms
mov
into
aaa
inc
clc
call
int
pop
xlat
pushf
mov
push
clc
cmp
mov
lcall
das
lahf
jnp
xchg
out
mov
adcb
mov
fidivrs
fstpt
xor
daa
xchg
aas
xor
push
pop
xchg
fisttpll
fldcw
fildl
jb
ret
ljmp
cld
sbb
iret
push
xchg
stos
enter
gs
jecxz
cmp
xchg
mov
cmp
test
jmp
out
popf
dec
lahf
fstpt
jbe
jmp
xlat
push
sti
jne
mov
xchg
mov
cmp
cltd
outsb
xchg
inc
das
int
inc
aam
mov
pushf
or
xchg
int3
jg
repnz
and
jg
in
sub
sub
ficompl
jp
push
adc
cmc
inc
push
gs
sarb
aam
test
add
ja
orb
arpl
mov
jg
pop
enter
aaa
mov
xor
mov
cmp
adc
rcl
jmp
xor
dec
jl
xchg
or
dec
shll
pushl
movsl
stos
imul
xchg
jp
sub
std
add
cwtl
lahf
jge
imul
test
jmp
mov
ljmp
cmp
int3
lods
icebp
and
out
sub
pop
push
rolb
mov
mov
fs
fdivrs
outsl
aad
outsl
cli
ljmp
aas
add
nop
mov
test
filds
mov
out
and
pop
and
xchg
movsb
mov
test
dec
jno
jns
mov
adc
cwtl
imul
cli
mov
cli
mov
sbb
fadds
scas
ror
sbb
in
lcall
xchg
lcall
fcmovnbe
add
scas
mov
push
jmp
dec
mov
ds
push
jae
sub
inc
test
aam
sub
sub
out
lods
int3
push
das
aam
xchg
stc
adc
push
or
popf
faddl
rol
ret
jmp
push
clc
jecxz
nop
mov
scas
pop
dec
jle
pusha
add
test
shl
negb
xor
add
lahf
pushf
jns
out
aad
and
xlat
test
test
jp
dec
inc
ds
test
lret
xchg
jae
cmp
fsub
fimull
mov
cwtl
jecxz
push
ljmp
cmp
xchg
insl
ret
mov
sbb
push
mov
repz
stc
lcall
les
xchg
push
leave
lea
adc
cmp
and
popf
or
sbb
inc
nop
jge
jg
pop
mov
sahf
ljmp
add
sbb
mov
or
ljmp
movsb
mov
push
push
lret
roll
jl
gs
scas
mov
sbb
fwait
movsb
pop
dec
add
jmp
mov
adcl
call
movsl
cmp
jb
add
mov
jp
mov
jg
lock
ljmp
cmpb
pop
and
xchg
out
mov
ljmp
push
pop
mov
dec
ja
addr16
in
or
and
sbb
out
cli
jg
std
mov
dec
in
arpl
mulb
cs
add
lret
jbe
jg
lahf
fcoms
adc
and
cmpsl
rclb
xchg
xchg
faddl
jmp
repz
decl
lock
iret
jns
aam
out
lods
enter
ss
sahf
mov
push
mov
mov
ret
inc
sub
push
fcompl
rcrb
sbb
les
aad
fcompl
mov
push
in
jmp
xor
xor
addr16
cmp
sbb
stos
clc
adc
das
clc
pushl
xor
cmpb
shrb
or
fwait
jecxz
mov
call
test
dec
mov
jmp
in
xchg
jnp
div
call
adc
mov
fstps
icebp
testb
andb
fnstsw
scas
xchg
fistpll
or
scas
dec
cwtl
xchg
mov
xlat
pop
xor
jns
sub
sbb
popa
dec
es
call
loopne
xchg
fwait
rcll
fdivl
insb
dec
mov
push
sub
fwait
mov
call
rorb
cwtl
aaa
mov
inc
fildl
dec
sahf
mov
mov
adc
lea
inc
scas
ret
test
pop
outsb
push
enter
xlat
in
mov
fcomp
mov
imul
cmp
or
pushl
push
setns
cld
in
lods
jge
into
loopne
sbb
mov
ja
aam
jns
ss
xchg
jb
in
ja
hlt
lcall
cltd
inc
mov
inc
movsl
jae
fsubp
test
xchg
loop
xor
test
sub
mov
js
pushl
pop
mov
jno
je
idivl
adc
inc
mov
cli
iret
insb
movd
mov
out
mov
add
pop
ret
cmc
sbb
cmp
or
sti
inc
pop
fidivrl
divl
mov
in
mov
dec
inc
insb
xchg
adc
ljmp
in
mov
cli
ljmp
call
mov
xchg
push
in
fsubrl
je
sub
les
dec
popf
fwait
incb
mov
stc
or
out
push
sub
mov
cmp
dec
inc
es
enter
add
sub
cmp
ljmp
sub
shrl
loopne
popf
mov
pop
sbb
jecxz
mov
insb
dec
leave
ja
movsb
sbb
jmp
cmp
adc
dec
cwtl
sub
decl
popfw
aad
addr16
cs
inc
lret
std
hlt
adc
ret
outsb
fs
shll
popf
cli
pushl
decl
cmc
popa
into
imul
and
add
movsb
dec
sub
push
xchg
lea
mov
cmp
add
jge
in
pop
ljmp
jecxz
test
inc
xor
push
mov
xor
inc
shrb
lcall
push
repz
fs
repnz
test
imul
sbb
mov
addr16
mov
jp
sub
mov
pop
adc
cld
gs
fwait
ret
sub
incl
rorb
enter
sti
lea
idiv
cmp
cmpl
dec
dec
ljmp
mov
xor
inc
das
fsubrl
dec
in
xlat
test
call
sub
jne
push
pop
into
xchg
add
sbb
jg
mov
pushf
and
fisttpl
pop
fcomi
jp
cwtl
jg
cmc
cmpsl
jae
mov
push
inc
insl
jns
mov
nop
xchg
xchg
jno
mov
push
repz
ljmp
add
inc
sbb
xchg
pop
cmp
inc
mov
in
dec
dec
mov
enter
mov
out
jp
ja
sbb
cmp
pop
or
mov
and
shrl
sub
pop
insl
mov
in
shll
xor
and
mov
adc
insl
xor
mov
sub
adcb
imul
ljmp
ss
mov
adc
pop
pusha
fcmovne
ds
add
scas
ds
shlb
sarl
fldl
pushl
mov
leave
and
fisubs
rol
push
pop
aaa
cs
daa
and
sbb
adc
shrl
and
sbb
xor
xor
or
iret
xchg
out
dec
ror
fstps
pushl
push
cmpsl
add
or
cld
mov
mov
mov
fidivs
pushl
cmpsb
and
cmpsb
test
mov
lods
rorb
mov
addr16
lcall
das
xchg
push
mov
mov
and
sub
jp
clc
popf
xchg
jo
xchg
in
cmp
out
and
loop
insb
jmp
adc
cmc
ljmp
mov
xor
mov
xchg
jp
add
in
rcr
popf
fs
and
add
iret
idivl
push
adc
dec
and
negl
mov
lods
mov
and
pushl
scas
subb
ja
xor
mov
jbe
xlat
push
mov
out
add
push
out
add
or
dec
addr16
mov
pop
add
xchg
sub
push
pop
adc
mov
jp
cltd
vunpcklpd
and
pop
add
fiaddl
repnz
push
lcall
xchg
lods
jb
mov
fwait
call
jbe
sub
arpl
or
fwait
push
insl
xchg
test
or
mov
adc
xchg
lds
test
pushl
imul
dec
aas
in
pop
xchg
and
jnp
mov
sub
fcomps
dec
nop
fisttpl
dec
pop
decb
mov
push
mov
fisubl
lds
ljmp
jmp
sahf
out
add
outsl
addr16
aam
xchg
jge
cmpb
jae
push
xchg
sbb
into
xor
inc
adc
or
mov
sbb
mov
je
loop
out
or
jmp
adc
mov
push
or
jmp
and
fs
dec
out
jb
jmp
rcrb
out
sub
cwtl
mov
int3
popa
lret
out
insl
stos
mov
mull
mov
scas
pop
sbb
lcall
aad
fistpll
int
xchg
dec
xchg
sbbb
pop
addr16
xchg
je
add
inc
or
call
scas
cwtl
push
inc
jne
int3
or
jbe
cmpsb
push
cmp
in
jmp
les
mov
fs
sbb
and
mov
jne
test
popa
bound
inc
xchg
popa
pop
cmc
add
mov
inc
jo
mov
adc
cmpsb
lods
div
pop
jl
les
std
ljmp
movsl
push
mov
add
mov
cmp
jge
shlb
xor
jp
sub
out
incb
mov
push
or
or
into
leave
adc
jbe
stos
test
mov
cmpsl
sarb
or
movsl
and
inc
rorl
shlb
shrb
decl
cs
or
mov
outsl
mov
std
enter
push
sub
jge
jmp
pop
and
pushl
and
xor
xchg
or
cwtl
std
push
jmp
xor
lret
sub
push
jno
xchg
inc
lcall
call
push
repnz
cwtl
sbb
xlat
mov
jmp
pop
ljmp
lods
ljmp
or
bound
shr
pop
call
cld
mov
sbb
fs
push
pop
pop
cli
mov
inc
adc
jno
dec
cmp
add
jmp
mov
cmc
mov
mov
push
out
or
pushf
fdivrp
lcall
aam
adc
jno
jb
fs
and
sbbl
xchg
dec
test
popl
ds
fstpl
lcall
or
sbb
clc
fcompl
lcall
jle
adc
and
imul
push
data16
mov
in
adc
movsb
call
les
dec
pop
cwtl
enter
and
dec
inc
icebp
or
pop
cltd
cltd
adc
jns
je
add
lds
outsl
imul
and
mov
neg
adc
jecxz
lcall
mov
push
push
mov
jno
jns
dec
stc
in
jbe
push
mov
sub
rorb
movsb
inc
xor
je
mov
pushf
jns
stos
cwtl
test
or
jle
ret
addl
sub
lcall
clc
andps
repnz
or
mov
mov
and
jecxz
ljmp
mov
pop
cli
push
arpl
addr16
jno
rcr
adc
mov
out
mov
leave
xor
cs
gs
xor
inc
pop
movsb
jp
das
or
jmp
push
sbb
dec
xchg
push
mov
jnp
or
push
adc
mov
mov
xchg
adcl
mov
pushl
inc
mov
jnp
pop
sbb
pushf
push
pop
mov
popf
jne
push
cmp
pushl
cltd
rcrb
pop
dec
cmp
pop
sbb
xor
mov
sub
push
std
mov
add
and
div
sbb
cwtl
fcomip
inc
add
push
xchg
out
jmp
mov
adc
insb
dec
pop
imul
xchg
xor
jg
jl
pop
dec
std
stos
mov
ret
sbb
add
adc
dec
or
xorb
test
shrb
in
shr
push
inc
fildl
dec
xchg
ss
int
pop
jg
xor
mov
incl
insb
cmp
fmull
clc
jle
and
pushl
shrb
xchg
xor
and
fldl
pop
pushf
int
mov
sbbl
and
aas
call
pushf
gs
fwait
out
pop
xor
jae
sarb
inc
cs
js
pop
jae
cwtl
mov
leave
jmp
dec
xor
loopne
out
lcall
cmpsl
push
out
cmpsb
xchg
cmp
jl
push
push
cmp
popf
mov
jmp
push
int3
loope
mov
jecxz
cmp
xor
lock
push
enter
pop
cld
jmp
or
mov
inc
xor
mov
sti
adc
push
push
fimull
sub
pushl
into
ljmp
int
fcomip
push
push
lcall
xor
adc
jp
ljmp
shrb
jno
dec
mov
sbb
pushf
subb
enter
mov
cli
fisubl
push
xor
and
mov
or
mov
sbb
push
cmp
and
dec
test
sub
cmc
sbb
mov
lcall
dec
in
xchg
out
fwait
mov
and
scas
push
xchg
xor
mov
mov
out
rcll
inc
inc
and
es
andb
jecxz
loope
push
sti
in
mov
mov
mov
sbb
insl
gs
mov
xchg
xchg
pushl
mov
lcall
and
loop
sbb
ljmp
mov
test
adc
lcall
pushl
inc
scas
dec
inc
flds
mov
inc
lahf
add
mov
ljmp
mov
mov
pop
sbb
insb
push
inc
sub
cmp
out
cmp
xor
dec
cmpsb
lds
sub
mov
mov
unpckhps
adc
jl
jo
popf
rcr
jge
add
pop
dec
push
shrb
or
inc
mov
jno
test
in
imul
xchg
adc
and
call
out
inc
xchg
push
loopne
and
mov
dec
xchg
dec
rorl
gs
sub
stos
sbb
sbb
js
mov
or
inc
ja
push
mov
dec
or
sbb
fwait
jle
ss
scas
loopne
sbb
das
clc
cmp
xchg
jb
mov
and
mov
lea
push
int
xchg
sbb
out
cli
lea
adcb
mov
pop
mov
sbb
repz
arpl
jle
sub
mov
mov
jb
sar
ljmp
test
or
repnz
push
imul
ljmp
pop
jg
lcall
aas
faddl
daa
jle
mulb
xchg
add
or
fwait
dec
sar
shll
into
and
stos
mov
sbb
sbb
adc
adc
jg
std
mov
jg
loop
mov
enter
mov
imul
lahf
jne
in
pop
xor
cmp
icebp
jmp
cmpsb
outsb
loop
mov
push
scas
clc
push
mov
icebp
int3
jns
fsubrl
mov
or
loopne
cwtd
bswap
addr16
jl
incl
cltd
jp
insl
adc
push
lods
and
push
ret
add
dec
cltd
call
jbe
xor
xor
fs
call
lods
int
xor
mov
ficoms
popa
fcmovnbe
and
jmp
pushl
repz
inc
popa
imulb
push
jbe
push
imul
ret
adc
int3
jge
lahf
sbb
sar
lcall
repz
mov
cmp
arpl
xor
sub
mov
inc
loope
pop
xor
mov
or
lahf
movsb
outsl
test
mov
or
decl
lock
imul
dec
lods
sbb
add
inc
ljmp
sahf
inc
cltd
push
or
mov
rcrl
mov
call
lcall
addb
lods
dec
fistl
xlat
es
lods
pop
dec
or
pop
pusha
test
int3
dec
incl
mov
incl
call
outsb
add
jg
imul
ljmp
ljmp
xchg
cmp
neg
pop
xchg
addr16
pop
mov
sub
fdivl
aas
lcall
lcall
ficoml
repnz
push
repz
das
xchg
pop
sub
ljmp
addps
push
repnz
mov
enter
outsb
test
mov
hlt
sar
push
adc
pop
and
jo
jnp
loope
test
and
ret
ljmp
mov
push
cmp
xchg
std
and
lret
push
dec
pop
jno
push
inc
cltd
aam
ficoml
push
jns
mov
lret
cmpsb
out
xor
outsl
mov
ljmp
mov
lcall
jno
jnp
mov
cmp
cmovae
out
lcall
loope
pusha
dec
xor
jmp
ljmp
cmp
and
inc
dec
push
insl
add
lcall
and
xor
lods
outsb
jmp
pop
fwait
bound
lds
xchg
sbb
fistl
cld
decl
test
inc
stc
int3
pushf
xchg
jae
jae
mov
xor
aam
data16
daa
adc
and
add
aaa
jns
testl
ja
roll
pop
add
push
jp
sub
inc
fdivs
mov
out
jp
push
adc
aaa
leave
inc
mov
xorps
mov
adcb
add
mov
pop
xchg
pop
pop
sti
addb
sub
jg
or
xchg
arpl
roll
shrb
cmp
mov
xchg
fcompl
dec
test
sbb
clc
out
push
mov
xchg
mov
fists
lahf
jge
mov
les
mov
dec
dec
cmpsl
mov
sbb
call
rorl
sbb
in
sub
sbb
ror
roll
jb
cmc
mov
icebp
pop
and
jo
mov
out
and
std
clc
ret
imul
in
fisubs
nop
sbb
add
adc
data16
sub
incl
add
inc
sti
shlb
mov
push
add
xlat
push
adc
daa
inc
out
and
jno
fisttps
push
or
es
add
or
inc
nop
imul
test
mov
cli
bound
jmp
sbb
cmp
call
aaa
repnz
call
lcall
pop
or
xor
xchg
mov
cld
rcl
lods
mov
fbstp
adc
sub
mov
push
hlt
sbb
out
fcomip
jo
test
ljmp
xor
dec
mov
dec
mov
xor
ja
cltd
sub
out
inc
jb
decl
adc
cli
mov
mov
enter
lods
ds
push
xchg
dec
dec
cmp
jmp
jb
ds
mov
cmp
and
rclb
mov
test
xor
dec
inc
mov
dec
xchg
dec
mov
pop
decb
clc
mov
aas
out
sahf
jbe
mov
iret
cmpsb
idiv
dec
sub
cmpsb
call
hlt
movsb
pop
push
cmp
andb
fisttpl
inc
lahf
sbb
rolb
movl
aaa
push
push
mov
mov
jns
xchg
sbb
or
in
lcall
push
jecxz
and
mov
test
dec
mov
mov
ljmp
loopne
lret
aas
ret
push
pop
test
sahf
lock
push
les
cmp
inc
jle
jbe
and
cwtl
insl
popf
sbb
adc
dec
pop
sahf
mov
xlat
leave
mov
fstl
ret
icebp
clc
lcall
push
cmpsb
je
out
pop
mov
insb
icebp
mov
cmp
clc
dec
and
jnp
jle
jnp
fcom
jge
imul
jge
imul
dec
xchg
mov
xchg
or
push
mov
push
incl
cmpsb
aas
cmp
ds
mov
pop
sahf
jno
sti
lock
or
nop
ljmp
movsb
pop
pop
pop
add
loope
adc
pop
aad
or
ficoms
jp
or
mov
into
enter
pushf
cmp
jg
call
movsl
daa
jbe
mov
movsb
mov
je
ret
sub
cmp
stos
sub
fdivrl
insl
and
jnp
enter
popf
sub
pop
push
scas
scas
jmp
mov
and
loop
les
pusha
adc
pushl
cs
faddl
mov
stos
pop
jo
aam
mov
scas
cmp
sub
pushf
loop
jg
xchg
xor
sub
pop
sub
inc
clc
push
mov
rcr
sub
inc
lods
push
jo
jno
insl
cmp
lods
punpckhdq
pushl
mov
outsb
aad
pusha
lods
pop
push
push
cli
xchg
push
mov
insb
pop
add
and
cli
aaa
cld
dec
push
push
or
jp
xchg
pop
push
push
push
aas
addr16
mov
sti
adc
inc
add
fisubs
push
jg
decl
daa
jno
inc
push
inc
mov
cli
jmp
fisubrs
ljmp
mov
call
int
stc
push
test
mov
push
lret
cmp
movsb
push
jbe
js
gs
mov
nop
sbb
mov
xor
lds
xor
shrb
int3
loope
stos
jmp
repnz
call
in
notb
cmp
inc
aas
sahf
scas
add
adcl
or
std
out
pop
mov
sahf
gs
pop
xchg
add
cld
jg
sbb
push
clc
push
jns
fildll
pop
and
daa
sarl
lret
dec
xor
sahf
jae
cwtl
or
xor
lcall
cmp
rep
mov
sar
adc
ret
sarl
sub
or
jb
cmp
lcall
rorl
and
mov
sbb
notl
inc
jp
dec
jae
fsubrl
call
std
sub
mov
adc
iret
mov
sbb
fsubrl
ljmp
pushf
dec
push
mov
test
fadds
jle
pop
cmp
pushl
dec
adc
fnstcw
jo
cpuid
iret
lcall
add
ljmp
lret
add
cmp
pushf
repnz
mov
inc
int
aas
mov
cmp
fmull
sub
ljmp
dec
cmc
lret
jl
stc
xchg
dec
movsb
ja
mov
pop
mov
ret
or
in
or
jne
decl
adc
inc
movlps
adc
add
out
dec
add
fistl
enter
fimuls
jg
jae
and
pop
stos
shlb
pushl
jns
outsb
popa
jo
ss
into
dec
fstpl
cmpl
cli
mov
sbb
std
mov
mov
mov
push
fs
lcall
pushl
lea
sti
mov
xchg
cltd
inc
xchg
mov
addr16
jbe
xor
add
add
inc
dec
call
jns
xchg
ss
cmpsl
mov
pop
jns
pushf
adc
pusha
push
aad
insl
mov
cmp
fs
sti
lret
sbb
mov
adc
push
idivl
cs
pop
cmp
xor
in
xchg
and
push
sub
mov
dec
pop
dec
stos
mov
les
or
xor
mov
incl
fstl
cmpsb
push
pop
or
jp
jmp
mov
mov
push
orl
mov
sub
jp
mov
inc
clc
in
xor
pushl
cmp
push
mov
mov
dec
push
mulb
dec
mov
jmp
mov
mov
lahf
mov
sub
mov
out
jle
mov
incl
shlb
cmpsb
enter
inc
rorl
shl
stos
data16
mov
ljmp
add
outsb
sub
es
ss
aas
push
xchg
and
dec
push
hlt
inc
ja
xchg
ljmp
repnz
mov
xor
cli
jo
fstpl
das
jg
mov
sub
arpl
xchg
sbb
or
fstps
cwtl
fistpl
ljmp
ss
inc
ja
push
mov
lret
sti
js
out
cmp
ds
cmp
test
fldln2
xchg
pop
pop
push
fcoms
clc
fwait
outsb
test
call
and
push
pop
cmp
insl
mov
sti
push
lock
decl
enter
xchg
ja
jae
cmp
repz
add
hlt
push
or
dec
add
lcall
mov
xor
jnp
pop
dec
add
mov
es
jg
jmp
rcrl
rcr
hlt
cwtl
testb
jg
jmp
mov
add
xchg
sbb
mov
add
mov
sub
shll
das
push
mov
sar
xor
pushf
pop
pop
adc
jbe
push
cmp
mov
cmp
cmpsb
rolb
insl
and
clc
or
jae
imul
jmp
pop
ds
push
inc
jbe
repnz
ljmp
adc
jnp
xor
je
and
incl
sbb
cmp
sahf
fs
xchg
clc
jnp
fdecstp
lock
and
lods
cmp
pop
push
jmp
shrl
and
out
and
jp
sub
sub
fcmovnbe
sti
shrb
ret
jecxz
shrb
inc
loope
stc
inc
pushf
pop
inc
rcll
fdivs
fldt
or
mov
cmp
jne
mov
movsb
shl
lcall
mov
mov
sub
and
xchg
fs
pushf
mov
jmp
or
shl
std
mov
push
cs
adc
mov
lahf
xchg
add
pushl
jge
scas
shl
sbb
push
jge
pusha
in
cmp
pushl
rorl
lahf
mov
int3
mov
dec
xor
push
fildl
push
jb
fimull
adc
sbb
stos
adc
ret
xor
je
js
adc
or
lcall
xchg
cwtl
call
inc
push
mov
jle
pop
stos
fsubp
xchg
xor
loope
sub
jmp
push
push
daa
adc
xor
mov
test
mov
pushl
sbb
std
adc
std
adc
aas
fs
cli
mov
mov
push
jg
andb
mov
dec
xchg
loopne
inc
adc
dec
mov
call
aas
mov
xlat
stos
mov
jecxz
jmp
cmp
idivb
xchg
or
movsl
ljmp
clc
mov
add
sahf
outsb
rcrb
push
notb
mov
rorb
aaa
add
incl
dec
and
push
das
push
add
and
inc
adc
mov
pusha
insl
pop
repnz
xchg
xor
arpl
aam
add
call
xor
ret
out
mov
cmc
dec
jp
mov
jl
add
lea
or
and
in
ret
adc
ljmp
cli
cld
jno
jge
aam
sbb
or
pop
inc
inc
lock
and
jno
shr
nop
dec
out
stos
inc
cld
inc
andb
repz
cli
push
out
orb
fstpt
call
call
das
insl
add
negl
xchg
jo
in
cli
aad
dec
test
call
mov
xor
fs
inc
mov
mov
lds
push
xchg
xchg
insb
shrb
lock
mov
adc
and
mov
xor
scas
xchg
and
enter
sbb
jno
out
cli
decl
mov
pop
mov
push
cmp
add
pushl
xchg
mov
out
mov
mov
cltd
dec
pop
pop
addl
and
cmpsl
inc
xor
ljmp
or
inc
pop
pop
sbb
adc
pop
adc
xchg
xor
in
popf
incb
jns
sar
cmp
xchg
in
sbb
fidivl
mov
movsb
pop
inc
mov
jg
sub
xchg
xor
lcall
pop
outsb
orb
mov
test
add
ja
xchg
in
loop
stos
cmp
das
shll
fnstsw
dec
test
daa
jecxz
mov
pop
ret
lahf
repz
or
fwait
push
or
mov
lods
cli
inc
inc
in
icebp
fs
mov
hlt
cmpsl
add
enter
dec
repnz
jp
adc
decl
or
shll
lea
movsl
xchg
jle
sti
xor
imul
add
decl
lock
lock
and
xchg
arpl
push
mov
nop
jmp
inc
clc
jmp
out
loope
push
or
jmp
dec
add
add
mov
call
push
dec
pop
mov
pop
lds
jno
dec
mov
mov
pushl
aam
push
lds
xchg
aad
test
sbb
in
imul
outsl
cli
sub
push
sub
clc
mov
sub
inc
pop
lret
lds
test
and
pushl
aaa
or
sbb
mov
adc
mov
xor
sbb
into
push
add
insl
push
cmc
jl
jmp
sbb
jecxz
movsl
leave
sbb
and
lahf
rol
xor
cmp
jle
ljmp
or
pop
mov
mov
adcl
sub
xchg
sub
jmp
ficoms
inc
lret
mov
push
pop
enter
test
push
sbb
ljmp
jmp
mov
pop
add
adc
aam
xorl
jne
add
call
inc
mov
jnp
sub
mov
push
mov
add
lcall
jmp
dec
or
stos
cld
push
push
mov
fldl
xchg
bound
fstl
inc
in
or
cltd
in
push
incl
jle
add
mov
sbb
cld
mov
inc
push
decl
incb
adc
test
sub
pop
lret
iret
push
pushl
lcall
into
xor
cmc
sbb
pop
cmc
pop
push
pop
pop
mov
mov
hlt
incl
sub
mov
xchg
in
mov
pushl
lret
push
rcr
xchg
add
pop
es
mov
fildl
mov
sahf
or
dec
dec
jle
loop
ret
in
pop
dec
das
mov
mov
or
lcall
dec
repnz
pop
xor
sub
inc
ret
dec
int3
push
decl
ja
cwtl
inc
mov
adc
pop
cmc
cmp
push
sub
stos
jns
fcmovnu
divb
sub
or
mov
dec
jmp
aaa
fisubrl
or
mov
loop
xor
mov
fdivrl
or
decl
dec
call
in
dec
inc
adc
imul
mov
cmpsl
xor
xchg
sar
adc
imul
push
or
mov
shlb
xchg
jle
aaa
mov
jge
outsb
cmpsb
into
mov
call
fbstp
jmp
enter
bound
cmp
es
ljmp
xchg
cmp
movb
ja
mov
push
dec
lret
pop
movb
mov
and
push
inc
addr16
int3
popa
js
sarl
or
decl
dec
aad
cmp
adc
pop
ds
daa
jg
cmp
xor
add
mov
sbb
pop
xor
aaa
cld
incl
cli
mov
adc
sub
dec
mov
loop
push
cld
fiaddl
push
shl
push
pop
insb
inc
fsubs
cmc
jmp
push
mull
repnz
sbb
sbb
pusha
aaa
or
and
loope
jg
and
imul
mov
out
lahf
xchg
pop
decl
and
sbb
scas
sbb
incl
leave
popf
push
mov
daa
sbb
in
cmp
pop
mov
ljmp
jnp
or
adc
jno
xor
repz
vmovsd
and
rcl
lahf
jge
jne
push
idiv
sti
inc
sarl
sub
gs
xchg
cld
mov
jbe
nop
cmp
push
fucomp
in
push
in
sar
pushl
jecxz
or
xchg
cwtl
out
push
iret
int3
xorl
rolb
cmp
pop
lea
sub
jmp
sarb
or
dec
xor
push
test
into
add
cld
sbb
inc
jle
mov
xor
shll
xor
sub
jnp
adc
adc
mov
xchg
sub
aaa
fldt
and
aas
pop
loope
lahf
fs
pop
decl
int3
mov
sub
hlt
popl
mov
inc
test
repnz
jp
jmp
incl
jmp
sahf
add
sbb
popf
clc
fxch
ds
pop
ret
adc
fcomip
cmp
push
pushf
into
push
mov
pusha
inc
jmp
dec
jp
cli
cmc
call
mov
pop
mov
loopne
push
xlat
or
sbb
ljmp
pop
xorb
imul
enter
mov
mov
dec
jae
cmp
cmpsb
jb
repnz
sbb
enter
lock
add
push
lea
stc
testb
push
ja
jnp
push
sub
push
and
iret
icebp
push
jp
inc
mov
js
push
push
xchg
in
icebp
adcl
fnstenv
mov
lret
jo
rclb
push
in
dec
decl
push
add
sub
js
in
test
inc
xlat
push
ds
mov
out
adc
mov
push
adc
push
gs
fcomip
add
lods
leave
pop
es
mov
xchg
sub
stos
xor
jbe
les
getsec
shr
jmp
hlt
lret
fs
or
mov
das
adc
decl
mov
out
stc
xchg
fsubrs
dec
or
mov
pop
int3
add
pushf
cld
jmp
push
mov
push
or
aaa
in
scas
aaa
mov
movsl
sbbl
adc
jbe
xlat
sbb
jl
stos
inc
pusha
push
pop
into
hlt
cwtl
filds
push
lock
enter
jb
or
lahf
mov
cmp
ljmp
scas
xchg
push
pop
lret
daa
xor
inc
call
and
dec
testb
push
std
pushl
sbb
sbb
jle
in
adc
enter
xorb
andl
and
mov
inc
jg
pop
fcomip
inc
mov
aad
cmp
test
sbb
mov
lcall
mov
stc
add
fbld
mov
out
dec
push
incl
jg
jecxz
jge
push
clc
xlat
fistpll
pop
aaa
rol
mov
jp
mov
loop
jmp
cmpsb
add
stos
shrl
or
dec
out
loope
push
enter
sbb
jl
ljmp
add
cmp
test
cs
clc
sub
xchg
inc
jg
ja
shlb
and
pop
lock
scas
incl
push
push
sbbl
and
cli
rcll
pop
pop
gs
mov
clc
rcrb
pop
adc
xor
jno
movsl
aaa
inc
mov
mov
pop
gs
decl
cld
cs
pop
jns
ret
inc
cwtl
cld
lret
push
cli
push
inc
and
call
xchg
jmp
sbb
popa
lds
inc
out
lret
cmp
mov
call
ljmp
and
mov
mov
dec
scas
pop
call
stos
xor
and
ja
jne
jmp
push
jge
pop
fdivl
inc
jge
test
jl
ss
les
push
mov
ljmp
cmp
cmp
dec
stc
xor
mov
gs
call
xchg
xor
add
arpl
mov
bound
mov
ficoml
cld
dec
cmp
inc
sbb
pop
sub
roll
xchg
jge
std
call
mulb
je
jae,pt
adc
pop
mov
mov
push
rorb
sbb
pop
std
dec
dec
cmp
ret
test
jmp
lret
and
add
shrb
inc
ret
cmpsb
mov
scas
addl
adc
das
mov
enter
mov
daa
dec
cmc
pop
mov
adc
jnp
push
push
push
adc
mov
jmp
push
or
out
sbbl
jg
or
in
dec
mull
out
fldl
idivb
nop
les
adc
jmp
sti
stos
mov
push
xor
xchg
adc
push
jns
jmp
xchg
sbb
lret
add
xlat
mov
jmp
or
xorb
jle
pop
sbb
test
jnp
insl
flds
jb
pop
push
in
jmp
call
xlat
cmp
xchg
or
ljmp
inc
movsb
xchg
popw
std
xchg
push
push
pushl
adc
movsl
test
pop
sbb
pop
inc
adc
mov
aas
mov
jmp
in
rorb
shll
add
or
push
push
or
test
mov
xchg
push
push
das
mov
fistps
sub
std
pop
pop
jo
pop
sahf
ss
xchg
lcall
or
js
loopne
mov
cmp
sub
sarl
push
inc
outsl
clc
xchg
xchg
outsb
or
mov
or
mov
push
fcomip
out
sub
pushw
sbb
sarb
pushl
xchg
and
adc
fwait
stos
mov
ja
sar
sub
ficoml
pop
or
js
jmp
pop
fwait
aas
cmp
jmp
dec
sub
cmpsl
adc
mov
das
pop
fcompl
ds
cwtl
inc
into
inc
push
or
out
std
stos
test
loope
jb
sub
cmp
jae
inc
lret
test
xchg
and
lcall
decl
push
and
loopne
mov
sbb
jecxz
jnp
int
dec
pusha
and
ret
lods
int
mov
or
lcall
gs
push
and
mov
sbb
lock
iret
adc
or
lods
mov
insb
fstpt
outsl
inc
insl
cmp
inc
sub
sub
xor
lcall
cmc
or
push
mov
movsb
popf
daa
or
cwtl
mov
xor
fcomps
lcall
stos
cmpsl
flds
subl
movsl
cmovae
mov
int
or
sbb
mov
add
push
int3
mov
cs
jl
insb
jae
stc
aas
xchg
in
jmp
add
inc
adc
xor
xor
sarb
leave
bound
or
sbb
call
mov
cmp
inc
movsb
ret
sbb
mov
jae
xor
lret
jg
dec
dec
mov
sahf
stos
xchg
int
pop
jle
dec
cmp
sub
add
scas
adc
jmp
xchg
xor
jmp
or
int
in
sbb
push
fistpl
pop
fnstsw
scas
or
je
mov
pusha
sbb
cld
call
lahf
sub
hlt
arpl
dec
jnp
aaa
dec
inc
test
incl
lret
sti
pop
subl
js
outsl
mov
sti
outsb
xor
pop
sub
inc
lcall
insl
call
lret
and
or
pop
cmc
call
xor
push
dec
lret
sub
pushf
out
xchg
push
nop
or
cltd
sub
pop
jmp
stos
fwait
subl
xor
dec
test
scas
adc
dec
mov
adc
cli
sub
fbld
arpl
mov
imul
mov
sbb
cs
addl
cmc
rorl
pop
sysexit
into
pop
loopne
push
fisubs
mov
pop
inc
bound
mov
push
jmp
jmp
push
push
sti
add
out
add
fbld
fdivrp
dec
mov
jecxz
push
std
mov
es
push
repz
jmp
cmp
test
sub
xor
lret
insb
push
jle
lcall
mov
dec
into
mov
je
outsl
leave
push
sahf
pop
xchg
sub
sub
jge
mov
ljmp
jo
das
mov
inc
rorl
xor
aam
clc
lock
or
aad
mov
loop
cld
ljmp
rorb
fildll
iret
cmp
aaa
popa
mov
adc
adc
repnz
decl
lock
mov
movsl
out
jl
repnz
bound
bound
adc
fisubl
pop
lock
in
test
sub
out
inc
or
jo
mov
pop
std
fnstcw
inc
jge
cmp
mov
incb
filds
pushl
pop
push
cmp
jmp
mov
push
lea
andl
jb
repnz
es
outsl
push
lods
dec
push
dec
ss
mov
imul
mov
pop
pop
cmp
xor
adc
decl
mov
fwait
push
addb
and
test
je
jae
mov
ljmp
cmp
mov
dec
loopne
gs
add
out
mov
stos
push
int
inc
ret
mov
dec
cli
gs
adc
daa
mov
shl
mov
fildl
jg
pop
inc
lea
shr
lcall
dec
nop
stos
xchg
pop
push
outsl
jmp
call
adc
jg
loope
stos
pop
mov
jle
xchg
cmp
xlat
mov
icebp
push
push
adc
sti
movsl
xchg
enter
add
mov
adc
rorb
lret
add
push
push
xor
adc
push
jmp
xlat
andb
and
mov
outsl
jbe
cmp
fnsave
loop
cmpsb
xchg
sub
lcall
jecxz
rorl
lods
mov
andl
enter
lret
mov
jg
ljmp
fildll
push
enter
or
inc
mov
out
xor
call
ljmp
add
lds
jmp
xor
ret
movsl
insl
arpl
lret
scas
mov
cs
mov
sbb
pop
pop
pop
aaa
pushl
out
test
es
inc
movsl
xor
push
adc
and
stos
out
mov
mov
push
or
data16
insb
int3
push
xor
inc
jg
decl
add
iret
pop
daa
dec
mov
sub
repz
outsl
xchg
xchg
and
add
and
testb
add
sub
push
iret
inc
pop
lret
push
mov
fstl
aad
inc
test
loopne
jmp
test
push
aaa
dec
and
cmp
scas
call
mov
sub
fisttps
fidivs
outsl
jp
inc
jb
xor
jecxz
pusha
or
cmp
repnz
loop
test
add
cmp
decl
sti
lret
xor
xchg
lods
xchg
or
sbb
push
addr16
push
fstpt
mov
jg
xchg
pusha
mov
sub
mov
fldcw
aad
cmp
pop
mov
pusha
and
loop
je
fnstenv
iret
add
leave
bndldx
orb
iret
ret
mov
decl
sub
sbbb
test
sub
add
adc
mov
pop
xchg
adc
mov
aad
fwait
sub
aam
dec
push
mov
rcrl
cmp
incl
jno
mov
stc
or
cmpsb
aam
popa
jecxz
sbb
mov
adc
sar
pop
jmp
dec
filds
xchg
and
lcall
and
cld
ljmp
mov
xor
dec
push
push
ret
clc
xlat
es
mov
add
add
dec
add
adcb
pushf
push
repz
int3
cmp
mov
dec
das
mull
stos
andb
int
inc
cmpsl
ljmp
mov
cwtl
sbb
adc
test
xchg
cmp
roll
or
cwtl
mov
ljmp
xchg
jo
xchg
test
pop
and
mov
aaa
inc
pop
lods
cmpsl
xor
test
lock
jb,pn
jmp
hlt
inc
in
push
insb
mull
popa
mov
lret
das
push
jp
xchg
inc
cmpb
lcall
dec
sbb
inc
ret
adc
xchg
sub
mov
sbb
faddl
stos
sub
pop
mov
fcomip
lcall
mov
sbb
sahf
enter
xor
adc
ljmp
iret
xchg
pop
xor
or
fldcw
fsubr
pop
scas
ret
xor
out
testb
decl
sbb
mov
popf
push
enter
rcr
sbb
and
mov
add
call
fwait
inc
xor
daa
leave
pop
psraw
ljmp
add
fdivr
pushl
insl
fisttpl
jge
enter
insb
aad
lahf
cs
je
jg
mov
dec
incl
xor
pop
xlat
sbb
adc
sbb
jns
repnz
aaa
lret
jg
movsb
leave
xor
je
pop
cmp
sar
dec
adc
sahf
push
pop
sub
es
call
jb
cli
dec
cmp
ret
std
mov
mov
pop
mov
sbbb
jno
stc
fcmovbe
stos
cmp
loopne
mov
cltd
mov
pushf
cmpsl
mov
adc
push
add
test
add
cmp
sbb
call
xchg
mov
jne
sub
cmp
mov
mov
arpl
int3
and
adc
and
rorl
mov
bound
sub
ljmp
mov
dec
push
sub
movsb
xor
shl
inc
leave
outsb
mov
incl
dec
movb
and
xchg
in
notl
rorb
dec
mov
dec
xchg
push
jge
push
cld
rorl
cwtl
push
fstpt
hlt
inc
push
lret
std
jbe
and
lods
pop
sbb
push
push
das
sbb
mov
nop
out
dec
sub
cltd
add
in
dec
movsb
adc
adc
ja
xchg
sub
incl
fsts
dec
dec
popa
int3
fdivrs
ljmp
push
mov
add
adc
shlb
lock
loopne
xchg
jmp
adc
divb
movl
or
add
mov
js
std
lcall
pop
les
popa
stos
push
sbb
sti
fwait
adc
cmp
adc
cmc
mov
decl
pushf
lds
in
imul
adc
rclb
call
push
pop
test
dec
rorb
popf
aam
push
pushf
insb
pop
sub
adc
xchg
cmp
inc
and
call
movsl
mov
rorl
dec
inc
dec
es
inc
xchg
int
sbb
sub
rcrb
movlps
pop
loop
andb
mov
scas
xchg
mov
xchg
inc
adc
iret
incl
pusha
mov
dec
adc
rclb
test
pop
es
xor
inc
sub
sbb
xor
mov
scas
int
mov
or
es
jg
lods
and
shll
loope
clc
sti
sbbb
mov
ljmp
ss
add
out
fdiv
cmc
cmp
mov
mov
scas
jnp
xchg
mov
and
ljmp
lods
sub
sbb
stc
mov
shll
mov
decb
fdiv
lods
outsb
xor
jmp
jne
push
push
fwait
aam
repz
pusha
cmp
rolb
cmp
add
in
inc
pop
mov
cltd
pop
mov
mov
decl
les
push
das
xor
bound
lahf
cmp
iret
jmp
icebp
dec
cmp
cli
xchg
iret
fldt
aas
fldenv
addl
jae
push
out
test
aad
and
sbb
sti
lods
jle
nop
mov
mov
shll
mov
mov
push
data16
out
mov
push
cmp
mov
jp
fsubr
add
jmp
pop
xor
fdivl
popa
scas
out
jmp
jl
pop
sub
xchg
js
mov
aad
sbb
test
test
xor
pop
cwtl
mov
cmp
adc
push
inc
daa
mov
dec
pushf
sub
cmpsl
in
dec
push
ljmp
sahf
cmp
or
add
lcall
or
add
mov
add
in
fidivl
nop
mov
jg
add
pop
cmp
push
add
pop
mov
add
mov
inc
decb
mov
addb
or
inc
push
adc
pop
inc
repnz
adc
pop
and
and
mov
and
add
sub
pop
movlps
aas
bound
popf
jno
mov
mov
jb
movsl
push
daa
add
xchg
dec
and
cmpsl
push
negl
cs
push
movsb
push
movsb
inc
jmp
xchg
test
and
stos
push
and
push
test
and
imul
push
iret
ljmp
mov
scas
pop
dec
lods
push
mov
pop
sbb
int
pop
repz
mov
pusha
sbb
mov
out
jp
les
push
adc
fs
mov
insb
jg
dec
leave
push
imul
imul
jnp
fbstp
movsb
sub
lret
mov
jbe
int
aas
push
fnstenv
fdivs
pop
stos
pop
stos
dec
dec
push
jp
sbb
test
js
jbe
add
jo
mov
push
shll
insl
fcomi
pop
add
outsl
push
shll
fidivrl
iret
outsb
or
mov
outsb
pop
push
ret
je
fidivrs
out
push
sti
in
cmpb
mov
xorb
ljmp
mov
jg
movsb
push
add
mov
sbbl
push
mov
cmp
arpl
push
push
push
add
jne
int
xor
push
ret
add
fsubp
cmpsl
push
mov
push
pop
dec
add
jbe
push
data16
ficomps
jo
xchg
cs
push
jge
mov
shlb
lret
stos
aas
add
out
mov
push
push
xlat
jne
add
cmpb
aad
push
xlat
ja
js
in
cmpsb
jge
push
jns
push
jp
jp
inc
lods
fsubrs
push
fidivrl
sarl
ja
fldl
les
je
jmp
fstp
mov
ljmp
xchg
in
xchg
sub
fnsave
push
xchg
push
setbe
xor
dec
fisttpl
push
lcall
cwtl
push
cltd
cmp
cmp
pushf
cmp
jge
push
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
lahf
fucomi
fimull
push
mov
push
imulb
incl
movl
out
push
hlt
iret
repz
clc
stc
cli
sti
cld
std
xor
inc
jo
add
mov
jae
int3
data16
add
imul
data16
add
pop
add
pop
add
adcb
flds
push
insb
mov
or
push
add
int3
std
mov
or
outsl
or
or
stos
add
stos
stos
cmpsl
inc
in
fidivs
sbb
mov
imul
pop
adc
out
lods
cltd
lods
add
pop
stos
psubusw
lods
pop
mov
lods
mov
scas
insl
lods
pop
pop
adc
and
adc
sbb
add
sbb
scas
scas
scas
add
or
mov
add
mov
pop
in
dec
rcrl
mov
push
add
test
add
and
mov
inc
rcrl
mov
and
and
push
push
and
mov
or
adc
pop
sub
pop
or
sub
push
and
mov
pop
andb
sbb
sbbb
pop
int
and
aas
cmp
pop
cmp
cmp
add
or
mov
pop
xor
pop
or
int3
in
int3
push
or
add
pop
push
fists
xor
mov
pop
das
push
cs
xor
add
xor
das
pop
push
push
jmp
xor
cs
dec
inc
das
inc
inc
xor
adc
mov
xor
jbe
cmp
jl
jge
jno
outsl
add
pusha
pop
data16
ljmp
outsb
dec
dec
cmpb
jo
mov
inc
xorl
mov
xchg
xchg
xchg
decl
lcall
mov
mov
inc
xchg
push
cld
repnz
mov
je
push
bound
js
fidivs
adc
xor
jne
je
stos
or
adc
inc
cmp
addl
pop
mov
outsl
mov
jb
mulps
add
iret
sti
mov
push
mov
cmpsb
push
mov
xor
mov
dec
dec
xor
ja
push
ja
jb
cs
xor
mov
add
fdivp
sti
pop
push
push
add
mov
and
push
mov
out
xchg
jo
push
inc
mov
cmp
mov
add
jae
lahf
xor
xchg
jp
inc
dec
popf
mov
aaa
jle
das
add
jno
lret
push
push
bound
out
cmp
mov
mov
inc
push
sahf
aas
mov
insb
add
outsb
add
xchg
xchg
pop
push
data16
cmpsl
mov
cmpsb
dec
push
dec
push
movsb
jae
add
jb
cs
mov
shll
outsl
pop
xlat
pushf
push
mov
aad
imul
lcall
push
sti
fwait
imull
pop
into
dec
mov
add
ja
sahf
jbe
notb
fdivrs
sahf
push
add
add
ds
push
add
adc
int
and
es
rep
testb
mov
shrl
insb
mov
outsb
push
outsl
ror
push
ds
cld
lret
add
push
jg
fiadds
fcmovnu
mov
call
mulb
mov
in
adc
mov
add
test
xchg
and
loopne
iret
sahf
mov
dec
add
jb
out
in
push
popf
int
fistpll
or
jecxz
or
int
pop
sti
push
aad
push
divb
fildl
adc
push
xorl
sbb
sbbl
mov
roll
test
test
sbb
test
in
mov
add
xchg
nop
and
out
xchg
in
cmpb
push
sub
imulb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
push
outsl
mov
in
cmc
sahf
xor
lcall
push
cmp
aam
inc
and
push
cmpsb
scas
jo
nop
nop
sub
pop
pop
jne
ret
shrb
mov
pop
lock
lgs
int
mov
mov
sarb
push
rcr
rcl
mov
rorb
mov
data16
add
addr16
pushf
sahf
cs
dec
out
je
mov
add
sub
add
mov
femms
or
or
outsl
incl
or
es
push
adc
push
add
aas
and
adc
ds
add
mov
xor
ds
xchg
push
mov
aad
clc
sbb
mov
push
add
pop
or
scas
mov
loopne
ds
stc
lods
scas
mov
aas
and
mov
add
inc
sahf
fldcw
aas
aas
cmp
cmp
pop
add
insl
adcl
scas
cmp
inc
jle
mov
cmp
dec
cmp
pop
adc
dec
aas
dec
sti
ds
adc
ds
xor
dec
mov
test
mov
ds
in
imul
add
mov
icebp
sti
jg
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
decl
movsb
movsl
mov
lcall
sub
sub
fistl
lods
add
add
add
pushl
xor
inc
inc
inc
mov
push
push
push
push
push
imul
push
pop
push
push
push
imul
arpl
fs
das
pop
imul
nop
cltd
jg
decl
xchg
mov
nop
test
insl
popf
mov
sar
idiv
jge
jns
jns
jle
addl
jo
outsb
pushf
sti
addl
jmp
imul
rolb
shlb
add
add
out
or
push
push
add
cmc
repz
dec
xor
inc
push
aas
add
xchg
pop
cmp
test
add
mov
add
outsl
mov
add
mov
push
mov
fnstsw
repnz
push
pop
xchg
data16
scas
gs
jecxz
pushf
add
mov
push
in
lcall
push
arpl
mov
out
jns
or
jae
js
out
decl
into
xchg
add
mov
mov
test
ss
incl
scas
xchg
js
in
and
out
es
nop
sub
push
nop
sub
xchg
xor
xchg
xor
outsb
lcall
leave
jbe
insb
mov
mov
shlb
iret
push
lret
sub
iret
insb
loopne
push
std
into
decb
stos
or
divl
fwait
int
out
xchg
add
test
jg
jle
jge
or
or
jg
call
add
pop
add
push
dec
or
mov
cmp
adc
dec
or
add
fcomps
mov
add
or
pop
pop
cmovg
aas
jl
inc
push
dec
sbb
inc
adc
ljmp
inc
inc
inc
adc
sbb
dec
add
dec
adc
inc
ss
jg
ds
cmp
cmp
cmp
daa
and
sbb
xor
push
add
and
push
sti
pushl
cs
xor
sub
sub
push
add
mov
add
add
subl
mov
push
xor
andl
pop
adc
push
mov
inc
fiadds
push
cmpsl
adc
add
fists
mov
mov
ret
push
incl
add
pop
mov
es
ds
and
or
xor
in
lock
jo
leave
stc
hlt
prefetchnta
jg
inc
sbbl
adc
and
or
sahf
jg
push
or
test
inc
adc
test
jg
cli
mov
shlb
pop
cli
filds
and
mov
pop
pop
add
jg
addr16
mov
nop
cli
push
mov
sbb
add
mov
das
push
add
scas
and
dec
inc
dec
loopne
fildl
inc
test
sub
or
jg
pop
xchg
xor
ja
mov
cwtl
or
jg
enter
cld
jg
pop
inc
add
sbbb
jg
std
ja
or
adc
adc
jg
addl
mov
sub
pop
jg
sbb
sub
and
sub
and
adc
add
shlb
mov
xor
pusha
mov
stos
incb
dec
shlb
fidivrs
jg
mov
mov
add
xchg
or
stos
add
push
jbe
adc
test
push
sbb
scas
incl
add
incl
push
and
imul
mov
adc
mov
xor
mov
adc
je
or
jbe
or
push
jg
add
shll
jg
inc
add
sbb
or
or
orl
xor
pop
adcb
dec
jg
mov
mov
fldcw
pop
push
stos
pop
stos
sbb
mov
pop
daa
aas
or
mov
aaa
pop
pop
add
xchg
pop
jle
add
inc
push
je
or
mov
daa
mov
fstl
cwtl
adc
xchg
push
bound
add
pop
cmp
mov
insl
jnp
jae
pop
daa
push
arpl
fmuls
mov
push
mov
fcmovnbe
out
decl
cmp
push
dec
push
or
fstpl
dec
je
decl
inc
or
jle
jle
or
fists
idiv
fnstenv
add
cmp
ja
push
jbe
xchg
mov
and
push
jnp
push
jp
insl
adc
push
js
dec
jbe
pop
aaa
out
pop
add
mov
mov
jae
es
push
jne
popf
nop
outsb
ljmp
pushl
iret
or
dec
jmp
into
or
ss
adc
mov
or
int3
ja
xchg
test
jns
fmulp
or
xchg
push
push
mov
dec
mov
sahf
inc
fs
out
mov
xchg
cs
aas
popf
inc
push
pushf
cmp
pushf
ds
cmp
sub
mov
xchg
xor
xchg
xor
sub
push
cs
nop
sub
nop
daa
ss
cs
fstpt
cwtl
aaa
data16
mov
call
and
incl
push
imul
xor
incl
adcl
and
movb
es
inc
addb
push
add
cmp
or
xor
dec
push
xchg
nop
mov
ja
loopne
divb
mov
add
add
cmp
stos
mov
sbb
adcb
adc
outsl
adc
add
outsl
or
sahf
sub
or
sub
push
cmp
jmp
adc
pop
push
orl
lea
jns
jno
popf
push
imul
mov
sbb
test
push
lock
cmp
cmp
icebp
test
jp
imul
add
cmpb
push
decl
pop
add
jmp
cmpsl
push
mov
sub
push
push
sbb
nop
add
xor
sbb
push
idiv
xchg
filds
inc
es
into
jmp
syscall
mov
cwtl
or
sub
lods
push
pop
add
pop
jp
add
xchg
pop
lcall
or
mov
sub
insb
lahf
or
mov
cld
jmp
call
inc
imulb
out
inc
add
xchg
sete
add
sbb
jmp
push
adc
adc
mov
movb
or
mov
lcall
adc
call
ljmp
bound
sbb
les
decl
xor
or
mov
lcallw
sub
ljmp
cmp
add
adc
mov
enter
bswap
xor
data16
adc
inc
sti
mov
stos
insl
out
setno
incb
add
push
inc
dec
inc
sub
nop
sysret
arpl
add
mov
outsb
push
sub
dec
arpl
push
sub
pop
sti
and
call
imul
call
mov
jbe
xor
pop
stc
bswap
arpl
leave
add
call
jg
push
inc
test
cli
dec
dec
mov
test
push
imul
push
sbb
imul
rcll
ficoms
push
pop
inc
stos
nop
into
aaa
mov
jecxz
fwait
push
shll
roll
imul
ret
lcall
call
adc
jmp
ljmp
dec
push
mov
push
inc
insb
insl
fidivl
mov
fildll
sahf
movsb
dec
push
stos
push
popf
inc
xchg
fidivs
inc
cs
dec
mov
and
push
add
push
out
push
shrb
rcl
lea
outsb
shrb
es
add
sub
repnz
push
iret
insl
pop
xchg
dec
ja
daa
outsl
pop
imul
push
push
push
push
xchg
push
ljmp
jmp
lcall
xlat
ds
pop
add
repnz
fwait
dec
push
jmp
pushf
cmp
xchg
hlt
push
aas
decb
cwtl
xor
and
push
xchg
hlt
push
push
aaa
push
lcall
ss
xchg
push
xchg
es
xchg
xchg
dec
notb
sub
test
mov
scas
sub
lcallw
xchg
dec
fimuls
dec
cli
pushl
neg
je
aad
or
faddl
mov
push
push
jnp
jp
or
jl
sub
cmpsb
jns
jns
jl
push
jge
in
pop
cwtl
insl
jg
es
jbe
adc
fidivrl
push
in
out
dec
push
dec
repnz
repnz
jae
pop
fidivrl
push
xchg
out
mov
jnp
jge
hlt
in
add
int3
outsb
sub
sub
sub
adc
or
pop
add
add
lahf
mov
jns
push
adc
adc
repnz
push
addb
jnp
lahf
dec
es
addl
push
xchg
bound
inc
lcall
and
push
sub
iret
out
mov
jbe
int
cli
pushl
clc
push
imul
ret
push
enter
inc
sub
jg
je
hlt
fnstenv
cld
fdivrp
outsb
popa
daa
jno
sub
jg
mov
icebp
pop
popa
add
and
mov
jg
mov
ja
aas
inc
and
jp
addb
in
xchg
aaa
inc
ds
incb
out
xchg
xchg
fisttpll
jg
dec
imul
pop
hlt
or
push
ja
dec
and
jge
dec
adc
push
call
fmuls
push
push
fsub
pop
push
or
push
dec
inc
push
int3
decl
jle
mov
fidivrl
arpl
clc
sbb
jbe
mov
push
pop
out
sbb
sbb
pop
push
pop
jne
sbb
mov
and
dec
lcall
jg
jle
jns
shl
sub
mov
jmp
xchg
jmp
mov
push
xchg
xor
test
loop
adc
xchg
jb
jg
xchg
jmp
mov
lret
jg
out
mov
or
test
push
push
fmuls
notb
or
addb
mov
adc
push
js
dec
add
sbb
pop
push
mov
add
add
or
sub
lea
pop
push
inc
lahf
outsl
add
dec
lret
adc
repnz
jae
ret
push
sub
mov
test
pop
push
sbb
imul
add
mov
frstor
sbb
sbb
or
add
sub
decl
mov
push
add
nop
dec
inc
adc
lea
cltd
sbb
pop
add
outsl
movsb
test
testb
push
insb
and
and
jo
pop
xor
inc
imul
push
and
js
add
mov
insb
push
push
arpl
das
inc
jae
outsl
je
inc
adc
stc
into
adc
jne
cmpb
orl
out
fidivs
sbb
mov
push
or
fnstenv
and
je
adc
push
gs
and
dec
imul
jns
sbb
pushf
add
outsb
xor
out
loope
dec
or
xor
jmp
add
pop
push
popa
mov
insb
xor
outsb
pusha
pop
pop
sbb
aad
jns
into
push
fmul
push
imul
gs
inc
push
lock
xor
outsl
or
ss
rclb
mov
xor
test
xor
mov
mov
int
dec
pop
add
imul
subl
jge
popa
mov
add
mov
and
inc
sbb
and
push
outsb
cmpsb
inc
and
xor
test
enter
divb
mov
outsb
cmc
dec
bound
clts
addb
shrb
sbb
imul
loope
fildl
jbe
roll
adc
push
sbb
testb
bound
lret
jo
pop
and
pop
insb
jne
mov
lock
xchg
flds
pop
xor
fnstsw
adcl
pop
inc
push
push
ja
fcmovb
test
outsl
imul
fs
dec
lods
std
push
push
imul
push
cmp
jge
mov
stc
push
push
cmp
clc
push
outsb
lret
bound
or
xor
pop
rcl
jae
or
xor
sbb
icebp
inc
dec
push
sbb
push
push
mov
or
pusha
addr16
das
adc
ds
loopne
adc
mov
aad
dec
jae
xor
mov
pop
arpl
das
loope
jg
outsl
andl
mov
stc
popf
sub
jns
and
les
loope
lods
mov
out
inc
xor
cmp
mov
jae
addb
cmp
or
dec
inc
dec
add
dec
popaw
fildl
or
adc
mov
pop
leave
scas
fs
out
jb
fsubl
xorb
scas
pop
sbb
push
in
loop
je
xor
ds
fiaddl
push
movsl
and
bound
loopne
jo
xlat
adc
and
in
rcrl
mov
aad
or
iret
lods
fadd
push
lods
sbb
xor
pop
mov
sbb
lcall
lock
sbb
and
sub
sub
fdivrs
xor
jo
dec
or
clc
and
adc
jns
add
dec
adcb
cmpsb
mov
xor
xlat
push
insb
push
mov
xor
mov
sub
push
sub
dec
jae
sub
cmc
push
loope
jae
ljmp
inc
je
and
cmp
inc
mov
repz
dec
pop
enter
stc
ja
call
repz
push
mov
and
cmp
mov
lea
xorb
iret
mov
adc
mov
fwait
std
mov
mov
adc
mov
dec
sub
daa
sti
dec
jne
jo
sbb
cmp
inc
jo
orb
jae
xor
shll
or
mov
mov
scas
scas
iret
fcoms
inc
mov
pop
js
repz
aaa
inc
or
jno
xchg
mov
movsl
loop
loope
jne
inc
add
add
adc
add
cli
pop
orb
gs
mov
add
push
lds
inc
inc
arpl
push
fisttpl
mov
cmpb
push
push
sub
dec
sbb
outsb
sub
out
mov
xlat
out
mov
xchg
inc
and
jecxz
sub
xchg
pop
jnp
lret
and
mov
das
shrl
pop
imul
jno
mov
jne
insb
pop
push
out
gs
std
arpl
fiadds
inc
jge
sub
adc
lods
xchg
pop
negb
enter
sbb
test
sbb
jno
or
pop
inc
out
jl
ret
inc
insb
cmp
rcpps
icebp
dec
adc
cs
jb
inc
inc
cmpsl
addb
xchg
add
das
cld
mov
inc
imul
fdivs
insb
push
sbb
and
pop
or
inc
push
ret
push
outsl
mov
mov
fiaddl
cmpsb
jge
jmp
in
jl
pop
adc
or
cmp
dec
pop
out
scas
push
pop
jne
jns
push
or
js
inc
and
or
movsb
addw
mov
sub
std
pop
fidivs
sti
push
or
push
ret
ficomps
pop
xor
mov
adc
outsb
or
and
cltd
jne
outsb
inc
push
sub
mov
aas
cmp
inc
dec
sub
mov
pop
mov
pop
add
mov
sbb
push
dec
or
lret
addr16
cmpsl
loope
js
int3
loop
pop
add
add
shll
add
sbb
movsb
dec
rcrl
sub
or
dec
shll
adc
jbe
shll
xchg
pop
add
cmp
cmp
loop
outsb
add
movsb
outsl
pusha
sbb
push
rolb
and
and
and
or
fdivrs
mov
add
dec
push
outsb
adc
fcomps
sub
push
insl
test
in
jmp
dec
sbb
into
push
mov
imul
sub
push
xorb
add
inc
insb
addr16
inc
mov
xchg
dec
stc
sub
ret
xor
xlat
out
sbb
pop
push
out
sub
cmp
movl
inc
sbb
add
push
sbb
jge
pushf
adc
lcall
and
enter
push
push
loope
mov
push
inc
je
leave
mov
pop
arpl
mov
pop
xchg
sbb
sub
gs
dec
sti
imul
xor
xor
pop
adc
imul
mov
sub
jle
mov
inc
inc
js
in
pop
lret
add
inc
xor
sub
or
lret
mov
insb
decb
or
cwtl
xlat
adc
add
fwait
jb
add
dec
xchg
jbe
arpl
repz
push
or
jnp
xchg
and
stos
js
pop
addr16
subl
inc
add
xor
jbe
sub
mov
cmpsl
addr16
popa
insb
adc
xchg
je
insb
fists
test
sti
dec
insl
xchg
inc
mov
push
inc
push
push
daa
movsl
and
nop
popa
pop
shll
pop
add
add
adc
push
dec
fimull
push
mov
xchg
mov
sbb
inc
addr16
lds
sbb
mov
nop
fs
mov
loope
jns
sbb
lods
push
inc
dec
xor
shlb
cmp
push
aad
sbb
cmpl
pop
push
jo
orl
cmpsl
insl
inc
fidivrl
scas
inc
sub
push
jne
xor
push
xchg
jbe
in
ja
or
int3
pop
daa
mov
and
push
push
je
xchg
out
cmpb
sbb
mov
sbb
and
adc
or
or
or
insl
pop
rcr
jecxz
push
pop
inc
outsl
mov
out
inc
mov
dec
dec
ja
rcr
imul
mov
jo
xor
xor
add
ror
sbb
rorb
lea
sub
lods
add
push
and
inc
popa
or
inc
or
adc
push
into
add
jle
push
push
nop
popa
and
out
cmp
fs
scas
nop
mov
ucomiss
inc
inc
pop
or
cmpl
shrb
int
push
add
pop
test
nop
mov
or
xor
push
add
cld
roll
bound
push
and
add
and
fmull
and
adc
xchg
add
xchg
ss
adc
fcoms
inc
cs
add
scas
or
fidivrs
push
outsb
push
dec
mov
out
rcrb
pop
sahf
xchg
adc
stc
test
lods
lock
ja
js
out
pop
rorb
inc
lock
and
xchg
lock
adc
add
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
inc
add
add
