divb
in
mov
mov
mov
inc
add
add
ror
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
cld
add
jmp
test
jne
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
inc
push
adc
add
inc
pop
push
fcmovnb
les
mov
push
mov
xor
pop
mov
mov
mov
call
pushl
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
addl
add
sbb
lock
fcomi
sub
dec
shlb
in
or
xchg
xlat
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
insl
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
xor
push
dec
and
add
dec
inc
pop
xlat
push
sbb
test
or
sbb
fildl
scas
bound
sahf
add
stos
lcall
push
fst
popf
jp
fdivrs
fs
mov
jge
jl
add
pop
add
mov
jge
push
push
sub
jnp
push
dec
pop
push
insl
sbb
add
loopne
lds
iret
bound
das
pop
mov
pop
pop
ljmp
mov
mov
cmp
or
jge
lcall
add
mov
mov
xor
mov
inc
sub
pop
ret
arpl
sarl
dec
lock
sar
pop
jo
popf
pop
inc
sub
inc
clc
sub
enter
inc
add
in
orb
jmp
fs
pop
or
movsl
push
xorl
sbb
in
incl
adc
jg
mov
adc
add
or
dec
cmp
add
cs
movsl
add
jmp
enter
push
jmp
dec
sub
push
mov
sar
imul
cld
aad
jge
ja
adc
pop
dec
clc
add
push
fimull
ret
pop
in
inc
andl
sahf
leave
les
pushf
add
loop
lds
js
mov
mov
cmpl
or
push
fucomp
sub
cmp
jge
dec
cmp
add
or
add
pop
cltd
sub
shr
enter
mov
or
inc
ret
cwtl
and
push
test
cmp
jl
cmp
jne
mov
incb
add
xor
jbe
mov
adcl
rolb
inc
add
lea
add
adc
lea
xorl
xor
insl
int3
pop
hlt
into
mov
aam
sbb
jnp
sub
push
cmp
cmp
cmpsl
mov
pop
adc
cld
fsubrs
mov
sbb
jmp
lock
or
test
jle
cmp
mov
inc
xor
rcrl
ret
or
inc
icebp
and
sbbl
push
push
xchg
jno
sbb
aas
adc
jle
jmp
loope
mov
inc
sbb
inc
push
pop
sub
xchg
or
cli
insb
andl
fucom
fadds
ret
and
adcb
inc
xor
and
inc
enter
push
inc
push
orb
xchg
mov
push
xor
push
push
hlt
inc
push
sbb
out
cmp
jle
mov
loop
or
out
add
push
mov
mov
or
and
cmp
sub
pop
lret
or
addr16
add
jb,pt
pop
add
xchg
and
enter
ret
lea
mov
cmp
je
cmp
aaa
cmp
clc
push
push
push
jg
xor
rcrb
ja
jmp
xchg
rolb
call
insb
or
cmpsb
imul
cld
pop
cmpsb
out
cmp
jo
inc
sub
adc
add
out
ret
aad
aaa
fcompl
loopne
loope
mov
or
pop
lods
cli
or
or
cmp
push
mov
int
in
decl
jne
push
push
push
push
andb
js
push
mov
mov
or
push
lods
push
sahf
pusha
pop
pop
push
imulb
sarb
jne
cmp
in
mov
and
add
nop
adc
into
dec
jnp
scas
cld
stc
out
mov
sbb
mov
out
fisttps
lods
fstpt
stc
jae
mov
sub
ret
cmp
cmpsb
std
jns
addl
or
cwtl
push
jge
in
adc
sbb
lret
in
or
and
dec
lahf
in
dec
out
push
icebp
cmpsb
ffreep
ja
stos
or
push
mov
lock
pop
and
jl
movl
or
add
push
lea
dec
jnp
and
push
xor
js
pop
xchg
insb
sahf
dec
push
out
ds
add
imul
push
add
inc
ret
imul
dec
inc
or
clc
push
dec
push
xchg
push
aas
int3
popf
jns
cli
out
lea
push
add
push
mov
leave
loope
loope
sub
mov
loop
push
mov
mov
loopne
scas
push
push
add
push
jmp
cmp
loope
aas
add
pusha
cmp
je
xorl
mov
or
jne
imul
cmpsb
mov
pop
mov
cltd
iret
fadds
imul
insl
push
jb
cmp
test
ficomps
and
pop
ds
loope
test
cmpsb
in
out
aam
ja
push
pop
dec
or
movsl
mov
jle
pop
shll
mov
jl
mov
cmp
adc
enter
jge
xor
and
jg
inc
and
in
fmull
movsbl
sub
add
or
sub
mov
push
ret
push
adc
jle
mov
mov
push
imul
jne
add
sbb
int
lock
push
xchg
and
sbb
mov
jl
sub
push
rol
js
adc
xor
aad
add
popf
or
repz
sub
call
lds
cmc
mov
inc
aaa
push
lock
inc
lods
push
inc
and
mov
xlat
sbb
je
dec
je
push
adc
aam
fsubrp
or
adc
inc
shll
mov
lret
or
nop
pop
fs
sahf
adc
push
mov
xor
aad
call
mov
push
mov
sub
push
cmp
mov
xor
fcomps
mov
inc
and
mov
aam
and
mov
cmp
pop
cmc
andl
sbb
test
xchg
mov
test
mov
stos
jae
out
test
mov
ss
roll
or
scas
aad
mov
add
jnp
cmovge
shr
sbb
lret
push
push
movsl
or
or
movzbl
js
and
adc
popa
add
retw
push
in
dec
call
jl
pushl
ljmp
shrb
andb
testl
test
lea
pop
fldcw
mov
notb
add
cltd
pop
movsl
push
jle
push
fcomps
popf
sub
adcl
clc
repnz
sub
adc
cwtl
mov
sbb
or
out
add
sbb
adc
inc
shll
pop
sbb
and
sub
insl
sbbl
jl
ret
pop
loopne
mov
adc
test
out
add
adc
mov
pandn
mov
sub
or
fnstsw
mov
dec
jle
mov
push
pop
shlb
inc
add
in
repnz
or
into
shl
push
or
mov
je
inc
mov
xor
scas
mov
or
push
xor
mov
ficomps
sub
add
inc
repnz
push
adc
or
jmp
push
xchg
fdivrs
out
cwtl
dec
adc
adc
and
cmp
adc
lahf
xor
lea
adc
negb
xlat
push
push
or
mov
xor
dec
sub
dec
bnd
xchg
inc
subl
or
xchg
xor
xchg
sub
pop
sbb
add
pop
mov
in
or
out
scas
mov
ljmp
push
and
out
mov
xor
mov
push
cwtl
sarl
cmp
jne
push
pop
movsl
push
cmp
or
inc
pop
or
in
or
lea
mov
in
inc
loopne
jp
add
in
mov
addl
push
pop
imul
pushl
imul
inc
adc
loope
pop
orl
xchg
xor
jo
cmp
les
fstl
sbb
inc
pop
pop
add
cmp
xchg
pushf
cmp
call
aas
mov
jnp
aam
jge
decl
inc
movb
je
out
out
add
in
xchg
lock
lock
mov
faddp
add
aam
imul
cmpsl
mov
je
mov
cmpl
icebp
loopne
adc
adc
xchg
in
push
and
push
loopne
mov
or
and
add
add
fldt
pop
sub
testb
int3
in
jnp
mov
and
test
add
icebp
push
arpl
xor
push
cmc
les
je
filds
jp
test
mov
pop
in
push
and
fistpl
fistpl
in
ffreep
jae
ret
je
push
out
and
mov
sahf
inc
and
mov
mov
mov
cwtl
cwtl
xchg
out
lret
lods
mov
mov
push
xor
mov
nop
xchg
lock
inc
pop
sub
nop
add
xchg
add
adc
lods
or
lods
lods
add
mov
mov
nop
sub
dec
pop
add
pop
adc
inc
jns
jecxz
outsl
mov
mov
mov
popf
popf
negb
adc
sub
cld
push
mov
lcall
outsl
stc
push
fcoml
dec
out
xor
out
sti
loopne
dec
imul
ss
pop
push
imul
fidivl
xchg
shlb
adc
enter
adc
movsb
leave
jae
pop
rclb
cmpsb
dec
rol
les
pushf
pushf
clc
cmpsb
in
in
pop
mov
xchg
sbb
leave
xchg
xchg
in
int3
leave
xchg
cmp
sbb
int3
fs
aaa
clc
arpl
ret
sbb
inc
sub
enter
fwait
fs
sahf
sbb
shrb
inc
xor
mov
cmp
les
in
mov
pop
test
dec
inc
mov
jle
data16
out
pop
pusha
xchg
and
mov
mov
cmp
dec
pop
mov
pop
pop
testl
cwtl
arpl
test
shrb
inc
inc
jo
pushf
push
sbb
insb
sub
xchg
in
inc
sbb
shlb
jne
mov
loope
test
mov
imul
push
hlt
push
addb
sub
mov
push
xor
sbb
rolb
add
push
add
or
enter
lock
imul
pop
or
jle
inc
push
jl
jbe
inc
sub
mov
nop
and
outsb
and
fisttpll
movsb
and
push
dec
punpckhwd
aaa
adc
dec
scas
je
sti
or
push
divl
test
clc
out
pop
test
sub
fs
shll
pop
sbb
and
insl
or
add
popa
cmpsb
xor
lret
xchg
mov
xchg
or
std
and
pushf
push
adc
adc
loope,pt
les
add
cmp
or
jl
or
lea
push
leave
aad
lock
or
push
jmp
push
fldenv
pop
jmp
adc
adc
jle
imul
test
scas
sti
inc
or
adc
add
ror
sbb
sub
or
sbb
mov
push
push
sbb
daa
sbb
lea
adc
or
xor
push
lock
mov
in
lret
adcl
fdivs
aaa
adc
test
adc
inc
adc
leave
adcb
jno
shll
loope
add
sbb
repnz
into
adc
pushf
cmc
testb
push
sbb
xchg
mov
push
cmpsl
add
add
cmc
gs
cmpb
rolb
fs
lret
insl
or
add
pop
push
lock
scas
mov
mov
fistpl
jne
loopne
add
add
stc
shr
push
ds
push
sbb
push
in
push
dec
pop
push
out
cwtl
leave
clc
popf
mov
lret
adc
cmp
pop
add
push
sahf
les
rolb
and
nopl
stc
mov
imul
mov
sbb
and
clc
add
pushl
xor
rclb
cmp
or
pop
mov
adc
xchg
mov
pushw
mov
nop
pop
pop
mov
xchg
inc
xchg
and
dec
movsl
and
jecxz
or
scas
mov
add
push
ret
or
std
inc
popw
add
pushf
mov
aas
jp,pt
in
int3
cmp
aas
test
xor
cmp
add
aaa
push
push
mov
dec
jo
ljmp
push
add
xchg
sub
mov
shr
scas
and
inc
lock
adc
jg
shrl
pop
mov
jne
add
add
sahf
sub
rcll
xor
inc
xchg
and
push
push
addb
insb
jno
ss
and
rol
ret
and
pop
sub
pushf
or
popf
xor
out
stos
sub
or
add
incb
add
push
dec
test
xchg
test
add
xchg
fsubrs
inc
mov
scas
sub
pop
enter
sub
push
ljmp
sub
aam
cvtpi2ps
inc
imul
cwtl
xchg
je
sbb
xor
ret
or
cmp
test
lret
or
cmp
mov
add
mov
add
add
cmpb
insb
push
iret
repz
ss
out
sbb
rclb
lods
or
out
sub
movsb
cltd
and
pusha
imull
and
dec
mov
enter
sbb
icebp
xor
push
adcb
jbe
outsl
xchg
xchg
inc
cs
ficoms
shll
rclb
in
aam
add
cmp
ss
dec
push
push
mov
sti
lahf
mov
mov
ret
inc
pop
cmp
mov
push
rorb
add
loopne
sahf
xor
cmp
test
jmp
cmp
nop
xchg
sub
sub
sbb
dec
mov
pop
repnz
dec
cs
cmp
adc
cli
pop
xchg
daa
xor
xor
xchg
sub
cmp
mov
gs
loopne
es
mov
jnp
shrb
xor
sub
cmp
inc
shlb
lods
cmp
popa
nop
add
and
xor
and
inc
sar
pop
cli
xor
sbb
adc
popf
orl
ret
loopne
push
repnz
adc
je
pop
cmp
cmp
push
andl
and
xor
shrb
mov
dec
aaa
outsb
mov
push
call
sub
mov
and
inc
jmp
add
pop
std
jns,pt
cmpsb
adc
fisttpl
imul
jmp
inc
jae
pop
pop
or
push
pushl
jle
push
inc
xchg
jnp
test
cmpsb
and
dec
sbb
fcoms
mov
je
int
xor
nop
cmpsb
adc
mov
mov
xchg
adc
or
add
arpl
push
je
push
push
arpl
add
int
je
cmpsb
inc
inc
mov
adc
fisubs
jo
add
xor
adc
sbb
cltd
sub
mov
lock
popa
sub
adc
out
addr16
mov
adc
ds
inc
movsl
jmp
cmp
push
mov
out
push
jo
cltd
pusha
cmp
xchg
inc
inc
fdivrl
mov
repnz
jmp
mov
imul
mov
mov
loopne
mov
subl
push
aaa
xor
mov
sbb
push
out
stos
mov
mov
pop
test
sbb
orb
enter
add
and
push
and
adc
xchg
pop
adc
cmpl
xchg
cmpl
call
cmpsl
lds
or
into
js
and
add
sub
les
or
popa
adc
setne
or
xorb
jmp
ds
sbb
into
add
std
data16
mov
adc
pop
out
jne
shl
add
subb
push
in
arpl
add
loopne
jg
mov
pop
pop
inc
das
mov
xor
loopne
and
add
sbb
clc
je
sub
pop
mov
insl
outsl
jae
loope
fsubrp
cmpsb
push
jne
or
mov
emms
xchg
cmp
jg
mov
xchg
mov
cs
lock
std
mov
not
add
xchg
mov
sar
lahf
je
and
hlt
das
mov
xchg
inc
in
sbb
push
loop
out
inc
out
inc
test
and
je
push
add
sbb
or
lock
lds
popa
add
jno
shlb
mov
leave
jmp
push
jb
mov
sub
or
jg
mov
dec
jne
cmpsb
or
les
or
mov
dec
inc
sub
rorb
rolb
xor
push
fdivrl
loopne
push
in
xchg
cwtl
jle
inc
sub
xor
sbb
adc
jmp
icebp
dec
dec
je
sub
jmp
jge
fcomi
sub
imul
xor
jmp
adc
add
in
movsl
jg
int3
rcl
sti
mov
dec
xor
xor
in
scas
adc
pop
push
add
and
xor
loope
sbb
scas
aam
mov
jae
mov
or
inc
sbb
mov
cmp
clc
hlt
xor
inc
mov
sarl
movl
stos
test
sub
aaa
popa
cmp
jle
jmp
test
mov
pop
mov
add
jg
push
push
mov
fwait
ds
mov
pop
jo
pop
adc
push
cmp
pop
lock
icebp
mov
push
push
test
mov
or
add
dec
imul
dec
ja
mov
lea
mov
xor
push
add
push
jns
shl
test
jne
ds
out
and
cmp
xchg
in
jo
lahf
andl
push
jne
faddl
ss
les
cmc
or
in
pop
cmpb
xchg
pop
in
stos
shrb
shrl
loop
mov
xor
xchg
ja
ficomps
bound
shlb
fstl
ss
add
jns
add
lods
mov
dec
mov
cmp
push
divb
or
inc
cmp
std
gs
add
xor
add
xor
mov
inc
and
push
dec
call
mov
rorb
fdivl
shll
inc
pop
lods
jmp
jg
push
loopne
pop
and
ret
loopne
andb
add
cli
dec
fsubs
call
dec
ret
lahf
aam
enter
add
jge
push
inc
push
adc
cmpsb
or
push
inc
test
pop
xchg
loopne
or
mov
loopne
mov
in
mov
dec
add
push
xor
or
loope
mov
test
movsl
push
pop
sbb
in
sbb
mov
in
add
loop
sbb
jmp
mov
sti
dec
aam
push
add
sahf
call
jb
push
push
imul
adc
mov
fs
xor
inc
test
adcl
pop
sti
jmp
call
push
inc
loope
sub
inc
cld
mov
cwtl
repz
out
clc
push
push
shlb
inc
xchg
shll
xor
adc
cmp
sbb
and
dec
lock
inc
dec
es
loopne
addb
mov
cmp
and
push
dec
faddl
dec
dec
mov
test
pop
inc
mov
in
insb
ficoml
enter
shl
repnz
adc
aam
fcoms
fcompl
or
mov
imul
rolb
je
decl
call
mov
jmp
movzbl
push
adc
push
ret
push
loopne
lea
cmc
mov
pop
add
outsl
mov
call
jle
in
xor
arpl
daa
mov
inc
fidivs
mov
push
das
mov
shll
xor
js
push
xor
jmp
xor
mov
or
add
mov
ret
fs
cmp
js
mov
jmp
jb
jle
push
add
jg
mov
inc
push
push
mov
cmp
jg
mov
pop
aaa
adc
aaa
dec
enter
push
add
ret
pop
pushf
in
mov
sbb
enter
mov
jecxz
jns
aas
jb
sarb
dec
cmpsb
dec
or
aam
adc
loope
push
mov
clc
mov
out
adc
xorl
outsb
pop
insb
add
sbb
sbb
sub
sbb
push
pop
jmp
jecxz
cli
or
add
sbb
sbb
and
cmp
or
movl
add
sub
jne
fsubl
dec
pop
jp
sub
adc
mov
js
xor
lock
cmp
cmp
jae
mov
stos
daa
clc
inc
hlt
lea
ja
dec
test
fs
je
push
mov
je
add
jb
cmpl
fcomps
jmp
lock
imul
add
add
ljmp
fistpll
push
push
push
sbb
mov
pop
cmp
inc
adc
clc
shll
into
popa
nop
add
mov
fwait
adc
pop
xor
adc
rorb
add
ljmp
fidivl
sarl
test
adc
shl
cmp
stos
clc
into
xchg
add
dec
nop
mov
mov
mov
mov
jb
aam
mov
dec
dec
jne
add
shrl
cli
out
sub
int
cmpsb
hlt
pop
pop
push
inc
std
call
and
dec
hlt
jg
jle
push
cmpsb
hlt
or
je
sub
add
or
lock
ret
ja
daa
push
inc
inc
push
xchg
add
ret
mov
push
push
sub
mov
mov
mov
inc
or
xchg
daa
or
lea
fdivp
add
or
cmp
jl
repz
neg
jmp
or
lock
push
pop
cmp
push
ret
mov
mov
sbb
jae
stos
cmpb
mov
xor
push
xchg
bound
fiaddl
popf
mov
or
xor
jne
jns
loopne
xor
push
mov
std
or
push
je
aaa
mov
lods
mov
or
mov
ret
nop
xor
sbb
subb
sbb
in
sbb
or
mov
pop
cmp
push
mov
movb
pop
and
cmc
or
sbb
and
jecxz
add
sub
fdivrs
mov
test
add
mov
dec
sbb
cli
mov
test
ret
je
push
and
sbbl
ljmp
je
pop
nop
fcmovne
jae
push
inc
fisubrl
jb
fucomi
out
mov
mov
xchg
sub
mov
and
icebp
scas
mov
or
mov
jne
or
je
jbe
movb
xor
nop
or
push
push
and
sbb
mov
icebp
addb
or
add
add
test
xor
adc
mov
addb
shll
pusha
inc
test
cmp
push
add
cmp
xchg
or
stos
push
arpl
jne
in
or
movsb
pop
imul
push
and
mov
js
mov
sub
jg
jo
shrd
and
push
or
imul
xor
sub
pop
inc
or
cld
lods
add
sbb
push
adc
adc
cwtl
rcl
and
push
leave
push
cmp
or
inc
lret
jmp
or
test
cmp
aaa
outsl
dec
sar
int3
pop
neg
je
dec
nop
dec
push
push
loope
xor
push
cmp
or
in
sti
pop
aam
push
das
add
ficoms
dec
add
lods
clc
lret
nop
adc
lcall
and
or
jno
in
aas
cmovo
lds
fdiv
adc
nop
mov
sub
or
call
sar
or
jl
xor
mov
dec
ret
pop
or
add
insb
cld
cmp
lea
jbe
insl
fmuls
in
mov
push
test
push
pop
mov
or
cld
int
mov
or
add
inc
or
add
push
push
push
out
movl
sbb
cmp
add
sbb
xor
loop
and
mov
sbb
cs
shl
mov
add
xlat
or
and
cmp
repnz
iret
dec
loopne
lock
or
and
shrb
push
shr
arpl
cmp
push
das
push
js
or
and
add
lcall
ret
outsl
pop
lods
sub
pop
or
pop
test
fwait
or
add
jmp
clc
sub
adc
in
or
ss
push
mov
push
insl
add
and
adc
push
in
test
sub
jae
and
and
mov
xchg
sub
and
sbb
shlb
xlat
dec
mov
push
jno
or
sbb
xchg
enter
add
movsl
jb
add
test
dec
sahf
lret
test
test
jo
mov
lret
mov
and
movsl
test
inc
push
inc
jb
sbb
xlat
mov
mov
fimull
cmp
mov
add
repz
xchg
mov
push
push
adc
jo
push
dec
pop
mov
mov
shl
lods
add
loopne
arpl
and
cmovb
mov
jmp
jne
pushf
push
and
xchg
pop
and
adc
add
loope
in
xor
nop
jne
dec
pusha
les
mov
inc
icebp
mov
rcrl
and
pop
rcll
jmp
ffreep
test
xor
push
mov
cs
xor
inc
bound
out
xor
add
mov
hlt
mov
lcall
mov
jmp
ficoml
out
push
dec
push
loop
scas
push
mov
xchg
inc
cltd
mull
or
mov
repz
lret
cmp
push
lock
inc
iret
cs
lock
cmc
gs
add
mov
mov
and
and
clc
mov
jae
push
call
repnz
ljmp
jb
push
inc
fs
sub
push
mov
add
or
or
dec
clc
and
adc
ds
sbb
pop
mov
cmp
mov
iret
mov
mov
xchg
add
int3
and
or
dec
pusha
fldt
adc
pop
dec
es
pop
adc
pop
push
push
pcmpgtw
mov
leave
cmp
push
and
jb
adc
and
sbb
cmp
cmp
sbb
sbb
aaa
add
push
push
sub
mov
mov
cmp
rorl
push
js
sbb
mov
icebp
and
enter
test
xor
movups
and
fwait
shrb
jge
sbb
sbb
cmp
push
mov
cmpsb
dec
in
sbb
pop
negl
sub
adc
sarb
roll
jle
mov
adc
sbb
test
inc
outsb
mov
dec
sbb
movaps
pop
js
add
push
popa
pop
push
push
jbe
es
out
pop
std
jmp
cmp
cmp
jg
mov
jne
sub
dec
je
mov
sbb
fsincos
je
sub
test
cmp
ret
dec
ss
stc
xchg
hlt
std
std
dec
jl
adc
mov
pusha
push
shlw
dec
aaa
leave
jmp
imul
pop
jne
lods
popa
shlb
mov
add
push
mov
xor
jg
mov
cld
mov
rclb
xchg
add
pop
push
mov
xor
xchg
xchg
mov
xchg
or
sarb
repz
jp
loopne
push
or
push
sbb
fistps
daa
pop
pushl
adc
shlb
rcrb
dec
lea
in
lods
and
shlb
inc
sbb
outsb
jmp
es
push
cmp
je
cmp
pop
imul
inc
sbb
leave
adc
cli
mov
fucomip
out
sbb
fstpl
imul
rcr
sbb
and
jmp
mov
je
das
jmp
xchg
sbb
push
scas
test
rcrl
lcall
pop
adc
cmp
sahf
out
sahf
test
aaa
xchg
jns
inc
cltd
scas
aas
inc
sbb
mov
mov
add
pushw
and
shrl
cmc
sub
aad
fstl
lea
xor
add
sub
sti
or
movb
add
cmp
xchg
pop
mov
aas
jge
stc
decl
mov
mov
mov
pop
push
lea
push
sbb
call
shll
lea
or
lret
dec
cmp
nop
mov
dec
mov
xor
imul
mov
mov
or
sub
cmpsb
sbb
cs
inc
cmp
imul
add
xor
xchg
inc
pop
inc
push
xchg
push
je
mov
inc
add
mov
dec
lcall
aaa
lods
popa
cmc
pop
push
push
inc
or
shl
out
add
push
lods
mov
cmpsl
xchg
xchg
cld
orl
mov
cmpl
inc
jg
or
xor
xchg
movl
pushf
xchg
jp
cmpl
mov
push
out
jmp
adcb
sub
mov
sub
adc
test
testl
idivl
and
pcmpeqw
sub
xorb
std
mov
adc
ret
jo
fistpl
add
xchg
enter
daa
sub
adc
shl
in
addr16
daa
call
in
and
sbbb
xorb
sarb
je
cmp
test
lea
negb
or
sub
mov
loope
aam
cmp
push
push
push
cmp
icebp
scas
add
js
cmp
jl
imul
in
pop
mov
mov
lea
inc
jl
lcall
out
push
adc
mov
adc
xor
add
rclb
pop
mov
popa
aam
push
aam
das
in
test
mov
push
loop
popa
sbb
int3
push
orl
xchg
inc
jl
mov
or
add
jle
push
outsb
pop
lock
inc
add
call
sub
or
fdivr
ret
lcall
fwait
adcb
scas
xor
adc
out
pop
or
jne
push
sub
xor
bswap
or
pop
clc
js
mov
xor
test
je
lea
aaa
mov
rolb
mov
jo
add
mov
sbb
cmp
cmp
pop
pushl
call
push
or
push
push
add
adc
clc
mov
iret
pop
shll
rol
shrb
les
inc
push
mov
lock
cli
loopne
or
adc
dec
lea
dec
push
push
push
mov
ret
cmp
fidivs
lods
jne
mov
inc
dec
sub
in
dec
jmp
cwtl
cmp
orl
fisubl
in
cmp
push
mov
add
mov
inc
adc
dec
cmp
cmp
mov
insb
add
or
push
mov
adc
lret
mov
push
xchg
cmpsb
push
or
repnz
fcomps
in
dec
jno
jns
sub
add
cmp
dec
inc
and
fwait
bound
pop
adc
lods
dec
lock
addl
into
in
and
xor
roll
dec
cmp
or
pop
mov
and
push
inc
push
mov
dec
shrb
fisubrl
clc
neg
sbb
and
push
push
out
cmp
inc
pop
mov
jmp
jae
mov
enter
sbb
enter
or
mov
movb
fmuls
les
add
adc
punpckhdq
jecxz
mov
lock
pushl
and
inc
sbb
inc
test
inc
pop
outsb
dec
cld
adc
and
lret
sbb
jo
push
mov
pop
push
ljmp
rorb
pop
jl
mov
loopne
clc
mov
aam
jne
pushl
int
push
jo
sbb
push
adc
mov
fadds
outsb
loope
cwtl
adc
adc
sbb
loope
dec
sub
test
int3
push
les
int
push
inc
xchg
sti
cmp
pop
loopne
sti
je
cmp
mov
jo
pushf
sbb
repz
test
mov
inc
or
pop
inc
lret
ja
mov
pusha
movsl
popa
in
loop
and
inc
shll
jg
xor
clc
xor
sbb
push
jne
movb
add
cmp
jne
popf
test
jecxz
movsl
fldz
xor
push
xchg
cmp
jo
movb
lahf
cmp
dec
aas
mov
xor
fisubl
sahf
xchg
sbb
push
sub
test
std
add
sbb
lock
mov
xlat
and
test
fimull
scas
jge
fstpl
mov
dec
or
lods
push
cmpsl
popf
adcb
fsubl
shlb
push
leave
push
or
aam
fcoml
push
nop
pop
roll
push
adc
enter
notb
addr16
pushf
push
imul
idivl
mov
xlat
or
or
or
adc
addl
cwtl
imul
or
into
js
push
push
push
lea
pusha
push
mov
and
mov
dec
mov
cmp
pop
push
sbb
sub
push
lret
jl
xchg
repnz
push
jbe
xor
movsb
pop
sbb
lea
adc
jge
mov
xor
clc
test
fbstp
jmp
inc
cwtl
imul
inc
inc
fldl
fmull
inc
std
push
jae
sub
int3
dec
sub
push
push
push
popf
pop
add
movsl
mov
cmp
orps
xchg
cmp
inc
fiadds
out
andl
leave
add
sub
negl
jns
lcall
fsubrs
sbb
inc
fnstenv
lds
and
pushf
outsb
int
cli
dec
adc
add
fmuls
add
dec
or
pop
loopne
mov
cmpsl
ss
jmp
mov
sbb
sbb
xchg
sub
sbb
lea
test
jle
add
sbb
loop
jg
aaa
push
pop
cmp
fsubs
mov
push
jne
ljmp
jmp
push
push
mov
mov
ja
adc
sbb
and
repz
aad
pop
mov
bound
pop
xchg
inc
add
fisubl
mov
cmp
or
push
icebp
push
mov
push
cmp
sub
fstps
jnp,pn
adc
fs
xchg
aad
pop
popa
push
sbb
sub
push
jecxz
and
adc
sbb
and
sbb
daa
out
jo
rcrb
shrb
inc
fiaddl
test
pop
sbb
mov
sarl
jge
xor
pop
jl
mov
cltd
mov
lea
push
clc
mov
dec
adc
push
mov
sbb
jp
pushf
dec
inc
add
test
add
add
mov
idiv
push
lea
aad
mov
mov
mov
ret
inc
bound
outsb
xor
idiv
cs
mov
mov
or
test
jg
mov
addr16
cmp
jo
xchg
pop
not
dec
inc
pusha
scas
mov
xlat
dec
out
out
inc
xchg
lods
jge
add
add
pop
lock
stos
xchg
mov
or
out
or
sbb
pusha
push
pop
insb
xor
sti
sub
clc
arpl
mov
clc
je
fistpl
lea
cltd
idivl
add
inc
popa
pop
movsl
cld
mov
js
out
jne
mov
fs
or
xchg
arpl
test
test
jle
cmp
lahf
movsl
fisubrl
sub
negl
pushf
call
add
aas
dec
lea
sti
int3
loope
mov
mov
lcall
sub
cmp
or
or
out
insb
mov
fnstsw
pushf
into
test
xchg
fildl
mov
sti
testl
inc
add
xor
xor
mov
out
ds
lock
mov
sub
mov
fcomip
xchg
int3
mov
mov
inc
les
out
push
pop
idivb
xchg
pop
jl
jmp
into
add
das
or
lock
je
into
clc
fidivl
jmp
push
add
movsl
rclb
out
push
pop
mov
pop
jne
pop
pop
movb
add
or
mov
mov
ret
jmp
pop
mov
mov
xchg
aad
xor
rorl
lret
shr
scas
stos
movsl
jae
inc
hlt
adc
lea
jns
and
cmpsl
je
scas
shlb
gs
mov
xchg
je
or
leave
mov
or
xchg
push
pop
leave
test
jmp
out
xchg
dec
out
movsl
and
sub
pop
leave
mov
add
sbb
or
mov
add
lods
add
push
and
cltd
lods
xor
add
test
sbb
push
cmp
cmpsb
adc
int
sbb
imul
fsub
or
iret
addr16
xor
dec
jns
and
loopne
aaa
cmp
mov
mov
push
scas
sub
leave
fldenv
pop
xor
loopne
cmp
shrb
jne
int
mov
lea
es
sbb
inc
mov
aam
mov
lods
push
jns
pushf
pop
pop
mov
jg
nop
mov
lea
push
push
adc
adc
jecxz
dec
adc
andl
pop
adc
sub
xor
sbb
cmp
add
xor
cmpsl
lcall
adc
popa
add
push
enter
imul
das
pop
leave
add
mov
lahf
sub
fs
and
int3
pop
push
pop
sbb
stc
into
in
out
pop
popf
addb
ret
mov
jl
mov
inc
pop
inc
ds
or
repnz
inc
push
cmp
roll
das
sbb
cmpb
inc
and
mov
adc
xor
and
pop
push
add
dec
adc
ss
cmp
pop
aas
add
inc
mov
push
add
push
mov
pop
cmpb
setb
test
rorb
xor
in
adc
je
xor
dec
adc
data16
add
or
aaa
xorb
fstp
mov
je
push
fstps
insl
movsb
jmp
negl
imul
incb
push
je
dec
mov
ss
mov
mov
in
ss
fwait
jno
cmpsl
sub
add
mov
add
shrl
inc
inc
scas
jge
scas
xlat
das
push
in
adcb
int
fwait
test
outsl
dec
arpl
mov
rorb
pop
mov
sbb
ja
or
jbe
out
imul
pop
jmp
sti
bound
mov
rclb
sub
fildl
add
in
aas
xchg
ret
mov
sub
adc
add
xor
mov
add
pop
cmp
and
add
add
out
or
js
sbb
nop
inc
dec
push
or
testb
pop
das
inc
xor
inc
shrb
into
xchg
mov
push
jmp
and
mov
mov
int3
js
add
mov
das
fdivl
push
push
and
int
pusha
pop
aaa
add
add
xchg
adc
cwtl
lret
int
xchg
les
pop
push
push
ficoml
jb
push
shrb
out
insb
sbb
pop
push
lret
and
xchg
addr16
pop
fmuls
sbb
jo
ds
lcall
rcr
in
insb
aam
push
inc
xlat
or
xchg
sti
dec
aaa
pushl
dec
push
add
movsb
std
add
cmp
les
rorb
sbb
jge
out
dec
rcrl
les
push
inc
sub
add
push
inc
lcall
test
cmp
mov
in
es
push
iret
mov
sbb
addr16
push
sbb
push
mov
xchg
xor
mov
jno
adc
cmp
test
add
push
mov
or
and
xor
cmp
mov
imul
sarb
push
es
jp
push
pop
xchg
push
or
push
scas
fiaddl
testb
push
in
dec
cmpsl
pushf
push
add
imul
scas
push
fucom
xor
mov
mov
add
fimuls
jnp
xchg
jmp
and
cmp
enter
or
mov
and
mov
push
sbb
push
xchg
pop
pushl
jo
push
lret
jmp
mov
arpl
dec
cmp
mov
sbb
out
test
je
je
push
sbb
mov
test
je
stc
pop
mov
ja
push
dec
mov
jmp
dec
mov
sub
and
insl
inc
jge
mov
lcall
dec
add
ss
pusha
inc
xor
shlb
xchg
sub
clc
mov
sub
leave
js
sar
jmp
mov
mov
mov
cmp
sbbb
stos
add
push
pusha
jle
call
rolb
inc
fcomps
add
fcomps
cmp
fcoms
mov
jnp
xor
mov
sbb
push
dec
and
adc
into
aad
xor
dec
dec
mov
cmp
enter
pusha
in
mov
add
addb
adc
loope
cmp
sete
adc
loope
rorb
and
push
movb
push
push
and
stos
sti
or
push
push
or
mov
add
mov
idivb
adc
mov
les
rcrb
adc
add
and
insb
mov
es
adc
xchg
ja
add
sbb
sbb
popa
int3
add
loop
addb
pop
push
push
js
cmp
aaa
add
sbb
pop
pop
adc
jl
pop
sti
push
dec
lock
sbb
mov
or
outsl
xor
push
stos
push
stc
aad
xchg
je
pusha
or
push
sbb
movsb
pop
jbe
and
iret
call
cld
out
test
fcoms
rcrl
mov
ss
fdivrs
or
jmp
jns
test
cmp
push
xchg
push
or
mov
add
add
sbb
adc
mov
add
push
or
enter
mov
pop
in
pop
repnz
sbb
pop
pop
adc
dec
clc
mov
jmp
cs
adc
mov
adc
jge
or
outsb
xchg
in
repz
in
shlb
lret
call
pusha
insb
dec
xor
and
sbb
mov
pop
pop
incb
in
fsubs
push
mov
sub
in
dec
add
add
lock
fwait
loop
lcall
dec
add
cmp
inc
push
or
cmp
adc
popf
shlb
jge
xchg
dec
call
add
adc
popf
in
inc
jb
xchg
or
aaa
push
xchg
add
push
test
test
sub
or
clc
sub
or
mov
lea
add
xor
hlt
add
adc
xor
mov
xchg
sbb
cmp
inc
outsl
leave
sub
mov
xchg
shrb
pop
dec
push
add
add
inc
cld
push
inc
lret
pop
clc
lock
sarb
add
jge,pt
cmp
jmp
shr
mov
hlt
mov
out
or
mov
xchg
sub
add
into
push
push
add
push
outsl
or
pop
inc
aaa
jo
test
sub
jp
add
rol
add
sub
xor
sbb
mov
lock
xor
inc
inc
in
jb
ds
js
das
sub
jg
lahf
aad
rorb
fdivl
xchg
lsl
sub
sbb
or
jl
aas
or
sub
stc
or
or
mov
sbb
push
add
clc
das
sbb
cmpsb
xorb
mov
js
mov
adc
inc
incl
repz
xor
xor
in
jo
mov
jbe
movzwl
mov
arpl
jne
mov
cli
pop
test
lea
push
test
mov
in
push
rcll
in
pusha
gs
sbbb
cmp
jbe
pop
push
mov
hlt
push
add
adc
add
xor
rcr
mov
out
loop
xor
inc
sbb
cmpsb
inc
mov
inc
push
push
ffreep
cmpsl
mov
jbe
mov
pop
rolb
mov
dec
or
mov
and
adc
mov
rolb
pop
mov
adc
add
push
mov
cld
xchg
add
inc
ficompl
xor
push
sub
add
imul
xchg
push
adc
push
mov
outsb
pop
mov
ret
xchg
push
bound
mov
aad
or
inc
sub
cmp
ja
andl
pusha
mov
or
xchg
pop
sub
fisttpll
mov
sub
dec
pop
addr16
sbb
out
add
add
cmp
dec
pop
jp
cmp
sub
xchg
push
sub
mov
add
hlt
push
mov
cltd
inc
xchg
arpl
dec
xor
mov
push
cmp
cmpsb
rolb
xchg
push
push
pop
add
repnz
cmpl
outsb
mov
or
jb
xor
adc
notl
cmc
cmp
or
and
and
or
jno
cmp
sbb
sbb
or
push
pusha
rcll
dec
inc
and
push
push
jp
ja
adc
das
shll
jecxz
out
fildl
add
sahf
not
pop
test
mov
fisubrl
sbb
ljmp
inc
sbb
test
cmpb
test
mov
iret
push
pusha
sbb
mov
pop
sub
sbb
adc
xchg
mov
push
rol
aaa
adc
dec
mov
ret
xor
les
call
int3
add
jg
call
lods
xchg
daa
push
adc
push
xor
lea
in
lock
test
dec
cmp
lret
jle
mov
mov
jnp,pn
jmp
lock
jle
cmp
sub
jg
push
add
rolb
aaa
or
cltd
adcb
ss
mov
sbb
or
inc
sub
and
cmpsl
xor
fnstenv
inc
cmp
cwtl
movl
xchg
and
loopne
jae
cmpsl
add
div
test
pop
dec
jl
sub
sarb
lea
sbb
or
ret
es
add
xchg
add
adc
movsl
sbb
daa
out
add
dec
sbb
fstps
push
add
xor
in
xor
adc
sbb
mov
fistps
mov
sbb
inc
or
lcall
out
sbb
sub
add
data16
jge
push
dec
sarl
pop
sbb
and
push
mov
pop
pusha
mov
lahf
add
test
xchg
push
xchg
mov
ja
sbbb
jno
push
fildll
add
test
rcll
js
xchg
jo
adc
jmp
mov
or
xchg
test
sub
pop
iret
xchg
mov
mov
push
xchg
loope
push
icebp
rol
jb
lock
negl
push
mov
pop
lea
pop
push
or
mov
inc
lcall
fs
nop
inc
or
mov
pushl
addl
inc
int3
or
addl
adc
mov
adc
or
and
inc
fists
lea
push
out
mov
pop
mov
push
std
xor
pop
push
out
push
cmp
inc
sub
fwait
push
sbb
fwait
sbb
into
dec
and
nop
add
mov
adcb
mov
test
andl
das
sbb
fistl
or
push
sub
lret
fwait
jbe
aaa
cmc
ret
sbb
mov
negl
push
divl
daa
ret
nop
mov
pop
or
cmp
sub
rol
js
outsl
cmp
cmp
pop
inc
sub
sub
mov
rclb
stc
jbe
or
cli
push
hlt
xlat
in
lea
loope
cs
fadd
add
mov
sti
adc
ds
pusha
fbld
adc
sbb
stc
sbb
push
pop
pop
xchg
push
push
push
and
dec
cs
add
pop
and
dec
mov
popf
mov
jno
movl
push
dec
shl
icebp
fsqrt
dec
shlb
or
rclb
inc
or
push
pop
xchg
dec
sbb
pop
push
lods
fadds
sarl
sbb
jmp
int3
or
or
shll
xchg
pop
enter
push
repnz
xor
jg
cmp
push
and
dec
mov
mov
daa
fmull
mov
scas
rorb
sbb
mov
int
stos
mov
sub
xor
add
daa
fld
mov
cmp
ja
shrb
fimuls
mov
jp
add
mov
xchg
xchg
adc
xchg
jbe
in
outsb
xchg
jo
sub
lods
xor
adc
mov
cmp
mov
loop
add
ror
mov
push
sbb
flds
rorl
inc
or
and
cmp
idivb
add
mov
adc
insl
xor
add
test
test
scas
push
arpl
pop
data16
xchg
fs
lock
or
add
loopne
or
addb
mov
fdivrs
fbld
enter
sbb
adcb
popa
nop
sbb
out
sbb
pop
and
movsl
shrl
les
in
jae
ror
mov
rcrl
push
add
lea
or
jnp
mov
add
or
push
nop
in
and
cmp
hlt
arpl
cmpsb
cmp
clc
into
jbe
mov
mov
pop
test
xchg
inc
cmc
mov
inc
mov
ja
cmp
lahf
xor
fdivr
pop
inc
lock
insl
sub
xchg
add
cmp
jae
jbe
js
ret
mov
test
adc
and
adc
in
xchg
dec
mov
jnp
dec
jbe
mov
adc
inc
outsb
jecxz
inc
inc
mov
xchg
inc
out
xchg
das
ss
in
inc
aas
sub
push
popa
cltd
popl
cmp
dec
pop
jmp
xchg
jne
jo
mov
pop
repnz
int3
push
push
push
jno
pop
sbb
dec
push
arpl
add
xor
sub
add
add
test
insl
mov
mov
enter
int3
mov
test
mov
xchg
leave
inc
aad
cli
push
mov
add
pop
jne
xchg
scas
cmp
loop
andl
cld
dec
jg
cmp
mov
inc
lret
adc
jns
jns
setp
mov
call
mov
insl
push
gs
mov
push
inc
or
sub
dec
aaa
in
jno
mov
add
xorb
mov
add
xchg
pushf
lea
sub
mov
loope
shr
cmp
lds
dec
or
xchg
mov
fimull
outsl
sub
lock
pop
ret
adc
notb
push
test
sub
lods
inc
pop
js
jle
jo
inc
mov
movsl
push
add
add
in
cmp
add
sub
mov
sub
inc
js
in
xor
js
xchg
fldcw
push
shll
hlt
movb
faddl
xchg
mov
push
fwait
loopne
or
lcall
fnstenv
adc
xchg
jae
add
xchg
and
test
test
pop
jne
pop
loope
adc
insb
loope
stos
sub
shll
stos
loopne
jge
sbbb
pusha
sub
dec
fsubs
ret
dec
addl
and
aam
pop
stos
push
and
dec
faddl
imul
xchg
inc
popf
pop
pop
pop
pop
push
mov
push
push
mov
or
and
sti
xchg
or
jbe
rolb
push
add
popa
push
lcall
aad
shlb
or
or
inc
icebp
sbb
sbb
stc
add
imul
pop
pop
or
rcrb
jno
jge
sub
cmpl
lcall
add
push
pop
cmp
je
movsb
orl
xor
xorl
or
sbb
xor
dec
clc
cwtl
mov
dec
and
or
jae
pop
add
push
test
jne
cmp
and
enter
aam
jge
mov
xchg
outsb
push
and
mov
jo
das
cmp
mov
and
mov
push
dec
push
xchg
mov
es
xor
icebp
push
inc
sub
int
icebp
cltd
imul
int3
sub
cmovge
push
mov
les
mov
or
sub
mov
imul
sub
loopne
insb
lret
sub
lret
insb
and
daa
das
sbb
jae
xchg
test
xor
das
jns,pn
push
push
shrl
xchg
rcrb
inc
mov
mov
movsl
js
into
int3
xor
cwtl
scas
outsb
push
rorb
cmp
xchg
push
gs
jmp
enter
sub
repnz
adc
add
rorb
movsl
inc
jo
lds
sbb
fsubrl
enter
rcrb
mov
lods
mov
aad
dec
call
xor
jmp
fadds
clc
ret
sbb
popa
xor
aad
int3
test
adc
fldl
mov
pop
pop
dec
fldl
add
or
cmp
inc
or
ret
adc
jnp
add
sahf
jbe
add
mov
mov
add
fldenv
out
dec
scas
sbb
mov
push
cmp
mov
and
inc
fcompl
cmp
sbb
xor
dec
incl
push
mov
js
xchg
subb
sub
shrb
test
notl
in
xchg
cmp
cmp
add
mov
movsl
vcvttpd2dq
mov
sbb
mov
or
adc
scas
pop
pop
andl
inc
movl
rol
jbe
mov
test
nop
or
or
inc
cwtl
dec
insb
and
jae
fisttpl
out
adc
cmpl
cmp
fdivs
int3
pusha
pop
fsubr
mov
lea
rolb
ficoml
push
push
int
push
pop
jp
je
xchg
nop
push
push
cs
cmp
mov
dec
add
mov
push
orl
xor
and
and
je
jae
shrb
cmp
mov
xor
add
bound
add
sub
add
push
sti
jae
and
loop
mov
push
adc
push
pop
lock
mov
sub
mov
subl
bound
clc
sbb
in
lret
lahf
adcl
or
cwtl
outsl
jne
xchg
in
pusha
sti
cld
inc
idivl
sub
push
arpl
int
jo
or
outsl
jno
or
loopne
push
sub
fadds
mov
push
popa
push
stc
inc
push
mov
sbbb
sbb
xchg
iret
clc
or
xchg
lcall
adc
add
sahf
fildll
stos
into
dec
mov
sar
lock
movsb
clc
out
or
xor
xor
insl
cmp
or
xchg
or
pop
cmp
pusha
and
pop
mov
jns
insl
mov
mov
sbbb
cmc
push
int3
push
int3
push
inc
inc
mov
jmp
push
cmp
popa
loope
or
adc
or
and
mov
gs
lock
inc
add
add
mov
sub
pop
push
push
mov
sbb
testb
loopne
pop
inc
pusha
lods
sub
xor
xchg
ret
arpl
cmpb
aam
bound
addb
adcb
enter
dec
xor
test
adc
adc
ljmp
jnp
jmp
ret
scas
fsubrs
out
push
insb
cmpb
addr16
cmp
ret
push
mov
icebp
mov
and
pop
nop
loope
clc
je
cmp
sub
xchg
dec
sub
push
add
adc
push
inc
push
and
cltd
jecxz
fwait
push
bswap
cltd
scas
add
sahf
popa
push
fisubl
std
inc
cltd
outsl
xchg
lret
cmp
jl
test
mov
int3
xor
sarl
pop
sub
lcall
sub
cmp
jne
mov
jno
addr16
push
cmp
push
stos
jmp
pusha
ja
ss
out
mov
sbb
dec
cmp
je
sub
push
sahf
xchg
ret
jne
stc
push
jns
ffreep
sbb
js
add
fstps
adc
push
sar
pop
and
rorl
bound
in
pop
adc
imul
test
in
sub
lea
in
loope
sbb
out
push
dec
or
in
out
inc
aam
sbb
adc
adcl
call
gs
pop
gs
pop
mov
adcl
cmpsb
dec
movsl
ja
jp
jp
sub
cmp
mov
imul
ljmp
rcrb
or
add
xor
clc
and
jbe
add
cmp
mov
or
mov
dec
les
sub
jne
xchg
fwait
dec
sahf
sub
icebp
incb
out
rolb
cmp
je
sbb
jbe
push
mov
mov
fbstp
mov
ret
mov
push
mov
add
inc
or
pop
pushl
orl
and
sbb
ja
jo
push
dec
popf
dec
or
addb
or
sub
dec
and
or
xchg
ret
push
pop
rcl
mov
mov
in
cmpl
sbb
in
add
sbb
dec
aaa
mov
jb
adc
scas
cltd
and
sbb
mov
xchg
lock
leave
lock
inc
sub
pop
inc
js
cmp
fs
dec
xor
mov
jnp
push
leave
push
cmp
je
xor
pop
sarb
mul
seto
xor
je
ljmp
mov
adc
das
cmpsl
mov
push
xor
push
lods
aas
jbe
scas
push
inc
inc
sbb
ret
mov
outsl
or
mov
add
jns
fadds
add
jo
jae
adc
sub
jb
adc
inc
cmp
mov
mov
rorl
or
out
lret
ret
inc
add
xchg
sbb
pop
icebp
sub
inc
mov
or
inc
sbb
inc
add
rclb
adcl
lods
clc
loop
dec
cltd
pop
and
adc
andl
pop
sbb
pop
mov
sbb
fisubrl
add
clc
js
mov
xchg
mov
aam
stos
add
add
inc
loopne
cmp
scas
sbb
fistpll
push
imul
adc
add
and
or
cmpsl
inc
inc
call
mov
pop
test
scas
adc
push
inc
cld
pop
je
adc
or
fs
sub
lock
mov
cmp
jne
mov
inc
or
ror
cld
cli
inc
test
push
jb
jb
adc
int
lret
cmp
adcb
cmpl
adc
push
dec
adc
lock
out
addr16
faddp
jmp
jl
ret
out
push
test
je
shll
mov
aam
or
negb
xchg
mov
jae
add
sub
adcb
cmp
inc
les
xchg
push
repnz
insb
cmpsb
adc
mov
cmp
jne
and
adc
ja
or
orb
xor
push
ss
push
fucomi
push
pusha
push
hlt
jb
inc
xor
adc
nop
popl
test
jae
sbb
push
mov
in
lcall
aas
mov
pop
push
xor
rcrb
or
lret
je
add
xchg
xor
mov
mov
xchg
adc
jo
insb
or
call
imul
push
dec
test
in
or
mov
dec
cmpl
cmp
pop
pop
les
push
mov
loope
insb
mov
roll
rorb
push
aas
sub
mov
test
dec
jns
mov
sub
fistpl
lret
pop
lods
dec
or
movsl
nop
and
jae
and
sub
jno
adc
inc
or
pusha
or
rcrl
orl
inc
sbb
daa
xchg
xchg
dec
jg
push
icebp
mov
popa
jne
pop
adc
add
inc
in
int3
and
dec
sub
aad
loop
les
or
pop
or
popf
pop
mov
nop
mov
add
test
pop
pop
stos
pusha
xchg
cmp
inc
add
fwait
test
movl
and
cmp
jecxz
loop
jo
push
mov
jl
cmp
push
test
shl
cmp
add
xchg
jmp
or
inc
xchg
ret
and
sub
dec
test
ja
dec
inc
push
sbb
sbb
inc
flds
jl
sbb
dec
push
test
mov
movsl
pop
add
xchg
clc
aam
mov
js
push
push
out
les
dec
adc
movsl
xor
inc
push
test
pop
ret
call
mov
add
xor
or
rol
inc
jp
aam
xor
push
bound
mov
push
dec
loopne
add
sbb
add
mov
testl
push
ret
mov
mov
pop
sub
faddl
push
push
es
xor
or
int
mov
xor
dec
add
popf
push
jb
dec
subb
insb
adcl
xor
mov
bound
adc
imul
add
ret
fsubs
mov
xchg
enter
pop
xor
movsb
repnz
outsb
xchg
call
loop
jno
push
call
sbb
sub
mov
xchg
mov
jnp
jno
in
fisubrl
xchg
push
jge
cmpsl
jnp
adc
rorb
xlat
cmpsl
fbstp
mov
push
popf
push
sub
inc
dec
lock
adc
pop
dec
movsl
movl
bound
jae
add
movsl
pop
push
or
pop
rolb
pop
mov
jbe
mov
pop
and
mov
shlb
cmp
sub
inc
sbb
and
or
insb
and
int
mov
sbb
je
nop
stos
mov
lods
test
mov
arpl
inc
mov
dec
and
xchg
out
push
add
mov
jge
add
pop
andl
out
xor
shlb
mov
pop
or
pop
mov
push
or
test
xor
add
adc
insb
push
bound
sbb
sub
add
pop
ret
stos
inc
push
adc
ret
stos
leave
and
sti
adc
out
cmp
mov
or
addl
outsb
inc
js
add
sub
and
mov
or
or
dec
adc
clc
cmpsl
add
adc
mov
or
push
jmp
ret
sub
xchg
je
mov
or
inc
fmuls
sbb
mov
pop
cmp
rcrl
inc
push
jl
scas
inc
or
dec
push
fxch
add
repnz
popf
dec
es
or
in
in
cmp
xor
mov
and
add
je
nop
andl
nop
xor
out
and
mov
andl
int3
add
mov
lret
cld
lea
mov
jmp
mov
movsb
rol
in
mov
adc
and
js
sub
push
and
xor
int
adc
mov
adc
add
cmp
adc
rcrb
dec
xor
inc
arpl
pop
fisttps
cmp
jbe
push
pop
pop
add
ret
pop
addl
mov
mov
dec
and
add
mov
adc
mov
pop
xchg
out
inc
jo
arpl
out
cmc
mov
repz
in
cmp
push
push
cmp
jbe
lea
pop
insb
scas
cmc
and
fsub
bound
sbb
sub
add
mov
add
bswap
lea
and
mov
push
cld
push
dec
or
ljmp
push
lea
or
fldcw
enter
add
aaa
sub
cmp
jp
sbb
andb
sbb
jae
mov
call
mov
incb
pop
sub
sbb
xor
jp
sbb
jge
gs
nop
cmpsb
inc
dec
push
out
popa
sbb
sub
mov
nop
pop
stos
mov
add
test
push
lods
or
cltd
sbb
insl
aaa
xor
lods
adcb
xorl
jns
rolb
dec
and
inc
cmpsb
ret
mov
cmpsl
push
xchg
fnsave
sub
pop
add
pop
ret
and
test
push
xor
leave
mov
mov
clc
iret
cvtpi2ps
push
push
pop
cltd
in
pop
pop
push
mov
push
sub
and
mov
sbb
cmp
cwtl
fistpl
sbb
stos
jp
addr16
and
push
ljmp
imul
sti
faddp
fs
mov
cs
ret
fisttpl
mov
inc
jnp
das
sbb
sub
fdivs
mov
aad
mov
xor
sub
leave
addr16
sub
pop
es
pop
xorb
daa
std
lods
cmp
and
or
cmc
and
iret
subb
ret
dec
adc
adc
or
stos
insl
test
outsl
leave
stos
xchg
ret
ljmp
adc
pop
bnd
jle
and
das
pushl
loope
jp
mov
aas
lea
sbb
add
mov
mov
or
adc
sub
loop
inc
dec
adc
sbb
or
sahf
adc
aaa
push
les
cmp
mov
movb
mov
adc
add
add
int
cmp
addr16
lods
jb
inc
add
push
adc
ja
popa
stc
test
jnp
lock
in
push
and
push
repz
cmp
pop
in
test
sbb
lock
inc
mov
pop
adc
divb
je
sub
clc
js
mov
sbb
mov
xchg
sub
sbb
js
repz
pop
mov
push
pop
mov
jne
adc
pop
push
cmc
mov
dec
hlt
add
push
imul
xchg
cmp
jo
pop
jb
scas
lahf
pushl
lret
sub
fwait
dec
sub
cmp
mov
cmp
pop
jp
or
mov
push
and
xchg
push
xlat
fnsave
aaa
es
insb
fistl
cmp
push
pusha
jo
inc
insb
pop
jns
adc
icebp
cmpb
pop
imull
add
mov
cmp
jl
addl
rol
and
push
fs
adc
ret
or
sbbl
add
loope
cltd
in
test
sbbb
xchg
add
out
mov
push
ret
or
pop
or
imul
push
fisubl
arpl
int3
push
adc
mov
jg
push
lods
and
dec
xchg
adc
and
and
adcb
mov
jge
insb
xchg
sbb
addr16
dec
mov
fmull
mov
jae
in
ss
popa
and
clc
push
lea
fucomip
xchg
push
sbb
adc
cmp
inc
mov
test
pop
adc
mov
sub
iret
mov
inc
loope
inc
jne
in
ret
jne
cmpsl
nop
pop
in
adc
mov
decb
add
test
add
lea
push
mov
jecxz
pusha
jl
lods
fnstcw
pop
sub
and
xor
ret
sbb
repnz
popl
andl
dec
rcr
fcmovbe
shlb
inc
push
lock
inc
cmp
popf
add
add
dec
mov
ds
adc
pop
dec
pop
push
fstp
das
lea
lea
jmp
stc
icebp
mov
movb
aam
test
push
loope
fsubrs
cmp
sub
xor
push
loop
cmp
push
add
push
pop
mov
jl
adc
jb
dec
xor
insl
xchg
jo
pushf
and
outsb
pop
mov
xchg
mov
add
aad
rol
mov
lcall
mov
mov
sbb
pop
rcrl
js
xchg
and
mov
push
test
pop
fdivs
test
dec
imul
jmp
test
mov
sahf
inc
clc
in
cmpb
xor
imul
ss
or
out
push
movsl
hlt
mov
call
shlb
add
sahf
adc
dec
jb
inc
dec
loope
mov
push
outsl
pop
xor
pusha
cmp
or
shll
add
add
push
aam
push
cmp
pop
xor
adc
dec
out
xor
adc
sub
test
push
adcb
jnp
and
inc
jmp
cmp
push
add
xchg
outsb
aam
push
xor
dec
sbb
cmp
mov
andl
sarl
inc
lds
pop
dec
or
or
icebp
add
push
test
mov
xlat
mov
sub
mov
inc
loopne
inc
cmp
push
adc
jle
cmp
jae
xor
jno
fsubr
aam
out
adc
and
shlb
push
xor
mov
enter
sub
dec
std
hlt
cmp
xchg
push
or
push
fwait
push
aas
cld
jp
add
test
ljmp
lret
aas
nop
cmpsb
pop
or
dec
sti
dec
rclb
dec
insb
push
push
push
cmp
mov
add
sahf
cmp
push
lcall
sbb
cmpsb
arpl
push
das
or
sbb
mov
push
test
test
das
shl
insl
mov
jno
pop
aam
sbb
cmp
mov
push
inc
sbb
fs
adc
cwtl
adc
pop
clc
xchg
pusha
es
jmp
cmp
xchg
scas
pop
lods
or
rclb
nop
add
mov
addb
orb
js
sbbl
adc
pusha
push
enter
and
jmp
test
orl
fisubl
mov
mov
enter
xchg
mov
sub
dec
sbb
jns
call
ror
inc
dec
cmp
mov
xor
lods
es
jmp
add
mov
ss
les
mov
sub
inc
jge
fistps
push
cmpsl
inc
sbb
push
and
sbb
sbb
dec
rolb
push
mov
push
inc
xchg
xchg
jo
xor
xor
std
jmp
sbb
stos
test
dec
pusha
imul
lea
mov
mov
lret
mov
xchg
cld
lock
mov
lret
inc
add
xor
mov
push
out
sub
pop
repnz
mov
inc
add
call
clc
std
in
scas
pop
xlat
dec
in
jno
lea
call
push
mov
es
xchg
imul
es
imul
mov
fimuls
mov
test
lcall
sub
push
or
pop
mov
mov
xchg
pop
and
cmp
testl
subl
loope
sti
adc
jl
divb
mov
movsl
sub
out
adc
lods
subb
adc
mov
les
or
and
mov
pop
dec
jae
fdivrl
mov
inc
js
repz
test
sub
lods
call
dec
jae
daa
int3
test
push
mov
stc
popa
or
xor
add
movsb
mov
ja
sub
cmp
rcr
add
xchg
add
adc
test
dec
mov
ret
mov
lds
cmpsb
pusha
dec
jmp
adc
rorb
pop
sbb
test
ds
mov
sti
pushf
mov
pop
cmp
dec
xlat
scas
sub
loope
ja
popf
jb
adc
push
jp
mov
sbb
or
dec
push
test
cmp
movl
xor
sub
mov
push
xor
aaa
cmp
push
sbb
cmp
ljmp
add
shrb
add
jno
or
jge
and
add
mov
ret
cmp
cmpsb
fiadds
xor
jnp
add
ss
aaa
mov
shl
or
inc
adc
xchg
cmp
xchg
jnp
jno
jecxz
std
xor
inc
test
sbb
jne
pusha
mov
xor
clc
adc
sub
push
jmp
nop
pop
sub
pop
mov
mov
aam
push
stc
cwtl
pop
jp
int3
pop
xorl
repz
ret
or
mov
lock
mov
sbb
mov
xchg
dec
mov
flds
pop
loopne
cld
inc
movl
xchg
daa
xor
mov
mov
lea
xor
insl
or
or
or
inc
outsb
pusha
or
push
call
or
das
mov
pop
ja
xchg
push
mov
xlat
je
jp
push
jg
pop
or
and
mov
jmp
pop
js
ret
ja
pushf
fs
popa
test
jno
ss
arpl
cmpl
adc
imul
nop
push
xor
push
push
insl
pop
adc
int3
inc
sub
cmpsb
cmpsl
shrl
jb
jg
movsl
frstor
cmp
testb
adc
add
int3
sbb
lock
ds
je
push
inc
push
xor
ret
xchg
lods
inc
sbb
inc
jg
xor
mov
inc
push
outsb
lock
sub
push
int3
or
call
ds
cmp
inc
lea
push
in
and
cmp
push
fwait
xor
loop
es
sbb
push
push
push
fstpl
push
lods
adc
int3
fwait
ret
aaa
push
fcmovne
ljmp
jmp
cmp
cmpsl
lods
mov
je
aaa
js
roll
pop
add
and
dec
add
adc
lar
xor
sbb
xchg
adc
rcrl
dec
inc
jmp
add
adc
fstpl
adc
xor
mov
add
xor
push
mov
or
or
adc
mov
mov
jp
mov
mov
adc
rorl
sahf
mov
jne
sbb
push
inc
mov
cmp
test
xor
xchg
push
or
mov
movsb
jne
adc
and
lret
pop
pop
xor
lods
xchg
rcrb
fistl
jle
cwtl
cmp
add
mov
jbe
les
and
jge
mov
sbb
jbe
cmp
movl
push
mov
add
inc
adc
push
and
sub
or
xchg
pusha
daa
loope
lret
ja
mov
adc
pop
or
jae
fs
add
push
mov
pop
lods
in
test
push
ljmp
lret
movsb
push
add
push
adc
pusha
adc
jno
and
jg
ja
jge
test
movsl
mov
jno
sbbb
inc
cmp
jl
adc
movl
xor
xor
add
push
and
je
mov
mov
mov
mov
or
mov
dec
jmp
jo
enter
insb
mov
mov
fsubrl
lea
rorb
popf
mov
push
inc
adc
and
mov
movsl
gs
js
push
lret
sub
fs
push
dec
cmpb
in
sbb
mov
mov
cmp
jae
inc
mov
daa
add
sbb
in
push
lock
incl
call
aam
mov
inc
cmp
cmpb
je
push
mov
addb
leave
jl
ret
xchg
and
fcmovb
imul
dec
movsb
fdivrl
fisubrl
loope
adc
or
int
inc
sub
std
gs
xor
popf
mov
or
mov
and
jmp
pop
mov
mov
mov
test
pushl
dec
sti
int
aas
aaa
mov
push
rcrb
ljmp
orb
shlb
or
xorl
mov
add
rorl
aaa
lods
jno
xchg
fsubl
sub
mov
das
jl
sub
and
lds
sar
cltd
push
mov
loopne
cmpsb
mov
outsb
inc
pop
mov
subl
flds
movb
imull
add
dec
je
mov
push
mov
sbb
push
sub
inc
enter
jns
xor
shll
and
mov
jae
inc
dec
xor
aam
push
sub
cli
dec
inc
or
sbb
scas
rolb
sbb
pop
push
test
in
enter
cmp
lea
pop
inc
rcrl
mov
arpl
push
lea
cli
negb
sbb
cld
pop
adc
sub
xor
lods
pop
clc
rolb
outsl
ja
pusha
mov
xlat
cmp
loope
mov
subl
cmp
daa
adc
adcl
mov
test
dec
pop
sbb
dec
ljmp
out
in
push
mov
clc
ret
outsl
push
movsl
mov
mov
push
xchg
popf
or
aas
dec
cwtl
stos
mov
mov
sub
push
mov
inc
mov
cmc
jns
push
sbb
push
jl
frstor
mov
jp
aas
lahf
fists
and
inc
les
jo
test
ss
xor
mov
or
or
add
add
mov
mov
aad
gs
call
push
aad
cmp
jge
cmp
movsb
cmpsb
inc
add
mov
fdivl
xchg
cmp
jne
sar
add
push
or
dec
fiaddl
lods
leave
aaa
leave
sbb
test
mov
leave
sbb
lds
xchg
sbb
xor
test
pusha
add
xchg
mov
or
push
mov
push
xorb
jecxz
inc
fidivrs
dec
out
pop
adcb
xchg
and
mov
addb
dec
mov
andb
add
es
pop
xchg
and
add
add
push
jo
xchg
fistps
xor
and
add
sub
lret
and
or
movl
xor
jns
inc
sahf
or
dec
pop
and
mov
cmp
std
or
xchg
movl
jnp
inc
pop
mov
xchg
inc
jo
call
sti
jo
xor
push
dec
sub
mov
andl
loope
dec
sbb
inc
dec
mov
fsubl
subb
sub
lcall
or
dec
fnstsw
or
lods
stos
xor
pop
fcmove
mov
or
jno
pusha
movsb
shr
mov
xchg
mov
loope
pop
sub
xor
jne
movsb
daa
sbb
and
pop
loop
aaa
sub
inc
inc
mov
cld
fstps
or
push
cmp
lock
fbld
cmp
sahf
test
mov
add
xchg
xchg
pop
je
pop
mov
out
lret
mov
jl
or
out
rorb
xchg
das
adc
xor
pop
out
xor
rclb
push
mov
mov
insl
nop
inc
push
mov
sub
mov
push
mov
popf
pop
popf
push
enter
sub
push
sub
pushf
cmp
add
ss
les
clc
and
cmp
mov
mov
mov
jno
sbb
pop
push
stos
adc
out
je
cwtl
and
cmp
dec
xchg
sub
setle
or
pop
loop
cwtl
add
mov
icebp
movsl
and
jne
lea
orb
cmpsb
cmpsb
push
std
push
les
mov
jne
jmp
inc
inc
imul
lret
mov
cmpsb
icebp
adc
sarb
outsl
mov
fldl
sub
andb
push
cmp
dec
insb
sub
out
pop
repz
fwait
add
inc
sub
sbb
lahf
xor
adc
mov
lea
out
push
lcall
or
push
adc
cmp
fsub
xor
cli
xchg
scas
loope
mov
and
xchg
xchg
out
ret
imul
or
sbb
jb
and
xchg
cmc
jbe
out
sbb
push
cmp
popf
dec
testl
mov
int
rol
fs
push
sub
lahf
push
push
pushf
adcb
mov
inc
ret
or
add
sub
add
mov
mov
adc
in
sbb
jmp
idivl
ret
pop
shrl
popa
jbe
jl
xor
dec
adcl
cli
lea
xchg
testb
repz
cs
adc
sahf
xlat
shrb
cwtl
or
shlb
fildl
negb
push
xchg
or
cwtl
dec
pusha
in
ss
jnp
sub
nop
adc
pop
pushf
lods
xlat
sarb
xor
je
dec
push
dec
or
cmp
gs
test
or
or
push
push
or
std
popa
jle
movsb
lea
aad
nop
inc
les
mov
pop
inc
jo
push
inc
or
ret
sbb
iret
xchg
mov
adc
in
inc
iret
insb
push
push
divl
cltd
cwtl
xor
movsl
ss
movsl
pop
sub
pop
sbb
xchg
push
cmp
test
sbb
filds
repz
in
divb
or
lods
imul
jp
popa
dec
adc
adc
outsl
pop
xlat
mov
push
push
cmp
push
pop
jge
mov
cmp
xorl
pop
int3
push
cmpsb
xor
aas
cmpsl
ss
jle
adc
adc
add
push
hlt
ret
imul
icebp
cs
xchg
xchg
jno
and
push
xor
xchg
nop
pop
ret
ljmp
sarl
sub
push
cmp
sub
iret
mov
push
fs
or
mov
xchg
and
imul
arpl
inc
pop
and
clc
pop
in
popa
pop
or
inc
out
out
or
lea
mov
mov
push
or
imul
pop
sbb
push
sbb
nop
or
repnz
and
fcomps
jb
pop
xor
push
xor
and
mov
ss
iret
inc
and
sbb
and
mov
push
jne
and
inc
cmp
jecxz
rorb
js
sub
dec
rcll
test
movsl
xchg
sub
daa
stc
popa
pop
enter
and
sub
and
test
pop
pop
rcll
in
cmp
and
test
jb
or
push
popl
lods
xor
data16
adc
aaa
arpl
and
outsl
rcrl
push
ja
in
push
push
sbb
dec
adc
pop
jb
pop
enter
jae
dec
inc
mov
inc
and
adc
orl
and
outsl
jle
dec
mov
int
mov
adc
xchg
ja
pop
sarb
lods
mov
pop
or
loop
lcall
lcall
adc
and
dec
xor
add
add
add
loopne
adc
mov
out
nop
xchg
gs
sub
adc
inc
adc
in
mov
inc
pop
or
jle
mov
les
push
loope
jecxz
hlt
insb
arpl
ret
rclb
mov
add
mov
xchg
pop
repz
or
add
aaa
and
rcrb
jnp
push
pop
lock
lods
xor
imul
rclb
xchg
lock
add
push
insl
rcrb
outsb
test
jle
or
sub
pop
clc
mov
js
loopne
add
push
into
fcompl
lret
sbb
adc
fsts
es
xlat
pop
adc
mov
test
stos
jo
mov
sarl
jo
inc
pop
lock
shrl
xor
add
dec
sub
stos
sbb
xchg
or
daa
hlt
inc
inc
pop
push
pop
push
xor
pop
push
sub
pop
push
push
dec
xor
dec
lret
test
adc
pop
test
push
insb
ret
xor
or
push
push
push
icebp
or
adc
rclb
outsl
inc
lock
sub
std
fisubrs
or
cs
fisttps
je
dec
cltd
dec
jmp
xlat
adc
hlt
pusha
mov
inc
push
mov
fsub
jecxz
out
cmpsb
and
int3
push
cmp
add
int3
push
mov
mov
add
adc
add
ja
test
add
nop
test
dec
cltd
daa
inc
jbe
imul
xchg
adcl
icebp
xor
lcall
cmp
sbb
xor
out
fadd
cmpsb
inc
fsubs
insl
xor
gs
sbbl
add
movsl
jbe
call
je
mov
xchg
rorb
les
inc
fisubrl
mov
lods
cmp
sarl
sub
test
pop
popa
pop
addl
push
xor
inc
int3
nop
clc
addr16
push
pushl
and
icebp
add
fdivs
push
subb
inc
fwait
mov
inc
push
xor
push
inc
shlb
repnz
add
cld
inc
add
ret
fisubrs
xor
sub
adc
push
cmpl
push
push
dec
hlt
jne
push
loopne
sarb
or
jge
mov
mov
dec
loope
sub
add
xchg
xchg
test
add
clc
popa
adc
push
movsb
cltd
das
repz
and
lret
inc
and
pop
repnz
mov
pop
pusha
mov
mov
lds
addr16
in
lods
dec
sbb
sbb
dec
into
jae
testl
dec
jmp
xchg
adc
inc
jmp
xor
adcb
push
push
mov
add
int
mov
adc
jo
lret
lods
xor
jle
xlat
mov
test
js
scas
push
cmp
sbb
rolb
lret
aas
icebp
sub
dec
or
xor
mov
mov
cmp
jl
adc
and
ret
cmpsb
cld
dec
scas
daa
mov
inc
inc
in
stc
and
loope
fcomps
add
inc
dec
add
mov
push
inc
jmp
mov
xchg
push
pop
mov
bound
aaa
xor
adc
cld
pop
fdivrl
mov
les
bnd
mov
add
push
sub
movl
xchg
inc
sbb
or
jg
sahf
or
add
add
movsb
inc
dec
pusha
adc
mov
int3
push
sub
std
mov
enter
mov
sbb
dec
dec
jae
mov
in
std
mov
sbb
insb
mov
push
mov
in
xchg
cmc
nop
pop
out
or
jne
add
aas
cmp
addl
insb
dec
mov
sub
jecxz
int
lea
cmp
dec
add
jno
clc
test
lea
xchg
gs
loope
into
pop
adc
adc
hlt
in
inc
jl
push
inc
or
loop
loopne
icebp
cmp
jle
cld
jae
inc
add
outsb
mov
ret
mov
cmp
mov
scas
dec
pushf
loopne
sbb
ficomps
or
sub
dec
cmp
add
cmpsl
adcb
inc
pop
bound
jp
cltd
add
xor
lock
add
mov
daa
stc
test
sbb
addr16
add
push
push
in
repnz
dec
sub
add
les
pop
cwtl
sub
into
aam
fisubrs
xchg
add
movsl
add
cmp
lea
fldl
mov
les
add
inc
mov
mov
dec
rorb
pusha
add
xor
mov
push
popa
add
in
mov
jp
pop
test
inc
mov
outsb
int3
lea
dec
dec
outsb
inc
and
pop
or
add
cmp
or
bound
or
push
xlat
lret
sbb
push
jmp
jp
adc
scas
shlb
inc
inc
or
sbb
add
xchg
outsb
test
push
fcoms
sbb
dec
cld
jge
movsb
push
jno
andl
pop
imul
ret
mov
push
mov
iret
inc
cmpsl
mov
shrl
pop
xor
popa
outsb
or
paddusb
adc
add
pushw
pop
add
cld
cmp
cmp
cs
mov
adc
mov
inc
mov
jbe
cs
loope
jne
jbe
add
andl
sub
gs
xor
inc
fcmovne
and
sub
mov
mov
movsb
adc
jne
fdivrs
xor
test
mov
push
xor
pop
add
orl
bound
adc
pop
adc
test
push
loope
bound
push
adc
ret
sub
popf
incl
ror
adc
inc
imul
mov
mov
mov
xchg
push
mov
inc
cwtl
xor
or
and
sbb
xchg
xchg
jo
add
pusha
movsl
daa
std
sbb
push
lds
fs
cltd
mov
hlt
mov
xchg
mov
fisubs
and
push
cmp
push
jb
cmp
cmc
mov
dec
in
dec
mov
sbb
push
daa
mov
sbb
out
aad
xchg
call
incl
push
sbb
add
sahf
rcrb
pop
cwtl
push
fdivr
jecxz
hlt
push
dec
pop
inc
in
das
test
rorl
fs
inc
or
sbb
sub
add
jmp
incl
test
idivl
adc
fbstp
mov
mov
add
ss
cmc
dec
cmp
add
or
add
dec
repnz
std
sub
icebp
adc
popf
push
push
bound
push
and
add
sub
add
dec
in
es
dec
lea
in
jb
pop
cmp
pop
lods
xor
data16
sarb
enter
dec
test
adc
adcl
pusha
out
mov
aas
add
das
fistpll
fistpll
movsl
push
imul
sbb
into
ficomps
outsl
bound
sub
nop
adc
hlt
cmp
or
ds
cld
movsl
inc
lea
cmp
and
push
popa
cmpsl
test
rcr
push
loopne
js
roll
fcmovu
cmp
adc
adc
sub
push
fstps
adc
mov
cs
dec
sub
or
push
cld
push
mov
dec
cmc
adc
rcrl
lds
gs
sub
add
adc
sahf
inc
enter
pop
sahf
data16
insb
or
pop
pop
int
adc
mov
outsl
mov
rolb
popa
lods
dec
push
lock
dec
je
cli
push
add
hlt
lods
push
nop
cltd
sbb
or
add
lcall
and
hlt
imul
xor
ljmp
inc
push
mov
add
cmp
notl
out
dec
inc
icebp
push
add
inc
lcall
push
xchg
add
push
add
xor
in
ret
and
push
xor
mov
insb
jo
fwait
xor
popl
popa
fcos
and
ss
add
mov
xchg
outsl
mov
or
push
movl
cwtl
or
push
mov
cmp
outsl
testl
test
clc
or
xchg
je
pop
adc
xorl
subb
mov
push
sbb
arpl
pop
xlat
add
test
or
add
ds
ljmp
movl
push
mov
xor
in
push
cmpsb
mov
cmp
jmp
mov
cmp
out
sbb
cmp
jo
mov
inc
push
and
jb
sub
sbb
cmp
mov
aaa
pop
clc
loop
fisttps
fs
imul
push
imul
add
cmp
fs
push
xor
loopne
adc
sbb
negl
inc
stc
mov
mov
sbb
repz
or
ds
sbb
dec
popf
xchg
adc
sbb
imul
mov
nop
pop
mov
sbb
xchg
push
adc
notl
dec
add
jae
xor
imul
popa
shll
inc
push
sub
push
mov
mov
add
mov
inc
add
clc
int
rorl
dec
jnp
or
push
bound
imul
and
movl
nop
xchg
loopne
jo
cld
movl
shl
or
in
repnz
mov
mov
daa
aam
cmpsb
mov
sub
fs
add
pusha
dec
jle
or
push
jmp
scas
mov
xlat
jno
sarb
mov
mov
sbb
loopne
xchg
mov
cmp
jle
dec
cmp
dec
adc
mov
cmpsl
add
mov
jp
inc
jno
lsl
add
cwtl
scas
fdivs
dec
adc
les
lods
or
mov
jmp
inc
outsb
mov
adc
mov
cmp
adc
xchg
shl
jp
cli
or
adc
push
add
push
inc
and
add
push
adc
push
or
or
cmp
add
xor
lcall
ljmp
adc
decl
mov
mov
mov
je
adc
mov
jnp
add
movsbw
mov
inc
jg
cmp
jne
and
or
xchg
or
fwait
dec
inc
or
cmp
adcb
sbb
aam
insb
xchg
mov
inc
hlt
mov
hlt
push
inc
rol
out
push
mov
rolb
pop
pusha
roll
dec
cmp
adc
jo
dec
lods
pop
js
je
and
ficoms
fidivrl
sbb
imul
lret
xor
mov
ljmp
inc
fucomi
add
cmpsl
push
repz
add
leave
sbb
xchg
or
les
cmpsl
and
xor
sahf
add
dec
mov
inc
popf
or
jb
mov
shll
inc
gs
jnp
outsb
ret
push
sub
xchg
addr16
jp
dec
sbb
je
std
lock
dec
mov
test
inc
or
mov
test
neg
mov
test
and
add
or
pop
push
popa
sub
movsb
neg
out
sarb
in
add
xor
jecxz
leave
xchg
pushl
sub
ja
out
in
int
sub
pop
mov
ret
mov
aad
sbb
and
movsl
adc
xor
rolb
mov
push
call
ret
sbb
lods
push
mov
add
lea
and
mov
mov
popa
and
xor
and
mov
aam
add
mov
xchg
pop
mov
outsl
xor
test
pop
add
inc
fs
mov
ret
xchg
jl
add
rcl
fists
sbb
inc
xor
les
lock
inc
push
pop
add
lea
adc
popa
cmp
clc
push
popa
mov
adc
or
das
lods
dec
adc
inc
popa
xlat
test
clc
cmp
adc
xor
leave
and
push
push
dec
push
dec
mov
mov
bnd
shrb
in
movsl
cmp
stc
cmpsb
mov
pop
cmp
mov
add
repnz
push
in
les
add
test
movb
dec
pop
clc
jbe
loop
sahf
jle
mov
add
movl
loope
jl
scas
xchg
lock
hlt
mov
gs
add
rorl
pop
cmpb
xchg
or
int3
shl
mov
mov
nop
pop
icebp
push
push
push
sti
mov
loopne
mov
inc
cmp
adc
movsl
or
and
mov
and
js
gs
stc
outsl
add
dec
xchg
pusha
xor
adc
jg
jo
mov
movl
mov
fisubs
inc
dec
inc
adc
sbb
mov
into
int3
rcrb
icebp
dec
sub
add
mov
push
sbb
dec
addl
int
loope
or
sbb
fldt
jmp
sub
and
cmpl
cld
mulb
loopne
add
fisttpll
cld
add
roll
sbb
test
mov
adc
push
and
aam
nop
mov
movsb
hlt
cmp
sub
inc
jmp
adc
aam
clc
sub
dec
incl
mov
cmc
clc
push
add
push
push
push
push
pop
and
addl
adc
cmc
push
cmp
orl
push
jne
push
cmc
imul
cmp
lock
nop
xor
inc
fs
cmp
jnp
loop
jne
popa
mov
test
bound
cmp
mov
push
inc
mov
daa
mov
add
gs
jo
out
ljmpw
pushf
push
loop
and
adc
mov
mov
adc
xlat
mov
xchg
mov
pop
jmp
and
sti
rclb
or
inc
add
push
mov
sub
ds
jge
mov
push
movsl
in
lret
dec
cmpsl
cs
push
inc
cwtl
imul
push
orl
hlt
adc
aas
pushf
lea
inc
add
jp
pop
add
fs
mov
lods
fnstsw
mov
mov
mov
stc
or
scas
imul
cmp
js
add
xor
ja
jp
xchg
xchg
jbe
mov
popf
enter
adc
loopne
dec
sbb
jnp
adc
push
push
push
jnp
add
inc
adc
cmp
ss
cmp
push
test
mov
std
push
cltd
cmp
xor
insb
nop
es
add
cmp
add
xor
adc
sub
rcll
inc
fsts
shrb
sub
push
test
pop
pop
add
add
add
push
sbb
or
clc
sti
xchg
icebp
daa
jae
cmp
out
push
lcall
ljmp
adc
inc
sbb
lcall
addr16
cmp
inc
shll
ljmp
daa
jl
jb
punpcklbw
inc
jne
cmpsb
clc
jo
xor
jnp
add
dec
or
push
jo
sbb
ss
mov
mov
sbb
cwtl
adc
loop
in
lea
nop
add
xchg
cmpsb
push
nop
fistpl
mov
loopne
scas
mov
push
hlt
jg
push
fstps
iret
and
push
clc
jo
xor
aam
scas
xor
adc
mov
pop
push
movsl
rol
aaa
sbb
mov
mov
pop
push
push
ds
lds
push
rclb
mov
popa
rcrb
mov
movb
rol
push
fsubs
xor
jne
lcall
jmp
and
dec
ljmp
jge
notb
pusha
sub
and
add
test
cmp
in
mov
lret
jbe
xchg
xchg
pop
mov
add
scas
xor
and
icebp
lahf
mov
or
adc
or
pop
int3
je
and
ds
push
int3
pop
push
push
dec
jl
inc
adc
push
out
mov
dec
jae
xor
gs
inc
push
jmp
das
cmp
adc
aam
insb
inc
push
sub
lcall
push
push
out
xchg
mov
cmpsl
mov
cmp
cmpsb
adc
sbb
loopne
stos
aas
mov
test
mov
sbb
mov
and
ret
cmpsb
test
gs
aas
ret
sub
in
mov
lods
pop
inc
nop
lret
xor
gs
xor
inc
push
cmp
loope
dec
add
test
add
pusha
cwtl
mov
popa
lods
rcll
pop
pop
sbb
jns
inc
fcomps
jno
push
shll
dec
mov
fchs
jmp
test
or
roll
loopne
or
xor
push
shrl
les
mov
insl
xchg
call
lret
out
fs
xchg
mov
xorl
jno
adc
inc
or
dec
mov
add
mov
mov
mov
ljmp
jo
jle
add
cmpw
sbb
cmpb
adc
sbb
push
pop
add
pushl
jmp
pop
push
pop
mov
add
sar
mov
push
je
or
jo
mov
adc
shll
mov
clc
je
adc
pop
add
sarb
xor
or
push
rol
xchg
ret
pusha
jne
xchg
mov
push
jo
jl
sub
jmp
mov
add
mov
lcall
dec
movzwl
cmpl
push
fs
hlt
notb
pop
or
sahf
out
fildl
inc
cltd
add
mov
or
xor
sbb
adc
push
add
fimull
loop
iret
negb
sbb
adc
jo
es
add
and
orl
xchg
dec
ret
mov
sysret
add
lret
pop
and
fs
mov
mov
js
insb
decl
hlt
jne
jb
fs
push
lock
mov
add
cmpl
push
pop
push
dec
push
int
xor
jo
subl
and
adc
adc
mov
or
insl
pop
adc
inc
adc
push
sbb
mov
icebp
push
and
movsb
or
push
imul
icebp
add
inc
add
aas
test
push
out
shlb
fwait
mov
andb
data16
fsubs
adc
add
sub
push
sbb
addl
call
adc
movsl
sub
dec
rcrl
or
sub
jae
sub
cwtl
ss
sbb
in
adc
arpl
mov
imul
inc
iret
mov
js
arpl
jmp
mov
adc
add
shr
mov
jmp
add
sub
enter
mov
pop
sbb
jb
jl
and
pusha
shll
lret
sbb
mov
sub
stc
ret
fdivl
adc
push
xor
bswap
push
sbb
divl
pop
ret
push
dec
rcl
add
add
or
mov
rorb
mov
push
cmpl
and
jne
in
adc
pop
mov
popaw
add
in
les
movsb
aam
in
fsubrl
out
xor
adc
and
repnz
fidivl
lods
sub
adc
rolb
inc
lea
mov
push
mov
mov
dec
pop
jne
sub
imul
lods
andb
add
push
or
xchg
push
jge
push
adc
scas
push
sbb
adc
xor
adc
test
pop
push
pop
mov
addr16
push
fucomp
nop
loopne
sbb
cmc
inc
jmp
ja
nop
aaa
mov
sbb
in
sbbl
dec
inc
loopne
daa
sbb
rclb
mov
in
roll
adc
rol
or
shll
in
stos
das
mov
ret
inc
push
incl
decl
dec
inc
flds
sbb
and
ret
lock
push
jo
adc
lahf
in
adc
cmc
inc
dec
cs
inc
mov
and
mov
jmp
xlat
inc
aaa
sub
xchg
dec
iret
sti
rolb
dec
xchg
dec
push
push
popa
shr
ja
hlt
xor
mov
push
jecxz
pop
sbb
out
rclb
inc
loope
enter
nop
nop
imul
jmp
push
push
das
or
insb
cmp
or
jge
add
xor
dec
pushf
and
dec
test
fucomip
inc
sbb
orl
pop
in
xor
and
and
sub
stos
cli
pusha
xchg
push
or
adcl
jl
pusha
add
imul
xchg
xor
lret
mov
icebp
add
je
and
add
roll
mov
and
and
jnp
stos
pop
aaa
adc
inc
mov
jl
add
push
push
ret
mov
mov
dec
lods
add
clc
push
dec
sub
push
lcall
inc
add
jmp
popa
cltd
nop
out
sbb
inc
fwait
mov
mov
mov
add
jnp
add
mov
popa
enter
dec
inc
inc
dec
xchg
sbbl
jne
bound
adc
and
jne
push
call
sbb
sbb
movsb
subl
inc
test
mov
and
jbe,pt
or
sub
rclb
dec
push
lods
sbb
fdivrp
push
andl
movsb
stc
xchg
lock
xor
pop
jae
mov
push
add
andb
movsl
js
add
cmp
out
push
shr
jge
fdivl
push
cmpsl
lock
add
cltd
dec
int3
xchg
movsb
or
sarb
adc
fs
mov
add
pop
push
inc
lahf
movsl
lock
pop
pushf
pop
adc
dec
subl
push
rcrl
pop
cmpl
adc
loope
movsl
inc
mov
inc
fucomip
in
repz
sub
sub
aam
push
lahf
fdivs
outsl
mov
mov
add
int
dec
dec
test
pop
push
dec
shr
inc
aam
int
lds
jne
cmp
adc
movsb
rolb
outsb
jmp
adc
or
fsubrl
jbe
mov
enter
cmp
pop
popa
xor
or
jnp
sbb
xchg
cmp
orb
pop
cmp
dec
imul
jmp
add
popf
pop
les
cmp
dec
push
adc
dec
pushf
pop
pop
icebp
sub
jge
push
out
or
sub
add
jae
push
fdivl
call
faddl
push
xor
sub
shrl
pop
sbb
cmp
clc
cmpsb
cld
hlt
inc
dec
or
xor
leave
in
sub
adc
adc
mov
lods
jno
mov
and
fwait
bound
repz
mov
xor
push
cs
mov
subl
or
xor
add
cmpl
adc
cmp
jmp
push
fidivl
fidivrs
lods
clc
repz
cmp
out
pop
mov
push
xchg
outsb
or
dec
pop
bound
aaa
test
out
bound
cmp
jo
arpl
jns
pusha
xorb
xor
imul
fcmovbe
ret
pop
stos
jmp
mov
adc
test
inc
or
test
sub
xchg
pop
nop
inc
in
and
or
mov
xor
mov
adc
mov
and
cmp
adc
adc
outsb
pop
push
test
xor
and
inc
cmp
test
mov
xchg
or
cmp
inc
jb
orl
or
ret
imul
mov
add
roll
jl
xor
dec
xor
dec
and
xchg
out
movb
adc
push
jno
jle
dec
sub
mov
fists
add
test
popa
insl
repnz
adc
and
inc
mov
or
and
xchg
fwait
or
pop
xor
adc
jecxz
lock
adc
jge
clc
or
fdivrs
add
or
dec
popa
dec
jae
aaa
ljmp
call
dec
fcom
pop
push
or
orl
push
addr16
daa
push
cmp
in
cmp
xorb
cmc
cmp
test
push
sub
cmpl
cli
add
mov
mov
sbb
mov
xor
push
mov
nop
or
cmp
and
pop
inc
mov
lock
push
shrl
and
jae
or
or
push
xor
or
push
mov
pusha
or
and
cmp
add
add
mov
cld
cltd
pop
sbb
dec
mov
aaa
iret
mov
enter
push
or
mov
add
dec
daa
add
pushf
jge
popf
in
add
xchg
or
je
clc
or
flds
or
bound
pusha
xor
cmc
push
push
jbe
shlb
or
push
push
nop
xor
lea
movsb
in
inc
inc
sbb
adc
loope
push
test
mov
or
aaa
xor
mov
inc
mov
xchg
xchg
mov
push
loopne
in
negb
and
rcrl
test
push
cwtl
fcmovnb
xor
cmc
or
cmp
addr16
and
dec
adc
adc
fistl
call
or
mov
addr16
pop
leave
xor
imul
test
test
ds
clc
sbb
xor
mov
loopne
xor
add
ret
mov
push
orl
leave
in
or
imull
mulb
inc
cmp
sbb
push
sbb
mov
adc
pop
jecxz
inc
test
call
push
push
out
cwtl
lahf
push
jne
inc
pop
mov
xor
cmpsb
mov
movsl
pop
cmpsl
popa
loopne
push
or
xchg
push
fiaddl
cmc
xchg
push
dec
movups
adc
add
sti
sub
dec
ss
jl
movsl
sbb
or
insb
sbb
sub
or
or
and
ret
outsl
push
add
pop
xor
mov
and
lods
or
fs
cmpsb
scas
sbb
push
fstps
leave
push
jns
push
aad
dec
jae
jns
add
mov
or
scas
in
popf
cld
icebp
mov
inc
shrl
add
in
push
xor
mov
push
scas
call
fs
add
mov
sbb
pop
xchg
add
cmp
data16
adcl
cmp
sbb
sub
daa
add
pop
imul
sub
inc
les
jecxz
clc
add
andl
push
cwtl
adc
fimull
gs
xor
adc
cmc
orb
sar
icebp
add
adc
mov
mov
mov
fisttps
lcall
xor
test
xchg
add
outsl
sbb
fisubrs
dec
pusha
push
xchg
popf
mov
nop
mov
das
lret
jne
sbb
daa
push
inc
dec
or
inc
or
mov
or
bound
cld
add
mov
mov
sub
cmp
pop
cmp
add
push
push
jns
call
inc
out
pop
ret
adc
mov
sbb
gs
test
cld
pusha
lcall
fcoml
xchg
xchg
inc
lods
xor
addl
int3
xchg
push
push
aad
lods
sti
push
sbb
and
sbb
rcll
and
mov
dec
movsb
or
and
dec
push
and
add
xor
sbb
push
pop
or
dec
xchg
pop
aaa
ret
jge
adc
push
pop
shld
mov
pop
insb
push
dec
pop
adc
test
mov
or
xor
cmp
lcall
test
faddl
sub
mov
inc
enter
mov
and
add
push
inc
add
mov
lods
sub
add
out
dec
lods
test
pop
adc
xor
jne
test
orb
adc
cmp
fcmovne
roll
shll
mov
push
orl
add
pop
sahf
dec
rcll
sbb
mov
dec
orl
filds
outsb
push
movsb
jb
sbb
inc
or
pushl
shlb
test
pusha
mov
lods
jns
shlb
sub
daa
jne
and
ret
mov
pushf
cmp
adc
xchg
inc
xchg
cltd
push
push
xchg
fcmovnu
fdivs
mov
xor
loop
popf
add
push
dec
push
or
push
imul
dec
dec
mov
jg
incb
data16
xor
insb
mov
test
push
push
xor
jl
sbb
out
lret
and
xor
ficomps
or
adc
cmp
cmpsl
orl
mov
adc
rolb
in
cmpsb
jle
xor
push
into
addr16
shll
ds
leave
lds
and
sub
movsb
jl
or
insl
adc
xor
pop
and
xor
add
les
push
test
xor
stos
in
sbb
push
mov
js
jbe
pop
pop
mov
pop
mov
mov
dec
xor
pop
jne
and
pop
xor
pushf
pop
add
fiadds
outsb
xlat
or
popa
sbb
das
les
pop
jae
xor
enter
cmp
nop
test
mov
mov
stos
inc
ret
mov
es
test
pusha
insl
sbb
loop
adc
xor
sbb
inc
dec
dec
fbld
in
clc
add
aas
lea
sbb
jle
adc
fisttpl
mov
aaa
push
xor
push
adc
dec
stos
jno
cmc
or
dec
mov
push
adc
xlat
pop
inc
dec
jl
sub
es
lods
in
frstor
cli
sub
scas
jns
das
pusha
or
insb
insl
jno
sub
mov
sbb
and
adc
mov
xor
xchg
inc
sub
push
sub
dec
ds
xor
fs
jno
popf
loop
filds
call
outsl
push
pop
shrb
xor
inc
scas
inc
pop
and
out
nop
sub
insl
mov
aaa
jmp
notl
sub
adc
jne
loop
adc
push
jmp
aaa
add
hlt
mov
dec
mov
dec
inc
add
lock
mov
pop
adc
sbb
xor
dec
fwait
or
add
inc
push
sbb
aam
ja
xadd
cld
rolb
or
sbb
xchg
cs
and
adc
add
outsb
je
fldcw
push
imul
push
or
addb
pop
xchg
push
and
or
jb
repz
sub
addl
sarl
test
sub
sbb
fnstcw
pop
mov
xor
hlt
lock
das
jmp
push
sub
cs
or
jns
and
movsb
pop
push
push
mov
into
fistpll
out
push
flds
mov
fs
and
mov
jmp
pop
rcr
ja
lds
outsb
in
and
cmp
add
dec
cmpsl
je
adc
push
and
jne
stos
push
push
aas
jmp
movsb
imul
dec
sahf
cmc
add
and
jbe
pushf
add
adc
adc
dec
dec
test
adc
and
leave
jae
mov
push
or
pop
sti
or
xchg
sbb
and
imul
sub
dec
test
jno
ljmp
test
sbb
add
mov
adc
fs
adc
int3
push
js
mov
sbb
pop
cmp
pop
and
push
sbb
repz
mov
inc
mov
mov
fcomps
pop
hlt
ss
adc
cmp
adc
es
popa
scas
sbb
dec
lahf
pop
sub
push
xchg
adc
add
push
adc
jbe
and
mov
jg
adc
add
mov
or
jns
add
and
lea
ror
xor
ret
adc
xchg
inc
and
mov
push
out
jl
jmp
jecxz
movsl
mov
sub
sbb
pusha
sbb
and
sti
add
addl
into
xor
sarl
jl
push
cmp
or
pop
das
lret
mov
orl
mov
cli
mov
mov
mov
lods
mov
in
add
mov
mov
imul
cmpsl
push
mov
add
add
xor
popa
or
test
dec
mov
fistl
add
adc
sub
ret
jbe
xchg
jl
cmpl
iret
rolb
or
les
scas
or
pop
pop
mov
jle
loop
pop
pop
jne
das
fcomps
push
push
adc
shlb
sarl
push
and
mov
pop
and
add
dec
dec
and
mov
in
jo
jo
daa
fcmove
push
xor
sub
shlb
cmp
je
and
pop
sti
adc
push
loop
xor
or
and
addb
icebp
xchg
lods
aad
or
dec
fisttpll
jno
faddl
mov
lods
shll
mov
sub
sub
or
mov
mov
adc
cmp
add
fs
jno
dec
sub
or
add
dec
add
popa
xor
sbb
pop
inc
mov
subl
xchg
adc
scas
dec
fiadds
pop
shl
sbb
xor
mov
hlt
shl
push
inc
mov
or
pop
subb
and
push
stc
jb
push
inc
cmp
dec
inc
mov
in
sub
ficoms
jecxz
sub
je
mov
pop
pop
cli
mov
sbb
inc
fiadds
in
rolb
mov
into
test
xchg
adc
std
adc
outsl
or
popa
aam
xor
add
lods
imul
cmp
enter
cwtl
js
pop
xor
addb
dec
push
sub
lea
push
cltd
mov
pusha
insl
mov
adc
call
pop
push
sbb
dec
and
fsubr
add
cs
hlt
cmp
push
inc
add
jns
dec
cmp
inc
sbb
jl
push
and
push
push
push
add
imul
lds
push
pop
test
dec
fcoml
sbb
ret
xchg
outsl
lcall
test
fwait
mov
fisubs
cmc
cmp
jb
test
popf
and
bound
cmp
pop
adc
aas
xor
pop
push
loop
add
pop
adcb
push
imul
sbbb
push
mov
push
push
pusha
cmp
enter
fcoms
sbb
popa
xor
shlb
push
aad
sbbl
mov
call
xor
xor
push
push
or
lret
lret
pop
fstl
loope
cmp
jno
xchg
or
clc
aam
sub
xchg
or
mov
leave
pop
in
mov
test
rorl
movsl
adc
xchg
dec
inc
test
cld
clc
jb
dec
inc
sub
push
and
pushl
mov
adc
mov
push
ja
loope
rcrb
movl
pop
sti
push
aas
stos
inc
adc
fldz
and
add
jge
pop
imul
cmp
and
sub
add
mov
cmp
jbe
enter
push
mov
ficompl
push
sbb
mov
or
push
popf
push
adc
shll
adc
mov
insb
inc
mov
outsl
adc
push
add
sub
ss
mov
test
and
add
adc
fmuls
jne
fisttpll
mov
fs
in
pop
add
jns
loopne
lea
fsubs
data16
mov
cmpsb
mov
xor
adc
pop
fwait
pop
fstl
mov
cli
sbb
stc
or
mov
add
jg
faddl
jg
int3
xor
je
push
test
xchg
xor
adc
adc
jg
mov
cmp
jle
cmp
jp
push
cmp
cmp
jg
mov
cmp
mov
mov
push
add
inc
jmp
int3
xor
and
push
movw
fstps
ljmp
hlt
sahf
dec
mov
addr16
inc
or
fs
pop
idiv
call
xchg
lods
adc
xor
mov
out
cmpsb
or
or
mov
adc
adcb
test
xorb
add
sbb
dec
sub
jno
push
popa
or
outsl
mov
or
xorl
imul
arpl
sub
and
adc
outsl
mov
inc
sbb
dec
xlat
mov
movsl
or
cmp
and
adc
inc
xchg
xchg
add
inc
mov
std
adcl
mov
adc
sub
xor
cmp
mov
adc
mov
sarb
push
ror
dec
jb
subb
jb
lock
or
and
mov
ret
pop
roll
push
les
es
add
insl
or
sbb
aam
or
sbb
faddl
and
dec
and
add
daa
sub
ror
push
mov
loopne
sbb
pop
sbbb
mov
mov
dec
lock
pop
adc
adc
xchg
mov
pushf
xchg
add
push
push
data16
enter
push
sub
rolb
in
dec
mov
and
sbb
push
leave
and
or
xchg
out
sbb
dec
adc
adc
adc
mov
jmp
adc
push
leave
push
and
add
add
add
inc
loopne
jne
xor
aam
shll
dec
sbb
and
clc
pop
aaa
leave
enter
sbb
add
pop
and
sbb
js
insl
dec
popa
mov
pop
push
jno
pop
cmpsb
add
test
fisubl
fwait
mov
inc
sbb
stc
add
test
lods
pop
add
and
jecxz
or
jnp
sub
sub
lods
fstl
adcl
ljmp
cmp
aad
push
cmc
inc
adc
adc
push
push
xor
cmp
mov
push
jae
sub
mov
inc
jae
push
cmp
shlb
add
loopne
add
adc
xchg
data16
mov
mov
adc
sbb
adc
or
pop
add
hlt
inc
add
adc
or
xlat
mov
xchg
sbb
ret
lock
sub
loopne
test
sub
jae
lods
inc
lar
in
push
jecxz
fwait
push
and
mov
or
pop
mov
lods
push
fcompl
loope
push
bound
add
xchg
cmp
hlt
jae
xor
mov
adcl
sbb
push
mov
push
sub
les
add
xchg
push
adc
mov
or
push
sub
nop
add
aaa
mov
add
mov
sbb
or
add
jns
sbbb
pop
leave
bound
cmpsb
movsb
jne
mov
test
enter
outsl
add
orb
cmpsl
cmpsl
in
push
add
popa
jmp
cmp
add
adc
mov
dec
aaa
jb
pop
pusha
lock
ljmp
leave
xchg
pop
sbb
pop
or
push
enter
icebp
and
and
in
sub
or
pminsw
add
popf
jbe
jae
in
bound
mov
test
rclb
dec
add
sub
test
addr16
xor
cmc
mov
xor
jo,pn
sbb
jbe
and
add
dec
sar
enter
pushf
ja
pushf
fiaddl
jbe
insl
pop
mov
add
cmpl
lock
push
int
call
or
inc
les
insb
pop
xor
arpl
cmp
mov
lcall
ret
sub
pushf
lods
popa
xchg
mov
push
push
lods
sbbb
push
add
and
cmp
xlat
sub
fildl
adc
cmp
push
xor
sub
inc
push
jecxz
adc
dec
mov
pop
shll
cmp
nop
sub
mov
adc
cltd
or
jnp
cmpsb
es
dec
cmp
push
shll
pop
adc
or
or
add
push
imul
lods
add
pop
xor
sbb
mov
pusha
push
pop
xchg
add
jmp
outsl
subb
push
fdivl
mov
aas
or
lds
push
mov
mov
xchg
ffreep
jecxz
add
adc
or
inc
inc
jl
push
xchg
les
mov
or
cmp
sub
pop
or
mov
mov
dec
inc
inc
push
std
xchg
dec
rcrb
add
pusha
in
imul
mov
cmpb
mov
mov
lods
dec
jne
sub
fmuls
andb
or
xchg
dec
push
pop
cmp
dec
dec
mov
movq
mov
dec
fldl
fnstsw
test
je
sbb
mov
lock
jecxz
jp
inc
pop
push
push
fldl
push
sbb
dec
fildll
imul
fsubrl
stos
sar
in
mov
fstpl
pop
data16
mov
push
push
ret
mov
pop
or
lahf
jo
jnp
xchg
add
and
loope
fsubrp
pop
movb
xchg
aaa
push
cmp
push
inc
repz
repnz
cld
call
lret
sub
leave
in
ret
sub
test
in
pushf
or
jbe
lahf
dec
pop
pop
mov
movl
dec
pop
ss
divb
inc
negb
mov
inc
loope
insl
adc
xor
fwait
scas
sub
test
adc
insl
loop
push
adc
dec
dec
mov
je
mov
sub
mov
jge
mov
call
fidivs
test
inc
lock
pop
xor
les
mov
xchg
ret
les
push
dec
loope
dec
into
iret
pop
add
inc
repnz
dec
es
mov
loopne
mov
inc
mov
and
dec
pop
push
mov
sbb
mov
daa
add
push
push
mov
sbb
dec
clc
or
jge
xchg
enter
dec
inc
dec
cmp
jb
sbb
leave
shld
mov
fidivs
jb
jb
aas
lods
ja
lea
push
push
inc
add
leave
mov
push
je
mov
mov
or
imul
push
mov
push
push
push
push
or
add
mov
push
or
cli
pop
and
cltd
push
push
push
fiaddl
pop
xchg
push
insb
sbb
and
test
lea
sbb
push
nop
test
test
dec
push
int
sarl
ja
add
les
xchg
push
push
add
adc
push
adc
fcmovnbe
les
xor
orb
jb
ret
add
cmpw
jne
dec
jmp
out
ficoms
and
cmp
mov
inc
jmp
push
push
jl
mov
outsb
sti
pop
insl
decb
jg
stc
std
mov
or
inc
andl
leave
out
out
shrb
push
push
push
sar
and
in
add
loop
imul
push
push
inc
xor
sub
roll
mov
mov
adc
insl
cmp
xor
cmpsl
lods
imul
int3
inc
jle
adc
ja
cmp
or
cmp
pop
mov
addr16
sub
dec
in
xchg
pop
stos
push
and
cld
add
add
adc
push
popa
jmp
outsb
cld
rcll
mov
lret
lea
or
mov
dec
adc
push
push
xlat
add
mov
adc
std
and
jne
insl
test
xchg
jne
repz
lock
xor
mov
cmp
js
insb
sbb
pop
pushf
push
adc
add
addb
mov
push
into
cltd
outsl
inc
push
gs
push
xchg
sub
jnp
je
lret
jno
push
or
add
add
pop
xlat
andl
add
sarb
lods
mov
add
daa
adc
shlb
and
adc
or
mov
imul
inc
cmp
cmp
fcmovnb
test
bound
adc
ds
popa
jno
call
ror
aaa
jae
adc
repnz
mov
cmp
std
ret
dec
push
sbb
mov
ja
inc
inc
jmp
dec
inc
arpl
inc
sbbb
or
pop
or
push
adc
push
mov
add
mov
push
pslld
pop
xorb
inc
cs
jne
loopne
aam
add
fwait
sbb
in
ljmp
mov
imul
sbb
xor
push
rep
add
pop
inc
push
add
push
ljmp
fmul
rolb
cmpl
cld
movsb
push
or
dec
push
sbb
mov
pop
mov
int
loopne
mov
and
aas
icebp
push
add
test
or
pop
lds
test
inc
inc
mov
ja
push
push
mov
add
ss
push
push
jmp
push
xchg
mov
jmp
jge
ljmp
icebp
and
xor
mov
fs
inc
adc
fadds
sub
dec
sti
je
dec
je
add
sbb
dec
jne
ror
jns
and
or
imul
push
add
xchg
les
subb
in
cmpb
push
sarl
or
mov
mov
scas
push
mov
inc
fistps
lcall
out
mov
cmp
mov
hlt
push
nop
inc
xchg
inc
pusha
inc
push
cmp
mov
lock
insb
repnz
inc
push
mov
or
push
jbe
xor
pop
hlt
xor
pop
adc
test
and
jle
xchg
enter
mov
jb
and
hlt
adc
in
inc
xor
insb
in
inc
push
mov
cmp
lock
inc
mov
push
push
xor
mov
frstor
repz
out
icebp
sti
add
repz
and
cmp
repz
mov
iret
repz
cmpsl
stc
cmp
jecxz
testl
jns
adc
inc
jns
out
push
pop
outsl
jns
dec
sahf
out
lea
sub
cmc
call
ljmp
push
or
add
xor
lock
pop
lock
mov
pop
or
sti
cld
cmpsb
xor
dec
je
adc
mov
adc
cmc
int
and
xor
pop
sbb
fdivs
pushf
and
aas
insb
sub
lea
sub
cmp
frstor
pushf
push
in
inc
mov
push
outsl
movsb
mov
es
xchg
add
nop
rorl
fcompl
push
cmp
cmp
xor
jge
pop
not
add
lods
pop
faddl
inc
sbb
dec
das
pushf
push
inc
push
sub
or
xor
mov
and
dec
pop
test
test
adc
xchg
xchg
fs
pop
sbbl
out
or
ja
rorb
push
jg
cmpb
jge
jnp
movsb
pop
push
cmp
push
xchg
lcall
inc
add
shlb
mov
add
negl
test
adc
inc
add
rorb
rorl
enter
dec
mov
sub
jnp
jns
or
push
push
pop
clc
add
stos
inc
movsb
ja
sub
ret
push
enter
push
xorb
lret
in
test
adc
shrb
pop
xchg
loope
sub
adc
sar
jmp
cwtl
loop
sub
sub
hlt
stos
pop
addl
arpl
adc
sbbb
or
add
mov
jno
movb
push
leave
ficompl
mov
sbb
jge
jne
inc
push
or
orl
sbb
push
cwtl
scas
push
stc
pop
xchg
add
pop
call
sbb
cmp
or
lea
add
mov
xchg
sbb
dec
cmp
mov
mov
fimull
push
lea
and
fidivs
cli
push
mov
es
push
pop
int3
cmc
or
push
dec
add
leave
enter
mov
jno
mov
mov
add
icebp
push
or
mov
mov
mov
xor
imul
adc
cwtl
fwait
cmpsb
xor
xchg
mov
mov
ja
punpckhwd
cmp
push
das
mov
sub
adc
pushaw
cwtl
xor
mov
cmpsl
imul
xchg
inc
insl
adc
mov
arpl
pop
mov
and
mov
fcmovu
sbb
xchg
out
shrb
insb
cs
out
jo
jl
out
out
cwtl
sub
xchg
movsb
sub
int3
subb
pop
push
pop
ss
mov
popf
mov
mov
jl
add
jl
adc
mov
and
fimuls
xchg
mov
xlat
movsb
mov
mov
add
das
jl
loop
mov
adc
lods
push
inc
or
dec
and
mov
push
jbe
add
jae
mov
addb
decb
movl
lods
jl
sbb
inc
add
int3
es
sub
int3
sbb
xchg
push
mov
xor
dec
and
mov
dec
jns
xor
add
and
sub
push
loopne
cmc
sub
pop
dec
jae
adc
ds
repnz
aaa
adc
or
inc
jmp
add
add
mov
filds
call
mov
cmp
gs
mov
imul
inc
movsl
out
pop
jle
mov
sub
and
hlt
adc
test
cmp
push
xor
rorl
push
hlt
inc
pop
fmul
and
cmp
int3
dec
jmp
cmp
push
nop
scas
mov
pop
movsb
sbb
push
sbb
dec
sub
inc
inc
push
aas
inc
xor
ret
ds
cmp
pop
dec
enter
das
ret
xchg
mov
nop
mov
cwtl
inc
push
adc
daa
cmp
xor
iret
in
push
inc
jnp
inc
mov
push
and
inc
push
xor
xchg
pop
movsl
or
dec
sub
jo
cld
aam
pop
shrl
dec
pop
inc
or
roll
shlb
outsl
push
xorl
xchg
push
adc
inc
adc
mov
mov
jae
jmp
push
sub
fwait
adc
or
je
stos
enter
mov
adc
loopne
push
popf
pop
dec
jae
nop
inc
fcoml
add
ja
rorb
inc
test
lods
fwait
and
lods
movsl
push
xchg
xor
pop
mov
je
or
or
pop
push
mov
or
sbb
iret
outsl
pop
fidivs
ja
and
sub
stos
in
jo
mov
inc
add
push
ja
mov
push
mov
clc
xchg
add
imul
pop
add
xor
rclb
fstl
lods
mov
fisubrl
test
mov
arpl
sbb
and
les
xchg
syscall
push
push
fwait
cmp
movsl
enter
sub
shll
pop
jmp
and
and
xchg
outsl
or
imul
adc
insb
enter
jle
mov
outsb
dec
pop
cmp
icebp
in
mov
push
add
add
enter
add
loopne
test
or
sbb
rcrl
push
call
xchg
setl
xchg
cmp
cmp
fsubl
lods
cmc
adc
adc
jecxz
fiadds
out
adc
mov
pop
es
push
loope
cltd
adc
addl
mov
mov
cmp
lcall
sbb
jge
fcmovne
push
mull
lods
fsubrs
sbb
xchg
lods
sbb
test
mov
sbb
push
jl
pop
jb
push
movsb
pop
lahf
mov
imul
rorb
and
adc
mov
mov
and
inc
sub
adcb
test
inc
dec
dec
jae
push
cltd
inc
sbb
test
xor
pop
pop
test
int3
dec
dec
pop
adc
push
adc
mov
push
dec
xor
sbbl
movb
mov
test
pushf
lea
or
and
or
add
dec
pop
pop
aam
dec
ds
or
xor
add
test
loopne
xor
sub
push
movb
je
lea
adc
jo
test
inc
xor
add
sub
xor
inc
inc
and
jecxz
cmpsl
repnz
test
push
and
cld
icebp
sbb
inc
xor
jo
out
adc
dec
cs
roll
sub
sbb
jge
faddl
add
mov
or
lahf
movb
lods
add
mov
sarb
cmpb
adc
outsl
or
aad
sub
sbb
divl
adc
xor
inc
or
push
mov
or
data16
sbb
adc
mov
or
imul
mov
test
jle
sbb
setb
inc
icebp
push
popf
sub
push
mov
cmp
loop
mov
push
sub
pop
fmuls
xor
leave
push
mov
ret
cmp
fdivrl
and
push
mov
arpl
inc
ret
loope
mov
mov
adc
enter
adc
mov
inc
imul
imul
add
push
je
jmp
sbb
sbb
nop
mov
sub
lea
sbb
pusha
sbb
mov
push
adc
push
pushf
loopne
adcb
mov
test
xlat
lock
int3
pop
dec
nop
pop
push
xor
pop
and
fwait
and
mov
xor
test
push
fiaddl
and
or
and
and
push
jl
and
stos
sub
push
pop
es
in
movsl
cmp
sub
mov
push
fadds
push
imul
sub
insb
sub
je
test
sub
sbb
mulb
movsb
lea
mov
push
add
inc
rorb
je
dec
loope
jno
pop
add
insb
mov
imul
aad
jmp
mov
lods
loop
dec
popf
das
int
push
pushf
not
icebp
inc
movsb
cltd
nop
and
imul
nop
inc
lcall
movsb
cltd
sub
or
test
push
and
and
or
and
nop
and
imul
cwtl
nop
inc
sbb
and
inc
js
xor
insl
sbb
mov
rorb
pop
rolb
sub
test
popl
push
movsb
sahf
adc
mov
add
adc
sub
in
orl
imul
inc
add
fs
sbb
shll
sub
or
dec
test
sbb
icebp
fdivrs
adc
aam
push
lds
inc
adc
xchg
mov
jge
je
repz
push
rolb
in
into
fnstsw
pop
sbb
sbb
pop
scas
aam
mov
orl
jmp
pop
push
jo
or
sbb
xchg
sbb
pop
adc
push
sbbb
and
mov
in
add
mov
xor
cmp
dec
inc
dec
fnstenv
jl
mov
push
dec
xor
adc
xchg
inc
add
incl
cmp
movsb
sbb
cmp
xorb
add
inc
push
add
xor
inc
or
int
lea
cmp
ret
adc
push
cmp
cmpsb
mov
dec
test
shl
test
sbb
ret
sbb
popf
ljmp
inc
mov
or
imul
cmp
decl
imul
jo
push
mov
ljmp
pop
cmp
jbe
add
pop
mov
mov
or
std
addr16
jmp
packsswb
jmp
dec
pop
shlb
aad
jmp
jne
pop
pop
std
arpl
lret
mov
jmp
mov
test
inc
adc
xor
push
pop
push
pop
repnz
cmp
inc
adc
out
push
xchg
sbb
sub
cmp
and
pusha
ljmp
clc
loope
push
sbb
mov
or
jb
mov
and
lahf
lcall
addl
pop
add
and
sub
cmp
adc
push
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
mov
jb
lods
or
and
mov
rorb
inc
mov
mov
or
or
iret
jne
mov
inc
shl
sub
repz
jae
inc
adc
adc
or
les
loopne
iret
je
mov
dec
roll
add
jmp
decl
cmp
xchg
mov
ret
fnsave
xchg
out
sbb
daa
popa
inc
fists
jmp
add
inc
pop
rolw
xchg
mov
mov
or
xlat
inc
js
addr16
dec
or
popf
mov
idivl
leave
imul
mov
push
jne
inc
push
rorb
sysret
push
rcll
jmp
inc
jbe
jo
shl
in
pop
adc
mov
add
icebp
or
sbb
mov
lret
push
add
pushl
inc
cmp
xchg
xor
push
loope
clc
and
cmpsb
sbb
push
sbb
and
cltd
push
popa
sub
lock
sbb
mov
in
sub
jmp
adcl
add
cmp
jmp
cmp
jl
or
je
and
cmp
or
and
mov
movb
movsbl
shr
mov
outsl
pop
mov
and
mov
nop
inc
mov
add
jbe
jne
pop
je
xchg
inc
lock
scas
jo
jne
pop
or
cltd
xchg
mov
adc
mov
lods
test
or
mov
hlt
push
mov
ljmp
mov
push
mov
jnp
sbb
movsb
stos
add
rorl
add
test
inc
fildl
and
push
xor
fmull
mov
pop
cmc
jns
aam
inc
cltd
inc
lock
xor
mov
dec
mov
mov
cmp
je
dec
mov
jg
add
in
push
push
sbb
test
into
pop
dec
pop
adc
xchg
inc
mov
jo
pop
sbb
mov
cmp
jge
adc
jne
push
xchg
test
push
jnp
aad
push
insl
cmp
or
call
mov
inc
ja
dec
and
jmp
add
jle
pop
add
pusha
rcl
test
mov
dec
jae
shrb
aam
mov
push
data16
xlat
mov
neg
sbb
inc
je
pop
jp
inc
and
out
push
add
add
sbb
fnstenv
xchg
adc
ret
cltd
int3
push
dec
xchg
shlb
sbb
roll
rorb
and
fsts
xchg
or
and
jl
mov
enter
sbb
push
sub
repnz
mov
mov
cmp
or
or
pusha
cmp
sbb
mov
jmp
pop
lock
pop
daa
addl
mov
repnz
and
or
or
into
jg
outsl
sub
std
or
mov
pop
inc
sbb
idivl
cmc
jmp
jmp
mov
sbb
and
jmp
cmp
add
cmp
cs
xchg
cmp
leave
or
les
mov
add
insl
or
xchg
in
jecxz
stc
and
lea
cmp
or
addl
mov
fnstenv
addl
nopl
mov
nop
pop
rcl
push
add
pop
xchg
add
push
xor
mov
enter
lcall
jecxz
sub
dec
push
sbb
mov
out
dec
or
lret
sub
inc
jmp
mov
mov
rorb
aaa
xchg
sub
dec
sub
jbe
or
lock
pop
mov
push
jb
or
mov
xorl
mov
mov
cmp
aas
inc
mov
add
addb
dec
and
mov
mov
iret
jecxz
xor
jmp
dec
mov
and
xchg
mov
daa
cld
or
xchg
test
mov
add
out
fbstp
fistps
aaa
sbb
sbb
pop
cmc
sub
inc
lret
xchg
movsl
adc
push
sub
push
dec
add
fstpl
flds
cwtl
loopne
cs
fcoms
and
add
cltd
dec
dec
fcoml
inc
adc
mov
bound
rorb
dec
in
ret
mov
mov
inc
sbb
pop
pop
add
push
or
push
add
jno
inc
loope
jne
cmpsb
cmc
ret
fcmovnb
test
xorl
enter
call
lods
aam
lea
cltd
dec
nop
xchg
ss
fdivrl
cwtl
xchg
movb
mov
xor
sub
xor
fistl
out
imul
add
scas
xchg
cmp
push
or
push
cmp
dec
xor
mov
jne
pusha
push
adcb
jmp
mov
push
dec
rolb
sbb
add
test
in
arpl
clc
cmpsl
je
stos
mov
leave
mov
lock
push
hlt
es
dec
pop
cmp
cli
push
mov
and
subb
xor
xor
inc
push
cmp
pop
push
les
cmc
ljmp
je
xchg
dec
sbb
adc
shl
les
pusha
xchg
and
imul
add
push
add
into
sub
or
sbb
lea
jno
pop
mov
je
in
sub
xor
cmp
or
cmc
mov
movsb
push
mov
xor
jne
je
inc
sub
outsl
push
cmpb
jl
push
xor
cli
test
js
out
cmc
hlt
add
mov
sarb
les
shlb
cmp
cmp
dec
fadds
mov
rclb
and
notl
fdivrl
lea
mov
bound
addl
and
pushf
dec
dec
gs
push
enter
filds
nopl
mov
mov
dec
or
fldl
lods
inc
jne
testb
push
xor
dec
add
add
cmp
daa
push
lock
mov
xor
ficompl
mov
call
dec
push
mov
roll
mov
fistps
dec
mov
rorb
xor
mov
and
loope
aad
or
jnp
adc
inc
das
je
jge
stos
sti
sub
jp
aaa
int
arpl
jnp
fs
xchg
mov
and
xor
in
cmp
test
jne
es
xor
lock
jno
ret
xchg
dec
sub
mov
sbb
mov
cs
test
pop
imul
jns
mov
push
push
sub
pop
sub
push
push
sbbb
inc
adc
sbb
sbb
push
xor
sbb
jmp
inc
int3
or
insl
rorb
out
pusha
and
dec
add
and
lock
add
mov
jne
test
ljmp
mov
lret
inc
or
test
dec
add
arpl
mov
enter
xor
inc
add
inc
sbb
xor
cmp
push
jecxz
jecxz
test
jle
jo
cli
test
inc
add
call
jl
jle
mov
in
ret
ret
mov
inc
popa
mov
addl
cmc
or
dec
inc
fisttpll
push
fldl
hlt
std
mov
dec
inc
data16
jne
adc
adc
jne
daa
jle
lahf
ja
jne
adc
hlt
jne
or
jne
add
clc
push
mov
sbb
xor
sbb
cwtl
or
js
pop
mov
pop
cmp
push
inc
mov
movl
dec
adc
push
cmp
mov
insb
inc
add
fstl
mov
pop
lea
fstpl
lea
cmp
ja
pop
lea
add
lcall
and
movsb
in
inc
mov
mov
fs
dec
lahf
jno
stc
sub
sub
daa
lea
add
and
int3
xor
cwtl
mov
or
xchg
movsl
xor
popf
loopne
xchg
mov
push
mov
add
fadds
clc
adc
in
dec
pushf
shrl
push
inc
frstor
add
adc
mov
cmp
adc
imul
adc
mov
add
pushf
xchg
xchg
test
cli
rdmsr
push
pushf
cmpsl
pop
sahf
inc
ret
jne
push
ss
sub
sti
sbb
cmovne
fmull
fcmovnb
inc
sar
xchg
fidivrl
xor
insl
mov
pop
pop
call
pop
imul
pop
orl
repz
xchg
pusha
pusha
pop
xchg
lea
mov
lcall
push
les
push
jne
imulb
dec
into
xor
aaa
movups
pushl
mov
ret
fwait
mov
mov
mov
push
cli
jmp
fisubrs
xchg
and
daa
jo
xchg
mov
or
push
aad
mov
adc
shlb
add
fmuls
rorb
notl
push
mov
inc
subl
adc
and
test
xor
adc
test
cli
std
inc
int3
insl
cmpb
dec
and
movsb
xor
mov
movsb
jge
lock
cmp
nop
sbb
xor
mov
mov
movsb
test
fstpl
mov
xor
push
pop
adc
mov
lods
and
xchg
stos
push
or
lea
loope
pop
cmpb
sbb
lock
mov
outsb
add
inc
mov
ss
fstpt
push
or
fs
push
mov
mov
outsb
and
negl
lds
xorl
mov
push
fistps
and
dec
test
lds
test
in
and
inc
cmp
pusha
sbb
fldl
hlt
push
cltd
pop
or
mov
or
nop
ja
clc
mov
adc
and
das
das
pop
cmp
sbb
xchg
push
cmp
inc
fwait
push
dec
adc
cmp
xor
in
sbb
cmp
and
sbb
and
and
pop
inc
adc
jo
adc
nop
arpl
loope
inc
adc
sub
push
cltd
xlat
leave
mov
pop
pop
xor
push
dec
push
cltd
nop
sbb
xchg
or
push
adc
mov
sbb
push
push
push
or
dec
push
ret
pop
cmp
jecxz,pn
adc
push
xor
jmp
adc
add
out
mov
cmp
sbbb
popa
xor
das
cmpsb
mov
jae
das
leave
and
pop
or
inc
fisttpl
test
pusha
ficomps
les
push
int
mov
add
mov
xchg
sbb
xor
dec
push
push
lock
out
xchg
mov
inc
xchg
imul
andb
test
adc
ret
and
push
xchg
pop
dec
loopne
adc
xor
jmp
std
jle
dec
js
jg
inc
or
je
push
xchg
lods
fistl
add
aam
add
sbb
leave
addr16
lahf
shl
pop
sbb
daa
movsl
inc
cld
dec
cmp
mov
push
adc
in
test
leave
mov
add
add
fs
movl
adcl
lahf
addr16
insb
rclb
mov
push
les
je
stos
sbb
push
lret
dec
call
xlat
adcl
jne
jno
in
call
cwtl
add
rol
andl
sub
int
or
das
mov
shlb
sub
loopne
add
scas
inc
movsl
push
jge
jecxz
inc
pop
mov
mov
pop
push
lock
inc
add
fmull
test
pop
inc
std
xor
sbb
and
cld
sbb
pop
popa
mov
roll
idivl
mov
sbb
or
push
call
mov
dec
cmc
add
pop
pcmpeqd
cmp
add
mov
ja
xorl
leave
dec
jnp
xor
add
outsb
mov
dec
inc
push
sbb
add
rcr
mov
shrl
adc
add
scas
mov
push
xchg
sbbl
ds
sbb
shrb
stos
mov
mov
push
jne
mov
add
push
ljmp
xor
add
lea
cmp
jne
lock
cmp
xor
pop
aaa
xor
sbb
mov
or
push
lret
pop
add
dec
ret
daa
fmull
pop
push
inc
repz
mov
and
sub
add
add
dec
or
xchg
xor
out
cmp
cld
mov
push
ret
mov
push
je
adc
stos
cmp
add
add
adc
jle
gs
and
addb
les
and
aaa
or
pop
rcrb
lea
adc
out
cmpsb
inc
push
xor
xchg
push
inc
pop
sub
jecxz
add
loope
dec
adc
fiaddl
stos
loopne
xchg
fs
mov
sbb
call
jmp
out
mov
ds
mov
call
es
and
inc
push
add
add
xor
mov
cwtl
mov
test
or
add
out
add
shlb
rcl
mov
mov
inc
dec
rolb
push
and
aas
popa
inc
rorl
adcb
stc
add
mov
loopne
xchg
jecxz
cmc
cmpsl
pop
push
sub
mov
lock
push
push
shll
or
sbb
mov
orb
mov
push
mov
inc
add
mov
or
das
test
nop
in
lds
aad
js
adc
xchg
sub
add
cmp
pop
pop
sub
movsb
and
or
es
or
pop
inc
subb
hlt
cli
pop
lock
mul
pop
add
int
rcrl
xchg
gs
pop
and
jo
adc
push
lret
out
jno
outsb
jo
adc
outsl
push
je
jae
insl
in
ja
or
inc
pop
test
or
xor
cmp
je
lahf
mov
dec
or
jb
rolb
sbb
inc
xchg
push
sete
sahf
push
pop
and
push
subl
ret
clc
or
fistpll
hlt
jae
movsbl
sbb
sarl
inc
mov
mov
or
jmp
cmp
pop
ds
call
bswap
push
das
add
lea
and
dec
inc
jmp
sub
dec
jmp
shl
or
add
inc
cmp
jl
cmpl
sbb
pop
or
cltd
sbbl
add
sar
add
hlt
clc
xor
mov
sub
cmp
jecxz
sbb
push
std
or
lret
shr
xor
mov
push
movsb
add
mov
dec
jne
fs
add
pop
pop
sahf
scas
push
ror
test
aas
xor
push
in
and
lret
mov
sub
dec
ljmp
add
jo
shld
lea
pop
in
dec
inc
adc
roll
pop
adcb
adc
push
sub
decl
pop
pop
jg
inc
ljmp
jle
sub
aas
mov
pop
mov
mov
mov
loopne
mov
mov
add
cmc
add
fldt
jo
or
cmp
push
aam
mov
aam
repnz
add
aaa
lahf
push
ret
or
std
adc
inc
inc
adc
push
pusha
insb
adc
jmp
insb
pop
pop
sbb
test
inc
xchg
or
int
xlat
or
mov
movsb
out
pop
or
xor
in
push
xor
lea
mov
repnz
pusha
and
popa
vmwrite
mov
xchg
jo
js
sbb
sbb
call
inc
and
lret
hlt
add
nop
je
add
adc
push
js
mov
mov
loopne
sahf
stos
push
pop
cmpsb
loop
push
push
outsb
rcrl
sbb
pop
repnz
jne
outsb
pop
test
dec
pop
add
pop
jb
jmp
push
lret
inc
jb
add
push
push
nop
call
aad
mov
push
and
add
jae
mov
cmpsl
mov
add
cs
pop
jle
js
sub
push
and
xchg
inc
fists
jmp
cmc
int3
pop
out
outsl
mov
ss
jns
lret
add
fadds
addl
ror
int3
sub
jle
mov
bound
jl
js
jmp
lea
mov
or
add
and
sar
rolb
pushl
sahf
cmp
lahf
mov
fmul
xchg
je
or
lds
cmpsl
xor
outsl
push
mov
adc
mov
and
mov
adc
test
mov
xor
sbb
das
cmp
mov
movsl
inc
mov
add
dec
js
loope
in
sbb
cli
mov
shl
test
mov
add
int3
dec
mov
cmc
shl
inc
mov
mov
add
mov
fisubl
inc
xchg
sbb
xlat
push
roll
je
das
insb
adc
pop
jb
mov
cmp
mov
fiaddl
push
mov
sbb
dec
jae
inc
mov
mov
xorb
push
std
jne
mov
fs
push
jmp
mov
daa
adc
add
pop
outsb
xor
push
and
pusha
movsl
push
cmp
pop
rolb
pop
mov
jae
aad
loope
cmp
xchg
lret
dec
int3
int3
add
adc
adc
push
cmp
xchg
sti
lcall
adc
mov
jl
add
je
dec
fdivr
adc
xorb
call
out
imul
mov
mov
adc
dec
or
sub
jle
les
jo
jmp
and
mov
or
mov
gs
push
xchg
sti
ss
inc
xor
aam
add
nop
jle
rclb
add
pop
push
fsubrs
or
dec
aam
test
leave
xchg
insb
mov
fiadds
inc
cmp
jl
cwtl
loopne
fdivrl
pop
or
sub
xchg
pushw
dec
push
sbb
pop
mov
sub
daa
movsbl
add
inc
lea
add
ss
adc
inc
loopne
jmp
mov
out
cmpsl
sub
pusha
orl
mov
test
sbb
lret
movb
test
or
sahf
inc
push
or
add
add
xchg
jno
addr16
shlb
cmp
or
push
loop
mov
inc
xchg
scas
dec
dec
push
roll
test
rclb
fstps
repz
loope
pop
test
aas
cld
inc
das
sub
dec
xchg
xor
psubb
lret
lock
cmpsl
pop
xor
adc
jge
and
xorl
pusha
sbb
add
sbb
dec
mov
add
sub
sbb
inc
ja
fstl
mov
mov
clc
rcrl
into
je
stos
fsts
or
mov
ljmp
daa
clc
pop
mov
mov
mov
push
add
nop
lods
rolb
adc
pop
sbb
js
or
loopne
das
bound
mov
or
push
fmull
stos
es
xor
decl
mov
sbb
or
sbb
mov
cmp
jl
pop
push
lahf
sub
mov
mov
lea
mov
sub
push
fbstp
push
incb
mov
add
add
or
mov
lods
inc
fisubl
and
or
icebp
mov
leave
push
xor
mov
inc
call
jne
pop
and
mov
mov
popa
cmc
ret
jb
and
into
in
push
cmp
pop
inc
mov
es
insb
into
push
sbb
pop
fs
add
jmp
inc
push
mov
rcrb
ja
in
push
and
lret
in
or
xor
dec
enter
push
xchg
or
inc
inc
shl
ds
pop
or
adc
es
inc
sahf
mov
cmp
fldcw
and
ja
dec
or
movsl
mov
jnp
or
mov
les
push
popa
imul
push
cmp
or
loop
sub
xor
popf
cmc
test
or
pop
and
adc
add
push
sbb
sub
fmuls
or
push
loopne
push
jp
daa
lret
push
shrl
xchg
arpl
andl
rcrb
mov
mov
xchg
cmp
mov
test
loopne
test
sbb
rcll
mov
stc
sub
clc
fisttps
ss
lea
enter
iret
jbe
mov
aad
lret
lcall
xor
add
rep
sub
insl
mov
dec
push
jl
push
sbb
adc
mov
adc
mov
inc
xor
jne
loope
js
xor
icebp
cmp
cs
scas
rcll
daa
push
fldcw
insb
dec
mov
roll
lods
out
push
push
push
cmp
pop
shlb
and
push
test
sar
or
push
mov
sbb
ret
and
enter
test
sbb
mov
mov
das
cmp
dec
mov
cltd
jnp
hlt
push
push
fistl
call
mov
lock
je
lea
pushf
movsb
mov
loop
push
imul
cwtl
or
sub
pushf
test
or
push
sub
sub
push
mov
adc
push
dec
jmp
jle
add
dec
push
jne
into
ja
pop
and
mov
test
cwtl
ret
inc
pop
fcomps
mov
add
add
ljmp
iret
add
adc
or
cmp
inc
mov
adc
push
notl
in
inc
punpckhwd
inc
adc
adc
and
loope
call
add
xor
shufps
dec
and
cmpsb
mov
push
mov
mov
int3
and
mov
mov
push
stos
pop
test
add
enter
xor
pop
add
mov
js
push
and
xor
xlat
inc
dec
dec
pop
add
rorb
fucomip
adc
outsb
and
fstl
nop
mov
std
adc
jo
sbb
ficoml
rcll
loopne
ss
and
dec
sti
pop
xchg
push
pusha
sub
add
lock
cmpl
pushf
ret
sarb
stos
jle
add
pop
inc
xchg
scas
add
push
aam
push
sub
mov
push
add
push
adc
mov
cmpsb
adc
xchg
jecxz
out
fdivl
mov
je
inc
psllw
mov
jp
cmp
in
xchg
inc
and
pop
and
maxps
std
push
pusha
mov
mov
aas
ret
fmuls
lea
cs
dec
fwait
movl
aas
and
in
es
rolb
sarb
cmp
aas
xor
fcompl
jecxz
outsl
pop
fdivl
mov
cmp
adc
inc
add
sbb
imul
sbb
mov
push
insb
or
sub
add
dec
and
sub
in
or
push
pop
je
adc
inc
sti
test
mov
xchg
mov
int3
push
cs
dec
popf
pop
push
or
or
adc
add
arpl
adcb
push
enter
lcall
xchg
into
xor
push
loope
jmp
jmp
sub
imul
cmove
inc
dec
imul
or
mov
and
dec
jmp
loope
xchg
and
dec
xchg
sbb
fsubr
and
mov
adc
mov
xchg
sbb
gs
lcall
xor
push
push
mov
xchg
data16
mov
or
add
xchg
jne
test
xor
push
icebp
aas
dec
lahf
sbb
push
pushl
push
adc
orb
xchg
pop
cmp
jbe
push
loopne
ja
hlt
sub
cmp
pop
push
sbb
and
fldt
sub
adc
xor
lret
ds
cmpsl
or
rolb
push
clc
fstl
xor
push
xor
sbb
pop
clc
jne
mov
push
cmp
adc
rol
gs
cmp
pop
mov
leave
xchg
movsl
adc
and
cld
out
xchg
or
rclb
nop
sbb
jmp
push
insl
adc
cmp
sbb
fs
ss
adc
push
push
call
cmp
sbb
xchg
and
hlt
in
add
xor
and
call
mov
je
or
ret
test
push
pop
pop
jns
add
xchg
inc
push
mov
jae
adc
jmp
add
pop
push
icebp
mov
sbb
testl
data16
xchg
mov
bound
inc
fisttpl
xchg
cmp
push
in
dec
push
mov
sbb
pop
adc
xchg
mov
push
cmp
andl
jns
mov
fs
xor
and
and
sbb
cvttps2pi
push
add
cltd
jo
daa
out
mov
sbb
inc
call
mov
cwtl
jl
and
push
in
pusha
popa
jae
shlb
inc
pop
fildll
sahf
jmp
cmp
cmp
es
sti
icebp
into
adc
xchg
iret
andb
pop
sub
mov
shlb
sub
ds
push
mov
cmp
test
push
jo
in
ret
aaa
inc
lcall
lret
mov
aas
jae
sub
xchg
fxch
adc
lea
adcb
sbb
ficoms
push
or
inc
sub
inc
mov
add
xchg
sub
addr16
push
sahf
cmpsb
dec
xor
lahf
andb
popf
and
sbb
rcll
ss
and
xchg
test
or
mov
or
test
stos
xchg
lcall
adc
cmp
int3
mov
pop
orl
mov
push
mov
outsb
shlb
or
movsl
push
xchg
fidivrs
push
aaa
testl
sbb
mov
cmpsb
inc
rorl
add
sbb
mov
fnstsw
aam
add
jnp
mov
dec
enter
mov
clc
loopne
inc
xchg
and
mov
adc
test
stos
sub
adc
test
jne
jge
je
daa
call
and
fistl
mov
jb
mov
aam
adc
xchg
pop
neg
fcompl
dec
jnp
push
lods
xchg
lods
aam
inc
sub
ret
ret
xchg
in
add
and
in
ret
fisubs
fcomps
cmp
jne
test
outsb
stos
insb
cmp
jb
mov
cwtl
mov
or
mov
add
cmp
adc
xchg
pop
add
pop
pop
cs
inc
xchg
or
or
int3
ret
inc
subl
aaa
lahf
cmp
or
sbb
sarl
adc
stc
pushl
sub
dec
push
push
ss
je
jecxz
jle
lds
cltd
fcoml
and
mov
loopne
mov
popa
das
jmp
add
hlt
call
xchg
sbb
or
mov
mov
les
outsb
mov
lea
xchg
or
int3
iret
movsb
dec
nop
lock
cli
xor
sbb
pop
cwtl
movsb
das
cld
cmp
mov
push
stos
or
jo
movsl
and
outsb
lock
imul
push
loope
insb
and
or
adc
sbb
inc
aaa
popa
dec
fs
push
ret
lods
push
pusha
dec
jnp
push
dec
je
add
push
sbb
lock
stos
cmpsl
insl
pop
mov
mov
push
inc
ret
adc
adc
arpl
sub
repnz
fisubrs
sub
addl
mov
mov
mov
jle
adc
das
je
or
mov
cmp
addr16
je
scas
shl
cmp
jne
mov
sbb
add
pop
dec
lea
mov
mov
pop
dec
xor
ret
in
push
cmpsb
push
jmp
testb
je
testl
jbe
sbb
cld
cmp
pop
push
loopne
pop
lret
inc
cmp
jb
mov
je
sub
inc
jmp
inc
and
inc
push
xor
or
cmp
push
sbb
sbb
outsb
js
hlt
test
jp
sbb
add
adc
into
jo
xchg
loopne
mov
test
add
in
inc
jl
punpcklbw
xor
cld
inc
pop
push
jl
mov
push
jne
push
sti
cmp
outsb
hlt
cmp
mov
cmp
bound
pop
les
lods
dec
or
pop
sub
mov
test
in
sub
xor
xchg
stos
sub
gs
jge
sub
fcom
add
inc
cld
rclb
fldenv
addr16
arpl
jne
mov
and
jno
inc
movzwl
data16
pop
mov
fneni(8087
cmpl
push
sub
pop
shl
add
jmp
pushf
aas
lret
mov
cmpsb
and
data16
js
fs
jne
push
jo
test
mov
lock
sub
mov
or
push
outsb
pop
jae
mov
jmp
dec
shlb
mov
out
cmpsb
sub
or
mov
mov
mov
ss
push
add
push
loopne
push
movq
xchg
inc
jg
or
jge
scas
or
xor
and
es
fsubrl
fsubrl
jle
sub
and
pop
or
jl
or
adc
popa
adc
test
add
aam
cmp
jbe
and
ja
sbb
test
xchg
and
add
je,pn
dec
or
and
bound
sub
jb
clc
add
push
xor
xor
js
mov
movb
inc
in
adc
rolb
and
xchg
add
pop
ret
mov
push
mov
inc
and
daa
dec
add
cmp
fsubr
add
mov
add
fs
add
sbb
lcall
jbe
shrl
mov
sub
inc
popf
push
mov
or
in
cmp
data16
jmp
orb
mov
dec
adc
orb
shll
mov
mov
mov
pop
ret
add
divl
jne
dec
mov
dec
pop
dec
mov
inc
sahf
rorb
push
push
fs
pop
imul
add
lods
jns
test
xchg
mov
jg,pn
fnstsw
xchg
scas
pop
push
mov
in
jmp
cld
addl
push
xchg
mov
cmp
push
cli
jecxz
add
mov
into
inc
jo
sbb
cmp
mov
push
push
add
imul
cwtl
fbstp
xchg
mov
xor
push
mov
inc
and
mov
lock
pop
lea
add
sbb
shll
xor
cmp
cs
push
andl
loopne
rclb
cltd
aaa
jp
cwtl
pushf
leave
fiaddl
or
es
cmp
dec
adc
dec
scas
or
hlt
out
pop
inc
std
pop
push
movl
jle
pop
mov
xor
push
test
mov
lahf
jbe
adc
pop
mov
push
ss
sti
sbb
inc
xchg
push
mov
dec
pop
inc
loopne
in
mov
add
or
mov
or
mov
lds
cwtl
sbb
xchg
jo
pop
cmp
popf
int
cmp
push
inc
test
es
shll
push
outsb
je
pushl
out
or
mov
pop
lea
push
fnstsw
outsb
fsubr
jae
pop
push
sbb
ret
scas
push
sub
mov
dec
inc
add
cmp
pop
push
mov
push
dec
lea
push
rcrb
cltd
adc
enter
mov
fcmovbe
pop
xor
and
mov
fdiv
cmp
push
gs
add
sbb
push
ja
inc
fwait
cmp
shlb
add
pop
nop
push
out
loope
sub
je
cmpsl
popf
test
sbb
push
or
xchg
ror
cmc
add
loopne
sbb
add
dec
xlat
xchg
sbb
sbb
je
test
dec
push
inc
inc
nop
subb
push
fs
fisttpl
push
shll
adc
pop
dec
sbb
pop
xor
popf
or
mov
jo
bnd
or
or
fdivrs
icebp
or
inc
add
add
jl
add
pusha
sbb
fimuls
addl
inc
sub
js
adc
mov
sbb
add
add
sahf
mov
cli
cmp
je
push
aaa
mov
dec
mov
pop
add
push
add
add
call
xor
or
xor
mov
add
cwtl
aam
fidivrs
jp
and
ret
or
sti
pusha
jb
loopne
iret
in
push
decl
sarl
jbe
rcl
scas
pcmpgtd
push
rorb
fisttpll
movsb
mov
mov
jp
sbb
push
fs
push
mull
out
inc
jo
aas
and
or
push
ljmp
push
clc
mov
mov
iret
xor
sti
sub
mulb
arpl
push
movb
push
popf
test
fndisi(8087
mov
addl
addb
xchg
xchg
add
xor
lea
ret
push
push
scas
or
push
pop
insb
mov
fstpl
pusha
cmpsb
sbb
pop
or
cmp
les
in
mov
xor
push
aam
subb
sub
fiadds
loop
idivl
decb
loopne
fmul
lods
or
pop
sub
pusha
orl
imul
ficomps
add
adc
pop
mov
leave
testl
xor
ret
cwtl
cmpl
dec
push
cmp
pop
adc
cld
int3
push
push
lret
lods
jo
and
jne
sub
dec
jecxz
ret
js
mov
jge
adc
add
das
xchg
fcmovbe
rclb
loopne
xchg
add
mov
imul
cmpsl
xor
add
inc
fs
enter
mov
or
xchg
lret
jmp
bound
and
out
jno
fstps
cmp
mov
jo
outsb
sbb
inc
mov
sbb
jne
mov
mov
jne
lock
sbb
jp
inc
rolb
dec
jno
mov
jl
push
stos
push
xor
ds
test
dec
cmp
adc
push
adc
mov
pop
repnz
int
call
jnp
pop
mov
mov
mov
dec
mov
jmp
cmpsl
lods
fwait
cwtl
jl
or
xchg
fdivrs
mov
dec
outsb
out
push
aas
je
cmp
push
pop
jne
fcmovnb
push
sbb
aam
cmpsl
jne
push
pop
inc
cmp
jne
pop
mov
sbb
jecxz
test
and
scas
insl
in
xor
leave
xchg
cmp
fbstp
jmp
sbb
sub
xor
mov
mov
gs
mov
or
inc
hlt
add
mov
pop
cmp
jo
fldl
add
je
in
lock
in
sub
add
je
sti
push
fs
jmp
div
in
fdivrs
outsb
jmp
pusha
mov
jae
scas
mov
out
sub
and
sbb
xor
mov
xchg
outsb
decl
repz
sub
decb
adc
cmpl
andb
mov
xchg
lock
orl
dec
jae
or
fs
mov
or
inc
out
cmpb
decb
or
push
mov
ret
push
inc
lods
or
add
lahf
pop
cmp
les
push
fcoms
push
mov
lcall
sbb
repz
movsl
aas
inc
sbb
arpl
add
pop
fstpl
mov
addl
aas
push
jno
jb
sbb
xlat
push
push
push
cs
lret
in
pop
pop
pop
pop
fdivl
pop
pusha
pusha
or
jbe
mov
adc
popa
mov
xchg
cmp
add
add
mov
insl
or
js
cld
test
outsb
mov
push
lods
xchg
icebp
jge
mov
adc
pop
xor
clc
jmp
push
rcll
lret
mov
mov
sbb
adc
lods
xchg
xchg
push
in
cmp
sbb
push
or
inc
adc
int
adc
movsl
insl
sub
in
mov
jle
insb
or
call
cs
add
daa
mov
lret
loope
xor
es
repnz
fiaddl
sbb
ljmp
fisubrs
loopne
or
inc
outsb
pop
cli
movsl
outsb
loop
jp
push
pop
jmp
or
stos
mov
je
into
or
add
or
sti
and
add
sub
test
frstor
or
orb
push
gs
stos
lods
jo
je
lock
push
sub
test
lock
mov
ss
fwait
push
xor
sti
xor
sti
pop
xchg
test
addr16
pop
push
mov
mov
inc
jae
sub
mov
pop
pop
xchg
cmpsl
xchg
inc
cmp
dec
inc
test
cmp
mov
cmp
je
or
and
push
mov
cmp
mov
dec
add
dec
add
ss
xor
dec
in
in
and
or
je
add
sbb
mov
adc
push
add
cmpb
sbb
sbb
sbb
mov
cmp
and
shl
je
push
pop
lods
pop
bound
cmp
cmp
mov
sbb
push
sbb
ret
cmp
push
adc
in
mov
dec
sbb
sub
sbb
adc
ds
andb
movb
andl
fdivl
mov
cmp
jne
or
jl
push
rcrb
add
cmp
pop
lcall
sbb
loope
test
test
je
sub
out
or
daa
cs
jae
js
lods
fcmovnb
push
sbb
and
add
and
mov
adc
sbb
xchg
daa
mov
push
sarb
insb
cmp
mov
hlt
in
subb
or
add
insb
ret
mov
aam
jno
cmpsl
dec
cltd
mov
mov
hlt
jge
je
divb
ds
xorl
lea
inc
add
jo
addb
adc
mov
push
add
xchg
inc
cmp
out
push
xchg
rorl
inc
hlt
mov
cmp
clc
lock
hlt
aad
arpl
sbb
mov
mov
mov
loop
inc
inc
mov
addl
mov
push
push
hlt
mov
or
pop
enter
pop
jb
and
into
jno
add
scas
daa
add
jecxz
mov
sti
mov
in
mov
and
add
subb
cli
pop
jg
sar
push
popa
orb
lea
xor
cmp
orl
int
and
push
fcomi
mov
cmpl
adc
adc
mov
push
rolb
inc
rcll
hlt
test
add
pop
xchg
das
je
push
or
mov
add
and
loope
mov
mov
xor
jb
pusha
scas
xchg
push
cmpb
pop
lods
gs
jns
adc
add
filds
shrb
add
movsw
xchg
jo
out
push
call
test
add
or
sbb
cld
mov
sub
idivl
fdivrs
dec
push
in
push
adc
pop
sbb
mov
sbb
push
fcmovnbe
nop
ja
in
push
test
pusha
es
sbbb
adc
bound
and
xchg
mov
mov
jge
testl
sub
push
push
out
adc
push
popa
cmp
adc
add
dec
push
adc
ljmp
test
nop
inc
bound
mov
loope
jmp
mov
adc
sbb
sbb
mov
orb
add
mov
icebp
je
mov
or
dec
jne
jns
jo
adc
add
jmp
jb
dec
inc
in
sbb
lahf
or
jg
jbe
push
sbb
ja
jmp
mov
xchg
in
xchg
cmp
cmpl
test
cld
xor
mov
adc
mov
inc
push
ds
not
es
and
call
add
jne
and
add
and
push
shlb
add
or
call
push
out
mov
and
enter
sbb
dec
jecxz
xlat
push
fwait
mov
scas
fsubrp
push
mov
xchg
sbb
fs
popa
mov
cmc
daa
inc
jg
cmp
cmc
das
pusha
inc
cmp
jl
lcall
orb
aam
sbb
add
xchg
test
lds
mov
mov
add
sar
pop
insb
movl
sbb
sbb
stos
xchg
roll
push
xchg
shrb
sub
testb
pop
add
xor
add
sub
sbb
and
or
rep
ret
lods
sbb
jg
fadds
cmp
lods
orb
jmp
or
dec
call
clc
inc
push
xor
jp
jge
mov
and
inc
ds
inc
ja
pop
lret
push
push
xor
pop
jbe
mov
jne
jmp
push
dec
or
add
xchg
mov
mov
es
and
mov
sbb
dec
lds
aas
ret
or
pop
rclb
je
sbb
mov
ret
or
sbb
xchg
mov
mov
aas
in
enter
out
sbb
xor
shlb
lods
or
arpl
push
add
enter
inc
add
and
pusha
es
jle
pop
cmp
xlat
mov
in
sub
jae
sbb
fs
or
popa
pop
leave
sub
mov
mov
cmp
mov
or
loopne
adc
icebp
addb
sbb
ja
and
loope
imulb
jnp
and
push
loopne
add
mov
cmp
repnz
xlat
mov
ret
test
or
push
mov
jle
jne
push
mov
add
dec
nop
push
add
fiaddl
adc
add
out
mov
iret
pop
xchg
fiaddl
ret
pop
ret
pushl
adcb
sbb
out
pop
ja
out
xor
jo
movb
cltd
jo
lock
or
jo
repnz
push
pushf
pop
inc
cmp
push
mov
loopne
push
sub
adc
pop
sbb
push
inc
inc
data16
ret
testb
int3
mov
mov
pusha
push
dec
xor
mov
mov
inc
dec
mov
xor
or
imul
push
mov
inc
inc
cmp
inc
sub
mov
sahf
jns
dec
popa
push
sbb
call
cmovb
cmp
loopne
out
or
mov
sub
or
bound
rorb
sub
mov
push
mov
cld
jge
mov
mov
and
push
cmpsl
mov
inc
sub
stos
fiaddl
add
cmpsb
or
js
mov
lods
pop
js
push
adc
lret
loopne
sub
push
and
add
xchg
xlat
shrl
data16
nop
hlt
push
leave
jo
push
repnz
adc
dec
jae
fldenv
outsl
adcb
dec
xchg
or
adc
sub
iret
pop
jne
negl
adc
cmp
or
dec
sahf
dec
faddp
addl
incl
adc
aad
adc
cmp
in
mov
mov
and
pop
sbb
xchg
add
push
loope
lret
adc
mov
hlt
add
inc
sub
testb
adc
ret
xchg
mov
add
xchg
bound
add
push
adc
enter
imul
push
xor
cmp
das
mov
fcomps
mov
faddl
aam
mov
test
inc
sbb
mov
mov
arpl
add
cmp
inc
xor
mov
lcall
lock
movsl
cmp
push
push
mov
jnp
jmp
cmp
mov
pop
sub
bnd
fildll
xor
adc
test
mov
test
ss
ret
cmp
sbb
arpl
loope
push
lods
or
aam
arpl
cmp
jnp
test
mov
xor
or
std
cmp
inc
mov
test
mov
fcomps
pop
sub
xor
fsubl
xor
mov
mov
sbb
jne
rolb
out
mov
shl
or
push
sbb
jge
mov
or
pop
mov
shll
clc
or
mov
and
shll
inc
push
and
push
pop
daa
or
inc
dec
movsl
dec
xchg
addl
icebp
cmp
imul
sbb
inc
sbb
push
and
mov
push
push
pop
adc
mov
les
or
xchg
test
ficomps
fnstsw
push
push
add
lret
mov
jp
xlat
mov
loopne
pop
mov
or
inc
inc
sbb
and
and
jl
and
sub
call
dec
fldt
dec
add
cmpsb
xchg
in
fsts
lock
adc
mov
lea
in
xchg
jnp
inc
cmp
dec
mov
mov
adc
and
test
sbb
xchg
mov
xchg
sbb
not
cs
and
add
sub
mov
aam
mov
and
push
or
add
adc
nop
aam
jae
hlt
jnp
lods
scas
push
push
adc
js
les
adc
and
push
sbb
add
xchg
inc
gs
lret
sbb
mov
sbb
mov
cmp
shl
sbbl
js
push
jge
adc
mov
add
rcll
jbe
mov
int
mov
das
insb
lods
xchg
hlt
push
lea
mov
push
mov
test
loopne
rcll
cmpsl
nop
fmull
out
cmpl
lret
adc
push
mov
adc
cmpsb
call
inc
in
mov
cmpl
jne
adc
or
cmp
and
jnp
ja
int3
mov
and
or
or
insl
mov
pushf
push
xchg
fs
cmpsl
ljmp
dec
lods
or
bound
inc
shlb
loop
or
push
ret
xor
idiv
mov
lret
cmp
inc
cltd
nop
or
sbb
cwtl
xchg
xchg
add
mov
and
sub
push
push
sub
xchg
lods
add
loopne
jne
sub
push
cli
add
insb
or
push
jg
lret
je
cmp
xchg
lock
push
xchg
mov
lods
scas
jge
jmp
xchg
mov
es
and
cmp
int3
add
mov
sub
push
push
data16
shlb
hlt
xchg
pmaxsw
jbe
adc
jmp
icebp
std
insb
data16
pop
add
aas
and
inc
loopne
mov
sbb
xchg
adc
add
xor
pmaddwd
push
sub
pop
sahf
pop
popa
add
jge
jbe
fdivl
ret
mov
nop
mov
add
or
add
push
cmp
jbe
pusha
adc
shrl
push
dec
adc
mov
pushl
out
orl
mov
cmp
jne
cmp
lcall
jmp
cld
push
outsb
mov
xor
loopne
sbb
dec
inc
pop
bound
movsb
lret
mov
cmp
cmc
mov
add
hlt
inc
lods
in
movsb
mov
add
inc
mov
pop
nop
xchg
loopne,pn
add
hlt
daa
pop
ja
daa
mov
incl
cmp
xor
popa
dec
pop
cmpsl
jge
or
dec
cmpl
mov
iret
jmp
mov
hlt
adc
cld
xchg
cmp
outsb
and
or
lock
or
pop
cmpsl
popf
dec
btcl
dec
add
fistpl
loop
cltd
imul
push
repz
sbb
fldcw
mov
dec
cmp
cmp
paddq
cmpl
pusha
in
test
loope
stos
fistl
cmc
jnp
fiadds
and
cmp
fisubl
mov
pop
js
mov
sub
jb
popa
xchg
adc
out
xchg
jne
cmc
test
aam
xor
jne
jge
push
inc
cmp
popf
pop
and
lcall
or
mov
and
popl
inc
mov
std
out
push
pusha
cwtl
add
jle
fcoms
incb
sub
cmp
rcrb
adc
push
pop
jbe
sub
add
aaa
push
fiaddl
cs
movsb
push
pop
or
add
lds
xchg
push
mov
add
adc
shlb
cmp
jb
mov
adc
sarl
push
adc
sub
daa
lods
cmpsb
jbe
sbb
mov
jge
sub
lods
cltd
int3
cmpl
jo
fwait
inc
dec
cwtl
jmp
cltd
add
jl
xor
hlt
jne
je
test
sub
add
out
xor
mov
movsl
dec
add
add
add
pop
into
aam
rcrl
in
xor
jge
rclb
sbb
pop
lret
push
sbb
xchg
push
xchg
out
cmp
push
push
cld
jne
ret
andl
push
js
sbb
xchg
pop
adc
add
jg
mov
xchg
adc
push
dec
mov
ret
nop
and
addb
cmpsl
jmp
fcmovnu
xchg
adc
xor
xor
or
jmp
out
mov
mov
mov
out
cmp
ss
ds
mov
addl
cmp
sub
js
sbb
clc
mov
pusha
sub
aas
mov
push
inc
int
enter
adc
cli
adc
and
enter
dec
es
xor
gs
adc
adc
xor
orl
push
sbb
or
stos
and
shll
addb
pop
das
outsb
loop
enter
push
mov
push
push
dec
cli
cmpw
je
cmp
push
or
icebp
shrb
inc
daa
or
dec
std
or
xor
push
aam
lret
lods
lods
sub
xchg
jl
testb
fsubrs
or
lret
les
inc
mov
test
lret
push
sbb
jae
add
jl
inc
and
das
fmull
cmp
push
sub
cld
cmp
bound
add
or
call
movsb
addb
imul
lea
sub
fmuls
dec
sbb
shlb
or
adc
dec
pop
not
imul
aad
fcoml
and
or
insl
lret
mov
xor
add
xor
dec
mov
cld
imul
jne
sub
cmp
cmp
xor
ret
fucom
sahf
movb
mov
lods
mov
inc
std
and
pop
pop
add
lock
aas
or
pushf
jmp
mov
lea
mov
add
add
inc
cli
xchg
xchg
stos
fcoms
push
mov
movsb
test
cmc
sbb
inc
pusha
imul
test
aam
fildll
nop
push
mov
inc
or
test
push
js
mov
pop
mov
fnsave
testb
adc
lea
xchg
push
fwait
or
mov
or
adc
add
xor
inc
mov
push
movb
xor
pop
jne
pop
into
fimuls
test
in
jg
inc
fwait
push
mov
push
mov
mov
add
jmp
or
stos
and
insb
cmp
test
xor
xor
cmp
test
cs
pop
dec
cld
pop
js
add
iret
pop
xchg
repnz
pop
ljmp
icebp
add
mov
dec
push
inc
xchg
adc
dec
dec
push
inc
add
xchg
arpl
sbb
add
loope
sbb
push
push
cmp
pop
and
mov
stc
testl
add
fiaddl
test
cmc
scas
mov
sbb
ret
shll
mov
neg
nop
xor
mov
mov
stos
test
push
mov
aam
rorb
jo
test
and
add
add
sbb
jno
mov
or
mov
xor
mov
jmp
push
mov
lea
adc
addb
out
leave
test
hlt
sub
mov
cld
mov
rcpps
lcall
or
lea
push
pop
cmp
nop
popa
jmp
cmp
pop
xor
or
jno
mov
inc
test
pushf
cmc
pop
adc
repz
add
ret
jg
adc
roll
push
push
mov
cld
lods
jmp
cmpl
push
mov
jno
cmp
movsl
adc
or
xchg
cmp
cmp
adc
fmuls
lock
outsl
pop
stos
xor
mov
adcb
jg
clc
adc
jbe
xchg
push
mov
xor
mov
and
and
pop
fs
mov
jle
out
sub
std
cmp
psubw
mov
popa
pop
sub
test
pop
add
adc
shrb
insl
ljmp
add
xor
scas
xchg
push
inc
push
and
das
movsl
xor
and
jne
les
or
add
pop
in
rcr
test
adc
mov
rclb
loope
sbb
iret
pop
xchg
bound
xor
fiadds
dec
push
lds
mov
mov
or
std
dec
icebp
lods
mov
hlt
test
cmp
sub
xchg
mov
rclb
scas
repnz
jge
mov
mov
pop
imul
popa
push
stos
add
lods
les
andl
lea
pop
fistl
fistpll
adc
cmp
mov
xchg
xor
mov
mov
or
push
cltd
pop
push
test
push
push
popf
push
mov
mov
sub
jo
pop
add
xor
mov
sub
mov
bound
add
dec
jg
leave
inc
xchg
push
subps
mov
mov
lock
in
clc
cmp
jne
ljmp
push
inc
mov
mov
sti
sub
ret
hlt
jb
je
and
and
xor
sbb
or
mov
insl
fisttpl
add
lock
adc
sbb
push
loopne
adcb
xchg
sbbb
cltd
inc
add
xchg
cmp
and
out
ret
rorb
andl
std
int3
shll
repnz
inc
or
xchg
adc
xchg
pop
rolb
add
xor
mov
sub
xor
xor
sub
and
or
inc
sub
shr
enter
inc
orl
mov
jne
add
cltd
iret
pop
movsl
pop
sub
mov
add
lret
adc
call
cld
jmp
cmpl
sub
shll
and
nop
push
xor
aam
xchg
je
aaa
push
mov
in
fmull
gs
jmp
xor
xor
int3
mov
add
add
sub
subb
test
fs
sarb
ljmp
test
mov
inc
mov
lcall
jo
hlt
xchg
and
pop
and
test
mov
pusha
add
cld
push
inc
shl
adc
xchg
cmpl
cmp
sub
mov
add
std
fimuls
out
add
jb
cmpsl
add
push
or
pop
roll
xchg
pop
sarl
sti
add
comiss
loopne
lods
pop
add
add
rclb
push
movsl
mov
insb
mov
pop
test
or
mov
pop
add
aaa
add
cmp
dec
jb
call
and
dec
mov
and
mov
pop
pop
cltd
jecxz
and
xchg
or
sub
addb
in
push
je
cwtl
xchg
out
lcall
cmp
push
and
nop
mov
push
iret
xchg
movsl
mov
js
add
stc
xchg
lds
nop
out
xchg
inc
outsb
or
test
xchg
add
shrl
and
es
sub
mov
or
dec
test
iret
pop
dec
ja
fnstenv
add
mov
cmp
je
cmp
xchg
insl
outsb
or
pushf
sbb
mov
sbbl
sub
inc
sub
mov
cmp
es
and
add
cmp
pop
adc
and
inc
nop
add
test
adc
test
je
loop
cmp
or
cmpl
int3
push
or
dec
sbb
xchg
push
pushf
mov
inc
sbb
jae
push
xchg
push
sub
or
add
ret
sbb
sbb
inc
ja
jmp
in
xchg
or
fdivrs
pop
xor
xchg
or
test
or
pop
xorb
inc
adc
lahf
rclb
ret
lock
sbb
ja
testl
je
sbb
sbb
push
push
cmp
adc
xlat
lret
ds
mov
mov
jbe,pn
or
je
test
inc
imul
jne
mov
fnstenv
push
push
test
cmp
dec
or
xor
sub
push
loopne
xor
stos
es
test
rclb
and
mov
xchg
mov
hlt
sbb
scas
xchg
hlt
jns
or
lds
cli
adc
hlt
sbb
add
add
cmp
call
rclb
or
lret
fstps
add
fcoml
pop
xchg
sub
test
adc
loopne
sbb
jne
mov
mov
shll
test
fmul
dec
inc
sbb
or
scas
out
inc
jecxz
xlat
or
inc
clc
adc
out
push
cmp
pop
mov
sbb
cltd
lahf
or
jecxz
lea
popa
adc
pop
js
xchg
lret
pop
pusha
push
pop
push
xchg
sub
dec
push
hlt
neg
sbb
and
bnd
std
fisubs
movzwl
push
adc
insb
les
out
sbb
pusha
movsl
test
lahf
xor
js
jp
add
add
add
movsl
mov
dec
out
inc
jg
addr16
and
lock
fildl
fcmovnu
cmp
insb
fldt
adc
mov
lcall
aam
add
cmpl
jne
cmp
jbe
or
jne
push
dec
add
add
jle
sbb
add
gs
mov
ds
data16
push
xchg
out
push
fcmovnu
popa
inc
cmc
jmp
add
jl
add
test
push
pop
or
sbb
fbstp
jp
ja
cwtl
sbb
dec
sub
cs
pop
mov
cmp
or
push
bound
lea
push
mov
cmovns
pop
jl
push
dec
out
mov
in
inc
jne
pop
cmpsb
js
and
sub
add
lods
and
loope,pn
cltd
xorb
adc
mov
jno
jo
or
repz
iret
mov
and
dec
add
mov
and
dec
sub
notb
dec
add
mov
fnstenv
inc
adc
inc
adc
imul
push
mov
adc
andl
leave
cmp
sbb
andl
nop
aam
ja
pop
sub
pop
cmp
rolb
sbb
daa
inc
les
aas
arpl
stos
push
mov
ljmp
mov
mov
sbb
pop
xor
or
cmpl
add
call
je
push
mov
sub
out
roll
cmp
push
inc
cld
lds
push
xor
and
fwait
add
cmc
push
repz
pop
mov
lock
aad
inc
or
repnz
iret
mov
xchg
xchg
xor
test
clc
xchg
ja
fbld
arpl
mov
jb
push
leave
ror
jae
cmp
push
xchg
addb
orl
jae
xor
adc
in
and
dec
mov
insl
sbb
cmp
or
jb
push
jp
inc
pusha
jae
and
stc
lcall
jbe
add
sbb
jp
adc
dec
sub
cmpl
je
cmp
in
or
int3
add
jp
cli
les
lods
push
push
pop
loopne
mov
add
nop
mov
leave
dec
jge
mov
add
pushf
add
mov
inc
in
add
adc
push
hlt
mov
lret
js
popf
enter
repnz
and
xchg
aam
or
ds
mov
add
fimuls
je
jmp
inc
sahf
shll
push
jp
mov
imul
fxtract
push
into
push
pop
adc
test
dec
add
testl
mov
movsl
fsubl
lods
inc
add
jp
jmp
gs
mov
jecxz
call
mov
pop
arpl
test
sbb
xor
inc
scas
xor
and
add
rorl
dec
dec
pop
xlat
repz
push
fidivrl
and
xorb
push
jmp
mov
and
mov
and
push
and
inc
pop
xor
xchg
roll
std
and
sbb
inc
sub
pop
mov
sbb
push
xchg
pop
push
and
test
mov
xchg
loop
lds
mov
inc
pop
sub
or
jmp
xor
sti
clc
or
mov
in
sub
mov
inc
testb
mov
fcomps
add
and
adcb
movsl
sbb
xchg
xchg
mov
jo
cmp
push
or
xorb
mov
cmc
cmp
jge
mov
and
pushf
fucom
dec
fdivrs
cmp
push
popf
push
mov
lret
mov
dec
pop
in
add
in
rorb
std
mov
sub
sahf
roll
add
pop
mov
or
movd
sbb
mov
xchg
rcrl
xchg
cmp
jb
in
into
sbb
mov
mov
sub
shrl
in
mov
add
lea
fistps
or
test
test
aaa
mov
add
popf
pushf
xor
xor
xor
sub
cmp
xchg
out
in
xor
and
pop
je
mov
js
adc
push
jae
add
je
ja
cmpb
jne
mov
jne
out
xor
dec
gs
or
add
lret
lea
add
add
jge
mov
lea
dec
dec
sbb
pop
push
mov
or
dec
mov
das
or
xor
sbb
push
scas
fdivrl
inc
xchg
xor
jae
leave
jmp
push
inc
sub
dec
push
or
enter
dec
ja
push
xchg
sub
sbb
push
loope
push
sub
add
add
mov
dec
jmp
sbb
cmc
add
lret
pop
push
jnp
lds
push
add
sub
sub
xor
pushl
and
add
adc
pop
jo
adc
jmp
mov
inc
mov
mov
mov
filds
pop
les
inc
pusha
imul
lret
aad
cltd
pop
push
lea
cmp
jle
pop
lret
movsl
sub
popf
fmuls
stos
jo
or
popf
ss
adc
fisttps
jnp
nop
and
or
cmp
add
mov
and
add
xor
push
jno
in
arpl
pop
xchg
dec
inc
outsb
or
mov
adc
mov
add
scas
push
mov
test
shr
lea
dec
or
lahf
inc
lock
sub
movsl
rcll
cmp
pop
push
lcall
je
xchg
or
inc
and
data16
add
aam
add
xchg
mov
cmp
fstl
jns
adc
pop
or
mov
je
xor
mov
dec
add
jmp
adc
orl
shl
sub
or
std
incl
add
add
es
add
outsb
xchg
mov
xor
imul
xor
ror
xor
push
in
lret
mov
sub
or
lret
xchg
fisttpll
jnp
bnd
mov
lcall
pop
cmp
cmpb
ret
push
jae
lea
push
sub
sbb
sbb
push
lcall
pusha
shl
push
inc
dec
pop
ret
mov
mov
ret
loope
pop
add
fdiv
loopne
dec
sarl
push
leave
pusha
or
mov
fdivl
cmpb
xor
fldenv
add
out
push
cmp
cmp
sub
inc
in
nop
or
lret
sbb
jmp
push
mov
pop
add
cmp
or
lcall
fdivs
sub
sub
out
fiadds
test
add
out
or
daa
jmp
imulb
negb
imulb
push
jne
dec
in
rorl
dec
mov
fdivrl
and
ds
adc
jne
mov
jbe
mov
sub
ss
rorb
jb
add
push
test
lods
aas
adc
lock
lea
jbe
shll
mov
lret
mov
pushf
mov
mov
int3
pop
xlat
push
scas
mov
push
pop
or
cmp
jmp
push
inc
pop
pop
stos
add
mov
cwtl
mov
mov
adc
push
dec
add
out
std
sub
int
or
dec
ret
scas
divl
jge
cmp
outsb
fstpt
xchg
cmp
xchg
inc
mov
inc
and
mov
cmp
jb
inc
xchg
fsubrs
faddl
add
jo
sahf
push
scas
jnp
insl
mov
cmp
sub
push
inc
or
add
stos
adc
es
imul
sub
add
sbb
sbb
sahf
mov
and
xchg
clc
jge
out
cli
xor
std
cmc
imul
pop
adc
aam
insb
out
stc
dec
in
adc
push
arpl
addr16
imul
imul
aaa
add
imull
movsl
sub
repnz
and
lea
xor
loopne
adcb
xor
inc
push
stc
mov
std
push
outsl
or
xor
mov
and
adc
loop
shll
arpl
mov
ljmp
lds
cmp
cmp
jmp
or
neg
or
adc
sub
sbb
loopne
cmp
sbb
stos
nop
shrb
psubb
push
addr16
mov
mov
stc
xchg
or
push
cmp
push
sub
out
adc
into
cli
cs
jbe
cmp
popa
pop
sbb
ret
dec
sub
daa
pusha
std
dec
cmpl
pushl
orb
lods
dec
loop
push
lret
xchg
icebp
pushf
mov
jo
adcl
xchg
pop
imul
rorb
mov
pop
adc
add
outsb
lea
daa
dec
stos
adc
data16
mov
and
xchg
adc
sub
pop
mov
clc
cwtl
add
mov
xchg
jecxz
mov
adc
shrb
cmc
add
and
mov
and
add
jo
loopne
xor
or
popf
xor
sub
mov
lods
out
or
add
sub
dec
inc
insl
das
ret
jo
pop
adc
inc
test
outsl
or
mov
dec
sub
add
jmp
call
xor
add
daa
and
sbb
ja
outsl
push
xor
inc
movsl
mov
lock
pop
xchg
addl
push
mov
sub
mov
in
xchg
push
vpslld
mov
adc
cmp
loopne
shlb
data16
pop
xchg
popf
inc
test
adcb
push
jns
push
push
xchg
xchg
popa
xchg
push
jge
or
adc
pop
push
sbb
mov
shrl
clc
iret
dec
add
add
jne
xchg
add
mov
out
mov
xchg
pop
lea
scas
cwtl
mov
out
dec
lock
in
push
mov
sub
out
or
push
pop
insl
inc
and
mov
inc
add
pop
es
sub
inc
nop
jmp
or
lcall
adc
xor
cmpl
stos
and
stos
adc
adc
push
inc
shrl
sub
push
mov
push
or
push
pop
push
hlt
or
dec
or
lea
sbb
or
push
pop
push
mov
out
movsb
es
ret
dec
jecxz
rolb
sub
scas
cmc
cmovge
or
sbb
push
pop
jp
loopne
xor
push
testl
dec
xor
mov
xor
or
cs
ss
fdivrl
mov
ss
sub
data16
add
pushf
inc
adc
xchg
cmp
cmp
fwait
ret
mov
cmp
xor
out
pop
hlt
shr
xor
push
push
or
pop
sub
add
jp
mov
mov
xchg
incb
test
je
test
xchg
or
jo
mov
cmp
push
pop
push
mov
or
push
jmp
lea
and
lds
jmp
js
push
or
roll
sbb
mov
push
popa
cmp
mov
push
clc
push
push
sbb
daa
fdivrl
sub
push
pop
fidivrl
mov
pop
lock
adc
mov
test
sbb
adc
add
pop
fbld
xchg
or
or
jecxz
push
xor
sbb
mov
test
add
push
jb
pop
jo
and
sbb
push
push
pop
pop
adcb
aam
mov
jo
sbbb
sbb
or
or
sahf
iret
pusha
pop
pop
sub
fmul
and
push
lahf
sub
xchg
push
and
fstpl
jnp
add
jle
mov
mov
pop
in
or
cli
mov
dec
and
sbb
pop
sbb
cmc
lods
mov
push
in
stos
sub
in
stos
mov
pop
sub
pop
and
mov
pop
or
rcrb
cmp
or
mov
xchg
outsb
or
test
out
repz
mov
hlt
or
test
cmp
and
call
rolb
cmp
repz
loope
pop
mov
lret
in
push
adc
cld
js
int
jle
mov
add
sti
gs
xchg
dec
clc
xor
xor
adc
lock
add
sub
add
xchg
dec
add
jbe
jne
mov
push
push
mov
push
push
sbb
clc
popa
jl
ss
and
mov
mov
jo
push
test
mov
das
dec
mov
repnz
jge
adc
pop
sti
out
mov
rorl
adcl
test
sub
adc
mov
adc
sbb
subl
and
pop
popf
into
sbb
gs
mov
outsl
push
mov
or
mov
xlat
and
loope
imul
movups
adc
inc
cli
jg
inc
mov
lock
sub
push
mov
das
cmp
inc
or
mov
pop
imull
push
adc
or
adc
ja
lea
iret
loop
push
repnz
xchg
fsubs
xor
cmp
pop
xchg
push
push
fistl
adc
iret
pop
or
push
popf
test
add
mov
sub
shl
dec
popa
dec
pop
adc
sub
pop
ffree
in
cs
into
or
imul
in
loope
rol
mov
jno
dec
xor
xor
divl
cld
push
cmp
jnp
pop
popf
xor
outsl
das
outsl
push
xor
add
fistpl
add
adc
xchg
dec
mov
jl
mov
leave
xor
es
or
xchg
add
xor
aaa
add
jecxz
ss
insl
pop
sub
pop
jmp
pop
js
negl
mov
sub
push
or
adc
jnp
fldt
es
add
scas
sub
sbb
mov
add
int
je
rorl
fcompl
mov
or
inc
movb
inc
sbb
mov
imul
loop
rcll
inc
pop
xor
lds
sub
je
ss
clc
sub
xchg
data16
sub
and
or
push
sbb
cwtl
mov
and
push
add
mov
rolb
mov
aad
lahf
in
sbb
into
add
ficoml
addr16
pop
inc
lret
push
add
int3
mov
add
xor
jg
in
jo
mov
pushl
sahf
cmpb
mov
lods
add
in
inc
cmp
roll
push
cmp
loopne
jnp
xchg
inc
in
mov
jnp
mov
ret
lds
sbb
roll
push
push
push
dec
enter
out
pusha
dec
xchg
inc
xor
mov
orb
add
cmp
mov
bound
scas
femms
or
psadbw
je
cmp
xor
jle
mov
mov
pop
add
out
mov
jns
xchg
jne
andb
and
and
popf
imul
fdivrs
or
and
insl
sarl
xor
jno
and
jne
sub
ret
or
pop
mov
push
or
mov
add
xchg
pushl
and
push
mov
stc
mov
lods
xor
cmp
adc
lea
push
jbe
push
iret
sarb
lret
clc
inc
jo
out
add
cwtl
xchg
fcoms
shr
repnz
cld
shrb
notb
popa
inc
add
mov
lret
in
dec
add
jne
sbb
rorb
push
je
mov
push
inc
mov
jl
jne
iret
mov
xor
cmp
sub
or
mov
adc
or
fstl
push
push
cmp
fcmovu
test
in
test
mov
push
adc
xor
outsl
adc
lods
or
mov
push
sbb
sbb
scas
lcall
inc
fbstp
aam
pop
mov
jg
and
mov
sub
jb
dec
pop
mov
in
rcll
adc
push
jmp
and
pop
mov
insl
pop
and
lret
mov
flds
sub
and
jnp
inc
addl
rorl
and
dec
and
rcrb
ret
dec
andb
xor
mov
pavgw
icebp
push
jne
cmpsb
ljmp
jne
sub
jns
mov
sbb
jne
add
sahf
sub
jae
jne
push
push
je
xor
js
jns
outsl
sbb
dec
insb
jne
test
push
and
jne
scas
aaa
clc
negl
nop
dec
push
mov
inc
scas
fiadds
mov
xor
cwtl
xor
sub
cmp
je
xor
in
push
or
jne
popf
or
mov
mov
adc
add
ss
addb
xchg
cmp
push
mov
mov
sbb
pop
push
push
push
mov
cmp
jl
mov
lea
mulb
ret
cltd
push
xor
pop
imul
in
push
inc
aas
inc
ljmp
cmp
shrl
test
outsl
sarb
dec
fmul
mov
cwtl
jo
push
stc
fwait
pop
fdivrl
loopne
adc
rol
out
or
mov
mov
addr16
xor
jne
and
add
add
sbb
adc
aas
and
add
ror
adc
repz
cld
add
jb
mov
mov
mov
mov
xchg
inc
adcl
rorl
lret
leave
mov
popl
and
sub
fwait
sub
cmpb
movb
sub
xor
arpl
nop
lea
shlb
imul
test
adc
dec
shll
insb
jo
pusha
shll
js
mov
out
mov
push
or
xchg
cmpsb
cwtl
jmp
jo
idiv
or
mov
pop
xchg
dec
int3
loope
mov
inc
mov
scas
jo
sbbl
test
leave
fcmove
std
out
gs
add
loopne
nop
in
jle
movb
adc
mov
sbb
mov
pop
xchg
imul
nop
add
fadds
sbb
sbb
push
fs
cmp
sbb
idivb
pop
sub
test
imul
and
inc
add
test
cmp
out
add
pusha
inc
push
pop
sbb
add
jne
mov
shlb
adc
sub
cmp
xor
je
loop
pop
adc
mov
adcl
mov
jne
or
mov
fimull
test
jno
xchg
add
jnp
cmpsb
ficoml
mov
add
inc
sbb
cmp
movsb
dec
cmp
icebp
sub
test
xchg
adc
mov
mov
jle
aas
icebp
sub
mov
test
movsb
xor
mov
test
in
push
add
shll
lahf
add
das
incb
pusha
popa
sbbl
add
shl
ret
mov
enter
pusha
and
dec
ret
xchg
push
push
je
cmpsb
cmp
xor
sub
das
aaa
fnsave
in
inc
dec
pop
jne
idivl
roll
inc
dec
adc
imul
cs
pop
mull
xchg
jmp
and
xchg
mov
das
add
cmc
dec
mov
stc
fnstsw
pop
sar
lds
add
lods
cmp
sbb
dec
enter
clc
sub
insl
jmp
imul
out
movsb
xor
mov
add
push
mov
push
jne
mov
sub
mov
dec
jne
cmp
mov
data16
cmp
je
xor
sti
mov
xorl
lcall
inc
sbb
outsb
movsb
lock
mov
lods
adc
sbb
push
mov
sub
push
testb
insl
in
inc
adc
xchg
sbb
andl
sbb
xchg
outsl
and
dec
sub
aad
push
inc
cmp
jp
dec
and
mov
mov
cmp
cli
out
fidivrs
pop
push
adc
or
sub
fdivs
leave
and
add
dec
cltd
scas
pop
dec
adc
jp
adc
push
push
push
mov
es
push
push
or
scas
add
inc
sti
mov
adc
mov
aad
stos
mov
pop
mov
mov
ljmp
add
aam
adc
push
pop
mov
mov
jb
sbb
push
lea
add
bound
sti
in
push
fdivl
and
mov
adc
jno
orb
sub
fwait
add
lock
inc
test
lock
push
loopne
jge
jne
or
stc
mov
sbb
pop
fs
pusha
pusha
insb
cmp
xor
insb
push
inc
test
out
movsb
xor
or
cmp
inc
jnp
cwtl
push
xchg
pop
test
out
pushf
cmp
cli
je
orl
out
add
or
repnz
pushf
cmp
lret
adc
sahf
mov
hlt
sti
cmp
pop
mov
sub
inc
and
dec
add
jne
daa
or
sub
dec
roll
mov
adc
push
mov
sub
lock
lock
pop
lock
lock
inc
mov
mov
dec
loope
lcall
push
into
ja
push
pop
adc
adc
sbb
push
xchg
mov
test
testl
mov
add
push
and
mov
aaa
push
adc
sub
sub
xor
cmp
xor
jne
mov
sahf
push
pusha
inc
std
clc
flds
pop
jle
loopne
in
mov
test
or
dec
scas
xor
test
cmpsb
xor
pop
mov
pop
pop
mov
sbb
and
jbe
add
sub
jne
adcb
sbb
push
sbb
fimull
adc
in
insb
fucom
pusha
and
push
test
popa
add
punpcklbw
add
rep
jbe
mov
test
and
mov
je
push
mov
dec
sti
aas
jne
outsb
fsubl
xchg
shrb
sbb
fiaddl
or
and
cwtl
fidivrs
push
sub
add
adc
je
sbb
jle
cmp
jns
push
and
dec
push
lea
ficompl
push
out
andb
add
cmp
lret
push
or
gs
leave
sbb
jle
popf
cmpsb
pop
lock
fcoms
jo
mov
jo
cmp
sbb
sub
add
test
scas
push
fs
mov
sbb
mov
pop
or
in
lods
arpl
aad
movsl
arpl
test
cwtl
mov
ficoml
inc
outsb
or
pop
movsb
dec
pushf
or
sbb
inc
adc
pop
add
negl
cltd
sub
mov
fisttpl
cmp
dec
ljmp
subb
add
jmp
cltd
std
push
ret
jge
int3
mov
stos
imull
add
andl
shll
xchg
aam
mov
mov
or
xchg
adc
or
pop
add
xor
mov
lods
bound
or
xor
sub
or
add
jmp
mov
xorb
pushf
sbb
lods
aaa
dec
adc
or
adc
cmp
xor
adc
and
mov
loope
cmp
and
dec
fadd
push
push
cli
sub
and
lods
lock
pushf
xchg
dec
inc
sub
data16
sub
in
inc
push
push
push
or
ja
adc
fiadds
popa
inc
lcall
test
shlb
test
inc
sbb
cmp
push
fmuls
ja
jmp
test
movsl
rolb
out
pop
push
push
les
xor
mov
jbe
lret
rcrb
and
inc
inc
dec
lcall
xor
xor
dec
mov
xor
mov
movsl
add
jl
mov
sbb
sbb
and
cmp
xor
push
adc
out
imul
add
mov
or
xor
lock
xor
jmp
xchg
or
mov
scas
ret
xor
sbb
popa
aaa
das
cmp
push
add
test
xor
repnz
fdivp
sub
out
dec
cmp
or
test
fidivl
and
push
dec
repz
push
out
inc
and
imull
dec
or
in
dec
mov
pop
adc
adcl
jl
repnz
or
gs
call
push
sub
mov
inc
push
dec
fildll
mov
mov
addb
inc
push
and
or
inc
push
js
xchg
mov
fstpt
adc
jb
inc
js
and
sub
loop
jbe
adc
add
sub
shlb
popf
inc
jg
adc
je
sub
gs
adc
push
addr16
adc
je
push
ret
leave
sbb
orb
stos
push
dec
jnp
out
sub
dec
xchg
add
hlt
sar
push
jp
push
add
mov
xor
push
js
pop
cmp
ss
add
push
xor
pop
pop
cmp
shr
xor
jge
cmp
push
imul
add
and
inc
addb
xor
call
cli
add
or
into
adc
aas
jo
cs
jl
xor
sub
clc
pop
adc
adc
ljmp
sub
push
or
push
or
mov
and
hlt
test
cmp
pushf
adc
sub
mov
jo
loope
push
sbb
in
repnz
add
sbb
inc
or
sub
add
cmpsb
in
sub
mov
ss
inc
xor
inc
rorb
xor
mov
ds
nop
inc
push
movq
setnp
test
mov
dec
adc
xor
clc
mov
xor
push
notb
push
cmp
cwtl
sbb
add
iret
mov
mov
jnp
mov
or
sub
inc
push
and
inc
mov
sub
fcoms
push
inc
in
jmp
ds
sbb
pusha
push
rcrl
jle
lods
pusha
mov
cmc
js
aas
lods
icebp
inc
inc
ret
pushl
add
aaa
arpl
call
lea
push
orb
jecxz
mov
mov
inc
sub
xor
mov
movsl
mov
and
into
inc
insl
dec
pop
push
pop
pop
mov
test
xor
shr
cs
jl
andl
outsb
inc
push
xchg
adc
lods
lea
iret
fs
sbbb
daa
xor
pop
sub
mov
cmp
repnz
or
sti
call
jo
sbb
icebp
xchg
or
scas
inc
xor
add
push
fcoml
shrb
movsl
fistpll
enter
enter
jo
or
repnz
adc
fistpl
les
dec
adc
andl
rorl
mov
inc
and
pop
xlat
lcall
cmp
daa
adc
sub
popf
mov
sbb
ret
loopne
pop
and
ret
jecxz
adc
adc
icebp
fdiv
jno
bound
xor
pop
inc
jb
inc
push
int
adc
adc
int3
or
mov
movsl
add
jne
sub
enter
push
mov
mov
mov
push
sub
insb
jp
adc
jle
cmp
xor
sub
dec
ret
xlat
ja
imul
ret
ret
aaa
pop
testb
je
fdivl
cmp
or
cmp
jl
loope
xor
add
pusha
or
adc
lret
jl
inc
xchg
mov
pop
and
enter
xor
mov
lahf
addl
pop
adc
jge
push
loopne
cmc
mov
pop
jae
or
mov
test
mov
and
orl
inc
push
ret
mov
pop
jbe
leave
xor
movsl
sarl
add
add
pop
add
xorl
out
push
push
push
pop
push
mov
sbb
arpl
add
loopne
fwait
nop
mov
add
dec
imul
scas
pop
cmp
scas
mov
rolb
nop
inc
adc
add
pop
out
or
or
rcl
and
xchg
add
fstp
mov
sbb
data16
adc
jns
mov
mov
js
fiaddl
negl
js
out
in
cld
neg
punpcklwd
adc
daa
add
or
mov
pop
mov
dec
mov
jno
pop
push
push
lcall
or
push
inc
popa
cwtl
imul
cltd
idivl
mov
addb
out
adc
add
add
sub
not
mov
add
push
leave
adc
and
pop
movsl
mov
add
or
sub
je
lds
aad
mov
jmp
and
enter
xchg
aas
push
repnz
filds
and
push
mov
adcb
adc
fadds
mov
lea
fsubs
adc
aad
or
xor
daa
js
cld
sbb
ret
adc
fwait
pop
add
movhps
sub
add
test
or
mov
adc
fstpl
or
cmpsb
push
inc
adc
mov
xor
repz
push
jg
or
sub
inc
sbb
add
adc
lds
arpl
cli
sbb
or
pop
sub
lods
dec
sbb
mov
jmp
jne
or
jae
movsb
ret
call
xchg
ret
fsubr
jae
xchg
lock
orl
cwtl
push
push
cmp
mov
or
insb
mull
imul
xor
add
sbb
add
pop
shlb
add
out
xchg
adc
sbb
adc
jae
jg
pop
cmp
adc
sbb
jecxz
pop
push
ja
loopne
xchg
cmp
idivl
pop
lods
shrb
mov
xor
add
push
add
test
cwtl
xor
and
sti
add
dec
add
sbb
inc
and
aas
and
cmc
enter
or
aad
jbe
cmpl
cli
arpl
daa
ljmp
inc
aas
adc
sbb
pop
adc
aam
cmp
shr
inc
add
add
push
loopne
adc
cmp
push
sbb
add
push
pop
sbb
or
mov
xchg
pop
pop
adc
dec
sbb
in
popa
push
dec
add
jno
dec
push
mov
or
out
in
xor
cld
mov
mov
es
or
sub
or
push
mov
rclb
arpl
pop
adc
push
lods
hlt
inc
lock
adc
pop
pop
pop
jns
mov
test
add
jecxz
cwtl
cmp
push
int
test
mov
fdivs
mov
dec
push
push
or
pop
sub
xor
orl
rolb
or
pop
in
xor
not
bound
cmp
add
xor
loopne
adc
or
addr16
out
mov
inc
adc
add
pop
andb
int
mov
jge
xchg
inc
lods
cmpb
add
pushl
inc
or
jg
inc
xor
jle
out
bound
mov
je
in
add
cmp
loopne
push
cmp
dec
jne
sub
cwtl
adc
jp
add
scas
add
pusha
in
push
push
out
mov
cmp
mov
inc
push
out
push
sbb
clc
lret
dec
lock
push
mov
or
add
orl
idivb
addr16
inc
inc
cmpb
fld
jbe
es
nop
push
jne
cmp
iret
xor
or
jb
int3
adc
jo
cmp
xor
or
jbe
jnp
adc
inc
jo
repz
into
sub
inc
dec
je
ret
xor
cmpsl
or
push
jb,pn
nop
or
fdivp
or
scas
test
add
mov
jg
mov
cmovns
pusha
pop
inc
dec
cld
repz
xchg
or
adc
pop
inc
aaa
test
inc
and
dec
ret
in
lea
and
mov
push
subb
push
push
and
inc
push
cwtl
ret
cmp
push
loope
pop
fs
or
scas
or
mov
pushl
dec
xchg
mov
pusha
xor
xor
xchg
push
mov
ja
test
and
mov
push
pop
or
xor
fs
push
lock
repnz
pop
testl
nop
je
sub
push
push
xchg
adc
and
add
hlt
call
test
inc
sbb
dec
or
add
inc
cmp
pop
dec
imul
leave
pop
xchg
or
and
jae
dec
pop
es
aaa
sbb
jp
push
mul
sub
loop
sub
add
and
lock
push
mull
into
scas
add
dec
nop
ja
add
int3
out
add
sub
sub
xchg
lock
xor
lods
mov
testl
mov
das
inc
jle
xor
or
mov
neg
ret
ja
push
mov
xchg
and
cmpsb
add
ret
adc
imul
xchg
pop
mov
or
scas
rclb
push
push
orl
and
cmp
stos
int3
jbe
sbb
sbbl
sub
pop
push
push
push
and
xor
add
or
xor
cld
ret
fs
add
push
adc
push
xor
pop
imul
rorl
rorl
loop
fisttpl
and
jb
testl
xorl
lret
test
jo
mov
push
pop
xchg
pusha
mov
pop
loope
adcl
or
mov
mov
fidivrs
sbb
add
rcr
cwtl
add
lret
mov
cmp
push
adc
or
popa
adc
lret
push
mov
mov
mov
mov
and
arpl
lock
ja
adc
adc
pop
das
in
mov
add
and
pop
adcb
dec
xchg
rorb
inc
cmp
push
popf
mov
adc
xor
imul
sbb
jbe
add
lds
push
push
mov
cwtl
sbb
pop
xchg
mov
js
rolb
cld
push
sbb
std
xchg
mov
pop
add
shl
aas
test
inc
cmpsl
adc
adc
lahf
adc
jmp
bound
or
nop
push
add
push
and
aam
sub
nop
fs
movsl
inc
push
addb
mov
xor
cmp
cmp
ja
je
xchg
inc
jae
or
je
or
sub
push
scas
xchg
scas
cmp
or
dec
or
adc
xchg
or
add
adc
jne
sahf
or
xchg
jnp
ss
jmp
rcrl
jecxz
cmp
adc
movsl
test
xor
insb
pop
or
adc
push
add
mov
enter
add
cvtps2pd
dec
dec
cld
jbe
lcall
cmp
xor
push
adcl
mov
xor
dec
mov
rorb
sahf
dec
sub
dec
rolb
inc
sub
and
ret
push
push
pusha
jg
mov
push
xor
adc
mov
rcl
and
mov
test
xchg
and
loopne
gs
mov
ss
push
dec
xor
pop
lcall
dec
sub
lods
sbb
push
dec
jmp
jp
adcl
or
loope
or
add
sbb
in
inc
outsb
fcomi
ljmp
add
dec
shll
or
push
and
clc
enter
push
mov
popf
add
insb
adc
xor
dec
pusha
lods
ds
ss
xor
pusha
aam
mov
adc
inc
out
and
stos
push
xchg
sbb
into
and
add
aas
sbb
or
and
lods
shrl
mov
inc
inc
lds
mov
insl
add
addr16
cmp
mov
xor
pop
mov
push
out
je
push
divl
push
or
inc
das
jmp
mov
push
rcrb
inc
push
push
xchg
vmovups
outsl
call
dec
and
pop
or
or
push
push
rcll
mov
and
outsl
jne
pop
jbe
push
xchg
arpl
cmpsb
fstps
xchg
xor
add
xor
or
lock
into
shlb
rclb
dec
push
jp
add
dec
stos
sbbl
inc
and
xlat
xchg
pop
inc
add
add
add
add
cmp
pop
nop
mov
fadds
mov
daa
sbb
sbbb
idiv
call
sbb
jge
mov
add
sub
lea
cmp
js
xor
push
in
push
sbb
hlt
jns
out
push
sub
or
push
xor
add
mov
jae
shl
pop
cmc
fsubs
mov
test
dec
push
les
fists
cmc
jbe
push
dec
or
inc
dec
les
jl
sbb
rol
in
push
mov
xor
loop
cmp
mov
add
dec
aam
loop
test
nop
xor
popa
insb
jo
fucomp
js
in
and
add
ret
mov
inc
sbb
mov
adc
shrb
movsb
sbb
fidivrl
insb
ja
movsb
imul
cmp
mov
out
adc
adc
push
cmp
mov
mov
sbb
and
int
nopl
fidivl
push
ljmp
movsb
push
jg
sahf
and
mov
fisubrs
or
dec
xchg
mov
sbb
mov
xchg
xor
data16
xlat
dec
adc
push
daa
daa
push
xor
and
hlt
mov
outsb
stos
pop
inc
fsubrl
jge
aas
call
lahf
ds
testb
hlt
or
iret
xchg
clc
aam
xchg
pop
stos
inc
pop
das
push
cmp
dec
or
mov
push
adcl
push
jg
nop
orl
mov
push
and
push
daa
xchg
push
outsb
or
ret
rol
lahf
lock
movl
imul
call
data16
mov
ja
rcrl
movsl
sbb
test
dec
push
arpl
rorb
shl
add
add
rcll
xchg
jne
inc
mov
gs
inc
sub
mov
add
dec
mov
push
adc
mov
lods
and
dec
inc
ds
xor
fld
cmp
mov
add
cmp
shll
mov
cwtl
push
mov
je
sbb
fcompl
inc
leave
je
rcl
sub
lret
fsubrs
je
test
test
sahf
mov
or
loopne
dec
push
xchg
push
sub
dec
sahf
imulb
stos
xor
sub
xor
xor
adc
pop
aaa
or
shl
in
mov
mov
clc
add
mov
movsl
mov
adc
lret
sub
push
incb
pop
pop
ds
nop
cmp
mov
mov
cmp
mov
std
adc
movsl
or
mov
add
out
sbb
xor
test
nop
fimuls
mov
mov
adcl
or
ret
add
sahf
push
sub
scas
mov
out
and
pop
lock
into
cmc
mov
scas
cwtl
cmpsb
sbb
cmp
mov
scas
nop
push
mov
add
push
cmpsl
adcb
inc
in
xchg
mov
or
mov
mov
cli
add
leave
sub
jo
xor
pop
mov
mov
sub
ljmp
add
ret
xor
mov
stos
or
sub
repz
add
loopne
xorl
or
rorb
cmp
mov
ret
enter
jne
xor
push
push
push
in
inc
popa
mov
cmc
inc
bound
sub
push
sub
test
in
or
push
cmp
or
test
je
add
es
jge
lock
jnp
aas
add
dec
sti
or
push
js
sarb
sbb
enter
pushf
das
push
sbb
mov
pushf
std
and
xchg
jbe
in
adc
iret
icebp
mov
xor
push
sbb
stos
mov
cmp
out
addr16
pop
movb
xchg
push
mov
in
pop
and
jnp
cmp
mov
cmc
add
xor
mov
xchg
enter
inc
and
pusha
test
mov
popa
and
divb
aaa
sub
add
ds
xor
nop
sbb
xchg
fldl
mov
mov
or
std
xchg
mov
push
clc
dec
or
add
fsub
pop
inc
and
sub
cmpb
jno
mov
das
inc
enter
dec
sub
push
mov
sbb
jnp
adc
sub
ret
xchg
add
daa
or
cld
sbb
psllw
inc
mov
xor
mov
jno
dec
pop
out
pop
cmp
icebp
in
insb
sbb
dec
lods
movb
lock
xchg
jmp
jecxz
test
jmp
ret
adc
fdivr
pop
inc
jnp
jg
cmp
in
mov
out
pusha
cmp
pop
add
sbb
adc
push
sete
xchg
or
rcll
repnz
add
or
mov
cmp
daa
subb
je
add
add
lret
cmp
je
loopne
push
mov
popf
mov
fcmovbe
filds
dec
mov
loope
mov
dec
adc
push
or
xchg
push
xlat
fdivrp
and
lods
mov
and
hlt
das
jne
int3
repnz
pop
je
add
outsb
xchg
mov
test
pop
nop
lahf
pop
sbb
fdivl
mov
in
jecxz
into
fsubs
cld
lods
inc
cmpsl
push
jns
inc
addr16
fs
aaa
jmp
andb
sbb
adc
mov
leave
dec
add
add
mov
sbb
sub
cmp
xchg
inc
ljmp
lock
xor
jle
sub
jg
mov
movb
jl
add
bound
push
loop
jp
cld
insb
loopne
faddl
and
lret
cli
sbb
push
cld
nop
je
pop
mov
mov
pop
enter
xchg
inc
outsb
pop
adc
stos
cltd
push
jb
orl
ret
and
mov
dec
xor
sub
sbb
lret
adc
or
lods
mov
insl
dec
or
je
adc
std
inc
push
mov
and
mull
push
dec
add
xchg
sbb
sbb
fwait
inc
and
and
and
cmp
imul
sbb
xlat
sub
into
add
sub
mov
xchg
das
divb
test
js
xor
sub
and
push
adc
sbb
add
xor
mov
and
sti
enter
cmp
inc
rolb
cltd
lret
fsts
cmp
adc
xor
mov
inc
rorb
enter
jns
inc
dec
fs
jle
xlat
jg
jmp
push
das
inc
push
movsb
cmp
dec
jmp
push
cltd
int
mov
and
adcl
jb
jno
fildl
adc
cmpsl
dec
jmp
push
incl
loop
idivl
je
stos
movsl
xchg
pusha
adc
pop
jecxz
sub
jne
push
addb
add
rcrl
push
and
std
mov
adc
mov
push
popf
jno
test
sub
imul
ret
jo
pop
pop
push
sub
push
mov
loope
arpl
js
jbe
adcb
mov
mov
push
sbb
push
sub
jb
sbb
mov
imul
xchg
sub
push
scas
fbld
sub
push
movsb
cld
and
push
loope
sbb
pop
call
jle
pushf
inc
cmp
dec
jg
or
add
mov
hlt
stc
mov
add
fdivl
pop
push
into
call
add
imul
push
push
xchg
call
mov
stos
in
jle
dec
aaa
and
in
push
testb
mov
mov
sbb
cmp
negb
and
xor
loopne
add
push
ja
mov
js
ds
loop
cmp
cmp
fmuls
add
cmc
add
nop
ret
inc
mov
imul
xchg
dec
cltd
std
add
xchg
mov
or
enter
mov
ds
fistl
popf
sub
jecxz,pt
or
mov
push
int3
sbb
push
fbstp
xchg
into
or
add
sti
lret
loopne
dec
mov
push
inc
pop
xchg
pop
in
xor
ja
lock
mov
rcrb
les
push
add
push
imul
add
and
cmpsb
mov
cmovb
dec
gs
mov
and
add
rcl
addr16
fadds
or
cmp
loopne
push
add
ss
push
jns
test
push
xchg
add
and
sbb
push
pop
jb
mov
add
jecxz
aaa
push
data16
imul
xor
dec
sarb
loopne
jae
fstl
stc
add
xchg
adc
jne
sbb
sbb
or
and
mov
pop
rclb
mov
add
or
movsb
jmp
lahf
sbb
push
push
fsubrs
lahf
bound
push
and
or
sub
mov
mov
test
or
dec
sub
push
and
or
ljmp
jae
lea
mov
into
in
or
inc
push
dec
aam
jp
or
jbe
cmpsl
sbb
imul
sbb
jo
ja
mov
adc
subb
mov
les
add
inc
push
jb
push
shrb
xchg
or
inc
mov
add
clc
sub
sarl
je
xor
jo
in
ds
push
mov
int3
cmpl
jecxz
adc
out
arpl
or
xchg
mov
xor
add
call
loop
adc
frstor
and
cmp
test
xchg
push
push
ja
xchg
mov
lods
mov
das
or
pop
push
inc
gs
dec
cmpsb
adc
and
mov
imul
push
ja
repnz
push
dec
lock
notl
fs
fadds
or
scas
mov
test
push
notl
mov
rorl
xlat
dec
xor
leave
push
xor
in
ret
push
xor
inc
std
xchg
shll
push
mov
jno
mov
cwtl
inc
lock
les
mov
orb
xchg
pop
sub
sar
push
ret
and
movsb
xchg
mov
inc
sbb
push
pop
xchg
ds
mov
mov
or
or
pusha
adc
stc
add
test
push
cmp
nop
push
sub
jo
jge
cmp
jbe
mov
cmp
push
cmp
rol
fcoms
pop
shrb
mov
pop
xchg
addl
aas
aad
mov
lock
leave
dec
or
add
inc
xchg
sub
push
lea
sub
or
repnz
push
adc
adc
and
roll
jmp
push
andb
lock
or
dec
mov
cs
cmpsb
inc
and
std
aaa
xchg
or
push
aas
ja
push
pop
inc
mov
mov
pop
xor
pusha
adc
xor
icebp
dec
and
mov
jne
das
add
pop
andl
adcb
sbb
mov
test
xlat
or
pusha
push
mov
xchg
icebp
inc
adc
ret
in
add
jae
jbe
or
push
lods
jb
pop
imul
pusha
fmull
xlat
insb
sbb
and
insb
dec
mov
push
rol
outsb
or
jle
xlat
rcrb
or
sub
or
sub
icebp
push
push
and
iret
lock
add
push
lds
push
roll
push
push
in
jle
xchg
mov
shlb
inc
push
rclb
popf
add
or
inc
jp
sbb
clts
int
cmp
in
xor
leave
mov
mov
mov
sub
adc
dec
add
add
pop
or
or
cmp
cmp
jae
or
mov
clc
jmp
adc
pusha
xchg
jno
push
add
inc
imul
enter
or
rcl
mov
push
aad
lods
xchg
in
sbb
stos
leave
push
dec
stos
xchg
xchg
es
or
or
or
sbb
and
cld
movsl
ret
cli
or
andl
mov
xor
xlat
mov
cld
sub
fisubs
or
lea
pop
movsb
push
cmpsb
lods
add
fbstp
fmull
add
rcrb
pop
mov
fcoml
movsb
mov
or
imul
rorl
cmp
adc
pusha
or
push
adc
add
mov
adc
sbb
add
mov
dec
mov
les
inc
cmp
insb
mov
pop
ret
je
aaa
mov
mov
js
sbb
in
test
or
add
jge
xchg
mov
pusha
lods
jnp
dec
test
lea
add
add
cli
sbb
or
and
push
hlt
test
imul
adc
in
popf
mov
pop
mov
push
jb
ss
jns
scas
xchg
cmp
add
xchg
xchg
test
jg
pop
adc
or
add
push
test
or
lock
or
or
or
adc
pop
js
pop
lock
push
ja
pop
sbb
add
sub
or
inc
or
mov
jp
test
adc
dec
xor
or
subl
and
test
cs
pop
cld
jmp
cld
adc
data16
sub
pop
fs
movsb
jo
sbb
pop
add
jmp
shlb
jbe
sub
lea
xor
adc
xor
push
pop
inc
inc
cmp
jb
cmp
pop
outsl
je
cmp
cmpsb
lods
cmp
add
sub
xchg
adc
nop
sbb
jne
mov
cli
mov
add
addb
xchg
gs
pop
add
cmove
push
fidivrs
movsl
push
add
inc
push
inc
fstps
mov
inc
sti
jl
test
sahf
xor
xchg
ss
imul
mov
sub
mov
dec
or
pop
mov
fsubl
sahf
jo
clc
push
dec
sub
jle
dec
add
jmp
mov
imul
push
lods
jg
mov
sbb
das
test
in
xor
push
icebp
dec
subl
addr16
push
nop
cwtl
inc
or
pop
or
loop
in
das
das
sub
sub
xor
xchg
xchg
xchg
das
cmp
cmpsb
inc
and
cmp
insb
popf
xchg
pop
dec
lods
je
test
add
mov
xchg
aas
mov
add
jg
or
inc
add
and
mov
sub
mov
inc
mov
and
sub
mov
das
fidivl
jne
jmp
loop
push
bound
inc
xchg
xor
xor
xchg
dec
int
push
mov
adc
dec
mov
dec
and
inc
popf
mov
sbb
push
mov
in
sub
sarl
push
pop
jns
fsubl
sub
inc
adc
int
jle
int
test
push
cmp
aas
and
fwait
js
inc
sub
sbb
push
or
inc
or
dec
loopne
test
call
aas
arpl
mov
orl
movb
or
lret
out
xor
mov
cmp
push
incl
mov
mov
xchg
sbbb
inc
xor
sub
and
add
idivb
dec
sub
or
sbb
pop
call
in
sahf
mov
jge
je
pop
cmp
testl
pop
cmp
ret
jge
pop
xor
sti
rep
dec
out
sub
inc
xor
or
sbb
add
in
or
sbb
cmp
jae
jne
and
js
push
jae
sbb
fwait
sub
mov
adc
pop
push
daa
fisttps
add
push
push
mov
mov
push
push
mov
push
imul
pop
loopne
adc
xchg
adc
inc
fs
adc
xorl
adc
pop
popa
adc
addb
xor
mov
mov
imulb
cmpb
or
data16
xchg
in
xor
push
test
sub
test
scas
jno
xchg
adc
mov
push
test
nop
or
adc
rolb
push
iret
test
adc
xor
das
mov
int3
jae
sbb
shlb
lock
mov
push
push
push
jne
inc
popa
mov
mov
cmpb
and
and
sbb
je
imul
jecxz
xchg
cltd
test
dec
mov
push
or
sbb
dec
push
push
shrl
scas
out
pop
loope
sub
xor
pop
cs
adc
ljmp
or
outsl
push
fmuls
in
gs
xlat
mov
lds
push
lret
mov
cmp
out
lcall
inc
ret
inc
roll
inc
push
add
inc
and
sarb
xchg
mov
mov
jne
lcall
adc
test
push
imul
dec
rolb
xchg
cmc
nop
addb
mov
outsb
push
push
inc
sub
mov
test
incl
mov
mov
rcrb
lea
push
js
loop
mov
adc
fadds
sbb
movsb
add
inc
push
xchg
and
les
mov
jecxz
popa
testb
mov
cmp
jle
jnp
or
add
movsl
jo
mov
addb
lahf
out
dec
add
push
or
cmp
jl
ret
repz
lcall
xorb
test
pop
add
je
dec
mov
jne
mov
loop
lea
mov
sar
loope
inc
and
repnz
add
inc
inc
out
ret
cmp
push
xor
test
push
push
lret
ret
sub
pop
sbb
stos
jecxz
in
mov
push
push
jb
xchg
add
push
or
jae
shl
imul
js
or
ret
sahf
ja
test
lods
lods
mov
or
jo
or
cmp
push
cmp
jmp
cmp
dec
xor
cli
pop
or
insb
cs
push
push
cmpsb
ret
adc
add
add
shr
cmp
inc
sbb
add
fbld
popa
mov
jl
pop
aam
xor
mov
mov
push
push
add
lea
dec
adc
jno
or
sbbl
pop
push
mov
rclb
or
sbb
inc
cwtl
add
mov
daa
inc
jecxz
ret
out
test
jl
mov
adc
imul
sbbl
adc
add
push
shrl
dec
ss
mov
mov
dec
add
jne
sub
outsb
fwait
mov
sar
insb
jp
cmp
jae
push
mov
jb
mov
xor
lret
sahf
xlat
das
inc
ljmp
rolb
nop
mov
jg
cmp
push
push
pop
stc
adc
inc
faddl
push
icebp
xor
jl
adc
inc
sahf
enter
inc
inc
push
inc
inc
dec
test
sub
loop
cmp
pop
add
cmp
jo
add
adc
pop
dec
sbb
xchg
mov
cltd
rclb
imul
mov
aaa
fldcw
push
mov
gs
xchg
or
push
fwait
cmp
cmp
pcmpeqw
xchg
xchg
add
xor
jmp
insb
and
push
jp
adc
jbe
push
cwtl
daa
or
cmp
jmp
bound
insb
mov
push
add
lahf
arpl
insl
jb
and
fistpl
dec
and
adc
imul
fadds
push
arpl
or
mov
ja
sbb
cmp
scas
ss
arpl
cmp
arpl
fs
xor
mov
loope
aaa
sbb
mov
in
or
mov
jne
or
dec
or
pop
imul
in
out
add
cmpsl
jne
shlb
sub
inc
pushf
data16
mov
or
dec
pop
mov
add
sahf
mov
in
and
sub
or
push
mov
dec
xor
mov
subb
dec
out
xchg
mov
and
mov
icebp
push
add
inc
xchg
rcrb
aam
in
pop
enter
mov
and
mov
jg
sub
and
enter
pop
enter
pushf
sub
enter
mov
aas
or
push
push
pop
daa
mov
in
inc
mov
xor
pop
xchg
pop
cmp
and
addb
pop
jne
cmp
pop
mov
mov
movsl
rcrl
lea
sub
fnstsw
ret
xor
xor
or
in
pusha
mov
xor
lods
pop
add
stc
outsb
ja
jbe
or
sbb
adc
push
sbb
daa
add
shlb
mov
push
push
jmp
adc
pop
mov
cwtl
je
xchg
jae
rorb
std
jp
dec
xchg
aam
adc
sbb
mov
mov
andl
lock
mov
xchg
shrl
sub
push
in
jnp
int
lock
dec
mov
lcall
or
mov
cmpsl
jns
fimuls
enter
imul
or
ljmp
ficoms
shll
and
insl
popa
cmp
inc
jne
dec
cli
das
or
hlt
mov
repnz
mov
divb
push
ret
mov
jns
mov
cmp
xor
test
unpckhps
xor
movsl
cmp
bound
jg
add
add
add
jno
add
fbstp
sub
sbb
pop
lock
jmp
loopne
enter
lock
push
bound
divl
mov
cs
or
loopne
add
mov
enter
xor
cmpl
fs
sbb
out
inc
popa
cwtl
inc
push
jns
xchg
xor
pop
sbb
push
push
xchg
pop
out
lcall
cmpsl
mov
cmp
xor
daa
push
push
test
sbb
push
push
mov
loope
outsl
add
or
rorl
push
pusha
push
add
xchg
jo
add
int3
addb
or
je
mov
jmp
cmp
loopne
adc
cmp
jl
xchg
sbb
test
popf
in
dec
ja
push
jne
cmp
pop
movsl
pop
xchg
adc
push
js
pushl
fiadds
push
mov
mov
ret
adc
or
adc
mov
js
add
movb
pop
and
int
mov
out
or
push
and
pop
or
pop
jmp
mov
jecxz
xor
pop
ret
repz
pop
sbb
xor
nop
adc
push
stos
in
jne
addb
pusha
push
add
or
add
pop
pop
shlb
jp
inc
cmp
xor
adc
inc
add
push
in
daa
loope
or
push
lods
lcall
mov
push
pop
mov
mov
jns
aam
popf
xor
fimuls
jge
cli
int
pop
sub
call
insb
sub
add
push
mov
pusha
lcall
cld
or
push
pusha
xor
jo
cmp
aam
and
push
test
cmp
orb
lods
gs
cmpsl
push
ret
push
lret
inc
xchg
or
test
adc
and
inc
dec
dec
and
sahf
xchg
aam
add
fadds
xor
pop
add
mov
jno
scas
mov
popa
cmp
mov
adc
sub
imul
fists
jb
sub
push
sbb
push
test
incb
pop
pop
clc
jl
mov
adc
lods
xchg
nop
sbb
and
test
lret
lahf
rep
orb
sub
push
add
inc
jno
xchg
jo
and
mov
xchg
in
into
mov
push
or
or
or
out
movsb
ja
je
mov
jg
add
push
sub
push
pop
les
mov
add
or
cmp
dec
push
insl
loop
adc
leave
shlb
xor
popf
cmp
sub
or
dec
pop
mov
lea
dec
ja
mov
pop
push
push
aaa
data16
jle
fcoms
jmp
jmp
inc
dec
rcrb
stos
mov
mov
sbb
jo
inc
or
jmp
stos
divl
jg
cmp
jb
push
xor
call
sub
pop
sub
test
push
call
xchg
lea
or
fs
ss
sbb
mov
sbb
add
jg
or
adcl
sub
jo
loope
mov
jmp
bound
loope
push
test
addr16
or
xor
shll
dec
imul
pop
or
lock
push
mov
daa
push
jmp
push
stos
xor
or
enter
xor
hlt
push
pop
int
inc
xchg
sbb
cmpsl
and
or
insb
sbbl
xchg
push
repnz
jns
insb
mov
or
rcrb
and
push
add
imul
push
insl
push
push
lea
test
push
dec
ljmp
adc
mov
sbb
mov
add
fxch
sub
add
jne
and
rolb
or
and
or
icebp
dec
pop
xchg
sbb
or
rclb
sub
loope
add
cwtl
dec
mov
or
xacquire
enter
data16
andl
gs
loope
add
cwtl
xor
sbb
push
outsb
lds
mov
and
push
xlat
mov
xor
fisubs
pop
mov
mov
loopne
cmp
jbe
xor
lods
inc
div
pop
push
sub
cmpb
push
outsl
aam
pop
inc
mov
mov
or
add
xor
pop
lahf
mov
and
inc
outsl
cwtl
idivb
das
and
sub
dec
cs
loopne
adc
test
jmp
add
in
xchg
sub
bound
lods
or
and
push
pushf
add
pop
add
push
adc
jne
adc
lds
jecxz
shll
mov
and
int3
out
mov
insb
pop
and
inc
test
xchg
add
scas
inc
or
xchg
gs
movsb
mov
pop
inc
jnp
xor
outsb
sbb
xorb
mov
ret
mov
push
sahf
push
adc
js
adc
pusha
mov
dec
cmpsl
mov
sbb
stos
xor
and
sbb
push
pop
repz
push
sub
push
adc
jnp
movsl
arpl
inc
ss
or
add
mov
cltd
test
sbb
in
adc
inc
mov
mov
or
loopne
mov
and
jp
dec
adc
das
fs
rclb
push
push
mov
js
and
cltd
inc
add
push
insb
and
mov
in
sbb
mov
add
je
ss
push
clc
stos
push
add
push
cli
adc
es
stc
outsb
arpl
mov
mov
or
and
inc
push
jbe
push
mov
xor
sahf
fistl
jne
pop
imul
test
cmp
pop
hlt
stos
iret
add
es
and
sub
adc
fcoms
in
cmp
and
xor
mov
daa
incb
pop
xor
xchg
lcall
add
lea
push
sub
mov
mov
jp
data16
pushf
stos
sub
testb
dec
push
fdiv
lea
cmp
mov
jo
rcrb
in
jo
mov
ljmp
push
aaa
pop
rol
in
xchg
movsb
fcompl
pop
lock
inc
clc
stc
ss
adc
jmp
pop
pop
rolb
inc
add
inc
sahf
ret
add
xor
mov
inc
or
mov
ss
test
idivb
mov
jmp
jo
mov
and
adc
push
add
inc
add
pop
or
mov
pop
clc
push
mov
mov
mov
mov
jmp
gs
ret
adc
cmc
jne
jp
mov
jp
sub
or
movsb
jl
and
mov
nop
add
jb
xchg
cwtl
pushf
push
dec
mov
mov
inc
cmp
pusha
cld
mov
ljmp
dec
add
or
xchg
cwtl
adcb
and
insl
inc
mov
das
and
adcb
imul
jns
jp
movsb
rcrb
aad
mov
inc
loope
push
icebp
mov
sbb
sahf
lods
jmp
xor
scas
mov
in
fidivl
pop
lea
or
out
cmp
in
mov
out
xchg
je
sub
mov
push
js
inc
cmp
add
leave
mov
add
push
jnp
fimuls
push
adc
mov
cmp
mov
ljmp
scas
outsl
push
mov
dec
sysret
mov
pushf
inc
sub
fistps
push
imull
add
inc
mov
shlb
call
cmp
and
adc
xchg
sti
pop
das
popa
std
outsb
in
sbb
incl
ja
adc
shl
lahf
push
mov
lea
sbb
push
add
ret
icebp
fildl
mov
cmp
sub
in
movsb
mov
test
dec
in
cmp
mov
lods
sub
or
pop
imul
mov
sbb
adc
out
pop
movsb
adc
and
jmp
stos
dec
cmp
or
jo
cltd
pop
adc
or
inc
daa
cmpsb
outsl
xlat
push
push
repz
adc
in
addl
inc
je
shll
add
cmp
loopne
sbb
or
mov
repnz
mov
sub
inc
inc
and
xchg
insb
xlat
add
push
sbb
pusha
sbb
xlat
pop
movsb
add
loope
push
mov
inc
cmpsl
and
shll
add
shll
mov
add
cwtl
test
incb
push
dec
icebp
in
push
push
pusha
ret
pop
xlat
lret
rcll
in
daa
shlb
bound
push
mov
mov
ret
xor
test
mov
mov
rcrb
fisttpl
decl
lea
mov
test
out
sbb
nop
dec
test
xchg
mov
xchg
inc
inc
inc
inc
push
jl
push
adc
xchg
ret
or
cmpl
enter
pop
xor
xchg
mov
or
adc
sbb
idivb
sbb
repz
inc
inc
mov
xor
pop
addb
fsubr
xorb
mov
fstpl
mov
push
xchg
lods
jne
movsb
sbb
push
xchg
or
sub
rcrl
xchg
ror
push
lds
pop
push
mov
mov
push
pop
fsubl
add
add
or
lock
repz
inc
mull
inc
xor
inc
fcom
sbb
cmpb
mov
pop
stc
push
call
incb
stc
pcmpeqw
cmpl
xchg
add
mov
sbb
xchg
mov
push
mov
lea
fcomps
int3
xor
inc
test
lock
cltd
leave
fdivl
add
mov
and
mov
push
cmp
push
and
ret
add
mov
mov
ja
adc
loopne
pop
sub
pop
push
dec
lahf
pop
call
ret
mov
jae
sbb
add
lods
or
dec
xchg
lods
mov
loopne
mov
test
push
addb
pop
in
pop
push
xchg
xchg
xchg
mov
pop
enter
mov
inc
in
mov
and
popa
push
mov
test
cmp
gs
dec
mov
push
movsb
adc
push
cmp
adc
fsub
fdivl
dec
lods
sub
adc
xchg
out
mov
loopne
add
jo
push
or
cltd
cld
cs
outsl
pusha
add
push
rolb
push
mov
and
mov
js
pop
mov
adc
mov
flds
shlb
mov
pop
pop
xlat
cmp
push
adc
sub
mov
jb
popf
icebp
push
out
add
lret
jae
sbb
xor
mov
jno
mov
push
sarb
jns
call
sbb
inc
cld
jae
mov
sub
lock
cmpsl
push
movsb
sbb
std
add
shll
xor
cmp
movsb
das
mov
decb
cmpsl
push
mov
dec
ss
mov
aaa
add
mov
jmp
outsb
lock
and
aaa
cmp
cmp
or
xor
psrad
dec
sub
add
inc
mov
cmp
sub
in
inc
hlt
push
lods
sbbb
js
mov
lods
test
inc
jo
push
das
clc
and
outsl
jns
adc
std
pop
xorl
sbb
ljmp
mov
jmp
mov
jle
mov
mov
ja
mov
ret
jg
outsb
adc
insl
push
add
or
inc
sbb
sub
jge
push
jle
rol
iret
xchg
push
xlat
out
lock
push
outsb
and
pop
adc
lock
xchg
fnstsw
sbb
fiadds
push
lock
cwtl
jmp
mov
adc
or
jge
cmpsb
dec
cmp
fdivrl
xor
loopne
fcomps
jp
sbb
xor
in
das
mov
mov
out
je
in
addr16
and
jne
adc
adc
iret
and
sbb
movb
push
add
test
or
adc
dec
sbb
repz
jmp
pop
cmpsb
push
pushf
inc
sbb
xchg
adc
imul
call
fcomps
inc
test
inc
jp
lods
sbb
inc
pop
test
fadd
pop
sub
loope
jge
in
cmpsl
shll
sub
add
add
lods
das
mov
fcoml
out
xchg
shrl
inc
jecxz
add
jle
dec
imul
push
sbb
cmp
stos
push
mov
mov
xchg
les
aam
sub
outsl
adc
fmuls
imul
jo
or
push
inc
movsb
adc
sbb
mov
xor
nop
lea
int3
jns
xor
lods
sub
add
and
scas
push
fcomp
sbb
icebp
in
and
ja
inc
sbb
fsubl
das
mov
mov
rcl
inc
jle
pop
or
or
popa
outsb
push
sub
adcl
orb
sbb
inc
addb
dec
push
imul
xor
lcall
jbe
andb
loopne
cli
xor
je
das
fmuls
mov
jecxz
adc
nop
sbb
xchg
arpl
pop
mov
push
std
and
aaa
movl
xor
inc
fcomi
lods
pop
push
and
pop
outsl
push
add
ljmp
pop
movsb
dec
sbb
push
mov
cmpsl
shlb
pushaw
and
dec
adc
loopne
test
sub
mov
scas
insb
mov
cmp
mov
hlt
mov
das
add
data16
stc
movsb
xchg
mov
cltd
adcb
xchg
rclb
xor
push
cmpsl
and
dec
fistpl
rcl
sbb
mov
test
mov
dec
pusha
pop
mov
test
mov
mov
sbb
fcoms
out
hlt
inc
sbb
cmc
xlat
mov
les
xor
sarb
pop
add
or
push
inc
scas
cmp
jne
ss
jno
popf
inc
mov
inc
inc
adc
je
cltd
test
cmp
xchg
into
mov
loopne
mov
sub
add
ss
sub
mov
testl
or
xlat
push
jnp
inc
sbb
xor
roll
call
jp
add
sub
push
xlat
popa
rorb
xchg
dec
pop
jne
test
sub
xchg
and
pop
ficoml
mov
add
call
and
cmp
addb
cmp
dec
es
testl
cmp
insl
mov
xchg
lea
add
fwait
leave
data16
rolb
adc
add
fcom
push
lret
push
sbb
jb
mov
stos
lea
and
notb
inc
push
xor
mov
call
add
aaa
jmp
add
add
test
popa
or
and
push
jns,pt
dec
loopne
inc
inc
mov
sbb
sbb
mov
cwtl
xchg
inc
lcall
fistps
shrl
xchg
gs
ds
mov
icebp
stos
mov
fldt
ret
pop
push
in
jle
mov
nop
inc
adc
ret
and
imul
gs
add
shl
scas
int3
ret
movb
lods
add
mov
aad
dec
mov
addl
sbb
rol
mov
sbb
test
add
add
in
fdivs
rol
enter
jo
mov
imul
insb
xchg
sub
or
xchg
call
jb
push
mov
mov
iret
push
xor
sbb
out
mov
lret
arpl
test
or
xor
lahf
inc
or
jg
and
stos
mov
xor
jnp
sbb
mov
mov
scas
dec
into
add
mov
add
icebp
pop
aas
cmpb
cmpsl
xchg
test
lahf
daa
clc
inc
jge
data16
sub
lods
movsl
enter
xchg
adc
dec
inc
cld
shrl
add
jne
enter
sarb
jns
cmp
jbe
je
aam
movsb
inc
xorl
jnp
aam
pusha
sub
movsb
and
xlat
xchg
mov
sbb
out
dec
sbb
or
xor
mov
orl
ret
call
repz
fs
or
push
imul
adc
sub
mov
add
pop
cli
dec
aam
jne
dec
loopne
add
push
push
add
add
push
sbb
insl
add
or
or
andl
push
inc
inc
mov
notl
dec
inc
xor
je
cmp
ljmp
jp,pn
jnp
scas
ss
xchg
or
shrl
movsb
ror
incb
sbb
xchg
subl
femms
cmp
xor
sub
mov
mulb
xchg
addb
adc
jmp
loopne
or
aam
push
lret
icebp
sbb
lods
repnz
jo
push
sahf
adc
inc
sub
mov
mov
cmp
mov
repz
pop
fdivrs
shrl
push
xchg
sbb
jle
dec
mov
in
inc
nop
push
push
lock
ds
mov
push
cmp
outsb
pop
adcl
shrl
enter
push
sub
fsubrs
mov
outsl
mov
mov
mov
test
sti
adc
and
bound
fcom
sub
push
mov
xchg
pop
jmp
aaa
xchg
ret
icebp
xor
scas
jb
push
dec
movsb
roll
cmp
dec
xchg
ja
and
adc
orb
and
add
mov
lock
push
push
xor
clc
sub
test
sbb
push
push
pop
imul
stos
incl
adc
out
pop
insb
mov
mov
lock
es
popf
pusha
lret
mov
cltd
mov
in
mov
xchg
icebp
and
pop
push
fndisi(8087
fbstp
je
push
jae
gs
outsl
sub
xor
jbe
jbe
xchg
push
jno
push
ret
mov
stc
in
and
inc
je
out
std
or
test
lods
push
clc
outsb
xchg
push
or
ljmp
push
add
pop
pop
pop
mov
idivb
mov
or
dec
ds
or
jge
push
test
icebp
jns
enter
into
push
sti
push
add
aam
mov
xor
push
inc
dec
repz
dec
cmp
hlt
jne,pn
inc
push
sbb
sub
cld
lret
push
add
cmpsb
push
jmp
decl
pop
cwtl
cli
add
ljmp
cli
xor
cli
cmpsb
mov
add
jle
dec
testl
lock
outsl
pop
mov
push
and
lret
mov
push
movsb
add
adc
dec
jne
cld
push
mov
test
mov
shlb
je
or
in
mov
inc
insl
add
or
or
jo
cmp
pop
outsl
insl
add
adc
and
sbb
adc
or
mov
adc
dec
mov
dec
sub
mov
jo
faddl
adc
inc
xchg
jb
push
flds
xor
addl
call
pop
sbb
or
popa
rorb
mov
add
js
rorl
pop
jns
test
cmp
add
dec
cmp
pop
mov
cs
cmp
or
lea
divl
mov
in
mov
push
aam
lock
push
cmpb
cmp
mov
xor
cmp
push
cltd
adc
xor
sbb
ret
adc
sbbl
mov
ss
or
cli
jno
lea
xchg
inc
add
jbe
iret
cmp
pop
je
inc
int
or
pop
push
jmp
xlat
ret
fstl
das
mov
mull
dec
pop
repz
mov
loopne
jo
mov
mov
pop
pop
mov
xchg
sbb
or
mov
popa
add
mov
sahf
sbb
subb
adc
sbb
and
sub
or
lret
inc
mov
xor
jl
push
xchg
mov
fmuls
pop
jnp
adc
aaa
loopne
adc
inc
mov
das
call
pop
mov
jno
jle
push
pop
mov
sti
mov
aaa
push
jne
mov
ret
leave
push
cmp
jbe
xchg
clc
push
mov
mov
imul
ljmp
pop
jb
stos
ret
mov
push
pop
xor
push
push
insl
lods
pop
pusha
leave
lret
and
call
xor
and
pop
jmp
push
mov
sub
aam
loope,pn
ds
icebp
loop
shl
mov
push
xchg
movsb
and
inc
xlat
or
xor
movsl
icebp
jb
js
mov
and
push
cltd
and
push
dec
rclb
nop
popf
leave
out
jno
hlt
xor
jo
out
mov
arpl
mov
mov
inc
or
or
inc
jno
pop
push
or
and
pop
mov
push
stos
lcall
push
mov
push
adc
sbb
fxch
dec
push
loopne
mov
or
mov
data16
add
lcall
test
mov
enter
jl
mov
sahf
and
in
sbb
dec
nop
mov
xchg
xchg
xchg
movsb
lods
mov
mov
add
rcrb
int3
dec
mov
fcoml
add
loopne
cmp
push
push
xchg
adc
or
test
in
lcall
dec
jns
cmp
js
mov
dec
lcall
jno
jp
push
sub
ss
mov
js
add
mov
adcb
add
icebp
inc
loopne
mov
aam
mov
or
push
mov
xchg
jl
dec
push
xor
jl
xchg
cmpl
popf
add
add
dec
mov
adc
rclb
ds
fcmovnb
fucomip
add
add
jge
add
add
call
das
mov
fwait
xor
bound
or
pop
test
in
push
xor
push
pop
test
es
mov
into
and
or
jge
jns
lods
aas
sbbl
jne
push
mov
aad
lods
mov
mov
mov
xlat
arpl
jmp
push
xor
pusha
add
dec
and
pop
pop
sub
add
jo
orb
jmp
xor
lods
insl
bound
lods
adc
test
add
and
pop
mov
xchg
push
push
sarl
mov
cmp
adc
cs
lea
add
xchg
aam
repz
and
lcall
add
leave
mov
xorb
scas
out
into
pusha
and
and
xor
sbb
push
mov
push
fisttps
out
inc
enter
xor
and
pop
pop
add
lds
mov
or
sbb
icebp
out
clc
loopne
push
jecxz
sbb
jge
jbe
loope
adc
into
mov
pop
sub
lock
imul
mov
inc
xor
in
push
insb
push
cmc
shrl
jmp
pushf
jmp
inc
xor
pop
inc
xor
loopne
test
adc
pop
add
rclb
call
xorl
jge
add
das
jmp
adc
ficompl
push
lods
and
lret
and
dec
pop
sub
out
and
ret
fwait
add
push
je
jno
mov
scas
adc
cltd
or
fists
aad
inc
icebp
sub
dec
pop
mov
pop
iret
push
imul
jecxz
xorl
push
into
add
or
inc
iret
cltd
xchg
sbb
mov
push
inc
pop
fstl
outsb
adc
mov
scas
inc
addb
add
cmpsl
imul
and
mov
jg
fiaddl
ret
shlb
cmp
stc
push
cltd
pop
leave
fsubl
pusha
or
inc
and
adc
es
sti
in
repz
mov
add
add
lea
dec
faddl
jne
mov
rol
xor
or
cmpsb
pop
ds
pop
xchg
mov
jbe
mov
dec
add
add
mov
popa
popa
ljmp
adc
ds
call
adc
imul
test
xchg
inc
cli
repz
imul
pop
push
or
test
dec
imul
mov
cmp
cli
jmp
fldl
dec
ljmp
pop
and
jl
lds
into
push
adc
sbb
fnstsw
and
lea
jmp
or
hlt
fstl
or
fcomp
fnstsw
push
ret
sub
fsubr
pop
test
neg
roll
cmp
lods
sub
into
dec
push
mov
inc
push
jno
fnstenv
mov
or
sbb
sbb
pop
mov
sbb
mov
mov
or
xchg
lret
or
jle
sub
dec
ljmp
inc
pop
fcmovu
scas
inc
add
jns
sub
sub
sbb
xor
push
or
adc
shlb
add
into
push
adc
outsb
pop
arpl
sbb
xor
jl
addr16
mov
es
jmp
cmp
out
test
hlt
cmp
mov
incl
sbb
push
lock
push
push
ret
push
sbb
fldcw
out
scas
cmp
pop
in
sub
mov
or
test
add
pop
add
mov
cld
pop
loope
lock
jmp
mov
cmp
jge
add
and
mov
fcmovne
and
xchg
pop
push
sbb
ud0
and
xchg
loope
mov
clc
adc
cwtl
lea
sbb
jns
pop
push
aaa
cwtl
loope
test
filds
pop
add
cmp
sub
xor
movsb
push
xchg
lock
pop
xchg
mov
or
ror
inc
add
xchg
das
or
dec
jns
mov
mov
push
cmp
popa
adc
aas
movsl
pop
mov
add
or
lods
mov
mov
pop
bound
push
sarb
jmp
dec
xor
fs
cmp
mov
xchg
adc
mov
adc
or
ret
das
ljmp
aam
fildl
pop
in
dec
or
jne
sbb
jecxz
mov
loopne
sbb
xor
mov
mov
test
adc
dec
leave
fcoms
movsb
int
mov
std
call
adc
in
add
adc
push
push
in
ja
xchg
mov
or
loopne
pop
push
shll
fisttpll
lea
and
adc
fmuls
adc
push
test
aaa
ret
add
cmp
sub
dec
push
mov
enter
out
js
push
dec
mov
adc
cmpsb
xor
jo
test
adcb
jle
bound
dec
push
js
adc
popa
adc
pop
and
inc
insb
add
xchg
inc
cmp
loope
push
adc
cs
daa
pop
push
xlat
cmp
inc
add
add
or
sub
mov
cmp
mov
faddl
mov
cmpb
pop
enter
add
push
mov
dec
and
mov
inc
xor
bound
arpl
add
adc
pop
adc
lea
jo
movsl
pop
dec
lea
sub
das
push
inc
sub
pop
lret
mov
pushf
rclb
es
push
xchg
sbb
clc
dec
adc
cs
repz
jmp
lock
xchg
add
clc
mov
gs
cmp
jge
gs
cmp
push
hlt
das
inc
dec
arpl
jmp
mov
movsl
jns
leave
rorb
leave
jne
stos
js
and
aad
mov
add
jne
push
call
cmp
insb
adc
addr16
mov
movsb
shll
cmp
inc
sub
push
xor
arpl
mov
sub
mov
mov
mov
shrb
xor
push
xchg
xchg
or
cs
dec
xchg
mov
movsb
jb
andl
fsubrs
and
or
push
or
push
pop
je
push
lods
jmp
popa
ja
aam
inc
ret
mov
add
adc
add
and
push
mov
cmc
xor
cmp
mov
xor
test
test
add
scas
adc
pop
clc
add
add
cltd
xchg
push
mov
adc
lods
mov
mov
adc
test
xchg
sub
pop
inc
mov
and
imul
inc
sti
push
cmp
mov
push
cmp
arpl
dec
xor
popa
pop
adc
sub
cmp
jmp
sub
pop
or
repnz
adc
rclb
or
mov
mov
pop
lods
pop
push
icebp
test
mov
and
test
jp
or
xor
mov
pop
jbe
ja
insl
movb
and
xor
mov
inc
add
jmp
cmpl
dec
or
nop
inc
add
mov
xor
xor
adc
or
icebp
fsubs
and
add
testb
fiadds
xlat
jmp
dec
and
shll
mov
mov
sub
adc
inc
mov
sbb
mov
jl
inc
scas
push
adc
subl
dec
and
push
jns
adc
mov
or
ljmp
cmp
call
pop
or
sbb
pop
pusha
or
sub
cmp
bound
loope
addb
adc
push
inc
ds
jg
sbb
pop
push
add
adc
cmp
push
dec
pop
push
fwait
pop
mov
xchg
xor
xchg
in
aas
ss
pop
push
push
ret
cmp
push
in
push
cmp
shl
push
inc
push
xor
xchg
aas
xor
loopne
push
or
or
mov
sub
cmp
and
jmp
or
mov
sbb
push
mov
pushf
sbb
mov
and
sbb
test
sub
das
mov
mov
filds
test
lret
repz
js
xchg
mov
inc
shlb
repz
jecxz
call
rclb
push
mov
lock
pop
jge
lahf
into
or
imul
push
dec
push
push
in
call
pop
fsubr
aam
mov
fnstsw
sbb
daa
popf
push
push
fisttpl
and
sbb
jmp
mov
and
in
in
push
mov
jmp
loop
sbb
jbe
andb
sbb
add
repz
pop
icebp
jne
lcall
adcl
sti
and
add
jb
enter
jb
add
adc
repnz
and
mov
xor
add
std
leave
lds
outsb
add
jbe
test
lock
jmp
mov
popf
cmp
jb
push
pushf
lock
jl
shlb
and
sub
rcrb
cwtl
xchg
out
loopne
rolb
ret
leave
loopne
cmp
xor
push
fwait
sbb
sahf
addr16
les
sahf
and
les
xchg
cmpsl
xor
or
testl
add
cld
adc
sbb
or
pushl
cmpb
or
dec
aaa
adc
loope
sub
movsb
mov
ds
jp
aad
inc
xor
data16
pop
cmp
fildl
pop
pop
push
push
mov
push
cmp
dec
inc
mov
sub
cmp
ficoms
pop
dec
out
fsubrl
inc
orl
push
stos
cltd
pop
movsb
mov
inc
fmuls
push
jecxz
popa
mov
lahf
jp
js
jo
daa
xorb
jns
sbb
push
add
push
hlt
jge
inc
test
stos
test
stos
dec
pusha
mov
mov
push
rolb
stc
clc
subl
xlat
or
adc
nop
mov
imull
or
dec
cwtl
shl
fsubrl
fmull
cmp
in
loopne
jae
xchg
fwait
cmc
jmp
dec
aam
scas
lahf
pop
xchg
jae
fistpll
mov
fldl
xor
and
pop
jp
adc
subl
adc
in
scas
jecxz
flds
rcr
rorl
int3
sub
lret
insl
xchg
add
lods
or
mov
xchg
adc
inc
and
cmp
lds
jl
xor
decl
es
ja
fistpl
mov
subb
adc
lret
cli
pop
loopne
and
fists
je
sub
cmp
sbb
mov
or
and
outsl
push
xor
mov
xor
cmp
pop
test
loopne
jg
xchg
int3
sub
rolb
add
add
adc
lea
cltd
mov
add
mov
sub
insl
and
dec
jb
rcll
adc
push
das
lcall
nop
mov
and
jo
inc
sbb
shlb
mov
jl
test
pop
aaa
and
mov
scas
mov
push
inc
inc
cmp
scas
inc
frstor
sbb
mov
rol
pop
xchg
aam
in
pop
nop
mov
push
ljmp
and
ret
pusha
jae
inc
sbb
xchg
jge
loop
mov
nop
in
fidivs
out
add
and
clc
outsl
push
dec
xor
rcrb
and
lea
xchg
cmp
sbb
fidivrs
ja
sub
push
xor
add
cmp
add
and
dec
orl
pop
sub
insl
or
inc
mov
xor
dec
cmpsl
rcrl
sbb
fstps
cld
jbe
inc
and
lock
dec
xchg
outsl
lcall
xchg
add
rclb
xor
jns
and
dec
add
push
movsb
js
or
dec
pusha
lock
mov
je
stos
insl
sbb
cwtl
insl
cmpsb
xorb
outsl
inc
xor
add
in
adc
jmp
push
push
push
push
push
xor
test
fisubs
sub
mov
push
les
outsb
sub
push
push
nop
xor
xlat
xor
cmp
stos
push
in
cli
std
push
mov
push
or
repnz
push
cmp
jl
mov
jb
xor
push
sbb
shll
sahf
adc
cs
stos
or
cmp
or
ljmp
jmp
sahf
dec
mov
add
loope
dec
ffreep
sub
subb
add
cmpsb
xor
dec
xlat
inc
das
loop
mov
daa
loope
pop
flds
jae
ds
push
inc
aaa
add
xorl
in
ljmp
inc
mov
incl
push
loop
xchg
dec
cmp
ja
mov
mov
push
dec
aam
add
push
push
inc
cmp
xchg
and
inc
pushf
stc
cmp
push
inc
popf
nop
push
inc
mov
add
imul
xchg
jbe
push
inc
mov
xchg
int
add
push
ficoms
mov
shr
inc
dec
or
movb
push
pop
rcrb
stos
lea
sbbb
pusha
lea
mov
add
sbb
or
sub
fcmove
pop
xor
jo
insb
sti
or
ret
pop
jl
xor
lret
into
pusha
xacquire
inc
inc
dec
xchg
jle
jb
push
cmp
pop
outsb
addb
push
sub
dec
fsubl
cmp
es
jl
cltd
inc
sti
sbb
pop
enterw
jecxz
sahf
loope
mov
mov
xor
pop
je
push
pop
mov
jg
and
adc
and
sbb
cmp
or
sub
xor
jns
popa
push
loopne
mov
push
addr16
inc
and
pop
jne
jns
pop
sbb
repnz
push
jmp
push
sbb
out
cmpb
nopl
insb
sub
dec
int
stos
xor
sub
push
jne
jl
les
or
push
jge
lret
xor
sub
inc
sub
shl
cs
addl
sub
add
and
mov
add
sbb
popa
andl
sarb
or
stc
mov
pusha
loop
fimull
nop
xor
add
addr16
add
ss
push
outsl
xlat
push
push
xchg
add
dec
scas
movsl
push
inc
sub
pushf
add
outsl
test
push
jp
add
fs
stos
or
push
clc
mov
and
pop
sbb
movsl
adc
push
mov
mov
andb
fbstp
ljmp
xor
adc
adc
pusha
sub
mov
adc
mov
mov
mov
jle
std
add
lods
int
adc
or
ret
xchg
mov
adc
ds
lock
stc
mov
mov
mov
aam
pop
jp
in
jg
lret
cmpsb
jmp
cmpl
and
sbb
or
xor
insl
popa
lods
les
out
insb
dec
sbb
cmp
lods
or
sbbl
inc
adc
sub
add
addl
sub
mov
xchg
adc
mov
cmp
push
xor
push
cmp
and
data16
aam
push
aas
jne
sub
xchg
test
pusha
out
stos
movsl
imul
scas
or
fisubl
push
cmpsl
mov
mov
aaa
adc
add
push
dec
cmpsl
test
inc
aaa
fwait
data16
mov
imul
push
mov
fimuls
push
pop
fdiv
je
pop
outsb
push
iret
subl
or
push
sub
ret
jmp
adc
pop
adc
jne
push
jmp
cmp
lods
ficoms
mov
pop
mov
push
pop
xchg
arpl
sub
add
adc
shrl
cld
mov
inc
push
push
jnp
push
mov
push
add
add
stos
mov
or
popa
test
ret
cmpsb
shr
adc
scas
out
jl
add
mov
sbb
xchg
pop
adc
lock
xchg
pop
jge
mov
hlt
xchg
and
or
jmp
xchg
pusha
or
dec
mov
dec
shlb
fiaddl
mov
mov
pop
repnz
mov
and
and
out
pop
dec
divb
add
jne
add
inc
or
push
stos
mov
loope
inc
jecxz
push
pop
or
push
adc
shrl
adc
lods
cmpsl
scas
jne
or
sub
xchg
and
or
mov
loopne
rcrl
dec
and
cmp
inc
mov
jo
fnsave
add
or
pop
xchg
push
sub
icebp
ret
xor
pop
lea
inc
insb
adc
lahf
cmc
stos
dec
pusha
xor
rcll
add
jp
or
and
loopne
pop
and
iret
cld
nop
into
dec
sub
push
adc
add
into
inc
test
push
xor
dec
lcall
jno
not
pusha
inc
adc
xchg
inc
es
add
ljmp
sub
aas
add
jge
hlt
pushf
orl
mov
int
push
xchg
push
fdivr
out
lcall
dec
in
cmpl
adc
adc
adc
arpl
and
in
es
pop
xchg
jmp
cmovae
push
jmp
add
loope
add
ret
incl
js
jmp
jns
in
mov
adc
push
or
shlb
jle
or
ss
sbb
pusha
add
bound
mov
in
or
mov
je
addb
insb
lods
dec
cmp
add
push
or
clc
lret
and
out
test
pop
add
sub
das
or
stos
or
and
test
jo
adc
push
dec
jno
jnp
or
jg
cmpl
popf
shrb
pop
shrb
cld
pop
les
dec
pop
add
or
clc
xor
imul
cmp
loopne
add
rcrb
popa
ret
cmpl
lahf
sub
xchg
repz
jo
and
fisubs
mov
loopne
inc
and
scas
ds
and
dec
icebp
mov
sti
jmp
test
popl
mov
decl
adc
xchg
cmp
jl
jp
or
push
push
push
iret
add
or
cmp
repnz
jno
test
mov
push
hlt
sub
ret
cli
lea
arpl
adc
lea
inc
insl
iret
sbb
add
rcll
lock
mov
shr
fbld
jmp
and
imul
loopne
addr16
mov
jns
jnp
or
mov
mov
pop
add
call
xchg
aam
jae
or
sbb
cmp
sbb
gs
xchg
out
xlat
lea
int3
repz
push
cltd
mov
orb
xchg
cwtl
mov
insl
pop
les
std
call
cltd
lea
mov
lcall
and
sub
inc
sbb
mov
jle
mov
icebp
ret
clc
xlat
adc
sub
xor
sub
inc
mov
jne
add
sub
and
jbe
loopne
ss
mov
mov
or
test
mov
out
nop
jge
bnd
or
xchg
test
stc
into
add
sbb
lea
and
adc
or
push
js
imull
push
and
mov
inc
enter
add
add
add
push
push
loope
es
dec
sahf
mov
adc
shl
dec
fsubs
mov
test
mov
lret
dec
inc
fcoms
or
push
sbb
sbb
add
push
push
xor
add
mov
dec
jb
sub
or
xor
jno
or
out
jno
rolb
sub
dec
or
cmpsl
add
je
xor
js
sub
push
dec
push
cli
ss
xchg
xchg
adc
and
pop
or
or
std
daa
or
movsb
add
fs
pusha
push
adc
adc
add
mov
cmp
and
sub
xchg
add
add
dec
std
adc
mov
inc
scas
adc
hlt
fst
notb
inc
or
lcall
arpl
inc
shl
movsl
xor
ja
pop
outsl
fs
inc
push
inc
and
dec
pop
adc
jb
push
xor
adc
loopne
icebp
push
jmp
push
int3
div
inc
js
inc
and
arpl
inc
sbb
lahf
xchg
sub
and
adcb
mov
jnp
daa
cmp
inc
jg
aaa
fiaddl
push
in
mov
and
ja
and
xorb
xchg
sarb
pusha
jge
adcb
adc
in
inc
push
js
inc
das
xchg
iret
dec
ret
lods
jmp
ret
in
push
mov
and
push
add
addl
push
add
lods
adc
shrb
dec
aad
add
push
xchg
call
fisubl
sub
test
jbe
ret
popa
daa
data16
in
push
lea
outsb
adc
adc
add
mov
sbb
xchg
fs
int3
mov
adc
ret
repnz
loopne
dec
push
fadd
inc
out
and
fsubrs
push
jp
and
fsubs
popa
sub
cmpsb
enter
push
ret
and
lret
fsubrl
inc
mov
push
int
fisttps
mov
inc
int
xchg
push
push
jb
xor
push
sti
int
outsl
push
add
rclb
mov
ljmp
push
xchg
add
out
gs
nop
fwait
sub
movsb
movsb
push
jns
imul
les
hlt
mov
and
fsubs
rclb
mov
xchg
and
or
or
or
inc
sbb
push
jecxz
js
jecxz
sbb
cwtl
sub
out
jl
xlat
add
xchg
add
sbb
and
lahf
xor
mov
scas
and
dec
mov
movsb
ja
or
les
push
push
inc
pop
movsl
xor
or
aam
sbb
push
pop
push
rorl
and
push
adc
xchg
adc
mov
test
mov
lds
add
mov
mov
cld
or
fsubl
pop
pop
pushl
adc
adc
sbb
loopne
test
ficomps
add
sbb
ret
add
add
mov
mov
pop
imul
cmp
stos
ljmp
lods
cmpsb
mov
test
mov
jns
xor
loope
push
decb
mov
cmp
push
mov
in
sub
je
push
push
test
sbbb
test
movzwl
mov
insl
jmp
jl
mov
test
push
sbb
test
or
or
jl
out
push
imul
adc
rcl
loop
loop
push
movsl
cmc
jmp
or
push
shl
push
mov
mov
lretw
adc
or
mov
stc
xchg
push
or
imul
dec
cmp
mov
inc
push
add
iret
push
and
push
rclb
movl
jge
pop
cmp
pop
adc
adc
les
out
test
shll
repz
push
aaa
movsl
cmp
scas
push
push
sbb
rclb
inc
sub
pop
repnz
in
jg
jo
adc
addr16
clc
nop
xchg
popa
js
add
clc
rorb
sbb
ror
int3
inc
cmpl
xchg
cmp
cmpsb
icebp
das
add
enter
mov
xor
jne
test
mov
dec
clc
pushf
shlb
sbb
sbb
movsb
push
icebp
cmp
or
sarb
add
lds
nop
and
or
ja
xchg
mov
jle
jmp
cmpb
and
adcb
pop
adc
pop
nop
jg
push
pop
dec
jne
push
xor
insb
or
rol
mov
movsbl
sub
xlat
dec
sub
adc
and
jae
repnz
paddb
push
push
mov
sub
movsb
inc
add
xchg
outsl
mov
adc
or
test
test
sub
push
rclb
push
xchg
rol
mov
stc
inc
and
mov
push
or
popa
loop
add
jle
fidivs
xorl
jmp
mov
ficoml
jl
pop
mov
xor
pop
movsl
push
xor
jb
xchg
inc
inc
pop
insb
sub
push
hlt
add
mov
ret
out
cmp
push
add
push
mov
test
sub
add
cmp
and
inc
jp
inc
dec
pop
dec
ja
cmp
sbbb
inc
shl
xlat
xor
sub
std
clc
xchg
xchg
notb
sahf
lcall
xchg
xchg
xchg
add
push
pop
int
xchg
xchg
or
or
jnp
or
jbe
int
int
jmp
or
por
int
int
jmp
adc
pop
adc
push
adc
dec
adc
int
int
dec
adc
aas
pop
jmp
sbb
int
int
xor
jmp
sbb
es
int
int
and
pop
pop
jmp
and
stos
movsb
int
or
addps
outsb
movsb
and
test
xchg
pop
inc
pop
mov
sbb
mov
inc
add
movsb
cmp
cmp
ret
jmp
fucom
in
cmp
cmp
ss
cmp
repz
sub
ss
repz
cmp
dec
dec
push
cmp
repz
pop
arpl
repz
repz
jl
xchg
nop
xchg
lcall
add
add
push
pop
or
and
or
or
push
movups
adc
mov
call
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
mov
pop
xor
sbb
pop
xlat
out
or
flds
pop
inc
or
push
push
adcb
mov
loope
pushf
sarb
enter
dec
xchg
cmc
dec
mov
mov
add
xchg
cli
lret
lcall
je
cmp
cmp
push
inc
test
adc
adc
mov
cmp
jb
inc
enter
test
or
xor
push
mov
sub
push
mov
inc
or
addl
pop
xchg
ret
movsl
mov
jge
jbe
cmp
inc
pop
ss
or
inc
mulb
xor
xor
inc
jmp
xchg
ss
sbb
add
mov
add
push
inc
push
mov
xchg
or
fmull
sbb
test
fistl
nop
fsts
fistl
sub
cmp
mov
lds
rcrb
lock
sbb
ljmp
and
lret
jp
jge
sub
mov
enter
int
ficoms
add
add
nop
mov
btc
jne
adc
sub
adc
mov
adc
adc
cwtl
sbb
shr
add
mov
xchg
lret
push
sbb
jbe
xchg
mov
ds
out
stos
pusha
cmp
mov
mov
in
ss
lods
aad
mov
inc
xchg
ds
or
add
scas
mov
pop
add
dec
xor
in
mov
cmp
andb
or
push
mov
ror
xor
shr
xor
decl
rol
shl
fld
ret
or
or
icebp
add
add
add
jne
inc
pop
ljmp
ret
insl
push
or
and
xor
add
add
push
add
sti
mov
in
fsubr
add
or
mov
ror
mov
fisubl
or
add
xor
and
and
mov
push
shlb
test
xor
fs
ljmp
sub
fmull
pop
add
out
inc
push
or
xlat
and
cmp
in
ror
add
add
add
add
in
jne
and
pop
roll
cmp
dec
xor
mov
cli
mov
rol
rcrl
rcll
add
push
test
fcomp
loopne
int
movsb
in
test
in
sub
dec
rcl
call
inc
inc
in
fwait
push
cmp
popa
adcl
data16
add
shrb
les
mov
rorl
xor
xor
xor
loopne
in
inc
sub
call
loopne
loopne
cmp
pop
rorl
cmp
aam
xor
and
mov
int3
and
loop
cmp
cmp
add
je
ret
or
jge
hlt
and
call
or
add
and
xor
add
sbbl
sub
insl
xchg
add
mov
jge
push
ret
rcll
add
adc
adc
sarb
sbb
insl
cmp
add
inc
fisttps
call
mov
imul
cmp
pop
fs
js
sti
rcll
call
outsb
lret
jecxz
sub
clc
jl
push
and
add
and
nop
cmpsb
subl
inc
and
in
xor
mov
cld
aam
xchg
ficompl
add
cli
mov
or
mov
rorl
dec
sub
and
call
imul
shl
rolb
dec
cmp
pop
add
fcoml
xor
inc
rorb
xorb
push
dec
daa
push
dec
shl
in
rolb
nop
add
dec
inc
stos
imul
or
add
push
xor
inc
les
rcrb
xor
cs
dec
push
enter
dec
xchg
push
pop
xor
add
cmp
enter
and
add
pop
cmp
push
leave
and
pop
int
push
test
scas
push
add
sub
push
xadd
or
xor
scas
inc
pop
aam
pop
and
rorb
pusha
inc
mov
pushf
adc
sarl
or
adc
dec
scas
fs
push
fstps
imul
enter
stc
stc
stc
mov
lods
jo
fxch
pop
push
mov
dec
inc
mov
inc
imul
fmuls
adc
pop
add
sub
jo
dec
in
adc
adc
mov
hlt
adc
mov
jle
cmp
adc
push
out
pop
add
sub
mov
and
std
andl
inc
aaa
sub
add
sub
lods
add
mov
pop
xor
mov
jg
dec
push
mov
jle
mov
and
rorb
or
or
push
test
add
clc
add
fisubrl
or
test
fldcw
sub
pop
mov
lea
jmp
decb
lea
push
sub
frstor
ret
fimull
pop
jne
mov
mov
lea
lahf
cmpb
xchg
sub
push
enter
rolb
jbe
or
fs
jo
adc
mov
or
sub
jae
push
pop
rolb
rep
jmp
adc
add
movsb
xchg
sbb
lret
std
fldt
fs
pop
fdivp
ror
mov
sbb
shr
xchg
dec
aaa
jle
fistps
sub
mov
inc
pushf
call
sbb
clc
add
movb
scas
js
ret
movl
jl
faddl
mov
ljmp
sbb
fcoml
add
push
dec
in
add
outsb
jge
jle
or
add
or
xchg
cmp
in
pop
or
leave
mov
stc
ja
lea
imul
cmp
ja
adc
ret
stos
mov
or
mov
and
dec
sbb
lock
leave
push
inc
or
push
adc
or
and
pop
in
inc
addl
xchg
and
xor
add
pusha
jbe
push
cmpsb
scas
pop
push
and
rcrb
add
pop
mov
push
and
add
pop
pop
inc
ljmp
add
call
fdivs
loopne
inc
pop
stos
xchg
icebp
mov
cltd
inc
fstps
insl
xchg
je
fwait
push
mov
lock
pop
add
add
xchg
shll
in
insb
push
xchg
dec
in
faddl
add
mov
pusha
mov
xchg
xchg
pop
rcrl
lods
sbb
add
sbb
mov
push
xchg
das
sbb
lret
out
adc
aas
mov
mov
xchg
sub
iret
cmp
sbb
lods
cmp
and
xor
push
cltd
mov
rorb
mov
add
xchg
enter
mov
and
dec
fmull
sub
ja
add
xchg
push
inc
jnp
inc
push
add
cmp
and
mov
pusha
test
or
adc
cs
adc
jl
arpl
mov
mov
icebp
or
sar
aad
xor
jbe
cli
es
lea
cmp
or
ja
cmp
and
or
js
push
fsubs
jl
or
insl
ret
sbb
inc
push
aad
or
dec
jmp
mov
or
fnstsw
cmp
jl
dec
sub
mov
mov
test
jae
ds
nop
push
cs
cmpsb
pusha
and
movsl
shlb
lods
test
and
push
lock
mov
and
mov
sbb
mov
inc
add
add
js
or
mov
adc
mov
and
rcrb
pusha
lock
inc
in
ss
mov
ret
and
adc
les
and
sbb
pop
shll
sub
mov
xchg
pop
cltd
ja
pop
into
loopne
dec
push
push
sub
mov
pusha
and
mov
fwait
and
add
push
sub
es
dec
adc
jmp
xor
add
cmp
rol
push
and
add
pop
push
add
jnp
js
jne
out
add
jb
push
imul
sbb
adc
adc
sub
mov
mov
sub
bound
lret
and
mov
add
cld
dec
push
jo
pop
push
jae
cmp
clc
rcll
add
adc
mov
mov
add
mov
push
inc
ret
mov
xchg
sub
mov
mov
rolb
pusha
dec
push
mov
push
jg
add
sti
and
fistl
push
sbb
cmc
inc
and
lret
add
fwait
push
jae
cltd
fstpt
sbb
sbb
jno
jns
addr16
mov
push
in
inc
or
pop
ja
bound
or
sahf
and
iret
cmp
pushf
push
lods
adc
fbld
test
cmp
adc
pop
jne
push
dec
pop
pop
idivb
data16
fsubrs
cmp
add
je
imul
mov
pop
jo
popa
push
neg
aas
mov
sbb
in
arpl
movsl
jne
push
jo
jp
sbb
pushf
cs
xor
enter
sbb
lds
insb
mov
xor
bound
jle
rcl
outsb
cwtl
jmp
jns
mov
xchg
mov
or
inc
push
push
in
pusha
rcll
jg
push
aam
xor
mov
mov
dec
sbb
add
lcall
jecxz
inc
jo
je
ficoms
in
in
and
xchg
lea
push
repz
push
test
cmp
push
mov
push
andb
xor
lods
and
mov
rorb
orl
in
cmp
push
xchg
sub
andl
adc
loop
push
inc
push
mov
push
inc
inc
and
jnp
pop
cmp
cmp
mov
push
scas
pop
jmp
dec
enter
insl
cwtl
add
daa
pop
and
inc
repz
jae
ret
insl
pop
sbb
add
push
lds
sahf
adc
jns
dec
jb
or
add
adc
jmp
stos
mov
cld
sub
push
inc
mov
rolb
add
out
xchg
or
mov
mov
push
xorb
imul
or
movsb
inc
rcrl
inc
rorl
pusha
cmp
int
sub
cmpsb
test
stc
stc
push
or
aas
adc
movsl
or
xor
push
mov
leave
dec
fnstenv
adcb
inc
push
out
adc
imul
mov
stos
loopne
shll
xchg
pop
cmpsb
push
push
nop
and
lods
xchg
cld
cmpl
push
arpl
pushf
adc
push
xchg
mov
dec
cmp
mov
pop
int3
sahf
fwait
and
add
sbb
icebp
mov
push
xchg
fwait
lock
sbb
push
popa
je
inc
mov
data16
xchg
inc
rclb
fwait
movb
arpl
sub
mov
fisubl
loop
pop
fwait
push
hlt
ss
push
loopne
mov
push
es
mov
dec
sub
mov
pop
sub
cltd
ret
push
in
xchg
sbb
je
mov
cmp
adc
lcall
and
sub
adcb
adc
stc
mov
jae
add
xor
adc
xor
bound
mov
push
lret
push
scas
cmpb
lcall
test
jecxz
mov
inc
loop
js
jg
call
add
xchg
inc
dec
inc
icebp
icebp
test
lds
movb
mov
inc
pusha
and
dec
sbb
adc
ds
lds
mov
dec
mov
xchg
pop
push
push
inc
shll
movsl
xchg
or
imul
and
je
push
xor
or
loope
sbb
fldcw
dec
dec
ds
je
sti
sub
and
pop
lcall
pop
leave
fisubl
mov
or
xchg
xor
xchg
pop
leave
push
mov
ss
push
in
rorb
push
rorb
xchg
push
out
push
push
or
inc
lds
cmp
sub
sub
inc
xchg
and
jg
mov
adc
xor
and
imul
cmp
push
mov
xchg
test
sbb
loope
test
push
out
xchg
add
sub
nop
adc
sub
dec
sbb
icebp
dec
stc
mov
inc
and
je
sub
or
stos
hlt
xor
xchg
cs
dec
sbb
cs
and
and
ds
jl
lret
popf
mov
push
in
fwait
out
jo
xchg
cmp
fistpl
rorb
enter
leave
leave
sbb
arpl
push
or
movb
imul
jne
push
cltd
or
out
or
ja
out
dec
sub
push
sbb
or
jle
jecxz
xchg
cwtl
cld
or
lea
mov
outsl
cli
cltd
lea
or
mov
adc
push
xchg
or
or
mov
or
and
cmpl
jne
xchg
ds
fstl
sti
push
incl
mov
in
push
ret
arpl
sbb
out
cs
sbb
and
ret
js
mov
rorl
imul
inc
sarl
inc
cmpsb
cmp
shlb
sbb
xchg
push
push
cmpsb
jmp
sbb
jge
in
mov
xchg
sbb
cli
xchg
fimull
pushf
bound
dec
pushf
mov
std
and
scas
sub
or
add
mov
jp
fcomp
add
or
pop
lea
add
ret
icebp
scas
add
mov
pop
fidivrs
mov
push
push
or
inc
lods
pop
lret
xchg
lods
cmp
lods
cmp
lods
xchg
mov
inc
push
mov
test
push
in
repnz
xchg
push
xor
ret
pushf
add
insb
and
push
adc
movzbl
push
push
xorb
je
ds
pop
repnz
test
push
inc
pusha
cmp
xor
add
pop
cmp
adc
mov
test
aaa
pushf
les
adc
hlt
pop
in
mov
lea
daa
jmp
push
jg
je
cmp
mov
cmp
jge
add
adc
mov
pop
inc
inc
cmp
lea
sub
lods
leave
adc
xor
mov
mov
shlb
add
lock
clc
jg
xor
cld
shll
mov
add
push
add
add
repnz
push
aaa
add
lcall
pushl
in
dec
je
add
adc
cmp
dec
or
mov
shr
cmp
mov
mov
or
mov
sub
xor
inc
in
fnsave
popa
call
pop
cli
mov
fwait
mov
cli
and
fistps
jnp
or
je
stos
sub
into
out
loop
adc
mov
bnd
inc
add
jmp
sub
decl
xor
add
push
add
jne
push
mov
push
sbb
adc
mov
fimull
cmp
and
add
xor
inc
inc
mov
xor
inc
orb
adc
jmp
sbb
cltd
inc
rol
idiv
inc
inc
imul
add
push
cmp
cmp
cld
cmp
pop
fiadds
aam
xchg
scas
je
mov
add
push
add
or
cmp
mov
mov
cmp
or
or
nopl
lock
not
push
clc
cmp
je
cmpsl
into
pop
jbe
inc
test
inc
cmpsb
mov
daa
pop
adc
push
cmp
sarb
in
clc
jae
cld
mov
imul
jae
ficompl
jmp
es
xor
mov
aas
pop
xchg
sub
repz
jg
outsl
cmp
je
cmp
push
cmp
jne
inc
jne
inc
adc
clc
into
sub
add
or
inc
pop
jb
push
add
mov
add
cld
mov
ret
movsl
cmp
jne
mov
add
loop
sarb
cmp
jne
mov
loopne
adc
sub
cmp
add
add
mov
sbb
inc
mov
ficompl
fnstsw
jl
or
jg
mov
jmp
and
xor
jmp
inc
push
and
mov
mov
jp
add
shl
dec
mov
sub
cltd
movsb
fstp
mov
mov
and
test
je
lret
out
jg
imul
and
mov
mov
mov
lcall
inc
pushf
or
sbb
push
out
mov
jle
and
push
jne
js
pushl
daa
sbb
sbbl
mov
sti
inc
jl
pusha
mov
jg
push
fs
imul
mov
add
jge
add
cmp
icebp
lods
aaa
lcall
movsb
andl
xor
push
daa
inc
jge
adcl
js
mov
movsb
xor
xor
fsubs
inc
cmpb
pop
adc
add
and
mov
mov
cwtl
idivb
sahf
clc
push
mov
push
out
jmp
xor
inc
dec
mov
and
fs
cmpsl
mov
sbb
mov
xchg
popw
cmp
push
scas
jmp
movsb
std
ret
es
fdivrs
push
cmp
popa
pop
pop
sarl
rsqrtps
and
cmpsb
mov
cmp
add
je
and
pop
mov
pcmpeqb
pop
ja
and
mov
test
insb
stos
pop
mov
clc
arpl
test
push
lock
mov
mov
stos
xor
bound
inc
mov
or
imul
je
xor
sub
or
shll
into
rcll
dec
jp
test
cwtl
js
add
ret
xchg
sbb
dec
rolb
or
inc
dec
test
scas
aaa
cwtl
mov
dec
jl
nop
or
dec
adc
xchg
pop
cwtl
mov
adc
mov
je
es
inc
xor
xor
mov
sub
jge
jne
add
sub
add
add
push
sbb
add
add
and
aam
movsl
loope
xor
inc
inc
inc
fsubl
dec
jl
sub
add
movsb
fs
sub
and
mov
or
fimull
jge
push
lahf
or
jne
inc
push
std
imulb
push
adc
data16
aaa
pop
or
jmp
push
rolb
mov
mov
fnsave
push
ss
xchg
sbb
jno
rorl
adc
adc
mov
or
outsl
push
jle
lahf
inc
xchg
lret
hlt
jl
in
xchg
xor
or
add
enter
jno
sbb
xor
outsl
and
cmp
dec
push
movb
xor
add
cltd
divb
rclb
incl
cmp
cmc
add
pop
xor
int
popa
cmp
pop
push
ljmp
inc
loopne
nop
in
sti
mov
xor
pop
stc
cmp
xor
sbb
inc
nop
add
inc
popa
xchg
jnp
ds
cmp
outsb
mov
ret
add
xor
movl
or
movsb
je
es
xchg
shrb
movl
outsl
pushf
in
je
sub
or
aas
nop
fs
jmp
xor
mov
sbb
loopne
cmp
push
jmp
incb
and
jns
cmpb
jne
pop
bound
mov
sub
mov
imul
loope
lods
jne
add
ja
dec
push
dec
xchg
sbb
lahf
add
mov
sub
add
lods
loope
popa
aam
xlat
mov
mov
mov
pusha
lret
cmp
fcomps
xchg
test
inc
jge
xor
and
clc
or
jge
adc
je
stos
rolb
cmp
sub
fists
lock
xchg
mov
dec
loopne
vmptrld
pop
repnz
sbb
add
call
or
pop
adc
sub
push
addb
rcl
and
daa
mov
cmpl
outsb
mov
mov
mov
sub
dec
and
xor
pop
jne
clc
fsqrt
xchg
dec
and
test
dec
push
jp
dec
jae
inc
pop
loopne
sbbl
jns
aaa
sbb
insb
je,pt
inc
fs
push
jno
or
scas
sbb
mov
rcrb
cli
add
xorl
push
xchg
cmp
dec
adc
mov
ds
fisttps
xor
imul
or
xlat
push
clc
push
arpl
movb
cmp
xchg
jne,pt
cmp
fistl
cmp
push
sbb
outsl
add
push
jnp
cmp
push
or
push
push
das
fldpi
rclb
jbe
push
push
and
cmpsb
cli
jle
adc
xor
adc
xor
call
sub
sbb
inc
push
addr16
loop
mov
inc
loope
cli
sub
sbbb
xor
mov
mov
lcall
cmp
jmp
aam
mov
stos
and
stos
dec
mov
sahf
push
movsl
loope
mov
lods
bound
sbb
push
jae
and
mov
fists
mov
test
pop
fisttps
jb
inc
jmp
push
dec
arpl
call
push
mov
inc
sti
fnstenv
dec
insl
pop
xor
push
adc
sbb
js
ss
push
or
fidivl
addl
hlt
dec
lock
je
pop
mov
xchg
cmp
cmpsb
add
inc
ljmp
mov
mov
xor
dec
jne
and
adc
and
inc
je
dec
adc
dec
js
pusha
arpl
rclb
push
cmp
dec
cld
minps
dec
fdivl
sbb
lea
fsubrl
inc
push
scas
push
inc
mov
and
mov
jg
fsubrl
aaa
push
pop
mov
dec
adcb
es
cmp
rcl
push
cs
mov
pop
outsl
push
push
jecxz
andb
jmp
push
or
or
mov
and
xchg
mov
add
stos
sbb
cmp
or
pusha
jge
dec
addl
shl
fstps
aas
add
and
add
or
cmp
iret
test
out
add
xorl
in
dec
push
movl
sahf
mov
ja
cwtl
inc
inc
fsts
lret
pop
add
fisttps
xor
or
and
and
sbb
add
in
push
adc
or
push
jle
adc
clc
movsl
xor
jno
bound
dec
sbb
data16
add
fdiv
rcrl
leave
mov
into
je
mov
jecxz
insl
lds
jmp
mov
sub
sub
sbb
sbb
mov
push
test
jb
cmp
or
sbb
shl
and
rolb
shlb
xlat
in
sub
fsubr
push
dec
dec
inc
cmp
test
mov
add
out
ret
addr16
push
cs
stos
xchg
mov
xor
loope
jle
dec
inc
or
je
sub
cmc
in
sbb
and
or
or
jmp
into
cli
add
or
or
or
xchg
mov
addw
or
jns
cmp
and
in
dec
clc
xorb
adc
dec
je
push
push
leave
push
sub
sahf
mov
popa
pushf
fstpt
scas
cmp
push
xor
or
mov
jecxz
shrl
sub
push
push
xchg
jns
in
push
mov
xor
pop
sub
test
ret
add
push
push
scas
cmpsl
das
jl
bound
mov
add
sub
mov
push
push
fmuls
cmp
xchg
pop
inc
mov
or
or
pop
xor
adcb
push
pop
or
fsubl
loopne
sahf
insb
repz
imul
movsb
push
mov
fwait
mov
jne
call
cmpl
popf
add
in
lock
cmp
sbb
aad
sbb
adc
and
add
push
addl
imul
jl
orb
enter
or
pop
adc
fs
mov
xchg
xchg
push
push
add
sub
add
sub
fwait
or
push
sbb
clc
pop
and
in
das
jno
fdivrl
and
inc
add
test
or
mov
aam
sbb
push
mov
adc
shrl
lret
rep
stc
push
cmpsl
mov
nop
mov
nop
add
dec
push
and
call
xorl
or
mov
pop
pop
js
aam
dec
add
add
add
mov
inc
pushf
mov
or
out
mov
jmp
test
iret
hlt
mov
add
xor
jae
cmpsl
test
dec
shll
pop
jl
mov
pop
ds
cs
ss
out
jo
add
jg
cmp
call
pop
adc
xchg
mov
inc
xchg
and
mov
jg
push
inc
fimull
jmp
and
cmp
cmp
add
and
mov
push
sub
xchg
fimuls
jo
inc
arpl
test
lcall
cmp
rcl
filds
push
ret
outsl
cmp
jno
or
pop
pusha
cmp
adc
jne
lods
adc
cmc
inc
and
or
dec
rorb
stc
ss
pop
adc
lods
test
leave
lds
sbb
push
jb
jno
adc
lea
push
pop
nop
xor
pusha
add
lea
inc
push
pop
adc
adc
or
or
xchg
adc
push
add
and
lock
sbb
mov
push
int3
xor
je
mov
ds
adc
and
push
into
push
mov
xor
jg
ljmp
inc
or
or
std
jo
psubq
cmp
or
or
mov
popf
sub
pop
sbb
jbe
int
cltd
dec
enter
mov
ja
aaa
icebp
lods
push
nop
ret
mov
or
pop
fs
out
test
in
inc
or
or
dec
sub
subl
data16
rcll
pop
mov
adc
dec
adc
mov
inc
mov
sbb
inc
clc
sbb
out
daa
mov
jg
cmp
push
out
and
je
aam
and
test
dec
aad
loope
xor
es
lea
jne
dec
pop
adc
cmp
loopne
pop
scas
jnp
inc
jne
pop
push
sub
lods
mov
pop
or
inc
jne
out
or
rolb
push
popa
push
mov
mov
xor
xor
sub
or
dec
or
jmp
mov
jecxz
lea
test
or
hlt
lret
dec
pop
dec
cmp
cld
sbb
adc
lcall
shll
in
xchg
sbb
insb
xchg
push
add
sub
and
out
xchg
dec
xchg
movsl
data16
movsl
inc
push
in
mov
mov
and
stos
cmp
adc
sub
das
adc
movzwl
icebp
xor
aam
sub
loopne
xor
shr
sbb
orb
push
mov
in
mov
aaa
stc
mov
jmp
mov
or
inc
or
rclb
mov
imull
adcb
insb
cmpsb
push
pop
sub
adc
mov
sbb
push
cmp
pop
mov
bnd
sbb
mov
adc
dec
insb
lock
push
push
xor
add
adc
mov
movsl
outsb
inc
loop
or
shr
rep
or
dec
in
adc
data16
movsl
or
fdivl
sub
lahf
xchg
mov
sbb
in
adc
subb
les
xor
frstor
inc
xor
fwait
pop
pop
shrb
scas
stos
pop
jg
js
cmp
roll
push
imul
sbb
cltd
dec
fisttps
cmp
ja
xor
jg
nop
shlb
cwtl
daa
push
or
js
mov
xchg
xchg
inc
je
dec
mov
push
shrl
es
and
sub
dec
and
jmp
mov
add
inc
jmp
inc
daa
stc
mov
jo
sub
inc
adc
js
je
ret
divl
add
sbb
adc
mov
loope
imul
pop
lret
cmp
push
jmp
in
jnp
js
lock
jmp
addl
arpl
loopne
jle
inc
add
pop
xchg
je
sub
loopne
popf
jno
mov
mov
test
pop
xor
scas
cld
call
fisttpl
sub
aad
popa
cmpsl
and
jg
push
inc
addr16
dec
adc
das
cmp
inc
out
and
lcall
add
lea
adc
lahf
push
ret
sbb
mov
adc
repz
xor
inc
xchg
and
sar
loopne
ja
nop
cmp
popa
cmpsl
fiaddl
xor
jp
roll
loopne
sbb
sbb
aad
push
in
push
cmp
ret
sbb
js
data16
add
and
xchg
into
nop
jge
pop
cmp
ja
aad
push
jmp
and
mov
push
xchg
add
sub
adcb
sub
adc
ds
ja
inc
jmp
add
movsl
xor
push
in
lock
xchg
ds
imul
scas
and
push
jbe
imul
adcb
outsb
sbb
clc
dec
xor
out
or
mov
inc
push
mov
jbe
jmp
add
add
cmp
mov
mov
jne
push
into
jbe
inc
mov
dec
fdiv
pushf
sub
add
gs
les
aas
test
and
subl
je
sar
xor
in
sub
mov
sarb
gs
pop
sbb
mov
sbb
int
xor
cmp
push
jb
inc
pop
outsl
lods
ds
jg
dec
mov
inc
push
sbb
push
nop
mov
sbb
clc
loope
inc
inc
je,pt
mov
pop
movsb
mov
add
adc
insb
clc
sub
sahf
or
bound
add
xchg
dec
push
adc
ds
mov
inc
mov
mov
or
push
inc
iret
sub
or
sbb
fucomip
xor
add
lds
add
xor
add
pop
je
cmp
jbe
push
popf
push
xor
and
stc
jmp
pop
je
shrl
lret
movl
mov
hlt
test
ret
add
or
inc
movsl
adc
push
mov
cltd
test
sbb
cli
pop
inc
daa
or
adc
nop
nop
testb
or
inc
inc
inc
xchg
mov
movb
arpl
xor
mov
push
cmp
or
mov
jo
mov
dec
movsl
shlb
mov
and
or
aas
scas
stos
xlat
sub
add
sub
inc
jo
ljmp
dec
sbb
cmpb
je
cmp
or
loopne
push
mov
xor
dec
stc
xor
stos
or
xchg
jp
outsb
adc
inc
data16
test
dec
cli
sub
and
insl
or
push
or
dec
shll
into
dec
dec
mov
sbb
push
ljmp
lods
xlat
sbb
cwtl
insb
addr16
cmc
lret
jne
mov
adc
addr16
xchg
jae
jmp
sub
cmc
fbld
inc
push
xor
pop
div
hlt
inc
pop
nop
pop
add
sbb
ljmp
js
xchg
push
lcall
fdivp
jo
adc
xor
mov
or
gs
mov
jmp
js
lods
sub
js
cmp
sbb
xchg
mov
jo
gs
cmpsl
inc
rolb
or
orl
or
add
or
ljmp
inc
mov
cmp
push
shlb
adc
sub
shrl
or
fidivl
bound
inc
add
adcl
and
fidivrl
mov
int3
add
add
nop
lods
add
imul
pop
or
jb
cmpl
mov
fdivr
cmp
jb
neg
lret
mov
rorl
jmp
xlat
rorb
loopne
add
or
push
out
push
rep
mov
dec
ljmp
add
scas
ret
push
pop
sub
add
shrb
xchg
and
clc
into
xchg
cmc
out
mov
test
or
fimull
and
pop
and
jne
sub
out
sbb
in
push
sub
inc
adc
mov
jle
xor
add
add
sub
in
push
sub
cwtl
scas
pop
push
pop
and
outsb
adc
mov
fnstcw
cs
and
lds
lea
jno
cmc
out
pop
rolb
movd
movaps
lret
insl
mov
shlb
jle
xor
lods
aas
ret
rcl
lret
je
cmp
fisttps
lret
or
jg
mov
out
ljmp
and
in
add
jnp
push
cmc
mov
aam
ret
or
pop
js
push
hlt
adc
mov
pop
lock
add
shl
imul
rorb
sti
addsd
int
add
sbb
loopne
push
dec
sbb
out
repz
pop
test
rcrw
and
orb
and
add
rolb
pop
mov
add
add
xorl
test
mov
pop
popa
xlat
adc
lcall
imul
rol
decb
push
std
cld
repz
addl
xchg
xchg
jmp
std
rcrl
cmp
mov
mov
mov
arpl
inc
dec
pusha
sub
sub
or
loop
sub
test
jmp
push
add
mov
push
sub
add
in
clc
sbb
arpl
ja
mov
jbe
pop
insl
jg
je
cmp
jne
inc
cmpb
out
addb
add
sub
sarl
adc
add
fimuls
or
mov
push
int3
ret
daa
xchg
ljmp
xchg
jae
add
sbb
icebp
aad
jmp
mov
nop
push
mov
int3
sbb
xor
or
xor
mov
decl
xor
lret
lret
fimull
inc
xor
out
add
xchg
xchg
xor
loope
sbb
push
dec
loopne
loop
pusha
adc
adc
popf
xchg
push
mov
mov
mov
sti
or
mov
inc
push
jne
popa
imul
push
daa
mov
sbb
movb
and
lcall
sbb
leave
ret
jmp
or
adc
or
dec
sbb
jecxz
adc
sub
inc
test
inc
cmp
pop
outsb
aas
dec
adc
cmp
ficompl
jnp
je
dec
pop
lcall
into
mov
lock
movl
imul
and
jno
hlt
pop
lret
mov
jecxz
add
fnstenv
pop
pop
pop
and
mov
out
fnstsw
or
or
cmp
stos
adc
or
push
pop
mov
push
cltd
hlt
push
aaa
jle
and
les
mov
push
insl
enter
jo
or
cmp
xor
cmp
adc
aam
arpl
inc
xchg
int3
push
push
sbb
imul
push
mov
je
xchg
andb
mov
mov
inc
sub
xchg
cmp
inc
jb
or
adc
ja
movsb
xchg
outsb
mov
fidivs
inc
and
mov
test
adc
data16
test
add
jne
pop
push
push
jmp
insl
jle
or
enter
and
sbb
pop
fwait
add
shlb
jns
adc
mov
pop
rcr
or
push
jmp
in
pop
loop
icebp
xor
test
push
rcl
add
pop
lret
xchg
shrl
rcr
or
jmp
push
or
stos
cwtl
imul
outsl
shld
inc
or
xor
push
lock
dec
lods
mov
and
lock
insl
cmp
aad
jo
dec
xor
hlt
mov
inc
mov
shl
cmp
sbb
mov
cmp
and
cmp
cmpb
or
cmp
jne
dec
jmp
sar
popa
add
lret
jne
mov
je
inc
aaa
push
lds
mov
push
loope
sub
dec
pop
enter
adc
adc
cmp
fcomps
dec
mov
inc
mov
stos
inc
and
mov
pop
add
outsl
mov
enter
addb
daa
pop
xchg
jo
dec
cmp
movsb
sbb
pop
and
les
pop
pop
jne
fdivs
mov
adc
into
cmp
jb
repz
fldt
movsl
jmp
mov
inc
add
push
sub
fxch
in
cmp
loopne
push
fs
dec
and
mull
and
inc
push
and
pop
pop
mov
push
adc
inc
add
add
dec
mov
int3
lea
dec
addr16
cmpsb
sub
pop
jbe
inc
xor
xchg
mov
jnp
inc
or
push
lods
push
movsb
pushf
dec
repz
mov
inc
in
sahf
out
call
out
sahf
out
hlt
hlt
clc
clc
and
mov
popa
clc
add
add
sbb
jmp
cmp
jno
and
mov
nop
inc
pop
sti
push
andl
inc
and
mov
ret
push
lea
jl
cld
pop
and
repnz
cld
out
insb
addr16
adc
xchg
into
lea
daa
stc
sub
pop
nop
adcb
push
int3
mov
add
out
add
dec
sub
jns
push
out
push
add
lods
dec
dec
addr16
mov
fs
mov
repz
jnp
sub
xor
inc
dec
cmp
mov
push
arpl
sbb
sbb
cmp
repz
adc
iret
repz
or
or
add
ficomps
or
jl
addr16
push
add
pop
mov
daa
frstor
push
xchg
dec
lahf
and
jbe
leave
pop
inc
insl
add
jae
jmp
inc
and
push
fimuls
push
inc
outsb
stos
mov
mov
stos
test
cmp
jae
sub
in
add
push
and
ficoml
shlb
cmp
adc
aad
cwtl
sbb
or
mov
push
mov
loopne
and
cmc
inc
and
inc
test
loop
mov
inc
popf
pop
outsl
push
mov
xor
pop
or
xchg
cmp
mov
jmp
andb
test
mov
shl
rol
ret
int
lods
mov
cmp
rcrl
leave
xor
cltd
out
pop
jmp
push
sub
jl
mov
xchg
notb
packssdw
jmp
cltd
pop
std
jb
and
add
jecxz
loop
mov
inc
fs
push
lcall
pop
push
jle
push
dec
js
xchg
arpl
jno
add
adc
fldl
mov
mov
xchg
cmp
push
mov
cmp
into
lea
cmp
mov
lret
sub
cmp
jne
mov
adc
or
add
mov
sbb
sbbb
add
push
adc
jl
cmp
xchg
inc
jne
imul
imul
mov
push
and
xor
es
jne
adc
lods
adc
dec
pop
sbb
and
add
sbb
out
mov
push
inc
pop
ljmp
add
sbb
cmpl
dec
faddl
call
sbb
or
dec
sti
sbb
movsb
push
push
pop
dec
pop
and
js
in
mov
mov
cmp
jns
ja
pop
fnstsw
outsl
fisubrl
mov
loop
stc
ds
mov
dec
or
cld
add
lret
faddl
or
cmpl
fstpt
push
shll
shlb
xchg
inc
xor
or
cld
sbb
and
testb
xchg
ljmp
rolb
add
idivb
xor
adc
or
adc
or
test
pop
xchg
loope
in
js
ljmp
inc
shr
or
mov
jne
scas
mov
add
adc
iret
jl
and
xlat
jge
lods
lods
mov
push
ljmp
in
sub
fisubrs
add
add
push
push
sub
and
test
mov
fs
js
lea
ds
jle
in
js
or
pop
cmp
xor
je
mov
pop
pop
fisubl
outsl
cs
adc
sbb
lret
fadds
shl
fdivrs
fcoms
sbb
and
push
leave
fldt
push
or
or
sbb
in
add
clc
inc
daa
out
push
sbb
and
mov
jb
ljmp
and
and
fsubr
sbb
lea
addl
cmp
popa
push
add
adc
jmp
push
add
sbb
add
jle
or
xorl
sub
int
mov
inc
clc
mov
fstl
lcall
or
or
andl
ret
xor
negl
cld
out
inc
punpckhdq
pop
out
inc
xor
or
nop
add
adc
bound
add
inc
adc
ror
addr16
mov
dec
sbb
addl
cs
push
andb
push
mov
or
sbb
jne
aas
pop
and
jmp
cltd
sub
sahf
or
push
xlat
pusha
insl
push
subb
inc
clc
sbb
add
fsubrl
or
shrb
xor
inc
dec
push
rolb
push
test
shl
ret
sbb
rcr
sbb
mov
mov
mov
add
out
xchg
pop
jb
sub
jl
and
rclb
pop
rclb
test
push
inc
push
jo
xor
xchg
and
dec
loop
sbb
mov
cltd
repnz
and
dec
loop
cwtl
xor
daa
dec
jne
jmp
xchg
adc
sbb
repnz
int
out
clc
push
fimuls
dec
jne
mov
cmp
lock
push
cmpl
pop
mov
mov
push
sbb
lcall
pop
cmpsl
cmpl
jno
bound
sar
shlb
lea
push
outsb
into
pop
or
roll
ljmp
push
cmp
jne
mov
push
cmp
jne
sahf
out
imul
call
lahf
mov
mov
jb
jns
insl
push
inc
incl
dec
mov
jns
out
jmp
std
push
xor
cld
iret
lcall
scas
adc
in
adc
cmp
adc
inc
inc
inc
and
pop
push
add
pop
repnz
test
add
jge
inc
add
rorb
add
jmp
push
push
push
subb
xorb
dec
and
mov
or
push
loopne
int
mov
or
add
adc
add
xlat
outsb
and
adc
lahf
or
inc
and
or
arpl
dec
and
movsb
pop
pop
pop
pop
orl
adc
pop
add
lea
jmp
movb
jmp
push
mov
pop
add
dec
dec
jne
fmuls
cli
outsl
xor
pop
jg
add
mov
into
sub
test
pop
orl
arpl
push
push
push
push
or
cmpsb
test
adc
push
pop
sub
jae
out
hlt
or
and
inc
add
lods
lea
jne
add
push
pop
and
mov
add
or
pop
pop
addb
adc
push
push
sub
pop
sbb
nop
sbb
or
cmp
leave
adc
daa
call
or
or
jo
inc
mov
push
xchg
lock
pushf
test
jle
inc
adc
es
leave
and
fstpt
lock
xor
cs
hlt
mov
bound
test
mov
es
sbb
ret
ljmp
cmpsb
push
and
fdivrs
fdivs
jecxz
mov
jg
lea
add
not
and
sub
add
pop
mov
mov
xchg
ret
arpl
sub
adc
mov
pop
clc
adc
push
mov
xchg
sub
aam
addr16
ja
int
fs
jne
pop
mov
push
adc
rcrl
inc
or
sti
mov
stc
and
mov
inc
je
mov
lea
neg
mov
mov
mov
sbb
or
add
jmp
or
mov
out
lret
inc
inc
push
fs
dec
pop
insb
sahf
sbb
scas
mov
pop
add
mov
inc
cmp
jb
jno
add
jo
push
add
data16
mov
pusha
pop
ret
and
cmpb
scas
adc
adc
or
pusha
iret
sbb
hlt
pop
push
sub
or
movsb
shl
push
adc
xor
mov
divl
lret
scas
add
inc
dec
stc
addl
xor
add
loope
jne
and
or
add
add
jne
dec
subl
sbb
test
loopne
ljmp
out
repz
stos
and
faddl
aam
pop
adc
jmp
pop
addr16
mov
sub
cld
sbb
orb
add
mov
or
and
out
xor
mov
or
lock
in
mov
xor
sub
or
jl
mov
jg
fbld
add
mov
cmpl
test
push
add
add
nop
pop
inc
xor
xor
in
lods
icebp
mov
mov
inc
jmp
cmp
sbb
jmp
adc
imul
fdivl
sub
pop
lcall
inc
sub
jg
xlat
push
ss
mov
or
and
adc
lds
in
jne
pop
mov
jecxz
fmuls
sbb
loopne
mov
das
test
dec
mov
and
je
lock
sub
je
lea
jno
rcrb
sub
add
leave
adc
fwait
add
test
or
test
jbe
push
add
and
dec
movsb
and
dec
push
rcrb
movsb
jecxz
mov
mov
adc
shl
cld
std
mov
add
xchg
stos
jno
adc
sub
mov
inc
xor
add
inc
rorb
andb
ret
jmp
push
in
push
test
or
sbb
jmp
adc
or
aaa
jne
mov
icebp
mull
or
add
repz
add
sbb
add
shlb
pop
insb
xor
add
aas
insb
xor
jo
xlat
in
inc
jmp
sub
cltd
nop
add
orl
sbb
int3
push
fimuls
adc
mov
imul
in
ds
mov
insb
sbb
xor
ljmp
jne
push
adc
push
sub
fnstsw
inc
mov
jno
and
and
mov
adc
in
cmp
jb
lea
push
adc
lret
fisttpll
adc
pop
cs
pop
popa
ret
clc
gs
icebp
xchg
mov
sti
push
clc
mov
xchg
lea
and
adc
xor
pushf
xchg
cltd
clc
addl
ret
jne
or
rcl
push
jno
and
push
inc
sti
or
jnp
xchg
insl
pop
jmp
dec
pop
dec
ret
push
push
imul
pop
dec
sub
mov
inc
cmp
in
or
movsb
and
jns
testb
call
imul
push
mov
and
add
addl
mov
pop
decb
cvtps2pi
jmp
mov
addl
add
jp
xor
clc
inc
and
adc
je
xor
inc
jecxz
inc
and
xor
add
add
add
fdiv
inc
or
push
lret
repnz
mov
inc
sar
andl
pop
fisubrs
movsb
inc
dec
sbb
push
out
stos
ret
cmp
or
gs
lcall
rcll
js
xchg
data16
sub
ret
mov
and
jmp
xor
xor
push
or
adc
jle
mov
les
ja
rcrb
jne
mov
pop
or
mov
js
cmc
pop
subl
inc
mov
add
push
dec
push
jge
inc
or
or
dec
rclb
sbb
enter
movl
outsl
pop
adc
push
in
mov
push
repnz
insb
push
data16
mov
imul
mov
decl
cmp
pop
imul
sub
inc
mov
jbe
les
pop
idiv
decl
mov
add
xchg
leave
push
mov
pop
cmc
stos
scas
lcall
xor
cltd
cmpsb
push
pusha
adc
rcll
xor
imul
ljmp
dec
dec
loopne
frstor
cmp
mov
sub
lcall
test
xchg
mov
sbb
mov
in
and
add
sub
add
add
inc
adc
or
repnz
repz
hlt
add
or
enter
mul
or
push
pushf
push
and
loopne
mov
push
inc
pop
push
push
rorb
inc
add
inc
push
pop
js
stos
xchg
jnp
push
jge
mov
dec
inc
jnp
push
in
mov
rolb
lods
add
addl
cli
sbb
out
pushf
mov
inc
adcl
ret
inc
loope
push
adc
mov
fsubrl
push
push
les
idiv
adc
icebp
add
fs
push
add
sbb
adc
ret
mov
sbb
in
or
or
push
in
dec
push
or
aam
jmp
dec
je
add
mov
dec
jne
push
pop
cmp
leave
stos
bound
in
fisubrs
sbb
add
jmp
sub
push
mov
push
push
xor
sti
jbe
mov
cmp
push
push
sub
push
lea
push
test
sahf
sub
dec
jb
cmpsl
or
adc
add
pop
inc
xchg
lcall
push
push
addr16
jne
mov
cmpsl
or
packuswb
add
dec
fcoml
inc
jne
jb
mov
in
push
repnz
xchg
dec
add
cmp
and
dec
xchg
cmovp
jns
jns
mov
or
push
add
sub
push
rolb
add
js
rorl
js
jbe
scas
cmp
mov
add
ja
out
pop
std
lret
adc
or
dec
jno
jae
push
jmp
aas
lcall
mov
dec
push
pop
clc
inc
arpl
inc
loopne
fcompl
fsubrs
add
add
cmp
jae,pn
add
adc
idivl
mov
jmp
cmp
jae
stos
arpl
or
mov
push
mov
push
mov
sbb
subb
inc
pop
push
add
int3
inc
sub
mov
loop
and
decl
add
sub
push
sbb
add
insb
in
cmp
call
fsubrl
push
jl
sub
sub
je
or
dec
sbb
pop
xor
sbb
shl
jns
push
adc
or
mov
sub
mov
adc
xchg
imul
pusha
ss
cli
or
lea
stc
mov
and
dec
js
sbb
and
movsl
jo
addr16
or
push
pop
int
xor
decl
das
pushl
mov
lock
sub
sub
push
push
lcall
push
and
sub
pop
sub
dec
add
and
repnz
dec
add
ret
add
shlb
rcrb
imul
cmp
lret
push
imul
dec
sbb
push
inc
test
pushf
xchg
lods
movsl
stos
sbb
mov
notl
cli
insl
or
cmp
push
subb
pop
movsb
nop
loopne
xchg
sarl
inc
cmovbe
dec
loope
data16
jge
sub
cmp
je
fsts
stc
xchg
clc
push
xchg
mov
mov
mov
fs
cmc
mov
fs
dec
push
mov
sbb
jge
insl
inc
push
mov
pop
adc
xchg
mov
shlb
out
rcll
xchg
add
cmp
sub
jmp
cmp
or
mov
pop
movsb
inc
mov
popa
push
mov
jno
mov
and
and
inc
xor
aas
lods
inc
ftst
jg
add
dec
out
push
cmp
pop
sets
push
pop
cmp
pop
mov
inc
push
loope
push
mov
jg
loopne
test
aam
nop
flds
dec
sarl
mov
inc
fdivrs
mov
lret
inc
pushf
insb
sbb
inc
xorb
stos
ja
and
mov
inc
leave
rol
out
lds
or
jmp
xchg
xor
jge
orb
and
xor
lea
aaa
jb
call
cs
push
sub
cwtl
xor
ret
dec
fmulp
add
popa
mov
stos
xchg
mov
jmp
mov
bound
dec
and
sbb
xchg
imul
push
mov
jl
test
cmp
test
icebp
adc
cmpsb
jmp
aam
pop
sbb
cmpsl
lret
movsb
sbb
mov
inc
xchg
sub
leave
outsl
jecxz
cmp
jne
and
movsl
sbb
mov
xor
mov
in
or
arpl
clc
rcr
je
and
dec
pop
sub
loop
mov
imul
test
shll
out
shll
mov
imul
lcall
adc
stc
and
jno
sub
dec
out
fisttpl
jmp
adcb
stos
ljmp
push
xor
xchg
sbbb
adc
dec
add
dec
in
outsb
test
jbe
mov
popa
insl
pusha
cli
rorl
rcl
daa
dec
inc
pop
movsl
in
shlb
gs
lock
dec
push
popf
jmp
xchg
push
sbb
sub
inc
int
sub
or
cmp
xlat
xor
loopne
repnz
jle
jno
fldl
cli
or
fsubrl
js
clc
ja
lea
test
loopne
sahf
sub
xor
je
mov
pop
jne
mov
in
les
sahf
addr16
jp
jnp
ss
add
add
inc
repnz
xor
aad
jae
add
mov
mov
fidivl
jae
aad
lods
xchg
cvttps2pi
xchg
cmp
leave
pop
les
adc
and
repnz
add
fs
icebp
mov
in
nop
je
mov
sub
pop
mov
decl
repz
or
push
sub
mov
cmp
sbb
or
mov
sbb
jmp
jns
je
mov
inc
enter
pushf
lock
in
xchg
mov
add
and
dec
pop
test
mov
out
out
mov
mov
mov
ror
jecxz
sti
pop
add
or
push
or
nop
decl
adc
ret
push
dec
fsubrs
sbb
adc
dec
lahf
xor
sti
xor
push
sub
lret
sti
je
mov
out
jmp
inc
adc
inc
or
jne
pop
lock
sbb
mov
lods
rol
and
rol
cli
add
mov
xchg
mov
mov
sar
or
testb
jne
push
sbb
and
push
loopne
jge
flds
cmp
xchg
add
out
dec
adc
xor
mov
stos
mov
push
iret
adc
push
repz
and
and
push
mov
idivb
pop
mov
movsl
repz
lods
cld
in
jnp
fldl
sub
test
mov
rclb
or
enter
lock
push
rol
out
mov
fs
mov
test
nop
mov
sti
subl
jmp
lods
push
rorl
pop
cmc
or
jno
mov
or
push
add
push
mov
sbb
xor
rcrl
mov
mov
das
loopne
rcrb
mov
push
bound
dec
dec
lock
cmp
mov
mov
rcrl
aas
inc
mov
hlt
imul
cmp
add
movsb
dec
je
jb
sbb
inc
insl
push
mov
pop
jmp
aaa
in
je
insl
xor
sub
std
add
addb
or
outsl
aam
shrl
push
jo
nop
clc
mov
insb
lea
stc
movsl
add
fdiv
or
inc
repnz
cwtl
mov
dec
xor
or
adc
or
and
in
fldl
add
out
mov
or
cwtl
sbb
mov
xchg
xchg
xchg
fists
sbb
int
lahf
xchg
subb
clc
lods
movsb
mov
add
test
mov
inc
loop
or
movl
cmp
es
adc
and
cmp
mov
mov
stc
adc
out
mov
call
xor
fdivr
push
sub
push
int
adc
push
xor
push
in
add
xor
mov
andl
or
jmp
mov
mov
int
insb
inc
test
andl
push
and
mov
dec
loopne
sbb
addr16
loopne
mov
loopne
lret
lret
xchg
fcomps
jle
into
mov
or
jo
pop
pop
test
movsl
shrb
les
add
hlt
mov
push
out
fbld
cld
xor
dec
popf
in
adc
adc
gs
js
and
in
xchg
pushw
jno
insl
push
jne
pushf
push
stos
insb
repnz
jmp
cli
and
add
pusha
cmp
or
test
sar
xor
aam
add
mov
ja
int3
xor
add
in
jne
add
and
and
push
push
clc
or
or
dec
or
xchg
lods
sub
jmp
subb
inc
dec
enter
lea
shrb
ja
movsl
jbe
mov
adc
dec
push
loopne
jbe
push
inc
fisubrs
push
jne
or
mov
inc
ss
add
scas
jp
push
adc
pop
movsb
inc
push
or
sub
cmp
loopne
pushf
ss
rcrb
clc
dec
push
lock
push
jne
xchg
pop
sbb
dec
ljmp
add
stc
rolb
sarl
arpl
enter
push
pop
stos
and
sti
addb
shlb
adc
or
push
fs
test
or
fidivs
push
cmp
je
sub
adc
addb
sbb
mov
lret
shl
fdivrs
loopne
cmp
rorb
or
into
xchg
xchg
sbb
push
push
inc
xchg
sarb
leave
xchg
call
in
or
xchg
loopne
cmp
or
mov
mov
mov
subl
lea
mov
pop
ja
or
mov
rcrl
ljmp
test
push
sbb
pop
sar
pop
lods
movsb
sub
imul
sub
addl
sarb
mov
or
clc
lds
mov
xor
je
or
sbb
into
xor
lea
pop
or
add
arpl
sbb
or
cltd
adc
lock
mov
jge
test
pop
jl
mov
mov
rcrb
lret
or
ja
movsl
fs
cmpsb
xor
hlt
test
in
sbb
shl
fidivl
push
sbb
lock
repnz
inc
loope
insb
jle
sub
adc
sbb
pop
and
outsb
outsb
mov
js
add
xchg
ss
fcmovnb
add
addb
or
incl
or
cmp
mov
sub
inc
imul
adc
dec
pop
imul
push
sub
pop
cmp
mov
cli
das
add
js
lcall
jle
int3
jnp
sub
adc
or
add
mov
add
inc
adcl
adc
mov
adc
test
lea
arpl
js
mov
sub
pusha
dec
cmp
sub
dec
pop
fldl
das
mov
sti
jo
ljmp
and
xchg
shrb
out
rorb
sub
lret
pop
sbb
in
mov
loopne
adc
mov
or
addr16
inc
push
adc
push
sub
inc
inc
lock
into
push
insl
cmp
jmp
xor
pushf
sub
dec
xor
insb
push
shl
dec
sub
repnz
adc
adc
adc
pushf
test
aam
pusha
adc
or
test
or
mov
sub
lds
imul
jmp
xchg
pop
mov
inc
lods
xlat
mov
sbb
pop
dec
mov
dec
jp
mov
or
es
sbb
mov
je
or
cmp
cmp
push
and
pop
jecxz
push
pop
lcall
add
mov
gs
add
mov
xchg
pusha
je
or
mov
outsb
mov
ss
pop
lock
lret
xor
jle
gs
lds
fildll
xchg
rorl
dec
xchg
andl
adc
sub
mov
cmp
inc
les
test
aad
add
add
xchg
not
sbb
movsb
addr16
mov
mov
xlat
out
jmp
cmp
jle
popa
mov
mov
jp
add
cmp
lret
mov
lahf
andl
addl
jmp
dec
loopne
nop
push
insb
push
fcmovu
dec
push
adc
adc
and
ja
ret
push
xchg
sub
inc
sbb
fldcw
push
sahf
dec
mov
loopne
movb
subb
push
push
xor
data16
inc
push
data16
sbb
inc
push
xor
sub
inc
stos
xchg
mov
js
mov
mov
cld
push
cmp
pusha
cld
or
mov
cmp
daa
add
and
fiaddl
movl
push
push
into
xor
fisubrl
bound
shll
rcll
dec
adc
push
loope
ss
or
inc
or
add
bound
add
or
into
pop
jl
jae
pop
add
neg
mov
nop
xor
pop
mov
jnp
or
psrlq
sbb
xor
les
inc
mov
or
jecxz
push
mov
test
mov
or
push
inc
add
cmp
stc
cltd
push
test
sbb
shll
mov
repnz
sahf
add
mov
sub
sub
inc
jmp
mov
imul
into
orb
enter
movb
inc
jmp
sahf
stos
ja
movsb
mov
jmp
dec
jo
testb
addb
and
std
push
repnz
sar
ret
sbb
imul
sarl
mov
sub
or
push
sub
push
shlb
mov
pop
mov
sub
sub
mulb
ljmp
js
cmp
jle
cmp
in
addr16
sub
pop
rolb
add
or
add
test
mov
xor
psubusb
sub
aam
or
push
sub
lock
dec
adc
test
mov
rcll
add
sti
adc
test
jg
jmp
sub
xchg
aas
jmp
pop
push
lock
cmp
scas
fldenv
adc
push
jae
adc
push
sbb
xchg
xchg
movsl
add
les
in
movsl
daa
pop
mov
arpl
adc
mov
pop
pop
pop
in
popa
and
movsb
adc
inc
and
or
sub
mov
pop
idivl
inc
inc
inc
ja
iret
mov
inc
out
ds
push
shll
cltd
jge
dec
and
sahf
rcr
ss
or
cmp
mov
lods
cltd
mov
aam
daa
mov
add
push
aad
xor
pop
popa
ss
jbe
xchg
addr16
adc
int3
inc
std
fiadds
sti
or
ret
adc
xchg
test
jmp
lahf
xchg
pop
pop
aad
or
jo
mov
and
adc
leave
xor
xor
push
addb
mov
scas
in
push
push
push
cmp
push
mov
mov
dec
je
pop
movsb
mov
mov
adc
pop
or
cmp
test
inc
fs
mov
mov
sub
mov
in
add
xchg
aam
mov
into
and
into
loope
cmp
fwait
sub
popa
jb
mov
xchg
push
mov
add
adc
mov
mov
or
cli
or
inc
imul
shr
push
xchg
jne
mov
xorb
lock
push
or
xchg
add
std
jae
add
in
sbb
pushl
insl
and
divl
test
jp
add
push
mov
mov
stos
mov
stos
dec
std
mov
cmpl
pop
or
adc
adc
leave
lret
jmp
inc
loopne
push
loopne
loopne
scas
xor
add
pop
xchg
sub
ljmp
imul
jno
scas
pop
outsl
repnz
xchg
stos
sub
jae
nop
add
pop
sbb
add
and
xchg
dec
mov
pop
or
mov
pop
inc
mov
mov
add
cld
and
xlat
add
enter
push
popl
xchg
or
push
jbe
add
call
dec
insb
add
add
jmp
cmc
pop
and
jle
jo
nop
xorb
push
lock
push
addb
mov
cmc
pop
push
das
push
mov
mov
mov
xor
mov
adc
mov
push
dec
xchg
es
ss
nopl
sub
push
fsubr
mov
sbb
enter
sar
sbb
add
jno
fld
repz
adc
mov
sbbb
pop
mov
movsl
or
int3
inc
into
in
xchg
push
mov
pusha
sub
dec
jecxz
mov
cmp
imul
mov
jl
inc
xor
inc
mov
jne
inc
inc
sbb
divl
mov
out
jb
rcl
faddl
loop
movsb
sti
es
sbb
and
pop
add
lcall
dec
push
bound
mov
mov
sub
sub
and
mov
sbb
icebp
pop
gs
sub
jp
mov
fpatan
mov
inc
push
add
pop
push
ret
mov
pop
and
mov
filds
xchg
xchg
adc
mov
pop
shl
sub
pop
outsb
dec
subb
and
push
test
adc
insb
push
lea
loopne
xor
add
jle
push
mov
push
push
popf
fcomip
stos
lods
inc
adc
xchg
lock
fsubl
jg
mov
clc
inc
push
arpl
stos
sbb
mov
enter
ljmp
movsb
mov
add
xor
aas
sbb
mov
sub
or
fimuls
mov
add
aam
enter
pop
or
inc
imul
sti
sbbb
push
mov
dec
cld
dec
xchg
xchg
push
push
sbbl
xor
add
jg
sub
and
mov
xchg
sbb
add
push
cmp
xlat
push
addl
jmp
and
add
xor
loopne
loopne
push
push
out
push
sti
push
lret
pushf
nop
xchg
dec
add
and
add
push
fiadds
cmp
fisttpl
shr
dec
pop
sub
mov
adc
out
lock
inc
or
jae
or
aaa
cmp
dec
pop
aas
fsubrp
adc
xor
inc
xchg
sbb
xchg
xor
mov
stc
mov
add
or
and
or
mov
in
test
popa
outsb
test
scas
xchg
inc
into
push
jmp
sub
aam
push
push
mov
add
in
sti
out
and
lcall
cmpl
jne
push
cmp
mov
cmp
fmulp
das
nop
jo
nop
outsb
xlat
les
sub
dec
xchg
mov
inc
test
addr16
or
test
clc
xor
int
mov
sub
mov
jo
inc
sbb
jge
jne
xchg
xorb
sbb
je
ret
sti
push
or
push
ret
in
orb
xor
sbbl
fidivrs
mov
push
cli
pop
ja
stos
adc
test
nop
or
jmp
orl
outsl
pop
or
inc
jbe
pop
shl
stc
pop
outsl
or
ja
jb
subl
jmp
xor
sahf
dec
mov
out
jp
popa
push
stos
xchg
mov
push
imul
adc
mov
mov
orb
popa
inc
les
mov
movsb
xor
push
and
cltd
leave
enter
jecxz
scas
and
hlt
adc
enter
push
jb
repz
push
inc
rcrb
mov
out
fistpll
insb
jne
jbe
lods
and
testb
xchg
outsb
or
mov
xor
mov
cmp
in
pop
jb
inc
cmp
in
das
es
inc
sti
push
mov
in
xchg
xchg
dec
mov
xor
pop
dec
inc
lcall
nop
sub
sub
and
mov
insl
dec
in
cmc
sub
cltd
dec
push
clc
adc
push
push
adcb
notl
sbb
pop
add
js
push
mov
xchg
fsubr
int3
mov
in
lret
int3
fcoml
test
enter
fsubs
ljmp
jns
sub
std
add
mov
in
and
shrb
lret
pop
xor
js
sbb
xor
in
mov
lahf
dec
add
mov
mov
mov
xchg
stc
pop
cs
ja
pushf
dec
repnz
call
inc
cs
inc
leave
adc
mov
mov
jmp
or
pop
dec
sub
stc
or
mov
fsubrl
repz
call
in
lods
pop
add
xchg
inc
dec
outsb
mov
fmuls
loopne
je
or
jb
add
fcompl
aam
in
gs
aam
in
and
xor
jne
add
jne
or
dec
jb
jne
in
xor
outsb
push
inc
out
push
dec
jbe
jne
lods
fists
jl
pop
lods
dec
call
addl
mov
or
mov
fbld
movsb
pop
in
icebp
scas
inc
add
lods
push
and
jle
sbb
adc
add
inc
cmp
cmp
jbe
iret
lea
inc
sub
mov
ror
movsl
fisttps
or
clc
xchg
ret
jmp
fiadds
daa
add
jne
into
fwait
jns
inc
jb
adc
dec
aaa
mov
cmp
pop
sti
push
xchg
mov
pop
insb
mov
xor
mov
popa
mov
rolb
dec
cmp
dec
add
cmp
adc
jnp
cmp
inc
shr
lds
pop
add
es
sbb
jge
std
add
add
or
or
je
pop
and
jle
inc
add
sub
int
test
jne
aaa
dec
xchg
push
push
nop
sbb
rcrl
insl
xchg
rolb
xchg
sbb
cmp
push
add
add
mov
mov
and
inc
jmp
sub
sbb
fistl
je
dec
mov
add
adc
or
lock
test
fsubl
sbb
sub
sbb
xchg
lock
out
adc
jnp
add
adc
shll
add
ret
pop
sub
mov
mov
inc
imull
cmp
daa
cmp
out
popa
or
sbb
push
lahf
jo
shll
sarb
mov
inc
push
add
and
jmp
out
cli
sbb
ret
sub
mov
add
popf
out
and
mov
add
adc
cs
ja
sub
bound
and
mov
and
movsl
test
fnstsw
in
mov
cld
ficoms
sub
sub
push
fadds
ret
mov
adc
cmp
adc
fildl
mov
dec
and
int
incl
add
push
orb
mov
mov
adc
and
cmpsl
nop
mov
dec
cmp
loopne
xlat
mov
dec
ljmp
sub
mov
mov
test
cmp
and
mov
loop
lea
cli
sbb
and
cld
jmp
shl
and
jb
or
xor
push
pop
pop
clc
mov
in
jo
jg
sbb
rorb
add
hlt
xchg
gs
jnp
fsubs
lcall
add
adc
js
add
sbb
jno
lock
movl
push
subb
jmp
mov
shll
cltd
test
jg
mov
jne
movl
inc
push
in
aaa
mov
adc
dec
or
cld
or
jne
add
jmp
ja
add
flds
sbb
inc
push
fisubrl
testb
and
test
push
sbb
inc
pop
sbb
aas
incl
cmp
into
jb
or
ror
je
jmp
jno
fcompl
push
icebp
push
and
scas
into
dec
enter
mov
aas
rolb
rcrl
push
jnp
jae
cmp
jbe
xchg
pop
shl
jne
je
imul
aam
inc
push
leave
inc
imul
imul
and
add
jmp
outsb
xchg
cmp
sbb
fs
mul
mov
cmp
ret
ljmp
loop
shlb
inc
in
jge
or
fnstsw
add
jb
mov
or
jne
inc
movsb
push
pushf
add
nop
pop
subb
dec
out
push
imul
jne
mov
xchg
stos
pop
or
hlt
lods
sbb
sbb
or
idivb
jbe
shrb
mov
inc
dec
jne
pop
fbstp
loop
stos
mov
jmp
addb
dec
xor
scas
jmp
cmp
addb
or
insb
nop
xchg
adcl
fsub
xchg
pop
mov
cmp
mov
jmp
test
sbb
sbb
stos
and
test
pusha
insb
lret
sub
cltd
loop
jno
pop
pop
add
xlat
addl
push
dec
and
inc
sub
cmp
fwait
mov
cmp
xlat
testb
pop
sbb
push
ljmp
enter
stc
jb
sub
mov
mov
sbb
popa
cmp
clc
add
clc
jle
sbb
fmuls
call
testl
sbb
mov
mov
jmp
inc
data16
cmp
out
jno
adc
jno
es
mov
jmp
mov
lods
enter
sti
imul
insl
jge
pusha
loopne
jae
cmp
std
and
lret
test
cmp
pop
xor
loopne
sbb
cmp
sbb
mov
lea
pop
push
or
or
loop
xchg
test
add
cmpl
sbb
pop
jp
pop
ret
adc
or
add
jo
push
pusha
jo
sbb
or
loopne
sub
inc
push
scas
add
and
inc
lahf
and
je
sarb
call
push
pop
sbb
pop
adc
and
pop
mov
das
inc
mov
fstpl
data16
stos
cmpsl
cmp
les
xor
in
add
sub
and
movsb
push
nop
rolb
cmp
cwtl
daa
dec
shrb
ljmp
sub
adc
into
or
pop
cld
test
das
mov
inc
add
add
movl
inc
push
icebp
fwait
aam
cmc
xor
das
add
push
fisubrs
push
mov
fnsave
sbb
addr16
xchg
dec
test
mov
imul
adc
lock
in
jle
xor
mov
sub
mov
insb
std
mov
pop
add
add
dec
jb
int3
adc
or
or
subb
test
sub
adc
and
fcmovnb
cmp
inc
mov
push
sbb
ret
sbb
push
push
push
pusha
in
scas
inc
sbb
or
aas
lock
sub
push
mov
cs
push
aas
mov
mov
mov
pop
clc
lcall
or
or
jo
pop
in
insb
lea
inc
or
add
jg
pop
lods
add
mov
cmpsb
loope
fisttpl
push
jo
inc
cmp
bound
repnz
or
in
push
imul
dec
mov
and
ret
xrelease
cpuid
mov
pop
dec
hlt
mov
cmpsl
mov
sub
add
pop
sub
or
inc
int
lods
xor
ret
fnstenv
not
lock
fwait
je
out
xchg
pop
sti
iret
push
adc
leave
inc
nop
xchg
insl
clc
mov
mov
sbb
jb
pop
cmp
inc
mov
jb
dec
pop
cmp
xor
and
pop
pusha
cmp
sbb
jmp
push
mov
test
lahf
ds
mov
jbe
and
pop
dec
leave
sarb
pop
adc
xchg
fmull
imul
mov
jge
adcl
add
fstps
or
mov
inc
outsb
or
fsubl
push
jo
sbb
mov
testl
pushf
or
or
pop
push
and
mov
fisttpll
test
rol
lcall
and
jae
or
lret
xchg
xor
jl
xor
aad
sbb
pop
fistpl
lds
push
or
xchg
shll
hlt
arpl
lds
jne
cmp
or
lahf
xor
xchg
sbb
pop
mov
jne
mov
xchg
adc
jb
add
inc
fisttps
mov
or
or
jbe
xor
adc
mov
and
push
cmc
dec
pop
pop
imul
sub
addr16
cmp
sub
nopl
cld
add
sbb
or
and
in
sub
mov
incb
push
push
sarb
jg
loop
shr
je
insl
sbb
add
inc
adc
push
sub
push
pusha
lods
loope
scas
jo
mov
dec
jne
shlb
or
sbbb
and
pop
imul
divb
xor
lods
ret
add
or
jne
cmp
jp
outsb
sbb
cli
pop
pop
ret
and
mov
ljmp
inc
and
shr
add
incb
push
insl
mov
and
ret
decb
mull
push
or
pop
testb
mov
or
adc
mov
jbe
adc
and
es
push
mov
roll
enter
pop
pop
shl
sub
jp
jl
iret
pushf
clc
xchg
add
jo
movsb
push
add
sbb
mov
clc
dec
mov
loopne
cmp
lods
cli
sbb
push
add
sub
mov
push
jnp
dec
or
mov
orl
mov
inc
cmpsl
icebp
pop
add
mov
add
and
inc
adc
inc
jnp
dec
dec
push
call
lock
rcl
adc
jle
mov
sub
mov
mov
jno
xchg
jnp
jns
and
mov
popf
jp
xchg
pop
inc
dec
xchg
negl
mov
and
add
sbb
dec
add
jbe
jbe
and
sbb
adc
stc
icebp
sbb
pushf
in
sbb
push
sahf
mov
ljmp
flds
pushf
movsb
rcr
xchg
mov
xlat
jl
rol
idiv
cmpsl
xor
mov
int3
test
and
fwait
xchg
jmp
decl
enter
mov
mov
pop
ja
pop
adc
aam
pusha
clc
dec
push
js
and
push
mov
lock
pusha
mov
mov
and
or
sbb
sarl
push
cmp
ror
pop
cmp
jns
mov
push
outsb
push
ja
inc
xchg
arpl
mov
or
dec
fldl
sbb
cwtl
mov
stos
or
cmp
mov
ss
sub
bound
inc
push
loopne
and
ja
sub
mov
push
inc
mov
inc
insb
inc
sbb
push
cltd
popa
aam
out
jmp
inc
faddl
out
into
push
data16
or
inc
test
jl
clc
out
fidivrl
notb
movsb
jmp
xchg
je
jnp
and
ret
and
push
push
test
jmp
add
fs
sub
loopne
mov
adc
aad
inc
jbe
outsl
mov
test
mov
divl
adc
push
ret
rcl
je
nop
mov
sbb
iret
push
in
gs
pop
xor
sub
cld
lea
mov
mov
les
scas
jecxz
mov
sbb
je
jmp
bound
cmp
clc
insb
mov
mov
lock
test
and
repnz
js
adc
push
pop
sub
pop
fnstcw
fadds
jb
int3
call
or
enter
std
add
and
fdiv
push
rolb
pop
mov
nop
mov
push
rolb
xor
add
xchg
mov
mov
lods
fwait
jle
pop
shlb
ljmp
jno
and
pop
enter
mov
fmuls
jno
cs
xchg
out
test
pop
pop
sahf
mov
js
cmp
inc
repnz
mov
fsubr
lret
or
repnz
mov
or
sarb
jl
pushf
lret
or
dec
jne
leave
in
jne
or
add
jb
test
sbbl
daa
call
mov
pop
cld
inc
jmp
add
pop
bound
sub
loope
and
lret
inc
mov
push
adc
fs
jle
shl
call
rorl
or
inc
add
cwtl
into
or
sbbl
jne
inc
sub
jno
bound
adc
xchg
imul
mov
in
or
jne
cmpb
movl
jl
cmp
inc
xor
pop
inc
loop
dec
movsl
in
adc
outsl
loope
push
imul
in
jno
pop
leave
mov
andl
pop
clc
xorb
mov
add
push
push
popl
and
xchg
pavgb
jae
push
pop
or
scas
sub
cmc
cmp
clc
fs
jns
pushf
test
faddl
push
xor
jle,pt
push
or
inc
movb
test
push
inc
lea
or
pushf
adc
dec
push
or
sub
lds
sub
pop
adc
dec
cwtl
add
pop
cmp
mov
xor
idivb
dec
stc
mov
cmp
test
inc
sbb
into
add
andb
imul
mov
rcl
fs
mov
mov
add
xor
mov
cld
sbb
icebp
push
loope
inc
inc
push
aam
testb
arpl
enter
mov
inc
mov
je
add
or
mov
or
stos
sbb
hlt
push
push
xor
das
pop
pop
mov
loopne
dec
add
lock
mov
mov
addr16
call
fsubr
or
xchg
mov
lcall
std
and
mov
bound
or
dec
cmp
mov
sub
icebp
mov
ja
xor
addb
xor
xor
mov
push
add
mov
call
jne
subb
popf
or
push
cmp
in
rcl
test
jno
cmp
dec
shrb
add
push
sti
sub
pop
mov
or
jl
fwait
repnz
mov
mov
mov
push
xor
inc
neg
sub
dec
shlb
sbb
call
sbb
push
das
cmpb
mov
pop
cmpsl
dec
rcl
adc
out
push
les
dec
push
sbbb
ret
mov
lds
pop
lahf
mov
daa
add
xlat
jl
push
pop
jo
inc
adc
movsb
icebp
add
sti
xor
mov
aas
rorb
lret
jae
popf
push
ret
sbb
adc
or
xchg
dec
adc
mov
gs
ja
adc
in
inc
adc
lods
arpl
adc
imul
cwtl
mov
test
aas
inc
cmovne
or
mov
sbb
sub
lds
mov
or
pop
push
lea
stos
fmull
pushf
jmp
push
mov
jmp
dec
xchg
add
fs
cmc
rcll
cmp
aas
lds
push
sub
cwtl
cmp
popa
sbb
jmp
test
sbb
mov
sub
jg
int3
cmp
adc
jne
cmpsl
jns
jmp
and
mov
sbb
repz
dec
mov
cmpb
loope
lods
sbb
adc
addr16
add
pop
jmp
fwait
mov
mov
dec
lahf
fstpt
roll
pusha
sbb
mov
je
push
inc
push
call
push
in
inc
dec
inc
aam
int3
nop
movb
sub
jmp
and
inc
or
sbb
inc
jp
jmp
int
inc
jbe
mov
inc
mov
inc
pop
push
cwtl
add
push
dec
push
lock
and
pop
and
dec
lock
sub
adc
pop
mov
mov
mov
inc
outsb
and
lea
mov
mov
test
sbbb
mov
inc
sub
roll
fmul
push
or
push
mov
idivl
pop
cs
testb
xor
into
pop
push
mov
subb
add
adc
add
push
add
aas
inc
or
dec
sub
or
lcall
out
adc
push
xchg
in
dec
aas
xor
loop
push
xchg
movsl
mov
xchg
or
xchg
mov
jb
mov
and
jp
lods
pop
xor
repnz
dec
in
push
cmpsl
or
xor
pop
shrb
sub
pop
pop
aam
or
imul
xchg
xchg
int3
mov
dec
xchg
jno
push
add
stos
jl
mov
jbe
jno
jecxz
call
outsb
sub
pop
add
xor
add
xchg
mov
adc
pusha
cmp
mov
aad
movsl
cmp
xlat
scas
mov
xlat
int
mov
js
xlat
jge
push
fdivrl
jb
adc
and
fsubl
inc
xchg
xchg
xchg
outsb
in
in
xor
lds
sbb
aaa
add
mov
popf
sub
inc
push
stc
lea
cmp
pop
xchg
inc
and
out
dec
outsl
lods
fildl
les
dec
iret
int3
movsl
das
mov
fcmovnbe
and
es
leave
sub
sbb
xor
fcmovnbe
pop
pop
push
xchg
jno
sbb
sub
in
dec
movsl
in
fsubrs
aaa
xchg
test
aad
int
repnz
movsb
aad
sahf
add
subb
inc
clc
mov
shll
inc
and
and
leave
mov
shlb
xchg
mov
jb
jb
xchg
mov
and
cmp
inc
dec
push
rcrl
mov
sbb
inc
dec
xchg
push
sbb
ds
jne
iret
dec
fdivrl
iret
and
nop
dec
movsb
test
inc
xchg
pop
test
movb
enter
js
jbe
ret
lret
loope
rorb
sbb
hlt
adc
out
pop
dec
fiadds
inc
sahf
out
mov
push
jns
and
sub
jnp
ss
pop
addl
cmpl
loope
adc
add
add
je
xchg
loopne
xchg
jnp
mov
pop
ret
and
xor
xor
dec
pop
push
inc
sbb
add
or
pop
pop
push
push
sbb
add
or
movb
mov
and
in
lahf
jmp
jp
push
sbb
adc
xlat
push
ret
aaa
out
test
inc
mov
jg
lret
stc
cwtl
add
push
and
das
mov
jge
dec
add
sbb
xor
fcmovne
and
cmc
mov
pop
mov
rorb
pop
fcomps
fs
dec
testb
rclb
aas
and
inc
cltd
sub
cmp
pop
adc
and
dec
cld
sbb
or
dec
aaa
mov
adc
push
sbb
inc
and
xchg
xchg
orl
jmp
or
fmuls
dec
push
xchg
fdiv
das
xor
inc
jno
loope
shr
rolb
loop
je
cld
fwait
std
adc
fcomip
outsl
push
push
dec
adc
push
and
outsb
sahf
cmpsl
test
pop
outsl
inc
sub
repz
or
jbe
jle
dec
icebp
cld
jns
outsl
ja
jo
mov
test
mov
mov
pop
ffreep
lea
dec
jb
in
lea
inc
out
mov
mov
test
pop
xor
dec
cli
sbb
pop
loope
imul
inc
inc
push
negl
ret
mov
rcrl
lret
ret
mov
shr
outsl
loopne
int3
dec
fadds
xorb
in
pop
dec
adc
adcl
adcb
jmp
xchg
dec
cmp
mov
ds
push
cs
or
dec
or
sarl
mov
and
jecxz
or
add
or
bts
jmp
mov
xor
and
cs
insb
lcall
out
cmpsb
mov
fidivl
les
cmp
jg
xor
inc
jne
cmpl
jne
out
outsl
cmp
cmp
je
cmp
and
cmp
ret
notl
imull
ljmp
loope
es
dec
lea
adc
push
cmp
lret
mov
and
add
and
icebp
jno
iret
mov
test
mov
add
mov
cld
and
icebp
adc
pop
pusha
and
inc
outsl
adc
ret
pop
cld
jle
andl
or
stc
mov
mov
cmp
addl
nop
pop
subl
nop
sub
xchg
test
lea
ds
mov
mov
cmp
dec
xlat
mov
mov
mov
adc
sbb
sub
push
sahf
pop
loop
mov
dec
test
or
outsb
insl
loope
test
pop
cmp
sub
or
je
inc
sub
inc
or
out
rolb
push
push
pop
mov
sbb
addr16
sbb
cmc
mov
cmp
mov
inc
sbb
jne
aad
push
mov
sbb
fsub
sbb
mov
xchg
and
outsl
sub
fwait
rorl
lcall
inc
cmp
lret
mov
out
outsb
mov
add
incl
inc
and
lods
loope
push
pop
pop
add
xlat
insl
into
dec
out
dec
adc
add
xor
add
inc
jmp
xchg
adc
out
shr
mov
add
xor
xchg
gs
push
push
xor
pop
xchg
adcb
add
loope
imul
neg
loope
enter
or
jne
dec
push
dec
and
push
jle
jbe
out
mov
or
out
sub
dec
cmp
mov
incl
pop
pop
mov
add
inc
cs
je
cmp
sub
pop
xlat
mov
mov
and
and
xorb
cmp
push
inc
sub
popa
push
pop
out
push
xor
in
xchg
and
out
rcl
cld
add
sbb
xor
push
mov
andl
inc
add
adc
push
cli
push
ss
and
mov
mov
aam
mov
shlb
fstpt
shl
xchg
idivb
mov
ror
iret
clc
sub
push
xchg
shrb
clc
int3
ret
xchg
mov
addb
pop
or
dec
jb
mov
pop
cmp
lea
add
add
xchg
cmp
push
pop
sub
push
fdivrs
xchg
enter
or
shl
shlb
sub
rcrl
pop
into
js
push
je
cltd
call
clc
push
sub
lea
pop
inc
scas
dec
push
fldenv
or
push
test
cltd
xor
dec
xor
rcrb
and
int
sarl
loope
lea
daa
test
sub
mov
dec
lock
hlt
ja
incb
add
mov
adc
movb
xor
push
inc
adc
sbb
fldl
jb
push
push
push
lods
or
pop
call
push
add
add
mov
add
fidivrs
cmp
fnstsw
mov
imul
addl
fucomi
pop
jo
xor
faddl
add
xor
push
cmp
or
rorb
or
sub
shll
add
jp
pushf
lds
adc
mov
pop
inc
push
enter
dec
mov
aad
or
or
cmp
pop
ret
add
xor
sbb
popf
adc
movsl
add
lods
bound
add
add
test
sub
clc
sbb
dec
xlat
push
sub
mov
repz
fldl
testl
sub
mov
dec
push
pop
jmp
lea
pop
aam
xchg
cmc
push
jnp
loopne
dec
mov
ds
aaa
xor
fistl
mov
jne
jmp
lock
test
aam
adc
daa
cwtl
fcomp
loopne
sub
mov
movl
xchg
xchg
add
in
loop
dec
adc
out
pop
test
adc
pop
imulb
mov
push
fldl
add
inc
aam
cwtl
cs
dec
sub
push
lret
mov
mov
out
mov
push
xchg
loopne
adc
not
mov
and
jmp
push
stc
push
push
or
cld
xor
inc
and
imul
dec
lock
add
push
add
jmp
sub
and
sarb
repz
mov
or
mov
add
push
lret
mov
rcrb
orb
adc
jae
sahf
test
xchg
pop
ret
mov
cmp
sbb
lea
pop
pop
push
sub
push
lock
inc
jb
mov
enter
int
dec
jbe
pop
mov
add
sbb
xchg
fistl
xlat
dec
ficoml
rorb
xor
scas
or
inc
fmul
lret
xchg
das
push
push
jb
pop
lahf
inc
fisubs
addr16
out
xchg
push
push
add
jnp
incb
fmul
outsb
nop
cmp
daa
jg
dec
movsl
jb
xor
xor
add
popf
not
xor
or
push
loopne
gs
xor
push
xor
idivb
inc
adc
stos
lret
sti
pop
sahf
cmp
inc
dec
ds
inc
out
repnz
mov
dec
push
jmp
xchg
cmp
lods
inc
sbb
or
inc
ret
jl
cmp
fnclex
sub
dec
mov
push
or
loop
sbb
mov
push
adc
ja
lods
pop
test
out
and
test
xor
and
jne
jge
mov
test
pusha
mov
sbb
sbb
ja
or
sub
jmp
add
rorb
es
movb
add
ljmp
aad
push
adc
push
pop
lea
fisttpll
loope
and
scas
xor
imul
adc
add
outsb
dec
fdivs
add
sbb
cmp
jle
mov
roll
dec
cmp
cli
ss
and
not
xor
adc
jge
inc
push
sbb
pop
and
or
js
iretw
mov
sub
outsl
or
jbe
mov
je
add
insb
data16
int3
test
push
cld
sti
std
out
test
jo
jne
ljmp
mov
loop
sbb
in
out
movb
xchg
xor
lret
cmp
adc
add
and
or
addr16
orb
sbb
mov
sub
lock
dec
ja
sub
push
ret
je
movl
adc
sbb
aas
clc
adc
lock
loop
pusha
add
lods
and
or
push
cmp
dec
mov
jns
mov
roll
outsb
adc
pop
lea
and
or
and
lock
je
mov
sbb
add
enter
add
add
loope
je
jb
mov
pop
xchg
fadds
ret
sub
jmp
push
flds
in
mov
or
rcl
add
ficoms
push
or
fcoms
imull
lock
mull
lsl
jmp
push
sar
mov
shr
rcr
shr
rcr
or
mov
inc
loop
div
pop
dec
fs
fnstsw
jo
out
jb
cmp
or
cmp
or
jns
add
xor
and
adc
stos
mov
ficoml
test
or
fxch
pop
ret
adc
push
xchg
and
je
xor
mov
xor
ljmp
mov
shr
inc
jmp
or
pop
pusha
jne
in
sbb
ss
out
sub
mov
mov
xchg
or
xchg
dec
mov
lock
daa
or
sarl
sarb
pop
mov
cmpb
call
sahf
stos
enter
xor
inc
xrstor
mov
dec
dec
adc
out
js
mulb
push
inc
mov
iret
adc
and
mov
scas
xlat
mov
jge
les
mov
mov
pushf
mov
push
jae
adc
inc
clc
into
jmp
insl
rcll
sbb
xor
sbb
xchg
mov
movsl
and
loop
jmp
outsb
or
push
dec
and
lods
pop
ret
mov
andb
lahf
mov
inc
and
add
fs
maxps
xchg
aad
pop
lret
icebp
lock
sbb
add
cmp
push
fiaddl
iret
add
and
mov
dec
js
jne
mov
xor
mov
jmp
pusha
call
inc
mov
push
push
push
push
inc
sbb
test
jne
es
fiaddl
xor
dec
inc
decb
dec
and
adc
imul
add
inc
flds
inc
push
pusha
pop
or
lret
movsl
mov
or
loopne
test
sub
enter
push
mov
push
add
mov
add
add
add
or
insl
iret
and
adc
cmp
mov
sub
sbb
decl
movsl
cmc
rorl
cwtl
push
inc
cmpsl
mov
cmpsb
mov
inc
or
mov
or
sbb
adc
push
xor
cs
addr16
mov
mov
pop
push
loop
mov
outsb
pushl
xchg
faddl
stos
imul
and
pusha
add
or
pop
adc
dec
or
pop
adc
cmp
sub
adc
add
sub
jg
je
mov
sub
fs
add
push
fistl
ss
lds
and
mov
fsubrl
ds
movsb
sbb
mov
jne
xchg
mov
jmp
dec
push
lods
int
sbb
pushf
lret
mov
jae
adc
push
mov
or
das
push
or
rorb
jmp
fcompl
fsubs
or
xor
lcall
aaa
xchg
push
mov
mov
hlt
sub
inc
out
cmpb
loope
adc
sub
xor
cmp
inc
jmp
insl
add
lds
jbe
jae
inc
fdivs
imul
jmp
push
or
enter
outsl
sbb
js
jno
adc
je
dec
lock
push
loopne
dec
je
mov
mov
inc
cs
insb
lock
xor
icebp
xor
gs
push
test
jne
push
adc
and
jbe
fdivr
add
mov
and
mov
lock
pop
stc
jbe
ficomps
jge
mov
iret
ds
jae
add
push
and
mov
aaa
xor
fisubrs
mov
and
mov
xor
pop
inc
rclb
jle
call
cli
and
shl
andb
push
sbb
pushf
or
in
mov
sti
and
and
push
lahf
mov
hlt
test
xor
movb
mov
into
jp
xor
mov
sarl
sub
mov
sub
loope
ja
rcll
orl
sbb
adc
or
mov
adc
fldcw
loopne
enter
inc
nop
xchg
jge
push
push
arpl
pop
cmp
or
fadds
vprotw
lock
mov
js
movsl
stc
pop
insl
rcl
adc
pop
addb
inc
test
mov
push
push
mov
mov
pop
sbb
add
nop
add
out
inc
and
mov
mov
clc
pop
or
sbb
adc
outsl
je
xchg
cli
adc
lea
lea
or
out
pop
dec
imul
cmpl
lods
test
aam
lock
add
mov
pop
xor
into
or
les
enter
sbb
adc
and
inc
mov
in
out
and
pushl
add
jno
push
cs
ret
loop
mov
or
mov
push
xor
pop
inc
ljmp
push
inc
cmp
ds
xor
xchg
xor
push
push
push
mov
out
pusha
ss
insb
enter
or
adc
rclb
xchg
les
push
popf
pusha
stos
or
rorl
pusha
inc
cmp
jo
cmp
ja
aad
stc
dec
xchg
cmp
cmp
arpl
mov
pop
stos
mov
jp
jecxz
in
add
cmp
popl
aas
je
inc
xchg
xchg
js
add
loope
pop
xor
sbb
sub
or
aam
call
out
andl
adcl
aad
pop
mov
pop
sub
addb
test
or
cmp
push
sub
int
loopne
pop
push
les
jae
push
jmp
clc
movd
adc
cmpl
movups
lods
cmpsb
jl
femms
push
or
or
into
add
xor
sahf
push
popf
mov
gs
adc
push
sbb
lods
movl
mov
call
shrb
xor
inc
cmp
ret
xchg
adc
inc
xchg
mov
inc
mov
push
push
lea
or
dec
push
push
pop
and
jle
sarl
lret
inc
das
adc
push
test
sbb
xchg
or
aam
or
sbb
sar
insb
xor
xor
inc
jmp
push
cli
popf
inc
and
leave
lcall
mov
pusha
bound
jo
add
sub
jl
mov
adcl
mov
mov
inc
push
push
nop
imul
mov
test
imul
and
daa
test
jecxz
dec
cmp
jbe
lods
mov
cmp
push
push
or
push
mov
cs
mov
hlt
add
sbb
dec
popa
or
inc
jne
sub
push
add
orb
dec
shlb
ss
cmp
mov
push
push
hlt
add
test
loop
je
push
inc
stos
pop
and
sbb
sub
mov
adc
adc
jmp
mov
stos
popf
or
xchg
scas
mov
mov
adc
mov
das
cwtl
cmp
jle
sub
cmp
xor
add
decl
push
jmp
dec
push
in
and
sbb
jbe
pushf
add
sub
testl
pop
lock
ret
test
sbb
sbb
mov
sub
insl
xorl
mov
pop
jge
cmp
add
movsb
fstpt
mov
movsb
jne
enter
out
dec
jae
imul
sbb
sub
push
jmp
and
scas
shr
outsb
mov
dec
decb
lods
leave
pop
push
sub
and
cmp
dec
cwtl
in
pop
aaa
es
pop
cs
and
or
pop
stc
sub
cmp
mov
push
movsl
jbe
sub
mov
inc
inc
stos
loopne
je
mov
mov
jge
in
mov
cmpsl
mov
dec
sub
inc
inc
cmp
xor
add
clc
add
inc
testl
sbb
inc
jmp
sahf
dec
dec
or
cmp
xor
pop
es
repnz
and
or
insb
decl
stc
push
adc
jg
cmc
jecxz
ds
inc
jmp
cmp
and
push
pop
pop
xor
push
div
dec
mov
dec
test
pop
jne
movsl
sub
xchg
cmp
stos
cmpsb
mov
fsubrs
cwtl
jge
add
dec
adc
sbb
mov
and
cmp
shr
sub
mov
je
lods
pop
call
jnp
jle
inc
ret
sub
xor
jne
add
ret
adc
inc
pop
adc
jmp
call
add
mov
je
lock
pushf
imul
mov
mov
push
mov
pop
jecxz
cmpb
andb
out
xchg
inc
movsl
cmpsb
or
jne
mov
addr16
out
mov
and
xchg
jo
inc
imul
jae
lret
sti
mov
push
or
mov
sub
ja
mov
out
inc
jg
or
inc
testl
out
jne
out
or
mov
ljmp
pop
cmp
inc
add
push
scas
addr16
mov
test
add
jbe
pop
push
or
clc
cwtl
xchg
test
push
pushf
fstpt
inc
add
test
mov
loope
in
push
lock
cld
sub
add
dec
inc
imul
add
mov
ja
shlb
sub
in
incl
cmpl
insl
mov
pop
xchg
push
jg
or
mov
test
jg
add
sbb
lahf
nop
mov
sub
or
shll
shr
aam
or
shr
sbb
mov
sahf
pop
idivl
or
jg
or
and
mov
mov
movb
je
xchg
and
or
jl
mov
out
jg
insl
fadd
loopne
shr
or
mov
sahf
dec
mov
mov
outsb
mov
fistl
mov
mov
adc
andl
or
shrb
lock
js
xchg
jo
ficoml
pop
sbb
loopne
inc
ljmp
jmp
out
jmp
or
lods
mov
fldenv
and
lds
nop
mov
mov
mov
loope
jl
dec
hlt
loopne,pn
int3
int3
jmp
xchg
or
cmp
mov
and
outsl
push
dec
into
jmp
lods
jne
imul
and
inc
int
sbb
mov
push
sbb
pop
adc
jne
push
lret
das
sub
test
sbb
repnz
sub
movups
and
call
mov
mov
inc
mov
inc
mov
mov
add
out
inc
fldl
inc
add
pop
ds
repz
movsb
std
call
out
pop
or
jo
sub
push
mov
or
add
testb
adc
sbb
mov
movsb
icebp
ss
push
push
idiv
add
xor
sbb
sbb
ficomps
cmp
mov
sbb
int
or
inc
int
pop
test
test
adc
push
cmp
pop
or
add
in
xor
push
mov
aas
jne
add
pop
stos
mov
adc
cld
dec
sbb
dec
sub
popa
in
ret
rolb
or
rcl
repz
data16
push
or
push
or
xchg
mov
in
pop
pop
imulb
es
lea
jno
and
mov
loopne
cld
in
or
lea
shlb
fwait
mov
fcos
jbe
imul
gs
push
push
call
pop
mov
add
insl
mov
inc
mov
mov
xor
mov
psubsb
sbb
xlat
jmp
sar
or
inc
ljmp
mov
pusha
stos
cmp
iret
jmp
sbb
faddl
dec
cs
xor
mov
dec
push
int
pop
sbb
adc
mov
loope
mov
add
and
lock
int
dec
xor
push
adc
pop
test
insl
fdiv
xchg
loopne
mov
jmp
ret
jmp
push
dec
decb
mov
dec
mov
pop
xchg
add
rsqrtps
in
cmp
xor
sbb
loopne
add
das
jne
test
pop
inc
xchg
dec
cli
or
push
lea
add
dec
cmp
leave
sar
mov
aas
or
jg
xor
testb
dec
adc
call
fdivrs
test
subl
inc
pop
sahf
cltd
xor
push
xor
cmp
dec
pop
ret
inc
add
mov
mov
dec
pusha
and
pushf
mov
add
inc
pushl
mov
js
lcall
cmp
or
and
ds
imul
sub
lock
xchg
push
sbb
sbb
mov
testl
mov
pop
mov
or
fs
push
add
or
ljmp
xor
push
hlt
mov
andl
lea
icebp
inc
push
test
pop
jo
fcmovb
xor
sub
add
push
enter
enter
push
test
out
mov
add
fstpt
js
sbb
inc
inc
call
jmp
adc
sbb
push
dec
inc
outsb
mov
pop
cmp
test
mov
lea
pusha
xor
and
aas
mov
pusha
enter
and
push
inc
add
mov
je
push
pop
dec
or
pop
jnp
add
cli
inc
jl
lea
mov
sbb
add
out
sbb
or
js
loopne
add
mov
sbb
out
add
fsubl
rol
adcl
int
push
enter
repz
mov
jmp
sub
adc
pop
dec
pusha
dec
iret
test
pop
dec
je
outsb
push
mov
fadd
aad
sbb
pop
sbb
outsl
add
fisttps
cmp
ret
add
xor
sysenter
sbb
dec
imul
inc
xor
mov
push
mov
and
dec
std
xchg
loope
leave
xor
popa
fidivl
scas
fs
xor
jae
mov
jno
outsl
imul
lods
stos
in
fmull
adc
aad
js
push
addr16
xchg
and
lahf
fwait
mov
add
mull
cmp
ret
sub
sub
insb
decl
roll
lock
mov
or
outsl
xchg
jae
in
pop
jns
adc
adc
fiadds
into
jg
sbb
mov
xchg
sub
pop
data16
lret
pushf
std
sub
or
and
sub
mov
imul
popa
add
shrl
jne
in
push
mov
stc
cmp
xchg
cmp
jmp
and
and
mov
test
push
test
shlb
or
or
xchg
and
mov
daa
pop
dec
inc
xchg
es
adcl
loop
sbb
test
mov
push
jo
lret
jmp
inc
mov
or
pop
and
adc
das
movl
movsb
mov
adc
ja
cmp
ja
cmp
mov
insb
adc
mov
negb
add
lods
mov
mov
fidivrs
shll
cwtl
inc
je
xor
arpl
and
sbb
in
adc
or
jmp
js
outsl
shrb
add
push
loopne
push
and
or
test
icebp
and
mov
and
call
inc
ss
jecxz
or
sbb
out
jecxz
sbb
and
adc
cli
add
or
dec
mov
cmp
adc
adc
ficomps
or
ss
push
push
data16
add
push
inc
push
mov
sbb
pop
inc
mov
mov
mov
mov
punpckldq
out
and
fcompl
and
pop
loopne
mov
and
cmp
inc
fisttpl
addl
sbb
orb
mov
lea
pop
xor
sbb
outsb
scas
lock
cld
mov
cmp
test
add
push
jmp
test
push
inc
insb
lahf
push
sub
cmp
rolb
loop
jg
jmp
addl
js
pop
sbb
outsb
fs
push
jmp
stos
popa
add
push
push
add
adc
pushl
pop
mov
ljmp
jb
adc
es
add
adc
inc
lcall
adc
add
pop
adc
push
loope
sub
lds
jno
xor
xlat
sbb
dec
adc
lock
dec
push
inc
jmp
outsl
stos
test
xor
jo
or
xchg
ret
roll
jle
add
cmpsb
cmpb
push
cmp
push
movsb
push
dec
or
pop
pop
pop
inc
imul
and
pop
add
sbb
push
pushf
fcoms
nop
dec
mov
jnp
sbbb
cmp
cmp
add
push
fisttpl
jmp
or
or
pop
pop
shl
mov
jecxz
cmp
pop
les
adc
and
sbb
sbb
or
cmpsl
mul
jo
jl
sbb
andl
arpl
jo
jle
nop
or
in
push
mov
icebp
shrb
dec
arpl
jl
or
cwtl
jl
push
pop
data16
push
jb
push
jne
push
aas
faddl
cwtl
out
int
xor
pop
leave
inc
mov
push
lods
ja
dec
arpl
jbe
jno
je
inc
mov
xor
jp
and
push
ss
sub
test
bound
push
jnp
popa
clc
mov
jne
pop
push
pcmpeqw
movsb
mov
add
imul
or
or
mov
in
or
outsb
arpl
lea
ficoms
std
lods
pop
cltd
dec
mov
adc
fbstp
jmp
cwtl
clc
rorl
stos
lock
or
xor
or
push
mov
mov
test
outsb
outsl
sub
imul
dec
or
aas
popa
cmp
pushl
imul
or
lds
jg
dec
xorb
cmpb
pop
sub
int3
push
or
dec
jecxz
push
jne
jge
push
rcll
dec
or
or
mov
scas
mov
mov
dec
xchg
xor
or
pop
or
outsb
into
jmp
nop
insb
cmpl
je
shlb
je
jae
ja
pop
jmp
mov
push
mov
ret
sub
mov
adc
xchg
push
jno
in
mov
pop
or
loopne
aas
cmp
pop
lds
in
inc
lock
mov
sbb
sub
or
and
inc
mov
sti
cmpsb
jge
inc
pusha
jne,pn
sbb
inc
mov
sub
loopne
fmul
divl
in
sbb
or
cmpsb
mov
sub
mov
daa
push
icebp
mov
imul
loopne
jmp
test
int3
cmp
push
adc
add
add
daa
ds
sbb
adc
fs
add
bound
or
test
mov
and
add
cmpl
das
push
shlb
cmp
jecxz
or
mov
add
je
mov
bound
inc
sub
lea
or
pop
xor
push
push
push
out
sub
out
mov
jb
ljmp
push
or
sub
test
lahf
movups
push
push
add
push
cmp
movl
ret
adc
outsl
add
adc
adcl
push
xor
push
ljmp
mov
mov
or
outsl
add
cmpsl
jmp
pop
nop
addl
shl
stos
or
je
call
arpl
xor
push
ret
test
in
test
mov
push
jecxz
mov
clc
call
or
xor
or
xlat
add
dec
add
lret
mov
push
rclb
mov
cmp
mov
mov
jo
notl
andl
mov
daa
mov
daa
gs
xor
mov
stos
inc
cmp
sub
sub
mov
or
and
sub
sbb
lcall
cld
imulb
mov
or
cld
inc
xor
inc
cmpb
mov
in
ja
mov
enter
pop
xchg
mov
lahf
daa
fidivrs
rolb
add
adc
mov
out
sbb
mov
adc
jne
stos
out
sarl
or
ret
adc
jg
xchg
add
out
dec
call
mov
and
or
arpl
enter
rolb
mov
sbb
dec
cld
inc
xchg
jg
cmp
decl
jg
xor
sbb
dec
outsl
loope
mov
and
sub
or
fidivs
adc
xchg
xchg
dec
daa
xor
jae
lds
sub
and
sbb
push
sbb
add
or
push
or
xchg
xchg
xchg
adc
ss
outsb
sub
dec
dec
dec
dec
xor
cmp
ficompl
inc
and
inc
pushf
pushf
pushf
fmull
dec
dec
push
push
daa
daa
pop
pushf
pop
add
daa
daa
daa
push
and
daa
js
fs
idivb
sbb
mov
nop
xchg
dec
es
fs
pushf
mov
movsb
test
xchg
dec
xor
rol
int3
insl
xchg
or
sarb
xor
fsub
xchg
dec
xor
in
in
aam
xor
and
hlt
clc
cmp
and
cld
add
add
or
gs
adc
leave
and
adc
and
dec
and
and
dec
xor
xor
dec
xor
cmp
imul
dec
mov
cltd
fs
push
push
pop
pop
cmpsl
jo
dec
pusha
sbb
inc
subl
pop
push
mov
shlb
test
mov
mov
cmp
pop
in
shll
movsb
imul
shlb
nop
adc
dec
xor
int
cwtl
sbb
xor
rorb
and
xor
int
cmp
push
cli
mov
and
inc
les
add
rorb
sbb
mov
dec
enter
pop
xchg
adc
adc
bound
push
ret
call
inc
xor
icebp
or
aam
push
or
mov
mov
xor
cmpb
or
or
addr16
pop
push
or
pop
or
jo
push
je
xchg
dec
ficomps
add
cs
cmpl
xchg
add
pop
sahf
popa
and
pop
movb
mov
and
dec
inc
outsb
aas
mov
or
mov
jmp
and
es
pop
out
mov
cmc
add
test
adc
or
pusha
xchg
add
stos
nop
aam
mulb
shll
insl
insl
lea
or
adc
or
lcall
leave
add
adc
lock
and
mov
and
cmp
add
aaa
jecxz
sbb
or
jmp
xchg
jmp
xchg
lock
xchg
fstl
and
pusha
xor
sub
aaa
jge
je
jle
mov
loope
flds
and
pop
adc
pusha
mov
pusha
loope
pop
sub
xor
push
or
fstpl
movsb
sub
pusha
fldl
sbb
jne
cmp
imulb
xchg
rclb
sub
add
inc
or
adc
push
sahf
lret
add
add
jmp
xor
cmp
psrld
xchg
sub
mov
adc
jne
orl
scas
jmp
push
and
into
adc
stos
or
testl
cmp
and
sbbb
mov
xor
es
push
and
or
aaa
and
add
inc
flds
fstps
jmp
fisttpll
xlat
sub
pop
adc
faddp
nop
loope
inc
movsl
pop
test
hlt
adc
jbe
in
push
fildl
xor
divl
jl
push
out
push
xor
test
and
jns,pt
or
and
inc
call
std
mov
aad
insl
ret
fldl
divb
dec
sub
pushf
sbb
pop
sub
jmp
sub
push
mov
loopne
fldcw
inc
test
into
adc
call
imulb
imulb
mov
rorl
mov
push
nop
mov
inc
mov
mov
and
inc
or
cmp
xchg
jge
ffree
repz
add
push
add
pop
push
dec
in
inc
shll
cli
bnd
imul
mov
repnz
dec
push
movsl
jge
test
scas
imul
insl
in
faddl
andl
loopne
fchs
mov
push
push
pop
ss
nop
pop
jmp
pop
cs
icebp
pushf
nop
adc
pop
scas
sbb
loopne
cmpsb
mov
es
sub
cmp
aam
add
filds
push
add
sbb
and
pop
mov
lret
add
xchg
inc
outsb
inc
lods
mov
adc
loop
shrb
xor
ret
or
aam
cmp
je
or
sbb
sbb
or
mov
cld
sbb
add
hlt
hlt
pop
cltd
and
jmp
sub
pop
or
stos
and
inc
sbb
or
mov
ret
cmp
sbb
pop
fstpl
jp
lahf
mov
cmpb
and
ret
fidivs
lock
add
xor
push
or
fisttpll
mov
or
hlt
mov
pop
xchg
push
sub
cmp
pusha
in
fwait
dec
cmp
lock
mov
add
or
ret
call
jae
fadd
mov
or
sbb
mov
jbe
push
das
adc
outsb
dec
add
mov
pop
pushf
arpl
arpl
out
sbb
mov
xor
nop
mov
or
sbb
jnp
xchg
call
andl
sbb
mov
sbb
dec
lret
into
sbb
mov
xchg
mov
call
clc
xor
sbb
xor
stos
push
fcmovbe
or
mov
jge
adc
or
sbb
rcll
cltd
and
decb
mov
clc
push
and
pop
cmpb
add
or
adc
ret
imul
enter
or
cli
out
fld
fucomp
pop
fldcw
pop
mull
loopne
out
mov
xor
test
outsl
jne
orl
mov
icebp
das
pop
pushf
ficoml
gs
or
shl
pop
and
dec
lcall
push
mov
push
sahf
jge
push
pop
je
aad
xor
push
ficoml
nop
cld
es
adc
push
push
push
movsb
imul
push
sub
aam
loope
ljmp
jo
fstsw
movswl
sbb
loop
or
inc
xor
in
sub
rorb
data16
or
insl
or
and
fsts
dec
cwtl
or
sub
call
test
fcoms
pop
and
sbb
adc
pop
mov
nop
call
je
jo
movsb
fldpi
xor
loopne
lcall
add
mov
je
sbb
sbbb
shll
xsaveopt
dec
sbb
mov
mov
ret
loope
inc
popl
or
movsl
pop
mov
and
jno
iret
test
pusha
cmp
adc
or
add
pop
jnp
jo
sub
icebp
xor
js
inc
cs
cmp
subl
mov
cmpsb
es
mov
xor
inc
add
rcrb
add
mov
and
add
test
cld
sub
inc
mov
pushf
xlat
int3
pop
inc
add
in
inc
notl
add
adc
fiadds
imul
jno
mov
test
add
mov
sub
adc
jbe
sbb
insb
xor
js
adc
aas
mov
or
push
or
jle
or
or
add
loope
push
or
or
int
add
dec
test
push
rcrb
and
popa
pop
inc
or
push
mov
mov
pushf
pop
dec
imul
dec
push
or
sub
or
outsb
add
mov
aas
dec
push
mov
loope
adc
daa
testb
mov
loopne
test
jbe
jl
mov
rcr
jne
lock
stos
jp
pop
pop
dec
insb
jmp
sub
cli
clc
and
push
cmp
mov
inc
and
lret
pop
add
xor
scas
cmp
add
inc
lea
pop
mov
lret
inc
movb
rolb
ljmp
not
test
andps
or
pop
repz
outsb
cs
pop
and
mov
out
sbb
mov
inc
adc
iret
and
insl
push
jbe,pt
dec
mov
add
push
outsb
int
or
or
cmp
sbb
dec
cmp
mov
loopne
insb
jmp
sub
push
orl
mov
xchg
pusha
add
sahf
jns
shrb
and
sarb
mov
mov
add
or
add
add
xor
mov
or
adc
jge
inc
stos
inc
es
cwtl
sar
popa
or
adc
dec
xor
cmp
mov
cmp
ss
loopne
mov
daa
push
iret
rcl
sub
sub
pop
pop
or
push
lea
xor
shlb
push
ds
push
or
test
xor
out
mov
xchg
test
push
xchg
inc
out
nop
popa
cmpsb
dec
in
sub
js
push
and
sbb
mov
mov
dec
jns
mov
pop
dec
lea
or
ret
movsb
push
rcr
inc
lods
and
sbb
test
jmp
push
lods
sub
dec
pusha
push
aas
xor
dec
or
inc
rcrl
dec
xor
push
aam
add
cli
mov
mov
jb
pop
pop
push
push
jb
mov
repnz
incb
mov
xor
cmp
and
scas
shll
shl
hlt
push
sub
lock
aas
mov
mov
mov
mov
and
mov
cmp
dec
push
or
ss
test
inc
add
inc
popa
sbb
push
push
mov
roll
pcmpeqw
daa
andl
rcll
out
je
add
fdivrs
iret
and
jbe
jecxz
mov
and
mov
and
lea
dec
and
inc
xchg
inc
sti
rorl
jecxz
enter
pop
fimull
inc
add
clc
or
mov
cmp
ficoms
lret
jne
fcoml
mov
jae
jns
or
mov
push
cmp
xchg
test
adc
adc
sbbb
mov
push
mov
in
dec
je
pop
and
add
sbb
adc
dec
jp
addr16
lret
loopne
xor
and
sub
add
jbe
jne
cmp
enter
jb
mov
xor
mov
sub
inc
mov
mov
rcr
or
pop
xor
mov
sub
pop
sti
scas
push
xchg
cmp
insb
inc
cs
jg
xchg
or
ss
cmp
je
or
decl
out
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
mov
shll
inc
divb
xchg
ss
and
fcompl
filds
cltd
arpl
add
xchg
mov
outsb
push
inc
jmp
inc
or
imul
xchg
movaps
push
xor
repnz
fnsave
popf
push
add
adc
les
sub
add
adc
xchg
icebp
mov
fadds
mov
shrb
xlat
rcrl
add
fdivs
or
jle
leave
push
sub
inc
pop
ret
sahf
dec
loopne
push
pop
sbb
rorb
sub
dec
sub
popa
lock
les
sub
mov
popf
rol
outsl
xor
cmpl
mov
hlt
sbb
push
inc
add
jle
push
cmp
pushf
cld
mov
adc
or
sbb
xchg
add
lods
ja
add
fiadds
daa
add
and
cld
loopne
icebp
push
jmp
es
je
loop
inc
sub
das
pop
insb
loopne
mov
fadd
inc
add
push
xor
mov
xor
or
add
xor
jp
testb
pop
in
sbb
mov
rclb
imul
adc
sub
loope
daa
or
mov
adc
dec
das
into
sbb
pusha
inc
lahf
shlb
fs
and
jg
ret
jmp
xchg
jmp
dec
or
add
adc
bound
and
push
inc
or
adc
shlb
ret
inc
cmp
pop
push
add
sbb
shll
or
addb
lods
jne
xor
add
data16
push
fadd
pushf
insl
shrb
imul
jl
nop
stos
inc
fcoml
lret
shl
inc
and
lea
xchg
xor
mov
fdivs
call
dec
mov
enter
sbb
xchg
sahf
dec
jl
inc
jp
mov
dec
out
rorb
lret
andl
imul
inc
lea
loope
or
fdivl
sub
ret
nop
js
mov
jmpw
xor
cmpb
jbe
sub
push
inc
xor
add
mov
pop
sbb
js
inc
popf
push
dec
sub
leave
and
add
insb
lahf
mov
push
xchg
scas
and
adc
enter
inc
inc
mov
fistpl
fstpt
test
jg
ret
mov
or
jne
bound
xor
aam
es
icebp
sub
cli
in
call
xor
mov
mov
sbbb
je
fisubs
or
mov
xor
shlb
mov
push
hlt
nop
or
call
dec
scas
and
pop
xchg
and
inc
xor
pushf
ret
inc
sbb
xor
add
dec
jge
daa
xor
insl
cld
add
add
cmpsb
clc
hlt
shrd
sbb
fs
cmp
jge
sbb
shlb
xor
xor
inc
es
cmc
pop
and
xor
out
and
mov
cmp
cmp
or
rorl
pop
rcpps
insb
xor
add
fcmovb
push
nop
mov
sbb
sbb
dec
pop
in
mov
imul
or
js
jg
jb
xor
out
xor
mov
vaddsd
shl
fimull
jl
push
push
shll
pusha
cmpsb
outsl
cmp
inc
cmp
mov
push
lock
pop
push
or
sarb
add
mov
jns
pop
jnp
inc
dec
pop
or
or
dec
and
or
cmp
cmp
add
in
add
lods
ja
dec
frstor
es
hlt
nop
mov
adc
adc
sbb
movw
add
add
inc
rcrl
jle
in
push
sbb
push
push
jmp
lock
and
sahf
and
bound
adc
and
call
inc
or
or
ret
loopne
push
hlt
aaa
push
lods
lds
js
xor
inc
mov
push
mov
push
add
add
xchg
mov
repnz
je
loopne
roll
and
add
lret
cmpsl
jl
into
roll
or
pusha
cmp
sbb
lods
cmp
and
addl
pop
push
mov
adc
nop
dec
adcl
xchg
pop
aam
and
or
test
or
in
push
push
orl
dec
out
mov
cld
jl
loopne
jge
adcb
popa
push
mov
inc
push
add
add
sub
popf
jmp
xor
lea
sahf
clc
gs
push
xor
or
pop
data16
daa
aaa
in
add
movb
sti
lds
inc
je
dec
ss
xor
ret
add
dec
jmp
mov
sub
add
int
inc
aaa
je
sbb
or
pop
inc
hlt
jb
popa
cmp
or
inc
sub
rcrl
xorl
sbb
arpl
add
xchg
repnz
mov
inc
xchg
rcll
push
aaa
lock
test
and
imul
sbb
pop
fldenv
push
adc
gs
jne
add
js
punpcklwd
sarb
push
push
xchg
sarl
push
fwait
lea
mov
jmp
jbe
or
cs
push
into
mov
add
add
loopne
cmp
notl
add
mov
inc
mov
test
or
and
mov
sbb
push
and
xlat
aam
jecxz
sti
adc
lea
xchg
cmc
cmp
loope
adc
daa
lods
sub
dec
inc
add
mov
push
ljmp
sub
push
push
and
leave
test
int3
inc
shll
std
lcall
push
add
and
cltd
nop
cli
inc
pusha
add
mov
xchg
mov
cmp
fistpl
or
cmp
dec
test
or
mov
ljmp
mov
inc
mov
lock
xchg
adc
test
xor
rcr
mov
cmpl
rcll
push
or
push
or
mov
push
mov
sbb
or
mov
ljmp
or
mov
jge
rcrb
sar
pop
add
adc
or
enter
mov
jb
dec
and
test
xor
sub
and
out
cli
mov
lret
je
dec
je
dec
push
push
jmp
add
mov
or
jmp
cmpb
mov
or
lcall
rclb
fistps
and
insl
lods
sub
jp
icebp
pop
ret
shll
add
sbb
push
jo
sub
int
adc
push
sub
cs
add
es
pop
mov
adc
das
jne
adc
fistpl
cmp
je
mov
cmp
mov
pusha
and
or
roll
test
lahf
and
add
pop
mov
adc
xor
lret
adc
fiaddl
into
test
or
xor
bound
outsl
arpl
sarb
xor
pop
sbb
lods
imul
sub
adc
xchg
sbb
loopne
mov
inc
add
addb
popa
jnp
dec
sub
call
loopne
jle
or
or
les
movsl
xchg
pop
repz
clc
shr
add
loop
or
or
cmp
leave
shr
or
mov
icebp
in
pop
jae
push
adc
test
and
add
mov
fwait
mov
add
add
fs
mov
xchg
jp
push
add
fidivrl
dec
inc
sbbl
inc
jl
in
sbb
cmp
movsb
leave
les
or
dec
pop
pop
adc
scas
or
sti
and
aam
push
out
dec
fidivrs
adc
adc
xor
repnz
into
clc
or
xor
mov
lea
add
xchg
pushfw
stc
test
fxch
push
insl
mov
nop
sub
sub
decl
mov
cmp
sbb
cmpsb
and
xchg
xor
addr16
push
fiaddl
xlat
lock
cli
ficomps
adc
xchg
xchg
xor
push
imul
popf
mov
fsubrl
add
lret
dec
sti
xor
dec
push
call
incl
insl
mov
xchg
or
mov
pop
call
data16
sub
mov
scas
sbb
outsb
cmp
std
fs
dec
sub
loope
xor
bound
sbb
add
je
repnz
jp
cltd
bound
fwait
mov
inc
enter
outsl
stos
pop
loop
dec
inc
aaa
xchg
inc
push
xor
adc
pop
add
test
xchg
jne
inc
push
sbb
dec
leave
inc
jbe
decl
xor
js
aas
xorl
push
jns
and
gs
add
add
test
rclb
and
bound
mov
mov
jo
mov
stos
jb
pusha
sbbb
loope
or
mov
subl
or
rcrl
pop
mov
movq
clc
add
push
outsl
inc
mov
or
cmp
clc
and
xor
push
stos
sbb
mov
test
clc
sbb
inc
mov
mov
xchg
mov
mov
cld
jmp
std
sbb
add
pop
je
add
bound
ret
mov
xor
str
cs
js
mov
push
mov
sbb
add
mov
sub
push
add
sub
sarl
call
inc
ds
push
jbe
fcomps
add
call
ss
rcrl
nop
into
xor
and
add
push
mov
dec
sarl
lock
stos
rol
call
pop
in
mov
cmp
jle
inc
rolb
jmp
dec
loope
sbb
aaa
adc
dec
cmpsb
sbb
mov
es
mov
jge
cmpsb
jmp
adc
cmp
cmpb
je
insl
pop
subb
push
incl
adc
push
pusha
push
fstl
and
or
push
mov
push
insb
jmp
add
push
sub
ficoml
push
xchg
fidivl
orb
and
aaa
jne
cmpsb
cmp
mov
sub
dec
aas
jmp
mov
jne
cmp
jne
gs
negb
jmp
dec
add
iret
add
jbe
into
adc
rorb
xor
cltd
or
adc
out
roll
leave
add
jl
js
je
mov
iret
adc
sbb
xorb
movsb
and
mov
jge
or
popl
xchg
pop
sahf
jne
sub
movsl
and
int
or
push
mov
add
add
lahf
and
dec
or
adc
nop
add
clc
add
or
lea
mov
push
sub
sbb
and
adc
fdiv
fiaddl
add
sub
inc
addl
mov
addl
sbb
and
push
adc
rcr
mov
xor
shl
sbb
adc
push
divb
adc
sbb
or
dec
jns
mov
dec
jne
pop
pop
pop
fildl
jp
add
or
jae
mov
rcl
ljmp
shr
add
test
cmpsl
jg
rclb
jmp
enter
andl
cld
je
pop
xor
push
repz
add
addr16
dec
or
aaa
icebp
inc
into
add
push
pop
lods
jae
aam
dec
adc
adc
dec
lahf
push
enter
incl
jo
mov
je
push
xor
sarl
jbe
cli
sbbb
xor
xchg
push
xchg
pop
dec
and
push
daa
aam
or
push
rcrb
inc
sub
outsb
cmp
add
cmp
js
jg
sarb
mov
or
cmp
jo
inc
gs
or
push
add
cmp
dec
fst
jb
and
inc
ss
mov
aaa
dec
sub
pop
rolb
sub
inc
jns
push
out
cltd
movsb
cmp
cld
mov
enter
fcmove
jne
pop
cmp
inc
jmp
sub
add
rcr
xchg
push
inc
mov
mov
sbb
or
or
or
imul
sbb
or
mov
je
adc
fdivrp
mov
cmp
jb
cmp
ja
add
cmp
adc
notb
loopne
or
shll
leave
adc
pop
adc
add
jl
les
je
adc
mov
mov
shll
push
push
and
push
mov
sub
aam
fcmovu
mov
sti
aas
cmpsb
mov
mov
push
movb
jmp
or
inc
sbb
aaa
scas
dec
shrb
pop
sub
sub
mov
or
popf
inc
push
inc
add
xor
add
mov
xchg
and
js
xor
pop
mov
ljmp
mov
push
sub
push
mov
jbe
inc
jb
mov
fdivrl
dec
push
andb
sbb
cmp
into
push
add
add
add
cmp
add
fwait
mov
xchg
cmpsb
push
imul
jmp
lcall
inc
imul
pop
pop
xchg
lea
sar
dec
ja
ja
dec
movswl
xchg
inc
stos
cltd
lods
fildl
es
dec
mov
lods
mul
mov
cmp
mov
je
inc
call
rcrl
adc
or
jmp
sub
addr16
xor
and
mov
push
loope
stos
or
jb
jl
pop
mov
decl
jle
repnz
mov
adc
adc
mov
mov
mov
and
scas
std
and
lea
inc
xor
lods
push
cmpsl
add
into
sahf
cmpb
addb
pushf
cmp
in
hlt
xchg
icebp
iret
leave
out
mov
inc
call
jnp
ljmp
loope
rorl
add
and
lea
rolb
loop,pn
sub
sahf
inc
mov
push
lea
xor
sub
pushf
or
outsb
stos
fcoml
imul
add
movsb
pop
sahf
push
pop
xor
cmp
lods
shll
inc
insl
pusha
shrw
cmpsl
insb
xchg
mov
mov
pop
push
lcall
and
cmpsl
jne
rorb
addl
decl
popa
add
rolb
rol
nop
popf
loope
pop
or
and
rorb
lods
sti
sub
sbb
push
lret
rcrl
inc
mov
js
mov
jle
int3
jg
neg
shrl
loope
shr
or
mov
cltd
rcrl
dec
mov
jp
mov
lock
dec
and
jnp
repnz
jb
div
add
inc
pop
sahf
cmpsl
cli
div
rcrl
pop
js
jbe
mov
lcall
fcmovb
test
dec
test
add
or
cli
adc
and
sub
scas
mov
dec
aas
sbb
cmp
mov
push
fidivl
aad
mov
fldenv
enter
jg
or
lret
enter
rcrl
mov
in
sbb
push
sbb
dec
scas
inc
repnz
push
push
sbb
loop
out
inc
arpl
sahf
jge
out
mov
add
enter
imul
fwait
sbb
aam
daa
adc
mov
push
cli
or
jp
jae
dec
mov
shlb
fdivrs
aam
xor
jbe
dec
test
xchg
jge
adc
push
mov
ret
add
mov
adc
dec
xor
fmull
or
sub
add
add
mov
add
add
insl
test
sub
int3
jg
add
out
add
xchg
add
add
inc
adc
xor
adc
jg
or
xor
enter
lock
inc
mov
stc
jge
add
mov
nop
mov
movsb
jmp
add
pop
add
jne
jae
xchg
pop
fnsetpm(287
loopne
sub
and
pusha
mov
test
add
sbb
sub
xor
insb
sbb
div
mov
adc
inc
add
inc
mov
stos
ljmp
add
pop
outsb
call
xchg
sub
mov
mov
mov
and
rcrb
jb
cli
pop
inc
sarl
fsubrl
fdivs
mov
and
imul
mov
imul
cs
dec
loopnew
fmuls
leave
outsb
pusha
lea
push
and
mov
push
in
out
add
ljmp
les
add
lock
sar
sub
ja
into
inc
les
enter
xor
push
sbb
rclb
jbe
movsb
clc
lock
inc
dec
enter
fnsave
mov
sahf
mov
and
dec
int3
push
add
test
call
add
xor
add
add
sub
or
into
or
mov
inc
ljmp
jmp
mov
rcrb
jmp
cmp
jge
or
lahf
sub
cmpb
or
add
dec
cmp
imul
inc
dec
add
add
fadds
inc
inc
mov
call
ret
jp
jne
dec
sarb
or
adc
cmp
in
out
mov
mov
lret
mov
add
push
mov
nop
adc
test
mov
mov
mov
or
cmpsl
mov
dec
adc
and
ret
lcall
add
push
mov
mull
or
push
push
pop
rorb
jne
or
hlt
mov
or
add
rcrl
xchg
add
pop
jne
or
push
pop
scas
je,pt
sbb
ret
mov
cld
mov
ret
or
movsl
add
xchg
adc
or
pop
and
add
test
fistpl
mov
mov
iret
xchg
xchg
lret
lret
into
pusha
inc
cli
xorl
and
pop
pop
fidivl
pop
cwtl
cli
mov
ret
xchg
mov
loopne
sahf
inc
ret
or
mov
sbb
loopne
add
push
rolb
imul
or
or
jo
dec
push
add
add
push
gs
je
das
push
mov
jae
mov
pop
or
pop
add
insl
add
adc
cmp
jne
and
mov
loope
test
add
es
out
and
push
cmpb
cmc
or
ret
imul
insl
flds
jo
loop
clc
mov
mov
test
sbb
shll
push
scas
orl
mov
inc
subl
add
movb
daa
mov
loopne
mov
rorb
nop
lock
loopne
sbb
repnz
test
adc
int
add
or
adc
into
mov
xchg
into
mov
mov
sbb
and
sbb
leave
repz
inc
jg
into
into
dec
inc
or
adc
sarb
push
pop
loopne
ficoms
pop
or
xchg
dec
jl
and
or
sbb
stos
push
jmp
and
and
push
fs
mov
pushf
hlt
add
leave
sti
cmp
out
adc
push
into
enter
movsb
and
mov
into
mov
and
mov
jp,pn
and
cmpsb
leave
adc
sub
lock
roll
aad
mov
cmpsl
fsub
movsb
lret
ljmp
mov
out
adc
cmp
pop
mov
add
loop
cmpsl
cmp
loopne
mov
lahf
xchg
mov
or
enter
xor
scas
sub
sub
push
lock
scas
outsb
pusha
outsl
adc
rcrl
in
ret
jl
add
testb
add
je
jnp
sbb
cs
add
test
jle
rclb
sbb
push
nop
insb
jno
aaa
xchg
clc
sbb
dec
mov
mov
jb
outsb
cmp
je
mov
or
mov
repnz
pop
adc
jg
or
or
cmp
jbe
dec
sbb
cmp
sub
jmp
push
mov
movsl
sbb
sub
fisubrl
push
lods
add
push
leave
mov
lods
push
or
add
test
mov
into
das
add
stos
les
and
in
and
inc
popa
test
dec
aam
add
scas
mov
fcompl
adc
loopne
jp
or
cmp
add
scas
pushl
mov
and
push
push
mov
push
mov
aam
movsb
mov
cltd
fsubs
fmul
orb
or
pop
cmpl
ret
sahf
mov
lret
xor
jb
pop
pushf
push
rclb
cmpb
add
aam
loope
movsl
ljmp
insb
or
int3
cs
popf
inc
push
aaa
sbb
dec
js
add
mov
movsl
mov
or
pop
cmp
test
stos
add
popa
in
sub
mov
clc
xchg
pop
aaa
test
cmp
lock
pop
stos
sahf
mov
cs
mov
les
bound
dec
sub
adc
fwait
in
in
fsubp
adc
xchg
mov
loope
aaa
ljmp
lods
xchg
push
pop
mov
add
call
xor
push
ret
or
mov
push
jge
pushf
inc
push
dec
adc
inc
cmp
pop
test
adc
inc
mov
in
jge
cmp
adc
icebp
mov
dec
loope
gs
sbb
popa
in
je
in
push
push
add
clc
cli
sbb
add
jg
mov
jp
fadd
js
movsb
xchg
sti
jo
mov
addl
pop
mov
push
lods
dec
loop
rol
xor
pop
enter
xchg
enter
insl
cmpsl
mov
add
loopne
push
pop
nop
out
push
out
mov
test
cmpsb
mov
push
jle
push
jmp
dec
fs
movsb
fucomp
add
push
por
int
subl
push
js
push
adc
sbb
mov
xor
mov
inc
push
out
dec
sbb
add
xchg
aam
insl
push
es
iret
int
sub
pushf
xor
push
push
mov
sub
fs
test
enter
cmc
sub
ss
push
es
dec
sub
dec
hlt
decl
push
pcmpeqb
jg
or
scas
sbb
sbb
out
insb
push
push
jnp
push
btc
xorl
ret
xchg
push
push
pop
les
cs
rorb
mov
mov
inc
aas
test
dec
add
inc
cmp
repnz
inc
daa
mov
pop
inc
push
pop
lea
mov
or
push
fmuls
sub
mov
ret
int3
cmp
js
dec
loope
les
pop
xor
test
sbb
and
sahf
or
xor
dec
push
rcll
push
lods
and
loopne
cmp
loopne
dec
pushf
jmp
sbb
popa
mov
dec
pop
xchg
clc
outsb
leave
push
pusha
xor
popa
push
rorb
adc
pop
push
inc
jle
nop
test
jmp
mov
js
inc
mov
push
xor
clc
sub
ret
movsl
add
sahf
or
push
sar
mov
cmpb
push
sbb
push
pop
push
and
mov
and
mov
mov
xchg
pop
rol
ror
push
inc
sub
add
aas
pusha
sub
outsl
mov
and
sahf
xor
in
imul
mov
jb
or
lds
add
push
or
adc
test
dec
sbb
push
mov
dec
sbb
stos
push
add
test
pushf
shr
pop
xor
ds
jmp
add
add
cmp
sbb
ret
sar
or
insl
cld
mov
loopne
cmp
xchg
loopne
and
cmp
adc
or
movsb
jo
mov
mov
mov
xor
loop
pusha
imul
inc
jmp
stos
stos
cmp
or
lret
or
test
jo
or
jmp
in
push
mov
or
into
arpl
sub
inc
or
fnstcw
adc
cmp
call
and
adc
add
bound
mov
fmull
xchg
mov
sbb
xchg
jmp
cmpsb
call
sbb
add
dec
arpl
mov
jo
dec
cltd
aas
popa
xchg
enter
push
xchg
xchg
jne
rcrb
addb
and
xor
add
push
aam
scas
pusha
loopne
enter
push
bound
add
push
popa
sub
mov
xor
out
decl
btc
push
xchg
std
xchg
shr
je
xor
inc
and
nop
insb
mov
push
add
or
loope
pop
gs
push
inc
js
aad
sbb
mov
int
pop
sub
xor
in
popa
xor
arpl
pop
sub
imul
fidivrl
flds
ja
mov
jmp
add
jo
fnstenv
das
pop
je
dec
inc
imul
add
je
cs
jge
cmp
sub
push
clc
push
jg
lds
adc
mov
sbb
cmp
ja
mov
inc
and
test
inc
pusha
or
in
pop
das
push
aaa
xlat
cwtl
xchg
add
mov
pushf
xchg
mov
push
inc
shrb
push
or
repnz
rcll
adc
lock
ds
leave
lcall
xchg
icebp
test
inc
imul
cmp
push
test
add
pop
pop
shlb
xorl
inc
add
into
lock
fdivrs
xor
inc
ds
add
pop
dec
mov
clc
mov
add
cwtl
inc
clc
pop
jno
adc
int
ljmp
dec
jmp
stos
jmp
adcb
andl
inc
aam
or
cmpsl
outsb
sub
cmp
and
fs
testb
repnz
int
or
test
or
mov
sub
loopne
dec
loope
je
cmp
cmp
jns
mov
cld
pop
and
mov
dec
push
or
push
call
cmpl
sub
mov
imul
adc
mov
cmp
push
adc
dec
fs
mov
cmpl
mov
sub
fdiv
pushl
mov
in
sbb
mov
es
add
cltd
loop
testl
rcrl
sub
mov
adc
cmp
mov
loopne
popf
gs
ds
movsl
push
and
and
inc
sbb
adc
push
mov
std
sbb
test
data16
inc
cmpsb
rcll
inc
sub
add
inc
push
sbb
bound
lds
inc
stos
sbb
add
leave
dec
rolb
popf
xchg
add
fwait
js
jl
push
cld
addb
add
add
f2xm1
push
pop
cmp
stc
jg
inc
dec
sbb
cmp
es
sbb
pushf
sbb
aaa
lods
arpl
subb
movsb
jnp
push
push
clc
mov
in
push
add
fistl
or
jmp
jg
stos
cli
mov
push
add
fs
pop
jl
testb
repnz
mov
mov
sbb
inc
fstl
shlb
push
mov
adcb
lock
add
sbb
data16
int3
outsb
ret
add
sahf
stos
test
les
add
sarb
mov
loope
fdivs
andb
pop
inc
jnp
xchg
mov
cmpsl
ds
lods
sbb
mov
aas
jmp
ret
mov
pop
xchg
and
cltd
or
sub
cmpsb
pop
adc
sbb
pop
jne
inc
mov
lret
cmp
jg
arpl
adc
mov
or
mov
sbb
cmp
mov
xor
mov
insb
arpl
push
cmpsb
jmp
and
pop
pop
push
nop
inc
outsb
fcomps
add
outsb
pop
mov
rcl
fdiv
movsl
push
jle
cld
mov
push
pop
cmp
ret
movsb
push
scas
out
rcrb
inc
fistl
push
inc
or
sbb
in
and
sbb
add
xlat
in
jmp
popf
testb
cmp
adc
push
or
dec
push
mov
and
mov
fiaddl
or
sbb
push
dec
mov
fnsave
int
clc
add
repnz
push
add
sub
and
adc
cmp
jbe
js
pop
cmpb
in
dec
mov
pop
je
and
cmp
pop
fsts
adc
test
lds
std
cmpsl
ss
cmp
or
je
add
je
mov
sbb
cltd
neg
push
mov
hlt
movsl
xor
pop
add
arpl
dec
scas
rcrl
cmp
push
add
push
ss
jno
dec
sbb
popa
std
repnz
adc
sbb
shlb
push
cmp
adc
and
xor
aas
xor
xchg
pop
dec
jne
push
xor
jno
mov
jo
push
or
sbb
sub
inc
xor
cli
add
je
adcl
push
or
push
les
mov
aaa
or
std
lds
enter
das
outsl
cli
inc
cs
arpl
and
mov
or
arpl
add
mov
jns
mov
or
in
xchg
xchg
addb
mov
mov
in
sub
and
mov
in
xchg
inc
pushf
insb
inc
lods
cmp
testl
mov
bound
test
jae
cmpsl
clc
push
nop
cs
mov
inc
mov
adc
inc
mov
add
fwait
orl
cwtl
sub
pop
lock
jne
add
xchg
pop
test
adc
ror
sbb
and
test
mov
mov
pop
pop
sbb
push
sub
or
add
mov
stos
insl
inc
enter
pop
cmp
ljmp
mov
sbb
xor
jmp
inc
lods
das
or
mov
insl
dec
adc
sbb
adc
pop
add
mov
leave
enter
adc
rorl
stc
jbe
add
std
hlt
jne
adc
add
and
or
rcll
mov
mov
jnp
mov
mov
fs
xchg
add
jle
mov
dec
add
xor
inc
daa
sub
data16
sbb
adc
sub
xor
or
ret
push
or
jo
jle
int3
jg
jg
dec
inc
in
add
pop
push
mov
mov
xchg
mov
xlat
in
test
dec
imul
pop
loope,pn
cli
and
jg
mov
hlt
adc
imul
inc
cmpsl
adc
fiaddl
and
mov
ret
push
mov
sbb
nop
ret
add
dec
outsl
fdivs
call
je
jp
mov
fsubrs
adc
push
mov
and
es
cmp
dec
cmp
cmp
inc
popf
out
je
inc
ret
call
jnp
pusha
scas
gs
pushf
push
xchg
call
sbb
icebp
aas
push
jae
scas
push
sub
mov
add
push
inc
bound
inc
pusha
jmp
test
or
and
jne
mov
stos
add
or
pusha
jbe
inc
lret
cmp
sti
imul
pop
insb
and
shlb
mov
pop
or
fdivrs
out
loope
rcrl
mov
mov
je
cmp
adc
cmp
jb
testb
jle
movsl
add
testb
movb
js
inc
dec
loopne
jecxz
mov
dec
jmp
inc
sbbl
je
cmp
xchg
das
stos
test
xor
cmp
jbe
clc
push
sbbl
outsb
in
test
imul
call
and
push
imull
and
pop
or
or
push
push
mov
nop
push
mov
fidivrl
mov
je
fstpl
pop
jmp
xor
and
sahf
mov
cmc
jmp
push
inc
pop
pop
lret
push
dec
dec
enter
pop
lods
aas
fsubrs
fs
xchg
mov
mov
xlat
adc
cmpsl
test
mov
fcmovb
sub
es
push
inc
in
fldl
pusha
sbb
inc
subl
add
jne
adc
sub
enter
stc
add
push
movsb
inc
sarb
cmp
add
mov
add
add
and
aas
xor
pop
enter
rcrb
aaa
pusha
xor
adc
sbb
cmp
xchg
test
add
xchg
pop
add
fst
clc
mov
add
lcall
andb
je
pop
and
fld
flds
fists
fildll
xchg
fwait
idivb
jmp
cwtl
mov
xor
push
inc
rolb
fildl
adc
loop
jmp
cmp
fcomp
mov
test
cmpsb
pop
pusha
push
xchg
fadds
inc
dec
and
sub
mov
sbb
pusha
arpl
jmp
or
test
add
or
dec
in
loope
clc
leave
test
pusha
leave
xor
xchg
lods
xlat
cmp
dec
lods
insb
ret
jg
or
push
adc
cmpsb
lods
cmp
mulb
shlb
add
fs
arpl
adc
nop
pop
lcall
lock
in
jb
push
les
nop
sub
sbb
cmpl
cwtl
sub
pop
enter
sbb
outsb
in
add
add
mov
call
or
enter
rolb
leave
and
lock
fadds
es
pusha
cld
cmpsb
in
enter
sahf
add
fidivl
leave
lds
mov
push
adc
push
push
inc
inc
pop
and
stos
add
imul
arpl
sbb
dec
xchg
lods
insl
movsl
dec
roll
int
add
lcall
mov
enter
or
push
add
inc
lahf
jge
jb
fdivs
adc
jnp
inc
nop
inc
mov
nop
jno
rclb
cmp
fmuls
lock
push
add
xchg
push
roll
call
add
inc
dec
lock
lock
insb
adc
or
cwtl
sbb
dec
mov
in
pop
lcall
adc
dec
pop
mov
enter
adc
xorb
push
xchg
or
js
or
or
push
and
push
out
cs
add
adc
xchg
add
dec
outsb
mov
cmpsb
in
dec
cwtl
inc
icebp
mov
jo
inc
push
in
shll
push
movsb
pop
int3
mov
cmpb
clc
sub
or
stos
cs
cmp
jno
pop
enter
mov
or
fsubs
cwtl
cwtl
dec
call
dec
pop
enter
les
jbe
stos
xorl
stos
in
adc
in
unpcklps
adcl
cmc
inc
adc
mull
test
cmp
and
push
jno
and
jl
pusha
fs
insb
jo
or
leave
js
add
push
sbb
call
adc
outsl
jecxz
mov
lea
and
xchg
out
cltd
movsb
fstl
adc
push
fdivl
mov
and
adc
and
mov
aaa
sbb
sti
gs
shll
xor
or
xchg
mov
iret
mov
divl
xchg
inc
pop
mov
sub
inc
jno
push
mov
sub
push
adc
sbb
mov
js
stos
fisubrs
js
lods
add
xchg
cmp
test
cmpsb
jne
cwtl
add
les
cmp
mov
mov
mov
or
mov
lret
out
inc
orb
icebp
lahf
pop
nop
inc
bound
je
leave
xchg
cmp
add
int3
pop
mov
inc
aam
adc
push
inc
sbb
dec
and
or
inc
bound
sahf
or
jle
ret
push
xchg
mov
fwait
les
imul
mov
inc
je
inc
push
loopne
xchg
mov
pop
sbb
jbe
fsubrs
cltd
jp
and
jb
int
lock
cs
sbb
xor
nop
sub
in
inc
xchg
pop
jo
push
inc
jbe
fsubr
jne
fildl
test
lret
inc
cmp
sbb
cltd
imul
in
mov
pusha
sbb
mov
shr
sub
dec
mov
and
ja
push
and
sbb
lods
sbb
push
mov
ret
pusha
aas
out
adc
loopne
mov
jns
push
pop
push
cmp
cmp
imul
pop
shlb
enter
dec
or
xlat
out
rcrl
sbbb
push
mov
add
add
push
call
xchg
call
adc
pop
xchg
push
test
faddl
aas
pop
push
pop
leave
imull
fistl
xor
sub
dec
xor
xor
ret
lds
add
mov
cwtl
adc
sub
inc
pop
in
ret
stos
and
adc
popf
jge
adc
cmp
jmp
push
lcall
mov
mov
nop
outsb
or
adc
add
mov
pop
or
jns
adc
lods
addr16
and
push
lea
mov
and
xchg
sub
aad
xchg
arpl
lds
push
loope
das
nop
addb
jo
jge
and
mov
mov
test
insl
adc
lock
shl
push
je
roll
nop
fdivr
in
leave
and
in
lods
or
in
or
adc
gs
nop
ret
shll
cmp
jns
push
mov
sub
sbb
jbe
and
xlat
clc
test
add
add
and
push
xchg
decb
add
fistpll
push
in
in
add
sbb
add
or
fcompl
rol
push
sbb
xor
and
aam
loopne
and
fadds
jb
add
and
sbb
sti
jno
mov
call
xor
and
aam
fadds
inc
xchg
add
es
movsl
sbb
insb
mov
sbb
mov
sti
and
ret
movsb
daa
jnp
faddl
mov
ljmp
cs
push
in
std
test
sti
mov
fdivr
or
movsl
aam
insb
sub
adc
daa
xor
push
cmp
nop
or
or
mov
or
xchg
dec
push
or
jg
sub
or
and
xor
nop
les
dec
jae
mov
adc
shrb
in
sbb
test
out
xchg
and
add
or
or
lds
sub
in
addr16
shll
les
sub
inc
addr16
orb
push
shll
add
and
add
aaa
adc
pop
dec
dec
or
mov
fcoms
jnp
lea
shrb
sbb
repnz
dec
sub
sub
rolb
xlat
add
lods
sub
or
fadds
fcoms
movsl
gs
and
sub
addb
subl
ljmp
rclb
add
test
test
inc
sbb
push
nop
dec
stc
arpl
adc
call
and
aam
hlt
sub
fsubs
dec
enter
add
ret
adc
addl
pop
pop
sub
fwait
mov
rcrb
gs
push
cmpsl
xchg
fiaddl
sbb
psubsb
add
cs
or
sbb
fs
adc
mov
imul
mov
mov
mov
shrb
dec
movsb
sbb
jmp
pop
call
rorb
fcom
jne
das
mov
push
add
sbb
inc
subb
loopne
loop
pop
js
xor
cs
xor
sbbl
inc
xchg
addb
pop
enter
mov
enter
sbb
lock
and
xor
ret
test
xor
cs
lea
push
mov
orl
adc
add
fdivs
and
mov
jmp
aad
cs
stc
dec
mov
add
xor
and
and
and
adc
dec
xor
mov
mov
inc
mov
int
and
and
or
inc
mov
es
pop
lock
into
mov
sbb
inc
mov
add
ret
cmp
int3
jne
js
or
or
adc
cmp
or
fs
push
or
or
xor
add
inc
pop
les
fs
add
mov
push
dec
mov
pushf
stc
repz
and
clc
xchg
arpl
and
dec
cmpsb
jecxz
sub
xchg
ss
xchg
loope
jno
loope
mov
in
pusha
mov
pavgb
inc
pop
add
and
insl
inc
outsb
inc
repnz
int3
pinsrw
jp
aaa
in
mov
pop
inc
int3
mov
mul
and
maxps
iret
enter
adc
test
adc
and
aam
js
test
jg
sub
dec
adc
mov
push
iret
inc
in
mov
pusha
add
mov
jns
push
sbb
xlat
ss
adc
and
vpunpckhbw
jp
aad
cmp
repz
sbb
cs
mov
rcr
jg
loopne
add
dec
aam
cmp
push
xchg
flds
das
and
lock
adc
hlt
mov
insl
imul
or
cmpsb
testb
aas
test
jb
cmp
cmp
sub
aas
mov
mov
rcrl
adc
jno
cmc
cltd
call
xor
adc
cmc
jno
add
or
dec
cmpsb
sbb
cwtl
adc
xchg
nop
pushf
mov
cmp
mov
data16
adc
fcmovb
mov
push
mov
inc
xchg
mov
push
test
gs
bound
jb
lods
xchg
aaa
inc
sbb
mov
imul
mov
test
pop
lock
movsb
fdivr
enter
sub
sbb
dec
aaa
flds
loopne
sarl
dec
pushf
shl
and
push
adc
sbb
imul
call
sub
aam
imul
mov
testl
mov
nop
popa
push
push
pop
fcoml
inc
add
enter
mov
aas
shll
or
inc
dec
je
adc
test
out
aad
fs
adc
xchg
adc
sti
jecxz
arpl
cwtl
testl
int3
jp
mov
out
jno
xchg
movsb
lods
dec
mov
ds
adc
mov
jo
nop
jnp
pop
adc
inc
xchg
xchg
cmp
inc
lea
inc
mov
jecxz
push
scas
mov
mov
fcomps
repnz
notb
enter
xchg
rclb
pop
or
and
loopne
add
inc
jb
scas
mov
test
in
add
int3
xchg
adc
fdivs
dec
or
add
cmpsb
in
enter
jno
or
add
dec
daa
mov
jne
dec
push
fadds
test
adc
inc
shr
xor
popa
in
shrb
jge
and
addl
insb
iret
loope
add
inc
es
or
aad
cli
push
inc
inc
jge
adc
dec
inc
mov
je
mov
nop
add
cmc
inc
pusha
sbb
push
and
ret
ret
std
hlt
mov
movsl
pop
and
stos
sarb
dec
cmpsl
lock
call
or
mov
or
add
add
orb
push
cltd
sti
je
or
adcb
add
icebp
inc
test
add
adcl
pop
dec
fs
adc
test
adc
scas
test
test
fldt
aam
daa
and
out
dec
adc
xchg
jnp
jb
xor
dec
in
dec
push
rcll
cmp
test
hlt
dec
rep
cltd
add
rcr
rorb
daa
xor
cwtl
and
nop
mov
and
mov
aam
dec
push
fcoml
xchg
lret
js
inc
xchg
mov
outsb
dec
sbb
aaa
adc
sub
or
lock
int3
gs
sbb
not
pop
orb
adc
add
adc
cmp
jge
cs
lods
dec
aam
mov
inc
mov
mov
mov
aam
add
mov
popa
and
loope
push
fcomp
in
inc
xor
rcrb
in
icebp
nop
dec
call
aad
mov
jle
pop
test
test
dec
mov
push
lock
mov
xor
add
xchg
lcall
xor
inc
add
in
in
jne
or
bound
inc
adc
aad
shrl
leave
inc
pop
pop
xorl
popa
movups
in
test
inc
jb
and
mov
inc
test
ljmp
bound
xor
aam
jns
jo
xchg
or
sbb
cmpsb
mov
jne
push
dec
cmpsb
push
gs
xchg
cmp
aam
or
or
sub
and
shl
dec
mov
movsl
and
das
mov
andl
lods
test
shlb
dec
xchg
fs
pop
and
ljmp
test
shrl
adc
leave
pushf
or
cmp
xor
jns
data16
popf
movsb
mov
test
or
mov
sub
xor
stos
adc
pop
and
and
inc
mul
push
ret
or
push
rorl
pop
sbb
xor
lods
sub
stc
lret
xor
adc
push
adc
xchg
cmp
mov
pusha
jne
add
pusha
and
pop
dec
cmpsb
inc
bound
or
adc
pusha
sub
sbb
push
nop
mov
mov
insl
test
int3
xchg
jo
or
push
movsb
lods
out
inc
adc
xor
mov
insl
lds
ss
push
cltd
lods
js
and
add
imul
inc
pushf
in
xor
movsl
fwait
jne
inc
mov
shl
inc
fimuls
test
push
push
pop
or
nop
mov
imul
add
mov
adc
dec
mov
fcoml
inc
mov
or
dec
or
call
add
jmp
push
hlt
push
jl
jb
adc
mov
test
std
push
inc
shrl
jno
push
sbb
pusha
std
call
rorb
xor
push
test
shll
mov
adcb
pop
and
nop
xchg
adc
cli
jo
adc
fcoml
xor
pop
jg
in
orb
pop
cltd
push
xor
jp
rcrb
push
pop
test
call
jg
gs
and
mov
jmp
jne
adc
data16
leave
pop
fdivs
inc
and
sbb
push
xchg
movb
clc
pop
enter
inc
pop
xor
cwtl
out
sub
push
sub
insb
stos
gs
idivl
mov
xchg
mov
cltd
in
sbb
and
shll
push
insl
fdivl
in
pusha
xchg
sti
push
pusha
adc
dec
push
dec
xor
sbb
inc
cmp
xor
and
sub
xor
cmp
mov
nop
js
cmc
inc
cwtl
sbb
inc
out
pop
jne
pop
adc
adc
adc
movsb
pushf
rorb
or
xor
mov
dec
and
mov
call
lds
pop
movsb
das
aam
inc
xlat
mov
pop
adc
and
pop
sub
or
jne
xor
cmp
sbb
push
rcll
adc
outsb
lods
test
mov
xor
push
or
push
mov
test
movsb
adcb
mov
lea
ret
mov
mov
mov
add
sbb
aaa
mov
subb
xor
jl
mov
xor
mov
lock
sub
xor
fmull
inc
int3
mov
inc
pop
int3
rcrb
in
and
rclb
outsl
inc
jno
iret
loope
loopne
xor
icebp
xchg
and
mov
xchg
ja
pop
adc
push
mov
jb
inc
ljmp
outsl
decl
add
rorb
sbb
pop
shrb
mov
push
cwtl
xchg
sbb
in
fnsave
rcr
mov
add
leave
cmp
sbb
cmp
and
lret
push
mov
repnz
push
in
mov
js
jne
in
mov
or
loopne
mov
adc
fs
in
adcb
xor
mov
xchg
jnp
inc
add
sbb
gs
or
mov
or
imul
mov
and
shlb
jno
xchg
or
mul
xor
push
push
je
dec
and
rclb
test
push
stc
inc
and
addb
aam
sti
sti
sbb
xchg
in
cmpsl
scas
mov
lds
cwtl
and
mov
add
loopne
lea
xor
sub
sbb
icebp
and
imul
pusha
push
dec
rclb
sub
ss
push
jb
adc
das
or
nop
and
test
xor
mov
push
push
inc
insl
add
push
jo
xor
add
push
push
imul
push
sub
mov
mov
in
jns
add
adc
xor
mov
in
cmp
insl
lock
inc
sahf
dec
lock
dec
and
or
adc
in
ja
or
addb
imul
xor
push
mov
insb
fsts
add
mov
sbb
xlat
xorb
mov
xchg
daa
shrb
xor
inc
or
stos
loopne
push
inc
ret
add
xor
mov
enter
inc
loop
sub
aam
pop
or
and
jg
call
lods
jg
mov
cs
out
fbstp
cmp
dec
sbb
lcall
int
rorb
pop
js
int3
inc
sbb
dec
or
xchg
inc
dec
bound
pop
cvtdq2ps
xchg
mov
xor
dec
inc
push
mov
jge
sub
jbe
in
das
fs
das
cltd
rolb
xor
outsl
aam
xchg
jae
mov
jmpw
push
ret
nop
xorb
or
movsb
mov
mov
mov
in
add
xor
mov
push
adc
aam
les
ret
orb
pop
addb
nop
imul
mov
xor
add
and
push
test
xor
mov
add
lods
insb
pushf
shlb
add
xor
sub
inc
fs
imul
xchg
dec
es
insb
lods
push
dec
es
mov
cltd
fs
push
jl
je
fs
dec
test
cwtl
fs
dec
es
mov
dec
es
mov
test
mov
ffreep
add
lea
mov
xchg
lods
insb
jmp
cwtl
jns
fwait
push
pop
fcoms
xchg
mov
mov
jecxz
je
mov
je
pop
cltd
movnti
mov
or
loopne
pop
mov
imul
pop
sbb
in
and
adc
pushf
movsb
and
mov
int3
aam
in
arpl
sub
inc
push
fsubrs
adc
push
mov
and
sbb
mov
pop
out
mov
or
dec
outsb
inc
test
and
leave
js
pop
aam
cmp
mov
mov
cmp
cmp
jb
mov
test
xchg
dec
xor
je
fs
lret
fadds
jbe
test
movb
dec
push
out
push
add
or
nop
test
dec
dec
test
aam
add
aam
cmp
mov
cmova
sub
gs
cwtl
ss
aam
sub
sbb
ret
adc
test
andb
cwtl
sbb
mov
jno
inc
addr16
loop
sbb
movsb
pushf
loop
cmp
push
push
adc
leave
and
pop
pop
pusha
test
pop
int3
jns
push
and
js
sub
lods
sub
icebp
je
rorb
movsb
fcoml
andb
xchg
or
lds
andl
sub
shlb
jns
inc
idivl
dec
adc
or
sbb
leave
and
adc
pusha
mull
or
push
push
jb
movsb
push
and
jg
dec
sub
sbb
leave
and
sub
and
in
insb
or
sub
adc
sub
pop
pop
push
pop
adc
push
insl
dec
rolb
mov
mov
mov
rolb
test
shlb
lea
mov
cmp
or
in
or
xchg
inc
stc
aas
mov
sbb
pop
xor
jno
aam
rol
es
loope
mov
stos
xor
inc
jmp
das
or
cmpsb
push
and
or
clc
jnp
push
mov
es
jae
inc
push
lea
cmp
adc
icebp
aaa
add
adc
inc
and
sbb
das
xchg
sbb
shlb
pushf
lods
inc
dec
push
mov
cmpsb
adc
rcll
scas
rclb
fmul
insb
stc
les
pushf
ret
mov
mov
and
cwtl
fiaddl
jb
jl
rclb
enter
push
ret
nop
xchg
ja
inc
dec
inc
or
ror
fs
inc
adc
xchg
xor
aas
mov
imul
xchg
pushf
sub
lods
xchg
fsubrl
push
or
je
subl
xchg
movsb
sbb
movsb
adc
add
dec
mov
jecxz
int3
jg
or
in
repnz
push
repnz
mov
sub
in
xchg
adc
shll
insb
mov
sub
das
sbb
add
pushf
mov
add
lea
mov
mov
add
or
pusha
mov
jo
sub
add
push
pop
fcom
mov
add
jo
lock
adc
repnz
push
jmp
in
test
test
loope
mov
insl
push
mov
cmpsb
inc
or
sub
repnz
cld
sub
push
and
or
hlt
rcrl
mov
cmp
jg
insl
shlb
aam
std
in
sti
adc
leave
fists
enter
adc
sbb
push
sub
push
movsb
andl
xchg
fidivrl
mov
mov
dec
scas
add
mov
clc
xor
repz
shlb
inc
add
or
in
jae
test
int3
in
xchg
pop
mov
inc
mov
leave
adc
mov
xchg
sbb
mov
fsts
mov
repnz
enter
dec
shll
pop
fstl
mov
fisubrs
xchg
dec
sub
mov
mov
mov
imul
mov
and
out
mov
pop
or
out
sbb
mov
add
jmp
mov
mov
pop
sub
das
xchg
adc
pop
leave
cmpl
xor
xchg
imul
adc
push
adc
xchg
adc
and
xor
rorb
xchg
push
dec
aam
xchg
push
insb
or
adc
add
mov
adc
test
int
and
mov
movsl
adc
test
test
in
movsl
add
lcall
inc
in
mov
lods
mov
push
xor
adc
add
or
or
or
lods
negl
adc
cmp
add
xchg
mov
out
adc
imul
mov
and
dec
movsb
or
mov
jno
push
cmp
push
lods
inc
sub
and
mov
cld
xor
loopne
add
and
shll
add
pop
xor
or
imul
gs
and
add
popa
xor
adc
adc
aas
aaa
ret
xor
std
xorl
add
fmull
push
popa
insl
mov
xchg
xchg
inc
movsb
xchg
xchg
sub
or
push
dec
push
insl
mov
call
inc
shll
movsb
jne
fstpl
punpckldq
adc
cltd
ss
rclb
adc
jns
je
scas
test
cwtl
xchg
imul
arpl
jns
test
je
cmp
sbb
xor
std
test
fs
inc
add
mov
sbb
jecxz
movsl
out
pop
fildl
sub
and
cmp
xor
or
fs
addr16
nop
cmp
pop
lcall
xor
adc
dec
arpl
xor
mov
mov
dec
fwait
sub
dec
jo
push
xchg
stc
insl
add
loope
movb
push
sub
int
pop
pop
pop
xchg
bound
sbb
sbb
xor
fidivl
xchg
and
dec
movsb
dec
mov
and
test
outsb
sbb
add
push
ret
dec
adc
int3
adc
cmp
add
in
shll
test
lods
adc
dec
cwtl
mov
icebp
or
jge
xor
rorb
xor
or
or
outsl
xchg
arpl
or
or
cmp
xchg
fimull
fldenv
inc
xchg
xchg
cmp
push
hlt
sbb
int3
add
movsb
cmp
push
mov
clc
or
daa
or
insb
jb
mul
test
popa
std
fisubs
lock
and
push
fadds
pop
fcmove
das
sbb
clc
sti
out
push
out
xchg
hlt
add
hlt
add
inc
push
cmpl
add
jecxz
sahf
or
sbb
pop
gs
push
mov
xor
sahf
mov
shrl
sub
push
sbb
inc
adcb
pop
cmp
sbb
movb
and
stc
enter
push
push
subb
lods
push
and
rcrb
and
sub
ljmp
xchg
les
hlt
fisttpll
insl
fimull
and
mov
pushf
stc
out
ficompl
adc
xchg
jge
jp,pn
xor
dec
push
lods
inc
push
ds
adc
cmp
push
nop
mov
adc
xchg
add
mov
mov
insl
adc
cmp
pop
push
imulb
sbb
push
push
cmp
in
inc
jmp
pop
mov
es
mov
sete
jmp
or
jnp
fisttps
mov
pushf
pop
ds
jl
fsubs
mul
mov
adc
inc
std
add
inc
add
sahf
out
cld
mov
testl
iret
sarl
mov
iret
repz
adc
push
inc
mov
cmp
sahf
add
push
inc
add
in
data16
push
mov
cmc
int3
push
ljmp
inc
out
mov
jl
pop
inc
es
and
push
rolb
clc
jnp
mov
add
pop
or
adc
mov
rcll
xchg
adc
push
or
cmp
rclb
sub
fs
jns
mov
test
add
nop
add
into
pop
adc
test
dec
testb
iret
jnp
pushw
mov
jmp
or
mov
push
sbb
mov
push
push
lock
rdpmc
pusha
scas
divb
incl
sub
adcb
mov
cmpsb
out
mov
and
pop
mov
ljmp
popa
je
outsl
outsb
push
gs
pushl
push
je
arpl
jne
jb
outsb
je
add
das
add
pop
add
imul
adc
jbe
out
outsb
lock
inc
outsl
jb
js
je
jb
gs
add
or
cmp
outsl
add
add
add
add
jne
out
je
imul
dec
and
push
add
add
loop
mov
or
dec
jnp
mov
repnz
inc
push
add
aas
popf
inc
icebp
add
ss
dec
add
sub
push
insl
xchg
je
pop
pop
out
push
je
and
jae
dec
fisttpl
xlat
loopne
mov
cmpsl
insl
push
push
xorb
or
bound
fisubl
push
jne
imul
jbe
aas
imul
ds
jp
outsl
or
mov
dec
fs
lret
fidivrs
out
outsl
jmp
jo
sbb
arpl
xor
sub
fwait
stos
insl
sub
push
imul
scas
cmp
jne
inc
sub
data16
scas
loope
outsb
dec
sub
jecxz
insb
jp
sub
insb
lcall
repz
lahf
sbb
xor
push
outsb
inc
imul
arpl
or
sbb
addl
das
cs
icebp
push
cmp
outsb
bound
sub
push
arpl
mov
xor
je
loope
mov
mov
gs
fcoms
das
jb
ret
inc
sbb
fidivrl
cs
add
xor
loope
loopne
outsl
andl
mov
fidivrl
jg
xchg
cmpsl
popa
sub
push
mov
lahf
aaa
jg
jmp
iret
lods
inc
push
pop
fbstp
xchg
dec
fbstp
jne
jbe
jb
jne
stos
aad
jae
jbe
test
xor
fisubrs
js
das
rcrl
pop
or
pop
cmpsl
ss
ljmp
pusha
fwait
stos
lahf
outsl
aas
or
movl
or
push
mov
mov
xlat
aaa
roll
imul
jb
fs
imul
shll
push
jl
popa
jnp
xor
outsl
pop
sub
das
xchg
mov
add
pop
das
mov
sub
xor
jge
je
scas
cmp
mov
jg
sbb
lea
out
pop
push
pop
jecxz
push
push
push
inc
sbb
sub
shlb
xor
dec
addr16
or
inc
int3
add
push
popf
insl
pushf
push
or
push
inc
jecxz
je
repz
adc
das
sbb
adc
adc
push
sbb
sbb
iret
repz
mov
sbb
out
cmpsl
stc
test
sbb
push
das
push
lahf
push
imul
clc
pop
jnp
cmpsl
xor
push
jns
jp
iret
sarl
cld
or
incl
dec
aaa
add
mov
mov
test
sub
sub
push
mov
lock
loope
lret
lret
test
cmp
imul
pandn
ds
mov
fbstp
or
push
fwait
mov
dec
add
sbb
fisttpl
mov
xor
add
add
das
das
inc
pop
sub
mov
shlb
dec
ljmp
das
inc
and
decb
popa
pusha
dec
inc
jmp
jl
scas
mov
jns
aas
or
pop
ds
inc
mov
xchg
sbb
ds
push
fcomps
daa
outsl
dec
and
or
pop
inc
das
fcmovnb
push
mov
pop
imul
iret
fcmovnu
ss
imul
out
insl
pop
jo
and
arpl
fcmovb
inc
pop
pop
jp
int
jmp
and
sub
aad
mov
fbld
fcmovnbe
outsb
push
ds
neg
iret
mov
insl
mov
jg
jnp
aas
es
cmp
cmp
add
in
jne
and
adc
add
das
das
icebp
aas
lods
rcll
addr16
push
inc
inc
arpl
bound
out
jle
dec
outsl
jbe
dec
arpl
inc
fiadds
aas
insb
jo
sub
addr16
xor
insb
xchg
pop
jg
push
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
mov
popl
outsb
jns
jg
addr16
popa
je
jb
sti
cltd
mov
adc
jae
jle
fsubrp
push
gs
sbb
dec
outsl
outsb
and
jae
cmp
jbe
inc
js
cmpsl
popf
aas
add
out
dec
or
pop
jnp
mov
jae
testl
inc
push
popa
insb
jne
ret
leave
inc
inc
mov
adc
and
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
outsl
push
mov
repnz
push
xchg
pop
pop
pop
pop
jg
lea
popa
bound
gs
imul
jg
loope
jo
add
jbe
js
jp
jl
jle
popf
int3
ficoms
dec
adc
lcall
loopne
neg
test
pop
add
orb
jg
jge
sar
lret
jno
icebp
pusha
inc
mov
clc
jl
js
ret
movsl
add
xorl
xchg
and
imul
out
pop
push
cmp
dec
add
dec
dec
cli
gs
xor
popa
js
ljmp
addr16
dec
pop
daa
pop
cltd
mov
outsl
ja
ret
ret
cmp
int3
adc
mov
add
push
add
add
add
xor
cmp
push
orl
cld
mov
stc
mov
push
add
pusha
push
add
fcmovnu
pop
jnp
add
or
xor
sbb
imul
in
std
addb
add
xchg
test
mov
and
adcb
pop
daa
push
cmpb
iret
mov
lret
jb
int3
push
pop
mov
add
mov
xchg
push
js
push
outsb
imul
push
out
jo
add
add
sbb
sahf
and
addl
rorb
add
in
xchg
out
or
mov
xchg
mov
mov
sub
fiadds
sahf
or
dec
cmpsl
xchg
shl
inc
scas
mov
cmp
stos
aad
mov
mov
jp
push
repnz
sbb
ror
jmp
cmp
ja
push
inc
push
inc
sub
ss
or
fucomip
push
dec
dec
inc
dec
inc
push
testl
mov
add
cs
jae
dec
bound
je
outsb
data16
out
sub
insl
xor
ss
out
je
xor
insl
sub
rclb
jo
pop
push
mov
outsl
js
push
sti
inc
repnz
inc
outsl
insl
jo
jo
pop
ljmp
xchg
shlb
aaa
insb
testb
outsl
les
dec
imul
mov
arpl
jo
ds
cmp
dec
inc
fdivs
daa
daa
pop
and
ss
jns
mov
push
aaa
clc
je
and
arpl
je
and
sub
mov
outsb
jle
fcmovnu
je
jbe
mov
jo
or
jb
jnp
or
xor
incb
mov
mov
push
lahf
fs
imulb
push
jp
pop
jbe
add
xchg
pushw
popl
pop
xor
faddl
mov
cmp
gs
push
inc
inc
add
daa
xor
shll
or
lock
push
outsb
mov
pop
pop
pop
push
push
jae
or
scas
lods
jbe
aas
cmp
adc
push
hlt
clc
test
push
subl
gs
mov
add
bound
or
xchg
inc
push
push
push
push
dec
testl
push
jne
repnz
push
popa
mov
pusha
lods
fbld
dec
jge
or
imul
push
imul
push
jo
or
xchg
or
sbb
xor
das
gs
sbb
mov
or
jne
adc
sub
or
stos
push
addr16
das
je
outsl
lods
jo
mov
xchg
daa
xchg
mov
cmpsl
cmp
pop
cmp
cmp
jns
insl
or
ds
and
sub
mov
jl
push
addr16
jle
xor
sub
sub
add
lahf
cmpsl
outsb
add
sub
pop
or
sbb
das
push
jb
je
xchg
inc
aaa
aaa
and
push
rorl
xchg
xchg
in
ljmp
stos
addr16
push
insl
popf
rol
add
ss
or
pushf
imul
jnp
js
hlt
dec
sbb
pop
cwtl
inc
sahf
inc
pop
sub
pushf
sbb
push
jl
jns
ja
out
sub
pop
cs
add
cmp
jns
out
and
adc
lret
int
sub
call
mov
push
push
aam
int3
out
sahf
out
mov
dec
jns
lods
test
outsb
mov
negl
mov
mov
test
sahf
out
jo
push
sahf
pusha
pop
pop
push
push
dec
jns
out
inc
xor
and
repz
repz
sub
enter
repz
push
sub
pushf
xorb
jns
out
push
xor
sbb
repz
repz
test
pop
cmp
ds
sub
in
sub
push
pushf
jo
mull
push
sub
push
and
adc
sub
outsb
shlb
nop
or
push
dec
mov
cmp
add
jg
xchg
ja
push
mov
cmp
push
add
mov
add
add
and
push
and
sub
or
pop
add
jnp
inc
adc
adc
das
ja
shlb
inc
add
addb
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
jmp
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
inc
movsl
push
test
loope
add
push
call
test
mov
loop
popa
mov
call
pop
lcall
gs
popa
data16
pop
shr
sti
add
xor
add
mov
add
add
push
push
mov
arpl
inc
insb
fs
repz
fstps
mov
jp
int3
xor
push
sahf
std
cmp
setl
sub
add
inc
or
dec
push
push
dec
and
or
jg
xor
push
dec
inc
dec
cmovns
clc
jg
cmove
push
adc
sub
adc
push
mov
inc
call
in
jg
lock
mov
out
xor
jnp
inc
loop
mov
ds
iret
aas
fsubs
pop
adc
clc
lret
sbb
jb
mov
and
adc
dec
scas
jp
and
mov
fstl
mov
and
inc
sahf
jg
cmp
dec
imul
lret
add
inc
mov
cmp
popf
mov
sub
fwait
ss
sbb
jg
inc
pop
jns
ds
xor
incb
int3
dec
dec
xor
cld
decl
out
dec
pushf
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
jg
pop
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
xchg
jle
inc
mov
xchg
push
pop
xchg
sub
pop
mov
push
mov
jns
mov
dec
test
shrl
andb
leave
hlt
mov
sahf
xchg
dec
add
les
lods
dec
lock
xor
pop
mov
pop
aas
and
in
repnz
and
xchg
test
mov
flds
sbb
fwait
add
adc
push
loope
cmp
or
pop
inc
pusha
push
fildl
sub
mov
mov
ds
and
orl
mov
dec
xchg
dec
dec
aaa
lock
and
and
negb
shl
cmp
sub
and
data16
scas
popa
adcl
ret
xchg
mov
adc
bound
jg
call
fs
pcmpeqw
sti
or
ja
popa
daa
fildl
pop
sbb
daa
je
lock
lea
pop
call
je
pop
or
lahf
fucomi
push
pop
add
loopne
lret
xchg
ret
inc
dec
loope
fcomi
inc
dec
mov
out
jb
add
mov
sbb
les
loope
push
pop
test
adc
lahf
imul
ds
pop
mov
mov
loope
pop
cmpsl
mov
and
movswl
mull
add
aas
out
or
adc
insl
mov
aaa
push
mov
cld
jg
mov
mov
das
mov
add
add
mov
jg
out
xchg
loopne
adc
sbb
rorl
outsb
xlat
jg,pn
ficoms
fs
mov
cmpsl
xlat
data16
cmp
mov
mov
sub
xchg
jne
aas
cmpsl
je
imulb
add
cmp
pop
pop
mov
sti
pcmpgtw
adc
cmpsb
pop
loope
out
jo
imul
arpl
ja
pop
lahf
es
es
sti
sub
push
mov
divl
or
xchg
nop
bound
mov
mov
inc
sub
insl
inc
or
sbb
ret
pop
mov
xlat
lea
push
xchg
ja
pop
lahf
data16
bound
mov
push
pop
adc
imul
sub
pop
inc
addr16
mov
inc
xlat
addr16
je
daa
je
and
jbe
pop
aas
arpl
daa
pop
arpl
pop
andb
pop
gs
jne
ja
dec
das
xor
and
jl
ja
arpl
popl
and
pop
stos
popa
testl
sbb
cmpsb
addl
imul
add
mov
sarb
ja
sarl
or
inc
mov
push
out
inc
ss
scas
sar
jmp
fbstp
add
sub
jnp
inc
aas
into
jle
mov
jecxz
addr16
or
xchg
popf
jl
push
arpl
inc
mov
sbb
push
arpl
jl
or
popa
or
xchg
add
cmp
or
xor
push
js
je
jae
inc
loope
std
ja
out
out
enter
inc
push
adc
aaa
pop
mov
pop
pop
xchg
pop
pusha
fisubrl
jnp
das
shrl
jecxz
push
push
jg
subl
mov
mov
sub
dec
aas
or
mov
push
inc
pop
xor
icebp
daa
jne
add
dec
es
jle
pop
outsl
dec
fwait
push
rorl
or
das
push
cmpsl
xor
ret
mov
inc
notl
or
xchg
jne
rolb
mov
outsb
stos
pop
adc
shll
sub
rorb
outsb
sub
rcr
and
scas
out
pop
dec
out
rol
push
fiaddl
bound
jae
jp
jnp
push
pop
mov
addr16
sti
and
fwait
push
sub
xor
mull
dec
or
inc
jmp
lock
out
arpl
pop
adcl
outsl
jmp
bound
pop
test
pusha
inc
outsl
imul
jb
pop
fidivrl
ret
ja
es
imul
mov
out
inc
push
mull
scas
imul
fdiv
jge
mov
insb
xchg
scas
test
dec
add
push
imul
mov
add
ss
mov
add
fstpt
dec
sbb
dec
lret
inc
pop
je
loope
ds
pop
dec
por
insb
aas
pop
mov
insl
lds
addr16
outsl
mov
je
sti
ja
push
int3
push
sub
cmpsl
xchg
inc
arpl
jo
pop
pop
push
aas
lock
mov
inc
jle
inc
dec
add
mov
lock
filds
jl
jl
jno
adc
jl
imul
push
fsubrp
xchg
cmp
and
addr16
loopne
mov
stos
das
mov
lock
ficoms
jecxz
ror
mov
xor
cmp
jns
mov
gs
jl
bound
push
or
out
push
jl
pop
jnp
jecxz
out
imul
jmp
lods
js
mov
mov
stos
popf
imul
adc
jg
adc
add
dec
sbb
and
out
add
xor
lret
xor
cmpl
bound
add
jnp
mov
inc
mov
jl
mov
fisubrs
fs
mov
imul
movlps
jl
sbb
cmp
repnz
dec
cmp
repz
adc
jecxz
jl
xor
aas
sbb
lock
push
imul
add
and
ljmp
rorl
xchg
mov
mov
xlat
aaa
sbb
mov
daa
inc
mull
pop
cmp
dec
jae
jae
mov
add
daa
fisttps
mov
jg
pop
xlat
aaa
cmp
add
mov
adc
mov
xorl
add
push
aaa
sbb
dec
mov
add
sbb
scas
xor
jbe
xchg
or
inc
out
movswl
add
push
sub
js
fists
les
add
push
sbb
push
addb
push
sub
sbb
bound
lock
dec
push
inc
add
in
leave
pop
pmulhuw
ss
inc
pop
mov
sti
push
cwtl
ss
push
add
fisttps
jnp
rcll
outsl
sbb
jo
dec
rcll
cmp
imul
movsl
push
stos
sti
jle
imull
add
pop
push
fiaddl
inc
push
inc
jg
push
pop
mov
iret
mov
es
test
push
and
cmpsl
stc
xor
or
inc
add
sub
js
aas
pop
sub
pop
lock
dec
pop
out
push
pop
sbb
addr16
lcall
addl
push
int3
pop
fstps
out
pop
fldl
sti
or
sbb
jnp
push
incl
iret
pop
push
push
outsb
ja
rolb
mov
mov
ja
dec
sub
push
outsl
pop
mov
jg
jo
jns
adc
mov
daa
inc
push
sub
cmpsb
push
push
add
or
insb
scas
push
or
sbbl
sti
aas
pop
popa
cmp
rcl
jae
fs
and
popa
outsb
arpl
push
gs
insl
pusha
push
cli
push
pop
out
popa
jne
or
and
dec
bound
ss
xor
repz
and
jae
push
loop
out
fists
decl
sbb
push
and
out
sahf
push
jnp
roll
jne
iret
repz
push
bound
sarb
or
mov
or
fisubrs
vpackuswb
cmp
gs
je
cmp
js
or
push
push
jo
jb
jge
mov
into
jb
mov
and
lods
ss
sbb
and
and
fcomip
pop
cmp
and
arpl
xor
cmp
fs
pop
popa
and
cmp
in
mov
test
and
and
mov
jne
je
ss
cmp
outsb
sbb
outsw
sub
jae
data16
aam
imul
inc
mov
push
movsl
fmuls
push
mov
xor
inc
popf
pop
jne
xor
cmpsl
xor
sbb
outsb
inc
or
je
loope
ja
push
ltr
js
movl
inc
subl
and
pop
adc
push
pop
addr16
pop
inc
xlat
mov
test
push
and
inc
cmp
cmpsl
add
int
addr16
ds
dec
cmp
pop
jnp
add
movsb
push
or
xchg
dec
mov
add
inc
iret
dec
call
push
pop
push
push
push
sub
pop
jmp
or
push
inc
dec
xor
and
mov
xor
mov
pop
mov
mov
mov
adc
inc
and
jno
pop
xor
mov
and
and
fs
xor
bound
jle
sbb
jae
inc
or
push
push
cmpsl
scas
mov
or
aas
sbb
loopne
xchg
sbb
mov
outsl
or
and
cmp
push
les
pop
mov
push
add
js
xchg
pop
dec
jg
pop
jmp
sti
iret
sub
stos
and
ss
stos
lret
outsl
pop
add
fwait
iret
or
xchg
shll
push
lods
mov
pop
inc
lahf
mov
add
mov
pop
mov
mov
outsl
mov
imul
imul
shrb
push
lea
jnp
lods
ret
add
adc
and
cmp
iret
imul
lods
fimull
pop
pop
jae
sbb
jp
jp
arpl
add
js
mov
pop
bound
les
xor
cli
add
addl
dec
jb
mov
jmp
add
pop
lods
icebp
lcall
iret
repz
mov
adc
pop
sbb
cmp
xor
cmp
repz
sbb
cltd
or
xchg
push
imul
add
stos
mov
das
adc
jns
fldcw
and
sub
xor
inc
mov
jge
fidivs
mov
mov
int
mov
shrb
ret
sub
insb
ss
add
das
or
adc
fwait
int
and
add
xchg
data16
insb
rclb
lret
str
loopne
cwtl
gs
das
mov
pusha
into
movb
pop
icebp
imul
sub
daa
inc
iret
cmp
clc
clc
push
out
pop
js
in
cmpsl
mov
or
shr
push
call
str
push
test
dec
fidivs
sub
mov
movsb
and
sti
sbb
das
sub
pop
pop
and
cmpsl
pop
or
mov
stos
jp
inc
outsl
inc
push
and
aas
sbb
jne
add
xchg
dec
inc
lods
sbb
imul
pop
mov
stos
and
fs
out
xlat
fnstsw
mov
aaa
or
outsl
jo
jo,pt
movsb
fwait
addr16
stos
adc
outsl
imul
cmpsl
dec
push
sbb
popa
insl
dec
arpl
sbb
nop
popl
mov
aas
push
dec
imul
xlat
sub
push
aas
push
lods
js
sar
jb
or
stos
dec
cmp
mov
sub
arpl
xor
shrl
and
cmpsl
push
or
mov
jo,pt
dec
cmpsb
mov
xchg
sahf
lea
sub
mov
out
clc
je
inc
imul
outsb
jae
sbb
add
scas
inc
or
jno,pt
pop
inc
repz
add
rolb
pop
inc
sbb
push
inc
push
imul
aad
frstor
sbb
sbb
mov
aaa
cmp
xor
in
pop
ret
and
jecxz
jb
js
test
pop
das
dec
adc
sub
xor
inc
and
outsl
loopne
scas
xchg
cmp
loop
dec
pop
roll
ret
mov
add
nop
lcall
sub
ffreep
out
adc
mov
rol
fistpl
mov
fwait
bound
xchg
xchg
pop
loop
sbb
mov
or
dec
cmp
cmp
push
mov
push
in
adc
sub
inc
jmp
add
rcrb
or
mov
sti
insb
test
adc
push
add
pop
xchg
aad
or
jb
xlat
mov
push
ficoms
scas
xchg
xor
cmp
and
cmp
jno
fbld
xor
push
jo
cmp
aas
add
notb
jo
jbe
pop
es
cmp
pop
inc
outsl
daa
push
or
push
repz
cmpsl
sub
push
lods
add
or
pop
popa
loop
sbb
sbb
imul
sub
aaa
inc
dec
pop
push
inc
jg
push
mov
out
dec
rorl
mov
iret
mov
fbld
push
xor
push
add
out
mov
pop
aad
ljmp
pop
inc
cmp
and
cmpsl
adc
pop
mov
imul
rorb
pop
mov
fucompp
es
jecxz
inc
sbb
inc
mov
add
xor
sub
aaa
shl
or
xor
mov
ljmp
loope
lds
inc
dec
push
inc
mov
add
add
ss
add
cmp
loop,pn
sti
mull
clc
fs
scas
push
or
push
aaa
push
ljmp
inc
loopne
mov
lahf
outsb
xchg
sarb
cmp
xor
adc
sbb
repz
insl
xchg
inc
mov
adc
vcvtps2dq
xchg
pushf
mov
rorl
push
xchg
push
inc
push
jmp
test
add
popa
rorl
dec
mov
inc
inc
stos
adcl
sbb
push
ret
cmp
addr16
stos
scas
dec
pop
cmp
test
ja
and
pop
mov
pop
jae
arpl
push
or
and
pop
rclb
bnd
sub
push
or
push
dec
cmp
int3
scas
mov
mov
mov
mov
iret
sub
imul
inc
mov
pusha
in
es
movlps
popf
lock
sub
mov
loop
push
mov
or
and
mov
addl
dec
les
jmp
pop
mov
repz
push
mov
stos
push
scas
mov
xlat
push
mov
loope
cmp
sbb
nop
nop
gs
rcl
testl
cmp
xor
in
jae
insb
lcall
pusha
or
xor
pop
and
xchg
push
push
xchg
aas
cmp
inc
pop
sub
daa
ja
push
sbb
pop
outsb
cmp
das
shlb
incb
mov
nop
nop
xchg
push
repz
xor
out
or
imul
stc
sub
adc
out
xor
stc
push
pop
mov
sbb
out
xor
fmull
lods
or
adc
inc
incl
ret
and
and
and
inc
shlb
ja
push
push
bound
adc
add
scas
sub
pop
inc
das
cs
imul
mov
aas
lret
lods
popa
mov
adc
movntq
sti
push
movsl
loopne
inc
out
jae
mov
sub
mov
adc
dec
and
dec
add
adc
xor
das
add
bound
dec
pop
sbb
cmpsl
mov
arpl
adc
arpl
cmp
loopne
adc
inc
jecxz
sub
add
aaa
out
pop
dec
xorb
add
jno
das
dec
jo
jnp
inc
cmp
or
das
jno
sbb
mov
stos
orl
push
scas
aas
lock
sbb
or
daa
xchg
dec
popa
jno
shrl
imul
xchg
adc
pop
push
mov
mov
xlat
and
sub
das
push
mov
pop
int
lods
and
mov
inc
bound
push
and
ficoml
repz
pop
mov
aas
imul
jmp
add
push
xor
aas
test
jge
pop
fwait
push
data16
inc
push
and
jo
xor
fs
adc
les
add
outsb
sbb
call
scas
add
lock
insl
pop
inc
ret
sub
adcl
icebp
mov
test
add
sti
cmpsl
inc
insl
das
outsb
push
push
insl
arpl
rcrb
ja
xor
push
sub
pop
mov
in
cmp
fidivs
add
sarl
lock
arpl
inc
push
push
int3
jecxz
xchg
pop
and
sub
loop
dec
and
loope
in
jb
dec
hlt
loopne
scas
xchg
test
sub
and
mov
dec
fs
push
leave
stos
rcr
sub
pop
sbb
fsubrl
sub
dec
and
in
loopne
mov
in
push
leave
push
xor
xchg
fcomps
sub
xlat
mov
push
add
pusha
dec
and
aad
in
jb
adc
push
mov
xchg
push
leave
sbb
sarb
sub
and
cmp
sar
daa
loope
sbb
xlat
rclb
mov
cwtl
jno
pop
and
lods
or
push
outsl
inc
push
and
lahf
xor
pop
sbb
mov
rorl
cmpsb
ret
mov
or
test
nop
ret
insl
sub
inc
jb
aad
inc
iret
dec
lcall
pop
dec
sub
xlat
inc
xor
jo
dec
out
dec
lods
fwait
pop
pop
pop
push
inc
mov
outsb
xchg
nop
or
mov
imul
test
aas
pop
xchg
pop
fisubrl
fcomp
mov
dec
inc
lcall
inc
pop
or
or
cmp
mov
inc
mov
sbb
setae
push
mov
inc
roll
push
inc
xlat
push
je
mov
in
inc
mov
notb
or
inc
cmp
inc
add
cmp
es
mov
aam
stos
xchg
imul
mov
inc
scas
jg
jp
or
movl
jo
add
inc
mov
add
add
push
mov
cmp
test
mov
sbb
stos
popa
ljmp
xchg
sbb
out
aaa
filds
jp
xchg
aaa
outsl
add
xchg
mov
add
das
push
cmpsb
lea
inc
outsl
jecxz
mov
imul
gs
push
rcrb
aas
mov
pushl
ret
addr16
ljmp
shlb
xchg
sbb
sub
scas
pop
mov
iret
inc
sbb
cs
push
sbb
or
icebp
or
cmp
push
jle
or
push
jg
jbe
test
xor
rolb
mov
push
jg
cmp
int
xchg
add
test
cmp
popa
xor
addl
and
inc
add
mov
jge
sub
jnp
pop
or
imul
pop
sub
daa
sub
jbe
push
or
addl
inc
popl
movsb
adc
int3
les
cmp
inc
es
addr16
bound
adc
je
or
ficoms
mov
fs
sub
mov
add
shlb
push
jnp
push
sbb
es
jae
add
shrb
mov
lds
mov
ja
sbb
lahf
aaa
imul
pop
adc
loope
mov
push
jbe
xor
xor
daa
outsb
xor
add
inc
xchg
ds
popa
rorl
ja
adc
add
imul
xor
outsl
dec
js
fs
in
int3
mov
fisttpl
loope
mov
stos
out
jmp
xor
add
jbe
sbb
shrl
add
repz
or
adc
and
cmp
and
cmpsb
sarb
push
push
lret
cmpsl
jge
mov
push
bound
aaa
sbb
dec
repz
xor
in
outsb
adc
jl
mull
push
aas
push
lods
loopw
std
or
push
pop
cwtl
fbstp
sbb
xchg
mov
mov
push
and
bound
pop
jb
stos
add
mov
push
inc
ret
jbe
add
imul
push
add
sub
inc
mov
lahf
mov
inc
jmp
xchg
pop
lds
adc
push
fistps
dec
cmpsl
jo
ja
lods
lea
pop
dec
sub
cs
imul
sub
daa
xor
pop
and
orl
testl
fisttps
inc
bound
or
pop
cmp
dec
cmp
cmpsb
adc
out
arpl
pop
test
push
dec
and
or
cmpb
fiadds
inc
pop
rorb
insb
add
cmpsl
and
lret
test
push
mov
les
lea
ja
es
xchg
sbb
lods
sbb
adc
mov
in
mov
mov
xchg
push
adc
mov
dec
es
outsb
sub
mov
mov
push
sahf
push
cs
cmp
xchg
sahf
cs
xor
pop
repnz
out
es
add
addl
shlb
mov
out
mov
jns
xor
jae
repz
fs
dec
sub
into
xor
pop
pop
jmp
jecxz
pop
pop
xchg
negl
dec
shlb
or
inc
or
xor
jle
js
xor
ja
scas
inc
cmp
xchg
jnp
mov
js
inc
push
xlat
out
mov
ss
push
dec
mov
cmp
push
pop
incb
xor
adc
xor
movhps
outsb
jb
loop
loopne
sub
push
cmpsb
xchg
ja
data16
hlt
loope
outsb
sbbl
xchg
xor
mov
jnp
arpl
sub
arpl
fs
mov
cmp
xchg
dec
dec
daa
divl
push
push
mov
cs
bound
imul
out
mov
mov
push
es
ss
outsb
out
loope
out
push
push
xor
dec
jb
das
lock
dec
das
add
negl
jns
inc
pop
push
nop
xlat
fnsave
dec
cs
sahf
push
push
sahf
lret
push
push
div
push
insl
sub
push
insl
mov
fidivrs
insl
push
inc
ja,pn
xor
push
out
adc
jp
ds
outsl
mov
scas
jg
dec
das
xor
fisttps
jp
pop
ja
lock
outsl
pop
outsl
dec
xor
xchg
adcl
outsl
decb
in
subb
and
sbb
and
sub
dec
imul
ja
push
mov
es
inc
mov
lods
xchg
aam
lahf
andnps
pop
lret
out
push
popf
ret
jnp
dec
cmp
jle
push
cmp
push
lahf
and
out
cmp
push
inc
inc
fldt
dec
xor
adc
jae
addb
xchg
inc
xor
xlat
mov
mov
add
add
scas
pop
xor
push
jmp
icebp
sub
adc
mov
cmp
jae
or
mov
adc
mov
fs
xor
mov
pop
sbb
jle
inc
inc
add
das
arpl
add
mov
inc
xor
shl
stos
scas
adc
test
lods
fnstcw
push
cmp
push
or
daa
adc
cmc
sub
lahf
pop
nop
inc
filds
dec
lret
jmp
push
add
dec
jecxz
push
xchg
mov
sbb
dec
outsb
mov
jecxz
pop
sti
shl
sbbb
and
out
ja
xlat
adc
pop
popa
daa
sub
inc
add
mov
sbb
add
outsl
popa
fs
outsl
mov
movsb
pop
aas
loopne,pn
sbb
pop
push
inc
xchg
inc
fs
xor
les
cmpsl
xor
cmpl
push
scas
js
mov
sub
push
push
add
inc
fs
pop
cli
dec
scas
addr16
sbb
arpl
imul
mov
pusha
jb
repz
jp
ja
pop
sub
push
xor
lcall
xchg
inc
divl
sahf
xlat
xchg
cs
out
sahf
insb
add
pusha
add
cwtl
xor
pop
ja
xchg
mov
ja
pop
cmp
xor
aaa
in
jne
jo
arpl
xor
inc
mov
ja
xor
xor
push
sub
or
inc
push
int3
rolb
pop
lret
mov
repz
fwait
mov
es
xor
stos
lods
push
xor
add
lahf
lea
jecxz
sbb
ljmp
push
and
shrl
add
lcall
jmp
xlat
jmp
fildll
fldl
push
scas
xlat
add
dec
addl
adc
sbb
sbbl
dec
movsl
sub
imul
push
and
cmp
mov
insl
das
push
inc
stos
or
and
and
jnp
cmp
lahf
popa
fldt
shlb
repz
mov
and
cmp
xchg
pop
out
and
adc
jp
mov
stos
inc
movsl
fisttpl
xorl
jns
lods
adc
shlb
iret
fisttps
adc
xchg
xchg
arpl
or
lea
jae
daa
jbe
xor
int3
inc
stos
testb
mov
push
fisubrl
repz
imul
loope
sub
push
movsl
mov
mov
add
cmp
frstor
ds
ds
mov
dec
xlat
jle
xorb
pop
mov
fisubs
jmp
mov
ja
mov
inc
adc
push
dec
aas
xchg
sbbb
imul
lahf
sub
jnp
imul
in
std
add
push
insb
hlt
out
cli
outsl
clc
out
mov
mov
iret
jmp
xor
inc
das
insb
call
dec
xchg
push
ljmp
push
add
nopl
and
mov
mov
push
in
lcall
push
and
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
sti
call
mov
inc
push
insl
ss
adc
cli
mov
sub
sub
jg
aas
cmp
mov
sbb
mov
ds
or
xor
pop
sbb
xor
mov
pop
insb
pusha
decl
mov
sbb
mov
cmp
dec
pop
dec
xchg
jecxz
dec
push
mov
add
pop
adc
inc
pop
jb
adc
dec
arpl
mov
icebp
mov
push
mull
insl
push
mov
pop
fs
push
add
push
xchg
mov
xchg
cwtl
test
and
xchg
rclb
jbe
leave
roll
and
xchg
out
mov
scas
pop
xor
hlt
fwait
in
inc
aam
leave
jae
xor
les
cmp
pushf
cmp
movsb
inc
xchg
dec
jae
pop
jb
je
fs
addb
inc
outsl
repnz
rolb
xor
push
dec
push
pop
clc
mov
jne
pusha
mov
lret
mov
shr
arpl
pop
ret
test
call
pop
xor
jnp
push
sbb
xchg
cmp
sub
pop
xor
inc
adc
inc
push
mov
cmp
inc
jnp
daa
mov
inc
mov
jge
bound
or
pop
imul
daa
push
aaa
ret
ds
dec
push
cld
jg
hlt
mov
daa
bound
je
bound
imul
dec
nop
inc
add
mov
cmp
pop
aaa
out
aas
aad
fisubs
fcomps
push
cmp
jbe
or
jae
xlat
test
test
aam
add
mov
popa
mov
pop
sub
push
stos
pop
inc
andl
push
push
scas
pop
jmp
or
fisttpl
lods
aaa
inc
bswap
mov
push
pop
xor
dec
mov
insl
les
inc
dec
sbb
mov
test
aas
jge
add
call
add
rolb
bound
dec
mov
nop
inc
mov
lock
loopne
add
push
pop
jg
iret
outsb
repz
ret
cmp
dec
jg
mov
ljmp
jo
out
je
adc
jbe
mov
inc
push
outsl
dec
xchg
aam
and
sub
dec
add
push
aaa
dec
inc
arpl
roll
cli
addr16
test
ds
out
cltd
pop
sbb
insb
repz
cld
xchg
pop
les
mov
imul
ja
loopne
cmp
jae
jle
pop
push
jg
jnp
xchg
in
add
push
pop
cltd
cmpsl
xor
sahf
aaa
leave
out
cwtl
sbb
or
mov
fucom
fldl
jo
test
adc
ds
mov
ds
imul
xor
fs
es
int
xchg
loopne
fildll
fldl
xor
sysret
pop
jae
aaa
dec
popw
faddl
pop
cmp
scas
icebp
pop
and
mov
cmpsl
mov
cmpsl
xchg
out
push
pop
nop
into
xchg
fldt
cmp
dec
push
adc
cmp
sarl
push
fimull
pushf
xor
out
push
scas
mov
icebp
adc
out
jmp
dec
pop
xchg
adc
sbb
adc
aaa
sti
mov
push
daa
xor
mov
mov
ficoms
push
xchg
mov
cmpsb
out
out
call
mov
repz
sub
xor
push
push
addr16
inc
in
fidivrs
rcr
push
mov
pop
pop
pop
pop
js
and
jnp
out
mov
aaa
sahf
pop
iret
fwait
std
jo
ffreep
pop
xlat
or
ljmp
inc
jecxz
jmp
xchg
pop
clc
jge
imul
jbe
or
mov
ss
push
aam
push
addr16
repz
sarb
repnz
loopne
sbb
enter
jns
mov
and
lret
push
iret
sarl
cmp
insl
mov
rolb
dec
cltd
dec
dec
scas
cmp
ja
push
or
add
repz
call
push
test
dec
adc
push
test
out
cmpsb
leave
jmp
dec
xor
cmp
repz
subl
dec
mov
push
mov
imul
out
lahf
mov
xor
or
lea
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
fcomps
imul
pop
mov
and
push
mov
add
idivb
imul
int3
push
and
pop
sbb
enter
cld
cmp
adc
or
adc
repnz
or
inc
sub
jno
add
mov
push
test
insb
pop
dec
orl
imul
adcb
cmp
fists
add
xlat
mov
popl
adc
test
ja
outsb
outsb
jp
xor
ret
out
js
xor
cmp
adc
pop
insl
gs
cmp
sarb
xor
sbb
jp
nop
sub
lret
fisttps
imul
aad
dec
jo
dec
add
inc
sub
dec
pop
inc
outsl
adc
dec
add
push
popa
je
insb
mov
push
xchg
cmp
movl
out
pop
push
ficoml
cs
xchg
jbe
pop
fistpl
es
push
inc
ljmp
or
stos
movsl
addr16
inc
or
adc
push
dec
pop
in
pop
sub
push
in
and
pop
addr16
test
lahf
subl
rcrl
jno
aaa
adc
or
les
xlat
jmp
xchg
mov
fwait
push
int
jecxz
jo
inc
add
daa
mov
outsl
inc
jecxz
sbb
or
outsb
insl
xchg
mov
in
decl
mov
les
sub
mov
cmpsl
fs
pop
jb
imul
add
push
and
ret
dec
adc
xlat
rcll
dec
ret
das
push
arpl
inc
lds
sub
fildl
movsb
and
andb
xchg
inc
in
jp
jae
aaa
fnstcw
jb
rolb
cmovp
sysexit
jge
xchg
rclb
insl
mov
outsl
fsubs
insb
std
lahf
icebp
dec
fs
jo
xor
sub
inc
aaa
dec
jmp
push
outsl
imul
jnp
adc
adcl
mov
inc
loopne
pop
xchg
jg
or
mov
jb
add
inc
xlat
jcxz
mov
imul
sub
cmpsl
arpl
mov
test
jbe
sub
mov
sbb
bound
inc
aas
adc
lods
aaa
pop
and
push
dec
mov
jmp
push
aaa
sbb
stos
inc
push
test
pop
cmpsl
mov
mov
int
sbb
mov
out
inc
fs
cmpsb
pop
addr16
subl
add
jae
fs
popa
and
xlat
adc
mov
es
xchg
psubq
push
sub
ja
jo
sbb
pop
add
das
xchg
jne
out
adc
dec
lret
sbb
cs
mov
mov
into
pop
pop
loopne
sbb
or
cs
data16
cs
outsl
aaa
imul
shrl
xchg
add
push
xchg
das
testl
add
xchg
pusha
mov
mov
pop
sub
add
pop
insb
sbb
daa
xchg
bound
adc
popl
orb
jge
pusha
daa
repz
test
inc
into
inc
inc
and
adc
mov
imul
pop
add
dec
stos
bound
add
aas
push
inc
pop
adcl
xchg
push
sbb
das
incl
sahf
mov
inc
pop
sahf
test
jo
shll
aas
roll
mov
xlat
and
dec
sbb
jmp
jno
mov
and
loopne
xchg
mov
fisubl
inc
mov
sahf
aad
inc
daa
sbb
mov
or
popl
pop
and
pop
or
adcl
push
rcrb
dec
lock
rorl
cmpxchg
fcoms
mov
xor
xlat
sbb
pop
testl
and
lahf
inc
sub
dec
shlb
push
mov
add
cmpsl
push
sub
stos
call
jg
in
and
pop
inc
add
inc
pop
pop
pop
inc
inc
or
jns
push
inc
cwtl
pcmpeqb
push
sub
outsb
out
xchg
jmp
xor
movsb
sub
and
std
je
mov
insl
jo
xchg
dec
movsb
fisttpl
insb
je
pop
pop
xlat
fnstsw
outsl
jae
daa
pop
jno
outsl
xor
push
inc
lea
or
cmp
pop
and
bound
pop
out
jns
je
jne
or
rorl
dec
or
out
iret
xchg
rcrb
ljmp
jae
decb
cmp
dec
out
inc
imul
adc
mov
and
imul
push
dec
rcrb
inc
stos
xor
inc
inc
dec
daa
test
mov
das
rclb
xchg
push
push
pop
neg
bound
sub
outsl
popa
adcb
sbb
mov
lahf
dec
subb
push
movsl
inc
push
mov
adc
pop
push
mov
sbb
push
xchg
push
xchg
pop
lock
jmp
xchg
lods
and
push
mov
leave
pop
pop
jmp
fwait
xchg
inc
insb
lds
adc
pmuludq
inc
fsubl
aam
jns
jb
shlb
jo
mov
push
ret
mov
and
or
xlat
insb
sti
mov
out
inc
outsl
outsb
or
aaa
push
dec
sub
inc
insb
orb
sub
or
daa
out
sbb
jo
les
out
jb
mov
mov
out
ds
mov
push
pop
add
push
jmp
pop
incl
dec
inc
dec
push
xchg
add
mov
xchg
xor
pop
jnp
ds
dec
fiadds
jg
ret
push
add
pop
push
jb
add
addr16
add
mov
lahf
incl
dec
add
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
incl
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fcompl
shrl
xchg
out
popf
rorl
mov
jmp
dec
fdivr
ljmp
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
jmp
push
sub
adc
or
cs
insl
sub
adc
or
or
cs
dec
ret
sub
xchg
mov
data16
mov
call
cltd
test
pushl
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
dec
pushf
pop
rep
cs
outsl
arpl
test
add
mov
mov
movsb
idiv
jmp
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
lahf
jo
flds
pop
and
es
js
pop
mov
imul
xor
das
ds
das
sbb
or
std
lcall
sub
jnp
filds
pop
inc
inc
inc
push
inc
pop
and
or
aas
js
mov
cwtl
mov
pop
sub
mov
outsb
dec
add
or
pop
pop
test
sub
or
daa
fistpll
push
xor
push
popw
or
sbb
push
cld
mov
mov
push
es
add
daa
push
mov
xor
or
push
lods
mov
and
push
inc
mov
mov
push
pop
mov
cmp
stc
mov
int
out
mov
outsb
lds
adc
lcall
sar
mov
cs
inc
jge
inc
add
mov
cmpsl
xchg
lods
xor
cmp
mov
pop
outsl
icebp
mov
pop
or
lahf
adc
cmp
dec
pop
idivl
insl
push
push
decl
scas
push
inc
mov
dec
dec
imul
xor
into
packssdw
push
and
xor
fildl
jb
ja
out
push
imul
xchg
push
sbb
testb
and
arpl
push
loop
cwtl
sub
jns
popa
mov
or
movsb
outsl
je
mov
pop
mov
jo
stos
rolb
dec
inc
fisubrl
out
and
xor
and
sub
push
lock
ret
inc
cld
loop
dec
inc
mov
adc
shlb
add
jne
push
add
std
mov
insl
outsl
fs
gs
jo
jns
iret
sbb
pop
mov
pop
sbb
popf
or
outsl
insl
jne
lds
fiadds
or
or
addr16
cmp
fcoms
je
inc
pushf
fiaddl
aaa
inc
insb
cmova
aas
dec
jbe
pop
lea
imul
pushf
sahf
aaa
xor
pop
sbb
jo
add
jnp
dec
sub
ljmp
pop
mov
adc
xchg
inc
or
inc
xadd
sbb
inc
cmovo
sbb
movswl
es
arpl
cmpb
aas
nop
jo
maxps
cltd
enter
inc
fildll
add
mov
decl
push
push
andb
mov
sbb
das
sbb
sbb
andb
cmp
in
push
hlt
daa
ds
testl
addr16
dec
fidivrs
inc
fisubl
daa
push
xor
inc
push
pop
lods
pop
lods
fldt
inc
add
jne
pop
js
ja
lahf
stc
pusha
in
lods
add
daa
les
enter
stos
rolb
inc
xchg
mov
lds
leave
daa
xchg
ret
data16
fs
idivb
push
adc
dec
fsubl
mov
imulb
test
add
jl
mov
and
add
mov
leave
jae
add
xor
mov
mov
lret
lds
fcomps
inc
push
dec
addr16
mov
ss
negl
jno
and
out
enter
in
stos
sbb
inc
inc
add
mov
push
xor
mov
inc
cmpsb
xchg
dec
outsl
xchg
leave
jae
iret
js
jo
pop
enter
pusha
movsb
xchg
cmp
repnz
mov
pop
and
and
aas
add
das
in
daa
clc
add
inc
int3
outsb
jnp
inc
push
push
pop
push
movsb
das
inc
xor
xchg
xor
addr16
aas
cltd
pusha
insl
adc
jns,pn
in
in
push
ds
mov
and
jnp
fwait
cwtl
xor
inc
push
nop
enter
push
outsb
dec
aas
ja
repnz
enter
cmp
adc
mov
mov
inc
ror
mov
mov
jo
outsl
bound
cmp
inc
daa
lock
insl
shl
dec
inc
enter
jne
daa
testl
adc
mov
jb
add
add
in
aaa
je
adc
add
and
sub
push
mov
mov
inc
dec
sahf
push
xlat
sahf
or
inc
jo
push
mov
jae
iret
inc
daa
aam
cld
nop
or
rcl
in
mov
leave
xor
inc
push
test
push
xchg
cld
insb
sar
lods
add
pop
in
cltd
fcom
pushl
pop
jbe
outsb
repnz
divl
cwtl
cld
add
iret
insb
inc
or
push
dec
in
dec
jae
push
sbb
lahf
cld
rorb
jns
in
rcrl
lods
sub
add
or
movsb
pushf
lods
mov
dec
lahf
pushf
xor
jl
in
cld
or
jae
pop
enter
mulb
in
rorb
lahf
pusha
iret
mov
inc
ja
mov
lods
mov
jb
mov
test
cld
mov
fsub
sub
jb
sbb
push
shl
fsubrl
bound
fistpll
and
outsl
cmpsl
or
adcb
daa
frstor
pop
enter
in
pop
int3
cmp
inc
ds
jb
pusha
sub
nop
mov
cmp
dec
push
dec
fisubs
sub
pop
enter
mov
jb
jl
rolb
iret
test
hlt
nop
fistpll
shr
in
jnp
repnz
xor
dec
push
xor
cmpsl
outsl
insl
orl
int
int3
js
pushf
fdivs
outsb
and
js
test
dec
int3
fdiv
or
jl
dec
adc
mov
xor
inc
push
and
cmpsl
js
sahf
outsl
insl
jg
mov
in
test
dec
add
je
les
in
inc
ds
jb
clc
adc
add
push
xor
lahf
clc
test
mov
lahf
and
shrb
je
dec
lahf
test
jb
push
mov
jb
iret
aam
mov
js
fadd
ret
outsl
adc
sub
xorps
imul
dec
dec
lahf
or
fsubs
jns
in
cmpsl
pop
loopne
or
or
nop
loopne
adc
push
es
adc
and
outsl
mov
pop
push
cmpsl
jg
dec
lahf
or
push
fs
addr16
dec
inc
cmpsl
push
insb
leave
xlat
sub
sahf
enter
fisubrl
add
lahf
movsb
clc
or
sbb
fadds
clc
cmpsl
ds
mov
jo
imul
sub
cmpsl
jg
or
cmpsl
sbb
mov
mov
adc
js
iret
test
add
fcoms
cmpsl
hlt
adc
out
nop
dec
fstpt
pop
stos
fcoms
dec
aas
inc
sahf
ja
rcrb
mov
fidivl
lock
dec
clc
or
ja
xchg
pop
pop
adc
jg
pop
sub
fcompl
addl
and
mov
inc
pushf
push
mov
insl
adc
inc
jg
in
pusha
inc
js
lock
lahf
js
loopne
or
pop
mov
push
sub
movsb
inc
mov
jg
int3
test
addr16
fiaddl
inc
ja
nop
out
inc
lock
and
sub
clc
fstl
inc
nop
int
mov
fisubrs
jo
popf
cmp
lahf
dec
inc
sub
aaa
fdivs
sar
fisubrs
jne
or
pushf
fdivrp
push
jo
add
jmp
jb
int3
fcompl
addb
sbb
mov
push
inc
fists
cwtl
inc
jg
and
rcr
lahf
imul
int3
inc
ja
rol
out
or
shl
fbstp
push
inc
jg
lcall
push
orl
and
pusha
fs
adc
fadds
iret
xorl
or
nop
inc
enter
mov
cmp
dec
sbb
sub
iret
mov
inc
jg
in
pop
subb
lahf
in
inc
int
imul
inc
adc
lods
adc
jae
mov
add
outsb
push
jmp
inc
add
inc
adc
lahf
lods
lods
add
cs
lahf
fs
pusha
jo
cs
or
mov
mov
or
fs
sahf
mov
jecxz
mov
enter
in
jecxz
pusha
outsl
insl
sbbl
int
aam
mov
pop
dec
lahf
nop
pop
ja
iret
inc
loopne
pop
in
cs
cltd
inc
loopne
lds
push
xor
testl
inc
outsl
scas
in
idivb
js
cwtl
add
mov
mov
shrb
in
mov
pop
fdivr
or
sub
xchg
inc
lahf
mov
inc
in
iret
xor
push
pusha
enter
pop
and
mov
pop
fwait
and
aad
jl
ror
shrl
jmp
sahf
or
lock
out
and
add
mov
inc
mov
stos
shrb
push
pop
daa
aas
daa
adc
data16
pop
mov
daa
inc
dec
fidivs
pushf
fcoml
pop
mov
scas
fidivl
fsubrs
xlat
mov
or
aam
adc
out
jnp
jge
or
push
push
addb
aas
mov
add
call
mov
out
lods
inc
pushf
ja
pop
lods
pop
mov
outsl
mov
add
dec
sahf
imul
mov
data16
xlat
dec
push
push
data16
xor
cmp
dec
push
subl
addr16
or
pop
xor
out
lahf
enter
ja
daa
sbb
test
leave
xchg
pop
leave
dec
inc
inc
pop
leave
xchg
pop
cmp
xchg
pop
leave
xchg
sub
xchg
popl
ljmp
stc
mov
mov
dec
push
xor
icebp
jnp
dec
mov
test
es
jl
inc
push
and
lock
out
ds
jnp
mov
adc
out
fidivrs
ja
dec
xor
ds
push
push
adc
in
movsb
mov
out
push
je
pop
cmp
mov
jmp
fisubs
push
ljmp
or
cmp
jo
dec
inc
xchg
mov
stc
push
and
ss
fcomi
xor
movsb
add
nop
add
jns
push
aam
mov
xchg
xor
mov
push
clc
push
inc
out
cld
inc
mov
xchg
jmp
pop
leave
adc
add
or
jg
sbb
add
scas
inc
dec
outsl
xchg
sti
ror
cltd
inc
sbb
push
jl
and
rcr
in
pop
leave
mov
dec
outsl
add
leave
xchg
or
pushf
inc
das
adc
and
testb
mov
fistps
cltd
cmp
jae
cmp
pop
in
xchg
pop
pop
leave
mov
pop
scas
add
push
or
out
jb
push
mov
fs
fbstp
cmp
add
jp
test
inc
xchg
cmp
pop
push
movsb
out
scas
add
bound
fs
add
xor
call
out
out
xor
outsl
add
sub
and
sub
out
push
sub
js
aaa
js
sahf
out
sahf
cwtl
add
mov
dec
hlt
out
movl
push
sbb
lock
sbb
dec
xchg
or
cmpb
adc
mov
mov
xor
sbb
ja
jns
daa
push
loopne
in
lock
dec
mov
icebp
outsl
sub
mov
add
and
mov
enter
xlat
mov
and
and
lods
loopne
mov
push
cwtl
pop
add
dec
xchg
fsubs
out
dec
fisubs
or
or
daa
add
dec
jo
sbb
cmpsl
mov
push
aaa
stc
lods
jb
iret
out
add
adc
daa
inc
lods
fsubs
jbe
add
mov
aaa
jmp
out
loopne
pop
pushl
jl
sti
push
or
xchg
push
cwtl
aam
jg
inc
bound
jge
pusha
repz
loopne
push
pushf
les
xor
aaa
inc
repz
xchg
rorl
xchg
mul
jecxz
add
js
xor
repz
lds
testl
xchg
add
mov
outsl
bts
mov
push
outsl
jg
movsl
scas
sbb
mov
or
push
xor
mov
movsb
cmc
scas
push
movsb
clc
push
mov
hlt
ja
jbe
scas
pop
testb
and
clc
loope
xchg
mov
or
mov
loope
adc
pop
or
sbb
push
lods
ss
xlat
or
decl
idivb
cmp
daa
xlat
or
xchg
shl
mov
cmc
dec
inc
divl
and
xor
fdiv
and
push
pop
in
cmc
mov
testl
dec
push
push
mov
nop
imulb
mov
divb
xor
aaa
adc
divb
call
cmp
dec
divl
sbb
outsl
sbb
or
js
cmpsl
push
pushf
nop
adc
jo
scas
fiaddl
dec
mov
pusha
mov
jg
daa
pop
lods
pop
mov
ja
loop
fildl
add
and
jg
enter
addr16
add
jb
iret
test
adc
add
sub
clc
dec
mov
mov
test
lods
aad
or
pop
adc
addr16
sub
pop
cmp
ss
adc
dec
stc
aaa
add
xchg
dec
and
mov
push
aam
mov
sub
int3
addr16
dec
xchg
add
add
daa
loopne
sub
daa
or
mov
aaa
mov
push
in
cwtl
push
xchg
add
call
imul
outsl
mov
test
xchg
aas
add
decb
cli
cmpsl
and
xchg
aaa
or
or
jno
adc
jmp
cli
adc
inc
sti
das
outsl
nop
fwait
mov
add
or
cmpsb
or
xchg
movsb
enter
mov
add
push
add
add
push
repnz
js
add
cld
loopne
xchg
mov
push
cld
pop
adc
dec
xchg
add
add
mov
mov
lahf
add
mov
or
lods
push
daa
or
in
add
inc
push
and
push
sbb
daa
aas
fdivrs
addr16
lods
int
clc
cs
movsb
in
sahf
aam
mov
in
hlt
std
push
mov
or
lahf
mov
and
test
push
mov
xchg
inc
and
orl
out
nop
or
jns
jbe
aaa
jo
rol
inc
sahf
or
loopne
repnz
adc
nop
mov
and
xor
lahf
fsubrl
sub
mov
adc
lcall
jl
les
clc
test
push
or
outsl
call
mov
mov
aas
addr16
test
add
add
add
jb
test
out
push
stos
shr
and
push
imul
faddl
xchg
pusha
xorl
int
mov
stos
xlat
cli
sahf
out
ds
mov
pop
mov
arpl
repz
mov
pop
cmp
or
repz
cmpsl
mov
adc
sahf
out
cs
insb
xchg
jns
out
nop
push
pop
mov
out
sbb
iret
mov
es
mov
out
sti
push
xchg
inc
mov
fists
ljmp
xchg
push
jne
push
xchg
push
jl
out
xchg
sti
cmp
sarl
push
ret
add
mov
sub
jns
fistps
cmpsw
jns
out
in
fwait
push
imul
pushf
cmp
incb
sahf
ja
cmpsl
mov
push
mov
cmp
sarl
dec
ja
into
jl
cmpsl
stc
add
mov
das
push
mov
inc
subb
out
mov
movsl
pusha
mov
sbb
out
sarl
push
and
pop
flds
xor
lahf
out
fcoms
stos
out
addr16
sarl
icebp
pop
lods
xchg
fdivrl
iret
sarl
pop
fdiv
cmp
xchg
test
test
sarl
gs
pop
mov
lahf
out
pop
test
pop
mov
imul
jmp
xor
out
aad
mov
mov
out
mov
push
lock
jns
mov
mov
out
in
xor
iret
cmpsl
stc
mov
push
loopne
mov
lahf
jmp
mov
int
jns
inc
push
lock
cmp
hlt
dec
sarb
dec
repz
and
push
xorl
push
ret
out
out
rcr
inc
les
out
scas
xor
fists
cmp
sarl
cli
dec
enter
iret
sarl
jae
lret
or
mov
mov
jns
iret
rcrl
movsb
sahf
out
out
sbb
ds
jp
clc
sahf
out
jl
sarb
lcall
ficomps
shrl
fucom
jns
loop
aam
push
scas
out
xor
jmp
sub
iret
sarl
mov
fs
repz
fcoms
sahf
cmpsl
stc
cmp
and
lahf
out
jl
fisttpl
fstpl
decb
xchg
jecxz
xor
imulb
in
push
mov
call
stc
and
pop
lock
repnz
sti
xor
jp
dec
sbb
testl
fldcw
lods
sti
aad
cld
push
cmp
fwait
pushl
add
pop
add
cmpsb
rolb
lahf
int3
nopl
push
in
inc
aas
pop
lods
pop
jb
jae
fsts
or
scas
sbb
lods
nop
out
push
xor
mov
mov
pop
loopne
aaa
lahf
out
fnstcw
insb
mov
or
popa
jg
in
cmp
aas
cmp
inc
fldenv
in
jns
test
aas
or
popf
push
arpl
int3
cmp
fcomps
loopne
ret
aas
movntq
out
inc
pop
xchg
sbb
out
dec
test
mov
pop
mov
xor
dec
cmp
ud0
pushf
mov
push
outsl
out
out
inc
push
outsl
pop
push
and
mov
sbb
and
imul
sub
pushf
mov
gs
in
inc
cmp
dec
aas
pop
jnp
leave
in
mov
ss
cli
mov
daa
pminsw
mov
outsl
addr16
pop
push
xorb
push
aam
or
je
in
add
pop
sub
mov
insb
or
adc
adc
xor
iret
shlb
jo
orb
push
lahf
push
sub
jno
dec
ja
sbb
leave
xchg
or
mov
filds
jbe
mov
outsb
jp
jb
dec
xlat
pushf
inc
pop
jnp
push
nop
pop
jo
das
je
or
inc
repnz
jg
lock
sbb
xchg
xor
pop
inc
leave
or
cld
pop
sbb
cmp
je
ja
jg
dec
movb
cmp
add
add
pop
xor
jo
popf
out
push
daa
inc
scas
push
xchg
fisttpll
push
push
dec
sbb
ja
data16
jl
dec
iret
ja
inc
fsubrl
pop
mov
fbstp
and
pushf
sub
es
xchg
pushf
scas
and
aam
pop
lods
fistl
pop
push
imull
pop
leave
test
lea
daa
sub
xchg
xchg
jmp
das
mov
push
cmp
mov
jmp
mov
xchg
test
push
out
mov
fiaddl
cwtl
cmp
xchg
out
les
xchg
adc
sbb
leave
roll
jbe
inc
jno
fwait
in
push
daa
inc
mov
inc
xchg
pop
mov
mov
mov
push
shrl
mov
lds
iret
push
andb
and
add
or
add
sbb
das
movsb
sbb
sub
mov
mov
ficoml
jl
scas
pop
lea
pop
xchg
and
inc
scas
aam
jb
pop
xchg
xor
es
fs
cmp
pop
mov
pop
and
nop
sarl
cmp
pop
push
pop
jmp
push
out
add
mov
mov
add
mov
inc
push
jns
daa
and
push
adc
xlat
dec
mov
cmp
inc
pop
push
addr16
push
jle
daa
push
dec
das
mov
enter
dec
outsb
adc
addr16
add
dec
das
add
add
push
iret
mov
adc
pop
push
iret
test
pop
inc
inc
out
scas
add
dec
mov
fildl
add
mov
daa
mov
mov
inc
repnz
fucom
mov
inc
std
mov
dec
pusha
cmpsl
add
mov
xchg
and
mov
mov
and
push
mov
int
out
fbld
outsb
mov
setae
pop
sbb
dec
or
dec
dec
into
ftst
out
sahf
out
dec
cli
push
add
out
pop
ja
sbb
or
or
cmp
dec
enter
xchg
push
lea
push
push
mov
xchg
dec
sahf
out
xchg
add
dec
and
jle
adc
mov
dec
jo
inc
xlat
es
movl
push
scas
daa
xchg
dec
leave
insb
and
int3
in
mov
cmp
mov
enter
pop
mov
je
sbb
jb
jg
mov
and
sbb
sub
cmp
mov
out
std
pop
test
test
pushf
pop
psraw
addr16
pop
or
add
call
push
mov
orb
sbb
test
in
inc
dec
insb
sbb
xchg
push
popf
sbb
stos
add
jns
xlat
int
add
add
cmp
movq
or
loop
stc
mov
bound
pop
in
xacquire
popl
or
sbb
sbb
nop
mov
into
rclb
andps
jmp
xchg
mov
xchg
jg
mov
lods
sbb
out
xchg
pop
enter
fldt
xchg
dec
ja
push
push
daa
js
and
sub
shrb
xchg
adc
adc
fiaddl
xor
pop
movsb
sbb
xchg
add
sbb
xchg
daa
movsl
xchg
loopne
dec
iret
daa
out
mov
daa
mov
mov
iret
push
add
mov
xchg
add
or
inc
push
cltd
jmp
xchg
das
add
dec
jb
cmp
test
push
fstl
daa
movsb
mov
cmp
jp
xorb
icebp
in
xchg
xchg
incl
fcompl
xchg
cmp
mov
inc
fldl
xchg
es
and
cmpsb
inc
daa
jl
fs
mov
cmp
xchg
pop
and
scas
in
xchg
xchg
pushf
sub
sbb
pop
cmp
adc
xchg
inc
mov
rclb
addr16
pushf
fdivrl
mov
xchg
repnz
out
stos
daa
daa
pop
in
in
addr16
aam
sub
and
jg
dec
push
mov
xchg
decl
inc
push
jns
add
add
push
pop
pop
pop
and
mov
dec
pop
scas
in
leave
inc
es
xchg
sbb
mov
push
daa
xchg
out
fstpl
push
add
aaa
push
add
cmp
movb
loop
or
rorb
incl
dec
and
aad
inc
sbb
leave
and
and
and
and
jno
xchg
jmp
jne
mov
test
inc
cmp
pop
into
into
xor
ja
pop
pslld
outsb
mov
mov
push
popl
mov
xchg
xor
add
ljmp
pop
jb
xchg
push
mov
addl
jb
jmp
js
xchg
call
addr16
mov
jmp
push
mov
add
dec
addr16
mov
test
xchg
mov
test
aam
dec
lds
and
rcrl
pop
push
sub
scas
nop
push
jne
and
das
or
cltd
out
cs
imul
pop
daa
bound
push
pop
jb
sbb
fisttps
xor
push
xlat
push
daa
xchg
push
jo
popl
mov
inc
push
int
inc
aaa
pop
ja
pop
cmpsb
mov
push
add
mov
leave
adc
es
pop
test
cmp
addr16
or
or
fwait
push
mov
shll
xchg
push
test
shlb
in
push
mov
clc
xchg
add
xchg
addr16
daa
aas
fnstsw
mov
shll
out
jns
add
filds
jns
out
std
or
add
arpl
inc
xchg
cmp
scas
fildll
push
mov
jecxz
sub
xchg
xor
inc
cmp
add
sbb
sub
insb
fnstsw
ja
daa
jns
pop
push
cmpsl
sahf
xlat
pop
ja
scas
lcall
xchg
mov
push
mov
leave
mov
add
jne
jo
es
push
push
push
mov
cmp
add
cmp
dec
dec
or
ror
inc
ds
pop
sub
lods
movsb
mov
fildll
sbb
ja
push
push
popf
fwait
dec
dec
add
sub
xlat
push
sti
dec
aad
icebp
unpcklps
jae
cmp
sahf
dec
push
imul
mov
push
add
nop
das
lcall
repnz
or
sahf
add
shrl
in
add
lahf
adc
push
mov
insl
jbe
lahf
mov
js
loop
scas
addr16
mov
cwtl
sub
pop
and
pop
mov
jmp
jg
psubq
cmp
mov
cmp
jnp
xchg
push
fs
sub
jmp
xchg
xchg
push
out
leave
inc
repnz
nop
icebp
jo
jecxz
iret
xlat
mov
in
repnz
addr16
addr16
sub
and
popf
pop
ja
inc
mov
mov
pop
stos
jae
sahf
cmpsb
scas
cmpsl
fcoml
leave
mov
cmpsl
hlt
std
xorb
mov
xchg
cltd
pop
adc
mov
addr16
aam
ja
aaa
arpl
pop
imul
repnz
jbe
push
mov
jns
daa
xchg
das
mov
in
add
das
ret
push
or
sahf
xchg
out
in
adc
xor
jns
add
mov
adc
cs
pushf
mov
xor
inc
xlat
mov
loopne
fwait
mov
shl
push
das
scas
iret
into
pop
fcmovne
fiadds
mov
testl
mov
jae
scas
and
ljmp
pop
xor
repz
cs
andb
jne
mov
mov
inc
cmp
push
shlb
mov
dec
mov
iret
loope
movsb
xlat
pop
dec
mov
daa
adc
test
movsl
shlb
js
sbb
dec
xchg
xchg
cli
addb
mov
cmp
push
cmp
cmpsl
add
or
xor
jg
mov
mov
adc
inc
add
mov
pusha
xchg
movsl
xor
test
push
fsubs
call
push
daa
xor
or
iret
ja
cmpsb
jb
jbe
pop
push
outsl
adc
fstl
add
cmp
dec
push
add
inc
sahf
fucomi
jg
jno
or
push
xchg
jg
push
push
rorl
inc
xor
in
leave
out
pop
cmpsl
xcrypt-ctr
cmpsl
pop
leave
repz
pop
add
ljmp
aaa
pop
jb
pop
pop
cmpsl
jmp
addr16
leave
inc
test
pushf
sub
mov
cli
add
test
sbb
sahf
or
test
inc
test
fildl
dec
test
xchg
mov
jbe
pop
mov
test
movsb
test
test
dec
dec
inc
mov
add
test
xor
sub
jb
leave
add
rorb
test
ja
daa
ret
cs
test
call
test
mov
stos
pusha
mov
pusha
ja
sub
xor
pop
mov
inc
cmp
out
pop
jno
pop
mov
outsl
fmul
andb
xchg
setp
movl
outsb
daa
int
aad
add
repnz
jmp
in
add
sbb
pop
or
mov
or
or
sub
iret
repz
cmp
dec
adc
cmp
fwait
cmp
unpckhps
gs
jns
js
insl
jne
xlat
sbb
xchg
out
and
mov
stos
out
mov
dec
ds
push
xor
sbb
lods
inc
sqrtps
xchg
or
mov
add
inc
mov
jp
adc
das
xor
or
dec
lods
mov
ja
cmp
pop
xor
fdivrl
add
daa
fisttpll
push
sete
dec
or
lods
or
mov
fidivrs
dec
int3
add
pop
jns
das
aam
pop
jbe
push
aas
mov
pop
shrb
js
jnp
aas
pop
cmpsb
or
out
pop
jne
pop
or
push
pop
jo
fnstsw
adc
adc
cmp
jmp
cmp
jp
and
mov
inc
push
clc
cmp
cmp
cmp
adc
in
cmp
sub
add
out
cmp
cmp
xchg
and
lahf
jo
pop
xor
dec
pop
inc
cmp
addb
jb
and
jbe
sub
jl
out
div
push
push
pop
mov
push
mov
cvttps2pi
out
or
jmp
std
inc
incl
cmp
cmp
mov
scas
aaa
sub
push
add
aaa
repnz
dec
scas
pop
push
add
out
xlat
pop
je
iret
test
mov
loop
sahf
mov
mov
pop
or
cmp
out
cmp
ud0
mov
push
add
add
add
out
push
pop
or
jns
out
xchg
xchg
or
fstps
pushf
mov
inc
cmp
shll
or
add
inc
cmp
outsl
ds
filds
mov
mov
adc
sbb
xchg
pushf
fs
je
cltd
sbb
cmp
pop
mov
push
lahf
pop
call
mov
in
pop
lods
jbe
inc
dec
hlt
test
mov
in
nop
mov
sub
iret
nop
out
inc
inc
shll
orb
cs
neg
inc
pop
mov
iret
xor
enter
add
push
mov
call
jne
jge
pushl
fnstsw
cltd
push
mov
mov
mov
into
daa
pop
leave
jae
push
pushf
xchg
mov
mov
out
aas
push
outsl
inc
rsqrtps
mov
add
pop
pop
call
or
mov
frndint
push
ud2
lock
pop
or
fwait
mov
mov
enter
outsl
xchg
int
xor
inc
pushf
cs
movsl
inc
pop
and
scas
hlt
sbb
pop
pop
fstps
push
addr16
lret
lret
subl
mov
mov
sbb
leave
sbb
xchg
out
pop
xorps
addr16
fisttpll
out
add
jg
xchg
mov
inc
mov
xlat
inc
lahf
roll
int
xor
testl
ja
mov
shll
aas
sbb
mov
dec
jp
mov
mov
ja
leave
inc
jmp
mov
mov
fwait
in
mov
into
das
mov
fsubp
inc
jb
mov
inc
add
or
pop
test
inc
mov
ss
cs
mov
imull
pop
ja
test
popf
das
mov
add
daa
iret
repz
ss
jp
or
in
mov
insb
popf
mov
xchg
push
cwtl
xchg
int
out
add
aas
cmovs
cmpsl
push
les
cmp
loopne
mov
jae
sbb
mov
sbb
aaa
cvttps2pi
push
xor
jmp
jo
xchg
xchg
mov
dec
sahf
add
xchg
out
pop
les
int3
xlat
setb
inc
adc
push
xchg
mov
sub
daa
dec
inc
mov
xchg
fistpl
arpl
jns
shrb
xchg
test
sldt
cs
out
sahf
movsl
fnsave
mov
das
femms
loopne
repz
paddusb
mov
out
adc
frstor
and
cmp
daa
dec
add
cmp
loop
ja
dec
push
das
cvtps2pd
pop
or
dec
scas
xlat
jbe
cmp
xchg
setle
cmpsb
xchg
leave
inc
xor
mov
ljmp
or
add
fnstsw
lahf
xor
cmp
jns
out
pop
inc
or
dec
pushf
in
or
mov
mov
js
shll
mov
stc
dec
mov
dec
adc
or
ss
mov
fistps
leave
repz
cmp
jb
jg
cmp
mov
pop
xchg
mov
cs
out
inc
loopne
popf
out
mov
mov
sbb
hlt
pop
and
sub
mov
inc
push
dec
dec
mov
xlat
or
outsb
mov
decl
mov
aaa
pop
mov
push
leave
or
mov
mov
cmpsl
fsub
paddsb
fcmovne
repz
add
cld
cmpsl
add
xchg
pop
push
cmp
dec
addr16
mov
outsl
getsec
mov
out
movsl
or
xchg
dec
bound
mov
outsl
adc
andb
mov
add
push
cmp
sahf
rolb
call
fisttps
push
aaa
or
cmp
mov
sub
scas
mov
dec
iret
leave
in
in
pop
xchg
cmpb
setns
push
add
leave
inc
int3
aam
fsubrl
in
xchg
adc
cmp
ss
rclb
pop
push
add
sarl
mov
aas
pop
inc
repnz
inc
sarb
xor
mov
push
jb
pop
addr16
roll
popf
movsl
cs
out
lods
xchg
shrb
pavgb
xchg
fisubs
pop
sbb
shr
sbb
ds
pop
jmp
inc
daa
dec
ja
xchg
jbe
jno
addr16
sarb
sub
dec
outsb
fildll
jbe
iret
xchg
xchg
out
ja
push
jg
push
add
repz
push
testl
jecxz
repnz
mov
ret
ja
outsb
daa
daa
fisttpll
jg
xchg
xchg
push
mov
mov
leave
into
loopne
mov
ret
or
dec
outsb
mov
notl
pop
cmovs
repz
ret
jg
test
cmp
mov
js
orb
sahf
xchg
ret
push
into
repz
mov
ret
jo
iret
fisttps
xchg
or
mov
les
mov
and
xchg
pop
insl
or
hlt
mov
xchg
outsl
ja
push
daa
mov
add
jg
test
btr
cmp
insl
xchg
pmovmskb
fisttps
out
dec
ds
or
adc
lds
mov
iret
adc
sub
daa
je
insl
in
lds
dec
das
sysret
dec
sahf
ja
push
bound
or
dec
sahf
out
or
repz
out
movsb
vmovsd
leave
andl
lds
fldl
push
xchg
scas
mov
cmp
or
pop
xchg
addr16
leave
enter
pusha
add
sub
push
cmp
insl
fisttpll
idivl
xcrypt-cfb
cmpsl
out
sahf
out
pop
mov
nop
or
jns
xchg
cwtl
mov
rol
into
lock
loop
rclb
outsl
loop
add
xchg
xchg
testl
cmp
les
mov
icebp
jne
out
mov
jo
sbb
daa
enter
jbe
xchg
xchg
mov
mov
scas
cs
push
leave
mov
xlat
mov
shll
cltd
repnz
mov
push
add
push
daa
and
cltd
scas
push
add
scas
add
cmovnp
push
jb
inc
movsb
pop
lods
mov
outsb
jb
mov
dec
dec
sahf
push
int3
aam
dec
sahf
dec
and
or
push
lcall
leave
adc
ret
push
push
leave
mov
pop
push
cvtdq2ps
cmp
arpl
pop
jle
push
fmulp
insl
sub
add
dec
aaa
jns
sldt
cmp
out
repnz
or
test
lret
xchg
bswap
repz
or
or
sub
inc
or
push
cmp
popf
pop
movsb
lret
das
insb
xchg
cs
out
int3
addr16
lret
mov
lahf
xcrypt-ctr
cmpsl
push
lret
outsb
fwait
pop
nop
subl
adc
test
sbb
lret
sbb
outsl
mov
xchg
movsb
pop
jg
pop
or
mov
inc
xor
gs
nop
pop
in
mov
in
lcall
pop
push
fsubrs
pop
mov
fistpll
mov
leave
outsl
iret
loope
and
lret
iret
add
iret
mov
pop
and
or
cmp
repz
cmp
inc
or
ja
dec
pop
push
or
sahf
out
adc
adc
jns
out
adc
adc
sahf
out
pop
rcrl
in
sahf
sbb
sbb
nop/reserved
daa
daa
daa
pop
push
adc
daa
adc
adc
es
daa
daa
femms
or
sahf
sub
js
int
int
out
cmpl
inc
push
sbb
iret
adc
mov
push
daa
pop
popf
xchg
and
bound
sahf
je
lahf
jb
idivl
int
loopne
lods
and
imul
daa
jb
dec
cs
and
iret
daa
lock
fisttpll
mov
ret
mov
fcmove
pop
sbb
and
int
dec
push
inc
pop
aas
into
test
das
cltd
xor
popf
adc
in
push
outsl
insb
iret
push
sahf
xchg
add
ja
into
outsl
push
add
xchg
and
add
cmp
mov
das
cmp
addr16
ljmp
scas
mov
aas
iret
iret
movsb
bound
fdivrl
ja
fcomp
leave
leave
inc
xchg
popf
movsl
pop
cltd
dec
ds
xchg
pop
rcr
ret
fsub
lahf
inc
repnz
lock
add
jmp
pop
and
xchg
mul
mov
dec
shr
mov
rcrb
rcrb
xchg
rorb
add
jo
je
scas
xlat
or
loopne
cmp
loopne
cmc
ret
lock
mov
sub
rcrl
push
pop
sbb
jmp
sbb
out
push
push
jns
out
wrmsr
push
or
or
out
dec
adc
out
push
adc
dec
sahf
sub
add
add
shll
push
add
popa
push
or
mov
rcr
adc
ror
fst
pop
cmp
lock
add
add
inc
push
stc
mov
daa
pop
push
adc
pop
stc
mov
rcrb
and
push
fwait
jnp
sahf
add
cmp
fisttps
push
or
pop
shlb
cmp
or
cs
mov
pop
mov
cmp
add
xchg
dec
ja
daa
je
sahf
mov
xchg
or
mov
mov
and
bound
xor
inc
mov
rcr
xchg
xchg
adc
adc
ja
rorl
lods
cmp
bound
pop
and
test
dec
leave
add
enter
rcl
add
sar
push
aam
es
adc
xchg
fs
aam
aam
pop
mov
test
cmp
jl
into
insl
pop
dec
leave
push
roll
sbb
pop
loope
pop
icebp
push
inc
pop
xor
inc
push
sahf
ds
add
aaa
in
mov
out
adc
pop
xor
mov
dec
push
jo
or
fidivl
sub
xchg
dec
push
mov
pop
bound
push
aaa
inc
loope
pop
jl
leave
repz
mov
push
xchg
repnz
fdivrl
or
or
in
jns
push
bsf
mov
fbstp
pop
out
push
jo
push
out
maskmovq
fs
push
inc
dec
sbb
and
mov
xchg
mov
addr16
dec
mov
jo
jbe
inc
inc
mov
cmp
loopne
call
ret
push
add
out
dec
and
clts
or
sbb
sub
cmp
xor
cmp
dec
adc
xlat
aas
pop
pop
and
das
xor
xlat
adc
aad
fidivl
push
ss
ja
mov
push
push
push
sarb
fadd
leave
dec
or
push
add
in
fcomps
invd
sub
cmp
or
repnz
loope
aas
mulps
aas
js
inc
mov
imul
mov
js
xor
push
inc
outsl
fcoms
push
leave
imul
repz
daa
sbb
repnz
add
jmp
xchg
or
mov
call
adc
jg
dec
ja
xchg
or
push
ds
add
cmpsl
sub
mov
push
ja
fincstp
js
sbb
insb
add
outsb
daa
mov
jp
cmpsl
push
mov
mov
shrb
mov
or
or
cld
fiaddl
add
push
fidivl
stos
mov
dec
dec
cs
test
dec
cs
mov
rcr
jns
push
xchg
push
aaa
xchg
mov
repz
mov
popl
fisttpl
push
add
xchg
sbb
fistps
in
dec
sahf
push
sub
add
add
add
or
cmp
inc
das
movsb
fisttps
call
cs
cmp
pop
ja
add
xchg
hlt
jb
jb
add
jbe
pop
movq
mov
dec
clts
loop
or
sbb
cmp
cli
jle
add
fildl
or
and
pop
xlat
push
add
dec
cmpsl
cmp
push
divl
pusha
add
das
mov
push
rolb
pop
mov
iret
fmuls
vmread
mul
es
or
push
pop
mov
iret
repz
nop
push
adc
movsb
fwait
cmp
movups
cmp
cmp
daa
iret
sarl
fstpl
or
sbb
push
adc
pop
and
and
xor
and
xchg
out
dec
inc
dec
dec
push
es
jns
out
movaps
sub
out
sahf
out
sub
js
out
sahf
sub
nop
cld
add
dec
cwtl
push
fnstsw
xor
cmp
fchs
insl
add
xchg
addr16
pop
gs
aas
les
pop
add
aam
push
push
push
mov
out
mov
push
ja
lahf
pushf
popf
sub
mov
lahf
xor
ja
ficoms
push
xlat
sub
mov
leave
inc
or
mov
xchg
ja
mov
push
outsb
mov
fbld
lods
cmpsl
fisttpl
mov
cmp
popf
shll
jmp
or
add
das
push
fisttps
jns
fistpl
or
mov
adc
out
es
adc
out
sahf
adc
mov
sbb
sbb
sbb
jns
out
sbb
sbb
iret
repz
sbb
pop
and
repz
xor
cmp
repz
and
fs
repz
and
mov
repz
cwtl
sub
repz
mov
cmp
sub
repz
cmp
decb
loope
push
loope
cmp
cmp
and
jg
loope
aaa
loope
inc
loope
sahf
out
cmp
aas
push
daa
arpl
jns
out
outsb
and
jns
out
and
sahf
movsl
and
sahf
out
sbb
jns
out
out
repnz
das
sahf
std
pop
dec
or
adc
dec
push
iret
repz
push
dec
sub
cmp
repz
dec
dec
dec
pop
jmp
scas
fwait
sqrtps
pop
push
jle
fdivrl
cmovp
iret
repz
pop
jl
mov
das
mov
mov
sbb
add
loop
xor
jno
and
cmp
sbb
out
sahf
out
inc
add
add
push
push
dec
pop
jecxz
iret
repz
or
jl
mov
repz
xchg
or
or
jle
jecxz
xadd
jns
out
lret
adc
adc
sbb
bnd
repz
jecxz
repz
mov
in
push
sbb
sbb
repz
sbb
iret
repz
sbb
cmp
pusha
pop
push
ja
jbe
popf
cmp
mov
xchg
dec
fwait
outsl
outsb
mov
in
cmpsb
scas
scas
mov
mov
orb
shrl
fmull
push
iret
repz
push
out
adc
inc
push
cmp
out
pop
in
push
adc
repz
pop
adc
push
cmp
repz
or
cmp
repz
push
or
xchg
pop
iret
pop
or
in
in
xchg
out
push
push
xchg
inc
shlb
dec
in
test
je
enter
int
cmp
push
repz
ficomps
add
outsb
pop
fmull
pop
clc
mov
mov
or
or
ret
or
or
cmp
mov
movaps
xor
daa
iret
adc
inc
cmovs
leave
in
in
pop
pop
bound
sahf
cmp
je
jl
out
addl
jbe
out
nop
dec
and
out
xchg
dec
scas
push
daa
fisttpll
add
cmp
sahf
in
in
push
out
push
fmull
mov
pop
push
nopl
das
cs
pushf
pushf
pushf
ss
dec
cmp
repz
push
punpcklwd
insb
mov
out
ja
adc
dec
outsb
daa
popf
das
movsl
lods
mov
dec
dec
dec
mov
jns
dec
fucom
pop
lock
add
and
push
call
xchg
jl
out
and
ja
pop
xchg
out
dec
mov
popf
xchg
xchg
dec
push
pop
das
jbe
cmp
pop
insb
pop
jbe
xcrypt-ctr
cmpsl
fwait
cmp
xchg
or
mov
push
cmpsb
scas
dec
mov
push
adc
jl
cmp
scas
push
clc
js
sbb
stc
add
adc
add
pop
fldcw
out
jmp
sahf
add
push
sahf
out
dec
pusha
or
jbe
leave
repz
scas
push
or
orl
iret
repz
setns
movsb
mov
fistpl
adc
in
repnz
paddb
ljmp
sbb
sbb
sahf
sbb
ds
out
pop
pop
push
dec
sahf
out
jne
and
jns
mov
pushf
fmull
bswap
fsub
repnz
lahf
add
mov
bswap
jmp
add
push
mov
jns
xchg
repz
imul
jno
jns
cmpl
movb
jmp
or
cmp
xor
mov
dec
sahf
ja
push
or
int
dec
dec
dec
dec
fucom
in
cmc
xor
in
adc
add
dec
ficoms
push
adc
out
fisttpll
sbb
sub
repz
sbb
in
ja
leave
and
pop
bswap
leave
leave
dec
orb
leave
movsb
lods
mov
dec
mov
mov
in
iret
das
xlat
cmp
dec
ds
std
or
repnz
add
and
jnp
jb
cmp
push
push
repz
pop
in
push
or
jmp
iret
or
fistpl
lahf
mov
iret
mov
fists
iret
push
testl
cmp
repz
icebp
sbb
sbb
testl
push
push
push
and
mov
xor
jg
insl
jbe
push
out
lahf
pop
out
mov
jae
cmp
sub
sub
iret
cmp
push
sub
push
sub
iret
repz
das
jg
mov
cmp
repz
iret
cmp
stos
xor
rcrl
cmp
fnstcw
out
cmp
data16
cmp
cmp
out
iret
mov
mov
jns
into
scas
in
cmp
repz
out
inc
cli
inc
addr16
sahf
out
lock
adc
lock
sub
mov
push
adc
inc
lock
sbb
loopne
aas
dec
inc
xchg
jae
cmp
jg
insl
fstpl
mov
pop
iret
lock
lock
lock
fimull
or
or
decl
icebp
sahf
out
mov
push
push
push
and
xor
out
adc
adc
repz
in
arpl
adc
adc
jns
pop
sbb
movsl
cmpxchg
mov
sahf
sbb
push
and
add
femms
sbb
pop
and
out
lock
mov
fmull
sub
filds
je
out
stos
push
add
iret
repz
out
jns
in
testl
repz
xlat
jnp
out
push
or
dec
repz
sqrtps
adc
es
adc
adc
iret
repz
pop
mov
xchg
jns
out
sahf
sbb
iret
cmp
dec
iret
repz
and
and
in
cmp
add
pop
sahf
out
ficoms
cs
and
sub
jns
inc
mulps
sub
out
dec
pop
movq
fbstp
jb
inc
leave
addb
out
sahf
aaa
lds
add
add
sahf
out
sahf
add
add
into
fimuls
aas
add
jg
cmc
lahf
adc
cmp
pop
out
sub
out
jbe
ds
add
cmc
xchg
out
into
iret
pop
cmc
out
push
push
jne
dec
cmp
push
or
into
or
ftst
pxor
cmp
jecxz
cli
adc
add
mov
or
cmp
repz
xor
sbb
clc
testb
push
sbb
sahf
out
arpl
xchg
xchg
out
xchg
out
test
outsb
mov
out
lret
loop
in
mov
add
andnps
andl
sbb
sbb
iret
mov
test
sub
daa
js
pop
cmpsl
and
ds
jns
aaa
mov
pop
add
sahf
out
add
orb
cwtl
or
out
or
in
xchg
negl
or
es
cmp
adc
iret
repz
adc
adc
mov
xchg
out
adc
push
minps
out
sbb
jne
and
mov
jg
pop
test
pop
add
clc
shld
jb
into
clc
into
repz
pusha
clc
lahf
push
push
lcall
stc
pop
wbinvd
pmaxub
jnp
pop
or
pop
daa
push
or
das
push
aaa
inc
aas
dec
fdivl
pop
outsl
andnps
das
pop
gs
xchg
cmc
adc
stc
jo
aas
mov
fistps
fwait
jns
out
sbb
mov
stc
lahf
push
pop
jl
sahf
out
and
and
stc
jp
stc
mov
jo
pop
cli
inc
fldt
pop
sub
sahf
out
pushf
xor
dec
sahf
out
push
push
pop
popa
insb
pushf
cmp
repz
or
orb
cwtl
femms
mov
ldmxcsr
mov
xchg
iret
adc
in
es
fnsave
pop
femms
fmulp
xchg
sbb
sti
adc
sbb
xchg
out
jns
sbb
push
pop
sbb
repnz
dec
sti
jg
sti
cmp
repz
fisttps
imul
cmp
repz
ss
or
ja
mov
and
inc
inc
jmp
push
daa
inc
das
or
aas
pop
clc
sti
stc
dec
lcall
icebp
xchg
or
cld
ljmp
push
cld
pusha
stos
sbb
mov
sbb
jb
cld
cmp
outsb
cmp
jns
out
lods
pop
mov
daa
fucom
into
syscall
or
mov
in
cld
pxor
cli
nop
sahf
out
and
adc
xor
cmp
dec
adc
sahf
out
pop
mov
ror
out
in
sbb
loop
sbb
fwait
jecxz
repz
and
fbld
cs
imul
sahf
out
and
xchg
es
sahf
out
daa
stos
sub
pop
das
sub
repz
xlat
push
das
loop
jmp
movhps
testl
decl
push
ss
add
cmovbe
ds
xchg
pop
std
imul
jns
xchg
aas
scas
mov
xor
mov
movsl
rorb
jg
pop
push
setp
jg
mov
mov
push
push
enter
jae
or
es
aas
out
popf
fisttpl
sbb
and
das
push
adc
leave
repz
adc
push
adc
jbe
jns
push
push
pop
fcmovne
repz
sbb
mov
pop
mov
iret
push
sahf
out
repnz
and
leave
lods
xor
add
push
jae
jns
push
push
and
iret
repz
sub
subl
daa
lock
pop
push
add
cs
idivl
das
cs
daa
push
xor
cmp
in
xchg
jle
push
mov
xchg
xchg
xchg
xchg
iret
mov
mov
imul
dec
inc
or
pop
add
add
add
pop
dec
dec
sahf
ja
push
pop
test
or
ret
fadds
das
in
add
cmc
or
xchg
call
or
shll
ss
into
test
sbb
pop
jo
mov
xlat
call
out
or
jo
fisttps
mov
push
or
jmp
pop
data16
testb
adc
sub
sub
inc
push
push
test
cwtl
dec
mov
sbbb
push
add
add
or
in
dec
dec
cmp
mov
add
add
aas
inc
push
mov
mov
pop
or
or
xchg
orb
cs
push
inc
inc
pusha
aaa
xlat
fidivs
add
cs
sbb
dec
pop
xchg
mov
jbe
mov
sahf
out
sahf
push
push
or
or
xchg
fmull
or
aaa
or
imul
daa
in
in
pop
cmpsl
adc
and
leave
inc
inc
push
addr16
das
push
jo
push
mov
insl
popf
cmp
jae
and
jb
mov
andb
cmpb
in
cmp
leave
in
in
movsb
fbld
in
into
aas
xlat
sbb
data16
das
cltd
pop
xor
aam
or
fadds
adc
mov
adcb
push
dec
inc
add
add
sbb
imul
je
orb
push
mov
add
add
movsb
add
pusha
cmpb
in
addr16
cmpsb
fisttps
mov
cld
mov
out
jb
jle
test
shll
fs
decb
inc
mov
nop
inc
mov
iret
mov
in
call
jle
jle
adc
push
ficompl
push
pop
fisubrl
fisttpl
fidivl
rcr
fsubp
stc
jb
jle
ret
andb
out
sahf
fldz
pushf
and
xchg
nop
mov
test
pusha
jns
out
push
dec
inc
cmp
out
sahf
out
xor
and
out
sahf
and
adc
or
in
sarl
hlt
in
and
push
fdiv
cmp
repz
aam
shlb
mov
push
nop
lods
pop
jns
repz
push
pop
push
dec
mov
out
cmp
cmp
sbb
clc
and
out
push
aam
mov
sahf
out
cwtl
nop
mov
js
jo
pusha
push
cmp
fmulp
repz
push
or
and
ds
shr
fadd
mov
jbe
pop
cmp
mov
push
pusha
pop
fs
add
test
mov
outsb
pop
jno
stos
pusha
add
mov
mov
xor
mov
jne
incl
dec
hlt
xor
fucom
in
aas
sbb
es
push
or
push
pop
jg
sub
mov
mov
xchg
xorb
iret
dec
outsl
lock
call
push
mov
daa
push
adc
je
out
pop
pop
shll
inc
sgdtl
push
adc
jg
add
sbb
xchg
jb
mov
add
add
data16
iret
pop
sbb
push
testl
adc
mov
mov
sbb
test
stc
pop
jg
jl
inc
mov
add
pop
out
pop
pop
ds
repnz
out
arpl
inc
push
xchg
es
xchg
sbb
lcall
push
out
pusha
and
icebp
mov
push
adc
dec
fdivp
pop
fs
and
push
cs
cmp
jnp
push
aam
rorb
idivl
in
or
adc
cmp
sbb
adc
xor
push
and
repz
push
push
and
adc
or
add
xchg
int3
and
aaa
inc
out
cmp
out
pop
imul
movups
xor
xchg
cld
cmpb
cs
cmp
shll
lea
iret
jmp
pushf
leave
fistl
cmp
pop
js
iret
repz
mov
repz
ds
enter
insl
add
push
pop
loopne
sahf
out
xchg
mov
repnz
loopne
iret
jae
das
push
dec
insb
dec
push
xor
pop
pop
mov
add
add
pop
repnz
pushf
or
ret
mov
adc
push
pop
dec
pop
stc
and
sbb
into
sbb
rorl
incl
lock
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
lea
scas
sahf
inc
stc
mov
adc
mov
decl
js
inc
outsl
inc
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
inc
ljmp
jbe
int3
repnz
test
pop
stos
clc
scas
adc
call
adc
cmpsl
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
decl
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
jg
lcall
pop
cmpsb
lock
mov
popa
sar
mov
sbbb
xchg
xor
clc
repz
mov
subb
fwait
xchg
and
sti
iret
int3
jbe
add
int3
add
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
inc
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sar
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
ljmp
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
cmc
jmp
cmp
mov
cmp
std
xlat
cmp
mov
sbb
decl
movb
aaa
fldt
cmp
jno
shlb
pushl
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
jmp
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
xor
std
jmp
sbb
gs
std
orl
pop
ficomps
frstor
jb
into
or
inc
add
notb
fmull
xlat
pop
push
add
nop
mov
inc
inc
push
dec
aam
filds
pop
dec
dec
inc
push
dec
inc
aaa
xor
mov
mov
jg
stos
insb
gs
imul
inc
aad
mov
jo
popa
push
outsb
jbe
imul
mov
sub
outsl
js
mov
mov
sbb
and
stos
dec
push
push
cwtl
mov
icebp
cmp
sub
dec
push
adc
xor
add
push
inc
dec
push
inc
push
nop
sbb
jo
jb
push
lea
inc
test
lods
xor
gs
gs
mov
cmp
ds
arpl
and
mov
dec
sub
dec
outsl
push
dec
pop
mov
push
push
xchg
xchg
add
je
out
xorb
test
adc
das
pusha
add
push
fs
adc
xchg
xor
aas
roll
dec
orl
or
dec
daa
daa
inc
hlt
out
fisttpl
imul
xor
inc
jg
fdivs
jl
inc
jns
dec
lahf
push
xor
les
push
cmp
mov
data16
jns
add
push
test
or
dec
in
inc
pop
and
sbb
sbb
out
dec
push
dec
dec
and
jae
jbe
push
push
or
dec
test
push
mov
xchg
rclb
mov
mov
popf
and
popa
jne
arpl
or
sbb
outsl
dec
dec
pop
xlat
out
add
push
or
add
pop
or
or
inc
xchg
push
stos
jbe
add
rcl
fnstsw
cli
dec
sub
mov
insl
shlb
pop
addr16
pop
mov
divl
push
negl
imul
push
arpl
outsl
push
jb
or
or
lds
sarb
push
xlat
push
mov
jp
lock
push
aad
and
gs
push
inc
dec
pusha
push
xacquire
sbb
and
push
push
stos
mov
inc
arpl
push
push
sub
mov
pusha
out
test
pop
jg
stos
pop
insb
outsl
xchg
insl
add
pop
xchg
loopne
rolb
lods
dec
sub
mov
data16
mov
outsl
xchg
insl
add
outsl
ja
inc
xor
ja
add
xor
ja
xor
inc
mov
push
pop
cmp
bound
push
xor
mov
add
icebp
ja
pop
dec
mov
adc
stos
sub
push
and
fiaddl
stos
enter
push
and
jb
leave
dec
sbb
sub
mov
inc
jg
mov
inc
or
iret
aas
incl
pop
dec
push
lahf
adc
enter
and
movsl
stos
inc
out
xchg
dec
movsb
sub
mov
daa
dec
dec
xchg
sbb
sbb
js
xchg
push
dec
lea
cmpsl
movsl
mov
mov
dec
outsl
push
shrb
push
dec
push
push
rorl
push
jne
les
outsl
loopne
loopne
loopne
push
sub
outsl
addr16
cmpsb
iret
ss
lea
push
rol
insl
pop
push
and
and
xlat
pop
insl
mov
mov
adc
sarl
xor
call
cmp
mov
fdivs
int3
test
inc
je
out
jns
add
cmpb
add
jns
push
and
lahf
lcall
jne
fistps
pop
ja
popa
push
out
mov
les
push
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
jl
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
ljmp
arpl
or
pop
adc
in
pusha
aad
jno
mov
inc
call
add
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
fildll
fcompl
shrl
cmp
incl
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
sub
mov
or
or
adc
decl
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
lods
pushl
mov
call
xor
out
stos
test
xchg
sbb
push
sub
insb
fs
add
hlt
push
imul
jmp
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
jmp
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
decl
mov
aam
movsl
fisttps
xchg
fadd
shll
call
shrl
imul
mov
sarb
add
in
add
pop
dec
or
decl
push
stos
inc
add
adc
or
and
test
or
mov
jmp
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
incl
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
jmp
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
mov
call
xchg
shll
push
repnz
addr16
cmpsb
incl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
decl
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
call
add
das
es
lds
or
sub
mov
cmpsl
call
ret
shlb
lcall
ficomps
ret
es
pushf
mov
insl
add
ss
jmp
ljmp
addr16
jb
push
hlt
orb
adc
mov
jnp
sbb
xchg
decl
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
lcall
mov
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
ljmp
cli
call
lcall
clc
sar
imul
push
js
or
push
cmp
incl
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
pushl
and
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
pop
xchg
sub
aaa
mov
or
sbb
addl
sub
cmp
add
cmc
mov
ds
outsl
inc
push
or
ds
imul
dec
je
push
insb
imul
sub
cmp
mov
pop
inc
jbe
push
jns
arpl
arpl
mov
push
or
in
push
inc
insl
fisttpl
inc
jne
outsl
insl
insb
rclb
inc
xchg
out
xor
xlat
mov
nop
xor
or
cmp
cmpsb
add
jne
dec
inc
js
sub
bound
popa
out
mov
inc
mov
push
jo
js
push
dec
subl
inc
jno
xor
pop
mov
pushl
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
add
call
or
xor
bound
xlat
sahf
ret
push
inc
jbe
pop
sbb
and
cmpsb
fs
icebp
xor
in
test
add
flds
xchg
int3
imul
dec
addb
sub
int
add
mov
aad
test
push
jbe
arpl
jne
pop
or
inc
aas
mov
test
and
inc
and
sub
sbb
push
lock
aaa
mov
xchg
insb
popa
jns
jne
sbb
push
dec
insb
dec
mov
mov
popa
xchg
cmp
push
fisubrs
sub
aas
inc
push
add
roll
aas
dec
mov
pop
add
and
and
dec
popf
int
scas
popa
jne
pop
inc
aas
pop
push
dec
xor
aaa
inc
mov
sbb
inc
or
adc
test
mov
inc
add
ds
mov
add
mov
pop
int
push
dec
dec
lea
xchg
sbb
mov
dec
push
pop
inc
outsb
jne
adc
insl
mov
jmp
push
xor
xor
mov
insl
fwait
or
add
addr16
arpl
pop
jo
inc
imul
or
notl
push
aas
aaa
push
jbe
or
popf
sbb
xchg
sbb
dec
ss
andb
outsl
pop
or
mov
lcall
jo
adc
inc
mov
mov
pop
add
xlat
mov
mov
arpl
xchg
daa
nop
or
jo
jb
addr16
pushf
xor
dec
popa
jo
add
aas
sbb
sbb
outsl
outsl
test
movsb
inc
pop
push
jno
inc
or
xchg
mov
in
pop
leave
add
adc
cmp
aam
and
pop
arpl
push
cmp
push
sarl
jo
push
push
loopne
inc
pop
push
outsl
insb
jns
push
and
das
inc
pusha
test
popa
jb
addr16
xor
into
nop
adc
pop
sub
insb
lar
adc
inc
lcall
mov
mov
aaa
adc
test
xor
mov
test
push
mov
add
sub
ret
aaa
dec
sub
adc
sub
pop
adc
addr16
xor
testb
popa
rorl
pop
and
mov
xchg
sahf
ret
mov
in
andb
pop
aaa
sbb
fcoms
cmp
and
pusha
das
cs
push
outsb
mov
mov
mov
repnz
daa
aas
pop
inc
inc
adc
andb
inc
inc
adc
adc
push
push
mov
add
adc
pusha
fsubr
or
add
nop
aaa
nop
and
push
repnz
std
clc
or
pop
mov
int
mov
and
jg
rorb
popa
insl
test
outsl
je
clc
and
pop
sub
das
or
inc
dec
push
and
cs
xchg
outsl
iret
cmpsb
dec
shrd
popa
incl
lea
in
out
das
jg
lret
mov
out
ud0
stc
in
sti
sti
jmp
repnz
in
push
pusha
ljmp
lret
cli
add
das
insl
push
cld
push
imul
pusha
daa
push
inc
es
add
dec
cmp
aas
loopne
add
or
or
insb
daa
aam
cmp
jne
adc
adc
add
and
add
add
dec
jnp
cmp
sbb
add
xor
dec
add
push
test
mov
push
mov
subb
nop
out
js
push
loop
enter
push
pusha
push
add
pop
add
decb
lea
and
iret
test
and
pop
jo
xorl
enter
lret
xchg
add
mov
mov
add
sahf
jae
arpl
jnp
imul
cmp
test
gs
push
push
imul
xlat
imul
mov
mov
lcall
in
mov
ss
sub
lea
stos
inc
lret
pop
and
pop
or
dec
jne
xor
ret
xor
jp
out
aam
sub
rol
cmc
sbb
xor
xchg
xor
test
jp
push
push
addr16
int3
fucomi
gs
add
cltd
lcall
jne
jmp
mov
jecxz
ja
pushf
stc
mov
call
test
insb
mov
xchg
push
int3
loope
mov
xchg
sub
mov
add
outsb
add
pop
mov
and
mov
adc
lcall
jb
add
xor
iret
sub
push
push
pop
cmpsl
dec
je
cmpsl
clc
sti
cmp
add
mov
cmp
sub
mov
mov
aad
rcll
sbb
mov
call
nop
cmc
cltd
ss
fadds
call
rol
adc
sub
leave
inc
lds
push
cmp
jbe
mov
add
dec
push
out
xchg
pop
mov
jl
nop
xchg
shll
test
sub
push
push
inc
test
pop
push
adcb
loopne
jbe
sbb
std
inc
call
sub
loope
and
sbb
sbbb
push
add
outsb
or
sbb
adc
pushf
and
cmpsl
pop
mov
aad
or
out
insl
xor
push
inc
imul
add
adc
mov
push
pusha
imul
mov
test
in
and
mov
dec
and
add
jl
lock
sbb
push
inc
adc
popa
ret
inc
loop
rcrl
imul
movsl
add
movsl
dec
cld
mov
lods
jl
hlt
cld
add
pop
mov
inc
imul
xlat
or
pusha
or
enter
and
out
push
repz
testb
dec
in
push
leave
push
xor
adc
cltd
cmp
or
pop
add
mov
dec
or
push
or
xchg
andl
pop
xchg
push
sahf
sbb
mov
jp
dec
pop
push
ret
movsl
jecxz
push
imul
or
nop
sbb
pop
cltd
test
in
mov
sahf
lea
mov
test
push
negb
jp
push
call
addb
cld
pop
mov
je
inc
test
movb
adc
mov
mov
jb
push
mov
mov
mov
and
sbb
loope
cmp
push
add
mov
xor
cmp
adc
inc
pop
insb
inc
je
sarl
fidivl
add
and
or
rclb
dec
sbb
movb
inc
repnz
aam
fsts
inc
mov
or
mov
lods
jecxz
repnz
mulb
xchg
cli
movsw
mov
cmp
lcall
gs
jmpw
aas
adc
in
mov
xchg
popf
cmp
push
dec
and
pop
push
mov
push
and
ss
jg
pop
je
call
push
push
adcb
sub
push
mov
lahf
sub
adc
xor
inc
mov
mov
fcoml
xor
rolb
or
rcrl
add
jl
jno
adcb
ret
push
mov
stc
mov
jbe
push
pop
mov
push
push
in
cmpsb
out
mov
jp
push
or
inc
rclb
cmp
in
mov
push
gs
xor
mov
sbb
push
pop
rolb
out
jle
xchg
call
jnp
or
or
int
sbbl
adc
xor
sub
imul
call
jnp
out
rolb
push
call
mov
jl
adc
or
pop
xchg
and
fildl
sti
scas
add
andb
cmp
shlb
rcrb
xchg
rcl
dec
mov
push
inc
gs
sub
enter
sub
push
pop
clc
jo
das
inc
cmp
cmc
loope
call
call
aam
or
call
mov
push
pop
jne
xchg
lea
xor
mov
lret
add
and
nop
cmpsl
adc
out
hlt
jno
lcall
push
mov
inc
lock
push
dec
call
stos
inc
movsl
dec
adc
call
shrb
add
or
out
push
ja
pop
mov
xchg
xchg
sbb
push
sbb
ja,pt
sbb
and
in
js
in
dec
push
inc
mov
xchg
pushf
stos
imul
mov
push
mov
cs
sbb
movsl
call
and
mov
push
or
in
shl
or
hlt
ficoml
push
inc
push
xor
aas
hlt
xor
clc
sbb
dec
cmp
insb
mov
lea
xor
inc
sub
or
clc
es
mov
mov
xrstor
jecxz
inc
movzbl
and
cmpsb
or
adc
es
push
jno
and
xchg
sbb
push
xor
lea
mov
push
sub
sbb
pop
push
insb
push
mov
dec
sub
ss
in
xchg
push
in
push
je
sub
fs
push
jo
lods
scas
push
hlt
push
and
add
mov
xchg
cld
push
jns
fdivs
mov
or
or
pop
mov
push
sbb
fisubrs
cmc
lock
ds
xchg
and
lcall
repz
xor
ds
loopne
ficomps
push
push
sbb
sbb
sbb
push
jnp
pusha
loop
fdivr
pop
push
je
xchg
mov
sbb
sub
movsb
xlat
push
push
push
dec
fdiv
jno
push
nop
xchg
sbb
cmpl
xor
inc
pop
pop
pusha
mov
int3
call
push
push
pop
mov
cltd
popa
mov
cmp
dec
insl
dec
cmp
sarb
mov
adc
xchg
xor
orb
push
push
aad
out
inc
add
call
dec
les
aas
bound
inc
cmp
cmp
xchg
test
in
inc
add
dec
push
adc
inc
jbe
insl
sub
pop
cmp
arpl
add
popf
or
or
mov
mov
push
add
fisubs
rolb
fildl
or
cmp
faddl
ljmp
notb
hlt
sbb
sahf
lock
hlt
fdivrp
xor
fdivr
mov
pop
loop
ret
mov
xor
sbb
mov
jecxz
inc
pop
in
pop
mov
push
movsl
in
dec
out
ds
fstps
call
or
mov
int3
fldl
fucomp
or
mov
adc
lret
stos
mov
and
cmp
loope
push
adc
pop
mov
pop
leave
mov
mov
dec
pop
enter
out
ss
add
pop
xor
add
rep
push
and
or
clc
xlat
int
test
not
je
ss
rcll
jp
fstl
adc
or
adc
add
push
sub
add
adc
xor
cmpsl
js
pop
in
mov
pop
jns
adc
inc
push
hlt
ret
sbb
xor
or
dec
jmp
inc
xor
push
xchg
rcrl
push
sbb
lock
outsl
push
jb
je
ljmp
ljmp
sbb
je
popa
andl
add
iret
jl
je
cmpb
adc
cmp
scas
sbb
push
mov
sahf
pop
fistpl
popa
add
or
push
add
mov
or
pop
push
xor
jo
sub
xchg
sbb
jae
data16
lcall
and
into
shrb
fiaddl
mov
or
pushf
cmp
loopne
sbb
pop
cmpsl
cmp
jb
mov
sbb
and
js
mov
mov
sub
in
xor
enter
push
adc
lods
mov
and
or
insb
or
and
add
lock
cmpb
icebp
push
push
daa
cmp
mov
sub
push
jae
and
leave
or
mov
jmp
adc
test
xor
and
gs
repz
fs
in
in
push
add
jne
dec
push
and
pop
enter
jmp
inc
inc
jle
jo
ficomps
and
in
cltd
stc
jmp
xor
ret
roll
xchg
loope
and
sub
stc
jo
dec
in
push
sub
in
in
shrl
pop
mov
or
xor
test
push
insb
cmp
pop
ret
mov
sub
mov
test
jno
clc
or
loop
rcr
in
mov
push
adc
mov
pop
mov
inc
add
stos
bnd
inc
pop
mov
les
mov
adc
jmp
in
mov
jne
je
in
pop
sahf
sbb
in
in
aad
jno
mov
cmpb
sbb
sbb
inc
enter
pop
cmp
pusha
push
pushf
ljmp
imul
es
cmpsl
adc
test
fistpll
push
fists
divl
mov
pop
test
mov
mov
cmp
lods
push
xor
jb
cmp
fidivrs
push
jbe
xor
sbb
push
cmp
shrb
mov
ficompl
xor
xor
xchg
cmpsb
adc
jmp
sub
push
mov
ljmp
inc
enter
cmp
data16
mov
fldl
les
adc
test
cmp
mov
lods
dec
xlat
push
push
mov
jecxz
repz
sub
ret
lea
call
add
les
mov
in
dec
adc
jbe
lods
ret
and
loope
or
add
jle
sub
in
add
jne
icebp
xchg
and
jl
push
cmp
lods
adc
xor
add
pop
sub
daa
add
mov
in
jne
dec
add
adc
pop
sbb
scas
jns
nop
mov
sbb
inc
lods
xchg
icebp
or
gs
scas
and
loop
jbe
push
add
add
out
enter
pushf
add
cld
mov
cmovp
xorl
cmp
or
mov
xchg
inc
inc
and
pop
cmp
pusha
popa
inc
dec
pop
and
je
or
push
ljmp
add
sub
scas
leave
ret
cmp
adc
and
loope
call
mov
cld
inc
mulb
dec
sub
xor
fimull
sbb
or
push
insl
push
jmp
mov
fs
xor
call
xor
jmp
jge
scas
aad
sahf
push
cld
lcall
shl
mov
add
cltd
insb
cld
adc
sbb
nop
add
or
mov
push
mov
add
rorb
movsb
les
jns
lods
jbe
xor
jne
xor
xor
inc
pop
nop
push
sub
in
mov
dec
test
adc
mov
cltd
sub
mov
push
cmp
push
loopne
pop
pop
xor
mov
mov
out
push
xchg
push
inc
shlb
hlt
repnz
fidivs
testb
cltd
push
inc
inc
xor
mov
jg
nop
or
or
shr
pushl
imul
or
jnp
mov
ss
stos
std
std
push
stc
pop
dec
iret
push
xor
xor
cld
cmp
sbb
cli
rorb
inc
orl
xor
dec
cmp
dec
sbb
sbb
push
add
aas
jmp
mov
dec
xor
sub
testb
movsb
xor
mov
cmp
dec
mov
jo
cld
sub
push
cs
pop
dec
aas
add
adc
add
cmpsl
adc
add
das
or
mov
stos
sbb
cmp
in
add
add
pop
mov
jns
add
mov
and
xchg
xor
leave
add
pop
mov
mov
rcrb
js
aam
sbb
ja
xlat
sub
subl
push
pop
clc
mov
int
mov
add
movsl
or
add
rorb
inc
xchg
mov
les
xor
mov
mov
add
int3
lods
or
sbb
gs
xor
or
daa
fucomp
add
jl
adc
xchg
adc
mov
pop
pop
cmp
push
cwtl
sbb
adc
push
leave
xor
mov
mov
pop
cmpl
cwtl
inc
jecxz
push
mov
lcall
inc
pop
ds
scas
getsec
rcrb
in
jbe
inc
add
aad
xor
sbb
sbb
xchg
sarb
xor
clc
push
or
mov
popf
jbe
stos
insb
and
jne
xor
outsb
in
std
jmp
insl
mov
push
and
xor
add
and
jmp
in
or
cmp
sub
js
xor
imul
pusha
sarb
or
clc
sbb
mov
or
ret
inc
inc
sarb
add
movsb
pop
rcrl
sub
cmp
fsubl
or
rolb
test
imul
mov
lret
dec
adc
fidivl
jl
pop
dec
sahf
push
repnz
fwait
and
jne
mov
jmp
or
add
movsb
cmp
int
fmuls
or
or
lods
add
add
inc
dec
sti
cld
adc
int3
xor
mov
daa
sub
push
mov
sbb
push
adcl
out
and
loop
addb
add
call
mov
pop
loope
test
ljmp
add
push
call
mov
iret
mov
dec
push
pop
ljmp
call
outsl
loopne
cmp
imul
mov
mov
adc
mov
mov
test
mov
or
sub
pop
adc
in
add
sbb
mov
push
fucomip
cmp
je
cmp
jbe
movsb
xchg
or
jmp
mov
subb
clc
push
and
mov
pop
jbe
sbb
sbb
daa
loopne
loope
inc
push
in
int
jo
xchg
or
pushf
sbb
lock
adc
push
lea
shlb
jae
pop
dec
cmp
scas
pushf
loop
test
sbb
cmp
shr
je
mov
scas
push
into
or
xchg
cmp
dec
ret
test
call
mov
and
mov
xchg
mov
xor
test
loopne
jbe
jbe
nop
negb
jmp
push
mov
push
mov
mov
sbb
cmpsb
mov
lods
add
in
mov
into
decl
sub
push
lds
lods
sbb
inc
adc
pop
push
adc
add
and
cmpsb
and
gs
sti
push
je
push
inc
inc
fwait
lea
dec
jle
jns
test
test
pusha
in
pop
or
dec
dec
stc
movl
sub
pop
push
lea
insb
and
pop
andb
ljmp
xchg
aam
xor
mull
push
dec
ficoms
aam
aaa
dec
mov
inc
cmp
cwtl
clc
jecxz
pop
popa
fsubrl
call
lods
orb
je
lods
data16
dec
faddl
push
xchg
or
pop
scas
out
xchg
dec
je
jae
js
push
push
xchg
shrb
insb
sbb
les
add
add
int
or
push
lret
add
sub
adc
push
nop
or
cmpsb
jns
push
adc
imul
jbe
notl
in
pop
mulb
mov
jmp
push
data16
add
add
inc
inc
mov
loope
ja
das
mov
addps
add
std
sub
lock
dec
push
hlt
mov
sarl
add
mov
add
cmp
ss
clc
and
cmp
push
sbb
push
adc
dec
rorb
mov
sar
mov
and
add
mov
sub
mov
or
aaa
jo
mov
or
cmp
sub
dec
mov
loop
push
push
ret
pop
mov
mov
iret
call
rcr
mov
sbb
mov
or
lea
jmp
sbb
insl
mov
sbb
sbb
cmp
jecxz
jne
into
cmp
sahf
adc
jmp
ss
cmp
jne
sbb
arpl
push
pop
and
pushf
dec
jo
or
je
int3
jb
dec
pavgw
mov
js
dec
sub
mov
xchg
lods
jmp
nop
xor
adc
jae
arpl
jmp
loopne
pop
mov
call
rclb
inc
call
dec
xlat
and
push
mov
xchg
push
lea
cmp
ss
repnz
sbb
add
inc
sub
xlat
test
lcall
push
jl
js
negb
jecxz
bound
icebp
ja
dec
xor
fxtract
jmp
icebp
daa
or
jne
push
jne
or
mov
ret
pusha
movl
xchg
dec
mov
or
fdivrl
or
or
xchg
jne
add
in
mov
in
and
in
movsb
jmp
mov
lods
sbb
scas
cmp
test
or
dec
mov
push
call
call
js
or
int3
jbe
icebp
dec
sub
jg
or
xorb
lret
sbbb
mov
push
stc
sub
cs
xchg
fcompl
adc
popa
out
push
ret
jge
sbb
inc
push
add
iret
jmp
or
mov
cwtl
jne
sub
cld
test
movb
daa
test
sbb
test
stos
push
inc
loopne
pop
add
mov
mov
jl
xchg
roll
aad
sbbl
pop
pusha
ja
cmp
jg
push
dec
lea
adc
mov
or
call
test
aas
out
inc
and
mov
and
out
lea
pop
mov
decl
or
ret
fadds
dec
jne
movzbl
add
xorb
je
aam
nop
pop
popa
sbb
pop
mov
test
mov
addl
nop
sub
rcrb
dec
sub
outsb
shr
dec
inc
cmp
fdivl
and
adc
cli
sub
sbb
adc
cmp
xchg
imull
mov
rolb
jae
inc
pop
rorb
jecxz
ds
push
inc
shlb
or
jecxz
xor
sub
push
sub
mov
add
sub
push
es
pop
dec
repnz
inc
call
xchg
push
outsb
mov
adc
movsl
rcll
call
sub
dec
lea
adcb
dec
out
rol
test
dec
dec
fs
and
push
test
nop
fs
inc
adc
xchg
jbe
dec
idivl
test
aaa
ds
xchg
push
add
out
sbb
xor
xchg
adc
pop
inc
shlb
add
push
add
cli
xchg
sub
test
inc
xchg
inc
push
add
out
xchg
xor
sub
mov
push
xchg
push
add
pusha
and
or
and
add
mov
xchg
out
xor
xor
and
sbb
adc
push
add
loopne
lds
add
xchg
scas
or
and
xchg
orb
outsb
xor
nop
test
cmp
daa
and
xchg
shll
adc
or
jne
xchg
mov
inc
inc
pop
popa
pusha
test
or
andl
sbb
cli
or
or
or
call
out
out
in
inc
callw
pop
call
call
jle
cmp
dec
aam
sti
mov
mov
push
jns
cmp
call
sbb
call
int3
pop
jmp
xchg
jnp
fstpt
negl
ss
mov
decl
inc
jge
mov
or
pop
psubsb
add
mov
test
and
das
jne
andb
in
push
daa
mov
jb
cmp
jmp
cli
xchg
mov
pop
xchg
sbb
pusha
inc
xor
mov
mov
sub
xor
loopne
enter
pop
push
lds
int
into
cmp
xor
dec
dec
jge
dec
dec
jmp
sub
inc
jmp
and
mov
shll
loopne
sub
ret
and
xlat
or
repnz
es
cmp
or
adc
leave
test
add
cmp
or
pusha
lock
sub
pop
and
lods
mov
inc
fiadds
sub
incb
mov
mov
es
cmpsb
add
add
ret
movsl
push
and
add
into
mov
arpl
sbb
imul
push
es
inc
and
push
iret
movb
pop
fists
pop
xorb
dec
push
movsb
push
or
in
ficomps
or
xorb
mov
js
ljmp
int3
rcrl
enter
inc
push
imull
push
xor
jo
jae
dec
sbb
adc
js
mov
sub
sbb
adc
jle
repnz
xchg
pop
aaa
dec
rcrb
jp
pop
cmp
movsl
adc
add
inc
addr16
pop
and
adc
inc
cmpsl
test
popf
add
cmpsl
push
cwtl
rcrb
push
cmpsl
or
mov
xchg
pop
shlb
loope
xor
push
fisttpll
mov
and
adc
fs
pop
cmpsl
push
cwtl
nop
dec
das
cmpsl
mov
push
cmpsl
mov
cmpsb
ss
mov
xor
adc
cmpsl
cmpsl
lret
cmpsl
movsb
repz
loope
jmp
andb
rcll
daa
or
push
inc
add
push
dec
daa
dec
inc
addr16
cs
pusha
movsb
repz
daa
sbb
je
mov
and
or
daa
dec
fwait
movsl
mov
or
out
fidivs
sub
sbb
or
inc
sarb
daa
scas
roll
push
je
and
cmp
daa
rcl
xlat
test
adc
adc
out
in
cs
daa
pop
nop
add
and
dec
subl
daa
add
je
daa
adc
and
push
daa
iret
repz
mov
mov
cmp
shl
xor
add
inc
cld
and
cmpsl
jge
add
push
adc
mov
add
sub
call
or
lahf
cmp
inc
dec
sarb
movsb
jne
mov
insb
aam
ja
and
rcr
pushf
push
pop
jmp
cmp
je
mov
pmulhw
or
lahf
ret
fucomi
adc
adc
add
repnz
add
cmp
push
in
add
add
mov
push
pop
pop
inc
lret
jmp
jo,pt
cmp
je
xchg
add
xchg
mov
cmp
pop
leave
ror
push
push
push
gs
add
inc
scas
in
lcall
xchg
push
repnz
or
cld
add
iret
enter
fisttpll
or
pop
pop
add
mov
ja
or
xchg
or
xchg
sub
sbb
in
sahf
push
push
push
psrld
rdmsr
adc
xor
mov
adc
or
in
mov
add
adc
inc
scas
int
push
adc
movsl
test
adc
xchg
adc
pusha
in
adcl
scas
fs
push
mov
pop
pop
and
sbb
xchg
sbb
mov
sbb
fmul
xchg
cmp
sbb
mov
sbb
sbb
jns
sbb
push
sbb
push
repnz
sbb
repnz
push
inc
negb
dec
incl
in
jne
add
add
sub
pop
fcomps
clc
add
cltd
inc
sti
movl
xchg
and
lods
pop
stc
cmp
xchg
push
in
push
in
imul
rcl
ret
xchg
notl
xor
mov
out
mov
nop
out
sub
jno
outsl
in
je
call
jnp
adc
jmp
mov
ljmp
add
movsb
sub
call
in
in
jns
push
sbb
xchg
aad
in
cmp
dec
sahf
xchg
sub
pusha
in
out
or
push
xor
je
lock
jb
outsl
in
icebp
cmp
das
inc
scas
subb
repnz
add
in
std
hlt
mov
imul
std
mov
cmc
cmc
cmp
push
repnz
pop
and
clc
clc
xor
or
or
pop
leave
stc
and
cli
cmpl
ss
jns
cld
cld
cld
je
cld
push
and
nop
shlb
mov
xor
fs
sahf
aaa
sbb
xor
add
jmp
push
xchg
int
sub
jb
add
hlt
push
lahf
shrl
lods
dec
ss
or
fwait
or
jecxz
shll
adc
jecxz
xor
cld
in
in
aad
push
cmpl
aam
or
mov
lcall
jns
xor
inc
mov
lds
or
dec
jmp
jmp
pop
push
lea
cltd
or
or
or
cli
out
out
out
add
mov
and
cli
cli
and
orb
mov
xchg
push
leave
and
cli
stc
cmpsb
jb
imul
mul
push
xchg
div
mov
xchg
inc
repnz
jb
cmp
mov
push
stc
sbb
dec
push
sti
sti
sti
xchg
or
cmp
jmp
stos
enter
cmp
or
mov
push
daa
add
push
imul
dec
loop
loop
aad
aad
arpl
loope
leave
and
clc
and
orb
or
push
sbb
xchg
fdiv
out
and
negl
orb
jb
inc
ljmp
inc
loope
notl
imull
hlt
imul
cmp
movsl
out
xchg
into
testb
push
scas
divb
inc
mov
nop
testb
repnz
inc
dec
pop
push
repz
mulb
test
cmp
mulb
imul
xchg
in
mov
scas
mov
xor
clc
cmp
jmp
jb
or
xchg
cmp
and
aad
sbb
outsb
andb
hlt
or
test
test
stos
into
repz
fwait
xor
mov
xchg
cmpsb
ret
outsl
clc
clc
sti
mov
loope
scas
xchg
stos
cmp
setb
leave
or
cmp
dec
in
ret
mov
hlt
in
lret
or
sub
repz
pop
paddq
mov
lret
and
aam
lcall
pop
xchg
repz
lret
add
xchg
repz
lcall
pop
xchg
repnz
repnz
cmpsl
jecxz
rcll
scas
dec
sarl
icebp
icebp
icebp
das
xchg
jb
sub
adc
repnz
sbb
cmp
icebp
cmc
cmc
flds
andb
scas
movsb
or
push
cwtl
icebp
xor
add
and
test
mov
mov
adc
pop
xlat
or
mov
adc
jmp
xor
aam
mov
push
sub
ffreep
push
inc
xlat
dec
push
ret
aaa
inc
cmp
sbb
ret
ret
scas
mov
test
mov
inc
mov
add
jne
neg
xor
jmp
xchg
ljmp
ss
je
sbb
mov
fstl
jmp
lods
cmpb
int3
dec
push
nop
push
jns
lahf
cmpsl
xor
aaa
or
push
dec
mov
xor
scas
dec
adcl
lcall
repz
out
sahf
mov
sbb
imul
in
push
push
aad
in
xchg
gs
dec
jmp
or
mov
inc
cltd
and
daa
jl
mov
or
mov
and
lea
inc
cmp
and
dec
or
pop
test
gs
dec
or
xor
cmc
push
or
in
xchg
xchg
lods
jle
push
popf
xchg
or
xchg
fists
push
orb
push
push
or
fcoms
fs
push
or
sub
idivl
fwait
inc
rcll
lock
sbb
jno
not
js
mov
xlat
pop
mov
insb
test
dec
dec
inc
xchg
pusha
mov
jl
pop
call
xor
push
add
js
ret
in
jmp
and
mov
push
and
inc
ds
call
cwtl
sub
pop
jmp
pusha
cmp
pop
insl
adc
jmp
adc
cmpsb
movsb
ret
inc
or
arpl
divb
xor
xor
adc
popf
adc
mov
das
pop
xor
loop
andl
adc
adc
adc
popa
in
add
shrl
push
cli
aas
cmp
sub
push
cmp
int
jb
sbbl
cmp
movb
jg
shr
inc
add
rorb
xchg
aam
mov
add
xchg
pop
imul
pop
adc
stos
add
data16
arpl
icebp
je
dec
arpl
orl
icebp
or
icebp
push
or
xchg
and
cltd
sbb
inc
adc
inc
and
mov
nop
in
or
inc
pusha
push
add
pusha
lods
dec
icebp
cmp
inc
xchg
and
rolb
icebp
or
xor
outsb
sbb
inc
jg
nop
jns
inc
lret
je
sbb
xor
add
lods
clc
add
or
mov
ret
enter
popf
mov
imul
iret
cmp
je
jo
shl
xchg
in
xlat
loop
sub
and
les
push
cmp
leave
add
lds
cmc
xchg
and
lret
and
add
je
in
adc
dec
cmpsb
mov
sbb
pop
repnz
mov
jmp
outsb
pop
lcall
adc
nop
outsb
dec
scas
outsl
pop
and
inc
xor
movsb
mov
jns
mov
or
shl
out
mov
cmc
nop
out
inc
es
or
test
cmp
mov
and
nop
mov
imul
inc
leave
dec
xchg
and
cmp
leave
leave
leave
leave
sub
sbb
cmp
and
dec
push
xchg
and
repz
and
cmc
or
adc
jno
adc
or
inc
cmc
fcomip
push
shll
or
nop
push
inc
cmp
cmp
in
jmp
les
push
call
push
pop
xorb
jmp
cmpsb
inc
mov
arpl
and
jmp
jp
sub
cs
cmc
xor
mov
subl
mov
cs
mov
and
dec
bound
mov
loop
movsb
mov
stos
mov
xchg
or
cmc
test
add
push
ret
int
mov
and
or
imul
push
repz
mov
repz
add
or
jne
and
push
xchg
and
sti
frstor
xor
lock
cs
dec
test
movsl
sbb
shll
dec
nop
repz
shlb
icebp
data16
loope
xorb
or
or
iret
dec
rcll
pusha
das
lea
bound
scas
stc
cmp
xchg
in
aaa
popa
aas
ss
xchg
mov
jae
movsl
sub
cmp
jns
je
xchg
and
loopne
inc
dec
xchg
sti
fs
or
jns
adc
cmp
cmp
sbb
leave
push
xchg
and
into
dec
push
mov
sti
nop
outsb
mov
mov
xor
leave
jns
pop
xor
fs
jns
imul
cmp
nop
xchg
push
push
repz
dec
dec
and
cwtl
cs
imul
and
mov
xchg
je
loop
sbb
dec
repz
mov
xrelease
int3
xchg
mov
loopne
sbb
push
dec
inc
xchg
push
push
rorb
fwait
mov
dec
dec
push
fdivl
aad
jne
nop
or
rorb
cmpsl
fnstenv
repz
mov
js
je
loopne
mov
mov
cmpsb
mov
lahf
call
cli
cli
mov
pop
xchg
cmp
mov
xor
dec
je
sbb
mov
dec
mov
es
xchg
in
loope
fwait
xchg
dec
mov
xor
orb
aam
sbb
sub
mov
rclb
mov
fwait
xchg
mov
mov
shl
fs
mov
or
mov
mov
xor
or
xor
jae
popf
mov
inc
leave
push
jno
nop
loopne
test
add
jo
mov
outsb
imul
cmp
test
mov
out
mov
icebp
movsl
test
mov
mov
mov
fs
dec
inc
push
iret
mov
lods
cld
jmp
push
enter
orb
rorb
es
pop
inc
aaa
cmpl
dec
je
xorl
dec
mov
orl
imul
dec
inc
dec
xor
cmp
sub
push
addl
insl
mov
or
dec
or
cmp
out
add
xorl
fwait
cmpl
scas
mov
imul
jno
xchg
in
sbb
movsl
andl
movsl
fwait
xchg
movsl
test
xorl
fwait
imul
call
outsb
sbb
xchg
data16
aam
xchg
jb
pusha
and
push
sbbl
pop
add
sbbl
add
mov
sub
fwait
xchg
orl
loopne
lods
outsb
sbb
popa
into
mov
movsl
sub
inc
sbb
sub
sbb
mov
sti
outsb
sub
rcrb
fucomi
es
loop
imul
cmp
aam
and
sbb
addl
or
dec
fnsave
dec
subl
rcl
sub
pop
sbb
add
or
xor
aad
out
adc
lock
sbb
sbbl
mov
test
add
int3
sbb
lock
dec
inc
addl
cmp
xchg
or
int
push
in
push
jl
cmp
dec
jbe
cmp
in
mov
out
cmp
sbb
sbb
lods
fiadds
in
ss
adcl
jp
nop
jb
xorb
sbb
imul
inc
imul
xorl
hlt
mov
sub
cmp
sti
lret
mov
out
mov
cmpsb
andl
jns
mov
xor
jo
cmp
xchg
and
mov
int
inc
push
push
cmpl
arpl
jecxz
mov
xchg
hlt
lock
out
dec
push
inc
inc
inc
pop
rclb
dec
inc
push
add
je
jmp
fiaddl
test
cmp
stos
rcl
imul
or
shll
rcl
orl
mov
mov
dec
inc
andl
sbb
xor
xor
xor
cmp
inc
push
xor
xor
dec
pop
movsl
mov
pop
cmp
lods
fwait
xchg
dec
adc
push
call
inc
xchg
popa
jo
ds
subl
rclb
xchg
or
ja
sub
cmp
mov
mov
jmp
mov
aaa
imul
and
jno
aaa
dec
xchg
pop
xor
mov
repz
loop
test
sarl
stos
xchg
mov
orb
mov
rolb
cwtl
pop
dec
pop
ret
sub
pop
out
inc
push
mov
inc
loopne
inc
cs
cmp
push
addr16
inc
lods
ret
mov
nop
pop
push
insb
enter
dec
cmp
or
test
rolb
mov
pusha
xorl
mov
or
pop
pop
push
into
mov
inc
dec
inc
sub
and
js
jb
pop
push
pop
movsb
cmpb
gs
ret
xor
push
pop
xchg
lahf
es
add
xlat
jae
insb
sub
mov
push
pop
les
adc
pop
sbb
mov
mov
dec
dec
push
sti
lds
dec
mov
loope
loopne
inc
pushf
or
xchg
into
lret
fs
lret
scas
push
mov
pop
xchg
into
lret
lret
add
dec
push
xchg
scas
push
mov
out
mov
mov
testl
add
sbb
push
mov
and
rorl
xchg
pop
stos
xlat
mov
jb
jae
popf
push
dec
push
cwtl
xchg
inc
movsl
pop
in
cmp
inc
dec
push
mov
xor
ljmp
dec
mov
shr
push
inc
adc
sub
push
jnp
in
cli
movsl
push
loopne
stc
mov
and
and
jg
inc
push
dec
ret
mov
jo
and
mov
fs
and
adc
mov
xchg
cwtl
loopne
movsb
mov
lods
dec
nop
push
add
fwait
shrl
arpl
dec
fiaddl
dec
cmp
or
cmpsl
loope
scas
enter
adcb
add
add
divb
inc
stc
adc
xor
cltd
int
jl
sbb
cmp
cmp
das
jmp
xchg
push
ret
push
xchg
test
and
jbe
push
loop
or
call
into
add
cmp
add
testl
push
rcl
add
mov
nop
in
push
cmp
xchg
ret
idivb
pop
push
or
add
rorb
add
mov
add
add
fisttpl
shrb
xor
adc
jnp
add
mov
lahf
xchg
aam
dec
flds
jo
push
mov
push
sbb
jmp
and
cld
inc
loopne
and
add
jmp
imul
push
mov
nop
mov
clc
xor
fisttpll
movsb
shll
xlat
add
scas
xchg
arpl
pop
dec
call
rolb
sub
mov
dec
jne
dec
inc
xchg
inc
push
and
jae
nop
or
jne
dec
inc
ja
pusha
mov
xchg
nop
sbb
jne
and
inc
jne
frstor
insb
jo
je
or
call
and
in
jne
jne
adc
and
adc
popa
add
nop
fs
jne
call
mov
sub
mov
mov
jne
pusha
add
or
mov
dec
inc
cmpsl
cmp
push
test
jmp
les
mov
sbb
jae
lea
push
fstl
inc
add
push
mov
call
xchg
mov
movsb
add
incl
jl
leave
cmp
sahf
xchg
sbb
and
sub
addl
cmp
lcall
pop
loopne
and
test
mov
iret
push
sbb
adcl
pusha
addl
pop
push
ja
or
push
cmpl
pop
inc
sub
sbb
rolb
repz
sub
cmp
and
add
adc
loopne
adc
adc
xchg
mov
and
sub
ljmp
clc
mov
inc
pop
adc
push
fwait
add
cs
mov
push
hlt
xlat
push
cmp
pop
aam
mov
inc
mov
sbb
jge
xor
push
inc
call
sbb
inc
pop
inc
lods
mov
mov
ss
jmp
xchg
jne
mov
pop
xor
jge
fisttpll
or
push
movb
scas
add
lret
insb
push
out
outsl
pop
cmp
add
cmp
inc
jmp
dec
jmp
xor
jb
ret
inc
inc
pop
sub
adc
jmp
mov
inc
inc
pop
je
pop
es
push
adc
pop
sbb
in
test
and
or
xchg
mov
xchg
jmp
pop
xor
push
push
push
mov
or
je
loope
lcall
and
or
sarl
leave
or
fistl
jp
into
call
push
test
jmp
add
enter
popa
adc
push
popf
pop
pop
or
cwtl
adc
mov
push
sbb
dec
sbb
sbb
enter
aas
add
sbb
pusha
popa
pop
test
add
mov
mov
mov
push
fiaddl
pop
lock
pop
sub
xchg
sarl
or
mov
addl
hlt
test
sbb
out
addps
push
lret
sti
lods
fisubrs
jge
push
push
or
pushf
es
inc
jecxz
mov
cmp
sbb
and
test
inc
inc
jmp
cmp
xor
add
mov
push
add
ret
push
sar
inc
push
dec
fidivrl
call
xchg
ss
push
sarb
xor
lea
push
hlt
dec
xchg
mov
pusha
sub
xchg
cmc
inc
adc
sub
or
sarl
nop
mov
fldl
dec
sbb
ret
sub
scas
push
sbb
ret
dec
inc
xor
scas
or
sbb
test
cmc
pop
adc
in
push
rcl
rcll
icebp
popa
xchg
mov
dec
add
sahf
popa
mov
in
push
test
adc
adc
out
out
push
or
inc
add
dec
out
jp
movsl
jnp
xor
orl
xor
repz
movsl
or
add
out
xor
popa
mov
inc
popf
lahf
xchg
les
dec
sbb
xor
mov
sbb
mov
inc
jne
loopne
jecxz
lahf
xor
jp
add
movsb
mov
testl
stos
loopne
in
xchg
ret
push
xlat
cmc
fists
addb
mul
fimuls
outsb
les
sbb
push
inc
add
mov
test
testl
cmp
je
dec
daa
add
shll
mov
pop
xchg
push
je
inc
arpl
nop
je
sbb
and
sbb
divl
psubw
push
add
pop
add
push
dec
daa
or
jmp
aaa
not
rorb
cmp
dec
jo
jmp
push
call
cmpsl
loopne
call
pop
push
mov
cmp
lcall
orb
sbb
daa
or
dec
pop
cmp
jl
jmp
call
andb
cli
sahf
and
and
div
ljmp
ror
xchg
add
inc
jb
xor
stos
into
roll
imul
sub
pushf
sbb
sbb
loop
roll
idivl
add
movsl
sub
or
subl
dec
roll
imul
or
add
fistpll
and
xor
bound
jmp
shrb
add
loop,pn
ret
jno
pop
test
imul
leave
sbb
jno
rclb
testl
sbb
add
je
rol
sbb
add
rorl
nop
sbb
push
mov
add
and
inc
adc
testl
fwait
je
xchg
lret
mov
push
jne
dec
push
loop
jle
add
mov
or
adc
xlat
mov
ds
pop
and
jbe
cmc
adc
and
push
pushf
cmc
push
jb
int
push
mov
cmp
cmp
shll
out
mov
and
mov
mov
xor
push
dec
call
push
inc
stc
outsb
push
ja
add
xor
add
xchg
add
xor
test
xchg
mov
or
inc
lea
je
inc
idivl
mov
gs
adc
daa
lea
add
push
mov
adc
movsb
add
sbb
daa
ds
outsb
add
daa
adc
lret
sbb
cltd
nop
cmp
mov
jb
aas
sub
call
xchg
daa
mov
mov
push
andl
adc
rorb
add
or
adc
pop
addr16
shlb
pop
rcrb
push
cmpsb
mov
popa
mov
and
mov
test
std
scas
stos
dec
push
adc
inc
sub
push
movsl
sub
pushf
es
xchg
mov
std
push
jb
inc
stos
mov
or
out
lods
dec
inc
sub
fldcw
inc
push
addr16
ss
and
addr16
sbb
or
pop
mov
mov
xorb
sub
xlat
repnz
push
cmpsl
mov
and
sub
lret
xchg
movl
xchg
dec
pop
adc
test
orl
jb
outsb
jge
loopne
add
cmpb
xchg
and
xchg
inc
or
mov
aam
mov
or
pop
call
add
xchg
dec
hlt
push
ljmp
adc
cmp
xchg
xchg
and
out
add
nop
sbb
dec
adc
cmpsl
cmp
or
movsb
cmp
cmp
stos
cmp
je
and
and
filds
cs
sub
and
push
sub
xchg
loop
mov
cmp
dec
push
call
sub
or
cmp
shl
rcll
pop
pop
dec
jp
mov
dec
cmp
xchg
test
or
xorl
ljmp
lds
dec
enter
xor
mov
sub
scas
adc
scas
and
arpl
int
rolb
inc
or
movsb
xchg
cmp
cmp
and
mov
arpl
loope
dec
cmp
push
xchg
nop
dec
mov
dec
fadds
and
pop
cmp
cmp
dec
inc
hlt
cmp
jp
inc
and
and
and
inc
inc
ret
adc
or
xor
and
pop
and
cmp
cmp
and
and
jmp
xchg
test
xchg
test
arpl
popa
adc
subl
cmp
inc
cmp
or
inc
add
cmp
adc
xchg
and
add
test
test
cmp
cmp
cmp
mov
adc
mov
sbb
mov
jg
cmpsl
pop
sub
cmp
xchg
insl
andb
add
push
popf
fnstenv
fwait
nop
sbb
imul
sbb
call
add
fistpl
xor
or
or
and
in
xchg
and
mov
lds
je
or
fstps
sbb
cmp
mov
sub
adc
loop
cmp
test
cmp
xchg
cmp
cmp
sbb
push
int
call
adc
lret
and
cmp
cmp
and
jb
dec
sbb
xor
and
push
insl
pop
mov
mov
call
xor
enter
scas
sbb
sbb
dec
rcrb
inc
sbb
lret
inc
mull
js
add
sbb
cmp
jp
sub
cmp
aam
adcb
nop
inc
sub
rdmsr
fs
lret
cmp
sbb
sbb
sbb
or
cs
sbb
movsl
sbb
pop
dec
lret
push
movsl
sbb
cmp
sbb
mov
or
jge
lret
ja
sbb
rcrl
pop
pop
mov
ret
or
sbb
dec
inc
orl
out
mov
mov
dec
cs
aas
jmp
xchg
push
push
mov
out
jb
xchg
or
dec
rcrb
cmp
lahf
inc
cs
xor
out
movsb
add
push
int3
and
pop
cmp
bound
mov
fs
out
arpl
and
sti
mov
jb
sbb
jns
data16
inc
mov
call
es
jle
call
inc
int3
and
rolb
and
fs
mov
add
out
pop
inc
mov
or
sbbb
mov
mov
sbb
cmp
ret
andl
inc
add
insb
addr16
mov
dec
pop
add
gs
fildl
fistpl
sbb
fildl
mov
sbbb
in
jle
pop
and
fnop
add
mov
fcmovne
add
test
add
sbb
test
or
call
fisttpl
adc
mov
je
nop
jl
int
sub
call
ss
xor
mov
push
in
push
inc
dec
and
xchg
adc
or
and
arpl
js
inc
inc
arpl
imul
pop
in
and
pop
leave
mov
lock
dec
jmp
dec
sbb
gs
and
lock
push
inc
adc
in
pop
inc
adc
pop
xchg
or
xchg
stos
dec
call
mov
es
loopne
mov
dec
sbb
and
pusha
cmp
jp
lret
push
shrl
iret
sub
xchg
test
xor
adc
add
bound
adcb
cmc
enter
call
cs
or
push
gs
pop
dec
sub
push
mov
cltd
pop
pop
adc
xchg
pop
monitorx
pop
cltd
push
aad
je
fnstenv
push
cltd
nop
jo
mov
or
or
xchg
stos
mov
adc
sub
dec
mov
and
cmp
rcrb
inc
adc
out
in
in
mov
push
or
inc
or
aas
or
unpcklps
das
shlb
repnz
cli
out
call
mov
adc
mov
or
add
call
repz
xchg
lock
call
call
mov
call
decb
dec
call
movsb
lods
das
pop
mov
movsl
pop
call
pusha
call
lea
push
jne
mov
insl
je
gs
pop
jl
push
cmp
cmp
test
mov
pop
sub
sbb
cwtl
add
lret
mov
rclb
test
shld
jl
rol
mov
enter
lret
jmp
xchg
mov
xchg
lret
fdivl
push
in
call
lret
aam
lock
test
jns
sub
add
add
leave
or
leave
frstor
loope
adc
mov
sbb
cs
dec
mov
stos
and
dec
in
mov
mov
jle
jae
xchg
dec
in
push
push
cs
dec
cmp
mov
cs
adc
lret
pop
or
test
sub
inc
mov
push
cs
xor
dec
mov
daa
int
dec
jo
xor
sub
mov
mov
je
data16
js
sbb
imul
data16
xorb
test
lcall
movsb
mov
cmp
call
inc
dec
lcall
sub
cmp
sub
movsb
mov
mov
shrb
and
push
imul
mov
daa
and
add
mov
add
cmp
add
push
jae
push
es
dec
adc
xchg
sub
mov
dec
inc
pop
pop
mov
daa
dec
or
imul
movsl
je
mov
pop
adc
loop
shlb
add
or
mov
mov
pop
je
or
fisttpll
sbb
sbb
push
fstpl
nop
scas
andl
dec
fcoms
mov
inc
frstor
cmp
test
cs
mov
and
pop
adc
inc
sbb
mov
sti
adc
out
rcrb
mov
fdivr
stos
mov
fsubrs
mov
das
ficoms
adc
xchg
movsb
inc
shlb
and
addb
pop
adc
adc
xchg
mov
test
dec
sbb
push
rcl
mov
mov
xchg
xchg
xor
mov
adc
add
add
and
loopne
mov
or
scas
xchg
pop
mov
add
mov
nop
jae
push
mov
dec
mov
pop
push
or
add
add
or
nop
cwtl
or
push
rcll
push
adc
xlat
xchg
mov
add
adcb
pop
mov
xchg
or
mov
add
xchg
fs
enter
or
sbb
inc
sub
sub
pusha
dec
pop
inc
and
jp
ss
cmpsl
dec
lea
mov
sub
test
sub
and
mov
push
adc
adc
push
jne
inc
cmp
xchg
adc
bswap
popf
sub
mov
mov
jg
adc
mov
cli
xchg
lds
adc
push
arpl
jecxz
push
int3
jno
push
in
push
pop
mov
mov
adc
pop
push
xor
fwait
or
and
cmp
and
movsl
movsl
xchg
inc
pop
or
cmp
xor
lods
aaa
adc
and
cmp
popf
or
sub
je
das
push
lcall
call
add
cmovge
xor
stos
dec
push
inc
push
cli
mov
pop
dec
add
mov
pop
or
cmp
cltd
pop
movsl
sti
sbb
mov
add
sub
push
mov
xorb
or
cs
xor
pop
cs
push
mov
cmp
call
xor
jle
rclb
rclb
fdivrs
cmp
adc
pushf
inc
add
sbb
push
sbb
xchg
es
pop
add
test
sbb
push
leave
lods
fwait
shlb
test
mov
sti
call
stos
rorl
dec
sti
and
pop
jo
sti
adc
jae
shrb
call
push
pop
and
adc
jno
shrb
and
and
inc
or
push
push
pop
pop
mov
xchg
push
pop
or
jmp
je
das
adc
lods
cmp
push
pop
clc
shll
and
pop
dec
or
pop
add
add
ja
movsl
add
fisttps
sahf
adc
push
mov
pop
push
and
pop
cwtl
jmp
mov
ficoml
pop
push
roll
mov
nop
aas
or
aas
xor
pop
and
inc
aas
push
jne
xchg
lods
test
jo
nop
fs
and
loopne
push
adc
sbb
nop
add
movsb
pop
sub
inc
add
testb
adc
and
jo
out
adc
int
pop
and
mov
jge
je
rcrb
ret
mov
inc
pop
inc
pushf
lods
mov
negl
call
subb
cmp
inc
stc
jecxz
xor
and
and
sarb
orb
push
mov
xchg
push
divl
notl
testl
notl
adc
or
jl
and
mov
pop
mov
xchg
pop
inc
cmp
test
push
push
pop
nop
mull
mov
aad
in
imul
xor
mov
sub
divl
jbe
or
divl
inc
aam
mov
shlb
lea
popa
or
mov
idiv
pop
nop
fnstenv
cld
add
enter
jl
negb
call
cld
jb
or
sub
and
out
push
rorb
inc
push
and
pop
push
jo
push
orl
and
jp
or
rol
sub
dec
out
ret
add
call
daa
icebp
sbb
adc
adc
mov
daa
adc
mov
jle
loop
movsb
daa
loopne
addl
mov
jb
xchg
daa
fwait
movsb
xchg
inc
daa
adc
jmp
cmpsb
rcr
and
inc
imul
hlt
cmp
das
xor
daa
or
imul
enter
inc
jno
add
out
pop
push
daa
and
push
jne
pop
scas
push
pop
mov
fldl
insb
inc
push
push
pop
sahf
cmp
push
fistpl
sbb
push
add
in
adc
jmp
mov
fstl
loop
nop
mov
test
or
outsl
mov
fistpl
jo
add
out
cmp
mov
fistl
mov
adc
stc
mov
pop
cli
push
adc
and
in
push
mov
or
mov
dec
inc
jecxz
mov
aaa
xor
out
cmp
adc
push
or
fadds
mov
sbb
inc
frndint
sahf
jg
sbb
mov
and
jmp
jp
inc
sub
xchg
mov
add
push
inc
inc
cmpsl
pop
mov
shlb
imul
outsb
xor
mov
test
and
mov
xor
or
daa
mov
fs
mov
out
addb
inc
mov
xchg
push
mov
nop
roll
push
shlb
sbb
mov
lahf
rcl
loop
pop
fdivl
pop
dec
push
mov
sahf
jno
aam
stos
test
stos
sahf
sbb
adc
test
adc
add
hlt
enter
fnstcw
dec
aaa
jg
in
push
dec
fiadds
es
mov
iret
jle
mov
popa
push
popf
push
lea
xor
and
push
call
pop
xchg
sub
sub
mov
cmpsb
in
jno
pop
fstl
dec
ja
push
mov
or
mov
xor
insb
movsl
hlt
add
jb
push
je
sub
add
imul
mov
jne
fistpl
adc
sbb
stos
imul
jne
push
push
ss
test
or
test
add
loope
add
sub
push
adc
sti
adc
repz
adc
mov
jo
repnz
xlat
fwait
push
int3
xor
add
imul
rdtsc
mov
mov
lea
call
mov
movsb
cmp
les
insl
adc
inc
and
sub
push
cmp
shl
or
xchg
and
cmp
ret
fcoms
cmp
lcall
adc
xlat
ret
test
icebp
test
stos
inc
inc
and
imul
mov
or
adc
mov
enter
mov
cmp
dec
mov
dec
nop
push
ss
in
or
cltd
mov
mov
cmpsb
dec
mov
jb
mov
add
jo
push
inc
adc
adc
adcl
dec
nop
outsb
sahf
mov
inc
push
loope
dec
inc
push
daa
or
cmpsl
jb
es
and
rolb
or
or
and
mov
fwait
sbbb
or
and
add
and
xor
out
or
sbb
ret
cmp
scas
sahf
mov
push
ds
repz
sub
or
sbb
sahf
out
call
add
repz
int3
loop
iret
repz
push
sub
push
nop
jns
cmpsl
jge
movsb
push
push
xchg
jl
push
sahf
negl
je,pt
push
jns
cmp
sbb
repz
repz
fmulp
mov
iret
xchg
mov
ret
into
sbb
incb
jl
negl
push
loop
sbb
out
aam
mov
iret
mov
sbb
lahf
out
sahf
pushf
scas
lret
or
cmp
repz
sub
pop
data16
repz
nop
sahf
lods
iret
repz
mov
fsubrp
decb
imul
inc
push
sar
mov
outsb
jle
sahf
mov
daa
negl
loop
clc
adc
sub
repz
aaa
je
fs
push
cmp
fimuls
daa
pop
mov
jbe
ljmp
cli
jbe
push
mov
in
int
cmpsl
insl
mov
iret
dec
test
jecxz
xor
lret
idivb
xchg
push
jbe
push
scas
test
mov
imul
push
test
cmp
divl
les
jne
dec
sub
addr16
jle
sub
mov
push
icebp
mov
gs
dec
push
je
mov
or
push
outsl
push
push
lods
add
push
add
adc
sbb
push
fcoml
js
xor
add
xor
add
dec
pop
jae
outsl
and
push
ret
ss
imul
addr16
bound
outsl
xor
push
shr
xor
mov
iret
jl
push
dec
cmp
scas
or
das
mov
imul
add
mov
or
sub
outsl
inc
jnp
sub
out
andl
ret
push
mov
pusha
pcmpeqd
and
bound
shrl
and
add
add
dec
dec
sub
or
mov
and
daa
add
out
jo
xor
mov
or
addr16
aas
add
lock
je
aas
test
mov
das
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
xor
dec
rorb
cwtl
xchg
jb
inc
cmpsb
or
shll
sbb
pop
dec
mov
fwait
and
pop
dec
imul
mov
sbb
pop
inc
jne
outsb
je
jg
test
pop
inc
js
jbe
les
jnp
inc
xor
outsl
filds
sub
sub
sub
inc
inc
xor
xor
xor
sub
aaa
jge
xor
xor
inc
xor
xor
ss
std
xor
fs
cmp
fdivl
cmp
xor
clc
inc
inc
xor
mov
aam
sub
mov
das
lret
jo
add
sets
test
fnstcw
mov
cld
shll
push
fidivrs
cmp
pop
adc
ss
xor
or
push
and
cmp
aaa
adc
xor
inc
pop
dec
add
jl,pn
rolb
arpl
push
jne
popa
xor
dec
and
cmp
ss
pushf
xor
add
lds
add
outsl
mov
dec
rcll
cmpsb
loopne
test
xchg
fsubr
scas
data16
push
push
dec
hlt
imul
ficoml
pop
push
call
push
inc
out
adc
cmp
repz
sub
out
cmp
aaa
mov
in
in
mov
lods
sahf
add
movd
hlt
sub
cmp
cmp
xor
inc
push
and
jg,pn
lret
cs
insb
outsl
xor
les
test
fwait
mov
je
push
push
cwtl
mov
sub
push
inc
cmp
push
xchg
sbb
fmull
pop
mov
fwait
add
mov
rcll
fldt
inc
cs
subl
idiv
inc
arpl
insb
mov
push
ss
ficoms
ret
lret
rcll
xchg
fld
cmp
and
xor
test
arpl
add
insb
popf
pusha
mov
inc
cltd
cmpsl
addl
lods
adc
jp
xchg
inc
and
stos
inc
jne
mov
out
push
and
lock
lret
jnp
pop
sub
mov
push
imul
bound
sub
daa
scas
scas
je
dec
fs
lods
popf
push
imul
push
jo
mov
adc
insl
sbb
movsl
cmpsb
add
xchg
dec
popa
movsb
jmp
pmovmskb
fwait
outsl
push
pop
arpl
inc
cs
push
push
push
add
mov
ja
fs
cmpsb
shlb
dec
fsubl
push
popa
imul
add
or
fcomps
fdivl
xor
call
mov
test
pop
dec
xchg
adcb
nop
rclb
repnz
pop
inc
push
xorb
aas
sub
dec
aaa
xor
aaa
sbb
jbe
sbb
push
or
mov
inc
addr16
movb
xchg
pop
pop
xor
xchg
xor
inc
dec
xcrypt-cbc
cmpsl
push
cmp
fadds
repz
xor
orb
or
add
mov
das
push
adc
xchg
adc
push
sbb
enter
jnp
out
sbb
std
sbb
push
das
cmp
pop
nop
cld
and
dec
repz
cli
js
jns
stc
cmp
repz
jp
push
cld
fdivr
mov
cmpsl
xor
ret
cmpsl
push
mov
stos
mov
les
popa
cwtl
out
mov
and
outsl
sub
mov
les
sub
mov
mov
repz
cmp
mov
xchg
or
push
andb
iret
sarl
or
cld
or
in
cmp
repz
les
jecxz
pushf
push
xchg
call
xor
mov
mov
jl
insb
push
sahf
pusha
pop
mov
cmpsl
cmp
repz
inc
inc
cmp
sahf
out
sahf
xor
sub
and
jns
out
sbb
adc
or
jl
out
add
cld
or
iret
repz
hlt
call
cmp
repz
nop
jo
xor
out
adc
pop
int3
mov
out
sahf
out
inc
sub
adc
repz
or
push
fcom
les
js
sub
jns
cmpsl
stc
aam
mov
aaa
ret
out
cld
add
call
pusha
and
repz
jl
cwtl
dec
cwtl
cmp
pop
and
and
lods
fldt
or
inc
mov
stos
fsubl
dec
adc
lret
sub
adc
add
adc
fidivrs
pop
push
inc
dec
cmp
les
and
mulb
aad
xor
mov
xorb
push
jecxz
mov
mov
add
mov
inc
mov
adc
add
aas
sbb
dec
pop
shrl
cmpsb
movsb
mov
push
jmp
mov
and
adc
int
pop
or
pusha
xchg
mov
push
pop
cmpsl
inc
shll
mov
and
jb
adc
or
js
sar
ljmp
lods
mov
pushf
andb
rolb
ret
jns
rorb
sbbb
sar
pop
push
inc
push
xor
xchg
cld
inc
inc
mov
jnp
out
js
pop
cmpb
cmpl
jne
pop
mov
sbb
mov
xchg
xchg
push
je
imul
sbb
les
fidivs
arpl
imul
pop
mov
pop
push
or
stos
adc
bound
or
push
push
xchg
sub
inc
iret
pop
leave
jmp
outsl
jl
add
cmpsl
ja
lahf
add
add
jg
das
loopne
xchg
fucom
mov
loopne
popa
fsubs
mov
addb
test
xchg
inc
sub
aas
repnz
es
das
fcoms
mov
and
ss
inc
es
sete
int3
inc
rorl
jbe
into
xor
add
xlat
es
jns
pop
rcr
in
adc
or
push
lcall
pushf
setl
lret
outsl
mov
mov
or
push
cmp
popf
jl
in
push
daa
sub
xor
sbb
nop
adc
nop
mov
mov
aaa
mov
xchg
mov
aas
shll
loopne
jg
enter
pop
cmp
dec
dec
and
iret
fcmovnbe
arpl
popf
mov
aas
jbe
in
insl
mov
dec
jp
insb
adc
xlat
outsb
movsl
xor
loopne
dec
mov
movsb
dec
adc
mov
sub
lock
enter
scas
ja
dec
mov
rcrb
les
inc
insl
push
dec
pop
or
daa
lods
add
bound
es
dec
imul
sbb
testl
es
sub
lcall
scas
pop
push
and
and
inc
push
dec
dec
cld
mov
push
add
push
outsl
ja
xor
in
cli
jle
jb
push
xchg
jno
sub
add
fidivrs
daa
movsb
and
and
add
inc
sbb
repnz
outsb
inc
repnz
lods
mov
ljmp
xor
mov
or
inc
repz
dec
add
xchg
rcll
mov
adc
jnp
in
inc
add
insl
jo
dec
pop
adc
push
add
negl
dec
add
xchg
add
push
addr16
mov
push
popa
jae
push
jo
mov
jae
push
adc
movsb
mov
or
push
push
orb
dec
jb
inc
mov
lret
out
adc
rorl
sub
push
inc
sbb
addb
adc
add
and
add
xchg
or
dec
sub
push
mov
pop
or
push
neg
scas
sarb
push
jo
jb
jns
dec
sti
xor
mov
sbb
roll
pop
inc
xchg
push
push
lods
cmpsl
xor
push
sbb
mov
imulb
push
push
fcmovb
pop
aaa
adc
mov
inc
and
pusha
inc
inc
xlat
lods
inc
and
fidivrl
and
inc
imul
jge
xchg
xchg
mulb
mov
add
pop
add
cmp
or
push
dec
inc
add
out
mov
mov
and
gs
mov
add
jmp
rolb
into
test
push
es
pop
mov
scas
xchg
and
popa
push
dec
inc
mov
push
nop
pop
adc
sub
fs
data16
and
test
gs
dec
icebp
int3
inc
cmp
maskmovq
divl
gs
push
adc
jle
icebp
dec
or
and
push
call
pop
adc
imul
add
sub
inc
dec
fsubrs
mov
aas
das
jecxz
call
mov
mov
scas
inc
add
shlb
stc
add
adcb
push
adcb
and
subl
xor
dec
dec
pop
add
mov
jecxz
jns
xchg
fs
lcall
insl
inc
xchg
shll
push
outsl
mov
xchg
pusha
mov
roll
push
frstor
sub
add
sbb
inc
mov
pop
xchg
aaa
lock
mov
fyl2x
rcr
add
mov
jo
lret
jb
mov
jo
sub
adcb
arpl
inc
jmp
enter
mov
push
aaa
dec
mov
dec
pop
or
aas
inc
cmc
or
or
sbb
lret
mov
movsb
cmp
stos
enter
mov
cmp
add
inc
cmp
inc
mov
stos
iret
add
inc
jecxz
and
add
add
imul
xchg
push
loopne
cs
sub
movsl
mov
adc
arpl
sbbl
enter
add
scas
divb
into
pop
roll
in
xchg
add
push
xor
sbb
arpl
xor
adc
jo
arpl
fcmove
pop
movsl
cmp
add
lret
xchg
into
mov
in
inc
cmpsl
add
cmp
push
push
mov
imul
xor
ret
push
and
jns
add
jns
cld
inc
jae
cmc
and
adc
add
je
xchg
add
xor
and
test
xor
pusha
lods
lds
mov
or
cmp
out
into
insb
sbb
add
sub
inc
xor
loope
or
dec
sbb
and
mov
rclb
fiadds
pop
lahf
sbb
std
loopne
or
fwait
xchg
and
pop
pop
nop
ja
cwtl
aam
push
jecxz
jmp
xor
adc
mov
and
and
mov
add
pop
pop
dec
mov
push
sbbb
push
out
adc
sbbb
mov
and
add
xchg
adc
jns
sbb
nop
imull
test
rolb
and
mov
inc
xlat
pop
add
jbe
inc
dec
add
sahf
popf
lcall
xor
sti
stos
rclb
insb
or
popa
dec
dec
ss
pusha
sbb
xchg
pop
test
loopne
into
imul
push
jo
or
add
adc
push
leave
mov
or
xchg
add
pop
or
adc
mov
daa
sbb
adc
adc
add
dec
repz
clc
out
lock
repz
mov
cmp
mov
test
pop
mov
jns
xchg
nop
mov
jo
pusha
push
pop
iret
repz
push
inc
cmp
and
pushf
out
cmp
adc
in
lock
pop
mov
loopne
fdivrs
repz
enter
repz
repz
mov
iret
repz
cmp
sub
sbb
sahf
out
cmp
add
in
hlt
in
jns
out
in
int3
mov
mulb
mov
js
cmp
jnp
push
inc
sub
and
or
jmp
es
inc
mov
xor
adc
add
vandnps
divl
push
mov
push
mov
in
mov
stos
dec
add
out
divl
sbbb
lock
push
nop
push
repnz
andb
add
aaa
addr16
adc
fisubs
push
aaa
maskmovq
negl
lret
jbe
inc
and
add
outsl
add
or
dec
pop
jg
fs
inc
dec
pop
sbb
add
mov
mov
xchg
addb
imull
or
pop
shrb
dec
vpcmpeqw
lret
inc
subl
adcb
mov
push
mov
dec
push
pop
jo
add
adc
rclb
inc
test
push
movsb
xchg
mov
mov
outsb
test
or
jae
aam
lret
sub
outsl
dec
xchg
cmp
insl
jbe,pn
and
mov
lahf
xor
xor
ds
or
and
sbb
add
mov
xor
jae
mov
add
and
or
push
jbe
mov
aad
sbb
cmp
and
and
and
or
es
or
add
push
imul
jae
popaw
insb
into
jns
das
sti
add
add
jmp
push
sbb
inc
or
mov
add
inc
pop
pop
adc
pushl
add
xor
xor
sbb
bound
loopne
sbb
das
xor
cmp
pushl
movsl
xor
xor
xor
xor
xor
xor
movsb
xor
xor
xor
xor
xor
pushl
xor
xor
xor
xor
xor
dec
xor
xchg
shll
pushl
inc
ss
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
decl
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aaa
cld
jmp
cmp
cmp
cmp
cmp
sub
ret
add
push
lock
idivl
incl
add
xchg
add
adc
and
dec
xor
pushl
pop
xor
outsb
xor
popf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
out
cmp
jge
xorl
xor
jge
mov
xor
xor
fidivl
xor
ljmp
xor
fnsave
out
xor
ljmp
jno
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
sub
pop
out
cmp
cmpsb
cmp
cmp
loopne
jmp
cmp
cmp
cmp
cmp
push
cmp
jl
cmpl
cmp
cmp
cmp
push
adc
cmp
cmp
cmp
inc
sar
cmp
pop
cmp
imul
cmp
cmp
pushl
test
jo
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
sbb
aas
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
lcall
xor
xor
xor
xor
xor
pop
xor
jo
xchg
xor
xor
pop
pusha
pop
xorb
xor
xor
xor
xor
xor
xor
icebp
or
xor
push
sub
ss
clc
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
pusha
loop
inc
test
xor
paddd
xchg
pop
xor
push
xor
xor
xor
xor
xor
xor
incl
ret
xor
xor
lcall
out
xor
xor
xor
xor
test
mov
mov
nop
xor
pushl
pushf
xor
xor
xor
scas
clc
xor
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
fnstcw
fnstsw
loope
in
in
cmp
cmp
std
cmp
cmp
mov
xchg
adc
sbb
push
ljmp
cmp
cmp
ds
fidivrl
jmp
fcomip
add
and
cmp
ss
ss
xchg
cmp
cmp
test
lods
cmp
cmp
mov
cmp
cmp
adc
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
aas
push
mov
cmpb
aas
sarl
aas
in
out
aas
mov
push
movsb
xor
clc
fistl
add
jmp
mov
scas
xor
xor
inc
xor
loop
xor
xor
xor
mov
xor
jg
aad
popa
scas
std
xor
cmpsb
data16
ss
add
or
aaa
adc
pop
aaa
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
aaa
jl
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
ljmp
cli
test
popf
cmp
xor
pusha
cmp
mov
cmp
cmp
sbb
push
cmp
jmp
outsl
sbb
cmp
popa
cmp
cmpb
cmp
loope
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
bnd
adc
sub
fcomip
cmp
cmp
adc
inc
cmp
push
cmp
pop
cmp
jb
js
cmpl
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
xor
cmp
pop
cmp
mov
cmp
cltd
cmp
jp
jg
cwtl
ds
ds
jecxz,pt
out
jo,pt
jmp
aas
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
scas
outsl
sahf
or
push
xor
insl
stos
lcall
sahf
xchg
les
fidivl
in
sar
xchg
cli
or
adc
and
sub
cmp
jb
mov
xor
lcall
pushl
cmc
xor
xor
xor
xor
mov
jl
cmpsl
xor
cld
aaa
loopne
xor
scas
jno
xchg
xor
xor
xor
cmpsb
cmc
out
cli
pushl
xor
xor
mov
ret
aaa
xchg
aaa
fwait
sar
cmc
cmc
sahf
cmpsb
mov
bound
scas
cmp
ror
scas
jp
cmp
fdivrl
aaa
cmp
or
cmp
cmp
mov
aaa
je
fimull
nop
cmp
cmp
cmp
push
andl
xor
push
or
ljmp
push
xor
bound
data16
push
outsb
aaa
jb
jbe
xchg
decl
jge
cmp
cmp
cmp
cmp
cmp
cmp
loope
cmp
mov
mov
cmp
ja
lahf
xor
xchg
aas
push
mov
mov
xor
mov
xor
xor
mov
and
push
ss
fiadds
aaa
ret
jl
jmp
repnz
or
cmp
jmp
cmp
mov
cmp
cmp
jbe
xchg
cmp
cmp
jg
loopne
cmp
mov
and
cmp
cmp
fadds
idivl
push
aas
jne
mov
or
std
jg
mov
fwait
xor
xor
dec
or
ret
sub
adc
xor
divl
pop
xor
mov
loop
ss
dec
ss
outsb
notb
movsb
ss
enter
in
and
cmp
cmp
cmp
orl
mov
pop
mov
sbb
and
cmp
pop
push
imul
cmp
test
push
jge
mov
ret
cmp
dec
cmp
cmp
jg
data16
aam
fnstsw
jecxz
imul
mov
cmp
cmp
push
loopne
js
sarb
inc
cmp
orb
jg
cmp
ds
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
add
loope
rol
aaa
sbb
mov
push
xor
aad
out
incl
cmp
or
xor
xor
xor
xor
xor
mov
ljmp
ss
lcall
ds
dec
aaa
pop
aaa
js
das
sar
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
mov
cld
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
aaa
sarb
cmp
cmp
adc
jbe
cmpl
decb
cmp
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
jle
shl
out
out
pop
rclb
sub
jne
filds
loop
xor
xor
jg
xchg
xor
xor
rcll
shlb
sbb
cld
xor
xor
ljmp
jbe
loopne
adc
pushl
adc
sbb
sbb
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
push
loope
cmp
ljmp
mov
aaa
into
push
xor
xor
xor
jl
mov
negb
mov
mov
andb
in
test
lods
xor
add
out
lods
xor
xor
cmp
sub
sub
xor
inc
pop
cld
jg
cmp
inc
cmp
dec
cmp
push
rcrb
scas
push
loope
cmp
fidivs
cmp
cmp
and
lahf
mov
arpl
mov
enter
pop
test
mov
cmp
cmp
mov
cmp
scas
scas
mov
dec
cld
push
add
or
add
inc
stos
adc
sbb
and
and
sub
sub
pop
loopne
xor
cmp
inc
cmp
cmp
cld
jg
lcall
push
cmp
ret
jl
cmpb
push
mov
nop
xchg
cwtl
fwait
lock
pop
mov
sub
xor
inc
mov
filds
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
mull
adcb
pop
jg
bound
clc
xor
xor
inc
xor
xor
pushl
nop
xor
xor
fsubl
inc
cmp
mov
imul
inc
xor
andb
jle
jge
add
or
or
ss
jg
lcall
ss
fdivs
fdivl
loopne
in
call
ss
clc
ss
add
add
or
or
adc
adc
aaa
sbb
and
and
aas
cli
call
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
adc
mov
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
or
aaa
xchg
aaa
cwtl
into
mov
dec
mov
ljmp
ret
xor
enter
shlb
aam
fdivs
fdivl
sbb
lock
hlt
scas
les
hlt
add
or
adc
adc
fcomip
pop
sbbb
cmp
fdivrl
call
mov
cmp
pop
jmp
cmp
cmp
cmp
sub
cmp
cmp
cmp
sbb
add
insb
cmp
jl
test
mov
cwtl
cmp
movsb
cmp
mov
mov
mov
inc
xchg
sarb
test
mov
lods
test
jmp
stc
sti
popa
inc
mov
jne
call
sahf
repnz
shufps
mov
es
jmp
adcb
pusha
popf
dec
mov
addb
sub
repnz
inc
insb
push
add
out
xor
lret
push
addb
orb
jo
dec
add
fiadds
fsubs
push
add
mov
or
pusha
cltd
jne
mov
daa
and
test
sub
adc
fisubrs
out
and
dec
mov
lcall
push
repnz
xchg
adc
add
pusha
dec
pop
dec
inc
inc
and
inc
adc
push
adc
push
sbb
xchg
call
dec
push
gs
les
mov
jge
and
and
pop
inc
and
xor
lock
dec
xchg
lea
lcall
push
pop
in
push
out
pop
addb
sbb
jne
push
mov
jmp
mov
les
cmp
fcmovnu
les
and
inc
movsb
mov
insb
mov
enter
rcr
loopne
adc
cmp
fists
push
cmp
or
outsb
xor
das
inc
xor
subb
and
mov
insb
sub
clc
cwtl
sbb
cld
push
and
pop
push
mov
push
or
gs
or
and
xchg
add
jno
or
mov
jns
xlat
and
pop
or
inc
mov
cmp
add
sbb
sbb
movsb
jmp
sar
sti
jle
and
adc
sub
inc
jp
add
sbb
pushf
or
xor
subb
outsb
and
sarl
or
jb
lea
call
adc
lea
jmp
add
cmp
out
inc
lahf
xchg
fildl
mov
add
dec
mov
adc
ret
add
sbbl
pop
outsb
push
push
inc
sub
or
or
mov
jb
pusha
movl
enter
sub
out
push
push
inc
aaa
or
inc
push
jnp
shl
push
call
stos
or
xor
adcl
mov
cmp
inc
push
mov
lods
and
adc
fisubrl
lahf
jbe
andl
mov
push
call
arpl
je
cmp
js
mov
lea
inc
jg
sub
mov
push
or
sbb
add
call
orl
mov
dec
mov
push
mov
cmpsb
cld
inc
and
movb
jnp
lret
jmp
lret
cmp
nop
mov
adc
clc
addb
add
lcall
mov
sub
xor
cs
push
lock
loop
cld
adc
and
adc
cmpsl
and
xor
or
add
sbb
push
adc
cmpsb
add
add
ljmp
mov
sbb
sub
or
jge
andl
lods
cmp
xchg
or
int
add
xchg
xor
xchg
mov
mov
push
pop
mov
sbb
aad
mov
push
add
dec
mov
lea
imul
out
fildl
add
or
xor
das
or
xor
loope
inc
hlt
das
add
pop
pop
or
push
enter
dec
test
mov
or
lds
imul
mov
popf
jnp
inc
dec
jbe
sbb
or
jmp
test
outsl
pusha
xor
loope
cmpb
push
aaa
or
jge
out
inc
inc
cmp
pop
mov
add
adc
pop
sbb
dec
push
rorb
pusha
lret
push
mov
push
sbb
inc
push
adc
loope
push
data16
adc
imul
adc
and
inc
adc
mov
pop
add
sarl
hlt
sub
inc
test
sbb
dec
mov
push
adc
jmp
mov
fstpl
adc
dec
repnz
cmp
orl
or
mov
cmpsl
push
rolb
ret
and
mov
test
or
adc
lods
cmp
loopne
or
sbb
fstpt
jne
clc
idiv
dec
enter
mov
jbe
jnp
mov
pop
xor
add
mov
push
cmc
and
mov
push
pop
mov
push
fcmovnu
sbb
add
sarl
cmpsb
xchg
mov
cli
pop
icebp
lods
xlat
call
add
outsl
js
and
ja
add
push
mov
aas
sub
rclb
and
adc
jecxz
jo
dec
and
add
movsl
adc
push
sbbb
xlat
lret
ret
dec
add
pop
push
in
fdivs
jns
sub
add
or
insb
in
add
push
add
or
pop
clc
fs
jge
mov
push
adc
or
pop
mov
and
sub
or
mov
bound
push
mov
dec
sbb
or
pop
and
or
pop
fisttpl
cmp
test
inc
or
xor
push
or
pop
mov
ror
inc
jo
jmp
inc
mov
xor
lods
mov
es
cmp
std
es
or
or
cltd
ret
fildl
mov
or
or
or
sbb
or
adc
enter
pop
stos
fildll
and
dec
lods
sbb
inc
pop
cmpsb
sub
repnz
inc
dec
cs
inc
movb
adc
add
pop
or
int
push
rorb
js
xchg
ret
dec
mov
lock
sahf
insl
dec
iret
adc
sub
inc
popf
roll
mov
add
out
jmp
movsl
pushf
jmp
mov
push
mov
xor
push
push
or
outsb
push
lods
adc
pusha
stos
notl
subl
pop
aam
idiv
push
xchg
notl
pop
dec
or
inc
and
push
push
xchg
add
and
add
cmp
mov
lret
inc
dec
aaa
inc
scas
outsb
addb
or
insb
dec
loope
pop
das
adc
inc
outsb
sub
sbb
inc
inc
sub
dec
pop
out
adc
pop
push
push
push
inc
sbb
stc
testb
pop
sbb
or
jmp
dec
xchg
out
mov
out
add
adc
data16
mov
adc
mov
mov
dec
scas
fcoml
dec
mov
or
and
call
dec
sub
mov
dec
cmp
nop
orb
dec
jo
push
shr
repnz
test
call
pop
cs
sahf
adc
cmp
push
jmp
pop
inc
ret
xchg
lcall
out
mov
mov
lock
or
addb
stos
fs
mov
mov
inc
inc
push
pop
mov
sti
mov
or
cmp
adc
and
adc
or
test
mov
inc
shrl
and
stc
inc
inc
or
sbb
mov
sub
inc
inc
jg
mov
push
or
lods
sbbl
cmp
xor
inc
cmpb
adc
add
adc
mov
mov
mov
or
sbb
add
push
cmp
repnz
sbb
sbb
mov
dec
or
add
inc
and
dec
push
mov
mov
mov
ja
sbb
xor
mov
mov
dec
inc
outsl
dec
mov
jge
out
push
andb
jae
fwait
or
fs
pop
add
pop
inc
mov
call
rorl
pop
leave
xchg
cs
or
dec
ret
jp
dec
call
mov
mov
mov
scas
enter
insb
lret
pop
fs
inc
mov
adc
pop
jne
adc
pop
andb
insb
jbe
add
and
cmp
nop
int3
jnp
notl
rolb
hlt
aaa
add
xchg
xchg
and
push
pop
xchg
jns
testl
inc
add
gs
cmp
xchg
and
sbb
jmp
xor
movsb
mov
sub
sti
pop
int3
and
pop
out
fstp
and
pop
nop
xor
push
push
jl
subl
add
xchg
xchg
and
lret
xchg
rolb
fadds
loopne
lock
shlb
push
jnp
and
xchg
or
add
xor
inc
pop
xchg
hlt
mov
in
out
shrb
dec
int3
mov
stc
mov
xor
shlb
sub
and
mov
rclb
mov
je
cmp
lods
and
xchg
mov
adc
negw
push
pop
pusha
mov
pop
or
cmpsl
or
pop
pusha
hlt
push
test
stos
pop
orl
cmpsl
ret
int3
out
mov
add
sub
mov
cltd
inc
sub
shlb
enter
sub
xor
jb
sub
imul
lcall
dec
push
sbb
sub
sub
and
nop
xor
sub
inc
enter
sub
xchg
cmpsb
sub
sub
xchg
sub
shll
sub
lret
dec
sub
sub
movsb
imul
sbb
cmp
movsl
push
filds
push
cmovns
jo
aam
in
sbb
pop
sarl
ret
test
shl
subb
mov
repnz
adc
jo
pop
lds
out
push
inc
fistl
stc
push
inc
push
jge
or
push
lret
ss
or
insb
push
sahf
sbb
stc
or
addr16
add
nop
mov
call
push
movsb
fwait
and
inc
shrb
inc
sub
xor
sbb
push
lods
out
sub
and
rolb
mov
mov
add
inc
adc
push
inc
sub
les
hlt
ds
pop
xchg
lds
je
or
inc
nop
adc
mov
push
inc
rolb
and
lods
pop
inc
shll
add
subb
inc
aas
and
mov
xchg
test
xor
mov
or
sub
cld
push
cmp
cmp
xor
inc
jmp
test
sub
push
hlt
movsb
test
cmpsb
push
mov
cmp
pop
es
jae
mov
rcrb
nop
add
cs
push
ja
imul
xchg
adc
mov
mov
cmpsl
cmpsl
cld
add
and
add
pop
push
and
xor
adc
jnp
jns
mov
jns
sbb
loope
pop
add
loop
in
js
xor
mov
inc
js
roll
jno
inc
jns
adc
jmp
lcall
add
xor
xchg
mov
js
adc
pop
jns
sbbb
and
outsl
sbb
les
jns
sbb
inc
loop
into
daa
jns
leave
mov
jbe
sub
sbb
rclb
andb
les
sbb
outsl
and
scas
jns
xchg
jns
ljmp
icebp
sbb
xchg
pop
jns
subb
scas
icebp
sub
popa
sub
aam
popf
push
adc
daa
fbstp
push
add
adc
daa
push
add
xchg
jmp
inc
add
outsb
cmpsl
daa
pop
add
daa
mov
inc
daa
test
inc
dec
or
les
daa
add
out
dec
cmp
dec
addb
sbb
daa
aam
les
andb
lds
cmc
adc
enter
sbb
pop
mov
add
mov
lcall
push
add
add
loopne
les
fisubs
mov
or
add
imulb
inc
ljmp
push
add
cwtl
dec
adc
jl
push
dec
xor
dec
sbbb
inc
pop
enter
daa
fisttpll
daa
fmuls
add
inc
call
nop
mov
nop
pop
push
add
lea
movsb
out
xchg
mov
and
mov
xchg
nop
shrl
movsb
inc
ret
push
dec
pop
test
daa
sbbb
adc
xor
mov
or
xchg
dec
daa
das
sub
xor
nop
daa
adc
mov
inc
into
or
or
sub
jnp
ret
jnp
movsb
rorl
mov
mov
mull
dec
cmpsl
mov
nop
xchg
arpl
inc
movsb
outsb
xorb
sbb
fmuls
test
jmp
es
xor
sub
xor
push
push
imul
mov
pop
ss
mov
inc
mov
or
es
ja
xorb
inc
mov
je
test
fisubl
sbb
and
mov
pop
mov
lahf
and
movl
mov
lock
pop
push
ds
xor
mov
sub
cmp
loope
xor
rorb
cwtl
and
cmp
mov
xor
adc
enter
arpl
cmp
inc
cmp
enter
sub
and
dec
and
xchg
sub
mov
or
dec
mov
movsb
pop
mov
mov
lock
test
jg
push
cmp
adc
pop
fisttpll
jno
xchg
mov
or
and
call
addl
jo
add
cmp
inc
aam
jl
int3
jo
mov
test
xorb
inc
in
dec
and
and
adc
aad
inc
nop
pushf
dec
aad
jbe
pushf
test
cmp
ja
mov
jae
addr16
adc
lock
cltd
aad
add
xor
test
fistpl
adc
pushf
push
aam
mov
sbb
xor
mov
inc
lahf
movsb
test
enter
mov
aad
cld
xchg
mov
xlat
add
or
cltd
mov
dec
lahf
sbbb
sbb
or
test
pop
fidivrs
cmpsb
dec
push
mov
enter
mov
mov
dec
jo
ret
xor
mov
adc
mov
das
mov
hlt
or
or
add
jns
xchg
mov
add
jb
lods
lret
xor
pusha
fucomp
mov
cs
inc
xor
dec
call
lcall
and
push
mov
and
mov
lock
pop
add
or
mov
int3
test
mov
sbb
bound
test
and
add
fistpl
psrad
pop
mov
push
rolb
pusha
ds
xchg
pop
jp
pop
hlt
push
dec
loope
and
cmp
lahf
pop
mov
jnp
das
rclb
jnp
sbb
xor
out
sbb
loopne
cmp
xchg
fsubr
jp
sbb
xchg
push
add
fildl
or
push
xor
xchg
xchg
enter
xchg
lock
push
push
mov
loopne
clc
adc
pop
or
adc
xor
ret
or
push
notl
push
mov
or
icebp
or
xor
push
pop
xor
ljmp
pop
pop
inc
and
mov
push
stc
stc
lods
xor
mov
in
cld
inc
ret
fimuls
xchg
or
xchg
call
mov
inc
sub
adc
fstp
pslld
inc
and
adc
fldl
xlat
mov
aam
ret
pusha
daa
stc
sahf
inc
in
ljmp
jmp
pop
xchg
inc
and
faddl
shll
sub
mov
jne
gs
xchg
sub
jmp
jne
out
xorb
jne
stc
sub
fidivs
jno
leave
lret
jae
call
jns
jne
mov
add
mov
loopne
test
lock
xchg
sub
mov
aas
pushf
push
test
aam
adc
mov
adc
call
test
add
gs
insb
xor
xor
jle
loop
add
das
xchg
aad
inc
bnd
xor
call
popf
out
inc
mov
xchg
and
pop
xchg
cmpsb
fdiv
je
inc
pusha
mov
jge
push
mov
xchg
ljmp
or
and
mov
add
mov
or
sbb
hlt
shll
repnz
lock
mov
lret
rol
sub
fldl
dec
push
sarb
mov
stos
shll
add
shrl
cli
lret
cmp
pop
pushf
pop
xchg
pop
rcrl
sbb
shrl
stc
shl
mov
mov
sbb
fsub
cwtl
push
leave
mov
mov
sbb
rcll
pop
pusha
or
xchg
test
aad
push
or
or
sbb
or
and
mov
leave
add
xchg
pop
jecxz
cmp
adc
push
fsubrs
xorl
adc
repz
jns
movsl
adc
add
push
mov
xor
cmpsl
cltd
daa
mov
pushf
cmp
mov
ljmp
push
or
add
sbb
sub
add
sbb
sahf
icebp
test
mov
cmp
adcb
aam
fsts
leave
add
aam
push
repnz
roll
fstps
nop
daa
daa
dec
sbb
inc
leave
stos
fst
insb
out
mov
adc
jb
hlt
call
xlat
lret
add
sub
pop
mov
lret
add
add
sub
xchg
xchg
lcall
jp
add
adc
mov
fiadds
push
dec
aaa
insl
fs
das
mov
dec
adc
push
adc
imul
xchg
xchg
push
inc
adc
adc
add
sub
adc
adc
xchg
outsb
and
or
rcl
sub
sub
sub
pop
sbb
fcoms
pop
mov
mov
xchg
test
inc
mov
inc
cli
dec
dec
ja
adc
sub
ja
add
sub
movsl
and
dec
dec
daa
and
mov
jnp
in
addb
inc
adc
push
cmpl
jb
test
lret
xor
xchg
xlat
mov
lret
dec
test
inc
cltd
add
ss
cltd
mov
pushf
sub
bnd
aaa
and
dec
in
popf
call
fisubrl
scas
inc
dec
flds
sarb
inc
dec
mov
jge
int3
das
lcall
outsl
or
ljmp
out
jnp
fistpl
mov
pushf
inc
mov
lds
mov
fidivs
fstp
lds
in
in
lds
mov
lds
outsb
push
sbbl
or
dec
in
test
or
jb
pop
adc
ljmp
push
out
pop
or
cmp
or
xorl
xor
sub
nop
fdiv
mov
call
fstpl
sbb
in
pop
repz
lods
aaa
test
test
outsb
pop
pop
popa
fsts
aam
in
cmpl
cli
pop
cltd
mov
pop
push
and
in
or
ret
out
mov
pop
xchg
in
mov
push
mov
push
pop
push
or
sub
lods
pop
rcrb
adc
jmp
sub
mov
test
jne
pop
jp
sbb
pusha
mov
push
out
pop
mov
pop
rorb
add
test
enter
sbb
mov
adc
jno
sbb
inc
pop
hlt
aam
sub
mov
aaa
test
inc
roll
enter
xchg
inc
dec
jecxz
loopne
mov
inc
push
shlb
js
pop
test
jle
pop
inc
cs
dec
or
iret
rclb
xchg
arpl
pop
add
or
pop
int
adc
pop
cs
inc
ss
adc
sub
dec
leave
in
loopne
rolb
dec
xchg
leave
or
adc
stc
xlat
add
xchg
in
xchg
mov
in
in
push
bound
in
gs
mov
xor
sub
adc
or
lock
call
mov
mov
mov
mov
mov
nop
mov
mov
push
push
jb
mov
and
cmp
dec
mov
nop
sbbl
mov
enter
pop
mov
in
pop
cmp
mov
jb
xchg
sbb
mov
cmp
inc
push
mov
mov
cmpb
jb
sbbl
mov
enter
xor
in
sbb
inc
push
jb
mov
and
cmp
jecxz
fdivrs
in
mov
enter
mov
mov
cmpb
xchg
sbb
mov
cmp
inc
push
cmp
or
pop
sbb
or
mov
pushf
xor
or
shll
mov
or
sarl
and
scas
mov
cld
xchg
mov
pushf
xor
xchg
add
adc
xor
mov
or
daa
int
dec
or
and
das
mov
cmp
jb
sub
cmp
and
int
stc
mov
adc
pushf
xor
aad
cli
cmp
pop
sahf
ret
mov
cwtl
lret
addl
dec
mov
sub
mov
inc
into
aad
sub
test
push
sub
mov
movl
sbb
or
and
sarb
stc
and
mov
cmp
push
popl
cwtl
sub
aam
ret
fsts
test
rol
push
test
mov
cmp
xchg
sti
testl
pusha
mov
mov
inc
xor
rolb
mov
jg
sbbb
addr16
aam
shll
and
push
mov
inc
subb
xchg
sbb
fxch
das
pop
xor
sub
test
add
sub
mov
jo
in
punpcklbw
addr16
hlt
leave
sbb
inc
das
adc
mov
das
xor
push
das
xor
mov
das
pop
push
pop
adc
push
das
jl
mov
jbe
mov
fists
xor
filds
pop
pop
adc
das
add
ds
xor
rorb
inc
dec
aaa
cmpsb
sub
xlat
inc
dec
ja
dec
das
outsb
mov
das
pop
and
bound
or
add
pop
test
xchg
inc
inc
das
inc
dec
push
idiv
shl
xlat
shrb
js
jmp
lea
fldenv
rclb
fs
das
xor
rcrb
mov
push
and
scas
pop
mov
fdivrl
cmp
add
and
andb
bound
rclb
xor
ror
das
nop
xor
xchg
push
scas
das
inc
add
cmp
cltd
movsl
mov
sarb
dec
addl
cs
pop
sbb
fiadds
xor
mov
mov
sbb
mov
jbe
test
sub
and
adc
jae
add
sub
pop
jb
shrb
test
je
in
shlb
pop
lods
sbb
hlt
das
lock
lods
xor
lock
int3
jecxz
and
in
fiaddl
cwtl
adc
sub
mov
dec
das
inc
dec
inc
loop
push
mov
and
or
push
fadd
inc
dec
cmpsl
xchg
das
dec
out
push
pop
jp
das
inc
sbb
ss
cmp
das
fldcw
loope
sbb
repz
add
das
lods
adc
adc
dec
mov
loopne
jno
das
xlat
inc
call
shlb
das
dec
sbb
push
add
movl
icebp
adcl
lock
mov
add
cmp
fisttpl
and
lret
xor
pusha
mov
movsl
mov
jb
repnz
adc
push
das
cmp
mov
push
pop
das
mov
je
push
test
mov
cmp
testb
ds
in
das
arpl
in
das
sbb
sub
imul
jbe
movsl
jmp
mov
push
inc
test
jp
sbb
cmpsb
jg
xchg
rolb
xchg
out
add
xor
pusha
xor
or
xchg
fldl
add
push
add
je
mov
mov
aad
add
aaa
rcl
das
shrb
pop
adc
sbbb
or
lea
push
pop
adc
xor
inc
das
inc
dec
cmpsb
push
aad
xchg
rcl
das
cltd
lock
stos
rcrb
sub
pop
sbb
popa
repnz
das
movl
sarb
das
jb
movsb
and
adc
mov
das
adcb
mov
das
jne
inc
dec
out
and
adcl
test
int
push
rolb
and
push
xor
fisttpll
lcall
and
or
je
test
das
xchg
push
push
jg
mov
das
push
stos
or
lahf
test
pop
sbb
loopne
ret
shrb
stc
xor
xchg
das
loop
rcl
adc
xchg
les
lea
mov
jno
adc
and
pop
das
ficomps
or
add
mov
addb
add
les
xor
xchg
adc
sub
out
lods
push
or
add
shl
cmp
push
pop
das
jp
or
pop
pop
lret
and
cmp
inc
dec
and
imul
daa
inc
inc
push
aaa
adc
daa
sbbl
into
ljmp
test
lret
sub
xchg
test
out
adc
mov
xor
iret
cmpsb
push
imul
cltd
jmp
test
call
mov
or
std
push
rcl
dec
cmp
push
pop
sbb
add
jmp
or
sbb
mov
push
pop
sub
addr16
lcall
inc
cwtl
or
cmp
aaa
cwtl
adc
jns
pop
popf
in
mov
xor
cmp
outsl
push
sbb
lock
push
cltd
push
sbb
fldl
scas
add
or
aam
je
push
or
out
mov
addr16
xchg
jmp
mov
js
mov
inc
inc
sub
sbb
repz
push
cs
pusha
jo
ds
repz
add
adc
jns
out
push
bound
sahf
out
sahf
mov
dec
repz
add
cmp
repz
cwtl
cmpsb
out
cmp
mov
fdiv
or
sahf
out
sahf
push
sub
dec
pop
data16
out
jo
cwtl
scas
repz
out
lock
stos
and
repz
inc
push
pusha
insb
jbe
call
movsb
mov
sbb
mov
dec
repnz
fsubrs
daa
adc
adc
push
int
xor
adc
cmpsb
pop
les
movsb
sbb
xor
addr16
push
fcoms
sbb
aad
lahf
divl
outsb
cmp
jl
push
clc
mov
insl
sbb
mov
ss
es
dec
aaa
add
inc
int3
out
cmp
jno
mov
push
mov
iret
dec
or
add
test
adc
adc
push
adc
xchg
sbb
sbb
xchg
js
mov
sbb
mov
jl
push
pop
sahf
mov
and
and
sarl
js
jns
jns
out
jp
cmp
inc
out
out
popf
xor
aas
sub
dec
push
mov
adc
or
inc
push
inc
pusha
inc
outsb
mov
adc
sahf
or
xor
sbb
add
iret
sarl
hlt
call
iret
repz
enter
repz
mov
mov
pushf
cwtl
xchg
nop
mov
cmp
xrelease
cmp
je
insb
push
repz
pop
push
push
dec
repz
repz
inc
inc
cmp
iret
repz
xor
sub
sbb
sahf
cmpsl
stc
cmp
cld
nop
in
les
out
movsb
test
iret
repz
add
push
shlb
cmp
dec
inc
xor
sahf
out
add
mov
int3
lods
repz
out
pop
xor
in
loope
cmp
enter
xor
jg
push
add
in
mov
mov
push
add
nop
inc
adc
pop
push
nop
inc
push
xchg
nop
push
subl
mov
aaa
xor
push
push
add
popf
popa
add
xor
push
cmpsl
or
sub
sub
mov
inc
fs
aaa
shlb
js
inc
andb
inc
mov
pop
jnp
mov
mov
fistpl
push
and
aas
pop
mov
xchg
pop
add
push
daa
insl
out
jge
and
push
mov
add
lods
inc
add
imul
test
mov
mov
test
xor
pop
push
mov
addr16
fadds
add
sub
and
test
lea
enter
jl
push
inc
dec
mov
ja
aas
jb
xor
das
shlb
pop
outsb
cmp
jge
inc
jo
sbb
cmp
pop
dec
loope
cmp
inc
out
insb
dec
mov
aas
sbb
dec
lahf
mov
lds
dec
jg
dec
mov
rcrl
push
aas
cmp
repnz
es
xchg
pop
jo
inc
rcr
fsubl
push
clc
push
dec
sar
cmp
iret
xor
fsts
and
outsb
unpcklps
sub
daa
xchg
int3
das
les
xchg
nop
imul
dec
push
fildll
push
push
bnd
daa
push
insl
inc
ret
sbbl
xor
jb
push
add
outsl
jbe
pop
xchg
add
fisttpl
mov
jb
jbe,pn
packuswb
push
or
sub
xchg
movsl
movsb
jmp
xor
mov
xchg
sub
mov
jbe
mov
jo
and
imul
clc
dec
mov
cld
sbbb
andb
sbb
lret
pop
inc
mov
into
outsl
jne
dec
repnz
arpl
add
mov
xor
add
insb
add
cmpl
pop
xor
push
inc
sbb
add
xor
xchg
adc
dec
jecxz
or
sub
roll
scas
or
rorb
lret
sub
arpl
mov
inc
sub
sbbb
dec
sub
xor
push
shlb
sub
mov
mov
xor
add
push
sbb
xor
xlat
inc
arpl
lea
fisttps
adc
les
inc
jmp
arpl
inc
arpl
aas
iret
adc
lea
arpl
inc
arpl
xchg
inc
add
lea
shll
add
arpl
imul
arpl
psrlq
pop
pusha
arpl
push
test
and
or
pop
jmp
dec
arpl
sub
cwtl
mov
mov
add
jbe
stos
mov
push
subl
mov
and
call
sbb
add
movsb
xchg
iret
repz
testb
cwtl
xchg
nop
cmp
repz
test
out
fdivp
pop
push
pop
dec
inc
inc
sahf
out
sahf
cmp
xor
sub
jns
out
and
sbb
adc
cld
xchg
hlt
xchg
in
push
in
jns
out
enter
out
sahf
lods
test
mov
or
je
insb
push
fs
repnz
out
push
dec
mov
push
and
popf
out
jns
add
in
xchg
push
enter
sahf
sarb
sahf
out
nop
mov
repz
push
dec
repz
and
adc
lock
loopne
cmp
repz
mov
xchg
insb
adc
fcoms
inc
mov
sub
push
adc
in
push
dec
lock
xor
sahf
push
test
push
adc
and
nop
gs
mov
add
test
mov
or
xchg
test
pop
call
inc
mov
jg
in
pop
enter
or
lcall
xchg
cs
popa
popa
xor
daa
push
ret
ret
mov
aas
iret
sub
fs
add
add
verr
loopne
xor
mov
mov
call
sub
iret
xor
xor
sahf
xor
xor
xor
xor
xor
aaa
fbstp
and
clc
dec
sbb
cmp
cmp
cmp
notb
cmp
bound
push
xor
mov
decl
sahf
fdivrs
bound
cmp
xchg
mov
cmp
mov
and
pop
lcall
jecxz
data16
aas
fs
imul
aas
jecxz
call
sub
xchg
mov
and
sub
inc
xor
mov
sub
xor
push
shl
loope
sbb
idiv
push
mov
xor
and
daa
xor
cmp
inc
xor
push
xor
imul
xor
icebp
push
ret
clc
lea
xchg
xor
xor
xor
and
out
sbbb
xor
or
jg
xor
adc
sbb
sbb
mov
xor
xor
xor
xorb
xor
push
xor
xor
ss
xor
xor
xor
xor
xor
ljmp
mov
mov
mov
xor
xor
xor
xor
xor
and
sub
mov
mov
xorl
out
push
mov
sbb
aaa
cmp
insb
cmp
xchg
and
adc
lock
sbb
sbb
and
and
sub
xor
jp
idiv
xchg
repnz
cmp
inc
pop
mov
cmp
sbb
cmp
or
outsl
add
dec
cmp
cmp
inc
idivb
cmp
clc
mov
cmp
add
pop
cmp
ret
jbe
cmp
call
mov
cmp
ds
ds
ds
cmp
dec
inc
push
ret
aas
mov
mov
mov
aas
repnz
and
inc
xor
outsb
js
mov
xor
xor
or
xchg
xor
xor
sbb
mov
dec
xor
aam
fimull
xor
popf
xor
dec
xor
cmpsl
repz
xchg
xchg
outsl
test
lret
push
add
ss
pop
aaa
mov
aaa
incl
mov
outsb
pop
xchg
sub
cmp
jg
ret
cmp
js
jle
xchg
ret
push
mov
mov
ret
mov
jl
in
adc
xor
clc
pop
ss
cmp
div
sbb
xchg
jb
cmp
cmp
aaa
ret
dec
push
cmp
jne
outsl
test
cmp
subb
cmp
cmp
mov
mov
lods
fs
aaa
enter
in
jmp
lock
inc
adc
cmp
xchg
xor
inc
jp
fbld
aaa
insb
cmp
cmp
cmp
cmp
cmp
sub
jg,pt
mov
push
ds
ds
clc
es
adc
and
dec
pop
push
inc
loopne
push
aas
or
popf
xor
outsb
xor
jno
test
js
sbb
clc
xor
inc
daa
inc
sbb
adc
push
xor
xor
in
cmc
xor
xor
shlb
inc
xor
arpl
jg
insl
xor
test
cli
xor
cmp
and
popf
xor
sbb
inc
ss
aaa
jnp
mov
clc
aaa
add
or
cmp
jle
pop
inc
inc
adcb
bound
or
sub
mov
xor
enter
push
mov
mov
pop
cmp
outsl
shrl
mov
cmp
stos
popa
cld
decl
cmp
cmp
cmp
cmp
cmp
cmp
scas
push
sbb
ja
cmpb
cltd
clc
fwait
fs
cmp
cmp
cmp
sbbb
sub
gs
mov
inc
outsl
out
test
decl
dec
xor
lock
xor
adc
xor
nop
icebp
fnsave
push
cmpsb
xor
xor
icebp
pushl
sub
pop
xor
jns
mov
out
test
decl
adc
sbb
das
ss
mov
mov
aaa
pop
fnsave
scas
dec
pop
cmp
push
mov
lret
mov
cmp
cmp
mov
mov
bound
imul
cmp
cmpsb
cmp
cmp
cmp
add
or
cmp
aas
iret
aas
loope
add
mov
pusha
add
pop
sub
cmp
xor
test
xchg
mov
fbld
mov
push
push
fwait
mov
xor
pop
mov
xor
ljmp
xchg
icebp
ss
aaa
gs
cmp
cmp
cmp
cmp
pop
xchg
mov
scas
jbe
out
mov
xor
out
adc
fs
mov
cmp
xchg
into
sub
clc
jg
push
cmp
cmp
jb
jnp
clc
stos
outsb
mov
lcall
lock
dec
pusha
or
or
adc
and
lock
mov
xor
je
jl
cmpb
popf
popa
fwait
mov
nop
sbb
into
xor
call
lcall
mov
mov
sbb
xor
pop
shlb
mov
push
add
stc
int3
xor
fs
out
pusha
and
add
sbb
xor
or
into
test
mov
sbb
adc
clc
ljmp
shl
fadds
loopne
call
pop
sub
add
or
or
adc
xor
jecxz
cs
cmp
inc
xor
sbb
fistpll
push
xor
xor
xor
insb
dec
sbb
xor
je
push
std
ret
cmpb
xchg
xor
xor
call
xor
fnsave
cmp
ret
shlb
sbb
lods
or
jo
je
xor
lcall
fcoml
xor
cmp
xor
sbb
push
and
jle
bound
jo
lock
dec
add
mul
shll
pop
pop
daa
cwtl
out
mov
stos
cld
stos
xor
xor
inc
xor
xor
or
inc
xor
fs
xor
xor
jnp
mov
inc
shl
add
clc
fwait
mov
pop
xor
xor
fs
movsb
inc
shlb
xor
or
xor
aas
push
cs
fmull
out
xor
dec
xor
data16
in
outsb
sub
xor
jb
xor
push
push
push
stos
cld
cmp
inc
xchg
dec
xchg
push
cli
orl
pop
xor
mov
jo
js
jl
pop
add
test
xor
xor
xchg
rcrb
test
lods
and
xor
push
sbb
jo
test
xchg
xlat
mov
lods
and
and
aas
xchg
xor
jo
nop
sbb
jp
andb
fdivr
cltd
es
xchg
add
inc
add
xchg
inc
pop
pusha
jo
mov
clc
add
add
outsl
incl
or
pop
pop
push
or
or
or
or
or
mov
push
adc
push
adc
fidivrl
sbb
adc
adc
adc
add
data16
sub
outsb
or
rolb
or
std
or
xchg
add
add
adc
cmpl
add
inc
mov
fnsave
xor
jge
jg
and
xor
adc
pop
and
xor
xchg
mov
rcll
bound
js
push
push
mov
sub
aaa
sub
mov
pop
xchg
mov
movsb
xor
mov
xchg
xchg
test
jns
inc
or
xorb
xor
add
adc
add
fisubrs
inc
lods
push
adc
pop
popa
jno
stc
add
adc
mov
or
xor
adc
shrl
icebp
mov
addb
loopne
sbb
mov
fiaddl
or
inc
addb
das
mov
std
or
add
lds
cld
cli
and
mov
lcall
ret
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
mov
jecxz
cli
pop
mov
stc
or
clc
cmpl
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
jmp
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
mov
orb
int3
lcall
mov
push
pop
mov
pop
pop
mov
incl
movb
xchg
sbb
scas
adc
mov
xor
lods
scas
xchg
test
jmp
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
mov
dec
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
push
das
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
lcall
int
arpl
push
out
or
lcall
inc
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
pusha
jg
sarl
xor
hlt
and
xchg
jmp
sbb
mov
mov
out
pop
jb
mov
mov
push
mov
sub
pop
mov
jl
rorl
adc
xlat
gs
jg
hlt
push
add
stc
loope
aad
outsl
jg
mov
sar
andl
aas
icebp
testb
mov
jg
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
ljmp
cli
push
inc
sbb
paddb
inc
mov
clc
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
es
or
dec
fisttpll
out
aas
std
cli
mov
push
push
idivl
cmp
sub
inc
scas
incl
cmpb
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
dec
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
clc
sub
sub
cmp
dec
inc
push
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
add
lea
jg
gs
std
xorb
jg
pushl
outsl
adc
ret
das
pop
pop
pop
shlb
mov
sarb
sbbl
jno
or
sarb
std
pop
les
cli
ss
jmp
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
lcall
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
jg
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
cmp
scas
lods
push
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
lock
ds
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
ljmp
push
push
jo
pusha
imul
add
mov
cmp
xchg
mov
sti
es
sub
loop
pop
xchg
ftst
jbe
xchg
and
add
jae
shrb
jmp
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
clc
mov
pop
cld
addl
adc
and
int3
mov
push
enter
jecxz
scas
sub
loop
sar
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
jg
add
pop
iret
mov
jg
mov
aad
test
in
pop
mov
lock
mov
iret
push
jbe
lock
std
stos
icebp
pop
incb
jno
adc
push
inc
loopne
mov
jecxz
sbb
sarl
adc
loopne
in
pusha
mov
mov
mov
mov
push
cmp
dec
push
in
aas
mov
sahf
cmpl
imul
push
and
jg
or
push
clc
xchg
pop
cld
jg
pushf
mov
repnz
and
mov
adc
pop
in
loope
inc
aas
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
pop
lock
data16
pop
nop
mov
call
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
push
aas
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
jg
das
ss
stos
pop
add
dec
mov
sub
jge
jbe
ds
xor
lahf
les
sbb
sbb
cld
addl
clc
incl
in
stc
mov
lahf
outsl
int3
push
sbb
pop
imul
pop
test
bound
xchg
cmpsl
out
outsl
xchg
inc
test
in
jge
popa
push
test
aaa
cld
jg
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
mov
clc
daa
out
lcall
shl
cld
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
jg
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
jg
jecxz
adc
inc
lds
push
pop
adc
imul
in
decl
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
mov
in
push
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
inc
mov
insb
test
aas
repz
sbb
lock
in
jmp
out
je
ret
mov
clc
push
std
mov
add
test
lds
aad
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shlb
std
insl
and
mov
or
dec
ss
bound
or
repnz
clc
dec
cmc
mov
jl
call
mov
lret
pop
in
cmp
int
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
inc
mov
sbb
xlat
inc
aas
mov
jg
add
clc
out
cmp
or
addr16
sbb
cld
daa
jp
inc
clc
in
idiv
adc
cltd
or
mov
ret
nop
cmp
icebp
scas
cli
icebp
das
incb
lock
pop
pop
div
cld
idivl
jmp
add
fs
loope
or
jmp
sti
pop
lds
out
xchg
add
out
or
mov
loope
mov
cmpsl
popf
or
ret
das
sti
mov
fbstp
push
daa
outsl
das
aaa
fwait
pop
aam
add
cmpsb
cmp
call
fiadds
dec
push
adc
mov
dec
adc
call
loopne
cltd
add
sbb
mov
inc
add
rcrl
mov
aaa
std
fistpll
dec
inc
sbb
xchg
rorl
sahf
mov
aas
icebp
ret
ror
sbb
enter
inc
adc
adc
sub
mov
pop
clc
loope
ficompl
in
loope
mov
lahf
jp
dec
add
xlat
mov
sub
rcrl
and
clc
mov
iret
fdivrl
xchg
lcall
decb
xchg
mov
xchg
adc
into
sarl
pop
out
jg
jno
ret
nop
mov
lock
sbb
inc
call
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
lods
outsl
mov
sbb
mov
daa
jmp
faddl
lds
adc
mov
dec
push
popa
pop
add
pop
stc
push
mov
fstpt
mov
enter
jg
pop
add
fsts
dec
add
add
int3
movsl
data16
sti
push
sti
pop
inc
add
or
aaa
enter
bsf
popf
test
jmp
orb
andb
cmc
add
adc
mov
mov
jp
inc
jp
notl
fildl
roll
push
mov
push
mov
mov
mov
out
jo
jl
fbstp
lods
in
mov
jo
jle
cmp
lcall
jmp
jae
mov
sub
dec
xchg
adc
mov
icebp
lret
xchg
xchg
in
decl
popa
mov
scas
sbb
inc
call
jecxz
ss
hlt
cmpsb
pushf
jb
call
aaa
jle
jge
xchg
mov
cmp
aad
add
insl
pop
push
loopne
push
stc
sahf
inc
mov
pushl
ret
add
or
add
ret
or
pop
in
roll
jl
iret
imul
pop
mov
outsl
cmp
fsubr
stos
jp
call
clc
hlt
mov
push
stos
or
daa
xor
call
jmp
in
test
call
dec
and
outsl
pop
lahf
aad
ret
pop
repnz
add
cmpb
in
mov
xchg
pop
mull
cmp
lcall
jecxz
movl
insb
push
je
mov
out
aam
aaa
jecxz
call
repz
adc
sbb
fcomps
ss
les
int3
mov
out
sti
sbb
notb
out
or
or
stc
in
xchg
shlb
insb
out
iret
xor
dec
stc
ja
push
lcall
mov
mov
daa
jae
inc
add
lods
or
jmp
icebp
push
jle
sbb
gs
mov
loopne
leave
popa
push
popf
int
roll
mov
lcall
out
adc
sti
add
cmp
mov
dec
mov
aas
test
out
mov
jmp
dec
inc
mov
jp
push
dec
sbb
fistpl
fmull
sub
pop
dec
outsl
divb
decl
in
fwait
add
add
ret
addr16
mov
mov
in
jo
in
incl
push
mov
jns
cli
adc
test
xchg
lea
jns
cmp
popa
hlt
std
sub
pop
dec
mov
jns
add
dec
pop
int
shlb
xchg
scas
lock
loopne
add
js
xchg
lcall
test
lret
loopne
pop
push
test
push
mov
push
xchg
xchg
into
fcoms
pop
inc
clc
mov
lds
popa
xchg
and
into
mov
add
repz
push
bound
sub
imul
lcall
aaa
aaa
push
in
movsl
aam
mov
lcall
mov
push
popa
xchg
mov
mov
int3
jg
ljmp
cli
and
jmp
jecxz
mov
mov
xor
xor
jl
pop
jl
jmp
not
jns
push
cmp
js
test
imul
stos
popa
add
cli
dec
lahf
and
cmp
add
or
mov
cmp
ss
faddl
push
aaa
loope
in
push
lods
push
rcr
pushf
add
pop
cmp
sbb
das
xchg
lock
bound
aas
mov
incl
test
imul
popa
out
pop
xchg
and
cld
pop
das
incl
stos
not
lods
lret
leave
out
push
mov
jnp
lret
add
dec
sub
repnz
mov
popf
mov
test
jno
pop
outsb
pushf
jg
fisttpl
push
insl
shl
enter
adc
xlat
jecxz
rclb
pop
je
out
js
test
decl
xchg
addb
inc
mov
imul
and
mov
call
ficomps
jecxz
xor
inc
fdivrp
cmp
dec
sbb
push
jmp
add
xor
push
cmp
cmp
lret
fldenv
sbb
dec
fwait
xor
push
jecxz
decl
or
push
lret
sahf
repnz
sahf
xor
cld
outsb
push
lahf
inc
xchg
mov
insl
sbb
lock
sbb
xor
inc
mov
adc
or
jmp
jecxz
inc
cmpsb
sahf
inc
or
mov
xor
jle
mov
cmpsl
test
pop
cld
test
bound
or
rcl
dec
loope
shlb
mov
cmpsb
and
push
inc
xor
jmp
movsb
lcall
push
or
pop
repnz
xlat
sbb
ljmp
jg
test
stos
insb
sub
es
roll
jnp
sbb
cltd
pop
std
call
shl
push
push
dec
jbe
sub
dec
adcl
ljmp
fcomip
or
jp
fcoml
xchg
pop
ret
insl
in
jno
insl
cmc
test
sahf
scas
mov
ljmp
xchg
jnp
cs
ret
xor
fmuls
pop
adc
outsb
push
lcall
mov
fimull
cmp
mov
hlt
xchg
inc
rolb
test
clc
jmp
add
arpl
mov
xchg
mov
out
fsubrl
sbb
sub
inc
insb
inc
or
inc
add
mov
adc
test
sbb
or
push
ret
pop
push
cs
decl
shr
mov
pop
fisubs
xor
test
add
dec
and
mov
pop
dec
add
sbb
inc
stos
imul
decl
packuswb
test
fwait
mov
sahf
xchg
add
hlt
sti
fnsave
ficomps
mov
nop
xchg
fadd
push
aaa
rolb
js
or
sarb
inc
test
incl
push
cld
lcall
scas
jg
insl
dec
dec
jnp
std
clc
lcall
das
add
jb
decl
aaa
dec
push
fmuls
cmpsb
jmp
das
adc
xchg
sub
in
cmp
pop
jmp
mov
push
xor
xchg
aas
push
cmp
into
sbb
les
mov
add
call
sbb
pushl
iret
or
imul
aad
adc
sub
and
pop
cmp
sub
call
pop
add
add
and
dec
out
lcall
repz
push
pushl
fdivl
sbb
push
add
stc
out
pop
dec
cli
and
fistpll
mov
fs
shrb
shll
and
mov
push
mov
das
xchg
cmp
ret
clc
xor
mov
pop
lods
add
scas
aaa
inc
adc
out
dec
cmpsb
leave
fisubl
jecxz
inc
adc
orl
in
mov
push
jecxz
mov
cmp
cmpsb
clc
inc
aad
and
dec
js
xchg
add
int3
incl
enter
loopne
popf
shlb
dec
mov
stos
push
lcall
std
into
sbb
repnz
aas
cmp
sub
sbb
xchg
out
mov
mov
incl
test
jb
jecxz
imul
pusha
cmc
xor
cmpb
pop
mov
mov
aad
jp
cmp
dec
rcrb
leave
xor
bound
jg
xchg
adc
daa
popf
xor
mov
xchg
jge
aam
lret
mov
jae
jae
decl
mov
jno
sahf
mov
pop
loope
adc
mov
xchg
add
cld
fnsave
pop
jb
xchg
sbb
pop
fidivrl
xchg
xchg
fstpt
data16
or
add
mov
xchg
mov
jae
jae
add
push
fdivs
addr16
into
dec
xor
inc
adc
lcall
pop
les
popa
and
adc
xchg
sub
mov
in
insb
test
jnp
xchg
sub
sub
sbb
sbb
sbb
scas
scas
stc
jecxz
sbb
in
das
add
sbbb
mov
mov
push
insb
xor
fbld
sbb
and
jno
cmc
jge
lcall
insb
lock
ljmp
sti
popf
das
jno
lcall
mov
movsb
lahf
sub
jns
mov
xchg
pop
call
inc
addr16
inc
sbb
mov
in
cmp
inc
mov
jnp
xchg
mov
inc
mov
mov
mov
fscale
icebp
cmp
jg
cmpsl
icebp
xchg
sub
sub
mull
adc
xor
lods
inc
push
push
pop
scas
cmovns
adc
lods
fistps
inc
js
test
cmc
aad
mov
push
insb
inc
jg
ljmp
cmp
and
jae
iret
imul
loopne
pop
decb
bound
jge
nop
out
gs
inc
cmp
jns
xchg
and
inc
xchg
aam
imul
call
pop
stc
lahf
and
fwait
push
inc
aam
test
lods
addr16
jnp
lods
arpl
pushf
leave
sarl
mov
push
mov
sbb
dec
mov
xlat
clc
testl
scas
jp
dec
idivl
out
pop
test
jbe
pushf
add
mov
adc
mov
cld
jmp
shlb
lods
aad
lods
inc
dec
mov
dec
gs
jg
dec
dec
or
push
push
icebp
das
pop
cmpl
lcall
out
idivl
repz
in
jecxz
ret
repz
repz
jg
mov
js
mov
jnp
int3
les
scas
sbb
in
inc
pop
cs
add
pop
pop
mov
xchg
sti
push
out
sti
ds
es
in
cmp
or
pusha
push
fsubs
mov
call
mov
loopne
xchg
push
mulb
xor
push
sbb
stos
call
fimull
adc
pop
inc
shlb
adc
jl
test
jl
inc
push
jbe,pt
lds
sarl
loopne
fstps
xchg
lock
jecxz
mov
or
int
lock
mov
jo
out
rorl
or
sub
in
mov
xor
xor
dec
adc
sbb
fwait
mov
rol
jo
insb
repz
icebp
dec
insb
mov
sbbb
add
sbb
fbstp
sbb
lea
xor
adc
mov
xor
pop
sbb
xchg
xchg
push
adc
test
xor
out
mov
and
mull
outsb
icebp
call
aaa
mov
push
dec
cld
jns,pn
sbb
mov
dec
test
ffreep
mov
jp
adc
ret
add
sbb
mov
push
jecxz
dec
lcall
mov
mov
insl
add
cmp
mov
cmp
iret
jmp
sub
adc
jmp
xchg
cmp
cltd
icebp
pop
fwait
xorb
fistpll
call
and
sbbl
insl
int3
jle
add
loop
les
cmp
adc
or
dec
sub
adc
dec
fdivrs
xchg
mov
xor
out
je
jb,pt
inc
add
loope
mov
ret
xor
sub
lock
inc
int
lahf
xchg
add
decl
ljmp
push
andb
xor
fmuls
incb
push
xor
lcall
dec
push
and
xchg
ja
mov
frstor
sbb
push
pop
mov
jg
pop
mov
movsl
sub
add
sub
sbb
pop
jg
aad
or
nop
sub
cmp
mov
sub
jne
rolb
mov
xor
lds
sub
pop
xor
xor
clc
mov
pop
add
mov
enter
ja
clc
cmp
sar
movsl
call
mov
rcr
lcall
sbb
aad
jl
cmpsb
aaa
test
adcl
jg
ljmp
out
clc
jmp
cmp
inc
rcr
dec
jno
das
clc
fcomip
jg
inc
add
sbb
out
pop
jl
or
pushl
mov
jge
jge
adc
add
shlb
mov
subl
xlat
decl
cwtl
int3
sti
outsb
sbb
add
or
inc
mov
xor
mov
jg
into
stc
pop
xor
mulb
cltd
xlat
and
fwait
xchg
inc
dec
mov
add
lcall
add
popf
imul
push
cmpsb
into
imul
incl
shll
mov
ficompl
pop
insb
adc
test
sarb
cld
icebp
or
mov
das
dec
shlb
and
test
jbe
imul
insb
push
sub
fmull
xchg
add
or
nop
fcomip
ljmp
stos
lods
and
jecxz
adc
fs
or
cli
jb
in
jns
and
pop
repnz
fxch
test
add
imul
add
adc
mov
pop
into
xlat
ljmp
sub
addl
fisttpll
mov
decl
lcall
pusha
icebp
mov
jo
ret
sbb
mov
incl
add
repz
lret
pop
cmp
jg
aaa
mov
out
mov
xchg
jp
shll
dec
loope
shll
pop
mov
roll
sbb
adc
decl
jnp
xchg
andb
mov
and
jnp
add
ljmp
fisubs
or
xchg
test
dec
xchg
or
jp
dec
jmp
movsl
iret
enter
inc
jne
xlat
mov
and
or
mov
jo
dec
mov
enter
das
movsl
ret
outsl
jg
dec
lods
inc
insl
movsb
into
scas
xchg
and
pop
jmp
or
and
idivl
es
dec
add
aam
ss
inc
out
and
shll
gs
mov
inc
test
stc
loope
test
rcrb
dec
or
insb
les
mov
iret
aas
push
outsb
jle
dec
push
es
data16
inc
jp
sbb
repnz
ds
incl
mov
xor
adc
mov
jle
cmp
jg
stos
jbe
push
call
mov
xchg
sbb
xor
or
enter
push
pop
enter
xchg
sar
jmp
dec
icebp
test
outsl
jnp
xchg
fcomps
out
xor
mov
sbb
out
sbb
fwait
push
ficomps
lods
push
ror
jle
and
pop
mov
or
pushl
add
sbb
jle
dec
fcomps
ds
jne
cwtl
sti
dec
aas
insl
dec
test
call
or
sbb
cmp
mov
gs
out
mov
scas
not
out
jmp
fnstsw
push
and
pop
dec
xchg
in
mov
test
cmp
xchg
insb
push
xchg
decl
loope
das
mov
and
aad
and
cltd
cmp
mov
jns
sub
push
mov
daa
inc
pop
pop
jg
mov
cmp
sub
mov
and
fldenv
sbb
sub
aam
or
or
and
and
mov
push
xchg
test
dec
xchg
cmp
cld
pushl
pop
int3
shl
aam
jnp
adc
gs
xchg
mov
jne
out
mov
ja
push
je
fcomip
adc
pop
imul
es
adc
xchg
push
aas
jg
cltd
shlb
mov
adc
cmp
les
inc
xchg
xchg
mov
jmp
lret
xchg
or
add
loopne
lcall
dec
xor
sub
lock
in
xchg
jmp
sbb
push
ds
mov
sub
cli
xchg
sbb
cs
ja
adc
mov
xchg
inc
mov
mov
and
std
dec
xor
inc
jp
pop
jecxz
pop
icebp
call
inc
xchg
out
out
das
mov
and
fsubrl
and
aaa
sarb
push
cld
decl
rclb
fidivl
xchg
movb
cmpsl
dec
mov
inc
icebp
or
incl
std
dec
pop
jecxz
in
push
das
test
sarl
and
ret
cmp
dec
dec
call
clc
icebp
cmp
push
out
xchg
repz
out
jo
inc
decl
imul
enter
dec
inc
movsb
mov
inc
sbb
decl
fidivrs
dec
dec
mov
es
scas
add
adc
and
xor
ljmp
inc
cmpsb
jnp
aaa
mov
pop
mov
xchg
sbb
lea
jle
imul
sbb
sets
out
out
es
sbb
jbe
mov
stos
pop
dec
es
push
ja
call
inc
insb
adc
mov
jmp
popa
movsl
mov
rolb
xor
cmp
je
lcall
jo
xchg
jl
adcb
inc
and
aad
fwait
mov
fidivrs
lea
in
movsb
inc
xor
lods
test
lcall
decl
test
repnz
sbb
fiaddl
sbb
or
fsub
add
clc
pushl
lds
dec
mov
and
mov
call
ljmp
outsb
lds
in
mov
out
bound
dec
cmpsb
popf
addl
test
stos
fildl
ja
lcall
roll
and
mov
stc
insb
jge
lahf
lcall
inc
andb
push
ret
imul
cmc
add
jae
mov
fnstcw
sbb
je
jp
pop
add
sbb
int3
jl
in
insb
out
and
test
xor
inc
mov
and
subb
repz
mov
sub
jae
sbb
pusha
lods
adc
push
aam
ja
xchg
inc
test
decl
jno
xor
int3
fwait
adc
adc
sub
in
decl
lods
mov
adc
mov
jecxz
data16
shrl
int3
shll
push
mov
push
cmp
lods
shll
shr
xor
stos
dec
sbb
stc
sbb
inc
aaa
mov
outsl
mov
mov
loop
aad
jmp
pop
ror
xchg
std
scas
xchg
lods
xchg
push
dec
dec
insl
loopne
movsb
ljmp
push
scas
xchg
dec
jp
mov
aaa
xchg
decl
add
xor
cmp
jbe
jmp
pop
lcall
jmp
push
popf
ret
or
sbb
lea
mov
jb
sbb
mov
lods
repnz
and
iret
cmpsl
gs
jmp
sub
popf
cmp
in
loopne
inc
inc
jae
lret
arpl
lds
xchg
cs
jge
pop
pop
and
mov
repz
or
mov
pop
push
mov
std
or
cld
out
insb
outsl
dec
jb
and
push
mov
out
mov
clc
dec
mov
mov
lock
jmp
mov
adc
push
mov
push
mov
gs
mov
jae
stos
sbb
outsl
out
lea
clc
mov
lds
decl
fstpl
loop
ja
andl
and
lods
icebp
adc
lea
decl
lock
lret
adc
jae
push
xchg
sbb
mov
or
cli
mov
out
xor
pop
js
mull
cmpsb
mov
jne
lahf
mov
scas
push
test
scas
cmp
loopne
dec
loopne
cmp
adc
lcall
faddl
inc
cs
mov
outsl
fisttps
mov
and
fbstp
call
outsb
xor
loopne
out
movsl
dec
adc
adc
in
push
outsb
jbe
call
das
fsubl
inc
loopne
cmpsl
fstl
loope
push
ljmp
data16
fsubl
jmp
push
dec
xor
into
sub
arpl
call
lret
push
enter
in
mov
inc
out
inc
out
fmull
pop
cli
hlt
ss
push
xchg
lods
mov
xchg
mov
gs
jg
push
adc
mov
xor
test
lods
aad
in
das
xor
add
in
add
cmp
adc
mov
lock
out
xor
xchg
add
lret
cwtl
jmp
xchg
jge
mov
fsubs
rclb
popf
scas
popf
dec
bound
xchg
gs
jo
sbb
aaa
hlt
or
das
das
pop
jno
cmp
push
insb
loopne
pop
sub
pop
cs
push
imul
outsl
in
ljmp
cmc
fistps
xchg
push
stos
aas
inc
add
or
fistl
lcall
movsl
out
popa
add
mov
adcb
mov
fdivrs
adc
test
add
insl
fcomip
lcall
and
lahf
pop
push
push
jno
out
and
icebp
push
decl
push
bound
in
xchg
outsb
cmpsb
scas
and
xor
sbb
fdivrp
jg
aas
outsl
or
and
shl
sbbl
or
jle
test
ljmp
int
cmp
jbe
mov
addb
pop
add
stc
ljmp
push
lods
or
fcomip
sbb
ss
rolb
xchg
or
mov
jge
pushl
pop
push
sahf
adc
mov
pop
mov
pushl
xchg
adc
and
loop
sub
sub
push
and
fmull
dec
test
push
xchg
add
dec
mov
and
xlat
das
stc
and
mov
jns
sub
pop
rol
mov
decl
inc
pop
hlt
sbb
lea
aas
movsb
cmp
adc
leave
mov
pushl
movsl
mov
inc
aas
add
push
xchg
fdivl
lcall
add
cmp
jmp
adc
mov
lea
call
hlt
enter
pop
lock
clc
pushf
pop
subb
sar
xchg
push
andb
and
incl
add
pop
pop
je
xlat
jecxz
sti
jno
add
repnz
stos
mov
mov
mov
js
and
push
push
es
push
jge
cmpsb
pushl
xlat
xchg
leave
add
push
dec
lahf
ret
push
ljmp
roll
jmp
jbe
mov
and
icebp
mov
ljmp
pop
jp
xor
rol
pusha
int3
cmp
mov
es
cmp
ljmp
push
and
pop
enter
sbb
roll
sbb
or
das
mov
iret
jno
ljmp
inc
push
sbb
xchg
push
lock
mov
fidivl
pushl
or
sahf
test
mov
leave
dec
scas
cs
jns
dec
mov
lcall
inc
push
sbb
dec
pop
test
inc
arpl
data16
idivb
ljmp
dec
cmpsl
shld
test
aam
sub
addb
jno
inc
inc
lea
pop
out
lcall
enter
pop
jae
fucomi
pop
xchg
lcall
cmpsb
stos
ljmp
icebp
inc
or
adc
rcll
cmp
pop
sar
shll
xor
and
into
insl
jp
lcall
mov
mov
inc
ret
or
fsqrt
rolb
bound
add
notb
out
push
loopne
jmp
out
cltd
shrd
push
pop
out
sbb
inc
out
test
sbb
mov
pop
sbb
mov
jecxz
pop
adc
inc
mov
mov
scas
add
or
add
mov
fimull
lcall
cli
dec
neg
inc
outsb
outsb
xchg
rorb
sbb
shl
es
cld
and
bound
push
jnp
sar
decl
adc
add
push
or
inc
push
scas
out
inc
repz
adc
jno
out
pop
loopne
lods
or
cmp
imul
pop
and
cld
mov
jmp
inc
in
mov
and
hlt
insl
push
test
movsl
add
test
adc
jb
aas
or
mov
gs
ljmp
xchg
pop
pop
mov
inc
ljmp
pop
xchg
and
incl
addr16
int
jecxz
ljmp
or
imul
mov
push
and
jg
mov
rorl
fistpl
lret
lods
iret
inc
jmp
pop
movsb
ljmp
inc
xchg
push
mov
push
sub
and
adc
mov
rorb
push
jg
add
push
mov
andl
out
std
inc
outsb
ds
mov
jecxz
dec
add
fildll
push
outsb
mov
inc
lods
adc
enter
faddl
xchg
pop
xchg
xchg
cmc
scas
inc
jns
ds
test
pop
xchg
add
dec
mov
sbbl
cld
sbb
nop
xchg
and
fwait
add
ret
das
push
sti
mov
incl
hlt
jnp
dec
push
mov
mov
add
outsb
and
lcall
lret
icebp
sahf
and
sbbl
add
mov
lds
pusha
ds
idiv
mov
insl
imul
fwait
scas
jle
clc
mov
mov
xor
sub
incl
mov
pop
inc
cli
les
mov
fld
lret
dec
not
lock
fwait
pushl
les
xchg
add
push
mov
jne
mov
lods
arpl
bnd
std
xchg
push
pop
lcall
mov
or
je
add
jle
call
jb
cmp
xor
outsb
or
sbb
push
sub
iret
outsb
ja
push
push
ds
jnp
lcall
sbb
push
vpshaq
xchg
enter
out
pop
lock
in
subl
es
int
pushf
push
and
ret
rcl
inc
xchg
mov
rcll
out
inc
lcall
decl
cs
xchg
syscall
std
ret
insl
and
jae
cltd
ss
dec
scas
mov
lock
out
cwtl
shl
icebp
ret
lret
sbb
jge
out
test
cli
mov
negl
loopne
cmc
mov
ret
mov
cli
ret
jns
loope
xor
jmp
mov
insl
test
jl
cld
sub
test
and
pop
arpl
jo
inc
outsl
ja
pushl
in
scas
shrl
movsl
xor
jne
or
xor
jns
ljmp
out
mov
xchg
sub
int
clc
out
leave
aaa
jns
das
add
jg
and
sub
fcomip
inc
js
pop
out
test
outsl
clc
decl
arpl
push
mov
mov
and
or
cmc
stc
xchg
lret
mov
pop
imul
adc
push
ffreep
xor
iret
movsl
stc
in
jecxz
sbb
daa
pusha
sti
mov
xchg
mov
imul
add
mov
std
repz
xlat
jns
paddusw
stos
xorb
hlt
lea
jecxz
inc
mov
jmp
mov
jmp
adc
les
pop
ror
mov
push
sub
pop
imull
ljmp
pop
fiadds
xor
adc
jb
pop
or
cmpsb
jmp
int
pushl
sub
mov
sahf
stc
xor
nop
in
add
push
adc
jge
lcall
push
into
cwtl
adc
pause
cli
lea
add
pop
repz
jmp
dec
pusha
clc
es
adc
mov
stc
fwait
or
pushf
mov
pop
loope
pop
jnp
push
outsl
cli
ljmp
xchg
ds
jecxz
clc
gs
mov
push
push
dec
ret
push
push
adc
mov
push
aad
scas
pusha
loop
sbb
xchg
or
inc
or
call
cmpsl
xor
dec
test
test
lret
adc
or
int3
cltd
mov
jnp
jmp
mov
in
pop
push
lds
cmpl
mov
pop
push
mov
jae
or
cmpsb
mov
in
mov
mov
push
mov
dec
jns
sub
pushl
xor
lods
xchg
lock
xor
pushf
push
inc
stos
fiaddl
loopne
inc
jb
adc
outsb
cmp
and
cwtl
inc
fcompl
call
scas
pop
xor
dec
mov
xor
mov
sbb
mov
mov
inc
cmp
add
ljmp
xchg
jae
sahf
in
daa
nop
outsb
jbe
xchg
mov
jmp
jmp
ret
pop
lcall
push
mov
jmp
push
xor
inc
dec
loopne
jo
cmp
inc
sub
test
sahf
mov
xor
jmp
movsl
std
mov
ficoms
imul
mov
lcall
or
mov
das
cld
push
add
jge
inc
push
nop
sub
push
ljmp
mov
jne
adcb
ja
into
push
xor
int
and
adc
fnsave
push
fisttpll
movsl
testb
dec
lods
jle
sahf
xor
leave
mov
lods
rcr
xor
jg
mov
and
test
in
pushf
or
lods
in
or
incl
sbb
orl
jne
push
rclb
mov
decl
xchg
pop
neg
mov
jbe
dec
fstpl
int
sub
or
ficoml
pop
movsb
mov
out
adc
adc
dec
mov
lret
xchg
add
ljmp
jae
arpl
mov
push
xchg
mov
stos
add
mov
bound
dec
sbb
jmp
adcl
fisubl
pop
arpl
pusha
or
sti
pop
mov
and
ljmp
addb
addr16
into
cmpsl
mov
nop
clc
mov
pop
jmp
jmp
movsl
jecxz
jno
and
dec
aaa
test
ss
fbld
mulb
call
dec
arpl
outsb
xchg
jnp
insl
push
dec
xchg
in
ds
xchg
cmp
loopne
pop
dec
in
mov
xor
mov
xchg
jg
or
decl
ds
cmpsb
js
fidivl
cmp
mov
fidivrs
inc
jg
mov
pop
inc
iret
cmp
cmpb
je
cwtl
cmpsl
test
js
mov
mov
xchg
mov
es
xchg
out
pop
roll
in
cmp
insb
shlb
subl
sbb
out
imul
jne
int3
aam
fwait
push
lahf
pop
cmc
push
push
ss
push
out
lahf
incl
sub
icebp
pop
xchg
inc
xchg
popa
std
and
add
jp
push
pop
notl
cld
call
jmp
sbb
ljmp
stc
pushfw
fdivs
hlt
flds
ja
in
aaa
fs
js
mov
cli
loope
in
mov
push
xchg
ret
mov
call
cmp
cmp
scas
testl
popf
pop
mov
sbb
or
jns
jb
cmpsl
jmp
out
sub
pop
cltd
xor
loope
pop
sub
cmc
inc
cmp
jns
sub
mov
incl
inc
sub
sbbl
push
sahf
ret
incl
fdivr
xchg
push
push
push
jl
add
ret
loop
push
sbb
mov
jo
decl
inc
andb
push
jbe
jne
jb
or
xlat
subb
mov
out
in
xchg
jmp
sahf
push
mov
add
dec
adc
sub
dec
inc
arpl
xorb
decl
andb
jp
fisttpl
mov
sub
sarb
outsl
cmp
das
mov
add
cmpsb
sbb
cmpl
jmp
cmp
test
scas
loope
inc
in
pop
add
adc
mov
mov
cwtl
jns
int3
jg
ret
movsb
popf
and
imul
rclb
cmpsl
bswap
xchg
stos
push
lods
fs
or
lcall
and
lea
pop
repz
je
add
mov
rcr
shll
mov
inc
jae
xchg
and
lcall
jno
and
incl
ljmp
xchg
push
push
dec
sub
jecxz
cmpsl
add
lcall
jg
cwtl
in
shrb
lcall
inc
jb
fisubrs
shlb
push
data16
lcall
lds
fbld
push
push
dec
sub
push
aas
cwtl
mov
inc
sub
xor
add
xor
fadds
ret
fwait
sub
xor
ljmp
xchg
sar
int3
or
rorb
cmc
adc
cmpb
test
test
xchg
dec
dec
pop
cmc
call
mov
fcmovne
stos
xchg
or
int3
aad
xchg
sbb
pop
push
repz
div
imul
fisubrs
gs
popf
mov
push
mov
add
loopne
sub
imul
shll
jbe
in
sub
jb
fcomip
call
movsb
je
push
or
lret
cmp
sbb
js
jno
outsb
int3
adc
sti
push
test
leave
test
incl
adc
mov
lea
sub
fimuls
pushf
push
arpl
sbb
mov
test
pop
andl
push
sbb
ljmp
mov
sbb
lods
push
je
ret
sar
decl
out
jmp
mov
push
addr16
fadd
out
xor
jbe
in
incl
imul
adc
testl
ror
push
js
nop
cmp
or
fnstcw
mov
stc
lock
addr16
repz
test
lcall
xchg
adc
jbe
xor
dec
popf
add
adcl
xchg
cmc
pushl
mov
xchg
arpl
mov
dec
cld
clc
fs
cli
idiv
js
es
add
rcr
dec
ss
ja
ret
or
mov
push
pop
push
test
call
sub
shl
push
pop
add
ljmp
jne
and
and
cmp
mov
pusha
outsb
in
sub
jge
add
vminss
mov
mov
adc
fistl
push
sub
ja
mov
or
jns
jne
out
dec
das
lds
pusha
xchg
pop
es
jo
pushl
negb
xchg
jo
xor
and
pop
cmp
mov
pop
movups
out
push
ret
ja
pop
les
pop
inc
push
test
push
mov
outsl
mov
and
mov
incl
inc
jno
dec
sbb
add
push
imul
sbb
adc
adc
stos
idiv
xchg
xor
mov
fisubrl
mov
mov
das
jbe
jmp
push
fistps
dec
sbb
cmp
out
dec
xchg
or
outsl
cli
mov
std
outsl
pop
lods
jp
lods
movsl
fstps
push
add
aas
cmp
std
iret
rcll
nop
fistpll
in
fisubl
xchg
mov
je
inc
aaa
mov
js
shll
in
ret
cld
push
push
ret
sub
icebp
decl
sub
fcomip
js
in
xchg
insb
xor
mov
mov
jmp
outsb
movsl
xor
leave
xor
mov
fwait
sarb
add
fldcw
sbb
jbe
xor
cmc
ljmp
sbb
lds
test
adc
iret
negb
scas
ja
call
lret
or
test
addr16
xchg
ja
and
repz
arpl
lods
mov
xor
mov
dec
pop
les
cwtl
pushf
jne
pop
mov
imul
call
mov
jecxz
sub
js
mov
out
clc
lcall
xchg
dec
xor
pop
mov
in
mov
ret
cld
ljmp
cmc
pop
std
incl
out
push
mov
add
jle
push
icebp
cmp
mov
icebp
lcall
xorl
mov
cli
test
mov
je
mov
fisttpll
jl
sbb
cmp
and
inc
inc
push
shl
clc
or
mov
lret
cmp
flds
mov
popf
push
fmul
mov
mov
outsl
fsubl
fcomip
mov
ljmp
int
lcall
xor
pushf
mov
lcall
loope
inc
out
les
add
and
jl
ds
push
stc
repnz
lcall
add
mov
insb
cld
testl
cmp
aas
jg
lcall
iret
jmp
xlat
pop
sbb
lds
dec
and
es
xlat
cmp
ljmp
rcl
mov
outsb
mov
lods
xchg
xchg
sub
mov
imul
incl
stos
push
inc
xchg
xor
das
cltd
xchg
into
pop
movsl
sub
pop
dec
mov
insl
xor
lcall
pop
hlt
sub
cmpsl
xchg
hlt
cwtl
shlb
stos
cmp
in
xor
jne
mov
cli
jge
sub
ljmp
push
cmp
call
cmp
cmp
mov
icebp
iret
aas
dec
jmp
out
hlt
jmp
sbb
test
sbb
mov
pop
sbb
dec
lcall
jmp
mov
and
lock
aam
jmp
push
sarb
xchg
ljmp
sbb
aaa
push
rcrb
fdiv
push
popa
sbb
loopne
pushl
and
cmpsl
inc
fwait
cmp
mov
outsb
out
push
lods
std
sti
lock
mov
in
outsb
mov
jl
enter
jg
ljmp
jb
fildll
loopne
stos
cmc
fucomi
adc
ja
lret
orb
std
sub
call
jp
jle
rcl
out
xor
cmp
add
push
mov
call
pop
pop
pop
xor
jp
sahf
xchg
mov
enter
jmp
call
push
sub
cmpsl
and
ja
pop
jge
lahf
cmpsl
pop
pop
cltd
call
cld
jg
fisttps
and
scas
jb
leave
mov
dec
cmp
aaa
cld
out
push
daa
cmp
sbb
mov
xor
inc
add
jle
push
sub
mov
dec
ss
aad
sub
and
mov
jb
mov
xor
aam
lock
sbb
mov
int
xlat
adc
inc
add
and
hlt
roll
les
mov
and
scas
cmc
mov
and
push
cmp
decl
movsl
pop
aam
mov
int3
cs
jge
test
sbb
add
jg
ljmp
xchg
or
lahf
sbb
mov
pop
xor
arpl
sub
sbb
jmp
cmp
lods
movl
loopne
loop
xchg
xchg
testl
lcall
mov
and
pop
mov
fdivp
mov
add
lock
insl
ja
in
mov
sub
mov
andb
pop
cli
leave
jno
aam
lret
add
stos
jl
call
xor
out
xchg
or
imul
pop
lea
or
outsb
pushf
jmp
fs
push
mov
sub
out
push
pop
push
scas
aas
add
mov
inc
jecxz
rcrl
ret
mov
pop
xchg
mov
lods
jne
jecxz
or
inc
jne
or
sub
test
adc
push
scas
sahf
int3
fcomip
mov
fisubs
lods
inc
cwtl
cmovp
repz
es
xor
sub
adc
inc
orl
call
sub
into
lods
lcall
inc
push
adc
out
nop
out
xchg
mov
pop
mov
cmpsl
push
adc
cmc
out
sbb
xchg
jge
add
jg
paddsb
pop
cmpsl
sti
cli
push
adc
jmp
in
and
sti
xchg
js
xor
xor
into
sar
lcall
lahf
and
arpl
add
insl
mov
lds
jg
bound
cmp
adc
mov
stc
scas
pop
mov
cwtl
fstps
decl
ljmp
ljmp
xchg
jbe
sub
arpl
call
pop
pushf
add
sub
cltd
sbb
and
iret
ret
push
insb
or
jmp
aam
pop
test
lods
nop
ror
arpl
rolb
xchg
fldt
dec
cld
std
adc
mov
sbb
jle
shll
xor
sbb
mov
sub
rolb
mov
cmpsl
dec
dec
out
leave
adc
pop
xchg
iret
push
push
dec
pushl
jmp
or
xchg
adcb
pop
inc
push
imul
into
std
mov
mov
push
mov
out
inc
test
push
ja
out
ret
pop
je,pt
enter
or
call
cmp
xor
or
enter
jmp
inc
fidivl
dec
loope
lcall
mov
push
fcmovu
push
test
cmpsb
jns
or
pop
call
test
mov
das
test
push
daa
das
ss
ds
std
push
fwait
or
and
cmp
pushl
inc
inc
pop
ret
push
jl
ret
outsl
xor
xor
imul
pushl
adc
dec
xor
inc
jno
jmp
rcll
xor
adc
xchg
pop
shlb
inc
pop
push
loope
incl
loopne
jge
enter
inc
jnp
jb
mov
sub
incl
xor
cmc
inc
mov
mov
xor
pushf
incl
into
and
loope
imul
jmp
call
or
add
cli
pushl
xchg
stos
leave
add
dec
xchg
das
cli
icebp
push
mov
movl
jle
incl
adc
lea
aaa
sub
fistpl
loope
aam
dec
fisttpll
jle
sub
cmpsl
cltd
xchg
das
cmp
test
dec
incb
xchg
mov
xchg
dec
lret
loope
sub
cmp
repz
ss
jbe
pop
pop
cmp
and
hlt
xor
cs
adc
pop
ljmp
movsb
mov
sub
fninit
mov
or
cwtl
lret
add
jge
jg
incl
movsb
out
mov
ss
mov
filds
dec
xlat
fwait
dec
add
daa
xchg
mov
cmp
adc
adc
dec
mov
and
test
jg
outsl
scas
fdiv
ss
pop
ret
incl
adc
aam
popa
fldt
call
lods
mov
ss
into
dec
idivl
scas
clc
xchg
sbb
aad
into
sti
test
pop
mov
mov
out
cwtl
iret
xchg
ljmp
jo
out
call
lret
repz
xlat
sub
cmpb
mov
xchg
mov
movsl
pop
sbb
mov
jbe
push
cmp
add
ret
ljmp
bound
pop
cmp
inc
mov
fnstsw
adc
inc
mov
sub
push
jecxz
sub
addb
out
pop
push
shll
ljmp
mov
lret
sub
xchg
pusha
dec
testl
xchg
cmc
jo
inc
stc
push
out
cli
jecxz
mov
and
mov
das
fbstp
mov
arpl
decl
xchg
ret
push
mov
and
icebp
stc
aam
cmc
dec
inc
icebp
and
xor
mov
pushf
incb
push
pop
mov
jmp
mov
in
or
scas
subl
push
mov
pop
or
jmp
and
pop
dec
fsubl
xchg
lret
mov
test
pop
test
incl
jmp
sbb
dec
inc
lahf
inc
aad
ljmp
cwtl
cld
xchg
je
add
rclb
hlt
lahf
out
divl
into
mov
dec
aad
sti
adc
jp
sar
jg
call
add
call
pushl
test
sub
sarl
xchg
les
decl
nop
cld
xor
and
aam
mulb
xchg
ds
pop
dec
mov
hlt
aad
lcall
es
cli
xor
out
insb
and
xor
sub
fdivr
jg
sub
xor
add
dec
add
push
and
loop
cmp
test
inc
out
test
add
pushf
and
cli
jmp
fimuls
xor
loope
addr16
jo
and
jmp
xchg
pushf
xchg
pushf
cmpsb
cltd
mov
jecxz
repnz
inc
cld
push
insl
in
xchg
out
cld
add
in
ljmp
pop
insb
mov
lret
sub
nop
outsl
jge
cwtl
clc
sbb
or
mov
out
shl
cld
movsl
rorb
xor
call
sarl
loop
decl
mov
pop
jbe
sbb
sahf
mov
rcrl
es
leave
and
fimuls
and
cwtl
sbb
mov
add
xchg
int3
pop
xchg
jbe
int
mov
mov
roll
incl
std
in
imul
cmpb
stos
out
bsr
and
pop
or
call
out
test
sbb
and
sahf
cmpsl
xchg
loop
out
xor
sbb
mov
loop
and
imul
mov
mov
sub
iret
pop
jbe
ficomps
int3
xor
std
ljmp
xor
repz
adc
and
adc
mov
add
mov
sbb
in
ss
mov
adc
nop
jae
adc
adc
sbb
pushl
add
push
sbb
faddp
sti
mov
push
and
push
lcall
adc
and
dec
jae
inc
cmpsl
dec
loope
incl
sbbl
inc
fwait
push
stc
adc
mov
ja
add
ret
inc
xor
js
lds
jmp
enter
adc
mov
and
mov
daa
jns
mov
out
adc
loopne
aad
fcmovnu
cmp
in
pop
aad
mov
add
mov
xor
and
addr16
xchg
sahf
pusha
and
sbb
addr16
daa
cld
xor
adc
inc
ja
fidivrl
add
enter
dec
push
mov
pushf
jae
and
sbbb
jg
lock
je
sub
leave
scas
adc
or
sub
lcall
sbb
cwtl
xchg
aaa
lods
sub
jmp
xor
mov
cmc
lahf
xchg
popf
sub
rcll
or
in
ljmp
test
js
or
mov
and
sbb
idivl
pop
pushl
std
call
dec
jne
sbb
fsubr
mov
xor
aam
pop
push
cmp
inc
popf
fldt
sub
cvtps2pi
add
in
roll
je
mov
inc
inc
cmp
jmp
push
sub
or
testb
mov
jmp
leave
sbb
and
lock
jmp
aas
pop
xchg
fstp
xchg
xchg
xchg
out
lods
xor
xor
inc
lahf
jns
fidivs
lcall
popf
or
ret
and
data16
out
mov
mov
call
je
pop
pop
popa
push
fiadds
jbe
lahf
push
and
stc
mov
xor
xor
jnp
jmp
imul
shrb
mov
xor
dec
and
or
out
and
andb
mov
xor
lret
jecxz
dec
fisubrl
xchg
sub
push
or
mov
sbb
xor
add
push
add
and
jne
insl
jecxz
xchg
sbb
popf
mov
call
mov
popf
add
in
push
test
lret
pop
out
in
fmuls
jbe
lds
xor
jg
xchg
incb
in
test
pushl
shrb
push
inc
push
loope
mov
jl
popf
xchg
js
test
or
decl
sub
mov
jbe
pop
mov
inc
into
xchg
inc
jg
pop
out
jno
cs
das
push
dec
push
loopne
fistpll
loopne
pop
sbb
dec
in
push
sar
xchg
lods
adc
ja
jmp
push
andl
test
lock
and
in
rcr
xchg
inc
call
jmp
mov
xchg
sbb
imul
jmp
dec
scas
and
xlat
stc
cli
pop
cwtl
mov
decl
movsl
imul
push
test
lods
inc
lahf
mov
aas
lcall
sub
call
dec
les
adc
xor
repnz
sbb
cmpb
cmpsb
icebp
add
aam
xchg
jmp
pop
sbb
test
cmp
and
mov
mov
scas
pusha
mov
setb
jno
sub
inc
sub
push
in
xchg
insb
es
popf
stos
inc
push
sbb
pop
rolb
xchg
lahf
test
pop
outsb
std
inc
lea
inc
dec
shl
jnp
enter
pop
pushl
mov
pop
mov
adc
out
push
lods
inc
frstor
mov
dec
jmp
adcl
js
and
pushf
adc
loopne
decl
mov
push
insl
xor
lret
ss
xor
repz
and
inc
ljmp
or
das
mov
cwtl
stos
iret
dec
adc
jge
adc
cmp
int3
pop
fldcw
push
jge
int
push
dec
lcall
icebp
fidivrl
pop
std
gs
jle
adc
bound
ret
add
ss
pop
xlat
sbb
call
out
cmp
jl
les
lods
xchg
dec
mov
cmp
cmpsl
xor
sahf
lret
xchg
jecxz
leave
mov
outsl
lcall
jmp
shl
and
or
push
sahf
jne
lods
jecxz
cltd
mov
push
fiadds
mov
fdivp
pop
lret
jp
cmp
pop
ljmp
je
std
testb
push
jo
add
dec
nop
cmc
sti
shll
cmp
movsb
push
outsl
shll
push
and
xor
sar
add
dec
cmp
insl
mov
push
pop
test
loopne
mov
mov
inc
in
fnstenv
ljmp
outsl
and
mov
cmp
ljmp
rolb
xchg
jg
repz
popa
sti
subb
pop
mov
dec
xor
adc
lods
in
nop
push
mov
push
inc
mov
sbb
ljmp
mov
jp
js
pop
push
push
pop
xchg
mov
nop
fadds
pop
aad
adc
lret
incl
xchg
je
outsl
jb
cltd
out
mov
sti
outsl
dec
fisubs
js
into
roll
sbb
lcall
push
xchg
xor
pop
jmp
aaa
test
ds
fdivl
fld
out
or
push
ja
inc
fs
outsl
xor
fucomp
add
stos
movl
push
add
inc
lock
mov
sbb
popf
insb
imul
pusha
std
lcall
xchg
and
fisttpl
push
xor
cmc
cmpsl
stos
mov
shll
adc
dec
add
mov
clc
hlt
sbb
clc
out
ficompl
adc
shrl
inc
inc
insb
cmp
fidivl
out
jbe
pushf
repnz
push
cmp
pusha
and
add
inc
das
adc
mov
pushf
pop
or
ficoml
xchg
iret
mov
hlt
and
jle
mov
negb
lds
jae
lcall
push
das
sub
ljmp
pop
data16
ficoml
push
lock
jg
inc
mov
js
xor
out
fildll
push
jno
jge
das
insl
add
decl
movsl
mov
mov
inc
add
cs
push
sub
out
subl
sub
sbbb
mov
out
addb
movb
sub
imul
push
or
shl
vmovntdq
decb
in
push
jge
and
mov
fnstcw
cld
xor
mov
sar
mov
test
mov
jb
test
sbb
call
xor
iret
pushf
jg
ficompl
cmp
orb
inc
stc
clc
push
mov
xor
lods
les
mov
shl
pop
cmpsb
dec
lret
pushl
cld
lahf
mov
adc
adc
popf
test
xchg
ret
loope
xor
dec
cmpsb
and
out
mov
ja
rcrb
xchg
into
call
xor
jecxz
std
inc
or
jmp
push
lret
clc
cmc
stos
or
adc
lret
xor
cmpl
scas
mov
push
sahf
imul
fwait
mov
xchg
mov
jl
das
push
xchg
fdivs
sbb
scas
sbb
mov
decl
xchg
inc
cmp
push
xchg
mov
mov
pop
pushf
std
mov
push
jle
les
inc
mov
dec
lods
dec
mov
sti
and
xchg
sub
in
ljmp
push
clc
pop
cwtl
into
inc
sub
xchg
mov
mov
fistl
test
xor
fnop
mov
movsb
pop
jle
sbb
mov
pop
ljmp
imul
ficoms
jne
shrl
push
imul
mov
push
mov
jmp
stos
pop
push
or
lahf
insb
dec
adc
mov
mov
mov
and
je
push
subl
add
jmp
movsb
cli
insb
loopne
or
sub
pop
mov
sub
in
cmpsl
cmp
push
push
adc
mov
jo
imul
popa
popf
aad
idivb
imul
jle
clc
and
adc
xchg
and
jecxz
jg
inc
stc
insl
dec
orl
loopne
outsb
jge
dec
outsb
js
daa
gs
add
cmp
push
xchg
lea
inc
sub
clc
ljmp
mov
mov
stos
call
push
mov
ficoml
addr16
addr16
mov
jns
repnz
cmp
jo
in
xchg
inc
into
fistpl
sub
inc
mov
jnp
fistpll
lret
je
test
call
fisubrl
ret
mov
pop
out
dec
ror
dec
lcall
push
fisubs
mov
incl
pop
jo
xor
pop
sub
hlt
push
sbb
lret
or
jmp
mov
push
xchg
and
push
sbb
mulb
lahf
lods
xor
mov
xor
pusha
pushl
lcall
sub
xchg
mov
or
shlb
insl
int3
ljmp
call
cmp
mov
xchg
jecxz
pop
aam
into
add
fdivl
bound
pop
mov
dec
jmp
adc
in
mov
arpl
pop
iret
mov
cmp
xchg
aad
test
xchg
dec
ljmp
shl
mov
push
fwait
sbb
mov
shrb
mov
mov
ljmp
shlb
inc
in
or
stos
loope
or
fwait
add
lock
decl
dec
jne
sub
inc
loopne
cmp
rorb
jnp
jl
inc
in
sti
push
sub
stos
lcall
stc
aas
jbe
xor
push
mov
mov
cmp
inc
or
push
mov
mov
pusha
mov
bound
iret
jbe
cmc
mov
imul
stos
in
jg
ljmp
dec
sbbl
mov
ficomps
ror
pop
sbbb
call
into
repnz
test
mov
cwtl
dec
lock
les
outsl
fsts
stos
adc
jne
sbb
cmpsl
cmc
call
or
cmp
push
and
jecxz
rclb
sbb
sahf
and
jg
cmp
push
bound
pusha
in
jmp
fsubs
sub
jmp
ret
andb
cmp
sbb
cltd
and
dec
xchg
out
mov
andl
call
and
cmp
int
add
popa
cwtl
adc
test
mov
xchg
out
cli
incl
in
sbb
add
adc
jbe
scas
cld
push
ret
cmp
jg
movsl
cmp
xor
jge
mov
mov
mov
out
sbb
sbb
call
ret
test
inc
mov
je
repnz
mov
mov
jne
sbb
pop
pushl
cld
cld
sbb
dec
jge
or
int3
in
mov
cmpsb
xchg
out
fcomip
out
pop
out
or
cs
ss
mov
xchg
xor
mov
ficoms
lods
loopne
frstor
int3
repz
mov
inc
fwait
push
incl
add
mov
cmp
dec
cmp
les
shll
cs
call
call
adc
adc
cmp
in
mov
test
lahf
rorl
call
or
or
xchg
jmp
out
fcmovnb
jne
rclb
jge
fwait
add
fsubrl
lcall
sbb
imul
adc
push
in
sub
push
pop
out
arpl
call
dec
lods
mov
lods
sub
fs
cld
inc
test
lods
xchg
inc
push
mov
pop
push
fcomps
in
and
jmp
pop
push
jp
out
mov
inc
inc
xor
sbbb
or
lret
je
movsb
push
loop
incl
dec
mov
sub
repz
mov
jns
cli
ret
pop
mov
mov
pushl
mov
xor
mov
stos
jmp
mov
out
hlt
adc
jns
push
cmp
aam
fnsave
decl
pop
push
sahf
call
or
add
dec
lret
mov
out
ret
or
jbe
mov
and
dec
lahf
sub
xorl
mov
dec
cmp
lret
fmuls
xchg
scas
jae
insb
and
lcall
stos
cmpsl
sbb
sub
mov
adc
add
sarb
das
adc
sbb
sub
inc
lcall
mov
dec
cmp
out
jge
jbe
mov
les
loop
mov
sbb
jle
pop
scas
dec
xchg
idiv
fmul
or
mov
stc
xchg
xor
loop
xor
rolb
popf
mov
ret
cmp
das
pop
decl
adc
and
push
addr16
mov
in
jae
xchg
push
outsl
jp
fxch
lret
mov
sbb
mov
repnz
scas
xor
sbb
pushl
ret
imul
aam
sub
addr16
sbb
jno
ret
jmp
or
push
je
loope
pop
xchg
inc
std
in
test
jb
mov
lret
dec
outsb
mov
adc
orl
icebp
sbb
fs
push
iret
stos
sub
sub
lock
lock
lcall
lds
stos
adc
clc
imul
scas
enter
xchg
adc
leave
ljmp
mov
mov
xor
pusha
sub
and
call
mov
je
inc
sahf
or
pop
imul
sbb
aas
scas
out
push
mov
cmp
cltd
jle
aaa
fld
aaa
xor
mov
add
cli
das
rorl
pushl
arpl
add
adc
inc
mov
call
sbbl
popa
xchg
aaa
jnp
pop
pop
xor
xor
adc
clc
jmp
push
aaa
lods
inc
decb
xchg
inc
add
rclb
int3
and
clc
inc
hlt
sub
and
repnz
inc
fcomps
das
push
data16
pop
mov
decl
sub
in
in
dec
leave
cmp
dec
sub
and
pushl
xor
roll
popf
nop
pop
inc
inc
movb
loop
ljmp
decl
lahf
fildll
mov
sub
and
adc
jg
movl
stc
dec
mov
push
adc
cltd
pop
or
cmp
pushl
mov
frstor
cmp
mov
outsb
and
sub
clc
leave
xor
jg
ljmp
dec
mov
and
mov
cmp
jbe
aad
mov
pop
loopne
incl
addr16
movsl
and
je
jmp
dec
adc
xor
mov
rclb
jmp
mov
testl
call
mov
stos
adc
outsl
mov
test
into
cmp
into
sar
push
out
cmp
test
movsl
dec
lea
mov
das
fcomip
ja
jbe
negb
push
dec
and
imul
jmp
loopne
lret
mov
mov
out
shll
leave
jle
and
ds
jmp
mov
jmp
inc
add
adc
jmp
push
pop
mov
xor
jmp
mov
cmp
cmp
mov
pop
call
mov
pusha
inc
or
jne
insb
adc
adcl
cmp
inc
movsb
stos
sbb
or
in
mov
mov
xchg
subb
adc
mov
int
and
testl
xchg
cld
dec
inc
xchg
mov
jns
call
stos
mov
mov
aaa
movsb
imull
test
dec
fisttpll
test
imul
pop
xchg
insl
das
dec
fbstp
scas
mov
jb
repz
pop
ficomps
jle
sub
sbb
ljmp
outsl
mov
fidivl
orl
mov
mov
mov
ljmp
push
mov
out
rclb
mov
rcrb
sub
inc
xchg
ret
xor
push
fs
ljmp
je
adc
std
pop
loopne
scas
arpl
flds
test
mov
push
shll
mov
sub
outsl
push
movsl
inc
enter
gs
pop
andl
sbb
sbb
jmp
fisubl
jl
jno
jns
daa
es
scas
adc
adc
mov
into
xchg
iret
push
ss
lret
mov
pop
in
xchg
lea
push
push
push
mov
jnp
ljmp
mov
push
mov
inc
inc
xor
mov
in
insb
pop
and
fsts
push
hlt
psubb
pusha
stc
jmp
cmp
div
xchg
xchg
push
inc
or
xor
ljmp
inc
adc
cmpsb
sbb
mov
xchg
dec
test
inc
in
pop
push
lds
ror
jecxz
cli
jmp
fwait
and
mov
andl
mov
lea
int
lea
adc
sbb
xchg
in
call
iret
pop
jb
xor
push
add
xor
out
cmp
sbb
mov
xchg
popa
ljmp
outsb
pop
in
leave
or
adc
test
sbb
cmc
stos
xchg
fstpl
or
jg
test
mov
lret
xchg
sbb
pusha
das
inc
loopne
jne
adc
sar
outsl
push
popa
stos
testl
scas
and
pop
push
jp
in
das
es
push
gs
outsl
jp
cmp
push
or
or
test
out
pop
fmuls
add
shll
out
test
xor
push
cld
mov
mov
dec
dec
out
and
cwtl
mov
pushl
jae
fnstsw
enter
sti
flds
test
repz
adc
incl
aad
iret
cltd
dec
mov
rcrl
push
scas
loop
push
inc
mov
shlb
pop
movsb
jmp
jo
popf
pop
dec
push
rol
stos
adc
mov
xchg
in
test
fnstsw
lcall
shl
cmp
scas
sbb
or
push
repz
pushl
pop
mov
and
out
out
xchg
imul
test
xchg
pop
mov
pop
xor
mov
mov
pop
dec
out
movsl
scas
add
inc
mov
jb
and
cmp
ret
pushl
iret
sbb
inc
cmp
push
cmp
push
cld
ja
cmpsb
mov
enter
out
xor
cmp
sbb
mov
lcall
inc
js
or
sarl
jmp
lods
sbb
cmp
test
pushf
inc
cmp
mov
mov
stos
mov
sar
inc
mov
jmp
add
scas
cmp
lahf
orb
leave
std
lds
lahf
add
jg
cmp
push
pop
add
mov
icebp
and
pop
roll
or
nop
hlt
decl
movsb
gs
or
inc
int3
testb
int3
icebp
lcall
and
clc
dec
into
mov
xor
into
imul
inc
cmc
push
push
xor
sub
mov
adc
aam
inc
adc
or
jecxz
xchg
sti
inc
jne
jmp
pop
outsb
fwait
mov
lock
xor
mov
push
pop
mul
sub
lcall
mov
nop
xchg
shl
xor
sbb
mov
pusha
ljmp
add
sub
xchg
es
xor
mov
inc
stos
insl
std
lcall
push
mov
push
int
mov
or
mov
sub
lahf
jno
pushf
xchg
xchg
jb
inc
stos
jp
jne
dec
mov
pop
pusha
mov
sub
les
call
cmpl
xlat
decl
adc
or
push
jecxz
popf
push
out
aaa
cli
cmp
fcoml
jns
push
jg
jp
push
shrb
mov
push
mov
and
add
fcomip
call
push
cwtl
mov
imul
shlb
sub
stos
cmp
mov
jmp
add
jp
in
sub
decb
pop
add
xor
incl
ret
dec
or
mov
lret
inc
pop
mov
mov
inc
push
adc
ljmp
mov
movsl
bound
add
in
push
pop
push
popf
jmp
call
and
cmp
mov
mov
cli
xor
sbb
or
mov
push
xchg
insb
or
adc
ret
and
inc
sbb
xor
pop
mov
sbb
in
in
mov
xor
mov
jns
loop
xchg
je
mov
dec
sbb
imul
jle
xchg
inc
lods
lret
pop
in
jns
test
ss
cmc
sbb
loope
mov
and
and
mov
and
call
ret
incl
xor
hlt
xchg
sub
ret
dec
lods
inc
lock
mov
mov
mov
or
pop
inc
hlt
and
hlt
dec
rolw
jle
ret
mov
add
inc
bnd
xor
mov
fsubrs
fstpl
incl
movsb
xchg
fidivs
lahf
clc
nop
or
cmpsb
lcall
mov
insb
sbb
fldt
das
clc
call
int
out
ficoml
dec
subl
popf
push
adc
push
push
sub
lcall
cld
divb
mov
ljmp
xchg
mov
and
add
stos
cmp
outsb
jno
mov
add
pop
sti
mov
cmp
jae
mov
mov
repnz
push
shr
cmp
dec
xchg
aas
adc
jge
mov
cmp
sbb
shll
incl
push
mov
mov
fs
cmp
lret
and
in
add
pop
lcall
dec
loopne
mov
and
jb
xchg
xor
xchg
into
test
in
and
ljmp
lock
pop
pop
push
lret
cmpsl
xchg
sahf
xor
data16
bound
scas
je
call
ljmp
adc
dec
jno
stc
fwait
push
pop
mov
outsl
xchg
sbbb
cmp
and
ljmp
xchg
or
mov
add
push
or
jp
xchg
popa
push
popf
push
fs
cmpsb
incl
cmovbe
mov
mov
cs
js
cmp
cmpb
incl
shr
rol
mov
and
dec
int
adcl
push
lods
mov
cmc
xchg
repz
mov
test
inc
popf
out
fcomip
dec
mov
jno
push
and
mov
jp
xor
dec
xchg
cmpsl
dec
cmp
sbb
dec
outsl
hlt
aas
jno
sbb
add
and
jmp
inc
insb
mov
dec
push
out
add
int3
xor
jg
ss
inc
adc
call
getsec
jne
bound
out
leave
jecxz
adc
sub
imul
stos
jmp
mov
pusha
repnz
pop
cwtl
lret
call
xchg
mov
dec
nop
jbe
aam
sbb
jb
out
push
inc
sbb
stc
inc
test
mov
shr
xlat
and
push
cmp
cmc
sub
lret
dec
pop
imul
rcl
ficomps
sbb
fldpi
in
lods
mov
jge
jae
out
adc
dec
push
bnd
insb
pushl
sub
popf
nop
sahf
add
add
dec
lret
adcl
call
push
inc
jle
std
jg
mov
leave
jns
stos
dec
push
lret
xchg
cs
adc
movsb
lcall
cld
add
mov
jge
fnsave
add
je
pushl
pop
ja
fidivs
andb
xrelease
lret
mov
jnp
ljmp
subb
out
pop
mov
sub
cmpsl
push
cmp
sub
nop
xchg
and
cmp
incl
dec
or
jecxz
cwtl
cwtl
test
jp
push
lds
push
dec
mov
js
mov
clc
inc
xchg
out
xlat
add
mov
or
dec
nop
aas
pop
inc
das
cmp
fidivl
cltd
call
int
adc
cmp
scas
xor
mov
movsb
push
dec
mov
mov
ljmp
pop
aam
adc
and
dec
imul
push
lcall
push
and
gs
sub
push
and
jle
int
xchg
fisttps
pop
pusha
inc
pop
mov
pusha
stos
pop
fnstsw
mov
push
cmp
push
jmp
popa
dec
sbb
mov
ds
mov
fcomip
mov
shll
jne
jbe
adc
repz
sbb
or
xor
cmp
cld
pop
scas
es
test
xor
shlb
mov
incl
xor
imul
lods
js
shlb
pusha
jnp
xchg
or
push
mov
jo
movsl
mov
cli
push
sub
mov
sbbl
fmull
int3
mov
fistpll
xadd
push
fcomip
in
xchg
jns
mov
call
call
stos
insl
cmp
dec
dec
xchg
jae
lock
jno
mov
push
inc
pop
dec
mov
add
cli
jmp
pop
cmp
xor
xchg
inc
test
ficoml
pop
outsl
sbb
fmuls
jo
std
ljmp
sarb
test
adc
out
mov
inc
call
jmp
mov
dec
scas
mov
pop
fisttpll
jl
out
mov
lea
outsl
lock
cld
ja
call
pop
jno
jle
pop
sarl
mov
sub
imul
cmp
push
cmp
aad
in
jle
jb
jle
aaa
push
fsubrp
jmp
jno
mov
mov
insb
add
lods
cld
sbb
repnz
dec
push
dec
xchg
mov
in
scas
add
ret
and
in
xchg
daa
pop
xchg
negl
sbb
call
je
fcomps
sbb
in
jle
mov
push
xchg
insb
or
inc
mov
xchg
xchg
mov
loop
adc
ret
insl
call
adc
mov
add
or
repz
add
pushl
inc
add
in
cmp
xor
lcall
inc
fwait
cmp
jmp
shll
xchg
add
fs
movsl
rorb
or
pushl
xchg
test
fisubs
ret
xchg
cwtl
sub
scas
test
xchg
js
ret
adc
or
lret
inc
jne
pop
pop
pop
ret
xchg
pop
sub
repnz
inc
jne
test
ljmp
in
incb
jo,pt
jne
aad
mov
ffreep
pop
repnz
mov
dec
shr
sub
push
into
imul
jb
mov
test
ret
repz
dec
popa
test
incl
or
inc
ror
inc
fildl
xor
cmpsb
enter
push
dec
pushl
filds
push
and
dec
out
mov
pop
clc
test
int
xchg
mov
call
cs
into
jl
loopne
lea
mov
loopne
in
inc
add
cmp
cmpl
shlb
pushf
push
loopne
pop
jg
rol
inc
or
xchg
sbb
or
mov
decl
jb
push
test
in
scas
push
mov
or
dec
movsl
xchg
idiv
pop
loopne
lcall
or
fcompl
into
adc
ljmp
xchg
dec
xchg
cld
cmc
test
nop
outsl
fincstp
out
adc
rcll
add
mov
add
call
scas
jl
pop
das
sub
sti
push
orb
popaw
mov
pusha
sbb
pushl
leave
out
sub
xchg
or
xor
movsb
ss
fxch
xchg
mov
incl
fnstcw
sbb
stc
fwait
sub
jno
loope
adc
insb
data16
jmp
ljmp
and
lds
in
dec
es
sub
cltd
fidivrl
call
mov
sarl
or
cwtl
ficompl
dec
or
adc
sar
out
popa
pop
and
add
cli
or
or
das
fwait
push
xchg
mov
cli
mov
aam
mov
rol
arpl
add
ljmp
and
xor
into
and
mov
mov
cmp
lcall
xchg
adc
mov
pushf
add
jl
in
jo
and
xlat
lahf
into
cmp
repnz
adc
jmp
hlt
incl
lods
es
jae
popf
and
jmp
subl
incl
repz
lods
test
sbb
shlb
mov
in
xlat
add
xor
lcall
rclb
jb
push
pop
into
out
pusha
std
stos
or
scas
jbe
mov
mov
jmp
inc
popa
std
jl
mov
jnp
fwait
xchg
in
push
jbe
push
or
incl
mov
out
aam
xchg
pop
sbb
adc
or
jb
lcall
xchg
adc
pop
std
lock
in
mov
aad
outsl
cli
jmp
cltd
lret
xchg
mov
dec
push
rorb
jecxz
inc
xchg
out
sahf
cwtl
cmp
enter
lods
xchg
xor
psubq
sbb
or
call
sbb
mov
scas
jno
xchg
cmpsb
inc
adcb
mov
cmp
dec
movsl
cmpsl
sbb
xchg
xor
jle
jmp
sbb
push
push
shrb
ljmp
xchg
pop
dec
mov
push
inc
push
mov
jmp
out
loope
ja
pushf
dec
int3
adc
fsubrl
cli
mov
negb
jno
test
nop
cmp
clc
lcall
cmpb
xor
xor
fldl
out
pop
pop
push
sub
and
sub
in
pop
ds
je
xchg
fcoms
jns
dec
loopne
mov
push
xchg
inc
pop
sub
add
mov
cs
decl
mov
pop
stos
repnz
lods
xchg
push
loop
mov
xchg
jns
pusha
cmp
jo
clc
jmp
or
jne
fs
mov
mov
es
mov
ljmp
sarb
inc
mov
pusha
jo
sub
popa
adc
dec
popf
jae
xchg
pushl
loop
data16
mov
pop
popa
jns
xchg
mov
xchg
pop
hlt
repnz
mov
in
xor
jmp
push
inc
or
sbb
cmp
mulb
ret
fwait
adc
cmp
ja
out
sbb
fmul
mov
or
mov
outsb
insl
cmp
xorl
sbb
decl
ja
movsb
outsl
or
and
cwtl
xchg
pusha
imul
adc
inc
loope
mov
adc
imul
jp
bswap
decl
dec
mov
dec
jg
cltd
mov
mov
adc
sbb
mov
pop
mov
push
adc
jecxz
fcoms
jb
cmpsb
or
cmc
inc
push
ss
loopne
clc
mov
jbe
mov
call
xchg
push
ds
insl
dec
fists
stos
call
iret
mov
movb
loopne
push
imul
pushl
hlt
rcl
xchg
out
loop
inc
ret
jbe
cmp
test
ret
add
and
cmp
inc
cld
inc
mov
and
bound
inc
jl
lcall
fstpt
dec
ss
xchg
push
notb
sbb
inc
mov
mov
dec
arpl
push
jmp
dec
cmp
cmp
test
xor
sub
xchg
pop
push
aad
ljmp
xchg
jne
pop
test
pop
fs
mov
sbb
xchg
ret
jp
mov
lcall
hlt
pop
fcomps
jnp
lock
pushf
dec
push
jne
push
loope
int
dec
jne
loope
lock
xor
ds
mov
pop
mov
adc
sbb
mov
xchg
incl
and
int
push
int3
cmp
dec
dec
jbe
out
inc
sti
jne
jnp
test
add
sbb
pushl
cld
dec
and
decb
lret
insb
pop
or
subb
push
sbb
fwait
mov
call
jno
fnstenv
negb
sub
jb
sub
fwait
jle
movsl
out
adc
decl
mov
gs
pop
rcrl
out
shll
fdivrl
arpl
mov
jg
call
mov
stc
mov
jle
stos
rcrl
into
addl
push
jge
cld
jmp
js
inc
leave
cmpsb
xchg
iret
add
push
fiaddl
rcrl
clc
sti
cwtl
add
mov
or
jecxz
mov
pushf
enter
inc
loope
pop
cmp
jg
push
movsl
sub
lods
cli
mov
mov
je
mov
call
jmp
stos
pop
mov
test
mov
mov
ss
lea
cld
xor
push
add
push
stc
pop
add
rorb
fidivs
cmpb
aas
mov
movsb
mov
outsb
inc
mov
mov
fsubs
aas
sbb
xchg
ljmp
add
icebp
xchg
push
fiadds
xchg
push
fnstenv
jmp
incl
jo
sub
mov
in
jns
pop
sbb
add
or
dec
movsl
pop
fucom
popf
faddp
xchg
shr
pop
popa
add
fisubrs
adc
mov
sub
int
or
das
test
incl
add
addb
sbb
pop
pop
les
push
push
mov
rcrb
dec
repz
jp
shrb
in
jecxz
jno
ljmp
outsl
jl
aas
pop
fwait
push
imul
jo
pop
mov
je
mov
popf
inc
mov
jmp
jns
hlt
mov
sub
sbb
clc
out
pushf
movsl
lcall
cli
std
cld
and
push
imul
push
sahf
outsb
std
ljmp
xorb
xchg
pop
and
jmp
loope
push
addr16
andl
imul
shll
mov
les
mov
jmp
rorb
sub
cmc
sti
jmp
pop
scas
arpl
rcrb
cltd
incl
ds
jl
and
add
subl
rcrb
scas
mov
call
outsb
jp
mov
or
scas
xchg
and
fistps
or
sbb
insb
sub
gs
xor
mulb
lea
and
jmp
xor
add
mov
or
inc
les
push
pop
repnz
lcall
sbb
jae
frstor
mov
fildll
mov
ret
stos
stc
bound
add
xchg
mov
jnp
push
shll
aad
lahf
outsb
xor
mov
mov
cmpsb
call
and
cltd
xlat
and
mov
std
jge
push
pop
xchg
popf
jg
xchg
mov
aas
nop
mov
ljmp
push
loop
sub
cmp
movsb
inc
aaa
xchg
movsl
push
pop
jmp
js
add
in
icebp
jg
pushl
cli
push
cmpsb
bound
adc
mov
mov
ss
fists
out
xchg
mov
sub
sahf
or
add
decl
jg
gs
xchg
fsubs
call
sbb
inc
fcompl
pop
stos
int3
xchg
xlat
jnp
jns
cmc
mov
xlat
xlat
or
gs
aaa
cmp
in
jl
jb
test
testb
xor
bound
xchg
sbb
xor
or
cmp
mov
pop
loopne
add
mov
push
sbb
lds
into
popa
ud0
pushl
push
pop
clc
mov
cmovne
add
push
xor
fwait
jne
adc
jmp
pop
and
divb
bound
negl
rorl
adc
xchg
pop
daa
imul
sahf
dec
xchg
dec
dec
cmp
mov
sub
jecxz
sbb
sti
pop
sbb
mov
cmc
cmp
xchg
in
and
jmp
repnz
fwait
inc
or
dec
fisttpll
daa
xchg
cmpsb
cmpsl
mov
adc
call
fists
add
dec
cmp
xchg
pop
int
mov
mov
or
addr16
jbe
xlat
dec
sub
add
rcl
push
arpl
inc
adc
adc
or
arpl
mov
dec
and
add
xor
push
mov
movsb
hlt
stos
jecxz
push
cmp
fcomip
outsl
int
cld
cs
jmp
sar
xorb
ljmp
cs
inc
xor
out
jle
repz
inc
movsl
nop
sub
rolb
jg
ljmp
dec
fstl
popf
mov
test
jp
decl
mov
mov
iret
popa
rcrb
jl
and
lock
call
or
iret
pop
insl
inc
mov
jp
int3
std
scas
pop
sub
enter
les
filds
pop
fldcw
enter
sahf
sub
aaa
jp
jo
pop
les
test
fdivrp
call
pop
cwtl
mov
pop
mov
mov
sub
shll
fs
push
decl
pop
pop
cmp
daa
idivb
inc
and
xor
in
daa
fs
test
aas
hlt
decl
push
mov
out
xchg
sub
popf
scas
or
jp
push
fcmovne
sub
stos
fdivl
ljmp
push
loope
push
gs
fiaddl
jp
insl
or
sarl
pop
cmpsb
popa
jmp
push
mov
ds
jl
popf
iret
jp
sbb
int3
addr16
sbb
call
in
jp
fbld
cli
leave
mov
xor
in
ljmp
in
and
xor
in
pushf
mov
push
pop
icebp
push
scas
aas
cld
fstpl
push
nop
es
out
clc
pushl
int3
daa
jnp
mov
gs
out
stos
push
ret
adc
sbbb
ljmp
scas
xchg
imul
adc
addl
adcl
push
call
icebp
xchg
std
sbb
xchg
movsb
and
or
aas
inc
mov
jge
mov
lods
mov
cli
loope
bound
sbbb
xor
roll
jmp
or
xchg
mov
xor
jne
lahf
mull
aad
adc
test
icebp
inc
fsubrl
push
jbe
push
aas
adc
cld
jp
movsl
dec
loopne
movsl
insl
pop
cmpsb
int
daa
xor
imul
sbb
pushl
push
sbb
push
pop
jb
lret
jl
xor
je
and
aas
mov
aam
mov
fildll
sbb
fcmovnu
dec
pop
hlt
imulb
test
incl
inc
loop
sti
mov
arpl
addl
jbe
jmp
jecxz
stc
rorl
ljmp
clc
lahf
stos
mov
call
xchg
jle
jmp
sub
imul
push
adcl
push
repnz
mov
repz
mov
cmpsl
and
sbb
jg
ljmp
cmpsb
aad
jns
mov
shlb
or
mov
cmp
repnz
decl
fsts
in
xchg
add
and
rcrl
les
cmpsl
js
dec
xor
test
lret
xchg
adc
and
popf
aas
inc
mov
lods
lcall
out
cmp
xchg
call
nop
sbb
dec
mov
sbb
xor
pop
xor
int
pusha
imul
sub
scas
add
movsb
sub
fisubrs
xor
gs
es
in
sbb
mov
loop
jmp
es
mov
xchg
jns
add
test
andb
add
ljmp
shl
and
mov
in
in
jb
mov
push
mov
incl
and
mov
movsb
push
es
push
js
push
js
dec
dec
sar
ljmp
add
and
pop
pop
mov
dec
push
jecxz
inc
mov
jbe
lds
fisttpll
jmp
fiaddl
xchg
cmp
ljmp
ffree
or
xchg
mov
push
loope
push
push
fldl
movsl
ret
notrack
pusha
sti
sti
and
arpl
es
or
ds
rcrb
in
decl
or
sub
fists
or
lcall
and
call
dec
jo
ss
pop
sub
call
sub
cld
push
test
cmpsb
mov
sub
mov
ljmp
stos
cmp
lds
jg
bound
pushf
icebp
fistps
bnd
cmp
imul
lahf
imul
cmc
and
pushl
mov
jb
adc
jge
jb
inc
insb
push
pop
pop
pop
mov
gs
int3
adc
jb
decl
es
lods
pop
jmp
in
sub
pop
bound
rorl
jnp
ljmp
jmp
cwtl
fcomps
adc
cmpsb
fldlg2
lods
filds
das
call
mov
test
movsb
push
add
pop
fimuls
xor
je
xchg
xor
call
outsb
lret
mov
and
andl
cmp
cmp
out
add
aaa
inc
negl
push
rorb
add
inc
mov
outsl
pushl
cld
push
sub
lds
jg
inc
add
data16
mov
mov
mov
out
faddl
shlb
shll
inc
mov
lcall
or
ret
les
cmp
decb
cwtl
mov
lds
arpl
add
call
loopne
pop
jae
push
sub
xor
enter
pushl
in
fmull
sbb
inc
test
cmpsb
iret
add
sti
pop
pop
push
xchg
in
sbb
ljmp
cmpsb
mov
sbb
negb
xor
or
icebp
pop
mov
jb
incl
test
cmpsl
popf
mov
xor
dec
fsubs
sub
fists
aam
decl
xchg
inc
fcomip
adc
mov
adc
cmp
mov
js
sar
clc
shlb
xor
lcall
xlat
pop
dec
lret
ss
clc
xor
jb
daa
xchg
gs
or
sub
jmp
shrb
into
jae
lret
cwtl
mov
dec
xor
es
popa
jecxz
or
incl
mov
xor
in
adc
inc
into
add
mov
imul
adc
enter
popa
and
arpl
rcl
sub
movsl
adc
add
call
ljmp
rclb
xchg
sub
mov
jle
in
lcall
jmp
sti
fidivrs
cwtl
xchg
in
cwtl
aad
and
insl
scas
sbb
test
call
inc
mov
mov
clc
pop
les
push
add
cmp
bound
lcall
ljmp
adc
mov
outsb
in
ror
hlt
test
cwtl
adc
fdivrl
das
dec
lods
jl
jecxz
pushl
fs
jo
mov
popf
ret
test
mov
out
sbb
ret
aas
sbb
rcrb
popa
orb
mov
add
movsb
xchg
test
inc
popa
repz
pushl
sarb
mov
sbb
xchg
clc
pop
add
lcall
das
jle
cli
shl
sbb
lds
jge
add
cmpsb
dec
mov
int3
xor
dec
addr16
bound
cmp
and
es
pushf
call
mov
jmp
mov
lcall
imul
or
dec
jnp
dec
fildll
mov
das
cli
jg
and
lock
mov
lcall
arpl
jecxz
data16
aad
movsl
jmp
cld
jne
cli
push
mov
arpl
or
pushl
lcall
mov
lret
mov
push
mov
mov
arpl
aaa
iret
dec
ret
sbb
push
jae
jns
dec
dec
mov
incl
mov
call
ljmp
sbb
nop
mov
mov
arpl
cli
mov
sub
xor
pop
jns
lock
dec
mov
mov
cmp
incl
mov
sbb
jle
pop
adc
flds
mov
dec
clc
decl
inc
dec
xchg
mov
mov
dec
movsb
sbb
inc
fstl
out
cwtl
repnz
fmuls
add
arpl
ljmp
push
fiaddl
mov
lcall
ljmp
out
mov
sti
imul
add
pusha
adc
fbld
call
fcoml
sbbb
adc
xchg
sub
stos
enter
in
xor
cmp
jmp
xor
ljmp
mov
push
adc
lods
es
jno
imul
movsb
ret
push
cmp
mov
sub
mov
cmp
sti
cmp
lds
push
push
test
lret
adc
int3
mov
sbb
repz
call
mov
stos
push
pop
xor
test
xchg
rcr
xor
add
pavgw
hlt
decl
popf
mov
repnz
or
in
test
sbb
mov
xchg
mov
and
push
out
or
push
sub
imul
xchg
ss
jge
pop
ret
frstor
add
enter
pop
xchg
adc
cmp
dec
nop
pop
test
mov
jl
cmp
pushf
cltd
xor
xchg
mov
mov
imul
sahf
mov
cmp
aas
insb
and
cmp
pop
sbb
and
imul
xchg
cs
push
mov
out
orl
scas
mov
icebp
pushl
pop
out
shrl
ljmp
pop
adc
std
sub
mov
fcmovu
push
test
std
call
adc
cs
sbb
adc
adc
fcomip
mov
jmp
cld
or
iret
mov
or
loop
divb
cltd
movsl
cmp
lcall
sti
int3
pop
sbb
sub
stos
xor
mov
stos
inc
pop
gs
jg
jns
push
inc
repz
jbe
xchg
push
xor
push
clc
lods
dec
fstps
and
in
in
xchg
in
daa
xor
xor
gs
int3
setne
push
sbb
or
enter
rorb
xor
subb
push
jmp
pop
dec
cmp
test
fs
jb
lcall
cwtl
mov
xorl
xchg
call
lahf
cmp
inc
jp
aas
stc
sub
decl
push
add
sbb
mov
cmp
daa
scas
inc
cld
test
sub
nop
je
lret
pop
jg
clc
sub
dec
fistl
jl
mov
xchg
loopne
das
push
jge
cld
pusha
add
call
add
pop
xor
mov
adc
jge
arpl
dec
jo
fildl
call
cs
inc
mulb
cld
fdivrs
aam
stos
mov
outsl
arpl
incl
movsl
aas
adc
xchg
gs
je
jp
arpl
lods
fstl
add
mov
fcomip
dec
mov
jmp
cmp
f2xm1
dec
fwait
sbb
hlt
xor
sub
cmp
fcmovbe
cmc
jmp
sub
push
aas
inc
push
dec
sti
je
cs
jne
cmp
ret
mov
sbb
inc
dec
jg
ljmp
lds
addl
sub
rcrb
out
push
add
inc
cmp
dec
and
fldenv
rcll
rorb
lcall
in
fdivp
mov
cmp
aas
mov
lahf
rorb
and
inc
xor
decl
incl
pslld
clc
lahf
cmp
push
mov
push
sbb
fstl
mov
gs
loope
test
push
leave
push
push
push
stc
popa
cmp
dec
sub
decl
xchg
push
pusha
pop
psubq
sti
test
push
pop
inc
and
es
outsb
add
andb
sbb
lcall
mov
imul
xchg
inc
add
dec
add
scas
clc
in
std
adc
xchg
ss
sub
jg
outsb
adc
push
inc
xchg
sub
dec
popf
imul
mov
lock
call
insl
cmp
pop
pop
xchg
mov
sub
dec
idiv
jle
cmp
pop
mov
std
dec
in
lods
dec
fwait
and
pushl
in
lahf
mov
jns
inc
push
xchg
out
hlt
fidivs
adc
cmc
in
push
xor
ret
ret
inc
cmpsl
cmp
rorl
clc
jmp
inc
das
adc
cld
and
mov
test
lock
mov
decl
mov
ss
stos
cwtl
jg
mov
insb
mov
jne
fnsave
push
data16
mov
jne
or
adcb
ror
cmp
pop
xor
daa
in
in
mov
mov
ret
jns
mov
xchg
or
mov
push
stc
ja
mov
bound
das
push
mov
test
and
call
loopne
adc
mov
ds
inc
mov
jae
rolb
lods
add
adc
mov
ljmp
aas
insl
xchg
pop
imul
in
jmp
inc
jp
or
sti
movsb
mov
and
mov
xor
pop
xchg
cltd
sbb
ret
pop
pop
aam
fldl
xchg
in
aam
xor
pop
int
ljmp
mov
rcrb
rcll
add
mov
pushf
cmp
repnz
push
aaa
imul
inc
hlt
stc
lods
js
jecxz
gs
jns
rcrl
stos
mov
popa
call
jmp
ret
mov
icebp
test
dec
aaa
cmpsb
cwtl
daa
gs
push
mov
cli
inc
int
inc
es
fldt
sahf
jecxz
je
mov
fsts
and
dec
or
add
or
lcall
and
stc
xor
insl
push
mov
lret
mov
call
mov
mov
aas
fldcw
gs
lcall
sti
push
fnsave
sub
js
jno
mov
pop
fistps
jmp
lcall
or
push
lret
jle
in
mov
mov
sbb
orl
fisubrl
rcrb
mov
jle
lcall
jo
fs
insb
sbb
push
in
hlt
je
and
test
movsl
clc
mov
ss
addr16
ljmp
sarl
mov
pop
ror
cwtl
pop
add
sti
mov
movsl
or
lcall
stos
out
adc
mov
cmp
cmp
push
icebp
mov
aad
pop
sub
cmp
addr16
push
ljmp
or
fmuls
and
ja
xor
pop
sub
popf
insb
jge
sbb
mov
std
inc
pop
xchg
mov
sbb
mov
or
rcr
sub
mov
clc
mov
scas
int3
jb
popf
lods
ja
push
cmp
jns
push
push
jmp
popa
stos
jg
scas
rclb
roll
pop
fs
and
ljmp
dec
fwait
inc
insb
jle
mov
jae
jo
and
sti
int3
loope
inc
stos
lcall
adc
and
adc
ds
sahf
es
pop
cmp
jns
pop
cmc
aas
mov
mov
out
imul
das
xchg
cwtl
push
fldenv
push
pushf
pop
fimull
ficoml
cmp
dec
test
lcall
sub
xchg
jb
je
pop
and
xlat
fadds
adc
scas
pop
push
mov
pop
nop
shlb
sbb
or
pop
fcomi
inc
int3
jo,pt
ret
xchg
sbb
jg
mov
outsb
mov
lahf
xor
nop
aas
or
jo
test
clc
int
decl
pushf
clc
cld
sbb
xchg
dec
imul
test
lods
mov
dec
incl
cmpsl
aaa
pop
jo
rol
je
fdivs
ss
imul
mov
bound
jp
pop
sbb
add
push
out
xor
jnp
mov
imulb
call
mov
cmp
add
dec
sbb
lods
in
loopne
mov
mov
xchg
int
lds
stos
popa
xor
lahf
loop
inc
mov
or
sub
cmp
push
mov
decl
lds
xchg
bound
xor
mov
nop
or
decl
jl
ljmp
addr16
jg
clc
stos
or
das
ss
jo
shl
loope
call
add
cli
lods
test
sbb
fldl
lcall
add
inc
add
xor
push
xchg
sbb
xor
in
add
fbld
adc
inc
inc
mov
dec
das
cmp
clc
mov
mov
filds
dec
push
pop
divl
xor
xchg
js
ja
ljmp
cmp
not
inc
xchg
scas
out
ss
or
push
sub
mov
pushl
fwait
dec
int3
idiv
cmp
jb
mov
bound
push
fnstcw
xlat
aaa
mov
adc
das
jnp
lods
sbb
jg
pop
inc
mov
cmp
sbb
inc
movsb
outsb
pushf
mov
fldl
adc
decl
pusha
jmp
pop
jbe
out
xchg
mov
les
mov
jmp
mov
pushf
in
mov
fdivrs
inc
cltd
mov
scas
ret
ljmp
xchg
xchg
add
push
mov
test
push
shll
xchg
and
mov
rorb
ror
push
js
clc
push
lret
jmp
movsl
jg
jp
mov
xchg
scas
mov
sbb
inc
fwait
dec
test
mov
adc
pushl
cmpsl
addr16
inc
imul
mov
mov
or
dec
sti
dec
jp
scas
mov
mov
lret
lods
or
imul
adc
jg
xchg
fildll
jb
pop
insb
inc
and
out
push
or
pop
cld
stos
pop
jns
adc
clc
clc
lret
fsubrl
popa
movsl
sar
sbb
in
or
pop
jg
in
or
nop
cs
inc
jmp
xchg
mov
or
imul
ljmp
mov
jno
fisubs
inc
mov
stos
sbb
inc
cmpsb
and
add
decl
das
add
test
sbb
ss
mov
jg
clc
push
icebp
out
insl
sub
imul
es
loop
bound
jg
mov
sbb
loop
and
scas
fbld
push
cli
fisubrs
jg
je
sbb
cli
in
adc
ja
out
cltd
push
stc
mov
sbb
mov
divb
sub
mov
and
or
fcomip
pop
or
mov
pop
frstor
mov
add
adc
decl
test
das
testb
mov
cmp
pop
sarl
push
cmp
lds
jmp
test
add
dec
fnsave
sub
adcl
fcomp
cmp
pop
mov
cmp
sub
xor
hlt
cmpsl
sarb
scas
andl
mov
decl
cmp
dec
mov
dec
filds
dec
mov
ja
pop
add
pop
dec
in
jmp
mov
jbe
push
inc
stos
loopne
sbb
stos
sub
stos
mov
cmp
inc
adc
pop
inc
insb
or
mov
sti
dec
inc
fninit
jg
out
or
pop
outsb
ret
bound
mov
ror
push
jmp
insl
ss
and
push
dec
mov
inc
mov
pop
add
pop
inc
mov
dec
push
ss
decl
mov
pop
sub
rolb
mov
repz
incl
mov
scas
pop
pushf
push
xor
xor
shl
xor
sbbb
loop
pop
roll
jmp
and
ljmp
cli
decl
jns
or
pop
sub
enter
mov
popf
sahf
pop
lods
popa
fs
incl
and
leave
fsubrl
stos
iret
push
subb
jle
popa
add
je
fwait
pop
mov
incl
mov
xchg
xorl
sahf
xchg
dec
dec
ficoms
fimuls
jmp
cmp
addr16
lods
pop
and
je
testl
and
mov
out
sub
xchg
shll
call
fstl
jne
loop
fildl
nop
adc
mov
hlt
dec
test
loopne
pop
lcall
dec
cmp
gs
ljmp
loope
les
sbb
dec
rclb
push
fbld
push
xchg
inc
push
hlt
rorb
push
cwtl
test
add
or
cltd
out
cmpsb
mov
pop
dec
std
test
mov
ljmp
jns
insl
cmpsl
mov
aaa
or
xchg
mov
mov
test
shll
xchg
decl
mov
lods
and
fbstp
stos
pop
add
incl
sbb
fiaddl
pop
cld
xor
mov
xchg
faddl
ret
adc
adc
mov
iret
add
mov
nop
xchg
cld
jne
shlb
and
lahf
loope
inc
jg
and
das
outsl
ja
cld
call
pop
push
test
in
shr
and
ljmp
mov
addr16
jge
sub
sub
jbe
loopne
or
xchg
mov
pop
lock
jmp
jecxz
or
in
mov
enter
sub
orl
lret
dec
push
sbb
call
inc
shll
push
add
fcomps
mov
push
or
mov
in
xchg
jmp
in
pop
lcall
and
js
mov
mov
cwtl
cmp
pusha
dec
sbb
jmp
mov
cs
clc
fisubrl
das
neg
inc
xchg
and
stc
imulb
mov
dec
cmpsl
mov
mov
inc
shrb
pushf
sbb
rorl
mov
rcll
and
xor
sub
outsl
insl
inc
push
pop
test
call
mov
pop
scas
test
orl
mov
decl
daa
mov
adc
dec
bound
loop
xlat
sbb
fnstsw
test
jmp
das
pop
icebp
imul
jne
sahf
mov
sub
jnp
js
fdivr
ljmp
xchg
std
sarb
outsb
xchg
sub
jnp
sti
fprem1
sub
movsl
mov
xor
incl
pop
imul
stc
xchg
adc
notb
sbb
adc
add
sub
adc
jge
and
mov
cmp
cmp
add
je
cmpsl
xchg
cmp
jmp
ret
int3
and
pusha
xor
pusha
xchg
push
stos
hlt
xchg
dec
sahf
pop
rorl
push
outsl
andl
call
psrld
pshufw
push
jo
insb
idivl
les
cmp
jg
jl
xchg
xchg
sub
ljmp
outsl
pop
mov
daa
fabs
idivb
mov
push
out
or
and
aad
out
or
jg
aam
lock
cmp
inc
fadd
enter
mov
cmp
inc
iret
sub
sub
or
hlt
pop
sub
incl
xchg
mov
sbb
mov
mov
mov
jg
imul
mov
xchg
movsl
pushf
daa
test
jo
in
fists
sub
fmulp
push
mov
jmp
dec
pop
push
dec
add
xor
jae
add
pop
pop
mov
movsb
int3
adc
je
jmp
add
xchg
and
mull
stos
int
mov
call
or
roll
push
ficompl
sub
leave
xlat
push
lahf
rorl
ffreep
push
rcll
cli
imul
dec
fadds
popf
gs
add
or
xor
fcomps
aas
imul
mov
movsb
stos
icebp
mov
out
ljmp
inc
mov
jmp
cli
lods
stos
push
mov
mov
xchg
add
push
or
movsl
vcvtsd2si
push
mov
lods
in
int3
subb
mov
ss
lahf
push
cltd
push
dec
adc
or
cwtl
add
ds
mov
test
leave
icebp
fucomip
pop
sub
mov
jns
imul
testl
mov
jmp
incl
cld
mov
xor
or
fwait
add
lcall
daa
sahf
xchg
loope
lahf
ja
scas
mov
inc
imul
clc
adc
dec
mov
call
xor
jae
scas
mov
jne
pop
add
cmp
mov
mov
movsl
ja
sub
jg
cld
xchg
into
fsts
test
mov
jg
mov
jecxz
pushl
push
sarb
pop
inc
rcrl
mov
loop
in
iret
jnp
pop
nop
addr16
cld
cld
or
ss
leave
adc
adc
dec
rolb
fcompl
lcall
and
jo
insl
or
scas
sub
mov
imul
adc
stc
in
sbb
mov
mov
ja
inc
jle,pn
insl
fidivrs
imul
les
fmuls
arpl
loop
fs
and
push
pop
mov
test
scas
or
adc
ds
cld
sub
jecxz
call
lds
push
scas
mov
mov
into
xor
push
out
sub
push
mov
pop
adc
jae
cwtl
jbe
mov
outsb
cltd
shlb
jbe
aad
and
mov
test
pushf
push
cmp
ja
lahf
push
mov
lcall
push
bnd
test
insl
inc
or
mov
pop
in
mov
arpl
rcrl
std
imul
cmpsb
sbb
enter
ss
push
cltd
test
mov
dec
jl
adc
dec
or
jns
mov
sarl
idivl
xlat
dec
test
cld
pusha
add
xor
stos
push
sbb
add
outsl
cmpsl
outsb
lret
pop
mov
popa
jmp
in
movsl
dec
or
ljmp
stos
data16
jmp
xchg
inc
scas
je
pop
fcoml
add
xchg
aad
ret
add
incl
dec
xor
repz
andl
loope
adc
xchg
xchg
sub
js
push
xchg
jmp
mov
lret
lock
fisubl
movsl
ret
fnstsw
jl
jns
testb
es
sbb
lcall
jmp
sub
xlat
out
andl
xorl
push
jg
lcall
stos
or
adc
mov
in
push
cmpsl
mull
inc
cmp
rolb
outsl
call
dec
sbb
stc
mov
inc
sub
pop
mov
xchg
jmp
mov
popa
inc
cmp
call
push
cltd
fs
ret
sti
js
jns
ja
imul
inc
or
jmp
mov
and
or
loope
stc
mov
mov
lcall
out
xchg
sub
hlt
mov
ss
cmp
js
inc
sbb
aaa
pusha
jmp
and
test
mov
loopne
ljmp
int
pop
pop
mov
jg
cmp
cli
arpl
insb
popf
idivl
or
ss
and
jg
jl
scas
pusha
pop
push
imul
lea
jmp
jp
into
push
stc
sbb
sahf
lret
cltd
jbe
inc
lret
in
mov
inc
lock
pop
xlat
jno
ret
jg
call
jnp
int
sbb
je
icebp
cli
sbb
ficomps
scas
mov
cli
ljmp
inc
push
dec
pushf
cmp
cs
pop
cmp
or
jg
test
std
sub
ljmp
aaa
cmpsb
je
ret
enter
movb
lcall
addr16
dec
and
and
cmp
jnp
pop
loopne
les
pop
stc
mov
or
jmp
sbb
push
in
jecxz
test
pusha
jae
push
push
jg
popa
cmp
cs
pushl
ss
ret
aad
push
mov
je
sbb
aas
stos
mov
mov
lock
mov
pop
lret
int3
bound
movsl
cmp
dec
lcall
jp
gs
mov
push
aas
cltd
aad
sbb
in
ljmp
dec
sti
ljmp
mov
mov
jg
cmp
push
xor
add
rorb
orb
out
jg
pushf
in
mov
ss
call
lcall
test
dec
or
mov
sub
ret
mov
fistps
or
arpl
out
dec
ds
sub
test
mov
pop
fsubl
test
pushl
leave
mov
aad
setne
jbe
pop
pop
mov
pop
and
xchg
dec
sbb
call
in
push
addr16
pop
cmpsl
adc
sbb
pop
jp
data16
aad
stos
mov
stos
xor
jge
cmp
call
in
jge,pn
call
xor
jmp
movsb
jb
call
inc
dec
call
std
repz
mov
dec
scas
jl
cmp
mov
cmp
out
mov
incl
lret
xchg
mov
mov
sbb
dec
lret
add
ljmp
mov
push
in
inc
sub
js
mov
jne
ljmp
mov
leave
addb
cmp
xchg
push
add
cmpsb
dec
orl
sub
fwait
mov
and
push
dec
sbb
popf
dec
repz
iret
cld
and
cld
cmp
mov
or
xchg
andl
in
inc
ficompl
aad
pop
jmp
sub
jp
fadds
push
or
xchg
daa
sub
fs
jmp
outsl
sbb
jo
xor
add
jle
push
mov
cld
pushl
xor
mov
or
mov
push
arpl
push
jb
push
mov
das
je
imul
and
pop
decl
cmp
sub
mov
dec
xchg
addr16
cmpsl
cld
and
push
jbe
mov
push
int3
inc
push
push
in
jmp
and
fcompl
adcb
jne
and
mov
mov
loop
inc
add
lret
loop
incl
ljmp
movsl
push
iret
sbb
inc
enter
pushf
inc
mov
jmp
mov
fmulp
mov
mov
incl
out
jmp
xor
or
mov
mov
push
bound
mov
clc
fisttpl
xor
pop
mov
and
pop
mov
push
fcom
xchg
incl
inc
shll
ss
popa
inc
jp
mov
or
push
fcomps
push
adc
jmp
jle
bound
jge
scas
mov
xor
popf
pop
push
xchg
mov
cmpl
clc
ljmp
loopne
jno
mov
mov
dec
ficoms
jmp
push
cmp
aad
jae
dec
in
mov
imul
dec
in
fdivrs
mov
rclb
shr
push
out
andl
adc
gs
lcall
cmp
push
xchg
xchg
movsb
cmpl
dec
mov
incl
mov
movsb
cmpsl
cwtl
fadds
shll
gs
test
jg
aas
pushl
sahf
push
rorb
xchg
out
inc
movsb
push
call
in
inc
cwtl
out
and
scas
call
mov
fcoms
das
cli
incl
orb
rorl
ret
stos
loope
pop
cmp
mov
fsts
incl
ret
mov
jo
inc
sub
ljmp
add
pop
jmp
add
shrl
push
movsb
sub
add
mov
not
loop
add
je
insb
ljmp
mov
add
mov
sbb
imul
sub
scas
push
test
jae
inc
cs
add
adc
enter
xchg
repnz
dec
cmp
ficompl
incl
and
or
jmp
inc
movsb
mov
mov
scas
cmp
push
dec
adc
fsubs
idivl
mov
xor
mov
push
mov
sub
fsubrs
mov
mov
cmp
out
xor
leave
adc
sbb
pop
dec
pop
out
and
pop
cmc
ljmp
outsl
lahf
mov
push
imul
push
clc
call
test
and
mov
inc
mov
jb
movsl
lea
movsb
in
aad
int
call
iret
cmp
mov
sbb
jae
sub
xchg
aam
rcll
pusha
insb
push
dec
test
mov
pushl
movsb
aad
adc
rcrl
mov
bnd
jmp
shlb
lcall
aas
add
cmc
mov
fwait
pushl
mov
mov
pusha
pop
nop
mov
loop
push
mov
test
ljmp
xchg
xchg
or
out
adc
adc
idivb
int
mov
jg
adc
aad
mov
mov
sbb
fcomp
pushf
jbe
lret
sub
sub
and
or
jmp
es
leave
rcl
cmp
push
xlat
mov
ja
and
aaa
jbe
test
in
ret
ljmp
lret
add
push
jbe
pop
sub
iret
stc
movsb
daa
scas
mov
and
cmpsb
jmp
xor
inc
xchg
xlat
rorb
sbb
push
mov
adc
push
jle
xchg
jbe
jmp
push
and
in
shll
add
add
jge
ljmp
call
jecxz
adc
ret
out
outsl
add
stos
adc
outsb
dec
and
scas
ret
das
sar
xchg
daa
inc
adc
inc
fisubrl
movsb
jnp
imul
in
adc
lcall
hlt
pop
testb
mov
add
incl
push
mov
inc
cmpsl
lret
sbb
nop
ljmp
push
stos
cli
call
push
shlb
pop
imul
jle
jle
push
out
xchg
cmpl
add
jmp
adc
add
sti
lods
stos
inc
aaa
jb
decl
int3
or
in
les
add
push
adc
mov
call
jge
mov
and
inc
inc
jmp
cmpsl
jecxz
dec
pop
add
stos
dec
call
insb
imul
adc
pop
pop
adc
xor
test
jo
lcall
mov
mov
inc
xor
xchg
scas
inc
push
xchg
call
mov
stos
sub
jb
jge
pop
int3
jp
decl
call
xor
fmull
or
sbb
xchg
stos
mov
jge
pop
push
xor
pop
out
lret
add
test
jbe,pn
ljmp
stos
aad
inc
and
mov
loop
inc
push
jg
mov
in
test
mov
and
xor
lahf
jge
xor
int3
pop
xlat
xor
mov
outsw
mov
and
pushl
mov
xlat
mov
mov
subl
lcall
or
imul
and
mov
jp
loopne
sub
sbb
dec
pop
dec
inc
test
rorb
clc
incl
mov
ds
dec
sub
sub
ljmp
out
jle
add
call
adc
xorb
nop
adc
cwtl
xor
or
inc
std
sar
fwait
lcall
sbb
cmp
aaa
adc
ljmp
and
xor
aaa
dec
sar
jle
shll
call
shl
mov
jle
sub
cmp
cmpsl
daa
sbb
dec
sbb
or
pushl
mov
jl
nop
xchg
rclb
push
pop
pop
cld
jle
pop
mov
sti
sbb
decb
fs
or
in
pushl
out
xor
pop
push
xlat
add
popl
add
ret
sbb
lret
xchg
jo
xor
pop
sub
push
add
mov
out
jmp
aam
pop
test
cmp
jns
loope
push
push
popf
popf
lods
lea
pop
enter
add
scas
jno
jmp
das
flds
pop
pop
add
test
pop
fnsave
cmc
jbe
add
ljmp
jmp
jge
popa
popa
movsl
xchg
mov
shlb
outsl
sbb
adc
cs
in
sbb
pushf
lods
dec
adc
sbb
fwait
mov
sub
xchg
inc
xchg
stos
push
gs
inc
out
add
in
mov
push
inc
cmpsl
notb
sbb
nop
cli
xor
hlt
call
add
push
lret
pop
ja
dec
dec
icebp
mov
xor
mov
incl
cmpsb
out
cli
mov
iret
pop
cld
mov
cs
jne
push
mov
out
mulb
pop
mov
cmp
cmpsl
lea
push
in
adc
mov
cwtl
mov
icebp
leave
jg,pt
insl
std
xchg
inc
push
and
push
lcall
das
leave
jle
sub
pop
adc
push
or
js
mov
gs
mov
fiadds
cmp
mov
mov
pop
lds
fs
push
jge,pt
cvtpi2ps
or
ljmp
cli
incl
int3
jmp
mov
nop
inc
sar
dec
inc
imul
xor
sub
lcall
stos
bound
mov
dec
jne
jle
push
mov
dec
push
jns
incl
mov
pop
and
xchg
mov
xchg
lret
and
lods
ss
call
rcl
adc
cmp
lds
shrb
sub
daa
mov
pop
mov
decl
push
dec
mov
lods
push
pop
mov
fdivp
push
jg
fists
mov
pop
mov
bound
jmp
in
jp
lods
les
gs
cmp
js
test
jns
hlt
fsubs
in
incl
popf
lahf
call
mov
or
push
outsb
jmp
fmuls
jno
out
inc
mov
push
icebp
cld
in
scas
cli
call
pop
sub
cwtd
or
notb
xchg
fcmovnb
sub
mov
lcall
or
lret
in
xchg
pop
mov
mov
jb
and
std
daa
sub
je
loope
fs
xlat
xor
xchg
jmp
push
mov
push
jg
lock
cmpsl
movsl
adc
in
jle
fdiv
jmp
into
fsubrs
les
in
jmp
lahf
into
test
cwtl
fildl
movsb
loop
fimuls
loope
lcall
call
add
orl
dec
jg
icebp
and
and
lods
test
ja
aaa
nop
xchg
mov
lret
xchg
dec
inc
lock
dec
mov
decl
cli
mov
mov
aam
adc
pushl
fwait
mov
imulb
jg
in
fsubl
inc
xor
jae
push
sti
fisubs
jmp
nop
pop
hlt
mov
loopne
sub
fists
push
imul
mov
pushl
rcrl
xor
ljmp
cmp
or
xor
ja
jg
vmovaps
mov
or
imul
fwait
push
and
ret
mov
and
lahf
dec
mov
cld
in
aaa
ds
push
pushl
and
negb
add
cmp
movsl
aam
rol
call
pop
pop
lock
fsubrs
add
push
shll
aad
gs
or
nop
jnp
test
mov
inc
cmp
dec
test
ljmp
daa
jmp
movsl
sbb
inc
cmpsb
jg
popa
mov
or
imul
dec
incl
aaa
fisubl
mov
jo
cmpsl
sub
outsl
decl
jmp
jno
adc
mov
arpl
pop
mov
or
sbb
loop
pop
loopne
rol
call
fiaddl
add
sbb
mov
mov
and
das
cli
scas
movsl
adc
daa
mov
push
mov
lret
ja
mov
push
sar
push
cmp
sub
inc
cmp
mov
pop
cs
sbb
lret
mov
decl
ffree
sar
mov
jae
pop
xchg
in
shlb
test
pop
lock
ljmp
jl
push
push
call
dec
arpl
js
leave
sti
outsb
push
dec
jbe
out
ret
lcall
adc
repz
ret
sbb
pop
dec
aas
inc
loope
mov
jg
into
pop
dec
mov
jecxz
std
cmp
gs
jl
xchg
push
inc
adc
lcall
push
lods
push
lahf
movsb
sub
mov
sbb
mov
mov
cmp
inc
ret
mov
add
adc
mov
pop
xlat
rcll
cmc
lcall
dec
or
gs
xor
gs
fdivs
pop
dec
inc
mov
or
jmp
fisttps
adc
mov
and
mov
dec
jl
mov
call
pop
inc
in
fiaddl
jae
test
subl
nop
jg
cmp
dec
pop
push
cmc
pop
int
mov
cli
daa
mov
sub
pusha
pop
aaa
sub
rorl
pop
mov
sbb
add
loope
cmp
daa
jle
jg
imul
adc
mov
addl
mov
imul
decl
push
inc
mov
add
jb
mov
fcmovu
rorl
sbb
mov
dec
pop
sbb
mov
std
ss
in
divl
push
fdivrp
insl
pop
inc
xchg
stos
mov
mov
stos
imul
xor
je
mov
incl
lds
dec
add
cmpsl
pop
lods
stos
mov
pop
stos
aaa
lcall
loopne
sbb
jmp
jae
mov
jmp
fsubp
mov
subb
stos
test
fistps
xor
push
push
inc
lds
mov
sbb
mov
jns
mov
int
or
mov
push
test
pushl
add
cltd
dec
pop
shr
out
popf
cwtl
add
mov
idivb
push
stos
clc
dec
insb
clc
call
mov
mov
cwtl
negl
xor
inc
push
lods
pushl
push
lea
mov
mov
mov
andb
push
pop
jp
scas
clc
ljmp
mov
jp
lcall
mov
sub
jmp
lret
imul
xlat
dec
sub
jno
push
int3
nop
and
sbb
cmp
pushl
stc
lret
sahf
adc
and
fnsave
in
sbb
cld
fs
jmp
pop
sarl
imul
cmp
test
orl
mov
adc
dec
int3
pushl
lcall
push
inc
mov
dec
fisttps
idivb
mov
push
sub
lcall
or
xchg
pop
outsl
notl
push
pushf
cld
mov
fistps
mov
add
dec
aad
pop
cmp
add
mov
pop
cs
push
hlt
push
dec
sub
and
inc
popf
cs
hlt
add
pop
push
pop
std
cs
adc
fwait
inc
hlt
xor
fcmovu
in
repnz
push
xchg
pusha
loope
lock
movsb
push
mov
incl
daa
xor
xchg
or
or
jp
jnp
icebp
in
sbb
call
dec
xchg
rcl
iret
pop
pop
push
movsb
popf
mov
std
jae
cmpl
push
mov
dec
pushl
adc
loop
sub
and
mov
sbb
inc
iret
test
mov
aad
incl
adc
jnp
push
inc
insl
lahf
jge
arpl
daa
sub
push
pushl
stc
out
mov
popa
fwait
push
sahf
pop
bnd
push
jo
sub
ret
test
mov
das
add
stos
mov
fadd
push
add
jg
lods
dec
jbe
hlt
jle
int
xor
add
mul
cli
inc
or
inc
mov
call
jo
test
imull
fucompp
jnp
sbb
mov
mov
incb
stc
clc
dec
xor
push
cld
aas
and
pop
movsb
lcall
sbbb
ljmp
ficoms
fstpt
mov
sub
subl
xorl
dec
std
ja
clc
decl
push
mov
push
mov
nop
or
insl
call
pop
loop
or
pop
xorb
imul
adc
and
dec
fists
into
js
in
divb
cmc
push
test
sahf
jb
and
fldl
clc
mov
rorb
cmp
xchg
pop
idivb
cmp
xor
xchg
push
ja
scas
pushf
ficompl
lret
push
jbe
filds
flds
inc
les
int
mov
cmp
or
ljmp
jg
sbb
push
sbb
mov
and
xlat
pushf
jbe
mov
inc
fldl
dec
mov
repnz
jmp
in
dec
scas
jl
aad
popf
je
mov
mov
clc
call
fimull
or
add
dec
sub
xchg
clc
out
cli
jmp
or
std
repnz
dec
push
nop
add
stos
in
call
outsl
cli
jmp
mov
and
loopne
mov
mov
call
sub
call
lock
sbb
fwait
inc
movsl
xchg
fistpll
in
push
jo
fdivr
ljmp
loop
out
ss
cmp
mov
mov
sahf
jg
add
cltd
sbb
lcall
icebp
ret
adc
cli
incb
cltd
pop
or
cmp
lods
add
aas
push
iret
clc
pop
jmp
jb
sbb
test
mov
shlb
mov
pushl
adc
pop
imul
jmp
cmp
incl
jg
fs
push
or
cltd
xor
dec
xor
mov
or
loopne
push
add
add
cmp
sub
push
loopne,pn
movsb
dec
in
inc
jg
pop
push
jge
xchg
add
pop
pop
insl
je
popf
arpl
cli
jl
jo
sar
jmp
inc
ficompl
repnz
or
jl
mov
mov
lods
ja
call
clc
inc
in
ficoml
sub
lock
enter
rorl
movsb
jle
sar
call
dec
andl
idiv
adc
jns
mov
sbb
push
movsl
jmp
inc
jg
inc
inc
xchg
jbe
mov
daa
data16
mov
nop
lcall
push
add
pop
stos
push
jns
mov
test
cs
bound
inc
push
add
sub
jmp
mov
add
pop
outsb
and
pusha
jo
mov
rcr
movl
mov
fcomip
icebp
adc
add
cmp
test
dec
jns
push
pushw
mov
in
daa
sbb
pop
fnstcw
cmp
dec
popa
xlat
jno
fcmovne
ljmp
or
incl
jp
test
das
dec
pusha
insl
dec
pop
fidivs
pusha
jne
loope
ss
push
sar
mov
push
sub
or
divl
repnz
ja
push
enter
pop
loop
movsl
sbb
mov
adc
cltd
inc
arpl
out
push
call
pushl
shrl
rorl
dec
fcmovnbe
enter
push
jp
inc
sub
push
jmp
insl
mov
push
fcomps
dec
push
xor
pop
lods
mov
inc
mov
in
dec
arpl
int3
sub
pop
out
inc
arpl
adcb
insl
imul
add
dec
cmp
cmpb
loop
dec
jb
cmp
mov
cmc
xlat
jecxz
mov
xor
mov
jne
and
test
cmpsb
cltd
sbb
mov
gs
scas
sbbl
dec
sbb
or
pcmpeqw
dec
ret
in
xchg
sub
mov
jecxz
mov
push
jge
adc
xor
pop
sub
sub
cmp
fldt
loopne
cmp
and
lcall
sbbb
sbb
push
fwait
test
insb
aaa
clc
mov
ja
ret
test
cmp
mov
inc
in
aaa
popa
inc
inc
mov
pop
cmp
and
cmc
mov
data16
fdivrs
ljmp
fs
mov
repz
scas
stos
mov
in
in
and
cmpsl
xor
mov
mov
jl
dec
inc
dec
jno
jmp
incl
out
addr16
popa
or
jb
into
sarb
xor
std
push
mov
xor
lcall
fs
mov
cltd
data16
daa
jmp
lods
add
xor
xchg
paddd
into
es
and
call
inc
hlt
stos
mov
xchg
hlt
loope
jbe
pop
add
shlb
xor
mov
mov
mov
push
int
mov
push
fsub
lahf
cmp
pushl
gs
or
aad
ficoml
xlat
clc
jns
push
xor
xchg
loopne
pop
xlat
cmp
decl
push
add
and
pop
xor
push
clc
push
imul
jl
cltd
add
push
add
lea
je
ds
jecxz
sub
incl
dec
mov
xchg
insb
dec
inc
jae
xor
mov
cmp
cmp
push
incl
out
cmp
aad
xor
and
addr16
dec
ljmp
fldl
dec
and
cli
add
push
mov
out
push
stc
cltd
enter
mov
and
add
sbb
ljmp
jno
fistpll
inc
jnp
clc
test
inc
ret
push
into
sbb
push
ljmp
cmpsb
aam
and
xchg
decl
ret
or
pop
pop
leave
mov
sub
lcall
popl
jg
int3
ds
stos
adc
mov
mov
jmp
dec
push
inc
inc
mov
dec
data16
and
inc
mov
add
mov
cmp
call
mov
xchg
stos
imull
add
arpl
loopne
arpl
pop
rolb
xchg
ljmp
pop
es
sbb
dec
ss
sbb
outsl
lea
push
inc
faddp
inc
xor
mov
loop
sbb
ficoms
fisubs
adc
mov
fistps
adc
or
nop
ss
sahf
ficomps
je
orb
sub
mov
sbb
scas
jge
cmp
outsb
mov
and
mov
insl
loopne
hlt
add
mov
mov
ret
mov
mov
cmp
xor
push
jecxz
mov
rcll
push
mov
push
test
push
lret
push
popl
pushf
push
pop
and
push
push
shll
ss
jle
add
lahf
mov
dec
mov
xchg
add
jnp
mov
mov
cmp
dec
xchg
sbb
call
aas
lods
dec
jmp
arpl
cmp
in
stc
repz
fcoml
ljmp
mov
in
ljmp
dec
or
std
cmp
fwait
out
cmp
mov
cmp
call
bound
dec
jmp
fsubrs
stos
adc
ljmp
push
int
mov
rclb
xor
rorl
and
xchg
adc
into
repnz
decl
cs
into
xchg
popf
fsubl
dec
out
out
adc
data16
add
test
push
cmp
mov
inc
fildl
fsubs
push
repz
decl
ss
jns,pt
adc
add
cmp
inc
movsl
aaa
mov
pop
mov
out
sbb
jg
movsl
add
int
fs
stos
ds
dec
pop
mov
in
pop
sarb
cmpsl
dec
pop
test
fs
decl
ror
sahf
add
out
int3
fld
movsl
push
pop
scas
cmpsb
int3
or
shll
jmp
mov
jb
sbb
push
xor
add
mov
adc
cmp
jge
lcall
adc
mov
sub
rolb
rcll
mov
mov
dec
stos
pop
adc
dec
in
cmp
je
loopne
cmp
mov
and
pop
in
std
sub
jmp
cmpsb
mov
mov
sbb
stos
inc
bound
add
mov
add
decl
add
sbb
lods
adc
ljmp
out
mov
dec
out
push
sbb
cmc
jmp
mov
ret
mov
jge
add
push
iret
add
xchg
mov
cmpsl
incl
jp
out
or
insb
xor
xchg
jmp
ficompl
fnsave
out
lds
lods
in
aam
add
sbb
xchg
test
movsb
push
fs
push
jns
jp
cltd
fdivr
aam
mov
ljmp
test
push
cwtl
inc
outsb
scas
xchg
fisubrl
xor
jl
fisttpll
fdivs
out
sti
sbb
fnstsw
call
test
pop
dec
add
shl
cs
shrb
lcall
jge
pop
negl
mov
push
sub
push
sub
addl
inc
fs
or
fs
scas
decl
add
sahf
sub
and
sub
mov
pop
jo
das
xor
dec
sbb
aas
lock
pop
sub
ds
cmp
jp
xor
ljmp
xchg
or
leave
jno
inc
call
scas
push
inc
jl
mov
pushf
sub
adc
fldcw
mov
jne
push
movzbl
imull
adc
adc
jmp
push
or
je
sbb
mov
add
mov
sbb
jmp
pop
movsb
out
insl
test
dec
test
out
pop
jmp
pop
in
fcmove
rorb
into
imul
push
jae
fs
hlt
xchg
push
hlt
xchg
clc
xor
inc
mov
dec
popa
xor
inc
mov
mov
push
push
loopne
popa
jle
decl
cmp
fisubrl
and
sbb
loop
and
outsb
push
call
jecxz
or
incl
imul
mov
or
cmpsb
sti
xchg
das
in
jne
cmpsl
mov
jg
add
pop
popf
cwtl
mov
imulb
idiv
lods
shr
lods
sbb
pusha
xchg
sub
jl
into
push
scas
lcall
aas
daa
xor
cmc
mov
ljmp
hlt
or
ljmp
pop
jns
pop
divl
hlt
cs
or
ret
je
pop
sub
or
fidivs
xor
lret
lods
lcall
test
call
xor
mov
mov
lahf
data16
and
aad
lcall
lods
sub
mov
adc
xchg
roll
outsl
mov
lds
das
test
call
pop
jno
pushf
out
mov
xorb
push
lret
mov
cmc
sahf
pop
sub
jg
jmp
jbe
sbb
pushf
into
int3
fs
loope
xchg
leave
lds
dec
js
mov
jns
popa
loopne
sbb
xchg
fidivl
es
hlt
dec
repz
jl
mov
stc
dec
pushl
xor
call
lds
idivb
daa
cld
mov
jb
popa
lcall
sbb
rorb
cmp
or
fcomi
int3
nop
faddp
test
das
clc
lcall
pop
dec
push
mov
push
pop
lods
sub
or
jp
fs
inc
xor
insb
cmp
loope
xchg
pushf
push
xchg
pushf
jle
push
push
scas
outsb
loopne
jle
pop
pushf
cmpsb
jge
sbb
decl
scas
jl
popl
sub
loopne
shr
xchg
inc
lret
sbb
jmp
stc
jns
push
lret
and
cmpsb
neg
dec
or
scas
call
push
and
mov
leave
adc
jp
loop
mov
ljmp
loopne
cmp
sbb
rorb
xchg
push
sti
sbbl
fdivrp
mov
push
mov
aam
cli
add
pop
xor
sahf
xchg
loope
call
decl
lret
imul
mov
lahf
cmpsl
dec
dec
movsl
or
xchg
pusha
sbbl
or
lcall
bound
xchg
arpl
jle
push
iret
jbe
in
mov
xchg
mov
test
mov
fadds
mov
and
mov
dec
push
movsb
mov
inc
clc
mov
inc
mov
and
cwtl
lods
std
aaa
stos
rol
mov
pop
pop
popf
push
jns
pushl
lea
add
inc
pop
fisttps
fiadds
sbb
call
cmp
push
pop
lods
mov
fldcw
xchg
sbbl
stos
not
sbb
cs
and
fcomps
pop
adc
loopne
insl
icebp
das
xor
fbstp
sarb
test
push
outsl
push
adc
jp
jge
jne
test
decl
adc
cmc
rolb
sbb
out
out
or
dec
scas
add
mov
out
jecxz
push
xor
incl
xchg
cli
sub
mov
aaa
push
mov
inc
rolb
or
sbb
cmp
xchg
push
insb
jge
add
arpl
xchg
mov
jae
call
divb
arpl
testl
xchg
inc
jg
ficoml
add
mov
popa
cltd
pop
dec
fsubs
popf
pusha
cmc
adc
paddusw
cmpsb
mov
in
lcall
mov
mov
ds
xchg
mov
mov
mov
jmp
into
stc
mov
mov
imul
in
hlt
aaa
pop
inc
pushf
cmp
mov
mov
adc
jae
mov
ret
xor
outsb
test
jg
sbb
lods
repz
imull
data16
fdivl
call
movsb
dec
xor
pop
hlt
jg
lret
push
ftst
rcll
push
jle
pop
es
mov
jmp
shlb
rolb
repnz
je
and
jne
pop
sbb
push
fbld
roll
out
aas
cltd
mov
pushl
scas
into
sbbl
cwtl
sub
testb
mov
sbb
ret
movsl
mov
dec
jle
cmp
push
xor
fidivrs
fisttpll
cmp
add
orl
push
outsl
jl
fldl
jmp
jb
std
cmpsb
add
inc
mull
mov
cmpsb
scas
mov
cmp
mov
jecxz
pushl
jns
mov
mov
xchg
jbe
int3
sti
xor
xor
cmpsl
stos
arpl
decl
pusha
lcall
ffree
push
dec
push
push
addr16
pushl
pop
mov
cmp
and
repnz
sbb
andl
mov
incl
mov
xlat
stos
out
ljmp
imul
jbe
cmp
aas
rorb
adc
xlat
sbb
and
jge
cmc
lret
xchg
insb
sub
sbb
cmp
decl
push
aas
scas
jp
outsb
jno
mov
xor
mov
xor
sub
ljmp
or
jb
gs
add
repnz
ja
in
int
movsl
outsb
push
pop
mov
lcall
mov
sub
adc
push
mov
cmpsl
call
mov
inc
es
push
call
unpckhps
cmp
out
xor
into
jo
ja
add
mov
and
shll
inc
scas
sbbl
incl
es
jb
ficoml
imul
xor
adc
and
scas
jmp
iret
loopne
inc
outsl
movsb
mov
outsb
or
lds
in
mov
inc
call
aad
clc
push
xchg
mov
cld
imul
fidivs
inc
call
cmp
sbb
dec
gs
lea
jnp
out
mov
push
incl
sbb
jecxz
cwtl
call
xlat
out
imul
dec
mov
push
das
pusha
pop
test
ss
inc
mov
push
jp
addl
ret
mov
clc
sbb
stos
mov
push
je
xchg
shrb
adc
jmp
jno
xchg
repz
pop
xchg
jg
jp
mov
scas
dec
mov
test
inc
loopne
shll
lods
jmp
xchg
and
pushl
aam
shr
sub
sbb
lahf
lods
and
test
mov
shl
cltd
es
call
pop
fcoml
movsl
and
xchg
daa
ret
aad
leave
mov
idiv
add
jmp
pop
cmc
sbbb
adc
push
rdpmc
nop
clc
ss
push
mov
loopne
test
mov
sti
sarl
xchg
jg
call
cld
jno
rcrb
and
lahf
add
lods
xchg
or
push
out
ljmp
pop
test
imul
js
nop
inc
or
mov
lcall
int
push
lret
sarl
arpl
mov
cmpsl
jae
mov
outsb
or
ja
aaa
xor
and
xchg
sti
mov
and
pop
xor
in
test
or
test
addr16
lea
stc
xchg
nop
sub
pop
mov
ljmp
cli
dec
xchg
enter
push
dec
push
scas
fsubs
and
push
cmp
lock
lcall
jae
xchg
jmp
jmp
shrb
push
imul
jmp
dec
aaa
xor
mov
aas
dec
sub
lahf
push
pop
repz
mov
rorb
or
fisttps
inc
inc
fcoml
pusha
pop
bound
clc
fbstp
fcomps
add
incl
lock
lods
jle
mov
xchg
mov
lahf
sbb
insb
add
jno
lcall
push
shlb
jae
sub
mov
lret
inc
dec
hlt
ret
call
adc
jns
xchg
outsl
clc
les
mov
stos
xor
xor
pop
push
cltd
or
lcall
cmp
les
cmpl
mov
jp
in
jns
ret
incl
mov
or
and
jmp
or
jnp
add
sbb
cmpl
ja
sbb
lds
decl
scas
stos
int
push
ret
push
sahf
add
outsb
imul
push
je
push
cltd
adc
imul
push
ja
xor
dec
jne
imul
dec
xor
icebp
jmp
mov
ret
aaa
cmp
mov
repz
xor
sbb
addr16
fbstp
fidivs
or
loope
push
xor
test
jno
adc
fdivl
inc
test
add
incl
pop
mov
sbb
scas
sbb
jmp
add
in
add
adc
dec
push
dec
imul
bound
repz
sahf
into
roll
pop
js
push
lcall
push
mov
xchg
les
mov
lods
mov
push
dec
inc
cmpsb
outsb
mov
pushl
xchg
push
mov
dec
jae
jmp
mov
mov
push
std
mov
call
fs
in
add
fwait
pop
push
jp
mov
call
mov
lea
xchg
mov
jns
or
pop
and
mov
pushl
je
jmp
pop
fxtract
dec
cs
adc
in
jmp
push
or
outsb
hlt
popa
sbb
les
jnp
outsb
jns
xchg
dec
pop
pop
icebp
pushl
mov
add
sbb
jp
lret
push
aaa
cld
incl
fidivl
inc
aaa
cwtl
lock
dec
leave
pop
stos
xchg
mov
scas
jle
pop
mov
ljmp
xor
repnz
icebp
push
jae
pop
mov
inc
xor
pop
mov
adc
rcrl
lods
es
mov
push
cld
jae
incl
dec
push
in
outsl
inc
bound
into
inc
test
imul
adc
cmp
incl
hlt
xchg
sub
cs
push
hlt
dec
add
ret
mov
lcall
incl
xor
imull
in
jl
xchg
cmp
cmp
inc
push
and
inc
or
or
mov
and
mov
cwtl
pushf
test
lock
jg
adc
cmp
xor
jp
repnz
popf
ret
add
mov
xlat
dec
pop
call
sbb
hlt
sti
shr
xsha1
cmpsb
lret
andb
icebp
jle
lcall
popa
jmp
push
lods
jmp
pop
mov
cli
inc
jl
or
add
sub
xchg
pop
pusha
xchg
das
jge
push
adc
push
ljmp
push
out
je
add
test
sahf
movsl
push
dec
jle
push
jmp
push
or
aad
test
fsubrs
and
pop
bound
xchg
out
ljmp
cmp
fists
aas
pop
or
mov
out
iret
sti
inc
loopne
fdivs
xchg
mov
mov
pusha
in
push
inc
xchg
jno
jns
mov
dec
aas
sbb
sub
adc
adc
pop
dec
mov
push
dec
fistps
mov
js
incl
aas
mov
cli
lock
mov
lahf
js
jmp
or
ljmp
push
ss
out
mov
jae
icebp
sbb
mov
dec
stos
fwait
cwtl
outsl
das
cwtl
dec
jmp
incl
lret
jb
enter
scas
idivb
enter
inc
fisttpl
mov
inc
out
mov
inc
adc
cs
cltd
adc
shlb
xchg
push
mov
es
aad
xchg
pusha
sarl
pop
push
daa
mov
push
xchg
or
je
pop
dec
xlat
sbb
and
icebp
iret
test
inc
loopne
popa
popa
cmp
into
rclb
je
shrl
ret
cwtl
call
mov
xchg
mov
insl
jg
jns
repz
lcall
call
loopne
push
xchg
jp
mov
ret
jae
ljmp
stc
push
mov
cmp
nop
inc
fwait
cmpsl
cpuid
jle
xor
and
mov
addr16
jb
mov
mov
mov
nop
and
leave
pop
mov
and
mov
mov
pop
test
mov
push
into
sub
jg
mov
call
or
addr16
mov
mov
cltd
mov
adc
scas
pop
pop
fcos
push
cmp
stos
push
add
das
rorl
mov
push
adc
mov
sbb
lcall
sahf
and
add
jcxz
shrb
int
mov
sub
dec
in
or
stos
xor
pushl
icebp
idivb
int3
sbb
aam
add
inc
dec
mov
mov
ljmp
adc
test
sarb
pushf
data16
or
js
dec
mov
aas
fidivrs
les
in
daa
lea
mov
sub
dec
and
movsb
jns
pop
mov
lcall
dec
daa
pop
je
inc
jp
cmp
jl
pop
ret
cmp
outsl
fisubl
pop
cwtl
into
jecxz
decl
ljmp
cwtl
jp
loop
pop
and
mov
icebp
decl
or
pop
shl
jns
jbe
sbb
jecxz
inc
or
adc
dec
jmp
cmp
or
push
aaa
jmp
add
sahf
pop
dec
sar
cmp
lcall
jns
and
stc
jns
xor
insl
jge
rol
jmp
cld
mov
test
mov
mov
sbb
mov
xor
add
lahf
mov
xor
and
mov
jne
call
ret
mov
cmp
outsb
lret
cmp
jmp
lods
testl
dec
inc
xor
ret
leave
push
xchg
xor
or
sub
pusha
and
and
ljmp
std
ljmp
std
insb
call
shrb
sub
dec
into
xlat
jmp
repz
push
xchg
imul
lahf
cwtl
jbe
ja
jmp
mov
jmp
ja
xorb
push
mov
dec
add
dec
push
mov
fbstp
outsb
dec
cmp
inc
stos
mov
imul
mov
sbb
bound
mov
adc
pushl
aam
and
outsb
push
sub
cmp
push
mov
mov
inc
mov
lret
ljmp
flds
push
lock
jle
mov
cmp
flds
and
ret
aas
jg
mov
mov
dec
cmp
ficoml
adc
jae
addb
pop
mov
pushl
scas
nop
movsb
inc
sub
or
sbb
enter
sub
les
xchg
mov
sub
movsl
mov
cmp
mov
inc
xor
fwait
xchg
mov
inc
cld
ret
pushl
cltd
aas
pop
push
xchg
xlat
shll
loope
dec
cltd
out
scas
fidivrl
pop
vmovdqa
aas
movsl
call
cld
xor
int3
push
aaa
pop
and
mov
mov
cmp
push
std
leave
test
enter
sahf
xchg
xchg
pop
test
pusha
ljmp
mov
add
mov
adc
add
inc
mov
push
mov
call
mov
data16
and
inc
sahf
cmp
stos
jp
dec
out
dec
pop
loopne
into
sarb
ljmp
out
dec
fisttpl
shrb
shll
fnstcw
arpl
push
add
rcrb
pop
inc
lret
fisttps
out
mov
icebp
sbb
sbb
bnd
add
mov
cs
pop
push
jg
pop
mov
mov
ja
add
loopne
fildl
xor
add
lret
add
pop
call
repz
dec
leave
jge,pt
push
outsl
loop
nop
jg
mov
mov
test
jp
int3
cli
pushf
je
decl
dec
and
dec
jmp
shrb
stc
in
subb
pop
lock
fbld
cmp
mov
ds
dec
push
mov
lret
xchg
or
rcrb
das
outsb
scas
ja
lcall
jmp
xor
xchg
xchg
adc
std
sbb
mov
pusha
xchg
clc
out
ljmp
stc
pop
cvtpi2ps
xchg
lahf
aas
lds
ja
out
cli
call
or
push
add
mov
gs
fcoml
aad
mov
outsb
mov
ljmp
xchg
push
enter
arpl
push
fninit
and
mov
pop
dec
dec
bound
jbe
xlat
cmp
add
fisttps
pop
mov
jl
pushf
ficoml
inc
cltd
dec
sar
loop
sbb
call
mov
dec
mov
xchg
xor
orl
lret
out
imul
mov
and
or
pop
pusha
mov
lret
mov
addr16
pushl
movsl
jns
add
int
xchg
mov
hlt
xor
sub
lret
sbb
and
inc
mov
int
xchg
jns
pushf
daa
push
adc
jbe
xchg
out
sbb
in
mov
das
mov
call
or
push
add
sti
push
mov
loope
adc
fsts
inc
jmp
mov
or
insl
enter
pop
and
push
mov
push
sbb
dec
jl
movsl
dec
fmul
fidivl
push
stos
dec
lds
or
and
jle
lcall
mov
xor
xlat
fiaddl
dec
mov
mov
imul
cmp
es
add
xchg
decb
pop
jle
and
stos
test
push
mov
push
stos
inc
loopne
dec
cli
int
add
bound
push
int3
jae
data16
ljmp
ljmp
push
aas
les
jecxz
inc
add
shl
and
sub
inc
imul
and
pushl
movsl
sbb
add
mov
dec
push
test
int3
inc
adc
cmp
in
pop
fcos
push
sub
outsb
push
add
mov
cld
add
lock
or
and
jo
ljmp
ss
dec
xor
ss
movsb
cmc
in
adc
xchg
sub
iret
pop
popf
cmp
jmp
pop
mov
add
mov
sub
xor
inc
scas
fsubl
xor
push
dec
scas
pop
inc
hlt
ficoml
pushf
lcall
decl
nop
mov
scas
xor
pop
and
and
mov
inc
push
repnz
pop
sahf
push
jb
push
xabort
inc
mov
sbb
lods
fsub
jbe
incl
xchg
or
leave
cmp
in
aas
aaa
outsb
aas
dec
ret
jle
sub
fimull
js
cli
jnp
or
cmp
gs
mov
add
xchg
push
pusha
loope
push
jbe
loop
lcall
push
xchg
imul
test
test
imul
lods
je
repz
out
clc
mov
inc
or
or
mov
sbb
mov
adc
mov
fidivrl
adc
orb
out
aas
dec
and
cli
jg
incl
dec
mov
dec
aam
xchg
xor
stc
push
das
adcb
std
out
or
in
xchg
fwait
ljmp
orb
test
call
or
push
shrb
mov
fildll
or
adc
pop
pop
insl
cmp
incl
mov
dec
dec
jp
push
lcall
cmp
decl
insb
jmp
out
movsl
adc
jbe
and
mov
xchg
or
ss
scas
jbe
push
lock
cmpb
cmp
mov
add
xor
das
mov
cld
pushl
std
push
cmpsb
aad
in
lret
mov
sub
mov
mov
and
cmpsb
and
fbld
push
in
loop
pushf
mov
sbb
ljmp
xor
push
mov
or
clc
push
mov
test
ja
mov
jae
mov
test
push
push
movsl
ds
pop
lock
push
pop
jb
enter
cli
sbb
or
call
scas
or
sbb
mov
incl
rclb
test
int3
mov
cs
jmp
sbb
or
mov
pop
pop
dec
or
daa
gs
das
lods
lret
outsb
call
aaa
dec
clc
dec
jp
rcr
mov
pop
xchg
mov
jmp
dec
pusha
pop
lret
and
aaa
jecxz
jmp
iret
dec
mov
cs
add
jmp
nop
adc
sub
sahf
fistl
out
mov
xchg
adc
movb
call
add
push
scas
cmp
inc
cwtl
jbe
and
xor
mov
cmp
cmp
out
add
lahf
fdivs
mov
mov
dec
xor
jnp
and
inc
jmp
test
jmp
xchg
jo
add
xchg
adc
shrl
xchg
or
pop
incl
nop
inc
nop
mov
movsb
sbb
movsl
repnz
es
mov
mov
mov
decl
jb
xor
mov
jb
pop
inc
and
xor
out
scas
xor
gs
jno
mov
or
mov
clc
ljmp
cltd
xchg
mov
pusha
stos
in
out
mov
into
sub
aas
xchg
sar
ljmp
ljmp
adc
xchg
inc
jg
stc
sbb
jne
fistps
decl
xorl
gs
lock
sub
aas
sub
cli
clc
add
stos
jg
jmp
sub
je
mov
sarl
arpl
xor
incl
xchg
xchg
xor
mov
mov
jmp
push
iret
fisttps
jmp
fs
lret
cmp
pop
iret
sub
jecxz
or
xchg
movlps
lcall
mov
imul
jecxz
fucomp
jo
scas
push
jno
sbb
xchg
fdivrs
inc
add
adcb
fadds
push
fsubrl
jl
iret
aam
push
mov
jl
incl
cmp
movsl
mov
nop
fstpl
pop
lock
inc
loopne
call
std
jg
je
or
push
lahf
lods
cwtl
mov
cmp
mov
push
xor
in
loopne
and
push
cld
xchg
cmpsl
pusha
or
movsb
cmp
cmp
push
and
fcmovne
outsl
jne
and
and
insb
mov
mov
lret
xor
cwtl
shll
sub
ret
jmp
cmp
scas
mov
or
decl
aam
shrl
pushl
xor
into
mov
jo
inc
std
leave
nop
cmp
rorb
stc
jns
jno
mov
sahf
sti
fdivrs
dec
enter
ljmp
mov
lods
pop
cmp
or
dec
cmpsl
jne
sbb
jmp
pop
mov
test
iret
mov
sbbb
jae
mov
stos
push
loop
pushl
ds
inc
jecxz
push
mov
into
clc
in
aam
pop
jnp
shl
pop
add
in
jp
xlat
jmp
sbb
sbb
loopne
lahf
add
xchg
out
jle
pop
adc
stos
jmp
mov
fsubrs
lea
cmp
pop
inc
mov
call
call
dec
cli
or
pop
adc
cli
push
push
or
pushf
inc
movsl
sub
jecxz
cmc
fildl
mov
cmp
push
xchg
xchg
stos
push
push
mov
cld
les
out
out
mov
repz
ds
or
push
ljmp
test
in
mov
fstl
push
jns
pop
mov
cmp
lret
inc
shll
jae
xlat
ljmp
daa
insb
inc
repnz
inc
mov
xchg
decl
mov
inc
fidivrl
or
insl
or
sti
jns
test
bswap
inc
sar
pop
cmc
call
push
aam
push
inc
lock
push
cli
mov
shrl
pop
xlat
jmp
adc
sub
mov
inc
out
and
in
mov
pop
adc
dec
cmp
xchg
lcall
dec
into
or
enter
sub
and
xlat
imul
sbb
mov
sub
rorl
or
mov
clc
push
loopne
mov
sub
inc
outsl
inc
loop
cmp
data16
jl
xor
xchg
lods
ljmp
dec
outsb
out
das
ljmp
decl
int3
pop
arpl
mov
xchg
aam
inc
scas
xor
fdivrp
cs
shl
shr
arpl
mov
mov
jbe
and
out
cmp
addr16
cmp
nop
or
xchg
jg
pop
cli
sbb
sarl
adc
out
repz
cld
call
push
pop
jl
icebp
push
mov
out
mov
xor
mov
dec
cltd
sub
cltd
icebp
decl
lock
jecxz
faddl
fidivl
pop
lods
pop
data16
addr16
ret
lcall
push
mov
loope
adc
mov
adc
aad
mov
or
lods
ret
mov
decl
aaa
fldcw
test
sbb
sbb
sarl
pop
movsl
sbbb
push
sub
cmp
mov
sub
mov
test
icebp
insl
adc
xor
cmp
fnstcw
fisttpl
mov
push
call
pop
jnp
jg
mov
data16
cmp
jg
dec
xor
add
push
and
sbbb
std
les
lret
les
lahf
xchg
cs
pop
data16
das
inc
xchg
sbb
mov
mov
popa
daa
dec
adc
lcall
adc
xchg
push
in
ficoms
sub
jmp
data16
scas
cmp
xor
or
ljmp
push
scas
mov
jge
sarl
add
cmp
push
insl
lods
out
in
stos
inc
rcrb
cmp
clc
jecxz
sbb
mov
test
lcall
dec
jp
jge
jg
in
sub
dec
dec
shrl
popa
xlat
dec
pop
pop
sub
incl
push
cmp
ficompl
adc
push
fisttpl
pop
sub
hlt
cmp
gs
sbb
dec
mov
pop
dec
cld
call
mov
mov
pushf
mov
xorl
call
sbb
mov
fildll
and
mov
int3
sti
mov
pop
pmaxsw
daa
stos
ljmp
or
js
jb
add
ja
enter
incl
mov
lock
fwait
and
shrl
movsl
or
fidivrs
int3
sub
jg
stc
and
call
mov
popa
outsb
pop
lds
mov
inc
out
push
ljmp
es
pop
mov
lds
out
test
mov
xor
call
cltd
adc
mov
insb
mov
dec
xchg
mov
in
stc
sbb
jmp
add
decl
jecxz
dec
out
lahf
cmp
pop
dec
mov
movsb
repnz
es
sbb
rcrb
andb
fdivrs
arpl
outsb
cmpsb
mov
stos
mov
jp
sti
cmp
inc
or
out
adc
cmp
fimuls
divl
inc
add
stos
lcall
jmp
push
cli
mulb
jae
push
out
dec
fnstenv
jecxz
mov
add
xchg
inc
jmp
push
pop
pushf
stc
adc
push
pusha
lods
push
inc
sbb
add
sub
pop
mov
dec
dec
cmp
fcomip
cmp
popa
sub
push
xchg
gs
fbstp
inc
aad
xchg
cmpsl
pop
insb
xor
pushf
shll
xor
jns
lds
decl
sub
jne
sbb
add
sub
test
test
arpl
adc
popf
and
jno
add
mov
cs
dec
adcl
and
lret
push
cmp
in
daa
stos
sub
stos
mov
lcall
pushl
popa
stos
data16
cs
xchg
in
jecxz
insb
cmpb
arpl
scas
decl
dec
mov
ds
loope
and
cli
and
test
scas
bound
mov
test
fcomip
sbb
int3
mov
add
aaa
add
mov
repz
and
sbb
movsb
andb
dec
xor
push
mov
mov
call
ss
aas
add
push
adc
push
mov
mov
aam
in
stc
aas
push
jne
sbb
cmovnp
aam
mov
inc
in
popf
mov
in
mov
lcall
dec
cmc
jb
mov
bound
fwait
push
pop
adc
in
and
insl
jecxz
incl
sahf
test
push
cs
xor
loope
lcall
fildll
std
mov
idivl
mov
lret
push
mov
fcomip
fdivrs
add
xlat
test
pop
gs
push
xor
bound
mov
incl
fs
pop
fmull
push
xchg
imul
pop
js
call
xlat
add
aas
mov
jg
jne
call
add
mov
je
dec
sbb
decl
stos
rcrb
rcr
pop
call
sub
aad
add
test
jmp
or
loope
pop
mov
pop
jo
mov
ret
jge
decl
in
test
in
or
xchg
jnp
fnsave
ja
iret
add
and
repnz
jmp
ss
adc
jbe
clc
lods
fwait
xchg
mov
jno
fucomip
adc
imul
shl
mov
gs
pop
cltd
ficoms
sbb
inc
jge
loop
push
sbb
sarb
imul
call
and
shrl
or
jbe
cmpsb
call
test
mov
das
adc
xchg
mov
lahf
pop
jge
lea
jle
shr
mov
into
fcomip
lcall
push
inc
inc
dec
cmp
stos
jno
stc
pop
jl,pt
xlat
push
cli
in
lds
jmp
jnp
pop
shlb
mov
das
nop
pop
cld
testb
cmpsb
movb
add
movsl
insl
in
gs
pop
out
mov
pusha
push
pop
mov
mov
cld
mov
fisttpl
add
mov
push
add
test
add
call
jle
push
sbb
ljmp
dec
fs
rcrl
jmp
xchg
test
arpl
mov
mulb
cs
dec
mov
pop
icebp
int
xor
cmp
mov
pushl
clc
outsb
adc
push
mov
dec
cmp
adc
aaa
call
or
xor
and
jb
or
int3
lret
push
xchg
or
mov
push
xchg
lock
mov
and
daa
mov
push
popa
ret
adc
ljmp
mov
clc
xchg
xor
push
sbbl
fs
xchg
xchg
sar
jmp
mov
add
stos
jl
outsl
pop
jae
subb
and
sahf
sub
std
jg
xor
in
push
out
sarl
movsb
hlt
sarb
pop
or
jecxz
or
xchg
pushl
pop
cmp
in
test
xor
jno
pop
adc
repnz
lret
xor
dec
sub
mov
nop
mov
shlb
cwtl
xor
outsl
ret
fnstsw
stos
incl
jns
jae
xchg
notb
cmp
mov
jg
push
test
push
sbb
std
adc
ljmp
push
sbbl
icebp
mov
or
popa
sbb
jae
std
jae
sti
jp
into
fbld
call
inc
fdivrp
jge
incl
and
mov
push
jo
sub
push
int
stos
xchg
jg
sbb
mov
pop
ljmp
roll
adc
jne
cmp
in
cmp
call
push
aas
sbb
arpl
fcoml
mov
jp
notl
xchg
add
inc
jg
adc
outsl
xchg
cs
and
in
xchg
xor
ja
fldt
inc
cld
xchg
movsl
xor
scas
lret
mov
incb
fwait
push
xor
test
mov
popf
or
mov
orl
inc
fcmovnu
dec
jbe
mov
lock
cmp
pop
insb
jae
add
or
ljmp
push
sub
push
and
jl
in
mov
mov
pop
ret
filds
inc
mov
jae
cmp
inc
shlb
push
cmpb
cmp
mov
gs
shr
shl
incb
jmp
mov
inc
or
jo
les
mov
sahf
lret
divb
and
dec
sub
incl
xor
sahf
push
xchg
das
pop
xchg
loope
daa
fwait
and
shrb
xor
jo
jb
scas
clc
mov
fdivl
push
sub
lcall
ljmp
repnz
pop
pop
mov
dec
decb
into
cmp
repnz
ljmp
call
dec
mov
jle
jnp
cmp
cmp
and
shlb
sahf
push
xor
mov
mov
pop
repz
into
fimull
icebp
pushl
jmp
cmp
mov
adc
imul
dec
setb
popf
ljmp
outsb
mov
push
in
and
sahf
xor
jae
ljmp
call
inc
dec
sar
cmp
out
xchg
mov
dec
fwait
fs
fistps
je
nop
ficomps
mov
push
inc
pop
mov
sub
and
mov
fiadds
pslld
and
test
push
inc
sbb
pushf
outsl
push
fbstp
ficompl
xchg
lods
into
xor
jns
xchg
or
and
cmp
sbb
ljmp
ja
enter
mov
vpslld
imul
insl
das
xor
jle
test
sbb
inc
out
xchg
test
call
cmp
sub
adc
jmp
fisubrl
cmp
xchg
lcall
push
push
out
push
loopne
leave
int3
xchg
push
jno
sub
jmp
and
pop
leave
in
popa
mov
js
push
repz
jae
and
aaa
inc
lock
mov
lds
jg
sub
sbb
cmp
mov
loop
ss
and
rcrl
jle
jbe
imul
ljmp
jno
cs
loopne
test
movsl
push
rcll
cs
call
pop
and
call
push
scas
xchg
stc
pop
movsb
adc
mov
mov
push
lret
popfw
clc
mov
out
lock
dec
dec
dec
aad
mov
aam
sub
icebp
insb
pop
mov
popa
inc
mov
decl
cmp
jnp
jb
call
je
sub
inc
rorb
pop
push
add
cli
inc
push
dec
push
inc
arpl
mov
sbb
iret
imulb
sarb
call
fs
or
aad
jns
std
mov
sbb
scas
sbb
outsb
push
mov
incl
pop
hlt
ljmp
in
out
and
xor
incb
rcrl
aas
ljmp
scas
shrb
fdivr
push
lds
push
xchg
mov
and
testb
incl
cmp
ror
adc
mov
jno
xchg
aam
pop
ljmp
mov
cmp
andl
sub
xchg
lock
cmp
and
sti
jb
push
adcl
push
icebp
sub
sbb
dec
rcl
ljmp
lds
je
push
sub
jl
inc
cmp
xor
add
out
mov
into
lods
lea
int
testl
pushl
test
das
cmp
sbb
shl
jb
aaa
mov
dec
xchg
mov
inc
into
dec
adc
cli
ret
lcall
stos
inc
and
daa
jg
ja
movsb
mov
push
dec
das
sub
jl
mov
outsl
adc
mov
enter
je
push
jl
push
xchg
sbbl
sbb
inc
sbb
int3
or
xchg
lcall
ds
jo
lcall
dec
pop
jge
inc
std
and
sbbb
inc
xchg
xor
lcall
or
vmread
inc
lret
add
jne
sarb
xchg
faddl
pop
cmpsl
into
cltd
jmp
lods
and
test
cld
xor
cmp
xchg
push
mov
sbb
addr16
ljmp
mov
arpl
or
dec
sbb
andb
ficoml
dec
jl
in
test
mov
popf
es
fcomi
fwait
int3
xor
and
fs
gs
xor
incl
xor
sahf
mov
xchg
pop
mov
add
and
fwait
sub
jae
sbb
mov
jmp
adcl
adc
add
dec
das
and
orl
call
push
cmc
rorb
mov
jle
pop
sbb
rcll
mov
dec
lods
decl
lock
and
dec
mov
sub
inc
movsl
cmp
pop
mov
cmp
dec
stos
scas
das
cli
imul
test
dec
das
loope
out
sub
push
push
shlb
ljmp
addb
jp
test
rcll
and
and
lock
lret
mov
pop
mov
cmp
xorl
aas
xchg
mov
push
sbb
imul
and
loope
push
sahf
jl
enter
adc
add
sbb
jmp
sub
dec
mov
mov
imulb
js
sub
jl
lods
jne
pop
dec
xor
lcall
flds
and
sbb
jp
dec
cld
orl
test
pushl
cwtl
loopne
and
sub
xchg
in
orb
std
outsb
inc
and
cli
inc
nop
addr16
jmp
pop
insl
cmpsb
jle
popf
mov
dec
imul
or
pop
sbb
inc
push
jb
scas
test
call
pushf
fistl
addb
sarl
mov
push
fwait
inc
dec
sbb
outsb
or
aaa
cld
lcall
sbb
mov
jno
pop
pop
popa
jecxz
pop
jp
mov
outsb
sub
dec
sbb
jp
and
xor
jne
adc
das
stos
mov
stc
fidivrl
xor
lcall
jecxz
push
xchg
insb
cmpsl
in
div
ret
inc
scas
mov
ret
je
cmp
sbb
mov
cmc
pushl
xor
xchg
sub
cmp
cwtl
push
mov
lcall
dec
pop
loopne
mov
cmp
scas
mov
or
ret
scas
adc
stc
jg
js
jo
fwait
add
insl
rcl
jno
or
lods
cmp
invd
push
out
sub
repnz
ja
out
xchg
add
dec
and
inc
je
repnz
insl
push
pop
cld
pushf
xor
jb
je
mov
lea
enter
je
call
add
loope
mov
call
jmp
lods
iret
mov
aas
pop
shll
je
es
sbb
adc
cwtl
dec
cmp
sub
repz
icebp
ljmp
dec
mov
leave
xchg
xchg
cmc
js
cmp
xor
mov
mov
cmpsb
mov
mov
mov
jns
in
cmpsl
pop
je
cmp
xor
ret
xchg
les
sub
jnp
inc
mov
icebp
or
dec
rorb
and
fmulp
pop
testl
xchg
rolb
dec
into
ds
ja
mov
lahf
jae
test
mov
xchg
or
mov
nop
aaa
or
jmp
shll
call
add
movsb
add
inc
sub
das
pop
xor
inc
pop
outsl
mov
mov
xchg
inc
mov
testb
jne
cmpsb
fbstp
js
int
add
cmp
jb
call
jmp
xor
shll
nop
and
pop
incl
mov
sub
mov
push
das
mov
mov
je
in
ljmp
add
xor
xor
xor
les
testb
mov
mov
addl
xor
incl
jns
xor
lcall
cmp
cli
divl
and
scas
aam
fstpt
sbb
xchg
pushf
jg
addr16
cli
push
add
cmp
xchg
xchg
fbstp
pushf
ret
jo
adc
lret
add
sbb
jmp
mov
arpl
jecxz
into
or
sahf
jnp
scas
call
lods
ror
pop
mov
sbb
cmp
inc
pop
mov
adc
incl
rcll
xchg
xchg
test
std
sbb
jecxz
xor
mov
and
call
dec
int
mov
fs
scas
xor
pop
stos
sub
jns
std
incl
and
xlat
test
push
sahf
push
xor
or
push
std
stos
xor
sub
fisubrl
xchg
mov
hlt
or
cltd
push
scas
add
in
fildll
test
in
in
ljmp
add
jecxz
mov
das
aad
mov
adc
mov
pushl
inc
cltd
cmpsb
xlat
inc
in
jle
sti
cmp
outsl
icebp
ljmp
cmp
call
sub
into
xor
test
push
mov
ljmp
xor
cmp
test
cwtl
xchg
push
push
movb
dec
push
mov
call
out
fs
scas
add
repz
mov
mov
xchg
fwait
xor
dec
shl
pop
jg
decl
pop
jbe
mov
and
out
jo
xchg
mov
cmp
sti
adc
pop
ja
inc
sbb
ds
sahf
daa
and
hlt
pusha
loope
or
hlt
jnp
stos
lret
push
inc
pop
mov
mov
hlt
xchg
dec
jmp
mov
dec
lock
ljmp
pop
in
rcrb
jae
popa
add
test
lock
sbb
stos
imul
mov
or
into
push
clc
jae
jb
add
push
or
push
or
call
std
jmp
mov
cmc
push
fcoml
jns
outsb
shl
mov
mov
lcall
adc
adc
push
sbb
mov
out
and
lcall
js
ficompl
test
fwait
jecxz
enter
repnz
lcall
std
sub
push
and
repz
gs
mov
in
jg
fmull
ja
push
xchg
xorl
sub
ds
xlat
int3
jbe
out
sar
fcomip
aas
pusha
push
add
imul
les
add
call
pop
test
push
push
ret
sahf
push
pop
mov
adc
mov
jp
stos
pop
mov
pushl
lods
enter
jg
je
ud1
adc
fisubs
push
xchg
popf
pop
decl
mov
leave
mov
mov
xchg
xor
jne
mov
lods
bnd
adc
in
pushl
icebp
mov
pop
xlat
clc
std
test
cmc
call
dec
add
jb
mov
ljmp
inc
dec
xchg
xchg
dec
flds
and
fs
rcll
jle
pop
icebp
hlt
popf
cmp
and
fdivs
dec
popf
jns
pop
lcall
cmp
lcall
jg
add
adc
xor
add
std
in
or
sub
js
cmpsl
mov
out
pushl
stc
stc
scas
js
inc
in
mov
sti
mov
cmc
mov
pop
sub
fists
push
leave
stos
cmpsb
shlb
cmp
outsb
jo
mov
push
add
in
fsts
testl
test
orb
add
sar
incl
sbb
push
pop
cwtl
pop
cli
shlb
mov
push
mov
sub
mov
sub
mov
mov
and
sub
sub
add
lcall
stc
pop
notl
rcrb
inc
test
or
lock
decl
sub
push
ja
vcvtdq2ps
jge
jmp
xor
push
lret
mov
jns
cmpsb
out
xor
insl
inc
push
lods
rcll
pop
or
jmp
pop
repnz
mov
push
jg
stos
lods
or
lahf
pop
iret
jmp
mov
sahf
int
jmp
mov
cmpsb
adc
out
inc
pusha
xorl
stc
lods
aaa
adc
pop
ljmp
xor
mov
and
unpcklps
xor
shlb
dec
mov
js
add
in
or
mov
mov
insb
test
push
jae
or
scas
pop
in
mov
hlt
inc
stos
cld
mov
out
movsb
int
adc
pop
nop
push
fbstp
or
in
or
mov
jmp
and
out
shlb
xlat
jl
jecxz
mov
inc
pushl
ljmp
stc
xchg
mov
xchg
or
mov
shl
das
pop
sbb
mov
inc
bnd
cmp
push
and
mov
add
fsubrs
ljmp
repz
fs
fistl
push
mov
test
leave
ret
arpl
fs
dec
gs
mov
push
push
jl
lea
cmp
jp
pop
sub
cltd
mov
sbb
mov
icebp
clc
dec
loop
scas
cltd
push
adc
push
add
rolb
lcall
jmp
cmp
or
mov
sbb
dec
fistps
pop
push
mov
add
pop
push
jg
jmp
js
out
jle
leave
cld
cwtl
test
fidivrl
cmpsb
cltd
jbe
mov
les
in
or
fisubl
xor
lcall
outsb
dec
cmp
mov
cmp
repz
addr16
jmp
mov
push
or
lea
mov
imul
pop
lods
or
cmc
lret
clc
sub
push
dec
or
jecxz
dec
push
or
fisttps
adc
jl
jmp
jnp
mov
stc
cmp
cmc
mov
mov
hlt
inc
push
rcr
mov
fmul
clc
decl
and
fs
jecxz
imul
or
add
xor
jmp
adc
xchg
xchg
sbb
cmc
data16
cwtl
xlat
add
mov
repnz
inc
sets
mov
inc
ds
stos
cmp
loop
mov
add
addl
cmp
xor
or
in
enter
mov
cmpsl
add
lods
mov
shlb
xchg
dec
push
push
inc
xor
jl
int
inc
jmp
and
mov
jo
out
ss
loope
jo
lock
stos
adc
lods
xchg
sbb
jns
mov
icebp
dec
pop
andb
mov
xchg
inc
mov
js
ret
cmp
pop
cmpsb
icebp
xchg
jmp
nop
add
cmpsl
sbb
loopne
sbb
pop
das
xor
xlat
pushf
mov
cmc
insl
or
shlb
adc
imul
pop
les
push
test
cmpsl
mov
fs
push
fimull
repnz
daa
mov
jmp
cmpsl
test
out
fwait
addb
xchg
cmpsb
lods
xorb
pop
inc
out
sar
lcall
xor
cmp
dec
clc
ret
sbb
ljmp
sti
mov
jmp
and
fsubrl
jge
in
push
sub
add
repnz
jp
js
call
xor
jb
mov
xchg
mov
pop
xorb
mov
loop
pushl
push
fsubr
mov
daa
sub
pop
xlat
pop
lods
dec
lcall
or
dec
xchg
dec
or
jb
roll
lcall
lcall
movsb
push
repnz
jbe
jno
loope
pushf
pop
pushf
mov
pop
loopne
jnp
decl
jl
cmp
add
add
push
jae
popf
mov
jno
dec
and
lcall
inc
fs
jg
mov
jl
out
shll
movsb
dec
jp
fcoml
rcl
sub
nop
je
push
xor
sub
movq
popf
mov
mov
in
or
push
xchg
push
sti
out
mov
inc
mov
adc
out
fistl
loopne
mov
fdiv
pop
inc
neg
pop
daa
mov
xor
shrb
xchg
into
enter
clc
aad
adc
cmp
lahf
jl
or
lret
lds
call
outsl
fwait
adc
and
hlt
or
mov
outsb
shll
and
in
and
in
or
ret
lcall
mov
xchg
lea
mov
ss
fbld
xor
lcall
arpl
cmp
aam
push
adc
inc
push
jp
sbb
xchg
dec
xor
outsl
clc
ljmp
andl
test
lret
in
out
jne
pop
repz
leave
jb
ret
aaa
cld
pop
andb
sub
sbb
mov
fstp
jb
test
adc
mov
fsubrl
xor
imul
decl
push
xor
rol
mov
cs
mov
push
repnz
aam
fdivr
call
in
mov
or
inc
xor
cli
or
decl
fisubs
mov
inc
sub
bound
ja
int3
stc
xchg
std
outsl
clc
lcall
and
add
or
arpl
adc
aad
and
mov
xchg
in
mov
lea
dec
pop
mov
xchg
pushl
lea
mov
dec
daa
ret
sub
jmp
loopne
ret
or
pushl
push
push
fldt
lds
inc
out
mov
inc
sar
outsl
mov
pop
or
lcall
jnp
ret
rcr
sbb
test
cwtl
jmp
jne
nop
push
ss
call
clc
insb
pop
and
pop
in
psrlq
imul
js
push
push
andl
pop
andl
pop
jecxz
sub
fucom
fnstenv
test
mov
jle
cmc
add
dec
inc
add
pop
push
push
out
add
xor
idiv
pushl
arpl
lahf
mov
and
mov
repz
mov
sbb
das
jp
jle
fs
push
aaa
dec
aad
iret
fwait
xorps
mov
lret
stc
push
cld
loope
cmpsl
sub
mov
mov
push
imul
ja
lea
bnd
pop
mov
fisubs
aam
jl
dec
xor
jo
or
imul
out
ja
or
xchg
decl
mov
loop
jns
adc
stc
xlat
insb
push
test
sub
sarl
nop
sahf
loop
aam
sub
dec
mov
cwtl
mov
je
ret
mov
xorb
out
arpl
rorb
sub
movsb
add
decl
adc
dec
out
mov
xor
out
push
jns
cltd
mov
adc
sarb
into
jge
sub
ljmp
aad
cmpsb
loopne
pop
jbe
rcll
pop
jne
add
stc
mov
decl
sbb
lea
mov
sub
negb
pushl
hlt
xchg
cmp
rol
jb
addr16
mov
jns
ret
push
cmpsl
push
pop
pop
add
inc
in
decl
dec
inc
stos
data16
daa
fidivs
mov
sbb
lds
fmull
xchg
cmp
sbbl
pop
jb
mov
hlt
fdivrp
loope
fsub
mov
loopne
loop
outsl
ss
pushl
or
cmp
and
jb
cltd
std
jp
sub
mov
incb
scas
sbb
subl
pushl
cwtl
mov
mov
scas
or
sub
dec
pop
scas
fimuls
into
inc
lea
stos
inc
ljmp
jecxz
cmpb
setl
pop
sbb
jno
ret
pop
hlt
add
mov
and
xlat
outsb
inc
add
fcomip
lahf
and
jmp
js
int
clc
push
sbb
xor
decl
jmp
ja
xor
inc
lret
popf
inc
scas
jns
adc
dec
mov
cmc
dec
or
jmp
jmp
cmp
stos
adcb
xor
mov
scas
cli
lcall
pop
out
lods
xchg
inc
sbb
iret
sbb
ljmp
push
fmull
subb
jge
cwtl
mov
jae
mov
ljmp
arpl
inc
adc
enter
lahf
in
sarl
popa
fstpl
mov
and
imul
sub
inc
push
add
push
ljmp
xor
mov
xor
mov
xor
incl
mov
rcll
fwait
notb
lods
fisttpll
push
or
ds
call
sbb
xlat
adc
inc
jno
sahf
xchg
fs
xor
es
xchg
mov
mov
stc
fucomi
push
sti
sbb
xchg
jo
int3
cmpsl
mov
push
mov
call
xchg
jge
or
mov
aad
cwtl
mov
ljmp
frstor
pop
xor
fwait
lds
push
mov
jbe
mov
lret
mov
sbb
pop
cltd
push
or
scas
clc
push
adc
stos
lret
es
cmpsb
add
mov
scas
adc
fists
xchg
enter
rclb
popf
je
ja
add
adc
std
andl
pop
iret
lret
fnsave
adc
jae
dec
ljmp
sbb
popf
mov
or
sbb
enter
cmp
bound
push
xor
mov
xchg
add
or
jle
jl
cmp
jle
ss
lds
int3
fnop
in
cltd
xchg
push
ret
cmpsl
inc
mov
ljmp
cltd
mov
xor
or
aas
arpl
pop
xchg
imul
inc
cli
movl
pop
adc
loop
cmp
lcall
vpsubusw
sbb
lahf
push
inc
aaa
mov
jle
inc
pop
sbb
ljmp
xor
mov
idiv
inc
mov
pop
incl
clc
inc
fisubrl
aad
gs
sahf
faddp
sbb
mov
dec
lcall
xlat
aad
and
and
mov
loopne
and
aam
sub
ror
call
aaa
mov
cltd
inc
ror
sub
jecxz
pop
call
loope
pop
mov
shl
fwait
ljmp
shr
imul
push
sub
or
fiaddl
jno
scas
jecxz
fildll
xor
outsl
mov
out
orb
push
mov
sub
mov
push
clc
xchg
and
call
out
mov
outsb
ss
xor
into
jle
dec
jbe
push
xor
xor
inc
adc
ljmp
dec
ljmp
nop
mov
xchg
push
lock
dec
add
fs
lcall
and
adc
push
dec
insl
std
or
call
add
scas
ret
dec
stc
fimull
fidivrl
outsl
adc
imul
mov
add
and
mov
lds
xchg
jno
js
jbe
incl
lea
jp
leave
mov
rcrb
mov
cmp
out
dec
inc
xchg
sub
cmc
sub
cld
pop
hlt
jge
or
imull
sbb
or
int3
js
and
jg
cmc
push
dec
arpl
scas
test
ljmp
adc
mov
push
or
lods
inc
push
outsl
xchg
jb
dec
dec
hlt
mov
push
sbb
and
mov
fsubp
in
xchg
sbb
jne
fisubl
or
pop
sub
loope
xchg
bound
sub
fiadds
sbb
dec
mov
ljmp
lret
mov
and
hlt
push
jo
setle
aas
in
and
inc
pop
pop
mov
dec
sbb
dec
ja
cmpsl
aas
clc
jmp
mov
cli
and
fmuls
test
push
mov
call
dec
add
cwtl
push
lret
jae
jbe
jle
adc
negb
or
fwait
pushl
xor
mov
sbb
shrb
or
or
or
jg
ljmp
out
addb
sub
push
int3
inc
loopne
in
mov
test
mov
ljmp
inc
xor
ja
jo
mov
xchg
push
and
pop
and
inc
and
decl
or
mov
jle
dec
arpl
mov
cmc
dec
inc
movsb
sub
sub
js
inc
or
xor
pop
xchg
ret
jae
xchg
iret
mov
xor
xlat
lret
sbb
dec
add
dec
mov
xchg
imul
in
xlat
in
jb
out
pusha
mov
pushl
clc
xor
aad
ss
rol
jbe
push
jecxz
pushl
lds
in
inc
fists
dec
add
outsb
inc
stc
aad
shrb
jge
arpl
call
test
popf
scas
stos
in
mov
je
jo
push
bnd
xchg
stos
out
mov
lcall
pushf
mov
enter
lcall
sbb
push
pop
pop
lret
cli
pushf
adc
sub
imul
testl
add
jg
lods
movsb
fidivrl
ret
and
mov
out
ja
faddl
add
add
test
shl
mov
pop
lret
repz
insl
inc
outsl
jmp
dec
pop
addl
mov
mul
decb
or
stc
jge
add
js
mov
es
pop
cmpsb
and
adc
test
insb
mov
jmp
or
push
clc
cwtl
cmp
in
scas
push
jg
mov
pop
jmp
sbb
enter
mov
into
mov
fwait
jl
cmpsb
adc
cmc
hlt
xor
fnstsw
lcall
xchg
xor
add
add
dec
add
sbb
sti
lcall
pop
jl
xor
fmuls
push
mov
mov
pop
lods
lods
and
hlt
jl
out
sub
call
mov
and
jo
das
dec
adcb
and
mov
push
push
add
add
xchg
test
adc
cmp
sub
movsl
test
sbb
cltd
lcall
outsl
nop
cwtl
add
pop
aaa
ss
mov
imul
sub
cltd
jp
dec
incl
lea
out
cld
inc
push
insb
mov
cltd
lea
mov
int3
iret
loopne
incl
push
mov
inc
ret
loopne
stc
loope
cs
arpl
push
cmp
outsb
ror
call
out
mov
jg
imul
leave
cmc
mov
jae
ss
orb
pop
pushf
sbb
dec
decl
movsb
rcll
imull
cld
jnp
adc
and
decl
enter
push
cmp
push
adc
sti
cwtl
mov
lcall
decl
imull
inc
lcall
mov
filds
cmc
fldl
dec
ljmp
fnstsw
enter
std
fnstsw
push
popf
out
mov
fistl
incb
adc
jbe
fcomps
loop
sub
xchg
scas
xor
out
in
test
inc
mov
fsts
fldt
pop
adc
sub
loop
fistpll
sub
mov
push
loope
sbb
pop
add
pop
sar
call
cmp
in
or
push
push
push
push
jg
sbb
outsl
xchg
in
lahf
jae
lcall
or
inc
mov
ja
int3
pop
es
divb
call
xor
and
cld
mov
movsl
in
xor
mov
andl
pop
ds
sbb
sar
sti
or
xor
cmp
fldl2e
arpl
pop
ljmp
hlt
std
sbb
repz
inc
in
inc
dec
jge
aam
cwtl
out
inc
pop
mov
or
mov
pushl
jne
lahf
pop
pop
mov
lahf
mov
ror
mov
xorl
adc
inc
jg
mov
jl
mov
cmp
cmpb
sar
dec
or
dec
pop
inc
or
mov
cwtl
add
dec
std
sahf
and
aaa
push
loop
shrl
aaa
xor
and
incl
out
and
outsb
cli
aam
lds
add
dec
mov
xor
mov
pop
inc
fs
jmp
and
lahf
das
shrb
call
rcll
dec
mov
xchg
jge
xor
mov
popa
mov
andb
xor
lcall
lock
ret
mov
icebp
in
xchg
mov
das
dec
aas
loope
lcall
cmp
arpl
sbb
popa
pop
sub
xchg
jae
xor
dec
jno
jns
idiv
decl
cmp
inc
and
pop
push
loop
adc
mov
jge
mov
decl
mov
sub
pop
test
call
xor
push
mov
mov
or
xchg
xor
decl
mov
and
sub
xor
lcall
mov
pop
lods
mov
imul
mov
call
mov
out
xchg
sahf
in
out
inc
scas
jo
shl
pop
xchg
in
jb
jnp
data16
push
popf
arpl
decl
dec
popf
imul
sbb
mov
or
fistps
mov
sbb
push
in
call
movsl
pop
or
cmpsb
cmpsb
mov
ljmp
lret
and
aas
jbe
cs
dec
pushf
popa
es
dec
gs
xorl
and
pop
and
ljmp
mulb
inc
jno
adc
sti
stos
fisubs
jl
xchg
sbb
sub
inc
mov
mov
and
jae
fisubrs
dec
cmpsl
pop
test
or
incl
into
jae
inc
push
shrl
nop
and
aaa
sbb
ljmp
push
pushf
adc
and
pop
dec
adc
je
insb
or
mov
lcall
jb
movsb
inc
mov
lods
rcrb
mov
jae
push
dec
leave
sbb
mov
pushl
push
add
cmp
or
mov
movups
xchg
and
repnz
lcall
movsl
insl
fcompl
xchg
lret
jge
add
mov
idiv
rclb
push
cmp
js
sti
rclb
cmp
shl
aad
mov
fmull
pop
cmp
ljmp
or
cmpsb
fdivrl
pop
imul
sub
fcmovbe
jmp
mov
dec
mov
mov
addl
mov
cltd
call
in
dec
pushf
mov
xor
dec
test
cs
idiv
pushl
out
fwait
test
and
sbbb
jl
mov
or
dec
clc
movsl
cmp
sar
out
cli
lods
ficompl
out
add
cmp
jp
push
lock
add
ja
imul
into
out
cli
decl
push
mov
mov
mov
xorb
inc
xchg
mov
in
addb
pop
or
xchg
sbb
fidivl
sahf
mov
xchg
push
xchg
add
incl
add
aas
pop
jl
shlb
mov
stos
mov
lcall
rorl
out
lods
dec
jnp
dec
dec
mov
inc
sbb
js
xchg
or
int3
cmpb
ljmp
cli
cld
out
int
fadds
add
jbe
jb
push
rcrl
subl
je
pushl
adc
lock
ja
fcomps
add
pop
mov
add
jge
sub
incl
repnz
in
cmpsl
aad
pop
sbb
pop
sbb
push
xchg
enter
jmp
xor
mov
das
sar
adc
or
push
pop
xchg
ret
add
nop
aas
hlt
mov
inc
test
clc
or
adc
lcall
mov
sbb
rcl
dec
andb
dec
addl
lcall
aas
and
pop
in
lahf
mov
and
lcall
sbb
outsb
mov
push
imul
jb
xchg
inc
mov
inc
jge
sti
enter
decl
stos
mov
out
push
inc
imul
cmc
popf
mov
insb
mov
inc
lcall
or
sub
aaa
jb
sub
pop
out
cmc
shr
popa
or
adc
std
lcall
xchg
mov
test
shrb
and
in
std
jge
push
arpl
sahf
pushl
fsubs
int
mov
add
jae
ljmp
fimull
jle
clc
mov
shlb
inc
mov
xchg
xchg
je
int3
or
subb
mov
jle
int
adcb
sbb
cmpsb
decl
sbb
add
jae
add
mov
and
icebp
cmp
dec
sbb
mov
int3
mov
jmp
repz
pop
dec
or
adc
shll
clc
les
adc
jecxz
rol
dec
idiv
rol
mov
jae
cmp
ljmp
mov
dec
in
in
dec
lea
or
sti
cs
mov
lock
dec
std
jmp
mov
and
cmp
pop
lcall
decb
fistps
jns
mov
pop
jmp
lock
adc
inc
push
sbb
or
decl
jne
stos
sbb
pop
mov
inc
sbb
xchg
popa
and
pop
cmpsl
mov
in
hlt
add
or
std
or
mov
mov
inc
sub
pop
or
mov
movsl
fisttpl
lcall
pop
dec
dec
insb
and
fnstcw
mov
out
xor
mov
mov
aam
fisttpl
movsl
pop
lahf
in
in
in
fldenv
sbb
lahf
fiadds
push
cmp
jmp
xor
adc
incl
and
ja
fistpl
fadds
movsb
dec
out
sub
cld
jmp
xchg
ret
mov
sti
popf
push
jg
outsl
js
mov
int
lcall
and
bound
dec
jae
inc
xchg
jae
inc
xor
and
lcall
mov
mov
mov
mov
sbb
cmp
test
decl
cmpsb
jle
andb
push
push
fs
cmp
push
movsl
int3
jle
jne
cmovno
and
xor
sahf
lret
mov
inc
repz
insb
int3
or
or
push
lock
iret
xchg
and
push
mov
fnstcw
aaa
jno
dec
jmp
push
decl
pop
push
push
mov
or
mov
fst
mov
jno
pop
pop
enter
mov
mov
lcall
stc
add
call
jmp
testb
sub
aas
notb
pushl
in
or
fldt
or
sub
xchg
pmulhuw
imul
jno
loope
xchg
adcl
add
mov
sbb
cwtd
mov
jne
testl
xorl
sbb
sti
mov
push
cltd
notb
call
sub
cmp
sti
test
mov
mov
add
sti
imul
out
mov
es
cltd
andl
inc
testl
xchg
mov
sbb
repz
mov
mov
incl
cmpsb
mov
mov
test
inc
mulb
pop
dec
das
lds
pop
add
scas
stos
es
sar
frstor
and
lahf
leave
cmpsl
rcl
cs
push
aaa
pop
pop
icebp
xor
cmp
stc
push
lahf
loope
or
in
iret
mov
push
cmp
test
push
out
cmp
decl
xchg
je
cmpsb
daa
lret
pop
push
movsb
dec
add
mov
cmp
sub
sub
stos
sub
mov
sti
mov
ret
add
cltd
ljmp
js
mov
xchg
dec
inc
mov
jns
loop
arpl
add
jecxz
out
dec
jl
rorb
sar
andl
arpl
stc
js
hlt
inc
dec
add
es
ja
mov
out
jo
or
fists
les
lcall
push
cmp
dec
xchg
and
repnz
imul
pop
sbb
mov
decb
cmp
cmpsl
or
aam
bound
mov
les
ljmp
jae
loope
out
and
jne
je
js
int3
test
lret
mov
lods
repz
push
push
adc
ljmp
and
xor
bt
ss
xlat
cmpsb
lcall
pop
sub
jg
incl
lds
adc
or
inc
cmp
or
xchg
lock
incl
lds
insb
sub
adc
push
mov
pop
insl
push
jo
jmp
decl
cmp
es
sbb
aam
mov
into
ficoml
enter
mov
mov
cmpsb
bound
jmp
imul
out
push
cs
pop
test
pop
notrack
cld
decl
scas
pop
dec
mov
xor
jns
sbb
fdivl
decl
int
dec
xor
jg
sarb
sub
push
or
cmpsl
push
inc
ret
or
and
incl
xor
out
mov
ret
xchg
cld
iret
clc
jns
mov
pop
push
jne
js
mov
mov
fistl
aam
in
fs
adc
jnp
int
test
or
loop
and
lret
sub
jne
xchg
cmp
jecxz
decl
sbb
pushf
inc
aam
lea
lahf
mov
mov
and
test
lods
jmp
push
mov
cmpsb
adc
daa
mov
mov
sets
jno
repz
mov
xchg
ljmp
mov
or
ljmp
adc
push
fnstsw
mov
sub
fs
push
xchg
mov
or
cwtl
mov
lcall
mov
cli
cmpsb
jmp
movsb
xor
push
mov
pop
inc
inc
push
out
leave
out
inc
sub
mov
fs
inc
mov
sub
in
imul
sub
mov
jmp
movsl
repnz
pop
cmp
push
gs
inc
mov
pop
mov
test
jle
adc
jae
xor
push
aas
out
inc
test
jle
test
in
arpl
pop
sub
incl
jle
rcll
scas
lcall
or
int3
les
lcall
fsts
and
es
push
repz
push
add
xor
cmp
lcall
test
sbb
std
xor
push
aad
mov
jle
adc
decl
test
pop
ret
movsl
nop
mov
int
inc
orb
shlb
push
cmp
xor
test
xchg
cmpsb
pop
std
fnstenv
cmp
jmp
sub
cmpsb
addb
ljmp
pop
and
mov
push
adc
pushl
std
out
jae
fsubs
xor
aam
or
or
mov
shrb
mov
and
lcall
dec
movb
dec
mov
aaa
decl
cmp
cmpsb
hlt
sbb
scas
mov
jne
push
call
cmpsl
dec
repz
jbe
rcll
aam
fistps
push
fcompl
in
movb
mov
and
mov
jnp
jecxz
loopne
inc
popf
cmp
add
pushl
in
movsl
pop
jno
mov
inc
cltd
fldln2
and
mov
ret
lods
mov
jmp
dec
cs
mov
outsl
push
je
dec
adc
cs
cwtl
pop
jno
call
mov
mov
shlb
popf
jecxz
andl
push
fstps
pushf
popa
inc
cmp
in
int3
aas
ret
mov
fs
add
xchg
push
mov
jo
or
out
cmpsb
add
leave
inc
mov
pop
lods
ss
stos
add
xchg
ljmp
out
outsl
sub
xor
mov
push
lds
orl
popw
push
push
pop
cmc
mov
jmp
ja
test
call
lods
cld
lock
mov
sub
into
xor
push
jle
lock
fcmovnb
call
push
es
add
sti
rorb
cmp
mov
pop
outsl
lcall
dec
dec
arpl
or
mov
out
in
sbb
xchg
sub
jnp
gs
cli
xor
mov
mov
mov
xlat
frstor
add
xor
sarl
int3
cmpsl
nop
sbb
int3
outsb
fcomps
and
or
inc
pop
or
in
in
imul
jle
xor
dec
test
mov
pop
lock
lods
adc
or
or
lcall
icebp
jns
icebp
lods
mov
lahf
dec
cmc
test
or
test
jne
clc
cmpsl
xor
cmp
jg
jb
lcall
add
fsincos
jmp
iret
mov
out
adc
incl
mov
aam
mov
xor
mov
fisubrl
mov
pop
test
jmp
sbb
pop
clc
cli
inc
xchg
and
aam
loop
fwait
lret
test
adc
das
addr16
decl
popf
orb
imul
mov
mov
xor
enter
das
lgdtl
push
pushl
loope
mov
and
add
ficomps
scas
clc
mov
decl
fistpl
push
rorb
sub
push
sbb
pop
jle
sub
addr16
cmp
ss
mov
cld
dec
sbb
or
inc
leave
lret
out
leave
sbb
iret
addr16
cmp
add
pop
test
mov
dec
test
ret
enter
out
movsl
push
stc
fst
inc
mov
lods
into
push
push
ljmp
popf
jo
aam
pop
and
add
test
or
pop
call
cmpsl
in
mov
sahf
mov
das
test
je
mov
arpl
push
inc
xchg
call
add
and
gs
jle
cs
sub
out
pcmpeqb
call
jno
loopne
and
push
lahf
mov
jp
outsb
sub
mov
adc
dec
pushl
push
pop
out
xlat
bound
cmp
adc
inc
inc
stos
inc
lahf
imul
sub
jl
push
pop
std
mov
daa
jge
daa
xchg
dec
fdivr
jg
pop
pop
sub
and
pop
mov
lods
fnstenv
mov
mov
mov
movsb
ljmp
adc
cmpsb
sub
cwtl
xchg
loope
add
pop
scas
push
ja
ss
pushl
je
or
arpl
inc
in
sub
adc
xchg
popf
xchg
inc
ljmp
mov
pop
iret
mov
lods
xor
jg
insl
sbb
fistps
pop
mov
jmp
repnz
push
push
or
ret
inc
icebp
loope
pop
pop
cmp
shl
repz
push
pop
decl
xlat
insl
rcl
pop
cs
mov
sub
dec
mov
jl
outsl
movsl
mov
ljmp
sbb
iret
sahf
sub
push
push
mov
cltd
inc
dec
sbb
ret
fcomp
mov
sub
setge
sahf
call
pop
lahf
or
lods
adc
pusha
inc
jecxz
xchg
or
sub
imul
call
lock
sub
aaa
imul
testb
xor
test
jge
icebp
fstp
jecxz
call
scas
mov
or
jmp
push
dec
mov
out
pushf
pop
rorb
mov
mov
scas
lds
inc
jg
sub
pop
hlt
add
loop
sbb
inc
jg
pop
jle
pop
std
orb
xchg
or
stc
or
cmp
ja
out
cli
stos
jg
ficoms
out
addr16
adc
mov
and
ljmp
je
pop
mov
xchg
add
ret
add
sbb
mov
adc
ja
mov
sbb
pop
fucompp
mov
out
add
add
out
sbb
jge
repnz
xchg
pop
push
ffree
push
adc
in
loopne
push
and
andb
imul
repz
ljmp
sarb
insb
jge
jne
mov
test
mov
decl
jp
out
push
loopne
jo
pop
addr16
int3
ss
roll
cmc
neg
xor
inc
fsubrs
lcall
pop
rcrl
mov
add
shlb
and
fldl
imul
pushl
or
and
loope
jne
inc
mov
pop
incb
jl
fldl
lods
scas
push
adc
jle
xchg
test
dec
rorb
test
call
das
jbe
std
aam
insb
fdivl
mov
mov
adc
pop
into
fdivrs
mov
push
or
cmp
ja
cmp
sub
movsl
imul
cwtl
jmp
mov
mull
cltd
sub
pop
loopne
push
xchg
out
adc
and
mov
pop
out
cli
jmp
in
hlt
sahf
pop
xor
cld
and
push
mov
xor
lcall
inc
rolb
push
adc
aas
in
insl
fisubrl
rcr
loopne
dec
bound
sar
test
lods
cmp
movsb
jg
int3
add
or
pop
popa
inc
incl
lock
xlat
push
notl
mov
iret
or
fstpt
mov
mov
lods
test
and
mov
incl
mov
pop
cmpsb
lahf
cmp
mov
repnz
incl
popa
ret
mov
pop
push
test
imulb
or
sub
fwait
or
inc
out
scas
mov
jg
xchg
xchg
sbb
xchg
out
mov
adc
ds
lcall
dec
cmpsb
neg
or
aaa
mov
fcmovne
adc
mov
fcompl
mov
jg
dec
repz
psadbw
pop
pop
mov
jne
mov
sbb
scas
xor
mov
ss
adc
xor
insl
inc
into
outsb
add
loop
fistpll
pop
jno
outsl
mov
xchg
sbb
lock
cmp
in
mov
jmp
jno
dec
xor
push
add
in
in
pop
mov
sub
push
push
sbb
mov
daa
xchg
ljmp
jno
add
push
xorb
sahf
rol
insb
or
sbb
cmc
push
and
ljmp
pushl
popa
aam
cmpsb
aaa
outsb
sub
push
test
mov
dec
ret
add
dec
add
incl
sahf
inc
push
sub
aad
insl
push
sub
lret
sub
cwtl
pushf
push
hlt
or
ljmp
fdivr
push
insb
push
xor
stos
or
add
cmp
lods
ret
or
sub
bnd
mov
das
mulb
fisttpl
stos
pushl
sub
push
fdivrs
pop
jmp
jb
sub
lret
sub
adc
test
dec
aam
inc
test
mov
pusha
mov
decl
repz
lahf
push
jbe
aaa
mov
mov
fildl
fs
jg
call
aad
out
cmp
clc
cmp
sbb
inc
rcrb
aaa
mov
cmp
adc
xor
leave
pushl
decl
inc
daa
movsl
and
mov
loope
das
sbbl
push
jg
fildll
dec
add
jnp
shll
jno
mov
and
movsb
jns
pop
add
ljmp
stos
pop
cmp
push
daa
mov
test
int
in
xchg
dec
sbb
ljmp
in
xor
or
leave
addr16
mov
sub
dec
push
inc
cmpsl
hlt
dec
xchg
pop
aam
ljmp
mov
rolb
dec
out
in
icebp
xchg
addr16
jb
inc
inc
mov
inc
and
xor
xor
mov
outsb
imul
fdivrp
jmp
mov
pop
add
xor
loopne
in
cmp
and
cmp
dec
fistpl
dec
xor
xchg
into
imul
pop
adc
jmp
sarl
inc
fsts
ljmp
addr16
fcomp
mov
add
data16
fsubrl
ja
decl
fistps
add
fwait
jmp
cmp
pop
add
test
pushl
cli
dec
mov
adc
lock
inc
movsb
cli
sub
adc
adc
arpl
pusha
fstpl
test
in
stos
xchg
in
fbstp
leave
sub
mov
mov
out
adc
cltd
inc
repnz
sti
mov
xchg
daa
out
test
mov
mov
in
push
push
sbb
dec
mov
push
mov
ljmp
aad
aaa
je
push
or
jnp
xchg
xchg
jmp
dec
imul
les
dec
pop
decl
mov
push
add
call
and
int
fistps
and
lea
test
clc
ljmp
ficompl
sub
jmp
das
shll
fsubs
jp
xor
pop
sbb
loopne
icebp
ljmp
imul
in
loope
adc
orb
jl
aam
inc
xchg
push
inc
js
push
testb
adc
xor
negl
cmp
adc
push
es
aas
cmp
xor
gs
mov
pop
pop
and
or
xor
in
mov
out
bound
push
fwait
cmp
cmpsl
mov
mov
jp
add
add
jle
cltd
das
fiadds
or
movb
inc
addr16
fbld
rclb
add
mov
add
mov
cmp
pop
or
cwtl
test
sbb
repz
call
mov
test
loop
fidivrs
inc
das
out
mov
fistpll
rcrb
movsl
push
or
stos
scas
cli
sahf
or
insb
xchg
out
inc
cmpsl
popf
mov
mov
arpl
mov
push
add
jbe
mov
and
jmp
and
mov
aad
push
xchg
cmp
sarl
cmp
fwait
jg
jmp
xchg
cs
pop
cmc
adc
push
pop
fwait
adcb
shll
mov
pushl
loope
mov
jbe
loop
inc
inc
mov
jo
xchg
jl
cmp
sbb
ljmp
test
adc
push
adc
stos
inc
or
xchg
mov
mul
cld
jmp
icebp
test
clc
stos
adc
inc
outsl
inc
mov
sbb
sbb
outsl
cmp
pushl
dec
ljmp
push
imul
mov
cld
ljmp
test
jmp
adc
mov
sti
loop
stos
addr16
scas
in
pusha
sub
and
test
cmpsl
xchg
outsl
or
or
nop
repz
push
test
xlat
or
mov
pop
mov
call
pusha
pop
pop
and
and
or
inc
adc
dec
fcoml
xchg
std
mov
sbb
fidivrl
decl
push
pop
scas
cmp
and
std
push
bound
repnz
mov
gs
mov
push
sbb
cli
outsb
ficomps
or
adcb
hlt
pop
repz
and
inc
add
or
imul
std
call
mov
add
add
jne
test
test
ret
and
call
mov
enter
mov
jl
xchg
mov
nop
inc
popa
lock
incl
shl
mov
mov
je
mov
jmp
xchg
mov
shl
jo
mov
lcall
pop
in
add
add
or
mov
cmp
out
sub
inc
push
fbld
call
sub
movsb
jb
les
push
add
cltd
cmp
cli
daa
cmp
add
pushl
jbe
mov
leave
adc
push
ss
mov
rcrl
jbe
in
pop
lcall
xor
repz
pop
int
dec
punpcklwd
push
jns
add
rcl
loope
rcrl
cwtl
es
mov
jecxz
jge
sbb
aad
adc
cmpl
xlat
add
cmpsl
pop
cmp
pop
jne
jns
push
mov
iret
popf
popa
add
xchg
shl
add
loopne
jl
pop
ds
test
out
in
test
xchg
sub
shrl
ffreep
lcall
fidivrl
jp
test
call
jle
cmc
jp
fucompp
in
test
mov
icebp
je
lret
fcomip
fimuls
push
and
insb
jbe
sub
das
repnz
and
cs
and
adc
mov
jge
movsb
shlb
inc
arpl
inc
jne
ljmp
mov
mov
xor
xchg
decl
sub
stos
and
mov
test
xchg
sbb
pop
add
cmp
aad
jns
pushf
or
ljmp
lea
in
icebp
addr16
jge
aad
jns
fstpt
shrb
ret
leave
xor
and
icebp
xor
and
jmp
fisubrl
lret
xor
lcall
call
jne
mov
jg
xor
imul
subl
pxor
insl
inc
jg
int3
scas
incl
fadds
cmpsl
jmp
mov
dec
jo
daa
mov
and
pop
pushl
sub
add
pop
xchg
in
or
popa
jle
je
jnp
jns
clc
mov
nop
test
outsl
imul
fstp
pop
outsb
popa
fmuls
jb
rcrl
dec
inc
aaa
dec
lcall
ljmp
xor
jl
js
mov
jge
push
inc
add
decl
xchg
lds
cmp
push
jne
dec
jg
mov
xorb
cmpsb
xchg
jmp
clc
xchg
sub
pop
lock
cmpl
cwtl
cmp
xor
jle
mov
push
mov
daa
mov
mov
jl
dec
inc
push
jg
decl
jecxz
test
mov
xor
ficompl
mov
add
popa
outsl
jl
xor
mov
hlt
outsb
jbe
push
rol
xor
into
stc
or
dec
das
mov
inc
test
pop
cltd
int3
push
xor
js
sahf
sbb
jne
jecxz
call
jge,pn
inc
dec
ljmp
ds
sarb
cmp
cmp
mov
aas
or
and
mov
sub
lcall
cmp
and
cwtl
xor
call
call
cmp
cmp
mov
xor
imul
add
ljmp
roll
mov
inc
outsl
dec
inc
jg
popa
mov
sbb
lcall
notl
insb
sub
mov
hlt
ljmp
arpl
jmp
mov
repnz
xor
pop
cwtl
fs
test
xchg
imul
cmp
fwait
mov
fs
ljmp
jnp
lcall
in
mov
arpl
cmp
addb
lret
sbb
inc
pop
test
aad
lahf
cs
mov
adc
fcomip
call
ljmp
inc
sub
mov
pop
sbb
outsl
pop
mov
std
mov
mov
shr
push
cmp
jp
sbb
inc
imul
bound
dec
dec
ds
out
test
aaa
sbb
cmp
xchg
pop
pop
fistpll
pop
subb
sub
jp
cwtl
push
jne
incl
mov
xor
adc
sub
aam
js
in
pop
dec
mov
mov
xchg
xor
cmc
leave
in
jb
ficoms
add
pop
les
jl
ret
sub
xor
cmp
call
stc
dec
push
fisubs
mov
dec
dec
leave
addl
fsts
fs
jb
mov
cmp
cli
mov
xor
pushw
jno
push
sarl
mov
xchg
into
addb
mov
das
mov
dec
shlb
nop
mov
pushf
in
fwait
decl
xchg
jecxz
cli
outsb
push
add
sbb
jbe
scas
sub
jne
xchg
cmp
lock
call
dec
xchg
xorb
pop
ss
scas
pop
xor
mov
out
xchg
jae
pop
adc
decl
cmpsb
pop
lret
jge
jbe
sbb
lret
cmp
push
push
pop
xchg
outsl
fucomip
dec
dec
mov
fmuls
lds
push
xchg
jle
popf
xchg
sub
mov
jns
sti
inc
das
sbb
pop
mov
sbb
andb
nop
in
cmpsb
test
sbb
jg
decl
lds
pop
inc
stos
testb
js
cmpsb
adc
ss
push
movsl
mov
dec
stc
ljmp
pushl
fwait
mov
xor
mov
mov
mov
sbb
cmp
adc
imul
mul
out
in
pop
out
iret
stos
int
sbb
dec
pop
loopne
mov
cli
or
lcall
addl
and
lcall
fsubrs
test
cltd
sahf
xchg
imul
mov
int3
or
push
mov
lcall
pop
stos
or
dec
mov
ljmp
scas
mov
loop
jb
mov
loop
pop
inc
imul
mov
ret
clc
xchg
xor
dec
aad
xchg
xor
loope
call
mov
sbb
adc
jns
add
cwtl
stos
or
out
clc
xlat
xchg
arpl
mov
mov
mov
mov
pop
push
mov
mov
sbb
iret
lock
xchg
jl
or
mov
fsub
xor
ja
int3
punpckhdq
add
in
inc
jns
push
scas
imul
xlat
xchg
bound
nop
xchg
cmp
push
push
push
movsb
mov
in
mov
or
xchg
cli
push
xlat
idivl
repz
pop
negb
test
sub
out
das
pushf
inc
mov
sub
pop
mov
inc
test
lret
bound
mov
push
xor
jmp
sti
mov
sbb
ret
sbb
daa
in
addr16
int3
in
push
loopne
addr16
mov
lock
incl
in
enter
xchg
jno
sub
fimuls
aad
ja
adc
call
shlb
sbb
pushf
leave
mov
dec
add
xor
jp
jmp
sbb
sarb
dec
lods
rclb
arpl
fisubl
ss
mov
push
call
js
fcmovnu
mov
mov
dec
or
mov
nop
sub
jns
movsb
pop
jmp
sbb
push
xchg
push
cmp
clc
sub
mov
and
cli
call
xchg
sahf
pop
adc
mov
inc
sbb
fnstenv
pop
pushf
inc
add
mov
mov
add
lret
sub
js
pop
cmc
cltd
push
push
rorl
repnz
leave
dec
inc
xor
mov
fcoml
aam
dec
xor
loopne
jo
xchg
pop
ljmp
dec
xor
hlt
and
inc
jge
hlt
xor
and
cli
push
sar
jmp
daa
les
loopne
jl
adc
jae
call
out
stc
addr16
call
mov
cmp
rcrl
shl
xchg
das
ret
aad
or
out
fldt
in
mov
pop
mov
jmp
jecxz
icebp
or
cli
dec
push
adc
ljmp
cmp
pop
jo
or
in
pushf
push
sti
mov
mov
insl
inc
mov
stos
lret
mov
dec
ds
cmp
mov
xchg
sbb
hlt
add
decl
cli
push
das
lock
jp
decl
xchg
leave
shl
pop
in
das
into
insl
insl
out
outsb
mov
leavew
xor
ja
mov
mov
dec
mov
cmp
dec
jl
inc
jne
js
cmp
push
loopne
pop
push
vmovntps
mov
cmc
jnp
sub
lcall
aam
jge
repnz
adc
or
push
subb
lahf
shrl
out
ljmp
push
lds
lock
xchg
lcall
gs
xchg
jg
pushl
es
fadds
push
dec
bound
sub
aas
std
out
or
leave
mov
ja
push
mov
cmp
test
lret
sub
push
dec
dec
pushf
fdivr
fldcw
and
jle
mov
jmp
das
mov
test
xchg
sbb
push
lcall
inc
or
pop
mov
int3
adc
insb
pop
sub
adc
dec
cmpb
add
fs
orl
or
je
insl
add
push
aas
dec
popa
lea
adc
rolb
lock
ljmp
movsb
adc
out
and
jae
mov
cmp
mov
decl
cwtl
or
jmp
jae
mov
aad
sub
int3
lret
sub
cltd
daa
out
cs
push
pop
js
je
push
xchg
xchg
cmp
mov
add
jl
inc
push
cwtl
inc
rolb
mov
call
ja
and
test
or
cmp
stos
xlat
decl
lea
sbb
test
pop
mov
pop
incl
aaa
pop
mov
ret
push
pop
adc
movsb
std
xchg
cmp
in
push
inc
dec
cmp
inc
sbb
jg
incl
xor
daa
loop
push
stos
xor
fmull
das
test
mov
sti
std
dec
jno
jp
and
push
rcll
in
les
aaa
stos
or
negb
imul
lcall
and
mov
cmp
push
jo,pn
std
popl
xlat
mov
gs
jg
mov
cmpb
or
add
mov
filds
mov
mov
scas
cli
call
push
cmp
xor
add
das
das
out
ficoml
into
dec
out
test
incl
push
lds
inc
mov
or
in
mov
xchg
cmpsb
ss
xor
lcall
cmp
cmp
fwait
sub
mov
out
or
or
enter
cmp
mov
incl
sbb
or
orb
ret
pop
jae
mov
jne
jmp
dec
cwtl
xchg
jmp
rcll
fs
stos
cmp
sub
into
imul
jg
addb
jmp
or
fisttpl
jns
and
out
push
dec
ret
pop
push
xchg
jns
and
aad
loope
inc
mov
push
inc
daa
cltd
in
int3
aaa
jmp
adc
xchg
inc
in
lret
jb
xchg
out
stos
jg
push
jbe
xchg
fs
inc
add
call
sbb
add
aas
inc
in
rcrb
scas
sarl
shrl
ja
cld
and
adc
movsl
fisubrl
sarb
shrb
sbb
das
movsl
lock
popa
adc
ljmp
stos
icebp
jnp
sub
jns
push
pop
scas
jns
mov
shlb
jg
enter
or
cmp
pop
fiaddl
dec
call
decb
pop
sbb
dec
lcall
xchg
inc
pusha
ret
mov
cld
lock
rcr
add
pop
push
cmp
sub
and
push
js
out
dec
jmp
jo
and
jbe
sbb
sbb
incl
ret
ret
cmp
scas
shl
out
adc
pushf
andps
pop
jle
ljmp
shrb
movsb
add
cmpsb
lock
ret
dec
cmp
xchg
adc
incl
addr16
int3
sbb
out
pop
mov
xorb
std
sbb
adc
inc
int3
in
mov
xchg
cld
jo
call
lcall
xor
xor
jmp
stos
rdpmc
push
mov
push
mov
lock
add
shl
push
sbb
lcall
call
push
lret
mov
fsubp
lret
add
and
imul
push
inc
xor
lcall
push
jbe
in
xor
mov
cmpsl
jecxz
es
in
mov
adc
push
lret
jmp
fdivrl
jns
sbb
lahf
adc
arpl
dec
adc
std
repz
push
lods
cmp
lcall
mov
sub
mov
cld
mov
sub
fisubrl
adc
out
sbb
ljmp
ret
push
stc
insl
les
mov
ljmp
cmc
cwtl
inc
push
loop
in
negb
int3
and
inc
xchg
jbe
add
pop
and
rol
sahf
aad
push
xor
sub
add
cmp
ss
mov
xchg
and
lahf
cltd
add
jne
decl
incl
je
jb
bnd
jnp
insl
clc
mov
loop
dec
sbb
mov
cli
incl
mov
xchg
dec
jae
dec
mov
push
push
daa
inc
stc
cmpsl
mov
lock
test
cwtl
inc
call
jmp
push
mov
add
shrb
repnz
pop
loop
cmpsb
das
dec
call
std
decl
cs
xchg
push
mov
push
in
cmp
add
shll
adc
call
shll
push
inc
nop
inc
fwait
push
add
std
mov
sub
nop
pushl
dec
mov
scas
push
loopne
int
js
lea
test
outsl
jns
add
decl
cli
jmp
jo
xor
out
shl
pop
loopne
stos
cmc
sub
clc
decl
mov
sahf
adc
fcompl
mov
or
ret
adc
inc
jmp
add
sub
loopne
jl
mov
roll
nop
fcmovbe
mov
std
movb
xor
es
xchg
dec
scas
xchg
lahf
loopne
ret
adc
push
fldt
push
ljmp
ds
das
sub
subl
call
cmp
loope
fbstp
sbbl
mov
aad
add
or
out
jne
ss
loop
inc
es
push
into
lret
ds
cmp
or
mov
fdivp
xchg
movsb
xchg
xchg
push
inc
jnp
jbe
shll
fimull
leave
mov
xchg
xor
add
hlt
inc
clc
mov
bound
inc
mov
jo
clc
fidivl
mov
outsl
inc
sahf
clc
mov
ss
shlb
das
cli
ljmp
shll
loopne
push
adcb
dec
rol
jecxz
cmp
fwait
std
cs
ljmp
and
test
ss
sub
adcb
incl
pop
mov
outsl
xchg
fdiv
cli
loop
xchg
xchg
add
inc
in
fcompl
loope
bnd
call
pushl
inc
icebp
leave
leave
sbbl
sarl
xchg
call
xor
ret
push
jp
or
xchg
and
popf
in
lods
add
or
mov
adc
cmp
cmp
and
dec
cmp
lods
jb
repnz
push
lcall
ljmp
push
mov
sub
add
stos
adc
push
in
gs
mov
incl
push
popf
mov
adc
js
pop
int3
les
repz
mov
cwtl
aas
movsb
dec
mov
jmp
pop
pushf
adc
jns
das
xlat
dec
fidivrs
out
mov
int3
fsts
mov
je
lret
call
dec
mov
filds
mov
mov
iret
lcall
jnp
mov
daa
out
in
loopne
js
jmp
cmp
setle
rorl
shrl
cmc
lods
mov
ljmp
or
je
lea
loope
push
mov
mov
pushl
scas
aaa
jecxz
dec
sarl
add
arpl
xlat
cs
sbb
aad
stc
arpl
outsl
ljmp
mov
out
cmp
and
lods
jmp
push
sti
jmp
push
mov
and
ljmp
sub
xor
fsubs
mov
incl
es
pop
aaa
push
pop
xchg
ret
pusha
sti
push
mov
repz
pushf
sub
in
push
lock
ljmp
and
icebp
movsb
add
rorb
leave
cmp
shll
in
dec
out
daa
repnz
call
call
mov
xor
aad
iret
inc
add
cld
push
inc
fisubrl
lcall
lods
imul
inc
jae
fnstenv
cltd
icebp
and
and
push
add
sbb
je
dec
je
int3
push
loope
jb
ss
push
cmp
and
call
mov
mov
mov
in
jo
fstpt
and
mov
insb
stc
xchg
inc
adc
outsl
sub
push
cmpsl
mov
add
out
fldcw
or
cmc
test
mov
and
sbb
push
filds
call
stos
std
mov
bound
and
fisubl
sbb
sbb
js
hlt
es
jno
inc
sbb
inc
jle
xor
mov
pop
adc
xchg
xor
ja
pop
add
jle
arpl
outsb
pop
test
call
cmc
shl
mov
rorl
pcmpeqb
bound
data16
popf
jmp
jg
popa
mov
in
scas
testb
fcomps
dec
out
mov
mov
mov
arpl
outsl
inc
xor
pop
xlat
xchg
pop
pop
sub
push
cli
call
sub
fmull
nop/reserved
dec
in
arpl
jo
dec
dec
aaa
out
adc
imul
clc
ret
xor
lods
shrl
lcall
dec
enter
push
adc
cmp
sub
pop
inc
stc
decl
push
subb
popf
movsl
test
lcall
out
scas
addr16
jle
inc
mov
imul
xchg
idivb
fs
xor
mov
lea
shrb
dec
fists
popa
dec
or
ljmp
out
lret
cwtl
dec
dec
mov
call
inc
mov
outsb
out
or
dec
lcall
aad
sbb
push
sub
mov
mov
out
ja
sbbl
inc
pop
gs
ljmp
inc
cmpb
push
in
mov
or
xchg
in
push
int3
fsubrs
std
std
inc
stc
ret
das
lods
stc
mov
lcall
jmp
mov
loop
inc
dec
lcall
insb
push
jge
mov
insb
xchg
adc
lahf
lea
mov
jl
inc
pusha
out
sub
push
repz
add
and
call
imulb
mov
cmp
mov
les
pop
xlat
call
movsl
insl
jb
ret
decl
ret
xor
pop
divb
and
sbb
pushl
push
gs
pop
ficomps
fwait
or
popa
sub
sbb
and
push
mov
decl
popf
xchg
loopne
ret
dec
inc
je
inc
addr16
movsb
sti
inc
mov
inc
xlat
jecxz
mov
sbbb
in
sub
loop
push
shl
xchg
jbe
sbb
icebp
mov
lods
sbb
adc
mov
inc
popa
mov
shrl
inc
in
rorl
vpaddsw
adc
outsl
adc
sub
frstor
mov
dec
loope
decl
jb
sub
rcl
inc
mov
push
scas
ss
pop
ljmp
mov
andb
test
adc
mov
pop
sbb
add
sbb
es
incl
jl
stos
shll
call
push
pop
mov
lods
mov
lods
data16
fcmovbe
push
in
ljmp
mov
xchg
sar
lret
cli
xchg
insl
pop
dec
pop
lret
es
cmp
jp
jge
lock
mov
adc
mov
add
sub
jns
hlt
mov
cld
call
pop
jle
arpl
xchg
divl
cmp
mov
ss
cmp
mov
ret
jg
sbb
mov
jmp
mov
aad
dec
inc
daa
mov
dec
sbb
mov
cs
je
movsb
ss
push
cmp
jmp
hlt
mov
adc
xchg
rorb
jp
aas
push
dec
push
xor
lcall
rcr
data16
mov
cmp
aas
es
inc
insb
cwtl
daa
les
sbb
decl
loope
stc
jbe
push
add
jns
cmp
ljmp
pop
incl
pop
shll
lret
push
inc
in
lret
aas
fstpl
pop
out
fdivrp
cmpsb
dec
cwtl
sbb
xor
lahf
adc
in
pop
add
sub
and
sbbl
rcrl
mov
push
lds
mov
dec
sbb
ret
sub
sbb
adc
jmp
and
jp
aad
out
sub
adc
ja
xorl
addr16
test
icebp
ljmp
call
out
inc
push
dec
lock
je
cmp
cmc
leave
and
cmp
ljmp
mov
sbb
xchg
sbb
pop
adc
pop
pop
aas
and
hlt
jle
movsb
ja
pop
cld
sub
insb
gs
lcall
std
adc
fidivrs
in
mulb
cmp
fidivl
es
add
out
clc
in
scas
loop
sub
pop
js
imul
xor
ljmp
ljmp
mov
sahf
sti
imul
adc
bound
sub
incl
push
pushf
dec
sub
dec
test
adc
dec
nop
mov
xor
and
mov
sbbb
mov
jecxz
jp
icebp
mov
jle
sbbb
sub
inc
loopne
stos
mov
loope
sbb
outsl
sarb
stos
test
pop
sbb
push
push
test
repnz
sbb
mov
pushl
xchg
stos
int
scas
push
ds
sbb
lret
jecxz
and
pop
mov
jl
xchg
sbb
ljmp
push
cmp
enter
mov
mov
mov
and
sbb
orb
mov
jo
clc
mov
clc
add
push
pop
dec
sub
push
pusha
add
lret
repz
and
imul
imul
push
add
cmp
scas
imulb
adc
dec
cmpsl
decl
dec
mov
push
ret
mov
into
xchg
enter
call
test
jne
inc
notl
xor
push
por
mov
push
pop
fldenv
scas
jnp
jp
xor
pop
pushf
sub
sahf
js
fmul
cli
outsl
lods
mov
shr
sub
incl
inc
cmp
stc
fisttpll
lea
lcall
or
in
dec
sbb
and
mov
loope
mov
or
pop
lock
fists
pop
popa
pushl
std
cli
jmp
cli
inc
in
fnsave
jge
mov
ljmp
and
mov
sbb
mov
lret
xor
cmpsb
sahf
push
outsl
cli
aaa
std
sysret
push
mov
into
and
loope
cltd
inc
stos
ljmp
insl
fidivrl
mov
xchg
sub
mov
mov
ljmp
pop
cmpsl
xchg
ds
or
pushf
call
jp
add
or
jnp
repz
dec
call
jl
xchg
dec
loop
mov
cltd
in
jmp
xor
rclb
imul
jg
lcall
je
push
cmp
aad
and
jp
mov
cmp
xchg
out
jl
popf
mov
mov
xchg
sbb
push
jp
loope
mov
or
fadds
daa
cli
shrb
lcall
push
data16
lea
popa
rcrl
mov
xor
les
mov
lods
pop
or
cmp
mov
call
mov
mov
in
dec
lock
push
xchg
nop
pop
xchg
ret
pop
pop
mov
add
out
outsl
push
dec
test
sub
mov
out
repnz
fiadds
adc
repz
ljmp
aam
daa
pushf
sti
push
pop
jp
push
daa
jns
addb
movsl
jge
jge
push
xchg
and
sbb
or
and
sahf
out
les
pop
push
scas
pop
cmp
push
imul
xor
daa
push
ja
mov
in
test
and
lcall
jle
aad
xchg
adcl
std
cmp
stos
dec
sub
xchg
insl
push
cli
push
or
cmp
ds
dec
push
out
ljmp
lea
test
push
xor
mov
rcll
or
sbb
jmp
pop
sub
loopne
xchg
add
inc
inc
cmpsl
pushl
fdivr
test
adcb
aaa
push
push
mov
or
jnp
fbld
cmp
xchg
sub
outsl
out
adc
cmp
lcall
push
mov
mov
stos
dec
or
xlat
into
add
adc
jno
xchg
mov
lcall
push
sbb
dec
add
out
scas
dec
test
jecxz
sbb
or
inc
adc
mov
push
dec
ss
xchg
lds
jl
aaa
int
or
data16
xchg
inc
popa
push
arpl
bnd
les
pushf
iret
rcrb
test
ljmp
cli
call
mov
cmpsb
xchg
movsb
or
loopne
into
scas
add
idivl
cmp
mov
incl
or
cmpl
stos
sub
inc
push
jl
mov
imull
push
xchg
fdivp
lcall
jle
ret
jmp
sti
fsubrs
or
loopne
push
fcomps
aaa
lea
jecxz
dec
mov
outsb
add
xchg
movsl
push
add
sti
sbb
mov
fdivl
xlat
pop
stc
stos
orb
arpl
xorb
pop
fldt
pop
fcomps
clc
bound
xor
pop
sahf
sahf
push
call
inc
mov
adc
rcll
pop
cmp
and
inc
cmpsb
dec
adc
decl
add
jmp
cld
mov
xlat
pop
in
pop
cmp
decb
sbb
mov
mul
imul
outsb
fbld
push
mov
out
mov
stos
movsl
pushl
int
push
inc
inc
dec
jnp
pop
jl
sbb
dec
mov
call
incl
cld
jmp
lock
in
cmpl
add
mov
call
mov
dec
and
lcall
inc
xorl
xor
adc
push
push
sbb
outsl
and
or
imul
shrl
jl
jmp
fwait
mov
push
enter
lcall
daa
dec
cmp
cmp
incl
leave
mov
cltd
jp
add
xlat
push
pop
std
cmp
stos
push
std
iret
test
jae
shll
cld
add
sbb
mov
push
adc
cmp
ljmp
mov
dec
xchg
aas
call
popa
jmp
push
ret
and
mov
leave
in
or
mov
call
dec
push
sub
pushl
mov
sbb
xchg
js
xchg
cld
cmp
out
out
mov
lea
roll
mov
enter
pop
nop
and
aas
jg
xor
lahf
out
or
adc
outsl
add
adc
cmp
add
loope
es
in
inc
decl
adc
insl
lahf
stos
or
xorb
mov
add
aas
testl
lds
jp
sbb
je
and
adc
mov
xchg
decl
sbb
jmp
jge
cmpsl
iret
fisttpl
lods
jne
stc
outsb
flds
fisttpll
or
ljmp
sub
enter
aas
test
or
fwait
xor
testl
lcall
rorl
data16
dec
xor
dec
cli
sahf
stc
adc
mov
insl
jno
xchg
mov
pop
cmp
shl
push
jle
aas
stos
cmp
fwait
fwait
int3
insl
mov
stos
fdivp
insl
cmc
and
ja
push
call
pusha
pop
pushf
outsl
cmp
dec
stos
cltd
push
inc
addr16
dec
lret
inc
mov
stc
jae
mov
js
sbb
pop
cmpsl
pop
fistpl
loopne
inc
mov
inc
aam
sbb
jmp
add
jecxz
decl
xor
imul
pusha
loop
scas
cli
ljmp
in
scas
adc
aaa
xchg
xor
adc
mov
gs
pop
out
push
popa
dec
aas
push
mov
lds
jl
mul
scas
shrl
fildll
in
scas
ljmp
xchg
cli
pop
inc
mov
movsl
call
push
inc
sahf
out
data16
jmp
ljmp
sbb
mov
sti
inc
ljmp
call
imul
in
xchg
test
mov
mov
push
jp
icebp
or
jne
pop
pusha
lea
xchg
fsubrl
cmp
cmp
mov
mov
dec
aas
es
xor
enter
repz
jmp
add
lahf
sbbl
pushl
sub
adc
push
test
sbb
add
jmp
fiaddl
dec
cmpsl
mov
bound
inc
push
insl
rorl
movsb
fmul
and
sbb
dec
mov
pop
mov
in
fs
repz
push
xchg
and
lcall
andl
ljmp
mov
mov
jl
stc
leave
mov
test
arpl
dec
jns
shl
lea
cmpsb
sub
pop
ret
movb
imul
sub
test
inc
sbbl
cmp
es
cs
inc
xchg
push
push
add
cmp
or
push
lea
add
pop
sbb
mov
andl
ljmp
pop
sahf
pop
or
in
sbb
mov
ret
push
sbb
enter
jmp
pop
mov
lcall
sub
push
push
jns
mov
xlat
jne
jns
data16
ljmp
wrmsr
dec
icebp
insb
rorb
roll
into
jg
fsts
cmc
sarl
ljmp
jmp
or
int
and
test
addr16
push
and
into
mov
lea
pop
int3
sub
in
aaa
sub
cmp
jmp
dec
rolb
lcall
jl
fldt
sub
cmp
loopne
jmp
push
jle
xchg
shr
fwait
xchg
xchg
in
jmp
leave
lcall
cltd
les
dec
xchg
mov
push
pop
dec
enter
or
sarb
inc
mov
dec
subl
fbld
test
mov
outsb
pop
out
movsl
pop
mov
xor
das
adc
mov
scas
ret
xlat
int
xor
sbb
inc
in
out
sub
std
les
movsb
xchg
dec
jmp
sub
xchg
icebp
in
jb
ret
les
call
aam
lock
cmpsb
lock
xchg
xor
cmpb
pushf
clc
gs
movsb
cld
out
inc
pop
dec
adc
sbb
cwtl
inc
pushl
add
mov
dec
push
movsb
sahf
mov
push
pop
dec
pop
insb
push
cmp
movsl
out
fsubp
dec
mov
mov
aas
push
mov
in
in
fs
movsb
mov
rcll
fs
add
fcompl
xchg
sbb
popf
addr16
gs
test
push
sub
out
mov
outsl
jp
imul
aad
std
incl
sbb
jns
clc
mov
arpl
jg
ja
dec
jp
filds
call
bound
loop
sbb
mov
fwait
sbb
pop
jg
lcall
cltd
xchg
movsb
xor
outsb
mov
pop
stc
push
jne
push
movsl
rol
clc
decl
in
dec
insl
aam
lds
imul
jo
lods
fistps
pop
mov
sbb
xor
incl
lea
sub
decl
decb
call
ret
adc
jg
stos
rclb
push
adc
and
pushf
cltd
adc
aaa
loope
jecxz
incl
push
test
out
jbe
rclb
mov
pushl
adc
aaa
add
mov
pop
sbb
in
gs
push
ljmp
daa
inc
repz
movsb
add
add
pusha
call
adc
add
ret
scas
cld
scas
or
cmp
mov
jle
sbb
dec
rcrl
pushl
nop
xchg
pop
icebp
add
notb
out
out
insl
je
lret
frstor
push
mov
ljmp
mov
outsb
xchg
mov
push
clc
ret
ljmp
call
sub
cs
cli
sub
push
repnz
sub
ljmp
push
sbbl
ret
push
data16
scas
movsb
dec
or
sarb
lret
incl
cs
xor
xor
stos
shll
and
ja
xchg
jle
ds
cwtl
push
or
lcall
pop
fnclex
inc
jp
xchg
leave
arpl
jecxz
xchg
inc
icebp
xor
cmpsb
or
xchg
lea
js
mov
inc
es
in
inc
and
inc
inc
js
divb
mov
and
call
bound
or
aad
dec
mov
xchg
adc
mov
push
inc
into
in
inc
dec
cmp
jmp
jecxz
pop
dec
jo
ss
add
les
push
iret
push
xor
fldenv
mov
cs
cmpsl
in
das
mov
push
mov
or
fistl
int
add
decl
leave
mov
pop
movsb
sbb
pop
ja
pop
ret
in
outsl
cli
lcall
pop
mov
add
xchg
jge
jle
jl
pusha
jg
call
cmp
scas
inc
sub
jae
add
cmpsl
dec
pushl
int
push
dec
test
cld
pop
inc
out
push
ljmp
sbb
lods
notb
mov
jmp
mov
adc
mov
sub
mov
adc
jb
cwtl
adc
ljmp
sbb
imul
cmpsb
add
lea
mov
stos
std
fstpt
xor
xchg
lds
add
aaa
icebp
mov
add
sub
and
aam
mov
cmp
and
stc
cmp
jmp
mov
mov
cli
push
loope
mov
in
decl
aas
shlb
mov
dec
adc
mov
rorl
push
and
test
push
clc
test
jnp
dec
sbb
shr
test
add
add
jo
mov
pop
xor
jmp
and
xor
icebp
or
mov
popa
mov
inc
adc
add
mov
push
stc
jl
shll
int3
rorb
imul
in
cmp
repnz
cmpsl
imul
xor
fcomps
jns
nop
and
adc
in
popa
cld
inc
xor
jmp
icebp
xchg
xor
jg
fsts
jnp
popa
aaa
xor
in
push
sbb
jmp
outsb
or
jbe
lcall
jecxz
aas
mov
add
fs
inc
and
cmp
loopne
call
popa
push
ss
mov
mov
inc
pushf
jne
stos
inc
shlb
shrl
cld
in
push
outsb
sub
mov
pusha
xchg
into
or
sbb
fidivs
jbe
cmp
sbb
mov
dec
mov
push
sub
imul
pop
push
xlat
popf
test
rcrl
xor
in
jmp
xor
fisubrl
out
fiadds
jmp
ss
movsl
inc
mov
int3
fildl
sub
clc
outsl
leave
cmpsl
std
inc
lock
dec
imul
int3
lret
xor
out
dec
int3
xchg
mov
shlb
aam
cld
cs
lcall
cld
cmp
mov
outsb
push
xor
out
add
scas
cmp
mov
or
push
mov
push
roll
cmp
or
data16
adc
cmp
sub
jp
xor
out
dec
and
test
mov
call
cmp
mov
incl
pop
adc
rorl
test
int
mov
push
ja
xor
decl
sbb
mov
mov
pop
movsl
iret
push
jge
and
or
nop
sbb
sub
das
decl
pushf
adc
test
or
pusha
out
sbb
pop
inc
cmp
loope
or
daa
call
std
and
inc
mov
push
fdivp
adc
jp
jb
dec
pop
aas
movsl
out
add
cltd
jge
in
jmp
sub
bound
movsb
hlt
cmpb
dec
std
in
pop
idivl
xchg
jmp
decl
les
dec
dec
rcll
rorl
jae,pn
stc
insl
xchg
xor
jmp
fistl
scas
and
mov
repnz
ljmp
or
loope
xor
notl
mov
xlat
jle
xor
jg
push
cmp
jmp
clc
out
jae
mov
sub
sahf
jno
clc
loop
jp
lcall
lods
mov
loop
dec
insl
into
sarb
out
pop
daa
repz
mov
stos
or
mov
xor
mov
lcall
loopne
inc
push
sbb
and
xlat
aaa
pop
sbb
outsb
scas
dec
dec
adc
mov
sti
mov
sub
jp
ljmp
int
pop
mov
sub
add
aaa
pushf
call
iret
or
or
mov
dec
aad
pushl
popf
pusha
inc
push
mov
faddl
or
test
imul
repz
cli
mov
lretw
xchg
pop
call
gs
sub
sbb
popf
cmpb
test
mov
dec
ja
inc
decl
test
xchg
and
popa
cmp
aam
pop
leave
mov
push
inc
cmp
in
andb
call
jnp
aad
inc
mov
cmp
imul
jo
xor
sub
sub
xchg
jle
mov
adc
call
int3
arpl
mulb
push
dec
scas
jp
pop
mov
push
xor
mov
ss
in
mov
mov
sub
dec
add
lcall
shlb
lahf
push
cmc
outsb
test
gs
outsb
sub
inc
and
movsl
pop
sbb
jmp
lahf
daa
or
mov
push
dec
pop
subb
pusha
icebp
pop
xor
inc
out
push
call
lock
dec
ds
nop
mov
mov
cld
mov
pushf
add
push
pop
push
xchg
mov
or
jg
cli
dec
imul
out
push
pop
dec
xchg
push
movsb
lahf
sahf
bound
jns
xchg
pop
sbb
ds
push
icebp
cmp
push
stos
or
out
push
mov
jb
sar
je
das
xchg
es
jmp
icebp
xor
or
incl
stos
push
mov
jo
outsb
add
in
pusha
mov
iret
mov
jg
lods
push
jb
mov
or
and
mov
push
incl
std
fidivrl
add
sahf
ja
adc
mov
jbe
ss
cmp
sub
sub
sub
call
dec
add
mov
mov
aam
packsswb
mov
add
lcall
jne
xchg
sti
andps
add
add
icebp
adc
inc
mov
lret
inc
sub
add
mov
incl
les
jge
jp
jmp
int
movsl
inc
pop
jns
push
out
and
in
ja
push
jnp
jnp
in
cmp
add
popa
jb
cmpsb
dec
imul
js
movsl
mov
in
lret
insb
dec
pop
ljmp
dec
inc
fcomps
push
rolb
sahf
and
fnstcw
lret
jne
daa
add
loop
lret
mov
sbb
add
xchg
lock
lret
imul
and
xor
shll
lret
call
fnstenv
inc
lock
lcall
sub
cmp
push
stos
mov
push
call
idivb
mov
mov
aad
adc
or
mov
lcall
adc
adc
shll
jle
jg
jle
inc
dec
mov
cmpsl
mov
loopne
mov
push
xor
pop
test
popf
xchg
mov
jg
mov
fwait
shl
jae
testl
lcall
inc
mov
shll
inc
xor
push
inc
inc
jg
inc
xchg
sbb
stos
adcb
push
out
mov
mov
sahf
stc
dec
xchg
into
ljmp
pop
inc
mov
bound
in
pop
cmp
daa
and
stc
out
push
insb
jbe
fists
fcomip
mov
ret
loope
or
es
mov
sub
dec
jne
int3
jle
cmp
inc
jl
lods
sub
jo
sub
test
std
cmp
hlt
mov
mov
sub
cmc
lcall
movsl
movsb
repnz
push
sub
cmp
sbb
xlat
call
lret
cmp
ja
mov
jmp
movsl
popf
in
mov
lahf
ljmp
nop
push
lock
mov
stos
jp
jecxz
dec
adc
ljmp
and
pop
and
hlt
je
push
imul
cwtl
mov
arpl
movsb
decl
jne
ss
sub
mov
push
lret
cmp
cmpsl
add
and
in
ljmp
mov
mov
nop
push
jecxz
jmp
pusha
insl
inc
push
sahf
rclb
out
mov
ljmp
daa
test
jge
sbb
sbb
fidivl
or
ds
fdiv
test
xchg
push
jge
inc
and
inc
je
and
xchg
cli
xchg
dec
pop
and
adc
pusha
pusha
fistpll
push
idiv
dec
shlb
sbb
xor
test
fbstp
sub
pop
aaa
fs
nop
dec
fdivrp
jg
dec
dec
lods
mov
cmpsb
addr16
push
cltd
xor
mov
push
nop
sbb
incl
push
insb
pop
call
loop
ds
stc
outsb
dec
xchg
add
jg
lret
std
lret
sub
pop
mov
das
xchg
fistpl
pop
gs
dec
push
push
cmp
in
das
jg
adc
mov
lds
xor
cmp
adc
decl
lock
cmpsb
and
rclb
aad
test
shrb
stc
dec
decl
add
fmuls
mov
jecxz
repnz
aas
mov
ds
push
loop
aaa
cld
out
cli
dec
xor
cli
sub
add
jbe
xor
jnp
sti
subl
daa
cmp
xor
cwtl
clc
push
outsl
mov
lahf
push
orb
shl
repz
incb
mov
sti
jo
xor
push
ljmp
xor
lret
dec
shrl
jbe
sti
enter
out
aad
and
ret
add
ds
sti
leave
mov
lret
insb
xor
test
xor
mov
in
in
cmp
test
fmuls
and
mov
xor
sbb
mov
mov
pushl
cmp
shlb
test
nop
outsb
cmc
push
shll
cmp
decl
jle
bound
mov
pop
ss
xlat
inc
test
mov
lret
lret
or
sub
jns
pop
jp
sub
add
pop
cli
rorb
dec
cld
fcomip
cmp
fs
xchg
ret
pop
out
xor
loop
xor
dec
test
cmp
mov
jmp
adc
mov
ljmp
cld
out
fisttpl
jbe
xlat
dec
inc
jecxz
push
or
dec
pop
push
cld
mov
xlat
sbb
adc
and
daa
push
inc
in
mov
mov
inc
lret
pop
test
push
xchg
movsl
sbb
loop
shr
push
pop
bound
shll
loop
jl
sub
addr16
pop
mov
std
pushf
mov
into
push
push
fbstp
inc
push
mov
movsb
sbb
test
ret
mov
int3
lds
jge
jg
and
shrl
pop
jg
lcall
or
popa
xor
call
mov
int3
mov
fs
pop
xchg
fisttpll
mov
xlat
lcall
jmp
pop
lods
mov
or
fistl
xchg
out
sti
daa
xchg
xor
jg
cmp
mov
push
mov
or
add
mov
mov
push
mov
pop
jp
call
js
push
pop
push
sbb
arpl
jb
pop
dec
sub
xchg
adc
jge
das
gs
imul
clc
incl
adc
jg
xor
dec
lret
inc
sti
sub
or
cmp
push
sbb
sbb
push
rcrb
inc
mov
lds
xadd
or
rcr
jp
pop
mov
incl
mov
outsl
popf
daa
mov
mov
pop
mov
push
andl
or
xor
cmp
call
std
popf
lock
cmpsb
xor
xchg
int
xchg
daa
ficoms
inc
lret
arpl
clc
pushl
pusha
mov
sub
jns
sbb
pop
sub
movsb
pop
inc
jl
jmp
aam
sbb
testl
addr16
repz
mov
ja
ljmp
cmp
push
iret
pop
jp
lea
repz
pop
add
inc
pop
cmp
imul
in
testl
xchg
call
dec
call
call
sbb
lea
bound
aaa
adc
clc
int3
push
ficomps
lret
and
add
push
ret
test
inc
xchg
or
out
cli
mov
fidivs
cmc
push
push
pushl
jmp
add
dec
jg
mov
in
std
xor
adc
movsb
loopne
inc
scas
sub
mov
dec
popa
jmp
insl
test
insb
pop
leave
xor
cmp
cmp
and
loop
ss
or
mov
push
movsl
incl
fimull
rcrl
or
pop
fsubrs
lcall
mov
and
mov
xlat
call
out
sbb
push
insb
xchg
icebp
repz
fstpt
ja
cld
jg
mov
xor
add
jg
xchg
cwtl
adc
pop
sti
test
jmp
int3
repz
int3
popf
lahf
mov
das
or
ljmp
xor
out
mov
pop
add
mov
xchg
pusha
jmp
jp
adc
test
xchg
mov
pop
fwait
cmpsl
add
mov
sbb
mov
push
decl
cmp
lret
adc
out
out
mov
mov
ss
andl
jae
mov
mov
inc
mov
inc
dec
aad
adc
fldcw
push
lcall
cmpb
mov
push
fcoml
into
sub
mov
and
leave
clc
dec
pushl
pushl
push
mov
out
pop
jne
push
shll
ds
xor
ret
jmp
push
lods
cmp
push
outsl
or
vsubps
iret
push
push
inc
mov
call
mov
les
inc
rcrl
jp
push
mov
mov
pushl
or
jg
call
ret
dec
out
inc
push
pusha
add
repz
cmpsl
ljmp
fsubrs
or
enter
outsl
jb
enter
sbb
or
call
pusha
sbb
pop
out
out
insl
pusha
or
repz
jmp
adc
cmp
stos
aaa
jo
xchg
fstpt
cmpsb
loopne
lret
ss
xchg
iret
test
add
rclb
nop
pop
cmp
clc
mov
cs
daa
pop
pop
xchg
adc
lcall
je
pop
mov
mov
push
bound
ss
add
fucom
mov
add
jmp
cltd
add
push
leave
sub
mov
jg
sbb
sbb
mov
pushl
lods
stc
jp
and
lcall
stos
int
push
jno
mov
and
ja
stc
add
lcall
lock
mov
jne
mov
xor
popa
pop
cs
push
loope
jno
mov
mov
cmc
cmc
pop
ds
popf
and
adc
mov
scas
push
sub
addr16
jp
cmp
lcall
sub
shr
inc
mov
pusha
mov
pop
dec
jb
cmp
jns
adc
movsl
jo
cmpsl
shll
psraw
jno
fbstp
jns
sarl
decl
xor
adc
dec
nop
sbb
sbb
inc
jno
cmpsl
sbb
addl
fcmovbe
test
inc
or
mov
jnp
sub
add
jg
in
pop
cli
cli
stos
into
mov
mov
inc
imull
pushf
lret
cmp
inc
inc
add
cmp
mov
or
inc
addr16
lahf
leave
out
enter
jmp
cld
incl
adc
push
push
vandps
clc
ljmp
clc
jae
cmp
cli
decl
xchg
sbb
out
out
adc
mov
jle
jmp
cmp
fcoml
aad
je
fmuls
jbe
sub
mov
leave
fdivs
pushl
and
cwtl
jb
call
jnp
fadds
insb
xor
pop
cmp
ret
popf
push
mov
pushl
cmp
dec
add
cmp
int
cmp
lcall
adc
popf
gs
rclb
inc
decl
sbb
incl
outsb
shlb
mov
in
adc
jbe
imul
ds
sar
call
test
lret
fsubl
sub
aam
pop
pop
clc
mov
mov
filds
cltd
add
mov
adc
sub
add
dec
fiadds
ret
cld
mov
xchg
icebp
ja
les
ljmp
sub
mov
jmp
add
jge,pt
in
cli
xor
out
mov
sub
fnstcw
imulb
imul
sub
lds
or
out
out
in
loopne
sbb
inc
jno
out
into
pop
out
in
pop
jbe
in
and
loopne
xchg
imull
or
inc
pop
pop
sahf
arpl
push
pushl
adc
outsl
mov
cmp
push
pop
mov
adc
ret
out
push
sub
repz
mov
dec
xchg
sub
and
mov
scas
in
fadds
jnp
and
std
lret
xchg
xchg
dec
daa
jnp
inc
add
mov
decl
cld
loop
in
mov
lret
lret
xor
pop
lcall
movsb
mov
pop
cltd
aam
fisubl
push
or
mov
mov
fisubrs
pop
iret
cwtl
sbb
je
push
daa
lcall
mov
xchg
and
jmp
addl
ret
cmp
xchg
xor
xlat
push
ja
mov
dec
aaa
xor
adc
call
add
and
inc
loopne
mov
rclb
pop
aaa
push
addb
mov
gs
call
xchg
jnp
xchg
lahf
inc
xchg
pop
int3
mov
lods
movsl
mov
hlt
je
dec
movsl
jl
sarl
jp
jae
push
pusha
fsubr
jl
mov
mov
mov
pop
jb
push
fs
jg
call
outsl
jge
outsl
lods
cmp
shrl
stos
jb
push
dec
xchg
fstl
sbb
pop
loopne
mov
into
push
and
add
sub
lcall
mov
or
decl
xor
cmpsl
divl
ficomps
dec
push
icebp
jne
cmpsb
push
jmp
mov
stc
fsubs
and
mov
ss
xor
mov
ljmp
fs
push
ja
arpl
aad
lcall
mov
int
and
xlat
mov
inc
daa
add
jp
loop
shl
push
add
incl
jl
mov
ret
lods
stos
scas
int
into
mov
inc
dec
pop
imulb
adc
loopne
repnz
dec
xor
xchg
xor
std
aaa
pop
mov
data16
adc
mov
decl
sub
add
insl
addr16
dec
jbe
call
imul
cs
rorb
pushl
mov
mov
in
dec
jge
mov
jmp
cmpsl
imul
xchg
xor
push
jns
enter
decl
lret
data16
push
cmp
int
and
mov
and
xchg
aam
fildll
pusha
lcall
cmpsb
mov
in
mov
mov
dec
imul
adc
dec
popf
sar
ljmp
fstpt
and
scas
pop
jno
add
orl
inc
push
push
or
ljmp
sar
or
pop
ljmp
mov
jge
dec
enter
pop
stc
sbb
decl
insl
mov
nop
addb
fsts
out
inc
jl
sbb
push
dec
fcoml
mov
aam
dec
jae
inc
pop
lods
jns
xor
inc
cmp
jmp
lcall
rol
clc
xchg
pop
sub
in
fst
dec
xchg
imul
dec
fucomip
data16
icebp
in
inc
adc
dec
cmc
sub
rolb
xchg
in
push
sbb
lret
jmp
lds
pushl
add
mov
fwait
mov
mov
es
and
fdivrp
lcall
sti
or
fwait
jmp
jo
jb
sub
enter
outsl
mov
pusha
push
ficompl
cmc
xchg
fstp
push
scas
lods
stos
push
or
mov
movsbl
pusha
xor
jmp
jno
push
std
lea
xlat
add
push
adc
push
or
scas
clc
fsubr
mov
cmp
movsb
xor
repnz
mov
or
fcompl
add
movsb
imul
cmp
imul
cmp
dec
jle
mov
ja
lcall
inc
mov
sub
out
dec
imul
jbe
push
insb
movsb
stc
inc
cmp
roll
lcall
dec
fistpll
int
cmp
addb
insl
lcall
xlat
mov
jp
rolb
sub
imul
cmc
arpl
repnz
pop
addb
pop
fnstsw
fucomp
sbb
clc
xchg
or
fdivp
call
jg
add
xchg
add
dec
mov
mov
incl
inc
adc
mov
es
fwait
dec
jb
call
cld
dec
icebp
pop
push
test
xor
lods
sub
cmp
mov
xchg
dec
cwtl
pop
xlat
lds
lcall
inc
int3
cmp
mov
sbb
es
lock
shrl
jg
scas
cmp
in
xchg
stos
xor
push
sub
dec
add
fnsave
call
adc
adc
ja
fists
imul
out
mov
push
ffree
call
inc
test
pop
mov
orb
mov
vmwrite
rolb
push
or
data16
jbe
popa
xchg
scas
fs
mov
mov
jmp
lea
ds
mov
pusha
and
dec
sub
cmp
out
out
ljmp
mov
into
mov
outsl
fiadds
mov
and
inc
lock
incl
dec
pop
movsb
mov
in
nop
scas
push
adc
dec
push
negb
packsswb
pushl
push
popa
movsl
cmpsl
push
mov
push
gs
cs
ljmp
pushf
mov
jb
push
xor
xchg
jns
push
adc
mov
icebp
push
pop
pop
pusha
in
fsubr
cmp
fs
aad
sub
jmp
dec
sbb
in
add
pop
add
push
insb
xor
mov
jmp
clc
sbb
xor
int
ret
dec
or
add
lea
push
loopne
jge
jecxz
mov
iret
insl
int
fcmovne
out
sbb
pop
repz
stc
mov
mov
mov
out
xchg
call
cmc
sahf
loope
push
push
mov
js
push
js
decl
shll
cmp
jae
fs
inc
std
cmp
mov
stos
fwait
subb
mov
arpl
jp
mov
cmp
mov
loop
push
lret
push
fwait
les
dec
ja
div
fsubl
mov
jmp
and
sbb
rolb
mov
pop
jb
ljmp
sub
call
lea
daa
insb
adc
cmc
in
mov
incl
lock
bound
lcall
lods
dec
ret
sbb
mov
sbb
inc
mov
hlt
call
call
cmp
sub
test
fnstenv
ud0
decl
and
out
mov
repz
xchg
lahf
into
jae
out
sub
adc
decl
lock
lahf
and
dec
push
scas
or
adc
push
imul
fldt
repz
dec
int3
sub
adcl
das
popf
inc
mov
jns
std
mov
pop
jg
jge
pop
xchg
xor
xlat
sub
mov
call
sub
and
inc
mov
or
sar
mov
xchg
xor
add
in
pushf
pusha
push
ja
mov
sub
xor
movsl
jmp
int
js
xor
push
xor
add
add
mov
xor
scas
cli
sub
cli
sbb
jns
mov
loope
sti
iret
shlb
add
xchg
mov
ficompl
mov
pushl
outsb
adc
das
jmp
inc
test
ja
cld
outsb
enter
mov
xchg
js
cmp
popf
adc
pusha
popf
jnp
repz
dec
rcrl
cmp
mov
xor
loope
or
pusha
cmp
paddq
and
inc
jbe
loopne
les
mov
call
fdivrp
jmp
jne
jg
insl
mov
sub
scas
mov
xchg
pushw
cmp
movsl
cmp
in
xchg
decl
out
ret
xchg
aas
in
insb
add
in
das
pop
sbbl
leave
mov
sub
fldl
push
sbb
mov
xor
adc
sub
xchg
sbb
or
lahf
ljmp
incl
mov
push
dec
cmpsl
lods
xor
pop
popf
roll
incl
jbe
and
pop
mov
ljmp
inc
imul
xor
out
cltd
xor
call
xchg
jns
sub
cltd
mov
add
pop
jo
sub
jnp
mov
push
sar
lcall
mov
mov
adc
adc
pusha
pop
in
or
sub
popf
pushf
aad
mov
dec
push
mov
pop
pop
jbe
mov
jge
xchg
xor
xchg
push
iret
mov
cs
mov
inc
fiadds
adc
mov
scas
into
sbb
mov
incl
movsb
daa
jnp
inc
addr16
jbe
jb
jmp
jno
adc
pushl
inc
iret
arpl
jbe
lret
push
cmpsb
gs
outsl
ss
daa
pop
jecxz
ljmp
mov
xor
push
or
lret
mov
sti
lea
out
cli
mov
pop
and
jnp
dec
leave
cmc
imulb
pushl
repnz
int3
adc
add
jmp
cmp
xlat
gs
in
incl
loope
jae
movsb
outsl
lret
pop
dec
fdivrl
insb
in
dec
sar
mov
cs
adc
and
push
or
shll
push
mov
fcom
lret
sub
mov
jle
dec
in
inc
outsb
insl
mov
push
sbb
sbb
incl
cli
notl
icebp
bound
test
mov
or
or
sbb
or
and
fstl
test
adc
inc
das
cli
pushl
out
movl
pop
leave
push
push
push
dec
pusha
push
push
push
es
jo
dec
ret
ret
daa
add
mov
decl
andl
jns
jae
hlt
mov
mov
rol
mov
jno
mov
imul
std
pushl
orl
js
push
mov
ja
int
iret
loope
sbb
jmp
in
mov
jb
push
fisubl
repnz
mov
xor
fcmovnb
ret
mov
outsb
pop
jae
xor
jp
dec
sar
fmul
int
pop
xchg
mov
cmc
inc
pop
fs
xor
push
cmp
pop
out
push
out
sub
in
fsin
mov
inc
shrb
xor
jp
and
nop
es
out
xchg
mov
or
jp
jbe
cmpsb
int3
test
jns
call
cmp
ss
incl
daa
dec
jle
shl
shl
or
and
jmp
mov
and
call
nop
or
push
bound
pop
or
jmp
addr16
daa
push
lcall
popf
push
enter
inc
arpl
loope
inc
xchg
imull
mov
arpl
cli
or
sbb
dec
push
push
xor
inc
lea
arpl
loop
xchg
adc
jp
push
insl
stc
test
ja
sti
mov
adc
sbb
and
dec
out
bound
out
sub
gs
fisttpl
xchg
cli
jp
mov
or
lret
jno
lods
mov
mov
mov
fs
fbld
mov
push
sbb
push
pop
iret
mov
fsub
pushl
xchg
fsubs
jbe
fs
xchg
adc
test
mov
xor
jb
or
roll
lock
xorb
fs
aam
sti
aad
jmp
sbb
lds
adc
sub
or
sti
lret
xchg
loop
jg
dec
add
cmp
shrb
sub
mov
push
jge
xchg
dec
push
xor
ljmp
or
mov
es
icebp
or
mov
incl
scas
lcall
sub
mov
fstps
mov
sbb
jecxz
mov
enter
mov
enter
xchg
mov
scas
xor
mov
jg
inc
cmp
adc
sbb
sti
inc
jb
fsub
and
fisubs
movsb
ljmp
dec
rorl
add
inc
std
repnz
sub
pop
aad
mov
call
je
into
add
shrl
xor
popf
std
mov
pop
lret
sti
mov
lcall
push
mov
xchg
push
pop
sarb
decl
es
add
loop
xor
push
xchg
jnp
adc
xchg
push
push
loopne
loopne
pop
aaa
dec
ret
popa
jg
std
sahf
push
outsb
push
jg
add
dec
xchg
cmpsl
call
cmp
fwait
adc
mov
les
and
into
nop
repz
int3
push
push
jne
nop
ljmp
clc
xchg
rorb
mov
sbb
push
xchg
pop
xor
or
decl
xchg
xchg
pop
std
mov
sub
incl
cmpsl
ss
cmpsb
push
loopne
gs
cmp
jnp
fcmove
pop
xchg
jbe
or
push
sbb
jmp
dec
cmpsb
fwait
mov
shlb
jge
and
sarb
xchg
stc
push
xchg
rcrb
pop
jl
je
add
or
jmp
mov
lods
lea
push
scas
jo
lcall
pop
xchg
cmpsl
lods
stos
push
and
fscale
pop
ja
push
repz
enter
incl
cltd
mov
sbb
clc
and
popf
pop
stc
outsl
pop
or
ja
jnp
add
ljmp
cwtl
shrb
dec
and
dec
stos
sub
aaa
mov
xor
xorb
fbld
ljmp
xchg
pop
negl
lods
xor
sahf
clc
mov
xchg
aad
inc
xchg
incl
in
aas
imul
loope
mov
mov
fisubrs
in
push
call
popa
leave
testl
shll
mov
xchg
cmp
cmc
frstor
pop
mov
gs
pop
cmp
xor
inc
add
lahf
nop
inc
adc
cmp
adc
aad
cmpsb
sar
jg
fwait
and
sahf
push
push
mov
pop
cmp
jnp
imul
inc
mov
add
mov
or
jae
xlat
sub
push
mov
jbe
repz
fmul
ljmp
insl
sub
ljmp
mov
xor
mov
add
adc
xor
sbbb
shlb
mov
test
push
jl
fcomip
out
scas
mov
mov
pop
add
test
xor
daa
jae
test
push
call
adc
mov
movsb
pop
rcll
sar
lret
cmp
addr16
aam
jne
mov
jmp
mov
idiv
cmpsb
and
jp
outsl
mov
cmpl
push
out
cmc
sahf
vandps
jbe
pushl
std
incl
and
fdivrl
sub
outsb
movsl
orb
push
lcall
dec
lret
inc
into
lds
loope
adc
std
cltd
and
xchg
cli
sahf
in
jecxz
incl
ja
out
das
int3
testl
fldl2e
sbb
or
roll
ljmp
sub
popf
mov
int
xchg
ret
jae
mov
pop
jbe
into
arpl
stos
cs
jg
or
call
sub
dec
xor
nop
inc
lods
and
xchg
add
pushl
fwait
dec
lcall
push
or
mov
dec
out
inc
into
inc
and
test
hlt
incl
insl
mov
andb
xchg
push
push
insb
jmp
lea
call
loope
stos
lcall
push
movb
pushf
in
dec
push
std
mov
test
lcall
sub
int
mov
pop
dec
test
push
fcom
enter
pop
inc
dec
ljmp
ss
lcall
xchg
in
lods
mov
pop
aas
sbb
jb
inc
jle
mov
out
clc
pushl
fcomp
je
rclb
inc
mov
adc
cmp
adc
sbbl
push
xchg
mov
inc
push
insl
adc
divl
and
or
and
fwait
test
lcall
or
repnz
xchg
cmp
jmp
push
mov
mov
mov
ja
bound
jl
jmp
sarl
cwtl
mov
cli
and
push
push
aad
enter
aas
les
pop
incl
cmp
fisubrs
in
mov
jnp
std
push
xchg
pop
or
sti
incl
adc
mov
leave
data16
fsub
mov
mov
push
movaps
into
and
xchg
aad
mov
inc
int
and
ret
decl
js
or
popf
test
jno
cmpb
pop
imul
mov
ja
mov
fucomp
daa
pusha
stos
xchg
dec
fnclex
sub
push
imul
lcall
test
mov
push
test
aas
sub
cmc
sbb
lods
xchg
mov
and
fisubl
xor
jo
int
movsl
test
decl
or
aaa
bound
push
fmull
mov
incl
lock
cld
decl
inc
fldcw
loopne
ds
inc
ds
mov
jmp
xchg
push
bound
sub
outsb
mov
fwait
mov
js
into
add
jmp
int3
fildl
add
cld
and
test
cmp
mov
xchg
incl
dec
sbb
adc
adc
sbb
popf
cmc
pop
clc
decl
xchg
daa
test
decb
adc
outsb
les
or
rolb
cmpsb
incl
mov
js
adc
mov
daa
mov
jmp
xor
insb
jl
mov
pop
lret
in
xchg
mov
sar
push
std
add
or
jb
mov
push
js
pop
jmp
xchg
xor
out
arpl
outsl
mov
scas
dec
pop
or
call
jne
mov
cltd
xchg
test
ret
xchg
pushf
mov
outsb
xchg
pushf
push
movb
pop
loopne
sti
sbb
sub
lcall
loop
and
daa
or
outsb
xor
xor
pop
lcall
push
or
imul
and
ret
clc
mov
lcall
popf
fsqrt
stc
xor
inc
icebp
das
shll
loop
orb
and
mov
call
pop
pop
mov
pop
nop
pop
jnp
xchg
lcall
fildll
fidivrs
mov
jle
xor
xchg
lcall
xor
xchg
mov
dec
mov
rolb
or
cmp
mov
fistpll
test
in
incl
mov
mov
lods
add
hlt
aas
cmp
lods
push
jmp
out
repz
fmuls
mov
scas
out
push
arpl
shrb
cli
popf
adc
mov
std
addr16
mov
stos
rclb
nop
ret
dec
sar
or
xchg
pop
sub
call
loopne
dec
sbb
ffreep
and
aam
xor
inc
pop
mov
xchg
arpl
lcall
scas
xchg
sub
xor
imul
sbb
cli
jo
xchg
mov
mov
adcl
sar
pop
mov
xor
push
lods
mov
test
stos
add
movsl
push
mov
incl
jbe
sub
fwait
add
insb
or
and
lahf
inc
ja
mov
call
mov
int3
jp
std
dec
pop
mov
jg
fstpl
cmpsb
ljmp
add
fbld
test
loope
add
addr16
xor
pushl
mov
stc
cmp
das
ror
in
fbld
jae
sub
or
rcrl
icebp
ljmp
popa
pop
ror
push
push
ret
mov
push
push
and
dec
cmp
cmpsb
ljmp
add
push
jecxz
loope
jbe
popa
fstpt
in
jne
dec
inc
xor
add
decl
shll
pop
lds
in
mov
pop
pop
scas
decl
cmc
loopne
stos
das
arpl
inc
fldenv
mov
and
cmp
xchg
dec
pop
fimuls
call
pop
push
mov
sti
aad
push
mov
push
jo
adc
cmp
cmp
call
outsl
or
fsts
test
jmp
shl
add
rcrb
cs
lods
mov
xchg
jo
scas
add
push
roll
xchg
pushl
mov
scas
xor
push
loope
cwtl
fsqrt
jg
call
sub
pop
pop
push
sub
mov
or
ljmp
cltd
das
pop
inc
sbbl
fisubrs
push
jmp
std
pop
xor
loop
test
cltd
clc
dec
add
cs
lret
jmp
add
inc
bound
adcb
jle
insb
push
sbb
mov
sbb
pushl
out
pop
ss
in
clc
fadds
pop
pushl
adcb
mul
xchg
jmp
push
mov
lock
and
data16
push
jne
jg
dec
fsubrs
pop
pusha
add
shrb
rcrl
xchg
xchg
mov
je
jg
lcall
mov
jmp
test
int
xchg
cmp
sbb
lea
popf
cmc
incl
xor
sbb
loop
fnstsw
xchg
push
sub
adc
dec
push
mov
pop
cli
xchg
in
adc
sbb
push
pop
sti
pop
cmp
into
pop
xchg
pop
sub
and
xchg
jl
mov
sub
mov
pop
inc
sub
mov
inc
pop
cwtl
int3
or
pop
aas
or
arpl
mull
dec
sub
mov
sub
in
cld
sbb
or
adc
xor
int3
sub
or
decl
dec
add
sarl
mov
lods
movsl
loop
into
sbb
insl
pop
xor
ret
cmp
incl
imul
hlt
dec
xor
aaa
pushf
pand
cmp
insl
in
adc
push
lret
pop
lcall
lods
sbb
loope
imul
and
incl
sub
shlb
repnz
inc
aad
jle
or
loope
loopne
and
or
std
jmp
lcall
pop
jp
scas
sbb
jle
jg
std
pushl
insb
xchg
mov
das
shlb
sub
mov
sti
sbb
sbb
and
arpl
rol
ret
cmp
pusha
dec
mov
pop
xlat
jb
dec
xchg
sub
out
or
mov
loop
ljmp
mov
cmc
cmp
or
jp
and
jge
jo
mov
jg
mov
lods
dec
mov
push
insl
mov
and
call
lods
adc
nop
stos
sub
pop
inc
cmc
mov
fistps
rcr
mov
lock
cmc
mov
movsb
pushl
jbe
ds
aaa
shrl
lods
ficoml
xchg
out
xchg
scas
fldt
xchg
pop
cmp
incl
jmp
in
add
xchg
daa
xor
lods
bound
lcall
ds
jno
fucom
orl
xor
dec
add
decl
cwtl
push
lds
lahf
outsb
imul
push
sub
push
pushf
mov
pushf
jns
pushl
push
lcall
aad
mov
mov
inc
adc
fdivrl
cld
ljmp
push
les
in
jo
ds
outsb
jg
add
pop
or
ss
scas
pop
sub
push
inc
and
and
add
adc
and
icebp
or
xchg
mulb
addb
jnp
sahf
or
add
incl
iret
mov
add
ja
jo
mov
test
incl
clc
pop
fcoms
add
jg
inc
roll
pop
dec
orb
pop
add
mov
sub
adc
popa
adc
sub
jle
movq
add
nopl
stos
loope
sub
cmpsl
adc
pusha
or
jno
mov
jnp
xchg
movsl
push
daa
add
lcall
add
es
push
movsb
ja
aam
push
movsb
inc
scas
push
mov
push
and
push
test
and
imul
sbb
pop
add
sub
push
mov
pop
sbb
add
pop
pop
inc
mov
pusha
sbb
mov
addr16
out
jp
adc
fs
mov
insb
or
lret
imul
fbstp
leave
imul
imul
xor
add
fldenv
lock
insl
fdivs
mov
stos
pop
stos
mov
enter
ss
add
jo
mov
mov
mov
push
shll
add
outsl
push
shll
fidivrl
iret
outsb
fcmovnu
mov
or
push
ret
je
fdivp
fildl
jge
fisttps
add
fwait
inc
ds
in
jmp
push
add
mov
sbbl
rcr
mov
mov
push
push
push
fwait
in
imul
jne
push
aam
push
ret
gs
inc
push
mov
push
pop
cmp
outsb
jbe
push
mov
pop
add
inc
xchg
cs
lcall
jno
lret
stos
fnsave
sti
aas
add
ja
push
push
xlat
jne
add
push
jbe
fdivs
push
aad
push
xlat
ja
dec
sti
shlb
or
jns
push
jp
sub
fnstcw
inc
push
fidivrl
adc
add
ja
fldl
ret
rorl
ljmp
xchg
fiaddl
sub
xchg
xor
xchg
insl
push
xchg
pop
xor
imul
ds
aaa
push
lcall
push
cmp
jl
insb
push
pushf
cmp
popf
xchg
popf
aas
in
xchg
push
sahf
inc
push
lahf
inc
lahf
mov
mov
push
push
jecxz
push
imulb
movl
sahf
out
sbb
clc
stc
cli
jg
out
sti
cld
std
incb
jecxz
mov
sbb
arpl
inc
jae
add
imul
pop
add
cltd
int
add
pop
add
push
mov
add
cmp
xor
ja
push
add
or
add
add
fldcw
or
or
test
test
nop
stos
stos
cmpsl
or
push
sbb
mov
pop
pop
adc
rcrw
adc
mov
pop
stos
femms
lods
lods
pop
stos
insl
addr16
sbb
scas
add
scas
insl
and
imulb
scas
lods
push
and
adc
sbb
int
nop
aaa
sbb
sbb
out
in
scas
mov
and
or
or
mov
xchg
or
lock
in
mov
mov
and
and
mov
and
inc
jo
sub
pop
sub
mov
gs
and
mov
cmpsb
cld
pop
daa
mov
aaa
add
push
es
test
aas
cmp
pop
cmp
cmp
add
idiv
adc
xor
pop
xor
pop
or
cltd
fstps
pop
pop
insl
pop
pop
mov
cmpl
das
push
cs
xor
outsl
outsl
add
xor
das
pop
push
push
xor
adc
pop
push
cs
decl
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
cltd
add
test
xor
pushw
dec
decl
jnp
dec
jo
mov
inc
xorl
mov
xchg
xchg
xchg
popf
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
xchg
lret
dec
ja
jns
dec
push
bound
js
loope
insl
adc
xor
jne
je
mov
pusha
push
jg
mov
push
jae
addb
cmpl
scas
push
lods
mov
aas
outsl
push
adc
xchg
pop
push
dec
add
jle
add
and
jge
fwait
pop
mov
xor
xor
ja
push
ja
jb
adc
fildl
es
xor
mov
pop
mov
xchg
pop
jbe
dec
sbb
cmp
outsb
and
mov
xchg
jo
loopne
sti
pop
push
inc
mov
cmp
mov
inc
add
jae
xchg
outsl
push
mov
inc
push
popf
inc
mov
aaa
add
xchg
jno
lret
mov
in
addr16
bound
mov
mov
push
into
inc
push
sahf
mov
insb
add
outsb
fcmovu
mov
add
xchg
xchg
pop
push
test
cmpsb
dec
push
dec
push
movsb
addb
add
jb
shll
outsl
pop
lahf
loopne
call
pushf
push
rorb
add
lcall
outsb
mov
jns
dec
mov
add
ja
sahf
jbe
fistpl
std
add
popf
imul
stos
push
add
and
mov
add
js
mov
data16
cmp
add
imul
pop
outsb
push
outsl
shlb
push
ds
insl
pop
ror
aam
sbb
jg
fiadds
sub
call
mulb
push
lock
add
mov
add
test
push
iret
xchg
data16
jb
out
shrb
xchg
in
push
jle
or
jecxz
or
std
into
fnstcw
aad
push
divb
fildl
adc
xor
out
push
addl
fistpl
incb
test
sbb
test
insb
mov
ss
mov
push
xchg
nop
and
out
rcr
adcb
sub
sub
aaa
in
add
imulb
push
xchg
repnz
xor
fidivl
cs
push
cmc
sahf
xor
lcall
aaa
cmpsb
pop
cmp
mov
aam
jle
push
cmpsb
scas
jo
test
sahf
pop
shrb
sbbb
stos
into
out
stos
dec
imul
psrlq
sub
mov
int
mov
mov
sarb
into
addr16
sarl
ret
dec
adc
add
mull
push
leave
cmp
dec
dec
out
je
add
inc
sbb
dec
adc
mov
fisubrs
or
or
mov
sbb
or
es
push
adc
push
add
in
pop
adc
adc
ds
add
ret
mov
xor
ds
inc
mov
mov
mov
std
push
testb
mov
add
and
fsubrs
ds
mov
pop
sar
push
aas
and
xor
xor
or
pop
and
insb
aas
aas
cmp
sub
adc
js
pop
adc
mov
sbb
inc
jbe
popf
mov
sub
inc
or
fidivrl
cmp
dec
mov
scas
ds
jle
aas
jbe
jge
adc
ds
xor
dec
inc
test
mov
scas
add
sub
mov
mov
addr16
mov
mov
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
in
ljmp
mov
sahf
ds
xor
sub
sub
sub
sub
cmp
sub
dec
and
sti
and
inc
mov
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
insl
outsl
jmp
xchg
jns
jle
addl
xor
jae
jo
outsb
pushf
sti
lds
loopne
shl
adc
push
addb
add
add
xchg
ds
push
pop
loopne
rcl
add
dec
xor
bound
mov
add
xchg
pop
cmp
test
add
mov
add
mov
in
add
push
fnstsw
repnz
aam
push
add
gs
jecxz
pushf
divb
add
ret
push
in
lcall
sahf
notl
fs
mov
jae
js
into
xchg
add
mov
push
jg
cmpsb
mov
test
scas
xchg
js
shlb
fiadds
pusha
nop
sub
jbe
sti
fimull
sub
nop
sub
mov
fistl
xchg
xor
xchg
xor
xchg
outsb
lcall
in
imull
jbe
negl
fcmove
fst
clc
cltd
int
es
push
lret
loopne
push
std
adc
fdivrp
divl
xchg
add
test
jg
adc
data16
jge
or
mov
add
pop
repnz
dec
dec
dec
dec
dec
dec
add
pop
mov
add
dec
or
adc
cmp
adc
dec
or
arpl
dec
push
adc
add
or
pop
pop
lcall
inc
push
dec
sbb
aas
in
and
dec
and
adc
sbb
dec
add
outsl
jmp
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
lcall
push
sbb
sbb
and
add
dec
ss
xor
sub
sub
cltd
xor
lods
mov
insl
ss
sti
addb
mov
pop
mov
mov
mov
popw
mov
mov
add
outsb
mov
push
add
add
outsl
sub
shrb
inc
sbb
out
addb
outsl
mov
cmpsl
or
adc
jne
incl
outsl
dec
add
push
inc
xlat
sbb
push
fstpl
incl
add
iret
outsb
sysret
mov
es
data16
pop
in
fdivrs
stc
sysret
in
lock
mov
stc
hlt
jl
push
jg
mov
pop
roll
adc
add
aam
mov
aad
or
cli
mov
pusha
sbb
and
pop
pop
jns
and
jle
cli
or
sbb
mov
mov
sti
jg
das
sti
in
and
mov
jle
cmp
pop
mov
dec
sti
add
mov
jg
xchg
sbb
mov
pop
jo
sbb
sbb
sbbb
cld
jg
rolb
jle
fadds
jg
std
ja
and
add
xor
jg
jg
pop
inc
enter
sbb
nop
xchg
cmpl
mov
jg
xchg
xor
push
and
push
inc
sub
or
decl
or
xor
or
or
mov
mov
jg
shrb
add
bound
mov
or
sbb
pop
pop
and
mov
test
and
sbb
scas
incl
add
incl
in
inc
in
jle
lret
imul
jno
xchg
add
push
scas
jle
mov
inc
cmpl
rorl
xor
addr16
add
add
add
jg
cmp
push
fs
push
adc
rorb
inc
shrb
push
sub
cmpsb
incl
sub
dec
jg
orl
pop
mov
inc
dec
jg
jle
add
fdivrp
sub
ljmp
stos
fcmovnu
cmp
pop
pop
pop
add
daa
aas
mov
pop
add
mov
jle
add
fs
bts
mov
mov
ds
jmp
decl
dec
xchg
push
bound
add
repz
mov
das
insl
fcmovnu
sahf
pop
daa
push
arpl
es
pop
mov
push
mov
fcmovbe
out
mov
decl
dec
mov
pop
lcall
out
mov
ljmp
inc
into
ds
pop
loop
test
mov
test
mov
stc
mov
fnstenv
add
push
jne
pop
dec
or
out
push
jnp
adc
decb
js
adc
insb
dec
jbe
pop
add
rcrb
mov
ljmp
ds
jp
test
cs
jle
jbe
test
dec
incl
ss
or
push
rcrb
int3
ja
xchg
add
dec
call
enter
fiadds
mov
fldt
push
mov
and
jbe
sahf
inc
out
mov
sbb
cmp
xchg
outsb
fwait
insl
popf
inc
push
pushf
cmp
dec
or
push
xchg
xchg
xor
sub
sub
nop
daa
sub
in
mov
nop
fucom
dec
xor
call
inc
push
mov
xor
jg
pop
fnsave
xor
pushf
push
xor
inc
sbb
push
jbe
sub
pop
cs
add
sbb
adc
ja
dec
cmp
xchg
movb
ja
and
mov
add
adc
add
nop
fsubs
testl
lret
cmp
add
lea
adc
pop
or
adc
pop
mov
orb
negl
sub
in
mov
mov
popf
push
imul
xchg
inc
and
cmp
lock
cmp
pop
icebp
sar
pop
test
push
in
add
mov
inc
adc
push
out
pop
xchg
cmp
or
jmp
adc
xchg
jnp
push
sbb
xor
dec
cli
push
idiv
sub
add
std
pop
xchg
lods
push
into
cmp
sub
xchg
fcmovb
add
pop
xchg
sbb
inc
pop
lcall
or
mov
sub
or
addr16
daa
cld
pop
das
or
mov
cld
call
mov
sub
std
out
mov
popl
lcall
or
mov
mov
push
fdivr
ds
lods
xor
xchg
incl
fadds
incl
fmuls
out
ljmp
sub
decb
push
xor
adc
incl
sbb
sub
xor
cmpsb
scas
ljmp
xchg
cmp
decb
mov
jno
add
fmull
xor
incl
mov
punpckhwd
pop
lcall
incb
mov
xor
addb
sysret
out
push
add
ljmp
sub
xor
incl
xor
push
sub
pop
shlb
outsl
sti
push
std
jmp
mov
out
adc
push
rorl
inc
call
cmpsl
bound
add
pop
stc
xchg
faddl
push
call
jg
inc
inc
cwtl
out
cli
mov
fwait
test
jmp
sub
add
sbb
incl
test
push
jmp
ss
sbb
pop
in
insl
fnstenv
pop
movsb
or
insb
aaa
mov
fidivs
mov
push
mov
shll
or
push
dec
sahf
ret
decl
scas
nop
xchg
push
adc
jns
mov
test
lahf
inc
inc
push
inc
cmpsb
pop
cmp
inc
pop
mov
push
pop
sahf
movsb
dec
push
stos
push
popf
dec
out
fwait
inc
cmpsb
dec
dec
inc
cmp
push
cs
dec
mov
and
and
push
shrb
enter
rcl
outsb
shrb
es
xchg
int
push
push
jb
xchg
and
imulb
push
iret
insl
leave
je
cmpsb
pop
daa
outsl
pop
imul
push
and
decl
push
xchg
lcall
xor
pop
add
repnz
movsb
es
jmp
adc
pushf
cmp
aas
decb
cwtl
xor
mov
push
inc
push
xchg
outsl
mov
xchg
push
push
aaa
push
lcall
xor
push
xchg
es
xchg
xchg
xchg
notb
sub
lcall
inc
test
inc
jmp
mov
fimuls
jecxz
add
or
mov
dec
cli
std
faddl
jge
push
jnp
cmpsb
jns
addr16
or
jl
or
insl
sub
fdivrl
jge
jg
es
in
pop
jbe
adc
fidivrl
push
dec
push
dec
repnz
repnz
in
out
xlat
jae
pop
fidivrl
push
mov
jnp
mov
add
in
add
int3
outsb
nop
negl
adc
mov
stc
sbbb
push
add
push
adc
int
push
or
add
addl
es
addl
orb
ja
lcall
xchg
out
push
sub
iret
out
mov
jbe
int
cli
pushl
clc
push
imul
ret
push
enter
inc
sub
jg
je
hlt
fnstenv
cld
fdivrp
outsb
popa
daa
jno
sub
jg
mov
icebp
pop
popa
add
and
mov
jg
mov
ja
aas
inc
and
jp
addb
in
xchg
aaa
inc
ds
incb
out
xchg
xchg
fisttpll
jg
dec
imul
pop
hlt
or
push
ja
dec
and
jge
dec
adc
push
call
fmuls
push
push
fsub
pop
push
or
push
dec
inc
push
int3
decl
jle
mov
fidivrl
arpl
clc
sbb
jbe
mov
push
pop
out
sbb
sbb
pop
push
pop
jne
sbb
mov
and
dec
lcall
push
adc
jle
jns
mov
push
xor
jmp
xchg
jmp
mov
push
xchg
mov
mov
adcb
xchg
out
sbb
loope
and
lret
jg
out
mov
jb
jo
or
cmp
jns
add
inc
or
xchg
xlat
push
cmovno
adcl
fbld
sti
adc
push
and
nop
add
or
add
sbb
lret
lods
addb
add
jmp
add
push
inc
lahf
loopne
sub
and
adc
mov
or
shrl
sub
push
xchg
inc
test
pop
push
sarb
mov
add
push
sbb
push
or
es
jae
and
add
insl
push
sbb
outsb
or
mov
adc
sbb
add
and
lock
add
mov
and
mov
mov
add
add
dec
icebp
inc
push
gs
jo
loop
or
add
fcomps
ret
xor
std
and
cwtl
popa
dec
add
inc
mov
scas
or
jae
sahf
and
aaa
xchg
and
xchg
mov
test
add
movsb
xchg
inc
jmp
lahf
jo
das
imul
add
imul
fdivrs
or
les
xchg
scas
add
mov
pusha
adc
mov
push
add
add
and
les
inc
ret
mov
adc
sbb
movsl
adc
sbb
add
push
cmp
popa
adc
icebp
faddl
insl
jnp
jne
popa
shlb
xor
or
into
cmpsb
jb
insl
sbb
addr16
adc
movb
mov
sbb
add
xchg
ffreep
popa
adc
add
mov
adc
les
pop
insb
pop
add
bound
orb
or
lret
and
pop
inc
cmp
pop
mov
ss
and
mov
jno
outsl
shrb
or
xor
push
outsb
dec
push
outsl
loop
xchg
push
pop
xor
mov
fdivrs
fwait
ljmp
pop
pop
testb
incl
sub
adc
movb
loop
mov
in
insb
jne
addr16
and
in
xchg
test
popf
and
fwait
add
add
pop
sbb
lea
or
popa
test
xchg
cs
imul
push
or
testl
add
fiaddl
add
pop
push
jne
cmp
popa
xchg
aad
pop
pop
cmpb
inc
je
lds
sbb
add
xor
push
add
sbb
das
negb
lret
es
je
dec
shr
push
dec
in
xchg
shlb
push
insb
sbb
insb
xor
mov
xor
popa
jno
sub
xor
mov
jbe
dec
outsl
and
nop
iret
jecxz
sbb
js
adc
pop
xorl
mov
push
mov
adc
push
push
jb
dec
inc
mov
pusha
cwtl
jmp
sub
cmp
lock
shl
inc
je
arpl
xchg
bound
iret
push
adc
fisubs
fcomps
cltd
xchg
lods
push
ss
xchg
mov
icebp
popa
and
pop
test
push
add
ss
add
and
sbb
add
add
aad
stos
sub
inc
fsub
sub
hlt
inc
cwtl
xor
fbstp
cltd
loopne
push
jae
xor
sbb
inc
push
pop
sub
mov
sbb
das
xchg
insb
insb
outsb
mov
imul
cmpsl
ja
sbb
rcr
pop
test
ss
and
cmp
loop
and
and
mov
ds
je
jne
inc
mov
and
gs
outsl
jae
sbb
repnz
push
outsl
mov
xchg
mov
icebp
pop
sub
mov
movsl
pop
movsl
insb
and
fisubs
mov
inc
arpl
mov
jge
sar
das
sub
aas
sub
xchg
pop
sub
dec
pop
or
mov
lods
out
mov
fcoms
lea
jnp
push
inc
mov
inc
xchg
aaa
push
pop
imul
insl
sbb
arpl
or
add
mov
mov
insb
sbb
mov
movb
and
outsl
test
inc
and
lds
sub
jne
push
pop
push
mov
inc
insb
push
popa
or
and
push
jb
int3
js
dec
inc
inc
xchg
cmp
push
rorl
fs
out
imul
nop
lea
jae
push
xor
push
and
adc
sbb
sub
fs
mov
neg
fwait
push
mov
test
enter
loop
ss
cmpsl
stos
dec
inc
add
xchg
add
and
leave
fsubrl
push
jg
jns
and
je
lock
push
jo
push
jne
lret
push
les
std
addr16
shlb
lret
faddl
subb
and
js
pop
mov
adc
mov
outsb
inc
sbb
inc
pop
data16
pop
inc
je
fsubl
decb
lea
hlt
add
mov
nop
xor
sub
push
push
js
add
jnp
lcall
dec
add
sbb
mov
lcall
add
or
imul
imul
in
lcall
pop
pop
add
cmp
or
fmull
add
and
dec
push
cmpsb
mov
pop
test
call
jo
sbb
test
fidivs
stos
daa
imul
subb
call
sbbb
mov
push
insb
mov
imul
sub
push
cli
test
fs
outsb
cmpl
inc
sbb
add
sub
xchg
inc
out
lods
les
inc
sbb
movsb
sbb
jo
sarb
jne
mov
mov
or
and
mov
xorb
dec
mov
je
or
js
lret
fs
push
jge
js
rorl
lock
push
xor
and
adc
notl
stos
lret
rcrb
inc
insb
sub
ret
add
mov
dec
pop
lret
inc
lock
scas
mov
add
xchg
andb
gs
sbb
ss
xlat
adc
or
mov
sbb
dec
adc
mov
rcr
inc
xor
nop
and
enter
out
pop
jbe
inc
aaa
outsl
and
push
mov
cmpsl
pushf
fstpl
movl
rorl
inc
enter
shll
je
add
inc
sbbl
outsb
xchg
dec
insl
rcl
jo
dec
inc
push
sub
inc
dec
test
sarl
cld
addr16
adc
arpl
and
jne
pop
xor
dec
test
and
arpl
call
jb
int3
pusha
adc
inc
sbb
fs
mov
cmp
jns
stos
aam
sbb
shr
cmp
icebp
nop
movsl
jg
out
cmc
bound
xchg
cmp
adc
sbb
sub
or
jne
xor
pop
mov
mov
mov
mov
sub
add
ficompl
out
stos
and
push
xchg
inc
push
inc
inc
push
mov
incl
sub
pop
sub
enter
dec
or
cmp
cmp
outsl
mov
outsb
inc
test
jmp
scas
xchg
imul
jo
jbe
imul
and
push
arpl
lea
aaa
dec
movsl
dec
sub
cmp
add
icebp
mov
xchg
add
or
out
pop
mov
adc
pusha
or
insb
divl
jle
in
push
pop
push
enter
jbe
and
push
sub
mov
add
mov
adc
lods
adc
inc
dec
dec
mov
ja
pusha
stc
int3
testb
add
jno
lock
add
pushf
push
cld
jmp
les
or
mov
cmp
dec
push
mov
cwtl
push
xlat
sbb
mov
ret
add
bound
dec
and
lock
addl
or
mov
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
