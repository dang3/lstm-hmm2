divb
in
mov
mov
mov
inc
add
add
ror
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
cld
add
jmp
test
jne
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
inc
push
adc
add
inc
pop
push
fcmovnb
les
mov
push
mov
xor
pop
mov
mov
mov
call
pushl
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
addl
add
sbb
lock
fcomi
sub
dec
shlb
in
or
mov
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
insl
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
xor
push
dec
and
add
dec
inc
pop
xlat
push
sbb
test
or
sbb
fildl
scas
bound
sahf
add
stos
lcall
push
fst
popf
jp
fdivrs
fs
mov
jge
jl
add
pop
add
mov
jge
push
push
sub
jnp
push
dec
pop
push
insl
sbb
add
loopne
lds
iret
bound
das
pop
mov
pop
pop
ljmp
mov
mov
cmp
or
jge
lcall
add
mov
mov
xor
mov
inc
sub
pop
ret
arpl
sarl
dec
lock
sar
pop
jo
popf
pop
inc
sub
inc
clc
sub
enter
inc
add
in
orb
jmp
fs
pop
or
movsl
push
xorl
sbb
in
incl
adc
jg
mov
adc
add
or
dec
cmp
add
cs
movsl
add
jmp
enter
push
jmp
dec
sub
push
mov
sar
imul
cld
aad
jge
ja
adc
pop
dec
clc
add
push
fimull
ret
pop
in
inc
andl
sahf
leave
les
pushf
add
loop
lds
js
mov
mov
cmpl
or
push
fucomp
sub
cmp
jge
dec
cmp
add
or
add
pop
cltd
sub
shr
enter
mov
or
inc
ret
cwtl
and
push
test
cmp
jl
cmp
jne
mov
incb
add
xor
jbe
mov
adcl
rolb
inc
add
lea
add
adc
lea
xorl
xor
insl
int3
pop
hlt
into
mov
aam
sbb
jnp
sub
push
cmp
cmp
cmpsl
mov
pop
adc
cld
fsubrs
mov
sbb
jmp
lock
or
test
jle
cmp
mov
inc
xor
rcrl
ret
or
inc
icebp
and
sbbl
push
push
xchg
jno
sbb
aas
adc
jle
jmp
loope
mov
inc
sbb
inc
push
pop
sub
xchg
or
cli
insb
andl
fucom
fadds
ret
and
adcb
inc
xor
and
inc
enter
push
inc
push
orb
xchg
mov
push
xor
push
push
hlt
inc
push
sbb
out
cmp
jle
mov
loop
or
out
add
push
mov
mov
or
and
cmp
sub
pop
lret
or
addr16
add
jb,pt
pop
add
xchg
and
enter
ret
lea
mov
cmp
je
cmp
aaa
cmp
clc
push
push
push
jg
xor
rcrb
ja
jmp
xchg
rolb
call
insb
or
cmpsb
imul
cld
pop
cmpsb
out
cmp
jo
inc
sub
adc
add
out
ret
aad
aaa
fcompl
loopne
loope
mov
or
pop
lods
cli
or
or
cmp
push
mov
int
in
decl
jne
push
push
push
push
andb
js
push
mov
mov
or
push
lods
push
sahf
pusha
pop
pop
push
imulb
sarb
jne
cmp
in
mov
and
add
nop
adc
into
dec
jne
scas
cld
stc
out
mov
adc
mov
out
fisttps
lods
fstpt
stc
jae
mov
sub
mov
xlat
cmpsb
std
jns
jnp
mov
clc
cwtl
push
jge
in
adc
sbb
lret
in
or
and
dec
lahf
in
dec
out
push
icebp
cmpsb
ffreep
ja
stos
or
push
mov
lock
pop
and
jl
movl
or
add
push
lea
dec
jnp
and
push
xor
js
pop
xchg
insb
sahf
dec
push
out
cmp
add
imul
push
add
inc
ret
imul
dec
inc
or
clc
push
dec
dec
xchg
push
aas
int3
popf
jns
cli
out
lea
push
add
push
mov
leave
loope
loope
sub
mov
loop
push
mov
mov
loopne
scas
push
bound
mov
in
add
push
jmp
cmp
loope
aas
add
pusha
cmp
je
xorl
mov
or
jne
imul
cmpsb
mov
pop
mov
cltd
leave
fadds
imul
insl
push
jb
cmp
test
ficomps
and
pop
ds
loope
test
cmpsb
in
out
aam
ja
push
pop
dec
or
movsl
mov
jle
pop
shll
mov
jbe
mov
cmp
adc
enter
jge
xor
iret
mov
or
inc
sbb
in
fmull
movsbl
sub
add
or
sub
mov
push
ret
push
adc
jle
mov
mov
push
imul
jne
add
sbb
int
lock
push
xchg
and
sbb
mov
jl
sub
push
int3
les
xor
aad
add
lcall
adc
sub
adc
mov
inc
aaa
push
lock
inc
lods
push
inc
and
mov
xlat
sbb
je
dec
je
push
adc
aam
fsubrp
or
adc
inc
shll
mov
lret
or
nop
pop
fs
sahf
adc
push
mov
xor
aad
call
mov
push
mov
sub
push
cmp
mov
xor
fcomps
mov
inc
and
mov
aam
and
mov
cmp
pop
cmc
andl
sbb
test
xchg
mov
test
mov
stos
jae
out
test
mov
ss
roll
or
scas
aad
mov
add
jnp
cmovge
shr
sbb
lret
push
push
movsl
or
or
movzbl
js
and
adc
popa
add
retw
push
in
dec
call
jl
pushl
ljmp
shrb
andb
testl
test
lea
pop
fldcw
mov
notb
add
xchg
pop
movsl
push
jle
push
fcomps
popf
sub
adcl
clc
repnz
sub
adc
cwtl
mov
sbb
or
out
add
sbb
adc
inc
shll
pop
sbb
and
sub
insl
sbbl
jl
ret
pop
loopne
mov
adc
test
out
add
adc
mov
pandn
mov
sub
or
fnstsw
mov
dec
jle
mov
push
pop
mov
nop
cmp
les
in
repnz
or
into
shl
push
or
mov
je
inc
mov
xor
scas
mov
or
push
xor
mov
ficomps
sub
add
inc
repnz
push
adc
or
jmp
push
xchg
fdivrs
out
cwtl
dec
adc
adc
and
cmp
adc
lahf
xor
lea
adc
negb
xlat
push
push
or
mov
xor
dec
sub
dec
bnd
xchg
inc
subl
or
xchg
xor
xchg
sub
pop
sbb
add
pop
mov
in
or
out
scas
mov
ljmp
push
and
out
mov
xor
mov
push
cwtl
sarl
cmp
jne
push
pop
movsl
push
cmp
or
inc
pop
or
in
or
lea
mov
in
inc
loopne
jp
add
in
mov
addl
push
pop
imul
pushl
imul
inc
adc
loope
pop
orl
xchg
xor
jo
cmp
les
fstl
sbb
inc
pop
pop
add
cmp
xchg
pushf
cmp
xor
mov
jnp
aam
jge
decl
inc
movb
je
out
out
add
in
xchg
lock
lock
mov
faddp
add
aam
imul
cmpsl
mov
je
mov
cmpl
icebp
loopne
adc
adc
xchg
in
push
and
push
loopne
mov
or
and
add
add
fldt
pop
sub
testb
int3
in
jnp
mov
and
test
add
icebp
push
arpl
xor
push
cmc
les
je
filds
jp
test
mov
pop
in
push
and
fistpl
fistpl
in
ffreep
jae
ret
je
push
out
and
mov
sahf
inc
and
mov
mov
mov
cwtl
cwtl
xchg
out
lret
lods
mov
mov
push
xor
mov
nop
xchg
lock
inc
pop
sub
nop
add
xchg
add
adc
lods
or
lods
lods
add
mov
mov
nop
sub
dec
pop
add
pop
adc
inc
jns
jecxz
outsl
mov
mov
mov
popf
popf
negb
adc
sub
cld
push
mov
lcall
outsl
stc
push
fcoml
dec
out
xor
out
sti
loopne
dec
imul
ss
pop
push
imul
fidivl
xchg
shlb
adc
enter
adc
movsb
leave
jae
pop
rclb
cmpsb
dec
rol
les
pushf
pushf
clc
cmpsb
in
in
pop
mov
xchg
sbb
leave
xchg
xchg
in
int3
leave
xchg
cmp
sbb
int3
fs
aaa
clc
arpl
ret
sbb
inc
sub
enter
fwait
fs
sahf
sbb
shrb
inc
xor
mov
cmp
les
in
mov
pop
test
dec
inc
mov
jle
data16
out
pop
pusha
xchg
and
mov
mov
cmp
dec
pop
mov
pop
pop
testl
cwtl
arpl
test
shrb
inc
inc
jo
pushf
push
sbb
insb
sub
xchg
out
sbb
shlb
jne
mov
loope
test
mov
imul
push
hlt
push
addb
sub
mov
push
xor
sbb
rolb
add
push
add
or
enter
lock
imul
pop
or
jle
inc
push
jl
insb
add
in
andb
pop
mov
nop
and
outsb
and
fisttpll
movsb
and
push
dec
punpckhwd
aaa
adc
dec
scas
je
sti
or
push
divl
test
clc
out
pop
test
sub
fs
shll
pop
sbb
and
insl
or
add
popa
cmpsb
xor
lret
xchg
mov
xchg
or
std
and
pushf
push
adc
adc
loope,pt
mov
mov
or
jl
or
lea
push
leave
aad
lock
or
push
jmp
push
fldenv
pop
jmp
adc
adc
jle
imul
test
scas
cmc
inc
or
adc
add
ror
sbb
sub
or
sbb
mov
push
push
sbb
daa
sbb
lea
or
or
xor
push
lock
mov
in
lret
adcl
fdivs
aaa
adc
test
adc
inc
adc
leave
orb
jno
shll
loope
add
sbb
repnz
into
adc
pushf
cmc
ss
adc
push
sbb
xchg
mov
push
cmpsl
add
add
cmc
gs
cmpb
rolb
fs
lret
insl
or
add
pop
push
lock
movsl
mov
mov
fistpl
jne
loopne
add
add
stc
shr
push
ds
push
sbb
push
in
push
dec
pop
push
out
cwtl
sar
mov
lret
adc
cmp
pop
add
push
sahf
les
rolb
and
nopl
xchg
je
stc
ret
push
scas
xor
testl
sbb
and
clc
add
scas
std
fisttps
add
rclb
cmp
or
pop
push
adc
xchg
mov
pushw
mov
inc
jb
sub
and
xchg
addb
mov
add
sbb
or
testl
push
push
call
mov
xorb
cld
adc
and
fstpt
sbb
push
test
hlt
je
push
push
enter
pop
ljmp
push
or
mov
movsl
lock
add
cld
int3
inc
sbb
clc
adc
std
mov
mov
jne
or
add
sahf
sub
dec
push
push
cmp
add
push
dec
add
and
mov
leave
adc
and
bound
adc
dec
xlat
and
pop
sub
pusha
jo
mov
and
scas
movsb
std
daa
cmp
mulb
sub
add
incb
xchg
in
js
push
cmp
and
sbb
fsubrs
int
icebp
aam
stc
scas
sub
pop
and
push
sub
push
ljmp
sub
push
test
pop
pusha
cwtl
xorl
xor
ret
test
movsb
ljmp
outsb
sti
in
or
stos
add
imul
xchg
inc
pop
add
sbb
cmp
fadds
rorb
rclb
lods
sub
and
aaa
sub
stos
mov
mov
aas
loope
leave
pop
mov
inc
sbb
xchg
inc
cmp
test
cmp
lret
push
test
cmp
outsl
xchg
ficomps
mov
test
add
jl
mov
or
sbb
mov
je
lock
push
mov
sti
lahf
mov
mov
mov
cmp
mov
push
add
rolb
loopne
sahf
xor
cmp
out
jmp
mov
ljmp
sub
mov
jg
stos
dec
mov
jo
pop
enter
enter
xchg
idivl
fadds
inc
das
daa
pop
dec
mov
cmp
insl
sbb
xor
xchg
mov
testb
inc
xchg
inc
xchg
addl
mov
xor
out
sbb
sub
cmp
inc
cmp
gs
and
testb
xor
stc
nop
pushf
or
pop
hlt
xor
bound
xor
push
adc
sbb
add
push
orl
repnz
adc
pop
rcrl
cmp
cmp
sbb
and
xor
add
or
and
mov
and
hlt
push
stos
clc
lret
mov
xchg
js
bound
in
adc
sbb
jns,pt
cwtl
dec
mov
push
adc
mov
imull
test
pop
pusha
and
push
pushl
clc
dec
push
inc
xchg
out
sub
scas
mov
and
sbb
mov
xor
ret
push
je
ss
mov
sub
adc
adcb
cmpl
push
push
lea
pop
cmp
mov
add
mov
adc
fiadds
adc
add
cltd
sub
mov
lock
sub
movsl
push
mov
test
or
cmpb
cmp
jne
xor
movb
mov
loopne
jmp
cmp
push
mov
mov
pusha
cmp
add
jle
or
jge
mov
bswap
sub
add
adc
xchg
adc
loopne
adc
mov
outsb
outsl
push
add
add
add
scas
ret
inc
repz
cmpsl
adc
outsl
clc
cmpb
push
push
adc
test
xchg
add
aam
lods
push
or
jne
or
sub
cmp
adc
dec
cmpl
call
cmpsl
lds
or
into
loopne
adcb
clc
or
movsb
mov
mov
cmp
mov
das
xchg
setne
or
jmp
mov
mov
pop
negb
adc
pop
out
jne
or
pop
in
out
je
subb
push
in
sti
loope
fsub
add
ret
pop
inc
das
mov
xor
loopne
mov
pop
in
faddl
sbb
loopne
and
push
xchg
int
xchg
out
cmpsb
push
jne
or
ret
fcoml
inc
shrb
mov
pop
mov
mov
not
add
incb
cs
lahf
je
and
sarl
insb
xchg
inc
in
sbb
mov
loop
out
inc
out
inc
je
adc
xchg
push
add
imul
xchg
mov
mov
mov
xor
lock
test
jno
mov
leave
jmp
sbb
dec
sub
jecxz
mov
clc
jg
mov
or
aad
fwait
add
or
enter
inc
int3
cmp
mov
or
jle
push
add
les
mov
mov
cmp
pusha
cli
test
movzwl
jnp
or
jge
push
dec
dec
je
sub
jmp
jge
imul
push
mov
mov
ret
jmp
push
xorb
int3
int3
ror
sti
mov
dec
xor
adc
dec
mov
push
pop
push
add
loope
insb
fs
ljmp
dec
jae
ljmp
lock
sbb
mov
xor
inc
mov
sarl
push
push
pop
or
cmp
in
sub
aaa
popa
cmp
jle
cmpsb
jae
ret
ret
and
sbb
pop
mov
add
cld
fstl
mov
pusha
ds
mov
ja
add
cmp
pop
mov
mov
push
test
mov
cwtl
xor
mov
testb
push
mov
sub
outsb
loopne
xor
xor
push
add
push
jns
inc
fbld
jne
ds
jecxz
xchg
loopne
xchg
in
shrb
fcoml
jne
jo
jo
sti
or
push
adc
cmc
or
in
jb
out
insl
inc
push
pop
in
stos
add
mov
xor
pop
ficoms
js
bound
add
mov
jne
fisttpl
ss
add
jns
add
int3
mov
bound
adc
dec
mov
fmul
ds
ds
inc
cmp
std
xchg
xchg
mov
and
call
mov
mov
nop
es
dec
call
add
and
daa
jo
fmull
jle
faddl
mov
mov
push
loopne
pop
xchg
adc
scas
cld
loopne
andb
addr16
ljmp
in
call
xor
out
and
aam
enter
or
rcrb
push
cmove
and
add
loopne
aaa
enter
mov
loopne
in
sub
in
mov
dec
add
dec
rcll
fidivrl
scas
dec
cmpsb
jbe
mov
movsl
push
pusha
insl
mov
mov
scas
jecxz
les
in
add
fisttps
arpl
inc
mov
and
clc
dec
push
adcl
setle
jb
ds
test
push
push
cmpsb
sbb
rcll
mov
jp
je
fs
iret
or
ffree
add
popl
repnz
in
call
push
inc
fisttpl
mov
loopne
icebp
jge
repz
mov
or
push
add
shll
mov
and
pop
mov
adc
or
dec
fisttpl
movhps
sub
push
nop
mov
push
and
mov
adc
and
sub
rolb
sbb
mov
popf
dec
mov
adc
int3
pop
pop
pop
mov
cmp
adc
aam
fcoms
fcompl
or
mov
insl
shlb
mov
jbe
je
pushl
call
mov
and
shr
movzbl
push
adc
push
ret
push
sbb
icebp
aaa
xchg
dec
cmc
mov
imul
outsl
mov
pop
jae
xchg
cmpsl
jle
sbb
popf
cmp
xchg
fdivrs
xchg
add
sbb
fidivs
sub
sbb
xchg
xor
xchg
push
xor
data16
imull
je
push
add
mov
mov
cli
cmp
out
xor
loop
add
jle
push
cli
dec
enter
inc
push
push
mov
cmp
jg
mov
lret
clc
inc
adc
aaa
dec
enter
inc
add
ret
pop
xchg
cmp
mov
sbb
push
enter
call
aas
jb
sbb
mov
ds
ss
push
sbb
xor
aaa
outsb
sub
fsubrl
addl
in
sub
jl
mov
push
jne
sbb
sub
sbb
push
fcompl
pop
jmp
mov
push
std
add
inc
ret
outsb
insl
in
and
sbb
ss
shlb
mov
add
sub
jne
fmull
imul
fmul
test
js
xor
mov
les
cmp
jae
mov
add
push
inc
hlt
lea
ja
dec
test
in
pop
push
call
push
mov
je
insb
rcr
add
fiaddl
pop
std
or
mov
cmpsb
lock
imul
add
loopne
fnsave
jl
in
cmp
jg
aam
subl
sbb
sbb
roll
popf
jecxz
test
shll
into
popa
nop
add
add
fisttpl
pop
xor
add
fwait
adc
cli
lea
ljmp
xor
testb
push
test
adc
cmp
pop
xor
jo
mov
insl
fcmove
add
mov
mov
addl
aam
mov
test
lahf
inc
js
adc
adcb
out
test
mov
pop
pop
push
inc
pop
std
mov
leave
js
inc
dec
hlt
jg
js
mov
hlt
or
je
inc
mov
shrl
pop
movb
daa
push
inc
inc
push
xchg
add
xor
add
inc
add
push
jno
mov
push
xor
ret
jl
inc
mov
fmuls
xchg
daa
rorl
lock
jns
idiv
cmp
jl
repz
sahf
fldpi
push
or
ljmp
adc
ret
pop
xor
xchg
popa
movl
jae
adc
mov
mov
pop
adc
or
xchg
bound
les
mov
mov
mov
sarl
mov
testl
and
je
aaa
mov
xor
mov
ret
je
mov
js
mov
jbe
leave
mov
pusha
mov
push
aaa
push
mov
sub
mov
js
or
popa
mov
adc
add
inc
and
sti
and
dec
call
jl
xor
push
adc
adc
inc
popf
mov
mov
pextrw
or
fadd
je
push
and
movb
xor
xchg
xor
nop
fcmovne
jae
dec
dec
sbb
jb
jnp
mov
sbb
adcb
xchg
jmp
adc
jb
mov
imulb
clc
jne
cmp
je
jbe
movb
xor
mov
or
and
sbb
mov
push
mov
add
data16
xor
out
test
sbb
or
jo
daa
inc
insl
xchg
sarb
cmp
xchg
or
mov
mov
adc
insb
jp
or
test
imul
push
push
adc
js,pt
push
movl
lods
xor
inc
push
ss
or
or
push
mov
push
lods
subb
sbbl
push
push
roll
js
push
leave
cmp
daa
js
or
inc
lret
jmp
mov
mov
add
dec
sar
fldpi
sahf
fbstp
nop
dec
sub
push
cmp
add
incl
add
ficoms
test
push
lods
clc
mov
jb
lret
push
enter
add
inc
jo
pop
push
test
inc
mov
dec
cmp
fdiv
call
pop
hlt
sub
or
std
mov
lcall
je
scas
mov
divb
shrb
enter
orl
ret
insb
cld
cmp
lea
or
add
push
test
adcb
mov
adc
int
add
or
faddl
mov
push
jno
push
ret
sub
xor
popf
dec
add
cmp
inc
add
mov
insl
mov
xlat
xchg
adc
shl
mov
cwtl
pop
adc
jnp
and
fs
cmp
dec
add
xor
mov
jle,pt
or
and
sbb
adc
fdivrs
push
das
push
cmp
andl
shll
inc
or
imul
lods
sub
pop
or
sub
jb
add
jns
xchg
rolb
xor
or
xchg
and
aaa
insl
add
and
movsb
push
in
ss
jno
sub
pop
enter
sub
and
jno
shlb
xlat
dec
mov
sbb
stc
or
scas
popf
call
cltd
mov
movsl
jb
fsubrs
lret
hlt
jno
add
lods
mov
cmpsl
in
mov
inc
push
and
push
or
adc
lods
jno
pusha
cmp
mov
mov
dec
xchg
pop
clc
mov
push
repz
sbb
sub
mov
pop
pop
mov
shr
push
loopne
mov
xchg
sbb
inc
jmp
push
jmp
push
and
xor
pop
and
ljmp
in
xor
push
jne
outsl
and
mov
mov
shll
enter
adc
scas
icebp
pop
mov
test
dec
push
push
xchg
fcoms
xchg
bound
sub
fldl
xchg
add
inc
out
mov
in
inc
xor
into
lcall
mov
movsb
inc
pop
mov
jmp
push
loop
adc
jbe
xchg
inc
dec
add
mov
sub
loope
lret
cmp
mov
nop
cmpb
lock
test
cwtl
gs
mov
scas
and
add
leave
jae
cmp
lret
adc
mov
dec
ljmp
dec
adc
fidivl
push
lea
mov
add
iret
dec
clc
imul
and
adc
or
sbb
pop
xchg
lods
mov
mov
iret
mov
add
int3
cmp
sbb
pusha
fldt
stos
jns
inc
pop
pop
dec
mov
pop
push
push
in
push
pop
adc
lea
fisttpll
xchg
or
cmp
in
adc
pop
inc
sbb
cmp
sbb
sbb
sbb
aaa
add
pusha
inc
cltd
push
jmp
pop
cmp
shll
or
xchg
push
cmp
push
mov
sbb
enter
test
dec
mov
adc
shrb
cmp
out
fwait
popf
cmpl
cmp
push
sbbb
in
sbb
clc
sub
ret
jne
clc
mov
add
cmp
mov
jle
push
adc
pop
inc
outsb
stos
sbb
mov
ja
test
sub
pop
js
add
popa
pop
sbb
push
jbe
es
pop
or
jmp
cmp
jg
mov
lret
pop
mov
jne
sub
dec
je
ret
or
sub
test
ret
sbb
dec
ss
hlt
std
std
or
dec
jl
adc
mov
shlw
dec
aaa
push
or
xchg
loopne
dec
adc
pop
jne
lods
xor
mov
jmp
push
add
push
mov
xor
push
mov
push
inc
xchg
adc
fildl
sub
mov
pop
push
test
mov
icebp
xchg
xchg
pop
sbb
dec
mov
shl
loope
xchg
js
and
push
or
add
daa
pop
pushl
shlb
sbb
rcrb
dec
lea
adc
mov
push
sub
mov
sarb
jmp
cmp
je
cmp
pop
imul
lods
shlb
adc
cli
fucomip
out
mov
sbb
fstpl
imul
jmp
sbb
and
jmp
and
jmp
xchg
mov
pop
scas
test
rcrl
sahf
out
bound
and
jns
out
test
jns
pop
push
aas
aaa
cltd
inc
sbb
mov
mov
add
pushw
and
dec
cmc
scas
shrl
insb
fstl
lea
enter
adc
sub
in
jecxz
mov
fmuls
mov
popa
movb
in
cwtl
inc
lahf
push
push
or
xchg
dec
sub
ficoms
ljmp
inc
push
mov
mov
adc
push
lea
push
push
push
push
add
push
lea
sbb
dec
cmp
jmp
inc
cmpsb
add
dec
mov
inc
test
cltd
imul
lahf
sahf
mov
push
inc
enter
lea
movl
push
xor
add
imul
adc
inc
pop
inc
and
jns
jecxz
ficoml
mov
dec
ficoml
jmp
lods
popa
cmc
dec
pop
push
push
loopne
jl
inc
xor
add
lods
mov
or
cld
xchg
cld
adcl
or
lods
pushf
arpl
add
aas
lret
inc
sub
stos
xorl
push
loopne
pushf
push
push
xchg
jp
xchg
adc
jno
jle
ss
and
pop
iret
sub
and
mov
cmp
adc
negl
ss
or
testl
idivl
sarb
mov
pusha
add
xor
dec
and
ret
adc
inc
repz
xchg
pop
daa
sub
adc
rcrb
call
call
jno
adc
xor
loope
xorb
sarb
push
loop
xor
mov
test
aas
mov
xor
pop
sub
mov
mov
scas
aam
cmp
push
push
push
cmp
js
cmp
fnstenv
icebp
pushf
jl
sbb
pop
dec
pop
rolb
mov
lea
pop
pop
sub
jl
lcall
push
jg
xor
adc
lret
adc
fisubs
xchg
pop
stos
clc
push
add
push
aam
das
test
mov
in
clc
loop
popa
and
jne
int3
push
imul
aam
jl
mov
xchg
or
add
jle
outsb
pop
lock
sbb
inc
and
push
push
add
cmp
sub
stc
fdivr
ret
xchg
ret
repz
adcb
add
xor
adc
jne
push
sub
xor
pop
clc
or
adc
jo
xor
mov
iret
je
lea
push
loopne
add
mov
aaa
lret
jo
or
lcall
mov
jne
call
push
or
add
dec
xor
sub
clc
mov
rcll
es
shrb
les
rcl
mov
ficomps
dec
loopne
or
mov
push
adc
dec
lea
ffreep
cli
push
dec
push
push
sub
cmp
fisubrs
sub
sub
in
cmp
jmp
sub
cwtl
push
sub
in
cmp
push
mov
insl
fstpt
add
mov
inc
adc
dec
cmp
dec
and
inc
shll
dec
insb
add
cmp
sub
mov
js
mov
push
xchg
cmpsb
adc
pop
inc
sbb
xchg
fcomps
jns
cs
lock
sub
jno
fistps
cmp
dec
inc
and
add
jp
dec
dec
mov
lock
bswap
in
and
dec
dec
cmp
pop
mov
adc
push
push
fdivs
mov
shrb
lock
cmpsb
push
fimull
leave
and
push
push
inc
pop
mov
sub
fbstp
sbb
push
aaa
enter
cmp
ljmp
mov
adc
sub
aaa
add
je
push
mov
or
aaa
and
es
inc
test
dec
cld
adc
pop
xchg
jo
pop
jo,pt
outsb
stos
and
rcll
in
adcl
sbb
ljmp
pop
ret
jl
mov
mov
adc
adc
ja
push
jo
int
sbb
push
cs
push
int
xchg
lds
xchg
cwtl
popf
cld
adc
rcrl
dec
mov
std
push
les
add
int3
ss
cli
xor
cmp
je
cmp
mov
pushf
in
sti
sbb
repz
pop
add
and
xchg
inc
lret
mov
pusha
inc
ja
and
shll
loop
test
xor
aas
add
sbb
push
jne
mov
std
test
jmp
or
pop
repz
xor
push
fs
movsl
fldz
xor
push
mov
movb
test
lock
cld
aas
mov
cmpsl
mov
xchg
or
sub
add
sbb
lock
hlt
mov
adc
jge
fisttpll
mov
mov
push
cmpsl
popf
scas
dec
or
adcb
fsubl
enter
leave
push
adc
fcoml
push
test
or
sub
push
adc
enter
jp
rcrl
jp
push
imulb
mov
mov
xlat
cmpsl
shlb
add
add
mov
mov
loope
inc
sub
xor
cwtl
imul
or
into
sbb
push
push
pusha
push
mov
lea
and
mov
stc
mov
pop
push
sbb
sbb
cmp
mov
push
lret
jl
mov
andb
jbe
movsb
pop
sbb
xor
in
adc
and
jge
int
push
rcrb
mov
das
test
sub
sub
jmp
inc
fldl
ret
cmc
fmull
lods
cmpb
int3
dec
ret
push
push
push
add
mov
movsl
mov
add
popf
sbb
inc
xchg
cli
popf
cmp
dec
inc
fiadds
out
mov
sti
add
lods
int3
sub
jno
insb
inc
idivl
lcall
ds
sbb
and
addr16
sbb
pushf
outsb
int
adc
mov
fmuls
or
call
add
repz
or
adc
ss
test
jmp
mov
pop
xor
and
rorl
pop
test
adc
sub
cmpb
loop
jg
xor
je
push
pop
cmp
push
mov
push
xor
jmp
ljmp
sub
sub
push
push
jnp
iret
decb
adc
xor
and
pusha
aad
mov
pop
mov
inc
lock
add
sbb
push
cli
or
push
icebp
jo
pop
gs
lcall
pop
xor
jnp,pn
push
call
jmp
fsts
popa
push
sbb
xchg
inc
sub
fbld
adc
xor
sbb
jo
daa
out
jo
sbb
out
shrb
add
adc
inc
xchg
pop
sbb
mov
js
push
jge
orl
pop
jl
mov
cltd
mov
mov
cmp
push
or
dec
adc
sbb
sub
dec
push
add
sbb
jge
mov
ljmp
idiv
push
mov
mov
mov
aaa
outsb
lea
xor
idiv
cs
mov
add
jg
mov
mov
xor
jo
or
dec
mov
mov
xlat
dec
cmc
inc
xchg
or
out
inc
cmp
xchg
add
sbb
fstpl
push
pop
insb
xor
clc
arpl
sub
sub
clc
je
popf
hlt
pop
add
lea
cltd
idivl
fistl
jp
xor
mov
daa
pusha
js
or
popa
jg
fs
or
xchg
sub
mov
test
movsl
fisubrl
jbe
lahf
xor
not
lahf
sbb
dec
int3
loope
call
jl
outsb
sti
pop
xchg
sub
cmp
or
or
js
decl
out
insb
mov
hlt
testl
test
jns
faddl
xor
lock
sub
xor
mov
fdivrp
mov
sub
mov
icebp
xchg
out
mov
test
int3
mov
mov
out
push
pop
cmpsb
inc
idivb
xchg
pop
jl
jmp
cmp
or
mov
and
clc
fidivl
jmp
add
movsl
shrl
cli
aaa
out
mov
push
pop
mov
pop
jne
loopnew
jg
pop
movb
push
or
loope
dec
outsb
mov
inc
pop
mov
decb
rcll
stos
movsl
aad
shlb
inc
hlt
adc
push
ds
adc
je
addr16
push
mov
sbb
bound
mov
and
jne
pop
jmp
out
aad
xchg
loopne
bound
and
sub
pop
pop
into
pop
leave
pop
clc
inc
movsl
mov
cwtl
xchg
adc
pusha
stos
sub
shlb
lods
add
add
imul
xor
sbb
mov
xor
fdivs
fcompl
sbb
loope
pop
iret
shll
imul
jns
aaa
jnp
and
cmp
loope
jne
sti
mov
push
std
lea
adc
push
fldenv
pop
leave
pop
xor
loope
push
movsb
dec
jne
loopne
push
mov
xchg
push
pushf
lea
push
mov
push
adc
mov
lea
add
or
fnstsw
push
rcll
or
add
xchg
imul
jecxz
dec
adc
dec
imul
andl
push
setp
sbb
or
push
add
lcall
adc
popa
add
push
and
roll
scas
sbb
leave
add
push
sbb
lahf
sub
sbb
fs
and
int3
pop
and
into
mov
pop
in
out
pop
cmpl
dec
sbb
xchg
orb
mov
and
inc
cli
inc
repnz
inc
push
roll
cmp
das
sbb
leave
or
and
xor
add
mov
ss
pusha
dec
cmp
pop
scas
xchg
pop
adc
fdiv
inc
cmp
aaa
add
add
push
mov
add
mov
clc
setb
test
rorb
outsl
in
adc
xor
dec
adc
data16
pop
or
aaa
mov
fmull
push
fldenv
negl
gs
add
imul
mov
ss
mov
hlt
jno
cmpsl
mov
call
sub
lods
fwait
scas
sbb
rcl
scas
jge
fldt
inc
scas
xlat
das
push
jp
push
inc
mov
int
add
in
arpl
rorb
push
js
lods
test
sbb
ja
push
mov
cli
out
adc
clc
mov
sub
pusha
sbb
mov
sar
bound
xchg
add
sub
jecxz
int
add
fstpt
jmp
test
mov
xchg
adc
xor
mov
movl
dec
cld
pop
loop
add
cmp
cmc
add
out
insb
sbb
pop
pop
dec
push
or
nop
and
xchg
pop
das
inc
xor
shrb
sbb
xchg
pop
leave
mov
push
add
and
inc
in
push
dec
jp
push
mov
std
int3
sti
mov
add
mov
push
push
and
int
pusha
pop
add
xchg
jne
add
lret
in
les
call
xchg
test
insb
push
push
ror
or
add
imul
les
pop
fmuls
jo
rcrl
dec
lcall
sbb
mov
insb
aam
inc
xlat
or
aam
add
aaa
pushl
dec
push
movsb
std
add
push
cmp
les
test
fcoml
rorb
rcrl
sub
test
add
test
cmp
jle
and
mov
lret
call
sub
and
push
mov
and
push
mov
mov
das
jno
adc
loopne
push
scas
push
notb
mov
add
and
cmp
push
push
mov
outsb
ljmp
jp
push
hlt
push
pop
push
jb
xchg
push
or
push
add
push
mov
pop
push
push
add
adc
sti
pushf
inc
call
mov
loope
pop
sbb
fimuls
lods
add
xchg
clc
jmp
mov
push
cmp
enter
and
or
mov
and
adcb
push
adc
push
xchg
pop
pushl
push
cmp
mov
pop
fadds
cmp
aas
mov
xor
xor
ret
je
lahf
mov
mov
test
je
std
ja
or
loop
dec
mov
jmp
dec
mov
sub
pop
dec
insb
js
push
mov
mov
jae
dec
add
ss
pusha
shlb
mov
int3
xchg
sub
mov
sub
lcall
cmp
jge
mov
mov
mov
cmp
sbbb
jl
or
cmp
jle
call
jne
inc
mov
push
iret
add
fsubr
sbb
sarb
fcomps
or
je
insb
nop
mov
aam
jne
and
sbb
push
adc
xor
enter
dec
dec
mov
cmp
in
mov
adc
in
jo
sub
inc
sete
adc
loope
dec
sbb
mov
xorb
push
xor
outsl
or
push
xchg
stos
push
or
sti
xchg
fdecstp
cmpl
dec
out
mov
mov
jge
add
rclb
enter
sub
or
mov
scas
push
bnd
imul
xchg
adc
shl
dec
add
sbb
fcompl
add
pop
loop
cmp
add
push
js
das
sbb
pop
cmp
lods
pop
pop
jl
pop
aaa
adc
push
dec
lock
add
jmp
ret
movsl
inc
outsl
xor
adcb
xor
mov
push
sbb
jl
adc
movsb
bound
cld
test
sub
mov
out
fcoms
ss
inc
ror
rcr
mov
push
jmp
test
mov
xchg
mov
add
mov
ret
sti
add
jmp
mov
push
or
and
mov
mov
jne
repnz
xchg
in
sbb
pop
pop
or
pop
adc
clc
mov
int
andl
ret
jmp
lock
xchg
or
in
repz
in
push
lret
adc
dec
xor
fdiv
in
and
mov
xorl
cmp
arpl
xchg
cmpsb
sub
adc
add
and
lock
loop
dec
jle
mov
mov
add
xchg
jle
jge
or
add
adc
shlb
inc
jge
xchg
popf
xchg
or
sbb
adc
in
xor
xchg
les
mov
xchg
daa
push
test
test
mov
imul
aam
dec
or
clc
sub
or
dec
cmp
lea
mov
cli
xor
push
hlt
add
fsubl
adc
dec
clc
cmp
leave
sub
shrb
pop
inc
dec
push
add
add
inc
lret
inc
cld
sub
lock
cmp
add
jge,pt
cmp
in
mov
aaa
hlt
mov
divl
xchg
sub
add
into
push
push
add
push
outsl
inc
aaa
jo
or
and
or
xchg
fstpl
dec
jp
add
add
in
negb
dec
call
jge
adc
test
inc
in
jg
lock
cmpb
fstpt
das
aad
shrb
pop
clc
jg
mov
cwtl
add
lsl
sub
xchg
ret
inc
aas
or
idivl
sub
jbe
or
stc
xor
or
sbb
push
or
cmpsb
xorb
pop
movsl
rol
push
push
mov
inc
incl
or
push
xor
xor
icebp
mov
in
stc
jbe
movzwl
mov
add
push
lods
cli
pop
test
push
lea
push
mov
in
push
in
pusha
gs
push
rcll
push
cmp
in
jbe
pop
push
mov
subb
sbb
jo
mov
pop
mov
jo
roll
fistpl
mov
xchg
loop
ret
xor
cmpsb
nop
add
xchg
push
ffreep
xor
add
cmpsl
mov
pop
rolb
loop
mov
iret
in
cmp
dec
or
mov
cmovne
mov
ror
int
adc
pop
adc
mov
add
mov
ljmp
xor
add
xor
push
sub
call
ljmp
int3
outsb
pop
imul
xchg
push
leave
ret
xchg
push
test
push
or
inc
inc
aad
icebp
cmp
xchg
cld
lea
andl
mov
adc
dec
mov
xchg
pop
sub
or
or
pop
inc
pop
sbb
out
addr16
movl
fnstcw
xchg
dec
sub
adc
mov
andl
push
mov
hlt
push
xchg
arpl
dec
xor
int
mov
mov
cmpsb
ret
xchg
push
push
add
repnz
push
movsb
pop
mov
or
jns
cwtl
xor
adc
notl
cmc
xor
ss
loopne
inc
and
jbe
xchg
test
xchg
adc
inc
add
mov
adc
int3
jmp
push
push
pusha
inc
and
add
shl
sbb
movsb
out
ss
add
not
mov
mov
fisubrl
sbb
mov
ljmp
inc
sbb
mov
adc
sbb
push
xorb
rorl
cmp
sub
jae
sbb
inc
pop
jns
stos
and
mov
or
bnd
aas
xor
jns
in
aad
dec
jo
jg
call
stos
adc
push
adc
or
pop
push
xchg
out
mov
dec
dec
aad
jne
cmpb
lret
mov
jnp,pn
jmp
dec
inc
mov
jle
cmp
mov
mov
inc
push
mov
add
mov
or
cltd
rorb
adc
ss
inc
in
aaa
push
or
sub
mov
lea
cmpsl
adc
dec
and
fptan
inc
cmp
cmpsl
sub
inc
cwtl
movl
sti
loopne
mov
cmpsl
add
test
inc
adc
lahf
repnz
dec
jl
pop
sarb
lea
movsb
sub
test
orl
push
xchg
add
sub
ja
pop
add
jl
dec
sbb
pop
shl
fstps
push
cld
push
jae
sbb
mov
gs
sbb
inc
or
lcall
or
sub
sub
add
int3
push
dec
shll
mov
addb
lea
test
mov
mov
adc
adc
and
movsb
pop
lea
lea
jmp
int
cmp
jae
sbb
mov
addr16
mov
xchg
test
or
mov
in
sbb
or
addb
lret
sahf
lods
pop
nop
cmp
cmpsb
movsl
pop
lahf
cmp
mov
int3
test
lret
xchg
mov
rorb
aaa
rcll
leave
lea
nop
xchg
or
nop
or
mov
adc
inc
divl
nop
sbb
aad
movsl
lods
nop
push
rcll
jo
xchg
cltd
mov
fists
or
or
push
shrl
jg
sbb
push
mov
insl
cwtl
std
jecxz
jno
pop
mov
push
push
sahf
mov
xor
popf
push
dec
xchg
add
add
test
int3
add
jne
repz
or
aam
les
adc
lods
pop
sbb
fistl
or
lret
fwait
mov
ret
and
or
ljmp
mulb
incb
loopne
mov
pop
call
jae
pop
pop
push
cmpsl
mov
xchg
mov
push
cwtl
sub
js
pop
loopne
imul
out
push
hlt
lret
in
lea
loope
sub
add
push
mull
mov
pop
popa
xchg
xor
repnz
push
rcrb
dec
js
and
dec
inc
nop
xchg
pop
push
add
and
mov
or
xor
mov
lahf
dec
orb
roll
pop
jl
jne
ljmp
push
cmp
push
and
add
pop
rcll
or
xor
rcl
mov
and
or
xchg
mov
add
call
ret
mov
add
sub
push
push
mov
pop
repz
mov
sub
mov
pop
push
dec
into
mov
mov
dec
jbe
adc
movzwl
outsb
mov
pop
pop
mov
fsubl
xchg
mov
mov
lods
xor
xchg
ret
adc
mov
fisubrs
mov
test
push
jle
dec
adc
rorl
push
adc
inc
or
and
cmpsb
stos
push
and
mov
adc
jo
popa
xor
add
test
test
cmpsl
push
arpl
pop
ljmpw
pop
outsl
mov
jae
loope
cmc
mov
cmp
inc
add
cmpb
outsl
in
movsb
fdivrs
fbld
sbb
adcb
fists
test
adc
xchg
in
loopne
clc
add
movsl
jbe
js
mov
sbb
mov
adc
hlt
cmpsl
xor
lea
fs
mov
ljmp
lea
push
mov
adc
rcr
in
sbb
add
pop
aam
aaa
pushl
fcomps
ss
mov
mov
xchg
cmp
fiadds
ljmp
inc
mov
xor
adcl
mov
loopne
mov
mov
sahf
mov
sahf
adc
dec
pushw
sarb
test
or
cli
xchg
ret
lea
adc
mov
jbe
mov
pop
jg
lret
xlat
mov
add
iret
push
mov
ss
pop
cmp
cltd
dec
fsub
add
pop
mov
gs
movsb
xchg
shl
push
les
rclb
push
mov
sbb
daa
pop
loopne
loopne
and
fimuls
orb
shll
out
lret
test
mov
xchg
pop
int
or
clc
stos
lods
mov
scas
rorb
mov
and
mov
pushf
ja
or
lret
loopne
add
lods
cvtdq2ps
jmp
push
arpl
jb
dec
call
enter
gs
andb
jns
insb
jmp
jno
and
imul
je
inc
mov
add
xchg
xchg
lret
pushf
lea
into
mov
imul
add
aam
dec
in
mulb
mov
insl
stos
adc
fmull
push
movsb
notb
inc
cli
add
stos
xor
iret
add
insb
inc
cmp
jne
pop
push
or
cmpsl
hlt
mov
cmp
arpl
inc
pop
in
push
jl
outsl
dec
or
mov
jg
dec
and
sarb
cmp
dec
push
cmp
fidivrs
mov
mov
fdivrl
mov
inc
adc
mov
outsb
jo
movsl
or
inc
lds
orb
sahf
loopne
and
inc
ffree
add
push
jne
pop
xchg
shlb
aad
lahf
icebp
mov
and
shlb
andb
push
jg
dec
fcomps
mov
cltd
pop
jae
or
leave
pop
stos
push
and
dec
faddl
imul
xchg
inc
popf
pop
pop
or
mov
push
push
mov
or
and
sti
xchg
jmp
push
iret
sub
xor
fcoml
rcrl
inc
aad
rcrb
or
or
inc
icebp
sbb
sbb
stc
divb
imul
pop
pop
or
rcrb
jno
jge
sub
cmpl
lcall
add
push
pop
cmp
je
cwtl
orl
xor
xorl
or
sbb
xor
dec
clc
cwtl
xchg
xchg
xor
test
and
pop
add
push
test
jne
cmp
and
enter
aam
jge
mov
xchg
outsb
dec
and
add
sbb
and
pop
rcll
push
mov
sbb
fdivr
pop
sub
inc
add
rclb
mov
test
fsubrl
mov
sahf
int3
sub
jl
pusha
adc
mov
mov
or
test
sbbl
sub
loopne
sub
push
fcoms
aas
aam
xor
sbb
das
mov
sbb
xchg
das
jo
es
jns,pn
icebp
and
sub
pusha
sub
inc
aaa
mov
stos
fwait
cmp
insl
into
int3
xor
lds
cmpsb
dec
or
push
cld
jp
dec
hlt
push
xor
mov
add
pop
insl
faddl
rclb
sbb
and
mov
imul
add
mov
enter
push
sbb
call
cmp
leave
mov
or
or
mov
jne
add
push
push
pop
pop
adc
cltd
mov
sub
mov
xchg
scas
sbb
sbb
add
xor
inc
cmp
fistps
cld
outsl
fadd
in
jp
fidivs
pop
pop
fdivl
mov
mov
sti
inc
or
fs
mov
or
sbb
mov
push
inc
and
xchg
outsl
pushf
loop
inc
fcompl
cmp
cmp
mov
inc
in
push
xchg
cmp
push
out
cmp
cmpsl
sbb
and
jmp
jae
les
jmp
bound
scas
or
movsb
mov
sbb
xchg
pop
out
mov
cmp
jge
or
or
pop
fsubs
sbb
test
xor
add
dec
test
jbe
mov
js,pn
push
jnp
or
ret
imul
in
xchg
popf
cmp
cli
fisttpl
rclb
xor
and
into
sub
aad
pop
orl
les
fidivl
das
sete
push
push
movl
dec
jb
jge
daa
push
pushw
mov
das
add
mov
dec
orl
or
add
fnstenv
gs
jb
shlb
pusha
cmpb
lock
xor
loopne
bound
inc
flds
loopne
cli
push
sti
mov
push
mov
lret
jg
rcrb
aad
push
sub
mov
pop
gs
or
lret
repz
sbb
or
sub
lret
ds
push
incb
aad
mov
fwait
xor
mov
push
dec
hlt
sub
push
arpl
or
add
mov
pop
jb
push
pop
jne
push
adc
imul
rol
popa
push
in
xchg
ljmp
inc
dec
mov
outsl
xor
repnz
cs
clc
punpcklbw
scas
and
cmp
ja
add
adc
add
xchg
or
dec
stos
into
ret
jb
mov
lret
cwtl
clc
out
sub
push
iret
int3
lcall
bound
mov
push
ret
pusha
repnz
mov
mov
lds
push
pop
std
iret
and
popa
mov
mov
or
rclb
push
add
icebp
inc
inc
ret
in
movsl
loop
mov
cltd
xchg
fimuls
or
mov
int3
xchg
add
or
call
jne
jne
popf
lds
and
ret
rcr
sub
scas
sub
pop
push
xorl
shlb
mov
cmovle
fldl
das
dec
xchg
fiadds
mov
push
lods
add
push
xchg
add
inc
push
mov
or
add
aad
or
leave
test
rcrb
adc
sahf
or
or
pusha
adc
scas
fadds
or
cmpb
addr16
ds
ret
push
mov
xchg
nop
loope
xor
push
clc
je
cs
xchg
jg
mov
sub
lea
push
lea
push
inc
push
leave
enter
fwait
push
bswap
je
and
or
push
dec
fisubl
jmp
outsl
xchg
lret
cmp
jl
push
mov
mov
int3
xor
sarl
pop
sub
lcall
and
cmp
jne
repz
add
pop
cmp
add
push
shll
mov
out
sub
lock
jle
cmp
je
sub
pushf
sbb
mov
push
jns
push
fmull
add
fnstenv
loope
sahf
adc
push
sar
addl
jecxz
mov
sub
pop
ret
jmp
sub
adc
cmpsb
dec
jmp
push
mov
lahf
in
xor
mov
fldcw
fisttps
js
dec
or
in
push
mov
xorl
dec
adc
mov
push
or
in
or
sbb
cmp
neg
and
or
movb
inc
stos
xor
call
mov
pop
inc
or
adc
inc
add
popa
mov
pop
bound
rcrl
fwait
add
divl
subl
or
or
push
jl
ret
or
jne
xchg
fwait
inc
or
inc
pushf
xchg
pop
add
sbbl
cmp
je
sbb
aas
cmp
or
push
mov
fbstp
pop
insb
jne
mov
xchg
mov
repnz
popa
cld
fildl
xchg
add
inc
or
pop
pushl
add
cmp
mov
mov
out
in
inc
out
pop
push
push
xchg
add
daa
add
test
push
sub
dec
and
or
ret
cmpl
cmpsb
dec
or
push
shrb
push
sbb
cmpl
jb
loope
mov
cmp
pop
adc
adc
ss
inc
cmc
scas
cltd
push
stos
jne
loope
js
popa
adc
cmpsb
and
mov
cmc
das
mov
notb
cltd
das
clc
push
push
leave
push
cmp
adc
leave
fs
mul
seto
out
jecxz
xor
enter
imul
and
push
jmp
jae
cmpsl
mov
push
xor
test
push
dec
mov
ficoms
orl
or
mov
inc
mov
add
jns
fadds
or
fnsave
loopne
pusha
sub
mov
lcall
add
dec
adc
mov
je
rcll
pushf
fcmovb
cmc
cmp
cmp
lds
cld
sub
inc
or
jno
and
adc
pop
jbe
lods
cltd
push
and
adc
and
rol
data16
mov
adc
js
test
outsb
sbb
mov
icebp
inc
inc
add
js
cmp
cld
cmp
std
lcall
jmp
adc
add
and
sbb
callw
mov
mov
pop
test
loop
cmp
scas
adc
push
je
adc
or
daa
xchg
lock
and
lock
cmpsb
jbe
cs
lock
jne
ds
xlat
daa
inc
into
js
push
jb
jb
jo
add
test
lock
sub
loope
pop
add
jne
or
cltd
aad
add
aaa
cld
jmp
lock
ret
out
push
test
je
cli
jmp
fidivs
jmp
jno
cmp
push
inc
cmp
jae
and
push
subl
xor
cmp
xor
pop
sub
or
subl
loop
jne
and
adc
orb
jge
mov
pop
push
ss
push
fucomi
jb
mov
xor
adc
cwtl
ss
test
mov
sbb
push
mov
mov
shl
inc
adcl
cmp
xor
dec
movsl
or
or
lret
je
add
aas
and
or
mov
cmc
in
jo
insb
or
and
addb
fwait
xor
mov
jne
mov
and
ja
jp
lds
dec
mov
mov
dec
mov
inc
shl
jmp
push
jle
test
dec
jns
mov
mov
fistpl
fcomps
or
or
inc
and
jae
xor
pop
enter
ja
cwtl
incb
mov
jmp
mov
or
mov
hlt
cmpsl
fisttpl
push
mov
xchg
inc
sbb
jg
mov
push
push
icebp
adc
sub
pop
pop
adc
mov
shlb
and
dec
sub
adcl
mov
fs
mov
mov
adc
sub
dec
add
js
push
pop
stos
pusha
add
push
or
push
add
inc
aad
xor
cmp
lea
or
clc
add
mov
jl
inc
cltd
mov
int3
add
mov
shl
push
clc
je
movsl
popa
xor
xchg
push
push
xchg
jmp
and
adcb
out
rclb
push
jl
icebp
mov
mov
sub
test
mov
jnp
jne
lar
and
dec
js
push
push
xchg
adc
insb
loope
imul
mov
add
and
mov
inc
jp
push
bound
push
in
inc
loopne
dec
adc
push
push
jbe
insb
mov
neg
push
mov
ret
mov
adc
pop
out
jne
rclb
testl
inc
mov
dec
inc
jmp
mov
int
enter
xor
dec
push
inc
cwtl
add
fs
xchg
add
aaa
xor
loop
aad
sti
faddp
pusha
and
out
adc
ret
xchg
push
jp
push
cmp
nop
inc
les
movsb
xchg
in
xor
xchg
popf
pop
pop
imul
jns
mov
and
jns
shrb
push
orb
xchg
inc
repnz
ud1
mov
dec
orl
xor
mov
or
rcll
push
sub
lock
add
movl
int
inc
out
sarb
add
mov
push
or
lods
dec
add
ret
lods
pop
inc
adc
testb
push
jae
mov
dec
imul
sbb
pop
add
mov
and
fcmovb
push
push
movsl
sbb
in
adc
aam
sbb
dec
js
jl
andl
cmpsl
jge
repz
mov
lds
and
add
bound
fs
or
andl
pusha
mov
cmp
push
xor
pop
mov
fwait
and
push
pop
or
mov
push
aam
dec
orl
pop
sub
in
cmp
push
je
jo
and
popf
leave
in
subb
sub
ret
adc
mov
inc
push
add
test
aad
mov
mov
repz
or
mov
dec
lret
test
dec
xlat
mov
pop
add
js
test
sub
or
je
orl
xchg
call
adc
pop
bnd
fimull
push
jmp
je
sbb
xlat
mov
js
push
cmp
or
cmp
pop
fs
and
je
rclb
sub
sbb
repnz
popf
dec
fldl
add
mov
cmp
add
sbb
add
jno
push
jb
jp
xor
dec
or
mov
rolb
insb
sub
cmc
adc
dec
lahf
cld
lea
fldl
mov
mov
mov
sub
and
xor
push
and
ret
sub
xor
add
inc
fidivs
add
adc
insl
imul
inc
push
cmp
xchg
lea
pop
push
faddp
xor
cmp
stos
push
popf
jg
or
dec
and
sub
clc
push
iret
mov
inc
sbb
pop
xchg
pusha
lock
add
push
mov
repz
adc
xchg
inc
or
push
mov
pusha
inc
lea
pop
insb
xor
pop
das
xchg
fsub
pop
xchg
or
sub
sub
rcll
sub
dec
sub
leave
lea
xorl
mov
adc
addr16
or
mov
sub
push
dec
xor
js
and
sub
sub
cmpsl
fadds
push
cmp
aaa
cmp
mov
pushl
lods
mov
add
add
mov
jg
movsb
sti
adc
pop
sub
sbb
jmpw
xor
lcall
inc
dec
popa
jo
loopne
sub
mov
xchg
cmc
popf
addr16
repnz
lea
push
cmp
jnp
cltd
sbb
insl
aaa
xor
cs
inc
mov
loop
incb
pop
jns
jns
rolb
or
hlt
dec
and
inc
or
cmpsb
mov
cltd
push
mov
arpl
cmpl
rdtsc
push
adc
mov
sub
push
mov
rol
mov
test
lea
push
push
pop
push
lock
cltd
in
pop
push
xchg
sub
mov
lock
or
mov
nop
int
sbb
stos
je
sbb
in
addr16
sbbl
loope
xchg
loope
mov
mov
ret
mov
inc
insb
inc
test
add
pop
sbb
mov
mov
xchg
pop
aad
rolb
mov
lahf
xchg
inc
mov
pop
jnp
es
xor
daa
std
cmp
outsb
subb
loopne
test
inc
add
ret
in
add
and
addr16
or
mov
inc
cmc
daa
stos
cld
jmp
mov
rolb
and
call
jl
pushl
mov
test
inc
and
xor
adc
add
scas
lock
cmp
test
adc
jbe
out
jae
sbb
adcb
imul
add
jae
arpl
inc
mov
daa
mov
add
mov
add
scas
adc
or
inc
inc
add
mov
jb
ja
popa
dec
jnp
push
stc
test
push
in
and
xchg
jo
pop
adc
movsb
inc
cmp
mov
pop
divb
pop
sub
dec
fisttpl
icebp
sar
js
adc
in
movb
cld
cmpsl
test
inc
hlt
inc
hlt
arpl
sub
js
pop
mov
adc
pop
push
ret
pop
jmp
rcll
xchg
cmp
inc
jo
shll
and
or
or
int
sub
dec
dec
push
rcll
imulb
pusha
pop
dec
scas
mov
xor
xor
sbb
insb
add
jmp
notl
jo
inc
insb
pop
dec
jno
mov
bts
movb
rorl
mov
inc
or
xchg
sub
mov
loope
inc
inc
push
fadds
test
sub
lock
dec
sbb
adc
pop
add
mov
lcall
cwtl
cmp
les
mov
inc
mov
loopne
cmp
mov
mov
xchg
rolb
roll
or
pop
sbb
lods
sbb
jne
and
push
mov
cmpsb
in
jae
or
xchg
pop
pop
imul
int3
mov
pushf
ds
jae
in
and
pop
ss
aaa
mov
clc
push
lea
shrb
lret
hlt
adc
cmp
loope
pop
cmp
inc
mov
and
add
push
imul
inc
dec
mov
push
icebp
xor
mov
jle
sbb
mov
mov
movsb
mov
adc
dec
xchg
inc
loope
ja
add
nop
inc
incl
test
sbb
nop
out
lods
sarl
clc
inc
push
sahf
cs
pop
or
sbb
mov
out
negb
fadds
shl
adc
mov
rol
inc
cmp
lock
daa
in
add
add
xchg
or
xor
xchg
push
xchg
cmpsb
pop
neg
xchg
and
sbb
loope
es
xchg
in
push
cwtl
xor
xor
jmp
ss
push
xor
or
cmp
loopne
xchg
xor
stc
lcall
mov
or
jo
test
mov
xor
xor
addr16
insl
and
fimull
cltd
mov
xlat
push
adc
mov
dec
sub
adc
and
rcl
sub
pop
adc
scas
mov
mov
rcrl
pop
cwtl
or
jno
mov
jmp
xor
push
pop
jecxz
test
addl
js
cmpsb
jmp
js
add
jg
in
cmpb
xor
sti
add
xchg
jle
xor
dec
or
sbb
jl
ud0
shlb
notb
inc
je
or
test
xor
pusha
cmp
mov
mov
jne
inc
mov
push
cmp
pop
sbb
adc
or
lcall
fsts
pushf
pop
and
pop
test
cmp
push
test
pop
bound
popf
icebp
add
cmp
js
jo
int
push
andl
pop
push
inc
or
push
icebp
add
test
jno
push
pushf
cmp
sub
fsubrs
mov
cmp
pushf
adc
jle
cmp
jae
mov
push
jno
and
aam
out
shlb
adc
jne
push
dec
scas
lods
enter
std
push
or
jns
xor
push
aas
cld
mov
outsb
out
add
test
daa
mov
mov
aas
adc
nop
cmpsb
cmp
dec
rclb
dec
cmp
cld
insb
push
push
push
cmc
inc
sahf
dec
pop
xchg
sbb
xor
dec
adc
add
cmpsb
arpl
push
das
xchg
sbb
sbb
sbb
pop
mov
adc
mov
movsl
jge
push
inc
inc
sbb
xor
push
out
lods
pop
push
adc
inc
add
das
pop
or
adc
popf
jmp
and
push
lods
or
sbb
add
or
mov
roll
nop
cld
ljmp
aas
sub
jo
mov
adc
add
or
and
std
mov
mov
mov
jbe
push
push
movsl
je
enter
and
nop
sbb
rorl
sbb
cmpsl
and
call
inc
fiaddl
cmp
mov
rolb
lods
popl
roll
mov
add
mov
dec
data16
les
pop
inc
enter
ja
fistps
push
ljmp
xchg
xchg
sbb
sbb
add
out
push
cmp
aaa
sub
push
add
shlb
inc
xor
mov
adc
push
push
pusha
pop
and
mov
mov
add
mov
mov
pop
fisubs
lret
inc
add
fisubs
inc
adcb
dec
fmuls
sbb
pop
add
dec
rcrl
add
push
cmp
scas
mov
xchg
sbb
xlat
dec
in
jno
lea
lea
push
mov
ret
test
and
pop
imul
and
cmpsb
imul
leave
int3
imul
loope
jno
mov
test
mov
shlb
push
aas
mov
test
mov
andl
and
inc
daa
jo
xchg
je
xor
or
test
ret
pop
mov
mov
and
sub
sub
es
or
incb
inc
inc
xchg
and
mov
push
jl
into
mov
fs
repz
cmp
xchg
mov
out
je
lods
call
add
daa
int3
and
mov
stc
popa
or
repnz
sbb
xor
add
mov
sub
loopne
xor
adc
or
out
dec
sbbb
push
sti
setge
xchg
jg
outsb
mov
xchg
mov
shlb
aas
pop
in
pop
sbb
xor
pop
fiaddl
fidivs
pop
cs
fstl
cmp
dec
xlat
scas
sub
jno
jl
popf
jb
adc
ja
dec
popl
mov
sbb
dec
push
movl
stc
inc
inc
inc
adc
daa
es
js
inc
xorl
aad
in
inc
out
dec
cmp
ljmp
add
add
xor
sarl
adc
add
sbb
xor
jecxz
cmpsb
fiadds
add
ss
push
jp
mov
or
jnp
shl
or
inc
adc
outsb
mov
xchg
test
arpl
xor
push
icebp
xor
jo
xor
dec
jne
pusha
mov
mov
clc
adc
sbb
shr
and
jmp
adc
test
pop
mov
dec
mov
aam
dec
insl
and
jp
int3
pop
aaa
lock
push
xor
repz
mov
in
mov
das
xchg
sub
mov
xchg
jge
sub
arpl
or
js
cmp
movl
xchg
daa
xor
std
sub
enter
push
lea
cli
jb
mov
or
or
ret
faddl
mov
jmp
lea
repnz
sbb
pop
ja
xchg
push
mov
xlat
je
jp
push
out
dec
orl
add
xchg
test
ja
push
nop
xchg
or
push
jns
cmp
and
jl
aas
mov
inc
stos
imul
rolb
cmc
push
push
lods
or
sub
cmpsb
cmpsl
xor
aad
or
jb
pusha
icebp
and
cmp
testb
jle
mov
fmul
data16
test
out
je
pop
clc
lods
sbbb
push
xor
mov
mov
sbb
nop
and
sub
xorb
sub
jno
and
fmuls
and
jmp
inc
cmp
inc
lea
push
cmp
cmp
mov
adc
test
cmp
dec
push
fcomps
push
lods
adc
xchg
jns
pop
cwtl
aaa
push
iret
into
cld
push
std
mov
fcmovnbe
jmp
cmp
je
loopne
mov
aaa
js
rol
sub
inc
jae
and
inc
add
adc
cld
inc
add
add
jmp
xor
adc
jnp
and
dec
lcall
lea
sarb
fs
add
ret
popa
add
cmp
incl
inc
adc
mov
mov
sbb
mov
iret
push
pop
aaa
jne
jmp
mov
xor
dec
mov
rcll
push
loop
mov
stos
adc
notb
push
or
movsb
and
lret
loopne
sub
inc
mov
cmp
scas
add
push
loope
ss
les
jae,pt
inc
sub
mov
test
mov
pop
add
dec
movl
add
inc
sub
push
push
and
sub
incb
mov
lret
ja
mov
adc
bound
dec
pop
enter
imul
push
mov
pop
test
mov
ret
adc
push
dec
loopne
adc
adc
sbb
and
ret
fdivrs
ja
jge
mov
divb
inc
cmp
jl
pop
test
lods
and
movl
nop
out
dec
add
jno
lods
ja
xor
addr16
mov
push
pop
mov
inc
decl
loopne
sti
dec
jo
enter
insb
mov
xor
xchg
aam
xorl
sbb
mov
mov
cmp
imul
or
add
js
sub
cmp
aad
arpl
inc
mov
add
fmull
out
clc
movsl
insl
pusha
xchg
push
incl
fimull
popf
mov
inc
cmp
cmp
cmp
je
push
mov
xor
es
cmpsl
data16
leave
jo
andl
sbb
and
push
inc
imul
movsb
pop
cmp
in
mov
in
xchg
test
call
xor
or
dec
push
movsb
jns
or
mov
test
sub
imul
mov
shlb
push
es
cmpl
and
movsl
mov
mov
jae
int
push
push
push
imul
inc
sub
daa
mov
test
add
cmp
add
and
adc
or
int3
aam
inc
dec
aaa
lods
or
shrl
xchg
fmull
sbb
sub
fs
mov
inc
dec
mov
push
mov
outsl
lock
cmpsb
mov
test
je
sub
cmp
js
cmp
test
push
inc
pop
adc
pop
pop
dec
je
mov
sbb
sbb
inc
enter
pop
fcoml
mov
jbe
cmp
mov
dec
aam
dec
inc
ljmp
inc
or
rorb
adc
sub
pop
push
test
in
cmp
push
adc
and
push
sub
data16
lea
cli
sbb
or
sbb
adc
pop
adc
sub
xor
adc
shrb
outsl
ja
pushf
mov
mov
dec
and
ja
cmp
cmp
push
adc
roll
adc
push
and
sbb
ljmp
jecxz
xor
adc
in
mov
and
aad
inc
imul
lock
dec
cwtl
stos
and
sub
sub
push
fsubrp
sub
inc
xchg
jns
je
pop
mov
aas
leave
mov
filds
stos
mov
xor
cli
insb
cmp
pushf
dec
ss
mov
orl
sub
add
xor
mov
jne
jb
jl
push
out
cmp
jge
xchg
stos
inc
xchg
movsb
lea
pop
cmp
aaa
xchg
cmp
stc
subb
add
dec
and
sbb
sbb
cmp
xchg
ss
and
dec
inc
in
sbb
or
insl
sub
pop
andb
adc
xchg
mov
inc
rcll
jecxz
pop
xchg
inc
fidivrs
dec
out
pop
or
adc
je
mov
dec
push
xchg
adc
cmpl
addw
inc
pop
loopne
mov
add
and
aaa
fistps
lcall
dec
add
push
sub
sub
js
mov
fwait
vpcmpgtb
add
nop
addr16
pop
xor
or
dec
pop
add
sbb
leave
and
pop
add
push
test
pop
faddp
stc
pop
test
and
pop
fcomps
push
dec
sub
pushf
adcl
mov
sbb
jnp
xchg
push
arpl
adcb
sub
aad
push
aaa
xchg
data16
jl
sub
xchg
add
xlat
xchg
pushl
enter
cld
pusha
mov
lock
int3
js
pop
das
jmp
xor
sbb
jge
or
aaa
das
adc
sub
adc
cld
sub
fstps
or
cmp
and
dec
aad
inc
mov
jp
mov
subl
mov
mov
lret
mov
je
out
mov
adcb
xor
adc
xor
xor
sbb
nop
out
xchg
sub
cmp
lea
in
xor
and
push
loop
or
or
and
popf
adc
xor
sbb
leave
xorb
inc
xor
ljmp
and
cmp
sbb
mov
cmp
int3
jno
xlat
and
nop
inc
sub
adc
mov
xlat
out
mov
lret
call
pop
loop
cwtl
imul
orb
push
les
rcll
sbb
inc
das
jecxz
bound
pop
or
notl
mov
adc
outsl
mov
pop
add
push
adc
je
lret
push
cmp
mov
cld
xchg
adc
rcrb
pop
sub
or
xor
mov
ja
sub
jae
sub
lret
iret
test
add
out
jae
or
lret
mov
cli
pop
inc
push
and
mov
jbe
adc
outsl
loop
push
jmp
sub
pop
and
inc
test
xor
jbe
ja
hlt
sub
popf
dec
testl
mov
loopne
add
cli
push
sub
lahf
pop
cmovle
adc
fnsetpm(287
jb
and
jae
or
add
adc
fldl
inc
pop
mov
and
or
mov
xchg
jne
jnp
mov
ljmp
loopne
cmpl
xor
daa
xchg
inc
push
in
lea
xchg
testb
repz
pop
xchg
xchg
stos
shll
adc
dec
test
shlb
fildl
test
jo
cltd
push
xchg
or
and
in
sbb
jnp
sub
dec
mov
xlat
notb
popf
push
dec
imul
xor
cmp
dec
push
dec
or
popf
xchg
mov
sub
ljmp
and
add
xor
sahf
lea
aad
mov
push
outsl
ret
push
test
inc
or
popa
adc
sbb
iret
mov
jno
movsl
dec
and
add
test
mov
xor
cwtl
pushf
sbb
mov
movsl
pop
sub
sbb
mov
cmp
add
popf
sub
cmp
in
cli
push
repz
in
divb
mov
hlt
adc
ss
or
mov
lcall
outsl
pop
xlat
test
jbe
rcrb
pop
jge
hlt
pop
testl
adc
push
cmpsb
or
shrl
hlt
dec
xchg
or
or
aam
mov
pop
or
icebp
jno
jns
mov
and
push
xor
mov
fadd
ljmp
sarl
shl
push
cmp
repnz
push
sbb
into
clc
push
push
push
pop
push
xchg
mov
xor
lds
sahf
or
push
imul
jg
lock
in
sbb
push
cmp
lea
cmp
mov
pop
pop
lret
mov
nop
andl
fs
add
sbbl
leave
pop
rcrb
inc
push
xchg
add
and
xchg
and
and
and
push
mov
ret
cmp
es
cmp
lds
sbbl
leave
adc
daa
xchg
sbb
pop
mov
jmp
stc
andb
test
and
mov
shrb
inc
cs
inc
push
pop
sub
sub
cmp
sub
push
xor
sub
icebp
or
insb
pop
mov
xchg
aaa
arpl
pop
fcomps
repnz
mov
push
push
sbb
xchg
jl
inc
imul
test
push
xor
pop
and
in
fcoml
xor
icebp
fs
inc
out
mov
sub
outsl
xchg
xorl
jle
dec
mov
pop
adc
dec
adc
pop
rcl
jo
ja
push
or
pop
movsb
jns
lcall
jns
and
fidivrs
push
adc
movsb
adc
and
and
test
add
arpl
add
mov
add
xor
out
pop
imul
mov
inc
pop
or
aad
inc
pop
or
push
loope
xlat
sbb
or
iret
ss
push
mov
push
push
inc
add
je
testb
or
and
fisttps
cmp
les
lret
pop
popa
or
push
les
push
rclb
mov
lock
add
adc
jmp
shl
std
xor
pop
insb
or
icebp
fcmovu
push
pop
clc
loopne
add
push
push
fadd
lds
add
mov
jl
lcall
fsts
pop
adc
mov
dec
add
jne
pop
pop
cwtl
pop
or
data16
dec
lock
test
out
mov
data16
push
hlt
dec
sub
gs
call
or
pop
pop
dec
cld
dec
push
pop
push
xor
pop
push
push
xchg
xchg
mov
dec
adc
test
shlb
adc
xor
xor
mov
xor
pop
les
adc
or
icebp
or
or
or
and
es
sti
mov
sbb
push
out
or
cmp
cmp
je
inc
xlat
adc
hlt
dec
stos
cwtl
xor
sarl
mov
dec
add
add
sub
into
cmp
push
inc
icebp
mov
int3
lcall
inc
add
cs
js
add
ja
dec
nop
xor
in
lahf
ret
je
daa
loop
or
add
test
popa
call
mov
orl
imul
mov
pop
push
cmpsb
inc
fisubl
fcomps
fs
lret
enter
sbb
mov
rol
rorl
add
in
mov
les
fisubs
inc
fidivrl
push
pushf
shll
mov
or
pop
xor
jbe
popa
pop
orl
add
daa
push
clc
jle
dec
rclb
ja
adc
iret
xor
fdivs
push
ds
push
addb
inc
ljmp
push
inc
or
repnz
jo
addb
hlt
inc
add
bound
adc
nop
xchg
push
call
jnp
inc
jne
push
loopne
shr
out
subb
jge
mov
mov
clc
pop
adc
push
sbb
hlt
add
aaa
add
scas
in
add
adc
jle
push
add
push
andl
movl
mov
push
pusha
mov
pop
sbb
adc
pop
jp
lds
dec
xor
lods
push
sbb
pop
dec
adc
in
push
lea
movsb
mov
rep
adc
xchg
mov
lods
adc
inc
dec
daa
xchg
stos
jmp
adc
xchg
movsl
mov
mov
scas
mov
push
ret
add
pushf
fstpt
lret
arpl
ffreep
mov
mov
jne
or
int3
sbb
adc
daa
jecxz
and
lea
rolb
add
aas
lret
dec
adc
incb
cs
cmp
mov
push
dec
jo
adc
sbb
mov
and
dec
sub
inc
inc
inc
in
cmp
rorl
mov
scas
insl
ja
dec
push
inc
jmp
mov
and
dec
insb
aaa
or
shll
bound
pop
pop
mov
mov
lahf
test
mov
add
add
push
add
jl
scas
movl
xchg
xchg
sbb
mov
jg
sahf
or
add
add
sbb
stos
mov
xor
pop
inc
mov
mov
jae
and
mov
adc
sbb
sbb
mov
mov
mov
mov
and
mov
mov
cmp
or
cmc
nop
pop
add
or
je
and
adc
sbb
loope
pop
push
test
pop
cmp
mov
dec
fs
dec
in
ja
jecxz
aas
imul
or
pop
or
loope
test
into
ret
pop
mov
add
in
inc
or
clc
jg
adc
cmp
jle
cld
jae
inc
add
outsb
mov
subb
ret
and
adc
cmp
loopne
ret
cmp
add
mov
faddl
outsl
rorl
sub
cmovle
stc
xchg
sub
add
fldcw
pop
mov
lret
jp
cltd
push
mov
sbb
jmp
xor
lock
mov
js
scas
pop
xchg
and
outsb
push
loopne
mov
repnz
dec
inc
push
mov
dec
sub
mov
lods
add
sub
leave
cmpsl
stos
pop
cwtl
sub
mov
aam
stos
xor
mov
test
add
cmp
rcrb
add
mov
push
arpl
add
pop
xor
dec
add
adc
sub
mov
fimuls
call
shll
fldt
add
pop
mov
add
test
mov
lea
fistl
mov
and
pop
or
xchg
xchg
inc
or
mov
sbb
das
or
sbb
lret
adcb
insb
sti
push
ficoms
pop
jmp
scas
jo
inc
scas
enter
mov
jno
movsl
push
push
push
push
addb
dec
inc
push
push
cld
jno
adc
pop
dec
andl
add
lods
out
rcrl
mov
and
cmpsl
pop
mov
xor
popa
repnz
lea
jmp
loopne
stc
or
data16
adc
subl
cld
add
or
aaa
adc
adc
loopne
mov
sbb
mov
sbb
jne
and
call
pop
xchg
adc
push
xor
cmp
fimuls
mov
mov
mov
mov
xchg
sbb
out
xor
mov
push
loopne
inc
inc
mov
enter
clc
popa
adc
sbb
adc
inc
lea
iret
pop
dec
inc
bound
xor
es
or
call
adc
or
mov
inc
js
pop
mov
dec
jnp
push
inc
daa
adc
outsl
lret
popl
add
fidivl
jo
daa
cwtl
sbb
jo
sbb
movb
dec
popf
inc
jnp
xchg
cltd
mov
mov
stos
nop
bound
sub
scas
cmp
pop
and
pop
in
dec
xchg
cmp
lea
pop
push
push
xor
fcmovnb
push
test
push
daa
push
stos
orl
sbb
xchg
stos
sub
call
scas
je
sahf
incl
sbb
xchg
push
sbb
lds
iret
leave
push
fsubl
inc
push
jl
sbb
inc
cmp
mov
and
add
int
test
shlb
nop
inc
pop
or
or
inc
movsl
adc
mov
lahf
xor
in
or
push
sub
stc
test
add
dec
dec
dec
xor
add
std
sub
xor
icebp
test
and
stos
nop
popf
insl
adc
mov
or
das
je
fmuls
and
imul
pop
jb
aas
add
lods
xor
data16
in
fidivrl
adc
aas
pop
dec
test
fisttpll
cmp
insb
andl
mov
js
dec
add
fistpll
fistpll
jmp
mov
data16
adc
xor
rcrb
sub
inc
js
sub
mov
pop
loop
movsl
out
or
inc
lea
jbe
imull
and
push
mov
test
xor
mov
loopne
js
fcmovu
cmp
dec
fisubrs
adc
xor
lea
xor
mov
fs
inc
dec
jo
cs
or
sbbb
push
inc
out
loop
cmc
adc
lods
dec
sub
mov
pop
fs
push
inc
push
fldcw
add
cmp
loopne
xor
or
pop
dec
int
adc
lds
or
orb
nop
mov
push
push
ja
sbbb
cld
or
sbb
add
dec
pushf
outsb
mov
adc
in
imul
xor
jmp
mov
add
cmp
push
push
sub
ss
inc
icebp
push
inc
lcall
sbb
fs
bound
push
xor
ret
push
pop
and
push
outsb
pop
mov
add
jo
fwait
mov
addl
cmp
shlb
je
js
add
outsl
movsl
jns
mov
outsl
into
adc
push
movl
cwtl
popa
cmp
or
push
mov
xor
movsb
arpl
test
gs
pop
adc
rcl
insb
pop
je
sbb
xorl
add
sti
mov
push
sbb
aas
sbb
adc
scas
mov
add
test
and
cmpsl
loop
ljmp
mov
xorb
jne
in
push
cmpsb
mov
in
aaa
add
pop
cmp
insb
js
rcrl
push
sbb
mov
add
push
jge
push
and
push
mov
add
stos
in
outsl
int
lds
je
je
adc
dec
dec
fs
cs
add
dec
add
or
dec
add
enter
add
xchg
inc
jo
xchg
adc
outsl
pop
push
pop
sbb
testl
mov
les
rcll
sbb
repz
sbb
mov
add
adc
jno
cltd
arpl
mov
mov
inc
xor
adc
nop
dec
nop
dec
xchg
rorb
add
aam
push
xorl
imul
lea
sub
push
inc
test
inc
mov
mov
add
pusha
mov
xchg
mov
int
pop
dec
jmp
rorl
stos
mov
or
or
clc
inc
outsb
hlt
int
test
add
or
adc
adc
enter
movl
in
jo
shr
repnz
pusha
icebp
or
mov
aaa
int
movb
jno
xor
mov
or
sub
push
adc
jle
fs
or
pusha
dec
push
mov
sarb
jge
mov
sub
xchg
push
or
sbb
jp
test
loopne
sub
lea
jb
jle
cmp
or
pushl
dec
mov
cmp
inc
jno
insb
arpl
dec
mov
add
mov
add
dec
xchg
sbb
mov
sub
sub
dec
sbb
push
mov
mov
cmp
lods
jnp
loopne
and
adc
je
adc
cli
or
push
ret
push
and
lds
inc
and
and
ljmp
or
add
les
lea
pop
dec
or
push
imul
and
je
adcb
jnp
dec
add
movsbw
inc
jg
xchg
mov
cmp
jne
xchg
fucomi
and
or
or
fwait
dec
add
xor
inc
adcb
sbb
mov
pop
add
inc
hlt
mov
hlt
push
inc
rol
out
push
jg
rolb
pop
pusha
roll
dec
cmp
adc
jo
dec
lods
pop
js
je
and
ficoms
fidivrl
sbb
imul
lret
xor
xchg
mov
push
aas
ljmp
inc
fucomi
add
cmpsl
push
repz
add
leave
sbb
or
les
cmpsl
and
xor
sahf
add
dec
mov
inc
popf
or
jb
mov
shll
inc
gs
jnp
outsb
ret
push
sub
xchg
addr16
jp
dec
sbb
je
std
lock
dec
mov
test
inc
or
mov
test
neg
mov
test
and
add
or
pop
push
popa
sub
movsb
neg
out
popa
sarb
in
add
push
jecxz
leave
xchg
pushl
push
push
add
mov
ret
mov
bound
mov
sbb
and
inc
ret
xorl
sub
dec
push
call
sub
push
pop
jg
sbb
fs
xchg
sbb
sub
xor
dec
and
add
mov
dec
xlat
cli
mov
daa
jne
cwtl
xchg
mov
outsl
xor
das
push
jg
and
adc
mov
test
rcrb
xchg
aam
mov
sbb
jecxz
jb
inc
xor
mov
dec
in
adc
mov
imul
add
bound
hlt
leave
and
scas
wbinvd
repz
sbb
sub
clc
cmp
adc
or
xchg
leave
inc
or
test
pop
fnstcw
pop
pop
and
jae
call
mov
cmp
andb
push
mov
repnz
push
in
test
mov
mov
mov
pop
mov
jle
sub
scas
mov
add
movl
mov
mov
pop
scas
xchg
lock
rorb
pop
js
popf
xchg
or
int3
out
xchg
icebp
add
push
push
push
nop
pop
jp
push
out
mov
add
mov
inc
cmp
adc
pusha
fbld
insb
and
mov
and
stc
imul
xor
call
cwtl
mov
movl
jo
inc
or
cmp
inc
dec
inc
adc
mov
sbb
dec
xchg
mov
shrb
add
pop
adc
test
addl
addl
icebp
sub
sbb
das
jmp
and
sub
cld
or
jne
movsl
add
and
and
add
sarl
or
adc
mov
in
subb
jp
push
push
and
movsb
mov
aam
hlt
adc
sub
lret
jmp
aam
clc
sub
dec
stc
add
push
add
push
push
push
push
es
and
jne
pop
xor
mov
push
mov
cmc
push
cmp
add
icebp
push
jne
mov
nop
call
sub
aas
nop
xor
cmp
jne
and
jnp
push
mov
push
rolb
bound
cmp
fsubl
cmp
mov
cmp
and
push
gs
rclb
jo
pushf
push
mov
mov
repnz
xchg
xor
ficoml
adc
lret
mov
push
fiaddl
dec
jmp
and
in
inc
inc
jmp
cld
jmp
push
test
fadds
xchg
testb
push
movsl
cs
xor
jbe
inc
cwtl
cmpsl
popf
add
lcall
adc
aas
pushf
lea
inc
add
je
pop
add
fs
mov
lods
fnstsw
mov
or
sbb
pushf
cmp
jle
addl
js
add
xor
jo
jp
xchg
xchg
jbe
icebp
mov
mov
popf
enter
adc
aam
dec
sbb
jnp
push
nop
pop
dec
push
outsl
mov
loopne
dec
sbb
adc
cmp
lds
cmp
push
test
loop
xchg
popa
add
push
fs
mov
mov
sti
mov
lcall
sub
dec
xor
pop
add
movsb
rclb
add
inc
fsts
dec
cmpsl
or
cmp
int3
push
rol
or
pop
push
push
stos
into
cmpsb
mov
mov
mov
xchg
pop
or
push
inc
mov
lahf
addr16
out
negl
and
lds
push
arpl
cltd
adc
adc
adc
push
xchg
mov
mov
add
das
mov
std
push
cli
pop
shll
ljmp
lahf
lock
jb
xchg
inc
jne
lcall
ja
les
mov
add
dec
fists
jo
and
push
sbb
ss
mov
sbb
in
lea
adc
cmp
and
iret
loopne
cmpsb
push
push
mov
and
jo
xor
jg
push
xor
sbb
pop
or
mov
clc
jo
arpl
mov
scas
xor
mov
pop
mov
mov
orl
mov
adc
pop
add
adc
ds
leave
push
add
test
orl
mov
xchg
test
in
lock
roll
or
enter
or
pop
hlt
jmp
and
dec
ljmp
adc
sub
jl
mov
sub
addb
xor
outsl
mov
add
xchg
mov
mov
scas
add
pop
dec
pop
xor
and
les
mov
cld
jmp
sbb
es
lahf
add
cmp
je
inc
push
int3
pop
jl
and
push
cmp
lods
sub
dec
out
lock
dec
out
jmp
jae
rolb
je
gs
outsl
loop
das
cmp
or
insb
push
inc
push
sub
pop
daa
xchg
cmpsl
push
push
out
cmp
jbe
cmpsl
mov
or
jnp
loopne
adc
lcall
fiaddl
js
xchg
or
adc
mov
ret
cmpsb
push
stos
and
aas
mov
andl
lods
pop
inc
nop
lret
lret
or
stos
jnp
xor
inc
mov
loope
dec
add
lods
ret
xor
das
dec
mov
add
xchg
clc
into
cld
add
es
xchg
jae
lea
shll
add
dec
popa
add
jmp
test
adc
push
loopne
or
imul
loopne
rcll
sub
fiaddl
and
stc
pop
pop
sub
push
sbb
adc
xchg
mov
adc
cmp
push
jo
jle
add
cmpw
sbb
cmpb
sub
push
pop
add
in
scas
jmp
pop
push
pop
mov
add
sar
inc
jmp
push
je
sbbb
mov
jns
and
pop
jns
call
add
xor
adc
orl
test
jne
xchg
dec
jl
int3
test
jl
sub
jmp
std
outsl
jg
out
cld
lcall
dec
movzwl
cmpl
push
enter
adc
rorl
out
and
gs
add
add
imul
pop
and
sub
pushf
lock
mov
and
jae
xchg
dec
in
cmc
dec
push
inc
pop
pop
in
inc
xchg
add
push
ret
adc
pop
mov
sysret
or
dec
loopne
pop
and
leave
movb
and
stos
bound
dec
cmp
jne
jb
fs
push
loope
lock
add
add
cli
pop
dec
pop
push
pop
push
dec
lods
sbb
add
shl
and
dec
es
jle
mov
js
sbb
sbb
repnz
loop
and
movsb
or
push
imul
icebp
add
popf
dec
out
inc
add
adc
or
xor
addl
sub
imul
add
push
mov
scas
clc
fldl
xchg
jne
adc
movsb
and
stc
jo
or
pop
add
adc
movsb
push
nop
xchg
xor
dec
add
lock
into
mov
aaa
mov
adc
xor
xor
push
data16
or
fwait
mov
lret
in
out
mov
inc
iret
mov
lock
test
jle
sub
jmp
fiadds
mov
cld
jmp
push
mov
dec
nop
and
add
mov
mov
shll
xchg
mov
xor
push
outsl
pusha
sub
xor
adc
popa
dec
repnz
and
push
add
sbb
jne
inc
pusha
xor
and
add
push
add
dec
mov
pop
dec
daa
rcrb
add
jp
cmpl
pop
je
or
in
aaa
in
adc
test
hlt
imul
mov
and
shl
push
cmp
mov
test
jecxz
sbb
mov
adc
sbb
jl
jne
dec
sub
inc
hlt
ret
call
lea
out
pusha
push
ret
pop
inc
lret
test
pop
jne
imul
dec
movsl
shrb
or
cmp
push
and
and
scas
push
sbb
icebp
and
cmp
movsl
aad
lods
adc
push
or
scas
xor
xchg
sbb
idiv
fists
dec
pushf
nop
mov
cmp
jnp
and
loopne
dec
scas
and
xchg
mov
lock
inc
pop
sbb
aam
lock
inc
dec
or
mov
psubw
or
das
mov
push
lds
jle
lods
or
cli
dec
inc
fnstenv
stos
xor
adc
shlb
lock
nop
aaa
lahf
in
or
adc
addb
inc
mov
push
leave
push
xor
sub
jmp
push
ret
test
inc
sti
dec
xchg
test
add
dec
jmp
dec
ja
clc
ret
dec
or
jae
sub
lea
jle
xor
push
inc
aaa
mull
pop
lea
jmp
push
push
das
mov
inc
inc
pop
pop
push
sbb
test
testl
sbb
xor
adc
pop
dec
fisttps
sub
ljmp
pop
in
inc
fimull
xlat
push
inc
push
dec
or
sub
pusha
adcl
jl
pusha
add
xchg
xor
inc
add
mov
inc
mov
add
push
sbb
daa
add
or
mov
push
sbb
mov
sub
adc
dec
nop
lods
inc
mov
xor
nop
cmp
pop
sub
push
ficompl
mov
dec
clc
push
dec
mov
loope
sub
push
or
inc
add
jmp
repz
sbb
dec
inc
fcmovbe
fimuls
sub
mov
mov
pop
dec
mov
sbb
inc
inc
shrl
in
push
scas
xlat
pop
xchg
js
repz
cmp
xor
xlat
sbb
push
push
xorl
push
stos
sbbl
or
and
push
test
jecxz
pop
pop
fwait
ljmp
dec
test
push
dec
mov
add
push
cmp
push
fdivrp
push
sbbb
jmp
movsb
xor
pop
jae
pop
cmpb
cmc
insl
adc
add
xor
pop
jge
clc
mov
add
rolb
int3
into
rclb
add
xchg
push
pusha
add
push
push
iret
push
clc
mov
pop
mov
sub
pop
dec
mov
dec
pop
clc
push
mov
repz
cmpl
jo
pop
sahf
movsl
inc
mov
or
loop
movsb
adc
or
push
insb
xchg
sub
dec
xorb
push
int
ret
fmuls
dec
shr
inc
fisubl
es
mov
sahf
data16
push
fidivrs
inc
mov
jo
mov
or
push
adc
fdivl
push
sub
enter
push
icebp
fistps
sbb
ficoms
repz
movsb
lret
cmp
xor
jle
cld
out
dec
cld
out
jmp
add
loop
and
movsl
sub
dec
es
xor
pop
pop
in
fisubs
lea
xchg
mov
sub
add
jae
push
and
and
faddl
push
xor
ret
sub
cmpsb
cmp
cmpsb
cld
daa
test
leave
in
or
xor
mov
lods
jno
mov
dec
mov
mov
push
push
push
pop
repz
push
xor
pop
mov
adc
rclb
cmp
pop
rcrb
cmc
cmp
and
xchg
call
adc
mov
cwtl
jmp
push
jg
lods
clc
repz
cmp
outsb
or
out
pop
arpl
aaa
add
rolb
bound
ret
push
out
mov
pop
sub
arpl
xor
mov
ljmp
outsb
push
or
add
leave
cmpsb
cmp
test
or
xor
push
inc
or
cmpsl
jns
jns
xor
and
in
sbb
pushf
and
cmp
test
ret
dec
adc
mov
xor
xor
shrl
xor
jne
adc
mov
dec
mov
dec
pop
cltd
mov
inc
ja
test
xchg
or
cmp
dec
pushf
inc
inc
dec
dec
xor
sbb
or
jns
cmp
or
adcb
adc
pop
and
test
xor
dec
sub
subb
mov
or
enter
mov
lret
lea
xor
nop
jo
insl
push
cli
and
mov
mov
stc
addr16
cmp
or
pop
popa
mov
scas
and
in
push
orb
push
pop
or
jae
aaa
ljmp
call
push
fcom
push
fs
test
lock
addr16
xor
les
inc
add
pop
test
das
je
push
sub
insl
iret
rclb
and
into
sub
lods
xchg
inc
rorl
int
loopne
lock
mov
lods
fs
push
test
rorl
lea
addl
insl
sbb
inc
lods
sbb
mov
lea
jae
push
jb
sub
sub
leave
xor
xor
or
sub
sahf
lods
es
mov
imul
mov
shll
push
add
mov
cld
cltd
pop
shlb
push
cmpsb
out
cwtl
mov
popf
or
push
or
mov
adc
inc
daa
push
mov
insl
pusha
add
xorb
int
push
and
icebp
or
les
mov
add
movsl
dec
sub
push
push
nop
xor
lea
movsb
or
or
in
adc
loope
pushf
xor
inc
mov
adc
cmp
push
or
xor
inc
mov
inc
add
pop
adc
mov
cld
bound
shrb
push
xchg
adc
cmc
rolb
or
adc
jg
popa
stos
enter
and
movb
xchg
push
es
adc
cltd
xchg
or
sub
or
leave
xchg
mov
and
testl
test
test
ds
shlb
mov
fsubrs
sbb
in
xor
pop
pop
test
or
addl
out
lods
or
imull
div
add
movsb
sbb
add
insb
dec
sbb
jns
test
jecxz
inc
xor
jp
xchg
xchg
push
sub
loop
jne
lea
mov
movsl
pop
cmpsl
add
orl
xchg
sub
dec
and
push
mov
int3
insl
lahf
sub
lahf
hlt
push
xor
rcll
push
shrb
sti
sub
icebp
in
lods
andl
sbb
mov
and
pusha
mov
push
fwait
mov
inc
lock
adc
repnz
ss
outsl
and
sbb
fucomp
pop
cmp
mov
and
shlb
inc
pop
jae
jne
nop
sub
fstps
dec
cmpsb
and
push
dec
lcall
aam
inc
cmp
xchg
jp
hlt
jge
in
popf
cld
icebp
mov
cs
sub
stos
in
in
mov
mov
enter
inc
aas
movsl
sbb
mov
lods
cltd
xchg
xchg
mov
or
rol
push
jo,pt
add
fdivrs
rcrb
imul
test
mov
insl
inc
rcrb
dec
flds
test
jb
or
pusha
mov
test
insb
int
cs
pop
xor
and
das
mov
mov
sub
push
dec
sub
pop
dec
sbb
movsb
sub
lret
shl
push
sub
xchg
fisubs
cmp
push
xchg
popf
orb
movsb
scas
jecxz
les
pop
push
xchg
bound
sub
inc
hlt
adc
or
add
pop
sub
sub
loope
mov
in
inc
mov
outsl
bnd
inc
out
adc
lcall
mov
stos
jecxz
rcll
in
cmp
add
push
xor
add
addl
xor
and
dec
mov
mov
imul
push
pop
inc
jo
push
pop
dec
movsb
push
or
mov
mov
dec
add
add
lds
movsb
xor
ret
xchg
add
lret
sti
pop
aaa
ret
push
pop
rcrb
adcl
sets
push
lods
or
js
or
inc
cli
xchg
out
push
push
or
jno
cmp
int
cmp
inc
pop
and
inc
jns
jp
add
push
and
mov
sarb
sbb
lods
sub
or
out
dec
push
ret
pop
adc
xor
outsl
stos
ret
cmpsl
add
lcall
test
loope
add
movzwl
add
pop
dec
movsl
loopne
pop
sbb
mov
movsb
shll
fstp
pop
aaa
or
inc
sbb
inc
or
jae
lret
pushl
rcrb
jnp
xchg
push
fisttpl
xor
lods
jns
cmp
jne
sbb
popa
mov
push
cmp
insb
push
jnp
or
adc
jo
cltd
push
push
jp
mov
insl
mov
xor
jno
popf
add
xor
bound
mov
add
mov
mov
sbb
inc
jg
cmpsl
data16
xor
insb
les
or
or
mov
movaps
movsl
imul
or
insl
out
gs
xlat
sbb
push
xor
outsl
or
sarl
rol
push
inc
pop
mov
mov
mov
jb
adc
loopne
repnz
cmpsb
int3
sbb
pop
jle
loopne
nop
repz
in
pop
loope
inc
clc
inc
loop
mov
xchg
sub
inc
ret
add
or
insl
adc
in
and
lcall
les
mov
aam
outsb
inc
clc
xor
jbe
jno
push
mov
mov
pop
pop
movnti
mov
adc
sbb
adc
aam
scas
cmp
and
pop
xor
pushf
pop
add
faddp
push
mov
xor
mov
das
xlat
pop
jo
sub
jae
cltd
insb
xor
arpl
aam
dec
mov
and
ss
push
or
repnz
test
pop
insl
sbb
bound
out
adc
sbb
inc
jmp
cmpsb
outsl
push
pop
add
repnz
lahf
inc
add
sbb
adc
and
pusha
push
lds
cwtl
xor
adc
adc
daa
stos
jno
jecxz
test
pop
popa
add
sub
xchg
sub
loop
jl
es
lods
jb
out
adc
sub
scas
jns
das
mov
sbb
icebp
push
xor
xchg
sbb
rorl
sbb
cli
inc
sub
dec
sub
daa
pop
pop
push
nop
popa
xchg
xor
xor
popf
arpl
xchg
loop
filds
sbb
stos
das
pusha
stos
dec
ds
inc
es
push
mov
sbb
ja
xchg
ss
mov
aaa
hlt
insl
pusha
or
xchg
movsl
pusha
inc
loop
push
dec
adc
cmp
icebp
lea
push
jmp
aaa
add
out
mov
jns
dec
inc
sbbl
mov
sub
cmp
sbb
out
and
add
aad
cmp
inc
push
outsb
sbb
xorb
outsb
pop
push
outsb
xchg
pop
nop
stos
and
or
or
or
ds
jo
jmp
and
mov
and
add
mov
add
insl
xchg
sbb
sarl
out
add
pop
push
or
nop
xchg
add
clc
in
push
pop
mov
push
icebp
add
subb
rcll
inc
mov
jge
fucomip
pop
nop
or
push
push
mov
mov
mov
into
add
aas
movsl
xor
out
push
xor
push
mov
or
ss
scas
jp
int
inc
push
adc
push
and
stos
movsl
push
sbb
enter
jmp
xor
add
and
sbb
enter
adc
je
xchg
dec
dec
mov
das
mov
inc
and
mov
sub
adc
sti
add
ret
xchg
add
sbb
dec
cmp
testl
sub
or
mov
cmpsb
sbb
xor
lds
mov
stos
mov
test
cmp
pop
mov
mov
shr
push
sbb
and
js
mov
inc
inc
or
pop
or
cs
ret
adc
inc
xor
lahf
mov
in
jne
and
or
loope
sub
test
xchg
sbb
adc
inc
dec
mov
jg
aam
inc
in
push
adc
mov
aam
or
pop
in
add
inc
mov
add
fcmovbe
adc
pop
inc
frstor
adc
and
or
sti
push
icebp
jl
jmp
jecxz
aaa
sbb
nop
mov
adc
incl
mov
mov
pusha
and
inc
or
into
inc
push
popa
ss
or
or
mov
cmp
sbbl
outsb
push
adc
fisttpll
dec
xor
inc
mov
je
cs
sbb
dec
mov
mov
and
loopne
add
call
popa
push
mov
xchg
enter
cmpl
stc
or
or
dec
pop
stos
in
mov
push
jae
in
jnp
les
xchg
out
inc
cmp
es
hlt
adc
sbb
je
or
and
or
pop
add
push
jle
jne
sub
out
das
fcomps
mov
push
adc
sub
adc
jg
mov
cmp
int3
rcrb
pop
dec
sbb
test
scas
ss
mov
sbb
add
push
shl
xor
cmp
je
or
adc
push
pop
loop
popa
pop
ret
mov
add
and
mov
insl
fs
icebp
or
into
nop
sahf
imul
jnp
mov
lods
mov
mov
jnp
jbe
sub
sub
or
adcl
add
push
pop
push
push
push
sub
ds
pop
lret
fs
mov
cmpxchg
inc
push
push
fnstcw
out
inc
sbbb
sub
pop
andl
mov
xor
ret
pop
sbb
jecxz
lret
cwtl
pop
mov
testb
inc
jl
xchg
sahf
pop
subb
daa
push
or
inc
stc
jb
inc
xor
and
mov
rclb
outsb
in
sub
setp
pop
aas
push
add
xchg
or
sbb
or
call
and
cltd
into
cmp
call
mov
outsl
aam
pusha
add
das
fnsave
and
das
mov
sbb
or
rorl
lock
mov
pop
xor
iret
push
sub
lea
push
lods
or
add
sbb
sbb
adc
sbb
push
leave
ret
fwait
cs
hlt
inc
add
xchg
adc
mov
add
test
push
roll
mov
cmp
sbb
mov
cwtl
push
fucom
pop
fcoml
fcom
adc
mov
ret
adcl
outsl
es
ret
mov
test
or
fwait
lret
dec
pop
mov
fisubs
jmp
into
test
push
aas
and
addr16
stos
jne
pop
adc
ret
xchg
loop
add
push
and
lahf
fistpl
sarb
fbld
jbe
dec
push
pop
or
or
aam
xchg
or
add
xor
mov
ret
popf
dec
les
cmpsl
xchg
xor
xor
xor
mov
inc
adc
bnd
mov
pop
in
pop
ret
adc
jne
and
sbb
or
clc
xchg
fwait
sbb
cltd
or
add
pop
popf
adc
cmp
pusha
push
pop
mov
xor
in
jb
inc
and
test
jmp
push
jbe
movl
lods
inc
push
ja
inc
movl
call
adc
pop
sti
push
and
add
and
scas
jge
pop
cmp
and
sub
cmp
fiadds
test
push
cmp
fidivl
adc
sbb
push
mov
mov
sbb
or
xchg
lds
adc
adc
loopne
push
cmp
outsl
adc
sub
adc
push
mov
push
rcrb
add
pop
adcl
in
fisttpll
int
mov
pop
in
data16
insb
pop
add
lea
fsubs
data16
mov
sbb
pusha
stos
cmpsb
xor
adc
mov
pop
decl
fstl
sbb
shll
rcrl
mov
jle
push
mov
and
jmp
xchg
xor
jle
vmovddup
adc
cmp
push
cmp
jle
cmp
fisttps
push
cmp
cmp
cmp
mov
mov
and
inc
jmp
repnz
movw
xchg
ljmp
hlt
sahf
cld
les
dec
fwait
inc
or
fs
pop
idiv
xchg
test
rolb
adc
xor
mov
sbb
lods
ficoml
cmpsb
or
bound
cmp
in
jnp
icebp
test
mov
add
test
sub
dec
outsl
call
mov
popa
or
hlt
repz
lea
mov
xorl
arpl
sub
and
aaa
dec
xlat
or
mov
movsl
or
cmp
jb
adc
and
xchg
lret
adc
inc
sub
push
xor
mov
cmp
push
cmp
mov
int
xor
xchg
xor
sarb
mov
add
orb
insl
lock
dec
jb
push
dec
jb
popf
rorl
dec
or
pop
mov
pop
pop
pop
pop
or
roll
or
mov
pop
leave
and
shlb
or
add
dec
and
daa
and
ss
push
push
rclb
insl
or
in
or
jno
jbe
andb
je
mov
add
sarl
xor
pop
mov
pop
adc
adc
mov
dec
xor
pushf
xchg
bound
sbb
arpl
data16
inc
nop
mov
push
sub
rclb
and
xchg
and
or
xchg
shlb
pop
cwtl
push
lcall
rcl
dec
and
dec
add
xchg
popa
and
push
pusha
push
sahf
popa
ret
mov
fs
rcr
jne
push
or
jecxz
rcl
adc
int3
add
inc
subb
ficompl
push
lock
and
sbb
fdivrs
and
sbb
sub
sub
sbbl
test
jg
ss
mov
sbb
stc
adc
in
pop
test
push
outsb
and
xchg
sub
loopne
mov
push
fstl
and
ljmp
push
inc
pop
mov
sub
dec
adc
bound
push
fsub
cmpsl
std
cmp
mov
test
hlt
mov
cmp
push
add
add
orb
je
popf
adc
add
adc
or
orb
leave
adc
and
mov
pop
add
adc
pop
add
or
add
hlt
inc
or
adc
test
mov
xchg
sbb
dec
test
loopne
push
inc
push
shrl
cmp
dec
insb
pop
mov
and
xchg
jge
xor
lret
mov
jo
adc
loope
mov
stc
fwait
inc
repnz
jae
pop
xor
out
stc
add
push
rol
je
mov
sbb
push
mov
mov
pop
push
and
sbb
sbb
push
add
js
add
push
adc
sbb
icebp
or
add
fimuls
enter
jne
lea
add
cmc
add
xor
push
icebp
xchg
fsubl
mov
lock
repnz
shrb
lods
mov
cmpsl
cmpsl
cmp
or
aam
lds
adcl
add
push
stos
das
in
add
sub
lock
enter
fistl
sbb
pop
or
and
or
cmp
or
in
mov
add
ljmp
jbe
lea
mov
add
outsl
add
jp
sbb
add
pop
sub
arpl
addr16
sub
popl
repz
and
sub
shlb
and
pop
add
sbb
sar
inc
push
call
push
fsubs
mov
out
cmp
adc
stos
push
js
lock
aad
pop
push
loopne
adc
pusha
or
pop
les
sbb
in
aad
mov
push
popa
stos
out
ret
cmp
jne
stc
push
insl
lea
ret
adc
into
push
popa
xchg
mov
subl
add
adc
pop
xlat
and
fildl
lea
cltd
xchg
xor
loopne
adc
inc
push
icebp
pop
adc
daa
fadds
sub
xor
enter
add
repz
pop
clc
or
push
xchg
dec
add
push
adc
dec
cmp
stos
loopne
pop
pop
adc
test
add
push
imul
or
adc
xor
notl
out
je
adc
aaa
inc
xchg
inc
push
fdivl
mov
add
mov
loop
mov
inc
and
push
pop
fldcw
and
shl
add
sub
inc
add
inc
inc
jl
dec
loop
test
xchg
testl
sub
das
add
push
mov
inc
push
ss
inc
inc
push
std
ret
out
and
popf
push
mov
xor
mov
aaa
je
mov
out
sarb
add
jge
js
jne
sub
insb
movsb
pop
inc
sbb
or
xchg
movsl
sub
push
dec
call
mov
dec
fldl
loopne
les
clc
inc
fidivl
enter
movl
pop
push
push
fldl
push
sbb
mov
add
fstpl
and
fsubrl
in
mov
fstpl
xor
pop
cmc
decb
fbstp
mov
jo
jnp
xchg
add
and
add
dec
clc
loope
fsubrp
pop
aaa
push
cmp
push
inc
repz
insb
jns
repnz
sbb
mov
in
ret
jb
dec
ss
test
iret
and
cwtl
jbe
mov
dec
add
dec
pop
ss
lods
outsb
testb
or
xor
fwait
scas
aam
nop
mov
ss
sub
adc
or
shll
jbe
imul
mov
jge
or
neg
subb
clc
add
test
pop
loop
pusha
pop
xor
insl
dec
mov
popa
bound
popa
movsl
jo
xorb
shrb
add
jnp
ja
and
lock
mov
js
bound
fcmove
ret
and
dec
pop
push
rcrb
sbb
jp
add
add
push
pop
cltd
push
pop
fnsave
jnp
sbb
add
or
add
ret
push
daa
and
mov
jb
pop
add
leave
shld
add
ja
jb
clc
lahf
add
ss
push
inc
mov
push
add
push
je
lods
roll
or
add
mov
std
ds
leave
adc
mov
push
adc
push
push
pusha
pop
addb
int3
or
or
cli
adc
push
push
push
fiaddl
dec
pop
pop
dec
leave
adc
dec
arpl
dec
pushf
push
mov
fmuls
dec
push
sub
cmp
mov
shlb
shlb
push
testb
notb
add
adc
sub
pusha
call
sbb
sub
dec
inc
cmpw
jne
mov
cld
mov
adc
inc
inc
cld
cmp
sti
mov
jmp
push
push
jl
mov
mov
aad
repnz
cmp
or
push
loopne
enter
push
cld
mov
push
push
push
clc
jmp
push
push
pop
in
jnp
mov
xor
xlat
int
mov
push
orb
inc
xor
jb
roll
sbb
ds
mov
ret
lcall
add
sbb
insb
aaa
jle
sbb
inc
add
cmp
sbb
mull
jnp
fwait
jp
std
and
je
mov
add
enter
jbe
xchg
ja
xor
movsl
adc
push
movsl
jnp
fld
sub
cmp
loopne
cld
rcll
pop
js
sbb
fxch
pop
movsl
sahf
pusha
adc
dec
adc
test
pop
pop
and
xor
pushf
shr
jmp
push
or
movsb
std
mov
test
pop
xchg
xchg
lock
xor
movsb
xchg
pop
nop
in
aaa
mov
pop
sub
rcrl
pop
js
test
or
rolb
pushf
stc
es
push
test
mov
lret
xchg
add
lock
pop
xlat
andl
add
inc
sarb
push
add
push
lods
mov
adc
pop
sbbl
fisubl
pop
je
arpl
ds
fwait
pop
ret
pop
add
dec
cmpsb
add
aam
mov
ja
jne
nop
xchg
sbb
cmp
push
rclb
xor
push
xor
or
jno
aaa
fwait
repnz
mov
xchg
xor
int
fs
ret
test
mov
jb
xchg
push
ja
in
or
and
mov
sbb
pop
fidivl
xor
sbb
fstpt
pop
sbb
cmc
loopne
repnz
cmpsb
repz
in
push
je
imul
or
test
pushl
sbb
add
jecxz
push
rep
nop
push
int3
test
add
movsl
push
sbb
or
loopne
subl
push
jo
hlt
dec
push
sbb
mov
adc
pop
movsl
pop
aam
int
orb
loopne
cli
movsl
psrad
aas
icebp
xor
movsb
ret
mov
or
std
push
lods
inc
pop
rclb
test
push
ja
xor
add
mov
push
jmp
pusha
jmp
jno
outsb
daa
mov
jge
ljmp
icebp
and
xor
out
jle
inc
mov
fs
add
add
sub
jg
je
dec
je
add
sbb
dec
jne
dec
mov
push
push
in
push
xchg
or
dec
pushf
or
jge
cmpsb
push
push
sarl
or
mov
sub
push
test
in
mov
push
xchg
out
cmp
jnp
cmpl
mov
inc
mov
cmp
hlt
push
push
push
in
inc
push
andb
adc
push
cmp
nop
fs
enter
leave
inc
or
push
pop
push
push
stos
mov
out
sub
push
adc
fs
xchg
or
nop
inc
push
cmp
xchg
inc
push
cmp
lods
enter
xor
or
dec
fs
enter
sarb
xchg
call
inc
push
cmp
subb
lock
and
mov
call
fs
xlat
insb
loope
jmp
decl
gs
repz
adc
cmp
repz
pop
orl
mov
iret
repz
rcr
out
sti
add
nopw
sub
jns
dec
push
pop
imul
jge
fwait
xchg
sbb
stos
jo
inc
aaa
push
pop
aam
call
imul
xchg
shl
lret
ret
dec
dec
lock
mov
and
pushf
xor
nop
sti
fwait
ret
dec
je
xchg
int3
repz
cmpl
pop
int3
hlt
fisubs
rol
jno
or
xchg
xorb
mov
aam
fwait
jmp
jl
mov
shrb
lcall
test
es
push
and
out
fcompl
test
test
mov
fmull
fisttpll
add
lods
pop
faddl
dec
or
push
mov
pop
movsb
and
xor
sbb
loope
int
sbb
in
fs
test
adc
mov
test
and
mov
adc
pop
roll
sbb
mov
dec
mov
cmp
cmp
cmpb
jge
jge
movsb
pop
push
cmp
push
push
hlt
cmpsl
sub
shl
add
dec
out
dec
mov
adc
fcompl
xchg
fistpll
mov
shll
sub
ja
or
and
insl
xchg
lea
daa
jns
or
push
xchg
je
push
add
cmovnp
enter
add
cmp
sarb
sub
adc
cltd
fadds
shrb
pop
dec
cmpsb
cwtl
nop
xchg
adc
rclb
or
mov
pop
jnp
cmp
or
mov
orl
test
cmp
cmp
xlat
pop
push
adc
imul
mov
jge
cmpb
or
mov
xchg
pusha
mov
pop
xchg
mov
push
inc
xchg
and
stos
pop
enter
out
in
mov
mov
mov
pop
adc
xor
jp
rcll
hlt
adc
mov
push
lea
fildl
push
mov
dec
leave
sub
int3
mov
mov
dec
mov
mov
add
cmp
mov
add
icebp
push
dec
jp
jmp
fisttpl
fidivl
imul
cwtl
fwait
dec
mov
out
cmpsb
xor
push
cmp
push
and
cmp
push
das
mov
fisubrs
insb
push
pop
jl
rcrb
jp
mov
cmpsb
and
mov
dec
inc
mov
insb
mov
push
jle
icebp
xor
es
and
mov
xor
sbb
dec
lcall
dec
lcall
dec
lcall
dec
lcall
ss
sbb
add
popa
mov
add
popf
mov
test
jl
mov
hlt
stos
mov
test
into
mov
addl
push
insb
xlat
incb
mov
mov
sbb
repz
sbbl
cmpsl
cmp
enter
or
push
pop
ret
in
vmread
ljmp
pop
decb
loopne
rolb
imul
mov
sbb
gs
add
fs
stos
ror
sbb
in
push
cltd
sbb
and
mov
mov
or
dec
jns
sbb
js
lea
inc
rcrb
sub
sbbl
sbb
es
test
xor
test
and
jge
or
xor
addl
cmp
inc
mov
push
mov
cmp
pop
push
mov
cmpsl
mov
mov
mov
xchg
push
xchg
sahf
xor
rcrl
xchg
sbb
add
popf
pop
rorl
mov
lea
test
rorl
pop
test
adc
sub
cmp
int3
lods
addr16
xchg
cmp
mov
sub
xor
movsb
jo
jp
aas
push
adc
inc
test
es
imul
es
and
bound
in
aaa
loope
orl
dec
enter
ss
push
cmp
nop
adc
push
sbb
push
inc
or
pop
sbb
inc
and
ret
inc
mov
in
adc
sbb
push
push
outsl
into
ret
sub
xchg
jo
scas
movsb
adc
add
jno
pusha
and
inc
inc
mov
dec
pop
pop
mov
test
and
xlat
shlb
inc
adc
lock
adc
outsl
mov
jmp
push
sub
ljmp
stos
mov
in
sub
mov
dec
fcoml
movsb
mov
dec
dec
popf
and
and
and
push
cmp
pop
sbb
push
mov
test
sbb
iret
ja
lods
mov
lret
and
movsl
shlb
sbb
pop
sub
test
jne
or
pusha
mov
xor
clc
test
push
popa
or
mov
sbb
xor
push
nop
pop
and
or
xor
mov
fimull
aam
or
xor
and
jl
sbb
and
add
loop
call
imul
pusha
nop
sbb
push
and
push
xchg
ret
push
arpl
push
in
in
mov
jne
inc
aas
jo
and
mov
or
cltd
outsb
dec
repnz
mov
cmp
mov
js
gs
jl
add
enter
scas
jne
test
or
dec
sahf
inc
sahf
nop
push
call
lcall
dec
sahf
fsubl
adc
adc
inc
repz
or
add
xor
add
and
pop
mov
jns
adc
push
inc
test
adc
push
mov
pop
push
enter
fidivl
sbb
mov
in
push
adc
int
negl
lods
fwait
push
mov
scas
pop
xchg
lods
sbb
test
mov
pop
imul
enter
push
mov
imul
cltd
nop
data16
mov
mov
and
mov
orb
ret
adc
imul
inc
cmp
mov
nop
dec
dec
fs
pop
cmp
mov
inc
test
sbb
nop
adc
push
outsl
inc
sbb
cwtl
xor
int
pop
pop
push
inc
popa
sub
pop
int3
adcl
inc
mov
addr16
dec
adc
adc
mov
movsb
pushf
xchg
pusha
nop
jno
mov
lods
shlb
test
out
mov
and
je
movsb
cltd
or
add
or
pop
sbb
leave
inc
sbb
popa
push
fwait
popa
xor
xor
or
sbb
and
les
inc
pop
lret
xor
pop
inc
mov
addb
inc
xor
loopne
outsl
imul
or
push
rorl
repnz
test
push
and
cld
icebp
sbb
inc
xor
jo
out
adc
dec
cs
roll
sub
sbb
jge
faddl
add
mov
or
lahf
movb
lods
add
mov
shlb
cmpb
adc
outsl
or
aad
sub
sbb
divl
adc
sub
inc
or
push
mov
or
data16
sbb
adc
mov
or
imul
mov
test
jle
sbb
setb
inc
icebp
push
popf
sub
push
mov
xor
loop
mov
dec
sub
pop
fmuls
xor
leave
push
mov
ret
cmp
fdivrl
and
push
mov
arpl
inc
ret
loope
mov
mov
adc
enter
adc
mov
inc
pop
dec
repnz
sub
mov
mov
or
rcrl
aam
sbb
fstpl
or
fs
fiaddl
imul
pushl
in
popa
add
push
xchg
mov
xchg
cltd
aaa
cmpsl
xor
jl
ror
mov
sahf
jge
pop
dec
xchg
orb
nop
pop
and
fwait
and
mov
adc
and
push
sub
test
and
and
movsl
pop
and
jl
andl
sub
push
pop
es
sub
pop
daa
push
fs
sub
mov
sub
and
lods
enter
xor
pop
insb
sub
dec
dec
movsl
pushf
shrb
dec
movsl
pop
loopne,pn
dec
cmp
mov
lea
mov
in
dec
dec
xlat
addb
and
je
dec
pop
adc
insb
mov
notb
clc
pop
inc
push
cs
or
popa
xor
fisttpll
loop
dec
popf
das
cmp
rorl
or
shlb
inc
lcall
movsb
cltd
sub
or
mov
movsb
cltd
nop
fs
push
and
movsb
cltd
nop
and
lcall
mov
pop
cwtl
push
or
movsb
nop
sbb
sbbb
sbb
xor
shlb
sbb
mov
int
sbb
pop
mov
dec
dec
rclb
movsb
loop
sbb
sahf
cmp
adc
rorb
mov
rcr
push
js
in
orl
add
les
andb
stos
pop
shll
mov
aaa
gs
xor
cld
rcl
int3
movsb
adc
icebp
fdivrs
sbbb
jle
cmp
or
and
bndstx
dec
cwtl
mov
jns
push
imulb
pop
jecxz
repnz
pop
and
scas
aam
xor
shll
sbb
pop
or
and
pop
jg
test
cmp
xor
fimull
and
push
jmp
xchg
cmp
cmpsb
adc
sub
and
sub
inc
inc
fnstenv
cmovns
ret
ss
dec
inc
and
pop
mov
inc
cmp
popf
mov
push
inc
or
cmp
shlb
cmc
xchg
pusha
jl
mov
push
movsl
daa
xchg
lock
decb
call
jae
cmp
lcall
cmp
adc
inc
dec
test
cmp
rcrl
stos
add
popf
ljmp
push
jo
fs
add
test
repz
lods
imul
outsb
addr16
mov
movsl
ja
test
cmp
sub
test
aam
mov
std
add
addr16
jmp
in
add
mov
stc
aad
mov
ror
pop
lret
mov
add
jl
fidivrs
test
arpl
pop
inc
adc
mov
je
inc
xor
repnz
cmp
inc
andl
sub
push
cmp
cmp
outsl
sarl
push
push
clc
or
push
jbe
add
sub
ret
or
call
xchg
mov
mov
lcall
jb
adc
and
xor
pushf
lea
and
inc
cmp
loopne
cmp
sbb
push
lock
jbe
mov
xchg
cmp
jne
inc
add
mov
jl,pt
dec
lods
or
push
addb
mov
mov
test
push
or
iret
jne
mov
sub
add
pop
shl
cmp
jae
inc
adc
cmp
loopne
sub
call
jmp
rorl
add
or
scas
in
cmpsb
adc
mov
ret
adc
inc
and
test
jecxz
inc
add
sbb
adc
daa
inc
add
dec
jnp
roll
xchg
mov
mov
or
jne
mov
xlat
aad
pop
inc
js
dec
or
ds
jne
call
mov
push
loopne
sbb
imul
adc
rcll
add
in
ds
pop
adc
lret
jo
sbb
push
sbb
and
mov
add
dec
pop
inc
jbe
xchg
pop
push
jo
jl
sbb
cmpsb
sbb
sub
fmuls
xchg
data16
daa
ret
xchg
sbb
pop
push
jmp
shl
adc
inc
enter
imul
xchg
jae
sti
decl
add
ds
jl
or
je
adc
jg
je
mov
inc
jmp
movzbl
movb
movsbl
shr
mov
aaa
pop
mov
and
mov
nop
inc
mov
addl
xchg
clc
mov
test
jo
cmp
pop
cltd
ret
inc
pop
nop
bound
mov
mov
loop
cmp
test
push
mov
hlt
pop
adc
fiadds
pop
dec
push
mov
jnp
adc
shrb
lods
rorl
orl
in
mov
push
xor
outsb
inc
ss
add
mov
pop
cmc
ss
mov
sbb
xchg
lock
pop
addb
cmpb
je
dec
fisttps
in
add
in
push
mov
pushf
inc
lret
popl
wbinvd
jae
xchg
inc
pop
pop
cmp
sbb
fadds
xor
adc
jne
stos
lret
pusha
push
jnp
push
add
enter
je
cmp
cmp
addr16
dec
and
jecxz
outsl
loop
add
mov
sbb
mov
push
mov
mov
add
sbb
data16
xlat
fildll
outsl
test
ficomps
testb
pop
jp
inc
xchg
imul
inc
mov
jbe
xor
jno
xchg
dec
arpl
int3
push
dec
loopne
rorb
mov
flds
loopne
xor
sub
dec
imul
nop
sbb
sbb
mov
loope
push
push
dec
push
xor
bnd
jne
out
scas
mov
cmp
or
adc
popf
xchg
aad
orb
fistpll
ret
pop
lock
xchg
rolb
pop
add
pop
sbb
sub
or
jg
outsl
sub
jle
dec
sub
mov
xor
xor
cli
call
sbb
mov
xor
and
jmp
cmp
add
lret
xor
mov
sbb
flds
xor
fs
ss
loop
mov
dec
add
dec
loope
xchg
jl
cmp
lea
cmp
add
pusha
adc
xchg
roll
in
insl
orb
pop
clc
fnstenv
inc
mov
pop
popl
sub
dec
pop
dec
sub
or
nop
lods
dec
add
sbb
test
xchg
sbbb
leave
cmp
adc
jbe
sub
sbb
fadds
sbb
aad
xchg
sar
test
inc
mov
or
add
aam
inc
mov
out
mov
sub
cmp
inc
gs
sub
or
sbb
dec
add
pop
loope
sbb
jbe
test
fcomps
cmp
aas
cvtdq2ps
xorb
shrb
movsb
es
adc
pop
stos
fstpt
jecxz
cwtl
cli
jne
dec
mov
xchg
or
fmuls
xchg
cld
or
xchg
test
inc
rol
xchg
fldl
out
out
out
pop
push
test
fistps
lea
aaa
xchg
and
jle
cmc
xchg
jno
in
movsl
adc
sub
loope
dec
add
out
dec
pop
jl
or
addl
fcoms
adc
andb
dec
fmull
and
sub
cmp
rorb
dec
in
popa
fmuls
inc
dec
hlt
push
inc
sbb
add
add
and
stos
add
nop
add
fsub
or
cmc
inc
movsl
js
fstpt
mov
pop
stos
int3
enter
lock
sbb
cmp
lea
sarl
xchg
int3
repz
roll
mov
aaa
add
add
dec
push
add
and
cltd
or
add
or
bound
fistl
clc
jge
nop
test
adc
cmp
andb
sbb
sbb
xor
add
cmp
dec
xor
or
push
jne
pusha
push
jmp
inc
push
stos
add
and
dec
loopne
mov
mov
cmp
cmpsl
je
stos
mov
aas
pop
aaa
push
enter
push
rorb
cmp
notl
push
sub
and
add
jns
inc
sub
mov
cmp
enter
je
push
les
push
adcl
sub
call
adc
shl
shrb
in
mov
inc
or
in
loopne
add
or
test
push
add
sarb
mov
jmp
add
aam
dec
xor
sub
test
clc
loope
add
je
in
dec
add
sbb
xor
dec
adc
fistps
sub
cli
mov
xor
jne
je
mov
jbe
sarb
sarl
out
test
js
out
xlat
sub
sti
clc
jne
mov
adc
push
fadds
adc
cmpsb
xor
fsubs
adc
mov
sbb
jmp
cmpl
dec
adcl
enter
nop
rolb
add
push
enter
xor
mov
xor
xor
rclb
nopl
ds
notb
lea
dec
je
in
cmp
inc
jne
nop
sub
imul
pop
fsubrs
add
push
dec
xchg
add
cmp
daa
cmp
mov
or
scas
dec
shrb
xor
or
dec
popf
shll
xchg
call
rdtsc
xor
enter
fst
loopne
sbb
mov
xor
lods
bnd
or
aad
or
lret
clc
inc
das
je
aad
xchg
mov
dec
lea
lea
jns
jnp
and
into
outsl
das
mov
push
sahf
fcompl
lcall
cs
idivl
cmp
test
jne
es
pop
mov
pusha
clc
jb
jne
jno
ret
jle
add
mov
sbb
or
add
dec
or
dec
subl
lret
pop
sub
push
push
andb
cmp
sub
mov
addr16
sbb
icebp
mov
lea
jmp
call
add
rclb
mov
adc
in
decl
cli
mov
push
js
push
cmp
dec
mov
cmp
jle
test
arpl
pop
les
sahf
mov
enter
pop
pop
inc
add
inc
or
xchg
mul
cmp
push
xor
pop
jecxz
or
add
seta
movl
pop
out
jl
jle
mov
pop
jecxz
in
ret
ret
pop
pop
adc
mov
xor
stos
jo
fists
add
dec
je
int
pop
pop
push
fldl
hlt
dec
es
mov
fildl
hlt
cmp
adc
jne
out
jns
daa
bnd
adc
hlt
jne
or
sbb
out
jne
or
push
mov
sbb
xor
popa
subb
mov
and
mov
aad
loopne
adc
inc
sbb
add
popa
imul
xchg
adc
clc
int
inc
cld
mov
push
jl
mov
lea
fstpl
mov
dec
hlt
pop
lea
add
es
mov
sti
push
lcall
push
aaa
aam
sub
daa
mov
xchg
xchg
stc
sub
sub
shrb
hlt
int3
jae
mov
jnp
xlat
or
cmc
int3
dec
dec
sbb
lea
mov
pop
aas
or
clc
adc
in
les
or
add
sub
fdivr
add
shrb
loopne
data16
jb
adc
mov
add
jl
pop
mov
cli
and
shrl
imul
ss
xor
mov
inc
loopne
or
sbb
add
lea
adc
xchg
insl
mov
movsl
pop
call
jne
jmp
orl
dec
popa
cmp
pusha
pop
enter
xchg
test
in
sbb
mov
fs
insb
push
fs
push
jne
iret
push
repnz
xor
adc
and
pushl
pop
add
icebp
sub
out
mov
fsubp
xchg
xchg
mov
jo
js
scas
mov
jg
data16
js
data16
jae
mov
mov
loopne
or
fmuls
or
fldl
ror
inc
sbbb
pop
sbb
sbb
inc
test
lods
xchg
or
shlb
test
sarb
sahf
and
sub
or
push
enter
outsb
jmp
push
or
jb
clc
nop
adc
xor
mov
push
mov
rcr
inc
sbb
xor
lods
or
lcall
data16
and
imul
push
xchg
movsb
push
loope
mov
cmp
imul
insb
orl
mov
jnp
pop
cmp
push
in
push
adc
push
cmp
ret
bound
xorl
pop
sbb
fildll
cld
adc
dec
test
bound
mov
pushf
mov
or
add
pop
jns
pop
ret
dec
xorl
out
inc
xor
mov
test
pop
jnp
das
adcb
sbb
xor
int
push
dec
ror
inc
out
pop
fs
sbb
cmp
sbb
xchg
inc
adc
mov
mov
pop
inc
adc
push
sbb
loope
leave
and
lds
sub
xor
adc
push
sub
and
scas
xchg
pop
xor
push
sbb
lcall
and
daa
adc
inc
push
inc
and
sbb
sbb
mov
adc
pop
cmp
dec
pop
movb
lods
mov
and
inc
arpl
and
cmpsl
daa
and
add
fiadds
aaa
cmp
enter
push
lea
ret
das
add
push
dec
imul
mov
mov
inc
push
push
mov
je
inc
lcall
lods
inc
dec
arpl
xchg
pop
xor
dec
push
out
sbb
imul
rcl
push
mov
inc
inc
add
jo
shl
shll
or
mov
js
xor
and
js
inc
scas
jae
jg
dec
cld
jae
je
push
xchg
xor
mov
lea
mov
xchg
inc
mov
push
fmul
loopne
into
xchg
ds
sbb
adc
cld
inc
jns
js
adc
negb
adc
mov
test
leave
mov
push
or
or
test
sub
out
sub
add
adc
xchg
jge
repnz
hlt
fld1
mov
push
shrb
popf
cmp
add
rorb
xchg
mov
adcl
jne
jno
in
adcl
pop
loope
mulps
pop
inc
rorb
arpl
addl
fbstp
test
es
jecxz
inc
pop
mov
mov
pop
push
lock
inc
add
fmull
test
pop
inc
std
xor
sbb
and
cld
sbb
pop
popa
mov
roll
idivl
mov
sbb
dec
inc
fcomp
push
lcall
dec
adc
fisttpll
mul
pop
pcmpeqd
rolb
mov
rcrl
sbb
cmp
dec
jnp
out
sub
xchg
add
aaa
push
rorb
dec
sbb
orb
int
fs
aaa
mov
test
addl
push
xchg
sub
jne
pop
adc
iret
shrb
or
mov
push
jne
mov
incl
mov
jle
xor
int3
pop
cmp
imul
pop
pop
lock
xor
and
push
pop
lret
adc
lret
inc
cmpsb
pop
add
daa
fcoml
and
mov
and
jne
ja
xchg
adc
xorb
out
and
or
cld
ja
inc
je
push
ret
je
adc
insl
cmpsb
fisubl
stos
cmp
add
jle
addb
or
sub
adcb
xchg
mov
jecxz
sbb
out
push
pop
add
cmpsb
or
inc
jecxz
test
aam
add
loope
push
add
jbe
sub
mov
and
bndstx
cmc
mov
das
cltd
pop
jmp
out
je
je
lods
xor
call
adc
fisubrl
mov
xor
rcll
inc
sub
xchg
jne
inc
popa
sub
push
fnsave
inc
or
or
and
or
xlat
shr
xchg
mov
mov
lods
adc
xor
push
jno
arpl
aam
xor
xchg
shrb
test
pop
aad
inc
std
push
sub
mov
or
mov
sbb
popf
add
adc
mov
add
pop
mov
sub
adc
mov
pop
inc
or
es
push
or
dec
aad
xchg
fiadds
sub
or
fnstsw
add
push
mov
and
lret
mov
pop
adc
ds
cmp
in
add
lret
test
aaa
and
lea
and
sarb
dec
xchg
jno
push
push
popa
mov
ret
fisubl
js
push
je
movsl
ja
mov
fisttpl
xor
cmp
je
or
and
jb
rolb
sbb
sete
mov
clc
adc
int3
push
cmpb
ret
mov
jne
jae
movsbl
mov
add
sbb
mov
add
sbb
aaa
sbb
pop
jmp
enter
incl
jg
lea
and
dec
inc
sub
dec
jmp
shl
mov
incl
or
add
inc
cmp
jl
cmpl
test
scas
xor
cltd
and
add
sar
add
xor
xchg
adc
clc
jl
jae
xor
ss
cmp
jecxz
ds
add
jne
enter
cli
lret
shr
xor
mov
mov
dec
jne
add
mov
xchg
or
scas
cmp
lods
cmpsl
mov
add
push
mov
inc
lret
ljmp
jbe
enter
jo
shld
lea
jmp
sub
inc
adc
roll
push
and
idivb
cs
push
inc
ljmp
cs
jle
insb
aas
mov
fcmovnb
pop
pop
pop
mov
test
addr16
testl
add
dec
jne
imul
enter
test
loope
rcl
cmp
pop
aam
repnz
xor
repnz
add
movsb
dec
push
ret
or
inc
adc
notb
dec
mov
movsl
fs
es
dec
orb
sub
or
adc
or
movsl
mov
scas
ficompl
sbb
push
cmpsl
push
xor
in
push
xor
pop
or
andl
leave
or
repnz
in
sbb
fs
add
sbb
loop
pop
repnz
sub
and
add
push
sub
bound
mov
sahf
jecxz
lock
pop
push
jmp
imul
pop
mov
cs
or
inc
or
lods
cmp
lods
jmp
fmull
mov
in
pop
add
jmp
push
in
nop
in
add
in
dec
dec
add
call
les
pop
add
push
sbb
dec
mov
and
xchg
sub
loopne
dec
jnp,pn
inc
pop
call
sbb
pop
pop
mov
cmp
xchg
adc
lds
ss
jns
lret
jg
push
jnp
cmpsl
add
lds
fldcw
out
push
and
inc
ds
sub
push
jmp
add
mov
add
in
insl
mov
and
shl
shl
dec
je
push
pushl
scas
inc
pusha
xor
push
push
mov
fwait
cmp
mov
cmpsl
xor
jnp
mov
fistl
in
in
cmpsb
mov
adcb
loopne
and
lcall
pusha
mov
push
inc
mov
xor
nop
test
rorb
dec
or
rolb
push
dec
push
xchg
inc
ret
out
mov
mov
test
mov
add
int3
dec
bound
xchg
scas
pop
mov
loop
mov
mov
rolb
or
xchg
sbb
xlat
push
shll
adc
aad
lret
mov
ret
add
jno
in
ss
mov
push
pop
aam
jle
lcall
shrl
push
std
jne
loop
sbb
or
aaa
mov
daa
adc
add
mov
sub
jmp
cmp
sbb
ret
xchg
pop
mov
fwait
adc
add
add
int3
pop
mov
dec
int3
add
fwait
cmp
add
sti
icebp
aas
push
pop
cmp
mov
mov
jecxz
pop
lock
je
dec
fdivr
adc
cmpsl
call
out
pop
roll
das
rcl
adc
bound
sti
push
bound
xor
and
sbb
in
mov
mov
pop
mov
test
gs
mov
sub
iret
xchg
cmc
mov
xor
xchg
and
adcb
sbb
dec
aam
add
insb
and
mov
testb
cmp
jl
cwtl
loopne
fdivrl
pop
jge
inc
call
add
xor
mov
sbb
mov
push
daa
movsbl
add
sbb
insb
call
cli
or
scas
push
decl
mov
aas
inc
test
mov
sbb
test
sbb
lret
movb
mov
push
test
repnz
or
add
sbb
shlb
cmp
dec
cmp
mov
xchg
mov
repz
xchg
je
dec
push
roll
jg
inc
and
test
add
test
aaa
cli
test
aas
cld
les
jp
jmp
xor
lock
mov
js
jge
mov
sub
test
adc
add
cmc
add
enter
mov
sbb
inc
mov
lret
sbb
call
mov
rcrb
cmp
je
pop
int
add
fcos
mov
pop
sbb
or
xchg
mov
xlat
std
lock
mov
loopne
loopne
or
cmp
mov
adc
das
xchg
nop
imul
mov
or
add
jle
jl
hlt
mov
inc
push
dec
mov
mov
mov
push
xor
adc
add
movzbl
mov
roll
sbb
js
jl
dec
cmp
addl
insb
ljmp
iret
push
std
scas
mov
incb
mov
add
out
pop
or
mov
nop
bound
nop
add
or
jmp
pushl
xor
mov
inc
call
jne
pop
push
stc
icebp
and
stc
lret
pop
fwait
jb
sub
pop
ljmp
add
inc
mov
xor
mov
sbb
cmp
and
test
arpl
or
push
adc
test
add
in
test
in
icebp
jae
mov
sub
insb
xchg
sub
cmpsb
ds
inc
cmp
adc
inc
in
jecxz
adc
push
enter
popa
aas
and
ja
pushf
jne
call
lret
push
scas
fadd
pop
clc
and
mov
and
push
popa
imul
push
rorl
loopne
xor
adc
xor
in
lods
das
mov
jae
push
inc
mov
and
adc
add
jno
or
mov
and
fadds
add
cmpl
push
shrl
cmp
in
lds
mov
push
jns
add
xchg
mov
xor
shll
lcall
cwtl
pusha
aaa
sbb
mov
stc
sub
ss
rcr
lret
lea
enter
iret
jbe
xchg
aad
mov
jbe
mov
inc
xor
add
ret
imul
and
insl
mov
pop
pop
mov
mov
das
push
cli
sbb
adc
mov
lea
mov
sbb
test
jno
ret
or
cmp
ja
jp
push
add
lea
imul
push
call
push
push
pop
pusha
cmp
push
jmp
cmpsb
or
and
push
test
sbb
adc
mov
jmp
ret
and
enter
inc
int
cltd
jbe
add
xchg
jne
fldcw
inc
or
pop
sbb
push
fcmovnb
call
push
js
push
call
xchg
xchg
cmpsl
mov
lcall
or
sub
pushf
popa
xor
push
cmp
dec
ds
xchg
in
cmp
push
std
pop
adc
inc
cmpsb
mov
fists
add
rorl
or
int
mov
test
out
nop
pop
fcomps
mov
add
inc
fwait
or
jb
movsl
sub
addr16
add
movb
adc
jnp
cmp
int3
sbb
xchg
pop
movsb
notl
cmp
inc
sbb
inc
adc
adc
cs
sbb
and
loope
jp
insb
jae
add
mov
add
and
nop
adc
stos
sub
movsb
fsubrp
jecxz
mov
int3
loopne
mov
pop
shrl
cmc
sub
out
test
subb
xor
iret
pop
add
mov
inc
or
push
mov
shrb
inc
nop
pop
push
adcb
pop
xor
in
adc
fmull
mov
adcl
cmp
sbb
mov
loope
mov
adc
loopne
insl
cmpsb
cld
and
dec
sti
cmp
dec
mov
mov
push
je
sbb
call
add
jnp
test
data16
scas
add
push
aam
push
and
inc
loope
shrb
sbb
adc
jno
cmp
test
out
lock
outsl
fdivl
mov
je
inc
pavgw
hlt
nop
mov
dec
add
cmp
in
push
test
jl
mov
mov
mov
xchg
movsl
shlb
out
jg
cmp
mov
jge
loope
jp
push
push
dec
fwait
movl
aas
push
stc
xchg
rolb
or
cmp
rorb
in
faddl
js
pop
fdivl
test
inc
add
push
or
testb
in
or
sub
add
cmpsl
int3
sarb
mov
adc
xchg
mov
test
mov
lcall
add
add
test
sti
addr16
inc
ljmp
and
into
and
push
lcall
popf
dec
lea
pop
jns
out
int3
test
inc
or
jmp
sub
loopne
lcall
inc
loopne
rcrl
and
add
enter
inc
aad
dec
jmp
ja
pusha
fs
dec
jmp
push
dec
mov
adc
inc
scas
push
imul
sbb
movsl
sarb
xor
push
push
cmc
and
out
mov
dec
add
xchg
jne
xor
popa
aad
push
sbb
psrlq
into
mov
push
pushl
mov
dec
cmp
jle
pop
cmp
jbe
out
xor
ljmp
jmp
push
pop
push
sbb
mov
pop
cmp
add
sub
adc
mov
nop
cmpsl
or
push
mov
data16
std
mov
xor
sbb
pop
clc
jne
mov
push
cmp
adc
shrb
gs
jmp
pop
mov
leave
xchg
movsl
xchg
addb
test
rclb
xor
fcomp
cmp
jmp
push
imul
dec
ss
and
adc
push
call
cmp
sbb
and
and
add
add
fwait
jno
and
call
xchg
popf
mov
jns
pop
es
add
mov
testl
cmp
jae
inc
jmp
stos
mov
cmp
and
enter
lock
testl
xor
shrb
loopne
subl
bound
fisttpl
rcrl
pop
mov
mov
xchg
stos
push
sarb
push
pop
adc
xchg
mov
cmp
add
andl
sub
xchg
jge
fs
xor
add
xchg
and
add
insb
dec
cvttps2pi
sub
call
out
mov
xor
sbb
inc
testl
jae
in
pusha
inc
shlb
mov
jmp
sti
xor
icebp
into
mov
es
adc
xchg
pop
sub
iret
andb
mov
and
mov
sbb
ds
pop
jne
or
pushf
adc
xor
test
push
push
jo
mov
loope
adc
mov
insl
push
cs
shrb
sub
xchg
lock
adc
push
cs
or
adcb
push
fimuls
mov
xchg
sub
sahf
add
sub
cmpsb
dec
xor
xchg
push
push
or
lahf
movsl
jae
aaa
and
and
sbb
stos
or
rcll
mov
xchg
mov
shrb
mov
lea
sbbb
sbb
or
add
cmp
sub
or
rorb
dec
testl
mov
popa
push
or
push
push
xchg
imul
jno
push
xchg
dec
pop
sbb
lds
add
fstl
sbb
mov
or
and
jnp
mov
xor
dec
or
mov
jne
cmp
test
test
or
les
into
mov
push
daa
call
lahf
fistl
sarl
lea
or
jb
adc
mov
xchg
aam
fcompl
or
push
gs
aam
xchg
xchg
in
sub
in
ret
ret
mov
in
ret
ret
sbb
rcr
sbb
cmpsb
push
sbb
outsb
popa
mov
insb
cmp
pop
jp
xchg
mov
stos
cmp
loope
jo
jb
sub
add
or
mov
sub
adc
cs
inc
mov
lock
sub
mov
aaa
or
or
ror
shll
sbb
shlb
mov
pushl
or
jl
push
inc
push
push
je
xchg
add
xchg
adc
fcoml
and
aam
jle
fsubrl
popa
das
jmp
pop
jecxz
sub
pop
fsubrl
call
mov
adcb
mov
xchg
repnz
mov
cwtl
mov
les
xchg
or
fisttpl
iret
movsb
dec
cli
xor
stos
nop
lock
pop
movsb
das
cld
dec
cmp
mov
push
stos
or
jl
cwtl
cmp
dec
adc
pusha
outsb
mov
imul
insb
lock
push
cmp
jb
cmp
xchg
cmpsl
popf
push
adc
cmp
lcall
jnp
dec
lods
push
push
dec
je
add
push
lock
je
insl
pop
mov
stos
or
adc
cmpsl
push
inc
adc
add
mov
movb
je
mov
imul
in
xor
sti
mov
filds
or
mov
cmp
repz
fists
cmp
je
cmp
jne
mov
sbb
add
mov
push
inc
mov
pop
dec
cmp
jns
or
cmpsb
push
jmp
testb
je
negl
js
or
sbb
aam
in
cmp
jbe
loopne
pop
adc
cmp
je
sub
inc
jmp
inc
and
pop
push
xor
pop
mov
cld
push
adc
add
xchg
hlt
test
jp
add
js
sbb
add
les
cltd
add
push
jl
push
xor
pusha
sub
mov
pop
cmp
add
sti
cmp
imul
cmp
bound
pop
les
clc
je
mov
arpl
sub
mov
test
xchg
sub
xor
gs
jge
mov
add
inc
cld
rorb
sub
je
pop
pop
dec
or
xor
add
arpl
and
and
jno
dec
push
mov
pop
mov
mov
aaa
jae
movl
pop
inc
shrb
shl
add
jmp
shlb
mov
sti
and
cmpsb
and
or
or
adc
push
test
jns
test
jne
xor
lock
subl
dec
push
mov
or
push
outsb
pop
jae
mov
jmp
dec
shlb
out
ss
xor
sub
mov
mov
or
mov
push
add
or
xor
jbe
lsl
xchg
inc
jg
or
scas
or
cmp
push
xor
and
outsb
fsubl
jle
sub
sub
and
pop
or
jl
popa
adc
jle
pusha
bound
cmc
add
pop
aam
cmp
jbe
sbbb
push
and
pop
arpl
pop
add
and
adc
je
test
jne
pop
and
dec
adc
mov
clc
add
push
xor
mov
mov
adc
movb
inc
in
xor
push
sub
sahf
and
xchg
test
xchg
mov
data16
mov
inc
and
dec
add
adc
fsubr
daa
addb
mov
or
inc
fs
clc
loopne
add
daa
sbb
call
inc
push
lcall
jbe
clc
push
call
inc
popf
push
mov
insb
and
push
push
mov
mov
dec
aam
mov
or
push
fcom
int3
mov
inc
subb
and
insb
mov
popf
mov
lea
data16
mov
sub
dec
sarb
movsl
lods
fdivl
mov
mov
inc
sahf
rorb
push
push
imul
test
pop
sbb
imul
jg,pn
pop
push
jecxz
fidivs
cmp
push
xchg
jbe
push
stc
inc
xor
mov
add
or
cltd
test
jecxz
addl
jp
mov
ja
sbb
cmp
mov
jns
jno
imul
add
imul
dec
xchg
xchg
ja
fcmovu
add
mov
sbb
imul
lahf
xrelease
dec
sbb
and
nop
mov
jecxz
push
int3
loope
faddl
iret
orb
xchg
pop
cltd
or
jp
inc
test
cltd
lods
xor
fisubl
pop
stos
in
insl
push
push
inc
iret
ret
out
mov
es
hlt
pop
push
movl
push
adc
jmp
pop
mov
xor
push
lahf
mov
add
jbe
inc
add
lods
push
ss
mov
enter
mov
mov
xchg
aam
add
int3
add
xor
mov
cmpsl
add
lds
nop
cmpsl
andl
jecxz
or
push
add
pop
sbb
push
outsl
outsb
je
pushl
std
loopne
adc
mov
cmp
add
jnp
outsb
fsubr
jae
pop
push
xor
or
push
mov
dec
sbb
add
cmp
pop
ljmp
dec
lea
xorl
jb
pop
sub
lcall
inc
xchg
out
cmp
fbld
ficompl
mov
mov
icebp
add
inc
inc
mov
popa
jo
cmp
pop
and
push
into
test
cmp
or
or
out
and
fcoms
movsl
rorl
adc
outsb
cltd
mov
aaa
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
mov
xor
xor
cmp
xor
lea
call
adc
cmp
pop
or
inc
push
fdivrs
shl
and
inc
push
sarb
rorb
xor
sbb
sbb
inc
push
mov
lock
in
mov
xor
mov
loop
inc
and
stc
je
fdivs
aaa
les
add
add
leave
add
pop
xor
call
mov
mov
add
das
push
ret
and
pusha
loop
jp
pusha
jb
loopne
decl
in
adc
roll
btc
daa
push
adcl
rcl
mov
mov
xchg
sbb
das
push
and
push
mov
orb
add
or
push
ljmp
push
clc
mov
mov
jl
push
cmp
mov
arpl
push
movb
push
popf
test
push
cmpsl
inc
pop
xchg
addl
xchg
add
xchg
xchg
sbb
sbb
xchg
or
and
lea
or
jg
inc
loope
fnstsw
pusha
stos
adc
and
or
pop
xchg
cmp
push
xor
push
enter
mov
pushf
sbb
loope
mov
idivb
faddp
add
cmp
pop
cs
insb
loopne
fmul
insb
gs
sub
push
sbb
push
pop
lret
cmp
add
test
jmp
testl
mov
cwtl
cmpl
dec
push
cmp
ficomps
push
lret
test
and
jne
add
pop
jecxz
ret
jb
mov
out
xor
insl
jnp
das
das
mov
sbb
loopne
and
mov
dec
arpl
enter
cmc
cmp
cmpl
loopne
mov
sub
xchg
fcmovu
mov
or
xchg
lret
jmp
bound
and
sbb
push
cmp
mov
add
lret
ljmp
fmuls
jne
mov
daa
shrb
push
cmp
mov
sbbl
dec
jno
mov
loope
xchg
xor
repnz
test
dec
cmp
adc
lret
push
push
adc
mov
leave
repnz
ficoms
roll
jnp
pop
mov
fcmovnb
mov
xchg
jne
mov
icebp
cmpsl
inc
dec
movl
insl
ret
in
loopne
fsubs
sub
dec
xlat
push
shlb
aas
je
cmp
push
pop
jne
aam
flds
cmpsb
and
enter
imul
jne
pop
call
sbb
imul
in
stc
jbe
adc
jle
pop
jne
jmp
xor
sub
mov
sub
or
jmp
dec
and
xor
xchg
push
mov
lea
xor
add
je
pop
in
and
addb
pop
jo
pusha
pop
je
sti
lds
jno
and
shl
imul
adc
insl
into
mov
jae
scas
jg
mov
and
xor
adc
mov
enter
xchg
leave
jecxz
sti
mov
sub
decb
adc
cmpl
andb
pop
fimuls
sub
mov
sbb
jb
pop
pop
pop
fs
add
or
inc
bound
or
or
clc
adc
rorb
push
add
sbb
pop
ret
lahf
adcl
pop
loopne
mov
lcall
dec
adc
fildl
aas
add
inc
sbbb
push
mov
xchg
dec
in
out
adc
or
add
jno
xchg
xlat
push
push
push
push
pop
in
mov
pusha
or
xchg
lret
pusha
or
sub
adc
add
cmp
sub
loopne
addb
adc
xor
or
add
cld
test
mov
push
shll
dec
cmpsb
out
sarb
in
aas
jmp
push
inc
mov
adc
push
adc
insl
adc
push
add
push
popa
mov
push
in
push
or
inc
adc
sub
cmp
int
adc
sub
and
test
fsubrs
push
insb
or
or
cmpsl
or
add
daa
mov
lret
push
dec
cmp
es
xor
cs
lret
in
scas
sbb
ljmp
fisubrs
mov
scas
mov
pop
cli
sub
sub
pop
jmp
or
stos
mov
je
into
or
xor
or
sti
and
add
inc
popa
or
sbb
and
push
and
xor
insl
test
jbe
cmc
sti
sbbb
mov
or
xor
sti
mov
add
es
sti
pop
stos
mov
out
addr16
pop
push
mov
mov
pusha
jae
sub
loopne
rep
dec
push
in
cmp
test
sbb
sbb
cmp
adc
pop
xor
lret
je
xchg
dec
sub
in
and
push
mov
je
rorb
cmp
jne
ss
pop
fwait
mov
in
in
mov
add
adc
adc
shlb
adc
and
cmpb
sbb
out
out
test
nop
mov
cmp
je
push
and
mov
pop
cmpsb
pop
adc
orb
cmp
inc
cmp
test
pop
add
inc
jecxz
sub
std
adc
or
add
xchg
dec
sbb
push
sbb
adc
ds
add
movb
lea
dec
imul
add
in
jecxz
mov
xor
shlb
or
or
push
rclb
sbb
cmp
out
mov
ret
mov
out
sub
mov
je
or
inc
ds
cs
int
int3
jae
js
imul
push
bound
addl
add
add
nop
out
add
adc
ret
push
adc
rorl
mov
mov
and
cmpsl
jno
scas
insb
cmp
negb
mov
mov
pop
jno
mov
dec
cltd
mov
pusha
ljmp
jne
push
scas
mov
add
push
inc
cmpsb
in
inc
add
in
pop
jo
addb
movsl
sbb
push
add
jne
xchg
leave
inc
cmp
lea
pop
loope
adc
inc
hlt
mov
lock
clc
cli
hlt
aad
arpl
push
aas
test
loop
inc
inc
mov
cmp
ljmp
hlt
mov
enter
jne
je
pop
jb
daa
and
imul
add
scas
mov
jecxz
mov
mov
pop
call
mov
ret
and
int3
cli
add
pop
jg
loopne
pop
jmp
popa
lea
test
test
xchg
outsl
orl
sarl
and
push
pop
cmpsb
imul
mov
jne
shrl
mov
push
rclb
hlt
pop
add
test
xchg
add
inc
mov
push
or
jle
out
fisubl
loope
adc
pusha
lods
xor
jb
xchg
push
cmpb
mov
add
fnop
adc
add
pop
filds
lahf
notb
fsubl
xor
xchg
and
sub
or
sbb
cld
mov
sub
icebp
cmp
fdivrs
dec
push
in
push
adc
pop
sbb
mov
sbb
push
fcmovnbe
nop
ja
in
push
test
pusha
es
sbbb
adc
bound
and
xchg
mov
mov
jge
testl
sub
push
push
out
adc
push
popa
cmp
adc
add
dec
push
adc
ljmp
test
nop
inc
bound
mov
loope
jmp
mov
adc
sbb
sbb
mov
orb
add
mov
icebp
je
mov
or
dec
jne
jns
jo
adc
add
jmp
jb
dec
inc
in
sbb
lahf
or
jg
jbe
push
sbb
ja
jmp
mov
xchg
in
xchg
cmp
cmpl
test
out
sbb
adc
stos
fiadds
repnz
aam
loope
dec
cld
mov
fsubrl
and
jg
push
cmp
ja
lock
lock
call
ds
push
out
mov
mov
add
subl
push
test
xlat
push
fwait
es
mov
mov
or
pop
dec
test
icebp
je
fdivs
loope
mov
incb
jl
jmp
push
pusha
pop
pop
orb
enter
jmp
add
sbb
lret
lds
mov
cmpl
mov
insb
movl
sbb
sbb
test
push
xchg
sarb
sub
xor
daa
push
lea
mov
push
js
fsubs
and
mov
int3
add
jg
fadds
cmp
mov
and
jmp
add
lock
inc
push
xor
mov
jns
and
inc
ds
call
test
push
push
xor
inc
jbe
mov
jne
jmp
push
mov
cmp
add
lea
add
push
lret
movsb
mov
int3
or
test
ret
or
ret
pop
pop
adc
aas
sbb
mov
cmp
push
sbb
je
cwtl
hlt
sub
push
clc
xchg
jno
aas
in
pop
outsl
sbb
out
adc
pusha
xchg
pop
xor
mov
push
lods
add
and
inc
mov
cmpb
inc
push
sahf
inc
add
test
inc
ljmp
add
daa
insb
movsb
xchg
lea
or
jae
sbb
add
leave
sub
notl
stc
cmp
mov
cmp
ret
cs
push
or
popf
sbb
ja
add
pushf
pop
imulb
jnp
add
and
push
loopne
sar
adc
mov
cmp
repnz
fwait
mov
xor
add
adc
jge
pop
lock
jle
jne
nop
mov
jne
inc
dec
nop
push
add
rcl
adcb
mov
jle
dec
add
mov
xchg
fidivrl
test
push
and
pop
ret
pushl
push
iret
jmp
pop
ja
cmpsl
sub
testl
or
in
rolb
or
movsl
add
loopne
xor
xchg
js
ljmp
add
stos
fs
or
inc
inc
data16
sub
sub
ret
pop
iret
stos
mov
mov
dec
popf
push
faddl
xor
movsl
mov
add
dec
loopne
and
or
bound
movsb
jnp
cmp
mov
add
sub
jns
sbb
call
push
push
push
dec
es
cmp
or
mov
xor
scas
sub
xchg
jne
ja
pop
push
sub
or
jo
mov
cld
sbb
jmp
or
push
roll
stos
ficompl
cmpsb
add
cwtl
add
cmpsb
or
cmc
ret
insb
jbe
add
push
sub
sub
stos
sub
jns
loopne
adc
add
xchg
pop
xor
cltd
xchg
divps
adc
into
push
test
subl
or
outsl
iret
or
pusha
cmp
adc
pop
add
ss
jne
cmp
jns
xlat
or
popa
adc
pop
mov
dec
sahf
dec
in
push
incl
pushf
testb
adc
jbe
push
and
xlat
mov
push
pop
sbb
inc
lcall
scas
adc
adc
out
push
mov
add
cld
rcrl
pop
inc
sub
and
inc
adc
cmpsb
jge
pop
ret
add
xchg
bound
add
dec
pop
cmp
adc
dec
sbb
sbb
mov
add
cmp
and
mov
pushf
and
mov
inc
add
sbb
xor
sahf
xchg
mov
das
arpl
arpl
add
xlat
or
mov
add
jo
in
cltd
test
mov
cltd
test
lea
jbe
in
pop
pop
loope
or
xchg
pushf
and
enter
sub
test
movsl
stos
mov
lret
rol
and
popf
or
loope
inc
and
push
adc
popa
dec
aam
sub
pop
push
rclb
inc
in
outsb
std
out
adc
dec
popf
fadds
outsl
aaa
xor
jns
push
fcoms
jo
in
sub
jo
xchg
jne
mov
sub
test
hlt
lret
jge
fnsave
pop
sarb
add
push
in
hlt
xchg
mov
pop
leave
mov
clc
sbb
mov
lds
and
fstpl
inc
push
and
lea
or
movsb
mov
adc
inc
cli
and
dec
shl
cmp
push
mov
addr16
and
icebp
pop
sbb
inc
sbb
mov
push
mov
jmp
sub
push
mov
inc
movsl
jmp
or
cwtl
cs
and
sarl
and
int
add
inc
mov
ret
or
pop
mov
sarb
adc
repz
and
and
sub
loop
push
or
dec
push
shrl
cli
popf
sub
and
fsts
ret
insl
mov
mov
xchg
mov
sub
mov
xchg
jnp
inc
cmp
dec
adcl
inc
or
and
nop
jbe
sahf
sbb
xchg
pop
push
add
ja
push
sub
dec
aam
mov
and
and
rclb
aaa
sbbb
inc
aam
out
sahf
xchg
je
inc
scas
push
push
adc
rclb
sbb
mov
sbb
gs
aaa
ret
outsb
insb
lret
fisttps
pushl
repz
push
jnp
pop
sahf
jmp
jge
push
jecxz
jmp
push
push
sarl
jbe
mov
xor
inc
push
xchg
jle
repz
push
rclb
sub
mov
mov
jo
xor
out
cmpl
pop
adc
or
push
lods
inc
mov
jo
sbbb
inc
mov
pushf
mov
cmpl
fdiv
adc
jne
adc
imulb
mov
mov
and
add
lea
mov
pushf
dec
xchg
add
xchg
jne
mov
dec
in
je
add
dec
lods
or
mov
data16
inc
shlb
loop
or
push
xor
xchg
mov
dec
inc
pop
inc
cltd
jmp
nop
or
nop
xchg
push
xchg
add
fcoml
mov
sub
loopne
outsl
add
daa
out
push
cli
mov
dec
xor
push
fiaddl
jg
jmp
adc
push
xchg
call
clc
adc
mov
lods
scas
jge
bound
xchg
mov
mov
adc
cmp
xchg
adc
ror
add
add
sbb
adc
hlt
push
inc
jbe
xchg
ds
mov
and
std
insb
jle
pop
add
pop
aas
mov
push
sahf
inc
loopne
mov
push
popf
inc
rcrb
bound
xor
fistpll
cmc
ror
aam
sahf
pop
jbe,pn
test
neg
jne
ret
mov
nop
push
fdivrs
add
clc
je
mov
jo
ror
add
sub
push
mov
dec
adc
jno
cmp
sbbl
mov
cmp
jne
cmp
push
inc
mov
inc
fsubr
adc
call
adc
xor
loopne
sbb
les
add
rcrl
je
cs
test
inc
mov
add
and
and
inc
imul
stos
mov
out
es
push
xor
and
mov
incl
cmp
pop
cld
fs
dec
cmpl
adc
add
jb
jmp
mov
inc
insb
jl
hlt
adc
hlt
xchg
cltd
push
jo
fmull
sbb
cltd
pop
push
inc
mov
dec
movzbl
fs
add
out
dec
loop
cltd
push
or
xlat
push
or
push
repz
enter
imul
je
sub
aam
or
push
mov
mulb
jg
push
or
stos
iret
adc
ljmp
jle
pop
fidivl
jmp
test
fwait
lock
inc
sbb
and
ret
xchg
popl
out
pop
es
test
mov
xchg
jne
jge
popf
das
or
pop
push
mov
scas
add
jle
test
and
test
push
jl
or
adc
scas
mov
sarl
mov
pop
jbe
sub
pop
xor
addb
mov
sub
mov
movsb
push
pop
or
add
fstl
ljmp
inc
push
inc
push
rorb
push
fbstp
cmp
jb
mov
push
dec
jae
pop
mov
dec
cwtl
cmp
dec
cmpsb
jbe
push
cs
cmp
shrl
xchg
sub
jp
adc
jp
inc
inc
cwtl
push
and
hlt
shl
xor
mov
mulb
fdivs
je
hlt
sub
dec
lods
push
roll
out
xor
mov
dec
add
push
test
cld
ja
shlb
dec
pop
shll
sbb
popa
aas
pop
sbb
and
sbb
daa
mov
mov
push
aas
inc
pop
jmp
cmp
loop
cld
jne
ret
outsb
pop
dec
sub
xchg
pop
push
test
jg
mov
adc
test
push
add
je
xchg
inc
xor
adc
mov
adc
adc
dec
xor
insl
jmp
in
add
lret
xchg
rcr
mov
out
cmp
ss
ds
cmp
cs
shll
add
xor
ficoms
mov
icebp
ds
dec
clc
mov
pushl
aas
test
inc
jb
xor
adc
nop
xchg
inc
push
jmp
gs
push
adc
adc
dec
jb
adc
cltd
fs
lret
adc
adc
mov
xor
sbb
or
das
addb
add
les
add
enter
pop
fcompl
cmpw
je
or
lret
icebp
rolb
out
fstl
adc
js
mov
std
or
xor
add
leave
lret
out
sbb
int3
pop
pop
call
stos
sti
movsl
imulb
jo
cltd
push
mov
ror
mov
pop
inc
inc
mov
test
lret
push
sbb
bnd
in
add
jl
inc
and
das
jmp
cmp
mov
sub
dec
sti
jge
cld
cmp
bound
rcll
adc
cmp
fmuls
movsb
cmpb
jb
adc
popf
push
in
mov
lea
mov
and
dec
rorl
mov
cmp
sbb
xor
adc
sub
adc
pushf
out
loope
mov
sub
pop
jnp
xor
add
xor
add
sbb
aaa
cmpsb
cld
imul
jne
sub
xor
movb
pop
mov
addl
sbb
std
and
subb
pop
adc
lret
mov
xor
pushf
jmp
inc
add
popl
lods
ss
push
popf
xor
mov
in
push
fidivs
aam
jne
sub
jmp
fcoms
clc
push
stos
push
mov
movsb
add
adc
add
jns
aam
jg
out
adc
mov
inc
or
adc
push
loope
fcmovnbe
pop
mov
fnsave
testb
push
js
mov
push
inc
sbb
mov
mov
clc
xchg
test
aam
adc
loop
xor
push
adc
rcl
aas
pop
jne
jl
jnp
ret
inc
test
in
jns
inc
fwait
stos
mov
mov
adc
decb
mov
in
or
scas
mov
out
pop
loope
xor
xor
cmp
test
cs
jg
icebp
outsl
js
add
iret
pop
xchg
repnz
pop
loop
mov
xchg
pusha
or
dec
push
je
or
movsb
push
inc
sbb
mov
imul
or
arpl
movsl
jl
mov
fstps
sbb
dec
popa
test
mov
pop
loopne
and
push
push
dec
pusha
stc
idivl
inc
jo
add
test
orb
test
cmp
or
sbb
jmp
inc
sbb
push
jmp
mov
push
lcall
aam
push
lahf
hlt
rorb
xchg
into
out
and
add
les
clc
jno
mov
or
jecxz
es
sub
adcl
les
imul
ss
lock
sub
push
cmp
sbbl
or
lea
push
int
lret
repnz
cmp
nop
popa
jmp
js
nop
mov
adc
and
jno
mov
inc
test
pushf
into
mov
xchg
repz
add
jg
out
push
test
dec
adc
roll
push
push
mov
mov
jp
ljmp
sbb
into
add
jo
jb
sub
and
fadds
mov
outsl
pop
rorl
mov
adcb
insb
loope
sbb
std
jo
xchg
decb
pop
jae
les
scas
jp
xor
adc
inc
sub
std
jbe
mov
stc
mov
inc
pop
sub
xchg
lret
scas
dec
aad
bound
mov
ljmp
lahf
mov
inc
xor
cltd
not
xor
in
push
or
movsl
xor
and
adc
imul
shll
cmp
ret
sbb
or
adc
mov
shl
mov
add
jo
sub
add
shll
lods
mov
xor
mov
lds
mov
xor
mov
cmp
mov
push
xchg
shl
push
add
push
shrb
dec
mov
adc
imul
stos
add
adcl
mov
xor
inc
imul
out
pop
adc
cmp
add
fwait
adc
fisttpll
aad
test
cltd
mov
mov
mov
mov
lock
loope
cltd
pop
cwtl
stos
lock
xor
push
push
sbb
xchg
jns
xorl
into
inc
sub
jae
mov
adc
test
bound
add
das
sub
xchg
push
subps
daa
xchg
mov
cmpsb
pop
ds
repnz
jne
std
push
mov
mov
push
mov
ss
sub
ret
hlt
insb
jecxz
les
adc
daa
dec
or
lcall
insl
loop
adc
clc
pop
add
adc
ret
test
push
add
xchg
add
addl
cld
and
adc
lea
rcrb
push
and
pop
roll
lahf
fs
jmp
or
test
es
xor
add
jmp
mov
int
or
push
mov
adc
sub
mov
or
inc
jmp
enter
inc
orl
mov
shlb
ret
ljmp
repz
lret
adc
or
cmp
inc
cmp
jbe
fimull
push
adc
idiv
push
aam
push
fs
aaa
gs
fmull
fcoms
shrb
sbb
mov
xor
pop
add
add
test
and
jl
dec
fistl
fs
xchg
cmc
in
sarb
les
out
hlt
movsb
or
inc
lcall
push
and
and
pop
pusha
add
notb
stos
or
loope
xchg
xor
out
dec
inc
mov
std
add
jb
or
dec
add
push
or
pop
shll
xchg
pop
lods
sti
add
xchg
or
das
lods
or
leave
pop
add
mov
jb
repnz
mov
movsb
lea
cmp
rorb
add
cmpl
and
mov
and
dec
jb
xadd
mov
mov
mov
movsl
xchg
pusha
pop
fistpl
mov
push
cltd
jecxz
push
and
or
xor
addb
cwtl
xchg
add
out
sbb
and
mov
sbb
or
repz
add
xchg
movsl
mov
xchg
lds
lods
xor
test
add
shll
sbb
cs
rcrl
sub
mov
inc
sub
into
pop
dec
ja
test
add
mov
cmp
je
cmp
xchg
insl
outsb
or
pushf
sbb
mov
sbbl
subb
adc
cltd
insb
sub
and
cmc
std
cmp
sbb
sub
pop
adc
and
in
daa
je
push
cmp
adc
push
or
cltd
mov
fldenv
add
jb
xchg
push
pushf
sbb
jae
push
xchg
dec
sbb
andb
jl
sbb
jae
sub
jmp
in
lea
test
xchg
push
fsubrs
add
sti
mov
add
xor
shl
adc
push
inc
push
mov
xchg
cs
outsl
insb
push
ficomps
adc
pop
or
fidivrs
je
cmpb
lret
adc
push
or
cmp
arpl
dec
test
dec
int
imul
mov
push
test
xor
sub
or
sub
cmpsb
xchg
add
xor
add
add
js
mov
dec
movsb
and
enter
jbe
fs
lret
clc
hlt
hlt
inc
cmp
xchg
jns
or
push
pop
mov
nop
pop
pop
push
and
push
cmp
add
cmp
call
jae
pushf
or
lods
and
inc
pop
sbb
push
js
fldt
clc
shl
cld
loopne
fnstenv
mov
add
sbb
xor
repz
cld
fsubs
inc
popa
cs
dec
inc
mov
scas
out
or
inc
push
cmp
add
inc
mov
push
in
cltd
lahf
into
clc
es
or
lock
inc
in
imul
xchg
adc
xchg
incl
dec
sub
mov
hlt
neg
sbb
and
sti
mov
bound
mov
push
sub
push
adc
push
icebp
inc
mov
xchg
in
into
adc
popa
xchg
pushf
test
js
inc
add
add
adc
and
test
je
faddl
inc
push
loopne
addr16
fildl
lods
jnp
and
leave
test
insb
fistpl
xor
aam
add
cmpl
jne
cmp
jbe
out
in
adc
or
jne
push
lds
dec
add
dec
push
lock
cmp
fwait
aad
std
lret
shrb
das
data16
push
fbld
popa
inc
cmc
jmp
rcl
mov
jno
adc
sahf
jecxz
inc
pop
or
sarl
sbb
cmc
dec
fists
push
shr
sbb
cs
in
inc
imul
mov
call
add
jge
lods
das
lea
push
push
xchg
je,pn
pop
jl
xchg
fisubs
pminsw
mov
js
and
cmpb
testb
ss
cltd
outsl
push
cmp
loop
add
xor
data16
mov
gs
add
cmpsb
sbb
xchg
push
pushf
mov
jnp
lock
test
add
or
mov
adc
inc
mov
adc
or
sbb
dec
adc
inc
pushl
andl
leave
ret
pop
or
xchg
fidivrl
movsl
clc
nop
aam
mov
push
push
ja
cmp
paddusb
add
daa
inc
fsts
push
inc
add
aas
arpl
mov
andb
dec
popf
mov
sbb
pop
xor
or
adcl
add
call
xor
jnp
sub
out
lods
mov
cmp
push
inc
cld
push
test
lds
push
icebp
cmp
test
imul
or
jne
pop
sub
pop
mov
lock
inc
or
mov
es
push
lahf
xor
movsl
repnz
adc
xchg
adc
inc
cmp
mov
jmp
je
mov
hlt
dec
mov
fs
andl
push
and
or
xor
adc
loopne
cmp
aam
scas
mov
or
movl
push
jae
and
stc
mov
pop
jbe
add
mov
jp
in
or
dec
or
cld
xchg
push
inc
cmp
dec
loopne
int3
add
aam
cmp
cmpsl
push
push
cmp
pop
add
xchg
popf
push
sar
push
add
push
jmp
xor
fadds
mov
add
aas
add
sahf
adc
push
out
mov
icebp
dec
sub
sbb
sbb
repnz
test
int3
ds
mov
scas
adc
mov
test
cmp
add
mov
dec
hlt
imul
lea
bound
mov
or
dec
add
jle
pop
lock
faddl
cmp
add
xchg
shr
sarl
jge
dec
mov
call
pop
iret
loop
arpl
test
cmpsl
cmp
fdivl
or
xor
out
pusha
cmp
faddl
cmpsl
pop
lcall
add
sbb
push
je
roll
ficompl
mov
gs
push
jge
leave
enter
cmp
add
or
and
xorb
add
adc
and
sub
mov
pop
push
mov
mov
push
push
and
ret
or
insl
les
mov
mov
int
inc
dec
push
xor
dec
sub
in
sub
mov
mov
add
push
aam
je
mov
loopne
sbb
or
lods
pop
fsubs
popf
sbb
faddl
cwtl
dec
adc
jle
enter
ja
mov
adc
jb
mov
or
or
mov
roll
xor
add
push
fisttps
push
or
pop
fdivrs
cmp
leave
fldenv
push
push
add
or
icebp
pushl
dec
pop
xchg
pop
fisttpll
sub
or
and
push
push
sahf
rorl
loopne
add
fisttps
jne
cmp
sbb
mov
repnz
sub
sbb
sti
jb
mov
xchg
out
mov
pop
or
fsub
add
lea
mov
pop
add
pop
jo
into
xor
test
sbb
add
popf
pushf
outsl
jno
mov
xor
sub
into
adc
jns
and
test
sbb
je
dec
adc
add
lea
ja
cmpb
jne
jp
imul
jne
out
add
or
loopne
adc
faddl
jb
stc
push
daa
or
ja
mov
lea
lods
inc
dec
sbb
pop
push
push
jnp
addr16
or
dec
mov
test
je
iret
lea
aaa
add
dec
mov
jge
cs
jae
leave
jmp
push
inc
sub
xchg
mov
ss
xor
push
sar
push
xchg
or
sbb
cmp
lsl
sarl
mov
dec
jp
xchg
jmp
dec
mov
enter
pop
push
push
dec
jno
sbb
adc
loopne
out
mov
je
mov
sbb
xor
decl
sbb
adc
pop
sbb
adc
jp
mov
inc
mov
mov
call
filds
pop
mov
xchg
enter
fcomps
sahf
jne
lret
cmc
inc
popw
push
lea
cmp
jle
xchg
repnz
xor
ss
pop
popf
pop
ja
fimuls
or
mov
jmp
and
or
cmp
fsub
add
sub
add
add
xor
push
fcoml
mov
inc
pop
lahf
mov
test
add
xor
mov
mov
outsl
mov
je
lea
dec
or
adc
inc
cmpl
dec
jmp
movsb
pop
xchg
data16
movsl
pushl
xor
pop
fcmovbe
inc
and
data16
shlb
aaa
push
sbb
add
dec
inc
aaa
adc
jns
adc
ret
sub
inc
clc
jmp
push
je
dec
lods
imul
in
les
orl
xor
dec
adc
repz
incl
add
rclb
adc
add
outsb
xchg
movsl
incl
mov
xor
mov
ror
or
add
mov
dec
mov
push
mov
daa
bnd
mov
lcall
inc
cmp
cmpb
ret
push
jae
lea
daa
fidivs
push
sub
sbb
inc
push
lds
mov
xor
loope
test
inc
dec
pop
es
dec
and
push
or
cmp
sub
cmc
loopne
jge
cmpsb
jge
sbb
leave
pusha
pop
cld
cs
mov
cmpb
xor
fnstenv
ja
testl
cmp
cmp
sub
sbb
sbb
lret
xor
mov
dec
xlat
movb
adc
cltd
mov
lcall
fdivs
sub
sub
out
mov
sti
sub
pop
ret
push
out
insb
adc
dec
imulb
divb
dec
dec
shl
imul
lods
jmp
mov
rorl
lcall
jge
pop
and
jne
mov
jbe
mov
push
cs
add
test
cli
repz
lock
lea
jbe
or
lret
js
sbb
out
int3
or
xlat
push
scas
mov
push
aad
xor
or
jge
mov
jnp
inc
mov
adc
adcl
movsb
shl
fimuls
sub
int
or
xor
jp
je
xor
popf
mov
xchg
cmp
push
jmp
gs
and
xor
mov
cmp
jb
inc
mov
adc
movsb
mov
jo
sahf
mov
mov
cmp
sub
push
inc
or
mov
hlt
ds
es
xchg
or
jo
jns
mov
xchg
popa
xor
sahf
mov
add
clc
js
mov
std
cmc
imul
xor
push
enter
enter
stc
push
out
adc
arpl
jb
nop
xchg
enter
push
imul
adc
and
movsl
sub
sbb
pop
in
lea
xor
outsb
or
jbe
xor
in
setb
std
push
testb
add
push
rcrb
mov
add
or
xor
aad
shlb
cli
jo
lds
cmp
cmp
and
mov
push
call
roll
lcall
sbb
fcoml
cmp
orb
or
fsubrp
mov
sbb
dec
cmp
cmp
push
rcl
out
adc
out
ret
shlb
cmp
divb
sbb
ret
dec
sub
aas
testb
je
divb
pushl
xchg
dec
scas
ljmp
sbb
sub
pusha
jo
adcl
xchg
xchg
ss
or
inc
es
das
in
and
movsl
pop
adc
add
and
lea
popa
push
push
cmp
call
jecxz
dec
and
cwtl
push
lret
cwtl
and
xor
sub
mov
mov
mov
inc
sub
push
add
xor
pusha
sub
jle
fmuls
sbb
in
mov
lods
out
movsb
jne
mov
orl
test
mov
imul
pop
adc
or
mov
dec
sub
mov
sbb
push
push
pop
add
fadds
xchg
shlb
mov
test
or
in
add
sbb
lods
cmp
sub
xchg
mov
aas
add
pop
xchg
lret
in
mov
lahf
mov
mov
mov
test
fcmove
insl
int
into
shrb
push
dec
add
inc
das
jb
lcall
and
and
push
jge
cmp
shlb
adc
test
mov
mov
mov
push
iret
add
jne
or
inc
xchg
arpl
mov
out
adc
mov
popa
shlb
lret
add
dec
lock
mov
clc
ret
sub
dec
rcl
out
xor
xchg
push
adc
add
mov
cmp
jl
es
xchg
jmp
push
ja
lcall
push
scas
cmp
fimuls
cmpl
mov
stos
adc
adc
push
out
mov
push
or
or
dec
or
ja
ret
push
sbb
or
incl
pop
push
mov
dec
dec
pop
cmp
ret
or
leave
push
cmp
sub
jmp
cmovge
imul
jb
movb
dec
pop
xor
push
cwtl
pop
dec
jnp
cmpsb
out
ss
add
xor
or
idivb
test
push
addl
pop
push
hlt
out
jo
int
insl
lahf
add
pushf
inc
daa
jae
unpcklps
pop
fwait
ret
mov
popf
movsl
inc
push
pusha
pushf
jo
push
out
fistpll
xor
push
push
or
enter
pop
jp
or
movzwl
test
je
test
lahf
add
or
jo
jo
jo
rorb
mov
mov
xchg
ret
dec
xlat
mov
sbb
push
cmpl
push
add
inc
dec
std
mov
and
das
jmp
cmp
lcall
shl
push
push
clc
push
push
pop
std
inc
adc
js
fdivrl
sub
push
mov
mov
mov
lds
cmp
fidivs
jne
es
mov
sbb
or
pop
mov
js
and
jl
rclb
jle
js
fisttpl
push
push
loope
jl
cld
sbb
push
push
mov
stos
add
aam
add
ds
mulb
loopne
or
popf
in
pusha
pop
pop
and
jno
int
push
lahf
xchg
aad
xchg
and
mov
add
jle
mov
mov
xor
or
sbb
xchg
xchg
and
in
sub
addb
loopne
sub
sub
in
xchg
push
pop
sub
sub
inc
mov
pop
or
inc
rdpmc
dec
pop
inc
stos
or
ret
push
mov
dec
push
out
sub
shl
daa
inc
outsl
mov
cmp
and
movsb
add
call
dec
cwtl
call
xchg
sbb
repz
push
addr16
jl
cld
push
adc
cld
js
mov
mov
mov
add
and
clc
or
push
sbb
test
or
add
inc
out
sub
dec
roll
and
loopne
aad
jne
mov
and
rcll
sbb
popa
in
xchg
mov
lret
icebp
mov
xor
loopne
and
and
loope
out
jge
mov
add
mov
movsl
jne
mov
sarl
scas
cmp
inc
adc
mov
adc
out
ds
lods
sbb
inc
addr16
std
into
sbb
gs
mov
lea
mov
cli
jne
cs
and
pop
jmp
jg
xor
cltd
jo
lahf
roll
xlat
inc
mov
lock
sub
push
std
mov
add
inc
or
mov
mov
jle
adc
cmpsl
or
push
ja
fimuls
sbbb
loop
push
jbe
gs
push
push
clc
scas
xor
and
push
mov
jbe
xchg
push
push
dec
push
cmp
inc
add
mov
adc
inc
loope
repz
add
dec
pop
pop
in
and
mov
mov
into
jmp
fidivrl
into
out
push
loope
roll
dec
xor
pop
mov
lock
cld
push
cmp
cmp
mov
xor
outsb
das
outsl
push
xor
icebp
rorb
sti
and
mov
adc
jl
mov
mov
jle
rorb
je
lea
shl
subb
cmpsb
jg
xlat
or
jmp
cmp
adc
lret
iret
push
aad
aam
shrb
mov
xor
es
add
jmp
and
jne
push
and
add
hlt
mov
sbb
mov
mov
popf
dec
data16
in
xor
jg
or
cs
inc
jb
adc
add
or
or
xor
add
adc
sub
inc
jle
add
aam
outsl
add
mov
xchg
xor
jbe
jmp
and
sbb
adc
add
push
sub
pop
mov
adc
xchg
mov
lahf
in
sbb
imul
pusha
fs
add
test
push
add
inc
movsb
inc
setl
sub
sbb
dec
sbb
cmp
jo
lret
cmc
addr16
mov
pushl
sub
push
pop
mov
sbb
shl
push
dec
shlb
and
roll
push
cmp
rol
push
xchg
inc
in
mov
sub
mov
push
lds
sarl
xchg
jp
adc
movsb
push
push
xchg
push
dec
enter
sbb
jecxz
xor
mov
daa
es
mov
in
inc
sbb
pop
loop
mov
cld
push
and
cmpsb
out
adc
xor
sti
add
mov
cltd
xchg
daa
mov
rcll
jne
andb
pop
stos
inc
and
popf
fdivrs
or
inc
mov
push
and
jne
sti
movsl
stc
rclb
or
sub
mov
or
jne
or
jne
std
pop
push
cs
nop
cmp
cwtl
dec
add
mov
mov
add
mov
lock
cmp
outsl
add
add
lea
sbb
lret
ds
clc
inc
sbb
xchg
fcoms
loopne
repnz
cld
test
pushf
notb
popa
inc
add
in
mov
js
dec
add
xchg
sarb
push
je
xchg
push
ret
or
movsb
inc
mov
sbb
cmp
push
xor
xor
cmp
sub
adc
jmp
mov
inc
inc
adc
pop
push
push
jo
mov
test
mov
pop
lea
or
adc
or
rcrl
mov
sbb
addr16
imul
jmp
scas
lcall
xchg
fbstp
dec
lock
mov
jg
and
pop
lea
pushf
pop
sbb
data16
mov
mov
cmp
orb
enter
inc
mov
insl
cmp
daa
mov
mov
ja
pop
sub
loop
dec
jb
addl
rorl
push
rol
adc
rorb
andl
andb
dec
xchg
sub
cli
rolb
push
jne
dec
fldt
dec
cli
or
pop
sub
sbb
push
lcall
push
in
mov
xor
outsl
sbb
test
or
sbb
pop
sub
scas
aaa
jo
jg
dec
push
mov
aam
push
inc
and
xor
cwtl
inc
or
cmp
je
cmp
add
in
push
or
cmp
or
jne
addb
xchg
test
test
fsubs
sbb
xor
jmp
loopne
xchg
cmp
shlb
aad
push
jnp
push
imul
mov
pop
mov
cmp
jl
mov
mov
es
out
push
xor
arpl
pop
sbb
in
push
mov
and
cmc
push
sahf
cmp
mov
and
sbb
aam
faddl
or
mov
clc
subb
mov
imul
adc
or
lea
clc
pop
sub
jno
mov
mov
push
ja
mov
mov
adc
mov
pop
ds
bound
cltd
sbb
adc
out
fcoms
shl
nop
mov
add
jbe
mov
mov
push
xor
xchg
xchg
pushf
insb
adc
inc
dec
rorl
mov
es
cld
or
sub
js
push
inc
mov
sbb
mov
dec
push
xor
bound
roll
sbb
mov
aam
adc
cmp
push
pusha
dec
shll
je
int
push
ss
xor
fdivl
or
outsb
andl
cmpsl
mov
sub
insl
mulb
aad
mov
sub
sub
xor
sbb
pop
cmp
loopne
push
pop
nop
in
jle
movb
sbb
mov
adcl
subl
jae
popf
nop
xchg
push
fadds
sbb
je
sbb
add
nop
add
movsl
mov
mov
in
pop
mov
sahf
inc
test
lret
jo
movsb
or
push
test
cmp
push
push
mov
sbb
push
adc
push
mov
inc
sbb
cmp
jo
adc
mov
lods
mov
sub
xor
pop
adc
xor
add
xor
add
mov
test
test
stos
insl
cld
xor
xchg
add
xchg
cli
inc
mov
pusha
lcall
add
jne
push
add
movswl
adc
sbb
sti
sbb
xchg
test
ret
pushl
sbb
or
push
test
adc
push
imul
xor
push
lock
je
repz
push
cmp
push
clc
in
mov
fcoms
insl
repnz
clc
inc
sub
push
push
push
inc
add
shl
ret
imul
add
xor
dec
add
je
das
mov
xor
das
xorl
ficomps
jl
insl
addl
jne
orl
mov
adc
imul
int
xor
test
mov
xchg
add
jge
or
test
das
add
lods
push
test
stc
fldl
in
cmp
sar
lds
add
lods
cmp
cltd
std
fwait
loope
sub
sub
mov
sbb
out
inc
xchg
les
mov
movsl
sti
dec
sub
xchg
sub
jnp
push
jne
mov
sub
sbb
sarl
mov
and
push
cmp
pop
sub
xorl
inc
xchg
ja
fwait
pop
jle
or
hlt
cld
cmpsb
imul
jbe
or
add
cltd
add
cmp
mov
and
add
push
testb
inc
rcl
dec
bound
push
sub
mov
sbb
into
dec
and
cmp
push
inc
movsb
sbb
cmp
cmp
push
popf
lock
mov
dec
xor
cli
out
fidivs
test
cmpb
lods
pop
mov
push
cwtl
add
sbb
xchg
dec
push
xchg
mov
pop
dec
push
adc
jle
or
movsb
jns
adc
or
push
xchg
fdivrl
sti
insl
adc
adc
xor
aad
stos
mov
and
fldcw
inc
xchg
enter
in
pop
nop
repnz
push
js
mov
outsb
outsb
rorb
dec
jb
sbb
lea
je
mov
gs
sar
xor
and
mov
and
push
and
mov
adc
pop
out
orb
int3
lock
push
mov
inc
inc
lock
inc
rcr
notl
and
ret
jne
or
cmp
je
je
enter
pop
fs
orl
inc
mov
out
adc
aaa
movsb
xor
sbb
jnp
call
push
xchg
inc
jne
in
inc
pushf
cmp
cli
je
popf
add
xor
mov
scas
pop
repnz
inc
adc
lea
xchg
push
push
hlt
sti
push
sub
inc
adcb
and
orb
or
dec
add
inc
xchg
add
adc
outsb
dec
adc
enter
jnp
lock
and
cld
lock
iret
sub
dec
jmp
push
adc
push
pop
adc
loope
ja
adc
sbb
push
pop
jg
test
sarb
in
push
mov
jg
leave
add
add
push
and
xchg
mov
aaa
sub
sub
xor
stos
dec
movsb
cmp
xor
pop
add
push
flds
push
push
aam
pop
jle
mov
and
test
or
inc
and
shlb
inc
sbb
sbb
pop
pop
mov
lock
sbb
je
and
jbe
clc
mov
cmpsl
adcb
and
push
sbb
xor
jns
in
insb
outsl
pop
mov
jno
test
popa
cmp
add
inc
lcall
add
adc
std
jle
std
je
push
aas
jne
outsb
fmul
mov
add
add
stos
mov
fldt
pushf
and
add
out
jbe
sub
sub
mov
cmp
sbb
test
adc
push
and
add
loopne
dec
push
lea
or
adc
out
adc
pop
sbb
adc
dec
push
or
out
add
xor
lock
jl
rorb
fcoms
add
les
xchg
negl
add
pop
popa
add
or
xchg
add
addl
clc
pop
arpl
mov
push
inc
aad
es
ret
sbb
and
dec
xchg
fdiv
or
cmpsl
sbbl
pushf
or
outsb
push
das
out
cmp
push
pop
add
push
xlat
cltd
pop
pop
push
or
jne
xchg
jne
cmp
fdivs
xchg
test
ljmp
dec
movsb
push
ret
jge
int3
mov
jg
sbb
xchg
in
mov
sbb
adc
inc
call
jge
dec
ljmp
or
es
orb
or
pop
out
xchg
mov
jmp
pop
movsb
xchg
xchg
in
adc
push
movsl
mov
dec
mov
pop
sbb
pushf
dec
adc
int
push
aam
push
adc
xor
inc
stos
sub
xchg
adc
dec
and
jo
push
lea
and
push
push
cli
sub
sub
test
pushf
xchg
inc
xor
dec
inc
in
sub
mov
push
push
push
out
mov
jbe
cmp
adc
fiadds
mov
pop
ret
mov
cmpl
cltd
hlt
inc
or
hlt
sub
mov
sbb
pushf
mov
rolb
je
push
les
testl
pop
jo
mov
rcrb
adc
push
jae
jbe
lcall
xor
xor
xchg
ret
cmovge
or
pop
mov
movsl
add
mov
jl
mov
dec
mov
jecxz
xorl
and
push
movsb
loopne
adcl
add
jl
add
xchg
std
cmp
pop
dec
dec
or
repnz
sub
mov
mov
mov
xor
lret
sub
out
mov
popa
aaa
cmp
and
sbb
cmp
repnz
movsl
push
mov
hlt
sub
mov
outsb
jne
jae
out
push
dec
sub
dec
repz
and
aam
fimull
divl
push
xor
popf
out
insb
in
adc
mov
lea
cmp
movsl
cs
gs
mov
cmpsl
ja
sub
sahf
cwtl
push
aam
jp
hlt
insl
es
mov
sbb
and
or
pop
jnp
and
or
push
fstpt
push
test
and
imul
stos
sbb
or
push
and
pop
mov
rolb
popf
mov
jg
adc
mov
lret
adc
add
lret
push
or
sbb
sbb
jo
sbb
out
xor
mov
out
inc
mov
sbb
mov
push
cs
inc
inc
das
pop
or
pop
mov
push
and
daa
addl
ss
xor
push
xchg
pop
pop
in
dec
push
adc
je
or
or
loopne
mov
imul
and
inc
and
inc
addb
xor
call
add
sahf
push
mov
mov
daa
loopne
push
xor
sub
ja
scas
xlat
fnsave
xchg
test
and
xor
push
or
or
inc
push
or
push
dec
push
pop
cmp
mov
adc
add
push
cltd
xchg
or
sbb
lods
add
pop
inc
add
aam
fldt
sbb
xchg
jnp
push
nop
sub
add
test
push
outsb
ss
int
mov
inc
xor
xor
push
xor
sub
adc
jg
lock
add
fwait
xchg
cmp
pop
cmp
dec
loop
add
adc
xor
pop
sub
lret
push
xor
mov
push
push
push
sbb
roll
sbb
add
cmpsl
std
decl
jnp
cmp
cwtl
lret
ss
aas
mov
inc
push
dec
pop
fcmovb
sbb
sub
sub
inc
in
adc
jmp
cmp
mov
aaa
lods
jle
cmp
inc
cmc
js
aas
outsl
and
es
pushl
mov
loopne
jne
cmp
pop
add
push
orb
push
fmull
or
dec
push
inc
xor
cmp
nop
ret
int3
dec
ret
or
es
pop
pop
mov
inc
negb
dec
push
sub
mov
jl
andl
push
adc
in
ret
iret
insb
sub
mov
cltd
adc
jne
jl
outsb
inc
jae
daa
xchg
dec
jnp
jecxz
cmp
mov
push
push
call
adc
test
inc
xor
stos
xchg
adc
fistpll
ret
icebp
add
mov
popf
scas
test
mov
adc
adc
stos
les
xchg
cmpsb
shrb
sbb
push
ret
jp
adc
cmpsl
dec
jl
and
or
mov
xor
icebp
jne
je
push
pop
fisubrs
mov
xor
js
push
add
inc
push
jbe
pop
ljmp
aaa
cmp
das
pop
bound
xor
or
xchg
or
fsubrs
add
add
mov
movsl
add
pop
pop
sub
movsl
divb
aam
orl
pop
lock
push
sub
inc
xor
je
and
jle
mov
mov
cmp
cmp
cmp
dec
ja
imul
ret
inc
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
and
scas
mov
adc
rolb
adc
mov
lods
push
push
leave
ds
test
pop
adc
xchg
cmc
lods
mov
mov
dec
fstl
sub
add
enter
mov
aas
mov
inc
bnd
leave
add
push
pop
lods
in
push
popa
add
sarl
aaa
add
adcl
imul
push
push
pop
and
adc
adc
or
or
adc
and
cld
push
addb
xchg
test
clc
add
scas
nop
cmp
add
push
cmovle
mov
pop
fcoms
rolb
mov
pop
and
mov
or
push
xchg
xor
jnp
or
mov
mov
cmovo
inc
mov
jns
sub
fcomip
fcoms
mov
add
fsubrl
jmp
mov
ret
or
mov
mov
jp
es
mov
imul
push
push
jg
mov
rolb
jge
mov
cmpb
jbe
mov
fstps
mov
ljmp
mov
push
lahf
mov
enter
or
add
or
cmp
iret
pop
jmp
jecxz
push
xor
andl
push
movsl
push
leave
scas
add
jl
dec
xor
mov
add
inc
sbb
add
subb
xchg
fcoms
adc
inc
mov
or
rolb
sub
daa
js
lock
push
sarb
adc
or
mov
jmp
adc
js
adc
add
outsb
jo
xor
inc
aam
je
sub
mov
mov
shrb
or
add
sbb
test
stos
cmp
and
popa
arpl
bound
fcoml
mov
mov
cmpsb
sbb
push
mov
cmpsl
testl
pop
jae
fsts
add
push
insb
js
or
inc
ret
orl
cwtl
sbb
call
cmp
data16
mull
movsl
fsts
aas
je
xor
add
imul
or
add
pushf
inc
xchg
mov
enter
movsl
std
mov
adc
sbb
lea
sbbb
jle
pop
mov
mov
scas
jne
pop
add
push
add
cmpsb
fcoms
insb
xchg
mov
add
add
and
repz
cmp
aas
pop
xchg
sub
es
jbe
or
cmpl
cli
push
lea
test
mov
jmp
jge
mov
xor
shr
inc
add
gs
pusha
pop
call
loopne
adc
cmp
pop
out
add
cmc
xor
mov
insb
std
popl
push
inc
call
sub
or
adc
add
and
mov
mov
out
in
mov
jae
movsl
mov
movsl
dec
mov
es
sbb
jne
pop
jnp
popa
sbb
push
arpl
jecxz
jne
pop
adc
inc
lock
shl
push
xchg
adc
pop
jns
add
inc
and
lret
push
int
push
ja
testb
sbb
xor
shrl
or
push
mov
or
ljmp
int3
xchg
cmp
or
xor
sub
in
xor
bound
xor
loopne
push
adc
test
orl
jmp
push
fisubrl
pop
out
mov
adc
int
insb
or
mov
int
adc
xchg
pop
imul
loopne
add
inc
scas
fadds
out
or
xor
sbb
jle
out
mov
je
cmp
add
imul
push
jne
ss
call
add
cmpb
jl
add
jmp
push
jnp
xorb
push
push
pop
mov
inc
push
out
lds
dec
xor
cmpb
jle
add
inc
xor
dec
push
push
idivb
addr16
pop
push
xor
or
in
js
ret
jbe
es
js
js
mov
cmpsb
add
or
cmp
jo
cmp
nop
test
dec
jnp
mov
adc
inc
jo
into
sub
sahf
xchg
lock
mov
or
push
or
xchg
lret
push
lea
addr16
add
pusha
or
rorl
dec
jle
cmp
add
xor
cmp
call
jne
cmp
es
pop
sahf
notb
push
mov
push
and
lea
cwtl
add
sbb
sub
push
xchg
and
and
sbb
inc
fcomps
ret
and
int
mov
fistpl
or
insl
shlb
fisubrs
dec
jl
dec
dec
mov
push
adc
xor
int3
imul
lods
les
xchg
sbb
test
ficoml
movb
push
xchg
adcb
into
adc
loope
testl
jo
cmp
dec
es
fldenv
enter
dec
mov
test
sbb
dec
pop
ljmp
pop
pop
sbb
pop
or
adc
mov
sbb
ret
mov
mull
std
js
add
and
inc
adc
addr16
lret
add
add
sbb
mov
mov
je
add
inc
sub
adcl
fwait
sub
testb
in
rorl
jle
xor
or
loope
neg
ret
pop
xchg
jle
jmp
mov
cmpsb
add
mov
adc
imul
mov
xlat
scas
jno
xchg
pop
and
lock
jo
push
mov
es
mov
sti
js
movl
enter
inc
or
rcr
orb
add
pop
fwait
add
les
push
xor
sbb
cmp
sbb
addr16
adc
cmp
sahf
jb
testl
xorl
lret
add
add
fcoms
jbe
and
sti
inc
clc
pop
sub
daa
inc
insl
xorl
sbb
cmp
call
fidivrs
adc
add
mov
xor
mov
femms
fisubl
rcl
adc
fcomps
lds
aaa
sbb
aad
mov
mov
xchg
inc
push
lea
loopne
cmpsl
shr
and
adc
pop
das
in
adc
daa
jp
add
lret
mov
test
arpl
cmp
call
fsubrl
sub
xchg
pop
add
loop
cmp
jge
test
pop
cs
mov
push
addl
daa
adc
add
shl
jg
fisttps
ret
cltd
adc
inc
mov
bound
or
and
push
and
test
push
sbb
lea
jp
cmpsb
jne
ret
outsl
mov
xorb
sti
dec
ja
je
or
test
jbe
je
or
sub
sub
sti
das
adc
pusha
mov
push
or
pushf
stos
das
cmpl
movsb
xchg
mov
js
jne
sahf
popa
pop
inc
push
arpl
xor
jmp
int
cmp
je
push
adc
adc
push
xor
fnstcw
pusha
inc
mov
int3
lds
add
push
mov
mov
push
lcall
cmp
xor
push
andl
mov
mov
lret
icebp
and
sahf
dec
sub
lcall
inc
mov
fs
sar
sbb
push
sub
adc
in
xchg
mov
or
xchg
and
leave
inc
gs
jmp
ljmp
pop
inc
or
call
pop
or
ret
cmpsb
sbb
sub
dec
je
sub
adc
rorl
xor
sbb
adc
adc
cld
inc
outsb
fcmovnbe
pop
inc
or
in
mov
call
daa
or
xchg
fisttpll
ret
push
adc
inc
push
mov
nop
inc
dec
mov
sbb
fnstcw
insb
adc
pusha
jmp
dec
pusha
xor
or
divl
add
fs
pop
jp
and
push
mov
sub
adc
movsb
cmp
nop
aam
loopne
inc
jo
mov
jne
cmp
fldl
rol
inc
sbb
dec
inc
lds
mov
test
imul
fsubl
dec
or
ret
pusha
mov
ds
icebp
clc
and
orl
scas
and
or
push
add
movb
sbb
push
xchg
out
pop
pop
add
dec
imul
aad
mov
push
jg
dec
sub
je
push
push
lret
adc
or
mov
imul
fcompl
add
les
inc
xchg
xor
dec
mov
cmpl
cmp
cmp
xlat
xchg
pop
repnz
scas
inc
add
add
add
sub
adc
add
mov
push
dec
leave
test
enter
lahf
dec
xor
faddl
in
add
pop
mov
and
jecxz
iret
sub
inc
sbb
push
scas
js
lods
mov
jae
cmpsl
ret
push
sub
in
dec
sbb
nop
push
xor
int
testl
pop
cmc
dec
lcall
dec
sbb
pop
sub
out
jp
clc
xchg
push
inc
mov
je
out
loopew
mov
dec
fidivrs
xor
leave
add
pop
aas
and
adc
roll
sahf
push
dec
aam
movntps
pop
mov
sbb
xchg
pop
adc
in
xchg
push
dec
lret
pusha
xchg
dec
adc
pusha
adc
inc
sbb
mov
test
int3
lods
or
sbb
sbb
int
jne
iret
sar
dec
arpl
stos
std
decl
or
scas
mov
push
cmp
mov
or
adc
rol
fidivl
jge
clc
push
movsb
push
icebp
jle
add
sahf
and
or
mov
xor
js
inc
sub
cmpb
loope
cltd
insb
loopne
and
jb
data16
push
daa
push
mov
xor
add
es
jl
in
push
xchg
jge
xor
xchg
and
call
adc
idivb
hlt
or
scas
mov
data16
inc
pop
mov
xor
jo
sbb
push
dec
push
movsb
inc
jns
and
test
outsl
shlb
adc
xchg
xchg
jb
mov
mov
sbbl
insb
movl
stc
adc
xchg
or
lea
loope
sbb
sub
loope
ja
mov
mov
sub
sub
aas
mov
fs
add
pop
andb
sub
mov
and
push
or
inc
ja
or
jo
imul
ret
fistl
test
jl
pop
adc
or
add
js
mov
mov
in
fld
add
mov
int3
cmpsl
jp
popa
and
pop
add
inc
jp
adcb
push
mov
push
inc
mov
je
rcl
add
and
rcll
mov
daa
in
subb
xchg
push
insl
icebp
add
sub
dec
sahf
imulb
repz
pop
movsl
cltd
inc
xor
xor
aaa
push
xchg
loope
pop
aaa
in
mov
xchg
dec
cmp
inc
movsb
xor
push
mov
ret
pop
mov
movsl
mov
mov
lret
clc
add
pop
push
mov
test
sbb
mov
ficomps
add
mov
jo
xchg
mov
and
out
sbb
mov
test
adc
cmp
xor
push
and
pusha
popa
mov
bound
push
sub
adc
cmp
adc
push
dec
mov
repz
sub
xchg
push
mov
adc
jne
cmpsl
cmpsb
jo
xchg
jp
mov
mov
outsb
mov
iret
inc
push
inc
pcmpeqb
add
and
mov
pop
pop
or
cmp
mov
sub
or
mov
sbb
pop
push
xchg
ds
xor
jnp
test
movsb
or
sub
add
push
push
xor
lahf
fld
pusha
sub
pop
pop
jl
pushf
insb
enter
jne
xor
adc
mov
imul
adc
dec
inc
push
pop
and
and
popa
imul
test
in
or
inc
mov
cmp
mov
je
sti
jge
xor
cs
idivl
sti
or
jl
adc
test
cmp
comiss
inc
xchg
jmp
cmpl
push
imul
sbb
mov
add
rolb
sbb
cmpsb
pop
in
adc
pop
cmp
imul
add
inc
out
xor
adcb
jnp
cmc
add
push
shr
xor
xchg
inc
sti
push
mov
pop
push
js
xor
ja
jno
jg
ret
xchg
into
jle
sti
push
inc
stos
add
mov
dec
stos
and
lcall
mov
fwait
jmp
aam
notl
sub
cli
test
rcr
in
add
and
lret
sub
or
rcrl
imul
push
das
xor
dec
dec
push
mov
ljmp
sbb
add
and
je
mov
or
and
jle
por
dec
mov
cmpsl
loope
push
in
pop
les
xor
dec
ja
int
in
addr16
cmp
lods
repz
inc
add
insb
jp
loope
lock
mov
loope
jmp
push
loop
push
fcomp
mull
or
or
in
xor
or
lock
add
lret
mov
xchg
jge
or
add
or
and
or
punpckhwd
daa
subb
jg
xor
push
lret
cmp
je
ljmp
mov
popf
icebp
fcomps
fnstcw
dec
pop
addb
mov
xlat
jo
stos
dec
adc
push
or
sti
and
cmpsl
mov
jbe
pop
inc
sub
mov
pop
je
roll
mov
je
cmp
enter
imul
or
inc
subl
div
into
fsubs
cld
jae
mov
mov
sub
arpl
adc
or
call
scas
ret
mov
push
fstpl
inc
fsubrl
push
cmp
dec
and
sti
xor
mov
jnp
cmpb
xor
movb
jbe
xchg
orb
fsub
inc
mov
stos
loop
jp
cld
ss
inc
adc
and
gs
or
lea
dec
cmp
add
add
cmc
lret
and
cltd
push
nop
pop
orl
adc
cltd
loop
gs
push
sbb
in
adc
or
push
fisubl
dec
or
je
adc
incb
or
xchg
out
xor
push
inc
adcb
fwait
mov
nop
data16
and
sbb
xor
sub
mov
xlat
sub
add
lea
fwait
rcrb
xchg
sub
jae
inc
mov
cmp
add
jge
xchg
sub
jae
mov
xor
xor
lods
xor
dec
xor
les
fs
cmp
inc
shlb
jle
mov
cmp
mov
ss
inc
jne
movl
ret
ror
ja
jns
cmp
jle
fs
jg
jmp
push
das
inc
push
movsb
xor
js
add
cltd
int
cltd
jg
push
inc
and
jge
and
fiaddl
dec
insb
cwtl
jno
rolb
or
mov
loopne
sbbb
push
testb
mov
push
mov
mov
rclb
pop
rorl
call
addb
add
rcll
mov
adc
mov
push
popf
jno
test
and
imul
ret
jo
pop
pop
push
sub
push
mov
loope
arpl
jb
jbe
adcb
mov
mov
movsl
movsl
push
sbb
push
sub
jb
sbb
mov
imul
lea
cmp
sarb
push
loope
sub
push
movsb
cld
and
push
loope
sbb
pop
call
jle
pushf
inc
cmp
dec
jns
or
add
orb
stc
mov
add
fdivl
pop
push
into
loop
cwtl
icebp
test
mov
imul
push
push
xchg
call
mov
stos
in
jle
dec
aaa
and
in
push
testb
mov
mov
sbb
cmp
mov
push
negb
and
xor
loopne
add
push
ja
mov
js
ds
loop
cmp
xor
mov
jne
cmc
add
cmc
pop
imul
xchg
push
cltd
std
ljmp
sbb
push
sbb
popf
add
sub
dec
pop
sub
adc
or
jne
fs
push
int3
mov
add
call
popf
pop
pop
mov
aaa
add
or
loopne
and
scas
pop
mov
push
pop
in
int3
inc
dec
movsb
inc
add
add
or
rcrb
sub
imul
mov
shl
pop
rolb
pop
out
jne
mov
or
shl
cmp
in
or
add
cs
loopne
sub
ret
add
add
xor
push
xchg
push
fidivrs
mov
add
leave
arpl
mov
pop
push
push
cmp
add
add
je
popa
das
xchg
out
lahf
adc
jl
mov
and
test
mov
add
dec
or
fstl
stc
add
pop
cmp
jne
sbb
push
push
aaa
add
and
mov
lods
sbb
scas
mov
add
add
jp
add
push
xlat
push
push
jbe
push
jns
lock
pop
add
mov
push
xor
orl
adc
jns
lahf
mov
or
push
xchg
scas
in
inc
js
dec
sub
push
and
or
cmp
pop
jae
subl
nop
pop
rcl
push
jp
or
sbb
je
lods
cmpb
test
in
jo
jnp
mov
adc
subb
call
les
cmpb
adc
push
mov
sbbl
jns
inc
mov
and
ret
lock
xlat
sub
jge
adc
lret
decl
sbb
xchg
cmpl
andl
das
notl
movhps
nop
fs
or
call
loop
adc
mov
pop
and
mov
ja
lock
mov
lcall
lods
test
sub
gs
test
cmpsb
adc
sub
push
add
sub
jne
shlb
push
push
enter
jge
xor
adc
push
xor
pop
push
or
mov
mov
jmp
mov
cmp
jbe
shll
cmp
push
xor
cmpb
rcr
push
imul
push
shll
je
stos
jno
mov
xchg
inc
lock
add
bound
add
jns
mov
xchg
and
adc
adc
inc
sbb
xchg
add
mov
push
inc
add
mov
add
mov
cmp
sub
jo
add
mov
sbb
mov
cmp
push
cmp
push
pop
rol
bound
lods
add
jle
mov
mov
xchg
jno
adc
mov
clc
inc
or
sub
add
addl
xor
nop
pop
dec
nop
pusha
and
push
aad
push
nop
adc
stos
pop
fildl
add
repz
add
lods
and
lock
dec
or
scas
pop
enter
std
aaa
aas
ja
push
sbb
inc
add
mov
or
ljmpw
cltd
and
jg
loop
xor
fisttpl
and
add
inc
and
add
or
scas
les
or
rol
test
push
cmp
mov
stos
aam
je
sbb
jbe
jb
lock
mov
arpl
push
push
roll
fwait
sarl
insb
fstl
xor
repnz
mov
push
jbe
mov
fwait
sub
es
inc
adc
ret
sub
iret
cmpsb
jno
jl
push
adc
sbb
adc
int3
mov
rol
inc
enter
popf
loopne
xor
dec
mov
aas
push
push
pop
mov
xor
ss
jo
daa
inc
jmp
dec
leave
mov
sbb
addr16
push
pop
sbb
adc
add
pop
ret
jne
scas
inc
or
cmp
adc
sbb
jae
or
jecxz
and
cmp
adc
addl
sub
push
mov
pminub
adc
rorb
jne
aad
add
in
lods
xchg
push
push
dec
stos
or
sbb
jp
jmp
sub
sti
push
adc
sub
sub
lock
push
test
or
sti
and
pop
xlat
mov
fs
adc
cmp
icebp
es
pushf
add
inc
add
stos
jo
fmull
adc
cwtl
loope
cld
addb
jae
call
fcoml
pushf
mov
add
sub
addl
add
stc
hlt
test
sbb
sub
or
test
sbb
sub
aaa
ljmp
adc
mov
dec
test
adc
je
repnz
aaa
mov
dec
push
js
sbb
sbb
add
push
jge
mov
xchg
jo
dec
dec
pusha
lock
xor
pushl
and
adc
hlt
dec
xchg
xchg
mov
sbb
js
push
hlt
test
in
inc
imul
xor
scas
icebp
push
out
push
dec
push
enter
xchg
adc
inc
add
sarb
cwtl
and
push
push
and
or
pop
and
or
test
adc
or
pop
or
and
bound
add
je
dec
mov
adc
mov
inc
push
add
cmpsl
in
test
jl
push
clc
adc
lock
xor
jge
mov
push
cs
cld
adc
adc
mov
cld
sub
pop
pop
mov
fldl
pop
loopne
and
jbe
sub
lea
jle
push
shlb
cmp
jb
popa
push
pop
pop
cmp
inc
outsl
je
cmp
lock
cmp
popa
outsl
xchg
adc
leave
nop
sbb
cmp
or
dec
hlt
mov
pop
mov
jg
dec
in
loopne
inc
xor
dec
inc
dec
jle
inc
or
push
add
inc
push
inc
inc
sti
jl
test
xor
xchg
jg
cmp
jg
nop
das
faddp
jg
mov
sub
mov
push
cltd
pop
adc
test
clc
outsl
fcmovnb
push
inc
incb
sarb
and
rcl
sub
push
imul
xor
and
es
cmc
andl
xor
push
icebp
inc
inc
xchg
sbb
imul
push
inc
add
in
movsb
stos
arpl
int3
in
sub
sub
xor
cmpsb
repz
sbb
xor
dec
movsb
or
and
mov
sbb
cmp
add
rcl
jg
jno
movl
movsb
add
jae
inc
movsl
imulb
add
loopne
and
decl
jno
jne
jl
xor
or
push
bound
sub
dec
ret
or
xchg
push
xor
xchg
mov
pushf
push
mov
repz
add
popf
add
test
movl
push
mov
lret
inc
sub
shll
push
pop
jns
jmp
iret
inc
adc
movl
xor
pop
mov
daa
xchg
fwait
jmp
sbb
push
and
jnp
cmp
push
gs
movsb
ds
cmp
adc
add
cmp
pop
inc
sbbl
inc
cmp
out
and
inc
in
scas
jl
lcall
push
mov
mov
xchg
insb
add
inc
dec
add
shlb
mov
mov
xchg
or
popf
xchg
and
or
xchg
xor
jge
xchg
fstl
je
pop
cmp
sub
daa
sbb
push
push
push
cmp
mov
sbb
cmp
icebp
sti
rep
inc
inc
xor
fnstsw
or
sbb
cmp
jae
or
sbb
add
cmp
sbb
andl
outsl
xor
sub
jne
push
push
in
cld
jae
push
push
mov
cmpsb
xlat
jge
xor
push
and
push
mov
clc
pop
loopne
adc
pusha
sub
inc
xor
loop
pop
sub
sub
and
push
jecxz
aas
mov
inc
lock
mov
mov
or
les
adc
loop
fists
xor
sub
or
into
add
mov
nop
and
mov
repnz
cmp
inc
scas
push
iret
test
xor
das
mov
lret
xchg
mov
jae
sbb
mov
push
push
push
mov
add
sub
xor
mov
cmp
and
mov
add
push
xor
dec
adc
hlt
lock
inc
pusha
cld
addb
or
dec
gs
popf
push
push
test
movsl
sub
call
fdivrl
call
adc
decl
mov
xchg
push
push
xchg
dec
daa
lock
xchg
push
in
xor
in
scas
lods
sbb
mov
adc
adc
add
loopne
add
push
rolb
and
roll
sbb
push
mov
sarb
dec
jne
lcall
mov
jg
in
cmc
add
push
loope
sbb
jb
js
add
nop
dec
and
add
cmp
dec
ss
mov
pushf
sbb
or
jns
incl
sub
mov
stc
sub
pusha
loopne
dec
sub
js
es
or
clc
adc
and
inc
xor
adc
add
or
jnp
call
fwait
jb
inc
and
shlb
add
add
and
add
test
adc
jnp
xor
and
inc
stos
inc
loope
or
push
mov
and
sbb
mov
cmpsl
add
xor
dec
adc
xor
sub
in
inc
cmp
xorb
test
cmp
jbe
pop
les
adc
popl
hlt
sub
sar
divl
mov
add
rcrb
cmp
mov
or
xor
ret
sub
jecxz
es
shlb
in
jbe
mov
les
inc
inc
jmp
xchg
add
call
rcrl
or
ret
xor
fstpt
sahf
ja
test
mov
insb
sub
rcr
or
push
iret
test
pop
xchg
push
int3
rcl
mov
cmp
and
ds
push
and
icebp
mov
ret
and
shr
loop
jo
xor
stos
or
jl
adc
dec
xorb
pop
fwait
push
ret
notb
outsb
int3
aam
je
push
cmpsl
sub
or
lcall
lcall
andl
push
mov
inc
or
sbb
sti
sbb
pop
add
ret
and
aaa
int3
add
jne
pushf
sbb
lret
adc
and
lods
in
dec
pop
or
push
pop
mov
dec
or
inc
pop
enter
pusha
mov
sbb
adc
fisubrs
orb
push
shll
mov
stc
jne
loopne
ret
fsubrs
incb
inc
mov
pop
cmp
and
sbb
jae
jb
jae
das
inc
cmpl
inc
rcrb
jae
mov
add
pop
push
pop
push
cmp
ret
push
push
push
dec
icebp
sbb
push
xchg
mov
and
inc
test
inc
inc
test
adcl
or
dec
sub
in
jo
cmp
add
adc
jbe
and
inc
sbb
cltd
mov
cltd
ljmp
jnp
mov
add
push
fwait
and
xchg
or
jne
fs
or
jg
sbb
or
insb
and
dec
push
jmp
adc
daa
or
jbe
cmp
add
dec
ja
mov
add
sbbw
dec
outsb
xchg
adc
pop
enter
dec
and
adc
or
pop
fwait
dec
mov
mov
fsubs
or
sbb
fwait
lods
dec
mov
jae
jmp
mov
sbb
cmp
xchg
lret
add
xchg
daa
je
dec
adc
xlat
or
cld
or
test
sbb
push
inc
mov
pop
pop
fsubs
sub
cmp
cwtl
jne
cmp
or
dec
pop
mov
add
add
sbbb
mov
nop
xchg
mov
push
add
mov
test
movsb
mov
cmpsb
or
sti
pop
and
lods
mov
push
or
nopl
mov
and
xchg
and
mov
and
and
jg
sub
and
sbb
xchg
xchg
sub
cs
into
bound
or
push
cmp
xchg
mov
mov
xor
push
pop
jb
add
and
js
add
aas
xor
or
xor
mov
mov
xchg
rcrl
lea
mov
rol
leave
fnstsw
or
or
in
pusha
cmp
pop
add
in
inc
or
sbb
adc
xor
add
sbb
daa
or
add
sbb
int
cmp
in
fidivs
loope
jne
xchg
adc
push
ds
nop
jae
rorb
sub
jne
mov
push
inc
inc
cmp
insb
mov
or
pop
jge
aam
mov
ja
dec
cmp
mov
and
xor
adc
daa
dec
push
sbb
xchg
scas
dec
repz
inc
mov
shl
dec
sti
xor
fimuls
enter
cmp
roll
int3
loopne
in
mov
mov
mov
test
add
push
shrb
movsb
pusha
lcall
mov
xchg
dec
jne
xor
inc
pop
pop
hlt
mov
aas
pop
mov
divb
push
push
jns
push
cmp
mov
xor
push
push
cmp
addr16
push
jmp
mov
add
cmp
push
inc
or
loopne
sbb
dec
sub
inc
in
imul
sub
icebp
cmpsb
ss
dec
pop
lock
sub
or
push
lock
sub
divl
push
push
movb
iret
inc
loopne
lahf
enter
and
jns
mov
dec
arpl
inc
jecxz
sub
jns
xchg
popl
je,pt
and
shlb
loopne
lcall
mov
es
or
adc
and
xorb
inc
push
mov
cmp
sti
lods
cmc
xor
or
out
jno
push
add
pop
adc
xchg
adc
lock
add
fwait
or
jne
push
cmp
and
insb
sbb
mov
xchg
sbb
jl
xor
fs
popf
jmp
xor
out
lret
adc
push
inc
add
mov
test
sbb
insb
test
bound
xchg
or
cmp
mov
jb
mov
sbb
sub
loope
or
pop
loop
test
or
pop
sub
lcall
xor
add
mov
lret
add
popa
sub
sbb
andl
mov
and
pop
lock
movsb
imul
lock
sbb
mov
add
rcll
xor
pop
push
push
pop
adc
xor
std
inc
push
mov
loope
arpl
or
push
lods
andb
mov
pop
mov
mov
add
stos
popf
cmp
sti
in
sub
push
pop
and
adc
loopne
or
sbb
fmuls
call
add
xchg
push
les
push
adc
rclb
jne
xor
mov
nop
inc
scas
in
push
push
cli
aam
push
lret
mov
jl
jo
jnp
dec
push
cwtl
rclb
lods
or
inc
and
imul
push
sub
cli
aam
xchg
stos
sarb
fcomp
fwait
addl
xchg
cld
mov
imul
stos
xlat
aad
mov
push
add
push
jge
cmp
and
push
push
push
dec
sbb
or
loop
cli
jb
or
pusha
sub
push
push
pop
clc
jl
mov
xor
pop
hlt
adc
cli
clc
mov
test
jbe
jmp
es
setg
outsl
subb
and
movsl
push
addb
add
rolb
insb
sbb
mov
and
pop
test
scas
pop
imull
inc
and
ljmp
jo
rolb
movq
cld
sub
push
xor
adc
or
fldl
mov
cvttps2pi
fsubrl
loopne
sbb
xchg
data16
mov
or
inc
pop
mov
lea
sub
add
xchg
pop
push
cwtl
std
clc
lods
push
mov
adc
or
or
dec
ja
cmp
stos
mov
mov
sub
inc
add
dec
mov
lods
arpl
divl
adc
jb
push
cwtl
add
call
call
push
es
push
mov
into
xor
sarb
fnstenv
push
outsl
inc
push
fs
outsl
clc
orl
push
push
lds
fwait
outsb
jnp
mov
in
push
and
inc
ja
pop
mov
in
in
xchg
push
movsl
outsb
dec
ret
sub
aad
and
pusha
arpl
repnz
mov
or
lock
cmp
loopne
ret
push
jmp
loopne
and
popa
dec
icebp
xor
add
int
inc
sbb
loopne
dec
lcall
and
add
pusha
pop
ss
xor
inc
out
enter
ss
les
aam
int3
test
dec
sub
xchg
imul
push
insl
push
push
lea
pop
adc
test
mov
dec
inc
push
mov
test
aaa
into
push
out
xchg
je
mov
jo
dec
push
mov
or
mov
repz
jo
xchg
ret
xor
sbb
test
aam
out
and
bound
xchg
sub
push
loope
sbb
cs
sbb
or
pusha
ret
sbb
cwtl
arpl
das
xor
cmc
out
loope
cltd
push
addl
rclb
movsb
outsb
sbb
jno
lods
into
scas
or
push
xchg
or
mov
lock
mov
mov
loopne
data16
push
xor
imulb
push
aam
icebp
pop
push
mov
push
outsl
mov
mov
movsb
ds
push
adc
add
push
lahf
mov
xor
xlat
gs
pop
outsl
insl
jp
das
inc
jb
mov
ds
fadds
adc
xchg
pusha
lahf
movsb
dec
jmp
and
rorb
sub
mov
cmp
pop
pushf
mov
or
lahf
mov
jo
in
adc
xchg
lds
add
mov
pop
lahf
and
nop
addb
int3
inc
push
test
insb
push
dec
inc
lret
add
sbb
xor
scas
gs
movsb
int
and
or
cmpsl
add
pushf
addl
insb
xor
fmuls
sti
add
adc
adc
xlat
push
push
inc
cmpsl
stos
xor
mov
repz
popa
shll
addb
jnp
cli
push
jo
aas
xor
jo
mov
and
add
push
mov
test
fimuls
sub
and
add
divl
mull
or
ds
fs
rclb
push
and
hlt
inc
mov
sub
adcb
add
mov
xor
outsl
mov
push
cmpsl
imul
push
sbb
mov
add
les
lock
movsl
das
inc
out
add
shr
ss
push
es
sbb
enter
xlat
sbb
mov
mov
in
mov
fistl
mov
adc
mov
enter
fdivrs
stos
iret
add
imul
movsl
test
insb
and
test
cli
sub
adc
in
xor
adc
push
xchg
add
pop
sub
loopne
xor
xchg
lcall
sti
push
push
sub
mov
data16
xchg
stos
loope
dec
add
in
cmpb
cmp
clc
pop
push
or
dec
in
pop
or
call
add
insl
jno
test
dec
lret
xchg
xchg
imull
cmp
inc
clc
mov
ss
xor
nop
ljmp
jbe
popa
cmp
dec
and
xor
sub
pusha
imul
sub
xor
or
lret
out
mov
enter
or
rolb
jo
mov
and
int
popf
pop
in
inc
imul
mov
sub
lods
adc
das
add
outsl
inc
clc
and
adc
adc
xchg
inc
pushf
pop
out
jne
push
pop
sub
or
inc
jbe
xchg
movsb
test
lret
in
xor
add
adc
lahf
jp
pusha
cld
mov
adc
sub
push
stos
popf
pop
mov
scas
fmul
inc
test
and
adc
clc
mov
sub
rorl
fnstcw
popf
mov
enter
je
movsb
sarb
pop
lock
sbb
lea
nop
jo
movsl
cwtl
xor
inc
in
lods
jmp
data16
xlat
sahf
mov
mov
bound
mov
pop
sbb
jle
aaa
je
jnp
sub
mov
js
sahf
sti
mov
mov
rcll
jne
fmuls
sub
sub
pop
mov
xor
ljmp
scas
outsl
push
pop
out
pop
ret
cmpsl
mov
pushf
xchg
mov
and
dec
add
negw
xorb
sbb
push
dec
outsb
xor
cmp
lcall
or
mov
xchg
mov
sbb
incl
push
inc
mov
adc
loope
addb
pop
add
sar
insl
mov
xor
push
jbe
and
dec
outsl
shl
cmp
jno
jmp
cld
test
xchg
lods
mov
or
loopne
sub
adc
push
ud1
incb
sbb
add
adc
and
push
pop
cmpsb
push
adc
and
pop
popf
cmpsb
outsl
xlat
push
push
repz
adc
mov
push
lea
or
mov
adc
sub
push
movsl
dec
lock
and
dec
mov
enter
pop
lods
mov
sbb
add
andl
push
fisubs
push
ret
push
lods
pusha
sbb
xlat
adcb
fwait
and
mov
call
mov
jge
jbe
mov
loopne
xchg
test
incb
ret
sub
mov
fsubr
pop
xlat
lret
lret
xchg
data16
out
rorb
pcmpeqw
mov
mov
xor
fnsave
int3
test
movsl
fldcw
push
ret
adc
dec
and
jno
xor
lea
mov
incl
dec
jg
adc
mov
inc
inc
inc
push
jl
loop
jmp
push
js
jae
inc
stos
dec
cmp
jb
cmpsl
pop
sub
mov
lods
or
jb
xchg
lock
subb
jge
and
dec
xor
in
repz
push
cmpl
add
xor
mov
add
out
jo
mov
and
push
mov
mov
mov
pop
and
mov
xchg
je
js
xchg
or
add
sti
mov
mov
je
or
jecxz
stos
push
mov
rorl
pop
fsubl
rcrl
loope
jp
pop
hlt
lock
repz
ds
jle
xor
or
sbb
cmp
cmpb
mov
pop
stc
push
call
pop
or
cmpl
adc
andb
pop
ss
outsl
xor
cmp
jbe
push
stos
sti
lea
cltd
gs
push
and
cltd
ret
cmp
jb
add
xchg
lods
adc
cmp
push
cmp
movsb
scas
sbb
push
aaa
ret
ljmp
jne
scas
dec
jno
pop
pop
sub
dec
or
xchg
pop
call
loope
int3
mov
jae
insb
arpl
mov
push
adc
xchg
xor
fcmovbe
sub
in
in
push
jo
loope
in
push
push
xchg
rcl
sbb
or
add
fsubrs
push
xor
popa
push
pop
add
loopne
add
mov
or
lahf
push
push
and
mov
xchg
add
loop
fdivl
out
push
loop
inc
lods
adc
bnd
ss
adc
mov
shr
filds
add
push
rolb
push
mov
and
jb
xor
dec
jno
mov
adc
mov
addb
scas
cltd
mov
scas
popf
mov
jp
or
cmp
push
or
inc
pop
rolb
push
jns
cmp
sarl
mov
pusha
add
xorl
ja
mov
push
lcall
adc
jg
jae
mov
and
xor
xor
add
sbb
std
pusha
mov
and
mov
movsb
test
decb
cmpsl
adc
inc
mov
aaa
clc
jge
divb
outsb
lock
sub
repz
xor
xchg
adc
cmpsb
mov
jb
pop
leave
sbb
iret
sub
or
adc
daa
cmp
lock
mov
mov
lods
push
rcrb
jo
push
das
aas
movsb
mov
out
cmp
xor
not
pop
std
sub
out
pop
xchg
jp
je
cli
ljmp
je
data16
sub
push
aam
dec
scas
jle
call
cmp
jg
outsb
adc
int
add
cmp
or
outsb
add
inc
sub
jge
push
jle
cmp
jns
xchg
push
ficompl
jp
outsb
and
mov
lock
mov
daa
pop
clc
pusha
xor
inc
test
fisttpl
jb
jmp
notb
jge
cmpsb
dec
cmp
cmp
xor
mov
sbb
xor
mov
inc
inc
jmp
inc
jo
add
addr16
and
or
cld
lock
pusha
iret
add
ret
xor
and
movsl
push
or
cmpb
add
jae
inc
or
adc
sub
jge
lret
jmp
pop
cmpsb
xor
add
dec
fs
or
push
sbbb
pop
pop
jge
mov
sub
mov
dec
seta
jle
mov
mov
cmp
movsl
outsl
push
out
sbb
andl
and
adc
push
mov
scas
add
push
sarl
imul
lret
xchg
lret
mov
xchg
les
aam
in
add
je
fldcw
adc
add
mov
insl
adc
jo
jl
push
inc
movsb
adc
mov
add
stos
pop
push
push
inc
adcb
in
jns
adcb
test
add
mov
add
push
in
and
jl
rolb
push
imul
xchg
popa
aaa
imull
andl
enter
or
or
popa
add
jo
push
or
jge
push
test
adc
rorb
int
rclb
divl
jo
xchg
rcl
push
add
and
je
das
sbb
adc
add
movsb
add
add
nop
cltd
xchg
ret
mov
iret
cmp
lea
add
cmp
fldl
cmp
jle
inc
inc
js
mov
and
pop
outsl
push
mov
mov
dec
std
add
mov
xchg
mov
or
test
xlat
mov
pusha
and
dec
add
push
pop
push
pushf
xchg
nop
push
scas
cwtl
scas
mov
mov
xlat
clc
cmc
dec
insb
mov
xchg
push
jg
xorl
fsts
mov
rol
add
lahf
push
xchg
mov
mov
adc
orb
xchg
jae
xchg
add
xchg
movsb
sub
fistpl
fcomps
push
aas
mov
test
push
and
test
add
mov
mov
cwtl
add
push
hlt
push
into
dec
cmc
xchg
or
loope
les
push
xor
imul
xchg
imul
or
sarb
decl
inc
ss
mov
incl
adc
je
cltd
test
scas
test
gs
pop
cmp
loope
xor
js
loopne
shrb
lea
pop
out
int3
xor
popf
sub
mov
inc
push
stos
push
add
cmp
push
test
inc
sbb
xor
and
rclb
push
sbb
or
jp
loopne
pop
ljmp
or
inc
dec
jmp
mov
sub
mov
pop
fadd
dec
jnp
mov
or
sbb
mov
mov
call
nop
or
inc
add
cmp
testl
cmp
jno
xor
insl
lea
mov
mov
rolb
aaa
jl
rol
call
aad
mov
adc
mov
mov
add
or
inc
test
outsb
nop
lcall
mov
shr
cmp
jbe
add
jmp
add
fcompl
cltd
sar
add
add
add
inc
xchg
and
mov
test
mov
adc
dec
mov
xchg
inc
in
fistps
push
int3
xor
pop
mov
push
mov
loope
mov
cwtl
stos
das
mov
test
add
cmp
add
sub
push
das
fisubs
pop
scas
and
push
pop
or
les
leavew
int3
add
dec
cli
aad
add
sbb
filds
mov
jl
mov
shrb
or
cmp
repnz
test
xor
sub
lahf
shlb
fmull
ror
sub
or
xor
aaa
orl
jb
push
mov
push
xor
sub
sbb
cwtl
arpl
and
pop
xorl
aas
jg
and
stos
inc
sbb
jl
aaa
je
leave
mov
jmp
mov
popf
rclb
loop
sbb
call
insb
mov
ds
add
popf
in
inc
jge
add
inc
rcrb
int
inc
mov
push
sbb
xchg
xchg
or
test
or
add
and
dec
cmp
inc
fisubrl
ja
les
xor
dec
mov
scas
sub
xchg
mov
push
mov
aas
mov
add
mov
ret
call
repz
push
sbb
or
push
lcall
mov
pop
xchg
adc
outsl
lods
dec
loopne
inc
clc
jle
in
push
add
dec
cs
fnsave
push
add
jmp
insl
inc
rorb
add
stos
dec
jne
add
fsubrs
xchg
or
rsqrtps
dec
negb
cmp
sbb
or
int3
stc
fmuls
arpl
mov
cs
notb
je
mov
sbb
int3
add
ret
lock
sbb
push
femms
sarl
inc
sbb
out
popa
clc
pop
mov
inc
xor
adc
enter
jmp
pop
dec
adc
out
rorb
pop
mov
dec
inc
adc
je
adc
dec
sub
test
test
enter
nop
sbb
int
push
pop
js
dec
in
adc
xchg
sbb
jle
dec
mov
in
inc
xchg
push
push
lock
ds
mov
push
ds
pop
mov
pop
adcl
shrl
enter
push
sub
fsubrs
mov
jne
push
or
jno
dec
test
test
add
or
bound
fcom
sub
push
mov
pushf
pop
jmp
aaa
xchg
ret
icebp
xor
scas
jb
push
dec
movsb
roll
cmp
dec
xchg
ja
and
sbb
xlat
mov
es
add
filds
mov
mov
push
push
xor
clc
sub
mov
sbb
push
push
pop
imul
stos
incl
adc
out
pop
insb
mov
mov
negb
pusha
lret
mov
cltd
mov
in
arpl
loop
or
add
xchg
dec
je
push
jns
arpl
insl
lock
xor
into
dec
scas
mov
push
jno
push
movsl
adc
int3
ret
pop
stc
sbb
mov
fistps
addl
cltd
push
popa
enter
lcall
vpshab
jmp
mov
push
call
xchg
dec
ds
inc
jge
add
add
pop
jg
into
push
sti
push
add
xor
popa
dec
imul
pop
test
dec
jne,pn
inc
push
sbb
or
inc
or
ret
lret
push
add
aam
jmp
das
cmp
pop
cwtl
cli
or
ljmp
cli
xor
cli
cmpsb
mov
add
test
testl
lock
pop
mov
push
and
lret
mov
push
stos
add
adc
popf
adc
cld
push
mov
push
push
xchg
aaa
add
fsubs
je
lods
rcll
inc
xor
insl
add
add
fistpll
subl
insl
enter
add
adc
repnz
dec
push
mov
mov
mov
push
rcll
sub
mov
rdmsr
mov
sbb
add
or
popa
jl
movsl
sub
jnp
arpl
out
pop
sbb
ret
add
pop
cltd
mov
addr16
sbb
push
in
and
inc
sahf
mov
or
add
sub
inc
fwait
sub
cmp
and
imul
xchg
cmp
sbb
pop
inc
pop
lea
mov
jmp
mov
clc
push
cmpb
adc
dec
mov
jns
es
js
push
bound
xchg
and
adc
pop
mov
sub
xchg
lods
lea
lcall
cmp
pop
je
aaa
add
dec
inc
cmp
cmp
push
rolb
pop
shlb
jne
les
pushf
idiv
repnz
mov
mov
ficoml
mov
repz
mov
mov
or
sbb
inc
or
cwtl
roll
mov
mov
sbb
adcb
sub
sub
cltd
sbb
cli
testl
rolb
push
add
or
push
jl
push
xchg
mov
arpl
dec
adc
or
adc
aaa
inc
dec
adc
loopne
xor
call
lret
cmpl
hlt
jle
push
pop
sti
mov
push
jne
jo
sub
push
cmp
cmp
in
dec
jbe
push
mov
ds
and
pop
cmp
shrb
sbb
xor
pop
pusha
leave
lret
or
addl
xor
and
and
sub
loope
test
xchg
cmp
inc
js
dec
ds
xor
in
add
mov
pop
mov
cltd
push
mov
lret
push
cmp
hlt
xor
and
add
pop
imul
push
fildl
add
or
mov
add
push
loop
rcrl
sbb
and
push
stos
dec
lea
add
orl
popa
or
add
repnz
adc
incl
or
mov
fs
mov
or
adc
test
mov
enter
cmp
push
dec
test
pusha
mov
nop
xchg
subb
in
in
movsb
pushf
lods
mov
int3
mov
repnz
in
cld
rclb
sub
inc
xor
fmull
cmpb
xchg
inc
lea
cwtl
andl
mov
mov
jl
mov
popa
stos
subl
das
push
mov
add
lcall
mov
dec
aad
ss
mov
and
aas
mov
pusha
xchg
mov
add
icebp
inc
adc
ss
sbb
mov
dec
xchg
push
mov
xchg
jl
xchg
dec
enter
in
je
popf
add
fs
js
adc
adc
shlb
sub
divb
add
jae
inc
or
mov
xchg
addr16
dec
inc
mov
mov
imul
test
mov
push
cmp
jmp
or
push
jge
je
sbb
cld
lahf
jae
scas
aas
cmp
jne
push
mov
fcmovnb
cltd
pusha
loopne
cmpsb
fs
sbb
sub
xlat
imul
jmp
outsb
ss
addl
mov
add
ljmp
movsb
mov
inc
push
iret
mov
add
sbb
jmp
xor
push
inc
sub
mov
inc
addb
lds
jo
sub
into
movsb
adcl
mov
subl
adc
aaa
cmp
push
push
test
sarb
inc
sub
jne
test
rcrb
mov
jg
or
jo
push
mov
cmp
jno
or
ret
sub
loopne
cmp
lods
push
adc
mov
dec
shlb
popf
push
add
dec
lock
lret
sub
in
mov
clc
cmp
and
das
jge
dec
inc
or
jl
out
test
pop
clc
js
sbb
add
dec
and
pop
sbb
imul
dec
push
xor
jmp
jge
add
push
dec
loop
fwait
mov
cmp
pusha
inc
jo
ret
mov
and
rcl
push
inc
hlt
jmp
mov
push
mov
sbb
mov
loopne
cmc
rcrb
or
movsl
loop
push
add
lods
adc
sub
cmp
repnz
sub
pop
lret
sbb
inc
inc
mov
adc
inc
mov
jl
or
mov
rclb
gs
pop
icebp
out
adc
imul
sbb
xchg
add
pusha
push
push
xlat
inc
mov
repz
iret
xchg
iret
push
push
ja
and
inc
push
sub
or
clc
mov
add
insl
fsubrl
test
in
xchg
jmp
stos
inc
loop
pop
xor
pop
jg
or
subl
sbb
cltd
pop
leave
fldenv
addb
pusha
or
les
ss
jnp
dec
cmpsb
dec
sti
in
repz
stos
in
mov
add
add
leave
jne
loopne
mov
mov
sahf
imul
add
popf
les
jo
les
inc
xor
cmpsl
adcl
mov
rcll
sbb
imul
aas
scas
je
xchg
push
push
xchg
mov
mov
inc
mov
repz
dec
or
nop
cmpsl
mov
cltd
sbb
lret
andl
or
add
aaa
test
xor
enter
hlt
mov
icebp
lock
faddl
adc
sub
add
aaa
add
cmpsb
movsl
push
push
movsl
mov
inc
hlt
fstl
cld
xor
loopne
arpl
xor
fldl
pop
fistpl
fsubr
pop
faddp
andl
sbb
mov
adc
popf
sub
mov
cs
and
inc
insb
adc
add
xchg
lods
and
nop
jne
sbb
mov
cmp
lret
sbb
mov
leave
pop
test
pop
les
adcl
push
add
fdivrs
sub
mov
clc
xor
out
mov
add
filds
sub
sub
add
sbb
push
or
lds
add
mov
cmp
or
and
sbb
clc
dec
xlat
fsubs
vphsubbw
mov
xor
aaa
cmp
call
push
cmp
mov
int3
dec
sbb
cmp
lock
push
xor
jnp
mov
jne
push
fistps
in
sub
mov
add
ret
fimuls
divb
jmp
mov
cmp
jge
and
xor
clc
movsl
movsb
dec
sbb
es
xchg
inc
int
push
insl
cmpsb
mov
adc
inc
mov
gs
and
adc
cwtl
cltd
pop
aaa
push
imul
sbb
mov
pusha
popf
cwtl
insl
test
jg
cmp
add
cmp
loopne
stos
sbb
adc
push
pop
pusha
xchg
pop
mov
loopne
or
imul
inc
add
adc
push
pop
xchg
add
ficompl
or
jns
mov
mov
wrmsr
mov
adcb
cld
mov
bound
pop
dec
mov
mov
pop
bound
leave
inc
pop
arpl
xchg
jmp
pop
sub
push
insl
mov
sbb
nop
fisubrl
adc
mov
pop
ret
dec
cwtl
add
pushl
add
ljmp
dec
or
jne
pop
mov
rcrl
mov
aam
test
mov
mov
inc
adc
mov
movsb
sub
mov
imul
and
lock
adc
push
loop
fcomi
mov
ja
jle
loopne
xchg
test
add
fisttpll
in
and
and
pop
fmuls
push
adc
adc
das
faddl
test
cmp
mov
add
adc
xchg
rorb
or
dec
ret
inc
stos
out
cmpsb
xorl
fsubs
mov
test
fcoms
les
push
push
js
push
outsb
rcll
add
dec
sbb
scas
fnstenv
insb
add
push
fmull
popa
xchg
cmp
adc
and
loope
fsubl
push
xlat
sub
or
push
lods
fildl
dec
inc
mov
rolb
pop
dec
sub
sub
mov
xor
enter
jle
inc
cmpl
adc
sbbb
mov
fisubl
je
bound
adc
cmp
pop
fcoml
adc
push
pop
dec
add
push
mov
sub
call
pop
das
push
rclb
test
pusha
mov
push
cs
clc
pmuludq
loop
dec
adc
pop
and
add
repnz
jg
xchg
repz
sub
shrb
arpl
sbb
icebp
lock
or
iret
fwait
stos
aad
rorb
jle
int
add
ret
mov
jne
mov
xchg
add
out
enter
mov
in
sub
shrl
jl
ss
mov
ret
inc
arpl
mov
mov
xchg
sub
clc
mov
mov
mov
jmp
mov
xchg
or
shld
push
add
or
inc
push
pop
je
subl
push
lods
jmp
aam
bound
addr16
mov
mov
add
mov
pop
add
cmp
es
clc
xor
inc
rolb
movb
push
pop
scas
adc
adc
clc
add
rcrl
scas
leave
add
pushl
dec
xchg
adc
lods
mov
adc
sub
adc
mov
sub
push
sbb
int
pop
push
dec
pop
stos
aas
cmp
jo
ret
push
xchg
push
or
mov
inc
lods
mov
pop
dec
dec
shll
in
cmp
sub
push
add
pop
or
sub
enter
adc
xchg
sbb
or
xor
jecxz
lods
xor
loopne
or
or
test
popa
mov
imul
sbb
jle
shlb
movb
and
mov
in
xor
sbb
jmp
cmpl
ljmp
sbb
int3
or
subb
inc
adc
mov
cwtl
sub
push
mov
fs
or
cmpxchg
sub
in
and
cmpb
sbb
xchg
dec
lea
push
popa
inc
add
pop
lea
sbb
pop
sbb
jl
jl
nop
adc
loopne
adc
push
mov
push
enter
add
inc
push
inc
xchg
xor
inc
sub
and
ljmp
push
pop
imul
push
fdivrl
sub
lds
dec
jno
jno
ljmp
inc
ds
push
ds
jl
cmp
mov
xor
mov
dec
xchg
mov
in
aas
or
xor
inc
cmp
shlb
push
imul
push
cmp
xor
jne
dec
rcll
enter
clc
cltd
sbb
cs
cmpsl
outsl
pop
sbb
sbb
add
or
popa
cmp
pushf
dec
or
cmp
lock
add
dec
push
test
lret
mov
rclb
test
out
and
movsb
inc
sub
adc
push
mov
and
mov
insb
lahf
into
sub
loope
jno
cmpsb
dec
js
aam
in
push
fisubs
imul
dec
cmp
lods
les
inc
xor
loope
test
icebp
les
cwtl
inc
fs
loopne
in
in
les
or
jbe
inc
or
mov
add
add
stc
insl
sub
icebp
jne
es
sbb
ds
sahf
xchg
xor
fadds
lods
xchg
leave
daa
in
testl
adc
sahf
pop
mov
ret
enter
and
shl
xchg
jbe
lds
push
stos
mov
pop
jmp
xchg
mov
mov
jb
and
add
push
push
test
xor
sbb
sbb
rcrb
loopne
xchg
cwtl
xchg
rolb
xor
xchg
leave
loopne
inc
push
addr16
cmp
inc
sahf
add
xor
mov
add
cmpsl
testl
sti
sbb
or
dec
shrl
std
lcall
mov
dec
aaa
sarb
xchg
adc
imul
and
pop
stc
push
and
jp
xor
pop
stc
pop
push
push
jne
push
push
sub
stos
cmc
mov
in
or
dec
orl
pop
dec
xchg
pop
call
movsb
inc
add
testl
push
inc
sub
jmp
jp
jo
add
adc
dec
js
test
sub
push
add
jle
jge
inc
test
stos
test
stos
dec
pusha
cmpsl
dec
pusha
add
incb
pop
push
lods
or
cltd
call
jo
or
xlat
ror
push
push
sbb
xor
sbb
or
hlt
sub
xchg
loope
or
fdiv
lods
mov
in
in
or
call
dec
test
jo
stos
pop
inc
in
cmp
in
mov
adc
les
push
jecxz
adc
add
roll
sub
jmp
and
rolb
jb
in
scas
jecxz
fld
mov
roll
dec
add
test
leave
sub
jg
sbb
ss
cmpsl
imul
mulb
mov
shlb
cmp
push
arpl
cmpsl
sub
lahf
push
lret
cli
pop
loopne
nop
lock
push
dec
je
sub
inc
loopne
jbe
fisubrs
sbb
push
mov
ss
and
mov
cwtl
dec
pop
loopne,pn
pop
inc
fcoms
xor
cmp
sub
inc
cli
push
jg
dec
adc
add
addb
add
mov
cltd
es
add
fld
adc
and
inc
rcrl
or
push
xor
imul
loop
inc
mov
adc
push
jl
inc
inc
add
shrb
pop
inc
jmp
pop
cmp
inc
inc
cmp
xlat
mov
aam
mov
imul
imulb
dec
test
push
mov
idivl
and
popa
mov
in
inc
sbb
xchg
jge
loop
fnstenv
in
fidivs
out
add
and
cmp
mov
jnp
dec
xor
loopne
cmp
push
add
dec
and
jl
lahf
jge
sub
push
xor
add
jne
adc
mov
testl
cmp
inc
inc
cmpsl
shlb
dec
push
sub
xchg
xor
adc
pop
sbb
insb
push
and
jbe
inc
xchg
pusha
pop
clc
andl
dec
xchg
aaa
dec
xchg
add
pop
lea
inc
les
loopne
push
fsubp
mov
push
lcall
push
mov
push
popa
leave
sub
pop
or
xor
mov
cmp
dec
add
lods
xorb
mov
and
add
testb
adc
and
adc
add
cmp
ret
dec
lahf
or
sub
mov
or
pop
aaa
adc
push
push
dec
cmp
xlat
xor
push
enter
cli
std
sbbl
jge
or
jns
dec
sub
cmp
jo
sbb
fdivs
sahf
adc
or
add
or
sub
add
je
add
adc
and
add
sbb
sub
adc
fisttpl
jecxz
adc
je
stos
test
int3
pop
adcl
pop
jno
enter
inc
xchg
lock
cmpsl
flds
cmp
pop
test
inc
aaa
add
cmp
movsl
mov
lock
aaa
or
mov
sar
add
test
push
andl
pop
loope
pop
adc
add
cmp
or
adc
enter
push
sub
jl
sbb
sbb
add
in
and
push
sub
sbb
leave
push
inc
fbstp
scas
dec
push
jecxz
inc
mov
xlat
mov
dec
fadds
pop
and
imul
cmp
mov
movsb
push
ds
xor
xor
pop
rolb
mov
inc
pusha
xchg
mov
lea
mov
xor
add
data16
je
sub
inc
or
add
je
js
and
mov
pop
cmp
jl
xor
lret
into
dec
inc
cmp
jns
dec
fadds
rorb
cmp
pop
in
aaa
shll
dec
push
cmpb
es
push
out
push
punpckhdq
jl
shrl
pop
cli
icebp
dec
mov
loope
ret
sbb
or
std
dec
xchg
mov
push
pop
je
push
mov
cmp
pop
jae
pop
xorb
inc
cmp
or
push
iret
mov
xchg
xor
loopne
cmp
inc
and
pop
jne
add
jge
sbb
scas
sti
push
jmp
push
sbb
aaa
inc
shll
dec
int
xchg
ret
xchg
stos
xor
bound
pop
push
jne
jl
jo
faddp
inc
mov
dec
push
inc
jecxz
lds
lret
xor
push
mov
jbe
lea
shl
lods
rcll
pop
sub
movsl
xchg
sahf
push
rorb
les
xchg
and
mov
add
sbb
pop
mov
xor
or
stc
jbe
loopne
scas
pop
push
pop
sbb
nop
imul
adc
js
add
xorl
loopne
pop
mov
and
aaa
inc
andl
mov
inc
fs
or
mov
nop
push
fldl
lods
or
and
ret
sub
pusha
push
rorb
je
inc
mov
dec
and
subl
sub
cmpsw
aas
mov
adc
push
mov
mov
jle
std
add
mov
je
mov
aas
ret
xchg
mov
adc
ds
lock
adc
je
js
cmp
in
je
lret
mov
lock
sub
sbb
or
xor
insl
popa
lods
les
out
insb
dec
sbb
cmp
lods
or
sbbl
inc
adc
sub
add
addl
sub
mov
xchg
adc
mov
cmp
push
xor
push
cmp
and
data16
aam
jbe
aas
jne
xor
xchg
test
mov
testl
push
or
fisubl
push
cmpsl
ret
out
mov
adc
add
push
dec
cmpsl
test
inc
aaa
mov
add
sbbl
pop
fdiv
je
shl
rcrl
ret
add
in
add
mov
jmp
adc
cmpb
jne
movsb
aad
add
push
mov
ss
xchg
mov
dec
sub
add
adc
mov
in
je
adc
or
hlt
mov
mov
dec
inc
push
imul
add
loopne
and
push
adc
xchg
shrb
xchg
and
adc
mov
in
aad
cmpsb
shl
clc
push
dec
jge
jl
add
pop
push
and
call
cld
mov
and
mov
movl
dec
or
dec
in
mov
cmp
rorb
sbb
aaa
fiaddl
and
and
dec
sub
mov
inc
add
fs
mov
shlb
jne
inc
or
mov
lods
xchg
test
and
jl
movsl
out
pop
and
adc
mov
push
adcl
mov
arpl
add
fs
stos
ljmp
fwait
rcl
mov
dec
push
jecxz
pop
xor
nop
cmp
lods
int
mov
icebp
jnp
or
movsl
popf
inc
mov
sti
ss
addl
aad
cmp
test
cmp
and
adc
pop
bound
cmp
dec
rcr
sub
lock
push
or
xchg
shlb
mov
adc
shrl
cmp
dec
push
push
mov
imul
fiaddl
xor
jle
rcrl
lock
push
adc
mov
sub
adc
xor
jae
ljmp
add
xlat
into
popa
jmp
fstps
out
push
scas
dec
inc
stos
loopne
loop
push
dec
in
adc
inc
inc
or
loope
mov
add
fwait
jo
or
and
mov
insb
mov
xchg
jmp
dec
add
or
ja
add
movsl
adc
xchg
add
sub
adc
mov
ret
jp
pop
push
cmp
mov
test
or
and
add
fsubrs
ffreep
addb
fucomi
add
test
js
aam
je
mov
xchg
mov
inc
jle
adc
add
call
add
dec
clc
mov
push
mov
ss
out
or
sub
and
or
sbb
test
inc
in
sub
or
jg
cmpl
add
outsb
loope
test
and
jecxz
jecxz
adc
dec
pop
add
jl
movl
mov
popa
ret
cmpl
mov
gs
lahf
sub
sub
sub
fcmovnbe
and
xchg
enter
scas
ds
or
adc
cmp
sti
jmp
loop
jmp
inc
lahf
mov
aas
rorb
add
xchg
cmp
sahf
and
push
push
aad
mov
sub
adc
xchg
push
ret
mov
push
or
pop
jno
push
test
popf
daa
xor
dec
mov
cli
lea
add
adc
dec
inc
mov
mov
mov
outsb
loope
add
cs
cmp
in
bound
imul
push
dec
test
jecxz
push
mov
dec
push
xchg
or
mov
lods
in
or
pop
addl
inc
xor
dec
mov
pop
jne
add
push
pop
xchg
jno
fs
scas
sti
jne
shl
jb
push
push
sub
addb
cwtl
xchg
inc
inc
or
jo
mov
enter
loopne
xor
xorb
movsl
int
lock
or
inc
push
xor
xchg
test
inc
sbb
nop
push
mov
icebp
iret
clc
xlat
daa
sbb
dec
bound
jns
and
in
inc
fwait
pop
or
loopne
push
inc
adc
mov
sarb
loope
mov
dec
add
adc
xor
pop
sbb
push
fistpl
scas
sbb
xor
mov
push
push
ss
add
lea
jmp
push
mov
movb
imull
push
in
add
inc
mov
inc
mov
pusha
add
add
push
push
pop
leave
and
push
enter
jae
dec
push
adc
clc
sbb
jne
fsubs
mov
test
mov
sbb
dec
or
push
or
push
sbb
add
push
push
push
xor
pop
push
sahf
aam
push
and
jb
add
or
cmpsb
pusha
mov
adc
push
add
inc
or
or
sbb
sub
je
xor
jp
or
sarb
add
push
push
dec
push
cli
push
in
jo
xor
adc
in
jo
sbb
sbb
std
daa
popa
mov
sbb
mov
orl
mov
dec
mov
push
scas
fs
scas
push
test
inc
mov
cmc
clc
lock
add
jae
or
aad
add
jbe
enter
hlt
fstp
push
xor
add
inc
or
adc
xorl
pop
adc
es
nop
mov
mov
mov
or
mov
push
imul
in
push
lock
jl
push
dec
jmp
push
shl
testl
lock
data16
jg
inc
sbb
sarl
shlb
mov
nop
inc
or
xor
adc
cmp
lock
scas
push
stc
and
jge
movsb
adc
leave
bound
mov
lods
scas
adc
push
xor
adc
test
dec
in
inc
push
iret
jo
and
jne
insb
sbb
dec
mov
test
dec
call
mov
movsl
fwait
subb
mov
test
cmp
in
in
lret
add
jo
and
inc
sub
test
jno
jbe
cmp
add
jmp
in
push
enter
lea
adcb
push
in
shlb
inc
push
mov
rcrl
jmp
push
pushf
cmp
or
pop
enter
scas
fsubrs
dec
mov
add
xchg
sub
adc
ljmp
clc
iret
push
ret
mov
fsubrl
xor
mov
mov
mov
mov
mov
mov
lea
imul
add
rclb
mov
ljmp
jb
outsb
push
out
xchg
out
imul
test
mov
int
jno
xor
add
lods
loopne
jg
mov
adc
mov
fsubs
mov
cmp
jno
xor
or
xorl
cmp
shrb
sub
add
je
xlat
add
jb
rcrb
xor
sub
add
mov
mov
xlat
cmp
or
mov
stos
mov
xor
or
int3
or
mov
lret
push
pop
push
rorl
sub
push
pop
mov
adcb
hlt
stc
shrb
test
xlat
mov
push
into
inc
pop
adc
sbb
push
xor
or
pushl
inc
imul
fsubl
mov
jnp
jnp
mov
shl
push
fsubs
jl
dec
xorb
or
and
rorl
sub
adc
rep
push
subb
xchg
lahf
mov
test
loopne
sub
ss
sub
pop
or
test
pop
in
mov
sbb
in
je
stos
cmp
xchg
push
push
sahf
mov
jo
inc
into
repnz
xor
mov
jns
ds
pop
jns
pop
cld
mov
test
push
pop
push
mov
fidivrs
inc
mov
sbb
mov
or
or
rcl
sar
call
and
push
or
push
shl
push
mov
movsb
mov
mov
or
mov
stc
stos
add
adc
cmp
mov
enter
lfs
sub
shl
push
in
add
push
faddl
notl
daa
in
js
lret
pop
add
jecxz
shlb
cmp
scas
push
push
scas
inc
sub
clc
sar
pop
repnz
in
dec
jo
push
and
xchg
popa
js
enter
clc
push
add
clc
sbb
nop
rcl
enter
ret
dec
inc
cmp
xchg
cmp
scas
mov
adc
mov
add
mov
mov
repz
push
jne
clc
sbb
sbb
movsb
cmp
pushf
pop
or
sarb
mov
shr
nop
and
and
ja
data16
scas
or
or
adcb
rcrb
add
mov
imul
insb
or
mov
dec
rclb
out
int3
jne
movsbl
dec
sub
xorl
std
clc
adc
jbe
push
paddb
cmp
cmp
mov
adc
or
lret
mov
cwtl
jo
jo
les
inc
cmp
dec
xor
or
push
push
cmp
loope
inc
rorl
and
pop
sub
inc
add
jle
test
test
mov
cltd
pop
sbb
mov
cmp
jl
icebp
pop
add
pop
xchg
pushl
sub
movsb
push
fs
push
fildl
add
xchg
sbb
pop
cmp
out
cmp
push
add
hlt
push
inc
addl
and
pop
and
push
mov
pop
dec
ja
dec
add
pop
cmp
xor
add
sarb
cmp
stos
lcall
jb
add
jb
or
or
jnp
mov
jmp
or
jno
jmp
push
jmp
mov
jmp
adc
pop
adc
pop
adc
push
mov
jmp
adc
dec
adc
aas
mov
jmp
sbb
xor
jmp
mov
jmp
sbb
and
pop
xchg
mov
mov
jmp
and
int3
imul
inc
and
inc
verw
loopne
xchg
mov
dec
adc
repz
cmpsl
jge
mov
mov
fnstsw
in
cmc
std
add
sahf
out
adc
sahf
out
sahf
xor
cmp
dec
jns
out
dec
push
pop
pop
arpl
jns
out
insl
jb
jl
out
sahf
addl
pop
into
add
add
push
pop
or
and
idiv
jg
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
xchg
mov
arpl
mov
add
test
rcrb
lods
cmp
in
and
mov
or
cmp
cmp
xchg
out
imul
or
shlb
aam
stos
shr
sub
out
pop
mov
fsubs
addl
push
xor
dec
mov
lods
jbe
aaa
xor
mov
or
decl
sbb
adc
pop
mov
cmp
loope
pop
inc
xor
xchg
inc
cmp
mov
lea
and
sub
sbb
cs
lret
and
adc
adc
movsl
mov
fsub
jbe
cmp
cmpsb
xor
mov
test
call
xor
inc
jmp
xchg
fadds
add
pop
or
iret
and
sbb
loop
faddl
add
adcl
jns
mov
test
mov
dec
rcrb
cmp
jae
sbb
ljmp
pop
das
inc
mov
inc
jge
push
adc
data16
sub
inc
pop
push
push
push
rclb
xor
pop
xor
fisubrs
xchg
loopne
sbb
insb
pusha
pop
in
pop
cld
add
push
outsb
add
adc
pop
add
sbb
xchg
sbb
call
stos
mov
add
xchg
jno
shll
adc
fbld
adc
pop
mov
pop
xchg
aaa
in
mov
call
add
jb
movsb
ret
push
push
movsb
and
dec
adc
rorb
pop
push
inc
push
xchg
mov
xor
je
pusha
xchg
push
mov
ror
jg
lcall
xor
fld
ret
or
call
xor
add
add
add
jne
jne
fsts
pop
iret
or
insl
push
and
and
not
and
xor
add
add
div
ds
sub
jge
fsubr
add
or
mov
ror
mov
sti
jg
data16
aam
cli
and
and
mov
push
rcrb
test
xor
or
add
fs
fcmovbe
lcall
mov
movsl
or
push
or
xlat
and
mov
into
add
add
dec
roll
call
jb
rcl
call
pusha
nop
xor
fwait
xchg
subl
sub
ljmp
rol
rcll
add
movsb
imul
fsub
in
mov
cmpsb
in
aam
xor
dec
in
shl
in
sub
dec
fwait
push
cmp
data16
add
or
cmp
loopne
cwtl
mov
aaa
fadd
xor
call
rorb
add
call
enter
cmp
dec
shll
pop
cmp
aam
jl
pop
xor
test
inc
jl
or
cmp
cmp
pusha
cwtl
cmp
add
sahf
xor
test
jge
and
call
xor
or
add
and
xor
pusha
xor
push
xchg
lock
and
xor
add
push
ret
push
jo
ficoms
or
les
pushf
xor
or
filds
sbb
addl
jne
mov
pop
pop
dec
inc
sbb
lods
dec
fadds
pop
fs
lcall
insl
and
ficompl
aas
outsb
lret
push
clc
jl
push
and
add
shlb
and
cmp
xor
fs
call
test
mov
mov
out
aam
xchg
fisubrl
arpl
add
cli
and
xchg
mov
rcl
cmp
and
call
in
mov
shl
rolb
subb
ss
or
push
xor
inc
or
inc
or
cmpsb
sub
dec
loopne
or
loopne
call
or
or
imul
lcall
adc
add
sub
inc
sbbb
js
scas
pushf
and
pop
add
xor
fs
and
nop
out
push
pop
inc
mov
cmp
enter
xchg
pop
ret
ficoms
scas
push
add
or
and
scas
inc
pop
inc
push
cmp
int3
pop
cltd
add
pop
fs
leave
in
movsb
pusha
shlb
or
xchg
sub
or
mov
mov
lds
add
aam
dec
xchg
dec
shll
or
fxch
pop
in
adc
pop
push
mov
ucomiss
inc
dec
xor
dec
shll
loopne
mov
or
adc
mov
sbb
and
push
mov
es
mov
dec
xor
cld
aaa
popa
out
pop
add
sub
mov
and
inc
inc
add
lret
jb
xchg
cli
add
lea
scas
add
insl
or
cld
sub
pop
xor
pop
stos
rcl
sbb
decl
outsl
ss
scas
mov
stos
lret
loop
lods
add
add
rorb
or
or
adc
push
popa
jne
add
pop
jbe
imulb
or
test
mov
pop
movsb
sub
loopne
lea
push
rolb
mov
subl
sub
pop
mov
ja
lret
dec
mov
jne
pop
cmpsl
and
das
scas
loope
mov
jl
test
or
enter
clc
aaa
jbe
or
or
fs
fists
mov
add
jae
push
in
add
mov
rolb
rep
or
add
in
mov
sbb
lret
fs
ret
ja
mov
fdivp
ror
mov
hlt
push
shr
xchg
or
mov
cli
pusha
loope
add
lea
push
inc
push
stc
shlb
movb
mov
rol
add
movl
jl
faddl
cmpsb
cmp
jbe
adc
notl
add
push
fadds
sbb
jge
sub
cmp
es
xor
inc
jl
push
add
gs
stc
ja
inc
ljmp
rolb
cmp
ja
and
les
cmp
add
xchg
dec
sbb
sbb
lock
inc
rclb
inc
inc
xchg
xor
add
adc
push
and
sbb
add
pop
gs
or
or
or
cmpsb
scas
mov
xchg
xchg
pop
mov
aas
cmp
xor
and
test
pop
pop
and
mov
mov
push
mov
mov
inc
fcmovnb
cmp
push
rcr
inc
pop
cmp
aaa
stos
xchg
icebp
adcl
insb
stos
insl
out
sahf
push
jbe
je
adc
call
push
pop
test
xorb
lock
lret
xchg
and
adc
push
cmp
lcall
mov
mov
shll
mov
xlat
mov
add
sbb
cmp
hlt
lret
out
fists
lret
sbb
add
push
mov
adc
ds
iret
cmp
sbb
test
cltd
leave
inc
jle
and
cmp
xchg
add
sbbb
mov
xchg
les
and
loopne
jno
xchg
push
jbe
adc
push
inc
jnp
and
add
cmp
inc
ret
xchg
adc
sbb
jle
adc
adc
jo
mov
jl,pn
arpl
inc
dec
inc
rcr
mov
mov
and
jle
mov
cmp
add
cli
es
lea
cmp
fdivrs
or
jne
or
js
shlb
dec
xor
adc
sahf
js
sbb
inc
push
aad
pop
pop
hlt
mov
inc
mov
or
std
push
outsl
or
icebp
jl
dec
sub
mov
jge
test
jae
ds
jb
xor
nop
pusha
and
cmpsb
dec
daa
lods
test
push
test
mov
mov
jge
add
daa
and
adc
js
sbbb
sbb
pop
mov
pop
call
inc
in
ss
or
sbb
ret
mov
inc
mov
and
mov
sub
or
xchg
lahf
cltd
ja
fs
jne
push
cmp
jbe
mov
add
fwait
and
mov
ret
sub
add
push
imul
imul
or
dec
les
jbe
ss
es
pop
add
ficomps
sub
mov
dec
test
push
sbb
adc
push
sub
mov
mov
bound
push
test
xchg
add
ljmp
and
push
pusha
jo
cmp
pop
add
jecxz
rcll
mov
scas
push
lcall
jo
fwait
clc
popa
adc
out
mov
dec
aas
push
add
mov
out
pop
rolb
dec
jmp
adc
inc
mov
mov
add
jnp
dec
or
jo
inc
sbb
lahf
fs
cmc
fldl
and
enter
sbb
imul
cmp
dec
andl
ja
loopne
movsb
mov
nop
push
ljmp
push
jmp
push
adcl
sete
jle
push
popl
mov
pop
js
dec
hlt
mov
fsubrs
sub
xor
add
clc
je
xor
ss
loopne
xor
adc
adc
push
or
fsubrp
lods
fs
push
dec
dec
scas
insb
push
out
xor
lods
enter
lds
sbb
in
testb
mov
lods
cmpl
adc
mov
push
mov
push
insb
adc
or
mov
push
aam
mov
fcmovnb
or
fsubrl
push
adc
push
or
xchg
cmc
repz
adc
lea
cmp
dec
jo
je
dec
ret
push
add
pop
clc
xchg
mov
pushf
jle
push
push
push
cmc
adc
repz
pop
adc
cmp
push
cmp
aam
push
mov
jg
adc
rorb
sbbl
mov
dec
cli
push
xchg
sub
mov
jnp
mov
sub
or
cwtl
mov
inc
and
inc
daa
rcrb
push
scas
dec
or
inc
pop
jmp
xchg
push
orb
mov
and
test
daa
stc
sub
lods
mov
orl
mov
sahf
adc
scas
jg
mov
mov
and
and
gs
mov
ss
cmp
and
data16
cli
add
adcb
aas
adc
aam
or
lock
xor
xor
lods
cmp
call
or
pop
shll
inc
inc
pop
inc
inc
cmpsl
imul
sub
and
or
stc
push
or
add
mov
cld
mov
jo
adc
jbe
divl
dec
nop
jb
fnstenv
das
out
enter
out
adc
ds
sub
fstl
shll
lret
adc
pusha
and
cltd
jae
adcb
sbb
cltd
cld
cmpl
test
aam
push
adc
and
insb
sbb
lds
push
xlat
nop
mov
inc
inc
pop
pop
xor
fsts
sbb
pop
push
jl,pt
cmp
mov
adc
je
inc
mov
data16
cmp
or
cmpsb
inc
bound
push
lock
pusha
je
scas
sub
in
ficompl
push
hlt
jecxz
inc
push
ss
push
push
or
notb
xor
mov
pop
xchg
popf
xchg
add
ljmp
daa
nop
mov
sub
adc
xor
and
xor
mov
inc
jle
lret
jae
mov
scas
mov
xor
or
push
dec
adc
inc
in
pop
jnp
sub
js
push
pop
xchg
pop
lcall
call
cmpl
das
cmpb
inc
xchg
add
inc
lret
dec
clc
inc
mov
ret
mov
pop
cmp
bound
stc
xchg
inc
pusha
sbb
cmp
ds
xor
cmpsb
pusha
lds
pop
or
mov
mulps
jmp
cmp
mov
or
movsbl
div
mov
push
xor
sub
dec
sbb
loope
cmp
inc
dec
imul
int
mov
xor
imul
and
mov
dec
scas
push
xor
scas
fs
pusha
je
roll
cmp
pcmpeqd
jge
jnp
test
push
test
and
push
mov
or
out
sub
mov
and
and
push
outsl
mov
jg
mov
xor
and
das
cmp
mov
cmp
push
enter
scas
jb
mov
sub
xor
je
push
or
push
out
sbb
rcll
in
add
add
or
xchg
add
mov
inc
and
inc
xor
je
dec
je
hlt
inc
dec
sbb
jmp
push
and
and
andl
icebp
sub
dec
pop
loopne
in
cld
inc
fidivs
xchg
cmp
fistpl
cmp
xchg
outsb
lcall
ret
lods
push
sbb
xchg
jne
lock
jl
inc
push
cltd
or
mov
jle
out
mov
out
sbb
or
ja
inc
js
jle
jecxz
lea
nop
lods
cwtl
les
cld
outsl
cli
lahf
lea
push
mov
nop
and
test
xchg
push
movsb
xchg
or
mov
fildl
icebp
sbb
jne
xchg
fstl
js
rorl
or
mov
arpl
sbb
jle
cmp
fisubs
cmpb
mov
adc
mov
ret
cmp
je
cmp
push
xchg
xorb
or
push
push
xchg
sbb
sbb
jge
sub
xor
xor
mov
sbb
fimull
sbbl
std
and
scas
sub
or
add
mov
jp
fcomp
add
or
pop
lea
add
ret
std
scas
add
mov
pop
fidivrs
mov
push
push
or
inc
lods
lretw
xchg
lods
cmp
lods
cmp
movsb
xchg
mov
inc
push
lods
xchg
test
push
in
repnz
xchg
push
xor
ret
pushf
add
js
in
push
adc
movzbl
push
push
xorb
je
ds
pop
repnz
test
push
inc
pusha
cmp
xor
add
pop
cmp
inc
push
mov
test
aaa
pushf
les
adc
hlt
pop
clc
mov
lea
daa
jmp
push
jg
je
cmp
lods
shrl
push
cmp
jge
add
adc
mov
push
inc
cmp
lea
cmp
mov
adc
xor
mov
aam
mov
in
repnz
add
lock
clc
jg
xor
cld
fbstp
mov
add
push
add
add
repnz
push
aaa
add
lcall
pushl
in
dec
je
add
adc
cmp
dec
or
mov
shr
cmp
mov
mov
or
mov
sub
xor
inc
icebp
adc
xor
ljmp
dec
or
cmp
and
cli
sub
sub
adc
je
dec
je
push
add
out
loop
sarl
adc
repnz
movsl
out
aas
mov
inc
add
jmp
sub
in
pop
push
cld
incl
push
mov
test
je
cmp
jne
sbb
fimull
mov
adc
shrb
mov
jmp
or
inc
inc
adc
clc
xor
inc
sbbb
inc
jmp
sbb
cmp
incl
imul
cmp
addb
add
push
adc
xchg
or
fiadds
mov
add
or
cmp
mov
stc
push
or
add
adc
push
aam
inc
or
lock
cmp
je
cmpsb
mov
pop
jbe
inc
test
jmp
daa
pop
pop
push
or
cmp
add
mov
or
mov
mov
and
mov
outsb
gs
jae
bound
ficompl
jmp
mov
sub
pop
dec
testl
arpl
adc
cmp
je
cmp
push
cmp
je
cmp
jne
inc
jne
clc
into
add
adc
sub
inc
pop
or
pop
inc
mov
add
mov
je
ret
mov
lea
cmp
jne
add
loop
cmp
jne
adc
cmp
or
loopne
inc
add
pop
push
push
inc
sbb
call
mov
mov
jp
jl
or
jg
push
ficompl
mov
jmp
and
push
jmp
sub
aaa
aaa
inc
jl
inc
jg
aaa
jp
add
int
fld
out
dec
mov
sub
mov
dec
je
sahf
mov
jle
scas
les
outsl
adc
test
mov
and
mov
pop
or
mov
lcall
sbb
xlat
xorb
push
out
mov
add
and
adc
outsb
xor
push
call
mov
jl
pusha
mov
jg
jbe
mov
push
fs
imul
mov
inc
mov
roll
adc
sub
aaa
lcall
xor
dec
sub
gs
loopne
pop
inc
xor
jne
push
jge
adcl
mov
imul
xor
xor
fsubs
inc
cmpb
push
xorb
mov
ret
adc
cmp
in
inc
inc
push
out
jmp
xor
les
sub
xor
mov
push
add
dec
jb
andl
fisubrl
in
ja
pop
ucomiss
or
fdivrs
push
cmp
out
adc
xor
mov
in
adc
enter
cmp
adc
je
roll
cmpsb
pcmpeqb
add
mov
mov
push
clc
int
mov
arpl
mov
pop
or
ja
loop
adc
cld
sub
sti
or
or
stos
sbb
mov
mov
sbb
imul
adc
cmp
sbb
xor
leave
or
sub
in
fadd
xchg
mov
sbbb
adc
xchg
add
add
test
sbb
and
adc
sub
inc
dec
or
jp
stos
mov
les
mov
xor
mov
mov
cwtl
or
icebp
inc
pop
mov
je
push
mov
adc
fucomip
add
push
push
lock
sub
jge
jne
add
push
int
je
add
push
and
rclb
sbb
loopne
or
adc
loopne
movsl
mov
adc
xor
inc
dec
push
sbb
in
sub
mov
movsb
sub
sub
and
pushw
mov
cwtl
adc
leave
rcrb
pop
inc
aad
xchg
xchg
push
adc
data16
mov
jmp
push
rolb
mov
fdivl
mov
lds
out
jl
ss
and
nop
dec
jge
mov
sahf
adc
push
jo
imul
mov
mov
jmp
sbb
add
add
mov
int
movsb
xor
or
inc
call
push
movb
xor
and
dec
std
dec
xor
arpl
push
cmp
ljmp
lcall
cmp
lods
aam
pop
inc
imul
jmp
sti
push
add
push
out
xor
pop
sub
fldcw
cmp
inc
ret
and
push
ds
cmp
outsb
mov
sahf
xchg
inc
or
push
or
xchg
or
adc
lahf
and
push
push
push
mov
lea
enter
sub
or
jle
leave
or
jmp
shlb
jmp
rolb
push
jmp
std
add
jns
cmpb
jne
mov
cmp
or
test
test
dec
sbb
push
sbb
icebp
mov
scas
jmp
or
ja
dec
movsb
xchg
or
ret
sbb
or
mov
aas
add
lods
ret
test
xlat
mov
inc
adc
rcrl
mov
rcr
dec
cmp
mov
insl
dec
and
xchg
test
mov
jb
lods
push
add
enter
es
adc
call
add
adc
inc
lock
mov
xor
push
jb
aad
mov
pop
repnz
cmp
add
ret
pop
adc
sub
push
addb
shll
repz
xchg
in
mov
insb
jl
jnp
mov
dec
pop
lret
dec
and
popa
es
clc
mov
sub
sub
test
shlb
inc
pop
rorl
push
adc
ret
jns
insb
outsb
ss
je,pt
inc
jo
push
jecxz
sbb
scas
fistps
shlb
cmp
hlt
add
xorl
push
es
cltd
and
mov
jl
fisttps
xor
imul
sbb
scas
test
jbe
movb
cmp
xchg
jne,pt
inc
jo
cmp
or
push
fimuls
push
or
jl
or
jns
cmp
das
mov
rclb
in
sbb
cmp
inc
dec
call
cli
std
mov
enter
call
out
popa
int3
roll
xchg
loop
inc
xchg
sbb
addr16
les
mov
xchg
jmp
sbbb
aam
pusha
pusha
mov
xor
cmp
or
mov
cltd
xor
popa
push
inc
test
leave
and
push
fwait
xchg
lret
sahf
or
ret
adc
xchg
jle
mov
push
jae
cmp
add
xor
lea
lcall
xor
mov
push
jmp
push
sbb
add
mov
jbe
shlb
ret
push
sbb
adc
xor
push
or
fsubrl
push
mov
inc
movsl
xchg
hlt
pop
mov
pop
mov
xchg
iret
xchg
jmp
adc
aas
push
xchg
mov
mov
lea
jne
dec
and
and
xor
inc
je
dec
adc
adc
and
arpl
shlb
dec
inc
push
dec
cld
minps
mov
mov
cmpb
add
imul
pop
inc
push
scas
push
inc
mov
mov
das
dec
sub
jg
fmul
or
dec
pusha
add
in
xchg
push
and
pusha
js
test
push
dec
add
push
mov
subl
push
or
jmp
ret
mov
filds
mov
je
and
xchg
lods
xchg
adc
mov
jne
jg
inc
jne
fimuls
push
add
movsb
push
pusha
inc
rorb
in
pop
dec
aas
add
xchg
dec
mov
add
add
into
int3
iret
incb
out
add
sbbl
add
mov
pop
add
inc
fsts
repnz
xchg
pop
add
add
jmp
cmp
jne
xor
jbe
sbb
jecxz
xor
movsl
xor
jns
dec
cmp
sbb
bound
out
data16
inc
dec
or
iret
sub
mov
je
mov
add
jns
enter
pop
scas
adc
xchg
push
sub
aas
mov
pop
sbb
pop
js
jb
push
test
mov
enter
pop
sub
pop
push
adc
jp
dec
xchg
mov
inc
or
in
jmp
dec
dec
dec
inc
mov
in
call
jnp
ret
rcrb
addr16
stos
pop
js
adcb
fadds
imul
cmc
in
sbb
cmc
jno
sbbl
into
or
add
fists
mov
fwait
xor
or
xorl
sbb
je
bnd
lods
jecxz
gs
dec
dec
jecxz
dec
xor
je
push
clc
adc
push
sub
or
ret
mov
int
lret
push
dec
stos
mov
xor
mov
sub
mov
in
into
add
outsb
xor
pop
mov
cmpsl
xor
lock
loop
or
jmp
bound
mov
mov
push
mov
mov
dec
cmp
pop
mov
xchg
insb
lock
fldl
enter
add
or
mov
jno
or
pop
or
mov
push
sahf
fs
aaa
int
mov
movsb
xchg
movsb
push
out
xlat
test
call
xchg
jo
adcb
int
cwtl
or
icebp
push
push
dec
cmp
cmp
sbb
push
int
test
push
and
shll
cmp
stc
inc
add
loopne
rcl
movsl
or
movl
mov
ret
mov
push
or
or
sub
and
adc
test
adc
push
inc
mov
sub
fwait
or
enter
popa
das
mov
mov
and
jno
lea
ss
cmp
orl
fdivl
js
idivl
aam
loopne
in
cltd
sub
sbb
jns
out
sbb
push
imul
or
sbb
sub
leave
call
sbb
sub
pop
pop
test
add
cmp
mov
or
jo
dec
test
add
ret
or
out
adc
jmp
sub
inc
adc
arpl
fmul
addb
out
dec
jmp
adcl
pop
pop
ds
cs
loope
add
ss
xchg
dec
add
sarl
sub
call
xor
pusha
and
sub
mov
xor
jmp
mov
dec
mov
loopne
and
cmp
cmp
add
iret
insb
inc
sub
fs
jo
inc
arpl
mov
imul
sarl
andl
ret
outsl
mov
xor
or
jnp
jecxz
pusha
cmp
dec
dec
les
daa
pushf
and
out
or
inc
xchg
adcb
loop
cmpsb
mov
adc
xchg
mov
repnz
test
fistpl
cmp
sbb
les
inc
subb
and
pop
jmp
mov
lcall
sbb
push
or
popf
xchg
adc
add
inc
sbb
ss
lock
push
xor
adc
pusha
je
adc
sbb
or
decb
daa
xor
dec
or
cmp
inc
or
ror
pshufw
push
jns
add
or
aaa
cmp
aam
sub
jo
sbb
int
and
mov
dec
mov
ja
pop
rcll
cmc
arpl
outsb
nop
loopne
iret
fwait
xchg
or
fmull
inc
leave
lret
push
dec
sub
subl
add
pop
sub
adc
js
int3
fstl
ret
adc
ja
popf
mov
adc
add
addr16
mov
sbb
xor
mov
jg
cmp
pop
dec
inc
mov
or
inc
jo
xor
lea
cmc
mov
dec
aad
test
xor
jne
pop
pop
mov
dec
pop
mov
push
pop
daa
sub
inc
jne
pop
push
sahf
pop
shrl
lods
mov
adc
adc
mov
movb
inc
or
push
or
lock
pmullw
ds
jge
push
adc
dec
or
cmp
push
jmp
lea
adc
jmp
xchg
push
push
in
pop
dec
cmp
mov
cmpl
mov
mov
fisubl
hlt
dec
and
jne
in
add
orb
push
add
dec
add
and
or
lock
in
insl
popa
and
cmp
and
adc
loopne
mov
js
add
push
arpl
sub
addb
loopne
call
add
dec
aad
adc
cmp
jecxz
in
mov
ds
mov
or
lock
jmp
jne
repz
adcl
xchg
mov
xchg
push
pop
inc
add
adc
xchg
jl
addr16
in
jae
cmp
pop
xor
fisttpl
xchg
or
jo
mov
loopne
sbb
push
push
xor
aaa
nop
stos
add
sbb
xor
add
and
jge
xchg
fidivrl
ret
rep
adc
data16
and
sub
arpl
dec
sbb
in
adc
sbb
ds
push
jmp
out
mov
xor
mov
pop
add
scas
stos
pop
jg
jbe
das
pop
sub
sar
icebp
sub
movsb
cmpsl
pop
sbb
mov
cmp
ja
xor
and
sub
daa
push
leave
sub
or
js
decl
xchg
jbe
xchg
jle
je
lods
stos
push
rcll
rcrl
pop
adc
hlt
sub
jo
pop
mov
test
or
inc
jmp
inc
daa
cmpsl
loopne
js
sub
lock
xor
cmp
mov
ret
lds
out
mov
sub
xchg
jne
mov
js
adc
sub
cld
or
adc
push
and
add
mov
loopne
cmp
insl
loopne
jle
add
cld
add
jb
orb
call
sarb
push
xchg
scas
cld
data16
fisttpl
sub
aad
dec
dec
pusha
lock
inc
jg
into
mov
pop
jo
movsb
or
out
and
inc
xor
cwtl
pop
add
push
cmp
movsl
xchg
pop
adc
or
or
mov
out
and
test
jbe
cmp
dec
mov
inc
dec
xor
popa
pavgb
dec
and
inc
rclb
add
aas
xor
mov
xor
inc
sbb
pushf
stos
imul
add
js
data16
cmp
addr16
es
lds
and
aas
pop
out
ret
cmp
pop
in
mov
pop
add
inc
jle
or
push
lods
mov
adc
aam
add
pop
es
scas
inc
jmp
inc
push
stos
stos
gs
xchg
inc
ss
aam
fs
clc
notl
test
loope
adc
inc
inc
test
lea
add
mov
inc
sbb
clc
dec
xor
inc
pop
adc
or
shrb
mov
cld
sbb
rolb
add
adcl
sti
aam
pushf
in
mov
jb
and
inc
push
jmp
jae
aaa
adc
push
lret
cwtl
add
les
dec
test
add
or
push
inc
adc
ds
pusha
cld
inc
je
sar
xor
out
jecxz
inc
in
add
jge
xor
sub
pop
lock
dec
imul
and
mov
pop
cmpl
subb
clc
stos
and
je
loopne
mov
ret
push
stos
lret
inc
inc
ds
cmpsl
push
xor
mov
pop
movsb
mov
ret
push
mov
inc
and
aaa
pop
jae
enter
test
popa
push
jl
pop
dec
push
adc
rclb
es
pushf
dec
enter
mov
sub
mov
sub
or
mov
add
or
fs
test
add
push
je
cmp
jbe
push
popf
pusha
rorb
stc
call
loop
push
lret
sbb
pop
push
movl
pop
ret
mov
lcall
mov
or
or
ss
cli
pop
inc
daa
or
test
lods
jbe
inc
inc
adc
inc
cs
inc
adcb
filds
push
test
data16
add
push
push
push
cmp
inc
das
lock
xor
jne
mov
jmp
xor
dec
aas
scas
push
cld
or
inc
jo
ljmp
add
pop
add
and
lea
push
cmpsl
loop
shlb
jno
jmp
inc
push
adc
push
popf
jp
lods
lods
xchg
outsb
data16
test
dec
cli
sub
push
mov
ficoml
pusha
xchg
pop
or
popf
std
xchg
insl
dec
shll
mov
sbb
push
and
and
mov
cmpsb
mov
fwait
mov
cwtl
outsb
mov
jne
mov
adc
fiadds
xchg
jae
jmp
jge
inc
shlb
push
xor
pop
div
hlt
add
movsb
mov
or
dec
jbe
mov
lea
divps
xchg
jmp
lods
push
dec
addl
inc
cmpsl
aaa
cmp
jo
adc
rcpps
add
in
in
and
mov
pop
sub
outsl
stos
sub
push
mov
cmpsl
sbb
push
dec
jb
fsubrl
mov
and
inc
push
pushf
mov
testl
lock
sbb
sub
add
or
imul
fdivrs
nop
shrb
fucomp
and
shrl
ret
jo
shlb
hlt
fwait
scas
adc
sub
sub
jne
bound
adc
out
adc
cmpsl
cmp
mov
test
rorl
jp
clc
int3
add
add
imul
incl
jb
cmpl
pop
add
push
cli
add
xor
fld
outsl
mov
sub
mov
mov
jne
hlt
sarl
add
or
xchg
fsincos
xor
stos
mov
dec
ljmp
ret
or
push
jg
dec
inc
add
shrb
xchg
mov
push
cmc
out
mov
daa
mov
adcl
inc
push
shlb
icebp
out
imul
or
test
test
xor
xor
or
add
mov
jb
pusha
cmp
ficomps
lds
jno
and
sbbb
psubusw
cs
fwait
pop
add
and
clc
jg
fs
jno
add
movd
movaps
jnp
push
enter
shlb
jle
xor
add
lret
je
or
jge
repz
or
jg
mov
ljmp
and
in
fisubs
mov
aam
ret
or
adc
push
hlt
adc
mov
pop
ficompl
xchg
repnz
addr16
ret
mov
add
ljmp
addps
int
add
out
adc
loopne
push
dec
sbb
cmp
pop
pop
test
inc
lds
shr
and
ret
mov
lea
aam
pop
sarb
xor
xor
pop
add
add
xorl
fdivs
mov
lret
or
popf
lcall
lret
sub
nop
inc
fcmovb
ret
adc
std
cld
gs
shl
inc
hlt
gs
lods
pop
and
stos
mov
add
mov
arpl
shlb
push
inc
dec
pusha
ret
pop
or
adc
mov
test
loope
jb
pop
incb
ficoms
cs
lods
ds
inc
sub
sbb
in
clc
ja
mov
jbe
lcall
inc
cmp
jne
inc
cmpb
out
addb
or
xor
rorb
inc
and
adc
insb
addr16
fimuls
push
or
mov
arpl
ret
daa
sub
loope
xchg
andb
mov
addr16
ret
imul
mov
or
mov
xchg
int3
jo
nop
xchg
xor
xor
sbb
mov
or
mov
sbb
cli
add
dec
xchg
xor
rol
add
push
mov
test
adc
adc
cmp
xchg
push
rcrl
shrb
jns
add
push
xor
mov
inc
pop
sbb
push
jne
inc
adc
ret
mov
push
push
movb
les
ret
sbb
pushf
pop
addr16
lock
sbb
sbb
ret
push
sbb
pop
test
mov
sub
mov
shlb
or
inc
xor
adc
mov
addr16
movsb
jnp
out
jbe
je
jp
leave
icebp
sub
into
movl
loopne
xchg
imul
pushf
push
or
mov
dec
fwait
inc
fwait
pop
cmp
jmp
jae
add
out
idivb
cs
add
jl
mov
or
cmc
add
daa
call
test
push
dec
add
or
popa
rorl
jle
xor
ja
and
int3
stos
push
sbb
xor
sbb
ret
sub
inc
cmp
or
jmp
arpl
cmp
int3
sbb
add
ja
imul
loopne
lock
or
fists
sbb
or
movsb
fldt
fidivs
dec
movsl
or
sarb
shlb
aas
pushw
add
mov
xor
inc
data16
push
xor
das
jnp
push
ret
add
je
jae
adc
pushf
push
enter
sub
jecxz
lock
jne
das
jo
pop
inc
adc
dec
pop
ret
add
jmp
in
jae
pop
aaa
pop
loop
icebp
mov
and
rolb
shrl
pop
or
shlb
jbe
jmp
adc
cwtl
xor
packsswb
pop
movsb
pop
inc
inc
push
sub
adc
or
cld
jne
and
pop
cld
aad
and
jo
hlt
les
out
outsb
jne
out
jmp
add
ljmp
int3
testb
je
inc
mov
cmp
mov
leave
es
loope
or
cmp
jne
dec
jmp
inc
cmpsl
dec
es
jl
or
lret
jne
inc
aaa
push
lds
mov
mov
loope
jne
adc
adc
mov
push
push
pop
xchg
hlt
push
call
dec
push
rolb
or
loop
std
int3
mov
mov
mov
roll
cmp
cli
xlat
and
mov
cmp
mov
repz
pop
and
arpl
fdivl
jne
test
or
sbb
out
into
cmp
jb
rep
jmp
mov
cmp
jb
jnp
jae
outsb
add
cs
fs
loopne
push
mov
mov
and
inc
push
and
ficoml
adc
sub
inc
add
add
pop
shr
lods
adc
sbb
push
dec
add
dec
cmpsb
nop
inc
xor
xchg
sbb
or
push
lods
repz
repz
movsb
pushf
xchg
mov
inc
mov
mov
call
jns
in
lock
hlt
clc
bound
out
clc
cld
shlb
mov
clc
sbb
mov
xlat
jmp
and
or
or
into
nop
inc
pop
pusha
sbb
and
loop
mov
sbb
lea
jl
cld
jl
daa
mov
cld
out
insb
addr16
lods
neg
adc
sbb
daa
in
xchg
xchg
xchg
stc
sub
pop
nop
xorb
cmp
push
movsb
push
int3
fiaddl
jl
mov
out
add
push
ficoms
push
out
push
add
nop
dec
dec
addr16
dec
mov
fs
iret
repz
mov
or
push
xor
inc
repz
cmp
push
arpl
sbb
repz
sbb
sbb
adc
repz
or
or
dec
enter
inc
jl
adc
push
xchg
test
aaa
sub
xchg
cmpsb
push
add
pop
punpckhbw
xchg
daa
ja
daa
dec
aaa
pop
push
pop
jbe
push
sbb
gs
mov
pop
inc
cmc
sub
push
fimuls
dec
orb
mov
and
iret
insl
xchg
adc
fidivs
sub
in
outsl
inc
cmp
fists
popl
mov
dec
movsb
pop
cmp
push
lcall
test
inc
iret
mov
dec
es
jmp
lea
mov
or
cmp
inc
and
popf
push
lea
xchg
daa
fildl
mov
pop
outsb
aad
and
inc
cmp
pop
or
xchg
cmp
xor
popa
imul
adc
xor
imul
add
enter
jp
dec
pop
outsl
out
pop
jmp
punpckhbw
or
test
movsl
inc
mov
aam
sbb
xchg
inc
and
pop
sub
cltd
pop
std
jb
and
and
jp
dec
cmp
pop
pop
cltd
mov
jecxz
push
sbb
js
dec
adc
fcoml
dec
push
jle
xchg
insb
sbb
arpl
fndisi(8087
add
push
jbe
sub
inc
aaa
pop
shrl
xchg
cmp
pushf
mov
cmp
into
lea
cmp
andb
add
jmp
sub
dec
jnp
and
sbb
push
adc
or
add
out
mov
jne
pop
fcompl
call
jns
jl
jle
push
or
add
imul
and
push
or
add
aam
adc
les
jne
fldenv
pop
adc
pop
push
xchg
stos
shlb
inc
cmp
mov
cmpsb
mov
mov
inc
pop
ljmp
fdivs
mov
shr
mov
adc
pop
sub
sahf
adc
imul
jb
jle
pop
dec
pop
and
push
fistpll
xor
clc
fwait
ss
pop
das
mov
aaa
ss
loop
nop
fidivs
or
repnz
and
add
xchg
push
or
push
xchg
adc
inc
fstpt
inc
les
orb
call
fsubrs
cmp
xor
push
push
sbb
jne
xchg
ljmp
mov
push
mov
insl
mov
fimull
inc
rorb
repnz
dec
pop
mov
add
add
mov
in
js
xchg
mov
cmp
rcrb
std
jne
scas
add
repz
or
add
jg
sub
sub
loopne
js
push
ljmp
in
insb
cltd
testl
adc
jmp
push
sub
push
fmull
mov
dec
jecxz
fs
or
lahf
inc
mov
or
pop
cmp
xor
fs
pop
sbb
sbb
roll
ja
add
inc
dec
mov
dec
fists
mov
push
sub
push
negb
pop
add
or
or
shrb
ja
jp
rorb
cmp
out
push
sbb
or
pusha
xchg
cld
jb
jp
sub
push
clc
jbe
add
pop
cmpsb
pop
add
adc
addl
popa
jmp
push
mov
add
jmp
test
jne
test
scas
adcb
cmp
xorl
orb
lods
cld
jbe
jle
mov
cmc
je
cmpsb
notl
mov
pushf
pop
hlt
pusha
push
dec
lock
ret
xor
negl
cld
rolb
pop
out
inc
and
testb
les
xor
add
arpl
lods
mov
into
adc
nop
in
mov
popa
call
ljmp
mov
pusha
dec
sti
mov
orb
adc
dec
or
aas
pop
and
or
shlb
or
pop
data16
outsl
push
xlat
pusha
sub
pusha
insl
xchg
roll
mov
or
hlt
or
mov
or
leave
inc
dec
push
rolb
jns
xor
push
test
shl
inc
adc
cwtl
rcr
outsb
jl
mov
pop
adcl
dec
test
jmp
cmc
or
rclb
jge
xor
pop
rclb
aam
insb
xchg
push
pop
add
fs
frstor
rcl
js
mov
ret
rorb
repnz
and
pop
rolb
cs
dec
jne
jmp
add
push
xchg
adc
cs
cmp
dec
cmpsb
dec
jne
ret
jmp
cmp
es
pop
pop
inc
sahf
xchg
push
pop
and
pop
mov
mov
data16
mov
movsl
stos
ds
test
pop
andb
push
shlb
decb
into
lock
and
neg
sub
cmp
jne
mov
push
mov
std
jne
es
jne
outsb
stos
cltd
cmpsl
call
aam
mov
icebp
cmpsl
add
jb
jmp
push
inc
incl
dec
mov
jns
pop
inc
adc
jmp
std
push
out
jle
xor
cld
cld
jmp
fldt
mov
in
adc
adc
inc
inc
inc
ss
add
inc
ljmp
pop
ret
mov
lcall
in
xchg
aam
and
xorb
shrb
dec
and
mov
pushaw
sbbl
push
jp
popa
xor
inc
cmp
or
xchg
roll
addb
inc
add
adc
adc
mov
lahf
or
and
or
leave
adc
in
push
pop
pop
loopne
and
pop
pop
lds
es
or
pop
or
mov
lods
and
mov
pop
add
xlat
add
push
cli
push
mov
pop
jne
fwait
dec
loope
fmuls
add
or
and
add
mov
push
and
mov
mov
ret
sub
push
push
push
push
inc
test
and
lret
loope
or
add
push
divb
out
fs
jno
add
dec
add
lea
push
inc
frstor
add
cmp
mov
adc
add
and
arpl
add
sar
sbb
or
lret
ret
loope
cld
and
push
jb
daa
call
adc
jmp
mov
push
xchg
movb
gs
push
fbld
push
mov
mov
xor
jns
ss
and
xchg
test
int
cs
hlt
mov
test
dec
mov
xor
stc
push
mov
push
fimull
pop
xchg
call
or
adc
push
xchg
clc
or
add
add
push
xor
shl
fmuls
cs
sti
jge
not
and
sub
add
pop
mov
sbb
out
mov
lock
rcrb
adc
imul
adc
dec
inc
pop
mov
add
test
xchg
sub
xor
pop
push
ja
jne
xor
cltd
insb
pop
mov
push
lcall
xchg
jmp
add
icebp
jg
incb
mov
inc
je
mov
lea
neg
mov
lock
mov
or
add
jmp
or
mov
inc
inc
cmpsl
mov
loope
sbb
roll
mov
pop
add
mov
sbb
fdivr
inc
cmp
jb
jno
jge
orb
add
data16
pop
pusha
add
cmp
ret
cs
sbb
adc
clc
lods
subl
xchg
adc
add
add
sbb
add
jmp
fsubs
mov
mov
mov
divl
lret
in
imul
stc
addl
xor
jo
xchg
fst
rolb
or
mov
shl
jne
pop
fiaddl
push
ficoml
and
ljmp
jecxz
daa
repnz
repz
mov
aam
xchg
pop
dec
cmpsl
add
inc
mov
inc
lret
sbb
mov
loopne
mov
pop
ljmp
ret
in
mov
iret
dec
lea
jl
and
outsb
sahf
sarb
fbld
cld
rclb
pop
dec
mov
and
inc
arpl
xor
pop
mov
imul
inc
jmp
cmp
sbb
jmp
adc
jne
sub
sbb
xlat
ret
cmp
adc
fimull
and
cmp
movsl
lret
adc
clc
js
inc
jns
out
or
and
adc
adc
pop
mov
fidivrs
pop
lods
adc
mov
push
aam
xor
or
mov
and
je
lret
or
dec
pusha
je
lea
push
sbb
sub
jo
inc
leave
and
orl
push
jp
push
jbe
push
add
and
dec
movsb
and
call
jecxz
push
lea
in
aad
push
adc
shl
cld
std
mov
nop
dec
inc
cltd
sbb
mov
push
adc
add
sbb
push
popa
insl
xor
dec
in
xor
cmp
insb
les
jmp
push
in
push
stos
mov
lds
sub
sbb
push
pushf
adc
jmp
aaa
ja
inc
loope
add
add
lock
and
hlt
mov
inc
mov
dec
jne
fs
add
add
bound
iret
add
push
inc
pop
insb
xor
adc
xor
add
xlat
lds
push
inc
push
inc
lods
sub
push
adc
orl
cmp
andb
sbb
sbb
dec
mov
je
adc
mov
push
or
imul
inc
cmpsl
fisttpll
xor
jno
enter
mov
xchg
and
push
adc
cwtl
sub
movsb
pop
outsl
inc
mov
jno
or
int
mov
adc
mov
pop
nop
jb
lea
push
adc
or
in
mov
xchg
adc
add
cmp
mulb
dec
js
clc
gs
xor
push
clc
mov
es
imul
inc
mov
mov
xor
jg
mov
lret
daa
or
pop
jne
or
jno
sbb
inc
dec
lds
or
pop
jmp
iret
movsb
mov
dec
xor
pop
or
mov
mov
push
xchg
es
or
in
in
outsl
inc
stos
mov
int3
movsl
xorl
test
push
mov
pcmpgtb
push
outsl
mov
push
shrb
add
jmp
mov
clc
xor
jo
stos
push
mov
fistpl
or
push
inc
sar
hlt
push
in
inc
xchg
insl
xor
inc
jecxz
inc
sub
pop
test
xor
or
inc
fdiv
lret
cmp
add
incl
ss
inc
mov
pop
fisubrs
xchg
fcomps
rcrl
clc
or
sti
or
gs
out
inc
xor
adc
and
sahf
data16
adc
add
or
push
into
dec
clc
ljmp
adc
loop
and
or
dec
in
mov
xlat
jle
mov
les
ja
cmpxchg
jp
mov
pop
or
mov
js
pusha
mov
and
push
push
dec
xchg
dec
pop
cld
dec
add
imul
jge
arpl
popa
orb
add
outsb
sub
in
inc
mov
imul
or
mov
pop
dec
add
insb
push
inc
loopne
push
jne
pop
addl
xor
das
decl
cmp
pop
imul
sbb
mov
jbe
sbb
push
mov
sti
ljmp
pop
mov
aad
xchg
sbbb
popa
push
rcll
mov
pusha
adc
shll
ret
and
and
dec
ficoml
or
std
push
dec
loopne
dec
test
test
push
pop
sub
mov
inc
mov
jne
and
mov
adc
fdivrl
into
add
add
sbb
inc
adc
jnp
out
or
repnz
add
ja
sbb
adc
clc
mov
es
fldl
and
sub
pushl
sbb
rolb
dec
dec
inc
imul
aaa
popf
fcoms
mov
jg
sub
mov
mov
jle
adc
inc
adc
adc
cmp
adc
adc
cmp
dec
xchg
fcom
pop
iret
sub
sub
je
loopne
js
mov
mull
pop
add
clc
adc
fs
mov
adc
inc
je
testb
mov
mov
stos
cmp
push
or
call
movsl
jmp
dec
je
add
or
jmp
cltd
rcrb
fstp
jnp
outsl
jno
push
sbb
add
jmp
push
xor
push
push
fisttps
or
adc
cmp
jg
test
push
stos
push
lea
push
inc
cmp
vcmpunord_sss
rcll
add
xor
arpl
xchg
cmp
shlb
push
push
push
addr16
sub
mov
addr16
add
dec
or
loopne
call
mov
xchg
popa
jb
push
repnz
push
test
je
mov
add
cmp
and
dec
sub
iret
mov
cmovp
mov
popa
dec
or
mov
pop
pusha
mov
mov
add
dec
loopne
mov
ds
rol
filds
iret
or
js
xchg
push
setb
leave
add
ja
rcr
xchg
add
jmp
rorb
add
dec
jno
xor
jae
push
jmp
sub
push
push
pop
dec
loopne
scas
adc
or
push
fsubrs
adc
inc
js
imul
jae
pop
daa
lods
orb
jae
sub
inc
add
pusha
jne
adc
sbb
jp
ret
push
push
test
lock
js
fs
pop
adc
loop
pop
lea
add
sub
rolb
in
xchg
cmpsb
dec
or
test
or
fst
fsubrl
add
xor
je
mov
mov
sbb
dec
and
add
cmp
mov
pop
jle
call
aaa
push
pusha
ss
cli
or
lea
cs
xchg
and
dec
js
movsb
mov
push
scas
mov
cmp
add
mov
push
decl
das
ds
dec
cmpsb
pushl
sub
xchg
je
push
add
adc
push
inc
xor
lcall
dec
push
pop
sub
repz
mov
cli
push
push
dec
outsl
out
fs
pop
rcrb
imul
cmp
popf
rcl
lret
push
push
add
sbb
jmp
inc
lods
movsl
stos
in
push
or
insl
or
cld
dec
xor
sarl
ret
adc
add
dec
jmp
push
out
inc
in
data16
push
inc
cmp
je
imul
mov
stc
xchg
clc
push
mov
stc
mov
stos
xor
fs
cmc
mov
notb
imul
add
sbb
jge
insl
xchg
mov
imul
pop
mov
jle
inc
dec
or
je
xorb
ret
add
push
xchg
mov
out
jbe
mov
jmp
dec
or
mov
cltd
pop
inc
mov
push
dec
movsb
adc
ja
rcll
clc
or
stos
xlat
je
cmc
push
in
test
sub
jb
insl
push
jbe
sub
dec
pop
sets
inc
imul
push
ret
cmp
push
mov
nop
jae
in
push
add
jnp
or
sarl
mov
add
mov
dec
inc
mov
movsb
lret
inc
dec
inc
xorb
add
xchg
add
clc
mov
pushf
out
lds
jbe
jmp
push
add
cmpsb
sbb
xorb
scas
dec
and
mov
mov
adc
or
add
js
dec
ss
add
popa
rol
pop
es
push
test
cmc
jmp
dec
and
ss
mov
aam
push
push
mov
jl
jge
cli
loop
lods
or
icebp
adc
adc
aam
pop
lret
movsb
sbb
lods
into
dec
add
daa
mov
fmul
outsl
jne
push
push
and
sbb
inc
aam
sbb
sub
in
call
clc
push
and
dec
or
cmp
pop
jns
jbe
add
imul
fadds
insb
dec
ret
div
lcall
push
xchg
pop
sarb
stc
and
jge
jnp
sbb
cld
jmp
adcb
loopne
mov
jge
sahf
adc
in
push
test
mov
push
jae
test
lcall
dec
lcall
or
mov
ret
clc
cmp
cmp
daa
dec
inc
pop
pop
pop
inc
adc
lock
test
push
popf
lea
dec
jmp
pop
jae
and
mov
in
add
jl
cmp
stc
xlat
repnz
jle
pop
xor
or
cs
fsubrl
mov
clc
xchg
add
inc
ja
xor
in
xor
xor
into
je
fcmovne
lea
pop
jne
mov
fdivrs
xchg
jnp
enter
popa
jp
lea
pop
jnp
add
lds
out
repnz
jnp
scas
orb
dec
and
sbb
mov
xchg
repnz
push
jne
mov
mov
and
push
cmpsb
sahf
push
in
xchg
push
push
leave
jl
and
mov
negl
push
lea
in
nop
je
and
push
les
test
sub
incl
lahf
out
sahf
sub
sbb
or
mov
sbb
ds
sar
push
cmp
stos
loop
in
pushf
mov
mov
add
and
inc
pop
icebp
push
dec
lcall
mov
mov
push
outsb
add
jne
mov
out
sahf
testl
enter
lahf
shl
clc
mov
xchg
or
push
adc
nop
inc
lods
orb
ret
push
pop
nop
adcl
pop
cmp
add
hlt
sub
jecxz
dec
push
or
je
mov
movsb
mov
out
jmp
testb
sbb
pop
lock
sbbl
mov
rol
cli
add
pop
dec
add
add
inc
mov
and
sub
push
sbb
stc
xchg
dec
xor
lret
add
popa
adc
xchg
mov
and
test
add
jne
out
js
mov
dec
adc
mov
cmp
pop
pop
mov
xor
xor
repz
lock
pop
popf
push
ret
or
push
andb
jmp
negb
je
movsl
cmp
push
lods
cld
in
push
fstl
mov
aad
sub
sub
lret
sbb
xor
or
sbb
cmpb
xchg
insl
fsubs
mov
inc
mov
add
fadds
add
pop
cmc
rolb
cmpb
aam
push
rcll
aam
cmc
imul
test
or
push
std
adc
sbbl
pop
mov
add
sbb
movsb
hlt
add
inc
cmpb
lock
sub
add
rcrl
ss
mov
les
je
rolb
dec
jb
push
mov
ss
sbb
pop
jmp
loope
fucompp
insl
xor
sub
std
add
jo
add
sbb
add
or
adc
mov
xchg
push
and
clc
mov
sbb
sbb
or
dec
stc
repnz
or
jo
repnz
and
ret
mov
rolb
in
add
add
push
pushf
or
aas
sub
xor
mov
das
das
das
das
sbb
subb
pushf
popl
mov
jno
mov
testl
mov
ja
sbb
cwtl
cltd
sub
aad
jge
inc
enter
adc
subb
sbb
fsubr
dec
js
std
push
lcall
push
int3
adc
popa
or
push
xor
push
in
or
add
rol
add
xchg
ss
mov
pusha
decl
test
andl
ljmp
ret
sub
xchg
iret
xchg
rorb
fcoml
fcomps
int3
mov
xchg
clc
or
test
mov
mov
mov
cmp
mov
add
hlt
fistpll
insl
xlat
sbb
aam
aaa
dec
cld
xor
loopne
rclb
ror
pop
in
xchg
int3
jno
insl
push
jne
push
and
test
jecxz
in
das
adc
sbb
push
add
test
sub
pushl
pop
cli
add
mov
mov
inc
push
leave
sbb
adc
add
add
and
push
push
or
das
lock
dec
or
xchg
xchg
push
mov
and
shrb
lahf
jge
pop
imul
mov
mov
adc
jbe
push
lock
stos
rolb
push
jne
imul
or
or
clc
or
sbb
push
scas
movsb
jbe
add
push
adc
or
or
loopne
pushf
mov
xchg
insl
test
dec
push
shlb
loopne
jbe
push
push
jne
xchg
pop
call
dec
ljmp
sbb
stc
shl
add
pop
mov
mov
addb
outsb
mov
mov
push
pop
stos
and
cmp
sbb
add
and
cld
out
jmp
push
frstor
or
cmp
adc
mov
mov
test
push
or
pop
push
in
sbb
add
lret
gs
shl
sarb
test
in
mov
cmp
and
or
test
ror
xchg
sbb
sarb
leave
xchg
call
addr16
xchg
loopne
cmp
out
or
sbb
lahf
mov
mov
cmp
sar
lahf
lea
pusha
and
pop
ja
or
mov
xchg
xorb
push
sarb
add
sar
pop
lods
movsb
add
jbe
xchg
push
sub
jo
mov
or
lret
movsl
mov
loopne
sbb
pusha
xchg
mov
lcall
or
sbb
into
dec
pushf
mov
or
add
setg
jb
sbb
or
push
add
xor
sti
mov
adc
push
sti
add
or
mov
clc
adc
push
imul
cs
dec
lock
ja
movsl
mov
mov
leave
test
pop
orb
jbe
movsl
hlt
hlt
stc
rcr
push
add
push
sbb
xor
test
insl
and
jo
test
test
ds
jle
sub
scas
pop
ret
sbb
pop
and
fnsave
jne
js
add
movb
inc
xor
movsl
sbb
adc
out
inc
fs
sbb
sbb
imul
sub
js
rolb
add
pop
and
dec
and
btc
in
lods
dec
arpl
add
or
fdiv
sub
pop
jle
inc
je
xlat
add
or
add
fcmovb
and
ret
ret
adcl
mov
mov
adc
cmp
mov
push
arpl
push
or
nop
jbe
xchg
mov
ljmp
push
or
dec
and
in
subl
mov
mov
es
add
xchg
mov
adc
es
push
xchg
or
addr16
cmp
sub
inc
inc
push
insl
cmp
jl
xor
jmp
xchg
pushf
sub
sbb
dec
mov
repnz
sub
and
clc
cmp
dec
mov
test
cmp
or
pop
pusha
or
aaa
pop
sub
lds
dec
sub
aaa
inc
cli
inc
stc
jo
xlat
mov
mov
cmovns
sbb
dec
ret
inc
seta
stos
mov
ret
lea
cmp
pushf
mov
sbb
movsb
imul
dec
shrl
add
pop
gs
inc
mov
mov
add
addr16
insl
je
hlt
xchg
pusha
je
or
sub
cmpsb
or
ss
ss
jo
pop
lret
xor
mov
fildll
mov
xor
sbb
xchg
daa
sub
adc
xchg
mov
sbb
or
and
mov
add
jp
fcoms
mov
mov
adc
jge
movsb
addr16
mov
jmp
cmp
jle
mov
out
mov
cmp
scas
jo
jno
cmpsl
ja
pop
fs
stos
pusha
and
insb
adc
mov
sar
push
shr
push
push
insb
dec
lods
or
or
inc
cmp
adc
adc
insb
mov
loope
jne
push
push
xchg
sub
inc
sbb
cmpb
mov
mov
push
xrelease
imul
dec
add
cmp
call
enter
cmpb
jne
xor
cmpsb
adc
stos
mov
lea
hlt
sub
and
jae
pusha
cld
xlat
add
jo
inc
pop
adc
lods
push
adc
fwait
dec
loope
popa
roll
sub
mov
cmp
inc
mov
rcll
mov
adc
ss
dec
dec
sub
push
cltd
je
sbbl
add
jo
fcoms
push
push
add
fidivrl
jno
xor
pop
mov
jnp
or
sbb
push
lock
and
mov
or
or
and
jnp
fmul
lea
or
or
and
push
inc
les
cltd
push
popf
call
sbb
shll
clc
repnz
loop
mov
sahf
add
mov
xchg
add
jmp
in
mov
test
pop
inc
into
adcb
sub
rorb
mov
add
inc
jmp
movsb
mov
rclb
jmp
dec
out
mov
add
repnz
sar
or
imul
std
push
sub
add
sub
mov
push
sub
adcb
mov
sbb
or
decl
inc
fcomps
inc
sbb
in
jle
cmp
cmpb
sub
std
or
push
cltd
cmpb
nop
mov
inc
mov
dec
test
xor
add
xor
lcall
addl
add
jle
aam
mov
add
sbb
jl
dec
adc
cltd
push
jge
jle
sub
cmc
hlt
loope
lret
in
jg
jmp
add
es
aas
jmp
pop
int
out
adc
fldenv
sbb
addl
outsb
push
xchg
xchg
movsl
pushf
cmp
les
std
out
mov
mov
mov
pop
sbb
and
cmp
xlat
inc
movsb
adc
mov
dec
jne
rorb
xchg
mov
mov
testl
xor
lcall
out
lcall
dec
mov
mov
es
xor
mov
pop
mov
or
or
adc
mov
arpl
stc
pop
popa
xchg
addr16
adc
int3
int3
sti
or
mov
adc
xchg
negb
les
pop
aad
or
lods
cld
add
cmpsl
or
movsb
add
aas
push
xor
mov
sbb
inc
scas
in
pop
notb
fwait
cmp
test
push
es
je
add
and
clc
adc
pop
or
test
cs
idiv
add
fmuls
shrb
and
pop
movsl
and
mov
jb
into
mov
add
pop
add
add
and
rclb
cmp
pusha
lods
dec
test
cmp
sahf
les
lock
mov
pusha
add
mov
inc
cmp
arpl
xchg
ljmp
cmp
es
addl
fsub
push
rolb
or
mov
ljmp
and
out
pop
call
lahf
xchg
test
jp
add
sbb
mov
ljmp
cld
push
cmpl
dec
or
adc
adc
outsb
mov
add
out
loopne
push
loopne
loopne
mov
dec
loopne
xchg
aad
xor
ljmp
imul
or
xchg
xchg
inc
mov
cwtl
mov
jl
add
pop
or
and
rol
rolb
pop
mov
test
dec
jmp
clc
pop
inc
mov
mov
jb
mov
ret
push
inc
inc
push
cld
add
sbb
data16
xor
call
dec
insb
add
add
jmp
push
cmc
pop
and
mov
ret
mov
mov
pop
hlt
cmp
xor
push
mov
clc
pop
push
das
push
ret
test
xchg
lock
mov
or
pop
push
xor
sbb
ss
add
dec
mov
lahf
jge
cmp
sub
lea
into
rorb
mov
sar
jge
fstps
adc
mov
sbb
je
jne
clc
pusha
push
add
in
xchg
push
pop
mov
pusha
sub
sarb
push
add
pop
adc
js
cmpsb
rcl
lock
inc
xor
cmp
lods
sti
inc
mov
sbb
inc
and
out
jb
rcrb
jnp
shl
test
std
and
mov
xlat
xlat
push
xchg
imul
jo
pop
leave
inc
sub
mov
aam
mov
shrl
add
icebp
add
popa
sbb
icebp
pop
or
sub
lahf
inc
push
fpatan
mov
inc
push
loopne
cmp
sahf
pop
push
ret
xchg
call
ret
in
nop
jmp
xchg
xchg
adc
mov
dec
sub
lock
push
imul
ret
push
test
and
lahf
notb
mov
sub
add
pusha
mov
xor
push
mov
sbb
popf
icebp
xchg
cmc
dec
mov
test
lock
push
or
dec
push
arpl
stos
subl
inc
mov
xor
xchg
and
outsl
inc
inc
or
out
pop
jmp
pop
add
xor
aas
sbb
lcall
sarl
mov
xchg
pop
sub
push
cld
mov
adc
dec
in
sti
sbbb
ss
decb
xchg
and
dec
sub
inc
mov
mov
mov
jg
in
test
mov
into
and
leave
addb
nop
dec
add
or
or
subps
push
andb
adc
and
rcrb
sbb
pop
in
or
popf
jmp
mov
addb
lock
sub
subb
jae
mov
loop
mov
lret
test
push
mov
sbb
pop
aam
pushf
xor
jg
add
add
add
add
add
mov
pop
fxam
mov
test
cmc
xor
push
jmp
mov
pop
jp
and
dec
ret
xor
pushf
rol
lcall
cmpl
jne
push
fdecstp
mov
cmp
iret
das
nop
outsb
sbb
or
test
xchg
push
imul
les
into
lcall
shlb
mov
jne
adc
push
cmpsl
sub
je
jb
pop
sub
or
mov
enter
test
fiadds
popf
fwait
out
ja
cmp
jbe
cli
pop
adc
or
addr16
pop
orl
lods
sub
test
mov
cmovo
scas
sahf
pop
shl
jmp
adcl
lahf
pop
mov
jns
and
fistpll
out
dec
pop
shrl
xor
and
in
push
push
adc
mov
push
sub
pop
add
fdivs
mov
xor
sub
inc
adc
fs
cltd
leave
cltd
imulb
and
hlt
adc
mov
push
jns
xchg
push
inc
shl
xchg
loop
fistpll
insb
jne
jbe
jne
jbe
or
pop
and
mov
mov
shrb
cmp
mov
xchg
xor
jg
pushf
pushf
je
jb
inc
cmp
es
push
add
jb
jmp
pop
leave
dec
rorl
mov
xor
and
int
imul
insl
pop
mov
and
and
cmp
lret
movsl
and
and
sahf
test
lods
push
das
push
mov
xor
call
push
mov
adcb
dec
ud1
cltd
jg
fsubs
sbb
push
daa
iret
fidivrs
in
test
insl
and
mov
ja
call
inc
inc
push
mov
push
leave
cmpsb
fildl
cli
mov
mov
mov
repnz
inc
mov
shrb
lret
ja
dec
sahf
lret
call
and
xchg
mov
cltd
add
or
inc
adc
popf
cmpsl
shll
lods
pop
ja
gs
addr16
mov
lahf
inc
sub
lods
lret
xchg
sbb
das
mov
inc
jb
faddl
lods
and
enter
lods
mov
dec
fmuls
loopne
inc
and
shlb
enter
sub
fcompl
aam
in
or
mov
fdivrl
push
enter
mov
fdivs
outsb
lods
inc
and
adc
aam
sti
es
in
jne
in
push
inc
dec
bound
xchg
lods
xchg
jbe
jne
pop
mov
lods
dec
call
addl
jp
pushf
mov
or
inc
xor
add
fistps
pop
dec
in
icebp
scas
inc
add
lods
push
and
cmp
sbb
adc
add
inc
cmp
jbe
jbe
fisttpl
and
sub
xchg
aam
mov
ror
dec
lea
mov
aas
clc
xchg
ret
xlat
gs
add
fwait
repnz
push
mov
mov
jne
mov
pop
sti
push
and
adc
mul
das
mov
or
ret
jle
or
or
test
js
dec
add
jp
enter
xor
int3
jp
aad
cmovno
jmp
mov
and
lods
pop
add
dec
dec
xchg
ss
scas
movsb
add
jbe
cmp
jne
or
or
je
cs
out
ljmp
rcrb
xchg
or
push
nop
sbb
sarl
add
xchg
sbb
jbe
out
add
add
mov
mov
inc
clc
pop
add
jmp
sub
xor
or
and
js
push
or
or
adc
call
outsl
xor
inc
push
shr
sbb
and
or
sbb
mov
fsubl
aam
or
inc
pop
xchg
or
adc
ja
test
sub
mov
mov
inc
out
pop
inc
push
add
dec
popa
sahf
or
out
inc
ret
add
mov
mov
andb
test
jmp
out
cli
cmp
xchg
and
adc
add
movzbl
add
and
pop
mov
push
mov
andb
pop
mov
dec
bound
xor
mov
jbe
loopne
ficoms
push
pop
rclb
ljmp
ucomiss
sub
push
push
mov
inc
cld
mov
dec
and
int
decl
dec
push
sbb
lods
jmp
adc
and
dec
nop
mov
adc
mov
lahf
aam
lret
int3
leave
sub
mov
or
rorb
sbb
mov
fwait
les
or
inc
jmp
jmp
cmpsl
roll
jb
push
jo
push
pop
pop
clc
mov
in
jo
jg
xor
mov
push
lret
xchg
jnp
mov
mov
cltd
inc
mov
xor
outsl
repnz
push
or
sbb
jno
loopne
movl
push
subb
jmp
mov
shll
cltd
or
cmp
jne
movl
inc
or
in
outsb
mov
adc
sahf
adc
sti
jmp
sub
or
cmp
les
add
dec
rolb
mov
cmp
inc
push
fisubrl
notb
cmp
test
sbb
push
mov
mov
lock
incl
cmp
into
jb
or
movsl
cltd
je
jmp
loop
call
mov
push
and
pop
popf
xchg
enter
js
aaa
les
rolb
cmpsl
mov
jae
cmp
jbe
and
shl
jne
jmp
and
inc
push
leave
inc
imul
imul
and
mov
aaa
jmp
outsb
setge
enter
sbb
fs
test
cmp
or
lcall
push
ljmp
fadd
shlb
inc
in
jge
inc
cmp
xorb
ja
movsl
adc
sti
dec
sbb
enter
or
out
std
xchg
xchg
out
dec
jne
mov
rolb
xchg
stos
lods
sbb
sbb
shll
mov
mov
xor
push
mov
inc
dec
jne
cld
cmp
stos
mov
jmp
adcb
lret
jnp
cmpsl
cmp
adc
push
enter
jle
push
adc
jo
addl
mov
adc
mov
push
pop
xor
cmp
sbb
mov
imul
or
inc
push
cmpsb
pushf
sub
xor
out
pop
add
mov
cmp
adc
insl
test
push
mov
fidivrl
and
add
inc
inc
mov
lods
add
sbb
das
mov
andb
les
or
pop
popfw
push
cmp
clc
add
andl
inc
cmp
inc
jmp
xor
or
mov
fwait
xlat
add
cmp
out
jno
adc
jno
es
mov
jmp
mov
int3
sbb
cmp
sub
add
mov
or
fsubs
std
and
mov
ljmp
xchg
ret
xor
xor
faddp
sub
cmp
sbb
mov
lea
push
test
lock
mov
enter
jnp
ret
and
adc
subb
add
movsl
sub
cmpsl
rolb
pusha
inc
add
pop
test
push
scas
rclb
repnz
ret
je
sarb
andl
and
pop
sbb
adc
dec
mov
mov
adc
int3
inc
mov
das
inc
mov
xor
sbb
xor
jno
inc
inc
sbb
sub
fwait
xchg
add
sub
and
add
sbbl
mov
cmp
cmp
add
mov
aam
inc
mov
lea
jg
pop
mov
or
pop
cld
js
bound
mov
aad
adc
mov
adc
dec
jge
cmp
xor
and
bound
fisubrs
push
mov
mov
mov
addr16
stc
test
sbb
push
sbb
mov
sbb
sbbl
and
js
add
push
sbb
jo
adc
add
dec
jecxz
add
leave
mov
pop
add
lods
fsubrp
mov
rorl
ret
or
or
cwtl
testb
test
sub
adc
and
pushf
arpl
in
xorl
xchg
push
push
push
pusha
out
cmp
mov
fdivrl
push
mov
cs
push
aas
mov
mov
or
inc
movl
inc
add
aad
mov
inc
or
add
jo
sbb
jg
sahf
mov
pushf
mov
push
mov
shlb
push
bound
repnz
mov
imul
dec
sbb
orb
faddp
call
mov
pop
dec
pop
sbb
cwtl
ss
cmpsl
mov
sub
js
imul
mov
pop
push
mov
aad
push
mov
and
sbb
lock
dec
sti
cs
pop
sti
iret
push
adc
jns
xor
jns
mov
or
sbb
pop
jb
cmp
js
pop
jb
dec
pop
cmp
dec
and
jle
add
sbb
jmp
cwtl
pushf
mov
push
dec
mov
jmp
jbe
and
popf
or
sbbl
jp
add
xchg
mov
mov
insl
jg
mov
push
xorl
mov
sbb
enter
out
mov
in
mov
push
ljmp
and
push
xchg
xchg
lret
pop
jo
les
pop
xchg
push
jo
cmpl
leave
test
push
adc
pop
push
and
fsubr
hlt
cmp
add
fiadds
and
add
cmpsb
mov
js
or
stos
cmp
xchg
mov
xor
sub
fistpl
js
push
xor
cmc
jge
inc
pop
xchg
arpl
lds
jne
push
rcll
cmp
add
and
xchg
sbb
or
mov
xchg
and
pop
sub
and
adc
jnp
inc
fisttps
scas
add
mov
punpcklbw
js
cmp
inc
adc
mov
adc
pop
pop
hlt
mov
pop
popl
mov
push
mov
inc
or
mov
rcr
lsl
sbb
or
and
in
sub
bswap
pop
pxor
push
push
sarb
jg
loop
fists
pop
je
mov
inc
adc
and
inc
push
sbb
loope
pusha
jo
mov
dec
jne
rcr
sub
int3
je
andb
mov
jg
adc
divb
xor
cmp
dec
push
sbb
add
jne
ss
mov
inc
inc
cli
pop
pop
ret
sub
sub
push
mov
bound
push
inc
dec
cli
shr
add
outsl
or
sbb
push
insl
out
pop
loop
test
ret
decb
neg
loop
dec
sub
or
pop
testb
dec
popf
adc
adc
or
xor
inc
dec
subb
mov
mov
push
or
shll
enter
pop
and
push
fistpl
or
push
jo
icebp
orb
mov
popl
mov
push
test
mov
pop
cli
sbb
nop
mov
lock
add
sub
jmp
mov
mov
fmull
enter
xorl
add
or
sbb
faddl
add
inc
jb
inc
adc
mov
mov
push
fldl
or
add
rcl
inc
repnz
adc
sub
mov
mov
in
jno
ja
imul
xchg
cmpsb
ss
jl
popa
xchg
pop
inc
fs
jns
sbb
mov
and
pop
stc
sbb
dec
pop
pusha
mov
add
and
sbb
push
jns
outsl
adc
adc
test
add
push
push
sahf
mov
sarl
fld
dec
sbb
cld
and
jl
rcrl
stc
cmpsl
subl
int3
test
adcb
fwait
xchg
jmp
decl
iret
hlt
jmp
mov
mov
jne
pop
pop
adc
aam
lahf
in
pop
js
and
push
mov
push
pop
or
lock
push
xorb
or
cmp
add
loop
nop
sbb
out
fisubrs
push
cmp
ror
pop
repz
idivl
test
outsb
push
ja
adc
cmpsb
jge
mov
and
movsb
out
aam
mov
and
inc
push
and
mov
ss
xor
js
add
push
sahf
sub
arpl
js
fildl
mov
sti
adc
inc
inc
sbb
push
cltd
inc
sbb
inc
faddl
out
insb
adc
popa
push
jmp
lea
adc
clc
in
arpl
inc
ficompl
jmp
xchg
mov
lahf
clc
and
ret
and
push
push
test
jmp
adc
inc
mov
sub
or
mov
adc
pusha
inc
sbb
mov
test
mov
xor
data16
sub
je
mov
in
rcrb
jo
pop
xor
jne
lea
mov
mov
jle
add
les
mov
push
mov
shll
fucomip
stos
rclb
iret
bound
mov
iret
add
xor
pop
or
jne
sub
xchg
popf
fstpt
fadds
mov
inc
mov
jb
enter
pop
jb
mov
lods
std
leave
faddl
jne
movsl
pop
mov
mov
test
lods
and
and
mov
add
hlt
and
push
shr
lea
cmpsb
outsb
jno
mov
mov
idivb
mov
or
out
or
mov
xchg
out
enter
xor
or
in
mov
js
dec
and
sarb
mov
lods
pop
lret
or
repnz
mov
or
sar
jo
lock
pushf
mov
jne
int3
pop
cmpsl
pop
or
add
xlat
dec
pop
sbbl
subb
jno
add
mov
inc
loopne
pop
cld
fnstsw
add
add
sub
sub
add
loope
mov
pusha
push
add
call
xchg
shl
call
pop
dec
or
inc
xor
orb
mov
cmp
jne
inc
sub
pop
aad
pusha
mov
outsb
lahf
mov
push
cmpb
movl
testl
pop
pop
jnp
pop
inc
push
fimull
mov
imul
cmpsb
shl
jne
js
ds
mov
andl
orb
add
ret
gs
js
mov
outsl
stc
xor
lea
lret
pop
test
scas
sub
arpl
push
clc
mov
jns
pop
mov
or
out
ret
push
jle
push
or
movb
test
push
inc
lea
xor
in
pushf
sub
ret
inc
dec
dec
lock
int
push
dec
lds
sub
inc
icebp
mov
cwtl
add
pop
cmp
jne
xor
shll
stc
mov
jecxz
mov
add
jle
push
push
cmp
or
xor
mov
out
mov
rcl
jns
daa
mov
stos
pop
and
add
xor
mov
cld
roll
add
push
push
push
lahf
mov
push
arpl
enter
mov
mov
dec
aaa
dec
nop
jno
or
mov
or
mov
inc
out
add
imull
and
push
xlat
inc
loopne
mov
adc
mov
mov
jbe
fisubrs
into
nop
cmp
mov
lcall
std
and
or
push
mov
into
adc
cmp
jnp
add
mov
xlat
push
xor
addb
xor
in
or
push
add
push
mov
arpl
jp
in
mov
dec
mov
mov
mov
add
add
aaa
movsl
pop
pop
sub
pop
mov
or
jl
fwait
repnz
stos
dec
push
mov
mov
pushl
fistpll
bound
roll
add
imul
es
mov
inc
fildl
cmpsl
add
cmp
add
clc
push
les
sub
add
mov
xchg
mov
daa
add
daa
push
mov
sbb
add
sti
xor
aad
aas
shlb
push
ret
movsl
jb
hlt
sbb
mov
adc
mov
xor
outsb
adc
adc
ss
lock
repz
and
xchg
mov
jp
paddw
xchg
adc
adc
fwait
cmovne
or
add
sub
pop
js
bound
push
jns
xchg
aas
dec
add
cs
rorb
lret
xor
inc
jl
jmp
dec
xchg
add
jns
cmc
roll
sbb
push
pop
lcall
cltd
inc
pop
imul
sbb
or
inc
mov
jg
int3
cmp
jnp
sub
test
jne
pop
mov
test
cmpsl
rcrb
fisttps
add
dec
shrb
call
lods
sbb
jle
mov
adc
mov
mov
dec
lahf
jl
or
fstpt
sbb
mov
je
in
push
push
push
push
mov
xor
inc
or
mov
lcall
sub
enter
dec
aas
inc
jp
jmp
int
fs
lret
inc
sbbl
dec
add
adc
scas
add
xchg
mov
adc
pop
mov
sub
or
mov
mov
in
adc
lea
push
mov
push
dec
pop
sub
das
push
sub
roll
fmul
push
or
push
jl
repz
pop
cs
testb
ror
fstpt
inc
adc
adc
push
lcall
push
clc
nop
mov
jecxz
or
out
in
push
les
pop
dec
sub
int
cmp
out
out
popa
mov
xor
loop
or
movsl
mov
inc
xor
mov
push
mov
outsb
sub
mov
aaa
lods
lods
pop
fsubs
xor
lods
push
cmpsl
or
inc
ret
and
shrb
out
push
pop
pop
aam
or
fxch
stos
imul
xor
int3
mov
xor
xlat
popa
push
add
stos
daa
ret
or
jbe
aaa
sahf
or
jmp
xor
add
add
xchg
arpl
sub
test
movsl
mov
int3
cmp
xlat
scas
mov
xlat
int
mov
mov
xlat
jge
rorl
xlat
xchg
adc
and
sub
xlat
sbb
jmp
in
sbbl
sbb
int
inc
nop
loope
getsec
add
mov
cltd
inc
cmpsb
test
inc
xchg
adc
ljmp
sbbl
testl
and
mov
xor
fistpl
cltd
movsb
repnz
int3
es
pushf
add
sub
xchg
or
fcmovnbe
pop
pop
push
sbb
sahf
pushf
push
cmp
incb
fisttpll
mov
dec
and
cmp
out
add
mov
mov
shll
xor
lods
mov
jb
sbb
mov
mov
mov
int
xchg
mov
inc
je
cmpsl
and
in
cmp
sahf
add
push
and
and
dec
xorb
xchg
leave
jne
iret
lea
arpl
push
jb
leave
iret
movsb
test
push
leave
inc
test
sbb
xchg
pop
outsb
ret
lret
loope
rorb
sbb
hlt
adc
out
pop
dec
imul
add
push
jns
and
sub
jae
ss
pop
sub
or
sbb
push
out
daa
loope
faddl
pusha
popa
test
je
or
sbb
jnp
js
loopne
add
fadd
xor
and
adc
push
inc
or
pop
pop
push
shlb
aaa
or
mov
or
movb
in
mov
push
sbb
icebp
push
scas
sti
or
or
sbb
lahf
add
sti
mov
push
jmp
jg
mov
add
push
mov
icebp
mov
sub
dec
xlat
xor
dec
add
dec
cmc
dec
push
divl
dec
movsb
or
add
movsl
xchg
mulb
testb
sar
adc
inc
cltd
cmp
and
inc
ret
cld
aaa
dec
dec
mov
push
cmpsl
je
mov
sbb
shlb
adc
inc
sbb
sbb
sub
push
mov
add
jmp
pushf
add
or
repz
pop
xchg
ja
or
shr
je
cld
fwait
loope
jge
std
outsl
push
push
dec
adc
push
and
out
lcall
adc
lahf
out
outsl
inc
or
jbe
jle
iret
lahf
out
dec
outsl
ja
jo
mov
push
mov
adc
dec
jne
pop
dec
in
jnp
pusha
ficoms
pop
ffreep
and
sar
lea
lea
inc
out
mov
mov
fidivl
add
dec
cli
add
sahf
xor
jp
jle
lahf
ljmp
ret
mov
ljmp
shrb
lret
ret
mov
shr
push
push
ret
fadds
icebp
mov
sbb
sbb
in
pop
inc
loope
or
jae
jns
shll
jmp
jmp
or
addr16
es
bound
or
sarl
pop
jmp
ds
inc
mov
push
bts
jmp
mov
inc
xor
sbb
cmpsb
stc
add
xor
sbb
and
call
or
inc
jne
cmpl
in
incl
cmp
je
cmp
and
shll
ret
notl
or
ljmp
loope
inc
cmpsl
test
dec
pop
push
lock
outsl
fadd
push
cmp
lret
mov
and
add
test
mov
test
mov
add
pop
daa
cld
and
aas
adc
mov
pusha
sbbb
sbb
repnz
pop
or
shrl
pop
andl
or
stc
mov
mov
mov
adc
inc
fs
popa
aas
jle
nop
pop
subl
xor
cmp
and
leave
sub
mov
cmp
or
pop
pop
mov
and
mov
add
sbb
orb
pop
loop
mov
rolb
adc
mov
scas
sub
lock
test
rolb
stos
xchg
jmp
inc
or
sbb
push
sbb
pop
pop
ljmp
cmp
mov
xchg
fiaddl
out
mov
add
fsubr
inc
js
imul
lods
gs
jmp
outsl
xchg
mov
sub
push
jbe
add
gs
sbb
mov
lock
out
jne
mov
add
incl
inc
and
sbb
mov
pop
jne
out
add
out
dec
adc
add
xor
add
std
adc
popa
mov
out
cs
adc
repnz
add
xor
push
mov
push
xor
push
xchg
sub
and
jp
imul
mov
xchg
je
or
jne
dec
xchg
pop
sbbb
xor
call
dec
add
sub
mov
aas
movsl
adc
fildl
inc
cs
je
adcl
jne
jnp
mov
and
and
sbbl
push
ljmp
outsb
or
xchg
jne
push
insl
and
cld
add
sbb
subl
push
or
push
push
popa
idivb
test
es
push
aas
adc
push
cli
push
ss
and
ja
inc
std
jb
sbb
xor
sub
xor
jle
idivb
mov
lods
or
clc
sub
or
pop
clc
insb
pusha
arpl
int3
mov
sub
push
je
jb
xor
and
sar
cmp
lea
add
add
and
mov
sub
push
daa
orl
mov
in
rcrb
shlb
xor
sub
mov
out
shlb
into
js
push
je
lods
add
lock
sub
lea
adc
fldenv
or
push
cmp
or
or
out
dec
mov
and
mov
ljmp
push
pop
push
int
sarl
loope
lea
daa
mov
or
dec
jg
out
mov
incl
or
movb
xor
out
xchg
pop
dec
inc
cmpsl
sbb
cmpl
push
push
mov
out
push
pop
call
imul
add
mov
push
out
jl
fimuls
or
fnstsw
sbb
movsb
or
aas
ss
push
or
add
arpl
scas
add
faddl
add
cmp
mov
xor
aas
cmp
or
rolb
roll
cmp
jb
scas
daa
les
out
nop
cmp
pminsw
jle
insb
stos
pop
add
jp
orb
push
or
fmuls
mov
or
pop
ret
add
addr16
add
push
pop
nop
movsb
inc
out
mov
cmp
or
add
add
sbb
adcb
dec
jmp
inc
jne
mov
xor
out
push
testl
sub
mov
dec
push
pop
jmp
lea
lods
inc
push
xchg
cmc
push
jnp
lock
ds
aaa
xor
mov
mov
jne
sub
ret
aam
adc
daa
dec
in
insb
lock
push
mov
movl
xchg
xchg
add
jmp
push
pop
aam
mov
test
pop
js
mov
push
outsb
addb
inc
aam
xchg
dec
and
cwtl
cwtl
jge
or
maxps
dec
out
mov
stos
inc
adc
test
not
mov
adc
jmp
push
stc
push
sub
xor
inc
and
mov
mov
dec
lock
repnz
adc
jne
xchg
and
mull
dec
mov
pop
mov
out
repz
mov
or
mov
add
push
lret
mov
pusha
dec
imul
mov
jae
dec
aam
dec
jb
ret
mov
sbb
push
sbb
lea
pop
pop
push
sub
push
lock
nop
popa
cmp
jecxz
or
sub
xchg
int
dec
jbe
pop
mov
add
or
xchg
fistl
imul
sub
or
xor
arpl
in
xchg
xchg
das
push
push
jb
pop
iret
and
sbb
addr16
lret
push
add
jnp
incb
insb
fs
enter
loopne
daa
jg
cmpsb
push
cmp
xor
xor
add
into
jnp
xor
or
or
fwait
gs
xor
push
xor
idivb
inc
adc
stos
in
cs
cmp
inc
dec
ds
inc
ja
sub
dec
inc
js
dec
push
sahf
lret
push
push
outsl
adc
and
in
aaa
popa
inc
adc
fnclex
sub
dec
mov
in
adc
movsb
dec
sbb
inc
popa
xchg
ja
pop
sub
adc
xchg
adc
ret
cmpl
shlb
jne
mov
pop
add
xchg
jbe
leave
and
das
inc
mov
push
nop
rcll
mov
adcb
push
shr
jmp
loopne
push
es
movb
andb
push
clc
stc
aad
or
or
xchg
push
pop
lea
fisttpll
lock
xchg
sbb
sbb
mov
lock
and
pushf
add
aad
mov
insb
mov
adc
ja
jo
loope
sarl
pop
out
pusha
bswap
dec
cmp
cli
sbb
adc
not
sbb
mov
cmp
jge
inc
push
sbb
clc
outsb
scas
cmp
jne
test
js
addr16
int
arpl
sub
add
jo
sbb
insb
data16
push
cmp
out
inc
inc
scas
adc
mov
add
jo
inc
adc
lods
sbb
in
out
jecxz
out
inc
fcmovnbe
loopne
xor
lret
sahf
mov
mov
test
dec
test
andb
fwait
loopne
sub
sbb
push
or
mov
inc
jns
clc
xchg
mov
dec
ja
sub
sub
sbb
pop
sub
adc
or
mov
adc
les
ds
sahf
clc
lock
loop
pusha
mov
insb
pop
lods
and
or
push
dec
rcll
dec
mov
xor
loopne
andb
adc
pop
lea
adc
test
or
xchg
add
aad
mov
sbb
addr16
je
mov
sbb
add
fdivs
or
enter
add
lock
je
jb
mov
pop
xchg
fadds
ret
sub
cmc
add
jmp
neg
jle
rcl
add
out
sub
or
fcoms
jnp
out
fisttps
push
lock
mull
lsl
jmp
push
loopne
ficomps
push
inc
shr
rcr
shr
rcr
or
sub
jno
mov
repz
dec
fs
outsb
lahf
jo
out
jb
cmp
or
cmp
or
cmp
add
sbb
adc
push
push
sub
or
ficoml
aam
test
fxch
pop
ret
adc
xchg
stc
je
sbb
inc
rdmsr
sbb
pcmpeqd
insb
add
and
inc
jmp
das
xor
in
sub
sbb
repz
mov
cwtl
pavgw
into
rolb
xchg
or
inc
jp
mov
lock
jb
sarl
sarb
pop
mov
rcrl
xlat
sahf
stos
in
loope
cmp
jecxz
scas
sub
add
and
and
inc
pop
les
les
inc
imul
xlat
mov
mov
xchg
jne
add
mov
push
jae
or
js
inc
clc
into
jmp
insl
loopne
push
push
outsl
xor
sbb
cmp
xchg
shlb
clc
loop
and
test
jmp
dec
and
push
pop
ret
mov
nop
lret
stos
mov
inc
and
add
xor
jmp
pop
push
dec
inc
aaa
sub
push
pop
lret
js
xor
jo
add
cmp
sub
sub
inc
adc
out
ja
mov
and
jmp
push
mov
sbb
mov
pop
xor
pop
inc
cmp
mov
add
pusha
push
and
cmp
lock
fiaddl
sbb
roll
dec
inc
decb
dec
adc
mov
loope
shrl
fs
adc
xchg
push
or
add
add
rcr
and
jo
ret
push
ficoms
enter
sub
or
add
add
rolb
test
pop
cs
dec
fcoml
lods
fadds
lock
mov
mov
sub
loop
sub
mov
movsb
add
sar
imul
jno
inc
push
movb
cwtl
jne
add
je
mov
push
push
mov
les
pop
lcall
cmp
push
loop
mov
cmp
xor
dec
out
inc
in
add
stos
mov
xorl
or
or
cmp
or
add
push
imul
inc
cmp
xchg
es
adc
add
sub
sbb
sbb
adc
cmp
sub
push
fisttpl
sbb
add
push
sub
push
push
or
pandn
rorb
or
pop
and
adc
outsl
push
dec
in
sbb
or
fdivrl
adc
sbb
push
rclb
arpl
imul
dec
movsl
fsubs
xor
int
add
inc
inc
fidivl
dec
xor
push
jnp
mov
pop
roll
movb
sub
out
lock
out
cmpb
jecxz
aam
push
sub
outsl
mov
cmp
jg
inc
jmp
mov
ds
or
lds
jbe
in
and
cmp
imul
fisttpl
jge
aas
sbb
enter
mov
in
sarb
fmuls
sbb
clc
xlat
sub
dec
je
mov
mov
inc
pop
fadds
xor
icebp
xor
shll
inc
jne
push
xor
test
jne
push
adc
cld
and
add
jo
out
or
pop
mov
push
adc
outsl
dec
js
stc
gs
cmp
jge
inc
mov
xor
jae
add
jae
addr16
push
and
mov
popf
and
sbb
scas
add
sub
add
and
stc
xor
aas
sarl
pop
inc
rclb
mov
dec
psubd
push
sbb
pushf
xor
and
or
sti
test
test
jl
js
mov
xchg
ljmp
lcall
loop
push
push
gs
and
ja
mov
sub
adc
dec
mov
test
cltd
add
push
dec
or
pop
lock
push
pop
enter
insb
orl
add
arpl
add
addl
cmp
or
sub
shlb
xor
insb
xchg
lock
ja
pusha
imul
sub
and
lods
mov
pop
imul
inc
mov
test
mov
or
adc
adc
adcl
cmp
mov
mov
in
clc
pop
or
sbb
in
mov
je
xchg
cli
adc
mov
pop
subb
xor
lea
or
out
andl
cmp
out
cmp
jmp
popl
inc
xor
ljmp
out
mov
pop
xor
loopne
push
js
xor
xadd
push
mov
jl
adc
sahf
lock
inc
mov
div
xchg
and
pushl
add
jno
pop
sub
mov
loop
mov
test
pop
push
push
xor
test
movsb
pop
inc
ljmp
push
inc
cmp
ds
sbb
dec
sbb
push
push
push
inc
sbb
out
pusha
ss
insb
enter
push
rcll
push
or
adc
push
les
xor
aad
jp
shld
popf
sub
or
mov
stc
dec
xchg
cmp
cmp
jmp
mov
jne
arpl
pop
mov
add
sbb
aas
cmp
mov
cmpl
sbb
dec
mov
sub
push
pop
out
xchg
dec
out
andl
xlat
sub
pop
pop
pop
aad
or
xor
addb
test
or
cmp
push
sub
int
loopne
push
les
jae
push
jmp
clc
movd
adc
cmpl
movups
lods
cmpsb
jl
femms
push
or
or
into
add
xor
sahf
push
popf
mov
gs
adc
push
sbb
lods
movl
mov
call
shrb
xor
inc
cmp
ret
xchg
adc
inc
xchg
adc
push
push
lea
or
dec
push
push
pop
and
jle
sarl
lret
inc
das
adc
push
test
sbb
xchg
or
aam
or
sbb
sar
insb
xor
xor
inc
jmp
adc
popf
inc
and
leave
lcall
mov
pusha
bound
jo
add
sub
jl
mov
adcl
mov
mov
inc
push
push
nop
imul
mov
test
imul
and
daa
test
jecxz
dec
cmp
mov
mov
cmp
push
push
or
push
mov
cs
mov
hlt
add
sbb
dec
popa
or
inc
jne
sub
adc
pop
ret
orb
dec
shlb
ss
cmp
mov
push
push
hlt
add
test
loop
je
push
inc
stos
pop
and
sbb
sub
mov
adc
adc
jmp
mov
stos
popf
or
xchg
scas
mov
mov
adc
mov
das
cwtl
cmp
jle
sub
cmp
xor
add
decl
push
jmp
dec
push
in
and
sbb
jbe
pushf
add
jl
ret
loopne
out
negl
lock
ret
test
sbb
sbb
mov
sub
insl
xorl
mov
pop
jge
cmp
add
movsb
fstpt
mov
movsb
jne
enter
out
dec
jae
imul
sbb
sub
push
jmp
and
scas
shr
outsb
mov
dec
decb
lods
leave
pop
push
sub
and
cmp
dec
cwtl
in
pop
aaa
es
pop
cs
and
or
pop
stc
sub
cmp
mov
push
movsl
jbe
sub
mov
push
inc
stos
loopne
je
mov
mov
jge
in
mov
cmpsl
mov
pop
sub
inc
inc
cmp
testl
testl
sbb
inc
jmp
sahf
dec
dec
or
cmp
xor
pop
es
repnz
and
or
insb
decl
stc
push
adc
jg
cmc
jecxz
ds
inc
jmp
cmp
and
push
pop
pop
xor
push
div
dec
mov
dec
test
jno
mov
mov
xchg
cmp
ljmp
dec
adc
adc
clc
mov
sbb
xlat
test
cmp
out
fwait
or
mov
add
lods
pop
call
jnp
jle
inc
ret
sub
xor
jne
add
ret
adc
inc
pop
adc
jmp
call
add
mov
je
lock
pushf
imul
mov
mov
push
sarb
add
test
lea
enter
les
lods
mov
out
xchg
inc
movsl
cmpsb
or
jne
mov
addr16
out
mov
and
xchg
jo
inc
imul
jae
lret
sti
mov
push
or
mov
sub
ja
mov
out
inc
jg
or
inc
testl
out
jne
out
or
mov
ljmp
pop
cmp
inc
add
push
scas
addr16
mov
test
add
jbe
pop
push
or
clc
cwtl
xchg
test
push
pushf
fstpt
inc
add
test
mov
loope
in
push
lock
cld
sub
add
dec
inc
imul
add
mov
ja
shlb
sub
in
incl
cmpl
insl
mov
pop
xchg
sbb
or
mov
test
jg
add
sbb
lahf
nop
mov
sub
or
shll
shr
aam
or
shr
sbb
test
or
push
sahf
pop
idivl
or
jg
or
and
mov
mov
movb
je
xchg
and
or
jl
mov
out
jg
insl
fadd
loopne
shr
or
mov
sahf
dec
mov
mov
outsb
mov
fistl
mov
mov
adc
andl
or
shrb
lock
js
xchg
jo
ficoml
pop
sbb
loopne
pop
ljmp
jmp
out
jmp
or
lods
mov
fldenv
and
lds
pushf
mov
mov
mov
loope
jl
dec
hlt
loopne,pn
int3
int3
jmp
xchg
or
cmp
mov
and
outsl
push
dec
into
jmp
lods
jne
imul
and
inc
int
sbb
mov
push
sbb
pop
adc
jne
push
lret
das
sub
test
sbb
repnz
sub
movups
and
hlt
jo
mov
mov
mov
inc
mov
inc
mov
mov
add
out
inc
fldl
inc
add
pop
ds
repz
movsb
std
call
out
pop
or
jo
sub
push
mov
or
add
testb
adc
sbb
mov
movsb
icebp
ss
push
push
idiv
add
xor
sbb
cmp
ficomps
cmp
mov
sbb
int
or
inc
int
pop
test
test
adc
push
cmp
pop
or
add
in
xor
push
mov
aas
jne
add
pop
stos
mov
adc
cld
dec
sbb
dec
sub
popa
in
ret
rolb
or
rcl
repz
jb
push
push
or
push
or
xchg
mov
in
pop
pop
imulb
es
lea
jno
and
mov
loopne
cld
in
or
lea
shlb
fwait
mov
in
jbe
imul
gs
push
push
call
pop
mov
add
insl
mov
inc
mov
mov
xor
mov
psubsb
sbb
xlat
jmp
sar
or
inc
ljmp
mov
pusha
stos
cmp
iret
jmp
sbb
faddl
dec
cs
xor
mov
dec
push
rcrl
adc
mov
loope
mov
add
and
lock
int
dec
xor
push
adcl
std
es
and
jmp
ret
scas
push
xchg
loopne
gs
decb
xor
dec
pop
xchg
mov
mov
push
inc
pop
push
add
in
loopne
cmovp
or
or
mull
sbb
enter
cmp
or
jne
inc
loope
push
lea
call
dec
cmp
leave
sar
mov
xor
aam
aas
or
testb
add
movsb
dec
adc
fstp
call
mov
subl
dec
nopl
xor
cmp
cltd
lods
loop
dec
push
xor
pop
ret
test
ret
insb
pusha
dec
outsl
or
ljmp
mov
and
cmp
pop
pusha
rorl
lcall
push
push
divl
mov
inc
xor
and
xchg
push
sub
cmpsl
mov
jp
and
inc
mov
andb
iret
mov
testl
mov
mov
sub
unpckhps
hlt
mov
inc
or
cmc
andl
push
fcmovb
lea
test
pop
xor
xlat
add
xor
jle
fsubs
in
push
or
sti
sbb
js,pt
inc
call
jmp
push
pop
cmp
lret
dec
inc
outsb
cmp
adc
hlt
in
inc
xor
or
inc
pusha
jns
cmp
pusha
enter
inc
mov
lea
rcll
add
je
dec
or
or
mov
pop
add
lea
mov
and
fstps
jl
mov
int
lods
pop
sbb
test
loopne
out
sbb
mov
inc
mov
out
add
fcoml
xchg
mov
rol
cs
enter
add
pxor
mov
repz
push
jmp
sub
mov
mov
pusha
and
mov
dec
je
rcl
or
sbb
add
fcompl
xor
loope
sbb
jb
fldcw
mov
inc
mov
sbb
inc
dec
xor
imul
mov
mov
shll
dec
std
xchg
lret
ss
loope
enter
xor
jae
subb
mov
cmp
jne
bts
adc
add
mov
push
adcl
adc
aad
gs
xchg
and
pop
lahf
dec
add
loopne
imul
cmp
ret
sub
sub
add
add
add
dec
dec
dec
int
andl
jbe
fs
jl
or
pop
jns
adc
fiadds
into
sub
adc
sbb
mov
pop
pushfw
std
aam
jle
add
test
sub
and
pushf
xchg
inc
and
popa
add
mov
push
mov
push
lea
or
inc
push
add
shlb
test
stos
in
and
mov
push
or
add
lods
mov
push
es
inc
xchg
adcl
in
mov
es
call
mov
add
jmp
pop
pop
mov
pop
mov
movl
stos
and
xchg
aas
push
jae
adc
movsb
mov
adc
ja
xchg
add
lcall
jne
adc
sub
pop
adc
mov
fimuls
shrl
cmp
cmp
je
xor
dec
inc
and
sbb
js
in
cmpsb
or
jmp
and
push
and
push
mov
push
loopne
fdivr
xchg
cmp
pop
adcl
push
mov
add
cmp
mov
ret
call
or
orl
sbb
dec
jecxz
add
xor
add
out
or
cli
adc
add
or
mov
adc
mov
xchg
or
pushw
ss
int3
add
mov
push
inc
mull
add
mov
bound
cltd
push
mov
inc
pop
mov
pop
pushf
push
xchg
and
out
pop
fcompl
pop
mov
loopne
mov
and
cmp
xchg
dec
jae
fstpt
add
inc
andb
loop
sub
test
lea
jmp
xor
rolb
sbb
fdivrs
mov
mov
mov
inc
mov
jmp
lahf
push
test
sub
cmp
jg
insb
pop
jl
jmp
addl
js
pop
fs
add
sbb
or
stos
popa
add
push
push
adc
push
jo
add
add
adc
xchg
aam
sub
mov
pop
adc
inc
or
mov
sub
jl
pop
adc
push
lds
leave
cwtl
pusha
cmp
jno
xlat
and
sub
dec
add
sbb
push
dec
test
lock
lret
xor
outsl
stos
popa
jge
mov
add
add
inc
xor
loopne
push
stos
adc
movsb
push
pop
pop
pop
icebp
fisttps
inc
adc
gs
cmp
push
pushf
imul
sub
mov
push
or
add
sarl
sub
push
bound
add
data16
pop
jmp
push
or
or
adc
idivb
pop
les
and
pop
mov
adc
adc
sbb
or
and
rcrl
jo
cmpsl
testl
jle
fwait
arpl
data16
push
mov
or
scas
cmpl
gs
or
or
or
cwtl
movsl
cwtl
data16
push
jne
push
aas
out
mov
pushl
leave
inc
push
or
enter
or
dec
arpl
inc
mov
xchg
jno
shlb
sub
jmp
push
std
js
ss
jne
push
push
clc
mov
dec
jnp
jne
pop
push
xchg
add
popa
pcmpeqw
loope
loopne
movsb
mov
or
rolb
pop
mov
in
arpl
jo
and
lea
mov
std
lods
pop
adc
lcall
movsl
stos
mov
mov
or
movsb
cmp
cmp
cmpb
or
outsb
outsl
mov
push
sub
imul
dec
or
fcoml
and
cmp
imul
js
mov
imul
outsb
movsl
fadd
or
cmpb
pop
sub
cmp
ror
or
jne
mov
clc
push
or
scas
rcll
or
or
push
xor
jbe
push
mov
or
outsb
dec
xchg
jbe
into
jmp
nop
or
or
xor
pop
cmpl
dec
je
jae
mov
push
mov
mov
mov
ret
or
and
or
loopne
mov
sbb
pop
lds
in
xchg
mov
cwtl
add
adc
sbb
pop
or
mov
loop
pusha
jne,pn
sbb
rol
inc
mov
xor
jo
adc
add
cmp
mov
mov
pop
popf
lcall
ja
jle
push
icebp
or
int3
cmp
pop
jmp
cwtl
les
test
dec
sub
test
aaa
sub
ljmp
cmp
add
orl
loope
jg
loopne
dec
adc
dec
adc
add
cmpl
cs
shlb
dec
sbb
cmpw
add
dec
bound
inc
loop
jno
push
push
sub
pop
push
out
mov
dec
mov
jb
sbb
sub
ljmp
adc
sbb
add
mov
test
lahf
push
push
push
movups
xor
add
or
add
xor
mov
dec
adc
in
mov
or
daa
push
push
ljmp
mov
add
inc
and
imul
cmpsl
mov
jmp
adcl
mov
stos
popa
jmp
test
shlb
ret
neg
push
add
lret
cmc
cmp
mov
clc
call
or
xor
add
push
push
xlat
gs
mov
push
cmpb
cmpsl
cli
rclb
in
movsb
mov
mov
mov
sbbl
mov
notl
push
and
gs
or
stos
inc
cmp
or
xor
sub
clc
or
sub
and
stos
cmpsl
push
fsubrs
mov
jno
push
mov
lock
imulb
or
mov
mov
inc
andb
mov
dec
mov
in
ja
mov
aaa
and
cmp
lahf
daa
pop
rcrb
xchg
cmp
mov
out
sbb
jo
addl
dec
jl
out
rcr
or
in
add
inc
cwtl
pop
popf
add
call
or
adc
xchg
ljmp
and
arpl
stos
or
rcrb
sbb
test
adc
inc
mov
cmp
inc
dec
pop
dec
or
xor
or
mov
and
push
push
addr16
mov
adc
enter
jns
daa
xor
jae
dec
in
and
mov
cmp
add
sub
add
fists
xchg
sbb
push
or
push
xchg
xchg
xchg
xchg
or
adc
outsb
mov
sbb
sbb
dec
dec
dec
dec
sub
xor
pop
add
cmp
inc
and
inc
cmovs
pushf
pushf
push
push
pop
add
daa
pusha
fs
daa
jo
js
idivb
and
sbb
cltd
fs
test
xchg
dec
xchg
cwtl
pushf
fs
dec
mov
and
mov
xchg
dec
enter
xor
sarb
leave
and
loopne
call
in
aam
and
dec
xor
clc
cld
add
cmp
add
add
add
shll
adc
leave
sbb
and
xor
and
sub
xor
and
xor
cmp
leave
adc
inc
gs
dec
fs
imul
xchg
dec
es
pop
pop
pusha
lods
add
je
rcrb
adc
push
adc
cmpsb
dec
mov
and
test
xor
mov
xor
imul
movsb
mov
and
xor
sbb
sbb
and
and
cmp
cmp
mov
xor
inc
rorb
dec
enter
mov
mov
pop
mov
sbb
xchg
adc
xorl
bound
rolb
or
pop
adc
push
mov
xor
lahf
push
or
nop
aam
or
pop
push
outsl
enter
pop
add
fcoms
fsubrp
xorl
lret
and
xchg
add
or
or
and
pop
out
jb
aas
mov
shll
dec
xor
adc
or
inc
outsb
and
shr
add
es
and
cmc
xorl
test
js
or
mov
in
test
adc
push
jae
bound
jo
fcmovbe
aam
insl
insl
loop
mulb
shll
and
or
sub
adc
clc
incb
bound
or
jmp
inc
cmp
outsb
and
mov
and
aaa
out
jae
jecxz
sbb
add
or
cwtl
or
adc
pusha
xchg
lock
or
mov
out
aaa
jge
je
cmp
mov
flds
and
pop
adc
pusha
mov
pusha
loope
pop
or
xor
inc
jecxz
test
fstp
jne
push
movsb
ds
pusha
fldl
cmp
not
xchg
sbb
outsl
mov
ret
setbe
testb
sahf
lret
mov
adc
sti
add
mov
out
test
fistpll
push
dec
cmp
xchg
sub
mov
rclb
shl
mov
or
sub
push
and
and
or
into
adc
testl
mov
add
xor
icebp
lcall
jmp
push
and
or
push
or
arpl
aaa
inc
flds
fstps
jmp
fisttpll
xlat
adc
fsubp
inc
push
hlt
adc
fildl
movsl
jbe
in
pop
sub
jl
push
divl
or
mov
adc
xor
hlt
ds
or
lock
mov
aaa
sbb
and
cmp
add
or
mov
mov
hlt
dec
jmp
sub
pushf
sbb
pop
sub
jmp
sub
push
mov
loopne
fldcw
inc
test
into
adc
call
imulb
cld
sub
mov
rorl
mov
push
nop
mov
inc
mov
mov
and
inc
or
cmp
xchg
jge
ffree
repz
add
push
add
pop
push
push
in
inc
shll
cli
bnd
imul
mov
repnz
dec
push
movsl
jge
test
scas
imul
insl
in
call
jbe
dec
cmp
sbb
nop
loopne
fchs
mov
push
push
pop
ss
nop
pop
jmp
pop
cs
icebp
pushf
nop
adc
pop
scas
sbb
loopne
cmpsb
mov
es
sub
cmp
aam
add
filds
push
add
sbb
and
pop
mov
lret
add
xchg
inc
outsb
inc
lods
mov
adc
loop
shrb
xor
ret
or
aam
cmp
je
or
sbb
sbb
or
mov
cld
sbb
add
hlt
hlt
pop
cltd
and
jmp
sub
pop
or
stos
and
inc
sbb
or
mov
ret
cmp
sbb
pop
fstpl
jp
lahf
mov
cmpb
and
ret
fidivs
lock
add
xor
push
or
fisttpll
mov
or
hlt
mov
pop
xchg
push
sub
cmp
pusha
in
fwait
dec
cmp
lock
mov
add
or
ret
call
jae
fadd
mov
or
sbb
mov
jbe
push
das
adc
outsb
dec
add
int3
mov
pop
pushf
arpl
arpl
out
sbb
mov
xor
nop
mov
or
sbb
jnp
xchg
hlt
and
add
andl
sbb
mov
sbb
dec
lret
into
sbb
mov
xchg
mov
call
clc
xor
sbb
xor
stos
push
fcmovbe
or
mov
jge
adc
or
sbb
rcll
cltd
and
decb
mov
clc
push
and
pop
cmpb
add
or
adc
ret
imul
enter
or
cli
out
fld
fucomp
pop
fldcw
pop
mull
loopne
out
mov
xor
test
outsl
jne
orl
mov
icebp
das
pop
pushf
ficoml
gs
or
shl
pop
and
or
push
or
jmp
loop
push
out
mov
push
sahf
jge
push
pop
je
aad
xor
push
ficoml
nop
cld
es
adc
push
push
push
movsb
imul
push
sub
aam
loope
ljmp
jo
fstsw
movswl
sbb
loop
or
inc
xor
icebp
and
rorb
data16
or
insl
or
and
fsts
dec
cwtl
or
sub
call
test
fcoms
pop
and
sbb
adc
pop
mov
nop
call
je
jo
movsb
fldpi
xor
loopne
lcall
add
mov
je
sbb
sbbb
shll
xsaveopt
dec
sbb
mov
mov
ret
loope
inc
popl
or
movsl
pop
mov
and
jno
iret
test
pusha
dec
rclb
clc
or
add
pop
jnp
jo
sub
icebp
xor
js
inc
cmp
cmp
subl
mov
cmpsb
es
mov
xor
inc
add
rcrb
add
mov
and
add
test
cld
sub
inc
mov
pushf
xlat
int3
pop
inc
add
in
inc
notl
add
adc
fiadds
imul
subl
lret
je
test
add
mov
sub
adc
jbe
sbb
insb
xor
js
adc
aas
mov
or
push
or
jle
or
or
add
loope
push
or
or
int
add
dec
test
push
rcrb
and
insl
pop
inc
or
push
mov
mov
pushf
pop
dec
imul
dec
push
or
sub
or
outsb
add
mov
aas
dec
push
mov
loope
adc
daa
testb
mov
loopne
test
jbe
jl
mov
rcr
jne
xchg
lock
stos
jp
pop
pop
dec
insb
jmp
sub
cli
clc
and
sbb
mov
inc
and
lret
pop
add
xor
scas
cmp
add
inc
lea
pop
mov
lret
inc
movb
rolb
ljmp
not
test
andps
or
pop
repz
outsb
inc
pop
pop
and
mov
out
sbb
mov
inc
adc
iret
and
insl
push
jbe,pt
dec
mov
add
push
outsb
int
or
or
cmp
sbb
dec
cmp
mov
loopne
insb
jmp
sub
push
orl
mov
xchg
pusha
add
sahf
jns
shrb
and
sarb
mov
mov
add
or
add
add
xor
mov
or
adc
jge
inc
stos
inc
es
movsb
sar
popa
or
adc
dec
xor
cmp
mov
cmp
ss
loopne
mov
daa
push
iret
rcl
sub
sub
pop
pop
or
bound
mov
jno
push
shlb
push
ds
push
or
test
xor
out
mov
xchg
test
push
mov
cmpsb
pop
in
sub
js
push
and
sbb
mov
mov
dec
jns
mov
pop
dec
lea
or
ret
movsb
push
rcr
inc
lods
and
sbb
test
jmp
push
lods
sub
dec
pusha
push
aas
xor
dec
or
inc
rcrl
dec
xor
push
aam
add
cli
mov
mov
jb
pop
pop
push
push
jb
mov
repnz
incb
mov
xor
cmp
and
scas
shll
shl
hlt
push
sub
lock
aas
mov
mov
mov
mov
and
mov
cmp
dec
push
or
ss
test
inc
add
inc
popa
sbb
push
push
mov
roll
pcmpeqw
daa
andl
rcll
out
je
add
in
lea
push
jecxz
mov
and
mov
and
lea
dec
and
inc
xchg
inc
sti
rorl
jecxz
enter
pop
in
dec
or
fiaddl
bound
xchg
xchg
ficoms
lret
jne
fcoml
mov
jae
jns
or
mov
push
cmp
xchg
test
adc
adc
sbbb
mov
push
mov
in
dec
je
pop
and
add
sbb
adc
dec
jp
addr16
lret
loopne
xor
and
sub
add
jbe
jne
cmp
enter
jb
mov
xor
mov
sub
inc
mov
mov
rcr
or
pop
xor
mov
sub
pop
sti
scas
push
xchg
cmp
insb
inc
cs
jg
xchg
or
ss
cmp
je
or
decl
out
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
mov
shll
inc
divb
xchg
ss
and
fcompl
filds
cltd
arpl
add
xchg
mov
outsb
push
inc
jmp
inc
adc
mov
add
adc
or
movaps
push
xor
bnd
mov
push
add
adc
les
sub
add
adc
xchg
icebp
mov
fadds
mov
shrb
xlat
rcrl
add
fdivs
or
jle
aad
sub
inc
pop
ret
sahf
dec
loopne
push
pop
sbb
rorb
sub
dec
xor
popa
lock
les
sub
mov
popf
rol
outsl
xor
cmpl
mov
hlt
sbb
push
push
add
jle
push
cmp
pushf
cld
mov
adc
or
sbb
xchg
add
lods
ja
add
fiadds
daa
add
and
cld
loopne
icebp
push
jmp
es
je
loop
inc
sub
das
pop
insb
loopne
mov
fadd
inc
add
push
xor
mov
xor
or
add
xor
jp
testb
pop
lock
fimull
imul
adc
sub
loope
cmp
mov
adc
dec
das
ficompl
pusha
inc
lahf
shlb
fs
and
jg
ret
jmp
xchg
jmp
push
or
add
adc
bound
and
push
inc
or
adc
shlb
ret
inc
cmp
pop
push
add
sbb
shll
push
jmp
addb
lods
jne
xor
add
data16
push
fadd
pushf
insl
shrb
jge
mov
add
jl
nop
stos
inc
fcoml
lret
shl
inc
and
lea
xchg
xor
mov
fdivs
call
dec
mov
enter
sbb
xchg
sahf
dec
jl
inc
mov
cld
push
and
dec
out
rorb
lret
andl
imul
inc
lea
loope
or
xor
ret
nop
js
mov
jmpw
xor
cmpb
jbe
sub
push
inc
xor
add
mov
pop
sbb
js
inc
popf
push
dec
sub
leave
and
add
insb
lahf
mov
push
xchg
scas
and
adc
enter
inc
inc
mov
fistpl
fstpt
test
jg
ret
mov
or
jne
bound
xor
aam
es
icebp
sub
cli
in
call
xor
mov
mov
sbbb
je
fisubs
or
mov
xor
shlb
mov
push
hlt
nop
or
call
dec
scas
and
pop
xchg
and
inc
xor
pushf
ret
inc
sbb
xor
add
dec
jge
daa
inc
fs
cld
add
add
cmpsb
clc
hlt
shrd
sbb
fs
cmp
jge
sbb
shlb
xor
xor
inc
es
cmc
pop
and
xor
out
and
mov
cmp
cmp
or
rorl
pop
rcpps
insb
xor
add
fcmovb
push
nop
lcall
nop
sbb
dec
pop
in
mov
imul
or
js
jg
jb
xor
out
xor
mov
vaddsd
shl
fimull
jl
push
push
shll
pusha
cmpsb
outsl
dec
xchg
inc
cmp
mov
push
lock
pop
push
or
sarb
add
mov
jns
pop
jnp
inc
dec
pop
or
or
dec
and
or
cmp
cmp
add
in
add
lods
ja
dec
frstor
es
hlt
nop
mov
fwait
adc
adc
sbb
movw
add
add
inc
rcrl
jle
in
push
sbb
push
push
jmp
lock
and
sahf
and
bound
adc
xor
neg
call
inc
or
or
ret
loopne
push
hlt
aaa
push
lods
lds
js
xor
inc
mov
push
mov
push
add
add
xchg
mov
repnz
je
loopne
roll
and
add
lret
cmpsl
jl
into
roll
or
insb
cmp
sbb
mov
or
mov
sub
clc
sbbb
xchg
or
cmp
nop
dec
adcl
xchg
pop
aam
and
or
test
or
in
push
push
orl
dec
out
mov
cld
jl
loopne
jge
adcb
popa
push
mov
inc
push
add
add
sub
popf
jmp
xor
lea
sahf
clc
gs
push
xor
or
pop
data16
daa
aaa
in
add
movb
sti
lds
inc
je
dec
ss
xor
ret
add
dec
jmp
mov
sub
add
int
inc
aaa
je
sbb
or
pop
inc
hlt
jb
popa
cmp
or
inc
sub
rcrl
xorl
sbb
arpl
add
xchg
repnz
mov
inc
xchg
rcll
push
aaa
lock
test
and
imul
sbb
pop
fldenv
push
adc
cmp
adc
mov
sti
and
testl
pusha
push
xchg
sarl
push
fwait
lea
mov
jmp
jbe
or
cs
push
into
mov
add
add
loopne
cmp
notl
add
mov
inc
mov
test
or
and
mov
sbb
push
and
xlat
aam
jecxz
sti
adc
lea
xchg
cmc
cmp
loope
adc
daa
lods
sub
dec
inc
add
mov
push
ljmp
sub
push
push
and
leave
test
int3
inc
shll
std
lcall
push
add
and
cltd
nop
cli
inc
data16
mov
xchg
mov
cmp
fistpl
or
cmp
dec
test
or
mov
ljmp
mov
inc
mov
lock
xchg
adc
test
xor
rcr
mov
cmpl
rcll
push
or
push
or
mov
push
mov
sbb
or
mov
cld
ja
inc
adc
imul
jge
rcrb
sar
pop
add
adc
or
enter
mov
jb
dec
and
test
xor
sub
and
out
cli
mov
lret
je
dec
je
dec
push
push
jmp
add
mov
or
jmp
cmpb
mov
or
lcall
rclb
fistps
and
insl
lods
sub
jp
icebp
pop
ret
shll
add
sbb
push
jo
sub
int
adc
push
sub
cs
add
es
pop
mov
adc
das
jne
adc
fistpl
cmp
je
mov
cmp
mov
pusha
and
or
roll
test
lahf
and
add
pop
mov
adc
xor
lret
adc
fiaddl
into
test
or
xor
bound
jnp
dec
inc
sarb
xor
pop
sbb
lods
imul
sub
adc
xchg
sbb
loopne
cwtl
sbb
or
addb
call
add
or
or
or
les
movsl
xchg
adc
push
clc
shr
add
loop
or
or
cmp
leave
shr
or
mov
icebp
in
pop
jae
push
adc
test
and
add
mov
fwait
mov
add
add
fs
mov
xchg
jp
push
add
fidivrl
dec
inc
sbbl
inc
jl
in
sbb
cmp
movsb
leave
les
or
dec
pop
pop
adc
scas
sbb
and
aam
push
out
dec
fidivrs
ja
mov
adc
xor
repnz
into
clc
or
xor
mov
lea
add
xchg
push
pushfw
stc
test
fxch
push
insl
mov
nop
sub
sub
decl
mov
cmp
sub
and
xchg
xor
addr16
push
fiaddl
xlat
lock
cli
ficomps
adc
xchg
xchg
xor
push
insb
adc
xor
mov
mov
fsubrl
add
lret
dec
sti
xor
dec
push
call
incl
insl
mov
xchg
or
mov
pop
call
data16
sub
mov
scas
sbb
outsb
cmp
std
fs
dec
sub
loope
xor
bound
sbb
add
je
repnz
jp
cltd
bound
fwait
mov
inc
enter
outsl
stos
pop
loop
dec
inc
aaa
xchg
inc
push
xor
adc
pop
add
test
xchg
jne
inc
push
sbb
dec
leave
inc
jbe
decl
xor
js
aas
xorl
push
jns
and
gs
add
add
test
rclb
and
bound
mov
mov
jo
mov
stos
jb
pusha
sbbb
loope
or
mov
subl
or
rcrl
pop
mov
movq
clc
add
push
outsl
inc
mov
or
cmp
clc
and
xor
push
stos
sbb
mov
test
clc
sbb
inc
mov
xchg
mov
scas
mov
pop
out
add
aam
sbb
add
pop
je
add
bound
ret
mov
xor
str
cs
js
mov
push
lds
hlt
mov
mov
pop
inc
jno
mov
sub
push
add
sub
sarl
call
inc
ds
push
jbe
fcomps
add
call
ss
rcrl
nop
into
xor
and
add
push
int
sbb
cltd
dec
sarl
lock
stos
rol
call
pop
in
mov
cmp
jle
inc
rolb
jmp
dec
loope
sbb
aaa
adc
dec
cmpsb
sbb
mov
es
mov
jge
cmpsb
jmp
adc
cmp
cmpb
je
insl
pop
subb
push
incl
adc
push
pusha
push
fstl
and
or
push
mov
push
insb
jmp
add
push
sub
ficoml
push
xchg
fidivl
orb
and
aaa
jne
cmpsb
cmp
lret
sub
jmp
enter
std
jne
cmp
jne
gs
negb
jmp
dec
add
iret
add
jbe
into
adc
rorb
xor
cltd
or
adc
out
roll
leave
add
jl
js
je
mov
iret
adc
sbb
xorb
movsb
and
mov
jge
or
popl
xchg
pop
sahf
jne
movsw
and
int
or
push
mov
add
add
lahf
and
dec
or
adc
nop
add
clc
or
or
lea
mov
push
mov
lcall
jmp
dec
jge
inc
inc
push
neg
neg
sbb
jns
add
sub
inc
addl
mov
addl
sbb
and
push
adc
rcr
mov
xor
shl
sbb
adc
push
divb
adc
sbb
or
dec
jns
mov
dec
jne
pop
pop
pop
fildl
jp
or
adc
mov
rcl
ljmp
shr
add
test
cmpsl
jg
rclb
jmp
enter
andl
cld
je
outsb
xor
push
repz
add
addr16
dec
or
aaa
icebp
inc
into
add
push
pop
lods
jae
aam
dec
adc
adc
dec
lahf
push
enter
incl
jo
mov
je
push
xor
sarl
jbe
cli
sbbb
xor
xchg
push
xchg
pop
dec
and
push
daa
aam
or
push
rcrb
inc
sub
outsb
cmp
add
cmp
js
jg
sarb
mov
or
cmp
jo
pop
gs
or
push
add
cmp
dec
fst
jb
and
inc
ss
mov
aaa
dec
sub
pop
rolb
sub
inc
jns
push
out
cltd
movsb
cmp
cld
mov
enter
fcmove
jne
pop
cmp
inc
jmp
sub
add
rcr
popf
push
inc
mov
mov
sbb
or
or
or
imul
sbb
or
mov
je
adc
fdivrp
mov
cmp
jb
cmp
ja
add
cmp
adc
notb
loopne
or
shll
leave
adc
pop
adc
add
jl
les
je
adc
mov
mov
shll
push
push
and
push
mov
sub
aam
fcmovu
mov
sti
aas
cmpsb
mov
mov
push
movb
jmp
or
inc
sbb
aaa
scas
dec
shrb
pop
sub
sub
mov
or
popf
inc
push
inc
add
xor
add
mov
xchg
and
js
xor
pop
mov
ljmp
mov
push
sub
push
mov
jbe
inc
jb
mov
fdivrl
dec
push
andb
sbb
cmp
into
push
add
add
add
cmp
add
fwait
mov
xchg
cmpsb
push
imul
jmp
lcall
inc
imul
pop
pop
xchg
lea
sar
dec
ja
ja
dec
movswl
xchg
inc
stos
cltd
lods
fildl
es
dec
mov
lods
mul
mov
cmp
mov
je
inc
call
rcrl
adc
adc
jmp
sub
addr16
xor
and
mov
push
loope
stos
or
jb
jl
pop
mov
decl
jle
repnz
mov
adc
adc
mov
mov
mov
and
scas
std
and
lea
inc
xor
lods
push
cmpsl
add
into
sahf
cmpb
mov
js
cmp
idivl
hlt
xchg
icebp
iret
leave
out
mov
inc
call
jnp
ljmp
loope
rorl
add
and
lea
rolb
loop,pn
sub
sahf
inc
mov
push
lea
xor
sub
pushf
or
outsb
stos
fcoml
imul
add
movsb
pop
sahf
push
pop
xor
cmp
lods
shll
inc
insl
pusha
shrw
cmpsl
insb
xchg
mov
mov
pop
push
lcall
and
cmpsl
jne
rorb
addl
decl
popa
add
rolb
rol
nop
popf
loope
pop
or
and
rorb
lods
sti
sub
sbb
push
lret
rcrl
inc
mov
js
mov
jle
int3
jg
neg
shrl
loope
shr
or
mov
cltd
rcrl
dec
mov
jp
mov
lock
dec
and
jnp
repnz
jb
div
add
inc
pop
sahf
cmpsl
cli
div
rcrl
pop
js
jbe
mov
lcall
fcmovb
test
pop
test
add
or
cli
adc
and
sub
scas
mov
dec
aas
sbb
cmp
mov
push
fidivl
aad
mov
fldenv
enter
jg
or
lret
enter
rcrl
mov
in
sbb
push
sbb
dec
scas
inc
repnz
push
push
sbb
loop
out
inc
arpl
sahf
jge
out
mov
add
enter
imul
fwait
sbb
aam
daa
adc
mov
push
cli
or
jp
jae
dec
mov
shlb
fdivrs
aam
xor
jbe
dec
test
xchg
jge
adc
push
mov
ret
add
mov
adc
dec
xor
fmull
or
sub
add
add
mov
add
add
insl
test
sub
int3
jg
add
out
add
xchg
add
add
inc
adc
xor
adc
jg
or
xor
enter
lock
inc
mov
stc
jge
add
mov
nop
mov
movsb
jmp
add
pop
add
jne
jae
xchg
pop
fnsetpm(287
loopne
sub
and
pusha
mov
test
add
sbb
sub
xor
insb
sbb
div
mov
adc
inc
add
inc
mov
stos
ljmp
add
pop
outsb
call
xchg
sub
mov
mov
mov
and
rcrb
jb
cli
pop
inc
sarl
fsubrl
fdivs
mov
and
imul
mov
imul
cs
dec
loopnew
fmuls
leave
outsb
pusha
lea
push
and
mov
push
in
out
add
neg
movsl
out
jbe
in
pop
sti
add
lock
sar
sub
ja
into
inc
les
enter
xor
push
sbb
rclb
jbe
movsb
clc
lock
inc
dec
enter
fnsave
mov
sahf
mov
and
dec
int3
push
add
test
call
add
xor
add
add
sub
or
into
or
mov
inc
ljmp
jmp
mov
rcrb
jmp
cmp
jge
or
lahf
sub
cmpb
or
add
dec
cmp
imul
inc
dec
add
add
fadds
inc
inc
mov
call
ret
jp
jne
dec
sarb
or
adc
cmp
in
out
mov
mov
lret
mov
add
push
mov
nop
adc
test
mov
mov
mov
or
cmpsl
mov
dec
adc
and
ret
lcall
add
push
mov
mull
or
push
push
pop
rorb
jne
or
hlt
mov
or
add
rcrl
xchg
add
pop
jne
or
push
pop
scas
je,pt
sbb
ret
mov
cld
mov
ret
or
movsl
add
xchg
adc
or
pop
and
add
test
fistpl
mov
mov
iret
xchg
xchg
lret
lret
into
pusha
inc
cli
xorl
and
pop
pop
fidivl
pop
cwtl
cli
mov
ret
xchg
mov
loopne
sahf
inc
ret
or
mov
sbb
loopne
add
push
rolb
imul
or
or
jo
dec
push
add
add
push
gs
je
das
push
mov
jae
mov
pop
or
pop
add
insl
add
adc
cmp
jne
and
mov
loope
test
add
es
out
and
push
cmpb
cmc
or
ret
imul
jns
inc
push
jo
loop
clc
mov
mov
test
sbb
shll
push
scas
orl
mov
inc
subl
add
movb
daa
mov
loopne
mov
rorb
xchg
lock
loopne
sbb
repnz
test
adc
int
add
or
adc
into
mov
xchg
into
mov
mov
sbb
and
sbb
leave
repz
inc
jg
into
into
dec
inc
or
adc
sarb
push
pop
loopne
ficoms
pop
or
cwtl
insl
test
or
sbb
stos
push
jmp
and
and
push
fs
mov
pushf
hlt
add
leave
sti
cmp
out
adc
push
into
enter
movsb
and
mov
into
mov
and
mov
jp,pn
and
cmpsb
leave
adc
sub
lock
roll
aad
mov
cmpsl
fsub
movsb
lret
ljmp
mov
out
adc
cmp
pop
mov
add
loop
cmpsl
cmp
loopne
mov
lahf
xchg
mov
or
enter
xor
scas
sub
sub
push
lock
scas
outsb
pusha
outsl
adc
rcrl
in
ret
jl
add
testb
add
je
jnp
sbb
cs
add
test
jle
rclb
sbb
push
nop
insb
jno
aaa
xchg
clc
das
sbb
je
dec
mov
mov
jb
outsb
cmp
je
mov
or
mov
repnz
pop
adc
jg
or
or
cmp
jbe
dec
sbb
cmp
sub
jmp
push
mov
movsl
sbb
sub
fisubrl
push
lods
add
push
leave
mov
mov
mov
ret
mov
into
das
add
stos
les
and
in
and
inc
popa
test
dec
aam
add
scas
mov
fcompl
adc
loopne
jp
or
cmp
add
scas
pushl
mov
and
push
push
mov
push
mov
aam
movsb
mov
cltd
fsubs
fmul
orb
or
pop
cmpl
ret
sahf
mov
lret
xor
jb
pop
pushf
push
rclb
cmpb
or
aam
loope
movsl
ljmp
insb
or
fisubrs
sub
popf
inc
push
aaa
sbb
dec
js
add
mov
movsl
mov
or
pop
cmp
test
stos
add
popa
in
sub
mov
clc
xchg
pop
aaa
test
cmp
lock
pop
stos
sahf
mov
cs
mov
les
bound
dec
sub
adc
fwait
in
in
fsubp
adc
xchg
mov
loope
aaa
ljmp
lods
xchg
push
pop
mov
add
call
xor
push
ret
or
mov
push
jge
pushf
inc
push
dec
adc
inc
cmp
pop
test
adc
or
mov
in
jge
cmp
adc
icebp
mov
dec
loope
gs
sbb
popa
in
je
in
push
push
add
clc
cli
sbb
add
jg
mov
jp
fadd
js
movsb
xchg
sti
jo
mov
addl
pop
mov
push
lods
dec
loop
rol
xor
addr16
xchg
enter
insl
cmpsl
mov
add
loopne
push
pop
nop
out
push
out
mov
test
cmpsb
mov
push
jle
push
jmp
dec
fs
movsb
fisttps
fucomp
add
jp
cmp
jmp
int
subl
push
js
push
adc
add
push
sbb
adc
xchg
aam
loopne
sbb
inc
insl
push
test
pushf
iret
pop
cmp
push
cmp
push
mov
sub
add
loop
sub
sbb
add
push
es
dec
xor
shl
decl
jno
lods
push
jg
scas
sbb
or
sbb
out
btc
aas
pop
cmp
pop
mov
xchg
add
push
iret
imul
pop
mov
cs
inc
and
test
inc
fs
and
repnz
loop
cmp
pop
inc
push
sbb
mov
cmpsb
js
pop
syscall
push
or
sub
fcomps
xchg
gs
jmp
lods
loope
mov
cld
ret
add
in
pop
dec
pop
js
les
invd
loope
nop
sahf
test
push
sub
and
movsl
loopne
call
cmp
and
jmp
loopne
pop
mov
sbb
pop
clc
addr16
xor
outsb
pop
rorb
dec
in
push
push
xlat
mov
inc
jle
mov
test
push
jmp
inc
adc
popf
mov
push
xor
add
clc
cltd
mov
push
add
or
jnp
mov
sar
xor
sbb
dec
pop
push
inc
sub
pop
and
mov
and
pop
mov
adc
xchg
pop
inc
sub
rol
push
sarl
stos
aas
test
ret
cmpsl
or
add
mov
es
sub
sahf
xor
shlb
insb
add
jecxz
shrb
and
adc
test
dec
or
cltd
push
or
add
push
inc
rcrl
test
pusha
mov
lods
push
mov
sbb
push
stos
test
int
add
shlb
ds
jmp
mov
sub
pop
jecxz
sbb
mov
push
sub
or
insl
cld
mov
loopne
movsl
jnp
rcrl
xor
and
andl
jo
jo
mov
roll
pusha
imul
inc
add
jmp
stos
sub
cld
mov
inc
or
or
adc
add
pop
or
jmp
in
mov
cmp
arpl
adc
scas
sub
fstps
adc
mov
inc
das
cmp
and
sbbb
pop
adc
pusha
mov
push
mov
xchg
mov
mov
xchg
sahf
adc
in
sub
sbb
mov
call
or
cltd
push
mov
aas
push
sbb
jo
popf
inc
push
xchg
xchg
xchg
rolb
sbb
pop
addb
add
aam
pusha
loopne
dec
enter
bound
push
popa
sub
mov
xor
subb
push
mov
or
xchg
shr
std
data16
xor
inc
and
push
and
nop
insb
jmp
push
pop
loope
pop
mov
adc
imul
xor
stos
pusha
jne
pop
sub
xor
or
popa
xor
sub
push
arpl
imul
fidivrl
flds
ja
mov
jo
fsubrp
sub
add
inc
imul
add
jb
xchg
jge
cmp
sbb
loopne
les
jg
sub
inc
mov
sbb
cmp
ja
jbe
inc
pusha
or
jge
das
push
aaa
pop
in
xlat
cwtl
xchg
lret
pushf
xchg
pop
add
mov
pop
sbbl
push
call
jp
repnz
test
jg
adc
in
ds
shl
lcall
xchg
icebp
imul
shll
inc
jmp
mov
cmpl
lock
mov
fadds
add
jbe
mov
mov
lret
push
cwtl
inc
clc
rcrb
adc
in
ljmp
and
jmp
adcb
inc
lea
subb
stos
inc
or
push
outsb
sub
or
fs
cmpsl
and
pop
fs
int
sub
test
or
xchg
mov
dec
xlat
sub
cld
push
inc
inc
loopne
pop
cmp
cmp
cmp
mov
data16
jmp
mov
mov
sbb
cmpsb
mov
hlt
xor
adc
jg
mov
push
cld
jae
push
cmpsb
xchg
or
imul
cmp
bound
mov
jp
ja
ret
inc
xor
mov
mov
dec
testl
imull
and
xchg
mov
in
sbb
es
cltd
and
jmp
testl
ret
or
inc
loop
sub
mov
ret
arpl
cmpsb
loopne
test
popf
ds
movsl
mov
adc
and
and
adc
inc
sbb
push
mov
test
lds
std
data16
rcll
sbb
sub
mov
mov
push
add
sbb
test
pusha
inc
stos
bound
mov
adc
or
popf
xchg
add
js
sub
addb
push
add
add
push
pop
cmp
stc
inc
dec
sbb
cmp
loop
es
sbb
sbb
lcall
mov
loopne
test
push
in
push
sbb
fistl
push
mov
push
or
pop
jg
cli
mov
sub
jmp
pop
jl
or
mov
repnz
mov
xchg
addl
rolb
mov
loopne
and
add
sbb
test
sbb
int3
add
pop
stos
test
jp
les
sahf
sbb
scas
mov
mov
shl
aaa
loope
fsubs
insl
cmp
pop
inc
rclb
js
test
push
lods
push
xchg
sbb
jmp
loope
mov
and
cltd
ret
cmpl
dec
cmpsb
pop
adc
cmp
jae
inc
mov
lret
cmp
adc
cmp
shlb
or
out
mov
xor
cmp
insb
arpl
hlt
add
mov
jmp
pop
pop
push
xor
nop
inc
outsb
fadds
jae
push
pop
outsb
pop
mov
shl
movsl
push
inc
cmpl
sub
cmp
femms
pop
push
dec
ret
movsl
and
out
rcrb
sbb
lods
lock
inc
scas
inc
fisttpl
sub
data16
and
fcomps
or
xlat
inc
in
jmp
inc
dec
add
adc
or
push
test
mov
dec
fiaddl
or
xchg
addb
shrb
ja
clc
add
fnsave
sbb
push
add
mov
sub
and
adc
insb
inc
data16
push
xorb
cmp
test
je
cmp
aam
adc
lods
fnstenv
push
xchg
and
lds
cmpsl
test
cmp
or
cltd
mov
xchg
je
mov
cltd
neg
add
cmp
movsl
xor
arpl
add
inc
jb
pop
mov
push
ss
ss
add
jno
push
popa
sbb
std
repnz
sar
sbb
rolb
push
adc
and
cmp
aas
xor
xor
dec
sbbb
icebp
jne
push
mov
jo
fcoms
jmp
xor
pop
add
cmp
add
pop
je
adcl
push
xchg
lret
hlt
or
push
sub
mov
std
pushl
lds
enter
or
inc
mov
icebp
mov
cli
arpl
mov
and
add
sbb
stos
add
xlat
xchg
jle
in
xchg
orb
lea
lahf
lock
or
inc
aam
or
je
inc
movsb
add
insb
inc
mov
rolb
pusha
hlt
push
rorb
cli
push
jb
bound
mov
cs
mov
loopne
jl
mov
adc
fwait
orl
cmp
cwtl
sub
add
and
rcrl
into
sbb
pop
and
mov
jb
addl
pop
sbb
or
adc
and
sub
jle
stos
insl
inc
push
jl
enter
xor
cmp
ret
sub
ljmp
sub
scas
xor
mov
insl
cltd
das
or
add
adc
add
mov
ror
enter
pop
jecxz
rorl
stc
jbe
sbb
mov
es
add
add
and
or
mov
push
mov
jnp
mov
mov
mov
mov
outsb
aam
lods
lahf
ss
adc
jle
lahf
jbe
xchg
les
sub
es
data16
adc
sub
sbb
xor
jmp
js
or
and
jg
dec
inc
in
jg
add
mov
add
adc
imul
inc
pop
add
repz
test
mov
or
negb
dec
hlt
adc
jnp
pop
jle
out
call
lea
add
in
clc
and
lods
mov
and
sbb
pop
add
push
jge
call
sbb
adc
orl
jg
jmp
adc
lods
pusha
add
mov
and
es
or
adc
cmp
loopne
push
popf
out
dec
fadds
cmpsl
push
jnp
setle
gs
lret
pop
pushf
and
mov
jle
push
jae
scas
addb
or
push
mov
push
inc
or
lock
inc
nop
gs
sub
stos
add
mov
inc
lret
pop
xchg
sub
sti
imul
loop
insb
and
lcall
add
sub
fidivrl
sbb
cwtl
arpl
pop
mov
pop
clc
aaa
enter
je
cmp
adc
cmp
jb
ret
iret
mov
testb
out
inc
push
rcrb
add
sub
pop
mov
jnp
fmuls
jmp
inc
sbbl
je
cmp
jo
inc
aad
jns
jb
cmp
jbe
clc
adc
js
push
push
or
outsb
cmpsb
lock
in
push
rcll
xor
rcl
call
and
ljmp
shrb
cmc
and
or
push
mov
push
je
mov
add
fidivrl
shlb
pop
es
sbb
sahf
test
imul
pop
lret
imul
mov
pop
sti
subb
push
xchg
mov
mov
xlat
in
push
mov
sbb
sub
add
add
fstl
hlt
lods
arpl
aad
cli
mov
sbb
pop
shll
and
inc
stc
aas
add
adc
add
add
aas
xchg
bnd
jne
add
xchg
sbb
in
add
and
aas
xor
pop
enter
fisubrl
aaa
pusha
xor
adc
mov
cmp
adc
push
dec
shlb
mov
add
lcall
andb
je
pop
and
fld
fnstenv
fists
fildll
mov
dec
lock
jbe
pop
idivb
jmp
cwtl
mov
xor
push
inc
rolb
popa
loop
jmp
cmp
enter
fidivrl
adc
ret
fstps
int3
adcb
inc
pop
or
mov
and
in
pusha
xchg
inc
adc
xchg
mov
xchg
nop
mov
mov
mov
loope
clc
cmp
pusha
leave
xor
xchg
xor
jne
ret
jg
or
add
fcompl
adc
addr16
or
insb
mov
dec
sarl
xchg
lock
pop
lock
insb
push
les
nop
sub
das
nop
mov
jo
add
xchg
or
adc
mov
sbb
or
dec
xchg
mov
dec
jnp
xchg
call
dec
push
cltd
fmuls
jne
shlb
sbb
bound
cld
fmuls
fs
int3
pusha
cld
xchg
cld
push
cmp
push
jne
add
fcmovb
sub
mov
sub
int3
push
ljmp
popa
in
adc
add
pop
setne
or
dec
xchg
mov
je
roll
xchg
push
jae
rcrl
enter
add
inc
lahf
iret
inc
push
jb
xor
dec
in
or
enter
loopne
adc
ljmp
jge
or
lock
jp
mov
ret
jnp
adc
add
push
sbb
mov
dec
lock
insb
adc
pop
in
or
xchg
cwtl
repnz
stos
mov
clc
adc
ret
fsubr
inc
in
bound
dec
pop
mov
call
add
adc
xchg
adc
rorl
inc
push
js
or
sub
cli
xor
lods
jbe
fcomps
xor
popa
out
or
sbb
inc
fadds
cld
xor
inc
cwtl
inc
push
movsb
call
in
fadds
mov
int3
movsb
lcall
js
add
mov
movsl
cmp
pop
enter
pop
cmp
jg
rorl
mov
call
cmp
nop
adc
les
xchg
jbe
test
and
rclb
stos
in
jb
lcall
stos
push
ret
jb
cmc
inc
adc
xor
adc
sbb
mov
pusha
fs
dec
es
push
cltd
fs
jl
mov
addl
adc
jo
xor
fstpt
lea
xchg
out
mov
sub
adc
mov
xchg
shlb
roll
popf
mov
push
adc
icebp
jmp
xor
push
lods
xchg
fxch
sahf
mov
sbb
xchg
inc
cli
sub
ja
and
mov
xor
pop
shll
add
sti
push
and
jl
push
push
fcmovnb
add
jle
cmp
mov
cwtl
add
les
cmp
jbe
clc
add
xor
sub
and
or
int3
orb
icebp
outsb
inc
sbb
cmpb
enter
add
sbb
aam
push
jo
insb
adc
xchg
in
sbb
or
jge
sub
fidivl
insl
mov
popf
lock
lea
out
scas
or
sub
mov
sbb
orl
mov
in
sbb
jp
and
adc
dec
or
mov
fs
sbb
inc
cmpsb
in
sub
in
sbb
and
dec
rorb
inc
jbe
fsubrl
jle
jne
jne
test
in
push
jne
xlat
sbb
cltd
imul
fsubr
aam
and
mov
sub
inc
and
dec
mov
clc
pop
in
adc
adc
add
sbb
dec
push
andb
ljmp
in
jnp
push
pop
push
cmp
and
imul
je
fadds
imul
roll
cmpsb
push
xchg
fisttps
pusha
jp
push
incl
adc
ret
fists
pop
cmpsl
push
call
jl
lahf
inc
test
movsb
fs
pop
xchg
adc
push
es
cmp
dec
pop
dec
fsubl
aas
pop
add
mov
push
sub
mov
and
dec
fs
hlt
mov
or
or
clc
lods
add
mov
cwtl
adc
push
jno
mov
jne
jg
int3
and
and
popf
jge
cmpsl
ss
popf
push
and
dec
adc
popa
mov
xchg
add
lods
add
stos
and
sbb
in
add
loopne
push
adc
adc
aad
and
or
mov
sbb
adc
insb
and
and
loopne
insb
mov
or
in
or
dec
jb
or
add
and
sub
dec
push
ljmp
pop
dec
pop
sub
out
lea
test
fisubrs
sbb
fiaddl
mov
push
je
fdivr
add
mov
pop
shll
or
test
stos
push
jb
push
pusha
and
xlat
faddl
dec
mov
jns
movsbl
xlat
and
clc
inc
mov
ret
test
jns
pop
fcompl
jbe
pusha
add
cmp
pop
cmp
and
adc
in
pop
shll
fadds
add
sbb
fcomp
aam
fs
es
fmull
inc
cmpsb
fmuls
das
faddl
or
jns
sti
call
sub
es
aam
fs
inc
fcom
sub
movsb
mov
xchg
sbb
inc
mov
or
jl
sbb
mov
cwtl
je
sti
daa
jnp
ret
fsubrl
scas
fwait
sbb
leave
sbbb
sub
movsl
test
sti
adc
jbe
mov
loop
pop
or
movsl
aam
xchg
push
insb
sub
xor
sbb
dec
or
or
pop
jb
and
or
pop
leave
and
cmp
jo
loopne
enter
jb
xor
or
outsb
push
adc
add
and
test
cmp
sub
or
or
sub
or
mov
adc
insb
int
inc
cwtl
and
cwtl
adc
sub
nop
test
testb
adc
push
ror
xor
aaa
adc
imul
mov
popa
in
jnp
cmp
sub
sbb
ret
sbb
push
dec
push
dec
sub
mov
and
sub
sti
fadds
fdivs
movsl
movsb
adc
inc
push
pusha
sub
les
and
push
movsb
sub
add
adc
test
rclb
sti
mov
call
insb
mov
xchg
aam
jnp
movsb
in
sub
and
sbb
leave
ret
adc
adcl
pop
pop
sub
jge
das
rcrb
ljmp
mov
sbb
test
sbb
mov
test
arpl
leave
push
pushf
or
jno
insb
adc
sub
jmp
push
lds
push
mov
push
mov
scas
xchg
shrb
pop
cld
inc
cmpsb
or
jmp
nop
ret
ja
das
sbb
iret
fs
mov
addb
das
and
xchg
ljmp
jno
dec
pavgb
xor
push
mov
arpl
enter
orl
xchg
test
inc
or
adc
sbb
cmp
or
or
fs
adc
cmp
dec
adc
push
jb
xor
pusha
xor
or
xor
mov
lods
in
pop
and
dec
inc
xor
test
mov
fisubrl
cs
aad
cs
stc
xchg
mov
loopne
mov
sarl
inc
fs
push
and
fmuls
dec
xor
mov
je
mov
roll
jne
mov
push
test
mov
xor
es
pop
into
mov
repnz
add
mov
mov
inc
xor
cmpsb
add
insl
lock
dec
inc
fmul
jne
or
adc
and
or
and
add
orb
xor
mov
push
mov
pop
cmpsl
mov
cwtl
in
scas
nop
lock
inc
dec
mov
pushf
aaa
and
cmp
stc
cwtl
and
lea
sbb
leave
adc
or
lock
sub
ss
add
loope
jno
aam
inc
adc
mov
imul
mov
sbb
and
fimuls
int3
pslld
enter
in
mov
test
sbb
inc
int3
and
maxps
iret
enter
adc
mov
and
mov
in
fistpl
jmp
adc
and
adc
and
add
fsubl
insb
mov
add
lods
push
loop
push
fadds
inc
jmp
enter
out
adc
repz
push
and
pop
cmp
sbb
in
loopne
xor
call
xorps
ljmp
ret
and
cmp
loop
lcall
xor
movaps
fcoms
aam
adc
sub
mov
les
rcrl
mov
call
inc
rcll
cmpb
mov
cmp
cwtl
adc
xchg
nop
pushf
adc
nop
mov
lret
test
inc
adc
fcmovb
mov
xchg
sub
enter
inc
clc
xor
dec
push
faddl
aaa
test
test
sbb
mov
inc
mov
dec
popf
and
lods
mov
scas
sbb
push
and
movsb
fdivr
loopne
movsl
xor
rcrl
sub
mov
fnstcw
repz
shl
fsubs
inc
sub
sbb
imul
call
in
aam
orb
fldt
mov
or
inc
testl
stos
pop
fcoml
pop
add
pusha
jmp
lock
aas
dec
add
mov
loope
enter
sbb
inc
push
mov
cmp
sub
repnz
adc
jp
add
cwtl
testl
adc
or
xchg
xor
xchg
mov
dec
mov
jo
xchg
cmp
ret
dec
inc
ss
adcl
lea
adc
mov
cmp
lea
mov
cli
notb
cmp
xchg
mov
or
inc
pop
das
test
das
mov
mov
mov
leave
cmp
lock
dec
jns
shrl
dec
or
arpl
push
mov
xor
enter
mov
jnp
sub
jne
dec
lock
pop
popa
test
test
sbb
rorb
popf
cmp
sahf
xor
add
mov
cmp
loope
nop
inc
data16
sti
or
aad
daa
movsb
pop
push
call
dec
inc
sbb
mov
mov
popa
adc
inc
cmc
mov
sbb
or
sbb
adc
fwait
mov
mov
jb
test
call
push
in
or
flds
and
pusha
cmp
jl
inc
sub
add
nop
and
insb
and
icebp
inc
and
inc
in
movsb
sbb
lahf
call
dec
xchg
imul
adc
insl
int3
inc
aam
or
pop
mov
addb
push
aam
pop
or
pushf
and
inc
push
mov
jnp
dec
inc
push
jb
in
loopne
inc
adc
xor
test
cmp
dec
repz
enter
rorb
and
jbe
popf
ja
push
adc
clc
rolb
xor
movsb
lea
adc
fdivrl
add
add
bound
insl
add
shrb
pop
fisubrl
shlb
push
pop
int3
gs
sub
adc
pop
in
cltd
test
jge
daa
in
inc
aad
aam
dec
rcrb
and
mov
in
dec
push
cwtl
gs
ret
les
mov
shlb
les
lds
rol
xor
divl
lock
nop
inc
in
pop
gs
adc
pop
sbb
stc
adcl
rorb
add
push
xchg
pop
rclb
push
xor
or
addb
in
sub
in
mov
ja
inc
adc
push
push
cmpsl
aad
pop
dec
insl
sbb
jne
and
fiaddl
mov
lods
in
test
jne
cmp
test
lds
aas
mov
mov
ret
push
shll
dec
xchg
or
fiaddl
in
sbb
cltd
pop
sub
test
and
aam
add
or
push
lods
fs
and
gs
mov
dec
outsb
pop
add
sahf
xor
fsubl
rcrb
push
and
mov
dec
test
and
sbb
aad
enter
in
scas
in
int
leave
pushf
cwtl
xor
fsubs
cmp
inc
lcall
mov
pushf
mov
sbb
dec
insl
cmp
adc
stos
push
iret
testl
or
and
xchg
add
mov
lods
fadd
lods
sbb
mov
or
rcl
leave
push
roll
xor
inc
and
mov
js
adc
push
fbstp
add
adc
mov
inc
mov
cmpsb
pop
xchg
adc
mov
js
pop
or
add
sbb
adc
sub
imul
mov
gs
and
jo
adc
leave
and
push
jb
xor
push
or
lods
push
adc
jno
lods
enter
pop
int3
xor
push
jns
xor
sub
mov
movsb
jge
add
mov
adc
mov
test
aam
iret
or
jl
mov
call
push
rcl
dec
push
shlb
je
leave
aad
sub
scas
fsub
mov
iret
fcoms
or
push
inc
push
mov
push
sbb
sar
sub
pop
js
cmc
push
lods
call
xor
rorl
inc
outsb
and
fs
sbb
insb
xchg
cli
jo
adc
mov
jge
ficoms
add
push
fs
fnstsw
xor
insl
add
mov
push
pop
push
out
push
movsb
adc
jae
rcll
and
mov
lret
pop
inc
adc
test
or
dec
jno
jo
push
pop
rcrb
push
pop
enter
and
shlb
mov
jp
idivl
subb
xchg
jp
or
leave
add
insb
adc
mov
sti
fs
and
adc
cltd
push
cltd
fs
sbb
cltd
fs
and
cmpsb
pusha
xchg
dec
sub
xor
daa
fmuls
push
adc
and
mov
inc
ret
or
cmp
shrl
jne
mov
fwait
inc
enter
push
sbb
jbe
movsb
cmp
inc
or
stos
inc
pop
add
scas
mov
dec
and
mov
dec
je
lea
inc
add
movsb
add
mov
pop
pop
sbb
and
inc
pop
or
or
jne
inc
or
jge
adc
inc
fs
outsb
push
in
lods
test
xor
sbb
push
or
ret
sub
int3
ja
adc
fiaddl
bound
in
pop
in
mov
jle
add
and
sub
push
es
and
mov
cmpsb
movsl
sbb
enter
jle
add
ret
cmp
add
sbb
pusha
mov
aas
or
inc
int3
dec
les
les
int3
rcl
pop
stc
mov
cs
jecxz
push
mov
daa
fsubs
repz
xor
sbb
jns
imul
inc
mov
and
shrl
ret
stos
movb
rcrb
adc
mov
or
inc
lcall
sbb
jmp
mov
cmpsb
inc
in
fildll
jbe
lods
xchg
mov
or
call
nop
add
jecxz
je
or
popl
and
mov
loopne
mov
cmp
movsb
ja
mov
aaa
addr16
fdivs
rorl
dec
mov
sub
fs
cs
ja
dec
xor
scas
mov
inc
ret
mov
or
mov
test
test
lcall
int
imul
mov
shll
xchg
mov
ret
push
mov
mull
xor
add
mov
enter
das
push
inc
call
xchg
out
add
aam
cwtl
lods
and
sti
sti
ret
pop
push
addr16
scas
or
fdivl
cwtl
cwtl
and
sbb
insb
jbe
mov
fdivs
push
daa
adc
mov
pop
lods
jo
push
leave
fcoms
sub
mov
sbb
enter
xchg
lea
or
pusha
inc
xchg
clc
push
sbb
sub
addr16
xorb
test
fisubrl
in
inc
mov
jmp
dec
push
cwtl
sbb
leave
xor
in
jns
inc
sub
andb
add
lea
pop
nop
pusha
rcr
mov
je
lock
ret
sbb
xor
push
dec
xchg
add
lods
in
ja
add
imul
rorb
aad
push
add
inc
mov
and
inc
arpl
xor
jg
sub
in
mov
cmp
add
lods
loopne
sbb
mov
roll
inc
add
mov
or
and
pop
or
repnz
daa
jg
call
or
leave
mov
sbbb
fsubr
pop
mov
das
aam
movsb
shrl
mov
stos
sbb
out
lahf
in
mov
mov
adc
pushf
jo
int3
rcrl
inc
add
mov
insl
mov
inc
gs
movsl
mov
shlb
fcoml
inc
aam
mov
imul
push
notb
sbb
outsb
das
push
dec
pop
dec
adc
dec
imul
bnd
mov
pop
rorb
ret
or
add
test
sbb
or
xor
mov
fcomp
adc
lahf
pop
or
and
rorb
or
cmpb
adcb
add
cwtl
mov
add
and
xor
push
test
and
xor
add
and
lods
insb
pushf
or
xor
dec
movsb
lods
add
orb
inc
inc
es
ss
pushf
cltd
fs
dec
insb
lods
push
fs
dec
mov
dec
es
push
jl
dec
es
fs
mov
cwtl
nop
mov
fs
dec
mov
dec
and
cmp
sub
in
decb
imul
out
test
fcoms
mov
enter
mov
ljmp
cltd
bndldx
mov
mov
stos
sbb
add
mov
sbb
pop
xor
jl
test
mov
enter
movsb
jb
and
and
cmc
push
cmp
aam
sub
fs
fsubrs
in
mov
adc
leave
mov
mov
gs
lods
mov
in
addb
and
pushf
js
pop
xchg
xchg
xchg
fcmovnbe
bswap
les
lods
movsb
pushf
sub
mov
xchg
mov
test
and
fcoml
pop
sbb
pop
imul
xchg
mov
pop
mov
cmc
push
jbe
xor
push
in
orb
imul
sub
dec
inc
test
xchg
push
lods
xchg
inc
jmp
cmp
stos
inc
sti
xor
or
pop
ja
inc
lea
gs
aam
adc
and
dec
adc
ret
inc
jo
jmp
sbb
mov
pop
add
movsb
and
cs
xchg
sub
xchg
shlb
sub
cmpsl
test
sbb
add
pusha
adc
into
fwait
movsb
pop
stos
imul
mov
pop
dec
push
lods
push
add
pop
sub
and
ror
enter
mov
inc
mov
xlat
lret
xor
and
movsl
dec
repnz
idivl
fs
push
movsb
dec
adc
sbb
adc
cmpsb
or
int
jecxz
in
dec
dec
dec
dec
mov
or
push
mov
dec
loopne
shll
sub
dec
dec
mov
fsts
shll
sub
adc
flds
mov
and
adc
push
insl
dec
add
adc
mov
cmpl
push
fildl
pop
shlb
push
adc
sub
mov
adc
fnsetpm(287
clts
and
xchg
fidivrl
outsl
fadds
push
loop
adc
dec
rol
ret
mov
and
rcrl
push
adc
sub
sbb
addr16
sub
jb
nop
mov
nop
ja
or
icebp
add
cltd
ss
fiadds
mov
pop
pop
push
mov
imul
das
xchg
add
fadd
sbb
xor
sbb
sbb
cltd
mov
adc
and
rclb
fmul
les
mov
stc
les
or
mov
enter
test
add
and
fs
imul
ja
and
rolb
aas
xchg
xor
aas
mov
orb
inc
mov
scas
sub
dec
mov
or
pop
mov
ja
jle
fwait
sbb
stos
sub
and
movsb
add
imul
or
push
les
in
nop
inc
add
mov
and
repz
sub
jno
adc
mov
das
insb
mov
imul
jl
or
jge
mov
xchg
nop
movsb
xor
pop
lods
adc
pop
sahf
pop
inc
mov
xchg
subb
mov
std
push
mov
adc
jo
lock
adc
sub
pop
adc
or
movsb
add
add
in
int
movsb
mov
lea
fwait
sbb
dec
or
sub
repnz
fisubl
adc
mov
sub
shrb
rol
sub
cmp
jg
push
dec
outsb
test
in
sti
jo
popa
dec
leave
fists
dec
jb
and
and
adc
sub
movsb
addb
les
push
sub
clc
mov
push
pop
scas
cltd
add
icebp
mov
clc
xor
xor
repz
adc
cmpb
mov
lea
rorb
pop
cwtl
mov
adcl
insl
nop
inc
jo
sub
ret
in
dec
sbb
push
bound
add
cmp
jo
enter
imul
int3
pop
call
insl
inc
push
push
sub
movsb
lods
sub
jno
inc
pop
mov
mov
or
sbb
pusha
inc
fcmovbe
out
mov
pop
cltd
aas
out
sbb
or
sbb
or
jns
ljmp
rorl
mov
sbb
pop
dec
and
mov
test
sub
rorl
cmp
inc
shrb
and
cltd
mulb
adc
and
xor
xor
pop
xchg
mov
and
orl
or
push
jno
push
inc
mov
jb
adcb
inc
int
call
or
inc
push
fistl
xchg
in
pop
mov
adc
mov
adcb
mov
sub
mov
enter
pop
mov
sub
lods
imull
push
jo
pop
dec
push
cmp
xor
addb
adc
adc
pop
and
dec
adc
inc
insl
test
adc
mov
lods
inc
sub
lds
and
xor
add
subb
and
dec
pop
add
test
xor
and
ret
test
mov
add
nop
repnz
push
mov
xchg
jge
adc
sbb
ret
xor
std
add
xor
xor
fsubrl
arpl
sub
add
xchg
adc
push
inc
push
and
insl
mov
push
mov
lcall
lods
jbe
add
dec
cli
inc
adc
sbbb
sbb
inc
dec
ljmp
dec
rclb
scas
test
lcall
inc
sahf
lods
cmp
je
movb
add
ss
xchg
inc
add
in
lcall
pop
push
xor
push
add
leave
je
js
add
xchg
or
leave
and
mov
jns
xor
lds
nop
mov
out
popf
dec
stos
mov
orb
mov
mov
xchg
sub
xchg
loopne
or
add
ret
int
sub
ret
movsb
mov
bound
sbb
sbb
fidivl
lea
dec
and
cmp
dec
inc
nop
test
mov
fstpl
add
ret
adc
dec
test
sbb
xchg
int3
adc
je
jae
dec
mov
and
sarb
les
add
lods
adc
cltd
cwtl
mov
icebp
adc
mov
andb
lea
xchg
mov
jmp
rolb
stos
dec
cmc
or
or
cmp
fstps
mov
inc
or
mov
add
push
adc
pop
imul
pop
cmp
cmp
and
pop
bound
jge
mov
mov
lock
pop
dec
push
push
and
inc
inc
push
pop
mov
clc
sti
xlat
fisubl
iret
dec
dec
push
cld
in
inc
jo
in
hlt
icebp
inc
ds
jb
add
jecxz
sahf
or
lods
xor
inc
or
lods
or
mov
dec
jb
mov
shrl
sub
addb
add
inc
adcb
sbb
movb
fisubrl
scas
xchg
and
cmp
push
ret
jl
subb
push
rclb
rorb
adc
in
jmp
popf
je
call
pop
mov
and
pushf
stc
loop
pop
mov
mov
daa
add
fs
push
icebp
lock
jecxz
add
xchg
test
rcll
nop
xor
nop
imul
add
hlt
sub
or
out
and
push
xchg
in
sbb
dec
sbb
cmp
in
mov
loop
inc
jmp
cmp
es
xchg
es
or
insl
push
int
mov
jl
std
mov
pinsrw
adc
inc
std
add
add
orb
add
add
out
push
out
or
sahf
out
jl
cltd
scas
rcrb
add
push
aaa
push
jae
jg
jns
add
push
inc
add
push
mov
aas
jbe
fprem1
int3
push
ljmp
inc
aas
dec
pop
inc
add
and
add
incl
orb
jnp
mov
add
adc
mov
rcll
xchg
mov
or
outsl
cmp
adc
jp
lret
pop
mov
incl
nop
add
into
pop
adc
test
dec
testb
push
mov
mov
dec
cld
sahf
or
mov
or
enter
push
jnp
popa
pop
lock
rdpmc
add
invlpg
mov
incl
sub
pusha
mov
pushl
popa
and
insb
outsl
arpl
imul
mov
xorb
sub
popa
arpl
jne
jb
outsb
sti
fisubrl
je
add
das
ss
insl
adc
jnp
subb
inc
outsl
jb
js
je
mov
mov
jae
or
outsl
add
add
add
jge
add
jne
les
inc
cs
mov
jb
and
add
pusha
pusha
daa
add
aaa
or
jl
dec
add
xor
fdivr
mov
inc
push
add
aas
push
add
pop
dec
add
sub
mov
insl
xchg
je
je
and
idivl
dec
fisttpl
out
loopne
mov
insl
push
push
shr
loopne
or
bound
repz
sbb
popa
idivb
xor
insb
jp
fndisi(8087
fisttpll
or
mov
frstpm(287
arpl
lret
aas
rcrb
fisubs
out
outsl
jmp
jo
mov
pop
xor
stos
insl
sub
adc
push
imul
push
cmp
jne
inc
push
data16
xchg
mov
ds
jp
sub
sub
jnp
popa
pusha
sbb
daa
lahf
popa
into
jecxz
adcb
arpl
pop
jnp
inc
or
daa
dec
enter
jbe
fbstp
jge
ja
bound
jnp
ficomps
ficompl
ret
arpl
mov
or
push
xor
sub
mov
xlat
xor
filds
push
jo
scas
das
jb
ret
fiaddl
cs
movaps
pop
or
add
fs
mov
imul
jg
popa
sub
cmp
or
outsl
xchg
pop
push
sbb
lahf
aaa
jg
rclb
pop
dec
iret
push
fists
in
xor
loopne
divl
jb
jne
and
jg
out
sub
xor
stos
bnd
icebp
jbe
push
das
rcrl
jae
shrl
mov
cmp
push
cmp
fistps
outsl
aas
or
arpl
sbb
push
mov
inc
jb
push
xlat
aaa
jge
shrb
jecxz
stos
fs
fidivl
imul
shll
sbb
rdtsc
cmpsl
outsl
loopne
sbbb
sub
pop
xchg
sbb
mov
pop
add
pop
out
jnp
in
pop
insl
lret
je
mov
cmp
addr16
mov
loop
subb
ja
jecxz
push
push
sub
lock
cmp
xor
mov
fldenv
pop
add
mov
or
push
inc
imul
insb
jecxz
push
inc
inc
mov
sahf
adc
das
sbb
testl
fcomps
int
jns
mov
sbb
test
sbb
cmp
das
push
pop
sahf
push
sbb
sbb
repz
cmp
jns
jp
push
cld
js
sahf
out
outsb
incl
clc
mov
addr16
jp
ja
pop
sub
sub
push
push
push
out
mov
fucom
xchg
add
pop
mov
jl
insl
out
xchg
push
or
pop
mov
pop
pop
sti
mov
and
jge
fdivrl
push
xor
mov
and
jns
in
repnz
add
das
das
and
ret
pop
mov
out
dec
ljmp
loope
and
decb
cmc
pop
ret
ret
dec
repnz
jnp
jns
aas
dec
inc
out
pusha
xor
mov
mov
sbb
ds
daa
outsl
jo
mov
dec
and
add
inc
inc
das
pop
mov
ss
imul
iret
jns
rcr
mov
out
and
outsb
sti
adcb
inc
pop
xlat
mov
inc
jae
push
imulb
dec
and
sub
pop
jbe
scas
push
dec
fbld
ds
insl
arpl
mov
mov
xor
es
cmp
cmp
ficompl
sub
fs
dec
and
popf
scas
imul
dec
testb
arpl
bound
dec
outsl
jbe
popa
or
arpl
inc
jo
sub
jne
jne
xor
insb
xchg
outsb
xchg
call
jo
imul
fnstsw
adc
into
mov
jae
xchg
popl
jge
into
jg
addr16
popa
je
jb
xor
mov
jae
push
gs
sbb
idivb
push
jne
dec
outsl
outsb
and
jbe
ja
pop
dec
inc
aas
add
imul
out
dec
or
adc
fistpll
dec
add
insb
jae
push
dec
mov
push
popa
insb
jne
inc
add
mov
add
mov
jmp
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
or
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
insb
jl
test
xchg
pop
pop
pop
pop
pop
or
lcall
arpl
addr16
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
dec
adc
fs
lcall
loopne
pop
ret
mov
orb
sar
lret
repz
repnz
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
pop
loope
lds
shrb
outsl
fs
xor
imul
aas
daa
mov
gs
xor
cmp
outsb
bound
add
negl
dec
pop
sbb
icebp
cmp
ret
sub
int3
adc
adc
test
add
add
add
add
adcb
and
push
pop
push
sbb
sbb
hlt
and
add
pusha
fidivrl
into
push
add
inc
add
or
fucomip
into
add
sbb
addb
add
xchg
test
add
neg
cmpsb
flds
push
cmpb
push
and
sub
jb
int3
push
je
fcmovne
jo
add
nop
push
js
and
das
push
outsb
imul
mov
push
jo
add
add
aam
pop
adc
fcmovnb
lock
sbb
add
lea
leave
and
nop
and
xchg
xchg
repnz
in
add
outsb
pusha
sub
hlt
inc
scas
jmp
lret
stos
aad
aad
add
lods
mov
enter
pop
scas
xlat
jmp
push
sbb
cmp
cwtl
xchg
pop
sbb
push
inc
sub
cmp
rdtsc
ss
jmp
dec
inc
je
test
adc
notl
fs
push
mov
xchg
je
cs
jae
rcr
add
xchg
je
outsb
data16
push
add
mov
ss
out
je
xor
xchg
outsl
push
push
xchg
daa
pop
lea
inc
sti
iret
mov
outsl
js
push
xchg
fstpt
xchg
push
and
insl
jo
jo
and
and
ficoml
shlb
aaa
insb
les
dec
imul
mov
mov
inc
cmp
dec
inc
jb
jns
daa
fwait
ret
cmpsb
and
ss
jns
lahf
mov
pusha
je
and
imul
mov
and
cmp
mov
inc
pusha
fsubrl
push
jbe
mov
fcmovnu
cmpsb
fdivl
or
jb
and
mov
xchg
pusha
inc
jbe
push
mov
lahf
fs
insl
es
adc
and
lods
jp
pusha
xchg
sbb
mov
pushw
popl
sbbb
mov
jp
cmp
push
pop
or
push
jo
sbb
daa
mov
dec
adc
or
mov
outsb
mov
lods
mov
push
push
jae
or
cltd
shlb
pusha
insb
call
push
clc
addr16
add
fdivrl
adc
insb
adc
cmp
sti
dec
push
push
push
push
dec
testl
pop
mov
aam
enter
pop
or
loope
or
and
imul
lock
sub
pusha
cmp
mov
enter
das
pop
xor
gs
sbb
ret
mov
lea
or
mov
je
outsl
xchg
daa
xchg
mov
popw
insl
sti
cmp
pop
cmp
cmp
ds
and
push
das
push
sub
ret
frstor
push
addr16
jle
cmp
sahf
imul
add
mov
sub
pop
or
sbb
or
cmp
das
push
jb
aaa
in
mov
outsb
cmp
mov
xchg
xchg
pop
pop
jne
push
xchg
stos
addr16
push
jbe
add
das
jo
ss
gs
imul
mov
sbb
fdivl
dec
sbb
sahf
inc
int3
cmp
fs
jo
sub
mov
jl
out
sub
cmp
repz
push
push
dec
cmp
and
ds
repz
or
sub
mulb
push
cwtl
orb
fdivrs
out
push
aam
int3
enter
sahf
out
mov
lods
test
movsb
repz
cmp
mov
mov
idivl
xchg
adcb
push
sahf
out
dec
jl
push
jo
cmp
repz
fs
pop
pop
repz
repz
push
dec
inc
xor
stc
cmp
sub
or
sub
sahf
out
sahf
enter
dec
and
dec
repz
in
les
jo
fs
xor
sbb
lock
lahf
out
sahf
test
pop
sub
in
sub
jl
ja
push
pushf
jo
sub
pusha
lcall
lock
faddl
add
jb
test
and
mov
ss
addl
mov
addb
push
sbb
add
xchg
sub
inc
or
jbe
addl
imul
push
adc
movl
add
add
mov
jnp
or
jnp
push
pop
fildll
or
cmp
or
test
mov
call
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
pushl
mov
mov
mov
ret
enter
int3
int
iret
rcl
call
rcl
aad
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
test
std
push
repz
cmc
div
clc
stc
cli
sti
cld
std
jmp
or
sub
call
sub
push
test
push
adc
js
popa
data16
add
cmc
pusha
pop
shlb
cmc
out
xor
add
fiaddl
data16
daa
fidivs
add
push
arpl
jecxz
sti
sub
fs
sbb
jns
je
xor
jp
mov
jne
iret
decb
sub
add
inc
adc
mov
dec
and
xor
push
dec
inc
dec
xor
test
cmove
push
shrl
mov
adc
adc
pop
dec
rolb
popa
into
mov
mov
out
xor
jnp
inc
loop
mov
ds
pop
adc
call
or
cli
jb
jge
arpl
pop
in
dec
scas
jp
jno
in
fstl
nop
mov
and
cmp
dec
imul
jmp
iret
lret
add
inc
mov
mov
sub
pusha
pop
imul
ds
xor
mov
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
mov
cmc
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
xchg
call
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
addr16
leave
or
insb
mov
out
leave
ljmp
add
loopne
dec
test
shrl
leave
hlt
std
aas
jl
adc
xchg
dec
add
scas
lods
dec
lock
xor
adc
fistps
into
or
icebp
pop
pop
repnz
fistpl
sub
lret
es
sbb
or
and
shlb
dec
or
daa
and
xor
inc
jmp
fistpl
fdivrs
sub
sub
mov
inc
inc
loopne
and
mov
inc
out
clc
xchg
dec
xchg
pop
and
sti
and
out
into
inc
cmp
outsb
addr16
es
repnz
jae
lret
cmp
and
or
sbb
mov
sub
loope
xlat
bound
jg
aas
fldt
je
aaa
pcmpeqw
sti
sub
rorl
ja
popa
daa
sub
cmp
add
je
jmp
jae
insb
add
push
sub
addr16
sub
jmp
xchg
lret
xchg
cmpsl
lock
fstpt
shll
inc
jb
add
or
pop
jae
xorl
push
stos
add
outsl
test
inc
imul
sbb
divl
jae
insl
div
outsb
js
mov
mov
mov
and
add
sub
jmp
addl
adc
out
fbstp
push
test
aaa
adc
jno
mov
shll
mov
inc
pop
rol
jnp
cmpsl
int3
push
lds
loopne
fdivs
inc
jecxz
or
out
sti
arpl
jns
out
mov
xchg
jg,pn
jg
imul
push
push
or
adc
jmp
pop
hlt
push
out
js
sub
push
lods
mov
cmpsl
out
add
push
mov
cmp
pop
ret
jge
ret
jne
adc
xorl
dec
push
out
mov
shll
imul
add
xchg
cmp
divl
cmp
out
rorb
inc
xchg
mov
sub
insl
ret
dec
dec
fisubrs
and
push
loope
xchg
gs
test
jmp
dec
jp
xchg
or
pop
xorb
jecxz
mov
mov
dec
adc
ja
out
push
cmp
cmp
jle
out
xlat
addr16
je
imul
aas
shlb
pop
arpl
add
movsl
sbb
pop
gs
jne
xor
cmp
and
and
andl
filds
rol
pop
stos
pop
inc
cs
mov
mov
add
outsl
fiaddl
mov
mov
xor
aas
arpl
sub
inc
aad
pop
lret
sub
inc
sub
ja
lods
and
ss
jne
or
cmp
aas
mov
adc
into
mov
pop
aas
pop
jecxz
addr16
push
ds
mov
push
arpl
call
test
and
mov
add
sub
dec
popa
jae
sbb
test
data16
or
dec
add
xor
icebp
jle
or
shll
push
mov
pop
dec
aaa
pop
xchg
jbe
fmuls
pop
jnp
sbb
push
and
jecxz
pop
aad
stos
outsl
subl
sub
pop
sbb
dec
aas
jecxz
test
push
inc
pop
daa
jne
aas
dec
sbb
outsl
dec
push
movlps
fwait
push
sbb
lcall
adc
shl
inc
push
ret
js
clc
mov
idivl
xchg
mov
push
loopne
inc
outsb
out
imul
jb
sub
shll
xor
add
jecxz
mov
out
pop
push
fiaddl
mov
mull
bound
jae
push
pop
mov
addr16
sti
and
xor
bound
pop
js
push
or
outsl
out
dec
inc
mov
outsl
sub
shrl
daa
lahf
mov
mov
ja
jcxz
and
outsl
cmpsl
cs
loope
jmp
add
in
mov
dec
mov
insl
mov
out
inc
push
inc
mov
imul
mov
push
outsb
clc
dec
insb
xchg
inc
inc
add
sbb
jmp
outsb
xor
mov
shrl
ss
mov
dec
sbb
daa
addb
xchg
je
pop
dec
push
jl
jo
jmp
insb
aas
pop
sti
pop
adc
addr16
cmp
sti
sub
sub
cmpsl
cmpsl
pop
pcmpgtd
pop
pop
sbb
mov
and
cwtl
inc
jle
inc
mov
mov
mov
inc
jl
jl
mov
fsubl
imul
push
xchg
cmp
inc
pop
out
mulb
and
addr16
bound
pop
mov
push
das
fnstsw
mov
in
subb
cmp
jns
jae
ja
pop
gs
jl
push
ja
jno
adc
jl
mov
pop
pop
jnp
sbb
jmp
repz
es
ja
into
xor
mov
imull
outsb
cs
push
mov
arpl
lock
mov
jae
jno
negl
insb
sub
shl
dec
outsl
lret
jl
jo
call
cmp
mov
mov
pop
mov
push
mov
roll
imul
push
imul
xchg
jl
repnz
orl
xchg
pop
adc
clc
fdivs
push
add
and
jne
mov
mov
mov
outsl
push
jo
pusha
inc
jle
fistl
fisttps
xlat
aaa
sbb
movsb
adc
inc
divl
jnp
jnp
pop
inc
jns
jae
data16
fs
inc
lock
pop
fisttps
add
jg
sbb
cli
add
jecxz
sbb
mov
test
pop
pop
pushl
pop
std
xorl
pop
data16
rolb
jnp
aaa
push
or
inc
pusha
cmp
mov
popa
popl
je
aaa
es
pop
fildl
adc
xchg
addr16
js
mov
push
add
sub
push
add
push
sbb
dec
push
in
jnp
dec
sub
sbb
ss
in
cli
lcall
jge
in
mul
lret
ss
inc
pop
cwtl
ss
push
imulb
mov
add
outsl
sbb
stc
mov
mov
rcll
cmp
push
out
int
movsl
push
stos
add
pop
push
mov
push
inc
push
inc
jg
push
mov
es
jl
scas
fnstcw
test
push
and
or
fcomp
sarl
add
aas
pop
mov
into
dec
pop
out
push
pop
jns
sub
adc
fisubs
je
and
fistpl
lods
push
int3
sahf
xlat
mov
inc
outsl
jg
push
loope
jnp
sarl
sbb
push
mov
pop
push
push
outsb
dec
fdivp
mov
iret
pop
aaa
dec
and
push
adc
aam
add
insl
ja
outsl
jo
jns
push
mov
pop
sbb
sub
cmpsb
dec
push
add
add
lret
les
sti
aas
mov
popa
push
jae
xchg
xchg
pop
fs
and
ret
sbb
push
gs
insl
pusha
push
popa
jne
or
dec
pop
and
dec
bound
xor
pop
sub
and
imul
jae
push
loop
decl
iret
repz
sbb
push
and
jnp
mul
clc
cmp
add
dec
push
pop
push
lahf
out
sahf
bound
shl
jbe
lahf
divl
popa
or
mov
cmp
aaa
clc
dec
xor
cmp
gs
sub
cltd
pushf
je
cmp
push
push
or
push
push
jo
jb
into
jb
pushf
mov
add
and
jae
sbb
subl
xor
and
and
and
arpl
les
sti
xor
cmp
fs
adc
adc
adc
imulb
mov
outsb
je
adcl
imul
dec
outsw
sub
ja
or
cmp
sbb
aaa
push
movsl
xchg
out
mov
inc
popf
adc
daa
imul
add
sub
sub
push
scas
fdivl
inc
push
ja
push
mov
scas
ltr
jbe
rcrb
cmpl
insl
or
pop
pop
inc
or
insl
xlat
cmc
insb
inc
cli
mov
push
and
mov
aaa
add
xchg
cmpsl
add
sahf
mov
inc
ds
dec
cmp
rclb
mov
idivb
sbb
or
add
rclb
faddl
sub
or
push
push
or
xor
or
push
cmp
mov
ja
out
mov
imul
add
fcomps
mov
ja
and
fs
clc
and
fs
bound
jle
out
enter
aaa
inc
or
sbb
lahf
scas
push
rcrl
mov
scas
pusha
imul
inc
cmp
ret
mov
or
jmp
pop
mov
sub
mov
pop
jo
cmpsl
mov
cmp
mov
outsb
fcoml
ss
sti
mov
loop
mov
mov
dec
pop
add
push
xchg
ret
fs
mov
or
lea
dec
inc
inc
add
push
mov
mov
mov
or
mov
stos
scas
imul
xor
xlat
scas
pop
push
shlb
ret
push
lea
cmp
ret
add
add
shlb
add
and
sub
gs
pop
int
imul
lods
lods
jp
jp
pop
pop
fidivrl
add
mov
iret
aaa
cmp
push
pop
bound
and
rolb
nop
aas
jb
fs
sub
dec
push
add
clc
inc
lods
icebp
lcall
mov
inc
pop
iret
jle
adc
pop
iret
repz
sbb
push
cmp
repz
andl
or
cltd
or
xchg
pop
pop
dec
or
in
xor
or
stos
mov
add
das
adc
mov
insb
jns
and
sub
xor
inc
neg
mov
mov
mov
mov
mov
add
add
shrb
ret
insb
ss
cltd
sub
shrb
xchg
pop
adc
fsts
and
add
fldcw
xchg
rclb
lret
verr
loopne
lea
shlb
push
dec
jl
stc
das
incl
pusha
into
mov
ds
icebp
imul
sub
pop
mov
xor
clc
out
repz
in
cmpsb
pop
xchg
fidivl
inc
push
call
ret
add
das
xchg
push
nopl
push
dec
into
sub
in
adc
sti
ja
and
mov
sti
iret
add
pop
and
sbb
add
pop
or
push
inc
outsl
inc
push
fiaddl
sbb
outsb
mov
arpl
xchg
adc
jne
inc
pop
pop
mov
sub
push
jmp
stos
fs
fnstsw
mov
outsl
cmpsb
sub
jns
sub
jo
movsb
or
mov
mov
pop
xlat
cmpsl
dec
stos
pop
push
jae
popa
insl
dec
shlb
es
mov
mov
das
xchg
hlt
or
addr16
push
push
mov
adc
cmp
or
dec
lods
iret
xlat
mov
sub
arpl
divl
pusha
das
and
cmpsl
push
sub
ljmp
cmpsb
mov
lea
ds
sub
sarl
xchg
stos
out
or
add
imul
add
sbb
jno,pt
jbe
or
aaa
push
add
rolb
fwait
imul
inc
inc
push
aad
fldl
sti
cmpsb
aas
rcrl
sbb
inc
jae
mov
xor
jbe
aaa
fwait
sub
pop
ret
and
and
mov
cmp
or
js
imul
xchg
pop
inc
and
shrl
push
loope
pop
outsl
es
push
add
nop
lcall
sub
mov
mov
mov
ret
lret
fistpl
arpl
scas
bound
pop
push
xchg
data16
sbb
mov
pop
xor
pop
mov
inc
outsb
cmp
outsb
cmp
ficomps
push
sub
push
xchg
inc
jmp
insb
mov
ret
push
add
lahf
sti
test
cmc
add
insb
cmp
add
inc
push
pop
xchg
mov
jnp
jb
aad
aad
xlat
pop
push
ficoms
xor
inc
fstpt
lahf
adc
xor
add
sbb
addr16
jo
cmp
je
lahf
xorl
notb
jbe
add
pop
es
scas
ja
jo
pop
inc
outsl
daa
jl
mov
repz
push
cmpsl
sub
or
pop
xlat
sbb
movsl
xor
inc
dec
pop
clc
fnstcw
and
mov
aaa
dec
iret
mov
adc
scas
fbld
fcoms
adc
mov
aad
ljmp
mov
or
cmp
adc
arpl
imul
push
inc
lahf
bts
aaa
loope
fadds
inc
sbb
inc
mov
add
xor
sub
aaa
es
enter
insl
push
outsl
xchg
pop
das
or
cs
outsl
push
inc
dec
bound
cmp
ss
add
sub
pop
sbb
out
xor
out
call
outsb
adc
add
out
xor
jnp
stos
add
mov
rcll
sahf
xor
add
mov
frstor
fsubrs
mov
les
rcrl
push
jmp
aad
mov
mov
ss
cmp
adc
mov
mov
push
or
xchg
and
adcl
push
mov
fsubs
pop
aas
ja
adc
jae
or
out
lcall
outsb
and
dec
bnd
sub
dec
cmp
es
mov
cs
lret
sub
mov
add
sub
adc
jno
or
inc
cmp
inc
lar
xchg
jb
stos
push
mov
push
mov
push
xor
aas
push
or
push
sbbl
add
jl
orl
jmp
pop
pop
fildl
and
repz
push
stos
adc
scas
lods
mov
push
or
ret
sbb
gs
mov
iret
jp
pop
call
dec
jmp
jae
insb
je
mov
jnp
push
sbb
mov
mov
xchg
aas
nop
inc
push
mov
mov
fists
push
stos
shlb
wbinvd
mov
and
iret
sub
fcomps
nop
push
in
pop
jae
jl
or
gs
int
daa
adc
mov
jl
iret
shll
pop
sbb
iret
sarl
xchg
add
clc
add
inc
call
add
fwait
mov
icebp
outsb
push
and
and
inc
dec
fwait
icebp
fisubrs
push
push
mov
outsb
bound
adc
out
xor
pop
inc
das
mov
sbb
cmpsl
loop
loop
arpl
lret
mov
xchg
imul
inc
inc
lods
aas
add
add
jmp
out
xchg
orb
dec
sub
adcl
sub
pop
xor
xchg
mov
sbb
aas
add
dec
add
lcall
pop
pushf
ret
jge
int3
jbe
mov
sbb
ret
adc
or
repz
push
fistpl
pop
or
test
dec
lds
jnp
aaa
add
das
sbb
adc
enter
iret
outsl
inc
lods
push
adc
lahf
das
shrb
and
sahf
mov
inc
sub
mov
or
or
push
add
pop
push
rcr
xlat
and
xchg
push
addl
mov
daa
movb
pop
addb
repz
addr16
vcvttps2dq
ficomps
xor
std
adc
out
jnp
jge
jbe
sbb
enter
inc
push
and
mov
rcr
cs
add
xor
fists
pop
mov
scas
add
push
insl
pop
push
or
sub
jae
aam
orl
add
sti
xchg
lgs
arpl
bound
ja
js
mov
pop
mov
pop
mov
in
negl
mov
fidivs
cli
push
push
sti
lcall
cs
jecxz
pop
and
fsub
in
cltd
dec
mov
loope
sub
pop
dec
hlt
loopne
xchg
stos
movsb
push
add
xchg
mov
xchg
push
leave
push
or
cmpsb
fs
leave
push
repnz
sbb
dec
pop
and
stos
in
sub
fistl
xor
sub
fimull
in
xchg
in
jb
inc
in
fmuls
xchg
test
xchg
mov
and
mov
in
cltd
dec
pusha
or
push
leave
stos
mov
xchg
pop
adc
push
xchg
dec
and
in
enter
mov
rcll
push
xor
movsl
xchg
shr
loop
cmp
les
mov
xor
jg
shlb
add
and
mov
xor
pop
aaa
jmp
rorl
je
cmp
movsb
insl
and
inc
shlb
loope
ret
je
or
mov
insb
xor
fadds
pop
das
inc
xlat
adc
adc
xor
sbb
out
dec
or
es
pop
inc
adcb
sbb
xchg
jae
mov
test
sbb
push
adc
mov
mov
repz
or
mov
inc
xchg
xor
jne
mov
dec
cmpsl
inc
xorl
mov
mov
add
xor
pusha
aam
aas
push
inc
dec
xchg
out
pusha
jmp
or
push
das
sub
sub
aaa
inc
mov
inc
sti
pop
push
scas
addr16
int
es
inc
lds
lea
inc
adc
pop
adc
hlt
push
scas
cmpsl
lahf
add
xchg
mov
pop
inc
sub
mov
push
and
and
and
popa
and
mov
mov
sbb
aaa
push
call
cmp
das
out
aaa
and
xchg
inc
iret
loope
mov
fadds
rorl
adc
sub
aaa
outsl
sub
shll
sti
push
aas
mov
les
gs
inc
sarb
das
mov
pushl
xchg
mov
mov
sbb
mov
mov
fwait
lret
call
push
sbb
aam
repz
cmp
add
call
mov
jg
jbe
mov
mov
popa
xor
add
arpl
loopne
xchg
xlat
mov
fisttpl
popa
xor
mov
arpl
mov
inc
inc
orl
mov
sub
jnp
add
sub
or
pop
sub
and
push
xchg
fdivrs
inc
es
and
add
xchg
out
aaa
sbb
sti
cmp
addr16
mov
sub
adc
je
or
push
rorb
insl
je
jnp
mov
dec
sub
mov
les
cmp
movsb
pop
sbb
mov
imul
xchg
jae
pop
inc
mov
push
ja
scas
add
add
loope
divl
imul
mov
mov
push
out
mov
xor
xor
mov
loopne
daa
outsb
xor
xorl
dec
bound
sarb
ja
adc
faddp
xorl
popa
jae
js
outsl
jae
imulb
js
fs
pop
daa
sbb
xchg
push
adc
push
clc
fucomip
push
loopne
int3
sbb
add
sbbb
jne
repz
dec
or
add
jae
xorl
in
popa
inc
adc
rorb
les
mov
dec
push
adc
imul
outsb
or
stc
cmp
sbb
addr16
fcmove
rclb
pop
push
pushf
push
inc
or
push
pop
inc
mov
xor
sub
pop
lods
add
xchg
pop
jb
xchg
rolb
adcl
push
jae
imul
pusha
je
imul
das
jmp
xor
scas
push
cs
fsubs
loop
push
fistps
jmp
mov
add
gs
out
mov
cmp
xor
stos
movsb
xor
xor
lock
adc
stos
mov
dec
cmovno
or
pop
cmp
mov
out
add
add
mov
aas
mov
bound
insb
adc
out
cs
inc
sbb
cmpsl
movsb
inc
mov
xor
push
mov
pop
movsl
jno
add
inc
lods
mov
addb
arpl
sbb
imul
xchg
shrb
xchg
cltd
push
jecxz
xor
scas
dec
insl
lock
loop
outsb
sub
in
sahf
cs
cs
cmp
mov
push
sahf
cs
xor
push
repnz
out
es
and
loopne
push
jae
xor
adc
in
fidivrs
inc
xchg
cmp
inc
pop
ret
cmp
jnp
fs
dec
sub
into
xchg
fcmovb
xchg
jmp
jecxz
pop
pop
in
pop
scas
dec
shlb
or
inc
or
loopne
stos
jle
js
xor
fucom
jmp
inc
cmp
xchg
ficomps
dec
or
inc
push
mov
out
inc
and
ss
push
dec
repz
push
fimull
pop
incb
mov
xor
ret
lds
outsb
jb
loop
pop
mov
push
cmpsb
xchg
ja
pop
das
jge
ret
pop
lret
inc
popaw
sub
pop
mov
xor
stos
inc
mov
arpl
sub
arpl
fs
sub
ds
mov
cmp
xchg
dec
dec
daa
jge
fidivs
mov
scas
jnp
out
inc
push
packssdw
inc
jnp
sbb
push
sbb
dec
ss
outsb
jnp
fidivrs
daa
dec
jb
das
xor
pop
dec
es
das
add
pop
out
mov
and
or
xchg
jne
sysexit
mov
cs
sahf
xchg
push
push
mov
mov
push
scas
push
in
mov
insl
push
inc
ja,pn
xor
push
jns
lds
jp
jp
ds
fucomi
loope
fiaddl
jg
dec
das
xor
fisttps
jp
pop
fstpl
mov
dec
xor
loopne
push
into
xor
cmp
push
dec
cs
push
dec
outsl
push
dec
and
pop
data16
add
lcall
sub
dec
dec
out
mov
imul
sbb
lret
fistps
insb
cmpsl
jo
jnp
adc
jnp
add
jbe
jnp
js
aas
add
fldt
dec
lea
test
jae
pusha
adc
xchg
mov
mov
mov
mov
xor
out
scas
mov
sahf
add
ret
xchg
mov
mov
cmp
data16
shlb
dec
adc
pusha
mov
mov
mov
pop
in
pop
push
addl
and
arpl
andb
mov
arpl
pop
shrl
repz
add
mov
addl
push
cmp
dec
dec
daa
jbe
scas
add
sbb
dec
lret
inc
jo
add
sbb
scas
cmp
dec
push
je
mov
mov
shrl
insb
xor
mov
sbb
adcl
xor
pop
mov
mov
and
mov
call
outsl
popa
fs
outsl
mov
test
lods
push
add
pop
je
in
add
inc
fs
or
aas
sub
sbb
andl
sbb
adc
out
scas
js
sub
inc
sbb
push
add
sbb
mov
xchg
push
xor
addr16
xor
push
xor
icebp
arpl
xlat
add
aaa
jb
repz
int3
dec
ja
pop
imulb
mov
jl
fsub
xchg
pop
and
lods
or
push
jo
sahf
out
outsl
jle
fs
pop
mov
mov
inc
insb
xlat
pop
xor
pop
mov
cmp
jo
arpl
xor
notl
push
jae
pop
xor
punpckhbw
cmc
push
stos
adcb
and
pop
sub
pop
repz
inc
lea
xlat
jae
dec
adc
cmp
xor
push
daa
mov
add
lahf
lea
add
xchg
inc
dec
insb
sbb
add
or
xorb
push
sub
inc
fldt
mov
outsl
ret
outsl
adc
sub
pop
adc
sub
push
sub
lahf
sub
test
xlat
add
das
jecxz
shrb
rolb
push
inc
sbb
mov
lcall
mov
mov
and
dec
push
popa
les
arpl
iret
inc
das
mov
and
lahf
popa
sbb
and
imul
movsb
pusha
add
or
repz
xchg
test
push
push
lret
pop
and
push
pop
xor
call
inc
pop
dec
dec
orl
daa
jns
add
das
mov
aaa
iret
fbld
dec
lods
xchg
outsb
dec
arpl
jae
daa
test
dec
xorl
inc
testb
pop
jae
push
das
repz
push
pop
mov
outsl
pop
xor
aaa
sub
rcll
xor
push
fs
mov
add
movsl
fildl
cmp
push
lods
jp
sub
adc
loopne,pn
adc
push
pop
mov
lock
inc
jmp
std
fisubrl
mov
sbb
or
cmp
xchg
mull
imul
lahf
sub
subb
xlat
and
xchg
loopne
or
popa
out
data16
jmp
pop
outsl
clc
out
leave
jmp
sub
inc
das
pop
mov
dec
xchg
push
in
inc
dec
add
daa
sar
dec
nop
and
mov
mov
mov
sbb
ljmp
mov
mov
call
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
add
test
cmp
mov
xchg
mov
mov
ds
pop
sbb
or
jle
jo
fsubs
sbb
decl
cmp
dec
pop
dec
xchg
jge
mov
push
pop
add
pop
inc
jbe,pn
adc
adc
outsl
call
hlt
or
xchg
dec
sub
nop
ss
push
ss
pop
jmp
push
insl
pop
pop
dec
inc
mov
rolb
inc
mov
rolb
lds
xchg
cmp
sbb
ret
push
dec
sub
cmp
cs
or
cld
fwait
dec
cmp
in
fdivrl
das
int3
xor
mov
xor
cmp
mov
and
jns
pop
inc
outsl
xorb
mov
or
lcall
ds
inc
mov
inc
cld
pop
dec
xchg
aaa
imul
dec
xchg
fmuls
dec
ret
or
pop
fwait
add
je
pop
xor
shll
cmp
ss
jge
mov
sub
adc
xchg
or
cmp
adc
loopne
inc
mov
jecxz
cmpsb
jp
mov
inc
cwtl
adc
xchg
adc
add
nop
stos
aaa
inc
dec
push
jp
es
mov
data16
aas
daa
bound
je
bound
imul
xor
add
pop
scas
sbb
sub
add
add
aas
aaa
daa
dec
shrb
aas
fsubs
je
aaa
push
out
cmp
jae
inc
mov
adc
xchg
xor
scas
pop
mov
push
xor
rcll
xchg
stos
pop
dec
push
test
mov
scas
cmc
fidivs
sub
and
xor
pop
addr16
jmp
lcall
push
mov
xchg
mov
xchg
jne
jmp
call
bound
and
cmpsb
fst
mov
add
insb
inc
dec
and
xlat
adcb
out
test
lock
sbbl
pop
data16
cmpsb
test
repz
cmp
sarl
cmp
add
bound
dec
adc
je
add
pusha
mov
jbe
daa
xchg
pusha
fsubrs
pop
xchg
dec
ljmp
bound
dec
imul
cmpsb
dec
push
add
cli
xchg
pop
jae
add
cltd
pop
adc
es
xchg
lahf
test
repz
pop
mov
lret
ficomps
inc
xlat
and
sarl
push
push
jbe
cld
xor
jl
sbb
hlt
cwtl
adc
or
cmc
cmpsl
pop
mov
int
fwait
pop
adc
ds
mov
push
daa
mov
fs
es
leave
xchg
inc
out
add
xchg
aam
jnp
cmp
inc
cld
pop
add
sysret
mov
mov
aaa
push
pop
mov
xchg
fnstcw
scas
call
cmpsl
imul
shl
lcall
into
xchg
das
es
push
lea
pop
mov
stc
mov
ds
mov
cs
lods
inc
ds
repz
add
mov
dec
pop
push
push
adc
sbb
push
or
push
fists
out
mov
daa
xor
jg
aad
xor
idivl
sub
pop
push
lea
popf
ficoms
sti
xor
notb
pop
mov
sub
dec
push
pop
push
jae
mov
mov
push
dec
pop
out
out
ret
pop
outsl
push
and
mov
aas
sbb
fiadds
xchg
xchg
xchg
pop
push
fistpll
xlat
or
loope
push
cmp
cs
imul
pop
clc
call
hlt
sahf
idivb
push
std
out
imul
das
push
jmp
es
pop
pop
jnp
fst
push
jg
inc
popa
sbb
repz
shll
mov
xor
sahf
dec
mov
imul
add
lahf
out
fldl
test
mov
nop
sbbl
std
xchg
dec
or
jns
out
dec
jle
ret
in
cmp
repz
push
jge
repz
iret
roll
dec
pop
push
subb
negl
push
cs
out
sahf
push
insb
xchg
mov
clc
pop
xor
jl
push
das
das
iretw
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
fimuls
xor
adc
mov
mov
pop
push
mov
das
jbe
jg
loopne
mov
jbe
inc
mov
and
pop
sbb
ljmp
in
enter
adc
or
adc
aas
pusha
or
bound
pop
mov
pop
adc
dec
mov
movsb
push
dec
cmp
mov
lock
xlat
mov
add
clc
push
adc
iret
or
push
imul
jp
xor
push
js
mov
imul
cmp
xor
dec
addr16
dec
xchg
cmpsl
jp
xchg
mov
and
lods
xchg
pop
fildll
stos
cltd
fisubrl
add
dec
jo
js
rcrb
push
push
dec
dec
inc
outsl
and
test
je
and
adc
fadds
lahf
clc
push
or
push
mov
data16
mov
out
pop
push
ret
mov
cs
decl
mov
fisttpl
es
adc
cmpsl
push
pop
fisubrs
push
rorl
sub
inc
sub
mov
lahf
pop
sub
mov
pop
out
push
hlt
lock
addr16
mov
subl
aaa
outsb
loopne
notb
or
pop
cmp
xlat
cmpsl
jo
pop
pop
daa
fwait
push
jo
inc
lret
sbb
dec
jno
push
mov
inc
push
mov
jecxz,pt
outsb
insl
mov
in
frstor
push
cmp
push
sbb
xchg
fs
arpl
jae
imul
imul
sub
sub
pop
out
mov
data16
jns
mov
sub
push
adc
xor
jae
push
add
mov
add
leave
add
xor
daa
or
lods
sub
daa
xchg
ss
xchg
add
pop
cmp
xor
arpl
push
push
decl
fs
jo
xor
imul
pop
loope
bound
outsb
push
jnp
or
dec
dec
adc
inc
inc
sbb
lods
cmpsl
inc
ret
mov
inc
dec
and
add
lock
clc
ja
addr16
cs
jecxz
pop
fdivs
push
cmp
stos
sub
ret
inc
mov
sbb
or
bound
inc
and
sbb
aaa
mov
mov
push
adc
shrb
or
lea
movsl
test
sub
push
call
push
das
and
pop
mov
cmpsb
sbb
pop
addr16
arpl
testb
jae
and
sub
fs
mov
das
and
pop
or
fisttpl
jo
pshufw
das
or
out
data16
shll
lods
dec
lret
dec
mov
shll
sub
shlb
pop
pop
dec
mov
rcll
mov
icebp
popf
cs
popw
outsl
aaa
lea
mov
inc
jmp
push
xchg
das
ss
cs
inc
das
push
clc
sub
pop
popa
imul
xorb
popl
sbb
test
imul
bound
xchg
fiadds
push
popl
pop
xchg
sub
add
add
repz
lret
jecxz
out
inc
into
inc
inc
pusha
dec
sbb
or
cmpsl
lahf
imul
mov
dec
cmpsl
sub
dec
add
aas
cmp
pop
adc
sbb
cmp
lods
iret
pusha
sub
pop
sahf
and
xchg
add
sub
sub
aas
push
mov
mov
xlat
pop
add
mov
stos
xchg
add
ja
add
push
test
mov
pop
imulb
push
inc
daa
sbb
in
in
cli
cmp
dec
push
or
loop
inc
cmp
ljmp
pop
inc
ss
mov
dec
dec
inc
shrl
inc
aaa
or
addl
jmp
xor
pop
notl
add
and
jnp
pop
fistpl
sbb
loope
jg
add
push
jne
inc
cmpsl
push
call
pop
icebp
push
adc
inc
inc
clc
outsb
add
inc
pop
pop
pop
or
inc
pop
push
or
add
jns
je
add
movsb
mov
icebp
pop
push
xchg
das
push
sbb
repnz
and
rclb
out
cmpsl
cmpsl
es
insl
jo
je
pop
out
std
lea
ds
jo
jae
daa
pop
mov
out
jno
outsl
xor
push
xadd
push
xchg
xchg
adc
insb
pop
sub
or
pop
out
jns
je
jne
or
bound
mov
xor
ja
out
mov
jae
lret
sub
out
ds
movb
mov
mov
mov
je
adc
imul
dec
orb
clc
gs
push
test
jbe
inc
and
xor
mov
push
arpl
nop
mov
testl
out
pop
stos
add
rolb
bound
cmp
dec
jecxz
jg
mov
adc
pop
pusha
mov
push
push
adcb
jmp
test
push
mov
cmpsl
pop
dec
jne
push
pop
daa
fwait
sub
push
test
bound
loop
inc
cmpsl
in
aam
jns
jb
add
sahf
iret
mov
add
mov
push
ret
pusha
or
xor
adc
out
inc
push
inc
fldt
or
aaa
inc
insb
addb
jp
pop
daa
out
pop
mov
sbb
pop
sbb
jb
out
or
mov
jmp
les
add
push
pop
nop
cmp
aaa
incl
dec
inc
dec
push
xchg
add
rcll
je
pop
dec
fidivs
fidivrl
jg
ret
movl
add
pop
adcb
add
add
push
lahf
incl
add
call
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
incl
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
fwait
in
incl
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
push
ds
ljmp
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cmp
sbb
cld
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
decl
sbb
mov
call
cltd
test
push
push
shll
insb
aaa
push
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
ljmp
movsl
js
js
test
add
mov
mov
movsb
mull
jno
addr16
push
incl
rep
cmp
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
ret
js
sbb
mov
pusha
dec
pop
mov
das
sbb
xor
add
pop
daa
daa
dec
in
xlat
daa
push
and
push
pop
inc
inc
inc
push
sar
fildl
and
or
aas
js
insb
cwtl
pop
fisubrl
push
pop
push
or
and
dec
or
or
inc
pop
lahf
ss
sub
pop
gs
subb
fistpll
push
push
mov
inc
popw
push
sbb
aaa
push
cld
xchg
sub
add
daa
push
mov
sbb
outsl
adc
sub
sub
lods
mov
and
xor
inc
pop
xchg
inc
lahf
int
mov
push
pop
mov
mov
int
int3
mov
xlat
jl
sbb
adc
xor
xor
jbe
scas
sar
mov
push
push
inc
cmp
inc
cmpsb
cs
mov
out
sub
jne
sub
and
pop
mov
adc
outsl
pop
or
mov
jae
sub
pop
testl
push
inc
dec
jbe
in
dec
imul
xor
push
cmp
xor
and
xor
dec
jb
rcr
adc
ja
out
push
imul
inc
enter
mov
out
and
bound
mov
test
push
imul
shlb
cmp
or
mov
movsb
outsl
je
mov
popa
stos
rcrb
mov
out
testl
sub
push
loop
rolb
js
ret
dec
inc
sti
int3
int3
or
and
push
fnsave
add
push
add
outsl
fs
out
xchg
gs
jo
jns
iret
inc
mov
and
adc
pop
dec
les
outsl
insl
jne
shrb
jnp
fiadds
les
add
cmp
and
push
inc
je
bound
clc
or
aam
inc
insb
aas
jbe
jg
mov
pop
inc
popa
imul
inc
sahf
loop
outsb
mov
xor
fidivrl
pop
add
gs
fcoms
jnp
ret
orb
inc
or
inc
mov
outsb
xadd
sbb
inc
cmovo
addb
adc
cmpb
aas
js
insl
pop
nop
jo
maxps
loopne
mov
mov
mov
inc
movups
xchg
mov
dec
adc
or
xor
test
das
sbb
dec
insb
dec
add
sbb
jbe
lret
out
hlt
daa
ds
mov
shlb
testl
enter
push
inc
push
jmp
jmp
pop
das
inc
add
fstp
add
lahf
ds
jnp
add
daa
les
or
enter
sub
daa
outsl
inc
xchg
outsb
mov
out
lds
leave
daa
xchg
sub
fs
push
mov
push
fcompl
adc
dec
fsubl
xor
scas
fisttps
inc
test
add
in
and
scas
jl
inc
mov
mov
outsl
jle
pop
lods
pop
jb
mov
and
mov
lret
jno
outsl
adc
outsl
add
mulb
in
lret
dec
add
out
dec
mov
rep
negl
push
sbb
cmpsb
pop
and
jle
inc
mov
lret
in
adc
inc
cs
movl
filds
xor
xchg
rep
sub
js
repnz
enter
js
pop
jb
pusha
movsb
lods
enter
mov
and
lods
sar
or
outsb
addr16
aas
add
nop
int
mov
int3
sbb
pop
push
movsb
das
inc
daa
repnz
in
push
outsb
xchg
xor
aas
es
pop
add
dec
sahf
or
in
iret
lds
nop
push
aam
mov
sahf
mull
cmpsb
int
xor
inc
push
nop
enter
dec
aas
ja
pop
repnz
lahf
aam
cmp
add
test
nop
int
movsb
inc
sub
cs
scas
hlt
ja
inc
cs
aam
lock
fsubrs
cmp
inc
daa
lock
pop
pop
addr16
inc
enter
fstpt
testl
mov
mov
xchg
pop
add
add
bound
adc
insl
shrl
push
sub
push
sahf
outsl
mov
inc
cs
xchg
jo
pop
jnp
mov
mov
daa
add
mov
pop
mov
mov
jae
in
cld
add
das
in
sbb
in
and
jnp
inc
ss
inc
push
test
push
xchg
dec
in
add
jl
stos
shrb
cmp
jnp
jo
pop
int3
mov
mov
sbb
add
roll
dec
in
dec
add
pop
enter
rorb
inc
sahf
or
imul
lret
inc
sahf
or
sbbb
lahf
or
or
xor
pop
enter
cmp
nop
mov
lahf
pusha
enter
ja
mov
lods
mov
iret
test
faddl
cld
mov
fsub
sub
pop
xchg
sbb
pop
cmp
push
shl
fcompl
xchg
fcoms
jg
negl
or
adcb
pop
frstor
test
cmp
in
pop
and
jae
cmpsl
cmp
fwait
nop
iret
test
aam
push
or
dec
push
dec
fisubs
imul
jl
and
repnz
in
mov
iret
test
rcrb
hlt
nop
fbstp
in
and
adc
fiadds
loopne
in
repz
pop
and
and
enter
js
pushf
fadds
cmpsl
js
jae
iret
dec
int3
fdiv
jl
add
fiadds
xor
inc
pop
and
sti
push
and
cmpsl
js
mov
mov
push
mov
dec
add
and
aam
and
repnz
les
adc
and
insl
orl
jae
int
lahf
and
fs
mov
enter
fs
iret
test
les
pop
enter
fwait
sub
pop
js
fadd
adc
stos
jo
ljmp
sahf
jg
test
pusha
push
shl
push
cmpsl
inc
sahf
or
inc
sahf
out
rcr
loopne
mov
into
add
xchg
lcall
addr16
ficomps
insb
xor
push
push
shl
inc
fs
addr16
sahf
or
test
bnd
addr16
out
scas
jbe
lahf
test
and
or
sbb
jbe,pn
xor
iret
test
pop
jo
aas
subb
out
lcall
and
in
push
push
cmpsl
mov
pop
hlt
add
ds
nop
or
and
inc
icebp
mov
pop
sahf
push
and
nop
addr16
rcrb
mov
jns
out
call
and
or
ja
out
and
and
loopne
dec
dec
fcompl
push
inc
jbe
dec
mov
xor
fwait
or
push
mov
pop
pop
pop
add
mov
jns
inc
js
lock
pop
jb
jo
inc
loopne
js
inc
ds
inc
push
push
push
movsb
imul
and
jg
mov
jl
int3
test
addr16
lahf
mov
and
cs
inc
lock
clc
or
aam
fs
sbb
sub
cmp
mov
pop
push
dec
inc
ja
or
or
mov
pop
push
pushf
fdivrp
push
sbb
insb
inc
jmp
mov
jo
and
sbb
loopne
les
sub
inc
fists
addb
int3
shl
push
imul
fiaddl
inc
lcall
lods
lods
add
push
inc
jg
nop
out
pushl
shl
loopne
mov
loopne
dec
inc
ja
enter
pusha
fs
sbbl
inc
pusha
enter
jg
nop
mov
enter
adc
mov
loope
or
loope
mov
sub
daa
and
frstor
lahf
in
inc
dec
repz
inc
adc
lods
sbb
pop
mov
pop
insb
inc
mov
cmpsl
inc
movsl
jbe
clc
add
inc
adc
lahf
imul
fs
sahf
or
pusha
jo
nop
or
fs
mov
jns
in
mov
out
cs
mov
nop
lock
adc
out
cs
mov
dec
enter
pusha
in
pop
pop
and
adc
push
repnz
dec
nop
mov
in
dec
lahf
nop
inc
es
pop
enter
in
inc
lahf
or
in
mov
pop
testl
pop
outsl
aas
js
sub
lcall
testb
ror
fiaddl
cmp
out
clc
or
pushaw
cmp
push
xchg
inc
outsl
enter
xchg
clc
inc
in
leave
repz
push
pusha
enter
push
outsl
jg
lds
or
aad
jl
jb
lock
iret
add
jmp
out
sahf
adc
fxam
out
js
and
inc
call
adc
inc
mov
sub
fwait
push
push
pop
daa
aas
daa
add
mov
data16
pop
mov
daa
nop
xchg
testl
fcmovb
cs
call
scas
mov
mov
xlat
mov
inc
lcall
negb
call
mov
hlt
call
ljmp
or
lods
inc
pushf
or
mov
outsl
mov
fstl
dec
aam
in
push
xlat
data16
xchg
sbb
xchg
push
in
dec
in
pop
dec
cmp
dec
push
push
daa
ret
pusha
stos
mov
orb
or
add
jns
ja
daa
sbb
test
dec
push
jb
push
inc
inc
cmp
xor
push
jb
sub
popa
and
mov
mov
out
ljmp
dec
push
xor
icebp
mov
negl
clc
add
es
push
cmpsl
stc
xor
and
lock
out
mov
mov
clc
out
sahf
ja
out
dec
xor
ds
push
push
jl
in
movsb
mov
sahf
cmpsl
stc
je
pop
cmp
add
push
test
add
repnz
es
xchg
pushf
in
dec
test
xchg
mov
aas
imul
xchg
cmp
sub
nop
add
dec
sahf
out
jmp
add
fidivrs
mov
jg
push
xor
mov
fdivp
push
inc
out
cld
inc
mov
push
push
xor
add
or
push
in
ja
add
sbb
jns
xchg
inc
dec
outsl
xchg
sti
inc
inc
xor
dec
sbb
push
add
add
rcr
in
dec
ret
push
xor
add
inc
or
and
dec
test
in
fbstp
outsl
fisttps
mov
outsl
cmp
or
cmp
pop
and
pop
ret
lods
pop
scas
add
outsl
out
mov
xor
fnstsw
and
fbstp
cmp
add
aam
test
call
sbb
out
scas
add
sbb
ljmp
pusha
and
xor
xor
xchg
in
nop
out
out
out
outsl
xchg
popa
sub
add
sub
or
sub
xor
jbe
into
js
aaa
js
cwtl
repnz
repnz
mov
push
hlt
out
movl
sahf
sbb
lock
leave
add
dec
jg
or
ja
adc
jg
mov
sub
or
mov
or
repnz
cld
fimuls
icebp
outsl
add
mov
fbld
bound
and
mov
fiadds
and
insb
add
cwtl
pop
scas
sbb
push
xor
pop
outsl
js
ret
push
out
dec
fisubs
jae
pusha
cmpsl
or
daa
add
je
orb
cmpsl
in
or
xor
push
aaa
stc
out
pusha
xchg
sub
add
fwait
test
call
and
es
xorb
call
loopne
subb
mov
loope
fimuls
xchg
push
cwtl
aam
jg
push
adc
push
call
addr16
and
xor
aaa
inc
repz
push
xor
pop
sbb
loopne
xchg
mov
ss
js
test
or
repz
mov
pcmpeqd
mov
leave
xchg
lock
outsl
js
in
xchg
outsl
jg
sub
xchg
loop
hlt
jge
jne
daa
testl
cmpsl
jge
scas
push
movsb
clc
push
mov
hlt
scas
mov
testb
and
and
dec
cmpsl
bound
loope
adc
cmc
push
pusha
mov
dec
xlat
or
decl
idivb
add
pop
jne
daa
xlat
or
shl
pushf
xchg
dec
inc
divl
add
test
fdiv
add
fimull
xor
popa
xor
outsl
and
sub
push
mov
xchg
cmp
nop
imulb
mov
divb
subl
stos
pop
nop
divb
call
aaa
sbb
outsl
loopne
and
jecxz
and
pushf
pusha
divl
scas
es
pop
mov
add
mov
call
jg
hlt
ja
loop
fisttpl
sbb
and
jg
in
dec
scas
addr16
add
xchg
or
fs
add
sub
das
and
and
push
jb
jge
mov
inc
aad
lods
aaa
pop
in
jl
sub
sub
pop
cmp
ss
cmp
dec
stc
aaa
add
movsb
or
leave
test
mov
pop
iret
int3
xlat
jo
push
xor
sahf
iret
aad
sub
daa
loopne
xchg
pop
leave
in
pop
cli
daa
or
add
repz
pop
cwtl
push
xchg
add
call
dec
int3
js
or
outsl
mov
xchg
aas
add
decb
cli
cmpsl
sbb
and
mov
decl
xlat
xchg
push
inc
sti
das
outsl
add
or
inc
cs
xchg
movsb
inc
outsb
rclb
push
test
mov
add
cld
push
xchg
mov
pop
andl
push
xor
outsl
out
add
or
inc
lcall
inc
dec
loopne
or
jb
arpl
out
daa
or
add
addb
cmp
std
addr16
or
negb
jl
aas
addr16
fisubs
daa
lods
int
lds
iret
movsb
in
sahf
aam
addr16
gs
in
hlt
std
push
mov
push
dec
divl
mov
push
inc
inc
add
decb
imul
incb
nop
decb
or
rol
pop
repnz
shl
rclb
adc
orl
lahf
fsubl
arpl
clc
out
mov
jl
les
clc
sub
xchg
or
std
lods
push
mov
addr16
test
mov
add
add
jb
test
cmpsl
stc
cmp
stos
shr
and
push
dec
repz
mov
pusha
ds
repz
mov
mulb
mov
out
inc
xchg
dec
repz
mov
pop
mov
arpl
lahf
out
mov
pop
add
or
lea
call
adc
cs
insb
xchg
nop
iret
repz
push
pop
mov
imul
xchg
xlat
out
fidivrs
xchg
es
mov
xor
sti
push
xchg
inc
mov
mov
push
ljmp
ja
jne
push
xchg
push
out
cmp
xchg
fucom
jns
aas
push
ret
add
out
jne
loopne
cltd
jb
imul
lcall
in
fwait
push
imul
pushf
cmp
incb
mov
sbb
push
push
mov
out
sahf
out
lahf
dec
ja
into
out
cmp
add
mov
das
push
mov
inc
subb
xor
out
jmp
out
ds
fistps
cmpsb
jns
out
xor
sarl
push
and
pop
flds
xor
mov
stos
out
addr16
lahf
out
stos
icebp
pop
lods
xchg
fdiv
jns
out
lods
pop
fdiv
cmp
xchg
test
test
sahf
out
mov
mov
pop
mov
stc
cmp
pop
test
pop
mov
dec
repz
mov
mov
cmpsl
stc
cmp
and
sarl
adc
mov
out
ds
pop
mov
mov
xor
in
xor
iret
cmp
out
popa
mov
mov
cmpsl
stc
push
mov
inc
imul
lock
out
hlt
dec
sarb
jns
iret
lock
push
xorl
push
ret
xor
ja
fiadds
outsb
push
out
movsb
lahf
cmpsl
stc
pop
xor
push
int3
jl
out
out
inc
enter
leave
jge
out
push
add
data16
outsb
push
pop
xchg
hlt
int3
cmp
iret
sarl
xlat
add
sub
out
ds
ds
outsl
stos
out
repz
out
shlb
sarl
push
sarb
adc
pusha
out
iret
pushf
fcom
aam
movsb
out
xor
fbstp
iret
sarl
mov
xlat
mov
pop
dec
repz
fmuls
sbbb
ficoml
into
imul
imul
shl
fiadds
xchg
or
stc
xor
dec
aam
jmp
in
aad
lock
dec
mov
repnz
jo
dec
pmaddwd
push
jl
int
mov
mov
repz
flds
insb
add
push
insl
or
add
lahf
int3
cvtdq2ps
or
push
inc
aas
sarl
cmpl
pushf
sbb
pusha
push
scas
rorb
ficomps
push
xor
mov
popf
mov
loopne
aaa
int
mov
lahf
out
pop
mov
cltd
nop
insb
shlb
inc
dec
mov
pop
xchg
aas
cmp
rcr
fdivrs
lds
test
or
pop
call
mov
das
bound
cmp
frstor
aas
movntq
out
inc
leave
and
pop
testb
xchg
pop
mov
fbstp
test
add
mov
stos
or
outsl
out
mov
or
push
inc
outsl
dec
ds
das
push
inc
mov
inc
imul
or
mov
dec
mov
leave
gs
daa
dec
jg
dec
mov
pushf
int3
aas
in
mov
ss
push
inc
pop
sub
ds
jmp
outsl
addr16
and
add
aam
rorb
daa
in
loopne
adc
xchg
das
sub
inc
pop
push
push
fists
adc
adc
iret
or
inc
dec
shlb
mov
lahf
dec
enter
jbe
jno
dec
ja
xchg
pushf
dec
xchg
or
mov
filds
mov
push
pop
int
fs
outsb
jp
jb
pop
jnp
add
je
das
je
or
psubw
jg
jmp
cs
add
fiadds
mov
xchg
pop
inc
leave
xchg
lret
iret
les
push
sbb
jo
push
mov
dec
movb
scas
hlt
add
fisttpll
inc
pop
xor
jmp
push
daa
inc
scas
xlat
fldl
push
xchg
push
push
dec
sbb
mov
in
ja
data16
ja
jne
leave
aas
inc
fbstp
leave
leave
in
insl
fbstp
call
cmpsb
scas
and
sarl
pop
pop
push
js
pop
jb
test
es
and
pop
xor
enter
pop
xchg
mov
jnp
adcl
movsb
mov
imulb
dec
je
insb
push
out
lret
push
cwtl
adc
les
xchg
ss
xchg
adc
mov
mov
addr16
sbb
mov
inc
insl
mov
inc
xor
and
daa
xchg
add
inc
xchg
pop
mov
in
mov
jp
jl
mov
mov
scas
dec
adc
scas
addb
sbb
push
scas
dec
das
inc
dec
cmp
das
cmp
scas
or
add
mov
es
mov
inc
sahf
sub
mov
add
add
adc
in
inc
scas
aam
xor
or
out
fs
jb
inc
jb
mov
leave
inc
mov
mov
pop
push
pop
jmp
push
add
add
mov
or
filds
mov
and
cmpsl
and
jmp
push
daa
xor
ret
outsb
in
dec
mov
addr16
adc
jle
xchg
fildl
daa
push
movsb
mov
in
daa
shl
and
add
fbstp
adc
data16
fmul
je
add
mov
iret
test
dec
scas
add
mov
push
adc
lock
stos
daa
mov
lahf
pop
ja
mov
sahf
pushf
pushf
dec
fucom
in
cmc
mov
std
mov
in
add
mov
sbb
cmp
jo
xchg
dec
mov
jbe
fisttpll
setae
fwait
pop
mov
adc
addr16
into
out
in
in
in
cli
push
add
add
sbb
jns
out
or
or
or
les
cmp
dec
xchg
push
lea
cmp
das
push
push
mov
xchg
xchg
add
add
pop
adc
inc
fstl
push
je
inc
adc
stc
add
jns
push
je
out
xchg
push
xchg
sbb
sub
jb
fmul
in
jg
in
and
push
mov
inc
mov
imul
xchg
and
mov
inc
repnz
dec
or
pop
fsub
mov
std
pop
or
pushf
pushf
pop
addb
call
dec
pop
or
dec
pop
psubsb
xlat
sbb
popl
insb
sbb
cs
xchg
sub
add
cltd
popa
mov
xchg
int
add
add
sub
lds
xorps
and
push
bound
repnz
filds
pop
popl
or
add
in
sbb
sub
mov
dec
mov
nop
jmp
in
xchg
ja
call
mov
xchg
pop
enter
mov
dec
ja
cmp
sbb
daa
js
stos
push
xchg
pop
and
into
aam
and
adc
scas
rcrb
xchg
xchg
in
inc
jb
sbb
push
xor
movsb
sbb
push
leave
cmpsl
add
sbb
nop
xchg
pushf
xchg
xchg
push
dec
iret
mov
scas
mov
mov
push
pop
push
jg
push
add
hlt
cld
xchg
add
push
cltd
jmp
or
adc
das
add
jb
cmp
pop
cmpsl
xchg
sbb
js
dec
test
daa
movsb
mov
loopne
aaa
outsl
pop
jp
scas
icebp
in
orb
cmp
fcompl
xchg
sbb
daa
and
cmpsb
scas
and
adcl
bound
xchg
push
mov
mov
scas
pop
and
outsl
jg
in
adcb
sbb
pop
into
testl
inc
rclb
mov
fdivrl
pop
add
mov
xchg
add
cmpsb
out
daa
pop
in
xchg
stos
in
addr16
sub
daa
aam
pop
jg
mov
xchg
incl
jns
dec
dec
and
add
test
pop
mov
dec
dec
add
pop
scas
inc
es
in
mov
cmpsl
jo
leave
sbb
jl
daa
jns
cltd
mov
lcall
movsl
aaa
push
add
repz
movb
loop
mov
mov
xchg
subb
and
cmp
and
cmpsb
inc
add
lock
and
pusha
and
popf
inc
cmp
ja
and
xor
adc
ja
pop
movd
pop
push
pushf
dec
ds
popl
mov
cmp
xor
rcll
mov
fs
pop
jb
pop
nop
jmp
xchg
or
call
mov
aaa
xchg
jmp
push
pop
jmp
inc
pop
add
dec
mov
mov
push
xchg
mov
xchg
stos
test
dec
lds
popl
and
pop
fwait
dec
pop
push
sub
scas
out
mov
mov
add
xchg
imul
push
in
popf
out
push
cvtps2pd
bound
push
jb
sbb
push
fisttps
sub
push
jo
cli
popl
daa
inc
lcall
inc
pop
ja
pop
pop
cmpsb
mov
mov
aaa
lods
push
iret
aam
mov
jmp
ret
shrb
es
jno
xchg
fwait
or
push
mov
pop
push
pusha
es
jne
mov
mov
mov
aam
test
add
xlat
push
xchg
push
daa
cmp
inc
mov
fnsave
push
add
in
sahf
add
and
flds
daa
test
sbbb
scas
arpl
movsl
adc
fsts
pavgw
jne
xchg
xor
es
pop
add
sub
pop
ja
daa
insb
push
daa
jns
pop
xlat
pop
ja
push
cmpsl
push
scas
lcall
js
push
mov
push
mov
mov
repz
cltd
jo
cmp
es
push
mov
cmp
aas
add
cmp
or
push
daa
lret
ds
pop
sub
push
out
push
fildll
test
dec
dec
add
popf
ja
sub
push
xlat
push
dec
aad
in
sti
fcomip
unpcklps
es
iret
aaa
sahf
dec
push
pop
ja
jae
pcmpeqb
push
add
nop
das
lcall
dec
lods
or
aaa
cltd
loopne
sahf
xchg
scas
faddl
add
lahf
adc
insl
jbe
push
xor
in
loop
mov
scas
sub
jo
xchg
daa
and
pop
mov
push
mov
fsubrs
pop
jmp
ja
mov
push
mov
cmp
sub
fs
sub
xchg
push
inc
repnz
ja
nop
fwait
jecxz
leave
icebp
iret
xlat
mov
repnz
jo
addr16
in
mov
in
popf
je
push
pop
ja
inc
pop
movsb
add
jae
mov
cmpsb
push
leave
mov
out
subb
hlt
iret
cld
pop
add
xchg
cltd
std
xchg
pop
adc
cs
andb
aas
arpl
pop
push
cmpsl
jae
cmp
pop
imul
jns
daa
iret
push
mov
in
add
lods
inc
mov
xchg
out
jns
in
cmp
sahf
out
adc
add
repnz
adc
xchg
inc
loope
mov
inc
pushf
xlat
mov
xor
fwait
mov
pop
addr16
das
scas
iret
pop
fcmovne
in
into
fiadds
push
xchg
add
sbb
mov
push
ljmp
pop
xor
leave
repz
inc
dec
xchg
subb
push
movsb
addr16
mov
xlat
orb
jl
cmp
mov
push
xlat
xor
loope
movsb
pop
dec
mov
push
rcl
pop
xlat
daa
adc
daa
movsl
sarb
jg
xchg
dec
xchg
or
movsl
cmpsl
adc
add
sub
xor
mov
xor
sbb
sbb
daa
daa
ret
scas
movsb
add
mov
das
mov
cmp
adc
cs
push
pushl
push
daa
xor
adc
ror
ja
cmpsb
adc
cs
push
outsl
adc
in
xor
cmp
leave
inc
dec
push
add
cmp
fcmovnbe
jg
jno
or
push
xchg
jg
xchg
dec
mov
push
mov
xor
xchg
xchg
test
out
iret
in
xcrypt-ctr
cmpsl
pop
pop
add
pop
add
daa
das
cmpsl
aas
aaa
cmpsl
jo
adc
or
pop
cmpsl
jmp
xchg
xchg
mov
cmp
adc
shll
cmpsl
cmpsl
cmpsl
cmc
pop
sahf
pop
scas
cld
or
nop
cmp
pop
or
test
mov
sbb
inc
test
test
xchg
lods
push
xchg
cmp
pop
ja
mov
test
pushf
mov
test
lret
lock
push
ljmp
inc
fwait
xor
xchg
xchg
or
sbb
cmp
in
test
pop
adc
mov
push
call
test
xor
sti
push
stos
jns
shll
ja
sub
push
stos
cmp
out
pop
mov
mov
iret
subb
loop
iret
xchg
setp
movl
push
aad
add
xlat
popf
fisttpll
push
ss
movsl
in
jle
stos
pop
out
jns
or
sbb
sahf
and
out
jns
cmp
pop
aaa
jns
push
adc
adc
in
push
insl
jne
xlat
sbb
inc
repnz
cwtl
push
outsb
and
push
stos
out
mov
cmpsb
add
push
xor
mov
and
sbb
jb
push
mov
ret
addr16
and
cmp
mov
inc
adc
das
daa
daa
pop
insb
xor
add
cmp
fiaddl
cmp
mov
mov
jl
test
dec
ja
or
mov
sete
movsb
dec
or
lods
cmp
and
mov
lods
aam
les
cmovle
add
push
jns
das
push
in
cmp
jg
push
aas
test
xchg
jnp
les
or
aas
pop
pop
mov
cmp
or
push
mov
adc
adc
dec
popf
cmpsl
ret
ja
mov
inc
mov
lahf
cmp
pushf
and
vmwrite
cmp
cmp
cmp
sbb
pop
adc
out
push
outsl
sub
add
out
in
mov
ss
lahf
enter
jo
pop
inc
cmp
or
test
imul
jl
xchg
pop
mov
add
scas
push
pop
jb
mov
pop
enter
mov
inc
sbb
leave
mov
jo
cmp
xchg
aas
lock
scas
aaa
sub
cmp
in
push
add
dec
scas
pop
push
add
jmp
mov
iret
test
mov
cmp
or
mov
sub
mov
sbb
shl
decl
mov
push
iret
repz
add
add
add
cmp
push
pop
addr16
cmp
repz
xchg
xchg
mov
sub
or
mov
inc
cmp
shll
fwait
jecxz
outsl
xchg
mov
or
hlt
movb
ror
sub
inc
filds
mov
in
sbb
mov
mov
mov
daa
cmp
je
xor
divl
call
pop
pushl
mov
out
incl
jbe
pushf
cmp
hlt
test
leave
leave
leave
in
mov
mov
sub
iret
iret
in
addb
add
add
testb
xor
mov
push
mov
mov
jne
jge
pushl
rorl
inc
addr16
mov
mov
mov
cs
out
into
push
push
dec
cld
mov
mov
jb
mov
mov
aas
push
outsl
inc
jae
outsb
mov
add
sarb
stos
pop
pop
push
or
stc
sub
or
inc
sbb
jbe
xchg
fwait
mov
fadds
sbb
out
sbb
inc
xor
xchg
inc
pop
in
pop
in
or
nop
pop
scas
hlt
fstps
xor
addr16
lcall
mov
mov
mov
dec
ja
or
push
iret
jae
into
pop
out
addr16
outsl
add
and
outsb
daa
jg
xchg
or
pop
and
mov
inc
push
mov
inc
lahf
int
xor
loopne
lock
add
ja
mov
adc
mov
cmpsl
push
mov
mov
dec
ja
mov
mov
xchg
fwait
in
out
in
mov
mov
jg
mov
inc
cmpb
and
mov
mov
ret
jmp
inc
mov
fldt
and
ja
daa
daa
pop
je
test
out
fisubrs
add
add
xlat
pop
in
mov
inc
fwait
dec
incl
jb,pn
inc
jb
push
cwtl
jae
into
inc
xchg
add
in
in
lods
aas
jl
and
push
call
popf
fadds
adc
inc
cmp
sbb
in
fdivl
aaa
cvttps2pi
jg
mov
jmp
aaa
mov
cltd
mov
cmpsl
mov
andps
leave
dec
int3
xlat
loop
in
stos
pop
leave
inc
adc
mov
mov
inc
leave
in
jbe
mov
arpl
add
test
cmp
cmp
sldt
cs
fmulp
repz
jns
outsb
cmp
das
femms
rorl
out
lock
out
out
adc
inc
bound
outsb
cvtpi2ps
xor
jns
xchg
cmp
dec
push
das
stc
dec
jno
cvtps2pd
sahf
fldt
scas
xlat
xchg
setle
sbb
jns
xchg
mov
lock
xchg
ljmp
sahf
out
xchg
push
add
add
iret
rep
fstpl
pop
inc
or
mov
or
and
sbb
mov
lcall
mov
mov
mov
xchg
mov
decl
cmp
jnp
mov
addr16
out
in
add
xchg
leave
jae
popf
mov
inc
inc
jb
pop
loopne
mov
adc
and
sub
dec
push
add
fmull
dec
dec
mov
add
decl
dec
addr16
aaa
loopne
insl
pop
pop
mov
push
aas
jnp
mov
mov
fsub
paddsb
add
sub
mov
mov
getsec
mov
cmpsl
aas
xchg
dec
mov
mov
mov
outsl
jns
out
test
mov
sahf
xchg
out
pop
rolb
rolb
fsub
mov
cmp
loopne
aaa
or
daa
iret
sbb
push
add
sub
popf
xor
xchg
dec
push
and
leave
in
pop
xchg
cmpb
popf
pop
mov
mov
test
fcmovne
int3
aam
fsub
jb
loop
in
xchg
adc
xadd
nopl
add
das
mov
cmp
inc
rcr
repnz
pusha
dec
push
inc
xor
mov
addr16
addr16
jb
xchg
das
popf
movsl
lods
xchg
xchg
out
clc
rcr
sbb
loopne
xchg
xchg
xor
es
rorl
shrl
ja
addr16
jb
pop
jmp
dec
ja
jno
xchg
jbe
addr16
outsb
push
sarb
fwait
sub
dec
sub
daa
iret
fbstp
fdivl
xchg
aaa
push
je
out
jg
push
add
clts
repnz
repz
lock
inc
inc
ret
cmp
fnstsw
ja
movq
daa
xchg
leave
in
ss
mov
mov
leave
leave
into
loopne
push
push
sbb
or
testl
cmovs
ret
mov
pop
test
data16
mov
mov
iret
inc
mov
mov
repz
push
ret
fbld
jo
xchg
or
js
mov
mov
or
and
les
je
pop
les
hlt
mov
outsl
ja
push
pop
outsb
daa
mov
xchg
jg
test
or
daa
lds
iret
les
pushf
cmp
insl
xlat
out
fisttps
out
jae
dec
ds
adc
vunpckhps
ss
lds
pop
push
in
insl
div
fbstp
cmovno
out
dec
xorps
out
sahf
xlat
popf
insl
idivl
or
mov
mov
push
int3
push
dec
popf
call
out
sub
incl
das
xchg
sub
add
xchg
addr16
jne
lret
add
ja
outsl
pop
mov
add
gs
pop
clts
repz
repz
jne
jge
test
outsb
daa
iret
or
or
pop
iret
leave
mov
push
into
xlat
es
and
cli
jns
inc
jg
daa
push
add
xor
dec
cmp
cmp
aaa
movsb
jl
adc
mov
inc
popf
out
xchg
addr16
daa
rcrb
dec
pop
scas
add
stos
push
aam
add
movsb
fildll
fildll
push
xlat
mov
fistpll
iret
xbegin
test
push
or
jp
leave
pop
inc
enter
enter
dec
pop
xor
orb
add
out
in
pop
addr16
addr16
in
cltd
pop
mov
fucom
mov
test
ror
incl
out
or
add
leave
fcmovne
pop
cmp
pop
dec
cmova
pusha
mov
jle
popf
fsubl
movsl
mov
je
out
add
cmp
xrelease
out
or
iret
repz
or
or
lret
out
or
or
push
lret
xchg
iret
push
xor
lret
xchg
jno
punpcklwd
sahf
add
test
mov
pushf
mov
setl
mov
pop
paddd
lret
pop
cmpsl
cmp
outsb
add
xchg
ljmp
lret
add
xor
pushf
pop
outsl
je
pop
rolb
fistpll
mov
cld
mov
add
or
pusha
stos
dec
aad
lret
scas
inc
inc
push
sub
jbe
addb
lret
cmp
mov
iret
leave
lods
psraw
add
neg
in
enter
int3
or
or
out
and
or
repz
dec
push
or
iret
push
pshufw
cmp
repz
xchg
xchg
adc
cmp
repz
adc
adc
iret
push
mov
es
repz
ficomps
jmp
prefetcht1
push
adc
adc
adc
cmp
cmp
adc
push
or
mov
test
ret
add
pusha
adc
cmpsl
inc
js
inc
mov
or
push
cmp
je
push
notb
dec
or
int
push
imull
nop
push
dec
ja
lahf
aaa
xchg
pop
xorl
dec
fsubs
or
call
pushf
xor
mov
iret
int
mov
inc
jb
pop
repnz
addr16
gs
jg
pop
iret
into
addr16
xor
and
sbb
ret
fisttpl
popa
into
jg
into
jno
jns
inc
mov
or
in
in
or
rorb
mov
rclb
pop
dec
jb
and
iret
xor
pushf
scas
icebp
jbe
push
addr16
iret
jmp
cs
xchg
iret
ja
xchg
xorl
xchg
pop
xchg
into
iret
in
in
push
add
out
add
and
rclb
push
sub
sar
ja
test
rcrb
xchg
xchg
xchg
xchg
rcrb
insb
sarb
mov
je
rorb
dec
movsl
xlat
or
fcomps
jbe
cmp
fsubp
out
psadbw
negl
in
push
rcrl
push
pop
push
push
mov
push
push
or
es
or
cmp
repz
push
xchg
outsb
mov
fisttpll
popa
push
add
add
jns
pop
outsb
pop
xor
cmpsl
call
push
add
or
iret
rcl
pop
or
inc
pop
xor
popa
add
add
inc
popa
lahf
nop
popa
sahf
xlat
pop
rorb
dec
push
push
add
cmp
in
add
cs
add
fwait
push
fistpll
cmovbe
subl
enter
js
pop
mov
xor
add
and
dec
ja
daa
insb
popf
pushf
pop
adc
cmp
les
int3
and
jns
dec
rcll
rcr
or
lea
shll
roll
dec
ja
inc
mov
xchg
add
xor
cmpl
leave
leave
add
xchg
mov
mov
iret
sti
push
je
xor
adc
nop
jmp
cmp
xchg
aam
pop
aam
fs
cltd
push
pushf
aam
cwtl
cmpsb
pop
jmp
mov
movl
xlat
pop
inc
jl
push
imull
adc
mov
rolb
clc
es
inc
into
test
add
mov
sbb
xchg
aad
sbb
and
sub
aad
xchg
push
pop
punpcklbw
push
pop
ja
lock
scas
push
lahf
sbbb
xchg
pop
aaa
jns
pop
add
jns
sahf
or
iret
shll
out
xchg
cmp
aad
js
inc
push
in
in
cmp
icebp
or
pop
iretw
adc
mov
test
cmp
fsubl
sahf
sarb
divl
outsb
inc
leave
mov
addr16
jg
xchg
dec
cmp
push
cmp
in
push
add
clts
decb
inc
sahf
push
xlat
adc
and
in
dec
sub
cmp
push
icebp
in
dec
xlat
aas
push
pop
mov
add
xlat
xlat
push
or
pushl
jb
ja
movsb
lods
in
in
jbe
pop
mov
push
loope
in
scas
push
jecxz
and
pop
not
add
pop
push
mov
fsubrs
pop
push
and
scas
fadd
fildl
cmovg
aas
mov
sbbb
fsubrs
addl
push
leave
imul
pop
mov
add
loopne
mov
cmp
ltr
pop
jb
packsswb
sub
or
xchg
rcrl
or
mov
nop
push
xor
sarl
push
cmpsl
and
hlt
nop
outsb
add
push
ja
sbb
push
mov
pshufw
jae
jp
push
lods
popf
push
jo
add
pop
add
ja
cli
ficompl
cmp
fisubl
xchg
mov
cmp
js
xchg
mov
xchg
jb
scas
fnstsw
add
jno
leave
push
scas
loopne
jmp
xor
stc
add
dec
sahf
out
aaa
or
xchg
adc
add
aaa
jns
pop
add
xchg
xchg
add
or
or
xor
cmp
or
das
or
incb
dec
fstpt
insb
ds
adc
insb
insb
fisttpl
icebp
push
out
ja
leave
leave
add
xchg
jo
rcrb
mov
jb
clts
fsub
add
in
or
lock
add
fistpl
or
insl
inc
cmp
mov
fsubrl
aaa
push
cmovbe
dec
sahf
out
aaa
pop
push
add
push
iret
repz
scas
push
mov
dec
jbe
jne
pop
iret
into
dec
jnp
out
outsb
cs
push
pop
iret
repz
push
adc
repnz
sahf
movups
leave
in
xchg
push
pop
fsubp
fwait
cmp
leave
out
negb
decb
in
xchg
scas
sbb
push
pop
push
push
out
cmp
mov
es
and
jns
xchg
cs
ds
es
sahf
out
fisttpll
sub
sub
jns
out
pop
sub
outsb
out
sahf
out
jbe
jle
stc
mov
setbe
lahf
xor
js
mov
insl
mov
fadds
stc
addr16
pop
gs
das
mov
mov
aas
push
mov
or
int
outsl
add
rcrb
ficomps
xlat
pop
fiadds
mov
insl
ss
jb
jg
add
adc
pop
fbld
mov
daa
mov
jns
outsb
jmp
rcrb
sysret
fisttps
fucomi
in
in
stc
das
add
dec
pi2fd
daa
push
xor
jae
mov
jp
test
adc
adc
jns
test
mov
out
sahf
out
sbb
sbb
sahf
out
sahf
sbb
sbb
sbb
jp
ds
sbb
and
and
and
jns
out
dec
and
and
out
je
subl
mov
fwait
sub
jns
sub
sub
out
fsubrl
jmp
xchg
hlt
add
aas
or
pop
pop
loope
aad
and
lahf
sub
filds
aas
iret
repz
push
daa
pop
es
outsl
and
and
and
repz
cmpsb
pop
mov
mov
cmp
sbb
sbb
repz
repz
sbb
pop
out
ds
adc
loop
adc
iret
repz
sub
fwait
cmp
repz
inc
dec
dec
bswap
jmp
scas
push
dec
pop
pop
push
jle
pushf
pushf
fdivrl
adc
outsb
daa
iret
repz
jg
das
xchg
jns
out
dec
mov
mov
add
loop
loop
fcmovne
stos
in
pop
jecxz
movntq
xchg
wrmsr
add
add
cmp
popf
inc
xlat
push
push
inc
jle
sbb
jg
jecxz
jns
out
or
jg
repnz
sahf
mov
or
repz
push
movzwl
rcll
iret
repz
adc
adc
push
adc
loop
std
pop
jle
in
push
sahf
out
sahf
sbb
sbb
sbb
sbb
sbb
sahf
out
pop
pusha
and
fisttpll
and
das
mov
outsl
mov
in
jbe
movsb
scas
lods
iret
mov
mov
xsaves
rorb
pop
fidivrl
out
push
in
in
adc
js
out
adc
adc
add
lea
sbb
push
pop
in
or
jns
out
or
js
or
dec
pop
in
in
cmp
and
jl,pt
es
nop
das
dec
push
or
xor
xor
pop
sti
jno
mov
push
fildl
out
out
pop
cmp
negb
add
filds
out
push
out
repz
repz
nopl
adc
fcmovne
cs
adc
jae
jb
push
pop
pop
pusha
push
lea
iret
sbb
out
sbb
and
mov
inc
xor
out
je
xlat
pop
push
daa
rorl
add
movsb
sahf
fwait
and
in
in
mov
sbb
leave
leave
leave
leave
and
xor
repz
leave
inc
dec
xorps
cmp
leave
bound
adc
pmulhuw
jbe
mov
in
in
mov
ret
sahf
out
in
rcr
pop
out
out
jns
icebp
cld
and
cmpsb
xchg
iret
enter
test
sub
mov
push
add
inc
pop
dec
sahf
out
dec
push
add
in
pop
insb
je
jl
or
dec
aaa
jns
mov
push
pushf
movsb
dec
lods
push
adc
cmp
mov
sub
pop
scas
push
lock
movsl
adc
in
pop
jmp
out
add
add
add
xor
out
mov
or
push
or
jns
cmp
repz
test
adc
adc
dec
outsb
daa
iret
adc
out
repnz
int3
mov
sahf
or
adc
pop
push
cmp
leave
repz
xor
aas
iret
leave
repz
dec
pop
push
pusha
and
repz
cmp
jbe
xor
and
xchg
fcmovne
lods
mov
sahf
xchg
xchg
ftst
out
cs
cltd
loop
out
add
xor
fstl
jns
pop
add
and
sbb
pop
jmp
cmp
repz
add
add
cmp
addl
or
sahf
or
or
pushf
pushf
cmp
ret
lret
shl
pushf
pushf
pushf
fninit
jmp
pop
loope
leave
repz
add
das
or
fucom
jns
pop
adc
sbb
sbb
jns
and
sub
sbb
xor
dec
cmp
and
push
leave
cmpb
vmread
leave
leave
leave
orb
leave
mov
in
mov
inc
lds
int
or
jl
cmp
xchg
fcmovne
pop
pop
or
push
mov
mov
in
filds
or
push
in
jns
out
push
or
jnp
dec
pop
aaa
prefetch
mov
jbe
jg
lahf
mov
mov
jns
out
aad
loop
in
out
jns
clc
syscall
out
ficompl
repnz
sahf
out
hlt
sbb
add
scas
fwait
mov
push
sbb
and
sub
out
pop
ds
jg
out
lahf
push
mov
mov
sbb
jnp
sub
sub
sub
out
out
mov
jg
cs
out
sahf
das
jne
xorb
repz
xor
mov
leave
lods
mov
les
sahf
rclb
cmp
cmp
cmp
aaa
jmp
out
aas
mov
cmp
cmp
iret
mov
sahf
out
rol
iret
pminub
jns
out
inc
lock
std
inc
aaa
cmp
repnz
pop
lock
and
dec
sub
sahf
adc
add
pop
shrb
in
cmp
dec
mov
jge
sbb
cmpsb
into
mov
lock
jecxz
push
mov
outsl
xchg
push
iret
repz
add
add
ja
cmp
or
test
in
or
cmc
jns
fwait
push
push
push
sbb
out
sahf
out
adc
aas
iret
repz
sahf
adc
adc
adc
outsl
jp
pop
sbb
mov
nop
fwait
pop
mov
fsubrp
in
sbb
push
and
jns
jns
stc
repnz
dec
cmp
bnd
call
rcpps
xlat
pop
repnz
mov
and
ja
mov
push
add
out
mov
ror
xlat
fdivrl
cmp
loop
repnz
iret
jnp
mov
add
push
push
or
cmp
and
dec
xor
cmp
jg
outsl
cmova
pop
push
repz
fistpl
unpckhps
push
cmp
pop
jle
mov
sbb
sbb
ror
inc
hlt
iret
repz
mull
push
loope
push
in
and
out
cmpsb
sub
push
daa
daa
iret
repz
sbb
and
cmp
rep
cmovg
sub
movaps
mov
xor
mov
mov
out
push
add
add
add
jns
out
add
mov
in
out
aas
idivl
lahf
pop
cmc
inc
xchg
out
and
xor
xor
jmp
int
ficomps
dec
cmc
iret
push
cmc
out
pusha
push
push
out
mov
imul
push
or
or
sahf
out
cmp
ficompl
pmulhw
jl
out
lock
adc
idivb
testl
jl,pt
cmp
sub
xor
fsubrp
idivb
out
aas
push
sbb
out
sahf
out
fs
outsl
pop
jns
xchg
xchg
jl
xchg
and
and
outsb
mov
ror
fmul
jecxz
stc
les
loopne
notl
test
pop
and
inc
jg
sbb
pop
dec
test
sub
daa
fldl
mov
lahf
aas
je
outsl
jmp
add
push
cmp
mov
push
add
jbe
sahf
out
addl
out
out
or
push
or
pop
jle
negl
or
jb
adc
in
div
testl
femms
adc
daa
push
adc
xor
push
sbb
sbb
jno
clc
jg
push
test
add
clc
bswap
leave
pushf
fidivrl
clc
dec
sahf
pop
cltd
aas
clc
push
pop
std
mov
or
adc
inc
sbb
sub
cmp
inc
cmovnp
adc
iret
repz
pop
push
adc
adc
popf
jbe
cmp
sahf
out
xchg
sbb
xchg
out
test
jns
out
pop
les
int3
and
aam
and
lret
enter
stc
decl
cli
cli
das
shrb
push
cli
push
add
ds
dec
pop
push
repnz
cmp
bound
ds
fwait
cmp
sub
movntq
cmpsl
push
cltd
shld
cmp
scas
adc
mov
rcr
das
out
nop
popa
jb
jg
cli
cld
cli
enter
or
adc
sbb
cmp
fisubrs
push
pop
xor
out
cltd
mov
popa
sahf
out
sahf
and
and
sbb
dec
lea
cwtl
sti
out
add
addr16
es
inc
inc
decl
mov
mov
sti
inc
sti
add
sbb
cld
das
dec
cld
cmp
mov
cld
and
push
mov
cld
fcmovne
shrl
syscall
cwtl
mov
sahf
scas
or
pushf
je
add
mov
das
lock
sbb
adc
sub
xor
out
sahf
out
dec
push
mov
sahf
lods
sbb
mov
sbb
sbb
daa
stc
std
iret
sbb
cmp
sahf
aaa
pop
push
and
and
sahf
out
orb
sahf
out
sub
jbe
das
sub
sub
cmp
push
das
fdivs
jecxz
mov
xor
out
xor
pop
call
aas
ud0
sbb
or
fmull
cmp
ds
std
pop
in
mov
lahf
push
jne
cmp
out
aas
scas
xchg
std
inc
shrb
loope
xchg
mov
mov
xchg
add
aas
seto
out
outsb
test
mov
push
jns
mov
mov
loope
jmp
out
in
testl
jne
comiss
push
adc
sahf
ja
cmp
cmp
adc
mov
imul
in
jbe
cmp
mov
iret
leave
leave
lods
mov
out
popf
fisttpl
out
icebp
ja
jmp
sidtl
dec
cld
cs
popf
mov
punpcklwd
xchg
out
sahf
insb
sub
sbbb
scas
das
cld
cs
add
sbb
xor
adc
sbb
repnz
xor
lea
mov
cwtl
movsb
lahf
scas
btrl
jb
rcr
dec
mov
aaa
inc
add
popa
test
xchg
mov
mov
add
sahf
add
pop
xchg
in
in
push
pop
lahf
cmpsl
mov
jns
shlb
mov
imul
add
add
fwait
mov
add
sti
pop
repz
xchg
jo
push
aaa
in
shll
jle
inc
iret
test
sbb
adc
push
adc
push
mov
mov
outsb
fisttps
das
testl
jmp
mov
data16
add
es
push
or
add
dec
lods
push
inc
stos
stos
lahf
add
pusha
dec
add
dec
pop
ss
add
lock
pushf
mov
cs
inc
push
adc
push
iret
or
sbb
aad
out
inc
pushf
adc
outsb
pop
inc
or
or
dec
aaa
xlat
push
ficoml
aaa
xlat
add
insl
inc
outsl
das
pop
mov
jbe
push
out
sahf
adc
pop
fmull
sahf
or
or
aaa
or
jbe
xchg
scas
or
daa
in
pop
test
leave
leave
in
xor
addr16
das
push
xorps
cmp
jae
insl
push
and
jb
cs
orl
mov
xchg
sub
in
in
sahf
mov
in
shll
pop
das
cltd
pop
shlb
xor
dec
loope
sbb
adc
adc
xchg
adcb
mov
add
jno
and
push
imul
imul
pop
mov
loope
sbb
testb
add
movsb
add
addr16
mov
andb
fisttps
mov
jb
lahf
loopne
inc
jle
test
shll
mov
mov
add
mov
in
call
nop
pop
jle
adc
push
ficompl
fisttpl
pop
push
pop
fisubrl
xor
fcomp
loopne
jb
jle
andb
movsl
jns
xchg
nop
out
sahf
out
mov
sahf
insb
pusha
push
dec
inc
cmp
sahf
out
cmp
sub
out
sahf
out
and
adc
sarl
or
and
in
and
iret
repz
push
faddl
aam
shlb
mov
nop
into
je
iret
repz
push
pop
push
dec
repz
jns
inc
cmp
sbb
sahf
out
out
and
aam
mov
jns
mov
repz
jo
pusha
push
fmulp
repz
xor
push
or
iret
sarl
call
cmp
mov
pushf
push
je
pusha
sub
add
icebp
and
pop
outsb
pop
fisubrl
cmpb
lock
js
clc
mulb
lret
incl
dec
hlt
xor
jecxz
addr16
sbb
es
push
stos
loope
mov
out
or
imul
adc
xchg
aam
popf
loopne
jo
lock
call
push
mov
push
inc
jg
mov
mov
call
add
mov
inc
sgdtl
push
mov
jg
xor
adc
mov
addb
adc
add
int3
or
in
ror
test
mov
xor
ss
outsl
popl
inc
insl
add
xchg
xor
adc
cs
in
add
jg
adc
outsb
add
stc
pop
mov
jl
out
repnz
adc
es
sbb
into
xchg
sbb
jns
sbb
sbb
push
xor
pusha
and
int
mov
push
adc
ds
and
cmp
fisttps
out
iret
sbb
adc
aam
sahf
out
sahf
rorb
or
adc
pop
inc
sbb
fcompl
cmp
repz
sub
and
jns
repnz
push
and
pushf
out
sahf
adc
and
sbb
clc
aaa
inc
out
subl
pop
outsb
ret
popa
ret
imul
mov
xchg
cld
xor
aas
orb
xorl
fcmovnbe
repz
repz
pop
js
mov
mov
jnp
repz
xor
dec
insl
add
out
fidivrs
push
pop
ja
mov
js
xor
jae
das
push
dec
insb
inc
or
sub
dec
push
repnz
mov
enter
cli
or
or
ret
movnti
adc
inc
lods
dec
push
pop
and
sbb
mov
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
push
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
incl
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
jmp
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
decl
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
jg
lcall
pop
cmpsb
lock
mov
popa
sar
mov
sbbb
xchg
xor
clc
repz
mov
subb
fwait
xchg
and
sti
iret
int3
jbe
add
int3
add
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
inc
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sar
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
ljmp
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
cmc
jmp
cmp
mov
cmp
std
xlat
cmp
mov
sbb
decl
rolb
jne
fldt
cmp
jno
shlb
pushl
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
jmp
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
xor
std
jmp
sbb
gs
std
orl
pop
ficomps
frstor
jb
into
or
inc
add
notb
fmull
xlat
pop
push
add
nop
mov
inc
inc
push
dec
aam
filds
pop
dec
dec
inc
push
dec
inc
aaa
xor
mov
mov
jg
mov
imul
inc
aad
mov
jo
popa
push
outsb
jbe
imul
mov
sub
outsl
js
mov
mov
sbb
and
stos
dec
push
push
cwtl
mov
add
sub
dec
push
and
xor
add
push
inc
dec
push
inc
push
nop
sbb
jo
jb
push
lea
inc
test
lods
xor
gs
gs
mov
cmp
ds
arpl
and
mov
dec
sub
dec
outsl
push
dec
pop
mov
push
push
xchg
xchg
add
je
out
xorb
test
adc
das
pusha
add
push
fs
adc
xchg
xor
aas
roll
dec
mov
inc
or
dec
daa
daa
inc
hlt
out
fisttpl
imul
xor
inc
jg
fdivs
jl
inc
jns
dec
lahf
push
xor
les
push
cmp
mov
data16
jns
add
push
test
or
dec
in
inc
pop
and
sbb
sbb
out
dec
push
dec
dec
and
jae
jbe
push
push
or
dec
test
push
mov
xchg
rclb
mov
mov
popf
and
popa
jne
arpl
or
sbb
outsl
dec
dec
pop
xlat
out
add
push
sbb
add
pop
or
or
inc
xchg
push
stos
jbe
add
rcl
fnstsw
cli
dec
sub
mov
insl
shlb
das
addr16
pop
mov
divl
push
negl
imul
push
arpl
outsl
push
jb
or
or
lds
sarb
push
xlat
push
mov
jp
lock
push
aad
and
gs
push
inc
dec
pusha
push
xacquire
sbb
xor
push
push
stos
mov
inc
arpl
push
push
sub
mov
pusha
out
test
pop
jg
stos
pop
insb
outsl
xchg
insl
add
pop
xchg
loopne
rolb
mov
mov
data16
mov
outsl
xchg
insl
add
outsl
ja
inc
xor
ja
add
xor
ja
xor
inc
mov
push
pop
cmp
bound
push
xor
mov
add
icebp
ja
pop
dec
mov
adc
stos
sub
push
and
fiaddl
stos
enter
push
and
jb
leave
dec
sbb
sub
mov
inc
jg
mov
inc
or
iret
aas
incl
pop
dec
push
lahf
adc
enter
and
movsl
stos
inc
out
xchg
dec
mov
jge
es
dec
dec
xchg
sbb
sub
js
xchg
push
dec
lea
cmpsl
mov
adc
dec
outsl
push
shrb
push
dec
push
push
rorl
push
jne
les
outsl
loopne
loopne
loopne
push
sub
outsl
addr16
cmpsb
iret
ss
lea
push
rol
insl
pop
arpl
outsb
sbb
das
xlat
pop
insl
mov
cwtl
jns
daa
adc
push
jl
dec
repz
out
or
iret
repz
mov
jl
sub
aaa
int3
test
inc
insb
push
out
jns
add
js
nop
add
jns
push
and
lahf
incl
inc
addb
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
jmp
mov
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
call
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
decl
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
decl
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
mov
fcompl
shrl
cmp
ficoms
push
call
enter
mov
and
mov
cltd
xchg
mov
mov
or
decl
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
pushl
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
out
mov
stc
mov
or
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
jmp
or
fnstenv
adc
mov
mov
bound
or
adc
gs
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
outsb
xor
mov
sarb
pusha
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
decl
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
call
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
ljmp
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
jmp
pop
push
test
ss
sbb
push
imul
aam
loopne
rorl
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
inc
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
idiv
decl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
call
outsl
and
xchg
ja
int3
add
mov
das
es
lds
or
lcall
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
outsl
cli
jmp
insl
add
ss
jmp
addr16
jb
push
hlt
orb
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
pushl
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
ljmp
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
pushl
xor
mov
lret
mov
cmpsb
mov
sarb
sub
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
or
out
add
iret
push
add
movsl
dec
call
test
gs
mov
inc
cmpsl
outsl
inc
jne
mulb
imul
pop
sub
aam
imul
mov
fistps
jbe
push
jns
or
std
outsb
arpl
arpl
mov
sbb
insl
jns
add
jne
outsl
insl
addr16
xchg
fildl
xor
out
or
push
popf
testb
mov
xchg
push
outsl
ja
mov
js
inc
insl
bound
inc
out
sub
aad
mov
inc
inc
js
in
bound
push
dec
orl
jno
fistl
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
imul
pop
popa
arpl
cmp
arpl
or
xor
dec
popa
add
bound
popa
add
jbe
pop
sbb
jnp
icebp
xor
inc
xchg
notb
inc
or
insb
add
lock
fmull
sub
fbld
inc
rorl
ss
jbe
jnp
push
arpl
popl
add
sbb
ret
lcall
fadds
sub
sub
xchg
inc
sbb
inc
and
xor
inc
fstl
push
rcrb
dec
insb
xor
adc
aaa
je
aaa
push
inc
push
mov
add
ljmp
pop
cltd
and
jae
mov
adc
push
dec
push
mov
nop
lods
stos
aaa
inc
or
fisubrs
xor
ficomps
add
jo
inc
inc
add
ds
jnp
add
mov
iret
int
push
dec
dec
sub
xchg
pop
fistpll
xchg
ja
outsb
jne
lods
mov
and
mov
lret
pop
xor
jne
xor
or
add
ss
push
mov
or
mov
aas
jle
stos
pusha
aaa
cltd
dec
jo
add
mov
dec
or
inc
mov
inc
outsl
pop
mov
add
lahf
mov
fwait
incl
or
xchg
imul
adc
rorb
lds
dec
sbb
adc
push
push
js
popa
jo
lahf
or
add
push
outsl
outsl
test
mov
cmp
jno
lds
and
sub
sub
in
nop
test
pop
cmp
aam
pop
ljmp
xor
sarl
jo
test
xchg
pop
adc
insb
jns
das
mov
xor
popa
jb
test
addr16
adc
push
nop
adc
insb
or
cs
test
clc
inc
push
bound
adc
xor
ret
test
ja
pop
adc
xor
xor
add
adc
mov
aaa
pop
pusha
jl
adc
loopne
push
pop
pop
orb
scas
addr16
sub
and
mov
scas
xchg
fisubl
xchg
movsl
sahf
aas
mov
popa
adc
jg
push
outsl
rcll
and
aaa
hlt
mov
insb
mov
push
loop
aaa
pushf
and
cwtl
mov
adc
dec
lds
daa
push
inc
lds
aas
pop
inc
and
and
and
add
push
inc
sbb
push
fisubs
aaa
adc
pop
xor
dec
pop
nop
or
or
inc
repnz
adc
clc
nop
sar
decl
push
pop
mov
int
mov
xchg
add
adc
outsl
je
xchg
add
mov
jne
and
and
mov
xchg
push
cs
cmpsb
dec
shrd
popa
aas
orl
lret
std
repz
xchg
mov
out
ud0
jmp
repnz
in
mov
idiv
push
pusha
ljmp
lret
cli
push
xor
out
xchg
cld
push
imul
fistps
inc
es
add
dec
loopne
add
cmp
pop
in
or
or
push
daa
aam
cmp
jne
adc
adc
add
and
add
add
dec
jnp
cmp
sbb
add
xor
add
or
mov
nop
out
mov
push
loop
and
push
pusha
push
add
pop
dec
add
add
test
les
lods
add
xchg
or
enter
mulb
inc
fs
out
sbb
cs
mov
in
dec
or
rcrb
jo
push
xlat
out
test
dec
add
xor
push
pop
sub
and
push
and
or
push
mov
sub
inc
leave
mov
lret
ss
mov
lea
jecxz
lret
and
sbb
or
insb
pushf
fs
jne
pop
lret
xor
ret
js
lahf
sub
out
mov
ret
xor
cmc
mov
frstor
xor
addr16
dec
fucomi
pusha
sbb
loop
dec
add
xchg
fidivrs
add
or
cmp
ja
stc
mov
call
movsl
insb
pushf
test
mov
int3
loope
dec
mov
jnp
lea
mov
mov
sub
pop
cmp
cs
hlt
jl
les
test
sub
movsb
or
je
movsl
lods
clc
add
out
sti
mov
mov
cmp
sbb
in
fnstsw
aad
rcll
sbb
mov
call
or
rcll
cmc
std
call
dec
jae
push
inc
lds
adc
cmp
jbe
mov
repz
push
out
xchg
pop
pop
sbb
dec
xchg
jl
sub
fbld
test
mov
push
push
fs
dec
pop
push
xchg
cltd
adcb
loopne
jle
pusha
mov
xor
sub
imul
movsl
mov
loopne
push
insl
sub
sbbb
push
add
or
sbb
daa
pop
cli
es
mov
cmpsl
pop
mov
clc
pushf
and
aad
or
imul
push
inc
imul
add
dec
sub
out
push
imul
sti
mov
outsb
ret
mov
imul
and
sbb
and
jne
push
cmpsl
movsl
pop
adc
push
inc
adc
ret
inc
sbb
cltd
lods
cltd
cmpsb
loopne
rolb
pop
mov
imul
mov
add
mov
dec
inc
les
add
imul
or
and
adc
push
push
popf
testb
cmc
push
or
mov
je
mov
leave
push
adc
xor
add
cmp
and
push
xchg
mov
xor
scas
cmpsl
pop
xchg
mov
or
mov
dec
pop
push
jecxz
push
sbb
jge
xchg
or
sbb
push
mov
mov
js
sahf
lea
data16
in
mov
pop
xchg
jp
dec
push
test
addb
mov
mov
push
aam
je
inc
test
cld
sbb
movb
dec
adc
add
push
mov
adc
aam
lea
into
out
or
lds
xchg
mov
mov
js
lea
push
cmpsl
cmp
add
insb
imul
xorb
in
add
dec
xchg
jno
and
or
rcrb
movb
repnz
fsts
mov
aam
hlt
or
shrd
lock
movsl
mulb
inc
sbb
decl
lcall
sbb
push
ss
data16
jae
aas
in
mov
adc
xchg
popf
mov
fcoml
and
xor
or
rolb
mov
push
js
jg
pop
je
call
push
push
adcb
sub
push
mov
lahf
sub
adc
xor
inc
mov
mov
fcoml
xor
rolb
or
rcrl
add
jl
jno
adcb
ret
push
mov
stc
mov
jbe
push
pop
or
jmp
add
push
in
cmpsb
out
mov
jp
push
or
inc
rclb
dec
pop
in
mov
push
gs
xor
mov
sbb
push
pop
rolb
out
jle
lahf
call
jnp
or
or
int
sbbl
adc
xor
sub
imul
call
jnp
out
es
add
and
inc
push
mov
jl
adc
or
pop
xchg
and
fildl
sti
scas
add
andb
cmp
shlb
rcrb
xchg
sarl
jmp
or
enter
clc
jecxz
inc
inc
fdivs
lock
dec
cmpsl
mov
lret
stos
ds
cmp
std
sub
test
sti
push
cmpsl
pop
ss
dec
xchg
lea
and
mov
lret
dec
loopne
mov
nop
xabort
mov
sbb
jmp
xor
roll
push
xorb
or
mov
fmuls
pop
pop
mov
dec
adc
call
shrb
add
or
clc
mov
pop
mov
xchg
xchg
mov
push
sbb
mov
call
sahf
and
dec
push
inc
dec
rcr
nop
int
dec
or
or
sub
in
mov
rcr
push
fs
sbb
sbb
mov
and
mov
cmp
fsubr
shl
or
je
sub
hlt
ficoml
pusha
jp
cmpsb
rolb
xor
clc
sbb
xchg
xchg
aad
pop
idiv
add
add
ret
sub
or
pop
filds
add
out
shl
inc
movzbl
lcall
scas
sub
inc
daa
enter
and
xchg
sbb
jbe
xchg
negb
and
push
pop
lahf
movb
gs
mov
mov
push
mov
ljmp
bound
adcb
arpl
adcb
mov
lea
push
xor
xor
push
jns
or
xchg
lds
mov
daa
add
and
pop
sbb
cmp
ss
lret
mov
xor
mov
in
scas
and
nop
test
and
jne
add
sbb
sbb
push
sbb
add
lock
sbb
sbb
loop
or
xchg
sarl
mov
mov
sub
jmp
push
push
push
dec
fdiv
cmpsb
mov
xchg
fsubl
inc
pop
pop
pusha
push
mov
call
into
aam
je
push
popa
mov
cs
sub
pop
add
add
sti
fldl
cmp
xchg
push
orl
icebp
stc
and
add
jnp
jge
ret
fcompl
jb
call
push
mov
test
into
adc
std
sti
je
cmp
cmp
lds
ss
sub
push
adc
push
fmul
gs
jbe
cmp
call
sbb
or
mov
or
pop
adc
inc
push
sub
daa
shlb
cmp
push
faddl
xor
loop
ljmp
pop
imul
hlt
mov
fmul
fdivrp
xor
fdivr
mov
mov
loop
ret
lea
je
mov
out
clc
sar
mov
jecxz
pop
mov
and
jmp
sub
pop
ds
es
lret
xor
call
push
jge
mov
int3
or
mov
in
push
call
add
mov
dec
and
or
push
adc
rol
rorl
mov
pop
dec
dec
out
xor
popa
dec
lcall
subl
repnz
icebp
mov
rep
push
or
aas
mov
adc
mov
shll
jle
out
inc
jne
rcll
bound
cmp
jne
adc
call
push
add
insl
mov
jne
xor
push
push
mov
rep
push
pop
lahf
into
enter
aad
rorb
pop
xor
mov
pusha
clc
dec
enter
mov
push
ret
mov
and
dec
outsl
push
jb
loope
xchg
call
lock
ljmp
insb
subl
cltd
add
movsl
je
cmpb
out
popa
je
mov
daa
sub
sahf
pop
enter
fistpl
or
push
add
mov
mov
lds
movsb
xacquire
shr
adc
jb
adc
xchg
pushf
sbb
inc
stos
ss
imul
ljmp
imul
ret
lret
gs
leave
push
loopne
mov
xlat
loopne
cmpsl
cmp
push
jmp
sbb
in
popa
mov
repz
mov
jmp
sub
adc
insb
scas
enter
push
adc
push
push
or
insb
or
and
scas
dec
jno
add
dec
adc
cwtl
push
push
xchg
sbb
cmp
shrl
push
jae
and
outsl
xchg
dec
dec
cmp
jle
jmp
pop
or
dec
jmp
and
push
sub
dec
in
in
lcall
and
add
lret
pop
or
jmp
sbb
inc
inc
ficomps
imul
or
stc
divl
mov
loope
and
nop
incb
inc
leave
leave
int3
in
mov
in
in
enter
or
pop
jno
push
sub
imul
cmp
cmp
adc
mov
sbb
leave
sub
mov
adc
adc
or
cltd
inc
rcr
in
mov
or
pop
mov
js
and
sub
stos
repnz
xchg
setns
fadds
mov
mov
cmp
mov
inc
xor
shl
aam
inc
xchg
repnz
push
mov
sarl
jle
mov
lcall
mov
inc
pop
cmp
pop
lds
mov
imul
fidivrl
sub
cmpsl
adc
dec
data16
aas
push
fists
dec
mov
sbb
jne
hlt
adc
mov
jne
mov
lods
push
cmp
arpl
push
or
xor
jbe
push
cmpl
int3
add
add
dec
int3
aaa
jae
xlat
mov
xor
jmp
xor
add
faddl
jmp
inc
enter
push
ltr
pushw
adc
sahf
les
movswl
pushf
adc
mov
fldl
mov
lods
lods
dec
xlat
push
push
cwtl
stos
xchg
pop
mov
jecxz
repz
pop
into
inc
call
xchg
mov
lea
jb
adc
add
and
adc
or
mov
in
rorb
int3
dec
or
pop
jg
add
dec
icebp
rcll
push
add
jne
jl
mov
call
fucomp
test
cld
jb
add
and
add
sarl
ficomps
in
jne
and
or
pop
sbb
add
fnstcw
jns
or
sbb
dec
mov
ss
ljmp
push
add
add
dec
mov
ret
call
mov
push
shrb
or
add
jbe
clc
and
cmp
into
mov
ss
inc
and
jge
mov
xchg
jb
mov
xchg
popa
inc
dec
pop
daa
js
add
add
add
or
lea
pop
je
mov
pop
pop
ror
cmp
adc
or
loopne
adc
cltd
and
or
sbb
mov
popa
inc
jmp
sub
push
jmp
lods
ss
loopne
mov
stos
popa
imul
xor
pusha
dec
pop
sbb
sahf
push
mov
jae
cld
lcall
add
dec
sbbl
int
nop
add
or
bound
push
mov
add
add
add
les
jns
pop
mov
push
add
scas
adc
jne
xor
out
lods
lahf
inc
pop
nop
push
add
outsb
orb
adc
inc
popf
out
test
insb
mov
cmp
push
aaa
loopne
cmp
adc
push
jne
cli
test
and
sbb
rolb
hlt
repnz
scas
xor
adc
dec
mov
sarl
jbe
add
pushl
or
jno
pop
leave
jnp
mov
mov
std
and
xlat
iret
push
xor
dec
mov
xchg
inc
rcl
or
in
push
je
dec
cmp
call
mov
add
aas
pop
test
mov
dec
xor
imul
adc
andl
dec
mov
gs
push
fdivr
mov
dec
adc
std
ds
add
and
push
push
ds
adc
or
cmp
inc
add
push
cmp
pop
jbe
test
add
repz
mov
adc
sahf
lret
mov
sub
add
xchg
xchg
scas
jl
mov
inc
enter
cmp
jnp
inc
fcoms
mov
sub
or
lock
pop
add
inc
shr
int
mov
add
add
orb
jmp
les
clc
ss
xor
mov
pop
and
or
adc
loopne
mov
sbb
enter
jns
push
push
add
daa
push
out
jle
jl
adc
xchg
adc
cmp
mov
xor
push
xchg
les
popf
mov
dec
mov
push
pop
xor
cwtl
inc
jecxz
int
cld
cwtl
push
mov
push
call
into
roll
ds
shlb
pop
sub
inc
jbe
sub
or
lea
cmpsl
test
push
sbb
mov
mov
dec
push
cld
clc
push
or
enter
mov
in
and
jne
xor
outsb
in
std
jmp
and
xor
pop
call
inc
jmp
in
jbe
adc
dec
sbb
pop
js
xor
jmp
xlat
data16
cmp
mov
adcb
mov
nop
scas
adc
inc
sbb
pop
jae
cmp
mov
sarb
fs
adc
movsb
pop
sub
jne
nop
dec
dec
ds
push
rorb
fstp
cltd
adcb
push
pop
add
dec
mov
dec
or
sbb
into
fidivl
or
pop
repnz
repnz
mov
jl
sbb
out
filds
jne
mov
jmp
or
int
movsb
cmp
or
es
or
or
imul
js
pop
xor
cmp
cmpsl
pusha
mov
xchg
jbe
push
cmp
adcl
pop
sbb
or
sbb
test
or
into
jne
pop
loope
xchg
sbb
ljmp
decb
push
call
mov
iret
mov
cmp
ss
mov
imul
cmp
fistl
sub
mov
mov
mov
stos
inc
imul
or
js
jnp
test
push
fucomip
cmp
adc
push
sti
je
cmp
jbe
movsb
inc
dec
dec
pop
xchg
jne
inc
scas
and
insb
jg
nop
clc
push
adc
push
jbe
std
pop
jbe
sub
jo
xor
or
jnp
sbb
push
in
subl
xchg
or
pushf
cli
adc
loopne
shlb
jae
adc
xor
pushf
loop
data16
inc
jmp
inc
add
imul
shlb
add
xchg
shll
test
loope
jb
clc
mov
add
and
mov
and
xor
test
xor
jbe
jl
mov
jbe
fwait
jmp
push
mov
call
jo
push
sbb
cmpb
js
in
mov
into
sbb
sar
lds
lods
sbb
inc
adc
pop
lcall
lods
stos
loopne
jno
mov
je
add
xor
lea
jle
inc
jns
data16
mov
in
loop
push
push
sub
loopne
or
xor
push
or
fs
and
pop
sbb
aas
cs
push
mov
aam
xor
inc
sarb
cmp
lods
dec
pop
mov
mov
imul
cwtl
popa
fsubrl
pop
aas
cli
call
andl
mov
insb
xor
push
xchg
and
mov
shlb
dec
je
xor
aaa
in
jae
js
push
push
movsb
mov
out
imul
push
shrb
sub
add
push
sub
mov
jmp
mov
or
mov
int
adc
imul
mulb
outsl
enter
add
lock
jb
scas
ja
into
es
mov
das
mov
addl
dec
testb
push
hlt
enter
xchg
or
mov
ss
or
out
and
cmp
repz
push
mov
je
std
mov
jmp
adc
and
add
dec
add
add
sub
movl
sub
mov
dec
push
inc
pop
into
loop
sahf
and
hlt
call
push
pop
mov
sarb
push
fdivrl
lea
mov
subb
or
pop
addr16
icebp
jmp
sbb
push
mov
push
dec
cld
jne
into
xor
loope
inc
addr16
ss
movsb
pusha
push
cmp
jne
push
and
sbb
and
or
je
int3
jecxz
xchg
andl
mov
jns
lds
mov
jmp
nop
or
sbb
xor
add
sbbl
sarl
icebp
call
pop
mov
mov
inc
call
cld
push
aaa
mov
push
pcmpeqb
lods
xchg
push
mov
int
xchg
add
movsb
xor
mov
sbb
ljmp
mov
push
push
stos
ret
negb
sti
sbb
push
dec
xor
mov
jmp
jmp
mov
pop
xorb
movsb
inc
or
xchg
xor
je
pop
push
adc
movl
insl
sbb
push
adc
add
test
fdivrl
lret
and
xchg
jne
add
push
call
insb
out
and
in
movsb
jmp
js
in
jb
sbb
test
fnstenv
mov
mov
adcl
xchg
pop
add
cmp
clc
xor
xor
icebp
mov
inc
pop
pop
adc
movsl
adc
lret
mov
bound
call
pop
and
fcompl
sbb
push
js
push
sbb
push
insb
sbb
jo
or
mov
cwtl
or
add
or
cmp
test
test
push
daa
test
stos
or
inc
loopne
fs
add
adc
mov
mov
jbe
inc
mov
loopne
andl
cmp
jg
push
dec
rorb
scas
shlb
pop
mov
dec
pusha
mov
orb
xor
mov
aas
mov
cmp
andb
adc
nop
push
decl
adc
scas
clc
or
inc
inc
dec
jne
movzbl
add
stos
push
push
add
xor
movsb
nop
or
cmp
pop
mov
dec
inc
faddl
or
or
pop
lea
nop
out
push
nop
sbb
pop
add
xchg
outsb
shr
add
add
jmp
xchg
jg
and
adc
cli
sub
fildl
add
cmp
mov
jg
mov
rolb
jae
inc
pop
mov
jecxz
leave
nop
push
push
inc
rcrb
dec
inc
sbb
out
add
shrl
jmp
cmp
in
sub
popa
inc
loopne
nop
xor
push
pop
xchg
daa
sahf
leave
inc
call
movsb
jb
mov
lock
fst
push
push
call
jmp
dec
adc
movsb
pop
aam
push
jp
outsb
movb
or
stos
inc
je
sub
jmp
stos
push
mov
push
and
test
dec
mov
cmp
aas
enter
adc
xchg
add
jge
lock
xchg
adc
pop
push
push
add
inc
xchg
sub
xchg
mov
mov
lods
sub
jp
xchg
stos
add
das
out
xchg
push
add
xchg
or
pop
pop
inc
adcb
xchg
cmp
adc
ss
inc
add
mov
adc
or
add
loopne
sub
pop
adcl
pop
xchg
push
add
dec
xchg
inc
movsl
roll
daa
and
xchg
push
xchg
xchg
mov
in
sbb
sbb
or
test
cli
leave
pop
xor
pusha
and
push
and
dec
rcrb
and
clc
mov
pusha
xchg
cli
or
or
mov
call
addr16
ljmp
call
call
jno
cmp
dec
lahf
dec
imull
cwtl
inc
push
jns
cmp
call
xchg
dec
pop
js
call
int3
pop
fists
andb
jmpw
mov
dec
mov
or
or
cmp
or
std
mov
mov
or
pop
psubsb
aad
out
call
clc
scas
pop
jmp
andb
mov
ljmp
cmp
jmp
call
pop
xchg
sbb
mov
add
fmull
adc
sbb
xor
je
push
into
test
push
sub
fimull
test
sbb
lds
rcr
ud2
cmp
sbb
xchg
mov
push
jne
sbb
negl
add
sbb
repnz
aad
inc
sbb
or
adc
lcall
sub
ds
mov
push
pusha
lock
pop
sbb
push
loop
jne
and
inc
fiadds
notb
adc
xchg
push
push
es
and
add
movsl
push
loopne
outsb
push
and
jns
mov
shll
pusha
mov
je
ljmp
sbb
pusha
inc
imul
fs
movb
adc
cld
add
dec
push
movsb
push
or
in
push
loope
dec
ficomps
cltd
push
loope
xor
push
fwait
mov
sub
xchg
int3
xchg
js
add
push
sbb
js
cmp
xchg
xchg
xor
jbe
dec
sbb
dec
push
imull
push
xchg
cmpsb
sbb
jae
dec
sbb
mov
and
jp
or
xchg
sbb
push
popl
xchg
pop
aaa
bound
adc
pop
or
movsl
adc
pop
add
inc
popa
cmpsl
in
and
dec
cmpsl
stos
xor
or
mov
popa
inc
jbe
pop
shlb
loope
adc
rcrl
cmpsl
cmpsb
fildl
pop
pop
aaa
and
les
pop
cmpsl
cmp
adc
cmpsl
xor
adc
xor
cmpsl
je
es
sub
adc
cmpsl
dec
sub
mov
cmp
lret
cmpsl
nop
je
lods
lret
call
imul
daa
or
push
inc
dec
rorb
inc
cs
lea
nop
je
sti
sbb
je
mov
add
mov
daa
dec
jnp
adc
daa
xchg
xor
iret
repz
sub
sbb
or
add
dec
cmp
out
clc
xor
jmp
add
cli
sbb
or
mov
pop
nop
add
and
dec
outsb
rorb
daa
inc
aaa
addb
daa
push
or
out
fidivrs
push
mov
rolb
sahf
enter
xchg
adc
inc
cld
or
movsb
repz
push
adc
sub
add
mov
or
push
js
and
mov
leave
mov
loop
or
insb
and
adc
dec
pushf
push
add
jmp
cmp
je
mov
add
sub
sar
pop
or
lahf
ret
lea
jge
adc
test
inc
xor
push
pop
add
xchg
stos
cmp
sahf
out
in
add
add
test
dec
pop
inc
lret
sti
pop
jo,pt
cmp
je
xchg
add
mov
add
sub
sbb
push
push
gs
inc
sahf
pop
pop
inc
or
xchg
mov
or
out
dec
fimuls
cmp
cld
add
loopne
mov
or
and
or
push
repnz
or
or
push
or
pop
leave
push
push
orps
adc
jnp
scas
negb
or
adc
in
add
adc
enter
adc
adc
add
adc
adc
sbb
pop
adcl
enter
inc
cs
enter
and
mov
sbb
sahf
mov
cmp
sbb
sbb
mov
cmp
sbb
cmp
sbb
push
sbb
addr16
sahf
push
jo
xor
sbb
sahf
push
push
inc
negb
pop
insb
jmp
add
add
sub
incl
pop
sub
add
movl
aas
xchg
push
and
lods
pop
xor
jmp
cmp
je
repnz
push
jns
add
sub
rcl
ret
push
repnz
xlat
in
in
out
cmp
repnz
out
fdivl
call
push
in
call
jns
inc
pop
mov
cmp
in
sahf
xchg
cmp
lods
in
jmp
jmp
xorl
in
and
aad
in
cmp
pop
leave
xor
out
out
xchg
jb
sbb
out
or
je
insl
nop
out
lock
dec
inc
scas
in
icebp
cmp
das
iret
enter
repnz
push
pop
and
std
hlt
hlt
xchg
push
jnp
imul
std
cmc
sahf
xchg
stos
cmp
mul
popa
in
mov
sbb
inc
lcall
jns
scas
cmp
aas
stc
stc
dec
sahf
xchg
sub
cli
cli
das
nop
addr16
sti
sti
fdivrp
rolb
cld
cld
je
cld
push
cmpsb
in
fists
jne
mov
xor
sbb
xor
add
jmp
pop
lret
pop
sub
jb
lahf
roll
mov
or
fwait
or
jecxz
sub
movsb
adc
jecxz
xor
out
in
in
mov
cmp
jo
mov
aam
or
inc
scas
ss
out
xchg
scas
call
cltd
sti
or
adc
or
pop
jmp
jmp
leave
or
or
add
xchg
pop
jmp
dec
in
cli
out
out
out
xchg
mov
lock
cmp
cli
or
aas
repz
inc
scas
and
xchg
push
sub
stc
rclb
imul
mov
xchg
clc
cmp
pop
push
cltd
jb
push
stc
sub
sbb
enter
sti
sti
xchg
or
repnz
fdivrp
cmp
jmp
mov
cmp
ja
or
inc
scas
ljmp
sub
and
cld
dec
loop
loop
mov
jecxz
inc
clc
adc
nop
and
or
out
out
ljmp
loope
in
repnz
push
cmp
jnp
ljmp
xchg
push
jmp
dec
push
and
notl
divl
imul
out
sub
into
idivb
pop
push
loope
notb
xchg
or
or
inc
pop
leave
or
or
add
xchg
mulb
cs
div
testb
cltd
pop
push
fnstsw
clc
lods
inc
scas
in
cmp
sbb
pop
dec
push
popa
xchg
cmp
jns
mov
cli
hlt
rorb
sub
xlat
inc
jle
xor
add
dec
aad
jo
adc
pop
push
lods
mov
out
je
or
sti
mov
loope
shll
loop
pop
repnz
hlt
cmp
movsl
test
hlt
in
imul
test
repz
repnz
repz
push
cmp
or
sbbb
jmp
mov
ucomiss
jae
and
or
jb
sbb
mov
jmp
repnz
bnd
and
test
cmp
scas
out
imul
dec
push
jno
adc
repnz
sbb
cld
icebp
push
arpl
cmc
cmc
mov
icebp
mov
mov
xchg
push
lock
cwtl
icebp
xchg
out
inc
or
in
xor
in
xlat
xor
movups
push
jmp
inc
or
adc
test
jp
jmp
sahf
sub
push
cmp
ja
push
sub
ffreep
push
inc
sti
jp
dec
insb
loope
inc
cmp
cmp
ret
pop
pop
lods
enter
add
jo
mov
fiaddl
mov
fs
sarl
mov
dec
add
movsb
xchg
inc
cmp
jmp
and
sti
xor
add
popa
mov
adc
dec
push
nop
push
jns
out
mov
adc
aaa
or
push
repz
adcl
fwait
dec
sub
push
jecxz
repz
mov
shll
insb
sbb
push
push
iret
jnp
data16
in
xchg
gs
dec
outsb
and
idivl
faddp
scas
add
inc
cli
push
xor
dec
mov
and
mov
push
decb
lea
inc
cmp
and
sub
pop
test
mov
cmp
add
pop
cwtl
xchg
adc
lods
jle
shlb
movsb
jae
xor
fists
push
andb
push
sbb
mov
jecxz
add
push
fs
push
sbb
cmp
jno
sub
imull
sbb
xor
mov
cltd
in
xlat
pop
mov
xchg
lea
dec
pusha
das
sub
shlb
add
hlt
ret
xchg
rcl
in
jmp
inc
lret
movsb
movsb
xchg
add
cmp
mov
fsubrl
jns
pop
es
or
mov
add
pop
insl
adc
jmp
adc
int3
xchg
je
or
leave
gs
divb
xor
xor
adc
popf
adc
jo
push
dec
js
pop
xor
inc
inc
fsubrl
adc
mov
adc
hlt
psubsw
cmpsb
int
dec
sub
inc
sub
inc
jmp
and
mov
cmp
dec
add
jns
es
shr
inc
add
push
cmp
je
inc
add
add
leave
add
and
test
test
xchg
icebp
data16
pusha
or
icebp
push
nop
scas
adc
dec
xor
cwtl
test
icebp
or
push
or
sub
mov
cmpsb
adc
test
icebp
inc
dec
pop
jp
xchg
and
inc
pusha
or
mov
add
test
icebp
rolb
push
or
fwait
xchg
in
outsl
rorl
pop
inc
call
je
mov
mov
add
sub
or
test
mov
movsl
xchg
or
mov
aaa
pushf
adc
and
jg
cmp
je
or
inc
cmc
xlat
call
cmc
sub
adc
mov
iret
les
stc
push
and
jo
cmc
mov
stc
xchg
dec
sahf
mov
mov
cmc
and
xchg
push
cmc
xchg
and
ds
adc
rcll
jmp
inc
add
test
pop
lcall
adc
or
or
rcl
dec
jo
inc
xor
xorb
push
cmc
cmp
sub
outsb
or
out
add
and
sbb
rcl
or
dec
out
ja
pushf
pop
and
nop
dec
aaa
aad
cmc
imul
inc
cmp
jmp
sub
cmp
cmp
sbb
and
jno
xor
and
subl
cs
mov
push
cmc
cs
xor
push
cmc
dec
bound
adc
xor
repnz
mov
cs
push
ds
je
shlb
dec
cmc
mov
add
aam
push
mov
test
insb
pop
fs
and
xchg
and
rcll
stc
in
insl
lods
loopne
cmc
ljmp
and
dec
dec
bound
sub
and
ja
xchg
and
cmp
ja
and
jo
and
adc
push
cmc
add
mov
or
xor
cmc
mov
outsb
cmc
pusha
and
call
dec
inc
push
stos
int
clc
mov
and
push
insb
inc
jo
repz
scas
mov
and
and
jne
repz
and
xchg
repz
frstor
repnz
lock
adc
xorb
test
nop
sbb
shl
xor
popf
orb
cmc
data16
shlb
fndisi(8087
negb
je
repz
repz
or
iret
rcll
pusha
push
bound
xchg
in
scas
stc
cmp
aaa
popa
aas
ss
xor
fs
sub
and
je
jns
xchg
jns
loopne
dec
inc
dec
jns
loopne
sti
fs
jns
adc
popa
xor
sbb
cmp
int3
or
push
xchg
jns
into
dec
test
vorps
nop
outsb
mov
and
jns
pop
jmp
scas
jb
imul
repz
out
adcb
adcb
dec
and
int
xor
lods
inc
ret
or
xchg
repz
inc
sbb
repz
mov
fnsave
loope
xchg
loopne
fwait
xchg
rcrb
mov
mov
dec
inc
xchg
mov
test
sbb
dec
push
fmull
jne
mov
rorl
fnstenv
cmp
pop
cmp
clc
mov
xchg
cmpsb
mov
pop
mov
test
pop
cmp
inc
dec
jno
jnp
add
pop
mov
nop
mov
dec
or
sub
aaa
or
cmp
xor
or
sbb
add
nop
cmpsb
mov
inc
out
mov
or
rcl
mov
mov
cmpsb
add
loopne
adc
mov
mov
popa
sub
mov
imul
jne
rorb
loop
and
repz
cli
enter
loopne
shrb
rorb
nop
or
je
imul
mov
nop
jecxz
push
aaa
mov
ss
jo
rcrb
mov
inc
fnsave
mov
mov
adc
shrb
nop
add
cmpsb
orb
rcrb
int
xorl
mov
outsb
cmpl
fwait
call
push
dec
adc
dec
sbb
jb
nop
add
addl
dec
inc
push
cmp
mov
xchg
xchg
fstpt
or
dec
sbb
sub
fldl
outsb
xorl
aaa
cmpl
adc
insl
adc
lret
cmp
lret
dec
xor
aaa
or
subl
jbe
push
ds
pop
mov
daa
rcl
lods
or
and
js
xor
push
pusha
and
push
xorl
add
sbbl
add
sub
sub
aaa
or
add
shlb
fnsave
ret
orl
sbb
mov
or
sbb
inc
cld
and
dec
faddl
fcmovnbe
dec
dec
inc
mov
jno
cmpl
orl
aam
dec
fdivl
addl
sbb
addl
subl
jmp
sbb
add
subl
imul
loope,pt
xor
and
or
aaa
or
xchg
data16
test
cmpsb
fwait
xchg
hlt
fildll
or
int
movsb
fcmovbe
jo
enter
lock
mov
push
int
add
in
mov
into
and
orl
dec
cmp
ret
or
xor
pop
mov
insb
fsubrs
fldl
hlt
cmpsb
and
jo
out
cmpsb
mov
shrb
xchg
ja
or
je
dec
imul
inc
adc
or
sti
lret
call
out
mov
imul
pop
dec
or
cmp
xchg
and
cmpsb
mov
jae
nop
inc
push
cmpl
arpl
imul
and
out
dec
push
push
rolb
rcl
push
add
je
mov
fiaddl
test
cmp
stos
mov
outsb
sbb
adc
ret
dec
inc
inc
rolb
je
orl
mov
mov
jne
nop
mov
mov
xchg
inc
push
mov
inc
jmp
dec
and
pop
lcall
call
adc
mov
popa
jo
ja
cmp
cmp
daa
adc
xchg
sub
jle
push
pop
call
leave
jbe
cmpsl
jo
jge
aaa
imul
adc
les
das
push
sbb
icebp
mov
repz
or
das
mov
push
lds
mov
or
add
push
mov
cmp
dec
pop
ret
in
test
sub
dec
bt
mov
sbb
cmp
into
inc
cmp
jbe
lods
ret
aaa
mov
cmpsl
mov
xor
or
fcomps
test
test
adc
std
mov
fcomps
cmp
jnp
pop
int3
add
jl
dec
nop
popa
inc
mov
pop
and
push
in
pop
adc
insb
dec
add
fstpl
sarb
imul
xchg
add
xlat
push
dec
push
jae,pt
mov
fcomps
xchg
and
sbb
adc
out
xor
push
sti
push
xchg
inc
pop
mov
mov
insb
or
or
pop
xchg
pop
cmpsl
and
mov
xchg
xchg
xchg
pop
add
dec
and
cmpsl
and
orb
fbld
mov
push
mov
mov
add
lahf
xchg
je
sbb
push
mov
dec
jge
mov
pop
cmpsl
push
jae
mov
push
mov
cmp
inc
dec
push
dec
push
leave
ret
mov
push
out
inc
cmovns
js
pop
aad
mov
pop
sub
mov
in
cmpsl
rolb
cli
stc
mov
nop
push
inc
dec
adcl
xchg
mov
mov
fs
nop
fsubrl
mov
cwtl
inc
out
stos
mov
xchg
es
shll
test
pop
jb
pop
fwait
shrl
push
nop
mov
xchg
hlt
out
or
cmp
jl
add
xor
sub
lcall
push
jl
sbb
mov
inc
cmp
rolb
nop
push
sbb
sbb
call
add
and
scas
mov
fimuls
call
add
inc
cmp
iret
mov
add
add
mov
lods
sub
push
inc
xchg
ret
negb
and
mov
dec
jp
out
add
push
add
popa
push
dec
xor
out
fisttpl
inc
sub
andb
bound
xchg
mov
lahf
xchg
test
loope
and
xor
xor
inc
sar
sbb
cmp
dec
xor
dec
jmp
pop
xor
push
mov
lea
mov
call
xchg
out
pusha
arpl
scas
arpl
jo
xchg
mov
mov
cmp
fwait
test
adc
jne
and
and
scas
jne
push
test
add
jne
pusha
mov
and
sbbb
es
fsub
mov
inc
call
dec
iret
jne
movsl
ljmp
enter
ret
add
and
nop
fs
mov
xchg
nop
jne
pop
je
shrb
adcl
nop
jne
sbb
and
cmpsb
jne
outsb
adc
aaa
jne
xchg
rol
daa
jne
dec
jae
das
push
test
rorl
adc
cs
test
xchg
and
mov
loopne
push
cmp
insb
inc
ja
lea
into
loop
and
stc
dec
daa
movsb
add
incl
sbb
cli
out
jl
je
add
xchg
into
and
cmpsl
or
mov
push
or
notb
mov
movsl
ljmp
test
mov
pushf
mov
jmp
pusha
sub
lcall
mov
push
jns
ja
mov
xor
ss
pop
sub
repz
sbb
sub
adc
mov
mov
or
dec
adc
adc
gs
inc
push
add
ljmp
jns
dec
call
sbb
stos
repnz
call
cld
mov
nop
inc
and
cmp
pop
fldl
or
mov
cli
push
test
push
inc
call
mov
pop
insb
insl
inc
lods
ss
pushl
add
fsubl
adc
sbb
jne
push
movb
or
xchg
lret
mov
insb
cmp
add
cmp
inc
jmp
dec
jmp
xor
loopne
mov
push
mov
je
fstpt
inc
inc
pop
je
pop
es
and
cmpsl
nop
cmp
or
mov
inc
adc
or
xchg
jmp
sarb
add
mov
cmp
popa
xchg
xorb
add
ret
lahf
xor
je
cmp
insb
cmpb
and
cmp
leave
or
rclb
jp
into
call
in
out
add
xor
inc
jmp
xchg
jno
rolb
arpl
jmp
xchg
cmc
pop
pop
sets
sub
xor
sub
add
aas
dec
enter
add
mov
inc
mov
add
mov
xor
dec
xorl
inc
dec
pop
lock
pop
ss
mov
xlat
push
dec
mov
nop
cmp
roll
shl
psrlw
sbb
cmp
repz
negl
fisubrs
jge
push
push
or
pop
dec
mov
jns
xor
mov
aam
or
cld
cmpsl
jmp
cmp
xor
jle
push
add
and
push
add
ret
push
sar
inc
mov
orl
call
cmp
xor
lea
push
hlt
imul
sub
cmc
inc
adc
sub
mov
cmp
pop
rcll
popf
jp
adc
subl
aaa
inc
xchg
adc
sbb
pop
and
scas
push
xchg
pop
or
xor
sbb
stos
or
sbb
cmc
add
stos
andb
jecxz
add
sub
add
adc
fidivrl
sahf
in
push
cmp
sub
movsl
or
bound
dec
call
push
lcall
jp
lock
imul
inc
out
add
ret
jo
out
lret
roll
imul
push
cmpsb
rol
sub
mov
add
pusha
les
adc
loopne
ds
pusha
xchg
push
xor
and
push
shl
stos
loopne
test
notl
xlat
add
and
cmc
fists
xchg
xchg
in
cmp
xlat
sbb
mov
and
lea
add
testl
mul
call
daa
rolb
ja
je
jae
test
xchg
xor
cmp
jmp
cmpsb
cmp
jmp
repnz
push
add
pop
add
push
fwait
dec
sbb
and
push
inc
cmp
add
aaa
mull
push
and
loopne
and
or
nop
dec
ja
call
data16
roll
mov
jo
rcrb
lcall
sbbb
dec
sbb
pop
rcrl
rcl
stc
fmuls
jmp
je
sbb
dec
pusha
sbb
pop
cli
sahf
inc
inc
ds
repnz
ror
xchg
and
in
add
addl
xor
sti
and
and
push
xor
cmp
mov
and
add
addb
pop
loop
add
pusha
jns
xchg
dec
push
shl
or
push
jno
imull
or
ljmp
fucomip
dec
mov
xor
bound
loop
movsb
sti
jmp
inc
add
add
ret
or
inc
test
and
jno
xchg
sbb
testl
inc
sub
add
movsb
xorl
negl
lods
xor
add
pop
fs
roll
mov
push
inc
test
sub
and
xor
call
les
idivl
xchg
inc
inc
insl
jb
subb
testl
xlat
mov
push
inc
mov
cmc
push
inc
mov
in
lcall
push
sbb
sub
jne
cmp
test
call
sbb
scas
imul
call
je
stc
inc
pop
and
outsb
push
stc
mov
nop
out
test
inc
stc
and
loopw
pop
stc
xchg
mov
lods
mov
inc
lea
je
jns
iret
rcrb
mov
outsl
mov
test
adc
daa
lea
add
gs
out
push
sbb
add
push
je
test
daa
ds
add
adc
or
pop
mov
daa
in
jle
mov
push
call
push
es
mov
mov
insb
addl
jo
adc
or
mov
mov
addr16
inc
and
sub
es
xor
sub
mov
ret
inc
push
dec
mov
mov
std
mov
sub
scas
xchg
mov
push
xchg
sub
fisttpll
mov
std
inc
dec
movsl
mov
xchg
std
stos
mov
adc
mov
xchg
lods
std
push
mov
push
mov
ss
dec
negb
test
pusha
jmp
inc
mov
and
scas
shl
int3
push
fnop
push
push
pop
adc
aad
xchg
movl
xchg
dec
pop
push
xchg
push
aas
adc
addr16
cli
add
aam
mov
jnp
and
xchg
inc
or
pusha
aaa
push
pop
mov
aam
pop
call
push
xchg
dec
hlt
aaa
add
jmp
mov
xchg
and
jp
int3
cmp
cmp
mov
dec
dec
imul
xchg
pop
and
and
cmp
cmp
xchg
int3
cmp
ret
stos
cmp
dec
adc
idivb
dec
call
pop
cs
xor
dec
cmp
in
pop
pop
lret
xchg
inc
outsb
xchg
and
and
xchg
test
test
mov
add
and
ret
add
adc
mov
mov
xchg
test
movsb
int
inc
and
or
xchg
and
xor
scas
movsb
dec
enter
xchg
lds
pop
xor
inc
push
xchg
cmp
adc
aaa
call
jo
int
pop
mov
mov
inc
mov
and
sub
cmp
int3
dec
xor
into
mov
sbb
cmp
xchg
ficoml
ds
cmp
dec
push
cmp
cmp
dec
cmp
fcomi
adc
push
xchg
cmp
dec
adc
cmp
dec
adc
test
sbb
cs
xchg
cmp
cmp
cmp
and
jbe
and
sarb
or
or
mov
out
lcall
pop
push
xchg
nop
cmp
xchg
cmp
add
mov
sbb
sub
push
lea
dec
adc
adc
sub
and
cmp
cmp
das
push
lods
dec
inc
outsb
inc
cmp
cmp
mov
adc
push
dec
inc
cmp
sbb
inc
xchg
and
lahf
jg
push
xchg
shrb
rorl
xchg
sbb
add
popa
ss
push
popf
sbb
mov
xorb
mov
fistpl
and
imul
fwait
rorb
arpl
aam
inc
sbb
or
test
inc
push
dec
cmp
and
iret
lds
xlat
cmp
aad
pushf
sbb
add
xchg
and
in
test
mov
or
inc
or
adc
push
int
int3
sub
call
inc
push
adcl
cwtl
mov
mov
je
sbb
inc
add
xor
insl
inc
sub
pop
mov
movsl
or
in
aaa
call
lret
scas
sbb
sbb
mov
sbb
mov
movsl
or
or
js
pushf
push
xchg
pop
and
mov
jp
jns
test
sub
adcl
bswap
mov
cmp
je
sub
pop
dec
cmp
xor
cwtl
cmp
sub
lods
dec
sbb
arpl
sbb
sbb
or
xchg
rolb
pop
pop
inc
mov
sbb
ret
or
dec
sbb
call
xor
bound
pop
sbb
ror
inc
out
xchg
push
push
push
jns
test
xchg
das
sbb
fs
pop
mov
cmp
pop
jb
movsl
lahf
sbb
add
mov
add
out
inc
stos
cwtl
dec
dec
push
xchg
out
dec
enter
ss
inc
jbe
out
sti
mov
ss
out
cmc
jns
in
out
scas
cltd
dec
enter
push
dec
rorl
jle
cwtl
dec
test
out
cwtl
dec
dec
movsl
shlb
add
sbb
dec
out
pop
inc
add
or
mov
or
adc
or
cmp
adc
or
jp
aad
fiadds
andl
scas
jae
mov
sub
pop
or
into
fistl
fldt
add
and
pusha
mov
or
nop
inc
push
xchg
or
cs
mov
or
fisttpl
gs
add
add
ss
push
fldt
sbb
repnz
mov
push
sbb
fisttpl
jo
fnop
adc
jmp
mov
mov
fcmovnbe
gs
jbe
xchg
fldt
and
sub
and
inc
inc
arpl
arpl
lds
dec
dec
and
roll
adc
arpl
loopne
pop
loop
pop
in
fs
leave
inc
mov
dec
dec
and
jmp
gs
and
dec
sbb
test
pop
lock
adc
mov
pop
xchg
or
inc
adc
stos
dec
call
xor
xchg
push
pop
es
adc
push
mov
push
pop
cmpsb
rcrb
pop
gs
pusha
cmp
stos
lret
aas
shrl
sub
adc
sub
mov
test
bound
adcb
adc
push
enter
bound
call
popf
cmc
in
outsl
nop
pop
push
gs
mov
dec
mov
pop
push
mov
push
pop
pop
adc
inc
gs
pop
psubd
push
push
aad
je
fsts
add
mov
mov
xchg
sub
mov
pop
sub
dec
mov
pop
mov
cmp
xor
cmp
out
in
mov
dec
aam
or
inc
xchg
mov
aas
xor
unpcklps
das
cmpsl
cli
out
or
daa
call
movswl
and
adc
call
xor
clc
lret
in
xchg
sub
lock
call
and
repz
fdivrs
and
dec
call
pop
mov
andps
movsl
pop
call
in
xchg
das
pusha
call
push
stc
repnz
call
je
gs
pop
inc
adc
pop
jl
push
mov
inc
sbb
cmp
sub
es
sbb
adc
lret
lret
movsb
rclb
push
in
fnstenv
jl
unpckhps
ret
les
xchg
lret
enter
lret
fldl
mov
movsl
jb
jle
jae
jb
pop
sub
pop
call
push
in
inc
aam
movsl
jb
pop
lock
es
sub
adc
add
add
leave
or
movsl
mov
or
loope
adc
cs
sbb
cs
dec
in
mov
stos
and
push
mov
sub
cs
dec
mov
jle
jae
in
mov
cs
inc
gs
dec
mov
dec
xor
push
adc
and
or
pop
add
inc
dec
inc
or
push
or
push
cs
jb
dec
inc
mov
enter
jo
xor
sahf
mov
pushf
and
mov
enter
je
data16
js
imul
data16
sbb
xorb
dec
lcall
or
cmp
inc
and
cli
cmp
call
lcall
sub
cmp
mov
cli
mov
movsb
mov
mov
movl
lods
and
shrb
inc
dec
daa
push
and
mov
imul
jae
mov
cmp
je
jne
push
add
push
inc
dec
adc
jae
push
sub
xchg
mov
xchg
dec
inc
pop
pop
mov
add
mov
in
je
aam
mov
pop
mov
loop
shlb
add
or
mov
mov
push
or
je
fisttpll
dec
fnstsw
push
or
fisttpll
mov
inc
nop
fisttpll
test
cli
mov
and
cs
ss
into
pop
adc
and
dec
dec
gs
mov
mov
adc
stos
mov
mov
sti
adc
inc
xchg
fdivrp
movsb
inc
shlb
adc
addb
pop
adc
push
ret
push
mov
fists
push
dec
sbb
rcl
pop
xchg
or
mov
xchg
fs
mov
ret
xor
adc
xchg
and
loopne
cmp
inc
mov
adcb
adc
nop
jae
jmp
mov
rclb
xchg
push
pop
push
or
dec
or
jno
or
rcll
xchg
adc
pushf
xchg
xlat
or
sbb
xchg
repz
jp
sbb
movsb
je
adc
lds
or
sbb
xchg
dec
enter
push
pop
and
jp
ss
stos
cmpsl
lea
sub
test
sub
push
out
and
adc
push
jne
fld1
inc
cmp
adc
sbb
popf
sub
mov
cpuid
jg
mov
mov
dec
mov
push
arpl
jno
push
jne
in
push
pop
mov
int3
mov
leave
pop
push
mov
pop
cmp
cmp
and
push
pop
or
and
xchg
or
fwait
and
or
sub
je
cs
jo
push
mov
add
jmp
stos
dec
push
cli
mov
push
ret
add
xorb
movsl
dec
mov
lock
sbb
inc
pop
mov
add
sub
mov
cmp
movsl
inc
inc
push
pop
mov
xor
xor
inc
push
mov
pop
test
pop
dec
push
xor
call
xchg
push
push
push
into
rcl
pop
push
mov
adcl
cwtl
mov
sbb
xor
sbb
paddsw
cli
test
stc
sbb
leave
add
mov
and
dec
sub
les
mov
mov
dec
call
jo
rcrb
adc
shrb
jns
call
je
sti
xchg
adc
shrb
and
sti
lods
mov
xor
xor
test
pop
or
pop
mov
dec
js
or
pop
xchg
jmp
das
adc
leave
jnp
push
je
pop
clc
shll
push
ret
push
xchg
pop
int
nop
popf
inc
add
inc
movsl
add
add
cmp
dec
add
adc
mov
pop
pop
and
inc
pop
dec
or
push
cwtl
jmp
adc
roll
aas
mov
or
mov
sbb
and
inc
xor
jne
push
xchg
fistl
nop
lods
nop
test
jo
loopne
adc
sbb
andb
dec
mulb
adc
and
mov
out
add
and
scas
ret
int
ret
je
rcrb
push
ret
test
jmp
inc
pushf
frstor
xchg
or
pop
add
subb
push
mov
lea
lcall
stos
xor
sarb
push
sub
pushf
mov
xor
push
jp
imull
divl
divl
lret
and
dec
nop
cmpsb
sub
push
idivl
test
mov
xchg
pop
inc
cmp
jno
movsl
notl
nop
inc
testl
push
in
mov
imul
add
out
test
divl
jbe
jb
mov
push
inc
push
aam
mov
push
imull
popa
or
pop
ret
notl
push
cld
add
or
mov
enter
or
sub
xor
cmp
shr
test
rclb
dec
push
push
mov
adc
push
and
dec
fisubs
xchg
jo
and
and
or
lds
dec
out
shrl
pusha
or
and
icebp
or
fisttpll
pop
push
je
addb
adc
sub
add
ror
loop
movsb
adc
addl
loopne
mov
xchg
popf
daa
xchg
inc
jb
daa
adc
call
dec
add
or
daa
dec
cmp
xor
das
aaa
sbb
or
sub
and
adc
inc
jno
enter
adc
push
inc
daa
and
pusha
shlb
out
pop
scas
mov
fldl
addb
push
mov
cmp
push
mov
or
mov
dec
push
push
in
adc
pop
jmp
fldl
xchg
adc
dec
loop
dec
nop
mov
add
or
nop
popa
outsl
mov
test
pop
roll
fildl
mov
fstpl
out
fildl
mov
mov
pop
cli
into
and
push
pop
in
push
or
xchg
mov
mov
jecxz
xor
fnstcw
cmp
push
or
aaa
adc
add
inc
jmp
sbb
adc
fldenv
mov
inc
inc
sub
incb
movsb
xchg
inc
inc
cmpsl
sti
mov
add
pop
shlb
dec
xor
sub
mov
push
popf
mov
mov
and
lods
pop
test
out
mov
lock
fs
xor
addb
dec
inc
inc
mov
or
push
shlb
xchg
nop
mov
or
xor
ret
mov
xchg
cmp
dec
push
shlb
push
add
sbb
sahf
sbb
jne
aam
pop
inc
or
add
sbb
jmp
insb
fnstcw
fistpl
sbb
add
nop
cltd
dec
mov
fisubrs
call
push
xor
fbld
push
mov
out
call
jnp
or
mov
fdivrs
sahf
jno
out
pop
pop
fstl
ja
push
cmpsb
mov
or
dec
mov
xor
insb
xchg
js
hlt
cld
sbb
je
add
add
mov
push
imul
sbb
shrb
arpl
sub
pop
ss
push
roll
inc
imul
loope
add
sbb
sub
movsb
imul
push
sti
fwait
repz
adc
jnp
adc
repnz
xlat
xor
push
jnp
fwait
or
dec
xor
out
jb
in
mov
adc
xchg
fwait
jge
cmp
les
adc
jb
insl
adc
movsb
ficoml
sbb
cmp
or
mov
rcrb
xchg
test
cmp
ret
pop
and
sti
lcall
adc
xlat
ret
xchg
orb
add
mov
and
or
mov
imul
inc
movsb
repz
enter
lret
mov
add
and
dec
nop
push
push
inc
add
mov
cmp
in
cltd
mov
test
mov
cmp
cltd
add
jo
inc
push
movsb
adc
adc
cltd
adcl
outsb
nop
jo
mov
loope
inc
jmp
sub
imul
mov
or
jb
or
mov
adc
fwait
sbb
and
iret
and
lahf
out
cmp
add
and
or
sbb
repz
repz
mov
repz
bound
sub
or
out
ds
sbb
aam
push
iret
repz
mov
pushf
pop
push
lods
push
mov
idivl
push
inc
push
push
sub
sahf
cmpsl
jge
push
nop
movsb
push
push
xchg
jl
negl
cmpb
push
sahf
out
sahf
push
sbb
repz
repnz
fmulp
mov
test
mov
ret
into
sbb
sahf
negl
repnz
loop
cmp
sarl
out
aam
mov
sahf
mov
sbb
jns
out
pushf
scas
lret
repz
cld
or
and
pop
cmp
repz
jb
nop
sahf
repz
rep
mov
fsubrp
cmp
jnp
decb
ss
inc
push
sarb
outsb
jle
sahf
sahf
divl
sti
mov
daa
rol
loop
clc
adc
push
cmp
aaa
je
fs
push
fimuls
adc
daa
pop
mov
ror
repz
jbe
add
mov
jbe
push
cwtl
cmpsl
insl
mov
iret
jecxz
xorb
jns
dec
xchg
push
jbe
push
scas
jo
adc
test
pop
or
push
mov
lea
lods
fildl
pop
pop
jo
push
adc
jne
sub
adc
jle
mov
mov
sub
mov
or
dec
mov
je
pop
xor
outsl
lods
add
ja
add
adc
mov
les
es
push
pop
out
and
inc
scas
in
daa
xor
add
dec
add
fcoms
outsl
ss
popa
and
or
lret
sub
insl
mov
popa
xor
mov
mov
es
dec
cmp
mov
pop
call
int3
adc
das
inc
pop
mov
or
sub
mov
sub
dec
andl
adc
shll
roll
pcmpeqd
and
rorl
add
add
dec
add
vblendpd
stos
outsl
mov
sbb
pop
data16
add
jo
xor
and
das
jg
shll
lock
aas
test
add
arpl
push
dec
inc
push
outsl
cs
call
push
inc
pop
inc
outsl
outsl
rorb
xor
dec
rorl
mov
sbb
mov
fwait
aam
dec
and
pop
jg
hlt
decb
arpl
jae
pop
dec
jae
inc
jg
test
jne
outsb
je
sbbl
test
popa
xor
je
outsl
jnp
inc
xor
sub
sub
sub
inc
inc
xor
sub
pushl
xor
xor
jge
xor
xor
inc
xor
lahf
std
fildll
sub
sub
cmp
xor
clc
inc
push
cmovnp
inc
xor
mov
fisubl
aas
lar
sub
sets
fnstcw
jo
mov
sub
orb
cmp
dec
movsb
lcall
insb
pop
push
xor
or
push
and
inc
aaa
xchg
xor
inc
pop
dec
loopne
inc
and
jl
mov
rolb
mov
xor
dec
and
cmp
ss
mov
xor
add
push
lds
dec
outsl
mov
dec
xchg
rcll
loopne
lock
test
in
scas
push
push
fcoms
inc
dec
hlt
imul
insb
push
dec
pop
push
lods
sub
inc
push
inc
out
adc
push
sub
cmp
repz
adc
pop
aaa
mov
inc
mov
lods
sahf
add
fnstcw
and
hlt
test
push
fisttps
cmp
adc
push
cmpb
mov
lret
and
outsl
xor
imul
sub
je
push
push
jns
cwtl
mov
and
inc
cmp
add
cmp
sbb
xchg
sub
push
pop
stos
add
popf
mov
mov
xchg
neg
rolb
fsubp
inc
inc
dec
insb
insb
mov
xchg
and
outsb
adc
ss
ret
lret
shl
add
jo
fld
dec
inc
xor
or
pop
subl
pusha
mov
inc
cltd
cmpsl
pop
add
and
lods
adc
roll
inc
out
jne
mov
push
and
mov
jnp
inc
ljmp
push
imul
inc
xchg
loopne
jns
popf
fimuls
sub
scas
je
dec
fs
sbb
lods
scas
imul
push
jo
insl
ret
add
add
popa
out
movsl
cmpsb
inc
aaa
dec
movsb
imul
xchg
dec
jmp
outsl
push
out
pop
arpl
inc
cs
push
push
push
add
cmpsb
les
push
add
fildll
push
xchg
dec
fsubl
imul
fsubrs
add
lds
fdivl
adcb
pushl
adc
mov
xchg
andb
nop
rclb
inc
rolb
orb
add
push
add
sbb
dec
shlb
setno
in
aaa
xchg
pushf
add
sbb
push
inc
or
mov
adc
add
sbb
add
xchg
pop
add
sbb
xor
push
fadds
adc
out
cmp
orb
or
add
sahf
jnp
adc
das
jns
stos
and
adc
push
sbb
repz
out
enter
sbb
std
sbb
push
das
push
pop
repz
and
cli
pop
repz
js
jns
stc
jp
jecxz
iret
repz
cld
fdivr
mov
cmpsl
shll
xor
dec
cmpsl
push
mov
out
stos
mov
and
popa
cwtl
lds
sub
mov
les
pop
mov
es
mov
mov
mov
xchg
or
adc
add
adc
cmp
sarl
or
in
int3
jecxz
iret
repz
pusha
xor
out
sahf
testl
jo
push
cmp
repz
dec
sahf
cmpsl
cmp
inc
inc
cmp
xor
jns
out
sub
and
sbb
jns
out
adc
or
iret
sarl
add
or
hlt
call
enter
cmp
pause
jo
xor
out
sahf
out
pop
int3
mov
insb
lahf
out
sahf
inc
sub
adc
cld
push
cmp
repz
rol
mov
stc
cmp
repz
sub
aam
out
sahf
cmpsl
mov
repz
jg
push
int3
push
mov
into
jl
inc
xchg
cwtl
dec
cwtl
mov
push
and
adc
inc
lods
jnp
fmull
mov
add
daa
stos
xor
sub
push
sub
inc
inc
add
adc
adc
fiadds
inc
dec
cmp
lret
les
aaa
negb
lret
pusha
aad
xor
or
mov
nop
xorb
jecxz
add
mov
jo
les
cli
out
icebp
adc
lds
sbb
pop
shrl
and
cmpsb
movsb
fists
int
mov
aaa
inc
mov
les
fsubl
imul
pop
cmpsl
jecxz
push
and
bound
jg
or
shrb
mov
jmp
test
mov
shrb
inc
mov
dec
ret
jns
xchg
mov
out
pop
or
push
inc
subb
call
movl
fwait
out
cmpl
mov
loopne
jg
pop
jne
pop
stc
xchg
sbb
push
je
imul
ret
dec
fidivs
clc
inc
les
push
mov
jo
push
lock
jo,pn
enter
mov
cmp
xor
in
mov
push
push
push
insb
das
push
xchg
sub
leave
jmp
jl
add
ja
lahf
add
das
mov
cmp
sbb
loopne
out
test
adc
mov
mov
addb
ret
in
adc
lds
data16
pop
sarb
jg
adc
inc
fcoms
aam
mov
and
cmp
psadbw
mov
outsl
aas
int3
data16
repz
rorl
js
into
xor
and
xlat
jns
xlat
es
rcr
xorb
ss
lcall
out
mov
les
mov
outsl
mov
push
popf
xor
je
jl
in
push
aas
or
lahf
jg
cmpsb
jg
cmpsb
nop
adc
mov
mov
aaa
mov
loopne
cmp
cmp
jno
jg
enter
xchg
dec
pop
pop
outsl
pinsrw
dec
dec
and
shlb
aas
jbe
in
rdtsc
insl
mov
mov
push
aam
insb
adc
fs
outsb
movsl
out
loopne
dec
mov
movsl
jno
adc
loopne
scas
mov
lock
enter
insl
in
xor
mov
stos
fs
imul
jnp
sub
pop
add
or
daa
inc
inc
or
jnp
push
dec
imul
xor
ltr
es
push
jb
push
lcall
scas
pop
push
and
and
inc
push
push
push
add
dec
dec
cld
jae
outsl
ja
xor
jle
xchg
xor
jb
sub
add
push
xchg
jno
fsubrp
sbb
and
and
add
mov
daa
outsb
inc
lods
xor
ljmp
mov
xchg
mov
rorl
jbe
push
jb
add
xchg
mov
adc
mov
jo
inc
add
insl
jo
dec
pop
outsb
pop
adc
push
imul
add
push
mov
mov
push
push
jae
push
or
jo
adc
jae
movsb
mov
push
push
mov
add
mov
movsl
imulb
lret
out
adc
cmp
and
inc
sbb
or
add
rorl
stos
and
add
push
mov
inc
xchg
mov
das
push
or
or
cmp
mov
jo
jb
jns
imul
xor
rorl
push
push
lods
ret
pop
inc
xchg
sbb
negb
mov
push
xor
ret
aaa
adc
jge
lods
mov
inc
pusha
inc
jns
inc
xlat
and
jnp
fisubl
push
inc
imul
push
or
divb
mov
add
mov
ja
or
dec
inc
add
fbld
jne
out
mov
lods
gs
in
mov
inc
rolb
sub
adc
into
test
outsb
es
pop
push
scas
xchg
mov
popa
and
dec
inc
push
nop
pop
and
push
fs
lahf
jl
sub
xor
dec
addb
cmp
cs
divl
mov
fidivrl
or
inc
push
call
sbb
jb
lahf
inc
imul
add
inc
dec
xor
sub
das
das
jecxz
call
or
adc
mov
add
push
lcall
orb
aam
in
and
pop
lods
divps
push
dec
dec
dec
pop
addr16
ss
fs
jns
xchg
fs
vmovapd
lcall
inc
xchg
and
push
outsl
mov
dec
xchg
dec
cld
push
pusha
and
roll
push
mov
inc
mov
pop
sbb
mov
lock
mov
xor
icebp
rolb
insl
imul
jb
mov
and
jo
adcb
arpl
inc
jmp
enter
xchg
cs
inc
js
aaa
dec
inc
dec
pop
or
sub
mov
sbb
and
mov
stos
inc
sbb
shll
inc
jp
scas
cmp
sub
jo
loope
inc
jecxz
sbb
xor
imul
xchg
push
cs
sub
add
push
clc
dec
pusha
push
jo
fiaddl
cmp
add
scas
into
test
je
pop
roll
in
xchg
or
add
cmpsl
ljmp
dec
imul
add
fsub
arpl
fcmove
pop
add
mov
gs
xchg
into
out
mov
inc
cmpsl
add
push
mov
mov
pop
adc
push
push
and
jns
sbb
add
cld
inc
jae
push
sbb
je
ja
cmp
outsl
xor
pushf
add
add
dec
xchg
test
dec
mov
mov
lods
pop
sarb
cs
or
into
insb
sbb
add
int
jle
sub
cmpsb
xor
iret
loope
dec
sbb
and
fistps
rclb
ficomps
mov
push
popa
mov
std
fwait
xchg
and
mov
pop
inc
cwtl
aam
push
jecxz
mov
xor
adc
sbb
and
mov
add
and
pop
pop
push
insb
push
ret
dec
mov
xchg
push
punpcklbw
adc
mov
pusha
mov
addb
nop
push
loop
std
jns
sub
imull
test
inc
stos
rolb
mov
loopne
pop
add
dec
add
inc
cmp
imul
sti
fmull
rclb
jns
popa
dec
ss
pusha
jmp
pop
imul
push
and
push
into
jo
or
add
pusha
adc
pop
push
leave
mov
adc
mov
fsts
adc
lcall
mov
jns
adc
add
repz
repz
out
lock
cmp
enter
mov
jns
idivl
movsb
pop
mov
sahf
out
nop
mov
jo
pusha
push
pop
push
inc
cmp
repz
xor
sbb
pushf
out
adc
in
lock
pop
mov
push
fcom
repz
repz
cwtl
iret
repz
mov
cmp
cmp
repz
and
adc
jns
out
add
in
hlt
in
in
jns
out
int3
mov
sahf
out
outsl
xchg
push
mov
js
push
inc
stc
cmp
jnp
jle
sbb
loopne
adc
fcomps
push
xor
push
push
cmp
shrb
repnz
popf
lods
mov
push
mov
sub
incl
pmuludq
sbb
dec
add
shl
xorb
pop
scas
push
nop
push
repnz
data16
fisubs
push
aaa
adc
adc
maskmovq
testl
lret
jbe
or
neg
outsl
add
mov
neg
cmpsb
jg
fs
inc
dec
pop
add
rolb
cmpsl
mov
add
xchg
xor
scas
lds
daa
sbb
push
scas
inc
xchg
or
dec
mov
inc
jne
sub
inc
inc
subl
orb
addb
cmp
mov
push
pop
jo
add
in
sub
inc
add
ret
cs
mov
and
and
outsb
cmpsl
jbe
xchg
or
jae
push
aaa
push
pop
insl
xor
sbb
insl
jbe,pn
and
call
xor
xor
ds
sub
and
sub
add
outsl
jb
popa
fcoml
imul
mov
jbe
rcrb
cmp
rclb
insb
or
sub
or
pop
or
movups
jne
es
popa
fadds
mov
popa
insb
into
dec
mov
mov
stc
das
sti
adc
sbb
mov
push
inc
add
fcmovnu
add
inc
pop
pop
adc
fistps
fcmovbe
add
les
xor
sbb
bound
loopne
sbb
das
xor
xorb
pushl
add
or
sub
xor
xor
movsb
xor
xor
xor
xor
xor
xor
pushl
xor
xor
dec
xor
xchg
shll
inc
stc
pushl
dec
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
mov
jno
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fcomip
out
cmp
cmp
cmp
sub
ret
add
push
lock
idivl
lcall
lea
or
xor
xor
push
xor
pushl
xor
js
popf
xor
xor
xor
xor
xor
paddd
jmp
xor
xor
xor
xor
xor
out
xor
push
incl
xor
xor
xor
xor
xor
fidivl
scas
xor
mov
xor
jecxz
call
xor
mov
ss
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
movsb
lods
pop
out
cmp
cmpsb
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmpl
decl
cmp
cmp
push
adc
cmp
cmp
cmp
cmp
dec
cmp
cmp
jae
mov
pushf
cmp
fistps
cmp
jo
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
shr
aas
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
pushl
divb
std
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
std
ljmp
xor
xor
xor
xor
pop
xor
jo
xchg
xor
xor
jg
imul
xor
xor
xor
xor
bound
push
sub
ss
clc
loop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
fcomip
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
pusha
mov
or
pop
push
or
cmp
aas
clc
lcall
arpl
push
xor
xor
xor
xor
xor
xor
xor
call
cmp
cmpsb
push
xor
xor
lcall
out
xor
xor
xor
xor
test
mov
mov
nop
xor
cli
pop
cld
xor
xor
xor
scas
clc
xor
cmp
jmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
das
mov
cmp
jp
cmp
cmp
std
cmp
cmp
sub
xchg
adc
sbb
push
das
cmp
ds
fidivrl
jmp
jg
movd
and
cmp
ss
ss
xchg
cmp
cmp
cmp
iret
cmp
mov
cmp
cmp
cmp
dec
aam
push
cmp
cmp
cmp
cmp
cmp
cmp
das
adc
dec
aas
push
mov
cmpb
aas
sarl
aas
in
out
call
push
movsb
xor
jg
loop
add
jmp
mov
scas
xor
xor
xor
incl
loop
xor
xor
xor
mov
xor
xor
call
push
scas
std
xor
cmpsb
data16
ss
add
or
push
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
pushl
jl
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
call
cmp
push
mov
cmp
cmp
sbb
push
cmp
decl
add
push
cmp
sbb
cmp
xchg
xchg
cmp
or
cmp
cmp
cmp
cmp
cmp
bnd
adc
sub
xor
jg
cmp
adc
inc
cmp
push
cmp
pop
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
mov
ds
push
cmp
jae
mov
cmp
scas
cmp
jg
cwtl
ds
ds
jecxz,pt
out
ds
ret
ljmp
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
mov
push
xor
insl
stos
lcall
sahf
xchg
les
fidivl
in
dec
call
or
adc
and
sub
cmp
jb
mov
xor
xor
pushl
pushl
je
lcall
xor
xor
mov
jl
cmpsl
xor
xor
lock
xchg
xor
xor
xor
cmpsb
pushl
mov
cmpsb
xor
cmpsb
xor
xorb
aaa
fwait
sahf
inc
call
xlat
cmpsb
mov
bound
scas
cmp
add
sbb
sub
cmp
cmp
xor
mov
cmp
mov
pop
fimull
nop
cmp
cmp
cmp
inc
add
mov
jle
push
or
ljmp
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
pushl
ja
js
jge
cmp
cmp
cmp
cmp
cmp
cmp
pop
adc
xchg
mov
sbb
test
ja,pt
lahf
xor
xchg
aas
push
mov
pop
inc
xor
mov
xor
xor
xor
and
push
ss
fiadds
aaa
ret
lock
aaa
repnz
or
cmp
pop
cmp
lcall
cmp
cmp
cmp
jbe
xchg
cmp
cmp
cmp
lcall
add
cmp
cmp
fdivrs
push
pop
popf
mov
aas
jne
mov
or
cmc
cmc
pushl
mov
fwait
xor
xor
dec
or
or
sub
aas
xor
divl
pop
xor
hlt
xor
adc
es
dec
ss
outsb
notb
lock
mov
enter
in
and
cmp
cmp
cmp
cvtpi2ps
mov
dec
ljmp
orl
jo
jne
test
mov
pop
cmc
add
cmp
dec
cmp
cmp
call
cmp
cmp
cmp
jp
mov
cmp
cmp
pop
pop
cmpl
pop
cmp
mov
incl
and
push
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
add
sahf
loope
rol
fbld
mov
push
xor
aad
out
incl
cmp
or
xor
xor
xor
xor
xor
mov
xor
in
xor
xorl
add
xor
ds
dec
aaa
pop
aaa
js
mov
mov
cli
fidivl
out
in
aaa
cli
aaa
mov
es
ljmp
cltd
cmp
cmp
cmp
cmp
cmp
cmp
stos
lock
cmp
cmp
cmp
adc
jbe
cmpl
clc
cltd
cmp
cmp
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
clc
mov
out
pop
rclb
sub
jne
jg
mov
loop
xor
xor
jg
xchg
xor
xor
xor
inc
pop
dec
dec
cmp
xor
xor
ljmp
jbe
loopne
adc
call
sbb
sbb
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
jno
test
ljmp
and
jecxz
cmp
aaa
into
cmp
mov
xor
xor
lcall
decb
lods
xor
int3
add
xor
xor
add
mov
and
and
sub
sub
xor
cmp
jno
cmp
inc
cmp
dec
cmp
push
rcrb
cmp
mov
fidivs
cmp
cmp
test
lahf
cs
aad
push
mov
enter
add
aam
fdivrs
fdivl
mov
cmp
dec
cld
push
add
or
adc
cld
pop
lods
pop
stos
sbb
and
and
sub
sub
pop
jg
xor
cmp
inc
cmp
cmp
push
pop
cmp
cmp
insb
cmp
je
jl
mov
cmp
cwtl
outsl
ret
mov
sub
xor
inc
mov
push
aas
jg
ljmp
insb
aas
test
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
cmpsl
filds
or
xor
lcall
xchg
xor
xor
xor
inc
xor
xor
es
pushl
cwtl
xor
xor
xor
xor
cmpsb
cmp
pop
xor
mov
cmpsl
icebp
sbb
inc
xor
andb
add
dec
notb
fimuls
xor
ss
jmp
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
push
rol
ss
or
or
adc
adc
mov
sbb
and
and
sub
sub
xor
cmp
cmp
inc
aaa
call
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
cmp
inc
clc
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
into
mov
loopne
aaa
test
mov
mov
mov
aaa
bound
enter
shlb
aam
fdivs
fcompl
in
pop
sub
inc
out
aaa
hlt
xor
aaa
hlt
add
or
mov
adc
sbb
cmp
into
ret
fdivrl
call
das
ret
cmp
pop
sahf
jl
cwtl
cmp
cmp
loopne
lcall
cmp
cmp
cmp
cmp
push
cmp
jne
jl
test
mov
mov
jmp
mov
mov
mov
cmp
and
mov
add
and
and
mov
xchg
xchg
add
or
sub
stc
repnz
xchg
push
push
push
push
add
push
inc
mov
decb
cltd
push
inc
push
or
aas
movsl
xchg
push
inc
sub
xorb
leave
dec
push
add
push
repz
push
test
inc
add
insb
and
addl
mov
jp
push
add
fisubrs
xchg
pop
inc
or
lcall
sbb
js
push
xchg
sub
sub
dec
push
push
fisubrs
dec
mov
in
or
push
cmp
jo
sub
filds
adc
mov
sbb
or
push
xor
pop
daa
cmp
sti
mov
mov
dec
mov
jae
add
sbb
xor
aas
aaa
enter
add
inc
or
cmp
and
mov
gs
sub
ret
xchg
push
push
scas
mov
push
roll
sbb
lds
jmp
repz
aad
sbb
call
aam
movsb
jnp
xchg
sbb
push
sbb
idivb
push
sub
je
jae
push
dec
pop
dec
xor
push
mov
outsb
cld
add
jl
or
sbb
out
add
inc
inc
jb
hlt
or
lods
adc
add
sub
lcall
jnp
adc
dec
dec
ret
jnp
add
aam
add
call
cmp
sbb
sbb
aaa
pop
insb
pop
out
add
mov
push
mov
cmp
or
or
or
gs
jp
mov
or
sahf
inc
jmp
and
or
out
test
loop
dec
fbld
pop
pop
pop
pop
inc
pop
inc
sbb
shrb
add
inc
nop
mov
andl
rol
xor
push
add
lock
enter
adc
add
pop
std
xor
bound
sahf
add
lret
cmc
mov
je
sahf
ficoml
inc
cmp
dec
fsubs
jne
testb
test
std
inc
adc
pop
jmp
push
cmp
call
add
cs
jns
dec
inc
xchg
call
dec
ror
sub
pusha
dec
and
adc
fistps
adc
push
sub
fildl
add
dec
add
add
cmpsl
jne
clc
pop
add
fiaddl
sub
sahf
push
or
gs
and
clc
dec
inc
xchg
mov
jl
in
adc
push
rcll
out
cmpsl
das
jbe,pn
dec
cmp
pushf
mov
lods
and
test
push
addr16
ret
push
xchg
arpl
sub
mov
xchg
mov
cmp
lcall
fnsave
xor
or
leave
add
push
ret
flds
dec
mov
rorb
push
and
adc
loopew
nop
lock
mov
push
add
cmp
ret
cmpsl
add
fimuls
fcmovb
js
xchg
lock
mov
push
xchg
dec
mov
push
cmpsb
aad
popa
cmp
fimuls
dec
lds
jecxz
pushl
pop
add
fwait
dec
add
pop
sub
loop
add
or
push
push
rorb
cmp
mov
lock
jne
adc
subl
add
or
std
sub
cmpsb
pusha
or
std
dec
les
pop
adc
dec
adc
inc
or
fstpt
std
inc
xor
pop
int3
std
adc
loopne
adcl
leave
inc
jo
inc
jmp
sbb
xor
push
lods
mov
push
sub
cmp
cmp
or
fcmovnbe
mov
xchg
inc
call
jp
dec
xor
sbb
std
sar
add
add
ffree
or
stos
dec
inc
jmp
and
lods
sbb
test
pusha
dec
repnz
lods
sbb
or
gs
testl
je
cmp
push
jge
inc
or
inc
push
mov
hlt
rolb
jmp
addl
inc
fldt
dec
add
inc
adc
fstpt
pop
sbb
mov
es
lret
sub
sub
shll
push
shll
outsb
push
and
sub
addb
pop
mov
cmp
pop
aaa
xor
scas
stos
inc
adc
fucompp
aas
sbb
enterw
add
mov
call
stos
adc
or
push
cmpb
mov
push
jno
leave
jp
pop
adc
mov
push
enter
push
sbb
inc
shlb
dec
sub
pop
inc
pop
push
adc
sbb
addr16
mov
cli
sbb
and
out
sbb
std
pop
xor
cmp
adc
sbb
call
fwait
adc
mov
fmuls
mov
adc
or
dec
xchg
jne
pop
sahf
jbe
es
cmp
mov
and
pop
cmovns
jge
and
cmp
popa
or
xor
dec
pop
cwtl
je,pt
xchg
fs
and
jbe
and
pop
test
sbb
jmp
jmp
jmp
add
daa
fsubrl
push
jbe
fimuls
xchg
or
ds
test
xor
push
add
call
and
mov
inc
and
and
jbe
andl
or
fwait
stc
adc
aaa
add
adc
gs
bound
insl
add
push
adc
loope
lds
ret
sbb
xor
pop
mov
sbb
adc
push
add
push
gs
dec
add
mov
rcrb
pop
sbb
and
lret
scas
or
push
or
or
lret
add
adc
add
dec
or
cmp
out
or
stc
add
inc
fimull
aad
sbb
mov
in
out
cmp
es
xor
add
add
dec
out
fldt
sbbb
and
jo,pt
add
movsb
addl
mov
inc
rorl
cmp
sbb
fstpl
mov
jp
dec
call
or
mov
jecxz
rol
ss
pop
pusha
fstpt
fisubl
jae
jne
adc
pop
nop
and
insb
jbe
add
and
cmp
mov
nop
push
and
es
add
outsb
add
cmpsl
mov
cmpsl
dec
fldl
mov
repz
or
push
insb
fs
push
dec
mov
lret
cmp
cmpsl
xlat
loopne
add
jmp
gs
mov
cmpsl
pop
test
push
sub
lret
push
push
neg
and
into
jnp
mov
nop
inc
push
fs
mov
add
or
inc
les
jns
push
call
lret
roll
or
and
nop
add
inc
cmp
lret
cmp
or
push
cmpsl
in
out
mov
sub
xchg
cltd
jle
push
or
and
xor
add
cltd
push
xchg
enter
jb
inc
cltd
mov
popa
hlt
inc
imul
adc
cltd
mov
mov
enter
loop
jl
xchg
push
stc
adc
ja
push
xor
pusha
mov
stos
sub
mov
repz
dec
mov
repz
aad
push
cmpsl
ret
int3
lret
pop
add
pop
mov
decl
or
and
es
add
cs
daa
daa
daa
daa
cmpsb
imul
or
or
shlb
daa
sub
sub
mov
sub
sub
or
add
sub
xor
jae
sub
sub
inc
xorb
cmpsb
imul
test
mov
or
xor
jo
sub
sbb
dec
inc
fs
loope
adc
ret
sub
sub
mov
cmp
js
lods
subl
insb
into
inc
inc
sbb
cmp
movsb
imulb
push
jp
gs
push
or
clc
fs
dec
sbb
or
xchg
sbb
addr16
nop
inc
inc
adc
psubsb
cwtl
addr16
inc
mov
push
dec
xchg
sbb
lods
sarb
and
mov
or
adc
push
adc
pop
adc
push
sub
in
pop
es
jle
loop
sub
movhpd
addr16
adc
add
push
cmpb
iret
add
shll
adc
or
sub
adc
jmp
cmp
xchg
test
xor
inc
sub
or
or
inc
inc
out
cmp
cmp
push
nop
inc
add
out
cs
addr16
adc
nop
int
and
mov
push
shlb
and
mov
jp
repnz
mov
notl
mov
mov
cld
add
sub
sbb
add
mov
dec
fsubrs
cltd
cwtl
in
loop
pop
push
call
inc
loop
lret
rol
movl
fs
jmp
jno
dec
outsl
fiaddl
roll
mov
xor
mov
or
adc
xor
out
push
cltd
pop
sbbb
sbb
mov
cltd
xchg
sbb
fisttpl
pusha
sub
sbb
and
adc
dec
idivl
jmp
adcb
pop
ljmp
mov
ret
mov
and
add
push
cmc
mov
inc
repnz
push
insl
push
rcrl
mov
test
test
orl
dec
mov
rcll
mov
popf
adc
dec
ja
push
jne
rorl
inc
mov
test
jge
jo
out
and
sub
mov
xchg
mov
add
movsl
and
xchg
aam
mov
pop
inc
sbb
mov
rol
enter
roll
pop
cmp
mov
rcrl
mov
mov
or
into
stos
xlat
push
jne
roll
mov
jo
sub
push
rcll
mov
mov
jbe
push
gs
rcll
in
mov
adc
add
mov
pop
enter
add
inc
shl
leave
inc
push
mov
test
test
pop
add
or
lret
aad
jne
pop
shrl
pop
or
lods
sub
cwtl
fs
mov
stos
sub
push
pop
aam
adc
mov
mov
or
aam
add
push
shrl
push
xchg
mov
inc
mov
push
xchg
and
or
cmp
pop
popf
and
je
push
inc
pop
adc
icebp
mov
pop
rol
and
ja
dec
cmp
or
fcoms
or
xor
mov
daa
in
xor
sub
nop
call
xchg
push
nop
push
mov
enter
dec
pop
pop
mov
add
lods
outsb
mov
and
nop
pop
mov
nop
cwtl
add
les
or
pop
mov
push
pop
push
popa
mov
adc
xor
ret
pop
movsb
loope
into
xchg
pop
push
ds
mov
sub
jnp
nop
pop
loope
sub
not
mov
push
inc
cmp
hlt
jmp
xor
push
add
cltd
sbb
xor
xor
xor
xor
pop
inc
cmp
xor
dec
dec
inc
pop
cmp
dec
and
pop
rcl
and
mov
mov
pop
push
call
inc
pop
jg
push
or
fdivrs
jmp
adc
fdivs
lds
pop
stos
filds
loop
pop
jno
bound
dec
or
call
or
flds
cltd
adc
sbb
sbbb
je
mov
movsl
leave
and
addb
and
sub
nop
pushf
add
dec
pushf
cmpsl
or
sbb
jbe
dec
jno
cmp
aad
mov
andl
aas
lock
jl
in
nop
cltd
xor
pop
fstpt
xor
sbb
pop
push
mov
sbb
sbbl
call
xchg
gs
enter
push
adc
xor
lcall
mov
pop
fstl
dec
fnsave
fwait
jb
cmp
push
int3
fdivr
test
js
mov
arpl
sbbb
dec
pop
or
pop
jns
insb
lret
inc
fsubrl
fdivl
pop
lods
lret
xor
dec
fucomp
adc
adc
xor
inc
call
mov
adc
push
mov
and
mov
lock
cmpsl
add
lret
mov
test
and
int3
subb
rcrb
ljmp
enter
ficompl
mov
frstor
mov
mov
loopne
nop
iret
xchg
in
push
fs
or
mov
pushf
dec
pop
mov
sbb
das
nop
xchg
or
mov
sbb
mov
pop
adc
xor
mov
daa
in
fsubr
sbb
or
rclb
lods
pop
add
sub
shr
in
sub
jmp
or
fwait
roll
add
sbb
cltd
mov
sbbb
rcrb
push
inc
cltd
mov
jo
mov
adc
daa
jns
rcrl
and
scas
inc
sub
push
cltd
inc
inc
jecxz
aas
cltd
add
mov
mov
sbb
cmp
xchg
push
mov
stos
fs
inc
jmp
loope
inc
ret
cwtl
cltd
mov
sub
fldl
sub
xchg
push
bnd
test
ret
pusha
sbbl
ljmp
mov
dec
pop
out
cld
loope
sub
mov
ret
lahf
mov
stc
push
jle
add
add
pusha
mov
jl
add
sub
and
test
sarl
mov
shl
pushf
addb
sub
and
mov
mov
outsl
adc
hlt
xchg
inc
adc
call
adc
mov
push
mov
je
pop
lret
mov
add
mov
bnd
add
scas
lods
test
mov
dec
in
ret
pop
hlt
je
push
lret
jge
xor
pop
push
cmp
js
jl
and
addb
mov
cmp
inc
and
in
xchg
xor
icebp
xchg
loope
lods
inc
mov
stos
inc
adc
and
xchg
or
pop
lret
xchg
jl
mov
or
jno
and
enter
jp
mov
jno
pop
pushf
inc
pop
add
add
and
add
or
fisubrs
jns,pn
repz
sbb
pop
sahf
insl
dec
pop
movsb
mov
ja
jne
xchg
pop
push
xor
dec
fisttps
pop
push
mov
rcrb
sti
pop
inc
mov
fists
test
sbb
gs
fcmovb
loop
jecxz
xchg
pop
ss
pushf
xchg
inc
xchg
push
fcoms
xlat
dec
stos
xchg
push
xor
dec
pop
add
xchg
lahf
rcrb
mov
pop
test
xchg
pushf
mov
jno
xchg
fdivl
daa
es
shll
imul
mov
dec
xchg
adc
addl
add
add
push
or
into
and
push
xchg
lret
fnstenv
in
js
cmp
jns
fldcw
adc
sbb
sbb
jp
push
fwait
xchg
or
cmc
shlb
adc
or
andb
cmp
aam
push
add
mov
sub
pop
add
inc
inc
and
dec
xchg
dec
setl
push
xchg
fs
je
es
aaa
rclb
jno
es
and
sub
arpl
xchg
lods
leave
shl
jo
xchg
lods
mov
add
ljmp
jmp
xchg
movsl
xchg
outsb
push
xchg
ret
dec
aaa
dec
xchg
mov
xchg
xchg
push
rorb
xchg
or
jmp
loop
cs
call
fs
sub
lods
add
and
and
jb
or
mov
add
xchg
test
movsb
icebp
jnp
in
and
xor
xchg
or
push
and
xorb
push
scas
adcb
int
nop
jae
pop
adc
mov
inc
cltd
ss
sub
inc
cltd
ds
ss
loope
aad
sub
clc
int
add
mov
int3
leave
call
adc
push
int
mov
jb
idivl
inc
pop
das
push
in
mov
sub
pop
insb
push
push
and
aad
jmp
out
pushf
inc
inc
cmpsl
lods
shll
inc
push
sahf
mov
cmp
fstpl
dec
in
in
inc
fldl
movsl
cmpsb
mov
push
dec
push
cmpl
lcall
mov
sahf
in
push
cmpb
inc
adc
test
or
cmp
sub
adc
push
pop
inc
jno
call
dec
push
add
fildl
cld
adc
loopne
clc
outsb
xorl
sub
mov
dec
xchg
mov
push
xchg
dec
push
test
gs
ret
push
sbb
pop
and
fisttpl
pop
xorb
mov
fistl
aam
add
lret
loopne
lret
xchg
fildl
cmpsl
inc
or
test
sbb
add
sbb
mov
mov
mov
test
inc
or
push
fdivs
mov
loopne
aaa
out
jns
adc
add
test
daa
pop
push
and
lea
aam
fldt
call
push
call
jecxz
cmc
sub
push
xorb
and
and
imul
jle
dec
or
cmpsl
inc
push
orb
adc
xchg
fwait
movb
out
popa
adc
cmp
fnstsw
mov
push
fdivl
call
xchg
leave
sar
lock
sub
leave
mov
int3
jns
add
xchg
sub
dec
in
test
in
in
and
or
add
in
mov
in
fdivrl
sbb
in
les
test
mov
xchg
mov
mov
mov
mov
mov
dec
mov
inc
mov
and
jb
mov
and
cmp
add
nop
sbbl
mov
enter
sarb
and
cmp
mov
jle
jo
gs
pop
mov
sbb
and
cmp
push
jb
sbbl
or
cmp
inc
idivl
sbb
and
mov
push
jb
mov
and
cmp
pushf
mov
nop
sbbl
mov
enter
pop
mov
in
pop
cmp
mov
jb
xchg
sbb
mov
cmp
inc
push
hlt
mov
dec
or
pop
sarl
orb
mov
xor
jp
xor
mov
mov
daa
insl
in
or
inc
adc
adc
mov
sbb
jb
sbb
sbb
daa
int
cli
mov
rorb
cmp
dec
xor
cmp
mov
and
int
inc
mov
mov
mov
dec
dec
push
cs
dec
sub
lea
add
addb
stos
or
add
aam
addb
or
xor
add
push
test
add
js
rol
or
rclb
stc
sub
add
dec
repnz
xchg
inc
cmp
push
cwtl
sub
ret
fdiv
mov
mov
hlt
imul
inc
mov
icebp
adc
dec
test
pop
scas
mov
inc
sub
mov
add
add
aam
adc
push
and
mov
aam
xor
aam
mov
test
xchg
scas
rol
xchg
xchg
inc
or
bound
imul
mov
mov
push
mov
movsl
gs
adc
rolb
hlt
scas
shll
mov
adc
and
mov
mov
scas
xor
dec
outsl
fsubrl
jl
lret
xchg
dec
push
mov
adc
and
popa
mov
inc
sub
sub
scas
and
ds
xchg
mov
scas
mov
sub
jmp
mov
repz
andl
pop
scas
xor
dec
scas
int3
xor
sub
scas
movl
movsb
mov
scas
or
pop
dec
flds
mov
fdivrl
addb
mov
popa
shl
add
jmp
lea
push
and
adc
jle
pop
xchg
int3
xchg
test
int3
dec
mov
shrl
iret
scas
sub
pop
test
out
cmp
and
sbb
roll
lcall
test
in
lret
rcrb
xchg
push
inc
xor
xor
test
inc
mov
in
in
mov
inc
out
call
mov
mov
sub
test
gs
jbe
jo
pop
cmp
scas
push
test
lcall
mov
pop
jb
dec
test
shlb
sbb
test
pusha
or
test
or
rorb
mov
xchg
xor
pop
cld
lret
xchg
jae
jp
xchg
movsl
repz
dec
inc
loop
test
lock
call
add
mov
push
pop
addr16
sbb
jbe
jmp
push
gs
outsb
push
dec
adc
xchg
out
test
pop
lods
mov
loope
sbb
pop
test
je
test
adc
mov
pop
test
aam
call
jmp
test
fsubrl
andb
and
add
movsl
shl
sbb
sub
pop
pop
andb
pop
fiaddl
pop
and
in
movsl
and
lret
xor
sbbl
rorb
sub
outsl
fs
mov
aam
or
jns
adc
test
nop
jbe
xor
mov
push
jnp
push
inc
mov
iret
test
and
xor
add
push
test
sub
test
adc
cld
lock
sbb
mov
fstl
test
sub
dec
push
cmpsb
jg
and
clc
jne
je
xor
sti
hlt
cmp
or
xor
test
aam
test
sbb
test
andl
outsb
xchg
test
lods
cwtl
test
gs
cwtl
pop
test
xor
test
int3
mov
jbe
xor
adc
test
stos
shrb
mov
or
or
cwtl
gs
stos
test
je
test
xchg
and
popf
adc
add
fnsave
mov
add
jae
mov
test
gs
xor
sahf
test
mov
aam
sbb
leave
orl
xor
lcall
xchg
pop
xchg
dec
shrb
jg
es
push
int3
mov
sub
lahf
lods
test
pop
ret
sub
dec
shrl
sub
inc
mov
mov
or
cwtl
gs
mov
adc
test
pop
jmp
scas
addr16
mov
dec
sub
lret
xchg
adc
jnp
arpl
xor
dec
pop
mov
pop
lods
test
or
test
mov
test
sbb
dec
cmpsl
jmp
jle
cltd
gs
shl
sub
pushf
movsb
in
stos
mov
shlb
bswap
sub
adc
pusha
fstl
imul
dec
add
cmpsb
push
outsl
push
test
jmp
cmpsl
mov
call
mov
dec
hlt
lds
iret
jmp
mov
fwait
push
mov
mov
mov
in
xor
adc
cmpb
xor
lahf
adc
ja
cmpsl
scas
out
rcll
jp
and
sbb
sbb
mov
or
push
ja
pop
xchg
cmpsb
ljmp
inc
cmpsb
fnstcw
mov
ds
adc
loopne
push
testb
jns
out
push
sub
mov
int3
faddl
sbb
repz
sub
inc
push
pop
outsb
cmp
repz
xchg
test
enter
repz
outsb
or
push
ds
cmp
repz
jb
mov
int3
out
push
stos
out
sahf
cmpsl
adc
cmp
out
sahf
pusha
jbe
test
into
out
idivl
add
push
sbb
sahf
out
sahf
xor
dec
pop
insb
add
inc
ja
pop
cmpsb
add
jb
sbb
fisubs
push
adc
mov
push
lea
ret
xor
add
jns
imul
pop
mov
push
push
mov
dec
sbb
mov
add
insb
filds
push
clc
mov
mov
pusha
xor
iret
mov
sbb
add
es
xorl
mov
mov
or
add
jnp
sub
test
adc
adc
push
adc
out
cmp
xchg
sbb
sbb
xchg
js
or
mov
imul
test
iret
sarl
and
js
jns
out
cmp
jp
cmp
jns
aam
xor
out
test
push
mov
int3
dec
inc
or
subb
adc
test
and
out
sahf
push
push
push
cmp
dec
repz
adc
add
xchg
in
loopne
iret
repz
fcom
int3
enter
repz
sarb
test
mov
iret
repz
mov
iret
repz
je
insb
iret
repz
push
push
cmp
repz
dec
dec
inc
inc
repz
repz
xor
sub
repz
and
add
nop
sahf
out
sahf
fmul
test
push
jns
add
pop
movsb
repz
repz
push
dec
inc
cmpsl
stc
cmp
xor
or
mov
sahf
out
sahf
shlb
cmp
sarl
int3
test
push
data16
xor
jg
push
add
lock
insb
inc
out
mov
adc
sub
adc
add
add
daa
stos
push
mov
aaa
xor
push
push
add
jbe
mov
and
xor
jne
shrb
push
stos
push
cmpl
outsl
push
shlb
movsb
add
jbe
and
push
inc
jo
mov
insl
dec
sbb
add
and
sub
xchg
add
mov
xlat
push
jbe
jne
mov
inc
add
inc
xor
iret
test
mov
fiaddl
jg
pop
cmpb
int
fnstenv
pop
shll
jbe
add
xor
add
fisubrl
cmpsb
mov
fimull
in
push
xchg
aas
pop
xor
daa
andb
nop
sub
les
inc
pop
dec
push
mov
rorl
cmp
push
pop
scas
inc
fisttps
jno
inc
enter
mov
lahf
inc
jg
inc
ret
out
dec
jle
pop
xor
aas
or
int3
add
enter
cmpsl
aaa
jno
lcall
rol
jbe
int3
jbe
rorl
ret
xor
movsb
fisttps
mov
mov
movnti
imul
inc
mov
mov
jo
stc
nop
imul
aas
pushf
mov
fwait
sbb
insb
pop
cmp
lds
jecxz
insb
pop
scas
outsb
cs
lahf
mov
adc
outsl
sahf
push
rorl
and
add
test
mov
aas
je
shrb
loopne
jbe
fsubl
icebp
cltd
div
cmpsb
daa
jbe
xorb
cmp
scas
inc
jno
or
iret
pop
outsl
jne
pushf
in
xchg
notb
imul
push
outsl
and
flds
add
push
xor
jae
pop
les
xor
add
fs
movsl
xlat
sub
push
outsl
sbbb
aas
fwait
mov
xchg
adc
loopne
stos
lcall
adcl
fdivrl
fldt
adc
or
or
pop
sub
and
lea
push
push
lea
lea
xor
daa
addl
adc
xor
daa
lea
xlat
daa
xor
sub
xchg
push
rcrb
sbb
xchg
sbb
pop
push
inc
arpl
orl
lea
inc
xor
shll
sbb
arpl
lea
jae
adc
lea
lahf
lea
inc
arpl
addr16
pop
int3
xor
add
lea
scas
lea
and
pop
mov
shll
push
mov
les
sbb
xor
add
ja
add
pop
aam
or
arpl
ret
daa
data16
inc
mov
and
xchg
iret
repz
jle
pushf
cwtl
xchg
nop
mov
repz
jl
push
notl
inc
inc
cmp
out
sahf
cmp
sub
and
sahf
out
and
adc
outsl
fs
xchg
hlt
xchg
in
push
in
fsub
jns
out
enter
sbb
jns
test
mov
mov
insb
push
fs
sahf
cmpsl
mov
inc
push
and
out
out
add
in
xchg
push
enter
jns
mov
nop
repz
js
jo
ja
cmp
pop
inc
cmp
push
iret
sarl
add
xchg
loopne
mov
mov
xchg
insb
pop
push
inc
and
outsl
xchg
rclb
sbb
dec
xchg
push
cwtl
inc
xor
ret
fdivs
dec
dec
mov
and
pop
addb
repnz
add
inc
jnp
pop
js
mov
pop
clc
mov
ds
pop
jg
cld
pop
enter
push
adc
es
mov
outsb
stos
lcall
jb
movl
test
aas
or
mov
test
xchg
mov
mov
sbb
adc
mov
sbb
push
fnstenv
sti
inc
dec
jl
mov
xor
lcall
cmp
ss
ss
outsl
xor
nop
ss
sub
ss
push
insl
dec
sub
xorl
aaa
or
cmp
cmp
aas
cmp
fstpt
push
cmp
xchg
test
push
stos
fwait
es
dec
cld
pop
xchg
lret
cmp
cmp
cmp
cmp
jg
mov
inc
jnp
cmpl
adc
xor
cmp
outsl
test
ds
ds
ds
ds
jg
mov
add
ds
ds
ds
ds
aas
pop
aas
and
adc
aas
sub
xor
aaa
into
push
fs
fbld
jbe
jnp
cmpl
movsb
aas
mov
sarl
testb
add
jl
xchg
cmpsb
add
xor
sbb
inc
sub
xor
mov
sbb
push
inc
xor
jl
mov
xor
xor
inc
add
sarl
les
enter
push
inc
rolb
int
mov
sub
xor
pushl
mov
pushf
xor
xor
xor
xor
xor
xor
xor
xor
dec
enter
mov
ss
mov
ss
add
ja
pushl
sbb
add
push
add
sub
das
cmp
add
pop
cmp
ljmp
icebp
pop
add
cmp
xor
xor
cmp
mov
cmp
cmp
pop
cmp
mov
addb
cmp
mov
xor
inc
js
outsb
jo
cli
outsb
cmp
idivb
mov
cmp
cmp
cmp
cld
push
shrl
push
outsb
ja
jle
test
mov
or
mov
iret
cmp
cld
cmp
mov
inc
ds
ds
ds
incl
inc
push
cwtl
xchg
xor
pushl
push
xor
xor
xor
xor
push
xor
mov
fwait
pusha
xor
xor
xor
xor
xor
jg
inc
lds
xor
xor
outsb
xor
loopne
repnz
push
pushl
dec
ss
bound
xorl
ss
ss
pop
add
push
or
ss
clc
ss
ss
mov
or
push
push
xor
aaa
xorb
stos
mov
shrb
dec
cmp
jecxz
sbb
sbb
pop
es
or
cmp
dec
ljmp
push
in
jmp
repz
cmp
sbb
add
and
es
xor
jle
cmp
cmp
pop
push
cmp
or
cmp
jle
xchg
mov
xchg
dec
lahf
cmp
fnsave
fcmovb
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
push
sbb
fnsave
push
fs
cltd
push
jecxz
xor
insl
pop
rcrl
sarl
adc
xor
and
aas
mov
dec
icebp
mov
fdivrl
xor
into
xor
push
jg
push
pushl
xchg
xor
xor
xor
xor
xor
xor
jo
in
pop
xor
xor
push
or
cmp
insb
dec
lds
and
xor
xor
adc
push
ss
ss
arpl
stos
add
pop
enter
out
ss
xor
aaa
jne
mov
decb
sbb
sub
xor
cmp
cmp
sbb
cmp
cmp
cmp
aaa
or
cmp
cmp
or
sub
cmp
arpl
outsb
lret
sbb
ret
cmp
cmp
mov
in
inc
out
ds
or
push
jo
mov
pop
lret
mov
and
push
fbstp
divb
data16
jg
xchg
cs
xor
xor
xor
xor
fnsave
mov
mov
xor
xor
xor
xor
xor
xor
xor
xlat
xor
ja
mov
inc
xor
mov
sbb
sub
mov
xor
aaa
jb
call
int
inc
cmp
push
cmp
mov
ljmp
std
cmp
inc
ds
imul
sbb
out
ds
aas
lods
sbb
andl
sbb
mov
mov
sbb
push
cld
xor
out
sub
lret
jo
cmp
dec
cmp
xchg
mov
stos
cmp
sbb
ljmp
and
xor
xor
js
cmpsb
ss
cli
ljmp
daa
jp
aaa
ss
aaa
dec
aaa
adc
jecxz
aaa
divb
scas
pop
popa
icebp
pop
pusha
out
xor
xor
and
push
je
js
orb
call
test
pop
jp
cmp
ret
push
dec
sbb
adc
mov
mov
mov
call
cmp
xor
rolb
bound
lds
insb
xchg
rorl
jecxz
je
jl
or
sub
ret
sub
xor
loopne
call
xor
popa
cld
mov
or
adc
adc
sbb
sbb
and
dec
sbb
sub
sub
inc
xor
push
xchg
pop
xor
pusha
xor
xor
decl
sbb
xor
xor
pop
xor
xchg
xor
add
cmp
repnz
mov
sar
cmp
fadds
js
dec
sbb
mov
xor
jp
cmp
std
push
cmp
push
xor
outsb
jo
mov
mov
mov
cmp
dec
shl
loopne
mov
mov
fmull
sbbl
cwtl
out
shl
das
mov
xor
xor
xor
xor
push
insb
xor
xor
or
cwtl
xor
xor
add
lahf
mov
xor
pop
xor
xorb
cmpsb
sbb
or
adc
jb
xor
shrl
fcompl
pop
cld
jg
in
call
xor
xor
inc
add
aas
pop
add
push
sbb
xor
incl
cmp
inc
xor
xor
xor
xor
xor
aas
cmp
mov
xor
xor
xor
xor
das
cli
loopne
mov
xchg
scas
pushf
xor
bound
xor
push
pop
pop
cld
xor
xor
xor
into
shlb
int3
addb
inc
mov
xor
or
test
lods
sub
inc
aaa
mov
jecxz
aaa
mov
xor
sbbb
cmp
cmp
fdivr
dec
adc
cmpl
pusha
cwtl
iret
pop
add
add
add
mov
add
or
pop
pop
push
or
or
or
or
or
xchg
mov
adc
adc
push
adc
in
jbe
filds
or
pop
sbb
adc
adc
adc
add
data16
jl
imul
adc
pop
adc
inc
add
pusha
add
mov
add
sahf
add
add
ljmp
inc
mov
jb
xchg
je
shrb
ds
decl
add
push
adc
pop
and
xor
inc
mov
adc
xchg
std
lock
bound
js
sbb
xchg
and
and
mov
inc
sub
xchg
and
fwait
add
test
ret
inc
or
adc
jns
rcrb
xorl
push
scas
pushf
push
or
add
add
jo
add
pop
scas
cmp
outsb
decb
lods
adc
push
adc
pop
popa
jno
and
adc
and
or
push
lock
xor
and
loope
icebp
mov
mov
add
xorb
scas
fiaddl
or
js
stos
or
dec
jo
or
outsl
clc
mov
sbb
cli
and
mov
inc
jnp
test
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
mov
pop
and
push
stc
or
xchg
jg
or
ljmp
insb
sub
addr16
out
or
push
push
xchg
add
repnz
inc
lock
ljmp
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
cmp
mov
push
pop
mov
pop
pop
mov
popl
movb
xchg
lcall
scas
adc
mov
xor
lods
scas
xchg
test
aam
and
dec
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
mov
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
incl
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
pop
dec
std
rolb
out
or
cld
push
in
ljmp
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
cmp
mov
jmp
sbb
add
mov
dec
out
pop
jb
mov
or
push
mov
xor
dec
sub
pop
mov
jl
rorl
adc
in
call
stos
hlt
push
add
stc
loope
mov
sar
andl
mov
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
ud0
mov
mov
dec
adc
push
lock
lods
jp
mov
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
cmp
mov
loopne
cli
adc
aaa
xchg
in
add
inc
adc
out
dec
jbe
dec
fisttpll
out
aas
std
cli
push
push
pushl
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
decl
pop
imul
mov
mov
inc
es
gs
jns
enter
or
push
pusha
lcall
jae
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
mov
js,pn
jmp
xor
pop
clc
pop
hlt
lret
movsb
add
mov
pop
jg
gs
std
xorb
jg
aad
cmp
outsl
adc
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
mov
or
sarb
std
pop
les
cli
mov
mov
incl
add
pop
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
in
call
imul
pusha
adc
and
sbb
xchg
jo
and
out
test
jae
push
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
clc
push
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
jg,pn
pushl
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
ljmp
sbb
jg
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
in
ljmp
test
mov
mov
cmp
xchg
mov
cwtl
pop
call
xchg
and
add
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
loopne
idiv
adc
and
lahf
fmull
jmp
xor
enter
jecxz
scas
sub
in
pop
mov
sub
testb
incb
fisubrl
aas
mov
or
jle
in
push
inc
or
pop
jg
add
sti
mov
jg
mov
aad
test
mov
mov
in
in
aas
iret
push
jbe
push
sbb
stos
icebp
pop
incb
mov
sub
push
inc
jecxz
sbb
sarl
mov
lods
loopne
and
clc
xorl
mov
imul
push
jle
dec
push
in
aas
mov
fsubrl
mov
js
lock
and
add
push
clc
xchg
pushf
mov
xchg
push
or
and
mov
adc
inc
aas
push
xchg
jg
rcrl
rolb
pop
inc
jb
fistpl
adc
call
jg
jge
pop
pop
nop
mov
inc
sti
arpl
daa
std
or
dec
ds
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
fsub
pushl
fsubr
fistps
lds
fidivrl
jg
stos
clc
mov
cmp
out
fidivrl
xor
lahf
les
pop
stc
sbb
sbb
cld
addl
sbb
loop
in
stc
mov
lahf
outsl
int3
push
sbb
pop
lods
pop
test
bound
pop
outsl
xchg
incl
loop
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
loopne
fcomip
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
adc
stos
inc
mov
loopne
shrb
rcl
jg
adc
xor
pop
rcrb
dec
mov
gs
pushf
lea
jp
jnp
jecxz
adc
incl
inc
lds
push
pop
adc
imul
or
inc
pop
xor
rorb
mov
lcall
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
loope
mov
into
test
xchg
movsb
insb
or
and
xchg
fidivrs
push
jnp
add
insb
test
aas
repz
mov
outsl
lock
in
jmp
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
out
jne
or
cmc
mov
push
mov
fsubrp
xchg
clc
decl
enter
fcmovb
inc
adc
inc
loopne
test
out
rolb
mov
hlt
mov
or
or
dec
ss
mov
movsb
or
repnz
mov
loopne
xchg
imul
cmpsl
lret
pop
in
cmp
jmp
adc
clc
adc
jmp
hlt
dec
mov
jmp
sbb
xlat
inc
aas
mov
jg
mov
incl
addr16
sbb
cld
daa
jp
std
adc
ljmp
mov
ret
nop
cmp
das
incb
add
les
div
cld
idivl
fisubrl
scas
stc
lahf
loope
jae
jmp
shrl
je
jge
paddsw
fbstp
out
xchg
add
out
icebp
mov
fndisi(8087
fisttps
sti
mov
fists
enter
push
and
das
jge
fisubrs
out
cmp
call
mov
das
js
iret
decb
adc
mov
and
xchg
adc
call
enter
popf
dec
or
add
cmp
int
add
push
enter
pop
aaa
std
fisttps
testb
cld
jg
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
aaa
pushf
jecxz
and
adc
mov
mov
cld
push
sub
mov
pop
clc
loope
loope
mov
lahf
pusha
push
dec
add
xlat
shrl
fimull
xchg
fldenv
iret
fdivrl
dec
fists
cmp
repz
loopne
pop
gs
sub
sti
push
sarl
pop
out
jg
jno
ret
dec
push
dec
inc
cmp
incl
pop
inc
sbb
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
sbb
mov
ds
inc
mov
in
sbb
xchg
imul
mov
outsl
jmp
std
mov
addb
faddl
mov
sbb
outsl
pushl
inc
pop
add
pop
stc
push
dec
out
fstpt
mov
add
popf
pop
push
add
fsts
dec
or
pop
inc
leave
add
sti
push
sti
pop
inc
and
xchg
lcall
mov
mov
iret
and
lcall
add
in
arpl
pushf
jecxz
stos
int
add
incl
sbb
and
call
pop
and
lcall
sub
popl
sub
cmp
hlt
mov
mov
pushl
xchg
lds
or
stos
mov
out
cmpsl
js
test
fsubl
incl
and
jo
mov
das
sub
rcrb
jo
clc
inc
sbb
fldenv
fildl
clc
mov
movsl
mov
ja
ja
push
jae
in
out
out
jo
je
idiv
jmp
add
mov
aad
pop
fildll
push
cld
add
lcall
xchg
aad
xchg
cmp
or
lods
xor
nop
push
jno
fisubl
ljmp
lcall
jmp
sahf
jae
xchg
sti
and
xchg
or
nop
fistpl
pushl
adc
fisubl
fcmove
add
mov
jno
sub
gs
ljmp
mov
cmpsb
jbe
bound
mov
pop
mov
dec
js
push
ret
loopne
in
ljmp
xorb
in
test
stos
addl
jge
out
sub
jne
call
jp
fwait
bnd
insb
mov
or
sub
xchg
nop
fistpll
shll
ljmp
loope
push
cmc
sub
arpl
lcall
sarb
in
in
pushl
ds
adc
insb
lret
mov
xor
js
ret
mov
jmp
mov
dec
repnz
push
mov
adc
rcrb
jmp
dec
mov
xchg
incl
push
mov
fucom
popf
mov
jo
or
data16
xchg
fstpt
pop
fdivrs
les
call
cld
in
adc
mov
fs
adc
rorl
ja
loop
arpl
fstl
int3
push
jg
or
repnz
xchg
xchg
or
imul
cld
pushl
mov
or
push
sbb
idivb
dec
fildll
notb
mov
sbb
mov
jg
incl
out
mulb
jbe
fsubrp
sahf
cmp
xor
nop
mov
incl
push
xchg
dec
jg
scas
mov
cwtl
pop
outsl
jl
test
adc
out
sbbl
pushl
mov
push
ds
repnz
fistpll
rcrb
out
clc
sti
sarb
jns
subb
lret
adc
insl
movsl
xlat
shlb
cmp
xor
es
xor
xchg
decl
and
nop
int3
adc
stc
xor
xor
fcmovne
pop
inc
inc
rcr
movsb
or
scas
incl
sahf
dec
add
movsb
ret
in
pop
and
xchg
pop
fidivs
sbb
push
push
addr16
jmp
incl
pop
or
jae
in
lret
adc
sbb
movsb
adc
call
mov
xorb
in
lret
pop
jp
inc
inc
xchg
sub
call
jb
decl
dec
mov
inc
inc
cmp
mov
xchg
add
push
fs
ljmp
repz
movsl
adc
cmpsb
das
mov
lods
jl
test
loope
lock
jg
xor
mov
fimull
clc
cmpsb
in
xchg
hlt
sbb
mov
decl
push
mov
aaa
popa
mov
lods
rorb
mov
inc
jns
and
incl
cld
cwtl
cmc
jmp
imul
cmpsb
icebp
lcall
xor
lock
adc
push
push
outsl
xor
dec
push
mov
stc
add
sub
mov
sub
push
sar
jnp
xchg
ret
lods
lods
je
hlt
into
and
jecxz
mov
and
jg
movsl
bound
adc
fwait
int
das
sbb
lret
lret
pop
pop
aam
dec
cmp
rcrb
shr
lcall
pop
adc
sub
sub
rorb
xchg
jno
scas
popa
fdivrs
mov
outsb
mov
scas
out
dec
pop
mov
mov
push
hlt
sbb
mov
jle
cmp
cmpsb
stos
int
mov
mov
in
loope
mov
jae
jl
test
repz
lret
lea
sbb
out
jo
mov
insb
test
dec
out
hlt
or
lods
enter
jmp
and
and
movsb
fstp
jns
ljmp
call
jmp
mov
or
pop
fs
pop
xchg
test
dec
sub
pop
dec
incl
leave
sahf
iret
inc
push
es
xor
push
mov
sbb
pushf
mov
mov
inc
stos
cmp
mov
mov
mov
iret
ja
dec
jne
fs
mov
sti
test
scas
push
xor
push
call
cld
or
or
or
mov
push
mov
jg
sbb
divb
hlt
jnp
or
cmpsb
xchg
in
jl
stc
or
stos
sbb
pop
sarb
mov
push
shrl
ffreep
leave
idivb
lcall
or
mov
ljmp
pushf
addb
mov
cld
pop
push
sub
ret
sahf
jmp
enter
or
seta
test
dec
add
dec
pop
data16
stos
stc
jo
xlat
dec
jmp
push
dec
sar
lcall
stc
sahf
mov
insb
cmp
xchg
adc
jl
mov
repz
aas
into
shll
jne
xor
pop
stos
outsl
jmp
loopne
push
gs
in
mov
sbb
mov
sub
ds
icebp
jb
lcall
sub
repz
int3
and
push
pop
cld
lea
pop
popa
lret
orl
jle
pop
hlt
call
jecxz
stos
lods
pop
psrld
push
fisttps
jns
add
loopne
jmp
or
or
jae
mov
test
add
push
sbb
out
pshufw
call
lods
or
sbb
xor
insb
clc
xchg
jp
cmp
mov
push
into
iret
les
ljmp
add
stos
and
ret
dec
pop
sub
ss
andb
dec
xor
in
xchg
jmp
addr16
gs
sub
lds
nop
in
push
mov
or
jg
imul
out
sub
mov
add
gs
inc
jmp
push
rcl
jbe
push
cmp
mov
mov
mov
pop
jbe
aas
xor
push
mov
pop
out
movsl
sub
test
sub
decl
push
pop
in
mov
iret
jbe
loope
pop
fs
mov
jg
cli
xchg
pop
in
xor
push
push
adc
adc
fcmove
or
jmp
inc
adc
cmp
mov
jp
incb
inc
outsl
xchg
fsubrp
js
pop
mov
and
mov
sub
std
inc
ficomps
jmp
lret
scas
and
push
lret
in
sbb
mov
ljmp
aaa
or
jge
inc
ss
cmp
xchg
shrb
mov
sub
mov
pushl
pop
add
mov
mov
mov
push
std
pop
shlb
fbld
mov
pop
lds
add
sub
popf
xor
outsb
cmp
dec
pushf
daa
dec
mov
mov
lds
mov
js
xchg
std
popa
inc
test
call
push
add
or
xchg
test
mov
insl
scas
pop
dec
clc
lcall
xlat
pop
cmpsb
shr
mov
stos
inc
nop
and
clc
test
cltd
in
xchg
xlat
sbb
inc
jmp
fistpll
inc
dec
and
jle
rcrl
pushl
test
je
push
je
pop
ds
sbb
daa
cmp
popf
out
jecxz
ljmp
out
jmp
jl
adc
jb
adc
cmc
cmp
mov
stc
cmp
outsl
and
les
pop
inc
jb
and
push
iret
push
inc
and
ss
pushl
mov
mull
inc
cmpsb
xchg
cmp
jno
xchg
lock
lds
aas
test
push
insl
dec
or
stos
inc
mov
adc
sub
shlb
pop
xor
push
scas
loopne
fidivrs
xchg
ljmp
push
inc
push
jge
or
hlt
and
push
out
mov
and
push
pop
inc
shlb
imul
jle
pop
adc
or
fiaddl
fucomp
or
cmpsl
pop
mov
and
adc
mov
pop
scas
stc
adc
jno
lock
incl
cmp
outsb
lahf
mov
dec
push
xchg
lods
jge
scas
sub
fdivs
jmp
cs
dec
push
jmp
adc
shll
mov
out
and
clc
popa
in
add
add
shrb
imul
rcrl
fs
fiaddl
cmp
jbe
mov
or
sub
and
negb
pushl
jg
xor
mov
movsl
int3
out
aad
push
xchg
add
dec
xchg
jmp
or
subb
testb
stc
stc
jnp
xchg
hlt
addr16
mov
inc
mov
add
mov
bound
add
mov
test
daa
mov
inc
sub
ljmp
das
xchg
inc
jle
mov
push
pop
push
fwait
mov
add
xor
adc
lods
call
fisttpll
pop
emms
int
mov
sbb
into
in
sub
sbbl
lsl
fildll
or
out
adc
ljmp
call
fstps
fucom
pop
fildll
fiaddl
gs
lds
sub
nop
cmc
rclb
fcompl
clc
decl
jle
jne
icebp
jle
cli
cmp
sub
fcomip
das
and
daa
pop
push
xor
iret
rclb
das
repz
cmpb
call
cmp
arpl
int
scas
jo
xchg
ja
mov
mov
outsl
lret
sbb
incl
cld
ja
test
jmp
and
cwtl
fsubrl
out
pop
repnz
jmp
hlt
jp
ja
daa
aad
xor
dec
pusha
sbb
push
lea
out
mov
cld
cmp
and
cmc
adc
push
cmp
imul
sahf
pushl
cli
stc
gs
cmp
adc
ljmp
sub
addr16
loopne
jg
lcall
sbb
repnz
mov
scas
mov
ljmp
test
pop
cld
call
cli
cmpb
jl
mov
outsl
jae
xchg
add
jg
mov
decl
js
inc
sub
cmp
stos
into
inc
or
icebp
lods
pop
bound
stc
xor
xchg
shrb
and
inc
out
mov
scas
sbbb
lcall
mov
incb
adc
data16
lods
add
cwtl
mov
xorl
dec
cmp
in
fs
add
fcomp
cmovge
push
sbb
xor
add
lcall
dec
ljmp
lret
dec
cmp
sti
fs
adc
xorl
pop
out
cli
pushl
and
jae
scas
mov
dec
hlt
mov
and
mov
mov
les
adc
push
jbe
fs
sbb
loopne
push
enter
std
negl
test
sub
pop
ljmp
gs
in
rcl
inc
sub
sbb
adc
or
jmp
rcrl
mov
enter
ss
sub
push
aaa
mov
or
add
mov
or
cwtl
clc
movsl
lds
or
sub
lcall
lahf
cmp
ficomps
mov
sahf
scas
clc
and
mov
aad
push
add
cmp
lcall
addr16
push
adc
and
inc
sub
jp
pusha
sbb
push
sub
lea
xchg
xchg
dec
mov
mov
lock
jo
mov
call
ljmp
outsl
add
or
push
mov
xchg
ja
jg
xor
jmp
cmp
or
scas
jg
cs
jb
or
pop
cli
pop
or
aaa
xchg
pop
mov
dec
pop
inc
rclb
jecxz
std
jo
and
cmp
fcomps
fimull
mov
gs
pushl
inc
push
imul
ljmp
push
jb,pt
test
cld
jmp
pop
in
sub
mov
xchg
hlt
lret
sub
test
sub
hlt
fs
in
aam
mov
shr
cltd
shrd
xchg
push
ljmp
cltd
js
incl
pop
int3
int3
ret
and
jmp
mov
shll
push
sub
xchg
ja
and
xchg
mov
jg
mov
out
out
imul
and
aad
mov
xchg
pop
std
adc
pop
lea
mov
mov
inc
mov
and
jmp
cs
sub
dec
repz
ret
or
sub
mov
pop
push
pop
cmp
xchg
push
sbb
loop
fcomi
testl
in
pop
jle
enter
inc
loope
lcall
sahf
and
ljmp
jb
lds
icebp
inc
push
jns
sub
xor
jae
repnz
or
pop
sbb
sbb
mov
pop
fimull
cmp
cmp
subl
sbb
mov
mov
lods
mov
xchg
es
mov
mov
sub
lcall
jg
inc
jne
mov
arpl
mov
adc
aaa
adc
mov
ljmp
jae
into
dec
in
popf
adc
pop
fnstcw
mov
inc
xchg
ljmp
lcall
pop
insl
pusha
or
pushl
xlat
imul
rol
mul
mov
pop
gs
adc
push
lcall
mov
inc
popf
or
xchg
mov
dec
and
incl
or
repnz
xor
pop
push
push
add
bound
pop
stos
ficompl
or
add
lcall
xor
push
int3
jo
mov
subl
mulb
mov
mov
adc
mov
aad
dec
mov
push
and
dec
imul
std
mov
jmp
pop
ficoml
dec
dec
test
adc
scas
leave
out
stc
or
cld
lcall
adc
movsb
xor
and
loopne
mov
lock
call
lock
mov
or
mov
aaa
imul
jmp
ljmp
inc
xor
pushf
xchg
cmp
mov
lret
adc
ljmp
lcall
mov
cwtl
jb
dec
xchg
sbb
int3
lea
test
pushl
dec
cmp
push
mov
loope
fnstcw
dec
outsb
xchg
sbb
inc
mov
fldt
stos
mov
scas
inc
cld
cmpsl
sar
adcb
icebp
decl
test
inc
inc
mov
xor
data16
and
mov
sub
cmp
scas
clc
pop
mov
xchg
ljmp
sbb
mov
lds
decl
and
je
testl
xor
orb
call
pop
imul
sbb
decb
out
pop
and
arpl
lcall
add
aaa
xchg
fs
filds
mov
stc
addr16
xor
cld
lcall
and
cmp
xor
mov
push
std
js
ds
xchg
dec
mov
insb
cs
sahf
mov
lods
mov
xchg
mov
pop
out
movl
ret
inc
mov
addr16
xchg
rorl
fistps
imul
adc
daa
test
xor
cmp
incl
pusha
fidivrs
fcomip
call
call
jge
mov
lea
inc
mov
adc
push
lcall
pop
pop
int
loop
lret
xor
insb
xchg
jne
push
pop
arpl
loopne
mov
sbb
sarb
mov
cwtl
test
xchg
mov
lock
push
into
push
mov
add
cltd
call
push
inc
sti
test
cmpsb
aad
push
or
negl
inc
decl
js
dec
loope
rcll
stc
xchg
loop
and
pusha
jae
xor
iret
adc
or
stc
sub
push
pop
aam
fadd
push
and
out
sub
xorb
cmp
cmp
fcompl
cmc
or
ja
push
xor
push
enter
loop
mov
mov
push
cld
jl
fs
mov
repz
mov
movsb
out
daa
movsb
fcomip
stos
pusha
lea
int
push
ljmp
pop
adc
decl
lret
pop
aas
push
or
lods
sti
sub
mov
cs
into
aad
mov
push
mov
mov
push
cmc
add
insl
add
ds
mov
outsl
jecxz
push
std
incl
es
repz
dec
dec
sti
dec
xchg
lds
data16
inc
pop
movsl
xchg
mov
cs
sbb
sbb
mov
cmp
pop
xchg
orl
enter
pop
jno
dec
divl
xlat
pushl
scas
idivl
out
hlt
sbb
inc
hlt
fnstenv
mov
out
subb
cmpsb
or
inc
iret
jle
jg
out
and
sub
out
add
bound
mov
rolb
aad
out
sbb
mov
call
inc
clc
add
push
jl
lods
mov
inc
inc
jl
ljmp
std
decl
stc
push
push
inc
bound
push
cmp
outsb
xchg
sbb
lcall
mov
cmp
outsb
ret
shl
cmp
dec
xchg
add
push
cmp
test
call
orl
cmpsl
jmp
hlt
dec
or
jg
xor
sbb
add
call
cld
or
aad
loope
pop
ret
push
je
mov
cmpsl
pop
jb
push
xor
jg
jmp
out
mov
shrb
mov
mov
pop
gs
test
or
push
insb
jo
arpl
adc
jmp
mov
decl
or
scas
inc
lods
fwait
test
jl
scas
xlat
mov
xorb
outsl
pushl
inc
inc
jge
inc
aad
pop
arpl
cmpsb
iret
out
pop
aas
lahf
pop
shll
jno
lcall
aad
lret
jl
or
jge
ds
imul
stos
lcall
sbb
pop
ja
sahf
push
in
mov
mov
pop
jbe
cmp
inc
loop
xlat
pushl
xchg
add
adc
outsb
lcall
adc
pop
sub
xchg
xchg
roll
lcall
ljmp
mov
mov
inc
inc
fists
add
mov
jl
lret
jne
insl
xlat
fsubrs
or
mov
push
imul
ljmp
mov
aas
xchg
xchg
xor
push
jnp
aam
bound
push
xlat
stos
and
cld
jmp
test
mov
movsb
or
cli
jne
pop
sahf
or
dec
movsb
cmp
pushl
mov
repnz
mov
testb
dec
out
loope
inc
sub
out
clc
add
out
popa
mov
and
pop
mov
js
mov
test
movsl
and
push
movsl
ja
jmp
daa
xchg
popf
cmp
push
or
jne
aad
scas
ret
js
jmp
push
mov
jmp
pop
lcall
adc
xchg
cld
loopne
popa
dec
leave
imul
lcall
fbstp
icebp
jno
pop
pop
les
and
mov
popa
mov
pushl
cld
mov
hlt
pop
into
popf
rorl
mov
stc
iret
sbb
pushl
xlat
pop
fidivrs
sahf
cmp
mov
mov
mov
pop
aas
aam
cmc
and
ljmp
push
mov
imul
xchg
dec
add
das
mov
push
lods
aad
xchg
sub
xor
and
xor
push
xor
in
jg
jbe
dec
stos
add
ret
in
orb
out
push
xlat
mov
call
cld
adc
add
fs
inc
or
mov
pop
mov
es
jg
mov
mov
lock
lcall
or
pop
add
mov
add
cwtl
mov
fisttps
push
and
mov
add
mov
sbb
push
cmp
mov
into
incl
ret
test
pop
icebp
flds
push
and
inc
adcb
jmp
mov
inc
test
test
fwait
or
mov
negb
jb
pop
mov
or
dec
into
decl
xor
movsb
cmpsl
sti
pushf
mov
cmpsl
adc
mov
inc
mov
inc
incl
push
mov
out
repnz
std
scas
fwait
xchg
sbb
cmp
mov
aam
insb
mov
jmp
add
jl
shll
xchg
mov
outsb
ljmp
sti
lcall
cld
xor
imulb
shll
movsb
adc
pushl
in
inc
xchg
decl
es
mov
or
pop
in
mov
adc
sub
dec
jg
lret
dec
arpl
movsl
pop
jb
add
test
div
mov
loopne
enter
sbb
scas
insl
adc
movsb
mov
lcall
cmp
mov
pop
mov
outsb
xor
dec
lret
fstl
inc
pop
adc
xchg
pop
dec
push
in
and
dec
faddp
jo
aam
test
push
leave
shlb
xchg
cmp
mov
in
lret
aaa
sti
lods
or
aam
push
stc
or
sti
test
adc
dec
add
mov
and
xlat
addb
shrb
pushf
bound
pop
enter
push
ret
mov
mov
scas
ss
pop
jae
push
pushl
lcall
bound
out
fcmovne
adc
dec
mov
inc
lahf
fwait
xchg
cmp
sub
jg
decl
cmpsb
inc
call
xchg
stos
xchg
repnz
jg
jmp
subl
and
pop
push
mov
xchg
lds
sub
aaa
sbb
fs
push
enter
xchg
pop
pop
out
clc
enter
adc
pusha
or
inc
mov
xchg
sub
sbb
decl
push
and
mov
icebp
mov
inc
adc
xlat
mov
mov
decl
fs
hlt
mov
es
in
sbb
sub
and
inc
jge
incl
and
mov
jmp
pop
mov
addr16
insb
mov
pop
push
cmpsl
and
inc
decl
imull
inc
dec
push
rcl
pop
out
mov
push
sub
mov
or
ljmp
mov
dec
sti
mov
sub
outsl
mov
pop
push
test
mov
mov
push
in
icebp
jne
cmp
loope
xchg
jl
fstps
push
mov
ret
jmp
dec
outsl
movsb
sbb
out
cli
call
add
aas
sub
sbb
lock
or
jmp
fisttpl
lea
mov
xchg
rcrb
pushf
lcall
adc
decl
cli
repnz
or
call
psraw
cmpsb
repz
ljmp
aaa
jg
mov
rcrl
cmp
lcall
stos
or
cmp
fcomip
call
mov
jno
push
enter
hlt
push
cmp
jb
lcall
inc
subb
ficompl
mov
jle
cli
test
pop
dec
cmp
lret
icebp
mov
adc
dec
stos
lret
mov
cld
jns
ret
xlat
jg
das
nop
aad
loopne
outsl
or
sti
loop
stos
cmp
inc
inc
lcall
xor
mov
xor
adc
scas
ret
mov
in
ja
dec
fbld
lcall
scas
clc
push
cmp
adc
sub
or
bound
jg
sbb
pop
jmp
sar
mov
xlat
ljmp
dec
jb
sub
cmc
xchg
nop
mov
jl
inc
cli
mov
test
sub
inc
decb
or
int
push
xchg
divb
xchg
jge
sbb
xor
movsb
mov
and
mov
pushf
loope
jmp
inc
jno
movsb
or
jg
add
sub
stos
cltd
cmp
push
lcall
cltd
fdivl
test
pop
inc
aad
or
sub
fstpt
mov
or
fcmovb
ja,pt
cld
xchg
and
fnstenv
mov
add
jmp
mov
sub
push
or
out
arpl
adc
stos
dec
roll
push
call
jmp
pop
xchg
mov
xchg
inc
out
shlb
outsl
jne
test
fadd
pop
decl
clc
les
and
add
dec
rolb
adcb
push
mov
ret
xor
aaa
pop
into
ss
dec
jae
es
jmp
and
test
sub
sbb
lds
stos
cmpl
jne
aam
outsl
fsubrs
fadd
jge
cwtl
cli
incl
jecxz
xor
aas
sti
iret
fbld
mov
cmp
iret
push
and
ljmp
or
gs
adc
pop
inc
dec
mov
dec
adc
jecxz
sti
ljmp
inc
je
rol
scas
cmpsb
xor
xlat
xchg
imul
fistps
ds
fidivrs
loopne
pop
mov
push
xchg
stc
xor
xchg
cmp
jl
sbb
decl
test
std
jb
scas
inc
mov
dec
dec
xchg
fmull
xor
pushf
mov
xlat
cld
mov
call
sbb
or
pushf
dec
lods
stc
insl
or
xchg
xchg
popf
jae
inc
int
inc
push
dec
test
in
call
fcomps
xchg
adc
sbb
xor
inc
es
fists
push
mov
cltd
jg
incb
stos
jae
lock
or
dec
out
xchg
icebp
mov
sar
pushl
cmp
jns
pop
adc
test
xchg
mov
sub
add
inc
jae
lcall
es
enter
cmp
imul
fwait
decl
sbb
or
adc
clc
ss
scas
dec
aas
xor
mov
push
lcall
mov
out
movsl
xchg
push
outsl
jecxz
pop
push
or
ljmp
mov
lret
ljmp
incl
cmp
test
inc
and
rcrb
into
je
jp
nop
stc
cmp
adc
sbb
inc
mov
and
cmpsb
mov
cmp
pushl
mov
sti
inc
sub
cmp
adc
cmpb
cmp
decl
pop
sub
jge
xchg
hlt
pop
stos
or
push
xor
daa
cld
std
mov
aam
sti
pop
cmp
sub
lret
cmp
repz
lret
cli
cs
test
mov
cs
ja
mov
flds
shll
notb
fildll
push
cmpsb
out
sub
insb
and
xor
jmp
push
and
fnstcw
es
or
adc
lock
push
lret
push
ds
xchg
incl
push
push
test
and
vrcpss
sbb
mov
mov
xchg
in
sbb
cld
mov
mov
ljmp
or
call
xchg
mov
lock
rcrb
mull
fcoms
pusha
popa
pop
popf
test
lcall
fmul
mov
sahf
jp
mov
cmp
dec
cmp
and
mov
push
aaa
shl
call
xor
cmp
movsb
stos
xor
int
jg
test
bound
ss
cmp
fnsave
jecxz
out
scas
add
sub
loop
cmpsb
pop
inc
aad
push
cli
incl
stos
insl
pop
fiaddl
push
ficoml
nop
fs
sub
cmp
mov
cld
ljmp
iret
jnp
int3
ja
or
mov
shlb
imul
sbb
inc
insb
incl
call
inc
sbb
dec
leave
popa
jne
repnz
cmp
xchg
push
dec
addl
cmp
jne
into
mov
push
mov
ret
cmp
out
or
scas
movsl
fs
lcall
jmp
dec
xchg
mov
incb
icebp
fmull
lcall
xchg
mov
mov
mov
mov
ret
out
fisubl
icebp
xor
and
sbb
jnp
mov
cltd
pop
std
aad
pop
ja
or
dec
daa
xchg
out
test
or
incl
imul
cwtl
or
in
jnp
out
dec
xor
ds
das
dec
in
xor
cmpsb
stos
nop
dec
jbe
mov
out
lcall
lcall
add
xchg
mov
push
lret
jno
je
xchg
xchg
cli
nop
aam
ret
cmp
stos
jnp
xor
push
sbb
out
xlat
out
lcall
cmp
test
movsb
shl
insb
iret
jae
xchg
insl
in
ljmp
sub
inc
push
mov
adc
inc
xchg
mov
loope
fcomp
pop
int3
mov
jne
pop
sti
pusha
pop
mov
jae
add
fsubr
je
adc
mov
fisubrs
loopne
xchg
mov
daa
in
sub
into
cli
loope
loopne
cmc
test
rcr
cld
daa
notb
shrb
mov
aam
das
or
and
or
jecxz
xchg
movsl
enter
push
lcall
lods
inc
aaa
ja
adc
push
push
fildll
sbb
inc
jbe
lret
nop
hlt
jge
xor
jne
das
stos
stos
sub
jmp
jae
mov
jae
adc
lret
cli
outsb
mov
cmp
scas
push
arpl
and
les
cld
dec
in
add
pop
repz
xor
dec
out
mov
movhps
scas
and
call
cld
xchg
lods
and
jl
xor
lea
add
jl
xchg
rcll
jmp
je
in
mov
add
sub
xchg
dec
adc
in
jg
daa
xchg
out
jmp
jp
push
pop
insl
and
adc
fwait
add
and
daa
mov
fstl
sbb
int3
mov
call
cmp
mov
or
dec
lret
clc
sti
dec
leave
inc
fdivrs
cmpsl
sub
push
lea
scas
ljmp
push
in
jo
push
lods
ficompl
inc
push
xor
ficompl
out
daa
inc
xchg
mov
decl
push
adc
stos
lcall
cmp
popa
sub
dec
cmp
rorl
decl
xor
inc
in
out
add
movsl
call
pop
push
pop
lcall
jl
fcomip
ljmp
push
jg
outsb
push
mov
and
mov
test
add
std
aaa
sub
fwait
mov
adc
jg
es
ret
ret
xor
mov
repz
or
pusha
cmp
lcall
sbb
or
add
xchg
xchg
xchg
daa
mov
adc
cmc
shll
and
sub
sub
mov
push
jl
xchg
sbb
lds
xor
stos
repz
orb
push
std
pushl
roll
mov
sarl
adc
int
xchg
jbe
das
inc
daa
jmp
adc
pop
mov
and
xchg
rorl
pop
push
rclb
inc
rcrb
std
mov
repnz
out
and
in
add
scas
jp
adc
fcomip
cmpsb
push
ljmp
fcomip
incl
movl
lods
test
ret
shr
jo
lock
sub
push
push
push
mov
jmp
xor
negl
sti
mov
mov
decl
dec
cmp
mov
jmp
push
mov
xchg
xchg
je
call
sbb
adc
cmp
adc
cmp
adc
ljmp
push
test
push
jnp
ljmp
and
cmp
sbb
popf
cmp
ret
orl
cmp
sbb
lds
xlat
and
ret
enter
or
lock
jp
xchg
sub
xor
jecxz
mov
or
popf
xor
sahf
xor
pop
sbb
mov
pusha
ja
imul
xor
outsl
nop
hlt
dec
pushf
mov
popf
in
jnp
ds
dec
jle
in
jge
and
iret
loope
fiadds
xchg
aaa
bnd
xchg
xchg
mov
jmp
inc
xchg
fidivrs
dec
and
push
push
mov
int
push
jno
ss
out
popa
sarl
jmp
cmp
incl
push
jns
or
aas
adc
inc
inc
sarl
jmp
sbbl
decl
fwait
sahf
push
jmp
xlat
int3
nop
xchg
pop
jecxz
fistl
in
insb
loopne
push
in
ja
push
inc
je
xor
push
imul
out
notb
xor
mov
decl
rclb
test
pusha
sub
stc
adc
and
mov
fwait
add
in
or
lods
ret
mov
clc
or
xlat
sbb
cld
mov
data16
lods
sub
lcall
das
jns
jbe
dec
sbb
dec
dec
fs
xor
jecxz
inc
xchg
mov
fdivrp
gs
pushl
gs
inc
or
xchg
mov
adc
push
or
std
push
call
pop
fwait
nop
push
pop
clc
inc
xor
push
pop
mov
stc
mov
adcb
ds
or
mov
decl
inc
dec
pop
icebp
in
scas
stos
sarb
adc
inc
lea
mov
xchg
lahf
ljmp
xchg
pop
inc
and
outsl
mov
insl
insl
loop
lret
push
mov
cmp
mov
and
pop
pushl
mov
xor
dec
icebp
sub
add
xor
or
incl
jns
loop
popf
pop
jns
fs
dec
inc
lahf
shll
out
rorl
sbb
lods
mov
sarb
ljmp
mov
dec
mov
xchg
test
jle
mov
pusha
jne
cli
fsubr
outsl
loopne
fistpll
dec
arpl
aaa
loopne
lea
pushl
mov
sub
stos
push
sub
or
cli
push
je
fcoms
xor
inc
decl
push
cld
ret
mov
ret
mov
lock
push
jne
int3
xchg
xorb
dec
adc
adcl
add
aam
aam
mov
add
push
mov
inc
mov
je
mov
fwait
aam
lods
les
call
cmc
mulb
lea
ficoms
mov
mov
out
in
shlb
ljmp
mov
popf
add
imul
or
mov
mov
pop
hlt
lcall
cwtl
pop
ret
hlt
pop
inc
lds
push
add
scas
or
mov
loop
xor
mov
jl
dec
pop
adc
add
jo
mov
out
stos
movb
sbb
adc
pushl
das
fldt
fdivp
fimuls
xor
icebp
mov
lods
dec
adc
push
lcall
decl
out
xlat
dec
push
je
test
mov
scas
addr16
and
out
mov
decl
push
sub
shl
fsubrl
xchg
sbb
xorl
ret
pushf
pop
cmp
dec
cmp
fnstsw
cmpsb
loope
repnz
into
and
std
adc
jne
xchg
or
adc
test
xor
incl
jge
hlt
jmp
add
fdivr
mov
pop
mov
out
mov
movntq
call
loope
inc
jnp
adc
loop
push
cmc
incl
test
push
jp
arpl
xor
mov
mov
or
incl
aad
cmc
mov
or
dec
add
dec
pop
popf
scas
cmc
lock
fcomip
mov
hlt
cmp
sti
add
mov
es
mov
test
add
pushl
jl
bound
aas
fldcw
arpl
clc
mov
or
lahf
xor
test
iret
mov
fwait
jno
pop
notl
sub
inc
jb
stc
dec
mov
jp
ret
xchg
movsb
cld
rcr
add
push
outsb
xchg
pop
cmp
jmp
sub
fldt
out
lcall
inc
cmp
jecxz
mov
mov
sarb
sarl
bnd
lret
push
pop
stc
sub
shll
jg
scas
movsw
cmp
cmp
lret
add
cltd
adc
inc
mov
incl
mov
fstpt
cmpsb
fwait
adc
daa
mov
jg
insl
or
lcall
add
pop
idiv
out
out
lret
xor
mov
fwait
stos
sub
std
push
std
ljmp
call
mov
cmp
sub
test
jnp
dec
cli
fdivr
incl
rol
push
cmpsl
sahf
testl
cmp
fwait
dec
dec
fcompl
fcoms
mov
fs
add
fwait
xchg
lcall
add
repnz
lea
adc
call
fisttpll
lahf
pop
hlt
mov
js
fstpl
sbb
mov
jo
faddl
jge
pop
ljmp
cmp
and
mov
inc
mov
and
sbb
push
xchg
decl
scas
sbb
ret
bound
data16
idivb
test
jo
cld
sar
cld
jmp
adc
mov
ja
shll
mov
push
adc
mov
pusha
fisubrs
sbb
jmp
bound
sbb
cs
popf
call
cmp
adc
sahf
jg
ret
pop
test
sub
lahf
lcall
imul
aas
dec
add
sub
sbb
pop
mov
fists
sbb
lret
ljmp
andb
daa
jnp
xchg
adc
in
ds
negl
sub
mov
cld
mov
xor
jmp
arpl
jnp
hlt
enter
jp
repz
push
mov
outsb
dec
mov
xchg
call
cmp
call
cwtl
outsb
movsl
movsl
sub
sbb
in
sbbl
mov
pop
add
mov
adc
mov
jp
mov
jae
icebp
xlat
ljmp
dec
push
jno
leave
cmp
dec
aad
sbb
mov
add
clc
jl
fst
inc
in
add
pushl
mov
push
sub
cltd
arpl
mov
dec
incl
jnp
into
lret
xorl
fwait
mov
mov
inc
pop
xchg
scas
push
out
lahf
add
jmp
fcmovnbe
in
ljmp
out
outsb
aas
cwtl
orl
test
outsl
xchg
fs
incl
mov
add
fscale
mov
sub
negl
pop
daa
stc
pop
paddsb
incl
mov
iret
out
bound
dec
cmp
sbb
and
inc
push
or
jmp
setbe
and
out
push
mov
roll
adc
fidivs
cmp
mov
inc
push
aam
jg
test
push
xchg
mov
lea
imul
je,pt
adc
rclb
mov
mov
lcall
in
sub
xchg
jo
mov
sti
movsl
mov
adcl
lods
and
cmp
pop
je
mov
mov
out
orl
in
fildll
cli
jns
enter
divl
add
jg
mov
in
and
inc
or
add
ljmp
mov
sahf
sbb
nop
movsl
mov
fld1
push
pop
xor
or
push
push
pop
mov
scas
out
es
adc
into
dec
or
pushf
cmp
cmp
aad
shll
cmp
js
lahf
push
pop
push
pop
stos
std
iret
xlat
adc
jecxz
mov
aad
cli
repnz
int3
or
inc
stos
jmp
ljmp
loope
xchg
rcrb
scas
int
and
or
mov
push
cltd
fcoml
jmp
add
push
and
cmp
pop
mov
pop
dec
and
and
call
js
adc
in
into
mov
jmp
lods
mov
mov
int3
adc
pop
scas
mov
xor
out
popf
xchg
cmp
push
inc
mov
dec
cmc
mov
xchg
notb
mov
jmp
push
je
push
jmp
pop
fsubrl
dec
push
cmp
mov
mov
and
arpl
dec
mov
lcall
xor
jg
xor
push
icebp
mov
loopne
fyl2x
outsl
mov
xor
dec
mov
mov
mov
inc
and
lret
ljmp
jg
je
sbb
pushl
mov
mov
loopne
imul
inc
shlb
mov
jmp
mov
lds
out
xor
ret
push
push
fs
sub
pushf
sub
fstpl
movsb
in
aaa
sub
pop
ja,pt
sub
jns
cmp
mov
mov
pushf
jno
jmp
xor
dec
pop
adc
aam
dec
test
movsb
imul
out
xchg
lods
stos
arpl
popa
lcall
aas
in
adc
dec
adc
xor
filds
cs
in
popf
xchg
xchg
mov
call
add
cli
adc
shlb
inc
cmpsl
fnstenv
cld
pushl
in
mov
cs
lods
sbb
mov
add
sbb
leave
jae
pop
idiv
pushl
mov
popa
outsl
sub
pop
xor
mov
add
xor
incl
mov
sub
in
in
mov
pop
jmp
int3
dec
outsb
lret
std
pushl
cmp
out
lea
movsl
aas
xchg
test
addr16
fldenv
pusha
cmpsl
jp
jg
popa
cmp
or
in
nop
cmp
lret
mov
ss
jmp
mov
jnp
sub
ds
push
xlat
pop
lret
sbb
mov
cmp
dec
adc
push
jo
mov
mov
mov
push
push
mov
js
or
xor
pushl
sbb
sub
mov
inc
inc
cli
shll
pop
sub
mov
cmp
sub
jo
adc
xor
mov
out
in
mov
ljmp
repnz
in
shll
mov
in
aas
js
fisttps
cwtl
jg
xchg
push
and
fcompp
outsl
repz
js
dec
xchg
call
testl
and
notl
sub
enter
sbb
pop
shll
mov
movsb
dec
inc
push
jne
lds
cltd
pop
mov
xor
pusha
dec
sub
fnstsw
fidivrs
xor
mov
lods
mov
mov
jae
jg
jmp
sub
dec
xor
jnp
push
dec
inc
imul
pushl
inc
inc
lahf
frstpm(287
das
pop
and
add
jae
mov
push
xchg
js
lods
rcr
add
ljmp
test
lods
xchg
je
mov
inc
data16
stos
mov
mov
pop
int
ljmp
xchg
mov
lods
cltd
out
test
aad
adc
int3
xchg
sub
jg
call
rcll
fdivs
add
cli
sub
or
rolb
incl
pop
in
or
adc
mov
inc
push
inc
push
mov
dec
xorb
jg
stc
inc
ret
stos
dec
pop
popa
sub
daa
push
inc
outsb
ficomps
cs
push
sub
or
pop
repz
lret
dec
stc
out
cltd
out
mov
adc
pop
xchg
std
das
add
out
call
jmp
bound
pop
mov
test
out
leave
loop
jp
pop
adc
incl
adc
cmpsl
sub
inc
rcl
call
movsl
and
lcall
jb
or
mov
mov
add
aas
push
adc
sti
mov
pop
adc
jno
xchg
inc
jno
nop
shrl
jg
pusha
bound
or
faddl
jp
dec
jecxz
icebp
sub
lea
dec
fadd
fidivrl
mov
lcall
and
aaa
rol
pop
aam
fs
mov
dec
mov
xorb
bound
cmp
fs
jg
add
sub
leave
mov
xor
insl
stos
sub
decl
and
lock
popf
jae
test
and
mov
incl
hlt
int3
adc
push
inc
fnstcw
arpl
sti
cmc
loop
ja
lock
and
cmc
pop
mov
imul
ret
push
stos
or
inc
out
unpckhps
jnp
xchg
lahf
ret
push
sbb
mov
inc
enter
ljmp
cmpsb
push
xchg
jb
int3
scas
push
mov
sub
fmulp
loop
je
popa
hlt
sbb
incl
dec
jae
stos
and
test
inc
nop
xor
clc
or
scas
insb
xor
or
jmp
xor
mov
and
xor
imul
jnp
rorb
mov
mov
xchg
cwtl
dec
movsl
mov
inc
test
cmp
xlat
pop
fwait
jle
mov
cmp
repnz
cmp
js
data16
mov
lahf
adc
mov
sub
call
incl
mov
and
dec
leave
xchg
movsl
cmc
lahf
xchg
into
ret
aam
lret
pop
insl
sbb
mov
decl
pop
pop
jne
sahf
push
aam
pushf
jno
aaa
mov
mov
call
in
iret
inc
inc
fistl
out
std
push
pop
ret
ret
loope
mov
inc
inc
idiv
lcall
xor
adc
aas
cmp
xor
dec
jmp
mov
loopne
scas
xchg
push
incl
inc
popf
cld
nop
push
insb
adc
sbb
imul
cmp
lahf
jns
decl
pop
stos
fimull
pop
filds
mov
push
push
mov
lcall
mov
mov
or
jb
decl
or
sti
cmpsl
jnp
lahf
out
and
jle
cmp
mov
or
mov
sti
add
pop
pusha
jle
mov
iret
cmpsl
in
mov
dec
mov
into
in
pushf
ret
mov
into
and
cmpsb
lret
jecxz
decl
sahf
testb
fidivrl
test
mov
mov
mov
sbb
inc
pop
ficomps
pushl
sbb
call
sarb
test
fwait
add
nopl
call
fnop
test
pop
into
fs
add
mov
or
push
jmp
pop
or
dec
int
jb
xlat
add
dec
incl
pop
xor
sbb
adc
dec
addr16
fisttpll
dec
sub
call
push
cmpsl
flds
cmp
mov
sbb
xchg
add
lcall
sbb
lahf
sbb
dec
insb
gs
int
jnp
adc
mov
fwait
mov
mov
out
push
or
mov
in
adc
xchg
inc
cmp
ljmp
call
jbe
popf
fstps
mov
pop
adc
xchg
and
ss
test
insl
pop
dec
mov
cmpsb
adc
push
and
jne
mov
js
xor
lods
lea
movsb
xchg
int
outsb
into
shll
push
jbe
jecxz
push
fiaddl
sbb
pop
jbe
pop
cmp
inc
aam
push
insb
js
insl
jnp
test
shrb
pushf
add
mov
cld
pop
xor
mov
cs
fadd
jp
ss
std
outsb
pop
mov
std
lcall
out
dec
mov
lcall
pop
fs
pop
enter
call
inc
jns
xchg
dec
imul
mov
ljmp
adc
cmpsb
ret
insl
idivl
xor
and
ret
nop
je
mov
cli
pushl
dec
push
and
push
in
pushf
add
mov
sbb
mov
fdiv
decl
sub
lahf
mov
jmp
push
add
adc
xchg
cmp
inc
fsubrs
mov
decl
in
mov
xor
push
cmp
into
pop
icebp
mov
push
push
and
sarl
scas
mov
xchg
adc
idiv
jg
ja
fs
in
jbe
stos
daa
test
scas
mov
xchg
cmp
repnz
ljmp
lods
pop
movsl
int3
jmp
out
imul
into
mov
clc
call
je
fildll
lret
jns
in
gs
dec
ljmp
jb
ret
pop
pop
ljmp
loop
mov
inc
mov
shr
lds
rcll
mov
sub
and
adcb
adc
adc
push
imul
mov
add
stos
test
rclb
scas
mov
out
dec
or
dec
bswap
xor
insb
jecxz
pushf
rcr
jmp
ljmp
push
repz
ret
pusha
lock
daa
jle
aad
jge
lahf
cmp
mov
mov
add
cmp
aad
xor
jb
jno
fiadds
add
push
ss
jg
dec
popf
nop
nop
daa
gs
inc
or
shrl
insl
popa
cmp
dec
push
mov
jmp
out
mov
arpl
dec
xchg
rcrb
jmp
dec
xchg
iret
stc
in
and
cmp
popl
call
outsl
sub
pushl
aas
stos
jo
push
dec
data16
shll
add
push
sub
call
xchg
popf
fdivr
pushl
in
jecxz
cli
pop
ds
adcb
inc
inc
pop
mov
in
xchg
insl
pop
push
popf
dec
incb
decl
xor
shrl
push
push
xor
repnz
out
outsb
pushf
sub
xchg
aad
and
jbe
call
add
shrl
pop
push
jl
ja
dec
xor
jmp
xchg
xchg
or
sbb
xchg
add
mov
mov
call
mov
push
aam
jno
pushf
xchg
jnp
andb
insl
push
lds
nop
roll
cli
leave
je
sahf
lcall
and
jg
les
dec
int3
mov
int3
in
jp
or
ret
cwtl
sti
inc
push
jge
dec
or
jmp
imul
jmp
xlat
imul
incl
and
cld
sbb
testb
add
les
aaa
push
test
adc
mov
fstpl
arpl
or
incl
roll
add
cmpsl
adc
scas
mov
popa
dec
shll
push
std
aaa
lret
not
test
adc
add
pusha
rcr
add
cmp
stc
or
js
pop
inc
sub
jmp
aaa
lea
pop
push
stos
mov
mov
arpl
inc
bound
cmc
fsts
jmp
cmp
lcall
jmp
jns
dec
std
or
xlat
loop
testl
pop
mov
sti
mov
ss
push
iret
jmp
into
aaa
inc
sbb
mov
add
roll
xchg
lcall
mov
lret
lock
mov
out
shl
xor
xor
scas
mov
sarl
push
dec
mull
lods
movb
push
movsb
push
push
adc
mov
and
mov
sbbb
adc
mov
or
movsl
fcompl
incl
fldenv
jge
push
xchg
and
cmp
pop
rcl
in
push
test
xorb
call
lods
rclb
cmp
and
jmp
call
aas
xchg
mov
push
jnp
call
cmp
inc
jg
jno
sbb
xchg
test
mov
mov
fildll
or
loope
popf
and
sub
lret
mov
sbb
or
or
or
pop
jg
jmp
nop
mov
xor
jbe
mov
adc
jns,pt
test
in
sar
lret
and
mov
jmp
pop
mov
sbb
out
adc
cmp
mov
push
adc
mov
cli
cmp
mov
sub
incl
cld
adc
jne
arpl
mov
cld
loope
out
call
mov
pop
jmp
cld
cmp
pop
push
add
mov
scas
push
inc
fwait
push
xchg
push
loop
or
xor
jg
call
cmp
enter
rolb
add
cmp
js
push
jmp
pop
jge
mov
push
cmpsl
es
scas
xchg
fwait
loop
pop
fs
aam
test
and
and
loopne
mov
cli
sarb
nop
in
call
sub
mov
mov
popa
addb
or
je
xchg
dec
int3
mov
pop
stos
mov
lea
inc
adc
fisubrl
jp
xchg
mov
ret
jae
push
test
jmp
sub
cmp
and
cmpsb
mov
pop
lds
pop
lock
test
xchg
fdivr
shll
mov
inc
sub
fcomip
incl
and
jmp
out
in
jo
or
xchg
xchg
xchg
and
decl
test
xchg
sub
lods
xor
mov
cmp
cmp
sub
in
stos
js
call
and
rol
xchg
xchg
sbb
mov
lret
test
dec
pop
sbb
call
pop
orl
fchs
fdivrs
hlt
add
scas
shlb
ja
adc
js
cmp
decl
xor
and
adc
and
cltd
mov
clc
int
sbb
fsubs
cmp
sbb
mov
mov
sarb
mov
push
mov
insb
push
mov
lcall
cli
scas
nop
orb
sbb
sbb
and
push
pop
out
movsb
sbb
mov
nop
into
popf
imul
sub
frstor
addr16
jmp
adc
dec
and
mov
imul
out
aaa
rcl
pop
lsl
cmp
dec
push
mov
lcall
sbb
leave
out
in
pop
xchg
jae
fisubrs
pop
out
or
push
dec
sub
adc
popa
call
xchg
fcmove
xor
decl
call
adc
xchg
jecxz
cwtl
or
ficomps
push
movsb
jle
sbb
adc
sbb
jmp
repz
imul
xor
mov
lret
lret
int3
pop
movsb
hlt
pop
dec
push
pop
fbld
lcall
pop
icebp
fdivl
xchg
adc
js
push
lds
jns
inc
roll
roll
insb
stos
decl
mov
adc
lret
mov
ds
jae
daa
int
or
outsl
incl
pop
jae
jg
popa
repnz
ja
push
ljmp
imul
fcmovnu
das
jns
repz
fisubl
jmp
inc
jo
jg
and
and
cmp
jp
or
pushl
sarl
scas
cwtl
movsl
mov
popf
call
je
sti
or
lcall
mov
ljmp
movsl
es
clc
mov
enter
xchg
stos
inc
shlb
xlat
pushf
add
lods
mov
adc
ljmp
call
popa
icebp
lret
push
cmp
mov
loope
mov
and
in
outsl
clc
jg
jp
xchg
movsl
int
push
inc
lods
jb
inc
mov
xchg
and
jg
fdivr
pop
mov
mov
sub
pop
stos
sub
movsb
jnp
and
push
or
push
xor
lock
aam
insl
mov
addl
and
push
decl
ret
fcmovnbe
pop
test
cmp
hlt
mov
sbb
jp
lds
dec
mov
pop
mov
lea
ss
call
mov
in
pop
inc
cmp
lcall
lcall
push
imul
xchg
lahf
add
icebp
jo
jnp
pop
ljmp
cmp
xor
xchg
orl
cmp
fs
in
lea
mov
lcall
outsl
lret
dec
mov
ss
fistl
sahf
inc
jl
inc
mov
adc
loope
enter
add
xchg
push
sub
lahf
movsl
push
and
les
outsb
ljmp
lret
cmp
enter
mov
sbb
push
push
outsl
and
incl
shll
mov
cmp
dec
sahf
int
xchg
imull
inc
inc
call
inc
movsb
mov
rclb
into
jecxz
push
cmp
fbld
push
je
inc
lods
movsb
enter
insl
cwtl
add
cli
cltd
arpl
jge
xchg
and
push
jg
dec
xchg
push
fistps
insl
add
and
js
ljmp
scas
mov
std
decl
pop
into
fs
mov
int3
cmp
inc
dec
xchg
aam
negl
sbb
add
jno
call
leave
cmp
imul
outsb
cmp
jle
ljmp
gs
mov
fsts
loope
imul
push
mov
cmp
or
mov
les
sbb
add
adc
sti
mov
inc
mov
inc
push
push
or
shrl
and
rcrl
push
pusha
mov
lcall
hlt
outsb
sub
xchg
mov
stc
and
std
les
daa
jns
aaa
jns
sub
mov
pop
lock
lcall
pushf
dec
add
ja
xor
out
leave
xorb
loop
and
sahf
dec
mov
add
mov
stos
shrb
dec
xor
xchg
cmc
jmp
fcoms
aad
shll
sub
pop
push
inc
add
jns
cmp
lcall
push
test
mov
andl
in
ret
imul
subl
incl
sar
and
xor
sub
ss
jmp
jmp
mov
out
jnp
subl
fldl
adc
in
sub
jle
mov
or
dec
ljmp
stc
dec
mov
cmpsl
push
es
decl
les
push
nop
xor
push
adc
sbb
pop
jno
xchg
pop
xchg
sbbb
jg
ljmp
loop
fs
xlat
daa
fisubs
std
mov
sub
xchg
stos
repz
mov
pop
pop
imul
sub
jle
xchg
xchg
call
pop
pop
loope
cs
sbb
test
jae
lcall
arpl
xchg
xchg
mov
int
push
and
lcall
int3
cmp
cmp
decl
xor
jo
xor
jno
movsb
out
pop
xchg
or
dec
push
mov
sub
cli
das
rcrb
xchg
loope
adc
pop
fs
das
stos
jmp
dec
adc
jno
push
cli
mov
stos
pop
cltd
adc
xchg
call
dec
out
outsb
adc
cmc
incl
jnp
es
inc
int
iret
mov
mov
sbb
ljmp
lret
mov
xor
pop
insb
mov
jmp
stos
mul
and
arpl
ljmp
add
and
les
sub
mov
testl
jmp
jg
jge
push
out
aaa
dec
jg
popa
push
mov
adc
repnz
jmp
fsubl
orb
icebp
sbb
lods
ljmp
iret
add
aam
ljmp
or
out
xor
pop
repz
sbbl
stos
ficoml
mov
aas
add
or
js
sbb
adc
dec
inc
lods
daa
or
orb
xlat
mov
ljmp
clc
call
sub
push
and
enter
sbb
push
sub
mov
pop
mov
sbb
dec
mov
mov
ljmp
lahf
push
xchg
mov
push
movsb
int
loop
xor
mov
jp
daa
jp
jo
das
xchg
rclb
sub
orb
xor
test
arpl
call
daa
ret
dec
test
adc
inc
stc
mov
mov
pop
and
jmp
add
es
mov
add
shll
or
pushf
xor
pushl
xor
sti
jmp
daa
dec
pop
shrb
jbe
ja
cld
out
sub
sub
fcomip
cld
scas
mov
dec
mov
sti
ss
cmp
xchg
sub
int3
push
cmc
mov
mov
inc
add
bnd
cmp
movsb
dec
jo
cltd
adc
lcall
mov
xchg
sub
fsubrl
dec
stc
pop
out
je
xchg
push
xor
js
and
movl
or
push
sub
fadd
out
jge
cmp
dec
imul
dec
adc
dec
clc
or
sarb
out
in
scas
ret
stos
loopne
popa
inc
and
mov
pusha
pop
xor
adc
jae
dec
gs
cmp
decl
mov
out
std
cmc
mov
movsl
pop
and
outsl
mov
aam
mov
fdivp
in
outsb
jmp
ja
and
dec
ficoms
aam
sar
int
icebp
pop
pop
adc
sbb
push
ljmp
sbb
xor
cmp
pop
pop
cmp
les
das
add
fcos
sbb
decl
mov
sarb
lret
xor
jb
insb
push
pop
inc
outsl
push
ja
dec
pop
clc
jg
mov
xchg
push
pusha
loop
mov
flds
out
in
sbbb
shrb
inc
xchg
lock
pop
dec
inc
inc
xchg
push
add
out
iret
shl
push
cmpsb
testl
pushl
jbe
sbb
sub
pop
dec
xchg
xor
fcmovb
jle
popf
xor
xlat
cmp
sub
mov
insl
pop
cli
popa
lds
sbb
test
iret
movsl
addl
pushf
fisttpll
inc
dec
cltd
ffreep
ret
add
in
fbld
inc
push
popf
and
xchg
pop
dec
pushf
jle
add
call
decb
testb
dec
fisubl
sahf
gs
sbb
ja
cli
lcall
mov
pusha
or
ret
xchg
pushl
xor
cmp
or
pop
push
sti
xchg
mov
call
dec
dec
in
jge
mov
cmp
hlt
dec
jns
xor
mov
repz
lods
fstps
incb
ljmp
mov
es
sub
fs
xchg
xchg
mov
jp
les
inc
popa
mov
xor
sahf
cwtl
sub
xor
int
std
shlb
jmp
sub
scas
mov
adc
xchg
add
jp
test
dec
pop
mov
xchg
pop
fbstp
mov
int
xchg
setno
sbb
push
sbb
mov
punpckhwd
add
hlt
pop
lods
push
pop
cmpsl
rorb
and
cmp
mov
mov
mov
jne
inc
jne
jle
fisubrl
lods
jmp
decl
sub
mov
push
and
jecxz
mov
fidivrs
inc
mov
jg
lock
enter
add
sar
incl
mov
aam
jnp
orl
or
call
cmp
fnstsw
and
es
inc
cmpsb
mov
add
xor
lods
mov
movsb
jnp
sbb
mov
xchg
sbb
call
xor
xor
into
inc
shrb
cmp
inc
jg
xor
in
in
mov
incl
and
out
icebp
push
push
outsb
mov
pusha
int
movsb
out
mov
movsb
sbb
add
xchg
xchg
hlt
dec
in
or
push
mov
push
push
shlb
mov
ljmp
or
add
dec
int
mov
add
xor
repnz
cmp
mov
fdiv
xchg
cmp
call
push
loop
incl
jne
shl
sbb
incb
mov
push
mov
mov
repnz
sarl
test
jo
adc
mov
int3
xor
pop
mov
stos
pushf
daa
inc
sub
pop
and
dec
inc
je
stc
sahf
xchg
insb
js
mov
push
adc
int
mov
mov
or
ss
cmpsl
and
xchg
bound
xchg
push
pop
call
leave
adc
cmp
lds
cmpsb
jno
push
xchg
aaa
pop
mov
pushl
les
leave
fisubs
or
add
std
fistpll
rcrl
add
pop
pop
mov
incl
inc
stos
pop
adc
dec
test
stc
movsb
aaa
sbb
pop
mov
hlt
and
mov
lcall
rol
xchg
outsb
test
in
adc
push
cmp
inc
cwtl
jns
xchg
into
lds
stos
es
data16
inc
in
into
sbb
mov
and
enter
mov
fucomip
out
fs
and
int3
jbe
or
mov
fwait
cmp
and
lcall
std
jmp
mov
fisubrl
stc
rol
lods
fcoml
xor
lcall
and
in
test
sti
sub
out
dec
decl
dec
cmc
cmpsb
sub
fcoms
jo
icebp
cmp
jnp
clc
dec
cmp
movsl
pop
push
mov
incl
ds
imul
mov
dec
sbb
roll
incl
or
mov
ficoml
xchg
mov
movb
dec
ficoms
adc
pushl
pusha
shrb
shll
paddq
in
cmc
fisttpll
sub
je
cld
movsb
call
cli
xchg
test
xchg
xor
push
xchg
lds
mov
jbe
orl
cld
outsl
push
xchg
fwait
xchg
jp
les
xor
xchg
and
mov
cli
sahf
or
push
daa
jne
xor
mov
nop
lahf
sub
xor
call
das
push
mov
dec
cmc
test
dec
aaa
mov
out
test
pushf
mov
adc
movsl
cmpsb
es
out
clc
cmp
adc
push
mov
mov
or
call
decl
popa
mov
lea
ret
inc
idiv
rol
mov
or
incl
out
aaa
mov
ds
dec
test
adc
bound
ret
clc
jmp
subb
cmp
mov
shll
adc
ljmp
popf
out
cmp
daa
das
add
je
add
xchg
xor
mov
add
ljmp
cmp
outsl
mov
enter
and
xor
in
xor
jp
jnp
ss
jmp
sbb
leave
fdivrs
xchg
adc
les
clc
decl
in
cmp
push
pop
cli
add
cmp
ret
dec
jmp
lds
pop
sub
or
add
lock
push
sbb
sar
cmp
shll
cs
test
dec
and
mov
call
mov
icebp
cmp
pop
xor
fmull
mov
inc
cli
std
decl
inc
push
xchg
rcr
push
leave
cmp
adc
xor
sub
push
imul
insl
jnp
jns
sbb
into
arpl
test
js
xchg
int3
decl
sub
gs
inc
push
jns
movsb
les
xor
add
push
mov
aaa
ljmp
sub
pop
mov
mov
movsl
dec
mov
cmp
jmp
dec
inc
js
xchg
inc
ficoml
lds
xchg
push
xchg
rol
movsl
sbb
fs
call
int3
je
xchg
cmpsb
outsb
mov
cmpsl
inc
lret
in
flds
fcomip
pushl
push
addr16
xchg
sbb
loopne
ficomps
pusha
sub
inc
or
pushl
test
mov
jo
data16
pop
sub
js
insb
stos
mov
into
insl
incl
push
in
or
stc
cmp
pop
mov
add
adcl
add
jnp
sbb
xor
mov
and
dec
dec
lds
cmp
out
add
push
dec
adc
rol
out
mov
mov
jmp
xorl
out
cmp
fs
pop
in
lods
jne
daa
sarl
pop
mov
inc
cmp
mov
outsl
mov
mov
mov
in
sub
icebp
push
inc
add
inc
pop
mov
xchg
imul
dec
and
cld
adc
bnd
in
imul
mov
xor
call
pop
ss
shlb
andb
pop
pop
jp
call
imul
xchg
dec
cmp
pop
lret
ljmp
and
mov
repz
or
jb
jb
movsl
inc
mov
ljmp
pop
or
lahf
jns
sub
ret
sysexit
jb
lret
dec
lea
enter
decl
mov
in
xor
xor
cld
lahf
jno
mov
in
jmp
jl
jmp
shlb
lock
mov
ja
xchg
and
xor
fisubl
out
out
das
cli
call
push
xchg
jnp
sub
sub
sub
jge
sub
inc
inc
cmp
cmp
out
inc
mov
leave
sub
ret
iret
jmp
fxtract
push
dec
les
cmpl
xchg
sbb
jp
jmp
testb
jbe
mov
call
scas
fwait
dec
add
les
jns
sub
lods
pushf
in
popa
inc
push
adc
xchg
imul
ljmp
jg
sub
shll
adc
retw
icebp
push
push
std
ljmp
dec
out
dec
icebp
dec
mov
inc
in
lods
adc
pusha
inc
or
cld
clc
mov
iret
inc
mov
inc
cmp
xor
mov
aad
cmp
pop
cltd
shr
jno
lret
mov
scas
idivb
xchg
mov
orb
sub
es
scas
jnp
jg
incl
je
and
mov
pop
dec
jmp
sti
push
imul
xor
in
aaa
cld
decl
and
into
int3
mov
sub
sub
loopne
xchg
hlt
aaa
paddb
incl
in
aaa
jg
xchg
pop
and
repz
and
sub
mov
or
dec
rolb
das
mov
xor
cmp
cmp
and
mov
mov
xor
push
mov
ret
fdivl
fbld
inc
call
pop
out
mov
popa
js
mov
push
adc
mov
push
sub
jg
or
and
fstl
ljmp
clc
sub
out
xchg
pusha
pop
data16
loope
lcall
mov
and
ljmp
mov
adc
cmpsl
iret
push
mov
sahf
test
loopne
dec
jp
sub
lcall
dec
dec
aaa
or
sub
sbb
adc
lds
sti
mov
loope
mov
decl
inc
sub
cwtl
and
mov
test
or
incl
cmp
xchg
pop
in
std
cmp
or
xor
leave
jecxz
sti
in
mov
push
jg
hlt
and
in
dec
pop
out
in
mov
mov
mov
decl
sbb
cmp
int
test
cmpsl
in
gs
cmpsl
xchg
cli
lods
int3
lds
cmp
dec
dec
cmp
mov
imul
hlt
in
int3
lahf
xor
les
pushl
je
test
das
ret
cmpsl
mov
push
idivl
rcl
loopne
or
dec
out
and
xchg
and
decl
cmp
cmp
mov
add
repnz
or
fdiv
or
enter
xor
adc
aad
inc
loopne
into
dec
dec
jb
adc
aam
adc
sub
add
hlt
jmp
jo
roll
cmp
add
mov
out
ficompl
sbb
or
mov
int
lock
mov
cmp
sbb
mov
pop
sub
add
decl
adc
movsl
leave
stos
xor
xor
jmp
dec
jg
clc
jg
lock
outsl
sub
cld
outsb
or
xor
mov
push
iret
decl
jbe
lret
xor
push
scas
mov
pop
sahf
addr16
dec
add
dec
mov
jmp
stos
mov
orb
mov
in
aad
adc
pusha
rcrb
jae
ror
cmpl
enter
inc
pusha
cmp
xchg
sbbb
je
mov
lea
popf
sahf
fisttps
pop
mov
xchg
mov
sbb
cmp
mov
xchg
mov
ljmp
push
mov
xchg
inc
fidivrs
fisubrl
test
mov
mov
mov
xchg
ds
in
fwait
outsl
mov
and
xchg
loopne,pn
mov
into
jge
jg
pop
icebp
jmp
insl
and
and
sub
negl
dec
inc
mov
incl
jae
int
addb
leave
mov
xchg
and
call
out
add
test
pushl
sub
dec
xor
add
leave
sub
lret
sub
sub
push
call
incl
rcll
stos
mov
xchg
dec
stc
sub
sub
dec
jnp
call
cltd
or
lods
movb
pop
rcr
sbb
popa
and
loope
sub
loop
call
clc
jnp
stos
and
in
cmp
sub
jmp
in
pop
outsl
or
fwait
push
ficompl
xchg
sbb
dec
ljmp
push
xor
pop
jmp
dec
aam
xchg
mov
aam
pop
lcall
push
xchg
or
repz
cmc
fadds
mov
incl
cltd
andb
sbb
xchg
insl
xchg
xchg
rolb
ret
loope
scas
cwtl
cmpsl
out
pop
xor
push
mov
popf
dec
js
fildll
add
shll
shrb
cmp
xchg
pop
outsl
cmp
cli
iret
or
idiv
pushl
int3
jge
addr16
inc
pushf
dec
inc
sahf
stos
mov
outsb
imul
negb
push
imul
mov
ret
js
je
mov
and
xchg
aam
jg
ljmp
gs
icebp
rcrl
mov
adc
incl
movzbl
insb
out
cmp
fstl
pushl
cmp
sbb
lea
jp
imul
or
rorb
fstpl
jmp
dec
nop
mov
push
enter
xchg
push
lods
sbb
cmp
cmp
sub
sti
and
lcall
xorl
sahf
ficomps
dec
adc
fwait
fists
mov
ret
mov
stc
xchg
pop
lods
xor
inc
or
and
fisubs
popa
mov
sub
sbb
ds
pushl
xchg
mov
lret
jp
sub
sub
test
push
imul
jecxz
ljmp
cld
dec
ja
clc
mov
and
je
xchg
outsb
jle
xchg
insb
stc
fsub
sub
fnstenv
cli
pushf
rol
xor
mov
in
adcl
inc
pop
jnp
lock
into
cmpsl
aam
pop
push
jbe
in
sub
cmp
or
adc
adc
ljmp
es
idivb
pop
mov
push
pushf
push
fcoms
add
dec
mov
lock
fcmovu
roll
sbb
xlat
rcl
movsb
data16
pop
sub
repnz
jb
mov
jae
xchg
movsb
testb
sti
xor
pusha
inc
je
sbb
jns
es
les
lea
incl
cli
and
das
dec
pop
xor
arpl
int
jb
add
incl
fmulp
scas
cmc
xchg
xchg
out
xchg
call
or
cmp
pushf
int
fldlg2
int3
jg
test
fisubs
ret
push
jp
xor
jg
pop
or
jbe
ja
sti
jnp
xchg
lcall
mov
jns
loop
pop
add
cmc
sub
inc
test
inc
mov
push
pop
cmp
leave
push
dec
inc
repz
or
ljmp
aaa
sub
movsw
xchg
fwait
mov
decl
cs
and
adc
inc
fstpl
aad
loopne
into
mov
push
lea
ljmp
dec
andb
sahf
sahf
pop
inc
and
adc
sahf
ljmp
add
fs
nop
sar
psubd
pop
cwtl
xorb
dec
mov
add
stos
xchg
pop
fmul
jnp
inc
inc
xor
jmp
xchg
ficompl
gs
pop
outsb
inc
adc
insl
gs
scas
cmp
fiaddl
dec
push
jb
inc
mov
arpl
lret
les
sub
sbb
incl
mov
ss
fistps
lds
sub
aaa
sub
movd
mov
incl
mov
mov
xchg
repnz
xchg
mov
and
fcomps
cwtl
andl
inc
test
ljmp
inc
scas
adc
jl
and
mov
jnp
or
fidivl
push
jl
push
loop
cmc
addb
jo
or
xor
out
scas
dec
div
imul
mov
jmp
ds
aam
scas
sti
inc
das
nop
lods
ljmp
cmp
add
repnz
out
jecxz
xchg
icebp
pop
or
iret
push
push
bound
das
sbb
aas
or
lds
les
inc
clc
inc
ss
jno
cmc
mov
jmp
push
mov
pop
and
lods
mov
xchg
pop
cltd
and
mov
push
lcall
cmp
xor
scas
and
push
cmp
push
adc
andb
dec
out
clc
ljmp
xchg
dec
add
xchg
sti
push
fidivs
nop
xor
jle
int
test
out
sub
outsl
addr16
pop
inc
movaps
jecxz
js
lahf
lahf
es
xchg
jnp
out
inc
js
fdivl
scas
js
hlt
inc
mov
aam
sahf
push
mov
std
adc
adc
mov
sbb
leave
fdivs
dec
aam
push
aam
stc
mov
das
fs
fnstsw
xchg
ljmp
in
xor
in
insl
mov
mov
insl
adc
or
imul
or
out
and
sarb
jbe
cmp
scas
and
fcoml
icebp
xchg
popa
push
push
push
orl
mov
imul
xor
jg
mov
es
lods
pop
jb
pop
adc
pop
adcb
das
cmpsl
fdivr
fbstp
xchg
lret
shlb
daa
cmp
stc
sub
stc
popa
push
mov
lcall
popa
pop
enter
lret
lret
dec
push
cmp
inc
call
push
sarl
inc
popa
pop
jmp
jno
mov
pop
fistpl
outsb
mov
int
jb
dec
das
jg
mov
push
data16
stos
outsb
clc
adc
pushl
pop
out
and
in
fstpt
mov
test
leave
and
test
icebp
dec
ljmp
adc
mov
adc
repz
mov
mov
pop
imul
ljmp
jg
pop
je
scas
sub
std
dec
orl
push
mov
pop
pushf
sbb
icebp
imul
xchg
rorb
sahf
lea
or
adc
in
int
rolb
shll
inc
pop
cld
dec
jge
add
lock
inc
lock
inc
mov
pop
xchg
mov
mov
adc
scas
rcl
xor
or
test
adc
idiv
jmp
jb
pop
dec
adc
inc
fidivrs
data16
mov
into
popf
pushf
xor
sub
fs
bound
leave
enter
add
jg
outsl
clc
dec
xor
xchg
mov
stos
ss
inc
sbb
decl
xchg
gs
clc
cmp
inc
and
iret
repnz
xchg
pop
add
outsb
xor
lcall
mov
shlb
stc
xor
cmc
sub
mov
lods
test
inc
push
test
push
sub
je
bound
push
jg
aam
shrb
fwait
pop
xchg
dec
push
jae
jmp
out
push
sub
jp
mov
lea
pop
iret
jg
fidivrs
loop
cmpsb
cmpsl
or
inc
inc
pushl
xor
sti
pop
iret
movsb
adc
jbe
test
outsl
pop
mov
sbb
or
es
setae
mov
mov
outsl
sub
data16
mov
or
imul
jbe
les
cmp
pop
cld
inc
dec
imul
shlb
outsb
into
xor
cmpb
xchg
incl
mov
pop
push
xor
mov
mull
dec
pop
addl
in
ds
mov
or
inc
xor
test
outsl
lcall
push
adc
mov
test
or
dec
jns
add
adc
mov
pop
jmp
xchg
cli
test
mov
jo
or
push
ds
inc
xchg
pushl
cmp
add
inc
ret
aam
mov
push
inc
out
jp
hlt
incl
xor
mov
jg
in
xor
push
jnp
inc
cwtl
push
out
decl
outsl
dec
pop
push
xchg
inc
mov
clc
and
arpl
inc
aas
shrl
add
jecxz
call
xlat
orb
add
xchg
cld
cwtl
and
iret
pop
jecxz
dec
mov
rcrl
jmp
mov
imul
imul
inc
movsl
nop
dec
mov
addr16
repz
stos
popa
decl
jp
aaa
sub
pop
fs
inc
ret
cmpsl
movsl
loope
dec
insl
fwait
cmp
cld
fcmovnb
std
jl
jl
data16
ljmp
insb
insl
jno
add
int
cmp
pop
daa
int
and
fildll
push
clc
mov
adc
inc
inc
adc
dec
popa
call
stos
inc
xlat
xchg
shl
in
sbb
dec
lret
mov
xor
pop
lret
cmp
push
movsb
arpl
shrb
jmp
pop
and
cmc
into
adc
leave
daa
imul
roll
cmpsl
ret
call
aaa
jecxz
outsl
test
stos
popf
lods
jo
imul
cli
or
jg
and
mov
jae
xchg
jmp
test
lods
xchg
pop
enter
xchg
scas
xchg
int
decl
mov
mov
jp
jo
test
aas
into
movsb
fsts
js
leave
pop
push
mov
xor
jg
push
mov
and
fldenv
push
test
test
out
subl
in
loop
push
in
out
mov
sub
and
pop
xor
popa
mov
dec
out
ljmp
fiadds
mov
add
xor
cmpb
jb
popf
cli
data16
outsl
call
dec
xor
xchg
lock
and
adc
and
mov
lcall
int3
imull
or
cli
xor
shlb
fldt
ds
lds
or
imul
jg
popf
or
ja
jns
sahf
mov
push
and
in
in
pushl
movsl
in
aaa
int
inc
popf
stos
or
and
je
cmp
sbb
add
jmp
cmp
adc
pushf
xlat
xchg
lods
out
stos
xor
popa
cmp
mov
lcall
jne
xor
pop
mov
in
insb
scas
cmovne
je
or
scas
jmp
std
call
cmp
movsb
out
xlat
movb
jo
jg
incl
add
xchg
data16
ret
fisubl
jge
addb
jg
mov
pusha
adc
loop
pushf
xor
mov
adc
adc
push
xchg
out
lcall
incl
cli
push
cmp
push
in
jmp
aam
mov
xchg
jae
sbb
dec
xor
cmp
and
es
lcall
xor
jg
fisttpl
sub
call
mov
pop
sbb
incl
js
xchg
push
movsb
data16
les
xchg
cld
into
fucomp
pusha
mul
nop
enter
mov
int3
test
and
sti
outsl
mov
push
or
adc
xchg
mov
dec
fwait
pop
mov
and
vpshufd
cs
cmp
das
dec
mov
fimuls
in
xor
sbb
jne
add
in
push
cli
xchg
xchg
sti
cltd
mulb
lcall
andb
jmp
cmc
push
sub
pop
fwait
dec
add
mov
push
clc
mov
sbb
sub
inc
sbb
or
lahf
and
fimuls
pushl
inc
inc
insb
xorl
push
fildl
push
in
inc
decl
push
mov
popf
fs
inc
daa
cmp
inc
stos
repnz
sub
push
mov
jmp
push
jmp
cmp
mov
aas
sub
fwait
incb
sub
stos
jecxz
xchg
cmp
loope
ljmp
xchg
mov
cmp
leave
jns
cmp
sub
sbb
imul
lahf
mov
cli
mov
adc
jne,pn
lcall
adc
sbb
cmp
test
sub
or
adc
or
fisttps
jnp
mov
fisttpl
ja
sarl
dec
bound
iret
xchg
decl
xlat
mov
jns
icebp
pushf
mov
pop
jae
mov
jae
jle
xchg
jg
pop
or
fsubrl
and
jg
incl
vunpcklps
stos
outsl
shll
dec
pop
mov
mov
scas
jb
sub
add
out
mov
mov
cmpsb
push
push
inc
xchg
shr
das
dec
enter
pop
loopne
xchg
mov
andl
adc
dec
decl
push
xchg
pop
add
mov
adc
imul
pop
shll
mov
fidivl
call
outsl
fisubrl
xchg
push
push
adc
test
xor
jne
add
faddp
or
aad
mov
std
mov
push
jp
into
inc
int
imul
sbb
add
xor
ud0
std
pop
lret
adc
dec
pop
lods
push
mov
push
test
push
incl
cld
pop
dec
dec
pop
inc
stos
push
xor
adcl
jg
loopne
dec
int3
push
push
arpl
stos
enter
xchg
cmp
int
xor
icebp
call
sub
pusha
lea
dec
sub
loope
sarb
jns
mov
cmpl
enter
jne
sbb
in
and
adc
sbb
jmp
enter
push
mov
and
mull
cmpsl
push
xorb
stos
or
ds
dec
out
pop
mov
enter
inc
js
sub
add
or
lods
cld
lods
sti
mov
lods
rcrb
or
cmpb
xor
out
rcl
imul
incl
bnd
mov
gs
fildll
rclb
mov
pushf
push
iret
js
xchg
insl
out
aad
push
test
or
dec
or
pop
sti
out
pop
js
add
cld
jmp
cltd
pusha
out
decb
push
cmp
push
adc
pushf
mov
jp
test
pushl
ljmp
mov
in
xchg
xchg
sub
les
je
pop
std
cmc
sbb
cmp
call
cld
int
into
movsl
test
mov
sbb
cld
and
xchg
pop
mov
clc
ljmp
mov
mov
daa
es
popf
out
enter
js
imul
jp
jo
mov
push
inc
fistps
xor
push
mov
pusha
enter
int
ljmp
ss
ds
lds
mov
orl
std
jge
or
mov
ljmp
vcvtsi2ssl
dec
and
aam
vpavgw
cmp
sbb
cld
aas
and
ljmp
ljmp
leave
add
fsub
xor
test
test
inc
or
aas
in
xchg
or
arpl
lahf
popf
mov
fdiv
in
fcoml
loopne
call
rolb
push
notrack
cmp
adc
push
cmp
dec
cmp
push
sbb
xchg
pop
xchg
std
cld
ret
lahf
mov
test
aam
sti
lods
lcall
xchg
sub
mov
mov
push
push
cmp
cmpsb
cwtl
and
cmpsb
push
cmp
ljmp
xor
or
cmp
out
pop
jne
mov
rcll
inc
les
aad
pushl
or
sub
push
mov
ret
pop
cmp
mov
mov
jo
adc
ljmp
dec
cmpsl
lret
inc
adc
cmp
jo
es
in
test
jno
or
mov
js
mov
xchg
inc
lahf
mov
xchg
test
gs
pop
call
dec
rcrb
loop
test
scas
xor
inc
test
arpl
inc
incl
mov
sahf
arpl
mov
and
mov
shrl
push
stc
imul
ror
data16
pop
aaa
xchg
hlt
lods
repnz
subl
or
outsl
jne
ja
lock
pushl
insl
cmp
jno
add
lds
inc
pop
fdivs
icebp
mov
call
into
test
in
adc
push
test
insl
outsb
loop
pushf
loopne
stos
inc
bound
call
imul
call
mul
push
mov
test
jp
mov
addr16
xor
clc
or
dec
push
repnz
cmp
xchg
cmp
dec
xchg
hlt
pushf
ljmp
mov
clc
lcall
sub
mov
lret
fldenv
hlt
add
xchg
or
xchg
dec
dec
fdivs
incl
pop
jo
pop
sub
mov
pop
push
int3
cmpsb
pusha
test
cmp
pop
lock
aas
das
cs
mov
xor
scas
lret
cmp
in
sbb
cmp
jg
dec
imul
mov
push
inc
mov
or
fldl2e
add
call
repz
lahf
repz
std
in
out
out
nop
fstl
int
mov
les
mov
scas
sub
jp
or
cmp
xchg
cltd
into
fists
test
xchg
es
js
and
push
xchg
xchg
push
cmp
and
ret
mov
dec
xchg
mov
decl
pop
nop
dec
fsubrs
push
push
pop
lock
fbld
test
dec
mov
arpl
mov
loope
fbstp
sub
dec
cwtl
xchg
inc
imul
mov
jg
xchg
cld
jmp
jp
lahf
sub
into
cmp
jns
xor
leave
ljmp
std
and
je
jp
dec
pop
pop
sbb
out
std
and
jnp
andb
cmpb
scas
ss
pop
pushl
dec
jo
mov
nop
adc
jge
sbb
pop
dec
adc
cmp
mov
and
and
cmp
inc
sub
sbb
dec
cmp
decl
fiadds
mov
xchg
int
ret
mov
repnz
or
adc
out
cld
scas
jge
shll
and
je
cmp
dec
and
lret
xchg
fstps
pushl
dec
mov
and
mov
pop
nop
mov
icebp
cmp
jge
or
jg
mov
and
add
mov
pop
inc
subl
iret
xchg
push
mov
sbbb
or
pushl
sbb
dec
lock
insl
out
cmpl
jl
mov
fdivrl
incl
int
das
mov
pop
sub
and
jl
dec
scas
inc
roll
decl
adc
ja
inc
inc
movsl
js
in
jns
inc
xor
lcall
pop
pop
cmp
pop
cwtl
sbb
icebp
inc
nop
or
adc
sub
cmpb
incl
xchg
dec
cmpsl
aam
aad
mov
lds
push
push
in
test
fmul
sub
adc
ffree
ljmp
xchg
pop
xchg
out
sahf
xlat
aad
pop
sbb
inc
sahf
cmpsb
sub
cwtl
push
pop
aam
call
ds
stos
lahf
cmp
iret
push
stos
mov
cmp
shl
decl
xor
cwtl
add
jmp
lds
ss
add
fdivrs
jp
pop
mull
pop
cs
fistl
mov
jno
add
push
inc
rcr
jnp
movsl
iret
lods
cs
into
aad
fbld
cmp
cmp
sbb
fadds
adcl
lcall
stos
push
les
jns
add
lcall
mov
and
pushl
iret
cmc
repz
mov
jmp
movsb
notb
insb
inc
clc
out
dec
loop
inc
cmp
sub
btc
mov
pop
inc
aas
cmp
in
mov
aad
adc
cld
jae
inc
jnp
enter
fsubrs
inc
cmp
mov
or
movsl
or
scas
adc
pop
lcall
mov
mov
cmp
or
mov
outsl
pop
loope
scas
jb
sub
jbe
push
or
in
push
mov
mov
and
je
adc
pop
enter
lcall
jne
gs
sub
mov
push
lret
decl
dec
mov
mov
stos
push
xor
dec
inc
nop
outsb
lods
inc
push
ljmp
xor
sub
push
lret
daa
mov
jne
pop
loope
loope
cli
add
jno
sub
outsl
clc
pushl
fdivrl
adc
imul
sbb
xchg
pop
xchg
jne
and
imul
ret
scas
xor
into
xor
cltd
lahf
loopne
daa
pop
decl
mov
loopne
in
clc
fs
inc
add
popa
cld
cs
mov
decl
pop
data16
mov
and
dec
dec
shl
incl
ljmp
fidivrs
incl
push
loopne
sti
pop
in
jne
mov
xchg
adc
xchg
cmp
repnz
push
push
xor
ret
mov
mov
testb
test
cli
out
dec
nop
je
nop
add
cmp
inc
fabs
test
jbe
mov
aad
dec
loope
aaa
jnp
ret
sub
jecxz
dec
outsl
mov
or
decl
scas
addr16
xor
jbe
sbb
jp
lret
mov
jg
xchg
loop
push
icebp
or
cld
les
lcall
rol
sbb
pushf
lds
inc
rol
dec
das
sbb
pushl
adc
pop
or
xor
jns
push
daa
pop
sub
mov
test
dec
mov
or
mov
pop
mov
xor
lock
fstp
jbe
inc
dec
sub
xor
loopne
lock
dec
or
and
mov
mov
dec
lcall
ds
cmp
push
mov
push
fists
jbe
push
and
or
lock
pushl
popf
fwait
adc
cmp
fs
mov
out
and
incl
stos
or
nop
xor
sbb
inc
lret
xor
pop
popa
fs
sahf
cli
pop
lock
lcall
gs
hlt
xor
and
or
xchg
lcall
mov
pop
pushf
xchg
int3
fs
das
sub
sbb
xchg
jle
loop
in
push
add
jg
sbb
scas
fwait
loop
add
fmull
hlt
mov
ffreep
repz
loope
add
sbb
insl
addb
xor
orb
mov
js
stos
mov
jg
add
pop
aas
mov
cmp
cmpb
sti
incl
pop
lods
push
fldl
syscall
dec
cltd
mov
shlb
mov
sub
lds
xchg
aaa
fistl
pop
popa
bound
xchg
jmp
jmp
dec
xchg
daa
cwtl
adc
movsb
fistpll
into
xor
xor
inc
mov
ret
and
cli
pusha
dec
std
jmp
dec
sub
outsb
inc
movsb
pop
and
movsb
mov
pusha
rcr
xchg
cwtl
lcall
and
rcll
imul
fiadds
repnz
push
xor
jg
fldenv
mov
lds
push
lret
push
insb
fcmovb
out
and
fsubrs
lcall
sti
pop
dec
mov
ss
mov
unpcklps
gs
dec
insl
cmp
and
sbb
pop
dec
fildl
leave
divl
jmp
push
add
ror
sti
pop
icebp
pushl
rclb
int
shll
leave
mov
stos
jmp
add
out
cltd
incl
dec
mov
mov
sub
test
xchg
or
mov
std
adc
mov
jns
ss
sub
mov
sti
mov
mov
mov
aam
inc
mov
inc
or
or
loopne
sub
push
cmp
jg
cltd
and
jne
es
xchg
flds
adc
stos
cld
or
bound
inc
fsubrl
mov
xor
jno
sbb
sbb
jle
aas
mov
insb
icebp
adc
add
add
call
mov
sbb
mov
repz
das
or
fcmovbe
cli
in
sub
pushl
cmp
mov
or
add
xchg
jecxz
or
pop
cld
mov
outsb
xchg
stos
cmp
scas
xor
shr
mov
jg
repnz
roll
cld
lcall
test
leave
daa
mov
dec
aaa
adc
mov
faddl
out
pushl
je
and
lods
test
in
inc
mov
mov
fs
push
cmp
fs
ljmp
es
loop
cmp
repnz
out
push
std
sti
test
lods
icebp
jle
mov
stos
mov
pop
hlt
or
push
cmpsb
repnz
stc
into
mov
call
loopne
js
arpl
mov
test
dec
cs
cmp
xchg
loop
aaa
jmp
ljmp
add
subl
push
dec
cld
mov
and
xchg
push
scas
jmp
out
pushl
xchg
hlt
imul
xor
sbbb
shll
punpcklwd
enter
mov
lcall
adc
mov
clc
adc
out
adcb
pop
stos
loop
jg
call
or
lret
add
push
sub
rorb
sbb
out
mov
out
incl
push
call
adc
out
into
repnz
ljmp
sub
inc
scas
add
mov
pushf
or
pop
xchg
adc
mov
pop
sbb
pop
filds
cld
inc
test
xchg
pushl
jae
xchg
test
in
out
fcomip
call
sub
xor
inc
aad
push
cld
cwtl
pop
push
adc
bnd
lcall
call
dec
bound
fbld
je
in
cmovg
mov
xor
push
ss
sti
push
dec
and
adc
jle
subb
sbb
es
ljmp
sbb
ljmp
pop
into
fidivrs
ret
xor
mov
lods
mov
push
lcall
mov
push
mov
xchg
push
dec
movsb
mov
dec
test
testl
dec
mov
les
int
push
push
sub
sbb
mov
icebp
mov
inc
adc
jmp
into
in
cmp
jnp
inc
or
inc
xchg
in
aad
mov
push
bound
loopne
lcall
test
pop
jne
pop
lret
inc
sub
cmp
adc
aas
pusha
pushl
or
popa
roll
lea
dec
sarb
sti
xor
mov
jg
nop
shl
mov
incl
mov
out
arpl
push
add
rorl
iret
xchg
mov
dec
jmp
jb
leave
add
cmpsl
or
ss
add
pop
jg
inc
cld
sahf
mov
dec
xchg
jae
push
rolb
ljmp
mov
movsl
aas
popa
or
clc
stos
mov
sbb
sbb
int3
push
pop
push
mov
push
xlat
pop
mov
out
mov
daa
push
pop
aad
mov
sar
movsl
out
sbb
pop
pushl
mov
push
scas
adc
xor
rol
jb
pop
loop
push
xor
incl
leave
fisttpll
mov
loopne
or
dec
xchg
div
mov
rol
stos
sub
sub
int3
lcall
mov
and
sarb
and
xor
xlat
icebp
es
testl
cmp
mov
mov
shl
push
ret
dec
xchg
pusha
mov
cmc
pop
pop
xor
icebp
push
jg
push
sub
lret
push
icebp
jmp
inc
sbb
jle
lods
pop
insb
mov
jg
lea
nop
loop
jmp
iret
sbb
pop
mov
decl
test
js
sub
xchg
xchg
pop
sbb
add
ja
sbb
cmpxchg
mov
jg
mov
sbb
mov
in
inc
pop
cmpsb
gs
data16
mov
add
xchg
int
fldt
cmp
sub
inc
mov
xchg
loope
and
adc
inc
jmp
pop
jmp
and
cwtl
lds
aad
enter
jg
test
jmp
sti
pop
xor
pop
mov
je
sub
dec
or
pop
out
mov
es
leave
test
fwait
xchg
xchg
aam
dec
std
in
sbb
roll
dec
pop
pop
xor
pop
push
idivb
fnstsw
xchg
ret
loope
sahf
xchg
xor
pop
push
push
pusha
jmp
or
jae
add
cmc
movd
in
dec
xchg
mov
sahf
insb
inc
test
in
jge
mov
sub
fnstcw
xchg
lret
fsubrs
imul
inc
pop
js
ret
pop
orb
stc
inc
push
outsl
jo
pushf
mov
pop
test
fwait
lds
nop
std
insl
movsl
sbb
fisttpll
clc
dec
sbb
push
aam
lcall
mov
fstl
pop
push
mov
mov
fildll
sarb
sbb
jmp
mov
jnp
cmp
mov
xor
xchg
xor
out
insb
sub
mov
ljmp
mov
fmulp
pop
subb
mov
jmp
dec
jp
sar
lcall
and
stc
mov
mov
mov
roll
popa
in
lcall
insb
bound
jb
lcall
sbb
dec
or
adc
cmp
subb
or
or
push
sub
adc
les
scas
jg
pushl
lahf
push
sub
xchg
arpl
dec
sbb
cmp
jg
jge
call
jns
mov
ljmp
imul
xlat
divb
aaa
xchg
mov
jp
or
sbb
in
shll
popa
mov
push
adc
incl
inc
enter
mov
mov
add
adc
inc
repz
or
test
xor
mov
fisubs
ljmp
adc
cli
ljmp
loope
ljmp
jbe
cmc
out
ret
leave
ljmp
xchg
jle
movsl
pop
mov
inc
lcall
mov
pop
sbb
shlb
pushw
sub
jmp
decl
pop
cwtl
xchg
pop
imul
nop
jae
loop
dec
sbb
cmpb
add
call
mov
push
push
subl
inc
jns
xor
loop
dec
addr16
hlt
mov
mov
ljmp
jnp
and
nopl
mov
incl
aam
jne
jnp
push
ret
adc
jae
cmp
leave
mov
lcall
mov
es
dec
ljmp
xor
sub
pop
ds
sahf
sbb
inc
pushl
dec
xchg
xor
xor
or
ljmp
imul
jmp
ret
out
mov
repz
nop
xor
enter
fs
pop
mov
decl
test
mov
push
sub
es
xchg
nop
mov
or
sub
sbb
decl
cmp
std
ret
push
or
rcl
test
ret
sbb
popf
test
push
push
fdivs
call
ret
or
xor
push
in
mov
push
jno
pushl
stos
adc
cmp
inc
jle
stos
scas
data16
aam
into
aam
test
jo
ljmp
clc
pop
out
iret
test
in
jl
aaa
pop
jmp
inc
pop
ret
xchg
outsb
call
les
roll
mov
ficoms
fidivl
xchg
inc
fxch
ja
movl
jmp
fnstsw
jne
cmp
fld
xor
into
mov
call
ret
jns
dec
into
dec
popa
dec
cs
jmp
mov
jge
sbb
dec
ljmp
and
lahf
subb
sbb
lods
push
cwtl
cmp
ds
sar
lds
sbb
movsb
ja
push
je
sub
lret
mov
sub
repz
cmpsb
jl
mov
in
stos
fs
xchg
xor
dec
inc
dec
jp
cld
sub
mov
mov
jge
pop
lahf
xchg
pop
sub
mov
mov
lea
push
sbb
dec
cmp
jmp
subb
orb
fisttps
mov
test
shlb
mov
xor
hlt
fs
in
mov
mov
es
clc
pop
xchg
fiadds
testl
mov
push
mov
pop
lds
loop
jno
mov
mov
ljmp
pop
out
fcomps
and
ss
inc
data16
decl
pop
mov
loopne
mov
xor
add
and
add
ljmp
sub
es
mov
xchg
sti
cmp
test
fstpt
mov
outsl
add
inc
clc
decl
mov
or
adc
ljmp
xchg
push
xlat
fstps
push
add
sbb
fildll
mov
jg
pusha
or
cltd
sbb
and
call
mov
pop
mov
xor
push
sbb
sub
popa
lods
incl
popf
inc
mov
clc
jle
out
dec
push
pop
aad
inc
int3
data16
adc
lock
push
leave
cmp
enter
pushl
call
outsb
movsb
xchg
mov
pop
loope
sti
enter
xchg
pop
hlt
mov
insb
push
out
cli
faddl
add
adc
jnp
sbb
dec
test
ljmp
fistpl
and
aad
and
cmp
dec
outsb
cld
les
mov
out
mov
and
pop
inc
push
out
inc
lret
icebp
jge
int3
popa
jmp
sti
mov
sarb
add
int
inc
sbb
xor
mov
std
jno
sbb
jns
mov
cmp
mov
pop
and
lahf
js
test
sbb
rcrb
fs
jb,pt
pop
sub
decl
cmp
adc
pop
adc
add
mov
mov
sub
ljmp
insb
jb
mov
shl
cmp
cld
add
rcrb
arpl
sti
out
lcall
mov
popa
inc
dec
or
lahf
or
shlb
xor
jne
inc
mov
loop
js
inc
fistpll
mov
dec
xor
les
adc
loope
mov
int3
in
pop
lret
push
subb
movsl
jae
xchg
xchg
adc
push
ret
cld
sbb
arpl
std
pop
lock
jmp
push
enter
inc
in
cli
sub
mov
incl
cld
inc
mov
ds
ja
sbb
lods
int
jge
jg,pn
cs
pop
cld
dec
fisubrs
sar
mov
xchg
std
repz
ds
xchg
lcall
mov
inc
dec
and
lret
pusha
pop
and
sbb
xchg
sbb
decl
addr16
push
inc
int
int
sahf
fwait
mov
das
jmp
pop
push
adc
ljmp
into
xchg
add
cmp
std
mov
xchg
fidivrs
ss
pop
sub
decl
and
mov
sbb
and
or
or
jg
jecxz
lcall
popa
jmp
sti
cmpsl
stos
xchg
xor
or
es
ljmp
subb
jae
hlt
cmp
cli
stos
mov
xor
es
aam
inc
xlat
scas
lds
push
xor
sbb
in
inc
dec
pop
fdivrs
fs
dec
call
scas
int
mov
xchg
dec
xor
sbb
lahf
xor
call
mov
popf
push
inc
sbbb
cmp
ds
in
add
call
push
dec
insl
xor
cmp
roll
adc
mov
jb
push
mov
cmp
sub
add
mov
std
int3
mov
inc
xor
inc
into
sbb
xchg
cmpsl
scas
fbld
mov
jle
out
xchg
and
jo
js
pop
lods
jnp
cmp
roll
stos
mov
jmp
mov
in
lret
lods
mov
loop
mov
push
cmp
rorb
mov
add
fnstenv
mov
sbb
call
xlat
popa
xchg
push
enter
lock
test
add
inc
push
lcall
mov
out
cmp
add
decl
repnz
cmpsb
hlt
xchg
or
or
sbb
iret
dec
repz
clc
cmpsl
pop
stos
lret
addr16
jmp
sti
mov
int3
pusha
popa
ljmp
and
mov
aam
adc
mov
mov
dec
cmpsb
xchg
or
cwtl
test
sub
je
pop
cmp
decl
mov
jmp
int
aam
pop
sahf
sbb
std
lock
mov
xor
add
jg
lds
insl
leave
sbb
std
sub
push
jne
cmp
leave
xchg
incl
das
pop
cmp
sub
test
scas
mov
cmp
test
adc
in
push
push
dec
inc
sub
and
stos
jns
fsubl
outsl
mov
jnp
pushf
nop
sarb
call
lcall
xor
push
mov
inc
pop
pop
icebp
sub
xor
repz
loop
pop
adcl
clc
adc
js
jmp
int3
outsb
ja
out
pop
rorl
shrl
inc
push
add
push
ror
adc
mov
inc
ljmp
mov
sbbb
out
push
fisubl
mov
cwtl
pop
cwtl
cmpsl
mov
push
insl
jae
dec
and
mov
add
push
lret
pop
popf
mov
sbbb
inc
inc
cli
cmp
mov
jbe
pop
push
clc
in
cmpsb
jecxz
out
push
in
pop
cld
mov
outsb
jmp
std
jne
loopne
push
fists
std
jge
jle
add
jno
stos
fildll
mov
ljmp
sahf
cmc
mov
inc
adc
xchg
popf
in
repnz
mov
roll
in
in
xor
dec
lcall
call
fldl
sub
out
repnz
test
incl
push
test
cmp
sub
push
inc
mov
mov
cmp
out
sub
loop
add
push
pop
jne
mov
inc
xchg
addr16
stos
fisttpl
pop
aam
sbb
data16
mov
ljmp
int
adc
pop
inc
push
adc
mov
stos
int
add
pushl
cwtd
les
jno
test
cmc
push
cmpsl
adc
enter
inc
adc
stos
jb
incl
arpl
push
ss
outsb
xchg
mov
incl
shl
xor
ljmp
outsl
je
gs
cld
call
dec
or
adc
mov
adc
add
sbb
stos
mov
int3
adc
into
out
cmp
lods
inc
clc
call
clc
shll
mov
jg
xchg
pop
mov
sti
mov
dec
xor
out
sar
add
enter
subl
xchg
and
ljmp
rclb
push
ret
or
stc
leave
sarw
or
sbb
cmp
decl
cli
adc
ss
jo
push
sbb
lcall
add
jg
addb
inc
mov
je
popa
bound
push
fstps
xor
stos
mov
mov
pop
sbb
jne
mov
pop
cld
out
js
into
ficoml
mov
jbe
mov
add
adc
or
ja
xor
sbb
cmp
lahf
std
xchg
cmp
jl
mov
and
clc
pop
jae
add
repnz
jg
into
adc
cli
sbb
cs
shlb
das
test
inc
jae
imul
sub
pop
and
decl
mov
jnp
mov
adc
xchg
cli
sub
popa
arpl
lret
xor
divl
xchg
test
std
incl
lret
and
iret
push
pusha
jae,pt
mulb
xor
jo
pushw
inc
lods
push
mov
mov
and
test
xchg
or
add
inc
dec
or
mov
sbb
sbb
mov
fstpt
xchg
lret
test
ret
das
jmp
push
push
lcall
xchg
dec
push
stos
inc
or
inc
imul
pop
cmpsb
mov
in
pop
jno
push
fsubp
add
push
jge
js
pop
xchg
xchg
sub
data16
add
nop
es
jns
out
cmp
es
mov
adcb
cmc
add
pushl
inc
xor
shll
imul
mov
mov
cs
jp
or
call
out
dec
mov
ja
inc
mov
jb
addb
pusha
cli
pushl
adc
cld
sar
out
dec
xchg
pop
and
pop
push
push
pop
js
xchg
mov
pop
xor
call
movsb
scas
and
das
inc
ljmp
std
and
cs
fs
lret
nop
and
imul
call
jne
cmp
test
lcall
orb
shl
ror
jecxz
jg
cld
test
fs
cmp
push
lcall
stc
dec
add
ljmp
add
mov
cs
sub
fwait
loope
push
lcall
movsl
out
sarb
test
xor
jae
push
pop
dec
mov
aad
sbb
sub
ljmp
enter
jl
fnstenv
mov
jno
pusha
mov
jp
jmp
arpl
fistpl
and
les
and
push
imul
dec
xlat
and
jno
cli
mov
jae
pop
and
inc
shll
icebp
ss
dec
and
sbb
rolb
ljmp
outsl
and
mov
adc
mov
outsb
jle
push
fstpt
cmp
pushf
negl
lcall
test
xchg
out
inc
outsl
cli
lret
inc
cmpsl
xlat
jge
insl
sbb
imul
call
lds
test
sbb
cmp
dec
dec
movsl
outsb
fildl
mov
lcall
jecxz
mov
into
decl
pop
jne
or
sub
mov
repz
stc
out
insl
mov
inc
and
inc
in
lcall
jmp
test
xchg
aas
adc
in
es
cmp
idivb
hlt
mov
out
movsl
push
push
rcll
mov
add
call
xchg
or
movsl
push
add
popf
or
es
dec
xor
jg
pop
iret
ret
xchg
add
inc
pushl
pop
dec
ja
inc
loopne
sub
js
ja
or
repz
pop
in
adc
shll
arpl
out
dec
xor
scas
out
mov
push
or
or
rolb
or
mov
lods
ret
push
aam
addb
decl
dec
xchg
mov
jmp
add
mov
bound
dec
ficompl
mov
jle
mov
fsub
jns
rcll
fsub
xchg
jge
cmc
mov
nop
jne
push
push
pop
ljmp
mov
dec
cmp
sub
jg
mov
inc
popf
in
sbb
ja
iret
rolb
imul
xor
and
mov
call
cli
shll
jcxz
lods
dec
xlat
daa
mov
dec
arpl
lret
jg
push
dec
mov
outsl
adc
xor
lret
pop
ficoml
lcall
lcall
cli
jno
xor
sub
adc
cmc
sbb
scas
aas
mov
add
sub
insl
cld
mulb
jbe
pushw
hlt
mov
dec
xor
dec
fs
sbbb
inc
cmc
mov
outsl
sbb
dec
outsb
fdivl
in
fsubrp
push
sar
cmp
ret
sahf
dec
mov
ja
mov
cmpsl
lock
jbe
mov
ljmp
xchg
sub
and
iret
rcrb
sar
xchg
sub
xchg
fistl
fs
jg
flds
pusha
jg
sti
mov
mov
pushf
jb
adc
push
jb
jmp
jecxz
sub
pop
clc
dec
faddl
cmp
and
or
push
cmp
mov
pop
dec
add
decl
and
push
int
xor
std
arpl
xchg
and
and
adc
mov
pop
xchg
adc
out
andb
xor
aad
call
push
sarl
leave
pusha
push
lret
std
mov
mov
in
pop
imull
inc
das
rcrl
sub
aad
popf
sub
add
ljmp
pop
sbb
hlt
jg
mov
fildl
xor
xchg
jl
bound
mov
dec
and
push
add
jmp
jo
ljmp
ljmp
cmp
repnz
imull
cwtl
cmpsl
leave
inc
stos
aas
jne
or
test
cmc
adc
mov
and
inc
jle
jne
dec
xchg
xor
pop
dec
or
ja,pt
pop
lcall
enter
xlat
sub
dec
outsb
int3
or
dec
cmp
ret
mov
aas
mov
decl
subb
xchg
mov
mov
xacquire
insl
push
inc
jg
cmp
sbb
mov
pop
scas
arpl
shlb
decl
and
dec
fsubrl
das
inc
mov
push
int3
dec
mov
mov
cli
lcall
leave
xchg
push
mov
sbb
insb
insl
cmc
push
loope
in
shrl
xor
mov
fdivr
decl
aas
mov
out
push
mov
pop
imul
xchg
or
and
xor
ret
aaa
mov
xchg
dec
adc
lret
pop
mov
jge
cs
aad
gs
mov
or
add
push
jg
dec
rcl
fcmovb
pop
cmp
mov
out
adcb
jo
mov
adc
out
decl
aas
popa
ljmp
or
fs
shlb
adc
inc
inc
mov
leave
mov
fucom
mov
mov
imul
adc
out
or
pop
lret
test
jg
inc
push
add
ss
popf
pop
icebp
ret
fisttps
pop
mov
scas
cli
fsub
mov
ret
xor
pop
sbb
addr16
fs
decl
push
sti
out
push
xor
into
mov
sbb
in
cmp
adc
fbld
sbb
mov
mov
dec
dec
stos
xchg
scas
jo
mov
mov
call
sub
or
stos
aam
adc
enter
inc
pop
or
ljmp
inc
mov
jg
dec
in
xlat
nop
mov
loop
jecxz
in
xchg
dec
xor
jmp
rorl
int
xor
push
in
js
mov
leave
sub
notb
add
mov
jle
jnp
pop
or
je
repz
pop
inc
jae
xor
ss
sub
call
lea
add
or
std
testb
or
pop
sub
fstl
clc
mov
sub
data16
jno
push
insb
cltd
lret
or
incl
push
xchg
xor
sbb
mov
sub
sub
jns
pushl
push
and
xchg
negl
idiv
mov
notb
sahf
xor
data16
in
inc
sbb
data16
push
xchg
cmp
scas
inc
aaa
fistl
dec
jp
test
mov
popa
inc
push
cmpb
xchg
lods
pop
pop
fisttpl
inc
jbe
cmp
out
rorl
push
stos
lods
inc
pop
adc
sbb
push
jbe
mov
sti
clc
inc
sbb
jle
aas
inc
pop
sti
cmp
cmp
enter
pop
pop
data16
bound
loopne
call
stc
push
out
jecxz
gs
sbb
mov
add
dec
test
jne
call
rolb
xchg
gs
sub
mov
repz
pop
mov
in
lcall
les
sarl
xorl
jae
sub
arpl
insl
and
cs
repz
nop
sub
xchg
jge
incl
and
int3
aam
lret
aam
je
fs
xorb
or
cmp
jmp
dec
cld
mov
or
daa
lods
subl
xchg
pop
push
decl
cmp
clc
jbe
stc
xchg
or
mov
push
jle
sub
fdiv
fwait
cmp
ljmp
cli
jns
dec
jae
ja
scas
dec
dec
sub
dec
push
mov
dec
push
cltd
pop
mov
orl
push
mov
lock
arpl
push
fisttpl
test
dec
and
jp
cmp
xor
xor
push
js
xor
pushl
dec
mov
jns
inc
mov
add
dec
mov
mov
or
lods
lea
lret
aaa
xor
mov
mov
ja
jp
andl
negb
call
adc
or
es
jae
int
sub
decl
out
jmp
xlat
pop
push
aas
push
ds
xchg
pop
flds
loope
imul
js
shlb
jge
xchg
dec
pushf
mov
std
test
mov
andl
dec
out
pushf
add
clc
cli
pushl
xchg
dec
aaa
xlat
in
sub
outsl
adc
cwtl
lret
call
rol
out
or
fnstcw
inc
xor
mov
xor
sub
dec
call
ja
lcall
bnd
xor
bt
test
push
out
and
fmul
sbb
adc
scas
test
jmp
dec
pushf
adc
fs
xor
xchg
dec
pop
sub
push
lret
pop
aad
icebp
push
cmp
fmul
outsb
and
or
stos
jmp
xor
pop
jbe
pop
subl
sar
add
orl
shr
sub
movhps
ljmp
inc
mov
popa
cmpb
push
mov
out
cmp
push
add
lret
jno
xor
incl
or
jnp
pop
negl
inc
lea
sbb
test
push
push
flds
fcomip
call
ret
pop
jo
and
sahf
pop
add
mov
outsb
faddp
aam
and
js
cmp
sbb
ss
jno
aaa
stc
inc
mov
filds
loopne
push
int
out
xor
ljmp
cli
mul
push
mov
or
addr16
ret
hlt
jns
xchg
data16
inc
pop
insb
insl
es
bound
fists
xchg
pusha
sub
cmp
inc
outsl
jg
adc
mov
sbb
pop
or
out
jo
xor
jno
or
push
test
mov
push
dec
xchg
incb
pop
imul
cltd
xchg
xchg
sub
ret
dec
pop
mov
xchg
xor
mov
lcall
push
loopne
mov
mov
dec
sub
inc
movsb
pushf
test
jmp
fdivs
mov
gs
dec
dec
sbb
pop
out
cli
out
pop
cmp
mov
pop
pop
orl
scas
out
mov
mov
mov
popf
je
mov
pushl
cmp
js
add
push
notl
iret
fnstenv
aaa
push
mov
sbb
ljmp
cmpsb
adc
arpl
sub
cmp
xchg
out
jb
pop
adc
scas
fdivrp
pushl
les
aaa
out
dec
push
inc
mov
dec
push
sbb
iret
sbb
jb
into
lret
mov
jmp
test
movsl
and
jo
mov
add
jg
movsb
xchg
sahf
nop
pushw
insl
sbb
and
cmpsb
mov
in
pop
mov
inc
pusha
ljmp
cli
jg
jae
xor
xchg
cmpsb
gs
mov
dec
cmp
add
jmp
sbb
shll
je
aam
cwtl
sarb
mov
xchg
insb
mov
pushl
push
adc
mov
pop
test
nop
ret
cs
arpl
data16
decl
movsb
lock
or
and
pop
nop
adc
sbb
add
ds
jmp
stos
cmp
xor
lea
dec
pop
dec
rcrb
and
and
cltd
test
std
jmp
inc
mov
xorb
xchg
cmp
aaa
sbb
mov
call
push
dec
fs
or
cli
jl
jne
dec
mov
and
jns
mov
decl
outsl
arpl
cmpsl
dec
imul
push
js
mov
outsb
pusha
xchg
repnz
lods
push
lock
mov
fisttps
das
pop
xor
jmp
mov
xor
das
sub
movsb
test
sub
mov
mov
ljmp
add
scas
pop
testl
popf
dec
das
dec
lret
and
add
pop
inc
mov
inc
jns
ret
in
lcall
cmpsl
jnp
push
mov
arpl
lea
mov
mov
loop
adc
incl
inc
sbb
in
sbb
or
cs
add
cmp
es
ja
call
and
cmp
sub
xchg
jns
push
mov
inc
orb
add
ljmp
mov
push
xchg
in
and
in
sub
adc
sbb
xchg
cmpsl
and
cs
ljmp
adc
insl
sbb
ljmp
adc
dec
cli
and
in
adc
fldl
ljmp
enter
sub
cmp
and
pop
fwait
sub
cli
jg
cmp
push
push
push
add
xchg
xchg
and
dec
mov
sub
test
mov
stc
jmp
inc
addr16
and
xchg
add
cmpsl
je
je
inc
jae
mov
stos
and
call
int3
and
and
jno
push
sbb
pop
cli
out
nop
fisubrl
scas
fldt
jecxz
je
fcomip
call
inc
and
sub
sti
pop
insb
pop
iret
or
orl
imul
stos
fidivrl
pop
outsb
cmpsb
xor
cmc
or
fxch
xor
int3
and
or
stc
jmp
inc
nop
pop
xchg
cmp
sbb
sub
push
ljmp
xchg
mov
push
ret
dec
ficoml
xchg
jle
iret
cmp
call
dec
dec
sub
lahf
movsl
push
add
daa
outsl
mov
fcoms
fdivl
das
or
lret
cmpsb
pop
push
inc
test
ljmp
popa
xor
mov
jp
xor
cmpsb
out
and
pop
mov
dec
lret
fcomip
decl
sub
testl
cmpsb
push
ss
sbbb
or
int
xor
jae
leave
outsl
pop
ror
pushf
xchg
xchg
loopne
inc
pop
lock
pop
sbb
cmc
js
jmp
or
out
fucom
loopne
inc
push
fiadds
subl
mov
cli
pushl
cmp
roll
andb
pop
incl
or
push
mov
lcall
mov
cld
push
into
inc
xor
mov
out
les
stos
push
cmp
decl
rcll
mov
icebp
xor
dec
mov
adc
xchg
scas
int3
mov
int3
call
inc
mov
sbbl
ret
xor
mov
aas
movsb
ds
xchg
ret
mov
jmp
adc
and
push
cmpsb
xchg
sbb
stos
inc
or
enter
jmp
aam
push
ljmp
scas
and
inc
sub
fdivrp
aaa
pop
or
lds
add
dec
jp
or
pushl
mov
mov
sbb
into
pop
jnp
nop
sar
call
pop
lret
clc
xor
push
jg
push
popa
sub
test
std
incl
repnz
mov
or
stos
xor
es
push
mov
out
rcrb
cli
call
inc
cmp
addr16
mov
repz
sbb
fistpl
mov
mov
loopne
movsb
mov
push
add
cld
or
and
mov
ds
mov
add
inc
mov
aaa
std
ljmp
loopne
or
push
sbb
adc
dec
sub
mov
cmpsb
push
mov
ret
stos
xor
jge
dec
mov
jg
jl
test
mov
call
mov
test
roll
lret
mov
pop
icebp
cmp
loop
or
call
add
mov
stos
cmp
pop
shrb
es
test
push
outsb
and
loope
mov
sbb
imul
iret
sub
mov
aam
inc
sar
mov
sub
lock
scas
jmp
jb
int
mov
ljmp
popf
push
and
adc
je
adc
or
jbe
mov
ljmp
jmp
inc
and
dec
jl
mov
cmp
xor
dec
arpl
inc
add
jmp
jg
pop
pop
mov
out
mov
fcomip
scas
test
fidivs
hlt
loopne
push
fcompl
lods
push
out
cli
sub
inc
jmp
inc
in
jle
jno
sub
lock
push
sbb
stos
jmp
xchg
call
mov
imul
js
rolb
loope
fcmovne
dec
imul
jmp
or
cltd
imul
mov
movsl
rcl
lret
leave
add
je
inc
outsb
call
mov
and
in
jno
int
outsl
daa
les
rclb
sahf
push
cli
add
in
inc
lock
dec
xor
lea
hlt
inc
clc
jg
dec
in
cld
hlt
pusha
jnp
roll
sub
jle
pushl
cmp
mov
negl
sub
ret
lods
lds
sbb
push
pop
ljmp
clc
sbb
out
mov
pop
pop
daa
xchg
xchg
cmc
push
jp
mov
popa
aam
ljmp
jb
lock
bound
cli
mov
cli
add
push
sub
sub
hlt
ds
xchg
mov
dec
ret
arpl
xor
adc
mov
jmp
sub
push
int3
adc
dec
jne
movsl
mov
dec
ret
cld
mov
ret
adc
call
push
out
bound
aas
pop
push
add
lcallw
xorl
outsl
mov
sub
fldcw
pushf
sub
pop
xor
into
add
sub
add
dec
ss
and
mov
sbb
in
sti
in
call
scas
sub
sub
sbb
lret
mov
jg
mov
ret
sbbl
repnz
popa
out
jo
jmp
jp
lret
or
in
roll
sbb
rcrb
lods
xchg
xchg
lret
jl
jmp
or
das
insl
into
push
hlt
movsl
jo
shll
movsb
fmull
fwait
js
mov
ljmp
test
or
and
mov
mov
aad
roll
xlat
cmpsl
jmp
jmp
cltd
outsb
lcall
sbb
fwait
sbb
ljmp
js
pusha
xor
jg
jge
pop
inc
pop
sub
and
repz
sub
add
in
fucomi
pop
popa
outsb
in
je
jg
outsl
jbe
sti
jnp
aam
push
js
test
xor
xor
incl
fildl
push
pop
sub
jb
ljmp
daa
sub
out
call
call
and
pop
dec
cs
sbb
xorl
mov
aad
mov
sub
or
ss
mov
in
sub
jbe
cmp
push
dec
popa
adc
into
int
dec
cmpsb
sbb
sahf
mov
cld
push
rol
stos
shlb
pop
mov
out
popf
xor
decl
mov
stos
push
dec
push
ret
push
mov
adc
add
fnsave
icebp
sbb
mov
pusha
push
sti
sti
mov
lds
je
inc
outsl
jg
push
dec
lcall
inc
inc
mov
adc
lcall
xor
inc
xor
cwtl
mov
dec
push
mov
and
cld
ljmp
lret
lahf
mov
inc
fisubrs
and
fs
gs
decl
inc
aam
cmp
pop
sub
add
testl
cmp
aas
xor
mov
cmp
mov
cs
sbb
int
jne
add
idivb
cmpl
mov
dec
pushf
inc
cmp
ss
test
mov
adc
imul
fwait
ss
cmp
repz
cmp
dec
rolb
inc
lcall
and
lea
ret
js
sub
xor
bound
orb
push
cmpl
inc
shlb
xchg
push
push
jg
jmp
loop
dec
ss
sbb
pop
movsl
cltd
negb
sbb
mov
aad
idiv
jp
cmp
and
push
loop
push
mov
push
push
lcall
scas
jns
je
hlt
pop
dec
cld
decl
mov
mov
test
aas
or
dec
sbb
jmp
cmp
xor
mov
inc
sbb
push
pop
add
rcll
testb
les
lcall
test
and
xor
inc
cld
dec
data16
dec
xchg
pusha
adc
decl
aam
jnp
add
dec
dec
pop
movb
ret
test
inc
mov
insb
shrb
sub
sbb
shl
dec
out
mov
in
mov
sbb
clc
sbb
in
pusha
loop
dec
aas
je
adc
add
mov
push
loope
aam
jae
xor
mov
ljmp
and
out
mov
ror
ja
jg
xor
lret
mov
mov
lea
call
std
call
fwait
inc
xchg
push
mov
lock
sbb
loop
lea
test
sub
xor
and
lcall
inc
and
dec
shll
push
dec
icebp
das
shl
mov
cli
decl
repz
jge
mov
xchg
mov
lea
sub
call
test
xlat
xor
stc
mov
pop
and
push
clc
scas
scas
stos
adc
adc
cli
cs
pop
outsb
ds
sti
shlb
adc
popa
sub
call
cmp
iret
jnp
jnp
push
pusha
and
pop
cmp
incl
ret
lcall
jmp
fcoms
and
jnp
mov
or
jmp
leave
mov
mov
test
popf
popf
orb
mov
cmp
sbb
pop
lcall
lcall
loopne
xchg
xor
icebp
test
fldl
push
out
adc
shrl
adc
sbb
jne
mov
insb
jno
inc
mov
sbb
dec
sub
mov
jmp
pop
mov
or
mov
lcall
fsubrs
fdivrs
loope
decl
mov
add
sub
xlat
add
mov
cli
cmpsl
mov
dec
dec
cwtl
pop
sbb
out
cwtl
pushf
lahf
lock
jle
mov
stos
ja
jo
movq
inc
clc
scas
cli
mov
stos
mov
pop
sub
jo
cmp
jmp
and
mov
mov
rolb
je
xchg
xchg
xor
pop
icebp
inc
push
fidivrl
sarb
cmc
ja
mov
imul
mov
jmp
clc
aam
sbb
dec
inc
sti
pop
mov
ja
push
fcoml
imul
mov
aam
sarb
xchg
lock
jle
mov
push
sbbl
incl
outsl
je
sbb
dec
popf
fisttpl
stos
bound
jge
cmpsb
or
pop
mov
add
decl
push
cwtl
add
cmc
fldenv
sub
sbb
lret
xor
mov
cmp
push
stc
inc
aad
mov
jnp
adc
xchg
mull
test
incl
decl
pop
or
mov
dec
in
mov
adc
adc
jb
in
jle
lret
cmp
decl
inc
out
cmpsb
and
mov
les
bound
leave
fcoml
cmpb
incl
and
push
lcall
push
mov
xor
hlt
xor
pushf
xor
sbb
push
pop
lahf
mov
mov
jae
pop
pop
xlat
imul
addr16
jae
mov
cwtl
cmp
insl
mov
mov
jae
mov
dec
dec
dec
mov
mov
mov
outsb
sahf
or
mov
sbb
or
clc
incl
mov
movsl
lahf
dec
js
ftst
stos
jp
rclb
movsb
div
int
ljmp
sbb
mov
xchg
ja
cld
fdivr
fbstp
add
inc
jnp
mov
add
fbld
cld
call
push
xchg
pop
jbe
cmpsb
mov
in
mov
and
pushl
mov
mov
xchg
fmuls
stc
push
popa
pop
pushl
roll
cmp
push
jmp
jbe
pop
push
cmp
pop
test
dec
inc
jns
out
sbbb
and
jl
pop
and
loopne
call
and
jne
add
xchg
mov
int
xchg
or
or
dec
iret
popa
fdivr
ljmp
enter
loopne
sub
ds
sub
rcrb
fwait
fwait
jge
add
or
jbe
cmp
test
ja
dec
jo
int
mov
decl
dec
call
ljmp
push
sbb
out
dec
icebp
call
jno
add
inc
lcall
fimull
inc
sbb
push
push
inc
sub
adc
cltd
mov
dec
lock
jmp
mov
cmpsb
jae
mov
inc
jb
outsb
mov
add
into
or
call
jnp
push
mov
jb
inc
push
loopne
or
dec
pop
popa
enter
mov
std
mov
loope
in
inc
pop
daa
sub
cmp
xor
push
iret
fwait
lret
aaa
je
adc
mov
and
inc
cs
cmpsb
js
icebp
xchg
cmp
inc
pusha
out
ja
call
outsb
imul
pop
arpl
ja
or
imul
mov
ds
push
push
insl
int3
aaa
add
imulb
or
out
add
pop
push
fsubrl
sbb
cli
jg
xchg
out
and
xchg
jnp
jecxz
adc
xchg
add
push
pop
rcll
call
test
cwtl
cmpsb
mov
lods
test
fmuls
ds
aaa
std
adc
xchg
mov
call
mov
ror
push
xor
ljmp
push
lahf
push
mov
stos
nop
cmp
test
sub
sub
inc
mov
jecxz
cli
ljmp
inc
mov
int3
sarb
fadd
pusha
dec
fisttpl
adc
pop
call
mov
lods
fwait
and
xor
push
lods
add
jp
ljmp
lods
dec
aaa
lea
pop
das
sbb
jl
leave
lcall
cmc
not
xor
sbb
arpl
add
push
repnz
std
test
and
jmp
mov
cmp
ljmp
sub
fiaddl
lret
sub
es
mov
push
sub
adc
int3
inc
push
inc
push
incl
in
and
push
pusha
leave
dec
xlat
sub
popf
cmp
pop
push
int3
cmp
inc
pop
mov
ljmp
in
xchg
addl
push
outsl
inc
scas
clc
incl
pop
mov
daa
cmp
dec
imul
jmp
push
mov
xchg
daa
loope
sbb
and
daa
jne
or
mov
mov
cld
call
jae
scas
icebp
lahf
push
jns
xor
jbe
mov
imul
fwait
dec
push
lret
mov
mov
push
mov
cmpsb
inc
mov
jne
dec
ss
push
mov
lods
push
or
xchg
incl
jb
fwait
insl
fwait
out
out
sahf
cmp
test
pop
arpl
in
cmpsb
pushl
mov
inc
les
jg
stc
and
lcall
andl
pushl
mov
push
lahf
jge
js
mov
inc
inc
sbb
mov
int
lcall
insb
dec
cmpsb
pop
shll
xor
aaa
adc
int
jg
ljmp
jo
lret
into
bound
sub
loopne
and
scas
aas
dec
dec
lods
inc
enter
inc
sub
push
movl
imul
jge
lahf
pop
lds
mov
nop
aam
incl
jno
outsl
and
cmp
mov
pop
or
lock
int
mov
lock
cld
ds
or
xchg
das
mov
xchg
cli
sbb
mov
add
cld
cmp
push
pop
loope
mov
push
dec
call
mov
icebp
in
xchg
cmpsl
cmc
cmp
addl
rcr
shll
push
lock
call
outsb
and
ljmp
mov
jno
in
test
ljmp
mov
or
lahf
repz
pop
mov
add
inc
roll
push
xchg
stos
xrelease
movsb
push
hlt
mov
in
push
loope
cs
call
cmpsb
test
mov
pop
mov
cli
and
jmp
xor
clc
dec
sbb
cmp
jmp
fldcw
fstps
stc
lcall
pop
sbb
insl
jns
popf
add
jg
and
sub
fdivrl
pop
popa
adc
test
call
loopne
test
not
lahf
jle
cmp
xlat
call
inc
pop
jns
popf
sub
jnp
insb
int
das
icebp
int3
jg
dec
scas
add
dec
inc
add
jp
and
pop
inc
cmp
push
in
mov
andl
fnstenv
add
pop
sub
mov
cmovbe
das
or
mov
incl
sbbb
sti
adcl
adcl
xor
dec
cmp
cmp
out
pop
cmpsb
clc
sub
call
fimull
mov
cmp
iret
inc
adc
and
push
inc
call
jo
rcrb
cltd
mov
fimuls
or
incl
mov
xor
fsubrl
lock
inc
out
mov
lcall
sub
adc
repz
add
les
mov
mov
push
dec
jo
pop
test
jmp
stos
ficompl
xchg
into
dec
out
test
push
sti
fistpl
mov
je
ljmp
ret
leave
mov
lahf
subl
insl
pop
inc
test
ud0
xchg
lods
mov
add
ja
into
jmp
cmpsb
inc
aam
fdivrl
mov
std
insl
push
incl
push
mov
stos
mov
fprem1
dec
jmp
fnsave
lcall
mov
mov
pop
sbb
fcmovbe
out
mull
mov
stos
xchg
ss
push
pop
jg
sub
dec
mov
push
mov
cld
call
fistps
in
shll
xlat
dec
mov
sbb
popa
jmp
ljmp
aaa
fiaddl
test
and
inc
dec
sbb
jb
dec
push
fwait
add
lcall
call
add
int3
test
or
sub
add
mov
xlat
push
stos
fmul
inc
fwait
incl
push
sbb
scas
mov
leave
pop
fidivrs
incl
in
int3
ret
mov
insb
sbb
add
xor
pop
sub
shll
lock
aad
icebp
bound
cmpb
fcom
mov
call
imul
mov
ljmp
dec
ljmp
test
test
pushf
mov
add
or
pusha
lcall
lahf
push
aas
scas
add
in
mov
push
in
aas
loopne
inc
and
in
fcomip
lcall
mov
pop
out
daa
push
sub
add
pop
rol
or
arpl
jmp
inc
test
mov
loopne
inc
dec
push
loopne
cmp
push
ljmp
loopne
call
cld
ret
mov
cmp
call
cmp
repz
in
add
lcall
icebp
aad
jl
movsb
jno
outsl
ret
xchg
mov
mov
mulb
jmp
mov
push
jo
mov
in
jle
sbb
iret
jne
das
mov
fst
cmp
rorb
lcall
xlat
nop
adc
jno
dec
adc
or
xchg
loop
sub
cli
adc
orl
cmp
repz
repnz
sub
jg
mov
mov
xor
movsl
dec
add
pop
movb
and
adc
pop
mov
lret
xchg
or
pop
cmp
jae
mov
test
pushl
out
jg
fsubs
ret
cs
jmp
jl
dec
cmp
xchg
or
xchg
fldt
jno
ficompl
lcall
mov
and
notl
dec
adc
test
hlt
pushl
jno
leave
shll
or
sub
loop
sbb
push
mov
adc
aad
push
mov
push
push
cs
or
addb
jmp
scas
jl
xchg
xor
inc
pushf
std
mov
pop
jno
clc
and
lret
mov
outsl
aaa
stos
pop
cmp
mov
push
imul
adc
mov
mov
add
fwait
and
sub
inc
pop
fbstp
nop
push
mov
je
jecxz
sbb
inc
xchg
stos
fisttpl
pop
das
repnz
inc
clc
notl
popf
pusha
ja
and
jecxz
pop
rclb
test
jmp
pop
addr16
adc
push
aas
idivb
pop
stos
pop
arpl
xor
cmp
jnp
in
aad
or
popf
mov
mov
lcall
jmp
ss
cmc
and
lea
idivl
or
inc
or
ss
decl
das
mov
mov
aad
sub
inc
and
or
or
aaa
jl
sub
cmp
dec
and
lds
into
fmull
ds
sub
cmp
cmpl
lods
or
out
ror
sahf
sahf
push
or
mov
lcall
pop
sahf
test
dec
jnp
fsts
int3
das
fcompl
daa
popa
loop
test
aaa
push
jmp
std
xchg
push
mov
mov
cmp
mull
jae
add
xor
incl
lock
dec
in
sbb
push
and
arpl
cmpsb
incl
test
mov
sub
cmp
mov
push
dec
mov
call
sub
pop
jno
mov
push
popf
imul
shl
sub
out
xor
pushl
jecxz
lret
test
scas
int
icebp
arpl
or
mov
jmp
nop
push
mov
lcall
inc
adc
sbb
scas
sub
push
lds
sub
xchg
jmp
pop
andl
fwait
repnz
mov
test
loope
icebp
xor
sahf
mov
lods
mov
pop
repz
xchg
dec
sbb
add
push
fwait
inc
xor
add
jmp
hlt
inc
push
clc
pop
imul
gs
xchg
and
or
jmp
pop
push
mov
fnstenv
sbb
call
loopne
sahf
or
lods
out
cmpsl
push
push
add
inc
fldcw
in
rcr
jno
jbe
adc
das
jnp
into
jbe
mov
subl
ret
add
mov
fcomi
aad
and
sbb
inc
aad
ret
jns
mov
leave
cmp
xchg
call
cmc
cwtl
and
jg
mov
inc
xchg
dec
cmp
sahf
loope
xchg
cmc
fldcw
sbb
js
call
pop
jb
vpmuludq
icebp
push
cmc
scas
and
ljmp
mov
clc
scas
push
push
or
ljmp
jl
xchg
ss
lods
pop
getsec
mov
fstpl
je
xor
push
mov
xor
jbe
cld
cmp
push
es
clc
pop
mov
fnstcw
sub
cmpb
xchg
js
dec
pop
sbb
pop
and
les
pop
shrl
sub
pushl
shlb
jnp
push
push
adcb
test
sbb
shr
pop
sarl
and
jmp
popf
pop
push
push
in
push
add
in
jge
jb
scas
sbb
js
push
xorb
sub
call
push
sbb
jne
fs
mov
jg
movsl
cmp
out
movsl
pop
andl
mov
or
fidivl
push
mov
mov
push
and
fistps
jo
pushl
add
cmc
stc
mov
cmp
shl
fmulp
bound
mov
clc
ret
out
fs
movsb
rorl
xchg
xor
sub
ss
dec
pop
imul
pusha
cwtl
sub
fcmovu
loopne
xchg
push
std
mov
test
inc
dec
in
jmp
je
in
cmp
dec
fs
fcomip
call
imul
aam
lahf
iret
xor
fsubrp
inc
mov
pop
mov
fildl
jmp
sub
push
sahf
mov
jg
mov
push
daa
fsubs
cmp
jg
push
cmpsl
outsb
sub
scas
stos
pop
test
xchg
insb
mov
gs
mov
push
xchg
xchg
popa
mov
jae
rclb
inc
into
mov
jmp
push
lea
mov
push
lcall
push
fwait
xor
or
das
pop
imul
adc
sub
push
out
cli
lcall
pop
faddl
jo
or
imul
mov
pushl
mov
mov
loop
xchg
xchg
mov
sbb
leave
into
pop
jo
fs
stc
jle
sar
jbe,pt
dec
push
mov
dec
sbb
ret
mov
adc
push
pop
mul
inc
push
xchg
push
jmp
ret
mov
cmp
xchg
mov
hlt
hlt
movsb
out
cmp
mov
sti
cmp
and
pop
pop
adc
outsl
stos
cmpsl
mov
inc
hlt
jl
adc
out
jle
ljmp
aaa
movsb
les
add
in
mov
sti
xlat
ret
cmpsb
in
ret
inc
icebp
add
or
cli
rolb
dec
out
dec
mov
stos
add
enter
push
lret
push
out
mov
psubb
xor
test
sahf
mov
pop
mov
sub
loop
decl
gs
pop
aas
mov
cmc
sub
outsl
pop
jmp
add
ret
jge
inc
xchg
cmc
lcall
mov
hlt
add
jae
psubsw
jmp
pop
add
and
or
add
cmp
lcall
fdivs
jp
cmpsl
adcb
insl
cwtl
pop
inc
sbb
scas
clc
or
mov
stos
jnp
arpl
push
call
cmpsb
jge
mov
inc
mov
mov
imul
in
pop
scas
inc
mov
mov
pop
xor
sbbl
sbb
dec
inc
das
mov
push
rclb
inc
cli
add
jbe
dec
push
push
xlat
dec
jo
add
cmp
cmp
mov
mov
aas
scas
dec
pop
lcall
cmc
je
push
mov
lock
test
call
std
lcall
inc
push
or
cmpsl
jb
add
jb
int3
scas
mov
or
jmp
jl
scas
push
jmp
xchg
add
and
pop
inc
ret
or
mov
mov
inc
popa
loope
lret
push
jns
rcl
cmp
cld
mov
testb
shll
dec
ret
push
pop
mov
sahf
jmp
jmp
fs
push
pop
fnstsw
sub
pop
hlt
test
insb
pop
loop
data16
fdivl
lret
insl
or
and
dec
imul
fsubrs
dec
lcall
ds
mov
mov
push
xchg
fcompl
outsl
inc
insl
enter
mov
in
sub
in
popa
orl
outsb
push
cmp
cmpsb
andb
ret
loop
xorl
ljmp
ds
in
leave
in
movsb
int
loopne
dec
dec
xor
divb
push
mov
push
push
sub
cmc
fbstp
mov
insb
add
and
push
inc
cld
mov
pushl
inc
dec
nop
fsubrp
ret
adc
cmpsl
je
pop
fwait
mov
pop
fstpl
inc
lds
or
add
fisubs
xlat
cmp
sub
jno
xor
jle
ljmp
clc
call
adc
out
dec
mov
push
push
les
dec
cmp
mov
mov
nop
push
popa
cmp
fsubrs
xor
adc
rolb
enter
or
jg
lods
dec
jo
xor
dec
sbb
js
imul
cmpsb
dec
jbe
daa
cmpsl
xlat
jne
lret
xchg
or
lcall
adc
es
mov
inc
push
add
push
lahf
sti
sub
call
push
repz
pop
mov
sub
jecxz
dec
mov
call
cmpsl
jp
xor
enter
rolb
adc
cmp
cs
mov
add
ds
adc
or
shrl
mov
ljmp
clc
cld
call
loopne
dec
pop
test
or
pop
in
fimull
mov
dec
cmp
push
out
jbe
in
call
push
mov
stc
mov
test
repz
push
mov
mov
bound
ljmp
nop
cmp
xchg
pop
and
fdivrs
in
je
loopne
pop
push
pusha
icebp
push
cwtl
adc
leave
push
in
inc
outsl
int3
mov
fbld
and
mov
mov
inc
lret
subl
lcall
lods
insb
out
sbb
loop
pop
push
iret
scas
xchg
cmp
cli
jbe
jg
jnp
mov
mov
mov
or
mov
mov
dec
hlt
pop
jg
jmp
enter
repz
test
int3
add
dec
outsl
sbb
xchg
pop
roll
sbbb
jmp
cmpsb
adc
addr16
and
xor
dec
test
add
decl
or
or
xchg
mov
jmp
push
lods
adc
jecxz
pop
cwtl
dec
jmp
jmp
stos
int
sub
and
and
out
xor
lods
pop
aaa
adc
or
sarl
or
add
push
gs
pop
shlb
lock
lcall
fstps
movsl
ret
mov
fdivs
xchg
xor
mov
test
fstpt
cmp
popa
jmp
sbb
mov
jmp
je
cs
aas
pop
pusha
out
xchg
orl
push
xchg
int
aaa
mov
icebp
lcall
fsubrl
xchg
jmp
popa
scas
imul
push
test
lcall
inc
ss
push
jb
into
mov
push
xlat
gs
push
mov
incl
pop
mov
xor
inc
pop
std
or
xor
mov
test
cld
sbb
out
dec
ljmp
push
mov
int3
arpl
push
cmp
into
hlt
sbb
and
xchg
jbe
or
mov
xor
jg
and
xchg
stc
xor
sub
or
push
push
in
cmp
cli
sti
jo
in
or
fsts
xchg
xchg
xchg
popf
js
test
xchg
mov
addr16
add
fistl
cld
mov
mov
test
jg
pushl
movsl
xchg
sarl
xor
adc
xor
movsb
add
pop
je
ljmp
mov
sbb
loopne
cmp
push
into
push
cmp
jg
rolb
jecxz
jp
in
push
sub
es
push
jmp
std
iret
xor
sahf
mov
mov
mov
inc
lcall
dec
imul
mov
mov
mov
shrl
xor
lret
repz
add
pop
mov
add
mov
jb
push
lea
pop
inc
pop
jno
test
pushl
iret
psubusb
pop
jmp
cld
mov
repnz
pop
xor
jg
jmp
xor
call
hlt
mov
pop
pusha
inc
sub
sbb
mov
cmp
lods
stos
xlat
xchg
ljmp
xchg
push
out
mov
in
push
jne
xchg
in
nop
int
cmp
push
lahf
frstor
mov
push
fcoml
popf
xor
push
inc
imul
pop
jae
in
push
mov
mov
xchg
insl
clc
pusha
test
mov
pop
jg
ljmp
ja
pop
sbb
dec
rolb
dec
sub
or
repnz
outsb
sub
pop
decl
mov
push
cli
lods
push
mov
shlb
cmp
pushl
loop
addr16
cmc
inc
dec
hlt
jl
das
mov
lret
and
roll
mov
ds
adc
mov
pushf
xor
mov
rolb
push
call
in
xchg
fildll
inc
mov
std
mov
fcompl
push
adc
jne
int3
clc
mov
mov
aaa
push
or
sahf
dec
out
loopne
outsb
xor
pushl
push
fistl
cltd
sbbl
hlt
pop
xor
push
mov
pop
adcb
jl
mov
subb
jb
adc
mov
jne
lea
stos
add
incl
mov
aaa
loope
popa
idivl
cmpb
sub
shlb
scas
sub
push
sbb
push
mov
incl
call
inc
stc
mov
sbb
in
push
mov
or
decl
push
mov
lods
rorb
sarl
pop
je
inc
sub
cwtl
cmp
call
jle
xchg
test
jo
addb
push
repnz
pop
xchg
mov
mov
jb
cmp
in
into
daa
sar
das
in
push
mov
ljmp
push
es
push
wbinvd
xchg
push
dec
jae
inc
cmp
mov
lcall
sti
cmp
nop
stos
dec
jnp
mov
shrl
clc
insb
cmp
pop
mov
ljmp
inc
adc
in
xchg
inc
mov
jno
dec
test
mov
inc
ljmp
es
push
cmp
sub
stos
call
fcmovu
sub
mov
test
insl
fstps
pop
rcrl
jg
mov
fldl
stos
cmc
ljmp
scas
dec
jbe
cmp
notb
pop
icebp
adc
dec
int
add
mov
lret
lock
call
ljmp
xlat
jp
jne
pop
mov
movsb
ljmp
or
icebp
fcomip
lcall
inc
xchg
push
fisttpll
out
fdivrs
and
cli
cmp
add
ljmp
mov
loopne
sbb
movsb
das
lds
mov
clc
stos
jp
lea
fdivrp
and
shrl
mov
nop
cmp
fimuls
mov
por
pop
outsl
xchg
ljmp
cwtl
xor
jbe
fwait
imul
sbb
push
xchg
movsb
stos
jmp
xlat
inc
cmp
pushl
lods
inc
cs
cmpsl
add
or
fcmovnu
inc
stos
repnz
int3
data16
cmp
inc
stc
lret
mov
sub
xchg
add
mov
nop
add
cmp
adc
inc
and
in
lcall
shr
mov
mov
call
daa
test
jae
aam
or
incl
mov
sub
aas
push
mull
mov
push
mov
test
fadds
xchg
sub
jg
call
in
mov
xchg
mov
and
xchg
adc
or
push
push
adc
call
mov
mov
nop
jb
or
das
mov
incl
xor
push
pop
js
pop
mov
jbe
and
push
daa
pushl
mov
hlt
lods
aam
clc
in
cmc
ja
mov
mov
sbbl
mov
mov
and
aad
int3
cmp
add
and
jmp
or
bound
xor
arpl
sub
adc
in
jnp
decl
sbb
jb
or
push
icebp
jns
lea
sub
inc
movb
xorl
shrl
jecxz
jp
xor
dec
scas
cmpsb
inc
es
std
ljmp
cmp
cs
adc
call
adc
mov
mov
sub
xor
sbb
cs
mov
jmp
sbb
shrb
mov
stos
in
sbb
push
mov
nop
call
arpl
popa
rcrl
sub
arpl
xchg
stos
push
popf
xchg
mov
push
loop
js
das
mov
mov
movsb
xchg
cli
out
test
clc
fcmovbe
test
add
cwtl
push
fadd
xlat
xor
sarb
jg
pushl
cmc
sbb
sbb
cwtl
stos
cltd
sub
sbb
cltd
dec
out
imulb
xlat
ljmp
xchg
lret
in
lods
jnp
loop
js
dec
cwtl
lods
les
push
gs
loopne
decb
cmp
jge
jns
sarb
dec
int
dec
mov
jmp
cwtl
xlat
es
sbb
dec
jbe
pop
imul
inc
ror
push
daa
aaa
mov
and
int
pop
mov
aam
sbb
xchg
lods
insb
test
sbb
xorb
mov
mov
rorb
pop
push
sub
cmpsb
inc
test
adc
add
jg
ljmp
xchg
mov
insb
loopne
pusha
push
dec
mov
in
and
jge
sbb
jmp
jecxz
aam
adc
aam
pop
sahf
mov
cmp
stc
fnsave
out
pop
fnsave
dec
rolb
in
jns
pusha
ss
xchg
test
lcall
push
imul
aad
data16
xchg
sbb
mov
icebp
aaa
pusha
push
pop
scas
mov
call
jmp
outsb
aas
sub
leave
push
pop
mov
in
fs
pop
lods
cmp
ljmp
mov
sbb
dec
push
in
jl
mov
mov
mov
mov
sbb
jnp
in
xchg
sarb
sub
lcall
ja
popa
lock
testl
outsl
adc
shrl
and
mov
lcall
jbe
jg
out
andb
add
scas
jne
xor
cmpsl
xchg
ja
decl
lcall
arpl
jg
sbb
jns
jno
dec
movsb
mov
mov
and
cmp
pop
mul
mov
adc
repz
stc
bound
inc
pop
nop
mov
mov
call
loope
mov
inc
or
adc
out
imul
jg
add
dec
repz
xor
sub
std
push
leave
dec
es
pushl
out
std
mov
outsb
xor
cmpb
lahf
xchg
sbb
and
call
shlb
push
adcb
mov
aam
sub
shlb
decl
sbb
and
pop
xchg
psubb
pop
pop
xchg
ljmp
fimull
scas
or
mov
out
stc
jl
subl
aad
movsl
and
jmp
jmp
push
and
lock
sub
cmp
add
or
lcall
pop
sahf
inc
jg
mov
loop
mov
mov
fidivl
ficompl
sbb
mov
shlb
out
ret
jge
cmp
lret
or
cmp
ja
ljmp
fimull
jne
inc
jae
inc
mov
xchg
in
xchg
sub
adc
decl
jp
rcll
lods
cmp
jecxz
sarl
mov
lcall
adc
mov
aam
lock
in
xchg
imul
pop
outsb
sub
xor
fsts
repz
xchg
push
jp
scas
lahf
inc
shll
cmpsl
fbld
mov
jg
in
mov
fldcw
inc
xorl
inc
jbe
dec
sbb
adc
jmp
popa
bound
lods
les
loop
mov
sbb
dec
inc
or
mov
jg
call
nop
scas
jns
push
or
jb
mov
das
test
jp
mov
lds
pushl
int
popf
rcrl
repnz
cltd
out
ja
je,pt
mov
test
gs
hlt
and
xor
xchg
or
or
scas
mov
ljmp
inc
stc
pop
xchg
pop
pusha
aad
jl
lods
mov
pmulhw
nop
fdivr
incl
cmp
and
xchg
adc
imul
or
cmpsb
mov
add
ljmp
push
and
jne
mov
adc
dec
xchg
xchg
ljmp
ret
fisttpl
push
leave
cs
aad
jnp
ss
outsl
hlt
add
insl
inc
sar
fadds
decl
ja
aaa
dec
xchg
das
mov
ds
pop
bound
movsl
jb
daa
clc
mov
incl
mov
mov
shlb
lods
add
sub
xchg
gs
incl
fildl
pop
cmp
outsb
fcmovu
lcall
insl
insl
movsb
lahf
mov
test
loop
ret
nop
pop
insl
stos
mov
cli
pop
pushl
pop
inc
rorb
inc
jge
jg
mov
in
mov
mov
adc
adc
inc
mov
je
sbbl
xchg
stos
imulb
lahf
dec
scas
out
iret
sti
inc
pop
insl
cmpl
mov
sbb
loop
sbb
bound
lds
and
cmp
pushl
inc
xorb
ds
test
aaa
rclb
jnp
fs
lods
fnstcw
mov
pop
jle
sbb
dec
mov
shrb
push
push
stos
jg
xlat
cltd
cmp
xor
ljmp
add
jb
lods
jge
xchg
xor
mov
and
dec
or
hlt
dec
and
stos
clc
lcall
inc
dec
das
lds
les
rol
xchg
push
filds
jg
xorb
pop
loopne
xor
push
add
fmuls
mov
imul
lcall
mov
mov
add
jecxz
fldcw
fildl
loope
mov
cmp
addl
push
add
ret
inc
mov
int3
lea
pop
call
dec
sbb
and
mov
pop
loopne,pt
pusha
mov
lea
nop
inc
pop
cmp
xchg
cld
dec
sub
xor
cmpb
xor
xlat
in
pushf
push
dec
idivl
jmp
lock
loop
ficompl
loop
iret
or
mov
out
add
mov
call
icebp
add
pushl
hlt
clts
push
xor
icebp
and
sahf
mov
push
ficompl
push
fidivrs
subl
test
call
test
dec
insb
cld
sub
xor
idivl
or
sub
dec
xchg
cmp
das
test
shl
bound
jge
mov
mov
jle
sbb
jmp
out
inc
rorl
mov
or
push
sbb
xchg
xor
jmp
push
in
or
lcall
sub
inc
fstpl
inc
pop
into
jb
outsb
mull
ficompl
mov
dec
lret
jmp
sahf
add
loope
jns
outsb
je
insl
mov
push
mov
pusha
cltd
pop
pusha
mov
out
xchg
jp
push
gs
mov
pop
scas
pop
loop
lcall
pop
cmp
pushl
mov
or
in
mov
cmp
js
js
out
int
add
jmp
jne
dec
push
add
sbb
call
movsb
xchg
pop
mov
jnp
xchg
fbstp
int
and
and
jmp
jl
rcrb
cwtl
add
and
hlt
int
data16
fistl
stc
or
incl
cmp
nop
adc
add
pop
jmp
dec
lcall
lcall
push
mov
pop
cltd
pop
and
pop
bound
test
jne
xchg
ljmp
inc
movsb
ds
push
mov
inc
push
int3
sub
call
push
sti
dec
sbb
imul
jbe
pop
out
stc
lods
add
popf
popa
ret
in
push
stos
inc
clc
pushl
fldt
xor
pop
or
mov
or
decl
add
scas
testl
dec
cmp
es
call
ret
dec
or
test
mov
fimuls
and
out
cmc
sar
lods
jp
pusha
fimull
lret
push
stos
sar
loope
pop
movsl
hlt
sub
mov
jmp
lcall
sbb
ljmp
mov
cmp
pop
fbstp
add
setl
pushl
sbb
popf
lods
imul
insl
push
js
es
imul
adc
jo
jae
mov
mov
lret
pop
mov
pop
out
mov
mov
jp
lods
jns
xchg
jl
sub
filds
decb
xor
out
cmp
cmp
out
outsl
inc
mov
mov
das
data16
pop
insb
or
mov
lret
imul
lcall
push
pop
push
add
mov
fidivs
mov
mov
fwait
jno
repz
loopne
jmp
lahf
push
add
ret
test
adcl
fsubrl
leave
dec
setno
fstp
pop
jmp
mov
ficomps
in
cs
rep
and
jo
js
pushl
dec
divb
jle
dec
pop
jae
sub
mov
int3
in
outsl
inc
pop
push
ljmp
mov
cltd
and
xchg
xchg
xor
fwait
dec
mov
call
lods
repnz
dec
dec
fwait
jmp
pop
mov
sbb
cmp
aaa
or
decl
imull
shlb
iret
pop
mov
les
mov
cmp
push
sub
push
mov
adc
stos
inc
push
dec
sbb
jae
js
adc
jg
mov
addl
jbe
sti
inc
xlat
cmpsb
cmp
lret
aam
sbb
sbb
jb
pop
xor
xor
leave
jle
add
pop
push
movsb
test
and
push
lahf
sbb
xchg
sarb
pop
push
jbe
adcb
scas
pop
mov
and
dec
dec
enter
decl
inc
sbb
and
mov
pop
in
push
pop
or
sbb
call
cld
push
test
push
fimuls
rcl
mov
cmp
push
jcxz
jbe
jbe
das
dec
clc
adc
fucomp
pusha
daa
jg
popf
adc
xchg
imul
dec
push
mov
push
xchg
roll
sahf
and
add
stos
ja
loopne
insl
pop
lahf
push
call
add
test
mov
and
xchg
xchg
jmp
mov
add
add
jmp
gs
or
inc
hlt
movsb
pop
mov
or
cmp
fildll
cmp
lea
rcrl
mov
jns
add
clc
jg
push
inc
mov
fidivl
cltd
cmp
push
xor
neg
ss
cli
test
outsl
insl
sub
xor
pop
xchg
int3
or
fnstsw
rol
cltd
fidivs
lcall
and
or
cmp
inc
fisubs
stos
cs
push
add
sahf
dec
sbb
push
pop
stc
jp
cs
sahf
js
lods
inc
mov
cli
and
add
test
scas
pushf
addl
icebp
scas
stos
cmp
or
adc
jmp
decl
shll
imul
data16
enter
mov
fwait
sub
es
call
mov
cwtl
sbb
outsl
xchg
sub
sub
test
call
xchg
mov
xchg
pusha
aas
sub
sub
addr16
xlat
mov
push
hlt
push
adc
push
jb
into
mov
pop
cmp
mov
test
adc
xor
pop
fmulp
dec
mov
mov
mov
sar
call
xchg
xchg
aas
sahf
jle
mov
jmp
xchg
js
fs
je
push
loop
sub
ljmp
mov
adc
mov
subb
and
xor
incl
cmpsb
add
pop
xchg
hlt
lea
movsl
leave
ficoml
test
adc
jge
decl
dec
mov
sahf
jbe
fwait
insb
cmp
ss
incl
std
icebp
inc
jno
or
pop
and
std
and
fdivrl
sbb
jbe
mov
mov
push
xor
inc
out
inc
mov
sbb
cmp
imul
mov
out
aam
std
sarl
pop
aam
imul
jg
test
out
loop
imul
sub
mov
sbb
jo
mov
aaa
cltd
in
cmpsl
adc
ds
lcall
xor
add
je
jg
jbe
fst
lret
jecxz
pop
nop
mov
xchg
iret
xchg
jl
lcall
repnz
push
jo
dec
sbb
pop
xor
sbb
or
sub
std
mov
call
iret
sub
inc
sbb
mov
push
xchg
xchg
xchg
lds
stos
call
adc
dec
pop
stos
inc
arpl
lcall
mov
lret
inc
int
cmp
inc
mov
jnp
addr16
dec
xor
fistl
adc
jp
lock
jge
dec
pop
bound
sbbb
ret
sub
mov
xor
xchg
push
push
mov
call
xor
jp
cmp
xchg
inc
test
test
jge
lcall
sbb
mov
mov
fmuls
jnp
inc
sbbb
call
andl
cmp
lcall
sub
pop
cmc
daa
aaa
lods
sub
ret
decl
jno
out
or
add
ficomps
pop
pushf
scas
in
cmp
jnp
or
xchg
das
jp
ljmp
or
ss
jae
cmp
inc
test
mov
sub
in
mov
idivb
test
pushl
push
push
cs
and
xchg
test
mov
sbb
ror
adc
mov
clc
fwait
lcall
into
dec
stos
adc
repz
mov
fisubl
les
shl
cmp
pop
imul
lock
or
sbb
mov
push
xlat
jmp
out
lret
movsl
cmp
in
scas
cld
fmull
in
or
mov
cmc
xchg
idiv
decl
add
lret
lcall
into
movsb
int3
aas
sub
xchg
and
or
stos
mov
incl
lret
lret
outsb
loopne
and
sbbl
xor
adc
push
jnp
decl
pop
pop
in
test
ret
pop
sarb
ret
add
decl
pop
jne
mov
shll
mov
int3
pop
stc
repz
fidivs
mov
std
or
leave
inc
lods
test
push
loope
movsl
push
scas
decl
xor
push
movsl
or
push
cmpsb
ss
jmp
push
xor
popf
mov
fimull
pop
mov
sbb
pop
xorb
ret
loope
xlat
mov
xlat
gs
xor
sbb
lret
mov
int3
cmpsb
jnp
xchg
cld
adc
ljmp
xor
outsb
xchg
dec
cmpl
or
cmp
push
subb
aam
outsb
mov
push
mov
mov
mov
loopne
add
ret
lcall
repnz
pushf
mov
leave
jo
js
jo
mov
cmp
sbb
in
int3
add
lods
jl
push
push
mov
aam
fsts
jge
push
ljmp
mov
rorb
in
repnz
stos
xchg
pop
mov
icebp
cmp
ret
incl
inc
adc
lcall
loop
mov
cltd
ja
cmp
lahf
fs
fwait
rol
incl
pop
mov
mov
rcrl
xchg
adc
cmp
pop
hlt
jo
pushf
and
ljmp
pop
mov
pop
jp
hlt
loop
mov
xchg
clc
pop
sub
popf
repnz
nop
push
add
xchg
fisttps
jl
push
push
and
test
push
mov
call
stos
mov
sub
ljmp
in
and
mov
mov
ljmp
lcall
jmp
scas
insl
iret
dec
fmul
pop
lea
mov
mov
sbb
decl
mov
mov
addl
fwait
rdpmc
loope
lock
data16
add
pop
roll
push
stc
dec
les
sbb
enter
arpl
pushf
pop
aaa
mov
xchg
cs
popa
fdivrl
jmp
nop
ret
sarl
xchg
jne
pop
and
mov
push
push
mov
cmpsb
mov
lret
jmp
mov
add
sbb
lcall
dec
int
roll
or
lods
and
dec
xchg
fildll
mov
inc
mov
pushl
std
aam
mov
jo
mov
sbb
xchg
fdivrs
jle
ja
jmp
pop
adc
xlat
xchg
lret
mov
mov
sub
sahf
das
das
jmp
push
jmp
inc
popf
shlb
pop
lahf
sbb
leave
enter
stos
ret
repz
stc
dec
loop
xchg
and
jmp
xor
imul
roll
leave
rorl
add
enter
lcall
imul
es
push
push
repz
pop
mov
mov
add
xor
push
mov
dec
into
mov
mov
lods
or
lret
jmp
mov
push
push
into
jg
cwtl
dec
jnp
notl
repz
fiaddl
adc
or
inc
gs
xchg
lock
dec
mov
mov
mov
decl
add
lods
mov
lcall
pop
hlt
sbb
adc
mov
movsl
int3
or
cli
jl
lcall
fsubrl
imul
xor
addr16
pushf
xor
fs
push
mov
push
scas
insb
decl
mov
loopne
sbb
sub
push
mov
leave
das
loopne
mov
adc
lret
pushf
lds
and
mov
cmp
jl
xchg
cmc
cmp
iret
insl
loop
inc
xchg
loopne
cmp
jns
cli
call
bound
push
push
mov
ljmp
and
jo
lea
shrb
sbb
dec
sar
fbstp
add
sbb
mov
leave
lock
cmpsl
xor
dec
cmp
aaa
ror
push
push
fisubl
out
aad
loope
jb
push
adc
lcall
in
sub
pop
pop
mov
push
test
jg
mov
mov
mov
push
inc
or
jge
je
lcall
xchg
shll
mov
and
or
sbb
aad
incl
sahf
aam
sbb
imul
mov
push
hlt
dec
jb
or
inc
add
xor
and
clc
call
pop
repnz
sbb
roll
or
insb
sub
mov
dec
push
lods
ja
stc
inc
cmp
push
mov
dec
pushl
clc
and
xchg
fs
ds
add
mov
loop
sub
and
pop
push
sub
cli
clc
icebp
ret
aam
jg
aas
cmpsl
pop
sarb
pop
pop
dec
jg
sbbb
adc
lahf
decl
pop
xchg
ret
pusha
lret
dec
mov
push
mov
decl
mov
outsb
imulb
xchg
data16
dec
rcrb
jmp
adc
pop
push
mov
ret
js
fs
dec
scas
mov
subl
femms
pop
inc
ljmp
cmp
adc
enter
xchg
sub
aaa
add
insb
not
cmp
ret
lret
popf
xchg
push
mov
pusha
and
stos
pushf
repz
icebp
jmp
fimuls
fdivrp
movb
adc
iret
sahf
sbb
inc
loopne
mov
adc
lcall
xchg
xor
cmpb
mov
pusha
into
adc
mov
gs
aam
push
dec
fdivr
loope
dec
jmp
mov
sub
dec
nop
push
aad
aam
sbb
in
push
out
lods
imul
pushl
inc
cmp
imul
aas
mov
hlt
cli
and
call
mov
movsb
jmp
jecxz,pt
stc
xchg
ds
ds
test
inc
dec
ljmp
imul
ljmp
mov
cvtps2pi
adc
add
jmp
jg
icebp
mov
cmp
stc
mov
stc
jns
lahf
add
mov
jl
mov
int3
popf
lahf
call
pushl
and
add
jb
js
out
fdivr
outsl
clc
ja
push
out
add
sbb
jb
arpl
lock
pushl
imul
push
hlt
sub
cwtl
out
xchg
dec
insl
lds
fbld
add
jecxz
xchg
mov
add
mov
std
pop
mov
lcall
mov
orb
mov
lds
jnp
test
and
mov
sub
pop
cli
inc
lcall
iret
sbb
jae
or
or
mov
shl
mov
pop
gs
mov
mov
inc
cld
test
push
and
imul
decl
stos
pop
aaa
cmpsl
xor
js
add
je
jae
mov
and
insl
sub
inc
jmp
push
cmp
inc
jns
lods
adc
je
pop
addb
aad
fildl
repnz
mov
loopne
pushl
sti
lock
call
mov
push
lahf
sub
push
add
xor
mov
and
adc
jne
test
ja
dec
sub
int
nop
incl
push
push
dec
js
push
dec
ret
popf
push
pop
fiaddl
pavgw
leave
pop
dec
mov
adc
add
and
push
jge
aaa
pop
push
mov
shlb
mov
lcall
notb
xchg
pop
mov
ret
ja
jmp
cwtl
adc
cmc
incl
clc
pop
mov
cmp
les
xchg
inc
bswap
fistps
std
test
nop
clc
ljmp
jge
sbb
pop
aad
lcall
cmp
insl
jl
imul
mov
cmp
call
xlat
xor
imul
lods
lret
xchg
mov
repnz
xor
cmp
jle
orl
hlt
cltd
mov
mov
out
cmp
lcall
cs
bound
adc
repnz
test
inc
and
jno
pop
decl
negb
enter
out
jno
out
xchg
inc
mov
adc
decl
lcall
orb
inc
lahf
test
inc
push
adc
outsl
jb
mov
sbbl
loopne
sbb
cmp
ljmp
sbb
push
and
jnp
adc
stc
je
test
jno
add
cmp
push
fstps
adcb
mov
jge
cltd
cmp
push
test
or
sti
ret
fnstcw
mov
push
adc
notb
call
or
xor
fisttps
or
icebp
stos
push
cmpsl
lcall
xor
push
incl
xchg
adc
cmp
jne
mov
test
fcoms
jle
inc
scas
dec
xchg
loop
push
loop
push
pop
test
dec
lahf
or
xchg
fiadds
push
std
push
xor
aad
sbb
test
jmp
test
mov
push
fcmovnb
repnz
sbb
pusha
lahf
sub
lcall
xlat
roll
add
shrb
dec
into
je
xor
ljmp
clc
pushl
orb
addr16
sbb
ljmp
jmp
push
cwtl
js
test
insl
xchg
into
nop
pop
or
cmpsb
cmp
or
dec
adc
out
rorl
and
test
push
mov
ss
mov
jge
or
xor
ljmp
and
lahf
icebp
pop
shl
ljmp
cmp
shlb
sub
mov
sub
leave
sub
and
cld
inc
cmp
stos
xor
lcall
push
mov
insl
lods
cmpsl
inc
mov
jns
adc
fcoms
inc
imul
ret
adc
andl
dec
pop
pusha
out
or
jmp
movsb
mov
cs
lods
insl
aad
lods
int
xchg
fwait
adcb
clc
jp
fwait
popf
scas
call
mov
pop
inc
jmp
jae
dec
push
idiv
mov
cmp
mov
sbb
adc
cmpsl
push
inc
fbstp
ja
stos
stc
and
lret
out
lea
mov
ret
or
insb
ljmp
call
out
push
addr16
xchg
push
push
mov
xchg
xor
cmp
and
outsb
jnp
ret
mov
fs
int3
sbb
cmp
fs
rcll
scas
int3
jg
mov
shll
jne
pop
mov
and
int3
push
cmp
outsb
jns
dec
and
push
cld
call
sahf
pop
xchg
ljmp
pop
inc
int
stc
sbb
test
xchg
ja
cmp
ja
clc
cli
push
ds
icebp
testl
xor
mov
sub
je
mov
push
cmp
push
adc
scas
jns
xor
jne
ss
fbld
pop
push
sbb
out
paddusb
pusha
mov
orb
sub
decl
or
mov
frstor
sub
xchg
les
or
mov
outsb
sbb
sbb
jecxz
mov
inc
dec
arpl
test
mov
sbb
lcall
inc
mov
pop
xor
sarl
js
and
into
and
push
ret
clc
pushl
dec
fbstp
xchg
fnstsw
sbb
xchg
pop
les
decl
mov
stc
jb
in
stos
xchg
loop
xor
ficoml
ljmp
push
sub
jg
mov
jbe
push
mov
push
addr16
push
inc
xor
lret
cmp
jge
testb
pop
sbb
pop
sub
xchg
imul
or
mov
int3
out
mov
bound
push
mov
popa
in
in
jp
lcall
jp
cld
cmp
out
lea
sub
dec
push
mov
mov
sub
aaa
xorb
and
xchg
repnz
lods
inc
xchg
push
incl
sub
sbb
push
testl
jnp
jno
fstp
xchg
jecxz
xchg
lcall
inc
jle
cwtl
orb
jecxz
sti
insb
pop
adc
scas
out
lcall
cmp
fcmovne
shll
pop
cli
std
mov
xchg
ljmp
sar
arpl
sar
mov
rclb
xor
pop
xorb
xor
jmp
jb
xchg
outsb
push
and
lahf
aas
or
pop
or
movb
incl
arpl
xor
jo
mov
les
mov
sbb
mov
incl
adc
sbb
shll
test
lods
call
scas
sti
xchg
or
pop
sbb
hlt
push
repz
jnp
cwtl
push
ret
ljmp
push
test
cwtl
arpl
sar
call
add
fbstp
arpl
rcll
out
movsb
fwait
or
sbbb
cs
pop
jg
test
mov
leave
std
add
inc
das
ljmp
jge
xor
or
decl
rorb
jb
imull
cmp
movsl
dec
or
xchg
inc
loope
insb
incl
sbb
out
or
fnsave
repz
xchg
mov
std
jmp
mov
dec
imul
mov
mov
rolb
adc
out
out
enter
ja
std
xorb
daa
sbb
lds
jmp
jns
mov
nop
push
lret
push
stos
int3
mov
in
push
pop
xchg
jg
call
mov
mov
cmpsl
and
and
sbb
cmp
aas
mov
mov
mov
jl
arpl
subl
sahf
sti
push
ljmp
and
scas
subl
jnp
adc
pop
cmp
lcall
data16
scas
inc
repnz
lahf
loopne
cld
jecxz
pop
arpl
daa
divb
xor
test
mov
or
jns
dec
shrb
inc
mov
incl
jb
mov
insb
les
jge
pop
lcall
pushl
jmp
xlat
xchg
loope
movsl
cld
ljmp
mov
push
enter
pop
cmc
add
in
and
jae
mov
add
rcl
pusha
jge,pn
mov
mov
and
loop
movsb
sahf
mul
cmpsl
out
pop
sub
mov
out
jne
sub
out
popf
cli
addb
sahf
fs
mov
call
push
sub
and
sub
in
xchg
adc
jns
sub
hlt
xor
xlat
add
decb
fcmovnu
push
in
insl
mov
inc
adc
jecxz
in
outsb
enter
mov
enter
ljmp
sti
push
std
push
cld
pusha
icebp
loop
inc
out
mov
xor
or
or
xor
divl
sub
mov
ret
cmp
repnz
lcall
fnsave
mov
inc
xchg
push
jo
sub
cmovg
cli
sahf
setnp
jmp
and
xchg
pusha
push
push
dec
adc
mov
decl
lcall
dec
mov
xor
mov
test
faddl
push
rcr
pop
shr
pop
shr
in
aaa
ljmp
mov
out
js
inc
scas
enter
loopne
sarb
scas
enter
dec
ret
xlat
stc
ljmp
jns
fbstp
movsl
push
dec
and
adcb
mov
cld
ret
call
dec
mov
mov
and
dec
shll
or
mov
fnstsw
fwait
loop
mov
mov
test
fisttpl
ljmp
sbb
and
into
xor
jno
or
dec
hlt
js
call
lock
int3
ljmp
inc
ret
push
pop
cwtl
leave
xchg
and
add
sbb
aam
jg
xor
fincstp
mov
sub
push
sub
pop
mov
repz
repz
pop
outsl
sbb
out
add
cmovle
out
leave
movsb
jo
lock
sbb
ljmp
call
loope
push
ret
outsl
xchg
stc
xchg
shl
mov
call
adc
push
xlat
adc
in
push
sub
push
xlat
cli
sti
inc
das
cli
push
stos
ljmp
pusha
lds
aad
mov
loop
pushl
outsl
or
adc
inc
adc
shl
or
rorl
ljmp
pusha
cld
xchg
fisttps
dec
lods
inc
fisubl
fcmovne
outsb
imul
lcall
sbb
addl
jg
push
or
jmp
in
sub
mov
test
shlb
xor
and
jmp
cli
fs
jmp
mov
aam
push
push
jbe
mov
cmp
cmc
lods
add
pop
inc
lcall
enter
jns
stc
push
dec
call
mov
shll
pop
andl
ret
inc
stos
int
imul
fstps
imul
mov
dec
cltd
gs
cld
xchg
adc
test
pushl
pop
cmp
out
addr16
in
insl
push
and
jne
test
mov
cli
add
pushl
cld
and
jo
cmp
inc
pop
xchg
sub
xchg
push
loopne
inc
sub
incl
mov
lahf
xor
cmp
ret
lcall
fcoml
out
and
mov
xor
mov
lods
js
pushl
or
scas
push
or
xchg
out
and
stos
fidivl
adc
ds
mull
ljmp
ret
pop
scas
mov
pop
add
ljmp
cwtl
dec
mov
loope
jmp
xor
add
jmp
xchg
insl
dec
add
outsb
lock
call
inc
pop
out
test
fmull
sbb
mov
decl
lcall
imul
sahf
stc
inc
mov
add
rolb
jg
divl
ss
jp
mov
es
jb
jl
push
cld
shlb
loopne
decl
inc
sbbl
add
push
aad
mov
mov
fstps
inc
ret
loope
adc
loopne
and
mov
xchg
jge
repnz
mov
inc
fwait
sbb
jmp
mov
subl
dec
lret
sbb
in
sub
add
in
pop
fbld
shlb
cmp
dec
in
icebp
mov
mov
pop
hlt
decl
movb
pusha
sbb
mov
push
out
mov
xchg
mov
in
push
out
mov
xchg
cmp
sub
lds
cmpsb
pop
fistl
dec
fidivs
fprem1
jno
or
mov
addr16
popa
xchg
lock
scas
lds
mov
mov
shrl
subb
jae
aad
loop
packuswb
scas
jo
inc
or
mov
sub
xchg
sbb
stos
jmp
sbb
imul
neg
decl
sub
inc
xor
mov
push
mov
mov
xor
loope
add
mov
test
mov
xchg
sbb
stc
nop
out
xor
jp
adc
mov
push
rcl
adc
movsb
clc
sub
lock
getsec
mov
ja
shl
push
or
pop
or
in
xor
incl
mov
sarb
jl
or
ss
ja
mov
incl
cmpsl
add
hlt
nop
insl
mov
xchg
call
mov
leave
add
and
rcll
mov
fdiv
aaa
jg
fildll
push
jl
lret
mov
sbb
mov
mov
lods
out
fimuls
aad
aad
dec
ljmp
adc
shll
pop
push
cmpb
ljmp
lret
aam
or
mov
jmp
or
adcl
popf
xorps
ljmp
insl
or
inc
movb
pop
ss
mov
inc
push
repz
leave
iret
push
incl
ljmp
and
jb
aas
iret
arpl
lcall
cli
or
mov
push
inc
jecxz
or
add
jg
jmp
sbb
mov
call
ljmp
and
sbb
pop
dec
sub
pop
xor
out
add
dec
in
push
out
ret
pusha
mov
adc
movsl
incl
xor
ljmp
sub
jb
in
cmp
ja
sbb
mov
mov
mov
xchg
call
testb
pop
adc
stos
sbb
mov
aad
mov
mov
jp
cmp
push
add
cmpl
dec
push
xlat
neg
push
ret
mov
ss
lcall
push
jle
cmp
ja
das
cltd
mov
ret
pushf
mov
add
xchg
aad
in
incl
shl
mov
out
ds
xor
pop
or
cwtl
lock
andb
arpl
cld
pop
into
decl
jge
xor
insl
int3
mov
sarl
mov
pop
test
lcall
pop
scas
add
mov
mov
mov
iret
movsb
jg
sbb
mov
ljmp
dec
sar
and
hlt
fs
jl
or
in
jmp
rcll
lds
xchg
movsb
movb
shll
jo
test
jecxz
call
std
incl
dec
cltd
add
adc
ret
or
xchg
pop
jmp
in
cli
call
inc
inc
orl
insl
xlat
loop
pop
outsl
shlb
jecxz
push
mov
movsl
movsl
or
or
dec
or
mov
jmp
lea
stos
lcall
ss
cmpsl
inc
sub
je
mov
sbb
dec
mov
sbb
addl
sti
outsl
not
ljmp
adc
pop
pandn
outsl
jo
push
aaa
decl
mov
fnstcw
mov
fisubrl
xchg
fsubp
mov
inc
cli
lock
or
js
fstl
rorb
scas
aad
pop
adc
movb
push
cli
xlat
cld
fisttps
xchg
jmp
jmp
orb
inc
pusha
ljmp
mov
arpl
mov
hlt
xchg
in
and
add
fdivrl
insb
imul
sbb
push
addl
lcall
cmp
jno
imul
dec
lcall
or
mov
clc
rcll
adc
cmp
movsl
sbb
das
dec
out
ja
sbb
lret
jl
cmp
cli
mov
inc
cmp
leave
jmp
je
jnp
and
and
or
xchg
jmp
ficoml
repz
decl
push
add
xor
xor
aad
jecxz
sbb
pop
cmc
jl
pop
aam
test
rcrl
mov
outsl
enter
fstpt
mov
jnp
decl
data16
jecxz
inc
enter
jmp
xor
rolb
out
sbb
decl
loopne
orb
push
dec
out
ja
inc
inc
adc
stos
lahf
jo
push
decl
xchg
push
mov
or
data16
ljmp
add
pop
pop
movsb
sub
or
sub
jmp
lcall
movsl
cld
mov
test
jl
icebp
xlat
or
xor
movsl
jo
xor
lcall
cmpsb
dec
pop
push
test
cmp
pushf
lock
xchg
mov
sub
iret
call
jle
leave
stc
mov
sti
bnd
fildl
aam
mov
scas
in
sub
lcall
push
xor
loop
inc
sub
cmp
insl
in
add
lds
cmp
add
inc
add
arpl
out
push
pop
je
xchg
xor
test
xchg
jmp
mov
repz
loopne
es
insl
lcall
xor
rol
jge
addr16
aam
cmp
clc
and
fwait
addr16
jmp
push
aas
dec
sbb
mov
lcall
mov
xorb
xor
pusha
addl
xchg
out
out
add
jmp
ljmp
adc
and
sub
mov
cwtl
imull
mov
cld
pusha
dec
sub
stos
sbb
pop
pop
ficoms
inc
fldenv
into
ret
lea
cmc
ljmp
and
sbb
adc
jmp
pop
or
inc
ds
ret
jl
xor
xor
pop
xor
call
mov
jle
iret
insb
cltd
push
setbe
inc
out
out
mov
add
pop
inc
cmc
sbb
dec
jae
jb
dec
jne
mov
fdivrp
in
call
jb
mov
lods
test
cmp
sbb
pop
mov
mov
mov
adc
add
into
sub
iret
xchg
rcr
loope
mov
aam
cmp
mov
cld
adc
sub
jmp
decl
jne
mov
lock
mov
xchg
or
call
loop
mov
fcomip
call
sbb
cmpsb
sub
xor
ds
mov
sub
mov
ret
movsb
shll
call
push
cmp
aas
call
in
out
out
dec
jae
or
sub
sub
adc
add
out
pop
jns
dec
cmp
jnp
mov
ret
adc
push
sahf
lods
sub
rcrl
addb
inc
ja
lods
add
jno
adc
shl
lods
hlt
sub
aas
roll
dec
mov
popf
test
xor
or
inc
daa
pop
push
and
jmp
jne
push
insb
jmp
ret
lock
mov
popa
shll
repz
mov
add
adc
mov
int
xor
data16
or
push
and
mov
sub
mov
es
xchg
inc
inc
movlps
jns
aaa
adc
dec
insb
fs
outsb
insb
data16
outsb
pop
inc
dec
int3
stc
add
mov
mov
ja
lcall
stc
sub
pop
addr16
aad
fs
xchg
xchg
mov
mov
sar
pushl
xchg
dec
call
xchg
call
pop
push
xor
or
jmp
sbb
push
mov
imul
push
ret
ljmp
adc
or
jmp
push
sar
mov
jg
cmovnp
outsl
jae
push
lds
loopne
jmp
push
rcll
adc
jle
aam
add
sahf
push
adc
dec
fwait
inc
mov
mov
sbb
icebp
inc
enter
aad
mov
ds
jmp
add
leave
jno
mov
sub
adc
jg
call
repnz
xchg
shlb
movsb
adc
shll
cli
sub
and
out
push
mov
xor
mov
repz
mov
mov
fdivrs
mov
movsb
push
repz
fs
mov
negl
movsl
ss
dec
ret
jns
jg
mov
outsl
jg
mov
fistpl
shlb
push
mov
ljmp
or
test
add
sub
xor
idivb
fldenv
mov
ljmp
lock
mov
stos
rorl
push
jo
add
xor
outsl
jns
mov
shrl
lret
xlat
clc
call
les
in
lock
es
loopne
fcmovb
cmc
cmpsl
decl
xchg
adc
in
mov
sbb
mov
inc
jb
lret
jl
nop
jmp
in
add
in
movsl
popf
jae
dec
fsubl
and
sbb
cmp
mov
cli
xor
mov
push
arpl
ret
ljmp
aam
sbb
int3
jmp
mov
lcall
lahf
pop
inc
mov
notb
xor
test
mov
mov
mov
dec
fnstenv
jo
add
outsb
xor
loopne
into
aas
push
pushl
fbld
add
jmp
mov
mov
cs
fwait
incl
iret
xlat
sub
sub
jmp
sbb
pushf
sbb
cmp
enter
or
xor
imul
lods
mov
pop
lcall
dec
out
cmpsl
pop
test
in
push
inc
fcmovne
cmpsb
or
cmp
test
dec
leave
push
mov
repnz
push
push
fcompl
subb
andl
incl
lds
cmp
sub
sbb
fmuls
nop
insb
cmp
imul
decl
pop
rol
cmp
xor
scas
aad
loope
add
and
dec
push
push
imul
daa
adc
sub
call
sub
out
cmp
fwait
cli
jb
push
sahf
cld
subl
fld
add
dec
add
mov
decl
lock
cltd
dec
push
les
cmp
std
jnp
mov
xor
clc
incl
adc
loopne
add
incl
sahf
push
xchg
mov
mov
inc
push
bswap
fsubs
mov
bound
lods
inc
adc
dec
ljmp
mov
repz
ds
xor
cmp
ficoml
sub
xchg
pusha
aas
sbb
ret
int3
dec
mov
jbe
aam
dec
loop
mov
and
jp
xchg
or
mov
mov
inc
sar
pop
and
lods
fldl
pop
movsb
mov
imul
jle
pop
mov
in
add
nop
enter
in
cmpsb
out
and
scas
inc
out
lahf
adc
idiv
sub
cli
decl
mov
lret
in
cs
cmpl
call
fists
mov
dec
push
pop
add
push
loope
lock
aaa
inc
shrl
incl
in
mov
fbstp
dec
mov
inc
loopne
add
inc
stc
xor
xor
call
jne
mov
add
jb
pushl
jecxz
cmp
add
jno
xchg
mov
sahf
adc
xchg
jmp
daa
mov
pop
push
jg
jo
lods
ja
in
cwtl
fimuls
movsb
and
inc
xor
out
xchg
data16
ljmp
pop
push
xchg
shll
and
in
pop
add
adc
add
nop
cld
stos
cwtl
test
jg
test
mov
ljmp
insb
cmp
cld
jle
sbb
adc
xor
xor
inc
and
sub
fbstp
jne
inc
sbb
shlb
cltd
das
cmc
enter
add
mov
add
shrl
pop
enter
or
xor
les
cli
lcall
movsb
lods
sub
mov
pop
inc
cmp
aam
dec
rcll
lcall
inc
data16
icebp
xchg
mov
xor
sub
jbe
sub
pop
insb
rcrl
xor
fstps
adc
jle
inc
jb
sbb
jnp
test
mov
ss
mov
pop
jecxz
adc
xor
jp
nop
push
cmp
mov
icebp
daa
cwtl
popa
nop
and
cmp
dec
pop
sbb
mov
mov
mov
jge
inc
test
stos
push
fistl
cmp
rorl
cmp
pop
shll
jl
loopne
inc
xchg
scas
popf
mov
incl
incl
out
xchg
add
mull
leave
stc
hlt
push
addr16
mov
mov
decl
sbb
push
les
minps
jmp
add
or
test
inc
test
mov
mov
mov
jmp
lock
outsl
adc
push
pop
mov
nop
mov
clc
enter
push
hlt
adc
dec
lock
cwtl
jmp
leave
xor
inc
mov
sub
jg
lock
mov
test
adc
pslld
lcall
jns
lcall
pop
cmp
mov
cmpsb
fstp
pop
xchg
adc
ds
divl
cmp
pop
icebp
in
out
jbe
std
jne
and
cmpl
mov
jg
mov
cli
scas
loope
les
fldcw
out
in
push
sbb
in
aad
add
jns
cli
pushl
mov
idiv
cltd
mov
mov
sbb
mov
xchg
jns
call
adc
imul
out
xor
stos
xchg
fisttpl
leave
inc
xor
pushf
xor
cmpb
mov
mov
in
mov
outsl
cmpsb
push
push
push
incl
pop
jae
es
sbb
ljmp
jmp
and
test
lods
lods
cli
insl
orl
addr16
xchg
fwait
lahf
dec
mov
and
xchg
mov
aaa
inc
clc
mov
sti
and
inc
push
cli
fbld
xchg
call
cmp
xchg
adc
mov
mov
adc
cmp
movsb
aas
cmp
adc
xor
push
jecxz
mov
and
add
jg
add
js
inc
mov
mov
int
movsb
push
pushl
xchg
pop
lret
fistpll
std
jp
dec
inc
dec
xorb
cmc
std
pop
dec
call
lret
lcall
or
or
aad
lahf
sub
pop
adc
decl
lock
xor
ret
mov
and
bound
call
adc
stos
scas
sub
cmp
out
inc
sbb
imul
push
popa
mov
int
pushl
dec
es
sbb
jmp
sbb
std
div
dec
mov
or
dec
lea
jg
mov
jnp
xchg
jno
fwait
out
xor
or
in
fidivl
fidivrl
xchg
jmp
dec
mov
dec
pop
bound
mov
sub
fcompl
lcall
adc
push
sbb
or
cmc
jge
mov
clc
pop
xchg
imul
xchg
test
dec
mov
xlat
xchg
dec
cmpsb
adc
pop
out
jne
ljmp
sub
sub
jle
popf
imul
adc
movsl
xlat
cmp
inc
sub
cmp
shll
xor
or
inc
scas
cld
inc
movsl
push
or
jmp
xchg
mov
loopne
push
cs
call
adc
adc
xor
mov
push
clc
aaa
or
fidivl
jmp
ja
inc
out
lock
pop
out
xchg
push
faddp
arpl
xor
mov
dec
jge
cli
and
mov
dec
and
out
push
aas
sub
dec
ljmp
add
pop
fistpl
adc
jo
sub
mov
jmp
cmp
mov
xchg
xor
push
icebp
jge
pop
adc
inc
push
call
ljmp
jmp
xlat
jbe
inc
mov
cmp
frstor
call
pop
or
insb
call
push
sbb
sub
inc
push
xchg
dec
jl
dec
lahf
ficompl
add
inc
decl
out
repz
push
jge
in
popa
loop
test
or
cmpsb
mov
dec
ljmp
int
loope
mov
sub
pop
xor
mov
adc
and
jecxz
lods
jmp
ret
sub
enter
and
sbb
loope
mov
xchg
sub
push
mov
inc
xchg
aaa
out
push
xchg
adc
inc
stos
jns
repz
xchg
movsl
loope
cmpsl
test
aas
fsubs
maskmovq
mov
movb
xor
adc
fidivl
sbb
add
sub
insl
fnsave
add
mov
fcoms
xchg
fstpt
sbb
aaa
pop
cltd
bound
lods
mov
movsb
sysexit
xor
push
mov
cld
ljmp
stos
mov
and
xor
mov
push
icebp
ljmp
pop
pusha
cmp
enter
sbbb
jg
dec
out
in
xchg
cmc
mov
incl
insb
push
and
arpl
mov
ret
push
or
gs
lods
or
lahf
jnp
pushl
xchg
pop
jle
and
test
mov
stos
out
or
xchg
popf
sub
daa
pop
jg
add
or
adc
arpl
and
out
shrb
inc
and
mov
jne
out
clc
add
jo
adc
dec
lock
stc
xchg
js
pushl
test
push
inc
mov
dec
jo
aas
gs
cmc
mov
mov
pop
ja
xchg
adc
clc
push
mov
pop
rol
mov
incl
pop
inc
push
xor
push
push
mov
add
xchg
pop
and
pop
push
test
jns
insl
cld
outsb
sti
divl
lcall
out
pusha
aam
loop
out
clc
repnz
lret
hlt
daa
out
push
inc
lret
iret
scas
pop
imul
dec
fwait
inc
loopne
or
dec
scas
push
lock
ljmp
mov
orb
mov
xchg
and
or
lahf
loope
mov
cmp
push
enter
stc
inc
jns
decl
mov
orb
insb
mov
mov
not
pop
fldenv
pushl
or
jecxz
ficomps
outsl
insl
fdivs
in
sub
mov
in
jge
pop
dec
inc
pushl
les
cld
lock
mov
inc
in
out
scas
imul
in
pminub
cmp
dec
pushf
xchg
and
adc
cwtl
dec
push
repnz
pop
test
imul
incl
cld
dec
inc
movsl
mov
push
rol
or
mov
es
lcall
xor
nop
aas
je
fimuls
aas
push
adc
xor
fcomip
push
movsb
jno
dec
in
dec
mov
je
push
and
dec
jp
jbe
ljmp
jle
sahf
push
and
fstpl
pushl
pop
fmull
lea
fmull
rcl
xor
and
insl
add
push
int3
jb
mov
push
cmp
xor
or
out
in
mov
cmp
xchg
mov
lcall
das
push
push
insb
nop
fnstenv
loopne
xor
lods
cltd
mov
call
cli
js
dec
adc
fsubrs
rorb
push
adc
call
jae
add
sub
in
aas
test
jecxz
and
cmp
add
cmp
inc
flds
sahf
sub
xor
fcomps
xor
mov
dec
adc
sbb
dec
cmc
cld
filds
pop
inc
inc
xor
mov
les
std
and
incl
mov
add
mov
pop
popa
push
in
xchg
scas
push
mov
mov
aas
inc
pop
iret
mov
lods
xor
cmp
les
flds
rcpps
cli
out
clc
lret
adc
mov
sbb
push
pop
adc
mov
js
outsl
int3
enter
pushl
push
pushf
cmovle
pop
fwait
inc
inc
aaa
leave
mov
imul
xor
out
call
cwtl
into
mov
adc
mov
ljmp
dec
movsl
leave
bswap
in
dec
rcr
sahf
pushf
fisttps
fmulp
xchg
add
lds
int
ljmp
es
leave
mov
xchg
mov
add
rcrl
sbb
out
ljmp
cmp
mov
stc
push
outsl
push
push
mov
movsb
push
dec
xor
lds
fcmovb
push
lcall
sub
lea
jno
addr16
push
and
lods
mov
dec
mov
js
lods
inc
jmp
ljmp
push
fnstcw
inc
push
mov
aas
mov
test
mov
push
and
pop
inc
insl
jno
call
sbb
out
roll
jo
and
inc
xchg
cmpsb
cli
xor
mov
jle
pushl
std
sbb
in
jg
fwait
inc
lods
imul
cmp
inc
decl
je
push
jg
decl
pop
and
fildl
or
or
adc
cmpl
jns
lea
test
hlt
sub
or
aam
xor
std
jge
pushl
jno
das
jae
das
jp
xor
mov
loope
jecxz
xchg
decl
xchg
ret
fidivrs
repnz
pop
mov
aad
jmp
jmp
bound
stc
pop
mov
sub
aad
jge
or
push
mov
in
adc
mov
fdivr
mov
outsb
mov
sub
inc
sbb
shr
adc
ss
das
loopne
jns
decl
aaa
add
jbe
inc
icebp
jecxz
aam
jo
stos
mov
adc
daa
inc
shlb
cmp
fiaddl
pop
cmp
sbb
inc
ss
and
lahf
scas
push
mov
inc
or
push
push
adcl
mov
cmp
leave
enter
pushl
mov
ljmp
rcll
imul
daa
int
imul
call
mul
rorb
popf
in
mov
inc
and
mov
test
jmp
sub
rorl
into
fdivl
sahf
je
mov
loopne
ss
xor
jno
sbb
out
mov
outsl
ljmp
jl
mov
push
andb
mov
shrb
jbe
pop
cmp
clc
dec
in
pop
fdivs
addr16
cltd
mov
adc
pop
ret
add
cli
push
sub
sti
movsb
dec
int3
add
xor
sbb
sbb
pop
xchg
adc
in
dec
and
das
dec
icebp
mov
jmp
orb
mov
shlb
inc
mov
imul
jmp
cmp
add
add
and
in
jmp
xor
jne
outsl
call
sbb
sub
add
cmp
out
xchg
lods
push
cmpsb
inc
xchg
stos
push
loop
push
outsb
idivl
outsl
loope
incl
cmp
or
lea
cltd
xchg
jae
pop
loopne
mov
repnz
ret
xchg
mov
dec
add
das
adc
jae
gs
cld
incl
jae
sti
lds
ret
shrl
fsubrl
inc
and
hlt
pushl
mov
push
mov
fdiv
or
jns
repnz
lds
das
hlt
push
or
cld
jmp
xor
fwait
pusha
fistl
ljmp
pop
lret
mov
push
push
in
dec
sub
incl
jge
gs
add
push
xchg
hlt
mov
xchg
ret
mov
xchg
test
call
call
iret
sbb
mov
psubsw
push
push
loopne
fcomps
aam
xchg
dec
incl
cmpsb
and
xchg
in
stos
pusha
frstor
push
sub
ret
jno
mov
adc
inc
test
cmpsl
mov
rcrb
and
add
sti
cmp
xchg
push
xchg
decl
sub
cmpb
xor
call
pop
insb
test
lcall
xchg
into
mov
or
jbe
imul
lock
cs
dec
les
shr
inc
fisttps
pop
es
dec
repz
pushl
mov
stos
sbb
fnstsw
int3
jp
pop
mov
xchg
adc
inc
jmp
mov
pop
sti
in
shrb
xchg
mov
dec
add
adc
mov
lods
cmp
jb
stos
jge
jg
cmpsl
and
in
iret
nop
pop
mov
cmp
incl
sahf
sbb
dec
jno
insb
pop
mov
stc
push
jbe
into
lret
arpl
pushl
lea
pusha
ret
int
sbb
orl
or
push
cmp
lcall
pop
xor
daa
daa
ror
mov
sub
and
mov
in
movsl
cmc
mov
daa
and
or
repnz
cmp
xor
fildll
lds
aam
faddl
jae
mov
add
xor
rcll
xchg
data16
ljmp
sbb
mull
xchg
jbe
xchg
pop
out
push
dec
jecxz
sub
xor
push
loopne
dec
mov
insb
push
clc
cmp
fnstenv
imul
stos
sbb
rorb
add
mov
dec
adc
xchg
push
sti
sub
imulb
mov
xor
xor
int
movsb
mov
jmp
or
in
movsl
mov
aas
in
sub
ss
mov
dec
cmp
outsb
xchg
or
shll
jbe
ljmp
mov
pop
hlt
adc
in
leave
xchg
sahf
out
inc
mov
jmp
mov
pusha
dec
repz
cmovb
inc
fmuls
mov
ret
jnp
pop
call
rcrl
inc
jecxz
sbb
gs
mov
xchg
mov
mov
lcall
dec
dec
mov
rolb
popf
je
pop
jle
ret
ds
test
mov
jnp
decl
jns
push
push
loope
and
test
dec
jns
jecxz
lock
call
sub
aam
sbb
or
pop
push
cltd
insb
pop
bound
jmp
mov
pop
lea
and
lret
rcrl
jbe
lcall
sbb
mov
ffreep
mov
dec
xor
cwtl
ret
shll
xchg
fs
jb
push
pop
into
repz
lods
xor
push
push
xchg
jnp
sub
fcomps
jge
push
ret
iret
mov
loop
sub
test
adc
in
fwait
pushl
cmp
mov
int
in
btc
out
outsl
push
ljmp
cmpsl
pop
lcall
call
mov
mov
add
stos
pop
pusha
les
decl
cmc
fdivl
in
dec
je
fistpll
jg
arpl
les
in
dec
push
popf
dec
cld
dec
test
stos
sub
sbb
pushf
cmp
ds
xor
insl
sub
mov
sti
adcb
sub
sub
sahf
mov
test
sub
push
jle
jecxz
add
ljmp
jb
jnp
add
sarb
cld
pusha
cmp
test
pop
push
js
out
iret
loop
ljmp
push
mov
testb
js
mov
push
imul
ljmp
scas
push
sahf
add
lcall
push
pop
std
les
lock
mov
scas
jmp
mov
in
mov
addb
aam
jecxz
push
jg
ljmp
outsb
stos
push
orb
jp
lahf
call
loope
inc
ss
adcl
add
aad
xlat
adc
dec
sub
aaa
jmp
fcoml
jmp
pop
mov
inc
or
lds
fildll
movsb
pop
mov
push
ljmp
fcoms
cmpsb
push
es
mov
add
mov
test
push
cmp
mov
js
notl
stos
sub
int3
sub
aas
sbb
loope
xor
sbb
or
mov
push
in
lcall
into
xchg
jae
xchg
mov
cmpsb
xor
xchg
mov
out
aas
adc
movsb
mov
mov
cmc
fisttpl
call
push
pop
das
jb
dec
sbb
decl
or
lds
daa
inc
mov
popa
stc
cmp
repz
jns
or
imul
jmp
into
inc
xor
popa
pop
jp
repnz
and
decl
add
cmp
jno
je
or
pop
in
mov
mov
aaa
iret
cmp
mov
stos
out
mov
test
je
rorl
jne
decl
adcb
rcr
sub
into
xchg
lds
fadds
in
xor
pop
fildll
xor
mov
sub
push
push
rcr
xchg
imulb
pop
inc
cwtl
out
aad
outsb
cli
mov
pop
por
dec
decl
sub
adc
xor
xor
out
push
inc
cmp
push
js
lea
jno
pushl
jg
mov
addr16
dec
push
shr
jl
add
cltd
je
test
scas
clc
lcall
xchg
movsl
pop
or
test
scas
pop
dec
test
push
fbstp
int
jo
aas
out
lret
sbb
mov
mov
adc
call
inc
ret
sti
inc
cltd
dec
lcall
pop
mov
hlt
fidivs
dec
mov
imul
cmp
div
gs
mov
imul
mov
jbe
ja
sti
repnz
xor
inc
push
sbbl
xchg
test
or
pusha
decl
jle
mov
out
add
je
mov
dec
sbb
fistps
sbb
cmp
dec
inc
jae
sub
cmpsb
jg
loope
leave
pop
fs
lahf
pop
xorl
decl
pop
jo
push
imul
add
pushl
adc
out
out
sub
adc
int
fisubrs
out
add
mov
fimuls
pop
movsb
ja
outsb
mov
jno
incl
sbb
mov
lods
leave
mov
mov
inc
fdivl
lods
pop
call
push
or
sub
xchg
mov
scas
or
es
int
filds
hlt
ficoms
pop
mov
jg
jg
leave
xchg
dec
mov
addl
mov
fwait
mov
imul
dec
rcrl
test
push
in
mov
push
adc
mov
xchg
sbb
imul
call
mov
enter
loope
and
cmp
ret
mov
jo
ja
mov
xchg
imul
and
or
or
jg
ret
incl
xorl
addr16
lds
loope
pushf
in
lret
sbb
lock
incl
and
pop
movsb
sbb
int
xchg
fcmovb
lahf
xchg
fimuls
jp
data16
incl
pusha
std
mov
movsb
adc
xchg
icebp
push
and
inc
jg
inc
test
cmp
cmp
pop
add
sarb
push
lret
mov
push
pushf
scas
inc
mov
jecxz
clc
decl
aas
ror
lret
and
rcr
xlat
jp
cwtl
shlb
mov
fcmovbe
sbb
ljmp
xchg
mov
mov
aaa
rclb
loopne
sub
jmp
notl
push
imul
lret
adc
xor
cmp
incl
mov
insb
or
insl
pop
aam
ret
fcomip
push
jmp
push
xchg
inc
or
mov
dec
push
insb
mov
mov
scas
push
fcoml
int
insb
xor
movsb
mov
push
push
lock
jmp
test
sbb
in
mov
sar
sahf
mov
scas
xchg
mov
arpl
jl
mov
mov
sbb
mov
mov
push
jp
mov
cli
add
and
rolb
dec
mov
add
add
jbe
xor
enter
push
lret
dec
test
rcll
or
cmc
push
fsubrl
jle
xchg
push
or
iret
dec
lret
and
push
jg
sub
fldcw
call
push
pop
mov
push
xor
xchg
lcall
cli
xchg
movsl
xchg
xchg
mov
mov
mov
stos
sbb
jmp
xchg
notb
push
lock
sub
lods
data16
jns
ja
sbb
scas
iret
jno
cmp
mov
pushl
or
add
in
cld
daa
test
inc
sbb
lock
popf
mov
ret
decl
clc
frstor
lahf
add
or
sub
sbb
fisubl
out
push
shlb
mov
lods
sub
lcall
adc
lods
clc
inc
cmp
inc
lds
push
call
xor
push
arpl
mov
pop
sarl
xor
push
jo
nop
ljmp
inc
repnz
cld
dec
aaa
xlat
push
mov
or
lcall
xor
lods
les
out
cli
outsb
jge
fnsave
xchg
xchg
pop
scas
adc
push
icebp
sbb
xor
sbb
outsb
ja
jmp
pop
js
lret
sub
pop
fldenv
adc
mov
or
ljmp
xor
push
pop
pop
mov
mov
call
xchg
mov
mov
test
cltd
fdivs
in
or
out
mov
call
adc
enter
cmp
push
ljmp
stos
addl
outsb
jl
pop
jae
cmp
jne
inc
push
cmc
les
pushf
xchg
inc
jns
sbb
ret
cmp
pushf
pop
adc
arpl
sti
xchg
decl
ret
add
xchg
jo
testb
adc
sbb
loop
movsl
jg,pn
xor
decl
mov
push
outsl
into
ficompl
mov
ffree
jb
pop
lock
mov
fwait
dec
jns
ljmp
je
push
mov
pop
fldl
dec
xlat
sbb
test
push
fwait
das
pop
adc
stos
jmp
push
sbb
leave
movsb
lahf
xorl
fsubs
xor
adc
lods
jle
cmp
jmp
lahf
push
or
out
test
mov
mov
insb
addr16
leave
or
inc
decl
repnz
les
jbe
jmp
push
xor
je
in
idivl
sbb
mov
sarb
and
cwtl
clc
rcl
scas
js
mov
adc
out
mov
mov
inc
jge
xor
sbb
in
xor
mov
inc
dec
jl
cmp
pop
sub
xor
dec
dec
mov
out
jnp
jnp
pop
push
push
mov
scas
adc
cmp
inc
ljmp
fisubs
pop
mov
push
push
sub
ljmp
jge
rolb
neg
mov
inc
jge
push
mov
mov
incl
pop
sub
pop
jmp
sbb
loope
das
aas
lods
es
decl
cmc
repnz
fldl2e
out
push
enter
mov
mov
sub
pop
jnp
sar
call
sub
scas
lret
data16
mov
movsb
xchg
lcall
idiv
push
les
or
out
aaa
jmp
ret
insl
push
fcomp
mov
xor
lods
ljmp
ljmp
mov
mov
dec
xor
cs
data16
jp
test
divb
adcl
jg
sti
sub
aad
dec
mov
in
mov
insl
xchg
enter
mov
and
lret
jp
push
decl
stc
adc
push
in
es
and
xor
popa
inc
movsl
adc
mov
inc
sbb
ljmp
mov
mov
mov
sub
or
incl
mov
lods
adc
sub
outsb
xchg
sbb
int3
dec
int3
fists
ss
cli
jmp
enter
ret
xchg
dec
xchg
pushw
and
repnz
xchg
pop
jecxz
mov
lock
decl
pusha
mov
and
xchg
mov
inc
insl
jge
inc
cwtl
imul
call
push
ss
cli
or
xchg
add
mov
adc
in
insl
imul
mov
lock
ljmp
out
xchg
inc
out
int3
int
dec
mov
stc
lcall
outsb
clc
sub
ja
ljmp
sub
jg
sub
push
imul
cmp
and
call
jp
out
bound
and
nop
sub
adc
faddl
sub
mov
decl
or
xor
dec
jne
repnz
xor
inc
jno
loop
ret
jg
push
adc
jecxz
dec
ds
mov
push
pop
dec
call
fdivr
call
pop
leave
lahf
sahf
or
jg
dec
das
pop
push
inc
fwait
push
rclb
or
cmc
iret
stos
not
mov
mov
test
data16
js,pt
insb
test
mov
sbb
dec
pop
insb
loop
jg
movzwl
leave
iret
jns
andb
pop
mov
mov
popa
xor
cmp
adc
in
mov
sbb
arpl
mov
mov
ljmp
aas
enter
dec
xor
mov
loope
adc
loopne
ret
ficompl
mov
cli
repz
and
insb
je
and
mov
shl
lret
pop
out
in
dec
cmp
dec
loopne
add
mov
inc
fdivs
sahf
pop
or
add
ret
or
jo
out
and
decl
shll
mov
cmp
sar
ljmp
jb
clc
mov
mov
rolb
fldenv
call
or
lcall
je
mov
roll
fsts
or
xchg
mov
lahf
jge
mull
mov
mov
mov
or
cmpsb
sbb
daa
jns
adc
in
dec
scas
sbb
dec
xchg
push
pop
dec
adc
in
jnp
add
pusha
leave
pop
inc
inc
ljmp
add
popa
mov
push
xchg
loopne
or
iret
popf
out
gs
sti
push
mov
fmul
dec
jmp
cmp
push
adc
pop
lret
lret
testl
xor
cli
push
int
loopne
cld
lods
cmpsb
sub
lods
lret
lcall
ret
ljmp
stos
sub
in
mov
test
cmp
cmp
call
inc
xor
add
pop
out
sbb
cmc
sub
xor
lods
ret
jo
shll
mov
lcall
push
mov
pop
mov
push
jb
pop
cmc
xchg
ja
rolb
int
mov
adc
js
dec
pop
testl
lods
daa
fsubs
mov
pop
xor
inc
pop
push
mov
incl
mov
in
das
lds
roll
inc
sti
or
in
es
mov
inc
mov
decl
and
mov
mov
push
adc
outsb
fdiv
and
fidivrs
arpl
xlat
sarl
adcl
inc
imul
decl
adc
scas
icebp
ret
or
mov
mov
jmp
xor
mov
dec
lret
adc
das
jg
pop
ret
sub
inc
mov
adc
jmp
mov
out
or
xchg
fdivrs
xlat
jns
dec
iret
mov
rcll
mov
inc
jns
or
jnp
hlt
cmpsl
jbe
iret
inc
rorb
fimuls
xchg
pusha
push
push
jg
jmp
outsl
lcall
add
fdivrs
outsl
pop
pushl
pop
mov
rclb
ja
inc
loop
and
lret
xchg
dec
fdivs
jge
loope
cmp
call
mov
jg
xchg
mov
call
outsb
mov
lret
outsb
rcrl
repz
mov
pop
dec
inc
mov
jmp
fidivrs
es
scas
fidivrl
out
fsubr
nop
mov
lock
xchg
fisttps
lcall
push
shrb
data16
je
lds
scas
jnp
lcall
in
inc
mov
xchg
add
fisubl
add
cmp
jmp
fcomps
mov
mov
in
loopne,pn
or
stos
xor
xor
dec
or
mov
mov
xchg
fbld
xlat
and
or
fcoml
cwtl
push
lds
and
notrack
xchg
cmp
mov
outsl
jg
fs
sbbl
pushl
jbe
jbe
mov
mov
sub
push
lods
out
clc
inc
sub
xor
jle
xchg
decl
push
push
testb
incl
lea
sub
add
iret
rorb
jmp
mov
cmpsl
add
mov
xchg
mov
cli
push
arpl
sub
call
outsl
push
andb
push
cmp
pop
data16
jne
mov
jg
fcoms
cmp
lahf
pmaxub
jmp
pushw
adc
iret
leave
mov
pop
pop
test
iret
jo
lahf
notb
sub
into
or
cmp
roll
pushw
iret
and
dec
mov
xlat
pusha
movsb
push
pop
cmc
jg
lret
xlat
rclb
ja
int3
xchg
inc
xchg
into
cli
push
push
jge
in
cs
adc
dec
jnp
adc
add
cmp
sbb
jnp
mov
roll
cmovp
incl
cmp
movsl
aas
cmp
adc
and
push
aaa
and
decl
push
fistpl
imul
and
mov
xchg
jl
xor
xor
mov
push
dec
sbb
push
cli
out
push
mov
add
jge
or
adc
fdivrs
iret
lea
aas
dec
mov
out
cmpsl
aaa
mov
out
dec
lcall
push
mov
sbb
xor
into
xchg
and
outsl
or
lods
test
mov
jecxz
jmp
jne
test
movsb
fimull
sbb
jge
inc
xchg
notb
mov
jbe
cmp
call
insl
stos
adc
push
add
and
mov
stos
lahf
xorb
inc
jnp
imul
call
jecxz
imull
jle
loopne
sbb
pushl
inc
cltd
fldpi
or
xchg
mov
ret
add
in
push
fisubrl
mov
inc
lock
shll
jmp
and
jno
in
fwait
test
adc
or
scas
nop
mov
xor
test
ljmp
loopne
jg
add
loope
pop
cmp
cltd
mov
out
mov
sub
add
pop
sbb
bswap
mulb
incb
cmc
jno
push
pop
push
jb
fcompp
cmc
bound
outsb
jg
or
dec
and
jae
movsb
mov
xor
jmp
mov
sbb
push
ss
jnp
sub
jecxz
cmp
lret
sbb
std
push
daa
or
inc
rcrl
test
into
cmp
pop
addr16
enter
xlat
add
orb
mov
decl
add
clc
adc
xchg
mov
gs
mov
lcall
sub
pop
mov
and
iret
movsb
fstpt
push
sbb
adc
jg
cmpsb
fsubrl
dec
jbe
inc
es
mov
jg
stc
and
mov
into
adc
scas
fsubrs
data16
daa
sbb
movsb
jmp
mov
and
out
daa
movsl
shll
jg
nop
push
int3
add
adcl
sbb
cmp
mov
push
sub
cmpsl
add
aaa
cld
push
fstps
mov
mov
fbld
lock
ljmp
sub
adc
push
cld
fs
mov
test
mov
movsb
int
int
repz
push
ds
mov
out
imul
cld
ljmp
push
sti
jns
sbb
divb
ret
ds
sbb
mov
out
pushl
cwtl
lcall
out
pop
lahf
int3
test
inc
mov
les
sub
imul
sub
fisttpl
pushf
xor
sbb
and
std
inc
dec
decl
pop
sbb
xchg
repnz
cld
call
pop
roll
test
fwait
loop
popa
call
mov
cli
sahf
popf
jp
call
mov
lcall
inc
out
jmp
nop
outsl
sbb
clc
add
pop
jae
sbb
loop
stos
lock
nop
cmc
repnz
jns
push
fsubl
push
push
pop
lret
mov
cmpb
adc
cmp
call
inc
or
insb
and
fsubrl
add
mov
jg
insb
hlt
leave
mov
jg
xchg
mov
push
sahf
in
orl
inc
and
pushl
loopne
lea
or
xchg
pop
and
test
in
loope
mov
cmpsb
dec
pop
and
aas
jge
je
call
call
imul
mov
adcb
mov
pop
hlt
stos
inc
aam
cmp
ljmp
mov
cmp
xor
jecxz
fistps
jne
push
mov
dec
mov
jg
call
push
inc
cmc
mov
loopne
lahf
or
pusha
sar
jmp
dec
cltd
cmp
xabort
sub
hlt
fneni(8087
out
push
mov
cmp
or
mov
mov
test
push
mov
int
sbb
sub
decl
jb
and
pop
jmp
insl
shl
imul
ret
call
cld
mull
shll
and
xor
in
mov
mov
mov
cld
dec
pop
outsl
xlat
jmp
fisttpll
xlat
lcall
or
insb
ds
pusha
lret
jbe
or
add
push
test
pop
mov
jg
xor
sub
je
int3
push
jmp
jl
dec
int3
jbe
ljmp
ficoml
pushf
andl
dec
insb
dec
jle
mov
jmp
clc
call
in
push
test
adc
inc
repz
adc
js
popf
cwtl
fs
adc
sti
pushl
jo
adc
inc
inc
mov
in
or
ret
mov
ja
xchg
jge
lock
fstl
sbb
dec
jl
lods
lret
cmp
decb
sarb
fildl
in
sub
and
mov
or
or
cmpsb
rcl
and
pushl
insb
cmp
cwtl
in
sbb
bound
mov
cmc
int
mov
dec
pop
sbb
ljmp
pushl
cltd
ljmp
push
arpl
cmc
test
sbb
push
and
call
xchg
addr16
jne
xor
out
add
cmpsl
fwait
adc
shrb
cmpsl
sub
aad
cmp
ret
lods
sbb
das
push
out
pop
or
test
jg
or
mov
inc
loope
xchg
pop
test
ret
xchg
test
xor
insb
jecxz
ljmp
scas
clc
jns
push
cmpl
shlb
notl
inc
pop
mov
pushl
icebp
adc
sbb
ficoms
add
xchg
imulb
es
jle
aas
mov
and
roll
les
cmc
xchg
xchg
push
cmp
ds
shll
mov
das
fnstenv
mov
ljmp
cli
stc
scas
sub
mov
mov
mov
out
adc
dec
icebp
jmp
push
pop
loope
dec
lcall
push
cmp
sbb
mov
lret
rcrb
test
or
adc
imul
push
jno
adc
out
loope
cmc
call
lcall
mov
jo
in
sub
jne
js
mov
and
shr
outsl
test
jle
daa
lret
into
outsb
jae
or
jle
fdivrs
cs
ljmp
mov
dec
out
push
in
xor
insb
aad
popf
sub
mov
andb
decl
and
cmp
cli
jg
cmpsl
xlat
daa
sbb
cmp
adc
mov
sarl
mov
pop
xchg
xlat
mov
pop
or
push
adc
repz
xchg
pop
nop
repz
call
stc
stos
cmpsl
push
mov
push
and
loope
stos
int3
stc
sar
loope
insl
cltd
jp
call
mov
xor
dec
or
cli
xchg
test
popa
xor
push
sub
mov
add
loop
pop
ljmp
dec
movsl
xor
in
and
inc
pop
sbb
jl
inc
lret
andl
mov
mov
mov
mov
das
sub
cmp
sti
sub
icebp
insl
adc
xor
sti
test
pop
dec
sbb
lret
jae
mov
lods
sub
scas
clc
lcall
mov
lods
in
inc
mov
mov
je
adc
fmul
sub
ljmp
loop
cmp
jo
jmp
in
mov
sbb
mov
jmp
int
incl
sub
push
out
imul
aad
mov
out
xchg
or
xor
incl
sti
out
int3
and
scas
ss
push
fildl
sbb
lea
gs
cmp
jnp
ret
jle
test
cmp
sbb
jbe
push
std
cmp
mov
int
sub
mov
mov
stos
push
adc
fbld
gs
xchg
xchg
call
je
add
cli
dec
lret
or
cmp
roll
push
aas
adc
push
xchg
std
call
or
cmp
movsb
mov
xchg
or
adc
cwtl
shl
mov
fwait
insl
xchg
insb
dec
xchg
lcall
cmp
cmp
aam
fildl
jo
adc
ljmp
pop
mul
jnp
fidivs
sahf
movsl
repz
mov
mov
outsl
daa
leave
stc
inc
ret
mov
jmp
push
sti
sbb
pop
mov
add
sub
cmp
call
mov
push
jbe
xchg
leave
push
rcrb
daa
les
cmp
mov
add
ljmp
pusha
out
iret
imul
jmp
push
repnz
aad
cltd
clc
mov
movsl
pop
cmpsb
xor
ret
pop
add
rorb
cmp
dec
into
jbe
and
pushl
js
ret
sahf
adc
testl
or
inc
inc
adc
ljmp
xor
call
inc
lods
lahf
icebp
pop
decl
lock
add
iret
mov
outsb
dec
nop
adc
mov
mov
mov
ret
sbb
and
push
push
jne
andl
and
push
cmp
mov
repz
ret
inc
add
inc
es
lret
cmpsb
lock
clc
lods
or
cmp
cltd
fisubl
mov
mov
int3
scas
push
dec
and
cltd
out
je
pop
jo
cwtl
sahf
dec
mov
call
je
rorb
lods
out
and
push
in
out
and
fcomi
jmp
roll
pop
dec
scas
push
cmpsb
xor
inc
add
daa
cmpsb
xor
fbld
adc
std
inc
or
xchg
push
mov
rcl
ret
xorl
xchg
lret
sbb
fcomip
inc
dec
and
ss
loope
xchg
xor
or
mov
sar
lcall
notl
addr16
and
add
push
mov
pop
cmp
test
ret
mov
push
xor
ljmp
adc
fstpl
sub
jnp
popa
repz
aam
int3
pop
mov
or
std
or
gs
flds
jge
adc
bound
sbb
stos
pop
pop
jo
jg
mov
jge
sub
jno
inc
xchg
lds
add
mov
inc
decl
cmp
clc
lock
movsl
inc
lahf
push
fcomps
jl
rolb
subb
lahf
cmp
mov
rcrl
in
cld
sub
subl
mov
or
push
repnz
incb
shl
mov
loope
incl
ret
or
out
fstl
imul
std
jmp
sub
lds
add
mov
push
movsb
xchg
mov
bound
push
mov
mov
aam
xchg
sub
insl
out
add
lds
popf
jne
xchg
subb
add
fnstenv
jo
ljmp
inc
adc
out
lret
outsl
popa
into
mov
pop
sub
mov
pop
dec
push
and
mov
mov
cwtl
inc
dec
add
fimull
mov
arpl
mov
inc
sbb
xor
icebp
pop
daa
outsb
sbb
dec
cmpsb
iret
rorb
jmp
push
stos
fcoms
cmpsb
dec
bound
inc
ss
mov
lret
insb
int3
incl
mov
jle
mov
xor
out
xchg
jnp
pop
cmp
jnp
inc
cmpsb
incl
cmp
adc
jmp
or
sub
adc
dec
lret
mov
lcall
jg
pushf
fidivl
and
mov
daa
jne
fstps
test
or
int3
std
pcmpgtw
inc
sub
lret
incl
cmp
cwtl
imul
movb
mov
sti
xchg
xchg
or
aaa
lcall
xor
cli
mov
push
outsb
cmp
push
dec
adc
subl
mov
mov
lock
stc
push
scas
jne
mov
lea
dec
rcll
hlt
clc
insb
stos
pop
scas
xchg
cmpb
mov
pop
xor
insb
leave
movsl
into
sub
pushl
jbe
das
ficompl
or
scas
dec
out
jecxz
push
mov
sub
fcomip
dec
imull
decl
cmc
clc
lods
pop
cmp
cmp
ret
idivl
add
inc
and
mov
lods
mov
ja
add
adc
mov
cmp
pushl
inc
icebp
cld
mov
push
rcr
stc
mov
mov
jg
aas
test
dec
popl
pop
adc
cmp
loopne
push
cmp
insl
nop
call
inc
jno
adc
cmp
fucomip
mov
gs
add
jl
pop
jmp
cmp
fs
or
lds
inc
incl
mov
push
pop
sbb
out
pushf
popa
xchg
rcrb
leave
add
xor
jg
fcmovnbe
ret
adc
add
js
xor
cmp
mov
pop
adc
mov
or
call
dec
in
xchg
sub
pop
call
or
loope
xor
ds
cmp
out
adc
mov
cmpsb
lods
stc
sbb
dec
jg
jmp
fildll
xchg
push
rolb
add
aad
decb
mov
pop
mov
popa
mov
jmp
sub
add
scas
rep
rolb
hlt
add
call
addb
nopl
and
dec
imul
hlt
push
stos
push
mov
call
movl
jg
adc
inc
mov
jle
xlat
dec
cmp
call
int3
adc
xchg
fsub
addr16
or
cmp
pop
xor
mov
cmp
call
mov
jge
hlt
jmp
adc
mov
in
dec
jge
rorl
loop
call
in
cmp
or
popw
pop
cmp
outsb
out
sbb
repnz
mov
lcall
adc
xor
dec
ljmp
mov
or
cmp
lock
ljmp
push
xor
les
fldt
aas
aas
scas
in
cwtl
push
xlat
shl
pop
aaa
adc
or
test
call
mov
jp
cmp
xor
je
xlat
mov
mov
decl
in
mov
or
fmuls
ss
cmp
adc
xchg
loop
jl
xchg
loope
dec
cmpsb
sub
popf
ja
gs
or
xor
lea
inc
inc
clc
add
pusha
xchg
jmp
mov
les
jmp
cmp
ljmp
xchg
lahf
push
push
add
mov
or
incl
stos
in
cmp
add
and
movsl
out
xchg
push
ret
lds
sti
push
daa
das
or
incl
lea
loopne
push
leave
mov
arpl
shll
pop
and
inc
inc
jnp
cmp
lcall
jne
stos
icebp
pop
int
xor
js
jmp
outsl
repnz
pop
je
add
loopne
and
lret
dec
lret
into
popf
mov
add
dec
in
into
pop
jl
push
pop
outsl
fdivr
jl
test
outsb
test
xor
je
pop
aaa
arpl
in
dec
cmp
cld
decl
mov
xchg
push
push
pushf
xchg
fiaddl
clc
mov
sub
inc
lret
repnz
jne
lock
lahf
inc
imul
xchg
mov
xchg
cmpsl
lock
in
pop
movsb
dec
pushf
or
test
fcomi
dec
mov
jp
dec
loopne
fs
je
sub
cmp
mov
inc
sbb
lock
int
mov
notb
pop
roll
lcall
jg
das
xchg
out
dec
in
mov
roll
int
push
or
outsb
and
mov
js
incl
or
test
jne
dec
cmp
and
out
lods
mov
push
insb
sarb
mov
lcall
loope
pop
out
cwtl
add
sbb
sub
sub
adc
insl
mov
push
mov
outsl
cmpsb
xor
add
loope
dec
bound
xor
rcll
or
fcomp
lcall
das
mov
cli
mov
cmp
pop
sub
stc
or
mov
cmp
incl
pop
push
sbb
xor
es
fstps
inc
cs
dec
pop
fstl
es
movsl
jne
mov
mov
cli
inc
jmp
xchg
rcl
pushf
popf
push
add
push
lret
cwtl
mov
mov
pop
movsb
mov
fisttpl
mov
scas
lea
sbb
pop
addb
mov
incl
mov
lods
data16
gs
das
gs
imul
or
call
push
movsl
enter
lds
adc
lcall
fldenv
outsb
or
mov
dec
out
js
sarb
jg
xor
dec
xor
movsb
mov
cmp
mov
sub
aaa
icebp
lods
enter
call
pop
mov
inc
pop
inc
adc
xlat
mov
stc
jecxz
pop
xlat
adc
call
add
imul
or
inc
sub
aaa
xchg
inc
jb
in
jne
pop
call
js
aad
xor
or
js
shr
xchg
cmpb
inc
cli
dec
adc
sbb
jno
mov
and
out
mov
insl
mov
and
out
mov
sti
mov
xchg
xchg
xchg
jns
or
sti
pop
jne
roll
push
mov
mov
aad
mov
inc
jg
cmc
sti
test
inc
call
cld
and
mov
test
xor
out
imul
les
xchg
and
pop
sti
inc
scas
xchg
xor
nop
int
xor
jae
sti
loop
mov
call
clc
pop
pop
dec
mov
jns
cld
dec
lods
cld
iret
gs
test
jbe
popa
push
add
lcall
xchg
orl
fcoml
sar
xchg
in
sub
jg
and
lret
ffreep
stos
notb
aad
jecxz
out
lret
ja
in
pop
sbb
sarl
call
or
sub
mov
ds
add
add
sbb
fwait
pusha
jbe
sub
mov
jmp
mov
xchg
xchg
dec
xor
in
fwait
aad
lahf
icebp
mov
sub
sti
addr16
repnz
jp
adc
pop
aaa
sbb
daa
xchg
dec
out
lcall
mov
bound
jmp
adc
enter
leave
clc
xlat
pusha
js
jl
stos
cmp
call
mov
push
pop
scas
jecxz
call
and
cs
sahf
cld
add
sub
shr
sub
or
push
mov
push
roll
popa
and
lea
stos
pop
std
sbb
xchg
or
sub
fwait
loop
pusha
lods
xchg
iret
and
das
push
ljmp
jb
xlat
stos
pusha
cmpsb
xchg
ljmp
fildll
orl
clc
ret
lods
and
loopne
movsb
cmp
or
sbb
add
push
cld
addr16
mov
cli
decl
dec
aas
push
adc
sub
mov
xchg
ljmp
in
push
xor
sbb
lcall
mov
pusha
pop
and
imul
loopne
in
lods
adc
repnz
mov
jecxz
mov
pop
sbb
mov
bound
test
mov
mov
sbb
dec
shll
rcll
jmp
mov
icebp
ljmp
fs
in
cwtl
push
jge
cmp
ljmp
dec
cmp
cmpsb
mov
push
incl
mov
mov
mov
loop
or
pop
push
adc
ljmp
pop
out
into
imul
enter
fcmovbe
jnp
mov
cli
jmp
jmp
jnp
mov
dec
cli
idivb
inc
sub
mov
sbb
roll
aad
pop
stos
fs
or
mov
xlat
cld
fisubs
ljmp
sub
dec
in
pop
push
cmp
loopne
push
dec
push
in
jmp
ss
cwtl
xchg
sbb
nop
dec
xor
data16
mov
loop
jmp
cmp
or
aas
sub
add
xchg
addr16
lcall
scas
xor
movsl
imul
mov
rclb
sbb
stos
mov
sub
sbbb
shl
orl
pushl
jbe
jecxz
pop
sti
cltd
fmull
icebp
scas
repnz
fdivrs
pop
repz
subb
push
sbb
out
pushf
mov
test
js
push
jbe
jge
mov
inc
rol
push
pop
lahf
push
insl
jmp
pop
jecxz
jle
pop
repnz
dec
aam
scas
pushf
xchg
add
out
mov
cmp
push
mov
mov
gs
repnz
cmp
insb
jg
insl
mov
enter
jp
adc
xor
stc
xor
stc
push
pusha
ja
lcall
incl
rcrb
popf
sbb
mov
out
or
daa
xor
mov
loopne
dec
test
in
popf
lods
jp
lock
sbb
ljmp
cmpb
rol
sbbb
push
iret
or
add
adc
mov
enter
dec
std
inc
xchg
and
xchg
add
push
lods
dec
out
orl
pop
xchg
shl
push
data16
jbe
lcall
repz
fimull
xchg
add
stos
push
xor
enter
or
mov
mov
xchg
ret
out
adc
xor
mov
incl
push
pop
jae
mov
test
sub
sarl
pushf
and
test
fdivp
xchg
mov
pushl
std
cltd
lea
adc
sub
mov
shll
cmc
loope
repnz
mov
cld
pop
int3
and
int
aas
xor
sbb
mov
dec
loopne
je
jo
mov
sar
mov
cmp
adc
and
pop
jg
mov
cmpsb
mov
xchg
sbb
out
iret
mov
rorl
rcrb
jmp
dec
cmpsl
inc
cmpsb
fldl
hlt
xlat
in
jo
scas
or
fcomp
into
ljmp
add
jne
or
cld
cmpsb
xorl
and
pop
mov
scas
test
pushl
mov
jg
inc
int3
insb
lods
xchg
ja
in
dec
les
std
mov
and
sti
jg
jg
pop
mov
out
subb
dec
mov
lock
jp
lret
fmull
xor
ficoms
cmp
ljmp
sarb
and
daa
push
xor
icebp
dec
mov
ljmp
xchg
push
dec
push
mov
lret
add
je
adc
or
cwtl
adc
push
sti
mov
ljmp
sbb
dec
das
cwtl
xor
push
enter
popa
test
popf
incl
mov
pushl
dec
ja
in
dec
mov
xlat
inc
dec
push
rdpmc
cmp
jno
mov
arpl
ljmp
cwtl
lret
pop
in
cmp
out
imul
pop
sub
xchg
in
cmp
jmp
imul
mov
cmp
pop
fildll
xchg
sub
aad
adc
vpaddd
mov
xor
pushl
sub
lahf
push
cli
pushf
ret
shlb
jnp
inc
jl
sbb
lcall
faddp
out
mov
call
into
ljmp
into
and
sti
imul
into
mov
pop
pop
xchg
ja
pop
shll
or
inc
push
add
movsb
incl
sub
call
inc
gs
or
and
push
shrd
sub
negb
pop
add
cmp
dec
movsb
ljmp
sarb
cld
std
sub
adc
rorb
mov
call
fs
inc
xchg
add
cmpsb
sbb
fldcw
pop
es
push
pop
push
add
fistpll
mov
dec
mov
lcall
xor
clc
incb
or
xchg
popaw
cmp
orb
std
sahf
dec
mov
je
in
adc
cmp
dec
push
pop
xor
jg
rorl
sub
aas
popf
xchg
sbb
xchg
xlat
pop
scas
popf
scas
sbb
push
cld
mov
mov
idivb
dec
sar
jmp
mov
fdivrl
dec
mov
push
or
push
xor
mov
dec
into
out
fdivr
mov
int
repnz
or
dec
or
rorb
pop
jbe
cmpb
inc
jle
sub
jp
call
and
inc
dec
cmp
nop
and
mov
inc
pop
loopne
mov
hlt
mov
jmp
loope
notb
repnz
lcall
imul
jb
ret
inc
fsubrl
subl
movb
sbbb
mov
and
add
mov
popf
pop
outsl
cmp
clc
jbe
jae
xchg
jmp
mov
mov
jb
xor
int
jnp
int3
cmc
out
daa
jmp
mov
std
lods
mov
fidivl
arpl
cmp
iret
dec
sbb
lea
lcall
push
je
mov
fwait
mov
mov
das
test
popa
pop
ret
inc
mov
push
push
dec
mov
shl
jg
dec
or
vpmacsdqh
outsl
jbe
mov
push
push
dec
push
inc
andps
pop
das
mov
call
xlat
or
jg
cmc
mov
jg
sub
mov
fwait
and
push
mov
cmp
inc
clc
sub
and
or
push
dec
and
mov
xchg
sbb
insb
iret
aam
fwait
jl
decl
mov
in
int
nop
adc
iret
pop
scas
xchg
enter
fcomip
xchg
jge
leave
lret
test
cmp
pop
lcall
pushl
inc
iret
inc
pop
lahf
jb
xchg
jle
in
gs
fdivrl
outsl
sub
movsl
testb
xchg
jmp
ds
fwait
hlt
pop
mov
mov
lods
int
push
add
cli
in
lcall
out
jae
inc
adc
dec
jecxz
xchg
fisttpl
mov
out
sub
or
jne
pushl
rorb
pfrcpit1
cmp
cltd
imulb
and
jg
adc
fbld
dec
mov
dec
rclb
xor
movsb
pop
call
adc
call
push
push
cmpsb
int3
addr16
jp
jnp
xor
sub
adc
push
das
xor
mov
pusha
scas
pop
mov
pushl
jl
pop
cmpsl
pop
in
cwtl
int3
mov
hlt
sbbl
mov
jge
call
lcall
test
jecxz
pop
mov
jne
pop
mov
mov
dec
add
repz
imul
out
or
fcmovu
aad
imul
addr16
cmpsb
sub
fstpl
inc
sub
cli
cld
cld
xchg
ds
mov
jb
lcall
ret
clc
je
cmp
mov
pop
inc
lea
dec
in
cmp
pushl
movsb
dec
lahf
jmp
lods
das
xchg
fnstenv
xor
push
push
div
push
push
bound
sarb
or
or
aad
ljmp
and
adc
mov
out
scas
rcl
push
or
xchg
sbb
arpl
cmpsl
adc
incl
aaa
idiv
sti
fcomps
loope
leave
sahf
xor
xor
addr16
pop
lret
scas
jmp
mov
movb
lret
adc
imul
and
jbe
mov
adc
call
cmp
ret
mov
jg
add
fiadds
sbb
inc
iret
ss
cli
inc
bound
or
in
mov
jle
subl
pushf
push
sbb
test
in
dec
enter
testl
decl
mov
jae
clc
pushf
aad
test
xchg
pop
loopne
jmp
rcrb
push
sahf
pop
insb
or
pushf
inc
es
imul
push
test
push
cmp
ss
inc
fisubrl
fldlg2
pop
jg
fs
inc
mov
hlt
cmp
mov
cmpsl
and
xorb
lock
ljmp
mov
imul
mov
mov
mov
cmp
in
pushl
pop
adc
mov
nopl
dec
add
stos
adc
into
xor
xchg
sub
shr
dec
push
push
incl
aaa
aaa
jg
pavgb
scas
and
loopne
jno
jp
rcl
call
out
or
popa
pop
fdivrs
mov
mov
mov
and
pop
cmp
push
or
call
xchg
push
std
and
mov
or
mov
ja
addr16
stc
push
aam
dec
aad
pop
inc
sbb
jne
mov
inc
mov
arpl
outsl
hlt
cs
movsl
outsl
push
mov
push
cmp
and
filds
jle
mov
ficoms
dec
xchg
ja
and
jmp
pushl
jmp
push
in
fs
mov
cs
ret
repz
out
aam
and
adc
pushl
stos
je
shlb
jmp
adc
cmpsl
shl
lock
cmp
mov
dec
insl
jl
lret
repz
cmpsl
mov
fs
aaa
int
cmp
test
decl
jnp
inc
jne
insl
sti
leave
mov
mov
mov
lea
ljmp
and
out
dec
dec
add
fildl
inc
dec
jnp
hlt
dec
incl
imul
add
jbe
cltd
dec
aam
lock
cli
push
dec
shll
pop
jne
inc
ljmp
xor
out
dec
cmp
outsb
cmp
sub
dec
in
xchg
pop
jecxz
pop
icebp
and
mov
imul
mov
inc
xor
push
das
xchg
jnp
insl
xchg
dec
aas
jo
jns
jb
fs
in
lods
mov
jg
imul
push
outsb
orl
incl
adc
daa
loopne
xor
lcall
mov
mov
mov
daa
in
fisubs
lods
inc
or
pop
lods
or
outsb
subl
fsts
popf
cwtl
loope
ljmp
xchg
aam
roll
pop
push
xchg
mov
call
jp
mov
and
call
pop
mov
shlb
pop
inc
repz
lret
sti
cmp
insl
jns
jmp
add
jo
inc
mov
aad
mov
sub
stos
es
aaa
pop
jmp
jns
scas
arpl
stc
cwtl
cltd
in
and
sub
push
lcall
aaa
xchg
clc
sub
call
add
nop
fdivr
push
loope
cmp
adc
fwait
push
test
jp
mov
in
les
cwtl
lcall
es
sub
pop
out
in
das
loop
mov
mov
rcrb
out
or
add
fadds
mov
les
std
scas
sub
sti
cwtl
js
sbb
xchg
inc
shll
sbb
call
lcall
lods
lods
popf
jg
add
js
cmp
sub
ljmp
vpmaxsw
jns
popf
xor
xchg
adc
int3
push
out
in
add
sbb
push
xchg
pop
test
cmpsb
adcl
pop
std
fcompl
arpl
sub
sbb
decl
ret
inc
inc
adc
test
adc
xlat
repnz
mov
es
push
rol
inc
ss
incl
jae
popf
xchg
out
push
fsubs
cmc
mov
dec
icebp
mov
es
adc
pop
mov
inc
or
fimuls
add
jno
and
int
mov
jmp
call
add
mov
cwtl
xchg
nop
pop
sbb
xor
pop
jb
push
sbb
ljmp
pop
jnp
or
pushf
pop
sti
add
ljmp
fisttps
xchg
mov
shrb
pop
jmp
push
test
sbb
mov
push
jmp
push
scas
das
xor
sub
icebp
sbb
or
fcmovbe
and
cmp
incl
lock
lods
add
adc
test
sub
dec
lcall
sbb
adc
fwait
sub
cld
add
xchg
rorb
lea
clc
call
and
mov
fistl
and
add
mov
mov
lods
jne
cmc
jb
adc
cltd
jp
ret
popa
ffree
mov
xor
adc
mov
adc
addb
mov
push
sbb
xchg
fs
jg
lods
jno
pop
jns
mov
fstl
aam
dec
roll
and
jne
imul
in
jno
movsb
ficoms
sbb
cs
out
cld
mov
push
popa
call
fldcw
int
pop
and
and
and
jmp
pushl
jg
push
lods
loopne
daa
sub
test
cli
out
adc
adc
pop
mov
mov
call
mov
int
xor
inc
lret
xchg
lcall
sahf
je
ljmp
stos
inc
sbb
popa
sub
pop
cmp
inc
jne
sub
mov
mov
mov
test
leave
mov
mov
inc
inc
dec
or
mov
or
insb
mov
fists
sub
sub
cwtl
fcomps
repnz
xor
sub
decl
fcmove
push
jmp
mov
frstor
push
int3
call
lds
push
decl
rolb
mov
and
mov
aaa
cmp
jmp
stos
cmp
mov
lcall
xor
cld
fnstsw
lods
icebp
xchg
aam
int
add
xchg
ljmp
add
push
scas
adc
lcall
cld
in
mov
fdivs
popf
test
scas
dec
andb
sar
mov
sbb
sub
enter
xor
jmp
push
outsl
stos
sbb
jle
sbb
lret
mov
lcall
push
push
push
pushl
mov
loop
arpl
xlat
jp
dec
movsl
lret
incb
mov
mov
pop
xor
fdivrp
decl
ficompl
pusha
sub
sar
test
sbb
stc
push
shlb
mov
sbb
cld
call
loopne
xor
ds
stos
ret
push
stos
std
pop
and
dec
sub
call
mov
outsl
addr16
pop
jle
scas
inc
mov
add
int
dec
daa
stos
clc
incl
jno
call
enter
hlt
out
mov
in
jg
xor
incl
or
xor
inc
jnp
nop
inc
adc
imul
pop
add
pop
sbb
jg
or
ljmp
mov
nop
inc
sbb
popf
jge
push
into
lcall
std
cld
pop
dec
xchg
cmp
mov
movsl
movb
pop
inc
cli
mov
jle
cmpsb
int3
adc
pop
enter
lcall
mov
xor
je
sub
push
scas
jb
inc
fcoms
mov
dec
and
sub
in
inc
ds
push
lock
xor
dec
in
lods
dec
jb
jno
cld
or
ljmp
int
adcb
push
aas
mov
xchg
sub
lock
cmp
pushl
fldcw
inc
pop
hlt
outsb
movsb
inc
sub
mov
fnstsw
rol
xchg
cmc
stos
arpl
pusha
divl
or
rcr
cmpsl
fldl
fdivl
adc
inc
mov
pop
mov
loop
push
movsb
mov
movsb
or
jns
xchg
jmp
mov
push
jbe
inc
lret
out
or
inc
mov
lods
or
jl
clc
pushl
cmp
movsb
pop
cmpsl
fildl
adc
sub
popf
sbb
incl
and
and
scas
mov
rcr
mov
xchg
imul
sbb
gs
sbb
mov
add
or
js
inc
add
or
ja
pop
orb
clc
cli
in
inc
idivb
jae
shrb
nop
adc
push
mov
mul
test
gs
nop
movsl
jl
ljmp
aad
sbb
ja
decl
mov
imul
sbb
rcrb
sub
test
sbbl
cld
ljmp
xchg
in
std
fcmovb
sarb
into
pushf
or
add
jmp
ja
sbb
push
pushl
pusha
test
inc
lods
movsl
mov
mov
mov
xchg
xchg
add
js
call
mov
mov
mov
and
outsl
mov
pop
cmp
and
jl
aas
fwait
jl
lret
lcall
mov
rcrl
cwtl
pop
add
add
out
pop
fucomp
inc
or
push
mov
in
stos
dec
xor
mov
cmp
test
pop
adc
pop
cmpsb
pop
mov
ljmp
push
scas
or
xor
ficoml
movsb
push
mov
out
icebp
imul
cmc
in
cs
les
je
je
lcall
and
xchg
mov
out
inc
or
loopne
mov
push
addr16
mov
mov
std
int
clc
int
push
push
clc
push
mov
clc
std
push
sbb
stc
test
pop
pushf
sub
pop
inc
aaa
add
and
and
cmp
add
dec
decl
sbb
mov
pushl
lahf
stos
add
cmp
mov
cmp
lcall
jp
jnp
mov
ljmp
outsl
mov
adc
cmp
js
call
fdiv
cmp
test
loope
icebp
jmp
scas
mov
cmp
mov
cmp
cmp
loop
cs
adc
lock
call
movsl
into
push
jp
sbb
adc
ja
stos
cmp
insl
shll
cld
cmc
ljmp
movsb
popa
sub
pop
shl
call
daa
xor
xchg
sbb
ffreep
jmp
adc
fs
inc
jmp
jno
mov
and
pusha
mov
push
pusha
fadd
cmp
sub
pop
je
stc
das
or
jg
or
add
push
dec
xor
sbb
add
jae
dec
rcr
cmp
aad
mov
jnp
inc
pop
or
movsl
sbb
test
outsb
pause
lods
xor
inc
and
cmp
iret
sbb
into
imul
popa
insb
or
insl
lret
mov
insb
lcall
lcall
xchg
gs
and
xchg
mov
mov
dec
pop
sub
cwtl
xchg
ret
mov
idivb
int3
stos
loopne
xchg
push
sub
jbe
enter
jp
rorb
jno
lock
jle
loopne
aam
jnp
fistps
cmp
sub
mov
pop
jg
movsl
call
or
xor
inc
sub
cs
cmc
cltd
jge
lcall
test
fdivrl
fldenv
mov
sub
loopne
ljmp
int3
mov
xor
lods
inc
dec
push
movsl
jae
scas
mov
out
add
mov
stos
xor
call
int
sub
inc
movsb
cwtl
in
lea
lods
repz
ljmp
ss
pop
lds
mov
jg
jecxz
test
xlat
gs
addr16
into
inc
xchg
xlat
scas
pop
out
xchg
jmp
int3
jnp
addr16
pop
add
aaa
pop
rorb
pusha
enter
fadds
sub
push
cmp
or
movsl
enter
rolb
and
mov
int3
adc
dec
loopne
mov
jl
mov
inc
jo
jne
jecxz
add
or
and
fxtract
andl
mov
sub
arpl
repnz
sbb
mov
xchg
mov
add
mov
pop
cmp
shlb
mov
adc
jb
imul
repz
leave
imul
das
jecxz
pop
xor
mov
and
dec
cld
jmp
ljmp
dec
or
loop
add
mov
rsm
pop
add
inc
jnp
dec
lock
js
fmull
lods
cmp
push
cwtl
mov
shrl
or
xlat
incl
mov
push
and
mov
push
push
jg
lcall
std
je
mov
fdiv
jl
sbb
pusha
sub
add
std
cs
rolb
pop
arpl
sbb
jbe
jo
mov
cmp
sub
pop
inc
sbb
mov
fwait
lahf
out
mov
mov
stc
mov
pushl
ret
imul
inc
and
call
lret
and
add
pop
inc
call
ret
push
xchg
dec
mov
mov
ljmp
pop
xchg
es
sub
pop
push
push
rcrb
cmp
mulb
or
test
add
pop
push
xchg
call
std
jmp
outsb
push
fsubrs
dec
mov
xchg
xor
jl
xchg
xchg
jnp
push
call
ljmp
push
adc
stos
pushf
fisubrs
push
adc
in
pop
or
sub
repz
rorl
fucomip
push
jmp
nop
sub
repz
insb
mov
pop
test
popa
scas
clc
call
dec
negb
bsf
repnz
idiv
or
xchg
push
iret
ds
rclb
inc
popl
std
mov
jns
push
test
ljmp
icebp
push
and
bound
mov
sbb
dec
aas
or
das
push
and
call
mov
outsb
pop
loop
rorl
xorb
loope
and
jg
jecxz
add
lea
ret
lds
shll
mov
cmp
loopne
sbb
loopne
jae
sbb
mov
pop
xor
addr16
jmp
cmp
lret
add
cltd
xchg
arpl
clc
or
xor
lock
fdivrs
out
mov
or
lods
in
test
dec
jmp
lahf
incb
inc
cmpsb
fdivr
incl
aam
shl
xchg
adc
scas
mov
out
rep
sub
aas
mov
adc
mov
fistps
push
and
jmp
mov
cmc
xor
and
sub
enterw
call
test
or
dec
lret
dec
mov
push
push
add
clc
ljmp
sbb
ficompl
or
pop
ficomps
das
add
pop
jg
add
jbe
pop
push
arpl
test
das
cmp
jg
fstpt
pusha
sahf
cmpsb
dec
push
inc
sbb
cmpsb
fistpll
mov
ret
or
call
fidivs
xchg
sub
ljmp
xchg
sbb
mov
mov
add
and
repz
push
popaw
sti
sbb
aad
ljmp
or
in
mov
jne
and
out
fmuls
jg
or
cwtl
or
mov
lcall
mov
outsb
les
jecxz
call
pop
cld
inc
ljmp
cmp
data16
outsb
mov
mov
sahf
ret
pop
decl
pop
or
mov
inc
leave
es
mov
dec
ror
mov
pop
inc
fwait
xor
push
pop
mov
divl
jp
fs
sub
mov
adc
push
xchg
int3
xlat
cmp
pop
adc
xchg
sti
mov
fstpl
sub
decl
dec
pusha
out
movsb
fstps
jno
add
mov
decl
or
push
out
enter
and
sti
adc
mov
ret
mov
xchg
shrb
xchg
inc
shrl
jle
sub
add
jecxz
mov
inc
xchg
mov
lret
mov
push
add
in
mov
outsl
xchg
cmpsl
dec
mov
ljmp
sub
cmp
shll
xchg
inc
test
stos
pop
jmp
cmp
jmp
push
mov
adc
push
data16
cmp
pop
and
cld
loop
orb
jmp
ficoml
dec
sahf
pop
lret
bound
cmp
dec
push
jns
leave
incl
dec
repz
test
xchg
or
push
push
cmp
pop
xchg
cld
xor
jmp
mov
stos
in
fs
out
inc
xor
mov
dec
jg
cmp
test
inc
das
cmp
mov
fdivrs
push
imul
mov
jle
int3
sahf
jge
mov
jl
push
xchg
add
cs
xchg
sub
sub
pop
incl
lea
mov
jmp
testl
cmp
icebp
jmp
xchg
outsl
shl
dec
xchg
and
lcall
inc
jp
cs
and
mov
dec
xor
xor
fiaddl
mov
shlb
fcomi
dec
shrb
pushl
ljmp
jmp
insb
rcll
into
mov
pop
dec
ljmp
jp
dec
fdivrl
rorl
fiadds
into
aad
dec
aad
inc
std
into
xchg
nop
mov
mov
addr16
pushl
cld
sub
mov
into
test
out
sub
or
adc
hlt
call
mov
push
adc
pop
data16
xor
cmc
cmpsb
add
ret
jecxz
sarl
scas
je
incl
xor
insb
mov
bound
cltd
jno
dec
xor
dec
xchg
pop
sub
jmp
xchg
ja
mov
fs
pusha
aas
dec
arpl
lret
sub
mov
arpl
push
lock
lcall
jae
iret
sub
andb
cmpsb
or
cmp
xchg
lcall
xchg
cmp
dec
addb
jo
js
pop
into
jle,pn
or
mov
stc
jns
jno
adc
shll
xchg
xor
xchg
jl
lods
les
pop
hlt
call
cmp
cmc
daa
cmp
cmp
push
sub
mov
call
mov
ja
in
add
js
mov
cld
ljmp
add
xor
mov
shr
xor
jg
mov
pop
mov
call
arpl
loopne
adc
aad
cmp
fsub
sbb
push
sub
inc
fcomps
inc
or
test
scas
jmp
and
or
mov
inc
test
cld
jnp
pop
fdivl
test
stc
or
cmp
sub
decl
leave
stos
lahf
call
lret
rclb
sbb
rorb
call
add
test
lds
sbb
addr16
sbb
pop
cmpsl
scas
lcall
scas
dec
mov
outsb
push
shr
or
pop
push
cltd
daa
fnsave
push
cmp
aam
add
lcall
push
or
mov
xor
sub
push
add
int
icebp
inc
adc
incl
sub
imul
aam
pop
pop
adc
repz
insb
lods
cmp
xchg
dec
mov
pushf
sub
cmp
push
sub
insb
jl
dec
sahf
pop
inc
jecxz
inc
es
xchg
mov
lods
aad
cmc
das
and
sub
pop
pusha
shll
insb
rcrl
sbb
cmc
js
jl
lret
mov
inc
inc
or
dec
insl
lcall
call
sti
fwait
jl
adc
into
rolb
ljmp
xchg
bound
push
nop
or
lret
jns
push
xchg
lcall
lahf
lods
hlt
xchg
jmp
xlat
inc
mov
jg
jnp
jno
outsl
clc
and
je
cmp
push
sbb
mov
lods
push
push
and
xchg
cmp
dec
adc
mov
or
ljmp
xchg
push
or
pushf
pop
xlat
xchg
and
js
jg
mov
xor
ret
jecxz
scas
cld
scas
sub
dec
mov
inc
xchg
call
iret
inc
xchg
scas
test
xchg
popa
sbb
jmp
xorl
test
pop
push
add
cmp
cld
jno
dec
mov
xchg
es
or
inc
mov
sbb
or
in
jo
ret
data16
jg
mov
push
jne
xchg
rclb
incl
jmp
pop
or
mov
dec
nop
pop
add
into
das
aaa
call
jg
add
fistpl
mov
test
stos
mov
cmpsl
stos
jg
lods
pop
and
dec
jl
xor
or
rcrl
cmp
inc
sbb
outsb
mov
ljmp
scas
data16
mov
jl
insl
sahf
movsl
inc
rcr
lcall
mov
sub
into
cld
inc
shll
sub
xor
inc
imull
xchg
mov
fcomip
and
pop
test
insl
cmpsl
das
pop
pop
sub
cwtl
stc
jb
cmp
lret
lcall
incl
mov
sub
jp
call
jae
push
ljmp
imul
mov
outsl
and
popa
ja
shrb
fstl
push
mov
add
sub
inc
insb
jmp
inc
mov
pop
stos
icebp
sub
mov
and
mov
test
hlt
test
cmp
xchg
ljmp
imul
sub
out
or
or
lods
jge
lods
mov
cwtl
mov
loopne
call
sub
rep
sbb
lcall
inc
sub
mov
outsb
dec
dec
pop
outsb
pop
add
jo
xor
imul
test
jmp
fs
ljmp
cltd
pop
loopne
cmp
popl
dec
dec
mov
and
aas
sbb
clc
out
or
adc
call
dec
imull
aas
inc
mov
aad
roll
lahf
ljmp
hlt
dec
lods
adc
sbb
fsubs
ficoms
or
mov
sub
incl
cld
dec
lcall
mov
push
mov
or
pop
outsb
aas
fadds
call
cld
addr16
mov
loope
jae
pop
mov
cmp
push
mov
scas
jno
ljmp
xchg
dec
mov
in
aas
out
xchg
shl
dec
mov
xor
andl
ret
add
les
dec
push
xor
xor
std
lcall
or
cmpsl
mov
sub
cwtl
daa
int
cld
adc
push
cmp
movsl
jo
add
in
xlat
mov
cmp
pusha
popf
test
jno
decl
jge
xchg
hlt
repz
dec
lods
shll
xor
imul
dec
adc
lcall
ds
stos
stos
xchg
call
ds
dec
sub
cs
mov
and
jno
sbb
les
lds
xchg
jmp
jo
pushf
jg
sbb
cmpsb
clc
les
lcall
lretw
xchg
add
mov
xor
enter
push
andl
call
rcll
pop
imul
sub
lds
fistpl
leave
fcoms
clc
mov
jmp
fidivrl
xchg
jle
mov
adc
mov
sub
or
mov
lcall
cwtl
dec
sbb
orl
addb
das
xor
test
std
call
dec
bound
pop
aaa
pop
leave
xchg
jb
xchg
mov
loopne
mov
aas
cmp
call
je
lds
stc
ljmp
add
inc
push
stos
incl
xchg
cmp
mov
sbb
push
dec
jp
jae
or
test
sub
dec
hlt
jb
pop
iret
movsb
adc
decl
cwtl
fisttpl
pushf
pushf
add
lahf
push
das
pop
je
inc
out
out
sbb
mov
stos
xchg
dec
incl
mov
cmp
lods
xchg
jo
aas
or
testl
lcall
lds
adc
cmp
or
lods
xor
fistps
movsl
jl
xor
loopne
repnz
mov
out
aaa
out
clc
sarb
add
inc
inc
sub
lea
andl
insb
push
clc
and
cmp
cld
and
pop
or
xchg
pop
icebp
in
add
std
incl
sbb
mov
stos
sbb
insl
aaa
mov
sub
push
ljmp
clc
ljmp
scas
in
jbe
ret
pop
cmpl
movsb
or
mov
test
stos
aad
push
int3
fadd
cmpl
pusha
mov
dec
xchg
lcall
cmp
repz
pop
pop
mov
test
mov
mov
imulb
mov
pop
mov
mov
mov
mov
pop
lret
or
imul
stos
fcmovb
mov
fbld
pop
inc
pushf
adc
scas
xlat
xchg
mov
shl
jg
imulb
cs
adc
pop
dec
xor
or
lahf
out
or
cwtl
lds
hlt
dec
sahf
fbstp
xchg
insb
and
jle
sbb
leave
lret
rolb
mov
jge
std
in
jge
in
je
jmp
testl
out
lods
lcall
out
in
mov
popf
push
jg
stos
js,pt
in
push
lea
cmp
pop
aad
sti
inc
mov
ljmp
adc
sbb
mov
ror
adc
mov
shll
pop
pop
daa
and
and
mov
pop
cltd
insb
pushl
push
push
addr16
add
jb
push
das
rorb
jb
sub
mov
out
ret
call
jle
jmp
jle
sbb
mov
in
cmp
push
ljmp
repz
sbb
sarl
jl
adc
testl
leave
inc
in
jle
mov
ficoms
mov
lret
adc
lcall
jg
mov
fs
inc
into
sbb
xchg
insl
das
xor
jl
sbb
scas
jge
test
call
push
std
jae
push
mov
lcall
xchg
inc
mov
and
movsb
fisttpll
adc
ljmp
loope
incb
repz
push
das
and
add
jmp
or
fstl
rorb
sub
sub
aam
push
add
fadds
or
sti
cmp
ret
imul
test
arpl
or
fcompl
cmp
loope
dec
iret
dec
xor
push
aaa
fldl2e
xor
xlat
in
jne
idiv
dec
out
jbe
mov
dec
mov
xchg
adc
adc
mov
in
stc
push
jmp
cmp
int3
pop
push
jae
dec
pop
xor
mov
gs
sbbl
ss
test
xchg
mov
lcall
sub
mov
add
cmp
daa
gs
int
fsts
inc
or
mov
lds
and
lcall
jno
decb
call
gs
test
inc
mov
adc
aad
outsl
fisubrl
fstpl
cmp
lcall
xor
jno
pop
or
cmpsb
xor
sti
push
mov
xor
mov
push
cmp
pop
rcrl
sbb
loopne
icebp
dec
pop
data16
clc
incl
fsts
cmp
add
imul
or
aas
sarl
outsl
jl
push
faddl
repnz
mov
mov
xor
std
data16
out
inc
insl
clts
dec
or
jle
out
xchg
jg
popa
nop
and
test
lods
mov
dec
pop
fnstsw
and
lcall
jge
sbb
cs
cmc
jb
mov
jp
mov
push
ljmp
loopne
das
sbb
xchg
jge
and
stos
adc
nop
sahf
mov
jmp
adc
imul
icebp
je
clc
mov
pop
push
popl
mov
adc
movsl
or
decl
dec
xor
push
jg
xor
adcl
sub
fcoms
jmp
js
inc
xchg
sarl
fs
test
sub
pop
shr
jmp
mov
dec
pusha
sarb
sbb
rcll
pop
cmc
add
popa
test
xchg
jmp
ret
in
mov
or
cmp
cmp
mov
gs
lea
incl
inc
fwait
hlt
push
out
or
jnp
orl
push
adc
mov
cmpsb
test
std
sbb
rcrl
lahf
ljmp
xor
lds
mov
pop
stc
je
xchg
inc
enter
add
jg
scas
test
jg
inc
sub
adc
scas
jle
jmp
mov
leave
popa
or
add
cmpsl
cmp
push
pop
mov
aam
jmp
inc
mov
mov
dec
out
daa
pusha
mov
icebp
cmp
aaa
cld
jmp
arpl
movnti
xchg
xlat
xchg
psraw
adc
jle
test
lcall
push
push
jmp
js
xchg
loopne
dec
cld
sar
in
jg
pop
cmp
lea
add
hlt
mov
inc
mov
andl
test
mov
mov
cltd
in
xchg
pop
cltd
out
scas
xchg
lock
xchg
xor
lods
dec
lock
adc
add
sbb
pop
sbb
rcr
jnp
push
arpl
sub
into
dec
sbb
mov
popa
int
push
and
fldl2t
test
aaa
cmp
cmc
mov
lcall
int3
je
xchg
inc
cmp
negb
or
cmp
lret
jb
adc
imul
push
jmp
push
xchg
jb
adc
loopne
ret
xchg
imul
sbb
aam
fs
and
cmp
dec
xor
out
fidivrs
push
adc
inc
movsl
or
cld
add
movsb
lcall
add
sti
call
jae
xchg
cmp
hlt
faddl
adc
inc
insl
and
pop
mov
ds
cmp
gs
jp
mov
cmc
imul
ljmp
mov
mov
cmpsb
loope
stos
popf
jmp
es
push
in
cmpsl
xor
adc
dec
push
ret
scas
into
lcall
add
mov
and
xchg
leave
loope
clc
jg
pop
aaa
or
jb
fcmovu
push
in
mov
js
or
mov
sub
cld
dec
shrb
xchg
mov
or
and
dec
fcmovu
or
das
mov
lret
fs
popa
push
iretw
mov
lea
pushl
test
mov
jle
inc
xchg
ja
xor
and
and
clc
rclb
shrl
xchg
mov
sub
jno
jmp
mov
lods
xor
push
cmp
mov
lea
xor
xchg
arpl
dec
pop
ret
imul
daa
and
mov
inc
loope
jo
outsb
mov
mov
xlat
negl
and
fwait
pop
and
dec
ljmp
adc
adc
outsb
pop
jne
test
aam
int3
cmp
iret
inc
shl
cmp
adc
add
sub
fnstsw
add
lds
xchg
stc
cwtl
cmpsl
rorb
call
movsb
in
lods
push
ret
mov
ljmp
popf
dec
imul
loop
and
push
push
dec
dec
pop
arpl
je
outsb
clc
sbb
xor
inc
dec
addr16
loopne
decl
dec
repz
cli
adc
fwait
mov
and
call
mov
fsubrs
or
ret
enter
cmp
and
mov
lcall
ficomps
inc
and
adc
sbb
notl
or
mov
add
jnp
ret
fcmove
or
pop
sub
jge
cmp
jp
jne
push
movsb
pop
data16
pop
push
mov
stos
inc
negb
out
call
xor
into
jmp
cmpsb
inc
ljmp
jecxz
dec
mov
pushl
int3
or
mov
mov
cli
lods
xchg
cmpsl
mov
jae
dec
sarb
cli
mov
sar
ss
xor
dec
push
add
xlat
mov
mov
clc
mov
sbb
xor
in
mov
lea
fsubs
hlt
sbb
aaa
mov
mov
fmuls
adc
dec
xchg
ljmp
decb
jnp
in
je
rcrl
mov
mov
ror
js
pushl
jo
dec
mov
inc
jbe
mov
out
ret
and
adc
arpl
outsb
addb
test
call
std
call
cld
sub
stos
fwait
ret
xchg
test
mov
repz
outsl
jnp
loopne
fcomip
ds
into
repnz
cltd
addb
rol
jb
xchg
lahf
ljmp
jne
or
test
dec
and
mov
sub
aad
jne
incl
cld
ror
aaa
jp
call
fidivs
repnz
into
ja
sbb
incl
aaa
es
in
out
cmp
cmp
call
leave
nop
jl
jmp
bound
frstor
inc
sar
fabs
pmaddwd
mov
movsb
pop
jno
jge
and
jle
inc
xor
divl
incl
jno
fwait
cmc
test
or
inc
mov
jle
fnstcw
push
sub
dec
lods
decl
fsubl
pop
sbbl
cld
jmp
inc
outsl
movsb
mov
sbb
xchg
fstps
mov
mov
call
inc
mov
dec
loope
sbb
sub
sub
in
jge
ljmp
rcrl
adc
out
dec
push
add
mov
pushl
pop
bnd
aam
shl
mov
and
and
cmpsl
jb
push
sbb
call
cmpsl
das
push
jbe
lock
jg
aad
fisttpl
xor
mov
add
aam
push
std
lcall
shrl
inc
mov
insl
out
dec
xchg
push
sub
mov
or
push
bound
cld
or
mov
push
jge
lods
jno
inc
cmp
add
mov
js
cmp
int3
sbb
add
mov
aas
mov
ljmp
jmp
shlb
mov
push
subl
call
lds
inc
and
lcall
and
scas
out
or
lock
jne
lds
es
popf
jg
jg
aad
push
or
call
jne
sahf
jecxz
ja
push
mov
cwtl
in
jne
decl
sti
enter
icebp
lret
dec
dec
mov
push
dec
ud1
and
lcall
or
adc
scas
std
push
or
decl
pop
andb
mov
dec
pop
nop
sub
mov
subb
sahf
xor
pop
mov
jge
ret
or
sbb
data16
mov
icebp
pushl
stos
xor
xchg
xchg
ja
loop
xchg
call
push
and
or
ljmp
pusha
neg
cmp
stos
inc
xchg
inc
lcall
clc
cmp
xor
dec
lahf
xchg
adc
ja
jecxz
mov
or
mov
push
mov
jle
inc
clc
fdivl
test
test
or
subb
lret
std
jmp
cs
or
mov
insb
cmpb
xchg
out
jns
fdivrp
call
jmp
jle
pop
stos
pop
xor
std
or
loop
xor
incl
jb
pop
dec
mov
outsb
dec
dec
das
xor
mov
mov
daa
and
out
incl
movsb
movsl
and
mov
push
sub
into
xchg
mov
negb
xchg
cmpsl
loop
and
mov
fsubrl
bound
cmpsl
data16
jae
jnp
popf
or
fcoms
cmp
test
xchg
mov
pop
xor
les
dec
push
je
push
loop
sbb
push
and
sbb
dec
and
movsl
sub
lock
fwait
sarl
inc
insb
enter
jg
sbb
enter
scas
push
add
mov
xchg
cmp
idiv
call
mov
adc
inc
cmp
xchg
fldl
sub
sbb
xor
addr16
cmpsl
test
cmc
testl
call
mov
mov
jbe
clc
fwait
xchg
mov
out
out
cld
cmc
bound
scas
xlat
add
ljmp
xchg
cmp
cmc
outsw
pop
push
int
inc
xchg
int3
cmp
dec
pushf
fnstsw
cld
lcall
or
fs
xor
inc
test
inc
xchg
mov
mov
push
call
pop
and
add
mov
lods
sbb
pop
inc
mov
cltd
pushf
push
push
in
fistl
decl
mov
rolb
sub
es
ret
dec
insl
mov
pop
jp
dec
hlt
jg
pusha
mov
bswap
jno
imul
loopne
push
mov
fwait
mov
dec
jb
xchg
dec
pop
adc
push
pop
sub
les
pushf
popf
sbb
push
imul
or
jmp
adc
add
scas
ds
jae
mov
xor
ljmp
cmp
fdivrs
xchg
imul
mov
incl
inc
adc
and
and
pop
je
je
mov
scas
mov
jg
jge
pop
js
stos
lret
sbb
and
call
cld
push
sahf
or
test
inc
jnp
jno
dec
out
add
mov
clc
aas
xchg
rolb
loopnew
xchg
or
jno
cmp
sub
or
decl
xor
rorl
add
xchg
fimull
sub
and
push
mov
stc
sub
mov
jecxz
shll
inc
fnsave
pusha
add
jg
clc
pop
xor
pop
sub
fidivrs
sbb
inc
adc
mov
jnp,pt
fisttps
dec
bound
jae
testb
fdivrl
lea
add
aam
fisubs
and
cld
jmp
pop
jb
fcomi
outsl
fisttpl
or
cmp
xchg
int
pop
arpl
out
jg
mov
lret
add
icebp
sub
ja
in
mov
inc
call
lcall
xchg
loope
cltd
dec
adcb
pop
xchg
or
fs
ljmp
pop
scas
xor
push
test
fstpl
xchg
decl
movq
mov
mov
mov
xchg
fwait
test
test
cli
test
inc
sbb
mov
iret
jge
lret
mov
and
in
and
lcall
and
push
xchg
rorl
dec
or
and
leave
mov
aad
divl
sub
mov
lcall
mov
jmp
mov
mov
push
fisubrl
lret
pushf
aaa
jge
ljmp
ss
sub
mov
daa
or
xchg
ficoms
push
loop
mov
adc
call
aaa
xlat
xor
lret
mov
fldt
cmp
xchg
jge
aam
cmp
jg
mov
xor
sbb
sbb
repz
ja
inc
mov
pop
cs
cmp
or
insb
mull
jge
mov
sbb
xchg
sub
sbb
pop
and
decl
adc
mov
dec
pop
sbb
sbb
stos
pop
mov
jbe
dec
jns
fisubrl
pushl
out
push
pusha
xor
sti
xor
dec
int
aas
pop
and
mov
je
mov
popa
cld
xchg
cli
lea
pop
sub
lcall
jmp
les
push
add
jmp
jne
gs
fwait
mov
mov
popf
pusha
dec
jg
fistl
test
xor
int3
lods
inc
iret
loope
lock
sbb
jbe
mov
push
push
jl
bnd
push
pushl
lock
pop
xchg
fsubrl
test
inc
jl
roll
cltd
lock
xchg
lcall
in
sbb
mov
xlat
popf
push
sbb
mov
lahf
movb
inc
jmp
addr16
inc
movsl
faddl
cmp
xchg
sbb
ljmp
dec
loope
cmp
sub
pop
pop
xor
xorl
adc
mov
data16
icebp
das
inc
pusha
lcall
lcall
repnz
or
add
jbe
iret
test
xchg
sbb
inc
sub
mov
cmp
push
out
ja
insb
cld
jmp
xchg
pop
negl
cmpsl
and
jg
outsb
dec
and
jnp
frstor
enter
sub
fidivs
and
jbe
incl
dec
leave
out
ja
cli
in
mov
jp
mov
cwtl
test
je
in
test
sbb
fsubp
mov
rcrb
add
mov
push
es
adc
inc
mov
cld
shl
pushl
rcrl
rorb
cmc
jmp
inc
inc
addr16
add
jge
jecxz
js
rol
stos
adc
inc
rorl
push
repz
loope
out
sbb
lds
cwtl
andb
sbb
xchg
cmp
xchg
popa
sub
sbb
add
sub
jg
test
es
jb
mov
outsl
decl
and
inc
ss
icebp
sbb
jmp
movsl
ret
fimull
dec
lcall
jle
mov
insb
xchg
mov
push
fdivrl
jb
pushl
outsb
sbb
jbe
cmp
and
repnz
lds
xor
mov
ljmp
and
cmp
dec
shll
icebp
test
lret
or
dec
xor
mov
jmp
ja
push
stos
or
xor
sbb
xor
add
leave
mov
call
sub
push
std
push
das
lcall
jae
mov
sub
adc
adc
cmc
cmp
cmp
inc
jne
addl
ss
inc
and
loope
test
leave
dec
lahf
icebp
sub
lcall
movb
xor
mov
xchg
cmc
popa
xor
dec
add
aad
out
iret
pop
push
lret
ja
mov
pusha
call
loopne
aam
mov
cmp
fwait
int3
dec
popf
adc
call
in
sahf
sub
ljmp
push
mov
sahf
xor
jl
cmp
jmp
das
and
dec
clc
inc
mov
dec
insl
xor
sahf
sub
in
adc
push
adc
dec
sbb
xorb
or
xchg
movsb
cmp
mov
popf
xor
test
cmp
adc
pusha
int3
data16
adc
or
loop
rol
jg
movsb
cmp
jno
and
data16
add
mov
aas
jg
xlat
out
fwait
mov
enter
shlb
mov
aaa
scas
push
clc
fimuls
scas
push
mov
lret
sbb
rcl
sti
bound
jo
jns
ljmp
sti
push
adc
or
arpl
ljmp
aad
les
cmpsl
cmpsl
inc
mov
push
or
mov
clc
or
fisttpl
das
push
mov
lahf
leave
imul
stc
push
pop
mov
add
jg
pushl
or
pop
je
aaa
rolb
or
pushl
xchg
xchg
lea
jns
sbb
icebp
xor
std
lcall
decl
insb
popf
das
movsl
mov
leave
add
notb
aad
movsl
pop
std
incl
aad
ljmp
mov
add
mov
lea
jp
bound
add
pushl
cld
xor
xchg
dec
mulb
xor
pop
jb
stc
les
jmp
mov
cld
cmp
les
int3
mov
ja
clc
scas
mov
cmp
inc
outsl
jg
jb
dec
decl
xchg
sahf
cmpsl
cli
andb
movsb
jg
pop
xor
xlat
xchg
or
out
imul
push
cmp
loopne
loopne
addb
jne
test
and
ljmp
clc
decl
lods
pop
jmp
sub
aas
fisubl
int3
fildll
ss
xlat
jae
and
stos
mov
ljmp
cmpsb
aaa
jmp
test
sub
mov
mov
sub
jge
fildll
mov
sub
arpl
loopne
rcrl
push
fimull
outsl
sub
sbb
mov
inc
mov
int
lock
or
arpl
mov
mov
jmp
or
cmp
fisubs
sahf
bound
mov
fs
and
dec
dec
mov
jg
jmp
xor
stos
mov
mov
loop
add
and
test
cmpsl
xor
scas
scas
jno
cmp
jb
decl
je
adc
xor
repz
inc
jb
dec
push
mov
or
rolb
push
imul
decl
test
cld
into
push
and
das
jns
mov
mov
or
sbb
aad
mov
xlat
insl
jbe
jge
das
pop
add
jmp
pushl
xchg
dec
call
jo
mov
push
sahf
and
push
mov
mov
ficomps
sub
orb
mov
adc
test
decl
add
add
loope
push
jae
iret
sbb
pusha
jg
inc
adc
or
jbe
ficoms
push
mov
fwait
repz
out
ret
pop
add
inc
pop
fdiv
push
sub
call
call
xchg
adc
xor
dec
stos
clc
jle
popf
fistl
addl
pop
js
xor
xchg
aaa
adc
sbb
xchg
xor
mov
jg
out
clc
pushf
jb
aas
ljmp
xor
insb
shl
dec
out
push
lock
jmp
movsl
ljmp
and
fsubs
push
push
xor
push
fldcw
movsl
push
push
out
or
std
incl
mov
gs
clc
add
cmp
int3
bound
scas
int
xchg
sbb
mov
pop
mov
adc
dec
mov
test
sbb
sub
push
or
call
test
push
fsubrs
test
out
aad
int3
sarl
dec
jno
into
mov
add
ja
ljmp
sub
enter
cmpsl
mov
xchg
pop
cmp
into
add
jp
xor
mov
cmp
pushl
jp
push
test
test
cltd
push
sbb
popf
scas
nop
or
xchg
ss
mov
lds
inc
xor
int3
dec
cmp
mov
les
dec
fisubrs
incl
dec
jb
daa
push
jle
mov
imul
ret
push
call
add
sbb
ret
pusha
js
or
cmp
sub
clc
cmp
ljmp
xlat
pop
stos
fcomp
xor
mov
lods
das
imul
sbb
lret
mov
fstps
in
mov
les
shrl
lcall
or
in
sub
inc
fisubs
ds
js
clc
pop
and
dec
ret
lea
mov
jmp
fstp
gs
push
push
adc
mov
ss
sub
sbb
sub
push
ljmp
and
add
mov
lods
inc
repz
decl
out
repz
outsl
dec
mov
mov
add
iret
ljmp
pop
cmp
jbe
lret
push
and
ljmp
push
fcoms
lcall
push
jne
sbb
dec
insl
cwtl
les
jns
repnz
popf
sub
pushl
xchg
dec
imul
mov
sub
push
loopne
cs
jg
fiadds
insb
mov
mov
ljmp
shlb
push
repnz
outsl
ds
insl
ja
lods
sub
push
fdivr
xchg
jmp
dec
fs
lods
push
in
push
pop
clc
push
sbb
fisubl
xchg
and
adcl
mov
pop
pop
idivl
movsb
mov
dec
xor
mov
sub
mov
push
jnp
cmpsl
or
or
xor
xchg
jg
jecxz
out
sahf
sbb
inc
push
icebp
incl
insl
dec
lcall
aam
and
push
xchg
jl
scas
fbld
lcall
lcall
sub
sub
out
lods
jo
loopne
and
cmc
mov
jbe
pop
or
mov
mov
or
mov
stos
cmp
scas
add
movsb
push
push
push
cli
cmpsb
shrb
lcall
pop
in
mov
push
movswl
insb
fcoms
xchg
es
aas
xor
lcall
out
mov
enter
fimuls
loopne
movsb
cltd
inc
mov
jns
jecxz
call
pushf
js
inc
faddl
pop
add
cmpsb
push
cli
push
or
mov
aam
std
add
test
rcll
push
shrl
repnz
pop
push
mov
scas
ret
lock
xchg
ja
xchg
jp
cmpsb
data16
inc
movsb
dec
lock
movsb
sbb
xchg
jl
incl
mov
stos
dec
adc
dec
popf
inc
inc
xorl
test
adc
jl
jmp
cmp
lcall
int3
in
lret
cli
sub
mov
fildl
jmp
or
inc
repnz
mov
add
fsubrl
notb
add
lret
sub
push
mov
cmp
and
push
xor
push
enter
test
push
bound
jmp
idivl
repz
sti
cmp
or
mov
pop
sub
fbld
and
imul
mov
iret
mov
pop
paddd
mov
nop
js
push
and
into
pop
jb
call
jl
or
xchg
loopne
out
pop
incl
cs
prefetcht1
mov
cwtl
in
push
or
aam
in
mov
cmp
inc
jle
loope
jmp
cld
mov
mov
dec
fisubl
arpl
add
decl
xor
lcall
adc
mov
in
jno
int
dec
jmp
pushl
cmpl
inc
pop
pusha
sti
lret
push
pop
lea
out
sub
jp
insl
fs
in
call
cmc
out
mov
xor
repz
cwtl
and
sbb
scas
das
jns
rcrl
cmp
test
and
pushl
mov
jp
mov
or
cmp
jle
ss
jg
fs
ljmp
pop
lahf
cmp
rolb
xchg
sbb
popf
pop
bound
decl
xchg
call
lock
adc
jg
inc
clc
ljmp
lods
sbb
lods
dec
repnz
pushf
push
lcall
pop
cmp
mov
mov
imul
and
fwait
and
cmpsb
mov
sbb
ja
cli
push
sbb
sti
mov
adc
sbb
pushl
inc
sub
or
sbb
push
inc
add
pop
stos
add
repz
and
and
lods
filds
out
in
pop
addb
negb
and
add
sahf
jae
and
ss
daa
ss
jo
mov
push
add
fidivrl
add
pop
mov
cmp
jg
inc
add
pop
mov
add
dec
orb
mov
lahf
pop
adc
or
inc
push
iret
adc
ret
and
scas
jle
test
jg
pop
iret
mov
add
nopl
push
ret
jns
scas
dec
les
dec
and
mov
lret
jg
push
add
xchg
movsl
push
daa
add
xor
dec
and
cmpsl
push
and
cs
push
movsb
das
cmpsb
test
scas
push
stos
jne
aas
xlat
push
and
push
test
and
imul
sbb
pop
add
push
dec
lods
push
mov
pop
sbb
add
std
mov
inc
mov
pusha
sbb
mov
addr16
fcomip
push
adc
fs
mov
insb
or
lret
imul
mov
push
add
push
sub
lret
mov
js
push
add
flds
imul
mov
stos
pop
stos
mov
push
jbe
add
jo
mov
mov
ret
outsl
push
shll
add
outsl
push
shll
fidivrl
iret
outsb
or
push
ret
je
fsubrp
mov
fidivrl
out
jge
fisttps
add
fwait
inc
ds
dec
in
movsb
push
add
mov
sbbl
push
cmpb
arpl
push
push
push
aaa
fcmovnbe
mov
push
jne
push
aam
push
ret
add
lahf
jbe
push
mov
push
pop
dec
jbe
cmpsl
mov
push
data16
sarl
pop
aaa
add
push
xor
shlb
lret
stos
mov
add
ja
push
push
xlat
jne
add
push
jbe
fdivs
push
aad
push
xlat
ja
fwait
testb
fidivrl
push
jp
jp
mov
mov
inc
push
fidivrl
sarl
ja
lods
pop
mov
fldl
ret
jmp
ja
mov
ljmp
xchg
in
xchg
sub
je
cs
xchg
xor
xchg
push
setbe
xor
ss
aaa
addr16
fildl
lcall
push
cmp
pushf
cmp
ds
push
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
mov
mov
mov
push
jge
sub
test
cld
out
iret
jmp
ds
push
hlt
clc
stc
repz
repz
sti
cld
std
incb
xchg
lods
lock
mov
xchg
fldcw
add
jo
imul
insb
add
pop
add
pop
add
adcb
add
inc
push
push
insb
mov
or
push
add
int3
std
mov
or
outsl
or
or
stos
add
stos
stos
cmpsl
inc
in
fidivs
sbb
mov
imul
pop
adc
out
lods
cltd
lods
add
pop
stos
psubusw
lods
pop
mov
lods
mov
scas
insl
lods
pop
pop
adc
and
adc
sbb
add
sbb
scas
scas
scas
add
or
mov
add
mov
pop
in
dec
rcrl
mov
push
add
test
mov
and
mov
rcrl
add
mov
sub
push
dec
mov
and
add
pushf
sub
jns
sub
sbb
mov
mov
subb
sub
lea
push
es
fwait
and
cmp
cmp
cmpsb
add
std
jg
mov
xor
xor
pop
or
or
jle
jbe
add
pop
pop
xor
jg
incl
pop
pop
das
push
cs
xor
add
xor
das
pop
push
push
xor
jg
adc
pop
push
cs
dec
inc
das
inc
inc
xor
adc
push
xor
push
les
call
jbe
cmp
jl
jge
jno
dec
add
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
xorl
inc
jmp
mov
pushf
fwait
lcall
mov
jle
int
mov
inc
xchg
push
dec
ja
jns
dec
push
bound
jg
fwait
push
js
imul
add
mov
pop
jg
and
bound
bswap
or
pop
bound
outsl
mov
jle
xchg
pop
push
repz
mov
push
mov
cmpsb
push
mov
jle
fisttpl
dec
dec
xor
ja
push
ja
jb
cs
xor
mov
push
mov
std
mov
pop
jbe
dec
sbb
and
mov
cmpsl
fnstcw
jo
push
inc
mov
jg
adc
cmp
mov
inc
mov
xchg
jp
fildll
inc
push
popf
inc
mov
aaa
add
xchg
jno
lret
addr16
iret
push
bound
mov
mov
jmp
popf
inc
push
sahf
mov
insb
add
outsb
add
xchg
pop
push
test
cmpsb
dec
push
dec
push
movsb
add
jae
add
jb
shll
outsl
pop
xlat
ds
pushf
push
rorb
add
lcall
outsb
mov
repz
dec
mov
add
ja
sahf
jbe
fistpl
add
fstps
outsb
ds
push
add
and
aam
mov
mov
testb
mov
shrl
insb
pop
outsb
lret
repz
outsl
ror
push
ds
add
jge
push
jg
fiadds
call
add
mov
add
jle
inc
add
mov
add
test
add
push
loopne
iret
sahf
jae
jnp
mov
jb
out
insb
push
std
jbe
jg
jle
or
jecxz
or
push
aad
push
divb
fildl
adc
push
mov
pop
addb
fwait
mov
sbbl
test
test
sbb
test
into
mov
mov
push
xchg
nop
and
out
xchg
add
in
xchg
lock
sub
sub
divb
xor
push
xchg
repnz
xor
subl
sahf
xor
lcall
fdivrs
pushf
cmp
lock
imul
cmpsb
scas
jo
test
sahf
mov
lea
into
shll
mov
lgs
int
insl
roll
sarb
push
movsb
out
jl
mov
ret
hlt
adc
pop
data16
add
addr16
xchg
lods
add
dec
out
je
dec
sub
inc
movsb
daa
add
push
and
mov
add
femms
or
or
or
sbb
or
es
push
adc
push
add
adc
adc
ds
add
and
mov
adc
sbb
pop
test
mov
mov
fisubrl
mov
add
and
negb
inc
loopne
ds
mov
lods
xor
and
aas
push
adc
xor
or
iret
adc
cmp
cmp
repnz
and
testb
cmp
ds
jbe
sbb
sbb
cmp
scas
xor
dec
mov
scas
ds
jle
aas
adc
mov
mov
ds
xor
dec
inc
test
mov
scas
add
fwait
bound
mov
addr16
mov
ds
mov
lcall
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
test
in
mov
lcall
sub
sub
add
add
fisttpl
or
sub
dec
and
inc
cmp
push
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
insl
popf
push
jg
je
xchg
jns
jle
addl
jo
inc
pop
adc
cmp
push
andb
and
mov
incl
add
shr
ja
incl
cli
cmc
repz
dec
xor
jg
push
aas
add
xchg
pop
cmp
test
add
mov
add
mov
outsl
fisttpl
push
fnstsw
repnz
inc
add
mov
int
gs
pushf
ds
add
notl
in
lcall
or
mov
mov
sahf
or
jae
js
sti
mov
add
mov
mov
test
scas
xchg
js
pop
push
out
sti
fidivl
ds
sub
xchg
push
sub
insl
nop
sub
xchg
xor
xchg
xor
xchg
imull
outsb
lcall
leave
jbe
negl
in
fidivrl
shlb
iret
push
lret
loopne
inc
clc
cltd
xlat
push
std
into
sbb
mov
xchg
int3
data16
add
test
jg
jle
jge
adc
adc
add
nop
or
push
dec
dec
dec
decb
dec
add
pop
add
push
dec
or
adc
cmp
mov
mov
or
add
push
adc
enter
add
or
pop
pop
cmovg
in
lcall
and
dec
and
aas
inc
inc
inc
adc
sbb
dec
add
dec
adc
inc
ds
aaa
fisubrl
cmp
cmp
daa
and
sbb
add
lcall
sbb
and
add
dec
ss
xor
sub
sub
push
push
push
add
insl
mov
fidivl
mov
mov
mov
cmp
mov
push
or
adc
add
inc
pop
pop
push
enter
or
or
outsl
mov
cmpsl
dec
xor
or
into
incl
jg
sub
inc
xlat
sbb
shll
or
push
jnp
pop
mov
es
xor
cmpsb
pop
daa
iret
fdivrp
sysret
in
lock
pusha
rcll
punpcklwd
rcll
inc
sbb
or
push
lock
outsl
pop
mov
sub
sahf
jg
test
sub
lahf
mov
into
adc
out
cli
mov
add
mov
cli
filds
add
cmp
pop
jg
add
xor
cli
inc
test
adc
les
or
jg
inc
mov
cmp
pop
das
sti
mov
pop
pop
add
jle
rcll
mov
sti
jg
jo
insl
pop
xchg
ret
mov
adc
and
pop
test
sbb
push
les
dec
idivb
ljmp
cld
add
and
bound
or
push
or
std
test
add
xchg
les
xchg
pop
jg
push
orl
add
mov
or
sub
decl
push
loopne
xor
inc
xor
incb
jg
and
adc
xor
incl
jg,pt
sbb
sbb
mov
shl
pop
pop
xor
mov
jle
mov
push
sub
sbb
and
xchg
ffree
mov
push
call
and
xor
lods
jle
lret
imul
mov
xchg
add
inc
imul
scas
jle
mov
lcall
push
popa
mov
xchg
cmp
jg
sbb
adc
data16
sub
add
push
sub
adc
jg
ss
les
inc
pop
add
mov
ljmp
call
ljmp
stos
insl
in
popf
testb
pop
add
daa
aas
xor
mov
pop
pop
add
in
push
pop
pop
jle
add
xor
push
rolb
sub
or
lahf
mov
pushl
push
jle
push
dec
xchg
push
bound
add
mov
mov
insl
iret
das
pop
daa
push
arpl
xchg
popa
das
les
push
mov
insl
xlat
out
mov
decl
dec
push
and
decl
ljmp
add
ds
sub
mov
inc
lea
push
dec
jl
jge
idiv
fnstenv
add
push
jne
pop
test
jbe
out
push
dec
or
jnp
push
jp
push
js
mov
jbe
pop
add
call
fdivrs
jne
jbe
push
outsb
ds
cmp
jle
cmp
aam
dec
incl
sub
jp
dec
test
xchg
dec
ja
xchg
subb
je
sahf
jns
fs
adc
xchg
call
push
mov
adc
outsl
inc
jbe
sahf
inc
out
scas
cs
aas
and
push
pushf
cmp
cmpsb
test
cltd
mov
insl
fstpt
xchg
xor
xchg
xor
sub
sub
nop
daa
xchg
sarb
ss
cs
mov
enter
xor
stos
test
mov
sbb
jg
pop
fnsave
xor
test
push
inc
or
or
es
or
ss
cs
rcl
push
add
or
mov
ja
dec
push
test
movb
aas
adc
ja
divb
mov
add
ja
add
in
adc
push
addb
inc
add
sub
push
dec
push
outsl
std
cmpsb
mov
mov
jns
aas
scas
adc
pop
push
xorl
cmp
mov
cwtl
mov
jmp
push
imul
mov
sbb
test
push
lock
cmp
push
jmp
pop
cmp
icebp
call
xor
in
add
mov
mov
pushl
add
dec
out
pop
dec
sahf
jbe
idiv
mov
or
push
call
push
sbb
xor
inc
cmpsb
negl
sti
std
call
jmp
syscall
mov
sub
xchg
mov
or
call
sbb
add
mov
daa
cld
pop
das
pop
stos
mov
incw
js
xchg
adc
add
push
jbe
lcall
or
sub
sti
psubusw
test
ds
fcompl
adc
ljmp
test
inc
push
sahf
test
call
decb
sbb
inc
cmpsb
decl
mov
lcallw
sub
ljmp
cmp
add
adc
mov
enter
bswap
xor
data16
adc
inc
sti
mov
stos
insl
out
setno
incb
add
push
inc
dec
inc
sub
nop
sysret
arpl
add
mov
outsb
push
sub
dec
arpl
push
sub
pop
sti
and
call
imul
call
mov
jbe
xor
pop
stc
bswap
arpl
leave
add
call
jg
push
inc
test
cli
dec
dec
mov
test
push
imul
push
sbb
imul
rcll
ficoms
push
pop
inc
stos
nop
into
aaa
mov
jecxz
fwait
push
shll
roll
imul
ret
lcall
call
adc
jmp
ljmp
dec
push
mov
push
inc
insb
insl
fidivl
mov
fildll
sahf
movsb
dec
push
stos
push
popf
inc
xchg
fidivs
inc
cs
dec
mov
and
push
add
push
out
push
shrb
rcl
lea
outsb
shrb
es
add
sub
repnz
push
iret
insl
pop
xchg
dec
ja
daa
outsl
pop
imul
push
push
push
push
xchg
push
ljmp
jmp
lcall
xlat
ds
pop
add
repnz
fwait
dec
push
jmp
pushf
cmp
xchg
hlt
push
aas
decb
cwtl
xor
and
push
xchg
hlt
push
push
aaa
push
lcall
ss
xchg
push
xchg
es
xchg
xchg
dec
notb
sub
test
mov
scas
sub
lcallw
xchg
dec
fimuls
jg
cltd
xor
or
std
faddl
inc
fstpt
push
jnp
jp
outsb
lcall
or
jl
sbb
movq
es
jbe
int
jle
adc
fidivrl
push
dec
push
dec
repnz
repnz
jae
outsl
mov
jns
push
mov
jnp
jge
hlt
test
imul
jl
cli
int3
outsb
nop
negl
adc
mov
mov
mov
nop
xlat
lods
cmp
iret
mov
int
push
addb
jnp
lahf
dec
es
mov
in
inc
and
orb
jl
hlt
jg
and
xchg
out
push
sub
iret
out
mov
cli
cmp
aaa
aam
jbe
clc
push
idiv
out
ds
test
inc
sub
jg
mov
icebp
push
dec
mov
dec
pop
cld
loope
out
push
daa
jno
sub
jg
mov
icebp
fistl
xorb
xchg
mov
xchg
ja
bnd
repnz
xchg
cld
jp
sub
adc
in
xchg
aaa
or
out
cmp
jge
and
sbb
in
sar
jg
dec
in
rclb
ja
iret
lock
mov
icebp
test
idiv
push
lcall
je
lea
fsub
pop
push
stos
nop
test
int3
decl
inc
jle
mov
fidivrl
arpl
clc
popa
and
decl
into
and
pop
or
push
xchg
and
pop
dec
inc
ds
lcall
push
nop
stos
and
jns
mov
mov
jmp
xchg
jmp
mov
push
xchg
mov
pop
test
loop
adc
xchg
out
sbb
loope
and
lret
jg
push
and
insl
or
or
cmp
aaa
add
ja
inc
or
nop
xlat
push
cmovno
dec
cmp
dec
adc
adc
add
push
pop
dec
loop
dec
mov
add
or
xlat
xor
inc
ds
push
xor
adc
imul
push
jne
cmp
ret
into
pop
in
ja
fistl
add
push
sbb
push
or
xor
and
fcomi
inc
or
push
stos
mov
xchg
incl
dec
and
push
and
add
xor
adc
imulb
and
xchg
push
scas
xchg
mov
add
add
lods
push
ss
inc
push
gs
jo
pop
rolb
ret
add
add
inc
insl
dec
std
and
add
lret
jo
and
inc
and
push
push
aaa
loop
and
test
dec
test
pusha
nop
inc
add
lock
inc
jmp
lahf
jo
das
cmp
popf
sbb
ds
lret
ret
add
imul
lea
push
and
sbb
dec
pop
add
ficompl
mov
sbb
xor
dec
jns
add
inc
aad
mov
add
mov
inc
lret
sbb
pop
cmp
inc
sbb
lods
add
insl
pop
adc
and
adc
insl
pop
pop
popf
in
mov
sub
push
popa
shlb
xor
and
sub
jb
mov
dec
xlat
jae
add
add
sbb
mov
xchg
test
xor
filds
das
inc
mov
bound
mov
add
jo
movb
pop
add
adc
sub
idiv
sbb
mov
add
inc
stos
push
pusha
fists
push
push
outsb
dec
push
outsl
loop
fidivl
mov
sub
dec
dec
fwait
movzbl
ljmp
insb
pop
dec
insb
out
inc
imul
sbbl
andb
dec
inc
adc
sbb
insb
jne
add
inc
cmp
push
adc
rolb
add
mov
or
add
mov
inc
fidivrl
jmp
fstpt
arpl
push
adc
add
add
fiaddl
fidivl
popf
xchg
push
mov
aad
mov
pop
aas
cmp
adc
icebp
mov
add
xchg
jnp
sbb
cmp
jo
int3
adc
cmp
dec
in
and
sbb
push
orl
stos
mov
mov
adc
xchg
inc
adc
add
ljmp
outsl
mov
jecxz
popa
addl
or
adcl
dec
sub
sbb
inc
push
es
push
jb
dec
movsb
sub
push
cwtl
jmp
add
jg
shll
shl
inc
je
cmc
jbe
bound
iret
add
or
and
xchg
xchg
mov
icebp
popa
and
pop
test
jbe
lds
push
sbb
addr16
and
xor
add
rorb
add
pop
inc
adc
sub
sub
je
fists
push
jae
xor
jno
inc
sub
mov
mov
adc
nopl
dec
das
out
fistl
mov
jne
ja
sbb
mov
inc
loope
add
and
adc
or
ret
xor
je
jne
inc
cmc
mov
loop
sub
outsl
jae
and
loopne
loop
outsl
popa
clc
jp
mov
mov
cmpsl
adc
mov
and
fldenv
pop
fisubs
cmp
inc
arpl
mov
xchg
add
comiss
popf
mov
xchg
aam
sub
xchg
pop
sub
mov
pop
out
mov
dec
sbb
sbb
mov
jnp
push
test
imul
push
sbb
arpl
push
imul
aam
test
xor
xchg
es
lds
push
adc
xlat
and
inc
enter
and
insb
sbb
cmp
jne
inc
xchg
mov
fs
or
pusha
aam
jbe
popa
rcpps
js
ret
mov
inc
xchg
push
sbb
fs
mov
imul
lds
fdivs
adc
insb
sahf
daa
push
and
insl
mov
das
push
cld
sub
fldt
add
mov
js
dec
lea
loop
jecxz
or
fistpl
sbbb
js
hlt
add
adc
push
jo
push
stos
dec
and
push
les
and
addr16
inc
dec
mov
int3
sub
pop
xor
mov
adc
sbb
outsb
inc
sbb
or
roll
and
leave
sbb
insl
dec
outsb
dec
std
lea
adc
push
and
mov
sub
push
push
js
mov
int
add
pop
add
add
sbb
mov
imul
add
or
imul
imul
scas
imul
es
nop
ret
or
pop
add
lods
add
addb
add
and
gs
pop
sbb
fmuls
inc
jo
sbb
or
out
test
imul
popf
stos
es
inc
push
sub
imul
adc
inc
stos
add
inc
insb
scas
test
test
push
int
outsb
inc
xor
xorl
sbb
out
xchg
fs
ret
mov
jo
inc
sbb
add
sarb
inc
adc
cmp
mov
je
jno
mov
dec
pop
push
xchg
lods
dec
jbe
inc
mull
pop
scas
int3
ficomps
fs
push
jge
out
int3
mov
imul
and
lcall
push
dec
mov
inc
insb
sub
mov
mov
mov
mov
sbb
jo
outsb
sub
mov
xchg
mov
pop
xlat
adc
or
test
jbe
mov
call
mov
lods
lea
inc
xor
sub
sbb
out
inc
aaa
outsl
in
loopne
js
adc
mov
jno
inc
ret
lods
outsb
jbe
lods
sbb
test
inc
jle
push
shll
rolb
scas
das
cmp
inc
push
mov
sbb
insl
dec
inc
push
push
xchg
and
sub
mov
orb
mov
adc
arpl
imul
test
pop
xor
arpl
pushf
mov
and
inc
sbb
mov
nop
fs
xor
mov
cmp
jns
test
mov
push
and
inc
cmp
and
jg
out
mov
cmp
jmp
pop
sbb
roll
aas
scas
inc
sub
adc
nop
shlb
lods
mov
xchg
jbe
enter
inc
or
test
push
mov
fdivr
push
inc
inc
int3
js
movsl
cmp
xor
push
outsb
movsl
addr16
cmp
arpl
mov
jnp
jo
pop
dec
mov
jmp
pop
mov
outsb
inc
test
pop
inc
ja
imul
and
lcall
sbb
sub
inc
cmpsb
dec
push
ss
push
xchg
test
dec
movsl
dec
sub
inc
sbb
mov
sub
add
push
push
ja
insb
add
mov
add
mov
add
scas
sbb
outsl
and
les
mov
out
movb
mov
addb
add
inc
dec
mov
mov
mov
shlb
fwait
add
push
cld
push
movb
ja
or
jbe
jbe
push
mov
inc
adc
add
rorb
mov
jp
dec
or
pop
and
adc
inc
fidivs
xchg
jg
dec
adc
lods
add
incl
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
