mov
and
imull
mov
add
add
add
into
jl
decl
mov
mov
xor
ret
mov
ret
pop
fs
testb
fidivrs
clc
pushl
sub
push
mov
adc
cmp
je
cmp
je
pushl
mov
push
push
adc
push
adc
adc
call
inc
add
fcomps
shlb
jmp
push
pop
pop
ret
insb
mov
mov
mov
std
push
lea
push
call
int3
pop
mov
cmp
or
int3
fcompl
xor
enter
je
loopne
and
je
push
push
cmp
or
or
lret
xadd
dec
cmp
repz
jg
mov
mov
push
mov
call
inc
inc
add
add
mov
out
xchg
or
or
mov
xchg
sbb
ret
push
and
and
and
and
das
sbb
inc
fcomip
sbb
mov
lahf
push
pushl
mov
call
outsb
mov
call
mov
mov
pop
pop
ret
sub
or
sbb
push
adc
cmpl
jne
pop
iret
xchg
decl
or
add
inc
cmpb
stc
ret
adc
jl
mov
cmp
jg
mov
mov
movb
jg
and
popa
push
push
push
mov
mov
sub
insb
push
clc
mov
add
pop
cld
ljmp
aas
push
cmp
push
adc
in
xor
data16
jg
cmp
jge
mov
inc
push
lea
or
push
xor
mov
add
into
mov
mov
pop
mov
jge
cmpsb
ret
pop
leave
arpl
sub
cmp
mov
mov
jle
push
mov
les
push
or
fimuls
push
pop
mov
pop
sub
popa
aaa
lea
mov
mov
or
jge
fcmovnu
leave
ret
dec
aas
rorl
add
add
or
add
leave
jl
mov
mov
jle
decl
pop
push
cmp
je
cmp
jle
and
xchg
add
cmp
cmp
sub
push
jmp
ds
pop
jo
mov
jmp
xor
hlt
outsl
hlt
mov
xor
jmp
push
push
or
inc
jecxz
in
in
push
cld
fistl
and
push
or
jmp
push
jge
mov
jmp
mov
pop
xchg
mov
gs
add
xor
out
dec
icebp
fstpt
xchg
rorl
jbe
mov
push
loopne
mov
push
lea
iret
push
ret
sbb
nop
or
add
dec
stos
je,pn
push
mov
adc
mov
cli
imulb
fsubr
mov
jne
and
jmp
push
push
mov
push
add
notl
out
sbb
popf
lret
push
push
xor
cmp
sub
call
mov
neg
sbb
inc
je
mov
enter
xor
push
add
sub
mov
int3
into
dec
mov
jno
stos
mov
popf
mov
sbb
aaa
mov
push
je
inc
cwtl
into
pop
pop
pop
stc
test
adc
orb
dec
or
mov
xchg
jns
enter
jmp
jbe
push
dec
cmp
jl
cmp
jne
repnz
xchg
mov
inc
aam
jmp
mov
mov
jle
mov
add
push
inc
adc
mov
ret
mov
cmp
jle
mov
or
sbb
push
hlt
test
cltd
fimuls
adc
adc
pop
mov
push
fs
xlat
test
cmp
dec
neg
mov
repnz
jle
push
pop
add
jmp
mov
mov
jge
mov
jle
add
jmp
add
and
add
xchg
inc
jnp
fstl
inc
pop
orl
loop
add
add
dec
aas
push
fnstenv
and
mov
push
sub
fildl
mov
jnp
push
cmp
dec
or
sub
xchg
push
push
dec
adc
cmp
inc
icebp
movl
and
pop
sbb
mov
and
mov
sbb
cmp
pop
andl
rcr
mov
enter
shll
sub
adc
jge
add
das
jp
movsl
mov
lahf
add
fistpll
hlt
sub
inc
out
cmp
pop
push
ja
lea
bound
ret
xchg
jmp
or
lock
out
test
pop
pop
pop
rolb
sub
fmuls
stc
mov
int3
sub
sbb
xor
xchg
push
jne
push
push
sbb
mov
mov
testl
jmp
jo
iret
aas
push
jbe
push
push
push
push
ja
mov
jnp
inc
aas
cmp
push
idivb
rcl
adc
icebp
pop
push
mov
aaa
insb
cmpsb
push
rorb
pop
add
mov
out
imul
inc
cmp
adc
clc
add
sbb
ret
push
mov
pop
push
lods
js
outsl
mov
dec
push
dec
lcall
push
and
rorl
movsb
cld
add
ret
inc
rolb
pop
cwtl
pop
and
xchg
dec
test
adc
daa
sti
jne
cmp
in
stos
shlb
pusha
sub
or
push
adc
movb
lock
dec
movzwl
lea
jne
sbb
inc
movl
data16
mov
call
push
imul
dec
enter
daa
or
sahf
xchg
out
adc
or
or
sbb
clc
shrb
mov
stos
or
mov
mov
pop
push
push
incl
dec
daa
into
inc
jmp
stos
in
or
pop
push
push
cwtl
fsts
push
inc
mov
sub
pop
mov
jmp
pushl
push
mov
out
mov
lcall
push
je
push
testb
jno
xor
shll
popf
addb
or
aam
lock
ss
in
sbb
inc
xor
pushl
testb
push
push
push
sbb
hlt
jne
add
mov
mov
push
push
push
sub
push
scas
jno
push
xchg
inc
mov
cmp
cli
jo
pop
fmull
adc
inc
inc
push
cmp
dec
inc
and
cmp
inc
push
push
mov
cmp
pop
je
in
mov
mov
push
sub
clc
add
bound
mov
dec
call
mov
dec
imul
add
and
dec
cmp
hlt
sbb
inc
pop
leave
rcll
testb
adc
punpckhdq
mov
cmp
jmp
pushl
and
xor
mov
les
jo
mov
fldz
push
add
mov
add
clc
sarl
subl
fcmovbe
push
ret
dec
aas
mov
xchg
jge
xor
pop
pusha
push
mov
cmpsb
dec
ret
pop
jmp
lock
cli
sub
aad
cmp
clc
insb
cmp
jl
lea
cltd
idivl
flds
incl
inc
dec
xor
or
mov
sahf
ljmp
ja
out
xlat
push
cmp
popf
cmpl
out
pop
stc
mov
mov
cmp
outsl
mov
mov
adc
sbb
pop
sahf
sbb
and
incl
mov
loopne
cmp
adc
cli
mov
dec
sub
jge
jmp
mov
mov
jg
test
mov
mov
jge
faddl
jg
fdivl
cmp
shlb
into
jno
fdivrp
sarl
mov
aam
sbb
mov
mov
pop
add
mov
add
cmp
jmp
fnstsw
sbb
dec
adc
mov
xor
mov
je
into
clc
fidivl
jmp
outsb
sub
popa
sbbl
mov
out
mov
add
repnz
hlt
jbe
dec
ljmp
dec
mov
add
jge
lds
das
xchg
cmpb
sub
icebp
ret
mov
stos
cmpb
push
fsubs
mov
pop
mov
sub
shrl
mov
add
push
push
pusha
mov
scas
leave
fnstenv
int3
pushf
dec
out
ret
loopne
clc
push
cmpl
add
in
adc
jnp
mov
int3
mov
xlat
rcrl
xor
xchg
xor
push
std
and
jne
inc
les
mov
imul
rorl
roll
das
push
leave
xor
pop
adc
pop
inc
inc
xchg
pusha
fadd
rcr
scas
and
mov
push
push
cli
inc
mov
adc
arpl
sti
dec
sti
rclb
push
bound
pop
adc
iret
xor
add
mov
inc
lods
pop
xchg
mov
sub
adc
orl
shrb
clc
mov
je
cmp
pop
add
push
nop
pop
addr16
push
pop
push
mov
push
push
xchg
pop
sbbl
jae
adcl
jns
push
adc
pop
es
push
xchg
inc
jo
stc
in
or
mov
pop
popf
outsl
or
and
outsb
andb
insl
add
popa
stos
pop
jno
test
cmp
setb
test
jne
mov
push
inc
icebp
sub
sar
add
dec
adc
xchg
or
xlat
mov
sbb
push
mov
into
cmp
scas
xor
or
adc
or
and
andl
push
mov
xor
cmc
loop
pushf
clc
sub
push
dec
sub
mov
pop
jg
ret
mov
and
mov
das
push
jecxz
mov
or
mov
push
loopne
ret
push
mov
adc
and
lret
pop
inc
inc
sub
mov
rclb
lds
repnz
call
loopne
data16
push
push
lea
lock
fsubl
sub
cld
pop
mov
xor
pop
mov
leave
scas
or
repz
push
mov
mov
adc
cmp
jg
jle
aad
cmp
add
into
xlat
and
incb
repnz
add
push
xchg
sbbb
popf
test
lcall
push
jle
jle
pop
xor
xor
pop
cwtl
xor
push
adc
mov
jmp
fisttpll
stos
xor
xlat
adc
and
cmovnp
jmp
out
sahf
and
adc
mov
adc
pusha
push
adc
pop
aad
lea
xor
or
mov
xlat
in
movl
push
outsl
xchg
or
mov
add
push
imul
sbb
push
xor
mov
add
imul
adc
mov
adc
jnp
xor
dec
pop
mov
mov
lret
clc
push
add
rclb
mov
mov
in
sub
xchg
push
or
or
push
sbb
clc
pop
mov
aam
call
push
mov
jbe
hlt
sub
cmp
push
es
lcall
cmp
add
adcb
imul
je
or
jns
clc
add
fdivr
std
sub
cmp
je
lea
neg
sbb
sbb
xlat
jmp
loopne
cmp
je
and
out
mov
adc
cmp
cmp
out
push
fidivrs
pushf
mov
pop
in
jmp
and
mov
les
sub
jge
add
in
out
xor
out
jne
adc
xchg
je
or
fsubr
cmp
enter
add
sbb
mov
cwtl
jg
fs
shlb
pop
push
loopne
mov
push
int3
sar
mov
jo
daa
mov
jp
xchg
ss
and
add
test
mov
push
push
cmc
rorb
repz
dec
outsl
sbb
dec
pop
cmc
add
push
pop
movb
addr16
add
or
jns
mov
icebp
xor
cmp
or
mov
or
in
imul
pop
xorb
das
jmp
and
scas
out
or
or
sbb
jb
mov
int3
or
jmp
push
and
pop
jl
and
push
jmp
adc
sub
mov
mov
push
xchg
popa
adcb
mov
xor
pop
aas
ljmp
loope
sbb
je
cmp
mov
push
jl
lea
adc
and
daa
mov
ss
push
push
lock
daa
dec
int3
jg
adc
stos
pop
inc
pop
adc
jo
dec
jbe
faddl
std
cltd
fs
inc
xorl
lock
jb
test
push
jno
dec
sbb
or
push
leave
jne
cmc
xlat
jp
imul
mov
dec
mov
push
inc
mov
dec
sub
mov
sub
sbb
inc
cmp
lret
fmull
in
add
iret
adc
lods
or
add
ret
inc
xor
test
pop
inc
push
lock
test
ret
pop
jmp
add
icebp
add
adc
and
xchg
sub
sbb
jbe
add
mov
mov
mov
cmp
push
scas
std
adc
out
fstl
lea
cmpsb
mov
dec
adc
and
jmp
in
mov
push
jp
test
cld
fstpl
in
or
adc
stc
mov
movsb
repz
adcb
push
scas
cmp
popf
stos
push
pop
mov
enter
or
xor
dec
cmp
xchg
push
push
dec
aam
enter
into
pmulhw
sbb
ja
add
loopne
xchg
mov
rolb
pop
and
addb
push
lock
push
imul
lock
add
jb
add
add
loopne
test
and
add
incl
sub
inc
sub
add
or
sub
xchg
lea
int3
pop
jne
ret
adc
fsubl
jecxz
push
clc
mov
testb
cmp
push
sahf
push
sub
jg
push
push
push
push
shrb
mov
into
ret
cmp
and
push
add
jle
rclb
inc
cwtl
cmp
cs
and
sbb
and
cmp
ja
jno
in
mov
lea
movsl
fldt
cmp
sbb
cltd
mov
add
sar
frstor
mov
jbe
ficoml
daa
ret
inc
cmp
jnp
add
cmp
fdivrs
xor
jge
mov
fcomip
sti
push
pop
lods
ret
test
cmp
mov
std
fnsave
iret
idiv
jle
mov
fwait
mov
sub
add
add
push
jbe
jp
nop
call
mov
mov
add
xor
jle
ljmp
in
jne
pushl
sbb
sbb
nop
pushl
mov
cmp
loope
xor
lock
sub
adc
add
pop
jg
pusha
rclb
lds
in
test
bound
and
xor
movsl
inc
cmp
add
or
pop
ja
push
sub
imul
out
js
pop
test
sub
mov
fs
fwait
mov
sbb
xchg
dec
mov
ss
pop
rep
icebp
adc
test
mov
pushl
jle
xchg
imul
cltd
and
adc
cltd
jmp
out
push
mov
call
cmp
inc
sbb
test
pop
loope
test
lahf
out
adc
jmp
sbb
mov
test
cmpsb
fcomi
ficomps
jnp
mov
adc
adc
fbstp
mov
lock
pop
lea
cmc
sub
mov
int
sub
dec
imul
aam
sub
inc
ss
mov
jo
sbb
jge
add
movsl
lret
cmp
xor
add
push
fldl
es
sbb
filds
fnstsw
test
jp
dec
pop
das
arpl
add
clc
mov
push
fstpl
les
pop
or
rcr
stc
shr
cmp
jbe
push
xor
js
mov
cmp
mov
pop
xlat
shll
cli
inc
adc
push
push
jecxz
sbb
push
or
xor
sub
add
sbb
jns
or
push
call
sub
lea
and
xor
jl
push
mov
lret
sbb
fadd
sbb
mov
les
repnz
fistl
lods
xor
pusha
sub
adc
adc
mov
insb
clc
sbb
push
mov
inc
push
enter
fldcw
xchg
movsb
xor
dec
mov
or
jge
mov
jle
push
sub
outsb
cmp
ds
push
push
push
inc
into
jge
in
jbe
in
push
and
push
sub
repz
nop
mov
fadd
or
add
add
cld
adc
push
sub
adc
inc
stos
fmull
push
sbb
scas
mov
dec
push
xchg
ljmp
lcall
jl
dec
jb
out
cmp
xorb
push
xor
addl
and
je
mov
inc
jge
adc
jns
xlat
fidivs
or
adc
cs
aaa
faddl
sub
ja
aas
sub
sbb
scas
test
xor
pop
inc
adc
push
mov
pusha
fmull
sub
push
jo
scas
push
test
daa
sbb
dec
pop
and
addl
mov
aaa
sub
push
inc
inc
sub
in
int3
mov
adc
call
push
aaa
paddw
rcl
xlat
pop
fs
out
js
mov
insb
mov
or
ret
push
les
loope
mov
add
pop
aaa
mov
mov
push
xchg
push
add
mov
pop
adc
xor
dec
or
add
lock
adc
inc
xor
xor
subb
adc
xchg
mov
xor
adc
and
or
push
inc
mov
lods
sbb
mov
cmovle
and
cld
push
xlat
add
jge
cmpb
xchg
mov
int
ds
and
pushf
jge
mov
mov
xchg
add
jmp
fistps
mulb
shr
sub
push
push
inc
scas
mov
sub
imul
cmp
push
xchg
mov
cmp
push
or
jns
push
or
mov
add
add
pop
dec
mov
shlb
mov
jne
bnd
mov
adc
add
movsb
sub
mov
adc
cld
ret
mov
mov
rcr
hlt
mov
xor
sbb
pop
bound
push
jmp
insb
pop
dec
push
xor
mov
dec
mov
lock
sahf
push
cli
movups
sbb
and
cli
hlt
cmp
movsb
push
repz
cmpl
push
cmp
fnstsw
incl
mov
push
cltd
pop
idiv
cmp
jne
fwait
icebp
jmp
ljmp
cmp
pop
jle
mov
sbb
push
mov
mov
mov
adc
lock
or
pop
mov
icebp
mov
ljmp
xchg
push
pop
jmp
addr16
pop
cld
jmp
mov
sub
dec
je
sub
je
sub
mov
push
into
dec
push
decl
cmp
dec
in
lcall
xchg
jmp
mov
arpl
sbb
and
test
dec
xchg
adc
adc
mov
add
xchg
or
add
pop
inc
add
or
sub
add
shll
add
sbb
xchg
cmpb
add
or
int3
push
imulb
push
shlb
jg
jge
or
jl
adc
daa
in
shrl
jl
push
sub
and
mov
and
fiaddl
xchg
push
or
testb
ljmp
push
mov
enter
push
inc
insb
dec
dec
lock
pop
into
insb
add
les
sub
or
das
cmp
ret
cmpl
fadd
cmp
inc
add
scas
rcl
inc
jle
mov
loope
adc
push
pop
or
jne
loope
or
xchg
push
subb
pop
rcrb
xor
xchg
mov
das
xor
push
fistl
pushl
add
or
leave
push
inc
dec
jmp
test
sbbb
sbb
cmpb
pop
mov
clc
in
sub
shl
mov
rol
adc
jge
pop
dec
es
jmp
jg
add
sti
jne
mov
nop
or
pmulhuw
enter
push
lret
jo
sarb
jge
or
cmp
jge
push
dec
fldl
mov
mov
pop
pop
jle
es
sub
mov
mov
jle
fidivl
data16
test
shr
pop
frstor
addb
aas
xlat
and
mov
jbe
add
roll
pop
arpl
lea
adc
inc
inc
lcall
mov
fs
and
gs
xchg
pop
xchg
inc
cmp
je
push
push
lds
cmp
pop
jbe
movzbl
cwtl
add
push
mov
inc
shll
inc
inc
inc
mov
mov
mov
xor
cmpb
mov
jne
mov
sub
in
jne
jb
dec
ret
and
fldenv
mov
lock
mov
sbb
pushl
push
loop
cmp
gs
push
push
push
clc
or
inc
lock
push
jo
mov
fisttpll
xor
mov
int3
mov
ss
mov
xchg
cmpsb
popf
loope
add
scas
sbb
and
inc
adc
push
out
int3
pusha
cmp
add
stos
adc
mov
inc
out
rolb
and
mov
lock
push
push
push
inc
dec
jle
lods
or
jmp
xchg
je
cmp
call
or
ljmp
adc
mov
mov
add
xor
mov
jmp
adc
shrb
decl
push
inc
mov
fistps
jo
dec
mov
pop
in
sbb
jg
jbe
add
call
ja
hlt
or
test
cs
mov
push
cmp
dec
add
jl
pushl
inc
and
pop
hlt
jle
ret
loope
loope
int3
enter
cmp
pop
je
push
push
sbb
dec
repnz
into
sbb
mov
enter
pop
sub
push
lahf
loope
shrb
inc
sbb
cmp
pop
add
sub
pushf
clc
lods
stc
add
xor
iret
dec
sti
push
testl
inc
in
and
xchg
push
in
inc
orl
inc
and
pop
repz
lcall
inc
push
out
pop
imul
out
sub
loopne
js
push
cmp
xchg
arpl
std
mov
lret
or
jns
xchg
sub
or
push
push
jns
pop
lret
and
leave
or
imull
gs
aam
sbb
cmp
inc
enter
out
add
shrb
adc
cmp
or
rolb
mov
int3
and
push
jns
add
int3
or
jns
sbb
add
lcall
add
cmp
inc
push
or
out
cmp
mov
cmp
sbb
sbb
or
test
les
sbb
lods
sub
push
jns
push
add
inc
rorb
testl
enter
sbb
add
movb
xchg
movsb
jb
add
push
cmp
mov
outsb
jmp
sbb
add
push
sub
xchg
mov
test
les
arpl
scas
pop
add
mov
adcb
xor
jae
jbe
or
ret
shlb
mov
jge
fwait
cmc
sub
inc
jae
adc
mov
aaa
faddl
fisubs
xchg
xchg
fsts
push
adc
mov
dec
in
daa
sub
dec
or
test
movsl
arpl
outsb
inc
test
sbb
out
lret
test
fsubrs
fbstp
inc
lret
sub
push
mov
popa
sub
cmp
das
jmp
loopne
add
mov
add
cmp
sbb
adc
leave
and
int3
pop
add
pop
enter
push
in
sbb
hlt
mov
aas
pop
or
loope
cmp
popa
or
mov
and
or
cmovns
lock
idivl
data16
mov
mov
test
mov
sbb
jge
xor
or
in
jge
loope
mov
sarb
xor
cmp
fldenv
lock
push
test
in
orb
shr
enter
inc
mov
enter
je
adc
jne
pop
fidivrl
push
push
cld
andb
cmp
jne
js
in
adc
pushf
push
mov
dec
mov
sbb
push
push
push
add
pop
mov
add
mov
push
mov
mov
xchg
fsubrs
je
xor
lea
ja
adc
clc
cmp
jae
pop
sub
fcomps
lahf
or
inc
shlb
fcomp
das
icebp
inc
fmuls
add
push
jb
push
add
mov
decl
bound
mov
cmp
push
hlt
jge
mov
jg
loope
xlat
push
and
sub
push
push
ds
push
cmp
add
mov
addl
fistl
add
movsb
in
fdivs
pop
pop
les
sbb
cmc
ret
jl
in
push
pop
test
cs
cwtl
add
push
pop
inc
pushl
jp
add
dec
scas
sbb
dec
push
sub
sbb
bound
add
jp
rcrb
orb
jge
add
out
or
lcall
addl
fiadds
or
or
xor
adc
add
xchg
in
mov
gs
lods
flds
xor
aam
jae
xchg
dec
add
adc
add
push
outsb
push
repnz
in
or
push
popa
cmp
inc
adc
mov
das
jp
dec
push
sahf
mov
aaa
lcall
out
add
enter
and
shr
or
or
and
mov
popf
add
repz
imul
in
add
addr16
rolb
cli
add
aad
loopne
mov
addr16
xor
int3
inc
aas
test
xlat
xlat
test
pop
cmpl
ds
add
dec
add
cmpl
xchg
pop
add
dec
and
int3
cmp
jl
jmp
push
loopne
pusha
xor
adc
shl
lret
adc
inc
jbe
dec
dec
aam
mov
mov
jne
aam
repnz
nop
xchg
cmp
add
adc
push
movsb
in
fwait
lods
push
lock
adc
in
das
jae
cmpsl
sub
pop
stos
popf
add
inc
aam
mov
gs
jl
or
fcoms
andb
push
repnz
push
dec
shll
lods
je
xor
out
add
and
xor
inc
dec
in
adc
inc
push
fs
xor
icebp
fs
es
pop
sub
inc
dec
mov
dec
out
int3
push
jo
xor
pop
lds
mov
addr16
add
mov
testb
test
mov
dec
push
sbb
or
sbb
aas
addb
mov
fdivs
or
loope
xor
xchg
or
mov
popf
sbb
pop
lods
sub
fnstenv
call
sub
iret
scas
enter
call
loopne
insl
add
mov
rcrl
enter
dec
dec
repz
or
push
fists
jb
mov
loope
xchg
dec
dec
push
add
loope
rcrb
mov
mov
and
dec
adc
std
dec
and
aaa
fxch
and
pop
std
dec
cltd
add
fs
and
subb
pop
pop
dec
jl
sbb
mov
in
aaa
je
icebp
push
xor
sbb
in
or
ja
jle
sub
sub
inc
add
ret
xor
dec
ljmp
ret
sbb
sub
and
dec
data16
xchg
data16
jbe
lea
ljmp
jno
dec
adcl
les
dec
xor
or
pop
or
sbb
or
shlb
js
or
mov
icebp
lret
loopne
adc
sub
cmc
add
roll
imul
popf
insl
fs
sbb
and
fcoml
scas
je
stos
lock
ret
test
fs
data16
cmp
je
jno
sarb
in
lock
loop
fistpl
ret
jne
xor
and
xchg
fistl
in
or
cmpsb
pop
ss
ja
jmp
xorl
call
jb
jo
loopne
pop
jbe
imull
fistl
aam
or
adc
mov
jo
mov
imul
inc
out
shll
fcoml
sbb
adc
pop
orl
mov
dec
movsl
imul
dec
inc
and
enter
lahf
jne
push
push
pop
or
or
push
jl
or
jb
add
mov
sbb
movsb
loopne
pop
movsb
xor
dec
mov
ret
jmp
xor
or
mov
cmp
nop
je
push
outsb
or
push
xchg
subb
stos
sub
js
push
jb
mov
add
sbb
pop
dec
cld
xchg
add
pop
sbb
loop
call
mov
clc
jne
jmp
push
rcrb
lods
lods
pop
lock
add
mov
mov
daa
dec
movsb
test
mov
sub
cmp
cs
push
rorb
sub
xchg
pop
testl
fadds
mov
leave
mov
or
ret
jmp
es
mov
pop
xchg
jl
pop
push
repnz
and
jmp
loopne,pn
arpl
mov
push
rclb
bound
add
sbb
xor
jb
into
mov
or
movsb
xchg
or
add
clc
inc
jecxz
cmp
mov
insb
mov
adc
sub
add
into
xor
add
add
iret
sbb
leave
xor
andl
jmp
mov
test
ljmp
jl
push
jmp
adc
shlb
push
push
xchg
clc
aas
into
jno
ret
add
pop
push
sbb
or
pop
loopne
hlt
mov
out
fimull
inc
pop
ret
and
inc
dec
adc
jecxz
in
mov
xor
popa
cmpb
je
mov
jmp
sbb
lock
sub
or
pop
stos
push
aad
mov
das
pushl
sbb
fmulp
mov
int3
sub
push
push
sbb
lea
push
push
push
push
aaa
leave
inc
negb
call
js
jmp
lea
push
lods
in
sub
imul
and
or
adc
adc
add
sbb
mov
imul
mov
je
and
sub
movsb
daa
add
cmp
jp
test
out
or
lods
sub
or
insb
mov
jg
cmp
jb
cmpl
dec
insl
rol
movsb
mov
enter
jmp
mov
scas
test
mov
flds
testl
sahf
push
jbe
sub
add
je
cmp
or
mov
mul
mov
repnz
sub
lcall
iret
push
mov
pop
push
mov
inc
jae
ja
push
adc
push
pop
adc
xor
add
insb
hlt
movb
adc
or
pop
mov
repnz
inc
pop
inc
loopne
push
jb
push
cmp
jo
push
lea
enter
pop
add
sub
test
ja
mov
dec
hlt
jg
jmp
sub
hlt
jg
add
push
jmp
or
out
dec
cmp
clc
xor
push
mov
dec
push
xchg
rorl
push
push
pop
popa
in
jo
cmp
mov
ret
daa
mov
add
cwtl
movsb
sbb
fs
dec
dec
je
popa
xor
inc
inc
je
hlt
xor
or
cmp
mov
mov
jmp
xchg
scas
test
test
cmp
or
imul
enter
inc
in
in
lods
outsl
mov
push
add
sbb
out
dec
lea
add
roll
sbb
xor
push
outsb
aam
inc
mov
jnp
lret
or
jne
js
out
jmp
jo
test
mov
lret
inc
adc
test
sbb
add
cmpsl
sbb
mov
cmp
add
es
push
ds
mov
call
test
sbb
test
or
std
or
cmp
sti
push
cmp
mov
mov
jg
movsb
dec
or
jmp
push
cmp
pop
push
xchg
inc
jo
xlat
fadd
jge
lock
sbb
inc
gs
out
or
in
sub
xchg
and
or
and
test
jne,pn
mov
cmpsb
dec
leave
and
adc
enter
mov
repz
jmp
andps
or
scas
pop
add
rcll
mov
inc
mov
int3
and
fcoml
adc
sub
add
ret
push
addl
loope
push
jne
in
mov
fistpl
cwtl
into
mov
mov
push
in
cmp
lds
aam
lock
pop
fsubrl
xor
cmp
inc
shrl
stc
inc
jp
fadd
jb
loopne
cmc
cmpsb
add
call
add
fadds
in
add
rcll
inc
das
adc
cmpsb
pop
sbb
sbb
fists
dec
faddl
inc
mov
sbb
inc
aaa
shlb
add
pop
inc
push
pushf
sbb
loope
cmp
dec
ficompl
adc
and
das
and
fdivl
pop
scas
fdivr
imul
ja
or
adc
adc
adc
pop
fcoml
sahf
gs
xor
lock
test
adc
add
add
mov
or
mov
je
push
mov
mov
mov
aad
xchg
sti
ret
push
mov
jle
cli
jmp
data16
sub
jl
add
addl
cmp
xchg
aas
add
int
push
mov
pop
mov
les
sbbb
pop
jo
xchg
or
jle
aas
jg
xor
push
xchg
dec
js
and
pushl
addb
push
outsl
cmc
xor
pop
aam
push
pop
enter
mov
xor
inc
add
cmc
test
aaa
loopne
imul
adc
add
js
xor
pushf
mov
push
in
fwait
ss
pop
popa
jne
testl
push
pop
je
mov
jne
mov
lods
sbb
faddl
lcall
pop
and
jge
cmp
sbb
push
xor
clc
sub
sub
or
xchg
and
in
add
mov
sbb
pop
popf
push
or
add
jae
loopne
sub
or
repnz
cmp
fisttps
movsl
addr16
add
push
imul
adc
ja
jg
adc
ret
xor
std
push
xor
cmpsb
or
and
into
mov
orl
or
lock
sub
inc
out
mov
fldl
les
xor
sub
mov
adc
push
ds
shl
jp
mov
ret
bound
lock
xlat
push
push
lret
xchg
loop
inc
call
dec
pop
test
pop
movd
mov
adc
in
shl
inc
aaa
inc
in
and
or
repnz
ffree
or
add
fcmovb
fwait
mov
mov
mov
fwait
cmp
inc
mov
faddl
fsubr
nop
ja
or
or
es
daa
or
in
adcb
push
lcall
cwtl
xor
push
pop
push
jge
inc
push
popa
xchg
aaa
pop
mov
lock
or
cmp
call
filds
and
lea
movl
adc
push
mov
ljmp
daa
sar
pop
icebp
add
cmp
mov
dec
add
pop
bound
push
mov
adc
push
sbb
sub
push
sbb
je
push
pop
inc
push
in
dec
mov
dec
adc
jno
imul
es
fs
cmpsb
mov
adc
mov
pop
mov
jmp
fisubrl
push
lock
xchg
lret
dec
repz
clc
inc
clc
out
jp
adc
push
repnz
jbe
lea
std
frstor
fstpt
jecxz
in
or
inc
stc
push
sub
jns
in
call
inc
ds
call
xor
add
loope
pop
inc
or
and
movl
xor
inc
push
push
inc
or
sbb
cmp
rolb
inc
loop
mov
mov
mov
jecxz
clc
cmc
or
push
pop
or
daa
rcrl
test
or
lret
jbe
addr16
mov
out
sbb
cli
add
sub
lock
lods
inc
pop
push
or
aam
je
daa
loopne
sbb
call
inc
popa
sub
rcr
push
roll
push
pop
stos
icebp
rolb
lret
andl
shlb
ss
mov
lcall
push
push
sbb
pop
ss
inc
pop
jnp
sbb
push
mov
xor
push
cmpsl
xor
push
shlb
push
jno
push
pop
std
pop
push
pop
inc
dec
sub
stc
xchg
inc
adc
sti
lock
pop
dec
pop
or
and
or
clc
adc
cld
mov
inc
xchg
adc
jb,pt
pop
movsl
sub
jbe
lods
add
sbb
ja
jmp
push
bound
xchg
lcall
pop
ja
aas
jne
sub
mov
ss
or
push
ja
stos
mov
jae
xchg
pop
push
mov
push
mov
or
enter
fwait
sbb
andl
fdivl
inc
rcrb
push
mov
js
push
pop
inc
add
mov
push
inc
mov
mov
rcll
push
sub
or
in
fsubs
dec
xor
add
call
shlb
xchg
mov
jle
mov
mov
xchg
cwtl
fistl
mov
jmp
jecxz
sbb
add
push
nop
pop
aam
jbe
inc
sbb
fmull
cmp
mov
cld
xchg
loope
cmp
je
or
std
xorb
mov
mov
inc
mov
scas
js
jne
lea
cmp
or
je
push
call
fs
loop
aas
inc
orb
add
xor
popf
sbb
pop
movsl
out
cmpsl
jne
pushf
jmp
sub
sub
push
or
loope
mov
flds
fldenv
push
and
cmp
mov
pop
shufps
pop
fiaddl
fistl
fwait
or
je
loopne
test
in
iret
adc
xor
fs
movb
dec
and
xchg
jns
mov
push
mov
push
push
sub
sbb
push
loop
mov
mov
xlat
js
push
or
andb
pop
pop
push
out
sub
xor
adc
xchg
in
push
movb
cli
sub
adc
push
add
and
jp
bound
rclb
js
adc
push
push
sarb
out
insb
rolb
sub
stc
dec
divb
jle
push
lock
xor
dec
fcomps
ss
arpl
xor
fstpl
and
sbb
test
dec
dec
xchg
adc
fldcw
rep
cmpsb
push
add
test
sbb
aad
pop
pop
mov
mov
lea
cmp
jne
test
mov
mov
pusha
xchg
ds
lds
fadds
mov
testb
sub
or
push
pop
sub
cwtl
pop
cltd
cld
dec
mov
or
stos
add
clc
jne
cmp
int3
jbe
cs
ja
pop
xchg
mov
xchg
jge
loop
sub
fisubs
pusha
xor
lds
bound
pop
push
push
out
jecxz
inc
fnstenv
or
or
test
push
dec
jb
sbb
popf
or
inc
notb
xor
pop
pushf
xchg
pop
test
xor
inc
insl
lock
sub
icebp
repnz
push
mov
lret
mov
pop
outsb
and
rcrl
pusha
or
jbe
inc
pop
imul
adc
and
in
jne
jne
push
test
cmpsl
dec
scas
xchg
cld
jg
sub
xor
pop
xor
in
in
pop
cmc
fadd
sbb
xor
les
adc
in
loope
mov
mov
pop
inc
jl
add
pusha
push
push
pop
push
adc
jbe
sbb
cli
inc
lods
mov
pop
sbb
cmp
jo
push
sub
sbb
dec
mov
adc
out
sub
lock
mov
out
pop
inc
cmc
outsb
pusha
jno
xor
push
xchg
cmp
movsl
arpl
stos
int3
push
xchg
loopne
dec
add
and
or
outsl
mov
mov
push
sbb
ja
loop
call
and
add
sub
sbb
push
jnp
xchg
data16
into
sbb
and
push
push
lods
out
mov
jmp
insb
sub
pop
push
pop
jo
sti
loopne
push
fsubrl
loope
pushf
jmp
jle
cmp
inc
bound
jle
add
pop
out
testb
add
and
mov
push
sub
sub
push
icebp
andl
or
or
cmp
jmp
lds
inc
xchg
pop
or
add
sub
outsl
sub
testb
fildll
push
or
adcb
mov
enter
inc
add
in
xor
push
in
or
sahf
sbb
je
xchg
sbb
and
daa
xchg
push
popa
gs
outsb
shll
dec
push
adc
call
xchg
dec
xorl
dec
dec
sbb
push
and
mov
add
sub
int
dec
faddp
shufps
rcrl
aas
xchg
daa
xchg
or
dec
in
loopne
jo
mov
ret
add
enter
insb
nop
mov
aam
xor
pop
addb
nop
and
xchg
lock
frstor
andl
or
ja
insb
xchg
sbb
and
lods
pop
cmp
add
add
adc
stos
pop
iret
inc
ret
cwtl
in
iret
push
in
aam
loop
jns
pop
leave
mov
sbb
fbstp
xchg
js
das
pop
and
test
dec
int3
scas
or
add
ss
cmp
inc
imulb
sbb
and
bswap
js
jmp
xor
jb
movsb
aam
add
or
test
dec
cwtl
and
ja
cmpl
rclb
pushf
cltd
or
aas
xchg
loopne
fdivs
add
pop
xchg
mov
push
out
sbb
cli
faddl
clc
push
mov
inc
dec
mov
cmpsl
fwait
test
mov
clc
inc
push
cmp
xchg
push
sub
aas
mov
inc
shl
cmp
imul
xor
adc
aam
mov
sub
push
jo
or
sub
jl
pushf
pushf
outsb
push
sbb
push
sub
std
rolb
sbb
shr
popf
test
xchg
xlat
inc
out
add
mov
dec
sbb
sub
push
int3
das
ret
mov
fucomp
push
mov
fs
mov
mov
mov
ret
mov
cli
mov
lret
mov
gs
ss
je
mov
inc
pop
pushf
mov
in
in
pusha
add
adcb
dec
hlt
out
pop
push
fwait
pop
dec
mov
fst
rclb
push
push
inc
ficompl
dec
dec
into
icebp
mov
mov
jmp
jnp
jle
pop
xchg
xor
sbb
popa
dec
push
cld
mov
mov
and
lret
xchg
js
rcrb
or
sti
xchg
jmp
rcll
imul
filds
iret
xchg
or
pop
pop
push
fdivl
jns
lret
or
mov
cmp
pop
and
test
fdivrs
out
mov
add
add
push
push
xchg
mov
sub
or
jmp
pop
js
pop
stos
inc
mov
in
les
arpl
imul
push
inc
push
scas
pop
jp
push
fs
pop
pop
inc
inc
je
sbb
xchg
inc
cmp
push
xchg
xchg
addr16
push
mov
ja
outsl
pop
les
clc
push
xchg
sub
out
adc
add
mov
movsb
test
add
std
xor
fs
mov
jo
pop
push
adc
stc
add
nop
push
rcll
shlb
or
dec
push
test
adc
sub
je
add
xor
les
inc
adc
pop
repnz
adc
enter
loop
add
shlb
adc
or
jb
add
ja
mov
push
cmp
loopne
dec
test
add
sbb
jl
cmp
sbb
jae
int3
jmp
xor
mov
dec
push
add
xchg
add
les
xor
fildll
mov
inc
jge
punpckhdq
jne
push
jmp
jb
xchg
daa
aad
push
cmovl
push
sbb
xchg
call
js
or
xchg
into
insl
add
push
sbb
xchg
jo
cmp
xchg
inc
jne
jmp
pop
lahf
or
xor
dec
jecxz
into
scas
mov
jecxz
test
aas
mov
fnstenv
rclb
or
adc
cmp
popa
test
mov
in
mov
pop
pmulhuw
enter
pusha
sbb
push
pop
fcoms
repz
cmp
sahf
lds
sbb
pushl
sbb
adc
rcr
xchg
xor
scas
mov
iret
or
mov
out
sbb
mov
adc
dec
pop
nop
repnz
sub
orl
pop
mov
xor
fisubrl
pusha
sub
cmpsb
inc
mov
in
dec
movsb
rcrb
outsl
ret
or
push
xor
dec
lahf
dec
xchg
sub
inc
xor
push
pusha
dec
sbb
push
jmp
cltd
and
cmpsl
sub
and
enter
loopne
push
push
cmpl
push
ja
shrl
dec
xor
mov
or
or
mov
mov
and
mov
add
push
adc
andl
lods
push
nop
sbb
push
push
cmp
add
pop
shrl
adc
push
clc
fmulp
lret
icebp
pop
ret
xor
dec
xchg
add
movsb
aas
jne
xor
cmpsw
sahf
sarb
push
jle
fs
les
add
shl
push
mov
aam
ret
jmp
add
sub
mov
and
mov
mov
mov
fsts
add
out
or
add
dec
cld
sub
pop
cld
flds
fsubs
jl
adc
insl
push
mov
std
adc
jae
mov
and
lret
mov
sbb
cmp
pusha
jns
ja
sbb
sbb
andl
loopne
sub
add
or
and
aas
add
sarb
add
push
hlt
jg
mov
mov
add
jecxz
xbegin
clc
push
ret
xor
fwait
xor
jmp
add
inc
add
inc
rcrb
mov
lock
xor
inc
push
test
cwtl
loop
rcrb
push
stc
adc
dec
out
jmp
or
and
fildll
dec
push
les
and
dec
movsb
mov
xor
sub
mov
dec
sbb
cmc
rolb
imul
cmp
and
pop
mov
lea
addr16
push
add
push
or
push
daa
sti
daa
rorb
cwtl
dec
or
pop
or
pop
imul
adc
adc
adc
push
aam
int
or
adc
or
add
ds
xor
fs
cltd
bound
or
sub
or
enter
add
mov
mov
mov
jb
inc
sbb
dec
dec
daa
dec
fnstsw
jne
add
enter
push
jge
or
push
inc
out
mov
in
cmp
je
int3
outsb
add
pop
lcall
push
out
jb
push
push
add
mov
or
jle
jl
jnp
add
pop
mov
push
xor
pop
insl
insb
xchg
pop
xchg
fsts
loopne
stos
mov
inc
cmp
imul
popa
adc
xchg
arpl
je
test
adc
pop
mov
push
mov
adc
xchg
inc
sub
sub
loopne
add
push
inc
xchg
sub
pushf
fisttpl
imull
scas
adc
jmp
pop
mov
ss
inc
inc
lds
inc
lcall
in
cmp
lea
cld
sub
push
cmpl
adc
add
cmovg
sub
leave
arpl
jne
ret
pop
int
enter
pop
xrelease
or
enter
mov
cmp
jb
mov
imul
cli
js
sub
sbb
scas
dec
inc
jmp
lea
add
cmp
cwtl
or
ja
push
push
push
cmpsl
je
xchg
cwtl
sarb
add
add
pop
or
shrl
adc
pop
imul
and
pop
mov
repz
repnz
push
lret
pusha
pusha
cmp
or
mov
jae
cmp
aas
nop
cmp
jne
inc
cmp
jb
pop
pop
pop
xor
jg
or
jne
push
push
stc
xor
popl
ds
mov
or
push
add
push
mov
fcomps
sbb
fmull
mov
add
dec
daa
mov
daa
xchg
adc
cmp
push
dec
dec
scas
scas
or
push
mov
sub
subb
cltd
dec
and
pop
jo
mov
xor
imul
add
pop
sbb
call
imul
int3
dec
test
mov
test
add
call
lea
xchg
addr16
sbb
clc
fistpl
test
xchg
sbb
inc
call
lock
add
add
xchg
insl
sub
clts
push
cmp
clc
and
mov
sbb
ja
adc
cmp
push
add
sbb
mov
das
xchg
sbb
mov
inc
pop
je
enter
and
loope
pop
stc
outsb
pop
jecxz
pushf
ret
jmp
sahf
push
loopne
negl
stc
mov
pop
jg
sub
mov
jg
fwait
sbb
or
mov
push
sub
mov
lahf
ja
arpl
push
lock
or
mov
ja
orl
das
xchg
jb
inc
sub
push
and
dec
mov
mov
xor
js
inc
insl
dec
roll
popa
push
dec
pop
cli
movsl
cmp
insl
cmp
mov
add
push
sti
out
add
sub
pop
data16
pop
daa
imul
mov
mov
pushl
pop
push
xor
es
sbb
imul
sbb
hlt
adc
or
out
and
or
mov
daa
call
dec
cmp
jl
add
add
aaa
add
iret
inc
pop
push
cmp
jne
inc
push
sub
aam
addr16
insl
or
or
adc
mov
xor
fwait
or
ds
or
jmp
js
adc
les
dec
inc
jne
and
add
cld
jge
sti
dec
scas
or
jb
test
pop
inc
adc
cmpsl
notb
xor
loope
pop
inc
jl
mov
scas
imul
add
mov
dec
lods
ret
add
icebp
movsb
xorb
dec
push
fidivrl
mov
add
addl
aad
mov
and
dec
repnz
mov
in
cmp
push
cmp
stos
or
lcall
pop
and
pushf
or
cmc
dec
jge
scas
ror
push
push
mov
push
movsb
sub
test
cld
jecxz
add
push
push
add
add
xchg
aam
pop
leave
lret
gs
out
leave
push
jp
insl
mov
mov
outsl
subb
or
inc
push
jbe
out
mov
sbb
jl
insb
movsb
mov
fwait
ljmp
gs
xchg
or
jbe
pushf
inc
test
mov
cltd
sbb
push
arpl
or
add
adc
sbb
imul
push
outsb
scas
mov
push
sub
sbb
push
es
jmp
ret
sbb
leave
sbb
push
sbb
push
negl
mov
or
sbbb
std
cmp
push
inc
mov
and
mov
mov
scas
push
or
in
orl
les
xchg
or
call
push
mov
cmp
push
popf
imul
push
subl
in
out
mov
mov
nop
xchg
dec
xchg
addl
push
shrb
addr16
push
pop
dec
or
je
push
je
dec
xor
pop
inc
xor
add
add
inc
sbb
add
les
dec
pop
rcll
enter
loop
xor
test
dec
xchg
push
and
xchg
sbb
or
enter
push
push
addl
and
and
loopne
orl
or
fidivl
sbb
scas
pop
mov
gs
cli
or
dec
push
loope
xchg
sbb
popa
negb
daa
xchg
sub
loope
xchg
pop
lds
inc
xor
mov
add
movsl
push
adc
bound
adc
cs
aaa
push
cmpsl
pop
loope
mov
andb
les
and
adc
sbb
pop
in
loopne
mov
mov
sbb
xchg
cwtl
cwtl
mov
inc
enter
jo
inc
loopne
mov
pop
and
jae
addr16
sbb
sub
adc
mov
xchg
sub
jo
pusha
stos
adc
in
xor
je
xor
mov
fs
dec
push
or
subl
das
in
jb
loopne,pn
xor
sub
xchg
cltd
jl
push
sahf
dec
mov
add
xlat
outsb
sbb
pop
mov
mov
clc
xor
ret
inc
fs
and
xchg
xor
or
mov
inc
jns
and
push
das
aam
jg
lcall
adc
enter
mov
aas
pushl
lea
xchg
pcmpgtd
push
jmp
call
shl
dec
cmp
lea
jl
mov
mov
push
es
inc
mov
jle
in
cmp
mov
pop
jns
movb
dec
call
adc
jge
and
pop
sbb
jle
nop
push
sahf
jne
mov
add
and
shrl
and
outsl
bound
mov
pop
mov
call
dec
sub
fwait
js
mov
add
inc
push
pop
add
add
jl
es
dec
sbb
into
jg
pop
sahf
push
add
xchg
and
add
pop
repnz
in
sub
mov
out
lods
dec
add
push
repnz
popw
mov
xchg
mov
dec
nop
xor
push
cmp
pop
xor
cmp
adc
je
adc
jg
cmpsl
dec
xor
push
leave
insb
sbb
sub
push
popf
ret
dec
fildl
rorb
es
std
xor
inc
jnp
lcall
mov
mov
fwait
pusha
js
mov
sbb
aam
ror
xchg
jp
jg
mov
shlb
iret
fsubs
push
inc
dec
or
pop
das
in
loopne
adc
je
jne
lock
or
inc
jle
jns
sbb
adc
in
test
sbb
push
js
icebp
xchg
inc
xchg
xor
insb
stos
jb
pop
xor
movsb
cwtl
loopne
fadds
shlb
add
fldcw
adcb
test
lret
mov
sub
push
or
push
jbe
or
xchg
mov
pop
ljmp
inc
jle
mov
inc
or
jp
not
adc
enter
popa
xor
xchg
adc
scas
jmp
or
jge,pt
inc
daa
fdivrl
push
push
cmp
adc
inc
push
mov
into
mov
xor
push
popl
bound
xor
call
inc
inc
daa
adc
testb
mov
mov
sbb
push
inc
xchg
push
dec
call
popf
xchg
mov
cmp
xorb
mov
jne
pushf
and
shll
mov
push
xor
call
or
dec
dec
pop
mov
js
sbb
ret
inc
aaa
fcoml
cltd
sub
mov
fwait
aam
inc
rorb
pop
inc
cld
mov
pop
push
push
or
and
xor
sbb
pop
loopne
and
sbb
or
add
mov
pop
sbb
jp
test
lahf
push
jecxz
enter
mov
pushf
cmp
inc
mov
aaa
fs
inc
fldenv
ja
mov
adc
arpl
xchg
in
fcoms
mov
pusha
in
addl
xor
cmpl
inc
dec
or
outsl
add
inc
adc
test
adc
cli
push
pop
scas
push
push
inc
inc
hlt
fs
popa
cmp
or
fiaddl
push
lods
mov
lret
push
inc
pop
test
xlat
cwtl
inc
mov
imulb
inc
xchg
jo
lods
add
jne
push
or
mov
neg
fdivrs
inc
cmpsl
and
gs
push
jp
in
in
and
pop
inc
pushf
adc
xor
test
pushf
ret
aaa
int3
push
sub
pop
fdivs
lea
test
add
mov
pop
mull
xchg
cmp
mov
mov
push
and
setnp
int3
xchg
or
mov
xor
cmc
pop
icebp
fnstcw
cmp
loope
popa
movsl
lret
sbb
xchg
sbbb
shlb
sbb
push
js
push
jno
ret
dec
sbb
scas
hlt
add
mov
pop
mov
dec
sbb
or
add
repnz
push
aam
es
test
cmpsb
sar
movl
incl
sub
mov
mov
adc
xchg
cmp
and
in
push
js
add
or
xchg
adc
add
add
insb
mov
and
fimuls
sub
add
bound
mov
fdivrl
data16
pushl
cmpsb
push
mov
mov
int3
jmp
pop
and
test
in
inc
mov
mov
push
inc
shlb
test
pop
push
rorl
dec
sahf
int3
andps
xchg
pop
xor
sbb
in
and
jo
push
xorl
ret
cmp
cmp
mov
ret
mov
adc
or
cs
lcall
pop
jg
cmpsb
and
insb
fimuls
lock
pop
mov
cld
inc
lea
repnz
push
push
xor
loop
shlb
push
inc
pop
push
push
adc
or
push
or
out
jno
cli
push
mov
cmp
pusha
push
push
mov
out
out
aaa
push
roll
pop
or
ficomps
je
adc
or
in
cmp
ret
sub
test
pop
aam
adc
and
orl
xor
cmp
xor
and
dec
xor
and
cmp
or
pop
insb
shll
add
mov
or
dec
filds
mov
adc
iret
xchg
adc
jp
pop
pop
sbb
enter
inc
jb
and
and
and
sbb
adc
mov
adc
loope
mov
push
push
dec
mov
adc
shlb
cltd
mov
pop
add
sub
movsb
inc
push
sub
pop
xorl
imul
inc
mov
inc
mov
xchg
sahf
jbe
push
je
int
jne
cld
leave
das
stos
inc
out
sbb
mov
xchg
outsb
and
cmp
xor
fwait
sti
pop
xorl
and
cmpsb
lods
sbb
mov
mov
sbb
addr16
sub
inc
push
inc
enter
cld
cmp
in
add
adc
add
xor
cld
stc
outsl
fcompl
and
dec
lods
addb
or
add
inc
jmp
shlb
call
add
mov
jge
loop
inc
jne
insb
arpl
scas
pushl
inc
inc
aam
sub
pop
add
sbb
scas
push
je
mov
sbb
sbb
outsl
add
pushf
icebp
jo
mov
inc
push
push
sbbl
sub
and
cmp
push
mov
popa
push
adcb
in
mov
out
fdivrl
iret
pop
ss
jne
cmpsl
pushf
in
subl
jmp
cltd
jmp
inc
mov
test
jle
or
xor
jne
movsl
mov
daa
push
jl
jmp
in
mov
add
call
lahf
fadds
pusha
push
data16
mov
cli
push
sbb
shlb
sbb
icebp
xchg
les
cmp
xchg
in
mov
pusha
je
or
je
dec
mov
test
or
sub
jnp
sahf
or
push
sbb
out
in
sub
push
adc
mov
and
out
pop
pop
sbb
aas
movsl
andl
inc
filds
cltd
loopne
inc
and
adc
test
in
pop
int
sub
adc
ret
add
dec
push
mov
jmp
cmovg
and
inc
push
in
pop
dec
pop
lds
inc
lock
shlb
pop
stos
call
and
fistps
outsb
or
xchg
stos
cvttps2pi
xorl
dec
push
pop
xchg
daa
cmc
call
inc
in
mov
push
xchg
push
push
in
add
adc
add
aaa
add
add
jecxz
push
sbb
add
cs
push
popa
push
data16
pop
testb
lock
ja
sub
xor
pushl
lea
mov
push
push
std
inc
add
adc
rclb
test
lahf
add
xlat
sbb
pop
test
leave
negl
cmp
movsl
pop
xchg
fsubrl
or
lods
push
ret
push
stos
mov
subl
push
sbb
cmp
xor
push
add
loopne
adcb
cmp
lret
fsubrl
or
nop
mov
push
shll
into
mov
sub
ds
mov
and
and
mov
imul
adc
loopne
pop
stos
adc
push
jmp
fstl
sbb
adc
test
mov
fs
mov
inc
push
push
hlt
inc
dec
adc
js
jbe
out
sub
outsb
mov
mov
mov
loopne
jg
sbb
or
pop
push
sbb
push
jl
lret
xchg
push
or
or
jns
sbb
mov
jo
int3
adc
loopne
pop
adcl
pop
je
xchg
adc
xchg
add
inc
or
scas
mov
push
lahf
or
mov
inc
dec
call
insb
movsl
test
xchg
dec
add
or
xlat
fiadds
or
aaa
adc
jne
daa
es
adc
movsb
scas
or
cld
je
dec
incl
jne
xor
pop
push
jl
jnp
cmc
jmp
xchg
cmp
test
out
jne
pop
pop
xor
ret
leave
je
jg
and
add
jle
jb
addl
call
mov
jae
loopne
sbb
mov
in
mov
daa
pop
cmpsl
xchg
jmp
and
cwtl
sub
outsb
or
lea
adc
push
or
jecxz
arpl
add
fstl
or
jecxz
mov
dec
push
pop
pushf
push
ficompl
xor
xor
jl
and
jle
push
daa
fstpt
jno
mov
push
inc
mov
test
or
fldt
sbb
xor
pop
imul
add
lods
cmp
aaa
or
push
leave
lods
stos
and
sub
js
mov
xchg
adc
xchg
arpl
pop
add
pop
outsl
add
or
push
inc
mov
test
pop
popa
xchg
inc
pop
fwait
push
or
out
or
data16
fwait
cmpsb
cltd
insb
add
int3
rolb
dec
inc
lock
lods
push
stos
dec
test
pop
pushf
sbbb
je
lret
pop
sub
or
dec
inc
push
nop
or
or
mov
inc
inc
mov
pusha
jo
jecxz
pop
jecxz
jns
ret
ret
stos
or
push
sbb
sbb
pop
add
push
shll
data16
cmp
test
sbbb
notb
enter
xchg
add
adc
jae
js
lods
lea
push
rcrb
inc
sti
or
lret
pushf
cmp
mov
push
fwait
jne
into
jbe
dec
pushl
test
enter
cmp
imul
pop
in
mov
scas
jmp
xor
sbb
lock
xor
js
inc
jle
xor
pushf
fstpt
jo
scas
repnz
aam
and
jne
adc
sahf
or
push
xchg
lret
and
add
cld
arpl
jns
push
jo
je
adc
dec
fsts
je
dec
mov
rclb
push
and
inc
inc
dec
push
stc
into
js
repz
dec
fwait
pop
push
cmp
adc
in
rclb
mov
in
add
sbb
pop
cmpsb
jne
inc
js
adc
inc
enter
mov
or
int3
or
dec
push
or
push
mov
inc
or
cmc
mov
jno
insl
sbb
xor
adc
xor
out
pop
dec
jge
add
lock
jmp
xchg
repnz
sub
cmp
pop
cmp
loopne
adcl
jno
cmp
test
sbb
mov
sbb
jge
xor
faddl
inc
sub
inc
sbb
cmp
aad
dec
and
inc
dec
loope
popa
push
aas
pop
inc
xchg
add
data16
cld
lea
movsl
add
shr
mov
or
adc
dec
jb
push
pop
pop
or
sti
dec
add
sub
sub
cmpsl
and
sbb
sar
sbb
mov
nop
shlb
orl
mov
push
divl
cmp
shll
rol
dec
addb
ror
add
push
sbb
subl
data16
lods
adc
negb
sub
jo
pop
lds
dec
roll
pop
out
subl
addl
adc
xchg
pushf
fnstenv
testb
inc
adc
jnp
add
cmp
push
add
push
test
out
std
mov
cmp
je
jp
push
mov
mov
sbb
pushf
sub
enter
add
fldl
inc
dec
cltd
out
test
or
pop
insb
cld
jle
cmp
jle
pushl
leave
push
xchg
out
fisttps
pop
and
and
pushl
outsl
or
and
adc
sbb
clc
sbb
push
sbb
adc
inc
inc
stos
aad
pop
insl
xor
add
inc
add
add
push
pop
cmp
cld
adc
cmp
insb
ja
loopne
push
adc
jne
pop
or
jb
or
or
push
adc
push
insb
rcr
ret
xorb
fidivrl
push
xor
hlt
and
cmp
push
pop
add
cmp
add
mov
div
sahf
inc
mov
pop
lods
cmpb
pop
push
xchg
jg
add
dec
cld
sbb
push
sbb
mov
xor
pop
mov
cs
sbb
jge
inc
or
mov
pushf
stc
pop
push
inc
pop
roll
adc
pop
lds
das
scas
test
aaa
rol
mov
xchg
shll
cli
ss
jl
cmc
xor
pop
mov
or
jb
cmpsl
cmp
or
scas
cmpl
add
mov
jl
arpl
enter
je
pushf
lahf
jl,pt
and
cltd
in
aam
jge
add
xor
ret
or
pop
add
jle
rorl
ljmp
xor
push
imul
sub
pushf
movsl
adc
ret
xchg
pop
loop
inc
push
push
inc
pusha
jbe
repnz
lods
push
imul
add
in
sub
in
add
shll
or
sub
sub
ja
pop
or
mov
popa
aaa
xor
inc
repnz
xchg
aaa
jmp
push
cmpsl
dec
dec
inc
cmpsb
int
add
aam
sbb
mov
inc
push
push
jmp
or
add
add
add
test
or
push
xor
sub
xor
leave
inc
pop
push
inc
sub
add
xchg
sbb
test
ret
jmp
js
orl
pop
dec
loopne
pop
or
int
into
les
test
dec
sub
pop
lock
push
jns
aaa
push
loope
and
pop
mov
les
lcall
push
jmp
inc
and
xlat
add
jne
cmp
setl
cmc
movsl
imul
jmp
sub
jne
push
inc
pop
clc
jbe
fldt
jbe
pop
pop
shlb
and
cmp
sbb
aam
divl
cmp
cld
out
inc
push
or
aad
add
mov
mov
xor
stos
jge
jbe
sub
pop
or
push
pop
into
cmp
and
fstps
push
pop
ret
pop
and
test
adc
pop
add
decb
xor
dec
shll
inc
dec
adc
cltd
inc
sub
pop
es
push
test
outsl
xor
sbb
xor
xor
idivl
push
add
lock
pop
jmp
lock
clc
push
adc
in
fsubrs
jge
mov
dec
push
mov
and
cwtl
xor
xchg
dec
enter
sbb
shll
mov
js
push
push
in
cli
fildl
pop
cmp
add
push
pop
jge
rclb
push
cmp
and
test
into
enter
xchg
jle
popf
int
cmp
je
jge
push
jecxz
push
push
mov
pop
push
loope
and
cmpsl
cmc
xchg
arpl
das
pop
sti
movsl
xchg
push
iret
jae
adcl
adc
jp
add
loopne
fiaddl
aam
mov
test
movsb
xchg
ficoms
mov
or
or
xchg
dec
pop
push
je
in
sub
push
dec
inc
mov
gs
pop
jne
or
adc
push
call
mov
pushf
xchg
xor
movsl
lret
adc
popf
mov
clc
inc
cmpsl
fadds
push
nop
add
xor
add
jb
data16
loop
xor
xlat
inc
and
fildll
in
dec
ljmp
icebp
mov
inc
mov
add
rclb
sbb
sahf
mov
xchg
xchg
push
push
cli
outsb
push
shrl
sbb
mov
push
pop
mov
fisubl
lock
loopne
jae
adc
add
adc
movsb
mov
xlat
mov
pop
and
add
mov
sahf
roll
and
pusha
or
jae
pop
aas
xchg
push
pop
sbb
loope
fwait
lds
rclb
loope
sub
mov
push
sub
sbb
push
or
push
adc
add
add
sbb
xor
test
data16
xchg
mov
push
add
bound
mov
mov
mov
les
hlt
ja
sbb
shll
data16
arpl
ja
mov
sbb
mov
mov
lods
add
add
cmovp
call
inc
cmp
in
hlt
inc
or
lea
sub
dec
in
pop
adc
adcl
pusha
sub
bnd
fmuls
push
or
xchg
sbb
add
cld
out
inc
adc
add
push
scas
jle
pop
jmp
push
push
insb
push
adc
sbb
jbe
or
push
mov
dec
lret
mov
mov
cmpsl
fcomps
sbb
sbb
inc
or
popf
rcr
lods
push
daa
jge
xor
inc
push
rolb
ret
call
mov
das
push
or
test
cmp
lds
or
mov
call
scas
pop
push
push
xchg
loope
rorb
jecxz
dec
mov
add
xchg
inc
mov
lahf
push
jno
mov
es
in
jo
adc
adc
adc
add
lods
data16
xchg
cs
jo
adc
and
lea
icebp
add
xor
aam
in
pop
gs
jno
push
mov
jnp
sbb
jno
mov
or
mov
mov
mov
aas
test
cli
fmuls
inc
insb
jo
stos
push
mov
or
add
movsb
add
sbb
mov
insb
cwtl
add
and
xor
test
fimuls
jmp
pushl
or
je
and
data16
sbb
and
lods
out
or
test
bound
fistl
std
sbb
loope
in
xchg
adc
fstp
adc
xchg
add
and
push
andb
push
add
mov
repnz
pop
pop
mov
xchg
fwait
add
jo
pop
cmp
xchg
adc
xchg
adcb
mov
lahf
pop
icebp
sub
and
adcb
jne
pop
inc
clc
or
cmp
adc
rclb
mov
xor
stos
cmp
mov
sarb
je
push
fdivp
rcrl
jae
in
je
sbb
xchg
pop
pop
pop
cmp
rcrb
imul
and
sahf
mov
ljmp
jle
out
sbb
push
mov
rclb
imul
sbb
js
lahf
iret
movw
cltd
pop
imull
mov
je
mov
add
test
ret
push
sub
mov
test
loop
sahf
mov
and
mov
clc
xrelease
test
push
dec
pop
add
cld
cld
or
imul
loope
xor
call
inc
lock
jne
dec
ret
adc
push
movsl
mov
xchg
xor
rcll
adcl
pop
pusha
inc
jmp
pusha
add
jo
mov
dec
out
adc
mov
cld
push
mov
push
pop
pushf
push
push
sti
inc
shr
mov
andl
cmp
or
icebp
dec
jnp
sub
push
and
dec
inc
dec
lock
and
jl
subl
je
cmp
outsl
and
jb
cmpsb
push
lea
push
out
xchg
adc
pusha
popa
jmp
sub
jne
inc
aaa
or
fmull
inc
jo
or
repnz
or
add
in
push
fldl
cmp
aaa
add
jno
xor
inc
test
xchg
cmpsb
sbb
nop
movsb
shrb
xchg
adc
or
movsb
repnz
sbb
add
daa
add
mov
lahf
int
add
jmp
cmp
subb
cmp
lcall
add
add
xorb
mov
cmp
and
cmc
je
push
push
push
push
mov
pop
shll
out
call
pop
sub
cs
rorb
sbb
dec
cs
cmpb
popf
xchg
aam
cmp
inc
cmp
jbe
mov
shlb
cmp
jbe
clc
gs
das
sub
movsb
pop
or
jmp
push
sbb
repnz
jae
or
pushl
aad
ret
cmp
int3
jb
fbstp
test
pop
mov
adc
ss
and
sub
lods
cmp
repnz
sbbl
jns
jns
push
loope
adc
jnp
jle
pop
in
je
push
mov
andb
adc
mov
adc
jae
fsubp
rclb
inc
adc
or
adc
cmc
sub
or
mov
push
xchg
sub
cmp
nop
sub
xor
jmp
movsb
inc
or
bound
xor
mov
cmp
call
mov
int
cmp
xchg
lock
xor
imul
cmp
push
inc
cmp
into
jl
sbb
popf
test
or
jns
and
push
inc
cmp
push
popf
jmp
out
pop
sub
and
pop
cpuid
push
imul
and
mov
sub
adc
fisubs
add
push
repnz
mov
push
dec
mov
in
test
rorb
sahf
sbb
xor
mov
mov
loope
xchg
xchg
stc
add
and
sbb
add
and
and
xor
add
and
pusha
push
cmp
and
mul
push
or
adc
ljmp
pop
adc
sub
aaa
lcall
repz
xchg
loope
cld
xor
imul
sahf
mov
nop
rorl
sti
dec
outsl
mov
xor
push
nop
movb
mov
movsl
jle
inc
mov
cs
cltd
enter
js
enter
pop
mov
es
cmp
je
xchg
shl
and
inc
inc
imul
aam
rcll
sub
ret
add
popf
adc
ja
dec
xchg
xor
fs
insl
int
xor
mov
call
xor
inc
mov
dec
cmp
inc
pushf
mov
lock
mov
or
sbb
cmpsb
sbb
push
mov
pop
xlat
add
test
inc
jl
push
fwait
mov
in
pop
sbb
cmp
outsb
cld
cmp
sbb
lock
or
adc
xor
cmp
adc
insb
cmp
sbbl
in
pop
adc
dec
jmp
sbb
jbe
test
add
scas
ret
pop
push
dec
mov
mov
pop
movsl
inc
jle
add
adc
lods
aam
jle,pt
add
add
cmpsb
imul
stos
fwait
js
mov
into
out
jmp
inc
enter
cwtl
in
or
push
fdivr
or
push
sub
mov
test
mov
cmpsb
lea
scas
sub
push
jle
adc
xor
jnp
or
xchg
int
adc
les
fwait
nop
and
or
scas
dec
inc
in
fsubs
popa
inc
fidivs
pop
adc
adc
cmpsb
imul
mov
pop
cmp
pop
push
jne
add
dec
dec
push
pop
add
add
adc
add
or
mov
and
sub
lret
add
cmp
push
les
or
push
dec
cli
aas
xor
xor
adc
cmp
lods
clc
xchg
or
jmp
mov
add
and
leave
adc
jecxz,pt
pusha
je
push
sahf
dec
pop
out
or
dec
and
jle
shr
push
push
lcall
jmp
sub
pop
gs
negb
mov
push
jo
in
out
and
sub
sub
ljmp
xor
cmp
inc
mov
dec
fsubr
dec
dec
inc
aas
loop
adc
xchg
cmp
jne
or
test
cmp
push
rclb
dec
or
sbb
cmp
jecxz
test
inc
ret
push
testl
add
out
mov
jle
add
adc
adc
add
push
or
xchg
adc
jl
call
lcall
daa
adc
or
loop
xchg
insl
inc
or
inc
xor
or
lods
add
imul
or
inc
jl
sub
popa
or
pcmpeqb
in
daa
test
loope
push
imul
ret
sbb
clc
jg
ja
scas
inc
add
sub
push
sub
push
movl
or
xchg
dec
imul
pop
in
or
or
pmaxsw
push
cmp
rcrb
int3
nop
out
xor
adc
adc
xor
adc
adc
xor
mov
and
dec
sub
and
add
pushf
add
mov
movsb
insl
mov
xchg
or
icebp
push
jecxz
inc
mov
or
addb
orl
imul
call
test
loope
or
call
js
test
mov
lock
jge
inc
ret
jmp
out
ret
dec
mov
jmp
and
or
xor
je
push
push
aad
jnp
or
sbb
push
push
and
iret
dec
inc
sbb
je
add
push
pop
ja
xchg
out
and
mov
es
les
fsubs
xor
push
stc
sbb
fcoms
push
add
mov
dec
loopne
inc
es
inc
sbb
add
rcll
adc
mov
ss
add
and
sub
sbb
or
scas
inc
xor
and
xor
and
xchg
ja
fwait
adc
dec
jl
inc
cs
xor
dec
sub
mov
aas
test
sub
mov
add
and
insl
dec
add
pop
in
xor
int3
arpl
mov
mov
das
addr16
mov
ljmp
movswl
shl
or
xchg
mov
xchg
mov
inc
inc
sbb
add
cltd
push
or
jmp
mov
mov
insb
add
or
pusha
insb
std
inc
popf
sahf
ret
pop
pop
add
sub
scas
movsl
movsb
mov
fmuls
cld
cmc
into
jo
pop
je
mov
lock
loope
mov
mov
movsl
adc
and
subb
and
popa
sbb
pop
inc
insb
inc
adc
je
loop
ret
fmuls
sbb
insb
adc
adc
popa
out
movsl
addl
insb
xchg
pop
sahf
mov
push
mov
test
cmpb
setl
lahf
mov
inc
add
sub
add
adc
lahf
push
adc
add
adc
pop
unpckhps
push
add
cmpb
push
and
ss
shrb
adc
and
jns
xor
pop
es
sub
push
pop
mov
cmp
data16
mov
clc
test
in
sbb
or
add
jbe
and
jp
scas
and
pushf
and
mov
js
sub
or
inc
and
orl
xchg
xchg
add
mov
jo
adc
arpl
xchg
adc
mov
push
cmpsl
pop
fs
sbb
pop
fs
add
shlb
or
movb
daa
mov
jno
add
and
hlt
add
call
lahf
movsb
enter
enter
je
push
test
pop
sbb
jb
push
dec
lea
out
insl
push
call
andb
add
fstl
mov
adc
mov
repz
mov
cld
mov
adc
add
inc
sub
mov
or
and
adc
push
xchg
cmp
add
sub
add
or
pusha
mov
adc
leave
sbb
xor
adc
xor
sarb
cwtl
cmp
loope
in
push
mov
sti
cmp
je
dec
sub
or
dec
loopne
mov
push
pop
sbb
xchg
inc
adc
cmp
inc
inc
and
add
mov
jge
cmp
pop
sub
xchg
dec
sbb
pop
cmp
aaa
lret
or
sbb
loopne
mov
sbb
mov
add
or
push
fiaddl
cs
inc
inc
adc
bnd
jecxz
std
mov
mov
pushl
mov
les
push
int
jmp
enter
pop
icebp
loope
or
mov
enter
inc
roll
inc
xchg
pop
xor
into
fisttpll
xchg
lea
lods
or
roll
sbb
aam
cmp
mov
sub
dec
in
addr16
cmp
sub
in
inc
mov
and
nop
lret
cmp
pushf
add
jae
xchg
sbb
or
cmp
nop
sub
and
cmp
adc
sub
push
mov
push
cmp
nop
sub
sub
lret
mov
or
or
adc
pop
out
iret
inc
test
std
mov
push
lea
add
push
add
test
push
mov
icebp
cmp
aaa
push
test
je
pusha
insl
aaa
and
pop
push
addl
pusha
sti
xchg
and
stc
and
mov
and
push
jge
bound
jnp
testl
idivb
loopne
mov
xchg
loopne
mov
lock
lahf
and
sbb
push
pop
mul
push
cld
movlps
sub
nop
sarl
dec
hlt
cmp
dec
bound
xchg
mov
rol
xchg
lret
and
xor
and
push
ret
mov
add
or
lock
mov
lret
andl
or
inc
add
roll
dec
xchg
adc
fwait
mov
cmp
es
out
jmp
outsb
in
inc
adc
outsb
gs
ficomps
xlat
or
lret
dec
loopne
icebp
sar
pop
inc
sbb
mov
xor
int3
gs
adc
loope
ret
mov
addr16
adc
dec
call
mov
aaa
sub
incl
add
sbb
bound
jl
jle
and
jno
or
int
je
or
dec
adc
inc
mov
ss
and
adc
adc
pop
inc
pop
insl
and
xchg
mov
movswl
shr
mov
mov
mov
add
lea
sbb
sub
push
mov
inc
jo
mov
add
add
push
push
inc
adc
jne
push
mov
lea
sbb
sahf
mov
or
mov
xor
or
sub
sbb
jnp
in
fs
test
pop
mov
test
add
popa
xchg
mov
sbb
jl
and
adc
fcomps
test
sbbl
sub
jns
adc
popa
pusha
jp
in
fsts
js
loope
push
jle
jne
cmpsl
mov
js
data16
test
test
jmp
int3
dec
clc
sub
adc
cmp
xchg
push
popa
xchg
mov
adc
jnp
mov
cmpsb
fistl
pop
sub
mov
inc
lods
out
shll
mov
sub
jne
je
sbb
or
sbb
lods
loopne
je
push
and
xchg
and
mov
jo
fsts
xchg
push
push
cltd
push
adc
sbb
popa
scas
test
push
sbb
and
xor
pushf
fsts
ret
cli
int3
add
push
mov
lock
aas
mov
adc
call
dec
mov
and
mov
jns
inc
idiv
add
xlat
pop
jmp
sub
daa
xchg
mov
inc
inc
push
mov
inc
into
push
cld
test
pusha
sarb
inc
cld
sbb
stos
lock
pop
pop
sbb
xor
xor
and
xor
dec
loop
xchg
xchg
mov
mov
push
xchg
adc
pop
jae
fistpll
adc
push
fnstenv
cli
cmp
lock
insb
div
movsb
dec
push
push
flds
bound
decb
enter
adc
add
popf
xor
lahf
dec
adc
or
adc
push
dec
push
push
lods
lret
xor
sbb
sub
mov
dec
jge,pt
pop
loopne
jbe
sbb
or
push
mov
or
aam
shrl
inc
dec
flds
inc
sbb
ret
push
fstl
test
lcall
lcall
pop
and
xor
popf
mov
testb
je
jl
pop
in
lea
ret
fs
cmp
or
push
test
sbb
rcr
and
stc
sbb
cmp
mov
imul
cltd
loopne
loopne
sbb
pushl
add
dec
pop
dec
or
fdivrs
pop
add
popa
iret
push
fwait
out
inc
insb
jns
or
popa
ret
push
in
cmp
in
sub
or
test
lahf
mov
testb
je
in
push
inc
sub
movsb
pop
rcrl
popf
rol
jb
jne
fiaddl
inc
xor
dec
adc
or
xchg
nop
or
or
or
inc
or
push
pop
adcl
imull
dec
mov
lock
sbb
xchg
icebp
imul
rolb
insl
push
sub
pop
pop
or
cmpsb
pop
cmp
and
mov
jmp
xor
mov
xor
leave
add
mov
mov
notl
ret
push
cmp
outsb
jl
mov
xchg
mov
sub
in
xchg
mov
push
lock
push
adc
and
in
in
push
out
sbb
adc
stos
stos
rorl
fadd
fwait
negl
test
dec
fsubl
inc
add
fwait
sub
adc
push
mov
sub
ret
adc
cs
inc
rcrb
or
sbb
ja
call
xchg
mov
push
into
mov
sbb
pusha
or
test
arpl
xchg
orb
adc
xor
or
arpl
sbb
inc
movsl
or
mov
mov
loope
push
sub
push
into
sbb
mov
cmp
pusha
dec
or
imul
mov
lahf
or
lea
or
push
adc
dec
xor
icebp
mov
mov
push
or
sbb
and
nop
push
or
je
enter
pop
fs
pusha
mov
xor
push
xor
or
inc
in
nop
stc
xchg
orl
and
xchg
shrl
dec
test
jne
roll
mov
jo
loope
mov
loope
mov
and
push
push
xchg
push
sub
sub
add
cmpb
aam
jle
sbb
mov
mov
sub
cmp
fdivrs
add
xchg
mov
mov
mov
cltd
inc
adc
push
lea
xchg
sub
mov
outsl
cs
cwtl
push
mov
movsl
pop
aaa
push
cmp
fwait
mov
shld
sbb
lods
cmpsl
lock
aaa
cmp
orl
insb
xchg
pop
sbb
test
xchg
push
mov
test
mov
cli
xor
test
test
xor
push
xor
fdivl
xchg
adc
push
fcoml
and
push
push
dec
xchg
ret
add
in
js
add
lret
jo
add
scas
in
push
fidivs
push
cld
sbb
data16
or
mov
xchg
or
cs
cvtps2pd
leave
out
mov
rclb
xor
or
test
and
sbb
lret
adc
je
or
jp
adc
jo
notb
xor
sbb
shrd
pushw
sub
lods
sbb
xor
subl
inc
pushl
movsb
ret
add
inc
xchg
cmp
rolb
out
mov
xor
sbb
and
aas
add
cmp
fsts
cmp
fiadds
push
inc
pop
fmul
sahf
jp
dec
sub
pop
or
or
dec
imul
adc
mov
fimull
dec
push
pop
mov
ret
pop
pop
jmp
adc
or
mov
push
mov
and
clc
adc
mov
pop
sbb
sbb
mov
jge
call
inc
scas
pop
imul
jecxz
dec
pop
pushf
sub
je
pop
cmp
xor
mov
inc
jmp
add
out
cmpsl
sbb
xchg
mulb
dec
jecxz
jno
sbb
or
imul
ds
addr16
push
mov
and
hlt
ret
jo
ret
xchg
xor
out
and
add
addr16
js
shl
pop
push
pusha
mov
jo
out
inc
xlat
jmp
xchg
mov
inc
push
jl
movb
pop
lock
icebp
add
lea
popa
adc
mov
mov
adc
inc
faddl
roll
ret
stc
mov
add
pop
xchg
minps
mov
je
lock
or
xor
pop
std
xor
push
lods
jge
jnp
mov
sbb
popa
jo
mov
in
jne
pop
inc
mov
add
inc
or
push
push
movhps
add
add
cwtl
test
je
clc
fld
xchg
dec
rclb
cmp
roll
and
shll
cld
push
gs
push
je
jne
insb
ret
add
xor
or
cmc
ss
xchg
lcall
negl
jmp
push
fdivs
stos
adc
shr
repnz
inc
sub
nop
adc
repz
mov
inc
xlat
adc
aad
xorb
gs
xchg
popf
hlt
loop
or
inc
mov
aam
push
mov
stos
ljmp
pop
rcr
mov
mov
mov
jge
popa
push
push
pop
cld
cmpsb
jl
rclb
push
dec
cmp
mov
cld
or
cltd
idiv
lock
cwtl
dec
roll
jo
xchg
mov
lock
fdivs
or
inc
push
mov
xor
cmp
add
cmp
fidivrs
dec
fnsave
decl
fnstenv
je
adc
int
sub
sub
sub
lahf
enter
mov
cmp
cmc
pop
fsubrl
jmp
lret
jecxz
ret
fsubl
jne
jo
loope
or
fs
rcll
push
mov
or
add
dec
push
adc
adc
cmp
shl
add
mov
dec
mov
inc
lods
movsb
mov
push
lock
xor
shr
jae
sbb
mov
xchg
fld
jl
adc
inc
mov
adc
int3
jle
jno
push
xor
add
inc
push
adc
out
push
add
mov
dec
and
daa
aad
nop
sub
imul
or
jl
mov
in
xor
test
clc
dec
sbb
adc
inc
es
pop
mov
mov
in
out
in
movsl
xchg
pop
push
mov
insl
shlb
sbb
sub
xorl
sbb
out
je
jg
mov
push
das
jmp
mov
orb
xlat
push
adc
jle
cli
aaa
dec
aas
xor
leave
push
sar
mov
out
iret
xor
sub
xlat
in
jle
lock
mov
lock
icebp
adc
mov
jmp
jbe
xor
jl
orl
out
daa
je
jne
sub
jo
incl
cmp
shrb
movsb
jmp
lahf
adc
xor
xorb
out
testl
and
add
sbb
ja
or
inc
popf
xor
jge
rcr
roll
rolb
rorl
test
push
data16
dec
pop
push
mov
jno
pop
or
das
or
scas
in
pusha
xor
enter
movsb
lock
mov
mov
cmp
imul
sub
in
jb
int
pop
add
mov
push
push
jmp
adc
andw
fcoms
or
outsl
call
xor
int
pop
in
mov
out
push
xor
ja
cs
fldl
pop
imul
loope
adc
call
jl
leave
pop
cwtl
sub
nop
xchg
or
lret
inc
push
mov
out
sbb
pop
pushf
mov
stos
jbe
aaa
cli
lea
adc
daa
ja
pushf
lods
int3
sub
dec
in
cltd
xor
inc
sbb
inc
mov
mov
lock
inc
mov
xchg
or
lahf
cmp
pop
in
jl
adcb
sbb
loopne
adc
flds
inc
jl
xchg
pop
mov
dec
or
jmp
mov
adc
int
in
out
inc
fsub
nop
or
xor
mov
fidivrs
add
bound
in
loopne
lret
in
mov
or
add
rcrb
or
cmc
enter
insl
jl
pusha
adc
repnz
mov
ja
repnz
shlb
loop
adc
cmp
movb
jp
dec
adc
inc
push
xchg
push
outsb
cmp
mov
insl
add
push
push
push
jae
sahf
out
pusha
add
push
push
push
push
je
pop
lcall
or
xor
mov
test
push
pusha
daa
sbb
add
mov
fistpl
push
mov
sbb
imul
or
iret
jge
lahf
scas
add
xchg
mov
aas
mov
cmp
jo
push
fwait
cld
jnp,pt
push
cli
int3
cld
and
mov
and
or
jl
adc
add
call
and
int3
jmp
jb
fcomp
push
fcomp
pop
adc
shl
push
push
hlt
rcr
dec
inc
sub
pop
popf
rcll
jg
xor
pushf
mov
dec
fsubr
add
lods
ret
xor
leave
dec
shl
pop
scas
dec
xchg
jae
add
pop
inc
es
mov
and
mov
lods
mov
jno
idivw
jg
daa
push
pusha
jne
jne
mov
or
sbb
push
and
sbb
push
mov
inc
scas
inc
fstpl
cli
or
mov
cmp
in
and
add
xor
ret
adc
lock
jge
ljmp
mov
xchg
lock
mov
loopne
jo
inc
das
jb
outsl
negl
pop
or
addr16
mov
dec
aaa
push
or
xchg
mov
leave
int3
sub
xchg
ds
nop
dec
xchg
dec
addr16
ss
aaa
add
adc
pop
sbbb
std
cmp
lea
movsl
xor
or
xchg
push
aad
sbb
int
and
xor
mov
add
pop
hlt
fsubr
clc
call
push
lea
or
test
inc
sub
rcrl
in
push
mov
xor
je
inc
sbb
call
daa
jno
sbb
inc
loopne
sub
jp
xchg
shl
test
add
cmc
ss
test
add
mov
aad
mov
cmp
lea
add
cltd
or
or
addb
call
or
hlt
idivb
or
movsl
jmp
or
or
clc
cmp
je
outsb
xlat
rclb
push
test
test
rorb
push
sub
icebp
outsb
test
add
arpl
inc
iret
or
or
xorb
stc
or
adc
and
mull
dec
call
leave
and
add
or
adc
dec
add
ljmp
bound
cmp
cld
pop
jo
push
and
popf
xor
sbb
int
jmp
into
sub
push
clc
in
test
cmp
in
and
pop
ja
add
pushf
icebp
dec
out
jl
add
mov
les
ret
add
gs
shlb
daa
add
loope
add
cmp
jle
inc
sub
or
orl
push
outsb
movsb
or
out
add
adc
mov
jmp
inc
and
push
test
imul
into
sbb
sub
pop
push
mov
movl
aas
stos
inc
rcll
je
push
ja
sti
push
xor
pop
add
sub
sub
add
sbb
xor
inc
add
push
sbb
push
loope
call
xchg
cmp
or
rclb
add
pop
test
mov
movl
and
and
add
js
cli
xor
js
ret
or
inc
jne
fstpt
scas
ljmp
cmp
or
bound
call
add
loop
sub
push
xor
pop
pop
push
in
lea
xor
and
xchg
jne
shl
and
or
lcall
fs
lahf
mov
movsl
xchg
sbb
loope
push
inc
jl
orb
rep
sbb
pop
fldl
sub
adc
rclb
and
out
mov
sub
loopne
lock
inc
sbb
mov
sub
mov
test
fadd
fcmovnb
test
ret
jge
adc
movsb
repnz
or
adc
inc
mov
and
lcall
cmp
add
push
push
jmp
cmp
or
mov
or
lock
rcll
or
dec
sbb
adc
and
xor
push
cmp
shrb
sub
pop
clc
or
aam
jb
not
mov
ljmp
sbb
dec
push
jmp
jl
jmp
and
nop
add
rcr
pop
clc
or
cmp
jb
push
nop
xchg
xor
js
movb
orb
rcrl
push
loopne
imul
push
mov
cltd
and
shlb
fadds
repnz
jmp
shll
and
addl
ret
rorl
push
mov
push
lods
popa
add
adc
cmp
push
or
jmp
daa
pop
or
or
je
add
ljmp
mov
sbb
or
jne
fdivs
mov
xor
adc
pop
or
jo
mov
cwtl
mov
and
cmp
pop
ljmp
and
mov
mov
inc
je
or
jle
notl
push
je
int3
shll
je,pt
jne
stos
xor
mov
std
dec
bound
dec
sbb
mov
imul
add
dec
add
dec
push
pop
push
dec
mov
mov
inc
sbb
rcrb
adc
loope
fcomps
push
sub
mov
and
stos
pop
or
jmp
inc
or
inc
xchg
mulb
inc
movsl
push
xchg
sub
popf
jge
lock
sub
inc
les
pop
or
dec
mov
mov
dec
or
fwait
dec
mov
repz
push
sbb
test
jb
push
xor
stc
clc
add
cmp
push
jne
cmp
or
pop
dec
xchg
push
xor
pop
dec
add
jle
mov
sub
push
cmpsl
lret
pushf
jp
add
add
xchg
xchg
orl
push
sub
rol
loop
push
ja
sbb
stos
fadds
sbb
inc
testb
clc
sahf
movswl
mov
push
lea
push
loopne
ret
lret
repz
lret
push
mov
xor
js
loope
and
cmpl
sbb
outsb
mov
andl
inc
ds
ja
jg
sub
and
test
pop
and
sbb
add
hlt
add
sbb
testb
into
or
adc
cmp
aad
mov
repz
xchg
stos
in
mov
add
xchg
cmp
jecxz
pop
mov
add
imulb
mov
sti
fisttps
add
ret
xor
sti
je
mov
stc
frstor
dec
mov
das
add
iret
and
jnp
cmp
or
out
push
add
sarb
inc
xchg
test
fisttps
nop
js
add
cwtl
lods
je
push
stc
push
pushf
mov
sub
mov
mov
stos
cwtl
mov
mov
sub
shrl
xorl
push
xchg
ja
out
sub
dec
iret
cld
sbb
push
std
je
add
mov
jne
clc
jmp
pop
pusha
test
add
out
push
mov
sbb
push
popa
rcrb
push
test
sbb
cmp
cmpsl
icebp
sbb
dec
loopne
inc
add
movsl
inc
and
sbbl
ret
cmp
cs
mov
xchg
dec
xchg
int3
and
shlb
notb
testb
inc
inc
inc
cmp
push
fsubr
je
push
cmp
gs
mov
daa
in
call
stc
sub
fidivl
mov
scas
push
cmpb
add
je
mov
cmp
subl
dec
rcr
sbb
fcomi
icebp
lea
fcoml
js
iret
and
inc
sbb
clc
mov
adc
mov
inc
adc
inc
add
mov
fcom
push
xchg
jl
leave
int3
jb
pop
cmp
cli
sbb
mov
loope
aas
mov
jmp
push
test
mov
or
add
push
or
jge
mov
nop
and
loope
sbb
sub
pusha
xor
lea
addb
sbb
cld
jl
push
daa
lock
pusha
sbb
adc
dec
push
lret
and
repnz
or
add
mov
mov
adc
mov
jmp
inc
aaa
fdiv
xor
ss
out
pop
push
push
push
add
xchg
test
ss
cmpsl
je
or
test
je
jne
daa
jae
inc
sahf
dec
xor
push
jae
push
je
or
hlt
mov
insb
mov
ljmp
mov
pop
add
push
inc
inc
xorl
test
lahf
push
les
push
add
sub
rclb
mov
ret
out
loope
add
and
sub
mov
hlt
rcrb
pushf
and
sbb
pop
mov
cs
sub
jl
push
js
mov
hlt
cmp
xor
dec
call
pop
and
js
push
mov
or
cmp
lcall
lahf
mov
and
jb
pop
pop
inc
mov
loopne
mov
ss
enter
add
movsb
xchg
je
adc
or
dec
add
lods
mov
xor
fstl
push
hlt
das
mov
and
xchg
mov
cmp
push
xchg
jg
dec
adc
xor
call
clc
or
call
add
fs
sub
push
stos
adc
lea
push
decl
subb
jecxz
roll
std
push
mov
jge
daa
pop
mov
pop
mov
in
cmp
push
test
mov
sub
sub
aam
mov
js
or
daa
shlb
or
add
cwtl
insb
fmul
sub
lea
lret
jns
add
cmp
pop
call
xchg
or
gs
xor
jg
xchg
sub
jmp
test
push
adc
jl
mov
adcl
lret
cmp
lea
popa
xor
xchg
cld
and
adc
mov
or
testb
pop
push
sub
pop
out
lea
mov
lcall
je
iret
mov
push
leave
adc
arpl
push
fsubl
mov
push
cmc
in
call
sbbl
mov
in
stos
xor
jne
dec
loop
push
sbb
std
fildll
sub
sub
push
cltd
add
push
push
test
and
inc
mov
add
sti
pop
or
lret
add
sbb
in
push
inc
jno
adcl
jne
mov
xchg
push
rolb
cmp
push
jl
clc
prefetcht0
sarb
je
xor
adc
test
jecxz
push
cmp
or
jb
or
and
pusha
ja
mov
fdivs
pop
ret
adc
div
add
jb
push
xor
jns
mov
sub
nop
mov
stos
bnd
sbbb
cmpsb
js
add
dec
pop
test
push
aam
cmp
inc
pushf
hlt
mov
or
and
mov
test
dec
and
loop
test
mov
lcall
punpckhwd
xchg
inc
xchg
cld
cmp
loop
stc
cmp
nop
xchg
pushf
push
add
repz
fsubl
or
or
pop
inc
pushf
test
add
mov
mov
mov
push
pop
inc
pop
push
outsb
adc
xlat
mov
inc
push
push
mov
mov
push
mov
cmpsb
loope
shrb
and
stos
pop
loop
adc
jl
dec
xor
adc
add
pop
sub
xor
ret
adc
mov
ljmp
or
push
push
sub
inc
inc
and
les
jp
call
jo
xchg
or
popf
stos
enter
mov
je
hlt
cmp
je
cmp
outsb
cmp
sbb
adc
sub
xor
call
inc
xor
mov
dec
or
dec
mov
push
test
out
cmp
xor
pop
and
xlat
hlt
cltd
mov
and
cmp
shlb
pop
add
pop
lea
or
inc
or
mov
sbb
cmp
and
ja
pushl
push
pop
fs
push
push
inc
or
arpl
int
cs
adc
adc
mov
push
push
addr16
mov
nop
mov
push
test
repz
lret
push
pop
xor
inc
mov
jne
loopne
rorb
inc
xor
mov
ss
loopne
mov
lret
xor
sti
pop
lods
in
adc
js
push
out
test
pop
mov
mov
pop
add
or
add
inc
imul
cld
jge
sub
or
sbb
dec
out
jno
and
sub
or
cmp
aam
add
push
mov
adc
inc
sbb
and
adcl
adc
add
jp
cmp
mov
jne
jg
pop
cwtl
cmpl
xor
pop
or
and
dec
arpl
or
jne
mov
or
push
stos
or
mov
out
loop
jmp
ds
clc
push
mov
loope
and
or
dec
roll
mov
ss
sub
cmp
fadd
add
fmuls
jl
or
inc
add
cmp
sub
mov
dec
and
imul
shl
inc
xor
inc
push
scas
push
inc
sub
xchg
add
out
push
and
ss
imul
rorb
cli
mov
enter
dec
inc
add
push
fcoms
sbb
jnp
or
sti
shrb
fwait
lods
fs
adc
ljmp
and
cmp
pop
ljmp
pop
push
and
and
inc
xchg
and
inc
inc
cmp
dec
xor
xor
cmp
aaa
gs
cmp
xchg
inc
and
add
hlt
pop
jge
cmp
aaa
lret
sahf
cwtl
pop
aas
inc
pusha
jae
mov
pop
lret
mov
jae
dec
loop
leave
jge
movl
shr
and
sbb
or
adc
mov
adc
and
jl
addb
jp
in
add
movsb
mov
push
push
testb
pop
sub
dec
inc
lock
stos
test
inc
jbe
imul
and
jne
loopne
sub
test
jo
xchg
imul
dec
enter
inc
sahf
mov
lock
dec
sbb
pusha
int
outsb
lock
add
inc
inc
inc
xchg
or
nop
or
pop
test
push
pop
jle
fisubs
inc
test
adc
mov
js
pop
ljmp
cmp
add
fstl
adc
cwtl
jne
mov
into
sub
jl
jge
cmpsl
jge
sub
sbb
adc
adc
add
mov
xchg
pop
dec
in
inc
inc
xchg
pop
psubsb
in
into
or
adc
in
adc
pop
loopne
sub
mov
adc
repz
or
push
and
add
das
add
jne
sub
rorb
lock
enter
adc
dec
cld
lock
mov
das
imul
les
or
pop
jg
outsb
cltd
add
xchg
sub
in
imul
repz
xor
inc
rclb
push
push
fstps
add
pop
push
cwtl
dec
lds
pop
cmp
test
sbb
mov
push
hlt
cli
mov
inc
hlt
fisubs
push
mov
and
xchg
sub
or
jmp
cmp
adc
adc
or
jl
push
or
jmp
sub
push
push
mov
psubb
add
inc
xlat
sbb
cld
and
std
sbb
cmp
add
ret
push
mov
roll
imul
pop
test
out
inc
call
cmp
rorl
int3
lock
and
stc
add
inc
inc
mov
inc
or
adc
or
test
shll
iret
rcrb
lods
cmp
jl
fldl
mov
sbb
add
pushf
push
pop
sbb
jecxz
xchg
mov
cmp
fdivs
jb
or
jbe
test
pushl
in
data16
xor
leave
leave
adc
jl
jmp
pop
fidivrl
jae
mov
sbb
test
cmp
or
out
jle
sbb
je
or
js
sbb
rclb
mov
aas
fldl
cs
pop
test
lods
push
push
inc
lock
push
push
inc
loopne
sbb
sbb
fcmovnb
or
add
sub
in
and
cld
jge
enter
push
or
sub
popa
push
jo
daa
or
and
cli
jb
mov
mov
xor
mov
insl
adc
push
adc
idivb
arpl
push
call
adc
jl
mov
cld
ss
cmpsb
adc
stos
pop
sbb
aas
stos
leave
ficompl
adc
xchg
leave
sbb
and
test
stos
dec
sub
pop
cmp
fs
idivb
inc
jmp
sub
je
pop
jnp
and
aas
cmp
adc
xor
inc
scas
or
add
pop
and
xchg
fsubs
adc
lods
dec
shlb
in
mov
inc
andb
cmc
lods
or
inc
lock
add
inc
or
xor
js
cld
shll
add
jne
xchg
testl
dec
lret
and
fistps
call
out
add
add
adc
and
cmp
or
add
scas
push
aam
out
pop
les
loop
mov
inc
inc
cmp
push
icebp
inc
add
push
mov
pushf
popa
fadds
lahf
push
xchg
movsb
sbb
or
dec
ret
loopne
cwtl
test
in
add
outsb
cmp
insb
push
popa
jl
adc
sub
add
or
ret
add
dec
out
inc
enter
xor
pop
jg
add
mov
sarb
push
adc
push
jb
lea
cwtl
or
or
sete
jbe
mov
setb
ljmp
aad
inc
adc
mov
push
jbe
and
add
fs
je
sub
and
inc
inc
cbtw
adc
in
push
adc
or
rolb
ficoml
mov
fimuls
dec
mov
xor
or
push
adc
loopne
mov
decb
in
insb
mov
ds
cwtl
scas
dec
pop
mov
lock
cmp
add
sbb
int3
sub
int3
jmp
dec
sbb
jmp
pop
je
and
mov
faddl
or
or
loope
mov
pop
movsb
sar
push
push
shl
je
add
xor
call
imul
cmpl
push
or
mov
xor
cs
sub
or
inc
push
push
rcll
pop
icebp
ljmp
imul
rolb
cmp
call
adc
mov
inc
aad
jne
aaa
in
jle
cmpsl
xor
icebp
xor
cmp
stos
add
rcrb
mov
jne
sti
jo
or
mov
pop
clc
popa
mov
fidivrl
mov
fidivl
push
mov
push
sub
xor
sbb
les
and
mov
or
imul
jns
adc
dec
add
adc
call
cmp
pushf
push
push
lock
push
and
push
xchg
shlb
push
repnz
popa
add
enter
jge
pop
int3
loopne
pandn
add
dec
sub
xor
and
jp
ljmp
pop
faddl
push
pop
nop
xor
out
sbb
pushf
in
lcall
sub
aaa
es
imul
fwait
inc
cmpsl
mov
add
jl
cmp
fldcw
or
clc
imulb
add
out
fs
sub
ret
leave
js
mov
xor
std
loop
dec
add
addr16
mov
dec
mov
enter
sbb
rclb
push
mov
fmul
out
add
push
or
sub
jge
or
and
js
pop
pop
mov
or
push
mov
test
jne
sub
pop
xor
adc
je
and
mov
jnp
es
aam
cmp
mov
pushf
sub
fidivs
aad
add
dec
or
push
adc
push
in
dec
dec
dec
pushf
add
pop
je
sbb
ret
xor
push
sbb
inc
ss
test
adc
adc
sbb
sub
cmp
add
mov
xchg
sbb
rolb
std
xchg
notb
and
jle
in
movb
sub
bound
push
mov
sbb
repnz
cmp
xor
pop
push
cld
dec
or
xchg
dec
sub
jb
push
mov
push
call
dec
pop
dec
repz
shll
mov
mov
aas
das
push
das
adc
ret
mov
mov
jne
cmp
push
pop
testb
fs
pop
je
int
xchg
or
add
mov
or
je
adc
and
and
cld
cld
pop
adc
xor
cld
push
xchg
lret
add
pop
jb
sbb
or
hlt
inc
es
sub
hlt
clc
icebp
dec
in
sub
lock
and
call
in
jg
lea
and
ja
loopne
sbb
mov
test
mov
loope
pop
data16
in
or
and
in
pop
repnz
adc
cwtl
fcompl
or
pop
fcoml
fcomp
movsb
mov
je
aam
dec
in
aam
add
jno
sbb
push
enter
adc
jmp
push
pop
enter
sbb
lret
aaa
imul
push
cmpsb
enter
adc
test
xlat
pop
movsb
add
mov
inc
es
addb
fnstcw
divb
daa
push
sub
push
fstl
push
mov
push
or
dec
dec
sbb
mov
mov
leave
jno
shlb
inc
inc
or
dec
inc
js
pushf
js
or
xor
mov
leave
xchg
or
sbb
mov
jmp
inc
cmp
jl
pop
enter
add
xlat
add
test
ss
mov
adc
pop
add
shlb
andl
mov
or
mov
hlt
adc
clc
test
inc
mov
and
push
sbb
inc
aas
in
cmp
and
in
cmp
in
and
in
cmp
and
add
and
lock
daa
lret
test
sub
sub
jnp
cmp
jb
add
inc
push
add
and
sub
pop
cmp
cmp
pop
mov
cli
and
mov
add
dec
lret
dec
clc
push
out
rclb
or
xor
inc
or
pusha
lea
push
movl
out
sub
lret
adc
sub
lret
cmp
sbb
push
ret
inc
add
roll
cmp
cmp
inc
inc
inc
fistpll
ret
popa
jmp
adc
mulb
push
scas
xor
pop
dec
sbb
ja
fidivrl
iret
mov
xchg
jo
add
adc
dec
inc
mov
adc
lea
fisubrl
xorl
mov
xor
sub
enter
xor
cmp
in
inc
popa
and
jns
mov
inc
mov
push
addb
inc
pop
sub
inc
int
inc
les
adc
shrl
sbb
call
les
xor
call
inc
sub
add
mov
push
cmp
mov
out
cmp
adc
shll
inc
dec
scas
jnp
pop
pop
lcall
incl
aad
adc
mov
mov
inc
inc
adc
insl
sub
pop
loopne
cmpsb
or
and
outsb
test
adc
mov
add
mov
mov
cmp
jl
cmp
jle
cmp
push
jp
fisttpll
sub
cmp
mov
mov
scas
cmp
test
jge
mov
pop
and
in
out
sbb
xor
je
cmp
je
dec
jmp
sti
add
or
mov
cmp
stos
mov
jge
or
es
ds
add
fildl
and
rorb
sub
mov
imull
inc
sub
inc
out
aas
dec
xor
pop
adc
rcll
sbb
idivb
hlt
inc
adc
sti
push
xor
ds
inc
hlt
movsl
push
push
push
mov
fadds
mov
adc
sbb
push
xchg
mov
dec
loop
js
sub
aad
ja
push
dec
dec
push
or
ljmp
push
pop
push
or
push
popf
in
icebp
sub
test
andl
sub
in
add
lods
mov
fcoml
adc
mov
and
icebp
xchg
ret
push
xchg
addl
sub
pop
fistps
lret
daa
test
add
into
popf
adc
mov
jbe
sub
into
push
xor
push
push
push
adcb
xor
mov
xchg
dec
loop
xchg
popf
je
push
lret
and
repnz
adc
xchg
pop
jg
jmp
adc
clc
repnz
jbe
cli
xor
pop
mov
xchg
ret
mov
sub
addb
push
push
mov
jecxz
inc
bound
imul
out
imul
push
orl
push
je
out
ljmp
mov
lea
cmp
pop
mov
shrl
mov
cmpsl
std
outsl
adc
xchg
repz
test
stc
ja
dec
cmc
dec
or
inc
mov
cs
and
dec
sub
dec
pop
sub
out
or
movsb
jb
inc
xor
cs
sub
ret
and
cmp
inc
xlat
mov
cld
push
lea
push
fs
fwait
lret
xor
or
repz
test
sbb
xor
idivl
ficomps
ja
xchg
push
imul
push
or
out
add
push
push
and
imul
pusha
sub
push
xor
rorb
pop
and
icebp
mov
call
std
and
lock
nop
sti
icebp
push
iret
ret
imul
jmp
sub
fcoms
cmpxchg
or
cwtl
jecxz
cld
inc
hlt
jl
xor
dec
and
push
add
xchg
fidivl
push
repz
clc
cmp
xchg
lock
sahf
call
adc
mov
bound
lock
stos
cwtl
insb
pushf
inc
in
mov
enter
xchg
adc
jbe
lretw
or
in
cmp
jl
or
enter
mov
dec
jo
sub
or
mov
sbbb
mov
push
inc
and
jno
cmpsb
ret
outsl
lcall
push
sub
push
mov
mov
inc
and
cmpsb
jecxz
jo
adc
movsl
mov
das
popf
mov
sub
dec
push
mov
sub
xchg
shll
or
sub
add
jle
add
dec
add
dec
or
fcomps
je
and
jbe
xchg
test
dec
xor
cld
shrb
inc
out
mov
shlb
push
pop
imul
pushf
pop
xchg
add
jl
das
ret
jmp
mov
hlt
adc
jp
sbb
pop
clc
jg
inc
frstor
les
lock
cmp
je
cmp
xchg
std
jmp
cmp
jg
adc
lret
jmp
das
xor
nop
pop
enter
jne
fst
aaa
sbb
inc
jmp
dec
jne
dec
hlt
mov
jmp
cwtl
adc
addr16
jge
outsl
sub
mov
jmp
add
sbb
push
outsb
fistps
icebp
fdivrp
push
jmp
ds
cmp
cmp
fidivrs
je
rcll
in
in
dec
hlt
jp
push
clc
movsl
clts
push
add
inc
jo
sbb
pop
mov
hlt
jnp
xchg
push
addr16
call
xor
ret
test
gs
sbb
into
push
bound
cmp
filds
jne
daa
cmp
iret
jae
or
xor
arpl
cmp
sub
rorl
cmpsl
lds
sar
adc
and
rorb
dec
mov
test
adc
dec
inc
jg
std
push
test
paddd
xor
jle
push
inc
sbb
in
jecxz
lock
dec
add
and
loope
pop
push
lahf
or
pop
push
push
and
hlt
sbb
subb
clc
mov
adc
clc
cmc
push
dec
call
or
pusha
insl
dec
sbb
xchg
sbb
clc
cld
shll
jle
xchg
push
pop
cmc
jo
jg
jmp
enter
mov
in
mov
inc
and
inc
mov
or
xor
mov
push
mov
jbe
or
sbb
or
mov
push
adc
or
jmp
and
es
add
popf
cmp
and
push
clc
push
dec
rorb
inc
dec
adc
aad
sti
add
lods
add
mov
push
fbstp
mov
dec
aaa
cmp
or
xchg
dec
mov
cwtl
insb
nop
cmp
jle
xlat
test
fcomps
mov
pop
rolb
fmuls
fcomp
insb
adc
add
pop
test
mov
outsl
jo
adc
sar
and
in
cld
sub
mov
popf
adc
cli
shlb
pop
jne
cmpsb
pop
dec
push
mov
aad
mov
test
dec
inc
pop
sub
sbbl
inc
js
lret
cld
lock
sub
xor
mov
xor
lock
dec
push
cmc
js
ds
stos
mov
and
mov
es
push
les
rolb
dec
scas
or
pop
jbe
add
loopne
jmp
iret
push
jmp
movsb
jnp
in
lock
fsubs
or
jbe
fdivrs
adc
jae
jecxz
pop
push
cmp
dec
xchg
and
add
mov
sub
test
mov
movsl
loopne
loope
pop
loopne
add
cmp
sbb
subl
xor
and
loopne
dec
sbb
adc
pop
iret
jnp
test
and
mov
add
icebp
add
mov
xor
or
jecxz
fiaddl
adc
call
daa
mov
xchg
and
ficomps
or
daa
mov
xchg
cwtl
out
mov
sbb
xchg
adc
int
push
loope
jne
in
in
popa
and
or
mov
filds
or
mov
push
fbstp
ljmp
dec
adc
fs
testb
dec
adc
or
mov
sbb
or
xor
lock
inc
mov
xchg
inc
fs
pop
or
or
push
sbb
scas
and
xor
push
push
jne
les
add
test
push
in
pusha
shlb
inc
fcoms
pushf
cs
push
fldl
add
lcall
inc
mov
cmp
adc
jne
repz
cmp
divb
or
jne
inc
cmp
jne
or
jmp
fistl
out
fcompl
cmpsb
pop
lock
add
int
out
mov
faddl
fmull
push
xor
fcomp
or
insb
xlat
xor
and
ficompl
roll
add
ret
cmpsb
shrb
test
fcomp
shrl
adc
decl
pop
fsub
pop
fsubrp
or
jmp
mov
jmp
jo
jbe
rorb
shll
pop
push
and
das
xor
push
xor
push
push
push
cwtl
or
or
cmp
add
adc
pop
mov
inc
add
jecxz
jge
push
scas
fsubs
add
or
pushl
lock
lahf
xchg
leave
adc
jbe
inc
cmp
xor
or
adc
je
mov
ret
pop
push
frstor
adc
adc
shl
icebp
shlb
mov
or
js
orb
add
push
mov
pop
fldl
sbb
fxch
and
insl
clc
push
pop
inc
das
lods
push
inc
popf
xchg
xchg
cmpl
add
lock
cwtl
push
adcl
jns
inc
ss
add
shlb
lret
xchg
leave
lret
or
adc
xor
insb
mov
inc
mov
xchg
lea
push
mov
xor
adc
cmpsb
pop
inc
push
out
test
xchg
test
cmpsb
imul
test
mov
add
cmp
or
add
pushl
mov
cmp
dec
pop
cmp
icebp
push
call
fidivs
push
testb
cmpsb
mov
repz
pop
dec
aad
into
js
cwtl
or
ret
cmp
testb
jae
stos
add
pop
mov
cmp
mov
rcll
sbb
adc
xchg
lds
addr16
mov
bound
cmp
pop
in
or
adc
repz
add
xchg
shl
push
cmp
stos
xchg
adc
test
int3
cmp
divl
into
mov
gs
mov
or
outsb
inc
out
or
mov
pop
adc
adc
mov
fdivl
push
jmp
push
sub
movsb
pop
xor
add
clc
in
aaa
div
jle
sbb
aaa
mov
pop
pop
push
mov
test
jle
xor
jnp
add
dec
sbb
dec
pop
int3
insl
loope
add
jecxz
rol
cmp
xchg
dec
leave
cmpb
push
inc
testl
test
push
mov
jne
rol
daa
lods
mov
in
jge
xor
test
mov
push
push
cmp
sbb
arpl
push
je
sahf
cld
push
inc
push
nop
mov
inc
fiaddl
xor
xchg
movl
mov
sub
and
sbb
jne
mov
adc
lea
stos
dec
fidivl
add
push
sbb
fsubrs
imul
dec
dec
outsb
adc
test
adc
mov
test
pop
hlt
jg
test
lods
push
push
xor
cmpsb
mov
pop
enter
jge
orl
sub
insl
push
imull
aaa
mov
add
daa
jbe
sub
dec
push
pop
mov
xor
add
push
jo
jnp
inc
add
add
inc
adc
add
and
mov
or
and
mov
subl
in
jbe
adc
dec
dec
jmp
push
pop
fcompl
lahf
sub
dec
or
test
fisubl
cmp
cmp
loopne
mov
sub
push
sbb
push
push
sub
pusha
in
and
in
xchg
sbb
rcll
sbb
insb
jmp
sbb
mov
adc
rcrl
xchg
pop
xchg
push
fcoms
cmp
and
xchg
fnsave
dec
mov
xchg
pop
movb
sub
dec
fwait
dec
lods
mov
cmp
mov
pop
inc
inc
push
psraw
push
fisubs
add
sti
push
stos
into
sub
and
rcrb
les
rolb
push
push
and
add
imul
pop
sbb
inc
imul
arpl
add
xchg
in
insb
inc
bound
shrb
xor
sbb
xchg
add
movsb
shlb
shll
lea
push
mov
test
fisubl
fistl
or
fs
nop
clc
mov
aam
fcomp
jge
push
and
push
fisubl
gs
nop
fwait
push
cltd
xor
sarb
add
inc
sbb
loope
xor
pusha
mov
les
jne
mov
push
xor
shl
inc
outsb
xor
test
je
jg
out
push
xlat
or
imul
nop
ror
fdiv
idivl
push
sti
xor
sbb
fdivl
push
xchg
out
rclb
in
jge
fwait
pop
adc
and
mov
fsts
sti
pop
and
jne
sbb
out
ljmp
into
pop
addb
pop
stos
push
adc
inc
mov
aam
sbb
add
push
and
mov
movsl
into
inc
add
add
xchg
add
lods
dec
popa
call
mov
pop
retw
leave
pop
mov
mov
dec
addr16
or
sub
mov
xor
jecxz
sub
daa
mov
repnz
xchg
dec
or
lret
fwait
repz
xor
mov
add
cmp
pushl
mov
rol
xlat
fisubrs
insb
pop
xchg
ds
cmpb
int3
mov
push
js
dec
xor
xor
mov
aaa
push
leave
jbe
js
add
ss
cmp
stc
call
lret
loopne
mov
and
out
mov
lahf
dec
pop
adcb
mov
pop
xchg
push
jns
mov
daa
push
faddl
mov
stos
int
and
sahf
dec
or
jl
add
incl
rol
adc
mov
mov
sbb
clc
add
adc
stc
cltd
xorl
sbb
push
popl
rolb
push
daa
pusha
popf
dec
xchg
push
lods
jg
push
popa
bound
out
sub
cmpsb
dec
inc
adc
dec
movsl
mov
jge
add
jae
add
jbe
shll
push
adc
push
or
incl
test
fsubs
popa
js
mov
insb
imul
movsb
mov
lret
cwtl
or
in
notl
lcall
mov
repnz
test
cwtl
mov
mov
repnz
pop
enter
in
int3
inc
mov
fcomps
sbb
xchg
sub
loopne
fsub
lock
sbb
imul
fcomp
lock
fisubs
cmp
loopne
lds
or
decl
scas
push
or
jmp
xchg
jg
jmp
push
arpl
cmp
mov
sbb
xchg
mov
dec
bound
daa
dec
xor
and
ljmp
mov
push
mov
pop
ds
and
pop
aad
inc
add
mov
and
imulb
ret
and
mov
add
and
js
sbb
into
shll
jo
dec
insb
lock
pop
rclb
xor
out
sub
pop
mov
cmp
xchg
fxch
cmpb
das
loop
push
movsl
xchg
inc
mov
mov
xorb
lods
cs
or
sub
inc
cmp
and
les
add
mov
repz
xor
xchg
and
imul
sbbb
lret
xchg
mov
jb
sarl
popl
and
bound
adc
shll
or
dec
cmp
fwait
or
rorb
inc
inc
fadd
push
rclb
mov
les
push
sub
gs
test
jp
loopne
lret
ficoms
repnz
test
sub
xchg
rclb
dec
dec
inc
loope
in
in
ds
or
sbb
xor
mov
inc
mov
inc
shr
push
xor
stos
add
or
pushf
loope
sbb
fs
xor
add
adc
add
cmp
add
stos
push
subb
mov
sub
test
lock
bound
and
jb
imul
imul
lds
push
and
sti
das
and
pop
insb
rorl
add
jg
inc
and
test
inc
movsb
push
push
int
xor
jne
push
or
test
jmp
dec
push
xchg
pushf
pop
fmuls
or
loope
inc
sub
mov
jno
fs
cmpsl
stos
inc
and
popa
enter
mov
pop
mov
lock
inc
mov
adc
in
das
scas
aam
addr16
mov
inc
add
js
xor
jmp
dec
push
sub
adc
in
enter
cmpsl
call
into
mov
mov
jb
lock
inc
arpl
mov
cld
jp
push
adc
add
loop
and
loope
in
mov
ljmp
xor
adc
cmc
cli
cmp
call
test
mov
inc
and
pusha
xlat
outsl
movsb
test
das
loop
dec
inc
fisttpll
and
inc
ret
push
push
xchg
pop
into
pushf
cs
mov
dec
hlt
or
in
ret
push
and
adc
xor
jg
mov
pop
xlat
or
push
push
gs
mov
or
push
enter
push
adc
mov
dec
mov
call
pop
rcrb
add
cmc
pop
sbb
push
inc
inc
dec
outsl
and
pusha
loop
mov
xchg
sbb
push
test
lcall
in
add
add
call
xor
pop
in
into
jecxz
mov
inc
mov
jle
push
loope
stc
inc
xchg
in
enter
insb
adc
xor
test
negb
sti
xchg
je
jmp
inc
mov
inc
and
push
jnp
sub
shrb
das
lea
adc
sub
add
loope
xor
mov
xlat
lock
sub
jl
xor
push
jmp
iret
pop
pop
enter
jns
sti
jns
dec
dec
lock
push
mov
mull
js
fiadds
and
mov
mov
mov
mov
xor
mov
sbb
jp
iret
sub
fmull
cmp
pop
cmp
rcll
aam
cmp
push
scas
pop
mov
cmp
sub
xchg
sub
cmp
sbb
jb
cmp
in
jle
clc
cmpb
je
jne
push
mov
sbbl
movsbl
loopne
and
dec
addr16
add
mov
xor
mov
push
add
ljmp
sbb
sbb
sbb
or
mov
or
cmp
popf
cs
cmp
xor
or
ret
test
mov
mov
insl
test
push
xchg
xor
push
xchg
sti
sbb
pusha
fs
popa
and
shll
inc
cmp
sub
nop
sbb
stc
jb
add
popa
dec
cld
push
jno
and
pop
negl
push
mov
cmp
jmp
les
mov
bound
xor
adc
dec
or
cmp
shr
sbb
pop
pop
popa
cmp
xor
hlt
push
cmp
push
pop
lret
jne
incl
or
or
gs
xchg
rcrb
pop
gs
lods
cwtl
ret
loope
clc
inc
and
jb
aaa
adc
xor
xor
dec
rorl
mov
jno
push
add
nop
push
mov
leave
mov
test
inc
jle
pop
and
or
sub
pop
mov
push
mov
jns
pop
mov
icebp
adc
push
add
pop
jecxz
dec
sbb
pusha
stos
push
mov
add
cmc
iret
sbb
das
mov
or
xchg
ret
pop
jmp
and
fistl
push
mov
inc
adc
cltd
fcomps
jmp
test
pop
push
push
int3
mov
pop
loopne
sub
aaa
mov
test
fs
sbb
adc
dec
scas
dec
jb
sub
je
repnz
sbb
adc
push
jecxz
cmp
inc
push
mov
cli
and
xchg
xchg
addb
inc
cmp
mov
pop
adc
jb
test
xchg
lock
sub
adc
add
mov
inc
push
sbbl
stc
and
outsl
add
push
jb
ret
xor
int3
mov
dec
out
mov
lods
add
adc
xchg
sbb
and
aaa
stc
adc
add
test
in
pop
jmp
cmp
adc
popa
xchg
add
xchg
cld
or
rcrl
es
cpuid
sbb
pop
and
jp
sbb
adc
xor
fwait
sub
sbb
cmc
clc
push
gs
pop
cwtl
dec
pop
inc
nop
movb
and
cmp
das
dec
data16
je
loopne
popf
fadd
cmp
mov
dec
fdivr
fiaddl
cmp
jne
cmpb
hlt
push
xor
jnp
clc
ret
pop
cmp
sbb
popa
ds
mov
xchg
fdivrl
sub
pop
jl
pop
xchg
ret
xchg
mov
or
cltd
cmp
test
es
sbb
and
jbe
out
je
nop
pop
push
loopne
add
aam
aas
mov
xor
sub
cmp
adc
std
jg
add
jmp
cmp
jl
cmpb
jle
adc
cli
jp
push
cmp
je
mov
or
inc
jmp
movb
mov
test
jle
or
pop
cltd
idiv
xor
sbb
fsubl
push
push
push
pop
dec
or
mov
sub
push
in
push
sarl
jecxz
lcall
jns
scas
je
push
xchg
xchg
stos
push
enter
adc
int3
cld
lods
add
outsl
inc
push
ss
pop
sbb
jno
subb
aaa
lods
push
add
add
pop
prefetchwt1
push
mov
pop
cs
jmp
xchg
xor
outsb
dec
push
pop
mov
inc
adc
push
aam
orl
pop
aaa
inc
add
inc
add
mov
push
negl
mov
jae
pop
sub
add
add
or
push
cmp
cmp
les
leave
dec
jl
push
hlt
mov
scas
sbb
push
mov
shlb
push
sbb
es
pop
jmp
sub
pop
xor
pushl
pop
inc
pop
or
pop
sub
test
cmp
push
jns
mov
mov
or
or
or
std
nop
lret
push
add
loopne
inc
stos
mov
call
iret
xlat
inc
mov
add
cmp
adc
and
push
dec
lcall
adc
bound
cmp
pop
test
or
dec
nop
inc
lods
xor
sarb
cmpsb
push
push
inc
push
sub
sub
ror
sarb
mov
push
pop
mov
sbb
pop
xor
mov
in
mov
sub
enter
ja
scas
dec
push
dec
int3
adc
pop
sub
rclb
mov
adc
inc
shll
adc
aam
sbb
adc
loopne
push
or
pop
mov
mov
inc
and
inc
and
mov
adc
fs
imul
stos
dec
pop
mov
mov
cmpsl
pop
mov
pop
add
sub
sbb
push
sbb
pop
nop
add
lahf
bound
inc
dec
dec
lret
mov
mov
cwtl
ret
dec
sbb
repz
ds
sbb
mov
or
movsb
dec
and
inc
jmp
push
loop
add
inc
dec
sub
lods
cmpsl
and
gs
mov
inc
je
icebp
lcall
rcll
in
mov
xchg
mov
inc
leave
inc
inc
xor
or
adc
js
push
mov
sbb
push
push
mov
pop
cmp
dec
xor
add
dec
inc
xchg
xchg
xchg
mov
mov
adc
mov
cmp
clc
pop
adc
lahf
aas
mov
mov
mov
fadds
stos
xchg
stc
in
nop
ret
push
mov
jmp
shll
insb
sub
pop
or
or
dec
leave
scas
push
repnz
xchg
add
inc
or
stos
jl
arpl
adc
lock
push
mov
fidivl
in
mov
jno
inc
test
fwait
icebp
loope
mov
mov
adc
inc
outsb
je
adc
xorb
repnz
pop
mov
xchg
push
cmpsl
pmullw
pop
test
popf
pop
test
iret
dec
xor
cmc
mov
add
add
xor
mov
mov
xor
repz
sti
aam
fstpl
int3
mov
jo
sub
cmp
test
or
sbb
add
ret
lahf
dec
xor
push
xor
dec
pusha
or
aam
cli
sbb
rolb
daa
push
inc
adc
adc
cmpsl
jp
aaa
cmp
inc
mov
sbb
lcall
ror
lods
insb
inc
rorb
int3
ret
mov
mov
gs
sbb
push
add
fisttpll
es
add
jne
adc
and
push
lods
pop
mov
inc
xchg
pop
pop
ja
sub
jno
pop
pop
xchg
in
xchg
sbb
sbb
arpl
xchg
jo
inc
ret
xchg
icebp
mov
lds
sbb
add
push
push
sarb
cmp
hlt
push
int
mov
add
xchg
mov
cmp
jl
je
push
movsb
push
dec
popa
sbb
in
dec
jp
adc
jnp
add
pop
imulb
test
push
ja
cmpb
or
jmp
pop
jl
jmp
add
sbb
imul
repnz
das
sbb
fdivr
sbb
movsb
loopne
insl
and
sbb
and
jb
sub
add
or
inc
dec
cwtl
or
mov
test
lods
and
sub
subl
jg
cli
push
js
paddsb
test
cld
out
push
mov
enter
cmp
jne
faddl
fsubs
popa
push
sub
push
popa
popa
icebp
insb
test
pop
pop
jle
mov
push
call
xor
add
cltd
add
push
pop
xor
push
or
mull
mov
orl
adc
popa
adc
das
in
mov
sub
sbb
xchg
mov
add
push
stos
pop
xorl
je
jnp
popf
shll
sbbb
in
repz
mov
aaa
std
loopne
popa
mov
sub
mov
inc
pusha
add
mov
xor
inc
jne
in
les
push
arpl
jnp
mov
or
fcoms
std
pop
hlt
cmp
jg
orb
clc
loopne
cld
cmc
or
lods
push
or
out
inc
sbb
sub
push
out
pop
shrl
cltd
xchg
jecxz
rcl
out
sub
cltd
inc
mov
sar
mov
xor
mov
pushf
div
mov
lock
jb
fnstsw
ror
sarl
in
adc
adc
mov
push
repnz
aad
or
dec
stos
or
xchg
dec
push
push
cltd
pop
jle
add
lods
stos
inc
mov
daa
and
inc
dec
lods
jge
inc
mov
rclb
in
out
out
pop
call
mov
cmp
jne
dec
add
je
mov
ds
and
pop
jecxz
ret
xor
fnsave
ds
mov
push
push
mov
push
push
adc
arpl
mov
adcb
or
dec
xchg
je
out
add
or
mov
adc
in
and
sub
cmp
ja
or
add
mov
hlt
mov
add
fdivr
push
pusha
push
repnz
nop
fsubs
dec
fsubrl
add
add
mov
movsb
adc
or
mov
jb
jne
push
push
pop
adc
adc
repnz
xchg
pushl
mov
push
mov
mov
sbb
push
xchg
push
orl
push
loopne
push
mov
loopne
pop
cmp
add
pop
push
clc
dec
mov
ja
xor
jmp
adc
out
outsb
into
test
mov
roll
cmp
repnz
repnz
leave
shll
iret
rclb
sub
push
xchg
xor
adc
sub
mov
in
mul
je
push
ljmp
push
popa
aas
fcompl
neg
sbb
and
and
fadds
sub
add
pusha
push
lods
jmp
inc
jns
push
xchg
dec
adc
decl
leave
out
fwait
add
ret
push
lock
add
mov
sub
in
xchg
pushf
lods
mov
adc
sub
pop
sbb
test
out
or
sbb
push
cmpsl
mov
out
jmp
or
mov
or
xchg
pushf
fmull
lcall
nop
sbb
sub
call
cwtl
sub
inc
or
push
rolb
les
test
fists
and
push
arpl
sbb
dec
js
mov
and
cmp
and
lea
jae
push
cmpsb
sbb
mov
push
xchg
sarb
pop
rclb
mov
cmp
sbb
xchg
in
xchg
inc
push
push
mov
in
out
push
dec
lret
add
pusha
test
push
subl
outsl
add
in
push
pop
imul
pop
push
jne
sbb
cmp
dec
cltd
and
xchg
push
mov
adc
pop
lock
jmp
add
hlt
orb
int3
jg
and
cmp
pop
call
roll
addl
push
adc
xchg
dec
jp
mov
jb
mov
int
pushf
adcb
mov
into
out
mov
adc
adcb
shlb
cmp
andb
ret
jno
adc
or
pop
adc
lcall
add
sub
adc
roll
nop
andl
sbb
dec
or
fildl
in
mov
mov
sub
mov
push
leave
enter
add
add
sub
add
or
daa
loope
jne
inc
push
test
imul
leave
add
mov
mov
out
or
fs
lods
bound
add
push
test
loopne
mov
inc
leave
test
adc
adc
test
sub
ret
jge
sub
push
sbb
inc
mov
out
xor
mov
mov
jns
inc
cwtl
and
xorb
rol
fidivl
jae
xchg
xlat
mov
add
stos
es
in
js
jecxz
es
adc
pop
pop
leave
push
pop
cmp
cltd
je
inc
or
test
pop
mov
popf
nop
inc
sub
inc
push
cmp
or
in
cmp
sbb
imul
xor
int3
fbstp
sbb
in
lock
jl
add
mov
xor
int
cmpsb
pop
xlat
mov
or
cmp
sub
dec
es
in
inc
cmp
cmpsb
pop
mov
cmpsl
lahf
inc
adc
call
ss
adc
and
add
or
stos
mov
or
push
cmp
push
jne
or
enter
jg
sbb
adc
cmp
adc
nop
sub
adc
push
mov
push
fsubs
cld
sbb
add
mov
xchg
mov
movsb
xor
outsl
and
shll
popf
cmp
push
sbb
add
push
sub
sbb
movsl
popf
popa
or
inc
add
pop
adc
shll
dec
in
and
inc
pop
and
sub
mov
add
and
push
imull
pop
enter
add
sbb
add
mov
and
loope
test
movsb
push
and
jno
mov
shlb
mov
add
sub
lock
pop
push
leave
loop
jo
call
cmc
mov
xor
dec
inc
jae
dec
insb
leave
call
mov
push
dec
addl
inc
shll
dec
xchg
lea
push
ret
cmp
xor
lcall
and
push
cmp
in
cli
rcll
cmp
cld
loope
cld
movsl
add
and
dec
hlt
cmp
add
daa
lea
push
and
cld
push
das
nop
push
lods
test
or
jne
movl
sbb
sub
dec
loope
push
add
dec
jns
enter
xor
cs
mov
in
add
shrb
xor
repnz
popa
mov
into
ret
and
xchg
push
push
and
jl
sahf
cmpsl
xor
and
test
and
push
push
and
xchg
shlb
push
push
mov
cwtl
imul
or
push
add
das
stos
add
inc
movb
mov
jmp
mov
push
or
test
or
pusha
push
xor
and
mov
pop
dec
dec
filds
fisttpll
sub
pop
xor
insl
cmp
pop
out
cmp
std
or
and
push
nop
cmpsb
dec
mov
dec
push
imul
xor
mov
js
inc
rclb
and
in
pop
test
or
in
jo
imul
roll
xchg
cmp
sub
push
ret
sbb
in
incl
push
rclb
nop
ret
jl
sub
mov
or
addr16
adc
lock
shl
jl
dec
sbb
ss
mov
popa
in
mov
scas
fs
and
dec
les
cmp
sub
jns
xchg
mov
ret
push
andb
or
push
sar
out
inc
sbb
pop
pop
aaa
rolb
cmp
mov
dec
mov
in
insb
pushf
rorb
mov
lods
inc
mov
popf
push
test
inc
das
aam
push
ret
and
jl
cwtl
fiadds
add
push
or
test
test
pop
scas
je
jo
inc
sub
mov
les
jae
jecxz
popa
fisttpll
mov
sbbb
xor
xchg
stos
les
xor
dec
adc
mov
mov
xchg
or
test
add
repnz
and
push
jle
das
jecxz
or
mov
mov
ficoms
dec
xor
stos
sub
add
add
sub
lret
js
cmp
pop
and
cmp
jle
cli
adcb
push
clc
cmp
fwait
sahf
or
cmp
jne
xchg
jo
mov
add
xor
cmp
jo
push
xor
push
clc
pop
or
incb
test
push
mov
ja
push
insl
mov
repnz
and
and
leave
loop
sbb
les
ja
out
push
push
or
inc
sar
mov
loope
dec
dec
xchg
push
xchg
jmp
dec
xchg
sbb
dec
jecxz
sub
ficoml
xor
popa
push
fsubrl
test
cmp
jo
dec
or
push
mov
jbe
mov
add
or
jge
roll
lcall
mov
pop
repz
cmpsb
in
pop
pop
movsb
loopne
add
ret
push
dec
add
add
jl
das
sub
xchg
pop
mov
adc
pop
dec
jp
negl
lea
stos
popa
insb
xorb
or
mov
ds
fdivs
inc
incl
jne
or
and
sti
test
cwtl
mov
pop
loopne
popa
test
mov
mov
rorb
shlb
jp
loope
sbb
push
sub
dec
push
push
jecxz
call
imul
ja
xor
mov
and
ret
mov
repz
pusha
in
jmp
jno
insl
in
adc
add
mov
cmp
cmp
cmp
sbb
cmp
mov
dec
xchg
leave
and
std
and
decl
or
in
add
cld
add
clc
push
rcll
and
fcomps
push
mov
cmp
sub
add
test
push
test
movsb
jno
jae
dec
dec
pop
fildl
stc
push
sub
xor
mov
add
fdivrl
mov
fdivrs
andl
in
add
addl
push
testl
lea
lea
or
movsl
test
mov
pushl
mov
add
out
cmp
jge
fcoml
mov
js
bound
mov
jns
inc
sidtl
cmp
pop
add
insl
or
dec
loopne
data16
ret
mov
jmp
adc
lds
mov
mov
mov
xor
fisubl
push
adc
sub
imul
cmp
adc
in
dec
pop
loop
adc
jge
cltd
add
cmp
push
add
xor
es
loopne
mov
pop
push
mov
or
fcom
ret
out
rclb
cmp
inc
add
push
mov
aam
leave
jge
lret
jo
les
orb
sbb
jo
jmp
sbbl
daa
dec
subb
add
or
pop
and
jne
cmpsb
test
test
or
ja
push
lock
sar
cmp
ret
push
jne
push
push
sub
test
lods
push
or
mov
mov
loopne
jns
pop
xor
call
sub
in
sbb
pop
subb
push
test
insb
int3
mov
lods
jp
int3
xor
mov
or
adc
je
push
out
ja
lea
add
xchg
leave
cmpsl
push
cmc
xor
aam
test
dec
movsl
movsl
push
imul
test
push
das
pushf
mov
add
mov
or
cltd
pop
push
adc
mov
mov
cmp
scas
cld
adc
sbb
dec
pop
inc
sbb
inc
jno
scas
inc
jl
add
mov
xchg
jle
push
mov
test
dec
sbb
sbb
lret
dec
insb
ret
test
in
mov
jge
jge
cmp
imul
jmp
dec
and
sbb
shrl
mov
int3
aas
in
inc
imul
push
adc
add
int3
mov
rolb
inc
sbb
test
shrb
cld
inc
mov
or
shlb
mov
dec
jae
movsb
mov
pop
dec
loope
notl
sbb
or
or
xlat
or
mov
lcall
add
push
in
pop
mov
mov
and
adc
ret
xchg
mov
pop
cmp
add
xor
aam
repz
push
out
lods
adc
stc
and
out
stos
push
pop
cmpsb
push
mov
inc
iret
ja
lods
scas
clc
les
test
adc
jb
test
pop
cmp
sbb
dec
loope
xor
and
cmp
inc
rclb
sub
mov
add
cltd
sub
add
pusha
enter
adc
das
jae
or
fwait
cmp
adc
movsb
loopne
das
cmp
push
shlb
inc
or
enter
inc
sbbl
push
je
or
and
xchg
lea
mov
pushf
test
xchg
fdivs
push
adc
mov
stos
add
lea
sbb
test
inc
cmpl
rolb
xchg
mov
push
imul
unpcklps
loopne
jo
and
xchg
in
cs
lock
sbb
add
lock
fisttps
mov
add
cmp
push
mov
sbb
sti
sbb
pop
cld
push
popf
js
lods
mov
mov
jnp
sub
adc
mov
dec
adc
psubsw
movsl
jecxz
fwait
fwait
gs
into
push
loope
add
call
in
and
ret
xor
or
push
sbb
jbe
add
xchg
adc
andl
jg
jmp
testb
add
mov
jne
fistpll
cmp
jl
or
out
lea
xor
jle
pushl
into
or
push
xor
lods
fldcw
xchg
or
popf
xchg
xchg
or
adc
aam
faddl
in
or
xor
loopne
mov
lcall
sbb
les
mov
or
std
inc
fsubs
loopne
movsb
adc
leave
inc
add
pop
leave
lds
les
jg
out
or
jno
jne
xor
xchg
inc
dec
iret
mov
pop
push
mov
and
xchg
mov
cmpsl
jge
in
inc
or
push
lahf
fdivl
je
push
push
mov
and
popa
adc
pop
dec
jecxz
cld
in
pop
pop
inc
imul
cmp
xchg
sahf
push
iret
adc
add
mov
in
add
pop
adc
cmp
ret
std
xor
ret
cmp
test
sbb
in
test
add
adc
pop
mov
inc
jmp
mov
adc
mov
or
pop
gs
sti
push
sbb
push
or
lock
sub
push
les
xor
mov
mov
movsl
rolb
pop
ds
test
pop
mov
into
sbb
adc
mov
sbb
sahf
adc
xchg
leave
rclb
and
in
mov
stos
xchg
lods
sub
lret
sbb
mov
addl
lea
sbb
divl
call
loopne
sub
or
cmp
jae
sbb
xchg
or
test
sbbb
xor
test
cwtl
cmpsl
xchg
mov
sbb
ficoms
push
fistl
test
and
sbb
pushf
roll
add
mov
in
jle
gs
add
sbb
cmp
ds
add
push
sub
jmp
xchg
or
or
mov
in
rol
ja
loope
fiaddl
push
scas
je
jge
cltd
push
lret
jne
mov
and
add
daa
lock
mov
push
pop
jmp
clc
push
sub
xchg
mov
imul
mov
insl
push
xchg
in
push
stos
mov
dec
add
push
cltd
mov
push
inc
mov
or
js
push
push
nop
pop
shll
sarb
bound
push
lea
mov
dec
or
insb
cli
call
lds
jl
xchg
inc
fsubs
imul
enter
or
rclb
gs
movsl
out
addl
push
fmulp
adc
sub
push
rcr
loopne
mov
dec
mov
sub
cs
pop
push
inc
push
loopne
dec
outsb
inc
jge
xor
mov
test
xorl
push
imul
pop
sti
pusha
filds
je
dec
loopne
repz
test
adc
cmpsb
jmp
or
mov
loopne
and
fmull
sub
mov
mov
push
add
push
nop
imul
add
pop
add
adc
mov
call
ret
add
cmpsl
scas
and
shr
add
call
push
pop
sarb
repz
movsb
pop
orb
adc
and
push
mov
add
pop
shl
jl
xor
pop
int
push
and
add
mov
mov
add
push
cmpb
sahf
cs
fnsave
jae
add
mov
sub
push
daa
gs
in
jl
mov
pop
scas
add
testl
andl
jle
dec
sarl
inc
inc
scas
sub
add
mov
mov
adc
mov
cmp
xor
in
mov
xor
sub
in
jmp
adc
mov
inc
add
test
push
test
cmp
xchg
int3
fimull
rcr
into
add
inc
xchg
fisubs
pop
add
ret
and
lcall
inc
add
add
add
test
fwait
add
jne
lea
call
push
and
lods
insl
xor
xor
fwait
sbb
fiaddl
cltd
or
cwtl
jns
es
xchg
push
xor
out
push
repnz
test
add
addl
push
xchg
int3
bound
xor
outsb
mov
cs
push
cmp
movsb
cmp
adc
imul
pop
dec
push
mov
and
add
icebp
cld
hlt
loopne
jge
pushf
dec
enter
loopne
add
dec
mov
add
aam
cltd
in
fadds
push
fsubrs
inc
sub
gs
push
lock
loop
loop
inc
lea
mov
push
movsb
outsb
xor
xor
mov
sbb
sub
xchg
xchg
push
cmp
andb
add
sahf
aam
mov
fcomps
add
test
ss
add
shrl
ljmp
loop
push
or
push
shl
push
mov
add
push
adc
or
test
dec
adc
adc
lret
or
mov
shr
nop
mov
inc
mov
adc
cmp
sbb
push
std
push
or
lea
cmpb
sbb
and
mov
and
repnz
mov
push
rclb
pop
lods
push
clc
push
pop
mov
cld
dec
inc
mov
movsw
push
inc
loopne
sbb
fcoml
out
mov
or
rclb
sub
pop
pop
pop
jl
aad
scas
hlt
cmpb
mov
jbe
loope
lea
cmpl
adc
and
xchg
out
shlb
jbe
push
cld
je
add
push
or
or
cmpsb
lea
push
add
inc
test
outsb
mov
push
adc
test
call
sub
mul
sbb
fsub
push
pop
sbb
fcoms
add
add
imul
and
ret
inc
pop
push
pop
push
inc
js
stos
mov
push
and
sub
xor
inc
test
andl
mov
icebp
shr
push
jmp
pop
enter
icebp
xchg
add
je
test
inc
push
stos
mov
rclb
inc
imul
mov
cmp
pop
pop
lods
jg
call
adc
adc
mov
stc
push
jl
cmp
bound
inc
rolb
dec
test
mov
mov
xor
imul
or
inc
jae
pop
mov
popf
enter
mov
lahf
add
jge
pop
push
shrb
lret
call
push
iret
repz
cld
lret
fidivrs
push
std
notl
cmp
lock
aam
out
push
enter
push
adc
aas
xchg
dec
in
daa
in
add
add
mov
fadd
pop
orb
or
add
loope
sbb
test
popf
hlt
or
sti
inc
mov
inc
cmpb
movsl
pop
shlb
xor
sti
add
js
jl
movsb
clc
mov
ret
lock
test
xchg
add
xlat
into
add
xor
pop
addr16
clc
or
int3
or
outsl
mov
insl
hlt
xorl
mov
loope
mov
xor
sbb
out
add
movsb
pop
cmp
inc
jle
pop
pop
mov
cmp
and
pop
lea
push
or
mov
dec
fidivs
push
cmp
push
stc
out
xchg
push
or
inc
fisttps
clc
dec
mov
psubq
inc
movzbl
push
jb
push
jecxz
movb
cmp
add
jb
jb
add
push
pop
mov
or
jmp
or
jmp
mov
jmp
or
por
mov
pop
adc
pop
adc
push
adc
dec
mov
jmp
adc
aas
pop
jmp
mov
jmp
sbb
xor
jmp
sbb
es
jmp
sbb
pop
pop
jmp
mov
mov
and
or
jmp
and
aaa
rcr
rcr
test
dec
push
dec
shlb
push
data16
rcrb
mov
jns
addl
mov
orb
cwtl
mov
jns
out
aam
out
sahf
out
jecxz
in
repnz
sarl
cld
add
iret
repz
sbb
and
repz
repz
cmp
mov
add
add
push
pop
or
and
or
or
push
movups
adc
adc
push
test
call
pop
sbb
sbb
sbb
push
pop
and
and
aas
sbb
sbb
pop
sub
mov
imul
int3
iret
lea
push
pop
mov
push
pop
xchg
cmpsl
ja
push
fnstcw
sub
push
ja
leave
push
pop
inc
in
xor
and
or
sbb
and
push
sbb
inc
xor
out
cs
hlt
mov
jle
lods
aas
fimull
shrb
into
test
seta
pop
push
pop
push
mov
sbbb
cmpb
jne
inc
add
je
cmp
jo
ja
push
adc
inc
pop
push
xchg
mov
aaa
add
cmp
sti
xchg
cmp
nop
sub
adcb
mov
mov
pop
cltd
jno
cli
dec
cmpsb
mov
xor
push
sbb
addl
push
scas
xor
testl
fwait
in
pop
adc
and
or
decl
or
push
incl
cmp
jl
cmpsb
xchg
or
push
xor
xor
add
into
lods
pusha
and
aad
push
cmpb
sbb
cmp
sub
and
notb
lods
sbb
stos
stos
mov
sub
and
je
testl
je
imul
push
das
or
mov
cld
fsubr
xchg
in
mov
das
cmp
jne
addr16
xor
xor
adc
repnz
sbb
or
shll
xchg
push
je
jmp
jmp
pusha
aas
dec
rcll
or
add
fistpll
jl,pt
sbb
ss
ret
and
adc
or
adc
push
mov
add
stos
in
pop
ret
xchg
je
pop
adc
jne
sti
pop
or
sub
jbe
adc
scas
or
cmp
fdecstp
xor
cmp
inc
je
adc
or
sbb
ret
add
sbb
or
push
sbb
sub
ret
insb
and
mov
mov
dec
shlb
aaa
push
sub
leave
pop
cmp
in
cs
xor
or
cmpl
sub
mov
leave
in
out
fdivr
sub
cld
sbb
mov
adc
test
or
mov
cld
add
and
enter
xor
sub
or
in
call
in
fcoml
push
pusha
scas
scas
xorl
das
xor
pop
sub
push
and
sub
lods
inc
lahf
ficompl
imul
xor
ret
add
or
mov
add
or
xchg
xor
arpl
ja
dec
or
js
aad
sub
mov
or
fldt
push
aaa
xchg
push
roll
cmc
sub
dec
inc
adc
clc
push
cld
call
repnz
add
mov
scas
mov
dec
shlb
adc
icebp
add
test
dec
or
add
es
scas
lahf
cmpsb
inc
jl
xchg
in
orl
sub
pop
xor
in
or
sti
mulb
jno
cmp
pop
jge
imul
addr16
fsubrs
sub
pop
inc
fldt
jmp
aaa
aam
add
inc
mov
in
or
sub
shrb
add
push
sub
loop
cmp
test
push
add
es
arpl
inc
mov
sbb
dec
enter
mov
or
push
aaa
adc
rorb
fimull
sub
sub
mov
pop
loope
cltd
shlb
mov
lds
inc
dec
in
fdivr
cwtl
xor
andl
test
lock
adc
insb
imul
jmp
in
push
push
je
stc
out
sbb
cmp
inc
pop
movb
popa
jae
inc
inc
xchg
or
lock
pop
add
popf
push
mov
add
subl
arpl
adc
xchg
jnp
mov
mov
or
mov
and
lds
clc
lock
lea
lcall
add
or
pop
mov
aas
or
or
push
pop
sbb
push
adc
lret
nop
arpl
mov
cwtl
pusha
push
and
pop
or
xchg
dec
and
pop
pushf
xorl
add
rolb
js
add
pop
mov
or
xchg
jbe
sbb
add
cmp
add
mov
loopne
jb
push
cld
mov
imul
xor
mov
push
rorl
jp
lock
push
mov
add
cmp
pop
or
rorb
jbe
xor
xchg
xchg
push
iret
cmpl
sbb
ja
jmp
aam
scas
std
cmp
je
sub
test
cld
and
stc
add
pop
sti
je
jle
mov
push
aad
and
movsb
les
das
add
push
inc
jbe
stc
in
pop
inc
xchg
or
fstl
insl
outsl
add
je
aaa
push
insl
inc
cmp
jne
aas
mov
cmp
xchg
or
or
mov
outsl
pcmpeqw
cmpl
decb
push
add
imul
sti
add
sub
hlt
sub
lea
test
negb
lret
dec
add
mov
cs
push
adc
inc
push
sbb
mov
xor
movsb
roll
ret
add
orl
rolb
arpl
fs
out
sbb
push
ja
push
add
pop
push
inc
mov
inc
xchg
inc
addl
shl
push
loope
mov
in
xor
or
inc
or
adcl
push
inc
jnp
testb
es
shr
add
mov
fcoms
faddl
xor
adc
xor
or
add
inc
adc
jno
lea
or
mov
push
add
xchg
or
or
clc
sub
cs
and
addr16
mov
jo
xor
dec
push
add
dec
negl
dec
cmp
add
and
test
mov
imull
cmpsl
imul
mov
aam
addl
je
and
cli
cmp
push
es
stos
and
jmp
cmp
pop
push
in
mov
test
jnp
mov
adc
adc
sbb
xor
rcrb
fsubs
les
repnz
or
sub
jne
out
jno
in
dec
push
pushw
mov
add
sbb
mov
out
icebp
fcoms
jb
rorl
inc
mov
jmp
mov
cmpl
je
pop
insl
cmp
or
and
adc
je
enter
and
ja
in
mov
stc
mov
js
adc
adc
sbb
inc
pusha
push
insb
or
cwtl
xchg
sbb
push
cmp
sub
sub
adcb
dec
icebp
sbbl
lret
cmc
fs
jmp
jnp
test
fstpl
aaa
enter
jb
push
jg
and
hlt
jmp
popa
push
add
push
pop
jbe
push
push
add
js
pop
ret
out
or
inc
xor
mov
fadds
jnp
inc
push
or
push
fucomi
hlt
and
arpl
fistl
push
mov
add
xor
outsl
cmp
xor
dec
movsb
xorl
push
xor
aam
out
or
push
lcall
cld
mov
xor
sub
nop
adc
test
orb
and
fdivr
xor
nop
filds
xchg
fdivrs
pusha
add
sbbl
cmp
add
ljmp
jl
lret
inc
sub
push
push
add
push
add
je
out
and
stc
add
inc
mov
into
sub
test
lret
pop
clc
pop
add
adc
fs
movsl
scas
or
adc
inc
nop
aad
mov
lods
add
xchg
dec
push
int3
pop
dec
adc
sub
flds
cmp
cld
cmpsl
jg
mov
pop
push
cmpsl
adc
xchg
dec
addl
in
push
sbb
dec
add
xchg
in
nop
add
mov
dec
mov
imul
pop
pusha
add
add
ds
add
or
je
jecxz
jp
jl
mov
push
dec
shrb
cmp
jge
mov
or
inc
inc
mov
out
roll
popa
adcb
pusha
xor
outsl
and
jge
jge
movsl
fadds
pop
jmp
dec
jge
push
dec
ljmp
inc
cmp
xor
jne
inc
inc
jmp
inc
dec
xor
or
sbb
cmp
add
inc
sarb
cli
rcl
jo
fldt
sub
andl
jo
push
sub
ret
pop
shll
and
outsl
or
mov
sbb
in
pop
mov
inc
mov
add
call
mov
fstpt
mov
orb
pop
mov
pop
inc
rcrb
inc
out
pushf
xor
jle
push
movb
loop
jmp
sbb
jne
adc
add
ret
sbb
cmp
cmp
mov
push
add
enter
loopne
jle
inc
or
cmp
dec
decl
aam
ret
les
jo
and
cwtl
sub
mov
pop
jno
inc
outsb
inc
push
rcll
jb
ret
adc
push
push
fimull
jne
cmpsb
jge
push
cmc
or
push
popf
cwtl
or
mov
push
xchg
lcall
add
test
xchg
or
mov
es
add
insb
and
add
repnz
cmp
enter
add
call
xchg
dec
sbb
cmp
xor
fstpl
loopne
aam
and
test
dec
pop
je
fsub
push
push
cltd
rclb
ds
push
js
dec
das
sbb
ret
into
fstl
jp
xchg
xchg
add
adc
test
dec
and
and
push
xchg
popf
mov
add
fnstcw
ds
pop
dec
and
push
add
stos
add
hlt
adc
jne
mov
fs
or
aaa
sbb
subl
or
jne
push
sahf
shll
push
jmp
push
sbb
sub
push
cmp
jb
push
or
in
mov
jb
adc
or
push
inc
dec
cmp
ret
stc
xchg
add
popf
xchg
fcoms
mov
jmp
mov
outsl
adcl
mov
push
andb
adc
cmpsl
loope
or
add
std
sub
jb
xchg
insl
add
shlb
fildll
aad
and
mov
mov
loope
jl
imul
ljmp
loope
and
daa
pop
push
adc
jo
pop
rcr
xchg
bound
cmp
jne
mov
sbb
sub
add
push
or
gs
inc
sbb
repz
lock
popa
ret
in
jbe
xchg
iret
adc
jbe
xchg
aaa
and
stos
mov
cmp
fcmovu
outsb
dec
sbb
js
add
and
and
pop
adc
inc
push
add
mov
push
inc
and
cmp
or
sub
jmp
jne
addl
or
pusha
test
jge
fisubrl
add
adc
pop
or
add
mov
push
arpl
cmp
and
xor
test
xor
sbb
mov
nop
call
push
mov
pop
fcmovu
imul
je
jg
dec
ret
or
add
fisttpll
dec
mov
dec
add
lods
test
fisubl
xor
popa
mul
lret
or
sti
aam
cmpsb
jmp
int
call
sub
pop
sbb
outsb
or
in
call
in
lock
jne
add
dec
nop
xchg
notb
leave
xchg
in
lock
jmp
pushf
aad
inc
sub
popa
xchg
leave
cmpsl
cmpsb
xchg
in
in
mov
mov
movsl
mov
mov
add
ljmp
int
jns
add
loopne
add
fs
push
dec
popa
insl
mov
adc
in
add
mov
xchg
add
nop
lds
out
lods
cmp
fadd
aam
movsl
test
mov
push
add
scas
sub
fwait
mov
pop
jmp
popf
fimull
push
add
cwtl
lods
and
call
mov
shrl
sbb
inc
inc
add
push
lea
insb
lock
add
test
xchg
xchg
shlb
faddp
jb
mov
inc
mov
mov
push
mov
dec
setnp
jge
les
sub
daa
aas
lods
loope
add
movl
sbb
and
mov
inc
js
sbb
cmp
lcall
jb
inc
pop
adc
sub
daa
test
repz
jmp
push
jns
push
mov
jae
mov
loopne
rolb
aas
shrb
test
push
xlat
xchg
mov
pop
addb
adc
sti
mov
cld
or
stos
push
mov
push
lods
je
sbb
lods
scas
adc
jo
je
lock
push
addl
sbb
inc
cltd
cmp
jbe
and
jmp
sbb
sbb
addr16
mov
mov
inc
call
ja
sbb
mov
dec
add
mov
pop
loopne
xor
push
lock
mov
testb
dec
jmp
in
in
sub
jmp
or
in
push
imul
test
cmpsl
lea
and
cmp
pushl
xor
inc
sbb
mov
add
dec
adc
jbe
sti
sub
dec
and
jmp
push
les
shlb
mov
push
jo
mov
mov
jge
or
push
lcall
push
fwait
in
add
sbb
jl
bound
pop
mov
push
icebp
mov
fisubrs
sub
inc
outsb
sub
adc
mov
loope
jecxz
add
sbb
dec
sbb
pusha
adcb
cmp
pusha
int3
imul
push
push
or
add
je
rclb
add
sub
test
adc
pop
or
test
jge
fsubrl
or
inc
and
jl
leave
xchg
jl
xchg
aaa
into
mov
dec
push
subb
leave
loope
xchg
or
and
and
adc
and
cwtl
jp
or
pop
xor
jno
jo
or
inc
add
or
pop
adc
mov
jp
clc
lahf
and
pop
xchg
les
or
push
lret
sub
addl
dec
push
sbb
or
popa
mov
sbb
dec
test
jmp
jae
sbb
push
mov
movsl
mov
xchg
iret
jns
push
roll
in
sbb
mov
xor
cmc
out
in
adc
sbb
cmc
jg
outsl
call
hlt
jmp
push
jge
loopne
lods
mov
loopne
shr
add
inc
insb
pop
js
adc
ret
cltd
push
add
mov
and
lahf
test
push
add
push
fmull
xchg
lea
cmp
mov
adc
mov
mov
xchg
dec
pop
enter
insb
sub
push
das
cmp
mov
rcrb
add
add
insb
sub
or
popa
js
jne
sar
sti
rcl
adc
push
gs
fstps
in
unpckhps
jnp
lret
push
mov
aam
add
mov
sub
inc
lahf
and
or
pop
xor
out
lret
mov
push
pushl
cmc
rorl
les
mov
test
jmp
or
jne
xor
addl
push
inc
dec
add
movsl
in
sub
orb
pop
mov
rcrl
push
pop
or
push
pop
jmp
cwtl
rol
adc
xor
jecxz
ret
pop
shl
loopne
ret
or
inc
mov
push
dec
adc
mov
mov
or
sub
cltd
or
fcomp
push
xor
in
call
xor
movsb
fldl
scas
or
stc
out
add
rolb
push
inc
adc
and
gs
pop
sub
pop
loopne
pop
test
shll
push
add
inc
es
pushf
hlt
add
dec
mov
push
add
sub
xchg
sbb
jne
mov
in
enter
int3
adc
inc
mov
inc
mov
xor
adc
int3
inc
adc
lods
mov
stos
xchg
inc
xor
add
jg
lods
and
push
push
mov
cmp
adc
dec
push
and
pop
push
jmp
jp
pop
addr16
push
push
push
jl
and
jmp
sbb
push
int3
call
and
fnsave
mov
push
in
sub
fucom
xor
adc
jo
or
popf
punpckhdq
push
sbb
jns
in
rolb
sub
xchg
pop
add
nop
or
inc
push
cmpsb
xchg
shrb
pop
enter
or
add
push
mov
add
cmpsb
in
ja
call
in
jbe
cmpsb
add
jns
mov
mov
inc
frstor
or
data16
cmp
xchg
or
dec
jne
adc
fcompl
loopne
movsl
mov
out
xchg
jb
es
jns
adc
push
int
test
mov
mov
mov
add
mov
scas
pushf
xor
int3
push
pop
int3
xchg
jmp
rclb
ror
adc
dec
adc
mov
les
test
sub
cmc
xor
repnz
xchg
mov
cmp
and
mov
es
add
push
mov
or
xchg
xchg
mov
leave
aam
dec
inc
mov
test
nopl
mov
xor
mov
dec
fwait
sub
inc
stos
or
popf
push
stc
mov
mov
push
jge
movsb
mov
cmp
imul
fnstenvs
xor
add
stos
adc
push
mov
dec
inc
dec
test
shr
or
rcrl
inc
dec
push
fcoml
es
stos
test
repz
lods
adc
pop
movsb
sbb
push
mov
fsubrs
sti
divl
sbb
popf
insb
jmp
mov
adc
lea
fstl
mov
data16
xrelease
jne
pop
jecxz
add
push
xchg
sbb
sarb
sarb
loop
mov
aad
push
repnz
or
adc
mov
cmp
mov
lcall
fldcw
add
dec
out
arpl
pop
test
mov
or
mov
push
pop
lret
push
dec
mov
inc
paddsw
xchg
sub
hlt
or
xchg
mov
lret
jns
sub
data16
outsl
sbb
lea
mov
iret
loop
push
lcall
mov
mov
sub
outsl
and
xchg
adcl
push
sbb
cmp
push
xchg
test
and
sub
jo
popa
xchg
or
ret
mov
mov
mov
addr16
shrb
int
cmpb
faddp
mov
cld
cwtl
scas
adc
out
push
js
jne
rcrb
inc
push
call
inc
inc
movzbl
and
pop
sub
dec
or
xchg
add
add
push
jl
xchg
or
push
jmp
fmul
clc
sub
mov
dec
or
je
fcom
loope
xchg
push
fists
aam
pop
xrelease
xchg
ds
popa
pop
adc
in
jbe
xchg
test
xchg
dec
mov
mov
cmp
push
push
jg
inc
cmp
or
jnp
mov
push
push
xchg
xchg
mov
and
or
jno
ficompl
and
stos
jno
ds
push
xchg
and
sbb
mov
imull
add
pop
sbbl
jo
cmp
pusha
ja
adc
cmp
ja
sbb
push
xor
jl
push
clc
fcmovne
loopne
sub
lock
dec
cmp
cmp
popf
jge
pop
push
dec
aaa
fisttpll
adc
leave
xor
in
jmp
sbb
popf
dec
es
jns
sub
mov
inc
rclb
push
sub
push
mov
ret
mov
call
mov
xor
ljmp
mov
xor
or
adc
dec
popa
ret
pop
push
add
mov
popf
push
push
jb
jecxz
test
inc
pop
dec
or
lock
push
or
std
jnp
pusha
in
lods
adc
cmpl
pop
or
call
or
lods
dec
sahf
gs
jnp
loope
lds
push
inc
stc
push
pop
push
xchg
dec
adc
mov
push
sub
jbe,pt
loopne
ss
je
push
or
mov
ss
lock
add
add
dec
shlb
lds
inc
mov
jo
push
add
and
xor
adc
cmp
in
or
push
push
or
mov
inc
cmp
shll
and
xchg
lar
or
dec
rolb
ja
outsl
add
jne
mov
imul
and
adc
adc
cmp
jne
addr16
jle
popf
adc
lds
fistpl
cld
or
rclb
hlt
dec
cmc
ret
testb
xor
dec
stc
ret
test
adc
and
test
sbb
sarb
loop
out
add
add
addr16
rcr
ljmp
adc
arpl
test
xchg
cmp
fstpt
mov
add
cmp
dec
aam
xor
cmp
or
mov
nop
push
repz
mov
inc
sub
or
dec
and
dec
sbb
xchg
hlt
xchg
les
and
xchg
cmp
inc
bound
jmp
cmpsl
in
sub
xchg
adc
sbb
mov
pop
jns
inc
push
and
xchg
mov
push
into
dec
imul
aas
out
push
shl
stos
orb
inc
sbb
or
or
push
pushl
stos
jb
enter
fwait
dec
ja
lahf
push
icebp
push
jl
jmp
andl
add
nop
or
xchg
or
adc
and
out
sub
cmpb
push
shrl
inc
or
cmpb
mov
rol
and
jbe
fldcw
sub
cltd
jmp
xor
fistl
dec
adc
mov
les
adc
push
dec
sbb
adc
in
mov
inc
mov
push
sbb
push
xchg
dec
push
or
jl
adc
xor
js
lods
sub
adc
popf
xor
inc
arpl
movsb
jb
cmp
enter
mov
test
lods
xchg
jns
aas
nop
cwtl
je
push
jl
daa
in
push
push
rcll
sahf
sub
mov
and
mov
mov
fmull
mov
add
push
adcb
je
mov
add
push
daa
mov
lahf
adc
rolb
js
int
out
mov
inc
push
or
fs
xchg
jo
pop
sbb
dec
and
mov
ds
pop
push
fmull
or
inc
fdivrl
lret
sub
push
mov
inc
nop
in
test
andb
and
int
lds
pop
mov
scas
xor
or
in
out
xor
xor
or
inc
andb
fsubrs
add
add
sbb
jns
adc
inc
mov
sbb
mov
ret
nop
rorb
call
mov
jne
mov
fimull
and
push
push
outsb
pop
in
adc
adc
pop
xchg
jmp
sbb
mov
leave
cltd
lahf
test
out
xor
add
fnstenv
push
in
in
mov
outsb
imul
arpl
pop
popa
xlat
pop
jbe
mov
fsts
and
mov
sbb
ret
clc
jns
jge
imul
jl
js
sub
cld
cld
adc
push
push
imul
mov
or
adc
iret
cmp
mov
or
push
sub
push
xor
pusha
mov
je
cwtl
sbb
push
outsl
add
nop
or
push
lock
cmp
jns
sub
or
mov
push
pushf
or
sub
or
dec
aas
lock
fcoml
dec
add
sti
lock
jl
xchg
xor
out
insl
js
xchg
pop
push
mov
lret
xchg
ret
sti
adc
pop
dec
stc
add
cltd
mov
data16
fdivrs
xor
inc
lock
insb
push
cltd
xor
xchg
lahf
push
pop
inc
lea
inc
clc
mov
xor
mov
cmpsb
sub
hlt
mov
sbb
xlat
insl
pop
sbb
and
adc
sbb
mov
lahf
mov
xorl
ret
sbb
inc
nop
or
and
push
nop
lahf
sub
fisttpll
aas
mov
cwtl
mov
push
cwtl
and
mov
test
aad
jmp
lahf
jg
rcrb
dec
sbb
ds
mov
adc
xor
pop
mov
sub
pop
adc
add
jne
int3
mov
fildl
js
icebp
ret
mov
xor
leave
stos
aam
or
movsb
arpl
out
cmp
loope
inc
cld
dec
push
sub
mov
fwait
cld
shlb
test
mov
pushf
mov
push
lea
addl
in
xchg
and
add
popf
add
xor
je
mov
mov
cmp
and
popa
and
sub
fs
aas
xor
xor
add
mov
add
xchg
enter
sub
jmp
mov
push
outsb
rorb
adc
mov
test
jb
or
inc
push
in
xor
or
out
push
jmp
jmp
push
xor
mov
repz
arpl
test
scas
xchg
in
pop
dec
insl
adc
add
adc
mov
mov
or
and
inc
pop
fdivp
and
push
sarb
call
mov
ss
adc
pop
dec
add
jecxz
adc
cmpl
pop
enter
ljmp
sub
inc
dec
hlt
mov
iret
cltd
hlt
mov
hlt
jl,pn
and
push
pop
fisubrl
xchg
dec
inc
pop
inc
push
ret
repz
or
clc
aaa
repnz
or
or
pop
or
pop
aaa
jl
inc
mov
cmp
mov
mov
xor
es
sbb
in
jl
mov
hlt
add
adc
test
and
add
or
into
inc
jnp
pop
sub
loop
adc
mov
dec
or
lcall
mov
pop
and
and
pop
dec
and
sub
jecxz
jo
and
loopne
sbb
subl
bound
add
clc
shll
xor
adc
insl
jl
cld
lea
aam
xor
or
aam
xchg
mov
cmp
test
sub
lock
lea
mov
jge
pop
nop
mov
inc
jae
aas
lea
jge
pop
movsl
xorl
fcomip
dec
pusha
mov
rol
faddp
lret
pop
xor
shr
xor
mov
icebp
jg
rol
fld
ret
or
or
icebp
add
add
add
lahf
test
or
mov
push
or
and
xor
add
add
fsubrs
add
loopne
add
popf
scas
fnstcw
ror
mov
fisubrs
cwtl
mov
insl
dec
cli
and
and
xchg
push
aam
inc
popa
sbb
push
fs
gs
repnz
repnz
dec
imul
sub
loopne
pop
sub
ja
push
or
xlat
ret
fistps
cwtl
aam
add
add
add
in
xor
fdiv
sbb
aam
in
in
and
push
lock
xor
sub
ljmp
rol
rol
out
add
movsb
imul
loopne
lock
xor
imul
in
aam
call
lahf
push
cmp
bound
mov
mov
add
or
aaa
loop
sbb
ret
dec
inc
push
lock
in
xor
in
in
movsb
jb
xor
in
lock
sbb
cmp
xchg
cmpsb
imul
cmp
jno
xor
push
or
adc
enter
add
lock
xor
cltd
ds
and
out
iret
or
mov
into
add
and
add
test
loopne
inc
loopne
mov
in
insb
fwait
inc
jo
ret
push
jo
ficoms
add
mov
dec
shr
xor
inc
pop
iret
jl
iret
push
loop
mov
add
jle
filds
cltd
insb
inc
faddl
pop
jbe
in
mull
ret
lret
bnd
add
xor
xlat
add
gs
fcompl
inc
fs
nop
and
psllq
lret
inc
mov
xor
or
jmp
stos
adcb
fcomp
aaa
cmp
shlb
in
out
enter
inc
push
pusha
fs
out
aam
inc
aaa
xchg
add
sub
jge
aam
cmpsb
xor
dec
inc
imul
pusha
in
in
js
jo
loope
in
add
push
adcl
mov
dec
push
nop
data16
xchg
and
or
pop
dec
cmp
inc
and
int
leave
push
push
pop
or
xor
cmp
mov
mov
xor
pop
sahf
push
add
test
or
nop
and
nop
out
pop
fs
xchg
inc
pusha
nop
pusha
scas
mov
xchg
xchg
movsl
inc
in
pop
mov
or
rolb
dec
sahf
sbbb
inc
or
dec
push
mov
dec
dec
dec
sbb
test
stc
and
ljmp
mov
xchg
inc
push
jb
fcompl
dec
or
or
loopne
push
dec
ret
xor
cmp
jo
push
and
add
and
sbbb
jmp
add
cli
push
mov
dec
or
lods
inc
cmp
aas
pop
add
sub
add
jg
inc
pop
jae
incl
cmp
jb
push
jle
pop
and
inc
aaa
sub
add
sub
clc
fcmovne
ljmp
test
or
enter
mov
push
lret
loop
incl
rol
and
or
or
xchg
adc
sub
sub
inc
pop
jae
mov
sub
cs
cmp
pop
lock
pop
loope
lea
call
xchg
out
decb
sub
pop
adc
test
into
mov
pop
jne
pop
jle
loope
mov
push
enter
sti
xchg
mov
rorl
xchg
sub
mov
in
sti
cmp
mov
jbe
adc
inc
sbb
lret
push
sbb
fucomi
decl
push
jae
push
pop
fldcw
enter
clc
divb
xchg
mov
or
mov
push
mov
push
mov
in
not
cmp
mov
clc
loopne
xchg
cld
dec
add
push
addr16
data16
mov
mov
roll
inc
lea
and
lcall
sbb
mov
sbb
int
xchg
or
lock
pop
ret
mov
cmp
hlt
out
jecxz
lock
push
add
add
nop
or
movzbl
pop
cwtl
in
sbb
xor
mov
int
and
mov
or
pop
jno
xor
incb
mov
out
xchg
xchg
mov
xchg
xchg
or
xor
xor
pop
add
dec
add
outsb
jl
add
imul
jmp
sahf
adc
jle
test
aaa
ret
push
xor
xor
dec
or
or
popa
cmp
jge
and
cmp
mov
mov
add
xchg
inc
mov
inc
lcall
adc
mov
mov
or
xor
add
mov
push
cs
jle
pop
inc
shrb
lock
dec
inc
dec
adc
enter
fidivrs
push
mov
inc
call
dec
imul
or
dec
cwtl
mov
orb
cmp
add
mov
pop
push
mov
pusha
sub
loope
add
sbb
cmp
inc
faddl
lea
pop
inc
rcrb
add
hlt
fucomi
sub
das
jne
push
mov
inc
inc
insl
push
push
stos
pushf
mov
jne
testb
ret
mov
cs
or
inc
stc
mov
decl
mov
shr
shl
and
add
mov
enter
shl
lds
incb
add
and
push
xor
mov
mov
xchg
loopne
mov
cld
movsw
movsb
out
add
inc
mov
push
jle
jne
jecxz
pop
jp
jge
push
pop
sub
push
cltd
rcrb
nop
add
sbb
dec
pop
jle
push
int
imul
lock
sub
aas
lea
frstor
movsl
xor
push
popa
mov
scas
jno
push
jbe
xchg
test
hlt
push
add
jle
clc
shll
push
dec
loop
dec
or
insb
mov
ss
popa
cmp
and
push
and
and
jg
sub
es
sbbl
fists
sbb
test
jne
mov
loopne
push
add
sbb
jbe
push
stc
test
cli
movsb
add
mov
xor
call
repz
mov
cmc
xor
adc
mov
leave
pop
mov
stc
incb
or
add
xchg
sub
pusha
cld
mov
adc
inc
cmp
adcb
and
xor
push
test
fnsave
add
pop
xor
xchg
lret
gs
cwtl
xchg
test
and
push
add
addb
mov
mov
sub
out
imul
leave
add
mov
cld
imul
cmp
in
test
test
int
aas
cmp
jb
fidivrs
ja
clc
sub
ret
cmp
sbb
aaa
xor
in
popa
push
ret
or
aaa
mov
dec
dec
push
roll
cmp
and
aaa
aaa
aaa
and
es
sub
sub
sbb
outsb
dec
adc
pop
jl
or
repnz
fbld
in
add
cmp
jbe
cmp
jb
jle
fistl
add
popa
mov
lcall
push
sbb
add
xor
mov
repz
or
adc
and
cmp
add
out
push
fildl
inc
call
daa
loop
or
jnp
cwtl
les
mov
das
in
fbstp
add
jb
cmp
je
cmp
je
cmp
jne
adc
or
decl
jne
dec
inc
lea
inc
mov
jmp
dec
mov
dec
xor
push
or
in
push
mov
lock
mov
pop
out
testl
fwait
rorl
cmp
jbe
cmp
lea
out
inc
cmp
mov
mov
jmp
inc
and
sbb
jno
push
or
mov
inc
dec
test
jnp
cmp
je
data16
testb
or
sub
es
lods
hlt
fwait
cwtl
pop
or
in
pop
call
push
cwtl
cmp
push
dec
push
ss
aam
dec
leave
mov
sti
cmp
idivb
addb
js
cmp
shlb
jbe
sub
outsl
stos
dec
loopne
inc
fsubl
xchg
jno
dec
pop
xchg
sub
inc
addl
sub
push
cmpsb
push
test
sub
loopne
sbb
pop
fisubs
pop
pop
jbe
pop
inc
in
inc
sahf
mov
xchg
es
leave
adc
xor
add
mov
jmp
fadd
jecxz
pushw
sbb
fcomps
jmp
mov
mov
add
into
add
insl
push
loopne
xchg
lcall
mov
mov
inc
mov
push
test
push
adc
je
or
lock
pop
jae
mov
cmp
xor
data16
test
sub
in
adc
dec
jg
sbb
jl
clc
ret
outsl
dec
insb
sub
fmull
ret
xchg
inc
cld
sub
jmp
loop
mov
in
pusha
test
sub
jne
mov
stc
popf
xchg
adc
je
test
jne
je
ss
ret
inc
pop
enter
jb
mov
xor
or
or
add
movb
sbb
jle
push
push
cs
adc
add
mov
movb
or
cmp
jo
loop
adc
repz
call
sub
leave
lds
into
mov
sub
pop
mov
fidivl
adc
bound
adc
lret
lods
mov
cmp
sahf
push
test
dec
ljmp
dec
add
je
int3
sub
popa
or
rcll
push
je
cmp
inc
cmp
cmp
adc
xchg
add
inc
cmp
je
jb
cs
adc
andl
sub
adc
and
mov
inc
inc
insb
notl
movsb
jmp
push
or
jae
pop
and
ret
rorl
and
xchg
jne
inc
cld
rcl
or
imul
andps
stc
push
je
inc
cs
cmp
xor
sub
jl
add
pop
rcrb
cmp
add
inc
call
mov
mov
push
mov
sahf
xor
mov
data16
ret
stos
xor
int3
adcb
xchg
js
sub
inc
nop
push
cli
mov
push
ret
in
or
es
cld
pushf
sbb
mov
and
es
lret
loopne
lock
lret
sub
bound
push
xchg
scas
xor
mov
scas
insb
insb
in
mov
cmpb
cmpb
fnsave
cmp
push
aad
push
cmpsb
xchg
and
mov
push
cld
popa
add
add
es
repnz
and
cmp
dec
dec
les
xor
orl
adc
orl
cmp
jne
add
push
nop
push
mov
push
cmpsl
mov
cmp
imul
xchg
mov
push
push
push
mull
cmpsl
aaa
and
pop
cwtl
push
inc
and
pop
cmpsb
jo
das
lret
aas
push
mov
mov
xchg
push
nop
movsb
xor
in
xchg
out
cld
jbe
or
inc
sub
adc
fisubrl
shr
sbb
push
sub
jb
pop
sub
xor
pop
cs
lret
xor
cmp
cmp
or
cmp
mov
push
xor
adc
loopne
dec
jmp
sbbb
xor
push
xchg
andl
or
cmp
mov
push
inc
ds
cmp
or
xor
stos
imul
call
int3
lods
mov
or
std
jbe
lret
pop
sbb
int
or
popf
add
jns
sub
or
push
mov
lock
mov
lahf
mov
ret
pushf
pop
in
shrl
scas
les
jbe
inc
push
xlat
cmp
test
aaa
sbb
or
rorb
xor
pop
btc
pusha
mov
dec
sar
push
mov
sbbb
and
scas
lahf
test
sub
mov
mov
xor
push
xor
jbe
or
jne
push
pop
mov
pop
and
inc
inc
lods
aam
or
dec
inc
adc
pop
inc
mov
and
sbbl
and
and
pop
dec
rcr
adc
xchg
or
fldl
popa
or
or
loope
ret
adc
adc
shll
mov
adc
push
fwait
sub
dec
test
decl
mov
sub
ja
dec
and
dec
xchg
iret
out
mov
dec
inc
out
rcll
push
inc
movsb
roll
clc
daa
and
mov
push
leave
adc
outsb
repz
cmp
xchg
pop
add
add
pop
lret
shlb
adcb
fs
loop
popa
sub
mov
enter
sbb
add
adc
xorl
mov
xchg
inc
dec
mov
inc
enter
xor
or
nop
push
jmp
test
insb
pushf
aam
inc
or
enter
je
adc
je
or
dec
cmp
dec
xchg
push
inc
sub
adc
sub
clc
fdivr
sub
push
pop
sbb
lock
or
addb
or
fidivrs
or
imul
dec
adc
jo
push
sub
aas
shll
add
sub
daa
cmp
sbb
sbb
xor
cmp
and
aad
adc
testb
loop
in
or
adc
or
mov
sbb
lock
mov
xchg
lods
das
dec
jno
andl
popa
mov
or
or
mov
and
sbb
pop
jp
icebp
add
or
dec
mov
adc
push
and
fimull
xchg
sbb
add
cmpsl
orb
call
fsubrs
push
dec
flds
push
pusha
mov
adc
xor
pusha
add
sub
mov
sarb
cmp
cmp
enter
cmp
rcll
push
ja
aaa
je
mov
inc
add
sub
call
dec
rcl
or
mov
xor
loopne
dec
testb
pop
test
xchg
jmp
lods
mov
cs
lock
mov
aad
lock
push
add
add
push
and
mov
push
cmp
dec
gs
cmpsb
pop
push
pop
pop
clc
lret
sub
inc
or
xor
nop
test
pushl
adcl
or
adc
xchg
xchg
push
icebp
xchg
rorb
inc
xor
out
notb
add
pusha
insb
mov
mov
push
stc
or
jge
cmp
lds
rcl
je
es
ret
push
fimuls
mov
test
clc
jne
lea
in
mov
add
xor
add
xor
adc
ret
xor
test
sbb
and
add
pop
adc
jo
lods
js
insl
pop
add
lret
ret
or
cmp
jae
out
pop
mov
dec
jb
add
pop
shl
cmp
dec
or
fldcw
stc
jne
dec
mov
pop
jge
out
fildl
mov
sti
mul
or
jmp
or
mov
lret
mov
popa
rcrb
test
sub
xorb
pop
ret
xor
lea
jmp
cmpl
mov
inc
cmp
jbe
jmp
inc
addl
pop
jmp
and
pop
andb
jo
jnp
pushl
andl
and
mov
add
pushf
add
addr16
je
insl
cmp
sbb
movsl
or
push
cmp
push
cld
or
cmpsb
outsl
je
cltd
jmp
inc
or
adc
enter
dec
aas
xchg
mov
sbb
add
into
adc
mov
push
or
or
and
addl
and
cmp
jae
les
mov
mov
fimuls
add
inc
jl
cli
push
das
cmp
pop
add
sbb
jns
cmp
ja
cmpb
out
aas
or
add
xchg
push
inc
fisttpl
push
pop
lea
int
aam
ret
jae
cmp
xchg
dec
xor
dec
pusha
pop
ds
and
mov
sub
test
je
adc
addb
aas
ljmp
ljmp
sub
inc
or
or
and
pushf
mov
push
jmp
enter
xor
les
ret
add
mov
adc
inc
xchg
mov
je
ficoms
mov
loope
mov
inc
jge
nop
fwait
lea
ret
dec
add
outsb
mov
loope
and
mov
into
clc
mov
mov
ret
mov
fildl
and
push
cmp
mov
sub
push
je
das
inc
pop
fnsave
fwait
push
icebp
je
fnstenv
imul
dec
pop
fcom
scas
pop
mov
inc
push
cmp
mov
cmp
inc
les
dec
xor
std
add
clc
pusha
mov
arpl
cmp
je
and
or
aaa
pusha
pop
test
lret
adc
jne
mov
sbb
or
xchg
push
jo
out
sub
sbb
sub
dec
pop
add
es
aaa
sub
push
push
aaa
adc
decl
testb
cli
sbb
xchg
pop
dec
cld
nop
push
ss
and
pushf
inc
popl
push
sub
sbb
inc
mov
pop
add
xchg
rorb
xlat
imul
mov
xorl
adc
adc
xchg
and
jg
movsb
es
or
cmp
jb
lds
or
jmp
fiaddl
sbb
arpl
cmp
enter
xchg
push
xchg
inc
insb
aam
mov
fimull
jnp
je
es
andl
xor
mov
add
add
pop
fstpl
jl
or
cmp
rcrb
outsb
mov
lea
int3
jo
sbb
lret
xor
xchg
fwait
aam
sbb
insb
sub
mov
fnstcw
push
or
repnz
add
fs
inc
push
lock
adc
inc
add
jbe
outsb
add
lods
ds
push
stos
mov
sub
adc
add
imull
enter
data16
push
nop
fmull
inc
cmp
adc
cmpl
inc
xor
clc
sbb
push
mov
sbb
jle
sahf
je
sti
sahf
and
adcb
jp
or
mov
bound
pop
lcall
cld
sbb
xor
insl
xchg
sub
mov
or
imul
popf
add
sub
das
sub
add
push
push
popa
mov
xchg
lock
sahf
inc
es
add
lds
lret
cmp
inc
or
and
rorb
xchg
lea
adc
jmp
aaa
sub
je
pop
cltd
or
or
mov
jl
add
add
xsha256
cmpsb
push
mov
xor
sbb
addr16
fmull
inc
cmp
jae
test
dec
mov
test
aas
cmp
in
add
jmp
ljmp
push
sbb
repnz
sbb
mov
jb
xor
mov
and
cmpl
adc
lret
push
jne
je
mov
mov
or
in
xor
add
push
cmp
jmp
jmp
push
daa
or
loope
pop
push
int
xor
cltd
leave
cmpsl
sbb
add
cmpsb
jbe
pop
adc
add
mov
in
xchg
push
icebp
adc
cmp
cmp
scas
pusha
loopne
mov
test
mov
addr16
pusha
adcb
xchg
push
mov
pop
sbb
insb
mov
jae
mov
adc
inc
rcrb
or
push
dec
push
ret
testb
pushl
bound
test
out
stos
mov
or
fistpl
je
add
pop
push
jle
ja
jmp
mov
adc
add
sbb
mov
mov
mov
xlat
push
cmp
cmc
adc
cmpl
mov
or
push
push
test
repnz
inc
sbb
clc
or
popf
dec
shll
xor
loopne
ja
xorl
push
jns
add
pop
or
pop
ficompl
and
filds
mov
dec
cmp
cmp
js
dec
jbe
cmp
jbe
mov
sbb
adc
mov
cmp
add
push
ja
rolb
int
jns
outsl
mov
add
inc
sbb
por
adc
mov
test
push
or
sub
movsl
mov
pop
jmp
clc
ja
cmp
cltd
cmp
mov
and
push
es
xchg
rclb
cmpsb
clc
mov
adc
inc
adc
testl
cli
mov
dec
dec
or
fcoms
mov
addr16
inc
inc
movl
lret
sub
jo
repnz
add
faddl
sub
dec
andb
sbb
jae
dec
test
jp
and
hlt
test
orb
subl
unpcklps
and
sbb
nop
cmp
sbb
in
push
mov
cmpsb
dec
cmova
test
test
or
pop
cs
pop
cmp
loope
hlt
add
push
test
pminsw
push
lock
aam
ret
cmp
cmpsb
orl
std
pop
xor
jge
jg
mov
inc
mov
add
mov
scas
add
inc
xchg
cs
sbb
call
stos
aas
sbb
inc
sub
dec
adc
mov
or
ds
and
test
hlt
out
add
ret
std
fmuls
jnp
orb
orb
xor
mov
outsb
ret
pop
les
es
sahf
push
add
shrb
dec
pop
add
andl
pop
push
xchg
jmp
mov
xor
cmp
mov
inc
sbb
push
filds
gs
scas
ret
adc
and
test
pop
call
loope
fidivrl
inc
add
popl
stos
rorl
cmp
fldl
enter
mov
aaa
or
cmp
jl
and
fs
pop
cld
jmp
sbb
or
xchg
cmpb
mov
or
or
add
jne
xor
cmpsb
add
loop
add
std
and
dec
and
jno
mov
cmpsl
and
sbb
or
jns
push
test
gs
loopne
jl
mov
add
sub
test
mov
push
xchg
mov
push
daa
add
or
mov
and
cwtl
ret
or
daa
xchg
pop
or
or
pop
add
shlb
les
iret
pop
or
or
sub
subl
fisubl
mov
dec
cmp
and
pop
jmp
loope
je
xor
lea
cmpsb
jle
das
outsb
and
jne
lret
das
sub
cmp
dec
es
mov
je
lcall
test
and
or
clc
aam
outsb
lea
jmp
cmp
je
mov
cmp
add
jne
and
in
and
cmp
repnz
or
cmp
out
jo
scas
jae
into
and
jo
and
or
jg
sti
data16
adc
stos
mov
sub
and
es
scas
test
fidivrs
inc
jmp
insb
jne
lret
out
xchg
rolb
pop
mov
andl
mov
aam
jecxz
test
mov
ljmp
push
inc
mov
inc
inc
adc
sbb
movsb
jmp
inc
jne
bound
adc
sub
subb
je
xorb
inc
bound
hlt
jo
sub
loope
cmp
and
or
call
nop
clc
or
push
xchg
xor
out
sub
add
or
std
arpl
adc
and
and
xchg
sbb
fildl
insb
or
mov
mov
mov
mov
add
xorl
ljmp
test
in
adc
test
jg
mov
mov
add
add
fisubl
pop
pop
xor
popf
dec
pusha
and
sbb
xchg
dec
mov
and
icebp
jl
xchg
push
xchg
push
adc
daa
int
add
cs
cmp
iret
inc
pop
fs
ds
call
outsl
mov
cmpl
mov
loope
sbb
cmp
adc
adc
inc
repnz
sbb
xor
mov
test
push
enter
jle
popa
movsb
mov
dec
xchg
and
rclb
inc
and
notb
add
mov
xchg
adc
in
pop
push
push
push
mov
lds
lea
aas
stc
push
cmp
cmpl
pop
dec
mov
adc
pop
push
imul
mulb
add
sbb
cmp
imul
enter
es
sub
fnstcw
fstpt
dec
inc
adc
mov
sub
push
mov
or
xchg
dec
fmuls
add
push
sbb
nop
aad
push
orl
jecxz
in
lds
test
inc
or
push
add
test
out
lea
dec
jne
sbb
xchg
je
sub
dec
add
push
mov
cld
xchg
jmp
pop
or
mov
push
mov
pop
pop
mov
push
cmc
imul
arpl
inc
adc
insl
adc
and
mov
je
or
out
jb
xor
inc
movl
add
aam
mov
lret
decb
inc
push
push
push
lods
dec
inc
icebp
and
mov
pop
add
imul
mulb
add
push
mov
pop
je
adc
test
xor
cld
out
cld
and
mov
jmp
xchg
lret
orb
nop
sbb
dec
pop
add
fbld
imul
mov
inc
adcl
adc
adc
push
inc
les
mov
int
pop
lea
cmp
jb
cmp
jne
push
aad
mov
loop
or
jno
in
aam
and
cmp
mov
jmp
or
add
idivl
xor
inc
xor
ret
jg
sbb
jne
cmp
cmp
loope
or
mov
or
fisubs
inc
arpl
fisubrl
or
add
push
loope
pusha
adc
pop
rolb
xchg
repnz
sub
je
cmp
addl
lods
mov
push
mov
sub
nop
or
mov
inc
sbb
cmpsb
inc
and
mov
out
and
test
dec
jne
or
adc
push
xchg
push
sbbl
add
and
je
and
add
push
xor
and
je
adcb
add
andb
popa
mov
mov
dec
aad
dec
adc
cltd
pop
inc
std
mov
mov
shrb
rorb
pusha
es
and
mov
and
lea
or
xchg
and
stos
or
rolb
out
mov
inc
cmp
dec
dec
enter
sub
fidivl
sub
test
add
movsl
fsubrs
or
data16
lock
mov
rolb
test
jge
aam
jle
xchg
imul
sbbb
sub
xor
scas
push
xchg
mov
jbe
loopne
out
jne
cmp
jp
pop
xchg
out
in
mov
cltd
fwait
pop
insl
ret
push
jo
push
and
mulb
cmp
stc
jne
inc
sbb
add
mov
lods
cld
sub
jle
push
sub
mov
fmull
inc
ret
xor
xchg
add
inc
inc
mov
xor
int3
and
add
sub
int
xor
int3
mov
and
push
push
sbb
test
imul
push
sub
pusha
or
add
cmp
jo
sub
psubusw
mov
sarb
and
lock
jno
lock
addl
adc
cmc
lods
enter
das
inc
das
movsl
je
sub
icebp
iret
clc
sbb
test
and
popf
xchg
inc
insb
das
outsb
jbe
push
cmp
aam
dec
xchg
mov
push
push
loope
sbb
subl
adc
jl
movsl
hlt
fdivr
mov
xchg
push
sub
inc
lret
dec
cmp
mov
inc
fsubrs
in
sar
and
and
cmpsb
push
iret
lods
loopne
ja
jns
cmp
jo
adcb
and
dec
inc
pop
add
or
pop
or
test
or
mov
mov
iret
mov
int
mov
repnz
adc
and
mov
movsb
inc
sub
les
mov
pusha
and
cltd
sti
loopne
and
cmp
aas
gs
test
inc
cmp
push
and
lret
jno
mov
stc
rclb
add
mov
inc
subl
or
cmp
rcrb
lods
mov
mov
das
pop
sahf
pop
adc
lods
fcompl
push
xchg
add
mov
or
sub
pop
popf
test
adc
rclb
inc
clc
add
nop
mov
rolb
lds
ret
out
sbb
and
xchg
lret
sbb
adc
andw
xchg
cmp
int3
out
mov
ja
cmp
jb
lea
pusha
sahf
mov
sbb
movsb
lock
mov
mov
inc
jb
in
das
pop
test
mov
lret
add
xor
or
push
mov
test
fildl
xor
sub
rcrb
stc
sub
mov
hlt
push
cmpsb
lock
test
fcomps
jle
rolb
or
xor
cmp
mov
das
xchg
cmp
add
nop
jno
das
mov
loope
fwait
xchg
xchg
aad
pusha
dec
lds
push
or
lahf
add
add
mov
add
mov
push
and
lahf
imul
call
imul
mov
test
and
loope
push
mov
sub
pop
xor
rclb
and
sub
and
out
arpl
jo
pop
bound
dec
aam
daa
add
and
cmp
ficoms
and
adc
xor
sbb
jns
bound
pop
add
rorb
int3
sub
jne
fsubs
or
decl
xor
xor
pop
out
cmc
add
jle
loopne
push
loopne
or
stc
loopne
sbb
fisubrl
loopne
dec
jp
shr
in
or
ficompl
add
shlb
mov
lods
subl
mov
dec
mov
add
js
ss
push
mov
mov
push
cmp
movsb
adc
dec
sti
leave
add
rcrb
xor
sbb
jb
iret
popf
fadds
pop
jecxz
mov
add
xor
lock
adc
inc
fsubl
cmp
jne
cmc
pop
and
popa
add
or
cmpsl
inc
sahf
add
add
jbe
xor
sbb
mov
pop
rol
or
and
cs
testb
dec
sarl
loopne
push
test
xor
orb
leave
xor
or
cmpb
fcoml
das
fnstenv
inc
jmp
push
fimull
movsb
mov
sub
and
ret
sbb
and
test
mov
mov
pushl
fdivs
sub
ja
inc
add
test
je
fldl
andb
mov
out
push
add
lahf
repz
fildll
mov
inc
aaa
add
jle
push
add
fadd
sub
push
push
cmp
jne
push
jne
pop
insl
gs
gs
and
pop
js
cwtl
push
lea
scas
and
add
push
jmp
push
imul
or
pop
ss
push
mov
outsl
loopne
mov
mov
out
cmp
add
mov
mov
or
pop
or
ljmp
pop
cmp
jb
adc
aaa
adc
jmp
push
mov
cmpb
jne
orl
shufps
stos
sub
ret
pop
cmp
sub
or
inc
or
add
jbe
dec
sbb
adc
sbb
sbb
je
shrb
adc
lcall
jnp
xchg
cwtl
lock
repnz
in
sub
fbstp
cmp
sub
inc
lock
push
fcoms
lcall
pop
xchg
mov
sbb
push
push
push
xchg
loopne
and
pop
and
mov
add
xchg
ret
mov
fmul
add
aas
xchg
inc
lock
xchg
adc
movsbl
mov
jge
cmp
or
add
push
mov
xchg
nop/reserved
xor
sbb
pushf
movsb
add
cmpsb
rclb
dec
jne
insl
pushf
adc
inc
mov
jle
into
sub
mov
popf
or
mov
fistps
sub
mov
or
jns
outsb
jle
out
fwait
xlat
fsubrp
nop
cltd
rorb
adcb
mov
das
test
adcb
sti
dec
gs
sub
mov
xchg
into
cmp
jb
xor
mov
movsb
dec
mov
push
add
movsl
jmp
lock
or
notl
shll
mov
ror
ss
add
fldl2t
lret
xchg
lds
clc
add
ljmp
rorb
test
mov
push
mov
mov
cmp
mov
mov
loop
cwtl
push
push
cmp
xchg
sub
dec
fsubs
mov
adc
push
pushf
scas
pop
fs
jno
jmp
fidivl
or
sub
or
movsl
inc
out
jmp
sbbb
loopne
and
xchg
lahf
fistl
outsl
stos
jnp
stos
ds
data16
test
jno
xchg
fnstcw
mov
push
mov
sbb
cmp
or
ss
sbb
enter
cmp
cmp
movsb
sub
sub
pop
repnz
mov
xchg
ret
std
cmp
jbe
popa
cmp
lret
cmp
add
mov
cwtl
adc
or
subb
sub
inc
mov
xchg
push
inc
cmp
dec
das
les
push
push
roll
mov
test
nop
adc
pop
iret
aam
inc
jmp
jge
ds
jmp
mov
movsl
pop
or
hlt
inc
hlt
jb
clc
ja
sahf
lods
loopne
in
jnp
inc
ffreep
sub
je
bound
jo
add
pop
mov
ficoml
sub
pushl
cmp
lock
sub
into
clc
adc
shrb
push
xchg
add
insb
shlb
sbb
sub
je
imul
xchg
mov
adc
cmp
mov
push
cmp
cld
je
es
push
xchg
cmp
ficompl
push
xchg
and
fisttpl
xor
add
inc
es
imul
or
pop
mov
rolb
or
push
push
icebp
cmp
insb
stos
out
insb
leave
add
add
std
loope
addb
bound
mov
add
inc
pop
lods
inc
movsl
out
adc
or
add
pop
or
mov
jb
and
dec
je
mov
enter
and
add
shl
push
cmp
daa
sub
adc
dec
cmp
jno
arpl
sbb
aad
or
arpl
xor
pop
clc
ret
std
fistps
or
sbb
and
out
insb
jl
test
jmp
adcb
cmpsb
jbe
push
ljmp
or
jle
cmp
adc
mov
fisttps
rolb
push
inc
xlat
pusha
pop
cmpsb
pop
add
xchg
mov
cs
cli
adc
dec
xor
mov
shlb
in
adc
xchg
push
nop
jo
jb
mov
rolb
pusha
xchg
push
push
or
mov
xchg
fldl
popf
sub
xor
inc
idivb
xor
and
add
mov
rcrb
sub
data16
adc
das
mov
stc
cs
or
leave
xchg
fcompl
enter
or
rol
inc
adc
lea
les
repz
fmul
sub
and
sbb
xchg
or
ret
cmp
or
xor
cmp
arpl
arpl
push
movsl
push
rol
jb
push
xchg
mov
cmp
pop
je
add
adc
pinsrw
adc
push
and
test
push
inc
mov
inc
dec
sbb
jb
je
f2xm1
mov
pusha
inc
xchg
in
cld
arpl
pop
sbb
and
int3
pop
adc
pop
adc
add
push
pusha
sbb
adc
cmpps
and
jg
dec
call
test
or
dec
sub
call
adc
add
inc
mov
movl
inc
mov
in
push
dec
cmp
es
sbb
jl
stos
push
push
sbb
sti
scas
dec
mov
mov
jmp
xor
push
xor
sub
push
jp
test
fiadds
jge
or
sub
sub
in
cmp
sub
fnstenv
jne
inc
mov
add
mov
mov
mov
stc
and
xor
pop
les
fs
sbb
lret
cmp
pop
and
and
movsb
jb
mov
fcoms
jns
loop
mov
and
adc
dec
fcoml
pop
inc
xor
movb
in
dec
imul
les
pop
inc
ret
fists
jo
mov
mov
adc
or
push
cmpb
pop
sbb
xor
shlb
repz
jbe
jmp
mov
fidivs
push
push
mov
push
adc
cmp
xor
mov
dec
xchg
sub
cmpsl
and
push
mov
es
xor
jl
cmp
testb
fs
je
rol
out
rolb
push
and
or
roll
or
jmp
add
roll
dec
and
mov
or
push
jp
push
adc
xchg
mov
stos
push
push
je
sub
pop
push
dec
int3
shll
push
sub
mov
or
leave
pop
or
mov
push
sub
adc
fiaddl
and
mov
and
or
or
push
mov
pop
dec
insl
aam
mov
jne
xchg
enter
push
add
lock
xor
movl
pusha
pusha
dec
adc
jg
das
adc
mov
clc
out
adc
inc
adc
xor
pop
cmp
fmulp
movsl
rcll
ret
adcl
xchg
mov
out
jmp
push
xchg
sub
mov
push
push
adc
xlat
adc
pop
adcb
rorb
mov
or
jo
push
or
cs
out
adc
cli
sub
sbb
leave
push
test
dec
mov
inc
shlb
add
adc
or
gs
mov
pop
sarl
or
jo
add
add
adc
jl
mov
jne
adc
enter
jb
int3
dec
andl
mov
mov
sub
roll
and
ret
inc
cmp
out
lods
add
mov
and
jecxz
incl
movzwl
cmpb
and
in
adc
mov
cmp
ret
fistpl
aam
in
fdivs
sbb
xor
cmp
pusha
sbb
pop
jmp
xchg
xor
inc
xchg
es
push
das
jg,pn
pop
and
jne
fsubs
push
inc
outsb
push
mov
inc
pop
push
xchg
inc
inc
or
xor
mov
add
inc
jge
int3
sub
inc
out
push
sbb
sbb
cmpl
add
push
push
mov
je
divl
or
push
cmp
lcallw
or
loopne
mov
adc
pop
mov
jb
jmp
sbb
jne
add
cmp
addl
das
xorb
jecxz
hlt
movl
adc
shl
dec
inc
pop
and
test
add
insb
dec
ret
dec
xchg
icebp
addr16
xchg
test
shll
shll
cmpsb
add
or
sbb
xchg
adc
sub
lcall
loopne
add
out
outsl
push
je
ret
ds
push
push
vcvtps2dq
out
inc
mov
clc
sbb
clc
and
push
clc
xor
cmp
mov
cmpb
fcompl
push
fcompl
sbb
je
push
and
mov
lds
lds
ss
push
lahf
cmp
pop
mov
sub
imul
rorl
push
inc
or
push
sub
loopne
inc
rcrl
xchg
bound
scas
fndisi(8087
mov
cmpl
aad
inc
in
or
add
jne
push
icebp
fdivrl
and
sti
js
pop
push
loopne
outsb
das
pop
push
push
push
mov
push
imul
xor
xchg
add
ret
jbe
movsl
pop
mov
mov
lods
and
jb
divl
or
scas
das
pushf
mov
pusha
subl
rorb
xor
push
xchg
lea
es
mov
ficompl
lock
xchg
das
push
nop
lds
mov
ret
js
mov
loopne
xchg
imul
std
mov
sbb
push
iret
outsl
jp
pop
pop
mov
cmp
je
mov
push
sbb
push
or
adc
ljmp
test
cmp
add
adc
push
xor
std
pop
inc
cmp
pop
je
gs
shrb
movsb
push
je
jmp
xchg
dec
mov
sbb
push
ljmp
sub
add
sub
xor
je
pushf
push
or
inc
and
into
push
xor
xchg
xor
xor
mov
dec
test
inc
aaa
pushf
jmp
inc
mov
fcoms
imul
sbb
adc
mov
and
add
cmove
mov
rep
mov
cmpsl
pop
pop
pop
je
notb
cwtl
push
movb
or
xchg
inc
lock
mov
daa
cs
adc
cmp
or
ja
mov
push
mov
sub
rorl
aam
dec
loopne
rorb
neg
pop
cmp
inc
sub
cmpb
test
rcl
sbb
rolb
xchg
mov
cmp
jns
inc
add
test
jne
inc
adc
lret
sti
pop
nop
fnstsw
repz
xchg
cmpsl
rclb
adc
add
jge
or
adc
rorl
jle
cli
mov
fnclex
ret
rcll
outsl
or
aad
stos
loope
push
pop
mov
push
add
add
adc
jb
push
outsb
inc
adc
shrl
shll
jae
popf
push
or
and
shr
lods
scas
pop
mov
xchg
lock
push
fcompl
shld
sub
loopne
xlat
push
or
cli
lret
aaa
push
dec
or
iret
jbe
and
loopne
jo
cmp
and
popf
fldl2e
filds
jns
pop
imul
hlt
mov
mov
inc
shl
cmp
ja
lods
fwait
pop
inc
lret
dec
push
mov
lock
je
les
add
or
clc
sbb
or
cmp
push
cwtl
adc
popa
push
and
loop
ljmp
dec
cmp
add
adcl
rcll
jmp
and
lcall
or
mov
push
test
add
mov
jne
push
mov
js
sahf
cld
adc
sbb
mov
sbb
rclb
imul
xor
mov
pop
xor
and
or
xor
clc
mov
arpl
xlat
push
push
loopne
scas
les
pusha
mov
incb
fwait
sti
or
and
adc
xor
pusha
les
mov
dec
out
jb
sub
sub
lahf
pushf
jae
insl
jle
xchg
xor
cmp
jne
movsb
push
subl
jb
or
imul
pushf
mov
pop
cltd
adc
push
nop
add
xor
add
push
mov
popa
daa
dec
aam
jmp
cmp
mov
mov
loop
jno
add
aad
pusha
sti
jo
sarb
imull
sub
cmc
nop
pop
ja
mov
dec
orl
aad
jno
mov
add
clc
shlb
sbb
int
iret
arpl
nop
push
lds
fcom
mov
mov
jbe
fidivs
rcrb
jae
gs
sahf
dec
push
out
mov
jmp
rclb
jne
inc
and
test
pusha
or
fdivs
clc
inc
scas
inc
dec
adc
fidivs
sub
popa
xor
sbb
and
jne
sbb
aam
xchg
into
pop
or
add
inc
and
push
xchg
fisubrs
pusha
jbe
movsb
push
xchg
mov
inc
mov
test
cmc
lods
rolb
jle
inc
or
inc
movsb
icebp
inc
test
lods
mov
adc
lret
jb
xorb
push
test
shlb
mov
push
jl
adc
and
mov
or
mov
add
not
inc
and
jo
clc
fdivs
fsubp
xorb
adc
and
xor
add
aam
sub
pop
or
sub
mov
mov
lock
jle
mov
or
lret
push
nop
mov
push
and
lea
ja
cltd
jecxz
jp
inc
add
jo
mov
mov
insb
push
lea
loopne
push
out
pusha
clc
test
orb
xchg
mov
adc
ret
or
jno
cmpsb
in
dec
int3
add
mov
push
and
xor
test
or
fcoms
add
or
test
lods
cmpb
xor
mov
jge
sbb
pop
push
sub
inc
add
shrb
loopne
pop
std
jbe
sub
mov
ret
stos
movsl
jmp
mov
je
lea
xchg
ret
jnp
adc
mov
mov
mov
add
mov
or
call
rol
jl
je
sub
sbb
jns
jmp
imul
adc
cmpl
sub
mov
mov
mov
test
sub
xchg
adc
dec
jl
cmp
or
test
jbe
or
cld
sub
push
sub
das
nop
clc
jb
and
aaa
push
cmp
sub
dec
or
jmp
pop
std
sahf
lret
mov
pop
int3
ret
popl
push
rorb
enter
xchg
roll
inc
inc
mov
pop
sti
cld
mov
rorb
sbb
ret
cs
insl
cld
mov
jge
call
pop
pop
xchg
push
mov
adc
push
pusha
xor
jmp
pushf
inc
mov
jae
js
mov
dec
mov
std
insb
bound
jp
inc
js
mov
fs
popa
lock
mov
or
dec
adc
popf
cwtl
add
lret
and
fucomip
in
sgdtl
cld
popa
dec
or
mov
divb
jbe
out
push
outsl
jmp
repnz
adc
jge
and
shrl
adc
xchg
push
ds
lcall
sarl
dec
daa
imul
xor
sbb
shll
pop
mov
in
push
pusha
push
jl
adc
inc
popf
push
mov
pop
cli
push
mov
sahf
enter
mov
shrb
and
dec
rol
lods
insl
mov
push
aam
enter
xchg
xor
add
xor
int3
adc
mov
arpl
xchg
jle
mov
data16
xor
inc
and
sarl
jmp
pusha
ret
bnd
or
or
xor
adc
xor
and
push
push
rcl
mov
push
add
je
test
cs
daa
add
cld
push
adc
inc
fcmovu
adc
sarb
xchg
sarl
rclb
mov
imul
sub
sub
mov
add
add
inc
xchg
jecxz
data16
add
lret
outsb
add
sub
pop
or
pop
outsl
imul
jbe
xorl
sbb
mov
int
test
push
push
jle
mov
int3
and
push
adc
loop
adc
aad
inc
aam
adc
ret
inc
and
sub
inc
arpl
mov
shll
pop
xor
repz
loope
sbb
cmpsb
lods
call
into
cmpsb
xor
inc
xchg
sti
iret
fsubl
loop
call
mov
push
incl
int3
addb
pop
xchg
shl
ds
cmp
mov
add
and
fs
dec
cltd
lock
inc
sub
xor
add
dec
pop
mov
gs
or
jge
loopne
mov
nop
push
fdiv
add
xchg
testb
js
fnstsw
jnp
fdivrs
dec
sbb
cmpb
inc
jnp
jp
movb
jne
clc
sub
rol
or
or
mov
fistl
or
xor
sub
pop
insl
test
in
imul
add
adc
cmpl
cltd
inc
fmuls
lds
mov
mov
push
lods
mov
sbb
inc
mov
scas
cmp
push
or
es
filds
popf
adc
pop
mov
xchg
mov
and
mov
and
or
inc
and
test
call
cwtl
jae
push
cmpl
sbb
int
push
adc
add
xor
fldenv
shll
pop
add
sub
jne
jo
or
push
outsl
or
lret
or
cmp
notb
rep
mov
dec
ljmp
xor
ret
mov
testb
jge
or
test
sbbb
or
fnstcw
ss
int
mov
and
clc
jg
pop
dec
test
jg
pusha
jmp
movq
movaps
lret
insl
mov
shlb
jle
xor
pop
mov
ror
test
call
insb
fists
aam
jge
repz
or
jg
or
fnsave
adc
jnp
mov
push
fnstsw
mov
add
adc
push
and
mov
mov
push
fcomps
fnstsw
ret
mov
mov
mov
mov
jo
addps
fildll
sub
ret
cmp
mov
sbb
cmpsb
js
add
sub
cwtl
inc
xchg
sub
jo
cmp
popa
aaa
adc
add
pop
aas
imul
pop
and
fld
fldenv
adc
data16
mov
ret
cmp
jmp
stc
ja
mov
xor
jg
shlb
clc
cltd
movsb
adc
rorb
das
fcomp
adc
test
sub
push
sbb
push
add
call
shl
sub
and
push
out
mov
sub
push
dec
call
push
adc
adc
or
addr16
daa
je
sbb
out
testb
jle
mov
orl
icebp
pop
inc
push
adc
hlt
mov
ret
shr
shll
rol
cltd
mov
rolb
cwtl
jmp
mov
xchg
pop
clc
pop
ret
mov
cmp
or
jl
je
movzbl
add
sub
je
push
idiv
jle
sbb
repz
imul
push
pop
add
add
daa
add
cmp
iret
ficoms
push
cmpsl
dec
add
jno
je
lcall
flds
add
sbb
mov
enter
push
pop
mov
add
or
sahf
xchg
add
or
or
sbb
inc
sub
or
xchg
add
or
fisubs
or
or
or
mov
or
and
cwtl
push
push
adc
jb
nopl
notb
lret
push
adc
pop
adc
fwait
rcrb
inc
add
xor
adc
adc
and
in
add
adc
add
out
rclb
adc
adc
in
sbb
adc
adcl
in
jns
pop
pop
xor
repnz
sbb
lcall
sbb
call
mov
nop
sbbl
sbb
rep
sbb
jb
sbb
add
jns
into
jge
sbb
sahf
pusha
push
push
inc
ljmp
nop
out
pop
pop
jne
add
add
sub
cmp
mov
sub
jae
add
cmp
xchg
mov
and
adc
pop
sub
mov
cmp
je
lcall
cmp
ret
adc
aad
jns
add
cmp
mov
add
add
jbe
add
or
aaa
call
adc
dec
dec
cwtl
jmp
iret
enter
or
test
jmp
jmp
incb
ss
push
in
in
in
cltd
jb
mov
inc
in
sahf
and
enter
jge
mov
out
pop
lock
sbb
nop
addr16
icebp
pslld
repnz
out
std
repz
nop
repz
std
hlt
hlt
in
cmp
hlt
fwait
mov
cmc
cmc
inc
jg
ret
enter
pop
idivl
xchg
inc
enter
clc
clc
sbb
pusha
cmp
adc
inc
cmp
pop
enter
cli
cli
jb
jb
iret
sti
sbb
enter
stos
cld
cld
cld
je
add
cld
push
cmovs
in
ss
xor
sbb
xor
adc
ljmp
or
dec
rol
add
lahf
rorl
or
shrl
and
stos
pop
cmpsb
jne
es
fsubp
add
jecxz
std
sti
in
in
adc
inc
sbb
daa
inc
or
xchg
sti
out
out
lea
out
outsb
call
push
dec
sti
sub
rcrb
sbb
repnz
in
repnz
mov
cmp
js
out
xchg
add
dec
out
out
cltd
push
pop
leave
and
push
in
rcll
fsubs
dec
repz
sar
sbbl
leave
push
stc
fstpl
cmpsb
jb
stc
div
negl
loop
cmp
xor
add
xchg
cmp
stc
out
clc
rclb
cmp
outsl
in
or
inc
cld
in
mov
orl
jecxz
jge
cmp
and
xor
sub
mov
fldl
xchg
pop
icebp
mul
pop
rolb
scas
idivl
or
mov
out
out
and
insb
out
out
and
mull
negl
sti
imul
ljmp
negb
mov
imulb
inc
add
sbb
popa
imul
cmp
pop
pop
and
push
adc
add
sbb
rclb
jno
les
xchg
cmc
loop
repnz
pop
test
div
je
add
jo
and
cltd
sbb
loopne
hlt
stc
popa
cmp
mov
xlat
jb
jno
hlt
pop
pusha
leave
mov
jne
push
hlt
roll
push
data16
hlt
idivl
jo
pop
int3
jbe
sti
lahf
imul
add
imul
movsl
loope
loope
repz
mov
repz
or
pop
mov
test
xchg
repz
repz
jno
xchg
andl
or
sbb
jmp
jno
mov
xchg
repnz
pop
je
jo
sbb
dec
in
in
popf
dec
push
jno
and
add
add
pop
je
loope
sbb
mov
and
nop
outsb
divb
icebp
and
icebp
test
lcall
cmc
cmc
xchg
inc
fcompl
add
aam
and
jns
mov
ret
popf
lock
dec
push
stc
stc
cmc
mov
lock
lock
sbb
scas
jne
and
test
xor
test
ret
add
stos
dec
jne
adc
sub
cli
adc
stc
out
ret
jb
mov
push
add
and
enter
stos
add
and
dec
add
push
jnp
add
sub
lods
loopne
jne
or
fs
orb
add
sahf
and
cli
je
psrad
or
cmp
insb
mov
mov
mov
inc
add
xorl
adc
test
jl
int
jle
adcb
jns
fnstcw
and
xchg
cmpl
add
repz
push
jbe
out
mov
out
add
sbb
and
mov
add
fiaddl
outsb
repnz
xor
outsb
cmp
pop
mov
pop
and
cmovs
jne
push
pop
orl
test
inc
or
sub
jb
rep
jmp
mov
mov
mov
jb
push
add
xor
push
ss
sub
test
sahf
and
push
mov
dec
pop
in
fimull
add
add
shll
dec
push
push
push
cwtl
das
dec
add
movl
xchg
inc
add
add
ficomps
nop
mov
or
out
lock
call
sahf
loopne
ror
mov
mov
cmp
repz
call
cmp
repz
hlt
clc
clc
imulb
iret
cld
cld
lea
clc
fnstcw
add
add
sub
cmp
xor
mov
nop
inc
pop
andl
sti
and
mov
ret
push
sbb
lea
jl
cld
or
adc
std
cld
out
mov
xchg
into
mov
fsts
mov
push
inc
sub
fwait
sbb
mov
fiaddl
jl
mov
push
jbe
out
add
cmpsb
and
push
add
nop
dec
dec
addr16
inc
ret
add
ljmp
fs
push
je
das
ds
repz
cmp
repz
sbb
adc
repz
repz
or
or
add
inc
push
icebp
jns
rorb
push
fsubr
mov
loop
imul
push
inc
pusha
mov
daa
ja
inc
inc
pushf
into
out
and
mov
fsubrs
hlt
sub
xchg
lcall
rcrl
outsl
sub
sbb
sub
int
pop
icebp
imul
ljmp
test
cmc
cmc
pop
jae
popf
loopne
mov
ret
jb
movsl
ret
inc
popa
aam
inc
pop
or
add
sub
rep
xor
xor
sti
cmp
repnz
mov
mov
lock
sub
mov
daa
insb
pop
std
pusha
lods
xor
mov
or
dec
cmp
mov
sbb
add
outsb
xor
stc
dec
stos
and
aam
and
cmpb
jp
push
fldl
je
jg
inc
daa
loope
xor
movsl
xchg
or
mov
add
xchg
ficomps
es
mov
shrb
shl
xor
pop
push
jnp
sarl
movsb
mov
xchg
push
xorb
cmp
dec
or
mov
int3
es
pop
cmp
adc
add
push
test
cwtl
dec
and
shll
mov
stos
mov
les
loope
jne
push
push
add
add
sbb
and
add
cwtl
fadds
mov
fs
inc
and
neg
cmp
or
ja
mov
jmp
inc
sbb
mov
imul
aad
cmp
mov
jnp
or
sti
inc
sbb
xor
cmp
insb
sbb
jb
sarb
es
push
js
enter
and
lcall
mov
push
out
outsb
cli
cmp
sbb
or
mov
jne
loopne
jp
xor
adc
xchg
push
movsb
loopne
je
daa
add
mov
jne
jb
dec
rorb
or
cld
or
push
pop
pop
jmp
inc
jmp
mov
nop
into
outsb
pop
push
clc
or
jne
mov
fucom
inc
mov
pusha
cmp
mov
xor
in
daa
add
add
add
out
add
add
cmpsb
dec
mov
fwait
movsb
dec
or
sbb
lods
in
cs
adc
xlat
pop
dec
lcall
push
and
dec
in
add
aas
push
js
push
mov
call
add
mov
popa
dec
adc
adc
dec
sbb
sti
cmp
jne
sub
add
cmpsb
mov
xor
rorb
fstpl
cmp
loopne
rolb
xchg
fisubrl
cmp
mov
push
add
add
ja
mov
dec
push
add
jl
jmp
push
aaa
add
mov
inc
js
add
xchg
test
push
xchg
arpl
pop
mov
cmp
xor
sub
inc
lcall
fidivrl
loopne
mov
push
add
xchg
loope
sbb
ret
icebp
pusha
push
jne
xchg
pop
les
loope
xchg
adc
add
add
jns
push
jo
pop
mov
rol
mov
inc
cmp
or
xor
out
push
cmp
test
sti
mov
lcall
or
out
jg
or
test
mov
or
xlat
test
xor
add
mov
pop
xorl
pushf
or
je
sub
push
inc
sbb
nop
out
dec
push
add
or
testb
add
jge
mov
cwtl
pop
cmp
negb
fdivrl
mov
fisubl
pop
shll
test
xchg
pop
loope
jo
mov
test
push
out
lds
xchg
xor
push
mov
fmull
dec
jmp
adc
out
sub
push
push
ret
cltd
pop
adc
mov
aam
cmp
or
dec
and
jecxz
push
les
in
and
mov
inc
loope
popf
mov
enter
in
push
mov
mov
push
cmpsb
mov
adc
dec
adc
in
addl
mov
loopne
in
add
push
and
add
insl
jecxz
mulb
imul
jecxz
push
ja
or
lcall
pop
inc
jmp
ja
cltd
jmp
shl
jle
incb
inc
cwtl
pop
dec
clc
int
shufps
lea
not
adc
sbb
outsl
mov
add
or
mov
inc
loope,pt
sbb
insb
jbe
or
push
cld
jb
push
cld
or
into
jmp
mov
dec
mov
mov
dec
dec
or
stc
jb
push
lahf
or
in
or
add
sahf
cmp
jmp
push
and
pop
mov
pusha
push
push
test
pop
gs
movsl
adc
xor
xchg
jns
sti
push
xor
mov
jbe
or
sbb
add
cld
test
aad
clc
mov
xor
add
mov
adc
movb
ja
dec
mov
shl
lret
pop
or
push
push
pop
fsubrl
push
inc
add
mov
mov
xor
dec
xor
rol
and
and
rcll
mov
fimuls
adc
sub
push
lods
add
push
or
mov
inc
decl
inc
cli
dec
cmp
mov
mov
dec
mov
and
sbb
xchg
and
inc
dec
imul
nop
ja
sub
ret
add
add
shl
out
aad
add
dec
and
pushl
movsb
and
mov
mov
mov
rolb
adc
mov
push
inc
pop
push
dec
data16
test
mov
shr
or
dec
icebp
xchg
add
int
fmul
enter
in
adc
std
inc
insl
push
cld
test
cmp
out
arpl
push
insb
mov
or
dec
add
les
rclb
adc
dec
jo
or
mov
fdivrs
cmp
mov
or
jg
les
inc
jo
cmpsl
jne
lcall
sbb
or
pop
mov
xor
xorl
das
sbbb
fbld
jo
mov
pop
sub
jo
inc
inc
push
push
adc
cmp
jp
or
cmp
jb
or
ja
incb
adc
and
sub
inc
inc
inc
inc
mov
mov
mov
jmp
jb
pop
negb
shr
xor
pop
inc
push
inc
and
cmpsb
and
gs
dec
mov
add
and
dec
subb
lods
dec
dec
clc
loope
jne
and
lock
clc
test
pop
jl
je
add
push
push
int
sub
jnp
roll
into
sbb
je
rolb
sub
jmp
push
jne
dec
inc
pop
add
subb
lret
test
adc
enter
adc
icebp
cmp
inc
push
or
inc
rcll
push
rol
adc
push
dec
adc
in
lcall
add
pushf
lea
adc
clc
hlt
xor
mov
adc
hlt
fldl
or
jl
or
jo
push
test
xchg
rorb
test
inc
insl
add
push
movzbl
pop
loope
fcomps
xchg
push
xor
push
xor
rolb
pop
inc
jmp
cmp
cmp
pushf
dec
ljmp
add
int3
loop
nop
cmpsl
lea
test
scas
push
inc
adc
aaa
sahf
sub
jecxz
mov
rclb
or
pop
and
xor
pop
ljmp
scas
and
adc
insb
adc
pop
jne
dec
adc
add
add
lds
inc
nop
push
dec
lret
jmp
stos
sbb
or
imulb
lret
sub
jmp
movsw
mov
lcall
je
mov
sub
cmp
sub
jmp
loop
les
mov
xor
or
sahf
sbb
adc
add
and
dec
loopne
jecxz
cmpsb
sbb
add
pop
xor
scas
pop
inc
fstps
sub
test
mov
jne
dec
bound
add
adc
or
lret
or
inc
jnp
and
cmp
mov
sub
daa
pop
add
in
mov
and
imul
add
insl
ja
fimull
mov
imull
test
jge
jmp
inc
pop
sub
lds
add
or
inc
rol
cmp
add
xchg
push
cmp
daa
out
lods
push
in
and
sbb
mov
adc
mov
xor
or
pop
fwait
orb
hlt
xor
mov
sub
call
jle
repnz
movsl
aaa
enter
fdivrs
mov
jne
push
mov
push
sahf
ds
rcrl
fs
dec
or
stc
dec
jbe
out
push
mov
jns
jle
stos
in
incl
mov
cmp
pop
pusha
lock
cmp
push
jmp
ljmp
push
sub
movsb
add
sub
cmc
xchg
std
adc
int3
cmp
or
cs
nop
lret
in
int3
mov
movl
cmpsl
push
inc
cmp
lret
dec
dec
add
clc
hlt
push
loop
add
mov
mov
inc
dec
ret
aaa
fisttpll
cmp
or
jne
test
inc
out
out
jb
add
xchg
lretw
sbb
pop
into
dec
pusha
jo
add
aaa
push
cmp
or
sbb
inc
xchg
dec
push
sub
adc
icebp
pop
fs
adc
pop
cmovo
adc
cmp
jo
arpl
sub
xchg
out
push
ja
add
imul
and
xor
adc
leave
add
std
mov
in
or
and
or
out
adc
add
imul
add
bound
insl
std
mov
push
call
cmp
mov
push
adc
movsb
cmp
push
scas
mov
scas
std
mov
aad
jne
lret
adc
mov
ss
mov
js
jae
mov
inc
push
jmp
sbb
push
cltd
in
outsb
out
jns
sbb
mov
or
pop
call
pop
push
lcall
dec
lahf
cwtl
cmpsl
rclb
pop
adc
stos
push
xchg
jne
call
jb
lea
xchg
dec
add
xor
and
cs
or
xchg
push
cmp
jne
mov
push
mov
std
jne
es
jne
js
lcall
cmp
ret
daa
jmp
adc
iret
repz
jmp
std
std
jmp
cld
cld
push
sub
jmp
fimuls
inc
xor
ficoms
loop
adc
shr
cmp
js
push
jne
mov
shrb
lods
pop
test
mov
push
sub
and
push
push
mov
cld
clc
arpl
cmp
sub
test
mulb
xor
pop
cli
testb
pop
cmp
mov
xchg
adc
cmp
inc
lea
mov
lret
sub
inc
cmp
jne
push
or
cmpsb
pop
or
add
daa
push
int
xchg
mov
out
adc
cmp
lods
lahf
cmp
ret
ror
mov
cmp
scas
ss
jb
mov
pop
xchg
and
ret
sub
pop
add
jmp
iret
in
push
or
js
in
hlt
xchg
push
and
arpl
push
push
fisubrs
jns
lods
dec
xor
and
push
pop
add
pop
adc
pop
imul
xchg
add
push
sbb
or
inc
pop
push
dec
or
add
cmp
jl
imul
insb
movb
add
pushf
add
push
loop
mov
in
sti
xchg
pushf
xchg
dec
pop
addb
arpl
inc
mov
cmc
jnp
or
data16
add
jle
push
push
push
mov
rorl
hlt
add
inc
sbb
es
push
pop
xchg
adc
or
adc
roll
or
push
cmpb
leave
jmp
lahf
sub
push
adc
jne
loopne
sbb
insb
inc
mov
sub
sub
push
scas
outsb
dec
mov
push
in
and
mov
dec
xor
mov
cmpsl
rorl
pop
int
mov
pop
popl
mov
dec
xchg
dec
xor
xchg
push
and
pop
and
mov
or
cld
jae
push
shlb
pop
jmp
mov
mov
add
add
pop
mov
je
jne
outsl
insl
inc
or
jg
add
mov
sub
jg
xchg
mov
loope
mov
call
push
push
mov
rorl
push
pop
jmp
movsl
lahf
push
cmp
sub
cltd
cmp
xchg
fisubl
inc
adc
jb
jno
sbbb
push
push
add
xchg
adc
add
or
loopne
subl
or
pop
bound
xchg
mov
repnz
lds
shlb
xchg
jbe
lock
inc
pop
adc
stos
jmp
test
mov
rorb
orl
icebp
std
shrb
inc
inc
cmp
jb
ss
jg
pop
js
add
and
sub
in
push
int
test
ja
or
and
and
aas
ret
add
sbb
mov
pop
movsl
pop
test
mov
bound
js
xchg
push
arpl
xchg
popa
lock
dec
add
sub
adcl
adc
xchg
sub
xchg
call
icebp
cmp
sbb
mov
cwtl
inc
push
int
popl
cmpsl
xchg
sbbl
imul
loopne
hlt
or
ret
daa
xor
cmpsb
mov
and
push
addr16
mov
and
mov
das
xor
mov
loop
call
std
movb
pop
jmp
insl
jae
dec
xor
sub
std
add
jge
mov
add
push
icebp
xchg
mov
je
push
push
xchg
dec
js
hlt
jne
or
mov
and
int
push
or
sub
adc
es
cltd
inc
mov
and
xchg
cli
loop
call
insb
mov
add
sti
push
lea
push
add
mov
or
jl
or
scas
cmp
and
pop
sub
cmc
and
adcb
jb
dec
ficoml
jne
aam
pusha
add
rcll
push
sbb
ret
cmp
mov
inc
jl
out
and
or
add
rorl
loopne
aad
xor
push
jecxz
add
mov
mov
push
das
or
les
das
xor
js
xor
cmp
add
jmp
push
daa
pop
ja
aam
pop
testl
pop
cwtl
push
push
and
lock
push
inc
pop
jne
adc
xchg
movsl
add
add
notb
aam
dec
push
or
push
jns
aam
xchg
test
lods
add
dec
scas
push
lea
loop
push
xor
add
adc
ss
add
test
mov
mov
pop
inc
add
add
push
sbb
lahf
hlt
mov
sub
or
jl
jne
testb
adc
enter
bound
add
sub
rclb
aam
push
add
aam
pusha
dec
mov
mov
sub
fst
sbb
mov
leave
and
mov
inc
xor
xchg
mov
cmp
add
lret
lea
lea
mov
pushf
mov
or
mov
test
aam
sti
pushl
add
cmp
jbe
push
pop
mov
cmp
jne
push
and
jl
sbb
dec
add
shll
pop
xor
or
add
sbb
ror
mov
les
push
pop
add
add
push
dec
pop
adc
add
pop
and
push
or
pop
and
jmp
clc
and
pop
xor
xor
and
jle
mulb
sar
xor
imul
fisubrs
mov
imul
andb
push
pop
repnz
shll
jno
jno
cmp
mov
nop
shr
not
and
xchg
rcrb
sub
jmp
ffreep
negl
lea
das
mov
xor
lahf
jle
or
add
push
or
xchg
mov
or
dec
mov
jl
orb
int3
inc
add
pop
dec
or
adc
loope
ss
mov
mov
inc
mov
test
js
xchg
cmpsl
push
or
pop
xchg
add
or
jmp
dec
adc
push
mov
sbb
sbb
or
push
push
inc
xor
movsb
mov
repz
xor
adc
mov
add
xor
loopne
ss
scas
dec
or
jp
mov
cmp
gs
iret
xchg
add
push
or
mov
mov
jne
add
decb
adc
mov
cmp
cmpl
stos
inc
xor
rcll
mov
and
adcl
fimull
fcomp
sub
js
dec
dec
rolb
rorb
mov
testl
or
jbe
jmp
das
mov
movsl
repz
into
and
lock
popf
xor
push
outsl
push
outsl
ljmp
repz
fcoml
les
or
push
or
je
mov
stos
ss
aas
aam
push
fs
jmp
subl
mov
sbbb
lds
or
adcb
push
test
push
fisttps
cld
sbb
rolb
mov
imul
lret
cli
inc
clc
pop
pop
jo
lcall
hlt
add
sti
mov
out
sahf
adc
repnz
sub
dec
adc
fwait
testb
loop
cli
int3
cld
ja
ret
shr
lea
loopne
inc
loopne
clc
incl
nop
push
jge
sub
adc
out
pop
out
mov
lock
call
dec
jne
jge
jg
jo
clc
add
inc
sbb
shr
and
adc
dec
adc
fs
mov
loop
push
mov
mov
cli
clc
pop
sub
test
push
mov
jne
or
roll
and
not
and
les
inc
lcall
mov
lcall
imul
add
jle
cmp
mov
test
push
mov
push
xchg
inc
clc
pop
out
neg
cmp
jg
add
cmp
imul
test
push
xchg
pop
push
mov
popf
fcoml
pop
inc
cmp
xbegin
mov
test
in
add
cmp
out
dec
or
adc
popa
pop
dec
mov
into
add
or
movsl
rcll
std
incl
cmp
mov
cld
aad
cmp
fmull
lcall
jle
sbbb
lcall
adc
lcall
outsl
adc
jmp
aaa
ja
and
dec
test
adc
push
adc
inc
insb
sub
addl
add
out
and
jae
mov
mov
pop
jnp
cmp
inc
dec
insb
pop
xor
xor
mov
push
sar
dec
cmp
xor
add
outsb
xor
xor
ret
fwait
mov
cld
xor
cmp
cmpl
je
filds
cltd
dec
push
call
ja
inc
pop
pop
mov
adc
adc
mov
adc
dec
lea
mov
xchg
mov
and
stos
lods
push
paddd
mov
jns
bswap
mov
dec
cmp
rdmsr
cmp
xchg
arpl
lods
movsb
dec
cmp
sbb
push
out
adc
inc
mov
lock
test
and
mov
xchg
or
push
cmp
add
or
out
andl
jmp
call
add
cmpsb
inc
or
mov
xorb
and
or
inc
mov
adc
fmul
jb
or
jg
sbb
addb
jne
repnz
ja
jnp
add
es
lock
add
mov
or
arpl
adc
stos
lcall
xchg
mov
xchg
sbb
mov
mov
push
faddp
mov
or
jl
and
iret
jne
push
insl
dec
mov
mov
test
mov
add
out
out
cltd
pop
mov
and
xchg
mov
jns
jle
push
pop
leavew
inc
test
inc
push
inc
push
mov
pushf
mov
sub
icebp
cmp
jle
clc
test
inc
outsb
mov
lea
dec
pop
cmp
push
iret
dec
cmp
mov
out
pop
mov
decb
xchg
adcb
mov
out
fldl2t
or
sub
dec
mov
pop
icebp
out
xor
dec
bound
dec
push
and
jne
shll
and
jp
imul
mov
mov
js
or
pop
das
or
jbe
hlt
jge
rol
add
rorl
out
or
inc
cld
or
adc
pop
pop
inc
or
mov
mov
aad
or
mov
mov
in
and
dec
adc
add
test
mov
and
decb
mov
mov
and
jo
cmp
xchg
or
add
and
add
mov
xor
and
aas
dec
enter
xor
sbb
sub
jo
roll
movsb
js
add
andb
adc
cmp
fld
xor
xchg
loop
loopne
push
lock
int3
fadds
mov
push
addr16
pop
int3
dec
popa
movsl
shlb
lret
nop
and
adc
mov
test
jle,pt
add
jae
or
push
mov
mov
and
mov
cmp
xchg
cli
movsb
jle
sbb
pop
cmp
jl
hlt
ss
aad
mov
loop
mov
insb
jmp
or
inc
fcmovb
add
mov
adc
imul
mov
sti
add
xorl
push
mov
mov
pop
jbe
sbb
out
cmp
push
mov
pop
and
pop
adc
sbb
or
js
pusha
fcoms
mov
in
pop
nop
clc
pushl
dec
jp
loop
and
into
mov
jae
dec
jmp
xchg
adc
nop
mov
out
je
cmp
test
fdiv
mov
add
mov
adc
pop
scas
add
pop
test
ret
cmc
lock
xor
pop
jne
push
jecxz
adc
sub
int3
movsl
mov
fsubl
adc
sbb
pop
and
popa
push
daa
push
and
cmc
jg
mov
test
cmp
mov
add
test
mov
fcoml
cmp
sar
movsb
fisubrs
mov
inc
jns
mov
fs
dec
bnd
pop
std
sub
movsb
fnstsw
dec
scas
mov
call
cwtl
adc
mov
data16
jnp
or
xchg
pop
jo
inc
insb
gs
cmc
fs
popl
test
pushf
lds
add
cld
push
stos
push
adc
aam
or
fstl
out
aaa
rcll
insb
pop
addb
and
jbe
pop
xor
inc
rorb
cwtl
mov
mov
mov
jbe
push
xchg
add
lea
lea
pop
and
pop
jmp
mov
lahf
icebp
icebp
sub
aas
testb
das
inc
and
or
mov
push
and
adc
repz
push
ret
popf
nop
dec
lcall
inc
inc
les
lea
loopne
adc
and
dec
aam
enter
dec
out
lret
daa
in
test
sbb
fcom
cmp
imul
loope
jbe
pop
jle
jmp
push
push
mov
mov
lock
outsl
and
adc
jl
sbb
push
push
cmp
push
xor
inc
add
sbb
adc
or
repnz
loopne
rolb
jl
xchg
or
rcrl
and
ret
cmp
inc
test
xchg
push
popa
cmp
fbld
jno
and
inc
sbb
xor
push
ret
pusha
and
or
mov
push
pop
in
bound
add
cld
add
sbb
xor
mov
insb
and
nop
mov
rcll
sub
sbb
push
push
push
push
je
pusha
or
aas
push
les
scas
inc
iret
xorl
jnp
ljmp
cs
lea
das
mov
mov
gs
sbb
mov
out
leave
sub
cld
popf
or
cmp
mov
rolb
insb
or
add
push
insl
clc
leave
pop
jp
test
pop
mov
and
xchg
insb
xor
and
ds
xchg
sbb
mov
sbb
js
cmc
jl
lock
adc
jge
loope
gs
push
push
pop
rclb
pop
mov
fiadds
test
and
dec
inc
orl
clc
mov
popf
rcl
in
cs
sbb
sbb
sub
test
lret
adc
push
movsb
movsl
fstpt
sub
inc
push
in
cmp
arpl
pmulhuw
cmp
pop
ret
push
cltd
jle
cmpsb
sbb
pop
jno
call
inc
or
jbe
inc
mov
les
div
pop
cmp
sarb
js
mov
jmp
inc
push
dec
cmp
mov
pop
inc
pop
or
pusha
sbb
or
or
scas
lods
mov
jmp
pop
in
inc
outsl
mov
push
shl
lret
jo
cmp
addr16
or
push
adc
jo
and
mov
test
ja
sub
sti
jo
pop
ja
dec
cmpsl
ret
mov
mov
add
dec
mov
addr16
push
inc
mov
pop
jo
je
int3
inc
nop
jo
fsts
pop
mov
inc
and
mov
roll
and
xor
sub
pop
pop
in
and
add
subb
sbb
or
mov
addl
add
push
gs
inc
jbe
adc
icebp
cmp
idivl
jmp
inc
inc
inc
mov
fwait
pop
clc
mov
mov
inc
hlt
adc
mov
adc
dec
cld
pop
psadbw
sbb
push
scas
rolb
xchg
mov
mov
cmp
push
or
je
jmp
cmp
packssdw
xor
mov
dec
cmpb
je
mov
call
sbb
sbb
add
or
inc
mov
jne
insb
jo
arpl
fldz
stc
fcompl
mov
out
leave
adcb
int3
sub
xlat
in
je
xor
notl
jns,pn
fisttpll
jmp
xor
adc
sub
xor
or
popf
lods
out
int
ss
mov
or
xor
jp
lods
call
pop
sbb
or
adc
fcoms
sub
mov
xchg
pop
xlat
mov
ss
cmp
sti
mov
jmp
jbe
add
jle
sub
or
inc
loope
push
pop
push
lcall
xor
inc
ret
sub
sub
mov
shrl
stos
adc
sub
movb
lea
push
sub
or
adc
push
pop
filds
ret
insb
adc
inc
sbb
dec
sub
lock
icebp
mov
sub
and
sbb
xor
insl
imul
inc
stos
into
movb
test
or
inc
mov
jns
xchg
add
inc
cwtl
and
cltd
push
in
xchg
test
xchg
ret
push
or
dec
or
sub
adc
loopne
in
cmpb
ljmp
mov
fstp
sub
orl
xchg
cmovo
or
pop
sbb
mov
or
mov
mov
or
xor
inc
xchg
shr
cmp
loope
push
xchg
scas
dec
xchg
adc
jge
scas
ret
insb
sub
adc
lahf
adc
inc
push
cs
xor
push
bound
adc
lock
je
sbb
jmp
sub
ret
jle
scas
jg
or
add
mov
and
scas
in
push
in
out
cwtl
jae
scas
fcoml
push
loopne
sub
decl
cwtl
clc
lret
adc
xchg
or
outsb
or
fstpl
inc
sbb
mov
shlb
fucomp
in
mov
or
pop
rcr
lea
xchg
adc
mov
roll
or
dec
shlb
xchg
mov
xchg
mov
push
and
cmp
push
push
jecxz
jne
dec
or
or
and
lea
mov
jbe
out
arpl
inc
or
jns
mov
cmpb
jbe
push
inc
and
cmp
and
add
jnp
sbb
mov
je
jg
dec
dec
inc
sub
leave
and
add
xor
into
mov
movb
xor
ljmp
int3
mov
dec
faddl
sub
outsb
dec
and
and
idivl
rorb
shll
cmp
xor
dec
and
add
add
or
out
jmp
xor
inc
cmp
add
xor
mov
test
jg
ja
cmp
sbb
mov
dec
mov
push
mov
inc
es
push
add
push
movswl
les
lock
outsb
and
add
adc
push
fwait
cmp
add
out
insl
cld
add
push
mov
lods
enter
sub
data16
rcll
test
push
cmpsl
cwtl
or
cld
incl
or
lret
jge
cli
add
dec
jmp
xor
xchg
sub
push
scas
adc
sub
inc
mov
adc
xor
inc
adc
and
test
ret
mov
sbb
xor
jo
or
fsubl
pop
and
sub
pop
sbb
lock
jg
jb
push
sub
or
ja
cmp
fidivrl
rorl
inc
std
cmp
roll
jb
push
bound
dec
add
incb
sbb
lock
sarb
add
mov
and
inc
inc
dec
sahf
sub
jb
or
pushf
cltd
ret
nop
add
mov
bound
sti
sub
mov
xchg
adc
jae
stc
sub
push
add
sub
jae
mov
sub
jbe
lds
push
mov
xlat
add
fadd
data16
inc
or
or
mov
dec
inc
sub
mov
dec
and
push
xorb
repnz
sub
or
cmp
jge
mov
push
mov
xchg
insb
jo
loop
rclb
sub
lods
xchg
xor
and
sbb
cltd
aam
into
xor
push
addl
addb
mov
cmp
jo
leave
enter
jo
push
shlb
and
cmp
inc
and
mov
jbe
jbe
cmp
inc
adc
rcrb
lea
pushf
leave
xchg
sub
enter
fldl
rcll
push
jmp
insl
cmp
pushf
fld
inc
xor
jl
add
mov
jge
inc
or
adcl
das
shrb
mov
mov
scas
mov
sbb
rolb
ds
gs
or
pop
cmp
fsubs
loop
jb
fwait
fwait
xchg
mov
std
inc
popa
je
inc
je
jnp
and
imul
xor
lods
or
stc
mov
jmp
cmp
sub
lds
insb
and
mov
inc
sbb
mov
cmp
xchg
movl
inc
add
xchg
jmp
or
pop
fucomp
in
jno
das
cmpsb
push
pop
or
add
jle
jbe
call
call
dec
add
push
pop
clc
fstps
add
sbb
push
adcb
jb
inc
mov
pop
repnz
pop
stos
pushf
inc
pop
leave
fmul
aam
movsl
out
push
sahf
push
pop
call
leave
push
leave
or
fidivrs
mov
hlt
jns
jnp
popa
push
mov
add
mov
push
call
push
repnz
pusha
lret
adc
jge
cmpsl
sbb
lret
je
cwtl
push
ror
cmp
pop
pusha
lret
ja
test
cmp
repz
xor
inc
sub
pop
cli
push
lret
pop
movsl
iret
jnp
inc
jo
js
mov
pop
push
xor
rclb
in
filds
lea
imul
jae
xor
jo
adcl
pusha
scas
hlt
jae
add
lcall
mov
and
adc
enter
or
movb
outsb
and
or
or
push
out
adc
xorb
mov
push
pop
push
aas
adc
push
les
mov
sbb
dec
add
xor
sti
mov
je
xchg
cli
adc
bnd
lea
lea
mov
es
mov
xor
push
test
mov
push
sbb
jmp
fs
std
adc
add
dec
ds
std
dec
inc
add
and
add
call
push
sub
mov
filds
pop
inc
mov
orl
xor
lcall
sbb
push
inc
sub
or
or
adc
cmp
das
ljmp
ljmp
mov
repz
xor
out
or
inc
testl
mov
push
push
jns
or
cmpw
je
sarb
roll
mov
mov
js
or
xchg
cmp
pop
push
pop
nop
dec
xor
fimuls
jno
jno
lods
dec
and
sbb
rorb
or
or
insb
sti
jp
jp
or
cld
shrb
jb
shll
push
sub
xor
sbb
daa
inc
jb
rorb
nop
shlb
lods
xor
jmp
xor
or
inc
xchg
aaa
and
mov
sbb
push
mov
mov
test
popf
or
add
adc
sub
xchg
sub
or
and
push
aas
sub
xchg
icebp
dec
lea
test
mov
addl
loop
adc
push
jg
adc
add
pop
lods
or
repnz
aam
inc
jnp
sbb
jecxz
das
or
aaa
add
cmp
aam
adc
push
sub
cmp
xor
dec
lret
jno
sti
pop
and
sbb
movsb
and
or
adc
or
mov
add
lret
mov
jae
jp
mov
rorb
add
add
and
mov
incl
in
push
or
inc
push
rorb
adc
mov
or
int3
bndldx
jmp
jo
gs
adc
and
jmp
sarb
sahf
mov
push
scas
popa
pop
lds
add
imulb
cmp
xor
cmp
je
push
dec
jmp
and
hlt
push
sarb
xchg
jnp
inc
mov
xchg
dec
xor
xchg
or
cwtl
lcall
das
and
mov
lock
and
adc
cmpsb
out
pop
push
subb
les
pop
push
push
mov
sub
mov
or
dec
addb
mov
add
inc
cmc
or
add
and
add
rcr
in
jno
addb
enter
and
xor
popa
sbb
stos
jo
fmuls
scas
adc
js
pop
outsb
push
les
incb
sbb
aaa
add
adc
cs
jg
jmp
imul
fs
pop
jl
lret
shlb
fwait
add
xchg
sbb
dec
or
sbb
iret
adc
dec
loopne
pop
inc
add
push
mov
push
sbb
adc
push
pusha
in
int3
dec
stos
lret
xchg
push
ljmp
jp,pt
add
xchg
xchg
sbb
mov
mov
aaa
mov
loope
fdivs
and
ljmp
ds
mov
push
rclb
fwait
sub
ffree
xchg
andnps
mov
subl
in
add
pop
adc
cmp
ret
inc
or
sbb
je
fimull
xor
jle
inc
jg
sub
dec
enter
testb
mov
in
aam
cmp
add
cmp
shrl
mov
stc
scas
rcrb
pop
mov
rcl
idivb
pushf
ds
cmpl
pop
jge
rcll
pop
cmp
sub
int
int3
push
pop
xor
adc
sbb
in
adc
and
rcr
cmp
lods
inc
aaa
xor
xchg
in
stos
ucomiss
mov
test
cmp
adc
push
dec
cmp
or
sub
and
mov
mov
enter
sub
sub
and
test
ret
dec
and
pop
dec
out
sbb
sbb
and
repz
insb
or
mov
fiaddl
jo
test
je
add
pop
inc
sbb
mov
cmpsb
jg
add
push
lcall
jmp
add
push
jmp
cmp
ja
inc
out
mov
xchg
je
mov
sbb
cmp
cmp
js
mov
iret
sahf
testb
arpl
shr
data16
pop
insb
pusha
push
repz
jo
cld
stos
pop
test
mov
sarb
in
in
push
xchg
pop
adc
push
iret
push
xchg
mov
adcb
je
dec
jne
push
mov
jno
std
jne
fcoms
jmp
xor
and
xor
jmp
adc
loopne
insb
xor
xor
cmp
lods
adc
add
paddusw
and
push
jmp
and
shrb
inc
cs
pop
dec
or
add
mov
or
sbb
inc
in
jns
pop
das
pop
dec
cld
sub
aad
pop
mov
shrl
pop
jmp
and
mov
rclb
les
sbb
inc
adc
cmp
inc
add
cltd
ss
movsl
and
push
xor
pusha
adc
jae
push
cmp
jl
sahf
jg
mov
adc
push
dec
hlt
out
std
dec
movsb
xchg
push
pop
lock
jne
lods
add
imul
jo
pop
ror
adc
pop
jns
jb
stos
sub
add
xorb
and
enter
cmpsb
cld
pop
push
fisttps
dec
test
xchg
movsb
jl
enter
pop
mov
mov
ret
pop
add
mov
dec
out
out
adc
lret
sti
or
add
adc
or
fdivl
mov
leave
lret
mov
jne
cmp
mov
lods
jle
sbb
frstor
fcmovnu
vpand
or
push
aad
add
add
adc
das
mov
add
xchg
xor
jle
cmp
jle
int3
xchg
dec
std
je
mov
sub
pop
or
lret
jecxz
test
jbe
xor
jno
add
aam
or
rcr
dec
jmp
jp
aam
push
or
sub
jg
add
test
je
add
or
jecxz
jbe
jp
daa
clc
insl
mov
jae
dec
adcl
cmp
popl
adc
jg
hlt
mov
mov
add
rorl
movl
jle
sbb
pop
jbe
add
pop
sub
sbb
cmp
add
inc
jg
adc
ja
fld1
orl
sub
mov
into
pop
hlt
popa
jne
repz
in
mov
out
and
out
nop
mov
je
scas
insl
push
aas
clc
sub
addr16
and
sbbb
jbe
xor
cmp
adc
cltd
jne
pusha
push
loope
add
and
scas
xchg
arpl
inc
ljmp
call
fadds
jo
adcl
es
andb
sbb
cmpsl
clc
push
inc
sub
nop
inc
bound
adc
lods
lcall
mov
mov
sbb
adcb
icebp
mov
mov
je
cmp
adc
push
jecxz
push
push
or
inc
and
mov
testb
fcompl
jbe
or
add
push
jmp
inc
cwtl
and
pushl
cmp
cmpl
sub
data16
cld
jbe
mov
push
push
push
inc
ficoms
ss
mov
inc
and
pop
das
xor
rolb
mov
sub
stc
xorb
cmp
pop
pop
clc
push
xor
jnp
mov
pop
jl
mov
ret
enter
test
ljmp
inc
out
sar
imul
flds
push
lods
pop
daa
pop
es
cmc
sahf
insl
cld
ror
cmpsb
pop
stos
fisttpll
fstpl
pop
jmp
dec
std
pop
je
mov
pop
pusha
std
sbb
andl
ja
mov
adc
and
mull
jl
mov
sbb
in
je
jo
insb
pushf
popl
subb
mov
xlat
lods
mov
cld
outsb
add
or
dec
mov
lods
jecxz
mov
push
sarb
pushf
out
jnp
or
mov
popf
out
jmp
fadds
xorl
xor
repz
jae
pusha
and
cmp
push
adc
or
add
or
shr
std
movsb
fidivs
outsb
sbb
scas
sbb
jg
or
xor
xchg
dec
movsl
inc
push
pusha
jo
mov
call
xchg
mov
adc
xor
sub
xchg
mov
add
loop
jbe
lret
lret
dec
pop
pop
int
mov
loop
mov
inc
adc
adc
sub
clc
add
xchg
aam
repz
jmp
neg
or
sub
mov
sub
push
fsubp
fwait
adc
sub
push
push
xchg
mov
pop
sbb
sbb
or
or
push
mov
dec
testb
shr
bound
mov
add
push
inc
sbb
sti
mov
adc
xor
mov
push
fadd
sub
rcrl
mov
je
dec
sbb
scas
lret
sbb
add
inc
rcl
rcll
xchg
clc
sub
sbb
dec
fiadds
fimull
ljmp
inc
in
push
dec
out
push
or
add
in
ss
and
and
pop
mov
loopne
fldl
arpl
add
cmp
push
pop
dec
xor
xor
mov
enter
push
mov
shll
push
leave
pop
jmp
jo
int
fldt
mov
mov
nop
incl
das
push
dec
sti
out
mov
and
je
dec
je
add
and
int3
or
sti
fldcw
mov
add
insl
ljmp
test
lahf
jae
add
jl
imulb
mov
sbb
out
ja
or
test
jno
mov
and
in
test
repnz
adc
pop
inc
sbb
fmull
fstl
push
rorl
push
popa
aaa
and
loop
or
and
dec
sbb
xchg
cmp
out
cmp
push
dec
push
push
pop
push
jnp
je
aam
orb
mov
out
cltd
add
fcmovnu
jg
jo
lcall
lock
mov
push
outsb
jne
pop
sub
fisubl
mov
sbb
cmp
push
push
aas
push
sarl
ret
jb
push
push
xchg
jmp
inc
aad
dec
sub
lock
loopne
inc
or
push
fcoms
and
orl
test
jne
push
push
adcl
out
xchg
or
imul
pop
sub
and
mov
inc
dec
shlb
xchg
test
xor
add
add
mov
mov
pop
clc
or
adc
aam
or
and
xor
push
mov
lahf
xor
insb
insl
or
stos
dec
popf
in
ja
je
loopne
clc
inc
push
inc
add
dec
mov
mov
out
and
xor
push
frstor
fdivs
ret
mov
jne
mov
ljmp
or
add
aam
int3
sti
adc
mov
mov
into
outsl
push
push
dec
or
adc
push
and
adc
sahf
push
pop
outsl
inc
or
jbe
iret
repz
loopne
jo
outsl
ja
inc
mov
mov
mov
sbb
sbb
arpl
test
or
lret
lret
or
or
push
sbb
dec
mov
jg,pt
clc
pop
ret
adc
icebp
leave
rcl
fs
mov
loopne
xchg
add
hlt
xor
add
sub
clc
in
lock
rep
mov
xor
adc
adc
mov
bound
jp
rorb
mov
pop
add
insb
das
jmp
pop
xchg
cmp
xor
sub
add
add
hlt
mov
imul
daa
cmp
gs
pop
push
pop
lea
adc
jg
pop
lock
mov
mov
xlat
les
fisubrs
and
xor
mov
adc
fwait
mov
push
addr16
sti
fs
adc
mov
add
sub
lods
nop
lret
sbb
inc
test
daa
negl
pop
clc
push
xchg
sub
mov
sbb
pop
jae
push
cmp
mov
imul
push
test
mov
mov
loop
cmp
jae
sarb
adc
add
je
sbb
adcb
xlat
lods
mov
lods
dec
sti
add
xor
and
or
and
mov
adc
and
cld
push
imul
roll
stc
cmp
jge
imul
stc
out
ja
jle
andl
cmp
adc
cmp
jl
jns
cmp
jecxz
dec
fs
movl
nop
and
scas
or
in
dec
cmp
xchg
xor
xchg
inc
test
cmp
push
mov
push
cmp
fdivrs
inc
lods
shl
cwtl
shl
out
pop
leave
push
sbb
add
jnp
xchg
pop
into
push
mov
mov
dec
movsl
mov
or
or
push
cmp
push
icebp
imul
and
or
jl
push
pop
jo
call
pop
insb
sbb
inc
inc
rclb
loopne
and
add
and
mov
and
push
sti
or
push
ret
js
dec
mov
fidivs
or
leave
clc
loopne
rol
push
in
mov
pop
jg
cmp
pushl
mov
push
xlat
and
pop
je
rcr
and
inc
mov
dec
je
adc
fucomip
scas
mov
mov
je
mov
inc
cmp
fcomps
xor
xchg
push
mov
pop
inc
lret
ja
in
xchg
lea
sbb
outsb
fs
or
xor
add
dec
jp
mov
jne,pn
sbb
inc
fs
fldl
and
mov
fmull
xchg
adc
and
add
mov
adc
push
jmp
mov
aam
out
fcom
mov
sbb
push
add
or
mov
andl
pop
dec
dec
add
aaa
xor
mov
adc
fimull
enter
or
or
mov
roll
fisttpll
lds
int3
and
push
add
and
in
je
clc
pop
in
adc
and
or
test
lret
lahf
and
das
sub
pop
inc
mov
lds
popl
xchg
push
and
or
sbb
and
add
push
inc
xor
into
push
push
test
incb
loopne
push
add
jl
jmp
test
jo
xchg
nop
mov
and
je
test
or
pop
cmpb
stc
add
punpcklwd
jmp
push
pop
xor
add
mov
add
xor
mov
or
and
cmp
arpl
mov
pop
ret
insb
cmpsb
and
push
mov
aam
pushf
clc
jge
in
adc
je
adcl
inc
cmp
jnp
cld
das
push
push
pop
cmp
push
pop
je
push
push
test
test
and
pop
sub
push
jne
lcall
mov
sbb
add
cmpb
pop
stos
ret
dec
mov
adc
adc
xor
and
mov
es
scas
cmpsl
fwait
xchg
adc
dec
sub
adc
cmp
adc
mov
push
mov
inc
and
pop
pop
inc
or
insb
mov
cmp
xchg
adc
mov
je
fldl
test
mov
loopne
xor
and
push
or
xchg
lss
add
inc
dec
fdivs
insl
sub
push
sub
cmp
jnp
dec
jmp
xor
popf
or
test
pop
inc
test
mov
fiaddl
inc
inc
inc
pop
je
pop
and
int
mov
cmpb
push
or
or
mov
inc
nop
adc
add
sbb
icebp
cmp
xchg
popa
xchg
cld
push
inc
or
or
add
push
inc
cmp
popa
int
cmp
and
or
xor
jp
into
inc
add
add
fidivl
inc
dec
faddl
pop
push
arpl
sub
movsl
and
or
dec
leave
sbb
xor
mov
shl
push
mov
inc
adc
cld
xchg
enter
sbb
cld
lcall
jge
xor
pop
in
fstpt
xchg
cmp
mov
inc
cmp
out
mov
inc
cmpsb
js
cmp
ja
les
push
sbbl
mov
outsl
mov
push
push
mov
insl
cmp
rclb
fisttpl
sbb
pop
inc
or
dec
clc
xlat
stos
sbb
fcoms
rol
xchg
loope
and
mov
lds
fsts
test
pop
stos
lahf
or
cld
cmp
cs
cmpsl
shll
lds
sbb
or
sub
push
sar
add
out
jecxz
mov
jmp
scas
ds
pop
jno
cld
and
push
and
stc
push
jno
push
mov
int3
and
push
push
ss
pop
xchg
push
mov
push
lcall
sub
mov
cmp
or
lock
xchg
pop
inc
iret
test
xchg
imul
fldt
adc
push
push
pop
xchg
sbbb
push
outsl
adc
cld
xor
mov
repz
and
inc
pop
pushf
sub
jbe
decl
sbb
add
add
sub
or
or
mov
popa
add
jge
xchg
std
pop
ja
adc
test
call
cmp
std
addb
push
sbb
add
add
enter
add
addl
and
aas
aam
pusha
and
or
add
std
ret
inc
cmp
adc
push
hlt
rorb
notb
sbb
cmpsb
je
or
mov
push
mov
cwtl
dec
push
sub
push
sbb
out
xchg
mov
aam
push
addr16
add
idivb
add
add
ljmp
stos
orl
insb
fsts
loopne
adcl
xchg
call
repz
sub
mov
sub
push
fisubrs
xchg
add
pop
pop
nop
push
cmc
in
rclb
stos
aas
push
xchg
aaa
cmc
adc
xor
ds
sbb
pop
pushf
mov
cmp
pushf
or
adc
sub
mov
sbb
cmp
push
jmp
jl
scas
dec
cmp
xchg
out
inc
inc
dec
xchg
std
mov
push
dec
out
sbb
lds
stos
mov
test
mov
shlb
mov
pusha
stos
cltd
or
pushf
mov
sub
lock
xor
mov
mov
cli
inc
out
das
mov
mov
sbb
cs
mov
das
test
or
lock
pop
pop
popf
jge
not
push
rcrl
mov
add
sbb
xlat
add
popa
cmp
shr
in
insl
js
lock
add
jmp
out
int3
jnp
pop
push
push
inc
shr
rcr
shr
rcr
or
jne
fnsave
out
fincstp
repz
dec
adc
inc
mul
pop
jb
cmp
add
dec
ja
jb
mov
dec
sub
jns
divb
sbb
mov
fcmovu
out
xchg
mov
mov
mov
iret
fisubl
movsb
push
je
adc
jge
push
pop
or
push
fwait
mov
repnz
adc
or
rorl
mov
and
push
lret
xor
pop
sbb
or
mov
or
test
add
or
mov
or
mov
inc
dec
jne
lea
inc
inc
loope
push
mov
insb
inc
dec
es
dec
out
iret
fs
sbb
add
or
or
and
mov
mov
push
jl
hlt
mov
sti
out
stos
and
test
and
pop
mov
mov
add
outsl
ss
ja
sub
xor
or
and
inc
stos
fdivrs
xchg
aad
inc
cwtl
push
fiaddl
or
adc
mov
push
cmp
jb
enter
add
dec
les
xchg
pusha
pop
cli
dec
scas
push
in
jb
orb
mov
je
nop
jge
and
scas
divps
pusha
test
mov
loop
mov
test
jge
fcmovne
sub
mov
lea
pop
and
ja
push
imul
cli
and
and
mov
clc
ljmp
cmp
jb
mov
mov
and
loop
test
mov
mov
sbb
addl
shll
or
inc
or
push
ja
lret
je
push
mov
mov
pop
insb
push
test
in
jmp
pushf
or
mov
xchg
sub
and
aam
out
and
add
xchg
and
dec
inc
jmp
push
std
jne
xor
xor
sub
cmpsl
jne
outsl
add
jmp
dec
mov
add
mov
and
or
lahf
in
les
push
rcll
and
test
or
mov
loopne
scas
xchg
sbb
test
adc
out
mov
pop
mov
push
jmp
add
into
dec
mov
and
sub
jmp
sbb
fldcw
add
inc
movsb
mov
sti
jg
pop
or
iret
sub
mov
mov
pop
movb
add
sbb
loop
loop
jno
leave
xor
dec
pushf
das
jmp
out
push
sub
ds
jmp
loopne
sbb
push
icebp
xor
add
mov
inc
inc
xor
dec
cmp
pop
jg
push
xorb
movl
inc
jno
push
mov
out
adc
add
lcall
mov
inc
mov
inc
inc
inc
dec
jne
repz
cmc
add
inc
in
xchg
sbb
mov
jbe
mov
clc
xor
add
aaa
mov
rorl
inc
dec
jne
into
adc
sahf
aam
cmp
jmp
cmp
scas
outsb
push
cmp
push
and
inc
or
mov
mov
lret
adc
cmp
clc
mov
xchg
xchg
push
xor
aam
mov
adc
imul
dec
js
push
cmp
popf
sub
stos
jmp
jbe
test
adc
jecxz
test
xchg
sub
ud0
out
add
stos
pop
cwtl
testb
or
loope
mov
jl
push
or
add
aam
imul
sbb
mov
push
sub
jmp
xor
in
jge
mov
mov
push
inc
add
mov
fdivrs
jo
rcl
ja
sbb
pushf
mov
xlat
jmp
jns
add
test
pushf
inc
inc
imul
add
mov
inc
in
sub
mov
out
pop
inc
mov
xchg
sbb
mov
pop
in
cmp
push
je
lods
ret
mov
movsb
jge
dec
mov
pop
cmp
jne
sbb
pop
adc
mov
cmp
or
add
sarb
das
adc
fidivl
inc
inc
sbb
sub
cmp
and
rcrb
cwtl
shr
cld
cmpsb
call
xor
push
test
jne
and
pushl
out
jle
pop
cmpl
fdivs
adc
aas
popa
loop
or
outsl
in
add
ffree
bound
jecxz
daa
fs
icebp
jg
icebp
and
xorb
push
sbb
or
sbb
pop
cmpl
add
cmpl
cmp
pop
ret
adc
fdivs
push
adc
into
cltd
or
and
mov
and
xor
adc
add
inc
add
outsb
rclb
push
push
das
es
rolb
or
mov
rclb
je
sub
nop
lock
or
jl
sub
jo
xchg
inc
insb
mov
and
orb
sete
sub
shrl
or
pop
addr16
mov
adc
movsb
add
push
xchg
or
lea
jmpw
push
push
mov
lahf
jne
sub
inc
add
insl
roll
incb
add
sub
jmp
pushl
add
cmpsb
jae
adc
imul
fistpl
add
adc
xchg
xchg
add
es
ja
faddl
sub
imul
adc
mov
movb
stc
and
inc
stc
adc
aam
mov
lret
add
add
push
inc
hlt
pop
lock
adcl
inc
or
xchg
mov
cmc
mov
cld
cmc
jae
test
bt
jne
loope
popf
lea
test
std
or
pop
scas
mov
xor
sqrtps
mov
push
insb
aad
aam
shll
je
dec
jle
add
je
inc
mov
ret
push
push
daa
inc
sbb
mov
push
loopne
push
pusha
in
jmp
je
mov
rclb
jecxz
repz
int3
ret
popa
insb
incb
int3
mov
cwtl
nop
cs
jnp
or
mov
mov
lea
dec
les
js
jne
out
fs
cs
movsb
add
dec
rorb
jne
movsl
js
mov
pop
fdiv
inc
or
adcb
mov
mov
add
and
lea
loopne
clc
iret
aaa
loopne
imul
add
pop
lcall
testb
jne
mov
inc
nop
dec
or
nop
adc
pop
fisubs
pop
int3
sub
or
popa
mov
xchg
movsb
outsl
shl
int3
dec
dec
jmp
add
mulps
add
jge
and
dec
xor
or
call
loopne
pop
add
cmpsb
push
enter
insl
icebp
add
lock
repz
add
add
lods
cmp
out
testb
shlb
sbb
sti
add
lods
clc
dec
jg
adc
mov
popa
or
xchg
fnstcw
mov
stc
ss
mov
xor
or
fisttpl
jbe
loopne
pop
xor
jne
xor
in
pop
jecxz
and
or
inc
outsl
pop
test
je
js
ss
jne
jmp
lcall
scas
push
ja
adc
jmp
out
imul
and
push
decb
add
notb
add
pop
mov
inc
repnz
cmpb
adc
test
les
add
push
xor
xor
push
mov
or
cwtl
or
cmp
pop
lods
je
lds
outsb
push
arpl
jnp
push
xor
or
cmc
in
daa
dec
mov
mov
scas
add
mov
jb
jo
add
cs
xor
shl
insl
and
popf
or
and
push
or
dec
test
aas
and
int3
adc
cmp
pushf
loope
dec
outsl
jg
push
mov
in
adcl
mov
add
jle
add
sbb
add
fisttpl
hlt
pop
sub
pop
xchg
ficoml
add
ds
imul
imulb
add
ret
out
mov
add
push
sub
cli
dec
cld
int
ret
dec
mov
sub
ret
and
inc
sbb
sarb
mov
push
call
mov
lret
inc
add
in
fs
dec
insb
lock
and
nop
cmp
pop
push
repnz
mov
popl
pushf
mov
out
in
mov
icebp
repz
clc
and
fimuls
add
xchg
sbb
iret
pop
js
add
jo
add
mov
add
insb
out
mov
cmp
mov
idivl
aas
xchg
mov
push
jae
or
leave
sub
btc
loope
add
mov
push
pop
aaa
inc
and
mov
cmpsl
xchg
mov
pop
push
sbb
adc
pop
push
mov
add
stos
push
dec
push
aam
cs
mov
push
pushf
mov
add
xchg
decl
or
jle
rcr
sub
fisttps
push
sbb
pusha
imull
add
sub
push
mov
dec
dec
jne
sub
jl
or
xchg
clc
and
inc
insb
addl
pop
sbb
icebp
pop
cli
dec
test
inc
shl
imul
add
or
rcll
ljmp
inc
enter
bound
cwtl
mov
mov
cmp
mov
shrl
fisubl
fs
ds
push
sub
push
inc
clc
adcl
mov
inc
loop
push
mov
inc
and
jo
or
call
xchg
fadds
dec
dec
and
add
ds
cld
adc
cmp
jb
lahf
sub
stos
decb
and
add
ret
stos
test
fstpt
pop
pop
addb
dec
push
sub
int3
ljmp
or
pop
jne
mov
cmp
jnp
and
imul
inc
cmp
inc
mov
mov
cmp
push
stc
pop
je
inc
cmp
jae
shr
ret
cmp
ja
sub
pop
sbb
sub
cli
add
mov
mov
add
add
ja
jecxz
cmp
sbb
jne
dec
imul
nop
dec
mov
push
pusha
int3
into
inc
ds
inc
pop
hlt
push
lock
mov
daa
sbb
add
xchg
stos
sub
mov
cli
pop
fisubs
loopne
and
fsubrp
adc
or
xor
sarb
cmp
ss
push
pop
add
iret
mov
sar
js
stc
je
lea
cmpsl
add
push
pop
popa
mov
jmp
lock
es
mov
xor
loop
outsl
add
xchg
call
add
out
mov
add
js
push
in
jle
scas
fildl
imul
fwait
push
add
jne
daa
or
std
outsb
test
sub
and
je
or
sahf
and
movsb
mov
inc
repz
add
mov
or
adc
je
or
dec
xor
or
outsl
push
sti
cmp
lea
dec
bound
movsb
roll
cmpsb
jne
push
mov
mov
dec
ljmp
cltd
ja
inc
sub
bound
cmovb
add
gs
sub
jne
mov
dec
pop
inc
dec
lea
mov
add
stos
mov
stc
dec
jg
pop
add
pop
neg
adc
xor
enter
cwtl
repz
xor
mov
jno
imul
fadds
jmp
xchg
fadds
add
and
jo
add
cmp
data16
ret
xorl
ret
add
cmp
jl
inc
jne
or
rorb
mov
hlt
push
xor
test
add
add
sbb
sti
and
pop
fwait
add
jmp
mov
mov
inc
xchg
dec
std
pop
inc
jno
xchg
adc
inc
and
clc
and
outsb
ret
repz
push
enter
xor
xor
sbb
mov
outsb
sbb
lock
cmc
jl
pop
jg
push
jmp
in
push
data16
inc
rcrb
dec
pop
aaa
push
test
int3
jmp
mulps
es
adc
and
mov
jl
add
les
lret
mov
and
imul
jp
cmp
pop
jb
pusha
mov
inc
rcrl
xor
insl
dec
add
cwtl
push
movb
cli
addl
mov
rclb
mov
sbbb
cmp
jp
lock
mov
push
inc
fstps
shl
jno
add
cmp
add
jmp
cld
mov
in
add
mov
xchg
jmp
pop
call
rcrb
and
mov
dec
or
adc
movsl
cmpsl
movsl
add
pop
js
add
mov
test
xor
pusha
loopne
cmp
js
sbb
or
mov
mov
sub
push
push
aam
in
cmp
mov
sbb
inc
frstor
push
or
add
sub
mov
dec
sbb
adc
push
xor
cwtl
xchg
mov
jge
enter
fwait
test
cmp
je
mov
adc
les
inc
flds
sub
ljmp
jbe
and
nop
cltd
loopne
jo
gs
mov
ss
aaa
mov
sti
sbb
movsb
les
outsl
pop
xchg
xor
movsl
and
mov
sbbb
arpl
or
lret
mov
inc
jl
or
sbb
loope
orl
nop
or
jge
out
daa
decb
mov
adc
jbe
test
aam
inc
fcompl
inc
xchg
sub
dec
mov
ret
pop
inc
pop
xchg
mov
inc
mov
and
outsb
or
push
fcmove
rolb
xchg
sbb
lea
push
stos
hlt
shll
hlt
clc
dec
je
add
push
dec
add
push
jae
and
mov
popa
xchg
loopne
out
fiadds
or
jb
aam
dec
test
inc
sbb
lcall
add
shlb
cwtl
pop
add
imul
sub
les
ljmp
push
push
push
fisttpl
inc
or
test
mov
pop
sbb
and
sub
mov
dec
pusha
dec
add
jl
js
mov
mov
incl
dec
or
pop
sbb
push
or
adc
sub
push
ret
incl
and
rclb
xchg
fdivrl
mov
decl
inc
out
pop
lods
inc
push
dec
mov
xor
jg
cs
adc
mov
sub
pop
fbstp
iret
imul
cmp
push
inc
mov
fwait
jl
xchg
rcrl
mov
js
add
add
sbb
nop
pop
mov
or
mov
add
dec
test
adc
rcrb
xor
les
pop
imul
pop
mov
inc
test
loope
lret
add
mov
xchg
aad
adc
test
sti
call
push
pop
push
or
pusha
sbb
mov
sub
movsl
dec
shlb
fisubs
icebp
lahf
push
push
mov
xor
test
jbe
push
sbb
fsubrs
sbb
fisttps
jl
je
fmull
add
adc
ret
jae
imul
mov
dec
sub
adc
xchg
pop
add
mov
mov
xchg
or
int
adc
mov
cs
insl
jno
sahf
push
hlt
sahf
sub
shrb
xor
cmp
sahf
flds
add
xchg
popa
fwait
mov
sub
sbbb
mov
push
and
mov
sub
lock
push
icebp
jle
negl
dec
push
shl
or
repnz
sub
push
add
sbb
dec
scas
mov
out
divb
or
cmp
cmp
mov
push
or
cmp
mov
inc
cmp
and
adc
jne
adc
or
enter
mov
adc
addb
in
cmp
xor
pop
fistl
push
add
add
outsl
cmc
jne
js
icebp
xor
in
fisttpll
lcall
dec
sar
outsb
out
sbb
xchg
mov
fildll
push
fistl
clc
lock
jb
jmp
inc
xor
or
into
je
sahf
mov
mov
inc
push
or
dec
add
or
add
push
loope
jecxz
xor
call
ljmp
into
jbe
rdmsr
inc
cwtl
faddp
cmp
loopne
ret
ja
cli
lret
xchg
call
sbb
sbb
insb
and
pop
or
insl
cmp
lds
and
test
ret
sub
bound
mov
mov
fadd
inc
mov
mov
push
or
imul
pop
fdivs
nop
popa
popf
outsb
lahf
xchg
pop
je
movzwl
push
lods
lahf
xor
int
fmuls
push
andl
cltd
test
mov
xchg
push
neg
fstl
rcrl
pop
pushf
cmp
xchg
addb
mov
cld
mov
je
push
xorl
push
push
fimuls
shll
ljmp
je
or
cmp
jle
fldl
outsb
je
outsl
and
cvtps2pi
fiaddl
jg
cli
adc
push
lahf
jmp
mov
out
dec
inc
dec
or
cmp
popf
lret
fs
orb
ret
xor
stc
pop
jnp
and
cmp
xchg
rcll
aaa
mov
gs
push
addr16
lcall
jle
push
icebp
mov
sub
ja
pop
cmp
add
loopne
inc
lods
je
mov
or
mov
je
fisubrl
pusha
ror
in
scas
push
inc
push
xchg
xor
js
mov
movsb
adc
mov
inc
addl
jae
dec
movsb
inc
shll
sub
push
sbb
enter
push
sbb
mov
inc
push
push
mov
jno
xchg
loopne
mov
and
fs
jg
cld
xor
call
mov
add
add
ror
adc
mov
add
mov
add
xor
xor
add
adc
stos
loope
adc
test
adc
or
push
push
imul
add
jge
sbb
adc
add
xor
cmp
mov
jg
jl
jae
aas
js,pt
rolb
neg
imul
shrb
clc
jne
sbb
or
adc
testl
sbb
and
mov
inc
adc
xchg
sbb
xor
cltd
push
mov
pop
add
imul
cwtl
mov
jp
out
out
stos
or
int3
lea
repz
fadd
dec
enter
fmuls
movsb
inc
clc
std
ja
fadd
add
inc
jmp
dec
data16
inc
inc
scas
sub
hlt
sub
or
pop
fdivs
mov
rcl
cmpb
add
mov
xchg
jo
push
and
inc
add
push
movsb
sub
cmpb
test
je
repnz
fidivl
pop
shrb
fadds
and
dec
push
inc
inc
shrb
insl
add
out
repnz
push
push
or
or
or
jne
push
push
xor
pop
add
add
add
fdivs
jmp
xorl
mov
add
sahf
scas
aas
xor
nop
inc
push
inc
push
jne
cmp
push
dec
shll
nop
lea
adc
or
jmp
out
pusha
and
mov
dec
xor
int3
lret
jl
pop
sbb
add
cmp
xor
xor
gs
fbld
into
pop
mov
inc
fistpll
jecxz
or
mov
mov
mov
inc
sub
cmp
mov
adc
out
hlt
clc
fwait
adc
cmp
repz
push
sbb
inc
and
fnsave
add
sub
dec
and
xchg
test
fsubs
inc
mov
rorl
or
adc
adc
add
and
sti
pop
test
pop
mov
pop
shufps
jmp
push
adc
dec
add
sbb
aas
adc
dec
xor
lock
jg
imul
jge
jo
pop
push
sbb
inc
push
mov
inc
dec
sahf
push
xchg
lock
nop
xor
and
adc
add
adc
dec
jo
test
loopne
add
pop
decl
popf
rclb
inc
roll
add
pop
mov
mov
sbb
or
fnstcw
mov
push
sbb
lret
xor
and
mov
lahf
jne
outsb
push
xor
popa
xchg
jbe
or
add
stos
add
fldl
and
icebp
lcall
lahf
lret
add
mov
inc
mov
sub
xchg
lahf
jae
daa
test
sbb
loopne
mov
and
rolb
or
mov
fldenv
stos
aam
sub
cmp
add
movl
push
add
dec
cmp
pop
push
mov
fdivl
push
str
add
out
push
adc
pop
stos
add
and
add
push
and
jns
and
adc
jle
push
inc
mull
jb
daa
sarb
and
hlt
je
or
das
add
and
iret
mov
or
loop
es
sbb
movl
cmp
cmpsb
clc
inc
rorl
je
in
or
ds
cmp
popf
cmpsl
and
lock
or
and
pushf
xor
push
das
test
pop
push
push
jnp
or
inc
and
adc
push
inc
mov
pusha
sub
add
jmp
mov
push
mov
test
xchg
lea
push
push
shlb
xor
push
sub
inc
test
lds
int3
xchg
popa
adc
cmp
push
cmpsl
shll
repnz
js
lcall
xor
sub
xor
jle
mov
ja
jl
andl
cld
push
ffree
pop
rcrl
inc
ds
clc
push
add
push
mov
push
mov
and
sbb
dec
clc
and
mov
push
xchg
xor
gs
sbb
jl
ljmp
mov
pop
cmp
sub
or
adc
inc
fsub
pop
loopne
movsl
and
push
lea
push
mov
inc
and
dec
sub
addb
jp
fimull
push
sahf
inc
mov
lea
lcall
push
je
ficompl
jbe
push
inc
pop
out
push
icebp
sub
sbb
popa
aad
sbb
inc
mov
sti
jne
imul
test
daa
icebp
adc
or
xchg
lock
jle
ljmp
sarb
incl
and
pusha
cmpsl
mov
ret
xchg
sub
and
fstl
push
scas
push
cmp
cmp
jl
xor
pushf
pop
xchg
push
pop
mov
xchg
adc
cmp
sbbb
nop
jle
cmp
xlat
push
inc
xor
daa
jns
into
inc
loopne
les
daa
push
mov
pop
xor
mov
mov
lret
xor
mov
fwait
or
lcall
pop
mov
imul
or
dec
inc
cmp
das
sub
test
loop
jns
or
loop
push
jmp
jbe
pop
data16
mov
sbb
je
xlat
or
sbb
loop
ja
xchg
add
or
pop
cld
imul
orl
faddl
cmp
out
mov
jbe
and
sub
sahf
add
sub
add
das
sub
movsl
jmp
adc
push
add
aad
inc
jle
mov
push
mov
xor
sti
or
pop
fstl
repz
nop
ror
or
loop
insb
std
mov
sbb
add
pop
mov
cld
pop
inc
and
sub
lods
mov
cmp
lds
add
dec
push
xchg
pop
add
mov
xchg
test
push
mov
and
push
cmpsl
add
pop
and
cmp
mov
pop
fsubs
in
fdivr
cmp
lcall
and
push
push
xchg
shlb
push
test
push
sub
call
call
orl
add
call
ss
test
and
adc
dec
xor
jo
inc
test
aaa
pop
pop
hlt
mov
test
mov
sysenter
inc
add
or
aaa
movsb
dec
mov
jle
nop
and
dec
mov
mov
mov
jle
mov
cmp
sbb
leave
inc
fisttpl
sub
jle
cmp
lock
clc
mov
cmpb
jl
fdivl
stos
test
inc
push
cmp
mov
mov
xchg
adc
mov
xor
dec
and
push
js
ret
push
movzwl
sub
outsb
xor
push
push
push
add
or
push
js
inc
adc
fldenv
and
lret
je
mov
pop
inc
push
or
imul
mov
adc
dec
push
in
push
pushw
ja
clc
sbb
dec
dec
add
cld
in
cmpsb
mov
adc
enter
orb
test
movsb
adc
pop
es
mov
mov
add
shr
insb
sar
pop
or
add
add
sub
je
adc
adc
insb
pop
or
dec
loope
xchg
push
nop
push
into
rclb
clc
xchg
mov
test
adc
cld
or
movsl
xor
andb
or
jbe
or
add
mov
xor
aad
and
xchg
rcr
clc
or
sbb
dec
jle
add
add
xor
jmp
adc
jecxz
jl
fdiv
fidivrl
sub
sbb
sbb
inc
sbb
dec
add
inc
push
sbb
push
adc
sbb
push
inc
and
fldcw
xchg
cmpsb
add
sbb
xchg
inc
adc
sbb
mov
dec
jns
sbbb
test
dec
jne
pop
pop
pop
hlt
inc
fldt
inc
jae
or
jae
lods
rcl
ljmp
dec
and
shr
adc
loopne
jo
lret
add
sub
movsb
and
adc
and
neg
cld
lock
push
cmp
sub
outsb
stc
je
push
rcrb
cwtl
push
inc
adcb
inc
sbb
pop
out
je
pop
fdivs
pop
add
mov
cs
fsubrl
jecxz
xchg
fsubrl
inc
add
aad
cs
testl
push
push
dec
jge
fisubrl
push
push
and
sbb
dec
cmc
ret
jb
lret
push
xchg
enter
orb
aam
mov
inc
addb
and
push
cmp
inc
shlb
mov
mov
add
mov
jbe
loopne
pop
push
add
hlt
jmp
insl
test
ret
addl
loopne
jns
push
ret
push
or
push
ret
test
add
mov
roll
or
mov
push
push
push
pop
pop
cmp
rolb
stos
lock
sub
ror
popf
push
add
and
xor
mov
hlt
es
sbb
loop
and
mov
pop
xor
popa
pop
hlt
enter
icebp
psrlw
pushf
pop
sub
ficoml
sbb
cmp
sbbl
xchg
push
data16
pop
divl
mov
scas
add
aam
inc
insl
lock
loopne
xchg
mov
lcall
lcall
or
adc
inc
clc
js
or
add
scas
push
cmp
inc
sub
or
mov
lret
and
and
or
iret
adc
fldln2
mov
into
shll
dec
xor
adc
or
jle
or
jmp
inc
shr
and
push
mull
lret
and
les
movb
adc
or
jo
enter
test
loopne
sub
mov
xor
je
or
mov
pusha
mov
inc
jmp
leave
ret
mov
add
ret
or
jmp
inc
and
mov
mov
xchg
jbe
jl
and
jecxz
sbb
dec
jae
xor
in
xchg
jmp
das
adcb
sbb
push
or
or
adc
jns
jne
mov
pusha
and
ret
fildll
add
fstps
aas
pusha
mov
pusha
loope
pop
sub
or
push
dec
and
adc
fnstsw
pusha
inc
pop
rcrl
insl
iret
insb
sbb
clc
or
add
testb
sub
sbb
sti
add
mov
out
test
fbstp
loopne
inc
ret
mov
filds
das
int
dec
jne
orl
inc
jmp
push
rorb
stos
xor
pop
testl
cmp
and
add
lods
imul
pop
sbb
jmp
push
and
sub
or
push
subb
inc
push
fstps
ret
fstpl
dec
sbb
adc
or
clc
mov
sub
adc
dec
punpckhdq
test
shlb
sub
stos
pop
pop
jbe
cmp
push
mov
xchg
sbb
test
addl
nop
mov
add
dec
push
or
mov
mov
gs
fldl
fsubrs
dec
jmp
sub
sub
jmp
pop
jb
pusha
sub
push
or
psubusw
xor
test
int
ret
mov
xchg
and
fcompl
pop
sbb
mov
and
clc
rcll
push
lret
mov
popf
mov
stc
into
sub
outsl
push
jmp
or
loopne
roll
lods
xor
inc
sbb
jmp
shrl
mov
push
mov
enter
sub
adc
xor
es
adc
push
pop
cli
shrl
test
pushf
lock
roll
loopne
js
ss
mov
push
pop
pop
in
inc
mov
cld
std
mov
inc
jno
loopne
adc
out
dec
imul
pop
jne
pop
out
es
jle
imul
pop
cmovp
ret
mov
out
add
add
popa
imul
pop
cwtl
add
and
mov
ljmp
cmp
fnsave
pop
fs
mov
movsl
adc
pop
call
in
inc
ficompl
jp
sbb
into
cmp
clc
push
ror
sub
inc
cld
or
ljmp
push
enter
jg
push
fadds
jle
mov
test
adc
inc
gs
mov
cli
or
lock
add
dec
mov
inc
cmp
adc
out
inc
lahf
or
addr16
gs
adc
bound
pop
dec
in
in
adcb
push
mov
arpl
faddl
sbb
cwtl
gs
xor
fiaddl
sbb
fnstenv
sbb
lcall
sub
push
jo
mov
cmp
add
or
pop
insl
orb
sbb
hlt
and
push
push
jmp
xor
cmc
dec
popa
xor
cmp
aad
int3
fcompp
cld
sbb
cmp
je
cmpxchg
dec
pushf
or
jl
loope
xor
cmp
lcall
jg
rclb
sbb
or
push
or
xor
movsb
and
dec
jo
xchg
mov
cmpsb
aas
mov
jmp
dec
push
mov
lods
call
dec
jmp
mov
roll
fstps
pop
int3
inc
repnz
push
push
cmpsl
dec
dec
in
dec
push
scas
or
es
test
or
or
cmpsb
imul
dec
and
out
gs
out
rolb
call
adc
in
dec
xchg
fcoms
and
mov
sub
or
push
vcvtss2si
jg
fstsw
movswl
adc
loop
cmp
lock
and
jb
adc
or
jb
xor
fs
xor
out
or
sbb
add
dec
mov
cli
xchg
push
or
sub
sbb
es
fwait
rclb
fwait
movsb
and
fcompl
and
lock
inc
or
call
jg
outsb
adc
fldpi
xor
push
add
push
pop
cmpsl
addr16
jmp
push
and
dec
sbb
ret
inc
test
xor
ret
lret
and
pop
push
mov
sbb
jmp
and
loopne
leave
imul
cmp
sbb
push
xchg
adc
mov
pop
leave
in
inc
imul
or
shll
jae
add
popa
cmp
daa
insl
xchg
decl
or
outsb
and
daa
adc
ss
fmull
and
sub
popf
pushf
pushf
pushf
xor
cmp
inc
and
inc
bswap
leave
leave
leave
dec
dec
push
push
jb
jb
pop
add
jb
jb
insb
jo
rcrb
jb
js
dec
es
mov
cltd
fs
mov
xchg
dec
pushf
mov
es
sub
stos
push
xor
xchg
xor
ret
addr16
push
push
shlb
hlt
adc
clc
and
jle
fwait
nop
out
cmp
and
les
add
or
or
nop
int
sub
adc
and
les
add
jmp
rcrb
adc
dec
xor
adc
sbb
add
push
jl
ss
jne
mov
sbb
cs
pushf
es
push
sbb
xchg
dec
sbb
sub
inc
push
hlt
or
aam
jmp
sub
push
inc
sub
mov
test
int3
xchg
push
add
pop
add
xchg
pop
cmp
loopne
push
cmp
add
mov
sub
and
pop
cmp
cmp
jle
movsl
testl
sub
je
sbb
lods
clc
fistpl
pop
mov
into
xor
or
xchg
inc
idivl
dec
sub
adc
divb
cmp
or
lds
out
cs
dec
pop
pop
xor
xor
je
cmp
jg
ret
add
pop
es
cltd
rcll
xor
jmp
push
sbb
pop
jbe
jne
stos
imul
sbb
pop
hlt
push
clc
hlt
pop
and
cmp
in
es
data16
outsb
push
imul
rol
add
outsb
add
mov
inc
es
cld
jmp
push
push
das
mov
jne
add
xorb
sbb
and
out
dec
or
rcl
push
les
jecxz
xchg
sub
cmpl
stc
add
jge
arpl
push
add
inc
adc
add
loopne
les
push
cmp
sbb
loopne
sti
pop
imul
sbb
and
aam
test
aad
xorb
stos
jecxz
rorl
mov
orl
cmp
pop
aad
xor
cmpsl
dec
or
shlb
aaa
nop
les
adc
cmp
or
sbb
test
lcall
outsb
test
in
push
lock
cmp
pop
mov
in
sbb
or
mov
xorb
andb
scas
push
sbbl
cmp
je
testl
sub
out
inc
sub
rorl
cmp
enter
data16
push
shrl
add
pop
and
mov
sbb
or
mov
or
inc
push
cltd
xor
push
loop
push
or
imul
or
adc
insb
add
pop
pop
inc
sub
fidivl
imul
pop
inc
fisttpll
sbb
mov
jnp
clc
inc
mov
adc
xor
xchg
ret
mov
or
or
dec
test
push
cmp
out
jmp
and
pop
add
mov
mov
jle
push
push
andl
jmp
rclb
rcll
cmp
mov
and
sub
sbb
lcall
test
add
shlb
inc
pop
and
push
loop
push
jl
or
add
out
jecxz
sti
outsl
cld
les
adc
push
cmp
adc
sub
jne
sbb
pop
test
add
loopne
or
pop
xor
and
stos
stos
push
stos
pop
pop
push
adc
add
lods
jge
stos
lock
and
xor
clc
adc
cltd
and
aad
push
imul
pop
outsl
addb
sub
add
imul
loopne
lea
pop
cwtl
sub
inc
shl
gs
push
sub
out
inc
or
shl
not
test
negb
sub
outsb
mov
cltd
insb
add
fsubr
pop
and
mov
out
mov
inc
outsl
fwait
mov
stc
sub
jle
lea
xor
repnz
fildl
or
sbb
sbb
sub
adc
jb
add
incb
jae
push
mov
adc
xor
movsb
repnz
sub
and
add
mov
lods
xorb
mov
ljmp
sti
cmp
dec
dec
stos
inc
xor
icebp
mov
xor
je
inc
out
aam
xor
cmp
xor
pop
rorl
fsubrs
iret
mov
shl
aas
movsl
jg
sub
sub
not
int3
pop
popf
cltd
mov
add
mov
inc
jmp
or
xor
jne
shl
cld
and
pop
rolb
xchg
cmp
jo
pop
sub
sarb
je
mov
inc
xor
jmp
mov
push
popa
pop
in
iret
int3
mov
test
leave
adc
data16
sub
or
or
push
push
aam
mov
pop
add
cli
ud1
mov
pop
add
repnz
sbb
xor
inc
lock
cmp
mov
or
loope
clc
daa
xchg
inc
mov
cmpb
xor
ret
jno
cmp
imul
gs
dec
xor
dec
inc
lea
sbb
mov
mov
add
push
into
mov
push
jl
xorb
add
push
out
and
ds
xchg
mov
int
or
and
adc
add
sub
shl
fcoml
xor
sbb
and
or
inc
mov
nop
gs
aaa
jo
in
loop
or
and
rclb
mov
sub
pop
repnz
pop
aaa
lds
lds
xor
dec
push
cmp
nop
inc
ss
push
or
and
sbb
movsb
xor
aaa
les
push
push
pop
adcl
jl
add
test
addb
adc
pop
adc
pop
mov
or
add
movsb
mov
and
xchg
jne
dec
xchg
test
lahf
mov
and
xor
movsb
pushf
or
andb
add
jmp
xor
sub
jbe
mov
mov
je
sub
cmp
ja
add
ja
dec
jmp
pusha
and
or
cmp
mov
pop
or
ljmp
push
mov
mov
jmp
push
movsb
mov
in
mov
sbb
mov
jmp
cmpsl
jge
inc
mov
mov
mov
xchg
sti
sbb
jle
jle
cmp
push
xor
add
push
jmp
dec
push
jnp
popa
lss
ret
stos
jbe
xchg
fstl
je
clc
or
cmp
cmp
cmp
ljmp
sbb
sub
mov
ret
push
jae
mov
pop
cmp
push
mov
filds
add
nop
lret
sti
lods
mov
jmp
mov
or
mov
sbb
push
pusha
push
lea
xchg
sbb
out
push
sub
jle
pop
cmp
in
orl
pop
pop
pop
add
imulb
test
stc
sub
cmp
jbe
jo
test
mov
dec
inc
scas
call
je,pt
mov
sub
arpl
pop
cmp
fwait
movsl
mov
jge
add
ss
xlat
pusha
pusha
and
shrb
mov
outsb
or
cs
inc
bound
or
and
sbb
and
mov
adc
sbb
out
rolb
jg
popa
mov
or
jecxz
add
pushf
jmp
push
test
insb
push
cwtl
pop
mov
icebp
and
into
dec
mov
xchg
push
mov
or
pop
shrl
mov
push
bnd
js
adc
orb
movsb
sub
cmp
push
in
mov
stc
mov
nop
enter
or
add
movsb
test
leave
sub
inc
xchg
or
sub
ljmp
sarl
mov
mov
jno,pn
hlt
das
or
cmpl
mov
mov
or
mov
mov
cmp
fs
inc
push
sub
ret
outsl
inc
push
xor
and
and
aad
push
jae
adc
lea
pop
pop
lcall
and
adc
std
mov
ja
or
jecxz
es
mov
inc
testl
or
dec
mov
and
inc
sub
lret
idivb
shll
dec
inc
or
cmp
jne
cmp
jne
rolb
add
dec
sub
lea
int3
push
xlat
sbb
add
ret
push
orb
loopne
fnstenv
sub
mov
mov
or
dec
insb
test
mov
scas
lret
sbb
call
fisubrl
push
mov
sbb
push
addl
subl
cmp
sub
push
mov
mov
inc
les
sub
xor
mov
cmp
movaps
fdivs
lods
mov
aam
jmp
icebp
ja
insb
pop
cs
ljmp
outsl
sbb
sub
adc
dec
sub
inc
jecxz
inc
push
sbb
div
add
jbe
movsl
js
movsb
mov
mov
pop
shl
fnstcw
mov
test
cmpsb
sbb
cmp
fnsave
xchg
or
push
mov
dec
fmuls
cmp
xor
and
not
add
fiaddl
fiaddl
pop
fiadds
cli
fidivs
xchg
ljmp
mov
divb
jae
shll
sub
or
lea
in
or
push
lret
into
pop
or
inc
sub
pop
outsl
daa
add
cmp
pushf
insl
mov
mov
push
sbb
mov
pop
xor
test
aas
jmp
xor
mov
and
setg
mov
push
jge
inc
or
mov
inc
ds
sbb
add
dec
inc
add
push
dec
dec
add
iret
repz
pop
xlat
int3
jnp
inc
popa
loop
push
sub
or
sbbb
icebp
enter
sti
ficoml
cmp
inc
pop
ret
xor
adc
jb
orb
or
xor
xchg
or
jge
sub
cmp
ret
adc
xchg
ret
lock
or
pop
jbe
mov
or
add
outsb
dec
jo
dec
adc
xor
inc
pop
mov
push
jl
pop
cmp
mov
mov
je
mov
jo
je
adc
xor
mov
fildl
rol
cmpsl
add
jmp
mov
addr16
xor
pop
imul
insb
pop
int3
sbb
jecxz
push
inc
adc
cmp
or
lcall
and
dec
nop
fcmovb
nopl
lods
fidivrl
pusha
adc
je
inc
push
dec
add
or
sub
loopne
ror
cli
sbb
or
add
xchg
ret
les
jo
sub
repnz
xchg
hlt
mov
mov
outsb
out
mov
cltd
loop
jne
out
add
or
inc
xlat
jmp
cmp
cld
xor
arpl
adc
push
adc
fucom
xor
pop
jmp
mov
addb
mov
sbb
add
and
mov
push
xor
add
outsb
call
add
bound
jb
inc
dec
mov
lock
and
sub
mov
jo
sbb
into
lea
adc
or
lods
sub
jbe
dec
xor
loope
orl
rcrb
sub
mov
lret
or
or
lock
test
inc
adc
sbb
inc
xor
out
test
push
ljmp
mov
pop
out
lahf
popf
psubsb
xchg
add
adc
sub
ficompl
stos
xchg
add
rorb
daa
loope
add
push
mov
sbbb
ret
and
fisttpl
lcall
dec
and
leave
sar
cmp
sub
jge
mov
xchg
and
ss
shl
shll
movsl
cwtl
sbb
roll
popf
or
inc
mov
push
imul
push
mov
dec
leave
stos
add
push
adc
imul
lods
test
gs
out
inc
pushl
xchg
and
or
mov
push
cmpb
sbb
testb
mov
mov
ss
data16
jbe
nop
xor
sbb
inc
stos
jecxz
dec
add
rclb
mov
jne
push
lods
pop
inc
mov
xchg
push
das
scas
sbb
icebp
jb
xchg
sub
add
cld
xchg
roll
cmp
lods
push
add
or
adc
test
cmp
add
push
pop
in
mov
nop
shlb
mov
or
add
pop
testb
mov
pop
sti
adc
icebp
mov
xor
xchg
jmp
cmp
icebp
or
shlb
cmp
ret
cld
movb
mov
sub
add
cmp
aam
pusha
jo
pop
test
mov
sub
or
xchg
cmpl
rorb
jno
cmpsb
jb
stos
iret
loop
ja
cmp
and
add
lret
ja
imul
int
enter
mov
ljmp
push
cmp
jae
pop
cli
xor
adc
cli
out
inc
rcll
rol
in
mov
adc
lock
cmpl
sub
cmp
jmp
lret
loopne
push
xchg
lds
mov
and
sub
cmp
outsl
jb
popa
cmp
xor
or
or
add
out
out
xor
inc
loop
fwait
pop
cmp
or
xchg
leave
or
stos
and
adc
pop
enter
and
ja
outsl
movsb
sub
sub
mov
pop
dec
sub
jge
loopne
xchg
movsb
add
inc
or
add
jae
or
inc
adc
mov
add
add
dec
ret
ret
add
ror
or
sub
push
jecxz
mov
inc
cmp
std
mov
and
xchg
in
rolb
imul
loopne
pushf
mov
lods
je
jne
push
mov
aam
addb
mov
jg
rolb
xorb
xor
loope
inc
pop
rcll
pushl
or
in
dec
shlb
pop
xchg
sub
jp
fimull
adc
mov
sub
jne
adc
pushf
cmpb
sbbl
lahf
sbb
sub
rclb
sbb
cwtl
pop
dec
adc
test
xor
mov
test
sbb
jecxz
xchg
and
cmp
test
and
push
and
js
push
inc
pop
inc
movsb
adc
sub
push
push
in
sub
and
dec
cmc
inc
inc
and
dec
loope
add
adc
pop
cmp
and
inc
jae
adc
into
sub
lret
and
shlb
xor
andl
dec
mov
push
add
aam
loopne
adc
or
fldl
das
or
sub
ds
fists
mov
inc
add
inc
ss
pusha
and
shrb
inc
jmp
cmp
jnp
mov
mov
mov
jo
cmp
out
add
and
mov
cmp
stos
cli
scas
rcr
ret
sahf
sub
in
fnsave
cmp
ljmp
or
incl
or
inc
or
test
cmp
jl
js
into
pop
xchg
jb
cmpb
jle
mov
pushl
aad
mov
clc
xlat
push
insb
and
out
ja
mov
sub
outsb
xor
and
adc
cli
lea
dec
adc
push
scas
test
push
orl
cmp
adc
js
fld1
push
cmp
iret
pop
andl
xorl
mov
stc
adc
jge
pop
xor
push
js
orb
add
pop
sbb
push
inc
jecxz
movsl
mov
jbe
jo
dec
or
and
aas
sub
or
adc
in
dec
adc
cmpsl
dec
subb
xor
inc
in
pop
leave
ret
sub
or
lds
arpl
pushf
test
push
dec
data16
xchg
push
ja
repz
cmpl
imul
imul
addb
push
mov
push
call
inc
cwtl
pop
inc
sarb
ficompl
mov
add
dec
nop
lret
je
rol
cmpsb
mov
mov
dec
cwtl
imul
fimuls
into
xchg
rorb
pop
loope
cltd
dec
dec
shll
pop
stc
movsb
add
sbbl
dec
lea
push
cmc
mov
xor
sub
cmpl
ds
cld
lret
and
adc
int
push
mov
push
fs
or
js
push
pop
pop
lods
imul
fwait
push
adc
lret
adc
test
pop
and
xor
xor
cwtl
rol
jmp
bnd
sti
cmp
sub
add
cmp
cmpsl
pop
dec
adc
add
mov
mov
dec
sub
and
test
inc
jle
cmp
test
add
adc
repnz
sti
push
sti
ja
pop
dec
xor
inc
adc
pop
popf
lret
adc
add
or
int3
cmc
pop
adc
pop
arpl
mov
push
and
outsl
sub
push
mov
pop
push
pop
sbb
mov
dec
sub
je
lods
pop
and
dec
mov
or
dec
sub
xchg
inc
push
enter
aam
fsubrl
adc
scas
test
dec
push
cmp
test
out
jns
jecxz
shrb
leave
je
pop
iret
loop
push
loopne
adc
loopne
jb
addr16
in
push
sbb
dec
popa
lods
and
adc
fs
rcrb
push
call
inc
clc
mov
mov
out
dec
aas
cs
imul
mov
sub
pop
mov
xchg
data16
mov
fistpl
movsb
push
pop
out
mov
cmp
dec
push
pop
push
fildl
leave
enter
adc
push
sbb
pushf
add
mov
cmp
iret
test
test
push
push
dec
and
inc
xchg
pushf
dec
and
and
inc
xor
mov
adc
repz
and
test
cmp
nop
inc
cwtl
xchg
iret
nop
pop
push
xchg
mov
and
mov
pop
leave
sub
arpl
pop
in
idivb
adc
neg
jns
jg
das
nop
daa
pusha
inc
add
cmp
cmp
and
rcl
leave
je
push
mov
jge
mov
mov
dec
cmp
push
cmpb
fisubl
daa
lock
ror
push
sarl
out
rcl
aam
fdivrs
xlat
fcomp
fstpt
repz
stos
sbb
or
inc
movb
jecxz
mov
shl
aas
stos
mov
sub
or
setne
mov
add
push
dec
push
add
push
add
add
cmp
sahf
mov
in
lock
adc
data16
dec
clc
pushl
test
xor
pusha
je
cmp
cmp
mov
mov
das
or
sub
fmull
and
adc
fdivp
pop
mov
jmp
push
les
inc
push
add
lret
imul
mov
call
dec
lea
or
mov
mov
mov
dec
div
push
aad
test
mov
push
ljmp
push
data16
call
imul
cmpsl
sub
and
mov
and
sar
jbe
jo
fisubs
jns
inc
add
adc
cld
or
test
icebp
test
mov
push
sbb
mov
mov
or
into
pop
iret
mov
jl
and
and
push
mov
loop
jns
and
xchg
movsb
addl
sbb
pop
cmp
inc
js
ds
or
mov
pop
xlat
cmp
sbb
jb
sbb
pop
lock
pop
mov
jne
or
pop
inc
fcompl
or
jb
push
push
xchg
out
cwtl
jne
daa
push
xor
sbb
jp
add
sub
jle
lea
push
test
fnstsw
or
mov
add
ss
imul
cmpsl
inc
clc
and
lea
cmp
push
repnz
ret
nop
sub
leave
sub
inc
test
mov
std
lret
inc
inc
sbb
rolb
and
add
jg
add
or
fidivrl
xchg
shll
jge
sbb
inc
sbb
jb
out
shlb
adc
or
add
and
jle
push
sarb
jge
jmp
inc
lock
neg
inc
aam
add
mov
lock
mov
lods
xor
mov
mov
sbb
inc
xor
pusha
lock
push
test
dec
push
pusha
cli
repnz
cmpsl
rclb
idiv
iret
roll
dec
inc
popa
cli
div
mov
mov
push
adc
loopne
adc
or
loop
or
push
imul
jmp
rorb
pop
or
flds
push
pop
loopne
call
aaa
mov
pop
call
scas
aas
mov
lock
jne
es
dec
sbb
and
jmp
sarl
and
sub
and
and
and
repz
sub
xchg
lret
rolb
inc
xchg
out
rolb
aas
lock
fmuls
push
rorb
aam
mov
or
xchg
jo
lods
push
sub
xchg
jecxz
repnz
mov
pop
and
out
mov
cmp
push
test
mov
out
sahf
out
mov
or
ret
jg
cmc
push
push
sbb
cmp
cs
mov
iret
inc
ret
pusha
mov
leave
adc
jo
mov
neg
pop
add
lahf
es
xchg
lret
jmp
fimull
cwtl
dec
clc
lock
push
cltd
outsb
lock
lods
bnd
and
icebp
ds
adc
xchg
inc
scas
and
jb
pop
das
jp
push
inc
push
pop
sarl
inc
inc
inc
sarl
dec
inc
inc
stc
mov
loopne
mov
lods
mov
and
push
or
loopne
orl
adc
adc
daa
cmp
test
lds
fwait
das
mov
testb
xchg
inc
add
adc
push
pop
ljmp
aam
sbb
cs
out
outsb
pusha
add
addr16
movsb
inc
push
scas
push
in
loopne
call
rcrb
cwtl
jne
dec
jge
neg
and
jnp
sub
insl
push
loopne
data16
imul
fsubrp
dec
push
imul
add
or
add
icebp
jmp
mov
jbe
xor
add
mov
mov
mov
or
or
ds
add
or
xor
sub
shl
std
or
rorb
testl
cmpsl
ret
sub
cmpsb
outsb
ret
je
out
enter
sub
mov
push
shlb
add
pop
cmovb
mov
aas
jl
rolb
add
mov
mov
adc
into
or
lods
push
cmc
in
sar
aam
dec
xchg
dec
mov
dec
cmp
jge
or
loopne
jl
cmp
movb
dec
cmp
jmp
inc
or
add
fadds
add
mov
mov
bound
push
xor
je
jae
push
jno
mov
mov
ret
and
add
cmp
adc
inc
test
ret
notb
adcb
inc
or
add
movsl
test
add
add
inc
imul
adc
dec
adc
or
fwait
je
sub
or
or
int
or
add
xchg
or
or
jne
or
mov
ret
pop
je
popa
movhps
movsl
or
mov
aad
mov
xchg
js
push
pop
adc
or
jae
ret
fnsave
mov
mov
mov
xor
into
pusha
push
jg
enter
rolb
pop
and
dec
sub
pop
pop
pop
adc
or
adcb
cvtpi2ps
inc
adc
adc
dec
sbb
push
pop
movsl
test
or
or
rcrl
lahf
push
or
xchg
mov
rol
mov
ret
lea
or
aad
or
outsl
add
jp
fidivrs
sbb
jo
test
xchg
adc
divl
inc
ljmp
cld
jo
or
cmp
dec
outsl
orb
fdivrs
dec
mov
sbb
fldcw
adc
xchg
or
out
pop
or
push
adc
jnp
adc
loop
mulb
adcl
rcll
addr16
jb
add
add
dec
sbb
inc
add
inc
insl
orb
pop
dec
dec
into
or
dec
in
add
or
adc
lret
add
pusha
into
mov
fidivrs
adc
push
add
lock
sbb
push
xchg
xchg
into
into
mov
pop
xor
pop
sub
push
pop
pmaxub
or
lcall
and
or
jle
hlt
mov
push
jno
pop
icebp
push
in
sub
shl
xchg
es
pop
xchg
sub
xor
pop
lock
pop
mov
popf
lret
es
cmp
mov
cmp
sbb
cltd
fs
into
xlat
jg
test
in
lret
jle
jb
ss
xor
jbe
pop
add
andb
pop
jne
jge
gs
mov
inc
jecxz
xor
or
pop
mov
inc
sbb
xchg
xor
or
and
jecxz
movsb
outsb
call
fcoml
pop
rcrb
or
mov
push
xchg
sbb
mov
sbb
insl
push
inc
sbb
and
jne
xlat
ret
sbb
fldt
pop
add
adc
add
add
jle
sub
sub
or
jge
cmp
in
pop
add
jmp
pop
mov
fwait
add
jle
cmp
imul
fildll
loopne
dec
mov
add
xchg
clc
pusha
cmp
loop
cmp
pop
xchg
push
into
add
repz
pushf
clc
lea
orw
and
mov
mov
jle
pop
add
push
push
adc
cmp
or
sahf
add
rcll
jno
les
sbb
enter
jns
jno
adc
loopne
pop
cmp
push
sahf
mov
push
or
xor
xor
add
mov
cwtl
loope
sub
dec
icebp
mov
mov
dec
add
ret
jl
push
cmp
add
or
push
incl
adc
add
or
rcl
mov
dec
mov
js
jne
scas
ret
loopne
and
push
cmp
sub
add
and
loop
push
mov
add
push
es
push
dec
dec
mov
xor
push
mov
dec
dec
sarb
or
inc
inc
jl
pinsrw
push
sub
push
push
sub
add
pop
clc
outsb
adc
dec
je
mov
sti
sbb
cmp
or
push
xchg
xchg
mov
ficomps
pop
inc
insb
add
dec
push
and
push
inc
ds
add
jl
push
add
sbb
xchg
pop
movsb
adc
add
or
add
rolb
call
jl
fiadds
pop
xor
mov
cmp
in
xchg
pop
add
sub
mov
cs
dec
test
int3
mov
hlt
cmpb
nop
or
xor
sti
je
ret
xchg
ret
in
bound
inc
popf
xchg
push
mov
pop
or
iret
movsl
sbb
sbb
ja
mov
push
jmp
dec
hlt
pop
mov
pop
inc
xor
add
jmp
out
jmp
decl
mov
cmpb
ljmp
js
popa
pop
adc
jo
adc
add
push
mov
int3
decl
mov
push
add
shlb
mov
add
repz
add
push
roll
cli
adc
add
jbe
ret
test
add
pushf
jp
outsl
dec
mov
test
js
inc
mov
mov
adc
fucomi
add
adc
jb
dec
push
or
mov
mov
imul
mov
sbb
movsbl
mov
or
jp
add
mov
inc
popa
and
sbb
push
add
sbb
xchg
and
es
jo
mov
neg
cltd
mov
dec
push
push
mov
not
pusha
cmp
and
sub
lcall
mov
mov
xchg
addl
outsb
pop
and
sub
push
je
xor
psrld
ds
in
pop
pop
and
add
clc
dec
push
xor
sub
subw
xchg
movsb
or
or
popf
rdmsr
fcoms
fldl
inc
inc
mov
push
call
and
outsb
mov
and
mov
add
inc
jnp
sub
sub
push
add
inc
dec
clc
pop
push
push
mov
push
jge
clc
scas
mov
jns
movsl
clc
adc
and
dec
push
jmp
jge
push
cmpl
insb
leave
incb
dec
push
cmp
sbb
dec
movsl
inc
dec
xchg
push
or
or
adc
or
pop
pop
outsb
sub
inc
xor
insl
mov
cmovp
push
add
lock
jb
insb
mov
pop
sbb
inc
adcl
push
sarb
mov
sbbb
nop
push
inc
dec
adc
iret
pop
or
push
jnp
jb
lods
popa
ss
xchg
jp
jo
add
push
popa
jb
adc
test
lock
pop
lea
lea
or
popa
add
jmp
or
out
push
ss
mov
shr
movsb
and
xchg
push
mov
push
mov
lods
push
les
pushf
cmpsl
push
lcall
inc
outsb
je
push
fisubl
push
dec
lods
or
fildl
mov
adc
dec
mov
and
push
adc
xor
sub
inc
test
add
lea
xlat
leave
and
cmp
cmp
cli
mov
rol
aaa
mov
or
mov
andb
inc
add
jp
adc
icebp
sub
insb
mov
inc
je
xchg
into
mov
mov
stc
loope
or
or
jbe
popa
add
push
add
sbb
or
ficoms
mov
shl
notb
or
shl
sbbl
add
je
inc
test
cmp
add
decl
xchg
in
stos
testb
test
test
and
sub
test
stos
aam
push
insl
sub
or
aam
jp
clc
cmp
or
inc
xchg
xor
mov
jecxz
add
sbb
je
dec
jb
lcall
cmc
jmp
idivb
jne
orl
icebp
push
xor
or
cmpb
push
and
xorl
and
dec
push
or
andb
xchg
and
ss
js
push
xor
ss
mov
push
sbb
cmpsl
imul
inc
mov
mov
dec
inc
cmp
pusha
arpl
mov
push
lret
push
shll
lret
mov
add
push
inc
mov
popa
mov
push
lcall
insl
mov
add
sbb
jmp
xorl
cmp
addr16
jne
push
shlb
inc
xor
adc
sbb
adc
cmc
or
sbb
mov
into
pop
push
or
movsb
mov
mov
jecxz
push
xchg
push
jl
dec
dec
jecxz
xor
push
pop
inc
jl
scas
je
inc
jge
sbb
les
push
add
cld
xor
test
mov
fisubrl
sub
addb
mov
adc
sub
push
add
mov
and
daa
loop
mov
jmp
push
jns
add
add
add
xor
inc
jne
pop
pop
add
enter
test
adc
cmp
aas
test
inc
mov
sub
in
push
pop
sbb
push
xchg
dec
and
push
xchg
outsb
jne
insb
fimuls
mov
adc
pop
dec
lahf
inc
pushf
test
aam
cwtl
mov
push
add
aam
aam
jb
fisubs
jp
add
orl
and
test
adc
inc
push
sbbl
adc
xchg
mov
xchg
mov
and
mov
mov
xchg
stc
lea
fadds
aaa
xor
pop
mov
dec
mov
or
mov
xlat
mov
out
das
shlb
inc
dec
adc
jno
push
jo
ljmp
pusha
mov
inc
mov
fsubr
cltd
rolb
mov
sbb
leave
dec
lcall
jb
movsb
inc
jno
dec
lock
fsubl
jmp
ret
or
mov
push
cmpsb
or
je
pop
incl
pop
mov
push
es
dec
std
or
mov
je
repnz
sti
jg
sbb
out
push
cmp
ja
add
cmp
adc
fdivrs
cmc
cmp
jne
shll
leave
adc
or
or
dec
test
jb
neg
pop
shlb
jbe
add
sbbb
push
cmpsb
inc
int
mov
mov
push
adc
loop
lret
mov
xor
pop
push
xorb
out
icebp
das
nop
dec
lcall
inc
bound
jno
aaa
stc
push
jnp
jmp
in
sbb
jge
lods
push
jge
add
ret
les
rolb
pop
andb
pop
xor
cmp
arpl
xchg
cmp
or
aas
je
adc
nop
jbe
lea
jae
dec
adc
jmp
mov
and
in
fcoms
add
cmpb
addl
jne
lcall
femms
or
inc
push
mov
add
notb
out
test
and
enter
add
sbb
mov
jmp
sti
movsl
in
mov
jne
into
aam
dec
xor
sbb
insl
rolb
jne
mov
test
ds
decb
cmp
mov
int3
push
dec
push
clc
add
adc
adc
push
aas
add
arpl
dec
xchg
mov
push
movsl
les
loopne
pop
pop
js
ret
aaa
mov
push
dec
xchg
and
mov
lock
popa
test
inc
jbe
push
inc
or
pushf
pop
jne
push
jmp
shll
test
xlat
and
imul
or
sti
push
test
cmp
rorl
adc
test
ljmp
push
and
push
out
xchg
iret
lea
mov
lret
je
mov
std
lods
jp
sub
or
push
insb
shl
push
adc
imul
xchg
or
inc
stc
xor
inc
shufps
iret
xor
out
push
jbe
outsl
or
xor
out
les
inc
add
push
sbb
jne
adc
in
push
out
cmp
or
and
faddl
repnz
add
aam
xchg
pop
addr16
outsb
or
xchg
idivb
sub
or
add
pop
sub
cld
shrl
xchg
or
mov
mov
dec
cmp
sub
mov
mov
test
dec
in
add
stc
adc
insb
adc
add
jb
push
add
test
leave
and
xor
call
xor
lock
inc
mov
mov
dec
push
in
lock
fisubl
js
cmp
push
in
xor
les
jne
pushf
mov
or
or
cmp
or
cmpsb
orb
gs
lret
enter
rcr
ror
bswap
xor
xor
addb
cmp
pop
in
dec
xor
gs
mov
or
or
loopne
or
xchg
xor
push
mov
add
lcall
fcoms
out
aam
fsubs
fisttps
in
xchg
int3
inc
xor
push
sub
les
test
inc
add
inc
gs
std
mov
cmp
insb
cmp
mov
loop
call
rclb
fcomp
xchg
xchg
leave
loopne
cmc
or
dec
out
fcom
adc
sub
lods
xchg
rol
pop
rclb
call
nop
inc
fidivs
add
add
fs
push
sti
or
sbb
test
inc
jb
test
fistps
leave
aam
call
mov
mov
push
movsl
mov
ret
fs
push
add
pusha
add
hlt
inc
jnp
int
xor
cmpsl
add
mov
in
dec
or
nop
outsl
rcll
pop
mov
pmulhuw
and
inc
jo
and
dec
mov
mov
sarb
leave
in
movsb
mov
sbb
inc
xor
or
add
cmp
inc
lock
sub
loopne
dec
or
push
pusha
leave
and
iret
and
jbe
jg
faddl
in
inc
jne
pop
inc
ret
inc
pop
in
jmp
pop
sarb
enter
cmp
enter
or
inc
inc
dec
enter
or
icebp
ret
and
lock
inc
dec
imulb
xor
lock
in
cmp
and
inc
jne
or
xchg
mov
scas
and
add
mov
in
adcb
in
jmp
ret
rcl
gs
call
pop
adc
movsl
fdivl
shlb
fwait
and
test
or
pop
popa
or
outsl
add
insl
mov
pop
scas
scas
or
sarb
or
mov
inc
outsb
jg
in
leave
enter
sarb
mov
leave
rorl
push
push
or
clc
inc
int
inc
roll
push
jmp
in
ss
in
ss
js
inc
stos
dec
adc
dec
xchg
or
int3
gs
adc
or
test
call
fsubrs
pop
add
adc
pop
sub
lea
add
xchg
lret
xchg
dec
insb
ret
pop
adc
mov
push
jne
mov
lock
sbb
pmulhuw
mov
das
in
sbb
fimull
lahf
call
push
loopne
loopne
adc
add
jg
adc
and
pop
inc
mov
inc
loopne
pop
es
push
dec
xchg
mov
pop
xlat
in
fcoms
in
cmc
test
jno
rol
roll
xchg
mov
push
pushf
adc
sbb
adc
or
jo
sub
push
adc
outsl
inc
fadds
sbb
mov
cmp
jmp
inc
jo
xor
sbb
je
mov
adc
inc
sub
fs
ja
fadds
xchg
mov
addr16
or
adc
mov
loopne
inc
pop
data16
call
shlb
lock
inc
jne
push
scas
add
jmp
mov
fsubrs
sub
vandnpd
in
dec
jmp
dec
adcl
fldt
scas
sub
ss
xor
mov
hlt
dec
xchg
gs
pop
xchg
xchg
cmp
xchg
adc
loope
sbb
loopne
xor
sub
pop
cmp
lds
cmpsl
mov
xor
xor
aam
leave
or
dec
push
cmp
dec
sub
and
push
mov
push
mov
sbb
xor
push
xchg
jne
jns
addb
fadds
push
xchg
test
dec
cs
mov
add
sub
in
cmpsb
cwtl
cmpsb
movsb
call
mov
loopne
or
hlt
add
jb
rorb
mov
push
in
lock
xchg
leave
test
add
xor
in
subl
in
clc
or
and
scas
mov
jo
cmpsl
mov
xor
ret
test
insl
pop
mov
mov
xchg
int3
push
dec
mov
sub
mov
outsl
ficoml
adc
mov
fadd
in
ss
in
in
call
dec
aam
pusha
jo
enter
add
or
sub
cwtl
inc
cmpsl
aaa
rclb
sbb
and
push
push
mov
mov
addb
cmpsb
mov
or
in
ret
and
es
adc
movsl
movsb
cmp
xchg
xor
xor
or
add
fwait
or
push
mov
test
cmp
cmp
jo
pop
and
adc
scas
xor
lcall
addl
ret
and
jbe,pn
enter
pop
adc
xchg
rcrb
mov
cmp
pop
mov
mov
sbb
mov
test
inc
pusha
xchg
rol
outsb
lcall
pop
enter
pop
mov
cltd
nop
imul
ficoml
aad
push
pop
out
aam
lods
in
cmp
cmp
sbb
add
psubsb
sarb
adc
and
subb
daa
mov
jns
pop
cltd
xor
fwait
nop
pop
inc
add
and
sub
aam
inc
fimuls
hlt
xchg
inc
xor
pop
stos
les
adc
mov
xor
xchg
or
or
arpl
dec
pop
popa
xor
jmp
into
and
dec
push
loopne
fwait
push
test
enter
push
adc
loopne
mov
pop
push
or
fimull
fwait
xchg
roll
sbb
mov
loopne
pop
lahf
gs
mov
pusha
hlt
cltd
call
adc
das
in
popf
adcb
add
xchg
int
pusha
and
dec
and
adc
push
add
cltd
das
nop
mov
or
popa
pop
dec
stos
sbb
movsl
add
scas
loopne
xchg
mov
push
popa
stos
aam
mov
mov
push
loope
sbb
mov
repnz
push
mov
xchg
cwtl
pushf
mov
idivl
bound
xor
mov
adc
nop
arpl
in
das
movsb
sbb
cmpsb
mov
xor
mov
pushf
and
xchg
cmpsb
or
jb
fdivs
fs
movsb
sub
mov
xadd
iret
in
fisubrl
mov
push
fdiv
xor
or
outsl
adcb
add
mov
das
in
push
adcl
push
pusha
push
and
add
adc
mov
push
in
sbb
addr16
test
or
adc
test
adc
pusha
test
fisubrl
lock
inc
mov
cmp
sbb
push
sub
and
xchg
xchg
movsl
xor
enter
dec
je
push
push
lods
jne
lret
xchg
mov
dec
xor
push
insb
sar
or
push
nop
inc
push
sbb
sbb
loop
je
lcall
cwtl
test
insb
sbb
test
ss
jne
in
and
lock
pusha
cltd
loopne
call
jns
insb
in
iret
sbb
shlb
scas
xlat
fmul
pop
mov
imul
les
mov
psrlw
test
xor
cwtl
mov
outsb
dec
xor
mov
mov
mov
inc
lods
aad
xlat
fsubrl
inc
push
push
movsl
mov
aam
mov
jnp
jo
jo
enter
adc
rorl
jo
lock
push
xchg
popa
inc
jl
in
xchg
dec
pop
xchg
in
adc
push
or
popa
jmp
xor
call
call
pop
xor
cmp
xchg
jno
jnp
shrl
jmp
add
add
xor
push
sbb
sarl
lock
sub
push
adcl
xchg
adc
popa
push
movsl
sbb
add
punpcklbw
xor
test
popf
in
sbb
ja
imul
pop
xor
jae
inc
push
xchg
sbb
sbb
inc
mov
mov
cwtl
xor
pop
dec
xor
fistl
mov
je
pop
test
adc
je
dec
inc
test
je
push
dec
jno
test
inc
stos
es
std
xor
jne
or
sub
dec
mov
aam
jbe
add
cmp
mov
mov
pusha
xchg
or
mov
shrl
popa
lea
or
cmp
inc
add
sbb
in
mov
push
xor
inc
movsl
aam
add
lods
sahf
sbb
push
xor
data16
push
sub
movsl
js
pop
inc
xor
fsubr
add
and
das
push
inc
les
test
xor
jg
mov
cwtl
cmp
mov
insl
add
inc
mov
shrl
fstps
mov
pop
xchg
jecxz
fs
pusha
add
adc
mov
and
and
fdivrs
inc
insl
xchg
je
cmpsl
std
sbb
rorl
push
dec
fwait
mov
mov
inc
and
mov
dec
fdivrl
lea
adc
adc
ret
add
dec
adc
movsl
inc
mov
test
sbb
enter
in
pop
imul
add
push
inc
add
adc
sub
cld
ja
and
sub
cwtl
test
inc
inc
fcoms
push
jb
mov
jo
mov
outsb
test
das
les
sbb
xor
call
in
jle
adc
jb
or
add
sub
add
pop
enter
push
and
repz
into
jg
and
repnz
xor
cmpb
adc
push
mov
xchg
add
sbb
mov
cmp
into
xchg
jl
ret
mov
push
int
xchg
inc
xor
jle
mov
js
xchg
inc
add
pusha
jbe
sub
mov
pop
and
cmpsb
je
in
jle
inc
and
movb
pushf
jb
jmp
fs
push
jns
sub
push
push
dec
dec
dec
push
orl
repz
fs
xor
loope
enter
int3
shrb
push
add
andl
push
jmp
mov
sahf
jmp
sub
jmp
push
std
cwtl
movsb
sbb
movsb
push
test
sbb
add
add
push
cmp
add
sbb
push
dec
jg
jns
push
mov
inc
fsubp
data16
stc
mov
cmp
inc
push
insl
mov
nop
sbbl
add
jg
gs
gs
es
outsl
push
gs
outsl
jbe
inc
outsl
jb
gs
push
popa
insb
add
mov
les
mov
lods
std
mov
repz
cmp
inc
add
cmpsl
stc
cmp
push
push
push
adc
sbb
lahf
jmp
push
insb
je
mov
sahf
pop
inc
outsl
jg
push
dec
out
sahf
out
push
outsb
push
add
repz
pusha
cmp
repz
cmp
pop
add
inc
addb
push
shll
incl
push
xor
aaa
shrl
das
push
push
lahf
es
iret
repz
adcl
in
fnstcw
xor
outsb
fwait
and
push
fists
pop
jl
testl
outsl
ja
dec
idiv
ljmp
fs
jb
addr16
jae
push
dec
push
outsb
fs
insb
popa
adc
loopne
push
and
wrmsr
xor
push
pop
aaa
and
add
imul
pop
sti
and
arpl
jae
das
insl
imul
fidivl
aas
add
jnp
scas
mov
loope
test
cs
inc
push
popa
jne
icebp
fstpt
jne
adc
outsb
cs
mov
and
inc
jae
imul
push
test
arpl
jb
ljmp
outsl
sbb
xchg
aaa
bound
ss
inc
lods
cmp
je
xorb
push
push
dec
flds
cmp
fbstp
arpl
dec
outsb
loopne
rcrl
addr16
gs
ret
mov
in
xchg
jo
jns
popa
fcmovu
arpl
pusha
dec
push
push
dec
imul
xchg
or
push
push
je
iret
dec
cli
mov
loope
push
in
outsb
fst
mov
je
popa
arpl
gs
je
jl
dec
lock
sbb
addr16
es
shll
arpl
loop
jb
cmp
mov
out
add
jo
jns
outsb
jae
je
jo
jno
dec
push
xor
mov
clc
lret
rcl
push
fcomps
sbb
decl
cmp
jnp
push
outsl
data16
call
sbb
gs
das
dec
sub
js
test
push
inc
sub
adc
fisubs
cmpsl
bound
aam
mov
jne
insb
jg
movsb
bound
andl
jbe
inc
aas
inc
outsb
popa
dec
insb
imul
bound
jo
mov
js
fwait
daa
mov
or
outsb
je
adc
addr16
je
orb
mov
rcrb
lret
mov
shll
call
inc
dec
sbb
cwtl
push
fs
mov
iret
cmp
fildl
ja
push
xchg
loope
xlat
cmpsb
xchg
sub
sbb
or
dec
inc
fdivs
andl
sbb
je
mov
jns
push
mov
push
inc
pusha
push
and
push
pop
jmp
adc
stos
jae
add
jp
push
incb
addl
xchg
outsb
inc
pop
je
scas
inc
outsb
in
data16
into
out
cmp
add
ret
scas
int3
and
push
pop
cmp
popa
xchg
cmp
push
imul
ds
outsl
pop
lods
leave
pop
pop
pusha
inc
pop
jge
add
ss
fldt
inc
gs
and
dec
je
mov
sub
ret
cmp
push
push
xor
rolb
sbb
mov
gs
push
out
inc
testb
adc
push
sub
push
dec
dec
dec
dec
mov
repz
inc
push
or
pop
and
cmpsb
add
fs
or
pop
jl
js
fists
jo
loopne
into
xchg
jae
xchg
add
and
js
fdivs
or
add
addb
mov
bound
daa
out
jns
adc
arpl
cs
sub
jg
or
daa
clc
call
sub
inc
sub
mov
inc
push
inc
dec
jo
rcl
mov
ss
jbe
cs
push
xchg
cs
aas
xchg
push
push
push
cmp
sbb
pop
pop
add
add
aas
cmp
or
bound
dec
mov
subl
jo
jne
cmp
daa
inc
push
js
sbb
adc
jo
push
xor
js
insb
outsl
addr16
ss
notb
push
das
ja
ret
jl
add
lahf
arpl
jb
iret
bound
or
sub
ja
jae,pn
fcompl
test
jns
sub
inc
pop
into
mov
inc
mov
inc
pop
and
je
mov
lret
sub
mov
and
jg
mov
sub
pop
adc
and
and
mov
pop
fs
pop
xorb
add
fcoms
mov
jo
and
sub
imul
je
cs
push
fcoms
outsl
aaa
mov
dec
sub
insb
and
mov
repnz
mov
popa
cmpsl
push
lock
mov
loopne
mov
aaa
pop
je
pop
aas
es
fucomip
jne
je
jae
imul
dec
dec
inc
pop
pop
inc
sbb
push
inc
dec
push
pop
push
push
inc
push
pop
pop
pop
inc
pop
inc
jo
gs
pop
adc
out
jge
adc
add
clc
mov
mov
test
adc
insb
mov
fnstenv
add
pusha
nop
int
mov
add
mov
xor
and
bound
jae
jo
enter
aaa
and
mov
popa
fs
sub
roll
dec
inc
and
add
dec
push
and
push
push
pop
pop
jno
or
jnp
cmp
inc
popa
inc
pop
lret
push
push
xlat
mov
call
daa
sbb
push
iret
fnstsw
mov
outsb
mov
insl
push
arpl
push
pop
mov
and
in
adc
or
add
cmpl
dec
popa
inc
popf
jl
scas
pop
sub
cmp
jl
lcall
adc
fs
inc
adc
xchg
adc
mov
mov
xchg
popa
mov
je
jo
das
das
xor
xor
cmp
jecxz
pop
jne
push
dec
in
or
dec
stos
lret
adcb
daa
cmp
lods
xor
cmp
and
mov
push
jb
fcmovne
pop
or
pop
inc
jo
ss
push
rcr
cs
push
outsb
jo
aaa
cmp
inc
inc
cmpsl
sub
gs
addr16
jns
jne
or
icebp
jmp
bound
es
add
cmp
xchg
out
cmp
jne
fldcw
sbb
arpl
add
mov
pop
cmpl
or
pop
pop
pop
pop
je
fwait
dec
adc
test
pop
jo
pop
fs
arpl
inc
je
pop
mov
push
das
popa
cmp
xchg
popa
in
bound
mov
aaa
out
rcll
sbb
dec
dec
mov
cld
dec
dec
and
push
call
popa
inc
dec
adc
mov
inc
adcl
pop
jne
push
pop
daa
nop
cmp
push
push
dec
inc
popf
lcall
jl
inc
adc
jae
fildll
push
mov
push
sbb
in
pushl
aaa
xor
xor
xor
aaa
cmp
cmp
cmp
mov
scas
mov
xor
cmp
cmp
data16
inc
cs
mov
push
xor
testl
outsb
and
jb
push
jmp
das
and
das
cmp
add
add
adc
adc
push
push
aas
aam
sahf
adc
fwait
lods
xchg
dec
pusha
add
aas
push
cmpb
inc
add
addr16
adc
es
test
lcall
shlb
fs
push
sarb
push
or
rclb
inc
lahf
incb
gs
push
push
dec
dec
dec
jmp
cmpsb
and
cmp
stc
xchg
jo
cmp
rol
mov
les
jg
pop
test
mov
sbb
gs
push
adc
mov
int
push
adc
incb
push
icebp
mov
test
push
hlt
jb
jnp
pop
imul
test
shlb
je
cmp
push
dec
inc
fwait
dec
outsl
dec
and
jne
mov
popa
je
rcr
xlat
dec
decl
sub
lahf
data16
mov
sbb
repz
aaa
cmp
xchg
lods
inc
add
mov
mov
cmp
mov
scas
mov
divb
mov
xlat
outsb
gs
add
imul
pop
cmp
test
dec
out
in
pop
adc
push
add
push
inc
inc
push
inc
movsl
rolb
pop
fnstcw
stos
ljmp
sub
mov
adc
std
add
cmpsl
and
push
lock
push
dec
dec
adc
cmp
inc
js
testb
pop
rcrl
arpl
loope
jl
out
mov
mov
mov
sub
or
ret
pop
push
arpl
mulb
stc
jle
jle
pop
sub
jge
push
aam
jae
and
enter
ret
cs
add
push
push
mov
xchg
sahf
mov
mov
fadds
hlt
push
flds
xor
push
cmp
int3
push
push
addb
hlt
jns
out
push
movsl
xor
push
in
cmp
out
add
push
mov
jmp
orl
out
imul
mov
inc
jmp
cmpsl
stc
cmp
push
in
jns
out
or
dec
push
pop
jno
scas
int
fucom
into
add
push
lock
call
ds
jmp
lcall
dec
aam
cs
jb
ds
push
fists
fadds
xlat
sub
iret
repz
mov
and
dec
jnp
xor
cs
push
scas
push
es
pop
pop
jl
lods
outsl
jecxz
inc
es
sahf
testl
push
ljmp
ficoml
scas
nop
bsf
jge
in
mov
aas
outsl
rcrl
cmp
fidivrs
xlat
pushf
pop
das
rolb
push
adcb
shll
sysret
out
jnp
rcrl
push
mov
std
push
mov
pop
daa
push
aad
xor
ds
cmpsb
inc
pop
add
inc
mov
rcr
xor
div
push
dec
push
add
nop
std
dec
mov
insb
xchg
cmp
and
xor
aaa
pop
sbb
test
add
daa
pop
sbb
test
add
adc
push
and
pop
sbb
aas
push
push
enter
pop
pop
sbb
mov
aad
pop
dec
scas
sub
adc
jg
test
mov
mov
mov
mov
xor
pop
mov
sub
adc
mov
jae
and
pop
add
idivb
lea
mov
inc
jo
decl
mov
mov
adc
add
and
shl
imull
movsb
push
insl
ss
adc
cli
fadds
mov
mov
sti
pop
mov
repnz
imul
adc
dec
xchg
push
push
pop
xor
cli
stc
fsub
test
lock
jmp
add
scas
int
mov
lcall
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
mov
daa
push
cmp
adc
pop
adc
addr16
orb
and
pop
stos
mov
ds
push
xchg
orb
inc
push
dec
cmp
out
ss
add
inc
addr16
or
adc
inc
dec
shll
adc
aaa
mov
seta
pop
mov
xchg
mov
sahf
mov
outsb
dec
mov
pushf
pop
in
in
inc
sub
lods
sub
mov
int3
das
inc
out
fdivl
dec
repz
mov
cmp
cmp
inc
nop
in
pop
in
out
shll
pop
cld
dec
pop
mov
call
and
mov
add
adc
cs
xor
decl
dec
xchg
pop
shl
dec
mov
xor
mov
dec
mov
lods
sub
pop
sbb
mov
pop
mov
shlb
mov
sar
mov
mov
push
dec
dec
and
and
jbe
or
push
dec
and
or
dec
push
adc
adc
fadds
dec
test
clc
outsb
mov
inc
dec
push
out
jae
pop
daa
out
lahf
adc
int
mov
jle
arpl
cmp
mov
fstl
jo
xor
push
jp
adc
and
fsubs
fimuls
mov
jne
out
xchg
push
test
add
jne
cmp
decl
and
insb
push
outsb
fdivrs
cmp
xor
xor
inc
sub
sub
xor
inc
xor
inc
aaa
xor
jg
add
pop
jl
inc
push
inc
dec
dec
push
push
dec
dec
shlb
dec
push
push
mov
cmp
pop
jbe
cmp
outsb
pop
sahf
adc
imul
sub
mov
dec
push
ret
push
je
push
cmp
bound
push
jmp
mov
aad
push
dec
xor
int
out
sbb
aas
push
xchg
loop
fisubrl
inc
arpl
sbb
bound
je
bound
add
bound
pop
sbb
pop
not
push
mov
mov
pop
iret
inc
dec
and
fistpl
push
push
xchg
jp
xorl
jbe
push
adc
dec
xor
push
inc
push
cmp
jne
jns
or
pop
xlat
inc
cs
xchg
xchg
or
out
lret
mov
aaa
inc
push
xchg
outsl
jbe
idivb
inc
xorb
pop
rcll
mov
dec
addr16
in
xor
or
dec
or
mov
cmp
mov
xchg
jbe
je
outsb
pop
push
out
cmp
fidivl
jnp
or
iret
dec
push
outsb
aad
negb
out
dec
insb
aas
inc
jb
xchg
mov
jbe
sub
shlb
lret
mov
push
sub
movsl
push
cmp
es
insl
jo
cmp
push
push
jbe
sub
cmp
aas
xor
xor
sub
add
lock
add
sahf
neg
ficomps
dec
xchg
dec
inc
xadd
adc
push
sbb
jns
xor
jl
out
mov
mov
lcall
add
pop
add
fwait
int
or
pop
or
insb
add
das
adc
sbb
and
inc
iret
xor
inc
mov
mov
fiadds
mov
mov
fwait
int
popa
xchg
sbb
sub
add
fldcw
xchg
pop
adc
insb
ss
and
add
add
push
dec
str
fldcw
add
inc
stc
das
incl
jge
and
adc
jne
lret
cli
addl
jne
test
add
push
test
outsl
pop
or
ss
sahf
sub
in
or
or
in
jl
jl
or
jl
jl
insl
add
data16
or
mov
imul
dec
cwtl
push
or
xchg
xor
test
rolb
repnz
jo
sarb
mov
xor
ficomps
je
pop
jns
sub
hlt
xor
xor
cmp
pop
test
jne
jae
sbb
aas
cmp
sub
pop
fwait
daa
iret
xchg
jle
loopne
add
inc
or
jns
scas
lods
mov
mov
jae
pop
xchg
push
insw
scas
xor
lcall
xor
or
jne
cmpb
push
push
push
cmp
jo
imul
outsl
imul
popf
loope
dec
inc
and
les
gs
and
adc
xor
loopne,pt
lock
outsl
inc
xchg
mov
fnclex
sub
cmpb
in
adc
push
repz
pusha
daa
push
pop
stos
pop
cmpsl
pop
pop
pop
pop
mov
xchg
jo
jns
mov
fcomp
or
inc
pop
pop
addr16
fisubs
and
pusha
add
fisttps
dec
out
mov
dec
enter
dec
mov
in
or
sub
enter
subb
dec
jg
xchg
push
mov
das
jg
adc
sub
stos
test
pop
inc
jns
in
pop
sbb
adc
adc
pop
push
cmp
lahf
comiss
jmp
lock
in
test
xchg
enter
movsl
stos
sbb
sub
adc
lea
daa
jg
fisubrl
aaa
mov
xchg
xor
das
lds
enter
mov
pop
inc
or
or
and
das
mov
sub
addr16
arpl
das
sbb
test
insl
scas
inc
negl
lock
imul
sbb
or
add
popf
jo
cmpl
scas
push
inc
outsb
imul
orb
sbb
inc
pop
or
xlat
lock
add
pop
add
mov
push
bound
pop
inc
pushf
pusha
andl
insl
loopne
xor
cmpsl
es
cmp
sub
cmp
bound
push
test
imul
das
or
and
adc
nop
cmp
add
loope
shll
xor
into
pushf
shll
add
js
es
fdivrs
das
or
cmp
sbb
es
sarb
je
jo
inc
cmp
call
push
subb
scas
jnp
add
addr16
shl
and
jl
jp
and
popl
ret
sub
insl
add
push
outsw
pop
or
in
pop
aam
push
pop
jmp
adc
mov
sbbl
daa
cmp
mov
mov
pop
in
inc
ss
ja
pop
cwtl
je
ljmp
daa
sbb
push
sti
inc
loopne
in
adc
shrl
and
lds
inc
add
mov
dec
sub
iret
ret
call
jae
fnstsw
pushf
push
in
das
pop
xor
mov
and
cmp
test
and
rorl
vunpckhps
imul
fimuls
mov
pop
xchg
cmp
sbb
dec
addr16
add
jp
push
mov
out
cmpsl
sub
shll
dec
gs
or
insb
iret
jae
cs
xor
dec
cmp
or
cmp
sbb
data16
xor
lea
push
push
ret
pop
addr16
xchg
jne
dec
mov
mov
jmp
jne
or
cmp
dec
xchg
cmp
add
push
sbb
add
push
cmp
insb
cli
addr16
insl
cwtl
jns
into
xor
mov
sub
mov
out
xchg
out
das
aaa
and
cmp
or
mov
xlat
mov
or
cmp
xchg
jae
insb
rorb
sbb
or
cmp
xor
xor
jb
rcrl
jo
movsl
or
push
pusha
pushf
push
push
data16
add
pushl
je
cmc
loopnew
sbb
lds
mov
and
and
int
and
push
adc
sahf
popa
pusha
loop
and
mov
and
imul
jb
xor
pop
lods
test
push
xchg
xchg
and
jo
xor
push
mov
out
inc
push
push
sub
sub
jle
xchg
loopne
inc
jae
sub
and
sub
out
dec
dec
and
pusha
cmp
bound
sti
aaa
shll
pop
int
and
faddp
enter
adc
dec
dec
sti
pop
cmpl
mov
adc
inc
xchg
shlb
pop
xor
cli
or
inc
sbb
aam
es
and
push
push
dec
jo
daa
mov
xchg
and
adc
sub
push
inc
dec
dec
dec
inc
push
pop
sbb
aam
addr16
roll
jne
inc
icebp
pop
aas
and
sbb
imul
lock
dec
push
pop
mov
add
inc
dec
push
lock
mov
inc
mov
sbb
loop
lea
notl
or
inc
push
outsl
push
push
add
stos
lods
outsb
pop
cmp
iret
or
mov
or
lcall
movsl
inc
mov
push
mov
in
sub
mov
icebp
sub
mov
sub
mov
mov
add
adcb
sub
mov
popf
sbb
bnd
mov
push
int3
pop
sub
mov
fwait
pop
cmp
sbb
jge
inc
das
in
test
shl
xor
cmp
sub
sahf
pop
pop
cs
push
push
jb
add
fcmovbe
push
inc
push
dec
inc
or
push
arpl
cmp
sub
push
cmpsl
mov
je
pushf
cmp
and
popa
andb
cli
out
insl
pop
inc
cwtl
adc
call
fiaddl
sub
outsb
sbbb
sahf
adc
sbb
cmova
or
faddp
out
movsw
pop
cmp
jno
push
iret
xchg
pop
xor
pop
sahf
ss
inc
inc
jns
outsb
je
sub
mov
cmpl
lods
loope
and
ds
gs
mov
dec
or
cmp
jb,pn
adcb
jb
test
out
test
xchg
flds
jmp
jg
int
mov
or
bound
cmp
or
cmp
fdivr
add
inc
jae
sub
inc
jb
jbe
jge
xor
sub
pusha
shrl
in
pop
shlb
dec
jbe
dec
ret
cmp
sbb
mov
and
cwtl
popa
push
and
aam
bound
data16
push
das
js
mov
sub
addr16
adc
pusha
sub
jb
int
sbbl
insb
lahf
jns
outsb
and
cmpsl
pop
inc
cmpsl
mov
add
bound
jmp
sbb
xor
cmpsb
mov
and
andb
and
sbb
mov
aad
jo
cmp
data16
push
pop
or
ja
stos
sub
adc
cmpsl
pop
sbb
xchg
sub
push
mov
shrb
aad
pop
mov
loope
mov
arpl
jno
sub
iret
dec
imul
popa
test
in
jb
cmp
sbbb
flds
mov
add
push
ss
jo
fwait
cmp
addl
lahf
inc
adc
test
xor
shrl
ja
and
in
ret
push
push
call
or
and
push
xchg
mov
dec
in
pop
adc
and
add
xor
popf
in
repnz
add
push
aaa
inc
jnp,pn
imul
xor
xor
dec
fdivrs
xor
ds
repz
pop
xor
aaa
xor
addr16
dec
mov
mov
inc
dec
push
les
fisubrs
and
push
call
ret
pop
add
jg
dec
push
dec
dec
push
inc
push
dec
cs
dec
push
loop
orl
imul
mov
push
add
inc
jo
xor
inc
xor
cmp
mov
mov
cmp
lods
and
adc
popa
or
mov
cmp
cmp
cs
outsb
je
imul
add
daa
hlt
adc
idivl
xchg
push
cmp
cmp
adc
mov
cmp
jge
mov
loopne
daa
push
push
add
popa
das
test
jb
push
push
les
push
or
mov
fiadds
push
dec
cmp
data16
mov
je
cs
or
lcall
cli
mov
shl
out
lret
pop
xchg
mov
push
mov
mov
pop
dec
faddl
xchg
pop
in
add
add
daa
pop
or
xor
jl
mov
inc
inc
add
call
push
dec
dec
push
pop
dec
push
push
push
pop
jae
out
inc
cmpsl
mov
outsb
pop
outsb
gs
pop
inc
add
outsl
cmp
roll
dec
push
xchg
xor
inc
sbb
jns
inc
imul
andl
pop
and
daa
aaa
xorl
or
cs
out
fs
xchg
rcrb
adc
outsl
fadds
addr16
dec
inc
inc
dec
pop
dec
inc
inc
dec
xchg
cld
add
dec
inc
push
push
inc
push
inc
mul
aam
lea
mov
push
mov
push
inc
imul
inc
pandn
or
arpl
test
pop
jg
jg
scas
bound
js
jg
roll
fsubs
test
mov
test
pop
xchg
push
inc
jo
mov
out
push
into
add
xchg
lock
jo
mov
or
int3
pop
inc
sub
xchg
mov
data16
pop
adc
push
or
add
in
jl
mov
into
mov
scas
adc
cmp
or
cld
cmp
add
aam
es
es
cmpsl
out
sbb
iret
push
sub
rcrb
lods
popl
and
je
mov
push
cwtl
pop
negb
adc
ret
push
loop
mov
sub
pop
push
clc
out
int3
push
inc
inc
push
or
push
inc
dec
push
inc
pop
push
dec
inc
or
hlt
push
pop
incb
inc
inc
or
cmp
mov
cmp
cmpsl
push
add
fisubl
push
ja
outsl
mov
jne
jns
cmpsl
xor
inc
push
aas
mov
mov
cmp
pop
mov
scas
inc
pop
dec
push
inc
push
inc
shlb
ficoms
dec
push
and
push
xor
ja
sbb
aaa
inc
pushf
mov
es
lods
je
jmp
dec
push
sub
aaa
pop
jle
push
cli
inc
ucomiss
mov
xchg
iret
and
add
and
mov
inc
jo
xor
cmpl
cwtl
das
mov
inc
aaa
jno
sti
shlb
jmp
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jmp
push
push
je
mov
andb
fwait
inc
shrl
xchg
out
popf
rorl
mov
jmp
dec
fsubrl
stc
pushl
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
call
and
cs
insl
sub
adc
or
or
cs
ret
sub
call
dec
data16
mov
call
cltd
test
push
call
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
movsl
pop
lock
arpl
repnz
jg
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
cmp
jecxz
push
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
idivl
cld
mov
inc
inc
sub
ljmp
adc
pop
pop
pop
add
sahf
addr16
imul
or
jne
ja
jns
xor
cld
sbb
xor
ss
cmp
sub
aaa
sub
popa
add
dec
jne
data16
pop
loop
loopne
decb
nop
push
les
add
adc
out
ficomps
movsb
lods
fwait
xor
add
lods
pop
fstp
jbe
ja
pop
cmp
mov
jo
lock
pop
sar
out
ja
or
or
fisttps
imul
push
ja
addr16
cmpsl
cltd
icebp
push
mov
gs
fiadds
push
loopne
mov
push
pop
je
dec
or
sub
or
imul
pushf
sbb
push
and
mov
sub
mov
sub
dec
mov
push
xor
ss
and
mov
iret
inc
or
fs
or
fsubl
cmp
or
or
sbb
inc
xchg
std
inc
loopne
outsb
cmp
subb
orl
push
ss
lods
ljmp
jg
push
sbb
dec
aad
and
sbb
out
gs
stc
and
and
or
dec
shrl
cmp
das
js
fwait
loop
sub
sub
pop
push
mov
adc
push
iret
repz
jo
mov
lcall
mov
pop
das
mov
rcll
xchg
sar
or
adc
decl
cmp
adc
movl
mov
js
push
daa
aaa
mov
cmp
jne
lock
mov
jno
pop
add
xor
bound
shll
cwtl
cmpsb
cmp
idiv
push
sahf
je
push
loopne
icebp
test
inc
jne
xchg
push
and
add
dec
insl
push
dec
out
push
xor
psubusb
pop
sub
fnstcw
outsb
scas
loop
mov
fnstcw
cmp
push
mov
les
lds
sbb
sbb
push
jb
adc
cmpsl
sbb
shlb
xor
xor
push
jae
cld
xchg
xchg
push
jp
je
daa
ret
xacquire
inc
and
insb
shrb
xchg
imul
cmpsl
in
or
stos
popf
and
daa
jae
mov
rcll
cld
mov
repnz
sti
loopne
ror
sub
mov
aam
pusha
mov
dec
and
insl
icebp
movsl
data16
inc
loopne
out
gs
daa
std
stos
ds
sub
lea
mov
or
imul
jecxz
sbb
mov
xor
cmpsb
in
arpl
ljmp
dec
les
jl
inc
and
das
push
jb
xchg
addb
sbb
sub
xor
add
pop
pop
xchg
inc
cmpsb
imul
xchg
xor
push
mov
lcall
popa
pop
xor
push
push
ficompl
cmp
xor
sbb
aaa
xor
shll
mov
push
movsl
sti
add
add
cltd
mov
in
ja
outsl
outsl
ss
stc
or
fs
jo
sub
arpl
pop
push
mov
test
lock
push
xor
pushf
mov
mov
pop
or
or
mov
lods
xchg
adc
arpl
ljmp
pop
repnz
push
inc
aaa
insl
in
data16
std
cmc
pop
popa
dec
xor
das
inc
pop
or
fadd
sbb
push
arpl
aas
push
cltd
xchg
fnstsw
adc
push
in
inc
enter
cmp
jmp
push
enter
fcomps
scas
mov
inc
in
pushw
outsb
add
or
sbb
test
adcl
xor
loopne
imul
push
pop
lret
orl
mov
dec
xchg
ds
inc
pop
inc
and
dec
mov
lcall
sbb
push
pop
or
push
dec
inc
dec
daa
mulb
hlt
testl
outsb
movsb
jae
nopl
sub
inc
mov
pop
sub
jg
push
mov
jle
push
inc
incl
dec
jae
add
in
xor
cltd
push
adc
xor
pop
pop
push
loopne
in
inc
add
inc
add
into
dec
jnp
mov
add
loopne
cltd
lea
jg
pop
loopne
or
and
xchg
push
rol
das
lret
jno
icebp
pusha
sbb
jmp
inc
mov
clc
ret
movsl
add
cmpl
add
and
out
inc
pusha
sub
movsb
and
leave
adc
adc
cmp
push
das
imul
add
lods
mov
pop
push
mov
and
inc
dec
jns
jb
test
dec
push
fnsave
shll
orb
rcll
ljmp
and
sub
sub
cs
movsl
hlt
mov
cmp
cmp
ds
inc
das
pop
pop
inc
fsubrl
jnp
rcrl
sub
jne
push
pop
pop
das
sub
push
and
fsubrl
in
adc
adc
add
add
add
clc
xlat
push
imul
pop
and
push
pop
xchg
pop
ja
jle
aaa
je
push
pop
je
or
rorl
or
adc
int3
mov
or
sub
add
and
stos
in
daa
test
loope
sbb
aam
dec
aad
or
inc
dec
cmp
inc
inc
inc
pop
ret
notb
pop
lea
jmp
inc
outsl
js
push
int3
movsb
xchg
and
jns
imul
std
and
gs
arpl
push
jae
je
adc
adc
jle
inc
jb
jns
daa
pop
bound
movsl
movsb
sub
lock
sub
loope
or
shrb
call
insb
cmp
cmpsl
push
jbe
ret
xor
jo
jmp
imul
add
lahf
ret
dec
fs
and
sbb
inc
pusha
dec
xor
inc
xor
loopne
and
pusha
gs
inc
inc
stos
and
push
dec
dec
lahf
mov
sarb
testl
nop
cmp
jecxz
push
cmp
call
fstl
repnz
or
push
adcl
xchg
inc
push
push
push
push
dec
testl
push
jne
fsubrs
in
loope
cmp
lds
mov
aas
jg
popa
or
andb
call
mov
jg
push
sbb
fs
in
nop
xchg
enter
xchg
pop
mov
rcll
jne
adc
jns
pusha
push
or
pop
das
test
mov
push
outsl
xchg
daa
xchg
mov
in
mov
daa
popw
pop
cmp
negl
add
ds
sub
jnp
inc
jl
pop
jle
sub
divl
sub
sub
inc
loop
xor
arpl
mull
mov
mov
sbb
inc
aas
dec
pop
pop
or
insb
je
push
jb
imul
jo
ss
cli
test
movsb
sbb
inc
fadds
pop
push
inc
int3
or
mov
jl
daa
shl
push
xchg
fs
cmp
inc
add
cmp
repz
sub
add
daa
nop
jne
cmpsl
lock
imul
and
sub
sbb
and
fisubrs
out
sarb
enter
push
rolb
repz
out
mov
mov
xchg
ficomps
lahf
ja
adc
xchg
ss
add
out
imul
cmc
mov
rcrl
cmpsl
push
mov
cmpb
iret
jl
outsl
push
jo
push
fs
pop
pop
push
fdivp
cmp
dec
cmp
sub
sahf
add
sahf
cmpsl
push
es
shlb
sahf
out
sub
in
and
iret
movsb
mov
insb
pop
ds
repz
xor
clc
and
sahf
out
fdivs
out
out
hlt
and
push
movsb
js
and
or
pop
add
data16
xor
or
dec
jns
and
xor
data16
push
mov
lahf
pop
push
ret
clc
insb
fs
sbb
mov
or
ficoms
out
xor
mov
pop
inc
cmp
push
push
add
push
jb
sub
dec
add
sbbl
jb
addl
pop
addb
push
sbb
inc
xchg
dec
leave
push
imul
cltd
jbe
add
ja
adcb
incl
pop
cmp
adc
aaa
add
pop
rcll
fimull
sub
add
lcall
addl
mov
pushl
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
ljmp
scas
mov
mov
mov
mov
mov
mov
ret
enter
dec
lret
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
ljmp
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
jno
add
dec
mov
movsb
fsubs
cmpb
dec
cmp
cmp
idivb
sub
dec
and
jns
add
jmp
out
lcall
push
inc
pop
orb
jbe
mov
test
jbe
dec
cs
sbb
sub
addr16
ljmp
push
pop
jb
mov
mov
inc
bound
ja
dec
push
into
mov
into
cmpsl
xchg
popl
fnsave
inc
fisubs
sub
int3
lahf
mov
daa
mov
gs
sbb
dec
outsl
outsb
and
cmp
pushf
insl
jbe
mov
or
inc
aas
addr16
addb
adc
add
add
add
push
adc
xor
push
mov
push
inc
pop
fcoms
mov
flds
fsubrs
xor
faddl
add
or
js
jo
add
stc
inc
fdivrp
xor
push
dec
inc
dec
cmovns
add
push
add
push
adc
xor
sbb
dec
pop
pop
xchg
loope
add
and
cmp
cmp
dec
pop
data16
adc
loope
xchg
add
pop
cli
jg
pop
and
xor
push
xor
sbbb
fistpll
and
rclb
mov
flds
sbb
repz
inc
push
bound
xlat
mov
sub
xchg
xchg
dec
scas
scas
lods
dec
fbld
add
std
lahf
sub
leave
or
adc
out
leave
ljmp
mov
test
add
xchg
movsb
negb
inc
push
adc
and
cli
xor
and
xor
and
fcoms
add
fbld
xor
pop
xor
xor
xor
pop
bound
jnp
popf
je
inc
or
pop
pop
fistps
cmp
pop
push
bound
loopne
push
gs
pop
push
push
fmul
push
lock
bound
mov
int
add
mov
push
addr16
imul
dec
hlt
daa
add
mov
push
mov
add
outsl
loopne
dec
ss
int
lods
dec
pop
lahf
pushl
nop
test
xorl
ret
pop
mov
xchg
push
xor
cmpsl
stc
sub
add
mov
add
repz
jmp
mov
mov
repz
repz
nop
sub
repz
out
xchg
pop
mov
aas
xchg
sarl
mov
jg
jnp
iret
lcall
mov
repz
sub
mov
stc
arpl
adc
bound
int
ljmp
out
sahf
out
sahf
push
pushf
mov
fnsave
stos
into
jmp
sub
pop
cwtl
mov
sahf
cmpsl
sub
mov
shr
adc
cmp
mov
loope
ja
repz
cmpsl
bound
lcall
scas
iret
repz
jmp
cmpsl
cmp
imul
mov
aad
shrl
repz
mov
lods
repz
repz
fildll
scas
jle
mov
adc
mov
repz
push
ret
call
lcall
mov
cmp
outsl
mov
lds
mov
jns
cmpsl
inc
pop
lahf
ret
out
ds
movsb
negl
mov
imul
jl
xchg
roll
mov
lcall
mov
mov
jae
shl
mov
inc
push
movsl
loop
mov
int
mov
push
push
subb
repz
and
out
ret
mov
iret
js
xlat
sbb
push
dec
repz
xchg
mov
pop
rorl
out
cmp
out
ret
jo
sbb
push
inc
inc
scas
push
sbb
in
cmc
mov
jnp
xchg
popl
mov
mov
out
lret
mov
outsb
vzeroall
out
add
repz
add
fistpll
and
sub
hlt
mov
jae
pop
inc
cmp
mov
cmp
repz
add
add
mov
mov
pop
leave
rcr
xor
testl
outsb
push
add
mov
fidivl
bt
in
xchg
ja
add
fwait
dec
ds
xor
mov
enter
push
prefetcht1
sub
xchg
xchg
xchg
xchg
jae
movsl
lods
rcll
sbb
xor
inc
mov
mov
iret
insb
mov
jns
inc
je
jl
push
test
mov
xchg
or
movsb
lods
iret
iret
jb
sahf
pushf
call
cmp
sub
fiadds
and
xchg
out
sahf
sub
xor
xchg
xchg
xchg
xchg
push
insl
xchg
cmpsl
rcr
xchg
out
sahf
jmp
leave
repz
add
xchg
xchg
xchg
fistpl
pop
xor
xchg
xchg
xchg
xchg
mov
xchg
ret
push
lock
mov
mov
pop
dec
out
inc
and
sahf
ja
cmp
jp
sub
inc
push
push
rorl
add
add
int
vmwrite
daa
dec
push
aad
in
or
dec
sahf
out
or
std
syscall
popl
xor
pop
das
sub
shll
or
inc
cmp
enter
pop
arpl
imul
idivl
xorl
xchg
mov
or
xchg
pushf
mov
cmpsl
mov
out
into
out
cmp
dec
mov
sysret
out
or
jo
idiv
inc
and
cld
pop
inc
push
cmovl
ja
sub
popf
mov
mov
ja
jg
js
out
xchg
cmp
jp
inc
mov
sub
mov
scas
int
xchg
fildl
int3
push
ja
jns
cmp
add
or
jl
or
jge
inc
push
ds
dec
jbe
ljmp
js
push
daa
pop
lahf
pop
cs
jbe
shlb
pop
ds
dec
sahf
add
push
pop
jg
push
lds
push
push
aam
xchg
jl
dec
or
inc
jae
in
movsb
mov
mov
add
int3
pop
lar
outsb
jb
xlat
or
out
mull
xlat
pop
xchg
out
inc
mov
xchg
pop
nopl
push
pop
aaa
jns
daa
pop
das
wbinvd
divb
xchg
pushf
dec
and
outsb
mov
xor
jb
jp
in
dec
addb
in
lcall
push
or
leave
in
in
ret
shrb
jns
xchg
xchg
ljmp
adc
add
sahf
xchg
out
adc
sbb
cmp
out
sub
xor
xchg
out
cmp
push
push
sahf
outsb
repnz
bndldx
in
dec
adcl
and
jo
mov
call
sbb
lcall
into
sbbb
stc
mov
push
or
inc
or
inc
cmp
sbb
inc
pop
aas
xchg
jb
and
incl
dec
xchg
pop
push
xchg
fisttpl
addr16
outsl
push
jg
add
add
inc
insb
adc
pusha
aas
testl
mov
adcb
pop
in
inc
lahf
mov
daa
pop
pushf
mov
insl
daa
daa
daa
out
idiv
pop
cs
stos
rorb
or
pop
xchg
setne
or
or
daa
daa
xor
pushf
dec
addb
lahf
xchg
xchg
pop
in
xchg
pop
bound
xchg
xchg
xchg
jb
orb
xchg
lcall
leave
repz
mov
in
repnz
rcr
psrad
in
in
repnz
add
or
pop
sbb
and
rdmsr
push
sbb
sahf
inc
pop
dec
push
and
xchg
xchg
and
xchg
and
mov
lcall
iret
sub
repnz
cs
rorb
stos
js
out
xor
inc
outsl
adc
in
popl
mov
inc
ja
push
sub
xchg
out
inc
dec
jle
and
outsl
xor
inc
movsb
dec
dec
mov
mov
ret
push
add
jns
out
push
add
rorl
out
or
or
or
pop
mov
xchg
out
xchg
setle
cmpsb
jns
out
push
adc
cmp
in
movlhps
pop
fcmovne
leave
leave
rcr
loope
dec
aaa
bnd
icebp
psubw
sbb
popf
out
mov
push
and
cmp
loopne
inc
cwtl
and
sbb
cwtl
push
cwtl
pop
cwtl
addr16
fcmovne
xchg
cwtl
outsl
cwtl
ja
jg
je
out
xchg
repz
repz
sub
or
cwtl
ret
inc
xorb
lret
jmp
stos
dec
dec
dec
nop
dec
cs
push
and
cltd
xchg
push
push
inc
mov
addr16
sahf
loop
sbb
or
pop
push
pop
inc
dec
or
inc
cltd
dec
fsubp
andl
mov
and
cltd
subb
dec
addl
xchg
mov
xlat
fisubs
out
das
dec
cmp
push
decl
or
adc
add
jns
leave
and
push
add
je
pop
lsl
fisttpll
ficompl
in
jbe
mov
cmpsb
cmpxchg
mov
jns
mov
testl
dec
out
aaa
repnz
add
or
jns
add
add
in
bnd
fwait
push
fwait
outsb
cmp
cmp
outsl
pop
bswap
repz
add
push
ja
jg
mov
or
sahf
dec
xchg
or
mov
adc
iret
adc
aad
fisttpll
in
int3
hlt
jmp
sub
push
pushf
add
mov
pop
dec
mov
pushf
jl
iret
adcb
out
pop
and
push
jge
stos
pop
leave
in
pushf
pop
mov
dec
adc
das
adc
push
xor
pop
push
push
push
xor
or
popf
outsl
and
inc
dec
popf
cld
pop
mov
mov
imul
adc
add
je
xor
and
out
scas
cmpsl
scas
stos
dec
adc
call
and
loop
rcrb
jb
sti
popf
add
jo
daa
iret
push
sbb
aas
es
mov
in
ja
sahf
cmp
jl
mov
and
sahf
mov
jbe
cmp
mov
test
lock
sahf
xchg
xchg
jl
xchg
push
push
sub
inc
mov
add
lahf
sbb
and
fwait
nop
push
jb
fstps
mov
pop
lahf
aaa
test
insb
push
jge
call
les
inc
push
mov
mov
mov
mov
push
jb
add
lahf
push
push
jb
cmp
shr
jl
mov
pop
dec
mov
pushf
mov
add
out
sahf
fisttpl
adc
sbb
in
and
pushf
and
push
mov
xchg
imul
push
dec
mov
js
pop
enter
push
daa
repnz
pop
out
out
das
testb
jns
jl
mov
and
push
adc
push
sbb
cvttps2pi
push
daa
xchg
push
fnstenv
mov
mov
mov
in
adc
test
push
cmp
dec
push
xchg
add
je
pop
scas
xor
xchg
xchg
dec
cmpsb
xchg
movsb
mov
push
mov
rcll
in
push
xor
wbinvd
mov
outsl
mov
inc
xchg
sbb
enter
mov
adc
inc
cmpsl
sbb
orb
add
mov
mov
inc
xchg
out
in
pcmpeqd
pop
es
call
push
add
add
repnz
xchg
out
pop
push
push
pop
data16
cmp
jbe
aaa
leave
mov
mov
push
jle
jmp
setle
cmpsb
mov
js
scas
push
adc
mov
pop
jo
add
jg
mov
mov
xor
lods
pop
xchg
mov
repz
add
sub
inc
pop
jecxz
mov
or
pop
add
pop
cmp
xchg
pushf
sarl
cmp
movsb
lods
mov
and
xchg
add
xchg
pushf
call
pop
addl
or
push
and
add
outsb
and
pop
movsb
pop
movsb
daa
comiss
dec
dec
aaa
aas
inc
dec
dec
dec
dec
dec
push
pop
outsl
mov
pop
repz
mov
add
add
add
add
cmp
movsb
xor
loopne
sbbb
repz
sbb
and
add
add
jns
leave
xor
push
add
and
pushf
jecxz
pushf
jge
fcompl
pop
jb
cmp
sahf
dec
into
dec
sub
cmp
dec
inc
cmp
jo
cmc
in
sbbb
movsl
mov
jns
leave
movsl
shrl
dec
sbb
dec
hlt
cld
pop
push
pop
sbb
pop
aaa
pop
cmpsb
daa
cmpsb
popf
dec
ds
testl
push
out
mov
cmp
repnz
pop
cmpsb
push
add
pop
in
xchg
xchg
lahf
cmpsl
pushf
mov
das
xchg
dec
outsb
addr16
cmpsl
into
inc
cmp
add
push
sub
popf
xchg
jg
ja
add
pop
leave
xor
jne
dec
sahf
fildl
jge
add
cs
sub
mov
lret
daa
rcll
cmp
mov
insl
stos
add
sbb
pusha
mov
and
or
test
jle
and
pusha
cltd
dec
push
and
arpl
repnz
cltd
push
popa
pop
loope
enter
add
mov
jmp
test
cmp
mov
pop
in
sahf
out
add
add
fisttpll
pop
dec
or
gs
cmp
or
gs
insl
test
test
lea
adc
adc
sahf
out
mov
cltd
dec
push
rcl
lock
cmp
stos
adc
add
xchg
pop
dec
sbb
and
cmp
xor
dec
jb
enter
stos
pop
stos
popa
stos
inc
mov
imul
xchg
and
stos
lea
jb
stos
test
dec
dec
mov
push
outsl
fsubrl
pop
fwait
call
cmp
or
inc
repz
xor
cmp
inc
jle
leave
inc
push
xchg
and
arpl
push
mov
ja
dec
stos
movl
lahf
cmpsl
scas
dec
fimuls
pop
lar
divb
jns
loop
or
lods
mov
pop
and
adc
lods
mov
cmovbe
dec
aaa
jns
out
push
add
daa
dec
pop
data16
push
or
rcrb
out
iret
lods
ds
xchg
sahf
mov
clc
pusha
rclb
jp
and
pop
jg
adc
adc
data16
gs
int3
lock
lods
out
jmp
loop
lahf
stc
lods
dec
add
in
add
sbb
leave
in
and
sub
or
das
inc
xadd
data16
out
mov
lods
je
jl
test
fmull
xchg
out
push
pushf
dec
mov
mov
mov
jmp
add
cmpsl
cltd
test
leave
je
lods
xchg
mov
scas
scas
cmpsl
adc
sbb
push
scas
enter
sahf
out
jbe
andnps
gs
pop
ja
mov
nop
add
add
iret
leave
insl
and
push
push
in
sbb
psrlq
fistpl
jecxz
imul
pop
aaa
scas
iret
dec
movsl
cmp
dec
dec
cs
push
out
pop
inc
add
scas
fucom
ljmp
loopne
rorb
into
adc
dec
adc
dec
insb
imul
pushf
int3
aam
sarb
pop
hlt
test
mov
daa
mov
sbb
out
mov
iret
in
jbe
punpckldq
add
inc
add
pushf
out
push
cmp
je
daa
cmp
pushf
or
pop
test
pop
xchg
pop
into
mov
xchg
pushf
and
push
xchg
sbbl
add
in
sbb
add
jno
fisubs
ss
inc
mov
imul
imul
sahf
fnsetpm(287
mov
je
jl
sahf
sarb
cmpsl
mov
sub
outsb
movzwl
mov
dec
outsb
daa
pop
loop
pslld
and
xchg
xlat
xchg
insb
sbb
out
push
add
pop
ja
xchg
insb
pop
punpcklbw
push
int
xor
add
xchg
insb
push
xor
cld
insb
inc
inc
mov
mov
dec
mov
adc
adc
insl
adc
aaa
out
je
mov
frstor
in
mov
out
out
maskmovq
divl
pop
sysret
mov
lret
lret
lret
lret
btr
mov
mov
mov
cmp
mov
getsec
aas
push
inc
jp
jb
dec
push
pop
addr16
cmp
fisttps
outsb
jb
push
adc
addr16
mov
aas
test
mov
outsl
daa
out
add
outsl
add
adc
jo
dec
or
or
in
loopne
mov
sub
push
in
mov
push
push
clc
pushf
test
mov
out
movups
mov
xchg
stos
subb
pop
mov
in
outsl
scas
fsubrs
daa
xchg
call
flds
mov
and
jo
push
in
test
xlat
jo
les
fnsave
xchg
xchg
xchg
mov
mov
push
push
add
inc
sbb
mov
sub
dec
mov
mov
sbb
jb
mov
mov
jnp
iret
cmp
xchg
inc
jmp
xchg
xlat
mov
jb
jb
xlat
leave
addl
out
mov
and
inc
repnz
push
int3
jno
mov
dec
push
pop
xchg
jno
aas
inc
xor
inc
cmp
in
mov
pusha
push
xchg
mov
rclb
jb
loopne
xchg
jae
and
aaa
mov
aas
mov
insl
in
outsl
pop
dec
mov
push
mov
das
mov
jns
addr16
pop
outsl
das
xchg
mov
in
mov
push
mov
jb
push
aas
notb
mov
pushl
enter
cmp
mov
aaa
jns
fisttpl
push
add
push
add
dec
add
xchg
xchg
pushf
dec
je
test
addb
fdivrl
mov
mov
or
push
pop
mov
repz
cmove
mov
clc
xchg
pop
aaa
or
adc
or
cmp
rorl
or
or
fucomi
jmp
imul
add
mov
fsubrl
xchg
addr16
dec
and
fstpt
jmp
pop
sbb
test
jmp
pushf
pop
mov
test
out
pop
xchg
mov
sub
sub
cmp
inc
decl
ja
xchg
leave
js
mov
mov
mov
sub
lidtl
das
pop
xor
cmp
in
or
push
or
dec
mov
jne
xchg
sub
sahf
sahf
mov
repnz
pop
jo
ror
rcr
scas
loope
in
mov
icebp
stc
loopne
cmp
add
ja
outsl
ds
shrl
jb
mov
js
mov
push
sbb
leave
repz
outsb
mov
lods
and
mov
mov
cmpb
jns
or
or
es
scas
cmpb
mov
add
in
ja
loopne
popf
mov
xchg
test
jp
lret
and
inc
jns
scas
loopne
daa
je
sbb
mov
mov
jnp
cmp
push
add
shl
add
xchg
mov
push
add
fisubl
pop
fisttpll
in
cmc
xchg
sbb
add
pop
jp
fnstcw
push
add
faddp
mov
add
fiadds
das
lahf
pop
mov
mov
mov
adc
dec
mov
sbb
ret
das
mov
or
lods
mov
mov
sahf
mov
mov
iret
jg
jge
jp
sbbb
xchg
ja
jbe
jge
jae
inc
repnz
jge
pop
cli
dec
outsl
and
add
add
or
adc
pop
lods
testl
xlat
jge
xchg
and
iret
lock
fcompl
dec
ret
or
daa
xor
jg
test
pusha
jle
inc
dec
enter
inc
add
mov
add
rcl
aas
pushf
jle
rclb
pop
or
iret
outsl
arpl
xchg
xchg
pop
add
adc
and
push
setb
dec
push
jecxz
jae
pop
popl
cmp
pop
xor
cmp
inc
rcll
popl
push
inc
mov
in
add
int3
jg
xchg
jge
jb
sub
scas
fdivrl
leave
test
xor
jl
pushf
dec
and
scas
inc
andb
pop
mov
ror
mov
scas
rcrl
mov
add
aam
dec
jb
add
aas
mov
lods
pop
mov
pop
sarb
leave
test
popa
imul
imul
outsb
paddusb
out
call
dec
push
cmp
or
xchg
loopne
inc
mov
adc
loop
lahf
jg
repz
filds
popf
cmpsl
cmp
pop
push
popl
jo
nop
out
mov
in
mov
mov
test
aaa
popf
bound
mov
mov
int
pop
js
cmp
pop
jae
fldl
and
sub
in
cmp
incl
rolb
addl
cmp
inc
fildll
fmuls
aad
and
sbb
rcll
test
xchg
mov
jns
scas
cmp
insb
jae
fistpl
nop
pop
roll
leave
les
cmpsl
mov
mov
shll
icebp
iret
sbb
mov
xchg
clc
jg
bound
and
testb
mov
movsl
bound
fiaddl
call
aas
rol
dec
and
stc
pop
xchg
jl
pushf
dec
pop
enter
jne
roll
adc
repz
popf
dec
push
mov
mov
add
aas
jecxz
inc
cmpsl
add
push
dec
add
mov
sbb
lcall
xor
enter
fwait
sub
pop
adc
aas
lret
imul
call
sub
lret
fbld
add
out
xor
loop
inc
add
nop
push
jg
movsb
adc
jl
into
aam
mov
cmpb
in
add
adc
push
int
pop
into
out
sahf
out
iret
sub
sbb
repz
rorl
shl
sti
rcr
cmp
repz
int3
aad
iret
cmp
mov
mov
repz
fidivrl
sub
iret
repz
jns
out
loopne
sahf
out
sahf
loope
loop
jecxz
jns
out
in
in
out
jns
out
out
call
mov
push
jmp
idivl
repz
mov
cmp
out
mov
js
out
dec
ror
stc
repnz
repz
jns
out
hlt
fisttps
cmc
sbb
or
cmp
out
clc
clc
clc
call
iret
fdivr
int3
sti
mov
cmp
std
mov
mov
aad
push
xlat
fsub
mov
fistpl
jns
fsubp
jecxz
in
sahf
out
sahf
push
jmp
jo
out
repz
cmc
mul
jns
ja
push
stc
cli
sti
cld
cmp
add
or
ret
shrl
mov
inc
enter
push
in
mov
lcall
push
jbe
add
mov
pop
sbb
push
pop
lock
fdivp
sahf
testb
pop
and
pop
and
pop
iret
repz
dec
pop
pusha
push
sub
cmp
cmp
cmp
arpl
iret
jnp
jl
gs
push
data16
or
shll
jbe
sbb
add
inc
ds
inc
mov
and
or
cmp
or
fs
imulb
or
addb
pop
adcl
push
add
lea
movsb
mov
mov
inc
les
inc
adc
aaa
adc
push
or
add
pop
xchg
inc
xchg
ja
cs
xchg
jns
out
sbb
sahf
out
pop
or
or
aaa
or
mov
imul
daa
adc
adc
xchg
xchg
fisttpl
xor
push
addr16
das
push
xorps
loopne
insb
das
insl
push
and
pop
jo
jns
push
pop
andb
jo
mov
test
xchg
fcmovne
leave
repz
in
adcb
xlat
divb
data16
packuswb
add
aas
scas
xchg
and
clc
mov
pop
inc
cmp
sarl
fcompl
push
or
out
adc
sbb
jns
out
adc
dec
repz
sbb
aam
sbb
je
push
pop
jl
cmpsl
stc
lock
mov
cmp
shll
and
jns
xchg
shrb
pop
jp
cld
cmp
push
xor
push
loopne
jnp
mov
xchg
add
ss
push
add
leave
ss
add
sbb
rorb
dec
dec
ficomps
or
xchg
dec
dec
mov
mov
call
aas
or
orb
or
inc
or
or
and
leave
std
mov
mov
pop
addl
aas
mov
or
andb
inc
into
sahf
cmpsb
fisttps
mov
cld
adc
inc
jle
test
shll
leave
in
cmp
and
mov
iret
mov
in
call
std
dec
jle
adc
push
ficompl
mov
xor
fcomp
loopne
jb
jle
sub
or
push
mov
lock
inc
inc
sub
pop
mov
push
enter
xor
loopne,pn
pop
outsb
icebp
jae
add
es
and
test
sete
push
loope
xor
ds
iret
cmp
aaa
push
pop
idivl
mov
cmp
xor
and
push
jb,pt
arpl
hlt
and
jns
and
add
fcoms
out
sahf
out
aam
rorb
jns
jnp
or
adc
fdivrl
popf
out
or
push
sbb
cmpsl
stc
clc
sub
lock
call
and
and
and
adc
jns
push
and
sub
loope
out
clc
jmp
pop
in
or
movups
in
in
xchg
xor
testl
insb
jns
out
push
push
out
sahf
out
dec
inc
xor
sahf
out
sahf
and
or
add
dec
repz
cld
xor
hlt
lock
repz
call
cmp
xor
mov
test
out
sahf
pushf
xchg
mov
sbb
push
dec
or
push
xlat
and
push
in
js
pop
test
pop
xchg
test
cld
push
jg
aam
xchg
incl
andl
mov
jg
jecxz
push
jb
mov
adc
xchg
test
push
pop
pop
inc
adc
test
sub
jecxz
xorb
icebp
lahf
dec
or
push
push
pop
jle
add
loopne
lock
jle
inc
shll
das
daa
lods
or
add
push
xchg
xchg
add
mov
and
jb
add
or
and
repnz
ret
mov
adc
dec
pop
and
sbb
dec
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
call
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
fistpll
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
stc
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
jmp
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
decl
xchg
and
scas
int
add
out
xor
sti
aas
jno
or
mov
pop
fs
dec
lea
push
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
incl
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
lcall
dec
les
aas
xchg
les
jne
int
mov
addr16
xchg
lods
push
mov
xchg
aas
and
loop
mov
jp
popa
push
jg
lcall
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
std
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
jg
or
test
pop
mov
jne
fldt
cmp
jno
sar
jmp
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
outsl
call
and
dec
dec
gs
std
orl
pop
ficomps
frstor
repz
stos
xchg
push
cmp
pop
js
lcall
adc
xor
fwait
idivb
insl
add
push
pop
ja
iret
repz
mov
repnz
rolb
dec
push
inc
xlat
xor
jg
adc
adc
mov
inc
add
add
push
add
mov
mov
add
or
dec
add
in
jle
inc
sbb
push
cmp
dec
adc
inc
add
mov
add
xor
out
dec
push
add
dec
sbb
stc
pop
adc
mov
orb
pusha
popa
or
rcr
ss
pushw
cmpl
leave
in
lret
cmpsl
in
leave
mov
call
push
leave
cs
lods
mov
xor
iret
fdivr
loopne
adc
dec
inc
pushf
add
add
fucomi
add
jnp
test
add
mov
mov
push
or
or
or
or
or
adc
adc
push
adc
mov
add
pop
sbb
adc
adc
adc
outsb
mov
add
or
adc
pop
adc
or
sub
rolb
call
add
add
loop
sahf
add
les
add
hlt
push
inc
mov
ret
cmp
imul
ds
jg
add
push
adc
pop
and
xor
inc
mov
adc
xor
cmp
mov
js
sub
mov
jg
xorb
sub
or
mov
jo
incl
jecxz
push
add
xlat
and
sbb
andb
into
add
add
mov
das
mov
cmp
adc
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
jo
lock
and
or
adc
xorb
scas
fisubrl
add
dec
and
sub
rcr
call
cli
or
xchg
jae
sub
std
cmpsb
xor
aas
imul
faddl
cmp
inc
or
pop
les
fsts
dec
add
push
adc
loope
mov
cmp
ja
or
xchg
sti
push
in
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
roll
or
adc
pop
inc
inc
xchg
add
add
std
or
add
lds
cld
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
adc
aas
cli
jmp
jg
or
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
cmp
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
add
sbb
int3
lcall
fs
scas
mov
pop
pop
mov
pop
movb
xchg
sbb
scas
adc
mov
xor
lods
scas
incl
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
call
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
jg
push
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
loope
mov
mov
sub
lods
leave
mov
jp
push
pushl
or
push
sahf
pop
clc
sti
jg
jno
lock
push
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
sbb
shrl
add
pop
jb
mov
mov
dec
in
push
mov
sub
pop
mov
jl
rorl
adc
sub
push
add
stc
loope
mov
jbe
sti
clc
sar
andl
aas
icebp
testb
mov
jmp
inc
gs
sub
jno
pop
sub
jg
scas
cld
jg
decl
cli
push
inc
sbb
paddb
inc
mov
dec
call
cld
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
sti
jae
cmp
test
loopne
cli
adc
aaa
xchg
in
add
in
testb
adc
loope
fisttpll
out
aas
std
cli
push
ljmp
int
push
idivl
cmp
sub
inc
scas
inc
mov
cmp
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
dec
fsubl
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
pop
xor
fidivrl
push
sub
xchg
pop
clc
pop
hlt
sub
movsb
add
add
lea
jg
gs
std
xorb
jg
jmp
js
ret
das
pop
pop
pop
shlb
call
mov
push
jno
outsb
lock
or
sarb
std
pop
les
cli
mov
dec
xchg
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
call
sub
mov
push
mov
adc
and
sbb
xchg
jo
and
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
sar
decl
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
decl
outsl
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
sbbb
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
decl
push
jo
pusha
imul
add
mov
cmp
xchg
mov
adc
fcmovnu
loop
pop
xchg
ftst
jbe
xchg
and
call
out
jae
shrb
shlb
out
aas
stc
add
out
in
jmp
jno
fidivrl
lock
adc
pop
cld
addl
adc
imulb
and
lahf
fmull
enter
jecxz
paddd
scas
sub
in
pop
mov
sub
mov
dec
fucomi
pop
decl
das
aas
mov
or
cld
inc
or
add
push
pop
jg
add
jg
mov
cmp
sub
adc
mov
mov
iret
inc
ljmp
push
jbe
push
sbb
stos
icebp
pop
incb
mov
sub
push
inc
jecxz
sbb
sarl
adc
neg
lods
loopne
sar
adc
lahf
scas
fiaddl
imul
dec
push
fbstp
mov
fsubrl
aas
rolb
sbbb
aas
sub
mov
pushf
mov
repnz
and
mov
adc
div
or
inc
aas
push
rcrl
rolb
mov
lock
jb
fistpl
adc
call
jno
pop
mov
mov
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
jg
lcall
lahf
or
imul
xor
dec
xor
fsubr
fistps
lds
sbb
jno
fidivrl
jg
stos
pop
mov
mov
sub
jge
xor
lahf
les
inc
mov
sbb
cld
addl
adc
cld
lcall
mov
lahf
outsl
int3
push
sbb
sti
incl
mov
jle
xchg
popa
out
out
outsl
xchg
mov
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
lcall
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
xchg
cmp
shl
cld
mov
adc
icebp
outsl
js
pop
jg
pop
shrb
rcl
jg
adc
xor
inc
sti
lcall
fisttpl
sub
jmp
lea
jp
jnp
jecxz
jg
add
ds
pop
adc
imul
or
inc
pop
xor
in
inc
nopl
xor
subb
iret
mov
lock
inc
cmpsl
enter
clc
in
pushl
xchg
movsb
insb
or
and
xchg
ficomps
aam
jp
clc
insb
test
aas
repz
aaa
fistps
outsl
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
ljmp
xchg
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
adc
lcall
ret
faddl
xchg
lcall
out
add
rorl
mov
cmpxchg
lods
leave
inc
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
fistps
jno
lret
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
and
aas
mov
mov
out
cmp
or
addr16
sbb
cld
daa
jp
cld
jbe
adc
cltd
or
mov
ret
nop
xchg
clc
push
std
cmp
das
incb
lock
pop
pop
div
cld
idivl
cmc
add
scas
stc
lahf
loope
add
lahf
jmp
std
scas
bound
jge
fbstp
out
xchg
add
leave
xchg
mov
mov
loope
mov
cmpsl
popf
push
mov
cmp
ja
push
daa
outsl
das
fwait
dec
das
push
add
cmpsb
cmp
call
ret
data16
decb
adc
mov
jo
jbe
and
call
negb
cltd
add
jb
mov
inc
add
dec
lds
std
fcomip
xchg
dec
dec
inc
sbb
xchg
pusha
dec
das
js
mov
aas
icebp
ret
ror
sbb
sbb
inc
adc
push
pushf
adc
aas
pop
clc
loope
loope
push
or
jp
dec
add
xlat
in
cwtl
pop
inc
jmp
xor
mov
xchg
lcall
decb
js
pop
gs
into
sarl
pop
out
jg
jno
xor
loop
ret
cmp
arpl
out
iret
call
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fsubrl
rolb
mov
ret
outsl
pop
jmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
cmp
inc
xchg
cmc
out
daa
icebp
push
lahf
sti
inc
pop
ljmp
sbb
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
or
push
add
or
jns
add
sti
push
sti
pop
inc
fs
test
mov
push
rorl
stos
cmp
int3
pop
iret
and
jle
adc
out
add
call
dec
or
cmpsb
adc
or
and
dec
add
push
loopne
mov
inc
or
lock
imul
stos
jno
lret
cmp
lea
pop
popa
push
bound
imul
je
aaa
and
jne
mov
inc
imul
or
ds
rcrb
add
adc
sti
pop
cmp
pop
or
inc
xorb
sub
ds
fcmove
clc
jge
jb
mov
jmp
push
jle
add
bound
push
out
out
xlat
into
fs
imul
add
pop
iret
jmp
jle
push
add
pop
pop
jo
push
fisubrs
sub
sbb
mov
pop
adc
pop
dec
add
pop
mov
cmpsb
dec
push
sbb
pop
insl
mov
and
outsl
sahf
cmp
jnp
push
push
outsl
jp
push
outsb
jne
fsubrp
out
mov
inc
push
mov
outsb
clts
mov
pop
pop
ds
inc
mov
decb
push
mov
adc
fsubp
sbb
push
imul
fildll
inc
jbe,pt
jo
ret
cmp
arpl
gs
dec
mov
inc
outsb
jg
push
jne
jnp
pop
pop
push
fs
lahf
insl
push
outsb
push
pop
xor
sahf
ss
outsb
pop
inc
cs
push
push
mov
push
outsl
js
mov
inc
fiadds
push
xor
inc
dec
outsl
mov
ja
fidivrl
jbe
into
cmp
push
dec
movd
xchg
out
jge
xor
dec
push
pmaxub
push
imul
mov
jp
dec
jae
inc
push
outsl
leave
rol
inc
push
push
jb
push
sahf
dec
mov
outsb
xor
das
je
insb
addr16
mov
cmp
push
cmp
popa
xor
outsl
incb
repnz
inc
pop
jns
outsl
dec
loopne
pxor
mov
cmp
scas
mov
xor
pop
push
inc
pop
sub
fidivl
lahf
das
iret
xor
add
addr16
mov
fbstp
dec
shl
jge
ds
jp
push
jg
xor
lret
arpl
push
push
push
out
jge
jmp
jb
lahf
xor
imul
push
pop
pop
dec
fisttps
imul
jo
fimuls
add
loope
das
decl
and
fs
mov
ret
mov
xor
push
out
dec
aad
inc
call
scas
dec
gs
sbb
pop
inc
insb
dec
outsb
sahf
cs
imul
push
shlb
jo
jg
jecxz
adc
js,pn
rsqrtps
insl
das
dec
out
cs
inc
pop
dec
sub
xor
das
inc
pop
imul
scas
xor
scas
dec
das
dec
je
pusha
jp
loope
mov
out
xor
inc
lock
xor
pop
mov
inc
push
add
pop
add
xchg
xor
push
fistpll
emms
cs
jb
or
outsl
jbe
out
adc
jb
push
dec
es
incb
push
mov
js
idivl
xor
jp
push
dec
dec
out
mov
push
outsb
inc
ss
push
pop
push
dec
jp
pushf
imull
mov
scas
push
inc
pop
push
jae
jp
jp
dec
jp
inc
push
js
sti
inc
inc
lahf
pop
xor
jnp
pop
arpl
push
push
andps
js
sti
push
jl
fists
inc
outsl
dec
filds
mov
xor
addr16
sub
das
fiadds
dec
sub
jl
xor
inc
push
pop
inc
lahf
fidivrl
ret
push
outsb
push
xor
push
outsl
inc
dec
xor
or
xlat
das
push
out
adc
sub
pop
inc
dec
dec
or
push
xor
xchg
stos
lret
add
pop
popa
scas
pop
fsubrl
jl
jns
scas
push
cs
out
lea
pop
sarl
push
outsl
jp
or
add
cmp
jmp
ss
pop
push
adc
mov
push
pop
push
or
rcll
pop
scas
or
std
pop
push
jg
cmp
fwait
jmp
jp
mov
mov
das
pushl
imul
outsb
nop
xor
mov
jp
js
push
ficoms
jne
inc
out
ja
cmp
xchg
int
push
jp
pop
mov
mov
mov
loope
push
mov
mov
rcrl
pop
inc
pop
fistpl
decl
jns
mov
jne
scas
outsb
push
das
dec
aas
imul
aas
pop
jle
mov
cmp
inc
cmp
iret
push
mov
and
pop
pop
js
imul
sqrtps
push
or
cmp
jbe
dec
jg
inc
rorl
lds
push
dec
iret
scas
lahf
jo
subl
imul
add
mov
dec
fistpll
jle,pn
cmp
add
push
dec
aaa
out
mov
fildll
lock
dec
pop
imul
push
pop
pop
icebp
out
xor
push
pop
insl
push
sub
jno
jae
into
out
mov
loopne
adc
lods
loopne
das
insb
into
jg
lds
push
dec
cs
mov
push
scas
popa
insb
movsb
add
jno
push
and
jl
rcrl
movzwl
push
cmp
push
pandn
imul
push
outsb
cmpsb
xor
orb
inc
dec
sahf
push
add
jge
inc
push
push
push
ja
js
lock
xlat
pop
jle
pop
insb
mov
js
push
xor
inc
stos
inc
jae
jnp
pop
imul
js
xor
add
outsl
insb
push
outsb
jp
fcoml
andps
jo
sti
aaa
dec
mov
sbb
jg
jg
mov
push
out
imul
push
push
fucomip
loopne
lahf
aas
jbe
imul
ret
dec
filds
push
das
push
das
inc
stos
rcl
outsl
pop
dec
add
les
fildll
push
outsl
js
push
mov
sti
cli
push
iret
scas
movaps
xchg
fistps
stos
inc
jg
pop
dec
add
xor
mov
xchg
jo
scas
push
psllq
xchg
or
dec
imul
push
out
cs
pop
sub
arpl
pop
push
add
movd
push
scas
out
in
les
call
mov
pop
into
dec
jp
jp
shl
add
lahf
outsb
pop
mov
iret
pop
stos
mov
outsb
imul
dec
push
mov
outsl
movb
movsb
call
xor
pop
loopne
out
jbe
xchg
mul
lods
jg
outsl
push
dec
push
aas
push
mov
in
jl
sahf
dec
inc
out
insb
dec
cmpsl
xchg
add
jle
cmp
out
push
aas
push
dec
les
out
xor
and
nop
lahf
push
in
add
dec
out
sahf
inc
iret
push
out
fnsave
jne
push
outsl
inc
aas
jbe
scas
movsb
sub
mov
aas
pop
jle
adc
sub
mov
add
cmp
and
popf
lret
in
xlat
pushl
xor
mov
ret
icebp
push
out
fidivs
adc
je
xor
mov
lahf
add
push
into
ds
jno
dec
xor
call
ja
mov
dec
push
inc
jbe
mov
cvtps2pd
out
pop
inc
scas
arpl
out
aaa
push
lahf
pop
dec
outsl
mov
mov
adc
out
xor
or
push
scas
add
mov
mov
mov
mov
jp
sbb
scas
inc
lahf
addr16
pavgb
xor
push
out
icebp
push
scas
fimuls
je
inc
jle
aas
push
mov
jns
lahf
out
push
call
inc
jg
scas
fdivr
out
dec
out
iret
iret
lods
jmp
aam
pop
mov
jbe
jne,pn
dec
pop
push
je
dec
mov
xchg
shl
icebp
lahf
fs
es
jecxz
sbb
js
sbb
es
clc
es
mov
lods
adcb
cmpl
lods
pusha
pop
loop
jbe
aas
sbb
xor
outsl
mov
sbb
popa
push
pop
mov
lcall
insl
cmpb
and
dec
pop
push
mov
cmp
inc
or
mov
es
xchg
xor
pusha
xchg
shrl
sub
sub
pop
inc
gs
int3
dec
xchg
mov
insb
mov
push
pop
out
and
daa
flds
lods
dec
mov
rcrl
lods
or
test
call
gs
push
mov
pusha
cmpsl
mov
pop
adc
inc
and
xchg
test
inc
gs
xor
shrb
gs
push
push
dec
jge
xor
sbb
insb
sbb
mov
pushf
imul
je
inc
imul
push
mov
insl
jo
into
mov
jo
jns
adcl
mov
loopne
stos
dec
adc
lret
and
and
push
nop
and
daa
add
xor
movsb
fiaddl
push
mov
fs
and
add
bound
inc
and
dec
outsl
popa
sbb
pop
xchg
mulb
outsl
popw
fdivl
lret
jmp
inc
pop
mov
sub
jae
ds
sub
pusha
xchg
negl
dec
or
add
push
lods
lea
roll
inc
call
and
fsubr
dec
popa
jo
push
sbb
and
pop
in
push
pop
ds
jae
add
fldl
cwtl
pop
lods
out
incb
inc
dec
lods
leave
push
mov
imul
xchg
cltd
push
pushf
shll
insl
ljmp
repz
lret
in
jae
daa
xor
rcll
jp
cmpsb
push
js
adcl
hlt
push
fwait
test
cmp
add
push
shlb
or
cmp
shl
inc
sahf
mov
pusha
in
adc
outsb
push
imul
push
addr16
loope
data16
add
sbb
jns
cli
adc
mov
cmp
pop
push
add
dec
test
ret
sbb
or
xor
fs
ja
pop
sbb
push
push
dec
xorl
inc
jmp
xchg
imul
mov
mov
jge
and
cmpsl
test
daa
adcl
cs
addr16
es
insb
adc
jle
cmovno
jmp
fistps
ftst
mov
ficoms
sub
sub
pop
lock
inc
aaa
jmp
xchg
pushf
add
inc
sbb
pop
inc
lret
cmc
ds
jle
xchg
ret
int
xchg
push
push
xchg
jne
lahf
add
mov
mov
sbb
push
or
mov
pushf
shrb
lods
or
scas
std
mov
or
lods
pop
fdivl
xchg
inc
jnp
test
inc
rol
arpl
divb
arpl
rorb
or
push
sbbl
add
outsb
sub
push
mov
xor
or
rcrl
inc
repz
and
cmp
roll
popa
dec
mov
inc
addr16
and
outsl
jne
rolb
movsl
js
out
mov
shrb
sub
dec
cltd
and
dec
mov
and
fs
adc
inc
jae
push
xchg
sub
negb
jns
xor
sbb
jae
xor
xor
pop
sub
sub
xchg
add
out
add
in
mov
flds
pushl
or
and
adc
add
mov
retw
mov
xchg
sbb
test
sub
inc
aas
scas
inc
jmp
pop
ja
fcomi
test
sbbl
add
pop
pop
cmpsl
adc
or
rclb
fistl
inc
sub
mov
or
dec
sbb
mov
daa
or
pop
lods
inc
scas
in
lret
adc
push
and
mov
popa
subl
negl
xchg
pop
jne
gs
or
mov
adcl
ret
mov
int
pop
inc
fcmovnu
xorb
fdivrl
jo
daa
sbb
add
mov
jno
push
pusha
int3
inc
jb
inc
test
adc
inc
inc
inc
insb
push
push
popa
push
imul
shll
sbb
rclb
repz
adc
inc
cltd
mov
mov
das
or
push
or
inc
and
push
xchg
cli
dec
mov
les
addl
imul
jmp
imul
jns
xchg
and
and
std
dec
add
imul
xchg
rcrl
mov
sbb
jg
int
loope
mov
inc
sbbl
push
sub
icebp
ja
add
or
dec
outsb
dec
mov
mov
enter
lcall
mov
imul
add
or
sub
xor
mov
ret
je
mov
jb
and
add
outsb
shlb
jbe
sbb
adc
xorl
push
pusha
loopne
fwait
sbb
imul
mov
fstps
or
jl
imul
mov
mov
xchg
push
push
or
add
jg
or
loopne
or
mov
es
out
push
andl
add
sbb
lret
pop
xorb
xor
pusha
mov
aad
dec
lcall
xchg
dec
mov
mov
test
cmp
add
imul
add
cmp
pusha
adc
nop
sbb
cmpsb
lss
inc
insb
or
pop
adc
adc
xor
inc
rcll
and
sbb
fistps
mov
fistpll
push
xor
movb
push
and
push
push
nop
fstpl
dec
fcmovnu
call
cmp
sbb
imul
mov
mov
xchg
pop
and
nop
testb
sbb
addl
and
adc
sbb
push
cltd
add
sbb
and
adc
sub
jne
push
cmp
push
ja
scas
loopne
gs
jbe
xor
adc
jne
movsl
nopl
addr16
or
mov
inc
mov
mov
adcb
mov
jae
gs
mov
inc
add
test
xchg
jecxz
adc
enter
lods
call
rcr
mov
outsl
pop
push
xchg
xchg
xchg
push
pop
push
fs
mov
sbb
scas
imul
roll
int3
data16
cmp
icebp
push
loope
pop
jb
dec
jbe
loopne
adc
add
dec
pop
sub
dec
sbb
movsl
pop
lds
shl
inc
adc
scas
les
divl
add
sub
sbb
inc
dec
push
sahf
testb
push
push
inc
in
out
movsl
push
dec
pop
shlb
pushl
aam
ret
xor
and
data16
shlb
int3
push
clc
addr16
jo
pop
loopne
mov
fs
jne
dec
mov
ja
sub
outsl
stos
fdecstp
shl
push
add
xor
adc
push
push
sbb
outsb
and
push
es
lret
rolb
push
shlb
mov
loopne
xchg
mov
or
xor
mov
inc
mov
pop
push
add
divps
mov
insl
push
bound
insb
dec
repz
jae
xchg
pop
push
dec
cmpsb
and
add
sbb
xor
and
push
enter
add
cs
sbb
push
mov
syscall
fildl
jb,pn
cmpsb
push
sub
mov
inc
js
add
adc
sahf
lcall
add
js
flds
ss
add
and
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
ss
add
