fcomp
decl
pop
jns
add
mov
or
adc
add
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
push
push
xor
push
mov
adc
hlt
leave
mov
fisubrs
les
adc
incl
sbb
clc
imul
add
push
mov
push
push
push
xor
je
push
push
push
push
idiv
data16
in
sbb
clc
add
pop
sbb
inc
pop
shlb
nop
jne
pop
pop
pop
lcall
repnz
add
or
inc
or
jle
dec
push
xadd
dec
test
jg
mov
mov
push
mov
mov
call
ret
pop
add
fdivr
inc
push
push
mov
pop
mov
mov
les
insb
and
ja
mov
push
lods
sub
push
xor
push
subps
das
dec
jo
outsb
push
repz
in
rorl
sub
leave
xor
mov
sbb
loope
push
and
push
push
add
dec
sbb
add
inc
lds
rclb
mov
adc
dec
add
incl
xchg
adc
je
sbb
jle
add
push
sub
int
jmp
sti
and
loopne
inc
cmpsl
fdiv
shlb
add
hlt
push
and
sbb
sbbl
push
xchg
sbb
sbb
push
push
mov
cmp
xchg
push
adc
nop
sbb
mov
lea
xor
rcr
xor
lret
mov
mov
mov
enter
and
fbstp
lret
and
or
hlt
mov
adc
mov
nop
and
xchg
inc
dec
xor
pop
add
cmp
and
add
sub
adc
mov
outsl
mov
push
mov
jb
push
push
decb
orb
xor
sbb
sete
into
xchg
add
andl
dec
test
mov
push
rorl
test
lcall
add
roll
loop
add
dec
sbb
push
roll
push
cmp
add
adc
xor
add
add
cmpsb
push
jnp
mov
fwait
push
loopne
push
aam
cmp
mov
and
daa
sbb
frstor
pusha
xor
push
push
lret
jg
push
mov
lea
or
cld
js
pop
mov
dec
jl
repnz
add
sbb
lret
sbb
inc
add
cmpsl
and
jg
and
xor
mulb
sub
sub
push
mov
stc
icebp
in
and
mov
cmpsb
dec
push
incb
xchg
jmp
pop
addl
add
mov
pop
cmpsb
mov
pop
ret
xor
adc
out
push
dec
dec
push
sub
push
insb
insl
push
add
and
lods
jl
faddp
jl
pop
adc
iret
dec
xchg
pushf
inc
les
leave
lcall
cmp
jae
clc
mov
std
add
sub
push
mov
dec
lea
mov
leave
mov
ljmp
inc
and
add
sbb
mov
sub
shlb
and
push
int
add
pusha
push
add
sbb
jmp
add
mov
lock
je
fistpll
adc
das
out
sbb
cmpl
in
dec
inc
jg
sbb
add
call
inc
mov
dec
orl
lea
sarl
jne
pop
shrl
ja
sbb
and
int3
pop
aas
call
mov
nop
test
pop
add
mov
mov
or
and
inc
cmc
in
mov
das
dec
jae
adcl
add
inc
sub
and
test
ja
jmp
and
dec
or
add
iret
xorb
cs
xchg
ret
push
lea
push
and
push
popa
cltd
fistpll
cmp
inc
xor
push
aad
sarb
insb
fstps
jg
dec
or
test
push
out
adc
push
sbb
add
or
pop
mov
popf
mov
pop
mov
jb
sub
push
pop
pop
pop
sub
xlat
sbb
and
dec
js
cmp
sub
sbb
add
add
rorb
mov
pusha
push
cltd
fcmovnbe
xchg
push
es
push
push
add
add
ret
sbb
push
cmp
mov
sbb
in
jp
sete
test
test
cmp
sbb
enter
movl
push
inc
xchg
pop
push
clc
mov
push
insb
pop
dec
aad
or
rclb
sub
inc
or
stos
pop
inc
stos
pusha
lds
xchg
movsb
test
jne
je
push
pushf
xorl
sub
adcl
adc
bound
or
lods
push
scas
in
or
add
xchg
adcl
adc
loopne
pop
push
jle
test
inc
jecxz
push
and
mov
pop
subw
push
cmpsb
rorl
jmp
sub
sub
cmp
ljmp
inc
jge
sub
push
and
push
lock
cmpsl
sbb
push
inc
pop
movsb
xlat
das
inc
adc
pop
scas
inc
and
push
inc
addb
and
push
mov
addb
jns
fs
sbb
dec
leave
mov
sbb
nop
movsl
mov
aad
sub
mov
and
icebp
sbb
aad
aam
int
inc
jle
popa
mov
push
or
lcall
call
cwtl
xor
inc
movb
out
sti
add
sbb
jecxz
shll
mov
inc
add
je
loop
out
xor
push
sub
cmpsl
xor
pusha
mov
shrb
adc
rcrl
inc
mov
cmp
mov
imul
jno
xor
hlt
jbe
cmp
or
int
add
mov
push
push
call
push
dec
mov
mov
mov
mov
sar
out
cmpl
je
adc
xchg
push
mov
pop
cli
inc
aaa
push
xor
fcoml
push
push
rclb
icebp
repnz
xor
push
movsb
aam
cmp
movsl
cs
add
mov
xchg
mov
sub
jo
adc
xchg
sbb
adc
adc
lret
push
loope
jl
add
adc
popf
cmpsl
jle
or
cltd
das
out
addl
mov
add
adc
cmp
and
ret
outsl
jmp
inc
mov
xchg
xor
in
push
mov
adc
sub
ret
aaa
push
add
sbbl
lea
pop
pop
icebp
jns
sahf
je
jmp
or
les
dec
test
lret
push
lcall
xchg
jne
push
movsb
adc
xchg
lods
mov
subl
dec
test
jg
or
cmc
lea
and
pop
jl
je
pop
and
cmpl
pusha
adc
jg
add
sub
mov
sub
mov
ja
aad
mov
sbb
xor
or
sbb
sub
jmp
in
push
inc
add
mov
pop
and
cmp
jne
mov
ds
mov
inc
xor
inc
lods
sbb
push
lahf
sub
je
sub
cmp
je
ljmp
leave
sbb
or
pop
and
sbb
das
and
sbb
mov
ss
mov
cltd
aaa
inc
pusha
jo
adc
fsubl
add
movl
push
push
lcall
sbb
mov
ret
add
push
sub
jg
adc
cmpsl
call
cld
add
call
aad
cmp
jl
xlat
ret
jecxz
pop
mov
pop
jnp
cltd
in
inc
sahf
adc
call
cmp
jbe
sbb
adc
test
xor
loope
in
or
js
mov
add
push
dec
je
mov
js
push
dec
sub
mov
loope
mov
or
rcll
mov
and
loopne
loopne
test
movzwl
and
mov
cmp
je
push
cli
into
mov
stos
pop
jo
jmp
ss
mov
lea
add
inc
test
jne
sub
push
push
inc
sbb
cs
inc
mov
and
push
insl
or
pop
xchg
cmp
mov
stc
sbb
shlb
mov
push
lea
fbstp
xchg
loopne
cmp
lcall
movsb
add
jge
xor
mov
cmp
jl
repnz
shl
mov
stc
pop
insb
pop
mov
ret
mov
push
pop
adc
ret
test
inc
cmovg
push
jl
loopne
push
pop
rcrl
or
lahf
jo
add
push
jbe
pop
or
fbstp
pop
jne
pop
mov
jl
insl
outsl
sbb
or
sbb
adc
xor
aas
mov
adc
pop
cmp
fists
or
mov
cld
or
mov
sub
test
mov
or
add
sub
out
push
push
in
pop
nop
lahf
dec
clc
jle
mov
mov
mov
jo
cmp
pop
fsub
mov
ret
mov
push
cld
lea
push
or
cmp
add
cld
adc
cmp
ja
add
jmp
insb
mov
test
push
push
add
push
xchg
add
jg
cwtl
jl
inc
jo
jg
mov
movb
pop
cmc
push
add
or
or
icebp
mov
push
cmp
inc
mov
js
push
sub
pop
sub
add
mov
call
hlt
jnp
pop
or
test
mov
jbe
jo
jbe
jno
dec
push
rorb
jo
fld
or
mov
push
cmc
mov
jo
out
in
jg
loope
in
jp
notl
mov
pop
inc
shrb
or
lret
repz
cmp
rcrl
cmp
clc
lea
push
push
ljmp
sbb
sub
add
testb
push
add
repz
mov
add
cmp
push
loop
sub
loopne
lods
sbbl
add
inc
mov
stos
add
pop
enter
push
js
loop
add
xor
push
push
or
lea
push
pop
push
push
mov
pop
testl
jmp
push
ds
or
jo
jbe
or
js
xor
pusha
int
insl
icebp
sbb
inc
push
mov
pop
repnz
mov
int3
sbb
ja
lcall
je
in
dec
or
std
or
push
xlat
add
daa
xor
test
mov
aaa
divb
jg
sub
cmp
je
cmpl
lea
jl
mov
pop
stos
or
push
jne
push
stos
call
stc
xor
push
in
cmpb
stos
xchg
test
pusha
xchg
pop
push
hlt
push
push
mov
in
mov
insb
popf
js
adc
mov
inc
push
or
inc
add
xor
add
push
mull
loop
jne
ret
out
loope
dec
fistps
dec
jo
cmp
pop
lret
jb,pn
sub
rorb
lret
push
push
sbb
mov
sbb
dec
dec
add
push
inc
push
arpl
bnd
adc
loope
or
test
jne
in
loop
data16
loope
mov
add
movsb
and
mov
out
fucomi
pop
push
push
mov
mov
cmp
add
push
pop
mov
mov
push
stos
mov
xor
int3
lret
dec
adc
ficoml
xchg
clc
push
shr
pop
loopne
fnstsw
jmp
inc
add
adc
lds
notb
push
lods
mov
lea
test
pop
sub
scas
inc
mov
in
push
push
pop
sub
mov
or
jo
cmp
push
loop
pop
jle
mov
cs
ret
add
mov
pop
add
shlb
ret
cmp
movsl
jg
loopne
add
mov
push
outsb
out
xor
or
mov
enter
mov
rorl
or
pop
in
roll
push
jae
pop
test
daa
dec
test
hlt
pop
mov
push
or
push
jle
mov
call
fiaddl
pop
imul
in
repz
hlt
cmp
cli
lret
rcr
xor
sar
shl
aas
js
rolb
ret
cmp
lds
int3
and
add
xor
lock
loope
insl
mov
mov
sub
xor
inc
lea
push
add
add
push
les
call
or
and
addr16
mov
or
add
xchg
pop
xchg
or
scas
xor
fs
fdivl
xor
cs
mov
ucomiss
inc
jo
cmp
mov
leave
insb
push
adc
xor
mov
pop
pop
in
lea
fbstp
xchg
jmp
adc
sub
les
sbb
push
cwtl
lret
cltd
inc
pushf
inc
adc
adc
mov
scas
loopne
dec
cmp
dec
and
inc
test
or
xchg
sbb
imul
aaa
ds
add
cli
sbbb
sub
int3
mov
testl
int
scas
adc
pop
sbb
mov
or
add
push
pushf
mov
cmp
add
rclb
dec
pop
outsb
or
sbb
push
loopne
dec
xor
push
lea
add
ret
ds
ror
cmpsl
roll
mov
dec
cltd
sbb
mov
and
mov
or
sbbl
adc
cmp
into
je
inc
push
push
push
sbb
add
jnp
aaa
ret
les
addb
shrb
stos
pop
repnz
add
aas
sbb
add
mov
or
sub
into
jb
or
je
pop
pushf
mov
or
insl
or
inc
cmp
mov
ja
and
and
arpl
or
scas
or
jne
shl
inc
push
push
and
in
xor
dec
add
pushf
ret
dec
xchg
mov
push
jnp
scas
add
cmp
scas
sti
out
in
cmpl
and
jle
lock
push
lods
dec
or
jmp
ret
pop
add
add
orl
xor
pusha
adcl
sbb
mov
rcll
inc
pop
and
das
jns
je
or
pushf
adc
add
push
sub
push
in
pop
mov
jne
cmp
cwtl
jecxz
xchg
dec
repnz
jne
jle
mov
popf
jbe
or
pop
adc
mov
or
pop
ret
jns
movsb
push
inc
dec
adc
jge
lods
jne
add
jg
mov
cmp
dec
je
shll
cmp
inc
jp
mov
bound
xchg
sbb
jb
std
push
mov
fdivr
aas
je
insb
or
enter
leave
and
loop
faddl
pop
cmp
push
insl
iret
pusha
shlb
push
jp
pushf
cwtl
push
lea
cmpsw
push
adc
inc
jnp
fnstcw
sbb
adc
xor
push
mov
stos
mov
jecxz
popf
jns
lds
scas
loopne
xchg
dec
cmp
push
jg
pop
push
mov
xchg
int3
out
fisubrs
fstpl
lret
mov
stc
sbb
sub
lods
scas
sub
int3
xor
je
cld
jne
scas
dec
xor
xchg
aaa
in
leave
ss
xor
aas
repz
repz
jne
repnz
xor
out
cmp
mov
sub
mov
sub
xor
pop
and
addb
jae
imul
movsb
fstl
loope
push
adc
and
sahf
in
sahf
in
or
pop
jnp
into
clc
adc
add
adc
xchg
ja
dec
ljmp
call
insl
xchg
sahf
jle
repnz
inc
push
loope
outsb
dec
dec
mov
pop
push
lea
push
ficoml
push
add
push
lea
cmp
xchg
push
dec
aam
mov
inc
les
mov
sahf
adc
sbb
or
pushf
xchg
push
add
in
cltd
or
movl
or
ljmp
sub
jle
add
aad
stos
jl
cmpb
mov
loope
into
mov
nop
xchg
aas
sbb
in
adc
test
add
call
adc
push
push
push
jle
fcmovb
stos
out
lahf
cwtl
movl
adcl
pop
mov
jl
and
pop
or
aam
sub
cmp
ret
mov
jle
or
push
fmuls
pop
icebp
dec
sbb
add
in
sub
sbb
mov
rolb
in
push
lock
call
in
out
sbb
xchg
aas
mov
inc
fidivl
mov
js
cmp
dec
jbe
out
dec
inc
push
push
bound
pop
adcl
and
push
and
setne
push
and
push
add
xor
jecxz
in
sbb
mov
push
nop
lret
in
rcpps
add
sbb
mov
loope
cmp
je
lea
push
add
lock
inc
add
pushf
loope
loop
in
pushf
push
mov
push
ficoml
mov
xchg
lret
or
ret
lahf
in
sbb
lods
xchg
dec
ret
mov
dec
loopne
mov
cli
adc
pop
add
test
hlt
add
jge
mov
xor
jecxz
push
push
lret
push
lea
jnp
adc
pop
lods
data16
mov
mov
mov
insb
push
dec
dec
mov
push
push
xor
add
cs
dec
addb
sbb
sub
dec
sub
cltd
sub
sar
add
int
js
mov
xor
fstp
outsl
arpl
mov
add
sahf
inc
add
shlb
cmp
cmp
jg
and
adc
mov
imul
xor
xor
pop
sub
pcmpeqd
mov
out
repz
cwtl
push
sbb
push
adc
jnp
out
xor
cmp
inc
adc
jle
xor
mov
inc
sub
push
mov
arpl
mov
xorl
xchg
mov
neg
sbb
and
push
orl
in
push
sbb
or
jg
outsb
ret
imul
addb
adc
cwtl
mov
mov
push
fnstsw
sbb
cwtl
sub
test
pop
mov
jecxz
fldl
add
movzbl
jle
pop
mov
into
jnp
mov
cmp
addr16
cmpb
cmpsl
clc
push
cwtl
push
into
adc
lock
and
loopne
in
sbb
or
lcall
add
movl
repz
push
movsl
pusha
xor
push
push
push
and
push
add
mov
mov
push
jo
lret
push
mov
test
mov
sbb
test
cs
pusha
fwait
loop
loope
xlat
loop
pop
adc
in
cmp
clc
or
ret
clc
add
pusha
jne
addl
aad
lahf
sbb
mov
mov
xor
aad
sbb
lock
lock
jmp
pop
in
movl
push
pop
push
repz
adc
rcrb
inc
call
les
mov
mov
out
fisubrs
cmp
fisubrs
mov
dec
adc
rcll
mov
pushl
jp
mov
int3
mov
sbbl
add
push
xchg
popa
lea
mov
sub
incl
jne
push
mov
inc
ds
or
pop
cmp
pop
sub
lea
ret
push
pop
push
pop
jl
ret
mov
fstpl
movl
push
fistpl
dec
cmp
inc
fbstp
sub
mov
loope
and
imul
or
lods
and
xchg
sub
mov
nop
add
stos
les
sbb
push
dec
sbb
fs
dec
ljmp
out
ds
test
pusha
push
push
addb
inc
jo
or
rclb
adc
pop
push
pusha
test
push
push
mov
cmp
sub
push
push
lea
jo
pop
sarb
fs
push
js
jg
sub
add
and
add
push
loope
nop
jmp
bswap
ror
dec
addl
or
push
je
cwtl
adc
cmp
push
je
cmp
rcl
mov
inc
xor
mov
dec
add
ss
int
add
or
mov
sbb
add
adc
and
push
push
in
ja
push
and
jo
push
je
xchg
sbb
add
push
push
je
push
mov
bound
adc
xor
call
faddl
stos
jno
enter
shrb
xor
pop
cmp
fldl
fmull
filds
fcoml
xor
jl
adcb
mov
mov
push
push
lahf
push
or
adc
imul
addb
add
add
sahf
andl
ds
push
imul
in
sbb
push
lds
pop
push
xor
jl
cmp
sub
inc
daa
mov
xchg
mov
dec
inc
push
add
push
mov
pop
inc
ljmp
add
xchg
xchg
scas
clc
shl
mov
cmp
sub
dec
sahf
imul
in
or
es
adc
rcll
arpl
cmc
aam
xchg
push
add
sbb
adc
and
add
and
add
pushf
data16
and
ja
push
push
mov
call
add
push
xchg
push
push
arpl
arpl
pop
shll
cmp
cld
cld
add
repz
add
je
mov
cli
shll
jge
xchg
lock
push
loopne
and
clc
sub
push
push
jo
rcrl
fs
dec
or
jmp
push
mov
dec
lea
mov
dec
push
movzwl
sbb
iret
add
fdivl
enter
loopne
xorb
hlt
dec
mov
fmull
sbb
cmpsb
aam
push
int3
int3
dec
push
push
push
lods
test
and
push
xchg
push
sarl
sbb
leave
loope
sbb
in
mov
inc
push
sbb
js
cwtl
add
xor
call
movsl
jno
test
dec
popa
dec
mov
jno
xor
add
es
xchg
add
andl
adc
and
sub
inc
lods
mov
jecxz
loop
xchg
xor
and
dec
loopne
sbb
sub
icebp
sbb
add
cltd
and
arpl
sar
push
shlb
pop
adc
jl
dec
add
xlat
adc
add
and
mov
mov
dec
bound
imul
sar
sbb
out
decl
add
mov
imul
push
lahf
mov
push
in
jle
pop
pushf
nop
imul
adc
in
jmp
cmc
sub
ret
leave
mov
stc
add
fst
add
push
push
enter
sarl
lea
pop
cmp
je
cmpl
call
push
cmp
jne
push
lea
jbe
shr
fisubl
and
mov
pop
push
jmp
out
fdiv
shr
es
lea
or
mov
loopne
sub
mov
outsl
sbb
sbb
mov
inc
sbb
js
adc
push
dec
push
mov
test
lea
or
inc
add
sub
sub
call
jp
cli
jle
fldz
data16
push
ljmp
cmp
fisubrl
int3
jmp
adc
fstpt
fwait
dec
lcall
add
xor
sub
aaa
ds
pushf
cmc
outsb
outsl
sub
sbb
loope
jne
sbb
popf
mov
or
sub
arpl
mov
fidivrs
cmp
notb
cmp
mov
adc
sbb
xchg
sbb
and
and
inc
dec
add
popf
imul
pop
lea
cmp
or
iret
out
or
jmp
mov
loopne
jno
pop
fistl
paddd
mov
add
sub
mov
sub
xor
mov
inc
orb
fdivrp
shll
mov
cli
sub
sbb
mov
mov
mov
xchg
adc
inc
push
fcoms
lock
jmp
fbld
xlat
inc
jl
mov
clc
or
addr16
adc
je
add
addb
std
ds
clc
in
push
pop
movb
adc
mov
leave
adcl
push
sub
and
mov
push
push
mov
shll
xchg
cs
push
add
and
mov
mov
and
int3
xchg
mov
es
sub
sbb
xchg
sti
sbb
add
xor
je
mov
xchg
xchg
and
inc
insl
pop
xchg
sub
ja
mov
xor
sbb
xchg
mov
movsl
jno
xchg
xchg
and
add
sar
or
jge
jp
lcall
test
or
sub
push
test
sub
sahf
or
jo
aas
add
xchg
sbb
outsl
loopne
pushl
popa
jmp
jecxz
xchg
cmp
inc
jmp
add
or
adc
inc
mov
xchg
enter
xor
sbb
lahf
into
lock
pop
rorb
clc
sbb
cmp
and
push
or
push
mov
mov
das
orb
add
push
aam
xchg
js
cmpb
xchg
inc
cmp
test
ljmp
jg
adc
push
add
push
jo
lock
jae
shrb
inc
jg
ljmp
adc
cltd
pop
lahf
sbb
bound
subl
adc
nop
adc
fstp
dec
std
adc
push
push
sbb
ds
rcll
mov
jb
sbb
cmc
enter
sbb
adc
cld
mov
pop
cmp
setl
cmp
lods
out
adc
lea
pop
in
leave
adc
push
mov
or
lcall
sbb
mov
imul
push
cltd
inc
pop
sub
push
mov
push
jb
jg
je
test
and
sbb
movsl
mov
pop
ret
lahf
or
inc
and
add
out
addb
xor
or
add
xor
push
sub
clc
pextrw
les
iret
sub
cmp
setae
lcall
and
add
mov
mov
js
lret
mov
outsb
or
cmp
or
jae
push
je
sbbl
jb
add
inc
push
nop
sub
mov
lea
push
adc
cmpsb
call
movsl
push
adc
pop
pop
mov
ffreep
in
dec
jecxz
filds
push
dec
xor
push
pop
inc
sbb
aam
mov
push
outsl
mov
hlt
adc
lock
push
fcoms
rcr
mov
add
add
xor
dec
adc
push
push
inc
pushf
cmpsb
jb
push
push
dec
push
push
add
add
das
xchg
in
std
mov
add
cmp
and
cmp
adc
ret
jge
pop
repz
jbe
push
push
pop
add
mov
mov
push
cmp
ja
movzbl
test
cmp
outsl
jno
adc
loope
or
adc
imul
add
add
adc
sub
add
inc
mov
pop
dec
dec
sbb
cmpl
inc
insb
mov
mov
nop
push
lds
ds
adc
cs
movl
bound
jbe
cmpsb
int3
insl
add
add
call
lret
enter
jmp
prefetcht2
adc
jecxz
xchg
add
xor
jmp
adc
lret
lret
sbb
and
and
inc
iret
cmp
add
iret
push
dec
xor
cltd
sub
cmp
lea
cmp
push
pop
adc
mov
lcall
bound
std
sbb
add
or
push
dec
add
mov
add
push
push
xor
sbbb
rorl
std
sub
in
or
pop
mov
addb
imul
or
add
outsl
out
mov
pop
inc
jl
mov
sbb
push
or
and
push
mov
or
int
jo
das
les
mov
xor
rcll
pop
dec
sahf
out
frstor
pop
dec
and
and
arpl
int
punpckhwd
dec
add
add
cwtl
push
pop
pusha
mov
pop
push
aaa
repnz
or
pop
stos
push
jle
divl
cli
nop
and
pop
xor
es
shr
sarb
je
add
arpl
xlat
icebp
in
or
and
je
push
mov
and
shlb
mov
movsb
jbe
mov
subb
out
ret
dec
and
out
popa
lahf
adc
in
adc
leave
or
cmp
cmp
xchg
imul
push
push
dec
pushf
shll
shlb
pop
jp
dec
daa
pop
enter
popf
mov
ret
dec
mov
add
and
sbb
and
sub
int3
mov
cmp
or
jle
and
lea
inc
xchg
sbb
inc
push
pop
push
addr16
lret
push
push
clc
and
loopne
add
mov
or
nop
addr16
push
xor
or
mov
or
sbb
ss
add
add
fcmovnu
nop
iret
mov
int
insb
or
or
add
nop
addr16
xor
adc
push
push
fisttpl
cltd
xchg
loopne
cltd
fisttpl
in
xchg
adc
outsb
or
out
xchg
outsb
xchg
or
fldenv
or
inc
jb
mov
loop
add
pop
mov
lret
sub
pop
push
dec
cltd
fs
pop
call
pop
add
and
adc
jno
adc
mov
push
add
loopne
dec
add
roll
mov
sbb
pushf
or
add
roll
leave
cmp
add
mov
incl
pusha
out
mov
mov
inc
es
adc
movl
jne
mov
mov
pop
add
mov
or
push
data16
push
jb
rorl
insb
fldl
sub
insl
shl
in
and
or
adc
and
rcl
sub
adc
sub
test
push
mov
pop
push
mov
pop
dec
mov
out
xchg
and
sbb
and
sub
icebp
mov
adc
mov
test
dec
adc
push
inc
cli
ja
mov
jae
imul
mov
cmpsl
lahf
in
xlat
ss
push
jns
mov
push
add
adc
insb
icebp
sbb
jmp
push
or
nop
xor
mov
push
adc
ss
sub
push
adc
jmp
xchg
pop
test
inc
push
push
paddb
or
add
add
add
fs
mov
mov
cmpsl
ret
addr16
add
or
pop
scas
jg
adc
cld
xchg
mov
test
mov
jle
bound
out
ds
int3
add
xor
cmp
aam
cmove
adc
sub
popf
jo
out
push
std
stc
cmp
mov
mov
cs
or
adc
les
push
das
push
test
cmpsb
pop
jp
into
movl
jge
inc
or
jne
popf
push
push
dec
pop
cmp
push
pop
lcall
pusha
js
dec
pop
pop
mov
adc
add
bound
mov
or
sub
push
pop
pop
rol
je
movsl
test
ret
lods
xlat
and
inc
in
subb
push
stc
and
pop
add
or
mov
pop
jne
test
push
push
or
mov
sbb
dec
push
cmp
add
mov
leave
mov
push
cmp
push
mov
stos
cmpsb
sbb
bnd
push
push
out
add
lcall
roll
lret
into
or
leave
push
cltd
scas
sti
ja
lahf
push
fmull
pop
mov
inc
xor
shrl
cmpsb
push
rolb
mov
cld
dec
inc
push
sub
shlb
in
jnp
xchg
loope
push
inc
push
pop
sub
lock
add
adc
shlb
xchg
mov
pop
aam
shl
mov
sbb
sbb
mov
sbb
xor
push
in
push
sbb
xor
scas
or
lret
push
pop
sbb
outsb
rcrb
add
dec
pop
dec
adc
mov
inc
cmc
jbe
cmp
mov
pop
dec
clc
xor
mov
inc
xor
xchg
push
and
adc
pop
jne
xlat
pop
mov
cmp
or
inc
sub
adc
or
jle
and
addb
data16
adc
stc
or
mov
call
loope
xor
and
fs
and
xor
add
into
ja
mov
push
and
lods
pop
mov
cmpsl
out
add
daa
jmp
scas
push
cwtl
dec
lret
dec
test
or
outsb
pop
stos
and
and
and
xor
inc
dec
and
ljmp
xchg
mov
loope
adc
pop
mov
and
ffreep
mov
push
adc
push
pop
sub
and
cltd
inc
sbb
jmp
aam
xor
fists
scas
shll
les
pop
push
push
xor
add
sub
add
sub
sbb
lcall
out
mov
pop
imul
inc
loope
push
and
insl
jl
cmpsb
mov
push
sub
int
push
pop
rolb
and
enter
mov
xor
sahf
pop
inc
dec
dec
or
int
adc
xor
mov
cs
push
fwait
cltd
cmp
nop
pusha
sbbb
jnp
push
add
adc
loop
jb
cmp
mov
mov
xor
or
push
sub
add
ret
imul
cmp
add
scas
in
sbb
push
pop
push
adc
xor
xor
jo
loop
pop
sub
fadds
ds
cmp
pop
add
movaps
push
cld
lods
je
jnp
adc
lret
nop
pop
ljmp
dec
ss
push
roll
repz
mov
sbb
stos
add
inc
cmp
jnp
in
movsb
fs
push
out
cmp
and
cmpsl
push
sub
test
cmp
cmpsb
ret
xor
cld
inc
rclb
in
xor
sub
xchg
or
je
jmp
xor
repnz
xor
and
enter
push
cmp
push
iret
inc
adc
stos
inc
cmp
std
pop
daa
mov
and
mov
jno
pop
cmp
mov
mov
add
or
or
sub
sbb
mov
leave
or
test
into
in
sbb
push
xor
fbstp
leave
orl
mov
pop
lds
push
or
or
loopne
das
add
movl
xchg
and
iret
inc
jb
cmp
imul
xchg
inc
outsl
addr16
cmpsl
cmp
xor
and
jb
sbb
test
push
mov
in
pop
mov
pusha
pop
add
inc
mov
cmp
push
or
sub
or
adc
push
mov
xor
ja
test
sarb
in
loopne
push
cli
testb
cmp
out
adc
loopne
xchg
int
or
add
int3
mov
enter
movsb
cmpsl
jnp
adc
test
push
rorb
mov
adc
call
and
add
or
add
sub
gs
mov
mov
push
mov
sbb
sub
add
pop
aad
bound
xchg
les
outsl
add
cmp
enter
sub
cmpsb
xor
aam
mov
xor
movsb
push
adc
or
jmp
hlt
push
popf
mov
lods
mov
adc
loopne
or
pop
mov
inc
xchg
inc
mov
cmp
fs
scas
sbb
clc
mov
mov
call
mov
cltd
push
into
je
mov
cmp
push
jp
add
dec
jno
inc
cmp
sbb
popf
popa
mov
mov
fwait
into
sub
adc
lds
inc
cmp
mov
adc
cs
and
sub
fs
test
or
cmp
push
push
rclb
push
jp
into
lea
enter
inc
aad
out
sub
pop
xor
ret
push
movsl
negl
imul
hlt
test
or
dec
pop
push
push
or
int3
popa
add
jge
shlb
or
and
jns
inc
mov
add
xor
fs
and
pop
fsubr
fcomps
stos
lock
push
adc
dec
push
adc
or
scas
mov
notl
js
add
sbb
inc
sbb
adc
popa
ret
lds
xlat
cmp
push
inc
scas
cmpsb
add
fists
push
mov
das
rcrl
das
popf
orb
push
xchg
and
or
sub
pop
pop
imul
hlt
je
aam
movsb
ret
sar
or
mov
pusha
nop
cmpsb
xor
movsb
lret
add
pop
sti
pop
mov
push
jno
or
xorb
nop
lock
out
push
adc
adc
or
loop
jns
xchg
jl
cmp
sub
nop
test
and
shr
pop
xlat
adc
xor
adc
xor
sub
xor
add
in
sub
sub
pushf
imul
pop
and
inc
aad
adc
sub
fistps
dec
cmp
push
sub
dec
rorl
adc
dec
sbb
insb
xor
pop
stos
inc
enter
lcall
and
xchg
loope
mov
pop
push
or
enter
add
sub
cmpb
sbb
sbb
subb
adcl
adc
cmp
and
out
or
push
pop
repnz
cwtl
push
and
add
inc
testl
xor
xchg
lods
cs
je
out
add
in
sbb
add
pop
leave
orl
jl
std
test
and
dec
jns
add
mov
out
pop
mov
adcl
cmp
pop
add
sti
loop
outsb
lds
mov
mov
aam
sbb
xor
pop
lock
xor
and
inc
fisubrl
movsb
mov
imul
mov
add
push
in
jns
pop
pop
dec
mov
dec
loopne
cmp
sbb
addr16
jno
sbb
push
sbb
in
fxch
add
lret
test
dec
and
insb
and
leave
jmp
dec
and
loopne
pop
mov
cmp
add
adc
mov
fs
cmp
mov
add
aad
pop
cmpsb
add
mov
sub
push
ret
add
push
mov
sbb
pop
cmpsb
imul
test
not
cmp
imul
and
pop
push
in
rcll
aad
mov
or
cmp
add
add
xchg
mov
push
or
adc
mov
jns
mov
mov
mov
inc
lds
xor
add
test
out
sub
sti
sbb
cmp
jae
or
movsb
and
jg
push
sub
inc
test
xchg
cs
cmp
and
mov
lcall
lret
add
out
jecxz
cmp
pop
je
rclb
dec
push
lret
xor
inc
cs
and
or
xchg
insb
mov
push
adc
push
test
arpl
imul
push
fsts
js
rorb
lret
push
ds
shlb
and
add
add
mov
sti
je
je
test
iret
frstor
adc
mov
and
jnp
jne
out
adc
pushf
sbb
dec
mov
cmp
lea
pop
jmp
mov
dec
clc
and
or
loop
clc
jge
fsubrs
inc
loopw
lcall
pop
inc
fists
or
mov
jle
clc
vmread
pop
fmull
mov
pop
push
imul
or
les
jl
lock
ror
adc
cltd
xor
pop
jne
push
or
sbb
dec
add
push
jns
lahf
add
jmp
push
mov
push
dec
bnd
sbb
cmp
xor
adc
mov
sub
and
or
or
fstl
push
addr16
adc
aaa
jno
push
lahf
adc
jle
jb
inc
add
fwait
xchg
cmp
lea
fisttps
add
addb
mov
in
in
aam
loop
ret
jge
stc
in
sub
push
sbb
mov
push
and
es
pop
test
or
jne
xor
test
in
dec
arpl
xchg
jle
push
add
popa
sti
sbb
shlb
in
lea
push
push
test
add
sub
mov
out
fildl
dec
dec
xchg
and
push
jb
mov
sbb
mov
test
or
add
fisttpl
pusha
adc
notl
dec
add
pop
add
hlt
jns
pusha
add
add
mov
inc
shrb
test
jl
data16
xor
dec
sbb
inc
and
xor
inc
lcall
xchg
rcrb
in
jo
clc
sahf
in
add
mov
mov
ret
add
sbb
inc
pop
ret
push
push
sbb
iret
mov
test
insb
jo,pt
aam
push
xchg
sub
mov
xlat
jecxz,pn
add
mov
decb
loopne
fcomps
incb
jle
mov
mov
xor
push
mov
incl
or
syscall
pusha
add
add
push
loop
push
hlt
add
dec
pop
stos
add
jg
adc
jae
and
outsb
cmpl
pop
push
mov
test
xor
jb
pusha
loopne
scas
cmp
push
loopne
sbbb
or
data16
pusha
pop
pusha
loopne
jb
ja
stos
mov
mov
jp
or
scas
insb
jle
aas
js
mov
sbb
orl
ja
sub
das
jle
xrelease
jo
sbb
fimuls
sub
adc
aas
add
xor
in
js
sub
cmp
sysexit
mov
outsb
mov
sbb
mov
movsb
adc
sbb
movsb
xchg
xorb
adc
xchg
mov
pop
pop
or
mov
push
mov
add
push
push
sub
jmp
xchg
pop
ds
sub
je
int
test
push
push
aad
add
pusha
lock
aam
dec
sub
aad
or
push
mov
mov
imul
push
add
push
addl
xor
add
mov
add
and
mov
xor
adc
sub
mov
pusha
outsb
push
jecxz
das
inc
insb
pushf
fimuls
jmp
dec
mov
ret
outsb
test
or
or
fstpl
stos
or
sbb
add
nop
sub
js
hlt
mov
cmp
add
ret
je
mov
fs
iret
scas
jmp
ss
std
sub
and
insb
mov
xor
cmp
test
xor
out
xchg
push
or
mov
mov
cmp
add
jge
push
cmp
mov
jbe
adc
loop
movsb
xor
mov
leave
aad
sub
sub
sbb
cs
and
dec
pop
cmpsb
pop
adc
stos
xor
sub
popa
loope
mov
and
rcr
je
mov
lds
test
xchg
inc
add
jns
js
sete
iret
push
pop
adc
pop
push
daa
loope
dec
adc
add
jb
dec
or
pop
adc
daa
in
pushf
add
repz
inc
dec
sahf
add
sarl
pop
inc
jle
sub
dec
xor
xchg
mov
or
ret
lcall
add
add
clc
addr16
shl
outsl
popa
cmp
sbb
push
jg
pop
and
sub
sbb
lods
imul
adc
fcoml
test
adc
sub
add
adc
test
inc
fisubrs
mov
inc
outsb
push
and
scas
push
xchg
lock
adc
or
xor
or
movb
lcall
pop
and
test
or
dec
sbb
ds
shll
repnz
sar
adc
or
scas
xor
pop
xchg
add
std
mov
rorl
lea
sbb
mov
gs
push
hlt
addl
sub
mov
sub
xor
cmp
xorl
dec
lock
out
push
jns
or
xor
cmc
fcoms
pop
es
cmp
sbb
sbb
ret
xchg
and
add
into
faddl
mov
and
test
mov
sbb
test
and
jb
push
cmc
dec
sahf
sbb
inc
or
dec
leave
xor
pop
or
mov
xchg
push
push
inc
mov
adc
je
cmp
push
add
sbb
inc
sub
xor
sbb
jno
jmp
not
and
aaa
push
and
add
and
in
out
adc
aad
bound
jo,pn
cltd
or
iret
push
sbb
cwtl
cmp
push
fildll
mov
orb
mov
add
push
push
enter
icebp
fsubrl
and
mov
mov
xlat
dec
lahf
je
push
leave
xchg
inc
lock
mov
test
xor
inc
jle
ret
cs
adc
push
shl
call
adc
fidivrl
movb
xor
sbb
pop
sub
test
inc
dec
scas
bound
dec
or
lea
dec
out
psadbw
mov
mov
ja
fcompl
lcall
mov
lods
or
dec
or
shlb
adc
mov
xor
mov
sbb
push
add
dec
stc
mov
rol
xor
cmp
ds
ljmp
jecxz
mov
and
inc
ds
loope
jo
cmc
mov
mov
test
negb
mov
leave
xor
mov
ret
and
add
xchg
xchg
or
pop
jmp
push
jg
sarb
in
add
lcall
cmp
jne
sbb
inc
fistps
dec
je
inc
jp
ja
cmpsl
ret
iret
das
bnd
mov
add
adc
and
cmp
int3
loope
aaa
mov
pushf
mov
mov
cmpb
test
sar
adc
xchg
sub
ds
cwtl
sbb
jae
pop
pop
and
mov
jbe
inc
adc
add
sub
or
lea
jge
push
push
add
push
mov
xor
inc
pushf
sub
push
push
int3
bound
inc
sub
cmp
lock
cmp
pushl
mov
xor
push
inc
jl
shr
fistpll
mov
cmp
jg
mov
sbb
outsl
xorl
sbb
test
pop
jmp
jns
or
nop
or
out
adc
mov
xchg
inc
mov
cs
or
gs
dec
push
and
add
inc
leave
xchg
int
jb
fisubrl
orl
shrb
or
push
adc
cld
aam
mov
sub
je
cmpb
pop
lahf
add
cmp
dec
cwtl
lea
add
cmp
push
insb
mov
sti
rclb
adc
xchg
add
sub
cmp
add
sub
mov
in
cmc
sbb
lret
add
cmp
push
addl
or
pop
xor
lahf
adc
mov
dec
hlt
jge
add
adc
fildl
inc
inc
cli
or
dec
ds
xchg
pop
push
movl
add
jbe
pop
iret
jno
enter
push
scas
sub
push
es
sbbb
mov
push
add
adc
sahf
jl
mov
cld
addl
jg
push
add
push
repz
adc
sub
ret
enter
sbb
dec
dec
cld
sub
rol
loope,pn
lea
mov
fucomp
adc
push
add
leave
pop
out
jno
mov
hlt
sub
enter
push
test
inc
mov
mov
dec
ss
jne
inc
adc
mov
test
add
lods
loopne
xor
loope
insl
test
imul
adc
or
or
subl
inc
push
cmp
mov
xchg
or
or
or
leave
outsl
lods
gs
dec
and
mov
cwtl
btr
mov
push
jae
decl
loope
or
dec
inc
or
mov
inc
insl
inc
jle
pop
pop
addb
mov
ret
aas
cmp
loopne
inc
jle
js
add
or
add
jns
push
jb
test
iret
outsb
inc
add
sub
adc
pop
xchg
outsb
sbb
cmp
sbb
cwtl
fsubs
pop
push
adc
cld
movsb
test
add
and
push
adc
ljmp
test
pop
mov
fnstenv
or
call
test
add
adc
jl
mov
and
adc
cmp
jle
lock
testl
lock
loop
cmp
test
insb
decb
jge
lret
rcll
or
jo
loope
iret
push
ret
sub
lea
std
shlb
cwtl
rolb
xchg
inc
jp
or
push
push
mov
pop
lea
out
push
loop
mov
push
outsb
push
add
and
or
xchg
xlat
xor
lods
shll
jns
insb
pop
mov
add
add
pop
hlt
xchg
stos
mov
or
mov
sbb
movhps
mov
push
shll
insl
pop
pop
mov
jmp
jl
add
ret
pop
add
inc
xor
add
mov
shrb
inc
add
push
add
mov
movb
rorb
cltd
inc
or
adc
movl
mov
push
xchg
inc
ss
or
mov
and
rolb
add
loop
pop
ret
jp
stos
jo
je
jmp
and
inc
mov
add
dec
jb
add
test
sub
inc
and
jbe
push
andl
push
sbb
or
push
iret
cmp
nop
pop
or
test
add
rcrb
jns
arpl
mov
inc
pop
mov
xchg
pop
push
push
mov
pop
inc
cmp
jb
insl
ss
mov
inc
xor
xor
and
in
cmp
inc
das
shlb
shll
xor
xchg
je
push
lret
pop
stos
movsl
push
sub
xchg
int
push
iret
xor
dec
movsl
adc
push
ret
imul
inc
setge
add
sbb
sbb
add
or
je
push
gs
clc
cmp
shll
jo
add
lret
jbe
hlt
in
mov
xor
sub
lock
sbb
adc
and
jl
js
inc
mov
and
shr
ss
rorb
je
ds
xchg
cmp
cmpsb
or
push
mov
sbb
push
dec
popf
push
sub
xchg
test
or
mov
rorb
push
push
inc
enter
dec
push
add
sub
mov
dec
add
push
xor
xor
lds
adc
sbb
fwait
jo
and
add
inc
aam
movsl
popa
pop
inc
jecxz
mov
pop
dec
lcall
inc
push
in
sub
jmp
push
dec
ds
mov
addb
adc
int
jne
daa
push
push
sbb
jl
addr16
test
in
push
ds
popf
add
rclb
mov
inc
add
test
push
inc
inc
cs
xor
dec
cmpb
je
jge
xor
sub
pop
xlat
nopl
fists
cmp
fwait
sbb
mov
cmp
add
xor
mov
push
std
dec
cli
loopne
push
push
scas
shl
xchg
mov
fs
jl
popf
int3
and
pusha
add
adc
xor
cwtl
sbb
pop
int3
dec
mov
pop
xchg
shll
add
stos
movsb
pop
push
in
scas
pop
sbb
cmp
adc
cmp
mov
xchg
mov
lds
mov
push
scas
mov
cmpb
and
in
ret
adc
pop
adc
push
dec
dec
roll
inc
pop
ljmp
pop
pop
jecxz
mov
add
outsl
push
lahf
sahf
sub
jns
sub
imul
sub
push
cltd
int
dec
jmp
rcrl
fists
stos
or
pop
insl
or
push
pop
in
js
adc
lock
add
push
arpl
fnstsw
jle
pop
jne
ret
push
mov
push
push
add
adc
or
stos
ds
loop
mov
add
lds
xor
pop
gs
repnz
mov
sub
mov
adc
insb
adc
adc
sahf
sub
loope
mov
pop
aaa
and
sarb
sbb
add
cmpb
add
or
adc
pop
and
stos
and
rorl
jecxz
sub
orl
out
adc
outsb
roll
or
dec
inc
mov
mov
or
jg
push
or
roll
les
sbb
pop
adc
cwtl
xchg
clc
mov
and
dec
dec
sbb
divb
in
fs
and
inc
stos
pop
cmp
cmp
sub
cmp
gs
push
je
repnz
mov
dec
push
add
add
inc
leave
or
push
adc
add
or
cs
push
jecxz
or
mov
push
adc
cmp
push
fsubrs
cltd
sbbl
leave
add
add
or
adc
xchg
adc
cmpsl
push
movsb
and
insb
loope
push
pop
dec
mov
xchg
mov
and
push
mov
int
sbb
movsb
lret
bound
add
inc
dec
inc
add
inc
add
cmp
shr
dec
dec
inc
add
sub
stos
mov
adc
add
or
leave
xor
sbb
es
lock
fsts
lcall
lcall
push
sub
xor
lcall
mov
or
dec
add
dec
mov
pop
sbb
cwtl
flds
test
ficoms
js
stos
pop
imul
test
insb
sti
fisubs
cwtl
sbb
dec
scas
add
out
cmp
jl
imul
mov
js
sbb
jmp
push
pop
ds
inc
or
je
out
mov
dec
and
ret
mov
icebp
mov
mov
xlat
lret
or
out
fcmovne
scas
or
je
dec
jge
xchg
push
cmpsl
cmp
dec
addb
push
and
pop
nop
adc
add
addr16
sbb
push
outsl
push
pop
xor
pop
mov
and
inc
dec
and
dec
lcall
xor
cltd
dec
stc
and
popf
cwtl
dec
push
push
jo
mov
sub
cmp
or
or
sub
sub
mov
ljmp
or
movsl
add
test
je
lea
aam
es
add
rcr
add
sbb
call
out
add
xor
pop
cmp
jb
pop
pop
or
int
jg
je
push
cmpsl
std
sbb
lea
push
push
inc
sub
jo
push
sbb
push
dec
and
pop
push
loopne
add
jl
mov
ret
pop
orb
std
imul
add
in
test
xchg
mov
cmpb
dec
clc
sub
or
jge
fwait
mov
lret
xor
addb
xchg
push
fucomip
pushf
nop
scas
cmp
sahf
fists
push
push
sub
mov
push
hlt
xchg
adc
loopne
imull
or
out
cmp
lea
add
pop
push
push
push
push
rcrb
xor
sahf
push
push
push
push
rolb
test
adc
sub
notl
add
add
rol
xor
mov
sub
pop
add
insb
loop
mov
int3
enter
js,pn
ret
data16
sarb
mov
sbb
lahf
add
fcoms
jmp
dec
js
add
sbb
ljmp
push
adc
cmp
cld
scas
sbb
mov
jno
jmp
push
pushf
js
sbb
mov
je
pop
pop
jle
inc
push
imul
lcall
sar
inc
add
or
stc
mov
rorb
enter
push
mov
or
jge
out
ret
sbb
and
dec
dec
add
xchg
jbe
out
lret
je
arpl
and
insl
add
sti
adc
stos
push
push
mov
dec
mov
adc
ss
out
in
rorb
push
mov
insb
in
jg
cmp
dec
add
adc
and
ret
add
cmp
push
call
sahf
jle
sub
add
mov
pushf
movzwl
and
add
lock
dec
jo
mov
xor
icebp
push
push
and
das
push
push
ds
sbb
push
es
lods
adc
push
test
adc
jmp
push
cmc
sub
pusha
cs
in
sbb
shl
and
jmp
jne
mov
jge
and
or
dec
pop
das
pusha
imul
mov
divb
sbb
adc
jbe
pop
xor
or
cmp
clc
testl
mov
cmp
je
push
sahf
mov
fiaddl
fmuls
les
mov
addr16
xor
sbb
mov
test
mov
push
push
xlat
add
add
repz
sbb
sub
pusha
ljmp
push
push
mov
sbb
pop
and
add
neg
inc
addb
mov
xor
negb
cmp
add
sbb
adcb
and
adc
and
jnp
dec
jmp
xor
scas
divl
sahf
push
cmp
in
xor
xor
add
xor
pop
push
clts
and
fimull
mov
pop
or
mov
rclb
ret
lock
fisttps
mull
ja
pusha
and
push
mov
mov
push
add
js
popf
inc
sbb
loopne
add
push
or
jecxz
and
sarb
inc
call
sbb
pop
xor
hlt
es
dec
xor
pop
push
lds
mov
addr16
repnz
pop
lret
or
pop
ret
push
jb
add
sbb
mov
testb
add
or
hlt
add
push
push
jmp
scas
or
sbbb
cli
inc
lock
gs
faddl
adc
add
sarb
pop
or
ret
mov
testb
dec
or
adc
pop
stos
sbb
inc
or
movl
inc
xchg
push
sti
push
dec
mov
fnstenv
cmp
or
jnp
jae
mov
ret
mov
pop
pop
lahf
inc
cmc
out
into
sbb
add
dec
jb
pop
lea
pop
fcoms
rcrl
jl
mov
add
mov
dec
lock
pop
and
add
sahf
sub
pop
dec
jl
mov
dec
push
stc
or
sbb
test
and
add
imul
sbb
scas
pop
ret
js
sti
mov
movsb
cmp
ret
dec
imul
or
cld
xchg
rclb
sub
clc
or
jg
xor
jns
lea
jne
push
push
inc
lods
mov
inc
js
pop
sarl
add
push
or
and
paddq
sbb
aam
jb
fsubrs
jae
movsb
movsl
push
pop
adc
pop
pop
sahf
inc
cmp
jl
rorl
add
mov
movl
iret
shll
add
jb
ja
je
pop
mov
add
pop
add
inc
icebp
sub
inc
ret
push
mov
pusha
cmp
adc
test
xor
hlt
xchg
out
movzbl
dec
loopne
imul
adc
inc
roll
or
stc
and
or
add
ret
ss
push
add
or
or
daa
aas
add
out
adc
pop
ja
and
mov
lret
mov
inc
or
add
add
mov
mov
inc
pushf
dec
sahf
into
fcmovbe
xor
in
dec
sbb
fistps
notb
int
clc
mov
mov
repnz
mov
xor
cs
das
je
or
xorl
outsl
or
jne
icebp
pop
cmp
mov
inc
je
mov
lea
dec
jae
popa
adc
mov
sahf
inc
clc
xchg
mov
decl
cmp
or
jmp
jbe
xchg
test
jg
push
and
add
or
add
add
pop
sub
inc
jmp
inc
and
and
inc
mov
fimull
mov
js
nop
mov
ds
jnp
push
jne
sub
cmp
mov
dec
lcall
sbb
sub
and
add
adc
pusha
jo
push
dec
and
add
shlb
outsb
push
ds
sub
cmp
or
jne
cmp
sbb
mov
jl
lock
xorl
dec
adc
or
movsb
cmp
cld
mov
cmp
ja
inc
xor
mov
cmp
jne
mov
jnp
out
cld
push
push
adc
inc
mov
mov
mov
cli
and
subb
add
mov
outsb
cli
inc
cmp
decl
xor
cmp
ja
pushw
shlb
xor
sub
cmp
ja
int
jmp
and
ljmp
cmp
xor
add
mov
pop
push
cmp
inc
pop
mov
cmpsb
mov
mov
fiaddl
add
mov
mov
lahf
lret
jnp
pop
pop
mov
add
push
cwtl
aas
xor
and
lcall
leave
add
mov
je
add
ret
ret
outsl
stos
jne
ret
push
test
mov
and
incl
jae
mov
jmp
push
pusha
aas
nop
xorl
jbe
jo
jne
adc
dec
test
lea
push
mov
cld
and
and
xor
xchg
xchg
lret
cmp
push
pop
insb
les
adc
add
adc
push
cmp
sti
and
test
adc
je
test
jne
into
jl
bnd
xor
dec
add
and
outsl
dec
adc
movb
inc
ss
negb
push
rcll
lret
push
sbb
movb
jnp
xor
ljmp
inc
dec
outsb
cwtl
or
and
xchg
insl
lods
out
dec
imul
adc
rorl
jae
add
mov
in
pop
ja
cltd
or
test
jg
shr
mov
jo
sbb
or
test
mov
adc
cmp
ret
mov
cmp
mov
ret
ret
pusha
es
mov
adcb
push
jl
xor
mov
cmc
sahf
add
cmpb
pop
and
sbb
xchg
pop
clc
adc
sub
ljmp
pop
cld
mov
repz
cmpl
mov
cs
das
mov
or
mov
in
sbb
or
push
xor
jle
insl
mov
lods
cmpb
and
dec
adc
pop
inc
fldt
cmp
daa
dec
out
add
jg
test
and
push
ret
adc
ss
sub
push
imul
cmp
aam
test
es
sbb
jnp
and
add
loop
sub
add
sarb
js
mov
mov
je
cmp
je
xchg
jae
jecxz
add
je
sub
es
gs
mov
or
xchg
xchg
out
inc
and
testb
adc
push
xor
sbb
mov
jae
aas
mov
cs
andl
mov
lea
sbb
add
out
nop
mov
inc
paddsw
add
sub
in
test
popa
pop
leave
mov
push
mov
daa
in
test
mov
or
test
cmp
je
lcall
pop
dec
pusha
jp
loopne
lock
add
jns
jnp
add
fcmovb
mov
fiadds
insl
inc
push
xor
xor
mov
sbb
loop
lcall
sbbb
cmp
jb
mov
push
js
cmp
jb
mov
ja
xor
pop
clc
pushf
cmp
mov
rorb
popa
mov
mov
dec
sbb
or
sbb
xchg
into
xchg
dec
imul
cltd
clc
in
icebp
scas
jecxz
and
mov
mov
arpl
adc
add
jge
fdivrs
push
mov
jb
mov
xchg
dec
in
inc
int
in
mov
mov
lea
push
push
les
les
lods
jg
hlt
inc
loope
sbb
jae
js
inc
or
and
arpl
mov
and
push
lea
inc
in
jnp
fcoms
lahf
pop
repnz
push
addl
mov
movsl
xor
pop
and
xchg
mov
or
jne
add
push
push
lea
or
pop
xor
out
inc
fimull
cmpb
xchg
or
cmpsl
and
and
pop
or
add
add
sti
push
or
cli
cld
divl
xchg
inc
cmp
roll
or
push
and
inc
ljmp
jge
jbe
mov
inc
and
dec
dec
inc
dec
cld
sub
dec
adc
cwtl
daa
imull
xor
mov
mov
enter
pop
cmpsb
aas
movsb
mov
sub
sbbl
xchg
jns
push
popa
and
rol
inc
ja
loope
in
jne
lcall
mov
add
fidivl
cmp
jne
or
iretw
cmpsb
iret
addl
data16
xchg
mov
loope
sbb
mov
add
orb
imul
jae
shlb
adc
inc
je
ficoml
cmp
fcmovne
lea
mov
push
inc
inc
inc
jne
sub
outsb
jmp
movb
cmp
outsl
insb
mov
pop
inc
nop
xlat
mov
inc
test
pop
jbe
roll
inc
xor
out
ljmp
lret
and
inc
movsb
cmp
and
cmp
out
inc
jle
push
inc
push
ret
and
das
clc
stos
lcall
stos
insb
push
push
xchg
sub
xchg
inc
push
jb
sbb
add
inc
rcr
jg
imul
cmpb
addl
adc
icebp
fwait
mov
push
gs
cmp
orl
mov
inc
inc
mov
aaa
push
mov
inc
addr16
test
das
in
shl
adc
ret
xchg
loope
pusha
push
scas
call
and
mov
inc
mov
stos
out
mov
jg
jae
cmp
or
mov
fisttpll
lret
inc
mov
int
inc
sbb
sarl
cmp
lock
push
mov
and
in
cmp
inc
sub
jne
add
rcr
shr
test
and
inc
and
push
mov
filds
add
dec
sub
je
or
je
push
pop
jne
inc
call
sbb
rorb
push
not
adc
sub
test
imul
lods
mov
subb
cmp
sub
xor
lcall
inc
mov
mov
mov
lcall
popa
loopne
mov
push
fiaddl
xor
inc
adc
inc
push
cmp
out
xchg
mov
xchg
mov
pop
mov
push
lea
sbb
dec
dec
cmp
pushf
push
mov
pop
loop
inc
and
jo
mov
xchg
outsl
movsl
or
xchg
sub
mov
lret
lds
inc
pop
cs
dec
xor
cmp
jge
jb
cmp
hlt
jb
mov
or
test
jmp
roll
ret
add
mov
in
sub
mov
or
sarb
pusha
mov
inc
insl
loope
js
fcoml
mov
or
sub
into
xor
cmpsl
test
mov
push
inc
add
mov
popf
pop
push
push
ds
scas
je
push
fs
repnz
pusha
rcll
and
add
push
inc
mov
fadd
int3
aaa
lahf
jae
cmp
pop
add
sbb
push
nop
or
xchg
test
and
push
cmp
dec
sub
into
les
or
shl
or
pop
or
lret
dec
mov
inc
sbb
loope
sub
sbb
push
add
sarb
dec
push
lock
push
push
or
mov
add
cmp
xor
call
mov
xor
sbb
or
pop
push
pop
in
stc
push
sbb
jle
mov
je
dec
xchg
inc
inc
or
dec
xor
xor
push
ds
daa
xor
pop
sbb
mov
lret
xchg
or
dec
mov
push
ljmp
inc
decl
add
nop
adc
sub
leave
hlt
pop
in
add
lds
cmp
inc
dec
data16
adc
mov
or
sbb
dec
add
les
xor
adc
push
lds
jb
pusha
shrb
push
ffreep
and
and
sub
jle
or
ret
dec
xchg
push
pushf
push
mov
or
xchg
popa
test
lock
or
call
cmp
pop
push
jne
dec
cld
les
subl
sub
fbld
mov
cmpsl
cmp
sub
push
sbb
add
xchg
sub
das
sub
mov
fidivs
mov
adc
dec
adc
pop
push
into
fisubrl
nop
sarl
add
cmp
sub
ret
and
loopne
push
cmpsl
push
cmpsl
dec
or
loopne
push
dec
cmp
out
cmp
jns
loopne
in
inc
pusha
pusha
jbe
lret
adc
ficoms
sub
and
xor
hlt
adc
sbb
xor
in
stos
sbb
pop
jbe
aam
push
fidivl
daa
inc
nop
mov
dec
popa
enter
mov
add
jne
sbb
jmp
xor
mov
push
pusha
sbb
pop
jecxz
mov
xchg
xchg
popa
or
pop
add
adc
int3
mov
or
pop
dec
jecxz
mov
push
dec
ret
push
pop
faddl
jno
cmp
jl
or
bound
mov
nop
sbb
jno
or
pop
aaa
push
cmp
lahf
mov
push
lret
or
inc
dec
or
imul
inc
push
push
adc
mov
inc
adc
mov
or
jnp
mov
popl
add
adc
jmp
add
pop
ret
sbb
mov
xor
je
popl
and
leave
mov
bound
push
sub
scas
movl
jmp
or
add
add
ret
sahf
push
adc
dec
sbb
jbe
cmp
and
sbb
mov
lcall
xchg
les
lret
repz
orb
adc
fs
pop
or
adc
lods
push
loopne
lret
jbe
scas
int3
jge
test
nop
cwtl
or
cmp
add
push
pop
aam
lahf
fisubrl
js
lods
pop
push
dec
fdivs
fldt
hlt
adc
mov
mov
xor
outsl
or
or
int
jecxz
hlt
jno
faddp
and
xor
xor
pop
mov
push
out
push
int
pop
dec
add
jns
icebp
xor
xor
ficomps
sub
int3
push
test
jne
aas
push
mov
or
cmp
pop
add
inc
inc
fsubs
mov
sbb
or
pop
dec
dec
push
dec
xor
add
mov
nop
add
xchg
mov
jle,pt
mov
sahf
jnp
int3
lea
lods
push
insb
jg
inc
js
adc
and
hlt
sbb
stos
xchg
push
jmp
lods
and
movsb
aaa
adc
test
push
jae
cmp
in
and
mov
sbb
iret
rcll
test
sbb
push
imul
sub
mov
icebp
cmp
mov
mov
mov
and
clc
sbb
pop
loopne
jno
push
and
mov
enter
jno
mov
inc
cmovbe
jg
mov
fwait
jmp
inc
in
xor
jae
clc
xlat
push
sub
mov
fcoms
ljmp
sub
jbe
mov
inc
mov
adc
adc
jne
rcr
jecxz
movsl
lea
or
jmp
test
sti
pop
mov
test
pop
add
cld
lods
mov
mov
add
sbb
dec
jmp
fmul
mov
xchg
add
push
or
xorl
push
push
aam
ds
adc
loopne
jl
cmp
inc
jge
shrl
add
xor
add
je
daa
jno
and
xor
js
lds
add
andl
aaa
in
das
or
stos
or
pop
pop
jp
adc
movsb
ret
xchg
push
add
sub
andl
push
mov
inc
xor
mov
bound
lods
rcll
faddl
cmp
xor
cmpsl
sbb
push
sbb
lods
jp
stos
or
and
cmp
jae
dec
push
xor
mov
add
nop
cmp
push
lahf
add
or
or
mov
loopne
out
adc
xor
cmp
xchg
xchg
js
add
or
ret
mov
and
add
sbb
aaa
rcrl
fldenv
ljmp
imul
insb
push
iret
insb
push
inc
rorb
les
and
shll
movsl
or
push
add
ja
add
fs
aam
push
addr16
popa
fsubl
dec
or
mov
dec
xchg
or
ja
xor
xlat
mov
pop
test
stos
push
faddl
add
rcll
ss
xchg
ret
pop
xor
push
mov
cmc
or
sub
push
sub
cmp
gs
aad
cltd
roll
stc
sarl
inc
jbe
xor
clc
mov
leave
lods
or
add
cmc
mov
sub
xchg
fsub
or
movsl
outsl
rclb
loop
into
scas
inc
fidivl
cwtl
dec
lahf
dec
clc
stc
push
fwait
lea
adc
add
sub
or
mov
rcrb
pop
int3
inc
lds
lea
enter
sbb
and
movsb
subl
mov
nop
inc
fidivrs
inc
and
inc
sahf
gs
xor
subl
xor
iret
call
sub
or
jo
push
into
push
inc
push
dec
int
jecxz
adc
jge
xchg
inc
xchg
dec
ja
clc
push
stc
push
cmp
mov
cmpsb
cmp
add
popf
lahf
xor
mov
push
adc
rcrb
and
test
adc
dec
movsl
and
jns
or
jo
ret
pop
xchg
add
clc
add
jne
movsb
divb
pusha
les
les
inc
jl
sbb
push
mov
add
sub
negb
mov
pop
jns
push
or
jbe
lods
cmp
sbb
jns
mov
sbb
arpl
sbb
mov
xchg
inc
and
cmp
add
or
mov
mov
std
sbb
sbb
cmp
sub
je
mov
sbb
push
jb
in
sbb
sbb
xchg
mov
cs
and
loope
lods
pop
jae
or
cld
pop
test
add
leave
cmpsb
push
push
sub
add
mov
mov
enter
adc
pop
aam
or
shll
adc
lods
sahf
mov
js
xor
and
in
mov
cmp
and
push
adc
or
out
lahf
cmp
sbb
mov
rclb
js
sbb
shlb
add
fisttps
les
cmp
xor
scas
and
jnp
pop
mov
inc
cmp
push
cmp
pop
push
pop
mov
inc
and
pop
je
mov
dec
jo
xor
into
xor
add
inc
repz
outsl
mov
xor
cmp
pop
sete
inc
clc
mov
fnstsw
pop
ljmp
cmp
repz
sbbl
xor
cmp
scas
cmpsl
outsl
mov
cld
or
push
adc
cmp
lcall
jl
or
int
inc
shll
sbb
daa
shlb
lret
sub
and
sub
or
leave
in
pop
xor
sub
sub
test
and
and
out
sub
in
sbb
stc
out
sub
add
push
int
jle
enter
insl
aad
dec
jmp
ficompl
je
mov
orb
stos
popa
sub
mov
adc
and
add
mov
push
pop
xchg
aad
dec
jne
mov
dec
mov
lock
bound
test
lock
add
jl
sub
push
add
in
xchg
hlt
mov
dec
fsubrl
outsb
or
jne
lds
sbb
sbb
xor
aaa
mov
pop
bndstx
and
sub
add
flds
sbb
in
add
sbb
inc
es
pusha
scas
xor
dec
add
pop
dec
sbb
hlt
fcmovnu
mov
add
xor
stos
and
pop
es
push
and
sbb
or
je
fdivl
cmp
insl
pop
push
jl
inc
dec
mov
mul
push
sbb
push
add
pop
dec
xor
pop
xor
or
xor
and
mov
cmp
add
sbb
add
aaa
fidivs
sbb
sbb
incl
adc
imul
inc
fs
push
inc
adc
add
and
daa
inc
adc
sbb
jns
inc
mov
pop
cs
mov
xor
lea
icebp
cmp
mov
andb
pop
icebp
or
ja
clc
push
testb
sub
xor
outsb
sbb
repnz
cmp
rorb
adc
mov
adc
sbb
cmpsb
fs
sub
and
insb
pusha
and
mov
dec
nop
and
sarb
mov
sub
hlt
sbb
jb
xor
pushf
cmp
mov
xchg
mov
and
sub
mov
stc
and
fldenv
and
add
int
inc
in
mov
pop
imul
and
push
pop
aas
rorl
js
add
mov
mov
sbb
pop
and
jb
sahf
fidivrs
add
jmp
xchg
mov
test
call
and
hlt
add
fwait
cwtl
mov
repz
sub
orl
add
imul
and
sub
int
lea
fsubrs
shll
rolb
xchg
xor
pop
mov
and
cmp
adc
js
push
outsl
les
sbbb
mov
inc
pop
cmp
sub
or
push
lods
pop
ljmp
movsl
inc
push
mov
mov
and
mov
cmp
repnz
mov
adc
pop
dec
inc
popa
push
pop
cmp
shll
mov
rolb
and
stc
sbb
pusha
inc
or
mov
push
push
das
sbb
sub
nop
mov
sbb
arpl
mov
add
and
push
fwait
icebp
cmpsl
dec
push
or
push
xor
xchg
orl
cmp
add
or
xor
xchg
hlt
mov
js,pn
bound
icebp
inc
xchg
lea
lock
xchg
add
ret
add
sbb
imul
push
push
stc
stos
pusha
jmp
ja
mov
push
pop
dec
xchg
cmp
jmp
or
daa
sbb
sub
add
mov
or
pop
je
mov
out
add
lret
and
fwait
and
ret
pop
dec
or
dec
or
fstl
sub
gs
pop
mov
fadd
mov
inc
mov
punpcklwd
das
dec
dec
sub
mov
int
pop
adc
pop
push
in
pushf
inc
adc
push
jmp
dec
add
leave
xor
xchg
cmp
add
xlat
and
and
imul
pop
push
inc
mov
jo
pop
and
sbb
xchg
xor
cmp
loopne
pop
fimull
or
lock
lahf
mov
cmpl
aaa
adc
into
arpl
sub
daa
xchg
add
ss
inc
adc
mov
add
jg
inc
ss
add
cltd
pop
xor
mov
mov
push
dec
add
rclb
aad
adc
add
add
aaa
dec
sbb
rorb
pop
test
je
mov
xchg
sbb
or
dec
add
adc
rolb
or
adc
ss
or
jb
jmp
inc
or
xor
xchg
push
or
cmp
and
or
mov
sbb
pop
mov
or
and
jecxz
arpl
ret
lock
inc
fists
inc
inc
push
sbb
xor
mov
clc
stos
orb
cmp
xchg
lods
mov
fsubrs
push
pop
mov
push
sub
in
jne
das
jecxz
orl
pop
and
add
mov
js
cld
dec
mov
push
rcl
xor
pop
cld
cmpl
pop
xor
roll
jne
push
rcr
testl
loop
cld
aad
jmp
lea
mov
or
dec
jle
call
addl
or
or
loope
jge
xorl
js
and
call
sbb
mov
push
xor
add
push
mov
cmp
orb
push
mov
ret
jns
xchg
rolb
sbb
or
fs
das
ds
repnz
push
mov
jecxz
idivl
sbb
popa
dec
test
cmp
push
sub
sub
in
test
addr16
imulb
push
pop
ret
pop
or
bound
loopne
xorl
dec
xchg
cld
push
pop
loopne
push
adc
and
push
mov
xor
add
outsl
add
int3
idivl
cmpb
push
xlat
bound
push
sub
and
addl
outsl
and
xchg
daa
add
push
or
mov
and
pop
xor
cmp
stos
mov
pop
mov
cmp
adc
loopne
enter
sub
inc
add
jno
adc
aas
in
cmpl
pushf
lahf
inc
lret
or
adc
dec
sbb
scas
xor
aad
mov
push
push
sub
addr16
mov
cmp
aas
cmp
pop
inc
adc
enter
orb
nop
pop
jp
inc
adc
push
gs
lahf
sub
sbb
lea
stos
adc
mov
adc
jecxz
pushl
adc
fdiv
adc
mov
xor
shr
adc
and
mov
jl
push
sbb
scas
add
xor
cmp
cwtl
cli
test
pusha
xor
lods
insl
jne
lds
add
ss
sbb
in
jle
add
movb
xor
in
mov
pusha
adc
movsb
mov
sbb
jo
sahf
cmpl
lea
loope
lcall
es
ret
pop
fcmovu
add
sbb
cmp
pop
movsb
push
xchg
push
sbb
insb
pop
pop
ret
stos
outsl
sbb
or
cmc
iret
xchg
orb
or
movb
pop
data16
lds
or
cmp
and
pop
add
or
leave
leave
adc
or
shrb
and
or
pusha
xor
mov
movsl
add
loopne
inc
mov
dec
or
adc
push
fcmovu
adc
adc
push
decb
jne
push
jge
cmp
pop
xor
sub
push
outsb
test
ficompl
mov
mov
addr16
ljmp
pop
lret
add
clc
jge
lods
adcb
pop
cmp
jecxz
sub
pop
push
lea
je
clc
pop
jne
out
mov
inc
inc
aas
adc
sub
push
push
inc
data16
lcall
test
or
jg
push
pop
push
out
adc
add
add
push
mov
aas
sbb
mov
or
inc
cmp
lea
inc
cmp
add
push
sub
fisttpl
rcll
push
sub
jecxz
ja
or
addb
sub
mov
fnstsw
push
adc
pushl
xor
fsts
in
pop
movsl
xorl
aaa
mov
add
adc
icebp
push
mov
xorl
fs
mov
insl
mov
mov
sbb
mov
xchg
sbbl
movl
or
shlb
clc
mov
mov
shll
jbe
and
sbb
or
and
mov
cmp
fiaddl
mov
push
mov
bound
lret
adc
xor
add
cmp
pop
les
jnp
mov
or
lret
adc
push
pop
rclb
mov
dec
sbb
enter
fdivrl
and
and
xchg
pop
adc
cmp
lea
test
push
pushf
lea
push
adc
jle
les
cmp
inc
xchg
sbb
push
lds
add
inc
sbbl
mov
repnz
xor
adc
es
mov
add
sub
ds
std
dec
ljmp
and
mov
sbb
aad
xor
sub
pop
xchg
sbb
xor
push
pop
inc
leave
jp
int3
jl
mov
in
add
add
icebp
xchg
pop
cmp
in
push
shrl
push
push
pop
lods
sub
call
les
lock
push
or
fiadds
out
ljmp
insb
add
adc
push
inc
push
arpl
add
pop
popa
pushf
dec
add
lods
popa
stc
push
push
imul
inc
popl
ret
popa
mov
jl
pop
mov
sbb
pop
sbb
push
mov
mov
aam
fadds
loop
add
pop
and
or
filds
mov
xor
cmp
sub
scas
dec
xchg
frstor
pop
add
add
cmc
mov
nop
sar
cmpsl
dec
xchg
and
pop
pop
add
jae
cmp
pop
stos
jbe
fbld
loopne
movsl
push
push
xchg
push
fwait
push
sub
add
xchg
inc
add
rolb
rorb
fmul
mov
cmp
jge
mov
mov
das
and
jmp
lcall
call
inc
inc
mov
js
mov
pop
test
lahf
mov
ret
pushf
flds
ds
or
inc
xor
adc
mov
in
push
inc
mov
int
jbe
adc
add
inc
or
sub
out
add
mov
mov
sub
add
mov
pushf
jo
jbe
jge
divb
cs
aas
or
fcmove
add
scas
mov
lods
xor
mov
test
push
fsub
lds
lea
add
mov
add
jmp
and
sbb
pop
pop
or
mov
cmpsl
inc
sbb
test
sbb
cs
jl
xchg
add
xor
mov
pop
pushw
les
mov
push
push
cmp
adc
mov
or
add
push
ss
mov
sbb
dec
movsl
and
jnp
inc
mov
add
pusha
gs
adc
xor
adc
dec
nop
xorl
jnp
popa
mov
shlb
sub
lea
add
je
shlb
dec
dec
adc
and
sti
les
flds
fmull
test
shrb
xchg
cmp
mov
mov
pusha
test
scas
push
add
sarl
cmp
mov
sub
or
sub
out
fimuls
and
icebp
mov
cli
test
dec
push
std
add
inc
push
add
push
aam
adc
dec
shlb
mov
lea
shlb
xor
dec
movsb
and
push
bound
in
fldcw
jle
add
lds
adc
or
push
mov
add
pop
push
sub
sbb
aam
sub
mov
add
jmp
nop
pop
sar
mov
addr16
ret
push
imul
sbb
jmp
jae
add
or
test
or
dec
lock
mov
addb
fsubrp
pusha
add
shll
movsb
sarb
cmp
or
bound
pop
and
dec
add
in
add
cmpsb
inc
jmp
cmpl
test
test
fdivl
gs
popa
scas
adc
cmp
jge
push
pusha
jle
mov
push
sub
adc
xchg
mov
mov
fidivrs
pop
clc
jg
mov
xor
dec
and
rolb
jg
fsubl
push
fcoms
lret
mov
xor
fdivrl
add
popa
sbb
inc
cmp
test
add
inc
arpl
jae
xor
adc
outsb
mov
mov
adc
add
fsubrs
out
jmp
mov
xchg
int3
aam
push
xor
inc
dec
loope
mov
jmp
iret
jl
inc
xor
mov
or
add
mov
sbb
cmp
lea
xor
std
push
sbb
pop
pushl
test
ret
pop
add
and
add
or
pop
insb
addl
adc
js
cmp
int3
rolb
add
mov
xchg
adc
or
shll
aaa
orl
pop
andl
jb
cmp
sub
inc
popf
clc
loopne
sbb
mov
inc
or
sub
or
outsb
sub
sbb
sbb
fiadds
out
decb
stos
add
mov
or
add
enter
cmc
imul
jmp
add
aaa
les
ljmp
cmp
mov
push
push
mov
loop
std
add
aaa
imul
and
out
mov
dec
push
mov
or
mov
jmp
and
sub
aad
mov
cmp
push
jge
cmpl
sbb
jo
je
mov
mov
hlt
inc
push
pop
mov
call
inc
fistpll
push
mov
cmp
loope
mov
ret
pop
add
movzwl
jb
clc
push
mov
leave
push
dec
add
jmp
add
jl
add
add
loopne
ss
push
add
ret
mov
ret
and
or
daa
add
pop
gs
repz
cld
adc
insb
adc
mov
ret
pop
psubq
sub
push
push
fsubp
mov
fcmovbe
sbb
mov
cmp
lea
or
jp
pop
push
and
ds
dec
sub
loopne
lods
adc
das
mov
add
shrl
xchg
hlt
clc
inc
lea
lea
push
push
aaa
sahf
dec
orl
test
adc
fmuls
pop
jecxz
and
jle
inc
and
push
into
xchg
cmp
jbe
lds
cwtl
mov
mov
or
jl
repnz
cmp
jb
hlt
pop
cmp
sahf
roll
int
mov
lds
mov
ljmp
pop
call
cmp
mov
dec
dec
mov
lds
stos
out
cmp
and
enter
adc
dec
rorl
or
pop
rclb
xor
aaa
scas
test
xor
daa
icebp
aas
js
jge
je
std
and
aam
test
push
rolb
movl
sarl
adc
jl
mov
xor
lods
faddl
in
int3
push
shl
jo
lea
mov
adc
orl
jle
shrb
fists
mov
lea
mov
js
add
inc
fists
repnz
jmp
inc
cld
loopne
out
scas
jne
inc
push
mov
push
rolb
gs
mov
dec
lods
addl
add
mov
push
adc
jne
adc
dec
jl
mov
push
sub
cmpsb
adc
pusha
pop
jp
xlat
movsb
push
sub
xchg
nop
sbb
mov
subl
add
mov
inc
add
dec
add
enter
test
je
shl
daa
and
jmp
push
xor
in
jg
ret
sbb
adc
lods
jmp
sub
sbb
mov
push
push
out
mov
add
out
add
or
jl
jg
and
jp
sbb
mov
inc
das
push
sub
or
add
push
mov
pop
push
add
inc
sub
push
or
xor
dec
or
fsubrl
adc
dec
ja
xchg
rorb
popf
xor
pop
pushf
call
or
mov
mov
pop
fcomps
pop
inc
push
loopne
xor
adc
xor
loop
add
inc
xor
mov
xchg
imul
push
repz
outsb
jb
inc
or
mov
push
adc
sbb
outsb
rorl
mov
fadds
cmp
fnstcw
add
ds
mov
pop
add
loope
dec
xchg
lahf
push
push
fiadds
push
push
test
mov
or
in
je
xor
inc
daa
sbb
loopne
add
sub
jmp
pop
mov
fdivl
in
mov
test
aam
in
push
jno
add
filds
mov
mov
mov
or
pop
movzwl
and
jge
dec
in
lea
in
dec
rcll
aam
fadds
mov
mov
jmp
xor
outsb
mov
mov
scas
cmp
add
sarb
mov
mov
loop
sub
push
jnp
out
loopne
xor
sbb
or
lea
dec
lock
mov
ss
testl
mov
lods
cmpb
int
push
movsb
ret
std
aam
push
mov
je
fimull
fcoms
insl
stos
inc
scas
aam
add
add
fucom
sarl
clc
push
add
mov
sub
mov
push
mov
mov
cmp
cmp
or
xchg
pop
push
repz
push
xor
jo
outsb
andl
hlt
mov
or
push
sub
jae
jmp
push
xor
sbb
sbbb
xor
mov
pop
sbb
dec
shlb
adc
xchg
jg
mov
shl
add
inc
add
mov
push
loopne
push
ret
pop
subb
push
and
fmuls
mov
dec
mov
add
enter
push
mul
seto
neg
pop
enter
enter
cmp
es
pushf
xchg
sahf
pop
push
mov
or
push
xor
xor
xor
mov
in
add
cmp
sbb
add
pop
cmp
push
incl
sub
dec
or
dec
pop
clc
sub
mov
aas
icebp
inc
sbb
adc
lsl
lcall
daa
xchg
sbb
lahf
pop
ret
movntps
pop
ret
lock
xor
shl
xchg
cs
jbe
mov
faddl
shlb
sub
push
sbb
xor
test
loop
jmp
sbb
or
inc
ror
sarb
xchg
push
push
push
pop
fdivs
sarb
mov
mov
xchg
or
sbb
sbb
mov
sub
inc
test
add
push
cmp
fadds
cmp
decb
jl
add
mov
add
or
fldcw
in
fistpll
jp
add
aaa
xchg
dec
adc
jbe
jnp
xorb
inc
cmp
or
test
mov
add
add
mov
int3
push
jno
adc
loope
cs
add
pushf
sbb
stos
loop
pop
or
or
outsb
add
cmp
mov
pop
mov
inc
nop
and
clc
loop
push
cmp
dec
cmp
dec
push
sbb
enter
pop
inc
pop
fmuls
repnz
xchg
push
push
cli
lcall
clc
push
dec
jl
or
cli
or
cmp
sar
adc
add
sti
jmp
push
pop
bound
or
xchg
imulb
clc
loope
stos
lea
mov
sahf
stos
jne
push
or
int3
fiadds
jnp
add
lcall
xchg
sub
sbb
ljmp
iret
fidivl
adc
dec
and
lea
or
push
and
xor
xor
jae
aam
jle
inc
adc
repz
pop
add
mov
inc
pop
pop
filds
jns
sub
pop
and
test
lods
fdivrl
add
dec
ja
mov
test
adc
dec
movsl
add
pusha
iret
pop
push
xor
fxch
push
bound
or
pop
xor
xor
push
stc
xor
add
dec
xchg
jb
cmp
jns
test
test
test
add
lcall
mov
cmpsb
es
inc
mov
xchg
and
xchg
shl
ret
lds
fisttpl
xchg
sub
rolb
and
lea
dec
loopne
add
outsb
aam
push
aas
stc
dec
out
fbld
push
mov
inc
jno
daa
movb
aam
je
movsb
out
cmpsl
ljmp
xor
jmp
lea
adc
pop
fcmovnu
into
pop
in
inc
hlt
push
push
rcrl
ss
jbe
xchg
mov
dec
enter
rcrl
pop
rorb
nop
inc
hlt
pop
push
lahf
and
or
rorl
sbb
cmpl
push
add
repnz
xchg
lds
and
rorb
push
cmp
ret
sub
adcb
daa
add
xor
sti
inc
lock
sbb
test
ljmp
out
pop
mov
std
sbb
insl
dec
cmp
gs
lock
add
imul
cmpb
xchg
or
invd
push
pop
add
xchg
push
dec
outsb
push
sbb
das
int
inc
push
fistps
lods
add
aad
mov
pop
pop
mov
adc
dec
and
jbe
add
mov
inc
mov
dec
or
test
push
mov
adc
mov
sbb
adc
inc
mov
lock
xor
pusha
fs
dec
and
push
mov
rol
sbb
outsl
imul
adcl
imul
sahf
testb
adc
pop
repnz
xchg
sub
hlt
push
mulb
sbb
mov
mov
repz
xchg
sbb
mov
pop
sub
mov
xor
shr
sub
jbe
or
pushf
push
loopne
scas
jns
inc
push
cmc
aad
cmp
mov
dec
push
call
xor
and
inc
test
pop
pop
add
jne
mov
or
dec
clc
add
adc
pop
adc
xor
sbb
push
and
xchg
xchg
data16
and
sub
dec
cmp
mov
sbb
xorb
xchg
lds
shll
mov
imul
js
sti
andb
xor
js
cmp
and
sub
sbb
dec
sbb
xchg
and
scas
cmp
sbb
sbb
ret
adc
push
adc
call
adc
adc
xchg
fbstp
cli
push
hlt
loop
dec
sub
or
push
mov
or
mov
das
and
and
xchg
jp
ficoml
sub
push
cmp
daa
inc
xlat
and
sbb
xchg
mov
out
add
cmpl
jle
out
push
push
adc
jne
push
mov
inc
mov
je
mov
fnstcw
and
mov
dec
xchg
rcll
pop
mov
mov
xchg
mov
in
lock
adc
pushf
lret
in
dec
xor
cmp
test
inc
cltd
stc
pop
cmp
mov
or
inc
mov
sbb
and
pop
sbb
cs
mov
mov
pop
pop
aas
mov
mov
dec
adc
inc
mov
push
jb
dec
adc
adc
add
icebp
cmovno
pop
dec
imull
std
inc
loopne
test
inc
call
ja
sub
adc
fistl
movnti
mov
ret
rorl
sbb
mov
arpl
ja
add
pop
imul
sub
mov
xor
jbe
adc
mov
add
xchg
int
loope
xchg
add
rol
js
loopne
mov
sbb
xor
call
insl
mull
lea
or
outsl
and
push
loope
or
clc
and
lar
fwait
jmp
lea
lods
in
mov
push
push
mov
lret
test
mov
inc
inc
jle
shrb
in
and
push
movsb
stos
inc
adc
insl
push
roll
ljmp
dec
insl
jno
ret
inc
pop
add
jne
mov
inc
pop
or
xor
scas
add
leave
pop
inc
test
pop
call
or
repz
int
loopne
mov
add
or
add
les
sbb
add
rorl
and
repz
push
pop
js
xchg
push
insl
push
adc
push
mov
punpcklwd
jecxz
add
push
or
clc
fbld
sbb
sub
xchg
dec
pop
inc
push
ja
or
and
cmp
test
inc
and
xchg
sbb
aas
imul
pop
ja
mov
stos
mov
lahf
les
xor
test
sarb
inc
or
inc
push
popa
xchg
adc
ds
or
cmpsb
jns
mov
xchg
pusha
or
outsb
pop
xor
sbb
xchg
bound
xchg
rorb
jb
xor
push
lahf
jg
mov
lahf
loop
rcr
or
xchg
xchg
fisttpl
dec
jle
sbb
sub
roll
outsb
mov
je
sbb
ret
xor
sbb
inc
adc
pop
push
adc
sti
add
xor
mov
push
lea
jo
jmp
jmp
lret
mov
enter
add
cmp
test
rorl
push
popa
inc
mov
orl
mov
xchg
mov
fisubrl
lea
cmp
ja
or
insl
dec
fistps
add
es
sub
push
push
pop
pop
sub
mov
cmp
stos
adc
jecxz
add
mov
sbb
jns
mov
add
inc
mov
add
push
cmc
push
xlat
imul
mov
or
cwtl
mov
aas
pop
add
push
cmp
roll
push
dec
inc
xor
add
js
leave
jno
add
and
fcomps
xor
inc
adc
stc
shlb
mov
push
lcall
jmp
and
adc
js
push
cli
out
mov
and
fwait
jo
jns
pop
rolb
and
fldz
inc
cmp
jae
inc
push
push
cmp
leave
je
mov
repnz
inc
shl
add
or
inc
dec
in
push
clc
and
sahf
xor
cld
jae
cmpb
add
sbb
imul
inc
or
stc
movsb
pop
test
lods
sbb
cmp
xchg
jmp
jmp
dec
or
add
push
sbb
je
inc
inc
add
add
mov
shlb
or
add
les
adc
mov
push
testb
pusha
sbb
mov
pop
add
push
dec
add
jge
je
imul
movb
dec
or
rolb
loopne
imul
mov
pop
fldl
xor
iret
hlt
test
popf
fsin
incl
mov
inc
lea
lea
fdivrl
sbb
rorb
loopne
lock
in
xchg
ss
sbb
inc
sbb
jae
out
jl
xchg
in
xchg
test
dec
push
clc
and
leave
xchg
fnsave
add
movl
jne
lea
add
adc
xchg
test
push
cmp
sar
cmc
lods
push
repz
jge
adc
jle
sbb
pop
bndldx
movlps
push
mov
cmp
leave
add
pusha
cmp
mov
lret
nop
dec
cmp
mov
js
push
push
push
call
cmp
add
test
test
pop
repz
orb
jl
imul
jmp
daa
enter
mov
shlb
pop
je
mov
mov
add
mov
je
xchg
shrl
push
or
push
mov
xchg
dec
cmpsl
push
adc
mov
mov
sub
mov
sbb
lds
and
sub
pop
and
sar
and
pop
pop
mov
pusha
inc
loopne
lock
inc
cmp
mov
aam
jmp
dec
lds
scas
enter
add
test
call
divl
sbb
lods
or
mov
mov
jg
inc
cmpsb
movsl
sbb
or
push
test
inc
das
fs
push
jne
mov
cmpsb
and
add
sub
adc
dec
in
or
in
or
cmp
xor
cmp
je
lods
push
adc
and
lods
movsb
inc
adc
lock
xor
mov
jno
xchg
xor
inc
adc
insb
xchg
pusha
jb
std
mov
mulb
adcb
shrb
xor
cmp
push
push
push
insl
int
add
cmp
pop
ffreep
sti
push
sub
clc
mov
loope
je
mov
mov
push
sahf
dec
mov
ljmp
rolb
lea
mov
mov
adc
lock
sub
xlat
add
ja
mov
icebp
inc
pop
mov
mov
jae
pushf
adc
push
fsubrs
rol
addl
int
test
pop
cmc
lods
adc
adc
sbb
pop
mov
sarb
ret
xchg
or
xchg
push
xchg
push
xor
jp
or
jge
cmp
jb
aam
ret
or
add
sub
push
mov
xchg
dec
out
xchg
test
loop
jbe
push
je
test
add
add
xchg
flds
cmp
push
mov
aas
je
pop
fmuls
inc
jns
pop
sbb
aas
cmp
insb
ss
or
inc
addl
repnz
ficomps
jle,pt
push
push
push
add
and
push
and
mov
test
stos
pusha
or
cmp
sub
jle
push
cltd
pop
shrb
sub
cmp
pop
inc
pop
movsl
cmp
roll
lock
mov
scas
xchg
xor
sbb
xor
adcb
int3
adc
dec
jnp
bound
sub
add
or
pop
setge
jmp
pop
push
cmp
sub
call
cmp
jae
xlat
imul
ret
cmpsl
rcr
jmp
mov
ljmp
popa
add
inc
pop
and
inc
jmp
repnz
decl
jg
jae
lea
push
cmpb
jne
cmpb
jne
dec
rep
rol
add
sarb
lock
ljmp
neg
sbb
and
add
stc
lods
les
sbb
out
pushf
sbb
mov
cmpb
cmp
cwtl
push
das
cld
and
sbb
inc
or
cmp
scas
push
adc
repnz
jl
sbb
xchg
xchg
push
jmp
imul
lods
add
push
das
jp
sbb
pop
and
nop
jge
push
arpl
shr
loop
sbb
inc
jmp
mov
lcall
aad
xor
jmp
jbe
xchg
and
push
add
mov
push
sahf
push
mov
inc
inc
jbe
mov
inc
adc
mov
aaa
mov
push
cmp
jmp
sarl
out
push
jo
mov
xchg
lods
adc
push
test
fnstcw
pop
loop
pop
mov
lods
jne
pop
mov
addr16
push
mov
pop
lret
lods
in
adc
xor
cmpw
mov
dec
add
mov
call
ret
jg
and
xor
nop
jecxz
push
aaa
or
fsubrs
or
jle
js
xchg
push
xor
aam
and
mov
jne
stos
sbb
push
jmp
mov
push
mov
mov
lahf
shlb
shrl
movsb
pushl
popf
rcll
mov
test
je
mov
call
inc
jb
sbbl
push
jae
jo
sub
popf
mov
aam
sbb
dec
pop
push
add
rcr
iret
js
leave
ja
insb
push
lea
sbb
in
in
ret
inc
push
ds
fcomip
testb
xchg
fstl
sub
and
adc
mov
jo
add
fcmovne
cwtl
lock
sarb
push
inc
jmp
push
lods
cmc
popf
adc
sub
cmp
xor
lea
push
and
xor
sbb
add
cmc
add
sbb
inc
and
sub
mov
xchg
pop
push
lea
and
jne
jecxz
add
fdivl
mov
shrl
or
faddl
sbb
inc
lea
mov
sbb
loop
daa
pop
add
sub
lea
mov
sbb
jge
mov
jbe
outsb
mov
lea
push
push
andl
push
mov
movsb
lods
fwait
and
or
fcoms
stos
ret
cld
jmp
mov
pop
test
push
sbb
sub
inc
jge
mov
pop
pop
pop
movl
push
jl
mov
add
or
rolb
inc
sbb
rcl
push
aad
pop
jno
lret
hlt
push
or
clc
push
ret
rcll
push
push
mov
ss
cs
sbb
xor
pop
pop
lods
movhps
pop
pop
jno
adcb
xchg
xor
or
pop
xor
enter
or
mov
xchg
mov
movsb
or
adc
repz
enter
push
ret
sub
add
or
jge
mov
test
mov
xor
mov
inc
stos
or
je
add
sbb
jae
sub
add
cmp
xchg
icebp
test
pop
mov
je
push
out
ret
push
ljmp
fists
cmp
jb
cmp
xchg
mov
xchg
adc
cmp
mov
jp
jle
push
hlt
adc
push
pushf
xlat
adc
or
lret
add
inc
es
mov
add
pop
inc
mov
xor
pop
mov
test
add
xchg
sub
mov
dec
movsl
jle
dec
push
push
mov
loop
or
mov
mov
negl
push
pop
call
and
rclb
cmp
imul
imul
cmpl
mov
adc
test
mov
sbb
or
cmpsl
fldcw
push
mov
loopne
sub
or
push
test
mov
mov
mov
pusha
popa
adc
and
pop
or
in
adc
mov
sub
mov
push
push
jecxz
cmp
mov
inc
mov
dec
sbb
push
add
aaa
aaa
add
mov
or
mov
into
inc
leave
push
inc
lcall
xchg
pop
mov
push
fnstsw
dec
fsubrl
mull
adc
mov
or
jne
std
leave
jp
addl
inc
std
sbb
rorb
je
mov
adc
insb
or
dec
js
lock
adc
mov
rcrl
mov
push
or
mov
and
inc
or
test
dec
inc
and
push
loope
xchg
or
loope
add
push
mov
push
push
clc
inc
mov
out
sub
aas
xor
mov
mov
daa
jmp
sub
push
ss
loopne
or
jmp
shrb
sbbl
aaa
jge
sarb
fs
push
or
scas
es
push
outsb
add
cmp
shlb
mov
pop
inc
roll
cmp
inc
inc
mov
sbb
or
bound
mov
fisttpll
outsb
or
push
and
dec
mov
rcrl
jl
jae
aad
push
inc
push
add
adc
scas
dec
or
test
push
ret
adc
lret
adc
push
test
fs
mov
cmp
adc
inc
test
es
cmp
jl
cmp
cmp
or
sahf
pushf
or
dec
inc
out
fstpl
mov
mov
inc
mov
sub
jne
add
add
mov
jnp
das
cmp
js
aas
add
and
xchg
mov
and
mov
add
and
xor
and
inc
pop
fldenv
dec
xor
arpl
movsl
or
push
push
sub
mov
xor
adc
cmp
push
push
or
push
add
xchg
test
ret
inc
push
xchg
adc
lea
inc
inc
sub
or
push
jl,pt
push
jg
xchg
xor
xor
in
adc
sub
xor
jne
push
add
push
xchg
pushf
push
sbb
adc
adc
ret
mov
add
movsb
or
or
sub
xor
add
das
mov
repnz
jo
push
adc
leave
push
jmp
sbb
push
aaa
pop
xor
push
inc
mov
push
push
dec
cmp
mov
stc
sbb
push
xchg
mov
sysenter
inc
cwtl
out
xorl
jp
jmp
pusha
inc
cmp
add
jnp
add
mov
inc
or
je
jbe
test
lret
inc
repnz
test
test
pop
enter
xor
incl
jl,pt
add
jmp
mov
test
loope
rcr
sti
adc
mov
push
call
mov
test
iret
pop
jmp
xor
jecxz
sti
mov
rorb
and
ds
in
jno
dec
rol
or
dec
cmpl
leave
test
jns
pop
outsb
pusha
jne
adc
sub
xor
fcoms
pop
leave
xchg
cmp
dec
incb
cmpsb
in
jns
roll
pop
iret
dec
in
enter
or
fdivl
dec
movsl
jnp
add
inc
mov
mov
mov
and
pop
leave
push
jne
push
adc
mov
xchg
inc
push
xchg
cmp
dec
and
add
and
loope
push
xor
lods
out
or
fdivrl
push
insl
inc
add
mov
hlt
mov
test
loopne
mov
fistl
sub
mov
adc
add
jns
sub
sbb
adc
push
icebp
pop
jo
add
pop
push
mov
test
xor
push
imul
test
ret
lahf
and
add
and
inc
icebp
test
in
loope
add
mov
add
mov
adc
xchg
std
aaa
vmaxpd
inc
iret
cmp
jne
cmpl
aas
add
xor
dec
shrb
or
loope
add
jecxz
push
movsl
outsb
dec
dec
daa
mov
push
std
or
mov
movsb
je
lods
push
dec
sub
les
fsubl
sbb
fistpl
loopne
or
cmp
je
ret
jmp
mov
sub
add
inc
adc
cmpl
sbb
and
add
add
adc
leave
jae
xchg
and
and
cmpl
add
mov
push
lds
jb
jnp
xchg
ja
mov
mov
xchg
jge
cmp
dec
ret
pusha
pop
es
or
inc
mov
xlat
addb
xor
sbb
fsubr
pop
push
in
dec
jbe
push
lea
or
sub
inc
nop
cmp
pop
outsb
jne
push
push
and
shr
hlt
sbb
dec
push
jmp
sub
decl
test
push
dec
adc
and
mov
add
in
cmp
adc
inc
mov
not
adc
arpl
sbb
ss
or
aaa
scas
iret
add
pop
adc
outsb
add
adc
or
test
lock
inc
sbb
sbb
inc
adc
adc
cltd
dec
scas
cwtl
adc
adc
xchg
mov
pop
jg
xlat
lock
in
sub
push
add
sub
cmpsb
cli
and
aad
mov
cmp
mov
sbb
jl
fs
inc
lcall
dec
push
jno
sbb
sbb
enter
jno
add
pop
leave
adc
test
xchg
in
mov
mov
addl
out
inc
faddl
mov
cmpb
and
jle
adc
pop
aad
rolb
sbb
pop
enter
je
dec
popf
dec
test
loope
dec
inc
sbb
mov
cmp
ss
adc
adc
xchg
outsb
sbb
pop
or
dec
sbb
push
push
add
lcall
cs
mov
xchg
repnz
xchg
and
and
or
cwtl
add
rorb
movups
ret
dec
or
mov
push
xchg
in
adc
test
push
pusha
push
in
cmpsb
movsb
add
cmp
sbb
sub
dec
int
and
enter
and
and
dec
adc
add
adc
mov
cmpsb
sbb
mov
xchg
push
bound
push
cmp
push
iret
mov
daa
xchg
xchg
movsl
add
add
adc
pop
and
loopne
and
cltd
mov
push
mov
sbb
sbb
popf
push
rcr
xchg
movsl
push
mov
xor
mov
add
adc
sbb
lcall
xchg
pop
adc
jmp
sbb
nop
aas
add
jmp
movsb
dec
dec
mov
cltd
nop
xor
lock
pop
inc
andb
mov
daa
and
add
cmp
sub
xchg
add
push
cmpb
sub
xchg
cwtl
or
dec
rol
jmp
mov
jge
lock
pop
outsb
adc
icebp
aaa
jl
adc
outsl
movsb
jae
cmpb
dec
sbb
and
mov
xor
mov
pop
and
mov
push
int
mov
cmpl
or
das
jbe
push
xorb
xorb
ret
mov
pusha
xchg
lcall
addb
mov
shrl
cmpsl
mov
scas
das
push
dec
aam
int3
testl
insl
add
rcrl
jbe
push
xchg
and
enter
clc
stos
repnz
sub
push
add
and
and
in
std
inc
mov
dec
and
movsl
pop
call
enter
inc
mov
add
or
int3
aam
push
subl
enter
push
pop
in
push
rclb
push
jo
mov
mov
int3
mov
inc
frstor
fldcw
decb
push
mov
adc
inc
subb
mov
push
insl
and
push
in
push
sbb
ja
mov
inc
mov
scas
cmpsl
push
ret
jno
sbb
cmpsl
mov
nop
xchg
shl
int
mov
aad
cmp
sub
or
cld
adc
addr16
aam
cmp
push
adc
movsl
push
mov
jl
jno
ds
and
test
pushf
sbb
sbb
repnz
and
mov
sbb
imul
je
cwtl
adc
mov
mov
inc
jl
test
je
mov
add
cmp
arpl
test
test
addl
pop
dec
rcrb
out
mov
cmp
jne
cmp
mov
cmpsb
divb
aas
push
sbb
lods
add
pop
push
les
xor
mov
mov
add
popa
push
push
into
cld
pop
movsb
push
scas
pusha
xchg
sbb
xlat
ror
and
sbbl
xchg
mov
inc
cmp
mov
lock
sti
or
adc
lds
pop
mov
add
xchg
push
mov
fsubrl
in
mov
push
adc
and
add
or
data16
test
inc
add
or
cmp
scas
sbb
je
push
cld
ds
insl
lods
xchg
add
sub
pop
mov
mov
lcall
sbb
add
sbb
scas
and
add
adc
lea
orb
aad
insb
repz
setns
mov
mov
addr16
mov
jae
test
push
daa
aam
pop
punpcklwd
je
push
das
dec
je
jns
cltd
cmp
movsl
pop
hlt
lcall
icebp
adc
fucom
inc
sub
xor
mov
cld
mov
daa
mov
lock
inc
aam
xchg
shrb
int3
xchg
or
mov
pop
mov
sbb
cmp
into
movntq
aaa
sub
jmp
leave
fwait
test
gs
push
call
or
mov
add
in
dec
sbb
inc
push
push
xor
and
xchg
push
in
push
in
jo
mov
test
test
or
mov
add
lret
dec
sbb
push
or
push
ret
xchg
adc
add
sbb
inc
pop
in
xchg
cmp
xchg
pusha
or
or
repz
sub
mov
daa
popf
push
js
iret
add
mov
cmp
and
cmp
xor
mov
inc
cwtl
mov
fwait
and
add
mov
shlb
push
xor
imul
enter
xchg
sub
inc
mov
adc
and
divl
fsubr
mov
data16
pop
jl
nop
add
adc
shl
subb
rorl
pusha
fstpt
cmp
push
das
add
cs
shrb
sti
adc
xor
test
sbbl
leave
cmp
jo
scas
xor
mov
stos
adc
pop
cs
push
mov
mov
in
cmp
sub
nop
or
dec
arpl
ret
mov
popa
dec
add
lea
insl
xor
mov
xor
fimuls
adc
mov
sbb
and
dec
and
popa
push
pop
popa
adc
and
push
inc
sub
in
xor
shlb
cmp
jb
sbb
mov
or
add
cmp
jae
call
jbe
pop
add
adc
clc
fldt
stos
add
ja
push
push
push
lock
push
out
je
xchg
push
test
pop
jl
das
add
or
cmp
je
imul
jle
inc
incl
jmp
cmp
jl
add
fwait
sbb
xor
cs
mov
mov
loopne
hlt
cmp
sub
lret
adc
and
lahf
or
sub
out
test
add
sbb
je
dec
data16
inc
xor
aaa
adc
lret
repnz
push
out
push
or
mov
mov
test
push
push
pop
mov
and
and
insb
test
mov
inc
xor
add
dec
add
mov
ret
cmp
pop
and
lods
inc
pop
rorl
add
add
xchg
notl
push
jno
js
pushf
cmp
aam
stos
adc
andl
shlb
add
sub
mov
add
loopne
shlb
or
test
xor
push
xchg
ja
das
xor
js
sbb
inc
stos
lea
cmp
insl
dec
shrl
mov
shrl
dec
or
mov
xor
pop
clc
mov
xchg
push
cmp
pop
mov
push
rorl
or
dec
or
and
arpl
and
pop
add
es
data16
mov
rorl
enter
push
sbb
adc
and
add
adc
adc
aas
loop
adc
pop
add
or
test
add
lcall
add
fcoms
add
or
mov
pop
or
xlat
jbe
dec
xchg
subl
adc
mov
push
push
aas
mov
loope
jmp
jmp
mov
addb
jb
inc
lock
inc
mov
arpl
push
sub
imulb
mov
inc
hlt
adc
fstpl
nop
push
outsl
leave
in
mov
clc
imul
xor
mov
add
ja
arpl
inc
sbb
loope
adcl
fwait
and
cmp
xor
mov
mov
cmp
xor
adc
push
int
inc
push
lret
sub
movsl
pop
out
mov
inc
jecxz
push
ret
sbb
pop
mov
add
enter
push
mov
add
sbb
cmp
fsub
push
mov
mov
loop
ds
or
inc
iret
movsl
or
push
add
and
mov
mov
insb
jnp
push
and
inc
scas
xchg
out
dec
adc
adc
sub
adc
nop
cmpsb
int
data16
jmp
mov
les
inc
add
sbb
fwait
and
pop
fs
push
ss
mov
xchg
jmp
ficoml
add
ret
aaa
sbb
ficomps
aam
adc
sub
add
dec
cmp
and
xchg
cmp
imul
add
stc
push
and
add
push
adc
add
adc
add
ljmp
daa
xchg
and
lcall
push
lods
pop
mov
les
aaa
pop
or
add
jno
or
lret
sbb
add
push
push
nop
add
add
and
and
add
sub
dec
xor
xor
add
inc
cmp
push
push
nop
lret
inc
or
inc
push
test
pcmpgtb
mov
insb
cltd
sub
and
sbb
add
xchg
into
sbb
mov
in
into
sahf
mov
mov
popf
and
xchg
xor
inc
xchg
arpl
sbb
loopne
pop
add
dec
lret
dec
mov
or
jbe
dec
adc
sub
pop
fs
negl
pusha
add
pop
mov
push
xor
stos
mov
fidivs
inc
test
outsl
cmp
add
nop
xchg
sub
sahf
push
sbb
je
xorl
inc
lea
jecxz
sbb
test
pop
mov
mov
dec
jae
xor
pop
shlb
xor
push
int3
adc
enter
push
fmulp
rclb
fmull
add
sahf
xchg
sbb
xchg
push
dec
xchg
or
data16
or
sub
or
or
imul
pop
sub
and
xchg
data16
sub
add
sub
add
add
imul
push
aas
sub
or
xor
mov
xchg
shlb
and
cmp
add
add
add
aaa
in
sbb
rcll
and
mov
mov
mov
lcall
mov
mov
enter
iret
mov
push
fucomi
arpl
cld
inc
jmp
orl
push
mov
stc
cmp
push
les
sub
jne
mov
filds
xor
dec
sbb
push
stos
push
into
sbb
adcb
mov
hlt
push
adc
cmp
in
sub
jl
cmp
mov
int
push
jo
gs
and
enter
dec
movsl
insb
mov
or
push
adc
lea
sub
scas
inc
outsb
dec
sub
sbb
inc
adc
sbb
push
sbb
jb
add
dec
inc
jp
sbb
push
sbb
mov
add
dec
mov
aam
sub
mov
jge
push
push
ret
push
pop
xor
sub
push
pop
shrb
and
dec
rcr
outsl
call
std
filds
adc
or
daa
or
rcl
jmp
cmp
lcall
movsl
int3
cmp
dec
mov
adc
xchg
sbb
mov
pop
bound
es
sub
int3
lret
xlat
pop
xlat
xor
jb
cmp
sbb
cmp
push
mov
es
out
sbb
push
push
jno
inc
dec
inc
sub
cltd
or
or
sbb
sbb
cmpsl
dec
push
sbb
jge
mov
push
or
add
xchg
inc
adc
add
fsubl
aaa
orl
js
jle
jl
je
cli
adc
es
adc
hlt
sub
stos
lret
int3
jb
dec
add
and
adc
shll
test
or
pushf
adc
cltd
sar
sub
or
push
nop
das
shlb
lea
inc
add
mov
push
jg
in
lds
cmc
add
ss
xor
adc
push
sbb
inc
dec
lcall
xchg
das
push
push
test
pop
and
mov
movsb
dec
cmp
orb
add
xor
push
popa
jne
jge
or
imul
or
mov
inc
fdivrs
test
dec
mov
jo
lods
lea
sub
imul
repnz
xlat
lods
call
hlt
mov
loopne
sbb
mov
push
mov
loopne
dec
iret
dec
in
push
aas
pop
pop
adc
inc
in
js
ds
pop
cwtl
and
dec
cmp
and
cmp
aas
jle
jne
add
hlt
lea
or
adc
sarb
and
add
add
pop
call
pop
and
add
sbb
mov
mov
pop
push
cs
inc
dec
daa
add
test
subb
sub
or
pop
orl
mov
test
jmp
popa
fdivr
pop
jg
cmpb
xor
nop
js
movb
rorb
jg
sbb
or
lea
push
lea
adc
fiadds
fsubr
adc
mov
orl
pop
in
or
int
lock
sti
loop
es
mov
ss
push
movsl
pushf
incb
push
mov
test
push
sbb
jge
jae
push
sbb
and
bswap
jmp
mov
and
or
shrl
pushf
sbb
add
jb
js
inc
or
sbb
push
lock
ss
mov
push
add
fstl
add
adc
in
imul
hlt
pushf
in
into
mov
jl
push
push
xchg
add
lea
rol
roll
nop
fildl
pop
aaa
fs
es
adc
and
jo
pushf
loopne
and
and
or
cmpl
mov
movsl
inc
add
daa
into
jnp
andl
pop
mov
push
roll
loopne
xchg
or
and
xor
sub
jne
mov
lret
andl
ljmp
adc
or
pushf
dec
dec
mov
adc
push
dec
inc
and
mov
dec
inc
xor
inc
push
cvttps2pi
dec
adc
xchg
lds
adc
push
leave
and
inc
stos
and
pop
ljmp
sub
fs
cmp
fcomi
je
adc
add
jp
nop
ret
fcoms
cmc
add
jge
ja
inc
xchg
dec
or
pusha
ss
mov
sbb
pop
inc
dec
enter
data16
js
push
add
std
pop
daa
push
jb
insb
push
cld
jo
adc
cmp
sbb
add
dec
imul
iret
add
and
mov
inc
pop
xchg
inc
push
add
push
cwtl
lock
push
pop
sbb
ret
shll
in
jle
push
jb
xchg
insl
push
jno
je
pop
inc
inc
add
cmpsb
fnstcw
add
jmp
jle
mov
int
pop
add
cltd
pop
sbb
shll
sbb
push
jne
leave
shrl
pusha
ljmp
cli
dec
ss
mov
dec
xor
push
cmp
pop
sbb
push
sbb
pop
clc
push
and
and
ret
push
push
popa
test
enter
inc
imul
cmp
jne
sbb
sbb
push
cld
jb
ja
push
inc
filds
add
mov
jge
out
pop
and
add
or
push
add
fs
pusha
push
dec
mov
add
push
pop
mov
in
pusha
pop
aas
push
mov
cmp
fidivrl
lret
fsubl
roll
sub
sbb
sbb
daa
stos
popa
cmp
jp
lds
xchg
outsb
int3
imul
push
lods
adc
jo
and
mov
arpl
insb
push
and
sbb
nop
push
dec
shlb
int
test
cmp
orl
test
mov
outsl
sbb
push
sbb
dec
std
push
inc
shll
iret
mov
outsl
push
scas
es
popa
lea
imul
enter
jbe
push
cs
stos
dec
movsb
dec
xchg
xchg
add
adc
and
dec
cmp
mov
sub
or
and
mov
inc
fs
jno
lods
fwait
mov
dec
cmp
cmpsl
push
clc
jl
mov
sub
xchg
inc
sbb
popf
mov
movsb
sbb
dec
jne
sub
and
stc
sti
jp
icebp
adc
or
sbb
mov
adcl
dec
push
sbb
adc
dec
xchg
adc
sub
push
jbe
mov
sub
push
add
jge
add
and
js
out
jmp
add
int3
pusha
mov
dec
mov
clc
or
pop
ret
xchg
sbb
pop
adc
sbb
nop
mov
dec
jl
push
nop
call
xchg
test
or
js
je
cmpb
cmp
mov
jns
jmp
ret
sahf
add
add
xor
dec
inc
dec
sub
add
es
xor
xor
les
enter
add
sbb
mov
pop
add
pop
xchg
cs
jp
xchg
les
mov
fisttpl
or
cmp
push
xchg
jae
lods
adc
xor
mov
dec
add
sub
pusha
lods
adc
xchg
rorl
jo
fwait
adc
push
aas
inc
add
js
loope
cmp
imul
out
nop
add
inc
loop
inc
aam
les
aam
dec
xchg
ja
sbb
push
es
adc
aad
sbbb
add
push
mov
cmpsl
ret
pop
xor
imull
and
xor
mov
mov
pop
andl
adc
nop
cmp
dec
roll
inc
aam
inc
cmc
dec
faddl
adc
mov
gs
inc
sub
mov
ss
push
mov
push
ljmp
test
mov
inc
jge
or
shlb
xchg
xchg
inc
mov
inc
push
movsb
fidivrl
jno
shlb
cmp
aad
xor
push
movsb
push
jmp
fbstp
jle
sbb
adc
or
push
adc
mov
adc
into
addl
adcb
add
xlat
or
pusha
add
sbb
mov
popf
xchg
cmovae
sbb
pop
cwtl
add
adc
and
mov
and
aam
iret
sbb
push
mov
rolb
movsb
stos
sub
xchg
or
sub
shll
inc
cmp
data16
cld
xchg
xor
shll
imul
add
clc
push
aad
into
loop
cmp
adc
push
or
jp
adcl
lret
nop
clc
nop
pushf
xchg
dec
adcl
push
push
adc
cli
testl
push
adc
add
inc
fwait
jmp
repnz
or
dec
sahf
and
and
pop
add
pminub
ret
mov
frstpm(287
jo
sub
addr16
fistpl
adc
cmp
sub
nop
pop
pusha
push
cltd
cmp
push
lods
inc
jb
repnz
aas
push
int3
aad
inc
adc
nop
int
dec
add
xchg
pop
enter
push
arpl
push
loopne
data16
push
inc
pop
sarb
dec
add
les
pop
repnz
adc
mov
push
adc
loopne
sgdtl
sarb
int
add
add
nop
pop
push
rcrb
nop
sbb
leave
add
sbb
arpl
lahf
out
or
imul
mov
mov
enter
insb
mov
inc
inc
pusha
jne,pn
nop
jnp
filds
es
movsl
jg
sbb
mov
je
dec
das
and
jo
jle
leave
sub
mov
sbb
and
outsb
lods
push
xor
push
idivb
jle
pusha
outsb
xchg
sub
xor
adc
xchg
jnp
es
xchg
je
js
or
movsb
sub
xchg
or
push
inc
sub
adc
data16
jg
je
xchg
or
jl
xor
jl
xor
cvttps2pi
mov
jmp
pop
mov
jae
test
fs
mov
xchg
pop
adc
jp
mov
add
aas
jmp
iret
adc
xor
and
and
jl
xchg
xlat
mov
sub
mov
xor
pop
mov
mov
xchg
mov
sbb
aaa
and
mov
roll
ret
loopne
sbb
sbb
push
xor
xchg
inc
out
mov
lea
inc
sub
outsl
push
rol
mov
xchg
clc
or
dec
mov
push
imul
pop
and
jno
mov
cmp
lea
bound
negb
xchg
lea
xchg
dec
sbbl
call
or
or
xchg
popa
sub
mov
nop
dec
pop
popa
insb
mov
pusha
aam
inc
cmp
and
imul
add
ljmp
enter
sub
inc
ret
insb
or
mov
test
rorb
jmp
pop
sbb
add
xor
aaa
insb
cmpsb
test
push
add
jbe
mov
je
pop
push
test
pop
push
js
push
add
jo
jns
adc
cmpsb
mov
mov
dec
cld
shrb
inc
or
cwtl
jle
xor
sub
jne
mulb
loopne
aad
lods
or
or
ljmp
dec
dec
les
ret
arpl
pop
mov
je
idivl
push
insb
mov
adc
pop
or
push
lret
and
inc
adc
mov
mov
shll
test
lock
mov
sub
pop
mov
and
repz
cltd
add
sub
rorl
dec
or
mov
test
repz
adc
movsb
fs
push
pop
pusha
push
and
mov
ljmp
sbb
xor
insb
jne
jp
imul
cmp
adc
nop
jbe
repz
xor
fidivl
outsb
inc
arpl
aas
pop
and
push
xor
mov
inc
subb
jg
push
pop
mov
sarb
shlb
outsb
mov
adc
sub
and
mov
loopne
sub
repnz
inc
push
push
sbb
pusha
and
jge
cmpsb
mov
unpcklps
add
add
cmp
sbb
adc
sbb
fstps
mov
aaa
pop
jecxz
test
lods
xchg
inc
and
and
pop
ss
and
add
xor
popw
jl
sub
mov
cmc
or
inc
aam
pusha
cmp
mov
sbb
and
xor
sub
cmp
js
arpl
pop
or
inc
cmp
pop
shlb
insb
push
mov
popa
xor
enter
and
or
adc
inc
or
bnd
loopne
push
add
lahf
xchg
test
or
les
test
add
shll
push
loope
in
jns
or
sbb
cltd
je
loope
cmp
jnp
push
test
mov
sbb
cmp
mov
ret
sub
mov
sub
and
ljmp
inc
xor
push
test
shlb
imull
hlt
and
das
hlt
add
pop
xor
mov
pop
repz
fsubr
xchg
pop
idivl
scas
push
pushf
push
rolb
popa
mov
mov
or
mov
mov
add
daa
sub
shlb
cmp
cmp
je
push
shlb
push
xor
add
inc
aaa
stc
lods
and
add
ficoms
sub
fs
pop
lea
cmp
push
test
sbb
dec
add
std
adc
lods
sbb
out
lock
sbb
bound
sub
cmp
jae
mov
cmp
out
nop
ja
xchg
cmp
fstpt
push
push
dec
inc
lock
mov
xchg
jg
rclb
inc
add
mov
imul
dec
mov
xchg
cltd
popf
stos
and
adc
jge
scas
mov
push
mov
and
es
sbb
dec
mov
inc
add
xchg
push
imul
pop
mov
orb
in
adc
fimuls
push
push
jb
mov
fwait
sbb
inc
pusha
movsl
push
xchg
lods
scas
mov
sbb
adc
in
dec
dec
or
xor
adc
gs
dec
add
push
insl
pop
adc
cmp
jne
cmp
or
and
adc
xchg
inc
sahf
int
push
push
sbb
inc
add
nop
pop
push
test
outsl
movsl
inc
xchg
test
lea
and
cltd
sbb
jp
pop
jne
dec
sbb
dec
shl
jle
add
xor
or
pusha
pushf
setge
push
ds
stos
cmpsb
aas
data16
icebp
test
dec
mov
xchg
shrb
pop
adc
adc
jmp
lahf
dec
fmul
cmp
jnp
lods
mov
test
pop
cmp
lretw
cmp
out
mov
add
xor
loop
call
inc
dec
inc
fs
or
pop
movups
enter
jmp
lds
xchg
push
dec
and
mov
jne
fcmovu
mov
aad
and
test
cmpsl
pushf
imul
lret
ss
push
call
addr16
jno
cmpl
jecxz
and
cld
push
fcoml
sbb
add
sub
enter
ja
jo
jne
jne
mov
inc
fbstp
sbb
sbb
jo
inc
repz
push
push
pop
push
dec
and
pop
rcll
and
les
mov
mov
mov
cmp
xchg
les
mov
dec
inc
stc
test
dec
xor
jecxz
movsl
fnstsw
mov
xor
dec
fbld
lret
js
push
xchg
push
je
mov
sub
pop
inc
popl
pop
in
add
or
jbe
aaa
mov
nop
sarl
or
adc
add
dec
cmp
and
push
cmp
sub
or
inc
adc
sbb
fbstp
mov
xor
sti
sub
into
or
jne
pop
push
test
push
cmp
or
in
daa
mov
dec
repnz
dec
jo
dec
cmp
sbb
jl
jne
cmp
pop
stos
add
add
aad
mov
adc
aaa
and
fsubs
jecxz
or
push
sbb
inc
cmp
sbb
jge
dec
pop
mov
nop
mov
or
mov
in
sbb
test
adc
nop
add
adc
sahf
sub
fistl
add
in
sarb
jo
test
ljmp
add
call
sbb
push
and
adc
aas
addb
push
mov
xchg
or
jle
in
and
mov
aaa
rclb
sub
push
incl
cmpb
push
sub
xchg
lret
aaa
jb
ret
pop
and
sbb
push
shlb
push
int3
dec
jecxz
int
iret
cmc
ret
mov
sub
test
cmpb
fs
clc
movsl
in
ficomps
cmp
jbe
jae
pop
or
and
add
pop
nop
add
testb
or
cmpsb
lock
add
cmp
lods
shr
or
sbb
call
je
clc
inc
cmp
dec
xor
fadds
or
sub
mov
out
add
add
push
pop
mov
push
stc
push
fildl
adc
mov
incl
test
add
insb
jg
mov
and
adc
cmp
test
in
bound
pop
hlt
jle
push
and
aaa
add
or
sbb
sti
jb
mov
mov
add
pop
adc
push
mov
movsl
les
ret
add
rorb
ja
sub
js
outsb
imul
sbb
adc
dec
rcrb
sbb
loopne
lods
push
int
xor
add
push
and
mov
or
push
fiaddl
pop
orb
mov
push
and
xchg
add
push
inc
dec
and
iret
imul
xor
sbb
inc
lea
or
push
jno
add
cmpsb
imul
add
xor
adc
aam
mov
lret
add
xor
xor
test
sbb
and
cmp
mov
push
jo
mov
mov
pusha
pop
js
jl
add
cmp
adc
cmp
sbb
jno
adc
mov
and
add
xchg
sbb
and
adc
test
sub
dec
inc
test
sub
xchg
sbb
cmpb
dec
fwait
push
pop
inc
dec
les
bound
or
sub
adc
sub
dec
ss
xchg
jl
or
or
or
jl
sbb
mov
inc
and
sbb
or
push
dec
lcall
aam
pusha
ret
push
inc
pop
lds
add
aaa
cwtl
imul
push
sbb
dec
add
add
dec
or
dec
add
and
cmp
pusha
addb
lods
pop
dec
mov
popa
pop
add
gs
push
test
pop
inc
adc
adc
pop
insl
imul
test
nop
dec
mov
cltd
loop
ljmp
or
xor
dec
xor
cmp
sub
push
or
jg
xor
dec
sub
cmp
cmp
or
inc
and
push
add
and
push
and
adc
arpl
or
mov
cmc
movsb
test
mov
mov
cmp
fwait
sub
rcr
dec
mov
inc
inc
mov
xchg
jo
test
xor
cld
cmp
daa
pop
daa
les
add
sbb
xchg
dec
sub
adc
lea
es
cmp
into
or
and
fistpl
jle
add
inc
sbb
xchg
sub
cmp
sbb
xchg
aas
mov
jbe
lret
pop
sub
jo
lods
cmp
pop
mov
push
lcall
rorb
dec
decl
push
inc
dec
lea
xchg
push
mov
cmp
jecxz
push
pushf
js
cmp
inc
mov
xchg
cmp
movsl
movsl
or
orb
orb
jb
faddl
pusha
cmp
push
roll
jb
insb
lahf
push
mov
jmp
or
mov
jns
xor
fnsave
add
xchg
and
add
mov
adc
sub
out
mov
xor
pushl
mov
cmp
mov
stos
adc
cmp
pop
fimuls
imul
push
dec
add
inc
ret
adc
daa
and
inc
cmp
xorl
inc
add
cld
sbb
lret
cmp
xor
sbb
and
int3
cmpb
xchg
jge
clc
or
xchg
xchg
mov
add
xor
out
mov
shrb
fiaddl
xchg
push
icebp
adc
push
clc
add
cmp
adc
loopne
incb
push
add
or
mov
dec
lock
sub
cmp
and
or
dec
roll
add
push
outsl
jo
push
insb
xor
sub
je
push
jne
lea
lcall
push
push
xlat
push
add
jb
inc
mov
jo
fs
lods
addr16
mov
pusha
daa
mov
pop
push
mov
or
push
push
mov
jl
add
cmp
pop
xchg
lock
mov
daa
sbb
xchg
cmp
dec
xlat
mov
mov
mov
mov
adc
add
and
test
inc
mov
pop
gs
popf
add
roll
add
je
add
scas
sbb
pop
sub
sbb
pop
add
or
int3
ficoms
adc
push
add
add
mov
pushf
and
adc
js
or
mov
xchg
xchg
clc
or
add
addl
push
pop
and
sbbl
xor
add
dec
fs
rolb
leave
cmpsl
sbb
cmp
sub
push
mov
pop
add
cmpb
cmp
out
mov
and
sbb
sub
cmp
push
sub
push
aaa
mov
jmp
test
or
sub
ret
mov
and
xchg
cwtl
test
add
mov
and
mov
mov
inc
push
cmovs
jge
push
shr
or
jp
mov
ret
push
addl
push
sbb
jl
mov
jmp
add
dec
test
cld
pop
hlt
jo
test
add
aas
pusha
cwtl
push
shlb
adc
shrl
rclb
cmp
pop
sbb
je
imul
push
sbb
sub
imul
lret
int3
sahf
mov
and
ret
daa
sub
inc
nop
mov
push
push
lahf
shl
adcb
dec
adc
add
xor
and
jp
mov
mov
scas
inc
xor
loopne
sbb
pop
in
sbbl
adcb
mov
push
test
fldenv
int3
or
pop
mov
sbb
test
inc
hlt
dec
push
push
push
test
xlat
sbb
adc
or
bound
xchg
and
pop
push
sbb
pusha
test
popf
cmp
jle
adc
xchg
or
push
xchg
push
pop
and
add
and
mov
push
and
push
xchg
shlb
arpl
push
push
movl
adc
cld
sbb
and
dec
movsl
add
mov
testb
je
sbb
mov
push
cmpb
or
fldcw
sahf
mov
jb
mov
push
arpl
and
push
jno
and
enter
insl
xchg
stos
in
inc
xor
ret
mov
and
aad
and
sub
push
xchg
cmp
add
aaa
add
and
and
outsl
mov
icebp
lods
inc
mov
push
mov
mov
or
setg
insb
sbb
lret
add
sub
or
push
push
movsl
add
dec
push
jge
das
sub
ror
add
mov
dec
int
test
aad
pusha
cltd
imul
adc
or
addr16
xchg
js
xor
xchg
sub
xor
sbb
push
sub
push
mov
sub
sub
sub
sbbb
xchg
mov
lods
lods
dec
adc
rol
insb
cmp
shll
push
push
sub
xor
push
repnz
rclb
sbb
push
in
add
adc
jne
in
adc
ffreep
mov
cmp
push
cmp
icebp
mov
cmp
xor
ja
mov
cmp
addb
aam
call
xor
mov
insb
and
nop
int3
mov
mov
or
fiaddl
inc
jno
in
pop
adc
enter
test
sub
adc
inc
imul
mov
leave
add
shrl
mov
sbbl
dec
lods
mov
jae
mov
lods
loope
insl
add
and
add
icebp
mov
sub
ret
cmpb
lea
sbb
sbb
adc
and
xor
inc
push
lea
sbb
sub
test
movsl
inc
xchg
jnp
dec
adc
incl
insb
jbe
or
add
pushf
fwait
outsb
or
adc
nop
stos
cwtl
or
inc
mov
cmpsl
aad
fwait
push
mov
popa
inc
and
pop
mov
inc
add
cmpb
and
or
inc
adc
xor
lds
add
xchg
and
pop
test
cmc
out
xchg
int3
je
test
xor
sub
inc
add
rclb
aaa
xchg
insl
jecxz
adc
sub
adc
inc
pusha
dec
push
repz
and
xor
or
adc
add
cwtl
push
pop
iret
dec
rolb
sub
add
movsl
mov
and
jecxz
arpl
adc
clc
push
xlat
adc
inc
mov
cmp
push
mov
je
outsb
push
les
add
pop
enter
cmp
inc
fdivs
sbb
push
sub
test
mov
fidivrl
pushf
mov
add
roll
xor
mov
sbb
int3
dec
mov
dec
loopne
jl
lods
pop
out
mov
adc
mov
mov
add
jno
adc
and
pop
push
mov
xor
leave
add
sbb
push
mov
test
cmp
adc
enter
inc
repnz
sbb
xor
add
push
or
enter
mov
je
push
mov
sbb
sub
adc
hlt
jne
rcrb
scas
pop
cmp
cmpsl
and
sbb
mov
dec
xchg
nop
xchg
popa
mov
outsb
adc
emms
sbb
insl
sbb
inc
mov
sbb
or
repz
pushf
jns
insb
jbe
rcrb
or
cmp
es
push
pop
lret
push
push
mov
cmp
xchg
adc
add
xor
push
xor
mov
leave
arpl
sbbb
rcrb
jo
cmc
pop
push
cmp
in
and
cmp
add
mov
inc
or
andl
nop
pusha
add
adc
push
in
mov
xchg
sbb
xor
or
test
push
sub
sbb
sub
test
pop
or
xchg
or
test
xor
ret
push
daa
test
sub
leave
insb
and
call
pop
leave
jae
popa
add
jo
and
imul
popa
adc
dec
lahf
add
add
lods
popf
subl
or
push
fldenv
push
shlb
in
sbb
inc
mov
or
jge
xor
dec
and
inc
cmpsl
xchg
pop
cmp
imul
pop
loope
mov
dec
sbb
inc
push
add
ss
je
sub
dec
arpl
xor
fcom
mov
jo
movsl
rcr
jne
insl
cmp
out
add
aad
and
push
hlt
add
mov
pop
add
push
xchg
add
pusha
or
pop
push
add
xchg
ds
and
or
mov
mov
adc
stos
sub
pop
dec
jl
mov
and
sbb
xchg
lea
adc
dec
push
fs
enter
fsubrl
xchg
push
pop
mov
xchg
add
inc
add
sahf
xchg
je
aam
adcb
shrl
fcoml
xchg
push
or
mov
ret
arpl
aad
test
call
push
jecxz
xor
in
push
jne
or
adc
mov
sub
cmp
je
addr16
pop
enter
xor
push
mov
dec
mov
xor
push
mov
incl
cmp
cltd
inc
inc
or
dec
push
dec
das
js
push
and
fsub
pop
dec
push
cwtl
push
test
mov
jns
push
push
loopne
xchg
fbstp
or
jnp
or
hlt
xor
sub
mov
xchg
xchg
sub
push
xchg
push
mov
pop
adc
call
mov
sub
sahf
jb
mov
fidivl
sub
sbb
or
addr16
or
mov
push
or
or
xor
nop
adc
aaa
fadd
dec
cmp
sub
cmp
dec
divl
shlb
inc
jl
bound
add
pop
mov
push
push
repnz
xchg
dec
mov
add
out
push
pop
leave
xchg
fdivl
push
push
pop
cmp
nop
xlat
adc
mov
in
or
sbb
call
jmp
xchg
int3
push
xor
nop
call
test
xchg
add
fcoml
add
leave
add
leave
repz
sbb
sbb
add
sbb
sbbl
adc
add
sbbb
and
mov
iret
add
jae
mov
adc
and
xor
repnz
and
add
aam
fmull
adc
enter
add
test
in
and
add
mov
fisttpll
cmp
pop
sub
in
mov
or
cmp
test
and
es
xor
lahf
pusha
dec
pop
mov
or
movsb
cwtl
pusha
and
dec
rcll
fsubrs
aam
inc
and
call
shll
xor
adc
lods
inc
rcll
shrl
mov
add
orb
dec
mov
repz
out
add
imul
mov
jne
push
lds
inc
loop
jge
test
inc
push
add
xor
adc
jmp
sbb
inc
add
mov
add
add
mov
dec
sbb
cmp
xchg
bswap
sub
sbb
mov
xor
cmp
mov
xchg
divl
adc
add
jne
daa
xor
xor
push
inc
imul
es
aas
inc
sahf
outsb
push
push
cmp
hlt
inc
fldl
xchg
cld
inc
fcomps
in
push
add
push
hlt
adc
add
lret
mov
sbb
adc
imul
jle
pop
adc
jmp
es
jl
out
int
mov
push
push
or
and
inc
adc
and
add
pop
addb
aaa
inc
push
rolb
jns
inc
inc
mov
inc
movsb
aas
or
ds
scas
xchg
out
dec
cmp
sub
cmp
push
xor
xor
or
mov
jb
inc
jge
inc
lea
sahf
inc
dec
add
adc
sbb
pop
loope
dec
stos
and
shlb
jmp
insl
add
or
and
and
pop
rclb
inc
loope
inc
pop
push
fs
imul
mov
int
xor
adcl
jne
adc
or
or
xchg
inc
mov
push
mov
scas
jl
loopne
push
and
andb
aam
sub
daa
xor
lods
popa
mov
test
cmpb
rcrb
clc
and
in
mov
cmp
popa
gs
mov
adc
mov
pusha
push
cmp
add
xchg
sbb
inc
pop
jb
adc
ljmp
or
mov
sti
xchg
sbb
push
pop
add
push
push
lock
dec
shrb
push
push
mov
inc
std
adc
stc
int3
push
mov
enter
xbegin
inc
push
push
ret
lret
fbstp
aas
inc
rolb
dec
push
pop
test
push
js
nop
dec
sahf
fwait
pop
pop
and
and
add
push
sbbb
shr
in
pusha
push
and
nop
pop
dec
sbb
cmpb
add
push
xor
inc
fs
add
dec
mov
pop
cmp
lock
sbb
dec
xor
dec
lcall
cmpsb
in
and
and
mov
mov
push
call
dec
dec
dec
sbb
dec
dec
inc
push
ret
out
sbb
or
and
lods
push
into
xchg
add
aaa
fs
cmp
xchg
mov
push
cmp
push
dec
dec
clc
decl
or
jno
lds
push
cli
sbb
rolb
xchg
mov
xchg
sbb
sub
dec
sub
sbb
dec
pusha
adc
mov
xchg
adc
xchg
and
ss
inc
inc
push
mov
data16
sbb
cmp
mov
mov
out
sub
sbb
push
cmp
mov
pop
or
enter
iret
dec
pop
js
push
test
pushf
adc
lea
dec
test
sbb
in
loopne
adc
xor
nop
or
shll
outsb
popa
push
lret
rcll
jno
fcompl
xchg
notb
nop
mov
aad
add
lret
or
or
inc
sbb
dec
mov
mov
push
xor
loope
cmp
jnp
jb
addl
and
xor
sub
and
pop
aaa
add
xor
push
test
xchg
mov
in
add
push
jae
ss
lds
jne
adcb
sbb
aam
scas
mov
adcl
or
xchg
jo
xor
inc
and
ja
adcb
push
test
rcrl
test
hlt
test
push
and
adc
inc
cmp
dec
arpl
out
aam
jae
test
cli
mov
fdivs
pop
imul
js
aad
pop
xor
mov
inc
xchg
pop
dec
mov
xor
xchg
add
dec
pop
jae
mov
mov
add
nop
adc
dec
xchg
loopne
inc
add
jl
lcall
add
nop
out
jno
int3
out
sbb
push
sub
xchg
xor
out
push
add
ret
je
inc
lcall
ret
mov
cs
lds
jb
ja
lcall
mov
and
add
jb
push
push
xchg
mov
xor
inc
cmc
xlat
jg
sbb
inc
addr16
push
nop
lock
push
lods
or
jmp
push
dec
push
mov
push
cmp
jae
xor
insl
call
sahf
aaa
pop
sahf
jmp
mov
mov
cmp
ja
dec
bound
mov
fisttpll
lods
mov
mov
xchg
add
lods
add
xchg
test
stc
xor
out
je
jno
xor
pop
aas
fstpt
jge
call
mov
push
repnz
sahf
xlat
ja
add
addb
jecxz
xor
dec
cmp
and
push
jno
push
jmp
push
adc
add
push
hlt
imul
push
mov
push
loopne
or
and
adc
pop
insl
add
sub
or
fisttps
xchg
loope
ret
outsb
add
push
test
jne
push
lock
add
ret
shl
pop
and
add
js
arpl
mov
pusha
sub
xor
sub
and
outsl
inc
orl
pushf
jo
add
xchg
pop
imul
xor
fnstsw
jne
inc
or
scas
stos
jp
adc
ret
in
adc
cmp
pushf
sub
inc
push
inc
loop
mov
in
shll
pop
arpl
in
adc
sbb
push
cwtl
or
dec
cmp
dec
rolb
jecxz
mov
bound
dec
pop
mov
push
pop
lea
sbb
jmp
sbb
jno
jp
push
mov
dec
ds
push
sub
cmp
add
add
inc
adcb
pop
test
notl
inc
fidivs
pop
sub
xchg
add
mov
movsb
ds
sub
jmp
inc
add
xchg
xor
sbb
add
xor
pop
xor
or
cmp
cltd
xor
cs
jb
test
dec
jns
push
sub
mov
popa
das
mov
test
add
leave
adc
sbb
sbb
add
sub
or
sbb
jne
cmp
xchg
and
fisttpl
in
cli
cltd
push
sbb
or
and
bound
mov
add
xchg
jo
cmp
lcall
pop
adc
xor
push
add
push
xor
or
sub
dec
sbb
or
sub
sub
add
lock
inc
adc
and
adc
addl
ret
inc
add
cmp
ret
inc
popf
add
or
jp
ret
pop
mov
mov
push
mov
jle
cmp
jae
mov
xorl
cmpl
cmp
jl
aad
pop
dec
or
dec
outsl
cmp
and
repnz
mov
cld
std
add
hlt
sbb
and
or
mov
add
and
shrb
adc
stc
test
aam
ror
push
scas
xor
and
inc
in
lods
lods
sub
sti
xor
sar
repz
pusha
insb
cld
orb
je
mov
dec
mov
mov
sub
fisubl
js
or
mov
and
add
push
add
in
sub
add
add
xor
inc
add
xchg
or
push
dec
add
lcall
push
xchg
sti
fildl
xchg
rorb
dec
sub
pop
adc
sub
jo
sub
aam
add
out
push
adc
xchg
je
popa
int3
cmp
mov
adc
push
push
and
push
dec
xor
insb
cmp
mov
and
and
push
insb
xor
pop
addb
ds
pop
mov
push
cs
pop
cmp
adc
push
sbb
loopne
int
insb
insb
mov
push
or
sbb
add
ljmp
dec
jno
or
outsb
mov
cmp
cmp
push
mov
sub
inc
xchg
xchg
cld
sub
movsl
iret
addb
nop
xchg
outsb
mov
scas
inc
xchg
fscale
ss
mov
sbb
pop
pop
lea
push
dec
inc
push
mov
in
inc
and
cmp
xchg
dec
dec
dec
lea
dec
add
test
jg
mov
push
add
out
in
repz
fcompl
adc
movsl
xchg
xor
adc
scas
jnp
lods
push
mov
imul
popa
mov
in
dec
mov
das
mov
xchg
cmp
aaa
mov
popf
xchg
jne
rcll
movb
repnz
cmpsl
jne
inc
push
sbb
cwtl
pop
cwtl
adc
test
out
fsts
add
mov
les
fdiv
add
or
jae
adcl
mov
orb
mov
or
cwtl
dec
or
popf
scas
sbb
loopne
nop
pop
jnp
mov
out
sub
or
test
adc
stos
in
into
add
or
jne
cmp
adc
loopne
aam
pop
inc
iret
ret
pop
push
jl
push
cs
scas
jl
and
inc
cmp
in
xor
rorl
popf
push
imul
fsubl
into
jp
dec
into
add
lock
sarl
hlt
mov
out
mov
adc
je
cmp
je
cmp
je
cmp
je
push
gs
xchg
sbb
push
mov
add
xlat
lahf
jnp
push
fwait
lods
mov
mov
imul
lock
out
add
lcall
sti
jns
ret
jnp
inc
and
dec
inc
mov
xor
and
es
rorl
mov
pop
mov
and
test
pushf
loop
and
push
stos
sub
mov
icebp
and
stos
sbb
mov
inc
sub
out
insb
adc
pop
jbe
shll
cmc
insl
jle
mov
push
nop
adc
jge
cmp
mov
adc
and
loop
and
xchg
sub
adc
or
add
inc
dec
movsb
push
inc
inc
sbb
lock
sbb
test
xchg
sbb
pop
das
xchg
data16
add
mov
inc
mov
push
add
mov
inc
das
xchg
ret
cmpb
sub
push
clc
test
in
mov
ja
sub
ret
adc
sti
jne
nop
xorb
and
sarl
js
in
loop
mov
icebp
movsl
pushl
mov
pop
icebp
mov
addl
and
adc
stc
xchg
sbb
dec
adc
fsubl
mov
or
and
sbb
xor
mov
sub
sbb
sbb
leave
test
push
sub
push
sub
or
and
or
fwait
loop
cld
mov
clc
data16
sub
pop
cld
mov
mov
lock
or
adcl
imul
add
pop
and
data16
mov
pop
ret
stc
xor
imul
xor
sub
mov
fsubl
out
pop
popf
push
test
fstl
mov
js
push
pusha
enter
mov
in
or
cmp
add
icebp
and
adc
outsb
add
add
out
nop
dec
or
shrl
outsb
add
aad
mov
adc
pop
xorl
loopne
sbb
mov
inc
movsl
or
add
sbb
mov
dec
push
fdivrl
imul
inc
mov
loopne
pop
mov
jo
xor
shrl
mov
repz
sub
mov
xchg
mov
dec
enter
sbb
mov
pop
data16
dec
adc
adc
imul
adc
xchg
mov
in
or
call
jb
mov
pop
and
sub
dec
in
pop
pop
leave
or
les
dec
sbb
loopne
push
out
sub
outsl
sub
rclb
dec
push
sarb
adc
sub
dec
sub
loop
mov
or
xchg
add
movb
jns
mov
pop
add
jns
pop
fwait
sub
mov
outsl
xor
les
sbb
xchg
cli
shlb
inc
dec
or
xchg
jge
xor
inc
add
mov
mov
xor
cmp
xchg
lret
mov
mov
sti
je
mov
mov
shll
sahf
add
push
add
push
es
xchg
into
push
jecxz
sbb
adc
adc
enter
outsl
cmpl
mov
push
pop
mov
inc
push
push
insl
xor
sbb
and
jns
or
xor
lcall
sub
aad
sbb
nop
xor
lahf
aas
mov
or
cwtl
int
cmp
push
or
cmp
je
push
pop
mov
ja
adc
xor
xchg
popa
dec
add
sub
les
sbb
cmp
roll
gs
rorb
mov
jp
mov
push
mov
fs
push
and
xor
or
aas
push
ret
cmp
push
cmp
xchg
mov
push
lods
stos
xor
xchg
adc
arpl
rorl
movsl
nop
in
sub
and
pop
out
pop
test
add
subb
xor
cmpsb
jne
call
sub
add
es
mov
lea
dec
mov
shlb
inc
add
mov
lods
cmp
mov
and
xor
xchg
pop
inc
adc
dec
push
loopne
mov
push
or
xor
in
loope
hlt
pop
cmc
inc
jbe
sahf
add
je
andb
aas
jl
xchg
clc
mov
sub
cmp
sbb
sub
push
or
je
add
orb
iret
add
sub
lock
shll
lds
popf
xor
int
lahf
mov
adc
adc
mov
add
addl
andl
sub
sub
push
or
ret
sbb
sar
imul
outsb
insb
test
orb
lods
imul
or
and
sub
cmpb
loopne
nop
lret
or
aas
and
cmp
jne
push
and
cmpsl
mov
sbb
or
mov
icebp
push
inc
dec
and
sti
lcall
sub
into
push
mull
add
and
loopne
fwait
aam
push
and
push
loope
imul
mov
sbb
push
fs
push
sbb
pop
lods
jecxz
jmp
jle
mov
mov
jecxz
mov
and
pop
cs
xchg
imul
inc
test
push
jo
js
inc
mov
lds
xchg
or
cmpsl
inc
mov
test
mov
adc
sub
std
orb
pusha
ds
or
or
out
adc
jo
clc
jmp
cmp
mov
pushf
pop
adc
mov
js
mov
push
inc
or
cmp
shrl
sub
mov
ss
sub
stos
push
stc
bound
ljmp
adc
sbb
sub
ret
dec
push
loopne
push
lea
test
mov
jnp
sbb
cli
push
sub
push
repnz
adc
inc
adc
push
ljmp
mov
sbb
inc
adc
adc
sbb
sbb
and
loopne
mov
push
or
add
xchg
test
insb
inc
or
sbb
cwtl
mov
sbb
jmp
mov
pop
sarb
push
outsb
inc
add
inc
shrb
xadd
xorl
xchg
jb
insb
jge
std
or
inc
dec
add
adc
sbb
and
mov
cmp
gs
push
add
enter
xor
clc
andb
jg
mov
dec
stos
and
push
cmp
add
stc
sub
adc
stos
jecxz
inc
jg
cmpb
jb,pn
cmp
jl
jbe
mov
ret
push
iret
idiv
insb
loop
inc
jne
lcall
dec
fisttpll
jnp
sbb
icebp
rol
test
pop
or
cmp
sub
mov
cli
nop
or
xlat
mov
call
loope
cmp
sbb
mov
push
add
push
es
or
add
mov
lods
and
fmuls
xlat
xor
clc
xchg
and
aad
inc
or
add
mov
add
adc
and
or
sub
pop
sub
das
add
or
dec
add
or
dec
in
or
xchg
icebp
mov
inc
dec
dec
lahf
aam
pusha
jle
sub
inc
xor
cmp
dec
push
enter
ss
lea
arpl
sbb
cwtl
xchg
add
in
inc
cmpsb
xor
and
and
xor
cmpsl
cmp
push
mov
xchg
mov
dec
push
add
andb
ja
and
bound
pop
dec
add
dec
jo
xchg
jno
add
add
mov
dec
mov
or
pop
and
cmp
pop
inc
paddb
movl
adc
sbb
lahf
stos
andl
inc
xchg
dec
or
call
add
test
push
pop
jmp
push
add
faddl
mov
shlb
push
jo
inc
dec
sub
adc
adc
xchg
lcall
js
rolb
or
repz
sarb
xor
dec
sub
push
xchg
stc
cmp
repnz
adc
flds
fldenv
cmp
pop
push
cmp
sbbb
and
mov
dec
jl
xchg
push
and
and
adc
shr
nop
pop
and
insb
inc
dec
hlt
sahf
into
jle
cmpsl
aas
inc
cmp
jmp
inc
sub
test
inc
and
mov
neg
jg
fisubrl
and
aaa
adc
test
js
pop
xor
sub
or
push
or
outsl
insb
cmp
leave
sbb
es
in
cmp
mov
cld
push
push
mov
hlt
xchg
addb
ja
daa
push
or
xor
jnp
cmp
mov
bound
test
js
jnp
addb
loopne
notb
pop
inc
sub
nop
or
lods
adc
xchg
adc
mov
test
les
or
in
xor
push
push
orb
insb
cli
scas
or
cmp
or
pop
push
jo
xchg
sub
push
iret
clc
pop
inc
add
xor
or
mov
pop
bound
clc
adc
mov
sub
dec
scas
and
lods
inc
insb
mov
mov
push
sub
cmp
sub
sbb
and
out
or
mov
out
jg
mov
jne
cmp
jb
sub
jmp
push
dec
movzwl
gs
pop
jle
setl
movzbl
ja
push
insl
xchg
lret
test
sub
push
xchg
mov
add
and
xor
and
test
mov
jl
add
cmp
cmp
cmp
in
add
xchg
out
cltd
dec
push
push
push
rcll
pop
mov
mov
push
lahf
pop
or
in
jmp
push
jne
pop
push
jle
push
aaa
icebp
dec
add
inc
and
cltd
pop
shlb
in
iret
jb
in
test
pop
push
pop
add
and
sbb
push
xor
pop
popa
add
and
mov
mov
es
bound
sbb
dec
pop
or
mov
stc
mov
sbb
xor
push
into
adc
loope
pusha
xchg
icebp
push
push
push
mov
pop
jo
xchg
cmp
mov
push
dec
sbb
pop
test
rclb
push
imul
das
mov
rcrb
push
sbb
ds
dec
imul
or
lds
xchg
fs
movsl
sbb
ret
in
mov
lods
mov
dec
or
push
cmc
dec
cmpsb
push
loopne
ja
jo
add
mov
adc
mov
mov
push
sbb
and
mov
and
lods
pop
mov
sub
es
xor
gs
inc
bound
adc
push
mov
cmp
call
lds
adc
sub
fisttps
cltd
mov
xor
cmpsl
lea
add
mov
jmp
dec
pop
pop
jnp
lret
clc
dec
dec
adc
xchg
and
xchg
bound
xlat
sbb
push
mov
pop
ficomps
dec
xor
add
or
daa
mov
mov
iret
ret
and
adc
and
and
daa
rcrl
pop
inc
popa
or
sbb
pop
adc
and
in
xchg
xor
mov
test
push
sub
pop
mov
lds
sbb
adc
cmp
lods
pop
cmp
xchg
jg
sti
les
rorl
jge
mov
fldl
enter
push
push
push
adc
jle
addr16
hlt
add
push
inc
clc
cwtl
mov
xchg
je
inc
jne
add
push
mov
ret
ret
add
fsubl
lcall
jmp
mov
inc
jo
add
sbb
pop
mov
cmp
lahf
out
shlb
inc
push
xor
out
fwait
cmp
fsubl
arpl
and
lret
outsl
or
xlat
or
roll
in
hlt
sub
test
jo
lea
pop
clc
outsl
add
cmpb
jne
nop
push
sarb
gs
sub
ja
xor
xorb
lea
sbb
add
push
xor
cs
rol
push
dec
shlb
test
dec
or
dec
cmp
faddp
add
inc
push
sbb
dec
mov
lahf
hlt
xor
jb
cld
sub
cmp
adc
inc
inc
inc
nop
xchg
adc
cmp
xchg
inc
sbb
call
xchg
lret
mov
test
mov
and
adc
sbb
and
ss
lds
dec
nop
push
ror
cmp
jo
sbb
sub
fsub
imul
jns
add
mov
mov
mov
adc
and
mov
cmp
add
test
test
add
and
adc
push
or
dec
mov
jge
fistpl
shlb
push
and
sbb
jg
adc
adc
xchg
sbb
adc
add
sbb
jmp
dec
test
popa
and
push
mov
cli
sbb
ret
push
cmpsb
pop
push
sbb
jg
decl
pop
jne
and
cs
insb
inc
iret
add
aas
mov
add
out
and
pop
pop
mov
fsubrs
shrb
fmuls
ja
push
imul
jmp
rclb
nop
pusha
jo
sub
mov
xor
sub
cmp
pop
js
in
addl
push
add
add
and
pop
add
addr16
xchg
mov
dec
arpl
aaa
mov
jne
nop
mov
add
pop
and
js
arpl
arpl
cli
sbb
push
inc
in
add
xchg
xor
or
pop
cmpsb
pop
dec
add
pop
js
mov
pusha
aad
bound
sti
and
lret
and
pop
rcr
xchg
mov
pop
in
push
sbb
xor
pusha
js
xchg
add
call
xor
js
inc
mov
pop
mov
adc
xor
sub
rclb
pop
pop
addl
or
js
add
sub
or
adc
inc
or
cmp
mov
xchg
sbb
xor
pop
lret
xchg
xor
sub
sub
nop
cmp
cmp
movsb
mov
inc
inc
sahf
or
xor
or
je
inc
dec
dec
sub
pop
stos
inc
add
pop
paddw
inc
mov
xchg
cmp
enter
cmp
cmp
jns
scas
add
test
push
jbe
xor
mov
mov
push
jns
or
inc
push
push
or
jmp
fwait
add
inc
cs
adc
xor
xor
push
xor
or
push
roll
addl
xor
xchg
jne
push
fucomip
sub
out
ss
mov
dec
sbb
jae
sti
shrb
push
pop
fs
jo
xor
pop
or
xor
jbe
and
sbb
push
aaa
add
mov
out
in
sbb
addl
leave
mov
jne
call
adc
shlb
xchg
mov
adc
xor
xchg
seto
xor
leave
jmp
add
pop
push
icebp
addr16
pop
xor
mov
sub
cli
adc
inc
adc
in
adc
or
subl
and
mov
add
push
jmp
push
sahf
shlb
add
sbb
push
dec
mov
adc
fisttpll
inc
outsl
in
rclb
loopne
xor
or
or
adc
add
xchg
xor
sub
push
rorl
push
push
mov
push
inc
pop
enter
ret
cmp
fldenv
clc
pop
add
roll
stc
hlt
sub
dec
add
adc
or
xor
inc
pop
adc
cs
sbb
and
lock
mov
notb
and
or
pop
pop
adc
xor
add
cmpb
je
scas
mov
push
sub
aam
and
xchg
or
add
loopne
sbb
pop
cmp
inc
daa
sbb
cmp
push
into
and
fstl
outsb
adc
sbb
cmp
sub
out
pushf
iret
jle
fildll
cmp
fiadds
dec
les
test
stc
adc
mov
or
popa
add
std
or
incl
push
or
sbb
testl
jl
lea
cmp
push
xor
and
std
insl
push
xor
dec
pop
mov
dec
push
mov
mov
or
cmp
dec
inc
push
push
stos
push
inc
xor
rclb
lret
pop
fcomps
aam
sbb
movsl
sub
js
in
pop
loop
xchg
shrb
push
dec
or
push
mov
dec
mov
dec
addb
jg
enter
push
mov
mov
pop
ret
pushf
movsb
roll
out
push
xchg
add
sub
or
xor
rol
div
out
inc
dec
stos
or
adc
pop
mov
sbb
dec
rol
push
push
ret
out
and
jns
scas
sub
test
cmp
or
pusha
push
pushf
dec
into
leavew
push
xor
test
xor
cmovp
xor
push
pop
aas
adc
inc
cwtl
push
inc
sbb
xchg
pushl
test
jo
in
pop
xorb
movsb
push
cmpsb
push
pop
inc
movsl
cmpsl
stc
and
mov
cmp
cmp
push
test
shufps
dec
jb
decl
mov
sbb
enter
inc
mov
inc
test
pop
repnz
xchg
push
inc
dec
pusha
dec
jp
jne
pop
repnz
or
mov
mov
lea
inc
push
mov
imul
loopne
repnz
mov
cld
mov
insb
imul
lea
and
sahf
dec
or
push
movsl
movsl
mov
pusha
push
mov
or
inc
test
or
add
nop
and
dec
push
ret
fildl
popa
sbb
out
sbb
sbb
flds
flds
cmp
movzwl
aad
mov
fmulp
sub
and
popa
test
and
fldcw
fmuls
push
jns
fsts
inc
sbb
sub
mov
adc
sub
mov
add
je
add
test
xor
movl
arpl
adc
add
cmpl
push
daa
sub
ds
shll
mov
or
pop
leave
jo
push
or
xchg
clc
inc
or
sub
imul
pop
cmp
pop
jg
push
push
jp
movsb
incl
add
jecxz
in
adc
add
movsl
cmovo
push
bound
lea
jge
mov
jmp
pop
cmc
test
fcompl
jmp
shlb
add
std
add
xor
add
faddl
cwtl
xor
adc
mov
lea
iret
shlb
call
push
addl
ds
push
cltd
cmp
hlt
push
push
push
and
adc
out
adc
xor
ret
adc
mov
cmpsl
xor
mov
insb
or
outsb
mov
adc
ret
push
call
xchg
inc
mov
push
in
inc
xor
es
shl
mov
add
jecxz
faddl
jmp
push
xchg
push
test
fs
loopne
push
lea
push
adc
add
mov
fmuls
mov
dec
cld
xor
into
jge
imul
ficoml
inc
ret
push
lea
punpckhdq
pop
int3
movsl
adc
push
sbb
cld
loop
xchg
and
fnstsw
inc
sahf
sbb
pop
je
push
dec
mov
inc
imull
push
mov
and
mov
js
jne
push
push
cld
mov
sub
int3
je
outsb
push
push
cltd
test
inc
mov
leave
fbstp
cmp
jg
adc
test
xchg
add
mov
pop
jmp
sub
jbe
push
cmc
je
pop
jg
push
inc
call
adc
cwtl
icebp
mov
jmp
xor
xor
and
sahf
mov
pop
sub
xor
add
hlt
xchg
jne
and
inc
cltd
mov
sbb
sub
fdivrs
push
mov
cmp
ss
mov
jecxz
xchg
push
lock
inc
cmpl
cmp
lret
add
pop
xchg
sbb
or
cmpsb
dec
adc
inc
je
test
sub
push
orl
mov
fwait
inc
popf
mov
mov
xor
shr
sbb
jmp
cmp
and
xor
pop
push
cmpl
data16
or
sbb
js
inc
push
lock
loopne
or
loopne
mov
add
andl
clc
push
mov
dec
xchg
mov
jp
mov
test
dec
add
incl
push
loopne
lea
push
push
adc
adc
daa
mov
ds
push
data16
adc
adc
adc
lcall
adc
adc
jne
pop
sbb
leave
stos
jmp
pop
and
dec
fbld
push
jecxz
sbb
bound
or
scas
les
js
mov
jmp
mov
push
fbstp
dec
jno
mov
add
push
cmpsb
mov
loope
xor
push
mov
insb
ror
into
cmp
pusha
aaa
movsb
imul
add
fs
sbb
or
and
push
push
sti
adc
fiaddl
mov
jmp
sub
jmp
sbb
dec
rcll
lock
movsb
pop
jmp
and
in
mov
push
mov
push
mov
inc
xchg
cmp
xchg
or
shr
shlb
out
dec
pusha
cmp
sub
add
movsl
and
inc
mov
and
sbb
add
sub
in
pop
cs
and
mov
add
nop
and
mov
xor
js
loopne
mov
push
int
pop
add
faddl
in
inc
adc
out
pop
in
sbbl
push
push
add
pop
lcall
lods
arpl
inc
mov
add
mov
push
push
cld
andb
mov
cmp
lret
push
inc
mov
push
scas
mov
out
mov
add
sbbb
fsts
icebp
cli
int3
stos
iret
or
push
dec
aam
cmp
fwait
es
cmp
sbb
adc
popa
and
add
insb
push
jmp
jl
subl
je
mov
lcall
add
push
mov
les
push
mov
mov
sub
jne
xor
fisubs
call
std
mov
pop
push
inc
pushl
test
repnz
and
xchg
and
lock
sub
and
jbe
add
mov
jo
gs
data16
or
das
mov
sahf
cli
jg
sub
push
sub
push
fs
add
mov
or
mov
cwtl
pushf
cmpsb
movsb
inc
lods
pop
sbb
pop
mov
add
lods
shlb
dec
pushf
push
sub
lea
fsubrs
ss
pop
push
inc
dec
rcr
adc
adc
in
mov
push
and
push
mov
ja
push
adc
xchg
pop
negb
ret
rcl
stos
iret
int
adc
rorl
movsl
jge
push
roll
sbb
inc
dec
shr
rcrl
gs
cmp
push
dec
fsubrp
mov
into
jae
push
repnz
push
into
xor
add
bound
inc
inc
icebp
sti
mov
mull
movsb
sbb
loop
imul
dec
add
aam
or
add
pop
sti
dec
call
xchg
and
out
push
sbb
jge
mov
mov
ljmp
sbbl
adc
scas
stos
mov
fwait
pop
cs
cmpsl
push
add
push
jmp
jmp
movzwl
jae
andl
cmp
jg
rcrb
loop
cld
add
sbb
insb
repnz
mov
add
push
test
or
push
xchg
jo
je
in
shlb
inc
aas
es
add
in
andb
adc
sbb
push
sbb
in
adc
scas
lods
jo
sub
dec
and
sub
add
push
cwtl
and
aad
jbe
mov
fstpt
inc
cmp
push
mov
pop
addl
cmpsb
jnp
sbb
lea
loopne
nop
mov
push
xor
stos
push
or
cmp
jno
mov
pushl
outsl
sahf
ret
mov
test
imul
push
int
sbb
push
sbb
mov
adcl
jnp
adc
pop
je
outsb
mov
add
sbbl
push
cmp
push
data16
sbb
lea
aaa
xchg
test
pusha
dec
popl
mov
pusha
add
inc
adc
add
adc
cmp
add
out
push
imul
xor
dec
sub
adc
stos
imul
or
mov
mov
insb
mov
xchg
add
xor
xor
in
jnp
frstor
cmp
mov
fisubl
call
inc
sub
mov
loopne
pop
imul
cmp
sbb
ret
andl
jecxz
mov
or
cmp
testl
fwait
pushf
lock
mov
inc
lahf
arpl
and
ret
jl
xor
lock
lahf
lock
push
cmp
adc
pop
cmp
out
or
mov
dec
cmp
push
jmp
orb
call
push
jne
add
push
hlt
adc
clc
push
mov
and
pop
xor
xor
jl
cmpsl
and
outsb
mov
fisttpll
in
jl
push
adc
push
adc
or
mov
in
js
pop
xor
fisubrl
stos
int3
push
add
mov
pop
push
in
jmp
cs
imul
and
adc
out
jmp
sub
add
jbe
sbb
clc
mov
cmp
inc
push
divl
pop
jp
test
and
cmp
pop
nop
mov
aam
sbb
insb
stos
cld
rcrb
cmp
pop
pop
mov
icebp
loope
pop
aam
push
pusha
push
insl
aas
rcrl
xor
insl
jne
cs
add
iret
repz
push
jae
arpl
push
sahf
push
push
push
je
inc
or
das
iret
mov
insb
jne
or
cmp
dec
loopne
into
push
push
js
or
inc
sbb
cmp
mov
call
out
fsubp
or
popf
pop
cmp
je
outsl
test
push
pusha
nop
cmp
sahf
movsb
push
ret
lcall
cmp
je
push
fidivs
push
or
xor
xchg
cmp
outsl
cmp
jne
adc
sub
mov
push
push
movb
loopne
jnp
mov
sbb
adc
or
or
aaa
movsl
outsb
call
cmp
jnp
cmp
jmp
push
inc
sahf
xchg
jp
fidivrl
rorb
dec
push
nop
inc
push
pop
push
fmuls
push
loopne
and
pop
xor
jo,pt
or
sub
loopne
adc
xor
xor
rorl
jnp
sbb
push
jae
add
ret
addr16
aas
push
outsb
inc
stc
mov
loopne
mov
clc
les
mov
and
pop
je
or
fsubrl
xor
sbb
fwait
rcrb
shrl
call
orb
cltd
mov
cltd
add
cmp
push
stos
testb
fisubrs
dec
jae
into
xor
mov
xchg
sub
sub
lret
orl
das
imul
sbb
or
shll
push
pusha
fs
shll
js
data16
call
mov
dec
mov
push
aam
or
push
mov
inc
int3
mov
xor
xor
addr16
mov
sub
push
and
pop
out
stc
add
xchg
xchg
add
add
in
sahf
xchg
int
adc
and
mov
loop
pushl
xchg
jbe
pop
push
fadds
sbb
push
fs
je
fs
push
fs
push
push
pusha
push
cmp
lcall
nop
push
jne
cli
add
xor
test
sbb
dec
sbb
test
fidivrs
hlt
das
sar
adc
and
imulb
or
cmp
mov
xor
cmp
bound
pcmpeqw
ss
aas
mul
adc
mov
data16
lods
bound
pop
mov
mov
dec
adc
fbld
jmp
das
cltd
pop
imul
sbb
aaa
addb
sbb
push
lret
or
sub
ja
int3
js
popf
and
clc
sbb
es
shll
mov
push
pusha
or
mov
out
inc
in
es
add
push
sub
or
push
pop
push
adc
rorb
mov
add
cmp
in
repnz
mov
or
dec
mov
inc
shll
aam
jg
jo
rol
ljmp
or
rorb
xor
sbbl
or
push
testl
orl
testb
dec
or
adc
push
sub
lret
or
sbb
adc
ret
jne
xchg
push
inc
sbb
loopne
sub
cmp
adc
pushf
mov
adc
pop
repnz
or
cmp
in
pop
incb
repnz
out
sti
cltd
in
add
iret
cmp
push
movsb
out
in
sahf
fnstcw
add
imul
xor
insl
sub
rolb
ret
roll
mov
xchg
mov
mov
sub
mov
clc
dec
jne
stc
lock
xchg
js
stc
je
icebp
ds
mov
jne
xor
in
inc
xchg
ja
fwait
pusha
fldenv
or
mov
aam
dec
sub
loope
into
lods
push
scas
ja
add
std
ss
push
jne
adc
ret
adc
stc
int3
outsb
push
mov
or
adc
push
mov
add
push
lret
clc
or
cmp
jg
sahf
ljmp
cmp
jmp
jnp
dec
xchg
sbb
bound
aad
mov
adc
popf
jp
decb
push
push
xlat
rolb
fs
or
add
push
cmp
arpl
inc
cmp
adc
fidivs
pop
push
push
or
loop
mov
aas
icebp
push
test
aas
inc
addb
or
mov
and
decl
xor
inc
push
xchg
js
lds
je
push
push
adc
dec
out
or
add
pushl
pop
and
ljmp
or
dec
xor
int3
lock
jnp
sbb
dec
add
push
mov
xchg
and
daa
add
or
mov
gs
je
inc
inc
push
cltd
pop
fs
pusha
fs
xchg
insb
insb
push
inc
loope
je
pop
jo
pusha
aaa
clc
insb
in
arpl
pop
xchg
ret
ja
and
mov
cmpsl
mov
ret
in
dec
adc
je
cmp
je
mulb
xor
push
cmp
and
pusha
and
iret
je
xor
push
xchg
push
push
mov
push
lds
imul
inc
pop
xchg
loopne
add
jmp
lea
into
add
dec
leave
push
addb
xchg
out
push
add
lock
adc
add
sahf
pop
in
lock
cmpsl
addb
jmp
xor
adc
testl
add
jo
jp
dec
ss
jnp
out
dec
mov
jbe
mov
sar
leave
add
add
push
mov
fdivrp
sub
lea
mov
sub
cs
sub
xchg
dec
cmpsb
mulb
push
je
loopne
cmp
mov
jl
sbb
sbbl
inc
sub
mov
add
add
and
mov
cmp
test
test
ljmp
sbb
adc
faddl
out
movb
dec
subb
mov
inc
leave
jle
push
sbb
bound
sbb
jns
insb
push
imul
jge
jne
push
mov
sbb
inc
mov
dec
xor
xchg
cs
je
popa
pop
fisubrl
mov
jne
outsb
or
dec
jnp
xor
xchg
call
mov
inc
push
sbbl
pop
pop
sub
mov
cwtl
fidivrs
inc
or
test
sub
pusha
loopne
fisubs
fidivs
fs
repz
lock
xchg
push
and
adc
xchg
cwtl
push
jo
pusha
mov
add
push
pop
xor
sbbb
ret
xchg
sbb
xor
dec
add
add
adc
test
push
cwtl
mov
xchg
inc
mov
pop
cli
les
out
xchg
pop
rol
loopne
int
and
jo
mov
jnp
out
push
adc
mov
jb
fsubrl
mov
pop
arpl
jnp
jns
and
sbb
push
push
pushf
inc
js
sar
ja
push
out
subl
inc
loopne
or
or
ljmp
je
push
outsl
jo
aad
cmpl
sbb
dec
jne
inc
add
cmp
je
aaa
jnp
orl
mov
paddsw
sub
sbb
jg
adc
test
inc
xor
add
mov
ret
pop
rorl
je
inc
insl
pusha
pop
ljmpw
ljmp
mov
adc
ds
sbb
or
inc
jb
add
cmp
jo
sbb
push
pop
into
dec
enter
and
jecxz
mov
and
lret
insb
add
lods
mov
xchg
mov
sbb
mov
repz
inc
dec
out
pop
add
lcall
lds
xorl
ret
or
adc
xor
jg
cmp
jmp
loop
add
lock
imul
push
cs
sbb
add
outsb
pop
or
cmp
fwait
popa
and
sub
mov
jo
xor
add
lret
pop
movsl
pop
pop
aam
xchg
xor
in
mov
mov
mov
pop
mov
movsl
rol
data16
add
idivb
je
mov
cmp
sbb
sti
push
pop
dec
adc
pop
sbb
push
out
jo
push
cli
jle
icebp
loop
jno
push
add
aaa
cmovnp
pop
jg
lock
push
je
jge
insl
test
jb
mov
jecxz
das
inc
cmp
inc
cmp
pop
add
cmp
cmc
ljmp
aam
and
movzwl
pop
or
inc
std
jne
daa
pop
sahf
xchg
cmpsb
jae
add
push
push
push
push
je
test
rolb
cs
sbb
stc
or
adc
cmp
push
arpl
xchg
fisubrl
sbb
arpl
lods
jecxz
adc
aam
sarl
inc
out
roll
imul
jns,pn
jne
add
and
add
or
dec
insl
dec
push
pushf
xor
add
popa
in
push
in
stos
sbb
or
push
insb
or
sbb
sub
mov
addr16
add
and
jge
inc
or
cmp
or
and
push
mov
xchg
ret
fadds
sbb
test
inc
clc
sbb
add
call
movsb
adc
push
cmp
add
xchg
cmp
inc
mov
xor
pop
sub
scas
mov
inc
and
inc
scas
clc
xchg
xor
push
rclb
into
inc
lret
sbb
popf
testl
sysret
pop
sub
lock
sahf
dec
push
addl
call
mov
lcall
sbb
push
jo
bound
mov
pop
ss
jno
add
push
push
xor
push
mov
fdivrs
push
mov
and
sbb
xchg
movsb
xchg
fmull
orb
add
or
push
into
outsl
adc
xchg
sbb
mov
sub
roll
aam
push
add
jle
mov
push
cmp
ret
and
xor
and
sub
shrd
jge
adc
adcl
js
sub
lods
xor
push
xor
aaa
es
lea
testl
xor
inc
xor
inc
cwtl
test
shlb
push
pop
add
inc
xchg
dec
outsl
cld
addl
into
test
mov
inc
clc
push
jno
jl
aas
sbb
inc
jmp
pushl
xchg
stos
push
pop
mov
iret
call
inc
lea
ret
cmc
ss
fldl
pop
hlt
repnz
jne
lea
mov
or
xor
ret
shr
dec
sub
push
inc
notb
sbb
ret
jns
ss
fbstp
add
mov
jl
orl
sbb
cmpsb
adc
pop
cld
and
push
mov
outsb
inc
or
xor
ffreep
lds
cmp
xor
pop
sahf
dec
cwtl
flds
xchg
dec
outsb
mov
sahf
mov
xor
xor
or
pop
adc
aad
jbe
add
test
iret
in
xchg
inc
mov
loope
mov
fdivrl
out
test
push
mov
loopne
lods
jl
jmp
pop
sbb
cmp
test
lcall
dec
dec
rorl
pop
sbb
add
test
xlat
shr
pop
arpl
dec
insb
mov
dec
adc
pop
jns
in
clc
inc
push
inc
adc
inc
add
and
fdivs
lods
mov
fs
addl
pop
pop
dec
scas
es
xor
add
je
xchg
pop
xchg
jp
lock
test
push
je
stc
pop
lea
or
test
add
cmp
cmp
xchg
xor
aas
lock
lods
add
sbb
testb
inc
or
loope
scas
inc
scas
mov
jno
mov
sar
add
xor
and
xor
mov
or
insl
fnstcw
shlb
and
xor
pop
sbb
mov
push
xor
inc
lret
jb
scas
push
mov
in
stc
push
sbb
sbb
shll
test
xor
fstpl
add
and
cmp
add
add
inc
and
or
inc
call
push
ja
ret
mov
test
ret
dec
xor
or
insb
scas
xchg
mov
stos
cs
cmp
fbstp
add
ret
ret
dec
add
inc
xor
pop
mov
call
movhps
scas
repnz
cld
mov
loopne
sub
sbbl
test
push
push
cmpsb
push
loope
data16
pop
mov
mov
push
outsb
cld
nop
jmp
gs
fcompl
insb
pop
bound
pushf
pushfw
inc
xlat
adc
mov
or
aad
test
fst
lods
dec
rcl
mov
mov
sarb
add
orl
jae
insb
mov
mov
mov
cmp
pop
pop
bound
repnz
push
pop
cmp
push
jne
addb
mov
gs
dec
cwtl
adc
imul
insb
mov
cwtl
mov
mov
adc
inc
adc
dec
ret
loop
jne
cmpb
jo
inc
out
ds
aad
enter
frstor
add
xor
pop
sub
mov
in
or
add
push
cmp
cmp
and
aaa
and
aaa
push
addl
sub
sbb
push
loopne
add
xchg
and
in
je
lock
mov
adc
call
daa
add
adc
mov
inc
dec
inc
xchg
imul
outsl
inc
shrb
jle
into
add
xchg
xor
jae
movsb
pop
lock
adc
adc
xor
ret
cmp
xchg
scas
scas
sub
mov
add
add
push
mov
lcall
jge
and
lcall
xor
fsubl
mov
adc
sbb
je
mov
das
movsl
inc
dec
cmp
cmp
adc
pop
sub
jo
aas
mov
and
dec
adc
push
orl
jbe
inc
outsl
or
in
andl
adc
adc
push
push
pop
jmp
lea
add
inc
xor
in
pop
pop
add
sub
lods
adc
sbb
les
hlt
lods
orb
jge
adc
sbb
xchg
sti
into
add
das
mov
cmp
jne
mov
xor
mov
xor
cmp
or
call
inc
loop
pusha
movsb
stc
movl
mov
and
sbb
ret
push
pop
and
aas
jp
bound
mov
call
ret
inc
leave
jne
xchg
inc
cli
push
cld
jle
or
clc
xchg
clc
dec
in
aas
adc
movl
jbe
insb
shr
inc
add
arpl
sbb
mov
out
mov
or
inc
adc
push
jp
sub
sbb
std
push
mov
insl
mov
decb
popa
fcom
adc
fucom
loopne
or
lcall
and
mov
cmp
push
cmpsl
xor
sbb
inc
out
movsb
cmc
xchg
sbb
push
add
push
ja
xchg
pop
adc
sub
sarb
xchg
jne
add
jns
pop
ljmp
xchg
push
jge
idivl
pop
sbb
jle
insl
push
in
push
xor
mov
xchg
cmp
inc
xchg
sbb
pop
push
inc
sbb
push
or
cmp
xor
adc
fisubrl
into
mov
add
xlat
or
jns
rclb
mov
cmp
pop
jmp
sti
out
push
pop
mov
movsl
testl
insb
insb
sbb
adc
jge
mov
fimull
cmpb
ud0
mov
hlt
in
test
add
movb
daa
sub
addr16
sub
je
adc
and
lds
mov
out
add
add
push
mov
hlt
sbb
sub
push
lret
push
fisttpl
mov
pop
mov
lea
or
mov
gs
sbb
shl
je
aaa
jbe
icebp
inc
or
push
ficomps
aas
or
add
mov
add
or
mov
jg
mov
jo
dec
in
push
xchg
mov
in
scas
rcll
hlt
inc
in
dec
inc
popf
aaa
dec
pop
loope
adc
pop
bswap
push
sbb
or
mov
cmpb
fs
mov
and
push
mov
jmp
arpl
cmpb
mov
xor
pop
fcmovb
stos
imul
popf
push
test
pop
dec
dec
jp
lea
mov
push
push
and
push
mov
shll
cmp
call
and
test
mov
dec
or
pop
fs
dec
and
test
inc
imul
clc
je
xchg
pusha
pusha
aaa
or
xorl
pusha
mov
lods
push
out
xor
sub
stos
mov
out
inc
jnp
mov
push
pop
mov
out
pop
test
das
das
push
or
pop
stos
mov
push
arpl
mov
in
mov
push
push
add
test
push
inc
inc
mov
pop
or
dec
or
adc
xchg
fadds
pop
xorl
xchg
rcrl
test
jo
sbb
xor
ds
or
add
jmp
or
xchg
xor
decl
andl
daa
lret
add
dec
les
in
nop
adc
xchg
int3
out
pop
testl
jge
xchg
shl
inc
mov
testl
ret
lock
nop
jle
xor
fldl
pop
or
jl
aam
and
rorl
adc
mov
and
insl
jne
insb
es
xor
or
or
push
stc
push
sub
mov
mov
les
push
and
insb
out
dec
aam
sbb
sbbl
sub
and
in
aas
lods
mov
jle
xor
imul
mov
fdivl
dec
mov
lods
or
inc
bound
gs
inc
mov
and
dec
add
mov
mov
iret
jae
cmpl
mov
push
rolb
arpl
pop
xor
daa
mov
pop
lods
push
mov
arpl
push
mov
lods
xlat
add
pushf
dec
imul
add
inc
ret
sub
aaa
cmp
cmp
adc
lock
ss
lds
cs
mov
mov
and
test
cmp
xchg
xchg
jo
ss
in
outsb
arpl
ret
push
cmp
rolb
mov
or
push
xor
loope
xor
pop
inc
adc
or
clc
pop
push
mov
pop
dec
xchg
sbb
jbe
push
push
adc
out
adc
xor
jp
pop
push
mov
jg
insb
shl
add
ret
div
inc
add
lcall
or
in
int3
adcb
and
and
mov
out
out
daa
out
data16
adc
outsl
jo
movb
jbe
xchg
bound
sub
rcr
std
out
je
sub
mov
scas
add
mov
dec
jnp
test
push
or
add
fists
sbb
lcall
mov
sbb
incb
jmp
cmp
movsl
test
bound
sub
cmp
roll
dec
mov
push
sti
scas
movzwl
addl
push
mov
xchg
cli
cmp
inc
jmp
aaa
push
jg
or
dec
pusha
mov
add
pop
or
or
pop
test
sbb
je
and
add
test
push
lods
add
adc
leave
pop
or
dec
mov
loopne
das
ret
scas
and
push
inc
es
and
inc
sbb
push
mov
mov
and
imul
je
sub
sub
and
ljmp
push
arpl
push
inc
push
adc
pop
adc
test
xchg
fnsave
cmp
or
push
adc
idivl
stc
sub
jno
mov
leave
xchg
ds
in
sti
push
loopne
jnp
pop
mov
mov
or
dec
or
sbb
outsb
shld
nop
jns
or
or
add
cld
dec
jge
inc
enter
mov
cmpsl
ror
rcll
and
adc
sbb
adc
pop
fcoml
push
sub
push
xor
je
add
xor
sbb
xchg
sbb
sarb
popf
xor
pusha
ficomps
or
cmpsb
mov
rolb
xor
fcomp
movsb
jb
mov
ret
ss
xchg
mov
inc
and
jecxz
and
push
stos
xor
enter
xchg
xor
xchg
mov
sti
jo
xchg
xchg
fcompl
push
inc
movsb
andb
jbe
xor
cmpsl
pop
push
and
out
shll
les
cltd
in
stc
and
mov
cmp
test
in
repnz
mov
inc
jb
cltd
rorb
int
aam
push
lock
jae
call
sbb
pusha
sbb
imul
call
sbb
outsl
inc
cmp
pop
jge
jecxz
mov
scas
das
sbb
leave
enter
add
in
cmp
push
leave
in
mov
in
pop
and
in
pop
subl
mov
imul
mov
aas
mov
or
push
inc
pop
push
fisttpll
lock
outsb
add
push
adc
pop
repnz
test
les
cmp
pop
test
add
test
xchg
xor
fisubl
mov
sbb
push
inc
sub
rorb
mov
jnp
or
mov
adc
or
push
cltd
mov
add
lret
and
or
jmp
nop
movsb
sub
or
xchg
push
sub
rcrl
xchg
movsb
push
hlt
push
xor
inc
mov
icebp
push
fsubs
push
sub
xor
xchg
icebp
insl
mov
mov
outsb
pop
cltd
xlat
lcall
daa
clc
jmp
adc
enter
negb
inc
push
jne
jle
lea
adcl
in
sbb
jmp
cmp
int3
nop
dec
sbb
xlat
into
push
test
adc
rol
fcoms
push
insb
xor
ja
loopne
or
mov
and
inc
jb
cwtl
je
and
pop
sbb
sbbb
stos
xor
pop
jle
loop
or
inc
inc
add
or
mov
pop
adc
adc
dec
sub
lcall
jp
out
cmp
dec
lea
sbb
loope
pop
push
or
push
push
xchg
repnz
mov
mov
add
push
pop
icebp
push
mov
addb
mov
aam
cmp
push
or
push
xchg
push
lcall
popa
cmp
add
pop
adc
shl
call
or
lods
dec
pop
incl
rorb
push
punpckldq
decl
pop
or
aad
inc
pop
outsl
loopne
cwtl
or
dec
xlat
add
dec
mov
es
cmp
pop
jp
divb
ror
pop
cmp
xor
imul
cld
pop
lods
lea
rorb
test
call
pushf
and
insb
push
loopne
insl
sbb
push
sahf
lock
lock
push
popf
dec
and
ja
lds
mov
testl
push
pop
xchg
loopne
or
sub
ljmp
cwtl
adc
push
xchg
pop
dec
inc
addr16
orb
push
xor
jae
mov
jo
call
push
inc
pop
sbb
das
cmpb
addr16
aas
mov
or
mov
jg
jo
push
add
jo
outsl
mov
sti
or
or
or
iret
or
in
in
es
or
or
sbb
aaa
sbb
fistpl
mov
cs
adc
cli
mov
ja
jo
jl
push
movsb
jns
add
push
js
add
push
jg
repz
inc
out
dec
or
jge
mov
add
jl
roll
sbb
frstor
and
push
inc
adc
sbb
and
add
fiaddl
pop
out
stos
mov
mov
cmp
xchg
and
js
sbb
setl
pop
std
mov
inc
push
sbb
xor
dec
movsl
popf
cmp
ret
pop
stc
adc
addb
xor
push
adc
sub
insb
pop
movb
sbb
leave
ret
sub
popf
add
sub
xor
std
test
mov
les
xchg
sbb
ficompl
fmull
mov
jge
push
adc
pop
sbb
ret
push
loope
fs
push
push
cmpsl
inc
mov
sub
sub
nop
sbb
xchg
adc
sub
pusha
mov
jl
sbb
stc
mov
and
sub
sbb
outsl
cmp
push
pusha
sbb
pop
fisubrs
fwait
call
rorl
shr
mov
cmp
sbb
adc
or
ljmp
jno
push
pop
pusha
je
cli
add
test
movsl
inc
in
call
jmp
push
in
fsts
adc
cltd
inc
lcall
pop
shll
jne
or
lods
and
or
rcll
mov
popf
xchg
mov
push
add
sub
pop
add
jmp
pop
dec
dec
pusha
ja
mov
cli
add
pop
je
or
push
cmp
adc
pop
fbld
loopne
mov
dec
and
push
xchg
push
cld
mov
bound
repnz
shl
lods
lcall
mov
pushf
cmp
andb
call
pop
xchg
sbb
sub
insb
stos
inc
dec
adc
fiadds
pop
adc
ss
mov
push
mov
or
and
lahf
pop
inc
pushf
push
adc
and
jge
mov
xchg
pop
les
xor
clc
push
cld
push
sbb
adc
repz
xor
mov
jmp
add
sbbl
xchg
test
arpl
sub
push
test
movsbl
inc
inc
enter
cmpsl
bound
out
dec
or
add
scas
je
dec
and
leave
lahf
out
test
int3
push
or
mov
mov
and
mov
and
adcl
daa
ret
sub
inc
mov
push
mov
lods
int3
xchg
add
add
mov
add
inc
and
addr16
or
mov
mov
sbb
sbb
cli
or
xchg
add
and
outsb
push
pop
mov
jo
push
push
sub
in
jle
xchg
clc
sub
adcl
and
rclb
addr16
ficoms
adc
mov
test
add
xchg
pop
or
in
gs
mov
cwtl
mov
sub
les
aas
sub
mov
rcll
sahf
sbb
mov
aam
or
mov
lret
and
in
xchg
iret
push
sbb
mov
pop
cmp
and
or
clc
ds
rol
mov
add
cmpsl
dec
ss
xlat
xchg
addl
adc
stc
cmp
pop
test
repnz
pushf
into
xchg
pop
or
ret
dec
mov
adc
call
sub
movsl
mov
mov
add
adc
add
adc
movsb
or
sbb
and
adc
and
jmp
pushl
sub
push
scas
cwtl
mov
bound
loope
add
mov
dec
loopne
mov
jmp
js
ljmp
push
sbb
adc
movsl
sub
push
push
mov
stc
xor
clc
ret
out
push
xlat
and
mov
jo,pn
sbb
jecxz
pop
pop
pop
xchg
jae
les
dec
loopne
sub
out
orl
rolb
adc
sub
xor
mov
out
loopne
and
lcall
dec
movsl
pop
sub
xchg
call
add
jns
cmp
pusha
sub
jl
add
test
cmp
daa
jp
icebp
xchg
subw
xor
xchg
fimuls
jle
xlat
lock
push
fldcw
mov
and
js
repz
rclb
dec
and
adc
stc
push
lock
jne
pop
add
bound
popa
xor
repz
mov
cmp
lock
and
in
cmp
xchg
add
xor
js
xchg
mov
xor
inc
mov
cmc
lcall
int3
or
jne
pop
adc
sub
sub
sub
imul
sub
call
push
jae
mov
jecxz
lret
lea
inc
inc
fistpll
jne
add
mov
popf
jg
in
push
insl
cmpsb
imul
dec
movsb
rcr
daa
cmp
jne
push
adc
movsl
or
xchg
out
rclb
add
dec
lcall
cmc
push
int3
mov
sbb
jge
add
push
sbb
adc
enter
push
cmp
movsl
add
xor
or
mov
push
in
loopne
push
and
jae
dec
sahf
inc
mov
push
lods
or
cmp
jae
in
inc
movsl
loope
rorl
add
cmp
jne
push
adc
or
sub
xor
pop
sti
imul
mov
mov
mov
mov
add
inc
jmp
push
dec
daa
lock
push
fsub
adcl
jge
inc
sub
push
aam
out
mov
add
mov
mov
add
decl
add
rcll
or
or
sbb
dec
call
pop
pop
hlt
jg
decb
or
iret
xchg
inc
pop
mov
loopne
mov
inc
or
fwait
cwtl
or
dec
sub
jge
sti
sub
and
cld
loopne
mov
sbb
mov
inc
nop
test
adc
sbb
pop
mov
inc
mov
lahf
int
or
loopne
fcompl
iret
push
pop
jns
mov
adc
add
xor
and
decl
dec
stc
dec
cmp
aas
inc
or
and
aad
pop
scas
ret
mov
xor
xchg
inc
pop
icebp
lea
pop
sub
adc
add
call
imul
imul
aas
test
pusha
lock
jns
sbb
jge
sbb
xor
cld
jecxz
and
dec
pop
test
or
je
sbb
mov
cli
add
mov
int
push
ret
push
xor
push
xchg
minps
orb
pop
ret
nop
fiaddl
cmp
popa
test
push
xchg
ret
movsl
imul
pop
inc
xchg
movsb
inc
jno
aaa
push
xor
push
test
push
xor
das
jns
popa
cltd
mov
push
xchg
daa
inc
cmp
push
inc
pop
inc
jle
xor
sbb
sbbl
iret
and
add
test
dec
in
push
cmp
mov
cmp
jbe
mov
cmp
push
sbb
push
or
adc
shl
stc
cmp
inc
loopne
or
mov
jbe
mov
add
lcall
jge
jns
dec
insl
and
in
pop
inc
cs
inc
shlb
iret
or
mov
repnz
negb
push
leave
adc
movsb
inc
cs
dec
sbb
invd
adc
lods
dec
sbb
xor
rclb
xchg
xlat
push
push
push
add
push
nop
or
outsl
add
push
hlt
sarl
fwait
inc
push
cmp
jb
cmp
cmp
inc
sti
lret
sbb
xor
inc
jmp
xor
sar
fists
aaa
cmp
push
push
push
inc
shl
push
fwait
pop
mov
ljmp
mov
mov
andb
push
pushf
and
fistps
add
sbb
cwtl
sub
add
dec
dec
es
cmp
lret
jle
dec
dec
loopne
mov
sbb
out
in
or
add
cmpb
pop
movl
or
inc
or
rclb
xchg
xchg
add
adc
cmp
fmuls
push
or
and
jnp
jle
push
pop
dec
ja
sub
loope
adc
add
or
cmp
aas
mov
add
enter
xchg
jne
and
nop
pop
sbb
enter
jo
xor
dec
leave
mov
xchg
scas
pop
ror
inc
inc
inc
jae
or
and
cld
or
movl
push
jno
adc
add
sub
or
jecxz
scas
add
xchg
jne
in
pop
and
fldenv
or
adcl
adc
add
adc
cli
adc
faddl
sysret
inc
xchg
pop
ret
int
xor
dec
push
mov
jle
xor
mov
dec
arpl
movsb
jp
les
push
lret
rorb
test
andl
add
and
mov
fisubrl
pop
nop
jo
xchg
xchg
pop
sti
jg
dec
and
sub
fcoml
shlb
or
lods
icebp
sbb
test
aas
xchg
xor
orb
dec
fdivr
pop
sub
inc
lock
and
and
xchg
mov
mov
or
imul
inc
pop
mov
rep
xor
sbb
fnstenv
xor
pop
or
fimull
push
cld
clc
sbb
popa
aas
pop
and
dec
push
sbb
add
lods
dec
test
mov
andb
jge
gs
rclb
out
ss
in
ret
jbe
ret
push
mov
adc
add
sub
and
xor
sbb
push
clc
adc
les
adc
pop
in
test
or
push
in
and
add
lret
and
jg
jo
imul
push
rcll
mov
add
mov
and
pop
jecxz
adcb
xchg
loop
pop
or
ret
add
pop
adc
cmp
enter
or
stos
inc
sub
daa
jb
add
mov
lea
ret
sub
stos
or
jl
push
clc
roll
pop
js
pusha
movsl
push
std
ljmp
cld
clc
idivl
mov
cld
sub
lods
lods
rorl
dec
inc
xchg
mov
inc
inc
and
lea
sub
sub
daa
popa
stos
cmp
sarb
cmp
ret
adc
leave
test
fsubrs
arpl
mov
dec
or
idivb
outsb
pushf
roll
mov
inc
mov
push
push
adc
and
mov
add
cmpsb
les
xor
mov
lock
sbb
inc
je
sti
xchg
mov
inc
mov
pop
mov
jbe
mov
mov
loopne
int
sbb
loopne
ret
je
mov
in
xor
jecxz
lods
mov
jno
sti
inc
push
pop
pushf
lods
bound
test
fcoms
mov
jg
inc
cmp
mov
sub
mov
fidivl
enter
jge
fchs
mov
push
and
out
cwtl
outsl
cwtl
jle
dec
add
jmp
or
push
aas
xlat
jns
xor
and
shll
push
xor
inc
mov
aad
xlat
add
addr16
ja
mov
inc
cld
inc
or
pop
mov
jl
or
mov
push
mov
pop
pop
pop
inc
int3
inc
loopne
add
dec
push
xchg
adc
mov
cmp
ljmp
xor
mov
add
pusha
add
sbb
add
pop
add
xor
js
sahf
cmp
add
decl
cmp
xchg
jno
scas
aad
and
or
push
mov
push
or
lods
ficoms
mov
cmpb
adc
jb
outsl
add
adc
add
stc
iret
xchg
lea
mov
or
lods
ja
lds
adc
xchg
ret
mov
xor
adc
or
inc
pop
js
inc
sbb
sbbb
ss
or
and
sbb
mov
js
jmp
push
inc
mov
arpl
mov
in
adc
sub
cwtl
cmp
stc
adcl
hlt
icebp
ret
push
cmp
fcmove
or
je
cmp
je
cmp
cmp
in
cmpsl
into
fisubs
adc
mov
xor
dec
cmp
repnz
adc
ret
xchg
push
xor
sbb
inc
xlat
inc
cmpsl
daa
pop
cmp
sub
shlb
pop
cltd
inc
out
add
das
sti
rep
cmpsl
cmp
inc
xor
or
movsl
mov
adc
jmp
sub
jae
shl
jno
shl
add
sbb
shlb
mov
jle
or
outsl
jnp
and
jne
push
push
push
xor
and
adc
mov
inc
clc
inc
xor
loopne
adc
sub
jmp
inc
inc
sub
and
adc
push
xchg
add
notb
lock
xor
sub
les
xchg
rol
mov
jbe
aas
int3
pop
add
xchg
pop
mov
stos
adc
jl
or
cmp
cmpb
jne
sub
inc
push
call
shlb
and
or
push
sub
popa
cwtl
dec
add
lock
lret
adc
sub
push
mov
andb
sub
popa
mov
mov
imul
push
rcl
add
out
mov
xchg
add
mov
les
std
adc
repnz
shlb
inc
addb
inc
imul
push
xor
rcrb
clc
pop
pop
cwtl
fcom
aas
xor
add
lret
add
jnp
and
adc
push
mov
addr16
dec
scas
inc
lret
mov
ficoms
sbb
les
mov
imul
fisubrs
outsl
repnz
mov
sub
xchg
fisttpl
mov
daa
mov
mov
adc
jno
incl
sub
mov
dec
jbe
dec
rclb
add
push
cmp
mov
xlat
mov
adc
arpl
xchg
jne
push
and
add
xchg
inc
dec
push
rolb
js
aad
sbb
and
sarb
dec
jne
sub
in
daa
cld
loopne
mov
lods
pop
sbb
in
add
bnd
xchg
pusha
addb
push
mov
mov
or
add
jno
push
ret
cmpsl
movsl
push
fistpll
add
je
mov
dec
push
testl
inc
jbe
cltd
cmp
jl
subb
cmpsb
mov
gs
cmp
mov
sub
gs
ret
xchg
xchg
fsubs
xor
mov
ficompl
xlat
dec
sbb
testb
lock
subl
je
das
aad
out
scas
pop
ror
leave
adc
in
pop
mov
test
or
ljmp
inc
pusha
clc
adc
mov
adc
inc
mov
add
jge
shrb
xor
es
jbe
js
nop
pop
sbb
add
cmpsb
add
xchg
test
jle
testb
xor
es
xchg
nop
stos
pop
add
test
pushf
push
push
daa
pop
pop
popa
insb
loope
jnp
and
push
adc
or
push
pop
add
and
cmp
xorl
mov
adc
or
or
dec
or
shll
mov
adc
push
ljmp
rol
add
clc
jbe
or
add
xor
jmp
ret
and
mov
lea
xor
jecxz
loopne
cmp
faddl
call
or
mov
add
or
and
iret
pop
orl
or
adc
dec
push
fsubr
or
adc
and
ja
lea
mov
lret
push
fdivp
jecxz
cmc
aam
loope
cmp
mov
jo
imul
push
gs
jl
pop
ret
clc
in
mov
and
ret
repz
mov
or
push
test
aam
or
add
and
enter
push
ror
sbb
shll
sub
aas
lods
and
xor
pop
aaa
sbb
stos
add
adc
call
pop
fwait
mov
or
xor
mov
adc
mov
testb
pop
sbb
mov
shrl
arpl
dec
add
aas
aad
mov
cwtl
outsb
sar
lea
jp
nop
in
pop
cmp
dec
rol
push
cmp
jb
pushl
jo
dec
adc
js
clc
push
pop
jmp
xor
jae
cmp
add
xchg
and
bound
jecxz
lret
rol
adc
in
adc
adc
jo
std
icebp
or
sub
fwait
mov
shll
pop
inc
popa
rclb
addr16
xchg
dec
es
mov
jns
mov
dec
icebp
xchg
push
mov
mov
inc
dec
xchg
pop
add
dec
ljmp
add
and
mov
enter
stos
imul
sbb
mov
xchg
jg
jp
jae
pop
pop
pop
mov
sub
cmp
pop
ss
pop
out
add
dec
pop
jmp
mov
add
inc
xchg
and
out
or
imul
mov
test
mov
and
mov
cmp
sbb
daa
or
sbb
in
sub
and
push
cmp
daa
shlb
mov
cmp
in
fucomi
arpl
jb
mov
ja
adc
fistl
or
fistl
sbb
pop
dec
or
push
fsubl
fstp
sbb
jmp
adc
fsubs
xchg
and
adc
sub
inc
outsb
daa
pop
mov
icebp
movl
cmp
sarb
les
int3
mov
sbb
and
add
push
pusha
rolb
in
add
jg
and
add
xor
lea
lock
sub
mov
push
test
add
mov
aas
and
sbb
and
and
xchg
xchg
and
les
xchg
in
daa
inc
push
nop
xchg
sub
sub
nop
inc
push
cs
or
add
jae
jmp
push
xchg
add
pop
push
loopne
leave
sub
xor
add
ss
js
std
xor
or
xor
mov
mov
mov
pop
lcall
ret
movsb
je
fcmovu
cmp
mov
or
pusha
mov
fs
add
jnp
sub
adc
sbb
rcll
or
sbb
pop
or
jmp
mov
pop
dec
inc
mov
xchg
or
popf
nop
mov
ret
lret
mov
hlt
cmpsb
dec
xchg
imul
jns
pop
adc
add
add
adc
jp
dec
lea
fstps
sbb
ja
ja
rcl
shlb
inc
sub
subb
mov
adc
movhps
ds
subb
sub
push
add
inc
sub
mov
testl
jl
fisttpll
cmp
mov
in
pop
mov
sub
push
or
adc
push
je
adc
or
sub
jb
cwtl
and
test
or
push
mov
adc
pop
sarb
notb
mov
sub
push
pop
mov
popf
std
lock
mov
add
popf
mov
fwait
test
xor
xchg
adc
jne
push
jns
rcrl
icebp
in
push
in
push
callw
dec
sub
jmp
das
out
or
es
je
dec
bswap
push
xlat
stos
or
pop
sbb
andl
or
adc
add
pop
mov
dec
cmp
jne
sbb
aaa
sbb
xor
add
in
test
lds
call
fbstp
or
je
les
inc
cs
and
insb
xchg
sbb
mov
cmp
jge
push
jae,pn
shr
xchg
int3
fcomps
movsl
orl
jg
cmp
push
mov
add
and
outsl
loopne
add
adc
mov
adc
lock
es
add
sbb
fildl
lock
into
and
push
push
or
adc
dec
cmp
jg
push
sbbl
push
in
pushf
dec
js
or
stos
icebp
test
fcoms
mov
or
mov
pop
in
call
jb
loopne
roll
mov
or
push
sub
pop
jmp
cmp
and
dec
push
xchg
shlb
dec
or
jns
orb
arpl
test
mov
jne
stc
pusha
xor
dec
cmp
push
and
mov
and
loope
adc
test
push
xchg
or
push
andb
or
push
jns
test
xchg
loopne
cwtl
pushf
mov
or
out
bound
adc
or
mov
or
shl
cltd
imul
js
adc
jmp
push
adc
xor
adc
cmp
push
popa
dec
notl
in
sub
sub
push
push
and
out
xor
jmp
add
xchg
pop
push
pop
jbe
xor
push
dec
adc
or
int
sub
fst
and
call
in
shl
std
or
mov
mov
repnz
jno
lock
adc
in
stos
dec
sarl
cmp
adc
roll
aas
jl
and
stos
rcll
lock
adc
mov
loop
rcrl
mov
decl
inc
mov
add
jl
cmp
jbe
sti
pop
jle
cmp
push
jp
or
pop
inc
cmp
aas
lods
sub
pop
cmp
mov
mov
pop
and
pop
enter
xor
je
cmp
je
or
lock
pop
andb
pop
dec
and
hlt
dec
iret
mov
adcb
leave
cs
addr16
xorb
icebp
test
cmp
testl
sarb
add
mov
popf
mov
data16
fwait
xor
jle
jbe
enter
orb
dec
sbb
js
dec
xor
sbb
jge
xchg
pushl
jno
or
sub
movl
adc
mov
and
or
jno
aam
adcb
ret
xchg
pop
jmp
sub
lock
addr16
popf
sub
mov
into
sub
mov
mov
mov
mov
test
pop
jne
sahf
pop
lods
pmaxsw
into
pop
xchg
cmp
adc
sbb
nop
and
aam
sbb
mov
fldl
sarb
sar
pop
mov
push
insb
stos
and
fistl
cmp
test
mov
mov
mov
pop
mov
sub
cli
add
cltd
addb
loopne
insl
jmp
jmp
pop
test
and
lock
movsl
insb
sbb
leave
loope
dec
xor
push
lea
mov
xor
rcr
aas
js
xor
mov
inc
jp
insb
and
je
hlt
sbb
ss
add
sub
dec
adc
mov
in
loopne
insl
add
dec
inc
xor
xchg
popa
cmpsl
sbb
sbb
mov
das
cwtl
add
or
mov
iret
imul
or
push
pop
pop
sub
lock
fs
or
and
cmp
dec
adc
inc
mov
pop
lock
lea
sub
pop
mov
test
jnp
or
add
sub
adc
dec
je
fiadds
cmpsl
sbb
jne
push
and
sbb
xor
or
lock
outsb
fnsave
pop
push
sub
cmp
inc
push
imul
data16
je
je
add
xchg
xchg
sub
mov
push
pop
sar
or
loop
rclb
ret
addb
push
pusha
jle
and
add
push
mov
cmp
cmp
mov
mov
and
xor
xor
or
lds
fmull
jne
and
cmc
lods
jbe
jmp
push
jno
cmp
and
sbbl
and
imul
pop
xchg
add
lock
testb
sbb
dec
pop
fucomi
jae
adc
sub
cmp
fistl
fsubl
pop
imul
push
mov
ss
inc
jae
sub
fdivrl
mov
push
jnp
ss
add
out
push
jle
scas
or
jmp
and
adc
sub
inc
ljmp
sbb
jo
into
pop
xchg
fcomi
or
or
mov
icebp
fwait
dec
add
std
movb
fsubrl
cmc
push
jo
cmp
pop
cld
in
xor
inc
push
or
outsl
cmp
inc
inc
lea
adc
jns
or
mov
mov
test
je
or
je
cmp
adc
add
and
pop
push
lods
cmp
call
test
pop
std
add
xchg
cmp
mov
out
or
incb
jne
xor
dec
shrb
test
jle
or
mov
dec
add
and
jne
mov
jno
in
dec
into
xor
push
push
sbb
or
push
lods
fcoml
inc
repnz
mov
sub
or
jne
pop
insb
movb
pop
je
fwait
adc
or
push
add
inc
into
addb
loopne
jno
push
lods
add
pop
inc
loop
and
fld
adc
dec
pop
xor
pop
repz
leave
push
loop
cltd
iret
cmc
imul
add
jecxz
dec
pop
lcall
adc
jno
inc
inc
mov
cmc
pusha
add
std
add
cmp
insb
jmp
aad
mov
cwtl
orl
shlb
mov
jmp
ljmp
pop
rcrb
dec
pusha
mov
adc
pushf
shrl
ret
cmp
cmpb
fildll
pop
or
jle
enter
push
inc
negl
or
add
add
rcll
sbb
movb
sbb
pop
dec
or
hlt
pop
test
adc
cli
repz
gs
inc
jl
push
push
hlt
jg
mov
sub
mov
fidivrs
add
or
cltd
ret
add
ret
and
cmp
orps
orl
repnz
sahf
inc
lock
mov
sbb
sub
lea
xor
fisubl
pusha
pop
mov
adc
aam
mov
cmp
stos
es
mov
pop
pop
or
cmp
dec
adc
shrl
mov
clc
adc
xchg
test
mov
enter
bnd
test
push
dec
dec
adc
pop
cmp
mov
insb
add
in
or
xor
jg
mov
data16
xorb
push
jmp
add
sub
sub
push
pop
dec
sahf
sbb
jbe
pop
test
lahf
dec
mov
jle
ja
mov
inc
add
push
mov
push
lcall
sahf
sub
fiadds
into
lea
ret
add
sub
jne
fistl
popa
jae
dec
negb
pop
dec
pushf
pop
xor
rcrb
jmp
pop
push
cmp
dec
cmp
jmp
mov
or
mov
mov
pop
mov
pop
xchg
pusha
inc
mov
lea
cld
pop
push
or
sbbl
mov
mov
xchg
push
push
adc
sbb
shr
ljmp
sub
add
jnp
ret
cmpb
push
push
lods
adc
xchg
cmp
dec
sbb
push
inc
fstl
add
inc
push
inc
jmp
mov
and
movsl
addb
sub
inc
and
push
and
cmpsb
push
xor
pop
jle
inc
or
add
sub
push
mov
sub
inc
adc
es
sub
mov
push
pop
je
fldl
rcll
fstpl
dec
in
push
mov
pop
inc
jne
iret
iret
repz
inc
add
bnd
push
divb
or
cld
cmp
clc
jne
or
jne
or
pusha
mov
cld
scas
leave
int3
push
fsts
idiv
cmpsl
out
into
fstpl
andl
aam
add
inc
mov
inc
in
fsubrs
mov
in
subl
push
pop
insb
sbb
jge
aam
arpl
loopne
testl
or
pop
jecxz
scas
and
stos
outsl
mov
movsl
movsl
lea
movsl
push
mov
cld
push
adc
xor
pop
fprem
aam
cmp
and
sti
sub
mov
mov
lea
gs
ficomps
push
push
jmp
push
push
aaa
add
lods
pusha
adc
xchg
insb
xchg
test
add
aam
pushl
inc
sub
jo
in
insb
loop
or
fimuls
testl
or
les
inc
and
cmpsb
cmc
jnp
sub
push
movsb
lock
push
and
pusha
pop
je
mov
add
inc
add
jle
or
or
addb
iret
scas
push
popf
lahf
add
enter
jle
sub
add
push
rsqrtps
dec
repnz
xor
push
sbb
jge
imul
movsl
shrl
jge
push
shlb
add
cmp
add
xor
rcrl
inc
je
xchg
xor
popa
mov
xchg
cmp
xor
pop
or
iret
popa
or
les
popa
and
leave
mov
insl
push
pop
fdivrs
jl
in
xor
lock
and
or
or
pop
enter
inc
pop
mov
inc
push
mov
cld
mov
jns
int
or
pusha
cmpb
xor
xor
mov
sub
mov
inc
and
dec
add
inc
insl
sub
dec
and
mov
cld
mov
mov
add
insb
jne
inc
fidivrs
inc
data16
add
fidivrs
push
xor
push
sbb
xor
repz
or
pop
les
sub
adc
or
jo
arpl
mov
fmull
xor
and
add
pop
adc
insl
fmuls
jno
aam
pop
add
and
or
xchg
inc
jo
and
es
ret
xchg
rorb
shlb
imul
xchg
lods
adc
sub
add
dec
imul
in
enter
in
in
mov
jecxz
lods
test
pop
test
and
sub
inc
pop
mov
and
push
xor
push
test
xchg
movq
shrb
mov
pusha
movsb
inc
pop
add
shrb
inc
cwtl
mov
ret
cs
xor
cwtl
imul
out
std
and
jle
sub
mov
xlat
jge
xor
orb
test
out
and
push
adc
jle
mov
push
add
insb
je
cmp
add
lcall
add
add
add
nop
data16
mov
jbe
leave
fistpl
sub
call
mov
out
into
cmpsl
pop
mov
fldl
or
mov
add
cmpl
adc
stos
add
sub
add
stos
inc
sbb
xor
rorl
leave
sub
fildll
mov
sbb
mov
shrb
mov
dec
je
pushf
aas
or
pop
mov
push
jecxz
in
add
dec
add
push
push
mov
or
lods
dec
jb
adc
push
xor
jno
test
insb
add
lcall
push
cmp
pop
jo
mov
add
mov
inc
sahf
in
incb
xor
jp
pop
call
xor
pop
cmovne
push
sbb
sub
sbb
fdivs
and
cmp
add
xchg
mov
sbb
sbb
sahf
mov
mov
xchg
bound
jg
xchg
xor
mov
inc
or
push
mov
add
lock
add
insb
sub
loope
xor
add
push
mov
xor
pop
in
or
lcall
arpl
js
imul
fcoml
pop
in
xchg
bound
fwait
jno
addr16
dec
inc
sub
cltd
jne
or
jno
mov
loope
adc
pop
xchg
rclb
and
inc
shl
push
lods
and
mov
pop
cmp
jno
sti
push
cltd
and
daa
scas
out
mov
addr16
imul
ljmp
jp
movsl
sub
in
addr16
mov
push
dec
adc
pop
sbb
ds
cmpsb
inc
lods
sysexit
xor
lret
mov
call
pop
ret
lea
inc
outsb
and
mov
adc
inc
add
inc
or
cld
sbb
mov
iret
pop
add
subl
push
dec
clc
ja
sahf
inc
fldl
clc
enter
ja
enter
mov
cs
or
cwtl
pushf
rclb
mov
and
or
in
lods
adcb
cmpsl
fwait
or
push
stc
nop
add
adc
push
scas
andb
mov
and
pop
push
rcr
ret
cmpsl
xchg
jle
cmc
and
jmp
add
stc
lds
push
fnstsw
mov
in
inc
test
subb
flds
inc
dec
lods
jae
cmp
sbb
push
ffree
lahf
adcb
adc
aam
xlat
and
popl
mov
daa
xchg
rcll
inc
xchg
mov
lods
add
adc
or
movsl
rcrl
lahf
dec
inc
les
pop
lahf
mov
arpl
and
mov
or
test
lea
add
inc
mov
mov
dec
pop
push
scas
lea
popa
push
into
fldt
dec
mov
adc
jnp
adcb
mov
addps
out
inc
jmp
test
leave
push
lods
add
fstl
inc
sarl
xchg
jle
and
adc
outsb
mov
adc
add
test
pop
mov
push
out
mov
leave
ret
jp
outsl
dec
cmp
dec
inc
mov
cmp
mov
sub
cmp
or
pop
test
xor
add
xor
je
jo
movsb
pop
mov
sbb
lea
sub
arpl
or
mov
xor
dec
fcoms
ret
pop
addr16
jge
rol
jo
and
mov
add
les
jns
mov
insl
clc
push
xor
mov
dec
mov
dec
fidivrl
int3
inc
outsb
sti
jl
jmp
ret
ljmp
lea
jmp
adc
loope
inc
lods
mov
jecxz
and
or
call
ret
adc
ja
loopne
mov
sar
jmp
loop
arpl
and
inc
in
pushf
mov
pushf
jl
cmpl
lock
testb
sub
sub
dec
xor
add
jge
mov
push
jno
or
inc
in
sahf
adc
iret
push
mov
and
inc
cmp
aam
fwait
inc
aam
outsb
mov
xor
js
add
sbb
mov
dec
sub
xchg
sub
loopne
les
mov
adc
addr16
enter
lock
movsb
push
push
out
dec
aam
mov
dec
sub
lods
aad
inc
jl
movsb
rol
lods
push
sub
test
dec
fisttpll
insl
xor
push
pop
movsb
inc
mov
outsl
cmpl
push
mov
in
hlt
dec
mov
add
daa
mov
and
add
sub
das
push
push
add
subl
fstpt
test
dec
xor
jo
jmp
pop
push
sbb
jne
popf
clc
jno
sbb
dec
andl
rolb
xor
jne
or
mov
mov
fdivl
inc
dec
leave
mov
mov
stos
push
rorl
pusha
cmp
cld
out
pop
cmpsb
push
add
xor
test
mov
mov
movsl
mov
add
adc
mov
jne
mov
ss
cmp
inc
mov
jmp
in
jne
inc
lods
pop
pop
aad
inc
inc
clc
xor
stc
gs
inc
repnz
push
add
jmp
clc
push
andb
and
jmp
pop
ljmp
mov
and
add
xchg
push
dec
movl
ja
sti
pop
clc
cmp
mov
cld
xor
pushf
sub
sbb
mov
push
fs
and
sbb
icebp
in
push
mov
andl
dec
add
mov
aam
in
mov
xlat
add
les
dec
add
roll
inc
shrb
push
movsb
add
lret
add
imul
adc
addr16
imul
rolb
or
test
lcall
jb
push
push
pushf
pop
pop
xor
loopne
test
in
cmpsl
lods
cmpb
mov
xchg
dec
dec
aas
outsl
test
xchg
inc
lods
and
sbb
cmpsl
xorb
movsb
sbb
sub
iret
mov
inc
in
in
inc
dec
dec
fpatan
dec
xchg
mov
and
pop
sub
mov
push
daa
addr16
clc
mov
xchg
hlt
mov
inc
and
in
add
insl
enter
and
lock
das
jge
adc
cwtl
mov
add
push
sti
xor
inc
sbb
icebp
pop
and
imul
and
cwtl
push
sub
test
movsb
push
je
arpl
inc
cmp
sbb
sbbl
inc
loope
leave
or
popf
push
mov
insl
inc
mov
pop
mov
shll
frstor
mov
inc
inc
sbb
adc
sub
subb
idivb
mov
and
cwtl
and
addr16
sti
push
sub
orl
jb
loopne
and
and
and
or
or
xor
inc
inc
icebp
add
jne
sahf
adc
lret
cmp
and
push
pop
ret
mov
inc
insb
ret
cmpsb
push
pop
or
sub
insl
or
sub
pop
xor
loopne
push
shl
xor
add
inc
sbb
xlat
add
jge
sbb
push
pop
or
inc
rcrl
add
and
addr16
lahf
jl
je
cwtl
sub
mov
xchg
or
and
testb
jnp
inc
or
arpl
mov
bound
lea
push
jg
adcl
sbb
hlt
xlat
xor
sbb
add
jne
sub
call
clc
adc
subb
lds
add
std
mov
hlt
jns
clc
sbb
add
test
fisttpl
xchg
add
arpl
lds
dec
nop
lret
lcall
repnz
push
es
add
pop
test
xor
movsl
add
sub
gs
sarb
push
sbb
scas
mov
outsb
in
adc
add
lret
xor
xchg
jnp
daa
jne
scas
mov
adc
adc
sbb
xor
repz
xor
add
loopne
push
out
cmp
cwtl
lods
xchg
fincstp
lock
fstps
sbb
imul
cld
push
ds
and
sbb
sub
or
sub
mov
adc
jb
push
hlt
ss
dec
out
test
and
add
rcll
insb
push
jl
pusha
xor
flds
in
mov
js
xor
pop
jne
test
test
mov
shlb
cmp
or
pop
in
ss
push
xor
mov
or
or
ficoms
mov
mov
repz
je,pt
push
push
add
int3
jle
jbe
push
sbb
sbb
sti
mov
stc
in
jg
stos
push
lock
inc
mov
ss
cmp
mov
cmp
push
movsl
push
push
adc
pop
push
dec
mov
jle
scas
dec
sub
sub
adc
add
rcl
loopne
sbb
mov
shld
shll
hlt
loop
ss
add
or
xor
or
add
inc
test
sub
fadds
div
inc
cmp
jae
fs
je
inc
pusha
popa
adc
pusha
add
int3
test
ret
pusha
std
inc
sti
mov
sbbl
loope
add
pop
lret
sbb
sysret
je
hlt
xor
cmp
enter
adc
test
test
imul
sub
ret
pop
cld
in
fimull
xchg
imul
pop
mov
mov
inc
mov
mov
or
arpl
sbb
inc
or
icebp
sbb
in
dec
ja
push
sbb
jno
xor
sbb
insl
inc
fmuls
loope
les
lret
inc
cmp
inc
sbb
les
mov
ret
push
inc
dec
add
adc
add
cmp
es
adc
xor
int
adc
or
sub
push
inc
xchg
push
sbb
in
fisttpl
lahf
add
jmp
push
add
ljmp
and
mov
mov
xor
lock
push
mov
adc
or
cmp
mov
orb
push
pusha
and
push
and
sarb
add
push
sbb
adc
or
cmp
jne
jmp
mov
push
add
xlat
test
inc
xor
test
sub
stc
add
or
push
adc
imul
sbb
adcl
mov
cmp
jmp
add
fcompl
enter
pop
inc
rcrl
or
cmp
je
loop
mov
jno
lods
pop
or
xor
icebp
cwtl
test
mov
push
jge
ret
int3
imul
mov
inc
xor
cmp
jg
mov
mov
mov
xlat
or
imul
cmpsl
cmpsl
mov
data16
push
arpl
dec
lds
ja,pn
sysret
mov
data16
test
into
leave
adc
add
aad
and
insb
and
jae
mov
inc
xchg
or
pop
mov
in
ja
ss
xor
ds
sbb
jg
pop
inc
sub
adc
es
loopne
hlt
push
fildl
mov
flds
fsubr
add
je
adc
out
or
or
push
and
mov
adc
popa
push
fstpl
fldl
std
dec
loopne
les
adc
add
loope
adc
jle
sub
mov
or
xchg
fldl
push
and
or
aas
pushf
in
out
fnclex
std
ja
sbb
fsubrl
push
adc
push
sbb
mov
sbb
es
or
and
pop
fsub
pop
fsubrp
mov
jge
pop
or
mov
mov
loope
sbb
popl
sub
add
and
add
scas
sub
and
push
xchg
ss
js
imul
jge
xor
fildll
dec
je
add
and
je
push
fdivs
jbe
stos
int3
rorl
dec
pop
push
or
mov
pop
repnz
push
push
sahf
aam
mov
add
and
mov
jb
mov
jmp
lods
aaa
js
sbb
push
jmp
push
jmp
ds
lcall
dec
xor
iret
adcl
add
cmpsl
repnz
add
push
divl
lods
pop
les
lds
and
enter
push
nop
jns
jle
mov
sbb
lea
push
add
or
adc
mov
int3
jbe
dec
push
dec
xor
lods
cmp
push
je
or
aaa
add
xchg
push
mov
push
pop
cmp
xchg
loopnew
adc
aaa
repnz
mov
push
js
xchg
sub
or
sub
xor
xor
adc
sub
repnz
inc
push
je
int
pusha
fs
xchg
pop
push
lods
in
sahf
xchg
add
adc
push
jbe
into
xor
popf
pusha
fs
enter
addr16
ja
inc
fs
and
sbb
enter
ss
xchg
xor
adc
mov
and
xchg
and
sbb
mov
test
or
push
lods
cld
lods
or
pusha
das
cmp
sbb
pop
sti
pop
pop
in
fidivs
daa
add
jno
adc
stc
adc
in
adc
fcompl
and
aas
pop
pop
movzwl
jle
sbbb
sbb
sbb
aaa
repnz
sbb
aas
mov
dec
rorb
pusha
sbb
outsb
sub
xorb
nop
cmp
sbb
push
push
pop
test
sbb
jns
lds
inc
push
push
popa
out
sahf
out
adcl
fucomi
sti
xor
cmp
repz
dec
pop
insl
jl
cmp
repz
cmp
xlat
jecxz
decb
sahf
sbb
cmp
pop
imul
jns
mov
mov
or
mov
les
push
sbbb
sarb
mov
and
mov
das
js
scas
and
or
in
test
pinsrw
mov
rclb
roll
rclb
call
lea
mov
adc
push
roll
scas
push
push
cltd
dec
ja
pop
push
xchg
pop
cmovp
shrb
sti
xor
pop
popa
scas
ret
mov
mov
and
inc
pop
and
jno
sub
or
sub
push
mov
push
push
mov
inc
sbb
add
dec
and
push
enter
and
dec
adc
nop
push
pop
adcb
mov
into
daa
int3
jo
lock
mov
jb
adc
xchg
iret
pop
test
adc
or
sbb
mov
xor
daa
call
lds
add
and
adc
xor
mov
and
les
sub
add
dec
and
cs
adc
test
mov
in
repz
cli
mov
pop
popa
mov
hlt
mov
aad
jle
xchg
pop
adc
pop
adc
iret
xor
not
push
lret
daa
sub
in
jo
add
aaa
xchg
ja
xor
and
add
xchg
lret
call
add
and
sub
imul
pop
leave
sbb
xchg
outsl
in
in
xchg
fs
pop
sbb
pop
shl
push
mov
mov
inc
inc
jae
or
adc
and
adc
loop
out
lock
add
cmp
pop
leave
add
out
inc
push
or
jp
hlt
into
daa
mov
jnp
cmp
mov
add
adc
push
add
or
stc
add
enter
or
mov
and
cmp
loope
and
pop
mov
or
push
dec
scas
or
sub
sbb
inc
ret
and
push
in
jno
ss
xor
stc
lods
pop
ret
push
das
mov
cmc
push
push
cmp
push
movsl
subl
add
or
xor
xor
in
mov
sbb
add
jnp
mov
push
and
sbb
cmp
mov
push
hlt
mov
dec
xchg
sub
shl
mov
icebp
mov
inc
or
lock
arpl
xchg
rol
add
and
add
sub
lock
dec
stos
and
xor
push
mov
leave
shll
iret
adc
xchg
push
pop
sub
jns
and
push
in
sub
mov
mov
adc
cwtl
dec
xor
and
xchg
roll
xor
lock
add
fmuls
inc
jl
inc
xchg
or
jns
sbb
xchg
adc
or
outsb
pop
add
adc
or
dec
insl
dec
or
rcll
add
aam
mov
daa
popa
aad
or
in
mov
popa
xor
subb
push
inc
sub
test
or
xchg
cmpl
add
or
xchg
dec
xor
sbb
inc
mov
push
fstpl
sbb
rol
pop
mov
sbb
rorl
adc
enter
call
push
lcall
sbbb
dec
push
std
ljmp
adc
mov
in
jno
movsb
stos
in
loope
adc
adc
jae
push
fisttpl
or
ja
push
sbb
add
mov
dec
adc
or
mov
jne
add
adc
lods
mov
adc
aaa
rcrb
jns
cmp
mov
leave
xor
sbb
orl
xchg
pop
adc
or
xor
xor
mov
push
and
adc
cmp
addl
xchg
sub
inc
in
xor
push
inc
sahf
and
add
add
cltd
ret
add
ret
adc
mov
aad
add
sub
and
pop
cs
inc
jne
pop
jg
sub
sbb
cli
incl
or
or
cmp
pop
mov
aaa
or
jecxz
sbb
or
cmpl
cmp
inc
xor
inc
pop
sbb
mov
add
sbb
loope
or
add
adcl
ret
leave
sahf
mov
pop
mov
lret
jp
test
je
push
cli
or
inc
dec
mov
cmp
push
mov
cli
xor
je
int
clc
push
mov
cmp
cmp
or
inc
or
fcom
cmp
xor
insb
insl
mov
mov
push
adc
stc
pushf
add
add
inc
loope
push
cmpb
je
mov
in
outsl
mov
sub
or
cmp
xchg
or
adc
add
pop
adc
scas
mov
mov
push
mov
leave
inc
lahf
dec
sbb
mov
pop
adc
js
add
sub
xor
or
mov
sub
add
mov
pusha
sbb
arpl
mov
pop
mov
mov
scas
rcl
or
fs
imul
mov
in
xor
xor
cmp
xchg
popa
insb
test
xchg
jbe
inc
daa
loop
cmp
mov
fldl
nop
ret
mov
movsl
add
scas
or
ret
xchg
adc
pop
add
xor
lret
adc
add
dec
and
aaa
ret
insl
adc
push
jl
push
clc
xchg
aam
cli
into
push
and
xor
push
push
push
popf
sbb
arpl
dec
cmp
int3
sarb
inc
test
pop
mov
adc
or
aad
dec
cmpsb
push
pop
mov
push
jmp
jg
and
xlat
mov
cmovs
cmp
roll
adc
in
lret
xor
and
or
xchg
add
pop
add
sbb
add
sarb
ficoms
pinsrw
and
sub
xor
test
aas
add
ss
jns
gs
xchg
add
push
testl
pushf
shll
and
jmp
adc
cmc
rclb
or
repz
test
push
xorb
adc
stc
out
call
mov
lret
push
jmp
lret
cwtl
inc
mov
mov
cli
or
adc
inc
outsl
xor
mov
mov
xor
bnd
jg
mov
xor
sub
cmp
mov
jl
xor
jmp
cmp
jl
or
pop
imul
cmp
cmp
xchg
std
je
mov
mov
push
add
inc
jmp
movb
mov
adc
mov
cltd
pop
idiv
cli
repnz
mov
pop
test
push
push
lret
jg
inc
fmul
pop
xchg
xchg
push
pop
in
loop
sbb
push
popa
ret
jno
loopne
or
push
push
test
mov
fwait
sbb
ds
test
xor
jmp
orl
xchg
sbb
dec
inc
push
lock
xchg
jl
lock
hlt
incb
in
in
sbb
mov
and
iret
cmp
sub
in
mov
dec
fdivl
pop
push
add
mov
notb
loopne
sbb
push
dec
mov
push
rcl
xorb
scas
imull
xchg
jecxz
pop
dec
inc
mov
mov
dec
out
rolb
push
add
aaa
sub
mov
pop
or
add
loop
jo
or
lea
js
iret
clc
fadds
fildl
icebp
test
movsl
shrl
push
sub
cmpb
mov
jne
enter
test
cmp
mov
jmp
push
imul
loopne
push
pushf
mov
inc
enter
adc
adc
push
push
lods
add
insb
push
adc
sbb
cmp
mov
mov
andb
jbe
adc
outsb
push
in
lock
cmpl
mov
jo
int
mov
inc
repz
cmp
jns
xor
imul
xchg
dec
enter
ficoml
fs
jl
enter
pop
aaa
pop
xorb
push
data16
push
sbb
inc
dec
jnp
inc
ljmp
sbb
mov
sub
les
les
push
and
xor
movsb
mov
imul
sbb
fs
push
ja
pop
xor
pusha
shr
mov
and
push
lods
dec
inc
cs
pop
stos
mov
and
cmp
fnstcw
push
mov
das
es
addl
mov
jle
test
outsl
sub
ljmp
inc
lcall
cmp
mov
pusha
cwtl
dec
cmp
mov
es
js
xchg
dec
es
in
ss
pushf
leave
in
in
xchg
mov
xor
adc
in
mov
pop
xor
in
ja
and
dec
add
mov
or
sbb
sub
bound
xlat
adc
push
in
mov
test
sbb
mov
push
inc
es
inc
pop
push
adc
orb
loopne
jno,pt
cmpsl
push
mov
test
fldz
fwait
addr16
movsb
fcompl
jg
mov
and
scas
fildl
mov
pop
push
mov
lods
andl
xorb
int
and
jns
xor
gs
fisttpll
sbb
in
add
enter
mov
les
iret
ret
cmpb
adc
sub
push
aaa
dec
xor
pop
js
xchg
sub
inc
cltd
add
test
mov
cld
shlb
mov
push
rcl
jecxz
jae
lahf
adc
fcoms
xchg
ds
sub
jae
test
jno
fdivrl
push
sti
or
test
add
jo
sub
insl
inc
hlt
xor
mov
jle
cmc
mov
xchg
push
inc
aaa
nop
xchg
or
daa
mov
adc
cmc
adc
push
mov
pop
pushf
inc
or
push
outsb
push
hlt
loop
ret
mov
pop
or
movlps
or
and
movsl
jnp
pusha
jmp
sbb
mov
nop
sbb
add
push
loopne
lods
movsb
xor
sbb
cmpsb
rcrl
or
mov
xchg
pop
mov
fsubrs
sub
sbb
inc
ss
xchg
inc
inc
sub
xchg
pop
and
adc
sbbb
jb
movsb
xchg
xchg
lds
das
mov
xchg
inc
jae
shrb
cmpl
movsl
fisubrs
push
adc
xor
test
jl
fiaddl
je
xor
xor
jbe
dec
inc
dec
dec
push
and
push
sbb
pop
fisubrs
push
and
insb
or
or
popf
and
pop
mov
and
push
adc
inc
pop
mov
xchg
movsb
add
xorb
vmread
testl
hlt
cmp
sub
sub
lods
and
hlt
xchg
pop
inc
or
xor
cmp
cmp
push
cmp
jge
adc
iret
xor
mov
pop
ja
fmuls
insb
pushf
pop
xchg
cmp
xor
js
xchg
mov
pop
xlat
inc
push
push
leave
sbb
push
ret
rolb
lds
scas
mov
or
icebp
adc
inc
int3
les
loopne
in
mov
aam
jge
aaa
xor
push
xchg
int3
cld
pop
or
pop
cmp
outsb
xor
push
push
fiaddl
aam
mov
cld
jo
movb
pop
and
push
jl
ret
jl
mov
add
test
in
stos
into
or
cs
adc
cmp
jmp
cmpsb
xchg
testl
sahf
addr16
call
or
inc
xchg
mov
or
mov
push
xor
cmp
add
add
sub
out
add
pminub
cmp
adc
loopne
push
sbb
xchg
out
int3
jl
cli
or
adc
hlt
fidivl
mov
es
add
sbb
je
ds
outsb
clc
cmp
jno
ret
sub
mov
out
add
mov
enter
iret
push
mov
aam
pop
mov
xor
inc
stos
pop
push
xchg
push
fwait
inc
dec
fdivrl
add
lcall
js
mov
adc
fadds
out
xor
dec
adc
aam
jne
sub
pop
shr
adc
sbb
ljmp
in
mov
cmpsb
xor
push
jbe
popa
push
cmc
clc
push
cwtl
or
pop
jns
push
push
pushl
mov
out
dec
loope
xchg
mov
outsl
lea
push
roll
mov
xor
fwait
push
inc
xchg
fcompl
push
iret
pop
leave
inc
ret
popa
ljmp
pusha
xor
leave
add
in
add
dec
add
leave
mov
dec
inc
xor
xchg
inc
push
lret
repz
call
push
jb
dec
das
test
mov
shr
cmp
adc
inc
cmp
and
shr
or
les
adc
add
aas
jmp
nop
loopne
mov
add
jmp
rorl
scas
pop
or
mov
push
xor
push
mov
add
aam
jo
pop
mov
xchg
xor
add
lahf
add
popa
test
leave
mov
add
xor
jl
xchg
daa
mov
jne
ja
sub
jmp
pop
jl
popf
fidivs
int
test
rorb
jp
shrl
push
scas
fmull
cmp
pop
cmp
xlat
push
cmp
dec
cmp
mov
cmp
sub
xchg
sub
cmp
sbb
jns
cmp
pop
inc
test
push
dec
ds
test
sub
cmp
inc
shrb
or
or
or
add
sarb
pop
cmp
mov
inc
push
scas
jmp
xchg
addb
cmp
fnstsw
inc
sub
push
add
pop
filds
js
addb
lret
or
test
lock
or
fcmovnb
cld
aas
je
rorb
cld
in
cmp
jl
push
dec
push
add
dec
addl
movsl
lds
movsb
mov
mov
xchg
adc
or
pop
mov
pop
and
xor
adc
mov
fdivl
push
or
or
cltd
cmp
fwait
sarl
pop
mov
add
test
and
pop
jle
rorb
sbb
test
lods
or
mov
int3
cmpsb
out
add
add
loopne
add
in
add
mov
pop
add
loopne
sbb
add
jb
and
pop
dec
add
push
mov
pusha
lods
out
cld
mov
add
sahf
scas
dec
ja
cmp
not
xchg
nop
mov
les
sbb
jne
mov
inc
ds
fwait
or
and
rcrl
mov
push
mov
rolb
add
push
das
cmp
clc
inc
or
push
mov
or
or
dec
sub
or
cltd
sub
add
ret
sub
xor
in
outsl
inc
mov
mov
ret
div
scas
push
cltd
adc
in
adc
aam
adcb
bound
shrb
xor
fsubr
addr16
es
fs
pop
add
idivb
push
or
aam
inc
cmp
int3
jmp
mov
sti
dec
inc
adc
sub
and
std
in
rcl
or
mov
adcb
push
inc
pop
and
sub
lea
adc
es
sub
iret
adc
fimull
dec
push
push
cli
mov
push
or
loop
or
fs
daa
sarb
adc
ss
and
sti
out
dec
or
jge
or
mov
ds
xor
movsb
push
icebp
inc
popa
lret
push
pop
es
and
xchg
jbe
stos
insb
aam
pop
sbb
dec
rcll
rorb
or
add
or
push
das
mov
in
mov
ret
lret
sub
push
shrl
inc
mov
or
sub
push
js
sbb
fistpl
push
mov
cs
lret
adc
xchg
es
or
mov
fiadds
mov
push
add
nop
into
shr
cltd
jb
or
test
mov
dec
or
jg
push
adcb
aam
mov
rclb
cs
cmpl
jne
jp
ret
jecxz
rorl
movsb
scas
inc
jecxz
dec
jp
daa
cmpsb
mov
out
fildl
int3
xor
addr16
inc
cmp
jae
mov
xchg
push
call
mov
mov
stos
icebp
es
lret
mov
int
mov
jne
int
push
push
cli
ficomps
inc
fcoms
faddl
mov
add
mov
adc
pop
pop
outsl
sub
sti
sbb
xor
sbb
inc
or
pop
sbb
push
and
and
and
movsl
push
pop
dec
push
aam
add
leave
arpl
add
jno
push
lret
push
cmp
test
add
pushl
and
adc
push
or
push
mov
xor
mov
mov
notl
mov
pop
add
arpl
or
adc
xchg
push
dec
pop
repz
aam
dec
sub
inc
stos
add
mov
sub
lahf
push
es
cmp
push
dec
data16
xor
and
rcrl
pop
push
xchg
or
lds
pop
xor
jl
or
cmp
orb
xlat
in
add
cmp
daa
pushf
out
dec
jge
xchg
fs
dec
push
cmpl
xchg
cmp
jne
fldl
nop
mov
adc
adc
dec
add
addr16
adc
lea
or
add
call
sub
jno
rcl
pop
sub
in
and
test
popa
jp
frstor
imul
xchg
push
fldenv
jne
or
icebp
jno
ret
pop
cmp
mov
pop
cmp
sub
dec
mov
leave
xor
xor
pop
cmp
push
xorl
push
and
adc
push
push
shrl
mov
add
add
cmpsb
fimull
and
jl
insl
mov
dec
lret
in
and
ss
sbb
mov
or
stos
or
pop
or
fs
stos
into
inc
sub
movsl
or
and
cmc
or
pop
inc
fildl
test
push
mov
mov
out
mov
jmp
push
or
dec
mov
jno
mov
shlb
jge
cld
sbb
dec
and
add
imul
lock
mov
iret
or
loop
jne
movsbl
daa
insb
cmp
xchg
data16
mov
adc
outsb
outsb
lods
mov
xor
lods
cmp
mov
sub
fdivs
adc
cmp
pop
or
or
testb
bound
jge
mov
xor
pop
popa
mov
or
inc
mov
lea
inc
outsb
test
sub
lock
add
add
push
sbb
fndisi(8087
push
sub
and
in
xor
dec
fdivs
or
pop
mov
inc
xchg
repnz
test
and
inc
fisubrs
sbb
mov
xor
and
mov
sub
adc
cmp
les
movsb
jns
sbb
add
mov
xchg
fldl
xchg
enter
cmp
lods
imul
inc
mov
inc
fwait
xchg
add
fwait
jo
stos
out
push
push
loop
or
adc
xchg
push
dec
sbb
push
add
add
sub
loope
inc
sbb
mov
mov
add
sbb
es
sbb
fwait
pop
push
scas
inc
scas
push
inc
xchg
inc
xor
sbb
lret
xor
add
push
ljmp
add
mov
loope
push
pop
nop
mov
jl
xor
push
add
sahf
pop
sahf
arpl
rorb
push
add
jp
xor
pusha
out
or
je
inc
push
mov
jae
mov
push
add
or
inc
inc
cld
addl
shll
jnp
pop
in
sub
ja
pushf
xchg
push
lahf
and
inc
ss
add
sub
addl
push
dec
add
sub
push
add
xchg
and
jp
sbb
std
and
loopne
and
jle
mov
clc
inc
scas
push
jle
ja
sbb
xor
cmpsl
and
dec
adc
add
movl
test
lret
les
imul
and
insl
or
aam
aaa
pop
add
mov
mov
and
lret
push
insb
jns
add
aam
mov
out
jmp
lds
sub
lods
push
ret
mull
dec
ret
leave
jecxz
stc
jo
cmpsl
adc
mov
sbb
xchg
mov
sub
shlb
fwait
daa
ds
aam
mov
and
xor
stos
cld
sub
in
lods
pop
je
push
lods
gs
mov
repz
loopne
mov
xchg
je
push
adc
popa
inc
pop
xor
pusha
dec
sti
jl
shr
and
sub
push
pop
mov
scas
pop
scas
leave
pop
and
insb
jmp
pusha
xor
jecxz
rclb
sub
addl
or
and
inc
add
pop
imul
mov
mov
jnp
mov
adc
lds
arpl
icebp
sub
push
sub
adcb
cmpsl
test
icebp
mov
or
lock
cmp
push
mov
jmp
adcb
std
rcr
xor
pop
test
jae
lock
test
mov
test
int
inc
adc
daa
and
adcl
push
subl
js
fldcw
push
fs
adc
repnz
adc
jo
add
pushf
xor
jne
push
dec
js
mov
adc
or
mov
ds
xor
mov
lods
cld
stos
data16
pop
jbe
jae
or
or
cld
sub
mov
add
or
jae
testl
rcr
lock
jg
or
shrl
add
xchg
xchg
fdivl
shll
jnp
or
incl
add
or
mov
and
inc
and
or
sbb
gs
cmp
pop
or
sbb
sbb
movsb
rol
push
or
adc
xorl
xor
dec
rol
mov
out
dec
mov
pop
in
xchg
add
or
ds
cmp
inc
popa
call
inc
jnp
sarb
clc
iret
adc
loopne
addb
or
je
mov
mov
nop
mov
arpl
out
mov
add
mov
cmp
mov
insb
xchg
dec
pop
psubw
js
xchg
imul
xor
lahf
cmp
lea
fiadds
sub
inc
add
outsl
mov
jo
xchg
fs
stos
push
rclb
sbbb
sub
xor
xor
xor
mov
inc
cmp
int
cmpsl
xchg
cmp
mul
add
add
inc
fdivs
xchg
addb
inc
mov
sub
bound
cmpb
push
sub
mov
mov
das
mov
rcrb
and
xor
and
dec
xorb
lods
lods
and
js
add
stc
and
sub
enter
adc
jo
test
add
push
mov
into
test
cltd
std
and
jae
jp
add
push
add
in
mov
addl
or
sub
mov
jecxz
mov
fs
iret
pusha
mov
sub
pushf
adc
adc
inc
xchg
pmaxub
std
cs
or
mov
pop
or
inc
sbb
out
dec
sbbl
pop
call
invd
pop
les
pop
ret
pop
jne
pop
mov
sbb
pop
xor
xchg
mov
shlb
test
mov
jne
or
add
scas
add
arpl
fidivrs
pop
inc
repnz
add
flds
pop
jl
scas
mov
std
adc
add
mov
movsb
lods
pop
add
adc
test
push
loopne
mull
push
jns
les
cmp
or
rolb
adc
cmpl
lods
sti
leave
adc
mov
addr16
lea
idivl
fs
xchg
add
pop
out
fdivl
mov
or
jb
inc
lea
adc
add
xlat
cmp
cmpb
mov
rcrl
or
mov
les
lret
dec
dec
add
xchg
rcrb
je
cmp
rorb
cmp
and
xor
rolb
jmp
popa
fwait
mov
and
inc
sub
adc
mov
ss
sbb
push
push
or
bound
jnp
lea
clc
push
cmpsl
sbb
add
fs
movzbl
lea
popa
add
addl
iret
inc
dec
sbb
pop
add
inc
jmp
pushl
push
add
mov
or
xchg
xchg
and
push
mov
flds
arpl
test
cld
or
stc
push
pushf
je
mov
xor
nop
aam
stos
adc
dec
xor
rcr
mov
aas
xchg
ret
xchg
shrb
ret
das
mov
adc
cmp
gs
add
ret
sbb
xlat
adc
ror
jbe
dec
popf
inc
push
fists
sbbb
mov
je
fneni(8087
inc
lds
in
cmp
shll
and
sti
lds
sub
pop
loopne
or
lahf
mov
mov
or
inc
scas
mov
sub
pop
fiadds
aaa
leave
ljmp
lods
insl
fdivl
aaa
insb
dec
jb
sub
les
sub
push
nop
in
mov
dec
adc
or
xchg
jl
sbb
das
sbb
pop
cmpsb
rolb
int
adc
jge
push
or
xchg
jl
ljmp
mov
or
sub
ret
jns
add
cwtl
push
sbb
or
adc
push
adc
les
fstl
test
xor
mov
ficompl
jnp
into
sub
and
sbb
add
je
sub
sbb
mov
outsl
inc
les
jl
sbb
mov
out
push
push
inc
pusha
pop
xorb
aaa
pop
push
mov
popf
pop
cmp
jbe
push
jns
out
in
xchg
sbb
or
dec
std
add
imul
mov
mov
lods
and
repnz
add
mov
in
push
dec
adc
adc
adc
push
es
push
dec
add
add
movsl
int
inc
sbb
rolb
mov
testb
inc
dec
or
or
das
sub
outsb
mov
lods
xchg
leave
fidivs
inc
sub
fdivrl
mov
dec
push
test
or
in
in
jmp
fwait
dec
movsl
ljmp
push
lods
fdiv
xor
movsl
cmp
pop
stc
lret
nop
add
inc
add
ss
sti
cmp
cld
movntps
push
add
sub
cmp
push
pop
mov
shrb
fbstp
lock
int3
xlat
negb
or
cs
fistl
adc
int
push
dec
jnp
pop
testb
fcoml
test
mov
int3
push
and
mov
mov
lods
cmpsl
add
popl
imul
or
xchg
outsb
mov
xorl
adc
rcrb
and
inc
sti
dec
inc
pop
dec
sub
pop
jge
push
or
inc
adc
jne
push
ret
cwtl
push
and
or
mov
jl
aaa
adc
pop
and
mov
cmp
push
lahf
mov
inc
mov
nop
push
xor
aad
xor
lcall
loopne
or
leave
sbb
shll
xlat
lret
orl
mov
jmp
loope
arpl
aas
repnz
lea
adc
xor
mov
bound
and
not
fisubrl
mov
bound
dec
cli
add
adc
sbb
cmpsb
dec
sarb
dec
hlt
jne
mov
jne
jecxz
push
sbbb
inc
call
arpl
mov
or
cmp
loope
mov
jo
mov
js
and
movsl
and
inc
mov
jmp
inc
or
sbb
test
popf
imulb
in
lcall
incl
mov
mov
sub
jmp
les
xchg
dec
inc
push
and
add
adc
cmp
pop
add
nop
movsl
sub
xor
pop
adc
div
movsl
mov
inc
cltd
movsb
popf
xor
and
aam
push
int3
andl
pusha
imul
cmp
loopne
sahf
push
lret
dec
movb
lods
jge
test
add
jnp
lods
cmpsl
push
adc
cmc
and
xlat
mov
push
jge
popf
push
and
ret
fsubs
sbb
mov
fwait
sub
movsl
iret
dec
mov
jae
push
and
ficomps
add
test
aad
shlb
sub
fbld
je
pop
push
or
gs
sub
mov
xchg
pusha
jle
pop
pop
mov
mov
lock
push
inc
sub
add
lret
sbb
push
sub
push
push
out
or
sti
add
cmp
inc
inc
add
sbb
lds
div
jo
aas
dec
addl
ss
dec
sahf
mov
sbb
xor
lret
pop
dec
add
xchg
in
inc
inc
imul
mov
adc
sub
test
pop
loope
les
in
xor
dec
aad
mov
sub
das
mov
neg
pop
mov
rcrb
inc
mov
test
icebp
data16
out
push
mov
cmp
stos
mov
jae
mov
push
mov
xor
in
inc
add
cmp
mov
andb
pusha
rorb
mov
and
cmp
pusha
add
arpl
fidivrl
inc
dec
cmp
push
push
adc
nop
ret
loop
add
adc
dec
in
xor
mov
xchg
js
inc
pop
add
push
jmp
aam
mov
pop
adc
mov
cmp
xlat
mov
sbb
or
inc
loop
scas
push
hlt
xor
jmp
add
adc
push
sbb
jnp
addl
testl
cmp
xchg
push
xchg
dec
adc
pop
clc
jne
loopne
fs
pusha
sub
adc
xchg
jge
popf
lahf
fisttpll
and
inc
test
movsl
mov
mov
xchg
or
mov
jnp
sub
jge
inc
and
dec
popa
adc
enter
shll
call
pop
ss
add
jge
cmp
sbb
mov
ss
push
push
cmp
add
cltd
fiaddl
cmp
stos
and
test
dec
xor
push
push
push
scas
shlb
or
das
push
das
orb
mov
xlat
push
imul
cs
and
ds
pop
push
in
call
mov
fidivrl
dec
bound
mov
cmp
jae
add
pop
inc
scas
or
mov
inc
mov
or
add
xor
and
cmp
add
cmc
push
adc
mov
clc
mov
movsl
popf
push
or
mov
adcl
xor
rcrl
cmp
jmp
cmp
pop
xor
adc
shlb
or
add
push
inc
cmp
and
sbb
jp
mov
inc
nop
pop
movsl
adc
mov
gs
dec
xor
cwtl
cmp
movsl
dec
jb
popf
mov
cmp
adc
pop
or
lods
xor
enter
cmp
jbe
mov
shr
push
push
and
stos
test
mov
in
mov
lret
sub
dec
sti
rcr
pop
xchg
enter
andb
or
or
mov
insl
shl
push
rcl
mov
pop
dec
or
rcrl
loopne
push
movzwl
inc
mov
inc
lret
add
cmp
out
cmp
insb
mov
jp
adc
pop
cmp
inc
ljmp
xchg
lea
push
sahf
xchg
dec
jo
fisttpll
or
cmpsb
inc
sub
or
mov
mov
push
cmp
fmull
push
stc
adc
in
add
add
sbb
subl
pop
push
scas
inc
cmp
rolb
test
aas
xchg
jo
loop
hlt
or
cmp
sub
mov
orb
mov
cmpsb
jmp
jmp
push
inc
or
mov
push
repnz
das
and
add
add
rorl
mov
mov
rep
movsw
push
cld
xorb
movsb
mov
and
mov
adc
ljmp
out
rorb
test
movb
inc
lea
cmpb
cmp
xor
in
push
and
inc
jge
outsl
arpl
stos
cmp
movsbl
shr
xor
mov
fimull
and
add
jb
and
repnz
cld
je
push
push
scas
lret
and
sbb
cmp
lret
cmp
cmp
jnp
sbbl
sbbb
xor
push
fisubrl
pop
int
jge
inc
mov
cmp
scas
jle
or
push
arpl
insb
subl
notb
ljmp
or
inc
outsb
sarl
sbb
imul
xor
sbb
loop
inc
sbb
or
jo
xchg
jbe
ss
jg
sub
daa
and
or
mov
or
dec
addl
lea
ds
jae
addb
or
pop
xchg
testb
xor
bound
push
xchg
xchg
xchg
xchg
add
add
xchg
xchg
xchg
xchg
push
pop
or
int
int
or
jnp
or
jbe
jmp
or
int
int
por
jmp
adc
pop
adc
int
int
push
adc
dec
adc
dec
adc
int
int
aas
pop
jmp
sbb
xor
int
int
jmp
sbb
es
and
int
int
pop
pop
jmp
and
or
and
add
adc
fimull
push
and
xchg
mov
mov
xor
mov
ret
inc
push
dec
ret
cld
stc
jle
iret
repz
add
adc
and
cmp
repz
cmp
dec
repz
repz
push
pop
pop
fs
repz
imul
iret
repz
mov
iret
repz
mov
cmp
mov
add
jmp
mov
pop
or
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
in
push
sbb
push
pop
and
and
aas
or
cld
repz
sbb
jle
test
jb
add
sarl
fs
cmpl
out
dec
sti
ja
aas
cmp
or
idivl
mov
push
mov
push
pop
mov
js
xor
loop
pop
pop
pop
fdivs
sub
mov
push
popa
sbb
scas
fbstp
pop
movsb
xchg
shll
inc
shll
call
clc
sub
mov
mov
push
inc
cmp
jbe
fisubs
pop
inc
aad
inc
jp
aaa
jmp
pop
dec
or
or
push
orl
add
push
int
clc
jge
ret
or
cs
inc
add
bound
push
pop
xor
mov
aad
lock
jle
cwtl
arpl
or
mov
cmpb
test
ret
aaa
pop
push
dec
push
jo
sub
cmc
mov
aas
je
pop
push
test
jp
xor
fdivs
out
adc
dec
call
icebp
sbb
nop
or
add
stc
leave
adc
movsl
xor
and
xchg
and
test
pop
and
cmp
cli
inc
xchg
seto
es
push
dec
sahf
sbb
mov
fstp
or
mov
add
lret
or
add
test
ret
push
jmp
popl
xorb
pop
popa
rcll
mov
je
sub
push
pop
push
ret
cmp
mov
lods
sub
call
xchg
aaa
adc
or
out
mov
fistps
xchg
mov
jno
mov
push
xchg
dec
adc
dec
shlb
mov
push
fists
outsb
pop
fadd
loopne
cmp
and
inc
push
inc
popf
hlt
mov
notb
xor
adc
insb
mov
call
jne
or
add
movsb
xchg
inc
in
push
jne
shlb
rclb
loopne
mov
rolb
or
or
mov
mov
aam
xchg
pop
mov
pop
scas
in
or
out
add
sbb
ja
or
push
aaa
ljmp
xor
mov
inc
mov
es
loopne
sbb
test
ret
mov
push
pop
dec
xchg
push
pop
es
out
adc
inc
or
sub
jno
or
mov
cld
push
mov
je
lret
adc
xchg
sub
push
mov
lock
clc
adc
cmp
imul
enter
and
add
sub
or
jnp
adc
adc
jo
mov
jbe
pop
jne
push
adc
dec
mov
mov
jp
cmp
push
movsl
stos
mov
sbb
fists
mov
push
popl
fdiv
je
push
mov
add
pop
sbb
push
push
mov
add
lods
sub
inc
ss
and
mov
adc
addb
ljmp
icebp
or
aaa
mov
dec
mov
mov
adcl
adc
aad
mov
lret
push
inc
or
xchg
aaa
pop
mov
jnp
pop
repz
xchg
test
les
pop
jne
into
add
cmpsb
leave
loop
push
inc
and
fs
xchg
int3
inc
add
mov
xchg
push
sarb
dec
xchg
enter
sbb
lcall
ror
cwtl
daa
lods
enter
add
push
aad
shlb
and
inc
jecxz
sub
andl
loop
stos
lret
int
adc
pusha
xchg
je
jmp
push
add
popa
imul
xor
cmp
jne
mov
insb
jne
enter
arpl
push
adcb
jo
jbe
cmp
xchg
pop
push
rorl
inc
sub
and
std
and
xor
out
adc
add
bnd
nop
push
cmpsb
or
popf
jmp
loopne
cmp
andb
daa
clc
push
push
xlat
cmp
lock
nop
addr16
loopne
shlb
and
sahf
push
or
testl
enter
jns
orb
testl
notl
add
pushf
fcmovu
jp
cmp
rorb
bound
shrl
addb
fwait
xchg
pop
push
cltd
add
aad
or
pop
push
push
mov
sub
mov
mov
pop
mov
and
xor
ret
fadd
push
in
xor
and
scas
jmp
mov
sub
mov
popa
and
mov
test
dec
or
jmp
and
shlb
outsl
call
sbb
mov
insl
mov
in
adc
push
cmp
or
adc
jbe
test
sub
sub
mov
faddl
sub
mov
or
or
pop
add
xor
mov
dec
fcompl
loope
test
psrad
add
xor
pusha
movsl
iret
test
mov
mov
fiaddl
add
rcr
xchg
sub
in
add
push
into
aam
push
push
popf
fists
cmp
out
loope
les
inc
sbb
push
inc
dec
add
and
in
pop
push
repnz
outsb
xchg
sub
inc
sbb
or
add
mov
pop
xchg
je
in
sub
push
dec
mov
pop
call
pop
icebp
call
je
in
jmp
xchg
xorb
insb
xor
push
jb
cmp
add
sub
sahf
popa
cmp
push
or
inc
xlat
scas
push
dec
mov
mov
xchg
xor
nop
mov
xchg
mov
ret
jle
push
rcl
ja
repnz
or
cmp
jne
add
dec
incl
or
je
jl
movsl
xor
xchg
adc
fisubl
mov
and
data16
loop
dec
out
je
lret
addb
xchg
cli
sbb
push
in
or
add
sbb
lock
push
ljmp
data16
push
inc
lock
and
shlb
jbe
enter
cmp
xorb
xchg
cltd
jne
add
add
or
scas
pop
aam
push
add
adc
pop
testb
pop
movntps
add
sbb
test
push
add
inc
pop
nop
pop
inc
pop
jo
and
and
pop
xor
inc
or
and
jle
imul
enter
inc
mov
add
ret
ud2
cmpb
jp
mov
jge
rolb
fistps
xor
loope
idivl
xor
mov
pusha
or
xchg
test
cmp
sbb
lret
or
cmp
lock
or
and
push
cmp
outsl
xor
sbbb
sbb
mov
pop
pop
mov
jl
test
jg
mov
adc
in
sub
inc
lea
in
mov
xor
shl
inc
add
inc
pop
push
jo
fldl
jns
je
push
nop
frstor
aas
jo
test
dec
aaa
dec
mov
sbb
in
cwtl
loopne
pushf
nop
pop
aaa
mov
mov
cmp
push
jmp
mov
es
enter
xchg
int3
fistps
aam
call
adc
mov
or
or
psubb
adc
push
adc
popf
inc
adc
or
incl
sub
outsl
add
lea
push
mov
test
xor
cmp
ret
insl
and
xchg
popa
sub
je
jl
and
xor
or
jl
sub
int3
or
jl
mov
inc
inc
adcl
repnz
je
dec
in
jno
cmpl
push
sbbl
and
lock
sub
lods
fistpll
repnz
out
cmpsb
repnz
lods
sub
cmp
inc
and
jl
sti
cmp
jl
jmp
dec
loope
or
push
mov
out
sbb
mov
pushf
cmpl
sti
and
and
int3
xor
jge
inc
cltd
dec
cmpb
adc
jmp
rcrl
sbb
cmp
mov
in
rcl
or
push
nop
int3
test
xor
mov
xchg
insb
mov
mov
js
push
lock
jmp
test
add
xor
and
or
push
pushf
pop
pop
call
jne
xorl
leave
jp
and
into
hlt
push
xchg
or
pop
cmp
push
cli
jmp
shrb
pop
loop
pop
jp
mov
lock
jg
add
add
fistpl
sbb
mov
dec
mov
pop
outsl
dec
fidivrs
jle
mov
fs
sbb
pop
add
pop
shrb
mov
sub
into
xchg
lock
inc
dec
js
mov
loop
mov
cmp
je
cmp
jne
push
inc
pop
inc
and
add
xchg
push
xchg
cmpb
cmp
pushf
or
imul
cld
mov
rorb
or
out
daa
std
add
push
clc
mov
ljmp
or
mov
or
or
test
mov
sbb
mov
inc
in
add
adc
lock
sub
les
ret
dec
call
loop
outsb
mov
inc
push
jp
push
andl
cmp
jb
xchg
cmp
sub
jbe
fwait
mov
fiaddl
fisubl
bound
lods
jl
les
jge
ss
mov
or
stc
call
lock
addr16
pop
movsl
adc
xor
nop/reserved
jne
push
xlat
sbb
adc
sub
pop
mov
mov
cmp
inc
data16
inc
mov
mov
aam
inc
rorb
mov
pop
sub
sbb
test
pop
shlb
in
ja
push
push
imul
mov
or
lahf
jne
mov
sbb
mov
add
lods
xchg
clc
or
mov
pusha
mov
or
and
xchg
inc
int
or
add
adc
jmp
inc
lcall
mov
outsl
lods
adc
mov
inc
test
sub
adc
repz
cltd
lea
xor
aas
into
xor
mov
popf
push
or
rolb
mov
mov
psrlw
pop
aad
outsb
add
ljmp
adc
mov
ljmp
pop
mov
pop
sub
dec
mov
imul
fsub
or
sbb
fwait
lock
inc
and
and
repnz
add
sbbb
add
and
cmpsl
xor
mov
dec
notl
loopne
push
and
xor
sub
push
test
jo
cmp
leave
cli
jne
mov
in
pop
int3
movsb
push
in
dec
add
and
push
pop
lea
cmc
and
dec
addl
mov
and
out
call
cltd
inc
orl
jb,pt
pushf
mov
loopne
mov
hlt
mov
xchg
and
rolb
adc
push
test
mov
in
fildl
ds
aam
jae
insl
dec
mov
xchg
into
pop
lods
xor
inc
jle
or
pusha
or
or
xchg
lods
pop
push
popf
sbbb
xchg
pop
test
das
add
sbb
nop
icebp
div
popa
sbb
loope
cmp
mov
pop
rcr
inc
icebp
sbb
jg
add
jp
addr16
int
and
mov
jl
inc
pop
pop
jp
xchg
mov
rcrl
dec
sbb
mov
mov
xor
filds
add
mov
xlat
mov
icebp
pop
mov
mov
sbb
jle
ret
cltd
mov
dec
and
xchg
sub
test
hlt
sub
adcl
jmp
inc
mov
add
mov
sub
enter
inc
mov
xor
call
add
lock
cmp
clc
xor
xor
xor
inc
shll
inc
mov
xor
push
pop
and
sbb
push
cmp
lock
popf
pop
daa
sbb
push
leave
repz
sbb
pop
les
jns
bnd
adcl
push
adcl
daa
mov
inc
jecxz
pop
loope
adc
es
dec
aam
fsubrl
out
fstps
cmp
jnp
push
jb
xchg
shlb
jge
cmp
stos
test
mov
aas
pusha
push
insb
and
pop
mov
xchg
call
dec
js
dec
push
sbbb
int
lcall
pop
clc
faddl
fstl
fldz
fcomp
fnstsw
ja
cld
push
cmp
mov
jmp
mov
push
insb
std
inc
inc
pop
enter
or
rcrb
push
hlt
xor
rcrb
dec
add
jo
pop
sbb
xchg
lock
pop
push
nop
xchg
lock
xchg
mov
pop
enter
push
ss
test
test
add
sbb
ret
rclb
sub
scas
loopne
mov
add
cmp
mov
fistpl
lcall
mov
shlb
test
fwait
movsb
or
lea
mov
lret
xchg
xchg
lods
mov
andps
mov
es
push
pop
push
in
pop
pop
add
mov
inc
outsb
imul
outsl
jge
fldl
jl
jg
pop
cmp
in
lea
adc
inc
jo
push
mov
xor
repz
loop
fimuls
rol
les
fsubrl
inc
loop
int
shr
inc
data16
mov
popa
add
mov
lods
stos
mov
push
hlt
cmp
push
inc
cltd
pop
andl
in
outsb
xchg
sbb
pop
add
dec
jmp
add
out
dec
cmp
jp
rclb
inc
pop
pop
cmp
ljmp
cmpsl
insb
jmp
enter
dec
fcomps
push
jo
xchg
into
or
mov
push
sarb
xchg
lret
imul
sbb
lods
push
adc
daa
sbb
rcrb
mov
cli
inc
xchg
cmpl
sub
push
cld
xchg
add
popl
push
ret
in
das
popa
or
mov
sti
shlb
push
fisubrs
sub
add
inc
std
pop
ss
add
clc
add
insl
mov
jbe
add
mov
dec
mov
push
cmp
push
push
push
mov
pop
inc
ficomps
xlat
pop
stc
cmpsl
cmp
jb
push
or
out
inc
daa
dec
pop
jb
adc
or
add
mov
lock
add
adc
mov
fmuls
das
ret
add
or
sahf
mov
shl
mov
jnp
push
dec
mov
enter
sbb
mov
stos
jo
and
enter
icebp
test
dec
leave
pop
roll
lock
in
sub
jl
and
shlb
add
adc
and
mov
mov
sbb
jnp
xor
andb
add
or
dec
out
xor
jge
jno
addb
or
adc
and
lods
xor
out
nop
in
gs
notb
pop
cmp
es
cmp
push
cmp
test
pop
adc
adc
mov
rcll
or
adcl
adc
xchg
xor
sbb
jbe
jp
test
cwtl
pop
cltd
jp
push
ja
sarb
dec
les
cmp
les
je
xor
insb
push
jmp
pop
pop
adc
cmp
or
push
sub
sub
push
fbstp
or
jo
out
lods
or
mov
sub
mov
inc
and
dec
mov
push
enter
pushf
and
sbb
mov
push
or
dec
or
cmp
jb
xor
jg
and
xchg
push
popa
pop
jbe
fiaddl
aas
dec
push
mov
fisttps
imul
and
test
add
mov
mov
cmp
sbb
push
push
fwait
push
push
dec
stc
or
add
dec
push
and
mov
adc
cwtl
out
xchg
jo
test
movsb
jnp
lret
cld
jns
adc
mov
inc
enter
or
mov
cmpsl
jbe
pop
bound
add
sub
dec
fidivrs
mov
add
mov
pushf
xor
add
push
call
sbb
and
inc
scas
cmpsb
jg
dec
push
je
and
add
jb
push
push
push
subl
xor
mov
icebp
lret
push
mov
jecxz
and
xchg
jp
cmp
mov
add
sub
mov
outsl
nop
lahf
call
cwtl
add
pop
fnstenv
mov
mov
lock
addl
push
pop
cmp
mov
lock
or
subb
pop
mov
lock
in
push
imul
outsb
sbb
lret
xor
out
data16
dec
in
por
rep
and
cli
pop
repz
adcb
pop
pop
mov
sub
hlt
xor
xor
inc
sbb
inc
add
aam
lea
pop
fcomps
pop
sbb
test
add
xchg
lods
test
leave
aad
xchg
pop
add
es
adc
mov
or
test
xor
test
addr16
jne
sbb
pop
lret
or
push
cli
repnz
mov
sbb
les
or
fadds
imul
shr
je
test
cmc
sub
mov
push
mov
or
in
ret
gs
cmp
inc
cmpsb
or
les
xor
pop
mov
cmp
adc
sbb
and
in
add
jno
or
aam
sahf
daa
xchg
mov
add
nop
sbb
imul
push
sti
bound
push
arpl
es
sbb
mov
dec
cmp
iret
imul
popw
xor
mov
rorb
lock
jge
mov
cmp
dec
push
inc
sub
nop
and
out
jne
das
std
jmp
push
in
dec
sub
mov
gs
or
sub
xchg
sub
test
mov
dec
cmp
addr16
add
inc
cmpsb
jb
push
push
fbld
push
or
jl
jp
xchg
cmpsb
mov
pop
dec
xor
inc
loop
dec
sbb
mov
es
push
push
ds
shr
xor
mov
jns
pop
dec
and
push
adc
adc
or
lds
push
add
ljmp
mov
sbb
add
xchg
scas
push
sub
outsl
lcall
rolb
dec
xchg
inc
add
incb
gs
pop
sbbb
mov
inc
and
adc
adc
or
or
sub
xchg
jae
or
out
adc
cs
scas
dec
push
jno
test
jnp
push
dec
adc
iret
and
jp
mov
ret
fisttpll
aam
xchg
mov
adc
test
dec
aam
les
mov
adc
sbb
lcall
mov
mov
mov
mov
repnz
add
jg
add
fildll
add
shlb
xchg
aad
xor
frstor
je
nop
iret
pushf
dec
mov
addl
xchg
inc
shlb
je
and
add
test
push
je
or
adc
sbb
in
mov
add
or
wbinvd
orl
jecxz
das
loopne
add
dec
jecxz
mov
in
or
test
inc
jmp
dec
xor
fcoms
add
cld
dec
push
jno
jmp
loopne
faddl
test
sbb
adc
sub
xor
add
cmp
cmp
es
das
adc
stos
dec
jmp
cmp
pop
pop
mov
push
sub
xchg
and
add
push
mov
pop
push
mov
xor
sti
mov
shr
or
lret
push
add
pop
hlt
jo
out
dec
or
or
leave
mov
bound
clc
dec
mov
push
push
cmp
push
adc
push
sbb
jecxz
sbb
and
jno
rcr
mov
rcrl
push
or
mov
test
mov
fcoms
enter
xchg
mov
mov
inc
fs
push
pop
dec
ret
in
jmp
jmp
inc
or
je
out
xchg
and
push
pop
int3
mov
fs
pop
jo
lock
mov
sbb
pop
mov
or
mov
add
loop
mov
push
inc
out
fmuls
xor
nop
data16
test
int3
xor
xor
dec
cmp
pop
clc
lcall
add
mov
pop
inc
test
sub
dec
mov
mov
lods
icebp
jmp
or
in
cmp
sub
es
push
push
movsl
insl
pop
movsb
imul
mov
push
lcall
pop
pop
dec
add
out
clc
adc
push
lret
mov
call
push
or
movl
adc
sub
lods
adc
push
sub
dec
mov
push
mov
cwtl
outsl
cmpsl
and
rorb
and
mov
inc
dec
in
es
pop
movsl
cwtl
dec
jne
mov
mov
mov
mov
push
or
mov
push
scas
sbb
aas
adc
insb
ret
idivb
cmpsl
push
sub
add
mov
mov
outsb
pop
adcb
test
mov
test
cmp
inc
or
aam
js
rorl
dec
mov
sub
nop
call
loopne
lods
xchg
test
dec
push
push
mov
push
je
and
and
and
push
jne
dec
loopne
jp
sbb
es
sub
sarb
xor
add
and
cli
mov
clc
cli
pop
mov
in
mov
jmp
je
popf
adcl
lcall
cmp
je
mov
adc
lea
or
hlt
add
into
sub
push
jl
inc
add
mov
sub
loop
lea
push
fstl
scas
lods
mov
imul
mov
subl
sub
test
xchg
xor
add
movsb
addr16
mov
sub
inc
and
mov
ret
pusha
and
pop
test
sub
push
add
mov
or
sahf
inc
and
mov
mov
mov
cmc
fbstp
sbb
or
stos
mov
add
je
adc
dec
add
or
inc
mov
pop
and
fcmovnb
xor
cmp
xor
sbb
sub
cmp
pop
inc
dec
or
movsb
dec
cmp
lea
push
sub
jno
mov
dec
jecxz
test
jl
push
mov
lea
adc
pop
sbb
sti
jp
je
pop
out
hlt
rorb
shlb
enter
jne
fstpl
adc
sbb
aas
sarl
push
and
jne
inc
cltd
jge
mov
inc
add
mov
ss
jne
mov
clc
dec
add
mov
add
xchg
mov
enter
pushf
std
mov
adc
loope
repnz
mov
repnz
mov
js
test
cmp
test
mov
cli
push
addb
jl
mov
test
mov
jl
sbb
fxam
dec
test
hlt
add
gs
gs
fwait
icebp
or
shrb
insl
pop
pop
bound
pop
push
mov
jno
test
popa
aas
es
jbe
add
cltd
shl
mov
and
test
or
cmp
idivl
add
lea
xor
add
pushf
mov
addr16
loope
mov
add
xchg
inc
and
push
mov
mov
fwait
sti
sub
mov
mov
and
dec
mov
out
divl
mov
test
in
sub
pop
cmpb
cltd
xchg
es
xor
jbe
adc
insb
push
push
xor
sbb
add
and
loop
rorb
fsubs
jl
adc
cmp
dec
xchg
enter
mov
or
push
lods
mov
sbb
insb
aas
cmpsl
sbb
je
sub
push
cwtl
jnp
cmpsl
in
sub
dec
js
aam
ja
dec
imul
jno
add
pop
or
test
in
or
inc
push
rcrb
pop
mov
fldl
pop
cld
cld
or
rep
mov
sti
or
lcall
adc
sub
insb
inc
ljmpw
ja
jns
dec
or
push
add
testb
jl
push
stos
xchg
outsb
stos
ret
fisubrs
add
cmp
je
xor
inc
cmp
xor
inc
out
cmp
adc
push
mov
mov
mov
xor
mov
push
adc
cmpsl
insl
push
and
je
fcomps
std
inc
pop
cmp
jg
pop
clc
sbb
adc
loop
sbb
mov
loop
push
mov
or
adc
sub
adc
sbb
or
dec
mov
xchg
je
pop
rcrl
lods
or
int3
fsubs
ret
aaa
mov
orl
pop
pop
in
mov
enter
and
jl
push
jge
sub
pop
pop
mov
mov
sbb
or
cmp
jb
xor
test
inc
es
mov
mov
jb
js
ss
shrl
in
mov
movb
popa
dec
sbb
hlt
pop
dec
xor
pop
push
xchg
xorb
imul
ret
outsl
ret
rorb
xor
sbb
test
rcr
fdivs
test
and
push
push
mov
jb
cs
orl
fs
cmpsl
lea
dec
xchg
rcrb
push
or
out
ror
int
lods
and
jns
inc
jno
mov
and
and
sbb
test
jns
push
es
adc
inc
dec
repz
adc
jo
adc
xchg
rol
test
push
or
mov
clc
sahf
pushl
mov
dec
or
adc
jns
xor
jb
sub
call
loopne
add
ret
and
out
dec
cmp
rolb
add
lods
add
mov
adc
aad
dec
frstor
ja
mov
je
or
xor
les
inc
and
jnp
stc
inc
sbb
xor
push
jnp
push
jecxz
sub
dec
pop
pop
shl
xor
out
push
or
pusha
cmp
jno
pop
push
xchg
fs
sbb
int
rcll
sub
into
push
movsb
xor
lret
and
movsb
pop
jb
push
les
inc
sub
mov
sbb
ret
fistpll
or
repnz
js
nop
lcall
ret
jnp
push
or
imul
je
push
ficoms
in
sub
push
add
or
sbb
xor
pop
mov
fnstcw
push
or
cmp
scas
in
adc
int3
and
xor
xor
cmp
xor
sarl
inc
insl
orl
jl
sub
jp
pop
pop
hlt
xchg
ja
cmp
loop
mov
and
insl
mov
push
mov
inc
int
cmpsl
xchg
inc
cmp
sub
iret
inc
fucom
adcl
inc
push
scas
or
push
add
aad
ret
jg
mov
mov
jbe
cmp
or
push
add
cmpsl
sbb
insb
lea
jno
jns
cmpsl
mov
lahf
das
pop
adc
xor
pop
lods
or
dec
hlt
cmp
jge
mov
jbe
push
jg
pop
hlt
mov
inc
sarb
shl
xor
pop
ret
push
or
leave
std
std
pop
mov
push
cmp
jne
inc
inc
jmp
inc
mov
push
sub
pop
aas
mov
push
add
xor
lret
add
aam
cli
xor
add
xchg
repnz
sub
js
or
sub
sbb
aam
js
imul
stos
push
mov
cwtl
mov
mov
mov
add
dec
je
movsb
add
jecxz
and
or
and
dec
aaa
inc
push
pop
jae
pop
pop
lcall
push
sub
xor
cs
imul
or
outsb
shrb
sarl
mov
xchg
mov
lret
dec
int
cmp
movb
mov
push
popa
inc
mov
inc
jne
lret
rclb
pop
xchg
adcb
fmul
adc
filds
push
call
sbb
dec
xor
rolb
test
sub
add
insl
sbb
enter
fstp
xchg
ja
and
adc
addb
hlt
xor
insl
adc
lds
pusha
shl
sub
push
es
lods
sbb
or
je
or
inc
pusha
stos
jl
insb
dec
mov
outsl
stos
int
cmpsl
lods
ljmp
cs
pop
cs
adc
mov
mov
push
pop
and
stc
clc
aad
mov
push
cmc
push
mov
push
push
pop
or
outsl
shll
and
and
out
dec
out
or
adc
mov
mov
mov
fs
lahf
mov
lods
nop
inc
xlat
nop
or
or
mov
add
dec
addr16
or
test
add
mov
inc
dec
test
call
out
add
xor
sarl
sbb
cmp
xchg
xchg
xchg
jne
inc
mov
add
or
loope
mov
xchg
stc
inc
loope
cltd
in
cmp
es
xchg
inc
jl
mov
cmp
dec
insl
add
stos
adcl
jmp
mov
xchg
dec
or
sbb
push
inc
sbb
jp
ret
cmc
dec
popa
das
ret
pop
setne
sbb
les
into
xchg
mov
push
cmpsb
push
rorb
lock
push
loop
dec
mov
out
insb
xor
test
xchg
std
mov
dec
pop
cmp
movsl
mov
push
add
repnz
mov
sub
sbb
rol
or
in
pop
cmp
inc
fxch
mov
ret
sub
pop
sbb
cmp
push
sbb
dec
into
xchg
adc
pop
addl
xchg
push
and
shlb
je
jl
jns
pushf
lcall
data16
cmpl
sbb
test
addl
jle
cwtl
push
jmp
popf
and
lea
shr
pushf
sbb
add
cmc
shll
orl
pop
push
mov
mov
inc
cmp
and
cmp
mov
sub
add
mov
rorb
jg
ljmp
cli
shr
xor
push
enter
jb
mov
nop
push
not
cld
lea
test
jmp
test
sar
aas
cmpl
pop
shr
cmp
jbe
add
jmp
add
mov
jle
jmp
cmp
pop
and
mov
enter
out
adc
test
push
adcl
inc
in
das
inc
es
add
sarl
rclb
push
or
dec
sub
gs
cmp
xchg
xchg
imulb
xchg
push
push
jecxz
fisttpl
push
and
sahf
and
mov
inc
push
and
test
cmp
jp
stc
icebp
dec
dec
mov
add
mov
push
out
scas
pop
mov
jne
jecxz
or
inc
push
or
sbb
scas
fmull
sbb
add
xor
jns
jg
movb
xchg
nop
adc
add
les
sbb
rol
mov
icebp
push
pop
daa
push
cmp
or
mov
mov
inc
loopne
or
les
add
push
xchg
cmp
xchg
cli
pop
or
mov
push
pop
jae
dec
xchg
cmp
rorb
mov
push
mov
inc
inc
cmp
cltd
pushf
je
push
lods
or
lcall
mov
sbb
adc
ret
dec
sub
int3
and
pusha
scas
and
dec
xor
lret
or
sbb
jmp
ret
sar
dec
shlb
test
mov
push
add
js
add
insb
xor
push
jmp
inc
and
or
cmp
nop
testl
mov
gs
pushf
dec
cmp
adc
cmp
stos
jle
adc
add
inc
sub
pop
add
adc
inc
ret
mov
test
aaa
push
cmp
sbb
or
sbb
repnz
cld
mov
shrb
hlt
add
jmp
mov
sbb
mov
cmp
adcb
aam
or
xor
push
adc
outsl
inc
dec
ds
in
jle
fnstenv
push
and
dec
enter
sub
jl
xor
pop
cmp
jo
or
je
imul
fs
nop
inc
mov
cmp
cmp
dec
adc
adc
rclb
or
fsub
and
lret
push
in
inc
and
or
mov
movsb
adc
cmp
mov
movsb
rolb
sbb
or
dec
stos
push
mov
sbb
inc
add
jne
push
add
sbb
sbb
hlt
pop
adc
addr16
loope
cmp
jns
and
add
xor
mov
sbb
dec
sbb
inc
dec
and
jns
pushf
nop
xlat
xchg
add
lods
js
mov
xchg
into
cmp
push
push
inc
mov
add
arpl
inc
daa
loopne
pop
add
mov
adc
or
push
xor
movsb
sar
add
inc
push
jp
pop
cmp
sub
push
cmp
or
sbb
and
out
orl
push
movsb
mov
jb
test
fwait
lods
push
imul
sbb
cwtl
xchg
xchg
inc
andb
add
inc
lock
call
push
sub
mov
mull
xchg
pop
mov
pop
cltd
mov
sub
aaa
and
pop
sub
into
adc
xor
add
push
pop
cltd
cmp
test
mov
pop
in
xor
lods
dec
cs
mov
rolb
sub
imul
lods
mov
xchg
mov
sbb
pop
or
enter
ss
movsb
xor
int3
hlt
jge
add
adc
dec
lock
pop
inc
jne
cmp
mov
mov
les
pop
imul
lods
jbe
dec
add
mov
cmp
xor
and
lea
data16
jno
jge
xor
mov
dec
inc
outsb
sub
mov
add
pop
sbb
imul
lret
mov
in
lods
addr16
or
push
scas
rcrl
jns
nop
sub
loopne
cmpsl
cs
pop
add
loope
or
cmpsb
clc
push
jmp
push
push
or
in
push
jecxz
add
sti
sub
xchg
fucomi
lods
inc
js
xor
adc
add
push
adc
insl
jmp
flds
hlt
jbe
cmp
outsl
adc
cli
repz
cmp
xchg
xor
iret
mov
dec
call
inc
leave
dec
mov
lret
xor
push
popa
test
rclb
dec
lock
add
sahf
mov
add
leave
or
call
out
hlt
roll
sbb
or
lock
add
loope
xchg
lea
cmpsl
mov
add
sbb
out
push
xchg
stos
andl
leave
insb
push
or
sub
fndisi(8087
or
movsb
je
enter
jl
xchg
leave
cmp
or
in
sub
cmp
xor
or
mov
lcall
xchg
mov
pop
push
cmp
add
xchg
in
mov
repnz
sub
jnp
xchg
ret
push
fcoms
clc
add
inc
sub
js
addr16
mov
mov
ja
jl
clc
mov
push
or
and
push
cmp
adcl
mov
inc
jmp
inc
das
aaa
mov
rorb
dec
jecxz
or
sbb
sbb
in
push
inc
imul
je
cmpsb
rclb
fcomp
imul
mov
inc
cli
dec
in
out
sarb
lret
jne
push
cmpsb
faddl
cli
mov
push
lret
fstpl
ds
psubsb
lods
and
adc
cmp
or
add
dec
push
test
lahf
ja
sub
or
add
push
inc
nop
out
or
aam
lret
rclb
test
js
cmp
addl
mov
fwait
repnz
add
test
pop
sub
mov
sub
popf
ds
mov
and
add
sbbl
mov
or
xchg
adc
lahf
nop
pop
les
pop
sub
add
sub
cmp
daa
xchg
and
inc
mov
addr16
cmp
fdivrp
mov
sub
sub
inc
lea
push
sub
push
add
sub
adc
cmc
and
test
sbb
xchg
cmp
das
mov
ds
cmp
add
scas
xor
je
or
push
or
lods
scas
jno
jne
mov
jno
xor
jno
mov
pop
xor
in
pop
jne
mov
inc
sbb
stos
adc
xchg
xchg
test
inc
lea
cmp
add
jne
xor
push
mov
rcr
das
decl
inc
adc
sbb
mov
jl
adc
ret
inc
inc
adc
pop
cld
fidivs
pop
cmp
pop
and
dec
nop
xchg
mov
or
inc
add
or
add
shlb
popa
mov
stos
test
or
push
add
mov
xchg
jecxz
in
push
pop
gs
push
fisubs
mov
push
mov
mov
dec
ljmp
xor
scas
and
int3
rorl
mov
and
push
pop
mov
push
test
cmp
xor
ss
out
add
add
pop
mov
gs
dec
and
sub
ficomps
sahf
jmp
shll
add
mov
pop
mov
inc
inc
add
jnp
sbbb
push
gs
xchg
dec
adc
inc
or
push
adc
cltd
repnz
in
add
pop
lea
subl
loopne
js
xlat
xor
xchg
fcompl
push
movb
inc
lods
cmc
jmp
and
sub
add
sbb
inc
mov
loopne
xchg
pushf
imul
pop
pop
stos
in
lock
inc
or
cli
sbb
pop
cmp
cli
addr16
sub
push
hlt
pop
inc
cmp
jg
mov
xchg
nop
enter
sti
dec
adc
push
cmp
adc
mov
or
inc
adc
sub
into
fsubs
and
sbb
fwait
mov
bnd
in
dec
and
pop
pop
clc
out
and
adc
mov
cmpl
push
add
xchg
pop
push
xor
push
inc
push
imul
inc
loop
push
push
dec
inc
pop
es
xor
cmp
inc
push
sbb
inc
cmpsb
jbe
push
mov
mov
mov
lods
lea
push
sub
add
and
jno
jl
adc
and
push
in
orl
mov
cwtl
mov
xchg
mov
and
xchg
outsl
mov
adc
andl
inc
mov
push
pop
movsl
shr
add
and
jbe
mov
add
cltd
jmp
in
ja
lds
in
lds
and
sub
sbb
push
dec
sbb
push
mov
lret
rcrl
sahf
mov
mov
iret
cmp
cltd
addb
adc
push
dec
subb
push
repnz
push
stc
pusha
or
or
xchg
xchg
idiv
pop
test
xchg
xchg
mov
pop
xchg
pusha
adc
jle
je
bound
icebp
pop
add
push
pop
enter
std
call
add
add
shll
roll
or
cmp
adcb
idivl
call
dec
inc
push
sahf
test
jg
call
arpl
mov
xor
sbb
adc
and
aas
push
push
arpl
inc
shrb
push
adc
ret
mov
int
push
or
jno
sub
inc
int3
into
jp
cmp
sub
scas
push
lea
push
pop
es
xchg
push
mov
push
mov
push
xchg
add
pusha
xor
mov
xchg
in
pop
xchg
pop
cmpsl
jmp
inc
loopne
stc
sbb
out
add
xor
sub
add
sbb
cmc
fimull
inc
int
and
inc
dec
in
pop
mov
and
push
mov
imul
mov
mov
pop
xor
hlt
dec
xlat
fsubrs
ret
imul
jge
lods
pop
fisubs
sub
mov
mov
inc
les
adc
mov
or
popf
add
mov
aam
inc
mov
fcom
mov
cmp
or
or
cmp
pop
loopne
dec
mov
test
mov
cmp
test
jns
rcrl
dec
ljmp
or
sarb
push
in
xor
pusha
mov
rol
mov
ror
xor
shr
xor
es
pushl
rol
xor
shr
xor
add
add
add
mov
repz
iret
or
mov
push
or
and
xor
add
add
mov
pop
aam
sub
jge
add
in
push
adc
repnz
mov
fisubrs
iret
xlat
test
or
add
xor
and
and
xchg
push
or
xor
push
cmpsb
in
push
fs
test
push
sub
fmull
mov
push
or
xlat
ret
arpl
lods
sbb
rolb
testl
sub
inc
lcall
in
or
push
cmp
aam
call
push
xor
sub
int
out
ljmp
rol
out
add
cli
push
xor
pop
inc
lcall
xorb
sbb
in
shl
in
push
sub
bound
inc
push
push
inc
push
bound
pop
add
pusha
mov
pop
aaa
jno
or
fadd
cs
mov
xor
loopne
loopne
cmp
shl
call
xor
loopne
xor
pop
cmp
aam
in
cmp
pop
xor
cmp
sti
mov
push
insl
pop
xor
in
push
xor
and
and
inc
test
loopne
or
imul
in
xor
xor
push
adc
xor
loopne
mov
in
insb
fwait
inc
jo
ret
push
jo
ficoms
add
mov
dec
shr
xor
inc
pop
iret
jl
iret
push
loop
mov
add
jle
filds
cltd
xor
fadds
pop
jbe
call
imul
fisubl
add
push
add
xor
xlat
mov
xor
fdivrs
inc
fs
dec
roll
in
sarb
pop
cmpl
inc
mov
test
or
adc
adcb
aam
aaa
cmp
cmpsb
imul
xchg
inc
mov
add
mov
shr
rolb
inc
aaa
sub
or
jge
xor
mov
dec
inc
shll
loopne
and
in
inc
or
jo
add
push
movsb
add
and
sahf
dec
adc
dec
xor
and
push
dec
xor
and
add
push
xor
pop
dec
sbb
sub
cmp
dec
push
push
push
pop
or
sub
fs
pop
movsl
cmp
stos
mov
push
add
dec
in
push
xadd
or
or
xor
push
pop
xorb
pop
xor
dec
inc
pusha
pop
test
in
xchg
and
mov
or
and
sbb
adc
movsb
sahf
fs
subl
shlb
pop
sub
push
dec
dec
dec
icebp
stc
jp
inc
inc
stc
stc
mov
adc
mov
xchg
inc
mov
ret
dec
testb
shll
fcoml
sbb
lods
xor
jo
adc
lcall
and
sub
push
sti
lret
nop
and
adc
mov
add
sub
mov
out
add
inc
sbb
lret
jb
jecxz
adc
lea
mov
pop
cld
sub
movsb
jle
cmp
lea
pop
xor
cmp
cmp
decl
enter
sub
rolb
or
rol
and
mov
adc
int
inc
mov
mov
int3
inc
jae
mov
sub
outsl
xor
aas
lea
jmp
lea
push
sub
xchg
out
mov
add
pop
mov
mov
dec
jne
pop
shl
cs
daa
lock
test
jnp
jl
sub
mov
cmp
jbe
or
pop
icebp
sub
fs
std
testb
sub
jae
push
pop
inc
dec
mov
fadds
rep
or
xor
ljmp
scas
or
jg
in
dec
mov
outsl
pop
loopne
ror
mov
dec
adc
ljmp
add
mov
xor
jns
or
test
push
enter
jp
lds
xchg
daa
in
or
dec
sbb
ja
adc
inc
icebp
or
lea
in
cmp
xchg
push
mulb
mov
xchg
jecxz
sub
dec
arpl
loop
jb
mov
sub
mov
fistpl
pop
pop
pop
push
shlb
pop
push
or
push
add
add
pop
rcl
cmp
mov
loop
out
push
scas
or
mov
push
jo
imul
movsb
outsl
lock
sbb
aad
ja
or
or
xlat
les
ljmp
fcmovb
imull
and
adc
jnp
pop
mov
jb
ds
add
dec
add
sub
in
dec
insb
fs
pop
fucomip
push
lds
outsb
mov
leave
xchg
imul
dec
dec
adc
mov
push
and
sahf
dec
hlt
sbb
cli
testb
ficoml
ret
pusha
ljmp
xor
roll
sub
and
adc
addr16
sbb
mov
shrb
sbbb
adc
push
and
sub
or
ljmp
push
out
mov
test
sub
xorl
sub
out
ds
test
inc
cmp
or
test
stos
and
cmp
sub
cmp
insl
insb
lret
adc
test
xchg
fldt
and
add
adc
push
ja
xchg
dec
fcomps
add
jle
es
or
inc
cmp
mov
pop
push
pop
pusha
xor
movb
dec
adc
add
adcl
jns
push
push
dec
popa
fstps
cmp
mov
xor
dec
sbb
testl
mov
gs
inc
mov
pop
test
sbb
mov
xor
test
jmp
xor
mov
xchg
subl
lods
ret
rclb
cmc
cmpsb
mov
aad
xor
push
pop
push
dec
dec
xchg
leave
mov
repnz
aas
dec
ret
cmc
cld
and
sbb
add
mov
mov
mov
or
mov
movsb
and
test
pop
popa
mov
jle
mov
dec
mov
jmp
cmp
test
sbb
test
das
cmpsb
or
push
test
or
testb
xchg
cmp
lods
fstp
dec
mov
and
insb
loopne
cli
inc
sar
sbb
adc
jae
aad
or
add
inc
jmp
mov
divl
push
sar
and
dec
ret
rorl
lret
xor
cld
lods
mov
push
add
mov
xor
push
cmp
mov
push
call
mov
ljmp
pop
shlb
pop
movsl
pusha
adc
mov
mov
sub
adc
sub
fwait
dec
gs
adc
sub
push
sub
rcll
cmp
fiaddl
cmp
jbe
jns
push
sub
fs
out
xchg
mov
xchg
xor
scas
add
xchg
sub
in
rorb
sbb
or
cmp
leave
repz
lds
xor
adcb
and
push
testl
cmpl
pop
clc
repz
insb
mov
movsb
jmp
and
lret
xor
call
mov
mov
mov
dec
mov
push
xchg
push
fistl
les
loopne
fstpt
sbb
cmp
lcall
pop
mov
push
adc
push
fsubrl
in
adc
cmp
imul
or
mov
pop
add
or
pop
pusha
aaa
jne
rolb
push
pusha
test
mov
lea
sub
inc
or
pop
pop
mov
in
imul
and
sbb
lods
push
xchg
andb
fstp
in
mov
bound
jae
push
inc
mov
cmc
xchg
out
jb
jmp
mov
out
xor
cltd
or
push
push
outsb
test
pop
roll
xor
mov
xlat
push
cmpsb
adc
dec
jmp
sub
xor
in
pop
mov
movsl
xor
inc
add
and
xchg
mov
imulb
ljmp
cmp
inc
xlat
std
cs
out
pop
jne
ss
test
cmp
jne
gs
jbe
mov
push
dec
mov
mov
mov
and
ss
scas
mov
int3
test
and
andb
or
sbb
adc
lock
fiadds
and
and
cmpsl
lods
cli
sub
cmp
shlb
add
roll
or
das
sahf
push
mov
out
add
iret
cs
fdiv
sbb
jno
sbb
shlb
test
xor
jl
push
daa
xor
dec
mov
pushf
add
and
mov
pop
mov
inc
or
ret
in
pusha
mov
test
enter
sub
xchg
adc
inc
cmp
test
xchg
mov
adc
clc
in
sbb
subb
jp
push
xorb
inc
loopne
pop
in
hlt
sbb
not
adc
popa
insb
nop
and
imul
adcb
jo
mov
mov
jbe
xor
dec
sbbl
xchg
mov
scas
je
push
add
and
fdivl
sub
das
push
roll
push
jl
mov
cmp
mov
mov
and
pusha
sbb
cmp
cmp
pop
and
xor
inc
push
add
sub
push
mov
ret
mov
mov
cmp
pop
insb
daa
cmp
and
cmp
ja
jae
ss
jb
loopne
sub
push
test
loope
jg
or
adc
jle
sub
mov
mov
inc
mov
into
int
pop
or
pop
push
jmp
push
js
les
pop
dec
iret
fsubr
dec
cwtl
inc
pop
out
xchg
daa
dec
push
bound
fisubs
sub
cmp
xlat
notb
dec
xor
push
mov
icebp
ret
mov
mov
addr16
dec
xor
lret
movsl
sub
and
lods
outsl
cmp
shlb
pushf
dec
cmp
or
add
add
outsl
add
or
dec
sbb
mov
mov
insl
loopne
scas
clc
mov
mov
out
scas
push
pop
or
mov
jl
inc
cmp
mov
push
jmp
mov
sub
ja
es
nop
sub
addr16
sbb
pop
cwtl
xor
dec
mov
jne
pop
and
mov
add
jmp
addl
mov
enter
mov
or
sarb
xor
aaa
imul
push
dec
add
add
imul
sub
sbb
mov
cmp
je
pop
push
xlat
mov
cmp
hlt
inc
pop
dec
jl
pop
push
adc
mov
add
xor
cmp
jl
pop
and
add
dec
mov
ljmp
jle
shlb
adc
dec
push
xor
sbb
lock
movsl
mov
enter
push
js
insb
xchg
or
jle
push
in
or
or
add
xor
pop
ret
push
das
add
push
faddl
mov
push
jl
xchg
mov
lock
sbb
imul
test
add
cmp
cmp
or
add
pop
add
out
sbb
and
in
jecxz
test
push
fdiv
mov
sbb
mov
mov
lea
stos
mov
sbb
sub
add
and
or
jne
push
jle
inc
push
sbb
lds
scas
fistl
inc
xor
mov
hlt
add
jo
push
add
or
mov
call
inc
loope
and
add
mov
enter
shl
add
and
shlb
mov
loop
xor
mov
mov
fidivrl
sub
mov
inc
hlt
xor
xchg
inc
lock
jp
jge
adcb
test
subb
incl
pusha
movsl
inc
inc
xor
push
imul
add
sub
mov
lock
lds
pop
or
jno
test
js
loope
sub
insb
push
fnstsw
rorb
mov
pop
and
pop
scas
lock
lea
inc
push
aas
mov
das
adc
lret
lock
jmp
sub
jmp
inc
sub
cmp
mov
mov
inc
mov
sub
adc
test
pushf
mov
pop
lock
sbb
push
iret
sub
fdivs
jle
push
and
inc
dec
imul
stos
xlat
sbb
ja
sub
subb
xor
es
cmp
rcll
js
inc
pusha
pushf
push
mov
test
adc
hlt
add
mov
addl
or
inc
ficoml
lods
or
add
mov
dec
dec
in
pop
adcl
push
pop
add
mov
add
mov
or
nop
push
xlat
movsb
and
out
in
jns
push
aaa
or
xchg
xchg
or
sub
in
sbb
cmpsl
mov
ficoms
icebp
stos
or
dec
inc
mov
push
popa
mov
xchg
dec
xchg
mov
cld
test
cltd
loop
or
and
sub
popa
inc
push
xor
adc
scas
cmp
rcrb
xor
addr16
ret
inc
adc
inc
lret
inc
in
sub
int
imull
ss
cmpl
and
enter
insb
xchg
mov
jbe
jo
mov
jmp
push
js
hlt
imul
cmpsb
sub
cmp
imul
cmp
lahf
xchg
scas
add
adc
out
fs
mov
jge
sarl
cmp
in
int3
notb
push
dec
mov
push
ret
in
adcb
and
inc
mov
mov
pusha
cmp
or
hlt
loopne
cmp
push
jmp
mov
shrl
or
sbb
push
sbb
mov
xchg
mov
sub
ss
or
cmc
pop
testb
roll
dec
fiadds
clc
xchg
sub
dec
jecxz
leave
nop
imul
pop
movsb
std
sbb
mull
shrb
ret
mov
jbe
and
or
lock
pusha
rorb
mov
push
enter
sarl
jnp
sub
js
xor
outsl
and
clc
lea
xor
lods
cmc
gs
inc
mov
enter
sub
or
sbb
lock
push
adc
dec
lret
loopne
cmp
enter
adc
or
fisttpll
testb
sub
pop
dec
mov
sbb
and
mov
mov
stos
call
adc
out
repz
sub
or
fisubrs
jb
jmp
and
sub
pop
cltd
pop
inc
mov
mov
add
adc
push
lods
cmp
ja
ret
jp
into
dec
mov
xchg
and
mov
addr16
cs
out
add
xor
clc
fdivl
test
mov
xor
push
sbb
mov
cmp
mov
mov
jp
inc
xor
xchg
movsb
scas
mov
push
sbb
mov
mov
mov
ret
and
mov
rorb
push
pop
jp
xchg
mov
loopne
mov
loop
mov
icebp
cmpl
fisttpll
daa
loope
inc
add
pop
push
jl
outsb
add
outsl
jl
cmp
mov
pop
push
pop
pop
sub
sbb
push
ud2
sub
sub
pop
ret
adc
add
fcompl
xor
dec
mov
incb
xor
test
punpcklbw
cmc
push
clc
test
sub
stos
adc
mov
pop
cmpsl
les
loopne
jmp
fisttps
mov
enter
add
add
dec
cmp
sbb
nop
jle
inc
jmp
aas
jo
out
cmp
jle
cmp
sbb
and
stc
xchg
outsl
xor
and
cmpsb
outsb
cmp
in
mov
lods
pop
rorl
cmp
add
in
xor
dec
jo
push
in
adcl
ret
test
stos
jno
jmp
mov
or
pushf
add
or
sub
pop
scas
push
mov
or
jne
shrb
in
insb
xor
inc
push
or
mov
fmull
aam
mov
popf
mov
or
pop
xor
out
or
add
addl
or
push
add
pop
cmp
mov
push
pop
cli
pushf
stos
loope
xchg
sarb
rcrb
add
sbb
add
mov
in
sub
lahf
mov
lea
mov
insb
ljmp
test
adc
mov
std
push
je
fbstp
sbb
mov
sti
pop
adc
testb
je
cmp
mov
push
sarl
pop
push
cmp
sub
gs
xchg
jmp
sub
jge
testb
add
add
fisttpll
sub
rcr
popa
mov
adc
sti
and
movl
push
push
fxrstor
jl
inc
push
sbb
sti
push
pop
mov
push
add
sub
jbe
inc
loop
jae
dec
and
rorb
icebp
jmp
mov
cld
mov
dec
ret
adcl
in
push
dec
or
sti
or
jne
jg
add
nop
rolb
loop
hlt
add
js
out
mov
xchg
notb
cmp
insl
xchg
jo
and
add
mov
push
pop
je
jecxz
aas
movsl
roll
push
mov
add
or
leave
andb
mov
push
push
and
shlb
rolb
test
jo
fsubrs
push
add
push
push
sbb
insb
gs
push
xlat
or
pop
andb
cltd
mov
push
cmp
pop
mov
and
scas
rcrl
std
add
mov
inc
lock
or
testb
push
mov
mov
or
cld
push
mov
inc
fiaddl
pop
cmpb
aas
nop
sbb
leave
jmp
lea
push
sbb
ds
adc
cmp
or
inc
punpckldq
stos
or
lret
mov
jne
retw
pop
std
push
inc
mov
jmp
jge
andl
rorl
sqrtps
pop
xor
fs
or
and
mov
enter
xchg
inc
lock
out
std
add
ljmp
push
int
add
mov
popa
fstpt
push
daa
pop
lds
push
aas
cmp
pop
fdivs
cmp
scas
popa
je
jne
push
test
lds
ljmp
loope
sbb
cltd
dec
rolb
jne
dec
loopne
push
aaa
les
jae
fnsave
lock
sbb
test
shlb
add
sub
cmp
dec
and
xor
bndldx
sbb
pop
call
sub
loopne
xchg
inc
jo
sbb
mov
pop
sbb
pop
push
or
scas
sarb
movsb
int
and
jo
loope
cltd
push
and
and
pop
or
mov
fbld
mov
mov
inc
add
out
xlat
or
inc
pop
cs
add
dec
xchg
mov
jno
lcall
scas
loopne
xchg
add
dec
rorl
repnz
testl
ret
sub
dec
fists
adc
add
push
cltd
cmp
rorb
xchg
rcr
or
or
add
cltd
push
push
sbb
int3
mov
xchg
xor
dec
sub
pusha
es
push
js
cwtl
fwait
inc
pop
cmp
aam
mov
adc
in
clc
mov
inc
mov
cmp
insl
pop
or
loopne
ljmp
addl
loope
pop
adc
mov
mov
mov
test
or
sbb
lock
mov
pop
xchg
dec
adc
xor
sti
add
sbb
and
scas
jl
adc
cmp
inc
jle
and
repz
adc
add
cmp
adcl
xor
jns
push
ds
push
xchg
stos
test
fs
push
pusha
mov
subl
jo
xchg
and
in
or
push
jmp
push
jge
xor
and
sarb
pop
cmp
add
lods
pop
in
add
or
dec
pop
inc
repnz
adc
mov
rcrl
xchg
cmp
add
mov
dec
mov
pmulhuw
inc
andl
mov
and
mov
leave
mov
stos
cmp
cmp
and
and
xchg
rcrl
lea
stos
pop
idivl
or
testl
sub
popf
outsb
dec
pop
hlt
out
add
ja
add
sbb
ds
jae
fsubrs
out
adc
mov
sets
sub
mov
sub
xor
sti
xor
add
fdivp
push
pop
mov
out
lcall
imul
ret
ret
fs
ss
and
xlat
jnp
loopne
pop
mov
enter
fisttpl
test
inc
or
sbb
out
add
loopne
pop
mov
ss
hlt
dec
jnp
movsb
in
cmp
push
adc
es
pushf
or
push
inc
mov
inc
mov
shl
dec
mov
pop
push
mov
lods
aaa
mov
insl
arpl
xchg
xor
add
or
cmp
sbb
and
rolb
or
aad
enter
jo
lret
mov
repnz
inc
push
dec
movsb
jbe
cld
mov
nop
add
imul
add
inc
inc
inc
aam
or
cmp
das
push
out
pusha
popf
pop
lahf
and
shll
jp
outsb
aam
add
outsl
or
mov
ret
je
out
jp
adc
pop
rorb
dec
jo
add
cld
cmp
stc
mov
sbbl
ret
mov
cmpl
and
jne
fisubrs
add
movsb
inc
aad
insl
xorb
in
push
mov
and
push
jg
sub
sub
sub
adc
popa
insb
sbb
enter
mov
mov
sbb
cmp
pop
je
jmp
or
push
dec
inc
cmp
sub
out
pusha
xchg
or
jns
orb
xchg
inc
sbb
pop
call
cmp
jp
xchg
jmp
inc
fs
addl
push
xor
icebp
ficomps
icebp
and
mov
inc
cmp
or
fldl2e
mov
insb
and
push
aaa
and
pushf
es
outsb
cmp
push
mov
dec
inc
pop
pop
push
outsb
pop
sbb
pop
mov
popa
adcb
gs
es
xor
add
inc
test
pusha
add
and
inc
push
or
push
push
loope
and
psubsb
rcl
in
inc
test
mov
dec
cmp
sahf
or
icebp
add
dec
in
mov
jnp
jmp
sub
ljmp
jb
pop
push
pop
in
adc
pop
lahf
pushf
push
jge
jl
in
jl
repnz
push
push
or
adc
push
or
mov
lds
arpl
sub
xchg
add
lcall
sbb
test
pusha
pop
gs
mov
sub
arpl
lsl
cmp
cmp
jne
push
jno
sarb
xor
mov
ja
dec
loopne
inc
sbb
push
insb
dec
insb
test
inc
xor
push
loop
imul
int
mul
ss
shll
or
jle
push
sbbb
pop
dec
mov
push
movl
enter
int3
adc
jno
popa
and
rorl
or
or
mov
pop
inc
xor
pop
js
inc
repz
xor
dec
lret
sbb
pop
sub
and
jle
mov
cltd
sbb
xchg
popa
mov
stmxcsr
ljmp
or
mov
mov
and
fildl
mov
jg
dec
test
std
jmp
movq
movaps
push
clc
jns
insl
aaa
jae
xor
jle
xor
cli
rclb
stos
dec
mov
je
lods
shrl
xor
repz
or
jg
rcr
xor
fstl
jnp
mov
js
xchg
adc
aad
jnp
or
lcall
fisubrs
repnz
roll
js
sarl
pop
jo
fst
addsd
int
add
sbb
push
fiadds
dec
sbb
push
inc
rorl
and
jmp
pop
arpl
sub
std
mov
mov
mov
test
mov
add
xchg
adc
dec
fmuls
adc
aam
lret
nop
pop
xor
out
mov
icebp
iret
or
ret
jge
mov
jne
das
nop
push
mov
pop
or
dec
dec
xchg
add
add
mov
fildll
inc
cvtps2pd
and
les
outsb
adcb
daa
mov
sub
or
push
or
fisttps
jno
fwait
ret
idivl
ss
mov
negb
and
and
adcb
hlt
cs
je
mov
jle
mov
cmp
lock
xchg
pop
jmp
mov
mov
cmp
jne
push
or
mov
cmp
sti
mov
xchg
jns
ror
and
or
cwtl
pop
cmp
add
adc
and
pop
in
fmuls
push
sbb
dec
ret
arpl
les
jne
popf
mov
addb
hlt
add
push
ds
loop
dec
cmp
mov
xor
lock
sub
sbb
das
stc
add
jge
xchg
jmp
push
mov
xor
xor
add
push
xchg
inc
imul
sbb
aas
mov
mov
adc
mov
or
adc
jne
inc
push
stos
pop
int
sbb
inc
xor
lcall
add
add
dec
adc
dec
inc
inc
ds
pop
mov
push
adc
pop
test
inc
pusha
and
sbb
push
repnz
dec
xchg
mov
pusha
imul
inc
inc
cmp
cmp
mov
push
or
rolb
xchg
sbb
adc
pop
sahf
aaa
push
add
push
push
lret
in
loope
push
aam
adc
or
add
loopne
or
or
add
add
roll
stos
mov
xorl
imul
adc
cmp
es
das
mov
pop
int3
add
rcrb
enter
sbb
sub
add
ret
jnp
shl
shlb
dec
fcmovnu
sti
dec
leave
sbb
or
or
inc
pop
cmp
incb
add
mov
mov
shl
jmp
ret
cmp
aam
lret
jne
jge
mov
loope
xchg
jmp
jnp
push
ror
adc
inc
ret
push
mov
rolb
pop
and
push
add
jmp
fldcw
dec
cmp
pop
inc
pushw
and
xchg
and
inc
or
idivl
out
testb
sub
sbb
adc
or
out
addb
scas
mov
adc
aad
int3
and
mov
adc
jne
add
mov
test
inc
cltd
adc
or
hlt
mov
mov
unpckhps
push
insb
ja
cmp
stos
and
mov
repnz
cmp
in
inc
cmp
gs
rolb
shrb
incb
dec
into
sub
movb
sbb
neg
mov
dec
dec
cli
or
ret
add
add
xor
nop
mov
or
cld
jb
fstpt
push
cmp
add
jmp
mov
dec
mov
mov
dec
dec
mov
jne
les
inc
insb
repnz
ret
stos
test
adc
mov
or
or
add
cmp
arpl
inc
test
pop
arpl
mov
fsubrs
mov
cmp
jb
lea
cld
outsb
add
mov
faddl
pop
add
mov
jne
mov
push
mov
std
jne
es
jne
es
cmpsl
call
in
fs
js
test
jb
jmp
adc
lahf
out
mov
inc
adc
jmp
std
std
jmp
out
sahf
xor
cld
ret
pmaxub
mov
js
adc
adc
jnp
push
stos
xor
push
push
movb
sbb
and
stc
call
or
mov
sub
repz
cld
test
shll
mov
add
mov
push
or
stos
cmp
into
push
add
pop
inc
insl
cmp
rolb
aad
dec
std
test
push
or
dec
and
push
and
test
lcall
and
push
xor
rclb
dec
icebp
mov
pushf
clc
mov
sbb
add
mov
push
mov
lcall
mov
cmp
jg
add
mov
push
scas
add
jno
push
push
adc
in
dec
or
shlb
leave
push
repz
pop
stos
xchg
jmp
scas
jp
push
xchg
and
clc
pop
jle
push
push
pop
div
add
daa
jb
inc
pushf
sbb
nop
call
sub
iret
aad
lcall
pop
pop
lods
pop
sub
pop
pop
aam
insb
adc
push
mov
xchg
pop
icebp
lret
push
pop
push
jo
lds
gs
sbb
repz
in
add
ror
mov
sbb
jne
ds
mov
gs
test
adc
cwtl
mov
inc
sub
pop
sub
cmc
add
or
push
sub
mov
add
inc
leave
sbb
jp
jne
out
cmpsb
data16
jl
or
lods
push
mov
push
add
cwtl
xlat
pop
pop
in
dec
ja
xor
roll
test
xor
jg
mov
inc
jmp
cmp
jne
orl
jmp
adc
jne
sub
les
add
fistps
add
test
and
cmp
push
insl
dec
sbb
xor
dec
or
add
mov
orb
lods
repnz
adc
or
adc
popa
rcr
jl
add
add
lds
push
xchg
ljmp
adc
lret
or
jg
jecxz
test
sbb
lret
sub
jmp
test
fistpll
sub
cmp
ja,pn
xor
add
cmp
jae
xchg
popa
mov
jb
movsb
xor
sbb
sbb
bound
test
push
je
mov
dec
or
fadds
jg
cld
imul
add
inc
cmc
mov
nop
test
jne
test
jne
push
mov
or
or
sub
jbe
inc
mulb
cld
fnstenv
mov
push
add
add
into
mov
cmpsl
das
mov
sub
jmp
sbbl
inc
xor
jp
insl
push
push
xchg
cmp
push
or
loop
add
sbb
and
mov
or
push
sub
add
and
outsl
pusha
cmp
push
data16
inc
xor
jge
stos
mov
mov
inc
aas
xorb
pop
mov
jo
sub
test
jo
or
in
enter
or
add
cmc
mov
and
or
jge
adc
cmp
pop
xchg
cs
mov
adc
xor
decl
push
adc
adc
imul
sbb
test
test
jecxz
xor
in
add
clc
xor
out
test
sbb
jle
testb
mov
mov
mov
sbb
pop
or
push
add
pop
mov
jmp
dec
xchg
inc
inc
test
inc
es
scas
mov
adc
push
aas
push
add
push
jmp
scas
sbb
inc
push
inc
dec
scas
roll
cmpsl
inc
jno
leave
jl
lret
push
jl
xor
push
jo
add
sbb
inc
pop
adc
cwtl
lret
mov
push
cmp
test
xor
add
pop
aam
add
add
adcb
xchg
pop
sub
cmp
movsl
push
cmpsl
push
out
push
jle
shll
pop
movsl
inc
jae
fwait
adc
addb
pop
adc
int3
or
sbb
add
add
adc
fidivs
sub
fists
adc
ljmp
mov
push
add
loopne
mov
adc
stc
sub
in
push
adc
push
pop
dec
imul
fcoms
ret
cmp
jb
and
fisubs
and
and
dec
jb
and
or
dec
push
mov
orl
icebp
out
popa
cmp
jne
push
out
cmp
and
and
or
test
pop
add
bound
dec
jmp
pop
mov
pop
and
ret
sbb
cmp
mov
inc
adc
movsl
pop
add
xor
jb
xor
call
inc
sti
xchg
fidivrs
pop
adc
add
and
dec
pop
popa
sbbl
xchg
and
mov
mov
xchg
add
daa
xchg
inc
fadds
add
xor
and
mov
and
addb
mov
loop
bound
ja
mov
movb
sub
pop
ja
push
leave
sub
std
add
xorb
jmp
clc
push
push
push
mov
loope
fiadds
and
cli
rclb
sbb
or
stc
xlat
adc
mov
rorl
fidivl
loope
pop
lahf
sbb
dec
xor
jb
fldenv
jle
sub
push
mov
scas
adc
sub
xchg
add
ficomps
sbb
ret
scas
or
jg
cmp
fcos
shrb
aam
push
pop
test
les
xchg
aad
push
popf
and
pop
decl
xchg
ror
int3
push
insl
jo
pushf
orb
lock
xchg
lock
add
cmovp
repnz
inc
addb
jb
mov
shl
sbb
pop
mov
lods
pop
or
and
sub
mov
or
and
inc
cmpl
inc
outsb
mov
push
popa
pop
popa
pop
je
push
sub
or
outsb
sub
mov
popa
test
inc
mov
lret
fisubs
cmp
add
sbb
push
mov
mov
add
pop
jae
push
mov
sub
dec
fmuls
call
neg
fistpll
loopne
out
add
cmp
jb
xor
in
sbb
stos
addr16
dec
pushl
push
jp
and
xlat
test
sub
lcall
je
cmpsb
fmul
ret
frstor
lock
mov
clc
pop
hlt
mov
or
and
mov
insb
lods
sub
xor
loopne
test
xlat
sub
and
sbb
mov
out
sbb
pop
sbb
push
mov
pop
xchg
xchg
or
jmp
mov
mov
fstp
or
lret
xchg
dec
push
xchg
jo
shlb
pop
cwtl
or
ret
xchg
sub
add
and
fcomps
pop
sub
or
cmpsb
loope
andl
js
add
cmp
fisubrs
mov
cmp
adcl
mov
sbb
outsb
mov
push
push
jbe
test
add
xchg
sbb
cli
add
sbb
or
sbb
clc
ret
lea
test
sub
shlb
sbb
lock
dec
icebp
xor
mov
mov
and
dec
rolb
xchg
lret
into
or
out
scas
push
negb
int
test
adc
sub
xor
xchg
push
inc
xor
cmpsl
into
in
sub
inc
sarl
jne
and
or
xor
loopne
sahf
fcoml
jle
push
inc
cmp
inc
andb
notb
ret
fwait
mov
les
mov
adc
adcl
sbb
enter
and
in
dec
sbb
sbb
int
dec
mov
lret
push
pop
jle
pop
mov
cmp
je
movzbl
addl
xor
sub
xchg
sub
xor
pop
sbb
adc
imul
jo
pop
add
jb
cmp
add
daa
pusha
and
xor
add
and
dec
add
iret
sti
pop
fdivl
je
lcall
flds
add
sahf
xchg
mov
or
sbb
push
pop
jb
cmpb
or
or
pop
enter
or
sub
cmp
or
pop
xchg
inc
enter
loop
or
enter
or
or
in
jns
add
push
nop
addr16
push
ja
jae
inc
push
push
rsqrtps
jb
fimuls
pop
adc
fwait
sub
fdivs
adc
inc
or
mov
adc
add
lcall
adc
xchg
add
pop
adc
adc
xor
mov
push
iret
enter
push
push
pop
pop
movsl
mov
sbb
cmp
sbb
cmp
pop
enter
sbb
jb
jb
sbb
sbb
dec
in
mov
jb
sbb
add
jns
dec
jge
push
nop
out
sbb
addl
push
inc
push
pop
pop
mov
mov
ret
sub
cmp
jae
test
cmp
xchg
lcall
add
inc
and
lods
dec
inc
add
in
push
in
jno
in
imul
repnz
lea
repnz
cmpsl
repnz
cmp
xor
out
test
iret
out
push
fcoml
and
add
call
in
call
and
enter
inc
jmp
cmpb
jmp
in
jb
jmp
in
in
psubusb
in
cltd
mov
add
inc
in
sahf
out
out
sbb
sbb
jge
sbb
nop
out
test
lock
xchg
add
icebp
icebp
in
cmp
repnz
sahf
lret
add
std
repz
test
hlt
hlt
rorl
sahf
xchg
add
pusha
hlt
fwait
mov
jb
inc
jg
mulb
mov
pop
idivl
or
std
clc
clc
clc
and
sbbb
repnz
push
lock
cli
cli
inc
enter
sti
sbb
stos
jns
aaa
xchg
cld
cld
cld
je
cld
push
bsr
std
out
cmpsb
in
std
sbb
push
xchg
xor
cmp
pusha
ficompl
roll
fidivrl
shll
or
cmp
add
jecxz
jb
mov
inc
in
inc
scas
mov
icebp
inc
mov
stc
daa
xchg
sti
out
pusha
adcl
out
outsb
xchg
cmp
sbb
add
or
sub
sub
sbb
mov
in
xlat
in
cli
in
add
mov
cmpsb
jb
cli
out
out
out
cltd
inc
pop
and
push
lock
andb
sbb
jmp
pop
push
mov
cltd
sar
push
xchg
mov
dec
in
xlat
fstpl
div
jb
mov
xor
jns
xor
sbb
pop
repnz
clc
cmp
movsb
test
cmp
enter
cld
andl
inc
pusha
cli
mov
mov
dec
xchg
add
stc
and
call
scas
sub
sbb
testl
mov
scas
idivl
testl
sbb
out
in
xlat
enter
inc
testl
cmpsb
jb
imul
ljmp
negb
xchg
pop
leave
mov
xchg
negb
insb
out
out
mov
inc
negb
pop
and
and
add
xor
inc
add
repnz
mov
mov
xchg
cmc
jae
sub
cmc
testb
jne
div
jns
cltd
sbb
add
clc
scas
lret
add
clc
jecxz
stc
popa
lcall
cli
cli
xchg
inc
pop
pop
jno
hlt
pop
and
mov
hlt
cmp
add
sbb
or
push
data16
hlt
idivl
int3
jbe
push
jo
sti
lahf
jle
aam
pusha
adc
xor
loope
loope
jmp
scas
lret
add
loop
ret
xchg
pop
leave
scas
repz
test
imul
and
repz
repz
push
lcall
jmp
pop
cmc
mov
xchg
pop
pop
daa
xchg
repnz
lret
adc
sbb
inc
fcompl
and
xchg
pop
pop
daa
add
and
inc
in
rcrl
movsb
sbb
divb
scas
adc
xchg
icebp
jb
test
popa
leave
push
icebp
cmp
xchg
cmpsb
cmc
cmc
cmc
popa
leave
mov
add
jecxz
adc
jne
ret
rclb
lock
stc
cmp
lock
lock
lock
push
lock
test
ss
cmpsb
xchg
push
nop
les
out
push
sub
out
ret
in
jmp
in
cmovno
push
add
jb
cmp
add
stos
les
add
push
inc
and
and
adc
or
adc
or
xchg
daa
cmp
dec
add
sahf
and
add
add
sar
and
mov
dec
aas
inc
add
push
dec
inc
insl
dec
sarl
push
mov
iret
shrl
inc
fimuls
and
dec
mov
xchg
inc
sahf
inc
iret
repz
mov
xor
je
addb
mov
icebp
adc
cmpb
out
cld
adc
and
sub
add
push
add
jbe
dec
and
add
fimull
jle
rolb
sub
subl
cld
jb
test
mov
and
or
je
pushf
dec
push
es
xchg
adc
std
cld
inc
inc
cmpsb
and
push
dec
inc
adc
pop
add
push
rolb
add
repz
rol
inc
aas
js
add
add
add
clc
jge
push
faddl
push
pop
leave
pop
pop
es
or
loopne
dec
add
or
or
adc
or
inc
decl
shr
fdivs
fists
stos
insl
outsl
daa
je
mov
testb
andb
repz
sub
pop
lret
cmc
mov
xor
jl
lret
or
mov
and
jmp
dec
dec
sbb
add
clc
xchg
jne
push
mov
push
mov
out
sbbb
rcl
xor
fldcw
addb
mov
rorl
add
mov
or
jmp
or
dec
cltd
mov
rep
mov
dec
ljmp
pop
aam
je
or
loope,pn
imul
add
and
scas
push
sub
in
inc
int
shll
aas
jae
loopne
jmp
xlat
rol
dec
movsb
jno
xor
iret
dec
fdivrp
add
cwtl
push
insl
loope
rclb
dec
adc
cmp
int
add
nop
es
push
fadd
and
pop
push
jb
mov
adc
inc
push
lock
cmp
enter
fistl
sbb
jge
pop
sbb
sbb
inc
push
inc
and
test
fwait
cmpsb
test
or
add
xor
adc
sahf
or
jecxz
sbbl
fimull
test
add
outsl
addl
into
enter
lds
adc
sarl
cmp
mov
push
pop
and
inc
adc
lret
pop
and
jne
jmp
adc
inc
jmp
inc
add
sbb
fimull
inc
inc
data16
add
repz
sub
aaa
xor
shll
and
insb
mov
adc
push
or
aad
aad
or
mov
adc
adcb
ss
mov
or
cmp
lock
sbb
outsb
out
adc
push
out
jns
mov
dec
mov
fsubrl
and
mov
inc
mov
ja
inc
repnz
inc
daa
adc
add
and
mov
push
inc
dec
shrl
popf
mov
fsubs
jecxz
loopne
inc
add
bound
add
or
add
adc
ret
mov
loope
pop
jmp
stos
add
testb
out
adcb
fstpl
inc
cmpsl
inc
push
dec
mov
fimuls
pop
or
dec
jne
icebp
adc
lahf
pop
pop
inc
and
xchg
add
test
shlb
xor
nop
imul
or
cmp
jmp
notb
mov
roll
cmp
add
mov
cmp
and
pop
xor
cmovs
mov
aas
pusha
fadds
arpl
add
movsl
add
push
inc
adc
mov
insl
adc
enter
push
negl
xor
mov
push
sbb
pop
subb
add
add
mov
int3
lea
dec
add
sub
push
movl
or
add
out
or
push
add
push
lock
cmp
mov
mov
call
jns
in
lock
sarb
out
clc
clc
cld
mov
adc
lea
add
fld1
sahf
xlat
inc
and
cmp
dec
pop
and
push
jno
test
pusha
pop
sti
and
adc
push
lea
jl
cld
or
sub
leave
and
std
cld
out
rclb
popf
insl
neg
adc
jo
daa
stc
popa
mov
mov
les
nop
aam
xchg
clts
and
fiaddl
jl
mov
out
add
inc
test
out
push
add
nop
dec
dec
addr16
je
cmpsb
pop
add
ljmp
mov
or
push
test
pushf
movsb
mov
aaa
sbb
jns
out
sbb
adc
sahf
out
sahf
adc
or
or
xor
jns
add
rclb
fadds
call
outsl
dec
push
push
add
pop
sub
dec
daa
ja
cmp
cmpsl
mov
xor
push
lea
mov
mov
incl
inc
decl
jne,pn
pop
pop
cmp
jmp
push
cld
cld
mov
test
cmp
jbe
push
cltd
pop
idiv
sub
imulb
pusha
or
shr
add
fisubrl
mov
mov
xor
and
fwait
and
bnd
cmp
jae
dec
mov
call
jbe
dec
mov
push
dec
or
fists
scas
and
add
sub
adc
sbb
lods
pusha
fsubrl
pop
je
jg
pop
lds
mov
sbb
add
test
test
jo
sbb
dec
dec
je
sub
insb
test
lock
imul
pop
insb
adc
sub
sti
dec
repz
xor
pop
decb
push
lcall
push
sbb
pop
inc
cmp
das
sbb
test
lcall
and
mov
dec
adc
jl
ret
pop
push
push
pop
add
gs
imul
pop
push
test
ja
sbb
adc
fimull
dec
inc
sbb
aaa
mov
dec
mov
cmp
mov
jl
sti
cmp
jge
sbbb
push
push
cltd
pop
idiv
cwtl
int
insb
mov
inc
insl
xchg
cmc
jge
cmp
dec
adc
jmp
or
xchg
ss
mov
sahf
jle
pop
and
enter
or
and
adc
fs
jmp
jl
rclb
adc
pop
adc
xor
loopne
or
je
xchg
xchg
sbb
sbb
lock
inc
add
dec
cld
mov
sub
inc
pop
incb
inc
jns
xchg
mov
dec
adc
cmp
movsbl
pop
cmp
cmp
xchg
or
loopne
adc
inc
and
movsb
pop
xor
dec
icebp
xor
insb
pushf
push
ror
sub
push
cmp
test
push
jmp
jge
cltd
jecxz
jl
je
sbb
or
jl
fs
sti
int3
mov
ud0
adc
outsl
mov
test
int3
dec
jo
mov
ficomps
mov
inc
add
dec
jne
mov
or
out
shrb
inc
lretw
or
lcall
pop
popl
call
lods
mulb
cmp
push
popw
xchg
xchg
mov
arpl
inc
mov
test
jns
cmp
pop
rol
jl
pop
push
adc
lcall
xchg
inc
jmp
push
pushf
push
cs
test
adc
and
xor
lods
cmp
sbb
sub
push
sub
or
test
push
movsb
xchg
rcr
inc
jno
mov
sbb
adc
jge
loop
mov
les
push
cld
mov
xchg
push
adc
mov
loopne
adc
adc
or
sahf
out
push
out
call
push
out
mov
pushl
or
lcall
or
jg
adc
or
push
pop
mov
sahf
adc
fcoms
mov
dec
mov
and
push
add
sub
aam
add
adc
decl
inc
jg
or
xor
mov
gs
push
fdivrs
pop
mov
jg
inc
add
inc
inc
cmp
cmp
je
xchg
cmp
cmp
dec
sbb
adc
add
fidivrl
dec
hlt
sub
int
dec
popa
inc
test
xorl
dec
sbb
rcll
cmp
mov
incl
lcall
sbb
mov
push
inc
sbb
ret
add
inc
imul
sbb
sbb
mov
mov
push
lret
mov
or
sub
mov
sbb
or
xchg
rclb
jmp
inc
call
add
es
sub
push
bound
or
mov
xchg
fcmovnu
lock
ret
pushf
dec
jecxz
pop
test
cmp
mov
xor
mov
test
divl
int3
dec
imul
sbb
es
sub
push
pop
inc
int
adc
in
fs
or
sbb
cli
frstor
push
jns
lods
sbb
dec
movsb
jb
jns
mov
shl
je
sub
daa
iret
inc
sbb
mov
add
fildl
daa
dec
mov
into
adc
iret
add
shl
lea
popa
bound
shlb
jne
jmp
dec
or
mov
stc
sub
push
jmp
das
dec
jmp
hlt
cmp
push
xchg
mov
dec
mov
xor
loope
add
and
lds
loopne
leave
add
push
sub
pop
jns
call
or
mov
mov
mov
sbb
sahf
sbb
and
andl
lahf
jge
bound
and
aam
push
dec
push
shlb
inc
add
cmp
rorb
cwtl
mov
jae
and
inc
pop
nop
cmpb
das
cmp
inc
inc
outsl
std
add
jne
inc
inc
dec
pusha
xor
cmp
fbld
inc
cli
ja
or
dec
mov
jge
cltd
pop
add
lods
jmp
ficoms
clc
xor
xor
and
shl
out
jmp
ja
inc
jmp
aas
adc
xchg
dec
pop
pop
adc
mov
cmc
int3
and
lahf
jmp
pop
and
in
mov
jmp
jne
add
inc
and
in
add
and
mov
jmp
mov
ja
xor
adc
sub
add
sub
jge
loope
push
mov
xor
orl
lea
mov
ret
movsl
aaa
lret
xor
adc
inc
cltd
add
add
or
es
pop
add
sbb
outsb
mov
sbb
add
rol
insl
xor
fdivrl
cld
jmp
pop
arpl
xchg
push
jno
xchg
ss
fs
and
xchg
fs
mov
popf
pop
add
int
test
std
mov
or
mov
add
and
add
daa
adc
arpl
jp
or
push
ljmp
into
sub
in
xor
dec
roll
loopne
pminsw
dec
stc
push
push
mov
or
jbe
std
inc
gs
jge
and
xor
mov
add
cmpb
push
push
repz
fdivr
aas
dec
or
bound
xor
dec
rcrl
xchg
sbb
in
call
sbb
and
or
xor
push
std
sub
fwait
stos
into
gs
clc
stc
cmovg
xor
popf
lcall
stos
sub
or
sarb
add
cmp
movsb
ror
jecxz
aam
inc
icebp
sub
pushf
enter
outsb
scas
xchg
sbb
mov
jmp
mov
dec
ret
sbb
inc
dec
maskmovq
mull
xor
scas
or
data16
push
inc
and
adc
or
insb
jmp
push
and
gs
mov
adc
imul
test
mov
bound
rep
sbb
push
push
pushf
stc
dec
inc
sbb
cld
arpl
imul
cmpsb
loopne
adc
jecxz
idivl
inc
ja
mov
jmp
sub
xchg
adc
outsb
dec
imul
out
out
loopne
sarb
cmp
dec
orb
cmpb
push
adc
lods
adc
mov
sbb
ja
lods
enter
mov
sbb
mov
faddl
dec
adcb
mov
sub
push
dec
xchg
jle
adc
repnz
inc
cmpsl
dec
lcall
adc
dec
pop
lods
popf
jmp
mov
lcall
xchg
cmp
xchg
rcr
mov
in
cmp
push
pop
xor
shlb
inc
add
mov
fsubr
les
shll
mov
xchg
add
mov
ds
push
pusha
sbb
loopne
xchg
ret
sub
loope
rorl
incl
add
fs
xchg
sub
call
inc
es
add
test
ret
pop
mov
xchg
inc
in
fstl
mov
mov
dec
les
orl
mov
jne
scas
insb
push
lea
loopne
rcll
cmp
add
push
fucomi
adcl
mov
and
xor
xor
add
sbb
sbb
aad
arpl
je
push
stos
sub
add
or
push
lods
pop
jae
dec
or
pop
jo
inc
sarb
fisttpll
mov
js
jne
mov
mov
pop
sti
sbbb
add
dec
xchg
ret
arpl
es
test
subb
xlat
add
mov
das
or
call
mov
fdivrs
andl
cmp
sti
orb
xlat
jo
leave
ret
cmp
xchg
jne
cmpl
adc
loopne
adc
popf
jnp
sbb
nop
insb
call
cwtl
and
sbb
ficompl
adc
inc
daa
lcall
add
adc
dec
or
lock
mov
out
jbe
rclb
lods
lret
test
jecxz
and
sub
lods
in
sub
adc
lods
lods
xor
mov
mov
and
adc
dec
jo
pushf
popl
mov
cmp
pop
test
out
fimuls
cli
push
movl
cmp
sbb
xor
and
jmp
cmp
adc
fdivrl
orb
jmp
inc
cwtl
cmp
dec
add
or
test
push
mov
pusha
insl
adcl
movsb
je
je
pop
inc
xor
dec
imul
or
ret
mov
adc
dec
jmp
push
sbb
bound
rcll
lahf
push
jle
shl
or
call
add
pop
sub
mov
cmc
add
testl
daa
or
adc
add
lret
loopne
pop
inc
sbb
push
aaa
ret
sti
mov
insl
popa
add
sti
cmp
push
movb
popl
lea
nop
pusha
and
ja
sub
inc
mov
or
mov
sbb
int
xorl
cld
fidivrl
and
fstl
push
push
aaa
popa
mov
sub
push
cmp
push
push
fidivl
adc
imull
and
int
jecxz
add
push
orb
mov
mov
and
je
and
xchg
test
jp
roll
mov
rcrb
mov
mov
or
push
std
lahf
jbe
and
sbb
lret
add
jmp
cmp
mov
and
and
and
jmp
inc
add
je
inc
push
ret
in
jmp
adc
ds
in
je
clc
mov
mov
jo
jg
or
cmp
jecxz
ja
test
inc
push
and
pop
inc
call
cmp
pusha
outsb
sub
and
cmp
push
mov
inc
mov
ret
pop
insb
push
cld
mov
pop
iret
jmp
repnz
rcrl
sbb
cmp
dec
add
push
cmpsb
push
cmp
mov
pop
inc
negb
nop
fstpt
std
jne
loopne
fldt
push
js
cld
stos
enter
rcrl
les
inc
jg
xor
sub
push
fdiv
mov
adc
or
not
pop
cmp
push
js
test
mov
lret
orb
cmp
test
jb
or
push
jmp
sbb
bound
fsub
push
add
in
cld
ljmp
test
les
and
movsb
jb
push
call
movsl
mov
mov
mov
pop
jnp
aam
inc
pop
leave
inc
pusha
aad
mov
add
imul
push
lea
or
jmp
mov
jg
call
loopne
adcb
cmp
lcall
sub
jne
outsb
jle
pusha
inc
sarb
add
jb
mov
push
mov
mov
insl
andl
mov
call
xor
mov
inc
inc
inc
dec
jne
mov
inc
mov
fisttps
jl
sbb
divb
das
xor
xor
inc
push
mov
inc
dec
std
sahf
adc
jne
imulb
add
rorl
gs
scas
dec
adcb
test
xor
sbb
mov
rorl
adc
rolb
fwait
orl
adc
bound
add
dec
test
loop
push
addr16
clc
shll
mov
add
mov
pusha
gs
lods
cmp
inc
jns
push
xchg
loopne
pop
out
add
and
shll
inc
adc
and
push
cmp
jne
push
int3
cmp
add
ljmp
repnz
faddl
or
and
fs
mov
insb
mov
lock
add
loopne
or
pop
sub
mov
call
or
mov
cmp
add
loopne
gs
ss
push
out
arpl
adc
lahf
stos
sub
fwait
bound
dec
popa
arpl
inc
and
imul
jecxz
ljmp
cmpsb
cmpl
and
pop
movl
mov
mov
or
fcompl
mov
ja
push
add
dec
imul
sbb
cltd
pop
out
pushl
inc
mov
pushf
cltd
sub
iret
dec
notl
sbb
dec
mov
call
int3
xchg
pushf
subb
and
or
cwtl
sarb
push
inc
sarb
mov
cwtl
notb
or
repz
out
sub
adc
push
push
cmpl
add
fs
pop
pop
insb
xchg
lock
xchg
inc
add
movsb
rclb
sar
dec
or
sbb
inc
xor
mov
push
xchg
or
ja
ljmp
leave
add
pop
sub
jnp
mov
aaa
cmpl
out
or
push
pop
ret
jo
mov
or
rolb
push
jo
enter
int
fwait
sub
sbb
xor
je
xor
mov
push
jne
cmp
sbb
leave
rcrb
xchg
inc
in
sbb
icebp
pop
jbe
sbb
adc
loopne
es
inc
mov
dec
jle
orb
sub
mov
ds
popf
or
gs
shr
pusha
popa
data16
rcll
push
mov
lods
dec
cmp
mov
mov
frstor
push
cmp
sar
mov
add
add
daa
mov
outsb
test
outsb
jmp
pop
js
push
mov
add
ljmp
mov
cld
test
ror
cmp
out
call
mov
and
loopne
rclb
push
inc
or
or
jbe
mov
mov
sub
xchg
jp
jb
orb
pop
dec
scas
punpckldq
mov
adc
shlb
push
jp
fmul
cld
push
jo
jmp
addl
add
pop
or
push
cmpsl
in
cmpsb
insb
cld
mov
popf
push
bound
pop
sub
sbb
fnstcw
outsl
add
or
dec
push
push
xchg
adc
push
and
insl
addr16
ret
dec
sbb
dec
add
popf
mov
cmp
pop
push
dec
sbb
popf
pop
jns
pop
adc
mov
or
xor
push
inc
add
shlb
stc
fs
adc
inc
sbb
and
sub
data16
stc
mov
and
imul
add
nop
xor
inc
cmp
add
inc
dec
pop
cmp
xchg
and
jle
or
mov
sbb
decl
push
dec
push
cmc
imul
pop
std
mov
adc
test
cwtl
mov
add
push
addl
add
pop
in
push
scas
roll
sbb
xchg
pushf
cmpl
ljmp
adc
addr16
and
daa
cmp
mov
jno
ja
fiadds
xchg
ljmp
mov
fmull
jecxz
xchg
mov
jecxz
stos
mov
push
inc
mov
in
cwtl
mov
adc
fnstenv
cmp
and
push
xchg
mov
or
add
enter
das
rol
cltd
subb
jp
cmp
inc
sub
sub
das
mov
push
inc
lock
ja
and
into
sbb
mov
cmpsl
pop
lret
sub
loopne
pop
pop
pop
fcoml
sarb
std
pop
mov
clc
or
cld
jns
jns
les
popl
gs
pop
add
mov
mov
dec
cld
or
loopne
adc
sub
aam
test
pop
xchg
mov
cmp
add
sbb
mov
inc
inc
or
dec
test
mov
dec
ret
daa
pop
popa
dec
ret
in
js
jmp
push
add
shrb
mov
push
mov
add
and
addl
inc
and
mov
or
mov
jae
call
popa
das
js
pop
stos
pushf
inc
dec
aam
call
out
push
sahf
push
push
dec
jle
leave
or
pop
aam
aam
mov
lret
or
push
mov
mov
cwtl
jno
mov
pop
add
pop
fsts
dec
jl
add
in
push
clc
or
jb
push
inc
pop
jo
and
je
pop
nop
test
test
enter
sarb
jo
in
jo
mov
sahf
out
and
sub
xor
inc
dec
add
pop
jl
fwait
popa
inc
orb
push
cwtl
lods
xorb
inc
dec
pop
xchg
inc
dec
adc
mov
test
cmp
adc
ss
cs
push
xchg
lock
or
inc
jmp
gs
or
add
mov
and
pusha
cld
cli
dec
mov
xor
and
lret
jne
jns,pn
dec
adc
rorl
jge
inc
mov
imul
mov
mov
sbb
add
stc
and
xor
pop
lret
loop
rcl
and
or
icebp
out
and
mov
sbb
or
cli
cmp
inc
xor
clc
negl
mov
aas
add
in
adc
mov
hlt
mov
xchg
fsubr
dec
and
loop
daa
fwait
xor
andl
daa
jo
enter
pop
fdivr
or
inc
or
je
jmp
cmp
dec
dec
adc
inc
out
jae
sbb
pop
jle
ljmp
jno
daa
push
lret
pop
jge
jmp
or
or
shlb
movl
add
jmp
adc
ucomiss
and
int3
lock
jbe
or
adc
je
xor
push
sbb
cmp
or
push
mov
cmc
inc
and
in
dec
test
out
ret
addb
cwtl
outsl
sbb
and
push
lock
xchg
aam
mov
push
jns
inc
sbb
xor
test
ja
enter
sub
pop
sub
addr16
adc
push
aaa
sbb
mov
fmuls
add
and
out
sbb
and
lods
movsl
pusha
in
adc
push
faddl
or
adc
add
ljmp
daa
xchg
xor
adc
les
mov
inc
test
inc
sbb
pop
loopne
and
test
adc
adc
dec
js
xor
test
mov
xchg
addr16
xchg
cmpsb
lea
inc
sub
jg
sbb
mov
push
ss
add
push
push
cmc
clc
ficompl
pop
cmp
jne
int
shl
imul
inc
mov
gs
or
lock
xor
insl
hlt
sbb
dec
icebp
repnz
and
sbb
rol
and
cmp
sub
cmp
clc
inc
cwtl
inc
mov
mov
inc
or
test
and
push
dec
or
arpl
dec
movsb
lock
push
aaa
jecxz
mov
push
aam
clc
mov
inc
pop
xchg
imul
sbb
push
mov
adc
jbe
pop
pop
add
inc
loopne
shl
sub
sub
std
in
cmpsl
adc
ret
sub
fisttps
pop
divl
in
sbb
add
loop
ds
mov
dec
xchg
cmp
sbb
shrl
dec
ljmp
jns
sub
sbb
test
adcb
pop
dec
mov
loopne
cli
add
add
inc
pusha
jp
mov
xor
je
sbb
repz
xor
out
add
push
sub
push
push
push
lock
sbb
or
ret
cmovs
or
push
fwait
push
test
mov
mov
je
decl
and
add
orl
inc
and
mov
push
pop
mov
call
sbb
orb
push
jg
sbb
mov
mov
xor
sti
sub
or
mov
mov
sti
call
ret
cmp
mov
xor
mov
add
mov
mov
addr16
sbb
dec
imul
leave
test
in
or
call
adc
push
or
mov
and
std
mov
lea
arpl
jle
ficompl
jl
dec
icebp
mov
outsb
outsl
and
test
push
clc
add
mov
movsb
sbb
movsl
sbb
xchg
inc
xor
mov
mov
xor
clc
fsubs
mov
push
icebp
lret
decb
add
ljmp
je
sbb
pushf
pop
xchg
dec
scas
or
add
xor
sbb
sub
adcb
dec
jnp
or
aam
jnp
enter
add
sub
mov
imul
lret
or
imul
cmpsl
cmp
nop
es
out
sbb
mov
hlt
stc
int3
int
push
cwtl
je
or
inc
insb
je
inc
xorb
lock
test
outsb
loope
insb
cmp
sub
adc
sbb
pop
div
mov
pop
or
xor
mov
movb
dec
xor
in
xchg
xor
fs
int
cmp
or
imul
mov
cmp
dec
loope
xlat
je
push
cmp
loopne
cmp
push
jbe
in
sarb
adc
out
clc
lcall
je
cmp
adc
mov
or
add
in
ret
mov
dec
roll
hlt
fdivr
je
pop
sbbl
and
mov
inc
push
jae
sbb
testl
jl
aaa
jne
das
ret
loope
ja
ret
adcl
pop
add
dec
and
in
dec
js
int3
or
sbb
pop
sbb
imulb
es
sub
rclb
dec
add
mov
aad
adc
inc
inc
push
insl
cmp
sbb
xor
hlt
xor
negl
jg
push
dec
jge
notb
lret
push
push
mov
or
int3
es
xchg
jae
pushf
je
mov
push
mov
aam
jg
movb
xchg
movsl
iret
adc
add
lds
adc
jge
lcall
mov
inc
mov
dec
mov
pop
sbb
xorb
or
or
lea
cs
in
push
sub
loope
sbb
jmp
outsb
jo
add
or
gs
mov
mov
pop
push
pop
stc
cmp
je
test
aaa
jne
cmp
push
enter
pusha
add
xor
xor
ret
mov
test
mov
add
shrb
movsb
and
or
cltd
and
or
insl
inc
insb
jo
push
stos
add
push
add
scas
aaa
or
jg
jne
mov
jne
mov
ja
fbld
jmp
cmp
jle
insl
cmpl
incl
cmp
adc
mov
xor
mov
adc
adc
out
call
xchg
mov
sti
mov
in
mov
adc
dec
sub
lea
bound
out
and
mov
subb
sbb
movsl
push
dec
sub
pop
test
scas
popf
or
sbb
dec
subb
sub
inc
orl
jge
push
outsb
mov
and
out
addr16
jp
adc
decb
jae
test
aas
test
rclb
jecxz
js
pop
addr16
xchg
xchg
enter
push
scas
call
jecxz
jne
int3
dec
aad
push
sbb
inc
or
cli
mov
outsb
cmpsb
add
or
je
cltd
inc
outsl
pop
adc
sbb
or
jl
jae
call
rolb
jecxz
lods
das
outsb
in
pop
fimull
pop
sbb
ds
aas
jno
mov
or
jne
pop
ja
push
and
lea
adc
adc
inc
je
mov
imul
cltd
push
push
sarl
cmp
push
nop
xchg
cmpsl
clc
bswap
clc
sahf
add
mov
dec
jmp
pop
xchg
icebp
sbbb
movb
stos
or
les
into
cmp
xchg
test
mov
movb
inc
jmp
cmovl
or
jmp
dec
mov
pop
push
inc
inc
sbb
sub
and
adcl
gs
data16
sub
aaa
xor
add
push
jmp
sub
sub
push
in
call
and
pop
rcll
cltd
sub
sub
inc
adc
push
pushf
popf
push
leave
jp
ja
dec
cwtl
jo
cltd
fdivrl
lea
in
adc
or
adc
mov
add
push
jbe
dec
adcl
rcrb
fdivs
jno
xor
out
add
cmp
push
xor
pusha
fistps
aad
nop
popa
jle
sbb
mov
sbb
jno
adc
add
cmpsb
mov
xor
pushf
adc
and
add
xchg
test
adc
movsl
adc
mov
or
in
ret
sub
movsb
cmp
js,pt
ffreep
adcl
js
sub
mov
mov
hlt
mov
out
push
lret
je
jno
push
out
xlat
ss
push
leave
sbb
xchg
shlb
add
adc
ds
cmp
adc
sub
testb
mov
cmp
pop
sbb
push
lea
sub
inc
mov
ja
test
int3
cli
or
and
rolb
and
lcall
mov
mov
mov
push
add
mov
push
lods
mov
sub
sbb
jl
push
pop
fbld
jne
push
aas
out
sti
popa
insb
lea
lds
add
rol
push
cmpsb
lock
and
testl
xor
cmp
outsb
add
push
inc
js
arpl
push
jo,pt
jmp
push
cmp
or
sbb
movsb
sbb
xor
mov
imul
sbb
lcall
test
sbb
lods
lea
test
jp
xchg
orb
daa
xchg
mov
jne
dec
xor
mov
or
adc
enter
pop
movsl
xchg
and
or
jb
rclb
popa
xor
jmp
sbbb
adc
adc
sub
cld
shr
mov
imul
int3
mov
movsl
clc
push
dec
or
incl
lea
mov
mov
mov
bound
jbe
ljmp
divb
sar
dec
cmp
jbe
push
pop
sbb
cmp
jne
andb
mov
mov
shr
lea
not
and
decb
jne
fcoms
xchg
and
adc
mov
pusha
cmp
pop
add
cmp
dec
pop
add
add
pop
and
add
xor
push
or
sub
std
mov
push
jecxz
in
notl
add
clc
and
sti
add
imul
pop
cmp
jg
mov
jl
and
cmp
je
or
data16
mov
sti
pop
mov
shr
not
and
add
dec
or
xor
dec
loopne
mov
xor
sub
add
mov
push
or
in
or
ficoms
mov
lea
mov
inc
cmpl
or
adc
std
xchg
pusha
mov
mov
inc
mov
mov
loop
stos
and
xchg
or
pop
jbe
pop
lock
jmp
dec
adc
push
mov
or
mov
mov
jp
nop
xlat
imul
and
inc
xor
mov
sub
add
loope
add
scas
imul
gs
jp
push
call
aas
gs
push
or
mov
sub
dec
inc
adc
inc
or
mov
and
pushl
addr16
push
push
mov
xor
sub
add
int
mov
outsl
insb
push
adcl
out
aaa
ret
pop
jl
push
cmp
xchg
insl
or
mov
fdivrs
inc
cmp
pop
adc
and
data16
dec
sbb
lock
addl
adc
lock
push
sahf
push
jae
mov
adc
push
lods
sahf
nop
or
push
fidivrl
jge
sub
dec
push
fucomi
fwait
orl
sbb
jmp
add
insl
xchg
mov
pop
push
ret
sbb
jecxz
pusha
shlb
dec
addb
inc
ljmp
inc
lret
test
incb
pop
pop
and
fcomps
jne
lret
or
mov
mov
lret
xor
sbb
loopne
in
popa
mov
lea
push
inc
sub
loopne
inc
loope
jmp
dec
clc
incl
or
int3
or
adc
out
out
mov
cld
lock
call
stos
mov
lret
je
clc
add
movsb
push
dec
jo
mov
sub
adc
inc
fs
inc
bsf
pop
mov
mov
lock
cmp
push
pop
decl
jne
or
lds
not
and
sbb
int3
les
repz
jne
xlat
or
shrb
mov
cs
mov
jb
cld
dec
dec
cmp
push
mov
pop
and
pushf
jle
jl
test
inc
xchg
fnstcw
sar
xor
scas
add
push
add
mov
int3
add
pop
xor
mov
xor
stc
sbb
clc
push
cs
pop
add
push
xorb
or
mov
add
push
jns
nop
jge
adc
into
add
repnz
lret
lods
or
incl
jns
add
fstpl
lea
aad
pop
xchg
add
adc
jle
shll
pop
pop
push
cmpsb
imul
lcall
sub
xchg
adc
js
pop
shl
ss
and
js
test
inc
jne
imul
stos
xor
out
add
add
sti
cmpsb
sbb
and
clc
jl
loopne
dec
dec
call
das
mov
outsb
in
push
xchg
sub
pop
xor
push
sar
add
jp
movsb
pop
pop
ret
inc
xchg
movsl
sbb
cmp
sarb
mov
xchg
jecxz
xor
push
mov
push
or
fcmovu
ja
push
push
dec
ficoms
add
fimull
or
mov
out
dec
cmp
xchg
mov
push
pop
mov
lods
decb
into
mov
out
cmp
bswap
xor
cmp
dec
rolb
sbbb
cmp
dec
insb
cmp
lods
pop
cmpl
movsb
ret
inc
cmp
push
push
push
jge
jo
sub
adc
cld
push
push
or
mov
dec
or
test
cs
nop
cmp
and
decb
xlat
jne
cmpl
pop
cmp
jb
push
jne
mov
mov
jne
jmp
fcmove
jae
jnp
add
xor
aaa
jg
cmp
arpl
mov
push
inc
mov
test
andb
lcall
cmp
je
mov
mov
mov
in
cli
and
ss
pusha
push
inc
mov
dec
pop
iret
ret
or
ret
mov
inc
or
inc
xchg
imul
out
gs
aad
repz
mov
and
jne
int3
sbb
outsb
leave
inc
test
mov
lock
push
pushf
mov
sub
icebp
sbb
fdivrl
push
sbb
add
jo
jp
xchg
sbb
iret
push
sbb
mov
stos
and
mov
decb
jne
rorl
xchg
jmp
jp
int3
or
pusha
and
addr16
bound
dec
push
and
push
clc
into
and
jns
call
lahf
loopne
cmpsl
movsl
xor
push
or
inc
data16
call
sub
xor
lea
jge
rol
pop
rorl
cmc
push
or
dec
cld
or
pop
add
push
push
push
mov
seto
or
sub
fisubrl
dec
adc
add
in
xchg
mov
and
lods
test
lea
ds
or
jne
cmp
jp
push
ds
xor
js
push
leave
xchg
repnz
cmp
cmp
loopne
or
or
cmpsl
ss
jae
stos
pop
mov
and
add
inc
mov
push
push
pop
cmp
jg
push
mov
test
inc
sbb
push
inc
imul
and
mov
pop
push
add
test
push
push
call
addl
inc
popa
pop
cld
in
cmp
cmp
sub
add
push
mov
dec
xchg
fidivs
xchg
pop
test
repnz
xor
push
sub
inc
ss
out
addl
push
mov
inc
add
push
and
add
xchg
mov
dec
lock
fsubr
xor
push
pushl
adcl
push
inc
push
divl
ret
daa
xlat
out
pop
jne
push
imul
pop
mov
pop
mov
push
les
loope
arpl
xlat
push
fadd
inc
mov
js
shl
inc
push
or
pop
mov
jge
lds
les
sub
pop
call
mov
lahf
outsb
push
fldt
int
inc
mov
add
sbb
pop
aad
je
cmpl
mov
pusha
cmp
jle
inc
je
inc
inc
push
add
jge
jne
daa
into
sub
aas
xor
and
shrb
jae
nop
xchg
adc
lods
sub
lahf
cmpb
mov
call
dec
aam
hlt
mov
add
mov
push
inc
xchg
cmp
jecxz
nop
xchg
arpl
mov
fcoms
adc
call
lock
jmp
jl
loopnew
imul
lods
mov
into
je
push
and
loopne
mov
jle
cld
rorl
subb
test
scas
mov
xor
jl,pn
adc
pop
mov
add
sbb
xor
loopne
and
movsb
mov
add
xor
adc
sbb
cmp
cmpsb
insl
push
ret
pop
add
lods
sbb
sbb
xchg
arpl
stc
fsubrl
mov
pop
rol
lea
add
leave
sub
nop
fistl
repnz
sbb
fidivrs
add
mov
inc
sahf
push
inc
pushf
fistps
xor
adc
sbb
pop
and
popf
mov
or
adc
and
sbb
or
cmp
lcall
xor
and
loope
adc
and
les
std
xchg
push
lcall
aaa
int
ret
test
shll
enter
cltd
mov
xchg
jp
sbb
inc
call
xor
test
sub
aaa
aaa
xor
or
dec
lahf
call
enter
sub
inc
cs
xor
inc
call
and
pushf
cmp
test
xchg
in
scas
dec
outsl
and
call
push
pusha
xchg
enter
mov
mov
repnz
adc
fimuls
cld
fwait
push
stc
inc
cmp
inc
pop
mov
push
test
lret
add
xchg
mov
shll
and
call
pop
in
cwtl
sarb
push
push
hlt
xchg
xchg
push
lods
movsb
xor
add
sbb
xchg
cltd
add
xor
xor
call
in
or
mov
mov
xor
cltd
in
rolb
mov
out
loop
in
sbb
pop
xor
or
les
test
popa
mov
mov
icebp
adc
xchg
xchg
cmp
lcall
pop
sub
or
add
mov
cmpsb
imul
xor
daa
movsl
es
inc
mov
ss
iret
jne
cmp
nop
jo
pop
push
dec
lea
xor
add
cltd
lret
scas
lret
mov
mov
xchg
ret
test
loope
jne
sub
or
movsb
je
sarl
push
loop
adc
dec
xchg
push
xor
mov
popa
pusha
fwait
and
jo
or
scas
mov
push
lods
loopne
xor
xchg
das
mov
testl
sub
lea
xor
push
push
lea
adc
ficoms
cwtl
xor
mov
push
mov
test
cmp
jne
add
fwait
push
cmp
and
sahf
shll
lock
mov
gs
ret
jne
bound
xchg
mov
lock
movsb
push
add
xchg
iret
insb
je
fadds
mov
out
push
fisubrl
add
add
dec
ja
sub
mov
add
dec
add
mov
add
testb
mov
mull
call
xor
inc
add
push
mov
std
jne
shrb
inc
add
hlt
or
pop
mov
inc
cld
push
ds
fadds
pop
enter
cmp
add
rclb
push
call
data16
fmul
int3
andl
int3
mov
push
or
shll
enter
pop
mov
sbb
sarl
sub
dec
sub
sub
xor
add
push
clc
add
cli
aam
dec
sar
cld
std
jmp
mov
inc
push
xor
and
push
test
mov
sub
mov
lret
je
pop
sbb
or
jmp
dec
fildl
dec
mov
in
inc
inc
add
jno
je
push
or
or
dec
push
insb
inc
fdivrs
imul
mov
pusha
pop
fcomp
pop
loopne
fldl
or
fldl
or
add
xor
sub
aad
repnz
push
repz
in
xchg
imul
cltd
jo
push
dec
pop
mov
fbld
xor
cmp
das
negb
cmp
sub
je
dec
je
add
test
lcall
or
sti
sub
sub
shl
jmp
sbb
sub
mov
mov
sbb
sub
or
add
and
addr16
add
inc
add
andb
test
xchg
mov
or
add
call
inc
dec
hlt
pop
lock
adc
xchg
pop
xchg
in
pop
push
call
shlb
shl
push
adc
aaa
jne
das
cmp
ret
and
inc
lock
sarl
sti
push
add
or
iret
sarl
sub
ds
inc
push
dec
andl
add
shll
mov
mov
add
inc
or
xchg
lods
and
xor
pop
xorb
mov
jne
ds
xchg
jle
out
sbb
sbb
and
aas
inc
or
cmpsl
jge
jb
push
xchg
jmp
inc
faddl
lret
adc
and
push
sar
push
jmp
test
fmull
out
pop
mov
cmp
or
ret
and
push
push
adcl
cmp
add
push
dec
push
push
dec
and
push
mov
add
and
daa
add
add
mov
adc
xor
movsl
movsb
push
xor
out
scas
cmc
push
cltd
xor
mov
mov
inc
lods
xlat
jp
ss
xor
cld
mov
mov
enter
or
adc
xchg
mov
clc
test
test
lock
call
xchg
rcl
clc
and
lods
std
mov
testb
push
pop
pop
mov
pop
mov
or
adc
hlt
pop
add
incb
movsb
add
xchg
aam
and
jne
dec
sbb
jg
adc
pop
sar
lea
ret
and
mov
or
or
cmp
xchg
mov
stc
mov
loopne
mov
testb
in
push
sub
mov
insb
mov
insb
pop
ja
ss
es
stos
imul
jae
std
setle
lods
mov
lea
or
or
rcrb
mov
into
gs
outsl
dec
dec
push
mov
or
add
mov
enter
lods
xchg
jno
outsb
push
ljmp
cmp
mov
stc
or
and
xor
fcoms
xor
mov
xchg
mov
fcmovnbe
push
jb
mov
push
or
xor
push
inc
movsb
cmp
fidivrs
dec
cmp
inc
sub
mov
hlt
outsl
pop
scas
pop
and
ss
cmpb
and
xchg
adc
pop
lret
cmp
inc
xor
cmpsb
inc
scas
aad
push
imul
int
lds
push
lcall
loopne
test
daa
push
insb
mov
ret
xor
test
in
insl
mov
repz
mov
or
jno
out
inc
push
pop
loope
stc
or
add
popf
addb
mov
shll
xor
xchg
scas
adcb
sti
mulps
into
push
inc
cmp
sub
mov
outsb
popf
inc
shrd
inc
mov
cwtl
add
push
cmp
jne
xor
in
jno
stc
mov
rcr
jg
testl
sub
or
xchg
jno
sub
jns
pop
in
sbb
daa
mov
sahf
add
ret
rolb
loop
in
mov
imul
xlat
pop
enter
xlat
ds
mov
sub
jno
outsb
nop
and
or
mov
pop
sti
fldt
into
je
testl
insb
mov
lret
and
addr16
scas
jmp
std
xchg
dec
in
scas
jmp
leave
xchg
mov
leave
dec
lock
lock
push
lods
add
das
jnp
daa
sub
std
fdivr
adc
push
xor
pop
add
cli
pop
sub
test
test
insb
add
shlb
mov
shll
sbb
ds
cmc
jle
pop
cmp
sub
call
inc
aas
mov
add
jns
mov
mov
std
test
mov
fsubrs
xor
daa
xchg
xor
mov
ja
outsl
fstps
nop
std
lds
sub
lea
xchg
cmpsb
lret
imul
push
test
ss
orb
cltd
cmp
sub
loopne
dec
icebp
push
push
lods
adc
sbb
mov
mov
aaa
sbb
mov
scas
jns
push
out
imul
in
sub
jbe
test
jg
pop
imul
push
and
xor
xor
xlat
push
inc
push
mov
ja
sub
andb
lock
cmp
mov
sbb
call
std
call
mov
insl
cmp
test
jmp
std
mov
xchg
std
inc
repz
jmp
sbb
push
popa
jmp
fsts
push
fdivrp
or
dec
data16
add
sub
test
sub
dec
jmp
dec
mov
add
pop
test
pop
lock
xor
mov
loop
push
sub
sub
stos
jmp
jo
sbb
jge
jnp
xlat
imul
popf
loopne
sub
addl
imul
dec
test
fimull
add
ds
cs
xlat
lret
lock
dec
xor
add
fbstp
push
lea
bound
addr16
call
adc
push
cmp
movsl
hlt
roll
inc
lret
mov
sub
sub
pop
cmpsl
cmovge
or
mov
jne
fdivr
das
push
adc
dec
pop
jno
push
xchg
xchg
nop
lret
loop
jb
dec
std
std
std
push
push
or
cwtl
sub
ret
xor
enter
das
push
xor
andb
add
and
add
mov
iret
shrl
mov
mov
das
mov
and
push
mov
sbb
mov
in
add
aaa
push
mov
sbb
lahf
stos
icebp
push
cmp
and
inc
test
xor
jns
cmp
sub
sub
pop
pop
or
add
ljmp
loope
or
lock
and
sub
cvtpi2ps
xor
ret
pop
add
xor
xor
inc
dec
push
pop
mov
and
movsl
call
imull
mov
nop
sub
inc
pop
mov
test
push
xlat
pop
and
sahf
adc
mov
int3
jo
inc
inc
les
imulb
xchg
shlb
push
mov
push
mov
xchg
dec
sub
repz
xchg
outsl
and
inc
push
jb
jns
std
mov
lret
jae
test
mov
xchg
aad
lcall
pushf
mov
cmp
popa
push
sbb
pop
arpl
xchg
lret
xchg
cmc
loope
test
insl
and
inc
aad
jns
xchg
rep
cmpsl
add
mov
mov
mov
leave
pop
inc
or
int
aaa
and
pop
pushf
pop
repz
nop
lret
push
pop
mov
pushf
sbb
icebp
inc
and
mov
dec
xchg
loopne
test
mov
mov
fs
pushf
movsb
push
mov
in
movsb
imul
dec
xor
push
es
pop
inc
mov
nop
dec
movsb
bound
xchg
push
aas
dec
sti
nop
inc
or
test
adc
leave
test
jb
dec
mov
pop
pushf
pushf
nop
and
jb
nop
pushf
jb
leave
adc
lods
lods
test
mov
rorb
adcb
int
push
outsl
push
adc
pop
je
stc
dec
mov
aam
pop
add
dec
lds
ret
push
mov
mov
pop
gs
enter
lret
jbe
fisubl
pop
add
adc
mov
es
mov
mov
pop
std
or
pop
movb
lret
test
mov
movsb
xchg
add
icebp
add
or
xor
xor
pusha
and
add
ret
aaa
or
in
fbstp
scas
mov
inc
mov
mov
and
push
add
jnp
lds
loope
cltd
fwait
xor
and
xor
test
orb
out
into
cmp
mov
or
cltd
movb
mov
cmp
and
in
mov
adc
outsl
mov
test
mov
divl
adc
bound
ret
cmpsl
ret
insb
mov
sbb
lcall
and
jne
lea
popa
add
scas
loop
out
and
mov
sbb
je
ss
fucomip
stos
bound
mov
ret
sbb
imul
in
lahf
sub
cs
into
aam
cmp
mov
gs
sub
mov
movl
sub
pushf
xor
sub
lock
push
gs
fcmovnu
mov
loope
dec
jmp
jo
and
push
jno
xlat
cwtl
rorb
ds
or
lea
repnz
es
cmp
fwait
mov
push
add
je
hlt
daa
clc
inc
imul
pushl
testl
cmpsb
jmp
ss
cltd
mov
repz
and
cmc
pop
adc
mov
cmp
sbb
ret
and
jae
adc
xchg
in
push
add
mov
outsb
sti
xor
lock
fs
test
jmp
push
pop
push
fcos
out
int3
push
inc
shr
rcr
shr
rcr
or
jne
div
pop
fnsave
out
dec
adc
inc
mul
pop
jb
cmp
or
cmp
pop
idiv
push
jbe
dec
sub
sbb
or
or
fimull
fmul
sub
iret
push
mov
and
xchg
or
fiadds
add
icebp
and
mov
jmp
movl
pop
stc
movb
mov
dec
or
clc
movb
rcll
jmp
mov
aad
inc
inc
mov
fmuls
in
push
and
loop
and
mov
cld
push
mov
movsb
lsl
sbb
or
add
fsubs
aad
sub
sub
and
sbb
shrb
dec
add
ds
les
xchg
mulb
sbb
pop
leave
pop
jne
mov
xchg
jb
pop
clc
add
xchg
push
lock
or
loop
adc
cmp
dec
js
and
imul
dec
sbb
xchg
dec
add
popf
dec
jl
daa
ficoms
mov
jle
jne
lea
jb
loope
lock
mov
mov
mov
aas
inc
je
test
in
and
jae
push
sub
test
fcomps
jne
in
jg
mov
jbe
lea
xchg
fldcw
fs
adc
addl
loope
les
sub
iret
push
pop
mov
or
add
into
and
or
int3
jl
mov
pop
mov
cld
sbb
orb
jl
sub
add
adc
cmp
mov
je
sarl
sar
test
inc
xor
xchg
mov
sbb
sub
inc
inc
xor
pop
mov
sub
sub
enter
add
pop
sbb
adc
fcmovnbe
fwait
daa
stos
add
push
aam
push
push
xor
mov
imul
sbb
lea
rcrl
out
not
jp
inc
or
mov
or
adc
lock
push
adc
xchg
cmp
mov
nop
int3
test
cmp
push
mov
dec
jmp
xor
or
fcoml
sbb
call
stc
movsl
jne
hlt
lea
pop
out
out
les
enter
or
cmp
pop
adc
inc
lds
bound
outsb
dec
pushf
xabort
test
call
or
sahf
adc
cld
iret
mov
jge
adc
cmp
or
push
ret
shl
push
inc
pop
push
mov
loopne,pn
sub
stc
xor
or
add
inc
ljmp
loope
xor
or
out
and
cmp
and
cmp
je
ss
jns
shlb
xchg
pop
sbb
add
outsb
or
cld
in
inc
sbb
ret
adc
and
scas
and
and
or
sbb
stos
gs
insb
sub
je
sbb
and
inc
add
push
mov
xor
cmp
insb
clc
loopne
dec
mov
sbb
sub
dec
aam
or
mov
lea
popf
jge
push
cmp
ljmp
jb
sub
nop
loope
xchg
pop
mov
push
das
inc
cmp
roll
inc
jmp
sbb
pop
jne
xor
mov
shlb
inc
lods
mov
sub
or
push
dec
sub
push
mov
outsl
ss
add
mov
xchg
loopne
ja
sti
jb
inc
sub
or
or
ficompl
stc
mov
push
mov
lock
jmp
cs
cs
push
bswap
push
mov
and
pop
lret
push
mov
xchg
mov
sub
xorb
xchg
xor
and
mov
or
push
pop
mov
push
xlat
lret
je
mov
or
fiaddl
shr
and
out
imul
ret
test
or
inc
inc
fstp
fisttpll
jo
push
lret
xchg
xor
inc
test
pusha
loope
xor
add
add
push
rorb
adc
jle
jo
adc
adc
xchg
insl
mov
or
gs
or
and
leave
and
xchg
cmp
xor
or
ficompl
and
sarl
call
cmp
pop
fs
sbbl
pop
sub
cmp
or
gs
xchg
test
cmp
inc
scas
push
cmp
xchg
roll
adc
pop
mov
imul
lock
leave
push
sbb
into
pusha
adc
arpl
mov
fwait
and
mov
or
inc
cmpl
xchg
push
cmp
jo
jo
div
imul
and
sub
hlt
add
add
fcomps
cmp
sbb
test
mov
push
adc
cltd
adc
aad
push
sti
or
repnz
mov
or
fxch
js
and
jne
scas
shll
int3
mov
pusha
pushl
mov
pop
andb
lret
clc
mov
adc
jmp
xchg
pusha
je
or
or
push
je
dec
je
stos
jmp
mov
jmp
dec
pop
dec
or
dec
or
push
hlt
aad
loopne
sahf
pop
fdivrl
fadds
dec
mov
cmp
les
mov
add
xchg
mov
add
add
mov
lcall
ret
dec
mov
mov
mov
jne
sbb
inc
mov
cmp
adc
mov
lret
jge
mov
mov
ds
orl
mov
int3
or
mov
fs
push
dec
jmp
and
dec
shrb
and
insb
test
aaa
mov
and
xor
push
adc
lods
jecxz
push
and
test
xor
add
aaa
int
clc
pop
je
jmp
xchg
mov
loope
int3
sbb
sub
pop
addl
mov
into
cli
push
je
movsl
mov
jne
cmpl
adc
cmp
bound
out
or
cmp
and
leave
sub
cmpl
xor
movsb
mov
bound
xor
mov
popa
jmp
ret
cwtl
shl
and
and
or
mov
lea
dec
ret
rcll
dec
cmc
insl
xor
call
and
mov
lahf
outsl
into
int
cmp
test
push
xchg
in
ljmp
cmpb
mov
lret
adcl
popa
mov
or
xor
ret
push
pop
push
xor
inc
pop
shrb
aas
or
ret
repz
mov
jp
aaa
and
or
insb
mov
and
imul
dec
add
cmc
subb
lods
in
xor
dec
push
out
mov
jb
aad
je
add
add
dec
xor
adc
fdivs
test
xlat
cld
or
mov
inc
and
cmp
push
rcl
ret
jnp
jb
push
ret
dec
mov
xor
inc
inc
cmpsb
sub
inc
leave
pop
xor
or
out
inc
adc
cld
xor
mov
in
adc
fists
xchg
add
inc
mov
fcomps
aam
cmp
ss
jmp
xor
enter
rolb
loope
icebp
adc
add
fsubrl
inc
pop
je
pop
mov
jb
je
jecxz
movlps
mov
dec
les
xchg
mov
adc
shr
in
stc
lds
cld
pop
xchg
xchg
rolb
popf
sub
inc
sub
and
inc
sub
jp
inc
mov
add
xor
inc
pop
xlat
cmp
iret
mov
pop
add
adc
inc
loope
inc
jg
pop
and
xor
cmp
and
mov
pop
or
adc
push
rcrb
add
sbb
aaa
les
add
stos
or
jae
mov
addb
out
pusha
xor
ss
std
push
or
sub
mov
jge
push
push
dec
pop
testl
and
pop
sbb
push
xor
fs
sub
sbb
rorb
sahf
jb
push
and
jo
xorl
aaa
call
cli
cmpsl
inc
mov
outsb
mov
cmp
dec
inc
inc
test
mov
repnz
cmp
push
sar
jp
clc
inc
rclb
je
mov
pop
int
sbb
rorb
imul
aad
addr16
orl
push
lcall
mov
and
loope
jb
mov
stos
ja
negl
imulb
out
int
out
xchg
push
pop
in
jo
xchg
addb
rcrl
rcrl
mov
imul
xor
lea
xchg
push
mov
push
pop
and
scas
push
dec
push
jl
adc
mov
lea
pop
jmp
add
or
cmpsl
insl
fwait
outsl
or
or
push
and
ja
lcall
outsl
add
pop
in
js
into
mov
lret
mov
inc
mov
push
pop
cmp
hlt
stos
out
mov
add
jmp
pop
sbb
rcll
loopne
rcrb
add
nop
and
jl
jle
dec
andb
and
push
lock
adc
push
shrb
sarb
jg
popf
dec
inc
pusha
push
xchg
push
cmp
insl
sub
push
push
mov
push
xor
jp
pop
mov
push
mov
roll
out
shl
add
lock
push
pusha
inc
add
and
and
repz
sti
mov
or
inc
adcl
sbb
repz
inc
loope
xorl
subb
xchg
xchg
addl
mov
adc
cmc
data16
or
sahf
cli
or
aas
push
aaa
xor
ds
aam
insb
mov
jne
clc
adcl
stos
add
or
je
and
arpl
dec
movl
fdivl
jl
shrl
popf
pusha
notb
in
dec
movsl
or
or
pop
mov
jl
out
mov
jmp
not
mov
mov
out
push
xlat
cs
jae
xchg
lock
cmpsb
cmp
push
shrb
imul
sbb
std
ret
xchg
mov
test
adc
loopne
or
dec
jo
adc
not
push
rorl
clc
lods
inc
loope
sub
pop
enter
add
jmp
enter
pop
xchg
data16
ret
sub
xor
aaa
xchg
cld
sub
jle
shl
and
xor
inc
adc
push
sub
push
pusha
dec
cmp
test
or
xchg
or
lock
cltd
loope
add
or
sub
loop
jmp
add
cmp
dec
roll
cld
inc
push
sub
mov
or
adc
loop
mov
mov
inc
add
lock
mov
cmpsb
hlt
rep
ss
neg
add
lock
lock
push
cmp
xchg
or
xchg
das
push
pushf
cmpsb
out
or
imul
enter
and
clc
loopne
push
in
mov
xchg
mov
sar
outsl
sbb
popa
push
mov
push
cltd
lock
jae
cmp
test
divb
xor
test
mov
sub
add
jmp
pushl
push
mov
pop
add
xchg
push
push
add
int
jae
adc
add
jne
sbb
lods
or
xor
lret
repz
movl
sti
pop
sahf
insb
loopne
dec
xor
out
repnz
mov
jl
xorb
ret
xor
test
pop
xchg
xlat
cmp
sub
ljmp
pop
sub
loop
or
in
inc
mov
dec
out
test
outsl
push
push
dec
adc
push
and
jne
lahf
dec
in
push
pop
outsl
inc
or
push
stc
clc
jl
pusha
jle
pushf
outsl
jo
dec
movsl
ja
mov
cmpsl
loopne
out
mov
or
mov
adc
mov
or
lret
sub
jo
loope
mov
ret
mov
dec
test
into
and
call
ljmp
pop
push
or
dec
sub
ja
xor
shrl
shll
call
fld
lock
in
lock
rep
lea
enter
xor
xor
ss
rcl
enter
push
or
fldcw
inc
jmp
pop
xchg
fs
negl
movsb
ja
jb
add
aam
hlt
push
jecxz
add
hlt
add
hlt
adc
inc
mov
mov
jno
rcr
and
lock
sub
in
sbbb
lods
mov
ljmp
push
sub
push
rorb
aam
in
adcl
test
iret
insl
out
sub
mov
or
sbbl
bound
out
pop
int3
or
and
sbb
xchg
pushf
or
cmpsl
xchg
mov
inc
push
mov
js
xor
push
loope
hlt
push
push
clc
mov
or
xor
inc
and
add
mov
inc
sbb
jmp
pushl
ret
ss
rorl
inc
mov
or
stos
pop
inc
es
sti
add
mov
add
imul
testb
mov
sub
cmp
ret
inc
fmuls
std
sbb
sub
test
fisubl
testl
test
dec
mov
fsubrs
ret
fwait
jge
mov
pop
adc
outsl
insl
inc
mov
fdivs
outsb
movsl
repnz
inc
add
or
js
add
fimull
push
in
fdivs
mov
shll
push
inc
jae
add
jmp
aaa
popf
inc
push
adc
enter
push
clc
xchg
rorb
or
push
or
mov
aaa
lea
jl
inc
or
cmp
jg
inc
jmp
xor
xchg
cmp
imul
lcall
test
sbb
push
mov
in
inc
adc
push
rcr
fsubs
popa
sub
les
nop
adc
mov
sub
daa
adc
mov
adc
aam
cmpsb
push
popa
cmp
mov
cmp
push
ja
or
and
add
jo
push
leave
mov
enter
or
and
enter
pop
jb
mov
push
sbb
pop
aaa
lea
movl
sub
insl
sub
push
or
aas
fidivrs
xor
push
cmp
jecxz
fldenv
push
add
pop
or
xor
sbb
in
insl
or
test
or
faddp
jg
adc
dec
inc
loopne
xchg
adc
jne
sbb
cld
fwait
call
mov
sbb
ret
adc
or
add
es
imul
sarb
jae
jg
sti
push
jno
jne
mov
inc
jle
cmp
sub
jl
mov
pop
es
insb
add
mov
fs
dec
cmp
xor
adc
ds
cltd
jmp
xchg
sub
mov
cmp
fmull
and
xchg
mov
loopne
jmp
sahf
sub
add
push
in
ret
mov
cmp
xchg
cmp
add
push
and
and
pop
inc
sbb
sbb
push
cmp
sub
ror
pusha
loop
sbb
dec
pop
test
push
sub
mov
aam
xor
pop
add
xor
divl
pop
sbb
lods
dec
pop
mov
inc
or
inc
xchg
andl
and
les
push
add
call
sbb
or
push
add
add
ret
jg
push
adc
int
add
pop
or
jnp
add
push
inc
mov
inc
jle
jp
inc
movsl
or
add
bound
mov
xor
push
adc
push
push
push
mov
fcompp
dec
test
inc
cmpsb
aas
jae
push
fs
pop
jl
es
push
sub
sub
ds
add
call
fneni(8087
fmul
xor
popa
sbb
sub
fnstcw
ljmp
and
mov
lods
inc
aam
push
or
loope
fwait
repnz
aaa
mov
mov
fdivs
aaa
inc
inc
push
nop
nop
push
or
dec
add
mov
push
push
lods
cld
inc
jp
outsl
mov
bound
gs
pop
cmp
cmpsb
sbb
cmpl
inc
and
cmp
add
add
jae
mov
loope
dec
inc
lock
insb
test
shlb
adc
filds
cltd
movsl
add
or
jcxz
push
xchg
loope
push
jo
and
shll
push
sbb
out
pop
mov
rcl
add
cmpl
cmp
inc
push
push
mov
movsl
and
inc
xchg
adcl
mov
ret
pop
xor
push
test
loopne
ret
dec
test
jo
aaa
pop
xor
add
dec
cmp
dec
in
cmp
adc
or
test
sbb
mov
nop
rorl
push
or
cld
mov
or
push
loop
lret
add
xchg
movsb
imul
loope
or
test
sbb
push
dec
loopnew
mov
push
pop
cmp
loop
pop
je
fucomp
or
stos
cltd
aam
push
add
stos
or
cmpl
push
inc
add
out
dec
cs
jmp
cmp
or
je
or
ja
xchg
je
mov
sbb
xor
mov
mov
sbb
pop
bound
shl
add
push
rolb
xchg
jmp
push
jg
sub
cmp
jo
repnz
or
cmp
nop
pop
adc
adc
adc
outsl
popa
leave
jecxz
xchg
rorb
mov
bound
shlb
fcoms
adc
or
sbb
cmp
inc
xor
into
inc
ret
test
add
pop
push
in
fsubrl
and
jne
push
xchg
jo
sub
and
push
jmp
push
icebp
enter
jmp
push
xor
mov
mov
jmp
jbe
xchg
jns
pop
lahf
inc
cld
sub
or
ja
jmp
filds
mulb
pop
pop
je
pop
add
lea
mov
sbb
sub
addr16
ss
adc
add
aad
jns
les
iret
inc
cmp
pop
test
cmp
jl
mov
inc
inc
insb
shlb
adc
xchg
add
sub
or
fbld
dec
testb
jne
clc
popa
inc
sub
mov
movsl
mov
fwait
popa
xchg
into
push
ljmp
pusha
jb
pop
movsb
sub
cmpb
inc
inc
add
mov
addb
push
je
lods
push
stc
in
dec
dec
add
test
enter
leave
mov
pop
mov
mov
mov
shrb
dec
mov
or
push
into
mov
adc
cmc
lods
mov
pop
cwtl
xchg
mov
shll
jne
pop
mov
and
xchg
xlat
jns
jne
out
loop
mov
or
lret
push
push
insb
push
arpl
dec
sbb
mov
add
cmp
ficompl
ja
pop
jle
xchg
mov
sub
mov
or
ljmp
cltd
imul
sub
fimuls
imul
jno
add
xchg
imul
dec
inc
push
lock
dec
clc
xchg
and
fs
mov
sarl
hlt
add
hlt
outsb
adc
jle
aam
dec
adc
add
and
adc
mov
and
addr16
jmp
test
sbb
decl
mov
xorl
cmp
mov
jecxz
daa
fsubrp
push
mov
hlt
icebp
mov
mov
fiadds
xor
or
shlb
rolb
jp
mov
test
mov
adc
and
sbbb
out
mov
test
push
pop
test
sub
mov
add
or
notl
repnz
jl
call
pusha
adc
dec
or
lock
lock
xor
movsb
jbe
pop
andb
sub
mov
push
pop
clc
cmp
cmc
add
adc
adc
rcr
imul
push
mov
pop
popf
and
sbb
pop
sbb
decl
shll
testb
popl
popa
jle
testb
jo
xor
sub
adc
push
jmp
inc
movb
and
mov
mov
js
cmpl
sub
pop
adc
daa
mov
les
rclb
push
inc
cmp
or
push
pop
push
lret
push
dec
pop
not
call
shll
and
clc
add
loope
inc
inc
cwtl
inc
jl
push
push
inc
mov
push
push
insl
cld
mov
fs
or
test
push
fstpl
pop
jmp
inc
pop
adc
js
cli
jne
push
inc
pop
pop
scas
or
cmpb
mov
fsubl
adc
push
push
adc
and
iret
sub
sub
rolb
shlb
xchg
cli
adc
lea
lea
or
clc
add
add
outsb
cmpsl
es
rep
mov
adc
sti
jmp
popl
adc
and
or
lcall
adc
adc
enter
pop
rcrl
dec
cmp
cwtl
inc
jecxz
cmp
mov
xor
sub
dec
dec
and
sbb
sbb
push
js
pop
jo
loop
mov
xor
aam
pop
or
ja
push
push
roll
repz
xor
out
int3
push
sbb
jnp
lret
pop
inc
and
push
rolb
sbb
adc
push
iret
or
cmp
imul
in
sbb
sbb
sbb
in
in
sub
xor
loope
in
cmp
in
movsb
dec
addl
ror
leave
dec
push
push
pop
add
pop
pusha
fs
insb
jo
js
add
jb
mov
xchg
dec
imul
cltd
fs
xchg
cwtl
es
fs
pushf
mov
call
sub
add
je
inc
add
push
imul
filds
add
fcmovb
and
call
adc
in
adc
cwtl
nop
inc
sbb
sbb
lcall
dec
dec
enter
sbb
test
inc
insb
pop
inc
adc
mov
data16
xchg
xchg
cmp
add
sbb
enter
dec
and
test
out
rorb
nop
push
adc
pop
push
mov
sbb
imul
push
sub
push
mov
xchg
js
popa
mov
xor
jb
sbb
sbb
push
mov
add
setl
jp
cmp
mov
repnz
nop
sbb
gs
daa
dec
cli
sub
mov
outsb
ret
add
inc
lret
lods
lret
mov
xor
inc
mov
or
fsubrs
or
mov
sbb
loop
cmp
ss
loop
inc
ds
je
sub
imul
sbb
popf
test
aad
loopne
and
inc
xchg
nop
xor
cmp
add
fmuls
in
or
popf
in
lcall
or
or
ret
inc
jp
add
add
cmp
outsb
jbe
xor
cmpsb
aam
add
sarl
je
push
pushf
dec
mov
rcl
and
jb
adc
or
jge
subb
dec
sub
addb
mov
stos
in
add
adc
cltd
sbb
add
jns
in
int3
repnz
push
lea
pop
enter
in
and
adc
jp
repnz
push
inc
das
mov
push
bound
push
lret
loopne
ret
jl,pt
inc
xorb
add
jmp
orb
dec
rorl
dec
pop
adc
sub
js
imul
iret
sub
dec
fsubrs
iret
jo
test
lcall
pop
std
lock
mov
mov
loop
xchg
and
outsb
insb
lods
shrb
mov
pop
and
or
test
hlt
rcr
ret
jl
cmp
and
sbb
mov
jmp
ss
add
sbb
dec
and
sbb
mov
loope
addl
js
push
xor
adc
xor
xchg
add
repz
pusha
pop
sub
mov
sbb
imul
gs
test
mov
fbstp
push
inc
or
in
adc
or
xor
xchg
fbld
cmp
data16
int
test
sub
jmp
call
flds
sbb
cmp
clc
std
mov
rorb
sti
mov
or
ret
cmp
or
notl
jne
aaa
bound
sbb
aam
mov
and
ficoml
imul
sub
sbb
sbb
mov
pop
pop
xor
ljmp
pushl
cmp
pop
mov
jns
mov
test
dec
sub
xor
inc
xor
push
cmp
and
nop
repnz
mov
cmpb
addr16
mov
jmp
cmp
in
lods
mov
test
mov
push
xor
push
hlt
mov
sbbb
pushf
sbb
aad
xorl
fwait
popa
mov
les
enter
push
addr16
xchg
add
cmovle
ret
inc
call
jmp
mov
sbbb
dec
inc
lea
adc
cltd
jno
add
push
fimull
das
mov
insb
jnp
sub
jo
fcoms
aam
addl
lock
mov
dec
sub
jo
cld
add
cmp
idiv
xchg
add
fisubl
test
add
cmp
rolb
jno
add
icebp
jmp
ljmp
push
xchg
or
add
xor
addl
dec
movl
int
je
outsl
push
push
jmp
inc
inc
mov
dec
pusha
push
lock
and
aad
add
pop
cmp
ret
and
sub
ret
fbstp
fisttps
cmp
sti
je
lahf
jne
int3
adc
push
sysenter
sbb
in
js
dec
add
xchg
push
pop
mov
scas
inc
jle
mov
mull
jmp
xchg
mov
andl
add
aaa
xchg
std
scas
jnp
push
cmp
mov
adc
cli
or
aas
js
aas
movb
inc
mov
adc
xor
jnp
cmpl
fmuls
push
and
adc
pop
inc
out
adc
add
popa
sbb
jmp
xor
or
pushl
in
shll
sbb
add
int3
adc
rclb
inc
divb
shrd
push
or
inc
inc
sbb
dec
fistl
cmp
add
bound
cltd
nop
lret
add
loopne
add
jl
xchg
xchg
push
int
dec
dec
stc
pop
xchg
cmp
pop
mov
adc
into
xchg
push
xchg
and
add
sub
addb
js
loopne
test
mov
addr16
roll
scas
adc
cmpsb
sub
add
jmp
add
sub
pop
xchg
inc
fisttpll
lea
jns
je
add
adc
lret
jmp
or
and
stos
push
sti
mov
jae
and
lea
jo
ja
mov
pushl
lods
adc
repnz
mov
dec
cmp
ljmp
sarb
jne
negl
gs
xor
jnp
inc
mov
mov
mov
inc
cli
pop
or
pop
inc
cmpb
xchg
and
mov
or
or
les
mov
pop
and
test
add
js
push
xor
test
mov
inc
jbe
cld
ror
pop
mov
cmp
mov
or
mov
cmp
mov
clc
ljmp
cmp
dec
les
mov
lret
mov
leave
or
sbb
jmp
sbb
xor
jno
and
adc
outsb
dec
or
cmp
adc
xchg
push
test
sbb
or
cmpsb
push
push
pop
sbb
sbbl
ss
test
add
inc
jo
sbb
xchg
xor
adc
lea
jno
xlat
inc
mov
jge
mov
mov
arpl
or
dec
push
and
mov
mov
es
add
mov
mov
shll
ret
data16
mov
pop
inc
xor
sub
out
pushf
cli
or
push
mov
imul
js
sbb
dec
sub
cmp
lret
push
jmp
xlat
cmp
cmpl
pop
repnz
into
sub
mov
pop
orl
sub
add
pop
dec
xor
notl
sub
pop
mov
jno
xchg
jge
and
arpl
stos
jecxz
xor
sbb
fstp
rorb
ja
in
stos
add
dec
hlt
adc
jge
sbbb
orl
xchg
push
test
or
adc
andl
mov
cmpsb
lock
jne
sbb
sub
and
adcb
push
pop
xor
pop
pop
lods
pop
cld
pop
pop
mov
cli
xlat
mov
inc
and
jg
mov
add
xchg
add
clc
je
xor
fsubl
cltd
into
lcall
ret
mov
jle
loop
dec
adc
dec
cmp
cmp
je
mov
add
jmp
and
push
enter
jl
xchg
push
sbb
mov
js
pop
sbb
push
add
test
sub
inc
mov
sub
aad
pop
mov
add
and
mov
mov
cmp
call
mov
data16
xchg
outsb
test
push
rcrl
dec
shrl
fimuls
dec
repz
movsb
lock
jmp
icebp
xor
jecxz
sbb
mov
loop
pop
pop
push
jl
dec
pop
and
ret
push
sub
nop
sahf
push
ja
lock
pavgb
cmp
and
pop
add
sbbb
push
gs
fcoms
popa
clc
pop
add
nop
es
push
sbb
daa
js
sub
rclb
xor
mov
push
cmp
or
sbb
mov
nop
fidivs
push
in
fs
cmpsl
cmp
cmp
daa
movsl
xchg
fsincos
fldt
psubw
rolb
adc
dec
push
data16
nop
ret
inc
mov
sub
adc
insb
dec
push
dec
lret
dec
pop
mov
mov
das
cmp
fnstsw
or
sbb
jecxz
jo
insl
sbb
and
dec
pop
mov
push
or
cltd
jb
pusha
sub
mov
or
adc
jmp
mov
mov
mov
xchg
fldenv
loope
cld
dec
mov
push
fidivrs
repnz
rcrb
ret
mov
adc
inc
mov
rorl
jl
xchg
inc
insb
xchg
out
jle
je
jnp
call
sub
mov
pop
or
pusha
lods
icebp
in
inc
sbb
xchg
xorb
or
sbb
or
sbb
inc
data16
add
daa
mov
jmp
sbb
inc
leave
mov
inc
stc
push
call
add
add
inc
sbb
test
inc
and
ror
xor
xor
sub
adc
fiadds
xchg
or
int
xlat
push
ror
sbb
bound
inc
mov
dec
hlt
ljmp
pop
mov
xor
pop
sub
je
push
rorl
popf
ds
cmp
stos
cmp
scas
and
add
sbb
data16
pop
imull
je
and
mov
repnz
rclb
inc
add
sbb
hlt
lret
or
or
test
sub
dec
nop
push
or
incb
push
pop
fsub
jge
dec
add
and
test
and
mov
and
les
adc
out
and
shll
dec
xor
adc
or
dec
push
jb
shr
add
xor
in
shr
and
and
fwait
test
adc
test
adc
dec
pslld
adc
test
xor
pop
push
aad
inc
mov
lods
lret
sbb
or
push
jp
jmp
push
in
dec
push
or
adc
lock
and
mov
dec
fisubl
and
jecxz
mov
xchg
jmp
jp
cmpsb
or
fmuls
jp
and
rorl
cmp
add
sbb
loope
flds
and
pop
adc
pusha
nop
es
loope
pop
sub
cltd
push
mov
dec
and
adc
out
and
fnstsw
pusha
pusha
popf
cmp
push
mov
insb
loop
lea
adc
es
adc
sub
test
out
test
mov
add
sub
xor
mov
dec
je
add
dec
jmp
call
push
scas
jmp
push
mov
xchg
inc
or
mull
imulb
push
subb
xorb
sbb
jmp
push
and
ret
or
mov
inc
push
fldenv
or
pop
push
xor
je
sbb
cmp
arpl
inc
movsb
xchg
cmp
cli
cmp
cld
jl
inc
fistl
in
sub
fimuls
add
inc
xchg
ret
mov
xor
sti
lret
mov
mov
inc
aam
xchg
jmp
sbb
push
aaa
sbb
mov
and
xchg
fcompl
sbb
in
int
add
les
sub
dec
push
in
lods
sub
jmp
sub
push
fstl
fsts
sbb
test
int3
in
mov
div
add
xor
sbb
pop
add
mov
pusha
popa
and
loope
pop
dec
loop
fstpl
lods
or
adc
mov
jbe
or
or
pop
rclb
faddl
pop
xchg
jecxz
sarl
jbe
sub
bnd
movsb
outsl
jecxz
nop
repnz
aam
leave
cmp
test
cmpb
in
sbb
jp
dec
in
aaa
xchg
fidivl
lock
pop
mov
sub
push
jp
push
sahf
jmp
pop
cmp
inc
mov
push
aam
repnz
push
pop
xor
and
mov
and
fwait
shr
pop
adcb
mov
out
sbb
jle
mov
push
add
mov
xchg
fwait
and
sbb
pop
mov
das
adc
test
push
adc
mov
out
call
cmp
arpl
rcll
aaa
or
dec
cmp
aaa
inc
pop
sbb
sbb
add
mov
or
cmp
adc
rcrb
fistps
hlt
adc
pop
leave
xchg
adc
loopne
subb
rol
pop
pop
or
pop
pop
and
mov
xor
and
or
lds
mov
dec
inc
and
add
subps
inc
or
or
adc
xchg
adc
cmp
or
dec
or
sub
fmul
cmp
mov
insl
adc
add
in
int3
mov
and
mov
lea
and
ficompl
push
or
mov
inc
and
sub
sub
or
xchg
cltd
stc
cwtl
adc
push
mov
jae
push
sahf
ffree
cmp
add
adc
or
add
rorb
mov
push
sbb
lret
mov
leave
int3
inc
cmc
xor
pop
cld
adc
inc
pop
data16
jo
icebp
cli
cs
loope
sub
or
sahf
push
rolb
pop
shl
jne
mov
pop
gs
mov
fdivl
test
add
ljmp
adc
lock
fptan
push
pop
fadds
into
and
dec
mov
or
pop
flds
cwtl
or
mov
xor
ret
imul
pop
test
or
mov
cwtl
push
sbb
fimull
inc
add
or
inc
mov
push
mov
sahf
cmp
call
push
mov
shlb
add
jnp
and
fsubrs
sub
ljmp
incl
sub
dec
aad
add
fucomp
or
test
add
and
pop
nop
mov
xor
mov
test
or
push
mov
das
sub
or
sub
sbbb
fwait
sahf
adc
ficompl
fwait
sbb
les
cmp
sbb
or
jle
call
in
mov
xor
push
stc
popa
jp
mov
je
sbb
and
loope
xchg
scas
push
inc
xchg
fsubrl
cs
pop
xchg
or
and
mov
push
mov
mov
fwait
mov
out
add
pop
mov
sbb
jbe
dec
rcrb
ds
shlb
jo
fidivrs
jbe
shlb
xor
iret
sbb
xor
dec
push
or
push
sub
das
xchg
rorl
mov
xor
push
shll
cmc
dec
mov
adc
mov
imul
add
jo
pop
sbb
cmpsb
test
jo
mov
sub
push
xor
sysexit
pop
sarl
xchg
or
pop
cmp
mov
push
scas
mov
adc
enter
or
mov
jle
add
loope
or
xchg
cmc
fs
in
adc
pop
xor
stos
xchg
mov
push
test
lods
ss
and
in
rorb
add
inc
or
inc
xor
les
dec
dec
aad
loopne
pop
sub
scas
cwtl
dec
or
loopne
dec
enter
dec
push
or
mov
add
jmp
aas
xchg
or
add
adc
push
add
inc
cmp
add
push
daa
pop
test
jb
lcall
add
nop
popa
jg
adc
stos
sub
hlt
push
test
scas
inc
inc
push
push
aam
test
orb
fistpl
mov
cltd
and
add
pop
mov
jns
dec
xchg
loopne
int
sbb
push
ret
mov
lret
loopne
test
sti
pop
xchg
pop
arpl
loop
rolb
dec
ja
add
repz
int
outsb
inc
push
cltd
insb
pop
and
mov
out
mov
hlt
or
inc
insb
sub
test
dec
mov
mov
add
nop
or
sahf
outsb
xchg
and
cli
sbb
lahf
imul
adc
movsb
imul
cli
bnd
dec
jl
add
dec
mov
xchg
push
pusha
mov
sarb
inc
add
and
dec
mov
or
loopne
outsl
sub
xor
inc
mov
call
cmp
dec
fwait
add
mov
insb
in
packssdw
movsb
test
push
push
aam
or
movsl
cmp
mov
pop
sbb
sub
push
rorb
push
out
aas
pop
sub
sub
not
les
cli
sbbb
iret
pop
ds
mov
and
and
lock
test
addl
push
sbb
pop
mov
getsec
sub
sarb
je
mov
insl
xor
jmp
mov
sub
pop
in
add
int3
or
pop
hlt
test
xchg
sub
adc
adc
lcall
lea
sub
cmp
jne
mov
mov
push
pop
xor
pop
sub
and
mov
dec
jns
inc
lock
sahf
inc
inc
add
push
inc
or
add
jae
cmp
cmp
cmp
imul
mov
and
loopne
loopne
jecxz
mov
cmpsb
sbb
js
mov
xchg
push
out
xor
lea
xchg
mov
out
and
adc
xchg
xor
or
sarb
adc
sub
shl
push
and
xchg
loop
dec
roll
add
clc
pop
loopne
stc
inc
mov
movsl
movsb
shl
in
loop
aaa
cmc
es
and
inc
sbb
pop
repnz
xchg
adc
nop
adc
in
cld
add
sbb
add
lret
enter
adc
sbb
enter
or
xor
or
jb
jns
add
or
les
movsb
push
adc
movl
push
adc
shll
add
movsb
inc
and
mov
xchg
add
and
dec
xor
mov
js
or
aad
cmp
in
jne
inc
jmp
mov
sub
push
das
or
or
xchg
add
and
test
cmp
ja
push
dec
jmp
inc
mov
mov
push
cmp
rolb
and
addr16
sbb
jp
mov
jmp
enter
xor
jmp
andl
jmp
cmpsl
push
push
lods
jbe
mov
adc
add
call
inc
jle
jbe
inc
jle
cmp
push
xor
add
orl
pop
lret
push
jbe
and
sbb
or
lcall
sbb
push
shr
sbb
mov
mov
ret
sbb
es
mov
jae
mov
pop
cmp
adc
je
add
cs
mov
stos
dec
jae
imul
sbb
popa
inc
cmp
jmp
and
scas
inc
add
outsb
mov
arpl
xchg
les
pop
out
iret
or
sub
dec
add
call
dec
cwtl
pop
inc
rcrb
and
adc
sub
cmp
mov
jle
sub
mov
call
pushl
mov
jge
or
fs
das
fcomps
jbe
cmpb
jl
incb
dec
xlat
pusha
pusha
mov
jmp
fiadds
mov
jle
xor
sub
mov
ret
in
cli
and
sub
insb
mov
adc
or
outsb
notl
std
jecxz
add
pushf
jmp
push
inc
mov
mov
icebp
xor
pop
mov
dec
je
dec
lods
sub
xor
movsb
or
pushf
xor
push
push
cwtl
jge
neg
add
adc
adc
xor
sub
cmp
cmp
cmc
cmp
nop
sbb
pop
or
cmp
mov
jge
adc
lock
xor
jne
add
mulb
in
lods
inc
icebp
pop
loopne
out
dec
test
lods
or
and
push
inc
mov
les
shr
popf
fdivrp
xchg
xor
sub
mov
rolb
cmpb
pop
dec
dec
or
xor
call
aas
mov
push
xor
and
and
and
xorl
adc
nop
shlb
andl
adc
sbb
std
mov
or
or
mov
lods
pop
es
cwtl
clc
les
int3
jne
shr
repnz
les
test
ss
inc
into
jne
inc
or
cmp
mov
push
cmp
jne
hlt
int3
add
jne
adc
scas
mov
test
outsb
call
or
or
inc
mov
cmp
out
add
mov
dec
mov
jp
gs
dec
cli
sarl
je
cmp
dec
lock
mov
test
fcmovbe
in
aaa
js
subl
lcall
inc
lock
data16
stc
jg
add
and
mov
clc
popf
inc
test
js
mov
aam
gs
ja
add
lods
add
or
shr
lock
sub
push
out
mov
bound
or
adc
adc
les
mov
xor
mov
aas
xchg
rclb
push
fcom
insl
fadd
loopne
shr
or
add
jge
shl
call
adc
jo
jne
insb
mov
push
das
int3
mov
mov
rolb
and
or
sub
sahf
jge
lcall
add
ficompl
mov
in
cmp
sti
pop
lods
es
subl
inc
jmp
call
mov
mov
or
jb
je
test
pushf
fmull
clc
rorb
orb
insl
xor
jmp
stos
or
popf
and
push
inc
lret
push
outsl
push
push
into
jmp
scas
scas
jnp
ret
lret
movsb
dec
and
sbb
push
les
arpl
add
lcall
clc
jmp
out
sarl
sub
add
negb
repnz
sub
movups
jo
int3
and
ret
or
sub
test
call
xchg
xchg
add
push
push
mov
cmp
add
push
mov
dec
repz
fs
int
pop
sub
lods
mov
adc
repz
mov
jmp
inc
add
mov
inc
jmp
jne
cmp
add
or
adc
push
mov
xor
fcoms
mov
rorl
sahf
pop
cmp
inc
pop
in
push
in
stos
or
test
push
xchg
xlat
sahf
mov
xchg
adc
inc
cs
or
imul
ss
or
incl
pxor
xor
mov
push
mov
cmp
pop
jne
lahf
ljmp
inc
mov
out
add
add
push
fldz
call
xor
mov
jl
mov
out
or
test
clc
cmp
rorb
mov
adcb
cmp
test
std
cmc
and
push
dec
mov
mov
push
add
dec
jne
outsl
popa
adc
and
dec
cs
mov
and
add
mov
pop
add
test
das
popa
push
mov
cmp
sub
mov
sbb
std
shlb
or
add
or
shrb
mov
inc
mov
setg
test
out
clc
add
addb
cld
mov
inc
mov
aas
xchg
aas
sub
movb
cwtl
lcall
add
push
ficoml
in
lds
es
pand
sbb
loop
lock
fldl
icebp
pop
pop
lret
jmp
sub
add
and
imul
fcmovnbe
lea
push
fs
imul
aaa
pop
inc
out
cs
int
lcall
sub
adc
jl
sub
cld
or
scas
xor
push
or
add
testb
lret
push
aam
adc
sub
xchg
xchg
pusha
inc
addr16
sbb
mov
and
xor
sub
mov
loop
mov
push
mov
and
mov
andb
jmp
cmp
ret
jbe
cmovge
enter
stos
add
mov
rcll
adc
sub
adc
fidivrl
enter
pop
add
xchg
aaa
sbb
shlb
xor
jo
jno
popf
shlb
and
inc
jl
and
add
mov
mov
insl
push
jle
xorb
mov
adc
cmp
push
test
into
adc
testl
pop
xchg
fnstcw
xchg
pop
jmp
sarb
jge
xchg
gs
adc
or
fcoml
inc
pop
mov
jle
push
push
and
lret
lret
sub
mov
xor
arpl
cltd
outsb
add
sbb
or
sar
lea
or
dec
in
es
testb
movsl
and
adcl
iret
sarl
or
add
push
xor
lock
gs
loopne
js
push
dec
dec
jecxz
add
mov
jg
inc
xor
leave
and
add
cmpsb
movb
ror
xchg
shlb
movsb
or
dec
fwait
pusha
stos
inc
adc
neg
sbb
jecxz
fdivr
das
jle
lock
ret
daa
xor
or
jne
pop
cmp
inc
inc
adc
sahf
add
mov
or
inc
cmp
ss
shlb
adc
jbe
add
add
or
fldl
add
ja
sub
addb
mov
rolb
movswl
les
lea
faddl
cld
data16
clc
xchg
and
add
icebp
ss
add
shrd
cltd
pop
addb
sbb
fbstp
jge
sbb
fdivl
clc
mov
or
cmp
mov
stc
inc
add
dec
jmp
or
sub
andb
leave
or
call
clc
sub
push
dec
push
sbb
inc
test
adc
or
xor
jo
mov
jb
out
and
or
out
push
add
sbb
js
jg
gs
lods
sub
in
push
sub
or
fidivrl
push
xor
loope
mov
lock
fldcw
sbb
shll
mov
xchg
add
jbe
ja
les
mov
mov
pusha
pop
pop
lods
jb
fs
out
mov
dec
inc
dec
pop
or
mov
lcall
add
daa
rclb
mov
jae
stc
mov
cmp
sub
shlb
sub
je
int
xchg
jp
jno
push
jne
add
loop
call
or
or
and
mull
sub
pop
cwtl
inc
lea
dec
call
jmp
add
sub
shrb
add
shll
aaa
mov
cmpb
push
add
adc
scas
enter
stos
in
test
and
cltd
out
into
sbb
nop
push
mov
add
adc
out
test
mov
and
mov
out
pop
push
shl
push
sbb
jne
cmp
sub
mov
mov
lret
jbe
adc
dec
add
xchg
lea
addb
xor
push
push
insl
push
jmp
insl
cmp
pop
mov
fimuls
sarb
pop
inc
xor
add
stos
mov
inc
shr
fsubs
sbb
sbb
call
jge,pt
fldt
nop
jle
gs
or
pop
data16
push
ds
fwait
out
lea
sub
inc
popa
je
inc
je
repnz
mov
xchg
xor
es
jmp
add
adc
rcll
movsl
enter
push
bound
stos
or
cmp
cmp
or
repz
mov
adc
call
mov
sti
fdivl
fmull
insl
push
pop
clc
fstps
or
ljmp
insb
cmpsb
fs
ljmp
lds
ret
in
dec
inc
bound
add
sbb
inc
add
or
adc
and
jb
xor
jmp
ds
ds
add
ja
pushf
xor
std
sahf
mov
jbe
mov
pop
decl
cmp
jne,pt
pusha
movsl
adc
push
ss
xor
xchg
shrl
sub
add
hlt
jno
jmp
cmp
xchg
rorb
push
cmp
jo
and
pop
mov
lahf
xor
sub
daa
or
push
push
dec
je,pn
out
cs
sbb
jmp
jl
aaa
cltd
movsl
aas
sbb
mov
popf
sub
push
mov
lods
or
je
sub
sub
sub
xchg
sub
mov
pop
js
mov
inc
mov
adc
xor
sbb
mov
mov
cmpl
pop
lret
or
push
ljmp
push
mov
adc
adc
or
pop
dec
sub
or
jp
pop
call
xchg
shrb
adc
add
xor
lret
notl
xor
lret
mov
and
jbe
jge
enter
pusha
mov
jno
adc
jecxz
rcll
cmp
cltd
sbb
adc
or
sub
mov
or
das
out
pop
cmp
add
xor
mov
mov
arpl
lret
nop
add
adc
sub
xor
mov
xor
dec
rorb
push
push
jmp
or
jmp
cmpsl
fildll
testb
sub
adc
sbb
xor
cltd
negl
int
stos
lret
and
push
aaa
mov
cmp
jne
test
fdivrs
jno
adc
add
add
add
popf
mov
lahf
jle
lret
jnp
add
es
push
sbb
mov
xchg
jne
in
inc
sbb
push
push
pop
adc
mov
or
test
enter
push
or
mov
aad
cmp
cmp
push
stos
mov
dec
lods
add
cmp
jo
push
add
scas
xor
push
insl
js
push
arpl
mov
inc
loope
jp
outsl
cs
or
add
push
sub
ret
cmp
sbbb
cmp
movl
nop
add
cmpl
ret
ss
push
mov
inc
call
notl
sbb
cmp
push
clc
sbbb
jb
orps
mov
add
adc
sub
fldt
dec
fiadds
arpl
sbbb
aas
and
xor
cmp
sbb
inc
jmp
jecxz
xor
in
mov
popf
scas
push
and
xorb
inc
test
inc
nop
mov
je
sub
inc
aam
push
push
cmp
pop
xchg
mov
rorb
outsb
test
jns
orl
or
jo
mov
add
add
xchg
rclb
jne
xor
xchg
scas
xchg
adc
test
fidivs
inc
in
adc
repz
pop
rorl
movsb
sub
mov
sbb
mov
pop
fadd
leave
shlb
jge
xchg
mov
xor
xchg
nop
sbb
or
mov
push
movsl
add
sub
inc
xor
icebp
mov
dec
movsb
cmp
inc
mov
jmp
scas
dec
cmp
cmc
fs
jnp
sysexit
sub
ljmp
imul
or
adc
es
test
xor
test
nop
adc
adc
adc
xlat
sbb
adc
xchg
mov
cmp
pop
incl
xor
mov
sbb
ret
sbb
push
xchg
jae
mov
lret
or
stos
adc
mov
adc
or
adc
scas
cmpb
jmp
pushf
cwtl
fisubrs
and
and
insl
inc
inc
mov
notb
jno
and
push
sbb
adc
js
add
xor
das
adc
imulb
pop
add
xchg
js
cmp
ret
pop
call
lock
dec
cmp
lea
or
push
sar
jg
repz
add
or
add
push
adc
sub
fcmovb
jmp
shl
pop
lock
pop
or
mov
add
add
or
bound
scas
push
rcl
xor
sti
in
sub
mov
cmp
inc
ret
inc
or
in
push
adc
add
int3
cld
push
jnp
sub
jle
clc
fnstcw
inc
push
add
cmp
dec
add
lea
pop
xor
aas
mov
shr
cmp
mov
stos
or
mov
cs
add
es
add
sbb
cwtl
popa
mov
je
dec
test
iret
adc
pop
add
sub
data16
sub
dec
imul
xchg
sbb
es
ficoms
adc
or
shl
addl
lock
mov
pop
inc
adc
cli
aad
test
add
incl
stos
imulb
mov
test
test
adc
test
je
clc
call
sbb
rolb
sub
dec
pop
cmp
xchg
cmp
call
mov
icebp
sbb
testb
shlb
jne
and
push
add
fwait
cmp
inc
test
push
fldl
jb
cld
sub
jne
add
call
scas
push
ljmp
adc
dec
push
adc
and
xchg
cli
out
dec
sbb
sbb
xor
inc
adc
cmp
movsl
jnp
mov
push
jle
push
xorl
adc
push
ja
les
or
jle
fcmovnbe
es
lret
mov
leave
inc
outsb
imul
cmp
lock
jl
cmpb
jl
xor
cmpb
push
jo
idiv
dec
xor
and
xchg
adc
xor
xlat
push
roll
scas
cwtl
stos
push
adc
call
push
push
mov
push
push
and
pop
nop
iret
ds
inc
pop
lods
dec
mov
mov
jne
aam
pop
or
cmp
sub
sub
adc
fs
in
push
call
jbe
dec
add
mov
adc
enter
out
pop
sar
mov
jne
xchg
das
xlat
flds
and
shll
enter
test
je
mov
add
scas
or
dec
pop
push
in
mov
or
pop
pop
push
adc
test
jb
aad
movsl
dec
lods
scas
clc
xor
lods
outsb
rorb
inc
pop
sub
hlt
aam
jo
xchg
xchg
or
nop
inc
dec
data16
and
shlb
pop
movsb
aam
es
adc
inc
inc
ja
lock
div
fdiv
fiaddl
sbb
js
jns
sbb
inc
sbb
inc
jo
inc
jne
xorl
adc
sbb
push
inc
and
fldcw
xchg
cmpsb
xor
icebp
sbb
mov
xchg
inc
adc
sbb
and
int
xchg
insb
mov
pop
push
jbe
xchg
jne
pop
pop
pop
add
jae
or
jae
add
rcl
ljmp
shr
dec
sub
stc
adc
push
idiv
and
mov
xor
shlb
add
je
ljmp
xor
push
adc
pushf
push
ljmp
out
imul
imul
movsb
aam
adc
es
hlt
imul
mov
gs
int
inc
sbb
out
or
into
jbe
jns
aas
cmp
dec
adc
lods
dec
sbb
mov
pop
inc
jp
add
push
or
lods
pop
sub
es
cmp
mov
loop
add
sbb
mov
aam
or
sub
gs
insl
cmp
mov
or
inc
or
cs
mov
push
cld
and
cmp
cltd
dec
pushl
dec
fidivs
pop
mov
pop
jg
test
adc
inc
add
gs
adc
leave
mov
and
jne
sub
testb
or
jmp
call
or
scas
gs
je
divl
and
es
mov
je
out
lcall
add
out
push
cmp
ja
add
cmp
adc
sti
push
sarb
cmp
jne
push
shll
leave
adc
jge
jb
idivl
aam
mov
xchg
dec
push
adc
push
adcl
je
ret
ja
xor
mov
cmp
and
inc
or
pop
es
shrl
scas
sbb
scas
mov
jg
ret
jmp
neg
je
iret
push
xor
pop
cmp
pop
and
mov
nop
gs
ds
call
dec
push
iret
mov
imul
testl
cmp
ret
pusha
xor
fscale
out
outsb
lods
jmp
mov
adc
mov
adc
jl
jg
inc
popf
scas
ret
push
pop
xlat
jb
cmpb
jno
cmp
test
pop
or
xchg
xor
mov
xor
pop
xchg
xor
push
sbb
addl
adc
push
in
or
mov
inc
mov
sub
inc
sbb
pop
mov
add
mov
xor
jle
mov
pop
jle
dec
mov
in
inc
ror
push
rcl
rcl
aad
iret
repz
xlat
fcomp
add
aas
mov
mov
inc
add
ss
or
data16
data16
hlt
add
cmp
loop
cmpsb
push
jl
fwait
std
shlb
mov
mov
add
sub
pusha
push
inc
push
add
loope
test
js
cmp
or
divb
movb
mov
jp
call
mov
es
push
stc
mov
sub
pusha
push
add
bound
add
add
push
imul
xor
imul
or
lcall
add
imul
lea
sar
dec
loop
roll
fadds
inc
mov
ljmp
mov
sub
mov
pushf
ja
sbb
sub
sub
test
adc
mov
ret
or
sar
fisubs
addr16
aad
or
clc
lsl
jb
inc
roll
add
or
dec
cmpsb
sub
fildl
or
movb
test
ljmp
testl
fcmovu
loope
into
and
lea
pop
sbb
les
andl
decb
xchg
lret
add
arpl
into
add
inc
stc
mov
sbbb
in
cs
jmp
loopne
inc
or
add
mov
and
cmp
and
inc
jl
rcr
inc
shl
test
rolb
and
sbb
sti
insb
insl
fmull
mov
or
or
sbb
enter
sub
cmp
mov
dec
sbbl
jns
mov
inc
xchg
cwtl
mov
jge
mov
es
sar
jo
rorb
cmp
and
iret
jne
movb
add
fnstsw
cld
or
and
addr16
aaa
hlt
rorb
push
push
push
push
inc
fdivrl
or
jmp
xchg
aam
xchg
pop
mov
or
sub
clc
in
out
xchg
or
loop
jmp
dec
xchg
push
push
adc
inc
lods
lock
imulb
sub
inc
cli
or
jns
repnz
dec
xorb
xlat
mov
stos
movsl
xor
mov
cmpl
popa
outsb
xchg
aaa
ret
push
sub
gs
test
fdivp
pop
push
leave
mov
xor
mov
rolb
es
mov
enter
iret
dec
rolb
adc
xor
push
or
mov
mov
repnz
pushw
sub
loop
jae
jmp
notl
mov
movsl
sbb
and
cmp
or
adc
xor
lods
xchg
out
mov
inc
shlb
fdivs
aam
inc
inc
test
dec
ret
sub
jge
mov
and
jl
add
rcll
mov
mov
or
push
xchg
cmpsl
call
lea
fcmovu
mov
mov
push
and
lods
lods
inc
jl
aaa
rolb
cltd
add
sbb
clc
sbb
xchg
add
sbb
mulb
call
testb
xchg
lock
xor
cmpb
jge
jno
or
inc
lock
adc
jmp
inc
pushf
xchg
aas
add
jne
inc
pop
push
stc
sbb
in
add
and
mov
pusha
mov
jge
dec
pop
jbe
stos
cwtl
sub
insb
sbb
adc
inc
add
inc
mov
pop
data16
push
add
push
nop
cmp
cmp
outsl
push
sub
jle
out
adc
mov
mov
pusha
jp
les
lret
mov
call
jp
test
push
shll
test
jne
sbb
neg
mov
sbb
mov
imul
push
mov
and
imul
ret
and
add
leave
jle
pop
add
and
sbb
ljmp
sbb
rcr
sub
out
cltd
loop
xor
or
xchg
inc
aad
stos
mov
repnz
mov
add
sub
push
xchg
mov
into
out
enter
adc
sbb
movsb
pop
sub
xabort
mov
adc
enter
cmp
push
sbb
push
shlb
add
notl
sahf
jne
cmp
sbb
testb
lock
inc
add
fiadds
call
nop
dec
mov
dec
cmp
push
test
jl
dec
movb
dec
cmp
icebp
cmp
add
dec
add
add
fadds
mov
hlt
xchg
or
mov
jne
dec
pop
and
mov
jb
int
pushf
adc
push
inc
ret
and
add
push
dec
sub
jbe
flds
xchg
add
push
lcall
add
add
mov
rolb
and
mov
mov
scas
add
xchg
ret
and
mov
mov
mov
adc
xor
jmp
mov
mov
shll
add
or
dec
push
and
add
aam
cmp
sub
or
add
mov
mov
stos
push
pop
outsb
xchg
adc
or
jae
insb
fs
pop
pop
sbb
pop
mov
mov
iret
xor
adc
test
mov
mov
rcrl
add
mov
ret
mov
prefetchw
inc
adc
and
and
or
inc
push
pop
dec
push
imul
add
cmpl
lcall
lret
sub
add
scas
movsl
or
je
dec
pop
cmc
xchg
adc
xlat
aam
mov
dec
pop
lahf
push
add
mov
push
and
fabs
jo
and
and
sbb
inc
jge
xor
pusha
inc
mov
pop
jb
mov
lea
int
pop
shll
cld
cld
add
push
and
je
ja
jo
enter
inc
stos
and
mov
addr16
into
xchg
sub
aam
out
mov
in
stmxcsr
adcl
pop
test
pop
ss
or
add
or
int3
dec
xor
adc
xchg
add
jbe
jle
pusha
mov
lret
je
and
sbb
inc
jg
inc
in
in
into
into
mov
stos
and
pop
or
push
pop
nop
pop
cwtl
pop
dec
pop
dec
andl
mov
or
pop
add
test
nop
pop
sbb
push
adc
jo
cmp
add
push
inc
nop
lock
shl
xor
or
add
add
and
add
add
xor
test
into
and
je
and
mov
inc
sub
es
sub
jmp
jb
sub
popa
push
ret
in
ret
testb
sbb
push
scas
insl
and
or
sbbb
and
jo
adc
or
jo
sbb
cs
pop
fmul
cmp
xchg
xchg
cmp
mov
adc
cmp
sub
sarb
je
inc
jmp
add
add
inc
sahf
jle
xlat
scas
ss
and
dec
push
rcrb
xlat
jle
mov
sbbl
sub
jle
add
adc
jge
addr16
mov
mov
jl
or
xchg
xor
sbb
data16
icebp
addr16
push
mov
and
lock
out
dec
sbb
xor
icebp
sahf
add
adc
subl
insl
add
inc
adc
adc
jmp
push
add
mov
sbb
shlb
push
out
je
outsl
mov
add
rorb
pop
push
lret
inc
inc
fs
mov
mov
or
lds
ret
and
mov
jo
jbe
aam
loope
into
insb
add
lahf
jmp
fldt
iret
xor
or
dec
aam
filds
cmp
sbb
movsl
into
cmovno
inc
fpatan
or
mov
mov
test
and
rclb
insl
imul
or
pop
rorl
adc
pusha
iret
mov
jns
ja
and
cmpb
cld
or
cmpsl
test
je
sti
test
xchg
test
push
xor
mov
out
je
and
cli
cmp
fcoms
lret
push
dec
loopne
pop
xor
sbb
adc
sbb
pusha
adc
push
mov
mov
test
dec
shlb
jge
or
rclb
fcoml
cmp
stos
fisttpl
repnz
dec
xchg
inc
sbb
clc
mov
xchg
inc
enter
rcll
in
mov
xor
pusha
push
xorb
imul
aaa
test
jne
les
jl
and
xor
lds
lods
lods
push
rcrl
cmp
and
xchg
dec
pop
mov
sbb
adcb
aas
add
sbb
lods
cs
outsb
mov
pusha
add
jae
inc
mov
and
xlat
dec
test
pop
xchg
jb
sub
adc
pop
pushf
sbb
int3
lods
fsts
xorb
clc
or
and
lods
mov
sbb
je
loope
aas
repnz
fwait
call
add
add
push
pushf
inc
push
jne
push
inc
cmp
popl
lods
movsb
jae
jp
outsb
imul
add
std
cmpsb
rorb
push
mov
and
inc
sub
push
rcrl
fsubrl
pop
mov
sbb
push
xchg
mov
es
clc
xchg
gs
add
push
sbb
xor
repz
mov
loop
add
sub
and
pusha
jns
cmp
dec
sbb
dec
sarl
shrb
test
adc
aaa
test
sbb
xor
or
call
add
dec
jp
js
pop
ret
push
push
dec
sbb
lea
ss
mov
mov
sbbl
push
and
imul
lock
dec
mov
gs
inc
jae
fsubs
or
jle
movsb
lahf
loopne
jmp
dec
loop
fwait
and
xchg
fisttps
out
dec
ss
mov
js
mov
inc
jg
pusha
add
mov
loope
rcll
mov
add
aad
js
sbb
push
pop
inc
push
inc
sar
cmp
jge
pop
push
das
push
inc
sbb
pop
insb
jmp
sbb
call
push
imul
lcall
push
and
rcl
jle
inc
hlt
sbbb
xor
sub
or
push
adc
add
add
push
mov
lods
pop
testb
fisubs
and
inc
inc
ds
push
inc
and
or
add
sbb
xchg
mov
mov
cmp
sbbl
inc
adc
or
mov
addl
add
sbb
or
sub
daa
push
or
or
mov
pop
cs
sbb
or
test
aad
cmc
fwait
or
data16
cmp
shlb
pusha
popa
xchg
lods
dec
loope
pop
inc
and
mov
and
push
xchg
adc
rorb
xchg
int
push
loop
loope
and
scas
sub
mov
cvttsd2si
push
ret
aaa
xchg
sub
inc
pop
aas
push
pop
inc
je
pop
cs
fnstcw
inc
adc
mov
jbe
insl
fldl
add
xchg
in
aas
add
test
jns
fstps
xor
mov
xor
push
mov
fsubrs
pop
xor
adc
test
pop
xchg
add
cmpsb
pop
sbb
cs
mov
movsb
mov
mov
int3
add
add
adc
loop
xor
or
dec
in
jmp
mov
mov
pop
push
pop
inc
dec
or
sti
pop
idiv
sbb
ret
fdivrl
imul
nop
or
dec
jb
sbb
xchg
in
call
mov
lods
int
jb
jecxz
loopne
mov
call
xchg
dec
in
cmp
es
sub
adc
les
inc
cmpsb
mov
inc
mov
jp
sbb
ret
in
jp
loopne
imul
dec
lea
or
ror
inc
mov
test
in
test
ss
jns
jne
jge
and
push
inc
or
mov
orb
jbe
aam
adc
clc
dec
xchg
rcrl
push
jl
test
stc
xor
cmp
andl
repz
or
fsub
inc
inc
push
push
and
cmpsb
enter
repnz
enter
cld
hlt
int3
add
adc
push
aas
orl
in
cld
sbb
pop
and
jg
adc
insb
xchg
outsl
adc
fwait
cmp
add
inc
inc
adc
push
test
dec
pop
ret
orl
pop
xchg
roll
enter
ss
jo
xchg
cmp
imul
lods
pop
dec
xchg
sbb
cltd
fdiv
and
shlb
andb
and
sub
sbb
addr16
fnstenv
sbbl
xchg
scas
adc
or
and
mov
les
les
stos
nop
mov
mov
test
in
xchg
in
leave
loope
sarb
or
fsubl
adc
insb
fcmovbe
mov
je
fadds
mov
sbb
ficompl
mov
in
or
in
roll
push
dec
repnz
pop
and
add
addl
mov
xchg
dec
xor
lock
pushf
adcl
lods
mov
dec
inc
dec
leave
inc
sub
test
es
movl
imul
test
fs
ljmp
sbb
or
call
shll
dec
lds
lods
dec
fdivl
sub
loopne
int3
in
fcmovbe
inc
rcrb
mov
call
loope
xchg
pop
xor
pop
out
shrb
orl
jmp
cltd
fs
imul
and
dec
es
sub
xor
es
cmp
es
fs
inc
dec
fs
jne
insb
add
mov
scas
or
sbb
add
mov
mov
cmc
sbb
sbb
sbbl
in
loopne
ret
clc
lcall
test
ljmp
and
loopne
push
pop
xor
add
sti
push
bound
loopne
mov
int3
cwtl
fs
inc
cmp
outsl
xchg
imul
aam
adcb
jg
adc
popa
adc
xchg
pusha
inc
fmull
and
xor
insb
mov
xchg
mov
icebp
rorb
test
fidivl
out
add
jbe
add
fwait
fs
lea
ret
inc
std
clc
jg
roll
sbb
inc
cwtl
aad
dec
leave
sbb
mov
lahf
mov
loopne
rclb
outsb
in
xor
push
sub
push
inc
aas
jne
push
pushf
xor
cmpsb
add
and
lods
adc
incl
mov
jno
mov
sbb
xor
hlt
nop
push
mov
mov
nop
daa
xlat
mov
xor
lds
jae
adc
mov
call
in
sub
fsubr
push
jb
dec
xchg
push
sub
mov
or
mov
and
rorl
xchg
aam
cs
jge
mov
leave
and
cmp
add
xchg
inc
nop
mov
adc
fcoms
cli
jo
mov
push
fwait
mov
and
fcomps
es
xchg
out
cmc
lods
int3
out
sub
int
data16
pop
mov
fs
daa
ret
out
mov
mov
out
adcl
cmp
or
loopne
mov
fcomp
aam
sub
mov
dec
aad
sbb
lds
nop
jb
cmp
xlat
test
lods
mov
jb
jb
mov
jb
enter
stos
inc
jne
add
inc
popa
cmp
xchg
sbb
bnd
inc
imul
xchg
rorl
pop
lea
shlb
inc
xlat
add
nop
mov
xor
out
fmul
enter
xchg
dec
cld
in
lods
sbb
sysexit
adc
pop
or
push
or
mov
xchg
mov
cmp
movl
loopne
sub
xor
imulb
adc
fsubrs
sbb
pop
outsl
rclb
or
fmuls
mov
shlb
das
push
clc
xchg
loopne
fsubl
sub
xchg
loope
mov
jle
mov
sub
inc
outsb
orb
xchg
jo
fsts
mov
test
mov
je
lahf
xor
popa
test
subb
cmpsb
inc
sub
xchg
pop
push
mov
pop
in
add
roll
add
mov
add
mov
jo
dec
cmpsb
jbe
pop
ret
out
shrb
dec
adc
cs
sub
ss
xchg
outsl
push
pop
pop
cltd
pusha
inc
cltd
ss
in
mov
jo
adc
es
sbbb
xchg
xchg
jg
xchg
xchg
sub
pop
out
ss
lods
xchg
in
roll
push
dec
mov
inc
pushl
mov
shll
cmp
pop
lock
push
loopne
inc
shl
xchg
inc
adc
jo
aas
ja
fildl
cs
mov
adc
enter
xorb
aaa
lods
dec
sub
or
adcb
adc
push
aad
imul
loope
pop
sbb
les
es
lcall
outsb
nop
jp
hlt
push
insb
cmp
clc
mov
ret
cmp
into
mov
push
dec
lock
fs
or
lcall
and
cmp
in
rcr
jg
movsb
aad
pop
cld
pop
aas
call
in
popfw
inc
ds
xor
xor
lea
lea
pop
adc
sub
xchg
jae
stos
sub
and
sbb
add
cs
mov
jnp
pushf
sub
or
or
enter
or
and
daa
push
popf
inc
xor
daa
in
aaa
inc
xchg
or
call
add
pusha
sahf
add
cmp
insl
xchg
push
std
clc
aam
pop
rolb
push
roll
sub
push
and
shlb
leave
inc
fs
pop
add
nop
dec
daa
or
rcrl
movsl
sbb
movsb
popa
inc
ret
popf
and
imul
insb
lahf
xchg
mov
call
xchg
in
fcomps
dec
les
xchg
lds
es
imul
jb
inc
sub
cmp
mov
mov
adc
xor
adc
mov
mov
inc
mov
int
xor
or
nop
decb
and
add
lcall
ficoml
call
mov
lahf
mov
add
mov
jbe
xchg
or
mov
inc
cmp
ljmp
movsb
xchg
jo
adc
sub
test
sbb
push
push
int
mov
inc
adc
inc
or
sub
lcall
lods
cmp
bswap
enter
cmp
sarb
mov
cwtl
cmpsb
bound
cmp
enter
outsl
movsb
je
adc
inc
lcall
and
xchg
movsl
xchg
or
adc
mov
add
push
das
ret
push
adc
mov
and
mov
mov
lods
xchg
test
movsb
xchg
cs
nop
jg
int
xor
cmpsl
xor
jmp
push
sub
leave
pop
jb
jb
shlb
xchg
mov
adc
hlt
lods
mov
hlt
jne
push
dec
pop
mov
negl
imul
jno
or
fcompl
inc
in
or
in
mov
in
push
inc
dec
in
cmc
xor
lods
ja
pusha
data16
pop
test
test
xchg
sub
mov
dec
adc
sbb
sub
pop
jno
mov
dec
dec
jnp
movaps
in
sub
insb
mov
movsb
jnp
sbb
adc
call
inc
movsb
test
mov
push
dec
add
push
cltd
imul
rorb
aas
xlat
cli
sbb
popf
mov
add
dec
int3
adc
enter
add
in
push
and
fdivl
mov
push
es
pop
fcoms
and
push
in
adc
lds
dec
scas
loopne
sahf
cmc
nop
popa
xchg
xorb
fs
inc
adc
aaa
or
fsubs
xor
std
int3
jae
or
sti
movsl
or
adc
lods
faddl
sub
inc
mov
movsb
jge
in
rclb
inc
aam
inc
mov
addb
cwtl
cmpl
shlb
aaa
dec
enter
enter
call
ret
mov
inc
sbb
cmp
jmp
addr16
fmuls
ss
aas
fmuls
and
add
lcall
scas
and
or
ljmp
ss
jo
scas
dec
mov
aam
aam
adc
mov
and
dec
scas
test
adc
scas
and
cmp
fnstcw
jbe
andl
and
leave
das
leave
push
rorb
and
push
mov
jb
les
xchg
sti
fwait
inc
jg,pt
aam
sar
aam
das
lock
add
shl
inc
and
add
int
out
aad
pop
sub
mov
sub
sysexit
fcomps
cmp
pushf
add
nop
dec
dec
mov
fadd
dec
dec
xchg
mov
out
mov
int3
xchg
sbb
loopne
inc
les
mov
push
adc
fwait
in
mov
xchg
add
popa
out
mov
lods
test
hlt
or
push
call
mov
scas
mov
push
jl
push
bound
inc
outsl
jg
inc
subb
pop
fildll
push
test
jg
repnz
dec
mov
mov
dec
pop
enter
mov
sbb
int
mov
pop
push
adc
xor
mov
jns
rolb
std
pushf
std
movsb
test
jl
add
cltd
cwtl
dec
dec
mov
xchg
sub
cmp
or
mov
nop
inc
push
lods
mov
pop
dec
add
push
dec
or
mov
stos
cmp
mov
sub
mov
shlb
xchg
mov
dec
scas
adc
sbb
rorb
sub
xchg
in
in
sbbb
insl
nop
stos
xchg
mov
sbb
xchg
insb
xchg
dec
pop
mov
fwait
es
inc
mov
mov
mov
or
and
sub
inc
test
addb
pop
lea
push
xchg
pop
or
sub
mov
mov
js
mov
das
lods
lods
incb
ret
xchg
add
bound
adc
subl
xor
cwtl
adcb
aaa
scas
movsb
negl
cwtl
in
pop
sub
mov
inc
add
xlat
dec
pop
mov
mov
test
inc
test
movsl
add
aas
sub
add
pop
or
or
mov
outsl
pop
test
jle
mov
aam
int3
lcall
fildll
pop
mov
gs
ret
jmp
lods
mov
in
mov
push
lahf
test
lods
dec
adc
pushf
jge
dec
jo
lea
mov
push
xor
pop
out
mov
jg
leave
enter
rcrb
leave
enter
and
cmp
sbbl
rorb
xchg
ret
sbb
repnz
jo
pop
adc
push
mov
subb
gs
xor
xchg
stos
sarb
or
adc
push
shl
dec
pop
push
mov
test
addr16
mov
icebp
pusha
rorl
push
mov
orl
test
add
xor
or
and
outsb
sub
push
add
dec
sbb
aas
outsb
in
jl
movsb
arpl
inc
fmul
xchg
cmp
int3
dec
adc
cmp
fadds
inc
sbb
push
das
pop
ret
enter
and
xchg
cmp
ret
and
mov
sti
push
test
jl
sbbl
roll
ffree
mov
in
jns
ret
mov
mov
dec
inc
cmp
adc
cmp
add
dec
pop
aad
loope
outsl
add
sub
lcall
stos
inc
lahf
mov
mov
push
adc
in
aas
adc
jnp
test
adc
cmp
aad
or
and
rcrb
push
imul
pop
cmovbe
pusha
jae
jmp
adc
fbld
mov
xchg
jbe
mov
jne
sbb
in
lds
mov
pop
pop
int3
pop
les
xchg
rcrb
mov
sub
push
inc
push
sub
sbb
jnp
add
inc
imull
and
outsb
fs
sub
movsb
jne
dec
sti
sbb
es
push
mov
add
insb
test
cmp
add
pushf
adc
or
or
rclb
dec
dec
xor
out
mov
adc
lds
lods
cmp
mov
cmpsb
mov
mov
mov
add
fs
sub
aam
enter
std
mov
pop
sti
insl
sub
nop
dec
in
xchg
or
cwtl
ret
dec
adc
out
dec
scas
mov
iret
jo
and
test
insb
mov
and
cmp
cmp
push
push
int3
push
nop
aaa
jg
leave
pop
es
push
mov
in
pop
pushf
rorb
push
loope
jecxz
xlat
fsubr
loope
or
enter
out
out
pop
dec
mov
mov
add
enter
scas
imul
leave
orb
in
mov
in
mov
je
push
push
addb
hlt
sub
and
and
popf
lock
mov
push
sbb
push
lods
movsb
in
scas
inc
sbb
mov
popa
mov
lods
xchg
outsl
push
orb
xor
xlat
push
andb
mov
fs
dec
cwtl
pusha
push
xor
dec
add
or
dec
and
out
lock
dec
push
mov
fdivr
enter
push
jp
shll
int
loopne
lods
and
int
ljmp
push
cmpsb
ret
int3
arpl
mov
add
push
sbb
addl
stos
cltd
popl
inc
push
stc
xor
std
add
nop
or
sti
or
cltd
nop
inc
es
and
sahf
push
fbstp
jl
inc
mov
cltd
ja
xor
jo
popa
adc
fldenv
cmp
mov
daa
sub
ret
imul
sbb
gs
mov
sti
dec
push
jbe
add
ja
mov
dec
add
push
xor
fcmovb
xor
inc
in
inc
sub
repnz
nop
pop
faddl
andl
cmpb
xchg
jl
add
push
jbe
fdivrl
std
xchg
btr
insl
or
das
fildl
or
data16
sub
iret
dec
adc
roll
or
sub
mov
cmp
adc
xor
jg
mov
push
mov
rcrb
adcb
or
movsl
mov
add
jecxz
mov
add
lahf
arpl
inc
cld
adc
in
shll
shrb
call
add
rorl
sub
test
add
mov
or
sbb
clc
xchg
in
xorb
mov
adc
jne
xchg
xor
mov
je
push
pop
push
je
mov
shl
fadds
sti
in
dec
sarb
or
sbb
xorl
test
fcomps
adc
aam
aam
stos
cmp
add
insb
mov
imul
push
pop
mov
nop
push
nop
jbe
xchg
loope
fcoms
test
inc
add
or
call
sub
sbb
or
inc
sub
les
fucomi
pop
mov
dec
sbb
adc
lods
xchg
test
test
sub
hlt
sbb
shrb
fadd
ret
fnstsw
pop
adc
push
fisttpll
in
inc
cmp
mov
flds
or
call
sbb
cs
inc
and
or
in
mov
and
inc
xor
push
xor
insl
push
or
imul
outsl
add
xchg
inc
fisubrl
jmp
movsw
cs
mov
mov
cmpsl
adc
mov
mov
fwait
mov
sbb
sar
adc
xchg
mov
es
fisubl
insb
hlt
cltd
fs
dec
pop
push
js
xchg
dec
es
dec
inc
pop
push
mov
jo
mov
dec
dec
rclb
pusha
fdiv
or
cmpl
rolb
dec
lods
iret
xor
les
sbb
mov
dec
leave
mov
push
sbb
dec
addr16
leave
and
adc
and
dec
aam
enter
and
sbbb
sbb
jo
mov
cmc
sbb
in
ficompl
addb
cmp
jecxz
imul
xor
mov
mov
push
data16
xor
incl
subb
mov
fistpll
das
mov
nop
nop
mov
leave
mov
mov
cmp
jl
jno
and
test
jg
push
inc
sub
aam
add
xchg
notl
lahf
roll
loopne
test
or
mov
pop
adc
das
pop
push
jg
xchg
dec
inc
mov
pop
loope
mov
test
mov
dec
call
popa
fadd
pusha
xor
mov
adc
sbb
stc
enter
jmp
loopne
rolb
xchg
enter
imul
add
sbb
fsubs
cltd
int3
inc
add
fcmovnb
sub
or
inc
lock
push
push
les
adc
aam
push
lret
nop
adc
out
test
cwtl
jecxz
add
xor
mov
adc
push
dec
adc
inc
sub
popa
add
loope
insl
mov
shll
out
cli
cmc
ret
pop
sbb
and
test
mov
sbb
adc
sub
mov
cs
sub
nop
xor
mov
stc
adc
add
lock
pop
movl
adcb
lock
mov
insl
mov
or
test
dec
popa
enter
repz
mov
adc
shl
pusha
sub
adc
dec
pop
mov
and
popf
or
xchg
xlat
aaa
hlt
lock
xor
mov
lds
repz
shll
jbe
jno
fildll
lret
cmpl
rclb
mov
shlb
jle
xor
add
aam
loopne
cs
test
inc
fisttpll
enter
xchg
dec
cmpsb
lea
daa
cltd
adc
hlt
cli
mov
or
cld
cli
scas
fs
es
fs
cmp
xchg
dec
push
nop
dec
cmp
ficoml
adc
mov
sub
jb
lds
and
xchg
jae
xor
enter
and
sbb
pop
shrl
cs
pop
insl
or
roll
stc
cld
mov
in
cli
call
adc
and
fadd
sbb
mov
ss
push
fs
mov
insb
scas
js
pop
leave
push
cmp
sub
test
or
fiaddl
jb
orl
pop
icebp
push
fadds
jb
pop
adc
aam
dec
insl
adc
xchg
jne
push
cmpb
sbb
fsubrl
cmp
jmp
jo
lods
ss
lea
push
addb
dec
push
sbb
cmpsb
inc
sub
adc
in
xchg
aas
adc
xchg
mov
and
nop
shlb
insb
adc
pop
sub
les
and
cmp
ret
movsl
popa
sub
jp
mov
ficompl
shrb
and
pop
xchg
mov
js
lock
sti
and
add
jle
adc
add
loopne
dec
push
sbb
mov
dec
ds
push
inc
lock
inc
push
push
daa
adc
jne
push
mov
lcall
mov
jmp
sbb
and
xchg
aaa
inc
gs
insl
adc
stos
jl
dec
adc
fistps
roll
dec
xor
xor
ret
mov
in
out
aaa
es
mov
pop
adc
pop
sbb
jnp
xor
stos
cmp
xor
loopne
out
adc
sub
cltd
adc
add
add
mov
sbb
jns
fdivs
add
push
jbe
xlat
xor
pusha
pop
mov
jns
jo
push
xchg
test
aas
mov
mov
jge
inc
test
mov
cmp
mov
push
dec
push
inc
pop
incl
ljmp
add
fistpl
or
jnp
mov
fxam
test
add
and
shlb
xchg
sub
rcll
mov
mov
jns
mov
repz
std
jle
test
push
or
cmp
jl
insb
pusha
pop
inc
aaa
or
incl
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
xchg
fisttps
push
push
or
pop
popa
bound
gs
lock
ljmp
insl
outsb
outsl
jo
jb
je
jbe
js
jp
xor
xor
sub
outsl
daa
adc
mov
rcll
xchg
adc
push
or
cmp
rclb
or
pop
mov
add
in
cmpsl
stc
cmp
mov
jb
pop
push
sub
iret
jnp
push
xchg
dec
outsb
je
jb
outsl
arpl
fs
out
jge
mov
sbb
push
dec
imul
push
cmp
jb
gs
xor
cs
adc
ud0
bound
and
popa
je
outsl
outsb
push
test
sbb
aas
rdpmc
add
jnp
pop
in
incl
sub
lods
and
jb
js
je
jb
gs
loope
loopne
cmp
or
outsl
mov
add
mov
loop
add
and
mov
push
je
mov
popa
jb
mov
inc
imul
dec
xor
xor
testl
cmp
out
stc
sub
dec
and
jns
add
das
or
in
mov
dec
push
inc
inc
gs
insl
out
out
or
daa
dec
outsl
jbe
dec
arpl
out
lock
femms
jo
sub
addr16
dec
jne
repz
mov
inc
jo
imul
jb
push
inc
into
cmp
insb
adc
xchg
cmp
sahf
jae
xchg
xchg
cltd
mov
push
jne
xor
loope
and
daa
push
scas
clc
std
adc
aaa
sbb
dec
js
push
jne
pushf
jae
jbe
inc
sub
cmp
push
popa
das
jo
or
cmpsl
cmp
lock
mov
sahf
or
add
sbb
repnz
xchg
and
inc
pusha
mov
adc
inc
test
jmp
sub
sub
cs
movsl
cmp
cmp
ds
inc
or
pop
pop
je
insl
cli
push
push
cmp
jge
jg
cmp
fildl
imul
out
adc
or
adc
lock
push
inc
insb
jae
repnz
fs
mov
inc
mov
cmp
mov
xor
imul
and
dec
push
push
insl
in
inc
sbb
or
dec
dec
inc
sbb
lods
and
add
xor
sbb
cmpsl
jp
inc
outsb
push
jo
imul
insl
push
xor
int
mov
je,pn
jo
ret
push
xchg
idivb
and
fsub
xchg
enter
and
scas
cltd
fsts
adc
or
xorb
insb
mov
and
daa
mov
jne
scas
sbb
dec
insl
and
insl
push
xchg
add
notl
sub
aaa
add
mov
sub
inc
lcallw
out
fldl
mov
and
in
cmp
mov
sbb
jp
xorl
push
pop
es
or
outsl
je
push
or
push
and
push
ds
lods
rorl
fidivrl
add
mov
xchg
sarb
daa
sub
es
and
das
arpl
cmp
arpl
dec
popa
sub
mov
in
mov
fiadds
inc
xchg
mov
imul
pusha
int
int3
or
push
sbb
lock
popa
pop
enter
xor
jo
and
gs
push
fistps
adc
int
push
or
xor
scas
shll
hlt
or
rol
dec
add
pushf
sahf
dec
dec
aaa
ja
rcll
test
outsl
outsl
lods
pop
and
jae
fs
mov
cli
jbe
add
inc
mov
mov
cmp
push
gs
sbb
mov
mov
xlat
outsl
push
or
jno
lret
mov
push
cmp
lret
xor
inc
aaa
sbb
push
pop
insl
in
ljmp
imul
icebp
or
outsb
popa
pop
or
push
jmp
pop
sbb
inc
insl
mov
mov
fldl
or
adc
and
push
xchg
cmp
out
dec
pusha
or
and
pop
push
fldl
mov
push
jae
or
arpl
jo
cmp
pusha
jo
sub
push
mov
rcll
push
sub
lret
inc
sub
scas
dec
andb
jmp
lods
and
cmp
cwtl
ja
mov
out
inc
inc
and
dec
mov
adc
cmp
jg
lcall
loopne
es
add
cmpsl
popf
sub
rol
das
lret
jno
sti
jg
push
icebp
pusha
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
data16
loopne
imul
fcompl
add
add
xor
sub
popa
js
jae
jno
jnp
je
pop
dec
pop
add
add
mov
jae
imul
outsb
xchg
testb
push
add
adc
add
mov
push
add
add
add
and
subl
cmp
pop
or
aaa
ds
push
pop
hlt
and
repz
push
js
or
sub
sti
mov
xor
xor
sbb
addb
in
add
xchg
test
add
imul
pop
daa
push
cmpb
push
out
int3
sahf
and
sub
jb
int3
push
int3
mov
into
jo
add
js
inc
add
jle
push
stos
int3
js
jo
imulb
pop
dec
rorb
sbb
add
lea
cs
nop
xchg
mov
xchg
mov
push
es
flds
push
adc
mov
lock
dec
dec
pop
pop
ret
pushf
add
and
daa
pushf
jo
cmp
daa
pushf
jo
pop
data16
mov
loop
nop
out
push
stos
lock
sbb
orl
xor
xor
aaa
and
sub
jb
jl
dec
add
test
push
adc
adcb
mov
enter
add
add
push
add
add
or
add
pop
adc
mov
roll
adc
and
add
lods
and
out
and
ljmp
add
test
mov
xchg
xchg
xchg
xchg
call
fwait
pushf
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
rol
ret
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
test
sar
div
clc
stc
cli
sti
cld
std
inc
orb
add
ljmp
push
add
aas
decl
int
mov
mov
movsb
inc
cs
jae
jb
je
sub
bound
dec
stos
inc
xor
ss
popa
mov
repnz
sub
mov
pop
lea
dec
mov
sti
addr16
outsl
js
push
push
inc
push
mov
dec
fimull
sahf
insb
gs
mov
outsb
jnp
and
daa
add
insb
fidivrs
pop
in
dec
imul
mov
imul
ds
and
inc
jb
or
daa
pop
enter
jnp
mov
mov
cmp
aad
lcall
addr16
cmp
outsb
add
mov
mov
mov
push
mov
mov
push
push
sbbl
jns
and
cmpsb
dec
movsb
or
xchg
or
or
arpl
pusha
gs
xchg
pop
mov
push
sbb
dec
dec
lahf
or
movsb
sbb
cwtl
xchg
in
jno
pop
pop
pop
push
push
jae
fisubrl
jp
aas
cmp
outsb
and
jae
addr16
cmpl
gs
mov
lea
xchg
mov
push
push
push
dec
testl
jae
add
dec
mov
popa
mov
cmp
adc
dec
jge
adc
test
or
jae
call
stos
pandn
or
test
fs
enter
xor
inc
shlb
pop
sub
stos
outsb
bound
pusha
push
or
stos
pop
xor
outsl
xchg
daa
xchg
mov
data16
repz
pop
pop
cmp
cmp
add
ds
jns
imul
sub
mov
sahf
jl
push
jle
sub
sub
out
mov
addr16
sub
sub
push
cmc
jo
sbb
inc
jmp
adc
and
add
push
mov
pop
cwtl
jb
imul
push
jb
imul
insl
adc
xor
lret
add
sbb
cmp
pop
es
jo
loope
test
sub
cmpsl
stc
mov
daa
or
inc
add
clc
add
sahf
out
sahf
loopne
enter
cmp
mov
adc
inc
sti
push
in
dec
sti
fdivp
test
ss
push
nop
inc
push
xchg
sahf
out
lcall
jl
repz
push
or
xor
out
sub
sarl
inc
adc
push
les
repz
pop
pop
push
imul
dec
sahf
repnz
out
inc
cmp
cmp
xor
out
sub
and
adc
out
out
add
incl
mov
pushf
jl
cmp
sahf
out
idiv
incb
mov
sahf
out
inc
inc
cmp
add
cmp
repz
std
lock
movsb
out
cmp
jl
sub
in
pushf
out
sahf
rcrb
cmp
lcall
bound
outsb
push
mov
push
pushf
xor
pushw
int
dec
cwtl
cmpsl
pop
push
lahf
adc
fs
sbb
jae
jb
xor
cmpsl
aam
ljmp
xchg
mulb
xor
add
jle
push
insb
subb
dec
jae
gs
inc
insb
inc
mov
sbb
push
out
sahf
push
inc
dec
xor
inc
dec
dec
dec
push
push
xchg
xchg
mov
push
dec
inc
dec
add
dec
dec
inc
add
adc
jg
adc
sub
adc
incl
lcall
mov
mov
adc
outsb
mov
ds
jnp
rcrl
adc
clc
lret
sbb
jb
pop
repnz
aas
xchg
jge
arpl
cmp
adc
dec
scas
jp
das
in
sti
adc
fisubrs
and
cmp
dec
repz
iret
lret
add
inc
mov
mov
int3
push
test
sub
fwait
ss
sbb
pop
ljmp
pop
jns
ds
xor
incb
int3
dec
dec
xor
dec
popf
pxor
lcall
outsl
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
ljmp
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
decl
out
fcoml
or
scas
int
mov
pop
leave
loop
mov
adc
dec
xchg
scas
lods
std
xchg
ja
push
xor
out
mov
inc
dec
enter
repnz
adc
insb
jg
inc
sub
lret
es
sbb
and
or
pop
loopne
repnz
dec
push
push
inc
inc
or
outsb
jbe
and
mov
das
inc
ret
add
push
gs
fwait
ret
icebp
or
imul
scas
push
hlt
inc
dec
push
dec
push
cs
jg
push
into
mov
push
push
adc
cmp
pop
add
inc
pop
push
xor
aaa
jg
cmp
adc
add
dec
push
dec
and
es
sub
lcall
dec
xor
pop
push
dec
adc
adc
inc
xor
dec
push
inc
sti
imulb
adc
jb
jbe
or
and
inc
and
xchg
outsb
daa
add
pop
push
mov
push
add
es
push
push
push
push
sub
cmp
adc
ja
adc
pop
pop
push
add
push
and
lods
and
inc
and
xor
sub
push
mov
and
sub
sub
adc
xor
out
sub
aaa
xor
call
decl
ss
inc
dec
xor
dec
in
pop
xor
aaa
sub
or
xor
xchg
decl
sub
push
getsec
sub
ss
inc
mov
add
dec
sbb
push
adc
fisttps
mov
pop
aad
and
inc
ret
inc
xchg
dec
push
push
sbb
adc
je
lea
push
add
rcr
cmp
or
pop
cmp
inc
push
mov
jns
fistpll
adc
or
adc
or
push
sbb
xchg
imul
sub
add
push
or
das
sbb
xor
cmp
mov
dec
add
int3
sub
sub
or
outsl
add
jle
xor
inc
and
push
pop
and
js
sub
lret
push
cmp
push
push
mov
and
out
mov
and
gs
jg
inc
inc
xchg
sbb
cmp
sub
and
cmp
decb
push
pop
dec
or
jl
sub
inc
sub
push
jo
fbld
ja
cmp
adc
push
sub
inc
sub
push
sar
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
pusha
xor
mov
push
nop
mov
out
mov
xor
loopne
xor
mov
and
pop
push
inc
outsl
jg
out
scas
inc
push
push
push
jo
mov
sarb
xor
je
sbbb
sbb
notl
scas
and
sub
push
cwtl
inc
mov
adc
mov
push
popa
push
and
outsb
lahf
inc
popa
outsb
insb
cld
or
push
popa
and
add
imul
fs
mov
or
mov
scas
outsb
in
data16
push
push
push
orb
jns
jl
rclb
xor
pusha
nop
jl
loopne
adc
push
push
pusha
idivl
push
xor
xchg
loopne
push
cmp
and
sub
lods
adc
adc
pop
dec
xor
pusha
or
scas
and
jp
add
xlat
cmp
cmp
sbb
sub
sub
or
jbe
mov
sbb
stos
mov
fisttps
sub
inc
inc
cmp
nop
push
or
jmp
pop
iret
jmp
cmp
push
inc
and
push
jnp
ficoms
xor
inc
fcoms
jo
insl
jmp
xor
xor
movsb
pop
adc
pop
pop
adc
insb
push
pop
inc
and
push
or
push
fildll
sub
pusha
sub
pop
adc
xor
unpckhps
inc
adc
mov
or
cmp
adc
xor
fs
in
sbb
adc
fidivl
mov
decb
push
es
fnstcw
mov
xor
out
pop
and
sbb
ret
roll
sub
add
ret
scas
jge
fs
jo
pusha
xor
hlt
outsb
scas
sub
pop
sbb
test
add
adc
pop
xor
inc
jae
daa
or
out
xchg
sbb
jae
int3
into
popa
or
pusha
sub
int
cs
and
push
inc
pusha
mov
dec
inc
das
push
cmp
mov
push
daa
push
xchg
ds
mov
adc
js
cmp
out
pop
jnp
sub
or
daa
shll
and
inc
push
ja
stos
pop
sub
rcll
lret
jo
pop
pop
sbb
push
mov
scas
push
je
in
dec
cld
cmp
add
push
movsb
clc
sbb
dec
push
loope
xchg
inc
add
sub
pushf
mov
or
mov
adc
fisttpl
inc
andl
adc
sub
div
sbb
dec
inc
sub
stos
and
ja
rcrb
mov
push
pusha
sbb
mov
push
push
xor
pop
push
pop
pop
sahf
pop
add
lret
popa
push
mov
in
cmc
in
cmp
sbb
push
notl
push
lods
es
lods
cmp
sbb
adc
lahf
enter
cmp
jb
insl
xor
cmpsl
xchg
xor
and
cmp
dec
test
aas
or
std
scas
sub
loopne
cmp
sub
lds
sbb
sub
sbb
mov
push
lahf
and
cmp
test
sub
js
dec
cmp
divb
push
or
sbb
push
sub
push
sbb
add
dec
xchg
cs
lcall
scas
jo
dec
xchg
cmp
mov
mov
dec
ret
inc
and
sub
into
call
inc
daa
fcomp
push
cmp
pop
add
inc
cmp
cltd
ret
dec
cmp
or
movsl
scas
add
and
stc
dec
pop
loopne
or
mov
bound
sub
insb
mov
daa
imul
xor
push
cmp
and
push
fcmovnb
cltd
push
insb
add
lock
inc
pop
inc
sub
sub
ja
std
push
sbb
and
sub
add
or
imul
and
mov
outsb
movsb
mov
add
and
mov
mov
or
sub
fidivs
sub
inc
mov
add
xchg
jae
insl
popa
imul
cmp
push
pop
outsl
jo
or
sbb
push
ja
mov
cmpsb
cld
adc
push
hlt
repz
repz
inc
in
add
pop
cmpb
in
inc
add
adc
aam
add
fisubrs
and
add
xchg
clc
sub
cmpl
pop
je
sub
inc
inc
aad
xchg
xor
daa
dec
push
dec
cmp
adc
stos
inc
adc
pop
adc
cmp
in
inc
cmp
sub
fidivl
push
pop
sub
dec
xor
rcr
pop
fistpl
sub
push
and
inc
sub
std
pop
pushf
xor
fs
dec
or
mov
xlat
xchg
adc
push
inc
push
fmuls
popa
movsb
add
push
inc
push
push
or
pusha
pop
mov
into
add
adc
cltd
sub
lcall
ret
mov
cmp
cmp
sub
jp
push
in
add
push
lea
pop
lret
jne
add
outsb
aaa
add
sub
adc
inc
add
sub
inc
cs
or
push
test
aaa
pop
pop
mov
es
pop
das
cmp
cmp
shll
sub
push
sti
cmpl
je
data16
pop
fidivl
fdivr
push
push
je
and
ljmp
ficomps
je
loopne
adc
aas
es
aas
mov
push
das
and
xor
js
add
adc
dec
jg
push
fiadds
jo
jmp
xor
fsub
xchg
inc
jl
aaa
aaa
and
push
push
das
xor
xor
dec
inc
and
inc
xorb
add
sbb
sub
pop
inc
fisubrl
sub
sbb
add
inc
addr16
sub
sub
dec
sub
loop
das
cmp
xor
je
mov
das
in
sbb
dec
mov
rcrb
xchg
jb
outsl
imul
flds
sbb
jo
movb
adc
mov
int
add
daa
pop
cs
sub
mov
inc
test
enter
pop
mov
or
or
dec
push
sub
cli
mov
ss
or
das
dec
inc
add
hlt
mov
sub
mov
push
push
push
ss
or
push
sub
mov
mov
xchg
fnstenv
and
push
es
div
adc
jle
or
and
in
dec
push
add
inc
xor
sbb
mov
mov
insl
xor
push
ss
jbe
mov
leave
mov
and
popa
push
cs
lret
push
mov
pop
push
inc
and
inc
fadds
pop
dec
and
jecxz
sahf
fs
outsb
add
xor
cmp
xlat
ret
jnp
push
sub
xchg
cmpsb
push
adc
xlat
cmp
inc
push
cmp
add
mov
insb
test
mov
scas
cmp
pop
hlt
cmp
cmp
push
addb
cmp
mov
sbb
pop
adc
jo
cmc
push
pop
inc
xchg
jge
add
inc
sub
shr
sbb
and
pop
pop
push
inc
inc
pop
inc
lock
lret
gs
add
mov
adc
cwtl
or
inc
sti
rorb
inc
push
push
sub
adc
and
in
push
andl
or
loop
sbb
dec
adc
fists
shll
into
dec
inc
fcomip
adc
mov
rclb
push
push
push
xor
sti
xor
push
nop
pop
shlb
mov
addb
daa
push
mov
nop
mov
jo
andb
sbb
add
filds
add
sbb
push
clc
xor
dec
icebp
inc
pop
sub
add
test
aaa
xor
shl
aam
stc
xchg
sti
add
dec
dec
cmp
clc
adcb
sbb
lcall
daa
pop
mov
cmp
sub
and
call
sbb
xchg
in
xchg
es
rolb
loope
inc
cmp
jbe
sbb
sub
sub
and
fwait
push
loop
adc
add
testl
lret
mov
paddsb
cltd
cmp
in
and
inc
daa
pop
mov
rcll
mov
repz
imul
mov
add
ficompl
sub
mov
xor
inc
mov
lods
inc
and
iret
bound
adc
ds
addb
out
mov
and
stos
dec
aad
xchg
nop
or
imul
and
xor
adc
add
jno
daa
cmp
sahf
dec
bound
lcall
aaa
pop
leave
dec
nop
and
add
jb
fs
or
nop
jp
insl
ljmp
mov
pop
ljmp
adc
jge
daa
or
xor
add
filds
push
cvttps2pi
or
push
dec
dec
aaa
push
dec
cmovg
push
aaa
jl
add
dec
push
int3
daa
inc
adc
es
and
adc
imul
sub
loope
icebp
fisubl
clc
push
imul
fistpll
loop
mov
daa
or
ss
adc
loopne
hlt
lds
sub
dec
cmp
ret
pop
pop
inc
cmp
and
sub
xor
add
sti
and
push
and
and
lret
adc
xorl
fists
out
and
imul
sbb
es
outsb
adc
sbb
shl
out
fistl
sub
fstpt
sbb
and
in
xor
sbb
insl
xor
insb
mov
inc
sub
addb
xchg
call
and
sbb
bound
xor
and
cmp
sbb
dec
int
stos
mov
mov
or
inc
gs
dec
or
aaa
in
add
cmpsb
insl
test
das
call
pusha
and
mov
fsubrs
shll
mov
xorl
call
ret
xchg
xor
push
arpl
xchg
adcl
fucomip
pop
sbb
cmp
sbb
aas
cmp
sub
and
out
ss
or
cmp
les
jae
add
xor
xor
out
fildl
and
push
into
xor
push
cmpsb
push
sub
push
lret
nop
push
cmp
repnz
adc
fwait
push
jo
mull
pop
inc
push
pop
inc
cmp
and
sbb
test
cs
xchg
and
inc
outsb
and
adc
xor
inc
bound
mov
sbb
lock
fs
sub
lret
add
lods
popa
data16
mov
xchg
sub
xor
cmp
addr16
push
dec
push
sbb
mov
xor
push
aam
inc
mov
mov
insb
and
testl
mov
rorb
sub
mov
es
dec
imulb
je
cld
xchg
outsl
jo
insb
gs
ja
fs
add
stc
sbb
pusha
lea
stos
pop
test
cmova
aaa
ss
fwait
stc
sub
push
push
push
inc
add
cmpsl
shlb
push
inc
sub
inc
das
insb
ss
enter
xor
xor
push
cmp
mov
lock
ds
es
push
mov
nop
mov
mov
fwait
mov
push
pusha
inc
and
imul
out
inc
jl
rolb
addr16
push
dec
dec
loope
add
aaa
shlb
mov
mov
jg
jg
sbb
ljmp
mov
ja
mov
std
lcall
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
lahf
in
cld
test
cmp
mov
cld
std
mov
sbb
mov
ds
pop
sbb
inc
mov
jle
jo
fsubs
ss
pop
sbb
mov
pop
dec
xchg
roll
cwtl
jecxz
cmpsb
pop
mov
pop
adc
pop
or
aaa
aaa
xor
mov
mov
mov
test
fmuls
cmp
inc
jb
adc
outsl
push
dec
imul
dec
xorb
out
mov
cs
nop
and
in
jns
adc
cmp
int
cmp
and
dec
pushf
cmp
pushf
rol
dec
mov
ds
lock
mov
insb
inc
js
cmp
xor
pop
add
xchg
stos
test
dec
pop
int3
loop
je
mov
clc
pop
call
mov
cmp
xor
sub
sub
fistps
sub
xor
inc
push
xor
and
add
jne
test
pop
cmp
insb
push
outsb
add
push
rcl
jne
js
out
add
and
sub
out
movsl
pushf
mov
pop
xchg
push
out
push
jb
jo
das
sti
outsl
sub
bound
je
bound
mov
inc
andl
inc
mov
xorl
or
fsubl
xchg
daa
sub
pop
xor
movb
jae
in
sbb
xlat
inc
fisttpl
jecxz
setns
inc
pop
inc
mov
adc
xor
mov
sbb
mov
iret
mov
test
adc
and
xchg
add
dec
xor
popl
call
mov
push
push
dec
or
and
xchg
lock
cld
or
lret
mov
or
test
arpl
lods
mov
inc
and
inc
push
xor
jg
adc
pop
fimull
daa
loop
dec
dec
add
or
mov
pop
and
das
jo
movsb
nopl
adc
add
dec
mov
xchg
add
addr16
int
scas
rolb
push
outsl
mov
lcall
int3
pop
mov
xchg
fdivp
std
mov
push
lcall
ss
out
fiadds
and
add
sbb
mov
cs
iret
push
lret
pop
test
sti
fmul
pop
cmp
idivb
scas
fnstcw
cmpsl
mov
rorb
inc
or
cs
mov
aaa
clc
cs
mov
out
mov
push
add
insb
pop
pop
mov
scas
shll
nop
sarl
cmpsl
adc
dec
pusha
or
mov
mov
into
jle
data16
fidivrs
es
out
cmpsb
call
fidivrs
enter
push
sub
adc
repnz
cmpsl
jge
mov
bound
xor
push
outsb
lods
shlb
into
negb
int3
jbe
lret
inc
push
fcompl
push
sbb
push
push
mov
mov
push
enter
out
aad
mov
sub
ficomps
aad
cmp
pop
pop
push
insb
push
jle
lahf
out
lods
mov
adc
das
push
and
dec
push
cwtl
idivb
cmp
aaa
outsl
mov
repz
fistps
lods
jb
add
xor
jnp
cs
outsl
jo
dec
mov
fisubs
push
pop
mov
fidivrs
mov
push
inc
xchg
es
cli
xor
cmp
sarb
pop
mov
mov
out
push
out
ds
jge
movd
int
jns
ja
mov
push
jg
out
ds
cmpb
sub
and
lret
cwtl
mov
mov
mov
cmp
mov
movb
mov
int
sbb
inc
insb
repz
out
nop
xchg
sahf
out
xchg
inc
push
jbe
idivl
nop
mov
mov
jg
loop
or
aad
pop
dec
sbb
scas
sub
das
push
cs
adc
stc
add
adc
push
std
fisttps
adc
push
mov
nop
adc
mov
pop
pop
mov
inc
cs
mov
loopne
bound
test
mov
mov
int3
push
and
pop
sbb
enter
adc
stc
repz
or
adc
daa
enter
or
add
loop
pop
push
ljmp
int3
dec
outsl
pop
inc
mov
stos
or
lcall
popa
add
aas
inc
push
sbb
daa
inc
sbb
or
aaa
push
xor
inc
imul
aas
jae
sbb
xlat
push
jb
xlat
jnp
aam
jae
dec
cmp
jbe
sbb
push
ljmp
cmpsb
dec
add
aaa
aam
xorps
push
insb
pop
adc
cs
push
dec
pop
je
jnp
jo
jns
push
fisttps
jp
das
inc
ficoms
inc
push
rclb
out
outsb
push
inc
imul
popa
mov
ret
loope
jne
dec
or
dec
mov
ja
loopne
ss
fidivrs
enter
das
xchg
mov
and
js
cmp
add
sbb
pop
das
adc
push
test
sahf
popa
insl
jo
dec
fsubrp
xchg
push
addr16
jo
mov
and
jno
outsl
and
aas
cmpb
mov
mov
sub
and
cmpsb
mov
sahf
lods
push
or
xor
xor
xor
xor
push
lock
cmp
cmp
xor
xor
xor
cmp
jbe
int
push
add
push
push
dec
sbb
mov
cmp
push
and
dec
push
inc
push
add
add
or
add
orl
out
dec
cmp
mov
scas
and
repz
sub
loop
test
adc
mov
push
add
inc
mov
push
scas
xlat
xor
and
pop
rcr
pop
xor
jg
sub
adc
adcb
push
bound
jge
mov
aas
inc
testb
add
dec
sbb
sti
add
dec
sbb
pop
sbb
stos
or
pop
and
dec
fidivl
or
addr16
cmp
adc
les
xor
int3
call
sbbl
movsb
sub
or
in
pop
sti
pop
sbb
inc
xchg
aas
inc
orl
add
pop
adc
sub
sti
and
pop
xor
aaa
pop
or
addr16
adc
xor
push
call
repz
and
repz
push
andl
repz
add
or
or
jo
cmp
adc
or
pop
push
push
or
jae
fisttpl
add
add
das
adc
sbb
int
mov
sub
xor
inc
mov
mov
gs
mov
rorb
popa
xchg
sbb
sub
int
mov
add
or
adc
mov
xor
pop
add
ss
int
add
dec
str
flds
cwtl
or
and
das
jmp
or
add
test
ja
cmpsb
sbb
dec
shlb
sti
das
sub
adc
add
pop
mov
nop
insb
das
sub
and
adc
sbb
adc
out
sbb
sub
daa
push
enter
or
nop
pop
fdivs
aad
shll
cmp
sub
rorb
sub
add
daa
sub
and
push
gs
inc
iret
inc
test
addr16
aaa
lahf
ficompl
add
ljmp
xor
daa
mov
jno
rcrb
mov
push
pop
pop
mov
lods
daa
adc
ret
pop
shrl
das
das
imull
rclb
aaa
iret
xchg
lock
lret
xor
mov
mov
pop
ret
daa
push
mov
movsb
imul
popa
daa
pop
fiadds
das
and
adc
dec
mov
dec
es
or
int3
les
pop
cmp
mov
or
ja
flds
or
pop
pop
mov
pop
scas
pop
cltd
add
lahf
pop
xchg
adc
sbbb
popl
or
xor
int
addr16
stos
adc
sbbb
pop
movsb
frstor
arpl
jns
mov
xchg
outsb
mov
adc
and
mov
inc
imul
rcll
add
outsl
adc
inc
ret
lret
and
add
mov
int3
and
rclb
and
xchg
loopne
out
js
andl
jl
jl
jo
mov
pop
data16
test
push
xchg
imul
and
pop
and
loopne
js
xchg
ja
insb
xchg
leave
outsb
mov
pop
ret
jno
add
add
loop
mov
add
loope
xor
push
dec
in
test
adc
movsl
adc
mov
aas
pop
in
mov
mov
cmp
adc
es
xor
pop
add
and
inc
shrb
movsb
dec
test
mov
push
adc
jmp
ret
and
mov
aas
push
das
push
adc
pop
mov
push
bound
es
addr16
loope
dec
mov
pop
es
or
push
dec
aas
pop
adc
pop
mov
adc
and
aad
xchg
sbb
mov
dec
daa
mov
je
jns
enter
push
sub
pop
lret
sub
outsb
pop
inc
hlt
clc
out
ja
add
or
sbb
add
jl
dec
pop
sub
mov
les
adc
repnz
add
xchg
pop
push
inc
and
or
add
xor
movsb
xor
mov
and
call
loope
inc
sub
ja
push
pushf
adc
fldl
and
test
xor
jle
gs
adc
popa
mov
sub
test
les
add
sbb
test
cmp
pop
sbb
push
cli
dec
push
sbb
sti
or
sbb
jbe
pushf
push
ficompl
int3
sbb
and
fs
xor
cwtl
cmp
ljmp
pop
push
aad
imul
pop
faddl
adc
jb
push
sbb
mov
or
sbb
ljmp
pusha
rclb
sbb
ficoml
push
popa
lods
lcall
in
sbb
sbb
pop
pop
dec
and
jmp
dec
rcl
insl
sbb
and
cmp
or
mov
push
adc
jb
xor
pusha
mov
add
fldenv
sarl
adc
scas
int3
dec
sub
sbb
push
inc
push
sbb
mov
int
xor
stos
insb
pop
aam
or
js
and
dec
jl
pop
out
inc
mov
or
fadd
mov
xchg
pop
out
ret
xchg
xor
pusha
lea
gs
jo
inc
push
iret
cmp
add
jno
test
dec
dec
int3
add
sbb
xchg
mov
fst
arpl
or
out
xor
in
or
push
pop
add
or
out
andnps
imul
dec
sub
daa
out
sub
je
or
and
add
cmp
pusha
sbb
lods
mov
jo
jb
push
pushf
sbb
imul
xor
xor
add
lock
jl
xorps
out
repz
dec
sbb
fistl
jl
xor
add
add
add
daa
add
ljmp
add
dec
adc
or
adc
push
inc
jo
jg
pop
cmp
inc
pop
and
push
pop
sub
adc
sub
dec
cmp
lock
call
and
pop
pop
pop
cmp
es
add
cmp
or
sub
or
mov
sbb
sub
bound
inc
push
and
push
sbb
inc
xor
ja
sub
xor
pop
inc
xor
cmp
xchg
mov
add
out
cli
inc
or
xor
test
sbb
inc
inc
or
sub
push
ss
inc
pop
dec
adc
sub
push
sbb
sbb
cmp
add
dec
pop
xor
sub
adc
and
sbb
cmp
pop
popa
scas
inc
icebp
mov
loope
push
push
xchg
jnp
sbbb
ror
sbb
decl
fdivs
cmpsl
pop
mov
and
sub
adc
push
pop
dec
add
cmc
push
cmp
mov
call
inc
push
jle
in
inc
insb
sarb
push
dec
out
lea
sub
push
lcall
xchg
stos
inc
jle
and
pop
or
out
and
inc
adc
fs
mov
sbb
andl
les
andl
pusha
push
inc
push
jb
cli
dec
push
add
dec
sbb
fistpll
push
inc
push
dec
inc
dec
push
dec
pop
mov
outsl
clc
adc
add
out
inc
sub
adc
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fsubrs
jg
mov
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
decl
or
mov
vmread
sub
sub
fdivr
ljmp
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
jmp
push
sub
adc
or
cs
insl
sub
adc
or
or
cs
dec
ret
sub
xchg
mov
data16
mov
call
cltd
test
pushl
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
jg
dec
pushf
pop
rep
cs
arpl
test
add
mov
mov
jmp
push
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
jg
call
mov
fwait
stos
flds
pop
imul
ds
push
jp
pushl
dec
and
cmp
cmp
outsb
push
jns
jbe
cs
pop
pop
je
pop
insl
aas
dec
cmp
jp
lock
and
ss
jnp
cmp
stos
ljmp
pop
or
es
dec
outsl
lcall
decl
sbb
inc
xor
insb
sub
sub
frstor
pop
aam
push
sbb
dec
push
cmpsl
or
ret
xchg
add
or
cmp
fistpll
sub
sbb
mov
aas
cmp
or
fstps
ja
das
jmp
sahf
mov
ljmp
push
inc
push
dec
push
dec
and
std
movnti
inc
cmp
push
xor
push
pop
sub
xor
scas
push
aaa
push
xor
inc
add
xor
xor
xor
mov
cmpsb
cmovbe
and
inc
sbb
scas
andb
aaa
inc
push
inc
cs
scas
fstps
inc
add
pop
lods
data16
cmpsl
ss
jle
or
mov
fiadds
xlat
ret
adc
in
push
in
push
xorl
dec
jp
mov
mov
ss
sbb
iret
jle
scas
bound
pop
inc
insb
jo
or
mov
mov
jbe
jge
xor
pop
jns
adc
push
mov
sub
iret
and
inc
xor
adcl
xor
sub
push
push
js
sub
test
insb
mov
lods
sbb
in
pop
sub
add
nopl
dec
js
sbb
mov
or
push
push
pop
xor
jb
adc
dec
mov
push
mov
dec
or
adc
sbb
xchg
push
mov
add
push
sbb
sbb
pop
bound
rol
cmc
loop
sub
sbb
dec
mov
dec
sbb
adc
icebp
add
cmp
sbb
pop
cmp
dec
sub
jne
add
mov
push
fs
mov
rorl
jge
push
push
adcb
pop
daa
inc
or
push
mov
push
jns
xchg
and
popf
add
es
fcoms
rclb
mov
dec
mov
sbb
inc
ret
aam
sub
cmp
pop
add
jnp
dec
fs
cmp
add
jne
or
inc
add
insb
test
out
add
jno
or
outsl
lcall
mov
inc
adc
lds
cmpsb
pop
adc
adc
push
jb
stos
sbb
add
nop
mov
cmp
outsb
outsb
je
xor
js
cmp
pop
inc
jbe
pop
pop
insl
gs
ret
cmp
xor
shll
mov
mov
fcomip
ljmp
insl
loop
adc
push
push
xor
push
dec
adc
or
push
popa
je
xchg
push
shlb
xchg
sub
test
push
xor
adc
sbb
pop
and
mov
or
sub
add
dec
cmp
push
push
movsb
dec
adc
add
sub
aam
movb
les
pop
adc
push
fbld
jae
or
shll
fdivs
and
in
popf
xchg
ss
add
imul
je
and
inc
outsl
adc
xchg
mov
sahf
movsl
xor
add
pop
pop
sbb
dec
or
pop
push
cmpsl
and
push
fistpll
push
or
dec
push
subl
stos
lods
push
lds
popa
dec
lret
or
mov
jb
pop
repz
and
inc
mov
mov
test
inc
xchg
dec
dec
cmp
xor
pop
daa
mov
pop
arpl
fisubrl
jl
and
sub
test
lea
sbb
pop
adc
aaa
clts
in
lock
mov
mov
sub
pop
aaa
daa
inc
test
mov
fs
jo
mov
cltd
or
mov
push
test
outsb
inc
fildll
sti
arpl
jg
inc
imul
jl
lods
hlt
jb
cmp
inc
push
jp
dec
xor
jo
pusha
das
scas
inc
xor
adc
pop
aad
xor
pop
push
mov
loop
pop
or
movsl
dec
out
pop
sbb
cs
fstpl
xor
dec
sub
add
pop
xor
push
iret
mov
mov
data16
sub
xchg
je
mov
fst
xchg
and
daa
outsl
sbb
sub
push
out
imul
dec
mov
xor
roll
push
sbb
adc
jmp
jg
ffree
cmp
ss
dec
fldl
cmp
mov
in
gs
add
pop
inc
jp
lea
pop
aas
adc
jnp
inc
jmp
pop
pop
lods
xorb
pop
cmp
adc
and
jnp
pop
dec
pop
movsl
rcr
adc
repz
inc
cs
sti
push
stos
push
push
push
subl
xor
fucomi
adc
xor
cmpsb
pop
mov
pop
inc
mov
mov
addl
push
inc
and
mov
out
mov
and
mov
cmp
jo
sahf
inc
and
inc
cwtl
mov
xchg
or
add
cmp
and
shll
add
sub
pop
pop
jbe
sub
gs
push
push
or
inc
insb
fs
ficompl
dec
cmp
testl
outsl
mov
insl
insl
dec
outsl
and
shlb
movzbl
jp
imul
je
scas
xchg
mov
add
jg
inc
loopne
ret
push
push
inc
dec
push
inc
pop
push
mov
stos
jmp
pop
cwtl
dec
xlat
jb
xorl
movsl
loopne
mov
dec
jo
loopne
dec
push
dec
jb
push
and
mov
inc
aas
dec
and
or
inc
add
pop
scas
add
roll
inc
xchg
xor
es
imul
push
sub
adc
dec
add
add
mov
cs
sbb
mov
xorl
jns
jb
fnstcw
inc
inc
push
adc
push
and
add
inc
pop
test
dec
cmp
sbb
add
xchg
inc
call
insl
es
inc
sbb
or
inc
jns
jnp
adc
sub
cmc
dec
inc
ljmp
inc
xorb
mov
cmpsb
dec
pop
call
push
inc
cltd
sbb
and
add
pop
pop
adc
jl
ja
or
lods
push
cmc
adc
call
out
mov
insb
dec
push
pop
popa
sub
pop
pop
xchg
pop
add
dec
sub
mov
stos
lcall
insb
adc
outsl
in
push
subb
push
les
les
lahf
shl
clc
add
xor
stos
sbb
arpl
or
add
outsl
ja
sbb
je
mov
inc
add
imul
stc
mulb
imulb
dec
push
adc
sarb
rolb
inc
das
mov
mov
orb
xchg
dec
inc
es
outsb
xadd
sbb
inc
movsbl
cld
into
inc
xchg
inc
cmovo
mov
cmp
mov
jo
mov
mov
maxps
dec
add
mov
movl
cmp
pop
cmp
xor
insl
daa
aas
add
test
out
mov
or
daa
fcmovnu
jnp
add
das
inc
pop
lods
pop
lods
add
lods
cmp
imul
lods
add
daa
test
das
jns
movsb
mov
int
dec
and
mov
pop
add
cld
add
inc
aas
stc
jbe
adc
mov
fwait
addr16
daa
inc
inc
and
xor
and
sub
and
divb
daa
push
out
cmpsl
jge
jbe
push
loopne
push
les
jl
gs
mov
aam
jl
out
mov
pop
iret
mov
cld
pop
xchg
mov
mov
sahf
pop
pop
ds
pop
ds
repz
add
pop
cmp
repz
cwtl
xchg
xor
clc
jl
push
push
outsl
in
push
add
icebp
mov
out
dec
mov
lahf
push
xor
dec
aam
fsubrs
add
jns
push
mov
add
xchg
xor
dec
sub
add
cmp
jns
add
xor
fdivp
mov
mov
insl
add
pop
jg
xchg
pop
in
ja
mov
or
add
dec
mov
push
xor
mov
imul
inc
cmp
popa
sub
es
push
push
pop
dec
outsl
sub
mov
add
inc
test
or
inc
test
mov
outsl
scas
in
test
sub
cmp
pop
ss
add
mov
dec
inc
push
mov
pop
mov
popa
dec
scas
add
mov
inc
popl
xor
xor
movsb
jns
daa
xor
pop
lods
out
inc
cs
cld
or
push
leave
mov
jl
sbb
pop
scas
add
outsl
out
adc
sbb
pushl
xor
push
enter
xchg
cmp
pop
pop
enter
or
xor
xor
fs
fs
test
sub
cmc
dec
sahf
out
sub
pop
dec
pop
faddp
jl
adc
aam
pop
or
push
add
jo
mov
mov
ja
lock
pop
ja
add
inc
mov
sub
dec
enter
fs
je
sbb
fildll
jb
xchg
popa
fbld
outsl
and
mov
pop
sub
nop
sub
and
pop
enter
dec
push
adc
xor
push
sbb
cmp
out
jbe
jo
mov
pop
jo
filds
mov
push
aaa
aad
jo
addr16
mov
out
sub
pop
mov
test
pusha
daa
lods
in
leave
add
das
inc
movl
cmp
mov
test
push
adc
popa
jg
push
fcoms
jae
dec
lcall
sbb
in
mov
jae
and
and
nop
es
sub
and
pop
cmp
divl
sub
push
bts
push
outsl
jg
mov
lods
xchg
pop
enter
jnp
and
push
or
mov
ds
ss
push
lock
imul
or
xor
push
movaps
or
cmp
hlt
sub
xor
test
and
or
push
ret
or
popa
mov
mov
xlat
or
sbb
test
fs
arpl
xchg
xor
push
arpl
addb
fisubl
notl
adc
outsl
and
jns
sub
add
add
loopne
sub
fs
sbb
mov
push
sub
aaa
mov
push
rorl
pop
ja
xchg
or
add
sbb
addr16
add
sub
xor
or
call
repnz
sahf
xchg
sbb
repnz
mov
lahf
gs
add
mov
insb
ja
jb
iret
sbb
cwtl
jg
cmp
add
in
nop
int3
fsub
add
rorb
test
sub
data16
addr16
outsl
add
out
dec
mov
test
popw
ret
jno
data16
les
sub
pusha
aaa
add
xchg
int
pusha
cld
xchg
dec
shlb
add
lods
fs
inc
xlat
add
loopne
sahf
iret
push
stos
arpl
dec
out
aam
or
rorl
add
punpckhwd
pop
pop
adc
or
jl
idivb
pusha
inc
lock
iret
andb
cmc
cmp
aam
sub
or
andb
popf
xchg
xor
or
push
lods
push
lods
add
or
call
sub
xchg
aam
jb
add
xchg
mov
ss
jo
loopne
imul
rcl
xorb
out
mov
dec
scas
cwtl
add
sub
inc
out
push
addr16
pop
inc
lea
pop
or
aam
ss
inc
and
or
sub
dec
scas
add
xchg
es
jl
fsubrl
in
fimuls
in
shrl
push
xor
adc
xlat
and
jl
fcmovu
fimull
mov
push
dec
lcall
cmp
popf
mov
push
push
rclb
or
les
loop
inc
mov
das
pop
adc
imul
in
sbb
lods
ja
cld
outsl
movsb
pop
dec
enter
dec
and
xor
inc
pop
in
push
cmp
xlat
lds
pop
das
xchg
out
iret
push
mov
cwtl
mov
push
ss
pop
ret
aas
pop
in
daa
data16
js
fs
push
subb
dec
pop
add
xor
lcall
imul
out
pop
andb
iret
sarl
bound
lcall
orb
sahf
mov
xchg
shl
cmp
ds
sarl
je
out
jno
sahf
out
inc
je
mov
repz
repz
jb
push
js
sarl
add
dec
lods
je
out
sahf
out
jne
insb
xchg
fcmovne
repz
pop
jbe
dec
js
or
cmp
sti
push
dec
js
jl
ja
lods
fcoml
jns
cmpsl
stc
cmp
mov
out
sahf
jae
iret
negl
jnp
repz
jl
push
push
xor
jge
scas
jecxz
jle
stc
cmp
push
jg
cmpsl
stc
cmp
sbb
cmp
repz
lods
js
shl
or
xor
jmp
test
or
xchg
xchg
lock
jl
mov
and
ds
mov
shl
repz
or
mov
jns
sahf
shl
lea
int
les
mov
addr16
jns
dec
repz
nop
rorb
xchg
test
imul
mov
push
xchg
pushf
imul
xchg
aam
xchg
dec
imul
xchg
jl
xchg
mov
cmp
repz
aas
bound
out
cltd
dec
mov
into
lcall
fwait
mov
jns
iret
lret
and
stc
cmp
aaa
sahf
jb
data16
sahf
iret
repz
fstps
jg
aad
out
mov
mov
loope
mov
dec
fmul
mov
repz
dec
xor
movsl
jno
dec
repz
cmpsl
cmpsl
loop
out
ds
sub
pusha
adc
dec
repz
sbb
ds
sarl
pop
xchg
mov
fcompp
sub
mov
xor
dec
ret
cmp
int
sbb
pop
mov
lods
stc
lds
int
clc
push
mov
sarl
jg
in
sub
pop
out
lcall
ljmp
mov
iret
sarl
scas
or
inc
mov
cmp
enter
adc
xor
sti
xor
bswap
push
orl
movsl
iret
xchg
insb
ss
push
jae
add
add
sti
sbb
inc
pop
clc
push
mov
out
fdivs
mov
add
push
xchg
jl
push
add
dec
push
dec
and
cmp
cmp
fnstsw
scas
movzbl
lods
cmp
mov
adc
aaa
aam
fwait
add
mov
nopl
jo
psubd
in
inc
pop
enter
adc
fidivrs
scas
aas
incl
cmp
adc
adc
js
in
sbb
inc
mov
xchg
push
test
es
push
ja
mov
aaa
mov
rolb
dec
xor
jnp
test
push
xchg
into
rcll
push
outsl
ja
sub
outsb
scas
mov
sahf
jb
jbe
bound
inc
pop
pop
fmuls
fmuls
adc
push
fbstp
es
in
mov
dec
adc
dec
cmp
aaa
mov
adc
sarl
lods
into
mov
adc
dec
fxch
rcrb
pop
fnsave
fnstsw
mov
in
in
mov
push
enter
iret
scas
jnp
daa
xchg
in
inc
lock
push
adc
push
out
or
testl
adc
icebp
inc
mov
das
mov
hlt
jbe
xchg
inc
daa
adc
sub
in
push
push
mov
fwait
adc
jge
xchg
dec
hlt
push
or
hlt
inc
add
hlt
cmc
xchg
cmc
and
mov
shlb
dec
cmpsl
in
sbb
cli
pop
lret
icebp
inc
ret
add
mov
push
adc
adc
rolb
outsb
push
mov
inc
xlat
mov
aas
adc
call
inc
inc
jg
inc
leave
and
add
inc
iret
lds
dec
mov
cmpsl
push
aas
xor
and
push
dec
or
add
jns
jnp
add
pop
nop
sub
repz
cs
inc
inc
inc
push
adc
into
test
outsl
pushf
in
hlt
in
inc
dec
lods
jns
jns
pop
dec
mov
sub
and
jns
adc
aas
cs
leave
add
or
and
xchg
xchg
sbb
insb
jp
pop
cmp
mov
movsl
mov
jns
das
out
fwait
imul
cmp
jmp
rcll
push
add
add
leave
out
flds
in
xchg
daa
add
or
adc
iret
in
and
cwtl
and
pop
and
les
xchg
pop
jge
in
sbb
dec
mov
and
fwait
sbb
daa
cmp
leave
and
test
inc
enter
inc
fcoml
leave
and
inc
out
iret
hlt
insb
inc
insb
inc
inc
pop
jo
iret
gs
outsl
add
jge
xchg
dec
mov
push
jge
dec
add
pop
popa
movsb
or
in
mov
dec
dec
lds
in
jge
pop
mov
sub
push
daa
xchg
pop
bound
inc
inc
dec
cmp
and
enter
pushf
call
in
jg
jg
jg
xchg
jae
sti
insl
inc
push
outsb
adc
out
ficomps
add
add
add
cmp
xchg
xlat
popf
out
pop
out
js
cmp
rcll
jb
cld
in
or
inc
scas
pushf
in
cmp
or
xorb
mov
add
xchg
iret
leave
lds
pushf
sub
inc
repnz
rclb
outsl
inc
mov
das
outsl
xchg
in
jns
push
pop
repz
in
insl
cmpsb
add
es
iret
leave
addb
andl
cs
dec
dec
into
xchg
icebp
xchg
and
stc
add
jo
cltd
in
adc
jo
frstor
out
cmp
scas
jo
dec
pop
push
ret
mov
pop
insb
mov
and
cmp
jo
jne
mov
bswap
repnz
mov
fucomip
add
inc
adc
adc
cmpsb
xorb
cmp
pop
mov
xchg
dec
xchg
ss
daa
add
inc
daa
iret
add
shr
xchg
pop
and
out
rclb
fmull
xlat
or
dec
test
dec
dec
leave
jge
cwtl
test
add
test
and
xor
test
xchg
daa
nop
adc
cwtl
mov
cmp
test
test
mov
xor
jb
jb
in
mov
cwtl
test
in
xchg
loopne
call
in
clc
xchg
in
outsb
xchg
push
jb
cmp
ret
jmp
jae
sub
pushf
addb
lret
dec
outsl
js
xorl
lret
lret
lret
lret
cltd
jae
jae
jae
jae
repz
push
or
or
cmp
repz
icebp
or
or
pop
je
adc
sbb
adc
adc
adc
adc
adc
addr16
jne
andl
sahf
out
xchg
sbb
lahf
je
jae
dec
ds
rclb
in
mov
lods
xchg
fsubs
cmp
mov
jne
mov
and
and
in
add
add
mov
jne
shll
xchg
mov
nop
testb
hlt
int3
mov
dec
jb
mov
push
daa
and
adc
push
pop
js
jbe
dec
and
cmp
mov
mov
push
add
sarb
cmpsb
jbe
loopne
call
sbb
into
mov
iret
pop
adc
push
add
pop
enter
ss
sbb
inc
xchg
sti
push
ja
cmpsl
xchg
out
pop
add
call
aaa
insb
push
add
cmpb
jo
popf
dec
adc
mov
test
push
pushf
out
add
sbb
push
adc
mov
xlat
pop
iret
sub
adc
lock
leave
and
leave
and
cld
mov
and
xchg
mov
xchg
aam
divl
leave
mov
cmpb
lods
in
loopne
jns
incl
xchg
mov
push
dec
shrb
test
or
enter
pop
mov
cltd
out
nop
xor
in
cmp
jp
add
jp
imul
in
jbe
addr16
xchg
addr16
iret
js
leave
inc
mov
and
jns
mov
cltd
push
daa
xchg
mov
mov
dec
repnz
aas
jnp
lret
lret
pop
iret
dec
jnp
jnp
jnp
dec
ds
xchg
add
jbe
cmp
mov
and
add
repnz
ss
enter
or
hlt
fmull
add
inc
jmp
xchg
and
jb
pop
jno
addr16
xchg
nop
lahf
js
dec
pushf
movsb
jl
lret
lret
lret
lret
lods
jl
jl
jl
jl
lret
lret
lret
int3
jl
jl
jl
jl
lret
lret
lret
in
jl
jl
jl
jge
lret
lret
lret
or
adc
sbb
and
cmp
jmp
femms
or
or
or
cmp
cmp
or
push
add
add
add
in
xor
add
mov
dec
addr16
xchg
je
in
mov
or
jb
cmp
movsl
push
add
pop
jo
pop
test
inc
push
jle
jns
inc
push
jle
add
xor
addr16
or
daa
pop
insl
jne
jge
daa
mov
jle
aas
xchg
setge
push
repz
ja
movsl
lods
push
or
aad
mov
ljmp
xchg
jg
xchg
xor
jg
xchg
fsubrl
sbb
inc
fisttpll
icebp
add
dec
push
andnps
dec
or
test
cmp
or
leave
jnp
out
setne
jne
cmovle
sahf
cmp
pop
lods
mov
add
andl
popa
push
aas
das
push
inc
pop
push
or
pmaxub
xchg
inc
pop
or
fwait
es
adc
or
dec
xchg
dec
shrb
mov
dec
enter
bswap
repz
out
out
push
imulb
push
pushf
loop
cmp
sub
xchg
xchg
push
pushf
dec
xor
mov
push
adcb
xchg
sbbb
test
mov
add
rorl
loopne
sbbl
xchg
push
xor
cmp
mov
pop
push
add
mov
mov
and
insl
lahf
mov
movsb
rcrb
out
stc
iret
repz
sahf
add
femms
push
sbb
cmp
repz
or
or
repz
repz
push
or
aaa
ds
pop
or
xchg
out
xchg
xchg
data16
add
das
rclb
jbe
cmp
adcl
pop
popa
setl
in
imul
xchg
fcmovne
repz
in
lds
cwtl
icebp
and
push
add
sbb
rcrb
add
dec
inc
add
and
fwait
lahf
push
add
cwtl
adc
jae
xchg
pop
sbb
scas
add
cltd
insb
add
dec
cmpb
pop
das
inc
daa
outsl
xor
lock
ror
inc
mov
add
jmp
call
rdpmc
jb
loope
xlat
movaps
push
jo
pop
cmp
sbbb
insl
xchg
lcall
cld
addb
outsb
test
xchg
xchg
fildl
fcoms
push
loopne
fsts
clc
add
mov
push
sbb
pop
leave
xor
and
mov
hlt
sub
inc
imul
addr16
addr16
loope
rcr
xchg
loopne
enter
call
xchg
in
loop
xchg
xchg
les
jmp
daa
pop
sub
mov
lss
mov
xchg
xchg
xchg
xchg
mov
or
popf
xchg
and
and
cmp
inc
mov
pop
mov
and
sbb
mov
mov
cmp
push
sahf
or
in
in
xadd
xlat
repnz
in
in
clc
add
push
mov
mov
testl
sahf
dec
mov
inc
repnz
test
cs
fwait
in
dec
or
mov
inc
repnz
cld
cmp
out
dec
xchg
pop
call
pop
mov
outsl
pop
ja
add
add
xchg
jns
pop
insl
nop
xlat
mov
dec
icebp
and
mov
mov
mov
push
rcll
mov
nop
jl
idivl
fcmovbe
fstl
mov
iret
mov
cmp
cmp
shll
lcall
add
or
inc
jbe
das
sbb
rep
das
xor
or
ud2
rclb
dec
push
mov
and
cmp
movaps
mov
add
rcrl
insb
pop
mov
pop
jb
xor
in
sub
into
icebp
mov
pop
out
pop
mov
cmp
add
add
jnp
xchg
xchg
add
pop
and
data16
sbb
out
out
pop
mov
mov
push
add
sbb
mov
sub
mov
jnp
and
pop
add
arpl
jae
xor
sbbl
repnz
mov
mov
or
pushf
pushf
pushf
pushf
pop
push
add
pushf
add
sbb
iret
repz
sbb
sbb
sbb
cmp
repz
jecxz
jmp
dec
sahf
outsb
repnz
add
or
and
cmp
and
sub
mov
add
jl
movsl
orb
and
dec
mov
mov
pop
pop
leave
jae
ret
or
cmp
out
xchg
add
push
nop
leave
jae
cltd
clts
cmpsl
push
fcmovne
xchg
pop
inc
nop
dec
nop
push
xchg
rcrl
pusha
aas
push
outsb
popf
scas
jo
js
xor
iret
sbb
or
iret
cwtl
or
test
pslld
dec
cmpxchg
es
nop
xchg
cmpsb
xchg
push
xor
clc
clc
jg
lock
xchg
cmp
inc
xchg
dec
xchg
pop
push
add
cmp
outsl
push
jp
push
repnz
mov
mov
iret
leave
push
cmp
rcr
dec
addl
out
scas
in
jae
enter
cmpsl
fsubs
xchg
iret
push
add
jns
cmpsl
cmp
sbb
and
mov
push
outsb
ds
add
popf
in
xchg
adc
in
jo
js
adcw
inc
xlat
sbb
dec
xor
mov
in
xor
mov
addr16
daa
cmp
xchg
cmpsl
or
cmp
cltd
push
xchg
mov
jb
mov
cmp
iret
add
fadd
jbe
push
fists
shrl
lock
jb
jns
clc
add
jae
sbb
or
or
cmp
inc
or
dec
sahf
out
or
dec
sahf
out
adc
push
xor
clc
xchg
pop
push
jns
insb
add
xchg
cmovne
and
jmp
mov
stos
inc
xchg
shrb
xchg
jno
xchg
jns
fxch
xchg
xchg
pop
adc
sbb
leave
pop
aaa
push
mov
xchg
dec
stos
mov
insl
and
fists
das
mov
xchg
cmovle
lods
push
add
int
das
xchg
dec
rolb
xchg
in
mov
sub
and
das
xchg
xchg
imul
push
xlat
cmp
add
inc
out
data16
pushw
or
jne
cmp
outsl
or
jo
in
test
or
pop
xchg
test
das
movsb
cld
push
into
popf
lods
pop
push
dec
xchg
xchg
outsb
mov
mov
int3
aam
or
addr16
jae
or
xchg
or
lock
and
out
repnz
pop
inc
add
cmp
in
add
mov
push
or
ds
cmp
repz
orb
nop
mov
adc
aas
subb
lret
ja
in
xchg
gs
daa
ja
xchg
cld
xchg
cwtl
inc
fwait
push
or
ljmp
in
cwtl
aaa
push
pop
push
iret
in
mov
push
add
pushf
mov
jg
cwtl
xchg
daa
mov
xchg
out
inc
mov
sub
sbb
cmp
mov
cwtl
inc
ds
pushf
pop
ret
into
mov
xchg
pushf
dec
add
icebp
push
add
cltd
lahf
cltd
and
cld
movl
dec
rorl
mov
xor
push
jo
cltd
filds
jns
mov
add
cmp
in
cltd
scas
cltd
push
mov
mov
test
rol
add
lods
cmpsl
lcall
in
lcall
repz
add
mov
push
lcall
repz
mov
or
iret
push
mov
mov
and
lcall
and
adc
clc
xlat
lret
lret
inc
add
pusha
fwait
push
lret
jo
js
push
add
iret
push
nop
addr16
push
rcrb
cmpsl
pusha
pop
pop
or
gs
js
or
mov
mov
add
in
leave
leave
in
cli
add
push
add
insl
in
sbb
pushf
dec
xor
xadd
addr16
pushf
pushf
adcb
cmp
repnz
pop
xchg
mov
pop
xchg
or
enter
mov
cmp
pushf
pushl
sub
add
push
cs
popf
popf
xchg
add
jne
inc
pop
mov
rcr
and
push
daa
push
setge
mov
popf
xchg
xchg
cmpsl
orb
dec
mov
jnp
cwtl
add
cmp
mov
mov
jae
fildl
fmulp
xchg
pop
sahf
pop
push
add
push
insl
cmp
daa
das
sahf
lcall
push
cvtps2pd
in
popf
push
add
fwait
jecxz
adcb
pop
test
cmp
lret
in
leave
neg
cs
xchg
lahf
pop
jp
stc
cmpb
lahf
enter
pop
cmp
mov
cltd
loopne
lahf
pop
or
mov
xlat
xchg
addr16
popf
jae
in
rcrl
outsl
leave
lahf
fldt
lahf
daa
rcrl
shll
pushf
dec
and
cld
pop
add
fsts
mov
test
mov
mov
dec
dec
xorps
pop
add
addr16
outsl
lar
jns
fimuls
divb
shlb
mov
jbe
dec
mov
dec
mov
mov
imul
xor
mov
ja
addr16
inc
pop
inc
xchg
jbe
cmp
jp
test
test
xor
ja
pop
leave
jae
fldenv
jo
inc
xor
xchg
mov
cmp
into
xor
cmp
push
int
add
iret
mov
jg
daa
andb
seto
push
mov
test
mov
repnz
mov
psllw
mov
ror
lcall
iret
sbb
sbb
add
xor
cmp
pop
bound
sgdtl
dec
dec
mov
push
mov
outsb
mov
aas
js
psllq
xchg
or
mov
push
iret
repz
nop
pop
cwtl
sbb
cmp
mov
sbb
mov
mov
dec
mov
fs
and
push
push
aaa
adc
sub
push
push
mov
push
out
daa
js
push
aad
adc
sbb
fstps
mov
xchg
jbe
movsb
mov
mov
push
add
rorb
pop
fsub
movsb
push
psubw
das
call
cmp
xchg
adc
movsl
sbb
adc
inc
inc
movsl
sbb
mov
fsubl
cwtl
mov
mov
movsl
dec
in
jns
iret
into
push
fimull
loopne
fcmovne
stos
and
iret
iret
insl
in
cmp
dec
push
cmp
repz
pop
jb
jp
frstor
cmpsb
pop
mov
jb
cmpsb
bound
leave
repz
pop
lcall
stos
adc
mov
leave
ret
shlb
and
mov
enter
mov
loopne
cmpsl
push
pop
jae
add
cmp
cmpsl
fisttps
push
push
sahf
out
sahf
add
gs
dec
insl
dec
jne
or
jns
out
xchg
or
or
leave
inc
repnz
adc
ret
leave
leave
lret
xchg
shlb
dec
and
add
ds
or
das
inc
fidivs
or
sub
xor
daa
or
sbb
xorl
inc
xchg
or
or
xchg
into
fidivrl
dec
or
mull
dec
repnz
jmp
shll
push
test
ja
and
dec
cwtl
add
test
test
mov
test
insl
mov
inc
ja
inc
iret
inc
push
add
inc
es
int
insb
ret
dec
pusha
mov
jg
pop
mov
cmp
repz
loope
dec
mov
jmp
icebp
rcll
or
xor
mov
fcmovne
sub
xor
lsl
loop
into
push
ret
stos
fisubl
mov
sahf
xchg
out
fistpll
das
mov
push
sbb
pushf
adc
push
mov
cmp
xlat
push
add
in
xchg
das
imul
in
ss
stos
mov
xchg
pop
fwait
or
out
or
stos
push
push
inc
shrb
fmuls
mov
stos
das
lock
sti
mov
and
das
add
cmp
jmp
sbb
lods
add
push
sahf
xchg
je
pop
dec
out
add
out
push
out
cmp
push
or
cmp
cwtl
or
cmp
mov
ljmp
lds
add
addr16
fmull
xor
cmovo
sahf
xchg
out
add
js
pop
jb
cmp
les
aam
mov
pop
pop
xchg
and
loopne
call
xchg
fcmovne
adc
push
push
mov
pop
clc
insl
in
xchg
lods
add
adcb
push
dec
xchg
push
leave
adc
nop
scas
leave
leave
leave
enter
test
xchg
fcmovne
leave
ror
psllq
fimuls
jbe
psubq
scas
femms
pushf
pushf
pushf
pushf
push
xor
pushf
pushf
xchg
mov
fmuls
sahf
pushf
cld
and
jns
jo
js
iret
sub
mov
mov
xchg
out
cmp
jecxz
and
iret
sbb
mov
mov
push
add
test
es
inc
mov
push
add
dec
cs
dec
andb
inc
mov
mov
out
lret
sub
das
int3
xchg
add
mov
pop
mov
sbb
jb
lss
mov
inc
mov
dec
mov
or
jb
repnz
jp
jbe
jb
nop
sahf
lods
mov
out
cmp
scas
lea
daa
incb
mov
push
xchg
xchg
xchg
xchg
mov
mov
mov
mov
adcl
add
push
mov
pop
mov
lcall
mov
out
dec
mov
cmpsb
mov
jo
mov
pop
test
mov
mov
rcr
dec
dec
dec
dec
call
adcb
das
or
jns
mov
mov
mov
mov
jp
jns
mov
mov
mov
mov
mov
mov
mov
push
sbb
cmp
repz
sbb
iret
repz
sbb
mov
iret
repz
mov
cmp
repz
and
and
iret
repz
and
cld
testl
mov
push
sub
jae
je
sbb
sub
sub
addr16
cs
xor
popf
jno
pop
pop
out
leave
repz
pop
jo
js
xchg
dec
mov
or
xchg
jl
int3
stos
mov
sbb
xchg
out
iret
int3
setae
pop
sgdtl
mov
adc
in
int
adc
scas
add
es
int
mov
cmp
jns
cmp
cmp
stos
pushf
mov
pop
mov
cmp
inc
cmovge
push
mov
out
pop
dec
adc
pcmpeqw
outsb
repnz
xchg
add
fwait
aas
hlt
in
jbe
xadd
std
mov
repz
dec
dec
add
sbb
leave
leave
and
xor
cmp
mov
add
jno
jbe
jns
pop
outsb
daa
data16
xchg
pop
dec
sahf
out
lahf
cmpsl
sub
jecxz
out
jns
jmp
xor
mov
das
mov
jns
sahf
ja
push
xor
fsubrp
in
movq
nop
cmp
cmp
mov
xchg
bound
mov
insb
ja
iret
iret
inc
jmp
sar
lret
lret
lret
subl
and
leave
lret
dec
mov
repnz
cltd
shld
leave
leave
leave
inc
shr
icebp
outsl
in
jb
and
pushf
pushf
cmp
inc
dec
add
popf
cmp
push
add
je
out
orl
ud2
outsb
daa
iret
repz
or
scas
pop
mov
enter
in
dec
sahf
adc
hlt
adc
cmp
das
lock
sbb
jae
sub
sbb
sbb
iret
jae
inc
dec
sbb
repnz
insl
js
or
cmp
mov
lret
lret
movsb
mov
cmpsl
sub
leave
mov
sub
add
js
inc
and
cmpb
mov
punpcklbw
add
push
push
jo
js
xor
sahf
mov
adc
sahf
mov
pop
or
jns
iret
mov
enter
repz
in
lar
pop
cmp
into
call
mov
fucom
insl
dec
sbb
sbb
loopne
inc
rcl
jg
daa
in
add
rcr
adc
mov
mov
rdpmc
cmp
inc
mov
pop
dec
mov
daa
iret
mov
jle
mov
mov
mov
push
je
daa
mov
mov
xchg
ftst
and
add
testb
or
sbb
xchg
sub
aad
addr16
test
push
mov
in
pop
outsl
push
ja
inc
repnz
or
aas
leave
jae
jb
stos
add
daa
daa
daa
pop
int
fucom
in
jmp
xchg
xchg
shlb
leave
insl
adc
sbb
rolb
inc
ja
push
ss
aad
xlat
mov
adc
jle
out
rcrb
or
sahf
push
cmpsb
push
in
cmp
mov
enter
mov
xlat
loope
icebp
popf
mov
sarl
sbb
jb
cmpsl
and
sub
xor
mov
mov
mov
mov
pop
addr16
outsl
ja
pop
leave
jae
jg
int3
mov
stos
add
jbe
pop
lret
fcmovb
push
pushf
in
pop
loop
sbb
jg
inc
into
dec
add
adc
xchg
out
add
xchg
out
cmp
enter
push
ret
mov
cmp
idivl
mov
nop
mull
xchg
iret
in
cwtl
xchg
add
dec
dec
dec
ret
lret
rcr
dec
cs
dec
push
incb
ret
in
dec
data16
push
add
mov
ret
iret
pushf
cmpsl
dec
xchg
sahf
ja
jbe
pop
add
xchg
iret
in
and
sub
dec
fmuls
lahf
cmpsl
xlat
in
test
aas
shl
jbe
in
ficompl
loop
ljmp
add
or
xor
cmp
into
leave
inc
repnz
pusha
push
push
les
ds
add
daa
iret
cmp
je
sbb
xchg
add
or
push
aaa
jns
out
add
add
lret
cs
into
inc
lret
lret
dec
lds
arpl
outsb
lds
lds
movsl
mov
iret
mov
mov
mov
fadd
out
repnz
or
adc
push
mov
xor
aas
dec
xchg
xchg
outsb
mov
sbb
daa
daa
mov
aas
sbb
sbb
daa
daa
daa
daa
push
adc
repz
sub
sub
repz
inc
ja
rorb
sysexit
aas
push
pop
psllq
repz
mov
cmp
cmp
cmp
cmp
in
out
inc
iret
jnp
repz
inc
sahf
add
jns
idivl
inc
fisubs
inc
xor
iret
cmp
inc
jae
dec
repz
dec
cs
dec
jns
fcmovne
lahf
stos
lgs
out
sahf
out
lret
push
push
enter
loope
testl
leave
or
daa
daa
dec
pop
cmp
mov
fbld
mov
ss
enter
stc
scas
test
mov
mov
cmp
push
aas
rcrb
push
fsub
rcr
leave
repz
lock
pop
and
sbb
pusha
leave
push
jns
leave
push
jo
inc
into
pop
add
or
adc
sbb
leave
repz
adc
xor
jns
out
cmp
inc
dec
push
out
daa
iret
sbb
push
sbb
sbbl
loopne
add
xor
mov
leave
pop
call
repnz
clc
add
xchg
scas
decl
lret
push
or
cmpb
pushl
dec
jb
push
daa
xchg
enter
outsl
lret
enter
lret
in
in
clts
orb
enter
push
loopne
outsl
mov
sub
lret
mov
mov
ret
mov
daa
lret
xchg
pop
jecxz
pop
or
mov
jns
add
lret
into
push
and
and
lret
mov
lret
inc
inc
out
inc
lret
lret
lret
in
inc
inc
lret
mov
in
popf
mov
mov
daa
mov
mov
aad
loopne
sahf
out
pop
jmp
neg
push
mov
or
pop
cmp
cmp
inc
rcll
pop
pcmpgtb
cs
iret
repz
nop
push
sbb
iret
repz
xchg
out
sbb
shlb
daa
iret
cmp
call
repz
outsl
wbinvd
int
push
pop
or
daa
iret
daa
sub
dec
push
sbb
sub
loop
enter
mov
mov
ret
push
add
frstor
pop
leave
iret
or
jecxz
fs
add
lock
and
sub
inc
dec
sahf
out
push
push
dec
pop
pop
jl
jbe
syscall
or
xchg
xor
into
test
iret
repz
nop
pop
movups
repz
mov
mov
repz
push
rcr
call
repz
iret
dec
or
cmp
xchg
outsl
movhps
pop
pop
jns
cmpsl
fwait
mov
and
inc
push
and
push
push
es
leave
and
daa
fisubrs
push
cmp
repz
ja
push
subb
sub
cmp
repz
add
dec
lcall
add
sub
in
add
pop
das
das
in
in
pushf
loop
ror
jg
iret
out
daa
iret
mov
cld
pop
shl
push
outsl
or
sub
ja
pop
inc
into
sarb
inc
push
push
dec
or
add
call
xchg
rcl
push
add
add
xchg
xchg
or
dec
loop
add
jmp
pop
add
and
aas
push
rcl
rcrl
in
iret
xor
cmp
inc
shl
inc
mov
rcrl
push
ror
sbb
movsb
push
rcl
shrl
shl
mov
fldt
add
js
sarl
psubq
or
xchg
jl
js
and
sub
or
inc
mov
rolb
mov
fs
rcl
aas
insl
pop
add
xlat
jae
cmp
scas
mov
mov
cmp
jns
adc
jl
out
icebp
push
cld
pop
pop
shll
sbb
sbb
sahf
out
ds
sbb
out
push
and
fisttpll
out
and
jns
out
and
xchg
out
sahf
ret
sub
sub
push
sbb
aad
rorl
das
cs
xor
inc
cmp
mov
sqrtps
pop
pop
pop
mov
aam
aam
aam
mov
setle
or
or
outsb
daa
aad
loopne
divb
inc
dec
add
out
or
pop
aad
xor
and
cmovle
gs
das
dec
dec
test
pop
cmp
leave
repz
sbb
jns
leave
repz
and
fwait
push
and
and
iret
es
daa
iret
jae
sub
repz
and
adc
das
popf
cmp
in
xor
iret
jae
mov
popa
ss
iret
adc
daa
ja
adc
cmp
jmp
xchg
add
mov
push
popa
dec
mov
push
mov
push
sbbl
push
add
aas
inc
push
es
inc
sbb
xchg
push
push
lret
scas
pop
inc
xchg
dec
push
or
aaa
dec
aaa
cmp
sarl
push
add
psllq
jae
sbb
cmp
or
or
or
in
or
or
mov
daa
adc
adc
cmp
das
and
fucomi
jbe
addr16
das
push
xorps
outsb
imull
push
and
outsb
daa
iret
sbb
push
pop
andb
outsb
mov
jb
cmp
jns
xchg
sub
pop
jo
cmpsl
mov
into
aas
xlat
xor
data16
fldl
add
repz
adc
push
inc
cmp
xor
repz
xor
and
or
sahf
out
ds
call
jns
out
aam
int3
iret
repz
out
rcrb
test
ja
cmp
cwtl
nop
push
mov
je
pusha
push
push
icebp
jns
out
inc
sub
or
sub
adc
push
mov
xchg
sbb
adc
inc
add
adc
test
push
inc
int3
mov
sbb
dec
xor
pop
mov
fsts
adc
sub
testb
add
in
leave
andb
fisttps
mov
cld
push
std
pop
scas
inc
jle
test
shll
int3
push
cmp
repnz
cmp
mov
in
call
out
adc
mov
ficompl
mov
fisttpl
fidivl
rcr
fsubp
stc
jb
jle
add
xchg
mov
out
mov
or
add
pop
add
sbb
adc
fdivrp
ficomps
sub
cli
inc
daa
pop
jle
movhps
insb
sub
mov
insb
xor
push
push
mov
pop
add
push
add
pop
push
dec
lock
les
or
jns
adc
out
adc
adcb
sbb
inc
iret
sbb
ds
in
out
sahf
out
sbb
xor
cmp
out
fsubr
mov
mov
push
js
ljmp
in
decl
cmp
push
clc
into
xor
call
push
sahf
icebp
aas
je
inc
pop
cwtl
cli
mov
sbb
into
or
add
mov
push
dec
clc
push
xorb
dec
push
jne
iret
push
push
pop
inc
cmpsb
jnp
test
add
inc
push
xchg
aas
pop
pop
push
aad
xlat
pop
xor
push
in
push
sub
cs
cmp
jg
jl
insl
add
and
out
fcoms
sub
add
sub
pop
dec
inc
inc
sub
repnz
inc
icebp
dec
push
sbb
or
mov
pop
movsb
add
pop
push
and
jns
clc
add
xor
jnp
repz
ds
jmp
iret
in
lock
jnp
repz
push
or
add
push
cld
adc
iret
loopne
push
hlt
sbb
jns
addr16
push
sbb
push
out
sahf
out
pop
mov
jns
and
das
push
out
es
pop
inc
into
test
in
nop
xor
orb
pop
jbe
aad
daa
xor
cmpsb
cld
xorb
dec
movsb
xor
add
push
seta
cmp
jmp
fistl
cmp
pop
js
imul
repz
xor
out
insl
add
mov
xchg
mov
jmp
out
sbb
das
push
dec
insb
add
add
mov
add
enter
in
ds
pushf
or
ret
mov
adc
stc
and
adcb
sbb
leave
sbb
dec
mov
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
jmp
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
inc
mov
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
call
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
jmp
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
lds
mov
cmpsb
lock
mov
popa
sar
mov
fsubs
stos
add
call
mov
outsb
dec
leave
fwait
xchg
and
and
dec
bswap
add
sti
aas
jno
or
mov
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
incl
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
ljmp
xchg
cmp
push
mov
xchg
aas
in
jg
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
pushl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
jmp
push
ja
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
fmull
call
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
decl
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
pushl
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
push
decl
gs
std
orl
pop
ficomps
frstor
mov
out
pop
pop
inc
shll
pslld
insb
inc
inc
push
dec
jnp
sub
add
call
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fisttpl
movsb
mov
aad
mov
rclb
mov
sub
mov
pushl
push
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
ljmp
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
dec
pushl
inc
leave
mov
insb
fdivs
jne
filds
or
sar
out
cli
stos
lods
xor
es
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
adc
stos
sbb
popa
sarl
fdivl
jno
add
aad
mov
mov
movsl
in
xchg
cmc
mov
call
xor
adc
call
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
incl
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
decl
fistps
ficoml
gs
aam
pop
popa
mov
into
pop
mov
je
mov
aam
movsl
fisttps
fadd
shll
call
push
imul
mov
sarb
add
in
add
pop
dec
or
fnstsw
add
daa
adc
or
and
test
or
mov
popa
dec
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivr
pushl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
ljmp
sbb
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
mov
mov
shll
push
repnz
addr16
cmpsb
fldl
pushl
dec
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
xor
imul
andl
shrb
rclb
or
add
loopne
incl
mov
das
es
lds
or
add
pop
loopne
push
pop
cmpsl
call
ret
shlb
scas
ficomps
ret
es
push
arpl
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
jp
loop
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
jmp
aam
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
hlt
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
lcall
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
fldt
fcompl
fldenv
filds
push
xor
aaa
pusha
mov
fidivrs
popf
push
hlt
iret
mov
jmp
mov
xor
call
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
and
lcall
push
sub
mov
or
sbb
add
sub
test
mov
xor
dec
inc
cmp
cs
mov
aad
cmp
repz
fcomi
cmp
repz
fsubp
jecxz
iret
jae
in
call
iret
repz
in
repz
iret
repz
cmc
div
clc
stc
cli
popa
mov
daa
adc
jo
adc
mov
cmpsl
lods
subb
adcl
rorb
mov
bound
sub
bound
inc
inc
out
add
bound
inc
pop
mov
push
popa
add
xor
inc
inc
in
cltd
out
cltd
sbb
aas
and
inc
dec
sub
fistpll
jns
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
pop
cmp
pop
xor
xor
or
xor
bound
pop
xor
popa
push
inc
inc
pop
fdivr
jbe
pop
insb
imul
push
insb
gs
push
dec
inc
mov
add
push
inc
sbb
jb
sbbb
stos
loope
popa
or
mov
gs
je
scas
mov
push
jbe
mov
inc
aas
fisttpl
xor
gs
and
inc
dec
mov
js
addb
sub
mov
xor
insb
popa
jns
xchg
insb
add
pop
addr16
loope
addb
in
pusha
ljmp
mov
or
cltd
out
inc
mov
jae
daa
int
or
inc
aas
inc
add
xchg
sbb
fs
inc
inc
es
mov
inc
pop
je
jbe
jae
inc
inc
inc
add
ds
cmpsb
in
adc
scas
add
shrl
pop
mov
cmp
dec
push
dec
cmp
inc
mov
pusha
stos
or
jb
mov
movsb
xchg
inc
outsb
jne
push
popa
push
mov
pop
fnstenv
add
add
or
adc
xor
addr16
clc
rcr
mov
jo
sahf
inc
cmp
inc
cmp
aas
aaa
leave
cli
adc
push
mov
gs
mov
or
pop
sbb
adc
mov
xor
cmp
mov
mov
inc
mov
scas
or
ss
out
jb
mov
add
addr16
and
xor
jo
andl
outsl
outsl
test
mov
push
sti
ss
jno
push
inc
adc
dec
mov
es
or
nop
test
pop
cmp
push
dec
xor
arpl
cmp
mov
jo
push
push
add
jns
inc
mov
jb
pop
push
add
gs
notl
outsl
arpl
insb
daa
sub
mov
xchg
mov
in
bound
ja
inc
jbe
shrb
xor
cmp
leave
imul
xor
shll
and
daa
das
xor
sahf
pop
decl
ret
inc
add
inc
add
push
xchg
jg
rolb
and
or
inc
outsl
lret
xor
xor
inc
dec
and
xor
push
pop
pop
adc
loope
mov
sbb
pop
mov
rclb
inc
push
inc
dec
mov
pop
bound
outsb
arpl
inc
inc
inc
or
pop
pusha
shrb
in
insl
add
jne
push
pop
fisubrl
inc
xchg
fildl
flds
pop
adc
negl
push
pushf
push
daa
sub
fs
mov
pop
push
add
push
adc
xorb
addb
xlat
incl
add
add
sbb
sarl
dec
cld
fcompl
xor
lcall
repnz
push
and
add
xlat
bound
fistpl
in
andb
jge
addr16
sub
mov
adc
sbb
stc
ret
into
or
or
jo
pushl
ret
adc
mov
mov
inc
push
dec
xor
xor
mov
cld
jmp
lcall
adc
jge
test
outsl
push
lret
mov
inc
ret
or
xor
dec
cltd
add
call
add
sub
iret
in
lcall
and
fcmovu
test
rcrb
inc
pop
test
call
adc
loopne
js
pop
and
or
jle
jl
sbb
add
mov
dec
ljmp
nop
clc
mov
xlat
lods
add
icebp
test
repz
out
and
dec
outsb
xlat
push
nop
icebp
jmp
rol
leave
lods
insl
mov
sub
call
sub
jo
xor
sub
cmp
mov
int
cli
cmpsl
fisubs
mov
mov
inc
out
inc
notb
sub
out
in
jno
in
xchg
call
aaa
sbb
ljmp
inc
push
push
test
out
mov
jmp
push
ja
mov
fsubr
in
cmp
sbb
inc
scas
mov
movmskps
cmp
sbbb
add
test
lret
arpl
cld
call
mov
push
fsts
jo
jl
mov
and
in
mov
lcall
in
push
int
pop
dec
jecxz
ljmp
or
incl
sbb
add
movl
xor
gs
mov
sarl
xchg
cmp
add
divb
sbb
jle
daa
mov
lcall
pop
fs
ret
xchg
mov
xor
xchg
or
pop
pop
mov
sarb
jmp
jg
loopnew
mov
int
pop
fcmove
adc
mulb
add
cmp
insb
aad
mov
fwait
aas
push
or
lcall
rcll
xor
inc
jmp
sub
call
and
sub
xor
or
jo
sbbb
mov
pop
jmp
mov
push
pop
push
dec
sbb
jne
iret
aas
not
and
xchg
xor
adc
dec
in
call
sbb
pop
out
loopne
and
add
mov
cmp
cmp
jb
xchg
xchg
in
stos
add
mov
js
cmp
in
xchg
ss
pop
incb
xchg
outsl
test
out
dec
into
gs
sub
xor
or
add
xchg
jb
or
adc
mov
lcall
cmp
cli
js
or
test
push
dec
jne
in
add
cmp
lods
test
call
aad
call
sahf
or
xchg
dec
ret
push
ja
test
call
jmp
xorb
movsb
sbb
cmp
aaa
jle
jnp
mov
pop
fistl
cld
ljmp
dec
arpl
mov
inc
mov
jmp
xor
sub
jp
incl
mov
adc
xchg
nop
fiaddl
push
hlt
push
mov
stc
jno
inc
cmp
fmull
pop
sahf
pop
mov
sahf
pusha
inc
push
enter
cmp
xor
dec
out
xor
stc
mov
fwait
addb
adc
popa
cmp
pop
insb
test
jmp
nop
rcrb
jnp
mov
pusha
stos
inc
dec
and
ret
das
sub
jmp
dec
xchg
inc
xchg
cmpsb
fdivrl
ja
ds
insb
cwtl
adc
movsb
mov
add
inc
inc
sub
fcmovu
inc
ss
fcompl
dec
pop
jl
fisttpl
cs
fsubrs
mov
je
dec
or
pushl
loope
or
dec
lds
cmp
ljmp
mov
push
andb
fwait
pop
loope
insb
mov
sarl
push
dec
lcall
decl
cmp
aas
es
lahf
arpl
pop
cs
pop
mov
ljmp
decl
mov
pop
pop
pusha
inc
inc
fwait
aam
and
hlt
in
in
push
mov
push
loopne
push
or
aad
stc
add
data16
pusha
je
ljmp
jg
push
adcl
test
lods
les
inc
and
jle
or
jl
out
dec
sub
sub
xchg
lcall
jbe
repnz
and
mov
inc
lcall
adc
xor
inc
xchg
cmp
pop
inc
iret
fcoml
cli
jp
pop
and
jnp
test
call
dec
dec
dec
mov
push
lahf
jne
fcmovu
loope
lods
incl
adc
ljmp
fidivrs
inc
mov
cmp
ljmp
cld
ljmp
add
imul
rolb
cwtl
xchg
out
inc
xchg
pop
addr16
movsl
out
push
mov
push
xchg
jne
scas
popa
repnz
jmp
mov
cmp
cli
push
xor
ljmp
and
pusha
pop
add
mov
mov
movsb
stos
call
fdivrs
mulb
test
dec
jl
sub
testb
push
push
push
in
outsl
xor
cmp
mov
mov
push
adc
jg
ljmp
jg
enter
ja
mov
xchg
lcall
xchg
fmul
shrb
xlat
sub
and
je
shlb
pushf
mov
movsl
lock
inc
bswap
jmp
jnp
mov
outsl
dec
jl
je
clc
mov
mov
push
or
add
out
mov
js
loope
mov
mov
roll
pop
xchg
sub
addr16
clc
pop
fisttpll
pop
bound
push
jmp
cwtl
call
pop
inc
mov
xor
daa
pop
mov
pop
jnp
ss
shll
andl
bound
test
aas
jbe
inc
bound
mov
shlb
daa
adc
jg
inc
fbld
andl
sub
outsl
ljmp
pop
call
das
cmp
out
jecxz
iret
mov
ja
cli
adc
xchg
xchg
and
cmp
xor
add
test
rcrb
pushf
push
jmp
ljmp
stos
orb
jge
jmp
lods
clc
jp
cltd
sub
in
mov
in
pop
pop
stos
repnz
mov
cmp
dec
int3
mov
fwait
jae
xor
cld
out
loopne
adc
dec
add
popf
xor
jo
push
dec
loope
pop
popf
inc
jns
insl
xchg
ret
iret
lcall
mov
jl
fildll
inc
push
lods
push
jb
scas
dec
mov
sub
and
stos
push
inc
rcl
mov
je
sar
aas
mov
jmp
mov
fs
les
imul
popf
sub
pinsrw
dec
add
sbb
push
add
or
xor
dec
loop
mov
stos
sub
jbe
jg
sbb
dec
cmpsl
out
sub
lahf
mov
mov
imul
mov
mov
cmpsl
lahf
ret
mov
cmp
jmp
sbb
fbld
mov
xlat
and
sbb
fldl
hlt
mov
fs
ds
mov
cmp
clc
fwait
push
mov
lock
int
push
jno
pop
dec
push
add
dec
or
adc
out
clc
adc
push
fucomip
pop
popf
dec
cmp
lods
gs
push
push
pop
movsb
iret
mov
pushl
mov
jo
xchg
insl
stos
lock
scas
gs
fisttpl
repnz
and
mov
sbb
xchg
or
out
pop
in
add
shr
inc
hlt
std
xchg
jno
jmp
mov
leave
data16
ds
dec
in
sti
shl
jmp
jne
into
mov
aaa
mov
pushl
push
inc
jae
inc
sub
imul
and
out
in
flds
mov
cmp
popa
or
mov
mov
xor
ret
adc
dec
cmp
jmp
xchg
aaa
hlt
shlb
cmpsl
mov
bound
ficomps
push
push
push
mov
std
fidivrl
push
lods
sbb
jl
shr
into
das
mov
mov
xor
mov
sub
xchg
jns
inc
add
rcl
pop
hlt
ja
outsb
in
sub
test
fwait
clc
shll
decl
dec
pusha
scas
mov
fistpll
outsb
lret
and
xchg
cwtl
adc
jo
mov
out
jecxz
les
int
dec
pop
add
or
aam
test
sub
popa
ljmp
les
jg
xchg
jp
std
cmpsl
sbb
jmp
loop
and
sub
aas
andl
jo
fcomip
call
mov
or
orb
and
inc
and
sbb
outsl
xchg
mov
inc
ljmp
mov
xchg
roll
ds
sub
je
xorb
mov
or
mov
ja
jb
push
and
add
add
arpl
xchg
arpl
push
or
arpl
cmp
aaa
mov
lret
xchg
rep
jl
je
outsb
xchg
std
ljmp
outsl
pop
outsb
add
popa
outsl
jo
int
push
stos
dec
mov
into
popf
sbb
jne
and
xor
mov
rclb
div
xchg
les
push
ljmp
or
push
dec
mov
pop
add
mov
jmp
icebp
dec
adc
daa
fstp
inc
dec
and
aam
fsubrl
mov
movsl
push
xor
decl
fcomi
imul
mov
sub
fsubs
lock
or
repnz
and
fsts
push
iret
lret
inc
push
addr16
sbb
stos
push
jns
xchg
fistl
enter
adc
jbe
xor
aad
and
lods
dec
inc
inc
arpl
sar
and
shll
inc
push
dec
sbb
movsl
cmp
sbb
movsb
jbe
xlat
dec
incb
sarb
pop
sub
pushf
adc
call
adc
or
mull
cmp
rorb
push
cmpsb
jne
in
outsl
movsb
popa
jl
sub
incl
repz
xchg
stos
ret
push
ds
jle
pop
or
icebp
fnstcw
lcall
inc
cmp
sbb
mov
jmp
fiaddl
cltd
inc
scas
addr16
mov
ud2
cli
je
lret
dec
out
xchg
lret
pop
in
xor
mov
repnz
add
loope
ljmp
pop
aas
std
out
stos
adc
jne
jg
dec
dec
dec
or
jmp
idiv
call
rorb
ret
cmpsl
mov
lods
lret
test
aam
in
and
mov
cli
fnop
jmp
lods
xor
push
incb
xor
xor
or
out
daa
aam
lods
dec
xchg
nop
sub
movsl
mov
imul
stos
mov
jno
lea
das
push
gs
outsl
outsl
pushl
lcall
movsl
mov
popf
xchg
lahf
mov
aad
ficoml
mov
mov
or
add
movsb
sbb
mov
push
push
shll
xor
dec
adc
lock
and
hlt
pop
xchg
or
testl
jge
sub
pop
inc
mov
test
pop
xorl
movsl
pop
repz
and
sub
mov
roll
mov
add
int
inc
ret
dec
inc
imul
mov
xor
pushl
dec
clc
lahf
loope
repz
fldcw
sbb
cs
push
scas
es
pop
and
sub
mov
dec
insb
out
rol
cs
cmp
mov
call
sub
dec
pushw
dec
es
aas
es
out
scas
mov
jns
mov
sarl
jo
jecxz
mov
mov
lock
adc
rclb
out
ljmp
lds
popf
loopne
jno
rcrl
insb
mov
loopne
ds
aam
cltd
mov
test
adc
arpl
mov
pop
mov
std
rol
cli
lcall
jbe
mov
hlt
add
aas
clc
sub
xor
out
mov
dec
out
or
mov
mov
sub
aam
call
popf
sub
xchg
sbb
cmpsl
dec
mov
dec
push
outsl
mov
sub
jo
fisubs
add
sbb
lret
mov
ss
xchg
cmp
pop
mov
lahf
mov
fdivr
ret
pop
fwait
mov
mov
push
pop
dec
pop
sbb
lret
incl
out
movsb
mov
sbb
dec
ljmp
mov
dec
fsubr
dec
hlt
cld
les
lcall
std
mov
adc
mov
jg
push
lods
ljmp
daa
testl
testb
lahf
cmp
push
aaa
std
jmp
dec
xor
mov
filds
ljmp
ds
adc
ljmp
aam
mov
mov
sti
bound
xor
mov
push
sti
mov
jns
jp
loope
loopne
mov
push
outsb
jnp
pop
loopne
pop
ror
dec
cmc
xor
decl
fildl
xor
push
mov
loope
pop
in
mov
je
popa
ret
add
push
mov
xor
fcomip
lcall
imul
sub
push
pop
mov
inc
jl
pop
es
xor
ljmp
shrl
test
pop
inc
in
inc
mov
add
ja
mov
pushl
aas
xchg
pop
pop
dec
pop
or
xchg
push
xor
ja
sti
les
call
add
push
stc
push
and
push
jecxz
ret
testb
test
mov
lcall
jbe
sbb
stos
addr16
out
bound
movsb
inc
iret
sbb
cmc
push
cmp
imul
movsb
cwtl
lcall
sub
mov
and
pushl
add
lcall
xchg
rcrl
jbe
xor
cmpsl
pop
enter
ljmp
rcll
xchg
pusha
push
mov
mov
fs
mov
fnstsw
add
mov
repnz
push
outsb
lcall
sbb
out
loop
mov
dec
test
lret
mov
ljmp
push
les
sub
out
add
mov
leave
add
mov
pop
pusha
popl
les
push
fld
popf
cmp
addr16
jns
fidivrl
mov
icebp
shll
cwtl
sub
xor
stc
mov
push
shrb
push
pushl
fnsave
ret
test
repnz
lods
sbb
sarl
pop
sbb
ljmp
mov
jp
adc
lahf
xorb
enter
js
rorb
mov
call
cld
push
push
es
loop
in
or
mov
ss
enter
mov
sub
std
jnp
sub
mov
and
push
ljmp
cmp
jecxz
repz
add
mov
mov
mov
dec
mov
inc
and
jae
out
call
pop
std
mov
mov
into
leave
lock
mov
fs
jg
popf
push
and
xchg
add
data16
mov
aam
inc
gs
xor
or
insb
aad
mov
lock
mov
idivl
xor
push
iret
movsb
stos
fnop
scas
ljmp
in
adc
fmul
dec
setno
and
mov
push
out
sarl
or
inc
lods
out
call
rol
test
rorl
rcll
push
adc
ds
inc
mov
push
enter
jmp
xor
mov
lahf
add
xlat
cli
bound
sti
mov
jl
stos
or
push
out
pushf
lcall
cmpsb
test
push
push
adc
sub
lret
mov
ss
jmp
adc
mov
cld
xor
sub
xchg
sbb
sub
out
incl
loopne
pushf
nop
xorl
inc
adc
mov
or
out
sub
xor
pop
xchg
jmp
test
mov
int3
adc
in
push
daa
xlat
dec
push
dec
orl
lcall
jg
jg
push
adc
scas
rcl
xchg
dec
adc
ljmp
jmp
push
mov
frstor
cmp
mov
push
shrl
add
dec
dec
adc
dec
in
icebp
fistpll
decl
mov
jo
jge
je
repnz
loopne
jae
lock
les
dec
imull
stc
pop
sbb
pop
shrl
loopne
cmpsb
cmp
jl
cmp
dec
ret
mov
inc
js
aam
ds
xchg
and
push
xor
xchg
loopne
mov
popf
inc
or
cmpsb
push
nop
call
sub
inc
imul
cmp
xchg
jecxz
mov
jge
mov
call
jp
push
inc
hlt
test
mov
sub
cmp
mov
js
das
and
ds
push
mov
mov
and
sbbb
aas
jl
xor
cmpsb
cld
dec
push
inc
pusha
repnz
inc
es
jl
mov
or
insl
aaa
shrl
fdivs
test
push
jb
popf
subl
lret
adc
filds
cli
push
xchg
aas
xor
fcomps
out
mov
insl
sbb
cmc
outsl
inc
dec
inc
in
mov
out
push
roll
fildl
dec
or
outsb
inc
loop
popa
ret
adcl
jmp
arpl
pushf
push
or
lock
das
aad
int3
test
decl
cld
sahf
test
xchg
out
add
cmp
mov
stos
push
lock
push
call
lcall
jmp
in
push
aam
out
popf
cvtdq2ps
dec
ljmp
xchg
stc
push
push
pop
adc
dec
lcall
leave
mov
cmc
js
leave
imul
sub
jp
dec
push
je
mov
or
or
int
pop
inc
insb
inc
decl
cmpsl
jae
jns
mov
incl
cwtl
mov
das
pop
mov
inc
movsb
push
xchg
xor
add
inc
cmp
sub
imul
dec
aam
adc
arpl
add
mov
call
jmp
jl
cli
or
out
arpl
addl
and
fcoms
incl
lea
and
outsl
or
push
repz
std
dec
pushf
loopne
repz
mov
mov
lret
cmpb
enter
mov
push
fcomps
sub
add
push
xor
ficoms
cmp
adc
mov
push
mov
arpl
jg
pop
je
add
adc
inc
ud0
jmp
inc
dec
aad
and
dec
push
test
cmp
fnstcw
sti
imul
mov
add
incl
int
push
adc
pop
jns
clc
sub
add
sbb
inc
lods
imul
incl
mov
sub
jbe
fcmovbe
int3
mov
cmpsl
int
adc
mov
cmp
daa
in
mov
call
mov
loope
aaa
ret
js
mov
sbb
mov
push
push
add
lock
pop
lea
subl
jae
ret
add
push
stc
bound
dec
cli
mov
test
pop
addl
dec
adc
pop
iret
mov
scas
pop
shl
cwtl
lea
call
jnp
adc
ret
jae
cli
sbb
jecxz
sar
dec
into
add
lcall
inc
pop
in
fisubs
ds
mov
int3
pop
xchg
or
mov
jg
cmp
inc
dec
lcall
xchg
int
fadds
mov
add
sub
call
fildll
loop
cmp
pop
lds
push
cmp
bound
add
add
insl
mov
inc
xchg
add
jb,pt
cmp
push
push
roll
add
and
and
push
rclb
inc
inc
fsubr
ret
sub
push
sub
mov
decl
daa
icebp
and
addr16
bound
xchg
xlat
in
push
lods
std
sub
push
jae
and
mov
inc
js
inc
out
dec
ljmp
jb
loop
or
adc
frstor
inc
pop
in
in
cmp
and
fimull
jmp
sahf
scas
adc
xchg
shr
add
je
das
sbb
mov
pop
jp
adc
add
or
sti
mov
fxch
or
push
mov
popf
inc
pop
mov
mov
leave
scas
fsubrl
lcall
jmp
adc
and
jo
sbb
fsubrl
mov
mov
push
idivl
push
les
test
icebp
test
xchg
incl
sbb
gs
push
sub
sahf
decl
push
and
loop
xchg
popf
jecxz
add
cmp
cmp
pop
cli
and
pop
sub
lret
pushl
aas
shrb
cwtl
mov
lcall
icebp
adc
popf
mov
or
cld
cltd
jnp
sti
ds
adc
dec
pushl
xor
pop
or
cmpsl
ds
lock
pusha
sbb
xor
jle
stos
inc
lahf
sub
data16
leave
or
push
push
enter
pusha
and
add
adc
jg
mov
nop
movsl
jae
dec
data16
int3
inc
sub
enter
push
xchg
insl
push
mov
lcall
rorl
das
dec
mov
pushf
out
adc
mov
pop
lahf
sbb
cli
dec
xchg
fldenv
jns
cmp
fidivrl
out
call
xor
push
add
adc
cli
mov
mov
call
sub
rcrb
popf
sar
pop
push
xor
or
or
rorb
add
jno
jg
decl
into
adc
je
inc
and
fsubrs
cmp
iret
jne
jmp
jl
push
cld
jmp
psubusb
fimuls
cmpsl
push
aas
out
cmp
test
or
adc
aad
mov
es
in
mov
push
sbb
jle
popf
and
pop
testb
leave
or
jl
mov
mov
xlat
jge
push
sarl
incl
notb
movsl
xor
ljmp
push
pop
aad
repz
cmc
into
js
cld
jg
incl
dec
adc
sarb
outsb
addb
lock
pusha
xor
sub
or
push
jnp
in
adc
pop
adc
lahf
mov
mov
add
aas
or
mov
shll
cmp
test
adc
jae
pop
ror
inc
push
jmp
xor
leave
lret
decl
pop
add
rol
and
mov
xchg
dec
push
pop
mov
mov
push
lods
xchg
stos
std
movsb
mov
pushf
ja
jno
lods
and
stos
loopne
repnz
fistps
insl
js
cmp
and
dec
adc
es
fidivl
rorl
call
and
sbb
dec
repnz
xchg
push
je
cwtl
cs
incl
cmc
cmp
orl
lods
sub
lcall
pop
mov
les
dec
and
pop
xor
adc
ljmp
xor
push
or
decl
pushf
jb
mov
mov
inc
or
dec
repnz
pusha
cmp
call
xor
mov
xchg
gs
iret
arpl
sub
ljmp
rolb
xchg
cmpsl
call
sub
out
lret
sub
xchg
hlt
xchg
fldt
inc
out
xor
dec
ljmp
fidivrs
jmp
test
psrlw
cld
sbb
add
insl
aad
inc
ljmp
push
inc
lock
in
pop
cmp
data16
enter
shrb
out
and
add
ljmp
xchg
xchg
xchg
mov
int3
push
xchg
mov
mov
std
in
incl
rcrb
push
fcomip
xchg
pop
mov
mov
fmull
mov
dec
push
xchg
loopne
rcrb
out
dec
pop
sahf
push
maskmovq
mov
pop
xor
fnstsw
or
dec
or
pop
into
jne
shl
xor
mov
andl
cwtl
push
mov
mov
mov
cld
push
nop
dec
movsl
test
dec
lret
sub
xor
cmp
repz
jo
xchg
adc
lods
pop
sbb
ljmp
mov
mov
adc
pop
mov
xchg
pop
jne
dec
mov
pushl
stos
nop
hlt
std
clc
pop
insl
inc
loop
sti
jnp
lret
lods
mov
jae
arpl
movsl
mov
decl
fsubs
stc
rcrb
adc
push
xchg
and
and
push
mov
out
jne
cmp
xorb
popa
xlat
mov
mov
cmp
cmp
and
or
cli
push
dec
not
xor
jge
xor
clc
xor
mov
dec
add
sahf
ljmp
decb
sbb
sub
lret
faddl
addl
xchg
inc
lcall
push
loop
mov
sbb
std
pusha
cmc
dec
push
jns
in
in
pushl
dec
push
mov
fidivl
pop
jp
mov
test
mov
pushl
pop
loope
repz
adc
in
sub
mov
in
imul
mov
incl
mov
cld
leave
sub
stc
jge
push
ret
push
call
call
inc
icebp
cmpsl
xlat
in
dec
xchg
inc
lods
jmp
roll
mov
adc
adc
xor
ja
les
adc
loopne
mov
decl
lcall
push
ror
xchg
aas
mov
fldt
add
popf
mov
outsb
sar
pushl
jmp
aas
fiadds
gs
and
ret
nop
jle
imulb
gs
imul
ret
xor
pushf
mov
out
adc
bound
dec
sub
scas
call
adc
mov
push
mull
jns
inc
mov
call
aam
xchg
cmp
data16
push
inc
cmp
cmp
xchg
mov
lods
in
dec
aas
js
incl
int3
fstpl
addb
inc
adc
loopne
daa
ljmp
mov
ficompl
out
xor
call
loopne
mull
xor
cmc
ffreep
leave
xlat
sbb
jge
or
call
pop
jae
imul
cmp
cmp
xchg
imul
adc
test
and
incl
lods
sbb
enter
outsb
jmp
cmpb
in
fcos
call
lock
jle
popa
das
addr16
push
enter
aaa
inc
imul
stc
ja
jno
popf
fnstcw
dec
incl
jle
sti
inc
cmp
outsl
push
adc
sub
shlb
lcall
inc
jmp
mov
mov
lods
xchg
push
ja
rorl
push
pop
fwait
test
mov
ja
pop
adc
subl
sub
lods
adc
je
test
out
je
decb
push
adc
xchg
stc
lods
shl
aam
xorb
cmp
fisttpl
mov
in
jp
xchg
pop
or
lods
pop
fwait
sbb
imul
stc
in
arpl
and
mov
lock
aam
jae
mov
dec
icebp
fbstp
nop
sahf
fdivl
in
push
in
cmp
pop
pushl
push
js
xchg
and
push
sbb
xor
cmp
mov
inc
mov
jecxz
out
cmp
fisubs
div
jns
call
ss
ja
loopne
lcall
pushf
xor
test
cli
inc
fdivp
test
mov
arpl
pop
out
cli
jmp
inc
mov
push
fwait
push
add
into
pop
ljmp
int
rcll
xchg
inc
or
enter
push
int3
xchg
roll
inc
rcr
push
ljmp
call
ljmp
jg
and
add
outsb
and
aaa
bound
pushl
loope
mov
sahf
inc
out
push
mov
fstp
mov
decl
call
pop
adc
and
test
cltd
dec
xlat
call
sar
decl
inc
ss
sub
andl
insb
stos
in
call
incl
and
mov
shl
call
push
std
cmpsl
mov
ds
fwait
pop
push
cli
call
mov
mov
inc
stc
pushf
push
lods
cmp
scas
pop
mov
imul
add
mov
mov
push
push
xchg
push
push
test
pop
hlt
loop
mov
xlat
cs
stos
add
enter
or
lock
dec
mov
mov
lcall
jnp
arpl
fnsave
jmp
sub
mov
inc
sub
jle
pop
pop
outsb
bound
mov
lea
sbb
aam
mov
dec
xchg
ljmp
push
mov
and
xor
test
test
in
hlt
cmp
push
sarb
bound
shl
mov
xor
sub
ljmp
fistpl
fs
and
mov
mov
cmpsb
jns
aad
lahf
aad
loope
incl
idivb
xor
clc
pop
dec
pop
je
xlat
inc
pop
pop
stc
xor
mov
es
lahf
fisubrs
in
cmp
fldl
inc
inc
imull
mov
outsb
into
int
xor
adc
or
lcall
out
arpl
lcall
and
sbb
mov
dec
adc
jae
gs
inc
lcall
adc
sub
test
gs
fwait
mov
and
push
mov
stos
test
outsl
cli
ljmp
push
loopne
ret
es
mov
jne
sbb
xchg
xchg
out
pop
jle
mov
stos
incl
mov
add
mov
jb
adc
and
hlt
lcall
cs
adc
mov
sub
into
fbstp
adc
incl
aad
popf
mov
test
or
sbb
cmc
popa
inc
mov
mov
decl
inc
loope
fs
xchg
sub
push
imul
mov
je
adc
lods
push
mov
pop
and
mov
imul
push
inc
std
push
loope
sar
jmp
mov
and
sub
and
test
scas
fcmove
pushf
jg
inc
jmp
int
xchg
xchg
fwait
lods
push
cmpsb
add
inc
imulb
push
fsubrl
jle
test
adc
dec
mov
out
repnz
jg
dec
std
jecxz
pop
jle
cmp
sbb
aad
mov
jge
sbb
outsb
fisttpll
aaa
inc
jns
shl
pop
das
xchg
clc
or
mov
repnz
sbb
lcall
mov
dec
frstpm(287
push
mov
jne
jns
cmp
dec
inc
sub
bsr
lcall
popf
xor
mov
fildl
and
dec
jg
mov
jl
pushf
lret
lcall
cmc
bound
paddsw
cwtl
sbb
sbb
ja
lcall
call
and
push
sti
cmp
mov
out
add
incl
cmpsb
cmp
cmpsl
lock
iret
mov
popf
loopne
hlt
scas
int3
sub
jmp
inc
and
and
fbld
pop
jb
js
sub
sub
sub
lcall
sub
stc
sti
xchg
pushf
and
dec
jg,pt
out
test
rcrl
rolb
decl
inc
dec
gs
dec
or
ret
jmp
loopne
pop
std
incl
or
sahf
mov
sbb
xchg
xchg
fs
test
aaa
sbb
or
sub
adc
xor
nop
xchg
mov
ljmp
cwtl
push
xchg
jmp
stc
loop
inc
inc
and
and
rcll
decl
sub
push
lds
push
cmpsb
push
out
gs
js
testb
inc
test
cli
fsubl
sbb
std
pushl
mov
jbe
test
popf
filds
repnz
dec
mull
incl
push
mov
out
pop
mov
xor
xchg
inc
push
mov
jb
xchg
add
jne
sti
call
cwtl
sub
or
and
enter
pop
shll
mov
das
mov
dec
mov
inc
xorl
stos
fwait
scas
push
jmp
stos
mov
push
fbld
sub
pushl
jno
xchg
or
notb
xor
xchg
out
lcall
leave
in
xor
or
gs
popa
sar
xchg
popf
or
cwtl
push
mov
call
cli
mov
xchg
je
movsb
dec
lods
push
push
and
repz
ljmp
cmp
push
cmp
addl
mov
xchg
test
ja
fistl
fidivrl
addr16
stos
clc
jge
outsb
jg
loop
push
cmp
jmp
pushf
or
jae
lret
lcall
arpl
loope
ds
lods
fwait
test
loopne
decl
or
nop
xchg
das
jmp
cmp
clc
insl
addl
pushl
pop
xchg
cltd
or
or
cmp
xor
jg
and
sub
pop
iret
pop
cmc
mov
adcl
inc
inc
loopne
iret
repz
clc
sbb
jl
mov
fiadds
int3
pushf
mov
pushl
push
daa
mov
xchg
adc
fistpl
push
jno
ss
ljmp
dec
into
mov
pushl
add
inc
adc
incl
dec
and
mov
add
mov
incl
roll
es
jno
fmul
test
shlb
sarb
push
cmp
adc
in
sub
mov
push
bound
daa
loope
pop
xchg
adc
stc
fcmovnb
add
pop
cwtl
dec
mov
insb
adc
rcrb
into
sarl
ljmp
or
push
inc
jbe
cmp
jne
fcmovnu
pop
pop
xor
incl
insl
pop
lahf
jg
fildll
pop
mov
popf
loop
les
in
xchg
or
cmp
out
popf
cmp
ljmp
xchg
sbb
imul
mov
test
mov
or
jmp
mov
loop
decl
sbb
popa
cmpsl
gs
and
lea
jl
out
jp
xchg
inc
pushl
pop
mov
mov
inc
mov
mov
and
xchg
jb,pn
les
incl
pop
jp
push
in
imul
adc
sub
adc
or
lcall
lcall
jne
popa
js
mov
fcoms
call
icebp
incl
cmp
mov
and
sarl
loopne
xchg
scas
adc
fs
xchg
cmpsl
das
test
mov
aad
pop
mov
and
outsl
addl
arpl
repnz
xorb
clc
lcall
gs
xlat
push
xchg
movsl
xlat
xor
pop
or
mov
aam
incl
out
adc
ret
mov
sbb
iret
enter
lock
jne
xchg
pop
fwait
xor
pushl
xchg
pop
rcr
jecxz
subl
les
sub
out
cwtl
nop
stc
jmp
xchg
fists
fstpl
js
pushl
daa
mov
cltd
inc
dec
jmp
add
pop
sub
sub
lcall
loop
xchg
mov
mov
loope
scas
mov
mov
scas
push
push
cld
jmp
mov
xlat
repnz
js
mov
lret
or
xchg
dec
mov
int3
loop
addl
or
and
testb
je
insb
rcll
ljmp
push
cltd
sbb
push
ficomps
jmp
ljmp
jp
push
dec
mov
aas
cmpb
mov
inc
adc
call
xchg
sub
out
lods
fcmovu
pushf
sub
push
cmp
add
and
lods
outsb
movsl
leave
cmp
or
jp
adc
in
stos
fldl
fidivrs
sub
mov
cmpsl
mov
xor
sbbl
push
shrb
and
sbb
lret
test
mov
cs
push
pushf
dec
sahf
testl
cmpb
lods
test
jg
jl
hlt
and
lea
cli
inc
subb
in
xchg
in
ja
ss
decl
cld
jne
cmpsl
jecxz
inc
or
jmp
gs
cmp
xor
jmp
mov
mov
lods
and
or
stos
inc
fisttps
negl
dec
push
test
push
mov
in
sbb
ljmp
sub
mov
mov
pop
sahf
mov
mov
sbb
mov
sub
add
ljmp
xlat
adc
dec
lahf
test
jo
in
xlat
inc
lods
sub
negl
inc
jb
popf
pop
popa
add
push
js
and
repz
mov
jb
cmp
rclb
ja
pop
out
fcmovne
xchg
add
ret
mov
sub
mov
xor
mov
das
add
orb
stc
mov
mov
scas
jmp
decl
sti
icebp
inc
inc
in
cs
inc
push
adc
mov
inc
cmp
sbb
push
addb
dec
js
xchg
mov
jmp
movsl
aad
out
enter
inc
in
das
adc
fildll
sub
mov
dec
sbb
scas
mov
gs
filds
xchg
out
adc
sbb
sub
fwait
filds
dec
and
sub
jno
stc
inc
lahf
adc
decl
or
push
xlat
jecxz
aas
ficoms
pop
cmp
adc
les
dec
jmp
pop
lea
mov
lods
fsubs
test
pushf
sbb
push
popf
or
lock
outsl
adcl
mov
sub
push
lret
incl
daa
gs
fwait
mov
repz
std
jb
jge
jb
cmp
call
ds
sub
bound
jae
les
fucomp
inc
xorb
xor
lcall
push
leave
dec
xchg
adc
jnp
insb
ss
xor
mov
xchg
scas
cmpsb
push
sbb
test
xor
cmpsb
adc
pop
std
xor
and
mov
movsb
loope
mull
inc
and
sub
xchg
mov
sbb
lcall
push
shll
iret
ret
stos
push
out
scas
lret
cmp
cmp
mov
mulb
sbb
cmpsl
mov
or
sbb
jmp
or
push
add
adc
stos
pop
loopne
cmp
int
or
icebp
mov
sub
mov
xchg
xchg
movl
fstps
push
xor
popa
sbb
mov
lret
mov
or
lret
push
xlat
fdivrp
lcall
cmpsl
stos
push
mov
inc
adc
popl
fcompl
xchg
sbbb
call
xor
lret
imul
ljmp
dec
jb
orl
ljmp
fidivs
cld
xchg
xchg
out
xchg
je
cs
call
cmp
push
pop
fdivs
and
sbbl
jecxz
ljmp
sbb
call
jmp
sti
loope
in
or
lahf
testl
pop
in
fsubrl
iret
out
mov
iret
cmp
into
cltd
add
enter
push
jecxz
dec
sub
lret
icebp
scas
outsl
scas
adc
xor
incl
pop
pop
adc
je
addr16
sbb
inc
jge
jp
jl
mov
jo
rorb
subl
mov
fisubrl
les
rcl
add
int
repz
loop
pop
inc
fdivrp
sarb
push
fidivl
idiv
ljmp
xor
inc
xchg
mov
and
jecxz
pop
adc
lcall
call
rcl
inc
add
mov
sbb
dec
mov
and
popf
pop
sub
pushl
aas
mov
das
ja
movl
movsl
mov
mov
jo
mov
out
and
adc
shlb
and
mov
daa
dec
pusha
inc
stos
mov
mov
outsl
push
std
lahf
inc
aad
inc
and
imul
cli
dec
gs
shlb
stos
movsb
repz
inc
int3
outsb
clc
xchg
or
loopne
ret
mov
jbe
fisttpl
mov
jmp
inc
and
and
sub
push
in
out
jg
incl
jle
arpl
adc
arpl
decl
int3
ret
call
sbb
dec
sbb
push
in
in
mov
xor
movsb
sub
addb
lcall
nop
push
outsb
xor
sbb
cmc
or
add
mov
lahf
mov
lock
ds
xchg
mov
xor
inc
mov
inc
adc
fisttps
pushl
popa
and
outsl
jmp
sti
popa
filds
ret
and
popf
dec
outsb
rclb
fdivs
stc
dec
incl
fisubrl
fs
xchg
xchg
lret
repz
test
fcomip
inc
movl
jns
xchg
sub
mov
add
inc
int3
dec
xor
lcall
sub
inc
xchg
adc
add
cmpsl
or
push
cmp
stc
fistps
mov
mov
cmpsl
insb
jmp
mov
xchg
mov
testl
xchg
push
cmc
lds
out
loop
sub
lods
mov
lret
mov
incl
and
jno
xchg
xchg
adc
into
pusha
lods
mov
mov
repz
cmp
nop
out
jg
xor
jmp
outsb
jae
mov
iret
xor
test
js
adc
mov
pop
pop
pop
nop
cs
lahf
sub
jmp
cld
scas
cmpsl
ficompl
fcompl
stos
jb
add
inc
sub
jns
ret
out
std
pop
jp
fdiv
sub
in
outsl
mov
in
arpl
ds
mov
jmp
dec
jno
xor
and
xchg
dec
and
dec
mov
rcrb
mov
testb
dec
cli
incl
cld
fisubrs
iret
inc
ss
neg
ljmp
or
mov
or
and
dec
jnp
cmp
xor
mov
inc
cli
jmp
xchg
leave
lahf
xchg
and
divb
mov
dec
inc
imulb
adcb
daa
push
add
call
dec
iret
divl
xchg
lcall
test
ja
fcomip
cld
sbb
outsl
lret
clc
fdiv
hlt
adc
js
jl
ljmp
clc
jb
push
into
mov
mov
addr16
bound
pop
xchg
jg
jmp
push
adc
iret
ljmp
mov
push
hlt
push
popa
das
pop
das
inc
cmpsb
add
mov
adc
sbb
outsl
dec
jo
dec
loop
outsl
jbe
std
ror
ljmp
mov
or
xor
cli
rorb
in
imull
std
dec
mov
and
push
cmpsb
shll
adc
jmp
mov
pop
jo,pt
mov
hlt
movsl
and
movsl
mov
sub
xor
imul
mov
stos
mov
jne
call
sub
es
popa
and
insb
inc
pop
push
xorl
idiv
jmp
add
fstpt
rcl
and
repnz
add
pushl
negb
mov
repnz
popf
movsl
jge
jmp
ss
decl
cli
mov
adc
ljmp
mov
iret
rcr
ret
push
test
dec
lock
mov
mov
xchg
in
ss
scas
mov
sub
pop
fisubs
icebp
mov
jle
lds
or
into
mov
aam
in
in
aad
jmp
and
shlb
cmp
cmp
push
lea
imul
mov
decl
mov
mov
xor
jecxz
cmp
cmp
cmpsl
bound
mov
push
leave
stc
movsl
data16
mov
jne
xor
xor
cld
push
lods
stos
aas
incl
imul
mov
push
xchg
sbb
xor
jmp
out
rol
push
insb
xor
incl
push
xchg
xor
push
imul
mov
stc
xchg
sub
xchg
pop
ret
mov
pop
xchg
cli
ljmp
scas
xlat
mov
sbb
nop
int3
lret
mov
stos
movsl
jns
xor
push
fistps
decl
fcoms
adc
push
sbb
shl
jge
ljmp
or
sbb
sbb
pop
test
ficomps
or
inc
xor
call
xchg
mov
arpl
jo
cmp
sub
lahf
call
xchg
cmp
addl
movsl
lcall
pushl
insl
add
pop
sahf
pop
mov
adc
lcall
out
es
icebp
call
sub
dec
mov
sub
jo
jge
fsubs
addb
lcall
ljmp
mov
add
sub
cld
rcll
add
int3
jns
dec
jle
pushl
mov
pop
sbb
dec
imul
xchg
push
imul
pop
pop
jmp
sbb
in
add
aad
jl
movsl
add
jmp
mov
xor
imul
jge
jmp
call
add
xchg
push
mov
jecxz
ret
or
push
dec
inc
push
fistps
enter
incl
stc
fs
rorb
jl
add
mov
ret
lds
lcall
dec
xlat
mov
push
loope
movsb
scas
add
dec
dec
pusha
inc
add
xorl
sub
scas
mov
jne
inc
inc
rcrl
adc
ljmp
mov
decl
and
adc
jns
shlb
jmp
sbb
fisttpl
insl
jne
fistpll
pop
ljmp
push
lea
test
xor
cmp
test
sbb
pop
xchg
pop
call
test
adc
aam
rorb
dec
nop
in
jno
or
cwtl
test
jp
jge
vhsubps
mov
dec
cwtl
mov
int
lock
ja
sub
shrb
push
pop
enter
xlat
clts
xlat
sub
push
cld
sub
hlt
stos
leave
or
int3
dec
mov
test
or
adc
jb
and
scas
clc
decl
and
mov
xchg
scas
scas
pushf
mov
dec
decl
push
jge
idivb
sub
jge
push
jp
inc
es
clc
xor
enter
jmp
in
sbbb
ret
subl
dec
divb
jle
insb
xchg
or
push
mov
xor
add
adc
daa
fldt
dec
xchg
jmp
das
lcall
ret
ret
adc
fnstsw
call
sub
dec
fnstenv
or
test
shrl
jnp
sub
out
or
enter
jmp
mov
cli
dec
and
add
mov
or
pop
testb
aaa
movsl
fstpl
hlt
jo
shrl
sahf
sbb
lods
inc
mov
idivl
pop
movb
cmpsl
xchg
int
adcl
ds
ljmp
movsl
xor
lret
pushf
or
sar
loop
add
or
ljmp
sar
add
pop
addr16
and
and
xlat
mov
clc
call
jne
divb
xor
daa
mov
add
jns
xchg
dec
test
clc
gs
decl
cmp
cmpl
je
sub
cld
push
push
hlt
call
mov
and
incl
xor
inc
test
iret
addr16
sub
call
jg
repnz
in
icebp
pushl
std
cmpsb
out
les
xor
nop
loopne
pop
sbb
rolb
insb
lods
and
psubd
cltd
shll
jmp
push
lock
jge
jbe
jmp
dec
ljmp
mov
cmp
pop
pop
stos
jmp
mov
daa
cmp
stc
and
out
cmpsl
aas
mov
imull
incl
je
dec
lock
jbe
daa
adc
adc
loop
int
int
cmp
lcall
jp
clc
push
repz
bound
sub
jnp
std
sub
cmpsl
ljmp
faddl
cs
dec
mov
testl
testb
jo
pop
xchg
test
cmp
sarb
sub
stos
in
ja
fs
fnstsw
divb
dec
inc
push
nop
loopne
jbe
inc
fadd
and
dec
je
xor
jp
shlb
leave
in
cwtl
fistpll
popa
call
hlt
jae
or
or
lcall
jne
stos
ss
mov
js
bound
movntps
xor
ljmp
outsb
call
or
das
ds
mov
cmp
scas
jmp
jno
leave
pop
repz
ja
inc
xlat
adc
out
shll
rcrl
cld
add
lcall
hlt
pop
cmp
lret
aam
fstl
adc
cmp
lret
push
rcl
fldcw
incl
movsb
rcrl
push
xor
jbe
out
mov
mov
ds
jmp
jle
cli
pushl
scas
lds
pop
add
pop
insb
clc
int3
cmp
insl
rcll
adc
ret
mov
inc
lcall
shlb
mov
fisubl
pop
jb
sbb
fcomip
lcall
push
or
fdiv
cwtl
add
out
mov
popl
ljmp
sub
lret
scas
cld
sahf
lcall
ret
and
sbb
pop
mov
popf
mov
out
lret
push
xchg
xlat
sbb
imul
in
cs
fyl2x
mov
pushl
pusha
cltd
sub
cmp
popa
mov
xor
mov
cmp
fisubs
das
clc
decl
cmp
xor
mov
mov
pusha
stos
scas
lds
add
mov
lcall
pop
push
push
arpl
lret
adc
lahf
xchg
repnz
bound
lods
pushl
adc
push
sbb
movsb
jnp
push
xor
fisttpll
jmp
imul
cmpsl
imull
icebp
jmp
pmullw
pop
mov
imul
lahf
ljmp
sbb
repnz
mov
mov
ljmp
mov
adc
sub
popf
lahf
or
jbe
fildll
stos
lahf
shrb
ljmp
mov
cmp
pop
test
or
dec
xor
imul
fwait
int3
bound
push
add
loop
push
insb
mov
push
ljmp
incl
sub
sub
fstpl
sbb
xchg
mov
ret
ficoms
pop
xchg
mov
push
inc
sbb
and
and
pushl
popa
pop
jno
loope
imul
jmp
daa
push
out
loope
loopne
sbb
sbb
enter
in
or
inc
mov
arpl
scas
and
mov
iret
fucomip
jb
lret
mov
jp
cmp
push
in
xor
mov
je
stos
inc
aad
mov
call
stos
add
pusha
gs
pop
out
jp
enter
cwtl
test
pushf
dec
jb
in
jns
lret
add
inc
movsb
mov
fisubrs
fs
das
add
ljmp
jp
dec
inc
xor
mov
mulb
ret
inc
das
push
cmp
cmpsl
jb
cmp
sub
orl
push
add
and
sbb
shll
nopl
mov
std
leave
sbb
mov
rorb
adc
pop
sub
into
mov
stos
inc
pop
repz
call
js
andl
cmp
sbb
xchg
out
loopne
inc
out
cmp
pop
pop
leave
sti
imul
jns
jg
xchg
add
add
inc
sar
incl
ret
mov
push
or
push
or
or
out
subb
xor
mov
push
xor
outsb
scas
enter
hlt
out
iret
push
adc
or
add
pushl
push
mov
push
pop
int
mov
jg
icebp
and
dec
xor
adc
vminpd
cwtl
sbb
daa
mov
ljmp
ret
negl
inc
mov
push
in
sub
and
pop
xor
cmp
mov
add
adc
sub
inc
adc
lds
incl
cmpsb
aam
arpl
xor
or
push
cld
loopne
xchg
into
ljmp
pop
sub
ljmp
loop
sbb
xor
fcomp
aad
stos
imul
mov
pop
jmp
pop
fdivr
maxps
lds
ret
inc
cli
in
cmp
dec
mov
stc
and
data16
xor
mov
subl
dec
adc
inc
or
add
mov
decl
repz
lds
xchg
ljmp
test
aam
sbb
mov
movsb
rorl
in
aaa
sbb
xor
dec
cs
mov
xchg
lcall
sub
mov
jge
sub
shrl
das
in
or
dec
mov
jmp
in
arpl
aad
stos
mov
pop
sbbl
dec
test
mov
inc
ljmp
dec
lds
and
mov
mov
inc
inc
ja
stos
outsl
dec
and
xchg
into
cmp
pop
cli
jg
nop
jns
adc
jno
jmp
das
int3
cmp
or
aaa
scas
push
stos
jmp
mov
test
pop
xchg
bound
adc
xchg
mov
shll
jg
or
add
inc
inc
xchg
cltd
xlat
fstpt
push
inc
orl
decl
lods
out
xor
inc
ss
xchg
mov
mov
cmp
stc
sub
push
pushf
incl
cli
sbb
movsl
sbb
mov
cmpsl
cmp
or
ljmp
xchg
or
cmp
shrb
and
insb
shll
loop
xchg
push
cmp
and
sbb
add
cmpsb
jg
incl
movsb
loopne
jl
xchg
jmp
mov
dec
dec
rorb
das
push
imul
mov
xor
jmp
hlt
jb
mov
test
cmc
cld
xchg
repz
or
les
das
xchg
xor
inc
jmp
sub
movsl
je
add
cmp
add
clc
loopne
pop
xor
jmp
ss
and
out
cmp
dec
test
test
sub
shlb
fsubs
decl
jl,pt
test
outsl
inc
push
jecxz
hlt
stos
push
xchg
stos
mov
mov
decl
push
popf
push
cmpsb
rclb
inc
and
push
movsb
hlt
or
push
xor
jecxz
rcrl
push
push
xchg
test
scas
icebp
xor
mov
mov
sbb
ja
js
jl
sbb
call
mov
dec
sahf
adc
test
les
xor
or
nop
decl
sub
fsubrl
cli
sub
push
in
repz
pop
jp
mov
aam
push
lcall
mov
dec
mov
sbb
lods
push
or
ss
xorl
jo
add
leave
jmp
mov
shr
inc
test
or
pop
adc
cmpsl
lahf
mov
call
lret
push
clc
in
arpl
dec
fninit
mov
iret
dec
jno
stos
xor
and
cmp
dec
adc
idivb
aas
icebp
jle
fistpll
jp
inc
bnd
jmp
mov
pop
dec
add
rclb
lret
xchg
cmc
fnsave
jbe
jge
sub
jg
sbb
insb
add
dec
inc
fdivr
add
mov
imul
adc
inc
cmp
inc
rorl
push
dec
lea
mov
push
cmp
inc
js
pop
or
xchg
test
jg
fstpl
sub
ljmp
ds
mov
xor
jecxz
neg
test
cld
loop
int
fisubs
lock
mov
call
push
pop
cli
hlt
sub
bswap
cwtl
rcll
push
sbb
add
icebp
mov
push
mov
add
sahf
add
aad
sub
lahf
fwait
jge
hlt
das
cmp
jg
incl
mov
jns
pop
push
add
mov
lock
adc
test
pushl
jecxz
scas
push
xor
sub
xlat
mov
mov
mov
daa
or
lcall
inc
push
jl
inc
daa
xor
imul
adc
out
sahf
pop
pop
daa
add
or
jmp
and
test
mov
int3
jle
js
orb
int3
out
testl
gs
enter
test
jp
call
test
cmpsl
push
shlb
out
cmp
rcrb
test
push
sub
adc
outsl
pop
add
pushl
jb
lret
jb
xchg
aas
and
call
mov
fsts
add
cwtl
or
or
lcall
inc
mov
ret
test
jae
insl
mov
push
fldz
xchg
jno
pop
rclb
test
shrl
hlt
mov
scas
adcl
jp
jg
scas
int
mov
mov
bound
test
jle
sub
mov
fidivrl
or
das
mov
in
pop
addl
dec
or
ret
adc
sub
call
sub
push
sub
ss
out
sbb
jp
xor
insb
mov
repz
jnp
add
pop
add
test
mov
in
ljmp
int
mov
outsb
jne
js
and
int3
push
mov
in
fsubrl
insb
dec
js
lods
push
add
pop
pop
loopne
jmp
jge
sub
pop
add
mov
pop
sbb
lods
dec
es
decl
inc
pop
push
xlat
mov
into
pop
ja
int3
das
imul
cmp
adc
mov
mov
pop
jl
loop
mov
roll
dec
fdivrl
out
pop
imul
xchg
xor
mov
sbb
xchg
dec
pop
movl
add
out
ljmp
pushl
push
leave
data16
inc
fistpl
mov
outsl
data16
jmp
pop
jb
insb
fsubp
ljmp
xor
loop
xchg
shrb
mov
lret
fcomip
jmp
cli
add
adc
cmpsl
fbstp
aas
scas
mov
scas
jne
mov
fisttpl
xor
daa
ret
into
gs
mov
stos
jno
mov
jmp
pusha
sub
mov
dec
push
adc
incl
loopne
enter
dec
clc
and
das
hlt
sub
push
sbb
decl
pop
mov
ret
pop
inc
lock
dec
cld
dec
adc
pop
and
push
decl
lock
mov
or
hlt
sar
mov
push
ret
xchg
lret
jp
inc
call
inc
stos
sbb
shlb
xchg
loop
in
rorl
idivl
sbb
loope
mov
dec
mov
mov
sbb
sub
aam
aad
stos
test
xor
call
add
push
jg
sbb
aad
leave
arpl
pop
shr
jecxz
in
call
pop
popf
dec
gs
sti
fwait
adc
sub
mov
out
aad
scas
jg
loopne
and
loop
or
loopne
inc
aam
xor
decl
jle
test
cmp
lret
xchg
or
cmp
pop
push
je
incl
rorl
sub
dec
repz
imull
outsb
icebp
pop
ljmp
push
xor
jnp
xchg
xor
pop
and
test
xor
cli
add
mov
decl
xor
dec
aam
scas
fcmovne
inc
adc
mov
out
std
decl
sahf
push
xor
jb
pop
mov
sbb
mov
je
outsb
test
call
js
insl
les
sub
and
js
mov
movsb
mov
incl
sub
stc
hlt
jmp
imul
or
mov
lcall
dec
dec
imul
adc
pop
rcl
icebp
inc
jns
test
cmpsl
and
shlb
dec
inc
ror
aaa
out
out
loop
pop
mov
adc
cwtl
jbe
cld
call
sti
sbb
and
or
sub
leave
lcall
or
sar
fildll
out
push
adc
lcall
incb
in
cmp
decl
lea
out
insb
mov
dec
ss
dec
in
mov
mov
imul
jl
subl
cli
in
fimull
repnz
les
imul
decl
pop
repz
pop
nop
jae
fimuls
subl
jecxz
fmull
sub
sub
cmpsb
mov
push
insb
jne
and
out
inc
stc
aam
sbb
mov
and
jne
jecxz
add
push
fdivs
in
mov
or
ja
cs
xor
cwtl
sbb
outsb
shlb
mov
xor
jle
xchg
int3
jmp
cmp
ret
clc
mov
sbb
ja
std
jmp
pop
add
mov
xchg
into
mov
cwtl
test
push
push
mov
adc
cld
mov
call
aad
cmp
adc
or
adc
xchg
adc
in
stos
jle
push
xor
xchg
push
xor
xchg
cmpsl
popa
out
rcr
mov
pop
outsb
lret
pop
test
adc
pop
inc
dec
push
addl
cwtl
stos
xor
call
mov
sbb
push
push
into
push
pop
push
repz
out
leave
cmc
push
imul
lcall
scas
imul
repnz
mov
or
stos
adc
jb
cmp
data16
nop
mov
add
lds
xlat
inc
in
xor
mov
jp
cmp
mov
lock
cmp
iret
xchg
push
pushfw
dec
pop
test
push
incb
sarb
pop
cmp
decl
icebp
adc
cld
jg
clc
cmpsl
push
fcompl
jp
push
jbe
js
clc
add
or
mov
push
mov
mov
negl
mov
and
inc
inc
xchg
sahf
sub
call
call
bound
push
popf
pop
xchg
aam
jno
int
ss
cmpsl
idiv
inc
in
cwtl
xlat
push
mov
jp
jl
xor
add
sbb
sahf
or
xchg
jo
movsb
pop
jae
cli
mov
fcompp
mov
push
add
xor
shrb
fimull
andb
mov
xor
sar
ljmp
outsb
outsl
fisubs
stc
sbb
push
fstps
jmp
jge
sbb
nop
jo
cmp
push
adc
repz
cmp
adc
shll
pop
scas
pop
daa
sub
mov
in
movsl
jg
lock
fidivs
sbb
addr16
rcrl
sub
mov
sbb
arpl
mov
mov
and
cld
mov
pop
lock
call
sub
test
mov
imul
jmp
mov
adc
rcr
ja
jg
daa
cmp
jno
lods
rcrl
xorb
sarl
pushl
call
outsl
pop
fisubrs
cld
xchg
push
loopne
in
pop
jg
xchg
std
cmp
sbbb
pop
push
std
sbb
rorb
xchg
adc
mov
and
clc
call
loopne
incb
sbb
pop
dec
scas
sbb
mov
fwait
mov
push
scas
fwait
movsl
loopne
sti
mov
sar
call
push
loop
insb
sub
ds
js
data16
xor
fildl
lods
outsb
mov
mov
mov
outsb
and
cmp
addl
lea
out
sub
jb
adcb
fs
popf
cmp
decl
sbb
ja
aam
mov
test
or
dec
sbb
inc
clc
cmp
scas
mov
in
mov
in
xor
jb
ljmp
mov
cwtl
adc
divb
push
cwtl
clc
pop
mov
pop
imul
test
pushl
fadd
jl
cmp
mov
loop
mov
push
sti
fadd
pop
mov
scas
mov
scas
push
mov
pop
cmpsb
mov
jne
cwtl
cld
jg
inc
pop
sbb
cmpsb
or
mov
pop
jae
inc
in
sahf
pusha
adc
pushl
std
sbb
cwtl
lret
jl
movsb
shll
arpl
push
in
jmp
lock
call
jno
data16
iret
je
sbb
mov
add
inc
stc
cmc
pushl
jmp
pop
mov
jp
lods
lock
sub
sti
jns
mov
xchg
int
mov
lcall
outsb
lahf
pop
lods
addr16
loop
pop
mov
dec
test
imul
les
inc
out
ret
adc
aaa
cltd
push
imull
fisubrs
cmp
mov
test
or
dec
and
push
sbb
mov
mov
cmc
add
fwait
xor
add
call
out
adc
test
pop
push
cmp
jo
xor
jmp
dec
xor
push
sub
outsb
pop
adc
rorb
ret
test
xor
std
sbb
mov
rolb
notb
cld
lcall
pop
inc
mov
dec
cltd
pop
jmp
jb
pop
loope
aaa
lret
outsl
clc
push
test
mov
pushf
ret
insb
jle
bound
vmwrite
sbb
pop
in
lcall
std
cmp
sbb
cld
cmp
fdivrs
and
shll
daa
stos
movsb
pop
sarb
jg
rcrb
or
add
ret
pop
push
jno
js
rclb
mov
cld
cmp
sbb
dec
mov
or
ljmp
or
je
in
xchg
loope
xchg
push
sub
push
adc
arpl
push
add
sbb
ljmp
inc
mov
cmp
bound
decb
sub
add
std
vzeroall
call
cmp
insl
inc
popa
lock
fxam
jne
mov
sti
or
mov
sar
clc
in
fstl
test
mov
sbb
xchg
das
dec
dec
hlt
jge
fldenv
jno
sbb
test
flds
out
in
ja
mov
push
mov
sbb
int3
mov
mov
out
lcall
cmpsb
pop
fdivl
push
or
das
arpl
shll
sti
mov
ljmp
aaa
xlat
push
mov
clc
ficoml
sub
mov
push
ret
lcall
andb
pop
mov
je
scas
sbb
scas
add
scas
inc
and
push
incl
leave
inc
pop
sub
imull
mov
pop
lock
pop
mov
xchg
push
jne
ja
repnz
lret
push
or
lret
std
test
ljmp
and
pushf
std
sbb
ljmp
mov
xchg
or
lret
and
scas
and
ljmp
cld
popf
into
sub
mov
xchg
mov
pop
mov
dec
data16
dec
mov
dec
inc
jne
ret
jnp
ljmp
mov
pop
pop
sub
adc
adc
out
xor
pushl
jecxz
das
dec
xor
jo
jo
das
test
movsl
push
test
icebp
imul
repnz
and
ljmp
in
xor
cmpsb
ds
sarl
jno
mov
mov
call
imul
insl
jge
or
daa
je
rcr
and
mov
xchg
add
idiv
call
shr
or
lds
sbb
sti
lock
andb
cs
mov
das
shl
jbe
fucomip
test
mov
lea
xor
in
jg
mov
cmpsb
cmpsl
outsl
mov
pop
cmp
inc
test
push
imul
sbb
lock
pusha
pusha
in
vpsadbw
aaa
pop
push
mov
hlt
aas
movsl
mov
sub
adc
push
pusha
mov
mov
pop
pop
xor
dec
mov
lock
or
jbe
sub
aad
rcrl
xor
clc
push
fldcw
test
ss
cld
or
rclb
clc
div
mov
dec
lcall
orb
dec
xchg
xchg
lods
clc
jb
ljmp
test
cld
mov
mov
push
fstps
fidivrl
inc
cmp
decl
fs
test
loopne
mov
pop
xor
out
call
jne
fs
add
jmp
ror
outsl
int3
loopne
imul
popf
lea
or
movb
fiaddl
cmp
mov
jb
pop
dec
cmpsl
cmp
fnstcw
negb
cmp
push
repz
lret
jle
decl
jnp
test
mov
sbb
xchg
cmp
push
or
inc
inc
daa
sbb
jg
ja
push
leave
aam
sub
test
sub
lock
lcall
mov
out
adcb
jbe
repz
lret
ss
and
incl
mov
enter
pusha
sbb
aad
int3
cmp
add
xchg
push
sarl
popf
and
mov
ss
mov
inc
bound
xorb
lcall
dec
leave
add
mov
arpl
push
pop
mov
enter
incl
addr16
sti
xchg
push
adc
ss
cs
cwtl
aaa
jne
sub
push
dec
add
mov
decl
frstor
sarb
push
mov
cmp
xchg
cmpsb
jmp
lods
or
mov
add
mov
enter
test
xchg
dec
iret
pop
loope
nop
test
cmp
jmp
push
outsb
mov
jle
jle
data16
std
mov
sbb
cmp
adc
loope
cmc
adc
repnz
aam
or
icebp
popf
in
mov
out
scas
sub
jno
push
pop
push
aas
cmp
push
and
push
adc
test
pop
add
hlt
incl
mov
xchg
imul
jo
mov
fwait
cmp
pushl
in
pop
fwait
lods
pop
or
ss
enter
xchg
or
cld
gs
xchg
test
outsb
sbb
ret
lcall
je
xorb
lock
outsb
int
xchg
jmp
jnp
lea
decl
ss
lret
in
cmp
stc
mov
add
jecxz
imul
idiv
jmp
in
enter
inc
sti
push
jecxz
mov
add
ljmp
inc
das
or
dec
jbe
ret
xchg
xchg
imul
and
mov
mov
xchg
out
push
mov
xchg
ds
sar
decl
imul
mov
pushf
dec
push
out
inc
xchg
push
jno
pushl
testl
cs
mov
sub
pop
pusha
mov
scas
pop
ljmp
or
call
fcompl
jbe
rorb
dec
test
fwait
and
xorb
cmp
scas
mov
ljmp
pop
or
jl
sar
arpl
stos
inc
andb
test
add
incl
xchg
xchg
aaa
push
dec
cli
pop
mov
xlat
jmp
push
mov
scas
out
cmpb
sbb
dec
sub
inc
pushl
add
test
mov
nop
and
push
fucomi
sahf
sbb
fidivl
cwtl
sub
or
ss
incl
ret
sbb
aad
sar
sub
mov
xor
jmp
fsubrs
sbb
pop
cmpsb
aam
ja
ret
pushl
movsl
mov
insb
sub
rcrl
fsubrl
and
dec
and
jecxz
ljmp
add
movsb
pop
pop
imul
mov
pop
fcoms
or
mov
jmp
rcrb
aad
adc
out
sub
bt
sbb
xlat
sub
adc
pop
hlt
lock
mov
mov
and
daa
test
pusha
xchg
or
inc
adcb
xchg
cmp
lret
or
lcall
bound
jl
sub
xchg
inc
sbb
daa
mov
dec
popf
mov
ja
xchg
push
mov
in
jb
rcrl
sbb
pop
std
imul
rolb
ret
sub
data16
js
mov
aam
packsswb
lcall
cmp
subl
mov
mov
movsb
fistpll
mov
test
ja
cld
inc
mov
fcmovnb
lcall
mov
fwait
adc
push
xlat
cwtl
daa
xchg
popa
pop
jg
ja
push
addb
mov
pusha
pop
fstpl
ljmp
jno
test
into
mov
push
loop
test
decb
int3
mov
adc
jne
fucomp
ret
sub
ficomps
call
leave
bound
push
test
repnz
mov
clc
in
jp
nop
cmp
or
shl
xor
call
mov
int
std
ds
mov
mov
adc
sub
sar
incl
dec
fisubs
lret
sbb
mov
arpl
idivl
into
sbb
jg
jns
sbb
scas
das
flds
mov
aad
js
das
mov
sub
ds
mov
add
sbb
or
dec
loope
sti
sbb
inc
leave
jb
sti
mov
ss
testl
mov
inc
inc
cmpsl
jnp
hlt
xor
flds
out
push
or
pop
adc
and
testl
decl
nop
sbb
arpl
std
jns
stos
sbb
jmp
cmpl
sbb
sbb
or
ljmp
or
add
mov
push
push
arpl
fmulp
stos
dec
jbe
and
shlb
adc
inc
jae
xor
xchg
mov
mov
fs
xchg
mov
fs
xchg
ret
adc
mov
ljmp
lret
push
je
sarl
push
pop
mov
pop
enter
loopne
incl
cwtl
xor
lds
fistpll
cli
add
cmp
inc
xchg
and
jg
call
pop
push
flds
adc
idiv
daa
out
incb
imul
dec
das
cli
ljmp
jnp
std
cld
push
dec
imul
fucomp
jge
subb
mov
jbe
inc
xor
jle
call
fidivs
loopne
das
lcall
decl
jae
insb
cltd
cmp
dec
cmpsb
jge
fidivrl
push
or
lods
hlt
adc
inc
pop
out
pop
rclb
lcall
xchg
mov
pop
adc
dec
mov
or
pusha
dec
push
mov
pop
push
in
faddl
xchg
inc
lock
mov
int3
lods
adc
inc
mov
pop
pmulhuw
mov
and
inc
cltd
adc
add
out
adc
push
fstpl
jmp
sti
pop
cmp
pop
jmp
mov
nop
xchg
pop
repnz
mov
stos
inc
rol
add
cmp
fcmovnu
jmp
call
mov
fnstsw
jmp
xchg
xor
add
repnz
aam
mov
cmp
fdivs
and
jne
add
shl
pushl
xchg
ret
add
pop
jg
js
leave
loopne
mov
dec
lcall
popa
mov
jecxz
sbb
cmp
shll
decl
push
dec
xchg
jecxz
push
jns
pushl
and
loopne
push
jg
enter
mov
divl
popa
inc
jno
mov
and
sub
incl
out
jmp
frstor
dec
or
jb
mov
movsl
enter
icebp
nop
int
es
mov
mov
pop
stos
mov
push
orl
mov
push
mov
aaa
and
lds
shll
mov
cli
inc
out
cld
or
or
pop
lea
mov
xor
ret
jns
mov
in
mov
mov
test
xchg
leave
clc
add
loopne
shlb
popf
sbb
lret
rclb
adc
and
test
sub
insb
call
xor
in
jmp
lret
sub
std
jo
gs
or
mov
jno
ljmp
shl
and
jl
jbe
out
add
ret
add
cmp
and
jmp
mov
inc
xchg
aaa
sbb
mov
cltd
add
cltd
xchg
dec
sub
xor
jmp
inc
push
int3
xor
clc
mov
daa
lcall
hlt
jo
lods
mov
test
in
pop
cmp
mov
push
popf
sarb
xchg
sub
inc
ret
decl
lds
pop
es
sub
sbb
data16
inc
test
mov
call
push
push
add
push
jmp
mov
loopne
or
sbb
sti
mov
decl
adc
imul
push
out
inc
ja
push
lret
icebp
jmp
and
cmc
jmp
push
xor
mov
jmp
or
pop
fs
inc
int
sub
ljmp
sbb
mov
sub
arpl
mov
out
imul
pushl
clc
cs
cs
adc
in
icebp
push
stos
pusha
jmp
and
repz
sub
ficompl
out
in
mov
cld
call
int3
mov
mov
jns
rcr
movsl
shr
xchg
mov
in
clc
xchg
hlt
cmpsb
incl
cli
out
jbe
cmp
xor
cmp
movsl
push
loopne
add
and
outsl
and
mov
jmp
mov
mov
test
sub
mov
mov
jbe
mov
jne
decl
cmp
mov
int3
xchg
hlt
popa
xchg
mov
movsb
fsubrl
jae
xor
jg
in
dec
jp
test
push
std
push
and
fisubrl
xlat
jle
lret
sbb
or
sarb
pushl
sbb
sbb
adc
xchg
push
mov
xchg
xor
shrl
lock
or
aad
dec
inc
push
arpl
je
push
mov
ror
out
adc
gs
roll
fidivrl
call
jg
daa
mov
js
push
jb
push
push
and
popa
jae
lahf
lods
fucom
loope
call
sbb
ljmp
jae
out
dec
and
call
jno
je
jmp
imul
jb
aam
xor
lcall
shr
push
mov
xor
mov
clc
jmp
jge
test
pop
stc
sti
sub
adc
hlt
xor
outsl
mov
inc
loop
inc
or
in
mov
stos
loop
ss
loopne
insb
pop
lea
xchg
mov
and
repz
fmull
cmp
jmp
mov
insl
or
in
or
lods
push
mov
scas
sub
jle
adcb
push
pop
jae
decl
iret
movsl
inc
add
sbb
pop
sbb
xor
ss
sbbb
ljmp
and
outsl
sbb
push
out
cmc
test
xorl
loopne
mov
test
lcall
push
jg
push
dec
dec
push
bound
iret
clc
fstp
fisubrl
push
add
lcall
sti
fnstsw
insb
pop
pushf
sbb
jecxz
fcomps
fstpl
jne
test
pop
pop
loop
mov
call
js
jns
loope
into
dec
out
rcr
mov
out
lcall
call
push
ret
jmp
mov
aad
ss
mov
das
sbb
ja
jg
lock
fisubrs
pop
ja
sbb
lds
and
push
cmp
incl
mov
cmpsb
icebp
movsl
incl
pop
in
mov
push
or
sarl
pop
lds
pusha
xor
pushl
cld
dec
jo
cwtl
cmp
std
inc
jg
insb
daa
lock
push
and
adc
lcall
xor
loopne
gs
xor
sub
std
dec
push
test
inc
decl
in
js
scas
xchg
mov
or
out
cmp
adc
call
es
mov
loop
test
cmp
and
jle
mov
inc
dec
jns
aaa
lret
mov
lods
adc
mov
arpl
inc
mov
decl
hlt
sbb
stos
cli
shr
int
dec
addr16
stc
roll
xchg
pop
xor
pushl
mov
cmp
and
mov
sahf
mov
sarb
ret
dec
inc
jo
outsl
add
mov
pusha
popa
iret
lcallw
adc
or
mov
call
std
jnp
stos
jne
in
loopne
add
lods
xchg
mov
and
fistpl
xor
cmp
movsl
mov
pop
mov
sub
jnp
decl
mov
dec
mov
rcrl
dec
add
cmp
inc
int3
add
dec
imul
fwait
lock
jb
dec
xchg
xor
ss
sub
fisubrl
pushl
mov
aas
jo
into
sarl
fnsave
sahf
shl
scas
xchg
cs
cmp
ja
push
jo
lahf
jl
sub
jmp
jno
sub
mov
mov
sbb
pop
jp
pop
inc
shrb
mov
or
js
shll
sub
mov
and
cmp
and
shrl
adc
loopne
and
cmpsl
lret
xchg
lahf
int
pop
jne
jle
test
adc
ffree
xchg
adc
pop
xchg
sbb
es
mov
call
enter
adc
rcr
sub
lahf
adc
inc
test
add
loope
mov
jb
lcall
lcall
ds
cs
or
loopne
or
ljmp
js
adc
cmp
jnp
orl
imul
adc
idivl
push
ja
pop
or
xchg
repz
mov
jae
or
xchg
sbb
jg
stos
stos
scas
jl
xor
out
jae
ret
cld
adc
sarl
sbb
pop
lock
sub
cwtl
dec
shlb
jle
divl
call
jae
addl
fisubrs
mov
int
jns
icebp
jecxz
push
pop
cli
lcall
pop
in
imul
cs
jmp
xchg
add
push
lods
add
xchg
fadd
dec
pop
sti
sbbl
xor
incl
mov
mov
sahf
outsb
dec
out
cmpsb
fldt
adc
js
cs
in
sti
fstpl
push
sbb
xchg
pop
adc
dec
inc
je
mov
pop
or
mov
xchg
outsl
push
cmp
in
mov
inc
mov
fs
icebp
sahf
sbb
mov
incl
mov
jecxz
js
push
adc
loop
in
aas
cmp
xor
inc
subl
jl
dec
dec
adc
fnstsw
ret
xorl
push
lahf
aaa
nop
lret
push
outsl
adc
stc
stos
out
xchg
fistl
gs
ljmp
mov
sarl
fs
sub
jge
ret
gs
and
xchg
rcr
loop
pop
test
push
cmp
ljmp
xchg
mov
mov
dec
push
or
push
dec
fwait
sub
cmp
cmp
pop
mov
roll
sub
sub
or
cmpsb
in
out
mov
dec
cld
mov
dec
add
cmc
jno
inc
mov
in
adc
scas
test
jg
aad
call
inc
shr
clc
mov
jmp
inc
sub
repz
jmp
mov
sbb
pop
insl
movsb
lods
cmp
sub
and
fs
std
jbe
enter
pop
iret
dec
push
push
add
outsb
lods
jno
test
jb
push
dec
jmp
dec
cs
pop
adc
decl
dec
bound
in
leave
jle
outsb
mov
add
call
mov
adc
inc
jmp
inc
push
or
les
gs
inc
mov
mov
push
pop
ja
lcall
popf
ret
ljmp
fsubrs
imul
pop
jnp
fimuls
repz
cli
fcomps
sahf
dec
scas
fdivl
cld
inc
pushl
push
mov
adc
repnz
std
int
call
out
in
or
push
loope
mov
sub
lock
dec
out
sub
mov
arpl
sub
sub
lahf
mov
notl
jge
xor
jl
dec
add
push
adc
xor
push
loop
ret
and
in
xor
inc
aam
sub
ljmp
sbb
stos
loopne
daa
pusha
xor
push
sysenter
cmp
xchg
dec
popl
shrb
dec
out
mov
add
cltd
jmp
push
les
fsubl
repz
hlt
xchg
sub
fistps
decl
add
enter
push
mov
lcall
movsl
rcll
fst
ja
call
aaa
cmp
cmp
sub
sub
fildll
dec
mov
repnz
ljmp
pushl
lret
pusha
icebp
sub
push
jnp
sbb
inc
lods
test
jecxz
adc
jmp
add
mov
inc
test
xor
sbb
imul
sbb
xor
add
mov
xlat
adc
dec
xor
push
loope
jbe
js
out
xor
out
xor
popa
pushf
cmp
pop
fnstenv
mov
dec
nop
loopne
cmc
popf
or
or
cmp
mov
add
icebp
lahf
xchg
sbb
daa
mov
iret
int
jge
sub
or
jno
decl
stc
in
call
mov
dec
and
inc
popf
daa
je
arpl
cli
decl
outsl
xor
notb
test
subb
sbb
mov
fistl
sub
lret
sbb
lock
in
sar
jmp
lahf
dec
jns
into
add
mov
in
sbb
sbb
cmp
mov
dec
gs
add
mov
aaa
ret
gs
out
xlat
xchg
adc
movsb
lock
mov
mov
sbb
test
ljmp
divl
mov
call
adc
outsl
push
pushl
leave
mov
cltd
cli
mov
fstp
std
and
push
dec
popa
mov
mov
ljmp
popf
iret
xchg
mov
cmp
mov
jg
lds
ja
into
push
and
mov
jmp
inc
push
jl
mov
push
mov
iret
or
stos
push
mov
pop
ljmp
cli
incl
dec
push
pop
clc
gs
fnstcw
sahf
xor
fiadds
sub
arpl
cli
adc
push
mov
sub
fwait
and
push
test
imull
mov
push
xchg
addb
rorl
add
out
stos
push
rol
jl
leave
ficoml
sbb
mov
jmp
test
loop
jb
insl
scas
pop
dec
add
xor
cmpsl
mov
dec
cmp
call
push
push
loopne
push
sub
cmpsb
cs
push
adc
add
stos
movsl
mov
std
adc
xchg
mov
add
mov
xchg
or
and
dec
pushl
jecxz
jg
add
mov
hlt
int3
repnz
dec
pop
icebp
dec
notl
push
call
inc
leave
aas
mov
nop
xor
xor
mov
out
cmp
gs
jp
pop
mov
jmp
jle
ret
jnp
push
sbb
es
and
loop
sarb
ljmp
scas
adcb
leave
jecxz
xchg
pop
out
sbb
cmp
mov
jecxz
ljmp
leave
and
and
and
mov
cs
test
sub
push
rcrl
jmp
xor
cmp
jb
notb
mov
xor
jne
jb
jmp
mov
fsubrp
cs
jle
pushl
std
jmp
frstpm(287
mov
dec
jne
aaa
hlt
rcll
push
ds
mov
inc
jmp
sbb
repz
incl
insb
or
or
push
fdivl
mov
xchg
orb
cmc
xchg
repnz
add
sbb
jmp
lock
or
mov
popf
mov
test
fldcw
in
cmp
testl
inc
pop
call
mov
inc
inc
lods
xchg
jle
inc
and
sti
dec
daa
and
stc
inc
cmp
in
sbb
jmp
rcrl
popa
mov
decl
sti
mov
xor
push
lds
xor
test
fcomip
movsb
cmpsb
mov
nop
repnz
jg
add
sbb
push
lods
pop
xor
call
jbe
sbb
ljmp
sarl
rolb
ljmp
jg
add
sub
jle
push
cld
ss
jp
pushf
add
push
lahf
outsb
jp
aaa
aam
es
icebp
call
mov
scas
inc
es
pop
aaa
or
sahf
add
call
sar
dec
mov
cmpsb
dec
xor
push
jnp
dec
lea
mov
mov
cmp
dec
out
push
std
push
notb
pop
je
cld
xor
xchg
push
decl
sbb
fildll
sbb
insl
add
cs
mov
mov
mov
mov
sub
lcall
scas
call
push
jne
mov
pop
outsb
imul
push
sub
icebp
inc
imul
push
clc
mov
pop
cmp
jmp
lcall
jg
add
push
mov
scas
xor
jb
stos
adc
jmp
incl
cld
jmp
or
fimuls
test
xor
xchg
or
mov
or
lcall
xor
in
mov
test
das
jle
mov
icebp
jns
xchg
and
shrb
mov
inc
popf
cmp
bound
xor
push
pop
sub
xor
aas
loop
inc
and
das
fs
call
stc
call
daa
push
test
pop
aam
pop
adc
icebp
in
lods
add
rclb
pushf
test
repz
xchg
mov
adc
xchg
in
pop
or
idivl
xchg
push
lret
push
mov
call
inc
mov
adc
jg
and
iret
cmp
pop
push
movsb
mov
test
cmp
adc
call
sub
push
test
rorb
lret
mov
fistpll
stos
inc
je
je
cli
mov
frstor
mov
out
xor
dec
or
std
xchg
lea
pop
fisubrs
jg
insl
loop
leave
sub
out
lahf
jns
adc
mov
test
shll
decl
addl
movsb
xchg
mov
enter
add
inc
jbe
inc
stc
xor
jmp
mov
push
loope
insl
mov
jecxz
ljmp
add
and
hlt
call
xor
stos
mov
js
and
adc
test
pusha
mov
cmp
mov
lock
xor
arpl
mov
jnp
or
sahf
push
mov
mov
dec
jb
and
andb
testl
jge
sub
lret
or
mov
pushf
inc
mov
popf
stc
cmc
pop
gs
jecxz
dec
pop
sbb
cmp
lcall
clc
adcl
rclb
jg
push
pop
rorb
pushf
pop
dec
push
pushf
lcall
pop
std
scas
bound
sbb
aas
or
mov
cmp
std
sbb
jno
in
add
add
fmuls
ja
pop
mov
jb
ljmp
xor
inc
mov
xchg
and
mov
out
cmpl
movsb
add
cmp
sbb
xor
gs
mov
shlb
xor
sbb
repnz
pop
pushf
outsb
mov
ljmp
sub
mov
dec
push
hlt
pop
jg
insl
lods
pop
push
push
mov
popf
subl
incl
push
adc
jae
leave
jns
lret
adc
xor
jns
insb
fldt
or
aad
pusha
bnd
mov
inc
out
cli
cmp
xchg
dec
mov
mov
iret
mov
lock
jg
jecxz
jmp
popf
cmpsl
dec
mov
cmp
dec
inc
sbb
int3
bound
pop
cmp
jecxz
push
sti
sbb
fildl
out
incl
cld
lcall
incl
mov
in
enter
sti
fwait
xchg
call
sub
repz
sub
mov
adc
shlb
mov
sbb
out
pushf
incl
adc
push
ja
ljmp
push
leave
cmp
mov
push
pmulhw
push
mov
push
sbb
mov
mov
ja
in
mov
jae
shr
lcall
addr16
sub
out
clc
jmp
js
mov
mov
pusha
jg
xchg
out
ljmp
mov
inc
dec
test
enter
daa
and
xchg
movsb
faddl
cwtl
shrb
outsb
testb
out
xchg
cmp
arpl
jge
mov
sbb
daa
sub
out
and
int
xor
mov
in
movntps
loope
xchg
call
out
or
xor
mov
scas
outsl
loopne
push
addr16
call
ds
sub
pop
imul
add
add
mov
pop
out
mov
decl
test
ja
scas
and
lret
xchg
das
dec
ljmp
xchg
idivb
dec
ljmp
xor
sub
cmpsl
lret
mov
mov
cmp
out
decl
out
xchg
pop
stc
scas
aaa
mov
push
push
push
sbb
xchg
jbe
mulb
cmp
ja
inc
mov
out
cmp
pop
bound
sub
xorb
out
mov
jmp
je
repz
inc
popf
pop
sbb
mov
cmpsl
sahf
lahf
leave
repnz
fimull
pushf
adc
sbb
dec
cs
test
mov
rcll
incl
enter
mov
xchg
add
ret
outsl
mov
pop
push
outsl
mov
andl
pop
mov
pop
jo
icebp
lock
jg
jne
ss
lods
hlt
xor
xchg
cs
mov
call
je
ret
nop
push
and
fs
scas
sub
jp
test
push
or
xor
stos
stos
lret
in
adc
in
dec
divl
inc
ss
orb
jmp
inc
push
or
mov
inc
adc
stos
jbe
mov
popa
fcmovb
lcall
mov
add
cld
or
pop
xchg
sub
cld
adc
lock
mov
daa
and
lahf
mov
lahf
repnz
pushl
pop
enter
pop
adc
leave
dec
scas
enter
cltd
dec
call
lods
nop
push
pop
inc
adc
outsb
into
sub
mov
insb
test
dec
xchg
lcall
ljmp
call
mov
cld
push
int
push
mov
mov
dec
xor
setnp
int3
lret
sub
jg
xor
test
decl
fxch
insb
and
outsl
mov
lds
loopne
lods
andb
xchg
loop
jg
sub
jne
stos
data16
cwtl
jno
aas
imul
fwait
scas
add
xor
call
mov
mov
sti
fstpt
jnp
ljmp
cmpsl
scas
cld
xchg
and
jmp
jb
cwtl
mov
clc
repnz
pop
or
mov
inc
aaa
inc
dec
cltd
adc
xor
mov
addb
mov
ljmp
mov
cmp
jl
lret
push
push
and
jle
push
in
sub
xchg
pop
ds
jge
movsb
mov
xor
push
dec
in
clc
shll
insl
cmp
mov
mov
sbb
xchg
cld
sahf
sub
decl
or
outsb
scas
add
add
xchg
sbb
jmp
sub
ja
jg,pn
call
cmp
jecxz
inc
adc
shlb
xchg
mov
pop
mov
jl
out
mov
clc
call
hlt
je
push
cmp
scas
mov
iret
mov
test
sbb
lret
add
stc
push
add
ljmp
daa
test
dec
mov
adc
pop
jmp
adc
jnp
inc
cmpsl
jne
iret
jae
decl
mov
push
lds
iret
lea
mov
and
cmp
int3
sub
inc
decl
push
faddp
pop
or
clc
fsincos
stc
cmp
sub
imul
fcoms
mov
imul
das
es
xchg
in
out
loopne
add
outsb
clc
or
cmp
push
nop
dec
xor
les
adc
call
nop
sahf
sahf
or
stos
sti
mov
jl
cmp
incl
inc
sub
dec
out
lcall
movsl
clc
mov
mov
xchg
jl
dec
lods
loop
mov
sbb
lret
inc
loopne
cld
fnsave
xchg
mov
int
sbb
and
xor
jmp
mov
orl
sbb
xchg
add
in
jp
adc
cwtl
gs
in
mov
arpl
das
ret
pushf
sbb
pop
mov
scas
mov
mov
stc
imul
add
sbb
fisubs
push
jbe
les
aam
std
sub
mov
stos
mov
ljmp
fistl
loope
mov
test
fsubr
int
rcll
enter
call
incl
repz
sbb
sub
pop
cmp
xchg
xor
jbe
push
cmp
fucomip
lret
cmpsb
dec
mov
clc
lock
lds
bound
mov
in
nop
das
insl
ss
outsl
mov
imul
sbb
lcall
cmpsl
mov
mov
sub
mov
jmp
out
shrb
ljmp
arpl
push
xor
scas
fimull
or
push
fcmovu
pop
repz
pop
cld
jg
popf
dec
out
or
imul
out
out
ret
out
and
and
jg
inc
sbb
daa
mov
testl
pushl
sti
xor
dec
jae
stos
mov
xchg
stc
ds
int
pop
sub
sbb
enter
call
sbb
mov
sub
pop
stos
rcrl
rcr
mov
std
mov
mov
jmp
xchg
inc
inc
mov
fcmovb
sarb
sbb
inc
loopne
cmp
pushl
cmp
daa
push
sub
cmc
out
jp
in
hlt
test
leave
xchg
iret
addl
lcall
orl
mov
mov
fs
daa
mov
into
pusha
jl
xchg
xchg
push
cmp
je
lcall
sub
je
jb
pop
mov
inc
xchg
add
push
daa
cmpsl
icebp
cmp
pop
push
jl
jbe
push
jns
lock
aam
fisttps
pop
and
out
pushf
adc
mov
mov
add
ret
movsb
pop
es
add
jmp
inc
cli
jg
and
inc
sub
mov
cmp
mov
push
mov
loop
test
jmp
cli
popa
pop
js
push
mov
dec
ljmp
fsubrp
in
cs
aad
loop
adc
pusha
out
jge
fildll
pop
sbb
mov
decb
xchg
out
jecxz
push
pop
jmp
xchg
cmp
jns
adc
jbe
jmp
adc
scas
mov
jecxz
in
jb
test
jecxz
cmpsb
decl
cli
subl
idivl
cwtl
lea
fisubl
pop
inc
mov
mov
jg
push
in
inc
imul
aad
mov
int3
lret
aam
cmp
fisubl
ljmp
ret
sub
rcll
loopne
shll
aas
sub
lret
decl
into
mov
adc
int3
dec
sbb
addr16
lret
mov
fbld
jne
mov
daa
dec
test
inc
sti
imul
dec
xor
dec
jno
decl
shl
pop
xor
rcll
cmp
js
lcall
clc
sbb
pop
icebp
incl
div
pop
or
push
in
pop
inc
sub
sti
mov
lcall
std
sub
pop
xor
push
mov
inc
mov
ja
outsl
push
lcall
jg
ljmp
mov
and
push
mov
jmp
sahf
insb
out
mov
adc
push
cmc
icebp
in
add
xchg
xchg
push
push
iret
pop
mov
mov
mov
cmp
sbb
mov
jmp
mov
jle
stos
pop
pop
dec
dec
negb
jmp
jbe
out
enter
dec
mov
pop
ss
fdivr
loopne
cltd
xchg
push
repnz
inc
and
clc
cmp
add
fucomi
fbstp
xchg
add
add
or
mov
pop
push
or
or
or
or
or
adc
adc
push
adc
fidivrl
or
pop
sbb
adc
adc
adc
outsb
mov
add
or
adc
pop
adc
test
cld
sub
rolb
jo
fsubr
aaa
add
add
add
adc
fnstcw
add
inc
or
inc
mov
jnp
cmpsb
jb
imul
add
add
lcall
inc
push
adc
and
xor
inc
mov
adc
xor
sbbb
test
out
xchg
lea
mov
push
rcrl
push
inc
xor
cmpsl
or
adc
inc
arpl
pop
and
inc
cmp
pop
xorl
adc
pushf
into
add
adc
add
fisubrs
inc
lods
push
adc
pop
popa
jno
sar
out
and
adc
xchg
mov
lock
pop
stos
and
loope
icebp
mov
mov
inc
roll
inc
lock
mov
fiaddl
or
jg
and
js
loopne
sub
rcr
push
inc
cli
or
xchg
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
mov
cli
incl
inc
or
pop
les
fsts
dec
add
mov
mov
cmp
ja
out
cmp
xor
and
shll
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
in
addb
pusha
add
std
or
ljmp
add
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
std
jmp
lahf
mov
movsl
jecxz
pop
mov
add
or
xchg
jg
or
insb
ljmp
or
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
fs
jg
shll
pop
pop
mov
popl
movb
xchg
sbb
decl
scas
adc
mov
xor
lods
scas
xchg
test
aam
and
sbb
call
mov
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
ss
push
in
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
pushl
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
outsl
jg
testb
push
sahf
pop
clc
sti
jg
jno
lock
jg
in
call
sarl
xor
hlt
and
xchg
jmp
sbb
subb
add
pop
jb
mov
mov
in
push
mov
sub
pop
mov
jl
rorl
adc
push
jo
jg
hlt
push
add
stc
loope
mov
push
in
div
sar
andl
aas
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
mov
inc
sbb
paddb
inc
mov
dec
adc
cld
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
push
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
aaa
fldln2
fwait
inc
adc
loope
fisttpll
out
aas
std
cli
push
jg
cmp
sub
inc
scas
inc
mov
lcall
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
fsubl
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
pop
xor
mov
sti
das
jmp
xchg
pop
clc
pop
hlt
sub
movsb
add
add
lea
jg
gs
std
xorb
jg
add
decl
outsl
adc
ret
das
pop
pop
pop
shlb
out
ljmp
sbbl
jno
or
sarb
std
pop
les
cli
mov
call
pop
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
mov
call
sub
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
decl
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
call
outsl
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
add
jg
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jmp
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
call
pusha
imul
add
mov
cmp
xchg
mov
ficoml
lods
pushl
ftst
jbe
xchg
and
ljmp
out
jae
shrb
shlb
out
aas
stc
add
out
gs
incl
mov
call
adc
pop
cld
addl
adc
and
repnz
cmp
fmull
enter
jecxz
pop
cld
lahf
iret
scas
sub
in
pop
mov
sub
mov
dec
mov
das
incb
fisubrl
aas
mov
or
cld
inc
or
sti
add
repnz
jg
mov
sub
aad
test
mov
mov
iret
fistpll
mov
push
push
sbb
stos
icebp
pop
incb
jno
pop
sub
push
inc
jecxz
sbb
sarl
adc
repnz
lods
loopne
sar
adc
lahf
pop
mov
in
xor
imul
dec
push
cmpl
aas
fsubrl
lock
or
sbbb
mov
add
push
sbb
jne
push
and
mov
adc
loope
xchg
lahf
or
push
rcrl
rolb
pop
bound
aas
fistpl
adc
call
jno
pop
jg
fists
scas
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
call
adc
or
imul
xor
dec
xor
fsubr
fistps
lds
ss
jg
jg
stos
pop
add
ds
cmp
out
fidivrl
xor
lahf
les
sbb
sbb
clc
incl
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
sub
incb
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
cld
jg
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
aad
loop
lahf
mov
or
out
lcall
fistpll
icebp
push
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
lea
decl
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
fistpl
insl
pop
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
mov
insb
sbb
cwtl
inc
mov
mov
jo
aas
repz
outsl
lock
in
jmp
stc
out
je
ret
aaa
clc
push
std
mov
add
test
lds
aad
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shlb
std
insl
and
mov
or
dec
ss
bound
or
repnz
clc
dec
cmc
mov
jl
call
mov
lret
pop
in
cmp
int
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
inc
mov
sbb
xlat
inc
aas
mov
jg
add
clc
out
cmp
or
addr16
sbb
cld
daa
jp
push
pop
in
idiv
adc
cltd
or
cli
ja
cld
stos
jle
nop
cmp
das
incb
lock
pop
pop
div
cld
testl
mov
stc
lahf
loope
jae
jmp
add
mov
sar
mov
add
out
icebp
mov
loope
mov
fdiv
mov
sti
mov
fbstp
jb
adc
das
cmpsb
pop
mov
jge
out
xorb
int
call
xor
decb
mov
mov
mov
and
call
imul
add
cmp
mov
cmp
int
add
push
pop
aaa
std
ffreep
cmp
dec
inc
sbb
jnp
jg
xchg
fimull
ret
rorb
sbb
aaa
inc
adc
adc
mov
sub
mov
pop
clc
loope
or
cmp
or
jp
dec
and
inc
xlat
shll
scas
jmp
xor
push
call
cmp
cmp
repz
push
pop
gs
fbld
outsl
pop
out
jg
jno
ret
dec
sbb
cmp
sarb
out
iret
push
dec
jge
pop
clc
xchg
jmp
aam
sbb
mov
jne
in
sbb
xchg
imul
movl
pop
outsl
jmp
std
mov
daa
jmp
faddl
push
adc
mov
int
popa
lds
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
mov
add
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
call
insl
addr16
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
mov
or
add
cli
or
push
sti
pop
inc
dec
push
shrl
push
cmp
inc
and
int3
pop
iret
and
pop
add
icebp
out
ja
dec
or
fdivr
aad
cs
and
dec
push
js
xchg
push
and
push
aas
insb
push
inc
or
sbb
iret
add
jb
or
fucomp
lret
addb
inc
mov
jae
bound
imul
sub
jne
jo
imul
out
imul
add
adc
or
adc
andb
dec
push
inc
sbbl
into
add
pusha
mov
int
inc
or
insb
push
push
cli
xor
inc
imul
je
inc
sbb
jl
shlb
incl
and
outsl
outsl
insb
push
push
outsb
js
test
popa
jo
push
mov
inc
jne
sbb
mov
mov
or
cmp
fidivl
enter
subb
lock
add
popa
or
push
js
arpl
jo
xor
leave
add
inc
lea
and
cmp
inc
jns
push
imul
fs
sbb
mov
ljmp
push
jecxz
test
jb
cmp
inc
dec
call
daa
pop
jo
xchg
jo
or
fnstenv
add
inc
jl
cmp
cltd
and
and
dec
outsb
imul
insb
stos
fisttpll
data16
sub
xchg
or
mov
push
outsb
rol
loopne
flds
sub
xchg
dec
inc
sbb
xor
inc
inc
shlb
sbb
loopne
fisubs
mov
fwait
rolb
insb
jne
xorb
addl
xchg
mov
popa
xor
mov
xorb
push
xchg
andb
insl
mov
push
pop
push
mov
mov
jo
pop
sub
push
jne
subl
pop
mov
and
sub
push
jns
mov
mov
jae
adc
and
push
push
hlt
xchg
inc
jecxz
sbb
dec
lock
dec
cmp
xor
or
or
add
rclb
jno
inc
or
dec
push
imul
pop
fsubs
stos
inc
dec
sbb
sbb
ret
dec
adc
xchg
sbb
leave
mov
inc
adc
jns
mov
sub
test
mov
mov
lcall
inc
adc
mov
sub
pop
push
cmpsl
mov
and
popw
push
shlb
lret
mov
mov
push
push
inc
xchg
popa
and
das
ljmp
jae
pushf
inc
or
pop
ret
mov
hlt
dec
inc
dec
or
inc
or
push
into
mov
adc
mov
jb
jecxz
push
gs
or
fs
cmp
ds
xchg
lods
xor
je
aaa
mov
inc
xchg
or
push
je
stos
pop
push
push
je
inc
sbb
inc
jnp
or
cmp
and
inc
mov
out
or
jp
mov
push
jg
sbb
xchg
bound
jae
popa
xor
adc
mov
roll
daa
fsubrs
jle
outsl
jns
int
push
xor
sbb
gs
and
mov
stos
data16
scas
aad
jns
jp
inc
lock
je
push
inc
inc
fiaddl
lods
dec
shrl
inc
sbb
mov
mov
mov
inc
mov
shl
and
jne
or
push
es
mov
cwtl
insb
and
add
test
test
loope
inc
adc
cltd
lods
adcb
push
cmp
notb
out
dec
or
cmp
or
inc
add
and
push
sub
push
jne
inc
fadds
adc
fbld
mov
dec
xor
push
jbe
ud1
inc
mov
fcoms
test
popa
pop
jnp
inc
dec
push
andl
pop
nop
or
and
cmp
and
pusha
pop
outsb
push
outsl
add
add
xor
add
inc
xor
ret
jno
jne
xor
push
insl
sub
sarb
pop
adc
adc
jns
jne
sbb
xchg
movhlps
jbe
xor
xchg
arpl
std
movsb
add
push
jp
ds
js
adc
pop
adc
jge
mov
xor
sbb
inc
sbb
pop
jmp
outsb
sub
andl
imul
addl
pushf
popa
shll
and
sub
mov
shlb
jo
or
int3
outsb
adc
sbb
lds
pop
mov
pop
ja
mov
je
pop
addl
jbe
jb
adc
and
lahf
nop
push
stos
jo
nop
inc
cs
jo
inc
mov
push
arpl
insl
sbb
test
xchg
fs
pop
sbb
pop
fisttpl
pop
mov
inc
insb
jle
jge
pop
inc
subb
dec
lcall
repz
adc
jne
add
insl
adcl
in
pop
js
inc
sub
and
sbb
andl
mov
mov
inc
movsl
xchg
out
jae
cmp
dec
push
push
pop
xor
popa
outsl
sub
loop
sub
outsb
inc
push
push
movsb
loopne
loopne
cmp
sub
ja
pop
cmp
ja
bound
je
insl
dec
outsb
dec
test
mov
mov
cmp
jnp
sar
pop
add
add
lcall
mov
xchg
lcall
add
or
shll
push
xchg
mov
inc
push
add
add
adc
into
cmpsl
mov
rcr
and
inc
jb
lods
add
mov
inc
xchg
shlb
adc
bound
roll
inc
inc
out
inc
inc
cmc
das
and
push
jb
inc
jae
sbb
pop
or
shll
xor
add
iret
mov
cmp
jo
sbb
xchg
push
jo
mov
add
push
pop
fcompl
jo
or
xchg
pop
mov
and
cmp
gs
mov
mov
lret
sbbb
fs
ret
fidivl
or
inc
cmpsl
push
push
dec
mulb
das
fcompl
mov
fwait
jno
test
gs
in
pop
push
inc
fildll
xchg
push
rolb
inc
mov
int3
nop
movsb
cmp
and
enter
je
sub
std
mov
jmp
testb
jo
mov
and
mov
mov
push
insb
testb
cwtl
mov
gs
cs
add
add
push
push
ret
lret
mov
xchg
jge
dec
pusha
sbb
and
dec
loopne
xchg
xor
push
andb
or
enter
pushf
in
mov
mov
adc
sub
jno
ret
inc
xchg
ja
push
inc
add
cmp
pop
out
push
push
adc
lret
pop
mov
push
insb
sub
dec
sub
or
pop
jnp
push
mov
lds
fs
dec
mov
pusha
xchg
arpl
mov
inc
push
sbb
sub
push
outsl
popf
cmp
lds
and
mov
jb
and
xchg
mov
ficomps
aam
lds
outsb
shll
mov
jbe
pop
pusha
dec
mov
mov
jg
loope
or
outsb
cmp
data16
fs
adc
lods
or
sub
add
repz
lret
fcomps
or
lods
psrlq
mov
mov
inc
fs
cmp
lea
into
ja
dec
test
aaa
addr16
shrl
fistl
fdivrl
enter
rcrl
mov
add
mov
adc
jns
stos
fsubs
add
std
stos
test
push
push
inc
out
adc
inc
imulb
ljmp
lea
jmp
pop
xchg
dec
push
sub
dec
aad
jae
inc
add
pusha
mov
cmp
jne
mov
imul
jo
add
jmp
sub
negl
sbb
sbb
dec
fwait
jp
sub
inc
test
pop
inc
addb
arpl
mov
inc
fsubrs
add
inc
sub
jle
sti
loopne
inc
pop
divb
add
or
jnp
fwait
add
pop
pop
adcb
mov
lods
jmp
add
inc
add
enter
rcrb
loopne
mov
pop
cs
push
sbb
mov
add
add
stos
add
jb,pn
popa
adc
add
lock
into
mov
inc
cs
dec
push
push
pop
jae
push
dec
rcrb
lea
and
movsb
pop
lahf
fs
jo
xchg
inc
icebp
jg
xchg
and
loop
add
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
and
inc
add
insb
inc
add
add
