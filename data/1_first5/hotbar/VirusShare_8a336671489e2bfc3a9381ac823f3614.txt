fcomp
decl
or
add
mov
or
pop
add
int3
add
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
mov
mov
add
or
dec
and
sti
enter
push
hlt
test
pop
push
dec
lahf
xorb
sbb
les
insl
pop
push
push
push
xor
pop
fdivr
call
and
inc
add
aam
lea
inc
dec
sti
pop
cld
pop
nop
adc
incl
sbb
inc
push
mov
rcll
push
mov
je
push
push
push
mov
push
neg
mov
mov
inc
nop
jne
out
push
mov
pop
jg
mov
add
mov
inc
or
sti
jg
dec
push
xadd
dec
test
jg
add
mov
call
ret
pop
ret
testb
add
ljmp
jge
mov
mov
sahf
mov
les
int
mov
mov
xor
push
fcoml
fsub
subl
lds
xchg
fnstsw
pop
or
sbb
aaa
push
xor
fidivs
and
mov
sbb
push
and
out
jl
and
push
add
dec
sbb
add
add
xchg
dec
cltd
adc
mov
push
xchg
dec
add
mov
fs
add
push
mov
mov
imul
dec
add
and
rorl
cld
sti
or
shlb
add
inc
hlt
push
and
sbb
push
sbb
mov
adc
mov
loopne
inc
mov
add
and
inc
lock
mov
sub
lds
ss
mov
pop
outsb
loopne
ret
inc
pop
jb
filds
sbb
fistpl
jl
sub
push
push
pop
stos
jb
popa
xchg
xchg
sub
fwait
mov
add
add
mov
sub
ss
insb
sbb
sbb
pushf
xor
sete
bswap
mov
mov
mov
dec
test
mov
scas
xorb
sarl
lcall
fdivrs
push
les
add
gs
pop
cld
push
push
or
cmpb
dec
addl
add
cltd
cld
xor
cmp
shll
add
mov
xor
and
and
mov
inc
aam
xor
xchg
jg
push
push
inc
push
mov
lea
jecxz
mov
adc
sub
scas
and
add
sbb
lods
nop
xchg
add
inc
and
cmpsl
and
dec
test
push
jae
inc
jo
pop
sub
xchg
cld
clc
pop
push
mov
and
mov
jne
push
lea
filds
jns
cmp
jge
mov
stos
pop
pop
lods
mov
pop
ret
xor
repz
push
dec
dec
push
sub
push
insb
loope
lret
mov
cmp
jl
je
fcompl
inc
les
leave
jmp
daa
cli
jbe
add
mov
call
lds
sub
jl
or
scas
insb
add
inc
jb
enter
add
and
inc
xor
push
popf
push
je
xor
pusha
push
jl
nop
jl
sub
add
leave
add
dec
fstpl
aad
mov
ficomps
mul
inc
dec
jne
pusha
bound
dec
in
dec
inc
loope
int3
push
add
call
inc
mov
inc
je
in
xor
mov
or
repnz
cmp
sbb
push
push
or
aas
sub
push
movsb
sbb
inc
hlt
adc
hlt
nop
test
cmp
mov
shr
push
sarb
push
inc
push
mov
add
insb
lds
nop
addl
pop
shl
bound
mov
cmp
jl
or
and
dec
sahf
cs
dec
or
push
adc
push
jg
or
push
stos
add
push
lea
out
and
push
cltd
add
push
insb
fistps
ds
xor
jge
roll
ja
xorb
push
sub
dec
or
test
push
adc
loopne
pop
or
lea
and
shll
mov
pop
mov
push
jbe
mov
dec
jo
pop
sbb
xchg
mov
pop
and
decb
add
cld
test
dec
fmull
imul
and
mov
xchg
push
es
or
mov
out
push
push
push
cmp
decb
cmpsl
in
test
mov
push
pusha
sub
xchg
pop
outsl
sete
test
test
xchg
or
add
or
and
jmp
push
push
enter
xor
adc
adc
push
jne
add
xor
and
push
dec
pop
xchg
lret
inc
test
test
mov
push
mov
jne
mov
push
pop
mov
inc
jne
push
jle
nop
or
jo
push
adc
and
mov
jne
subb
push
or
out
inc
enter
push
or
bound
aas
inc
ss
jmp
out
push
and
adc
dec
mov
jl
push
push
push
push
adc
or
popa
push
or
xor
cmpsb
jo
push
ljmp
dec
in
ret
adc
fs
loop
filds
scas
dec
push
cmp
dec
cmpsl
sub
adc
sbb
sbb
sbb
std
filds
enter
inc
cmp
add
jns
fdivrs
push
cs
leave
mov
ja
nop
pop
jle
test
mov
aad
lahf
sbb
mov
in
push
cmp
sbb
aad
aam
cmp
sbb
pop
add
hlt
mov
fildl
push
and
adc
adc
dec
cmp
leave
mov
test
pushf
ss
cs
add
push
mov
pop
testl
sbb
mov
add
movsl
loop
cli
mov
push
cmpsl
xor
mov
ret
xchg
xor
push
mov
cmp
mov
adc
jno
pop
je
lea
popf
cmp
popa
aam
daa
inc
imul
fs
or
movlhps
mov
push
mov
data16
adc
sub
mov
loope
int3
fsubrs
cmpl
je
cli
or
mov
cli
inc
aaa
xor
xor
fcoml
push
push
pop
sti
lea
add
mov
aam
pop
testl
cmp
inc
mov
add
enter
xchg
fcoml
adc
cmpsb
or
adc
pop
daa
add
adc
adc
das
cltd
ja
sbb
das
insb
or
mov
mov
aas
mov
cmp
and
mov
mov
add
mov
sub
push
adc
imul
sbbl
push
adc
lea
pop
pop
icebp
jns
movsb
lret
test
jl
aad
les
push
push
sbb
out
push
xchg
mov
and
push
test
sbb
push
jl
jb
int
mov
sbbl
sub
in
jg
movsb
push
cli
jmp
cmc
aad
rclb
mov
jns
jne
pop
pop
and
jg
ficoml
les
or
ret
jo
push
push
mov
push
xchg
and
cmp
adc
in
test
idivb
sbb
push
cwtl
adc
xchg
add
sbb
and
cmp
test
sbb
sar
inc
adc
jle
jne
mov
daa
sbb
dec
addr16
call
popa
rcrb
push
lds
leave
sub
cmp
je
lods
notb
or
or
fs
sub
push
jl
add
mov
add
inc
mov
add
rorl
mov
or
mov
add
inc
add
outsl
shrb
mov
mov
decb
jo
push
push
push
xor
std
lea
icebp
pop
lock
push
call
inc
cmp
jl
test
pusha
mov
pusha
jnp
add
push
js
jne
mov
push
pop
add
push
xor
push
mov
or
gs
mov
push
pushf
or
pop
fs
dec
faddl
or
push
aaa
mov
mov
test
js
sub
and
adc
fbld
and
clc
sbb
movzwl
and
lock
std
stos
int3
xchg
je
push
cli
into
sbb
jmp
ljmp
mov
lea
add
inc
test
jne
sub
push
push
and
sbb
mov
adcb
mov
test
dec
lock
js
sub
sbbl
popf
cltd
pusha
jne
adc
jecxz
pop
dec
es
and
lea
pop
jb
iret
cmp
jg
test
add
ljmp
idivb
xor
mov
cmp
jl
xor
loope
adc
pop
pop
ret
mov
ret
or
adc
cmp
adc
pop
adc
lock
push
int3
arpl
push
cmp
cmp
insl
lcall
jne
pop
mov
sbb
jecxz
sbb
sarl
mov
push
pop
movsl
imul
ficoms
rcrb
adc
loope
fists
or
fstpl
test
test
mov
std
sbb
jge
movhps
pop
sub
in
push
test
pop
nop
mov
pop
insl
lahf
mov
jle
mov
mov
cmp
decl
inc
clc
mov
lea
rol
cmp
cmp
add
mov
cmpl
jmp
add
call
push
push
add
pop
mov
test
in
clc
cwtl
jl
inc
cmc
sub
jo
jg
mov
fcmovb
add
add
clc
and
dec
pop
ret
icebp
mov
enter
enter
jbe
je
cmpl
outsb
push
shll
add
in
inc
hlt
orb
mov
pop
ret
xor
mov
cmp
pop
sub
mov
pop
add
clc
sbb
adc
sub
or
jge
into
push
sbb
pop
movsb
push
and
sbb
and
pop
pop
data16
mov
sahf
or
jne
dec
and
in
test
xchg
push
ret
shrb
jg
cld
mov
or
lret
push
adc
loopne
pop
cmp
ja
add
dec
fcmovnb
sbb
int3
jmp
xor
push
xor
mov
sbb
cmpsb
outsl
repz
jg
mov
jb
adc
imul
aad
add
stos
push
add
cmp
in
nop
pop
add
push
push
push
or
int
fs
pop
cmp
push
push
sarb
add
add
sub
pushf
out
out
aaa
or
in
nop
dec
or
or
movsb
ret
lcall
xchg
pop
adc
mov
cmp
add
loop
rolb
sub
int3
or
shl
test
lahf
pop
push
mov
mov
or
dec
stos
imul
popf
testb
inc
add
pop
std
or
daa
rol
sbb
aaa
outsl
jg
incl
je
cmpl
lea
jl
mov
push
jne
push
pop
hlt
lcall
add
fs
iret
test
push
sub
push
push
das
and
push
hlt
push
push
insl
outsl
insb
add
or
cmp
adc
or
out
mov
inc
xor
or
pushf
aaa
stos
loope
add
push
adc
dec
fcoms
pop
call
or
inc
fs
push
inc
or
shlb
adc
ret
aas
dec
ret
push
and
adc
ret
sub
ss
push
fcoms
aas
xlat
adc
push
flds
mov
cwtl
sbb
pop
pop
push
push
or
mov
int3
ljmp
mov
mov
adc
adc
mov
dec
and
das
shlb
fnstsw
jmp
inc
add
in
roll
dec
adc
adc
mov
lea
sub
mov
add
mov
mov
addb
add
repnz
mov
sbb
or
cmova
cmp
cmp
sahf
cmp
inc
or
add
shlb
ret
fldt
sbb
jl
pop
sbb
mov
scas
adc
rcl
cmp
mov
sysenter
add
dec
adc
ret
mov
enter
adc
mov
mov
or
add
and
or
ret
push
jae
pop
or
mov
icebp
pop
mov
push
or
inc
jle
mov
mov
sbb
lahf
mov
push
sub
push
hlt
and
ds
cli
lret
or
or
stc
rorl
cmp
or
rcl
push
sub
rorb
and
mov
mov
sub
push
cs
lahf
in
mov
adc
or
inc
sub
dec
and
push
adc
dec
pop
or
inc
popa
scas
or
and
lock
sbb
inc
pop
dec
mov
xor
sub
jmp
lahf
jmp
add
popa
inc
cmp
jb
mov
pop
lds
add
pop
pop
mov
lret
fstl
mov
push
pop
adc
pusha
in
test
cmp
or
into
sub
addps
adc
fwait
pop
insb
adc
cmc
stos
sub
xor
incb
pop
pop
fistpll
and
inc
mov
or
sbb
push
cwtl
inc
inc
adc
pusha
cmpsb
adc
cmp
in
les
dec
cmp
in
and
or
push
cmp
ljmp
pop
test
jae
xor
pusha
aam
negb
ret
mov
cmp
inc
stc
int3
push
add
pop
or
cmp
outsl
mov
sbb
mov
or
add
push
enter
shrb
sbb
loopne
sti
jne
xor
push
push
dec
pop
outsb
or
sbb
sub
in
repnz
push
lea
add
ret
pop
jecxz
shrl
fisttps
xchg
cld
mov
add
enter
test
or
inc
mov
jmp
pop
lea
adc
das
insb
hlt
popf
push
test
mov
add
sbb
insb
jg
aas
sbb
sub
inc
sbb
and
jg
mov
sbb
pop
sbb
push
jo
pop
sbb
add
adc
or
sub
into
sbb
or
test
inc
mov
scas
outsb
xor
ret
lahf
mov
add
or
inc
cmp
decl
mov
or
les
je
scas
cmc
pushw
jle
cmp
push
push
movsb
rol
rclb
add
scas
cmp
adc
adc
sub
pop
jbe
dec
repnz
push
sub
sbb
adc
ret
aad
jne
cmpl
and
jle
lock
fistpll
data16
jmp
ret
pop
add
jne
insb
mov
outsl
and
cmp
fidivrs
repz
cmp
sbb
pop
psadbw
fsubs
cmpb
inc
lods
je
shll
je
ds
sub
je
je
pop
cmp
aam
push
mov
ret
lods
xchg
jne
jbe
fistl
popa
aas
pushf
xchg
mov
mov
popf
movsb
movb
mov
sbb
je
jge
pop
ret
push
inc
dec
adc
movsb
jne
add
mov
mov
cmp
dec
je
jmp
shll
lahf
add
arpl
rorb
clc
pop
pop
push
mov
fcomps
mov
add
mov
fstps
leave
and
ss
loop
faddl
shrb
fbstp
pushf
fcmovne
pusha
rorb
jp
lods
insl
cmpsb
jg
cwtl
push
lea
xor
mov
push
lret
sbb
shl
stos
mov
fldt
lahf
xor
mov
in
or
dec
cmp
push
mov
pop
fldz
movl
mov
stc
sbb
mov
xor
xor
je
clc
pop
stc
mov
scas
dec
sbb
cmp
mov
in
fnstenv
push
inc
cmp
test
out
xchg
add
inc
stos
cmp
mov
iret
in
popf
add
cmp
fdivrl
mov
jg
adcb
push
sbb
mov
loope
push
adc
and
sahf
call
mov
pop
jae
cmpsl
adc
add
adc
movsl
bnd
or
adc
fidivs
mov
push
dec
mov
pop
mov
lea
push
ficoml
add
push
lea
dec
ret
xlat
dec
cmp
inc
repnz
push
dec
aam
ror
inc
les
pop
stos
mov
lret
ficomps
test
or
cmp
sbb
push
js
adc
sbbb
aad
bound
push
in
add
je
js
jle
add
fiaddl
mov
xchg
movsl
push
nop
xchg
fists
test
mov
call
add
jg
insl
adc
add
push
jle
ficompl
rcll
add
pushf
subl
sbb
fwait
mov
jle
xor
or
mov
jno
add
mov
jle
call
pop
push
mov
dec
xchg
add
movsl
sbb
add
fadds
sub
movsb
shl
in
imul
out
sbb
xchg
and
rcl
mov
imul
and
insl
je
sbb
mov
push
pop
out
dec
sub
lods
inc
sub
xor
aas
lock
lcall
arpl
push
setne
push
push
push
dec
and
sub
lcall
repz
mov
rcrb
in
movsb
sub
inc
rcpps
add
cwtl
sar
mov
je
lea
add
add
add
xchg
iret
or
push
mov
mov
sahf
inc
std
or
pop
mov
pop
cmp
in
sbb
cmpl
xor
ret
sbb
adc
adc
test
je
xor
mov
sub
ret
push
push
fiadds
push
lea
je
adc
sub
inc
clc
out
out
clc
push
push
mov
mov
insb
push
dec
dec
mov
push
push
xor
mov
dec
sbbb
sub
push
ret
add
lods
jns
adc
mov
xor
dec
sub
and
jmp
mov
add
sahf
inc
add
mov
add
into
cmp
ljmp
adc
xor
and
xor
push
inc
gs
push
push
jbe
fadd
ret
outsl
icebp
jbe
cwtl
push
sbb
push
adc
out
sahf
push
xor
cmp
inc
push
cmp
jp
mov
push
lahf
stos
fwait
loop
mov
fbstp
outsb
adc
inc
out
inc
push
xchg
pop
ret
js
mov
sbb
ret
out
mov
cmp
call
pusha
adc
or
sbb
push
adc
mov
ret
xor
push
fnstsw
push
shlb
mov
add
or
js
add
movzbl
cs
out
mov
adc
or
pop
cmp
fisubrs
cmpsl
adc
push
pop
roll
pop
pusha
lock
adc
lea
adc
jle
sbb
sbb
mov
cwtl
add
jle
and
push
lret
xor
push
push
push
and
push
add
pop
xor
out
aas
cs
jo
lret
push
xchg
sub
pop
xor
test
xchg
das
int3
mov
shlb
loop
pop
sbb
push
clc
or
or
clc
add
pusha
jne
orl
aad
lahf
mov
mov
sbb
sar
aad
cmp
lock
sbb
jmp
pop
or
incl
xchg
cwtl
jb
loope
enter
cmpsl
adc
rorb
add
add
inc
ss
notl
fldz
fimuls
test
sub
mov
add
push
orb
sbb
inc
add
sub
ret
mov
xor
xlat
test
push
push
xchg
mov
add
lock
idiv
push
jne
stc
mov
add
xchg
icebp
or
pusha
and
sub
lea
or
push
pop
push
sub
fstpl
rol
out
orb
outsb
jae
push
psubw
sub
rorb
enter
add
sub
sbb
jns
lods
and
ljmp
sub
negl
xor
ficoms
ffreep
test
mov
or
push
push
dec
sbb
dec
lret
push
ja
ss
sub
addb
mov
inc
lahf
push
rclb
mov
push
pusha
jbe
movsl
jne
test
push
push
push
pop
loopne
popa
nop
cmp
sub
push
push
lea
cmp
push
jp
xor
add
mov
lahf
push
mov
push
cmp
or
js
jmp
jmp
addl
push
or
popf
mov
pusha
push
push
test
sbb
add
inc
cmp
pusha
imul
xor
mov
dec
add
fwait
push
data16
add
or
lds
mov
add
xor
push
repnz
push
push
and
jo
push
cmp
leave
xor
xor
sub
adc
inc
ja
mov
bound
adc
sbb
test
aaa
faddl
aad
or
shrb
cwtl
imul
inc
pusha
fmull
shlb
add
xor
jl
sub
outsl
inc
in
dec
cltd
inc
cs
test
push
add
sbb
movsb
lock
imul
inc
loope
scas
addl
clc
and
inc
popa
mov
push
xor
dec
and
or
push
lds
pop
add
xchg
push
enter
sbb
or
dec
inc
push
or
sti
xor
pop
inc
ljmp
add
pop
add
and
push
ja
jp
loop
lock
dec
ret
pop
sbb
jb
pop
xchg
jbe
es
dec
adc
cmpsl
push
movsb
fs
add
test
cmp
jno
or
inc
xor
add
sub
stos
adc
enter
popa
mov
mov
ja
push
mov
inc
and
outsl
addb
push
xchg
cmp
jecxz
push
push
lds
pop
mov
sbbl
cs
cld
add
jge
add
je
mov
cmp
jb
jge
xchg
lock
push
stos
sbb
sub
sub
push
xorb
push
pop
inc
test
mov
nop
cmpb
push
bound
push
mov
push
jecxz
adc
and
add
sub
iret
add
fadd
add
fdivs
outsb
mov
push
insb
push
mov
fmull
sbb
call
int3
dec
push
push
dec
ret
push
lods
xchg
push
xor
xchg
scas
push
rcll
mov
je
add
ja
ret
loopne
inc
add
push
sbb
mov
pop
and
mov
adc
adc
xor
out
add
enter
inc
mov
cmpl
inc
ret
cmpsb
insl
sbb
mov
mov
sbbl
or
icebp
xor
roll
das
sbb
dec
test
outsl
js
add
cltd
and
inc
mov
clc
or
fldenv
add
insb
pop
adc
jl
dec
add
pop
inc
xlat
adc
add
jg
popl
mov
mov
dec
bound
imul
sar
mov
arpl
mov
add
mov
imul
push
lahf
cld
dec
jo
adc
mov
pop
inc
cltd
sbb
pop
dec
fdivs
jbe
cmc
sub
mov
adc
cs
add
aaa
push
add
push
push
enter
push
inc
repz
jo
cld
cmp
je
cmpl
mov
push
cmp
jne
push
xor
fsubrs
call
pop
adc
ret
imul
adc
pop
es
lea
or
lcall
xchg
stos
lds
lods
imul
andb
hlt
and
lcall
push
dec
fs
push
inc
pop
cmc
inc
inc
push
and
add
sbb
add
jnp
push
call
out
data16
push
ljmp
loope
fisubrl
int3
incb
adc
fstpt
pop
scas
call
je
add
aaa
roll
lods
cmpb
sub
jo
mov
mov
sbb
loope
xlat
cmc
push
add
jl
insl
sti
or
mov
fidivrs
cmp
nop
add
xchg
sbb
and
adc
ljmp
lods
pop
lea
cmp
or
out
or
idivl
jge
jmp
mov
andb
mov
sbb
jg
std
jge
faddl
xor
sub
xor
mov
and
sbb
stc
shll
mov
test
sbb
filds
mov
mov
out
jbe
loop
add
push
fcoms
jmp
xor
add
fbld
jle
les
push
js
out
fidivl
sbb
lods
add
add
push
clc
add
out
add
or
movb
xor
mov
leave
adc
mov
add
inc
xchg
xor
daa
sbb
pop
leave
call
jbe
push
or
pop
push
xor
add
mov
cwtl
adc
sbb
xchg
in
jae
or
xor
je
mov
xchg
xchg
dec
loopne
aam
mov
inc
insl
pop
xchg
mov
adc
ja
sti
fisttpll
shlb
xchg
and
sub
lods
add
sarb
clc
inc
hlt
inc
lcall
xchg
sbb
add
fsubp
sub
sub
sbb
mov
pop
scas
bound
les
pop
or
inc
outsl
loopne
into
aam
insb
jmp
jecxz
xchg
out
or
pop
add
or
ret
jne
and
shlb
push
enter
xor
into
mov
into
or
pop
sub
sbb
stc
mov
sub
dec
and
cmp
js
or
or
push
xchg
les
test
je
mov
ljmp
push
xlat
leave
notb
xchg
push
xorl
mov
lea
test
push
add
push
inc
mov
jae
inc
jg
dec
cmpsb
xchg
or
cmpsb
sbb
push
aaa
jo
fstpl
inc
rolb
or
popa
and
sahf
adc
add
add
push
out
jl
push
leave
mov
jmp
cmpsb
nop
add
inc
push
inc
mov
loope
mov
inc
pop
mov
outsl
mov
bsf
sbb
and
add
add
sbb
mov
lcall
rcll
cmp
mov
or
adc
pop
or
and
jmp
or
mov
pop
ret
lahf
or
xor
xchg
pop
or
fs
add
inc
inc
adc
or
add
push
mov
push
sub
clc
setb
insb
push
mov
sub
cmp
setae
lcall
adc
popa
xchg
js
lret
js
int
mov
mov
pop
pop
call
inc
in
loopne
pop
push
add
lock
lods
dec
inc
push
aam
lea
push
rol
and
push
aad
push
movsl
xchg
jo
dec
push
es
pop
pop
out
and
rorl
add
jecxz
pusha
test
mov
xor
push
pop
cmp
mov
sub
dec
inc
push
adc
mov
dec
adc
mov
aam
cmp
popf
and
add
mov
sbb
inc
ss
in
sbb
add
dec
dec
push
bound
or
sahf
mov
in
dec
out
mov
add
inc
stos
iret
call
jge
sub
repz
scas
push
pop
mov
jle
mov
cmp
ja
movzbl
enter
cltd
popf
dec
push
dec
jno
scas
inc
mov
test
cmpsl
insb
jns
mov
add
add
adc
push
add
sbb
dec
jbe
inc
cmpsb
nop
push
adc
lahf
adc
mov
mov
notl
or
jbe
adc
mov
push
sbb
inc
xor
and
movl
pop
jmp
mov
pusha
jmp
das
sbb
jp
adc
xchg
add
xor
jmp
cld
cltd
out
xchg
xchg
and
and
cmp
add
bound
sub
mov
pop
sbb
or
push
mov
and
adc
mov
add
cli
or
imul
add
andl
push
ds
cli
mov
jl
xchg
jne
pop
or
mov
push
push
sbb
cmp
sub
or
sbb
sub
dec
mov
dec
mov
sbb
dec
xchg
jl
push
jne
stos
les
mov
mov
jmp
sahf
out
mov
frstor
pop
and
push
pop
inc
push
and
jmpw
int
xchg
mov
mov
add
sub
mov
push
mov
pop
ret
aaa
jmp
xor
ljmp
push
nop
and
leave
frstor
shrl
xchg
je
repnz
mov
out
mov
and
xchg
sbb
test
and
mov
pop
jmp
mov
sti
subb
cmpsb
std
mov
jg
out
arpl
lahf
out
jbe
rorb
dec
in
daa
xchg
movsb
fs
andnps
or
cmp
jnp
hlt
xor
mov
clc
pushf
add
ljmp
jg
xchg
aaa
jne
xchg
sub
arpl
imul
outsl
add
and
sbb
xchg
mov
mov
pop
dec
in
xor
add
pinsrw
pop
push
sbb
dec
subl
push
mov
pop
loopne
add
sub
cmp
ret
sub
ds
push
sbb
iret
mov
je
je
std
or
jmp
xor
inc
enter
insb
sti
or
jl
jb
add
push
lods
lock
pop
push
mov
cltd
or
leave
mov
fisttpl
adc
lret
xchg
add
nop
adc
fwait
in
xchg
xor
cmp
mov
or
add
jne
adc
in
cs
or
adc
cltd
mov
cwtl
pop
call
mov
xchg
and
mov
and
inc
jno
pop
test
add
adc
dec
add
inc
or
add
add
push
mov
jo
js
or
cmpsb
ret
outsb
add
pop
mov
call
push
add
sbb
test
inc
out
imul
es
pop
movl
cmp
add
jne
pop
add
rclb
push
push
cmp
rcl
or
push
data16
mov
pop
sub
xchg
cld
pop
nop
xchg
push
test
repnz
out
cwtl
add
repnz
mov
adc
pushf
mov
adc
aam
xor
mov
daa
and
pop
jns
jge
out
int
pop
pop
jo
stos
mov
dec
jge
push
mov
sbb
mov
cmpsl
inc
cmp
push
add
ja
neg
and
adc
dec
popf
andl
cmp
mov
js
mov
pop
ja
insb
dec
sbb
insl
push
in
ljmp
push
popf
in
and
cmpsl
mov
fadds
popf
push
adc
lea
xor
ret
dec
loope
insb
lock
call
pop
pop
mov
ja
mov
adc
xor
lret
ret
rcrl
test
in
pop
and
add
add
les
jmp
add
or
enter
adc
jle
jecxz
sub
bound
int3
add
xchg
pop
outsl
ds
inc
out
cmp
pop
adc
mov
sub
adc
sarl
std
stc
xchg
dec
push
stos
cmp
mov
adc
icebp
or
jmp
xor
sub
adc
bound
push
rorl
popf
dec
movl
jge
and
push
jne
mov
dec
lret
cmp
push
sbb
mov
sub
push
dec
iret
pop
mov
adc
add
orb
or
sub
jb
movsl
movl
cld
pop
xchg
or
add
push
mov
push
mov
add
shll
or
popa
in
leave
out
mov
push
cmp
push
jg
sbb
add
and
push
adc
or
sbb
or
dec
sbb
sbb
push
out
add
lcall
shll
add
inc
cltd
xor
xlat
std
mov
mov
push
pop
jns
rclb
push
sbb
dec
rorl
sbb
push
into
icebp
adc
sub
mov
fwait
xor
push
jle
mov
js
xor
popa
mov
repz
mov
cmp
and
jge
pusha
inc
sbb
xchg
roll
add
adc
jns
push
xor
push
add
and
mov
sbb
add
dec
push
add
and
adc
pop
mov
cmp
push
addl
sbb
subb
push
and
icebp
push
sub
pop
jne
xlat
inc
pop
sbb
pop
add
jmp
sbb
jne
adc
xchg
pushf
jmp
xor
pop
cmc
data16
and
loopne
sbb
mov
adc
in
xor
and
jns
xchg
adc
jmp
dec
xchg
and
pop
pop
sub
and
adc
mov
and
shr
sub
or
sub
mov
lret
adc
es
add
xor
ljmp
mov
mov
mov
mov
and
or
std
fists
push
ss
xor
push
pop
sub
sbb
imul
cltd
dec
inc
cmpsb
pop
xchg
add
mov
jmp
push
cmc
sbb
push
mov
call
pushf
or
add
clc
mov
sbb
push
js
out
adc
inc
jno
mov
pop
fidivl
mov
scas
lea
adcb
inc
push
or
add
xchg
popa
clc
push
rorl
in
push
cmpb
add
push
sub
sbb
adcb
sbbb
sbb
jmp
inc
sbb
dec
add
andl
and
mov
pop
stos
xor
add
int
add
push
fnsave
pop
and
cmp
add
xor
lret
pop
push
repnz
push
adc
jo,pn
push
enter
out
test
pop
dec
and
add
jp
sbb
jl
ret
pop
enter
push
dec
push
movsl
add
xchg
pop
ljmp
dec
mov
repz
lret
push
add
pushf
add
add
aaa
push
pop
mov
push
sub
mov
cmpsl
leave
push
sub
rcll
in
pop
wrmsr
dec
xchg
dec
test
cld
fidivl
pop
xchg
test
jnp
cmp
xchg
xor
or
es
xor
xor
xor
mov
cmp
mov
xor
mov
cmp
push
xchg
scas
out
push
cmp
adc
inc
in
sub
adc
ljmp
jns
iret
testl
mov
insl
sub
jge
leave
iret
std
loope
es
mov
or
pop
icebp
sbb
insl
dec
jge
push
or
or
jne
movl
add
dec
and
cmp
xchg
mov
cmp
sub
test
inc
lahf
mov
mov
xchg
cwtl
inc
lods
add
or
and
and
inc
pusha
pop
add
mov
pop
mov
jp
aad
jo
sub
sub
jp
mov
or
mov
jge
adc
jg
inc
movb
cmp
jge
sub
mov
sti
sub
adc
fcoms
sbb
icebp
or
adc
sarl
push
and
imul
jbe
fsubr
dec
stos
dec
mov
iret
add
or
add
add
sub
fldt
push
mov
outsl
push
scas
aad
add
mov
ja
dec
inc
xor
add
mov
mov
loop
add
jmp
hlt
push
jae
xchg
stos
adc
test
add
sub
pop
xchg
push
ja
adc
lcall
lock
lods
pop
fs
or
push
fwait
clc
mov
pusha
sub
and
xor
into
mov
push
movsl
jns
push
jp
dec
pop
add
inc
cmp
ficomps
out
fld
stos
pop
fwait
outsl
fwait
xor
inc
xchg
scas
pop
call
mov
jbe
jnp
jle
jb
mov
mov
rclb
and
pusha
pop
mov
subb
mov
lcall
mov
or
std
pushf
push
push
out
test
jg
or
cs
push
in
in
or
xchg
sbb
in
arpl
push
sbb
inc
jo
jno
addr16
rorl
pop
ret
arpl
repnz
pop
xchg
in
and
leave
push
test
je
add
push
add
jecxz
or
in
in
test
das
pop
test
or
push
mov
mov
pusha
add
or
fnstcw
adc
shlb
sbb
cltd
sub
cmpsb
jbe
mov
sub
or
sub
and
popa
int
lods
adc
gs
sbb
ds
or
les
mov
dec
or
add
filds
add
es
sub
adc
jo
xchg
sbb
or
je
inc
jp
ds
mov
sti
jg
push
test
in
sahf
icebp
pusha
fsubrs
push
push
jns
out
push
mov
dec
push
cmp
lret
push
repnz
or
pop
neg
loopne
dec
sub
adc
nop
or
and
inc
movsb
lret
dec
out
add
enter
lcall
xchg
and
jb
xor
gs
adc
imul
jb
ret
mov
dec
stos
inc
adc
inc
ret
in
outsl
inc
iret
dec
push
jo
add
adc
dec
xor
and
add
mov
enter
and
cmp
adc
adc
adc
fstpt
xor
jecxz
outsb
pop
pusha
in
mov
add
cmpb
adc
push
ja
movsb
mov
add
ret
imul
andb
in
push
adc
lea
sbbl
nop
lret
add
cmp
mov
add
adc
xchg
bound
jb
adc
sbb
movsb
leave
sbb
add
popa
xor
leave
inc
pop
add
daa
sti
icebp
adc
push
fbld
mov
inc
sbb
inc
xor
js
cltd
dec
push
mov
and
je
pushf
mov
sahf
fsubr
sbbl
rcrb
pop
std
repz
push
mov
les
jb
rcrl
and
xchg
out
arpl
test
cmp
sub
shrl
xchg
es
mov
test
add
sbb
lea
mov
inc
jmp
inc
or
sub
into
mov
push
mull
sbb
push
cmp
push
dec
lods
lahf
lahf
push
or
cmpsb
outsl
sbb
and
cltd
or
idivb
testl
cmp
pop
push
aas
mov
add
call
cmp
push
out
out
ficoms
pop
mov
repz
or
adc
jmp
in
ljmp
test
add
add
adc
mov
dec
pop
aas
movsb
out
jae
or
insb
subb
mov
fisubrl
mov
movsl
adc
cmp
leave
int3
xor
push
and
mov
ret
jmp
jecxz
lret
cmp
push
sbb
and
out
mov
add
jmp
xor
mov
push
sbb
push
dec
add
aaa
movsl
cmp
pop
adc
push
dec
rcrl
fs
inc
sbb
cmp
dec
fldenv
cwtl
inc
dec
andl
jmp
lret
and
xor
popf
add
mov
inc
insb
add
adcl
adc
mov
mov
pushf
dec
insb
je
jno
aad
push
adc
stos
mov
pop
frstor
das
push
stos
and
xchg
jne
xchg
adc
daa
nop
xchg
inc
mov
sub
lea
je
aas
mov
and
jle
dec
clc
pop
sub
sub
or
jge
push
adc
push
ljmp
push
add
inc
out
imul
or
mov
mov
leave
add
sbbb
out
push
loop
and
loop
test
je
push
pusha
arpl
lock
xchg
insb
push
mov
ljmp
out
add
jmp
mov
lea
sbb
sbb
fucomi
pop
int3
lock
xchg
jae
xchg
xchg
mov
mov
shlb
loopne
mov
bswap
push
sub
push
push
xor
jb
and
test
jmp
mov
jno
adc
fdivrl
jb
inc
out
adc
add
dec
fcoml
cmc
push
lea
mov
mov
pushl
push
cmp
sbb
in
inc
loop
jmp
jns
cmpb
jle
or
mov
or
mov
sub
loop
adc
test
test
mov
jge
cmp
dec
ret
dec
imul
adc
and
mov
inc
cmp
mov
add
nop
cmp
leave
js
inc
or
xor
iret
cmp
push
dec
mov
add
xchg
hlt
add
and
mov
jo
xorb
add
idiv
dec
fiadds
sub
lret
fwait
add
mov
clc
dec
and
pop
push
add
jb
xor
and
cmpb
sbb
shrl
mov
and
cmc
sbb
test
or
pusha
or
inc
sahf
in
shl
or
add
mov
mov
js
je
sbb
test
loope
jl
push
inc
push
mov
add
sbb
mov
test
mov
sbb
sub
add
xorl
decb
cmp
jle
mov
and
sbb
push
sbb
push
adc
inc
xchg
icebp
and
push
in
dec
pop
mov
dec
adc
repnz
fwait
add
cmp
lods
mov
fisubl
dec
and
dec
test
insb
pop
push
mov
popl
jo
loopne
sahf
push
and
orb
imul
data16
inc
pusha
pop
pusha
loopne
jb
jno
movsl
mov
inc
dec
mov
or
scas
data16
jle
aas
js
mov
sbb
aas
dec
cld
lea
sub
jle,pn
repz
push
dec
jo
sbb
fmuls
mov
jne
push
rcrb
bound
xorb
jecxz
je
divl
xchg
or
das
popf
dec
sub
pop
lea
xor
imul
adc
pop
repnz
lock
in
incb
push
bound
test
push
and
xor
pop
testl
sbb
add
rol
add
rorl
lea
pop
push
stos
or
sub
sub
push
add
and
dec
inc
leave
movl
sbb
xor
xchg
add
cmp
scas
and
shll
mov
or
das
xor
imul
int
or
lret
push
cmp
mov
push
nop
xchg
cmp
push
lcall
and
ja
sbb
in
add
inc
mov
cmp
in
ret
je
mov
adc
stos
ss
aas
push
push
adc
arpl
jmp
push
cmp
test
movsb
push
push
push
cs
jmp
mov
fildl
ljmp
pop
jbe
out
inc
ljmp
lods
push
movsb
sub
and
and
test
inc
pop
orl
sbb
mov
clc
sbb
jne
jno
add
jns
js
loope
icebp
and
xchg
ret
mov
nop
jg
xorps
dec
sbb
sbb
adc
push
xchg
push
mov
subb
std
pop
push
sub
adc
push
add
push
aad
inc
or
mov
test
fcompl
clc
in
push
cmp
inc
sub
push
add
roll
mov
arpl
inc
ffreep
mov
or
pop
loopne
pop
xchg
mov
or
push
test
sub
push
or
lock
int3
ret
jbe
jo
lea
and
lea
ljmp
pop
and
add
pop
dec
mov
push
adc
and
and
out
lahf
stos
jecxz,pn
pop
or
pop
pusha
sub
or
outsb
inc
add
pop
int
loope
push
cmp
sub
dec
and
sub
repz
pop
and
xor
or
insb
sbb
sbb
xchg
adcl
setge
adc
je
addr16
ds
lock
cmpsl
sub
stc
and
xor
lock
movsl
inc
jle
jl
sub
fdivs
pop
or
cs
xchg
and
pop
jecxz
lock
cmp
pop
ror
mov
je
push
rcrb
add
clc
push
push
add
test
enter
and
xchg
adc
adc
add
adc
mov
inc
inc
sahf
sub
mov
mov
dec
add
xchg
ret
jle
sbb
pop
popa
adc
mov
jle
gs
out
subb
jno
jmp
ja
shrb
jo
dec
aaa
push
and
add
jle
push
mov
jnp
aad
mov
adc
stos
call
jmp
cltd
or
sbb
popa
cwtl
sub
pop
adcl
add
adc
pop
pop
repz
cmpsb
xor
cli
or
and
push
icebp
inc
push
shrb
inc
add
mov
push
leave
xchg
adc
or
sub
pop
adc
sahf
xor
or
adc
push
sbb
sbb
popf
jno
lcall
movb
outsl
sbb
int
or
add
add
or
and
loope
sbb
fistpll
mov
pop
ret
mov
push
add
loop
mov
or
mov
dec
enter
je
lods
cmpsl
xchg
mov
sbb
pusha
out
fldt
sbb
mov
dec
stc
mov
shrl
or
fldcw
xor
add
ja
mov
push
dec
mov
inc
rcll
mov
pop
ret
shll
xchg
pop
xor
xor
mov
ret
xchg
xchg
insb
add
adc
xor
call
dec
push
jg
mov
xor
xor
hlt
cmp
psrlw
filds
sbb
inc
les
jp
ja
bnd
aas
push
push
push
ret
dec
imul
mov
sar
testl
lods
push
mov
subb
cli
inc
mov
int
sbb
xchg
lds
adc
outsb
add
xor
pop
dec
cmp
ljmp
add
sub
or
lea
jge
push
push
adc
ret
fbld
push
mov
xor
pop
push
add
fsubrl
push
ds
or
add
iret
add
pushl
mov
or
xchg
sbb
lsl
mov
andb
and
clc
std
clc
dec
ja
test
ret
jmp
lret
cmpsl
adc
les
insl
out
xor
lods
inc
add
and
movsb
cmp
add
pop
inc
imul
xor
lods
outsb
jb
xor
jmp
pop
adcl
xor
adc
cld
inc
xor
sub
je
cmpb
push
xor
cwtl
lea
andb
or
cmp
push
jecxz
outsb
inc
xchg
xchg
add
sub
add
jge
sub
mov
xor
lret
lret
add
cmp
push
add
push
mov
xchg
pushf
ljmp
mov
dec
hlt
jge
add
jp
outsb
add
add
cli
sbb
xchg
jl
xchg
in
push
movl
add
in
mov
enter
inc
sbb
pop
push
es
pop
mov
outsl
setnp
push
adc
sahf
jl
mov
cmpsl
or
pop
push
jg
push
add
push
int
sub
ret
enter
cmp
cld
sub
orb
dec
add
lahf
enter
or
inc
ss
pop
jb
dec
lcall
xor
test
adc
and
push
xchg
sub
xchg
dec
mov
lds
insb
add
dec
adcb
cmp
daa
outsl
and
repnz
hlt
dec
sbb
jns
push
adc
andb
or
ret
jg
xor
inc
sub
adc
inc
jb
ja
rcrl
adc
lods
gs
cmp
sbb
push
push
mov
push
jae
jmp
pushf
roll
mov
sbb
cli
xor
pop
inc
insl
inc
jle
lock
or
pop
cmp
mov
or
js
add
add
mov
add
push
jp
or
jecxz
adc
pop
enter
pop
clc
add
mov
sbb
and
xchg
or
xchg
adc
jbe
insl
popf
pop
mov
cmp
test
xchg
jb
in
es
cmp
arpl
inc
clc
add
sub
ljmp
adc
test
jl
mov
adc
adc
cmp
jle
lock
cli
sub
pop
movb
cmp
jne
sub
add
cltd
push
pop
pop
sahf
or
xchg
in
insb
lret
dec
sbb
mov
je
add
sub
xchg
push
int3
lea
ficomps
lea
xor
jne
or
add
sbb
push
add
rorb
push
push
mov
jp
outsb
push
add
mull
pop
mov
push
add
sarl
pop
mov
addb
lea
mov
aad
lea
mov
sbb
movhps
ret
push
and
pop
mov
jmp
jl
add
ret
pop
mov
dec
pop
dec
add
js
push
pop
jle
outsb
addb
aas
mov
xchg
lock
xor
mov
inc
or
add
sub
adc
inc
lods
mov
push
jae
pop
ss
dec
xor
clc
test
inc
push
lcall
and
loopne
sub
push
scas
loop
jp
stos
je
add
movsb
pop
cmc
push
jo
in
insl
pop
mov
js
push
mov
mov
pop
jb
add
xor
ret
test
push
sbbl
inc
or
cmpsb
mov
cmp
loopne
xor
or
inc
push
pop
enter
sbb
jo
mov
jns
and
andb
pop
inc
or
ret
mov
push
sbb
std
sbb
jb
adc
mov
lock
xor
and
push
cmp
and
sub
inc
mov
adc
mov
pop
cltd
aad
xchg
push
ror
loop
sub
xor
pusha
popf
push
iret
xor
sub
jne
and
sbb
insl
lds
sbb
mov
jmp
sbb
mov
pop
cmpsb
xor
xlat
dec
scas
inc
lret
mov
xorl
xor
sub
adc
add
mov
lock
push
js
inc
add
sub
inc
aaa
inc
ss
jb
leave
das
sub
or
cmp
js
pop
rcll
pop
sbb
push
push
pop
push
mov
xchg
and
add
jge
push
and
push
add
sub
out
imul
and
push
dec
xor
loopne
mov
sti
adc
or
and
and
add
and
mov
lock
add
or
mov
cmp
inc
mov
adc
push
shrl
jmp
xchg
in
push
xchg
incl
or
gs
shll
pop
cmp
popl
shlb
cmp
push
ds
jae
and
add
dec
shrd
or
cmp
cmp
cld
rcr
and
jle
sahf
pop
cltd
es
push
mov
adc
add
adcl
cli
add
add
mov
add
sti
les
push
pop
cmp
out
sahf
push
lret
ljmp
fldenv
fs
cwtl
pop
and
fdivr
out
xor
adc
sub
movsl
inc
mov
orb
pushl
mov
fcompl
add
out
sub
scas
sub
fdivs
cmp
mov
cmp
push
mov
xchg
add
push
cmc
xor
addb
mov
sub
push
push
sbb
sbb
adc
in
ret
pop
orb
dec
and
imul
inc
outsl
jmp
lret
jecxz
add
pop
add
outsl
sahf
sub
pop
mov
and
push
cmp
nop
and
sub
sbb
int
movsb
sub
push
add
shrb
mov
pop
xor
subl
mov
or
movl
rcrb
add
into
xchg
in
and
add
or
mov
sub
mov
add
iret
mov
lahf
or
lock
in
nop
or
imul
fs
or
add
inc
sahf
enter
sbb
cmp
addr16
xlat
pop
aaa
and
jle
sub
adc
add
mov
jae
jb
sbb
nop
and
and
mov
mov
sbb
cmp
popa
adc
lock
mov
ret
ret
push
dec
and
and
in
jg
sbb
lea
push
test
stos
jg
xor
inc
xor
test
dec
int
int3
popa
sub
push
inc
sbb
in
insl
mov
push
and
jb
shrb
and
add
lret
inc
push
sub
in
pop
push
mov
dec
add
xor
popf
and
inc
and
inc
add
push
insl
sub
ret
jecxz
adc
push
sbb
pop
fs
inc
xor
adc
sub
cmp
jp
insl
lret
xchg
mov
fistps
das
daa
add
and
or
inc
ffreep
jl
xor
push
stos
js
aad
sbb
stc
aam
add
lret
mov
adc
test
or
dec
stc
loopne
sub
nop
int
gs
jecxz
push
popa
xor
push
lock
test
stos
in
or
push
out
aas
in
push
pop
sub
xchg
fs
subl
adcb
push
das
mov
subl
call
nop
add
xlat
dec
aas
cmp
ret
cmpsl
dec
cmp
adcl
mov
cmp
stc
add
pop
adc
jne
cmpsl
cmp
add
into
jb
call
mov
and
pop
push
cmpsl
insl
mov
inc
jge
xchg
add
mov
sbb
cmp
loopne
ss
lea
pop
call
mov
xlat
add
xchg
das
adc
jae
push
jnp
sbb
xor
shrb
xorl
adc
pushf
or
ret
add
sub
push
jne
stos
sarb
nop
cmpsb
xor
or
nop
loope
add
push
lcall
sahf
sub
lock
gs
mov
add
xor
dec
add
add
scas
xchg
xor
aad
or
mov
mov
push
jo
roll
decl
xchg
pop
add
pusha
xchg
je
cld
or
adc
decl
es
push
imul
ret
add
mov
dec
or
or
sbb
das
add
je
lea
movsb
out
pop
add
rcr
fstpt
lods
mov
arpl
incb
clc
jb
pop
pop
fsubs
lock
aaa
jg
aam
push
add
push
mov
cmp
push
push
inc
sub
adc
sbb
or
mov
rolb
cmp
mov
std
aas
std
aam
mov
mov
sub
imul
add
in
xchg
in
call
sbb
pop
add
clc
sub
or
jge
fisubrl
clc
lret
xor
rolb
add
lcall
xchg
ficompl
sahf
pop
push
push
and
es
bound
lahf
mov
inc
sub
sub
je
push
sarb
pop
push
push
push
push
pop
jae
decb
push
push
push
push
in
inc
pop
push
imul
mov
push
add
add
push
movb
mov
xor
xor
sub
and
ljmp
fs
xchg
andb
or
xchg
fisubrs
call
jg
add
xorb
mov
jo
cwtl
push
push
outsl
lea
test
fsubrp
or
dec
mov
enter
push
rorl
ret
or
inc
or
pop
mov
dec
dec
rclb
xorl
push
mov
or
add
jl
lea
ret
pop
sub
pop
mov
hlt
ljmp
std
insb
adc
push
pop
call
sbb
and
ljmp
rorb
adc
pushf
and
fs
pop
jo
jmp
fs
loop
lods
mov
in
xchg
mov
mov
adc
movl
jne
or
inc
cld
push
xor
add
cmp
push
jp
inc
nop
shll
loopne
mov
cmp
mov
or
loopne
in
jne
sub
je
aad
test
lds
mul
clc
push
push
ds
or
push
es
push
push
and
and
inc
add
add
lds
sbb
mov
inc
clc
push
push
inc
cmp
fwait
cmc
mov
jge
loopne
rol
lock
mov
pop
das
pop
sbb
mov
and
fnstenv
pop
mov
incb
or
clc
ds
fimull
cmp
je
push
push
mov
add
pop
or
inc
inc
sbb
jmp
push
xor
sbb
cwtl
adc
mov
xlat
push
mov
xlat
popf
push
sbb
cmp
push
shrl
dec
mov
inc
pop
mov
pop
test
outsb
add
inc
cld
xor
idivb
xchg
dec
sahf
out
add
sbb
lods
xlat
sbb
dec
je
xchg
lock
in
fildl
loopne
neg
mov
xor
pusha
fistps
push
cmp
push
mov
sub
adc
aas
ljmp
mov
pop
xor
rclb
outsl
adc
adc
pop
mov
mov
call
add
icebp
ja
cltd
lock
push
call
test
lret
push
dec
cmp
orl
clc
cmpl
dec
pop
and
push
mov
push
sub
pop
lahf
cmpsb
imul
or
adc
jg
push
mov
dec
xor
scas
or
inc
jg
add
inc
lock
mov
or
jecxz
and
mov
in
xor
push
std
pop
add
sarb
add
js
push
push
mov
testl
sbb
mov
out
pop
and
and
xor
cmpl
nop
ret
test
fdiv
inc
into
in
loope
hlt
scas
pop
popa
push
stos
or
jp
jbe
pushf
addr16
fnstenv
je
and
das
inc
jnp
cmp
jae
mov
and
sub
push
pop
jg
xorb
jb
pop
lea
push
mov
int3
fadd
mov
jo
out
push
stos
cmp
and
inc
and
call
pop
sahf
push
pop
cmp
sub
mov
xor
push
test
and
imul
movl
ret
negl
and
movb
imul
aas
rorl
cs
cld
sub
push
inc
mov
aas
cmpsb
nop
cmp
lea
jne
push
push
loop
xchg
push
push
or
loope
push
cmpsb
mov
mov
adc
or
jnp
mov
movd
push
xor
add
mov
push
push
adc
cli
pop
cmp
push
jl
call
mov
xchg
mull
push
movb
pop
jl
adc
jno
addr16
xlat
or
cmp
cmp
mov
cltd
std
and
out
adc
cmpsb
pop
push
fwait
or
imul
nop
ret
and
mov
mov
and
push
dec
pop
push
dec
loope
mov
sub
push
inc
add
mov
or
dec
or
jb
pop
lods
mov
retw
and
xor
ret
les
mov
lods
outsb
xor
add
pusha
mov
xor
jnp
mov
fnstsw
loope
dec
in
adc
inc
jb
add
pop
jecxz
add
inc
inc
fwait
pop
ret
loope
sbb
orl
dec
push
dec
add
insl
add
hlt
hlt
cwtl
mov
pop
lret
jns
or
fistpll
push
adc
fdiv
cmp
ja
push
test
jg
inc
js
jp
push
vmptrld
leave
shrb
adc
push
push
and
aam
cmp
ss
xor
or
lea
jo
dec
and
je
mov
divl
negl
jmp
and
pop
dec
cmp
jl
and
rol
cmp
cmp
lock
clc
and
mov
sub
dec
add
pop
push
push
push
mov
lock
sub
popa
and
add
add
jmp
push
push
jne
outsb
das
leave
and
stos
add
inc
xor
or
push
push
loope
pop
sbb
pop
inc
mov
push
sub
imul
pop
fs
jl
or
pop
clc
inc
cmp
jne
dec
ror
xchg
test
pandn
sti
xchg
sub
dec
add
push
test
mov
mov
popf
sub
movsb
pop
pop
mov
pop
or
inc
mov
or
dec
push
sub
push
mov
and
add
test
mov
mov
movsl
lea
rorl
aaa
inc
mov
rolb
jl
hlt
dec
cmpl
stos
inc
cmp
les
ljmp
lock
push
push
jne
jmp
adc
imul
mov
andb
push
orl
or
shrl
jge
push
xorl
lods
es
imul
adc
inc
je
add
xchg
sbb
jo
or
lods
loope
add
adc
adc
push
pop
inc
add
sub
sbb
inc
jg
push
inc
and
inc
push
inc
shrl
rclb
adc
sub
ret
cmc
push
push
imul
adc
ja
mov
fs
mov
cwtl
push
fisubrl
or
psubsb
cmp
inc
lds
push
adcl
push
push
pusha
pop
push
push
xor
fiaddl
cmp
dec
sarb
pop
cmp
pop
cltd
in
jo
nop
in
shll
aad
orl
push
and
and
xlat
xor
and
adc
mov
push
push
xor
pop
popf
mov
sub
push
loopne
cmpsl
add
pop
js
jg
or
push
cmp
es
push
sub
and
loopne
daa
aam
scas
ja
stc
cmc
and
arpl
ret
xchg
sub
mov
and
sbb
call
sahf
loopne
imul
add
sbb
cs
clc
add
xor
das
or
adc
mov
pop
lds
jmp
mov
repnz
test
in
xchg
lahf
dec
mov
cmp
add
xchg
mov
fwait
sahf
dec
push
adc
push
pop
pop
push
cmc
lret
adc
sub
push
flds
mov
pop
cltd
clc
fiadds
in
inc
sbb
pop
fcoms
dec
xchg
inc
shlb
push
clc
mov
sbb
loope
nop
sbb
mov
jb
ja
inc
push
test
retw
cmpsb
movsl
push
jmp
mov
pinsrw
fldl
jno
lcall
arpl
in
pop
shll
cmp
push
sbb
inc
mov
jb
mov
add
and
aam
jge
popf
sub
ret
insb
push
je
imull
add
filds
sub
out
test
add
jge
add
cmp
xor
cmp
pop
lds
push
fistpl
or
jns
add
adc
dec
xor
pop
fmuls
push
sbb
jno
or
jg
mov
pop
mov
out
sub
stos
cld
pop
mov
mov
adc
mov
rol
add
inc
pop
or
into
vsqrtpd
movsl
stc
bound
sbb
push
scas
loope
sarb
add
std
incl
jns
dec
add
push
mov
mov
cmp
sub
xor
pushf
xor
fwait
pop
cs
out
or
nop
icebp
test
sub
sbb
xor
push
adc
inc
sbb
xchg
int3
push
or
pop
pusha
and
nop
inc
cs
mov
adc
ja
daa
add
xchg
add
or
push
cmova
xor
and
adc
jo
call
fnstenv
sbb
cmp
sub
push
and
adc
xorl
mov
push
test
xor
ja
jmp
pause
xchg
ss
push
add
or
pusha
sub
mov
shrb
mov
sub
mov
inc
xor
sbb
and
pop
xor
ret
push
scas
xchg
adcb
aas
push
cltd
in
jmp
jne
call
or
xchg
pop
dec
push
mov
sub
pusha
ss
fdivl
mull
add
push
fidivrs
mov
les
and
insl
stc
jmp
jno
push
and
sbb
sbb
push
pop
das
cmpsl
pop
fwait
xlat
pop
cmc
push
jl
inc
dec
or
inc
jo
icebp
and
js
add
adc
pop
xor
cld
enter
dec
mov
sbb
rol
movsl
imul
cs
repnz
dec
clc
dec
xor
in
xor
push
push
pusha
xor
push
cmpsl
jmp
mov
push
add
outsl
es
push
push
dec
aam
mov
loope
outsl
sub
sbb
cmpsb
mov
adc
jl
sub
jecxz
mov
les
add
dec
pop
and
fsubrl
cmp
call
rclb
mov
mov
sti
mov
inc
add
icebp
push
lods
int3
sub
and
and
push
stc
test
mov
mov
adc
arpl
jns
add
movsb
iret
mov
adc
and
mov
sbb
nop
jb
insb
lds
pop
ret
rcrb
and
movsl
int
xor
adc
bound
stc
pop
into
test
push
dec
sbb
pusha
add
cmp
xor
inc
add
mov
jno
cmp
mov
and
fmul
jo
xor
push
lods
fadds
andb
roll
pushf
or
insl
test
fadd
mov
xchg
jecxz
les
shrl
iret
mov
outsl
inc
fs
or
fisttpll
push
mov
mov
inc
jmp
push
les
adc
pop
pop
lahf
push
cmp
inc
or
dec
shr
push
sub
and
add
insl
sbb
fcos
push
mov
mov
cwtl
fs
add
ret
sub
fchs
addr16
sub
sub
fisubs
mov
adc
or
push
push
mov
inc
push
lods
test
fs
inc
test
and
punpcklbw
jb
rorl
and
cmpb
je
sub
jle
pop
xor
mov
in
or
push
and
cmp
adc
jge
call
jae
jmp
aam
add
js,pn
mov
lret
movsl
jge
ret
push
or
adc
mov
push
insb
sbb
add
jmp
sub
push
push
xlat
and
jmp
bt
xor
xchg
jge
dec
roll
decl
aad
sbb
jl
sub
les
addl
int3
ja
cmp
repnz
pop
sub
movsl
mov
pop
pop
stos
sbb
int
push
adc
push
sub
add
shll
mov
fisubs
adc
jb
mov
pusha
adc
or
or
fistl
arpl
cltd
inc
or
pop
jno
adc
add
pusha
test
or
mov
inc
mov
movsb
mov
adc
mov
test
dec
repnz
pop
adcb
push
lods
mov
sbb
or
enter
and
jl
mov
mov
inc
push
or
dec
arpl
or
sarl
sarl
add
pop
mov
xchg
cmp
sub
loopne
dec
xchg
mov
xor
mov
push
jmp
popa
out
ret
xor
sbb
and
lahf
test
movsl
add
in
jl
dec
jecxz
decb
push
rcrb
pusha
outsl
or
pop
cld
cmpl
inc
out
int3
lahf
lcall
or
mov
ja
jecxz
mov
das
lea
mov
popa
jbe
jb
call
xchg
push
aad
pop
mov
loopew
jge
subl
cmp
and
add
inc
and
sbb
in
mov
ljmp
add
jge
push
aas
xor
int
ret
or
mov
and
or
loop
ds
mov
cmp
cld
adc
sub
orl
dec
push
test
inc
jo
scas
add
sbb
addr16
sub
cli
push
push
push
dec
sarb
into
inc
aam
test
jle
or
xchg
jno
sbb
inc
and
and
mov
sbb
add
push
iret
inc
ss
sbb
push
and
sbb
jno
inc
and
repnz
push
fisubs
cmp
or
fpatan
stos
sub
mov
andl
xchg
pop
push
ss
dec
stos
mov
xorb
push
mov
call
dec
shrb
imul
push
mov
lahf
and
shll
dec
mov
rorb
lods
adc
add
mov
sub
add
inc
pop
push
icebp
test
mov
mov
mov
xor
adc
cmp
cmp
and
adc
cmp
pop
cmp
cmp
sbb
dec
inc
or
dec
and
out
jne
lahf
sub
sbb
cmp
mov
adc
fdivr
dec
mov
inc
fmuls
out
fcomi
mov
push
mov
shr
adc
push
push
rcll
push
xor
sub
inc
cmpsb
or
or
sub
sbb
xor
inc
cmpsb
sbb
pop
sbb
fdivs
lds
push
outsl
and
sbb
sbb
xor
pusha
push
add
stos
mov
mov
push
dec
xchg
out
adc
pop
ds
loopne
mov
rorb
dec
inc
jge
adc
test
mov
aaa
dec
inc
lcall
je
cmpsb
dec
int
xchg
shlb
stos
ja
jno
dec
mov
push
mov
shufps
pop
cli
out
aad
rol
push
sub
inc
add
mov
jecxz
inc
or
or
push
xchg
mov
mov
sbb
jno
dec
ret
or
sbb
pop
aaa
mov
lock
add
push
push
push
sub
add
or
sbb
pop
leave
arpl
out
or
movsl
fcoml
or
stos
push
repz
mov
stc
dec
mov
rol
mov
mov
add
cmpl
iret
dec
mov
push
and
jnp
icebp
add
push
sbb
pop
jmp
cmp
jne
push
cmp
rcrl
jnp
orl
push
jmp
test
lods
sbb
dec
inc
or
add
std
sbb
cmp
decb
push
dec
pop
xchg
call
je
mov
jecxz
stos
mov
adc
shl
out
jo
ja
fistpll
int3
cmpb
stos
mov
xchg
popl
and
push
test
mov
mov
cmp
and
add
movb
jmp
lahf
push
sub
fs
sbb
ret
bndldx
push
or
mov
xchg
mov
mov
loop
xor
scas
fidivrs
mov
les
dec
call
xlat
in
les
rcrb
xor
or
mov
jl
jno
xlat
push
sbb
idivl
mov
dec
add
js
in
xor
add
repz
dec
rcl
es
sbb
in
sbb
rcll
push
call
hlt
lock
lret
test
push
mov
ficoms
fbstp
inc
mov
repz
push
lea
push
inc
push
dec
dec
mov
jecxz
adc
mov
lods
add
es
imul
add
adc
hlt
and
cltd
sub
movsl
test
or
sub
or
insb
test
cmpsl
out
inc
loop
cmc
inc
cmp
or
pop
adc
add
adc
jge
mov
sub
add
and
xchg
aam
fisubrs
aas
out
cld
lcall
jbe
and
jle
push
push
add
or
movsb
cld
and
or
pop
add
and
or
cwtl
ret
or
add
xchg
cmpsl
sbb
sbb
adc
leave
adc
fisubl
cmp
push
cmp
xor
inc
ret
sbb
mov
inc
repnz
xchg
js
lea
xchg
push
lret
or
push
jg
cmpb
jne
inc
inc
xor
dec
or
call
jne
cmpsb
or
aam
enter
xor
pusha
dec
mov
add
mov
ljmp
mov
pop
and
ss
ss
out
ss
sbb
cmpsb
or
or
jmp
cs
mov
sbb
pusha
mov
sbb
xchg
fs
xor
and
sbb
and
je
push
dec
jb
dec
clc
cmp
cmp
movb
sub
or
and
inc
or
jns
adc
leave
in
add
xor
loope
cmp
mov
mov
aad
repnz
jmp
mov
xchg
xlat
movl
mov
adcb
sar
and
mov
pushf
jbe
cmpb
rorb
lods
or
and
jmp
rclb
add
sbb
int
dec
movb
push
jo
push
adc
pusha
push
jne
daa
in
ror
adc
sbb
dec
leave
add
fstpl
incb
sbb
jle
push
movsl
rcll
inc
fldcw
push
mov
testb
mov
mov
push
arpl
fs
sub
push
imul
stc
inc
push
push
seto
clc
or
cmp
push
xor
lods
in
or
sub
adc
and
sar
inc
or
stos
movsl
pop
lock
push
pop
js
and
nop
xchg
sub
leave
push
and
subb
sbb
sbb
sbb
sbb
cli
sub
push
imul
mov
add
sbb
mov
sub
pop
mov
cmp
pop
mov
and
push
push
nop
adc
leave
inc
mov
dec
cld
cmpsb
mov
inc
iret
cmp
jne
add
into
and
jne
xchg
test
ret
aaa
mov
and
es
adc
mov
hlt
ret
or
repz
out
pop
push
in
jge
loopne
movsb
je
sbb
or
and
xchg
jne
sbb
cmc
loopne
add
mov
pop
ret
lea
loopne
sbb
fimull
inc
rolb
sbb
cmpl
test
push
sbb
int3
push
adc
adc
gs
sub
sbb
inc
repnz
and
arpl
and
push
cmp
or
inc
bound
mov
xor
xchg
cmp
loope
cmc
inc
mov
dec
sbb
pusha
pop
es
and
fs
dec
insb
and
scas
jg
out
int3
mov
jmp
mov
jl
adc
lea
sbb
add
scas
mov
add
xor
jo
xchg
lret
js
mov
sbb
and
in
je
test
sub
push
and
mov
nop
mov
repnz
push
xor
adc
inc
mov
mov
jno
sub
mov
sbb
push
mov
dec
mov
cld
mov
adc
pop
mov
sbb
inc
sbb
inc
xor
dec
mov
fistl
cltd
mov
mov
cmpsl
mov
es
sbb
mov
dec
sbb
sbb
fs
push
push
add
and
and
pop
cmpsl
sub
hlt
ret
dec
pusha
add
dec
mov
and
movsb
xchg
pop
push
sbb
and
loopne
dec
into
sbb
sbb
add
add
pusha
in
push
xchg
cmpsl
lods
inc
cmp
bnd
ss
pushf
test
fisttps
js
dec
arpl
aaa
test
inc
test
or
xchg
inc
lret
push
push
dec
xchg
aaa
and
pop
mov
jle
loopne
xor
mov
push
test
push
hlt
movsb
or
cs
sub
adc
lea
addl
ficompl
rorl
lock
push
in
les
and
xchg
push
or
sub
ja
jg
test
jne
add
imul
adc
cmp
push
pop
jno
mov
pop
sbb
add
insb
jmp
and
or
add
enter
xor
add
fisttpll
cltd
mov
mov
mov
jae
repnz
popf
push
leave
arpl
fadds
movsb
movsb
test
cwtl
test
add
inc
or
adc
js
popa
inc
and
add
inc
orb
mov
in
imul
push
push
mov
mov
test
adc
sarb
push
mov
popa
add
xchg
clc
pop
add
jp
pop
inc
js
jge
jbe
adc
sbb
jnp
fdivrl
call
mov
or
lret
push
sbb
fmuls
cld
sub
lock
adc
lea
push
add
popa
and
xchg
jge
test
xchg
cmpl
sbb
dec
lock
jne
sub
fisubl
xchg
adcb
inc
and
ljmp
ret
jl
aad
adc
push
mov
aam
adc
xchg
mov
mov
cmpsl
adc
lods
imul
adcb
and
fsubrs
xlat
jge
stc
ss
test
clc
adc
xor
xchg
hlt
cmp
bound
fcomps
push
fadd
popa
cmp
fcom
or
orl
call
rolb
push
pop
adc
fwait
vunpcklps
mov
mov
inc
int3
push
dec
inc
inc
es
or
dec
enter
imul
enter
cmp
sub
int3
js
add
add
je
and
dec
mov
or
testl
mov
inc
sub
icebp
and
push
andl
dec
rorl
push
cld
imul
enter
adc
cmpsl
push
jmp
xor
dec
add
xchg
cmp
add
movb
fmuls
xchg
jl
dec
xor
hlt
sub
or
test
adc
jp
or
outsb
jno
pop
je
sub
ret
and
sbb
aaa
push
inc
lcall
adc
sbb
dec
cs
mov
push
jp
and
inc
rcrl
cmc
dec
push
push
lods
test
ds
dec
loopne
add
cmpsl
mov
add
arpl
sti
scas
lea
cmp
jne
cmp
sbbl
mov
lahf
jle
std
mov
inc
add
imul
push
or
mov
cmp
mov
and
xchg
mov
das
sbb
aaa
lock
mov
add
test
mov
push
mov
in
clc
adc
js
mov
shlb
xchg
inc
loopne
sbb
sbb
or
cmp
jl
jmp
rorb
jge
out
loopne
iret
fptan
lods
fidivs
sub
call
mov
inc
lahf
cmp
and
cmp
sbb
add
clc
pop
pop
lods
and
or
add
add
incb
hlt
sbb
push
sbb
add
fstpt
fs
bound
adc
pop
lret
mov
iret
in
push
ret
dec
cmp
test
push
cmpsb
cmpb
sbb
das
mov
mov
cmp
or
test
or
dec
pop
lds
cmc
into
mov
loope
jne
mov
add
inc
jne
or
fcoms
outsb
cmp
mov
mov
and
sbb
cmp
inc
and
subb
in
insb
popf
xor
add
sbb
mov
pop
inc
test
iret
cmc
sbb
mov
or
push
or
add
and
lcall
xor
mov
ret
call
es
pop
jb
in
divl
loopne
fildl
fnstsw
mov
jmp
inc
adc
or
scas
mov
push
and
and
mov
mov
push
or
adc
pusha
test
repnz
hlt
adc
sub
fs
and
mov
sbb
addb
jge
cmp
cmp
push
js
and
insb
cs
mov
inc
stos
mov
mov
mov
fists
cmp
gs
lahf
orl
mov
pop
pusha
popa
test
sbb
xchg
dec
inc
cmp
xchg
push
dec
mov
sub
adcb
xchg
and
add
stc
jp
push
mov
push
adc
xor
jl
adc
fdivrs
push
cli
mov
or
xorl
and
push
sub
rol
adc
mov
lret
xor
test
inc
adc
out
xor
dec
mov
mov
push
cmp
mov
cmp
nop
mov
or
sub
add
nop
or
sub
or
stos
lcall
cmp
nop
popaw
or
dec
shrb
shll
adcb
insl
jno
fdivl
adc
mov
sbb
lcall
jle
mov
cli
inc
or
rcr
cmpsb
sbb
stc
jb
sbb
add
cmp
xchg
jns
sti
jae
test
into
and
rdmsr
adc
fistps
xor
ja
push
push
push
jne
jecxz
div
sbb
jle
and
adc
cmp
ret
dec
push
call
in
cmp
push
xor
cmp
jle
outsb
mov
pop
or
sar
inc
add
cmp
jl
pop
ds
mov
mov
pop
mov
mov
pop
loopne
mov
xor
jmp
inc
lcall
mov
adc
adc
ds
cmp
adc
dec
sbb
or
mov
xor
mov
pop
sbbb
adc
inc
shrb
les
mov
adc
adc
xor
inc
stos
xchg
and
in
and
xor
xchg
sub
jae
sbb
sub
adc
dec
dec
rcll
das
or
xor
cs
xchg
add
mov
xorl
dec
and
mov
fimuls
adcl
sbb
sub
sub
push
and
add
pop
sbb
arpl
fstl
sub
adc
or
or
adc
mov
jae
icebp
pop
test
push
scas
jbe
roll
inc
pop
or
dec
or
mov
mov
popa
push
push
jl
push
push
dec
or
cmp
ss
clc
pop
lret
inc
sub
push
mov
adc
or
faddl
mov
and
lods
cli
mov
rorb
pop
adc
fcomps
mov
jge
stos
sbb
bswap
xor
repnz
sbb
adc
and
add
adc
pop
iret
pop
minps
lcall
pop
add
pop
dec
push
cs
sbb
sqrtps
and
push
add
pushf
xlat
jo
sub
add
adc
ret
mov
les
or
push
leave
inc
or
ret
mov
inc
lock
xchg
jge
sub
mov
add
hlt
adc
es
sbbl
shrb
mov
pop
sub
inc
cmp
lock
sub
sbb
jbe
add
or
add
add
and
cmpsb
rcr
mov
movsb
pop
movsb
dec
pop
push
add
out
xlat
stc
adc
fadds
pop
sbb
jmp
mov
jmp
in
sub
and
add
add
sub
push
push
mov
xor
movb
add
mov
push
jecxz
lea
out
push
pop
push
subl
pop
push
inc
mov
call
scas
fimull
adc
out
jns
adc
rcll
jmp
adc
sub
dec
push
adc
inc
push
movl
or
mov
mov
fs
dec
ficoms
xchg
sti
adc
sub
fs
and
add
pop
and
add
and
adc
enter
mov
fs
dec
xor
dec
adc
push
adc
adc
adc
inc
push
daa
mov
ret
xor
adc
sbbb
or
xor
add
inc
sub
adc
sbb
and
xor
sub
xchg
add
test
inc
sub
dec
or
lret
sbb
inc
adcb
dec
nopl
movsb
xor
int
dec
pushf
insb
push
repnz
inc
sbb
into
inc
les
mov
in
into
sahf
mov
mov
popf
loopne
xchg
xor
inc
xchg
arpl
sbb
loopne
pop
add
out
rcr
dec
mov
or
and
fsubr
sub
in
sub
pop
lahf
inc
pusha
add
cli
ficomps
pop
mov
add
push
jns
pop
mov
inc
sub
fstpt
cltd
dec
fimuls
ret
out
test
fsubrp
push
inc
lea
ret
sbb
sbb
dec
in
pop
push
mov
pop
and
rcrb
push
push
int3
adc
enter
rcl
pop
mov
popa
jge
nop
pop
or
bound
outsl
ja
pcmpeqw
inc
dec
sbb
cmovbe
xor
xchg
xor
or
or
cmp
dec
xor
xor
xor
xor
xchg
xor
add
inc
add
add
adc
dec
xor
or
or
and
sub
sub
imul
sub
xchg
xchg
pushf
in
scas
cld
add
add
xchg
sbb
add
aaa
sub
and
loope
cs
xor
add
shlb
push
mov
insb
loope
ror
add
jmp
leave
and
jno
or
xchg
and
mov
pop
lock
scas
notb
sbb
jmp
inc
leave
andl
jne
orl
test
adc
jbe
fmuls
and
and
stc
jne
fsubl
jg
and
adc
dec
lcall
sbb
inc
xor
and
rolb
xchg
popa
push
cmp
sbb
or
enter
mov
add
add
xlat
shrb
cmp
adc
adc
fsts
cmpsl
add
adcb
pop
and
insb
push
mov
pop
leave
mov
push
jbe
dec
mov
and
xor
loope
sbb
add
cmpsl
pusha
mov
push
sbb
insl
xchg
push
push
cmpsl
cmp
cwtl
jmp
test
adc
push
lea
sub
and
sub
mov
push
mov
add
inc
or
cli
sbb
sbb
mov
add
sbb
mov
push
movsb
mov
push
int3
lock
dec
insl
push
add
aam
cmp
pop
jp
pop
jge
push
push
push
repnz
popf
push
sub
or
sub
mov
mov
or
add
and
test
lods
or
and
sbb
pop
jne
test
cmp
ja
adc
clc
xchg
sub
or
jne
sbb
and
xchg
cmp
or
lret
push
mov
loopne
xchg
je
sbb
sbb
xchg
push
sbb
push
in
leave
adc
adc
add
push
mov
jo
in
adc
xchg
adc
xor
push
jmp
stc
lahf
push
std
lcall
push
mov
xor
jb
rcll
out
add
push
arpl
or
scas
es
add
pushf
aam
pop
push
mov
dec
mov
fisubs
in
aaa
orl
lahf
pop
mov
xchg
mov
stos
adc
hlt
mov
rcrb
or
scas
push
push
and
mov
stos
in
sbb
adc
clc
add
ret
test
aas
and
cld
add
or
out
and
push
nop
pop
mov
add
mov
movl
int
popa
scas
fs
mov
cmp
test
push
ljmp
sub
mov
fiaddl
mov
cmc
mov
sbb
outsb
dec
inc
rcrb
fsubl
test
mov
movq
or
pop
xor
aad
sbbl
fsubrs
add
jg
cmp
cld
addl
mov
nop
jg
fmuls
dec
xchg
fmull
andl
inc
mov
dec
add
shrb
mov
push
sbb
lret
xor
lods
call
adc
push
loopne
in
nop
mov
push
push
mov
xchg
push
fmulp
dec
in
push
inc
je
aas
adc
inc
in
js
or
jo
shlb
std
mov
cmp
lea
add
call
rol
test
mov
jmp
sarb
ret
and
test
dec
cltd
movsb
mov
inc
add
mov
push
or
outsl
daa
fildll
and
into
adc
pop
add
add
inc
iret
push
push
push
or
pop
or
add
mov
les
jo
insl
dec
xchg
add
push
cmpb
push
fidivl
xchg
fimull
lahf
ret
bnd
cld
adc
lret
lea
add
mov
cwtl
adc
sarb
xchg
cmp
dec
jl
jl
orl
pop
int
jb
mov
loopne
or
sbb
mov
jo
sbb
push
and
dec
das
test
xchg
jl
sbb
jge
jae
push
and
sti
jmp
mov
dec
push
push
or
aad
mov
orl
ret
js
adc
mov
idivb
es
mov
mov
sub
adc
pushf
inc
pop
and
lods
mov
xchg
add
and
add
addb
and
adc
jo
xchg
cmp
push
pushf
jo
xor
mov
sar
ret
les
jp
insb
and
mov
sbb
insb
inc
xor
out
pop
mov
jo
pop
sbb
or
sub
push
scas
xchg
xor
mov
test
mov
push
xchg
and
dec
test
mov
or
dec
xchg
xor
in
cs
add
in
dec
dec
inc
and
jb
mov
bound
push
inc
push
cvttps2pi
dec
adc
xchg
mov
xchg
sbb
adc
scas
xchg
and
in
sub
pop
and
xor
fs
xchg
es
insb
cmp
test
adc
and
xchg
cld
sbb
sub
inc
and
push
push
test
cmp
jns
insb
mov
int3
test
inc
cmp
mov
jo
loope
inc
scas
js
add
je
jae
jb
push
cld
jo
and
sbb
xor
sbb
dec
iret
add
in
and
jo
aas
fs
mov
adc
andb
sub
adc
xorb
add
jo
push
jmp
sbb
int3
enter
mov
and
or
jno
inc
fucomip
adc
pop
cmp
cmp
xor
dec
adc
aam
jle
in
int
jb
sbbl
cmp
pusha
ljmp
imul
ss
mov
sbb
mov
push
inc
pop
inc
inc
cmp
and
inc
push
push
dec
add
fsubrl
inc
imul
cmp
pop
pop
or
pop
sbb
fs
push
sbb
jns
rcrl
push
inc
in
sub
scas
bound
leave
pusha
xchg
lret
inc
leave
sub
add
leave
pusha
push
or
fs
in
and
pusha
sti
add
pop
adc
cwtl
push
pop
ds
pop
leave
pop
push
jns
dec
insb
sbb
sub
add
sub
and
cmpsb
cmp
xchg
cs
ss
cmp
push
xchg
je
jmp
enter
adc
jo
jge
enter
mov
sahf
pop
dec
insb
push
add
outsl
rclb
dec
jmp
and
cmp
and
adc
mov
aam
ja
add
or
out
adc
push
int3
sub
std
dec
or
out
rcl
push
out
or
dec
adc
imul
jae
sbb
cmp
mov
jb
aam
cs
stos
dec
addb
adc
movsb
repnz
cmp
into
xor
xchg
popa
add
mov
lods
xchg
mov
jnp
add
push
jge
push
clc
jl
mov
inc
add
or
xchg
aaa
mov
mov
movsb
testb
sub
lret
call
adc
nop
daa
xchg
jno
push
jnp
adc
adc
scas
addl
cmpl
ret
push
imul
andb
mov
pop
stc
fbstp
js
pop
lods
and
add
or
ljmp
stc
adc
xor
push
addb
inc
dec
or
add
mov
nop
inc
dec
jecxz
call
nop
in
adc
js
je
or
push
loopne
loope
cmp
ljmp
push
insb
jmp
xor
adc
xor
sub
aaa
xchg
xor
sub
nop
cmp
sub
mul
mov
add
and
xor
cs
add
inc
popa
addr16
rcl
arpl
fidivrl
adc
adc
mov
cld
sub
sti
pop
add
inc
adc
add
jl
xor
fwait
shlb
mov
adc
adc
cmpsl
xor
xchg
pop
or
mov
dec
int
rcrb
nop
add
inc
pop
and
xchg
push
mov
dec
adc
decl
push
or
lods
mov
es
mov
mov
nop
dec
xchg
fidivs
sub
dec
xchg
lahf
ss
inc
jp
mov
or
inc
inc
test
add
xor
dec
mov
jg
add
adc
push
and
add
sbb
cmp
shlb
push
and
mov
insl
es
push
sbb
sahf
add
inc
push
pop
adc
popa
jge
lods
xchg
lret
and
adc
jge
lock
repnz
ljmp
or
add
cmp
mov
sub
jl
lds
push
adc
mov
lods
imul
cmc
insb
pusha
xlat
pop
or
add
and
and
dec
movsl
pop
rolb
jge
push
addr16
lods
cwtl
inc
xor
das
push
andb
jo
and
adc
jns
nop
mov
loop
cmp
and
jmp
dec
mov
sbb
sarl
add
and
push
xchg
xchg
mov
sbb
cmpsb
out
sub
jl
dec
push
imul
sbbl
sub
inc
cmp
sbb
sub
scas
je
or
mov
clc
test
int3
xor
cli
xchg
je
xchg
cli
test
mov
pusha
xchg
and
jp
push
push
daa
and
or
hlt
or
jmp
fstp
sub
nop
cmpsb
fdivrl
adcl
orl
mov
xchg
jo
lods
sub
jae
sbb
cmp
test
orb
push
sub
adc
push
xchg
or
mov
xor
inc
scas
sub
and
enter
mov
xchg
push
cmpb
mov
dec
push
sub
add
addl
js
dec
and
cmpl
xchg
pop
sarb
fisttps
add
les
inc
addl
adc
push
sub
pop
and
invlpg
mov
add
lcall
mov
iret
gs
and
sub
pop
sbb
das
adc
insb
fs
test
sbbl
inc
insb
sbb
shr
or
mov
pop
sbb
leave
mov
andl
cmpsb
mov
inc
je
fiaddl
mov
cmp
test
push
dec
dec
inc
lahf
xor
shll
mov
sub
add
adc
or
stos
pop
push
cmpsb
xchg
inc
js,pn
jl
dec
mov
leave
test
and
adc
mov
arpl
inc
hlt
push
mov
sahf
xor
jle
sub
jp
mov
lods
test
jmp
sbb
lds
xchg
cmp
push
pop
lret
inc
scas
add
xlat
rcrl
mov
aaa
pop
mov
mov
clc
and
mov
addr16
orl
enter
test
sub
inc
pop
imul
lds
rolb
stos
mov
and
pop
bound
std
pop
push
push
subl
jp
push
dec
imul
bound
mov
xor
jne
xchg
push
mov
cs
mov
inc
jmp
mov
pop
addr16
mov
or
ljmp
aam
adc
xor
fmulp
pop
es
orb
test
test
or
sbb
pop
add
inc
mov
call
dec
push
push
into
popa
test
push
mov
adc
sub
push
aaa
push
or
pop
rolb
prefetch
inc
insb
les
add
mov
das
add
add
sbb
or
pop
ss
xchg
mov
test
mov
mov
adc
and
jo
daa
mov
mov
dec
test
subb
jne
sbb
or
add
add
cmp
and
sbb
add
addb
pop
and
fisubl
add
xor
test
or
and
inc
pop
mov
shlb
xchg
or
adc
push
or
jo
xor
mov
cmc
cwtl
and
push
inc
add
repz
imul
xor
mov
or
mov
or
aam
repz
fs
jo
add
pop
sbb
adc
mov
mov
xor
ret
std
sub
jl
cmp
cmp
mov
xor
icebp
cmp
lcall
and
inc
ret
xor
lods
jno
push
add
add
scas
pop
dec
cld
imul
imulb
pop
push
or
push
mov
pop
mov
subb
adc
add
or
sbb
push
and
mov
jmp
sub
out
sub
fimull
aam
or
add
push
push
mov
sub
xor
fadds
dec
sbb
inc
and
cmp
lahf
stc
push
push
aas
mov
mov
inc
push
add
orb
jo
xchg
popa
cmc
or
scas
test
sarl
mov
sbb
and
pop
repz
sub
je
lock
pop
or
outsl
gs
push
inc
fs
xchg
out
dec
pusha
cmp
xor
xchg
mov
jbe
cmpl
imul
add
push
inc
fisttpl
and
pop
pop
add
pop
in
push
push
loope
in
xchg
popf
mov
add
popf
je
loope
inc
imul
adc
jb
mov
or
andl
ds
inc
sub
mov
and
cltd
or
daa
bound
inc
and
push
push
mov
sub
shrb
add
add
push
push
xor
insb
mov
lock
xor
inc
out
sbb
and
xor
fmull
sub
pop
mov
ret
push
rcrl
rolb
inc
call
fiadds
xchg
daa
sub
add
fcomip
add
or
pop
cli
pop
jl
pop
jecxz
add
and
sub
mov
jne
lahf
rcr
sub
mov
cs
sbb
icebp
clc
jo
push
pop
lea
jb
adc
adc
je
add
pop
mov
clc
push
fisubrl
bound
sub
cmp
jae
dec
or
nop
les
fisubl
enter
test
cmp
sbb
push
jb
dec
xor
je
mov
push
or
leave
cmp
inc
leave
idivb
inc
cld
and
ja
push
adc
jb,pn
adc
sub
add
xor
inc
add
fs
push
xor
out
es
aaa
call
ss
dec
jnp
adc
adc
les
push
jnp
push
lods
xchg
push
leave
inc
jne
push
and
mov
adc
adc
in
dec
test
push
cmpsb
bound
lds
mov
add
add
inc
pushf
sub
adc
stos
and
cmp
adc
mov
rorl
push
push
sbb
sbb
jb
pop
push
cmp
or
mov
xor
and
dec
xchg
mov
mov
test
sbb
dec
sbb
sbb
jle
add
inc
pusha
mov
popf
aam
inc
push
push
data16
adc
lods
xor
push
subb
js
shrb
pop
adc
adc
jmp
cmp
jnp
pop
cmp
dec
sbb
sbb
pop
mov
testl
xor
call
jb
inc
dec
inc
xchg
xchg
nop
sub
adc
sbb
mov
and
mov
push
hlt
xor
mov
rorl
mov
adc
mov
jo
cmpsl
jne
pop
mov
push
inc
insb
fdivs
adc
push
call
pushf
rcll
in
sbb
cld
push
fcoml
sbb
add
or
xorl
jecxz
and
add
sbb
cmp
mov
insl
std
xchg
mov
push
pop
sbb
xchg
aam
mov
hlt
arpl
sbb
push
out
mov
add
mov
add
sbb
pop
mov
mov
mov
mov
mov
or
or
inc
out
lret
inc
add
vmovdqu
inc
or
add
pop
fistps
adc
or
das
jecxz
je
xchg
sub
sub
xchg
popa
xchg
xchg
push
ss
fists
pop
and
cmp
add
fs
and
test
push
add
dec
cmp
jae
dec
xchg
pop
gs
cwtl
aaa
lea
and
mov
gs
jbe
mov
mov
mov
add
xor
into
or
rolb
push
or
movb
shr
daa
mov
cmp
sbbb
push
call
push
sarb
inc
dec
fdivl
xor
add
aaa
jecxz
test
or
fsubs
adcb
inc
xchg
cmp
js
mov
inc
movsb
fs
pop
int
in
or
push
nop
add
adc
adc
insb
lcall
lods
mov
jb
mov
or
insl
mov
push
jp
cmc
push
mov
push
lea
ljmp
cmp
es
pop
sbb
subb
dec
rcr
push
mov
dec
outsb
mov
sbb
jecxz
ret
cwtl
int3
iret
jge
movzbl
mov
into
or
or
test
insl
daa
mov
cmc
jo
mov
or
pop
mov
inc
sbb
mov
push
sub
pop
aaa
mov
or
aaa
mov
sbb
pop
inc
add
int3
dec
int
mov
mov
mov
aad
or
cmp
mov
or
fcoms
ds
cmp
jbe
scas
ds
jbe
sub
lcall
ss
xor
mov
pop
mov
outsb
mov
push
and
or
call
xchg
pop
mov
push
into
sbb
sbb
movsl
imul
push
jno
mov
push
or
imulb
add
add
push
cmp
cmp
mov
mov
or
mov
rcrl
test
sub
into
inc
int3
xor
addl
adc
adcb
clc
push
xor
inc
jns
cmp
jle
push
xchg
cmp
cmc
add
adc
in
repnz
adc
mov
jecxz
inc
stos
jno
imul
and
add
mov
pop
inc
pop
ja
sub
js
mov
sbb
pop
mov
mov
das
mov
sbb
sub
jle
mov
movl
xor
or
inc
add
add
mov
aas
jmp
test
jns
mov
or
and
jo
dec
sub
movsb
xchg
sub
add
or
lods
clc
pusha
sahf
inc
inc
lea
jno
lods
adc
aaa
add
inc
pop
test
shll
dec
mov
out
mov
jmp
xor
xor
arpl
inc
pusha
out
pop
fwait
fwait
or
sub
insl
sub
sub
add
jne
filds
incb
pusha
and
mov
push
and
clts
and
mov
or
sbb
inc
dec
sahf
lock
nop
pop
inc
inc
add
dec
les
xchg
popl
jle
cmpsb
xchg
or
inc
jle
bound
ja
mov
pop
inc
dec
sub
test
aaa
mov
cwtl
sub
jp
lcall
arpl
push
dec
shrl
aam
push
imul
inc
sbb
js
mov
je
movsb
sbb
or
insb
insl
and
cmp
pusha
ret
insl
sub
push
inc
pop
add
dec
and
push
or
je
mov
sub
dec
ficoml
inc
and
es
or
mov
movsb
mov
sub
pop
and
filds
bound
push
mov
rolb
cmp
sub
add
and
inc
nop
test
mov
add
and
add
xor
or
add
or
movsl
jmp
test
xor
cmp
jne
cmp
pop
and
seto
cmp
xlat
dec
test
aad
and
shll
mov
ret
imul
push
push
and
xchg
push
pop
dec
and
mov
fwait
push
xor
das
fwait
sub
add
fst
jno
inc
inc
mov
jno
jnp
ss
xor
mov
sbb
scas
idivl
jae
mov
jb
adc
lea
and
aad
jb
mov
sbb
push
adc
inc
fcomip
dec
rclb
and
jbe
dec
call
mov
add
pop
push
mov
mov
inc
mov
push
inc
rorb
test
pop
sbb
mov
jae
xchg
push
adcb
mov
cmp
pushf
js
jle
es
test
and
movsl
or
or
pusha
jb
sbb
or
or
insb
lahf
push
les
rcll
xchg
pusha
cmp
mov
inc
pusha
jb
stos
jb
cmp
jb
movsl
repnz
inc
nop
push
out
inc
notl
mov
push
cs
pop
cs
lock
ljmp
mov
adc
std
addb
adc
cmp
pop
fidivs
jnp
or
sti
dec
dec
movsl
jns
dec
add
ret
nop
ljmp
and
inc
lcall
xchg
sub
xor
aam
add
mov
push
jecxz
js
js
sar
ret
push
rcll
mov
clc
out
cmp
or
aaa
loope
dec
push
jne
xor
dec
loope
lods
inc
adc
test
mov
sub
adc
push
mov
jno
mov
pop
or
jge
jo
repnz
lods
add
mov
fld
imul
cmp
push
cmp
sbb
push
inc
shrb
sub
je
push
jne
lea
adc
mov
aam
xchg
test
jmp
jp
mov
fs
cmp
sbb
mov
add
add
in
and
pop
mov
insb
loope
or
js
mov
adc
sbb
test
test
xchg
dec
ljmp
fwait
dec
movsb
push
and
and
mov
pop
fwait
add
or
fldl
ss
icebp
jle
clc
adc
jmp
bound
dec
sbb
push
data16
pop
add
pop
xor
sbb
je
mov
inc
or
and
jo
cmp
xchg
daa
push
mov
cmp
js
sub
cmp
xchg
and
jae
js
loop
sbbl
or
xor
mov
lcall
leave
cmpsl
mov
ljmp
push
ds
jno
cwtl
pop
add
inc
mov
into
and
testb
stos
jo
cmp
push
sub
push
aaa
mov
movsb
mov
test
ret
sub
dec
mov
jnp
jecxz
outsb
sbb
inc
ret
xchg
in
jmp
int3
xchg
pop
fdivs
je
push
shll
or
inc
mov
push
shl
sub
jb
rorb
mov
popf
addl
sub
and
out
jl
imul
or
sbb
hlt
jo
and
stos
push
je
addb
in
push
pop
sub
das
push
es
or
jo
rorb
mov
push
cs
jl
enter
hlt
push
mov
je
sbb
xor
push
mov
je
arpl
filds
and
dec
mov
add
lock
or
test
mov
cmp
mov
roll
outsl
pop
or
jo
jo
push
scas
xor
pop
xchg
mov
push
pop
sbbl
xor
and
sbb
out
popa
push
rorl
pop
xor
rcll
sub
adc
test
xor
mov
mov
mov
in
in
bound
and
xchg
inc
xchg
pusha
inc
sbb
rolb
push
and
push
pop
and
add
and
mov
push
and
push
xchg
shlb
jecxz
adc
add
mov
call
adc
sbb
and
dec
sbb
inc
inc
dec
sbb
sbb
jbe
add
sarl
sbbb
or
pop
cmp
and
cmp
push
dec
pop
and
pop
mov
inc
xor
inc
daa
adc
iret
leave
sbb
jb
stos
and
jge
cmpl
mov
add
xor
inc
pusha
rclb
mov
push
sub
ret
add
pop
mov
repnz
cmpsb
jo
and
clc
mov
sti
sub
jecxz
and
and
sub
dec
push
sbb
xor
subl
mov
sub
test
dec
adc
adc
mov
pop
adcb
jns
loope
jne
ja
push
pop
arpl
sub
enter
push
sub
jo
or
push
sub
mov
xor
sub
aam
or
lods
cmpl
and
lods
imul
shrl
xor
jne
stos
leave
xor
sub
add
mov
push
dec
dec
or
ficomps
test
and
adc
add
and
mov
sbb
in
aaa
jo
rcl
cld
xor
aaa
add
sub
mov
adc
popf
mov
add
cwtl
clc
and
add
push
pop
mov
or
inc
jno
and
add
xor
je
mov
mov
mov
push
lods
xor
dec
xchg
mov
mov
xor
xor
xor
icebp
call
lahf
adc
cwtl
mov
les
dec
adc
pop
ret
pop
lcall
jbe
lahf
cmpb
loop
lea
sbb
test
push
add
dec
or
xor
js
mov
push
fildll
adc
movsb
add
jnp
jle
mov
mov
dec
ss
frstor
jge
jmp
mov
cmpb
cmp
adc
pop
jp
and
mov
add
mov
jne
push
dec
cmpl
xor
sbb
add
adc
mov
xchg
cmp
and
pop
mov
cmc
dec
stos
out
add
leave
or
add
xchg
ja
fiaddl
insl
or
inc
push
fists
pop
and
or
sub
mov
inc
add
in
add
xor
pop
iret
test
in
jne
push
add
leave
push
inc
lret
dec
dec
mov
clc
push
sub
mov
jge
sti
push
inc
stos
jge
sub
cmp
call
jl
inc
cmp
inc
ss
pop
push
in
mov
and
fisubl
stc
pusha
cli
push
fadd
add
pop
arpl
dec
sbb
je
adc
jo
adc
inc
scas
adc
or
sbb
inc
addb
add
push
bound
pop
dec
and
orl
adc
or
jae
push
sbb
ds
lahf
inc
push
add
sub
adc
add
cmp
adc
add
push
adcb
and
pop
push
mov
sbb
sbb
xor
mov
jne
rcrb
js
stos
and
movsl
mov
jbe
out
adcl
sbb
lea
outsb
pop
fwait
cmp
insl
sbb
add
inc
sbb
pushf
sbb
repnz
int
stc
jne
cmp
pop
movsl
push
xchg
lret
push
push
aas
or
add
adc
lock
mov
inc
xchg
out
push
add
into
xor
pop
pop
mov
and
repz
push
or
mov
push
sbbl
outsl
push
inc
or
andl
nop
pusha
add
mov
jg
add
in
lea
mov
test
sbb
sub
xchg
inc
insb
cs
jl
or
xchg
or
xor
cli
jns
test
inc
fcompl
test
es
ficoms
insb
and
sbb
repnz
or
jo
sub
sbb
stos
dec
jmp
pop
add
inc
shrb
mov
fs
sub
xor
adc
test
push
rolb
test
or
inc
out
or
xchg
add
xor
cmp
jle
fstl
add
jbe
mov
push
push
aam
dec
test
sbb
cmpsl
pop
jne
pop
hlt
imul
faddl
dec
cmpsl
cmp
jnp
and
sbb
cmpl
mov
gs
push
pop
add
push
dec
shl
add
add
pop
push
add
mov
rol
mov
lods
inc
rcrb
adc
push
shlb
jl
frstor
das
and
inc
add
push
popa
add
cmpsb
mov
mov
faddl
pushf
sub
xchg
jp
jp
icebp
lcall
pushf
mov
icebp
sbb
in
je
aam
mov
mov
dec
fdivr
xchg
dec
daa
nop
or
pop
sti
add
mov
insl
aad
fstl
xchg
sti
or
sbb
and
inc
xor
xor
aam
pop
pop
adc
xorl
cli
push
xlat
sub
cmp
je
nop
out
in
out
push
push
cmp
dec
and
xor
nop
loopne
or
pop
add
pop
nop
loopne
incl
cmp
xor
push
sub
push
and
add
test
push
test
dec
adc
or
jns
fwait
stc
out
push
loopne
inc
add
push
mov
sarl
or
xchg
fstpt
imul
mov
mov
mov
xor
dec
cmp
adc
test
xchg
lea
push
fs
sub
pop
scas
fidivl
jmp
insl
test
xchg
cmp
or
je
cmp
or
loope
and
inc
popf
dec
jo
or
adc
loopne
cmpb
mov
jl
adc
push
push
xor
mov
in
cs
dec
adc
sub
aaa
jmp
push
out
outsb
stos
xor
lods
fs
and
add
mov
enter
in
push
insb
loope
inc
xchg
push
sbb
xchg
int3
call
sbb
fdiv
inc
xor
sbb
sub
sbb
imul
xchg
sbb
inc
scas
shrb
add
sub
mov
xchg
pop
add
xchg
daa
pop
mov
dec
push
xchg
and
sahf
pop
and
push
and
and
mov
nop
les
aam
add
daa
fsubrl
nop
addr16
enter
inc
sahf
or
in
inc
add
mov
cmp
sub
cs
mov
mov
pusha
pop
adc
dec
xchg
and
xchg
or
and
fs
ret
jbe
movsb
cwtl
imul
test
aam
rolb
pop
xor
adc
cwtl
insb
sbb
dec
shrl
push
jl
mov
orb
in
dec
incl
cmpsb
xor
lock
add
pop
fisttpll
imul
add
dec
or
ret
inc
and
and
jmp
test
xor
mov
push
push
je
mov
adc
mov
cmp
mov
push
mov
test
or
pop
dec
cmp
ror
jns
sahf
cmp
xchg
xchg
adc
mov
push
sbb
mov
out
push
rolb
sbb
push
cli
pop
js
mov
pop
jbe
sbb
nop
xchg
cmp
inc
daa
popa
stos
pop
sub
pop
setle
xor
jecxz
je
pop
sub
sub
call
adc
push
xchg
andl
xor
mov
aas
jae
mov
inc
fildl
bound
inc
clc
cmp
cmp
in
hlt
inc
cld
push
fisubrs
inc
fcomps
aam
cmp
bound
or
inc
iret
push
outsb
mov
inc
pop
adc
popl
test
bound
dec
pop
subb
aas
decl
jecxz
cmp
push
push
push
leave
sub
jo
dec
xor
hlt
stos
push
js
xlat
movsb
cltd
add
xchg
inc
loopne
and
add
rolb
cmp
inc
mov
inc
movsb
adc
and
inc
lods
inc
xchg
ret
adc
mov
mov
and
cmp
cmpb
and
add
pop
in
scas
cli
jne
ret
adc
sti
pusha
xor
loopne
imul
filds
fimull
arpl
movsb
mov
or
xor
mov
xchg
push
pusha
scas
lods
add
clc
aaa
inc
lods
add
cltd
orl
movsb
xor
xor
inc
jb
mov
mov
push
sub
ret
aas
jl
jns
mov
add
push
shlb
adc
pop
lods
popa
mov
addb
rclb
mull
cmp
dec
test
inc
jns
aaa
cwtl
shlb
mov
jge
mov
mov
cmp
and
enter
ret
cmp
insb
inc
push
push
sub
push
pop
pop
dec
mov
add
dec
call
xor
mov
push
lods
cmp
mov
mov
or
rcll
cld
sahf
mov
push
push
mov
sub
inc
dec
fwait
or
in
pop
inc
inc
fadds
movsbl
push
push
inc
sub
aam
addr16
es
mov
and
inc
pop
pop
push
cmp
adc
push
pop
xor
add
and
push
rolb
pusha
cltd
add
popa
movsb
or
sub
in
add
dec
add
lret
push
sbbb
add
data16
fs
sub
fiaddl
pop
ret
mov
and
push
jae
dec
or
jns
insb
pop
sub
and
and
dec
and
cltd
xchg
add
and
es
dec
cmp
mov
call
dec
dec
mov
inc
inc
dec
ljmp
sbb
inc
lcall
cld
rclb
inc
movsb
adc
inc
lcall
mov
push
cltd
pop
jno
rorl
push
imul
pop
ss
push
bound
cmp
loop
and
lods
rcrl
inc
ss
push
mov
push
or
sub
push
push
sbb
dec
jne
sub
lods
icebp
pop
pop
pop
sbb
movsb
mov
add
cmp
imul
push
cli
and
shlb
dec
push
test
ret
inc
nop
sub
push
add
adc
cmp
nop
cmp
out
sub
mov
lods
cld
xchg
push
or
nop
outsb
les
pop
jo
xchg
push
mov
pop
jo
push
cmc
mov
fsubl
sub
cmp
les
mov
ret
xor
add
pop
pop
cmp
shrb
push
sbb
mov
mov
add
test
shll
cmp
arpl
cltd
loopne
mov
pop
aaa
add
jae
xor
push
inc
jo
orb
rcrb
xchg
punpckhbw
test
pop
fimuls
pop
mov
pop
pop
mov
mov
or
jmp
das
leave
mov
push
in
mov
add
mov
pushf
das
or
cltd
test
jae
jle
sub
enter
scas
js
pop
imul
and
adc
lret
pop
pop
add
cltd
sub
mov
rorb
ja
lea
iret
shll
mov
sub
popa
and
insl
dec
stc
xor
jp
sahf
cmp
push
mov
xor
and
and
scas
pop
jo
sti
js
xor
add
mov
int
pop
push
repz
adc
xor
ljmp
xchg
cmp
test
add
dec
add
lcall
data16
adc
iret
or
or
cmp
and
movsb
dec
pop
and
add
inc
add
repnz
add
cltd
dec
mov
je
mov
int3
pusha
mov
mov
inc
pop
mov
clc
add
pop
push
popa
sbbl
push
jmp
dec
and
xor
push
push
addl
sbb
mov
xor
hlt
push
cmp
andb
mov
sub
xor
lcall
movsb
sbb
mov
hlt
dec
hlt
push
pop
cmp
fistpll
mov
pop
inc
jne
insb
sbb
mov
mov
inc
mov
insl
fs
mov
mov
pusha
pop
ret
pop
sbb
dec
sti
or
jge
push
mov
push
or
xchg
add
xor
xor
test
sbb
das
sbbl
jle
dec
arpl
push
jmp
push
adc
xor
inc
mov
push
push
sub
mov
xor
dec
pop
adc
mov
push
push
inc
or
loope
subl
jl
push
adcb
test
jne
lcall
mov
repz
xor
add
loope
mov
push
roll
sub
inc
adc
mov
mov
xchg
push
pop
sub
sub
and
rorb
movsb
xchg
inc
lock
xor
shrl
fisttps
sbb
dec
lret
jne
cmp
mov
mov
sbb
popa
and
sbb
clc
iret
inc
add
ret
bound
adc
dec
cmp
pop
push
dec
cwtl
inc
jns
dec
jp
insb
das
dec
cld
push
pop
mov
daa
add
inc
dec
or
sahf
pop
stc
mov
or
scas
daa
lods
xor
xchg
ss
inc
mov
dec
sub
or
fists
outsb
and
pop
sub
or
cmpsb
add
sbb
sbb
jns
and
adc
and
adc
sub
mov
inc
test
test
or
inc
insb
jge
ja
rol
and
inc
lea
stos
dec
adc
xor
push
mov
xor
push
push
mov
or
ljmp
rcll
adc
mov
push
arpl
inc
fwait
imul
or
subb
inc
sbb
adc
imul
xor
adc
xchg
push
or
xor
shrb
in
in
inc
and
dec
leave
dec
jmp
add
in
mov
add
loope
adc
mov
sbb
aas
or
sbb
sbb
repnz
adc
sbb
or
pop
leave
leave
sbb
adc
movsb
and
push
out
dec
inc
cld
aas
mov
cmp
jae
mov
xchg
pushf
xchg
push
sbb
push
add
cmp
jl
and
mov
jl
pop
pushl
movsl
fbstp
cmp
les
fs
add
subb
jbe
mov
mov
adc
adc
sub
jle
ficoml
inc
or
cmp
fisubrs
add
test
cmpb
pop
daa
inc
cmp
mov
mov
jg
mov
dec
iret
shrl
sub
ja
push
sub
cmp
jb
mov
imul
mov
movsb
jg
add
js
adc
stos
pop
out
pop
dec
in
cltd
add
sub
push
mov
xor
loopne
jne
movsl
or
ret
pop
adc
push
inc
inc
jle
xchg
pop
test
popa
add
out
push
test
jmp
das
dec
jnp
sbb
add
dec
cmp
jo
sbb
add
add
xor
inc
add
es
add
mov
pop
lcall
flds
jo
mov
jnp
add
insb
fstps
sub
sbb
push
leave
xor
add
or
or
int
mov
and
adc
xor
imul
and
or
sub
add
xchg
mov
inc
movhlps
add
pop
push
lods
mov
or
add
and
bsf
cmp
add
cltd
cmpsl
push
insb
cmp
add
sbb
jb
mov
add
inc
xor
mov
add
push
lods
cmp
neg
mov
push
insb
sub
loopne
insb
mov
push
or
mov
ljmp
xchg
xchg
mov
inc
xchg
mov
xchg
cmp
ret
test
cmp
add
gs
xor
inc
push
lea
sub
mov
insl
lods
nop
lds
push
test
cmp
in
icebp
mov
sbb
push
mov
mov
pop
sbb
jbe
les
mov
add
mov
sub
add
push
xchg
jno
test
jle
sub
lock
dec
dec
push
jb
lea
add
mov
jnp
lock
dec
nop
cwtl
jp
add
cli
in
inc
icebp
sbb
fisttpl
push
movsb
cltd
add
xor
in
inc
enter
xchg
mov
sahf
add
je
mov
add
sbb
mov
or
pop
stos
sbb
jp
adc
nop
mov
ljmp
xchg
lea
pop
push
sbb
pop
icebp
add
orl
pop
mov
jmp
mov
fdivrl
ja
xor
mov
cwtl
adc
dec
xchg
jns
and
sbb
insb
xor
lcall
or
sar
flds
mov
js
jp
cmpb
call
out
dec
push
fsubs
mov
push
cmp
xlat
push
push
out
push
push
fwait
ret
rcr
mov
mov
aas
add
xor
bound
shlb
test
jne
push
aad
xchg
cmp
cwtl
stos
sarb
hlt
mov
sarl
cmp
je
cmp
je
cmp
je
cmp
je
push
je
pop
mov
or
cmp
popa
mov
adc
cmp
pop
rclb
addb
mov
xchg
sub
ret
std
insl
mov
mov
fdivrs
inc
hlt
cli
push
mov
push
mov
mov
xor
push
daa
inc
shlb
loope
mov
shl
cltd
incb
or
mov
add
jl
push
lds
test
push
stc
enter
aam
xchg
xor
mov
les
jl
data16
dec
js
add
dec
mov
xchg
push
mov
nop
adc
sbb
adc
jne
push
lods
pop
jl
ljmp
xor
enter
les
add
push
mov
mov
shlb
fwait
pop
pop
xchg
outsl
mov
rorl
or
sbb
aas
add
sub
rolb
lods
or
or
popa
gs
pop
or
xchg
jge
jmp
add
sub
les
test
adc
lds
pop
vandnpd
jne
or
cld
imul
push
inc
aad
inc
enter
clc
icebp
out
mov
xchg
inc
inc
push
dec
mov
mov
push
mov
test
test
std
mov
sbb
es
out
push
movsb
call
icebp
push
sbb
mov
test
push
xor
rcrb
and
push
lods
mov
ror
in
and
loopne
or
dec
add
fs
lods
lock
sahf
xorb
insb
mov
les
and
add
inc
sti
inc
rcll
sbb
push
and
mov
dec
loope
int
mov
and
inc
xchg
dec
push
aaa
xchg
fs
lds
in
or
sbb
sbb
mov
sub
pop
clc
push
movsb
mov
and
adc
and
xor
mov
in
fsubl
adc
int3
mov
add
das
add
es
or
ds
test
mov
mov
dec
and
pop
adc
dec
pop
pop
les
inc
xchg
jmp
es
addb
ret
mov
js
push
mov
jne
subb
outsl
in
push
movsb
or
call
pop
in
sub
sub
inc
mov
insl
mov
inc
in
adc
xchg
xor
adc
xchg
cmp
dec
push
dec
and
stos
rolb
inc
add
aam
adc
jmp
or
and
call
push
and
mov
je
mov
fimuls
loope
push
shlb
fwait
and
pop
xchg
inc
test
lcall
aad
and
imul
mov
jl
add
jae
fwait
sub
lea
dec
jmp
movsb
std
adc
out
mov
cwtl
imul
xchg
lods
xor
cmp
mulb
adc
adcl
rorb
or
cmp
je
xchg
or
add
adc
nop
inc
sub
add
mov
iret
or
push
sarb
rolb
mov
jno,pt
stc
ret
call
cltd
test
push
pop
mov
mov
dec
add
mov
jno
add
mov
xchg
fwait
dec
lcall
rclb
dec
clc
aam
movsl
inc
js
out
faddl
lret
xchg
jne
lds
adc
xchg
outsb
pusha
inc
ljmp
das
xor
xor
dec
test
std
je
movsl
aas
dec
dec
cmp
jne
xor
jnp
or
xchg
mov
mov
mov
mov
roll
out
xchg
roll
mov
or
push
sbb
inc
xor
mov
inc
jge
ret
add
pop
jecxz
adc
lods
jae
cmp
xchg
adc
sbb
inc
cmp
dec
rorl
mov
add
fistps
and
ljmp
test
inc
adc
fs
add
xchg
movl
leave
ja
jg
dec
or
mov
sbb
adcb
push
cmpsb
jmp
add
arpl
add
gs
adc
pop
inc
jecxz
xchg
in
adc
ds
test
or
mov
jae
aam
add
bound
mov
push
mov
jl
xchg
insl
shl
dec
push
sub
cmp
sbb
addl
mov
ret
fadds
adc
sub
sub
adc
cwtl
pop
dec
data16
or
adc
sbb
pop
orb
cmp
cwtl
xor
loopne
call
ds
add
ret
sbb
sar
imul
outsb
insb
pushf
leave
add
in
xchg
cld
and
mov
and
sub
sub
dec
inc
pop
or
outsl
sbb
jge
jne
cmp
jne
int3
jnp
push
sbb
pop
xchg
adcb
xor
mov
jnp
loopne
pop
xor
iret
xor
ja
sarb
and
push
out
int3
push
inc
xor
cmp
in
mov
sub
xor
cmc
or
xor
push
popa
push
sub
les
jmp
and
clc
cmp
jnp
lods
popa
push
in
and
pop
cs
mov
dec
addr16
test
mov
sbb
jo
js
inc
stos
pushf
idiv
adc
and
dec
sub
push
test
mov
mov
adc
loopne
movsb
xor
and
inc
xor
jecxz
outsl
add
sub
loopne
aad
pop
adc
push
sbb
or
inc
or
test
ss
and
sbb
jae
inc
push
stc
bound
xchg
jle
adc
and
sub
pop
mov
sbb
repz
pop
mov
lea
test
cmpl
mov
in
je
mov
icebp
push
push
push
mov
adc
inc
adc
push
inc
add
hlt
sub
movb
dec
sbb
and
add
mov
push
push
ja
mov
pusha
test
inc
jmp
ja
push
fst
adc
in
sarb
push
outsb
inc
add
inc
shrb
push
push
test
or
je
addb
cmp
movb
adc
in
adc
or
mov
and
dec
cmp
test
add
jmp
fildl
andb
add
pop
and
or
xchg
jbe
inc
test
cmp
push
pop
addr16
add
push
cmpb
inc
pushf
add
or
stos
jb
cmp
rclb
daa
pop
addb
push
loop
jp
outsl
testl
insl
cli
clc
jo
and
jnp
sbb
aam
mov
sub
ret
insb
ret
shr
fstpl
cmp
sbb
and
mov
fstl
mov
hlt
aas
roll
out
movsb
lock
jne
mov
mov
cmp
or
inc
push
cmpsb
add
xor
dec
adc
add
ss
cmp
and
aad
inc
add
add
mov
add
adc
or
and
mov
sub
pop
sub
das
mov
or
mov
mov
push
push
or
inc
inc
dec
outsl
push
push
pop
outsl
ret
shl
mov
push
enter
shlb
lea
lret
mov
xlat
mov
sti
orl
cmp
adcb
jle
lcall
arpl
mov
inc
xor
sbb
push
mov
aas
andl
jp
stos
dec
sbb
and
add
ret
sbb
add
jcxz
jo
mov
lea
xor
dec
mov
or
mov
mov
add
pop
lock
xor
out
addb
xchg
cmpsl
hlt
mov
test
add
sub
bound
xor
add
jno
sahf
add
and
mov
push
pmulhw
popf
dec
jo
cmp
xchg
mov
mov
xor
sub
fs
lret
xor
lea
or
or
xchg
and
dec
mov
sbb
loope
cmp
mov
adc
imul
xchg
cmp
sbb
xchg
gs
inc
cmp
xor
push
adc
and
dec
jb
mov
ret
inc
push
push
add
inc
lods
push
mov
cmpsb
adc
cmc
daa
fmulp
jle
sbb
adc
cmp
and
dec
pop
jge
sub
test
push
loop
adc
sbb
sbb
add
inc
xor
pop
jne
mov
sbb
cmp
rolb
inc
mov
outsl
insl
jge
loopne
sbb
es
in
cmp
stc
sub
mov
leave
add
xor
insb
or
movsb
divl
add
pusha
shl
jnp
mov
jmp
jl
push
and
or
adcb
or
mov
pusha
dec
adc
xor
test
popa
test
jnp,pt
push
or
xor
xor
ja
or
out
sbb
dec
or
es
add
stos
dec
sub
movsl
in
mov
or
xor
adc
adcb
xor
insb
and
lcall
sub
mov
pop
sbb
ja
scas
mov
push
mov
nop
cmpsb
sbbl
sub
nop
insb
mov
add
mov
iret
lahf
out
pushf
sbb
push
idiv
pop
and
jne
cmp
jb
sub
jmp
push
std
sub
push
pop
dec
pop
cmpl
push
setl
movzbl
push
out
test
scas
mov
lods
scas
inc
inc
mov
add
faddp
nop
pop
inc
mov
aam
push
adc
sahf
xor
jl
add
mov
mov
sahf
and
in
add
dec
push
jbe
fs
push
push
cmovbe
mov
xchg
inc
cmp
lahf
jmp
push
pop
push
cmp
cmp
inc
lea
push
jne
or
and
adcb
in
iret
mov
mov
xor
imul
add
sub
lods
xchg
sbb
mov
add
dec
push
cmp
mov
inc
jmp
mov
cmp
inc
lods
std
sub
push
into
adc
mov
xchg
dec
push
push
push
jecxz
adc
sub
jo
xchg
aam
and
push
ret
sbb
add
inc
pop
or
xor
adc
jecxz
loopne
mov
mov
repz
imul
mov
dec
jns
lds
daa
mov
xchg
lea
inc
ds
dec
push
pop
sub
and
pop
xchg
push
push
push
cmc
xor
divl
add
cmp
mov
push
sbb
rorl
cmp
inc
jl
jno
sbb
and
push
mov
es
sbb
inc
adc
xor
ret
sbb
sub
and
pop
and
jae
dec
js
dec
or
inc
pop
insb
arpl
push
xor
sbb
cmp
imul
and
je
adc
sbb
or
or
sbb
lret
fistl
inc
cmp
xor
cmp
mov
mov
mov
add
iret
js
rolb
aad
push
dec
inc
daa
or
sbb
push
mov
shlb
jge
xlat
cmp
aas
xchg
dec
add
and
xor
sub
xor
adc
pushf
cs
mov
cmp
mov
inc
imul
gs
push
je
inc
sbb
xor
je
push
out
dec
and
push
sbbb
pushf
or
dec
cld
xchg
clc
jle
add
xor
xchg
mov
add
sub
cmp
mov
jo
mov
cmp
lcall
or
xchg
movsb
jo
out
sbb
inc
pop
mov
adc
mov
mov
inc
pop
mov
cmp
xchg
cmp
push
jns
or
andb
or
dec
sub
push
rcrb
inc
call
mov
push
popf
or
in
les
adc
pop
lcall
insl
cmp
lcall
daa
repz
fistps
in
xchg
sbb
subb
gs
and
mov
push
dec
or
decb
cmpsl
rolb
pushf
and
lret
cmp
dec
mov
test
jnp
pop
test
stos
add
lods
lahf
mov
and
add
fs
adc
stos
sbb
sbb
iret
sbb
inc
add
push
add
add
sub
push
xchg
adc
dec
adc
fs
fldcw
call
enter
and
fs
and
lds
cltd
sub
xchg
ss
in
add
in
rcll
xchg
push
je
jbe
cmp
test
adc
loope
outsb
sbb
inc
pop
push
aas
and
pmaddwd
inc
add
inc
ljmp
pop
or
lret
dec
adc
inc
adc
pop
jg
mov
shll
ret
push
loope
aaa
sbbb
jb
xchg
inc
es
push
cmp
cltd
sbb
add
inc
cmp
imul
push
mov
cmpsb
lock
ret
push
cmpsb
pop
push
pop
dec
jecxz
clc
dec
sub
jne
jne
mov
add
lock
daa
mov
add
pop
jg
lret
pop
pop
mov
fs
inc
and
fmuls
push
aas
push
imul
jg
nop
jmp
pusha
jo
mov
ret
aas
dec
inc
sbb
dec
dec
push
cs
sbb
or
sbb
js
lret
xchg
add
pusha
leave
inc
add
dec
push
in
add
mov
mov
mull
test
and
adc
and
aaa
pop
loop
js
mov
imul
fucomi
mov
adc
lea
fs
pop
fsts
or
sti
mov
sbb
jb
adc
fs
mov
in
push
or
cltd
mov
lods
je
jl
lods
and
sub
mov
adcb
aam
xor
push
mov
test
mov
push
nop
rcll
pop
dec
jo
pusha
sbb
xorb
push
std
jo
sbb
sarl
inc
loope
or
aaa
adcl
bound
test
pop
mov
pop
xchg
cmp
sbb
cmp
cmp
cmp
push
insb
ret
pop
imul
stos
inc
cwtl
sti
mov
push
je
inc
dec
inc
inc
dec
shlb
sub
mov
std
and
inc
fcoml
cmp
cmp
enter
jno
inc
cmp
dec
push
push
dec
mov
pcmpgtd
dec
stos
pop
jb
inc
dec
adc
or
mov
or
inc
jmp
fwait
cs
push
add
adc
add
adc
xor
xor
push
adc
or
xchg
push
daa
fsubrl
mov
xchg
andb
xor
xor
and
pop
bound
pop
cmp
dec
mov
or
fiadds
mov
push
cltd
nop
out
dec
dec
push
xor
fdivs
inc
sbb
push
sub
sahf
imul
dec
and
sahf
or
pop
push
adc
sub
xchg
or
push
xchg
subb
movl
adc
add
jle
loopne
stos
mov
int3
adc
in
dec
pop
cwtl
inc
push
add
in
pop
push
push
pop
push
add
sbb
mov
or
inc
adc
popa
push
insl
shll
fcomps
xor
aam
add
push
push
jmp
enter
shlb
jmp
stos
rolb
js
decl
and
add
das
pop
mov
insb
or
adc
insl
xchg
dec
outsb
subl
mov
call
push
jg
cmpsl
push
sub
hlt
lret
mov
xchg
adc
inc
adc
add
sbb
out
inc
adc
and
add
push
pop
add
and
or
xchg
dec
lods
inc
adc
push
mov
or
out
push
inc
pop
pop
push
es
and
incl
das
adc
add
push
inc
test
ds
push
dec
sub
inc
add
inc
ret
mov
xor
in
pop
aas
push
adc
nop
incl
addl
repnz
inc
pop
pop
adc
rclb
add
cmpb
je
add
ljmp
out
and
xchg
cwtl
push
mov
test
and
adc
arpl
add
leave
inc
cmpsl
sbb
and
push
mov
das
and
cwtl
out
and
jno
jg
push
mov
add
jne
fimuls
lahf
sub
adc
filds
inc
fsubr
lret
lahf
push
aad
lret
jge
hlt
aaa
sarb
cmp
xchg
add
sub
addr16
sub
cmp
xor
out
cmc
jl
lea
in
in
orl
mov
cmpl
pop
push
sbb
je
cmpb
dec
push
mov
mov
push
cs
stos
and
cmp
push
push
sub
ret
rolb
div
pusha
adc
push
push
pop
fcomps
imul
xor
ss
pop
int3
inc
push
pop
mov
lahf
dec
jmp
pop
sbb
cmpsl
je
shll
mov
out
xor
inc
mov
fisubl
call
ror
test
icebp
shrb
jmp
sbb
ret
lock
cmc
sbb
jmp
pusha
lods
test
sbb
mov
sub
jo
ret
notl
andl
je
cmp
push
test
je
or
orl
rclb
xor
pusha
pop
or
adc
test
daa
dec
or
push
xor
ss
mov
xor
mov
adc
movsl
mov
mov
mov
faddl
mov
jmp
add
popa
call
pop
or
mov
adc
les
xor
in
inc
pop
loopne
push
test
js
or
adcb
clc
inc
xchg
sbb
mov
insb
cmp
imul
mov
outsb
sbb
or
lret
or
adc
cmp
mov
clc
push
int
popa
push
mov
seto
aam
les
neg
or
cmp
ret
ja
dec
jmp
mov
xchg
sbb
sahf
cwtl
jne
jp
add
stos
or
mov
inc
and
jo
cld
icebp
sub
dec
fs
dec
adc
in
aas
or
or
xchg
mov
jae
dec
fbstp
fnstcw
cmp
xor
push
fiaddl
movsl
adc
loop
fcoml
aaa
jae
xchg
pop
loope
adc
scas
ret
mov
push
jo
rcll
fstpt
push
sub
mov
or
xor
push
or
mov
and
out
and
mov
rorb
popa
ss
sbb
jb
sbb
push
add
mov
rolb
add
pop
mov
add
push
enter
mov
sbb
jno
fldcw
movzwl
add
lods
fstps
fildll
stos
pop
orl
add
or
aaa
adc
jbe
popa
inc
cmp
imul
sbb
push
mov
mov
jle
jne
inc
and
adc
mov
pop
adc
cli
add
push
xlat
inc
inc
add
loopne
out
add
and
rol
loop
xchg
add
mov
cs
sub
push
ss
mov
out
push
mov
mov
pusha
js
adc
std
in
adc
or
imul
mov
or
push
fcompl
std
pusha
push
mov
into
cmp
jbe
or
mov
pop
cwtl
out
jmp
sub
or
jmp
stos
xorb
flds
hlt
nop
stos
adc
sbb
rclb
enter
mov
in
push
lea
pop
pop
or
pop
out
cmpsl
bound
lret
sbb
flds
flds
cmp
les
fmulp
lret
lahf
fs
loop
iret
in
sbb
sub
fmuls
push
sbb
sbb
cmp
adc
fstps
add
pop
lock
pop
lahf
push
pushf
add
movl
sbbl
sbb
cmpl
jmp
cmp
jne
push
fs
mov
push
add
push
or
push
lahf
xor
lret
cmp
pop
pop
repnz
pop
cmp
adc
jmp
cmp
or
push
shl
add
loopne
inc
push
insb
mov
push
push
icebp
jge
mov
jmp
pop
mov
jl
dec
cmpsl
dec
xor
and
and
cmp
rcrl
add
xchg
adc
mov
jo
enter
subl
dec
adcb
adc
push
push
rorl
mov
push
pop
mov
ds
fiadds
daa
xor
gs
xor
add
cmp
mov
push
call
aaa
mov
mov
in
ljmp
outsl
xchg
push
inc
nop
and
push
mov
push
push
lds
daa
js
sub
pop
fcoml
dec
cld
xor
in
mov
leave
cmp
pop
iret
push
iret
ds
push
punpckhdq
pop
js
lock
push
sbb
adc
xchg
cmp
fistps
pop
je
push
dec
mov
stos
push
sub
xorb
negb
mov
je
push
push
push
mov
cmp
je
sbb
add
fdivl
lahf
and
out
push
jae
sbb
out
fdivrl
jg
mov
mov
dec
add
add
or
cmpb
add
jg
push
inc
clc
pop
lods
das
insb
dec
scas
cwtl
popf
mov
cli
sbb
add
push
shll
js
out
in
adc
insl
sub
push
adc
xor
jne
and
daa
pop
popf
add
movq
test
adc
pusha
fsubs
lds
test
jbe
out
jb
sarb
cld
adc
repnz
inc
sbb
ds
adc
test
je
test
cmpl
or
mov
or
adc
mov
sbb
shll
call
hlt
cmpl
pop
and
insb
xchg
cmp
cmpl
sbb
or
pusha
dec
push
inc
push
lock
xor
or
mov
jne
movsb
ret
mov
clc
pusha
mov
cmp
or
dec
int3
test
mov
gs
add
jecxz
rolb
push
lea
push
push
adc
jl
mov
ds
push
in
ret
mov
adc
adc
dec
rcrl
adc
mov
mov
jo
push
jmp
pop
and
inc
leave
in
push
jecxz
sbb
fmull
push
je
push
sbb
mov
pop
jmp
loop
dec
fsubl
andl
lock
mov
add
push
mov
and
push
cmp
inc
sbb
mov
in
pusha
sti
push
push
and
mov
incl
je
jmp
cmpsl
inc
push
sbb
xlat
sub
popa
subb
outsb
push
push
add
jle
pop
je
mov
aad
sub
cltd
pop
ds
decl
adc
push
insb
imul
lea
hlt
xlat
pop
push
lret
adc
in
adcb
imul
or
push
adc
loope
or
inc
or
shr
insb
ja
or
dec
pusha
cmp
xchg
icebp
inc
loope
xor
mov
adc
rcrb
hlt
ret
mov
loopne
pusha
sbb
push
dec
adc
and
sti
add
xor
je
aad
repnz
testb
cmp
sahf
and
outsl
jne
push
sub
inc
pusha
lock
ljmp
xor
inc
adc
sbb
test
mov
repz
mov
jp
in
inc
scas
push
cmp
xor
mov
add
push
push
icebp
cli
cmpb
dec
aam
cmp
sub
cmp
cmp
popa
jg
adc
add
daa
push
mov
jl
subl
insb
push
pop
inc
mov
and
xor
push
aaa
sub
jo
std
mov
mov
sub
add
mov
jne
mov
lods
fisubs
sbb
std
add
in
shlb
add
repnz
add
fadds
jmp
jl
jbe
adc
ret
inc
cmp
jno
retw
xchg
das
mov
cmp
out
or
gs
or
add
cmp
mov
cwtl
nop
cmpsb
pushf
sub
adc
popl
shlb
push
or
mov
push
lods
adc
sub
sub
pop
fsubrs
ss
pop
push
rcr
xorb
mov
jmp
lods
movsl
mov
xchg
push
and
push
mov
mov
mov
pop
ret
ret
rcl
or
mov
int3
fst
or
rclb
mov
ror
and
lret
rorl
stos
jmp
roll
cmp
push
dec
fsubrp
mov
into
jae
clc
fsubrs
push
into
xor
add
bound
cwtl
arpl
pop
xor
mull
sbb
orb
lods
cmp
insl
aam
or
add
pop
push
add
xchg
dec
sub
idivb
add
push
pushf
sub
shr
pop
dec
test
mov
aad
xor
cmp
dec
jmp
cmp
test
pop
cs
push
push
push
mov
add
test
sub
push
testl
mov
sub
jg
or
pop
mul
xor
push
clc
sub
add
add
xchg
shlb
push
adc
int3
sahf
hlt
mov
adcb
insl
push
inc
test
xor
addr16
push
pop
in
adc
lods
ljmp
mov
sbb
push
sbb
in
adc
scas
lods
jo
sub
dec
and
inc
jmp
aam
push
pop
xchg
imul
dec
add
les
call
push
or
sub
push
add
iret
lcallw
adc
inc
push
xor
ret
or
enter
rorl
mov
ret
cmp
xchg
push
dec
sbb
push
pusha
movsl
jp
sbb
pop
cmp
daa
bound
je
sbb
pop
jbe
mov
add
add
into
inc
or
cs
jmp
jae
push
push
lea
aaa
dec
aam
push
mov
lret
test
mov
add
shll
push
les
int
push
dec
sub
repz
inc
xchg
push
imul
imul
dec
xchg
add
xchg
jnp
sub
xor
test
lret
mov
leave
mov
jo
pushf
mov
loopne
or
sub
iret
cmpsl
ret
ficoml
ret
or
in
movsl
mov
and
fisubs
mov
jns
fwait
mov
inc
lahf
dec
cs
ror
push
daa
ds
jl
pop
lock
imul
inc
sbb
adc
sahf
jo
fwait
pop
cmp
loopne
adc
sbb
push
jmp
insl
cmp
cmp
dec
xchg
rclb
and
out
rorb
out
rorb
int
ror
pop
xor
xor
jl
and
sahf
xchg
rorl
add
filds
call
mov
adc
add
pop
imul
mov
add
rolb
je
sub
xchg
repnz
fs
shlb
pop
sbb
in
and
adc
mov
cmc
pop
std
in
out
adc
inc
dec
cmp
mov
and
divl
cli
pusha
push
push
sub
mov
mov
add
js
and
jae
jne
mov
std
mov
xchg
inc
push
bound
jno
jg
movl
cmp
xor
xchg
mov
or
jae
inc
add
push
jae
arpl
push
cmp
je
inc
or
push
or
fdivrl
jle
cmp
push
push
mov
cltd
mov
add
push
aaa
cmp
cmp
dec
push
jo
mov
dec
scas
mov
sub
cmp
mov
cmpsb
mov
ja
add
je
push
call
jne
push
or
fdivl
sbb
movsl
cmp
inc
xlat
jnp
and
inc
lods
xchg
cmp
loop
pop
push
movb
fwait
popf
sbb
mov
add
call
imul
jmp
push
pop
sahf
rcrb
sarl
xchg
rorb
dec
into
ficomps
push
push
outsl
outsb
jo
imul
push
sbb
div
and
push
adc
xor
push
faddl
xor
out
sbb
jnp
jae
cmp
call
add
int3
push
jg
fwait
shl
stc
leave
js
cmp
hlt
mov
add
mov
or
pusha
ja
out
loopne
pop
outsb
out
sti
push
xor
push
mov
inc
mov
std
add
cmp
lret
sub
mov
pop
inc
or
or
ja
and
out
jmp
dec
xor
outsb
hlt
add
and
xchg
sub
into
xor
jnp
pop
sbb
sub
mov
cs
mov
adc
pop
adc
or
add
cmp
imul
push
sbb
fmuls
fsubr
mov
out
cmpsb
cwtl
mov
or
push
mov
inc
int3
stos
xor
mov
scas
sub
dec
jnp
dec
in
and
pop
les
xchg
add
xchg
int
adc
sbbl
cltd
popa
mov
sar
mov
mov
xchg
push
addl
nop
sbbl
add
nop
add
nop
push
add
push
cmp
jbe
movsb
xchg
cmpsb
notb
add
adc
mov
dec
sbb
test
clc
adc
and
notb
cmp
jne
mov
xor
xchg
loopne
ljmp
jb
or
lock
es
or
sbb
mov
mov
pop
mov
jne
cs
in
xchg
int3
filds
push
sbb
mov
iret
push
and
outsl
push
xor
sbb
ror
mov
adc
test
mov
xchg
add
in
and
ja
xor
insb
stc
add
jp
push
jle
shll
mov
fcmovnb
or
sbb
leave
lea
test
or
cmpsl
scas
push
pop
push
adc
xchg
add
rcrb
and
adc
shl
mov
inc
mov
adc
pusha
in
movsl
rorl
pushl
mov
inc
shl
mov
push
rol
ljmp
sbb
ja
add
stc
loopne
jns
cmc
test
xchg
insb
xchg
xchg
mov
mov
add
or
subl
mov
popf
js
notb
xlat
jno
xchg
ret
inc
sbb
cmp
or
lock
adc
mov
add
mov
in
or
incb
repnz
xchg
out
nop
out
add
js
out
addr16
cmp
jmp
cmp
push
clc
add
out
and
out
fldl2t
mov
ret
roll
mov
stc
push
adc
loope
push
mov
stc
sbb
lea
lock
push
stc
aad
cmp
je
icebp
jne
xchg
dec
sti
mov
xorl
int
imul
cld
sub
in
pop
pop
cmp
lods
push
mov
mov
mov
cmc
add
add
push
fldcw
ret
adc
shrb
mov
inc
ret
mov
jne
lret
clc
imul
cmp
mov
or
jmp
cmp
xor
cwtl
dec
aas
xor
loopne
popf
sbb
fisttps
adc
daa
inc
xchg
pusha
mov
sub
or
ret
jmp
push
or
pop
pop
pushf
adc
push
inc
sub
daa
or
outsl
or
fidivrs
pop
xor
push
or
sbb
scas
dec
icebp
and
or
or
sti
and
and
add
push
call
aam
inc
pop
xor
adcb
sub
loopne
and
icebp
int3
int
ror
subb
loope
jbe
and
sbb
out
orb
int3
xor
lock
pop
xadd
push
sbb
and
sbb
jnp
and
movsl
mov
nop
pop
sub
je
pop
sbb
fs
pusha
insb
insb
and
push
add
in
insb
aaa
icebp
mov
les
xchg
ret
or
icebp
sub
add
adc
je
cmp
je
mulb
or
pslld
push
push
cmp
je
and
xchg
xor
adc
push
push
lock
push
sub
adc
push
mov
pop
lea
clc
repnz
dec
add
sbb
int
or
dec
lock
add
lock
lock
cmpsl
out
adc
cmp
and
push
sbb
jo
into
add
sbb
loopne
adc
ss
mov
and
mov
mov
sbb
add
add
push
mov
lods
mov
into
lea
mov
sub
and
pop
cs
testb
xchg
mov
je
xorl
xor
pop
dec
push
sbb
sbbl
cmp
sub
add
adc
bound
popf
fmull
xor
clc
ret
or
inc
mov
mov
mov
scas
call
mov
sbbl
xchg
mov
adc
xorl
insb
clc
push
push
ret
or
sub
cli
xchg
xor
mov
inc
mov
cs
add
xor
insb
cmp
dec
jnp
outsl
adc
outsb
and
xor
lds
xchg
add
or
xchg
rorl
pusha
mov
aaa
test
pushf
cwtl
fidivrs
push
stos
sub
and
clc
outsb
test
sub
jo
cmp
je
jns
and
xchg
fmulp
pop
shll
cwtl
dec
push
lea
push
pop
cwtl
push
adc
nop
ret
add
lea
pop
sbb
sbb
dec
push
or
add
dec
sbb
lods
rorb
lods
add
adc
xchg
fcoms
cli
subb
js
or
out
xchg
pop
xor
pop
rolb
or
popa
lock
dec
jne
push
xchg
inc
fs
mov
push
call
outsl
lds
pop
arpl
and
mov
add
sbb
and
or
mov
mov
fdivrl
idiv
mov
std
loop
lock
or
cmp
lock
and
adc
pop
xor
aad
lods
jbe
popa
pusha
mov
dec
and
cmp
je
aaa
imul
add
and
ret
jge,pn
sbb
jg
adc
test
push
cmp
inc
das
and
mov
ret
pop
addb
xor
call
ljmp
mov
adc
or
and
pop
pop
or
pop
xor
push
or
jo
test
pop
fistl
popa
ret
loope
into
jecxz
and
data16
loopne
cmp
ds
lods
xchg
add
test
ret
xchg
lret
pop
pop
addb
jle
lea
movsb
mov
cmp
cmp
adc
sbb
or
ljmp
add
xchg
fsubr
mov
cltd
cmpl
push
fdiv
push
add
por
sbbl
popa
mov
push
pop
shlb
sub
add
jo
addr16
mov
xor
fs
in
mov
in
xor
sti
dec
pop
dec
pop
mov
movsl
add
idivb
je
mov
cmpsl
mov
repz
pop
das
cmp
adc
es
out
jo
push
loop
adc
mov
jge
pop
cmp
push
xchg
lock
push
add
test
push
fildl
mov
test
lret
test
push
ss
aaa
push
jnp
dec
fadds
and
pop
aas
mov
mov
or
test
inc
mov
iret
dec
shll
jae
add
push
push
push
push
je
iret
insb
pusha
and
lahf
cs
or
push
insb
sbb
mulps
inc
cmp
add
push
push
iret
push
dec
cmpb
sbb
sub
sbb
imul
sbb
xchg
pop
pop
sub
les
imul
js
and
push
adc
sbb
adc
sub
addr16
pusha
pop
mov
mov
push
aas
cmp
jl
or
pop
stos
push
aaa
inc
addr16
test
ljmp
aad
pop
cmpl
pavgb
pop
imul
ret
xchg
imul
test
xor
adc
lock
cmp
push
xor
leavew
push
xlat
and
test
push
inc
xor
and
into
dec
mov
mov
out
aam
std
decl
insb
test
in
xchg
cs
pop
add
xor
mov
stc
dec
mov
lods
push
inc
xchg
mov
xchg
dec
xor
call
mov
mov
shlb
imul
push
push
jo
bound
test
nop
push
mov
pop
cmp
xchg
jno
int3
or
imulb
xor
push
or
sub
push
inc
push
loope
pop
cmp
fmull
cmp
mov
insl
enter
lret
jle
shrb
push
and
ret
in
lods
xchg
fbld
in
inc
mov
les
shrb
imul
and
neg
sbb
push
cmp
xchg
and
cmp
jecxz
and
sbb
cmpsl
mov
xchg
adc
lock
cmpl
addl
cmp
je
xor
lea
out
fisttpll
and
xorl
test
xor
dec
pusha
inc
pop
inc
xchg
out
popl
dec
adc
andl
pop
faddl
inc
add
shrb
outsb
jl
aas
pop
addr16
sbb
inc
jmp
pushl
xchg
iret
call
inc
lea
lods
xor
lods
daa
cmp
ss
or
out
and
rcll
mov
rcl
mov
xor
ret
insb
pop
test
push
idivb
sub
or
out
fisttpl
add
mov
jl
andl
push
push
and
pop
sbb
rorl
jl
popf
adc
add
xchg
je
pop
loopne
jecxz
xchg
imul
dec
xor
pop
sahf
push
xchg
dec
push
test
adc
xor
xor
dec
shrb
aad
add
test
shll
or
and
sbb
xchg
inc
cmp
scas
mov
push
ds
pushf
push
mov
in
push
mov
shl
cmp
sub
jl
or
je
mov
sub
adc
sbb
sbbb
and
xlat
shr
pop
add
inc
dec
insb
dec
or
inc
adc
leave
ret
arpl
push
inc
adc
inc
add
adc
and
fdivs
arpl
mov
jns
xchg
addl
pop
pop
dec
jp
dec
fnsave
mul
sub
test
push
cwtl
cmp
aam
lock
movb
xrelease
je
int
push
dec
mov
cmpb
orb
add
xorl
testb
je
aas
jbe
or
add
xchg
adc
mov
add
fbld
and
xor
into
jne
loopne
or
divb
mov
mov
or
xor
pop
cltd
ret
sti
adc
push
push
mov
xor
scas
push
imul
lahf
sbb
in
stc
pushf
mov
sbb
addl
xor
xchg
jp
add
and
cmp
add
lea
xchg
into
mov
aaa
add
and
add
aaa
sub
nopl
lock
test
xchg
and
je
insb
and
enter
cmpsl
ljmp
add
mov
xor
and
aas
dec
mov
adc
clc
adc
push
movhps
adc
jne
mov
xchg
scas
mov
push
dec
addr16
mov
and
xor
cmp
enter
add
jb
push
xorl
popa
pop
mov
lcall
pushf
lcallw
inc
xlat
adc
aad
mov
lods
jns
test
rcl
mov
andl
mov
adc
xor
or
pop
add
pop
into
fwait
outsb
movsb
aaa
dec
push
jo
jmp
xor
add
ss
fstps
push
push
pop
cmp
cmpsb
mov
cltd
idiv
jp
jne
sub
pop
negl
inc
mov
cwtl
mov
mov
adc
adc
add
push
xchg
js
jne
cmpb
sbb
push
out
ds
jne
jb
or
imull
mov
pop
xor
xlat
or
mov
cmp
enter
xor
add
jns
and
enter
push
addl
or
pop
cmc
xchg
add
xchg
dec
pop
add
je
lock
adc
add
adc
fucom
ret
adc
add
test
pusha
mov
mov
rcl
movsb
int
xor
pusha
outsl
inc
shrb
jle
into
add
xor
clc
add
clc
test
lock
mov
sbb
jo
sub
mov
adc
adc
push
cli
push
mov
hlt
push
add
cli
inc
cmp
ss
xor
jno
lock
xor
fldcw
and
je
mov
dec
test
hlt
dec
or
or
jae
out
add
movsb
xor
mov
or
fwait
data16
mov
pusha
vunpckhps
xor
xor
dec
push
push
scas
pop
pop
mov
dec
insb
add
inc
and
cltd
fsubrs
jl
je
xor
mov
sub
adc
sbb
dec
iret
pop
add
or
xchg
negb
adc
add
sarb
cmp
cmp
push
mov
fistpl
loope
push
add
lcall
mov
push
push
outsl
or
and
test
mov
scas
stos
push
push
insl
add
push
mov
test
rcl
sahf
adc
and
aas
xlat
rcll
arpl
xor
inc
xlat
push
movhlps
push
cmpsl
mov
popf
inc
cli
push
cld
push
xchg
xabort
sub
rorb
pushf
push
jns
sbb
pop
adc
jno
aas
addb
call
jns
icebp
xchg
cs
or
loope
or
adc
push
sahf
loope
xchg
aaa
sbb
or
pusha
insb
std
mov
jg
mov
dec
in
adc
and
push
jbe
out
add
add
movsb
les
mov
dec
push
jge
sahf
mov
clc
add
lods
adc
sbb
push
jl
lods
mov
sbb
push
pop
icebp
mov
sub
lret
pop
xor
hlt
add
jns
cmp
xor
push
mov
aaa
idiv
sub
sbb
jle
insl
push
in
push
xor
mov
mov
inc
xor
jno
pop
sbb
push
or
cmp
xor
and
fisubrl
into
int3
inc
add
icebp
or
jns
rclb
mov
dec
clc
adc
push
int
out
push
pop
mov
movsl
adc
movsl
rolb
test
loope
cmp
pop
cltd
mov
hlt
or
pushl
mov
into
inc
add
movb
loop
push
imul
inc
cmp
je
adc
sub
lods
rcrl
sub
and
push
loopne
daa
adc
and
add
xor
push
nop
dec
push
in
mov
sub
push
pop
mov
lea
in
test
or
subl
test
or
xchg
jo
dec
out
push
loopne
pop
or
pop
sub
and
jmp
xchg
add
mov
and
push
in
push
aas
scas
or
push
jbe
lea
jo
decl
dec
pop
loope
into
sbb
out
pop
xchg
scas
pusha
cwtl
iret
stos
or
in
push
in
xor
popa
push
cld
test
cmp
aad
push
push
mov
sbb
push
outsb
pop
lds
into
sbb
xor
outsl
xchg
inc
push
mov
xchg
les
in
lea
add
insb
push
fsts
adc
push
push
pop
or
xor
push
bound
adc
cmpsb
and
into
orb
sarb
popf
jo
mov
mov
fs
dec
xchg
mov
or
jecxz
lods
push
mov
pusha
idivb
xor
and
mov
aaa
mov
dec
int
sub
fmull
out
pop
lods
das
push
sbb
mov
mov
in
loopne
pop
notl
mov
repnz
dec
arpl
push
inc
sahf
or
inc
mov
test
xchg
imul
adc
ljmp
or
xor
dec
and
push
xchg
pop
and
push
push
inc
shll
sbb
xor
faddl
add
and
daa
xor
add
andl
lret
add
or
jnp
ret
sub
imulw
loope
ds
shl
inc
mov
testl
mov
mov
xor
lret
or
xor
inc
and
rorl
adc
mov
cmpsb
add
inc
nop
push
insl
jne
pop
adc
imul
fisubl
inc
in
push
push
push
jae
push
push
rolb
cld
xchg
fxch
std
jl
movl
fldenv
or
add
es
dec
xor
clc
adc
in
mov
shll
mov
dec
mov
mov
sbb
test
dec
push
gs
clc
adc
imulb
add
testl
mov
inc
js
rcl
jae
cmpl
mov
push
rolb
andl
cmp
mov
fwait
mov
pop
lods
push
cmc
xchg
mov
add
cmp
mov
add
mov
xchg
aaa
adc
jo
xchg
push
loopne
mov
sti
sub
loopne
cmp
lds
inc
mull
xchg
cmp
push
mov
push
in
and
mov
xchg
lock
push
inc
testl
lret
or
push
xor
xchg
in
or
inc
push
push
mov
lcall
dec
xchg
fists
adc
cld
push
or
xchg
mov
in
les
fisttpl
xchg
push
jo
loopne
add
loopne
xor
ret
idiv
les
pop
mov
sbb
aaa
lods
into
pop
jno
pop
or
push
and
inc
popf
adc
dec
data16
stc
jbe
and
out
ret
outsl
or
adc
push
add
sti
dec
ja
je
inc
outsb
or
je
or
sub
xchg
jnp
adc
adc
popl
inc
sarl
aad
or
sahf
inc
jl
add
xor
jne
lcall
mov
push
jmp
rcrl
jecxz
cmp
adc
movsl
test
xor
inc
cmp
pop
inc
movb
mov
decl
sub
mov
mov
or
mov
mov
jbe
adc
imul
mov
cmpsl
loopne
ljmp
mov
clc
test
cli
gs
xchg
sarb
add
je
and
inc
pop
sahf
or
add
adc
in
ljmp
mov
cltd
and
push
inc
es
sbb
push
rolb
test
les
ret
push
mov
dec
je
sub
sar
push
sub
data16
sbb
clc
add
lcall
mov
cmp
mov
cmp
or
push
adc
inc
sub
jmp
fisttpl
out
pop
jo
ds
sub
out
mov
pusha
orl
adc
and
sbb
and
inc
out
xchg
pop
and
cwtl
lret
test
cs
push
sbb
dec
cld
out
push
add
xor
rcll
pop
dec
cmp
mov
mov
adc
pop
fcoml
popa
add
movsb
scas
push
stc
sti
je
inc
xchg
jg
test
push
inc
lds
mov
pop
loopne
into
enter
jo
fsubs
xor
fdivrs
dec
xchg
mov
ret
push
push
out
or
in
xchg
add
and
mov
sub
sbb
xchg
ret
mov
xchg
sub
sbb
mov
mov
adc
fsubs
sub
hlt
or
jge
and
notl
dec
jb
push
cltd
mov
imul
add
sub
shlb
cmp
xchg
aam
push
lock
repz
push
iret
adc
call
and
add
sti
cmp
rep
rcrb
dec
jle
push
dec
sbb
sub
jns
sub
ret
in
cmp
mov
xchg
fcoml
in
and
and
in
mov
sub
mov
int
int3
aam
inc
xor
dec
aas
mov
or
rclb
bound
and
lea
pop
in
xchg
idivl
mov
or
fucomip
test
ja
push
lock
xchg
repnz
fisubl
mov
sbb
rclb
fprem1
inc
sub
or
popa
push
mov
jnp
icebp
mov
adc
or
dec
test
jmp
xor
imul
jmp
jle
and
xor
adc
shll
inc
daa
xchg
mov
jnp
pop
mov
inc
ficompl
cmp
adc
fsubl
xor
mov
insl
mov
sub
push
fildl
adc
lcall
fldt
daa
imul
daa
xor
inc
enter
js
inc
push
jne
pop
sub
mov
into
inc
test
loopne
dec
in
cmp
mov
lock
pop
shlb
subb
cwtl
mov
and
imul
jo
jb
sub
sub
add
mov
adc
cmp
dec
mov
add
add
and
mov
lahf
shlb
out
les
push
pop
and
pusha
inc
add
or
std
mov
adc
adc
xor
sub
and
hlt
sbb
cmp
clc
sub
fs
das
cmpsl
xor
or
push
push
mov
mov
add
push
dec
inc
xorl
xor
push
push
fsubrs
add
dec
cmp
je
cmp
push
les
fmull
int
call
xor
push
in
add
mov
mov
shl
call
xor
dec
pop
incl
inc
popa
cld
cltd
add
gs
faddl
dec
mov
inc
inc
ret
pusha
dec
mov
test
clc
add
hlt
mov
arpl
gs
dec
mov
pop
outsl
mov
je
adcl
add
sbb
mov
jg
lea
rclb
pop
inc
loope
inc
dec
mov
hlt
mov
or
jno
mov
sub
push
add
out
test
inc
adc
lods
sarb
push
add
aaa
loopne
xchg
mov
push
push
mov
push
add
test
pop
fs
ficompl
rorb
xchg
loopne
arpl
mov
jae
mov
les
sbb
push
filds
pop
rolb
pop
dec
xchg
xor
mov
inc
les
adc
or
and
hlt
or
jg
scas
add
pop
cmp
add
jg
sti
add
push
dec
sbbb
es
popa
and
add
les
pop
test
mov
adc
or
cli
aad
pop
ds
ja
push
movsb
adc
cmp
or
mov
fstpt
je
dec
cmp
mov
jg
inc
lcall
clc
add
sarb
sbb
xchg
ss
push
sbb
add
and
pop
adc
pop
pop
pop
xor
add
jecxz
aad
pop
pop
dec
adc
and
add
sbb
mov
adc
pop
push
movsl
jle
or
pop
outsb
xor
mov
xor
jnp
sbb
mov
adc
es
rolb
inc
adc
aad
cwtl
sbb
dec
mov
mov
adc
push
add
xor
or
shlb
stos
pop
mov
adc
test
adc
ss
pusha
lahf
aam
cmp
pop
pop
sbb
mov
cmp
loop
push
or
movsb
push
inc
data16
push
sub
loopne
pinsrw
add
out
mov
adcb
inc
les
shll
sbb
inc
out
cmpsl
ror
sbb
pop
test
js
push
test
or
pop
pop
dec
aaa
in
aaa
stos
or
adc
adc
lcall
es
in
mov
xor
je
js
or
fstpt
add
cli
call
add
loopne
popf
leave
cmp
push
adcb
call
jnp
add
jne
or
and
pop
or
mov
cmp
cmpsl
push
fcoms
sbb
add
jbe
pop
add
sti
push
shlb
mov
dec
dec
dec
cli
add
scas
out
imul
pop
je
or
push
cmp
cwtl
test
out
dec
add
xor
pop
mov
sbb
and
xor
mov
bound
andb
adc
push
or
sbb
outsb
pop
jmp
fst
cmp
xchg
sbb
xor
push
sub
dec
adc
fiadds
and
sub
cmp
push
cmp
stos
mov
cmpsl
icebp
xlat
inc
dec
and
pushf
push
adc
and
loope
hlt
stc
stos
pop
jne
out
adc
adc
push
cld
push
cmp
lods
sbb
test
repz
add
rcll
push
jmp
jmp
enter
mov
js
imul
mov
push
nop
cmp
push
arpl
sub
rcrb
xor
pushf
adc
sahf
je
dec
out
add
fstps
xor
push
sub
and
sbb
cmp
inc
push
cltd
inc
add
push
sub
mov
cmp
add
xchg
or
sahf
sbb
in
sub
addr16
and
push
push
mov
sub
outsl
andb
clc
or
xchg
add
mov
repz
pusha
fs
and
mov
jnp
or
push
leave
mov
and
jb
pop
push
pop
and
push
sub
pop
adc
addr16
stos
cmp
push
loopne
xchg
push
inc
ret
cmp
jns
iret
xchg
or
and
mov
xchg
or
faddl
adc
dec
inc
loopne
xor
sub
loope
in
fs
sub
and
sahf
popa
add
adc
pop
push
push
leave
nop
jl
pop
push
dec
repz
jmp
dec
add
inc
xchg
scas
push
push
push
mov
rol
shll
xor
imul
adc
out
dec
mov
ret
into
leave
stos
pop
or
ret
dec
fildll
or
pcmpeqw
add
je
in
nop
add
addb
insl
imul
pop
ret
add
mov
jmp
pop
jmp
pushl
sub
adc
pop
mov
nop
push
mov
push
insb
pop
lret
dec
loopne
dec
adc
mov
mov
orb
or
sbb
das
inc
add
movsl
sub
lock
and
stc
fdivr
sbb
out
push
xlat
jmp
inc
cmp
mov
fmuls
loopne
loop
xchg
jae
adc
loopne
sub
pop
and
inc
push
sbb
inc
lret
xchg
pusha
gs
out
push
xor
icebp
mov
aam
icebp
loopne
stc
repz
push
in
push
mov
cmpsb
call
pop
sub
and
cmp
roll
imulb
lock
cmp
cmp
insl
in
jmp
leave
pop
ret
xor
or
xorl
xorl
adc
add
int3
mov
dec
and
jp
call
js
inc
or
pop
add
pop
rorb
testb
jbe
leave
ret
and
or
add
xchg
mov
add
cmc
push
dec
xchg
pop
cmp
push
push
js
sbb
or
xchg
insb
dec
or
xchg
mov
xor
add
mov
addr16
xchg
in
popa
jge
xor
mov
lea
cltd
xor
inc
pop
cmp
std
add
jbe
inc
mov
loope
cmp
push
mov
shll
rolb
cmpsb
jns
je
clc
fidivs
dec
xor
or
pusha
add
daa
sbbl
jnp
ss
xlat
dec
gs
lods
push
int3
mov
cld
cmp
out
shll
or
in
inc
adc
stos
and
pop
enter
or
add
sarb
or
dec
push
push
pushl
mov
sub
adc
jl
cmp
inc
pusha
jae
sub
and
out
pop
cmp
jne
pop
adc
push
mov
hlt
jge
cmp
cmp
jmp
push
jmp
dec
insl
push
inc
adc
cmp
pminub
loope
or
add
xchg
jae
loopne
jl
repnz
push
inc
call
or
jb
sbb
add
call
xchg
ret
cmpl
fmuls
sti
mov
test
or
test
inc
movsb
xor
rolb
out
loope
cwtl
and
data16
movsl
cmc
xchg
mov
dec
or
rcl
xor
jle
pop
or
insl
subl
gs
pop
lea
in
loopne
add
sbb
adc
inc
mov
or
and
clc
push
inc
mov
inc
lret
pop
or
adc
add
sub
adc
test
or
lcall
inc
leave
push
adc
inc
or
je
sub
ja
jne
cmpsl
jno
mov
hlt
stos
push
xor
test
imul
dec
sbb
adc
sub
sbb
mov
mov
div
cmp
jns
cmp
or
andb
inc
jecxz
jbe
negb
sub
or
lods
test
mov
mov
cli
add
mov
cmp
mov
push
in
ret
dec
adc
inc
fdivrl
insl
cmp
popa
adc
das
cmp
xchg
lock
cltd
sub
bound
cltd
sub
mov
mov
test
sbb
push
test
add
mov
sbbl
test
mov
out
push
cmp
jo
add
fwait
mov
push
cmp
push
sbb
push
pop
repz
push
or
stc
andl
xor
mov
cmp
jbe
xchg
repnz
jns
insb
push
lea
in
pop
mov
pop
jae
iret
mov
or
mov
mov
push
cmp
pop
add
inc
cmp
add
or
mov
pop
xor
sti
push
adc
add
fwait
adc
outsl
or
inc
push
cmp
fnstcw
fidivl
cmp
cmp
pop
sbb
inc
sti
lret
xor
inc
jmp
xor
js
adc
cli
filds
das
push
push
push
pop
loopne
shl
pop
mov
inc
adcb
aam
mov
ret
and
push
popf
test
push
pop
shrb
addb
mov
push
inc
arpl
cmp
xchg
pop
andl
mov
push
lods
movb
ret
or
add
jmp
negb
inc
lahf
add
nop
dec
rclb
jmp
inc
orl
jo
fs
cmp
dec
leave
mov
sub
xchg
inc
inc
aas
mov
adc
push
add
popa
add
movl
shrl
lds
or
jecxz
adc
add
sti
stos
ret
inc
sub
ret
jne
inc
and
or
sub
adc
loopne
sbb
jg
into
mov
ja
ret
cmp
in
imul
inc
arpl
push
inc
sbb
fdivl
hlt
add
mov
andl
jnp
inc
addb
mov
mov
sbb
inc
shlb
scas
push
xchg
or
mov
or
out
push
jbe
dec
fsubrl
pop
int3
js
insl
xor
cmp
fcoml
call
gs
jp,pt
fsubs
dec
pop
iret
and
xchg
pushf
sub
test
inc
pop
cli
push
fwait
or
ds
jge
push
lock
mov
stos
mov
adc
ffreep
rol
add
or
cmp
xor
ljmp
test
nop
sub
sbb
int
sbbb
cmpsb
rcr
loopne
push
jge
mov
mov
jecxz
add
push
pushl
clc
cmp
das
sbb
adc
xchg
push
dec
xor
cltd
jne
add
xchg
fwait
clc
cmp
xchg
dec
pop
add
and
and
test
cld
or
test
aaa
xor
aam
and
mov
push
ret
andps
cmp
xor
push
loop
pop
or
mov
int3
fs
push
cmp
or
xchg
stos
fcomp
push
clc
je
add
mov
mov
pop
ja
jl
push
clc
rcrl
test
mov
ljmp
cld
adc
loope
xor
cld
sub
loopne
imul
pop
out
inc
and
fdivl
add
sub
lea
ret
push
adc
push
cmp
in
loope
sbb
and
jb
mov
dec
pusha
cmp
push
flds
sub
or
mulb
dec
sub
enter
test
push
lret
xchg
or
mov
mov
inc
pop
dec
push
cld
push
xor
sbb
mov
neg
sbb
inc
je
mov
inc
rcr
fisubl
enter
xchg
sub
xchg
adc
insb
cltd
push
int
sbb
pushf
jo
jnp
jecxz
sbb
sbb
test
jo
dec
sub
rorl
cmp
jae
push
pop
stos
fsubr
mov
test
test
data16
cmp
jg
test
nop
inc
les
push
sbb
mov
int
inc
insl
sbb
jge
jnp
xchg
insb
mov
scas
jle
sbb
shr
not
inc
lea
cmc
sbb
in
je
out
and
es
mov
xchg
shll
push
xor
pop
inc
dec
jle
push
push
addr16
dec
aad
push
ja
enter
xchg
xchg
fisttps
lods
or
or
lret
lret
lret
xor
inc
in
addr16
inc
clc
dec
sbb
dec
insb
popf
jmp
movl
imul
mov
je
add
adc
jge
sub
xor
mov
inc
add
ret
fwait
decl
push
shlb
or
in
add
adc
fisubs
xchg
adc
mov
movsl
add
pop
ljmp
add
adc
rclb
pusha
leave
adc
push
stc
mov
dec
out
push
icebp
push
sbb
ficompl
or
test
pop
out
es
sbb
movmskps
jmp
out
inc
push
inc
jecxz
fdivrs
push
je
or
add
inc
sbb
add
adc
ja
jmp
pusha
xor
jl
loopne
or
dec
xchg
sub
int3
push
lahf
lods
pop
call
xchg
mov
sbb
push
int3
je
cmp
xor
cmp
mov
aam
mov
adc
divb
sbb
jno
dec
sub
mov
adc
dec
js
lea
dec
cmp
mov
stos
daa
pop
cmp
or
mov
pop
fs
repz
mov
sti
rep
cmpsb
inc
xor
or
adc
mov
jbe
jmp
sub
jae
cmp
shlb
add
sbb
inc
sbb
add
ss
andl
mov
jmp
jne
push
push
push
inc
sbb
dec
jnp
push
add
jae
xlat
add
or
lcall
loopne
adc
cmp
outsb
data16
inc
sub
xchg
adc
pop
adc
bound
jge
test
subl
cmp
push
xchg
testb
add
jb
mov
mov
repz
lcall
cli
xor
sarb
adc
andl
adc
test
test
or
sarb
add
push
sub
hlt
leave
clc
push
mov
inc
rolb
daa
ret
dec
int3
mov
dec
jo
js
xchg
inc
in
mov
cmpxchg
jmp
mov
jl
inc
test
push
inc
mov
and
sub
sub
cmp
xor
mov
cs
enter
mov
pop
mov
fsubl
clc
pop
das
xor
mov
push
lret
add
pushl
pusha
jnp
pop
adc
push
push
lret
rcll
push
dec
dec
xchg
fdivrs
push
adc
mov
push
adc
cmc
xchg
cmp
call
jb
add
push
adc
pop
inc
orb
lock
sahf
push
mov
in
sbb
movsl
push
xchg
and
add
mov
jbe
mov
adc
jno
pushl
ficoml
subb
mov
mov
rclb
rolb
mov
adc
inc
adc
arpl
mov
pop
mov
pop
cld
add
adc
gs
sbb
test
add
jle
adcb
xor
cmp
push
loopne
mov
lods
je
push
js
inc
add
bnd
rcll
or
lods
xchg
dec
xchg
jo
push
fcmovbe
addr16
push
scas
cli
loope
mov
jge
je
push
icebp
add
notl
mov
out
lock
cltd
cmp
jl
orb
fsubl
and
data16
fists
es
icebp
xchg
mov
ret
into
push
inc
bound
fnstcw
ret
mov
pop
sub
push
inc
ret
pop
add
mov
into
call
aad
pop
pop
mov
add
push
leave
adc
addr16
sub
cmp
and
add
inc
adc
adc
int3
adc
movsb
or
addl
das
dec
push
es
push
pop
add
add
add
inc
pop
shrb
inc
adc
cmp
mov
ds
and
or
or
pop
pushf
test
popa
insb
loope
fsubr
or
push
adc
pop
and
rorl
push
pop
cmp
sbb
pop
xor
dec
or
jne
mov
cmp
or
or
ljmp
dec
or
lea
je
test
adc
push
outsb
sub
sar
cmp
jbe
or
add
jp
cmp
jmp
ret
shll
dec
inc
dec
pusha
in
adc
dec
dec
sub
jecxz
xchg
pushf
faddl
hlt
out
push
repz
mov
dec
pop
add
call
shlb
cmp
mov
nop
xchg
mov
sbb
push
fsubrp
add
testb
lea
mov
fdivp
adc
popa
add
pop
rcrb
pop
mov
nop
fcoml
movsl
push
xor
cmp
cli
gs
jnp
in
jne
loope
mov
and
loope
mov
jb
ljmp
testb
orb
or
mov
inc
add
push
fs
or
sbb
popa
jb
add
mov
rcrb
inc
nop
shr
sub
and
ret
pop
sub
gs
cmpl
pop
shlb
adc
adc
inc
push
pop
inc
testb
add
jmp
dec
cmp
arpl
dec
add
insl
negb
cwtl
outsb
sar
lea
jp
cmp
jb
int3
push
and
aad
jae
jb
pushl
cld
xor
or
pop
jmp
rolb
add
clc
jae
adc
or
and
xor
pusha
mov
mov
or
test
out
int3
ds
jl
and
add
enter
lea
push
dec
and
lock
mov
int3
jp
mov
repnz
ja
lock
mov
aad
jle
jle
loopne
popa
loopne
test
mov
addl
leave
mov
lcall
out
leave
pop
xor
jmp
mov
inc
sub
xchg
add
mov
test
mov
dec
or
mov
je
adc
xchg
jmp
jecxz
sbb
mov
jle
mov
test
adc
adc
xor
dec
leave
test
adc
insb
sbb
jo
push
sbb
xchg
out
mov
pop
jb
cmpsb
adc
nop
arpl
cmp
in
dec
in
mov
add
outsb
fcmovnu
daa
pop
sti
mov
add
xchg
fnsetpm(287
mov
ja
fistl
arpl
ja
or
or
pop
rcll
scas
repnz
sti
ja
dec
sbb
dec
add
push
repnz
outsl
movl
repnz
jb
pusha
or
xorl
adc
filds
add
add
bnd
je
pusha
mov
sub
dec
xchg
push
adc
mov
dec
enter
movsb
mov
cs
lds
push
dec
mov
ss
outsb
jb
hlt
add
jl
push
cmp
fsubrs
and
lods
popa
aaa
jb
rcr
push
insb
add
add
or
jb
and
mov
enter
add
sub
daa
cmp
add
inc
sub
cmp
add
mov
cs
mov
jmp
push
push
inc
xor
or
xor
sub
xor
adcb
or
xor
mov
mov
ret
xor
cmp
fstpt
cmp
cld
and
or
pusha
push
cwtl
add
add
sbb
out
or
xor
inc
loope
pop
adc
and
stc
mov
dec
mov
sbb
add
or
adc
inc
adc
dec
sub
lods
dec
add
imul
jns
pop
ret
pop
adc
imul
push
adc
dec
pusha
cmp
jle
and
dec
mov
cli
ja
ja
mov
rcl
movsb
popf
orl
sarb
js
adc
sysexit
ja
add
clc
sbb
mov
fcoml
test
out
arpl
xchg
iret
sbb
dec
bndstx
xor
imul
and
jae
inc
push
mov
sbb
cwtl
adc
outsb
mov
or
pop
push
cwtl
xchg
jns
enter
push
pop
adc
mov
cld
out
je
jecxz
sub
movaps
sbb
ss
push
pop
add
add
adc
and
or
jne
push
add
fbstp
cmp
add
xor
jno
lock
aad
mulb
push
mov
js
je
mov
scas
ret
repnz
fwait
sbbl
das
pusha
add
rorb
loopne
inc
sub
sbb
jae
jne
and
movsb
sbb
jns
xchg
call
cs
rorl
ret
or
cmp
je
les
lods
push
rcll
cmp
dec
cli
scas
loope
push
mov
inc
repz
cmpb
jae,pn
stos
popa
push
rep
mov
push
or
std
scas
and
cmp
jmp
leave
lds
lcall
pop
xchg
adc
cmc
ljmp
lock
pop
sbb
sbb
xchg
js,pn
fildl
lock
pop
jmp
pushw
push
ret
stc
sbb
cmp
jg
iret
or
addr16
outsl
sub
xchg
dec
pop
push
jo
dec
add
sbb
push
enter
in
xor
add
push
push
inc
add
or
or
enter
in
call
xchg
in
adc
and
fdivrl
push
sub
pop
jmp
cmp
psraw
inc
ljmp
add
fadds
test
sbb
xorb
mov
dec
cltd
add
repz
data16
lock
add
pop
or
xor
loopne
test
push
pop
or
bound
test
add
or
lods
or
mov
add
dec
cmp
mov
or
adc
or
mov
jmp
movsl
add
cld
sub
jmp
ficoml
mov
stc
pushw
cmp
inc
or
push
popa
xchg
dec
add
push
xchg
lret
pop
sbb
and
add
sbb
inc
hlt
inc
sub
push
pop
repnz
or
ret
push
push
push
clc
dec
bound
xor
xchg
inc
andb
int
adc
mov
pop
lock
out
adc
lret
rcrb
repnz
push
or
nop
sub
test
or
push
ljmp
gs
sarl
cmp
aaa
and
roll
dec
or
or
rcrb
sbb
lock
lock
mov
enter
and
lea
push
shl
push
xchg
add
xlat
mov
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
inc
dec
sbb
cmp
aas
lods
mov
sti
mov
inc
pop
cmp
mov
pop
cld
out
jb
sbb
xor
je
cmp
je
adc
andl
lcall
iret
jae
pop
inc
fcomps
and
pop
mov
jecxz
or
jbe
clc
dec
loop
testl
jbe
cmp
jo
inc
hlt
sub
pop
inc
sbb
adc
dec
push
sub
push
lock
dec
test
jl
add
cltd
fs
decl
es
jge
and
aaa
imul
jl
das
jne
movl
cmp
and
jl
clc
lock
rcrl
aam
add
and
jmp
sub
lock
ja
lea
into
orb
push
push
mov
repz
loopne
or
mov
mov
pop
add
cmp
xchg
jo
or
adc
ja
push
cmp
jle
cltd
cmpsb
fldl
or
mov
mov
sbb
push
js
cmp
add
add
add
and
xchg
dec
fcomp
push
pop
mov
push
je
inc
fisttpl
sbb
xorb
mov
insl
lods
sub
mov
call
jo
popa
jno
sub
sbb
or
cld
xchg
dec
push
aad
leave
fadds
jo
adc
add
add
cmp
sub
inc
call
xchg
sbb
adc
outsl
test
xchg
adc
push
push
mov
xor
inc
jnp
das
and
push
fs
xor
pop
aam
add
cmp
repz
or
push
pop
pop
pusha
fs
mov
add
sbb
rcll
sub
push
mov
fiaddl
hlt
jge
sub
sbb
sbb
add
test
and
mov
imul
je
adc
dec
add
jne
push
mov
stos
push
mov
rcrl
outsb
les
lret
jne
xor
or
and
mov
push
dec
mov
ret
and
imul
sbb
je
sub
xchg
add
fimuls
push
pop
or
cmp
pop
rclb
ret
addb
inc
add
inc
and
and
add
xor
jo
cmp
inc
sub
xor
xor
rolb
pop
cmp
sbb
jne
in
rol
add
pop
adc
jne
inc
ds
dec
mov
sbb
jnp
seto
jmp
and
movsb
test
sar
mov
pop
xchg
add
mov
mov
sub
pop
jl
loopne
pop
fucomi
jae
push
orl
cmp
aas
push
test
addr16
mov
mov
mov
aam
or
nop
push
out
adc
or
adc
inc
pop
clc
add
and
jmp
sub
aam
xor
add
inc
aas
sbb
test
and
test
fisttpl
insl
or
mov
icebp
fwait
movb
shrl
out
fsubrl
test
jmp
or
in
xor
inc
mov
and
sbb
loop
adc
fists
mov
test
push
test
or
je
cmp
pop
rolb
adc
jg
pop
push
inc
push
mov
jle
lods
inc
inc
jg
sbb
xchg
int3
inc
mov
loopne
cmp
xor
push
ja
and
int3
fs
imul
push
jle
dec
add
sbb
stos
lock
jne
in
popa
adc
inc
mov
pusha
movsb
or
push
inc
repnz
and
mov
insl
insb
pop
je
dec
fs
fwait
adc
clc
or
fs
inc
mov
shl
lock
lock
add
test
pop
test
arpl
das
dec
mov
mov
pop
jg
xchg
mov
or
pop
in
xchg
or
cltd
test
cmpb
sub
jb
mov
std
push
adc
movsl
or
outsb
mov
cwtl
adcl
push
jmp
scas
dec
fdivrs
movsb
sbb
pusha
mov
adc
sub
movl
sub
inc
jle
enter
sub
pop
push
jno
repz
add
push
or
push
push
clc
jge
cmp
sub
sahf
sub
push
sbb
sub
push
cld
inc
das
inc
hlt
pop
adc
xchg
adc
xchg
or
xchg
push
and
sub
add
jl
push
push
hlt
jg
mov
push
mull
jo
lock
push
pusha
cmpb
je
xor
sbb
ret
orps
mov
loope
in
xor
movsb
add
repnz
mov
pop
inc
dec
sbb
sub
lea
repnz
jle
pusha
push
cs
pop
ret
add
jne
fwait
repnz
loopne
pop
cmp
lds
xchg
cmp
mov
cmp
mov
lods
pop
pop
test
out
add
mov
dec
adc
shrl
cmpsb
ljmp
push
mov
add
dec
jns
jb
js
inc
movsb
or
xchg
sub
call
pop
add
add
or
add
hlt
add
add
push
gs
mov
dec
sahf
int3
movsl
sub
mov
jne
in
add
fisttpll
pop
in
lods
push
rcr
lods
in
push
cmp
cmp
xchg
push
mov
pop
and
add
add
in
clc
ret
jmp
rolb
jae
cmp
pop
mov
int3
xlat
mov
add
stos
pop
xchg
sbb
push
xchg
pop
or
xlat
jmp
aam
pop
subb
in
mov
test
insb
push
push
or
sbb
ret
pop
xor
div
xchg
push
push
faddl
xchg
lret
adc
iret
rcrb
inc
sbb
jmp
xor
test
mov
call
sbb
jae
jae
dec
lds
push
jns
iret
call
xchg
fimuls
je
lock
mov
loope
cmp
mov
clc
jo
inc
pop
adc
in
dec
adc
dec
popl
pop
adc
push
pusha
dec
and
or
pop
sub
stos
popf
test
pusha
jbe
fcoms
lcall
push
or
pop
push
push
fstpl
add
or
repz
pop
data16
cmp
insl
jne
adc
adc
jne
push
divb
iret
iret
repz
jne
or
jne
or
inc
or
jecxz
loopne
add
fiaddl
fldz
add
pop
andl
popl
and
filds
repnz
addr16
or
pop
adc
and
bound
push
and
leave
jp
push
jp
jle
insl
dec
mov
andl
adc
cmc
or
loop
jbe
add
test
movsl
movsl
lea
movsl
mov
popa
loope
xchg
jecxz
sub
movsb
inc
cmp
sbb
adc
test
pop
dec
push
ror
and
mov
loope
sub
jo
fsubs
popa
imul
pushl
jns
test
inc
inc
in
sub
push
or
outsl
mov
pop
fimuls
movsl
pminub
mov
and
push
nop
xlat
and
dec
pop
jnp
rol
ret
and
andl
stc
push
test
cmp
rolb
fmull
add
push
scas
mov
lods
popf
sub
pushf
shr
mov
dec
fsubl
loopne
or
pop
fs
sbb
jecxz
jge
xor
lahf
aad
lock
std
push
mov
add
fs
out
xorl
rolb
fld
ret
mov
xlat
push
imul
out
adc
pop
stc
push
fsubrs
mull
popa
add
stc
and
adc
or
push
add
add
jbe
add
pop
or
adc
dec
push
push
fdivs
sbb
add
and
shl
mov
inc
pop
addl
mov
push
sahf
jbe
push
lds
push
jbe
subl
pop
adc
movaps
add
adc
inc
fmull
xor
daa
lret
lods
push
fistpl
pusha
mov
add
mov
cltd
or
jl
xor
cltd
jno
add
push
jns
sbb
leave
insb
shrb
adc
enter
enter
and
add
fs
outsl
xchg
adc
or
or
rorb
fmuls
sub
dec
inc
es
or
pop
add
inc
jo
loopne
xchg
push
dec
mov
in
push
xchg
xchg
call
mov
mov
push
add
mov
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
mov
fnsave
lea
xchg
mov
repz
xor
pop
in
es
sbb
sub
popa
cmpb
push
mov
imul
cmp
xchg
ret
jecxz,pn
mov
add
ret
ficomps
push
pop
cmp
pushf
ret
jle
out
outsb
pop
es
jo
and
cli
daa
cmp
pop
push
xchg
or
aad
bound
adc
jle
pfcmpgt
je
insl
push
lea
daa
mov
fs
add
add
pushf
data16
cs
arpl
out
nop
push
add
movb
jge
call
mov
inc
cld
aad
sbb
pop
xor
pusha
sub
iret
rolb
arpl
aam
xchg
enter
adc
sbb
std
or
push
push
sub
mov
or
or
or
sub
jae
cmc
mov
jmp
xlat
push
add
lcall
push
mov
push
mov
pop
push
mov
sub
imul
and
pop
xlat
dec
push
sub
push
mov
scas
insl
les
test
loop
rorb
cmp
pushf
pop
pop
inc
stc
dec
mov
pop
add
orl
fsubrl
jge
mov
and
sbb
popa
sub
scas
test
push
aas
xor
jge
cmpsb
rcl
adc
mov
jae
inc
adc
and
xor
prefetch
jne
xor
test
add
mov
xor
mov
arpl
lds
adc
dec
es
popa
fdivrl
call
or
push
push
push
inc
sub
lock
mov
mov
push
cli
dec
adc
xadd
mov
jle
pop
cmp
stc
sbb
in
push
add
outsb
fdivrl
xor
dec
jns
pop
loopne
mov
in
inc
stos
push
xor
out
and
cmpsb
jne
imul
fistl
push
mov
push
mov
inc
out
push
leave
shlb
icebp
or
les
cs
imul
push
jns
mov
cli
xor
lcall
push
fisubl
iret
adc
push
movsl
daa
add
pop
cmp
sbb
aad
mov
push
pop
push
repz
fimull
sbb
sbb
push
out
arpl
mov
pusha
ret
lea
and
xchg
dec
pop
stos
mov
cmpsl
add
daa
xor
push
or
int3
insb
inc
fstl
mov
pop
mov
ret
scas
push
jae
rorb
test
clc
idiv
les
or
adcb
inc
cmp
ja
ficoms
ret
cwtl
pop
js
das
popa
inc
xchg
mov
sbb
adc
pop
outsl
dec
adc
or
adc
or
ja
mov
ret
jle
and
cmp
dec
jg
push
cmpsl
xchg
popf
add
add
mov
mov
jecxz
mov
push
add
pop
pop
jno
jnp
adcb
out
loop
cltd
out
icebp
sub
nop
lock
sbb
push
mov
xchg
mov
pop
mov
or
add
mov
fmuls
mov
lahf
add
les
sbb
lahf
les
sub
lahf
sbb
or
sbb
lods
lahf
enter
add
arpl
ja
mov
nop
or
dec
add
cmpb
cmp
ret
push
push
popf
push
sbb
pop
cmp
adc
push
ds
inc
add
xchg
das
jne
cmp
add
pop
leave
repz
dec
xor
jp
sub
add
mov
pop
xchg
popf
xor
mov
and
mov
sbb
inc
cmp
je
fdiv
lret
mov
insl
xchg
test
out
dec
clc
push
mov
or
test
insb
add
pop
clc
inc
and
lcall
pop
push
iret
or
or
xchg
imul
daa
mov
sbb
icebp
adc
pop
popa
sub
adc
push
shrl
mov
push
ret
push
jb
es
inc
fdivs
pop
add
std
ret
add
call
mov
cmp
addb
pop
jecxz
adc
lods
enter
mov
sti
movl
jmp
aaa
pop
pop
andl
test
sub
pop
xor
in
xor
cmpsl
lock
call
test
cltd
das
decb
adc
push
push
jg
mov
sarb
insb
testl
fisubs
adc
push
adc
stc
cs
push
mov
lock
pop
push
mov
ret
dec
shll
inc
add
inc
stos
push
bound
adc
arpl
pop
pop
mov
add
sbb
sub
aam
sbb
dec
cwtl
cs
or
jo
sbb
fidivs
xor
sbb
lock
repnz
frstor
sbb
into
ret
loop
mov
xchg
pop
lock
xor
out
dec
aam
es
sub
dec
lea
and
mov
lahf
lods
push
push
rcll
push
add
mov
fs
sbbl
jo
inc
dec
outsl
jno
mov
xchg
cmpsb
mov
sub
inc
jp
cmpsl
and
push
pop
mov
cli
aad
sahf
sbb
das
sti
sub
fistl
push
and
fistpl
add
orb
inc
xorb
lea
pop
mov
jno
loopne
pcmpeqw
fadd
dec
fimull
and
xorb
cmp
dec
sbb
fnstenv
dec
test
push
shll
or
adc
out
mov
shrb
cmp
pop
push
mov
aaa
mov
jnp
push
pusha
add
dec
mov
dec
add
sbb
int3
loope
sub
dec
mov
or
sbb
gs
lea
mov
mov
and
push
push
leave
mov
rolb
ljmp
aad
daa
mov
ret
jne
pop
push
icebp
idiv
jb
or
pushl
sbb
leave
and
push
xlat
dec
outsb
jo
icebp
add
inc
lock
xchg
and
jle
add
andl
lcall
add
push
xlat
add
movsl
or
out
mov
aam
dec
movsl
js
les
gs
mov
out
add
rolb
dec
ss
adc
dec
push
iret
push
pushf
cmpsl
pusha
push
add
push
pushf
push
mov
xor
test
xor
repz
sbb
jbe
or
push
cmp
inc
movsb
rcll
lock
xorb
push
adc
add
dec
dec
sub
sbb
inc
sbb
ficoms
pop
hlt
mov
and
and
in
mov
jmp
or
add
fldl
and
jge
push
inc
pop
cmpl
sbb
sub
sbb
dec
in
pop
or
mov
mov
add
ror
dec
push
cmp
je
xor
lea
and
and
dec
push
jp
and
int3
add
xor
out
ljmp
pop
adc
and
or
mov
or
xchg
sub
push
cmpsl
add
mov
arpl
leave
ja
sub
push
xor
and
pop
and
pop
pop
adc
push
add
jnp
and
sub
dec
push
cwtl
and
push
jnp
js
sub
dec
sahf
xchg
inc
sub
and
or
or
xchg
jg
bound
out
cld
ret
sub
add
push
insl
xorl
in
or
mov
xor
and
sbb
insb
pop
sub
add
nop
cmp
cmp
push
push
and
andb
je
adc
out
decb
roll
outsl
dec
fidivs
adc
add
lods
sbb
push
pop
int3
and
mov
xor
insb
sbb
add
sub
sti
fsubs
je
into
inc
into
mov
inc
pop
imul
adc
add
in
or
test
xor
out
inc
add
or
push
addb
sbb
mov
sbb
push
adc
leave
lea
repnz
inc
dec
mov
das
sti
js
call
or
mov
fsubrs
movsb
pop
out
adc
aaa
ds
dec
xchg
or
out
shrb
bound
inc
push
sbb
pop
xchg
adc
movsl
aad
rorl
push
jns
movsl
add
enter
out
loopne
pop
pop
ret
mov
mov
aaa
add
mov
push
mov
push
xchg
ljmp
jne
xor
test
jnp
sub
push
mov
pop
sbb
cmp
test
jo
add
or
js
push
mov
and
xor
dec
sbb
fstps
sbb
or
push
add
lret
mov
repz
insb
lea
out
popf
and
sbb
sub
push
sbb
or
pop
addr16
ret
cmp
mov
dec
pusha
jl
and
rol
in
mov
int
mov
pop
rol
data16
flds
inc
divl
pop
jne
mov
push
inc
xchg
cltd
int
mov
adc
pcmpeqd
pushf
push
out
mov
test
ds
pop
loope
outsb
mov
mov
sub
adc
pop
pop
mov
je
add
add
push
sbb
pop
sbb
pop
dec
sti
mov
gs
dec
decl
loope
pop
pushl
mov
mov
and
lock
dec
fsubl
scas
cli
push
push
dec
mov
clc
jle,pt
in
xchg
cmp
imul
sub
xor
jge
push
ja
jbe
mov
or
xchg
inc
jl
loop
jb
pop
sbb
or
xor
insb
inc
inc
lock
data16
jne
jg
ret
call
cmp
push
aam
jae
sbbb
lcall
mov
jmp
and
adcb
sbb
aam
inc
insl
dec
fnstenv
sbb
popa
jge
mov
lock
push
inc
sub
push
fiadds
lock
push
cmp
adc
push
jmp
shll
imul
in
inc
imulb
nop
push
xor
lods
dec
into
test
sub
cld
dec
daa
sbb
jne
push
dec
cli
dec
cli
cmp
je
mov
jno
ror
mov
pop
and
stos
inc
dec
cwtl
sub
sbb
mov
cmp
mov
fwait
mov
add
or
sbb
jno
push
push
adc
lahf
push
mov
sub
popa
add
test
xchg
push
fcmovnb
inc
mov
icebp
lcall
jmp
imul
movsbl
add
inc
mov
lock
mov
sub
pop
clc
test
js
cmp
je
push
clc
cmp
or
jmp
ja
add
pop
les
movsb
push
imul
ret
scas
outsl
or
jmp
sub
dec
mov
lahf
mov
es
test
cmp
jle
mov
dec
or
loope
jmp
mov
popl
mov
sub
cmp
dec
fs
shl
push
es
cmp
pop
or
xor
adc
cmp
je
sub
ret
dec
pop
or
inc
mov
lret
xchg
aam
mov
or
push
fmul
inc
mov
dec
cmpsl
xor
sub
cwtl
jg
cmp
and
ja
es
mov
inc
adc
push
sub
or
jns
ja
lret
mov
testb
inc
dec
sbb
das
or
enter
push
adc
cmp
inc
push
fwait
lret
paddd
insb
push
adc
xor
mov
sbb
jg
inc
or
and
and
adc
subb
out
push
or
inc
frstor
adc
or
fstpl
fldl
loop
ss
test
je
and
rclb
dec
pop
add
cmpsb
jmp
ffree
xor
or
sbb
add
pop
sub
jge
sbb
xchg
cwtl
ljmp
cmp
fsubrl
push
je
sub
bound
out
out
cmp
sbb
xchg
ljmp
pop
fsubrp
faddp
lds
and
dec
dec
loope
mov
inc
or
jg
addl
and
add
push
shlb
add
pop
enter
outsb
xor
adc
sub
dec
je
add
es
inc
adc
scas
flds
mov
xor
mov
cmp
fwait
ss
xchg
lahf
fstpl
sub
sbb
xor
push
mov
cmp
xor
xor
jp
in
or
xchg
sbb
push
inc
mov
pop
movsb
xor
sub
push
iret
dec
sub
sbb
in
sahf
out
int3
xor
outsb
adc
movsl
sbb
sub
mov
sbb
sbb
out
andb
push
and
pop
jp
and
xor
adc
leave
out
dec
adc
adc
xchg
xchg
jg
or
mov
dec
hlt
or
fnstcw
dec
dec
and
das
divb
and
and
push
and
unpckhps
jl
adc
sub
mov
add
push
jl
les
and
adc
add
add
xor
cltd
pop
mov
dec
inc
and
push
dec
or
and
add
and
popa
aaa
test
and
sub
push
mov
add
push
cmpsb
pusha
aaa
add
xor
or
mov
jl
adc
and
xchg
lods
cmp
mov
push
push
mov
imul
xchg
and
pop
jns
fnsave
jle
or
mov
es
mov
lahf
test
push
mov
leave
pop
add
int3
outsb
sbb
scas
push
dec
loopne
sahf
push
fistpl
and
and
in
es
fs
adc
dec
push
punpcklbw
lret
cld
or
ss
jns
hlt
adc
sbb
fs
leave
lret
imul
lret
orb
cmpsb
loopne
addb
push
aaa
leave
out
daa
test
out
les
sub
fs
and
nop
push
sarb
pop
xlat
popa
js
adc
push
sahf
out
sahf
mov
cmp
repz
add
cmp
repz
jge
lahf
mov
repz
rcl
hlt
add
sahf
push
daa
cmp
imul
jns
lea
sahf
out
loop
add
adc
es
pop
dec
jg
mov
repz
add
loopne
add
jmp
addb
and
in
xchg
lahf
shlb
push
aaa
mov
decb
in
fs
push
push
cltd
les
dec
add
shlb
mov
cmpsl
out
push
pop
jb
in
inc
sub
push
and
daa
or
push
mov
sub
inc
sub
call
test
fs
push
cltd
fcmovb
add
adc
jl
push
xchg
pop
jl
popa
add
and
cmpsl
out
aam
pop
jo
cmp
adc
sub
push
mov
pop
sbb
jge
shl
sbb
adcl
add
mov
push
push
js
out
xchg
shrb
add
lods
nop
dec
and
and
add
cli
adc
call
xor
stos
popa
mov
sub
xchg
sbb
xchg
xchg
enter
iret
rorb
jle
rorl
sahf
inc
or
clc
pop
fs
mov
dec
outsb
mov
dec
decl
stos
pop
rcll
adc
les
sub
push
aam
leave
adc
sub
inc
js
pop
add
and
adc
push
in
sbb
pop
mov
or
dec
icebp
das
loopne
cmpsb
dec
hlt
mov
addr16
cwtl
dec
and
fwait
add
cmpsb
add
dec
sub
and
loop
pop
sub
in
jle
jle
jo
add
pusha
pushf
rcrb
adc
xchg
lret
ret
out
in
push
popa
add
push
sbb
call
dec
in
add
add
fnstcw
push
or
mov
xchg
outsl
in
in
xchg
sahf
mov
inc
shrb
dec
enter
push
mov
or
nop
pop
push
repnz
add
es
mov
loopne
mov
out
jo
adc
cmp
cmp
out
xor
dec
add
xchg
and
dec
xorl
lock
cmpsb
jg
xor
imul
adc
cmp
rcll
pop
jb
sub
fstpt
or
bound
and
repnz
or
xor
adc
inc
lods
or
mov
daa
push
fdiv
ljmp
mov
ret
push
lea
push
push
cmp
jb
lock
movsl
ret
pop
leave
lret
jno
pop
mov
xor
sbb
push
in
add
dec
push
nop
xchg
push
add
rcrl
mov
sahf
or
push
repnz
and
or
in
pop
dec
adc
sbb
sbb
pop
mov
cwtl
dec
adc
lock
and
push
sub
movl
push
lock
lcall
test
in
push
pop
sahf
addr16
mov
adc
mov
sub
mov
cs
leave
orb
jecxz
xor
andb
pop
dec
push
and
out
orl
mov
add
add
add
mov
mov
adc
xchg
sbb
adc
icebp
imul
pop
inc
or
outsb
lret
inc
adc
sbb
popa
es
sub
aam
push
adc
insb
daa
jne
inc
xor
or
mov
add
mov
mov
pusha
cmp
adc
movsl
xchg
nop
test
test
movsb
or
adc
mov
fsubrl
mov
add
pop
mov
in
or
imul
imul
mov
je
lcall
or
enter
std
push
aam
adc
mov
jne
stos
and
or
push
lea
and
inc
xor
or
iret
push
lahf
sub
dec
add
or
push
push
adc
push
shrl
in
fldcw
adc
xor
in
add
mov
orl
push
push
nop
xchg
add
push
pop
push
sub
dec
adc
mov
or
xor
xor
mov
mov
mov
push
es
adc
add
dec
mov
in
mov
jmp
leave
ret
and
adc
mov
adc
add
adc
lods
and
cs
push
add
ret
mov
push
cli
push
inc
push
bound
or
cmp
aad
adc
aaa
or
push
add
cmp
add
xor
or
dec
scas
shlb
inc
adc
stos
sbb
xor
in
lret
leave
adcl
ret
incl
lret
add
jae
push
push
sbb
cmpl
cmp
rorl
pusha
push
mov
mov
xorb
dec
add
dec
dec
dec
in
push
insl
xchg
ficoml
add
dec
mov
mov
lods
push
cltd
out
les
in
dec
addb
imul
sub
pusha
adcb
je
jnp
mov
sarl
sbb
adc
xchg
dec
out
sbb
or
or
dec
adc
add
addr16
loopne
xor
dec
pop
add
lock
cmp
or
dec
mov
loope
loopne
pop
adc
aam
enter
xor
bound
push
test
cmp
adc
or
pusha
sbb
push
mov
aad
fiaddl
call
leave
or
fs
lea
pusha
jmp
aas
mov
or
pop
fs
mov
sbb
push
popf
mov
cmpsb
movsl
mov
xor
mov
popf
pop
int
and
sub
jne
fldl
sbb
push
push
nop
mov
fdivs
ss
lcall
cmp
push
sbb
push
loope
xor
mov
bndldx
push
jp
add
and
push
xchg
push
mov
out
push
or
and
push
and
push
sub
outsb
popf
and
push
push
add
lods
and
inc
jg
loop
lret
shll
dec
ljmp
testl
mov
sbb
push
jmp
xorb
aas
call
inc
das
adc
xor
in
lret
dec
shl
push
add
movsb
inc
push
cmp
ret
jle
add
test
mov
inc
mov
outsb
sbb
jl
in
jb
movsl
aam
xor
xchg
nop
fiaddl
loop
pop
push
jecxz
popf
lods
loopne
nop
jbe
scas
mov
add
sbbb
test
adc
add
jne
mov
out
or
push
shrl
and
call
sbb
push
dec
clc
fcompl
and
fstpt
mov
adcb
cwtl
push
push
andb
push
cmp
inc
lret
or
dec
adc
lret
pop
call
mov
sarl
inc
jmp
and
addb
inc
dec
sub
or
loopne
push
sub
ljmp
shll
imulb
ret
or
adc
jl
shr
and
cli
inc
jl
xchg
out
mov
adc
jle
xor
jo
jle
cmp
je
mov
mov
push
add
inc
jmp
movb
adc
call
fs
pop
idiv
daa
shrl
out
mov
stos
mov
cmp
push
push
bound
sbb
xchg
ffree
arpl
addr16
sbb
lcall
test
mov
add
pop
mov
mov
shrl
ds
add
or
dec
or
xchg
sbb
lock
out
xchg
jl
hlt
incb
test
or
add
push
sub
in
dec
faddl
cmp
daa
cmp
push
xchg
pop
mov
cmp
push
or
movl
pop
pushf
lods
lahf
adc
xchg
test
inc
mov
sub
ret
rolb
dec
lea
mov
lea
mov
pop
adc
pop
or
mov
lock
jge
shlb
loopne
out
dec
ds
push
push
insl
or
rol
or
add
jl
xlat
sbb
shrb
and
push
inc
pop
and
mov
mov
call
or
mov
inc
enter
add
movsb
adc
enter
push
push
lods
adc
adc
pop
ljmp
dec
xor
andl
inc
push
push
pop
adc
xlat
aaa
dec
adc
clc
cmp
jo
lock
mov
shll
push
pop
jbe
mov
out
add
sbb
cmpsb
jns
cs
enter
movsb
js
enter
fs
mov
pop
sbb
push
xchg
pop
xor
in
mov
call
and
call
inc
push
js
in
jle
mov
sbb
aaa
cmp
dec
int3
jns
les
push
push
pop
imul
cmp
and
dec
ja
adc
xchg
xchg
xchg
and
pusha
shr
mov
and
inc
ja
sbb
and
inc
loopne
mov
and
xor
cmp
into
add
mov
xor
dec
in
mov
xchg
pop
jbe
jb
jo
icebp
sahf
adc
cmp
dec
scas
jns
ret
pop
mov
push
sub
pop
gs
push
inc
inc
adc
xchg
dec
outsb
fisubs
fs
inc
mov
cmp
fs
xchg
mov
fs
fwait
adc
push
cmpsl
xor
dec
dec
dec
dec
pushf
xchg
mov
jl
int3
adc
dec
inc
stc
in
mov
jge
push
mov
sub
sub
jmp
in
sub
push
fcomps
sbb
pop
cmpsl
xor
sbb
jo
divl
lret
sub
jp
jecxz
sbb
mov
inc
sti
fsubrs
dec
outsb
inc
pop
push
shl
es
loopne
pop
xchg
and
mov
enter
mov
mov
pop
mov
xor
mov
or
orl
xchg
xlat
jp
or
scas
faddl
mov
or
into
loope
adc
mov
or
mov
mov
dec
test
call
iret
roll
push
fcomip
mov
mov
adc
dec
dec
movsb
pop
lret
cmp
cs
cmp
les
push
or
pop
or
add
lret
pop
mov
mov
loope
iret
aam
fcoms
xlat
movsb
and
add
punpckhwd
ja
sbb
loopne
push
jno
pop
add
add
js
ss
pop
xchg
hlt
lret
push
push
stc
push
ret
les
int3
in
jb
dec
fbld
xadd
or
repz
fsubs
add
shrl
mov
push
jne
ja
hlt
js
or
push
and
fmuls
and
hlt
xor
and
orl
jo
add
fsub
and
jge
mov
and
jmp
pop
imull
movsb
push
mov
mov
lods
loop
cmp
inc
sti
jle
push
cmp
mov
int
rolb
neg
sub
dec
dec
inc
ret
xor
xor
pop
dec
or
add
sbb
test
dec
xor
or
sbb
add
sbb
psllq
pusha
lea
jne
add
or
jg
mov
adc
inc
pushf
add
and
movsl
pop
xor
sub
push
push
gs
fimuls
mov
cmp
lock
ss
repz
psubsw
fs
in
hlt
xchg
insb
or
push
add
lea
xchg
rorb
push
movsb
mov
jno
inc
loop
cli
sub
pop
xchg
repnz
stc
and
in
adc
push
adc
sbb
bndldx
test
iret
inc
test
sub
fucomi
xor
sbb
or
xorl
push
test
adc
loopne
and
cmp
push
loop
cli
int
dec
iret
mov
and
ja
fcoms
sbb
xchg
int3
xchg
push
popa
dec
or
test
and
push
mov
cmovno
lds
cmpsb
clc
std
and
loop
decl
test
lret
inc
mov
mov
xchg
push
mov
adc
mov
shrb
adc
pop
dec
imul
sub
call
push
pop
adc
incl
jl
insl
cmovs
or
jnp
mov
adc
mov
into
or
add
xchg
adc
or
movsl
xchg
push
xor
rolb
pop
xchg
sti
sub
rorl
or
mov
or
cmpl
out
adc
xchg
fimull
mov
pminub
rcrb
jmp
cmp
loopne
push
decb
imul
cli
jp
daa
lcall
or
cmp
adc
mov
cmp
pop
sbbb
out
lret
and
jnp
iret
push
es
lea
push
imul
aam
or
aad
addl
xchg
dec
call
fmull
jo
add
lcall
add
rcll
xchg
mov
pushf
and
or
add
aam
popa
stos
xchg
jp
adc
cmp
pusha
mov
cs
xlat
insl
dec
dec
push
fsubrs
cmpsl
arpl
notb
clc
enter
mov
dec
dec
sub
adc
xchg
ds
push
pushl
xchg
lret
dec
loope
or
ss
lea
xor
scas
sbb
fwait
push
pop
fmuls
add
sbb
iret
pop
ljmp
fcmovne
fmulp
dec
xor
pusha
sbb
sbb
hlt
adc
cmpsl
sub
je
or
and
pop
mov
pusha
jae
frstor
shr
clc
ret
cmp
loopne
inc
call
xor
les
je
and
inc
cmp
rclb
out
jmp
ds
or
ds
pop
push
add
das
sub
and
lret
aam
push
ljmp
pop
outsb
loope
test
and
in
xor
add
or
daa
mov
jne
ja
mov
notb
sub
mov
cmp
cmp
push
mov
cmp
out
or
cmp
pop
mov
xlat
push
cmp
dec
cmp
pop
inc
cmp
xor
ljmp
in
es
sbb
mov
or
xor
add
cmpb
inc
jo
sub
push
sub
mov
lds
xchg
lea
and
dec
mov
andl
adcb
pop
leave
adc
mov
pop
pop
js
sub
add
push
add
push
adc
hlt
pop
add
scas
out
pop
pop
hlt
lret
and
insl
adc
ds
xchg
fisubrs
cmp
cmp
je
push
dec
scas
je
in
cmp
jl
push
sub
mov
and
add
xchg
jp
ret
xchg
jne
push
dec
cmp
fmulp
cmc
mov
adcl
adc
pop
lods
mov
lret
add
add
mov
cld
jbe
or
sbb
push
adc
mov
push
cltd
cltd
add
inc
roll
sub
jle
inc
jl
push
jo
sub
and
pop
adc
jmp
iret
pop
push
pushf
lods
into
mov
imul
mov
xlat
mov
xchg
cld
push
insl
loopne
mov
add
jo
and
pop
cltd
or
test
les
outsl
cld
mov
xorl
jno
mov
lock
or
js
add
inc
btrl
adc
mov
cwtl
or
js
xor
daa
pushf
pop
js
xchg
jge
fcoms
test
jge
test
ss
xchg
push
adc
cmp
push
stc
pop
loopne
xchg
or
add
inc
mov
sbb
insl
sub
sub
xor
cmc
in
aas
inc
aad
xor
mov
and
icebp
scas
push
xchg
loope
repnz
adc
rorl
aam
push
jno
mov
pusha
je
stos
dec
icebp
xor
jb
aam
in
push
sub
in
aaa
xchg
ret
push
push
repz
pop
loope
aam
cmc
mov
push
and
stc
mov
xchg
jns
add
jae
lea
mov
cmp
adc
mov
or
push
push
int
inc
jg
xchg
out
adc
adc
add
enter
or
imul
push
or
popa
orl
xor
rcrl
data16
movsl
loopne
or
rcl
xchg
add
sub
and
mov
push
add
or
mov
adc
in
pop
es
jnp
gs
sbb
jge
and
or
mov
and
or
jo
and
or
sub
mov
add
adc
sbb
pop
js
adc
add
movsl
jb
loope
call
push
xor
pop
rolb
nop
movsb
push
push
lods
mov
sbbb
lret
adc
fcompl
shll
push
jbe
decb
add
push
cltd
jb
or
or
xchg
clc
inc
mov
andb
push
cmpb
cmp
push
cmp
sti
in
movsb
push
or
addl
ret
dec
jg
push
xchg
jp
mov
or
mov
sub
mov
jne
sub
lahf
test
cmp
jae
mov
pop
cmp
push
rcrl
sbb
mov
loop
mov
jmp
aas
jg
movsl
loope
xor
mov
xlat
aam
iret
jne
int
pusha
cli
push
daa
pop
add
inc
push
fs
sub
jo
mov
adc
pop
pop
fimuls
jle
or
pop
daa
sub
cmpsl
inc
insl
je
dec
mov
cmp
cmp
xchg
fistl
les
push
jae
test
cltd
and
cmc
addb
xor
pop
por
mov
push
sbb
mov
adc
test
clc
pusha
pop
push
mov
call
pop
xchg
xor
arpl
or
test
les
mov
cmp
icebp
pop
adc
imul
cmp
adc
and
aad
insl
push
test
or
movsb
adc
inc
xchg
mov
es
pusha
or
add
dec
jne
jno
cmp
sbb
push
sbb
xlat
inc
movsb
rcrl
scas
fs
mov
into
daa
jl
iret
jnp
xor
aas
les
inc
pop
push
fists
enter
inc
mov
or
arpl
push
add
mov
ret
pop
pop
loope
ja
jge
push
mov
and
out
aad
jb
add
insl
sahf
or
xchg
lods
fisttpll
adc
test
or
sbbb
sbb
movl
push
dec
or
out
add
jne
and
sbb
add
sub
shll
movsl
or
push
bound
lock
enter
sub
fs
pop
push
stc
insb
in
aaa
mov
aam
shlb
cmp
and
pushf
jl
pop
push
dec
sbb
repz
je
fs
arpl
aad
sbb
pop
mov
or
xor
xor
sub
xor
jno
shld
fisubrl
push
pop
dec
int
arpl
xchg
sbb
std
pop
stos
dec
imul
mov
in
into
fimull
adc
mov
mov
daa
lret
or
sub
push
or
pop
test
out
sbbl
sbb
add
test
or
inc
or
mov
cmp
fists
mov
adc
loope
adc
mov
mov
cmpsl
das
movsb
mov
fwait
add
das
scas
faddl
sbb
inc
xor
sub
xchg
dec
dec
mov
movsb
or
and
cmp
aas
xor
add
enter
es
lret
adc
mov
pop
mov
iret
push
insl
and
movsbl
aam
inc
pusha
adc
mov
mov
push
stos
popa
loopne
ja
in
xor
pop
xlat
sbb
and
in
xchg
dec
addr16
sbb
aaa
pop
add
or
testb
pop
inc
inc
pop
test
mov
mov
mov
or
push
xchg
addb
rorl
xor
push
mov
inc
stc
adc
dec
into
and
icebp
cmp
test
and
sbb
movsb
xor
dec
insb
mov
out
cmp
pop
cmp
sub
mov
insb
js,pt
sbb
or
bound
out
push
sbb
cmpsb
mov
fiadds
dec
sub
test
das
pop
jb
adc
rorb
xor
or
adc
mov
mov
cltd
mov
sbbl
clc
mov
enter
push
popa
cmc
psrlw
sbb
mov
pop
out
or
jno
test
xchg
add
sub
jo
int
mov
and
or
xchg
push
dec
sbb
push
or
pop
lds
daa
sub
loope
cwtl
add
ret
mov
fmul
sbb
dec
cmp
scas
inc
scas
inc
xor
in
push
inc
sbb
dec
orb
xor
push
inc
ret
pop
cmc
add
in
fstps
push
nop
adc
insb
mov
ret
cmp
dec
xchg
movsl
sub
mov
rcll
outsb
xor
ret
testl
cltd
inc
xor
push
outsl
enter
lret
outsb
dec
mov
test
xor
mov
sbb
daa
iret
push
rol
out
dec
pop
sbb
jge
daa
sbb
and
loope
pop
inc
and
push
xor
js
pusha
adc
popa
les
inc
mov
fldl2e
push
dec
popa
mov
fcoml
pop
dec
pop
cmpsb
cmp
les
lock
bound
push
pusha
inc
adc
or
pop
in
cmpsl
and
push
push
and
push
sbb
shrl
testl
add
sbb
in
and
shll
pop
lods
lods
in
or
repz
mov
sub
adc
or
rolb
fsts
es
jno
cmp
fsubr
add
popa
push
and
pop
mov
daa
xchg
addb
stos
jno
push
xor
mov
sub
shlb
xchg
daa
iret
aas
add
clc
rcrb
push
shlb
adc
inc
filds
cmpsb
inc
mov
js
push
scas
pusha
movsl
int
roll
push
repz
adc
fwait
add
lock
push
add
or
stc
sbb
cmc
add
and
ficoms
test
add
jne
mov
pusha
fldt
loopne
loope
aam
adc
addl
xor
xor
imul
xchg
pop
inc
ret
add
insl
adc
push
rolb
lods
stos
or
dec
inc
add
inc
mov
dec
daa
rcrl
sbb
pop
adc
add
mov
or
xchg
push
call
or
jmp
shrb
imul
sub
aam
sbb
or
adc
or
add
es
add
adcl
add
int
inc
mov
pop
cmp
cmpsl
aad
sbb
mov
ret
dec
in
add
push
push
shll
subl
fildll
push
push
xor
push
sahf
clc
mov
push
repnz
repz
push
mov
mov
hlt
xchg
sbb
xchg
xor
add
mov
xor
jnp
or
pop
mov
dec
ja
mull
adc
inc
leave
mov
pop
ljmp
mov
or
dec
aam
hlt
push
add
cmpl
xor
scas
adc
push
and
insb
clc
and
mov
sub
xchg
mov
dec
cltd
mov
aam
loope
out
mov
ret
aaa
incl
js
push
and
cmp
pop
sub
mov
js
rcr
insl
outsl
jbe
test
inc
cmp
pop
ljmp
sbb
jp
mov
and
loopne
push
or
add
dec
rorl
adc
inc
sbb
jmp
cmp
scas
sub
bound
xor
stos
add
and
or
ja
or
cmp
je
stos
movb
or
sub
test
into
add
sbb
mov
jmp
je
lock
dec
pop
psubw
sti
cmpsb
inc
ja
add
loope
cmp
pusha
inc
lock
bound
add
test
std
add
sbb
push
inc
in
adc
sti
dec
or
push
pop
hlt
orl
cmpl
cwtl
add
cmpsb
and
mov
xchg
and
xchg
icebp
jb
jmp
in
notl
sbb
fildl
xor
mov
lcall
xchg
add
cwtl
dec
jl
jne
mov
add
push
mov
or
or
xor
pushf
adc
ret
mov
setae
xor
sbbb
mov
adc
fldenv
push
push
and
push
ret
jnp
jmp
mov
add
rcrb
adc
jo
jo
loopne
movsl
imulb
or
ret
das
cmp
pop
in
test
xchg
insb
jae
das
insl
andb
add
sbb
and
fmuls
clc
dec
mov
lds
test
fmuls
out
sbb
push
dec
leave
pop
out
pushf
insb
nop
or
mov
or
lea
cli
dec
ficomps
dec
xor
aas
or
inc
pop
andb
dec
and
shrb
xchg
jbe
xchg
jg
inc
dec
inc
imul
pop
call
mov
aas
ret
and
lcall
jnp
xchg
or
xor
mov
jmp
repz
or
xchg
jmp
add
lods
add
push
push
rol
mov
mov
cmp
cmpl
add
dec
fldenv
and
sbb
cli
sbb
lock
xor
repnz
add
and
or
movsb
mov
test
inc
ljmp
movb
in
mov
push
sub
test
ret
sbb
and
add
pop
pop
push
mov
insl
xor
jno
mov
mov
pop
adc
pop
add
mov
xor
push
inc
lea
xchg
xor
add
add
daa
test
dec
jge
sbb
in
xchg
int3
xchg
mov
cmp
jb
xchg
mov
cmp
jmp
dec
pop
js
mov
push
inc
data16
add
jmp
addb
adc
aas
cmpsb
hlt
jge
jb
mov
sti
pop
jo
xchg
pushl
sub
loopne
inc
ret
insl
cmp
addl
orl
mov
or
sbb
mov
jbe
ret
push
daa
dec
cld
adc
xchg
dec
dec
insl
add
mov
xchg
pop
sbb
fs
and
cmp
pushf
repz
xchg
mov
jmp
aam
pop
test
add
jns
or
add
sub
in
adc
outsb
xor
adc
test
lea
cmp
add
rorb
jo
or
and
add
cmovns
pop
xchg
or
add
in
or
adc
mov
push
pop
adc
sub
rcll
les
ret
adc
and
and
pop
fwait
leave
nop
mov
out
add
test
adc
sbb
inc
loopne
mov
add
jns
mov
dec
rol
test
mul
loopne
add
mov
inc
pusha
or
mov
stos
adc
mov
fs
cmp
mov
inc
dec
int
xchg
into
xchg
sti
or
js
fnstenv
jo
inc
test
insb
dec
pop
xor
add
push
dec
outsl
or
xor
loopne
enter
push
gs
adc
mov
enter
add
arpl
rcr
fisubl
movsl
or
xchg
int
lahf
adc
out
mov
out
or
fsub
jne
in
pop
mov
add
push
adc
mov
mov
dec
lret
or
sahf
out
imul
cmp
movsl
int3
sub
xchg
das
stc
xchg
daa
nop
loopne
pusha
sub
test
cltd
jg
enter
jo
lock
dec
add
push
sub
add
push
outsl
in
or
add
and
data16
setge
add
je
insl
add
xchg
xchg
loopne
xor
aam
or
shrl
mov
xor
pop
rcll
dec
jp
popf
popa
mov
cmp
fcompl
jne
inc
popf
stos
inc
popa
je
cmp
cwtl
adc
test
lcall
in
mov
mov
shr
aaa
sbb
push
push
jb
and
mul
push
adc
aad
cli
cmpsl
mov
gs
mov
popf
jge
hlt
lea
inc
dec
push
push
test
mov
out
push
or
in
in
fwait
dec
movsl
push
jmp
jmp
jo
lods
fcoml
dec
mov
jo
loopne
xor
xchg
inc
and
pop
push
js
stos
and
push
lock
shlb
adc
addr16
mov
iret
in
push
or
mov
pop
andl
and
fsubrl
add
movl
ret
xchg
mov
lea
insl
sbb
movsb
popf
out
mov
dec
mov
scas
push
pop
jmp
dec
jne
ljmp
add
xor
add
popl
ljmp
clc
cmp
cmp
std
mov
cmp
jbe
mov
sbb
xor
xor
jmp
pop
lock
sarb
mov
sub
push
lods
add
mov
add
mov
test
pop
add
jp
inc
xchg
mov
sahf
jnp
sti
fnsave
xor
ffreep
jne
push
aad
mov
push
decl
into
mov
pop
ret
push
cli
mov
push
sub
popa
and
jle
cli
push
cltd
fildll
cmp
jb
mov
pop
mov
imul
push
cmp
outsb
mov
or
dec
cmp
clc
adc
mov
cli
jbe
mov
sbb
and
cmpsl
pop
dec
xor
xchg
stc
lock
add
mov
jbe
lcall
je
and
push
push
or
int3
rcrb
add
adc
pop
sbb
mov
shrl
adc
cmp
ljmp
fcoml
test
sub
and
xchg
pop
add
xchg
xchg
adc
add
jbe
mov
add
pop
lret
xor
adc
and
adc
push
addb
sub
sbb
and
and
push
adc
jecxz
fstl
ds
and
jl
xlat
fdivs
sbb
or
mov
lahf
xor
loop
mov
ret
mov
dec
push
aam
push
mov
lret
leave
push
fcomip
ret
rcl
cwtl
adc
test
push
inc
mov
jb
push
and
nop
jl
aaa
nop
push
push
loopne
aas
insl
pop
and
testb
adc
mov
push
inc
jo
and
adc
or
inc
mov
pop
cmp
jne
mov
push
loopne
sbb
rolb
dec
cmp
jo
and
push
scas
outsb
fdivl
nop
sub
or
and
dec
and
in
addr16
adc
out
lret
clc
in
loope
push
push
rclb
iret
insl
and
and
loope
test
aad
rorl
fists
fisubs
jge
xchg
inc
sub
xchg
movsl
call
sub
cs
or
or
ret
loope
rep
jbe
sbbl
aad
cmp
gs
enter
mov
pop
dec
sar
adc
and
xchg
mov
jle
mov
movb
sbb
scas
add
lods
dec
push
adc
ss
ss
xchg
fadds
into
nop
popa
lock
dec
subl
loopne
arpl
or
inc
and
divl
cmpl
inc
sbb
and
pop
mov
sbb
rolb
sbb
lret
stos
in
jns
adc
xor
inc
ljmp
dec
jg
adc
or
jl
sub
mov
sub
cld
and
pop
mov
mov
mov
loop
or
sub
dec
adc
push
jno
nop
pop
popf
inc
adc
stos
add
jne
ret
in
mov
jnp
xchg
dec
mov
and
fisttps
jmp
ss
ret
ret
mov
inc
ss
pop
add
fidivl
insl
je
cmc
inc
push
jo
xor
dec
mov
pop
cmp
sbb
icebp
cmp
inc
add
jecxz
fsubl
pop
push
fwait
cmp
mov
shlb
or
fcmovne
mov
sub
dec
add
pop
mov
inc
mov
mov
inc
jb
wrmsr
adc
push
inc
std
push
pop
dec
sbb
push
and
push
bound
fwait
cmp
test
pushl
pop
mov
adc
popa
mov
jnp
dec
inc
push
or
cmc
dec
sbb
adc
les
mov
ss
inc
sbb
pop
aas
lea
xchg
bt
fsubrl
or
test
jno
inc
push
sbb
push
lock
hlt
dec
or
inc
andb
test
enter
ss
add
jmp
sub
cmp
leave
push
mov
push
fsts
lcall
mov
mov
push
sbb
add
jge
shrb
or
shrb
test
cmc
fstps
adc
out
push
adc
pop
clc
jne
loopne
jl
inc
jge
into
or
cmp
xor
push
sub
xor
push
xchg
or
jne
and
daa
push
shrb
shrl
and
inc
pop
mov
sub
fwait
ret
sbb
mov
mov
out
cmpsl
loope
mov
cmp
test
push
push
push
jmp
dec
inc
js
dec
enter
pusha
xchg
and
xchg
rorb
sbb
sarb
cltd
stos
cld
jge
push
push
clc
mov
push
imul
fadd
lds
cs
dec
call
fcmovb
mov
xchg
sub
xor
xchg
or
mov
add
or
inc
push
push
icebp
int3
add
and
lea
cmp
cli
scas
or
adc
push
or
push
popf
pop
or
mov
notl
fwait
jo
in
lea
imull
mov
fsubrl
push
xchg
mov
pushl
adc
push
push
xchg
lods
add
test
jnp
arpl
sarb
aam
push
lods
fsub
jae
pusha
lret
sbb
mov
test
out
cmp
push
push
jp
jns
je
cmpsb
mov
mov
addb
pushf
inc
pushf
push
jge
aam
fwait
ljmp
jbe
mov
call
cs
test
fisubs
lret
sub
mov
vmread
sub
mov
dec
fsub
fistpll
push
or
insl
shl
stc
fidivrl
cmc
mov
pop
jo
shr
dec
add
sbb
xor
jmp
push
movzwl
inc
mov
inc
cmp
into
cmp
out
cmp
loope
pop
jp
adc
sar
mov
hlt
pop
xor
push
xchg
in
jno
xchg
cmpl
std
ljmp
pop
mov
mov
sbb
mov
aam
fidivrl
pushf
cmp
pop
adc
adc
hlt
cmpsl
repnz
add
addr16
mov
je
push
scas
fcompl
push
push
test
push
fmull
hlt
or
cmp
and
inc
push
adc
sbb
and
jmp
std
inc
outsl
and
repnz
das
into
adc
dec
jae
add
mov
pop
pop
mov
fwait
btcl
movsl
push
jecxz
add
cld
movsb
mov
pop
xchg
or
mov
shr
mov
mov
mov
adc
movb
inc
adc
cmpb
es
mov
push
sbb
fldcw
cmp
mov
xor
test
xchg
xchg
or
jb
and
fcoml
cld
je
push
push
ret
pop
sbb
and
mov
cmp
inc
jge
xchg
sub
inc
dec
adc
xor
cmpsl
inc
popf
dec
jae
mov
fs
aam
add
es
add
jns
or
add
cli
pusha
jo
out
and
push
rcl
fs
cmp
xlat
sbb
sbb
adc
sub
cmpsl
adc
pop
xor
or
jecxz
inc
xor
les
mov
xchg
xchg
or
and
cmpsb
pop
xchg
adc
pushf
cmpb
or
sub
sbb
mov
clc
dec
arpl
loopne
and
or
mov
mov
pushf
pushf
mov
ficoml
push
add
add
pushf
pushf
pushf
add
outsb
lahf
pushf
or
jmp
or
jmp
or
jno
outsb
outsb
outsb
or
por
jmp
outsb
outsb
outsb
outsb
adc
pop
adc
push
adc
dec
adc
dec
outsb
outsb
outsb
outsb
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
outsb
outsb
sbb
pop
pop
jmp
and
or
and
or
jmp
and
mov
aad
lds
sbb
outsb
pusha
mov
mov
mov
push
hlt
and
cld
add
or
cmp
repz
and
xor
repz
repz
inc
dec
push
push
iret
repz
pop
pop
imul
js
addb
xchg
xchg
fwait
mov
iret
stos
scas
mov
mov
sub
add
and
or
or
push
movups
adc
adc
aam
call
sbb
sbb
push
pop
and
and
aas
sbb
repz
ret
sbb
push
ja
rolb
or
mov
sbb
sbb
cmp
add
pop
add
mov
mov
jmp
call
or
ljmp
out
jae
sub
or
push
dec
sbb
imul
sbb
mov
ljmp
sub
xor
aaa
mov
les
jbe
decb
pop
or
push
jle
push
jbe
ret
push
push
pop
enter
add
nop
loope
or
test
and
sub
or
mov
mov
aas
inc
sbb
rorb
in
mov
mov
loope
jns
loope
lret
sub
or
pop
nop
out
push
add
sti
aaa
mov
add
push
sub
aad
sbb
roll
in
mov
pop
push
push
adc
push
and
fcmovne
dec
xchg
add
dec
and
adc
sbb
dec
rclb
xchg
inc
enter
add
ss
xchg
push
popa
or
pop
cmp
or
inc
dec
es
jbe
jne
cwtl
dec
inc
testl
cmp
push
pop
bound
test
cmp
inc
adc
jae
lret
add
mov
or
inc
lods
pop
jmp
cmp
cmc
pop
pop
and
push
addl
push
fwait
ret
lcall
dec
or
jmp
adc
mov
adcb
mov
fmuls
es
jmp
test
mov
push
push
inc
movsl
xor
mov
fdivrs
mov
inc
outsb
sbb
jp
in
dec
mov
jo
push
push
adc
push
cmpb
mov
negb
jne
or
add
movsb
mov
adc
test
dec
cli
add
pop
loopne
or
imul
push
pop
arpl
xchg
pop
shlb
mov
add
sbb
addl
imul
aas
inc
imulb
lret
rcrl
in
rorb
loopne
mov
or
flds
out
pop
cmp
inc
insl
loop
inc
xchg
adc
cmp
mov
popa
or
in
jno
or
or
je
mov
cltd
loope
pop
cld
je
je
xchg
and
aaa
cs
mov
pop
or
adc
mov
cmp
or
adcb
ret
mov
inc
sub
or
adc
sbb
xor
shrl
dec
pop
add
sbb
test
push
out
or
test
push
and
push
shrl
int3
lock
popl
mov
mov
add
shlb
cmp
int
xor
dec
sub
inc
inc
cltd
cmp
or
incb
xorb
icebp
or
cmp
mov
mov
aaa
stos
adc
mov
andl
arpl
test
cmp
xor
dec
pop
ja
lahf
arpl
loopne
sbb
jbe
je
jg
pop
add
scas
call
jmp
gs
lea
aaa
rorb
push
xor
fsubl
lcall
in
loopne
push
daa
lods
imul
mov
out
or
xchg
adc
add
dec
jecxz
dec
adc
andl
mov
int
adc
or
push
aam
inc
jmp
enter
movsl
ds
sbb
jecxz
pop
cmp
jne
outsb
mov
rclb
or
push
jecxz
and
dec
or
cmp
outsb
pop
pop
push
repnz
aaa
ror
pop
testb
jp
jns
test
shrb
loopw
je
or
nop
push
mov
add
push
sarl
pop
xor
mov
es
xchg
jl
imul
shl
sbb
loopne
and
repnz
loopne
rcll
iret
shl
add
push
nop
cmpsl
mov
and
testl
sti
ret
negl
push
fwait
push
xor
fldcw
lea
mov
inc
jp
str
and
fwait
mov
or
xchg
pop
push
cltd
push
or
add
mov
push
mov
es
mov
pusha
lahf
jno
into
sub
push
movsb
sub
stos
adc
ret
adc
or
xor
addr16
pop
rorl
cltd
repz
lahf
pop
xchg
mov
adcb
pop
inc
jecxz
scas
or
and
xor
xor
fwait
dec
inc
xchg
xor
dec
mov
jne
pop
jle
loop
cmpsl
push
cmp
pop
lea
pushf
mov
sbb
sub
add
or
aad
push
repz
test
sahf
pop
xlat
cltd
push
push
pusha
fidivs
pop
add
xchg
imul
test
shrl
xchg
push
in
jmp
dec
shrl
test
pop
jg
jge
fisttpll
outsb
xchg
add
sub
in
add
sti
sti
and
pop
mov
add
dec
push
or
shlb
stos
jg
aam
rorb
sub
nop
pop
pop
pushf
je
das
sub
mov
adc
inc
hlt
push
pop
mov
push
add
dec
mov
mov
add
stos
pop
push
rorl
mov
add
cmp
xor
and
adc
add
inc
pop
xchg
xchg
test
dec
inc
pop
fmuls
push
add
xor
dec
xchg
push
sub
push
sub
mov
sbb
add
jo
cmpsb
inc
or
pop
insb
inc
nop
pop
mov
les
and
clc
push
or
jne
inc
mov
or
je
xor
push
sbb
fisubl
mov
inc
and
loopne
mov
pop
dec
adc
data16
aad
cld
std
xchg
in
and
push
in
or
and
dec
and
push
cmp
test
mov
inc
repnz
cltd
sbb
and
loop
ja
push
inc
sub
inc
push
add
or
cmp
add
rcrl
dec
scas
and
push
int
mov
scas
sub
jl
pop
testb
movsb
pop
andnps
and
sbb
add
and
push
or
test
push
and
data16
xor
pop
movsl
inc
js
xchg
dec
js
push
into
push
daa
and
inc
and
movsl
pop
sbb
push
add
or
add
push
inc
sub
test
shrl
sbb
cmpsb
es
adcb
and
testl
std
pusha
or
mov
dec
test
cmp
sbb
pop
dec
sub
loopne
enter
push
add
fwait
xor
xchg
and
or
pop
jb
pop
adc
mov
push
lock
adc
xchg
and
movzbl
fmuls
notl
jge
sbbb
ds
inc
leave
clc
insb
loop
xor
and
enter
test
mov
mov
xor
inc
push
dec
rcrb
aas
mov
lods
shl
and
leave
js
lret
in
and
mov
mov
xchg
dec
shlb
and
mov
enter
pop
aam
xchg
lret
fsub
or
xor
call
mov
adc
xchg
into
mov
mov
cs
lahf
or
jp
setge
cmpb
mov
shlb
pop
les
mov
femms
mov
test
lret
das
cltd
cmp
je
sub
mov
and
or
sti
add
push
cmp
jl
sub
jns
cmpsl
add
mov
inc
inc
mov
add
jp
idivb
push
or
xorl
add
icebp
xor
subb
sbb
daa
jns
repnz
lods
sub
shlb
inc
and
sbb
mov
pop
jl
jmp
out
insb
insb
cltd
jne
lret
xchg
iret
inc
out
xor
mov
fistpl
into
outsb
mov
sti
and
pop
jne
jge
and
and
inc
mov
enter
jmp
rcrl
mov
inc
mov
js
inc
sarl
int
sbb
mov
js
push
pop
das
sub
or
out
mov
mov
les
sbb
push
fwait
fwait
mov
sub
or
inc
lds
test
cmpsb
pop
inc
cmp
or
mov
outsl
data16
cmp
js
xchg
xor
in
sbb
cmp
jle
shlb
repnz
std
mov
add
neg
pop
pop
sbb
mov
cmp
les
adc
dec
fucomi
lods
inc
sbb
lods
jle
mov
pop
imul
out
push
pop
pop
sub
add
outsb
pop
adc
xchg
adc
mov
cmp
je
cmp
jne
push
inc
pop
inc
enter
rclb
sub
inc
and
sbb
push
add
divb
cmp
cmp
loop
and
shrl
mov
in
mov
mov
loop
or
add
lods
hlt
push
and
push
mov
lock
cmpl
enter
std
ds
inc
aam
hlt
adc
pop
push
push
xchg
lock
sub
xor
adc
call
insl
popf
push
hlt
and
mov
push
push
adc
adc
mov
cmp
mov
xorb
or
sbb
or
jp
outsb
sbbb
push
push
jnp
mov
rolb
ds
insl
dec
scas
in
jge
ss
xor
jno
adc
jno
mov
movsl
jne
stc
call
rclb
mov
and
xorb
adc
mov
jne
push
or
mov
nop
hlt
xlat
clc
adc
add
add
or
fsubrs
and
sarl
dec
and
test
jg
popf
dec
loopne
mov
rclb
in
test
xor
mov
xor
out
ss
push
push
imul
xchg
jne
inc
pushf
mov
mov
test
push
mov
or
xchg
loop
addb
push
mov
int
push
rorl
or
jmp
inc
lods
js
and
xchg
rorl
sub
insl
lods
rorl
adcl
cmpsb
jo
out
xchg
cwtl
cmpsb
adc
subb
mov
or
xchg
mov
or
add
cmc
das
and
in
xchg
mov
aad
pusha
mov
int
shlb
das
outsb
std
and
or
mov
testl
and
push
ret
into
or
bound
lcall
sbb
jns
sbb
fwait
icebp
and
pop
lea
sub
addb
xor
add
adc
jmp
cltd
pop
sub
mov
pop
das
pop
daa
and
ret
mov
dec
notl
test
xchg
hlt
bnd
cli
rcr
jle
jne
rclb
sub
movsb
mov
jbe
into
jno
movb
lea
insb
in
cwtl
push
lret
sub
icebp
inc
add
loope
bound
add
push
jmp
jns
icebp
adc
sbb
pop
mov
es
jp
xlat
xor
push
adc
mov
je
adc
test
sub
ret
and
imul
dec
lods
popa
in
icebp
jmp
mov
xchg
and
rcll
mov
iret
mov
adc
jmp
push
movsb
pop
lahf
insl
je
add
cmp
adc
in
jle
mov
push
and
cmp
jmp
xchg
lds
in
jecxz
jg
lret
enter
push
xor
xchg
or
add
js
mov
cmpsb
insl
cmp
or
cwtl
sbbl
aam
push
pop
and
pop
and
rclb
xchg
lock
aaa
aad
and
push
scas
mov
outsl
fisttpll
xor
xchg
add
and
fwait
je
loopne
call
adc
mov
pop
pop
sbb
cmp
repz
or
shrl
and
inc
adc
mov
add
mov
adc
or
mov
jno
enter
pop
push
popa
mov
cmp
lahf
xchg
dec
ss
mov
adc
add
push
mov
push
aaa
mov
dec
in
fstps
push
rorb
sub
in
push
or
mov
push
push
dec
sbb
add
jl
and
or
inc
nop
xor
shrl
and
lret
xor
jge
push
jl
or
sub
push
mov
mov
pcmpgtb
out
xchg
imul
ret
mov
int
ret
fnsave
ljmp
adc
faddl
fstl
fldz
fcomp
fnstsw
or
mov
insb
fnsave
sub
fsubr
pop
faddp
push
insb
rclb
aaa
imul
sub
mov
jbe
add
xor
add
dec
pop
lock
push
nop
xchg
or
lock
cmp
call
hlt
jle
xor
xchg
fnstsw
lret
shll
aam
je
call
call
mov
imul
fnstsw
and
cmp
btc
jmp
ds
inc
xchg
addl
jmp
ucomiss
pop
cmp
mov
arpl
pop
add
mov
lds
int
int3
push
add
jl
out
inc
outsb
imul
mov
aas
push
cld
test
add
mov
mov
or
mov
js
cmpsl
fimuls
enter
repz
cmp
loopne
in
push
fiadds
rcrb
aas
add
cmp
or
cltd
fadd
mov
dec
mov
cmp
jmp
test
sbb
or
jmp
xchg
jl
mov
ret
test
jno
xchg
mov
xor
ds
pushw
sbb
jnp
adc
gs
lds
cltd
add
push
div
add
adc
pop
movsb
pop
int3
in
add
or
or
inc
or
mov
add
mov
cltd
cs
rclb
dec
add
movsb
mov
cwtl
je
loopne
mov
dec
fdivrl
dec
mov
and
or
mov
cmp
sub
shll
sbb
and
testb
arpl
pop
ret
sub
xchg
les
push
push
movsl
mov
sub
add
mov
sub
int3
jae
adc
jb
or
aaa
push
add
je
push
dec
mov
xchg
pop
jg
jmp
cmp
sub
cmp
mov
cmp
in
insb
or
cmp
sarb
jb
adc
or
push
lock
xchg
lods
push
testl
fmuls
adc
or
clc
add
popf
inc
push
pop
jmp
ret
mov
sbb
pusha
in
call
dec
push
stos
mov
hlt
cmp
or
mov
rcrl
mov
pop
or
je
xchg
lcall
pop
or
pop
repnz
test
push
pop
fs
xchg
je
lock
inc
mov
adc
or
mov
push
and
lods
shlb
jge
movsl
xor
push
sub
pop
inc
sbb
xor
insb
or
loope
pop
inc
pop
push
es
sub
jge
cmp
jne
jo
je
js
mov
cmpsb
mov
lods
adc
nop
inc
ja
cmpsl
lock
xchg
jb
fs
cmp
inc
xchg
mov
inc
adc
mov
cmp
dec
push
or
pop
aaa
cmp
add
sbb
aam
orb
cs
adc
sbb
fs
push
sub
jmp
cmp
xor
fsubs
loop
cmp
add
in
in
sbb
inc
aas
xor
mov
popf
sub
aam
add
and
sub
fidivrl
iret
add
mov
pop
lret
jge
repnz
cmp
cltd
repz
insb
push
or
mov
xor
jb
scas
fldl
loope
jg
and
add
or
popa
pop
jbe
push
cmp
jecxz
pop
dec
sub
subl
pusha
imulb
inc
add
mov
add
xchg
mov
mov
fwait
cmp
xchg
or
xlat
sbbb
loop
inc
sbb
adc
mov
or
xor
shlb
mov
xchg
movsb
add
sub
or
mov
inc
cmp
or
sub
mov
inc
addr16
pop
inc
ret
mov
pop
insl
dec
data16
mov
sub
and
add
mov
mov
popa
and
push
lea
ss
es
jge
push
sbb
in
push
enter
enter
mov
fldcw
and
movb
jge
dec
pop
push
sub
int3
dec
mov
js
jg
call
mov
jg
mov
rolb
fldlg2
test
inc
in
xor
ficoms
sete
push
sub
pop
insl
popa
xchg
movsb
or
dec
lods
add
subb
es
daa
mov
jo
stos
in
mov
xchg
push
std
in
adc
push
xchg
mov
or
push
and
imul
ret
add
shlb
aam
push
pop
pop
cld
add
mov
cmp
test
add
ss
sub
sbb
xor
add
shl
mov
xor
stos
mov
jno
icebp
xchg
movsb
bound
push
rcl
push
add
test
leave
aam
adc
faddl
or
dec
mov
in
outsl
jns
or
movsl
push
or
inc
or
mov
lods
cmp
addr16
and
pop
cmp
je
arpl
add
cmp
mov
dec
ret
sub
add
dec
sahf
cmp
sbb
add
inc
mov
adc
lret
jbe
xchg
add
xor
add
pop
call
mov
mov
sahf
nopl
adcb
pop
daa
xchg
or
sub
cltd
lods
mov
dec
dec
fs
inc
sub
adc
arpl
out
jmp
push
in
mov
sub
push
in
add
sub
sub
popf
pop
jnp
loopne
push
push
into
inc
sub
mov
or
ret
dec
icebp
push
push
je
rcl
add
xchg
sub
add
movsl
movsl
in
ret
das
test
xor
movl
test
dec
mov
pop
movl
repnz
rorb
sub
dec
sbb
movsb
sbb
adc
in
push
out
sub
push
popf
sbb
add
leave
test
and
push
inc
pop
xchg
or
pop
lcall
xchg
sub
arpl
inc
add
push
inc
jmp
or
mov
push
push
in
rcll
pushf
rclb
push
or
adc
or
cmp
ja
and
push
stos
push
jno
push
dec
andl
mov
pop
lds
jae
stc
push
lods
notb
xchg
mov
sarb
xor
sbb
aam
add
es
mov
sub
mov
push
push
sti
or
test
jb
jae
jnp
sub
test
mov
sub
roll
and
and
cmp
nop
push
in
stos
jl
aam
mov
xchg
jmp
stc
fnstsw
sbb
xchg
pop
paddd
or
rolb
loopne
push
inc
xchg
loopne
arpl
or
outsl
inc
pop
adc
push
shll
dec
imul
cmpsl
dec
js
or
fidivrl
push
fdiv
xchg
lcall
fs
push
mov
fcoml
adc
dec
outsb
add
sub
sub
pusha
idiv
add
sub
sbb
add
das
stos
pop
push
and
cmp
pop
or
and
nop
dec
stos
ss
movsb
add
inc
pop
push
or
add
neg
sti
and
or
lret
add
pop
jbe
dec
push
pop
repnz
or
bound
xchg
mov
mov
icebp
and
in
fisubrl
adc
jl
sub
test
or
lcall
adc
pop
sbb
mov
or
fcoml
enter
outsl
adc
mov
or
mov
push
mov
mov
pop
cmp
or
sub
mov
xchg
cmp
add
push
and
and
cmpsb
test
movsl
hlt
movsb
pop
dec
hlt
loope
rcrl
or
or
lcall
test
aad
dec
aaa
insb
push
and
jnp
xorb
xor
dec
add
nop
jo
ss
xor
adc
or
push
repz
mov
pop
cwtl
sbb
adc
add
inc
scas
movsb
xor
lea
ljmp
pushf
mov
or
dec
or
cwtl
mov
and
mov
push
sbb
mov
add
push
add
and
add
or
xor
push
out
js
push
add
mov
mov
inc
pop
in
cmp
enter
mov
sbb
rolb
adc
jge
lods
adcl
shrl
jge
rorl
or
add
in
push
and
orb
xchg
repnz
add
xchg
mov
mov
mov
push
or
xchg
inc
hlt
inc
push
lds
jne
inc
sbb
dec
sub
push
mov
mov
jp
lcall
orb
sarl
test
fs
fsubrs
test
test
sub
dec
loopne
mov
leave
lcall
add
test
push
xchg
cmc
push
je
sub
mov
outsb
sub
aam
push
loopne
ljmp
es
push
rcll
popa
arpl
pop
xchg
hlt
push
adc
clc
jmp
outsb
adc
rorl
cmp
or
loopne
lcall
jmp
popf
adc
inc
in
dec
cs
and
adc
jl
and
inc
push
push
sub
ja
dec
jbe
dec
pop
lea
pop
shrl
test
out
int3
cmp
std
pop
loopne
je
in
movzbl
add
mov
jno
sbb
xchg
mov
dec
inc
and
push
jl
mov
xchg
add
subb
dec
stos
rorl
or
push
pop
lock
mov
sarb
pop
mov
out
sub
movsl
mov
into
loopne
jle
or
cmpsl
pop
mov
add
insb
aaa
cmp
std
and
pop
mov
cmp
or
push
stos
sarb
rclb
jg
dec
lods
nop
sub
push
jne
jnp
adc
imul
dec
mov
mov
push
mov
sub
push
dec
insb
movsb
imul
xlat
sub
hlt
shlb
cmp
cmp
xor
clc
ret
in
push
je
or
je
pushf
and
xchg
mov
xchg
shll
add
mov
pushf
jne
mov
clc
or
mov
mov
ret
scas
push
mov
out
adcb
call
imul
mov
jg
lds
in
mov
pop
mov
cmp
jo
and
or
push
insb
push
pop
lods
fld
aaa
mov
inc
js
mov
and
adc
sub
sub
fidivl
mov
sbb
xor
adc
shlb
out
lcall
cmp
jecxz
sbb
iret
add
and
jo
andb
sarb
aam
xlat
add
push
push
adc
mov
test
xchg
outsl
xchg
loopne
cmp
and
call
inc
xor
incb
push
les
ss
or
push
or
pop
adc
add
push
test
loopne
dec
in
cli
inc
das
test
adc
and
sbb
lcall
in
je
push
iret
xor
ja
xor
jae
or
push
jae
lds
sbb
jecxz
test
pop
or
pushf
subl
test
xchg
fdivrp
pop
mov
lcall
mov
ja
cmp
xor
movsl
mov
cmp
jne
or
ret
inc
add
dec
rolb
push
inc
sbb
or
lret
es
std
pop
inc
mov
in
in
fildll
sahf
xchg
pop
pop
jg
dec
inc
outsb
mov
insb
push
dec
cmp
lret
aam
in
int3
dec
orl
ja
pop
cmp
xor
mov
xor
mov
int3
or
cmpsl
add
sbb
mov
aad
and
xor
fs
arpl
aam
mov
shl
xchg
shl
jmp
push
sbb
jo
adc
insl
add
mov
mov
mov
pop
shlb
mov
pusha
jb
lock
push
mov
in
sarb
mov
and
rolb
mov
add
lods
add
push
jbe
sub
mov
and
sbb
rcll
fldl
loope
cmc
dec
or
pop
insb
cwtl
cmp
sbb
ficompl
jecxz
js
out
or
dec
adc
mov
cltd
inc
adc
sbb
xor
or
notb
lock
mov
push
inc
in
mov
add
enter
hlt
pop
ret
call
pop
sbb
fsubrl
sub
call
sbb
add
or
adc
cmc
add
hlt
xchg
fdivl
ret
or
in
pop
xor
inc
sbb
inc
sbb
jle
scas
xor
orl
shrl
xor
aam
ret
push
or
enter
in
add
cwtl
subl
and
dec
in
or
xchg
cli
mov
or
movsl
fs
add
sbb
xor
mov
pushf
cmp
push
adc
call
bnd
test
add
int3
adc
mov
rolb
dec
subb
fadds
pushf
or
ret
add
xor
lock
jnp
lods
mov
sbb
dec
xor
mov
or
dec
int3
cmp
popf
push
jne
notl
pop
dec
pusha
sub
cmpl
add
test
or
dec
movsb
pop
outsl
je
pop
sub
dec
jl
jmp
sub
popf
xchg
js
or
jl
adc
push
push
xchg
add
mov
test
pop
jmp
movsl
je
pusha
pusha
xchg
dec
sete
scas
sbb
or
or
push
push
lahf
lock
xor
pop
mov
or
mov
adc
add
mov
xor
rolb
jo
sub
mov
in
test
adc
test
xor
mov
lock
mov
sti
mov
stc
cs
clc
push
pop
std
xor
test
pusha
mov
cmp
je
dec
inc
hlt
mov
inc
mov
das
add
xor
cmp
jg
insl
and
rorl
stc
push
or
aam
push
sub
lea
in
adc
pop
cmpsl
mov
push
pop
in
pop
adc
das
sbb
xor
xor
dec
hlt
cmp
mov
mov
jge
loop
push
addr16
outsb
push
mov
inc
sarb
mov
push
lcall
pop
shrb
std
push
cmp
jne
inc
and
xchg
testl
sub
sub
push
jmp
cli
rclb
sub
ret
movsl
push
ret
adc
xor
outsb
dec
jmp
test
inc
out
bnd
shl
js
outsb
or
sub
iret
loopne
cltd
aam
fstl
hlt
pop
scas
arpl
in
push
test
mov
or
adc
or
jecxz
les
rclb
xor
int
and
mov
and
in
mov
xor
and
in
pushf
push
jle
pop
or
mov
push
int
xchg
mov
movsb
jo
pop
loope
push
mov
orb
push
pop
add
mov
inc
mov
adcb
dec
cmp
jmp
faddl
pop
push
arpl
adcb
add
push
mov
and
pop
cli
int
mov
xchg
out
push
enter
jnp
inc
xchg
and
adc
jo
mov
addb
xchg
mov
add
sbb
mov
clc
or
je
movsl
lods
xchg
imul
fwait
outsl
push
js
push
jle
dec
cs
pop
cs
mov
jo
test
inc
inc
arpl
cmp
out
cmc
push
mov
pop
loopne
or
pop
push
sbb
and
scas
pop
enter
sub
sbb
sbb
adc
stos
imul
hlt
mov
loope
stos
insl
je
call
mov
aas
mov
mov
jns
push
addb
inc
into
in
xchg
xor
xor
or
dec
fcom
movl
dec
xchg
xchg
xchg
jne
mov
or
xor
push
jnp
mov
sub
push
icebp
pop
ret
sarl
ds
or
cld
stos
stc
scas
sbb
mov
movsl
aad
dec
aas
lock
xor
inc
sbb
je
ret
cmc
call
das
push
mov
xchg
imul
lods
dec
jecxz
je
xchg
and
aam
insl
mov
ss
push
inc
inc
xor
std
mov
imul
cmp
stos
xchg
xchg
xchg
sbbl
jns
sub
enter
pop
movsb
sub
movsl
loopne
and
and
mov
call
inc
add
push
add
stos
or
hlt
or
ljmp
mov
lea
or
cld
push
fcoml
push
lret
test
add
pop
push
fistpl
xchg
mov
movzbl
cmp
js
nop
or
mov
sub
ret
jge
test
push
jl,pn
mov
adc
push
or
sbb
jge
test
xchg
add
popf
loope
out
fst
xor
shr
xor
cmp
jb
push
jp
in
add
not
mov
xchg
andb
popf
mov
int3
push
std
inc
call
add
aaa
jmp
add
mov
repnz
pop
mov
les
and
or
inc
dec
and
and
jl
pusha
push
dec
dec
push
frstor
adc
lret
add
push
add
xlat
mov
ret
pop
adc
inc
mov
adc
bnd
insl
popa
movsb
outsb
testl
push
xchg
mov
pushf
push
mov
xor
hlt
fcoml
inc
outsl
add
mov
insb
jns
sbb
push
mov
jnp
adc
push
mov
or
jb
inc
push
or
and
push
push
cmc
scas
pushf
cmp
jmp
inc
lcall
lods
adc
xchg
inc
push
inc
jbe
je
xchg
sbb
add
adc
mov
in
mov
jne
adc
ss
les
pop
call
pop
cltd
add
mul
dec
jmp
jmp
jno
add
cltd
in
inc
or
test
ret
arpl
fisubs
mov
mov
lock
sti
pushf
ds
popf
xor
sub
add
fs
sbb
xlat
pop
pop
pop
shlb
movsl
push
add
inc
jp
jmp
inc
and
jge
cmp
daa
add
dec
test
push
dec
sti
ret
outsb
call
inc
xor
and
or
sbb
add
push
push
insb
add
rolb
add
fucomp
fldenv
xor
lcall
adc
sahf
add
push
push
push
daa
or
add
or
and
ss
fs
xor
cmp
sub
adc
and
arpl
outsb
leave
inc
popf
push
rolb
stos
andb
sbb
add
movb
xchg
inc
jnp
mov
inc
js
or
xor
addb
jb
pop
stc
dec
or
stos
aaa
xor
adc
sbb
sub
mov
rorb
adc
enter
push
inc
mov
or
lods
ret
je
or
add
test
xchg
iret
and
add
push
adc
add
mov
xchg
fs
jp
mov
push
xchg
test
scas
mov
inc
pop
xor
jl
mov
sbb
pushf
addr16
adc
je
xor
inc
sub
inc
fs
push
cmp
lods
mov
dec
adc
add
pop
adc
xor
in
fiadds
dec
fdivs
sub
jae
jmp
out
jmp
push
sbb
in
dec
aad
inc
or
push
fldenv
sub
in
add
sbb
adc
cmp
jne
mov
fs
ss
je
mov
mov
scas
mov
rcl
push
add
add
es
xchg
and
dec
and
and
dec
xchg
test
or
dec
mov
push
xchg
jae
or
rclb
dec
xorb
adc
inc
ja
les
sub
pop
ljmp
rorb
pop
bound
push
cwtl
add
bound
adc
jle
add
add
stos
aaa
pushf
rclb
add
jns
add
xchg
mov
rcrb
sbb
add
or
sub
dec
push
adc
daa
mov
or
and
pop
jmp
xchg
in
inc
push
add
dec
cmp
jmp
adc
sbb
add
fwait
adcb
push
rclb
xor
and
push
add
inc
cltd
xchg
jbe
andb
push
sub
pushf
lret
jo
xor
addb
insl
or
lods
push
xchg
sub
daa
mov
lods
push
xchg
push
cwtl
sub
outsl
mov
add
push
push
adc
push
push
fcmovbe
sub
jnp
in
xchg
lods
dec
add
sahf
ret
in
add
push
mov
inc
adc
imul
mov
mov
mov
and
push
les
inc
enter
xor
mov
add
xchg
inc
adc
hlt
les
jle
lret
mov
pop
jne
int3
dec
adc
inc
jge
adc
xchg
rcrb
lods
movsb
push
nop
cmp
pop
incl
push
push
pshufw
cmp
inc
sub
orb
cmp
adc
cwtl
test
out
adc
xor
mov
sahf
cmp
inc
repnz
inc
inc
pop
or
xchg
sub
lcall
stos
push
pop
in
xchg
mov
add
lods
jbe
add
jg
mov
mov
lds
add
xchg
xor
movsl
mov
sub
mov
sub
shlb
call
popf
fldl
or
add
push
adc
or
push
lahf
in
popf
flds
hlt
xchg
jg
sub
outsl
adc
repz
dec
xchg
mov
cmp
jne
rcl
data16
cmp
popf
sarb
dec
lret
jmp
push
notb
push
mov
fisubs
dec
xchg
xchg
push
or
cwtl
add
jmp
xor
sbb
call
jbe
xorl
add
or
push
add
loope
adc
insb
xchg
sub
pop
out
push
pop
cltd
xchg
stos
xorl
shrl
push
inc
fs
cmpsb
push
jg
repz
sbb
loope
adc
popa
shrb
push
in
push
xor
cltd
sub
push
push
shlb
call
mov
xchg
inc
mov
add
insl
xchg
push
cld
cmp
xchg
inc
repnz
lcall
sbb
das
push
insb
fs
sub
icebp
inc
sub
js
mov
stc
repnz
cld
pop
add
dec
je
or
and
sub
pop
cmp
xor
js
jmp
inc
daa
xchg
lahf
imul
inc
aam
xchg
or
jmp
sbb
jb
push
sbb
xchg
arpl
rorb
push
insl
push
fldz
add
movsb
aaa
pop
push
lret
jne
push
cmpsb
add
dec
fsubl
fstpl
adc
push
fnstenv
sub
add
cwtl
sbb
addl
or
inc
pop
push
push
and
cmp
push
push
xor
fs
jl
mov
add
sbb
dec
bound
shlb
sub
jns
mov
sub
movsl
imul
add
test
in
call
mov
or
roll
xor
sahf
lea
sbb
push
in
in
popa
jmp
sbb
jge
sub
in
cli
jbe
adc
sub
adc
or
push
pop
sub
xchg
push
inc
and
int
or
jb
jo
inc
inc
daa
dec
repnz
es
push
add
mov
aad
xchg
sub
sub
inc
lea
jmp
sub
push
add
mov
dec
mov
mov
mov
xor
push
and
stc
xor
mov
push
mov
sub
repz
aad
jmp
cld
and
or
pop
movsb
adc
adc
push
aaa
int
jno
mov
mov
int3
sbb
lock
mov
dec
jl
adc
aam
push
cmp
mov
jl
dec
mov
adc
adc
mov
xchg
sub
daa
ret
in
dec
dec
dec
and
inc
clc
jbe
push
bound
and
loope
bound
icebp
mov
test
inc
jns
dec
std
sub
push
stc
mov
xorl
sbb
dec
cld
push
push
lock
and
xchg
jp
cmpsb
or
ret
lock
cltd
loope
leave
xor
jno
mov
movsl
pop
in
flds
and
push
xchg
mov
push
mov
pop
inc
les
fistpll
nop
sti
dec
adc
add
push
pushf
out
int3
mov
std
mov
mov
cs
mov
push
inc
icebp
sub
mov
pop
mov
inc
inc
pop
jne
inc
push
addr16
and
push
push
add
bound
sub
add
add
and
insl
repnz
pop
test
cmpsb
push
test
cs
push
rcr
aas
sarb
push
movb
lods
xchg
mov
ret
xchg
add
pop
inc
mov
mov
cmpl
inc
push
lock
cld
xor
xlat
inc
push
inc
xlat
pop
cmp
cli
addr16
imul
add
ret
mov
mov
ss
dec
mov
mov
das
sahf
or
inc
sti
mov
pop
or
xor
js
push
sub
mov
outsb
sbb
fmuls
pushf
jne
pop
aaa
test
fisttpl
inc
push
bound
fidivrs
mov
jbe
push
xchg
and
sbb
notl
pop
push
outsl
push
push
insb
aam
cmpsb
jo
jb
aas
rcll
add
xor
subb
fisttpll
adc
jbe
adc
inc
nop
int3
mov
adc
subb
ds
loop
into
lret
mov
bound
dec
mov
in
adcl
es
or
cwtl
mov
cs
push
mov
adc
inc
push
popa
sbb
and
mov
push
scas
add
sbb
jo
fsubs
xor
setno
jmp
inc
and
daa
loope
sbb
daa
pop
push
inc
dec
insb
dec
mov
or
mov
xchg
sub
cmp
mov
sbb
iret
cmp
loopne
inc
xchg
pop
ds
sbb
adc
loopne
cmp
loopne
nop
das
push
push
stc
pusha
or
in
rolb
and
nop
pop
xchg
mov
cwtl
dec
stos
sarb
cmp
je
bound
add
xor
push
sub
or
test
or
fisttpll
jns
cmpsl
ret
add
add
pusha
push
adc
popa
add
push
push
push
mull
xchg
cld
fmul
les
jae
inc
dec
testb
call
std
jmp
xlat
sarb
adc
push
pop
test
pusha
add
adc
cmp
cs
lret
mov
test
jle
andl
cmp
fcoms
cmp
nop
mov
push
pop
outsl
loope
loop
mov
icebp
pop
test
in
test
push
test
or
mov
cmc
push
sub
jmp
sbb
das
adc
in
mov
das
cmc
nop
push
jecxz
jge
movsb
inc
int
inc
add
lock
mov
lahf
test
cmp
fwait
int
fstpt
hlt
mov
cmc
ret
test
test
xlat
call
repnz
pop
pop
arpl
sub
pop
mov
test
roll
sti
int3
mov
dec
cmpsb
cltd
add
int3
or
dec
ret
iret
dec
cmp
sub
imul
out
addl
add
ret
fdivp
adc
sarb
pop
pusha
mov
push
cmp
test
add
mov
dec
test
mov
sbb
aam
or
shlb
push
in
xor
decl
mov
rol
mov
ror
xor
shr
xor
sub
jnp
jmp
ret
or
or
icebp
add
ljmp
adc
fs
or
mov
push
or
and
xor
add
es
sti
add
aam
sub
jge
scas
sub
lcall
ror
jl
sub
cli
fisubrs
jge
xor
and
add
fiaddl
gs
fiadds
cmp
mov
repnz
dec
repnz
sub
ja
xchg
dec
fmull
pop
push
or
fisttps
xlat
ret
rcl
add
add
or
call
movsb
in
rcl
call
call
dec
imul
rol
dec
rcr
pop
rol
out
add
push
xor
movsb
test
in
shll
in
inc
sub
dec
call
jb
inc
in
push
cmp
popa
inc
in
bound
push
lock
in
add
les
shrb
mov
xor
pop
pop
cs
cltd
call
movsb
imul
leave
and
xchg
call
xor
sarl
xchg
xor
xor
bswap
shll
jo
int3
push
imul
push
jge
aam
xor
and
and
movsb
aad
cmpsl
out
into
add
and
xor
push
test
or
inc
in
mov
push
mov
inc
jo
ret
push
jo
inc
inc
scas
add
adc
pusha
adc
dec
pusha
lcall
daa
stos
adc
push
loop
in
pop
jg
mov
add
add
pop
lcall
imul
ficompl
aas
lretw
push
clc
jp
push
and
add
add
aas
gs
fdivrs
inc
inc
lcall
xor
push
cmp
push
lret
inc
add
pop
cld
mov
xchg
pushf
dec
sub
jo
cli
stos
orb
aam
aaa
cmp
dec
xorb
inc
sbbl
in
in
push
inc
imul
shr
rolb
inc
xor
pop
add
sub
pop
xor
shlb
rorb
add
sub
dec
inc
scas
nop
cmpsb
loopne
call
add
inc
add
inc
sbb
xor
dec
pop
dec
es
lcall
add
pusha
push
nop
cmpsb
pusha
inc
xor
add
orb
sahf
push
pop
xchg
or
fs
push
dec
xor
rcrb
push
xor
adc
jae
push
and
fwait
dec
add
or
imul
inc
push
pop
pop
or
inc
leave
gs
xchg
jb,pt
or
ds
adc
dec
add
pop
in
adc
je
cmpsb
test
dec
icebp
clc
mov
fnstcw
pop
dec
mov
test
mulb
xor
imul
imul
and
mov
push
sbb
pop
and
movb
pushf
out
pop
add
sub
push
add
fimuls
inc
add
cmp
jb
testb
incb
popf
add
sub
lea
push
fs
enter
mov
dec
clc
sub
sarb
clc
mov
or
mov
xchg
fcmovu
mov
jp
cmpb
cmpsb
mov
sub
push
xor
in
pop
lods
or
jmp
lea
push
sub
pop
ja
imul
mov
or
bound
mov
mov
dec
jne
pop
in
add
cmpb
js
inc
xchg
fstpt
mov
adc
or
adcl
movsl
test
lea
sub
jae
push
pop
inc
dec
mov
fadds
rep
or
xor
ljmp
scas
or
jg
in
fists
outsl
pop
loopne
ror
mov
dec
adc
ljmp
add
mov
adc
inc
ss
add
ss
popa
cld
ja
xor
cmp
ja
push
sub
jae
mov
sbb
inc
aaa
popa
data16
or
push
popf
push
cmpsb
pop
or
cld
dec
je
add
adc
add
mov
or
push
inc
dec
ret
mov
inc
loopne
inc
dec
mov
jns
add
jmp
xor
je
mov
mov
imul
lods
adc
mov
cmp
je
or
push
or
jo
fisubs
jo,pn
sbb
jne
pop
sbb
mov
push
dec
inc
lea
inc
mov
pop
dec
inc
jmp
jns
or
movsb
jne
jmp
add
enter
je
testl
daa
cmp
loop
out
sbbb
or
sahf
mov
nop
stc
inc
cmp
fs
dec
inc
rolb
jle
fisubrl
sbb
push
pop
mov
mov
jp
pop
mov
pop
cwtl
mov
or
out
lahf
sub
lock
ret
fsubr
mov
lea
inc
mov
sbb
hlt
and
ret
or
cmp
negb
rcrb
cmp
notb
cmp
cmp
mov
cli
clc
je
push
cld
je
sub
xchg
in
ja
insb
mov
jecxz
pop
push
scas
sbbb
push
add
xchg
jle
mov
cld
insb
or
mov
pop
popf
xchg
cmpsb
inc
test
and
mov
cmpsb
sbb
jge
sbb
test
sub
jae
xor
jb
dec
jae
push
cmp
jecxz
js
xchg
add
jmp
cwtl
aas
les
movsl
fwait
mov
xor
je
fs
xchg
mov
repnz
pop
push
jbe
push
test
mov
push
mov
or
add
pop
movsb
push
test
jae
mov
jmp
dec
shlb
or
insb
xor
fildl
mov
cmp
push
inc
lcall
mov
push
add
adc
loopne
dec
mov
or
and
cmp
and
fwait
fwait
aaa
and
es
sub
sub
mov
jmp
jmp
cmp
jl
pop
jle
pusha
scas
sub
inc
imul
and
jl
jle
push
adc
ja
pop
or
je,pn
test
jne
je
mov
and
jb
je
movsl
orb
adc
add
mov
jp
dec
nop
in
push
loop
mov
xchg
ret
inc
sti
daa
jb
push
push
push
mov
inc
and
cmp
pushl
fsubr
mov
mov
push
mov
mov
mov
scas
es
add
adc
xchg
mov
fdivs
test
sbb
mov
dec
mov
test
xchg
cwtl
mov
or
adc
pop
cmp
push
push
dec
inc
sbb
add
pop
mov
cli
nop
out
fimull
sbb
sahf
out
popa
ficompl
sub
xchg
mov
push
imul
add
rorl
inc
and
lea
mov
fistl
and
cmp
in
or
jmp
cmpl
and
fsub
xor
mov
in
pop
sar
inc
lea
cwtl
xor
insb
inc
sub
scas
mov
dec
daa
mov
add
or
inc
arpl
imul
shll
addl
mov
xchg
or
xchg
adc
jp
hlt
adc
sti
mov
movsb
mov
aaa
and
movsb
movsb
mov
dec
add
xchg
pop
mov
arpl
or
add
ja
ds
mov
in
movb
cmp
loop
and
inc
push
inc
call
mov
add
lods
es
jl
add
cmp
add
push
sbb
js
lret
lock
add
scas
push
or
cmp
fdiv
and
popa
shlb
hlt
cld
jno
pop
add
inc
xchg
xchg
fs
clc
or
sarl
fmull
and
ret
movsl
sarl
add
pusha
sti
pusha
jb
cs
mov
cmp
ret
daa
add
inc
sub
arpl
mov
pop
add
mov
daa
push
push
stos
pushl
jno
shrb
cwtl
cmp
inc
or
push
mov
dec
mov
adc
nop
add
add
or
cmp
shll
sbb
xchg
xchg
mov
lahf
jne
adcl
sbb
xor
out
cmp
mov
jb
shr
push
das
or
jne
iret
cmp
mov
xor
or
xchg
nop
mov
inc
xchg
and
test
and
push
jle
pop
push
xchg
add
call
sahf
idivb
faddp
inc
outsb
jno
add
push
sbb
adc
in
mov
push
xchg
lock
imul
or
addl
push
loopne
std
loopne
jne
dec
rolb
in
push
add
and
and
add
cmp
xchg
push
push
rclb
fdivl
rclb
sub
jp
cmp
xchg
hlt
ret
sbb
push
push
das
bound
cmpl
dec
adc
add
push
scas
xchg
inc
cmpl
add
xor
mov
push
fcomp
sbb
jle
cli
add
sbb
je
push
cmp
mov
mov
inc
inc
inc
xchg
popa
fwait
mov
jge
pop
and
aaa
sbb
mov
lods
lock
mov
adc
movsl
dec
inc
rcl
or
pusha
mov
jmp
mov
pop
and
ljmp
dec
push
and
push
inc
movsl
pop
inc
dec
in
inc
repnz
std
fs
insb
jne
mov
movsb
or
jge
xor
sbb
xor
stos
inc
pushl
add
lcall
or
sbb
mov
jg
cmp
jne
les
aam
adc
lock
pop
jmp
cmp
cmpsb
or
add
mov
fld1
mov
js
les
dec
mov
mov
popf
test
movsb
push
adc
ja
jb
jge
cmp
push
ss
jg
xorl
add
add
das
push
xor
dec
and
and
lods
test
add
enter
fst
sahf
mov
shlb
cmp
ret
or
dec
push
sbb
cmp
je
sub
fstpl
mov
dec
cmp
pop
aaa
mov
jno
jmp
add
roll
rcll
shlb
jb
test
add
orl
dec
jae
or
xor
scas
mov
or
in
insb
movsl
mov
add
lock
mov
push
cmp
in
mov
xchg
scas
loopne
mov
das
mov
pusha
cmpb
rclb
ja
xor
cmp
jbe
in
add
and
push
repnz
mov
gs
or
xchg
xchg
lret
sub
xor
xor
in
mov
es
xchg
cmp
sbbb
pop
jo
fwait
xchg
and
dec
xor
mov
xor
or
test
adc
movsb
or
imul
and
call
push
jg
mov
and
adc
subb
test
xor
test
push
add
lock
add
add
mov
dec
sahf
push
int3
sbb
inc
cmpsl
push
pop
jmp
pusha
popf
aas
stos
pusha
adc
dec
ret
inc
push
pushf
inc
add
inc
icebp
loopne
orl
pop
es
or
lods
xlat
sahf
push
repnz
or
or
add
adc
in
popa
pop
ret
or
or
js
loop
daa
or
ss
add
pushl
pop
push
cli
xor
mov
or
jge
cmp
out
sub
cmp
push
push
je
push
movzwl
rcr
rolb
fistpl
jmp
lret
jnp
jne
jne
nop
lock
lret
cmp
punpckldq
mov
sub
dec
pop
jl
cmpsb
hlt
xchg
mov
xchg
js
pop
inc
rorl
loope
and
cmp
jmp
insl
popa
pusha
sub
mov
daa
cwtl
and
cmp
mov
and
mov
add
pushf
push
and
dec
es
data16
and
add
mov
inc
ret
adc
lods
sbb
ja
loope
shll
and
push
orb
cmp
push
xlat
es
xor
or
les
mov
sub
mov
data16
mulb
insl
test
out
orl
clc
les
and
xchg
xor
jl
or
and
sub
fs
or
or
sahf
in
or
add
or
cmp
jb
dec
lahf
xchg
sub
cmp
pusha
add
subb
lods
and
hlt
inc
inc
pop
add
rorl
xorl
sbb
nop
lock
repnz
lea
pop
xchg
das
push
xorl
push
mov
or
or
negb
cltd
xchg
pop
dec
mov
js
dec
xlat
lret
popa
adc
pop
or
push
das
int3
jbe
dec
cld
les
dec
sti
adc
jbe
push
and
mov
loope
jnp
pop
rcll
push
or
push
cmpsl
add
pop
cmp
rorb
lret
icebp
pop
sarb
mov
iret
inc
adc
mov
adc
adc
imul
or
adc
mov
inc
fmuls
add
push
xor
cmp
push
mov
jecxz
mov
dec
inc
sbb
cmc
sub
outsl
outsl
push
sbb
mulb
je
sbb
ja
adc
les
fdivl
ja
movsb
nop
ja
adc
cmp
mov
lret
lcall
int
and
push
mov
and
push
pop
pop
pop
pop
dec
bound
and
sub
mov
push
jb
and
cmp
pop
mov
ljmp
mov
dec
and
push
mov
rorb
adc
cmp
aaa
outsb
or
xchg
lret
dec
stos
out
mov
xchg
pop
fcmovb
testl
std
andl
adc
add
lods
mov
test
addr16
add
in
jb
and
dec
insb
fs
lds
insb
jecxz
mov
cmp
dec
dec
adc
cld
xor
gs
push
or
pusha
ljmp
dec
jmp
and
sub
and
or
dec
fstps
gs
push
mov
mov
push
lcall
repz
add
and
int3
ret
pushf
and
inc
mov
sbbl
inc
push
xorl
test
test
dec
loop
andl
movzbl
cmp
lock
and
sub
test
jp
sbb
or
jo
or
cmp
pop
fiadds
je
cmpsb
mov
incl
and
adc
loope
mov
mov
pop
xchg
fcmovnu
and
jle
es
push
sub
adc
lods
popf
and
pop
push
enter
or
push
mov
ja
out
push
mov
jns
movsb
imul
xor
ja
mov
popf
sbb
xor
les
push
dec
push
outsl
movsb
fldl2e
sbb
pop
pop
xchg
into
push
mov
and
fisttpl
gs
xor
push
push
movsb
dec
mov
push
mov
cmp
inc
mov
and
adc
push
shrb
sti
xchg
and
mov
and
mov
addr16
test
and
inc
dec
cli
and
mov
cmp
cmpb
xor
mov
push
lods
and
arpl
repnz
lods
sub
subb
clc
or
in
ss
inc
jge
or
pop
inc
inc
ss
test
jne
lcall
rorb
testb
and
jne
orl
sbb
mov
mov
test
lahf
add
push
imul
sbb
lds
andb
pop
addl
dec
pop
clc
fisttpll
or
mov
cmp
mov
outsb
mov
xchg
sahf
outsl
mov
pop
add
sub
movsl
and
mov
je
and
mov
cmp
jl
push
and
mov
xchg
je
pop
push
push
add
sub
push
sbb
xor
lahf
jo
adc
popa
in
lock
mov
imulb
push
mov
sub
xor
xchg
mov
incl
jmp
call
jo
je
cmp
jbe
mul
mov
fs
aaa
clc
in
adc
xor
add
adc
sbb
push
ret
jp
in
inc
mov
insl
xor
and
sub
lcall
xchg
inc
in
ficoml
arpl
clc
repz
push
or
adc
sub
jmp
push
cli
xchg
iret
adc
jbe
mov
insb
push
push
lret
jo
fisttpll
mov
in
lcall
add
sbb
pop
jo
jecxz
dec
add
push
add
sub
push
sub
dec
xor
adc
cmp
fs
cmp
lcall
mov
loope
mov
mov
int
sbb
stos
in
je
in
xchg
hlt
xlat
mov
pop
mov
xor
stc
leave
popl
es
and
adc
aad
mov
pop
sub
or
je
push
jae
push
or
mov
xor
jb
jmp
xchg
lcall
scas
sbb
sbb
push
jo
loopne
icebp
mov
inc
loop
add
movsb
adc
sub
mov
jecxz
add
mov
mov
mov
ret
mov
addl
or
push
shrb
cmpl
xchg
std
movsb
jne
fsubs
jne
stos
adcb
jo
nop
xor
pop
dec
sbb
nop
dec
cltd
dec
sub
ret
dec
je
add
jne
mov
cmp
into
lcall
adc
pop
mov
and
mov
js
gs
push
sbbl
inc
adc
ror
pusha
aas
in
leave
sub
cmp
cmp
jbe
sub
add
mov
sbb
das
sahf
push
inc
push
out
add
adc
dec
mov
idivb
fldt
adc
jb
xor
call
out
push
inc
push
ret
out
popa
icebp
fs
lret
and
mov
pop
mov
inc
ret
ret
cltd
mov
fsubs
daa
push
push
push
xor
pop
repnz
shll
or
pop
test
cmp
mov
mov
imul
add
inc
xor
sub
lods
cmp
push
test
add
test
push
or
in
inc
mov
inc
dec
lock
andl
xor
or
fcoml
sub
xor
mov
dec
loope
sbbb
pop
orb
xor
add
mulb
in
inc
adc
push
mov
scas
mov
push
pop
add
adc
aaa
adcb
ds
inc
jmp
sbbb
pop
sbb
add
pop
fcmovb
pushl
mov
add
pop
mov
pop
cmp
ljmp
mov
ja
adc
movsb
adc
add
test
ret
jb
call
mov
push
dec
pop
cmp
adc
or
pop
mov
je
cmp
xor
repnz
inc
jle
sub
sbb
push
dec
pusha
leave
popf
and
lea
jnp
mov
cmp
push
pop
pop
scas
sub
lcall
adc
sub
ficomps
ss
cmp
cmpb
stc
ja
and
jle
ret
ss
jb
sbb
push
mov
test
mov
dec
not
into
mov
inc
push
and
insb
sbb
push
loope
lock
jmp
inc
and
pop
jnp
js
mov
add
jmp
mov
in
add
fnstcw
cmp
not
or
pop
push
add
dec
aam
or
add
scas
dec
movsb
jo
jnp
or
pop
add
jne
stos
xor
or
or
and
and
push
push
sbb
xlat
push
cmc
repnz
sarb
aaa
or
adc
sbb
dec
mov
sbb
cmp
jl
les
or
jmp
loopne
inc
cmp
lcall
data16
inc
call
fbstp
push
jae
ret
js
sbb
or
xorl
or
nop
dec
and
cmpb
cmp
dec
fstl
lea
arpl
addr16
or
cmp
dec
insb
jo
and
enter
fsub
mov
xchg
pop
lcall
push
jbe
lret
inc
movsl
sbb
inc
les
pop
cmp
and
mov
dec
or
stc
mov
pop
or
cmpsl
pop
push
loopne
push
adc
and
pop
mov
pushf
sub
adc
pop
dec
jle
imul
loopne
aam
xor
push
scas
les
xor
jo
xchg
bnd
xor
lret
push
jo
xor
insb
pop
or
dec
jmp
cmp
das
push
nop
loopne
add
jne
pushf
rolb
add
fsub
adc
mov
jb
sub
pop
and
push
rclb
mov
add
and
sub
fsub
jmp
imul
cmpsl
imul
mov
pushf
or
pop
sbb
jbe
imul
or
stos
xchg
icebp
and
pop
mov
pop
mov
cmp
mov
jl
cmp
add
dec
sub
ja
pop
loopne
ret
pop
xchg
lods
shr
pop
rcrb
sub
ret
call
adc
fsub
rcrl
scas
es
icebp
rorb
sarb
hlt
cmp
jge
mov
or
or
push
jp
adc
dec
popa
xchg
push
sub
inc
into
pushf
push
outsl
test
and
jge
mov
or
pop
mov
xchg
mov
and
inc
adc
rcrl
stos
and
pop
push
adc
movb
and
cmp
ret
rcrb
pop
mov
push
add
clc
dec
sub
xor
ljmp
cmpl
inc
jmp
outsb
or
push
pushf
jmp
mov
insl
lahf
jp
nop
push
mov
dec
push
cmp
roll
sti
mov
lock
ljmp
les
lea
add
push
mov
sbb
sbb
jbe
lods
test
or
jmp
xchg
or
lea
mov
inc
pop
pop
int
xchg
in
or
int
and
xor
cld
mov
adc
mov
pusha
mov
movsb
mov
mov
cmpl
pop
ret
mov
dec
add
sbb
inc
cltd
xchg
xchg
push
subl
or
push
sbb
rorb
call
cmp
out
add
mov
ret
xchg
test
lock
inc
sbb
inc
in
inc
daa
shr
orb
or
mov
aas
or
or
mov
mov
dec
test
nop
sbbb
lcall
push
test
mov
jg
es
call
xchg
and
inc
out
jmp
aaa
lret
mov
int3
js
scas
test
ds
rcrb
jmp
test
je
push
int
test
call
mov
add
inc
sub
aam
lcall
jecxz
cld
das
inc
xrelease
push
or
add
cli
mov
cmp
pop
fiadds
out
pop
mov
dec
leave
ret
pop
mov
dec
movsb
arpl
mov
and
and
pop
mov
lret
lock
leave
xchg
aam
pop
lods
bound
cmc
dec
sti
mov
es
inc
xor
mov
lea
cmp
or
and
pop
or
imul
lcall
data16
shlb
js
out
ret
test
mov
inc
daa
push
dec
movsb
xlat
lea
loopne
rclb
adc
aam
mov
adc
sbb
int3
jecxz
adc
out
push
push
pop
add
ret
cmp
in
add
dec
mov
inc
stos
sbb
sub
dec
pop
and
inc
scas
pop
mov
dec
sub
je
jl
ret
xchg
iret
adc
jmp
push
sbb
xorb
mov
mov
arpl
orb
aad
and
fsubrp
mov
cmp
add
inc
mov
ss
push
add
xor
inc
fdivs
mov
movsb
pop
add
cmp
add
sahf
jecxz
test
cld
fsubs
pop
cmp
je
mov
or
adc
xor
and
test
scas
dec
cmp
or
mov
test
sub
fldt
roll
mov
in
test
inc
mov
mov
int3
imul
cld
faddp
fbstp
je
dec
mov
or
insl
pop
lcall
inc
movsl
orl
adc
pop
sub
push
push
jb
ret
daa
loop
adcl
adc
cld
jmp
cmpl
and
dec
subl
out
fsubrs
test
testl
xor
jmp
xlat
outsb
sbb
fwait
xchg
and
sbb
mov
in
scas
jmp
mull
je
test
add
fs
xchg
mov
fdivs
hlt
push
push
mov
sbb
int3
in
pop
movsb
fstps
push
cmpsb
sub
xlat
lcall
xor
pushl
int
idivl
clc
push
cmp
ss
pop
xchg
orl
or
sub
jg
cmp
mov
push
jae
inc
pop
add
jl
add
call
xor
aad
or
xchg
mov
sbb
xchg
and
nop
dec
add
adc
pop
sbb
cmp
push
test
hlt
mov
sahf
test
rcl
scas
xchg
or
mov
pop
jl
cmpsl
mov
push
inc
hlt
mov
push
xor
outsl
mov
xor
or
xchg
xor
std
enter
cwtl
dec
inc
imul
je
enter
clc
sbbb
lea
insb
popa
jmp
sub
xor
and
loopne
or
mov
and
jbe
add
or
jnp
lods
add
cmc
fldt
rcll
lods
lret
movsl
ja
icebp
xchg
sbb
enter
in
sbb
insb
dec
adc
pop
mov
xchg
cld
bound
xchg
cmpsl
add
and
and
sbb
mov
mov
and
mov
rclb
in
add
lea
test
push
pop
mov
lock
lea
or
popa
popa
loopne
push
jb
or
test
clc
lea
and
push
push
jns
add
shll
adc
push
and
push
cmp
js
lret
dec
hlt
punpckhbw
xchg
cld
xor
testb
sarb
or
gs
sbb
jnp
sti
sbb
mov
jbe
sub
pop
jbe
sub
jns
fwait
cmp
clc
jne
mov
push
test
cmp
pop
sub
push
loopne
xor
stos
mov
xchg
and
xchg
mov
mov
xor
clc
hlt
sbb
scas
xchg
hlt
jns
or
inc
or
and
stos
add
orl
jae
rclb
sbb
or
sub
es
mov
cld
loopne
fnstenv
scas
test
add
addl
stc
repz
cmp
inc
or
mov
xlat
cld
sub
lret
pushl
cmp
jge
inc
sti
mov
int
mov
loope
ret
xchg
cs
test
push
xchg
stc
mov
xchg
pop
add
loopne
cmp
push
mov
sbb
jbe
iret
mov
faddl
lea
mov
pop
mov
add
xchg
cs
inc
adc
jb
sub
inc
adc
test
data16
xchg
adc
xchg
xor
cmp
aad
mov
imul
dec
cmp
mov
shlb
mov
icebp
jne
cmp
cmp
mov
jne
fwait
jge
mov
push
arpl
add
popa
inc
push
stos
xchg
pop
test
dec
aas
sub
pop
lods
fcomps
call
cmpsb
sbb
add
iret
loope
pop
push
pop
in
add
sbb
lea
js
das
pop
xor
xchg
cmp
iret
and
dec
lea
fabs
jbe
mov
push
adc
mov
stos
and
movsb
movsl
push
jo
stos
loope
dec
mov
mov
xchg
add
mov
mov
or
jns
cmpb
mov
adc
adc
fcomi
shrl
add
inc
adc
push
cmpsl
sbb
xchg
and
ficoml
sbb
sbb
loope
push
push
ficompl
jo
jno
push
sub
shrb
jecxz
pop
and
cmp
pop
push
scas
sub
mov
inc
adc
rcrb
rolb
nop
loope
push
test
sarl
cmpb
sarb
jg
lcall
addb
es
jmp
sub
cmp
aaa
dec
dec
mov
mov
or
aas
loope
mov
and
jo
es
inc
cld
sub
add
add
nop
sbb
push
lods
outsb
lret
push
es
stos
lods
xlat
push
aad
rorl
fisttpll
pop
lock
jb
xchg
lods
sub
or
ds
lock
push
fwait
push
adc
inc
fidivl
mov
pop
mov
jb
addr16
inc
dec
mov
mov
xor
and
inc
rcll
or
fisttps
and
cs
mov
or
mov
pop
dec
jb
push
jae
scas
inc
add
aam
cld
js
gs
pop
insb
mov
or
mov
iret
add
sahf
ja
inc
jmp
xor
pop
push
push
mov
jo
je
repnz
mov
aaa
and
call
add
adc
xchg
lcall
pop
adc
mov
xor
add
bound
inc
adc
insb
sbbb
outsl
sub
inc
aaa
push
es
pop
xchg
add
or
popf
rcl
inc
sbb
out
loopne
rclb
jne
rdmsr
jmp
mov
test
popf
mov
lcall
push
pop
jmp
push
cmp
add
xchg
xchg
and
pushf
loopne
push
mov
xor
mov
push
pop
dec
mov
cmp
add
outsl
arpl
and
inc
js
in
sarl
in
jmp
and
sbb
in
adc
cmp
cmp
jo
in
in
jl
cmp
push
or
divb
movsb
std
adc
cmpsl
call
mov
inc
subl
js
popa
gs
mov
add
inc
out
pop
popl
or
pusha
pop
clc
add
clc
jno
jo
stos
add
pop
mov
ret
or
or
icebp
or
cmp
xor
jne
sbb
mov
adc
pushf
loope
lcall
or
push
add
test
lret
adc
push
xor
mov
or
aas
movl
and
std
jo
cmp
test
jne
mov
jl
ds
add
jmp
in
loope
xchg
in
xchg
and
adc
sub
sbb
xchg
insb
jbe
stos
xchg
and
pop
jp
xchg
mov
gs
sub
cmp
sbb
push
int3
in
lock
mov
pushl
jmp
mov
out
test
popf
xor
jo
gs
push
jb
fldt
inc
andl
adcl
pop
pushf
loope
fprem
gs
jbe
sub
xchg
addr16
mov
mov
roll
lret
push
dec
fsub
jle
add
sub
or
mov
sahf
pop
or
or
mov
roll
add
pop
mov
or
fcoms
pop
movsb
jo
insb
mov
xlat
dec
dec
or
pop
dec
dec
mov
ficoml
decl
pop
xchg
xor
out
lea
icebp
sbb
cli
xor
cmp
and
mov
rorb
mov
xchg
out
cmp
mov
rcrb
pop
add
or
imul
xchg
out
clc
das
roll
loopne
loope
mov
lea
loopne
sub
and
inc
mov
cwtl
xchg
mov
int
or
sub
imul
adc
ljmp
das
xor
repz
cwtl
mov
repz
popa
mov
or
mov
fwait
addr16
pop
gs
dec
pop
incb
mov
xor
icebp
js
and
in
test
out
mov
or
pop
and
jl
mov
les
push
fisubrs
jo
lea
push
mov
lea
cmc
daa
adc
enter
mov
push
xchg
mov
ss
adc
cld
pop
xchg
pop
adc
rol
addl
inc
cmp
fildl
inc
inc
es
pop
add
add
xor
xor
cmp
into
add
sbb
mov
dec
movsl
add
xchg
lret
add
sbb
scas
mov
fldl
shrl
sub
cmpsb
cmp
cmpl
adc
mov
imul
mov
je
lea
insl
and
xchg
sbb
loope
nop
mov
dec
mov
nop
add
and
inc
mov
cmp
mov
and
int
push
jmp
sub
adc
dec
rcrb
lods
pop
pop
dec
xorl
jle
js
out
mov
pop
push
push
mov
add
mov
stc
rorb
cld
js
cmc
ret
push
jae
lea
push
inc
mov
sbb
decb
imul
or
dec
pop
int3
pop
enter
or
frstor
andl
popf
mov
sbb
and
ficomps
cmpsl
jns
int
cmpsb
sti
or
push
cmp
fnstenv
inc
jmp
push
jp
mov
mov
clc
dec
cltd
inc
mov
lea
or
jae
mov
sahf
movb
ret
pushf
add
repnz
mov
subl
mov
add
mov
fsubr
popf
inc
fstps
imul
lods
imul
push
icebp
push
push
aam
jne
bound
sub
add
sub
pusha
lods
in
cmp
push
jno
add
outsl
test
xchg
cwtl
lds
mov
push
push
test
sbb
push
lods
in
jbe
sbb
ja
adc
negl
enter
sahf
inc
jl
sbbl
daa
add
cs
mov
arpl
jae
jns
jp
popf
or
push
dec
dec
jb
or
inc
or
pop
dec
outsb
movsl
pop
fdivs
mov
push
or
mov
sbb
bnd
push
shrl
ja
cmpb
push
jae
cmpsb
aam
or
lcall
xchg
sbb
adc
sbb
inc
xchg
dec
push
lret
push
mov
sub
unpcklps
pop
xor
cmp
aaa
pop
div
sub
push
inc
or
add
ret
bnd
inc
sub
cmc
pop
ret
pop
ret
fwait
mov
mov
jbe
push
fimuls
cli
adc
shlb
lea
push
mov
sti
cli
ja
cmpb
out
aas
ret
je
enter
sub
xchg
inc
and
addb
int
enter
fldcw
aaa
push
add
sbb
xor
jp
cmp
jmp
lea
cmpsb
imul
xchg
stos
add
imul
add
push
iret
pop
jae
sbb
inc
rcr
and
cmp
mov
aaa
jno
or
aaa
cld
mov
aam
cld
jne
or
or
xchg
out
mov
adc
xor
push
adc
sbb
add
fs
inc
insl
and
add
imul
cmp
lods
ds
inc
inc
dec
movl
add
mov
inc
adcb
bound
shl
rorb
sbb
movsl
mov
cwtl
push
or
add
loopne
add
xchg
jno
inc
pop
jp
iret
and
mov
mov
xor
jb
cmp
subb
ret
jmp
mov
inc
cmpl
shrb
mov
bsf
scas
repz
sub
inc
dec
xor
movsl
test
cmp
mov
push
aaa
add
jno
test
pop
cmp
mov
mov
lret
mov
mov
movsl
pop
je
adcb
mov
add
sbb
xchg
or
ret
addr16
add
test
lock
loop
mov
mov
pop
fsubs
add
adc
outsl
push
sbb
or
push
sbb
cmc
mov
xchg
and
lea
mov
inc
sbb
xchg
ret
ja
mov
push
mov
fstps
insl
stos
sub
dec
les
fcmovbe
mov
adc
jle
repz
pop
sbb
jnp
sbbl
adc
cmp
xchg
lea
test
bound
fs
or
mov
movsl
dec
pop
loopne
mov
inc
loope
and
lea
pop
mov
test
cmp
jge
add
xor
es
and
add
sbb
xchg
test
sub
xor
or
imul
enter
std
movsb
jle
jne
sbb
fnstenv
cmp
cltd
int3
xchg
pop
test
cmpsl
scas
imul
int3
mov
andb
addl
dec
add
mov
and
dec
ss
dec
mov
ds
and
mov
push
xchg
aaa
mov
adc
mov
mov
inc
cmp
test
mov
scas
xor
xchg
cli
xorb
mov
add
or
mov
dec
ret
sbb
stos
push
or
sbb
lret
imul
xor
and
mov
call
shll
mov
call
add
pop
add
mov
sub
push
test
push
sub
cmp
stc
xor
loopne
icebp
mov
jp
fisttpll
rolb
test
cmp
movb
bound
ja
push
rclb
data16
sbbb
sub
xor
mov
jne
xchg
or
mov
fiadds
rorl
xchg
fidivrs
mov
dec
pop
xor
sbb
add
dec
add
jecxz
int
add
imul
test
xchg
pusha
jnp
fnstcw
jge
mov
iret
adc
lods
lock
cmp
neg
cmpsl
jae
pop
push
cmp
and
movsl
xor
inc
cmp
cmpb
loopne
jmp
jecxz
mov
mov
ja
or
jle
shlb
push
xor
data16
mov
lock
xchg
inc
inc
push
mov
jbe
push
jmp
push
xchg
fstl
sbb
jle
mov
lock
cmp
xor
mov
pop
pop
ret
push
das
rorl
push
or
push
jl
jmp
sbb
lock
rclb
movsl
sbb
cmpb
inc
das
nop
inc
in
aaa
jns
cmp
push
lods
sub
add
and
pusha
add
fbstp
cmp
push
lods
jl
mov
fistl
lcall
cmp
push
sbb
stos
adc
movntps
das
jl
test
adc
inc
cmp
ljmp
mov
inc
xor
mov
lock
movsb
mov
mov
or
or
cmp
or
inc
add
clc
shr
call
mov
enter
shl
add
loope
shl
or
add
mov
push
mov
js
mov
mov
sahf
jp
mov
pop
fistps
mov
jp
jge
inc
add
adc
pop
push
mov
mov
lea
adc
add
jle
clc
sub
or
stos
add
sub
jo
popa
dec
jbe
sub
add
pop
or
fs
or
or
data16
lock
mov
andl
inc
and
mov
pop
lret
xor
call
dec
inc
and
or
add
pushf
xchg
int3
call
call
mov
mov
jo
pusha
and
in
aas
sub
pop
lock
adc
test
xchg
xor
inc
loop
leave
jle
das
pushf
pop
ss
cmp
stos
cltd
sbb
sub
subb
xor
es
cmp
rcll
js
dec
inc
sbb
sbb
adc
or
mov
mov
mov
js
mov
push
pop
lock
inc
iret
push
and
mov
add
inc
adc
xchg
or
shr
in
jns
and
or
jns
mov
rol
ficoms
shll
sbb
adcb
push
loope
icebp
sbb
fnstcw
mov
cmp
ss
test
or
push
jge
cmp
or
or
mov
and
xchg
cmp
dec
into
add
xor
mov
xchg
test
out
xor
imul
cs
add
std
and
push
scas
mov
fdivl
ss
jmp
push
and
jbe
mov
jmp
das
nop
test
cmp
jns
nop
cmc
push
inc
inc
fnstsw
inc
add
sti
movsb
xor
jbe
add
adc
add
xor
mov
adcl
cmp
push
loopne
cmp
in
mov
or
jo
pop
push
ret
add
mov
xor
jno
jecxz
and
insb
dec
dec
pusha
cmp
jne
sbb
call
sbb
mov
push
xchg
fptan
sub
lcall
mul
mov
mov
inc
mov
dec
movhps
fiadds
clc
xchg
xor
xchg
pop
jo
test
sti
sarl
andl
or
rcll
and
adc
pop
pop
ret
mov
or
xor
or
pop
jmp
rorb
inc
adc
rorb
or
roll
fs
adc
or
mov
adc
adc
mov
aad
cmpsb
or
dec
in
inc
and
sub
sbb
fadds
or
push
push
shrl
mov
mov
xchg
or
and
sub
fisubrs
daa
sub
rcrb
sbb
mov
jecxz
fs
stos
and
lea
cmpsl
mov
adc
add
or
mov
daa
jno
or
push
and
fwait
push
mov
dec
adc
adc
push
ja
int3
pop
push
gs
adc
cmp
sbb
rcrb
ret
xor
dec
and
push
jo
outsb
loopne
les
xor
xlat
sub
bt
notb
or
lods
pop
push
mov
stos
gs
loop
mov
xor
sbb
xchg
shlb
repz
call
mov
pusha
xor
sbb
mov
fnstcw
test
dec
mov
jmp
loopne
cltd
pop
mov
cmpl
or
lock
sti
pop
push
incl
ret
and
pop
mov
mov
push
jns
push
push
adc
or
dec
inc
js
cwtl
push
fdivl
xchg
pop
out
loopne
jnp
or
test
add
mov
lods
test
sahf
inc
in
arpl
fmuls
and
lds
call
jne
sbb
cmpsl
in
rcl
pop
inc
xor
nop
addl
sbb
testl
jbe
shrb
out
cmp
jle
add
push
sbb
pop
movzwl
inc
out
inc
cmp
in
or
addb
xchg
add
mov
push
add
pop
xor
or
scas
imul
add
inc
mov
add
cmp
xchg
jne
repz
add
mov
sub
scas
dec
lea
dec
insb
mov
or
std
or
mov
stc
inc
rorb
fadds
jo
dec
inc
push
mov
dec
sub
cmp
loopne
call
xor
cmp
inc
jo
jne
addl
fisubrs
test
test
or
hlt
rcrl
in
int
adc
sbb
sbb
lret
jne
mov
jmp
push
add
daa
sub
inc
es
adcl
outsl
out
je
cmp
je
push
fisubrs
mov
cli
testb
je
cmp
mov
pop
add
and
cmp
and
out
addb
add
cmpsb
mov
push
adc
add
ja
lahf
xor
mov
sub
cltd
cmp
sub
rorl
pop
fidivl
loopne
adc
inc
movsl
mov
inc
clc
and
rcrl
push
pop
mov
push
add
sbb
or
sub
loopne
xchg
cs
jae
dec
and
icebp
jmp
cmp
lock
sbb
or
ljmp
dec
ror
push
xchg
jne
lods
mov
jge
push
add
mov
cmp
pop
dec
hlt
adc
dec
add
mov
inc
cmp
insl
dec
mov
orb
jo
and
xor
movsb
scas
push
pop
push
xchg
popa
clc
jg
sub
push
push
mov
push
data16
sbb
or
add
lcall
mov
cmp
jno
adc
push
les
xorb
push
jl
mov
push
and
pop
cmpb
pop
pop
les
push
lret
cmp
addr16
mov
sbb
add
fs
lock
rorl
sbb
sbb
and
sbb
mov
inc
fiaddl
pop
cmpb
leave
jmp
jae
lock
sbb
inc
and
dec
adc
inc
xor
cmp
lret
sub
cs
ds
pop
adc
dec
or
and
fdivp
mov
sbb
jmp
push
xchg
push
rorl
fsubrl
cmpsb
xchg
into
push
push
sahf
xor
test
icebp
xchg
daa
inc
popl
ret
pushf
out
std
cwtl
nop
inc
add
and
add
push
sub
xchg
or
or
push
data16
or
std
es
cmp
jp
jne
clc
pop
dec
jecxz
fs
dec
jne
push
sub
arpl
call
adc
arpl
push
movb
dec
test
mov
lret
sub
out
aaa
les
fwait
add
stos
mov
dec
sbb
test
outsb
subl
push
push
or
loopne
or
fsubrs
js
roll
cmp
sbb
lcall
cmp
cmp
ja
fcompl
sub
sub
add
push
jno
push
or
pop
push
cmp
jo
mov
pop
cltd
push
and
sub
or
and
push
pop
sbb
or
or
addr16
fwait
push
rcr
add
add
and
scas
add
cs
pop
cmp
dec
mov
dec
call
jne
addl
xlat
loopne
rcrb
dec
rorl
pop
jl
test
rcr
push
mov
inc
cmp
add
dec
inc
ja
mov
cltd
cmp
push
and
cld
sbb
cld
sub
push
fsubs
inc
add
mov
jo
pop
and
or
dec
sub
pusha
flds
sub
push
ja
arpl
adc
cmp
cwtl
les
mov
adc
xor
or
mov
cmpl
loopne
insl
loopne
test
mov
ret
pushl
cmc
push
cwtl
inc
adc
mov
cmp
xchg
add
pushf
cmp
cmpsb
fisttpl
sub
aad
test
dec
sbb
push
push
dec
adc
push
add
aam
and
addb
cmpsl
sbb
mov
scas
jl
adc
cmp
pop
xlat
add
push
stos
cmp
and
stos
jle
jbe
jns
push
ds
lea
out
or
push
subl
lods
push
enter
add
jne
test
adc
push
sarb
push
mov
pop
add
cmp
fsubs
outsb
pop
in
dec
mov
nop
dec
dec
pop
dec
roll
adc
mov
mov
push
xchg
cmp
in
pop
mov
mov
push
scas
add
in
cmpsb
xchg
aam
scas
add
jnp
clc
dec
push
pop
cwtl
mov
nop
xchg
xor
faddl
fsubs
je
je
inc
adc
test
sbb
ds
rol
testl
fisttps
pop
hlt
add
ja
loopne
dec
cmp
jbe
ds
jae
rcll
pop
les
inc
sub
js
sbb
adc
sti
jle
pop
pop
enter
adc
inc
je
rcrl
mov
mov
cwtl
testb
pusha
shlb
out
cwtl
xchg
subb
or
xor
and
dec
inc
dec
loopne
pop
cltd
daa
ficoms
ret
fisttpl
add
xor
add
loope
sbb
test
in
mov
cmp
xor
add
hlt
adcb
inc
cmp
pop
gs
adc
sahf
inc
push
out
jb
mov
push
cmpsl
add
shl
dec
xchg
and
mov
bound
pop
inc
lret
rcrb
stc
cld
lret
orb
pop
mov
out
jbe
rolb
sub
and
push
aam
lret
loopne
insb
loopne
movsb
in
inc
xor
mov
jbe
test
hlt
pop
mov
mov
pop
imul
inc
inc
test
sub
cmp
in
pop
clc
das
cmp
add
lahf
out
shll
inc
outsb
push
dec
js
outsb
cwtl
jo
sub
push
mov
mov
adc
sub
adc
jl
mov
daa
pop
lods
inc
sti
push
cld
cmp
push
push
push
push
mov
add
pop
mov
sbb
popf
pop
sbb
mov
push
cwtl
dec
sbb
mov
dec
test
or
roll
jmp
dec
push
dec
adc
sahf
insb
sbb
mov
movsl
or
aas
dec
scas
dec
inc
or
pop
je
jmp
inc
cmp
dec
sub
js
push
dec
out
idivl
addl
dec
pusha
xchg
sbb
lcall
cmp
push
adc
push
rcrl
loopne
dec
ljmp
xor
icebp
jnp
add
lea
mov
scas
test
sbb
imul
xor
pushf
es
push
mov
jno
cmp
dec
inc
pop
pop
and
mov
jmp
insb
test
mov
xchg
xchg
inc
sbb
jo
scas
and
or
jns
arpl
or
adc
test
js
ret
mov
rolb
push
dec
popf
lods
xor
iret
sbb
stos
imul
ds
popa
inc
push
cld
movsl
stos
lret
mov
repnz
pop
in
cs
mov
pushf
push
jge
xor
jne
cmp
push
push
sub
adc
or
cmpsl
and
ror
ds
adc
and
xchg
shr
inc
jne
cmp
push
sbb
cmp
add
arpl
test
cmp
inc
sbb
js
mov
les
insb
xchg
pop
ja
dec
add
push
add
sbb
push
inc
xor
das
pop
arpl
dec
sbb
pop
mov
stos
adc
add
les
mov
je
movl
popf
pop
mov
ss
bound
cld
sub
sbb
pop
inc
ds
test
js
and
dec
add
inc
and
sbb
mov
pop
mov
call
xorb
inc
or
adcb
cltd
mov
out
and
and
sub
and
jne
cmp
push
and
clc
jg
std
fcmovnbe
push
dec
test
movd
movaps
or
clc
jae
xor
jle
dec
mov
add
lret
je
ss
stos
dec
ret
jge
repz
or
adc
insb
adc
or
mov
xchg
ret
or
rcr
adc
jnp
mov
mov
aam
ret
or
add
out
aad
mov
cltd
mov
fcmove
mov
roll
add
dec
add
pop
jo
addps
int
jnp
sti
fldl
sbb
sbb
inc
pop
jmp
in
mov
in
in
push
jns
ja
xor
sub
pop
sahf
sbb
out
xor
shll
js
test
push
mov
xchg
dec
adc
dec
xchg
adc
pop
inc
sub
not
nop
pop
aas
sub
xchg
mov
add
push
mov
mov
pop
in
movsl
push
sub
inc
sbb
xchg
cmc
push
pop
and
rcll
adc
cmp
js
cmc
adc
loope
adc
daa
mov
and
je
pop
movsl
pop
and
inc
pop
notl
sar
shlb
jnp
aaa
adc
mov
cmp
mov
sub
jns
mov
test
mov
inc
inc
xor
push
mov
push
xor
nop
addb
outsb
jmp
mov
mov
cmp
jne
push
push
and
xchg
movups
or
cmp
aaa
in
cmp
stos
add
xchg
inc
and
push
popf
bound
es
ret
pushf
adc
repnz
sub
call
gs
or
push
loopne
mov
enter
lods
push
lock
mov
aam
push
sub
loopne
pop
shl
fcomi
adc
pop
das
arpl
imulb
stc
addr16
inc
gs
jmp
push
mov
fwait
xor
mov
ret
es
xor
xor
xchg
inc
push
mov
adc
cmp
mov
or
incl
adc
jne
inc
cmp
push
xor
in
mov
mov
lods
add
inc
inc
dec
bound
data16
adc
sub
fadds
and
sbb
das
out
ret
dec
xor
dec
sbb
call
inc
cmp
cmp
lahf
sbb
out
xchg
cmp
popf
arpl
leave
repz
sbb
adc
int
jns
add
push
push
lret
rcrl
ds
aam
adc
or
sbb
pushf
sub
add
add
lock
pop
sub
mov
pop
adc
and
pop
and
and
cld
imul
cmp
cmp
stos
sbb
in
in
repnz
out
imul
sarl
sub
fistpll
ret
xchg
adc
loope
shlb
dec
leave
imul
pop
cmp
mov
push
mov
shl
rol
inc
inc
cmp
aam
lods
popl
jne
sbb
cmp
lock
jmp
jnp
inc
cmp
icebp
adc
xor
movsb
and
ret
ss
adc
mov
mov
cmp
lods
or
test
inc
or
daa
pop
out
testb
jp
or
orl
div
push
push
mov
mov
loop
adc
adc
jb
mov
fstps
xchg
or
jne
and
pushf
or
xor
fiaddl
inc
push
decl
adc
lea
stos
mov
or
stos
adc
loopne
test
or
adc
js
add
jmp
fmuls
js
cmp
mov
das
js
cmp
mov
data16
jne
notb
add
or
movups
mov
popa
jle
xchg
or
je
or
mov
add
mov
dec
add
or
or
nop
icebp
scas
mov
push
imul
inc
scas
add
push
push
sub
jmp
inc
not
fiaddl
movb
sbb
adc
loopne
rcrb
icebp
xor
lahf
nop
andl
adc
dec
or
fmul
inc
pop
ljmp
jmp
mov
cld
cmp
jae
sub
mov
push
jbe
shl
push
xchg
xorb
frstor
cmp
shlb
ficomps
lods
outsb
mov
leave
jb
xor
add
call
loope
das
cmp
jle
push
dec
pop
lods
enter
sub
icebp
pop
decl
int3
xor
add
or
inc
xor
ss
fnstcw
cltd
sbb
adc
fwait
push
xor
or
in
lods
mov
push
jns
rcl
mov
push
shld
and
clc
lds
jmp
aaa
je
arpl
mov
mov
outsb
xchg
hlt
fadds
testb
inc
xor
faddl
mov
add
shl
or
loopne
push
xchg
cmpsb
cmp
imul
into
sbb
js
mov
mov
jmp
xchg
dec
mov
fadd
js
jo
dec
je
push
fdivl
out
sub
push
cmp
jb
xor
lock
std
sbb
ss
jp
mov
imul
jmp
les
push
cmpsb
faddl
in
adc
ret
mov
lahf
push
movnti
adc
or
das
adc
adc
loop
sub
shrb
jbe
sbb
cmp
xor
push
out
testl
sub
sbb
push
sub
ret
add
pop
pop
fstpt
or
mov
arpl
subl
repz
stc
push
add
shr
and
fistpl
add
and
je
hlt
mov
ja
dec
test
clc
mov
testb
inc
mov
dec
push
xchg
shl
or
call
jmp
loope
adc
ljmp
dec
xor
les
sarb
push
jp
push
jmp
inc
clc
rorb
cmp
push
xchg
xor
inc
xor
lock
pop
ret
push
cld
inc
push
dec
push
icebp
pop
fiaddl
clc
ret
jmp
inc
in
orb
loope
and
pop
movsb
jo
push
adc
add
push
fsubr
lcall
nop
cmp
push
out
ret
pop
leave
and
cmp
stc
mov
pop
fnstcw
daa
mov
inc
cli
xorl
lds
stc
aad
scas
jl
push
divl
cltd
lea
sbb
les
adc
pop
or
xchg
lock
dec
pop
ret
inc
mov
mov
push
pop
cmp
mov
sbb
loop
sbb
in
mov
adc
inc
dec
and
inc
pop
loopne
dec
hlt
in
pop
bound
popa
push
mov
cmp
and
mov
pop
pop
xor
stos
cmovne
enter
push
jl
or
push
or
mov
stos
fmuls
push
jno
addr16
and
xchg
push
inc
jns
add
popa
adc
les
ss
and
sbb
lock
sbb
and
dec
push
mov
pop
jne
pop
clc
cmp
fs
sub
pusha
sbb
or
jnp
movsl
cmp
adcl
push
ficoml
gs
jae
push
outsb
dec
test
bound
mov
cmpsl
jne
xchg
popa
lret
lea
and
in
dec
inc
sub
movsb
ss
lods
mov
adc
inc
or
mov
inc
inc
push
pop
jmp
and
xor
xor
add
sub
cld
sbb
ret
lea
sbb
adc
imul
pop
add
add
sahf
addr16
daa
add
adc
pop
rolb
dec
add
jno
jle
seto
lcall
enter
add
mov
xchg
pop
push
pop
dec
push
jns
jb
or
sbb
inc
sahf
or
dec
or
sub
or
sbb
inc
pop
or
pop
lcall
or
lret
add
lcall
enter
cwtl
push
push
and
and
ja
push
movq
adc
pusha
adc
sbb
pusha
fwait
sub
adc
mov
or
adc
repnz
push
out
adc
repnz
in
add
adc
adc
fmulp
add
cmp
cmp
push
push
mov
pop
xor
out
rcrb
sbb
sbb
sbb
cmp
lret
call
repnz
sbb
push
sbb
cmpsb
sbb
je
pop
sbb
inc
sahf
xlat
test
sbb
pusha
push
push
inc
incl
jns
push
pop
pop
jne
add
add
sbb
cli
cmp
xor
pusha
decb
testb
cmp
xchg
hlt
and
mov
inc
sti
jg
xchg
cmp
add
cmp
je
lcall
push
in
repnz
lea
push
nop
idivl
sahf
add
jns
out
out
or
jns
push
in
loopne
add
call
and
nop
adc
cmp
jmp
adcl
sbb
sub
in
in
ja
rolb
cltd
mov
inc
push
nop
in
sahf
out
out
in
in
jge
sbb
xorl
pop
lock
xor
icebp
and
enter
repnz
pop
push
out
std
repz
dec
in
std
hlt
hlt
rorl
pusha
testb
cmc
inc
inc
sahf
xchg
add
testb
sbb
pop
idivl
insb
nop
cmpsb
repnz
clc
clc
clc
cltd
add
pop
adc
inc
stc
push
nop
out
lock
cli
cli
iret
cmp
push
inc
sti
sbb
stos
cld
leave
sbb
outsl
cld
push
pxor
std
xor
cmp
xor
pop
sbb
push
inc
xor
push
pop
or
add
lahf
in
cmp
or
adc
lcall
mov
inc
in
inc
scas
mov
icebp
inc
mov
stc
daa
xchg
sti
out
pusha
adcl
out
outsb
xchg
cmp
sbb
add
or
sub
sub
sbb
mov
in
xlat
in
cli
in
add
mov
cmpsb
jb
cli
out
out
out
cltd
inc
pop
and
push
lock
andb
sbb
jmp
pop
push
mov
cltd
sar
push
xchg
mov
dec
in
xlat
fstpl
div
jb
mov
xor
jns
xor
sbb
pop
repnz
clc
cmp
movsb
test
cmp
enter
cld
andl
inc
pusha
cli
mov
mov
dec
xchg
mov
stc
and
mov
scas
sub
sbb
testl
mov
scas
idivl
testl
sbb
out
in
xlat
enter
inc
testl
cmpsb
jb
imul
ljmp
negb
xchg
pop
leave
mov
xchg
negb
insb
out
out
mov
inc
negb
pop
and
and
add
xor
inc
add
repnz
mov
mov
xchg
cmc
jae
sub
cmc
testb
jne
div
jns
cltd
sbb
add
clc
scas
lret
add
clc
jecxz
stc
popa
lcall
cli
cli
xchg
inc
pop
pop
jno
hlt
pop
and
mov
hlt
cmp
add
sbb
or
push
data16
hlt
idivl
int3
jbe
push
jo
sti
lahf
jle
aam
pusha
adc
or
aad
imul
loope
and
add
pop
leave
scas
repz
test
imul
and
repz
repz
push
lcall
jmp
pop
cmc
mov
xchg
pop
pop
daa
xchg
repnz
lret
adc
sbb
inc
fcompl
and
xchg
pop
pop
daa
add
and
inc
in
rcrl
movsb
sbb
divb
scas
adc
xchg
icebp
jb
test
popa
leave
push
icebp
cmp
xchg
cmpsb
cmc
cmc
cmc
popa
leave
mov
add
jecxz
adc
jne
ret
rclb
lock
stc
cmp
lock
lock
lock
push
lock
test
ss
aaa
add
add
sub
jge
cmpl
adc
cmp
inc
cmovno
push
add
xchg
add
sbb
add
add
jp
push
jnp
add
rcll
inc
jne
or
xor
rorl
add
sahf
and
ljmp
repz
add
and
ss
in
add
dec
and
xor
data16
sbb
and
pop
or
lahf
out
sub
adc
sbb
add
push
in
sbb
repz
pop
jle
push
loop
ret
iret
repz
into
out
pop
push
xor
movups
pop
lahf
add
shrl
add
xor
out
add
lahf
rorl
jle
rolb
insl
xor
pop
add
add
call
test
mov
sub
pop
int
pop
test
jp
sub
adc
xchg
shl
std
cld
out
sbbl
push
incl
push
and
add
mov
push
addl
mov
push
lock
cs
ret
decb
enter
cld
pop
fnstcw
je
push
add
and
outsl
ret
popa
jo
or
adc
loop
pusha
nop
or
pop
push
sub
pop
fdivs
fildll
mov
mov
fsubrs
add
and
add
push
and
cld
adc
insl
test
sbbl
insw
and
add
xor
pop
or
lods
dec
push
ljmp
imul
push
imul
psubusw
cmpl
inc
push
push
scas
dec
fs
push
sbb
neg
add
dec
rcl
rorl
cld
add
enter
push
pop
add
or
xor
mov
je
rep
mov
dec
ljmp
ja
add
or
push
push
push
ret
loopne
fdivrs
xchg
mov
fwait
dec
adc
in
sub
in
sbb
add
push
jecxz
cmp
adc
fsubp
les
movsb
push
xchg
pop
and
cld
add
clc
loop
inc
add
js
push
insl
ja
out
xchg
jo
jne
xchg
inc
jb
and
std
pop
ja
add
jle
pop
pop
in
jle
inc
inc
inc
xor
rcrl
cmp
enter
jbe
mov
mov
mov
imul
xor
icebp
and
gs
iret
push
mov
cmpsb
and
add
add
popa
xor
cmpsb
adc
and
pop
mov
xor
je
shll
pop
roll
sub
ficompl
pusha
inc
inc
pop
cmp
enter
add
inc
mov
or
xor
jmp
imul
or
mov
fldenv
add
xchg
and
nop
lock
pop
add
cmp
neg
adc
or
jl
or
adc
push
outsb
lods
push
mov
push
lea
mov
jecxz
ret
inc
xchg
push
jmp
test
out
xchg
out
popf
dec
mov
xor
inc
lea
pop
inc
jmp
cmp
jne
orl
add
sub
rorb
adcb
ficompl
into
cmp
xor
aam
pop
dec
out
stc
cs
jmp
mov
fimuls
sti
outsb
xchg
push
and
adc
insb
adc
pop
jne
dec
or
add
lds
push
incl
dec
divb
mov
fdivr
xor
sbb
je
mov
sub
cmp
xlat
loopne
lds
adc
and
adc
sbb
lcall
movsb
out
inc
mov
add
mov
xchg
test
and
mov
or
pop
pusha
adc
pop
neg
xchg
mov
mov
sbb
add
sub
xchg
or
sub
pop
stos
out
es
mulb
jne
clc
sub
sub
pop
ss
les
jae
in
rolb
sbb
mov
insl
xchg
jecxz
pop
adcl
and
call
xchg
ret
fxch
cmp
add
pop
or
pop
insb
adc
pop
adc
insl
cli
cld
fisttpl
pop
loopne
xchg
sbb
cmp
jne
jnp
rorb
adc
outsb
pop
or
idivb
push
cmp
jne
mov
push
cmp
jne
jns
fwait
cmpsl
es
jne
call
and
fwait
ljmp
mov
cmc
jmp
adc
sahf
lahf
jmp
std
std
jmp
cld
iret
or
ret
push
sub
test
mov
pop
pop
dec
cmpsb
adc
mov
or
add
lods
mov
jmp
mov
pop
lock
lods
sub
lret
or
mov
test
ret
das
cmp
jns
adc
and
pop
inc
pusha
jnp
mov
loope
push
fwait
std
or
adc
nop
or
mov
push
push
lods
add
enter
and
dec
rcrl
or
push
fisttpll
xchg
jo
lea
lret
xchg
dec
adc
add
ja
icebp
add
enter
jg
loope
fs
add
sbb
fimull
push
pop
add
stos
add
orl
xor
in
pusha
and
shll
or
rolb
xchg
pop
adc
stc
subb
push
jmp
mov
rcll
pop
pushl
jne
or
mov
mov
sbb
xor
xlat
outsb
out
jns
mov
dec
mov
push
js
pushw
add
jmp
sbb
cwtl
ja
leave
add
add
ror
add
add
and
and
mulb
les
jno
sbb
dec
cmp
and
mov
movsb
add
testb
adc
and
pusha
mov
jmp
lret
clc
cmp
arpl
icebp
call
mov
mov
mov
or
dec
stc
imul
stos
add
testb
and
loop
sahf
mov
fnstenv
push
adc
mov
divps
test
push
jg
jge
mov
mov
inc
adc
ds
imul
or
fisubl
or
add
push
mov
adc
into
roll
movb
push
or
or
faddl
cmp
stc
mov
push
pop
and
int
push
movsb
cmovs
scas
push
pop
test
or
sbb
push
test
sbb
pop
xchg
cmp
jb
rep
jmp
ret
sbb
mov
fwait
mov
enter
das
ds
in
pop
in
push
push
dec
push
mov
mov
add
in
lcall
mov
cmp
add
lret
lret
cmpsb
inc
add
add
xchg
mov
or
push
cmp
cmp
mov
mov
jns
out
mov
mov
call
sahf
out
lock
hlt
int
jns
clc
clc
cld
add
or
add
fldcw
sti
mov
clc
or
and
xorb
pop
sti
xor
push
inc
and
push
lea
jl
cld
or
pop
rorl
cld
out
jo
neg
fs
insb
adc
and
gs
nop
test
test
fcmovne
ror
rcr
add
out
add
out
add
aaa
adc
mov
dec
addr16
add
mov
je
repz
dec
and
sub
xor
inc
cmp
ds
dec
push
xor
sbb
repz
repz
adc
adc
repz
adc
or
add
xchg
mov
push
icebp
jns
cwtl
lods
xor
push
add
pop
lar
inc
pusha
daa
ja
lahf
lcall
push
xchg
hlt
idivl
mov
incl
inc
decl
jne,pn
pop
pop
mov
inc
push
fistpl
jp
jbe
push
cltd
pop
idiv
add
mov
pusha
adc
jecxz
mov
ds
adc
pop
aaa
dec
mov
cmp
pop
fimull
xor
jmp
cltd
dec
cld
cmp
jae
dec
pushf
mov
lea
pop
jbe
mov
dec
mov
icebp
sub
pusha
add
sub
sub
mov
fcomi
cmp
push
push
jg
dec
sbb
add
test
add
mov
sbb
dec
dec
je
sbb
push
push
cwtl
mov
or
mov
xchg
int
scas
imul
mov
negl
call
push
lret
dec
repz
mov
daa
xor
cmp
xchg
inc
lcall
mov
add
xchg
adc
add
lock
push
ss
pop
push
jo
push
dec
cmpsl
int3
add
adc
mulb
dec
jp
push
adc
fimull
lock
stos
and
cmpsl
sub
dec
ret
jmp
cmp
leave
mov
jecxz
fsubl
aas
jge
loopne
cmp
push
push
cltd
pop
idiv
xor
sahf
mov
inc
xor
xchg
inc
fisttpl
pop
out
cmp
and
scas
jmp
or
cmp
loope
push
or
add
cmp
fidivrl
adc
fs
jmp
jl
movsl
lods
pop
sub
adc
imul
mov
pop
and
jecxz
repnz
xchg
in
jl
cmp
add
mov
pop
pop
mov
pop
incb
inc
jns
adc
cmp
scas
mov
stos
incl
pop
es
sti
cmp
loope
sub
sbb
mov
rolb
inc
lock
add
jae
cmp
add
and
pop
xchg
push
cmp
les
jmp
jge
pop
je
sbb
jno
out
cmp
jle
mov
jmp
aas
jno
mov
push
cltd
insl
outsl
mov
jl
mov
pop
je
dec
inc
mov
jne
mov
mov
cmp
adc
sub
push
loope
inc
xor
or
and
mov
cmp
push
hlt
push
or
jbe
clc
push
aaa
addl
test
add
int
push
adc
lcall
xchg
inc
jmp
push
pushf
sti
xchg
aam
mov
add
sbb
push
and
dec
lock
and
sub
push
je
mov
imul
shll
mov
mov
pusha
movsl
and
jge
loop
lock
or
insl
jne
push
hlt
mov
pusha
add
push
adc
data16
repz
ja
inc
adc
or
out
call
add
dec
in
push
arpl
mov
out
mov
sbb
in
dec
ljmp
cmp
ret
xchg
rorb
add
and
clc
push
push
pop
fdivs
cld
mov
pop
dec
sbb
mov
cmp
adc
out
xor
icebp
mov
mov
add
decl
inc
jg
xor
clc
cmp
gs
jmp
xor
clc
pop
mov
sbb
cs
ficoml
paddd
clc
mov
inc
inc
cmp
je
xchg
mov
fisubs
dec
sub
imul
fadds
inc
fwait
dec
dec
mov
dec
je
and
mov
mov
push
and
das
dec
bound
xchg
mov
incl
in
push
or
or
inc
jae
xchg
adc
lret
dec
push
sbb
lods
mov
sub
bound
mov
jmp
mov
add
dec
push
sbb
hlt
pop
xor
movl
or
dec
std
pop
mov
cli
test
adc
push
out
pop
test
cmp
cmp
je
mov
inc
sarl
or
shll
sub
inc
or
imul
orl
shll
push
add
frstor
sub
dec
movsb
jb
mov
hlt
leave
mov
pusha
xchg
lret
mov
mov
jl
fildl
add
mov
ror
add
scas
mov
rcll
shl
pop
bound
jne
jmp
inc
ds
dec
or
sub
pop
enter
jmp
das
dec
jmp
dec
scas
inc
mov
into
push
adc
out
and
cs
push
and
sub
in
xor
cmp
sbb
clc
add
jno
mov
sub
call
sub
push
roll
ret
cmpsl
cmp
or
loop
add
aam
hlt
cmp
mov
push
jne
jl
outsb
jns
and
cmp
pop
and
bound
adc
sbb
bound
mov
mov
push
mov
pop
dec
sbb
mov
and
inc
push
jmp
cmp
push
add
ja
or
inc
inc
xlat
or
add
mov
push
add
inc
fiaddl
jle
ja
or
out
sub
movl
push
and
xor
imull
pop
jmp
pusha
js
filds
aas
pop
push
sbb
movsb
jl
cltd
add
movsl
pop
enter
das
decb
leave
leave
push
nop
inc
lcall
xchg
sbb
sub
pop
pusha
leave
out
pop
jp
pop
fldz
push
xor
enter
adc
or
push
and
jmp
je
leave
cmpsl
rep
push
adc
inc
and
pop
inc
sbb
jb
mov
lock
inc
cltd
repz
lock
jo
jo
fwait
stc
push
cld
inc
add
outsb
mov
addr16
ja
rol
sbb
arpl
jmp
pop
arpl
xchg
push
jno
mov
xor
inc
cmc
lds
add
clc
push
inc
push
std
mov
int
add
mov
fs
test
mov
or
adc
pop
sbb
push
push
cmp
roll
shrb
push
dec
mov
sub
add
loope
stos
into
dec
mov
jbe
jbe
js
adc
adc
dec
jg
push
clc
add
push
and
pop
mov
xchg
and
rclb
mov
clc
xor
fsubrl
shlb
xor
insl
dec
shll
call
cmp
and
fs
into
gs
mov
clc
shll
sbb
fcomps
imul
xlat
gs
cmp
push
pusha
and
or
pop
sub
xlat
leave
mov
jmp
mov
cwtl
cmpsb
popa
or
adc
dec
lock
lcall
or
inc
and
and
dec
insb
jmp
push
jecxz
or
lock
push
popl
sbb
adc
in
push
das
adc
mov
xchg
das
iret
pop
sbb
into
jl
jo
arpl
imul
cmp
cltd
add
lcall
nop
adc
cmp
rclb
subb
and
add
add
push
push
mov
adc
sbb
pop
or
test
jbe
sbbl
js
mov
add
test
lret
sbb
dec
add
inc
inc
cmp
add
or
inc
inc
xchg
aaa
xchg
pop
cmp
dec
xchg
jg
pop
sub
mov
imul
in
lcall
add
dec
hlt
shl
fstp
out
mov
xor
rcrb
rcll
or
add
lock
rcr
mov
xchg
rcl
push
fists
aam
pusha
sbb
sbb
cmp
cmp
dec
in
fists
incl
sub
aas
xorl
loopne
adc
lahf
push
or
test
add
test
imul
sbb
movsl
es
aaa
jmp
ret
inc
test
and
xor
icebp
inc
pusha
sbb
pop
inc
fildl
add
pop
ret
inc
inc
call
pop
adc
cltd
or
pop
pop
and
shlb
jle
add
incb
adc
paddsb
dec
jo
push
sub
cld
or
neg
mov
mov
cli
add
add
jmp
cmp
stos
lock
test
pop
cmp
imul
cld
jb
outsl
ljmp
dec
lahf
mov
dec
mov
mov
dec
dec
mov
inc
lock
or
repnz
or
adc
adc
adc
jne
mov
hlt
or
pop
lret
add
dec
jp
adc
rcrb
fwait
and
add
sbb
xor
out
jmp
xor
cmp
cmp
data16
lret
sbb
mov
imul
pop
jg
add
mov
scas
in
leave
or
adc
adc
cmp
lret
or
jbe
loopne
je
lcall
nop
es
jae
out
or
dec
fdiv
jb
pop
mov
pop
jle
sbbl
adc
and
aam
clc
add
js
movsb
xchg
or
xor
cmp
fdivl
pop
ljmp
mov
inc
pusha
sub
daa
sub
add
dec
adc
dec
xor
inc
dec
mov
cmp
xor
jne
dec
cmpsl
or
loope
test
leave
and
pop
addb
enter
cs
sbb
notb
mov
xor
adc
inc
nop
sub
in
push
adc
push
pop
dec
ss
adc
cmp
push
scas
std
mov
mov
mov
and
and
mov
iret
es
xor
pusha
mov
and
or
mov
mov
xchg
fbstp
push
add
cpuid
nop
in
push
jmp
pop
pop
testb
fcomip
jae
add
mov
mov
xchg
inc
call
es
pop
adc
and
pop
inc
shlb
sbb
cmp
das
daa
xchg
sbb
sbb
cwtl
or
pop
add
pop
adc
push
add
rol
adc
mov
pop
xchg
rcr
leave
sub
std
add
dec
loopne
push
clc
add
fldl
adc
sub
and
xchg
inc
dec
add
ljmp
or
mov
fstl
rorb
test
adc
aad
movsb
mov
pop
inc
pop
pop
aas
out
push
lea
mov
or
or
sbb
push
inc
bound
lock
add
sub
mov
push
sub
sahf
add
adc
sub
je
add
iret
xor
rcrl
mov
pushf
sub
ss
inc
mov
inc
cld
fs
call
pusha
adc
lcall
lea
sub
mov
dec
xchg
dec
arpl
jb
adc
test
and
jl
jg
pop
fdivrs
add
xchg
dec
adc
hlt
aad
mov
or
adc
add
sub
adc
adc
push
cvtdq2ps
paddd
push
and
cmp
adc
xor
or
rcll
lock
mov
sub
inc
loopne
and
loop
mov
push
or
push
pop
fsubrp
lods
lret
test
lret
ret
sub
pop
pop
fnstcw
xor
stc
std
pop
cmp
push
or
cld
jns
jns
sbb
sbb
dec
jne
lcall
mov
adc
loopne
movl
cmp
es
sarb
inc
enter
push
mov
pusha
mov
orb
sbbl
jno
or
rcrl
inc
loopne
call
sbbb
or
mov
fwait
int3
jo
pop
dec
sub
fildl
or
xor
add
or
jmp
adc
sub
adc
mov
bound
movb
cmc
adc
jle
shl
and
rclb
add
sub
inc
ror
lret
add
testl
or
addl
add
sbb
imul
push
and
movsb
push
adc
call
outsl
sbb
shr
test
test
mov
movb
popf
out
mov
cmpsb
sbb
in
add
popf
and
sub
xchg
xchg
or
aas
push
push
jno
in
hlt
insl
sbb
sbb
fdivr
ficoml
push
push
and
out
xchg
mov
mov
push
push
cs
inc
inc
cld
pop
xchg
mov
iret
clc
aas
inc
ror
push
orb
mov
jmp
and
je
and
popa
and
nop
mov
push
notb
add
mov
js
push
adc
imull
or
or
ljmp
test
push
roll
cmp
push
and
push
icebp
ljmp
cld
xor
add
mov
call
rcl
clc
mov
pop
mov
or
ja
test
and
add
dec
scas
pop
xchg
outsb
dec
aam
or
add
adc
aas
inc
dec
or
add
xchg
movl
mov
out
pop
mov
push
cld
ljmp
jmp
enter
mov
subl
adcb
cmpsb
add
cmpsb
push
sbb
cmpl
inc
sti
or
in
cmp
std
jne
fsubr
fldt
add
cmp
icebp
rol
add
cmp
cli
add
pop
mov
xor
pusha
lock
inc
inc
fidivl
sarl
aas
dec
rol
xor
or
push
fidivl
push
jmp
add
imul
imul
push
std
aad
xor
inc
sbb
inc
rcrb
adc
add
es
cmp
jbe
add
in
lea
mov
cmp
ret
ret
pop
leave
cmc
repz
inc
test
leave
xor
dec
jno
add
mov
aaa
jmp
cmp
push
pop
fs
adcb
cmp
fmuls
inc
dec
shrb
mov
outsb
incl
cld
std
push
loopne
xorb
xor
pop
sbb
in
inc
or
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
push
jp,pn
inc
cmp
ds
ss
sbb
pop
jb
mov
call
or
mov
inc
dec
jne
out
cmp
test
inc
add
and
push
es
jnp
test
xor
cs
mov
inc
mov
dec
xorb
dec
loopne
adc
loop
add
mov
push
popa
or
aam
or
mov
ret
ljmp
inc
pusha
popa
or
or
aas
add
or
xchg
repnz
loope
mov
push
lcall
rorl
adc
mov
sar
test
pusha
gs
stos
xor
cwtl
dec
adc
repz
pop
and
fs
or
insb
lods
and
adc
or
or
jnp
mov
call
or
mov
mov
sbb
ss
mul
jmp
subb
sbb
es
xchg
fnsave
sbb
xchg
flds
cmc
js
mov
popf
mov
leave
cmpl
and
pop
push
loop
lret
cltd
mov
mov
mov
outsl
cmp
es
inc
dec
js
pop
push
sbb
pop
adc
mov
mov
into
gs
mov
je
int
sbb
mov
sbb
sub
lret
xchg
int3
add
sub
and
aad
mov
inc
pop
push
pop
lret
push
cwtl
sub
test
jne
inc
enter
jle
pushl
out
push
push
cmpl
sub
andl
or
sbbb
loopne
push
dec
or
sbb
push
xor
jbe
add
movsb
cmp
push
sbb
rorb
hlt
testb
add
cmpl
push
fdiv
push
xchg
ret
jo
nop
and
sub
andl
xchg
aas
sbb
dec
clc
sub
lods
xor
or
cmp
xor
je
xchg
mov
test
inc
ljmp
xor
jnp
cmp
pop
in
clc
mov
xchg
add
nop
xchg
push
sub
jle
loope
or
sbb
jo
loope
xchg
push
shrb
ds
cltd
inc
adc
sbb
jmp
push
fsubp
stos
jb
sbb
jbe
pop
sbb
jb
mov
mov
and
inc
and
push
cmp
sar
and
add
cmp
daa
mov
sbbl
mov
pop
sub
push
or
sub
out
push
daa
cmc
and
dec
push
cld
test
pop
cs
call
fstpl
and
leave
loope
addb
sub
fistpl
xor
mov
fnstcw
cs
or
mov
pop
arpl
or
fwait
rorb
mov
cmp
and
sbb
insb
inc
jp
sti
popf
aaa
add
lret
insb
push
cld
xchg
aas
inc
or
push
push
push
push
pop
movsb
xchg
dec
add
add
shlb
insb
or
jae
bound
or
or
fnstcw
outsl
add
and
test
inc
sub
pop
or
sbb
push
add
test
pop
mov
and
xor
push
push
movsb
pushf
xor
leave
popa
xchg
dec
aas
inc
sub
inc
add
orl
mov
mov
out
jmp
iret
adc
cmp
adc
push
or
and
xchg
add
sbb
nop
add
xor
inc
add
nop
add
ret
pop
cmp
mov
push
andps
xor
jmp
adc
dec
rcl
insb
fsts
jge
push
mov
adc
jmp
test
or
mov
mov
insl
jg
jno
jo
jge
orl
xor
clc
pop
pop
add
mov
lret
pop
in
cs
mov
jae
xchg
xchg
cwtl
xchg
pushf
cmpl
cmpsl
mov
push
das
pusha
imul
and
daa
test
add
jno
push
int3
dec
ja
fdivs
mov
cmp
mov
jge
xchg
push
scas
int
mov
sahf
or
pushf
loopne
mov
out
gs
mov
sub
or
sbb
lock
movsb
jp
hlt
rorb
inc
sub
andl
stos
dec
lea
out
insb
xor
das
mov
xor
sbb
gs
or
fcoml
mull
mov
mov
clc
or
in
popf
enter
shrb
pushf
popl
add
shll
call
adc
push
xchg
sub
aam
inc
nop
inc
cmp
push
stos
pop
push
push
add
jecxz
mov
xchg
sbb
jp
out
jmp
in
js
jmp
sar
test
dec
jb
and
mov
sub
sti
dec
cmp
insb
sahf
clc
popaw
or
jmp
mov
cld
mov
mov
jae
js
adc
popa
loop
test
stos
pushf
inc
cwtl
pop
xchg
aas
push
sbb
mov
push
test
aam
clc
pop
pop
nop
push
leave
or
mov
push
jl
out
dec
inc
cmp
loope
inc
pop
fsts
push
sbb
test
pop
pop
test
push
and
pop
clc
fimuls
and
pop
nop
xor
pop
push
sbbb
mov
loopne
or
pusha
mov
iret
repz
push
faddl
in
hlt
cld
add
inc
popa
jl
pop
pusha
pop
out
sbb
or
push
dec
pop
pusha
push
add
popf
add
mov
adc
adc
inc
fwait
pop
sbb
push
lock
mov
call
pop
cwtl
shr
dec
pusha
aaa
cmp
js
or
sbb
movl
add
cld
cli
dec
xor
test
mov
lret
jne
fistl
mov
dec
cmp
jge
mov
ja
inc
mov
call
movsb
popa
pop
popf
add
int3
mov
and
call
aam
and
sbbb
add
hlt
adc
lds
jg
or
jl
add
and
inc
or
mov
aas
dec
dec
sbb
hlt
mov
mov
add
daa
add
mov
and
rcrl
inc
mov
enter
sbb
or
je
jmp
prefetcht0
inc
or
cmpsl
pushl
pop
and
push
lcall
or
push
lret
and
push
jge
jmp
cmp
or
shlb
movl
add
jmp
adc
ucomiss
and
adc
lock
sbb
jbe
adc
adc
push
add
rclb
cmp
or
push
mov
lea
jge
fsubs
xor
out
xchg
xchg
sbb
jne
lds
mov
mov
testb
jle
test
ja
enter
pop
adc
je
movl
xor
push
mov
les
pusha
xor
add
and
cmpsl
mov
push
inc
and
imul
in
shl
or
sub
push
test
mov
mov
loop
pop
xchg
fistl
xchg
pop
and
or
out
or
inc
sbb
dec
loopne
adc
adc
mov
jge
xchg
jl
add
add
xchg
add
inc
or
js
dec
mov
or
sbb
lea
inc
cmp
cs
jge
mov
pop
les
cwtl
add
test
push
imul
add
or
daa
jmp
dec
adc
or
out
rorl
rcl
dec
dec
out
in
add
xchg
test
shrb
mov
fildl
xor
test
or
and
test
mov
outsb
dec
pusha
dec
orl
test
andb
aaa
xchg
add
jo
ss
je
test
push
movsb
test
dec
cmpsb
aam
xchg
imul
and
cltd
adc
jbe
push
and
push
mov
popa
and
push
frstor
cwtl
fisttpl
inc
ret
rcrl
lea
adc
pop
divl
in
xchg
sub
jge
aaa
stos
js
ds
mov
dec
xchg
jno
push
push
jle
push
push
jne
pushf
pushf
and
and
push
or
jns
int
leave
aas
push
or
push
xchg
add
push
sub
pop
xchg
loope
loopne
cli
add
add
inc
inc
jp
mov
mov
movb
and
sbb
test
xchg
rcll
ret
mov
ljmp
sbb
lock
or
dec
jmp
or
and
testb
sbb
or
adc
aas
test
pop
inc
add
jmp
dec
or
sarl
add
inc
cmpl
pop
test
and
cmp
les
xor
das
inc
jg
dec
mov
add
pop
adc
or
ja
fwait
xchg
lea
popf
in
xchg
lret
gs
fdiv
sarl
cmp
pusha
jne
sbb
dec
scas
mov
mov
into
popa
je
pop
dec
bound
inc
leave
mov
leave
test
in
or
xchg
call
cmp
aad
or
pop
stos
or
jae
dec
ljmp
mov
lea
rcrb
test
loope
jl
dec
shll
jbe
sbb
sar
pop
mov
adc
sarl
call
cmpsl
sbb
lods
or
aam
xlat
loopne
cs
fsubs
lret
pop
lds
add
loop
ljmp
leave
in
jne
scas
pushf
pop
or
add
mov
inc
sbb
push
int
nop
cli
xchg
sub
sub
inc
or
aam
pop
sbb
aas
mov
add
sub
push
imul
and
lea
ja
movsl
fs
cmpsb
xor
hlt
inc
mov
movsl
hlt
mov
and
push
or
inc
into
pusha
xor
insb
je
lock
jp
adc
test
mov
dec
loope
pusha
sub
mov
xlat
sbb
pop
and
outsb
fcmovnu
jne
or
xor
mov
jo
inc
fimuls
xor
incb
fs
or
pop
ss
adc
pop
outsl
cmc
and
dec
xor
js
pop
push
movsl
loope
xlat
je
mov
push
in
push
shl
jmp
sub
or
or
mov
cmpb
je
scas
shll
out
pop
push
or
and
mov
nop
mov
cmpsl
sub
hlt
fdivr
shr
loopne
fsubp
lock
test
je
push
jae
dec
inc
stc
pop
ljmp
imul
xchg
in
jne
das
mov
adcl
pop
fdivrl
mov
and
in
or
fdivs
xchg
lock
es
or
mov
test
and
cmp
jb
push
mov
sahf
sbb
jg
inc
inc
push
insl
shl
stos
cmp
mov
loopne
negl
nop
aam
dec
dec
or
sbb
loopne
mov
das
std
out
xor
mov
or
mov
pushl
out
aas
push
jae
in
fs
test
les
mov
aaa
inc
mov
dec
mov
pop
lds
js
xchg
xchg
or
add
push
xor
lock
push
sbb
mov
outsb
jo
push
pop
fsqrt
add
add
into
add
xor
jmp
ret
lods
cld
jno
clc
outsb
je
test
fwait
push
push
push
insl
out
popa
aas
xor
xor
loope
insb
fists
je
data16
adc
movsb
xchg
adc
push
orb
adc
bound
pushf
fldenv
jecxz
fadds
movb
stos
add
push
add
sar
jp
ret
pop
data16
mov
jne
mov
je
cli
jge
push
cmp
jle
insl
cmpl
incl
andl
xor
push
push
int3
int
or
out
mov
mov
out
call
cld
inc
xchg
push
rcll
cwtl
sti
mov
cmc
mov
sub
lea
pop
js
inc
loope
ret
loopne
popf
test
in
out
aam
and
lcall
mov
call
sbb
dec
addb
sub
inc
adcl
push
jl
pop
scas
push
outsb
mov
add
jae
addr16
mov
mov
inc
mov
adc
push
call
xor
js
dec
imul
push
lret
sub
bound
cwtl
popf
stos
repz
sbb
inc
sbb
mov
xchg
rorb
cltd
jmp
aaa
xchg
or
add
insb
and
je
and
jl
inc
mov
dec
jae
loop
addb
nop
mov
xor
jbe
cmp
jne
mov
or
sbb
dec
idiv
adc
add
pop
mov
or
jne
and
lods
jne
testl
in
or
inc
mov
pop
les
cltd
push
shll
sar
mov
cmp
xchg
clc
sahf
mov
lret
mov
dec
jmp
pop
xchg
sub
inc
cmpsb
js
sub
je
ret
or
loopne
popf
adc
mov
movb
inc
jmp
push
mov
mov
loope
xor
icebp
jmp
dec
xchg
cwtl
std
jbe
ljmp
xor
dec
mov
test
clc
xchg
add
sub
and
sub
push
test
sahf
and
xchg
mov
mov
inc
pop
lds
cltd
sub
sub
pop
rcrb
jnp
loopne
jp
jb
mov
dec
fdivrl
lea
idivb
push
int
or
mov
push
jbe
dec
xorl
jne
testl
aaa
cmp
call
in
fistps
rcll
cmp
pushf
test
dec
or
pop
jg
xchg
inc
mov
push
dec
mov
or
and
inc
enter
je
or
inc
xchg
push
cld
push
movsl
daa
pop
mov
xorl
mov
sub
movsb
cmp
lock
ds
jmp
sub
sahf
test
movsb
bound
sub
bound
lahf
cmpsl
adc
shll
imul
xorl
test
xchg
sar
or
adc
movb
or
shlb
xchg
subb
mov
xor
mov
pop
cld
sbb
stos
cwtl
add
lea
mov
pusha
out
sbb
test
loopne
mov
or
and
rolb
and
lcall
aam
mov
daa
push
mov
mov
lcall
push
das
or
jl
adc
xlat
push
xor
push
aas
out
push
fsubl
inc
xor
pop
jb
or
lea
push
inc
es
rcrb
push
lds
or
outsb
xor
cmp
or
xor
les
sbb
ret
xchg
shlb
lock
xor
push
mov
push
les
xchg
shlb
mov
int
mov
or
adc
lea
jl
cmp
jg
sub
or
icebp
mov
mov
adc
enter
mov
dec
adc
xchg
and
movsb
pusha
xor
rclb
xor
rcr
in
loopne
adc
inc
adc
sub
cld
shr
mov
imul
jne
add
push
dec
or
add
outsb
push
je
mov
xor
sbb
mov
sub
mov
loop
jbe
mov
sar
dec
cmp
jbe
push
mov
add
in
sbb
cmp
jne
subb
jae
mov
shr
lea
loop
add
shll
pop
mov
adc
sbb
lea
xor
in
push
pop
add
push
dec
imul
add
adc
lahf
or
mov
popf
pusha
jmp
clc
and
mulb
xchg
sub
jne
and
sti
add
sub
out
xchg
dec
pop
cmp
sar
mov
xchg
fimuls
and
addb
xchg
pop
pushf
jno
clc
outsl
cs
jno
mov
shr
not
and
add
dec
add
xor
shll
mov
xor
sub
pop
dec
add
xchg
imul
and
pop
fisubs
aam
fidivrs
int3
inc
or
ret
cmpsb
sarb
mov
push
shl
decb
mov
mov
mov
fisubs
call
inc
dec
or
xchg
sbb
sub
lods
dec
push
and
xchg
mov
or
mov
cmp
inc
xor
mov
jb
or
push
shl
and
push
stos
pusha
adc
add
adc
add
pop
push
shl
add
scas
jp
push
call
aas
ret
js
pop
gs
push
or
and
andl
inc
jg
ror
adc
inc
pop
pusha
add
movsb
mov
pushl
push
push
add
in
mov
clc
in
orl
rcr
mov
xchg
ss
insb
dec
adc
mov
sub
cmp
or
insl
or
mov
out
or
inc
pop
pop
cmp
pop
adc
and
shlb
and
cmp
je
daa
js
add
divb
xchg
hlt
addr16
push
jae
xchg
addl
filds
and
fisubs
adc
sbb
orl
addb
and
push
push
mov
xor
aad
jecxz
fadds
rolb
mov
imul
repnz
incb
pop
adcb
cs
or
hlt
or
sti
mov
sub
int
sbb
inc
popa
imul
clc
inc
mov
sub
shr
sub
dec
clc
incl
mov
adc
adc
fnstsw
daa
cwtl
inc
cld
lock
call
aas
push
ja
dec
jne
je
clc
add
pushf
mov
xchg
loopne
hlt
jb
adc
push
mov
sahf
inc
pop
mov
negl
inc
inc
mov
lock
xor
scas
decb
jne
or
lds
not
and
ret
jne
add
lahf
or
aaa
inc
inc
out
in
xlat
sub
movsb
stc
add
mov
dec
cld
push
dec
cmp
loopne
les
clc
xchg
adc
movsb
push
pushf
jle
cli
les
shrb
mov
cmp
sub
add
rcl
gs
mov
int3
push
pop
xchg
cmpsb
add
sub
mov
popf
lcall
mov
xchg
lret
pop
add
cmp
nop
dec
or
mov
jns
sub
push
rcll
add
ljmp
cltd
adc
xor
fdivs
outsl
push
fstpl
lea
mov
jg
or
mov
lcall
pop
shlb
sbb
es
movsb
iret
js
and
inc
mov
js
test
test
imul
scas
es
insb
xor
dec
push
cmp
data16
clc
jl
insl
inc
or
add
sub
add
cld
push
sar
dec
jp
dec
dec
mov
dec
cmpsb
mov
adc
cmp
xor
sbb
adc
cmp
sbb
xchg
into
je
fisttps
mov
dec
push
add
fnstenv
dec
sbb
fcmovb
ficoms
add
mov
loope
or
icebp
mov
xchg
nop
or
ret
jbe
mov
lock
push
cmp
lods
decb
mov
mov
imul
lods
rorb
add
mov
popa
xlat
xor
dec
insb
stos
add
xchg
cmp
pop
imul
jge
inc
shr
cmp
push
jo
test
or
orb
pop
rolb
push
nop
cmp
and
decb
xlat
push
ret
adc
imul
test
call
sbb
cwtl
inc
jne
xchg
out
aad
jnp
add
xor
je
mov
aaa
arpl
or
test
lock
jno
cmp
xor
mov
or
rcrl
jo
pushl
sbb
adc
cli
and
loope
sbb
mov
dec
pop
iret
jne
mov
jno
mov
xchg
adcb
ret
fisubrl
mov
repz
mov
and
jne
mov
out
clc
test
and
leave
inc
test
inc
push
push
and
mov
sub
icebp
sbb
fdivrl
je
cmp
add
xchg
and
push
cmp
push
pop
or
out
and
mov
decb
jne
pop
repnz
test
jmp
dec
mov
push
pusha
dec
bound
dec
push
and
jne
sarl
adc
jp
imul
mov
mov
js
or
pop
xor
rclb
sbb
cmp
inc
aas
jge
push
ret
out
or
dec
hlt
pop
adc
jl
push
inc
push
inc
or
push
mov
lock
out
or
nop
test
push
je
sbb
iret
push
push
add
scas
and
lods
pop
or
jns
ds
sbb
into
xlat
sarb
ds
dec
pop
hlt
lea
leave
ja
hlt
repnz
sbb
push
inc
rcrb
ret
ret
pop
jb
or
xorl
mov
add
jp
inc
pop
jne
and
push
inc
test
loopne
xor
and
sti
or
daa
cmc
mov
pusha
and
jp
mov
rolb
enter
add
dec
jb
inc
mov
and
lcall
pop
adc
stc
cmp
sar
push
je
push
orl
xchg
roll
inc
inc
cmp
cmp
add
cmp
push
mov
xor
pop
sbb
sbb
ja
adc
or
cmp
dec
fcoms
iret
sbb
adc
xchg
jl
icebp
sub
dec
push
loopne
mov
xchg
inc
loope
sbb
push
cmpsb
shll
push
dec
icebp
cmp
and
mov
sti
ficompl
fsubrs
mov
shll
pop
dec
xchg
ficoml
push
call
imul
je
out
pop
mov
push
push
inc
xor
add
jo
pop
sbb
sbb
push
iret
mov
push
dec
inc
js
push
pusha
xorb
leave
ret
filds
je
pop
jl
daa
jmp
xchg
inc
adc
and
les
addl
push
jns
mov
ljmp
xor
negb
add
xchg
adc
or
xchg
adc
xchg
pop
dec
ja
stos
adcb
xor
cmpl
inc
jle
pop
add
lahf
js
popf
call
adc
mov
add
inc
xchg
jmp
adc
jge
sbb
call
add
and
test
or
int3
test
lret
lods
in
je
cmp
cmpsl
xor
mov
mov
mov
test
xchg
imul
inc
jno
clc
test
enter
or
sub
sub
adc
adc
jo
xchg
lret
jge
out
sbb
inc
movsl
add
add
push
inc
xchg
sub
ss
pop
add
sbb
lret
sbb
xchg
arpl
add
sub
rcrl
ja
leave
rorb
ss
or
jge
adcl
fistps
in
push
push
icebp
push
inc
mov
cmp
jp
xchg
add
or
pop
ficomps
mov
mov
enter
adc
mov
add
xor
push
mov
or
enter
loope
dec
jae
int3
les
xchg
data16
out
jae
ret
jne
lcall
jns,pn
jns
leave
pop
xor
jb
sub
add
sbb
cmovo
lock
sar
sub
push
mov
lret
call
nop
dec
sub
enter
sbb
jnp
call
jnp
jnp
jnp
dec
sub
call
insl
and
add
loopne
dec
outsl
lahf
xorl
pusha
enter
lahf
mov
bound
add
mov
mov
jp
mov
cmp
pop
mov
xor
rclb
mov
leave
dec
in
shr
and
mov
pop
in
inc
js
push
hlt
xchg
lahf
push
dec
leave
test
in
sbb
push
test
mov
orb
call
in
scas
in
and
ret
inc
xchg
les
mov
sarb
loop
in
enter
lahf
les
inc
and
in
sub
pushf
sbb
test
in
push
dec
popa
mov
xchg
test
ret
adc
data16
cmp
popa
inc
adc
cmc
or
xor
or
xor
mov
addl
repz
fidivrs
test
xchg
scas
jno
lea
out
sub
imul
sub
lea
sub
push
stc
lea
xor
or
les
push
push
jmp
movnti
jae
jge
xchg
ret
inc
or
xchg
pop
sarb
je
lock
cmc
sbb
xor
hlt
adc
push
add
sbb
dec
imul
pusha
push
add
push
lods
inc
xor
mov
or
adc
rcrb
add
jnp
and
mov
adc
push
adc
test
jg
dec
adc
lds
jl
and
mov
cmp
in
data16
jne
push
cmp
and
mov
lea
pushf
cmp
sbb
add
sbb
in
add
xor
xchg
insb
xor
mov
cmp
ret
xchg
sbb
add
mov
push
add
add
mov
mov
cmp
add
dec
add
mov
testb
mov
jbe
lock
call
pop
rclb
jmp
jo
add
jne
orb
add
hlt
or
shr
fnsave
push
ds
adc
mov
inc
mov
dec
cmp
rorb
adc
xor
pusha
xor
int3
pop
and
faddl
push
or
shll
enter
pop
mov
xor
fstpt
sub
add
dec
pop
dec
xor
stos
mov
clc
add
cli
sti
adc
dec
sar
std
dec
inc
push
fmuls
out
xor
adc
push
sbb
mov
jg
adc
cmpsb
inc
lret
je
adc
imul
add
in
shll
sub
icebp
mov
sbb
dec
mov
ljmp
movsl
xchg
je
push
or
xor
adcb
fcomps
fisubrl
sbb
fstpl
push
fldl
or
fldl
or
sarb
push
xor
test
sub
in
mov
leave
outsb
mov
cltd
jo
push
dec
push
fidivs
xor
cmp
std
push
cs
das
cmp
sub
je
dec
je
sbb
cmpsb
add
and
sbb
sti
mov
stos
int3
fnstenv
lcall
mov
ljmp
cmp
imul
in
pop
fldcw
sub
adc
add
sub
fwait
add
mov
jno
mov
das
pop
in
mov
push
in
jns,pn
hlt
lock
adc
sub
in
pop
push
call
push
inc
ljmp
xchg
mov
or
and
or
pusha
inc
lock
stos
repz
repz
mov
iret
pop
iret
repz
fildl
lock
jle
add
andl
ret
add
in
sahf
fnstcw
ret
in
push
dec
jl
inc
or
push
fdivs
flds
inc
sub
pop
xorb
mov
in
sbb
push
jle
sbb
xorb
inc
in
outsl
cwtl
fmuls
ljmp
sub
cmp
fs
faddl
out
lcall
or
aas
push
fldcw
shr
cli
clc
push
fmull
xchg
jp
cmp
aaa
mov
ret
sub
push
push
adcl
inc
adc
testb
insl
or
and
push
add
dec
ret
add
mov
sbb
or
add
sub
pushf
fwait
adc
shll
out
test
cltd
gs
out
xchg
lret
xor
mov
enter
mov
outsl
mov
or
mov
mov
js
xlat
xor
or
mov
subb
lea
mov
mov
mov
mov
pop
cs
xchg
sbb
add
icebp
mov
inc
into
jne
pop
pop
mov
pop
mov
fcoml
jmp
incb
sub
or
mov
jo
xchg
repnz
jne
gs
test
loopne
sar
push
jg
std
lea
testb
mov
pop
add
fstpt
fsts
out
rcrb
mov
loopne
mov
fiaddl
mov
rcrl
enter
dec
or
adc
shlb
jae
fcomps
ror
in
std
lods
jbe
and
mov
xchg
or
jmp
cs
shl
enter
mov
push
xchg
int3
pop
cmpsl
pop
or
add
xlat
push
pop
cs
xor
xorb
popf
lock
iret
mov
cmp
mov
clc
fcompl
stc
or
pop
in
mov
nop
sbb
ret
outsb
pop
xchg
lret
call
mov
inc
mov
push
or
inc
pop
cmpsb
pop
sub
lahf
sar
mov
movsl
dec
cmp
inc
sub
pop
aad
pop
jmp
add
jne
and
fimuls
add
jne
inc
jne
pop
lret
cmp
inc
xor
cmpsb
inc
scas
aad
push
imul
int
lds
push
lcall
loopne
test
daa
push
lods
xor
ret
xor
test
in
sub
mov
jg
mov
or
jno
out
inc
push
pop
loope
stc
or
add
popf
addb
mov
shll
xor
xchg
mov
nop
push
sti
jmp
das
into
push
inc
cmp
cmp
jg
popf
in
mov
mov
testl
cwtl
add
add
pop
es
cwtl
xchg
stc
mov
jnp
mov
shrb
jo
adc
mov
fistl
sub
or
mull
fcmovbe
jns
daa
mov
push
mov
lds
mov
push
inc
cld
jecxz
hlt
cmp
dec
or
out
mov
jge
cs
enter
mov
and
imul
mov
mov
pop
mov
add
into
je
divl
or
fcompl
mov
and
lds
leave
cltd
or
in
cltd
repnz
push
sti
jecxz
xor
adc
mov
outsl
xor
lock
aaa
addr16
lret
subl
fsubp
fdivr
adc
jbe
ret
or
ljmp
test
mov
shlb
xchg
rorb
out
xchg
imul
call
mov
jecxz
repnz
add
mov
inc
xchg
daa
and
push
mov
xchg
xor
daa
push
dec
mov
xchg
lock
popf
mov
nop
std
lds
sub
gs
pop
mov
and
push
imul
push
test
push
push
orb
cmpl
cmp
hlt
mov
rolb
push
xchg
and
jb
icebp
shll
and
std
out
and
inc
add
movb
push
xchg
aad
test
jae
mov
cmpsb
mov
dec
xor
roll
pop
xchg
xor
push
lcall
addr16
mov
clc
cmp
cmp
fs
and
inc
stc
call
std
and
inc
xor
shrl
test
pop
test
leave
and
mov
jne
ss
dec
daa
in
mov
jbe
jp
popa
dec
push
fdivrp
xor
jp
dec
ds
cs
and
das
in
push
test
sub
jmp
and
cmpsl
movsb
dec
ss
stos
cmc
rcrl
pop
lock
lods
cmpsl
mov
sub
cmc
dec
sbb
jmp
jo
sbb
fsubrp
mov
jge
int3
cmp
cmc
loope
or
pop
cmpsl
test
xchg
pop
fadds
enter
repnz
lods
jns
lock
dec
or
inc
cwtl
cmpl
sbb
pop
bound
or
cmp
loopne
sub
inc
push
inc
add
jne
cmp
xchg
sbb
cmovge
or
aad
jne
fdivr
das
pusha
dec
jl
push
dec
pop
jno
mov
xchg
inc
dec
mov
std
std
std
adcb
sahf
shll
aaa
fmull
addb
nop
and
dec
sti
cltd
inc
add
cwtl
pop
addr16
das
andl
xchg
adcl
nop
sbb
xor
cmp
es
and
cmp
xor
xor
adc
sub
cmp
or
inc
or
mov
or
jo
mov
sub
push
jecxz
pop
pop
inc
lods
add
ljmp
sub
lock
pushf
shr
sbb
or
stos
adc
push
pop
pop
sbb
xor
add
push
test
jb
sbb
roll
jns
scas
movsl
call
jecxz
call
push
pop
leave
and
pushf
shll
and
test
adc
and
pushf
dec
push
pushf
rcrl
xor
les
imulb
lret
or
mov
mov
test
sbbl
xchg
push
cmpsb
push
outsl
popa
pushf
inc
leave
and
mov
xchg
int
lods
test
fwait
adc
es
dec
sbb
xor
popa
fwait
inc
pop
pop
push
sub
test
fwait
inc
cmc
loope
mov
push
jecxz
movsb
fwait
mov
sbb
test
mov
mov
decb
cld
lcall
pop
inc
lea
dec
and
and
pop
pushf
pop
repz
nop
lret
push
pop
mov
pushf
sbb
icebp
inc
and
mov
dec
xchg
loopne
test
xchg
jb
aaa
fs
pushf
movsb
push
mov
in
movsb
imul
dec
xor
push
es
pop
inc
lcall
movsb
bound
inc
xchg
push
aas
dec
add
adc
test
adc
leave
test
jb
dec
mov
pop
pushf
pushf
nop
and
jb
nop
pushf
jb
leave
adc
lods
lods
test
xchg
enter
adc
int
push
outsb
push
adc
pop
je
stc
dec
inc
aam
lidtl
dec
movsl
inc
add
mov
out
or
movsb
inc
lret
mov
mov
push
pop
rcl
rclb
xchg
or
add
push
mov
xchg
fmul
pop
mov
jp
popf
dec
jne
or
rcll
mov
add
xor
rcrb
mov
imul
or
dec
add
in
mov
pop
mov
scas
rolb
push
or
push
inc
add
jne
push
int
sarb
fsubrs
dec
jno
and
jb
xchg
xchg
loopne
nop
cmc
test
add
into
inc
cmpsb
testl
movsb
sbb
inc
mov
mov
push
pop
fdivrs
outsl
aas
mov
decl
je
mov
xor
bound
ret
es
cmpsl
mov
sbb
add
adc
jle
xchg
and
jle
popa
add
std
mov
add
les
mov
push
mov
cmp
stos
nop
shll
fucomip
stos
bound
bound
mov
sbb
imul
and
ret
pop
les
loop
dec
dec
cld
lods
or
sub
scas
dec
scas
and
add
or
rcrb
es
test
cmpsb
gs
sbb
dec
jecxz
xor
orb
jmp
cmp
xchg
add
lahf
and
outsl
cwtl
lahf
or
call
adc
inc
sbb
pop
mov
inc
jns,pt
push
add
je
hlt
daa
clc
inc
push
adc
pushl
testl
cmpsb
jmp
ss
orl
sbb
test
test
cmc
les
xor
cs
popa
and
andb
jae
repnz
inc
jg
and
push
add
imul
add
fistpll
jmp
loope
adc
stc
and
or
clc
movb
add
push
adc
push
or
mov
push
shrl
les
inc
subb
push
and
test
adcb
inc
jmp
mov
add
mov
sbbl
stc
inc
or
out
stos
add
mov
and
sbb
call
lcall
dec
push
test
cmp
call
mov
xor
xchg
ja
push
push
rcll
push
fdivl
or
rcrl
sub
fisttpll
xchg
cmc
sbb
data16
shlb
dec
fs
addl
xor
and
inc
cmp
push
sahf
sub
mov
inc
test
jle
fdivl
sub
xchg
xchg
call
cmp
sub
lea
and
leave
wrmsr
xor
sbb
mov
lods
push
fmuls
push
loopne
jae
loope
sub
dec
in
sbb
dec
test
lea
mov
cmp
ljmp
test
mov
dec
bound
and
mov
ja
cmp
roll
pop
out
xor
lods
add
pop
jnp
mov
mov
and
test
or
or
push
cli
sbb
push
inc
dec
dec
or
dec
call
pop
or
sti
jb
inc
jae
adc
cmp
adc
int3
push
inc
push
push
adc
arpl
inc
xor
adcl
daa
push
xor
popf
ds
mov
dec
and
dec
cmp
add
or
jge
pop
sbb
pop
jl
pop
mov
push
inc
rorl
adcb
lock
pop
inc
mov
rclb
xchg
or
dec
rcrl
rol
icebp
ret
add
sti
add
pop
lods
js
add
addr16
dec
pusha
pop
inc
and
inc
movsb
adc
dec
cli
add
mov
ja
insb
or
xlat
jge
imul
push
xchg
out
jle
pop
andl
cmp
outsl
in
mov
sarl
call
cmp
fnstenv
inc
sbbl
pop
xchg
inc
scas
or
dec
cmp
mov
test
cmp
and
cmp
xchg
push
mov
fs
rorl
jmp
leave
push
mov
les
int3
cmp
bound
mov
mov
testl
fsts
push
add
add
divb
mov
in
hlt
add
test
addb
cmp
leave
xlat
out
inc
sub
and
dec
es
mov
sub
sbbb
sti
or
nop
ret
ss
sti
sbb
je
push
or
push
push
es
add
test
mov
pusha
test
ja
stos
pop
mov
add
insl
es
xchg
and
or
je
inc
or
aas
scas
sub
sbb
jmp
fstl
xchg
push
push
mov
mov
push
or
push
sarb
sbb
fcompl
mov
inc
inc
or
fdivrs
push
pop
sub
push
in
or
lds
dec
add
xor
dec
push
int3
je
js
dec
mov
mov
jne,pn
sbb
inc
mov
cs
sub
adc
fstpl
jge
mov
mov
pop
mov
push
mov
outsl
mov
daa
mov
mov
fs
push
dec
jmp
push
adc
xchg
js
das
xchg
add
xor
sub
arpl
cmp
cmp
pusha
and
dec
mov
sub
mov
xor
jmp
pop
pop
push
or
fs
orl
pop
pop
es
push
inc
sub
mov
push
popa
ja
pop
jp
ret
add
cmp
inc
mov
push
sbb
clc
mov
or
je
pop
iret
dec
push
adc
fldpi
or
and
loop
loop
shl
push
adc
inc
add
divl
lret
loop
xor
insb
and
add
loope
mov
sbb
or
sub
and
and
adc
insb
inc
clc
bound
fidivs
cmpsb
out
cmp
je
dec
pop
adc
out
and
fdivrl
cmp
xchg
pop
addr16
outsb
sbb
mov
adc
mov
mov
inc
sbb
cwtl
out
or
mov
sbb
aad
sbb
mov
movsb
popa
dec
xorb
cmp
and
jb
hlt
cmp
and
cmp
ss
jne
and
aas
fwait
and
mov
and
insl
cmp
dec
inc
orl
xor
sub
and
jo
sar
add
mov
imul
lock
fidivrl
pop
aaa
mov
inc
pusha
mov
or
fildl
mov
mov
cmp
jbe
push
mov
cmpsb
sub
addr16
jge
push
sub
in
popf
rorb
cmpl
inc
popa
mov
ds
mov
sbb
xchg
jno
dec
addb
add
je
hlt
mov
adc
push
dec
insb
pop
pop
ret
pop
mov
dec
add
inc
in
push
lds
out
mov
inc
rcll
add
movsb
sbb
mov
in
fdivs
push
lock
mov
inc
and
cmp
push
shrb
gs
or
mov
push
fs
lock
cmp
push
hlt
xor
mov
mov
xor
mov
or
sbb
outsl
or
xchg
add
lret
loop
xor
pop
ja
cmp
scas
adc
ss
jmp
xor
and
psrad
inc
inc
adc
test
incl
xchg
lods
enter
add
pop
es
jge
pop
int
or
cwtl
xor
jg
test
es
enter
mov
popa
pop
shr
push
test
stc
add
sbb
js
ret
xchg
inc
or
cmp
inc
repnz
loop
and
test
or
mov
jbe
int3
into
inc
add
xor
inc
pop
scas
jae
fisubrs
popa
adc
fcmovnb
addl
cwtl
ja
rorl
mov
add
inc
mov
mov
mov
lods
lds
and
dec
sbb
fiaddl
test
stos
mov
dec
cli
add
ret
dec
adc
xchg
ljmp
jbe
ss
push
sti
les
subb
add
push
push
orl
lods
scas
clc
or
and
jo
jle
movsb
jl
mov
inc
mov
sbb
adc
inc
mov
in
mov
js
jo
and
popf
adc
xchg
fidivs
scas
cmp
sahf
cmp
dec
inc
inc
or
jne
repnz
hlt
in
imul
push
sar
add
mov
dec
jo
and
pop
sub
inc
mov
jno
aaa
out
adc
aam
lret
scas
pop
mov
push
jge
or
pusha
xchg
ret
jmp
push
nop
fmuls
sbb
addb
out
cmp
xor
cmc
into
sbb
out
int
sarb
lret
xor
lock
insb
fwait
xchg
jbe
xor
icebp
push
push
dec
mov
pushf
xchg
push
or
push
pop
push
dec
push
sbb
jl
mov
pop
lock
add
insl
mov
or
or
push
and
push
cmp
inc
mov
pop
mov
js
into
mov
sbbb
push
add
cmp
scas
or
mov
mov
pop
pop
cmp
jb
mov
push
aas
xor
sbb
and
repnz
dec
andb
inc
xadd
daa
adc
adc
fldt
sar
sarb
jg
popf
mov
lock
adc
sub
insl
clc
stc
add
shll
push
push
mov
push
add
fmuls
lods
inc
push
pusha
push
scas
cmp
cld
incl
pop
mov
add
out
add
insb
cmpsl
push
sahf
inc
add
imul
cmp
push
adc
leave
lcall
mov
loopne
xchg
fs
ds
ret
xor
push
xorb
test
adc
add
ret
cmpsb
pop
rorb
jne
or
pop
cmp
aas
push
aaa
stos
insb
pop
cli
xor
ds
mov
jne
shr
mov
call
arpl
push
je
and
mov
add
mov
jbe
scas
pop
notb
movsb
adc
sub
add
sub
out
mov
xor
adc
test
not
mov
push
xlat
cs
push
xor
movsb
dec
aas
lock
rcrb
dec
jns
mov
sti
sti
add
jmp
test
adc
rcr
hlt
loopne
or
xor
not
push
sarl
add
enter
and
add
adc
jno
enter
pop
xchg
dec
add
ret
sub
loop
push
or
add
out
sarb
jg
jg
adc
and
inc
push
aad
rorb
lea
xor
xchg
call
or
sbb
loopne
sub
add
push
cmp
roll
scas
nop
cmp
je
sub
shll
loope
jo
addb
push
push
cmpsb
jge
jecxz
push
mov
rep
ss
neg
lods
shlb
lock
xor
add
xchg
scas
or
aad
rorb
xor
sub
pushf
push
dec
ds
fs
fwait
in
mov
loop
and
roll
imul
mov
lods
aad
and
push
mov
test
mov
pusha
pop
js
cltd
jecxz
mov
in
stos
test
add
xorb
add
ret
cld
xchg
push
lahf
sti
inc
leave
add
push
push
jae
lock
dec
popf
xor
add
xor
push
adc
cmc
mov
movl
inc
adc
insb
ja
cs
jae
loopne
pop
je
xor
sbb
sahf
lret
adc
adc
xchg
call
and
adc
mov
push
or
fnclex
mov
or
aam
shl
or
adc
jge
push
and
dec
adc
push
and
xor
push
pop
ds
out
outsl
inc
or
jbe
jle
pushf
addr16
push
test
mov
mov
sbb
mov
sub
shrb
hlt
adcl
jb
dec
call
mov
jo
cwtl
movsb
or
inc
sarb
dec
test
mov
in
and
call
data16
jg
sub
sahf
mov
add
sub
push
add
sub
fs
xor
in
lock
rep
add
data16
mov
jne
inc
adc
adc
ss
and
push
inc
imul
mov
push
jmp
pop
notl
jb
jle
push
sarb
pop
add
jno
sub
ss
sbb
adcb
or
xchg
mov
jb
outsb
xchg
lock
dec
ret
cmp
lahf
mov
xchg
and
lcall
and
shll
aam
fsubrl
dec
fsub
push
imull
xchg
pop
pop
lods
xchg
orb
movsl
xor
mov
fsubrs
and
pop
dec
mov
repz
cld
xchg
iretw
decl
dec
sbb
mov
push
cmp
push
jb
xor
xor
jnp
push
loope
push
fidivrl
dec
push
xor
inc
jbe
movsb
sub
mov
fdivrs
push
mov
jmp
aas
add
or
ss
jmp
sub
and
loope
push
mov
prefetch
or
mov
imul
fadds
mov
in
aam
sarb
ret
and
mov
sub
or
fcomp
and
das
cltd
fcoms
test
pop
adc
int3
jno
add
cmp
jne
icebp
mov
jmp
adc
lock
outsl
jo
hlt
fisttpll
adc
inc
add
or
sbb
xor
notb
fsubrl
mov
mov
adc
push
xor
aaa
int
aam
int3
adc
and
or
add
cli
sbbl
xchg
clc
pop
dec
xor
cmp
inc
jmp
bound
sbb
jbe
jne
pop
mov
add
or
insl
and
push
cmp
enter
dec
sub
rcr
fsubs
shrb
inc
pand
pop
adc
mov
mov
xchg
testb
mov
adc
xchg
arpl
xchg
push
idivb
xor
rcr
fidivs
cld
and
add
cmpsl
ja
imul
mov
sahf
or
enter
sbb
or
sub
inc
pop
adc
mov
mov
nop
mov
push
nop
movb
mov
rol
add
adc
mov
rcll
addb
xchg
pop
cmpsb
aam
or
aas
sbb
add
adc
jmp
xchg
push
mov
shll
add
pop
or
popf
sbb
cmc
xor
or
test
push
pusha
gs
fldt
sub
ljmp
loopne
cmpsb
jp
mov
sub
andl
sub
mov
jle
sbb
int3
push
pusha
lahf
popa
add
add
and
insb
jae
fimull
sbb
inc
aaa
push
clc
cmp
je
pusha
jle
cmp
or
sbb
add
mov
fs
sbb
imul
lret
pushl
enter
and
xchg
pop
dec
mov
sbb
and
addl
cmp
rcll
push
in
xchg
popa
adc
dec
cmp
jne
cs
cmp
dec
movsl
push
and
and
inc
sbb
pop
insb
cmpsb
movsb
mov
add
sbbb
dec
xorb
movsb
test
sub
and
xor
mov
cld
sub
cltd
jg
cmpb
mov
mov
inc
or
lret
xor
cmpsb
in
iret
inc
xchg
les
pushf
add
push
jl
pop
lock
test
xor
or
add
add
dec
mov
sti
jg
aas
xchg
pop
jle
mov
sbb
pushf
sbb
jbe
jle
les
add
and
inc
je
and
cmpsb
jno
push
adc
cltd
mov
nop
push
pop
add
cmpsb
aas
xor
pop
jl
test
mov
push
sub
sub
cs
je
fstl
scas
cmpsb
call
fneni(8087
pusha
lcall
push
loope
cli
add
fyl2x
mov
gs
add
inc
inc
sbb
popa
lods
jp
mov
fsubrs
sbb
xchg
mov
aaa
mov
or
sbb
filds
sbb
outsl
mov
xor
push
mov
inc
mov
push
dec
gs
pop
cmp
jle
dec
cmpsb
iret
and
pop
adc
inc
or
sbb
and
into
dec
je
cs
xchg
rorb
js
cmp
push
xchg
inc
dec
rclb
add
mov
xchg
mov
subl
xor
cmp
into
cmpsl
and
and
ljmp
scas
rcrb
rolb
add
inc
cmpl
inc
dec
les
movsl
and
or
xor
movsb
push
aad
add
aad
ret
inc
leave
jl
loop
mov
adc
movb
mov
movsb
pop
adc
or
test
and
mov
mov
imul
test
sbb
inc
les
push
cwtl
pusha
ja
cwtl
fcmovnbe
mov
lods
and
push
imul
ja
mov
nop
into
push
push
adc
mov
std
inc
rcr
inc
sbb
pop
je
adc
push
addl
inc
loopne
adc
stc
cmc
mov
mov
jmp
cmp
out
pop
jnp
or
je
xchg
je
mov
arpl
fs
sbb
jmp
outsl
les
push
sub
addl
and
or
add
leave
adc
movsl
dec
push
repnz
enter
repnz
sub
in
pop
adc
adc
ficoms
push
pop
leave
leave
mov
jns
push
add
and
push
or
sbb
rolb
cmp
and
loopne
xchg
xchg
ficompl
sub
jo
add
out
adc
and
xlat
shll
leave
push
icebp
enter
mov
cli
inc
mov
arpl
mov
or
add
mov
add
filds
stc
sbb
dec
push
sbb
pop
cmc
and
lods
add
or
lcall
sub
dec
ret
lods
std
jb
xor
mov
cmp
jae
push
cmp
jl
rorb
mov
inc
lods
dec
adc
add
add
sub
jns
out
xchg
adc
mulb
sub
mov
movsl
mov
repz
ret
ljmp
popa
jb
movsl
movsb
adc
lret
ret
add
push
mov
mov
dec
dec
push
add
test
inc
enter
fwait
leave
mov
icebp
cmp
scas
mov
xor
mov
sbb
adc
cmp
or
ret
out
cwtl
js
lods
mov
fs
shll
sbb
stos
push
xchg
xlat
jns
mov
es
frstpm(287
add
ss
rcll
jl
push
out
gs
adc
imul
pop
mov
jl
add
xchg
out
push
addr16
inc
jne
loope
push
sub
inc
and
add
das
subl
sub
inc
mov
inc
push
fs
inc
sbb
pop
mov
push
jle
lock
add
xchg
push
mov
mov
push
lock
ljmp
rorb
sbb
pop
jo
jl
js
mov
hlt
outsb
adcb
aam
mov
cmp
adc
in
pusha
jbe
xor
and
outsl
loopne
aaa
test
sbb
loop
sbb
daa
dec
jg
adc
orl
mov
hlt
push
sarb
and
aad
jecxz
mov
and
insb
test
lods
nop
das
rol
inc
or
sub
and
jb
mov
pop
test
addb
and
imull
repnz
inc
add
call
or
test
insb
and
rorb
addb
aad
or
mov
push
mov
add
cmc
adc
add
inc
stos
imul
mov
rcrl
jg
add
adc
xlat
je
cmp
and
cmp
jb
popa
cmp
testb
shlb
data16
adc
sub
je
jge
push
in
mov
inc
movb
adc
ret
mov
divb
cmp
jbe
mov
push
or
adc
in
insl
adc
mov
push
shlb
call
and
aaa
out
pop
ret
in
cmp
les
shrb
and
xor
push
insl
out
cld
inc
push
bound
jmp
shrl
push
sub
insl
loope
pop
push
bound
inc
push
ljmp
inc
outsb
mov
or
adc
push
lock
sbb
cs
fidivrs
shr
inc
push
pop
push
push
inc
shr
rcr
shr
ror
jnp
call
div
pop
dec
adc
inc
idivl
pop
jb
cmp
or
cmp
or
xor
icebp
repz
and
adc
or
fcmove
inc
inc
xchg
lret
lret
or
es
out
mov
or
ret
adc
mov
xor
dec
in
jb
popa
and
jno
pop
lret
add
les
mov
dec
je
pop
inc
xchg
lods
sysret
adc
or
pop
push
bound
dec
cmova
dec
sbb
push
dec
add
mov
and
sarb
js
mov
call
add
test
das
jecxz
out
jge
mov
loop
sub
test
ret
and
pop
adc
pop
enter
sbb
lea
xchg
mov
sbb
adc
adc
mov
sub
adc
cwtl
mov
add
adc
rolb
add
sub
imul
into
sarb
jnp
dec
cs
cld
cwtl
clc
testb
push
pop
mov
sbb
inc
pop
push
mov
loop
xchg
mov
adc
lods
cmp
push
test
push
jge
andl
add
pop
sub
sbb
add
add
sahf
je
xchg
sti
stos
and
lea
lea
sub
mov
mov
jnp
xchg
lcall
rorl
pop
push
sbb
mov
popl
adc
popa
push
test
ljmp
inc
loop
dec
enter
rorl
shrb
and
outsb
js
add
inc
inc
cmp
add
cmpsb
sub
scas
inc
dec
and
pusha
add
adcb
mov
push
mul
add
push
mov
clc
sbb
cmc
rolb
mov
rcrl
ljmp
push
inc
cmp
xor
out
pop
sub
call
imul
lret
sub
imul
push
or
add
push
sub
inc
outsl
push
add
xor
or
mov
sbb
sbb
jb
and
sub
jo
jb
xor
cmp
shlb
inc
inc
pmulhuw
in
dec
dec
push
push
cmp
mov
pusha
cmp
cmp
push
or
cmp
and
mov
sbb
test
mov
leave
and
mov
xchg
test
sub
mov
rclb
je
cmp
out
cmp
and
pop
in
bound
push
mov
or
mov
imul
adc
sbb
int
adc
sbb
clc
and
and
xor
and
std
mov
sti
dec
and
pop
out
push
pop
mov
jo
add
es
ret
add
rclb
pop
stos
pop
add
dec
jne
out
dec
mov
outsb
nop
or
jb
mov
mov
mov
fldcw
add
imul
data16
add
adc
cmp
addl
loopne
dec
sahf
and
aam
test
or
lock
add
mov
sbb
cmp
xor
pop
xor
push
pop
adc
pop
fldcw
mov
jns
xor
sbb
in
dec
inc
pusha
jecxz
push
fwait
cmp
fcomps
pop
inc
rcrb
push
movb
ss
imul
faddl
xchg
jo
push
xor
mov
sarl
outsl
inc
and
or
fmuls
mov
mov
jbe
pop
push
pop
int3
ficompl
and
loopne
cwtl
out
pop
or
lock
push
cltd
rcrb
cmpsb
aam
add
or
rcrl
cmp
pushf
fst
pop
das
inc
lret
sub
enter
and
xlat
and
xor
jle
or
addb
mov
add
lret
xorb
stos
addr16
mov
ret
cmp
and
adc
in
xchg
add
rorb
add
and
pop
and
pop
pushf
or
xchg
loopne
mov
std
inc
and
jle
add
jl
adc
or
adc
dec
js
lcall
adc
cmp
mov
loopne
cmp
mov
dec
add
add
and
imul
into
call
addl
fwait
loopne
and
dec
cmp
cld
xchg
push
loopne
pop
push
loope
adc
adc
pop
cmp
or
rcr
outsl
pushl
push
mov
push
movsl
add
das
jmp
enter
sbb
insl
xor
dec
and
xor
loope
pusha
shrl
push
fs
mov
pop
mov
adc
adc
notb
xor
outsb
adc
dec
or
sbb
loope
lcall
pop
mov
int
and
aad
jb
push
add
xchg
in
into
ja
cmp
cmp
xor
and
mov
jecxz
add
adc
push
push
iret
sub
push
lea
popa
add
pop
and
fisttpl
jle
sar
mov
or
test
pusha
xor
xchg
inc
bnd
and
sbb
or
push
adc
rclb
in
lods
mov
fadd
dec
popf
add
aad
or
nop
jmp
inc
insb
inc
dec
ljmp
add
pop
mov
rep
ds
pusha
dec
inc
das
cmpl
js
fwait
xor
xor
ret
jnp
addl
dec
mov
ficompl
mov
loopne
mov
or
push
fstp
stc
or
lods
mov
push
incl
adc
push
hlt
mov
lods
inc
rorb
test
jmp
ljmp
mov
fdivl
cmp
fsubs
test
lret
loope
loopne
xchg
xchg
std
xor
push
clc
adc
sbb
inc
lea
mov
push
inc
add
sub
lea
shlb
lods
jnp
rorb
sarl
cmp
push
test
add
popf
dec
sub
cmpsl
loopne
mov
xor
sarl
cmp
or
hlt
mov
in
stc
cmpl
push
out
rcr
test
rolb
jno
or
iret
sbb
scas
xchg
push
call
cmp
cmp
fsubs
sbb
cld
cmp
jo
js
rcl
add
xchg
loop
out
inc
int
push
jmp
jo
inc
cmpsl
inc
fstl
push
sarl
jle
test
add
repnz
int
clc
pop
cmp
lods
imul
jp
std
fisttps
cmp
fcomi
neg
inc
xor
sysenter
sbb
sbb
orb
sbbb
dec
sbb
adc
int3
xchg
and
clc
sahf
dec
and
jmp
xchg
mov
xchg
aam
outsb
andl
jne
sahf
aam
cmp
mov
adc
cli
dec
icebp
pop
scas
or
inc
mov
adc
popa
das
ficoms
cmpl
fmuls
push
and
scas
loop
dec
sbb
sub
cmp
inc
add
mov
xchg
lret
mov
xor
push
xorb
or
dec
add
movsb
js
inc
cmp
fbstp
orl
pop
mov
imul
inc
sub
mov
cmp
add
and
aas
mov
push
xchg
dec
dec
stc
pop
pusha
mull
rclb
adc
into
fs
dec
lock
push
xchg
sub
or
push
addb
test
mov
mov
lock
nop
loope
or
das
xchg
fstps
fs
std
jno
inc
dec
pusha
adc
fisttpll
in
fiaddl
add
push
jo
lret
jmp
or
xchg
js
pop
sti
mov
rorb
pushf
aas
lea
mov
mov
lods
adc
push
sub
mov
fdivrs
jne
ljmp
add
inc
jne
or
fidivrs
push
fdiv
cmp
mov
inc
imul
sar
cmpb
sbb
sarl
jb
or
mov
cmp
pop
pop
or
lret
dec
rclb
cs
test
sbb
in
ret
fsubrl
sbb
js
je
aaa
push
js
mov
test
sub
test
lock
fsubrl
mov
add
inc
cmp
jnp
sub
push
rolb
or
jmp
xor
aaa
pop
loopne
mov
mov
xchg
loop
lods
loopne
adc
psllq
and
sbb
mov
mov
mov
adc
sub
jmp
std
mov
adc
xchg
sub
push
add
cmpsb
add
xor
add
xor
push
and
mov
and
addr16
scas
bound
fcmovu
shlw
stc
mov
push
pop
and
out
xor
ret
rol
dec
cli
sbb
mov
in
fstp
inc
fldl
mov
jl
js
pcmpgtd
rcl
inc
bound
cmpb
sti
adc
sub
mov
push
sbb
incb
sub
jne
loope
lret
dec
or
sbb
cmp
pop
notl
dec
cld
pop
mov
orl
mov
pop
cmp
loope
andl
leave
in
ficoms
xchg
dec
sbb
adc
jge
addr16
inc
pop
les
xchg
lods
or
mov
test
loopne
jne
mov
xor
pop
mov
cmp
pop
lods
pop
mov
pop
mov
cmp
lea
fwait
xchg
ret
mov
pop
mov
push
dec
cmp
mov
cmp
into
lcall
pusha
in
mov
lock
and
push
sbb
sbb
in
mov
push
fsubr
inc
mov
jmp
push
and
jge
add
pop
jl
data16
jge
cwtl
inc
test
add
js
pop
sbb
dec
in
xor
push
add
push
popa
add
movb
enter
inc
pop
xchg
or
dec
cmp
mov
sar
sarb
push
and
leave
inc
shld
outsb
test
xor
out
pop
push
test
dec
push
pop
dec
sti
inc
jmp
icebp
xor
rolb
add
cmp
add
mov
cmpsb
sbb
xchg
or
or
ret
push
xor
pop
pop
cmc
cmp
push
or
gs
cmp
inc
sbbb
cmp
sub
sbb
inc
lcall
sbb
cmp
mov
fistpl
orb
outsl
or
gs
outsb
out
sub
push
imul
es
jl
pushf
add
int
xchg
xchg
lcall
pop
mov
cmp
insb
dec
sti
xchg
lret
test
pop
mov
xor
mov
or
sbb
dec
je
push
adc
adc
js
inc
sbb
push
sbb
add
jecxz
inc
sbb
jg
xchg
sbb
lock
adc
and
mov
jbe
mov
mov
ds
and
add
mov
fisubrs
repnz
das
adc
mov
rcrb
inc
or
mov
jl
or
or
call
mov
data16
or
or
pop
mov
popf
inc
push
jae
in
mov
jae
jne
or
aam
dec
inc
add
xor
add
jmp
add
and
sbb
int3
adc
in
dec
inc
dec
jecxz
inc
jne
and
and
dec
or
ror
callw
loopne
mov
in
std
jmp
rorl
fwait
pop
test
or
movsb
sbb
xor
jne
rcll
roll
call
jg
mov
xor
pop
sub
je
add
jbe
push
popf
ds
cmp
testl
and
data16
ja
jmp
add
push
test
sbb
pop
movsb
lret
lods
adc
dec
jle
inc
inc
test
add
add
in
imul
or
test
mov
pop
add
jo
bound
insb
push
or
mov
add
test
and
fsubs
and
cmp
and
nop
aas
mov
shl
not
xor
loope
xor
and
inc
outsb
and
shr
add
es
and
xor
dec
loop
fdivs
test
lock
test
adc
jmp
adc
test
xor
sub
add
sub
xor
or
test
lock
sub
inc
jmp
mov
incb
jmp
pop
mov
or
jmp
inc
and
mov
and
mov
movsb
jl
and
jecxz
jge
lcall
xchg
jmp
das
push
enter
add
loope
fdivl
or
scas
es
mov
je
and
out
sti
insl
adc
add
fstps
aas
pusha
mov
sub
sti
pusha
pusha
loope
pop
sub
dec
and
add
fstp
jmp
pusha
pusha
push
shrb
push
addr16
lret
in
add
adc
mov
add
add
test
leave
jo
clc
fisttps
push
pop
mov
push
xor
adc
or
sub
push
es
mov
or
push
mov
cmp
and
sbbb
xorb
sbb
jmp
push
and
inc
add
adc
adc
xor
inc
push
fld
add
or
pop
push
adc
sub
sub
std
out
inc
imul
ret
inc
imul
adc
cmp
lock
jge
sub
fsubrp
xor
rcll
xor
lods
ja
cmp
test
pop
dec
mov
iret
enter
push
aaa
sbb
test
ret
rcr
sbb
fsubrs
xchg
les
sub
sub
jb
addr16
push
push
in
cmpsb
xor
or
mov
add
int3
adc
dec
push
mov
andb
mov
jnp
into
adc
push
loope
es
in
jp
fstpl
lods
or
mov
jbe
or
or
fwait
inc
push
mov
inc
cmp
xchg
jb
sub
repnz
call
sbb
movsl
daa
adc
test
std
sbb
into
enter
in
sbb
sub
mov
mov
into
push
ja
out
mov
push
push
inc
mov
sub
mov
in
aam
xor
adc
mov
decb
push
and
mov
push
out
sub
cmp
test
jle
push
add
fwait
and
xchg
sbb
adc
test
test
clc
add
add
lods
test
add
and
adc
movzbl
add
mov
lds
dec
cmp
je
add
dec
fsubl
or
icebp
or
add
scas
sbb
push
inc
jnp
hlt
adc
or
dec
subb
sbb
cwtl
push
hlt
push
sbb
sub
out
jecxz
inc
add
mov
pop
adc
lds
xlat
out
call
and
mulb
inc
or
fs
xor
ficoms
loopne
daa
inc
pusha
jmp
insb
or
ljmp
mov
adc
mov
pop
mov
fadd
in
aam
xchg
cmp
imul
add
ss
xor
std
add
jae
lea
push
or
mov
fnstenv
pop
xor
jbe
sub
xchg
and
mov
add
mov
or
call
and
outsl
and
pop
mov
mov
in
rorb
dec
xor
pop
std
in
mov
fimull
or
pop
clc
jecxz
loope
out
sub
js
inc
cs
movsb
sbb
loope
ret
sahf
push
icebp
stos
addl
shl
jne
in
ret
movsb
jb
gs
ljmp
xchg
mov
mov
jmp
call
sbb
cmp
adc
ret
sub
fadds
into
addr16
push
pop
cwtl
xchg
movsb
xor
in
sub
test
cmovge
mov
pop
or
mov
test
shll
push
or
stos
inc
add
or
ret
dec
jle
out
mov
cli
jb
jne
adc
inc
sbb
push
push
xlat
xorl
or
and
fsubrs
sub
ljmp
incl
sub
dec
aad
push
mov
fucomp
or
test
jle
xor
fnstenv
or
xor
push
or
insl
or
push
mov
cld
pop
adc
fldt
inc
es
test
and
pop
movsl
fstpl
and
or
call
enter
mov
mov
push
mov
inc
hlt
insb
jg
cwtl
mov
rolb
inc
push
inc
or
xchg
scas
push
repnz
mov
pop
or
dec
test
xor
shl
cld
mov
jbe
out
add
mov
add
jbe
imul
mov
inc
data16
loope
fidivrs
shrb
test
ud2
in
push
ret
das
sahf
xor
push
mov
adc
test
push
lods
sbbl
fwait
mov
jnp
add
enter
imul
pop
fcoml
dec
adc
nop
pop
adcb
push
fiadds
sbb
jmp
test
js
mov
sarb
imul
sti
jbe
pop
lods
shr
test
pop
mov
and
notl
fwait
adc
enter
or
add
cmp
or
jnp
sahf
lods
inc
add
add
mov
pop
pop
xor
mov
jle
movsl
jg
mov
rorb
cmpl
inc
inc
adc
mov
inc
cld
dec
ret
or
cmp
es
or
jo
dec
mov
pop
imul
mov
cmpsb
add
inc
sbb
push
in
sub
push
or
sbb
sti
add
add
lock
mov
scas
cwtl
pop
test
jne
push
add
in
hlt
mov
stos
mov
subb
xchg
std
insb
or
adc
xchg
mov
add
rcrl
adc
nop
imul
add
xor
pop
lock
inc
shl
pusha
mov
cmp
mov
aam
loop
rolb
adcl
push
hlt
add
repz
dec
cltd
insb
pop
and
mov
inc
and
into
loopne
push
into
dec
mov
add
jmp
or
jb
cmp
mov
mov
dec
cmp
sarl
incb
jae
shl
xchg
dec
mov
adc
mov
js
test
and
jge
push
push
lret
add
push
test
lcall
mov
pop
outsb
mov
sti
cmp
dec
dec
stos
inc
hlt
add
loop
add
iret
sbb
movsl
cmp
rorl
hlt
push
movb
je
inc
xor
and
mov
cld
not
rcrb
xor
sbb
test
out
push
or
and
int
and
lock
push
adc
mov
jl
inc
rol
test
out
mov
sub
sarb
int
lock
fs
aam
mov
bnd
popa
pop
xor
mov
loop
add
hlt
test
cltd
add
in
push
mov
test
lcall
pop
push
ja
add
cli
paddw
push
data16
sbbb
push
cmp
lcall
adc
iret
dec
jns
inc
lock
dec
and
add
xor
jecxz
mov
mov
mov
jae
cmp
mov
cmp
inc
mov
mov
inc
jecxz
sbb
jl
pop
or
gs
stos
mov
into
out
aaa
ret
or
mov
out
and
leave
mov
pop
dec
xor
cld
sbb
jge
sbb
addb
enter
scas
shl
nop
add
add
or
pusha
inc
daa
dec
adc
xchg
xchg
xor
fdivr
and
push
jne
rcrb
pop
pop
xchg
enter
cli
lods
and
repnz
cld
add
sbb
add
inc
and
mov
add
add
and
aas
adc
clc
add
dec
mov
push
clc
or
inc
roll
jl
push
xchg
add
add
sarb
aas
xchg
jp
add
stos
xor
push
roll
mov
mov
xor
rcrl
test
mov
shll
add
stc
and
or
lods
mov
ljmp
cmpsb
or
cmp
loop
jne
inc
jmp
mov
adc
inc
or
xchg
add
ret
stos
mov
jmp
ja
add
or
push
dec
jmp
fs
es
mov
mov
add
imul
scas
dec
in
add
push
stos
mov
popa
or
fmul
jmp
pop
iret
incb
add
adc
jmp
notb
test
jbe
mov
adc
stos
pop
sbb
je
cmp
jle
mov
cmp
push
xor
ss
jmp
dec
push
sbb
nop
sti
lods
push
jbe
xor
addr16
dec
push
sub
add
sar
push
jmp
dec
stos
insb
pop
sub
fdivs
ret
push
insb
inc
mov
inc
fisttpl
push
pop
jge
pop
fstpt
test
nop
add
jne
pop
daa
mov
js
jae
imul
sbb
aad
cmp
jmp
and
mov
outsb
mov
or
scas
out
divl
out
push
sub
je
adc
gs
orl
iret
mov
push
and
dec
and
enter
mov
jbe
sub
mov
fisubs
je
mov
sub
jge
mov
mov
pop
in
dec
sbb
pop
cmp
adc
jge
add
testl
jmp
repnz
rolb
cmpl
lods
sbb
and
int
mov
sub
stc
push
adc
aas
inc
xchg
add
lods
fs
pushf
jmp
push
cwtl
lret
mov
xor
mov
dec
xor
add
add
xor
xor
push
mov
adc
cwtl
jge
neg
add
mov
xor
sbb
test
cli
sahf
mov
cmp
adc
nop
cmp
jmp
ret
popf
fstpl
enter
mov
xor
jne
sti
xchg
inc
movb
xor
mov
je
clc
lods
sarl
push
or
je
inc
mov
sbbl
in
add
stos
cmp
jb
mov
dec
mov
push
or
or
xchg
add
mov
std
pop
icebp
inc
mov
mov
mov
ret
and
jne
and
rcrb
andl
adc
sbb
aas
out
jle
std
mov
or
mov
mov
pop
mov
pop
mov
stos
movb
testl
sub
dec
enter
jne
gs
push
test
into
jne
inc
or
push
lock
cmp
cmp
jne
hlt
int3
add
lock
mov
test
rcrl
loop
add
pop
ljmp
les
lea
mov
jl
popa
add
sub
call
dec
lock
ja
outsl
push
push
data16
subl
lcall
sub
sub
or
loopne
stc
jg
add
addl
js
mov
clc
nop
ss
aam
loopne
xor
add
or
shr
and
pop
push
rcll
mov
xchg
jne
bound
or
adc
inc
mov
fmull
les
add
mulb
mov
sti
aas
es
shrl
shl
shr
or
mov
xchg
aam
rcrl
mov
mov
pop
mov
enter
andl
mov
inc
adc
cmp
dec
fistpl
add
ficompl
sar
pop
mov
fcomps
in
jne
dec
lock
push
call
mov
push
jnp
mov
and
dec
ss
adcb
jl
ret
nop
dec
ja
sbb
out
orb
cmp
xor
test
or
sub
sbb
jmp
add
push
scas
jns
xlat
cmp
jae
jno
les
int3
repz
int3
test
insb
jp
lret
das
sub
add
loopne
add
negb
push
push
jns
add
adc
les
cmp
bound
loopne
test
xchg
xchg
add
lds
lea
loope
aaa
or
cmp
shrl
out
push
or
inc
shlb
lods
mov
or
push
rcrb
hlt
jmp
inc
lcall
cmpsb
test
pop
jne
cmp
ret
inc
scas
or
std
or
push
mov
cmp
dec
insb
mov
rorl
insb
pop
cmp
push
and
jg
test
xchg
adc
fidivrl
lret
cs
or
incl
stc
gs
or
out
mov
dec
cmpb
je
mov
jg
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
jl
orb
add
out
call
call
push
sbb
add
jae
sbb
clc
sbb
or
or
mov
mov
xor
pop
andb
cmp
or
add
cmp
outsb
sub
xchg
mov
mull
jbe
jno
add
jmp
pop
add
add
mov
pop
sub
popa
push
gs
xchg
mov
clc
cmp
jmp
mov
lret
xchg
or
add
adc
dec
cmpsl
lret
xchg
das
mov
cmp
dec
setg
jle
jle
cmpl
in
clc
add
adc
leave
int3
mov
ljmp
jne
movb
cmpsb
test
mov
add
add
cmp
ficoml
xchg
jecxz
xor
mov
es
sbb
cmp
loop
lock
ljmp
lret
jmp
sub
add
jecxz
mov
ljmpw
dec
add
add
mov
inc
stos
movsb
push
inc
mov
dec
jns
sbb
add
fs
es
inc
negb
cld
xor
cmp
or
sub
add
movsb
outsb
add
orl
inc
cmp
push
xor
lods
adc
mov
adc
mov
adc
xor
insl
sbb
aam
adc
and
and
push
add
add
jne
cli
mov
outsl
fadd
jbe
jl
sbb
clc
dec
adc
jge
pop
add
rcll
adc
pop
xor
shlb
stc
add
xchg
push
sbb
outsl
or
pop
mov
xor
inc
sahf
nop
push
xchg
adc
cltd
mov
int3
pop
adc
mov
mov
cmp
cmc
or
dec
xor
sbb
stos
cmp
popa
sub
push
test
adc
imul
mov
xchg
cmp
fyl2xp1
out
stc
jmp
cmp
sub
xchg
rorb
add
pop
dec
cmp
adc
pop
xchg
or
xchg
push
add
xchg
loope
loopne
mov
mov
clc
test
add
addb
sar
mov
out
pop
sti
into
mov
testb
enter
add
push
sbb
js
ret
or
mov
pop
push
xor
aaa
mov
loope
gs
andl
ret
push
dec
inc
popf
popa
xlat
pushl
leave
and
add
cmpsb
movb
push
xchg
hlt
jle
and
popf
mov
dec
fwait
cld
rorb
sbb
jecxz
mov
jg
mov
daa
xor
or
jne
pop
cmp
mov
add
ret
jmp
out
scas
test
and
aam
xor
mov
and
or
jg
lea
xor
sub
mov
or
push
sub
sbb
and
adc
movswl
les
loop
pop
sbb
data16
or
cmp
add
loop
lock
mov
add
dec
shrd
xchg
sbb
push
jle
cmp
inc
sti
jge
ss
jl
cmpsl
dec
push
xlat
clc
mov
or
cmp
or
scas
int
stc
inc
add
dec
jmp
cwtl
jo
xchg
xchg
clc
sub
push
cmpb
or
out
xchg
fsubrl
or
xor
pop
cmp
insb
jno
add
adc
xor
imul
js
dec
and
add
push
fs
pop
sbb
js
jg
jb
pop
push
fucomip
push
sub
or
fidivrl
rorl
pop
lock
daa
inc
scas
push
push
hlt
shll
push
js
add
add
lock
add
or
jg
in
fwait
mov
lods
jb
fs
iret
xchg
imul
dec
pop
or
or
pusha
and
sbb
xor
and
mov
inc
inc
jae
stc
mov
xor
pop
pop
es
adc
scas
mov
or
jbe
arpl
mov
ret
shl
loopne
jb
pop
fwait
ret
and
lock
sub
mov
and
pop
or
push
sub
inc
sub
or
jge
add
jne
jl
outsb
out
mov
xchg
add
mov
inc
sbb
pop
xor
or
cltd
out
into
mov
and
adc
xor
or
into
or
je
roll
fs
push
shl
jne
add
or
sbb
ficoms
dec
test
lea
add
jle
imul
jmp
jmp
insl
cmp
cs
dec
sub
cld
jl
add
lods
sub
pop
decb
lock
mov
inc
rolb
push
mov
xorl
sarl
clc
gs
or
pop
or
jne
loope
outsb
lret
add
je
inc
je
testb
jmp
xor
add
add
push
in
add
add
aad
loopne
or
sbb
cmp
mov
repz
adc
loop
and
adc
call
jne
fmull
insl
push
pop
clc
fstps
inc
loop
xor
in
ds
jecxz
xchg
shl
and
jecxz
rol
adc
pop
push
jo
mov
cld
mov
pop
arpl
cmp
ds
cmp
dec
push
das
add
inc
push
mov
pop
ja
lret
xchg
xor
push
js
das
jb
sbb
cmp
adc
push
lcall
data16
xchg
cmp
jmp
inc
mov
andb
push
cmp
or
sahf
xchg
pop
call
lahf
dec
aas
insb
call
in
cmpsb
jno
dec
push
sub
popf
xchg
stc
enter
push
popf
je
test
ret
jmpw
mov
fbld
incl
mov
aaa
sub
ljmp
adc
repnz
push
cmp
sub
jbe
sub
movsl
adcl
sub
xor
pop
inc
mov
adc
mov
inc
jg
sahf
movsl
xor
mov
cmpl
pop
int3
loopne
sub
push
or
push
data16
mov
mov
mov
xor
scas
cmpb
push
jl
pop
insl
sbb
adc
cmp
addb
cmp
cmp
test
lret
movsb
das
and
sub
je
mov
xor
adc
js
mov
int3
cmp
jno
inc
cmp
cmp
je
outsl
int
lock
and
stos
iret
or
or
xchg
push
mov
icebp
mov
mov
pop
movb
nop
add
xor
sbb
dec
rcl
fdivr
jne
push
push
jmp
or
jmp
testb
je
push
ljmp
adc
and
xor
xor
sbb
xchg
stos
int
jae
movsl
pusha
push
xchg
cmp
jne
loop
cmpsb
outsb
test
adc
add
jo
sbbl
xchg
adc
pusha
xchg
sbb
aaa
loope
sub
in
inc
add
orl
mov
int3
aad
or
cwtl
sbb
jns
push
imul
lea
mov
push
decb
add
sar
sbb
js
sarb
mov
adc
jle
sub
push
xchg
mov
mov
push
add
mov
aaa
pop
hlt
push
or
movsl
cld
mov
sbb
push
push
shll
mov
add
movsl
shl
or
add
adc
icebp
ret
pusha
or
shr
fisubrl
enter
jge
inc
or
mov
cmp
push
lret
shlb
and
lock
sbb
das
add
jl
or
dec
fiadds
arpl
std
lods
dec
pushf
and
xor
incb
push
inc
jmp
and
add
sub
test
push
and
ss
es
stc
inc
inc
test
push
sub
sub
push
cmp
movsb
add
subb
or
mov
jmp
mov
clc
insb
loopne
cld
jo
mov
sbb
addr16
xchg
jo
sarb
fs
rcrl
inc
divb
in
adc
repz
sub
xchg
shl
mov
and
lock
pusha
pop
jmp
imul
out
jne
xor
jge
push
ret
pop
add
push
lea
sbb
sub
mov
dec
mov
cmp
sub
daa
dec
xchg
sbb
bound
xchg
test
btr
and
ljmp
mov
adc
push
loope
add
ficoms
push
mov
fadd
and
loope
sub
add
xlat
sbb
lds
push
inc
fabs
daa
sbb
int
pop
call
imul
xchg
lea
daa
ret
fsubl
push
ljmp
and
addl
xchg
mov
sub
loop
pop
mov
sbb
dec
sbbl
mov
adc
sub
xor
jmp
pushf
cmpsb
ja
push
pop
mov
and
sbb
or
mov
and
cmp
outsl
mov
jge
adc
or
pop
xchg
push
and
xor
adc
imulb
mov
loopne
adc
adc
lret
and
adc
jp
mov
out
pop
add
or
test
cld
mov
shr
shr
or
int3
mov
add
add
or
bound
scas
push
bound
lock
aad
in
stos
mov
mov
xor
add
fildl
mov
add
int3
cld
push
idivl
push
pusha
push
adc
fnstcw
inc
test
sub
ja
inc
jl
inc
dec
add
lea
push
mov
shr
cmp
mov
sub
mov
mov
adc
adc
inc
sub
mov
add
mov
shll
cmp
adc
ja
rorb
clc
inc
jbe
or
pop
daa
pop
rcr
imul
test
mov
cmp
ficoms
mov
adc
iret
shl
andl
adc
rol
aad
test
add
pushl
sbb
sub
or
int
loope
test
test
adc
lret
je
dec
call
sbb
rolb
sub
dec
xlat
cmp
xchg
sbb
cwtl
movsb
ficoml
mov
icebp
cli
out
sub
mov
insb
lock
mov
jne
add
pop
and
ret
test
or
sub
jne
add
call
xlat
push
ljmp
mov
dec
cmc
stos
inc
xchg
xchg
dec
cld
cmpsb
mov
jns
push
dec
cli
adc
pop
aam
and
pushf
fstl
test
add
cld
inc
cmp
pusha
xor
lods
or
and
push
push
mov
mov
pop
xor
dec
cmp
lock
jl
mov
aas
xor
cmpb
idiv
xor
adc
inc
add
xchg
push
push
and
fsts
mov
rcll
push
pop
add
push
push
fsubs
dec
xchg
iret
ds
inc
adc
sbb
and
push
push
dec
aam
pop
or
cmp
sub
and
or
or
call
jbe
dec
add
or
scas
stc
and
enter
inc
cmp
out
or
test
jne
pop
hlt
lret
cmc
neg
add
shll
repnz
push
je
mov
dec
jo
or
push
pop
xor
ror
stc
xor
add
adc
les
push
jne
jl
push
mov
movsl
xor
dec
outsb
rorb
push
movb
hlt
aam
xchg
and
push
pop
and
or
xchg
int3
add
hlt
iret
push
aad
xor
in
imul
inc
ja
lock
push
neg
neg
sbb
sub
jns
sbb
inc
sbb
int3
xchg
sbb
xor
sbb
fcoms
imul
inc
and
adcl
icebp
sbb
adc
fs
sbb
jne
jmp
cmp
jne
pop
pop
pop
pop
mov
mov
cmp
jae
or
jae
lods
rcl
ljmp
dec
and
shr
mov
or
mov
sub
idiv
and
cld
je
rorb
das
push
mov
or
push
mov
cmp
rcrb
mov
fsubrs
mov
add
mov
adc
rsqrtps
ss
sbb
xor
xchg
cli
push
adc
gs
int
sbb
into
jbe
add
mov
jns
aas
bound
cmc
aam
sbb
sbb
mov
jne
jle
ss
inc
cltd
and
push
or
adc
loop,pt
push
repz
cmp
jo
fwait
dec
push
es
cmpxchg
out
and
mov
test
insl
xor
sbb
dec
test
add
jno
sahf
mov
cltd
inc
or
sbb
fisubs
and
xor
dec
pushl
dec
hlt
test
jno
imul
pop
push
jge
insb
insb
rclb
adc
ror
insb
leave
jne
cmp
shll
mov
inc
jmp
fists
imul
je
inc
mov
mov
test
inc
ret
scas
es
mov
je
fisttps
and
push
cmp
ja
add
cmp
lahf
xchg
jns
ret
cmp
jne
xchg
jge
je
xor
adc
mov
movsb
inc
ss
cmp
pop
jbe
add
xor
push
push
pop
mov
dec
mov
xchg
movsb
and
gs
cmp
in
or
mov
sbb
inc
dec
sbb
mov
popf
clc
or
ret
jmp
imul
je
push
xor
fmuls
aaa
fmul
aaa
or
add
int
push
into
nop
inc
inc
xor
add
pop
mov
rorb
mov
mov
out
testl
cmp
cld
cmp
jns
cli
loopne
hlt
fs
mov
pop
repnz
jl
popl
mov
jb
cmpb
adc
pop
femms
pop
or
cmp
movsl
dec
stos
mov
rolb
xchg
inc
outsl
lods
mov
and
cld
inc
lods
pop
nop
adc
mov
and
inc
and
test
loopne,pt
sbb
rclb
inc
pop
sbb
sahf
out
fcmovbe
int3
push
rcl
rcl
aad
sahf
out
xlat
fcomp
mov
std
lidtl
nop
data16
inc
add
insb
loop
and
inc
je
or
dec
sub
adc
negb
adcl
push
add
or
inc
rolb
push
mov
out
and
and
adc
push
jb
je
dec
leave
call
pop
jo
xchg
icebp
adc
cmp
fcomps
pop
xor
push
push
add
sar
push
and
add
push
movb
sbb
imul
or
incl
add
imul
lea
xor
in
sar
inc
mov
mov
addl
neg
scas
xor
pusha
popf
test
out
add
test
cmp
shr
jl
test
adc
mov
pushf
es
add
fcomps
and
mov
adc
les
loope
adc
or
dec
lcall
fadds
xchg
pop
dec
push
sbb
test
icebp
or
mov
sbb
lea
pop
sbb
movsb
subl
push
repnz
mov
ja
movsb
in
push
movsl
add
push
loop
and
and
cmp
mov
mov
out
ljmp
push
sbb
or
push
sbb
and
push
insl
inc
je
rolb
dec
jb
or
mov
mov
add
mov
sbb
or
cwtl
dec
cs
enter
cmp
repnz
or
ret
movsb
sub
adc
cwtl
mov
jge
popa
mov
add
and
adc
dec
rol
add
add
cmp
jne
or
push
adc
fcmovbe
into
push
mov
rorb
and
add
or
gs
cs
lret
dec
inc
shrl
clc
cmp
inc
lods
ss
ffreep
adc
out
xor
outsl
fwait
mov
jmp
dec
add
lock
lock
dec
movsl
div
cli
cli
inc
add
cmpsl
cli
div
inc
pushf
and
cmpb
mov
pop
or
call
push
fcomps
sbb
adc
lcall
adc
mov
xchg
insl
loopne
fbld
mov
xor
mov
rolb
icebp
xchg
mov
int
jmp
inc
mov
lock
popa
push
dec
mov
mov
pop
imul
push
sub
loop
xchg
mov
xchg
xchg
testb
and
mov
sbb
inc
and
daa
in
inc
mov
adc
xchg
adc
xor
sahf
fisttpl
sub
shlb
fsubrs
rcrl
aam
inc
inc
test
shll
movsb
enter
push
mov
or
dec
or
pop
adc
sub
adc
sahf
mov
push
cld
lea
fcmovu
adc
mov
pop
xor
xor
insl
or
add
icebp
adc
inc
inc
and
out
sub
mov
aas
sbb
xchg
mov
negb
xchg
inc
inc
sahf
test
mov
and
repnz
add
inc
inc
xor
lock
js
cmp
jne
jne
sbb
fnsetpm(287
loopne
sub
and
adc
mov
fcomps
cmp
pop
sub
jle
sbb
movb
inc
das
cwtl
insl
js
xor
nop
sbb
mov
xor
push
sbb
push
pop
jle
out
adc
lret
mov
sub
and
call
push
or
push
shll
push
adc
fcomps
xor
fiadds
mov
imul
jmp
cs
loopnew
fmuls
cltd
push
mov
mov
je
or
mov
sbb
les
add
sbb
arpl
add
push
ss
rorb
mov
add
sub
adc
jge
faddp
dec
into
or
loope
mov
dec
push
test
clc
cwtl
push
add
enter
and
cmp
push
shlb
add
add
movsl
pop
sub
notl
jl
jne
cmp
shll
dec
cld
adc
into
or
mov
inc
test
dec
rolb
in
dec
aad
decb
dec
mov
dec
cmp
jge
sub
cmpb
jae
or
movb
dec
cmp
dec
mov
mov
inc
dec
add
add
fadds
dec
push
add
cmp
jp
jne
dec
mov
and
add
jb
int
pushf
adc
xor
ret
and
add
push
dec
mov
add
jnp
je
inc
or
push
imul
add
push
push
and
ret
out
adc
add
push
mov
shll
lea
dec
add
or
adc
out
or
jmp
dec
pushf
iret
xchg
push
or
add
or
pop
scas
add
adc
int3
add
ret
push
mov
sub
push
ret
pop
xchg
adc
fisubrl
xchg
add
add
outsl
pop
sbb
ret
mov
mov
add
xor
into
pusha
xlat
add
inc
into
mov
cld
add
rcrl
mov
in
cmpps
or
add
inc
adc
sahf
hlt
ficompl
pusha
inc
push
pop
jae
or
or
adc
and
adc
loopne
mov
add
inc
or
mov
imul
or
dec
pop
or
cmc
mov
cmp
lea
jne
and
and
inc
jbe
mov
mov
aam
push
lret
or
pop
cmp
inc
ljmp
inc
adc
jae
fldcw
mov
cld
xor
roll
or
sub
fcoml
inc
stos
jg
xor
into
dec
rcrb
sub
push
cmpsl
add
jge
add
les
pop
ret
jnp
dec
bound
cltd
ss
or
add
mov
add
add
sarb
xor
xchg
idiv
shlb
lret
je
and
cmp
mov
lret
into
into
lcall
and
fnstsw
sub
push
pop
shl
cmp
pop
mov
nop
int3
or
shlb
or
shll
push
pop
adc
cld
xchg
pop
xchg
add
aad
adcl
add
leave
lahf
mov
out
adc
add
enter
add
add
mov
into
and
push
and
je
and
mov
inc
sub
pop
jo
sub
sbb
lret
cmp
lret
push
xor
jae
push
xchg
push
or
scas
sub
push
dec
xchg
faddl
and
pop
rcr
xor
add
mov
ret
pop
fmul
cmp
mov
push
cmp
dec
test
jo
mov
fucom
lret
sub
mov
jle
inc
ret
fisubrs
scas
js
clc
int
push
sbb
xlat
jle
and
daa
seto
or
and
adc
sbb
jge
xor
bnd
dec
mov
lea
insl
sbb
mov
dec
cmp
mov
rcr
dec
sbb
xor
sbb
pop
add
push
loop
jecxz
orb
loopne
xor
jmp
and
dec
sub
add
dec
inc
add
mov
out
je
push
aad
fisubrs
rorb
jb
mov
lret
inc
inc
fsubrp
jmp
pop
sbb
popa
out
leave
nop
mov
lds
sub
mov
jo
adc
int
jbe
pop
js
jmp
test
xor
fisubl
mov
aam
mov
movsl
xor
cmp
pop
mov
sbb
or
adc
and
sbb
xchg
jne
mov
test
mov
adc
or
push
scas
ret
lock
sbb
jnp
inc
pushl
leave
and
adc
pop
test
ja
testb
xor
mov
hlt
jno
inc
aam
pop
popf
mov
fcoms
rol
xchg
stos
pop
mov
pushf
out
sub
enter
adc
test
push
sbb
shlb
rclb
push
sbb
dec
mov
mov
dec
xchg
inc
sbb
sub
es
decl
or
add
in
mov
sbb
sub
push
imul
pop
call
pushf
out
mov
and
push
popf
push
test
or
stos
out
lods
push
mov
xor
adc
leave
xor
dec
add
rorb
std
adc
adc
bound
ltr
lods
add
jo
cs
aaa
mov
xor
imul
cmp
and
xlat
gs
or
adc
sbb
ds
mov
or
mov
sbb
adc
sub
cmp
dec
adc
cmp
pop
or
scas
xchg
stos
jl
bound
push
inc
sbb
and
lods
movsb
mov
mov
mov
shr
xchg
cmp
xlat
and
pop
jbe
pop
fisubrl
push
or
ret
ss
mov
push
sub
movsb
xorb
enter
dec
lock
loop
mov
cmp
mov
add
or
mov
or
push
cmp
aam
lret
enter
mov
and
sbb
jo
dec
shll
jge
test
test
lret
xchg
test
sbb
mov
jg
xor
fs
push
lock
adc
cmp
dec
cld
add
rol
inc
pop
pop
jl
jl
lea
ss
int3
cli
mov
xchg
adc
xor
mov
pop
nop
pop
divb
fsubs
mov
fildll
dec
dec
nop
adc
pop
jae
jmp
ss
cmp
or
js
pop
push
xor
mov
mov
addb
leave
inc
pusha
jo
scas
mov
shll
ds
clc
fcompl
or
in
add
and
sub
add
or
hlt
push
es
xor
push
sbb
and
push
adc
lock
xor
inc
hlt
xor
sub
scas
adc
or
add
adc
test
outsl
xor
testb
push
push
mov
mov
pop
cs
add
jl
dec
cmp
pop
sbb
scas
add
or
insl
loopne
mov
out
sahf
add
or
enter
enter
inc
push
daa
outsl
adc
scas
adc
inc
push
aaa
into
sub
cmpl
andl
arpl
push
cwtl
cmp
or
inc
add
inc
mov
pop
rol
mov
mov
and
ret
sbb
inc
xchg
shlb
xor
loopne
clc
testb
jge
cvttps2pi
mov
test
popa
sbb
shll
add
and
rcr
fbstp
insb
rclb
pop
negb
jmp
fstps
push
xor
arpl
ror
cltd
insl
mov
sub
das
fdivs
scas
sbb
adc
test
and
add
cmpsb
pop
in
xchg
push
or
pop
pop
int
sti
sub
lds
add
cmpsb
adc
or
lcall
es
mov
das
cwtd
dec
or
push
ljmp
sbb
ret
fmull
nop
inc
les
inc
in
in
push
mov
addr16
inc
cmpsb
insl
inc
lods
int
fadd
clc
fs
mov
call
and
ret
nop
mov
dec
fsubrs
sbbb
ret
test
push
pop
inc
add
test
test
faddl
addr16
pushf
mov
mov
xor
push
push
or
xchg
mov
shlb
sub
fs
mov
adc
inc
lock
inc
xor
push
lea
shll
pop
dec
rcll
pop
mov
xor
repnz
xor
cmc
adc
test
ret
jo
ret
pop
add
dec
pop
fdiv
mov
add
leave
iret
mov
sub
jne
aad
and
jmp
pop
push
in
sbb
jne
pop
adc
fwait
in
adc
ss
in
cmp
cmpsb
cmp
inc
adc
lret
int
add
or
dec
add
lock
movsb
lods
xor
js
mov
jp
and
adc
aad
xor
imul
cmp
add
dec
stc
mov
xchg
xor
pop
add
es
sub
mov
and
leave
dec
pop
mov
or
and
mov
cwtl
repz
call
rcl
xchg
sbb
dec
adc
les
dec
dec
pop
dec
lcall
in
dec
rcrb
popa
or
outsb
push
pop
pop
in
movups
ss
push
bswap
movsl
fadds
rolb
push
mov
iret
imul
outsl
fdivl
xchg
in
stos
inc
add
scas
and
push
mov
pop
hlt
add
push
and
jo
enter
cmp
jne
ja
test
arpl
cld
sub
and
enter
inc
jbe
in
pop
add
movsl
scas
ljmp
call
and
adc
pushf
mov
inc
cmpsl
or
aaa
call
shll
pop
rorb
jl
movsl
bound
fcompl
and
int3
fldlg2
cltd
aam
cltd
mov
in
call
shlb
cmp
xor
dec
sub
insb
mov
int3
add
add
dec
cmp
dec
xor
and
sbb
xor
and
and
xor
and
dec
xor
cmp
xchg
dec
xor
dec
xor
leave
fs
dec
dec
out
or
sbb
add
mov
push
sub
add
inc
mov
pmulhuw
loopne
enter
lret
clc
hlt
mov
daa
lcall
lcall
lock
mov
or
pop
mov
les
das
sub
or
inc
clc
dec
dec
leave
push
pop
movsl
aam
scas
push
mov
add
dec
repnz
aad
or
xor
and
ret
push
dec
dec
fsubrl
inc
cwtl
inc
data16
and
mov
fwait
int3
fwait
aam
cmp
shlb
inc
enter
imul
fwait
imul
shlb
bound
sub
sbb
push
jo
inc
fisttps
dec
js
jmp
rorb
das
or
call
pop
adc
lock
push
aad
in
roll
jg
mov
popa
sbb
push
mov
aaa
fadd
in
in
push
adc
insb
stos
cmpsb
or
in
dec
cmp
fcomps
shll
lock
lahf
in
dec
repnz
in
inc
adc
insl
xchg
sub
mov
xor
inc
enter
in
rorl
or
sub
jae
in
sub
pop
fcoms
push
push
sub
icebp
ficoml
mov
and
outsb
out
lock
ret
xor
and
jge
outsb
movq
gs
popa
enter
push
hlt
nop
negb
pop
leave
and
xchg
cli
sub
sbb
mov
fcoms
insb
push
lods
pop
mov
mov
mov
out
dec
cmp
aam
pop
lcall
add
add
outsl
cmp
xor
loop
lret
sub
in
fwait
repz
and
cmc
fcomp
aam
adc
mov
outsl
call
cmpsb
aam
push
jno
lea
mov
shrd
daa
daa
mov
mov
daa
rol
int3
sbb
rcl
jmp
or
xchg
mov
shlb
out
mov
adc
xchg
lock
mov
add
adc
or
sbb
push
dec
jae
push
sbb
jns
nop
stos
mov
call
mov
das
add
sub
jae
call
sbb
pop
mov
pop
push
bound
test
les
or
call
call
jne
mov
add
cld
shll
mov
push
fwait
int3
xor
adc
jbe
inc
daa
inc
adc
mov
outsl
fdivrs
sbb
leave
mov
jbe
insl
mov
inc
movsl
jge
mov
add
mov
mov
cmp
push
xchg
fwait
loopne
or
sti
insl
and
and
mov
pop
test
mov
jl
add
and
lret
or
adc
inc
dec
fdivr
jo
mov
and
add
xchg
dec
addb
cli
inc
or
cmp
add
push
insl
push
and
test
in
in
rcrb
fisttps
cmpsb
pop
inc
xchg
sub
sub
pop
pop
es
inc
add
sub
jecxz
and
adc
adc
nop
adcb
js
add
mov
pop
or
pushf
xchg
add
push
xor
addb
sti
or
jne
dec
xchg
fsubrl
sbb
lods
in
in
lock
scas
inc
test
test
outsb
inc
dec
add
mov
push
or
loopne
pop
xlat
pushf
rorl
mov
hlt
and
inc
push
fdivrl
dec
movsb
nop
add
ret
mov
test
icebp
add
fists
inc
jne
insl
in
aad
sbb
fistpll
fcmovbe
mov
pushf
pop
and
jmp
int
loopne
in
inc
cs
mov
add
mov
cmpsl
add
enter
jmp
sbb
lcall
add
jl,pn
ret
mov
jnp
and
add
aam
pop
push
add
nop
and
loopne
or
jl
xchg
jnp
or
or
or
enter
or
test
mov
test
and
call
mov
xchg
test
mov
xorb
js
lea
jle
inc
daa
mov
xor
sub
dec
dec
lea
je
push
loopne
aam
mov
push
mov
xchg
mov
lock
aas
in
xor
push
dec
and
leave
sub
jg
mov
or
cmpsl
inc
jle
mov
inc
fisubl
lods
or
and
dec
or
test
jecxz
xchg
test
cwtl
add
nop
movsb
xchg
lods
nop
fstp
cs
or
jae
mov
gs
and
pop
lock
xlat
call
add
in
and
lods
cs
cmpsb
mov
pusha
gs
pop
pusha
mov
fists
dec
xchg
sub
push
or
shlb
roll
in
insb
adcb
push
xor
lock
mov
lock
dec
sbb
or
les
xlat
int3
clc
mov
push
xchg
lods
lds
daa
enter
daa
daa
daa
daa
mov
daa
daa
daa
cwtl
mov
push
fstl
addb
addl
test
test
mov
das
nop
or
test
cmp
fisttpl
cmpsb
test
shrb
movsl
fdivs
lock
mov
inc
imul
fisubl
push
push
push
mov
sbb
test
adc
pushf
mov
subl
mov
shlb
xchg
dec
xchg
mov
es
jne
or
jg
call
xchg
or
faddl
adc
jne
or
xchg
inc
pop
pop
mov
dec
add
sub
lahf
add
push
das
cmp
dec
and
movsl
xchg
mov
shlb
dec
nop
in
jbe
or
call
mov
adc
fdivrl
push
inc
sbb
mov
mov
push
jl
aam
xchg
dec
in
lcall
test
xchg
fcmovnb
mov
or
mov
ret
in
aam
aas
rcl
add
stos
xchg
fdivrl
aad
and
mov
enter
mov
std
fcompl
mov
adc
push
add
xor
insl
pusha
adc
rorb
scas
lods
xchg
mov
sbb
jo
fmull
and
pop
or
xor
std
xchg
ret
outsl
enter
add
sti
movsl
cmp
in
or
test
add
mov
mov
inc
and
xor
pop
mov
xchg
add
jno
enter
fiaddl
cld
iret
int3
lahf
mov
enter
outsb
cwtl
xchg
sub
mov
or
dec
mov
pop
ret
nop
data16
jmp
cmp
jb
lea
and
call
fsubrs
pop
fmuls
inc
enter
pusha
mov
or
aam
push
jge
mov
insl
or
clc
push
adc
fldcw
mov
or
call
adc
and
fists
nop
mov
mov
test
jns
je
push
shl
adc
pusha
adc
xchg
push
test
pushl
xchg
popa
adc
push
xor
fistpl
fdivr
sub
add
or
sti
sbb
jg
pop
push
xchg
in
add
bound
cmp
test
out
mov
push
test
xchg
into
enter
mov
in
xor
ds
mov
aad
stc
mov
sbb
pushf
aaa
test
inc
cmp
push
fsub
das
adc
add
jne
inc
int3
enter
xchg
dec
xchg
and
imul
inc
mov
pop
movsb
jbe
and
call
push
out
loopne
push
fnsave
mov
xchg
and
add
pop
nop
push
inc
pushf
adc
push
xor
mov
sub
movsl
aad
js
stos
or
sub
pop
inc
mov
shll
xchg
pop
jge
in
jns
or
sub
les
lcall
mov
movsl
outsl
sbb
test
push
ljmp
xor
dec
fst
mov
and
mov
cs
mov
fadd
add
stos
inc
mov
jns
add
scas
scas
adc
adc
pusha
xchg
ret
dec
inc
mov
push
mov
dec
push
ljmp
add
cwtl
fcoml
in
test
inc
jb
sbb
fsubl
pop
fadd
lock
mov
pushf
sbb
insl
inc
cltd
mov
lret
ret
aas
pusha
xor
jl
icebp
imul
xchg
xchg
nop
pop
inc
mov
or
pop
pop
cld
push
or
add
xor
bnd
insl
dec
mov
arpl
adcb
rcll
ficoms
inc
test
pop
inc
bound
leave
adc
daa
sub
ret
xor
enter
xor
test
sub
push
xlat
inc
fwait
and
imul
mov
pop
stos
and
nop
nop
or
pop
add
and
adc
and
or
mov
repnz
pushf
xor
pop
ds
pop
dec
roll
xchg
es
ja
scas
or
push
pop
or
enter
mov
or
mov
xchg
movsl
or
sbb
and
int3
popf
enter
in
scas
add
lahf
fldcw
jl
and
adc
jo
out
fs
insl
mov
push
ds
ret
pusha
out
out
sahf
cmp
int
mov
xor
rclb
aad
xor
and
mov
adc
or
mov
add
les
das
enter
xchg
adc
mov
test
test
test
mov
push
mov
jmp
aas
aad
addl
stos
lcall
imul
lock
dec
push
pusha
inc
cld
mov
add
add
and
mov
xor
or
pusha
mov
inc
enter
jae
aam
enter
lds
and
inc
and
mov
cmp
xchg
sub
xchg
add
xor
lods
fnsave
popa
push
sub
stc
pop
int3
add
jg
mov
mov
and
test
push
aam
int3
rolb
subb
insb
and
rorl
int3
arpl
sub
sbb
add
pop
inc
mov
mov
jg
orb
dec
movsl
lock
adc
dec
and
in
bound
fsubs
int3
pop
les
xor
pop
dec
xor
imul
popl
ss
cmpsb
test
mov
je
dec
mov
sub
pop
in
dec
adc
faddl
xor
push
adc
sub
pop
pushf
cmp
add
rclb
rorb
or
movsb
adc
and
nop
and
outsb
movb
cs
in
inc
mov
rorl
repnz
pop
jg
scas
inc
add
xor
xchg
adc
mov
pop
std
enter
push
cs
xchg
inc
in
loopne
loopne
iret
or
test
cwtl
adc
push
test
mov
jl
and
mov
into
adc
sub
mov
cmpsl
pusha
inc
lea
push
jp
int
test
mov
adc
les
add
sub
mov
mov
add
xor
sbb
or
mov
push
stos
sub
stos
add
mov
stc
add
ret
mov
jne
in
test
inc
mov
cmc
fcoms
mov
shrb
cs
outsb
and
xchg
sbb
or
std
sbb
pushf
movsb
outsl
dec
sub
lods
jns
cmp
fisubl
xlat
push
andb
mov
and
dec
cwtl
pusha
fs
xchg
fildl
cmpsb
sbb
nop
inc
out
das
lock
cmp
mov
stos
cmp
les
inc
and
mov
push
and
pop
aaa
shrb
lods
jb
sbb
pop
insb
lods
stos
les
jns
mov
xor
inc
push
cltd
nop
std
add
nop
or
fs
adc
and
xor
fisttps
outsl
es
sysenter
xorl
xlat
int3
or
dec
mov
add
kmovw
add
add
add
in
add
pop
push
sbb
add
ja
push
xchg
negl
orb
arpl
push
xchg
cltd
adc
inc
in
nop
das
aam
andl
push
in
inc
add
pusha
leave
mov
in
and
add
mov
xchg
fsubrs
dec
invd
pop
das
sahf
add
or
cs
sub
or
or
out
or
dec
enter
gs
sbb
mov
add
mov
inc
scas
mov
orb
popa
sub
pop
test
xchg
sub
incl
mov
or
cld
nop
fs
arpl
rol
shrl
xchg
add
adcl
mov
and
cltd
mov
inc
inc
or
or
or
sub
xchg
aaa
sub
sbb
jne
xchg
cmp
xor
mov
add
sub
or
fbstp
xchg
in
dec
inc
adc
pop
popf
sbb
mov
add
or
loopne
test
push
xor
loopne
mov
add
dec
mov
shlb
fwait
addl
les
mov
mov
jno
dec
shrl
test
mov
call
mov
bound
mov
gs
shlb
mov
inc
or
in
mov
push
or
push
adc
push
add
jne
adcl
xchg
test
adc
mov
push
aam
mov
pop
adc
sbb
mov
in
int3
test
and
call
loopne
mov
test
add
add
call
inc
cmpsb
clc
fdivp
adc
mov
xor
dec
shlb
js
pop
cmp
mov
xor
push
outsl
fwait
mov
mov
rol
fiaddl
jb
mov
jl
shll
cltd
push
dec
xor
hlt
pop
push
pusha
dec
xor
and
dec
inc
lret
add
jo
mov
mov
dec
clc
inc
fadds
fs
adc
rol
mov
mov
push
mov
loopne
faddl
in
inc
mov
mov
in
andb
subb
xchg
imul
dec
es
mov
inc
xchg
enter
pusha
mov
sbbb
xor
jecxz
mov
inc
cltd
sbb
push
fdivs
xor
jecxz
in
add
xor
dec
adc
sub
mov
repnz
dec
add
mov
sub
mov
jg
inc
cwtl
nop
mov
sbb
es
dec
nop
fists
and
pushf
movsb
js
mov
push
loopne
xor
daa
xchg
imul
nop
ret
add
cs
enter
mov
and
pop
pop
rclb
sbb
and
mov
add
out
pop
test
pop
out
pop
sub
outsl
add
xor
in
cmp
fcoms
aam
add
shl
in
xor
cmc
enter
xchg
fcmovu
adc
rolb
mov
mov
jno
push
xor
aas
push
rcrb
and
mov
scas
test
les
adc
sbb
aad
movsb
test
rcrl
cs
loopne
dec
dec
lcall
sub
mov
nop
in
movsb
dec
fcoms
test
cmp
nopl
lods
subl
js
sub
imul
xor
adc
mov
fdivrl
add
int3
pop
call
aas
mov
or
les
xor
adc
add
mov
imul
stos
jne
adc
sbb
lahf
adc
mov
shrl
sub
pop
hlt
inc
dec
adc
stos
add
das
jmp
adc
loopne
fcmovbe
dec
sahf
hlt
push
push
inc
xchg
sub
pop
pop
lds
jno
fisttps
pushf
sbb
popa
or
jno
mov
lds
outsl
sbbb
paddq
adc
lea
aas
or
inc
and
xchg
imul
cltd
fs
sbb
enter
cli
mov
sti
cld
cli
scas
leave
and
sbb
pop
cmp
orb
cmp
mov
dec
hlt
add
adc
mov
lods
inc
mov
in
popf
pusha
sti
mov
and
mov
roll
adc
xchg
imul
pusha
mov
sbb
mov
test
sbb
rcll
shrl
call
dec
pop
mov
enter
lods
dec
lods
cmpsb
mov
mov
jb
rolb
mov
nop
xchg
ror
add
xor
stc
les
or
lahf
jnp
dec
or
iret
and
push
push
jno
mov
xor
int
push
inc
push
rolb
mov
add
pop
push
jp
mov
mov
jns
adcl
pop
sub
inc
mov
in
addr16
sub
pusha
sub
or
or
push
es
imulb
sub
inc
jl
push
repnz
leave
xorb
xchg
jg
xor
pop
cmp
imul
sub
sti
std
dec
loope
mov
movl
jle
adc
add
aaa
ds
aad
push
xlat
push
push
dec
mov
add
and
loop
mov
jne
xor
xor
andl
or
adc
fwait
and
jb
push
ret
or
and
push
xor
add
daa
add
inc
add
jae
sbb
movsb
lods
push
das
faddp
or
hlt
dec
sbb
addr16
xchg
mov
sbb
clc
pushf
mov
loope
push
scas
loopne
cmp
out
loopne
mov
mov
add
imul
andb
dec
gs
dec
mov
lock
mov
pusha
add
mov
icebp
fdiv
aas
inc
hlt
sub
test
push
push
xchg
push
mov
mov
hlt
push
mov
push
loopne
call
shrl
mov
mov
ljmp
add
fildl
orb
jnp
mov
add
add
xor
mov
push
sbbb
pusha
pop
cli
jg
sub
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
xchg
shrb
push
push
mov
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
mov
pushl
xor
xor
ss
cmp
sub
sub
adc
or
push
or
cmp
rclb
cmpl
repz
push
vpshlq
push
sti
fs
jge
jg
outsb
je
jb
outsl
arpl
fs
out
sbb
push
dec
imul
int3
aaa
jne
push
out
jg
outsb
gs
xor
cs
insb
push
bound
and
pop
popa
je
outsl
outsb
fcomps
xor
mov
aas
paddsb
pop
jbe
add
incl
sub
add
jge
outsb
dec
mov
inc
outsl
jb
sub
jbe
js
je
jb
gs
cmp
or
or
out
cmpsb
lcall
cld
in
add
push
gs
push
je
mov
jbe
lock
jb
mov
outsb
aas
mov
dec
xor
xor
cmp
jne
iret
mov
sub
dec
and
jns
xor
das
das
adc
or
ds
gs
insl
bound
daa
dec
outsl
jbe
pmaxsw
pop
dec
arpl
push
jo
sub
out
lock
jne
jne
dec
jne
xchg
mov
inc
jo
imul
bound
dec
nop
or
into
mov
scas
cmpsl
xchg
popl
cmp
xchg
addr16
push
jne
lcall
mov
mov
push
fsubl
push
scas
clc
sbb
dec
jae
std
adc
and
jbe
out
pop
dec
inc
ds
popa
das
jo
xor
pop
insl
or
fbstp
mov
ds
add
nop
pushf
pop
fisttpll
out
dec
add
pop
add
and
hlt
call
mov
sub
sub
std
shll
ds
inc
das
pop
pop
push
push
adc
jnp
xchg
insl
cli
jl
jle
add
arpl
test
icebp
adc
subl
pop
or
out
ffree
inc
adc
push
sbb
insb
jae
cs
fs
cmp
xor
inc
mov
outsl
mov
out
jo
insl
and
addr16
jbe
dec
push
push
sbb
insl
in
dec
dec
inc
sbb
and
jp
data16
add
xor
sbb
push
jo
imul
push
pop
mov
je,pn
push
push
xor
jo
xchg
idivb
mov
sub
and
fs
adc
out
scas
mov
push
imulb
and
and
fmul
insb
mov
sbb
xor
and
imull
xchg
add
and
jne
sub
mov
rolb
les
shrl
mov
fldl
and
or
das
add
popa
add
or
ljmp
jb
bound
lods
mov
je
and
push
or
push
or
int3
fidivl
popf
jb
loopne
outsl
mov
faddl
fcmovu
push
daa
sub
dec
addb
das
arpl
cwtl
shlb
dec
popa
in
gs
sub
mov
fidivrs
test
out
add
inc
xchg
insb
imul
out
xor
int3
gs
rcl
push
cmp
push
lcall
mov
and
xor
gs
push
divl
push
fistps
push
adcb
aaa
xor
scas
or
fs
xor
rol
push
hlt
pop
dec
add
add
test
ja
outsl
and
and
outsl
ss
mov
lods
pop
xor
imul
ret
xchg
push
mov
xor
push
gs
or
lds
dec
add
inc
jle
lret
mov
mov
arpl
lret
jp
jo
bound
push
pop
repnz
cmp
insl
in
sarb
shr
or
or
xchg
imul
pop
or
lods
cli
jno
add
push
push
leave
push
mov
insl
imul
cmp
orl
popa
in
xor
pusha
or
and
push
mov
pop
push
cmp
addr16
jae
xor
loopne
or
fsubl
out
mov
jo
sub
popa
adcb
jb
push
sub
imul
dec
stos
mov
dec
jmp
jo
and
imul
inc
adc
lods
mov
and
dec
cmp
call
es
jg
lcall
loopne
cmpsl
popf
lock
sarb
fadd
ljmp
lret
jno
icebp
pusha
inc
mov
clc
sub
ret
movsl
add
xorl
add
loop
data16
loopne
imul
fcompl
add
add
xor
sub
popa
js
jae
jno
jnp
je
pop
dec
pop
add
add
mov
jae
imul
outsb
xchg
testb
push
add
adc
add
mov
push
add
add
add
and
subl
cmp
pop
or
aaa
ds
push
pop
hlt
and
repz
push
js
or
sub
sti
mov
xor
xor
sbb
addb
in
add
xchg
test
add
imul
pop
daa
push
cmpb
push
out
int3
sahf
and
sub
jb
int3
push
int3
mov
into
jo
add
inc
xor
mov
outsl
xor
int3
js
jo
dec
rclb
sbb
xchg
pushf
cmp
mov
nop
xchg
xchg
xchg
les
es
inc
pop
adc
mov
sub
pop
pushf
jo
adc
adc
or
and
cmp
or
pushf
dec
pop
mov
jo
adcb
shrb
push
fisubrs
pop
mov
jns
in
stos
and
sub
dec
add
nop
lret
test
cs
cmp
xchg
dec
addb
andb
and
dec
sbb
add
add
mov
enter
jmp
add
cmp
ficompl
aaa
add
adc
insl
pop
shr
pushl
addb
incl
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
mov
leave
lret
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
jmp
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
call
xchg
inc
adc
inc
movsb
sar
push
or
jmp
lds
pop
sarl
push
add
xchg
push
pop
outsl
ja
adc
jg
inc
cs
jae
jb
bound
dec
ja
push
inc
ss
popa
mov
arpl
mov
std
ja
pop
lea
dec
mov
outsl
js
push
push
inc
push
es
aam
mov
inc
sahf
mov
gs
mov
dec
mov
scas
push
mov
daa
add
insb
in
dec
imul
pop
jns
inc
mov
imul
cmp
and
inc
jb
jns
daa
pop
mov
and
cmp
movsb
mov
jmp
sbb
or
adc
mov
outsb
pushw
mov
adcb
mov
mov
pop
pusha
shrb
pop
pusha
inc
jbe
push
in
or
lahf
fs
fisubl
dec
clc
popl
mov
imul
and
push
and
pop
es
push
mov
dec
lahf
lock
xchg
pop
pop
pop
mov
test
jp
aas
xchg
shlb
pusha
insb
call
movsl
jae
addr16
subl
gs
xchg
pop
loope
mov
xchg
xchg
inc
push
push
push
push
add
inc
dec
push
jne
repnz
fcmovb
cmp
mov
lea
mov
mov
scas
arpl
aas
xchg
aam
jg
imul
call
inc
adc
xor
in
and
xor
adc
jl
mov
adc
lods
sbb
or
xlat
arpl
das
je
outsl
xchg
daa
xchg
fisubl
or
cmp
jns
cmp
cmp
push
das
push
sub
sub
inc
jl
push
jle
fstpt
sub
addr16
sub
push
jae
sub
inc
in
jp
jmp
cmp
mov
dec
inc
dec
pop
js
lret
cwtl
jb
sbb
push
jb
mov
xor
imul
push
xor
xor
xchg
push
lods
sbb
in
add
push
and
inc
out
xor
inc
jo
sub
cmpsb
aam
push
lahf
sub
or
inc
add
iret
sarl
loopne
loopne
enter
repz
fdivp
cmp
fildl
in
test
push
cwtl
repz
xchg
nop
push
mov
test
pop
insb
int
cld
cmp
dec
sub
push
adc
fs
out
jl
shl
push
in
or
inc
jns
pop
jbe
push
das
ds
out
fidivrs
dec
push
dec
push
inc
inc
cmp
out
sahf
cmp
sub
and
sahf
out
and
add
fcomip
cmp
rcr
sarb
iret
pop
cmp
clc
fiadds
mov
cwtl
jo
inc
inc
cmpsl
stc
cmp
cmp
add
sahf
out
sahf
loopne
movsb
jl
sub
dec
repz
in
rcrb
sub
cmpsl
pop
aam
pop
pushf
mov
lcallw
jg
push
dec
jns
push
xor
add
and
cwtl
cmpsl
pop
push
outsl
pop
cmpsb
bound
fs
jns
sub
sbb
je
ljmp
dec
sti
push
lods
pcmpgtw
xor
add
jle
push
mov
cmp
inc
inc
dec
jae
insb
divl
pop
flds
mov
sbb
decl
push
dec
inc
dec
xor
inc
dec
dec
dec
push
push
and
xor
push
dec
inc
dec
add
pushl
stc
dec
dec
inc
add
adc
sub
push
pop
add
adc
or
popa
into
mov
mov
jnp
inc
loop
mov
pusha
mov
ds
pop
adc
clc
lret
sbb
stc
lcall
jge
arpl
cmp
adc
dec
scas
jp
mov
or
in
fstl
mov
and
in
pop
xchg
cmp
dec
imul
lret
add
int
incl
mov
mov
sub
fwait
ss
out
paddsb
int
jns
ds
xor
incb
int3
dec
decl
jns
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
call
shrl
pop
and
xchg
lret
sahf
icebp
mov
cld
or
incl
cmp
jle
inc
mov
xchg
push
pop
popa
push
or
scas
int
mov
ds
leave
loop
mov
xchg
dec
xchg
loope
sub
scas
lods
pop
push
xor
andb
jle
into
or
icebp
pop
pop
repnz
pop
mov
and
es
mov
push
flds
scas
insb
sbb
mov
out
leave
ljmp
jo
loop
pop
dec
test
push
filds
or
outsb
jbe
push
mov
xor
and
rolb
and
cmp
inc
jge
cmp
rcll
inc
jbe
inc
jbe
jns
sti
mov
dec
push
dec
push
sti
jmp
sub
mov
add
pop
dec
add
push
inc
xor
aas
pop
pop
inc
inc
pop
cmp
push
pop
pop
inc
inc
dec
xor
dec
sub
inc
sbb
pop
sti
cmp
inc
or
push
push
add
inc
inc
inc
and
in
sub
jbe
xor
ss
ds
pop
adc
fwait
sbb
or
pop
and
ds
inc
inc
add
fdivrl
push
inc
xor
or
sub
push
in
fucomip
insl
add
adc
ret
push
pop
cs
mov
in
fldt
ljmp
adc
and
or
sub
sbb
out
sti
jnp
movhps
push
out
inc
add
push
pop
fucomi
cmp
xor
sbb
or
cmp
pop
inc
inc
pop
sbb
and
and
adc
push
sbb
dec
pop
sbb
jge
inc
mov
adc
dec
sub
push
cmp
xchg
jge
ss
aad
pop
push
xor
sub
add
test
mov
mov
push
aaa
cmp
outsl
mov
insl
cmp
dec
pop
push
inc
mov
push
push
xor
pop
ds
add
xor
sahf
jge
inc
sbb
and
das
sbb
dec
sub
or
push
aas
cmp
je
push
pop
and
dec
push
int3
sub
sub
popa
pop
outsl
pop
and
test
sub
add
sub
lret
pop
cmp
push
push
mov
jb
push
scas
dec
cli
push
jg
inc
call
push
gs
inc
xchg
xor
cmp
xor
dec
decb
or
xor
or
mov
in
sub
push
push
push
fbld
imulb
adc
cld
ret
sbb
dec
push
movsl
push
and
mov
adc
dec
nop
dec
cwtl
in
push
cmp
pop
adc
push
xorb
push
nop
push
mov
xor
push
push
rclb
loopne
adc
push
push
xor
mov
inc
outsl
jg
pusha
pop
push
mov
shlb
dec
mov
and
daa
testl
hlt
cmp
push
mov
pop
and
xor
cmp
outsl
insl
add
pop
and
outsb
popa
sub
jmp
popa
push
pusha
push
or
popl
push
imul
outsb
or
xor
and
push
or
and
out
push
pusha
nop
mov
out
lock
push
push
xorb
pushw
xor
sub
push
jns
loopne
push
push
push
mov
add
mov
mov
mov
outsb
ss
ds
lock
adc
sub
or
push
aaa
sub
xor
test
call
add
cmp
sbb
inc
cmp
dec
jae
mov
mov
xor
imul
notb
sub
dec
pop
and
mov
sahf
pop
fisttpll
sbb
and
push
inc
cmpsb
cmp
fcoms
fistpl
jmp
sub
mov
sbb
add
jb
xor
sub
rcrl
insb
push
xor
push
and
sub
or
fildll
sbb
sub
pop
pusha
sub
pusha
inc
notl
push
push
or
cmp
daa
inc
inc
pop
pop
sbb
in
push
mov
mov
test
push
aas
out
and
nop
leave
ja
sub
push
inc
cld
xor
out
cmp
fcompl
sub
stos
add
scas
jge
or
int3
cmp
outsb
xchg
scas
scas
inc
dec
pop
adc
adc
mov
andl
mov
pusha
popa
scas
out
jl
sub
mov
or
pop
pusha
sub
dec
or
xor
pop
pop
push
rcrl
inc
sbb
lds
andb
pop
xchg
pushf
add
sahf
adc
inc
or
inc
xor
in
mov
or
ret
inc
cwtl
gs
and
cmp
imul
and
sub
push
or
adc
adc
pop
mov
scas
pop
cld
dec
sbb
adc
xor
sub
inc
mov
mov
lcall
sub
or
sub
xor
xchg
pop
pop
dec
xor
adc
xchg
inc
and
xor
adc
inc
mov
in
fisubs
pusha
addr16
call
imul
ds
or
loop
into
mov
daa
int
xor
stos
cmp
sub
decb
popa
push
sbb
mov
test
leave
or
je
sub
lcall
push
pop
or
in
cli
das
xchg
adc
paddw
xor
repnz
in
push
add
or
ret
hlt
mov
push
adc
push
and
sub
aas
dec
ja
insb
jne
pop
repz
adc
xchg
sub
test
mov
dec
sbbl
push
mov
push
sahf
add
pop
mov
gs
push
shr
push
es
jl
mov
push
lds
dec
test
pop
add
clc
or
rcrb
push
rcrb
dec
sub
test
mov
or
dec
stos
sub
or
sub
sbb
and
test
pop
dec
xor
push
jge
add
cwtl
mov
inc
jnp
or
jmp
adc
dec
inc
pop
inc
lods
add
xor
inc
sbb
adc
addr16
adcl
fdivrp
push
pop
inc
inc
dec
pop
dec
xor
dec
or
sub
clc
sti
cmc
mov
aaa
adc
add
sub
cmp
pop
inc
jp
lahf
out
int
inc
or
xor
pusha
fimull
push
mov
jg
jns
popa
jne
push
xor
ja
and
add
call
idivl
and
loopne
hlt
adc
dec
inc
cmp
push
mov
add
pop
xor
enter
xor
cmp
add
inc
jb
aad
rclb
push
cs
pop
lcall
es
adcl
fwait
push
sub
cmp
push
fs
test
cmp
dec
test
bound
cmp
add
inc
lea
bound
dec
fidivl
or
out
sub
push
dec
test
ja
xor
and
dec
jp
jo
sub
mov
insb
outsl
jb
bound
ds
mov
idivb
imul
and
cmp
add
pop
je
sub
push
outsb
aas
xor
daa
cs
and
xor
js
jge
adc
add
add
jae
es
test
test
ret
inc
and
aas
pop
test
mov
ret
test
sbb
punpckldq
inc
add
addb
pushf
xor
fcoms
jg
mov
mov
xor
inc
add
and
in
pop
xor
or
sbb
xor
das
push
jl
cmpsb
loopne
adc
inc
dec
push
sbb
dec
and
lods
add
mov
pop
and
cmp
div
jmp
mov
jne
mov
pop
sub
and
stos
mov
xor
jle
cmp
push
jnp
fdivrp
inc
aaa
adc
dec
jno
lock
lcall
ss
mov
adc
or
ret
push
pop
leave
and
and
xor
ds
or
inc
pop
inc
xchg
outsb
dec
pusha
sub
push
xor
pop
cs
iret
or
push
fimuls
mov
stos
push
daa
sbb
dec
cmp
jne
sbb
xchg
and
shlb
cmp
sub
pop
cmpsb
inc
inc
loop
pop
mov
pop
dec
mov
dec
inc
ds
call
xchg
add
pop
mov
cmp
addb
and
mov
cwtl
aaa
inc
ds
sub
je
pop
sub
cmp
sub
rorb
adc
inc
xchg
adc
int3
inc
cmp
lds
sub
das
out
fcomip
ds
cmp
push
adcb
sahf
in
std
repz
mov
and
sti
lods
fmulp
into
daa
push
add
lods
mov
cmp
inc
mov
sub
mov
in
push
jo
nop
repnz
fcoml
orl
cmpb
inc
sub
and
mov
or
jo
dec
inc
sub
sbb
sbbb
add
jl
inc
inc
xchg
js
fs
and
add
dec
push
mov
ret
js
out
and
lcall
or
cmp
js
and
outsl
mov
bound
inc
ja
pusha
add
inc
cltd
repz
cmp
mov
sbb
fmuls
push
or
add
add
mov
sub
mov
mov
or
sub
xchg
jo
pop
cmpsl
pop
xor
push
mov
sbb
jg
mov
cmp
mov
stos
inc
daa
testb
xchg
inc
and
testb
inc
inc
dec
sub
inc
dec
inc
sub
sbb
jnp
sub
aaa
mov
push
and
adc
aaa
loop
je
outsl
sub
iret
cmp
sub
mov
ficompl
fstps
and
xor
lds
scas
pushf
pop
mov
push
or
dec
sub
sub
jno
sbb
push
push
jbe
cmp
or
sub
dec
nop
bound
sub
add
bound
insb
or
insl
ljmp
mov
cmp
push
fstpt
pop
dec
sub
cmc
dec
or
sbb
pop
sbb
pop
inc
add
sbb
dec
sbb
pop
sub
fcoml
mov
imul
inc
pop
dec
inc
pop
pop
sub
subb
inc
pop
pop
dec
sub
sub
loope
mov
sbb
adc
cmp
xchg
stos
scas
push
pop
adc
pop
out
cmpsb
or
inc
jg
fists
jns
mov
pop
inc
cmp
lods
pop
jge
sub
xor
and
sub
lret
int3
into
inc
push
inc
filds
adc
out
lds
jo
push
imul
mov
xchg
xor
add
sbb
stos
pop
imul
inc
sbb
lock
add
jae
insl
pop
sub
in
jge
sbb
and
jbe
das
sbb
add
jo
fimull
inc
sub
shll
xchg
inc
movsl
xchg
call
and
mov
jmp
bound
jne
sub
and
cmp
sbb
mov
daa
and
dec
fwait
aad
orl
pop
add
in
in
stos
sub
lea
out
test
ss
add
pusha
mov
pop
insl
shll
xor
aaa
cwtl
sub
dec
push
test
out
or
es
cs
mov
pop
dec
pushf
or
test
lahf
jo
pop
loop
push
cmp
jne
pop
and
and
cmp
push
xor
into
test
dec
jg
js
mov
cmpsb
xor
cs
push
in
aas
ja
xor
and
or
nop
inc
inc
pop
xor
into
movsb
rcr
and
and
aaa
dec
aas
adc
dec
add
adc
cmc
pop
dec
cmp
aaa
call
test
cs
and
sbb
inc
test
cmp
mov
ljmp
sbb
das
icebp
add
inc
mov
or
rorb
mov
pop
in
cmp
cltd
mov
inc
and
hlt
aaa
xor
xor
pop
addr16
ja
push
or
sub
add
xor
aam
inc
insb
pop
dec
push
lcall
icebp
aaa
jo
insl
or
sub
clc
push
add
pop
call
sub
insb
data16
ja
fs
push
int
gs
push
mov
test
inc
add
jp
adc
lahf
xorb
and
xor
loopne
cmc
pop
inc
fidivl
lods
jb
outsb
xor
mov
imul
push
mov
mov
lret
lret
repz
xor
push
and
loopne
iret
ss
cmp
fnstenv
fcmovnbe
fsubl
fidivrs
loopne
push
jo
push
and
xor
jnp
push
icebp
push
inc
out
mov
ss
inc
testb
adc
push
dec
dec
pop
dec
movsl
pop
dec
xchg
shlb
pushl
aam
adc
and
mov
add
adc
aaa
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
insb
dec
xorb
cli
mov
sub
sub
out
inc
mov
mov
sbb
mov
ds
pop
sbb
xchg
jo
mov
std
iret
mov
dec
fsubs
sbb
fcomip
jg
mov
pop
dec
xchg
pop
shl
dec
push
pop
mov
adc
adc
incl
jbe
pop
push
and
xor
aaa
xor
add
jbe
and
add
add
mov
add
push
insl
pop
sbb
out
xchg
imul
pop
push
cmp
dec
cmp
dec
cs
xor
repz
jns
or
clc
add
call
daa
iret
enter
mov
mov
pcmpeqb
scas
cmp
outsb
pop
adc
aaa
int
push
dec
push
dec
pop
int3
ret
call
addl
push
lcall
ss
cmp
xor
sub
sub
xor
inc
xor
test
push
xor
mov
outsl
mov
cmp
insb
jbe
adc
push
outsb
add
mov
ss
mov
mov
jmp
js
push
shrb
test
out
push
xor
push
push
jb
cwtl
push
popf
outsb
jo
popa
push
std
je
bound
mov
xor
ja
fsubs
add
out
and
adc
add
mov
ror
ja
rclb
das
ret
xlat
das
aaa
shlb
pop
pop
es
xor
aas
dec
or
or
sbb
add
or
push
iret
add
mov
daa
enter
inc
sub
loop
das
int3
rolb
xchg
add
rolb
or
add
cmp
pop
lock
and
mov
push
cs
movsb
add
push
mov
or
cmp
and
inc
inc
xor
sub
and
push
sub
push
dec
pusha
rolb
mov
sub
and
sub
das
push
push
lock
pop
in
das
lret
test
and
mov
mov
out
add
mov
outsb
inc
add
pop
dec
inc
je
cmpsl
fxch
fisubrs
push
outsb
pop
or
sbb
sti
mov
outsl
pusha
inc
movsl
and
insb
addr16
cmpsl
jge
subl
sbb
push
xchg
jno
cmp
mov
pusha
jno
mov
dec
dec
xchg
xlat
push
pop
test
mov
lcall
dec
popa
and
xor
or
lods
or
pop
jns
pop
outsb
sub
nop
pop
pushw
gs
or
repz
adc
das
pop
pop
jl
scas
jnp
xlat
fisubs
and
daa
adc
dec
mov
pop
push
push
es
mov
mov
ss
popa
sub
rcrl
mov
in
sbb
sbb
cmpsl
stc
cmp
and
cmp
lds
pop
fwait
inc
dec
insl
inc
cmp
rolb
push
sub
jnp
je
mov
xchg
sbb
addl
iret
jnp
idivl
push
sbb
aaa
sti
cmp
inc
into
xor
ds
repz
mov
popa
fyl2x
out
push
sub
pop
inc
push
jle
repz
inc
insl
xchg
push
push
push
fisttps
sbb
out
mov
push
lods
cs
pop
xor
jge
repz
adc
jne
push
pop
ds
mov
ss
es
pushl
fnstcw
adc
push
das
outsb
cmpsl
xor
pop
sbb
xor
scas
pop
ds
repz
add
aaa
and
cmp
imul
dec
repz
iret
repnz
and
and
cmpsb
and
call
and
pop
test
mov
out
and
cltd
sahf
out
cmp
loopne
xor
dec
repz
jl
movsb
int3
fdivrs
out
icebp
movaps
inc
out
sahf
out
movsb
mov
adc
test
add
adc
decl
pop
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
jbe
pop
loop
test
mov
pop
enter
pop
push
mov
sub
loopne
mov
lahf
negb
adc
push
and
pop
sbb
enter
pop
enter
inc
repnz
iret
pusha
or
and
or
push
dec
addr16
fldt
or
fisubrl
outsb
fdivl
aas
inc
push
mov
std
daa
inc
sbb
testl
rcrl
push
mov
aas
inc
jnp
dec
jae
fisubl
push
sti
xchg
pushf
or
das
inc
jae
fisubrl
dec
lcall
jnp
push
ljmp
cmpsb
dec
add
push
in
lea
push
scas
xor
je
jns
push
loop
out
push
fisttps
jp
das
push
loope
enter
outsb
push
inc
pop
ja
imulb
iret
push
pop
retw
sub
jnp
dec
or
es
sbb
jl
cwtl
lock
dec
add
das
push
dec
inc
dec
cmp
cmpl
push
ds
pop
cs
adc
ja
out
push
cmp
pop
insb
je
push
mov
popa
jo
jae
es
outsl
and
inc
movb
cmp
or
push
cmpsb
mov
mov
out
mov
xor
xor
xor
xor
cmp
cmp
add
outsl
push
xor
xor
cmp
push
mov
xchg
push
test
push
pop
adc
inc
fcoms
and
inc
push
inc
sub
sub
bound
jb
or
add
ret
pop
adc
add
add
jne
into
cmp
mov
scas
and
cmp
jmp
int
cmp
adc
es
xor
push
jp
dec
dec
jge
ja
inc
xor
pusha
std
sub
add
mov
cmp
xchg
jp
outsb
aas
dec
ss
pop
add
add
sbb
jbe
mov
jmp
orl
or
pop
inc
adc
aas
in
push
push
cmp
dec
sub
xor
int3
call
mov
sub
xor
inc
test
pop
lods
and
call
dec
sbbl
popa
xchg
rclb
sub
mov
xchg
out
sub
sarl
jecxz
add
sahf
mov
adc
or
stos
shrw
mulb
pop
fcomps
push
mov
popa
in
pop
sub
push
fbld
in
pusha
xor
pop
sub
inc
cmp
mov
inc
popa
pop
or
mov
pop
shll
xor
pop
pop
inc
mov
les
pop
in
push
xor
jo
cmp
aaa
mov
mov
aaa
or
lahf
scas
pushl
and
add
insl
mov
stos
sub
dec
inc
daa
or
or
adc
add
das
divl
iret
mov
lods
inc
and
int
ret
nop
fisubrl
jno
mov
das
popa
push
sbb
inc
lods
js
push
das
dec
cmp
lock
ss
out
sbb
add
push
repnz
aas
sub
daa
nop
mov
or
fadd
roll
add
rcr
fidivs
adc
cltd
daa
lahf
or
mov
jnp
push
xor
xor
adc
pop
addr16
lods
pop
jg
mov
jge
lds
outsl
in
es
inc
fs
inc
mov
imul
and
xor
adc
lret
dec
inc
js
inc
jle
pusha
push
test
mov
adc
jp
xor
js
jl
icebp
xor
dec
jl
test
outsb
and
dec
or
sub
das
shr
and
push
adc
fistps
js
xchg
ja
mov
dec
ret
pop
shll
adc
add
mov
adc
ja
cmpsl
stc
xor
fmuls
mov
in
mov
sub
iret
and
xchg
lock
loop
xor
ret
out
push
or
loopne
das
das
into
mov
pop
sub
or
mov
mov
outsl
pushf
lsl
push
push
ret
jnp
pop
adc
sbb
sbb
fisubs
das
pop
adc
jp
icebp
dec
enter
addr16
addr16
cmp
rcrb
inc
data16
and
mov
idivb
inc
dec
jns
mov
adc
or
pushf
pop
inc
test
aad
test
add
dec
cwtl
outsb
xor
push
push
and
or
push
sub
ret
sbb
sbb
test
imul
outsb
loope
push
add
adc
movsb
pop
push
sub
iret
cmp
nop
pushf
push
pop
sub
dec
shlb
xchg
out
jae
ret
imul
lock
ficoms
sbb
aam
and
and
les
or
dec
lock
cs
rcll
mov
jecxz
loopne
or
jnp
push
adc
mov
or
pop
pop
int3
scas
enter
xorb
push
dec
fnsave
adc
pop
mov
mov
push
cmp
repz
lret
sub
dec
mov
jbe
in
adc
pop
inc
pop
push
test
imul
push
mov
sub
pop
or
sbb
pop
mov
push
pusha
bound
and
fs
data16
pushf
push
and
add
and
sub
enter
cltd
ret
push
sub
sbb
sbb
inc
lret
adc
andl
inc
and
pop
sub
dec
sbb
fsts
push
jno
push
das
push
xchg
loope
js
mov
and
lahf
pusha
push
ja
pop
pop
sbb
xorb
or
sbb
cmp
push
sub
pop
adc
mov
lcall
xor
add
rcll
je
cmpl
add
lock
mov
test
push
ds
push
inc
push
sbb
sbb
movups
out
push
and
ds
repz
andl
out
dec
cltd
or
xchg
insb
pop
add
add
insl
ss
int
or
adc
sbb
and
sub
xor
inc
mov
sti
out
mov
mov
mov
ss
int
popa
xchg
sbb
sub
add
fldcw
xchg
pop
adc
insb
ss
and
add
add
push
dec
str
fldcw
add
inc
stc
das
incl
push
inc
lock
call
arpl
push
cs
and
jbe
push
xor
sub
adc
es
mov
xor
push
sbb
xor
pop
xchg
push
jg
jb
jo
lcall
les
fs
jbe
cs
add
sti
jl
cld
or
add
ret
pop
add
subps
adc
imul
add
add
pop
add
lods
mov
push
pop
xor
or
pop
and
jg
or
sbb
dec
pop
inc
sub
xor
sbb
sub
push
and
cld
ljmp
adc
ds
inc
inc
sub
xor
add
xor
push
xor
sbb
hlt
add
xor
push
add
cmp
sar
jmp
cmp
pop
adc
sub
push
inc
inc
fbld
mov
dec
xor
inc
and
sub
push
dec
xor
cmp
push
pop
dec
push
cmp
cmp
push
dec
sub
ds
inc
pop
daa
or
cmp
inc
dec
and
push
ds
adc
pop
sbb
sub
sub
sub
cs
inc
loop
ja
enter
bound
orb
add
pop
add
test
dec
and
pop
push
decl
fdivs
cmp
sbb
xor
and
adc
push
or
xor
fcomp
cmc
push
dec
loopne,pn
mov
in
dec
sbbb
mov
shrb
adc
test
cmp
dec
ss
xor
sar
pop
cmp
fisubrl
rcrb
xchg
push
push
dec
or
outsl
inc
mov
popa
mov
sbb
andl
mov
lret
xor
rcrb
xor
mov
pop
or
jns
pushl
jecxz
inc
adc
inc
push
dec
inc
dec
push
dec
shlb
add
add
mov
pushl
mov
sub
mov
inc
aaa
jno
sti
shlb
ret
lods
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
ljmp
jle
mov
jge
push
je
mov
andb
fwait
rol
fwait
jg
cmp
out
popf
rorl
and
sub
sub
pushl
test
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
lcall
cmpsl
aad
arpl
push
addr16
adc
or
cs
insl
sub
adc
pushl
gs
leave
ret
sub
xchg
mov
data16
mov
call
cltd
test
push
push
shll
ja
daa
mov
mov
xlat
jg
mov
cmp
fmuls
lret
rep
cs
jg
movsl
js
js
test
add
mov
mov
movsb
mull
jno
addr16
push
out
clc
incl
rep
cmp
cmc
dec
movsl
jg
push
mov
fwait
stos
flds
lcall
push
insb
push
xor
je,pt
inc
ja
icebp
incl
jl
insl
and
cs
es
xor
dec
pop
jge
sub
inc
lcall
xor
data16
jbe
fs
loopne
inc
imul
xor
outsb
jns
gs
cmp
xor
inc
dec
pop
dec
cmp
jp
sub
and
cmp
jno
inc
icebp
pop
popa
shlb
jle
or
mov
inc
or
pop
xor
cmp
sub
pop
push
aaa
cmpsl
shlb
push
xor
inc
repnz
mov
inc
sbb
ja
pop
fstp
adc
pop
fucomp
fnstenv
pop
daa
add
dec
push
or
icebp
popa
pop
dec
outsl
fs
and
lar
xor
and
popf
push
push
aaa
push
xor
inc
add
xor
sahf
xchg
cmpsb
push
xor
xor
xor
fldl
inc
xor
and
aaa
inc
push
inc
lcall
pop
cmovb
pop
sbbb
ss
lahf
ss
fldcw
and
leave
add
sbb
sub
aam
fadd
js
push
enter
xor
sbb
sahf
xor
mov
inc
lock
addr16
cmp
cmp
dec
and
xchg
xor
xchg
testl
lcall
or
in
push
orl
mov
daa
pop
fs
cmp
jle
or
xor
and
subb
in
mov
mov
xor
pushf
push
movsb
sub
pop
or
push
cmp
or
mov
sbb
adc
xchg
jne
or
cmpsl
and
aam
inc
test
outsb
push
inc
ja
cwtl
sbb
inc
sbb
sahf
add
mov
faddl
sbb
aaa
push
mov
lods
xchg
mov
sub
add
mov
sahf
mov
pop
sbb
sub
add
dec
sbb
sbb
add
pop
cmp
scas
idivb
orb
lret
fisubs
roll
pop
inc
inc
xorb
push
outsb
xor
inc
mov
push
pop
mov
and
xor
mov
pop
pop
lods
xchg
in
push
les
inc
mov
cmp
lock
into
pop
add
add
outsb
aas
jmp
dec
adc
in
inc
jne
or
sbb
xor
outsl
add
dec
sahf
and
adc
enter
or
inc
adc
lds
into
adc
or
sub
mov
sub
pop
loop
sbb
bound
add
lahf
or
jbe
outsb
outsb
je
xor
js
xor
imul
sbbb
loop
js
sarl
cwtl
mov
fisubs
push
inc
mov
mov
adc
xor
insl
loop
and
push
icebp
out
es
adc
aad
inc
outsl
insb
jb
popa
je
xchg
icebp
push
shlb
aaa
loope
or
dec
inc
cmp
sbb
negb
dec
add
adc
gs
pop
pop
out
mov
je
enter
pop
or
sub
add
inc
pop
les
xor
aad
or
outsb
popa
inc
shlb
cs
enter
push
and
ficoml
sub
int
dec
inc
adc
pop
mov
adc
cld
or
mov
dec
mov
cmpsl
icebp
fs
inc
rcrb
xchg
stos
or
nop
pop
mov
xchg
sbb
and
sub
call
jo
or
loope
mov
addl
popa
dec
cli
pop
xchg
mov
jb
pop
sti
pop
adc
pop
inc
jne
mov
xor
mov
xor
dec
and
pop
mov
icebp
or
xlat
lods
xor
xor
ret
jl
push
fimuls
cmp
dec
sub
adc
pop
adc
pop
dec
push
sbb
jbe
test
call
test
aaa
daa
and
jbe
jo
push
xor
mov
inc
and
imul
sub
es
cmpsl
adc
jb
bsr
mov
test
sbb
in
aas
aam
fcomps
pop
xor
and
ss
push
dec
push
and
in
data16
push
rclb
sub
push
xchg
or
movsb
mov
mov
inc
jbe
cmp
je
add
cmp
inc
pop
lods
mov
push
ds
hlt
sbb
xchg
push
pushf
push
xor
mov
dec
sahf
mov
sbb
push
imul
test
sbb
ja
dec
in
add
int3
scas
scas
pop
xchg
dec
lret
sahf
xor
adc
imul
sahf
outsb
push
xor
add
xchg
scas
sub
fs
adc
aaa
neg
fsubs
push
pop
pop
xchg
sahf
mov
lds
out
pop
pop
pop
pop
inc
adc
sub
pop
xchg
movsl
or
dec
pop
dec
insl
xchg
enter
imul
test
cs
in
ret
cmpsl
insb
add
sbb
push
movsb
xor
aad
mov
aas
std
mov
dec
cmpsl
and
movsl
pop
inc
inc
add
in
std
dec
push
mov
loopne
dec
and
mov
cmpsb
mov
sub
sub
inc
dec
rorb
mov
add
inc
and
inc
add
or
add
jo
pop
out
and
lcall
aaa
mov
xchg
or
sub
xchg
mov
fs
mov
das
and
addr16
popa
dec
popf
fcmovu
mov
outsl
and
and
push
cmp
add
dec
outsb
adc
je
scas
pop
loopne
cltd
test
in
std
jg
sub
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
jns,pn
dec
sbb
jb
gs
xchg
aad
xchg
inc
add
pop
or
fwait
pop
daa
dec
and
add
push
dec
jb
rol
pusha
and
cmp
pop
seto
fadds
rclb
or
pop
and
sahf
mov
pop
orb
popa
lock
inc
and
test
xchg
pop
adc
aaa
inc
adc
jns
jb
lret
push
adc
testb
cmp
insl
or
mov
loop
fcompl
ljmp
addr16
lret
mulb
mov
mov
stos
ja
mov
cs
sahf
out
push
mov
add
mov
inc
insl
xlat
pop
mov
pop
push
or
cmp
cmc
add
cmp
sbb
sub
add
push
or
pop
or
add
xchg
adc
cmpb
out
dec
adc
lock
pop
or
inc
dec
dec
and
sbb
dec
add
aam
sub
rdpmc
pusha
bound
cmpsb
push
adc
xor
sub
out
and
inc
and
js
or
xor
movsl
insb
pop
mov
pop
jne
dec
or
adc
push
cmc
cmp
les
or
icebp
fisttpl
adc
cmpsl
loopne
fcomps
pop
pop
stos
arpl
or
pop
push
lods
imul
adc
inc
outsb
test
jp
pop
insb
and
or
xlat
mov
fimull
outsl
scas
push
icebp
adc
fiaddl
xlat
sbb
or
imul
mov
jl
and
push
das
xor
xor
dec
and
mov
dec
or
jecxz
and
or
fistpl
sti
mov
inc
outsw
insl
pop
xor
push
loopne
stos
dec
and
xor
push
mov
das
cmpb
dec
dec
inc
mov
andl
push
stos
sti
cmc
arpl
gs
cmp
or
dec
or
fldt
push
xchg
idiv
notl
push
jno
cs
dec
sbb
pop
and
push
dec
fucomip
fstpl
dec
xchg
dec
inc
xadd
sbb
inc
pushf
sbb
mov
inc
imull
or
lock
adc
outsl
fcmovnb
fiadds
nop
jo
maxps
addr16
sub
dec
add
inc
popf
cmp
xor
jl
mov
add
outsb
aas
add
test
addr16
movsb
aam
add
fistpll
push
lock
or
movsb
add
mov
sub
aaa
cmp
out
mov
daa
test
push
dec
js
test
pop
pop
outsl
pop
mov
inc
rorb
pop
int3
aas
int
arpl
mov
dec
data16
dec
inc
inc
dec
scas
in
cmp
dec
scas
in
sub
scas
in
scas
and
add
fldt
clc
aas
push
js
ds
shrl
aas
mov
enter
fisubrs
inc
ss
inc
pushf
ds
ds
fs
cmp
out
dec
loopne
test
push
cmp
iret
cmp
jns
cmp
cmp
test
repz
cmp
push
lods
nop
icebp
jns
out
cmp
enter
push
push
inc
adc
add
cs
jecxz
or
out
dec
inc
pop
shlb
pcmpeqd
dec
rclb
add
movsb
stc
cmp
fmuls
add
push
repnz
add
or
xchg
imul
out
or
clc
push
cmp
mov
add
roll
jg
fldt
cmp
lods
or
xchg
mov
dec
outsl
xchg
push
xor
aam
inc
lock
add
adc
sbb
dec
outsl
add
sub
mov
inc
or
iret
test
jo
mov
fbstp
fsubrl
cmp
xchg
cmp
cmp
ss
add
cmp
mov
push
cmp
cmp
xchg
popa
scas
add
dec
outsl
out
cld
cmp
xor
ficoms
fucomip
lods
cmpsl
aaa
sahf
repnz
rol
add
pop
in
fmuls
pop
scas
add
insb
push
ljmp
add
sbb
sbb
xchg
enter
and
adc
aam
lcall
sahf
sub
mov
add
adc
sub
xor
movl
push
pop
pushf
xor
lods
fs
mov
or
mov
add
sub
enter
or
ja
inc
pop
leave
sub
sub
ds
dec
fbld
xchg
fbld
test
scas
jo
and
nop
inc
xchg
jmp
sub
fdivs
and
outsl
ret
xchg
or
out
mov
add
pop
mov
cmpsl
adc
call
inc
out
mov
aad
mov
fistpl
mov
idiv
aam
fsubl
leave
mov
mov
fcomps
pop
movl
repz
pop
scas
inc
inc
push
pop
inc
mulb
xor
adc
jg
push
mov
pop
mov
popa
dec
mov
push
test
pop
pop
leave
mov
add
enter
jbe
hlt
inc
enter
add
divl
or
xor
inc
outsl
mov
aaa
push
push
outsl
jg
in
add
xchg
pop
nop
xchg
daa
in
pop
stos
or
or
push
je
push
aam
clc
xor
inc
in
enter
dec
ja
jbe
inc
push
jl
xchg
push
add
adc
or
pop
dec
inc
adc
or
xlat
pushf
nop
push
ret
or
inc
mov
mov
or
pop
push
cmp
inc
xchg
test
add
xchg
adc
rorb
daa
sbb
pop
sub
mov
testl
and
add
repz
adc
add
inc
loopne
pop
pop
scas
loopne
push
xor
mov
or
cwtl
aaa
and
cmp
lods
add
pop
inc
outsl
scas
or
addr16
adc
inc
mov
jns
dec
xor
outsl
xchg
pusha
fstl
jg
scas
in
pop
add
mov
add
mov
cmp
enter
xchg
movsb
pusha
and
dec
dec
and
dec
sub
push
pop
inc
cs
push
sbb
loopne
repnz
fsubrs
mov
stos
push
pop
pop
adc
aaa
bnd
pop
js
ss
test
sub
pusha
ret
aaa
add
mov
aaa
les
dec
cs
cmpsl
add
xchg
popa
imul
xlat
add
andb
iret
scas
mov
dec
out
pushf
inc
daa
or
in
add
jns
add
xchg
lods
pop
and
repz
fmuls
aam
push
inc
sub
je
jns
dec
pushf
dec
sub
and
pushf
mov
inc
or
dec
cmpsl
jb
xchg
aas
or
je
pop
fs
je
push
dec
mov
popa
inc
outsl
add
cmpsb
nop
fwait
pop
or
fistps
enter
mov
pop
jb
aam
vprotd
add
add
pop
add
dec
lahf
jo
leave
mov
movsl
dec
pop
scas
add
and
lods
outsl
out
adcb
fwait
insl
sub
out
lahf
addr16
mov
or
in
cltd
nop
push
pushf
inc
and
daa
enter
or
dec
or
push
jl
movsb
dec
lfs
in
push
hlt
outsb
rclb
out
fsubrl
in
addr16
jbe
insl
and
pop
adc
das
sub
cmp
dec
jnp
push
and
cwtl
push
sarb
add
dec
sbb
sub
dec
das
mov
add
inc
mov
push
hlt
fnsave
xchg
jne
fimuls
in
scas
cld
data16
loopne
push
pop
xlat
data16
ret
popa
adc
fcmovnu
les
push
dec
pusha
push
push
mov
addr16
xor
aas
pop
out
aaa
fwait
insl
shll
xor
fistl
add
add
dec
data16
cmp
sahf
loope
and
out
sahf
inc
cmpl
push
jno
scas
jns
iret
repz
and
fdiv
cmp
out
adc
data16
repz
iret
sti
inc
dec
xchg
in
push
iret
repz
push
xchg
out
lcall
fwait
iret
sarl
popa
xchg
push
adc
xor
insb
pushf
xlat
pop
push
jl
out
aaa
bound
cmp
shll
dec
ja
or
ds
repz
decb
xor
out
jbe
fimull
pop
dec
imul
lds
pop
inc
repz
out
mov
out
ds
jns
add
iret
repz
jno
pop
jp
roll
int
jns
pop
inc
insl
loopne
pop
xor
fistpl
fwait
sbb
cmpsl
stc
xor
pop
bound
mov
fs
enter
sahf
out
gs
add
push
sbbl
jne
cmp
out
mov
fistpll
stc
pop
push
fsubs
jns
iret
shrl
subb
out
call
mov
int
out
adc
adc
repz
out
and
mov
out
jb
int
push
jae
jns
dec
les
je
fwait
xor
imul
jbe
pusha
ja
out
out
push
scas
loope
js
push
mov
jnp
mulb
jns
jp
cmp
xor
cmpsl
stc
cmpb
inc
jl
jge
cmpsl
stc
xor
mov
sarl
push
rclb
enter
jns
subb
or
cmp
roll
adc
int3
lahf
cmpsl
stc
out
mov
test
clc
xor
movsl
lcall
cmpsl
stc
cmp
or
out
jl
mov
sbb
repz
push
mov
enter
stc
add
push
cmpsl
stc
xor
call
xchg
repz
dec
xchg
js
xchg
sarl
xor
pop
sarl
and
pushf
mov
jns
iret
incb
test
adc
dec
mov
sarl
out
mov
idivl
dec
jle
add
out
jnp
fwait
int
leave
jbe
mov
sarl
loopne
test
loope
ss
in
insl
lods
mov
scas
jae
add
fcomp
enter
nop
dec
inc
pop
rclb
out
cwtl
push
cmp
rorl
iret
add
fmull
push
add
mov
cmp
sbb
push
push
dec
jns
fucomp
orps
pop
ja
dec
iret
in
in
mov
push
pop
and
xchg
pextrw
dec
ret
xor
cs
jns
pop
xor
out
xchg
or
dec
ss
dec
mov
adc
icebp
test
adc
jb
inc
iret
movsb
push
inc
and
xchg
inc
mov
int3
push
xchg
int
adc
aaa
das
in
mov
enter
das
cmp
cmp
mov
xor
pop
cli
or
outsl
mov
inc
out
orb
and
int3
jg
push
mov
push
mov
inc
pop
btc
in
fmuls
pop
into
push
fistpll
je
cltd
addl
in
sbbl
aas
pop
scas
mov
or
mov
mov
mov
aas
mov
pop
enter
mov
jbe
fs
ljmp
aas
cmp
add
push
inc
sti
int3
push
push
loop
pop
aad
cs
inc
test
mov
insl
comiss
fstpl
mov
daa
les
pop
or
add
aas
incb
out
iret
jp
dec
call
sarl
mov
inc
adc
lret
jb
and
push
test
ret
mov
arpl
mov
jb
mov
or
pop
hlt
push
and
in
inc
jnp
aas
lods
and
cmp
aas
pop
in
dec
int3
and
xchg
mov
adc
iret
gs
and
fiaddl
aas
rolb
add
sbb
sbb
pop
iret
dec
insb
outsb
dec
pop
cmpsl
or
iret
fwait
mov
sbb
add
push
sub
das
outsl
lock
inc
roll
dec
pop
push
push
scas
pop
stos
inc
cmp
les
ds
cmpsb
pop
ficoml
nop
stc
inc
out
jb
and
sub
sbb
cmp
pop
jnp
inc
aam
mov
jns
das
out
cmp
pop
cmp
jmp
popa
push
add
add
cs
out
jns
add
pushf
dec
dec
dec
dec
movsb
lods
mov
add
xlat
addr16
push
xchg
inc
sbb
dec
xor
dec
ja
pushf
test
push
mov
les
add
mov
rorl
push
mov
pop
xchg
push
pop
jmp
pop
push
push
mov
fsubrs
mov
jb
dec
leave
push
push
pop
add
add
and
pop
pop
sbb
dec
inc
sahf
xchg
pop
repnz
inc
mov
add
inc
and
pop
add
pop
mov
das
movsb
dec
and
repnz
dec
add
add
xchg
pushf
loopne
adc
dec
sbb
cmpsl
scas
or
pop
add
pop
cwtl
and
cmc
imul
dec
orl
push
add
jns
out
push
mov
loopne
into
xchg
or
leave
and
and
inc
push
pop
inc
in
je
inc
push
daa
fs
leave
and
inc
lods
pushf
outsb
xchg
enter
inc
xor
ret
addr16
push
mov
fildl
dec
sub
mov
mov
xchg
dec
lahf
xchg
daa
pop
leave
push
vpmullw
cmpsb
add
add
repnz
push
cwtl
push
dec
inc
mov
push
dec
es
cs
ss
mov
ds
in
xchg
xchg
xchg
xchg
popa
imul
orl
mov
mov
outsb
mov
int3
cmpsl
aam
fdivl
in
and
push
add
xorb
aaa
push
mov
xor
jb
push
dec
push
xchg
add
xlat
mov
aaa
push
daa
jl
movsb
bound
mov
pusha
or
mov
jb
add
arpl
in
jb
out
push
arpl
int
and
push
cmpsl
sbb
add
xchg
add
and
nop
xchg
iret
add
mov
and
test
sbb
leave
cmp
stos
push
xchg
inc
repnz
pop
inc
jl
cmpsb
xchg
jb
fs
xchg
iret
in
dec
dec
xlat
fists
out
popf
dec
dec
jb
push
les
adc
mov
xor
aas
leave
or
divl
cmp
dec
dec
fs
gs
je
in
pusha
add
lods
pop
jle
mov
ret
push
pop
pop
pop
pop
into
push
fsts
push
out
push
out
pop
pop
cli
push
add
sahf
out
sahf
sbb
or
or
sahf
out
cmp
inc
push
push
out
sahf
out
pop
adc
sahf
out
sahf
jae
jle
mov
sahf
out
cltd
adc
jns
out
ret
sbb
sbb
dec
shlb
cltd
push
dec
aam
push
xor
dec
and
add
add
in
inc
inc
pop
lods
int3
inc
fistl
out
and
iret
push
out
xchg
fcoml
pop
daa
fs
sub
sbb
jecxz
divl
jg
xchg
pop
xor
ja
push
add
aas
add
sahf
inc
ds
push
pop
mov
lock
add
inc
out
xor
adc
dec
fwait
dec
push
fs
mov
leave
inc
repnz
mov
fidivrs
add
mov
imul
fmuls
or
inc
in
je
mov
lods
scas
xchg
dec
cmpsb
in
addr16
in
adcb
add
addr16
outsl
push
jae
dec
dec
cmp
mov
pop
leave
jo
mov
xor
loopne
das
lock
mov
clc
stos
push
leave
mov
cltd
sysret
pushf
xor
xchg
mov
clc
push
jo
imul
imul
inc
repnz
flds
imul
repnz
pushf
imul
inc
push
mov
outsl
testb
nop
leave
add
cmp
jns
hlt
add
pushf
loop
repnz
es
aas
cs
add
mov
cmovbe
enter
mov
add
pushf
xchg
iret
pop
cmp
test
pushf
xchg
add
mov
mov
xchg
pop
xchg
mov
in
insl
rclb
pop
leave
and
aad
fs
pop
cwtl
ja
psrld
cmp
les
pop
clc
iret
outsb
xchg
push
jb
dec
xor
and
leave
add
jmp
in
and
outsb
cs
inc
dec
ss
hlt
ds
inc
add
cltd
pop
addr16
les
mov
push
out
sub
inc
pop
outsl
seto
outsl
in
lret
and
movsb
outsl
adc
lret
lret
lret
sbb
pop
ds
xchg
cmpsl
mov
jno
out
sbb
popf
pushf
dec
and
xchg
mov
pop
jb
bsr
lds
aaa
pop
jb
call
add
es
in
lods
dec
cmp
inc
fdivs
shlb
in
enter
test
jno
rcr
and
push
daa
inc
mov
popa
pop
imul
add
xchg
pop
xchg
xchg
xchg
scas
scas
pushf
pop
movsb
pop
lods
pop
mov
xchg
xchg
xchg
pop
mov
pop
aam
xchg
xchg
xchg
pop
fcompl
in
pop
hlt
xchg
xchg
xchg
xchg
pop
cld
pop
add
or
adc
shrb
pop
sbb
femms
jb
jb
or
jb
jb
or
push
jb
jb
add
arpl
add
addr16
mov
in
jno
addr16
xchg
outsb
mov
jb
push
jb
xchg
cmp
call
dec
cs
mov
dec
cs
idiv
ja
cwtl
xchg
pushf
jecxz
and
cmp
imul
push
addr16
fistl
je
mov
nop
inc
into
jo
das
xchg
mov
mov
mov
int
add
pop
fadds
pop
mov
je
mov
sbb
fisubl
cmp
pop
lahf
sub
ja
stc
fsubrl
dec
push
add
jno
jns
addl
mov
push
setae
mov
or
jns
jns
or
psrlq
xchg
imull
mov
cmovle
adc
mov
inc
dec
push
aas
sub
push
pop
out
ret
popf
mov
push
clc
es
dec
cmp
jbe
dec
jns
ret
adc
das
incb
pusha
cmp
iret
sbb
push
add
and
andb
repz
xor
pusha
inc
repnz
scas
das
dec
pusha
push
in
jae
out
pusha
orl
xchg
add
pushf
pushf
fabs
jmp
in
jle
stc
add
or
pop
and
xchg
pop
outsb
adc
sub
and
inc
popa
dec
popa
push
popa
jo
in
enter
popa
xlat
je
jg
mov
add
xchg
xchg
xchg
popa
popa
popa
popa
xchg
xchg
xchg
xchg
popa
popa
popa
popa
xchg
xchg
xchg
xchg
bound
bound
xchg
xchg
bound
bound
movd
das
xchg
lock
add
xchg
jl
js
lret
loope
add
js
adc
inc
mov
cmp
inc
daa
iret
jae
cmovns
push
push
pop
popa
sub
out
arpl
repnz
jmp
jns
arpl
pushf
in
mov
test
sahf
pop
xor
outsl
clc
add
fwait
in
push
fs
inc
xor
push
fs
cld
andb
jb
fs
cwtl
mov
lock
scas
mov
mov
fs
mov
in
xchg
lock
push
and
in
pop
jb
gs
and
stc
faddl
out
mov
mov
in
in
and
jmp
ja
pop
and
add
mov
cmp
addr16
lea
lds
push
imul
sub
push
dec
push
xlat
je
enter
jl
out
daa
adc
pusha
mov
scas
test
jae
jb
lret
in
or
data16
lret
pop
cmp
addr16
or
sbb
and
cmp
in
addr16
addr16
imul
addr16
mov
adcl
or
or
fptan
in
in
out
cli
add
cmp
push
xor
psubw
fistpll
pop
jge
xchg
out
data16
int3
mulb
dec
nop
push
ja
push
mov
xchg
mov
adc
fimuls
out
add
lea
add
xchg
xchg
cmp
cmp
add
push
sahf
out
xchg
imul
cltd
loope
dec
fwait
imul
cmp
mov
fadd
imul
pop
push
push
rcrl
jo
xor
nop
sbb
push
pop
cwtl
hlt
dec
pop
lock
call
out
repnz
iret
mov
out
ret
int
xor
das
push
imul
push
lcall
verw
inc
jbe
imul
ss
jns,pt
leave
repz
or
or
ret
or
pop
imul
outsb
pop
leave
jo
mov
adcl
mov
lds
cmp
int
dec
enter
clc
sub
repnz
insb
sub
xchg
sbb
insb
mov
cmp
outsl
xchg
jp
jo
xchg
cmp
popf
movsl
pushf
dec
mov
cmp
shrb
pushf
pushf
fsub
insb
xchg
inc
mov
cvttps2pi
jno
out
add
jg
insl
cmp
test
dec
insl
mov
jae
fwait
sub
fbstp
repnz
iret
add
js
jb
cmpsl
scas
insl
pop
lret
lret
lret
lret
mov
mov
insl
cmp
mov
xlat
insl
fistps
ud2
or
cmp
cmp
or
push
cmp
cmp
add
sahf
out
sbb
sbb
sbb
jns
out
sbb
sbb
cmp
push
pop
mov
pushf
pushf
cmp
daa
das
and
hlt
cmp
aaa
and
outsb
in
repnz
and
pop
jb
outsb
test
mov
scas
outsl
iret
push
add
dec
ds
xlat
outsb
outsb
outsb
dec
sahf
xchg
out
pop
out
mov
or
test
inc
into
icebp
sub
cmp
dec
outsb
cmovge
push
scas
xchg
data16
test
outsl
outsb
xchg
xchg
xchg
outsl
outsl
outsl
aas
test
cmp
movzwl
enter
shrb
or
cmp
out
fmuls
call
outsb
clc
adc
invd
jo
adc
pushf
loopne
xorl
jo
cmp
repnz
insb
xchg
xorl
jo
repz
mov
scas
push
dec
ds
cmp
or
test
in
insl
ficompl
iret
add
sbb
repnz
adc
push
sub
aad
filds
push
stc
lahf
or
inc
notl
push
push
loopne
jmp
inc
cmpsl
loope
dec
call
addr16
mov
addr16
xchg
sbb
xchg
xchg
leave
sub
mov
pushf
test
add
jb
jb
ret
xchg
and
xor
inc
jb
in
sbb
pop
pushf
pushf
fsubrl
ja
jg
cmp
push
sahf
xchg
jb
ret
xchg
xchg
lock
mov
aas
xchg
add
pop
and
leave
enter
mov
add
mov
in
push
scas
pop
mov
add
jns
add
lock
mov
fcmovne
sub
jae
xor
cmp
sahf
out
sahf
inc
add
add
pop
fs
je
jns
out
jl
test
xchg
or
cmp
jae
adc
jp
jae
sub
in
jae
jae
psllq
xor
add
add
mov
cs
xchg
incb
mov
lock
jbe
mov
aaa
jns
fistpl
pusha
add
cmpb
dec
aaa
jo
js
inc
dec
repnz
fnsave
shll
cmp
aam
das
clc
xchg
inc
jb
adc
sbb
mov
jne
mov
jne
dec
imul
jmp
aas
iret
mov
mov
jae
cmp
pop
or
pop
fmuls
cltd
or
andl
pop
push
pop
pop
mov
mov
aaa
roll
or
popf
cmp
add
push
or
and
sub
inc
jbe
dec
jbe
enter
adc
scas
insb
jbe
cmp
je
add
mov
cmp
add
add
dec
sahf
pop
movsb
lods
pop
mov
mov
ds
or
or
aam
mov
jbe
cmp
mov
jg
enter
pusha
ja
ja
ja
push
pop
popf
out
add
ja
mov
sbb
push
ja
ja
mov
jnp
pop
xorl
jbe
cmp
cmpsb
iret
add
vphaddubw
add
or
nop
inc
push
jns
out
jo
dec
cltd
sbb
addr16
add
mov
js
js
js
and
xchg
iret
add
popl
stos
ret
push
leave
cld
pop
jo
dec
push
popa
pushf
fcmovnu
adcb
add
pop
pop
mov
in
sub
jns
leave
leave
mov
jecxz
dec
cmp
js
out
out
js
xchg
int
iret
or
leave
pop
and
cld
or
loopne
sbb
bswap
enter
jns
jns
enter
jns
jns
aad
lret
enter
jns
pop
iret
sbb
cmp
jns
xlat
push
push
loop
inc
pop
cmp
clc
jns
and
pop
xchg
dec
leave
inc
repnz
jo
mov
enter
mov
mov
sbb
jp
jp
jp
jp
in
add
fdivrs
incb
fs
rclb
or
rclb
enter
jnp
jnp
jnp
mov
xor
jnp
jnp
jb
mov
pop
push
pop
push
jnp
jnp
jae
cmp
push
jb
or
jnp
xchg
pop
jae
inc
es
mov
add
pop
leave
movsb
loopne
pusha
stos
sbb
jg
das
jl
sbb
adc
sub
mov
iret
add
cmp
stos
test
inc
xchg
dec
and
lahf
or
xchg
xchg
pusha
fsubrl
mov
pushl
fmulp
repz
ficompl
lods
iret
mov
out
or
outsl
sbb
add
sub
add
fs
or
push
pop
out
mov
scas
cmpsb
add
dec
sahf
xchg
push
cmp
cmp
xchg
pushaw
idivb
pop
in
and
rcr
push
jmp
add
pushf
push
jle
jle
pop
cmovge
xchg
cmpsl
add
aas
jle
inc
pushf
je
mov
jb
jl
popf
jp
add
cwtl
xchg
push
insl
jb
ja
jle
orb
mov
out
in
in
cld
xchg
pop
lldt
or
and
sbb
jb
jg
xor
jg
jg
jecxz
mov
dec
and
jge
test
lods
mov
mov
pop
jg
sbb
aaa
push
lcall
shlb
loopne
jmp
xchg
fisttpl
add
lahf
add
subb
and
cmpb
inc
pop
dec
dec
sahf
out
add
xchg
ja
lar
mulb
cmpb
mov
ja
pop
leave
jae
cld
mov
xchg
jl
cltd
cmovnp
ja
into
in
inc
and
mov
lcall
shrb
pop
push
leave
in
mov
addr16
dec
es
iret
add
lcall
push
and
cmp
mov
inc
pusha
sbbb
cmp
cmpb
mov
push
push
cltd
lsl
mov
or
mov
mov
ja
scas
xchg
enter
sahf
out
rolb
add
xchg
and
subl
xor
shrb
sgdtl
pop
pop
pop
jle
cmp
push
subl
pop
pop
andl
pop
psllq
xchg
or
js
push
iret
repz
adcb
sbb
cmp
mov
inc
aaa
ret
mov
das
push
cmpsl
fwait
jmp
repnz
sub
push
adc
enter
lds
lcall
sbb
cmp
test
xchg
and
pusha
pop
push
sahf
out
or
or
cmp
mov
or
cmp
cwtl
push
mov
lahf
sahf
out
mov
adc
mov
add
mov
aaa
sub
lock
jg
outsl
pop
test
arpl
out
in
mov
dec
into
push
lcall
sahf
iret
loopne
pslld
leave
sbb
cli
add
iret
repz
xor
cmp
push
add
xchg
sbb
jb
xchg
xchg
dec
xchg
repz
pop
pop
adc
pushf
cmp
push
jb
push
xor
fcmovne
orb
out
mov
nop
sahf
mov
mov
xchg
ja
test
loopne
xchg
xchg
xchg
xchg
xchg
jle
mov
pop
push
pop
xchg
out
repnz
cmp
or
movsb
fwait
cmp
repz
aas
rolb
add
add
xchg
leave
inc
repnz
data16
xchg
repz
das
out
pop
or
rcr
addr16
inc
pop
push
push
add
jns
adc
mov
or
pop
popf
cmpsl
rcll
and
aas
mov
xchg
adc
mov
insl
push
mov
cmp
daa
push
js
mov
xor
mov
dec
outsb
inc
and
cltd
mov
cmp
jae
add
add
fiadds
dec
cmp
inc
or
in
in
or
outsl
invlpg
cmp
or
adc
mov
adc
insl
daa
iret
fwait
mov
add
push
xchg
add
xor
mov
dec
dec
pop
adc
mov
push
pop
push
push
icebp
xchg
mov
rolb
inc
aaa
outsl
mov
rorb
lret
push
add
push
cmp
mov
jmp
fwait
mov
sti
aas
add
scas
mov
decl
sub
mov
pop
jb
shll
js
in
jb
mov
sub
incl
xchg
movsl
lock
fisubrl
pop
mov
and
xchg
xchg
sub
mov
push
add
leave
repz
scas
pop
push
mov
push
or
or
or
add
jns
movd
mov
mov
adc
movsl
enter
lea
lea
iret
leave
insl
in
lea
rdtsc
cmp
mov
pushf
cmp
arpl
bswap
leave
in
jbe
pop
jbe
jle
in
leave
leave
movsl
leave
in
in
and
dec
das
insb
iret
leave
leave
leave
nop
mov
loopne
fcmovne
repz
sbb
clc
scas
out
ds
push
inc
push
and
mov
and
dec
dec
cmc
test
jns
push
push
daa
lahf
stc
js
push
add
cmpsl
xchg
xchg
dec
and
add
add
inc
jmp
sub
xchg
xchg
mov
xchg
pop
addr16
rcll
movb
cmp
repz
leave
leave
inc
bnd
leave
leave
leave
loop
decb
das
xchg
addr16
xchg
mov
fcompl
in
xchg
and
xchg
jle
fldt
das
jbe
jle
pop
xchg
mov
mov
jns
out
cmpsb
or
iret
cmp
fmulp
xchg
cmp
test
pop
es
icebp
scas
xchg
pop
fs
xchg
xchg
pop
repnz
jb
push
xor
repnz
xchg
push
xchg
pop
xchg
pusha
xchg
repnz
xchg
repnz
cmpsb
xchg
xchg
xchg
aas
hlt
scas
xchg
pushl
xchg
xchg
vpmacssdqh
loop
ljmp
xchg
std
xchg
or
fdivp
adc
push
sbb
and
and
and
jns
out
and
out
sahf
out
sub
jb
rorl
sub
sub
sahf
xchg
pop
iret
mov
dec
xchg
xchg
xor
inc
sbb
dec
into
xchg
pop
outsl
inc
push
outsl
pop
rclb
mov
push
das
loopne
call
xchg
nop
stos
iret
or
xchg
xchg
push
add
sgdtl
pop
push
enter
inc
xchg
or
or
xchg
lods
jb
inc
mov
in
jbe
mov
jb
xor
or
jb
jb
ja
popf
repnz
jae
shrd
mov
dec
sahf
ja
dec
adc
int
aad
mov
add
sti
aas
fmulp
leave
in
add
cs
xchg
out
gs
repz
daa
mov
es
and
mov
outsb
daa
negl
pop
xchg
aas
and
sahf
xchg
out
dec
push
xor
xchg
out
xor
out
jns
xor
xchg
out
dec
bswap
push
cmp
and
inc
rcr
xchg
xchg
cmp
pop
push
sbb
add
insl
and
pushf
scas
dec
push
add
cmp
andb
test
add
loopne
fs
stc
cltd
sbb
shll
cltd
dec
cltd
pop
and
mov
adcb
add
sahf
lods
add
add
mov
pop
fsub
or
bnd
outsb
ud2
stc
or
lcall
pop
sub
xor
in
dec
adc
in
dec
sahf
adc
push
jne
dec
sahf
out
sbb
sahf
out
sbb
out
mov
pop
int
and
out
add
mov
setnp
fwait
in
and
sub
pusha
push
dec
es
iret
add
addl
das
fisubrs
push
out
fwait
fwait
xadd
add
out
jns
enter
sahf
out
jns
loopne
call
jns
clc
or
out
sahf
out
pop
femms
or
adc
inc
test
ficomps
xchg
sub
push
adc
out
sahf
add
dec
aaa
sbb
push
jmp
dec
push
stc
pop
ljmp
jmp
mov
jo
and
aam
pushf
iret
push
in
jns
scas
pushf
setae
pop
loope
fwait
aas
mov
sub
xlat
mov
sub
out
out
psadbw
xchg
jl
cmpsl
push
adc
sbb
and
sub
popf
cmp
push
popf
pushf
fmull
insb
je
xchg
mov
cmp
push
dec
outsb
daa
iret
add
popf
xor
stc
or
xlat
popf
leave
ds
sahf
dec
cli
add
mov
addr16
out
cmp
mov
push
pop
leave
mov
xchg
mov
add
mov
fsubp
out
loope
repz
testb
lahf
in
popf
popf
iret
push
lahf
pop
push
lahf
jg
mov
outsb
mov
cmp
cmovns
add
jns
leave
push
pop
cmpsb
add
push
xchg
xchg
mov
aam
mov
mov
xchg
pushf
xchg
mov
jb
cltd
mov
xchg
cmp
iret
add
add
js
mov
pop
sbb
and
add
dec
cmp
fistl
jg
fildll
jne
jge
test
fists
jbe
fbld
mov
xchg
je
or
fdiv
mov
in
in
call
xchg
add
movsb
sbb
jae
sub
add
inc
leave
inc
fwait
mov
repnz
outsb
jbe
jbe
inc
mov
cltd
mov
jp
mov
fsubrl
mov
jg
pop
in
es
or
iret
cld
rorl
push
aaa
mov
xor
ja
jae
push
pop
pop
pusha
outsl
in
jns
push
push
ds
xchg
mov
mov
ja
sti
int
cmp
mov
repz
pop
syscall
daa
push
mov
xor
push
mov
pop
mov
jg
lret
push
jp
mov
mov
lret
lret
lret
stos
mov
int3
mov
xlat
mov
clc
mov
add
movsb
jmp
movsb
cmp
jb
cmp
aas
sbb
jb
jb
sbb
push
adc
adc
push
sub
popf
cmp
repz
leave
enter
xor
pop
add
repnz
setb
sahf
ja
push
cmp
jns
cmp
fbstp
out
inc
ljmp
add
push
iret
repz
out
and
sub
aaa
out
jns
outsb
push
dec
jns
iret
rorl
dec
cmovge
jae
das
mov
mov
out
push
rcll
push
repnz
in
repnz
or
adc
push
pop
sub
leave
leave
rorl
pop
xor
dec
cltd
jmp
leave
push
pusha
cmpsb
fildll
mov
repnz
inc
inc
cmpsb
push
add
add
jns
jns
add
ds
out
call
or
cmpsl
pshufw
js
andb
repz
sahf
adc
adc
leave
repz
adc
xor
iret
mov
mov
iret
repz
push
sbb
into
hlt
in
push
sbb
mov
or
cmpsl
pop
and
mov
and
cmpsl
outsb
mov
cltd
mov
or
mov
pop
test
or
jns
cmovs
les
mov
aam
pop
movsb
inc
data16
push
add
or
ds
mov
cmp
jns
clts
nop
cwtl
rclb
fisubrs
outsl
mov
push
mov
mov
outsl
adc
mov
test
test
add
loopne
sahf
sub
add
xadd
inc
mov
daa
imul
leave
leave
leave
jae
orl
pop
and
scas
jg
fsubrl
daa
iret
pop
iret
mov
in
mov
test
jns
in
stos
adc
or
pop
jb
jb
xor
iret
jae
adc
je
iret
repz
jg
adc
sahf
out
mov
mov
jns
out
rcrl
daa
iret
dec
sbb
xlat
loop
and
push
and
stos
push
out
dec
outsb
nopl
das
mov
dec
sahf
daa
cmp
push
stos
repnz
mov
cwtl
stos
iret
repz
push
add
out
cmp
leave
push
add
rcr
stos
inc
iret
push
lods
mov
lods
or
iret
repz
outsb
repnz
push
pop
pop
psubsw
xchg
add
outsb
or
sbb
repnz
jbe
jle
xchg
pop
movups
cmp
adc
in
repnz
ror
aam
jns
out
sbb
sbb
jns
and
push
pop
cld
insl
in
aaa
mov
add
or
iret
cmp
adc
and
and
es
dec
push
cmp
fidivs
scas
push
sub
inc
sub
inc
cmp
lods
xchg
mov
pop
outsb
movb
ss
into
repz
ret
inc
xchg
push
and
pop
lods
jg
lods
leave
rep
and
int3
xchg
push
iret
leave
xlat
in
dec
lods
aaa
test
scas
cmovle
sahf
or
sub
xor
sahf
out
push
aas
cmovp
xchg
jl
test
adc
les
sbb
nop
scas
cwtl
scas
mov
out
and
int3
sahf
out
dec
xlat
pop
loop
in
and
clc
sysret
xchg
adc
scas
jg
scas
sbb
fstps
scas
lahf
es
pushl
scas
cmp
xchg
and
inc
scas
push
scas
pop
scas
sub
cmp
push
les
fs
scas
scas
scas
sahf
ja
dec
aas
pand
add
dec
jmp
jg
psubq
or
dec
ds
and
sub
cmp
lret
aas
ds
add
jbe
pop
invd
js
out
sahf
out
or
out
sahf
movsb
or
cmp
mov
pop
invd
adc
pop
cmc
in
icebp
mov
mov
iret
in
imul
mov
adc
push
sbb
sub
ss
sbb
dec
push
push
gs
jns
out
and
xchg
jns
in
xchg
setg
and
jns
mov
ret
sub
sub
in
mov
xor
cli
mov
cs
mov
mov
mov
fsubl
mov
js
fcmovne
repz
cwtl
repz
daa
mov
repnz
adc
enter
enter
fsubrs
in
mov
loopne
or
lock
cmc
cmp
nop
sbb
jns
iret
negl
nopl
sbb
and
jns
out
and
and
jns
sahf
out
and
dec
es
in
pop
sub
cmp
leave
push
mov
fsubrl
iret
sub
pop
sbb
repz
test
mov
bswap
in
scas
ss
adc
and
add
loopne
sbb
jp
xchg
and
push
sbb
scas
adc
push
add
aas
inc
push
mov
adc
or
imul
stos
xor
pop
inc
xchg
dec
inc
and
mov
dec
mov
xor
xchg
adc
dec
leave
out
inc
cmp
iret
repz
xor
sub
imul
add
enter
sahf
out
in
sahf
out
sahf
aam
int3
enter
cmp
repz
mov
out
sahf
ja
push
mov
jns
pusha
push
push
dec
inc
sub
push
lock
or
add
xchg
sub
xchg
cli
mov
mov
add
add
add
out
or
or
or
xchg
fmull
aaa
or
in
jbe
scas
adc
adc
adc
in
shrb
and
mov
in
push
addr16
das
push
xorps
insb
das
insl
push
and
fmull
sbb
push
pop
andb
pushf
fsubrl
cmpb
test
xchg
jbe
repnz
sahf
mov
loopne
cmpsl
mov
into
aas
xlat
mov
ficoms
sbb
add
inc
xchg
add
inc
xchg
test
and
mov
cmpsb
push
std
dec
cmp
adc
or
adc
mov
add
add
movsb
pushf
cmp
pusha
cmpb
cmpsb
fisttps
mov
popl
jle
test
shll
mov
inc
jg
pop
mov
pop
inc
mov
iret
mov
inc
sbb
in
call
adc
push
sti
sub
neg
pop
fidivrl
xor
fcomp
loopne
jb
adc
xor
xchg
adc
dec
andl
imul
adc
fmuls
inc
pop
mov
out
scas
pop
jle
pmovmskb
add
push
or
fisttpl
mov
aas
pop
mov
ja
movsl
adc
jns
imul
or
sahf
add
aam
adc
adcb
sbb
sahf
out
sbb
int
mov
out
sbb
push
cmp
das
cmp
mov
lods
jnp
inc
or
js
lret
in
stc
cmp
jp
push
cld
sub
ljmp
push
sub
push
stos
les
pop
sarl
aas
aam
or
fdivr
inc
pop
fildll
lods
rorl
jg
and
push
cmp
add
cmp
cwtl
xorb
dec
push
cmc
inc
addr16
push
push
pop
inc
cmpsb
jnp
test
add
inc
push
xchg
aas
pop
pop
add
mov
test
xchg
mov
fisubrs
scas
cmp
inc
pop
xchg
dec
stos
in
jg
out
push
cs
ljmp
add
shrl
lcall
add
and
ucomiss
push
xchg
es
shl
lret
inc
rorl
sbb
sbb
add
jecxz
add
and
sarl
loop
xor
es
ds
push
call
in
push
and
dec
gs
rcr
pop
or
cld
out
iret
jnp
pop
loopne
push
hlt
sbb
repz
fcoms
push
rcrb
enter
iret
repz
and
mov
lods
and
cmp
cwtl
pop
and
leave
clc
mov
sbb
inc
out
xor
shrb
xchg
xorb
inc
cmp
orl
and
jg
repz
jnp
push
pop
js
mov
imul
add
dec
repz
fisubrl
cmp
xchg
out
sbb
mov
bnd
das
push
dec
push
add
add
fadds
pop
das
mov
add
cli
or
or
ret
mov
in
and
adc
lret
and
sbb
into
sbb
rorl
incl
lock
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
lea
scas
sahf
inc
stc
mov
adc
mov
decl
js
inc
outsl
inc
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
ljmp
jbe
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
idiv
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
incl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
decl
pop
mov
and
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
mov
decb
and
add
sti
aas
jno
or
out
xlat
mov
pop
fs
dec
lea
aas
ret
shrl
mov
push
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
call
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
jg
jle
mov
mov
popa
push
pop
sarl
jl
mov
pushl
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
call
fstl
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
incl
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
pushl
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
lcall
adc
xor
push
scas
into
imul
faddp
jge
call
mov
idiv
call
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
frstor
fmuls
pop
enter
pop
inc
inc
je
inc
inc
push
dec
dec
in
je
jnp
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
pushl
xchg
fs
xor
fdivrl
jmp
rclb
mov
incl
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
call
aam
movl
imul
std
in
leave
mov
add
insb
push
arpl
jmp
psubd
or
outsb
cmp
imul
addr16
add
aam
dec
jg
std
test
movsl
cli
test
xor
leave
mov
insb
fdivs
jne
jmp
pop
iret
or
shrl
fistps
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
jg
mov
pop
mov
or
and
or
adc
ljmp
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
dec
adc
pushl
lahf
xor
mov
js
stc
fisttps
push
loope
or
insl
or
pop
arpl
hlt
push
imul
ljmp
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
pushl
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
lods
jmp
sbb
je
mov
aam
movsl
fisttps
fadd
call
movsb
sti
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
decl
stos
leave
jl
fnstsw
add
daa
adc
or
and
test
or
jmp
lahf
in
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
incl
or
xchg
shlb
add
inc
push
imul
xorb
ljmp
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
fcomip
pushl
pusha
call
xchg
shll
push
repnz
addr16
call
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
fbld
out
mov
jns
imul
andl
shrb
rclb
call
inc
or
das
es
lds
or
mov
push
pop
cmpsl
call
ret
shlb
scas
ficomps
pushl
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
orb
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
call
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
jg
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
jmp
js
or
push
addl
mov
cmp
cmpsl
notl
call
pusha
rorb
imul
scas
fcompl
fldenv
lcall
aaa
pusha
mov
inc
sahf
mov
inc
jmp
mov
mov
mov
push
cmpsb
mov
sarb
sub
push
mov
jp
mov
mov
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
sahf
push
pop
sbbb
dec
movsb
push
js
pop
jo
out
in
pusha
push
lods
add
pop
inc
push
xlat
fcomp
fidivrl
out
fcmovnu
fstp
loop
out
out
in
call
jns
jmp
in
repz
sahf
out
cmc
div
clc
je
jns
stc
cli
sti
cld
daa
inc
pop
inc
lret
inc
sub
pop
cmpsb
adc
adcl
iret
rorb
pop
push
fisttps
mov
jnp
inc
push
dec
bound
inc
andb
popl
roll
std
push
inc
push
push
popa
je
push
pop
stos
inc
in
cltd
out
and
enter
inc
dec
sub
push
push
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
divb
xor
or
xor
bound
aam
push
inc
popa
push
inc
jbe
cli
shl
pop
insb
imul
es
gs
push
dec
inc
ljmp
or
enter
mov
hlt
fs
mov
das
or
or
push
je
scas
ss
fs
push
jbe
add
jbe
movsl
inc
aas
jle
gs
push
and
push
xor
test
sbb
xor
dec
arpl
add
inc
mov
popa
jns
cmp
pop
dec
insb
and
sarb
popa
xchg
cmp
movq
aas
inc
push
add
pop
push
and
sub
aas
cltd
and
testl
push
int
or
inc
aas
inc
and
push
pop
sbb
fs
inc
inc
es
xorb
push
je
jbe
jae
inc
inc
inc
add
ds
cmpsb
in
adc
scas
add
shrl
pop
mov
cmp
dec
push
dec
cmp
inc
mov
pusha
stos
or
jb
mov
movsb
xchg
inc
outsb
jne
push
popa
push
mov
pop
fnstenv
add
add
or
adc
xor
addr16
clc
rcr
mov
jo
mov
inc
cmp
aas
aaa
leave
cli
adc
push
mov
gs
mov
or
pop
sbb
adc
mov
xor
cmp
mov
mov
inc
mov
scas
or
ss
out
jb
mov
add
addr16
and
xor
jo
andl
outsl
outsl
test
mov
push
mov
sti
push
inc
adc
dec
mov
es
or
nop
test
pop
cmp
push
dec
xor
arpl
cmp
mov
jo
push
push
add
jns
inc
mov
jb
pop
push
add
gs
notl
outsl
arpl
insb
daa
sub
mov
xchg
mov
in
bound
ja
inc
jbe
shrb
xor
cmp
leave
imul
xor
shll
and
daa
das
xor
lahf
pop
pushl
push
add
xor
jg
mov
push
insb
iret
xchg
cmc
mov
xchg
call
mov
outsb
sbb
cmpsl
imul
pop
mov
sbb
sbb
jg
stos
push
stc
inc
push
cli
adc
pop
bound
outsb
arpl
adc
stos
mov
insb
insl
pop
push
addb
mov
stos
loopne
pop
inc
xchg
mov
xchg
fldt
xlat
push
add
stos
orb
inc
add
add
add
push
add
push
adc
adc
jge
adc
jmp
sbb
insb
adc
outsb
adc
out
sbb
es
add
add
out
add
add
fisttps
or
pop
push
or
or
or
or
or
adc
adc
push
std
fwait
pop
rclb
push
add
pop
sbb
adc
adc
cmpsb
add
or
adc
pop
adc
pop
bound
inc
or
insb
neg
add
add
add
add
adc
add
add
xchg
sarl
cmp
call
adc
push
adc
pop
and
xor
inc
mov
adc
xor
add
mov
js
nop
add
mov
mov
inc
dec
shrb
mov
add
and
and
inc
push
inc
or
addl
sub
rorl
pusha
adc
pushf
into
add
adc
incl
inc
adc
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
mov
and
roll
test
sub
scas
fiaddl
or
js
dec
adc
lret
rcr
push
ret
cli
or
xchg
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
pop
hlt
incl
mov
mov
loopne
mov
fsts
dec
add
loope
mov
cmp
ja
out
cmp
xor
and
pushl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
leave
push
add
xchg
rclb
inc
std
or
push
pop
add
lds
cld
cli
and
mov
incl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
leave
and
pop
mov
stc
decl
mov
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
incl
xor
lcall
fs
scas
mov
pop
pop
mov
incl
in
rorb
sti
ret
scas
adc
mov
xor
lods
scas
xchg
jg
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
jl
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
call
das
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
idiv
jmp
mov
int
arpl
push
out
or
push
fists
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
test
and
xchg
jmp
sbb
das
xor
out
pop
jb
mov
mov
loope
call
mov
int
inc
fwait
sbbb
mov
dec
jp
push
outsl
jmp
hlt
push
add
stc
loope
mov
shrl
andl
aas
icebp
testb
mov
decl
inc
gs
sub
jno
pop
sub
jg
scas
cld
or
incl
call
sbb
paddb
inc
mov
dec
adc
call
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
in
cmp
test
loopne
cli
adc
aaa
xchg
in
add
dec
outsl
mov
inc
adc
loope
fisttpll
out
aas
std
cli
push
push
pushl
jg
cmp
sub
inc
scas
inc
mov
inc
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
jmp
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
add
js,pn
stos
imul
sub
xchg
pop
clc
pop
hlt
sub
movsb
add
add
lea
jg
gs
std
xorb
jg
add
lcall
xor
das
pop
pop
pop
shlb
out
call
call
cmp
lock
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
ljmp
mov
push
mov
adc
and
sbb
xchg
jo
and
out
incl
icebp
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
decl
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
ljmp
push
mov
push
movsb
xchg
or
mov
stos
dec
lods
xor
mov
jle
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
call
jo
pusha
imul
add
mov
cmp
xchg
mov
imul
ftst
jbe
xchg
and
lcall
out
jae
shrb
shlb
out
aas
stc
add
out
gs
mov
pushl
fidivrl
lock
adc
pop
cld
addl
adc
and
pop
repnz
cmp
fmull
enter
jecxz
aas
clc
aas
lahf
scas
sub
in
pop
mov
sub
mov
dec
outsb
mov
cld
inc
mov
push
sbb
push
inc
or
testb
push
pop
jg
add
jg
mov
mov
aad
test
mov
mov
iret
push
std
mov
out
jbe
push
sbb
stos
icebp
pop
incb
jno
mov
cvtpi2ps
push
inc
jecxz
sbb
sarl
adc
mov
loopne
sar
adc
lahf
xor
and
cmp
dec
push
cmp
jg
in
aas
mov
fsubrl
lock
sbb
push
and
clc
xchg
call
mov
repnz
and
mov
adc
lahf
or
push
rcrl
rolb
pop
inc
lds
ret
pushl
fistpl
adc
call
jno
pop
jmp
mov
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
jmp
jmp
adc
or
imul
xor
dec
xor
fsubr
fistps
lds
pop
insb
insb
icebp
fidivrl
jg
stos
pop
add
idivb
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
icebp
decl
in
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
push
jo
test
paddsw
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
incl
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
in
loop
lahf
mov
or
out
lcall
std
mov
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
push
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
lcall
cmp
cld
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
pop
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
push
jnp
jmp
insb
sbb
cwtl
inc
mov
insb
cld
jg
inc
test
aas
repz
outsl
lock
in
jmp
stc
out
jmp
aaa
clc
push
std
mov
or
lods
out
jne
or
cld
push
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shrb
fisttpl
out
pop
or
or
dec
ss
shrb
pslld
pushf
imul
cli
daa
pop
and
imul
or
or
pop
in
cmp
int
pop
mov
fidivs
clc
adc
jmp
hlt
dec
mov
dec
mov
sbb
xlat
inc
call
loopne
aas
mov
jg
mov
sub
addr16
sbb
test
outsb
cld
daa
jp
std
adc
cltd
or
mov
ret
adc
stos
pop
nop
cmp
das
incb
lock
pop
pop
div
cld
idivl
adc
sbb
stc
lahf
loope
pusha
push
jmp
dec
shll
fbstp
out
xchg
add
lock
mov
out
icebp
mov
loope
mov
cmpsl
popf
and
cld
and
mov
fbstp
test
das
mov
inc
sub
cmp
mov
popf
js
data16
decb
adc
sbb
scas
mov
and
call
pop
inc
cltd
add
push
sbb
mov
inc
add
pop
out
or
aaa
std
lock
cltd
dec
dec
inc
sbb
xchg
jmp
mov
aas
icebp
ret
ror
sbb
inc
adc
mov
mov
sub
mov
pop
clc
loope
in
scas
xorb
mov
lahf
jp
dec
add
xlat
sbb
fbstp
xchg
sarl
fdivrl
xchg
lcall
decb
js
pop
imull
sarl
pop
out
xchg
xchg
cld
jno
ret
cmp
inc
sbb
iret
aas
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
faddl
mov
pop
mov
outsl
pop
std
jg
add
pop
stc
push
dec
out
fstpt
mov
enter
daa
xchg
pop
add
test
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
faddl
or
add
add
sti
push
sti
int3
les
push
mov
push
pop
mov
cmp
int3
pop
iret
aas
and
add
scas
insl
in
xchg
lds
into
xor
xlat
movsl
test
cltd
lcall
push
xor
dec
mov
arpl
mov
adc
cld
cmpsb
jg
sbb
in
mov
bswap
sbb
push
jb
cmp
push
xor
and
icebp
mov
ror
ljmp
cmpsb
sub
mov
ds
inc
xchg
inc
add
xchg
pop
fisttps
xchg
adc
xchg
shll
mov
push
fisubrs
movsl
mov
cld
scas
inc
cs
mov
test
xchg
cli
cmp
push
inc
int3
sub
sub
push
pop
sub
jmp
add
int
fildll
aad
flds
jmp
clc
jno
inc
fs
ja
push
push
sub
xor
dec
xor
xor
pop
cmpsl
cmc
mov
adc
jmp
jns
in
insb
outsb
jge
ss
fisttps
mov
dec
bound
cmp
in
rol
jg
sbb
jbe
sub
daa
js
cmp
adc
push
push
call
bound
mov
cmp
jle
test
fwait
xor
jg
lcall
popa
in
cmp
pop
cmp
push
inc
xchg
adc
pop
cmp
inc
push
adc
nop
cmp
scas
adc
nop
xchg
mov
pop
pop
jae
stos
jmp
inc
jo
inc
fwait
xchg
jno
add
and
xchg
sti
inc
lds
fldcw
inc
leave
lods
add
rcrb
rcr
rcll
dec
xchg
pop
jg
cmp
mov
pusha
call
or
mov
push
ficomps
int3
ds
call
std
add
mov
push
loop
mov
inc
lds
iret
lret
enter
out
mov
xchg
xor
pop
cltd
mov
mov
add
test
sbb
fwait
aad
mov
cwtl
fstpl
pop
add
mov
adc
shr
mov
inc
lret
js
mov
add
jae
das
sbb
fadds
int3
dec
inc
sbb
pop
fildll
filds
or
insb
push
add
lret
out
sbb
jmp
movsl
shrl
sub
cltd
xor
adc
push
mov
cmp
adc
cmp
aas
jno
dec
or
xchg
pop
testl
ljmp
cmp
dec
cmpsl
jmp
movb
inc
cmp
push
insb
cmp
fsub
rcll
pushl
ds
bound
and
pop
lods
loope
cmpsl
add
fs
adc
dec
jno
cmp
gs
roll
movsw
ror
or
outsl
imul
sub
sub
sti
lcall
jo
and
repnz
cmc
gs
and
cwtl
out
repnz
add
cmp
push
add
aad
pop
lea
lahf
out
jg
ljmp
jno
xor
lock
sbb
or
cmpsb
add
sarb
jmp
ljmp
scas
mov
dec
or
and
mov
movl
test
call
jnp
sti
cmpsb
mov
inc
and
gs
adc
bound
idivb
std
ljmp
rcrb
dec
rorb
ret
adc
shl
roll
in
xchg
jl
loop
push
ds
call
loope
mov
xor
and
mov
int
dec
sub
in
xchg
daa
pushf
mov
xor
and
imul
int
outsl
push
xchg
push
mov
cmp
js
jnp
inc
xor
lahf
pushf
dec
mov
fnstsw
xor
push
dec
inc
pop
dec
cmc
or
jae
adc
daa
cmp
popaw
repnz
cmp
add
mov
dec
stos
es
lds
aaa
xor
popl
fidivrs
xchg
push
call
or
mov
sti
jae
jecxz
xchg
mov
dec
lcall
cmp
das
lahf
push
in
add
mov
sbb
cmp
test
call
pop
push
sarb
out
push
pop
ret
cwtl
pop
cmpb
stos
jb
ds
in
cmp
adc
sub
pushf
mov
mov
mov
imul
pushl
jo
imul
dec
push
outsb
rcll
dec
icebp
lods
sbb
icebp
inc
ds
repz
jge
lcall
lcall
and
xor
cld
push
mov
sbb
ja
xor
lcall
push
adc
stos
sub
mov
push
insb
cs
push
es
xor
cli
in
cmp
pop
jg
call
xchg
mov
dec
pop
icebp
outsb
sub
dec
inc
fstpl
fcomip
call
enter
sbb
mov
sbb
psubq
enter
cmpsl
lcall
dec
or
xchg
inc
jo
repnz
das
pop
mov
jge
bound
jo
mov
sbb
ljmp
dec
daa
shr
adc
inc
arpl
lds
call
lret
sub
sbb
push
ss
cmp
xor
lret
fdivs
call
incl
sti
dec
loopne
xchg
xor
test
dec
shrl
jl
icebp
out
outsb
mov
mull
int3
and
jmp
call
hlt
movsl
loopne
add
push
push
mov
lcall
lea
jl
mov
popf
clc
lods
mov
imul
mov
push
fbld
dec
or
bnd
out
lods
adcb
mov
push
add
push
jmp
xchg
xor
pop
cs
test
enter
cld
shlb
in
mov
ss
outsb
aaa
and
jecxz
stc
repz
mov
incl
rcrl
bound
out
mov
icebp
xchg
and
push
or
data16
jb
ljmp
mov
jo
lcall
scas
add
mov
imul
sub
xchg
test
gs
aad
jns
ret
xlat
pop
adc
dec
iret
mov
mov
iret
pop
cmpsl
add
jg
fwait
xor
in
or
xchg
pop
ja
mov
jg
cmp
fidivrl
rclb
dec
stos
xchg
nop
pop
movb
pop
dec
aad
ja
mov
adc
xchg
xor
sbb
jmp
sar
lret
add
mov
insb
into
jle
rorb
sbb
jmp
mov
imul
negb
aaa
cld
jp
int3
push
enter
shr
int3
lret
xchg
sarb
mov
or
call
mov
xor
mov
dec
pop
mov
push
adc
mov
mov
ds
or
mov
call
test
dec
push
imul
pop
call
and
xor
lahf
sbb
jp
fcompl
mov
pop
adc
rorl
inc
xor
jbe
js
mov
stos
push
pop
aad
rorl
add
loope
lcall
push
xor
movsl
mov
fsts
xor
mov
push
adc
push
je
fsubrp
lcall
out
cmp
mov
ss
mov
mov
adc
cs
ljmp
fs
mov
lcall
cmp
pop
in
mov
mov
mov
mov
testl
push
xchg
mov
mov
sub
sbb
fwait
fs
mov
call
ret
out
push
lods
or
add
pusha
jp
cs
ret
sub
xchg
das
clc
pushl
int
or
out
outsb
lock
ss
mov
scas
bound
les
lcall
call
je
daa
clc
cmp
imulb
mov
mov
sti
jecxz
ljmp
xchg
mov
adcb
push
popa
mov
pop
cli
lods
loope
out
xchg
add
loopne
inc
xchg
repnz
mov
shll
lock
xchg
mov
push
and
adc
sbb
pushf
out
scas
or
and
sbb
sub
cmp
dec
and
xchg
aas
or
leave
sahf
ret
in
push
nop
sahf
insb
mov
je
or
mov
pop
xchg
dec
jb
inc
jmp
mov
ror
outsl
jle
jne
sar
lcall
scas
pop
hlt
adc
ffree
gs
in
add
push
sahf
in
popf
and
fadds
std
decl
pop
shlb
addr16
xlat
repnz
pop
jg
pop
jecxz
mov
sahf
push
xor
out
jl
or
jl
aas
sti
iret
orb
pushl
std
call
repnz
scas
sub
rcr
inc
cs
int3
pop
inc
cmp
adc
mov
push
cmp
or
lds
repnz
lret
mov
pop
mov
fcos
fdiv
loope
ds
insl
sub
ficompl
or
push
jno
mov
iret
out
cmc
pop
add
outsl
clc
jmp
inc
mov
jbe
notl
fmuls
lods
ficoms
in
jg
xor
sbb
lret
inc
xchg
fidivrl
shrb
jecxz
cld
imul
incl
dec
dec
and
fwait
stc
test
addr16
lods
jnp
pop
ret
mov
pushl
repnz
mov
repnz
pop
or
hlt
xor
cwtl
pushl
push
test
rorb
shrb
int3
gs
mov
sti
jecxz
push
std
call
xchg
push
outsb
std
dec
movsl
movsl
pop
fmuls
and
enter
mov
dec
stc
mov
loopne
es
filds
sub
pop
repnz
pop
sbb
inc
or
and
cmpsb
decl
xchg
jns
or
daa
stos
add
stos
cmc
and
lret
nop
add
test
or
ja
cld
inc
into
ret
in
sbb
icebp
add
bound
sahf
inc
orb
lcall
mov
sbb
subb
iret
lds
in
lret
cmp
imul
ret
ja
cli
lcall
sub
imulb
pop
icebp
cmc
int3
addl
mov
call
jle
repnz
inc
mov
cmp
inc
mov
js
sub
call
mov
enter
shr
mov
popf
mov
dec
loop
add
pop
ljmp
fldenv
jnp
adc
xchg
addb
cmpsl
fs
fcos
add
pop
xor
cli
aad
sarb
ljmp
cli
dec
lock
aaa
jmp
sbb
add
popa
push
rol
pop
arpl
adc
cld
pop
jb
daa
xor
push
mov
mov
inc
or
cld
xor
jp
push
out
mov
cmp
mov
es
call
sbb
and
pop
and
ret
cmpsb
cmpsl
gs
inc
sar
call
cld
in
fstl
mov
out
out
push
in
jge
xchg
arpl
pop
xor
decl
cltd
and
pop
dec
mov
mov
js
icebp
mov
mov
lcall
xchg
cltd
iret
cmc
pushl
inc
sub
mov
fs
repnz
cmc
sti
lods
add
sub
nop
push
jg
sbb
add
int
add
jg
adc
incl
cmpsl
pop
lods
pop
je
repnz
ss
adc
neg
out
je
into
cmp
mov
xchg
lret
loop
fistps
add
mov
lds
and
dec
jg
loopne
nop
jl
iret
ret
pop
push
bound
call
adc
mov
pop
push
outsb
or
cwtl
pop
movsb
mov
cmpsl
cmp
mov
lods
add
andb
jmp
iret
or
cli
dec
shlb
sub
jae
pop
loope
or
jmp
mov
scas
xchg
cmp
out
xor
sub
fisubl
in
push
mov
cmp
pushl
mov
and
cmp
lea
movsl
out
outsb
ret
jbe
mov
jmp
sbb
dec
adc
pop
mov
ja
lods
push
or
enter
in
pop
adc
stos
or
clc
mov
dec
fmull
shl
cwtl
inc
push
adc
das
cli
ljmp
and
and
and
inc
loopne
mov
xlat
fdivrl
pop
cli
incl
cmp
in
or
push
int
mov
mov
movsb
jnp
pop
ljmp
dec
imul
mov
sub
fnstenv
dec
adc
push
inc
arpl
sti
shl
push
std
push
daa
push
sub
push
mulb
lret
sbb
cmp
xor
fbld
push
shl
or
pop
incl
jbe
popa
stc
xor
push
cs
adc
outsl
inc
nop
es
call
dec
dec
in
jnp
push
aam
bound
out
into
iret
mov
xchg
add
push
mov
mov
jecxz
mov
pop
out
mov
or
cmp
push
dec
sti
pop
jmp
sub
lods
inc
rorl
push
cmp
nop
adc
sub
push
out
cli
dec
aam
jno
pop
repz
jae
stos
pop
cmp
jno
cmp
call
cmp
aad
and
jg
cmp
fistps
icebp
cmp
push
jo
lret
das
out
adc
dec
sbb
pusha
fisttps
lret
inc
xchg
pushl
jle
add
lret
cmp
leave
ret
mov
or
jmp
push
ja
add
addr16
movsb
mov
or
enter
movsb
inc
mov
jg
lods
jle
pusha
ds
popa
out
and
mov
fistpll
bound
repnz
test
or
xor
iret
sbb
push
hlt
incl
inc
cmp
cmp
xchg
fadds
sub
lcall
pop
jge
sbb
lds
sbb
sub
ja
xor
retw
jne
mov
pop
lock
pushl
pushf
repz
add
imul
and
xchg
dec
pop
pusha
incb
imul
xchg
mov
sarl
adc
aas
sti
arpl
mov
icebp
loope
lahf
mov
mov
add
push
inc
ss
mov
inc
repz
cmc
mov
aam
lret
pop
push
or
jp
in
aam
push
add
or
adc
jle
cmpb
ror
bound
decb
jecxz
mov
xchg
sub
pop
ljmp
mov
pop
adc
xchg
mov
inc
ljmp
outsb
imul
sub
jb
pop
xchg
stos
adc
and
or
incl
ja
addr16
xchg
sub
xchg
jl
push
data16
jmp
add
aam
adc
xchg
cltd
repz
fnop
add
xchg
xchg
jmp
shlb
shll
pop
or
ret
es
imulb
ljmp
test
mov
xchg
lock
sub
cld
add
lods
pop
scas
add
lcall
pushl
lods
cmp
sbb
sbb
xchg
xchg
scas
lret
sub
mov
outsl
mov
ljmp
and
loope
dec
pop
add
add
pop
add
stos
jno
mov
mov
mov
cld
mov
test
sbb
incl
dec
lods
pop
or
adc
out
sub
sahf
scas
movsl
test
inc
mov
pop
std
mov
mov
or
cltd
cmp
ficoml
jb
cmpsl
pop
pushf
je
loopne
mov
scas
mov
gs
pusha
cmp
call
jg
dec
sbb
inc
push
movsb
cmp
sub
ljmp
mov
lcall
pop
mov
cmp
cmpsl
adc
and
jns
mov
adc
repz
jmp
out
cli
pop
loop
or
dec
test
xchg
test
jmp
ljmp
call
inc
leave
add
popa
xchg
test
cmp
inc
shrl
jmp
sti
add
pop
sahf
shl
out
jbe
rorb
push
xlat
sahf
xor
fsts
movsb
cmpsb
sti
pusha
fcomps
in
clc
inc
dec
std
push
shlb
mov
hlt
xchg
dec
mov
lcall
jnp
popa
cmp
sub
jle
test
gs
in
cmc
jl
int3
mov
in
negb
xchg
xchg
clc
and
jae
inc
xchg
mov
stos
xchg
fdivrs
adc
pop
testb
mov
lcall
pop
ja
fs
jecxz
in
mov
jns
xchg
and
dec
mov
std
xlat
sti
dec
pop
cmp
inc
mov
xchg
out
outsb
xor
out
jge
cltd
test
gs
lcall
js
jns
leave
cmpb
shr
out
es
fsubrs
sub
cmp
push
pop
jg
lcall
inc
repnz
mov
mov
push
std
call
cmpsl
jnp
or
aam
out
push
mov
and
jbe
sti
jns
sbb
imul
inc
popf
dec
jb
mov
repz
adc
call
popf
xchg
push
js
sbb
loope
sbbl
dec
in
sub
imul
pop
iret
and
data16
xor
push
lcall
inc
pop
jbe
xor
cwtl
repnz
jecxz
lcall
adc
dec
jns
outsl
pop
xrelease
pop
aam
dec
loopne
jl
jne
icebp
arpl
add
inc
xchg
inc
jno
push
std
sti
push
mov
fcmovne
fs
xchg
negb
cltd
mov
sbb
push
push
dec
std
sbb
xor
adc
mov
dec
push
fs
jmp
addr16
mov
lret
nop
mov
and
insl
push
cltd
lods
xor
sub
mov
push
gs
ljmp
sub
hlt
lock
sub
push
daa
daa
cmp
aam
mov
dec
dec
xchg
pushl
xor
stos
testl
movsb
xchg
mov
xor
ljmp
fidivl
test
decl
push
test
sbb
cmpsl
test
subl
fs
pop
stos
rcl
fisttpll
mov
out
cld
fistpll
xchg
xchg
push
xor
sarb
push
mov
imul
jns
xchg
pop
cmp
incl
ficomps
rolb
push
mov
cwtl
inc
push
inc
xor
xor
loopne
pushf
push
cmp
repz
imul
push
adc
cmp
push
iret
dec
movsb
pop
enter
decl
shll
test
xchg
ds
sub
imul
lcall
orl
data16
pshufw
adc
push
sbb
pushl
enter
pop
das
das
dec
cs
mov
jbe
xor
fwait
cs
mov
inc
mov
add
scas
push
xor
push
or
dec
jg
xchg
stos
xchg
or
testb
in
and
or
jno
stos
lods
xor
mov
das
lock
mov
and
lcall
testb
gs
pop
inc
lret
mov
xor
scas
scas
addl
dec
adc
ljmp
mov
jg
dec
subl
in
and
call
dec
xchg
pop
jae
jmp
fsubs
loop
imul
and
fistpl
stos
pop
mov
and
xchg
addb
push
inc
or
pop
xchg
cmp
decl
outsb
cmpsl
andl
mov
pop
mov
lret
data16
scas
jmp
cmp
popl
mov
and
inc
lods
push
mov
mov
mov
cmp
fimuls
adcl
ja
mov
jecxz
insl
mov
pop
push
call
fcoms
mov
call
into
mov
sarl
dec
adc
jo
jl
xchg
cmpsl
sub
jmp
imul
bound
jne
rcrb
xor
rcr
jmp
sti
cltd
adcb
cmp
addr16
xor
sub
movmskps
call
inc
mov
jae
mov
xchg
sbb
push
jg
out
addr16
icebp
jmp
mov
rorb
mov
mov
sarb
stos
btc
lcall
pop
out
inc
xor
sub
fcom
and
clc
repz
inc
cmpl
ret
mov
cmp
subb
fistl
cltd
sbb
call
clc
pop
push
loopne
fsubrl
jg
orb
xchg
inc
and
jnp
test
incl
and
ret
xlat
leave
and
sub
ret
push
cmc
popa
xor
scas
adc
and
aad
inc
repz
rcrb
decl
lods
mov
inc
lahf
mov
dec
shlb
out
mov
pop
xchg
lds
loopne
jmp
lock
cwtl
sti
add
push
in
mov
jg
decl
fisttps
add
imul
cli
repz
repz
push
mov
jmp
leave
filds
fdivr
pop
and
mov
xor
out
rcll
in
add
inc
pop
scas
sub
out
fcoms
jns
or
stc
pop
inc
in
push
mov
and
push
leave
sbb
pop
addr16
imul
or
adc
das
cmp
test
ss
mov
add
xchg
jge
jbe
mull
push
mov
mov
movsl
dec
mov
dec
fcoms
or
jle
sbb
cmp
lods
ljmp
into
das
outsl
pusha
repnz
mov
mov
and
in
pushl
dec
fimuls
jnp
sbb
xor
mov
inc
ds
jge
aaa
inc
push
pop
lret
xchg
ja
mov
pusha
adc
jae
mov
sub
hlt
add
inc
shlb
pusha
pop
sbb
es
add
mov
xor
add
pop
mov
push
pusha
out
cmpsb
sti
push
mov
call
outsl
push
mov
sbb
test
adc
test
lods
mov
dec
xor
xor
push
das
cs
ds
ret
cmpsl
ljmp
jmp
test
bound
adc
mov
jbe
pop
dec
adc
rcl
js
push
cmp
cmp
dec
add
lret
dec
jecxz
out
sti
add
ds
inc
dec
cmp
fcompl
fisttpll
jmp
aad
pop
subl
std
ret
adc
std
adc
outsl
adc
mov
std
lcall
ljmp
cs
push
adc
lcall
imul
call
pop
cli
mov
lea
out
mov
mov
enter
cmpl
movsb
pop
int
cltd
sahf
mov
lcall
mov
cmc
mov
and
outsl
call
mov
inc
mov
hlt
push
xchg
das
sub
dec
rcr
sub
jle
pushl
push
add
data16
out
iret
lea
jmp
leave
adc
xchg
outsl
call
das
rorb
mov
xchg
sarl
mov
dec
lods
xor
jae
andb
ljmp
int3
mov
addr16
pushf
out
or
inc
inc
daa
sar
decl
jns
hlt
cmpsb
inc
out
loope
lcall
cmpsb
lock
mov
mov
outsl
inc
lret
incl
xchg
or
es
addb
cmp
and
push
push
notl
lcall
out
into
arpl
pop
inc
mov
and
sti
popf
out
scas
hlt
xor
frstor
popa
xor
mov
aaa
insb
ljmp
push
adc
mov
stos
xor
push
sbb
pop
jbe
aas
pop
cmc
ljmp
shl
and
in
and
aaa
imul
inc
andl
mov
jecxz
pop
mov
divb
sbb
cwtl
std
pop
jae
inc
xchg
fstpl
decl
lds
mov
cs
pushf
mov
xchg
pop
push
and
jg
inc
jb
scas
xchg
subb
cld
sub
in
ja
jb
jle
fbstp
sub
xor
push
ds
fs
mov
fcos
stc
cmp
std
cmc
xor
les
test
incl
rcrb
adc
sbb
add
mov
ljmp
inc
xchg
sub
sub
notb
cmp
popf
cmp
mov
pushf
sahf
dec
xchg
cmp
mov
popf
outsl
lahf
cmp
lcall
sbb
pop
faddl
jnp
ss
xor
jmp
sub
ss
call
pop
push
add
std
and
adc
pop
fs
or
ret
mov
push
call
mov
cld
lea
pusha
mov
cmpsb
insb
mov
mov
sub
and
out
or
test
xchg
cmp
js
je
push
bound
lcall
jbe
iret
ds
fmulp
bound
jg
jmp
into
movsb
push
pop
aaa
mov
nop
jne
push
pop
frstor
jg
fildll
icebp
decl
aas
scas
fldt
arpl
repnz
dec
cmp
cmp
mov
push
sbb
push
lcall
push
ds
lret
jmp
loopne
add
incl
aam
jle
xor
push
loopne
jae
rclb
dec
hlt
test
jle
lods
in
mov
ret
mov
cltd
test
mov
xchg
repz
cmp
xchg
pusha
sahf
clc
push
aad
mov
ret
mov
or
pushl
incl
fmul
xchg
jecxz
jns
cmc
ljmp
insb
push
mov
xchg
jb
test
repz
mov
scas
mov
int3
xor
add
dec
push
andl
jge
jg
stc
insb
xchg
rorl
jbe
cmp
movsl
jecxz
out
ja
lea
add
decl
or
loop
or
sub
mov
pop
cmp
mov
cli
xchg
cmpsb
clc
jmp
loop
repz
lcall
ret
xchg
daa
cmp
cwtl
mov
aas
xor
dec
fwait
gs
fistpl
aam
jmp
fists
jle
xlat
stos
dec
aas
in
or
std
pop
arpl
cs
incl
out
sub
xor
push
es
push
dec
popl
or
cmp
lcall
xor
in
sarb
dec
out
and
lcall
push
mov
ds
into
pop
add
aam
aam
call
iret
cmp
jg
or
sub
push
orl
dec
adc
test
inc
scas
fxch
fsts
sti
testb
in
cmpsb
and
cmpsb
lods
mov
clc
cmp
cmp
push
pop
lcall
or
popa
lcall
xlat
inc
xchg
cmc
lcall
jg
push
mov
js
add
call
mov
add
xor
rol
andl
je,pn
sti
push
push
loopne
jg
enter
mov
adc
rorl
sarl
xlat
adc
jne
xor
mov
or
push
or
inc
xchg
inc
lock
nop
fs
negb
lcall
imul
and
mov
sbbl
sbb
fcompl
adc
fisubs
decl
jmp
out
mov
inc
scas
mov
sub
lock
add
mov
ljmp
pop
stos
test
outsb
movsl
mov
jl
push
mov
xor
and
popl
in
push
icebp
mov
hlt
lods
adcb
adcl
incl
push
mov
mov
out
pop
stos
and
aad
lea
mov
pop
imul
ljmp
xor
push
outsl
mov
add
in
loopne
inc
jmp
lods
mov
outsl
push
cs
mov
dec
test
je
movsb
rcr
insb
sarl
cs
lret
das
fstl
jmp
shlb
movsb
pop
lret
insb
cmp
adc
aam
and
inc
push
out
add
pop
push
jbe
repz
push
fnsave
adc
fisttps
adc
pop
dec
test
je
repnz
jmp
sbb
sub
pop
add
add
push
add
dec
jmp
cmp
addr16
jg
xor
xchg
inc
mov
cmc
mov
inc
inc
jbe
mov
jmp
xor
jns
or
cmpl
jmp
inc
js
ret
sub
jg
mov
fisubs
mov
jbe
add
add
mov
inc
orb
mov
inc
push
push
adc
pushf
and
cmp
jge
loop
or
xchg
aas
add
lret
scas
jae
fcomps
xchg
and
out
ljmp
push
xchg
cwtl
aad
or
dec
push
repz
jl
test
test
stos
icebp
dec
mov
fwait
call
push
push
in
or
cmp
or
push
jg
dec
xchg
cmpsb
inc
pop
jmp
lret
mov
cmp
pushf
push
ja
cmp
mov
mov
cld
fstpt
push
and
xor
mov
xchg
pop
add
icebp
clc
mov
lcall
mov
mov
inc
cltd
push
ret
xlat
ljmp
inc
push
pop
jg
dec
test
subl
adc
xchg
call
mov
lea
mov
rol
mov
leave
xchg
push
xchg
mov
add
sbb
mov
cmp
and
rcrb
sahf
je
inc
popa
pushl
std
push
aad
aas
and
roll
jns
or
and
and
adc
mov
cmpsb
lods
aas
shrl
fistps
ficomps
popf
sub
imul
pushl
dec
jae
test
cs
inc
test
fst
mov
out
adc
xchg
mov
std
mov
lods
rorl
int3
xlat
fisubl
pop
push
jg
add
mov
xor
sub
aaa
insl
xor
pop
add
test
mov
ljmp
insb
xor
test
lcall
insb
decl
xchg
xchg
int3
xchg
pop
lock
nop
sahf
sbb
jp
popa
xor
xlat
mov
loop
sahf
mov
inc
mov
in
cs
sub
push
inc
push
icebp
lcall
or
add
mov
sbb
dec
insb
popa
les
fidivs
jge
testb
jp
sbb
insb
fiadds
and
xor
pop
hlt
in
jae
push
bound
push
jo
mov
mov
ss
mov
sarb
test
mov
push
aad
adc
dec
inc
add
bound
in
cmp
lahf
xchg
sbb
inc
add
cmp
or
cmp
inc
fbstp
adc
lock
outsb
dec
inc
aas
movsl
sbb
dec
pushf
rcll
jmp
push
cmp
sti
mov
push
or
ds
fisttps
push
ja
lea
insb
fpatan
pop
inc
test
loopne
pop
clc
into
xchg
out
mov
ljmp
jbe
adc
mov
insb
daa
inc
xchg
sbb
add
shlb
ja
sar
jmp
insl
pop
sbb
pop
mov
sarl
addr16
enter
jg
push
imul
pop
stos
scas
sbb
push
rorl
or
pop
sbb
clc
sbb
out
cli
and
ror
xlat
popa
arpl
add
cmpsl
popf
mov
fcomip
ljmp
lock
mov
hlt
and
push
mov
sub
decl
std
inc
ss
dec
inc
sbb
fs
sti
add
lret
fmuls
mov
add
add
lcall
sub
imul
and
mov
and
cwtl
xchg
xor
mov
fidivs
ja
or
pop
push
lds
das
jg
addl
mov
lcall
add
dec
sbb
mov
jbe
ficoml
cmp
out
cli
jns
cld
jge
test
pushl
mov
mov
jle
xchg
lcall
push
sbb
gs
inc
scas
sbb
jl
inc
or
ret
out
dec
pop
icebp
rolb
pop
imul
stos
pop
testl
mov
inc
sbb
xchg
femms
jge
and
push
popa
sbb
adc
dec
sbb
inc
leave
aad
mov
or
movsl
fstpt
rorb
mov
sub
std
xor
daa
call
ds
inc
cmp
test
ret
loop
push
pop
pop
adc
dec
or
repz
decb
push
pop
call
mov
xor
adc
aad
and
imul
lcall
adc
sbb
cmp
andl
test
or
mov
push
cli
mov
mov
insl
sub
lcall
hlt
mov
int
ljmp
loopne
pop
data16
bound
jmp
xchg
je
idivl
leave
sbb
mov
cmp
cmp
add
cmp
push
ljmp
cli
or
cmc
dec
xchg
rorb
lret
hlt
xchg
fiadds
cli
adcb
pushl
xor
xchg
jo,pn
inc
pop
inc
sbb
push
add
or
ds
mov
into
lock
sub
push
test
lcall
call
test
bound
lods
loope
ljmp
jbe
dec
jns
sub
pop
ficompl
mov
outsl
cwtl
sub
jle
xchg
lods
ss
push
dec
fdivrp
lcall
std
pop
push
adc
movsb
aas
and
aaa
leave
sbb
call
mov
pop
fcoms
pop
lock
popf
ljmp
fdivrs
mov
cmp
xor
add
pop
cltd
imul
and
and
ja
or
mov
cli
test
inc
fistl
repnz
and
mov
jb
into
rolb
pushl
cmpsb
mov
adc
dec
je
mov
mov
xchg
inc
test
jb
mov
fdivrs
outsl
ret
ljmp
cmc
cmp
mov
sub
push
push
add
mov
dec
jmp
stos
inc
sub
lock
rclb
add
call
xchg
jno
stc
cmp
mov
std
iret
leave
mov
call
jno
pop
js
mov
jmp
popf
cmpl
adc
int
xchg
jg
sub
loop
jbe
push
jno
jb
mov
jmp
aaa
inc
dec
sti
jl
mov
mov
or
ss
mov
fstl
pushl
fs
jle
xor
andb
or
in
scas
adc
push
call
add
in
repnz
sub
sub
cmp
mov
incl
dec
ljmp
subl
push
test
mov
mov
push
call
test
leave
scas
ficomps
orl
lock
dec
ret
mov
mov
pop
nop
sbbl
popa
mov
pushl
xchg
push
fsts
cmp
lret
cmp
inc
nop
insl
out
xchg
lock
icebp
cs
cmp
sub
jno
daa
jo
incl
dec
sub
jg
xor
pop
add
pushf
stos
add
mov
pop
push
or
ds
mov
mov
or
dec
loop
flds
jno
add
or
inc
xchg
test
push
out
insl
je
cmp
movsb
jbe
in
clc
jg
mov
loope
repz
push
push
dec
jns
test
incl
and
les
xchg
lret
mov
test
push
xor
mov
mov
shl
arpl
pop
insl
aas
mov
sub
dec
inc
cmp
sub
call
mov
add
push
dec
mov
ficoms
jp
out
mov
xor
decl
sub
mov
aaa
inc
xor
mov
xor
mov
js
sarb
fildll
jge
test
cltd
pushw
sub
pop
or
sbb
das
sar
mov
pop
mov
jge
loope
dec
push
xchg
into
xchg
int3
ljmp
xchg
incl
xor
jle
cwtl
das
int3
adc
mov
ds
sub
pusha
fisttpl
decl
mov
sub
arpl
and
test
pop
mov
adc
loope
cli
ljmp
imul
sbb
pop
or
cwtl
xor
xchg
xchg
loopne
jne
cld
stc
pop
adc
decl
in
addr16
pop
mov
xchg
or
aad
std
pop
mov
mov
pop
sbbl
push
int
mov
cs
pop
push
xlat
jb
mov
inc
jl
mov
inc
sub
xchg
inc
outsl
clc
lcall
dec
xchg
scas
stc
push
fimull
mov
notb
aam
and
pushl
xchg
fdecstp
jg
stos
xchg
mov
addr16
test
fucomip
fucom
mov
xchg
iret
push
push
int
ljmp
jne
jp
sbb
test
jbe
add
pop
jmp
out
mov
and
inc
hlt
push
incb
cmp
ja
cmpsl
jge
dec
mov
mov
mov
iret
xchg
mov
xchg
sbb
out
dec
jge
inc
jbe
mov
call
std
pushl
movsl
jmp
gs
subb
mov
ljmp
lea
test
leave
sbb
lock
and
fbld
adc
lods
xor
and
loop
xchg
out
test
mov
jo
jl
ljmp
fstp
mov
mov
mov
and
sbb
hlt
xchg
sbb
stos
pushf
pop
icebp
ljmp
or
data16
mov
xor
ds
pop
jge
subb
mov
std
call
aam
out
adc
mov
js
in
xchg
xchg
xchg
dec
shrb
call
aas
lds
mov
xchg
je
lret
incl
je
loop
pop
dec
inc
cmp
pushl
inc
jns
or
xor
loopne
sbb
jnp
push
lods
and
inc
cli
sbb
incl
cmp
movsl
arpl
lods
xor
cmpl
mov
push
push
inc
sub
xacquire
das
repz
and
adc
movups
adc
inc
pop
xchg
pushf
sub
mov
fcomi
and
jp
jl
dec
fwait
push
add
insl
cmp
pop
cmpsl
test
push
insb
lods
xor
in
jge
lahf
xlat
mov
ret
lahf
pop
es
sub
call
xchg
and
stc
jbe
sub
pop
arpl
or
mov
and
andb
mov
data16
aam
xchg
loopne
sbb
or
mov
lcall
fidivrl
es
out
adc
pop
adc
and
aaa
push
mov
sub
xchg
loopne
sbb
adc
aas
icebp
pushl
scas
or
scas
adc
insb
cltd
jno
push
add
xor
dec
or
incl
or
sbb
sub
mov
jno
mov
xchg
and
movsb
or
xlat
cwtl
in
pushf
movsl
mov
std
inc
add
enter
xorl
mov
out
gs
in
mov
push
inc
dec
xchg
sbbl
xchg
movsb
incl
or
jg
inc
cmp
push
cmc
jg
mov
icebp
inc
sbb
call
jnp
xchg
mov
fs
mull
adc
mov
push
adc
jmp
inc
loop
pop
push
pop
test
lds
repnz
jecxz
mov
push
int3
fsubrp
test
leave
inc
inc
mov
xchg
pop
cli
into
jbe
cmp
aam
add
sbb
decl
sub
add
jno
add
cmpsl
movsb
push
push
arpl
cs
mov
movsl
inc
rcll
decl
inc
sbbl
jge
jns
jae
mov
sar
fmuls
jo
mov
arpl
and
clc
decl
test
test
push
fcoms
popa
test
cmp
pop
in
sahf
mov
sub
xchg
pop
loopne
test
aas
xchg
iret
mov
aam
rcr
adc
loop
jmp
ds
or
hlt
jbe
adc
pop
push
in
pop
cltd
sbb
jo,pt
call
lret
adc
repz
subl
sahf
lock
test
decl
push
lret
pop
cmpb
dec
daa
pop
aad
cmpsl
scas
decl
ret
push
pop
dec
inc
iret
mov
cltd
stos
popw
mov
incl
mov
mull
in
les
push
push
or
repnz
inc
decl
mov
lds
aas
push
fistpl
pop
insb
lcall
mov
cld
mov
pop
das
adc
sbb
mov
xchg
ret
ror
movsl
ljmp
pusha
pop
xor
xchg
rclb
mov
pop
int3
mov
sarb
test
jg
sbb
cmp
cmp
aas
in
insl
fwait
pop
stos
mov
cmp
jo
in
nop
in
in
lcall
jmp
jne
push
sysexit
sahf
add
stc
cmpsl
imul
mov
iret
lcall
sbb
pop
pop
xchg
sti
addr16
popf
pop
in
inc
sbb
dec
xlat
leave
pushl
xchg
and
or
jmp
mov
aas
shlb
add
sti
loop
mov
push
call
pop
fdivrs
mov
adc
push
andl
mov
mov
jno
dec
pop
insl
daa
loope
call
cmp
hlt
jecxz
ficoms
dec
outsl
lock
lret
pop
mov
divb
pop
and
xchg
movsb
scas
data16
aas
insb
sub
sub
shlb
xor
mov
jmp
rorl
xchg
ss
cs
push
popf
mov
scas
jp
incl
lea
aas
imul
add
mov
xchg
lcall
jg
rcrb
push
aam
pushf
mov
popa
cltd
sahf
lea
adc
pushl
ss
mov
and
repz
iret
scas
pop
xchg
xlat
and
lret
jecxz
add
mov
inc
xchg
lods
cld
xlat
es
cltd
mov
pusha
lock
push
cmp
rcrl
test
daa
stos
mov
mov
test
jecxz
pop
inc
pop
lcall
add
daa
cltd
shr
fucomp
adc
xchg
sub
daa
hlt
sbb
cld
jmp
lock
xlat
mov
sub
sahf
mov
cmp
sahf
daa
sti
incl
fadd
jp,pn
stos
sar
push
xchg
dec
sub
push
xor
ss
jge
jg
sub
divb
add
into
xor
in
ds
fwait
pop
push
jmp
sahf
outsl
mov
ss
lods
mov
jl
dec
and
cmp
jg
jmp
arpl
ret
dec
cltd
repz
xchg
adc
popa
cmp
ret
ret
pop
inc
cld
sbb
in
les
xchg
cmp
int3
insl
add
sbb
call
push
add
mov
outsb
inc
xchg
pop
add
les
fdiv
add
jmp
mov
sbb
xchg
pushf
aaa
lods
stos
fdivrl
push
adc
lcall
hlt
movsl
mov
in
ss
into
mov
scas
dec
addr16
les
js
inc
or
xor
sub
push
or
movsl
addr16
push
xor
lea
or
daa
and
adc
mov
orb
add
push
popa
mov
add
andl
adc
xchg
mov
mov
lock
jbe
incl
ss
out
not
inc
stc
insl
mov
stos
fimuls
int3
push
cmp
xchg
lret
jns
mov
incl
push
repnz
nop
adc
aad
lods
cmpsb
mov
lret
test
jmp
pop
pushl
cld
inc
pop
aam
push
fwait
testb
subl
adc
fcomip
mov
mov
repz
repnz
pop
mov
lds
lcall
in
decl
test
pop
fcom
cmp
mov
int
daa
popa
mov
pushl
cmp
lahf
ljmp
lcall
fistl
xor
xor
sarb
jg
pushl
inc
mov
mov
add
or
mov
mov
incl
push
and
in
je
fldt
or
pop
and
lret
icebp
subl
ret
xor
adc
sub
negb
int
fistpll
incl
pusha
neg
push
lds
xchg
shll
push
sti
mov
sbb
pop
stos
inc
xor
dec
insb
jae
cld
inc
jbe
dec
and
push
out
fisubrs
pushf
je
adc
dec
cmc
adc
inc
pop
je
dec
out
xchg
jne
shrb
repnz
mov
xchg
jnp
fdivrp
xchg
xchg
and
jmp
sti
ficomps
push
push
inc
insb
hlt
test
mov
insb
int3
lods
jns
mov
outsb
lret
decl
xchg
inc
pop
sub
in
cmp
lahf
cmp
pop
push
das
sub
addr16
dec
icebp
outsb
ja
adcb
movsl
sbb
xor
je
xchg
push
inc
xchg
ss
push
into
jg
pushl
in
jbe
cmp
jmp
ljmp
lock
push
das
xor
fbld
lret
and
add
xchg
pop
out
stos
bnd
fimull
into
aam
mov
jnp
addr16
adc
arpl
mov
cs
adc
sbbl
fs
jg
sbb
jl
sbb
sar
incl
outsb
out
call
push
dec
cmp
es
insb
push
xchg
jecxz
mov
cmp
pop
jg
in
fcomps
xchg
pop
dec
pop
pop
adc
dec
fsubl
fistpl
daa
fs
stos
adc
imul
jbe,pt
icebp
fs
cmp
int3
add
dec
lcall
sub
insb
imul
fsubrl
in
sti
adc
mov
jle
scas
test
dec
mov
mov
jmp
xrelease
xchg
mov
fbstp
test
sbb
pop
daa
scas
inc
test
fidivs
repnz
sbb
ljmp
sti
loop
pop
dec
inc
insl
ljmp
jle
lcall
or
dec
xor
test
mov
pushl
loopne
inc
adc
maskmovq
testl
inc
test
cltd
jg
add
call
mov
in
xchg
xchg
sub
mov
jle
mov
xor
cli
add
idiv
pop
mov
pop
fadds
adc
repz
pop
lock
ljmp
adcb
ljmp
xchg
pop
mov
repz
scas
pushf
add
lcall
sbbl
sahf
loopne
xor
out
lret
popa
push
sarb
mov
cmp
std
cmp
jecxz
inc
insl
add
mov
push
repz
sbb
and
xchg
cmc
es
call
add
ljmp
mov
rorl
jle
adc
xchg
pop
jbe
cli
gs
incl
std
divb
xchg
mov
cwtl
ss
sbb
cmpsb
rcl
sbb
fists
out
lods
jmp
add
adc
adc
pushl
mov
sub
inc
das
and
jnp
in
mov
dec
jne
int3
sub
add
mov
jmp
movsb
lods
fwait
xchg
fildll
xorb
jbe
mov
add
inc
jo
or
jmp
adc
and
mov
test
jne
out
pop
rol
push
scas
popf
nop
mov
mov
mov
icebp
sub
fucompp
and
out
jge
getsec
add
mov
test
stos
mov
or
mov
out
cmpsb
and
sub
sbbb
and
loope
in
push
scas
cli
jns
lahf
in
or
gs
xchg
dec
jb
push
sbb
mov
ret
mov
lret
inc
jmp
sbb
cwtl
jns
adc
fcomip
pushl
out
add
sub
lcall
xchg
jnp
ror
mov
sbb
add
push
es
pop
pop
jbe
dec
mov
pop
pushl
daa
repz
push
sbb
ja
imul
push
aas
or
cmp
push
icebp
mov
xchg
hlt
xor
push
ja
xchg
mov
mov
mov
mov
ljmp
pop
mov
bound
lds
jge
lret
decl
jecxz
push
cmp
or
sub
cmpsl
pop
adc
adc
dec
ja
jnp
incl
mov
ds
mov
iret
cmp
cltd
fstpt
out
push
int
sbb
fidivrs
pop
xor
mov
cld
aas
cmp
in
test
or
js
cmp
and
xchg
pushl
cltd
push
lods
add
outsb
addr16
vpcmpeqw
and
lea
mov
int
pop
insb
ljmp
xchg
or
mov
add
scas
test
dec
cmp
jle
push
cmp
aad
xor
add
lcall
and
pushf
rcrb
and
out
inc
adc
mov
mov
mov
jns
popf
mov
movsl
xchg
and
pop
mov
or
jecxz
shll
sub
jmp
filds
and
adc
push
out
mov
in
out
sbb
push
pop
lahf
jge
cmp
call
shl
mov
mov
sub
dec
xlat
push
push
inc
sbb
xchg
mov
mov
mov
xor
cmp
jg
jp
cli
inc
add
mov
rcll
mov
xor
mov
sbb
enter
xchg
push
and
pop
cld
ror
mov
arpl
push
lea
jns
aas
adc
push
pop
sub
rol
sbb
lock
clc
xchg
adc
and
push
jo
and
fimuls
rolb
push
inc
cmp
movsl
ja
jle
and
adc
pop
daa
loop
in
mov
rcr
inc
jmp
xor
mov
test
inc
and
idivb
mov
lcall
jbe
enter
push
inc
stos
mov
cmpsl
aam
andb
testb
fildl
ljmp
jae
mov
jb
dec
out
sub
pusha
sbb
sbb
bound
call
or
std
sbb
sub
fbstp
stc
mov
into
sbb
nop
das
jmp
xchg
nop
inc
or
adc
aam
in
arpl
or
rolb
jb
scas
lock
lret
cmp
pop
xlat
mov
ror
pop
lret
jae
inc
dec
fcomip
call
outsb
ljmp
arpl
daa
int3
xchg
adc
outsb
sub
xchg
cltd
push
jmp
ds
adc
and
mov
ret
leave
add
scas
mov
int
xor
lcall
push
sbbb
inc
xchg
out
arpl
jg
pop
test
or
dec
das
pop
je
decl
arpl
and
in
ret
and
lods
ds
int3
mov
outsl
mov
pop
or
dec
jg
decl
jmp
dec
in
ret
out
les
or
fwait
lcall
incl
mov
or
pushf
imul
pop
cmp
push
aaa
cmp
ret
ja
rorb
adc
dec
dec
sub
pop
rcl
push
in
pop
add
dec
cli
outsl
cmpsl
sbb
dec
adc
cmp
in
mov
js
jg
ds
cmp
inc
jmp
pop
cli
mov
cli
xor
arpl
inc
sub
cmp
cmp
jb
cmp
test
insl
mul
scas
sub
xor
aam
inc
jl
mov
lcall
fwait
in
sbb
mov
xor
ds
in
add
test
lcall
int
mov
leave
pushf
jnp
cmp
pop
jmp
hlt
dec
ret
sub
xchg
jp
cmp
mov
push
mov
sub
mov
ljmp
shrl
inc
sub
dec
lret
mov
in
aaa
push
andb
jge
xor
and
je
out
lret
stc
lcall
clc
iret
mov
xor
lds
in
ret
incl
pusha
xchg
mov
inc
adc
neg
outsb
in
mov
cmp
cltd
mov
push
arpl
test
hlt
and
clc
loop
cltd
aas
and
xor
aam
dec
push
lock
sbb
or
sti
cmp
jmp
rep
pop
and
inc
test
jno
leave
pop
sarl
xchg
mov
mov
imull
inc
cltd
cltd
dec
cwtl
xlat
call
popf
cmpsl
push
push
push
lock
mov
decl
sbb
mov
std
in
out
jmp
imul
popa
and
in
popf
dec
jmp
test
or
fsts
jae
xchg
inc
add
cli
pop
sahf
divb
stos
dec
jecxz
out
clc
pushl
fsubrs
push
fldenv
lea
push
xor
sub
jns
push
inc
sub
orb
jle
orl
jmp
cltd
out
fwait
in
lret
push
scas
pop
insl
outsl
mov
xchg
dec
insl
sbb
jmp
lock
lahf
add
adc
or
sub
add
jo
dec
icebp
and
mov
pusha
or
jno
push
push
call
decl
adc
pop
xor
sbb
dec
cmp
adc
repnz
adc
jge
flds
inc
test
mov
inc
addb
sar
mov
or
cld
push
bsr
rol
pushl
mov
pop
mov
mov
mov
call
xor
xor
pop
cmc
mov
push
icebp
mov
dec
ss
loop
in
push
pushf
pushf
push
cmp
mov
jne
push
pop
test
ja
push
push
fnstcw
push
xchg
pushl
adc
loope
cli
out
adc
das
add
xchg
rclb
mov
mov
lock
dec
aad
add
add
dec
bound
xchg
rcrl
punpckhbw
lcall
jge
jae
inc
or
addl
stc
sbb
dec
xor
call
test
cmpsb
mov
or
call
lret
sbb
fildll
push
cmp
pop
push
shlb
in
js
stos
imul
sar
je
das
mov
or
ja
mov
jo
scas
xchg
dec
mov
and
xor
ljmp
push
jbe
mov
sbb
adc
sbb
test
inc
jecxz
lock
xor
cmp
xchg
aas
mov
clc
fwait
pop
cmpl
das
and
jno
pop
jne
lds
xchg
jmp
addr16
mov
inc
leave
out
aaa
jl
pop
sbb
adc
cld
push
mov
jmp
popa
dec
outsl
jecxz
push
std
cmp
sahf
and
shl
inc
push
fisttpll
dec
pop
push
pushl
fsubs
xor
inc
sbb
xchg
outsb
leave
int3
sub
icebp
sub
jmp
or
pop
clc
xor
repnz
push
sub
push
mov
aas
cmp
inc
sbb
jp
incl
out
jbe
sub
add
in
test
adc
scas
mov
icebp
ljmp
incl
xor
stos
dec
jo
hlt
add
adc
mov
test
sahf
mov
mov
or
addr16
xor
xor
xchg
jne
outsb
out
clc
ret
xchg
addl
mov
loop
xlat
test
stos
dec
stc
in
into
les
xchg
in
cwtl
movsl
arpl
into
cld
xchg
and
pop
mov
ljmp
adc
outsb
adc
insl
pop
cmpsb
loop
adc
imul
dec
mov
mov
dec
testb
xchg
push
outsb
adc
xor
loopne
fnstsw
xlat
cmp
and
ss
mov
mov
pop
cmc
call
cmp
mov
push
inc
mov
mov
iret
leave
cmc
aaa
jle
ljmp
mov
fsubrl
or
jno
popa
adc
decb
cmp
adc
jmp
xor
inc
add
xor
data16
mov
push
lea
pop
in
jg
dec
sub
add
jecxz
xchg
and
rcrb
xchg
mov
call
cltd
ds
pushl
fdiv
mov
and
scas
pop
scas
daa
out
inc
lods
or
jg
inc
lods
or
in
mov
dec
mov
loop
xchg
enter
lock
inc
jo
sarb
imul
sbb
nopl
aaa
jg
sar
jge
pop
xlat
mov
sti
jbe
adc
mov
pushl
pop
hlt
xlat
cmp
inc
dec
cs
inc
lock
sbbb
or
mov
mov
rorl
fwait
mov
push
cltd
stos
fiadds
fs
cmp
scas
clc
jle
or
insb
jl
cmp
hlt
popf
pop
sbb
pop
push
cli
les
incl
dec
out
xchg
mov
and
inc
push
subb
xor
cs
movsb
jp
xchg
imul
mov
cltd
add
push
cmp
cmp
sbb
jmp
ljmp
movsl
imul
pop
inc
loopne
xchg
mov
int
lahf
lret
pop
aad
sar
or
inc
lods
in
clc
push
cmpl
or
test
pop
cmp
out
mov
call
pushl
movsl
call
outsl
add
add
cmp
stc
push
sbb
dec
leave
push
jl
sbb
fcomip
cmp
outsl
ja,pt
dec
out
lcall
mov
mov
mov
jecxz
xlat
aaa
pop
sbb
imul
xor
aaa
or
shll
jb
cld
sbb
sar
jg
xchg
imul
fidivrs
pop
jno
movsl
rolb
or
and
and
sub
dec
pop
xlat
and
xchg
or
add
jg
aas
push
lahf
jecxz
test
cmp
or
in
jbe
sbb
cmc
rorb
xchg
in
inc
ljmp
in
movsl
ret
dec
cli
cmp
lods
and
test
in
lods
pop
dec
pushl
aas
fdivl
push
movsb
push
call
pop
fidivs
sbb
or
ljmp
hlt
lods
sub
mov
mov
pop
fs
inc
ret
movsl
cmp
lea
nop
imul
loop
fnsave
fstpl
outsb
ljmp
sbb
jmp
dec
xor
ret
xor
pop
fstpl
push
xor
add
leave
in
push
pop
mov
inc
out
clc
sahf
inc
movsl
inc
mov
adc
outsl
hlt
sahf
imul
xchg
aam
jl
out
cwtl
icebp
sbb
movsb
test
pop
sbb
je
arpl
xchg
sbb
subl
imul
or
aam
mov
mov
divl
or
inc
and
in
pop
sbb
not
add
jmp
mov
fistl
loop
push
sti
mov
fwait
or
jecxz
xchg
mov
incl
pop
inc
pusha
pop
xor
out
cmp
cmpsb
fldt
push
adc
sub
loopne
sbb
push
negl
ljmp
je
mov
pop
mov
or
jns
push
mov
hlt
sbb
and
mov
cld
call
insb
mov
jo
ljmp
in
fistpl
xchg
add
lock
incl
fimull
sahf
jmp
mov
je
test
jmp
add
stc
mov
jmp
aad
out
popa
adc
repz
outsb
cmp
jmp
stos
sahf
mov
xlat
mov
cmp
data16
pushf
xchg
aad
adcb
mov
push
outsl
mov
jg
pop
adc
test
data16
xor
je
jecxz
popa
cld
ja
jp
dec
mov
clc
mov
push
pop
les
cs
cmp
jnp
mov
fs
pop
add
pop
inc
jnp
pushl
xchg
pop
sahf
mov
int3
xor
fbld
xlat
daa
fwait
mov
cmc
add
mov
das
push
pop
cld
push
lret
fldcw
hlt
sbb
imul
sub
mov
sar
decl
lcall
out
fnstsw
and
dec
xchg
loop
aaa
xor
notl
push
inc
aaa
outsl
jno
jg
incl
mov
push
leave
dec
mov
pusha
mov
scas
pop
xchg
ror
ljmp
icebp
rcr
jmp
hlt
mov
mov
incl
lea
addb
popl
scas
cltd
iret
loope
test
loopne
nop
mov
cwtl
push
mov
lcall
scas
push
and
jmp
jae,pn
dec
shrb
cli
mov
or
lea
mov
dec
incl
fstpl
sahf
dec
out
test
mov
aam
ficompl
clc
xchg
scas
sbb
loop
pushl
ja
or
sbb
jns
add
xchg
dec
mov
cld
inc
adc
call
add
xchg
lret
inc
adc
sahf
cmp
int
inc
dec
pop
pushf
mov
sbb
sti
fs
jg
shll
cld
test
jns
pop
in
ja
push
xor
push
decl
fidivl
mov
xchg
sbb
dec
loope
pop
std
sti
bound
btc
mov
or
mov
mov
aaa
xor
xchg
inc
inc
out
mov
push
mov
mov
shlb
les
inc
sub
in
cmp
xchg
add
jg
stos
mov
cmc
insl
fsubp
gs
in
ficompl
adc
xor
add
pusha
movsl
rcll
shrl
mov
or
cs
jne
popl
cmp
jnp
cmc
sbb
shll
jmp
outsb
rolb
mov
xchg
xor
mov
lods
es
mov
push
ret
jmp
gs
pop
shrb
in
movb
enter
push
pop
loope
out
sub
and
leave
icebp
decl
jp,pt
or
rcll
add
sub
cmp
lcall
addr16
cld
pusha
mov
jb
cmp
cmp
loop
jo
fs
pushf
and
out
add
mov
and
and
hlt
pop
cmp
pop
push
loopne
xchg
daa
push
xchg
call
call
mov
lcall
jmp
out
jg
repz
jno
dec
fnstsw
aad
shl
je
lahf
xor
push
pop
pop
ljmp
das
inc
mov
sbbb
cmp
push
mov
loop
cltd
sub
out
jno
mov
mov
call
ja
add
cmc
repnz
rol
out
pop
pop
cli
pusha
jl
adc
ds
jmp
dec
into
clc
mov
xor
jl
aam
xorl
xor
incl
xchg
mov
mov
mov
sub
out
jge
and
push
jl
movsb
in
cmpsl
pop
cmp
dec
and
in
pushf
imul
mov
in
pop
push
dec
xchg
xor
xor
incl
xchg
out
out
repnz
lcall
jb
pop
pop
paddw
jmp
pop
std
nop
cmpsl
pop
cmp
cld
pcmpeqb
jae
imul
pop
inc
pushl
icebp
imul
push
test
adc
xchg
xorl
daa
adc
lret
adc
sub
lcall
test
cmp
sbb
shrl
jb
mov
fsubr
sub
push
mov
js
or
xchg
cmp
fwait
lcall
pop
xchg
lea
dec
xchg
and
loop
xchg
ljmp
addb
pushf
fcompl
popf
cmp
mov
push
fistps
inc
std
sahf
lods
lds
jno
cwtl
aas
clc
decl
push
jmp
decb
adc
xor
jne
arpl
out
mov
xchg
loope,pt
mov
mov
outsb
jmp
push
dec
mov
int3
fildl
lcall
sub
clc
jno
movsl
xor
sti
arpl
sub
ret
pusha
divb
adc
dec
push
out
icebp
jmp
mov
das
mov
pop
ljmp
or
cld
mov
je
add
dec
decl
mov
mov
out
jge
mov
aas
xor
call
call
arpl
mov
test
iret
and
xchg
sbb
pop
mov
popa
mov
push
les
dec
cmp
push
rorb
mov
or
cmp
cmp
mov
lock
fdivl
lcall
aas
sbb
mov
dec
cltd
test
es
fsubs
popa
and
arpl
call
push
sub
lret
pop
adc
dec
jle
ds
in
call
insl
test
sbb
jbe
repnz
adc
subl
lods
adc
call
enter
je
shrb
leave
les
je
xor
sub
stos
adc
jmp
cmp
mov
xchg
add
and
push
push
dec
fmuls
push
jg
ret
add
fmuls
mov
adcl
inc
hlt
jmp
fdivs
and
pop
subl
repz
fcomip
adc
aam
and
sub
push
insb
dec
dec
addr16
call
sbb
mov
movsl
pop
addb
dec
orb
stc
mov
jmp
adc
fdivr
mov
dec
cmp
mov
xor
cli
push
xchg
repz
fwait
das
insl
push
ljmp
pushl
mov
dec
bound
xchg
dec
ljmp
inc
insb
ret
sub
lret
mov
jmp
inc
sbb
jp
mov
mov
dec
push
inc
or
and
loopne
fcmovb
stos
lcall
in
sbb
cld
rcr
lcall
jmpw
and
dec
pop
into
sub
xchg
cld
test
lcall
xchg
lret
mov
jnp
mov
inc
cmp
stos
or
pushf
lds
and
inc
dec
cwtl
sbbb
hlt
pushl
std
or
ret
imul
stos
jne
mov
mov
mov
lods
mov
jbe
mov
mov
rcrl
jbe
rcrb
ds
bound
loope
aaa
push
pop
push
data16
pmaxsw
out
pop
addl
pushl
xchg
jno
push
dec
or
stos
nop
stc
adc
pushf
push
out
lahf
clc
xor
fstpt
mov
mov
mov
jle
jae
pop
cs
mov
mov
dec
aam
fwait
pop
dec
jmp
js
leave
mov
ljmp
push
inc
jno
mov
mov
sbb
insl
fdivp
iret
mov
leave
imul
fsubrs
loopne
push
mov
inc
outsl
pop
and
or
aam
cmp
push
jecxz
push
add
cmc
xor
mov
mov
into
shl
jp
rcrb
lods
and
test
mov
jo
jo
jnp
loopne
shlb
in
pop
pushl
jl
pop
clc
add
xchg
or
mov
dec
mov
cmp
orb
dec
pop
pop
das
adc
jns
pop
rorb
inc
push
lahf
loop
cmp
jge
xchg
movsl
inc
inc
or
dec
lret
xchg
add
mov
adc
or
flds
xlat
or
test
movsl
cmp
fbstp
jmp
sub
push
cmp
ss
fwait
lods
mov
pushl
pop
mov
fdivr
subl
aaa
xor
ret
test
mov
out
movb
movsl
sub
cwtl
add
pop
lds
mov
sbb
in
bound
cmp
xor
mov
pop
sahf
sub
imul
mov
aas
push
jecxz
call
lds
jl
inc
sub
pop
lea
push
leave
sar
and
scas
pop
js
incl
push
adc
ret
insb
dec
ficompl
mov
icebp
dec
adc
add
mov
sub
sbb
popa
sbb
mov
lcall
das
push
push
jno
cmp
in
cmp
add
or
push
pop
jne
stos
insl
jne
fistps
pop
sub
outsb
dec
int
rcll
and
test
or
enter
incl
or
out
fisubl
scas
iret
fucomip
jecxz
cmp
pop
xchg
and
incl
jo
bound
pop
jbe
pop
out
and
push
lea
adc
sbb
subb
and
pop
cld
rcr
decl
xchg
push
xor
or
inc
movsb
sbb
mov
arpl
xchg
sar
push
sbb
arpl
lahf
xor
mov
mov
xlat
adc
subl
push
add
sub
decl
negl
rcr
test
xchg
xchg
lock
fwait
mov
es
call
int
mov
sub
mov
mov
push
outsl
mov
shl
mov
mov
sub
mov
pop
sbb
std
adc
sub
cmp
jmp
jecxz
fidivrl
lock
pop
fisubs
sub
jl
shl
loopne
xchg
ja
cmp
jb
stc
popf
loop
stos
add
popa
call
cltd
scas
sub
inc
sarb
push
push
push
mov
mov
lcall
std
lcall
outsl
loope
mov
and
adc
lcall
mov
push
mov
adc
test
scas
aad
xchg
jmp
int3
dec
push
inc
aas
std
std
jmp
pop
adc
mov
lock
xchg
mov
sar
test
mov
and
decl
movsl
adc
dec
dec
push
repnz
xchg
int3
cmpsl
inc
inc
sbb
ret
mov
aam
xchg
add
add
xlat
push
push
bound
mov
cmp
push
fisubrs
cmp
sbb
ss
inc
pusha
mov
daa
cs
cmp
or
out
fnstcw
jmp
add
mov
jge
and
lcall
negl
jl
lea
pushf
dec
mov
mov
lcall
sub
repnz
cmp
jne
test
or
inc
pop
pop
call
pop
jle
ficoml
call
adc
inc
outsl
lods
nop
hlt
ja
inc
dec
xor
lods
in
xchg
adc
pop
fcomip
push
data16
rcll
push
jp
adc
sbb
dec
int3
lcall
lods
cmp
sbbl
push
cmp
pop
outsb
pushl
js
push
fcmovnbe
add
out
loope
xorb
add
pop
icebp
stos
and
cwtl
inc
mov
sub
roll
gs
sub
lcall
popa
aam
and
mov
dec
out
orb
icebp
cmpsb
decl
scas
cltd
lahf
push
dec
imul
lock
data16
jnp
jge
gs
jo
lods
mov
xlat
jmp
cmp
xchg
out
cmp
inc
push
push
stos
out
jo
imul
mov
call
pop
lahf
xchg
mov
rcl
xor
xchg
test
fucomi
je
or
mov
push
jbe
icebp
mov
or
stc
fst
mov
loope
cmp
je
call
mov
scas
jg
and
mov
fisttpl
xlat
adc
sub
cld
ljmp
pop
movsb
mov
cld
jmp
jmp
jo
fst
cmp
in
mov
mov
movsl
addr16
pop
insl
hlt
and
es
ja
test
pushf
ja
sar
jmp
pop
pop
cmp
shll
out
push
mov
cs
jmp
in
aaa
push
and
clc
add
xchg
or
mov
repz
xchg
inc
sahf
push
std
dec
cwtl
lods
jo
jmp
sbb
mov
stos
outsl
jp
mov
js
imul
hlt
negb
das
sar
and
mov
xor
mov
jo
push
call
jecxz
sbb
je
cmp
insl
popf
int3
repnz
push
jae
jnp
arpl
lcall
imul
mov
dec
cltd
dec
mov
mov
dec
xor
inc
pop
sbb
dec
mov
dec
je
and
fwait
jns
movsb
test
insb
push
in
pop
andb
enter
call
inc
mov
sub
imul
test
jp
es
inc
cwtl
lcall
add
xchg
subl
insl
fistpl
inc
jg
aam
lods
sbb
fistl
mull
mov
icebp
leave
rcl
xorb
ss
loop
movsb
jo
dec
outsl
cli
dec
stos
gs
hlt
andb
lahf
push
int3
test
xor
xchg
sti
bound
xor
pop
mov
jmp
stos
push
xor
xchg
das
and
cwtl
add
movsl
xor
hlt
xorb
push
ret
mov
rclb
mov
cs
mov
jp
fmulp
ret
mov
inc
loopne
pushf
xchg
pop
hlt
mov
inc
inc
xor
push
lahf
mov
mull
lods
mov
mov
jns
scas
repnz
fwait
push
movsb
imul
int
pushl
subl
dec
ret
pop
popf
mov
out
inc
pop
lret
inc
mov
jae
pushf
into
pushl
stos
cwtl
lea
push
mov
out
cld
repz
add
mov
movsl
mov
jge
dec
cmp
call
pop
popf
dec
or
mov
dec
mov
add
push
andb
mov
jmp
mov
sbb
fsubs
cld
fnstsw
sbb
pop
pop
pop
pop
call
mov
sbb
xor
pop
inc
push
icebp
sub
adc
xchg
mov
les
push
mov
test
push
ffree
pop
push
mov
test
in
dec
pop
sbb
xchg
pushf
add
xchg
inc
mov
call
push
mov
inc
in
inc
cld
mov
inc
jbe
jae
rolb
in
subb
loop
call
clc
daa
sub
pop
or
adc
xchg
stos
mov
jle
scas
pushl
push
mov
sub
inc
xchg
xor
mull
mov
jae
ljmp
xchg
cmp
mov
insb
inc
cltd
and
jle
movsl
ret
popa
mov
inc
testl
mov
icebp
fs
sub
fdivr
jo
dec
jl
ret
into
dec
call
stos
frstor
call
lret
mov
push
mov
pop
arpl
mov
mov
cmpxchg8b
out
pop
add
push
in
push
testb
imul
fwait
inc
jecxz
dec
aam
sub
mov
loope
jl
decl
icebp
cmp
out
repnz
scas
in
ss
aaa
push
adcb
jno
ljmp
mov
clc
mov
push
pop
mov
or
xor
ret
jbe
sbb
mov
ljmp
cmp
pop
and
jno
adc
ljmp
fildll
es
pop
data16
pop
and
movsl
push
mov
jae
xchg
sub
mov
call
mov
stos
inc
pop
dec
orb
in
sbb
daa
std
loopne
lahf
jp
jmp
push
cmp
mov
shrl
test
cmpsb
lea
adc
pop
jns
mov
fwait
clc
jmp
adc
mov
cmp
mov
mov
jo
mov
jecxz
fnstsw
outsl
icebp
jmp
call
movsb
xchg
or
imull
inc
neg
adc
push
adc
cli
and
add
jne
pusha
lcall
pushl
cmp
sub
lds
pop
pop
jl
cli
inc
gs
add
aas
scas
js
xchg
fstpl
call
int3
mov
dec
push
add
xor
ljmp
decl
imul
push
push
jp
fcmovnb
insb
pop
push
pop
jg
lret
rcrb
mov
lcall
mov
push
out
and
xchg
ror
jecxz
lds
or
jmp
pop
fs
cmp
movsl
test
outsb
scas
pop
mov
cwtl
sbb
mov
inc
loope
xor
shl
decl
lods
xchg
cmpsb
dec
nop
sahf
lret
callw
outsl
or
and
cmp
mov
or
fsts
and
lret
das
cli
ljmp
lret
outsb
arpl
push
cmp
lock
xchg
loop
rcrl
xchg
je
pop
and
rcll
int
push
pop
popf
mov
cmc
cmp
mov
ljmp
mov
lea
leave
in
mov
or
stos
inc
adc
js
mov
xchg
jbe
jecxz
inc
fstps
incl
jle
jp
adc
xlat
jmp
lods
nop
mov
outsl
add
dec
mov
mov
rclb
gs
lock
or
jns
cmp
call
xor
fadd
or
addl
leave
jl
jno
mov
loop
pop
inc
or
ljmp
mov
hlt
jl
adc
adc
fiadds
out
push
mov
ret
adc
decl
shlb
lods
add
scas
outsl
fcomip
rol
call
xor
sbb
insl
loope
add
ljmp
xchg
or
int3
shlb
outsb
das
lahf
out
fwait
cmp
addr16
insl
shl
fisubl
dec
pop
sbb
jo
sbb
out
xor
and
push
call
ljmp
out
gs
sbb
fildl
fwait
jle
in
outsb
cmpsb
sbb
lret
je
mov
enter
clc
jb
repz
out
rclb
repz
ljmp
lea
jmp
add
or
add
jg
inc
outsl
jg
stos
outsb
jp
mov
or
cmpsl
ret
jmp
jg
and
jmp
sbb
xchg
pop
or
das
clc
or
sti
test
and
call
incl
incl
rorb
pop
dec
xchg
test
jnp
es
inc
pusha
nop
pushl
add
cwtl
repnz
movsb
pop
out
ja
iret
xor
loop
pop
movsb
cmc
xchg
repz
test
mov
jbe
cmpsb
or
outsl
loope
cs
push
loopne
and
cmc
mov
add
test
pop
hlt
mov
shl
push
xchg
negb
cmp
fbstp
out
add
mov
aam
pushf
addb
mov
jge
adc
enter
fwait
outsb
clc
mov
pop
xchg
int3
cli
pusha
enter
or
dec
test
dec
ljmp
stos
hlt
insl
sub
add
je
mov
cli
loopne
jmp
decl
push
imul
iret
adc
dec
jo
mov
jg
pop
inc
pop
mov
cmpsl
add
cmp
mov
fwait
jns
add
pushl
addr16
push
pop
jmp
or
cmpsl
pushf
call
adc
decl
loope
negb
push
fs
fcomip
push
lock
push
jno
stos
push
scas
xchg
cmp
cli
adc
sbb
push
mov
xor
cmp
pushl
outsl
enter
jmp
mov
jmp
fprem
inc
push
sbb
repz
and
out
push
shr
call
je
hlt
sbb
mov
decb
in
fs
stc
sbb
xor
jnp
jg
call
xor
int3
push
fistpl
dec
jbe
push
lahf
xchg
xchg
cmp
xchg
ficoml
icebp
sub
leave
mov
pop
push
cmp
adc
jecxz
jmp
pushl
fiadds
data16
repz
cltd
ds
mov
sub
inc
jnp
daa
ljmp
insb
sub
pop
cmp
repnz
mov
incl
push
add
int3
scas
inc
out
loopne
shlb
inc
sub
inc
mov
inc
fcomi
movsb
or
push
cmpsb
jo
xlat
clc
imul
test
jle
lcall
push
leave
cmp
iret
imul
adc
xor
xor
lahf
pop
icebp
outsl
fisubs
xor
mov
jmp
stos
cmc
pop
scas
mov
test
cmp
std
flds
dec
test
iret
inc
inc
dec
insb
sahf
mov
cld
cmp
jg
insb
mov
rcll
mov
pop
mov
ljmp
sbb
dec
addl
imulb
lahf
dec
cld
loopne
pop
sbb
insl
dec
imul
mov
xchg
aam
hlt
push
imul
add
loop
cwtl
in
out
fdivrs
mov
mov
jp
scas
add
in
call
inc
pop
inc
and
je
scas
cmp
dec
sbb
lret
inc
or
call
inc
fiadds
insl
sbbb
outsl
cmp
cwtl
hlt
mov
jmp
push
in
out
repnz
or
cli
popf
cld
es
cmpsl
jns
test
adc
aaa
xchg
jecxz
aas
js
adc
push
cmpsb
mov
subl
out
push
push
dec
mov
movsb
mov
xchg
fisubl
shrb
and
call
lds
notl
pop
pop
add
movsb
push
push
adc
push
call
inc
dec
outsb
cld
cld
test
arpl
mov
cmc
cmc
mov
ljmp
cmpsb
and
lahf
adc
mov
inc
imul
cld
lcall
xlat
out
mov
loopne
dec
decb
stos
xor
out
std
jmp
ljmp
adc
mov
faddl
lock
incl
xor
test
pop
fs
mov
fdivs
idiv
mov
cmp
bnd
jne
ficompl
fcmovnb
mov
jne
push
jne
inc
add
pushl
dec
cld
dec
test
aad
idivl
dec
cmp
jae
adc
jp
in
jae
inc
pop
push
out
jbe
test
push
sahf
mov
sbb
inc
jb
subb
jg
icebp
fisubrl
mov
stc
mov
xchg
adc
or
push
xorl
out
inc
sbb
clc
push
jno
cmc
in
push
jle
mov
stos
sbb
pop
test
add
push
adc
rcr
leave
jge
xor
mov
mov
ja
test
xchg
addl
jg
inc
or
in
mov
push
pusha
shll
mov
out
lods
insb
ljmp
add
mov
xor
push
aam
fildll
pop
enter
add
ret
jnp
sub
sub
fcompl
push
and
cmp
loop
divb
mov
and
int
cmpsl
sub
mov
mov
push
or
inc
cmp
adcb
lods
outsl
add
ret
inc
popf
jmp
incl
pop
dec
or
stos
or
aam
lret
mov
cmpsl
mov
fimull
pop
pop
idiv
jmp
pushf
lock
pop
cmp
popa
cs
mov
out
pop
mov
fdiv
jg
call
push
mov
pop
adc
or
push
xor
adc
cmp
into
ret
sbb
jae
mov
mov
or
mov
inc
lcall
sub
xor
cld
in
dec
inc
rorb
and
pop
pushl
inc
or
inc
cs
repnz
movsb
mov
xchg
inc
stos
imull
cmp
adc
sub
mov
pop
push
mov
rep
andb
dec
pop
lock
dec
jecxz
cld
mov
jae
aas
ja
cmc
xchg
into
xchg
insl
insb
stos
dec
outsl
insl
js
jmp
mov
xor
int3
or
cwtl
inc
push
test
dec
orb
or
sub
mov
xor
mov
mov
fwait
push
xor
enter
sub
lea
push
shlb
mov
cmpsb
loopne
jb
and
inc
mov
push
mov
into
sar
jns
inc
dec
and
pop
jae
inc
xor
leave
push
ds
pop
hlt
repnz
push
inc
ret
jl
dec
arpl
and
arpl
sti
and
push
dec
mov
ret
call
sbb
ljmp
idivb
mov
xor
mov
sbb
enter
dec
dec
cmp
sub
pushl
clc
cmc
enter
and
clc
movsb
pop
pushf
jo
lods
nop
and
pop
scas
pop
push
or
jb
incl
adc
je
lsl
out
inc
movsl
push
inc
and
incl
loope
aad
push
in
enter
or
jo
cmpb
decl
jb
iret
ss
pop
enter
cmp
fsubrs
test
lds
dec
addl
mov
pushl
out
clc
sub
adc
mov
test
pop
xchg
pop
adc
orb
decl
or
daa
cwtl
ljmp
add
test
inc
mov
pop
inc
mov
add
movsl
pop
nop
cltd
mov
in
cli
rcr
mov
ljmp
shll
mov
add
mov
inc
pushf
sti
xor
mov
push
or
js
or
andb
cmpb
icebp
xchg
pop
scas
inc
das
mov
out
dec
aam
decl
in
je
shrl
loop
lods
mov
pop
and
or
cmp
popa
inc
mov
adc
adc
jle
aas
sub
js
lea
mov
popf
push
jmp
or
insb
jmp
mov
int3
stc
das
aam
sbb
lcall
mov
in
icebp
notl
mov
fistl
pop
in
mov
shll
inc
rcl
adc
xchg
dec
inc
aaa
sub
sbb
mov
movsl
mov
inc
sbb
inc
jp
int
sbb
sbb
mov
scas
fisubs
dec
fisubrs
pop
adc
jmp
mov
das
adc
in
int
jae
movsb
sbb
movsl
test
fidivrl
mov
push
pop
aam
sbb
je
sbb
adc
jge
fisttps
sbb
pop
inc
push
test
xor
dec
std
dec
pop
mov
xlat
test
stc
jb
aas
push
shrb
sbb
xchg
outsl
xchg
inc
aad
lods
jns
or
outsb
mov
repz
xchg
int3
nop
sbb
call
lock
jae
mov
push
idivl
jl
mov
mov
xchg
pop
push
and
jmp
out
push
push
or
xor
push
or
orb
addr16
jge
adc
xchg
out
mov
test
hlt
bound
push
add
xchg
adc
cmp
ljmp
mov
jne
cwtl
loop
inc
add
cmpl
and
inc
jecxz
aam
call
std
hlt
ss
mov
in
es
push
sbb
mov
incl
outsb
cli
shll
repnz
push
int
jo
pop
push
sahf
inc
movl
incl
fwait
jmp
inc
insl
popa
cmp
mov
adc
push
ja
insl
cmp
xchg
cmpsb
sub
inc
lcall
push
push
xchg
push
jb
rorb
mov
into
cmpsl
pop
sbb
in
pushl
lods
insb
jns
ljmp
dec
pop
fwait
adc
cld
cmp
test
jecxz
push
xchg
cmp
push
xor
stos
popl
mov
pop
ret
or
cmp
mov
pop
xchg
ror
and
popf
dec
inc
mov
ret
jne
mov
fistpll
mov
icebp
mov
dec
push
vphsubdq
mov
mov
popa
sub
int3
stos
inc
jmp
out
fs
xchg
popa
push
mov
ljmp
push
mov
fadds
es
cmp
or
adc
xor
sbb
xchg
decl
jno
lcall
cmp
cmc
fsub
popf
sub
pop
push
cli
sar
jmp
sbb
orb
gs
pusha
xchg
aas
rcrl
lock
lret
mov
mov
scas
mov
sahf
clc
mov
mov
ja
out
mov
aaa
sub
ret
or
popa
loopne
cld
sub
test
ret
pop
and
pushl
lea
repnz
pop
pop
adc
sub
push
dec
jnp
iret
or
jmp
push
into
bound
leave
fisubs
dec
push
sub
pop
or
pop
or
cmpsb
jge
decl
pop
outsl
pop
mov
xor
fs
arpl
xor
jmp
popa
push
ret
jae
jg
or
xchg
adcl
sub
push
mov
repnz
ffreep
jg
push
data16
mov
mov
cs
inc
stos
aad
jno
test
xor
lock
movsl
mov
cmp
sub
hlt
cmp
jmp
call
loope
mov
cmp
dec
xor
cltd
sbb
hlt
jno
sbb
pushl
sub
push
cmc
push
or
mov
sub
inc
pop
decl
sbb
jne
push
cmc
mov
mov
jp
pop
dec
sbb
mov
aas
jne
fsub
lock
adc
xor
imul
ds
adc
loopne
mov
not
push
popa
into
or
mov
or
fimuls
adc
xor
fs
mov
test
dec
jge
push
add
bound
fwait
bnd
mov
clc
test
jmp
fscale
inc
out
cmp
jae
ds
or
insl
dec
mov
jne
je
xchg
jmp
repnz
cmp
sbb
jmp
ret
sbb
lds
in
jmp
xlat
cltd
lods
leave
mov
mov
addr16
hlt
jbe
sub
pop
dec
push
ret
xor
clc
cmp
inc
sbb
dec
push
jnp
push
pop
mov
pop
fdivrl
or
stos
call
adc
mov
jecxz
push
insl
movsb
aam
cmpsb
aam
ret
stc
mov
add
adc
incl
sarb
leave
mov
andb
and
pop
sbb
incl
pop
gs
fistl
jecxz
add
xor
popa
mov
xchg
jmp
decl
mov
sub
movsl
in
call
rcl
ret
mov
xor
popa
mov
mov
pushf
stos
int
or
ret
cmpsl
mov
xchg
mov
cli
fwait
adc
mov
jecxz
aas
fidivl
shlb
jmp
sub
inc
pusha
cmc
imul
mov
mov
mov
cld
xchg
push
inc
or
loop
push
pop
jl
push
and
sub
xchg
jg
dec
cld
xchg
mov
leave
jmp
sbb
enter
lcall
xchg
cmp
or
aas
sub
xorb
aaa
sti
inc
dec
jmp
test
decl
icebp
lods
jmp
daa
mov
jns
iret
ss
push
clc
sbb
pop
mov
pushl
mov
dec
and
mov
adc
aaa
ss
fwait
pop
aad
xor
xchg
outsl
mov
xor
repnz
mov
ror
lods
daa
mov
data16
into
xor
ja
push
gs
loopne
fs
outsl
add
xchg
mov
or
push
ljmp
push
lods
ljmp
jl
clc
dec
popf
lcall
push
int3
add
xor
shl
incl
popa
gs
fldl2t
in
xor
mov
dec
mov
xchg
movsb
cmpsb
pop
mov
or
out
pop
or
mov
pop
dec
add
repz
cmc
pop
icebp
sub
ja
jp
dec
push
filds
ljmp
cmp
push
rorl
and
mov
nop
imul
adc
fs
sbb
jg
or
cltd
stos
lret
imul
insl
filds
cmp
incb
arpl
lahf
sub
cs
jge
and
popf
iret
gs
push
bound
out
ret
and
test
pushl
mov
outsl
aas
push
push
gs
adc
xor
shll
adc
xchg
and
jmp
nop
mov
in
int
testl
fdivrs
add
or
std
and
jmp
lock
mov
bound
xlat
pop
cltd
test
cmp
aam
dec
in
jmp
lret
popf
frstor
or
incl
out
scas
pop
pop
movl
hlt
pushl
cld
call
scas
fldt
std
stos
das
inc
repnz
inc
stc
xchg
mov
add
sub
scas
ljmp
stos
loope
insb
loopne
xor
push
or
stos
xor
lock
cmp
stc
andl
decl
enter
sbb
dec
or
lods
mov
arpl
jg
call
popa
dec
add
and
popf
jl
push
into
mov
lock
stos
lret
mov
fcomps
lcall
insl
fmul
mov
mov
sahf
mov
icebp
mov
decl
jbe
mov
adc
or
cmp
inc
pusha
inc
fcos
mov
push
push
and
mov
aas
cs
addb
les
jmp
test
testb
adc
imul
test
xor
call
jg
xor
push
out
fldt
inc
xchg
mov
or
movsl
xchg
mov
add
pushl
mov
add
pop
cmp
sbb
aaa
mov
decl
lock
in
out
push
push
shll
xchg
sbb
push
loope
push
jne
adc
movsb
insl
les
shl
mov
test
sbb
cmp
in
xchg
sahf
push
cli
xchg
pushf
das
in
mov
xor
inc
push
sbb
inc
jmp
pushl
push
cmp
and
fisubrs
mov
inc
jp
sub
popf
pop
icebp
insl
lcall
shlb
mov
xchg
outsb
out
enter
pop
dec
std
aad
cmp
daa
add
loopne
jbe
stos
call
pop
xor
push
out
push
rcr
fdivr
sarb
xchg
fidivl
jg
ljmp
pop
fstpt
mov
push
sub
cli
cmp
test
pushl
out
aaa
push
enter
push
sti
leave
push
pop
ret
lret
push
aas
in
hlt
and
sbb
lock
jmp
imul
rorb
mov
addr16
mov
rcl
into
jns
cld
lret
es
pop
icebp
call
aas
adc
add
mov
and
mov
add
bound
mov
sub
std
decl
in
and
sti
mov
push
fwait
xchg
pop
clc
out
mov
sbb
sahf
inc
aas
lcall
or
cltd
test
push
and
pusha
hlt
popf
popl
incl
jns
idivl
inc
sarb
cmpsl
dec
lock
push
fst
scas
push
out
orl
addr16
pop
mov
ja
pushl
dec
leave
rcrb
test
jge
inc
lcall
pusha
cmp
arpl
fcomip
push
xchg
lret
mov
lea
cmp
sarb
cs
inc
repz
adc
jg
jne
dec
sub
add
sbb
movsl
mov
xchg
inc
xchg
jg
pushf
push
leave
sti
adc
popa
fsts
imulb
outsb
push
mov
hlt
jmp
inc
scas
jg
ja
dec
pushl
out
mov
jns
pop
push
inc
mov
rorl
sbb
or
cmc
pop
dec
out
cmp
mov
sbbl
xchg
in
aas
add
js
fiadds
leave
dec
fistpll
call
ret
cmp
push
fwait
cwtl
dec
xchg
pop
pop
popa
sbb
pop
mov
push
xchg
cmp
cmp
rorl
iret
mov
clc
mov
mov
xchg
movsl
out
cli
pop
or
cmp
roll
popa
mov
pop
sub
lcall
shrl
ja
xchg
push
mov
dec
mov
add
and
ret
data16
ljmp
sub
mov
in
pop
mov
and
jns
or
push
sar
stc
sbb
je
push
and
movsl
gs
iret
jbe
sub
fisubs
push
and
std
and
enter
sbb
cld
inc
add
ja
dec
dec
ss
gs
push
and
scas
dec
sbb
cmp
sbb
stos
stos
mov
jb
pop
cli
nop
into
dec
mov
adc
gs
es
out
or
inc
fbld
push
jbe
dec
sub
or
int3
mov
ljmp
jae
xor
xchg
test
imul
cld
cmp
addr16
cmp
xchg
lods
pushl
dec
mov
scas
arpl
add
popf
rcrl
add
mov
loop
push
jl
jmp
jnp
cmp
cmp
and
jns
jle
cmp
add
sahf
test
mov
fwait
dec
leave
push
into
mov
rcrl
mov
sub
or
decl
fisubrl
daa
pop
jle
lcall
incl
xor
pop
aam
adc
pusha
dec
jne
sbb
add
sub
mov
fprem1
lahf
push
ficompl
mov
adc
jnp
cltd
xor
call
sbb
lds
cmpsb
out
test
rcl
xchg
sub
mov
hlt
pop
ljmp
cmpsb
inc
loopne
mov
jp
dec
mov
test
cmp
cli
inc
testl
cld
push
rorl
mov
or
loopne
add
pop
imul
push
ja
jo
adc
loope
pushl
mov
imul
aas
inc
and
shll
in
jge
push
je
ljmp
sbb
ja
sub
inc
movl
and
js
lea
nop
jae
mov
loop
jge
and
das
cmpsl
mov
sti
and
mov
jo
cmp
jmp
or
pop
lods
cmp
test
dec
loopne
mov
dec
in
cmp
test
adc
fmull
and
jbe
test
pop
scas
inc
xchg
ss
ljmp
lods
test
mov
pop
xchg
ret
push
push
gs
mov
mov
fwait
decl
not
into
sbb
push
inc
inc
jae
mov
cwtl
aam
incl
pop
cwtl
cltd
inc
testl
cs
jo
cmp
mov
adc
ficompl
mov
sbbb
mov
add
lods
mov
lcall
out
js
rolb
jne
xor
fildll
shlb
incl
test
outsl
movsl
pop
or
lds
mov
bnd
sub
lcall
fldcw
adc
xor
clc
data16
xor
ljmp
inc
or
add
xorl
std
adc
sarl
or
or
add
jo
jo
pop
enter
sub
test
decl
pop
pop
push
xor
stc
aaa
push
sub
and
leave
jmp
out
push
mov
cmpsl
and
popf
cwtl
int
sahf
xchg
ljmp
add
addb
jns
insl
mov
cmovne
inc
in
mov
test
inc
imul
push
mov
jmp
mov
sbbl
jl
and
popa
std
mov
cmp
push
std
inc
jbe
jns
call
jmp
jmp
jl
jle
outsl
lock
jbe
jl
or
mov
and
inc
insb
inc
cs
push
aad
in
call
pop
xchg
hlt
shrl
dec
popl
cmp
repz
call
ljmp
mov
es
iret
fstpt
fisttpll
int3
inc
pop
jle
pop
xchg
xlat
js
ljmp
fisubl
mov
arpl
dec
ds
int
jecxz
dec
sbb
push
stos
jmp
xchg
in
fmuls
fnop
ret
pop
pop
rorb
jo
sbb
aam
das
clc
jg
sbb
insl
out
aad
cwtl
test
push
xchg
hlt
pop
fdivr
in
xchg
mov
add
lcall
add
mov
dec
clc
inc
lcall
test
int
cmp
inc
js
xlat
xchg
add
sub
cmp
call
nop
mov
pop
stos
popf
fs
js
aaa
gs
sahf
idivb
outsb
outsb
aad
insb
das
ret
cmc
push
incl
sub
cmp
in
sahf
mov
pop
xor
fisttps
mov
subl
push
inc
ljmp
stos
lcall
mov
push
lcall
or
iret
adc
adc
pop
cmp
push
std
sti
xor
and
mov
fldl
sbbl
mov
ror
mov
dec
cmpl
sub
mov
pushl
aad
dec
mov
mov
dec
cmp
mov
popf
shl
xchg
xlat
mov
loop
mov
sbb
cmc
jecxz
xchg
clc
lret
pop
sbb
push
dec
lcall
xor
ret
mov
int
or
lock
int
dec
movsl
daa
out
ljmp
add
mov
mov
ljmp
sub
mov
dec
addr16
or
nop
and
ss
push
add
lcall
rcll
pop
lcall
mov
inc
inc
mov
sub
push
mov
pushf
push
jnp
sbb
lret
mov
pusha
add
fs
dec
jo
enter
daa
jns
rcrl
shrl
inc
lcall
fidivs
imul
into
mov
and
gs
push
aad
fadd
cltd
bound
mov
dec
pop
imul
aam
sub
rep
ds
push
or
es
ljmp
pop
add
and
scas
loop
cmpsl
mov
sbb
aas
ss
call
lock
or
adc
cmp
xchg
into
rolb
jl
out
jb
dec
sub
scas
aad
push
loop
aaa
push
push
clc
pop
pop
push
dec
shll
jb
dec
sar
call
xchg
shl
pushl
lret
push
pop
loopne
inc
outsl
stos
es
andb
outsb
es
out
cld
leave
mov
mov
jg
cwtl
call
into
and
and
ret
xor
sbb
ret
lcall
out
int
cmc
jmp
push
cmpsb
les
pushf
out
sub
push
adc
pushl
test
inc
lock
fiadds
cwtl
cwtl
lcall
pop
jge
lcall
mov
arpl
push
leave
dec
in
addr16
loop
adc
dec
test
repz
call
add
jnp
pop
ret
or
ret
test
fstps
push
ja
bound
xlat
lcall
fcoms
pop
ss
jle
fs
incl
cmp
dec
xchg
xchg
pop
dec
or
outsl
subl
arpl
shlb
fwait
call
loopne
out
mov
fistl
arpl
int3
xchg
fdivrs
decl
lcall
jno
pop
sub
lret
mov
dec
jo
or
pop
mov
pop
mov
scas
ret
mov
stos
xchg
pushw
pushl
pop
adcl
push
adc
pop
subb
or
adc
jnp
mov
aad
fimuls
nop
std
mov
adc
out
adc
xchg
xchg
stc
loopne
rcrb
add
sti
ljmp
pop
fiaddl
sbb
dec
stos
outsl
scas
rolb
int
pushl
pop
mov
lcall
mov
cmp
ds
lcall
inc
mov
pop
adc
test
xor
call
cld
incl
sub
out
js
inc
mov
xchg
lret
sahf
mov
sub
ja
dec
sbb
ljmp
shll
sbb
daa
jle
aaa
pop
and
pop
adc
xchg
pop
jo
push
loop
lcall
pop
inc
mov
insl
push
or
lcall
clc
nop
inc
jmp
pop
rclb
and
into
mov
mov
call
call
out
push
insb
repnz
mov
mov
sahf
sbb
lret
aad
mov
cmpsb
out
sbb
xor
jmp
loopne
or
call
in
sub
lods
pop
jmp
add
lds
scas
cli
incl
cld
test
or
xchg
xor
and
ds
ljmp
push
add
icebp
xor
iret
lods
lock
bound
inc
lods
fstl
mov
jmp
adcl
aas
ficomps
pop
mov
mov
adc
mov
mul
int
fdivr
incl
je
int3
aaa
icebp
mov
push
bnd
imul
clc
ljmp
mov
or
lcall
mov
call
push
rclb
xor
into
adc
ror
mov
cli
lcall
fsubp
inc
pop
orl
sbb
lahf
adc
decl
jl
mov
adc
hlt
mov
rol
adcb
pop
cmpsb
cmc
push
loope
lcall
outsb
add
sbb
xor
lcall
pop
and
ss
jne
lcall
incl
and
mov
cmpsl
cmp
mov
lods
js
push
adc
mov
shll
inc
xor
outsb
push
cli
pushl
pop
cmpsb
lods
repnz
and
arpl
mov
sbb
push
pop
and
out
sbb
in
ds
push
cmp
aad
jo
iret
ljmp
inc
sti
jbe
lock
mov
push
mov
lret
je
xor
xchg
xor
mov
aaa
out
cs
cmp
mov
jl
add
pop
stos
pop
ljmp
or
std
loopne
mov
bound
cmp
pop
and
call
notl
dec
jle
xor
jle
dec
or
pop
sub
cld
dec
rcr
iret
sbb
xor
cld
mov
xor
mov
cmp
loopne
or
popa
dec
test
xor
cli
lcall
insb
popf
mov
dec
cmp
test
sub
lret
and
sub
out
je
adc
dec
pop
mov
into
mov
mov
aad
xchg
jg
pop
jne
xor
jo
jmp
outsb
mov
sarb
and
jbe
and
std
cs
dec
mov
nop
imul
mov
xor
mov
daa
mov
xchg
mov
jmp
insl
aaa
push
std
adcb
adc
in
mov
call
fadds
and
ds
or
or
sbb
push
les
js
pop
mov
jmp
dec
pop
ficomps
repz
lahf
push
adc
ret
adc
sub
or
and
stos
call
xor
movsl
testb
es
es
int
pop
pop
mov
xor
pushl
das
test
jl
sbb
fidivrl
or
out
mov
incl
lret
cs
dec
clc
dec
jae
add
testb
pushf
mov
insb
jb
call
rcr
cwtl
loop
imul
fsubrl
sub
mov
icebp
jnp
ljmp
enter
shr
push
jbe
adc
jns
dec
cmove
xchg
or
das
cli
movsb
mov
inc
ja
mov
jbe
stos
push
mov
jecxz
cmpb
rcll
inc
cmpsb
imul
sub
pop
sub
jmp
mov
sbb
cmp
add
call
push
cli
xchg
push
dec
inc
out
fstpt
shll
test
or
pop
xchg
dec
push
mov
fdivr
inc
sbb
test
pop
test
mov
sbb
push
mov
decl
pop
dec
stos
ljmp
js
push
pop
mov
rcrl
or
pop
cltd
ljmp
mov
rolb
sbb
ret
xlat
dec
push
scas
mov
mov
and
cld
lcall
popa
pop
xchg
mov
dec
mov
jne
xor
jmp
hlt
test
incl
movsb
sti
push
adc
dec
stc
lods
negb
movsl
mov
cltd
mov
scas
sub
dec
movsb
out
push
movsb
ja
cld
mov
pushf
push
push
stos
sub
imul
and
mov
push
xor
call
jmp
rcrl
in
mov
sbb
decl
dec
scas
sbb
xchg
je
rorl
cltd
outsb
sub
in
jno
sahf
sbb
popl
sbb
mov
loop
push
pop
push
icebp
mov
xor
lret
decl
popa
icebp
ret
enter
movsb
sbb
sbb
loopne
mov
or
fstl
xorb
dec
in
in
ljmp
das
push
mov
sub
mov
imul
and
xlat
pop
xchg
inc
scas
push
sahf
imul
repz
movsl
shlb
dec
xchg
jne
adc
sbb
jg
into
xchg
xchg
pop
stos
xor
shl
and
fiadds
mov
incl
ja
mov
loope
push
pop
xor
cltd
sub
arpl
insb
mov
ljmp
jno
push
clc
xor
pop
movsl
xchg
stos
add
clc
jg
xchg
dec
mov
inc
decl
add
inc
mov
pop
pop
jnp
mov
mov
data16
push
adc
pop
cmp
cmp
lret
fs
dec
call
pushf
push
cmpsb
adc
dec
mov
decl
pop
pop
or
inc
cld
mov
adc
mov
fldl
lock
cld
ljmp
fidivs
mov
adc
fdivs
mov
stos
icebp
jo
push
inc
aaa
pop
ficomps
fstps
ds
and
add
mull
and
push
hlt
cs
jnp
inc
lcall
cmp
orl
and
bound
push
repnz
push
or
pop
or
jae
mov
and
call
sbb
jae
inc
insl
cmp
repnz
ror
rorb
lcall
stos
pop
jecxz
mov
mov
stos
pop
sbb
mov
out
outsb
dec
pop
lahf
ret
je
mov
syscall
add
out
push
fmull
mov
cltd
incl
jno
aad
bound
adc
pusha
sub
gs
mov
pop
jb
push
les
and
jecxz
or
das
dec
test
jns
add
das
sarb
icebp
test
pop
sbb
dec
aad
and
inc
or
lcall
dec
sub
fisubl
jnp
neg
cld
mov
sarb
sar
popa
fldt
les
lcall
mov
jo
inc
mov
fnstenv
and
fyl2x
jae
loop
and
cmp
in
call
sbb
push
adc
mov
adcb
cmp
lcall
or
lods
lret
test
shrl
xchg
ret
adc
aam
and
lcall
fcmove
pop
scas
sub
ds
and
sbb
mov
call
out
jle
decl
jp
mov
movsl
push
test
push
icebp
out
adc
cmp
adc
lock
daa
mov
mov
inc
or
enter
jnp
xchg
test
out
enter
scas
in
mov
add
jmp
or
sbb
popa
mov
incl
add
jp
dec
xchg
mov
pop
nop
mov
xor
icebp
scas
out
lea
mov
in
das
std
imul
mov
pushf
les
sub
jmp
adc
xchg
xor
mov
pop
ret
ret
mov
or
and
jmp
ja
pop
and
cmp
loopne
das
mov
lods
inc
std
or
cmpsb
push
mov
mov
push
repnz
pop
fldcw
test
add
dec
adcl
call
or
jns
aas
pop
lods
das
subb
adc
mov
cli
cli
jo
lods
cmp
or
out
pop
cltd
pop
xchg
sub
push
in
push
adc
ljmp
pop
mov
cs
pop
sahf
mov
into
xlat
add
pop
mov
adc
lods
add
test
lea
inc
ljmp
adcb
mov
push
pop
lock
stos
and
lds
sbb
repz
or
push
xchg
loope
adc
stos
in
test
fstpl
xchg
xor
mov
add
pop
cmp
add
icebp
decl
pusha
inc
push
fwait
jae
dec
icebp
fistl
rorl
jbe
shll
push
shll
imul
call
mov
dec
pop
leave
fisttpl
mov
js
and
mov
xor
imul
lock
jmp
mov
xor
mov
clc
cmp
xor
cmp
addr16
mov
jbe
sbb
sub
xchg
mov
pop
push
roll
movsb
xor
hlt
daa
jb
cmc
jg
mov
jno
push
out
mov
gs
jg
jl
incl
lods
xchg
push
iret
repz
and
ret
add
cmpsl
inc
test
je
call
insb
test
inc
mov
pop
and
insl
dec
jne
sarl
in
pop
outsb
dec
add
cld
decl
pop
aad
addr16
adc
mov
push
sub
pushl
push
xor
idivb
add
test
dec
loope
decl
mov
hlt
jmp
test
mov
xlat
jp
cli
cmpsb
lcall
xadd
fs
iret
mov
or
jne
push
clc
in
mov
call
arpl
xor
add
add
loopne
aad
stos
add
jnp
jb
mov
and
or
lods
cwtl
sbb
xchg
add
push
xchg
jecxz
jo
stos
mov
inc
scas
xchg
stos
push
cmp
dec
fwait
cmpsl
and
pop
cmpsl
dec
push
ficoms
and
and
dec
jp
fistl
imul
aaa
fidivrs
inc
add
in
xor
outsl
pusha
fwait
jb
adc
call
fdivr
decl
nop
sahf
test
stos
dec
sub
enter
enter
pop
sbb
mov
ljmp
xor
fsubrs
inc
ljmp
mov
lret
insl
fdivrs
push
lcall
xchg
inc
add
and
sbb
cld
int3
sub
xorl
push
das
rcrl
lcall
into
incl
repnz
out
jge
outsb
pop
shll
in
jmp
mov
cli
mov
dec
push
lods
aad
jp
pop
aas
add
adc
jge
pop
inc
pop
popf
push
adc
fists
add
add
dec
xchg
pop
pushf
call
mov
jle
jae
test
clc
fcomip
lahf
and
cwtl
mov
loop
jge
mov
push
pop
adc
adc
add
fwait
xchg
nop
add
xchg
xchg
jnp
aad
cs
loope
push
cli
and
dec
inc
and
push
pop
insb
push
inc
or
jmp
push
xor
ja
xlat
push
jno
lret
addb
inc
dec
push
or
dec
ja
add
push
cld
outsb
es
jo
imul
or
add
ss
add
ret
push
inc
out
sub
adc
pop
and
add
dec
inc
adc
rolb
adc
mov
mov
mov
push
mov
sbb
test
add
fldl
sbb
push
outsl
outsl
insb
push
imul
xor
push
xchg
jo
push
and
gs
mov
adc
push
aas
sbb
and
push
shlb
je
add
adc
imul
or
std
dec
jne
js
stos
pop
add
fists
notb
outsb
ja
roll
jns
push
imul
roll
icebp
loope
or
orb
dec
rorb
dec
outsl
insl
insl
addb
inc
adc
je
gs
dec
jb
push
int3
fadds
sub
sbb
xorb
xchg
sarb
inc
imul
or
fidivs
adc
imul
mov
outsl
jp
xorl
icebp
inc
adcl
scas
inc
rcrb
mov
int3
andb
ds
popf
loop
insb
jne
mov
jne
data16
pop
pop
fcoms
push
mov
xchg
push
add
dec
call
fcoms
fs
inc
sbbb
adc
jo
or
out
popa
arpl
mulb
mov
push
or
subb
addr16
cmpb
jae
adc
push
push
push
jmp
jne
arpl
loopne
inc
dec
xor
xor
jae
mov
lds
sbb
inc
ja
and
sub
packuswb
push
pop
mov
jo
sub
xchg
iret
push
dec
inc
dec
sbb
sti
loope
vpcmpeqb
stos
mov
or
mov
push
pop
or
pop
iret
pop
loopne
pop
push
xor
cmp
in
ror
and
in
roll
pop
push
xchg
imul
cli
adc
and
inc
xchg
movsb
test
push
jne
jbe
ret
adc
enter
inc
sub
dec
jae
aas
js
mov
inc
ljmp
cmp
jnp
jmp
inc
mov
pop
pop
testb
dec
mov
xor
pop
outsl
stos
push
in
jecxz
lods
xor
mov
jl
ja
mov
jo
inc
stos
pop
push
pusha
inc
inc
inc
pop
ja
mov
xchg
and
xor
inc
insb
loope
sbb
jo
jp
inc
lds
pop
adcl
xor
inc
insb
mov
sub
rcl
xor
or
pop
cld
mov
jns
int
push
pusha
scas
sti
or
xchg
and
mov
pop
xlat
outsl
push
imul
outsl
jns
inc
je
mov
add
push
inc
inc
iret
mov
cmpl
sbb
cli
mov
mov
and
insl
push
or
sbb
push
scas
in
ret
loope
stc
mov
add
xor
or
jns
xor
pop
gs
stos
loope
xor
adc
ret
push
xor
ror
js
mov
push
out
sbb
dec
adc
adc
sub
sbb
mov
ret
testl
aaa
inc
in
sbb
mov
pop
jno
or
inc
inc
xor
stos
leave
jo
jae
xor
sbb
movsl
and
xchg
push
mov
and
jb
dec
inc
daa
jno
pop
mov
inc
andl
jno
xchg
cs
push
in
or
repz
jns
stos
mov
push
outsl
cs
push
or
dec
sbb
cli
icebp
xchg
inc
inc
jbe
or
dec
push
add
popa
dec
loope
je
mov
fwait
repnz
inc
movsb
rolb
lock
movsl
scas
sbb
addl
jne
sbb
ds
or
int3
loopne
mov
arpl
cli
fiadds
lods
pusha
xchg
pusha
fs
mov
cmp
add
divb
insl
out
and
xlat
lahf
addr16
inc
sbb
sbb
mov
push
aaa
dec
adc
and
movsl
jns
out
push
or
sbbl
fdivs
jns
mov
insb
cmp
push
adc
jp
push
mov
lcall
cs
dec
rcll
cmp
or
mov
xlat
xor
mov
out
fsubrs
push
push
outsl
repnz
jb
and
mov
inc
lods
dec
lods
inc
push
into
jo
inc
inc
lds
arpl
jl
std
inc
imul
loop
lea
push
mov
xor
insb
out
xorl
lock
insb
jle
punpckldq
movb
stos
fs
jp
je
jae
jbe
dec
xor
mov
pop
pop
mov
es
pop
cmp
jl
js
enter
cmp
and
xchg
dec
pusha
call
sub
loopne
jmp
xor
loop
jae
pop
pop
xorb
dec
push
push
pop
xor
outsl
sub
add
sub
and
mov
adc
movsl
loopne
pop
and
and
cmpsl
and
pop
jnp
movsb
loopne
jg
insl
dec
outsb
dec
in
dec
ret
adc
sub
ss
lcall
add
add
mov
mov
adc
xchg
movsb
dec
adc
lcall
pop
rorl
push
xchg
mov
add
mov
les
cmp
inc
xchg
loopne
scas
and
sahf
ficoms
xor
inc
jo
fs
cli
fcomps
pushf
bound
xor
inc
cmp
push
push
jb
and
jo
insl
insl
mov
xor
add
push
xor
rorb
das
mov
add
push
lock
leave
cwtl
mov
add
jmp
xlat
adc
or
icebp
and
dec
sbb
mov
pop
negb
dec
data16
scas
pop
lock
cs
outsl
xor
push
inc
in
mov
push
adc
mov
mov
jp
mov
lret
nop
jge
ret
arpl
and
lods
aas
imul
lcall
xchg
mov
jb
ja
lcall
fldcw
fistl
ljmp
dec
jno
call
jb
xchg
jnp
sub
orl
imul
jns
insb
mov
ret
xchg
mov
push
pop
xchg
dec
nop
xchg
xor
push
hlt
and
sub
add
leave
add
insb
adc
jno
ret
in
sub
outsb
ja
push
test
sbb
popa
push
mov
daa
sar
xchg
js
inc
data16
mov
adc
ret
push
dec
mov
std
js
adc
push
inc
pop
adcl
cmp
test
inc
mov
sub
test
cmp
and
push
push
pop
pushf
fcoms
lds
aas
sub
inc
xorl
fs
sub
cmp
jbe
mov
xor
push
iret
popf
mov
js
jo
outsb
fistl
and
add
xchg
ss
dec
popw
imul
inc
into
sub
ret
xor
in
outsl
add
pop
jmp
pusha
aad
or
ret
inc
sbb
call
fs
inc
call
outsl
movsl
pop
sbb
imul
dec
dec
adc
mov
addr16
jle
xor
mov
cmpsl
add
and
add
call
xchg
out
or
imull
imul
es
pop
mov
xlat
movsl
test
sub
sbb
sbb
pop
test
dec
mov
inc
inc
push
jne
rcrl
cld
data16
ffreep
out
mov
jo
add
pop
icebp
jae
mov
fs
dec
imul
gs
das
sub
int
shr
sub
insl
add
fnstenv
add
pop
test
or
mov
push
pop
and
dec
or
pop
idivb
sub
add
xor
mov
ucomiss
cmp
push
cmpsb
pop
inc
ljmp
mov
cld
push
xor
fcoml
pop
shlb
dec
xor
inc
pop
and
mov
add
out
cmpsb
add
and
add
and
outsl
sbb
jb,pn
popa
adc
es
sub
lods
cmpsl
gs
bound
out
insl
dec
ss
push
dec
sub
aam
rcrb
jb
push
xlat
out
mov
jne
outsb
and
mov
shrb
pusha
xchg
add
and
add
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
add
