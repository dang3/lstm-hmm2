divl
in
mov
mov
mov
push
push
call
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
cmpsb
push
mov
andl
mov
or
push
add
add
punpckhwd
aaa
mov
imulb
mov
in
iret
negl
push
in
loopne
movb
inc
xchg
mov
sti
outsb
ds
inc
add
add
call
mov
cmpl
jne
mov
in
mov
jl
das
add
push
mov
sbb
out
std
jnp
add
jbe
sbb
pop
dec
push
push
test
xchg
in
in
lret
add
loop
inc
adcb
adc
or
imul
push
or
movsb
into
push
cwtl
in
and
fs
push
lock
or
in
bound
movsl
cmp
xor
sbb
push
push
lods
andps
clc
addl
add
fdiv
fistpl
fisttpl
ret
add
iret
icebp
sub
test
je
pop
add
pop
mov
push
push
adc
loop
loopne
sbb
rolb
sbb
mov
mov
cs
add
pop
inc
mov
push
dec
in
pusha
les
sub
dec
add
sub
imul
call
cmp
sahf
or
cmpsb
stc
call
in
aas
or
loopne
js
in
lahf
outsb
clc
push
push
mov
in
inc
inc
mov
fwait
add
les
push
mov
dec
cmp
jge
mov
jmp
mov
push
push
sub
inc
inc
dec
jb
mov
jno
and
and
jmp
push
in
jnp
cmp
adc
out
clc
inc
shlb
push
pop
mov
aaa
jb
mov
lds
mov
xchg
add
aaa
pop
and
inc
cmp
jae
xchg
add
outsb
fistpll
push
pop
stc
push
mov
add
and
sbb
add
mov
hlt
sub
push
insl
test
lock
adc
pop
cwtl
mov
pop
push
jle
cmpb
add
enter
adcl
pop
mov
test
mov
repz
out
dec
lock
add
call
sub
loopne
cmp
jb
and
popf
jmp
sbbb
jo
push
push
cmpl
inc
push
or
shrb
mov
jle
xor
test
iret
sub
jo
push
rolb
push
fimuls
sub
stc
fisubrl
push
shlb
mov
and
push
push
sbb
sbb
xor
pushf
pop
subl
xchg
or
push
or
cmp
and
or
insb
or
and
std
repz
fbld
mov
fwait
je
bound
add
lods
punpckhdq
loopne
std
adc
push
daa
mov
jnp
jno
int3
push
xchg
mov
or
icebp
jmp
push
cmp
nop
andl
into
ret
push
cmp
stmxcsr
inc
add
jmp
push
xchg
loop
std
and
sbb
sbb
ss
addl
outsb
push
xchg
jb
push
shrb
sbb
sub
cmp
xchg
dec
gs
sub
adc
adc
scas
push
and
sub
in
shrb
cmp
repz
jmp
jg
jb
adc
push
nop
pop
pop
push
or
or
adc
sbb
add
fcoml
sbb
punpckhbw
or
push
push
and
sub
cmp
push
int
sbb
or
jne
sarl
or
push
fbstp
std
xchg
sbb
mov
enter
jae
adc
push
xor
mov
adc
pushf
xchg
push
adc
push
mov
mov
lds
push
ret
pop
cld
mov
mov
xchg
mov
test
push
push
mov
clc
push
push
push
adc
cmp
cmp
add
mov
add
lret
jge
pusha
push
mov
mov
inc
cmp
add
xor
cmp
jae
mov
sub
sti
loopne
lahf
mov
shrb
or
mov
movsl
imul
test
jl
adc
sbb
mov
mov
ss
xorl
mov
mov
inc
inc
or
dec
mov
or
mov
pop
hlt
je
xor
lea
mov
jae
mov
nop
sub
cmp
je
adc
cli
mov
and
out
lea
jno
andb
xchg
insb
mov
js
adc
out
les
shr
mov
inc
or
mov
and
je
inc
or
jbe
and
insl
inc
lahf
or
mov
xchg
xchg
sbb
push
push
movsb
lret
out
jp
cmp
xchg
cmc
push
clc
dec
or
stc
or
clc
xchg
and
mov
push
jnp
and
hlt
gs
jg
or
in
xor
or
ret
push
mov
or
fcomps
jbe
fimull
pushf
dec
insl
icebp
mov
scas
imul
dec
movsb
sub
cltd
and
lock
cmp
faddp
jne
pop
mov
sub
fs
cmp
test
je
sub
inc
out
scas
dec
pushl
pop
in
rclb
movsl
sbb
adc
cli
xchg
lret
shlb
inc
jbe
sub
lds
push
mov
mov
sbbb
push
addb
clc
loopne
std
pop
cmc
mov
add
xlat
mov
test
jne
fs
inc
cmp
jl
jmp
xchg
stc
cld
pop
pop
push
push
jbe
pop
pop
push
pop
push
pop
jmp
sub
xchg
add
mov
ret
add
repnz
mov
mov
mov
mov
adc
mov
sbb
pop
bound
cld
ja
in
and
mov
mov
adc
mov
daa
ds
push
fiadds
jns
loope
jg
add
add
push
dec
push
andl
push
clc
xchg
push
mov
xor
jl
push
mov
jg
mov
cmp
pusha
adc
adc
cld
mov
pop
pop
ret
push
data16
sub
jmp
daa
cmp
jmp
and
hlt
jbe
mov
mov
and
adc
sub
adc
push
cs
testb
out
dec
inc
aam
push
mov
sub
icebp
mov
jne
js
sub
pop
cmp
mov
jge
jecxz
pop
ss
mov
or
test
add
mov
adc
push
out
mov
add
push
mov
imul
add
jmp
mov
loopne
add
addr16
adc
or
mov
pop
jbe
adc
inc
leave
ret
icebp
std
negb
cmp
cmp
push
add
or
mov
jle
std
or
adc
adc
fwait
add
mov
push
jg
imul
stc
jne
mov
jmp
xlat
int3
fcmovnb
xchg
in
add
push
repnz
ja
rorl
push
ja
lea
int
pop
das
decb
pushl
cmp
jmp
xchg
pop
aas
mov
andl
gs
pop
pop
out
clts
arpl
adc
pop
and
sub
xor
out
add
add
test
je
add
js
and
rcl
mov
push
sub
pop
push
push
movsb
mov
or
lock
je
ljmp
dec
mov
cmpsl
mov
xchg
inc
ret
pusha
lret
ss
push
push
lock
jb
adc
inc
pop
pop
test
push
shlb
shlb
ret
sbb
ret
mov
sbb
shll
leave
add
xchg
in
add
mov
sub
push
mov
mov
cmpl
cmp
mov
fs
cmp
out
adc
into
je
cmpl
pop
mov
cmp
jne
push
push
imul
into
jo
ret
jl
pop
jmp
hlt
inc
push
xor
mov
cld
fsubrs
xor
das
adc
dec
or
or
sbb
enter
sarb
aaa
mov
fidivrl
inc
clc
jg
inc
fimuls
movb
or
in
int3
mov
pushf
jb
push
and
into
cld
lods
adc
cmp
add
fisttps
xor
mov
ret
outsl
aad
je,pt
lcall
push
rorb
inc
pop
mov
mov
loopne
and
or
jne
cli
push
das
mov
pop
jns
in
dec
push
push
call
adc
mov
xor
cs
push
lds
ss
pop
ja
pop
sbb
pushf
mov
inc
mov
push
push
fdivrp
mov
mov
lcall
mov
xchg
fidivrl
cmc
push
or
push
or
int3
test
loop
add
clc
test
scas
push
cmp
sbb
mov
cmp
xor
cmpl
jle
push
mov
daa
jmp
mov
mov
ret
in
ss
ret
shlb
push
out
cmp
rol
sbb
frstor
mov
push
mov
stc
loopne
mov
jbe
ss
mov
or
adc
adc
test
xlat
pop
push
incl
pop
daa
in
dec
cmpsl
pusha
jnp
mov
jge
bound
hlt
mov
jo
push
pop
push
or
lock
cmp
mov
insb
int
iret
ret
orl
and
jge
sarb
iret
rcl
sarb
xlat
xlat
sahf
mov
dec
push
les
xor
or
shll
jb
lea
daa
push
shrl
push
mov
and
push
call
add
pop
cltd
jmp
jmp
pushf
dec
imul
cmp
clc
and
adc
fisttps
add
adc
mov
pop
pop
jmp
sbb
stos
xchg
pop
mov
or
cld
shl
push
movl
not
insb
dec
dec
adc
sbb
es
fs
sbb
std
cmc
push
pop
stc
test
je
or
sub
std
jno
andb
shlb
movsl
push
xor
inc
jns
cmp
mov
add
mov
mov
sarl
sbb
dec
pop
scas
aam
cmp
adc
push
cmp
add
scas
mov
mov
mov
add
jmp
insb
or
sbb
das
or
shll
les
push
cmp
mov
mov
fptan
inc
adc
sbb
iret
fstpl
sub
sbb
test
sti
outsb
das
sbb
sbb
add
push
roll
mov
sub
xor
or
into
adc
pop
cmp
ss
pop
jo
push
adc
or
in
imul
pop
imull
push
hlt
jnp
lods
dec
or
xchg
add
xor
imul
test
adc
sbb
and
stc
adc
cmp
popf
cmpl
mov
cmp
mov
mov
adc
pop
notl
add
inc
mov
push
sbb
insb
inc
cmp
push
sbb
jmp
push
ds
pop
mov
dec
sbb
mov
add
sub
add
push
pop
pop
sbb
push
jbe
call
push
mov
lret
and
jmp
sub
aaa
std
push
pop
dec
je
push
adc
in
jge
adc
add
xchg
mov
dec
ss
icebp
sub
sub
jmp
movsb
dec
pushf
out
mov
fnstenv
adc
int
jp
jecxz
pop
jecxz
mov
lock
rolb
xchg
or
loope
es
call
add
mov
scas
adc
mov
lea
mov
mov
adc
push
mov
or
lahf
loope
fimuls
std
mov
lock
movswl
loopne
push
or
push
push
inc
sub
jo
js
inc
outsb
cmp
push
in
in
daa
adc
popl
mov
adc
jmp
cmp
je
cmp
and
xor
shr
fs
sbb
leave
adc
adc
sti
sub
xor
dec
fstpl
imul
mov
je
scas
push
and
and
and
sbb
je
jge
or
or
mov
mov
repnz
iret
sarl
sub
inc
pop
push
movsl
mov
loop
mov
xchg
push
push
fs
lret
lock
lock
push
cld
mov
push
cmp
push
push
pusha
aaa
outsl
dec
adc
outsl
cmp
or
clc
cwtl
cmpl
xchg
xchg
lret
cmp
adc
scas
add
mov
das
das
fdivp
test
push
and
and
push
cli
cs
pop
push
lea
push
sbbl
lea
push
adc
dec
cmp
and
cmp
xchg
xchg
inc
les
scas
pop
push
inc
add
ja
dec
cmpsb
popf
mov
xchg
dec
jge
mov
pop
sub
sbb
out
push
pusha
sbb
ja
push
sbb
lea
ret
in
mov
testb
adc
in
jnp
push
call
add
add
clc
push
ja
ja
mov
movl
lret
mov
xor
sbb
addl
sbb
pop
sbb
pop
push
inc
jmp
adc
cmpl
pop
cltd
orl
add
jnp
mov
push
pop
sub
arpl
cmp
xchg
sbb
mov
insl
sub
inc
mov
js
push
je
adc
aad
movsb
inc
jae
loop
adc
dec
dec
rclb
not
and
mov
mov
adc
xor
mov
imul
insl
cwtl
loop
shl
pop
pop
push
push
cmp
inc
nop
lret
in
jnp
push
push
push
sbb
sbb
jp
out
mov
push
xchg
data16
subb
ds
xor
popf
lods
and
sahf
lods
jne
clc
add
push
sub
lea
je
jbe
push
ret
jo
mov
sub
mov
push
faddl
sbb
add
mov
sbb
clc
add
movsl
bound
cli
hlt
dec
mov
xorl
xor
xchg
mov
cmp
adc
clc
push
idiv
test
lea
push
mov
pushl
mov
adc
jbe
mov
push
mov
dec
lea
or
out
je
inc
sarb
je
dec
call
imul
cltd
sub
sar
add
bound
in
negb
in
jmp
mov
add
xor
mov
inc
adc
dec
cmp
sbb
pop
pop
leave
jae
mov
mov
jno
mov
lock
ret
pop
sub
rclb
repz
mov
adc
sbb
xor
and
push
or
sbb
sbb
jnp
aad
cmp
adc
sti
lahf
outsw
dec
test
sbb
and
and
cs
adc
fs
stc
pop
andl
xchg
xchg
insl
shll
inc
cmp
dec
or
mov
adcb
lahf
push
insb
mov
xor
orb
adc
xchg
and
lea
decl
neg
sbb
and
test
aas
stc
dec
and
sbb
adc
out
int3
or
mov
sbb
pusha
ljmp
xorb
mov
add
out
sub
dec
mov
je
push
mov
or
in
sbb
jmp
pushl
and
addb
repnz
ret
scas
incl
and
cmp
je
mov
not
pop
mov
xchg
mov
cmpl
je
cmpl
xchg
jne
adc
dec
je
in
int
sbb
pop
push
add
sarl
sbb
jg
jmp
mov
fisubrs
push
cmp
push
pop
ror
rorb
sub
xchg
or
sbb
push
lods
jbe
pop
loope
mov
popa
mov
js
push
push
lret
sahf
gs
jl
dec
popa
shll
lret
in
cmp
hlt
movb
add
lock
mov
mul
fldz
bound
sbb
jl
movb
sub
mov
lea
mov
fisttpll
cmp
cmp
xchg
pop
fs
cmp
mov
je
test
test
inc
lods
sti
call
mov
and
popf
push
scas
mov
xor
pusha
mov
sahf
loope
inc
test
and
mov
lea
lea
inc
dec
push
ds
clc
cmp
pop
jbe
pop
fsubrs
adc
cmp
mov
mov
fmull
mov
shrb
fdivl
and
push
sub
or
nop
sahf
out
sbb
jp
push
enter
iret
sbb
lret
adc
jl
pop
insb
sub
adc
je
fs
mov
daa
cmp
imul
pop
dec
adc
adc
dec
add
push
cmpsb
dec
lock
mov
xchg
pop
sbb
ja
int
sub
shll
daa
add
sbb
push
sbb
lcall
hlt
mov
push
cmpsb
sbb
cmpb
jnp
sbb
test
icebp
mov
les
sub
inc
rorl
imul
imulb
cld
inc
pusha
fmull
push
push
push
aam
add
and
pop
add
jno
add
ret
xor
repnz
sbb
leave
lock
or
xchg
mov
or
pop
or
ret
sahf
rol
rcrl
out
ds
rorb
in
adc
push
push
out
dec
shll
pushf
and
xchg
je
push
sarl
arpl
or
arpl
dec
push
add
push
sbbl
test
scas
add
lods
cmp
xlat
dec
ret
push
stos
fcoms
dec
pop
repnz
jp
and
es
or
rorl
js
ret
cmp
in
push
sub
or
mov
lods
nop
cld
sbb
in
inc
lds
ret
mov
fbstp
sbb
addb
cmp
pop
mov
sbb
je
cmpb
mov
cmpsl
mov
pop
roll
pop
or
xchg
xchg
push
stc
or
das
enter
fadds
push
cmp
inc
popw
ss
pop
cmp
and
jmp
sub
and
nop
push
test
mov
pop
inc
shlb
pop
loope
sarb
push
loopne
push
loopne
int3
add
in
adc
mov
xor
lcall
sbb
push
mov
sbb
cmp
inc
into
mov
popa
sub
out
jo
ds
dec
fsub
pop
mov
cmp
mov
push
imul
fisubrl
cwtl
adc
mov
xchg
negl
ljmp
aas
mov
cltd
mov
add
sar
push
dec
mov
adc
fiadds
fnstsw
inc
or
lock
idiv
pop
mov
adc
mov
cmp
idiv
push
pop
push
adc
dec
jmp
xor
idiv
jle
mov
fwait
icebp
std
out
aaa
jp
mov
add
jne
push
imul
mov
fstl
insb
cmpsl
pop
adc
mov
sti
in
fsts
pushf
pop
ret
pop
pop
push
les
cltd
mov
adc
sarl
out
call
push
ljmp
movsb
sti
sub
not
outsl
clc
clc
je
test
pop
lea
cltd
idivl
push
testl
mov
test
mov
std
mov
jg
pop
into
mov
or
xchg
arpl
mov
cmp
lahf
iret
xchg
mov
xor
xchg
nop
sub
jle
jg
pop
mov
loop
movl
cmpl
or
jmp
jge
jmp
mov
loop
xchg
mov
fildl
pusha
or
add
pop
and
xor
xor
mov
fdivrp
xchg
fstpt
mov
mov
test
sbb
inc
xor
mov
pop
add
fidivs
or
xchg
pop
jl
jmp
rolb
push
jecxz
mov
and
jp
sbb
fidivl
jmp
outsb
mov
mov
sahf
lods
jmp
mov
sub
or
jl
dec
jmp
adc
mov
or
mov
mov
mov
adc
or
lock
push
adc
xorl
and
adcb
je
mov
pop
das
fnstsw
xor
je
je
mov
xor
push
inc
pop
pop
leave
enter
les
sbb
cld
jle
add
push
push
push
pop
sti
leave
loopne
unpckhps
outsl
adc
iret
pop
addr16
aam
mov
mov
mov
xor
addr16
push
and
test
call
pusha
out
sbbb
fwait
cmp
mov
popa
or
aas
xchg
dec
push
mov
jne
mov
xchg
cmc
or
pushl
cmpsl
pushf
loopne
jmp
leave
push
add
push
leave
xchg
pop
and
mov
inc
pop
push
clc
push
ret
xor
les
neg
push
lea
push
mov
push
mov
cli
inc
vmovhps
sub
dec
pop
pop
push
mov
mov
decb
dec
add
push
mov
rclb
or
fs
or
aas
loope
imul
pop
adc
add
add
jg
push
or
clc
jg
popa
push
adc
std
adc
xor
mov
sbb
ret
or
leave
sbb
loopne
xchg
lock
insb
adc
fs
int3
and
push
push
pop
repnz
rcrl
add
mov
jl
sbb
movnti
sbb
mov
mov
repz
insl
leave
or
sbb
leave
ds
rol
push
or
xchg
jl
xchg
and
or
lock
jno
andl
mov
jno
xor
pop
sbb
push
pop
cmp
pop
add
push
leave
clc
lods
sub
clc
xchg
decl
xchg
roll
cmp
sbb
mov
inc
outsl
xchg
dec
dec
adc
pop
add
mov
adc
mov
je
jne
dec
shrb
push
pop
mov
jmp
mov
mov
nop
lock
hlt
ret
pusha
mov
cmpsl
imul
xor
sbb
fstps
shrl
inc
cmp
inc
scas
das
push
jge
xchg
lock
lcall
imull
call
push
loopne
shrb
lret
mov
ss
sub
pop
pop
daa
inc
je
fdivrs
lods
cmp
in
cs
add
add
adc
pop
pop
imulb
xor
clc
or
and
or
out
push
je
and
je
lahf
push
clc
fstl
shr
hlt
pop
or
add
aam
fistps
mov
sbbl
and
rcl
add
and
std
xor
or
movl
and
cmc
movl
movsl
jmp
into
mov
adc
and
or
lods
sbb
xor
loopne
insl
ja
outsl
mov
into
and
add
jecxz
out
add
fstl
ffree
enter
outsb
mov
pop
dec
lods
and
push
in
and
cmc
pop
cs
test
je
stos
pushl
xchg
lock
sbb
ret
jne
add
push
or
jo
imulb
mov
jmp
fdivrs
iret
neg
xlat
bound
inc
or
xor
xor
push
push
mov
xorb
in
xchg
femms
or
js
ds
pop
dec
es
lahf
test
shl
stc
or
clc
push
mov
lcall
jecxz
push
xorl
daa
repnz
add
stos
add
xchg
addr16
sbb
sub
xchg
int3
addr16
mov
leave
adc
movsb
lock
int
mov
mov
xor
mov
inc
insl
lcall
dec
lcall
mov
mov
sbb
jecxz
jge
mov
call
mov
pop
aad
push
pop
sbb
inc
ds
dec
incb
mov
lea
shl
push
push
lea
push
fdivs
push
inc
fmuls
push
movl
rorb
push
stos
inc
rep
push
inc
fisubrs
adc
add
or
pop
jbe
les
jne
adc
mov
push
pop
leave
repz
ss
cmp
add
stos
adc
xor
mov
add
aad
stos
or
inc
repnz
inc
add
and
or
cmpsb
xchg
add
and
dec
jle,pt
inc
add
test
mov
mov
pop
mov
mov
mov
icebp
fisubrs
cltd
dec
out
scas
pop
movsl
cmp
cwtl
movsl
mov
cmpsb
mov
aas
lcall
adc
ljmp
out
lock
dec
nop
add
orb
nopl
stc
sub
push
sub
insb
adc
lea
inc
lock
aam
dec
nop
rcrl
dec
outsb
cmpb
sub
jo
mov
orl
leave
mov
ficoml
jp
adcb
add
lods
data16
rorb
push
pushf
in
daa
add
or
xchg
fisubs
inc
psubd
fdivl
js
dec
fadd
ret
daa
icebp
outsb
sbb
inc
adc
negb
jge
jl
bound
or
push
fsubrp
adc
sbb
dec
inc
push
in
mov
sub
and
mov
test
sbb
arpl
and
pushf
aam
pop
jnp
cmc
adc
scas
adc
fdivrl
fdivl
adc
xchg
lods
sbb
adc
inc
addr16
or
add
lods
cmp
pop
jb
xor
adc
int3
adc
push
imul
scas
push
push
or
push
lods
cmpsb
adc
repz
mov
pop
into
shrl
push
xchg
mov
neg
sbb
call
je
xor
inc
and
popf
ficoms
cmp
jo
lods
cmc
add
cmc
pop
leave
lds
push
aam
push
jns
test
lods
lahf
rolb
sbb
pop
mov
mov
fcoml
push
mov
and
push
add
cmpsl
mov
mov
dec
mov
dec
pusha
sbb
mov
pop
adc
add
jns
cmp
sahf
hlt
inc
pop
loop
jne
pop
push
mov
and
pop
ja
and
addb
pop
push
inc
sbb
fsubr
sbb
cwtl
je
sbb
arpl
sub
mov
js
insb
les
movsb
xlat
add
push
or
dec
lret
and
stc
pushf
sbbb
sbb
push
push
xor
lcall
loope
incl
sbb
movsb
inc
adc
fs
or
push
dec
sub
testb
pop
lods
push
or
jnp
rcrb
jae
loopne
push
loope
mov
sbb
sub
aas
push
sub
or
sbbl
int
push
mov
sbb
mov
dec
lods
mov
mov
push
push
jbe
daa
cwtl
sub
adc
push
sbb
mov
clc
adc
sbb
add
and
mov
fwait
inc
or
js
inc
leave
jo
cwtl
push
stos
dec
sahf
pop
jnp
orl
loope
test
je
popa
shlb
lods
mov
push
add
lahf
shlb
cmc
push
loopne
mov
inc
add
adc
mov
xor
test
xchg
xchg
push
pop
shlb
mov
or
and
and
int3
and
imul
xor
xlat
int3
add
cmp
out
mov
xlat
cmp
adc
add
repnz
and
jle
or
aas
pushf
xchg
daa
sldt
seto
push
pop
push
push
imul
or
sub
ss
xchg
nop
outsl
pop
rorb
shll
jb
movsl
scas
xor
sbb
push
cli
xchg
jl
dec
push
or
subl
or
out
mov
push
cld
inc
mov
cld
out
xorb
ds
loopne
push
push
cmpb
or
lods
shlb
pop
mov
inc
adc
push
test
pusha
mov
jbe
mov
push
jle
jle
or
push
addl
inc
je
mov
jmp
xor
mov
mov
xor
popf
sti
push
adc
pop
push
sub
push
insl
arpl
inc
and
cltd
xchg
xchg
les
sub
insb
push
mov
inc
cmp
fnsetpm(287
dec
dec
mov
push
outsl
push
and
mov
jmp
pop
fldl
xor
adc
int
xor
pop
popa
into
pop
icebp
jae
imul
or
pop
adc
mov
pcmpeqw
inc
push
fnstsw
cmp
test
mov
mov
inc
and
idivb
jo
jle
nopl
sub
pop
mov
add
sarb
ja
imul
mov
mov
mov
mov
push
mov
sub
pop
push
enter
bound
inc
dec
adc
jnp
les
push
daa
mov
orl
and
push
test
jno
push
outsl
fwait
movsl
mulb
mov
jns
gs
pusha
in
jmp
jno
mov
aas
jbe
adc
jae
test
enter
or
dec
aaa
cs
or
or
push
dec
imul
dec
lcall
rorb
testb
testb
dec
dec
in
out
add
loope
or
lock
cmp
lret
or
or
out
sbb
outsl
enter
cmp
sti
mov
and
test
sub
jl
dec
mov
divb
pop
ret
cs
pop
rorl
imull
jmp
rclb
or
sbb
or
adc
out
dec
mov
jns
test
inc
cmp
xchg
or
ds
push
push
dec
cmp
inc
push
inc
lcall
dec
push
dec
sbb
add
shlb
outsb
shll
jecxz
imul
fidivrl
les
add
adc
add
xorb
shrb
jg
nop
or
scas
mov
aam
inc
js
out
adc
push
jmp
or
fildl
sahf
pop
repnz
decb
push
out
fs
add
and
add
xchg
or
clc
adc
xor
sahf
xchg
cmp
mov
pop
cmpsb
fcom
mov
aad
cmp
sysexit
test
pop
inc
mov
repz
mov
add
insb
mov
fsubl
lock
mov
cmp
adc
int
pop
pusha
ja
xchg
stos
call
mov
pop
adc
inc
adc
cwtl
out
cmp
fisttps
leave
aam
pop
or
pop
cmpsl
adc
sbb
pop
test
mov
test
jp
ret
jnp
icebp
pop
data16
push
inc
insl
sub
ret
jnp
div
std
or
pop
push
andl
sti
push
sbb
mov
xor
fwait
push
movups
mov
xchg
icebp
adc
js
gs
jge
jo
or
movsb
repnz
fs
xchg
outsb
lahf
lea
pop
add
aas
add
xorl
daa
or
leave
jl
sub
repz
sub
sub
sub
pop
push
lods
or
mov
jge
jecxz
mov
outsl
push
pop
pop
push
fs
xor
sbb
push
xchg
sub
add
xchg
movsl
js
pop
ss
and
sbb
jl
xchg
sbb
cmp
jne
int3
shll
scas
sub
dec
xor
int3
enter
cmp
test
jge
mov
mov
or
add
in
xchg
int3
arpl
push
push
push
orb
pusha
pusha
mov
mov
test
add
add
repz
fmull
notb
js
mov
lcall
jl
test
cmp
data16
js
push
js
imul
pop
jb
and
xchg
adc
sub
or
sahf
hlt
roll
lds
jne
mov
icebp
mov
inc
dec
icebp
sti
clc
dec
mov
xor
rcll
cmp
sub
stos
fidivrs
das
pop
cmp
jl
mulb
xchg
lock
inc
push
jl
push
mov
inc
mov
sbb
in
xor
mov
scas
push
fs
add
push
jns
into
mov
pop
hlt
test
pop
out
add
cmp
test
mov
xor
fwait
test
push
bound
push
sbb
pop
dec
sbb
mov
pop
push
outsb
xor
xor
and
stc
aam
jle
pop
pop
in
sbb
push
and
jae
sahf
xor
hlt
xor
xor
scas
ljmp
mov
jge
xchg
or
and
add
out
fisttpl
movsl
mov
or
dec
lock
shl
xchg
bound
test
mov
pop
sbb
sbb
sub
jne
adc
sub
push
out
pop
and
xchg
cwtl
cmc
sbb
mov
jle
outsl
sbbl
or
and
sub
in
and
xor
dec
mov
sbb
sbb
leave
sbb
and
pop
adc
cmpsb
lods
lea
repz
ret
push
rorb
mov
neg
out
cmp
les
cmp
pop
pop
push
mov
cmp
add
push
daa
pop
gs
in
inc
push
repz
ret
stc
loop
pop
hlt
setne
ljmp
repz
sti
aas
push
push
push
lock
jg
mov
mov
adc
hlt
jne
push
push
push
push
add
push
push
jae
adc
or
xor
or
hlt
leave
call
jo
xor
pop
shr
adc
mov
or
sub
inc
and
nop
dec
push
xlat
daa
int
xor
leave
adc
lea
pop
xchg
repnz
rorl
mov
add
sete
push
inc
push
test
sub
loope
sbb
dec
add
push
sbb
lret
and
add
mov
push
push
sbb
sbbb
push
movsl
push
sub
push
mov
inc
loope
into
fwait
push
sbb
clc
add
mov
push
mov
jno
add
ret
popa
sub
xchg
call
sbb
jge
pop
dec
inc
cmp
add
je
xor
or
mov
push
push
mov
imul
push
test
inc
stos
or
bound
mov
or
insb
and
sbb
and
add
scas
stos
xor
inc
push
add
movsb
test
pop
inc
adc
inc
and
jmp
adc
cmp
xor
push
xor
jo
int
xchg
ret
bound
pop
sbb
push
mov
fisttpll
lret
in
insb
repnz
scas
xchg
xor
add
mov
mov
test
inc
out
movsb
lahf
push
pop
mov
adc
mov
push
jecxz
inc
lock
mov
mov
loope
inc
inc
jle
xor
add
je
push
mov
cmp
push
adc
mov
lahf
mov
pop
push
pop
dec
imul
ret
rcll
push
pop
pop
cli
scas
sarb
inc
adc
rcrl
idiv
push
icebp
push
cmp
leave
jb
mov
ret
sub
add
insb
and
incl
and
call
ss
sbb
das
dec
nop
inc
cwtl
add
sbb
mov
lds
pop
lods
ja
shlb
scas
sub
push
fs
push
rolb
repz
xor
mov
dec
jge
fidivl
out
push
push
call
add
add
test
dec
test
xchg
adc
mov
in
jno
mov
inc
add
push
jo
test
in
sarb
out
test
jl
icebp
popf
hlt
mov
add
loop
adc
jecxz
sub
add
loope
rclb
xchg
pop
mov
mov
mov
jno
lret
lea
add
or
sbb
cltd
aam
mov
adc
mov
or
mov
cmp
into
lock
addr16
adc
xor
cmp
je
cmp
je
lcall
clc
cmp
jae
push
cs
fcomps
pop
lock
daa
sub
add
ret
mov
add
cmp
jno
jmp
cmp
dec
hlt
jge
mov
lock
jnp
mov
add
mov
outsb
test
test
loop
fcomps
jle
fwait
jmp
xor
jmp
cmp
pop
test
ss
incl
jecxz
and
push
cmp
jg
loope
shl
test
aaa
add
push
jmp
fldt
pop
mov
hlt
mov
adc
and
dec
out
adc
adc
mov
or
mov
sub
rcll
or
pop
movsl
add
loopne,pn
cmp
add
inc
cs
sub
cmp
lock
nop
mov
inc
enter
adc
cmp
fildl
es
test
xchg
xorb
lcall
loop
xor
cmp
iret
xor
mov
mov
xchg
jne
lret
lock
sarl
push
mov
sbb
inc
adc
lcall
cwtl
jge
or
cli
cmp
or
add
mov
xor
fimuls
push
sbb
cmp
pop
pop
inc
loop
pcmpgtd
sahf
push
loopne
inc
sti
lret
ret
dec
stos
jecxz
test
push
fildl
adc
jp
push
test
push
ds
rcll
push
sbb
movb
push
pop
push
test
lret
in
sbbl
sbb
hlt
mov
or
push
cmp
sub
sbb
xchg
es
insb
ss
test
lock
push
shrd
jb
lea
jb
fdivr
cmpb
mov
pop
aad
sub
mov
ljmp
repnz
sub
push
stos
push
sbb
push
mov
and
ret
add
lock
and
cld
or
lods
pop
lods
add
push
cmp
outsb
push
loopne
jno
je
int3
outsb
or
and
inc
unpcklps
mov
insl
aam
inc
dec
ret
daa
push
adc
adc
dec
test
cltd
jecxz
xor
cli
adc
adc
sbb
test
test
cmp
je
inc
cmp
mov
sbb
cli
pop
jg
test
ret
pop
push
movsb
fildl
stos
test
adc
shrb
cmpsb
jb
xchg
dec
rolb
cmp
sbb
sbb
push
push
lcall
shrb
sub
dec
push
adc
xchg
clc
or
add
inc
in
mov
test
cmp
xchg
les
mov
add
pop
shr
pop
mov
adc
lods
and
and
mov
out
fmuls
mov
mov
jne
xchg
js
mov
mov
adc
lret
push
sti
adc
jo
jae
std
jge
mov
add
cmc
xchg
jecxz
pop
adc
push
imul
dec
dec
sub
and
push
pop
daa
dec
inc
pop
clc
push
sbb
dec
add
pop
leave
jns
inc
mov
sbb
or
insl
sub
sbb
insb
or
pmuludq
push
sub
repz
adc
nop
outsb
aaa
cmpb
push
rolb
jbe
mov
popa
xchg
inc
div
cmp
xchg
cwtl
adc
adc
inc
xor
insl
push
jns
mov
int
call
lock
mov
add
call
mov
push
jle
dec
lcall
cmp
fldl
jne
or
enter
sbb
arpl
fists
dec
sub
and
adc
lods
popf
mov
out
mov
es
xchg
nop
mov
push
xor
or
sbb
mov
shrb
lods
or
mov
mov
loope
sbb
out
popa
pusha
xchg
popa
pop
cmc
jmp
cld
pop
lock
popa
inc
mov
push
add
enter
movsb
push
push
smsw
or
dec
or
adc
pop
movsb
sub
sbb
and
fs
mov
mov
push
push
in
cmp
mov
jmp
push
push
fiaddl
pop
pop
int3
pop
ja
sub
adc
sbb
push
fidivrs
dec
add
pop
adc
or
mov
push
pusha
add
movsb
mov
inc
ficompl
pop
fnstenv
mov
sbb
push
mov
pop
sti
xchg
pop
lock
xlat
outsl
sub
fldl
inc
pop
inc
and
add
jne
cmc
popa
lock
add
in
and
js
add
mov
pop
fistpll
add
mov
scas
pop
jmp
xor
aas
sahf
pop
fnsave
push
mov
cmc
pop
pusha
pushf
cmp
jmp
daa
push
dec
adc
and
and
or
sub
mov
nop
and
arpl
ja
mov
lock
pop
mov
dec
add
xor
sub
aaa
mov
xor
xchg
or
cmp
push
jmp
cmp
cmp
leave
sbb
aas
insb
insl
push
pop
cmc
add
mov
inc
cmp
push
daa
sbb
in
jmp
enter
in
jne
add
repz
es
mov
rcrl
cld
int
fstpl
cmp
mov
test
xchg
xchg
sub
adc
rcl
repz
or
push
push
dec
gs
sub
pop
xchg
push
mov
pushf
xchg
js
fisttpll
dec
mov
hlt
or
or
out
stos
add
fcompl
in
lea
loop
js
decl
add
and
pop
shrb
push
push
mov
int
shr
push
adc
inc
xor
and
cld
adc
sub
mov
in
sahf
int
outsb
xlat
test
inc
rcl
popa
daa
aam
dec
out
dec
xchg
jne
test
div
bswap
pop
push
inc
or
sub
inc
stos
cmp
push
xor
push
jmp
mov
sub
jne
xor
push
push
push
sbb
je
cs
lock
pop
inc
ficomps
push
inc
xchg
addl
xchg
fimuls
lea
test
mov
push
js
push
xchg
lea
push
lock
rcrb
lret
cld
sub
mov
imul
jo
cmp
lods
fidivrs
jae
in
dec
adc
lock
call
or
cmp
loop
pop
hlt
addl
adc
push
popa
test
icebp
add
iret
push
push
add
push
xlat
popf
jno
test
or
ja
jp
mov
add
add
call
push
mov
sahf
shrl
addl
cmp
cmpb
mov
ss
pop
pop
aas
add
push
mov
sub
xlat
or
pusha
adc
daa
push
mov
pop
sub
notb
or
push
test
rcll
pusha
lret
xlat
adc
push
call
sbb
inc
xchg
imul
rclb
or
push
call
ret
gs
sbb
sub
mov
cmp
je
lock
push
lds
xchg
cmpl
mov
aad
cmp
xchg
push
into
hlt
pop
xchg
pop
and
mov
test
mov
loope
sub
mov
pop
sub
and
push
dec
call
inc
jl
push
push
lahf
pop
add
and
add
shr
loopne
test
push
add
sbb
push
sbb
mov
mov
cmp
je
push
lea
push
sbb
sub
cmp
sbb
sub
push
sub
clc
push
sbb
sbbb
xchg
rcrb
pop
or
adc
xor
imul
mov
data16
imul
aas
push
adc
repnz
gs
pusha
lods
and
inc
dec
fistpl
ss
clc
add
test
enter
in
inc
lods
jbe
outsb
pop
sbb
in
mov
neg
push
add
in
pop
hlt
mov
push
loope
in
test
push
push
je
sbb
push
cmp
lock
lods
mull
test
ja
sub
test
pop
push
push
xor
push
push
cmp
je
fcmovbe
push
push
mov
pop
or
push
inc
inc
aad
fiadds
push
mov
inc
lods
std
inc
sbb
cmp
je
push
push
aas
xchg
test
push
int3
sub
cmpsl
fisttpll
or
das
or
push
icebp
mov
lods
lods
pop
mov
pop
cmp
into
push
cmp
test
loopne
in
notb
sbb
out
cli
stos
cmp
xor
sete
lods
lcall
dec
push
addb
and
push
add
imul
cmp
mov
push
cmp
je
mov
cmp
cmpl
je
ret
pop
or
add
jae
inc
cmp
inc
adc
ret
popa
mov
add
jb
or
cmp
inc
sbb
xor
fimull
adc
xlat
push
push
cmpsl
out
cmpsl
and
jb
jg
or
repnz
cmp
je
cmp
je
cmp
jne
fisubrl
pop
add
cmpsb
mov
adc
je
lret
adc
or
jmp
loopne
lds
mov
cmp
xor
adc
pop
mov
pop
clc
or
hlt
mov
lods
add
push
sarb
ss
add
jno
cmp
jne
xchg
add
out
fcoms
sbb
mov
mov
or
dec
jns
jnp
in
jp
cmp
subb
dec
adc
sub
sub
add
aaa
adc
pop
pop
rclb
fs
leave
ret
and
inc
inc
xorl
jg
xor
cmp
ja
enter
sbb
es
jae
inc
aaa
popa
data16
dec
insl
add
enter
cld
dec
je
add
push
sbb
addr16
add
pop
push
inc
pop
lret
sarb
aad
call
jmp
je
cmpl
in
xor
xchg
mov
mov
cmp
add
idiv
divb
push
cmp
gs
je
cmp
jne
mov
sbb
add
jmp
xchg
push
dec
inc
lock
mov
pop
dec
push
cld
fcomi
xor
push
movsb
jne
jmp
testb
lcall
adc
sbb
aam
add
cli
cmp
jbe
mov
mov
mov
cmp
fs
dec
inc
jmp
inc
and
rclb
pop
mov
pusha
cmpsb
mov
mov
and
test
fwait
inc
push
push
clc
lahf
loopne
cmp
cmp
je
js
clc
out
mov
lea
adc
clc
mov
jl
lret
test
pop
in
inc
xor
mov
bound
jge
pop
sahf
jne
cmp
jle
sti
cmp
notb
cmp
push
push
jno
xchg
clc
je
sub
movb
cmp
or
ja
sarb
or
sub
inc
popa
cs
cmpl
mov
add
push
cmp
push
stos
adc
or
femms
ds
outsl
lret
cmpsb
inc
sub
popa
loop
jne
cmp
push
jno
push
test
mov
add
sbb
rorl
mov
pushw
mov
push
lret
aaa
jb
cmp
rol
pop
shl
add
jmp
cwtl
aas
sub
jne
and
dec
hlt
add
je
fs
jne
xor
sarb
je
pop
sub
push
mov
or
add
pop
jae
aaa
sbb
jmp
dec
shlb
cld
jbe
test
mov
or
push
sar
dec
add
outsb
data16
xor
push
test
add
jg
or
jge
int
in
or
or
jle
es
sub
dec
jle
sub
and
pop
cmp
jl
pop
jle
pusha
pusha
and
jbe
lock
jle
push
adc
and
or
je,pn
test
jne
je
add
jb
xchg
je
add
ss
je
xor
mov
adc
movb
inc
mov
push
sub
push
sbb
or
inc
xorl
inc
push
push
mov
call
and
je
adc
mov
sahf
inc
outsl
push
mov
push
mov
icebp
js
add
jp
inc
es
mov
push
or
insb
add
push
xlat
fldl2e
xchg
mov
sub
inc
cli
jecxz
mov
andb
push
cmpsb
imul
mov
xor
insb
mov
rolb
jecxz
icebp
or
or
out
es
out
add
mov
jne
fiadds
mov
fisubs
push
sub
push
mov
jnp
inc
mov
movb
dec
cmpsl
cli
and
lea
push
faddl
popf
mov
add
pop
jb
jg
sub
pop
cmp
mov
stos
push
mov
loopne
or
das
mov
or
xchg
lods
cmp
pop
cwtl
jne
imul
fiaddl
stos
dec
daa
mov
add
cmp
push
push
dec
fadds
inc
and
jae
je
xor
mov
cmp
je
test
adc
cwtl
ret
in
push
fsts
sti
mov
add
jbe
pop
or
sti
pop
daa
dec
add
and
push
and
stc
pop
add
data16
or
hlt
add
xor
pop
inc
or
mov
mov
add
out
pop
popf
xchg
sub
es
jl
add
cmp
stc
or
data16
mov
jg
scas
push
or
mov
cmp
lock
cld
xchg
mov
sub
inc
xchg
mov
pop
xchg
loop
aaa
rolb
ja
jne
add
push
cmp
adc
lds
adc
std
sub
sti
pusha
jb
or
shlb
mov
andb
add
sti
pop
fwait
adc
mov
xchg
sbb
xor
add
jno
sbb
mov
mov
mov
pop
sbb
mov
push
and
mov
outsb
xchg
mov
xchg
push
push
mov
jne
lahf
jne
jb
dec
into
addl
xchg
xchg
xor
pop
inc
mov
cmpb
cmp
mov
xor
or
xchg
nop
mov
inc
xchg
and
inc
jbe
test
and
test
mov
daa
pusha
jle
setne
xor
mov
rorb
aam
shlb
clc
mov
sbb
cld
loope
sbbb
in
mov
xor
loop
add
mov
push
in
fsubs
jne
add
arpl
push
shlb
sub
jg
out
and
jne
adc
push
push
fdivl
jne
jle
pop
insb
sbb
aas
jnp
das
movl
cmp
das
bound
in
add
enter
sti
dec
adc
stos
xor
mov
rclb
addb
shlb
sti
icebp
js
mov
jb
fcomps
std
loope,pn
inc
lods
jmp
cmp
je
jg
clc
and
lds
add
insl
negb
inc
xchg
in
loope
jge
pop
and
aaa
addl
sbb
lret
mov
pop
dec
js
dec
decl
adc
push
mov
imul
in
test
dec
fsubrs
push
loopne
mov
in
or
call
xor
jbe
adc
mov
jp
sbb
incb
jae
clc
jg
mov
jmp
pop
inc
cmp
je
lea
cmpb
cmp
jne
mov
xchg
les
aam
adc
clc
or
out
jmp
cmp
mov
mov
inc
incl
filds
dec
fcompp
xchg
push
jmp
test
movsb
push
jbe
mov
cltd
test
adc
pop
jge
cmp
cmp
gs
jo
and
sbb
push
shlb
jns
and
mov
or
ret
ljmp
cmp
lahf
jbe
das
ret
mov
jmp
inc
push
sbb
sbb
adc
pop
sbb
dec
ret
mov
lock
fnsave
in
das
lock
mov
sub
adc
inc
mov
lret
int
dec
pop
pop
add
mov
jne
es
or
test
mov
call
mov
xor
test
cmc
mov
inc
mov
movsl
sbb
in
mov
or
and
mov
loopne
or
push
push
push
sbb
adc
push
push
in
sub
jmp
pop
sbb
jne
imul
inc
add
in
jbe
outsb
jns
jbe
ja
and
movq
mov
xchg
in
xor
mov
xor
cmp
in
cmp
fisttps
fcomps
pop
ret
dec
pop
and
jnp
fldenv
push
in
add
in
and
mov
add
add
loopne
push
mov
adc
ds
or
orb
push
xchg
push
mov
or
js
ficompl
stos
jb
jnp
push
dec
jno
les
in
pop
mov
or
stc
insl
xchg
movsb
push
push
cmp
pop
popf
xchg
sahf
insl
mov
out
ret
lea
test
or
xlat
ljmp
or
sub
in
add
add
dec
loopne
fwait
mov
daa
or
add
pop
inc
dec
movl
mov
sbb
js
cmpb
xchg
or
loopne
mov
nop
add
inc
pushf
or
cmp
repnz
hlt
or
mov
cmp
out
pusha
mov
test
or
insb
fldl
or
add
lcall
dec
js
mov
imul
jmp
pushl
lock
push
loopne
in
jne
rclb
xor
sub
jg
or
sbb
out
cmpb
mov
jmp
lcall
hlt
cmp
jo
mov
inc
dec
rclb
jnp
popf
add
cmpsb
inc
jl
insb
ljmp
fucomi
ud0
add
mov
cmpsl
mov
lea
mov
xor
repnz
je
push
loope
and
cmp
dec
bound
lea
jnp
orb
inc
insl
cmp
mov
dec
add
imul
push
xchg
rclb
pushf
imul
inc
inc
fsub
in
in
xchg
add
loop
cli
mov
test
in
out
sbb
out
push
push
sub
push
orb
pop
jp
aam
push
xchg
and
dec
stos
lret
push
cmp
or
adc
sub
data16
idiv
sub
adc
push
adc
pop
cmp
loopne
daa
shlb
sbb
lcall
mov
or
in
sub
or
inc
out
shrb
or
add
loope
cmp
int3
inc
add
cmp
insl
dec
jg
orb
dec
add
mov
addr16
addl
or
loopne
xchg
pop
outsl
cwtl
fsubl
jl
xorl
outsb
push
jl
cld
or
or
in
out
cmp
cltd
inc
mov
popa
adc
lock
sahf
or
dec
scas
dec
cld
in
sbb
aaa
sub
into
add
sub
call
push
sub
pop
pop
sbb
sbb
fwait
je
pop
sbb
cmpl
jmp
dec
in
push
pop
mov
mov
movl
insl
xchg
jno
lock
dec
xor
push
mov
lcall
sbb
xor
cmp
pushf
push
sarl
ret
and
das
popf
pop
sbb
das
inc
jl
pushf
inc
clc
lods
out
sti
dec
inc
mov
cmp
dec
loop
inc
pop
sbb
in
xchg
incb
xor
sbb
jmp
mov
mov
ja
dec
inc
pop
mov
push
mov
push
push
test
pushf
mov
adc
jb
add
add
mov
mov
js
aam
cmp
fcom
mov
add
in
rolb
or
js
adc
cli
pushf
xor
lods
or
inc
scas
imul
mov
shrb
inc
aaa
out
stc
lahf
cmp
pop
or
adc
addr16
mul
jmp
push
lock
dec
cmp
and
lret
dec
add
cmpsl
push
ret
data16
into
mov
mov
std
adc
jecxz
data16
dec
inc
out
or
or
and
cs
fcoms
lods
and
push
inc
ffree
mov
pop
mov
add
pop
pop
add
sub
lahf
lea
and
imul
movsb
and
dec
push
pop
pusha
lea
faddl
push
adc
pop
sub
scas
int3
bound
rcrl
cmp
testl
xchg
xchg
xchg
mov
leave
sbb
lods
dec
jp
inc
clc
xchg
push
lret
cmpl
test
pop
jb
insb
fiaddl
pop
sub
pop
or
popf
fistps
sbb
sbb
cmp
out
int3
add
int3
jecxz
sub
inc
adc
cmpb
std
jb
lods
adc
in
mov
mov
mov
cmp
add
add
push
and
repz
pop
dec
inc
push
insl
lds
enter
inc
push
or
loop
cmp
rorb
xchg
jae
push
xor
lds
pop
cmp
sbbb
push
dec
mov
or
enter
mov
sub
add
push
add
pop
adc
jle
lcall
push
and
cmp
inc
lods
push
xchg
dec
xor
lret
clc
insb
call
sbb
mov
icebp
mov
push
lcall
push
lcall
push
pop
add
cs
push
inc
xchg
clc
adc
cmp
jb
imul
movb
std
and
push
adc
or
pop
std
or
sbb
jge
repnz
out
mov
pop
neg
or
or
pop
add
or
test
test
jmp
and
lock
or
or
sub
pusha
xor
cwtl
mov
insb
inc
scas
nop
clc
jne
popa
xchg
or
inc
jno
pop
jmp
imul
sub
or
insb
add
inc
adc
ljmp
cmpsl
xchg
pop
repz
fisubrl
in
pop
movsb
sbb
lock
jbe
cs
les
pop
push
push
jl
pop
jo
jns
adc
push
imul
enter
mov
jne
gs
dec
aaa
pop
adc
pop
outsl
adc
cli
xchg
test
add
mov
mov
mov
sbb
xor
add
sub
cmc
loopne
and
fisubl
pop
aad
push
add
nop
push
icebp
add
movsb
add
test
cmp
cmp
jne
fstpt
adc
inc
sub
pop
jb
pop
testl
scas
lods
fldt
push
jnp
lods
add
xor
jnp
or
inc
adcl
push
mov
pop
loope
mov
pop
mov
inc
and
das
adc
test
xchg
adc
dec
and
rclb
ja
cwtl
sub
mov
jge
orb
push
push
repnz
sub
sub
sbb
clc
cmp
cld
xor
in
test
sub
sbb
sbbb
sub
or
push
or
mov
les
sbb
jge
xchg
adc
inc
add
rolb
loop
sub
jle
je
add
dec
pop
push
pop
cwtl
nop
and
orw
jo
inc
fst
and
pop
js
into
icebp
movsb
sbbb
xchg
shll
testb
jns,pn
pop
pop
mov
int
movb
pop
fwait
push
loop
test
pop
fs
push
cltd
push
push
and
out
movsl
mov
and
xchg
fsubl
jno
xor
adc
and
adc
popf
or
sbb
lock
pop
push
clc
loopne
es
mov
rorb
out
push
decl
loopne
and
push
pop
xor
aam
call
dec
and
jo
mov
xor
mov
call
cltd
addr16
push
or
pop
inc
bound
add
and
pop
pop
stos
mov
lret
xchg
js
push
cli
xor
loopne
scas
inc
popf
xchg
sub
addr16
je
enter
pop
xor
pop
sar
pop
adc
push
loopne
sbb
lock
jne
sbb
sub
adc
rcll
jmp
repz
daa
movsb
add
or
sub
and
cltd
lods
push
scas
jmp
in
xor
pushf
dec
push
mov
lea
pop
or
dec
pusha
enter
pop
inc
inc
jecxz
xor
test
mov
test
adc
mov
pop
lea
mov
movsl
mov
add
adc
add
pop
test
shll
incl
ds
enter
push
add
test
mov
sub
mov
pop
xchg
or
add
js
mov
sbb
movsb
and
sub
sub
push
js
dec
dec
loop
lods
or
pusha
xor
xchg
mov
xor
ret
xor
sub
add
xlat
mov
sbb
xor
xchg
mov
insb
add
ret
aad
xor
stos
lock
mov
jne
mov
jmp
loopne
nop
iret
je
enter
dec
jne
sub
lds
dec
test
push
add
sub
dec
xor
mov
xlat
enter
roll
xchg
xor
adcl
mov
scas
lahf
sub
jb
aaa
imul
cmp
dec
sbb
xchg
imul
mov
ret
lcall
daa
imul
push
push
xchg
lcall
jo
adc
out
test
sbb
inc
pop
loopne
or
cmp
jne
push
xchg
mov
sbb
mov
add
cmp
jl
or
pusha
lods
andl
daa
or
aaa
sub
push
dec
mov
mov
lea
xchg
pushf
jl
mov
lahf
mov
stos
adc
outsb
cmp
adc
inc
pop
dec
xor
and
test
jb
movlps
lahf
add
lahf
push
mov
mov
fsts
fcomps
fwait
or
xchg
or
in
cs
lods
in
jge
fwait
inc
in
inc
movsb
call
jns
push
call
dec
in
add
push
icebp
int
xor
das
nop
clc
mov
ljmp
pop
dec
add
addr16
pop
push
pop
addr16
cmp
sub
in
daa
adc
push
push
mov
sarb
scas
jno
bswap
and
sbb
or
or
push
dec
inc
mov
push
cmc
imul
or
int3
cmp
rolb
push
xor
roll
fmull
xor
lds
sbb
loop
jno
jmp
sub
xchg
and
sbb
or
cmp
sbb
gs
adc
fadds
fwait
xlat
push
pop
je
push
aad
or
pop
adc
cwtl
jg
and
pop
rclb
ss
gs
sbb
adc
push
insb
push
or
inc
xor
xchg
pop
ffree
aaa
xorb
inc
jg
and
pop
cmpsl
mov
mov
mov
aaa
lret
scas
mov
xchg
data16
sub
mov
xor
pop
clc
xor
leave
jne
mov
dec
in
fwait
mov
xchg
add
add
or
pop
and
shrb
adc
dec
inc
push
dec
and
ret
or
cltd
out
in
out
ret
lea
sub
add
dec
sbb
and
add
cmp
rorl
pop
xchg
inc
and
sub
inc
pop
je
add
xor
xor
lds
xchg
sub
in
in
dec
fcoml
push
cmp
mov
shlb
add
xlat
andl
jmp
inc
ret
addr16
test
or
sub
movl
fwait
sbb
dec
cmc
sbb
adc
fs
test
std
and
or
push
jle
fbstp
add
movsl
cmp
sahf
pusha
push
sbb
adc
push
cmp
adc
add
addr16
push
add
push
mov
aaa
loope
push
jne
jmp
mov
subl
adc
add
mov
add
add
mov
fidivs
clc
add
and
and
inc
add
push
push
dec
rcrb
inc
push
lea
dec
test
pushf
orb
movsb
push
adc
stos
cmpsb
pop
add
cmpl
adc
push
roll
stos
cmp
mov
cmp
aam
rorb
sbbb
inc
push
xchg
int
negb
mov
mov
sbb
push
fnstsw
insl
add
sbbb
lea
jbe
imul
je
sarb
and
add
push
rcrb
int
adc
shl
pop
or
xchg
cltd
int3
cmp
jns
mov
jmp
cli
xor
mov
sbb
test
lcall
movzbl
push
test
add
push
xor
rcr
test
mov
je
xor
mov
sbb
je
fs
ficoms
loopne
jo
pop
xor
ficomps
je
sub
mov
int
push
fwait
out
push
jmp
push
mov
jmp
add
lock
movsb
jg
icebp
cmpb
mov
sub
lea
adc
adc
push
inc
push
subl
jnp
cmp
sbb
imul
push
sbb
cmp
gs
sbb
arpl
int
outsb
pop
or
imul
or
mov
int
adc
fmuls
sbb
sbb
and
cmp
and
mov
movb
movl
cmp
push
mov
dec
subb
mov
adc
mov
flds
jb
cmp
inc
in
jmp
push
add
xorb
insb
inc
ss
and
int
inc
dec
sbb
push
xor
pop
sbb
xchg
sbb
out
je
or
adc
jle
adc
sbbl
lock
loopne
ffreep
cmp
outsl
and
inc
cmp
jecxz
ret
xor
inc
cmp
stos
mov
adc
pusha
mov
pop
aas
mov
ss
ficompl
and
and
shll
jge
adc
and
sbb
in
or
ret
jnp
add
mov
mov
adc
xor
test
sub
jo
fs
sbb
or
in
imul
xchg
pop
lret
mov
pop
add
lret
push
add
push
push
add
out
fwait
incl
fstl
pop
xchg
add
enter
iret
scas
lret
jbe
mov
sbb
aas
movsb
pusha
xor
roll
push
lahf
rcrl
insl
mov
mulb
sbb
adc
add
inc
inc
sub
cli
sbb
sbb
inc
sub
nop
es
mov
sbbb
aas
mov
in
adc
ljmp
popl
sbb
push
out
adc
cmpsl
mov
and
call
js
xor
sub
lret
sbb
add
ds
inc
mov
es
cs
fadds
movsl
jbe
adc
js
rorb
ss
bound
outsb
call
add
je
push
nop
jae
mov
sub
sub
push
mov
adc
and
or
fdivrs
cmp
aas
je
outsb
lcall
pop
lds
mov
loop
and
cmp
push
sbb
pop
movl
add
mul
enter
scas
jmp
arpl
pop
out
leave
jb
ret
rclb
sub
or
fnsave
lods
push
cmp
sbb
cmpb
adc
adc
mov
sub
or
loopne
inc
pop
cmpsl
xlat
insl
jecxz
add
lock
sub
out
push
push
xchg
sub
inc
cmp
jb
pushl
fldcw
xor
outsl
sbb
jge,pn
cmc
lret
xor
add
push
jae
in
cmpsl
cmp
sub
dec
sbb
sbb
sub
fisubl
adc
fwait
sub
adc
or
cs
pop
fcomps
loopne
popf
jg
adc
movsb
xchg
mov
enter
inc
imul
imul
jg
sub
xchg
jno
dec
mov
out
xor
jnp
pop
ret
cmpsl
mov
popa
lock
cmc
cs
mov
dec
jl
cld
push
pop
dec
pushf
inc
lea
push
lret
test
inc
sarb
cmp
sub
adcl
mov
xchg
nop
xor
shrl
test
cmp
adc
pop
cmp
pop
int
or
xchg
test
cmp
pop
fdivrl
mov
jp
stc
cmpsb
push
jb
add
cwtl
push
or
aam
jl
inc
mov
adc
aas
inc
xchg
cld
cmp
shr
shrb
out
popa
pop
inc
inc
xor
sbbw
outsl
push
push
sbb
sbb
jl
fsubs
jbe
ss
dec
inc
test
ret
out
movsb
mov
mov
push
ret
push
lahf
out
jo
push
xor
xchg
or
sbb
pop
cmp
jne
imul
in
lock
add
mov
add
jnp
xorl
js
jb
pop
es
shlb
dec
mov
lea
jmp
mov
es
fwait
es
or
cld
or
movsl
or
mov
mov
push
lods
cmc
xor
xchg
sbb
aam
lods
lods
xor
or
cmp
xchg
push
cwtl
jne
and
testl
ljmp
xchg
cmpb
xchg
faddl
mov
push
xor
notb
dec
mov
push
and
rclb
mov
out
insb
and
jmp
fnsave
pop
ret
or
scas
mov
mov
sbb
mov
xchg
in
mov
or
movsl
leave
das
int
loope
add
scas
imul
rclb
ffreep
cmpsl
das
jmp
mov
jl
cmpsl
mov
stc
mov
notl
jg
jg
cmp
cmp
into
or
incl
lock
add
ja
testb
mov
pop
push
test
sub
push
je
xchg
add
or
cli
add
adc
stc
sub
pop
mov
repnz
jle
js
out
mov
cmpb
xchg
xor
int
dec
add
test
jmp
pop
lock
scas
push
lock
jmp
pop
xchg
sbb
fiadds
aaa
jmp
xchg
cmp
jge
xchg
lahf
test
ret
adc
or
pushf
fsubrs
add
push
dec
xor
adcb
pop
outsl
gs
mov
je
test
idivb
inc
js
std
ja
test
lret
and
adc
rcrl
xor
in
and
cwtl
test
push
push
dec
or
mov
add
clc
dec
in
push
push
movsb
pushf
lock
push
jle
lahf
mov
push
aas
les
xchg
fst
fisttpll
add
inc
mov
push
cmp
or
addl
mov
jle
add
rclb
mov
add
pop
sbb
push
push
sub
jmp
mov
fprem
inc
pop
pop
test
add
jecxz
xor
lahf
testb
pop
pop
dec
fisttpll
add
das
pop
loop
xor
dec
aaa
hlt
push
incl
xchg
cmp
je
inc
pop
xor
or
push
xor
je
sti
mov
movb
pop
add
repnz
scas
sub
outsb
or
stos
or
pop
fmuls
pop
ret
leave
push
push
mov
add
xor
insb
jae
js
cmpl
out
andb
sbb
jne
add
xor
and
inc
jnp
pop
sub
sub
nop
mov
add
mov
adc
pop
gs
jae
xor
or
sub
add
and
adc
mov
xor
fdivs
cmp
or
lea
mov
idivb
xchg
mov
push
mov
jb
add
xor
mov
push
psllq
dec
cli
push
addb
inc
jo
pop
and
daa
test
sahf
and
lock
in
xchg
dec
fbstp
xchg
std
fmuls
inc
sub
mov
mov
inc
test
xchg
cmp
les
mov
insb
and
adc
mov
push
enter
sub
shrl
filds
ret
in
lods
mov
icebp
aaa
jecxz
or
inc
adc
notl
add
or
mov
mov
jns
sbb
test
inc
jne
jmp
mov
jmp
aaa
lret
mov
es
popa
cmp
leave
lods
mov
pop
add
push
add
cli
push
int3
or
mov
jae
je
mov
add
adc
test
or
int3
and
mov
movsb
fiadds
cld
push
addl
mov
add
jnp
int3
jmp
push
dec
or
arpl
sub
inc
ret
ret
push
adc
jecxz
or
and
and
js
je
test
fsubp
sbb
xchg
js
and
fistpll
aaa
xchg
fwait
pop
mov
mov
out
cmp
xchg
pushl
cwtl
fdivl
sub
and
xchg
fsub
xchg
add
outsb
cli
mov
add
add
sbb
ja
mov
sub
pushl
adc
xlat
icebp
sub
jmp
int3
test
pop
cmp
add
adc
push
cmp
into
rorb
add
cmp
adc
fdiv
fimuls
xor
inc
cmp
mov
mov
enter
cmp
stos
or
sbb
jnp
lods
loopne
mov
cmp
jne
ret
mov
adc
rcll
fbstp
outsb
cmp
xor
xor
inc
scas
and
jg
js
lock
xor
lahf
push
data16
imul
push
add
inc
sbb
hlt
push
pop
out
stos
xchg
and
nop
xchg
xor
movsl
fs
in
ss
pop
cmp
je
mov
push
push
mov
mov
and
jl
cmp
push
or
lods
or
fstpt
addr16
and
fs
jmp
ret
and
or
sbb
nop
sbb
divb
aaa
jne
add
jbe
push
shr
hlt
sbb
or
or
je
ret
mov
or
js
dec
hlt
pop
jne
ret
lea
orl
imul
pop
pop
mov
jg
iret
int3
adc
sarb
jae
lea
jmp
mov
cmp
cmp
jbe
loop
add
fs
dec
data16
push
clc
sub
int
pop
adc
stos
insb
jmp
jb
aam
sub
in
pop
mov
ret
mov
adc
add
jp
or
inc
fs
in
push
testl
mov
add
pop
call
call
mov
sbb
jmp
cmpsb
cli
or
push
lock
andl
mov
je
push
jno
push
ret
loope
rol
int3
and
cs
pusha
sub
mov
jns
negl
mov
jae
dec
pop
add
jmp
in
inc
mov
pusha
jb
adc
push
add
cwtl
fcomps
ret
into
jnp
sbb
les
mov
dec
test
add
or
push
jo
sbb
cmp
mov
xor
mov
imul
and
xchg
adc
bound
ffreep
sub
mov
mov
test
ret
xor
loopne
mov
sbb
sub
loopne
sbb
pop
hlt
add
inc
stc
push
je
jo
fdivrl
loopne
xchg
loopne
cwtl
js
leave
mov
sub
sbb
test
mov
mov
jae
push
xchg
jmp
sbb
sub
addl
sbb
ja
pusha
mov
adcl
mov
fwait
in
sub
cmp
fwait
or
xchg
push
add
or
mov
in
faddl
sbb
or
sbb
add
push
xchg
push
int3
cmp
or
lock
mov
xor
adc
mov
inc
lcall
or
add
jne
dec
rol
daa
dec
xor
push
sub
or
aam
stos
inc
lret
ja
sbb
inc
mov
lods
sbb
adc
lea
xchg
xor
lods
sub
sbbb
roll
shrl
inc
fs
push
std
or
cmp
stos
pop
clc
xor
inc
adc
add
lret
or
mov
orb
jnp
cmp
cmc
xchg
cli
sbb
xor
adc
sbb
cmp
push
add
insl
xchg
orb
dec
dec
dec
clc
jne
mov
fnstenv
push
push
test
cmp
dec
or
add
mov
sub
jne
push
pop
inc
stos
es
and
and
lahf
inc
sub
or
clc
hlt
hlt
negb
scas
jns
or
adc
add
into
pop
mov
fiaddl
lea
add
stos
rolb
fxtract
jne
mov
js
fistl
inc
or
cld
loopne
fnstenv
mov
shrl
out
xor
repz
add
nop
data16
jb
fcmovbe
cld
clc
pushl
cmp
mov
inc
push
mov
jmp
xchg
test
popa
adc
orl
data16
or
xor
sbb
xchg
pop
add
mov
push
mov
xor
pop
and
je
mov
cmpsl
pop
push
or
fs
push
mov
inc
cmp
mov
lods
adc
lods
imul
pusha
int3
and
lds
enter
mov
dec
add
in
sbb
daa
fwait
inc
lea
in
adc
aam
cmp
push
adc
subl
cmp
movb
lea
cmpsl
jge
jbe
push
cmp
adc
adc
add
jbe
jbe
push
xchg
cmp
inc
xor
xchg
stos
jne
lea
cmp
dec
fstps
sub
imul
push
jne
sub
das
push
jmp
cmp
lea
jo
in
push
and
lret
xor
pop
test
push
cs
jnp
sbb
stos
xchg
in
adc
lret
add
scas
in
lods
add
js
push
cmpsl
lahf
add
mov
int3
dec
cltd
bound
add
cmp
xchg
pop
add
mov
adc
ficoms
movzbl
or
cmpsl
mov
js
push
je
push
pop
adc
or
leave
movsl
sub
cmp
fimuls
add
and
cmp
mov
aam
dec
js
pop
push
jns
stos
mov
mov
not
and
shll
dec
loope
dec
dec
iret
into
into
cltd
mov
adc
lret
shrb
push
shlb
pop
lock
and
ljmp
push
push
or
sbb
dec
data16
pop
push
mov
add
mov
mov
iret
and
call
add
seta
mov
shrl
loope
sbb
jo
jp
pop
push
and
xchg
and
inc
test
push
adc
cmc
imul
mov
mov
shlb
cmp
cmp
mov
push
inc
sbb
test
sarl
cmpb
fmuls
lods
je
test
adc
addb
mov
jmp
fdivrl
mov
adc
mov
mov
mov
cmpsl
push
or
or
mov
sub
das
push
push
xchg
xchg
nop
pop
cltd
mov
lock
dec
jp
mov
and
cmpsb
or
xorl
add
add
lock
into
jmp
mov
mov
xchg
fiadds
cmp
xchg
sbb
inc
cmp
mov
jmp
je
xchg
xchg
ljmp
cmp
xor
sub
push
daa
andb
push
xlat
clc
and
jle
lret
sbb
cmp
subl
test
jo
imul
pop
add
sbb
add
loopne
and
adc
inc
fistpll
xchg
pop
lock
add
push
mov
or
dec
test
inc
test
orl
jne
fs
les
xchg
fs
ja
sahf
lods
pop
sub
sbb
sub
pop
nop
jae
push
add
or
sbb
mov
sub
es
add
imul
insb
pop
push
cmp
sbb
jl
fiadds
push
sub
ret
add
jmp
pop
dec
ja
mov
xchg
push
iret
rol
push
cld
jmp
xor
jb
ljmp
dec
lcall
mov
pop
inc
stos
sbb
sbb
adc
mov
lds
add
adc
ret
jbe
sarb
ljmp
call
cmp
sbb
adc
lods
fnstenv
jne
in
in
pop
mov
add
jmp
clc
mov
sbb
and
je
mov
ret
mov
pop
inc
jl
inc
stos
addr16
bound
sub
out
popl
or
rolb
add
clc
jno
lods
loopne
push
repnz
mov
xchg
or
add
icebp
or
repz
sbb
push
cmpsl
and
popa
cmp
jns
sub
je
sti
and
add
and
or
push
cmp
clc
inc
inc
dec
in
xor
lea
cwtl
mov
les
popf
rol
test
sbb
int
jmp
fcmovu
and
jb
lods
dec
sti
loope
jne
dec
fdivrl
out
or
push
pushl
ret
adc
and
cltd
ljmp
or
or
jecxz
dec
adcl
test
sbb
and
rorl
push
mov
sarl
jle
cmp
int3
in
test
sti
mov
xor
test
jp
aam
popf
xor
push
xchg
jo
and
mov
rcll
faddp
gs
xchg
mov
loope
lcall
xchg
mov
pop
jnp
roll
int
dec
add
mov
mov
and
xchg
dec
xlat
clc
inc
call
iret
xchg
cmp
add
add
cltd
sub
inc
mov
xor
sub
cmp
data16
lods
add
xor
jbe
xor
adc
push
lods
outsb
pop
fisubrs
js
lea
sub
das
cmc
sub
push
ret
push
add
aaa
inc
sbb
mov
popa
movb
inc
cmpsb
and
imul
lcall
add
xchg
mov
cmpsl
mov
jmp
mov
lea
inc
dec
int3
cmp
jae
sub
xchg
loopne
adc
pop
imul
cs
adc
ljmp
iret
mov
cmc
xchg
rorb
fstpt
xor
enter
cmp
adc
push
mov
sti
daa
test
inc
inc
mov
xor
sub
fdivl
jo
sti
push
xchg
pop
mov
mov
or
jg
push
add
xchg
jmp
jle
sub
dec
dec
mov
int3
mov
mov
mov
add
add
cs
stc
call
cld
pop
insl
enter
popa
scas
sub
lcall
cmp
inc
es
add
add
xor
popf
xor
loopne
inc
dec
test
push
push
xorl
xchg
lock
mov
jo
inc
mov
lea
loop
insl
dec
push
sbb
xor
addr16
and
repz
adc
cmp
imul
icebp
jle
cmp
xchg
or
mov
ret
mov
sub
sbb
in
dec
sub
xchg
or
jb
out
jbe
cwtl
sub
dec
jmp
scas
or
or
push
pop
pushl
jmp
add
adc
dec
pop
cmpb
cmp
dec
fsub
push
rorb
hlt
fcoml
lods
movsl
or
push
fdivp
mov
push
out
mov
pop
inc
push
push
mov
mov
jg
orl
or
add
outsl
ja
ret
push
jae
lea
push
sub
dec
cli
mov
sbb
jmp
xchg
stos
clc
fimuls
or
dec
pop
ret
nop
fnstsw
xchg
test
rolb
pushf
or
adc
dec
clc
daa
inc
sbb
or
loope
aad
leave
push
sarb
cmp
push
cmp
jae
inc
jmp
push
lea
or
mov
xchg
jge
adc
jle
pop
out
test
add
mov
jnp
fcom
sub
mov
ja
push
add
add
mov
push
ror
out
lods
ja
int
cmp
and
add
push
mov
push
adc
xor
sbb
daa
cmp
jl
or
adc
es
pop
fisttpl
mov
fsubrp
add
lds
push
push
lret
sahf
mov
adc
jmp
shrb
mov
mov
call
adc
pop
pop
leave
push
pop
sbb
or
add
sbb
or
xchg
add
std
arpl
pop
int3
fwait
inc
or
xchg
inc
xchg
xchg
or
cmp
or
je
lods
std
pushl
push
add
je
mov
fcomip
add
adc
ja
cmpb
add
cmpsb
pop
push
push
or
or
xor
sbb
adcb
inc
push
mov
cmp
jb
inc
jno
shll
cmpb
fadds
cli
movups
adc
jne
scas
push
push
cmp
sub
push
inc
or
add
es
icebp
or
mov
andb
add
fisubrs
mov
jmp
mov
adc
shlb
lea
cli
ja
cmpb
mov
aas
ret
push
mov
or
push
inc
pop
aas
and
cmpl
sub
fiaddl
mov
inc
xorl
or
push
xchg
push
loopne
popa
mov
cmpsb
imul
fsubl
scas
push
push
mov
ds
mov
adc
push
add
insb
push
sub
loope
cli
xor
jle
add
pushf
mov
mov
jns
popa
push
ds
push
repz
add
fwait
test
jecxz
jge
aad
outsl
push
jns
and
mov
cs
sub
cmp
and
and
ja
insl
jno
jg
push
loopne
jmp
mov
shl
dec
cmp
lea
mov
jl
mov
mov
mov
fisubs
jns
mov
repz
mov
ret
jne
jmp
bound
js
adc
gs
jbe
add
test
pop
out
cmp
mov
xlat
add
psubusb
data16
adc
xor
sub
inc
sbb
pop
and
cmp
test
shll
sbb
fstl
dec
push
sub
insb
mov
sub
xchg
adc
gs
add
addl
xchg
ss
clc
es
pop
add
adc
inc
inc
fs
movsl
or
pop
add
aas
cmp
push
mov
test
mov
jae
or
les
mov
pop
lds
rclb
inc
sbb
pop
adc
mov
pusha
in
jecxz
and
hlt
sbbb
pop
inc
fadds
pusha
lock
jge
ret
lods
pusha
cld
or
test
sub
and
adc
push
or
add
add
add
sbb
repnz
jmp
rclb
mov
fisttpll
adc
aas
xor
push
jg
or
test
jb
xor
push
adc
lock
hlt
jne
and
dec
into
lods
adc
or
or
aam
pop
test
mov
adc
nop
pop
leave
sbb
push
js
jle
sbb
in
arpl
jp
push
jo
or
or
mov
popa
and
pop
ds
pop
add
lds
jl
iret
lret
mov
enter
pop
sarb
les
mov
addl
gs
mov
lods
in
push
out
int3
enter
sbb
out
mov
popf
pop
cmpsb
cmp
movsb
add
xchg
inc
fiaddl
mov
or
jle
and
in
orl
cmp
xor
lock
stos
push
movsl
into
call
xchg
cmp
and
dec
or
push
cs
adc
push
mov
push
or
add
stos
mov
ficoms
test
cmovbe
mov
xor
add
pop
sub
insb
nop
out
and
push
jns
es
ss
ds
xor
push
xchg
push
pop
sbb
jno
sub
dec
and
sub
mov
or
ds
bound
rolb
inc
ret
xor
dec
mov
pusha
xchg
and
ja
loopne
inc
mov
or
enter
sbb
cli
test
pushf
cwtl
push
les
mov
cmp
pop
ret
aaa
ret
push
push
rcrl
std
push
stc
xor
jae
or
sbb
ret
jo
je
jle
pop
sub
mov
pop
rolb
insb
mov
aad
adc
and
push
sub
jg
test
jns
scas
dec
cmp
int
das
fcmovne
outsb
mov
fsubr
pop
push
js
cs
enter
sub
mov
rorb
arpl
fmuls
pop
jmp
or
dec
repnz
push
xor
xor
cmc
push
ss
sbb
ret
push
push
inc
adc
pop
push
mov
ret
addb
mov
hlt
hlt
call
add
inc
dec
loopne
push
mov
call
test
fwait
pop
or
ss
add
and
sub
fisubs
mov
lock
add
addl
mov
outsl
call
push
jb
lret
es
adc
scas
les
lock
mov
mov
jp
add
fcoml
loopne
inc
sti
dec
les
es
sub
xor
nop
sbb
mov
inc
sbb
mov
cmp
popf
int3
push
dec
clc
or
and
xor
jno
rclb
iret
into
or
jae
js
insl
sbb
inc
xchg
cmp
mov
jle
cmc
rorl
pusha
into
nop
rorl
shll
mov
add
sbb
xor
sbb
and
push
sbbb
jbe
push
pop
test
iret
bound
sbb
inc
and
inc
add
and
test
xchg
pop
cmp
adc
insb
aaa
je
fnstcw
dec
xor
in
std
mov
ja
adc
push
or
mov
cwtl
nop
xchg
mov
lods
mov
adc
call
inc
pop
pop
clc
mov
imul
jbe
lods
cltd
dec
out
sub
in
adc
and
adc
iret
enter
fiadds
repz
cmp
mov
mov
je
cmpsl
and
call
mov
pop
adcl
mov
leave
inc
dec
test
insl
loope
pop
fdivrs
push
std
stos
mov
test
adc
mov
mov
inc
movsb
sub
andl
and
in
btc
lods
mov
push
mov
pop
test
push
sbb
mov
sbb
and
jbe
adc
push
jns
adcb
sbb
loopne
pop
arpl
mov
xchg
daa
push
lcall
movb
in
dec
lret
in
js
cmp
adc
scas
out
dec
cld
sub
ret
pop
loope
sub
xor
pop
dec
fildl
add
mov
or
or
repz
adc
addr16
je
add
aas
and
dec
mov
into
rorb
jae
sub
lret
mov
aad
push
sbb
sbb
push
push
mov
add
sub
or
flds
cld
cs
ret
push
cmp
loop
push
sub
lods
inc
pop
andb
pop
cwtl
dec
push
rol
in
sub
ja
dec
cwtl
lods
movsb
loope
lock
adc
push
sub
add
loopne
sbb
imul
movsb
and
adcb
clc
xorb
pop
lods
push
inc
test
and
mov
or
xchg
clc
push
call
cmp
je
mov
or
sarl
test
jl
test
push
aaa
xlat
ljmp
push
mov
add
add
pop
push
into
or
test
mov
clc
inc
cmp
arpl
ret
outsl
xchg
jne
xor
mov
mov
loope
mov
je
loope
pusha
or
jnp
pop
pop
rorb
inc
inc
push
aas
xchg
xchg
pop
dec
cmpl
cmp
mov
jge
push
add
in
mov
cmp
call
add
or
push
xchg
in
xchg
pop
add
push
adc
xchg
enter
testb
jmp
aam
shll
fimuls
aas
jne
sbb
adc
jmp
sahf
adc
stc
dec
pop
add
xchg
push
mov
mov
aam
lds
lds
pop
mov
dec
cmp
pop
mov
mov
add
and
in
lret
mov
into
stos
xchg
popa
ja
add
aaa
cmp
lods
xor
loope
loopne
shl
sbb
lods
sbb
lock
pop
or
adc
or
fmuls
dec
mov
jge
into
je
nop
mov
and
mov
push
and
ja
es
jne
push
push
test
loopne
loopne
dec
dec
sbb
test
in
sbb
pop
mov
das
aad
and
add
aam
push
xchg
je
add
jb
pop
cmpsl
dec
in
mov
ljmp
push
call
inc
dec
inc
bound
sub
mov
filds
push
cmp
jb
mov
mov
add
cs
or
inc
add
sub
cmp
int3
push
cmp
stos
add
ja
sub
mov
cmp
cmp
stos
dec
inc
add
rolb
push
hlt
inc
add
mov
pop
mov
mov
sub
idiv
ss
test
jle
insl
shrb
add
imul
mov
jl
ret
je
mov
push
add
pop
ret
dec
jo
adc
jmp
mov
and
push
cwtl
push
aam
sbb
lock
mov
movsb
adc
mov
sbb
into
jnp
mov
sbb
xor
test
sbb
cwtl
fmuls
sbb
std
test
repnz
mov
add
and
icebp
shlb
je
pop
insb
aaa
enter
incl
adc
xor
cmp
jne
es
lea
push
in
call
cwtl
mov
add
add
push
gs
jo
push
aaa
or
add
cmp
stos
xorl
ja
jnp
mov
leave
pop
mov
sbb
test
fsubrl
orb
adc
jae
js
out
movsb
cltd
or
popf
push
push
js
ret
stos
ja
lret
mov
or
es
mov
in
fdiv
and
mov
mov
into
push
js
jb
add
pop
add
push
mov
cmp
push
sub
mov
aaa
jne
and
mov
arpl
in
jecxz
jmp
jnp
xchg
loopne
enter
sub
iret
loope
arpl
push
fildll
test
pop
xchg
or
test
pop
cmp
sbb
sbb
xor
out
test
call
push
pop
orl
int3
aas
daa
add
fcompl
clc
shll
and
sbb
es
adc
pop
aad
cltd
jg
pushf
cld
pop
pop
xchg
pop
rcrb
inc
adc
xchg
push
sbb
loopne
and
arpl
push
inc
sahf
ds
jle
sti
es
xor
jb
jmp
test
push
xchg
call
mov
fisttpl
adc
ficomps
cs
stc
leave
jb
rcr
fstps
in
shlb
subl
mov
in
xor
icebp
and
mov
movsb
hlt
mov
or
imul
push
aad
adc
xchg
lret
adc
sbb
sub
xchg
and
test
or
cmp
cmp
xchg
lret
inc
or
or
dec
push
fs
adc
push
pop
xchg
out
adc
idivl
mov
pop
mov
ret
jl
mov
xor
and
jbe
jmp
lods
dec
mov
or
sahf
fsubrs
movsl
ja
lcall
pop
sar
fidivrs
movb
sbb
sahf
loopne
popa
add
and
pop
lcall
push
sbbl
incb
sbb
stc
nop
mov
popf
pop
mov
sbb
dec
dec
push
fs
adc
mov
enter
add
adc
andb
sti
jnp
jo
mov
jg
xchg
enter
cmp
jb
and
xor
jb
and
and
insb
sbbl
or
adc
lock
push
lea
xchg
loope
cmp
push
xchg
mov
xchg
fldl
fnstsw
popl
dec
push
cmpb
and
test
xchg
sbb
test
cmp
or
sub
mov
dec
int
mov
ret
dec
dec
adc
and
inc
xchg
insb
lods
jne
lahf
sbb
adc
sbb
lods
cld
sbbb
adc
andl
pop
addb
out
xor
and
nop
push
dec
and
inc
mov
or
adc
imul
adc
nop
adc
add
or
jno
sbbl
xor
sbb
push
clc
fwait
mov
sbb
cmp
ja
inc
sub
pop
push
push
pushl
push
inc
sbb
or
add
loopne
pop
cs
push
or
clc
scas
inc
mov
push
pop
push
jge
add
mov
loopne
inc
or
jmp
lea
insl
add
mov
mov
or
add
jo
jmp
xchg
add
inc
popf
mov
add
in
shll
fnstsw
adc
jb
test
add
xchg
or
jb
fcoml
or
ljmp
mov
inc
push
or
adc
in
fisttps
mov
push
xor
aaa
add
mov
dec
js
cwtl
adc
jle
repnz
mov
and
je
cmpsl
inc
xor
adcb
push
outsb
sbb
sub
mov
mov
sbb
push
jg
out
in
shrb
loop
or
sbb
in
inc
loop
sub
add
fmull
cmp
adc
loop
add
add
sub
pop
add
mov
rcrb
push
mov
shlb
icebp
adc
lock
aaa
pop
int3
testl
pop
aam
xor
inc
dec
xor
add
addb
lock
xorb
mov
xchg
sub
adc
push
push
out
cli
mov
push
add
lcall
mov
inc
push
or
iret
sub
icebp
loop
cmp
sub
call
gs
xor
cltd
sub
stos
insb
leave
sub
sub
xchg
stc
mov
inc
adc
sti
clc
pop
pusha
mov
stos
fwait
lea
and
jmp
jp
mov
inc
mov
pop
ljmp
adc
das
cmp
dec
push
or
mov
ja
jg
mov
shl
add
sbb
clc
mov
hlt
outsl
pop
jne
cmp
jae
push
imul
jmp
mov
add
xor
xchg
mov
sbb
add
push
pop
mov
shl
int3
sbb
inc
jns
push
push
leave
int
mov
lea
add
lods
sbb
inc
rcl
sbb
mov
ja
insb
add
dec
insl
mov
pop
dec
add
insl
push
add
je
add
loopne
inc
pop
pop
adc
inc
and
add
lods
test
pop
jb
or
ss
or
fs
jge
adc
inc
dec
fwait
scas
inc
pop
lea
popf
dec
cli
inc
or
adc
jo
xchg
xor
xor
ret
xchg
jne
or
subl
sub
and
adc
or
test
ffree
mov
and
push
pop
shrb
add
add
imul
out
pop
and
jge
outsl
mov
inc
xchg
out
adc
pop
lock
clc
xor
out
inc
adc
and
add
lea
jmp
insl
xor
mov
movsl
outsb
adc
cmpsb
mov
repnz
jb
xor
or
cmpsb
pop
xor
sub
jne
ja
sbb
push
or
and
fmul
in
in
jp
push
addl
push
push
mov
cwtl
push
stc
xchg
add
test
ret
lods
ret
and
imul
mov
fsubrl
hlt
icebp
push
stos
xor
mov
push
scas
lcall
pop
mov
sbb
into
and
adc
les
push
or
gs
pop
idivb
push
loope
ret
sbb
mov
hlt
cmpxchg
stc
xchg
cmpb
xchg
push
aas
sub
xchg
xor
jne
push
rorb
rclb
adc
ljmp
xor
jle
sub
loopne
aam
or
pop
int3
or
xor
rolb
ljmp
dec
push
or
sub
dec
cmp
xchg
js
adc
das
mov
and
pop
xor
and
mov
pop
repz
mov
rcll
test
pop
loope
cli
push
mov
mov
stc
xor
lods
or
bound
add
es
leave
dec
pop
inc
and
in
outsl
scas
mov
xchg
add
orl
or
xchg
fprem
dec
or
in
mov
add
scas
in
cld
dec
fcompl
push
push
inc
jne
or
leave
mov
enter
cmp
js
push
mov
fildl
jp
mov
nop
nop
and
jb
push
jae
cmc
aad
rcll
and
and
xchg
imul
test
mov
jg
lret
fadds
addl
cmp
pop
out
or
jp
dec
add
mov
ss
mov
cmpl
add
scas
inc
adc
std
dec
adc
push
and
inc
sub
clc
nop
add
fisubrs
aam
daa
loopne
mov
inc
and
adc
inc
leave
add
xlat
aam
rorb
sbb
loope
inc
push
inc
mov
mov
mov
push
jns
out
mov
add
daa
sbb
jo
ds
or
test
stc
cld
inc
xchg
pop
xchg
nop
and
rorb
xor
in
xor
push
push
xchg
imul
push
cmp
xlat
cmp
inc
gs
push
adc
mov
sub
add
sbb
mov
xor
orl
sahf
loopne
mov
out
and
test
out
or
ret
mov
pusha
popa
call
rolb
insl
adc
mov
loope
cmpsb
pusha
add
enter
sbb
mov
mov
call
or
xchg
addb
rol
push
add
mov
push
jae
cld
popa
and
jbe
xorb
jmp
repnz
mov
in
lock
push
rclb
lds
push
push
inc
lcall
movsb
xchg
inc
push
movsb
or
xor
add
or
stos
mov
pusha
sbb
jae
ret
sbb
pop
jl
or
sahf
es
leave
ret
shll
out
mov
sbb
sti
jp
pop
cltd
notl
dec
repz
iret
mov
push
icebp
fs
inc
mov
test
or
push
add
mov
add
mov
out
or
push
or
jne
hlt
lea
sbb
mov
arpl
mov
add
xor
push
add
jp
push
push
cmp
cmp
lret
mov
ljmp
test
mov
jecxz
nop
enter
xor
or
push
cltd
mov
jne
mov
jl
imul
lea
sub
in
push
jb
in
clc
aad
add
ret
shlb
push
in
int3
std
cmp
mov
jmp
mov
popf
sub
lods
sarb
or
push
movsb
loopne
ficoml
and
rcr
outsb
call
push
jo
rorb
rcrb
pop
popa
inc
cmp
and
xor
loopne
push
imul
cltd
fdiv
add
es
push
mov
cld
add
movsl
or
pop
bound
mov
mov
jle
pop
js
add
test
xor
jnp
pop
shll
into
jmp
in
pusha
mov
and
inc
sbb
bound
shr
adc
or
or
pop
xor
or
mov
jg
pop
sbb
or
pop
arpl
mov
or
mov
pop
mov
adc
mov
or
jmp
mov
ret
xor
jg
add
xor
dec
push
je
dec
jne
rcl
adc
or
clc
adc
and
and
inc
lahf
jb
lea
scas
xor
cmc
nop
fcomi
inc
idivl
mov
push
and
sbbb
and
push
push
jmp
cmp
pop
enter
mov
lea
sbb
js
xchg
xchg
xor
dec
dec
jg
xchg
mov
cmp
push
gs
pop
or
ret
mov
add
lock
cmp
xchg
cld
add
int3
outsb
mov
push
sub
jbe
or
adc
sub
adc
sub
movsb
jo
sbb
lods
lods
movsl
add
or
iret
sub
test
ja
push
xor
shr
cltd
pop
sub
xor
dec
enter
or
inc
or
inc
mov
pop
push
loop
sbb
mov
fsubs
add
mov
lcall
enter
inc
imul
push
push
out
fsub
push
mov
and
sbb
out
and
scas
pop
inc
cld
sub
cli
push
mov
push
lea
adc
jb
and
into
stc
dec
pusha
popa
pop
add
enter
xchg
xor
popf
inc
push
and
shrl
cmp
je
mov
sbb
or
iret
lods
xchg
inc
es
push
dec
inc
pop
stc
loopne
xor
fistl
inc
and
icebp
cld
pushf
inc
sbb
iret
cltd
fwait
jne
add
inc
popa
ss
jno
pop
dec
and
sti
dec
sub
and
and
add
xor
shll
cmp
push
push
sub
xchg
pop
pop
add
xchg
cmp
pop
pop
push
xor
sbb
mov
jl
enter
cmp
test
imul
movsb
fwait
and
and
add
mov
sub
sub
inc
movb
xchg
data16
clc
mov
mov
je
inc
test
test
lds
fs
mov
fisttpll
add
xor
or
sub
add
add
mov
out
push
jp
inc
lret
add
sbb
and
add
lret
mov
bound
into
fistps
enter
cmpb
nop
stos
pusha
jb
ss
int
cltd
push
adc
jge
test
pop
aas
sbb
movsb
sbb
pop
and
fadds
cmp
adc
adc
incl
push
adc
xor
dec
xor
mov
bound
repz
movsb
shrb
xor
mov
cmpsl
mov
mov
lahf
mov
cmc
into
cmpl
xor
jecxz
jmp
add
insb
mov
cmp
es
inc
mov
or
jge
xorb
lea
xchg
xchg
mov
pop
mov
sbb
shrl
popa
jmp
int3
sub
cmp
ret
rolb
add
imul
pop
and
pop
sbbl
int3
notl
pop
das
mov
or
fiadds
ss
loopne
xor
xor
add
inc
stos
xchg
jle,pt
fdivp
xorl
jmp
inc
cmp
imul
hlt
push
in
inc
adc
add
addb
mov
push
inc
add
cmpb
fmull
or
in
inc
adc
pop
jmp
push
cwtl
gs
xor
insl
popa
cwtl
stos
inc
xchg
fcompl
mov
js
jne
mov
scas
jge
pop
loopne
inc
cmp
inc
sbb
mov
xchg
add
dec
lock
add
mov
mov
jmp
ljmp
dec
mov
insb
je
inc
rolb
lahf
push
and
push
cwtl
pop
jl
lea
sbb
xor
sbb
pop
push
or
daa
or
decl
xchg
jp
lods
outsb
xchg
enter
mov
sbb
out
mov
pop
popa
pushf
adc
rclb
cmp
pop
frstor
insb
clc
lds
bound
jle
pop
shl
add
rcrb
or
rolb
pop
test
sub
jne
cmpl
mov
pop
bound
lds
shll
push
lods
add
mov
mov
sbb
cmp
shrb
adc
ja
in
xchg
lea
int
pop
mov
mov
adc
jns
inc
out
and
repnz
enter
adc
into
fimuls
movsb
push
push
sbb
aaa
fidivrl
fisubs
add
pusha
pop
xchg
rclb
std
pushl
inc
sub
pop
in
in
push
xor
cwtl
pop
push
and
mov
pop
sub
sub
test
add
adc
test
inc
inc
add
pushf
cmp
movsb
mov
add
lods
aam
pop
xor
cld
inc
fmuls
addb
push
rcll
mov
out
adc
adc
mov
ja
arpl
sahf
int
push
adc
or
add
pop
jne
and
xor
add
das
inc
sbb
and
cld
cld
pop
push
fbld
insl
cmp
nop
mov
sbb
xor
or
jle
sub
fsubr
loope
push
push
mov
iret
adc
and
jecxz
sbb
sbb
push
enter
mov
mov
dec
mov
lods
es
mov
mov
icebp
and
in
xchg
lea
stc
mov
cmpsl
inc
ss
aad
mov
push
in
dec
fcoms
outsl
cmp
inc
push
sbb
pop
inc
test
scas
enter
sbb
ss
push
pop
sbb
jnp
mov
andl
add
rorl
xor
xchg
push
pop
sbb
addr16
xor
mov
sub
lea
pop
stc
ret
mov
adc
lret
js
inc
outsl
and
jae
mov
repnz
cmp
mov
les
mov
inc
dec
or
cwtl
mov
sbb
adc
pusha
pop
cli
inc
push
cvtps2pd
lea
fisttps
inc
mov
dec
push
push
sbbl
les
in
add
daa
daa
jae
test
stc
dec
in
push
cmp
jg
sbb
push
js
cmpb
and
cmpl
push
ja,pn
adc
sub
or
xchg
ds
iret
mov
mov
push
inc
xchg
negb
lds
add
and
leave
mov
aaa
push
add
or
pandn
or
jp
repnz
scas
pop
mov
add
ret
mov
sbb
arpl
or
roll
mov
inc
sti
push
sub
fs
mov
mov
push
or
xchg
mov
jp
xchg
mov
xor
xchg
dec
sub
xor
jbe
lret
or
cmp
cmp
add
xchg
lret
or
add
inc
sbb
adc
xchg
arpl
or
pop
dec
xchg
dec
sub
icebp
es
xchg
sbb
add
or
and
jl
sbb
icebp
sahf
or
fcoms
into
push
xor
nop
sub
jle
pop
mov
loopne
in
mov
pop
inc
sbb
push
aad
arpl
xor
stos
andb
mov
icebp
push
movsb
push
push
lods
mov
lods
andb
mov
push
sbb
rcrb
mov
and
add
cwtl
xchg
adc
and
and
pusha
int
clc
stos
sub
lea
dec
and
xchg
xor
jne
mov
lcall
add
pop
cmc
add
adc
dec
cmp
sub
in
outsb
adc
int3
imul
loop
mov
in
xchg
inc
add
lds
or
push
mov
cmpsl
add
call
sub
dec
dec
mov
jmp
jmp
inc
inc
pop
jo
adc
xor
sbb
add
fwait
xchg
pusha
test
sub
xchg
pop
repnz
daa
nop
add
add
out
xchg
cmp
movsb
jo
dec
or
sbb
xchg
loope
push
ja
sbb
jbe
movsb
mov
xlat
repz
dec
push
inc
mov
and
add
cmp
or
fld
mov
or
push
and
xor
aam
fcoml
movsl
mov
pop
js
jne
push
mov
mov
jl
xlat
push
cli
dec
and
jne
dec
add
cwtl
popa
push
ret
fcomps
sbb
dec
ficoms
icebp
enter
test
add
in
push
or
leave
repz
inc
add
or
shrb
fstl
mov
sub
lret
lds
sbb
nop
and
mov
mov
pop
xor
jecxz
lret
push
enter
push
sahf
out
fs
rclb
sub
fcomps
fidivrl
cltd
insl
loopne
sbb
in
call
sbb
push
jns
mov
adc
inc
dec
mov
push
sbb
mov
pop
mov
xchg
xor
push
mov
jbe
mov
pusha
ds
leave
aam
sbb
pushf
ret
adc
mov
mov
xchg
movsb
rorb
sbb
lahf
push
dec
pushl
or
or
jbe
pop
cwtl
push
sbb
cmp
movsb
mov
pop
adc
pop
push
lods
outsb
leave
rcrl
push
mov
ror
sbbb
pushf
sub
rol
add
xor
xor
dec
jnp
es
sbb
test
leave
mov
pop
push
inc
scas
jge
push
cs
pop
cmp
stos
and
xchg
or
inc
test
repnz
cmp
rcrb
mov
stos
dec
call
sub
jecxz
bound
cmp
cltd
nop
pop
pop
inc
sbb
mov
popa
pop
aas
outsl
pop
jmp
hlt
sbb
stos
add
movsb
js
push
mov
inc
cmp
fs
inc
and
loopne
add
lret
jmp
repz
adc
or
pop
sbb
add
sbb
pop
cmp
push
xor
and
jno
ret
dec
cmp
cmp
or
add
enter
les
les
aam
mov
lea
rcll
ret
clc
and
sub
fadd
outsl
mov
sub
sti
scas
jb
pop
jae,pn
sub
xchg
imul
xor
mov
lods
add
mov
push
mov
mov
sub
sub
sub
cmpsl
pop
in
loopne
mov
popf
andb
sbb
pop
sbb
sbb
and
insb
movsb
inc
mov
xor
leave
mov
cmp
push
xor
mov
add
pop
cmp
jl
sahf
add
fists
test
repnz
dec
pop
dec
xor
xor
push
sub
sub
lea
cmp
mov
stc
stos
sub
jbe
sub
movsl
cs
push
dec
add
fwait
sbb
sbb
pop
icebp
lock
shll
xchg
push
mov
enter
sbb
xor
jns
loopne
inc
ds
sbb
xor
shll
punpckhbw
mov
adc
sub
adc
sbb
ds
and
push
stos
inc
pop
rclb
jns
pop
jp
enter
arpl
dec
sbb
cs
jnp
iret
daa
or
push
pop
push
in
lahf
push
cmp
fimuls
fadd
sub
js
dec
pushf
inc
mov
cmpsb
subl
pop
pavgw
gs
out
mov
cmp
inc
xchg
and
push
in
addr16
mov
mov
and
mov
and
test
or
daa
leave
add
and
rolb
sbb
fldenv
inc
nop
sbb
add
aad
adc
cmpsb
les
adc
adc
popa
inc
loope
add
imul
inc
mov
xor
and
cs
fsubrl
fnstcw
addr16
cmc
fwait
inc
hlt
jle
cmpsb
movsb
adc
mov
rclb
mov
rorl
les
xchg
jo
rcrl
dec
jns
pop
in
push
push
jge
dec
inc
shll
test
inc
and
xor
inc
dec
aad
jge,pn
dec
cmpsb
jo
adc
cmp
sbb
outsb
stos
shll
int
pop
adcb
cmp
add
test
dec
xor
leave
shll
sub
mov
mov
xor
shrb
jae
mov
je
jns
sub
push
add
push
and
dec
inc
or
fwait
sbb
lcall
dec
insb
popa
dec
dec
push
lea
in
push
adc
add
nop
add
or
int3
jnp
inc
push
cmp
xchg
testb
xchg
movsb
iret
inc
cmp
push
jmp
icebp
test
pop
and
inc
in
das
rdpmc
sub
xlat
sbb
pop
push
test
xor
sub
push
xor
sub
fisubrs
xor
fwait
scas
aam
inc
xchg
mov
and
cmp
ret
jne
pavgw
adc
addb
cs
fs
add
push
push
inc
clc
pop
push
add
leave
pushl
aaa
pushl
call
in
sub
in
or
mov
xchg
into
xlat
cs
ss
adc
aad
sbb
push
push
lahf
aad
jne
pop
sub
ret
inc
inc
aaa
add
nop
outsb
and
gs
dec
cmpsl
xor
add
adc
inc
outsb
dec
mov
and
popf
shlb
es
or
or
mov
adc
dec
or
sbb
loop
mov
and
adc
adc
in
sbb
inc
xor
add
mov
fs
pop
mov
rol
dec
fsubl
push
lret
ud0
xor
push
pop
pushl
cmp
lock
xchg
pushl
aas
and
add
sbb
shlb
adc
outsl
in
push
dec
add
xor
pop
int
sbb
jns
jp
adc
movsl
loope
fs
adc
adc
xor
cmp
xor
and
dec
sub
inc
adc
inc
rdmsr
mov
inc
les
mov
push
push
rorl
mov
inc
xlat
shr
mov
add
subl
lahf
xchg
outsb
adcl
fdivr
or
jns
sbb
sbbb
pop
xchg
inc
push
fcompl
insl
mov
lods
jge
sbb
jl
inc
dec
sub
sbb
push
jb
insb
sbb
mov
adcl
jl
push
mov
adc
sub
incl
fsubr
adc
fcoms
cwtl
movsl
cmpsl
mov
xchg
jge
or
push
pop
inc
sub
sub
pop
xor
and
xor
inc
sub
sti
adc
adc
jns
xor
in
rorb
roll
fidivl
adc
xor
outsl
test
push
lock
add
gs
sbb
sti
mov
mov
inc
xor
imul
insb
in
jne
daa
sbb
pop
aad
xor
xor
or
inc
and
aaa
xor
inc
xor
shll
cmp
ja
sbb
rolb
xor
xor
xchg
jbe
mov
pop
sub
fs
xchg
les
mov
loop
std
cmp
xchg
sub
pop
pop
call
push
xchg
add
mov
pop
insl
fdivrs
cmp
movsl
lret
mov
sbb
add
nop
pop
das
lock
push
loopne
sbb
cmp
mov
sbb
sbbl
aad
sbb
xor
into
inc
subl
mov
lock
imul
push
and
pop
or
inc
push
mov
jae
sbbl
push
push
loope
bnd
push
fwait
mov
push
js
ja
mov
push
flds
jbe
push
xor
xchg
jnp
scas
les
cmpsl
pop
fs
pop
push
aad
push
mov
jg
cmpsb
inc
imul
sub
sbb
lcall
add
and
cli
jecxz
ret
xor
inc
mov
and
ficompl
dec
mov
daa
xor
xor
pop
inc
sbb
loop
xchg
pop
sub
sub
gs
scas
sub
shrb
inc
das
mov
sbb
push
pushf
add
inc
xor
int3
dec
mov
or
push
push
inc
xor
jb
and
movsl
and
loop
mov
cmp
cs
push
aas
adc
nop
add
sub
mov
das
lret
faddl
sub
mov
mov
mov
lcall
fidivrl
addr16
loopne
sahf
dec
pop
mov
jno
mov
mov
enter
out
dec
iret
js
pop
out
addr16
cmp
push
mov
daa
sbb
jmp
add
cmpsb
push
sub
fs
es
nop
dec
sub
push
rol
or
pop
push
mov
mov
and
das
popf
ret
rolb
push
cmp
dec
jbe
sub
sub
pop
movsl
maskmovq
divl
mov
je
cmpsl
mov
jle
add
push
in
test
int3
inc
and
in
push
data16
aam
mov
push
xchg
push
mov
or
shrl
outsb
rorl
test
lcall
test
cld
rorl
daa
and
mov
dec
sbb
arpl
std
mov
pop
inc
icebp
pop
lea
jo
dec
adc
aad
jg
mov
or
lret
mov
sub
data16
push
lea
ret
aam
xor
fs
outsb
int
dec
test
scas
and
sbb
rcll
mov
push
jae
and
dec
xchg
jp
aam
enter
imul
clc
movsl
lret
jle
dec
fs
cmp
mov
sbb
mov
aas
pop
mov
cmpsb
das
mov
lahf
or
in
jl
cmp
and
pop
add
add
dec
js
dec
loope
fsubl
js
fwait
aas
inc
scas
movsb
into
adc
and
xor
sub
cmp
sbb
pop
pop
mov
mov
fidivrs
cmpl
call
push
mov
inc
mov
or
roll
les
mov
pop
push
popa
incl
inc
jg
jmp
adc
add
mov
mov
je
fmull
jl
ss
pusha
aam
jo
xor
mov
jno
out
cmp
test
mov
inc
inc
fisubrs
imul
pusha
push
adc
inc
dec
or
add
push
in
lea
test
or
call
mov
pusha
mov
pop
sbb
adc
mov
or
je
in
adc
mov
pop
dec
or
test
lock
adc
cmp
or
inc
cmp
push
ss
push
xor
fisttpll
add
fsubrs
test
or
lods
jae
xchg
xchg
pop
fcmovnbe
cwtl
push
xchg
xchg
mov
jne
jns
lock
mov
pop
inc
xor
pushf
xor
test
push
leave
test
loopne
xor
test
insl
cmp
jo
bound
jle
and
dec
or
nop
ljmp
ret
lds
ja
std
and
je
add
dec
or
xor
pop
outsl
call
cmp
jo
or
dec
cmp
rcr
adc
fs
jmp
movsb
jp
cmp
mov
notl
es
inc
mov
inc
arpl
xor
and
movl
mov
adcl
dec
cmp
xor
sub
inc
push
inc
dec
dec
inc
cmc
mov
dec
movb
xor
push
sbb
in
jo
mov
add
add
jo
pop
sub
sbb
fstps
mov
inc
add
or
mov
and
and
sub
lock
or
or
sub
add
jmp
notb
fiadds
nop
pop
jo
cmp
jp
mov
test
fs
cltd
xor
cmpsb
fistpll
icebp
sub
mov
and
mov
inc
insb
inc
cmp
das
in
mov
and
mov
add
popl
inc
xor
xor
inc
and
movl
push
jno
push
push
push
mov
je
sti
xlat
mov
dec
insb
sub
push
sbb
in
pop
jo
sahf
fildl
and
aad
out
jecxz
push
mov
orl
dec
dec
or
sbb
jle
pushf
sub
add
and
mov
hlt
jge
lret
imul
pop
mov
sbb
xchg
xchg
test
sbb
and
mov
sbb
add
ljmp
je
jp
cmp
sbb
inc
jmp
mov
stos
inc
cmp
in
inc
push
mov
jmp
adc
or
das
test
cmp
iret
cwtl
push
push
addr16
sbb
cmp
pop
inc
outsl
pushl
js
push
mov
lods
add
add
pop
out
mov
roll
popl
pushf
insl
int
mov
and
add
add
add
dec
add
mov
cli
fnstenv
andb
stc
int3
rorb
fildl
daa
push
mov
adc
scas
add
push
pushf
mov
push
pop
fisttpl
or
inc
inc
push
sub
fs
ret
cmp
fdiv
xchg
jae
sbb
sub
or
jne
adc
mov
imul
and
or
or
or
push
inc
cmp
bswap
cltd
mov
imul
hlt
jne
push
fidivrs
jbe
push
filds
pop
pop
xstore-rng
cmpsl
add
cmp
push
sbb
push
cmpb
sbb
in
xor
xchg
mov
test
incl
out
rclb
pop
xchg
mov
ret
and
cwtl
test
add
sbb
adc
int3
adc
dec
out
xchg
and
sbbb
int3
adc
mov
test
in
ss
xchg
movsl
push
icebp
and
imul
inc
fs
push
mov
nop
add
add
jge
les
jne
cmp
add
rcrb
and
loopne
mov
jecxz
addb
sbb
mov
mov
or
es
push
add
incb
inc
je
cmpsl
sar
inc
sub
or
xor
xchg
fdivrl
nop
sub
dec
cld
shlb
sub
pop
rcll
icebp
mov
imul
in
and
dec
mov
inc
xchg
repz
inc
ds
clc
and
dec
add
ret
and
jns
adcb
ret
fcmovne
mov
movsl
dec
dec
xchg
adc
and
icebp
pop
and
es
adc
daa
jno
orb
push
push
pop
jb
fdivr
xor
and
xchg
fisttps
mov
clc
mov
addb
das
shlb
dec
int3
sub
sbb
cld
xchg
dec
inc
push
inc
es
sub
xchg
out
sub
hlt
in
or
sub
pusha
mov
mov
add
test
scas
aas
sbb
lods
loopne
inc
test
mov
inc
jo
inc
xor
sub
pop
inc
add
or
lods
sub
insl
je
add
jnp
push
hlt
movsb
out
or
flds
lcall
push
in
and
adc
add
inc
dec
jl
adc
dec
aaa
mov
addb
push
imull
flds
sub
push
dec
imul
inc
pop
sub
les
jmp
xchg
aaa
test
jp
sbb
lods
and
xor
aam
mov
imul
pop
fisttpl
xor
sub
dec
or
adc
push
ret
and
loop
mov
xchg
push
inc
xor
adc
fcomps
jle
add
lock
sub
scas
insb
push
insb
or
and
scas
out
jbe
sbb
mov
xor
push
xor
data16
xchg
inc
test
inc
ret
ret
mov
fnstenv
xor
and
js
movsl
inc
inc
push
sbb
mov
or
mov
add
mov
sarb
stos
movsb
or
arpl
add
push
ret
in
addl
mov
push
andl
adc
xchg
outsb
in
fmull
mov
jns
or
cmp
adc
test
enter
pusha
loopne
in
call
push
mov
lea
movsl
add
movsl
out
or
push
pop
cwtl
je
or
inc
xor
jp
pusha
xchg
mov
add
ret
les
hlt
pop
adc
sub
sbbl
test
daa
stos
sbb
sar
in
xchg
push
std
clc
push
add
jo
and
jmp
sbb
outsb
and
sbb
or
sub
test
imul
push
cmp
jne
cmc
mov
incb
andb
cmp
test
dec
push
mov
call
pop
jmp
or
ret
inc
inc
and
jo
add
pop
mov
outsl
and
push
xchg
stc
or
in
mov
jle
pop
or
push
cmp
jle
pushl
aam
add
xor
mov
or
push
push
mov
lea
sub
adc
addr16
cmc
sub
mov
xchg
pushl
mov
jo
cli
jmp
or
inc
inc
sub
sbb
cld
push
or
inc
movb
js
sbb
dec
mov
mov
adc
lcall
inc
mov
adc
jbe
and
sub
jbe
add
pushl
and
je
or
mov
cld
data16
jg
lcall
or
cmp
pusha
jb
adc
push
testb
pop
push
jo
or
jnp
in
add
xor
pushf
jecxz
or
mov
dec
push
popf
inc
test
jns
mov
push
subb
fisubrs
inc
cmp
mov
or
aas
jns
mov
mov
or
sub
pop
cwtl
inc
add
inc
cmp
imul
sbb
leave
stc
mov
push
push
leave
lock
xlat
or
adc
push
ljmp
fildl
push
lea
adc
add
sub
add
push
dec
push
or
and
les
int3
sahf
sbb
nop
jmp
pop
fistps
push
and
add
add
mov
xor
cli
cmp
and
in
dec
mov
and
mov
inc
jecxz
and
and
add
and
and
mov
js
sub
add
or
lahf
add
bound
push
add
cmp
xchg
dec
and
leave
adcb
adc
xor
test
xchg
add
dec
cmp
add
fistpl
jle
mov
dec
mov
sbb
stc
imul
std
arpl
and
fadds
sub
ret
add
dec
cmpb
xchg
in
push
mov
push
push
inc
xor
imul
push
gs
test
inc
cmp
and
ret
xor
aas
jecxz
lods
fsubs
fmul
test
enter
rclb
mov
rolb
xor
sub
cmc
call
das
mov
pop
mov
mov
popf
fsub
call
arpl
mov
xor
push
in
push
adc
enter
push
mov
loopne
cmp
subl
push
mov
xchg
adc
in
pop
or
lock
dec
mov
push
int3
pop
and
mov
inc
cmp
or
dec
add
push
mov
addl
adc
orb
lret
je
and
ss
loopne
or
daa
lcall
and
or
push
push
lods
test
xchg
push
cmp
mov
je
mov
or
sbb
test
scas
ficoml
pushf
and
pop
mov
sbb
and
sbb
add
ret
dec
or
lods
xchg
lock
insb
lds
daa
cmp
insl
mov
sub
inc
push
or
push
lods
mov
jle
lea
out
cmp
jbe
inc
mov
sub
xchg
loop
pop
mov
mov
or
aas
cs
lock
ss
dec
jno
mov
rclb
push
popa
inc
jnp
ficoml
and
fiaddl
loopne
mov
loop
in
or
dec
or
int
add
mov
repnz
mov
or
mov
dec
adc
mov
xor
push
js
mov
aad
sub
mov
lss
repnz
lock
stc
lret
repnz
mov
ret
or
and
sub
or
adc
and
enter
sbb
lock
or
push
imul
ret
mov
push
push
or
and
lea
xor
enter
cmc
sbb
ror
dec
and
inc
icebp
test
push
mov
dec
insb
ret
inc
loope
sbb
mov
inc
std
cmp
popa
jae
dec
mov
stc
mov
pop
and
pop
and
je
call
fisubrs
inc
jge
inc
shlb
mov
sbb
hlt
sub
pop
adc
cmp
mov
jmp
pop
jmp
push
mov
pop
insb
pop
cmp
adc
xchg
dec
pop
je
mov
push
cmp
or
dec
add
adc
pop
imul
stos
mov
testl
mov
cmpsl
dec
add
adc
push
or
adc
xor
popa
mov
xchg
enter
les
sub
sub
cmpsl
movsl
mov
into
imul
rorb
movsl
sbb
and
cmp
jmp
sbb
sbb
adc
inc
dec
setl
ficoms
cmp
lahf
mov
sub
and
lahf
lods
dec
sub
aam
jo
xchg
pop
in
dec
inc
add
push
sti
cmp
leave
mov
cwtl
mov
ja
pop
add
mov
pop
lods
push
ret
or
lock
push
aam
popa
xchg
stos
in
jl
adc
xor
sub
adc
and
pop
enter
call
sub
insb
pusha
and
shl
data16
sub
mov
sbb
outsl
or
cs
add
jmp
sbb
jns
sub
xor
inc
idiv
cld
fidivs
or
inc
divb
sub
push
fs
push
ljmp
fwait
dec
pop
cmpsb
mov
pop
mov
sbb
lds
mov
push
mov
dec
cwtl
xor
push
mov
loopne
push
jge
mov
pop
andl
xchg
push
sbbl
add
push
push
xor
sbb
adc
dec
adc
pop
lea
jns
pop
cmp
adc
sbb
or
inc
test
jns
loope
in
sbb
rcrb
sarl
push
fists
js
sub
add
fwait
iret
mov
out
into
push
sbb
and
sub
pop
popf
outsl
rcrb
pop
add
sar
pusha
sub
sub
xor
add
into
subb
inc
icebp
inc
push
dec
adc
xchg
mov
mov
ret
fs
out
or
push
lea
stos
popa
pop
dec
jle
pop
dec
loope
inc
adc
add
int
push
and
mov
or
and
or
fsubrs
push
mov
ficoml
pop
aam
push
or
jne
std
mov
cmp
push
in
movb
push
scas
into
lds
scas
test
fiadds
or
daa
add
xor
rol
sbb
loope
cmpl
xchg
lock
fs
xchg
in
pop
mov
pusha
xchg
push
jns
xchg
mov
mov
mov
mov
or
fsubr
cmp
xchg
mov
decb
ss
mov
rorb
add
cmpb
orb
aaa
jne
mov
fdivl
orl
nop
lcall
sbb
ljmp
shl
mov
inc
inc
dec
insb
dec
jle
lea
addl
fmuls
push
cs
or
clc
movb
push
sub
sub
cmp
pop
jl
pop
je
mov
mov
add
sub
sbb
pop
dec
inc
fdivl
mov
ficoml
cmp
cs
mov
std
mov
add
aam
cmp
sub
leave
test
pop
dec
mov
pop
pop
or
movsb
jae
sub
add
int3
adc
or
stos
push
sti
or
cmpl
iret
pop
mov
test
test
sub
lcall
push
data16
dec
or
add
mov
inc
jp
and
or
jmp
dec
adc
sarb
jno
jge
pop
stc
inc
adc
stos
gs
push
add
pop
test
das
mov
push
dec
add
pop
je
outsb
ljmp
adc
cmp
jne
xor
lods
inc
mov
inc
lret
out
stos
push
mov
js
xor
sahf
fstpt
add
loop
adc
cmp
pop
adc
and
and
push
adc
or
scas
inc
insl
push
push
fbstp
adc
iret
shl
push
lods
adc
and
sub
and
mov
and
jmp
jmp
adc
and
cmp
cwtl
test
push
add
test
adc
and
outsl
mov
sbb
xlat
pusha
pop
mov
adc
mov
mov
mov
jo
and
hlt
inc
and
cmpl
jne
shll
pop
frstor
xchg
test
sub
fs
jmp
test
test
leave
pop
inc
ret
ss
sbb
repnz
or
adc
mov
adc
and
stos
dec
cmp
or
das
mov
inc
push
movsl
enter
or
xor
add
push
in
call
insl
sbb
mov
and
add
sbb
xchg
fadds
loop
jle
inc
adc
cli
fldt
cmp
jp
sbb
sbb
xchg
aad
idiv
adc
js
cmp
je
cmp
nop
sti
add
xor
sub
shrb
cmpl
jne
or
xor
cmp
dec
adc
fcoms
push
add
push
or
popa
pushf
lcall
rcll
sbb
mov
jg
jl
cmp
sub
xchg
test
addl
movb
hlt
mov
aaa
insl
fsubr
mov
fmull
mov
mov
jmp
mov
inc
popa
call
mov
jmp
int
xchg
and
add
push
lea
iret
nop
ret
adc
sub
and
es
sahf
or
inc
in
mov
mov
push
adc
jb
or
loop
mov
xchg
sbb
add
arpl
jb
pop
push
jecxz
je
clc
push
or
sub
and
xor
aas
mov
push
jecxz
jmp
inc
or
xchg
sahf
xor
push
test
xchg
sub
and
into
cmpsl
inc
jl
or
xchg
ret
into
out
roll
cmp
push
cmovl
push
pop
pop
pop
int3
push
imul
sbb
movsb
fiadds
jne
cmp
pop
or
out
xlat
jne
mov
mov
mov
fildll
dec
lahf
int3
test
jl
adc
sbb
movsb
cmp
incl
orl
movzwl
test
je
fiadds
cmp
mov
lret
or
enter
ss
and
pop
push
mov
lcall
inc
adc
das
enter
es
js
ficoml
or
or
inc
jecxz
dec
xor
loopne
cmp
ss
pop
cmp
out
dec
fdivrl
rcrb
aas
fsubrl
sbb
xor
xor
add
or
mov
int3
test
jb
xchg
mov
or
sbb
push
add
daa
push
or
cmp
inc
inc
lods
pusha
jl
mov
adc
sub
push
adc
add
fcomps
stc
push
mov
sbb
lret
push
or
sbb
inc
fs
mov
adc
jno
jb
rcl
fcmovnb
lds
jo
rclb
lods
fadds
aam
mov
push
add
mov
leave
out
jae
fmuls
pop
push
pop
insl
enter
incl
je
jmp
dec
test
jecxz
and
sarb
testb
pop
jle
mov
inc
mov
mov
or
insb
imul
adc
mov
insl
dec
mov
pop
or
push
mov
orb
int3
xchg
adc
dec
call
inc
or
adc
call
in
ja
or
push
sub
lock
in
in
mov
add
sbbl
and
icebp
or
inc
fsubr
loopne
sbb
test
adc
fmull
jbe
imul
push
or
pop
das
and
cmpsl
cltd
add
pop
hlt
sub
in
pushf
pop
in
xchg
es
lock
jb
xlat
lcall
inc
mov
adcl
push
cmp
inc
in
int3
adc
cmc
inc
in
push
push
sbb
addl
leave
push
push
icebp
jge
stos
push
loopne
cmp
or
mov
mov
ret
jle
ljmp
and
sub
test
add
subl
je
jg
xor
add
mov
fisttpl
push
cwtl
call
xchg
inc
adc
xor
outsb
in
sbb
rcrl
jo
cld
xchg
jne
hlt
ror
ret
mov
repz
jo
jp
loop
inc
adc
sbb
js
jg
adc
lods
add
adc
and
push
sub
push
cmpsl
std
jg
mov
dec
add
inc
or
mov
cwtl
xchg
xchg
rol
jns
pushf
sub
popa
cwtl
adc
data16
rcrb
jb
mov
sub
cmovs
mov
aad
pop
dec
adc
push
push
pop
nop
sub
adc
mov
or
push
les
and
adc
sbbb
or
mov
sar
sahf
jnp
xchg
popf
sub
int3
fst
or
sbb
cmp
push
rorl
jo
cmp
dec
shr
sarl
in
add
cmp
push
push
in
in
push
stos
fdivs
arpl
das
push
sti
jmp
dec
aam
jne
bound
mov
sub
not
inc
loope
push
jl
mov
mov
inc
add
dec
or
add
add
cmp
or
dec
sub
idivb
mov
jo
rcll
lds
mov
jo
imul
cli
test
inc
push
push
adc
jmp
dec
mov
movsl
pop
dec
cmpsb
xor
data16
cs
inc
enter
xor
dec
mov
sbb
cltd
cmp
fcompl
fistpl
data16
xor
pop
push
mov
or
add
xchg
push
or
push
lahf
ljmp
sbb
adc
in
xlat
push
lods
jno
mov
je
pop
jb
add
inc
push
adc
mov
push
adc
or
dec
add
sbb
test
inc
and
fsubrl
dec
push
insb
arpl
adc
into
push
loope
mov
rclb
and
sbb
lret
push
add
pop
and
loopne
mov
xor
xor
push
mov
xchg
mov
mov
fnstenv
lahf
ret
pushf
lock
mov
xor
dec
mov
push
sbb
push
dec
adc
jo
js
outsb
mov
rcll
pop
cmpsb
push
sbb
cmp
aaa
push
out
push
xor
hlt
inc
adc
rclb
pop
mov
push
lea
call
adc
push
jge
inc
adc
addb
adc
rcl
pusha
cs
mov
push
repnz
sub
test
cmp
ljmp
push
sbb
jnp
movd
pop
rolb
mov
in
pop
in
mov
mov
pushf
mov
mov
daa
inc
shrl
iret
jb
push
adc
jae
or
cmpsl
or
jo
xor
dec
rorl
insb
mov
js
test
sbb
clc
inc
push
mov
sub
adc
cmp
jg
mov
ljmp
push
or
mov
pusha
cmp
add
push
push
cmp
dec
dec
ja
mov
jmp
mov
fisubrs
add
out
add
xor
mov
xchg
pop
push
inc
add
in
in
cmp
xchg
rcrb
jmp
sbb
sbb
push
icebp
aad
or
imul
xchg
test
stos
push
in
lret
je
pushw
push
add
aam
frstor
dec
inc
popf
mov
jecxz
adc
push
xchg
mov
push
push
push
sbb
adc
dec
adc
mov
push
mov
jmp
or
lods
and
mov
push
gs
sbb
inc
pop
mov
mov
xchg
out
mov
sbb
daa
shll
jns
fildl
xor
lldt
sbb
jmp
push
orb
lock
popf
jmp
add
fisttpll
bound
in
push
jg
cmp
aam
cmp
or
shrb
or
pop
push
fdivrl
push
xor
movb
not
xchg
push
mov
je
enter
inc
or
jae
stc
repnz
push
push
jae
arpl
cmp
xchg
dec
push
je
inc
xchg
out
jnp
jg
push
or
nop
or
cmp
push
push
inc
inc
in
sub
sbb
cmp
cmp
clc
or
lret
adc
popf
pop
mov
sub
cmp
pusha
pop
push
pop
mov
imul
sub
sbb
push
or
nop
or
or
dec
xchg
sub
rcrb
aad
fadd
add
lods
popf
xchg
or
jo,pt
mov
iret
dec
or
mov
out
cmpb
inc
push
data16
jmp
inc
mov
xchg
cmp
je
testl
push
push
sbb
outsb
clc
jno
cmp
push
sar
rclb
push
push
adc
add
xorb
and
inc
jo
sbb
jnp
jae
or
add
add
clc
sbb
inc
xor
xor
pop
and
cmp
dec
loopne
adc
or
mov
rorl
mov
mov
outsb
and
and
and
and
rorl
pop
mov
fwait
or
cli
add
xor
aas
pop
pop
ss
jbe
inc
aam
fiadds
pop
nop
dec
fldl
jnp
sbb
or
sub
adc
add
mov
push
je
adc
inc
and
xor
imul
sbb
push
pusha
dec
shll
je
imul
int3
or
mov
repz
mov
xor
and
or
lods
sub
mov
int3
test
inc
mov
lea
pop
scas
sub
dec
jnp
inc
and
pop
pop
sbb
jp
xchg
adcb
imul
loopne
add
or
xor
or
pushf
pushl
rcl
pusha
sub
push
fadds
add
mov
sbb
xor
add
jo
push
fs
push
xor
xor
cmp
jbe
xchg
add
rclb
ret
or
xor
xchg
std
mov
sbb
adc
icebp
xchg
jne
sbb
cmp
jne
inc
lds
add
xor
inc
xchg
shrl
dec
pcmpeqw
lcall
and
pop
daa
jae
es
mov
pop
bound
pop
mov
mov
rolb
leave
in
pop
sti
jb
jmp
cmp
sbb
add
jns
sub
sbb
adc
xchg
lret
or
adc
jl
sbb
jbe
js
add
fsub
xbegin
shll
mov
and
shr
mov
data16
cmp
dec
addr16
or
and
or
fcoml
sub
xor
mov
outsl
clts
test
in
loope
jp
push
sub
xor
insb
sbb
cmp
pop
fmull
shr
and
test
and
push
pop
add
pop
fsubl
das
jb
test
xchg
loope
mov
lea
add
sbb
jne
adc
sbb
lret
notb
push
clc
out
test
roll
sub
sahf
fnstcw
add
add
dec
xlat
add
pop
mov
repnz
push
add
repnz
sbb
iret
push
dec
sar
stc
or
push
ljmp
push
clc
insb
xchg
inc
xor
insl
jmp
rclb
out
movsb
add
mov
imul
mov
sub
or
clc
loopne
xchg
and
xor
fdivrp
push
stc
lods
xchg
loopne
je
icebp
jne
fwait
jl
cmpsl
xor
ja
fwait
jnp
cmovp
sub
inc
sub
jne
shrb
sub
push
jl
and
lods
aam
mov
cmp
xchg
fucomp
jbe
je
ret
adc
shrb
ljmp
jns
xor
test
xchg
jbe
add
rorb
mov
mov
loop
jmp
cmp
subl
add
or
or
mov
lods
cmpsl
mov
dec
or
inc
or
dec
icebp
insl
and
ljmp
add
inc
pusha
jae
pop
or
out
cltd
dec
cmpsb
adc
add
mov
pop
dec
pop
jecxz
mov
adc
mov
loopne
mov
and
add
add
xchg
sub
lods
push
mov
push
insl
push
add
pop
mov
mov
scas
setle
and
jge
and
mov
adc
inc
les
add
and
jo
cmp
push
sbb
lea
addr16
and
sbb
push
pushf
add
lods
outsl
mov
push
or
sub
fs
push
sbb
pusha
pusha
insb
insb
or
xor
loope
add
inc
jno
sub
ja
xor
icebp
pop
testl
je
cmp
je
push
inc
dec
jg
add
movsb
rcrl
mov
and
iret
je
sbb
loopne
xor
push
insb
sbb
push
push
lock
push
sub
push
orb
pop
xchg
jmp
lea
cmp
mov
push
leave
add
js
push
imul
lock
cs
dec
cs
lock
jmp
push
cmpsl
jbe
mov
addb
push
adc
jl
pusha
in
adc
sbb
out
push
dec
ss
sub
out
mov
jbe
das
cld
cmp
iret
test
into
add
push
mov
add
mov
testl
adc
pusha
pop
add
inc
xchg
lock
leave
shll
movsl
inc
cwtl
shlb
mov
add
sbb
sbbl
push
inc
sub
add
jne
fidivs
and
push
xchg
sbb
je
jl
loope
test
ljmp
fsubs
jbe
pop
adc
adc
addr16
inc
push
sub
adc
popa
nop
push
insb
clc
mov
push
jge
jne
mov
xorl
inc
mov
cs
mov
test
popa
push
addr16
adc
sub
cmpsl
xor
xchg
fsubs
cltd
mov
insl
lds
stos
or
xchg
addb
cwtl
fidivrs
sbb
lods
sub
push
test
sub
pop
loopne
sbb
jnp
fwait
sbb
add
fimuls
sahf
lret
pusha
xchg
push
and
xorb
dec
push
lea
add
jo
aam
mov
adc
lods
push
cmpb
lret
push
or
sbb
xor
add
adc
pushf
jl
sarb
jo
mov
es
les
out
xchg
pop
pop
adc
sbb
in
mov
push
and
xchg
cs
adc
fs
cmp
inc
aam
dec
jp
push
pop
arpl
and
sbb
mov
cmp
push
push
test
jmp
into
inc
std
mov
mov
fcmovb
push
push
pop
inc
cmp
pop
cmp
or
push
sahf
add
push
nop
in
arpl
dec
inc
xlat
std
sub
je
aaa
test
push
mov
adc
mov
lret
aad
mov
cmpb
or
cmp
dec
mov
insb
pusha
add
inc
pop
pusha
pop
scas
loope
or
hlt
push
mov
lds
or
movb
or
jb
add
push
or
pop
jo
sbb
push
pop
enter
into
jecxz
lock
adc
adc
and
in
cmp
ds
dec
lods
inc
fnstsw
push
xchg
lret
sbb
add
xchg
push
movsb
and
lea
xchg
shll
enter
inc
adc
lods
xor
push
and
sbb
dec
mov
cmp
sbb
fsubr
pushf
or
mov
scas
add
insl
cld
jle
pop
lock
push
stos
add
popa
mov
xor
shlb
sub
mov
jo
sub
add
lret
pushfw
pop
xchg
sbb
ret
ret
mov
sbb
mov
xchg
ss
call
xlat
aam
sbb
adc
lock
push
out
jo
push
cli
or
mov
mov
mov
aaa
push
xchg
cld
adc
int3
popa
cwtl
bound
add
and
cmp
mov
cmp
and
add
test
aaa
cltd
cmp
test
clc
adc
movzwl
sbb
or
test
inc
inc
lcall
add
dec
jae
dec
push
sbb
je
or
and
cmp
cmp
push
mov
sar
pop
lea
push
push
cmc
inc
cmp
adc
ret
clc
orps
mov
push
or
pslld
or
inc
adc
stos
imul
xchg
jmp
sub
adc
cmp
loope
inc
sub
add
fisubrl
sbb
add
cmp
xchg
pop
stos
imul
mov
inc
xor
jno
sbbb
push
mov
xchg
jmp
cmpsb
xorl
psubusw
add
cli
sbb
or
add
xor
push
pop
data16
scas
dec
js
in
push
pop
sub
hlt
and
xchg
xor
ja
adc
int
decl
push
push
xchg
xor
fidivrs
sarb
mov
inc
cs
pop
mov
mov
mov
divl
add
lret
or
adc
cmpb
jo
mov
mov
push
test
movsl
aas
mov
icebp
xor
cld
or
cli
push
or
jo
push
and
scas
or
and
dec
xchg
fimuls
add
push
mov
dec
sbb
add
add
add
repz
std
push
and
fbld
xchg
data16
sub
sbb
jb
sub
xchg
fildll
mov
add
ficompl
rclb
xor
or
cltd
dec
push
xor
les
and
jb
shlb
push
sbb
ret
inc
or
dec
loope
add
xor
inc
cmp
push
lods
or
test
sbb
inc
inc
adc
sub
lcall
adc
cmp
clc
push
rorb
out
andl
mov
fdivl
rclb
int
jo
fimull
push
sub
repz
push
pop
sbbb
ret
jmp
or
jo
ss
push
inc
mov
push
into
das
rcr
pop
lcall
dec
clc
sub
sbb
pop
pop
pop
pop
or
shr
jge
inc
idivb
inc
add
sbb
or
add
mov
jl
andl
aam
sbb
adc
jl
mov
and
cmp
cltd
add
or
pop
movsb
pop
mov
inc
sub
fistpll
inc
dec
xor
pop
adc
push
xchg
dec
outsb
mov
rcll
jo
loopne
push
xor
dec
aam
adc
aad
sub
leave
or
shrl
test
mov
jle
pop
or
mov
push
loopne
dec
stc
mov
xchg
bnd
dec
cmp
sub
push
rorl
mov
ret
adcb
shr
add
addb
inc
dec
insb
or
dec
adc
ret
arpl
pop
inc
push
inc
adc
push
or
fadds
add
arpl
addl
jns
xchg
pop
pop
sbb
jp
fbstp
mul
jl
sub
test
xor
cwtl
mov
bound
pusha
sub
cmp
mov
cmp
out
add
jne
mov
xor
jg
or
sbb
testb
jnp
inc
lds
mov
jle
dec
xorb
mov
mov
rolb
xchg
loope
xor
xchg
push
sbb
xchg
xchg
cwtl
inc
call
pop
out
sub
push
mov
mov
push
adc
dec
lret
in
scas
push
mov
leave
cmpsl
repnz
inc
add
mov
test
add
mov
mov
mov
and
cmp
add
enter
inc
cs
scas
lahf
aaa
add
mov
rolb
cwtl
popa
imul
inc
mov
mov
test
jne
xor
rorl
shrb
dec
aad
filds
mov
lods
cmp
setg
les
mov
movsl
aad
mov
or
adc
pop
imul
push
pop
jno
sbb
push
xchg
into
stos
push
mov
adcl
sbb
sbb
pop
nop
jmp
lea
xchg
adc
lods
ret
shlb
divl
insb
push
pushf
xchg
inc
xlat
adc
xorb
test
mov
mov
adc
xchg
push
inc
push
push
cmp
sbb
sbb
sar
adc
pop
andb
pushl
movsl
add
ret
jmp
repnz
mov
nop
mov
mov
xchg
jbe
mov
push
push
lea
stos
movsl
pop
or
dec
mov
cltd
div
fidivrl
inc
push
imul
test
jmp
push
sub
push
add
or
dec
xor
mov
add
or
add
aas
pushf
stos
jnp
dec
xor
addr16
xor
test
add
add
sub
sub
out
and
lods
nop
mov
inc
inc
aam
sbb
imul
js
xor
jno
push
shlb
push
jns
adc
call
inc
cmpsb
daa
add
or
inc
inc
xchg
push
adc
or
orb
mov
ss
xlat
xlat
cwtl
push
adc
xor
aaa
push
loope
in
and
xchg
dec
xchg
inc
sbb
add
or
mov
sub
incb
pop
es
mov
push
mov
adc
inc
jo
pushf
ljmp
inc
je
es
popf
sbbb
fcompl
xor
cmp
sti
push
popa
adcl
sbb
sbb
mov
in
mov
or
jae
adc
add
lret
add
add
add
pop
sub
test
orl
stos
adc
das
jbe
and
cmp
shrb
dec
in
rcrl
mov
mov
dec
insb
add
inc
test
js
enter
xor
add
pop
push
adc
cmp
movsl
jge
mov
or
jge
adc
aas
dec
push
int
notl
por
jne
and
pop
imul
mov
pop
mov
push
xchg
xchg
out
push
rcrl
mov
daa
mov
add
push
push
mov
pop
and
aas
or
lods
jbe
loop
int
testl
fiadds
push
cld
adc
push
jle
sar
inc
in
jge
movl
and
add
test
mov
adc
cmp
shlb
dec
sahf
loope
xchg
popf
sbb
stos
pusha
insb
std
mov
jg
stos
sbb
mov
aam
adc
mov
push
jbe
out
sbb
xor
sbb
pop
and
lods
rcrl
cli
push
push
shl
clc
and
dec
mov
je
push
lock
push
push
cmpsl
jl
pop
adc
inc
hlt
push
dec
cmp
mov
ret
push
lock
mov
jecxz
shrb
push
fucom
mov
mul
je
lcall
mov
dec
sub
outsb
cmp
pushf
xor
dec
push
rolb
es
sbb
imul
sbb
aaa
subb
and
mov
add
loope
adc
pop
cld
jecxz
adc
push
sbb
mov
dec
nop
out
movsl
addl
or
sub
push
xchg
mov
sub
jg
call
loope
ja
mov
inc
adc
movb
cmp
xchg
mov
add
pop
cmp
pop
dec
add
mov
daa
ss
mov
push
xchg
punpcklbw
js
sub
mov
push
fimuls
jae
push
out
pop
mov
cmpsb
cld
push
lea
es
shll
mov
sub
xor
cmp
jbe
sbb
mov
dec
xchg
fldl
pop
sub
or
rclb
sub
add
xchg
sub
jg
mov
jge
xchg
adc
dec
in
shl
xor
mov
repz
and
outsb
sbb
or
adc
xlat
dec
dec
pusha
mov
jmp
inc
mov
int3
je
ss
adc
xchg
cli
mov
adc
jg
sahf
inc
loope
xchg
push
mov
ret
adc
pushf
cs
loop
loope
addb
jae
loop
pop
and
add
and
insb
imull
lea
cmp
loopne
jns
aad
stos
push
ret
clc
pop
test
push
adc
jge
push
out
int
mov
test
or
and
and
in
jle
fisttps
or
or
mov
adc
push
cmp
cmc
test
pop
mov
mov
xor
sub
pop
push
pop
mov
cmpsb
mov
adc
pop
pop
testl
or
inc
or
inc
sbb
or
jl
inc
mov
test
xor
adc
dec
or
mov
adc
push
xchg
push
loope
or
cmp
aaa
sbb
jmp
or
adc
mov
insl
dec
sbb
lret
xor
jl
sbb
nop
push
pushf
out
cmc
jp
add
cld
jno,pt
sub
jge
sbb
cmp
testl
outsb
adcb
jbe
rorl
mov
push
sbb
mov
xor
rcr
jne
dec
lret
xchg
adc
mov
nop
push
int
cmpsb
add
loope
adc
adc
ret
fisubl
or
push
jl
push
inc
mov
scas
jae
push
push
mov
outsb
popf
sti
and
jl
movl
pop
pop
push
push
in
es
pushf
aas
add
int
mov
xor
lods
or
lea
test
jne
je
dec
or
fadds
sbb
inc
stos
xor
dec
shl
mov
jae
out
push
jae
or
mov
or
rcrb
adc
or
pusha
xor
outsb
insl
mulb
pop
dec
pop
lods
push
xchg
fs
mov
divb
pop
or
adc
aaa
adc
arpl
imul
insb
loop
cmp
divl
pop
sub
leave
mov
into
xor
jo
ss
sub
cmpsb
sub
das
mov
or
push
xor
xchg
in
or
inc
push
push
mov
lcall
dec
jo
aad
addr16
push
push
fs
and
in
cmp
pop
add
ja
loopne
add
rclb
add
outsl
pop
xor
lods
les
pop
stos
test
dec
imul
push
pushfw
adc
fisttps
mov
or
outsl
out
ret
outsl
sub
mov
fadds
je
or
je
or
sub
sub
mov
scas
cmp
or
xchg
adc
xchg
or
add
jnp
js
jne
lcall
sub
push
jecxz
cmp
adc
movsl
test
xor
mov
orb
add
sub
inc
sbb
jno
push
imul
mov
shr
jno
out
fdivrs
adc
aas
shr
loope
mov
ret
and
adc
rorl
movsb
push
fisubrl
or
add
je
sbb
cmovno
sarl
or
adc
add
test
dec
xchg
test
movsl
and
add
or
movl
mov
js
xchg
xor
inc
test
dec
je
sub
cmp
in
movsb
add
imul
cltd
add
adc
in
sub
or
das
ds
or
push
adc
inc
xchg
jl
shrb
or
push
leave
aas
popf
out
ret
push
cmp
scas
dec
or
sarb
cmc
dec
sbb
add
int3
sub
push
and
mov
mov
or
xchg
push
dec
nop
xor
fdivs
pop
insb
rorl
ret
adc
repz
sbb
adc
fdivrl
test
popa
add
lods
int
repz
in
and
push
mov
clc
lahf
and
inc
push
push
push
int
popf
movsb
aaa
in
push
loope,pn
sub
arpl
and
pushf
lcall
stos
and
dec
sbb
fcomp
repnz
push
repnz
xor
push
push
arpl
ret
mov
cwtl
mov
adc
jmp
lock
cmp
jne
pop
in
fdivrl
mov
insb
xchg
pop
imul
and
push
sbb
push
nop
outsb
adc
movsb
iret
movl
les
and
inc
leave
jecxz
push
enter
mov
xchg
fs
cmpsb
mov
ret
ret
add
xchg
mov
push
lret
leave
cwtl
mov
fdivrs
repz
sahf
dec
xor
sbb
clc
fildl
push
imul
mov
xor
loopne
mov
pop
pop
xor
jge
pop
xchg
stos
in
ror
ja
shlb
ljmp
cmc
xchg
xchg
add
aam
jb
push
cmp
sbb
cmp
push
movsl
rcll
in
clc
mov
fidivrs
and
push
xlat
jnp
or
add
xchg
and
cmpsl
cmp
insb
xchg
and
lcall
cmp
clc
inc
or
add
or
in
mov
sahf
mov
sub
fisubrl
cwtl
cmp
push
adc
mov
jl
test
hlt
leave
mov
sbb
mov
and
pop
xor
and
sub
mov
sbb
sbb
pop
push
push
nop
dec
adc
popa
push
je
inc
movsb
std
mov
adc
cmpsl
add
and
mov
ret
popf
das
xchg
xor
sbb
jmp
push
xchg
mov
jle
sbb
push
push
ret
leave
rcl
sbb
clc
inc
push
ds
dec
test
dec
push
daa
out
add
mov
jb
adc
pop
pop
xor
scas
mov
mov
push
roll
hlt
cs
mov
les
call
mov
or
push
xor
inc
enter
mov
in
mov
rolb
and
in
sbb
fdivl
jbe
addr16
lahf
dec
in
sub
cmp
sub
add
mov
je,pn
sbb
mov
stos
inc
pop
imul
push
jo
loopne
mov
sub
daa
adcb
in
outsl
popf
movsl
xchg
inc
and
push
and
ss
pop
daa
inc
ret
ja
ds
movl
add
or
or
mov
adc
lcall
sbb
adc
sbb
inc
add
xor
sbb
push
mov
ljmp
test
loope
add
push
mov
lods
mov
dec
push
add
jg
xor
mov
dec
jae
call
or
cld
dec
in
arpl
cli
sub
clc
mov
and
pop
incl
add
clc
xor
decl
gs
inc
inc
push
test
push
test
dec
and
sbbl
cmc
stc
and
dec
pop
shlb
stos
sub
inc
push
fs
or
sbb
or
mov
neg
sbb
mov
add
clc
mov
and
sbb
sbb
cmp
nopl
aam
adcb
push
sbb
jne
cmp
push
daa
test
pop
push
jl
iret
fsubr
icebp
adc
jmp
add
push
push
lret
sub
add
push
push
pop
mov
pop
jb
test
stos
mov
rcrb
jmp
cmpsl
xchg
call
xor
and
jmp
repnz
cmp
add
pusha
cld
or
or
in
dec
and
adc
cmp
imul
pop
mov
mov
pop
jg
sti
je
daa
adc
push
mov
dec
add
jbe
add
movsl
jno
jnp
cmp
dec
insl
je
push
sbb
inc
and
mov
int
add
lock
adc
movsb
jp
icebp
sub
movb
iret
add
lds
adc
adc
fcmovnbe
xchg
rcr
push
push
xor
das
push
rcl
mov
movsb
test
xor
push
pop
push
inc
sbb
pop
js
mov
xor
sarl
out
cmp
mov
jl
sbb
xchg
ljmp
push
inc
mov
out
in
mov
dec
jmp
and
mov
cwtl
and
js
sbb
xor
pop
mov
push
adc
mov
mov
or
test
add
sbb
cmp
mov
rclb
mov
jge
xchg
and
inc
xor
sbb
aam
hlt
jle
push
xchg
mov
mov
mov
call
call
sub
addb
ss
dec
mov
add
sbb
hlt
mov
mov
and
mov
leave
ds
or
mov
movsl
add
adc
sub
addps
cli
adc
or
sbb
add
jl
les
xlat
xor
sbb
dec
in
rol
jecxz
add
sbb
cltd
cs
rorl
jnp
aaa
stos
dec
inc
pop
sbb
mov
pop
or
mov
into
hlt
je
dec
cmp
inc
jo
cltd
dec
andl
add
add
bound
je
stos
aam
push
adcb
loopne
int3
jnp
add
lods
stc
xor
je
cmp
push
inc
movsl
mov
jge
push
mov
push
arpl
mov
dec
fs
push
inc
cmpsl
fwait
add
rcrb
lock
stos
or
iret
imulb
inc
dec
dec
dec
hlt
add
pop
je
or
cmp
je
cmp
inc
sub
xlat
adc
clc
sarb
mov
dec
mov
pop
les
rclb
and
cld
jge
inc
shrb
xor
mov
test
dec
sbb
xorl
test
jmp
adc
inc
pop
push
sbbl
or
inc
shrl
and
insl
jge
arpl
hlt
int
jnp
dec
push
add
hlt
adc
and
out
push
sbb
lock
aas
and
js
add
or
in
add
out
popa
mov
push
nop
rcr
or
mov
push
sbb
mov
jo
or
push
add
adc
out
push
mov
and
add
add
inc
mov
push
adc
cmpsb
fcoms
push
cld
out
dec
or
je
adc
shl
adc
add
inc
dec
mov
sbb
nop
lods
mov
xchg
xor
mov
and
sbb
dec
in
push
push
and
add
daa
and
adc
in
sub
mov
jl
and
push
mov
sub
lea
frndint
cli
or
xchg
add
test
bound
outsl
ljmp
enter
xor
xor
push
sub
ficoml
nop
sub
xchg
xchg
je
mov
in
pop
push
pop
mov
adc
sub
movsb
xchg
cmp
iret
inc
scas
cmp
fstpl
and
inc
ret
cmp
sub
cmpsl
fwait
or
das
enter
add
inc
inc
xchg
or
out
daa
inc
mov
push
cs
add
pop
mov
iret
pop
or
jne
dec
bnd
add
adc
sbb
scas
sbb
dec
jmp
cmp
stos
inc
push
xor
mov
daa
inc
add
ret
push
dec
push
mov
std
inc
cmp
xorb
leave
push
adc
iret
sarl
out
cmp
lods
adc
enter
push
rol
dec
sub
jne
push
add
sub
aaa
sub
lret
inc
movsl
push
scas
add
sahf
add
mov
aam
add
rcl
or
mov
jle
sub
pop
add
pop
lahf
fwait
or
push
and
arpl
push
or
or
movsl
mov
jbe
inc
mov
jl
and
sarb
add
mov
and
ja
adc
adc
mov
sbb
add
movsb
push
int3
jp
sahf
insb
in
lods
push
rclb
fisttps
in
leave
xor
inc
sarb
jge
jl
adc
and
xor
int3
adc
add
push
inc
or
inc
or
leave
sti
fwait
lea
and
daa
sub
pusha
scas
lds
les
add
inc
std
jl
cmp
jae
or
mov
push
shl
pop
cmp
jne
jg
xor
jbe
and
dec
dec
lods
sub
sub
rol
xchg
mov
testb
inc
jmp
push
cmpsl
push
adc
xlat
andb
dec
mov
loopne
push
insl
int3
cmp
cmp
pop
xor
xchg
sbb
dec
xchg
sub
enter
sahf
or
mov
jge
clc
dec
scas
xor
add
add
pop
pop
sbb
xchg
or
fs
mov
push
adc
popf
icebp
lret
cmp
subb
ss
jno
sbb
push
add
sbb
into
clc
mov
sub
dec
mov
es
or
mov
stos
in
or
aaa
lea
xor
sub
and
movsl
push
fsubl
pop
insb
or
je
dec
enter
decl
ljmp
jne
jmp
in
dec
imul
popa
jmp
jg
mov
imul
dec
push
insb
call
imul
mov
std
dec
mov
jo
jns
call
jge
aam
ret
adc
pop
imul
mov
jge
mov
push
test
mov
push
cmp
jbe
sar
rol
xor
leave
push
xor
inc
in
push
cmp
and
cltd
push
xor
dec
mov
fs
add
pop
inc
mov
push
lock
lock
push
or
sbbb
dec
pop
sbb
mov
jne
repnz
cld
pop
push
push
and
push
and
rorb
add
and
mov
ret
jle
ja
jne
test
lds
test
lea
add
mov
jae
sub
or
lock
push
push
sahf
shlb
enter
xor
inc
sbb
xchg
hlt
into
aaa
jbe
mov
sub
mov
lea
sbb
sub
in
push
adcb
push
jns
movsl
xchg
push
scas
nop
and
push
sbb
push
sbb
xchg
dec
xchg
or
or
repnz
xor
pop
xchg
dec
or
inc
sub
hlt
mov
inc
in
add
dec
decb
sarb
add
ja
push
push
pop
xchg
addl
je
mov
pop
aam
rclb
push
loopne
jo
pop
scas
push
je
sbb
xchg
mov
ss
cmp
dec
or
inc
stos
testl
inc
adc
adc
lret
push
jmp
sbb
and
mov
or
or
aas
lret
add
fdivs
mov
and
out
and
dec
and
push
fldt
ja
fadds
iret
or
lock
sbb
movsl
dec
aas
out
inc
mov
iret
sub
movsl
inc
cs
or
add
cltd
inc
pop
mov
pusha
add
push
pop
enter
jo
dec
lea
push
sbb
mov
mov
inc
adc
push
adc
push
mov
xchg
loope
dec
pop
or
mov
arpl
xor
add
ds
jno
ds
sub
mov
addr16
repz
or
adc
inc
notb
rcll
dec
lock
mov
pop
popaw
pop
ret
lcall
scas
push
push
xor
imul
enter
lea
inc
sbb
mov
sbb
or
push
pop
daa
lret
scas
test
mov
jo
add
imul
pop
or
fcoml
xchg
in
bound
xchg
mov
adc
sub
xchg
mov
add
mov
and
lea
add
js
push
shll
and
and
rcr
xchg
xchg
mov
push
lcall
test
push
fwait
mov
xchg
inc
pop
ret
sub
push
jbe
pop
mov
andl
sub
icebp
sbbl
sbbb
sbb
popf
sbb
adc
daa
jns
dec
test
adc
xchg
cmp
push
nop
in
rorl
xor
push
adc
sub
xchg
mov
add
gs
aas
movsl
lret
in
cmp
in
loope
mov
lds
and
and
inc
adc
dec
rcl
sbb
shufps
data16
inc
add
in
lock
push
push
sub
je
inc
nop
lods
add
push
stos
xchg
push
push
clc
add
and
or
push
jle
xlat
popf
clc
sarl
bound
dec
pushl
jmp
lock
call
sbb
add
loopne
mov
out
xchg
pop
faddl
and
sbb
pop
testb
subl
jb
repnz
nop
ret
and
negl
pop
mov
xchg
lea
push
lods
sbb
jmp
adc
negb
ret
jmp
or
sbbl
push
push
cld
push
xor
mov
push
mov
pop
or
je
imul
inc
jmp
mov
popf
xchg
cmp
push
lods
rcrl
leave
inc
mov
in
sbb
adc
inc
mov
push
sub
call
lret
inc
push
pop
int3
push
mov
xchg
sti
jl
test
inc
js
pop
icebp
cmp
adc
push
push
pop
sbb
sub
popa
nop
push
adc
mov
mov
pop
mov
mov
push
cld
fists
pop
loope
jle
dec
add
jmp
push
inc
pushf
push
push
repz
sbb
out
jnp
int3
scas
add
push
shll
push
jno
inc
sub
cmpsl
out
sub
arpl
push
or
test
inc
imul
sub
das
das
das
sub
cmp
push
cld
dec
dec
sub
or
imul
or
movl
inc
shlb
adc
push
sub
sub
cmpsb
sub
inc
add
adc
xchg
imul
sub
stos
or
adc
imul
push
lods
fmulp
and
xchg
push
mov
cmovae
jg
je
mov
test
adc
mov
lcall
das
or
dec
sub
out
jnp
icebp
pop
or
add
jbe
es
xor
enter
sbb
sub
mov
jae
add
sbb
lods
es
sbb
ss
inc
sbb
jns
es
push
test
lret
jge
rcll
sbb
shlb
inc
cmpl
dec
les
cmp
popa
cmp
or
push
mov
push
ret
or
jl
add
cmp
cmp
push
inc
jno
enter
and
add
or
pop
mov
dec
pop
cmpsb
sahf
testb
adc
jmp
xor
data16
mov
inc
jbe
cmp
sub
sub
lock
inc
xchg
push
or
cwtl
pop
lea
sti
rep
bound
mov
cmpsl
or
adc
jmp
sub
jae
sub
mov
add
push
dec
or
mov
es
add
jnp
and
jne
xor
jae
push
push
cld
into
dec
mov
and
push
mov
push
stos
and
push
loopne
adc
push
pop
js
jge
data16
inc
sub
cmp
sbb
add
int
aad
mov
cmp
fsts
testb
jbe
pop
pminub
mov
push
ret
or
cmp
xor
test
and
and
andl
adc
sub
jl
push
mov
pop
or
jmp
add
imul
inc
in
and
inc
cs
lret
fsqrt
xor
or
add
cmc
jl
fsubs
mov
jmp
push
adc
test
jl
inc
and
aaa
add
sub
or
pop
pop
sub
bnd
insl
xor
mov
mov
inc
rorb
pop
test
jge
into
add
mov
loop
mov
pop
mov
push
push
push
inc
mov
push
lods
call
xchg
out
stos
mov
dec
adc
mov
ljmp
call
mov
or
in
and
orb
mov
aad
rcrb
and
mov
fdivr
loope
xor
incl
sub
ret
jns
rclb
rolb
mov
push
xlat
mov
adc
arpl
mov
fistl
cmp
xor
adc
inc
pop
inc
int
cltd
leave
add
cmp
rolb
xor
cmp
or
decb
inc
andl
push
popa
inc
mov
pusha
and
jo
push
jno
sbb
call
popa
xor
push
ljmp
mov
in
or
or
and
jo
pop
cltd
mov
or
inc
dec
jge
jo
xor
jno
push
icebp
jl
ret
enter
sbb
sub
sub
add
rcll
adc
or
lcall
sub
xor
dec
mov
aad
xor
inc
leave
adc
push
mov
rorl
add
sarb
xchg
subl
pop
clc
adc
aaa
call
inc
mov
add
xor
es
mov
add
add
stos
mov
adc
jbe
mov
bound
dec
xchg
add
dec
dec
loope
jle
int3
pushf
xchg
ret
or
fbld
loope
pop
dec
dec
insl
insl
push
adc
data16
mov
je
push
pop
add
mov
or
dec
adc
movsl
daa
xchg
push
cmpsl
daa
add
or
outsb
dec
adc
cmp
je
and
mov
adc
push
lret
sar
cmp
jbe
or
add
rcl
cmp
jmp
ret
sbb
push
inc
aam
in
inc
ret
gs
mov
add
jecxz
add
xchg
push
test
repz
mov
add
adc
cld
mov
or
lea
inc
dec
mov
rclb
js
fiadds
add
lock
pop
testb
mov
fdivp
push
in
sbb
adc
lret
test
movsl
jbe
fs
pop
idivl
jl
cli
inc
jl
pop
in
mov
popa
loope
and
lea
outsb
data16
cltd
pushf
push
jns
dec
mov
or
push
push
pop
sbb
andb
xor
cmp
andl
mov
and
xor
mov
rclb
pop
mov
sub
mov
pop
add
pop
xor
call
add
cmc
jb
adc
shlb
daa
or
pop
adc
push
out
sbb
enter
push
shll
arpl
dec
add
jne
sbb
aad
sub
jo
mov
data16
cmp
add
aad
jae
jb
pushl
or
pop
or
xor
das
lcall
sub
jl
dec
mov
and
pop
insb
cltd
rorb
adc
daa
add
in
adc
cmp
inc
sub
sbb
adc
in
inc
mul
mov
mov
sub
insb
lods
cs
adc
inc
and
and
lcall
shrb
xchg
lods
popa
push
xchg
xlat
sub
add
in
adc
mov
xchg
or
dec
sbb
cld
dec
scas
sbb
insb
and
es
movsl
sti
lock
daa
or
jmp
dec
sub
push
cmp
add
fsubrs
fistl
daa
enter
adc
fwait
or
dec
or
add
sbb
adc
or
outsb
sub
fldt
sbb
and
or
mov
fisttpl
jmp
loopne
jae
adc
adc
adc
add
stc
repnz
jecxz
sub
addb
or
test
or
jae
sbb
sbb
vmread
push
xor
and
sbb
test
pop
cmp
pushf
pop
daa
add
pop
inc
cmpsb
dec
lcall
add
push
outsl
lods
fs
xor
add
xchg
sub
jae
lods
push
mov
stos
push
out
lods
add
shlb
add
inc
add
fs
add
in
pusha
and
in
cmp
add
in
and
in
int3
sub
add
hlt
daa
and
sbbb
sub
sbbb
subb
lret
test
or
jmp
and
fsubrs
cmp
pop
push
sbb
inc
push
dec
pop
and
or
xor
or
xor
xor
sub
mov
mov
lret
or
lea
dec
xchg
fistpll
loope
cmp
imul
out
pusha
push
inc
call
add
repnz
mov
adc
or
xchg
outsb
movsb
roll
sbb
pop
adc
mov
pop
mov
add
sbb
mov
aam
fwait
cmp
movl
xor
lcall
inc
inc
push
or
pop
sahf
call
aas
pop
adc
lea
add
push
adc
or
adc
mov
mov
or
sarb
inc
mov
jg
push
std
test
and
push
or
cmp
add
je
pop
sbb
lcall
adc
jmp
cmpb
or
jb
pusha
int3
mov
mov
cmc
and
and
jo
movsl
inc
fnstsw
mov
adc
and
insb
andb
andl
ss
mov
or
push
pop
out
fistl
into
or
stos
dec
mov
push
fdiv
push
and
sbbl
dec
lock
jecxz
xchg
push
pop
movsl
and
and
std
test
pusha
dec
xor
jne
push
cltd
xor
je
inc
mov
adc
and
inc
das
les
sahf
inc
cmp
and
lock
xchg
mov
pop
sbb
stos
mov
xor
push
or
dec
stos
adc
gs
lea
jne
and
stos
loopne
push
je
daa
add
inc
pusha
xor
sbb
sbb
mov
cmp
push
je
xor
sbbl
sbb
lods
add
sub
andl
and
inc
jmp
loopne
sbb
pop
sbb
dec
xor
mov
mov
sub
mov
cmp
xchg
mov
in
adc
adc
jne
lock
mov
nop/reserved
add
or
sbb
shrb
das
jnp
test
rorl
sti
jg
pop
neg
cmp
jl
and
bound
es
loop
inc
or
adc
xchg
add
inc
sbb
call
cmpl
and
loopne
aam
sbb
inc
mov
test
aaa
je
mov
or
iret
bound
add
mov
mov
or
fldt
sbb
pop
das
and
arpl
xchg
add
push
stc
xchg
loop
push
das
or
fadds
sbb
pop
xchg
or
nop
and
or
iret
xchg
movsb
pop
push
stc
fsubrl
or
cmp
lret
pusha
or
mov
push
sub
invd
or
fisttpl
and
cmp
and
mov
popa
call
mov
movsl
imul
outsb
hlt
sub
iret
dec
sub
add
in
adc
adc
adc
js
push
insb
mov
testb
subl
testb
xchg
pop
lock
cld
lock
call
repz
std
adc
imul
lahf
push
inc
jae,pt
or
in
add
xor
xorl
push
ficomps
xlat
imul
lock
cmc
dec
jecxz
and
add
ret
adc
es
add
add
and
adc
mov
cmp
jl
cmp
jle
cmp
push
fisttpll
clc
jp
or
pop
js
je
insb
ret
inc
stos
stos
mov
std
xchg
adc
xchg
cmp
mov
repz
xor
je
cmp
je
push
filds
jne
sub
lcall
pop
loope
add
and
ret
subl
pop
and
add
jmp
loope
loop
testl
add
or
mov
gs
inc
xchg
mov
test
ficoms
enter
pop
add
inc
fstpt
orb
jmp
in
add
sbb
jge
mov
push
mov
xor
sarb
add
add
mov
xor
js
pusha
rorb
mov
sbb
mov
pop
add
mov
es
imul
sub
dec
mov
lds
adc
cmp
sbb
xchg
or
cmp
xchg
sub
sub
pop
sub
into
loopne
mov
fsubp
in
xchg
pop
inc
popf
clc
imul
test
inc
sub
rcll
pop
push
push
push
dec
rcrl
lods
test
adc
aaa
push
add
dec
pop
loopne
icebp
cs
arpl
mov
sbb
xchg
xor
dec
push
mov
mov
dec
or
pop
or
adc
pop
rcrb
sbb
or
jb
xchg
pusha
jo
mov
pop
mov
push
or
pushf
sub
xor
jbe
int
rol
inc
and
das
or
sbb
and
sbb
adc
sbb
push
pop
mov
js
pop
pusha
sbb
xor
sti
ds
js
and
cmp
cmp
scas
hlt
push
jge
xchg
fwait
shll
cmp
pop
sbb
sub
clc
movsb
jb
addb
aam
test
add
dec
adc
mov
jnp
cmp
jne
jo
or
adc
push
movl
mov
push
mov
xor
and
lahf
out
test
adc
mov
leave
push
inc
pop
aam
fwait
outsb
nop
ret
cmp
and
and
xor
out
xchg
subb
pop
or
nop
pop
rclb
jecxz
notb
pop
cmp
inc
xchg
outsb
cmp
jle
and
xchg
sbb
outsl
ret
sbb
pop
das
sbb
les
flds
pop
lods
adc
bound
push
xor
pop
dec
and
shlb
jg
jbe
jmp
outsl
por
cs
cmp
and
adc
and
cmpl
pop
mov
mov
fistpll
pop
mov
jmp
inc
ds
jl
fucomi
mov
xor
xor
inc
decl
push
lods
push
inc
mov
cwtl
ret
fbstp
inc
ret
or
rorb
and
cld
stos
das
cmp
xchg
lods
inc
mov
es
mov
pop
sbb
adc
shlb
dec
push
sub
or
mov
rsm
das
cmc
adcb
lcall
fmull
or
add
xchg
adc
sub
pop
sbb
mov
pusha
ficompl
add
sti
cmc
adc
or
mov
clc
add
out
and
daa
je
cmp
leave
adc
and
pop
push
push
mov
push
push
push
cs
pop
incb
pop
mov
fldl
or
jne
xor
ja
and
pop
jnp
ficoml
jle
dec
add
and
test
push
fs
inc
dec
insb
mov
push
adc
cmp
push
repnz
jmp
and
lods
sub
jne
stc
sbb
and
clts
aaa
repz
jo
or
insb
addr16
lret
xor
loop
sbb
fdivrs
push
pop
adc
sub
cli
bound
push
arpl
pop
fistpl
rorl
mov
out
adc
inc
xor
push
mov
mov
jnp
sahf
subb
mov
adc
dec
jnp
fldcw
pushf
test
adcl
es
xor
dec
pop
cs
ds
mov
movsl
push
fs
cmp
sub
jle
into
push
mov
ret
inc
mov
push
mov
js
rcl
mov
push
aad
pop
pop
cs
pop
sub
push
xchg
sbb
aaa
daa
pop
cmpsl
push
add
add
fsubrs
rorl
push
mov
sarb
push
hlt
jg
mov
cmp
and
lock
adc
pusha
pop
mov
jmp
jl
push
js
adc
orps
or
or
pop
or
mov
iret
inc
pop
mov
lea
add
lret
pop
ret
adcb
sahf
jg
outsl
and
es
jne
push
push
or
push
test
or
pop
lcall
adc
shrl
or
neg
outsb
add
push
adc
call
mov
xchg
add
orb
add
dec
rcl
int3
nop
push
insb
add
or
push
in
or
add
pop
push
inc
inc
push
sti
mov
inc
gs
lcall
push
adc
add
ja
mov
jmp
adc
or
mov
pushf
add
repnz
stos
and
cwtl
push
or
lods
xchg
push
clc
jmp
mov
popa
cmp
xor
pop
adc
inc
add
push
lock
pusha
adcb
lret
rolb
jmp
or
sub
mov
sbb
push
adc
xchg
loop
pop
sub
and
or
dec
popa
jo
mov
cs
adc
fldl
imul
and
dec
cmpb
mov
sbb
jae
jae
in
adc
sbb
inc
in
cmp
inc
sbb
inc
jp
test
div
je
ret
cltd
rclb
pavgw
es
shlb
xchg
pop
mov
push
in
pop
test
fsubl
dec
nop
pop
testl
sub
cwtl
sub
add
loopne
test
cmp
fdivrs
dec
push
pop
je
fldl
cmp
push
fstpl
dec
in
stc
insl
fildl
sub
aaa
adc
adc
jne
sahf
lahf
out
push
divb
or
jne
or
jns
cli
jne
or
hlt
cmpsl
add
fldz
lret
andl
cmp
test
mov
xchg
dec
pop
mov
in
mov
test
and
imull
out
mov
das
lods
enter
jo
shlb
adc
jecxz
sbb
mov
mov
insb
ljmp
add
dec
sbb
xlat
mov
js
rorb
cmp
add
xor
mov
in
push
movsl
push
jecxz
pusha
bound
inc
loopne
sbb
movsl
fsubl
mov
insl
adc
pop
mov
test
jge
pop
or
pmaxub
cmpsl
rorb
fcmovbe
lcall
leave
cmp
inc
sbb
rol
dec
sub
clc
dec
pop
sarl
sub
ret
or
mov
es
push
or
jbe
jmp
aas
or
dec
sub
push
jbe
shll
ficoms
xchg
sbbl
nop
or
fisubrl
test
dec
mov
out
adc
repz
and
cmpl
sbb
mov
fwait
mov
pusha
mov
xchg
add
push
enter
jo
iret
xchg
int3
push
repnz
dec
add
pop
adc
sbb
add
xor
xchg
push
add
out
pop
mov
leave
push
dec
call
add
out
or
add
push
add
repz
dec
adc
add
dec
es
sbb
or
test
fadd
and
jmp
dec
arpl
jno
imul
push
and
mov
xor
add
insb
inc
shrb
push
mov
les
push
imul
addl
mov
or
int3
rorb
push
push
jp
sbb
mov
imul
or
jno
cwtl
mov
sbb
fsub
push
insb
loop
xor
es
call
xchg
add
in
inc
pop
insl
stos
rclb
rclb
int3
aad
cltd
fs
imul
pusha
and
push
ljmp
xor
shll
mov
lds
xor
cmp
push
loope
lahf
stos
fsubrl
push
sub
fstl
pop
addl
repz
push
and
ret
cli
or
js
sbb
mov
push
int
test
outsl
mov
gs
sub
fcompl
or
add
in
fcoms
popa
cmc
mov
sarl
sub
xor
daa
mov
jnp
repnz
add
add
inc
xor
jmp
in
loopne
pop
add
xchg
lea
shl
dec
cmp
jl
call
push
inc
xor
stos
inc
pop
pop
inc
adc
test
js
adc
push
call
imull
pusha
add
add
add
pandn
xchg
nop
in
sahf
aad
outsb
adc
push
cli
xor
sbb
mov
mov
nop
push
xor
lret
pop
imul
add
inc
lods
imul
dec
adc
adc
shrb
push
jmp
lcall
fadds
pop
pop
mul
cmp
fmull
push
mov
inc
mov
je
leave
sbb
ficoml
sub
xor
loopne
pop
push
jno
and
call
shlb
ds
xorl
movsb
fwait
lods
fimuls
or
pop
xchg
ud1
add
push
adc
xchg
pushf
and
xchg
shl
mov
inc
mull
loope
mov
aam
mov
xchg
cli
inc
add
mov
push
insl
push
fcoms
or
mov
loopne
xchg
sbb
mov
jae
pushf
cwtl
mov
in
or
xor
movsb
jbe
adcb
stos
and
cltd
clc
inc
inc
or
jo
cmp
jg
in
pop
jbe
mov
cltd
mov
jle
pop
in
xchg
add
inc
or
cmp
movsl
sub
and
jne
mov
int
shll
mov
fwait
mov
push
stos
pop
cmpsl
mov
insl
jns
pop
mov
sub
mov
lcall
cmp
mov
mov
jae
add
inc
orb
inc
inc
orl
mov
adc
loop
pop
out
sub
push
pop
sub
ss
xor
arpl
dec
xadd
je
aam
lea
inc
ljmp
push
mov
ja
inc
push
jnp
aad
sbb
or
clc
sar
pop
xor
dec
stc
scas
cmp
jo
mov
pushf
rcll
push
sub
imul
or
sti
testl
or
jmp
push
adc
outsb
enter
in
loopne,pt
icebp
inc
or
loop
das
outsl
inc
scas
shlb
adc
das
push
sbb
out
loop
xchg
mov
fs
nop
pop
and
shr
int
sub
mov
adc
xrelease
push
mov
adc
mov
mov
stos
add
movsl
mov
add
stos
aam
mov
push
popf
cltd
mov
xchg
adc
es
add
xchg
jnp
and
shll
movsl
adc
mov
xchg
dec
push
movsl
popf
mov
ret
and
sbb
das
add
mov
insl
lods
inc
adc
adc
push
adc
movsl
mov
fsubrs
movsl
adc
cmpsb
push
or
dec
addr16
xor
mov
shll
add
inc
pusha
dec
cmc
cmp
popf
cmp
jp
sbb
cmp
or
and
loop
sub
lods
push
sbb
ljmp
lock
movsb
sbb
es
aas
inc
stos
dec
sub
les
sbb
sbb
ret
js
mov
mov
sbb
stos
enter
push
jns
sbb
or
sbb
sbb
xor
cs
loope
push
enter
popl
add
in
mov
jle
popa
int
xchg
pop
imul
cmp
mov
push
inc
enter
repnz
out
or
in
or
mov
sbb
xchg
fldcw
xchg
push
push
les
test
repz
out
mov
adc
mov
shlb
pop
test
andl
cmp
xor
clc
test
sti
lods
mov
pushl
cmpsl
cltd
add
in
decl
add
out
cmc
sbb
stos
inc
and
and
xor
push
mov
push
jno
mov
cmp
mov
mov
sub
pushf
and
or
filds
dec
add
ret
dec
dec
jp
mov
push
add
jne
stos
lahf
test
adc
mov
xor
push
adc
and
sarb
test
or
push
push
push
mov
pop
fcompl
pop
xchg
test
sbb
popf
stos
xchg
pop
xchg
movsb
pop
add
inc
push
push
addr16
in
iret
das
popa
xchg
jo
and
push
xchg
addr16
lcall
inc
scas
call
mov
aad
jge
cmpsb
aad
push
hlt
sub
add
mov
jmp
ret
sbb
inc
mov
cmpsb
push
jge
lea
loope
push
outsb
mov
js
sub
lea
int3
jne
test
xor
or
jmp
test
dec
pop
sbbb
sbb
popf
arpl
cld
adc
inc
loopne
mov
cwtl
sub
test
mov
adc
outsl
add
rol
add
popa
mov
pop
sbb
add
add
scas
pop
mov
sub
lahf
inc
mov
enter
sahf
stos
cmp
inc
hlt
xor
jnp
add
mov
ds
shlb
add
pop
mov
aas
inc
cwtl
out
xor
add
leave
fisttpl
or
sub
push
ficoml
sub
shrl
jmp
sbb
dec
inc
push
sub
das
in
inc
popa
jmp
sub
dec
in
and
clc
or
pushl
sbb
dec
loopne
shr
cltd
mov
xchg
jo
addb
xor
and
pop
pop
or
push
add
push
add
dec
repz
pusha
inc
add
addr16
lods
sub
sub
mull
mov
rcll
mov
outsl
mov
enter
pusha
inc
outsl
inc
or
imul
shl
add
push
inc
mov
dec
mov
dec
sahf
nop
push
xchg
pop
jb
jae
pushf
pop
pop
xor
shlb
rolb
fadds
iret
inc
or
mov
adc
mov
leave
mov
insl
or
movsb
inc
movsb
or
jo
rcll
mov
push
shrb
rcll
xor
sub
cmp
daa
and
xchg
pusha
adc
inc
push
aaa
mov
movsl
or
push
sub
push
cld
pop
sub
adc
push
sub
pop
xchg
sbb
dec
loopne
mov
and
sub
and
fwait
pop
dec
sbb
cmc
sbb
gs
add
or
add
xor
mov
push
aas
sbb
in
xchg
push
pop
gs
sbb
cli
daa
jmp
rcll
cmpsw
and
sbb
mov
and
push
mov
sbb
mov
test
inc
dec
negl
xorb
and
inc
xchg
loope
cmpsb
repnz
mov
and
loope
jecxz
sub
ror
mov
and
shll
and
inc
ljmp
or
in
pop
and
sbb
cli
sub
push
sti
outsb
xor
and
adc
sbb
jbe
sbb
insb
imul
or
cmp
ret
stos
loopne
mov
mov
gs
or
jnp
repz
sbb
adc
test
xor
or
and
leave
xor
sbb
cli
jne
cmp
into
mov
in
cwtl
xor
sub
xchg
jge
popf
insb
adc
xor
xor
loopne
and
cwtl
jge
adc
fldenv
push
cld
jp
ljmp
or
push
arpl
andb
adc
mov
imul
add
mov
pop
rcrb
sub
mov
add
scas
adc
enter
addl
or
mov
push
xchg
je
je
lret
adcl
add
add
or
or
jmp
loopnew
jge
int3
and
adc
push
xlat
popa
in
cmp
inc
int3
jne
scas
dec
push
and
pop
xchg
adc
aam
stc
mov
mov
inc
cs
xchg
aam
or
dec
mov
fldcw
add
mov
adc
add
cmp
pop
add
inc
shlb
sub
xor
push
add
pop
clc
imul
or
inc
mov
dec
mov
js
test
daa
ja
push
cmc
push
in
pop
cli
std
testb
scas
nop
and
loope
pop
mov
xchg
and
or
mov
lcall
pop
rcl
ret
xchg
iret
shrb
cmpsb
or
xor
jb
cli
jo
adc
nop
or
adc
or
xlat
stc
add
les
jne
add
daa
int3
xchg
repz
cmp
jae
fs
faddl
loop
cmp
pop
jp
mov
push
xor
adc
icebp
lcall
push
inc
outsl
aas
daa
jbe
mov
cmp
test
xchg
jmp
adc
push
testl
sub
mov
sbb
add
ret
push
sbb
fildl
std
or
mov
std
xor
leave
jp
fwait
mov
inc
cmp
push
mov
sbb
jne
mov
enter
ljmp
mov
insl
xor
sub
xor
sti
jmp
imul
test
fcom
add
inc
mov
clc
icebp
push
pop
pop
pop
and
dec
clc
dec
mov
je
cmp
or
xor
loopne
adc
add
mov
outsl
xchg
or
push
sbb
adc
neg
inc
in
sar
sub
popa
and
jg
icebp
lock
add
fnstsw
test
je
mov
call
cltd
mov
jl
mov
fldl
xchg
test
clc
mov
xchg
aas
and
sub
sbb
fsubrl
push
cmp
cltd
shrb
jecxz
outsl
mov
out
cmp
add
push
adc
mov
fsub
pop
fsubrp
icebp
nop
aaa
test
mov
inc
loopne
testl
pop
add
fldlg2
icebp
and
xor
push
shrb
xchg
insl
and
add
outsl
sub
subl
aaa
or
lea
aam
or
xor
xor
in
sbb
sbb
push
stc
xchg
out
sub
push
push
push
inc
in
or
jnp
bound
fs
mov
pop
xor
out
jns
push
fcmove
mov
mov
sarl
stos
or
int3
jb
outsb
sbb
pop
in
cmp
test
cld
xchg
orb
or
sbb
mov
or
sbb
mov
add
in
test
les
ds
in
sbb
add
sbb
xor
add
lea
ja
mov
pop
dec
dec
jmp
pop
imull
pop
outsl
fs
xor
sub
push
push
dec
add
jns
enter
cs
mov
and
lea
rclb
and
in
mov
lret
add
add
and
jle
repz
sbb
push
xor
filds
xchg
arpl
xor
pop
push
jecxz
jns
loopne
lods
pop
idivl
ret
mov
jns
movsl
sbb
mov
mov
jns
int3
xor
push
loopne
ds
in
adc
jmp
leave
repz
push
push
or
in
xor
xor
pop
xacquire
orb
jns
inc
fimuls
and
inc
mov
pop
das
fmuls
xchg
mov
inc
sahf
out
mov
adc
jns
enter
loope
fmuls
sub
jns
lahf
sub
hlt
repnz
paddb
sbb
push
sbb
sahf
pop
repnz
adc
inc
and
push
and
dec
push
xor
push
ss
xor
stc
and
push
push
xchg
sbb
pop
test
fldl2e
pusha
push
cwtl
loop
int3
ss
fwait
sbbb
jmp
lea
pop
sbb
imul
lea
scas
rcl
repz
sahf
out
sbb
out
sahf
adcb
int
jns
testl
cmp
repz
jg
repz
nop
mov
sahf
cmpsl
stc
cmp
pop
sbb
add
data16
je
inc
or
add
dec
pop
mov
xor
cmp
fnstcw
in
les
push
add
mov
push
fwait
orl
mov
call
inc
xchg
jg
add
imul
jnp
cld
xchg
addr16
dec
mov
nop
lret
in
aad
mov
inc
pop
add
push
popf
sbbl
mov
add
shll
push
clc
inc
repz
sbb
lds
xor
mov
lea
addr16
shlb
daa
nop
inc
push
rcr
ss
and
sbb
iret
js
sbb
pop
dec
pop
and
out
inc
mov
xor
aaa
int
xchg
cmp
add
push
add
sbb
shrl
into
cmp
push
es
add
sbb
add
pop
lahf
inc
push
sub
sbb
and
sub
inc
call
lds
jecxz
lcall
mov
push
lods
addr16
imul
add
enter
sub
test
aam
jb
pop
inc
jmp
add
xor
push
or
lods
lds
out
add
pop
mov
or
lahf
sbb
or
mov
mov
xchg
clc
sbb
enter
mov
pop
add
xchg
mov
aam
jns
sub
jnp
hlt
add
add
ss
xor
sbb
and
adc
pop
add
call
pop
cs
call
rolb
mov
arpl
push
push
mov
add
xchg
add
xchg
mov
add
cmp
pop
pop
push
push
inc
xor
ja
or
mov
mov
lock
ret
dec
rcll
sbb
ret
sub
test
sbb
dec
or
fiaddl
jb
cltd
add
adcl
movsl
and
repnz
ret
or
push
or
pop
lret
adc
or
test
or
aas
mov
push
pop
and
inc
or
add
push
sbb
loopne
sbb
adc
pop
mov
daa
stos
popf
push
ret
mov
adc
push
cmpsb
fs
xor
dec
xchg
fwait
inc
push
add
leave
repz
adc
sub
sbb
cmp
sub
cmp
mov
mov
inc
divb
adcl
popf
dec
mov
push
and
pusha
adc
or
and
es
sbb
push
sarb
les
adc
loope
or
sbb
loopne
sti
test
add
push
xor
leave
lock
add
ffree
adc
mov
mov
shr
adc
mov
fidivl
jge
cmp
adc
test
add
adc
cmpsl
jo
add
outsl
sub
mov
add
add
stc
les
push
sub
push
lods
pushf
adc
add
cld
add
sub
stos
sub
mov
pusha
inc
icebp
inc
or
je
aad
jo
mov
add
xchg
aaa
or
add
or
xor
add
sbbb
or
push
pop
mov
and
dec
aam
sbb
cmpsl
adc
jo
xchg
ret
jne
adc
mov
sbb
pop
mov
xor
cwtl
hlt
icebp
xor
int
or
add
cmp
pop
call
enter
add
mov
adc
iret
add
les
xor
fstps
mov
lods
adc
push
and
xchg
daa
std
pop
mov
inc
sbb
mov
mov
mov
jne
mov
and
inc
xor
add
test
or
sub
pop
in
scas
test
cmp
in
lods
xchg
mov
jecxz
pop
jl
add
cmp
leave
add
jle
push
adc
and
enter
cmp
sbb
add
push
in
and
fldt
lea
push
sub
lea
mov
or
sti
inc
pop
push
rcrb
loop
push
mov
dec
xor
dec
ret
dec
data16
movsb
sub
add
or
mov
mov
sbb
mov
push
jg
or
shrl
adc
sub
or
xor
push
or
mov
test
push
add
and
xor
xor
cwtl
aaa
jecxz
jo
pusha
in
sbb
mov
or
push
push
ljmp
inc
push
mov
add
dec
push
nop
sbb
dec
inc
xorl
loopne
out
jmp
ret
rcll
push
xchg
mov
adc
sbb
dec
enter
movsb
mov
cs
jl
rcrb
cmp
test
add
mov
and
fiaddl
push
aam
insl
lds
bound
mov
adc
stc
add
inc
adc
push
add
lods
aaa
arpl
cmpb
push
les
mov
sbb
sbb
cmp
out
inc
adc
mov
inc
mov
dec
mov
add
ja
cmp
inc
jns
mov
mov
jnp
mov
jbe
sbb
sbb
add
pop
mov
or
lcall
lods
push
shr
adc
dec
fdivrs
jae
pop
fadd
and
scas
outsb
arpl
sti
push
addb
mov
pop
sbb
or
dec
jl
cmp
and
movsl
jns
xor
jno
xchg
sub
pop
aaa
imul
xor
push
js
jno
push
inc
xor
jbe
or
push
add
push
rorb
cmpsl
or
dec
mov
jo
shll
and
jp
add
inc
or
mov
and
push
inc
or
xchg
jne
mov
sysret
inc
push
push
sbb
adc
xchg
pop
lods
push
movl
pop
xor
xchg
mov
adc
cmp
push
and
dec
ret
pop
xor
sub
incb
call
cmp
jne
sbb
outsl
mov
add
lock
std
prefetcht0
das
and
push
add
jno
mov
adcb
adc
dec
add
push
and
ss
stc
test
movl
mov
test
add
sbb
adc
jmp
loopne
sbb
mov
or
nop
iret
add
rcl
sub
cmp
pusha
lock
and
adc
leave
xorb
stos
jecxz
inc
pop
inc
cmp
pop
mov
scas
shrl
mov
dec
loope
mov
add
dec
mov
push
push
or
inc
test
fcompl
jle
out
ljmp
addb
or
adc
jl
xor
jmp
dec
mov
inc
jl
or
sbb
popa
jp
adc
xchg
xor
jle
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
std
and
push
push
pop
cltd
idiv
add
mov
in
ljmp
jno
push
sub
lret
pop
nop
stos
inc
ss
popa
xor
xchg
imul
sbb
mov
xor
or
movsb
pop
insl
dec
test
test
mov
xor
or
test
add
mov
mov
inc
push
and
push
cs
in
in
decb
jns
incb
add
fwait
or
lret
inc
repnz
mov
dec
fdivrl
daa
cmp
and
scas
xor
push
push
push
aaa
orb
jne
gs
out
cmp
imul
divl
xor
in
hlt
xchg
les
push
pop
dec
sbbb
push
or
mov
lods
and
loope
out
js
sub
adcb
add
movsl
cmpl
enter
jbe
inc
je
das
dec
mov
mov
sub
cli
mov
jb
push
imul
aam
psubb
lock
fcoms
rcrb
push
pushf
adc
scas
movsb
rcll
inc
js
loop
and
push
xlat
dec
sub
mov
and
mov
pop
dec
or
and
ret
xor
testl
jae
jle
push
push
divb
pop
pop
dec
jge
fnstsw
pusha
popf
js
jns
es
push
pop
push
push
sbb
dec
add
cmp
enter
cmp
rolb
xchg
jae
mov
sbb
ja
lds
dec
or
cltd
nop
sbb
mov
push
fcoms
pop
jbe
xchg
mov
push
pushf
mov
and
fimuls
and
jb
repnz
sub
aam
jae
rcrb
and
in
in
mov
shr
cmp
test
in
inc
add
xor
sbb
mov
dec
fwait
add
xchg
xchg
out
es
adc
daa
push
mov
dec
or
cmp
sub
mov
or
pop
push
loopne
repz
cltd
in
test
dec
push
fs
mov
cmp
rolb
mov
pop
xor
js
cmp
xor
dec
cmpsb
pop
je
lods
adc
xchg
pushf
xchg
mov
jl
enter
or
or
push
nop
cmpsl
sbb
fsubr
call
adc
sub
pop
rorb
jge
cmp
pop
ror
imul
push
imul
jno
and
movsb
repnz
cmp
lret
nop
adc
fldt
xor
xor
adc
int3
jge
loopne
enter
daa
jne
jae
lret
push
sbb
cwtl
mov
sbb
movsb
out
and
icebp
push
jno
pop
movsb
movl
test
stos
lds
adc
add
jecxz
popf
outsl
sub
mov
and
mov
mov
test
sbb
push
push
pop
mov
mov
in
xor
pusha
add
mov
lods
xor
inc
jle
stc
and
popa
push
dec
repz
lcall
xchg
xor
int3
pop
out
jmp
addb
xchg
cwtl
popf
jae
arpl
adc
lock
aam
stos
xor
add
or
in
sub
xor
out
orl
lcall
push
jne
mov
test
aas
test
stos
pop
sbb
mov
push
xor
xchg
movsb
pmuludq
push
pop
stos
ljmp
rorb
pushf
jne
test
shr
or
and
orb
inc
cmp
pop
daa
shrb
pop
cmp
sbb
into
or
push
lret
sub
jbe
out
cmpl
pop
enter
je
adc
leave
test
xchg
rolb
jmp
cmp
cmp
inc
add
xchg
fmuls
adc
ds
sub
cmp
and
and
adc
cs
xlat
and
loopne
clc
xor
les
sbb
pop
sbb
inc
sub
movsl
mov
ljmp
jl
mov
dec
mov
pop
mov
ss
pop
push
push
xchg
mov
pop
jo
jmp
push
lods
add
inc
push
in
enter
xlat
sub
jg
cmc
rcl
or
cmp
sbb
mov
xchg
movsl
adc
lds
cltd
pop
fstpl
mov
mov
fldenv
mov
xchg
add
and
add
dec
paddw
out
sarb
es
pop
adc
dec
rorl
pop
daa
add
aaa
test
gs
mov
xor
pop
adc
aam
sahf
jge
mov
fsubrs
std
xchg
clc
and
ja
pusha
push
pop
mov
push
adc
mov
and
movsl
xor
adc
movsbl
and
xchg
clc
add
in
or
jg
mov
hlt
popf
push
inc
jmp
aam
adc
repz
mov
add
pop
movsl
pop
rolb
push
fstps
jmp
or
imul
dec
jle
aam
xchg
inc
push
jle
lds
mov
lahf
mov
cmpsl
loop
xchg
fs
adc
repz
addr16
test
xchg
xor
or
dec
mov
lds
lods
add
dec
add
cmp
jge
add
femms
jne
outsl
mov
jl
sub
loopne
dec
movsl
push
and
sbb
jl
loopne
push
imul
mov
add
add
inc
jmp
and
and
cmp
pusha
jo
mov
add
mov
jne
rolb
mov
dec
adc
int3
sbb
fwait
aad
mov
fisubs
adc
loopne
and
mov
push
aam
add
inc
jb
pop
sbb
test
jo
shlb
push
rcr
int3
adc
stc
popa
adc
fcomps
orb
aaa
je
jb
push
int3
adc
xchg
pop
or
add
xchg
adcb
in
adcl
or
or
out
adc
sub
cmp
mov
popa
and
xor
adc
lds
push
or
or
xchg
cmp
jne
sub
xor
mov
rorl
ja
test
rcl
xchg
addr16
xchg
stos
add
or
pushl
pusha
dec
pop
pop
ss
pop
loope
push
pushf
push
push
sbb
call
adc
cmpsl
push
push
and
shlb
inc
mov
push
out
adc
xchg
in
add
in
adc
fadds
mov
push
jge
push
cmp
sbb
xchg
pop
orb
sbb
adc
or
dec
daa
movsb
add
lcall
mov
jbe
lock
adc
jmp
daa
movsl
lret
ljmp
into
adc
xchg
iret
adc
or
lret
insb
cmp
pop
cmp
pop
push
cmp
dec
cmp
in
xchg
in
cmp
sub
pop
mov
cmp
adc
lahf
adc
cmp
jo
dec
aas
or
ss
stc
push
sub
mov
push
cmp
loope
inc
imulb
xchg
xor
add
jae
dec
push
filds
adc
pusha
xor
pop
xchg
cs
add
xor
xor
pusha
cmp
push
add
into
repz
addb
or
mov
sub
cmp
jne
pusha
add
lcall
xlat
cmp
js
mov
push
jo
xor
shll
add
aad
push
xor
mov
lret
repnz
sbb
and
push
mov
insb
xchg
adc
xchg
lea
lods
pop
sbb
in
fmuls
inc
add
adc
push
lret
jo
test
sbb
in
in
mov
push
inc
xorl
xor
inc
xor
xchg
and
nop
loope
jns
cmp
push
push
and
jecxz
adc
repz
sbb
mov
add
call
rcr
mov
inc
and
movb
adc
test
lods
xchg
lds
push
sbb
or
sbb
or
jmp
dec
out
pop
loope
nop
shll
shrb
pop
lock
or
cmp
aam
xor
cmp
adc
pop
or
inc
rorl
cmp
popa
inc
shl
bound
jp
daa
dec
adc
movsl
inc
sub
loope
pop
movsl
adc
xor
mov
adc
icebp
out
push
cmp
sarb
sarb
aam
push
or
popf
dec
fwait
adc
nop
nop
mov
loopne
or
adc
dec
inc
ret
push
das
aam
mov
pushf
xchg
add
and
or
ds
das
mov
add
dec
imul
lods
in
or
and
das
add
or
imul
push
push
xor
and
adc
sub
adc
es
cwtl
out
leave
lret
ficoml
arpl
mov
test
mulb
or
loop
add
cmp
mov
jne
popf
sbb
cmp
addb
lock
rorb
mov
mov
or
fs
or
test
xor
test
push
enter
sbb
jmp
jbe
jns
cmp
loope
daa
push
movsb
mov
cmp
xor
sub
mov
or
push
push
test
pop
cmp
daa
push
pusha
sub
mov
push
scas
mov
pusha
mov
outsl
sub
divl
cmp
mov
pop
and
add
lcall
shl
out
in
xorl
adc
mov
cmp
add
cmp
fldl
or
pop
sbb
or
sub
push
pop
inc
popf
mov
bound
fistpll
add
dec
push
adc
leave
add
fisttpl
pop
adc
push
cmp
add
movsb
cmc
dec
call
mov
or
or
dec
cld
in
inc
xor
sub
xor
jae
mov
orl
rorl
jp
mov
add
jmp
sbb
lods
ljmp
insb
lods
std
dec
mov
out
out
std
popa
in
popa
jmp
xor
sbb
fsubl
loope
push
fs
js
adc
jne
or
js
and
inc
sub
dec
cmp
pop
xor
push
gs
lock
stos
add
sub
mov
call
in
es
and
cltd
daa
sub
push
ror
loope
inc
or
ret
sti
test
mov
or
xor
loopne
in
mov
pop
out
mov
mov
test
add
push
push
push
mov
in
add
push
inc
push
sbb
add
jge
push
shrl
push
out
pop
int
jo
aad
xor
jne
shlb
adc
add
test
insb
xor
pushf
or
mov
dec
add
dec
sub
clc
cmp
cmp
lods
loopne
cmp
in
call
les
pushf
outsl
movsb
add
enter
mov
or
cmp
ds
xchg
or
xor
add
or
mov
add
sub
xchg
xor
std
mov
fnstsw
jo
or
add
pop
sub
incb
repz
adc
or
and
push
and
and
test
inc
roll
adc
and
add
adc
jno
int
sbb
lods
je
aaa
into
pop
test
mov
sub
rorb
dec
insb
cmp
and
or
xor
mov
sbb
ja
pop
add
shll
fs
cmp
mov
adc
or
add
sbb
mov
push
adc
cmp
stos
xchg
jno
mov
push
leave
or
mov
and
sub
ja
sbb
sub
push
into
rorl
outsl
mov
pop
adc
aam
orl
pop
lods
add
cmp
mov
dec
ja
pusha
rcll
mov
add
imul
push
int3
dec
jmp
mov
add
es
mov
inc
outsb
test
xchg
cmc
cmp
pop
jno
stos
and
push
orb
idivl
mov
int3
push
pusha
out
jp
cmp
fs
inc
mov
push
add
dec
and
push
push
sub
roll
das
shlb
jo
push
push
or
hlt
add
add
adc
scas
mov
insl
test
push
insb
pop
add
sub
xchg
adc
leave
sub
push
xor
hlt
pushf
pop
add
or
xlat
pop
or
scas
aad
xlat
inc
fs
outsb
xchg
sub
cmovo
cmp
dec
jl
inc
jmp
iret
inc
mov
test
cmp
mov
dec
cs
sub
movsl
cmp
pop
mov
dec
lods
cmp
rcll
push
stc
and
or
shr
ret
adc
ret
sti
pop
iret
adc
push
add
gs
in
test
jmp
cmp
xor
sbb
mov
sbb
mov
adc
jae
ret
push
popa
cmp
arpl
pop
cmp
push
enter
call
mov
iret
arpl
std
sbb
dec
cmp
mov
sti
test
inc
mov
sbb
inc
dec
mov
or
xlat
cmp
mov
aaa
rcll
in
dec
es
sub
adc
sbb
dec
js
cmp
jbe
pop
and
push
mov
adc
xor
data16
fldcw
ds
nop
jmp
push
push
enter
and
shlb
push
jo
xor
cmp
addb
xor
mov
rcll
xor
push
and
bound
les
inc
fisttpl
test
add
add
pop
shll
adc
cmp
push
data16
add
fdivrs
jns
and
sub
adc
xchg
fs
pop
jne
push
adc
cli
mov
outsl
loopne
andb
jmp
mov
sbb
mov
push
and
jb
jo
and
inc
mov
insb
and
push
addl
dec
or
ds
push
cmp
fisttpll
jns
ljmp
lret
fimull
in
and
inc
add
stos
mov
aam
data16
pop
mov
xchg
adc
dec
in
jbe
sub
daa
adc
xor
jae
scas
push
inc
sub
pushf
or
and
or
sub
mov
xor
aas
xchg
mov
ret
push
test
mov
les
xchg
sub
clc
adc
cmp
cmpsl
xor
pop
mov
lock
lret
in
sub
inc
adc
mov
push
mov
je
push
das
jns
add
add
pop
fwait
sub
lock
fldt
push
mov
sbb
ret
sbb
dec
es
xor
mov
movsb
jo
dec
addr16
outsb
pop
imul
sbb
sub
add
or
jno
je,pt
inc
add
mov
pop
sub
adc
addl
cmpb
lods
mov
add
sub
cmp
inc
movsb
cwtl
jl
pusha
xor
mov
jp
add
sahf
fwait
dec
pushf
push
add
loopne
mov
jl
pusha
mov
nop
add
nop
in
testb
push
popa
add
add
pop
orb
push
add
adc
adc
mov
call
lods
mov
push
cs
lods
out
pop
ret
mov
pop
add
inc
adc
xor
add
sbb
mov
xor
into
and
pop
int
or
or
clc
jge
cmp
cs
adc
jnp
pop
ljmp
enter
inc
into
cmp
testb
jge
sbb
mov
inc
in
loope
add
mov
sbb
mov
push
and
adc
loope
push
push
faddl
shlb
mov
mov
incl
xor
sbb
xor
sbb
mov
xor
push
outsl
jnp
add
test
cs
out
inc
cmp
pop
or
nop
andb
xchg
insb
data16
adcl
pop
ret
add
rclb
movsl
sahf
xchg
movsl
and
inc
sbb
cmpsl
mov
sub
imul
xor
push
jp
outsl
adc
push
ja
dec
mov
cmp
fisttps
daa
xor
mov
lret
add
push
adc
adc
int3
into
aaa
and
jo
mov
lcall
pop
push
pop
ss
dec
pop
psubw
das
add
or
ja
sub
es
fs
cs
pop
test
dec
inc
jae
inc
in
leave
xchg
cltd
ret
stos
ja
js
xchg
inc
rolb
pop
cmpl
pop
mov
icebp
dec
lcall
into
pop
jl
add
in
inc
cmp
jb
add
xchg
testl
loopne
mov
inc
scas
adc
les
dec
mov
inc
push
test
mov
ljmp
mov
ret
fcoml
mov
jb
dec
xchg
divl
pop
std
mov
sub
adc
push
out
push
sbb
pusha
and
outsl
dec
cmc
sbb
pop
lea
add
jl
dec
push
mov
or
lock
push
das
dec
and
in
pop
test
xchg
js
xchg
rorl
es
add
add
or
pop
ret
jo
or
sub
mov
and
add
fdivl
adc
insb
xchg
or
jge
je
mov
push
dec
pop
pushf
adc
adc
xor
lea
cs
jge
pop
inc
adc
out
add
push
lcall
les
insb
add
cmpsl
push
lds
insb
inc
aas
adc
cmp
sub
xchg
or
xor
ljmp
dec
ja
push
cmp
mov
pop
mov
fdivrs
sub
add
pop
inc
in
ret
push
cmp
push
and
pusha
sub
fdivr
and
gs
int3
sbb
sbb
mov
js
inc
cmpsb
shl
mov
add
loope
loopne
dec
fldl
xchg
stc
mov
or
rclb
ds
movsb
adc
cmpl
mov
sbb
out
jo
test
xchg
xor
icebp
adc
add
pop
sub
pop
fld
push
mov
addr16
test
mov
cmp
lea
cmp
add
xor
mov
jb
mov
push
out
or
xchg
push
les
mov
xchg
pop
mov
std
inc
cmp
cmc
loopne
adc
es
pushl
dec
ret
imulb
adc
frstor
int3
shrb
and
ret
popf
inc
movsb
sbb
xchg
xchg
fistpll
mov
lea
add
mov
nop
shlb
fwait
popf
xor
imul
mov
sbb
fdivs
add
hlt
push
push
les
aam
dec
loopne
pushf
paddusb
jmp
pop
lods
add
or
or
cmpb
fcomp
inc
and
and
dec
imul
pop
push
push
add
dec
xor
dec
es
mov
dec
sub
das
mov
pop
jp
mov
les
shrb
dec
sub
sub
sar
dec
pop
leave
in
loopne
push
adc
cmp
xchg
addb
gs
xor
imul
imul
dec
ret
sub
pop
or
lods
dec
adc
call
nop
jmp
sub
or
iret
repz
mov
loope
sarb
imul
adc
dec
jle
scas
mov
xchg
and
adc
dec
or
adc
movb
sub
dec
adc
lret
adc
mov
rorl
and
mov
movsb
push
shll
xchg
adc
mov
mov
dec
test
sbb
sbb
fiadds
push
imul
xlat
imul
jl
pushl
or
mov
mov
xchg
daa
cmp
push
cmp
mov
movhps
inc
push
or
or
dec
push
push
lret
in
out
push
push
inc
pop
or
nop
cmp
setge
and
shrb
repz
popf
pusha
movsb
mov
or
test
push
sbb
and
incl
add
or
pop
push
xchg
or
sarb
inc
int3
dec
adc
push
ret
or
xor
xchg
leave
mov
push
adc
and
pusha
adc
push
ret
or
sbb
jne
push
push
mov
movsl
dec
or
incl
popa
lods
rorl
movsl
inc
sbb
enter
xor
cmp
movzbl
inc
or
out
in
sub
ljmp
mov
out
push
ret
repnz
faddl
dec
and
sub
or
movsb
aas
movsl
jle
or
gs
jle
les
and
cs
xlat
aaa
dec
or
mov
or
dec
addl
push
jl
or
jg
ds
add
cmp
jbe
inc
pusha
add
xchg
xor
pop
inc
clc
fadd
sbb
add
jae
or
xor
dec
jae
ret
sbb
aaa
xor
push
js
ss
mov
jno
mov
mov
inc
ret
pop
add
add
enter
mov
enter
push
imul
or
sbb
cmp
clc
push
jle
push
pop
jle
jo
push
jecxz
icebp
add
inc
movl
fcoms
mov
js
dec
shll
lods
roll
leave
cmp
iret
in
in
push
int3
add
add
loop
cmp
aad
movsl
sub
testb
and
cmc
sub
and
push
pusha
mov
xchg
or
cmp
push
and
push
loopne
mov
pop
andl
adc
divb
sbb
cmp
or
or
pop
xchg
and
loopne
jecxz
gs
sbb
inc
adc
push
lods
or
or
and
sbb
loopne
push
sbb
sbb
adc
sbb
cs
pop
push
xchg
mov
adc
add
dec
push
mov
xor
mov
movsl
mov
ds
out
enter
or
xor
movsl
or
ss
shrb
cmpsb
dec
aam
sbb
push
add
push
mov
inc
fwait
ret
hlt
xchg
xor
add
in
stc
push
enter
mov
aas
push
loopne
xchg
rcl
xor
pop
mov
les
inc
idivb
or
push
push
scas
push
jecxz
lea
mov
mov
and
push
cmpsl
or
movsb
mov
rcll
xor
aaa
js
cmp
aam
sahf
xchg
ret
pop
es
pop
fs
cld
inc
dec
imul
popf
divb
std
ss
and
mov
jb
fmul
xor
sbb
push
xor
pop
movsb
iret
pushf
xchg
inc
pop
or
and
outsl
iret
lcall
aam
jecxz
test
sub
popf
call
adc
cli
mov
jle
push
add
popf
dec
push
shlb
mov
push
jg
bound
fmuls
sub
ret
jge
sbb
add
mov
add
test
add
and
ja
loop
cmp
cmpsb
mov
jno
add
clc
out
rcr
cmpsb
nop
xor
push
or
mov
js
jmp
or
or
sbb
pop
mov
xor
mov
lock
mov
test
inc
xchg
pop
lret
push
lds
nop
stos
in
or
jmp
mov
in
mov
imul
aas
dec
orl
sub
and
and
lock
jne
or
out
pop
test
add
mov
add
add
push
cmp
add
stos
jne
add
mov
or
xchg
js
pop
cmc
pushf
or
icebp
and
jl
xchg
add
sbb
test
js
inc
add
push
inc
call
and
sub
jecxz
mov
lock
mov
sarb
sub
mov
js
inc
xlat
popa
adc
call
jae
int
mov
outsb
sub
shrb
sub
xor
jg
add
in
adc
add
int3
mov
and
or
lods
in
mov
xchg
xchg
lock
fadd
jne
bnd
push
aas
aam
addb
test
xchg
xor
adc
xorb
mov
jbe
sarl
add
pop
in
jle
add
js
xor
jmp
movsl
and
sar
sbb
insl
and
mov
mov
sbb
push
jmp
and
jge
iret
repz
adc
dec
inc
adc
sub
imul
sbb
mov
out
mov
cltd
addb
scas
cld
and
jbe
push
mov
xor
fadd
ret
xor
fnsave
lock
fadds
ret
mov
push
pop
add
cmp
or
push
adc
push
out
inc
sbb
push
cs
push
push
push
push
call
cmp
inc
nop
pop
sub
xor
inc
mov
sar
jmp
popa
adc
dec
loopne
xchg
cmpsb
mov
cmp
mov
mov
outsl
or
dec
mov
adc
jmp
add
lods
jbe
sub
cmp
lock
adc
rcrb
push
inc
jne
mov
int
jl
add
xlat
xor
mov
imul
mov
push
pop
mov
inc
and
jp
sub
adcl
jecxz
subb
xor
xchg
jecxz,pn
outsb
fnstsw
mov
and
push
popa
mov
mov
adc
inc
push
les
lock
and
lock
and
cltd
xor
cmp
movsl
dec
push
push
push
rolb
repnz
call
bound
dec
mov
call
adc
jg
pop
and
add
mov
pop
fbstp
js
mov
push
mov
dec
std
negb
push
or
insl
xlat
out
popa
inc
loope
push
aad
fmul
pop
cmp
iret
dec
mov
pop
xlat
cmp
mov
das
push
movzwl
inc
mov
inc
sbb
mov
out
cmp
mov
adc
out
adc
sub
mov
sub
cmp
mov
mov
dec
and
aam
loopne
lods
fcmovnu
ds
inc
in
mov
sbb
cmp
rcll
in
adc
adc
test
adc
loopne
add
and
pop
call
inc
cmp
or
insl
mov
test
push
loop
hlt
ljmp
cmpb
mov
mov
mov
sbb
push
mov
sbb
or
data16
cmp
xchg
push
cld
mov
add
add
mov
pop
pop
mov
sti
sbb
rep
movsw
push
cld
movsb
loopw
cmp
out
lahf
ss
or
mov
shr
nop
fmul
mov
inc
mov
incl
cmp
jle
movb
cmpb
lds
push
push
xor
jg
sbb
fsubr
push
insl
inc
enter
sbb
mov
lret
add
movsbl
xor
fwait
in
adc
ss
push
mov
add
jb
and
push
cld
popa
out
leave
dec
je
push
push
pusha
or
jmp
test
lea
push
es
mov
push
sti
cmpb
rcll
loop
pop
sbb
add
mov
sbb
subl
or
fs
jb
mov
and
or
cmp
sub
sbb
xor
pushf
inc
negb
inc
and
mov
idiv
cmc
ss
mov
shll
xchg
adc
mov
lock
mov
rorb
jb
dec
ja
push
fs
rcl
xchg
or
sbb
rcrl
cmpsl
push
add
jb
add
jb
or
or
jnp
mov
jmp
or
jno
jmp
push
jmp
mov
jmp
adc
pop
adc
pop
adc
push
mov
jmp
adc
dec
adc
aas
mov
jmp
sbb
xor
jmp
mov
jmp
sbb
and
pop
mov
jmp
and
or
jmp
add
orps
push
mov
or
test
mulb
xchg
push
jmp
sti
repz
repz
iret
repz
sub
xor
iret
repz
dec
push
pop
pop
repz
repz
jno
iret
repz
jnp
test
repz
sahf
mov
mov
add
push
pop
or
and
or
or
push
movups
call
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
sub
cmp
jle
pushf
test
inc
stos
ss
dec
jmp
jge
mov
add
idivl
mov
jno
mov
sbb
xchg
push
jmp
sbb
inc
pop
jg
lea
push
pop
jae
loope
cs
push
push
jae
fbstp
sbb
pop
movsb
xchg
sarl
or
dec
sbb
sub
fwait
test
sub
sub
adc
inc
xor
and
out
push
push
or
jno
adc
pop
adc
sarl
jge
nop
pop
pop
sbb
fwait
movsb
jge
lods
jg
jmp
inc
push
push
insl
pop
pop
cmp
inc
or
jne
mov
push
ffreep
leave
bound
cld
test
lods
pop
push
or
repnz
push
fstps
dec
mov
je
push
mov
pop
sub
faddl
xorl
sub
or
sbb
add
clc
or
repz
add
push
xor
inc
adc
cwtl
xor
mov
std
dec
repnz
adc
je
or
sbb
xchg
adc
add
sub
mov
mov
xor
pop
mov
xor
mov
add
add
add
adc
jmp
icebp
sbb
add
mov
arpl
add
mov
aas
adc
or
cmp
mov
outsl
adc
lods
lahf
sbb
push
test
lock
push
jmp
mov
fcmovu
adc
jecxz
movsl
cltd
sub
mov
icebp
fwait
cld
push
xor
cmpsb
xchg
dec
jmp
test
xor
ss
ss
mov
xlat
sbbl
jne
mov
mov
test
push
jne
shlb
ret
cltd
js
rcrb
loope
mov
or
in
pushf
mov
mov
pop
mov
jne
and
cmp
jne
jno
aas
cwtl
hlt
add
aad
jbe
mov
xor
inc
or
push
mov
pop
or
xchg
dec
xor
pop
loopne
inc
cmp
xchg
adc
testb
std
and
xchg
push
add
out
je
dec
sahf
ret
inc
sub
pop
lahf
cld
push
clc
xor
nop
lock
je
xchg
clc
pop
cmp
cmp
push
xor
imul
push
fdivrl
lret
sbb
pop
xchg
cmpb
sub
inc
or
sbb
das
jmp
adc
cmp
test
mov
add
dec
orl
mov
and
mov
mov
je
xor
fisttps
and
xor
inc
testl
imul
dec
ds
mov
shll
clc
mov
mov
mov
and
push
sarb
xor
or
inc
call
cs
shrl
mov
push
push
push
mov
lds
pop
adc
add
push
movsb
cmp
pop
dec
adc
je
xchg
xor
test
xchg
subl
push
adc
int
push
in
jp
cmp
jo
push
push
cwtl
or
popa
mov
ja
inc
jge
gs
push
inc
mov
or
or
sub
add
test
cmp
mov
nop
jae
push
jmp
add
test
push
adc
add
ja
cmpb
push
fistps
insb
mov
lahf
add
leave
scas
shrb
jle
pop
xchg
fs
scas
jp
bound
stos
push
push
shrl
out
lods
rcrl
add
loop
stos
mov
movsb
into
sbb
cmp
out
mov
adc
das
mov
or
push
call
xchg
hlt
popf
or
movsl
mov
or
jmp
or
or
mov
add
dec
addl
shlb
cmpsl
mov
dec
sbb
stc
xchg
popa
pop
inc
ret
or
adc
call
addl
xor
mov
pop
leave
jo
mov
xchg
xchg
push
and
add
pop
repnz
insl
cmc
jp
push
repz
lods
das
nopl
icebp
add
push
enter
ret
mov
sbb
add
fstl
scas
cmp
sbb
pop
or
xchg
xor
arpl
and
outsl
push
data16
loopne
mov
adc
frstor
adc
add
pop
xadd
dec
cmp
jp
addl
push
fisubrl
xchg
sbb
dec
inc
jne
dec
clc
or
lds
xchg
sbb
nop
sub
hlt
xlat
or
loopne
mov
clc
inc
push
dec
mov
call
js
inc
and
jmp
pop
sahf
jl
ds
cwtl
mov
rorl
call
loop
mov
pop
inc
mov
int3
dec
xor
push
mov
push
push
dec
push
adc
cmc
pop
pop
mov
pop
or
ds
mov
icebp
inc
add
pop
inc
inc
push
mov
xchg
pusha
inc
fs
dec
mov
push
lret
je
enter
fs
outsb
sbbb
mov
cmp
mulps
mov
and
push
aad
inc
cwtl
lahf
cmp
pushf
mov
dec
rorb
push
test
lods
mov
test
mov
xchg
push
enter
inc
les
add
or
aaa
test
sbb
lock
je
mov
or
push
cwtl
add
adc
outsb
in
lar
mov
mov
sti
xor
mov
xor
xchg
popa
sub
je
jl
and
xor
or
push
int3
dec
dec
idivb
jl,pt
sub
lea
cmp
mov
add
mov
lea
or
and
imul
push
adc
fld
push
and
unpckhps
jmp
xor
and
cmp
or
jne
adc
fsubp
aaa
xchg
push
pop
jl
jmp
out
push
xchg
test
xchg
sbb
jns
jge
xchg
stos
sahf
mov
adc
jg
pop
sti
cmp
je
sbb
jge
xchg
sub
jge
inc
stc
dec
enter
adc
or
js
rorl
pop
movsb
mov
xchg
inc
mov
xor
das
sub
ss
je
js
addb
mov
sbb
adcl
xchg
das
cltd
dec
aas
sub
or
int3
ficoml
test
scas
andb
ret
sub
push
pop
loop
sti
jge
inc
push
insl
add
push
cmp
jl
cmp
jle
ret
or
pop
push
movsl
add
scas
loope
in
pop
inc
pop
add
dec
or
sbb
mov
hlt
mov
jo
xor
lock
sub
cmpsl
push
adc
ds
sahf
pop
or
pop
push
pop
pop
adc
adc
or
inc
ret
add
pop
cli
rclb
ficoms
inc
pop
inc
cmpsb
push
jbe
or
lea
or
imulb
bound
mov
cld
cmp
pop
jne
cs
jb
adc
test
mov
xchg
ret
loopne
and
xchg
add
dec
out
xchg
dec
ret
or
mov
pop
or
adc
lret
mov
daa
or
in
xchg
rcrb
and
push
stc
sbb
mov
pushf
rol
rol
jmp
test
push
les
dec
xchg
push
and
dec
sub
cmp
lods
rorb
mov
int
sbb
imul
lahf
loopne
addr16
lahf
test
mov
pop
push
rcr
pop
inc
push
mov
cmp
je
xor
jne
push
and
inc
sbb
add
fdivrp
adc
pusha
les
mov
sarl
sbb
lods
inc
sbb
ss
loopne
fwait
ret
xchg
js
add
test
outsl
insb
aaa
mov
adc
cltd
push
pop
call
jno
sbb
jno
sti
jne
shlb
adc
ret
lcall
jo
mov
pop
sbb
mov
push
jmp
xor
push
or
push
adcb
xchg
incb
jne
xlat
enter
jmp
inc
xor
test
mov
cmc
mov
xor
sbb
push
rcl
mov
scas
pop
cwtl
int3
ret
cmpsl
mov
xchg
imul
or
add
add
xor
dec
pop
push
xchg
push
sbb
xchg
fdivl
scas
cltd
or
je
sbb
aad
movsb
push
and
add
sbb
inc
sub
aas
push
push
out
and
push
xchg
adc
push
xchg
movsl
rcl
push
cmp
sbb
daa
cmp
lea
xor
ss
stc
outsb
adc
movsb
jno
out
dec
cmp
shlb
das
mov
inc
ss
inc
stos
add
adc
mov
push
mov
sbb
jle
decb
sub
std
decl
mov
or
and
sub
adc
pop
sbb
lds
pop
add
push
das
sub
xchg
or
clc
add
ja
xor
mov
push
sub
out
in
adc
insb
or
cmc
mov
and
and
into
cmp
jl
jbe
or
xor
jne
aas
fldl
push
aam
jl
movsl
mov
scas
pusha
insl
sbb
add
jbe
les
movsl
ljmp
mov
popf
or
or
mov
adc
cmp
adc
sbb
xor
pop
push
pop
fdivrs
jg
inc
inc
rolb
xchg
sub
sarb
lock
inc
out
scas
mov
push
mov
dec
aas
stos
xor
rorb
popf
popf
xor
lods
or
mov
shll
push
jle
lock
in
xchg
fiaddl
pop
popf
loopne
push
popa
or
sub
add
lret
and
lea
and
cmpsl
jp
mov
sub
and
insl
dec
sub
fcoms
mov
rolb
dec
adc
jle
push
xchg
and
sub
ds
and
push
push
mov
push
mov
and
and
sbb
inc
lea
mov
lea
sbbl
lock
inc
push
push
inc
scas
and
push
or
sbb
pop
cwtl
ret
iret
dec
lock
mull
inc
das
cs
iret
cmpsl
xchg
inc
daa
push
inc
sahf
dec
aas
push
add
xor
out
xchg
adc
cmp
das
sbb
cwtl
mov
ret
pop
es
add
mov
or
adc
add
fstl
fldz
fcomp
fnstsw
movsl
shrl
frstor
pop
fsubr
pop
faddp
xor
fstl
mov
notl
mov
addr16
add
adc
sbb
mov
lret
test
pop
hlt
xlat
hlt
das
dec
jg
pop
hlt
jl
cmp
leave
push
ret
push
lea
lods
fildl
hlt
fsubr
push
loop
and
xor
jne
mov
sbb
aam
sbb
mov
push
icebp
sub
fs
mov
imul
hlt
sti
pop
movl
pop
ret
jg
orl
inc
cs
push
cmp
and
xchg
dec
mov
lea
jo
and
gs
cmp
sbb
mov
mov
or
sbb
add
incb
mov
aas
dec
add
fadds
pop
adc
sbb
shl
add
add
dec
jl
fldl
inc
push
mov
fsubrl
test
dec
repz
and
or
mov
xor
loop
fimuls
enter
cld
fsubrl
loopne
ret
shlb
sbb
jmp
add
xchg
test
push
jno
or
fisttps
pop
std
jmp
in
inc
pop
inc
daa
movsb
xchg
adc
pop
loopne
leave
pop
sarb
cmp
pop
repz
inc
sub
xor
ss
sub
mov
test
mov
mov
adc
xchg
out
push
aam
mov
or
and
mov
xlat
push
cmp
sbb
jne
xchg
pop
movsb
sti
xchg
hlt
fldt
lods
add
nopl
pop
cwtl
push
add
out
popf
movsl
das
and
or
mov
cmpl
repnz
cmp
pop
dec
xchg
and
inc
pop
aas
push
jmp
add
xchg
sbb
push
ss
mov
pop
sub
xchg
ret
add
stos
int
adc
jb
aaa
aaa
mov
or
aaa
add
popa
push
mov
push
mov
sbb
ds
pop
inc
ret
in
lret
add
push
or
and
pop
jb
adc
ficoms
add
mov
lock
lods
adc
sbb
test
fmuls
push
add
push
lea
xchg
stc
push
mov
add
cmp
inc
adc
mov
sub
into
hlt
inc
mov
testl
pop
lea
sbb
dec
sbb
mov
test
lahf
mov
mov
mov
or
test
or
xchg
addr16
xor
cmp
sbb
add
sub
leave
dec
add
stos
xor
repnz
test
pop
lock
pop
aad
daa
lock
pop
pusha
mov
pop
sub
add
sub
out
test
mov
pusha
pushf
shlb
xchg
loopne
rcrl
mov
movsb
pop
or
xchg
and
fimuls
cmp
adc
insl
pop
and
test
add
fcmovnbe
or
push
add
or
stos
cmp
je
xor
sub
fs
jmp
xor
insb
push
icebp
and
cmpb
cmpb
cmc
sbb
mov
ja
or
xchg
xor
sti
cmpsl
dec
jmp
dec
test
adc
pop
xchg
and
sub
movsl
mov
inc
pusha
movsl
add
test
and
jbe
ret
nop
push
or
mov
outsb
add
iret
push
jns
jae
out
cmp
scas
sub
inc
mov
popa
pop
jbe
push
divl
xchg
push
adc
mov
push
mov
out
inc
add
cmpsb
cmc
pushf
mov
cmp
outsl
push
mov
dec
ljmp
or
mov
daa
inc
test
popa
jne
test
or
and
mov
rorb
call
inc
lahf
adc
xchg
xor
and
or
mov
mov
jle
loop
xor
add
sbb
iret
call
or
sub
inc
mov
adc
add
repnz
rcrb
inc
adc
aam
ljmp
jle
xor
mov
test
sub
maxps
pop
cmp
shlb
jl
std
push
cmpsb
sahf
pop
push
mov
dec
mov
ljmp
mov
adc
push
call
jb
insb
add
jno
jns
dec
cmp
sub
adc
or
jo
pop
mov
aas
leave
test
push
cmpsl
xchg
mov
mov
lock
inc
xchg
fiadds
decl
mov
inc
lea
and
xor
orl
movsl
pop
sbb
js
push
enter
pop
push
test
test
notl
push
mov
gs
adc
aam
or
fwait
mov
test
jle
dec
insb
mov
fidivrs
and
sub
or
dec
adc
push
and
xchg
iret
mov
and
orl
adc
dec
enter
shlb
adc
mov
or
inc
nop
xchg
faddl
mov
in
cmpsl
and
pop
in
xchg
dec
mov
nop
pop
mov
sbb
jo
bound
call
lahf
mov
lret
push
mov
cmp
xor
push
sub
lods
sub
or
gs
xor
dec
imul
jbe
mov
cmp
decb
add
into
addl
lock
add
xchg
push
pusha
call
and
mov
and
notl
push
inc
inc
add
imul
adc
out
mov
ror
jo
test
xlat
rcrl
rorb
outsl
lret
clc
push
in
add
ljmp
push
add
test
inc
xor
xchg
pop
push
adc
stos
test
push
aad
gs
sub
dec
out
andb
mov
movsl
rorb
push
bound
mov
cmpsl
adc
gs
lock
imul
pop
imul
or
mov
sbb
add
mov
mov
das
test
or
adc
sbb
test
in
and
hlt
push
xchg
cli
push
test
xchg
stos
xchg
xchg
or
scas
xchg
ja
or
add
rcll
xchg
pop
lret
xchg
adc
inc
loop
mov
push
push
xchg
mov
mov
js
xor
sub
je
insl
adc
push
jmp
cmpl
movsl
xchg
les
dec
or
aad
sub
call
addl
rcll
xor
movl
mov
xlat
mov
push
in
xchg
jg
add
nop
inc
mov
sbb
mov
test
pop
and
jae
xchg
cmp
gs
in
push
incl
xchg
add
in
jne
pop
add
add
sub
adc
shl
cmp
xor
mov
stc
sbb
ret
add
pop
pop
mov
pop
add
and
lret
pushf
sbb
rcll
fldcw
mov
add
testb
dec
fbld
mov
and
sub
fcompl
xor
fadds
or
dec
in
call
lahf
push
or
loop
adc
sub
fiaddl
incl
cmp
dec
cmp
es
sub
movb
pop
dec
jge
xor
stc
int3
pop
mov
add
xchg
adc
mov
pop
xor
mov
mov
shr
add
xor
mov
dec
sub
push
add
pop
inc
or
and
imull
pop
or
in
orl
push
les
adc
jne
xchg
push
inc
sub
push
sub
cwtl
jno
sub
pusha
xchg
and
xor
dec
xchg
adcb
dec
inc
rorb
add
inc
mov
aaa
mov
xchg
push
add
cmpsl
adc
xor
mov
test
mov
sahf
mov
adc
test
out
push
add
pop
imul
add
or
ficoms
arpl
sub
add
iret
xor
cmp
loopne
and
insb
xchg
aas
sub
sbb
pop
leave
and
dec
movsb
rclb
pushf
push
fdivl
jbe
dec
ret
inc
xchg
cwtl
adc
mov
insb
xor
add
js
out
xchg
xor
xor
add
inc
fdivl
lret
and
les
std
icebp
jmp
cmp
sub
add
push
test
mov
or
push
mov
adc
pop
aad
pop
stos
nop
jl
mov
pop
mov
jp
xor
add
jo
out
aam
aaa
sub
pusha
push
add
inc
mov
jb
jge
add
aas
movsb
dec
mov
or
scas
loopne
or
enter
repnz
add
lret
mov
xchg
lahf
adc
mov
pop
cmp
inc
push
test
arpl
insl
inc
imul
cli
add
sbb
hlt
push
idivl
call
push
andb
stos
setb
xorl
in
in
rorl
cmc
dec
jo
xchg
cmp
and
adc
scas
sahf
es
cmpsb
sbb
arpl
add
call
cmp
loopne
test
sahf
dec
push
push
adcb
je
stos
adc
cmp
sbb
inc
cs
in
adc
rcrb
popa
and
push
ljmp
mov
xor
mov
outsl
adc
popf
mov
add
sbb
fnsave
popf
daa
jns
call
add
add
inc
dec
cmp
jl
test
or
nop
sub
cmpsl
or
insb
js
dec
sbb
dec
cltd
inc
dec
sahf
hlt
xchg
xchg
lock
fcomp
mov
add
jle
or
movzbl
test
cmpl
rolb
sub
subb
lods
pop
test
sub
adc
dec
cld
xor
mov
xchg
adc
imul
js
jnp
add
sbb
pop
ds
popf
loope
or
popf
or
add
lahf
push
dec
test
add
inc
xchg
push
inc
dec
and
dec
adc
xchg
or
sbb
in
adc
jns
push
cmp
sbb
mov
mov
xchg
xchg
or
mov
sbb
jg
adc
xchg
jl,pt
push
xor
dec
xlat
hlt
or
xchg
adc
cmpsb
cmpsb
scas
popl
bound
hlt
hlt
sub
lods
mov
aaa
incb
fistpl
cmp
xchg
or
je
sti
test
mov
sbb
lea
stos
loopne
jo
les
js
or
fidivrl
jnp
ss
ret
push
test
jae
adc
or
call
aam
jne
fldenv
inc
fimull
mov
pop
mov
and
loopne
fwait
sti
mov
in
push
lea
push
jecxz
pop
js
jno
xchg
pop
pop
jl
or
and
add
loop
push
int
adc
gs
scas
pop
inc
and
or
push
mov
inc
pushf
nop
push
adc
or
adc
rcrb
or
clc
stc
mov
arpl
pop
jge
mov
mov
add
divl
lea
stos
mov
pop
and
adc
and
mov
mov
push
mov
pusha
or
loopne
dec
fistpl
ret
add
cmpl
lea
incl
pop
mov
in
cld
pop
dec
push
out
fldl
mov
es
hlt
xchg
xor
pop
inc
jbe
cmpsl
sbb
enter
mov
dec
cmp
insl
int3
loop
clc
cmpb
std
outsl
movsl
xor
movsl
les
mov
xchg
and
int
ret
inc
xor
xchg
push
push
push
in
and
dec
cmp
jbe
pop
and
adc
add
enter
arpl
clc
sub
rclb
mov
test
mov
xchg
movsb
xchg
pop
sub
push
cld
cld
clc
jl
fidivs
sbbb
inc
xor
std
dec
jno
lock
nop
mov
bound
adc
das
sarb
movzbl
and
dec
adcl
add
and
push
lea
pop
and
mov
je
xorb
and
xor
movsl
or
mov
jmp
daa
ret
into
push
mov
lea
outsb
adc
mov
pop
push
push
and
pushl
in
cs
pop
inc
pop
cmp
rorb
push
data16
in
sbb
lods
mov
push
test
push
cs
push
dec
xor
mov
xchg
movsb
cmp
or
mul
xor
pushf
and
inc
mov
inc
xor
loope
test
mov
adc
push
in
aaa
inc
nop
dec
and
shlb
sbb
jbe
test
mov
mov
cmp
insb
xor
std
and
add
cwtl
imul
fcompl
test
push
sbb
xor
mov
mov
jle
adc
fstps
add
sbb
addr16
pop
adc
sbb
sbb
xor
mov
and
xor
sub
mov
test
cld
xchg
xor
outsl
jns
or
xchg
sahf
out
sbb
mov
push
push
jne
in
mov
jl
push
hlt
nop
es
sbb
popf
and
enter
adc
out
add
pop
mov
push
mov
add
scas
sbb
push
fdiv
rol
movsl
fdivl
pusha
mov
push
mov
dec
das
push
add
inc
fmull
movsb
pusha
rol
into
testl
inc
pop
add
dec
sbb
loop
rorl
sub
xchg
adc
loopne
and
popf
pop
sbb
call
add
loopne
or
fadds
into
add
push
rolb
jecxz
and
pop
mov
mov
xor
jbe
or
xor
dec
fists
mov
js
push
pushf
mov
stos
inc
pop
xor
xchg
mov
out
xchg
js
and
cmp
xchg
mov
sub
ds
ret
add
lods
in
add
xchg
mov
pop
mov
dec
in
data16
fs
sub
push
fimuls
adc
lock
bound
mov
ja
xchg
or
test
jl
rcrl
xchg
dec
mov
fisttpl
fmul
sbb
jo
inc
jp
jg
sbb
xor
xor
pop
mov
or
and
adc
clc
jb
add
mov
rcrb
adc
movb
and
sub
and
sub
add
or
inc
or
adc
rcrb
push
rorb
clc
adc
jne
xchg
sub
ret
sub
mov
mov
cmp
sub
arpl
je
iret
data16
jae
out
fcoms
sub
aad
ret
jg
mov
enter
push
or
sub
repz
ja
lea
cmpsl
call
push
push
es
xchg
add
outsl
outsl
aaa
push
fbld
sbb
mov
adc
jp
lods
shrb
pop
ret
cmp
mov
sti
imul
push
jns
add
push
inc
inc
jmp
inc
fs
sub
xchg
jb,pn
pop
inc
cmp
ss
mov
mov
add
fisttpll
test
addr16
cmpb
repnz
or
sub
fimull
out
arpl
inc
mov
push
jno
add
dec
adc
je
test
cmpl
fistl
pop
xor
js
add
mov
xchg
pop
cs
shlb
sahf
in
test
inc
in
es
inc
xchg
dec
and
jmp
pop
pop
in
mov
repnz
sbb
lods
shl
subl
add
push
jmp
mov
movsl
shll
mov
dec
mov
inc
subl
and
push
sub
mov
mov
and
xor
push
or
cmpsb
mov
sbb
mov
or
push
cmp
aaa
push
loopne
mov
les
les
enter
movsl
sub
stos
jnp
in
mov
popa
adc
movsl
nop
lock
or
sub
lds
call
push
sub
dec
sbb
push
dec
clc
or
je
add
mov
lea
sub
or
sbbb
and
jo
sub
and
mov
inc
shrl
loop
cltd
push
mov
enter
outsl
sarl
pop
pop
push
sbb
push
cmc
push
push
aam
inc
rclb
and
mov
mov
jo
sbb
add
and
rdmsr
repnz
jge
or
or
fwait
xor
dec
add
push
add
jl
cmp
scas
and
std
mov
sub
in
push
lahf
je
inc
dec
xchg
mov
sub
jbe
mov
in
jne
ljmp
inc
xor
test
in
xchg
lea
xchg
pop
add
or
jns
das
xchg
les
or
pop
jp
jl
int3
insb
icebp
push
mov
cmpsl
push
loope
xlat
xor
dec
and
push
mov
cmp
out
clc
icebp
adc
loopne
jl
in
sub
inc
loop
adc
popf
insl
lods
mov
jl
int
je
repz
push
dec
scas
mulb
ret
jne
jbe
inc
iret
clc
xor
cwtl
push
insb
inc
jle
loope
inc
loop
les
imul
xor
mov
enter
test
mov
mov
test
mov
testl
mov
bndstx
mov
iret
sbb
mov
incl
mov
xor
shr
xor
out
nop
loopne
test
xor
jb
pushf
daa
js
mov
loop
sub
pop
push
filds
jg
movl
fmull
cmp
jbe
add
add
mov
mov
mov
out
and
or
inc
push
lcall
sbb
add
out
and
push
xor
stc
dec
inc
enter
nop
or
cmp
mov
and
mov
inc
or
pop
push
faddl
push
adcb
push
call
mov
ret
scas
mov
and
loopne
cmpsl
and
cli
jo
jne
inc
negb
pop
lods
mov
test
adc
jp
sbb
iret
jne
push
or
jb
lahf
push
mov
or
add
test
enter
into
ss
push
movsl
mov
mov
ljmp
mov
and
lahf
add
and
xchg
out
push
or
push
dec
mov
inc
lret
push
cmp
add
idiv
xor
sti
popa
mov
rcrb
pop
call
out
int
mov
inc
test
lcall
or
mov
aas
sub
arpl
and
lods
daa
jp
inc
and
mov
lea
sbb
or
cmp
xchg
dec
adc
mov
imul
add
inc
insb
rcll
shlb
adcb
add
add
loopne
add
in
cmp
fs
test
pop
add
add
xchg
mov
push
or
xchg
add
add
push
or
inc
sahf
inc
and
addb
pushf
and
pusha
fwait
lea
sub
xor
js
xchg
and
test
dec
xchg
add
push
rclb
xchg
inc
xchg
jp
and
mov
sub
inc
xor
push
scas
or
pop
jo
lods
add
mov
and
cmp
or
aam
add
inc
xchg
mov
jge
jno
or
in
inc
enter
and
push
and
or
adc
or
jb
xlat
loopne
fildl
xchg
or
or
mov
mov
loopne
adc
sarl
test
xchg
out
lcall
and
gs
dec
mov
push
push
mov
loope
pop
into
xor
or
push
mov
loope
stos
lock
inc
int3
xor
dec
add
dec
push
adc
leave
shlb
xchg
ret
leave
iret
add
dec
clc
and
cltd
mov
adc
aaa
mov
fisttps
lds
sbbl
dec
sbb
push
lds
and
adc
js
sbb
xchg
std
push
insl
sub
repnz
dec
sbb
xchg
pop
aas
pop
sbb
stc
loope
xchg
mov
mov
bound
mov
jns
and
and
fs
and
pop
push
je
sbb
push
or
pop
les
sti
jo
ror
pop
dec
and
iret
and
add
xor
movl
ds
jge
push
lods
pop
sahf
ret
daa
out
pusha
xchg
push
cwtl
sub
push
pushf
dec
dec
les
stos
cmp
xor
mov
mov
lret
repz
add
and
cwtl
mov
dec
mov
and
ljmp
sub
mov
test
pop
pop
mov
mov
es
adc
dec
and
les
imul
enter
xor
xor
fdivrs
add
imul
fadd
ja
in
orl
fists
scas
movsb
push
mov
or
popa
adc
icebp
aas
imul
cld
push
push
and
xchg
dec
adc
adc
call
test
fcoml
jns
push
dec
fstps
aam
sub
mov
dec
lods
imul
pop
and
dec
mov
xor
in
fsubrp
add
xchg
loopne
loopne
sub
movsb
or
inc
insl
sahf
into
imul
scas
sti
pop
xchg
ss
frstor
mov
imul
stc
call
xor
cwtl
mov
push
icebp
dec
dec
xchg
add
push
jge
test
pushf
orl
sbb
inc
sub
mov
cmp
dec
xchg
cmc
inc
bound
dec
xlat
std
mov
push
dec
push
bound
ret
or
pop
inc
mov
xchg
xor
add
mov
sbb
pop
adc
inc
and
jmp
in
test
xchg
hlt
sub
add
and
fadds
pushl
inc
adc
pop
inc
fcomps
xchg
jo
andl
push
xlat
ljmp
mov
pop
push
mov
pop
adc
rsm
fldcw
xchg
and
movsb
inc
dec
cmp
popa
and
and
pusha
flds
nop
dec
mov
inc
lcall
stos
pusha
xchg
adc
xor
shrl
pop
bnd
jp
mov
adc
in
jne
sub
cmp
je
js
mov
sbb
add
ja
call
je
or
and
dec
cmpsl
ret
gs
lds
int3
cmp
jmp
addl
daa
arpl
push
adcb
int
fsts
lea
icebp
lds
out
fisttps
mov
xchg
jb
pop
push
scas
fcompl
jmp
and
fidivl
fstpl
icebp
mov
scas
in
sarb
fs
daa
call
push
aaa
mov
call
or
or
dec
adc
xchg
in
popa
lds
adc
or
or
movsb
cmp
push
add
dec
add
daa
adc
in
imul
das
mov
jae
or
push
insl
or
add
enter
cmp
adcb
xor
mov
push
popa
stos
subb
cmp
add
mov
add
or
cmp
movsb
xchg
xchg
dec
js
mov
icebp
daa
cmp
test
lock
inc
mov
push
daa
cli
es
mov
rclb
add
push
mov
push
pushl
mov
xchg
push
sbb
sub
out
arpl
pop
mov
les
inc
xor
xchg
loopne
sbb
cmp
and
lods
mov
or
dec
andl
push
or
test
lea
lds
std
mov
mov
fsubl
xlat
and
inc
xchg
into
add
imul
push
jmp
push
addr16
mov
xorb
xchg
add
jbe
decl
inc
adc
ret
jecxz
test
lods
jl
pop
add
jmp
and
adc
test
dec
adc
stos
clc
push
xchg
push
or
add
and
add
stos
out
add
mov
push
inc
inc
pop
mov
in
nop
test
cmpsb
mov
or
scas
add
pop
aaa
test
push
push
fstl
xchg
add
mov
mov
int3
lock
in
pop
fldl
mov
rolb
and
push
or
iret
sub
inc
xchg
jb
mov
sbb
add
jle
stos
add
cmp
pop
push
add
pop
push
out
cs
jmp
call
inc
push
push
sbb
cld
test
aam
sub
fwait
test
cmc
add
push
call
xchg
sbb
dec
add
and
test
repnz
pop
inc
pop
or
leave
or
hlt
push
add
hlt
sub
dec
jae
dec
push
movb
and
xor
outsl
push
mov
lods
dec
sub
shll
sbb
xor
jno
push
lret
lock
push
push
jge
adc
cmp
add
add
push
hlt
mov
jl
int3
popf
int3
pop
xor
rcl
push
and
inc
add
lahf
rcrb
pop
or
jmp
jge
jns
dec
cmp
and
js
imul
ss
or
push
dec
out
xor
pop
lret
jnp
mov
loope
push
mov
pop
xchg
pop
push
xor
cmp
push
lods
push
outsb
dec
dec
imul
loopne
out
sarb
imul
pusha
adc
sbb
push
std
mov
je
mov
adc
subb
sbb
ljmp
jl
sti
and
or
push
test
or
add
xor
mov
rorb
js
sti
je
push
or
push
push
enter
push
dec
orl
adc
aas
shlb
jmp
push
fwait
in
jmp
lods
jb
xor
int3
adc
pusha
cmpsb
adc
loop
push
imul
mov
dec
add
xlat
imul
nop
mov
mov
pop
sbb
xor
in
add
repnz
or
cmp
push
stc
lret
dec
enter
dec
or
cmp
or
pop
adc
pop
mov
lret
mov
fmull
je
push
jmp
push
repnz
lods
push
xor
push
loopne
push
out
je
ror
and
adc
mov
push
popa
mov
fmulp
call
scas
int3
dec
inc
push
cmpsb
sahf
add
add
jmp
mov
jmp
dec
pop
js
add
xchg
movb
dec
sbb
pop
std
adc
dec
ss
nop
push
hlt
jge
sbb
and
add
test
dec
cmp
and
out
iret
mov
or
cmp
pop
movsl
or
or
imul
sub
imul
pusha
mov
stos
orb
dec
add
or
or
add
loopne
sbb
cmp
push
loopne
aad
in
push
fcmovnu
dec
fimull
pop
mov
push
add
arpl
stos
add
mov
ret
repnz
rolb
imul
cmc
ret
imul
int
xchg
stos
mov
push
add
rol
mov
cmpsb
faddl
adc
mov
jbe
or
andb
movsb
gs
aam
pop
mov
mov
push
fdiv
cmp
or
or
das
and
cmp
jo
daa
xor
ja
push
xor
stos
sbb
sub
jae
into
xor
xor
lods
and
cmp
jo
pop
lea
hlt
push
in
dec
pusha
daa
or
mov
decl
mov
ror
xor
shr
xor
sub
jnp
mov
pushl
repz
xor
add
add
add
mov
ror
repz
or
mov
and
not
and
xor
add
add
jb
fistpl
outsb
sub
jbe
add
push
mov
ror
cli
push
xor
add
xor
and
and
xchg
add
or
push
aam
xor
and
push
fs
sub
sub
fmull
push
push
or
xlat
ret
sbb
sub
rolb
testl
hlt
add
xor
fsubr
orl
in
or
push
xor
sub
jae
stc
ljmpw
ret
shr
xor
jae
add
push
xor
xchg
xchg
cmpsb
jb
loopne
xor
and
xor
in
call
in
shl
in
add
cmp
bound
push
bound
add
adc
aaa
sbb
add
ret
test
call
loopne
push
nop
cmpsb
shl
call
mov
loopne
xor
pop
cmp
aam
cmp
push
xor
cmp
lret
or
int3
into
fildl
sbb
add
in
push
xor
and
and
lahf
neg
jne
out
iret
or
xor
lcall
push
test
adc
es
adc
inc
jo
mov
push
jo
ficoms
sub
mov
lahf
test
xor
inc
adc
push
cld
rol
xor
jne
mov
filds
cltd
cmp
xchg
mov
inc
fadds
pop
jbe
call
or
ret
lret
push
clc
jp
cld
jo
xor
xlat
add
gs
fdivrs
lcall
call
in
rolb
icebp
ret
cld
lret
inc
mov
lods
push
or
xchg
clc
jo
cli
movsb
inc
jo
stos
adcb
sbb
aaa
cmp
test
call
in
inc
inc
shr
shlb
sbb
push
roll
xor
shlb
add
inc
lcall
in
add
lahf
jo
add
imul
inc
and
dec
imul
add
adcb
in
push
xor
es
lcall
adc
push
push
add
jae
push
pop
and
int
pop
pop
push
test
mov
sub
add
rol
movsb
sbb
push
or
or
or
add
xchg
and
sub
xchg
movsl
fcoms
stc
enter
andl
add
fs
adc
jb
add
push
imul
xor
mov
adc
icebp
inc
mov
orb
jne
aad
dec
xchg
fmuls
adc
imul
fidivs
push
sbb
sub
lock
jno
js
lock
push
aas
pop
add
sub
mov
rclb
rolb
inc
and
loopne
pop
dec
lea
rolb
aas
cmp
pop
cld
sub
mov
insl
loop
xor
pusha
adc
loopne
enter
add
push
adc
adc
mov
fwait
xchg
or
rol
and
mov
adc
mov
sbb
in
push
add
jbe
jae
mov
sub
or
mov
fidivrl
add
sub
sub
pop
out
out
sarb
mov
ret
dec
or
mov
outsb
add
pop
add
add
add
lock
jl
sub
mov
out
or
cmp
jbe
or
test
adc
fs
adc
enter
fwait
in
sub
jae
push
pop
fadds
rep
or
fildll
and
sbb
jbe
or
mov
push
pop
loopne
ror
mov
mov
xchg
or
xchg
ljmp
mov
mov
xchg
adc
mov
imul
inc
and
repnz
push
push
sbb
imul
inc
sbbb
dec
dec
lea
add
mov
add
or
outsb
fdiv
sti
aad
repz
push
xchg
aas
fsubs
inc
mov
inc
in
inc
movsl
jno
pop
or
popa
push
movb
loope
xorl
scas
adcl
les
loope
rorb
stos
adc
mov
add
cmp
inc
mov
mov
xchg
test
in
jae
mov
andl
add
or
mov
xchg
lock
or
dec
add
dec
inc
pusha
mov
mov
fwait
call
jecxz
cmp
shll
orb
sbb
rclb
push
arpl
jle,pt
and
dec
push
or
pusha
ljmp
mov
and
sub
lret
inc
and
inc
adc
mov
mov
movsb
pop
ret
dec
and
pop
or
in
xor
mov
push
les
adc
fildll
mov
mov
inc
popa
sub
adc
cmc
push
mov
push
mov
pxor
add
push
xor
jmp
sbb
fwait
test
inc
cmp
sub
cmp
fldt
insb
pop
aaa
pusha
mov
adc
and
add
cmp
stos
and
sub
mov
xchg
loopne
jae
mov
dec
jle
and
adc
es
fisubrl
pop
push
jecxz
adc
cwtl
push
enter
add
mov
adc
push
movl
sbb
in
emms
movsb
sbb
mov
ret
add
xor
mov
lock
sub
dec
ljmp
jle
imulb
xchg
cmp
adc
and
push
mov
xchg
push
lahf
push
or
aad
ret
pusha
sub
cmp
scas
test
xor
and
jecxz
xor
shll
xor
push
dec
loope
jg
mov
dec
dec
enter
and
and
and
ds
sbb
addb
pushf
loopne
sbb
adc
xor
movsl
sub
sub
jo
add
mov
pushf
mov
jmp
inc
lock
add
dec
std
xor
or
testb
pop
outsl
in
outsb
dec
push
dec
mov
and
insb
loopne
or
inc
push
xchg
lcall
test
popf
mov
adc
cli
add
cmovne
push
mov
xorl
adc
mov
add
sbb
add
pop
add
gs
outsl
lret
mov
fisttps
scas
cmp
and
mov
cmp
pusha
and
daa
stc
pop
pop
dec
add
xor
sbb
xor
push
push
and
out
mov
or
ds
add
mov
dec
cmp
sub
adc
or
fwait
test
sub
push
addr16
and
fiadds
add
push
jl
jno
pop
cmp
xchg
adc
mov
inc
sbbl
xorl
and
ret
add
adc
movsb
lods
and
jb
out
xchg
das
push
fdivs
push
dec
out
jge
fdivs
popa
xorl
pop
hlt
out
adc
xor
nop
out
mov
xor
and
nop
add
cmp
xchg
filds
xlat
mov
or
push
push
mov
dec
push
mov
js
aas
or
mov
mov
or
dec
add
inc
mov
mov
pop
jne
and
fmuls
ljmp
ret
out
fistl
push
pusha
cltd
addl
push
pushf
pop
mov
imul
and
mov
inc
add
push
jb
or
push
xor
lock
cld
sbb
push
sar
mov
push
push
or
inc
add
push
jae
push
xchg
xchg
mov
cmp
jmp
les
cld
cli
pusha
or
push
je
push
insl
and
stos
sbb
mov
insb
mov
movsw
je
nop
ret
mov
fwait
lods
jbe
fidivl
pop
mov
bound
mov
push
sbb
push
jns
nop
ret
setle
jns
je
push
fsubrl
or
jnp
or
clc
inc
xlat
sahf
ljmp
and
inc
orps
mov
gs
outsl
popa
cmp
ret
lret
ret
push
mov
aad
stos
loopne
pop
add
inc
and
jne
adc
mov
and
dec
add
jae
or
lods
mov
adc
or
sbb
xchg
lcall
rcrb
jnp
stos
lods
xchg
decb
sarl
aaa
fadds
ror
jbe
sub
add
add
xor
xor
push
pop
push
pop
sub
adc
or
cld
sub
adc
cmp
xchg
ds
xor
add
imul
push
cmc
dec
pushf
sub
leave
negl
push
dec
add
inc
push
addr16
adc
jmp
pop
in
and
pushl
push
rcrb
movsb
xor
insb
dec
push
sahf
lret
movb
lret
sub
movsl
add
xor
adc
hlt
sub
clc
or
outsb
push
xor
and
sbb
ss
insl
add
mov
jno
pop
and
push
inc
jbe
fimull
jbe
fiadds
jb
dec
and
mov
popa
shl
push
in
mov
ror
dec
xor
dec
sbbl
xchg
cmpl
outsl
add
je
cmp
push
dec
push
mov
clc
lds
push
mov
mov
subl
push
fdivrs
add
or
or
ret
and
pslld
sbb
mov
pop
aas
sqrtps
cmp
ja
incl
ja,pt
ss
cmp
jb
mov
movlhps
adcb
mov
xchg
jp
inc
or
mov
in
frstor
adc
or
jmp
or
stc
addr16
mov
ljmp
push
insb
das
dec
xchg
adc
faddl
nop
lods
cs
sti
sub
ret
dec
lahf
mov
xchg
dec
xor
enter
sbb
xchg
loope
pushl
xchg
mov
dec
xor
pop
ret
int3
jmp
push
xchg
or
aaa
pushf
dec
mov
mov
sbb
add
adc
cmp
add
add
mov
daa
loop
or
nop
mov
sub
jmp
jg
int3
mov
mov
inc
cmp
imul
cs
inc
cmp
mov
movb
call
adc
fstpt
sub
movzbl
adc
mov
pop
cwtl
xor
mov
jne
shlb
or
out
mov
addl
je
call
adc
fs
or
lahf
out
adc
pop
pop
dec
add
add
xchg
sub
add
add
jge
je
ret
add
pop
mov
push
or
pop
push
sub
jnp
lea
and
stos
xor
inc
cmp
jl
cmp
jmp
mov
mov
or
cmpsb
push
xchg
fidivl
ret
push
xor
or
push
xlat
in
sbb
inc
dec
and
adc
push
push
add
xor
sbb
jle
fdivl
mov
pop
lock
xor
xor
pop
ret
push
das
sub
or
push
or
movsl
add
cltd
sbb
out
ret
and
mov
cmp
aaa
push
sbb
pop
lea
jecxz
and
and
inc
dec
dec
adc
and
cmp
sbb
mov
pushl
inc
mov
push
mov
push
lea
stos
daa
xchg
add
movntps
sysret
xor
mov
mul
dec
mov
cmp
jbe
mov
pop
mov
xor
mov
leavew
hlt
push
add
or
add
loopne
in
ljmp
loope
and
add
mov
enter
shl
out
xchg
test
shl
shl
xor
mov
mov
mov
adc
movsb
mov
inc
lock
add
jne
inc
into
jl
jge
lcall
push
fidivrs
roll
ja
add
shrl
pop
adc
add
fisubrs
dec
adc
mov
dec
jo
adc
or
mov
adc
rorb
push
mov
jge
leave
orb
or
lock
mov
inc
addb
inc
or
inc
cld
cmp
xor
jno
loopne
dec
mov
push
mov
push
dec
je
js
std
jl
mov
adc
test
adc
or
ret
icebp
or
sahf
sbb
xor
inc
push
xchg
shrl
repnz
jbe
sub
xor
es
fs
icebp
cmp
nop
adcl
aam
sbb
pop
mov
inc
jp
rcrb
mov
pop
stos
push
mov
inc
fimull
add
push
outsl
push
loopne
or
pop
cltd
sub
ret
jae
adcb
adc
ja
add
add
xchg
or
and
in
mov
sbb
and
ficoms
andb
sbb
or
popa
mov
dec
and
shlb
xchg
mov
add
push
fidivrs
dec
roll
push
push
adc
cmpsb
sub
fs
jno
add
aaa
inc
adc
es
std
dec
sub
add
aas
mov
ret
adc
add
push
stos
push
fwait
add
sbb
inc
std
sub
js
add
call
das
add
int
inc
movsb
fnstsw
pop
mov
lods
sarl
sbb
adc
add
adc
out
movsb
or
inc
and
dec
test
cmp
aam
push
dec
test
pop
push
ret
adc
pop
jbe
dec
lods
jno
jecxz
nop
imul
in
sbb
mov
outsl
push
inc
jmp
sbb
imul
jmp
stc
lods
cmpb
add
lcall
loop
push
and
loopne
shll
js
adc
faddp
xchg
xor
pop
or
mov
inc
mov
sbb
mov
popa
and
adc
pop
ret
pop
sbb
push
or
pop
jmp
xchg
icebp
add
adc
push
lea
or
push
cmp
xchg
add
sub
xorl
cmp
iret
rorb
mov
stc
ljmp
sub
jne
test
int3
pusha
dec
push
adc
dec
sbb
cmp
cltd
int3
nop
out
notl
pop
or
mov
add
adc
sub
lret
cmp
sbb
int
mov
jp
dec
mov
stos
jecxz
jmp
pushf
out
mov
or
loope
or
inc
xor
sub
and
pop
push
pop
inc
mov
sub
out
mov
adc
out
push
ret
and
test
xor
cmp
and
clc
call
cwtl
xor
jp
sbb
out
fistpl
add
mov
or
sbb
fidivl
mov
mov
or
inc
xor
pop
xchg
roll
push
fsubs
ror
popa
cmpsb
jo
clc
je
js
and
adcl
push
in
push
das
hlt
lret
addb
mov
loopne
jg
icebp
cmpl
fisttpll
daa
stos
loopne
pop
outsb
add
or
cmp
pop
pop
mov
pop
push
pushf
lods
outsb
outsl
pop
push
push
push
adc
jmp
or
jmp
into
dec
bound
sbb
mov
adc
incb
es
and
lods
test
bound
addb
or
push
cmp
dec
adc
cmpl
jne
sbb
xlat
lds
or
xchg
int
enter
push
inc
add
cmp
sub
arpl
mov
inc
cld
add
cmpl
xor
cmp
jle
pop
inc
daa
pusha
into
and
outsb
sarb
nop
jne
and
in
sub
sbb
cmp
pop
popf
pop
mov
cmp
add
pop
push
loopne
inc
jo
push
insl
scas
imul
das
pop
push
inc
cmpsb
stos
test
jmp
and
jl
jne
repz
imul
es
sub
push
movsl
in
push
mov
insb
mov
or
hlt
push
insb
test
jg
inc
or
or
jo
add
pop
cmpsb
sub
pop
cmp
inc
aas
or
jg
jl
movsb
nop
sub
inc
jo
jne
cmpl
mov
and
jne
out
add
dec
ret
cmpsb
pushf
xchg
mov
push
fistpll
jge
jecxz
add
add
call
xor
arpl
movl
or
mov
sub
push
mov
sarl
sbb
or
mov
add
cli
testb
je
cmp
mov
push
add
push
add
push
cmp
mov
jmp
mov
inc
lret
cmp
jne
push
adc
add
out
out
shll
add
mov
sub
int3
mov
popa
loopne
or
mov
or
sbb
lock
adc
jae
out
aas
js
push
sbb
xor
add
sub
sub
jae
dec
and
into
fsts
pop
push
jmp
call
ret
or
adc
in
sti
jle
xor
das
jg
add
or
orl
push
xchg
mov
jge
add
inc
orb
mov
adc
sub
add
mov
jl
test
test
push
sbb
sbb
push
push
mov
data16
sbb
or
andb
mov
dec
dec
mov
cmpb
cmp
in
or
cld
push
push
add
int3
out
fcoms
sbb
xlat
sbb
pop
andb
push
adc
mov
jge
mov
sbb
add
ljmp
inc
adc
push
rorl
scas
loope
inc
sbb
sbb
mov
repnz
roll
add
nop
sbb
pop
cmpb
leave
jmp
lea
push
imul
sbb
mov
or
inc
loopne
or
bswap
lret
into
jne
mov
mov
cmp
pop
or
inc
mov
stc
jmp
fdivp
jge
sbb
dec
xor
lret
jmp
push
rorl
pop
xor
sub
xchg
xchg
inc
xchg
push
push
fcompl
or
pop
push
jb
shl
sub
cmp
jne
push
xchg
shll
fcmove
addl
xchg
add
push
or
rcll
pop
adc
xchg
icebp
jae
aaa
les
jae
not
adc
push
shll
sub
mov
dec
shlb
ret
rcrl
jo
outsl
or
xchg
mov
adc
ja
sbb
jecxz
adc
xorl
hlt
loopne
xchg
dec
add
sub
popa
jl
push
mov
lahf
enter
out
mov
test
popa
addb
mov
adc
lea
in
mov
push
ja
adc
inc
inc
or
mov
and
xlat
loopne
ds
push
cs
test
pop
mov
mov
xor
fcomp
or
adc
jno
shrb
popa
mov
add
clc
iret
mov
and
add
dec
jle
and
add
and
add
add
mov
in
xor
pop
add
jo
add
inc
cld
jb
test
mov
or
in
lcall
add
int
imul
dec
push
cmp
mov
and
and
std
cmp
or
jne
lods
sti
sbb
and
lret
sbb
movsb
push
leave
mov
mov
sub
mov
shrl
test
mov
bound
sub
push
mov
sbb
adc
pusha
mov
push
or
mov
cmp
jp
cld
pusha
dec
adc
mov
mov
inc
adc
in
xorl
add
cmovge
mov
loopne
cmp
insl
loopne
ljmp
or
xor
pop
and
or
mov
add
sub
and
sub
popa
fisttpl
sub
push
popf
mov
adc
rclb
int
push
and
stc
and
test
sub
scas
adc
push
mov
and
cmp
pop
inc
or
rcrb
push
inc
mov
popl
jo
loopne
jbe
dec
loop
aam
sti
push
ret
add
insl
loopne
mov
xor
adc
push
faddl
xor
or
dec
popa
jmp
xchg
nop
xchg
rcrb
test
pop
add
cmp
pop
and
pop
in
dec
mov
xchg
dec
dec
pop
rcrl
sbb
cltd
sbbl
or
pop
fisubl
fs
push
xchg
xchg
ja
xlat
dec
add
push
xor
pop
loopne
and
notl
sub
mov
mov
repz
mov
clc
push
push
lods
mov
dec
jmp
aaa
adc
cmp
call
xor
xor
icebp
inc
insb
adc
push
adc
xchg
cmp
out
mov
addb
insb
cmpsl
fwait
mov
sub
dec
push
ds
sarb
les
std
adc
ss
movl
test
jns
fwait
sub
sub
lock
sar
xor
movsl
out
shl
pop
mov
push
adc
fists
pandn
fiaddl
push
dec
sbb
sub
push
xchg
or
dec
fs
push
mov
sbbl
pop
pop
jb
movb
sahf
adc
or
repnz
and
or
and
or
dec
jnp
pop
outsb
dec
inc
fistl
mov
lea
jo
mov
out
jb
ss
add
stos
jmp
in
mov
movsl
xchg
push
mov
adc
fisubrl
dec
push
add
xchg
je
pop
push
or
ret
add
xor
jbe,pn
rolb
or
outsb
xor
sbb
loopne
adc
stos
mov
loop
jl
movsb
or
aad
sbb
and
pop
clc
scas
es
inc
inc
repnz
in
pop
clc
jne
sub
lahf
sub
daa
shll
icebp
xor
orb
inc
xchg
ret
je
mov
call
ja
add
out
mov
daa
mov
cmp
push
pop
jp
bound
push
mov
add
pop
hlt
push
je
inc
xchg
jne
fisubrs
cmp
inc
repz
sbb
popf
in
push
mov
push
cltd
les
push
pop
xor
adc
ret
adc
js
sbb
mov
movsl
or
cmp
and
jne
je
jmp
sbb
loope
or
push
dec
sub
loop
cmp
sbb
jns
dec
push
jno
add
rol
add
sub
cli
jg
jmp
and
xchg
int3
mov
xchg
cmp
xor
dec
nop
pop
icebp
jnp
xor
bound
dec
mov
or
aaa
mov
scas
pushf
fwait
push
dec
andl
test
leave
dec
inc
inc
pop
movl
orl
test
sub
pop
xor
jae
rclb
roll
ds
and
dec
jl
mov
and
sub
mov
jb
in
js
and
inc
jmp
mov
add
jnp
jmp
adc
adc
dec
insb
sub
cld
ss
jb
loop
dec
aad
pop
in
pushf
push
and
dec
mov
push
push
push
or
push
loope
ret
adc
dec
add
shrb
dec
rcrb
insl
and
xor
mov
les
jmp
je
push
sbb
xor
mov
sbb
adc
mov
sarb
xor
in
je
xchg
pop
ja
dec
je
push
rol
mov
xlat
fcomps
xor
dec
shr
or
jbe
inc
xor
lds
and
sbb
jle
push
ror
xchg
pop
out
je
movl
ret
and
adc
xchg
sbb
add
adc
sub
add
inc
jle
shlb
push
fcompl
js,pt
xor
sub
add
shrb
cmpsl
jnp
mov
jmp
shll
jle
add
and
sub
scas
fst
imul
and
pop
aad
or
fnstcw
xor
and
clc
jg
fistpll
dec
test
jmp
movq
movaps
fiadds
jae
xor
jle
xor
test
ror
test
insl
and
and
lret
or
out
popa
sbb
jg
je
ret
sbb
outsl
adc
jnp
mov
mov
mov
add
adc
push
ss
ja
fdivrp
add
repnz
divb
mov
mov
mov
or
pop
enter
mov
jle
ret
adc
dec
sbb
push
fistpl
and
fcmove
mov
loop
adc
inc
or
sbb
xor
push
addl
pop
incl
rcll
pop
call
adc
mov
push
push
ret
jge
mov
jge
push
loop
ret
jge
pop
test
or
mov
cld
fisubs
and
jle
iret
jb
pop
add
push
clc
and
fmul
icebp
add
imull
sub
rorl
jmp
addl
mov
and
lret
jo
push
rep
mov
dec
ljmp
fstps
lea
lret
or
mov
mov
aaa
outsb
adc
inc
xchg
or
imul
popf
xchg
cmp
sbb
dec
push
push
roll
mov
pop
adc
jb
repnz
stc
repz
push
pop
and
xor
sbb
dec
pop
pop
mov
or
call
adc
or
jne
pushl
rep
jmp
int3
mov
cs
jb
scas
add
xor
fmul
test
lea
push
mov
sub
ds
or
and
dec
pop
mov
ja
insb
mov
or
scas
adc
mov
push
pop
pusha
mov
add
inc
add
add
jmp
fadds
rorb
enter
repz
mov
mov
mov
jns
out
call
out
sahf
out
hlt
hlt
clc
clc
mov
lea
lock
iret
imul
push
sbb
ret
ss
int
cmp
cmp
roll
push
xchg
sub
lea
jl
cld
or
lret
or
nop
xor
push
adc
inc
xchg
daa
stc
divl
lret
xor
movsb
push
enter
mov
jl
mov
outsb
dec
gs
add
outsl
sub
push
add
nop
dec
dec
addr16
add
inc
sbb
sahf
mov
iret
repz
push
push
pop
fs
iret
repz
je
xor
sbb
sbb
repz
adc
adc
repz
repz
or
add
dec
enter
or
lahf
mov
add
pop
push
mov
ja
add
and
jbe
mov
cmp
movsb
mov
test
mov
mov
ffreep
jne
scas
and
scas
cmp
jnp
jg
push
mov
test
je
push
cltd
rolb
push
push
add
inc
movsl
bnd
pop
mov
inc
inc
into
jle
mov
jmp
pop
sbb
fistpll
je
mov
mov
inc
jmp
outsl
cmp
jne
mov
jmp
inc
stos
xchg
ja
loop
sbb
leave
xor
and
pop
inc
pop
and
pop
xchg
cmp
inc
fidivrl
pushf
lock
sbb
je,pn
cmpsl
xor
adc
sarl
mov
push
pop
movb
sbb
int
or
and
hlt
xchg
and
je
lock
aaa
pop
shlb
push
inc
pop
mov
fmuls
js
dec
sub
in
outsl
jne
xchg
cmp
cmp
and
lcall
fadds
adc
inc
mov
xor
mov
push
push
cld
mov
mov
or
adc
jne
inc
cmp
inc
xor
call
adcl
sbb
cld
inc
inc
lcall
adc
pop
sub
adc
and
adc
inc
sbb
inc
dec
pushf
add
pop
enter
cmp
cmp
pushf
es
lret
jns
lret
arpl
dec
adc
mov
add
push
push
lret
fcmovb
dec
pop
aam
adc
or
and
or
sub
or
mov
out
pop
andl
mov
sarb
cmp
movsb
mov
cmp
dec
add
adc
add
enter
out
xchg
fistps
ret
jge
shl
fcmovbe
fdivp
shlb
dec
leave
sbb
or
or
inc
pop
cmp
jle
mov
mov
daa
inc
push
rol
inc
inc
cmp
aam
inc
mov
cwtl
sbb
xchg
push
pop
out
jg
jmp
jnp
test
test
icebp
mov
shlb
jnp
mov
sub
int
dec
scas
nop
cltd
inc
mov
seta
and
rclb
cmpsl
daa
aaa
or
pop
out
testb
ret
cmpl
or
mov
jnp
push
repnz
add
jg
rcrb
sub
pop
inc
xor
mov
aad
cld
xchg
orl
and
and
popf
pusha
or
arpl
sbb
and
add
sahf
jp
push
mov
push
or
ja
test
pop
or
sub
dec
pop
jle
loop
jecxz
jmp
incb
clc
xchg
cli
mov
movb
lea
cld
cbtw
int
fmuls
lods
and
or
add
jmp
or
mov
inc
outsl
push
ds
jbe
mov
push
cld
jb
lock
mov
adc
jb
into
adc
fstpt
lahf
mov
dec
mov
mov
dec
dec
mov
inc
cmp
jb
lret
ret
mov
or
dec
and
push
or
enter
ja
or
xor
jl
sub
cmp
inc
in
imul
jg
lea
sti
add
jne
jnp
push
outsb
mov
adc
mov
jns
scas
and
cld
jne
mov
push
cmp
jne
jns
fwait
cmpsl
es
jne
call
mov
or
mov
ret
adc
push
dec
jmp
adc
iret
repz
jmp
std
std
jmp
cld
cld
or
into
sbb
fucomi
pmaxub
ss
scas
jb
mov
push
movb
shr
stc
sbb
or
mov
jae
adc
cmp
les
enter
mov
add
pop
adc
shrb
jae
scas
mov
cmpsb
or
inc
mov
inc
push
add
sub
std
or
xchg
xchg
or
or
adc
push
and
push
add
and
cmp
push
lock
or
inc
lea
pushf
clc
mov
mov
lea
add
rolb
mov
into
and
pop
push
adc
cmp
jg
pop
cmc
cli
add
and
popl
test
sbb
popa
shlb
lods
push
das
and
jae
data16
fcoml
and
inc
pop
jle
push
push
pop
div
addl
push
push
ja
push
mov
jne
pop
iret
pop
xor
lods
pop
bound
sub
pop
adc
push
mov
adc
loopne
mov
add
jns
imull
cmp
and
add
sahf
gs
imul
xchg
add
inc
jns
sbb
int
xchg
in
repnz
mov
in
outsl
adc
stos
rclb
enter
test
adc
addb
jo
push
sub
movsb
sub
or
leave
xor
adc
add
sti
outsb
or
jl
or
lods
push
mov
mov
lea
cmpl
inc
fs
xchg
jmp
inc
fstl
out
inc
rorb
cmp
jne
addl
add
add
sub
push
add
and
in
and
cmp
in
imul
frstor
outsb
rorl
mov
or
cmp
and
or
fnstsw
adc
dec
add
add
lds
sbb
xor
adc
dec
lret
or
test
pop
mov
jg
loope
jmp
fidivs
lret
sub
cmp
cld
push
imulb
ja
xor
jae
insb
fsubrs
push
movsb
test
sbb
inc
pusha
addr16
mov
dec
test
push
je
xchg
aam
dec
lock
ret
mov
pop
cld
or
fcos
dec
insb
and
mov
sbb
inc
adcl
or
pop
add
ja
lds
jbe
inc
add
pop
in
mulb
adc
pop
arpl
pop
mov
pop
insl
add
into
mov
pop
jae
fildll
in
rolb
sbb
imul
sbb
mov
jg
pop
dec
dec
loop
add
das
cmp
mov
or
push
sub
test
and
aas
cld
imul
jge
stos
mov
shr
enter
shrb
or
mov
pop
pop
mov
push
jo
or
add
jl
mov
mov
ror
fsubs
mov
jne
testb
and
loope
add
rcrb
fs
ds
adc
adc
mov
shlb
mov
call
or
pushfw
add
mov
mov
clc
dec
and
daa
or
shl
mov
je
hlt
fs
push
adcl
mov
pop
adc
testb
inc
mov
inc
add
rol
add
lret
dec
jmp
xchg
flds
faddl
adc
sub
ds
popf
pop
mov
push
es
push
leave
stos
inc
mov
xor
adc
adc
es
fnsave
test
lock
leave
xchg
int3
fldcw
pop
mov
clc
stos
and
outsb
mov
lea
icebp
jo
paddsb
push
inc
fs
add
add
push
push
test
inc
dec
ret
pop
fstl
xor
jo
inc
mov
or
push
fprem
jae
fwait
sub
dec
push
or
add
mov
shl
or
cltd
daa
call
clc
cmpsl
xchg
jno
lret
adc
fidivs
sub
mov
mov
push
xchg
sbb
jo
mov
call
call
loopne
je
inc
cmp
jb
lea
popf
mov
outsb
push
adc
push
cmpsl
ss
add
pop
lods
cmp
test
sar
dec
mov
mov
dec
add
mov
adc
adcl
aas
addl
lock
push
or
nop
pavgw
push
out
cmp
data16
sbb
add
inc
jmp
pop
xor
pop
adc
push
push
push
dec
stc
inc
jo
pusha
pop
pop
inc
lret
push
mov
inc
roll
cmp
jae
adc
outsb
fnstenv
adc
add
enter
xchg
sbbl
and
icebp
add
mov
or
hlt
add
nop
scas
divb
call
jge
or
dec
and
int
adc
mov
movb
mov
dec
push
sub
leave
sub
insl
jge
add
xchg
push
or
adc
bound
ja
ret
mov
cmp
loop
test
lret
je
push
mov
rorl
daa
jle
pop
adc
jmp
adc
loopne
fldl
push
stc
mov
dec
popa
jg
add
imul
xor
bound
xor
xchg
sbb
movsl
gs
cmpsb
shrb
les
jle
push
out
mov
aad
push
popf
aaa
jle
decl
ret
loope
push
pop
add
fstl
ffreep
push
or
dec
cmp
outsb
pusha
jb
pop
add
pmulhw
inc
rcrl
mulb
or
in
xor
repnz
push
push
pop
or
jne
jo
and
mov
cmp
aaa
lock
xchg
mov
inc
mov
pop
xor
mov
shl
cmp
pop
je
inc
movsb
fstpl
push
in
test
mov
push
orb
subb
add
cmp
and
dec
aad
ja
sbb
push
mov
mov
dec
addr16
popf
mov
pop
cld
fmuls
shrb
xor
fsubl
jno
sub
push
sub
xor
jbe
cmc
in
std
stos
xchg
in
sbb
ss
jp
mov
xlat
test
out
aas
or
cmp
je
cmpsb
fdivrl
loop
lahf
push
push
cld
mov
call
xchg
xor
cmp
mov
mov
movsl
in
inc
rcll
subl
adc
adc
sub
mov
mov
cwtl
mov
push
pop
sbb
test
out
mov
jl
and
jle
pop
fdivr
add
pop
mov
out
mov
mov
test
pop
push
cmp
pop
cwtl
movsl
test
pop
xchg
incb
cmp
jne
or
mov
adc
or
cmp
adc
add
xorl
adc
ret
jne
lock
shrl
rcrl
add
xchg
iret
dec
mov
add
fs
imul
cmp
xor
dec
add
shr
mov
dec
pop
lods
xchg
sbb
push
pop
push
and
inc
cwtl
mov
dec
pop
or
dec
pop
sar
mov
mov
cmp
xorl
mov
sbb
cmc
pop
lods
cld
mov
adc
mov
cmp
sbb
call
or
add
lds
and
cmp
jp
and
fnop
xor
sbb
xor
mov
inc
insb
pop
push
pop
lds
dec
and
imul
or
lret
pop
and
cmp
out
adc
mov
add
pop
push
inc
test
mov
enter
xorb
push
sub
mov
cmp
pop
jne
cmp
or
and
pop
adc
xor
add
inc
mov
fistpl
fsubs
dec
sbb
mov
mov
fsubr
mov
adc
push
and
leave
es
sbb
push
inc
in
dec
dec
or
mov
imulb
pop
iret
push
push
pop
jle
jo
cmp
je
movzbl
add
add
sub
je
fcmovb
lahf
ret
lea
mov
adc
imul
jbe
pop
add
add
pop
enter
add
push
push
repnz
inc
jmp
jno
repnz
je
lcall
and
add
ror
repnz
xchg
pop
push
xor
inc
enter
or
xchg
add
mov
cmp
or
sub
sahf
xchg
add
or
or
movsl
test
or
mov
lcall
and
enter
push
jb
jb
ja
push
orps
adc
sahf
xchg
add
pusha
adc
xor
inc
or
adc
iret
in
out
adc
out
rclb
add
adc
adc
lea
cltd
adc
xchg
add
push
push
or
push
push
pop
pop
repnz
xor
sbb
lcall
sbb
add
mov
sbb
sbb
sbb
sub
je
pop
sbb
cmp
inc
sbb
and
xor
repnz
inc
push
pop
pop
cwtl
sub
pushl
add
add
sub
cmp
push
cmpsb
add
add
cmp
xchg
fisttps
clc
dec
out
mov
repz
dec
mov
sub
pop
sti
cmp
je
lcall
rol
lea
adc
aad
cmp
add
jns
mov
jns
fwait
out
push
fcoml
xor
add
call
in
call
and
enter
inc
jmp
cmpb
jmp
in
jb
jmp
in
in
psubusb
in
cltd
mov
add
inc
in
sahf
out
out
sbb
sbb
jge
sbb
nop
out
test
lock
xchg
add
icebp
icebp
in
cmp
repnz
sahf
lret
add
std
repz
test
hlt
hlt
rorl
sahf
xchg
add
pusha
hlt
fwait
mov
jb
inc
jg
mulb
mov
pop
idivl
or
std
clc
clc
clc
and
sbbb
repnz
push
lock
cli
cli
inc
enter
sti
sbb
stos
jns
aaa
xchg
cld
cld
cld
je
cld
push
divps
mov
repz
repnz
sbb
stos
fistpl
enter
sbb
roll
insb
jl
push
lahf
push
jp
dec
mov
pop
or
xor
cmpsb
push
mov
in
push
adc
in
push
xchg
add
icebp
inc
mov
sub
stc
daa
sbb
sbb
out
adc
enter
add
mov
dec
sti
sub
and
mov
cs
cltd
in
add
and
mov
xchg
inc
add
js
out
out
sbb
pusha
sub
push
lock
cmp
add
cli
push
cli
push
push
adc
orb
stc
and
push
stc
xchg
pop
stc
out
imul
fwait
and
add
xchg
pop
leave
adc
out
clc
cmp
lret
sti
repnz
push
fdivr
cltd
mov
scas
enter
inc
inc
lock
push
into
xlat
ja
dec
dec
and
or
xchg
push
sub
sub
mov
fstl
xlat
in
icebp
mul
pop
popa
leave
mov
shl
scas
mull
mul
sbb
xlat
enter
cltd
out
leave
mov
adc
and
cmpsb
jb
pusha
sbb
adc
xchg
ljmp
scas
pop
mov
xchg
lret
adc
xchg
negb
lcall
mov
testb
pop
add
sbb
xchg
cmc
repnz
jno
xchg
mov
cmc
pop
jne
sub
divb
out
fwait
and
sbb
and
scas
lret
jecxz
stc
popa
cmp
mov
mov
pop
jne
add
pop
and
hlt
sbb
das
pushw
data16
pop
ja
test
idivl
jo
aam
pop
int3
sti
lahf
pusha
adc
jle
push
ds
cmp
aad
loope
push
pop
leave
and
mov
adc
xchg
repz
sub
in
repz
inc
pop
lret
inc
repz
and
sbb
jmp
xchg
inc
mov
xchg
repnz
xchg
pop
jo
sbb
dec
in
in
cmc
pop
daa
xchg
inc
and
add
adcl
xchg
pop
loope
sbb
mov
adc
add
popa
leave
mov
xchg
cmpsb
jb
cmp
mov
adc
cmc
add
cmp
leave
jecxz
ffree
lock
pop
adc
loop
sar
cmc
jne
mov
lock
pop
xchg
xchg
sbb
in
and
test
xchg
nop
jle
ss
ds
out
mov
ret
jmp
and
in
cmovno
cmp
pop
in
push
add
add
bound
jb
stos
add
shlb
les
pop
enter
adc
jne
daa
cmp
or
cmp
dec
add
sahf
and
ljmp
and
pop
and
idivb
push
in
dec
push
inc
add
push
dec
pop
imul
pop
mov
repz
ds
stc
xor
int
push
lcall
stc
xor
cmpsl
or
push
jo
pop
out
jns
mov
pop
add
in
push
push
jle
into
repz
push
inc
out
push
sbb
addb
hlt
push
jg
stos
jl
icebp
clc
loope
push
or
lock
test
inc
into
cs
pushf
add
xor
hlt
mov
pop
fistl
fildll
pop
pop
mov
dec
sbb
rcrb
or
adc
or
push
mov
lea
fdivs
fistps
cmp
push
pop
and
fmuls
and
add
rep
sub
mov
test
cmp
mov
add
sbb
jecxz
adc
enter
pop
dec
add
sub
sahf
jge
test
pop
xor
adc
sub
outsl
push
in
inc
cltd
add
int
push
pusha
adc
dec
movsb
inc
jmp
dec
aam
mov
xchg
fidivs
pop
cld
add
test
push
lods
xchg
add
dec
xchg
adc
cmp
int
or
shlb
mov
pop
inc
inc
inc
inc
adc
adcl
cmp
add
jmp
jb
call
mov
pop
inc
push
inc
and
xchg
arpl
shlb
iret
inc
inc
cwtl
jle
mov
in
popa
push
push
sbb
adc
adc
dec
outsl
cmpsb
or
test
test
inc
mulb
je
pop
roll
sub
inc
inc
pop
cmp
enter
mov
shll
orps
mov
js
adc
subb
lret
pop
jmp
ja
mov
or
and
sbb
jl
rclb
shrb
mov
add
xchg
int3
in
inc
mov
jo
sub
imul
shl
xorl
xchg
fdecstp
and
push
adc
jl
out
stos
stc
aad
lret
xchg
fs
shll
pushl
jne
mov
mov
inc
inc
cmp
notb
jmp
sbb
outsb
xchg
add
bound
push
mov
pop
pop
push
mov
and
stos
sbb
mov
clc
or
test
mov
mov
ss
inc
add
adc
jmp
out
xchg
xor
lods
add
sahf
sub
testl
push
stos
add
testb
sub
arpl
push
sahf
repnz
mov
cmp
es
or
hlt
mov
push
leave
aad
test
testl
das
pop
jo
stos
mov
rcr
iret
aam
repnz
or
inc
adc
repnz
outsl
xor
mov
mov
mov
incl
inc
decl
and
jne,pn
loop
repnz
pop
push
or
xor
jecxz
add
or
push
pusha
or
or
insb
pop
ja
jp
dec
mov
mov
jmp
imul
bnd
cmp
jae
dec
push
lret
and
cmp
popf
jae
pop
jbe
mov
dec
jo
icebp
dec
bnd
ret
nop
inc
adc
cmc
fs
dec
cld
push
xchg
xor
jg
call
sbb
add
call
neg
xchg
cmpsb
or
sbb
dec
dec
je
push
or
sbb
push
jne
out
mov
movb
jno
mov
xorb
negl
loop
sub
or
pop
inc
lcall
jmp
mov
das
sbb
aaa
test
mov
mov
cmp
icebp
filds
fs
pushf
idiv
mov
inc
rol
xor
add
pop
xor
cmp
and
xor
adc
pop
ja
pushf
fisubrl
pop
movsl
mov
int
adc
stos
or
cmp
loopne
fmuls
cmp
pop
cmp
inc
enter
ja
insl
or
xchg
icebp
or
push
mov
add
push
cltd
pop
idiv
sub
ret
ss
inc
xor
xchg
inc
out
cmp
push
mov
pop
ja
jmp
or
xchg
fsubs
xor
out
enter
outsl
call
mov
adc
fs
jbe
insl
xchg
mov
test
pop
adc
bound
or
je
lea
movsl
insb
sub
sbb
sbb
imul
mov
sbb
or
add
inc
aam
popf
jmp
adc
jg
pop
pop
mov
sub
insb
inc
loopne
jl
push
mov
pop
stc
or
leave
and
jl
cmp
push
mov
mov
pop
xchg
push
cmp
loope
push
jmp
jge
pop
je
sbb
movl
add
ud2
add
lcall
adc
test
mov
outsl
mov
mov
in
pop
je
dec
inc
add
jne
mov
sub
cmpb
lods
mov
bound
lret
cs
cltd
test
adc
insb
lock
js
pop
popl
mov
lods
pop
and
sti
popf
pop
push
test
push
jbe
inc
mov
mov
pop
inc
inc
pop
cmp
pop
stc
push
aas
clc
lcall
or
sbb
push
push
pushf
jnp
mov
jp
and
test
fildll
fwait
loopne
test
ret
push
je
mov
fcoms
xchg
iret
cmpl
cli
lods
les
or
mov
clc
xor
mov
adc
shlb
mov
loopne
adc
out
fdivp
adc
or
out
call
add
lods
push
inc
insb
and
pushl
jbe
dec
ljmp
xor
xchg
rorb
add
inc
jmp
clc
push
add
ret
les
fcoms
cmp
ds
sbb
push
inc
add
loop
jle
inc
loope
ds
mov
aam
add
fadds
jle
push
inc
jg
daa
jle
xchg
cmp
pop
mov
adc
pop
mov
das
push
add
fisubl
mov
inc
inc
cmp
je
out
hlt
jbe
stc
fs
orb
imul
fadds
inc
fwait
dec
mov
or
dec
popa
sbb
ficoms
sbb
mov
pushf
mov
out
mov
cmp
mov
incl
fdivr
hlt
push
mov
inc
sub
imul
sbb
or
pop
sub
mov
pop
sbb
mov
or
bound
xchg
mov
sbb
add
ret
outsb
or
xchg
dec
push
add
insb
test
movl
dec
leave
nop
hlt
mov
addr16
test
add
xchg
lret
test
sbb
imul
daa
je
mov
fadd
mov
add
pop
jne
mov
sbb
stos
inc
roll
push
pop
inc
adcb
rol
dec
push
imulb
add
and
cli
frstor
in
ja
sbb
dec
movsb
jb
or
inc
lret
jns
xchg
xchg
addr16
sub
inc
sbb
mov
adc
adc
push
lahf
lock
fcom
cmp
iret
add
rorl
inc
ret
stc
lea
add
popa
dec
or
push
in
or
pop
cltd
push
jmp
das
jmp
cmpb
dec
sbb
cwtl
sarb
mov
inc
pop
imul
sub
and
and
xor
sub
clc
ret
and
cmp
cmpsl
pop
call
inc
in
loope
cli
sub
in
out
dec
js
in
or
roll
adc
hlt
jbe
je
xor
dec
ljmp
inc
push
call
adc
push
sbb
mov
shrb
mov
or
mov
andb
sarl
push
jmp
cmp
incb
or
inc
inc
ss
jns
mov
lcall
out
xor
ja
or
mov
movsb
sbb
cltd
pop
xlat
xchg
xor
add
push
mov
mov
pop
clc
xor
clc
and
fucomp
xchg
shr
es
inc
pushfw
and
aas
pop
pop
cmp
in
pop
sbb
push
mov
fstpl
jb
in
mov
mov
inc
cs
jmp
in
add
add
pop
adc
fidivrl
pop
fldz
push
xor
adc
repnz
jo
xchg
xor
test
into
xchg
mov
inc
adc
das
pop
lret
sub
fdiv
mov
pusha
hlt
add
cmp
mov
rclb
loope
pop
punpckhdq
mov
es
outsb
mov
cmp
xchg
push
arpl
jmp
pop
arpl
xchg
rcrb
pushw
jno
fs
outsb
aaa
jne
iret
cmpb
push
xlat
rcll
rol
inc
add
mov
movsl
cmp
fnstsw
movsb
cld
mov
add
adc
add
and
or
xlat
test
rol
mov
mov
jbe
jbe
sub
jbe
push
cmp
and
roll
jo
loop
jle
shrb
adc
insb
or
mov
add
mov
rcrl
pop
stos
sbb
or
sbb
enterw
lock
push
jp
mov
sbb
fmuls
icebp
push
popf
sahf
enter
xor
inc
int3
or
rolb
mov
push
aam
inc
cmpsb
mov
and
enter
loop
pop
sub
jmp
enter
mov
test
adc
dec
lcall
std
data16
mov
dec
inc
and
insb
jmp
mov
sbb
sbb
in
gs
adc
jne
push
cwtl
sbb
push
add
cmp
pop
gs
sbb
cld
movsl
loopne
push
arpl
imul
cmp
mov
ja
push
lock
sub
inc
inc
mov
scas
sbb
rclb
jge
cmp
hlt
inc
or
dec
mov
jge
or
fiaddl
xor
ja
jp
mov
jbe
addl
pop
sbb
xor
mov
ret
mov
dec
or
jle
repnz
inc
ja
fidivrs
mov
das
add
jne
pop
add
ficompl
icebp
jmp
add
cmp
mov
inc
jmp
ror
js
or
roll
loopne
fcmovbe
lock
pusha
jecxz
cmp
inc
mov
cmp
or
inc
jp
jbe
push
inc
sti
or
mov
fsub
or
incl
sub
push
mov
mov
sub
popa
mov
push
adc
and
ret
insb
andb
frstor
add
lea
inc
cld
fs
push
ret
mull
rol
les
in
sbb
mov
jecxz
cmpsl
mov
lret
insb
push
lea
loopne
insb
mov
mul
xor
push
dec
jnp
add
call
inc
jb
jg
and
jae
sbb
adc
mov
dec
test
sbb
jnp
pushl
mov
je
add
iret
xor
push
test
or
pop
jo
pushf
mov
sbb
scas
stos
push
repz
push
lods
cmp
sti
sbbb
add
ss
dec
xchg
xchg
pop
stos
xchg
or
cwtl
sbb
mov
sarl
inc
adc
aam
pop
fdivrs
or
inc
inc
xchg
and
add
push
cmp
testl
test
das
add
sub
adc
push
add
cwtl
js
lock
fnsave
fidivl
mov
sbb
pop
or
adc
loopne
and
dec
sub
sbb
dec
or
pop
pushf
pusha
xor
mov
push
outsb
xlat
sub
lods
lret
xor
push
pop
sub
outsb
mov
or
lret
adc
sub
lret
out
mov
sbb
out
lret
and
popl
repz
lods
cmp
add
inc
scas
mov
jbe
test
push
movl
cmp
xor
pop
pop
movsl
movsb
sarb
lahf
add
xor
jo
sbb
fmul
adc
sub
fadd
xchg
mov
sub
cmp
shl
call
or
repnz
push
and
js
cld
sub
in
nop
mov
or
cmc
add
lret
or
push
or
popa
pushf
popa
sbb
sbb
test
pusha
cmp
fistpll
mov
add
shl
or
pop
add
mov
daa
add
lahf
cli
incl
mov
inc
dec
jne
lea
or
clc
xchg
jns
cmc
mov
dec
jle
sbb
jb
call
mov
pop
mov
or
add
aas
push
hlt
mov
and
push
push
les
or
sub
outsb
xchg
ja
sub
or
sub
aas
push
push
mov
mov
shll
fdivrs
fsubrl
testl
push
out
enter
fcoms
lock
push
pop
add
in
inc
inc
cld
sbb
dec
and
clc
scas
add
int
push
orb
mov
jmp
and
je
and
std
sub
nop
mov
adc
dec
xchg
outsb
aad
jmp
mov
mov
mov
cmc
fldl
pop
and
sbb
lret
push
imul
jmp
cmp
push
and
and
jmp
pop
inc
pop
ret
or
pop
and
pop
popa
repnz
call
jbe
arpl
inc
jo
jg
or
push
mov
mov
adc
das
adc
mov
push
lret
inc
jno
xorb
rorb
or
jg
sbb
cmp
dec
add
cmp
push
hlt
addl
arpl
rorb
add
cmp
mov
push
add
cli
mov
cmpsb
push
sub
or
jb
jge
in
cmp
std
jne
fsubr
stos
enter
outsb
call
sub
or
xchg
add
adc
dec
mov
inc
call
insb
lods
stos
xor
lcall
mov
nop
xchg
repz
xor
or
movsl
fnsave
push
jmp
roll
push
add
and
xor
stos
enter
inc
rolb
stos
and
cmp
jbe
dec
popf
add
test
leave
push
cmp
sub
inc
inc
lds
cmp
xor
mov
aaa
ficoml
loopne
sub
jg
push
loopne
andb
cmp
lcall
cmp
pusha
inc
inc
jne,pt
outsb
jle
pusha
inc
push
jge
add
jb
mov
pop
inc
sbb
xor
inc
inc
inc
mov
push
lock
adc
mov
fistpll
xor
xor
inc
dec
jne
mov
inc
insl
adc
outsl
mov
mov
add
divb
jle
clc
or
push
mov
inc
dec
jne
hlt
jnp
mov
test
adc
add
fdivp
gs
mov
jmp
cmp
popa
not
dec
inc
bound
movsl
and
jge
jl
je
loopne
adc
push
add
and
mov
or
mov
adcl
rcrb
mov
mov
add
addb
outsl
les
xchg
loope
cmpb
sub
fdivs
cmp
cmp
xlat
cli
dec
pop
jge
jo
insb
ljmp
xor
fs
lret
insl
mov
or
insb
inc
or
enter
inc
dec
loopne
or
pop
sub
jmp
xor
add
mov
mov
add
scas
add
bound
ret
ss
push
ljmp
insl
adc
mov
sbb
adc
xchg
xchg
pop
inc
add
jbe
cmp
adc
sbb
scas
leave
cmpl
xchg
jg
jno
pop
movl
mov
and
in
or
les
in
mov
pop
adc
lods
call
adc
loop
xor
decb
inc
mov
sbb
jno
xchg
inc
xchg
sbb
sub
in
test
and
nop
mov
shlb
aam
pop
cmp
in
push
cwtl
mov
jne
cld
mov
aaa
out
jle
pushl
pop
or
push
cmpl
sub
andl
or
sbb
inc
add
adc
mov
decl
jne
sbb
dec
xor
push
adc
push
movsb
cmp
push
sbb
rorb
hlt
testb
add
cmpl
push
fdiv
push
xchg
ret
jo
sbb
or
xor
sub
adc
clc
xchg
dec
xor
das
mov
sub
jbe
mov
mov
lahf
jne
xchg
inc
test
pop
in
or
shlb
jae
pop
jbe
push
lret
cmpb
lock
inc
and
sub
add
dec
shlb
subb
shrb
jbe
add
rcll
mov
push
pop
mov
ljmp
mov
pop
sbb
push
cmp
rorb
scas
aad
sbb
daa
mov
jmp
and
pop
repnz
push
jmp
rolb
dec
add
cmc
cld
sub
cs
jne
xchg
call
xchg
sbb
cwtl
sub
arpl
inc
inc
mov
lea
jnp
sub
jnp
mov
jmp
test
loop
mov
sub
test
pop
sbb
sub
orb
cmp
inc
cmp
dec
fcoms
and
sbb
dec
xchg
lret
insb
mov
mov
push
cld
push
jo
mov
inc
or
inc
mov
pusha
sbb
inc
cmp
xchg
js
imul
insb
mov
jns
in
jae
bound
inc
mov
lret
fnstcw
lea
add
test
fldt
clc
dec
jl
ret
dec
push
repnz
or
push
push
movsb
pushf
dec
sub
sbb
in
addl
or
xor
shlb
sub
mov
mov
jle
sub
in
pop
lcall
inc
push
cmp
inc
push
pmulhuw
pop
cmp
arpl
daa
jle
pop
cmp
xor
sbb
jmp
mov
jp
std
cmc
jns
sti
jbe
and
pop
cmp
gs
shll
test
arpl
mov
lea
je
insl
jg
jge
inc
and
addl
push
add
int
jb
add
movsb
ljmp
mov
cwtl
test
divl
cmpl
cmp
cmp
or
pushf
cmpsb
and
daa
test
jno,pt
xchg
push
out
inc
int3
dec
ja
mov
bound
jle
xchg
xor
mov
pop
into
sub
inc
mov
dec
sub
iret
test
fnstenv
push
mov
cs
gs
xchg
mov
push
fldl
das
mov
mov
adc
shll
jp
inc
sub
andl
fimuls
jbe
lock
ret
sbb
enter
mov
imul
pop
pop
pop
pop
xchg
fcomps
int3
jns
stc
std
data16
popf
enter
cld
jns
movsl
shrb
ljmp
shrl
dec
sbb
dec
cld
adc
sbb
cmc
loopne
sub
aam
mov
mov
push
cmp
add
jno
cmc
sbb
mov
ret
or
lods
dec
das
pop
jno
popa
pop
popa
dec
movsb
js
jmp
jge
add
add
jl
mov
adc
mov
movsl
bound
bts
jmp
stc
cmp
mov
es
movb
cmpsb
mov
and
pop
js
lahf
sub
nop
adc
mov
iret
out
push
fmuls
mov
and
test
sub
cmp
repz
and
adc
add
shlb
clc
mov
fsts
jmp
mov
loopne
sub
in
and
jae
pop
nop
hlt
movups
push
add
lahf
mov
insl
adc
add
nop
mov
iret
repz
mov
shlb
repz
xlat
nop
lahf
repz
or
push
or
sbb
lahf
xchg
inc
jmp
pop
cmpsb
mov
test
cmp
pop
adc
pop
cs
push
test
dec
pusha
ja
inc
jmp
sub
xorb
and
data16
adc
and
add
dec
cmp
inc
or
idivb
repz
cmp
jge
inc
mov
pop
adc
pop
movsb
stos
test
popa
add
and
arpl
push
aam
xchg
add
clc
rcll
loopne
lds
or
or
lods
scas
or
and
jno
insl
jne
jp
jb
aas
xchg
adc
dec
sbb
dec
imul
hlt
fdiv
mov
imul
and
je
sahf
daa
mov
daa
pop
pop
and
and
push
enter
adc
lret
or
xchg
test
je
pop
mov
mov
dec
dec
adc
mov
daa
int
xchg
pop
jl
or
or
dec
sbb
movl
movsl
imul
sbb
fnsave
and
mov
xchg
pusha
xchg
jo
jne
jmp
adc
movsb
addl
cmp
pop
jbe
push
lahf
add
les
fcompl
imul
and
aaa
sub
dec
lret
push
outsb
add
or
cwtl
outsl
push
xor
or
dec
ret
aam
add
sub
testl
loopne
cmp
sub
repnz
je
movl
ret
sahf
push
mov
das
ficomps
insl
sbb
inc
dec
data16
jmp
sub
and
sahf
imul
and
xchg
loope
push
ljmp
dec
pushf
loopne
daa
xchg
adc
jno
mov
cmp
inc
jp
pop
mov
sbb
adc
adc
xorl
or
or
in
xchg
mov
fisttps
ret
inc
nop
sbb
lea
inc
push
inc
dec
and
ljmp
stos
test
xchg
mov
xchg
leave
rolb
loope
cmp
xor
hlt
adc
data16
add
mov
inc
or
and
push
sbb
sbb
add
shrb
mov
js
xor
xchg
inc
mov
add
aaa
imul
add
popa
or
or
dec
or
mov
inc
and
push
sub
mov
sbb
push
adc
adc
cs
mov
inc
cltd
adc
dec
fnsave
inc
enter
push
es
sub
or
mov
inc
jle
mov
jmp
pop
testl
mov
push
ds
mov
push
clc
dec
xchg
xor
jle
push
push
jne
les
hlt
dec
ljmp
jns
insl
adc
push
sub
pop
add
stos
inc
push
push
add
cmpb
or
and
sub
js
ret
xlat
cmp
xor
inc
xchg
sbb
pusha
xor
fs
jp
mov
scas
sub
xorb
and
fsubs
xor
lret
mov
rorb
popf
in
mov
clc
aam
fadd
jae
pop
cmp
mov
fadd
and
jecxz
ljmp
mov
loopne
popf
ret
xchg
repz
stc
lods
mov
test
in
or
clc
cmp
push
icebp
mov
mov
adc
std
xchg
sahf
push
and
imul
inc
loopne
pop
ja
mov
movsbl
arpl
adc
movzbl
test
pop
popa
pushf
cmp
push
sar
pop
mov
fadds
or
xor
lea
mov
aam
clc
fdivs
pushf
lret
push
dec
or
je
or
sub
je
sbb
jnp
popf
push
scas
pushf
pop
or
add
arpl
sbb
or
adc
ficoml
pusha
cli
or
aam
xchg
jo
aas
mov
add
sub
push
imul
dec
lock
lret
or
ja
movsl
leave
test
add
cmp
out
sbb
shl
in
je
or
inc
pushf
shll
je
lock
cmc
mulb
adc
popa
lds
adc
addr16
outsb
xlat
scas
sbb
pop
and
sbb
jle
xor
mov
loopne
mov
xor
sbb
dec
fs
or
incl
outsl
cmc
inc
lcall
pop
cmpsl
dec
ret
imul
lret
xchg
rclb
push
dec
xchg
mov
imul
jb
or
mov
dec
je
cmp
adc
or
mov
ds
mov
ret
add
hlt
xchg
sub
dec
cmpsl
and
and
jae
jbe
je
push
jae
pop
testl
aaa
add
dec
mov
das
mov
sbb
jge
adcl
pop
sbb
sub
jmp
dec
and
in
or
xor
mov
andl
test
and
adc
aam
push
les
xlat
mov
pop
pop
jne
add
push
insl
cmp
sbb
jbe
pushf
sub
inc
mulb
stos
adcl
lret
cmpsl
add
cmp
mov
xor
mov
movsl
sti
add
push
mov
jmp
mov
aas
push
sahf
add
sarl
jge
lcall
jmp
mov
mov
mov
xor
inc
xchg
xor
add
dec
lea
cmp
pushf
mov
sbb
dec
imul
cmp
cli
add
add
sbb
adc
jmp
mov
clc
outsb
je
test
fwait
sbb
enter
int3
dec
aas
add
jo
ss
mov
push
or
mov
pop
movsb
push
pusha
pop
mov
or
mov
sbbb
or
and
sti
jp
fsubrs
xor
into
ret
aam
adc
jge
mov
jne
mov
jmp
cmp
jle
out
je
insl
cmpl
outsl
loopne
pop
mov
data16
xor
int
or
mov
out
test
cmp
xor
adc
sbb
subb
lea
ret
mov
test
js
jecxz
lea
stc
mov
movsl
push
pop
xchg
cwtl
fisubrl
call
mov
cmpb
jne
and
stos
inc
adcl
sbb
ljmp
mov
cwtl
jae
addr16
decb
mov
std
inc
daa
add
adc
adc
movsl
loope
pop
push
pop
data16
push
cmpl
lret
rclb
mov
test
je
lods
or
sbb
inc
push
ss
cmpsb
jmp
out
or
daa
adc
int3
je
mov
dec
mov
adc
sub
jl
pop
inc
add
pop
or
inc
in
pop
icebp
xchg
fimull
jge
pop
call
ds
test
pop
mov
or
jne
and
lea
sti
lret
or
jo
jp
inc
dec
lock
aam
and
loopne
push
inc
xor
xchg
incb
clc
clc
sahf
add
mov
dec
jmp
pop
cmp
push
fcoml
ljmp
je
into
adc
mov
enter
mov
sbb
inc
jmp
mov
popa
adc
loope
or
xorb
cmp
sub
sar
roll
adc
sub
mov
aaa
xor
mov
jmp
orb
jmp
in
test
test
cli
and
pop
rcll
cltd
sub
sub
inc
adc
push
xchg
jnp
enter
cmpsl
mov
fcompl
lea
or
xor
pusha
adc
push
jbe
lcall
fdivs
rcrb
push
sub
cld
cmp
fistpll
push
rcll
mov
pushf
test
vmread
mov
jg
push
xor
mov
sbbb
push
and
inc
dec
jo
and
add
push
and
jmp
mov
push
aas
icebp
sti
ret
movsl
daa
pop
mov
or
test
mov
sub
movsb
cmp
ret
mov
jnp
or
cmp
adc
test
lcall
jnp
cmpsl
stc
inc
cltd
mov
sbb
test
add
test
pop
or
mov
adc
insb
mov
lock
mov
push
cmp
insb
or
popl
add
push
bsr
push
and
inc
push
fildll
rol
mov
fucom
fisttpll
mov
cmp
andl
sbb
lcall
fldl
push
mov
ljmp
push
lcall
sub
or
push
lock
inc
jl
push
pop
stc
or
jne
push
aas
out
jnp
sub
sahf
xor
pop
leave
test
ret
arpl
cwtl
or
mov
loopne
les
cmp
inc
push
xor
cmp
lahf
ret
pop
jmp
push
jecxz
test
push
mov
sub
or
push
rol
andl
sub
repz
or
jp
test
pusha
jo
xchg
enter
mov
or
and
add
loopne
push
xchg
push
mov
daa
or
add
mov
jno
movsb
iret
or
or
ja
ljmp
adc
enter
sub
test
jb
rclb
sub
popa
in
leave
and
clc
adc
jns
inc
sarb
jnp
mov
inc
pop
dec
sarb
xchg
dec
or
cmp
gs
movsb
xor
jecxz
fsubr
xor
mov
mov
push
adc
clc
lcall
je
cli
add
cmp
jbe
push
pop
adc
and
jne
jmp
in
addb
lret
lea
not
and
decb
jne
scas
cli
dec
add
sbb
lea
xor
mov
push
pop
add
add
and
push
or
cmpsb
mov
rcrb
push
or
mov
sub
jmp
clc
and
mov
push
shlb
mov
sar
xor
dec
pop
cmp
pop
stos
inc
sbb
mov
imul
sarb
loopne
mov
jno
jno
mov
xchg
shr
not
and
ret
jb
and
xor
lea
das
mov
xor
iret
jle
pop
dec
add
mov
push
or
sbb
dec
data16
xchg
faddp
mov
int3
xor
mov
dec
or
mov
dec
pusha
mov
mov
inc
mov
inc
cmp
jne
and
rorb
lods
push
or
pop
push
fisttps
ds
jmp
dec
adc
push
mov
mov
add
or
mov
xor
push
sbb
adc
repz
cli
dec
push
or
push
adc
aas
dec
loope
shl
add
scas
mov
push
push
call
aas
gs
push
or
adc
icebp
sbb
mov
mov
jne
add
decb
adc
fiadds
pop
jne
pusha
add
and
pushl
push
push
mov
mov
cmc
ss
ror
add
mov
adc
jbe
adc
inc
cmp
sbb
jl
push
cmp
push
jbe
insl
or
mov
mov
cmp
and
mov
shl
cmpsl
add
lock
data16
outsl
push
mov
pop
xorl
xchg
out
js
add
notb
mov
pop
push
push
sbb
inc
adc
mov
add
ret
push
jecxz
jne
lret
jl
adc
pop
andb
fucomi
fwait
orl
mov
add
and
pop
rorb
push
popa
pop
mov
jno
scas
mov
add
inc
ljmp
test
incb
pop
ds
mov
or
hlt
or
sub
imul
inc
sarb
cltd
std
lea
push
xchg
in
mov
sub
shr
and
pop
dec
clc
lret
hlt
inc
in
adc
or
scas
inc
fisttpll
cld
lock
add
sub
sbb
les
mov
clc
cmpsl
add
popa
push
jo
sub
sub
fs
inc
dec
arpl
mov
lock
clc
lahf
mov
jne
or
lds
or
and
not
and
les
adc
adc
mov
push
mov
add
ror
jb
cld
jnp
pop
and
push
mov
and
clc
scas
inc
adc
ret
int3
inc
fildl
out
cmp
xor
mov
cli
stc
add
sub
int3
push
pop
sahf
int
push
sbbb
inc
stc
sbb
push
orb
rolb
add
pop
add
cmp
nop
rcr
jnp
dec
or
flds
pushf
sub
add
int3
stos
pusha
add
movsl
adc
fidivrl
dec
mov
cs
fstpl
loopne
dec
xor
sbb
jbe
int3
fcompl
jg
or
shll
pop
pop
push
cmpsb
imul
lcall
sub
xchg
adc
js
pop
shl
ss
and
js
test
inc
jne
imul
rcll
insb
xor
es
and
addr16
shrl
and
clc
jl
fildl
fiadds
mov
jge
dec
push
cld
loop
inc
dec
insb
pop
xor
push
sar
dec
jp
loope
pusha
and
mov
push
jl
push
xor
cmp
or
out
dec
je
fisttps
rclb
mov
add
fnstenv
inc
jecxz
orb
add
ja
notb
loope
lea
mov
and
test
jbe
mov
mov
push
cmp
lods
decb
into
mov
sub
into
rdmsr
xchg
sbb
mov
jns
dec
and
add
addb
insb
mov
add
loope
lock
push
dec
push
push
push
jge
add
shr
adc
les
add
in
or
subb
adc
mov
nop
cmp
and
decb
xlat
mov
in
add
pop
and
call
sbb
roll
jne
jmp
jnp
add
lock
aaa
sti
adc
cwtl
dec
mov
and
mov
lea
pop
addl
fcmovnb
das
xchg
add
pushl
sbb
ret
movzwl
cmp
adc
mov
jl
pusha
sub
pop
iret
jne
not
adc
jno
mov
sub
inc
mov
scas
stos
xlat
jmp
dec
mov
loopne
mov
adc
outsb
leave
inc
test
inc
push
pushf
mov
sub
icebp
add
fdivrl
je
mov
dec
add
cmc
call
jge
iret
mov
loopne
repnz
gs
jge
mov
pop
mov
decb
jne
cmpsw
pop
mov
jmp
jp
mov
inc
cltd
adc
jne
add
push
and
dec
xlat
into
xor
dec
jp
call
mov
mov
or
pop
fsubrs
xor
sub
jge
roll
nop
addr16
push
rcll
or
dec
cld
or
xor
out
push
in
pop
ficoml
mov
out
or
sub
or
cmc
lods
push
adc
xor
pop
mov
lea
ds
jne
cmp
into
push
jg
fdivl
jo
inc
add
mov
jno
sbb
push
cmp
loopne
or
pop
mov
xorl
lock
or
or
xor
inc
mov
pusha
add
jl
mov
sti
sbb
icebp
pop
pop
push
rcl
inc
push
mov
or
push
push
pop
jl
mov
mov
add
adc
push
mov
push
orl
xchg
pop
inc
or
inc
inc
cmp
test
mov
sbb
push
mov
test
ret
or
gs
mov
test
testl
cmp
adc
adcl
inc
sub
nop
xchg
mov
fistps
stos
or
sub
fimuls
push
aam
cmp
sti
pop
mov
adc
xor
lahf
pushl
adcl
pop
stc
push
divl
jl
or
push
push
rcll
pop
mov
jne
test
std
pop
rcrl
xchg
adc
or
mov
and
mov
fiadds
inc
push
or
pop
mulb
mov
cmpsl
pop
sti
cmc
dec
loopne
mov
mov
sub
lahf
int
jl
insb
int3
push
mov
imul
inc
je
pop
dec
cmp
arpl
push
sub
or
ljmp
lock
dec
pusha
xor
pop
cmpsl
adc
or
jo
ret
or
sbb
cmpl
pop
sub
out
scas
jns
xchg
stos
inc
push
push
mov
prefetch
or
lcall
loopne
jmp
dec
insb
push
je
inc
jns
adc
or
sub
xor
cmpsb
mov
aam
stos
and
sub
jo
cli
sbb
xor
dec
gs
call
inc
cltd
movsb
hlt
mov
sub
pop
xor
shlb
mov
scas
mov
or
mov
or
int3
test
push
pop
jns
in
je
cmp
cmpl
rcrl
sbbb
rcrb
mov
pusha
ret
pop
movsb
pop
lcall
xor
ja
stc
jae
mov
loopne
scas
dec
out
jb
xor
add
mov
adc
adc
jmp
xchg
aad
xor
add
xorb
mov
faddl
sub
dec
dec
leave
pop
insl
rorb
ss
dec
faddl
dec
scas
and
hlt
fisubrs
mov
hlt
icebp
sbb
pop
add
inc
pushf
add
mov
jne
jp
pop
ret
test
or
pop
and
or
sbb
jg
das
leave
aad
adc
ss
sbb
push
cmp
inc
adc
or
sbb
push
jmp
imul
push
push
or
dec
xor
ret
dec
lcall
movsb
in
sub
and
lea
test
and
cmpsl
ljmp
sbb
push
subb
sub
rolb
dec
dec
jb
or
call
or
push
enter
mov
cmp
lods
stos
lods
stos
in
movsb
push
neg
lret
and
dec
or
add
outsl
inc
call
push
pusha
cmpl
inc
mov
and
mov
dec
and
fimuls
cld
stos
jbe
mov
stc
mov
icebp
test
in
jb
mov
shr
or
mov
mov
ret
push
hlt
xchg
pop
inc
push
inc
xchg
ret
cmp
push
cmpsb
shrb
mov
inc
push
call
mov
inc
and
rclb
shl
sbb
in
push
xor
inc
and
inc
dec
push
nop
les
xchg
test
mov
mov
loope
lahf
cs
enter
cmp
add
mov
sysret
movsb
sbb
mov
or
outsb
or
aaa
mov
ficomps
push
sahf
stc
inc
mov
xchg
mov
lea
ss
inc
sbb
sub
inc
add
daa
cmp
push
int
dec
jge
lea
xor
and
jp
xchg
mov
adc
pop
xor
clc
xchg
sbb
pop
enter
stos
pusha
lods
mov
inc
or
fwait
inc
jo
pop
rcll
xor
xorl
push
add
add
mov
cmpsl
or
mov
clc
push
pop
cmp
out
sarl
mov
sbb
push
bound
add
nop
enter
adc
add
daa
mov
jmp
mov
loope
push
mov
testb
sahf
aam
sub
push
or
dec
fdivs
adc
push
mov
clc
addr16
jne
imul
cmp
call
push
cs
add
add
fdivs
enter
nop
cmp
add
adc
adc
xor
js
je
int3
add
sbb
mov
or
push
or
shll
enter
out
aam
pop
outsl
cmp
or
sub
xor
dec
xor
dec
ret
clc
add
cli
shll
jmp
mov
mov
insl
es
push
inc
and
gs
fcoml
cmpsb
xor
jg
mov
pop
sbb
add
jg
jmp
pop
sub
sbb
dec
xor
ss
add
add
push
jae
je
dec
xchg
push
or
pop
mov
fmul
mov
lahf
lret
pop
xchg
mov
fldl
or
fldl
or
sub
les
mov
mul
mov
push
fbstp
pop
jmp
jo
fldt
push
dec
inc
mov
sti
sbb
movsb
pop
sub
das
sub
mov
lret
sub
je
dec
je
add
and
xchg
pop
and
sbb
sti
fldenv
lcall
xchg
jns
insb
int
test
cmp
adc
imul
fnsave
xchg
sub
add
add
cmpb
add
inc
test
jno
mov
lock
stos
cmp
test
in
lock
in
jns
and
faddl
imul
lock
fstl
push
xor
psrlq
push
iret
fsub
mov
aaa
jne
das
and
inc
lock
neg
ret
cmp
push
in
repz
out
cmc
incb
les
iret
jl
push
pop
sub
xor
montmul
cmpsb
add
push
add
xchg
mov
xchg
stos
enter
dec
cmp
insb
dec
inc
sbb
xchg
mov
xchg
leave
jbe
lock
push
call
fdivs
ds
inc
in
xor
xchg
inc
jle
aas
mov
pop
push
inc
clc
add
sarl
add
jmp
push
push
xchg
jmp
add
add
popf
flds
frstor
popa
push
jmp
test
sub
clc
push
fmull
in
jae
inc
jp
cmp
test
jne
push
push
sbbl
cmp
and
jns
aam
sarb
js
mov
adc
push
pop
pop
cmpsb
or
mov
adcl
sub
adc
mov
das
mov
sub
out
sub
mov
iret
outsl
es
xchg
sub
mov
mov
and
js
or
inc
jecxz
xchg
lods
lret
das
fs
or
lret
test
int3
cmp
rcl
pop
jb
add
lcall
into
jne
dec
pop
mov
push
pop
mov
lea
pop
add
incb
sbb
or
mov
add
jne
dec
sbb
in
xchg
icebp
loopne
sar
lea
testb
push
ret
ja
jle
mov
adc
imul
mov
mov
inc
pop
loopne
hlt
addr16
std
mov
or
adc
push
stos
pop
mov
cmp
xchg
lods
scas
shll
jmp
or
int3
ret
mov
enter
xor
dec
xor
xor
or
add
push
mov
pop
add
loope
iret
mov
cmp
mov
insl
pop
sar
mov
jecxz
aad
in
or
mov
cs
jb
call
jge
mov
data16
in
dec
je
or
inc
xchg
cmp
sbb
lahf
xchg
dec
cmp
inc
out
jne
inc
sub
pop
aaa
sub
pop
and
ss
scas
xchg
lea
inc
jne
repnz
inc
xor
xchg
inc
sahf
aad
xchg
mov
js
imul
dec
movsl
test
pop
and
ret
imul
ret
dec
xchg
dec
leave
and
inc
mov
inc
pop
repnz
aam
jg
in
xor
fs
xchg
out
push
clc
call
imul
js
cmp
xchg
add
adcb
sti
push
inc
cmp
popa
arpl
popf
in
fwait
jne
repz
adc
jmp
mov
cwtl
add
mov
pop
mov
xor
xchg
stc
mov
mov
adc
div
orb
cs
pop
sub
xchg
int
cmpsb
mov
enter
call
in
add
ret
push
ds
rclb
std
add
repnz
mov
fstpl
enter
mov
dec
nop
dec
fisubrl
loopne
sub
xlat
mov
pop
lods
cmp
jmp
insl
pop
into
je
mull
adc
mov
inc
loopne
mov
or
mov
std
mov
movsl
sti
jecxz
xor
and
push
xchg
pop
fs
std
aaa
addr16
xchg
imul
imul
adc
sahf
xchg
in
mov
jo
ret
std
and
shll
ss
mov
shlb
lahf
in
xor
mov
popf
lahf
iret
jp
mov
call
pop
mov
jb
sbb
inc
xchg
push
mov
std
xor
cmp
push
mov
fmul
mov
in
jge
mulb
jbe
lods
push
std
inc
mov
mov
nop
std
lds
sub
lea
ja
lock
cmp
push
in
and
mov
push
jne
mov
popf
jb
dec
jae
jne
dec
cmp
sbb
imul
xchg
mov
mov
mov
mov
jl
sub
jae
mov
jb
cmc
add
loope
xchg
sub
aad
jg
popf
mov
mov
aad
je
xor
roll
adc
out
rclb
inc
inc
adc
mov
dec
mov
sub
ds
mov
sbb
sbb
nop
std
lock
xor
lea
enter
ret
sbb
xchg
std
mov
pop
dec
inc
repz
cmp
mov
popa
cmp
push
fdivrp
or
or
cmpxchg
push
jmp
popa
dec
ds
dec
mov
push
cmc
rorl
lds
std
xor
push
lods
outsl
cmp
sbb
sub
or
adc
and
int3
lods
maskmovq
divl
popf
loopne
sub
push
addl
mov
dec
test
lahf
xchg
cld
enter
jns
lock
pop
xchg
std
dec
cmpl
sbb
fbstp
leave
fldl2t
sbbb
push
movsb
adc
or
pop
add
sub
lret
jne
cmp
pusha
jp
xchg
sbb
mov
hlt
or
xchg
cmp
repnz
das
push
dec
or
push
je
enter
jle
cmp
in
std
loope
sub
mul
or
xchg
aaa
fsubrl
add
bound
and
add
sahf
cmpsl
stc
dec
enter
adc
sub
push
ret
das
mov
inc
push
xchg
dec
movsb
test
inc
dec
push
mov
and
inc
sarb
mov
cwtl
in
mov
sub
or
lods
push
sbb
iret
aad
adc
sub
cmp
ja
add
inc
ret
xchg
cmp
ds
icebp
or
lock
jbe
pop
pop
pop
jle
xchg
xor
cmp
ds
imul
push
or
inc
ret
dec
dec
push
fisubrl
push
lock
pop
pop
push
lea
pop
xor
sub
push
test
or
movsl
call
cmp
insb
push
push
jb
sbb
or
or
int
xlat
aad
scas
or
cmp
xchg
inc
int
int
aam
mov
cmp
and
out
xor
enter
push
imul
inc
push
cltd
mov
daa
xchg
ljmp
xchg
pop
xchg
xchg
test
pushf
inc
jb
jns
enter
mov
lods
test
fs
lret
aad
lcall
test
movsl
dec
dec
enter
sbb
jle
pop
xchg
lret
arpl
jle
loope
and
daa
mov
insl
and
cmp
test
xchg
rep
es
in
cmpsl
add
mov
mov
adc
leave
gs
pop
dec
pop
push
enter
aaa
and
or
nop
lret
push
lea
xchg
fwait
xchg
pushf
and
and
pop
mov
loopne
test
dec
pop
stos
mov
push
xchg
aaa
movsb
push
mov
mov
dec
sub
dec
xchg
in
pop
inc
xor
nop
dec
es
movsb
inc
xchg
nop
bound
dec
inc
or
adc
test
scas
nop
incl
dec
adc
pop
add
xor
nop
nop
pushf
enter
lods
lods
test
or
movsl
ret
out
int
push
pop
mov
pop
mov
je
jmp
jecxz
inc
add
mov
push
roll
cltd
cmc
inc
aam
mov
ret
sub
enter
mov
je
lock
fbstp
push
xorb
movsl
sti
mov
sbb
jg
adc
and
inc
add
xchg
inc
push
pusha
jo
cmp
mov
pop
lods
adc
cltd
out
out
adc
cli
sub
or
push
loop
pop
rolb
sub
jmp
int
js
sub
inc
add
aam
sbb
push
adc
iret
cmc
mov
xchg
dec
rep
ss
neg
pop
mov
cmc
lods
shlb
lock
push
dec
sbb
lods
insb
add
xchg
icebp
or
leave
jo
jne
and
mov
mov
loopne
outsl
addl
push
dec
adc
push
and
jl
xor
dec
push
pop
ret
out
std
outsl
inc
or
jbe
jle
sbb
xchg
lret
ja
mov
jo
inc
and
sbb
add
xor
xchg
add
loopne
in
enter
clc
lods
lret
sbb
dec
pusha
jae
xor
into
and
call
mov
sub
cmc
push
rcll
pop
lret
sub
ja
add
xchg
lcall
fsubrs
fsts
clc
in
lock
fidivl
inc
rep
jge
jne
xor
xchg
in
fidivrs
cld
and
mov
lock
sbb
jmp
pop
jae
daa
and
repz
cld
xchg
and
insl
in
mov
loopne
loopne
add
inc
int3
and
fidivs
push
or
cmp
add
add
adc
jne
xchg
cli
and
adc
pusha
fmull
add
sbb
and
jl
inc
not
imul
pop
test
mov
and
jecxz
mov
fsubrs
dec
jo
dec
add
xor
pushf
inc
xchg
and
test
mov
into
ds
ret
jl
adc
test
xchg
dec
inc
lahf
cld
push
mov
or
sbb
jb
outsl
mov
jmp
jno
test
je
divl
adc
loop
lcall
aaa
mov
sbb
or
cmp
or
jne
lea
popa
add
pop
xchg
lcall
mov
sbb
sub
jmp
bound
test
adc
fdiv
mov
sbb
loop
inc
cs
add
test
pushl
das
das
mov
movl
sbb
mov
adc
in
inc
sub
or
push
mov
js
xchg
or
shll
call
adc
dec
sbb
fisttps
and
ret
or
daa
out
int
push
add
je
hlt
daa
clc
inc
push
ret
xor
pushl
testl
es
ss
jecxz
sbb
sub
les
scas
xchg
aam
jp
cs
dec
bound
scas
inc
push
andb
clc
xchg
xor
pop
push
rorb
loopne
ds
sahf
pop
adc
or
mov
inc
nop
insl
push
pushf
sbb
in
lret
xchg
int3
jnp
cmpsb
mov
push
pop
push
push
out
fcos
out
inc
shr
rcr
shr
rcr
or
jne
div
pop
dec
adc
inc
fnsave
mul
pop
jb
cmp
or
cmp
or
jns
pop
divb
sbb
adc
add
fcmovu
fcmovu
lret
mov
xchg
adcb
inc
mov
addb
inc
add
jno
jle
pop
jmp
add
mov
repnz
int
cli
or
movb
cmp
adc
push
jbe
call
lahf
sub
pop
mov
adc
adc
push
and
cmc
mov
push
lea
mov
cli
cmp
add
sbb
or
clc
out
sub
mov
enter
ret
sbb
pusha
jl
orl
mov
xor
nop
pusha
dec
leave
call
jne
mov
push
sbb
cmpsb
sbb
daa
cmpb
adc
sbb
wbinvd
fisttpll
stos
insb
lcall
dec
movsb
dec
ret
sbb
aam
add
push
sub
jle
jne
lea
and
push
imul
or
push
lret
push
sub
adc
test
ret
cmc
jne
fcmovu
cwtl
and
add
lea
xchg
and
jns
adc
adc
bound
pusha
loop
cmp
and
addb
push
mov
dec
xor
lds
test
push
leave
add
push
fistps
test
sbb
subb
mov
mov
push
in
push
mov
aas
rolb
fs
fdivrs
push
stc
ret
inc
xor
adcb
lcall
xor
dec
dec
dec
bound
add
mov
iret
add
add
add
pop
sbb
jns
and
or
sub
sahf
stos
add
push
jb
adc
xorb
add
cmp
push
and
push
in
popf
or
aas
sar
mov
add
cmp
or
sahf
mov
lock
sbb
adc
xchg
add
insb
or
jo
hlt
jo
cmp
or
pop
add
lahf
jne
sbb
cltd
mov
mov
imul
mov
lea
test
jae
and
or
pop
xlat
add
pop
lea
adc
pop
ret
dec
sbb
add
add
movsb
mov
pcmpeqb
orl
popa
jge
jle
sub
or
mov
fistl
push
adc
mov
xor
ret
icebp
jmp
iret
xor
jo
and
mov
and
add
xorl
inc
loope
jo
mov
push
out
cmp
je
cmpsl
lea
out
and
popf
sarb
push
aam
xchg
pop
addr16
incb
inc
fisubrs
std
cld
pop
mov
inc
dec
and
scas
or
test
and
pop
add
sbb
std
sbb
pushf
add
cld
push
add
dec
push
mov
int
jae
insb
clc
jo
pushf
sahf
push
mov
icebp
mov
inc
or
add
mov
or
and
dec
test
cmp
jb
jbe
enter
pop
push
scas
dec
and
push
pop
inc
cmp
roll
xor
adc
dec
sbb
imul
mov
pop
jne
add
bound
inc
mov
or
push
push
xchg
mov
sbb
mov
or
mov
or
sub
or
lahf
push
push
inc
in
mov
mov
cs
or
ret
cmp
lock
outsb
or
orl
jo
push
cs
popf
mov
enter
mov
pop
movsl
add
inc
sbb
pop
dec
and
add
cmp
je
inc
addb
jbe
sbbl
cmpsl
mov
add
loop
mov
push
push
adc
cmp
imul
add
es
or
jo
sbb
cmp
fadd
inc
gs
add
pop
add
sbb
std
jo
add
sti
add
subb
cltd
popa
loope
jmp
pusha
rcrb
ds
aam
add
js
test
xchg
cwtl
lock
mov
leave
and
mov
xor
sbb
inc
add
and
loop
xorl
cmp
stc
imul
pop
or
cmp
xchg
push
push
mov
lea
in
and
mov
inc
arpl
fs
add
pop
leave
push
sbb
sub
rorb
dec
or
sub
dec
lods
cltd
pop
jmp
adc
std
adc
movsb
push
cmp
pusha
jo
lock
imul
and
sub
call
add
pop
sbb
add
cmp
sbb
popf
cmpsb
fisubrl
jne
xchg
hlt
sub
ret
sti
or
lock
out
shll
fs
fldcw
sbb
dec
pop
jne
enter
filds
jmp
sbb
fimuls
or
sub
xchg
insb
insb
addb
clc
pop
fisubrl
dec
je
cmp
scas
mov
mov
xor
jb
mov
fwait
rol
xchg
mov
xchg
call
cmp
add
push
in
inc
mov
and
mov
scas
push
mov
test
add
decb
jne,pn
sbb
inc
mov
cs
sub
adc
adc
and
mov
mov
pop
mov
sbb
adc
pop
sub
pop
xchg
push
sub
sbb
push
push
dec
jmp
ret
mov
insb
rolb
repnz
cmp
aaa
xor
jo
dec
aam
lods
xchg
shll
lret
jno
pop
add
enter
push
mov
jmp
inc
xchg
frstor
ret
lds
sbbb
sbb
negb
pop
int3
push
xchg
or
jecxz
add
jne
cmpl
shrb
and
cmp
xchg
and
cmp
jbe
jecxz
push
pop
dec
repnz
out
inc
punpcklbw
pop
and
ret
insl
jmp
aaa
dec
jae
cli
cmp
lret
jecxz
cmpl
lret
mov
add
xor
imul
test
pop
rcrb
loope
rcll
add
jne
push
cmc
sbb
fildl
jmp
aam
rcll
sbb
cld
cmp
jbe
test
sub
ljmp
fimuls
push
sub
adcl
mov
mov
ret
mov
sbb
loop
mov
cs
mov
xor
repz
fidivrs
adc
daa
or
adc
xor
sbb
ret
dec
add
cmp
in
inc
lods
mov
out
mov
nop
jnp
lods
movl
sbb
push
add
adc
fdivs
adc
cld
mov
inc
xor
cmp
pop
dec
or
ret
mov
mov
insb
inc
mov
adc
sub
fs
movb
mov
loop
xchg
pop
sbb
xor
lods
and
or
jne
xchg
add
inc
fs
xor
sub
sub
sub
repz
jmp
xor
dec
inc
loop
addl
incl
mov
add
inc
pop
je
in
dec
push
pop
es
jb
je
and
and
orl
push
mov
mov
adc
xor
add
add
push
xor
sbb
add
inc
daa
lcall
or
push
cmp
leave
or
rolb
jp
shr
mov
inc
add
xor
inc
jne
int
pop
loope
pop
add
adc
adc
sub
inc
sub
pop
sub
rol
cmp
dec
in
xor
sbb
ja
imul
rcll
inc
mov
mov
adc
or
jge
push
icebp
add
loope
lea
imul
mov
inc
jecxz
add
shl
lods
cs
mov
adc
lock
xchg
adc
mov
orl
hlt
sub
clc
or
pusha
lock
xchg
repnz
aam
bound
mov
cs
and
inc
or
outsl
cmp
inc
or
and
in
fs
add
dec
mov
popf
mov
cmp
dec
inc
inc
or
jne
clc
or
cmp
push
sar
mov
add
add
adc
das
mov
adc
hlt
rclb
pop
clc
push
js
xchg
dec
jb
stos
add
cld
gs
push
jge
shlb
ret
jmp
sbb
rorb
sbb
addb
jmp
ficompl
sahf
popa
adc
or
or
into
add
mov
xor
pusha
lock
or
push
data16
xor
clc
push
push
rclb
xchg
push
pop
push
popl
fimull
add
pop
popa
mov
add
call
jl
sub
jmp
add
or
or
or
insl
push
and
xor
jo
sbb
shll
add
dec
jecxz
out
mov
add
cmp
scas
add
mov
pop
sbb
add
mov
sbb
shlb
and
lea
leave
adcl
and
add
addb
adc
mov
sar
sarb
jg
popf
sbb
or
adc
test
jle
pop
es
sbb
jo
push
mov
dec
push
add
push
test
push
mov
lock
clc
add
out
add
jl
push
out
inc
add
movsl
mov
pop
and
sbb
jge
inc
or
inc
adcl
dec
data16
je
xlat
ret
xor
push
adcb
ss
jmp
xchg
andl
testb
or
rorb
cwtl
xor
mov
jge
sub
aas
push
aaa
xor
rcrl
push
mov
jne
test
loopne
cmp
or
je
and
in
mov
dec
movl
and
mov
jmp
add
je
scas
pop
notb
pop
xchg
lods
push
adc
sbb
push
pop
dec
adc
dec
out
mov
push
xor
shlb
ljmp
addr16
mov
adc
xchg
daa
in
xor
push
xchg
movsb
loope
lock
dec
lret
xor
and
filds
pusha
mov
test
adc
loopne
or
into
jbe
lock
not
push
shrl
sub
sbb
pop
mov
les
jb
adc
loop
pop
xchg
dec
add
ret
sub
sbbl
and
dec
cmp
xchg
ds
mov
shrl
push
pusha
or
jle
push
scas
sbb
mov
popa
push
mov
dec
sarb
sub
adc
mov
mov
add
add
ret
pushl
fmull
mov
push
add
push
push
jae
jmp
stc
push
lods
loopne
jne
ja
mov
enter
enter
repz
mov
inc
adc
jl
mov
or
test
out
repnz
mov
xchg
ret
sub
cmp
dec
call
insb
sbb
pop
or
push
cmp
fnclex
test
insb
iret
dec
stos
sbb
add
data16
push
lods
ficomps
or
mov
frstor
sahf
jb
mov
imul
arpl
push
mov
jb
add
xchg
add
push
daa
mov
test
insl
lods
push
in
pop
iret
dec
shr
popa
or
ss
xor
call
imul
lcall
int3
lock
inc
adc
mov
insl
pushf
or
pop
lcall
or
js
push
cltd
and
lock
cmp
push
cmp
test
or
cmp
jb
pop
mov
fistl
cmp
das
jg
add
fistpl
dec
jmp
pop
mov
xorb
or
jle
dec
xchg
notl
push
mov
imul
and
sbb
mov
sub
cmp
ret
xor
mov
lcall
outsl
fsubr
push
mov
add
pop
fldl
ds
icebp
mov
mov
pop
mov
sub
adc
outsl
outsl
stos
adc
jo
fdivs
jmp
cmp
or
sbb
xchg
mulb
fdivl
mov
mov
in
xchg
mov
pop
push
and
mov
aaa
leave
enter
push
jecxz
cmp
test
or
add
push
pop
mov
lods
test
lcall
cmp
jg
inc
jmp
scas
hlt
fsubrs
and
jbe
cmp
imul
push
push
cmp
movb
mov
fmull
and
popa
sbb
adc
inc
cmpsb
rcrb
cmpsb
mov
adc
lcall
mov
das
jle
cmp
push
ja
cld
and
or
incl
push
or
test
fs
mov
or
mov
xchg
cmc
or
fstps
shl
movl
leave
mov
repz
xorb
nop
test
movb
arpl
jp
mov
add
scas
push
cmp
je
or
add
testb
je
jne
fcmovu
into
sbb
or
test
or
mov
cmp
dec
dec
inc
popf
in
and
lods
sbb
andl
add
and
das
popf
and
sbb
cmp
orl
mov
push
push
jae
or
mov
lahf
cmp
inc
mov
jle
cmp
sub
jl
mov
pop
and
fs
dec
sbb
fnsave
adc
jl,pt
shr
pushl
sti
pop
sbb
out
in
lahf
adc
pushf
and
xchg
je
cmp
lock
mov
dec
sub
mov
sub
rcrb
push
stc
das
adc
and
jbe
push
inc
sbb
mov
add
or
adc
or
sbb
jbe
cmpsl
mov
arpl
mov
sbb
and
mov
jl
push
or
push
fs
rorl
xor
add
jecxz
sbb
add
push
jl
push
or
jo
xor
or
add
add
push
stos
sub
les
add
mov
xchg
cwtl
mov
sbb
pushf
sbb
xor
subl
test
add
cmp
add
xor
push
adc
adc
adc
inc
out
lahf
dec
sahf
movsl
test
mulb
fs
pop
jl
es
pusha
mov
push
sub
movsl
sub
sbb
jb
fstl
mov
mov
fdivrl
fneni(8087
test
les
push
loope
xchg
cwtl
sbb
sub
cmpsl
push
gs
add
or
dec
mov
jbe
push
dec
cmp
sub
lea
sbb
adc
dec
inc
fdivs
inc
push
and
sub
mov
add
lods
cld
inc
jp
outsl
mov
sub
gs
pop
cmp
cmpsb
sbb
cmpl
adc
ror
ja
inc
or
sbb
je
fidivrl
jp
pusha
xor
add
cmpsl
movsl
mov
and
lods
cmc
sbbl
addr16
dec
push
cwtl
and
xchg
and
sbb
addr16
mov
shl
into
cmp
cmpl
rcrl
in
mov
lret
mov
jge
push
mov
cmc
ljmp
mov
ds
lock
rol
adcb
xor
jle
test
cmpsb
popf
jbe
push
or
dec
or
andb
push
jle
mov
or
js
push
and
ja
wbinvd
psllw
add
repnz
dec
shlb
mov
adc
lock
shld
stos
xor
ficompl
sub
test
je
jbe
cltd
aam
push
cmp
cli
inc
jmp
jg
add
pop
inc
mov
push
jmp
mov
push
sbb
je
xchg
je
cs
xchg
sbb
jmp
or
mov
outsl
sub
scas
gs
shl
add
inc
add
mov
add
popa
jmp
lods
mov
nop
stc
cmp
jae
repnz
pop
pop
call
adc
cmpsb
inc
push
pop
cmp
mov
add
repz
add
call
mov
scas
ja
fcoms
or
xor
inc
xor
daa
xchg
loope
adc
fwait
pop
jbe
sub
mov
xchg
sar
aaa
and
jne
mov
icebp
enter
hlt
adc
inc
sbbb
or
icebp
scas
sub
add
shll
cltd
popa
adc
mov
test
mov
repnz
out
pop
mov
cmpb
lea
pop
je
pop
inc
sbb
insl
mov
sub
imul
xchg
or
lcall
pop
xorl
jb
addr16
jge
cmp
jae
push
cmp
jl
mov
inc
insb
rorb
sub
xchg
add
in
xchg
adc
pop
jns
out
je
inc
jle
pop
lock
jne
clc
push
mov
or
into
cmc
pop
pusha
movsl
mov
push
ljmp
mov
sub
pop
cmpb
inc
add
mov
cmc
dec
inc
stos
in
dec
dec
or
push
dec
xor
enter
icebp
stos
xchg
pop
mov
ds
mov
jp
int
sbb
add
insb
lret
pop
das
js
or
add
or
adc
lods
mov
lock
mov
and
jne
add
mov
add
std
jne
jmp
frstpm(287
sbb
mov
or
push
arpl
jne
das
sbb
ret
pop
lock
dec
sarb
add
jl
les
push
scas
xor
inc
sbb
sub
inc
and
subl
sub
bnd
dec
push
mov
and
add
jp
sbb
add
clc
dec
sub
arpl
addb
xor
jg
stos
jo
jl
ss
test
outsb
xchg
jle
mov
pop
rcl
repnz
push
pusha
jbe
add
test
sbb
decl
xchg
insl
pop
test
dec
jg
adc
orl
call
lret
pop
hlt
add
js
int
aad
lret
sbb
lock
mov
test
jg
popa
sbb
popf
mov
aad
ret
scas
pop
and
negb
std
jb
test
std
xchg
or
jne
es
cmp
notl
shr
movsb
ljmp
sbb
push
adc
push
fwait
pusha
and
test
jbe
inc
cmc
sub
xor
sub
mov
push
ljmp
and
dec
sbb
xor
mov
jo
jo
out
mov
mov
mov
call
je
cmp
adc
jecxz
es
cmp
jb
testb
sahf
add
inc
sub
data16
dec
sub
add
out
gs
movsb
mov
movb
and
es
sbb
jns
jb
cmp
mov
push
push
or
adc
sub
in
push
cwtl
data16
inc
push
popf
rcr
xchg
xchg
cmp
xor
idivb
cmp
outsl
jo
clc
shl
push
out
adc
mov
mov
cld
mov
call
pop
mov
pop
es
jmp
sbbb
mov
jmp
push
inc
pop
pop
cltd
adc
add
pusha
aam
or
pop
test
test
inc
test
push
mov
mov
mov
adc
xor
sub
sbb
or
cmp
jb
jbe
mov
lea
lea
or
mov
test
add
int3
cmp
mov
sbb
push
sbb
popl
lods
push
mov
cwtl
nop
push
cld
xchg
push
dec
je
incl
enter
sub
adc
pop
sti
pop
inc
negl
jle
mov
mov
lea
add
sub
pop
mov
ljmp
rolb
call
pop
cwtl
cmp
shll
cld
sbb
shl
stos
mov
push
push
pop
rol
popw
xor
or
in
mov
movsb
in
cmpsb
int3
addl
adc
xchg
xchg
fldt
sbb
xchg
xchg
xchg
xchg
sub
xor
and
inc
and
daa
mov
inc
inc
cmovs
add
add
leave
pusha
fs
leave
jo
js
movsb
cmp
adc
xchg
dec
es
mov
xchg
cwtl
pushf
aaa
cltd
fs
mov
cmpsl
fsubs
xor
cs
add
add
lock
sub
hlt
and
dec
dec
imul
data16
clc
adc
cld
adc
or
sbb
or
inc
push
dec
and
or
and
dec
dec
enter
enter
pop
mov
into
inc
or
adc
ret
xor
dec
dec
inc
ret
add
cmpsb
cmp
shlb
xorl
imul
nop
inc
adc
or
fistpl
in
mov
and
sub
cmp
lock
add
mov
pop
xchg
or
fnstenv
and
dec
sbb
push
jle
inc
push
xor
push
syscall
loopne
fwait
sbb
pop
inc
dec
pop
pop
aam
or
adc
repnz
add
out
ret
or
sbb
nop
xor
fiaddl
jne
mov
outsb
cltd
jne
and
inc
movsb
fbstp
and
fdivrs
ss
cmp
add
mov
subl
or
fisubl
sub
ja
and
xor
add
mov
arpl
mov
add
push
jle
adcl
fistl
int3
sbb
pop
adc
test
js
pusha
in
dec
push
negb
add
cmp
pop
je
push
pushf
insl
imul
clc
and
loopne
adc
cmp
pop
xchg
add
add
push
add
dec
js
push
addr16
fadds
les
repz
cmp
adc
push
shll
lret
add
add
mov
sbb
push
push
xor
outsl
pop
fs
lcall
ret
int
mov
xor
adc
ret
mov
adc
xor
lods
add
sbb
jbe
mov
dec
in
xor
orl
adcl
sub
iret
int
add
jb
sahf
loope
lret
and
mov
push
popf
cmp
pushl
push
outsb
mov
test
pop
inc
loopne
mov
adc
lock
cmp
jb
push
mov
push
outsl
lea
push
jmp
enter
mov
sbb
xor
mov
adc
add
loope
andl
push
lcall
sbb
xchg
and
adc
fidivs
sbb
jo
push
push
lret
xchg
xchg
call
fisubrs
lds
es
fbld
in
cmp
xor
sbb
sub
std
or
xlat
jecxz
add
addb
jp
push
lea
push
subl
xchg
cmp
sahf
mov
add
jle
in
fcmovnbe
sti
mov
or
ret
pusha
and
pusha
ret
cltd
push
data16
rorb
movsb
sbb
and
push
mov
or
stc
popf
add
sbb
mov
nop
xchg
jbe
sarb
inc
insb
push
dec
ljmp
add
push
inc
pushl
mov
rcrl
cmp
dec
add
loope
dec
leave
add
or
pop
addl
and
xchg
sbb
and
movsb
cmp
mov
orl
cmp
in
inc
fstpt
je
mov
ret
add
loope
adc
push
hlt
mov
cmp
enter
stos
jmp
push
or
mov
cmc
mov
cmp
add
jbe
xor
mov
mov
xor
push
xchg
mov
push
push
adc
sbb
sub
push
dec
inc
lea
loopne
ds
push
es
inc
pop
fmull
jnp
loopw
cmp
pusha
or
dec
xor
xchg
cmp
inc
jne
pusha
xchg
push
lea
jl
cmpsl
in
and
dec
sub
adc
xor
sarl
cmp
test
sbb
mov
sbb
cmpsb
int
push
test
lods
push
or
push
add
loopne
inc
mov
stc
cmp
call
add
movzwl
adc
js
mov
push
xchg
loop
cmp
add
inc
int
and
notl
daa
sub
pop
lds
push
clc
test
fsub
push
add
pop
cmp
pop
or
push
adc
jb
pusha
loope
adc
push
pmulhuw
js
sbb
dec
add
xchg
sbbb
popa
push
add
adc
lret
neg
mov
push
xchg
mov
jbe,pt
sub
sub
scas
jnp
adc
push
cmp
mov
aas
js
mov
inc
cmp
cmpsb
aas
movb
inc
mov
jnp
jbe
adc
cmpl
fmuls
jo
dec
pop
push
and
inc
pop
inc
ja
inc
add
and
daa
jmp
or
roll
inc
cs
dec
add
sub
rclb
sub
lods
push
orl
pop
dec
fistl
sbb
or
jns
mov
lret
bound
pop
add
add
aas
mov
push
stos
xchg
dec
dec
stc
pop
xchg
pop
mov
add
and
orb
add
sub
and
cmp
addb
test
mov
jae
cmpsb
pop
lock
sub
in
or
sub
out
xor
jmp
sbb
test
fisttpll
pop
test
test
add
fidivs
lret
jmp
or
and
push
sti
mov
out
inc
jl
lea
ret
ret
mov
mov
pushl
lods
adc
gs
mov
dec
sub
ljmp
pop
cmp
adc
jle
xchg
or
xor
add
mov
popf
lea
pushf
jb
cmpb
mov
sbb
dec
outsb
jg
or
iret
movsl
loopne
or
cmp
pop
enter
and
pop
ja
xchg
int3
test
nop
pop
orb
test
aaa
push
pop
inc
adc
add
dec
pop
scas
cs
and
mov
sbb
add
cld
clc
sarl
push
cs
sub
dec
or
sbb
mov
xor
xor
aaa
arpl
andl
lods
loopne
xchg
jmp
unpckhps
imul
aaa
and
sbb
or
ljmp
mov
inc
add
repz
push
or
sti
ljmp
add
add
inc
jge
mov
or
xor
push
inc
dec
int3
frstor
mov
ret
push
out
data16
loopne
mov
or
shll
ret
fwait
sub
mov
ljmp
les
push
mov
out
pushf
cli
sub
insl
sbb
inc
mov
pop
lods
add
mov
ror
jo
aam
repz
push
inc
lret
mov
jb
cmp
sbb
nop
mulb
leave
arpl
ja
into
sub
mov
or
daa
mov
sub
cmp
pop
notl
mov
dec
pop
mov
mov
inc
out
push
arpl
mov
loope
andl
jg
rclb
leave
in
jl
fmull
mov
jge
addr16
pop
lods
inc
adc
add
xchg
repnz
jae
rorb
rclb
ss
jbe
or
pop
fs
adcb
push
icebp
sar
pop
lods
pop
lods
pop
pop
inc
loop
orb
cmp
jae
fisttpl
jp
inc
dec
lahf
clc
je
add
and
xchg
pop
lcall
add
data16
aad
sbb
push
js
mov
les
hlt
dec
cmp
shlb
cld
jbe
push
lahf
bound
in
push
and
je
inc
cmp
xchg
outsb
pop
jl
xchg
test
add
js
inc
fwait
mov
sbb
push
add
or
push
popa
add
cld
mov
jns
add
inc
filds
movsb
cmp
sbb
cmp
xor
in
jmp
push
popf
outsb
cmpsb
lock
dec
lret
pop
dec
lret
addl
test
cmpsb
dec
int
xor
jecxz
test
dec
cmp
mov
loop
jle
add
mov
xchg
ret
push
rcrb
fistps
inc
loope
push
movsl
cmp
and
pop
add
fs
lds
sbb
pop
adc
jnp
push
and
push
cmp
sub
rclb
push
xchg
cwtl
fistpl
cmp
mov
sub
sub
and
fcoms
ss
cmp
cmc
mov
repnz
dec
and
sub
xchg
push
jmp
add
loop
das
mov
cltd
cmp
pop
dec
mov
xchg
lret
inc
dec
pop
mov
xor
das
push
jo
mov
dec
cmp
mov
aad
js
pop
sbb
pop
clc
imul
fisttpll
xor
add
mov
adcl
fldl
mul
pop
aam
inc
decb
and
mov
fwait
scas
xor
dec
mov
dec
cmp
mov
ss
fdivrs
repnz
hlt
jo
das
adc
inc
das
ja
nop
lret
rorl
jl
adc
movsb
push
push
jle
std
push
add
adc
adc
sub
or
sbb
or
adc
stc
inc
es
or
xchg
pop
gs
mov
mov
mov
popa
pop
push
inc
mov
pop
jmp
push
shlb
push
and
push
ret
mov
icebp
les
push
hlt
jne
and
push
adc
mov
dec
or
ror
cltd
dec
add
xor
rorl
gs
dec
ret
aam
or
test
mov
leave
push
in
jg
aas
push
pushf
pop
mov
xor
pop
sub
je
push
popf
punpckhdq
inc
mov
je
jnp
orb
pop
idivl
and
outsb
inc
addb
loope
and
in
xchg
add
and
icebp
push
push
in
jnp
cmpsl
mov
inc
or
out
je
test
push
or
xchg
js
dec
repnz
and
push
mov
xchg
test
sbb
ret
xchg
add
or
xor
in
or
nop
outsb
jg
and
not
xor
loope
xor
fcmovne
or
shr
dec
outsb
add
jmp
mov
and
or
lock
test
adc
or
add
pusha
xor
out
or
addl
cmp
je
or
or
sub
adc
or
inc
jmp
pop
clc
outsb
divl
add
std
or
jmp
inc
and
mov
cmp
add
jl
and
jecxz
jbe
xor
xchg
jmp
call
adc
xor
arpl
mov
mov
jge
jge
je
sbb
xorb
loope
flds
and
mov
pusha
mov
pusha
loope
pop
sub
shrl
mov
mov
xchg
adc
fnstsw
pusha
ljmp
mov
pop
je
push
addr16
inc
testb
push
es
adc
test
add
add
test
fisttps
incb
das
call
or
sub
inc
jmp
sbb
mov
imulb
pop
testl
insl
imul
pop
xorb
jnp
lods
xor
push
and
inc
add
adc
add
inc
flds
fmuls
and
or
pop
xor
sbb
repz
sub
sbb
and
cwtl
cmp
inc
fistl
pop
sub
test
in
ficomps
roll
mov
sti
lret
mov
mov
inc
aam
xchg
jmp
sbb
push
aaa
sbb
mov
and
xchg
fcompl
sbb
in
pop
add
mov
inc
jl
add
sub
dec
push
in
lods
sub
jmp
sub
push
fstl
fsts
sbb
test
int3
in
mov
div
add
xor
sbb
pop
cmc
jnp
jp
clc
push
loope
pop
inc
mov
lods
or
cli
imul
or
or
pop
call
cmp
lahf
jne
shrl
mov
add
div
jb
enter
pop
mov
mov
stos
out
dec
into
pop
clc
xor
in
mov
subb
andb
loopne
into
push
idivl
jp
push
sahf
jmp
inc
mov
push
pop
movsb
lods
mov
std
adc
xor
adc
or
jge
rclb
mov
mov
push
out
add
cmp
inc
mov
push
add
xchg
fwait
and
add
and
das
adc
add
add
xor
xchg
out
cmp
push
mov
push
xchg
insb
push
movzbl
arpl
pop
push
lea
xchg
mov
je
sub
pop
inc
je
jl
push
sarb
or
adc
jg
adc
hlt
adc
or
and
pop
sub
pop
orb
js
fs
inc
out
icebp
aad
rcrl
jecxz
adc
mov
lds
imul
mov
daa
jnp
mov
or
xor
xor
mov
jo
andl
dec
sbb
loopne
xchg
scas
adc
mov
das
mov
fdiv
in
mov
imul
jl
inc
add
subb
mov
lea
push
or
out
mov
sbb
and
sub
pushf
adc
and
inc
jo
out
pop
fisubs
adc
cmp
sahf
fnstsw
add
pushf
inc
adc
add
mov
jae
pop
sub
xchg
push
std
lret
inc
add
adc
sbb
pop
lahf
enter
cs
scas
and
cmpps
sahf
ljmp
test
jg
or
cmpsl
and
sti
gs
popa
fs
mov
and
mov
sbb
xchg
push
xchg
and
xchg
adc
fadds
into
fistpl
sbb
mov
das
pop
fbld
lret
sbb
test
jnp
imul
pop
or
mov
mov
push
aam
gs
or
xchg
shrl
inc
add
or
push
hlt
daa
test
out
mov
push
add
xchg
mov
sbb
xor
in
sbb
scas
push
add
fdivs
aaa
pushf
jbe
sub
ljmp
cmp
sub
dec
aad
mov
clc
push
fisttpll
or
sbb
loop
inc
flds
add
xchg
and
xor
mov
push
push
mov
add
or
sub
fwait
out
and
cld
sahf
adc
sbb
lods
rolb
aam
or
lods
ret
jle
call
mov
ja
xor
push
xchg
dec
and
inc
je
gs
insb
sbb
adc
ldmxcsr
pop
push
inc
mov
dec
mov
pop
test
test
adc
movsb
ret
repz
lcall
push
mov
aas
inc
adcb
mov
push
push
insl
jmp
inc
mov
test
cmp
dec
sbb
call
adc
shlb
cli
inc
inc
sub
mov
push
push
ret
push
mov
adc
data16
lock
push
ret
mov
jnp
stc
int3
xchg
add
xor
xchg
test
mov
or
adc
rolb
imul
nop
cwtl
jp
adc
movsl
filds
mov
xchg
mov
cmpsl
xor
psubq
xchg
sbb
sub
jmp
outsl
dec
sub
call
or
jno
sarb
or
lret
into
add
or
lret
add
adc
add
xor
jge
pop
push
aam
lock
inc
dec
and
mov
mov
ljmp
outsl
subl
pop
adc
ret
mov
or
cmpsl
int
and
push
mov
or
jo
dec
outsl
add
dec
push
or
test
and
push
out
sub
push
or
sbb
sti
add
push
mov
inc
mov
mov
pop
test
jne
or
jl
xor
hlt
mov
stos
ret
subb
mov
shrb
cli
inc
out
clc
orb
cmc
push
or
rcrl
push
pop
cmpsb
pop
cmp
pop
imul
dec
xchg
loopne
lea
pop
mov
clc
subb
inc
shl
mov
pop
incb
aam
loop
rolb
fldl
adcl
repz
pop
shr
outsb
push
cltd
insb
pop
and
mov
out
mov
dec
or
inc
insb
sub
jae
outsl
fwait
dec
jbe
dec
mov
add
test
cmpsl
sub
xor
cmp
sbb
cli
out
pusha
sub
adc
loop
or
jb
incb
jae
mov
add
dec
mov
adc
jns
sub
pusha
mov
push
add
js
imul
add
hlt
mov
xor
sti
cmp
dec
and
ret
or
sub
jp
fcomps
fs
push
aam
xor
cmp
xor
push
sbb
lods
mov
lods
jg
lcall
cld
not
ret
push
add
in
popf
je
loopne
mov
and
pop
ds
push
or
adc
jbe
jne
shl
and
or
adc
mov
jl
outsb
sub
inc
shl
mov
jl
xchg
adc
xchg
aam
and
jbe
inc
jge
popa
sbb
push
pop
in
mov
add
cltd
pop
hlt
test
or
and
adc
data16
sub
mov
cmp
shll
cmp
setle
xor
dec
mov
pop
push
or
sub
lcall
mov
inc
xor
inc
lock
sbb
orl
xchg
loope
cld
xchg
leave
inc
mov
nop
cmp
mov
lods
out
addl
mov
dec
add
or
ffree
xchg
cmpl
gs
xor
mov
test
rcrb
and
mov
add
nop
data16
ret
jge
xor
add
sub
popa
nop
jle
shl
out
roll
xchg
and
or
and
fildl
add
dec
in
inc
movsb
test
ficompl
lock
add
xchg
aad
aad
push
xchg
mov
push
and
jo
mov
jns
adc
enter
sub
cmp
das
jns
adc
adc
aam
dec
adc
mov
sbb
sbb
jl
mov
mov
dec
jge
mov
xor
push
adc
into
mov
and
mov
lcall
pushf
imul
ljmp
imul
sub
lcall
cmp
in
jne
inc
jmp
mov
sub
mov
lock
das
add
add
jmp
ja
outsb
push
sub
fs
and
mov
cmp
shl
fadds
call
inc
inc
adc
fsubl
je
add
into
jmp
mov
in
neg
aas
sbb
mov
jmp
cmpsl
mov
mov
mov
inc
xchg
push
sub
and
inc
pop
insb
mov
jle
pop
les
in
adc
push
xor
jecxz
cmp
jmp
dec
push
mov
aad
jbe
push
lods
subl
out
sub
dec
fs
mov
dec
or
mov
jae
cmp
ret
dec
cmp
jbe
sbb
push
pop
jge
pop
out
jge
sarl
mov
jbe
nop
iret
sub
add
jne
dec
dec
jae
imul
test
aad
cmp
pop
add
xor
and
call
aaa
mov
lods
out
push
sub
mov
or
orl
cmp
push
and
inc
mov
xor
mov
jo
test
mov
and
call
mov
shrl
add
xor
fldenv
pop
cmp
cmp
testl
cmove
fdivp
pop
push
les
push
addl
jmp
cld
mov
jge
push
sbb
and
sub
outsl
push
rolb
or
push
popa
mov
jecxz
add
pushf
jmp
push
cwtl
pop
scas
mov
icebp
xor
mov
dec
adc
push
cmpsb
sahf
mov
mov
inc
std
seto
or
jge
neg
add
adc
sub
jl
fcompl
cmp
aad
mov
sbb
pusha
lods
loop
ret
jge
jle
fsubr
in
mov
xor
jne
adc
fidivl
out
les
subb
jge
mov
mov
mov
adcl
cmpsl
popf
add
mov
inc
mov
jb
mov
dec
mov
mov
mov
inc
pop
sub
xchg
mov
push
xor
and
and
and
jne
and
shlb
andl
adc
lret
lahf
sbb
ja
scas
push
sub
ja
mov
pop
mov
pop
loop
out
push
movb
testl
stos
pusha
mov
jne
or
jne
test
into
dec
outsl
inc
into
jne
inc
or
cmp
ficompl
jne
hlt
int3
add
jne
adc
mov
add
add
cmc
push
push
mov
aam
lea
xor
imul
adc
sub
sbb
cld
add
or
mov
ja
mov
add
xor
mov
sub
sub
dec
sbb
stc
jg
add
xchg
push
or
aaa
and
dec
or
mov
shll
hlt
lods
add
or
shr
insb
and
push
out
jge
sbbb
jg
or
xor
lds
jge
mov
les
push
xchg
jno
notb
mov
outsl
mov
adc
dec
fcom
insl
fadd
loopne
shr
or
daa
dec
lods
jge
shl
call
push
aam
aam
shrl
push
das
int3
mov
mov
rolb
and
push
xor
jne
cmp
dec
fistpl
add
ficompl
sar
pop
xor
pop
lret
push
dec
lock
push
call
mov
push
jnp
mov
and
dec
mulb
jl
ret
nop
dec
ja
sbb
lock
cmp
jp
rcl
or
sub
push
nop
lret
lret
into
jmp
scas
iret
xor
adc
xchg
rolb
out
and
les
scas
test
subb
jne
push
lret
bound
sbb
das
sub
add
imulb
dec
loopne
sbb
add
pop
enter
insl
and
ret
in
or
mov
inc
mov
xchg
xchg
add
jns
mov
or
pusha
xchg
fmul
repz
adc
ficoms
adc
or
and
fdiv
iret
sub
jmp
inc
add
jmp
rcrb
cmp
icebp
enter
add
jle
push
les
push
mov
int
ss
mov
adc
mov
pop
cmp
adc
aam
in
ret
push
or
mov
in
mov
adc
lret
cs
or
ficoml
loopne
ss
cmp
je
or
out
aas
sar
rorb
cmp
je
mov
cmp
pop
jne
dec
mov
inc
inc
inc
shll
pop
add
fcomp
add
mov
addr16
jo
mov
mov
outsb
fisttps
les
or
add
xor
xor
dec
and
mov
std
and
repnz
push
dec
push
mov
cli
push
add
push
adc
cltd
ss
jbe
adc
xor
push
xor
popa
push
mov
pop
shlb
xchg
mov
and
dec
std
cmp
fdivs
or
inc
movsl
xchg
mov
xor
and
mov
je
sub
hlt
dec
setg
sub
mov
mov
loop
aas
sub
movb
lcall
sarb
add
push
ficoml
in
lds
es
inc
pand
sbb
loop
lock
lcall
icebp
pop
pop
lret
jmp
sub
add
fs
pop
or
pop
aam
fcmovnb
lea
mov
addb
sub
adc
jns
je
mov
les
sub
imul
ficomps
cld
xor
push
ljmp
sub
add
dec
mov
jmp
push
add
adc
ret
inc
pop
dec
sbb
dec
lods
mov
sub
add
out
push
cwtl
clc
mov
and
pop
inc
pop
and
insb
push
loopne
push
inc
cwtl
jmp
ja
push
ret
shl
or
jbe
jle
dec
add
loope
adc
jge
mov
rcll
out
sub
lahf
adc
ret
xor
shlb
enter
xchg
add
rorl
sbb
call
cmp
int3
dec
loopne
enter
and
mov
inc
jge
popa
mov
and
sub
xchg
shrl
pop
sub
jge
adc
les
out
jmp
popl
pop
es
aas
cmp
mov
or
adc
pop
loopne
add
adc
orb
inc
lret
lret
das
sar
mov
cmp
insb
add
mov
sar
lea
sti
xchg
or
testb
mov
and
push
add
cmp
testb
xor
cmp
inc
enter
aam
jmp
js
push
rcl
js
mov
dec
imul
dec
and
add
mov
popf
rcll
enter
test
popf
cmp
dec
fwait
mov
orl
neg
sbb
sti
pop
cld
shl
mov
jg
ret
daa
xor
or
jne
pop
mov
sahf
ret
jmp
out
jo
fwait
mov
test
movb
inc
sub
xchg
mov
or
xor
sub
mov
mov
push
sbb
gs
adc
sbb
in
push
movswl
sbb
mov
arpl
mov
add
cmp
pop
lock
add
mov
add
dec
shld
and
jle
mov
ss
jl
jmp
clc
mov
or
pushl
xchg
stc
inc
add
dec
jmp
addr16
xchg
clc
sub
adc
cmp
xchg
xchg
sbb
insb
lock
rol
call
push
addb
xlat
adc
cmp
add
adc
sbb
out
and
call
pop
sbb
js
jg
loop
add
in
push
sub
or
inc
adc
neg
cmp
mov
lock
push
push
cli
or
inc
shll
mov
aad
push
jns
add
jbe
cmpb
adc
shll
outsb
loop
jg
lods
jb
mov
dec
dec
inc
dec
pop
add
pop
or
or
rorl
out
sbb
pusha
pop
xchg
jne
adc
push
push
add
jae
stc
mov
ficoml
sub
mov
sub
jbe
dec
ljmp
cmp
loop
call
pop
jb
push
insb
add
mov
pop
sub
jbe
inc
mov
xor
cmpsl
pop
or
jmp
lock
inc
sub
adc
je
inc
sarb
mov
jne
or
push
sarb
lods
loop
cs
push
mov
pop
xor
add
sbbb
push
addb
add
pop
jo
test
sub
pusha
xor
push
cmp
xor
rolb
stc
dec
repz
cmp
daa
icebp
or
cmp
inc
lret
jbe
imul
xchg
xor
sbb
cmp
mov
stos
sub
icebp
cwtl
out
and
push
push
insl
push
jmp
insl
cmp
add
jl
jp
hlt
or
mov
mov
inc
push
bsf
stc
mov
inc
rolb
loop
mov
xlat
add
jns
outsb
mov
clc
gs
or
pop
sbb
mov
mov
sub
popa
je
inc
je
cmp
ss
cmp
xor
and
dec
jle
and
pop
dec
adc
push
inc
sarl
mov
xchg
mov
or
push
rorl
cmp
sub
fpatan
test
clc
enter
mov
in
call
adc
call
jne
fmull
insl
push
pop
clc
flds
or
adcb
push
push
xchg
cmp
mov
inc
dec
rorb
cmp
pop
add
push
adc
adc
movlps
xor
dec
dec
or
sbb
clc
inc
or
je
inc
ja
cltd
or
inc
clc
jmp
mov
jbe
mov
cmpb
jne
jp
and
pop
dec
xor
sbb
inc
or
hlt
inc
dec
das
xor
jp
cmp
push
or
movsl
cmp
mov
imul
dec
cld
mov
xor
lahf
dec
push
sub
and
xchg
pop
rclb
jge
lret
popf
popf
ret
push
sub
add
aaa
ss
addr16
mov
es
je
sub
push
mov
jbe
sub
mov
pop
sub
mov
movsl
xchg
cs
inc
mov
pop
add
adc
insl
out
lds
mov
fld
lret
jns
pop
lret
test
or
cmp
mov
xchg
push
pop
dec
push
mov
xor
jno
pop
cmpsb
imul
or
jp
pop
lea
push
cli
shlb
and
or
dec
mov
aad
hlt
inc
pushf
xor
add
cmp
nop
mov
mov
add
mov
jge
pusha
jg
push
adc
dec
in
testb
dec
sbb
jl
or
int
movsl
inc
pusha
mov
fnstcw
xor
cmp
mov
mov
icebp
mov
mov
in
mov
ja
add
xor
or
sub
movsb
fldt
es
jmp
or
jmp
ja
lcall
push
incl
outsb
jecxz
adc
mov
inc
negl
int
push
jb
jae
aam
lods
adc
shll
ss
pushf
or
xorl
sbb
mov
xchg
rcrb
ss
push
sbb
test
in
add
mov
mov
mov
scas
fisubrs
mov
ret
arpl
rol
into
push
sbb
add
pop
xchg
mov
xor
sahf
adc
fs
jecxz
divl
sbb
jecxz
push
push
mov
dec
sub
push
jns
jne
test
mov
or
lock
shl
xor
push
xor
add
pop
or
cmp
movsl
addps
dec
jae
jo
and
sub
movl
fmuls
insb
pusha
xor
xlat
sarb
cmp
jge
notl
jecxz
enter
cmp
push
insb
mov
or
fstl
aas
fldt
das
add
call
stc
insl
xor
sub
push
arpl
and
xor
cmp
loop
daa
sbb
inc
jmp
das
add
pop
jb
inc
pusha
add
arpl
aad
sbb
cmp
inc
test
data16
sub
sub
sub
push
cmp
dec
bound
outsl
xor
ret
fmuls
pop
test
icebp
rol
mov
jo
mov
pusha
mov
rcr
jge
jne
lea
jmp
adc
not
cmp
inc
in
adc
leave
mov
pop
repz
adc
adc
clc
ja
push
jp
pop
fsubl
imul
lea
addb
adc
jle
mov
add
cld
data16
mov
cmp
sbb
adc
inc
rcrl
xchg
shrb
dec
adc
sysexit
aaa
xor
popf
mov
mov
test
jno
xchg
roll
add
adc
xor
or
faddl
sub
cmpsb
mov
lods
rcrb
insl
test
loope
pop
jmp
inc
jb
movsb
lea
and
cltd
or
mov
pop
or
scas
dec
sbb
addl
lret
adc
js
push
insb
mov
jecxz
jb
jo
mov
push
lock
xchg
mov
out
pop
jae
adc
jmp
pushf
popa
mov
leave
xor
adc
push
loop,pn
xchg
lods
push
insl
cmp
mov
jne
push
mov
sub
divb
xchg
mov
pop
adc
mov
push
cmpsb
repz
and
mov
dec
cmp
lea
or
dec
adc
jmp
repz
add
or
push
idiv
outsb
dec
or
shr
or
xor
add
add
or
bound
scas
push
bound
cmp
add
aam
test
mov
cmp
mov
or
xchg
outsb
add
add
bound
rorb
test
push
push
idivl
inc
xchg
sub
jl
ds
add
pusha
lock
lea
mov
shr
cmp
mov
sub
or
mov
add
push
jp
inc
sub
mov
adc
enter
outsb
add
rorb
cmp
adc
out
decb
ja
mov
cmp
sbb
and
push
sbb
cmp
inc
add
loope
push
cli
and
mov
shl
andl
inc
in
add
dec
imul
ds
clc
stos
loope
jo
imulb
or
test
push
ror
loop
lret
test
je
dec
rolb
sbb
pushw
or
sbb
mov
sub
cmp
xchg
xchg
movsb
ficompl
icebp
sub
je
cmp
nop
sbb
push
add
xchg
pop
call
cmpsl
push
in
ds
fwait
cld
sub
jne
add
call
adc
jbe
ss
adc
mov
aam
or
ljmp
adc
test
xchg
sub
fnop
frstor
push
jle
mov
or
cld
inc
push
mov
ficoml
les
inc
test
pop
or
pop
cmp
cmp
leave
inc
xor
add
jmp
lcall
jl
cmpb
jl
xor
cmpb
testl
andb
xchg
adc
orb
jo
stos
push
adc
xlat
inc
cmpsl
incb
push
mov
push
push
and
push
nop
iret
ds
inc
adc
ljmp
lret
add
aam
pop
or
jl
inc
cmp
sub
and
add
dec
add
mov
fiaddl
jbe
dec
add
fildll
shl
or
or
sub
or
test
adc
push
fcmovu
add
shll
add
je
mov
dec
jo
or
cli
cmpsb
mov
xor
mov
or
pop
pop
pop
clc
lret
push
jbe
test
cwtl
jne
movsw
dec
lods
scas
clc
xor
insl
outsb
rorb
inc
and
add
aam
jo
xchg
xchg
or
nop
inc
dec
es
sbbb
pop
test
mov
mov
in
jg
pop
inc
sub
inc
inc
div
fdiv
fidivrl
cmp
sub
inc
or
cltd
in
sbb
inc
or
dec
xchg
sbb
enter
fcoms
xchg
ss
and
fsts
fcomi
sbb
adc
enter
sbb
and
dec
or
repnz
popa
xchg
dec
jne
pop
pop
pop
insl
xchg
lea
adc
lcall
or
jae
lods
rcl
ljmp
or
call
adc
cmp
js
outsb
push
idiv
and
sub
cld
lock
je
testb
inc
jb
or
add
mov
mov
es
orb
sub
pop
push
push
push
in
jle
mov
adc
ljmp
push
mov
ror
push
or
into
jbe
jns
aas
stos
ror
scas
dec
adc
push
mov
sahf
mov
cmp
add
push
sub
movsb
jp,pn
iret
rclb
pop
sbb
push
es
loop
setle
mov
add
insl
test
add
mov
jle
xchg
ret
adc
gs
mov
insl
rcl
or
cs
int3
push
cld
mov
test
dec
pushl
dec
cmp
test
fidivs
jg
inc
fidivs
lock
inc
jge
cwtl
push
sub
add
adc
in
adc
leave
jne
sub
cmp
testb
sbb
push
sub
leave
je
scas
and
push
push
mov
mov
mov
out
es
push
inc
clc
in
pop
je
les
mov
cmp
jb
cmp
ja
add
cmp
adc
cmp
jne
inc
xchg
gs
shll
leave
adc
mov
xor
idivl
pop
add
ss
add
cmp
inc
or
imul
ret
ja
cmp
add
popa
mov
pop
lahf
mov
lea
add
sbb
mov
ret
jmp
mul
imul
fdivs
push
push
addr16
jo
loop
mov
add
xorl
mov
adc
or
mov
and
push
sub
cwtl
jne
or
adc
add
cltd
std
fdivrs
pusha
adc
fisttpll
test
aad
push
fistpll
js
inc
add
jg
pop
aaa
adc
xlat
pop
push
inc
pop
mov
inc
cs
push
int3
mov
daa
pop
inc
xor
cmp
xchg
inc
pop
xchg
add
dec
xchg
sub
addl
adc
add
fidivl
in
or
cltd
ss
push
push
arpl
sbb
sbb
xor
inc
inc
xchg
rorb
mov
mov
pop
jle
cmp
sar
dec
mov
push
rcl
rcl
repz
repz
xlat
fcomp
and
out
sti
fstpt
mov
icebp
nop
data16
movb
dec
adc
sub
mov
es
movsl
or
cmp
test
mov
mov
ss
sbb
mov
mov
add
push
ret
inc
inc
push
add
dec
jmp
mov
push
outsb
or
imulb
adc
hlt
je
test
ret
fnstsw
adc
cmp
or
jne
or
push
inc
imul
adcl
adc
push
pop
push
popa
add
sbb
mov
imul
lret
jmp
sbb
sbb
lea
or
mov
inc
js
mov
ret
or
fcmovnbe
add
loop
mov
inc
push
out
loop
scas
rolb
adc
aaa
lock
call
push
mov
lcall
add
es
xorb
icebp
add
xchg
mov
jb
fistl
mov
decl
mov
add
add
imul
sub
ljmp
testl
into
and
lea
pop
adc
subl
jae
xchg
ja
add
sbbb
mov
pop
mov
aaa
repnz
in
ljmp
loopne
inc
or
hlt
push
xchg
mov
jne
mov
shl
outsb
popa
shll
push
mov
test
fsqrt
push
lea
dec
xchg
mov
or
or
push
mov
add
add
movsl
movsb
sub
cmp
pop
shll
inc
repz
addl
xor
cmpsb
cwtl
mov
jge
jl
loope
imul
rol
add
stc
jle
jle
or
in
outsl
jne
enter
xchg
or
add
cld
or
outsl
fcomps
loopne
cmp
rorb
cmpb
jg
or
cmp
movsl
add
inc
xchg
mov
or
pop
mov
shrl
jecxz
adc
in
out
xchg
mov
or
dec
sub
push
inc
inc
dec
add
or
test
test
div
cli
enter
cli
inc
cli
div
xchg
scas
or
popa
inc
sbb
loopne
mov
push
jnp
sbb
ret
fcoml
adc
push
inc
ret
mov
push
push
clc
add
and
rorl
mov
mov
rolb
dec
dec
cmp
push
xchg
cmpsl
mov
mov
lock
lods
cmp
mov
jp
insl
jno
repnz
pushw
sub
loop
out
rcl
out
jge
xchg
testb
push
inc
mov
or
cmp
mov
sbb
and
adc
xor
into
lret
jae
rorl
sub
jne
fcomp
sub
ss
inc
test
dec
popa
cmp
mov
int
sub
es
mov
push
jno
ret
adc
push
lret
cs
cld
lea
fcmovu
data16
pop
insl
cmpsb
test
and
inc
add
and
inc
inc
and
repz
idiv
sbb
xchg
add
sbb
divb
jb
inc
sbb
sbb
mulb
mov
sbb
out
or
jge
mov
lock
sbb
leave
pop
add
jne
mov
fnsetpm(287
loopne
adc
into
sub
fwait
mov
pusha
mov
jge
add
sub
mov
mov
adc
inc
mov
and
add
inc
mov
push
add
push
nop
push
push
jl
aaa
test
pop
jle
out
adc
out
decb
sub
push
pop
dec
pop
dec
pop
shr
pop
add
or
push
shll
test
jne
sbb
neg
and
pop
jle
inc
imul
or
loopne
loopnew
or
pop
xchg
fadds
lea
push
mov
mov
mov
push
into
je
push
adc
sub
out
clc
loope
push
push
sti
and
cmc
lahf
push
xchg
mov
repnz
mov
push
movsl
insb
push
add
sub
into
les
enter
push
pop
ret
sbb
push
movsb
xabort
add
rcll
add
enter
mov
push
shlb
add
idiv
add
daa
shr
mov
add
in
into
jbe
mov
inc
xchg
inc
lahf
jbe
mov
nop
dec
mov
stos
aas
std
add
xor
inc
cmpb
or
add
dec
cmp
and
mov
repnz
movsb
sbb
dec
add
add
fadds
lar
pop
add
repnz
mov
jp
jne
dec
mov
jb
lcall
adc
clc
push
ret
and
add
push
add
lds
adc
ds
mov
add
add
ret
xchg
add
add
test
popf
mov
mov
jl
mov
je
dec
add
inc
push
or
adc
dec
popf
movsl
or
add
mov
or
fs
push
add
or
pop
pop
scas
add
adc
push
add
pop
pop
mov
push
xor
les
adc
or
jae
push
divb
aas
test
lret
orl
inc
and
cmp
xor
into
add
jnp
clc
scas
mov
and
pop
pop
repnz
add
xor
ret
jne
or
mov
mov
mov
cld
shll
pop
jae
dec
movsl
test
add
add
add
sub
mov
lahf
add
or
mov
push
je
dec
pop
or
mov
xlat
dec
pop
adc
sbb
ja
pop
cli
and
and
and
mov
test
ret
pop
sbb
cmp
xchg
add
adcl
out
fldcw
mov
cld
addb
je
ja
or
push
xor
add
dec
inc
jo
xchg
pushf
movsb
xor
ret
inc
cmpsb
dec
add
or
pop
mov
mov
add
inc
cmp
test
adc
sbb
add
add
xorl
into
out
stc
mov
mov
xor
repnz
push
inc
jg
into
into
adc
mov
and
mov
pop
sub
push
pop
nop
movsb
sarl
cwtl
pop
mov
cmpb
shlb
fisubrs
mov
jle
movzbl
hlt
dec
std
pop
rorl
add
leave
lahf
inc
fiadds
out
adc
add
in
jns
add
add
test
and
je
and
inc
shl
or
push
cs
sbb
lret
pushf
pushf
lret
push
xor
xchg
push
add
roll
sub
mov
pop
roll
pop
fs
lods
pop
fmul
cmp
cld
rol
cmp
add
xor
push
mov
and
cmp
mov
add
push
jmp
into
adc
sbb
and
daa
imul
push
or
and
dec
sbb
loop
bound
loope
pop
ret
jl
or
mov
mov
mov
add
pop
push
xor
jno
pop
imul
mov
sub
sbb
sbb
lock
inc
jmp
adc
dec
sub
hlt
dec
xchg
adc
inc
insl
jmp
or
out
je
cmp
mov
fs
push
cmp
mov
lret
inc
inc
int3
call
jle
popa
out
enter
lds
dec
add
jo
push
test
or
xchg
js
jmp
or
xor
or
push
or
jl
mov
or
movsl
rolb
sub
cmp
test
stos
adc
and
fwait
rolb
mov
test
mov
adc
or
dec
test
pop
sbb
jnp
inc
pushl
leave
and
or
pop
test
ja
testb
xor
mov
hlt
jno
inc
aam
pop
popf
mov
fcoms
inc
movb
pop
mov
mov
xor
jge
sbb
add
test
and
insb
psubd
je
mov
or
mov
fcoml
and
pusha
xchg
lret
in
dec
inc
sbb
clc
dec
dec
pop
lods
incl
adcl
jge
lea
addr16
pusha
push
pop
push
or
enter
dec
xchg
jl
sub
xor
shlb
mov
lods
push
shrl
cmp
arpl
inc
lcall
inc
add
xchg
mov
xor
add
cs
pop
xlat
add
rolb
mov
js
daa
jmp
push
push
xlat
xchg
sub
pop
mov
xor
in
mov
mov
popa
sar
and
or
pop
repz
xor
mov
inc
mov
or
js
push
rolb
jne
push
inc
loope
cmp
das
lods
movsb
into
inc
push
nop
dec
jmp
adcb
mov
add
xchg
lock
fisubrl
lods
pop
rorb
icebp
or
xor
inc
imul
outsb
outsb
loope
adc
mov
and
push
sbb
pop
add
inc
adc
addr16
pop
add
clc
mov
pushf
test
jo
ljmp
enter
cmp
movsb
sbb
dec
roll
push
clc
fistl
add
lret
enter
je
mov
jg
xor
int3
ret
call
mov
test
pop
and
cwtl
das
mov
mov
loopne
lea
mov
inc
std
enter
bndstx
adc
mov
lock
dec
mulb
nop
scas
jae
fsubrs
xor
pop
and
outsb
scas
adc
xor
loopne
dec
dec
loop
aaa
inc
xchg
scas
xchg
fisttps
int
ss
xor
mov
push
js
mov
xchg
shll
mov
ret
shll
inc
xchg
outsb
stos
js
sbb
scas
mov
clc
push
rorb
fcompl
mov
shrl
sub
mov
rol
add
shlb
inc
shlb
ljmp
roll
and
push
adc
dec
in
ret
xchg
loop
mov
sub
jl
adcb
push
mov
xchg
pop
testb
mov
testb
adc
mov
addb
push
xchg
pop
pusha
mov
shrb
and
cmp
jge
mov
pop
xor
int3
adc
js
call
push
daa
data16
or
adc
mov
or
jno
enter
andl
jge
xorb
push
mov
lea
pmaxub
and
push
add
scas
cmp
sub
mov
dec
loop
loope
mov
pop
test
sub
inc
cwtl
ljmp
and
aaa
movsl
push
dec
or
jmp
jp
fbstp
mov
loope
cs
adc
xor
mov
pop
ret
jmp
fstps
mov
aam
icebp
lahf
or
add
mov
or
xor
fstpt
das
fcomp
adc
testl
mov
sbb
add
movsb
mov
dec
jge
sbb
mov
push
add
stos
or
ret
push
in
mov
iret
mov
lret
gs
stos
push
xlat
and
mov
fs
arpl
add
faddl
xchg
push
mov
insl
inc
push
mov
clc
fs
loopne
mov
data16
xchg
fdivrl
in
aad
dec
dec
insb
outsl
sub
and
adc
jo
xor
ret
nop
nop
fmuls
xor
cmpsl
fcoml
inc
push
in
lock
push
xor
jp
cmpsb
pop
mov
mov
add
fs
andb
jp
cmp
rolb
dec
pusha
repnz
jnp
inc
mov
pusha
ret
mov
fsubrs
stc
inc
nop
mov
cmpsb
fcoms
rcrl
je
int3
test
dec
in
and
mov
jge
adc
dec
sbb
jne
cmp
xor
pop
inc
inc
adc
push
jb
jo
dec
ficoml
xor
mov
mov
sti
lock
dec
jle
loopne
add
cmp
jl
ficomps
mov
mov
and
sarb
jb
inc
push
gs
or
add
dec
sub
jg
adcb
addl
xchg
aam
inc
xchg
popa
xchg
push
repz
fadds
imul
xor
xchg
sbb
jg
pop
inc
lret
leave
insl
in
movups
ret
loope
dec
sbb
shlb
cld
or
fmull
imul
cmp
mov
nop
push
xor
outsl
push
or
add
adc
mov
addr16
add
inc
lea
or
lods
xchg
jecxz
or
mov
and
mov
sbb
scas
inc
cmp
xor
or
jmp
mov
add
in
sbb
or
aaa
in
loope
xor
call
and
mov
loopne
sbb
dec
ror
cltd
ss
nop
cltd
aam
fs
dec
pop
mov
call
cmpsl
aam
cmp
out
cmpsl
in
sbb
sub
pop
addb
adc
cltd
adc
dec
xor
xchg
adc
and
xor
cmp
and
dec
inc
inc
dec
insb
js
call
sbb
jae
nop
je
and
jb
cmpl
sbb
in
sbb
int3
rcr
add
push
test
cmpl
aad
fwait
in
stos
gs
in
in
popa
adc
xchg
push
adc
xchg
mov
mov
mov
xor
sarb
or
add
or
push
rclb
mov
cmp
adc
or
out
inc
xor
negb
mov
dec
mov
fcoms
cmpsl
adc
mov
aam
je
gs
xor
arpl
aad
or
pushf
inc
dec
or
adc
sub
pop
mov
pop
roll
dec
mov
in
je
call
in
mov
mov
or
in
add
sub
dec
mov
fadds
mov
inc
fcoms
sub
insl
inc
jo
push
adc
test
jo
insl
mov
adc
inc
mov
insl
xchg
popa
gs
loopne
in
mov
mov
in
test
ret
push
push
adc
xor
jp
xchg
xchg
cli
mov
cmp
mov
ss
xadd
or
int3
out
dec
lea
adc
std
dec
lcall
cmpb
mov
xchg
dec
clc
out
mov
dec
xlat
mov
jnp
aas
xchg
sbb
mov
push
cwtl
cmp
insl
rclb
push
lea
lock
lea
fmull
lods
mov
mov
mov
popf
pushf
pushf
int3
rcl
lds
and
inc
adcl
in
mov
cmp
cmpb
dec
daa
in
adc
popf
cmp
rorl
int
sbb
add
scas
inc
leave
mov
fmul
adcb
or
mov
mov
mov
fmull
or
cmp
push
aam
lock
andb
mov
gs
enter
cld
nop
add
xchg
pop
sbb
mov
into
int3
das
xor
adc
inc
adc
inc
mov
rcr
outsl
fmul
xchg
and
sti
mov
xchg
xor
xchg
inc
lret
cli
ret
sub
push
test
sub
loopne
leave
mov
pop
aas
in
push
jo
sbb
insl
inc
les
xor
and
or
loopne
push
sbb
pushf
cmp
movsl
ret
xor
or
pusha
test
mov
cmp
add
sbb
adc
xor
adc
mov
fs
cltd
xchg
mov
je,pn
adc
jecxz
addb
sub
xchg
leave
sub
xor
les
inc
push
xchg
push
in
adc
dec
in
fsubs
cs
xchg
jecxz
or
and
inc
xchg
popf
cwtl
xor
xlat
sbb
orb
nop
psubsb
ljmp
sbb
fdivs
aad
lods
or
mov
sbb
add
xchg
pop
ret
dec
hlt
add
lods
or
xchg
xchg
imul
call
popa
lds
mov
jge
xor
mov
sbb
loopne
lock
xor
xor
cmpl
adc
cmp
mov
xchg
loopne
fdivs
stc
add
enter
pop
or
or
xchg
or
or
enter
cwtl
mov
daa
in
dec
push
cltd
and
call
and
lcall
push
push
inc
or
inc
ret
xchg
mov
or
shl
dec
mov
or
pop
or
movsl
xor
loopne
sbb
test
add
pop
mov
lds
inc
nop
je
cmpsb
jbe
frstor
rorb
cmp
mov
sbb
adc
add
fs
clc
add
jno
movsb
adc
jae
nop
decb
add
pushf
std
mov
or
imulb
dec
insb
das
push
test
pop
jecxz
aaa
cs
enter
pop
mov
cmp
mov
adc
jb
xchg
sbb
gs
mov
lret
in
rclb
cmp
popf
push
jge
sub
arpl
pusha
aad
or
or
sahf
scas
adc
sahf
adc
sub
jnp
inc
push
andl
add
cmp
xlat
enter
jb
cwtl
stos
mov
int3
enter
jb
sarb
mov
cwtl
dec
lds
mov
xchg
popa
mov
movsb
pop
rclb
sub
fisttpl
adcb
sub
mov
lds
mov
fstl
das
xchg
jne
pop
adc
push
clc
lahf
testb
jne
fidivrs
mov
daa
xchg
fdivl
or
xchg
ret
and
jmp
mov
push
jnp
mov
lcall
gs
jns
mov
mov
addl
fmull
adc
jo
in
gs
nop
inc
mov
in
dec
adc
xchg
loopne
jno
int
int
mov
mov
xchg
test
lahf
pop
xor
movsl
testb
loopne
enter
or
or
das
lock
pop
xchg
movsb
sti
imul
adc
mov
movsb
cmp
sbb
xchg
mov
inc
insb
xchg
cs
je
push
ljmp
mov
outsb
adc
cmovnp
mov
push
shlb
int3
xor
imul
dec
mov
xchg
xchg
test
push
roll
shll
cmpsb
inc
in
mov
call
or
insb
mov
mov
push
dec
push
and
inc
xchg
mov
cmp
sbb
dec
adc
imul
shrl
inc
mov
pop
jl
jno
xchg
cmpsl
xchg
sarb
push
dec
int3
fcmovnbe
sub
stc
shrb
fdivrl
aam
or
loope
or
pop
sbb
mov
add
aas
fsubs
add
enter
test
push
jb
lods
cmpsl
add
jo
push
mov
test
dec
xlat
pusha
push
adc
in
and
mov
cld
nop
es
fstps
pop
stos
inc
call
fbld
mov
adc
nop
test
stos
lea
shrl
pop
mov
ret
push
mov
out
sbb
or
xor
rclb
pop
ret
pop
leave
inc
mov
jno
push
test
add
fnsave
and
lds
shrl
inc
mov
shll
int3
mov
aaa
mov
fsub
ret
sub
pop
dec
out
shrb
dec
call
imul
lods
stos
push
and
sbb
and
rcrb
das
mov
inc
roll
xor
jne
test
fadds
mov
cmp
push
lods
adc
cwtl
scas
add
test
add
scas
jno
aam
sti
fbstp
mov
push
test
aam
xorl
push
add
mov
std
in
fs
notb
adc
mov
outsl
or
xchg
test
nop
inc
mov
cwtl
mov
and
and
test
mov
mov
rcll
push
mov
sub
jb
inc
mov
fcoml
fadds
jb
add
inc
shrl
adc
dec
test
sub
ss
mov
stos
les
xchg
dec
mov
mov
test
mov
or
xor
sub
xchg
cmp
xor
mov
fimull
lcall
test
test
mov
cmp
movsl
push
int3
addr16
orl
leave
sbb
sbb
shrb
bound
outsl
mov
add
ret
inc
inc
mov
cmpb
mov
aaa
rcrb
inc
mov
inc
mov
sbb
ret
insb
mov
pop
xchg
popa
inc
mov
cmp
imul
rclb
fs
push
xor
out
adc
sub
and
adc
pop
loopne
int3
xchg
pop
enter
aas
aam
stos
test
sub
and
sbb
ljmp
add
adc
ret
xorl
and
jo
mov
rcll
push
add
mov
or
test
jne
loopne
pop
dec
xchg
jno
xchg
cmp
cmp
int
sbb
call
push
add
les
mov
shl
and
mov
sbb
jne
or
cmp
inc
jne
and
mov
in
inc
in
nop
xorl
mov
les
daa
les
xchg
adc
xchg
xchg
js
dec
les
inc
pmulhuw
add
imul
int
xchg
scas
push
bound
cmp
adc
mov
stos
leave
faddl
dec
pop
rolb
inc
xor
jae
aam
popf
add
test
enter
rorb
stos
cmc
stos
mov
pop
jge
pop
pop
and
sub
push
push
add
inc
lcall
pop
rcrb
lock
les
xchg
xor
adc
out
pop
loope
sbb
cmp
inc
stc
jae
and
cmp
inc
pop
xor
dec
dec
shlb
mov
or
add
in
lret
adc
std
xor
xchg
push
add
sti
call
ret
loopne
cmpb
or
stos
or
xchg
cmp
cmp
xor
enter
fs
sub
enter
and
sbb
lea
call
add
mov
aaa
mov
repz
in
call
out
out
add
jnp
and
mov
or
ficoml
mov
loop
stos
jae
aad
iret
rorb
or
inc
inc
dec
and
pmulhuw
shll
cmp
ljmp
pop
inc
adcl
imul
mov
inc
sub
das
rorl
sbb
les
movsb
and
jl
bound
test
sbb
and
lods
fwait
int
dec
mov
jo
xlat
push
dec
xor
js
addb
fwait
in
mov
nop
and
dec
cwtl
pusha
mov
and
push
jno
stos
divl
cmpsl
cs
enter
repnz
pop
fdivr
mov
pop
jo
stc
aas
rorl
inc
dec
les
les
loopne
loopne
mov
loope
adc
les
cltd
insb
sub
loope
shr
inc
xor
inc
and
cmpsb
loop
lds
popf
sub
rcl
mov
adc
dec
mov
adc
movsb
mov
mov
cmpsb
or
cmp
shrl
and
xor
add
or
lea
enter
mov
in
call
lods
cmpsb
and
jmp
cmp
pop
scas
fdivs
add
es
or
or
cltd
nop
inc
notl
out
or
filds
jae
mov
or
and
or
inc
mov
inc
cs
add
and
xor
sti
test
add
or
aaa
and
push
daa
aam
cs
shlb
pop
insb
leave
sarb
xchg
inc
fcoms
adcb
aam
add
mov
xchg
jo
fwait
bound
jbe
xchg
invd
xlat
test
sti
adc
cmp
mov
enter
cmpsl
imul
and
rorb
or
inc
pop
insb
add
mov
mov
in
cltd
outsb
inc
dec
js
leave
sub
inc
aas
push
and
push
cmp
loope
push
inc
mov
and
cs
push
shll
or
call
add
pop
test
dec
fistl
jne
or
inc
mov
jmp
and
push
inc
int3
xchg
push
and
sub
and
mov
dec
push
push
pop
int
and
push
sub
subb
mov
add
xchg
adc
into
stos
sbb
cmpsb
subb
loopne
xor
shrb
sbbb
iret
adcl
fcoms
jo
push
andb
xlat
xor
shlb
add
and
pand
rcl
inc
mov
sbb
insl
in
in
dec
jb
dec
adc
or
ss
and
or
enter
es
sbb
aam
mov
cld
fistl
xchg
xchg
fcomps
insl
pminub
clc
scas
xchg
dec
fwait
add
fsub
xchg
pushf
subb
jne
decb
push
mov
xor
nop
fs
sbb
mov
cltd
orb
shlb
mov
aaa
cmp
sub
jl
mov
dec
fwait
push
in
inc
add
ror
sbb
inc
test
xor
xor
push
xor
in
pushf
adc
and
js
fs
and
dec
jo
mov
add
push
subb
sub
lods
cmpsb
call
enter
and
inc
loopne
mov
pusha
cmp
jne
and
test
or
outsl
mov
push
movsb
mov
cmp
je
add
sub
jo
push
enter
cltd
add
pusha
pop
insb
adc
fidivl
add
pop
adc
xchg
inc
pop
inc
pop
mov
and
push
aas
pop
les
mov
outsb
loop
popf
fsub
fwait
stos
mov
fistl
or
sbb
shrb
jge
enter
test
xlat
mov
mov
enter
sbb
aad
push
out
xchg
movsl
mov
pusha
adc
pop
and
int3
add
cwtl
xor
clc
mov
sbb
rol
pop
xor
cltd
rorb
fcmovnu
adc
loopne
je
add
fildl
addb
stos
aad
test
or
movsl
push
dec
test
cmp
aad
add
or
js
out
mov
or
repnz
nop
and
rcrl
sub
mov
add
inc
cmp
mov
push
fcompl
dec
pop
jg
sub
pop
lock
dec
push
mov
test
push
cmp
sub
pop
enter
repnz
push
fsubrl
bound
inc
adc
andl
inc
xchg
push
lods
dec
sbb
cmp
ja
xor
hlt
cltd
loopne
push
je
jno
aaa
iret
xchg
icebp
add
aam
frstor
inc
movsl
push
stc
int3
inc
and
xor
les
fnsave
jmp
mov
or
in
and
gs
mov
mov
movsb
dec
sub
cwtl
and
sbb
das
jns
jns
rorl
test
ficomps
and
pop
fmull
ss
jae
mov
adc
jl
jo
add
sbbb
cmpsb
push
mov
add
pusha
dec
pop
in
fimull
cltd
subb
cltd
mov
push
nop
fs
inc
insl
lods
pusha
add
pusha
sbb
sbb
add
js
xchg
inc
nop
dec
scas
or
lahf
scas
dec
inc
faddl
clc
loopne
adc
inc
push
xchg
aam
push
fnstsw
and
xorb
mov
mov
push
pushf
stos
pop
outsb
leave
mov
sbbl
sarb
int3
push
cmpsb
lock
jle
push
cmp
adc
push
icebp
jle
sbb
in
jp
xchg
aam
mov
ja
push
add
jl
push
jle
movl
jle
movb
repnz
add
mov
sub
cmp
inc
xchg
pop
mov
or
movsb
mov
push
xchg
cmp
and
imul
sbb
mov
cwtl
ss
cmp
leave
fsubl
dec
mov
pop
int3
sarb
and
fs
jmp
or
push
jo
and
fs
jl
insb
dec
ja
or
loopne
jnp
call
outsl
add
adcb
adc
fnstcw
imul
push
sub
sahf
cmpsl
stc
or
sbb
dec
add
lds
imul
add
mov
mov
aas
mov
xchg
xchg
cmpsl
les
ds
and
mov
enter
pop
push
or
inc
push
lcall
mov
mov
ljmp
add
fistpl
or
jnp
mov
add
add
or
and
shlb
ljmp
rcll
mov
mov
jns
mov
jle
jmp
hlt
dec
test
push
xor
iret
repz
sbb
or
jmp
addl
dec
dec
dec
dec
dec
dec
dec
push
daa
mov
push
jg
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
xor
mov
xor
ss
cmp
sub
daa
adc
mov
rcll
xchg
adc
jbe
jg
push
or
cmp
rclb
cmpl
repz
push
pop
push
jne
jge
lahf
out
sahf
cmp
dec
pop
pop
dec
outsb
addr16
pushl
insb
outsl
arpl
fs
out
sbb
push
dec
imul
pusha
aaa
jne
push
gs
xor
stc
iret
lock
fs
adc
popa
and
popa
je
outsl
outsb
in
push
sub
push
cwtl
push
xchg
sub
lock
psadbw
cmp
add
incl
sub
and
clc
aaa
leave
loop
inc
outsl
jb
js
mov
imulb
push
jb
gs
cmp
or
outsl
add
add
clc
add
add
je
push
je
in
or
popa
mov
outsb
mov
jbe
dec
xor
xor
lahf
ja
push
insl
insl
cmp
dec
and
jns
add
das
das
adc
push
dec
into
mov
roll
inc
inc
gs
insl
bound
daa
mul
jle
dec
outsl
jbe
dec
arpl
push
jo
sub
push
pop
inc
jne
jne
dec
jne
xchg
lret
ret
mov
inc
jo
imul
add
loopne
bound
inc
insb
adc
jae
scas
cmpsl
xchg
popl
outsb
jns
jg
addr16
sbb
jb
xor
xor
lods
and
daa
push
scas
clc
sbb
fisttpl
dec
js
push
jne
xchg
jae
cmp
dec
inc
ds
popa
das
jo
mov
insl
pop
fisttps
jb
inc
lock
dec
push
test
ljmp
push
mov
or
insb
inc
pop
pusha
mov
loop
mov
scas
and
sub
sub
cs
adc
aas
dec
movsl
cmp
cmp
ds
inc
das
inc
aad
loope
pop
aam
cmp
jl
jle
add
arpl
test
mov
cmp
dec
and
push
pop
or
ficomps
xor
rorl
jae
cs
shll
jne
inc
inc
mov
out
and
and
testb
dec
dec
push
push
sbb
outsb
out
dec
dec
inc
sbb
and
push
insl
xchg
add
xor
sbb
push
jo
xlat
dec
jg
imul
insl
pop
mov
cs
inc
mov
xchg
testb
push
fs
orl
pushf
iret
lcall
xorb
inc
popa
and
int3
mov
mov
sbb
xor
jl
fcmovb
and
insl
push
xchg
xor
aas
xor
addb
dec
rolb
pushf
lcall
jae
add
dec
movsb
dec
mov
and
or
push
rcr
mov
sbb
jp
push
pop
into
hlt
xor
gs
bound
stos
mov
je
and
add
test
push
ds
fwait
leave
sbb
loopne
outsl
add
pusha
mov
outsl
push
or
sub
sub
arpl
pop
and
jb
cmp
arpl
andb
mov
sti
into
fiadds
inc
xchg
insb
imul
out
xor
int3
or
or
push
lcall
mov
addb
jo
cmpsl
jns
push
fistps
push
shlb
popf
xor
or
add
xor
hlt
pop
dec
int3
cltd
and
add
mov
inc
shll
ja
and
outsl
outsl
adcl
xor
push
pop
shll
add
inc
xchg
ficoml
sarb
push
gs
pop
ljmp
mov
xor
inc
test
or
arpl
dec
outsl
mov
bound
push
cmp
cmp
mov
jecxz
in
ljmp
imul
stos
cs
shll
or
xorl
push
push
hlt
add
insl
imul
or
ja
in
and
roll
or
and
pop
push
cmp
jne
jae
pop
popf
mov
fsubl
add
pop
out
sub
ret
jb
or
fsubrs
push
sub
lret
inc
sub
pop
divb
jo
jmp
jo
mov
and
cmp
cwtl
ja
ds
mov
mov
inc
inc
and
dec
cmp
fs
and
jg
lcall
loopne
sahf
pop
fiaddl
cmpb
psubq
lret
jno
icebp
pusha
inc
or
iret
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
imul
sbb
push
cmpsb
gs
add
add
xor
jg
in
adc
inc
jae
je
and
iret
pop
dec
pop
add
add
xchg
icebp
jne
jne
sub
xor
lods
rcrb
add
adc
add
ljmp
testb
add
add
and
push
pop
pop
or
jo
add
ds
push
pop
hlt
and
or
in
fdivl
js
jbe
data16
pop
sub
add
sbb
jnp
inc
clc
addb
fisubrs
adc
ret
add
orb
daa
push
cmpb
push
and
in
popf
fldcw
xor
int3
push
dec
cld
sbb
ja
mov
loop
test
and
push
stos
int3
js
jo
fdivrl
rorb
sbb
jb
lea
mov
and
xchg
adcb
clc
mov
in
inc
pop
push
adc
adc
and
or
mov
pushf
jo
add
and
pushf
jo
or
pop
jo
or
data16
and
and
push
jno
pusha
in
je
jl
mov
iret
push
cltd
nop
fwait
and
sub
cmp
dec
dec
add
test
cmp
xchg
dec
cs
adc
add
mov
addb
sbb
add
add
add
add
mov
inc
add
aaa
or
cmp
add
push
adc
out
and
pushl
addl
mov
xchg
xchg
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
leave
inc
dec
push
div
clc
stc
cli
sti
cld
jb
xchg
inc
adc
inc
movsb
sar
push
or
jmp
lds
pop
sarl
push
add
xchg
push
pop
outsl
ja
adc
jg
inc
cs
jae
jb
bound
dec
ja
push
inc
ss
popa
mov
arpl
mov
std
ja
pop
lea
dec
mov
outsl
js
push
push
inc
push
es
aam
mov
inc
sahf
mov
gs
mov
dec
mov
scas
push
mov
daa
add
insb
in
dec
imul
pop
jns
inc
mov
imul
cmp
and
inc
jb
jns
daa
pop
mov
and
cmp
movsb
mov
jmp
sbb
or
adc
mov
outsb
pushw
mov
adcb
mov
mov
pop
pusha
shrb
pop
pusha
inc
jbe
push
in
or
lahf
fs
fisubl
dec
clc
popl
mov
imul
and
push
and
pop
es
push
mov
dec
lahf
lock
xchg
pop
pop
pop
mov
test
jp
aas
xchg
shlb
pusha
insb
call
movsl
jae
addr16
subl
gs
xchg
pop
loope
mov
xchg
xchg
inc
push
push
push
push
add
inc
dec
push
jne
repnz
fcmovb
cmp
mov
lea
mov
mov
scas
arpl
aas
xchg
aam
jg
imul
call
inc
adc
xor
in
and
xor
adc
jl
mov
adc
lods
sbb
or
xlat
arpl
das
je
outsl
xchg
daa
xchg
fisubl
or
cmp
jns
cmp
cmp
push
das
push
sub
sub
inc
jl
push
jle
fstpt
sub
addr16
sub
push
jae
sub
inc
in
jp
jmp
cmp
mov
dec
inc
dec
pop
js
lret
cwtl
jb
sbb
push
jb
mov
xor
imul
push
xor
xor
xchg
push
lods
sbb
in
add
push
and
inc
out
xor
inc
jo
sub
cmpsb
aam
push
lahf
sub
cld
out
pop
adc
push
call
jns
les
add
dec
add
inc
sti
push
aam
cwtl
cmpsl
jns
notl
inc
add
jl
je
fs
cmp
or
dec
data16
ja
in
lock
inc
push
int3
adc
int3
push
out
iret
jnp
push
dec
dec
push
inc
inc
sahf
data16
mov
lods
je
cmp
sahf
out
xor
and
out
sahf
out
sbb
add
iret
repz
decl
shrb
dec
sub
or
iret
repz
call
pusha
inc
stc
cmp
repz
sub
hlt
std
out
sahf
cmpsl
in
loopne
mov
dec
repz
insb
inc
sbb
cld
aam
cmp
repz
pusha
xor
dec
inc
push
cmpsl
pop
aam
lcallw
shlb
jns
push
xor
sub
ljmp
cwtl
cmpsl
pop
push
sub
aas
sbb
jae
jb
xor
dec
test
lods
movswl
das
in
sub
add
sarb
insb
cmp
inc
mov
inc
dec
jae
insb
inc
gs
insb
inc
push
sbb
dec
inc
dec
xor
jg
ret
scas
inc
dec
dec
dec
push
push
loop
and
inc
dec
add
dec
dec
inc
add
ljmp
and
adc
sub
adc
and
std
incl
popa
into
mov
mov
xor
jnp
inc
loop
mov
ds
pop
push
pop
pushl
or
cli
jb
xchg
jge
arpl
mov
and
cmp
adc
dec
scas
jp
adc
fisubrs
push
mov
and
cmp
dec
imul
decl
dec
out
inc
mov
mov
sub
cmpl
sbb
pop
jns
ds
xor
jmp
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
jmp
clc
incl
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
mov
loopne
cmp
inc
mov
xchg
push
pop
popa
push
or
scas
int
incl
pop
leave
loop
mov
xchg
dec
jg
test
lods
mov
xor
lahf
fdivrs
out
mov
pop
and
jmp
jle
sbb
sbb
push
mov
es
or
outsb
jbe
and
aad
adcb
std
sbb
daa
inc
mul
mov
push
je
dec
push
jns
dec
push
sub
mov
adc
inc
and
sub
inc
pop
cs
sbb
xor
sbb
inc
pop
jb
sbb
push
sub
inc
xor
inc
sub
xor
xor
dec
inc
inc
cmp
jno
jge
mov
jb
jbe
or
inc
push
or
push
xchg
add
out
jbe
inc
sub
push
pop
pop
cmp
cmp
xor
dec
sub
cmp
add
push
push
aas
cs
aaa
cmp
imul
mulb
lods
push
aaa
inc
ret
and
sbb
ljmp
cmp
inc
cld
push
sbb
xor
adc
adc
mov
add
xor
jnp
cmp
ljmp
jmp
add
and
inc
add
daa
dec
pop
pop
adc
add
pop
inc
daa
cmp
daa
pop
pop
adc
push
stc
cmp
pop
cmp
jge
inc
and
fnsave
pop
or
push
xor
leave
xlat
pop
divb
inc
dec
or
cwtl
or
xor
sub
je
lea
push
cmp
inc
mov
sub
inc
pop
and
mov
cmp
or
sbb
inc
mov
xchg
lock
loopne
lret
jnp
sbb
mov
sub
lods
push
inc
cmp
cmp
sbb
push
int3
inc
sub
sbb
jle
outsb
lock
insl
xor
sbb
addr16
jo
push
sub
or
adc
xor
push
push
or
mov
jb
push
sbb
and
gs
icebp
call
lcall
xor
add
inc
adc
and
add
fbstp
add
and
sub
inc
adc
sub
dec
jg
pop
je
ja
cmp
mov
sub
adc
inc
pop
adc
in
call
dec
nop
dec
cwtl
in
push
cmp
daa
out
mov
jne
jg
sub
sahf
out
sahf
lea
push
lahf
daa
mov
jns
int3
pop
in
outsl
jg
push
cmpsl
stc
cmp
fsubr
cli
or
loopne
ds
daa
lock
sbb
ja
add
and
notl
hlt
push
scas
inc
dec
hlt
adc
mov
push
dec
cmp
or
int3
jp
cmp
outsl
insl
mov
pop
xor
add
adc
popa
mov
out
ret
dec
bound
sub
cvttps2pi
cmp
shll
push
movaps
repz
ja
sahf
mov
fdiv
cmp
aas
push
ds
jns
push
jno
lods
fisubs
ss
out
notb
arpl
imul
pusha
rcrl
xor
mov
or
scas
cs
add
fisubs
inc
cmp
push
push
push
popa
adc
js
inc
jbe
std
into
aad
mov
and
sbb
dec
adc
lods
std
inc
or
cmp
nop
dec
or
jmp
cmp
pop
sti
fisttpll
and
inc
push
add
push
dec
adc
and
push
jmp
aad
push
arpl
adc
mov
sub
or
js
adc
ds
jno
inc
and
dec
or
push
fildll
sbbl
sub
push
sub
push
or
add
push
jp
cmp
cmp
in
dec
jno
in
out
mov
xor
cmp
inc
xchg
xchg
out
ja,pn
ja
xchg
shrb
inc
push
cmp
xor
adc
inc
adc
pop
inc
adc
adc
js
cmp
mov
scas
jge
data16
or
scas
or
pop
sbb
dec
sub
push
xchg
mov
sub
sub
push
and
dec
mov
mov
or
sub
inc
cs
push
insl
mov
ret
inc
or
jnp
and
push
cmp
mov
daa
sub
jecxz
push
sub
jbe
inc
add
xor
mov
jne
push
xchg
popf
jbe
pop
adc
dec
pushf
dec
mov
push
xor
jle
sub
sub
xor
loop
dec
pop
sub
dec
imul
adc
and
int
inc
mov
inc
pop
and
mov
push
sub
jp
xchg
filds
sub
or
push
stos
dec
push
xor
push
negl
clc
cmp
pushf
push
ret
adc
insl
and
inc
pusha
pop
es
push
push
inc
sbb
icebp
in
xor
push
outsl
fcoms
push
into
js
ret
daa
push
and
or
xchg
xor
faddl
push
sub
into
sbb
imul
cmp
mov
loope
jb
pop
mov
dec
test
mov
pop
or
push
divl
push
adc
loop
adc
push
sub
fbld
dec
adc
cmp
pop
inc
lock
jle
in
fwait
adc
xlat
dec
and
jbe
addl
inc
push
push
dec
popl
push
gs
cmp
sahf
cmp
mov
cs
cmpsb
adc
xlat
mov
cmp
adc
ds
pop
ficoml
ss
decb
and
jbe
add
sub
inc
mov
add
and
test
or
pop
loopne
pop
add
cwtl
mov
cmp
into
add
or
scas
fsts
ja
fcoms
lods
adc
pop
pop
lcall
adc
push
add
adcl
mov
adc
sub
or
sbb
xor
push
loopne
fstl
adc
adc
sub
lcall
ss
sbb
xchg
push
lahf
imul
std
push
subb
js
sub
lods
cmp
add
inc
shll
dec
out
jae
insl
popa
imul
dec
mov
jo
pop
outsl
jo
jle
test
fisubs
push
ja
pop
js
in
jbe
adc
push
dec
push
cmp
repz
out
cs
add
cmp
xchg
out
add
xor
lods
fldt
and
cmp
and
jns
jl
add
and
stos
xchg
adc
or
mov
lahf
mov
pop
je
sub
out
repnz
dec
pop
add
daa
nopl
mov
push
mov
mov
push
pop
cmp
adc
out
sub
pop
adc
add
rcll
adc
adc
sbb
in
sub
adc
and
pop
mov
pop
loope
mov
cvtdq2ps
iret
adc
sub
ds
pop
cmpsb
out
cmc
jb
push
out
push
dec
or
sub
pop
mov
pop
push
mov
mov
or
adc
ret
pop
mov
fisubs
cmp
pusha
mov
loopne
aad
popf
add
inc
jl
add
push
into
pop
xor
sub
mov
mov
pop
xor
bound
mov
ds
dec
outsl
jae
bound
push
gs
sub
or
add
cs
jnp
and
push
push
das
xor
xor
lock
and
mov
xchg
inc
shrb
das
pushf
or
sub
enter
inc
adc
adc
fisttpl
sbb
cmp
xor
je
jae,pn
push
lock
lea
or
jno
xor
test
jb
outsl
imul
fcomi
xchg
jle
jge
cmp
loop
push
je
xchg
es
repnz
cmp
pop
inc
add
or
cmc
call
cmp
sbb
sbb
adc
and
in
mov
adc
das
jecxz
push
and
dec
inc
adc
addr16
ja
pop
xor
sub
push
xor
cmp
add
aas
mov
lock
inc
cs
rorb
cs
fwait
pop
or
aam
jle
xor
push
jnp
mov
sbb
adc
aas
repnz
sub
or
repnz
mov
mov
jle
test
and
and
enter
insb
or
inc
inc
clc
mov
dec
add
pop
jbe
pop
mov
cs
dec
mov
xor
das
add
pop
sub
add
sbb
mov
pop
hlt
adcb
subb
sbb
sbb
sbb
out
shr
ljmp
and
outsl
xchg
inc
inc
push
push
inc
push
push
outsl
mov
xchg
pusha
pop
pop
cwtl
pop
out
cmpsb
test
xchg
pop
adc
iret
fidivl
cmp
adc
dec
sub
hlt
lods
pop
dec
adc
aaa
xchg
add
in
mov
dec
test
sbb
adc
cs
push
inc
inc
ds
cmpsl
sub
xor
cmpsl
repnz
loop
icebp
adc
repnz
pop
dec
pop
cmp
in
pop
fwait
pop
iret
cmpsl
fmull
jns
add
push
pop
or
dec
mov
mov
push
sub
pop
lahf
js
cwtl
mov
daa
sub
sbb
cwtl
adc
cmp
sbb
inc
clc
ljmp
push
in
push
jo
loopne
pop
in
add
jp
inc
inc
or
adc
test
dec
mov
loop
and
adc
mov
push
xchg
or
loop
je
mov
dec
cwtl
pop
jbe
outsb
pop
cmpsb
sbb
and
sub
rorl
dec
sub
sub
push
mov
das
pop
push
inc
pop
sbb
pop
push
dec
sbb
pusha
or
add
cmp
dec
cmpl
mov
push
aam
sub
mov
sbb
dec
adc
lret
or
cmp
lds
pop
cmpsl
bound
js
adc
shrb
cmp
mov
xor
divb
pop
push
ret
xor
daa
mov
add
push
pop
xor
push
popa
xchg
xor
dec
sbb
imul
and
int3
shrl
and
pop
pop
xor
cld
xlat
xor
ja
out
pop
mov
pop
lods
int
and
or
stos
push
xor
cmp
cmp
cmp
lcall
lods
adc
dec
xorb
cmp
dec
mov
add
inc
xchg
pop
mov
dec
enter
jbe
push
sub
pop
cmp
ds
add
jmp
test
add
pop
adc
fildll
dec
inc
inc
xchg
es
pop
cmp
pop
add
out
cmp
and
pop
cmp
cmp
push
cmp
add
push
mov
sub
xor
mov
dec
and
add
es
inc
cmp
inc
cmp
ret
cmp
pop
loope
js
pop
lds
loope
mov
cmp
lds
pop
xor
jg
or
sub
dec
sbb
and
mov
aaa
dec
add
inc
cmp
or
inc
ss
adc
mov
cli
add
adc
adc
cmpsl
mov
add
mov
dec
call
xchg
mov
out
int3
sbb
sub
test
mov
pop
popa
stos
das
adc
pop
push
adc
aad
mov
mov
cmp
cmpsb
addb
mov
ret
pop
or
aaa
cmp
hlt
xchg
adcb
enter
and
cmp
cs
cmp
adc
mov
call
jno
cmp
fwait
inc
mov
adc
xor
inc
mov
aaa
dec
sbb
xor
or
jge
int
xchg
scas
dec
cmovno
sub
out
js
stos
inc
or
loopne
es
fdivrs
adc
cmp
pop
inc
cmp
loop
cmp
xor
fdivp
adc
dec
and
and
adc
or
pushf
jge
cltd
adc
popa
or
imul
xchg
jbe
js
sbb
mov
xor
mov
lods
jae
sbb
and
sub
sbb
test
test
inc
sub
cmp
popa
xchg
testl
aaa
adc
mov
pusha
push
insl
sbb
dec
adc
and
inc
add
and
cmp
sbb
fwait
test
and
dec
sub
scas
add
das
sbb
or
push
data16
dec
xorl
adc
push
dec
xchg
and
les
pop
inc
repz
fisttps
add
and
daa
push
daa
pop
pop
es
es
pop
pop
or
inc
push
pop
add
in
mov
jg
or
scas
aas
sub
sbb
sbb
pop
mov
jnp
push
push
inc
lea
ficoml
cmpsl
and
das
jo
or
push
sub
xchg
push
imul
fisubrs
add
dec
add
xor
sbb
int3
jo
pop
or
ds
and
sbb
pop
jae
cmp
pop
and
fwait
xor
xchg
testl
and
push
je
inc
and
out
push
or
push
nop
push
flds
jo
insl
stos
aaa
jbe
sub
sub
clc
add
xor
call
push
fisubrs
je
jo
insb
gs
mul
pop
push
ja
fs
imul
orl
push
add
adc
mov
jb
movsb
and
rorb
cmp
stc
mov
xchg
rolb
aas
push
push
popf
pop
push
int
int
mov
push
cs
divb
fwait
pop
jb
xchg
pop
push
pop
push
lret
fdivrs
sarl
push
push
int
repz
out
pop
dec
std
pop
insb
outsb
xor
inc
rolb
xchg
cmpsb
pop
add
inc
jl
cmovs
push
add
or
inc
aaa
shlb
mov
mov
out
jg
jg
push
and
mov
add
adc
mov
mov
lods
pop
dec
movsl
enter
std
mov
roll
ss
adc
cli
mov
lahf
in
cld
test
cmp
mov
cld
std
mov
sbb
mov
ds
pop
sbb
xor
mov
fnstcw
jo
fsubs
sbb
incl
test
xor
dec
xchg
pop
shl
dec
push
pop
in
pusha
pop
add
pop
adc
adc
pop
push
and
xor
stos
mov
jo,pn
cmp
data16
push
movsl
lods
pop
pushf
or
pop
push
insb
ret
fcmovu
dec
inc
jb
out
repnz
imul
scas
pop
jb
insb
pop
pop
sub
sub
sub
sahf
dec
cs
sbb
or
sarb
xor
and
in
and
fmull
cmp
iret
mov
ds
orl
insb
inc
js
cmp
sahf
pop
add
jo
imul
adc
pop
inc
dec
mov
out
sub
fnstcw
cmp
xor
shlb
xor
inc
xor
xor
and
icebp
xor
inc
pop
xor
add
mov
and
jne
cmp
insb
add
add
and
rcl
das
js
push
pushf
and
loopne
jne
sbb
je
out
mov
dec
jp
scas
push
sub
xchg
jb
jo
loope
sti
out
pop
bound
je
bound
mov
and
cs
subl
mov
jg
sub
or
xchg
andl
or
push
bound
or
das
rolb
and
sbb
add
out
sbb
in
pop
and
outsl
sbb
js
pusha
mov
mov
or
daa
xor
je
inc
or
nop
adc
sub
add
fidivs
lock
jg
andl
adc
rolb
es
adc
pop
add
push
pop
push
and
inc
jg
mov
inc
xor
inc
jns
lret
and
test
pop
orb
adcb
mov
xchg
jmp
push
mov
in
cli
inc
dec
shrl
push
sub
mov
xor
sbb
dec
shrl
fs
pop
leave
push
mov
cs
int
pushf
sub
adc
fisubl
xchg
ds
fimull
popf
scas
mov
sbbb
lods
pop
sub
or
mov
push
sbb
mov
xor
fwait
mov
in
ficompl
insb
aaa
jns
out
popa
xlat
pop
aas
mov
iret
repz
adc
pop
ret
les
es
xlat
out
lock
mov
inc
lds
lods
vpxor
pop
inc
cmovg
and
pop
pop
pushf
popa
scas
imul
jns
xlat
insb
daa
xor
dec
test
dec
sar
insb
push
adc
les
cmpsb
rclb
jnp
enter
in
cs
mov
repz
repnz
test
stc
cmp
xchg
lahf
dec
mov
jnp
pop
and
int
fwait
jge
xchg
cwtl
or
daa
xchg
dec
xchg
jns
push
adc
mov
jl
ret
add
enter
je
or
iret
repz
loopne
or
fmull
bound
cmpsl
mov
push
xor
dec
aad
xchg
jle
clc
aaa
mov
fwait
xlat
insb
lahf
idivl
pop
in
ss
popf
pushf
ds
repz
ret
movsl
inc
mov
lcall
inc
push
lret
cltd
jns
push
jns
mov
arpl
mov
fwait
das
lcall
xlat
jmp
mov
add
mov
jl
out
stc
dec
mov
imul
lcall
sahf
imul
dec
cmp
sbb
cltd
cmp
mov
out
push
nop
out
sahf
out
pop
jg
shl
repz
setno
pop
mov
lahf
out
xchg
sbb
push
jno
iret
repz
movsb
mov
popf
out
sub
add
and
je
or
aad
pop
dec
sbb
and
adc
adc
ljmp
and
rcrb
push
push
mov
xor
adc
das
pop
xlat
add
mov
mov
push
mov
fsubs
mov
adc
aas
in
mov
hlt
pop
sbb
enter
adc
cld
mov
xchg
or
adc
daa
jb
pop
in
or
add
mov
cmp
inc
data16
inc
stos
outsb
push
push
jae
les
test
fistpll
inc
push
mov
pop
daa
inc
sbb
or
aaa
push
inc
sbb
aas
jno
ja
jae
fisubl
push
out
jge
iret
or
es
dec
cmp
sub
je,pn
aam
mov
pop
cmpsb
dec
sbb
pop
add
push
inc
cmpsb
jp
stos
mov
insb
pop
push
dec
pop
je
mov
aaa
push
fisttps
outsl
mov
push
ret
scas
xorl
xlat
jbe
lds
pusha
iret
push
pop
retw
push
ret
inc
inc
dec
or
dec
subl
pushf
push
xor
aad
into
mov
mov
es
rolb
push
push
mov
nop
cmp
push
dec
jno
xor
dec
das
adc
xor
popa
insl
jo
es
insb
je
push
addr16
jo
jae
es
fwait
in
jnp
outsl
and
aas
cmpb
sub
imul
and
cmpsb
mov
xor
mov
xor
xor
xor
xor
xor
cmp
fwait
jge
and
xor
push
xor
xor
cmp
push
add
mov
dec
add
or
and
out
sub
dec
aaa
add
xor
push
dec
add
add
pop
sub
jl
and
cmp
pop
mov
pop
adc
and
cwtl
pop
sub
dec
sub
in
push
inc
cmp
inc
xor
dec
add
test
or
inc
inc
sub
test
pop
sbb
pop
daa
xor
outsl
sbb
dec
int
sti
add
jp
cwtl
xchg
jg
pop
imul
in
dec
push
sub
sbbb
dec
push
inc
push
or
xor
mov
mov
lods
repnz
lcall
push
daa
or
push
dec
sbb
sbb
xchg
lahf
mov
jnp
popa
mov
sti
ret
dec
push
or
ret
rol
int
push
or
xor
push
fnsave
jo
cs
lods
push
inc
and
add
adc
lret
das
sub
xchg
push
xor
mov
movsb
das
sub
push
or
push
sbb
fcoms
and
pop
inc
daa
shlb
sbb
daa
fcoms
sahf
mov
xor
mov
xor
or
sub
mov
push
js
adc
xor
add
aaa
ret
aaa
xchg
stos
mov
sahf
xor
ss
push
lahf
xchg
pusha
mov
add
daa
aaa
fidivl
fisubl
daa
mov
stos
push
loop
adcb
aaa
fisubrl
jge
and
ss
das
divl
cmp
mov
outsb
daa
popa
dec
das
push
pop
dec
insl
adc
daa
insb
mov
imul
popa
daa
pop
push
mov
das
dec
mov
clc
and
into
add
jbe
cmpsl
sbb
pop
repnz
inc
dec
mov
add
jae
imul
or
pop
das
mov
mov
insl
pop
scas
pop
cltd
or
or
daa
lahf
pop
xchg
sub
add
adc
pop
addr16
and
addr16
jg
add
lock
mov
push
movb
xlat
lea
jbe
mov
pop
and
mov
inc
imul
dec
push
xor
aaa
outsl
inc
sbb
or
clc
add
xor
dec
outsb
or
test
jl
sub
jl,pt
shrb
push
inc
imul
pop
dec
add
fildl
sbb
fbld
inc
dec
push
jo
outsb
inc
imull
dec
js
adc
mov
fs
inc
ja
cmpsl
call
adc
les
add
mov
or
orb
shrl
aam
cmp
daa
push
dec
adc
sbb
or
es
cmp
das
push
mov
xor
aaa
sbb
or
sbb
add
xor
loope
mov
sub
fcompl
cwtl
mov
lret
in
mov
sub
loope
sbb
adc
add
pop
push
test
bound
das
in
inc
fsubr
and
mov
or
xchg
sbb
mov
adc
add
dec
mov
adc
cmp
adcl
shl
pop
mov
sub
adc
mov
enter
adc
add
test
mov
fiaddl
loop
xor
jg
mov
pushf
daa
push
dec
cmpsb
fs
test
pop
cmp
nop
pushf
push
add
inc
or
jno
call
ret
imul
dec
adc
inc
or
lods
add
shrl
or
dec
lock
jbe
fisubrl
rcl
lea
jmp
repnz
inc
test
push
sub
jne
ljmp
push
dec
sub
movsb
lods
pushf
push
ds
and
fmull
inc
add
xor
cwtl
cmp
repnz
dec
insl
pushf
negb
push
shll
lret
adc
bound
sbb
xchg
fs
push
loop
cltd
leave
mov
push
mov
or
mov
sbb
outsl
ret
cs
dec
xchg
dec
loope
mov
orb
dec
push
lods
cmp
jmp
xor
sub
cmp
sub
cs
push
popa
fsubrs
xor
lcall
and
jae
inc
push
add
xor
dec
sub
push
sbb
mov
sbb
fbstp
adc
push
adc
loop
imul
cmp
pop
dec
cmp
adc
cmpsb
les
pop
je
inc
aas
ja
cmp
arpl
inc
test
cmp
jbe
getsec
inc
pop
ljmp
mov
sub
mov
stos
xchg
or
sahf
push
pop
and
xchg
push
mov
mov
in
adc
push
out
adc
das
push
adc
cmp
repz
pop
sbb
repz
inc
push
andl
imul
or
xchg
add
add
add
int
add
or
adc
adc
insb
out
insl
jns
and
sub
xor
inc
out
mov
mov
mov
mov
add
sbb
sub
fldcw
add
or
ss
push
adc
pop
add
data16
adc
push
push
dec
str
mov
and
das
inc
and
scas
incl
pop
out
lret
incl
icebp
arpl
push
pop
pop
cs
and
and
inc
inc
fidivrs
push
pop
call
adc
sub
mov
inc
or
daa
mov
jo
and
push
mov
shlb
xor
add
xor
inc
out
lahf
add
or
add
pop
adc
push
push
pop
add
sbb
es
lcall
daa
daa
das
push
pusha
pop
sub
push
sbb
lcall
dec
or
ljmp
add
ljmp
add
cmp
push
push
add
dec
push
sub
xor
cmp
sub
adc
and
and
or
mov
adc
add
sub
cmp
dec
out
add
or
push
sub
leave
fistpll
or
cmp
mov
dec
unpcklps
or
cmp
xchg
jg
mov
or
xor
inc
cmp
xor
or
push
inc
and
incl
or
sub
adc
cs
sbb
xor
adc
add
sbb
sub
lods
add
loop
rcll
add
sbb
push
imul
popf
inc
add
cli
pop
dec
mov
adcb
cmpsl
or
mov
pop
dec
adc
and
adc
push
and
mov
imul
cmc
push
inc
cld
gs
and
jo
rol
and
mov
outsb
add
dec
out
jns
sahf
cs
dec
sbb
add
or
xor
dec
movsb
xor
pop
fisttps
rcr
xchg
push
push
dec
fstl
or
push
adc
divps
and
mov
inc
sbbb
dec
sub
push
lret
add
push
sbb
mov
jmp
and
jb
clc
rcll
add
push
push
xor
lcall
push
inc
push
dec
inc
dec
push
dec
add
xor
outsl
ja
rolb
pop
cwtl
das
mov
incl
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
fwait
jmp
xchg
out
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
push
ds
lcall
enter
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
daa
cmp
sbb
cld
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
jmp
jo
dec
ret
insb
sbb
xchg
shll
cltd
test
push
push
shll
insb
aaa
push
dec
ja
daa
mov
mov
movsb
sbb
dec
stos
fmuls
lret
lcall
pop
rep
cs
arpl
test
add
mov
mov
call
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
sbb
stos
flds
pop
add
outsb
decl
push
inc
jno
pop
jns
push
and
and
cmp
inc
aas
call
sub
aaa
push
dec
js
or
dec
jb,pn
dec
push
das
inc
cmp
jge
jp
popa
gs
out
cli
sub
sub
daa
fs
ds
or
jnp
insl
es
pop
sub
xchg
or
sub
jbe
xor
sbb
sbb
and
push
rorb
jbe
cli
add
cmp
or
adc
arpl
xor
cmp
ja
mov
sbb
and
aaa
pop
sbb
stos
mov
adc
or
add
add
and
out
pop
sbb
pop
movlps
sub
and
aaa
push
xor
jbe
push
inc
add
xor
xor
jmp
pop
outsb
push
inc
add
inc
pop
inc
inc
cmp
orb
aaa
inc
push
inc
repnz
insb
and
ss
cmovb
pop
adc
cli
fidivl
pop
cmpsl
ss
add
inc
add
shlb
or
ja
sub
mov
pop
xor
jecxz
adc
aas
cs
addr16
cmp
hlt
scas
bound
adc
push
push
jb
cmp
out
push
dec
enter
xchg
loop
int
roll
scas
add
fs
push
cmovo
rclb
loop
mov
loopne
dec
add
adc
sub
inc
xchg
xor
sbb
adc
push
ret
mov
push
xor
push
in
roll
sub
sbb
inc
pop
loopne
sbb
xor
frstor
jp
addr16
cmpsl
aaa
mov
fdivl
cmp
adc
sbb
mov
fiaddl
cmp
or
sbb
stos
fmuls
sbb
int3
mov
cltd
xchg
mov
or
mov
xor
and
cld
inc
adc
or
popa
cmp
inc
pushf
hlt
popa
or
andb
jge
pop
lret
roll
inc
jmp
in
sub
cmp
and
inc
shl
add
jns
xchg
pop
inc
nop
and
mov
aaa
cmp
call
pusha
movsl
icebp
mov
ret
xlat
or
cmp
js
dec
in
dec
mov
divb
and
pop
xlat
xor
icebp
sbb
and
out
cmp
inc
xchg
movsb
ror
mov
sub
or
lds
cmp
or
inc
fisttpll
mov
pop
add
stos
sbb
mov
nop
mov
cmp
outsb
outsb
je
xor
js
pushf
sbb
imul
cmp
jmp
ret
inc
cmp
inc
push
jmp
sbb
dec
out
and
inc
aad
push
mov
js
insb
pop
xor
insl
loop
cs
xor
push
stos
sbb
pusha
mov
jecxz
outsl
insb
dec
push
popa
je
push
std
lret
popf
insl
push
or
xor
lock
push
push
push
adc
adc
add
xchg
out
dec
xor
pop
push
gs
mov
rcrb
push
sbb
or
cmp
or
subb
les
lret
add
jmp
xchg
pop
adc
addb
pop
ds
lods
push
insb
xor
imul
ret
jae
addl
push
fbstp
add
dec
dec
inc
xor
pop
insl
ret
add
stos
dec
cmp
outsl
int
sub
sbb
adc
cmpsl
add
mov
adc
sbb
call
mov
pop
loope
mov
push
mov
sub
dec
sub
js
cs
nop
pop
add
fadds
lds
fs
dec
popa
mov
cli
pop
push
ja
jb
pop
incl
xor
inc
jne
and
push
xor
xor
cs
mov
mov
or
cwtl
adc
inc
sti
test
jl
adc
test
fcomp
pop
inc
cmc
xor
xor
adc
cmp
push
pop
daa
lods
call
adc
and
push
add
daa
ljmp
fs
jo
out
adc
sbb
cli
and
stos
push
outsl
imul
push
inc
fsubs
sbb
add
hlt
lgs
xchg
sbb
push
aas
cmp
arpl
add
inc
cmp
pop
das
scas
sbb
adc
ds
pop
inc
cmp
sub
add
inc
lea
aas
ds
push
xor
cmp
cwtl
pop
pop
pusha
push
xchg
xor
pop
sbb
jmp
add
push
adc
nop
mov
movsb
push
test
lods
and
or
add
mov
pop
ja
xor
and
xchg
xchg
scas
pop
or
sti
dec
jp
out
pop
xor
jp
stos
movsb
push
inc
outsl
test
mov
insb
mov
pop
jle
fildl
sub
pop
pop
pop
dec
insb
cld
fidivrl
cs
cmp
cmp
push
outsl
loopne
stos
into
inc
mov
movsl
sbb
pop
dec
pop
in
insl
mov
movsl
repz
pop
repz
hlt
sbb
je
insb
sbb
ds
add
cmp
mov
aad
iret
xor
pminub
mov
dec
push
loopne
add
jge
sub
sub
ret
aas
add
dec
dec
fmull
and
and
in
mov
and
inc
dec
or
add
xor
dec
call
add
aaa
mov
mov
jmp
sub
add
jb
sub
mov
das
and
addr16
popa
mov
fcmovu
mov
outsl
and
int
insb
mov
mov
inc
hlt
push
ror
push
punpckhwd
dec
outsb
push
je
lds
insb
and
daa
inc
insb
mov
lods
sar
push
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
mov
fcomps
gs
nop
cmovae
pop
rol
xchg
daa
dec
push
dec
jb
loopne
cmp
inc
aas
les
pop
js
mov
inc
adc
sub
adc
pop
xorb
inc
cmp
ret
or
pop
push
sub
sbbb
sti
add
loopne
sub
jno
leave
xorl
jns
in
popf
and
sub
vmovd
addr16
pop
sbb
pop
cli
jne
or
call
lods
mov
sbb
push
jl
cmp
sub
mov
aad
add
xor
aaa
sub
or
add
inc
and
xchg
scas
jnp
in
ret
and
push
addb
mov
loop
daa
in
or
adc
push
push
push
push
call
inc
add
sub
fcomps
fistps
arpl
or
pop
cmp
sub
dec
stos
nop
pop
adc
insb
cs
and
or
bound
mov
ja
ss
js
mov
test
add
push
and
add
orb
inc
or
test
pop
and
inc
add
inc
add
stos
repnz
xor
mov
ds
scas
inc
das
movsb
insb
dec
add
sbb
popf
orb
xchg
xchg
rcrl
cmc
inc
jg
inc
xchg
inc
repnz
sar
inc
pop
lock
jge
jge
adc
cmpb
aas
mov
jo
xchg
mov
pop
inc
dec
add
mov
xchg
sbb
das
push
sbb
int
add
ret
fdiv
push
les
aas
add
jnp
mov
test
addr16
movsb
hlt
daa
cmp
pop
pop
add
push
mov
sub
lods
ss
inc
add
adc
or
aaa
pop
lahf
ds
jnp
add
daa
mov
insb
mov
movsb
insl
insl
adc
mov
sbb
pop
in
sbb
jg
dec
push
xor
outsl
nop
sbb
inc
and
cmp
push
jb
xor
jb
push
sub
movsl
je
add
clc
pop
xor
or
sbb
push
push
enter
iret
pause
dec
call
imul
mov
sarl
adc
pop
sbb
in
jne
mov
pop
pop
pop
sahf
pop
repz
pop
pop
push
je
repz
iret
add
pop
int3
mov
pop
cmpsl
clc
cmp
mov
push
jo
outsl
in
xor
mov
add
mov
xchg
sbb
out
dec
inc
mov
fsubs
mov
push
shrb
imul
iret
xchg
xor
pop
or
add
popa
ret
xchg
cmp
lock
sahf
testl
out
xchg
arpl
sub
mov
pusha
ffreep
inc
jg
jg
jne
scas
je
test
push
xor
add
dec
mov
cltd
in
push
add
inc
and
xor
mov
jl
cmp
dec
outsl
add
xchg
or
filds
sbb
inc
cs
nop
mov
lods
outsl
fists
cmp
cmp
dec
sahf
negb
ss
add
and
filds
push
je
pop
and
mov
add
push
sub
orb
nop
xor
pop
mov
addr16
pop
in
pop
pop
xchg
or
roll
scas
add
or
and
pushl
and
jb
xor
leave
jae
pop
shlb
ficompl
les
outsl
sub
inc
repz
insb
lock
scas
movsb
fstps
cwtl
pop
scas
in
xor
pop
xbegin
push
clc
push
jl
push
fs
popa
sub
fadd
test
ja
mov
call
pop
jg
sbb
inc
ja
pop
sbb
testb
dec
pop
pop
push
push
sbb
jb
xchg
and
outsl
and
nop
dec
mov
push
cwtl
sbb
and
push
pop
enter
clc
insl
and
add
leave
mov
mov
outsl
out
mov
xor
push
pop
pop
add
callw
pop
push
aaa
scas
mov
adc
mov
insl
cmpb
xchg
or
fdivp
push
cld
daa
add
dec
ficoms
or
pusha
mov
iret
xlat
push
insb
popa
jbe
clc
push
xor
movsb
imul
rclb
add
xchg
xchg
push
push
pusha
scas
sbb
pop
sbb
es
and
and
and
nop
sbb
testl
sbb
jbe
pusha
popa
outsl
push
push
lods
sbb
stos
outsl
jg
sub
daa
sbb
out
push
pop
bound
push
add
call
mov
arpl
pushf
adcb
or
adc
or
adc
and
rcrl
pushf
insb
bound
mov
or
popa
push
out
shlb
scas
add
je
push
fst
or
arpl
movsb
fs
lahf
adc
or
and
cmp
pop
add
rorb
arpl
add
and
pop
leave
fwait
loopne
add
add
sbbl
fiadds
push
mov
adc
aaa
mov
cmpsb
xchg
or
aaa
inc
sub
adc
add
mov
or
add
and
shlb
cs
add
gs
sub
fcoms
mov
xchg
inc
mov
or
cmpb
inc
dec
scas
addr16
add
xchg
or
int3
add
sub
das
and
and
push
jb
jne
addr16
outsl
add
or
sub
or
fs
adc
and
ss
adc
lods
data16
add
inc
dec
and
in
mov
xor
cmpsl
add
sub
mov
dec
xchg
add
add
daa
push
dec
scas
jbe
out
mov
or
lods
in
setbe
push
inc
xchg
push
hlt
imul
sahf
dec
sub
push
movsl
cmpsl
cmp
xor
or
cmpsl
cwtl
xchg
sub
repnz
scas
aas
or
push
movsb
push
test
movsb
xchg
pop
or
inc
cs
hlt
add
in
cltd
adc
hlt
and
popl
mov
add
sbb
nop
scas
push
mov
scas
add
int3
outsl
out
mov
add
add
andb
inc
enter
pop
or
mov
dec
sub
or
jns
pop
leave
add
test
les
aam
imul
cmp
outsb
loopne
and
inc
xlat
or
test
pop
cmp
daa
xor
orl
es
imul
push
inc
insb
mov
imul
mov
or
ja
jbe
xor
inc
aam
mov
outsb
mov
pop
add
aaa
and
push
and
add
mov
xlat
data16
push
das
pop
outsb
repnz
in
jo
orb
addr16
pusha
ret
pusha
aas
pop
out
pusha
jne
outsl
mov
sbb
push
lock
or
cmp
mov
sarl
out
jp
jge
repz
repz
fildl
jnp
push
pop
out
cmp
subb
out
sahf
cs
fs
es
iret
repz
outsl
mov
jle
cmp
out
lcall
lcall
sub
jns
out
lcall
cmp
dec
xchg
mov
out
sahf
dec
jbe
notb
test
iret
repz
jge
add
daa
jl
out
push
xchg
ret
xchg
cmp
rorl
ret
xchg
jns
cmpsl
inc
subl
scas
push
mov
sarl
lcall
out
ds
mov
or
pop
jg
lea
lcall
jbe
bound
repz
and
repz
repz
xchg
push
mov
jns
xchg
insb
stos
ds
fisubl
out
lcall
jo
out
repz
fbld
xchg
cmpsb
push
mul
jns
out
xchg
pop
xorl
lock
cmpsl
stc
cmp
daa
lcall
repz
cmc
sbb
repz
popf
cmpsb
int3
sbbb
mov
lods
pop
mov
repz
mov
cmp
jl
out
lahf
lock
out
movsb
inc
mov
sarb
iret
sarl
dec
mov
sbb
push
or
inc
jg
jns
cmpsl
stc
and
std
imul
xchg
xor
out
int3
aaa
lods
pop
cmpsb
repz
out
lods
notb
scas
cmp
out
lcall
lock
repz
cmp
mov
sarl
scas
sub
out
lcall
jle
out
cmp
xlat
cwtl
mov
mov
adc
mov
lcall
int
jns
shll
xor
insb
sahf
cmpsl
stc
cmp
or
cmp
sarl
imul
int
jns
fmuls
xchg
fistpll
inc
lret
ds
sub
lahf
out
xor
rcrl
aaa
rorl
stc
xor
jns
paddq
addr16
add
mov
out
pop
xor
mov
mov
add
stos
push
sbb
jbe
jle
dec
jno
pop
add
push
into
pop
and
add
mov
mov
test
sub
sahf
xor
in
xchg
mov
fistps
jb
fnsave
add
pop
paddq
mov
pop
loope
inc
aas
pop
and
and
rcrb
int3
cmp
out
pop
xchg
ss
in
jb
lock
jo
in
aaa
jae
mov
cmp
inc
mov
shlb
loop
or
inc
pop
enter
mov
dec
mov
pop
dec
or
adc
in
push
or
inc
jg
jg
xor
cmp
mov
in
cs
fmuls
mov
mov
mov
movsb
cltd
fldt
or
push
lock
mov
cmpsl
sarb
fwait
push
in
in
mov
iret
sub
test
out
mov
out
ss
aas
mov
imulb
fs
out
aas
mov
cld
dec
ss
and
jne
cmpsb
loopne
cwtl
or
add
inc
mov
scas
push
lcall
push
pop
jmp
scas
jbe
shlb
cmp
pop
fsubp
mov
inc
inc
push
dec
mov
dec
mov
cmp
add
jb
and
ja
or
inc
rcll
or
adc
shl
dec
rcrb
fwait
push
fs
and
cs
jg,pn
push
incl
adc
fs
jg
push
dec
push
mov
pop
mov
jb
popf
addr16
aas
bnd
adc
insb
inc
mov
dec
js
pop
pushf
sbb
daa
xchg
lahf
or
pop
inc
mov
push
and
inc
ja
push
das
outsl
dec
repnz
jne
dec
hlt
js
js
dec
and
jns
mov
imul
inc
insb
jns
jns
lcall
push
mov
outsb
ret
inc
scas
idivb
jns
mov
and
add
jnp
daa
jns
adc
jp
push
push
add
in
jp
lds
mov
and
in
imul
push
mov
dec
push
leave
aam
xor
jnp
ja
in
jnp
stc
jnp
addr16
jl
jl
movsb
jb
dec
sahf
xchg
xchg
add
push
mov
mov
lock
insl
clc
mov
or
or
addr16
push
jl
jl
pusha
and
enter
inc
enter
int3
mov
leave
and
add
adc
scas
and
enter
mov
aas
iret
sbb
jb
jl
jl
push
add
cmp
repz
in
add
cmpsl
stc
add
or
jns
out
mov
add
enter
adc
xor
pop
jge
lds
insb
push
and
js
mov
test
and
xchg
into
cmp
in
fsubp
cmpsb
add
and
leave
repz
push
in
and
pop
jle
jle
jle
jb
enter
jle
jle
jg
cmp
cmp
cmp
fnstsw
cmpsl
vpcmpeqd
aad
fstpl
in
int3
pop
and
pop
loopne
jg
add
addr16
cmp
cmp
cmovs
push
jg
xchg
scas
pop
and
add
addb
inc
xchg
mov
inc
lock
xchg
and
add
add
cmp
pop
add
jne
mov
xor
stc
orl
push
jne
and
lock
pop
outsb
fisttpll
daa
ja
add
sbb
jb
rclb
roll
push
push
pop
cmpb
es
push
jg
sbb
faddl
add
outsb
xchg
inc
repnz
add
jmp
andl
xorl
inc
mov
in
addl
mov
xchg
adc
pushf
or
sbbl
sbbl
test
xchg
xchg
inc
mov
or
pop
xchg
xchg
xchg
xchg
andb
sub
out
xchg
xchg
orb
push
or
jns
or
jp
test
out
or
out
sahf
out
adc
jns
adc
adc
adc
js
out
adc
addr16
jl
or
sbb
sbbl
outsb
adc
addb
mov
outsb
addr16
leave
inc
repnz
push
adc
fldl
xchg
inc
push
xchg
scas
inc
jb
jbe
daa
fs
cmpsl
ror
leave
and
dec
jb
pop
inc
test
dec
test
xchg
and
sub
test
xchg
mov
cwtl
mov
test
hlt
ss
mov
enter
fdivl
adc
pop
mov
xor
aam
pop
add
add
cmp
inc
pop
loopne
out
sub
das
add
xchg
pop
add
shl
fsubl
adc
add
and
mov
dec
test
inc
jb
jg
mov
jns
jp
add
cmp
mov
lret
mov
add
xchg
or
mov
adc
ljmp
or
jb
xor
jb
mov
mov
add
fnstsw
sbb
and
ja
mov
pusha
mov
mov
pop
pop
sub
xchg
imul
xchg
pop
add
mov
movsb
xchg
mov
repnz
adc
in
js
mov
xchg
xchg
pushf
xchg
mov
adc
int3
mov
add
das
pop
loope
js
pop
orl
das
cltd
mov
leave
inc
in
decb
inc
xor
flds
mov
sbb
xor
enter
dec
dec
leave
rclb
daa
xchg
add
adc
mov
xchg
mov
repnz
addr16
int
repnz
fisttpll
repnz
mov
mov
repnz
mov
repnz
pop
cmovle
dec
push
or
dec
dec
or
or
dec
dec
dec
dec
push
add
dec
dec
add
add
and
xchg
push
andb
iret
insl
and
les
xchg
dec
es
jecxz
jbe
add
pop
mov
mov
mov
cs
add
arpl
inc
repnz
movsb
xchg
pop
jmp
mov
pop
sbb
ret
rorl
sarl
loope
push
jmp
icebp
push
or
or
xor
fnstsw
inc
cmovl
sahf
cmp
mov
push
les
into
lcall
je
adc
mov
popf
lret
push
ljmp
or
psubd
and
push
cmovle
add
adc
inc
das
fdivrs
add
pushf
jl
jno
push
pop
pop
push
mov
leave
mov
es
adc
je
repz
and
call
cmp
lea
and
xchg
xchg
jns
mov
xchg
dec
sahf
out
cs
add
leave
repz
pop
mov
orb
add
cmp
in
test
mov
xchg
adc
mov
sub
dec
and
pop
sbb
in
fisttpll
outsb
ja
je
xor
xchg
xchg
cltd
mov
movsb
scas
sahf
ja
jb
push
fstpt
out
pop
out
icebp
or
and
adc
mov
js
or
or
adc
out
mov
cmp
loopne
xchg
jbe
lea
mov
mov
dec
sahf
out
push
rcr
or
in
in
jmp
repz
out
int
subb
nop
ja
pop
pop
pop
rorb
das
flds
gs
rolb
sbb
add
xchg
inc
repnz
sub
inc
fdivs
jl
scas
add
or
mov
xchg
dec
leave
ret
mov
mov
add
jg
in
xor
icebp
ret
pop
xchg
and
enter
xchg
insb
xchg
insl
xchg
push
jb
mov
xchg
movsb
scas
dec
adcb
cld
nop
popl
leave
xchg
and
xchg
sbb
and
cld
xchg
push
xchg
xchg
pop
ljmp
aas
jp
jno,pt
pushf
das
adcb
and
pop
or
push
jbe
push
out
loopne
mov
adc
xchg
adc
sub
iret
add
cwtl
dec
push
inc
repnz
ja
pop
dec
sahf
fcmovne
xchg
lahf
filds
xchg
pop
cmp
mov
das
in
in
out
icebp
xchg
cld
xchg
pop
xchg
loop
in
adc
ss
jnp
insb
outsl
or
cwtl
pop
xchg
incl
sbb
fs
outsl
xchg
jp
test
nop
xchg
fwait
cmpsb
sahf
adcl
or
xor
cltd
cmc
inc
mov
add
xchg
in
xchg
and
aaa
xchg
inc
xchg
jl
cmp
xchg
pop
xchg
testl
cmp
dec
in
and
js
mov
xlat
pandn
das
xchg
out
movsb
or
lods
insl
lgdtl
pop
das
push
xchg
mull
leave
jae
dec
xchg
add
xchg
imul
mov
aad
add
inc
fnsave
fcoml
push
cmp
mov
push
cmp
add
adc
xchg
jg
cmpsl
push
add
cwtl
je
scas
pushl
inc
mov
push
or
jns
leave
xlat
ud2
fisttps
and
xchg
out
xchg
aas
push
pushf
cmp
pop
sbb
xchg
out
shll
in
ja
push
add
and
jns
leave
leave
add
lods
mov
mov
ja
xlat
filds
jns
xchg
cmp
cli
add
or
cwtl
xchg
out
mov
inc
xchg
push
popf
dec
mov
scas
sahf
xchg
stos
arpl
scas
scas
cwtl
jns
insl
jb
bswap
push
add
in
pop
aaa
push
scas
fcomps
iret
insl
call
cltd
repnz
adc
repnz
inc
cltd
repnz
cltd
push
cltd
pop
cltd
arpl
imul
or
or
pop
pushf
pushf
pushf
pushf
push
add
pushf
pushf
add
sbbl
cmp
repz
xchg
sbb
sbb
mov
dec
dec
sahf
outsb
mov
ret
lret
js
out
and
and
mov
push
jecxz
sub
lahf
push
lcall
daa
fstpl
outsl
xchg
xchg
imul
add
jae
lcall
pop
orl
or
xchg
mov
aas
scas
xchg
add
in
repnz
shufps
push
sbb
icebp
stc
in
xchg
or
add
mov
sbb
in
jo
inc
fwait
xchg
cltd
sbb
fbld
mov
out
js
orl
cmp
mov
daa
mov
insl
int
aad
aad
fucom
pop
inc
cmp
in
loop
inc
or
or
mov
inc
push
daa
mov
xchg
repnz
lds
cmp
pop
pop
arpl
add
popf
in
pushf
add
mov
iret
in
repnz
in
mov
test
push
repnz
mov
xchg
test
fsubrp
out
iret
add
shlb
into
pop
adc
popf
ja
jb
xchg
jl
movsb
dec
push
jns
daa
js
popf
out
outsb
popf
jl
add
dec
sahf
out
add
mov
add
repnz
pmulhuw
jb
add
sbb
out
and
or
or
in
in
inc
pop
dec
or
pushf
cmp
repz
sahf
cmp
repz
jb
sahf
dec
and
fsubs
inc
mov
out
mov
cmp
add
add
aad
xor
push
xchg
pop
loopne
jo
cmp
daa
lock
push
sub
push
lahf
fists
jno
out
pop
push
add
push
push
mov
sub
jns
lahf
push
je
in
mov
mov
rcr
in
sbbb
fnstsw
sbb
mov
pop
or
fstl
testl
mov
sub
cmpsl
mov
cmpsl
mov
clc
popf
push
lahf
push
mov
push
dec
mov
pop
outsl
iret
leave
repz
ja
or
or
mov
pop
jns
enter
lret
push
add
repz
fninit
pop
jmp
add
repz
sti
add
pop
or
sbb
and
mov
in
scas
inc
mov
ss
stc
xor
iret
repz
mov
xchg
add
cmp
add
pushf
pop
and
ficompl
inc
bnd
push
incl
dec
test
std
mov
add
xchg
adc
mov
xchg
ret
cli
inc
pop
fsubrs
mov
out
call
leave
push
pop
mov
add
out
incl
stos
mov
add
xchg
mov
add
orb
mov
mov
cmp
iret
jae
add
push
les
imul
enter
sbb
daa
cmp
jb
call
mov
cmp
add
repz
pop
add
cmp
repz
or
iret
repz
cmp
mov
mov
enter
shll
dec
dec
adc
jo
dec
shld
push
aas
pop
loope
add
inc
mov
jp
adcb
xchg
movsb
mov
cmpl
in
jmp
fsubrs
in
jb
lods
mov
jb
shl
out
imull
jnp,pn
incl
movsl
pop
push
pop
in
xchg
movsl
pop
movsl
pop
movsl
daa
setne
scas
aaa
movsl
shrd
adc
pop
movsl
aaa
bound
push
jb
jp
mov
repz
lods
pop
mov
fistpl
add
mov
pop
rolb
fisttpll
enter
cmp
test
aas
subb
add
nop
por
insl
aaa
pushf
repz
sti
pop
push
aas
and
stc
jmp
pop
add
lcall
ja
pop
push
aas
push
cmpsl
ds
pushf
mov
sbb
in
in
imul
and
add
movsb
mov
lds
add
cmpsb
out
cmpsl
daa
xor
cmp
nop
invd
adc
xchg
pushf
andb
imul
add
ja
cmpsl
pop
dec
xchg
cs
push
jno
daa
xor
mov
sahf
xchg
das
das
pop
dec
mov
lret
cmpsl
out
sbb
jb
loopne
jmp
mulb
cmp
pop
or
in
sbb
add
jbe
popf
xchg
pop
addr16
movq
push
call
pop
push
mov
adc
test
popf
fsubl
cmpsl
mov
xchg
add
lods
fucom
xchg
mov
in
cmc
paddw
ss
test
or
mov
test
jb
inc
test
in
xor
jae
outsb
mov
xchg
push
xchg
iret
sahf
movzwl
addr16
shrl
in
sbb
in
stos
and
shll
push
xchg
data16
stos
dec
in
in
mov
aam
pushf
pop
and
loop
mov
ljmp
aad
xchg
adc
lsl
or
mov
add
and
stos
fldt
inc
stos
addr16
push
pop
iret
leave
lods
add
add
pop
or
es
repz
pop
adc
pop
xor
jbe
jle
repnz
mov
inc
xor
inc
inc
mov
sbb
jl
inc
mov
mov
iret
push
mov
cmp
lods
mov
out
idiv
in
mov
pop
lods
syscall
push
pop
test
pop
pop
daa
lods
fbld
lods
call
lahf
pop
push
add
mov
lods
setle
xchg
fcmovnb
add
sbb
adc
lods
pop
cmc
lods
lods
into
dec
sahf
xchg
dec
push
or
lea
lods
dec
popf
cmp
repz
add
data16
mov
mov
xchg
jp
xchg
outsb
clts
aaa
lods
pop
pop
ds
lods
jle
sahf
lods
out
pop
inc
lods
scas
pop
mov
cmp
xchg
mov
cmpsb
mov
out
fsubp
pmaxsw
sbb
jge
inc
jmp
mov
jb
add
imull
xor
mov
mov
out
push
scas
xchg
shll
adc
scas
outsl
enter
fsubl
scas
outsb
in
repnz
das
pmaddwd
mov
pop
or
ret
js
testb
inc
pop
ret
jl
aam
jo
inc
xchg
or
ss
mov
adc
nop
mov
or
std
add
ja
leave
mov
sbb
adc
dec
ja
mov
cmpsl
insb
scas
pop
je
jl
out
sahf
fildl
repnz
je
lods
sidtl
mov
out
jb
lds
shll
cmp
insl
and
js
mov
or
test
aas
sbb
jns
daa
adc
xchg
cs
out
addb
fwait
in
dec
stos
mov
stos
mov
ja
sahf
fildl
push
add
push
adc
mov
mov
pop
and
sub
repnz
scas
xor
cmp
scas
xchg
testb
or
addr16
fisttpll
emms
iret
jg
xchg
fwait
cmp
in
xchg
push
push
lahf
pmulhuw
in
add
or
cmpsl
dec
scas
xchg
out
mov
jns
add
iret
gs
in
repnz
mov
mov
repnz
fimuls
push
push
or
adc
mov
jp
pop
pop
and
pop
mov
pushf
cmp
in
pop
xchg
add
iret
leave
inc
repnz
nop
add
leave
repz
add
add
outsl
rorl
fstps
or
push
mov
push
jb
mov
mov
and
sbb
and
sub
ss
dec
dec
dec
ds
pop
addr16
dec
dec
dec
sbbb
dec
in
add
daa
daa
inc
pop
das
jge
dec
sahf
out
adc
iret
repz
fmull
mov
xchg
out
cmp
icebp
dec
sbb
rolb
jmp
mov
and
mov
and
fsubrs
test
mov
mov
xchg
dec
dec
es
sarb
dec
fnstenv
push
sbb
mov
dec
mov
rol
cs
mov
mov
xchg
and
mov
mov
mov
dec
sahf
pop
lods
cltd
or
cmp
pop
inc
push
sar
mov
fisubrs
pop
push
dec
sbb
aas
and
cmp
inc
mov
mov
mov
jns
out
or
push
pushf
jo
mov
cmpb
mov
shrl
shrl
mov
mov
ret
pop
ret
pop
lret
pop
dec
outsb
cmp
pop
cli
mov
pop
pop
pop
add
mov
pop
pop
sub
inc
mov
dec
mov
mov
pop
pop
outsb
mov
mov
xchg
mov
mov
mov
mov
sahf
out
sahf
int
aad
loopne
jns
out
call
idivl
and
out
sahf
sbb
and
sub
je
out
aaa
sub
cvttps2pi
lds
inc
dec
cs
push
mov
xor
ret
bswap
jae
dec
test
lea
xchg
add
push
jmp
dec
mov
enter
add
cmp
jmp
mov
mov
repnz
test
or
les
fildl
inc
cmovge
in
in
jns
jo
fistps
lods
lds
pushf
int
lds
daa
mov
pushf
sti
out
push
mov
iret
repz
daa
add
dec
outsb
pop
dec
push
or
repz
ud2
imul
jg
mov
out
lods
adc
cmp
fsts
in
aaa
jns
out
sbb
push
dec
cmp
in
enter
mov
iret
leave
repz
xor
cmp
and
mov
and
dec
lds
rorl
outsl
mov
xor
fs
mov
in
in
jae
stos
jns
out
mov
cmpps
cmp
in
rorb
pushf
mov
pminsw
mov
lock
bound
mov
outsb
mov
jp
orb
into
and
adc
cmp
and
inc
pop
sub
mov
data16
pcmpeqd
jle
out
lock
mov
adc
mov
iret
mov
xlat
pandn
add
jb
out
clts
out
pop
ds
mov
rcr
jns
aas
push
or
femms
jns
out
ds
comiss
aaa
jns
iret
cmp
push
adc
push
adc
cmp
in
lar
cmp
into
addr16
sbb
outsl
xor
scas
ret
pop
inc
sbb
xor
pop
enter
xchg
push
into
ror
leave
leave
sbb
out
rol
cld
xorb
sarb
lods
nop
leave
push
shrb
xchg
rol
mov
unpckhps
xchg
aam
push
dec
lahf
popf
fsubl
adc
cmovs
repnz
lret
fcmovne
jnp
jnp
mov
xchg
test
daa
into
rcrl
in
dec
dec
out
push
mulb
das
xchg
out
rcrb
ret
jl
outsl
movaps
ja
xor
sahf
out
xor
pop
add
jns
add
xchg
fcmove
in
seta
in
cmpps
pushf
cmp
in
ficompl
loop
ljmp
cli
add
clc
jbe
jns
xlat
and
ja
adc
out
fs
pop
pusha
fwait
xchg
punpckhbw
in
jns
js
addb
xchg
xchg
xchg
mov
cmp
mov
dec
hlt
in
out
out
test
inc
js
orb
and
jns
fucomp
xchg
push
das
xor
cmp
dec
sahf
out
inc
dec
add
fwait
in
pop
popa
les
leave
test
jbe
lods
fbstp
repnz
cmp
int3
decb
aam
clc
dec
dec
mov
pop
lds
in
ja
lds
lds
sbb
rcll
dec
and
pushf
pushf
push
pop
shlb
pop
jge
jge
in
popf
cmpsl
movsl
push
or
jns
daa
adc
shlb
pusha
cmp
cmpsl
sti
add
mov
xor
xchg
iret
addr16
xchg
xchg
mov
add
out
inc
dec
add
mov
andl
add
lods
movsb
xor
mov
mov
add
out
jns
cmp
iret
lods
rorb
sahf
ja
jns
mov
dec
iret
rorl
add
repnz
dec
push
insl
repnz
add
cltd
das
pop
jmp
outsl
mov
das
das
das
rol
fcmovnb
out
icebp
das
das
das
das
cld
movl
enter
das
sub
xor
ds
fldt
das
push
enter
sbb
sbb
sbb
in
in
sbb
push
adc
adc
push
jne
cmp
cmp
out
sahf
mov
xor
out
ret
xor
out
jecxz
out
cmp
sarl
cmp
cmp
cmp
out
push
sbb
xchg
out
cmp
push
inc
cmp
jae
pop
pop
inc
addr16
sahf
out
bnd
js
out
dec
sahf
dec
test
in
mov
cmp
leave
loopne
push
testb
leave
enter
lret
rclb
leave
and
insb
pop
lahf
pop
fcom
imul
sbb
push
jbe
lret
enter
ficoms
cmp
lods
lret
ret
lret
xchg
and
fxch
in
out
lret
jle
cli
lret
lret
adc
fistpll
jb
enter
lret
xor
cmp
repz
sbb
adc
repz
pop
push
cmp
repz
mov
xchg
sbb
cmp
repz
sbb
repnz
pop
shlb
push
sahf
out
sahf
and
and
and
daa
daa
and
int3
or
in
sub
sub
iret
in
in
sub
dec
cvtps2pd
cmp
repz
xor
jnp
fcmovne
repz
out
cmp
mov
mov
dec
sahf
cmp
sarl
fsubp
jns
sahf
cmp
jmp
dec
sahf
aas
decl
int
adc
fcompl
sub
ss
inc
sbb
icebp
pushf
dec
inc
ficoms
dec
jb
push
repnz
cwtl
int
cmp
mov
mov
mov
jae
xadd
int
fisttps
cmp
repz
xor
adc
push
add
lea
into
sbb
and
jl
mov
scas
or
mov
xlat
or
daa
sub
cmp
popa
into
imul
jno
pop
add
mov
clts
xchg
cltd
add
pushf
pushf
mov
addb
mov
jae
inc
pop
fsub
pop
in
xacquire
lahf
add
shll
into
fists
lahf
clc
popf
out
es
xlat
aaa
push
mov
inc
iret
dec
iret
push
iret
pop
mov
mov
jle
fdivrs
aaa
mov
jbe
pop
stos
mov
rorl
out
sahf
int3
pop
xlat
or
or
xchg
out
in
or
add
xchg
xchg
fcmovne
push
sbb
and
xor
sahf
cmp
inc
movmskps
jns
ja
cs
repz
jl
sbb
leave
repz
sbb
jns
push
mov
and
mov
and
ljmp
add
outsl
or
daa
push
jae,pt
popf
and
sub
jg
mov
dec
insl
shll
add
add
repnz
scas
iret
or
daa
push
leave
cmp
loope
rolb
iret
jns
aaa
jb
shlb
push
das
pop
insb
daa
fucom
cmp
add
lret
and
pop
rorb
shlb
clflush
cs
das
xchg
xchg
rcrb
cmp
test
mov
pop
leave
aaa
jns
out
aam
fisttps
dec
sahf
ja
push
ljmp
ret
rorl
and
push
jns
leave
repz
and
sub
and
out
inc
adc
fisubs
sahf
pop
sub
arpl
add
outsb
stc
stos
add
mov
out
xchg
cmpsb
sub
faddl
sub
mov
mov
lods
shll
daa
iret
mov
add
jecxz
out
shll
stc
roll
pop
push
mov
push
fsubrl
ffreep
jg
aam
inc
aam
lret
enter
pop
aam
jae
jle
iret
repz
mov
xchg
or
outsb
repnz
sysret
pop
stos
aam
repnz
mov
rcl
aam
inc
into
icebp
aam
loope
in
aam
push
leave
push
fsub
and
sbb
inc
out
lock
outsl
adc
push
maxps
fisttps
jb
xchg
jl
fldl
ja
push
add
fcmovne
mov
pop
mov
or
lret
jns
rorb
repz
pop
clc
adc
jae
jns
or
adc
adc
das
and
repz
or
pop
xor
cmp
scas
dec
push
dec
xor
xchg
ficomps
jbe
outsl
frstor
mov
xchg
out
fimuls
mov
sahf
out
sahf
mov
or
cmp
in
out
psubd
or
xlat
adc
sbb
es
daa
daa
daa
xor
push
cmp
repz
pop
adc
outsb
bnd
sbb
jle
mov
sbb
dec
sahf
ja
push
push
rol
rorl
out
and
mov
mov
xlat
push
xlat
jns
jg
add
mov
sub
out
and
sub
inc
popf
cmp
repz
dec
xor
sahf
fcomps
pop
cmpsl
mov
fcmovne
repz
mov
lcall
ja
call
and
mov
adc
cli
and
aas
cmpsl
mov
and
dec
fnstcw
inc
addr16
out
rclb
sbb
inc
push
add
push
inc
inc
aas
movsb
dec
and
add
xchg
mov
aaa
mov
aaa
cmp
push
sahf
out
repnz
sbb
or
leave
in
in
or
or
or
outsb
mov
scas
or
daa
adc
fucom
push
adc
and
dec
dec
inc
push
addr16
das
push
jae
mov
insl
push
in
in
sahf
and
jb
pop
leave
in
jbe
andb
cmpb
daa
iret
jae
test
xchg
sub
daa
movsb
fbld
daa
mov
aas
xlat
sbb
data16
jo
les
mov
cmp
push
sahf
out
sahf
xor
and
sbb
cld
call
iret
repz
aam
int3
fdivp
cmp
enter
mov
out
mov
movsb
cwtl
nop
repz
in
addb
jo
iret
repz
pop
push
inc
inc
cmp
dec
loope
cmp
adc
add
push
inc
inc
ds
xchg
mov
and
enter
adc
and
inc
xchg
inc
popa
sbb
dec
sbb
mov
std
mov
sbb
test
test
hlt
or
cmp
ss
movsb
add
jns
and
mov
lahf
loopne
inc
jle
test
shll
mov
inc
aas
daa
pop
mov
pop
inc
mov
mov
jmp
call
mov
notl
push
ficompl
mov
xor
gs
neg
fsubp
stc
jb
jle
mulb
mov
ja
lahf
inc
mov
inc
dec
pop
jmp
push
in
or
and
add
jle
inc
pop
mov
aaa
push
incl
or
mov
xchg
insb
add
das
aas
inc
dec
dec
aam
add
xchg
int
push
add
loopne
mov
lahf
out
push
or
repz
repz
xchg
adc
repz
adc
sbb
sahf
out
lcall
jl
out
dec
push
sub
enter
iret
shll
nop
and
repz
out
ljmp
mov
cld
push
xor
cmp
cmpsb
push
mov
mov
loope
pop
rorb
push
add
fcoms
mov
inc
pop
pop
loop
or
jg
add
jle
adcb
out
stos
add
cwtl
cs
daa
lcall
addr16
push
push
rolb
mov
mov
inc
insb
dec
divl
push
push
xchg
lea
aaa
push
aas
pop
daa
dec
sbb
push
negl
imulb
in
sti
lahf
call
jg
fcoms
loopne,pn
inc
pextrw
pop
push
out
add
shl
sbb
sub
jne
add
xchg
es
mull
sbb
sbb
jns
sbb
iret
jmp
inc
aas
lock
and
push
sbb
rcrl
or
out
pop
pop
cld
lock
add
out
jns
pop
adc
fsubl
das
push
or
jnp
out
or
adc
sahf
out
push
in
enter
iret
repz
sbb
cmp
repz
movsb
and
repz
and
leave
xchg
test
clc
sbb
out
jg
movups
ljmp
es
mov
jg
cmp
mov
mov
and
jg
repz
push
pop
js
lcall
adc
xor
lcall
cmp
dec
rcll
pop
ja
mov
cmp
jnp
jae
das
push
dec
insb
push
xlat
push
xchg
cmpsl
add
jb
push
dec
inc
pop
enter
pop
repnz
inc
pushf
or
ret
mov
adc
pop
stc
and
mov
push
incb
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
ljmp
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
call
popl
cmp
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
incl
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
decl
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
decl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
decl
xchg
clc
repz
mov
subb
fwait
xchg
and
and
test
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
inc
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sar
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
ljmp
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
jmp
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
pushl
adc
mov
sub
dec
in
ss
push
scas
into
imul
fdivrp
inc
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
sub
ficomps
frstor
cld
push
roll
inc
inc
je
inc
inc
in
je
push
dec
jnp
ljmp
cmpsl
add
ja
popa
push
out
mov
les
sar
pop
hlt
push
xor
xchg
fs
xor
call
push
jmp
rclb
mov
sub
mov
lcall
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
adc
test
fs
xchg
in
leave
mov
add
insb
push
arpl
psubd
or
or
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
aaa
std
decl
movsl
cli
test
xor
leave
mov
jecxz
fdivs
jne
filds
mov
fcompl
shrl
push
ficoms
push
xlat
enter
mov
jmp
les
iret
shld
sub
mov
and
or
call
dec
push
sarl
fdivl
jno
add
aad
mov
lcall
mov
push
movsl
in
lahf
xor
mov
js
stc
call
shrb
push
loope
or
insl
or
pop
arpl
hlt
push
imul
jmp
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
call
mov
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
jmp
incl
add
inc
movsl
fisttps
fadd
jg
shll
jmp
outsb
xor
mov
sarb
add
in
add
lcall
or
cmp
add
daa
adc
or
and
test
decl
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
call
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
jmp
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
gs
pushl
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
incl
mov
aad
mov
call
xchg
shll
push
repnz
addr16
shll
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
sar
fists
addr16
mov
jns
imul
andl
shrb
ss
jg
xchg
ja
int3
add
mov
das
es
lds
or
das
mov
cmpsl
call
ret
shlb
scas
ficomps
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
incl
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
fcomip
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
mov
mov
loop
mov
push
addl
mov
cmp
cmpsl
jg
test
rorb
imul
scas
fcompl
scas
bound
filds
aaa
pusha
cmp
mov
fidivrs
mov
jmp
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
jp
jmp
mov
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
inc
pop
pusha
xor
aam
cmp
pop
push
dec
inc
push
jne
jns
in
add
cmp
out
sahf
out
xlat
fcomp
fcmovu
sahf
out
sahf
fsubp
jecxz
out
sahf
dec
in
jmp
sahf
jmp
in
repz
cmc
jns
out
div
clc
stc
cli
or
out
cld
pop
adc
aas
jg
inc
lahf
inc
dec
adc
movsl
adcb
push
mov
inc
inc
sub
hlt
jbe
dec
inc
pop
cmp
and
fnstcw
insl
bound
inc
test
dec
popa
je
push
fisttps
mov
aas
and
cmp
notb
pop
inc
jno
xor
pop
inc
cmp
pop
bound
xor
aaa
idiv
cmp
popa
arpl
cmp
arpl
or
xor
aam
xor
bound
popa
clc
shl
push
inc
jbe
pop
insb
imul
push
insb
imul
dec
in
cmp
inc
mov
leave
and
push
inc
jp
jno
ljmp
mov
popa
or
fs
gs
je
or
push
jbe
and
sbb
scas
imul
fdivrs
gs
inc
xchg
mov
pop
aaa
lea
or
cli
xor
insb
popa
jns
xchg
insb
add
pop
imul
xchg
cmp
loope
addb
in
and
inc
push
push
aas
and
aas
cltd
out
inc
mov
jae
daa
int
or
inc
aas
add
sahf
mov
inc
jbe
xlat
inc
inc
dec
imul
pop
addr16
js
je
jo
inc
inc
add
ds
gs
mov
out
mov
pop
int
push
dec
cmp
inc
or
fisttps
fs
ja
push
pop
inc
outsb
jne
andl
dec
jge
cmp
xor
xor
mov
insl
fwait
or
add
lods
int
mov
pop
jo
pusha
in
mov
inc
cmp
pop
rorl
pop
sbbl
gs
lods
dec
adc
add
mov
push
xchg
popa
aam
cmp
mov
mov
and
movsb
sub
arpl
xchg
or
frstor
or
jo
lahf
xor
adc
inc
sub
popa
mov
add
jno
loop
push
xor
stos
lds
xchg
pusha
jb
in
nop
test
pop
cmp
inc
insb
mov
arpl
cmp
mov
add
push
cmpsl
xchg
and
jns
inc
xor
popf
das
inc
jb
stos
dec
adc
je
or
dec
inc
outsl
arpl
insb
jle
adc
bound
push
cmp
lods
ja
inc
jbe
xchg
push
lods
cmpsb
xor
ja
adc
das
xor
and
cltd
out
movsl
into
inc
repz
jg
add
adc
adcl
and
movsb
sbb
dec
pop
inc
dec
adc
inc
xchg
sahf
dec
and
addr16
inc
cwtl
sbb
mov
jo
sbb
jg
stos
rclb
inc
push
inc
dec
and
push
sbb
bound
outsb
arpl
arpl
je
pusha
in
lods
testb
aaa
sub
inc
jne
push
pop
mov
nop
sub
mov
daa
sub
lds
and
inc
add
push
add
adc
inc
jo
add
add
aaa
pop
fdivr
loopne
adc
dec
add
add
add
fistl
outsl
lcall
or
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
outsb
xlat
decb
add
pop
sbb
adc
adc
adc
add
inc
mov
shll
or
mov
add
nop
add
add
add
adc
add
data16
add
les
add
pop
shlb
xor
add
cmp
insb
add
jmp
xor
adc
pop
and
xor
inc
mov
adc
xor
cmpb
add
add
or
mov
shrb
daa
mov
xchg
pop
pusha
add
xorl
or
xor
pop
inc
pusha
add
dec
aas
sbb
adc
adc
xorb
add
pop
scas
cmp
pop
pusha
fnsave
adc
push
adc
pop
popa
jno
and
lcall
mov
lock
and
loopne
and
adc
cwtl
xorb
scas
fiaddl
or
js
out
mov
dec
mov
sub
rcr
push
ret
xchg
jae
xchg
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
add
out
pop
les
fsts
dec
pop
cmpb
mov
cmp
dec
sub
sub
xchg
sti
push
in
and
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
xchg
jl
xor
mov
add
or
incl
adc
sbb
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
or
cmpsb
lcall
mov
movsl
jecxz
pop
mov
mov
or
xchg
jg
or
insb
sub
addr16
out
jmp
or
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cli
cmp
fisubrl
in
mov
orb
int3
lcall
fs
ljmp
scas
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
fcomps
sbb
lods
scas
xchg
test
aam
and
sbb
sarl
jmp
fcom
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
fistpll
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
call
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
or
in
outsl
insb
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
mov
mov
stc
xor
hlt
and
xchg
jmp
sbb
pop
pop
sahf
mov
mov
out
pop
pushl
jb
mov
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
negb
pop
stc
loope
mov
sar
andl
aas
icebp
testb
mov
stos
imul
scas
fadds
in
sub
aam
pushl
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
lcall
inc
mov
dec
adc
push
lock
lods
jp
testb
sbb
into
fcomps
lcall
dec
popf
sbb
sbbl
into
andl
aas
loopne
cli
adc
aaa
es
in
add
inc
adc
loope
fisttpll
out
je
hlt
icebp
aas
std
cli
push
push
push
idivl
cmp
sub
jg
mov
incb
inc
mov
jg
je,pn
sub
jg
imul
mov
decl
sbb
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cli
je
scas
cmpsb
orb
mov
mov
pop
push
cmp
js
jmp
xchg
pop
clc
pop
hlt
sub
fistpll
add
lea
jg
gs
std
xorb
std
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
das
rcr
out
sarb
sbbl
jno
or
sarb
popa
loop
jg
pop
les
cli
mov
mov
inc
arpl
fists
lcall
sbb
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
imul
pusha
adc
and
sbb
xchg
jo
and
out
test
jae
push
dec
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
adc
sub
mov
outsl
inc
shrb
ljmp
outsl
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
clc
add
enter
popa
in
pop
or
mov
xlat
lcall
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
jmp
stos
adc
dec
adc
pusha
imul
add
mov
cmp
xchg
mov
pop
es
sub
loop
pop
xchg
ftst
jbe
xchg
and
jg
shr
add
jg
jle
jg
mov
lahf
cld
sub
aas
stc
add
jge
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
jl
mov
cmp
fmull
enter
jecxz
jl
mov
pop
mov
sub
fnstsw
decl
inc
mov
push
sbb
push
inc
mov
mov
pop
jg
add
jg
idivb
cmp
sub
adc
mov
mov
hlt
push
mov
push
jbe
push
sbb
stos
icebp
pop
incb
aas
js
dec
jno
adc
push
inc
jecxz
sbb
sarl
cmp
sar
adc
lahf
stos
jge
pop
xor
imul
dec
lock
std
push
in
aas
mov
fsubrl
add
lock
and
mov
xchg
pushf
mov
repnz
and
bound
mov
xchg
lahf
or
push
rcrl
sti
or
call
pop
pop
inc
jb
fistpl
adc
call
jno
pop
fwait
call
nop
mov
inc
sti
arpl
daa
std
or
sbb
mov
xchg
jg
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
ljmp
cld
lds
fidivrl
jg
stos
pop
repz
jg
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
aas
mov
sbb
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
std
cmpsl
cmp
aas
test
bound
pop
outsl
xchg
inc
test
in
jge
decl
lock
lcall
fsubs
shl
dec
cs
mov
aad
loop
lahf
mov
or
out
lcall
push
add
icebp
push
cld
mov
adc
stos
pop
jg
pop
shrb
call
call
sarb
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
ds
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
pushl
mov
aam
dec
int
sbb
inc
pop
xor
rorb
mov
test
xchg
cmpsl
push
sbb
mov
pop
inc
cmpsl
dec
sbb
inc
mov
into
test
xchg
movsb
insb
or
and
xchg
adc
jp
clc
insb
test
jle
in
aas
repz
outsl
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
out
jne
or
cmc
mov
push
mov
fsubrp
dec
sub
lcall
fcmovb
inc
adc
inc
loopne
test
out
rolb
pop
adc
jne
pop
cld
or
dec
ss
in
dec
inc
lods
movsb
incl
pslld
pushf
imul
pop
add
cmp
imul
mov
or
pop
in
cmp
jmp
mov
lcall
popf
jmp
hlt
dec
mov
incl
sti
sbb
xlat
inc
aas
mov
jg
mov
sub
das
sar
mov
sbb
cld
daa
jp
std
adc
cltd
push
mov
mov
ret
nop
cmp
das
incb
lock
and
pop
pop
div
cld
idivl
shlb
inc
and
loope
jae
jmp
shrl
je
jge
jg
ljmp
jg
stc
add
out
icebp
mov
loope
inc
mov
fisttps
sti
mov
fistps
es
or
das
jge
lock
out
cmp
call
xor
sbbb
decb
adc
mov
and
xor
adc
call
popf
sbb
sbb
iret
or
mov
cmp
int
add
push
pop
aaa
sbb
fisttps
or
mov
mov
aas
enter
icebp
ret
ror
sbb
aaa
adc
adc
shrb
add
aas
pop
clc
loope
loope
mov
lahf
jp
push
adc
pop
dec
add
xlat
jmp
stos
push
fldenv
iret
fdivrl
xchg
sub
jg
jne
push
cmp
repz
and
gs
test
jg
pop
out
jg
jno
ret
xor
or
jg
pop
inc
sbb
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
lcall
mov
jne
in
sbb
xchg
imul
jmp
outsl
push
add
push
jmp
std
mov
daa
jmp
faddl
bound
or
mov
jmp
mov
add
pop
stc
lds
lcall
dec
out
fstpt
mov
enter
adc
pop
add
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
and
xchg
xchg
mov
fildll
fsubrl
dec
add
orb
mov
sti
pop
inc
dec
push
in
sub
cmp
jg
adc
pop
iret
and
add
jns
dec
lret
scas
xchg
cmc
decl
xor
jae
inc
insl
lret
aaa
mov
jl
fbld
xor
add
dec
test
sub
inc
aaa
or
pop
fdivrp
pushl
inc
imul
adc
cmp
out
jno
mov
in
adc
adc
je
faddp
insl
push
pop
cltd
dec
iret
jge
das
cmc
or
jcxz
ret
test
mov
sbb
jle
ds
in
and
mov
cld
adc
pop
aam
xor
jle
adc
sub
sti
inc
mov
push
jo
pushl
cli
jle
cmp
add
sub
decl
cmpsl
jp
xor
cmp
push
sysexit
mov
ss
push
aas
pop
mov
lcall
lock
fisubs
mov
inc
add
fwait
push
ret
xor
dec
xchg
xorl
jg
cs
cmp
icebp
rorb
mov
lcall
scas
inc
addr16
ja
cmpsl
xchg
sbb
xchg
sti
adc
adc
dec
mov
pop
xchg
xchg
jo
sub
in
jmp
lcall
mov
sbb
push
shll
xor
loope
loopne
dec
into
decl
popa
imulb
add
scas
hlt
pop
cmp
adc
shl
fldl
or
fs
mov
add
popa
out
push
loopne
mov
inc
iret
test
js
scas
jp
les
lods
dec
push
cmp
jle
pop
inc
sub
xchg
rolb
negb
shr
mov
and
mov
sti
mov
sar
xchg
lret
push
sti
rclb
pushl
mov
or
mov
dec
iret
les
pop
jge
call
out
jl
mov
jmp
int3
mov
xchg
lods
pop
test
sub
repz
xchg
push
inc
xor
call
js
icebp
add
inc
lret
dec
fwait
bnd
scas
repz
fstpt
dec
test
and
push
std
sub
ds
xchg
js
cmpsb
jle
jmp
lds
xor
xor
mov
sub
or
add
cmp
add
adc
lock
lcall
in
mov
out
xor
andb
je
push
ljmp
jns
add
adc
fwait
hlt
mov
mov
sbb
cmp
aas
shl
call
in
mov
imul
psllq
sbb
jg
mov
in
loop
push
out
pushl
xchg
adcl
xor
jle
lret
scas
jbe
jge
fcom
mov
aad
inc
xor
pushl
dec
ds
jno
push
xchg
mov
inc
stc
cltd
out
xor
xchg
cmp
rolb
mov
decl
xchg
shrl
mov
shlb
mov
jnp
in
or
fld
push
jns
les
xor
push
roll
pop
xor
lret
jp
js
icebp
sub
loopne
lds
gs
push
mov
popa
adc
incl
loopne
push
test
xchg
ja
int
stos
add
push
mov
adc
add
cmp
es
fisubs
and
push
mov
addr16
mov
outsb
mov
xlat
add
xor
fs
repnz
ljmp
and
call
inc
xchg
fadds
sbbb
cmpsb
test
in
mov
in
xchg
inc
adc
jg
sbb
sub
mov
cmp
or
iret
inc
jecxz
adc
jl
in
in
sbb
flds
push
scas
mov
inc
push
movsb
pop
in
cli
inc
bound
sbb
decl
loope
jns
adc
xchg
shrw
pusha
or
dec
out
or
cmp
scas
testb
jb
push
xchg
dec
shrb
rol
movsl
mov
xchg
pushl
aam
fstpt
lods
cs
imul
dec
out
inc
int
fstps
xor
mov
mov
jg
xor
xor
rcrb
in
popa
iret
test
and
push
mov
loope
jb
xor
xchg
mov
hlt
in
insb
xchg
enter
inc
sub
jg
lds
sub
sti
fsqrt
cmp
mov
fwait
mov
add
xorl
bnd
bound
xchg
mov
jle
inc
in
sbb
pushl
nop
movsl
insb
out
push
cmc
mov
sarb
ret
insl
mov
inc
movsl
inc
enter
cmc
push
or
mov
scas
lods
das
inc
jge
dec
pop
add
adc
lcall
push
add
or
push
fcomp
pop
sbb
cmc
lcall
inc
orl
xchg
push
pop
add
ror
mov
out
lret
lcall
fsubrl
int
aad
scas
jecxz
inc
outsl
in
fwait
dec
les
and
jae
inc
das
adc
rol
xchg
je
push
addl
dec
adcl
fwait
xor
adc
call
xchg
push
lods
stos
loop
xchg
jb
data16
out
jmp
mov
loop
pop
cmc
jmp
xor
jp
sub
movsb
jo
daa
lock
fldl
ja
lret
or
inc
push
push
mov
push
push
add
movsl
outsl
dec
test
sbb
popf
cs
mov
mov
arpl
int
jbe
push
inc
std
pop
jnp
fisttps
mov
or
in
xor
xchg
sar
aam
stos
jle
xchg
out
xor
int
mov
outsl
xchg
mov
inc
or
inc
push
ljmp
in
cmp
out
mov
test
insl
sub
in
fdivrl
repz
sub
sbb
xor
pushf
je
pushf
mov
mov
sti
fcomip
ljmp
lret
sti
sbb
cld
fwait
movsb
cmp
mov
outsl
jns
add
jp
iret
mov
xor
add
xchg
das
std
adcb
dec
xlat
xor
mov
mov
cmc
jb
dec
loopne
pushf
pop
adc
push
fmulp
cmpb
jg
or
flds
push
test
arpl
dec
jnp
sbb
fimuls
popa
pop
push
insb
dec
fs
test
aam
mov
adc
pop
or
fwait
push
loopne
mov
push
clc
aad
test
adc
lock
cli
lcall
dec
jle
gs
push
cmp
jns
mov
ret
mov
inc
ror
adc
dec
rorb
jle
daa
fsubr
sbb
out
mov
jge
push
enter
push
xorb
adc
dec
insl
scas
test
push
jae
add
sub
pop
fistps
cmpl
aas
test
icebp
fdivs
push
hlt
and
test
pop
pop
lds
inc
push
adcb
aaa
cld
out
xor
sbb
mov
es
bound
xor
incl
pushl
fwait
outsl
mov
shll
mov
negl
mov
jmp
jecxz
inc
and
jmp
fmul
stos
pushf
fnstenv
fsubs
fadds
mov
incl
dec
in
pop
outsl
clc
and
test
imul
xor
inc
idiv
rcrb
dec
mov
popa
test
out
mov
dec
push
sbb
sbb
subb
mov
mov
mov
jecxz
decl
jp
sarl
dec
outsl
scas
rcll
jo,pn
aaa
sub
in
ja
hlt
mov
jmp
fwait
mov
push
stos
jno
fcoms
lock
xor
decl
dec
dec
roll
loop
lret
adc
or
je
addl
scas
push
dec
imul
roll
aad
out
js
inc
sub
sbb
mov
sbb
mov
enter
loopne
in
test
repnz
xchg
cmp
ds
cld
insb
xor
inc
data16
mov
adc
push
mov
pop
jmp
aaa
mov
pushl
inc
push
fwait
and
bound
insl
add
aas
pop
add
leave
inc
or
sahf
jle
mov
aad
into
aaa
lahf
rclb
xchg
data16
sbb
xchg
add
adc
ljmp
dec
call
sub
fistpll
ds
jns
add
cli
int3
jmp
push
jne
lods
loopne
fbstp
add
pop
mov
aam
inc
faddl
ja
fwait
mov
push
daa
ret
lods
cmp
pushl
xchg
stc
or
cld
int3
mov
lret
pop
aaa
mov
cmp
shll
clc
pop
or
je
mov
mov
faddp
cmp
jmp
or
inc
mov
mov
mov
out
push
xchg
mov
cltd
push
nop
mov
call
popa
ss
jo
dec
lea
mov
dec
push
fs
incl
subl
aam
fs
pushf
aaa
mov
push
stos
xchg
daa
and
call
pop
fistl
cmp
scas
shrb
jecxz
pop
mov
cmpsb
push
dec
daa
push
lcall
addr16
cli
inc
leave
in
stos
pop
cmpsb
loope
lds
cltd
test
dec
pusha
in
cmc
lcall
sti
in
push
and
jb
mov
pop
out
xor
sub
jmp
add
sub
lcall
or
rcll
sbb
add
sbb
rcll
mov
cli
decl
mov
cmp
aad
gs
xor
mov
clc
call
es
xor
out
inc
push
mov
jbe
xor
lods
push
stc
lcall
cld
add
cmp
jle
and
mov
pusha
popa
ljmp
push
cwtl
les
jmp
ficomps
cmp
mov
incb
popa
xchg
loop
decl
cmpsl
nop
or
and
loope
xchg
mov
cwtl
mov
leave
jae
aaa
add
hlt
pop
push
nop
lcall
push
cmpsb
cmp
loopne
fsubp
adc
cmpsb
sbb
js
push
push
xor
movsb
scas
mov
sbb
out
sbb
add
pop
jmp
mov
pusha
and
jmp
add
aas
adc
fnstenv
cltd
adc
js
ja
dec
adc
sbb
add
pop
pop
lods
pop
nop
sbb
fdivr
jmp
mov
sbb
insb
aad
mov
ret
mov
cli
imul
sub
incl
pop
shl
loop
or
sarl
jle
xor
pop
ret
adc
pushl
adc
fldenv
and
or
push
xlat
pop
cmc
cmpsb
xor
fisubrl
je
and
pushl
or
push
loop
andb
inc
mov
xor
or
jmp
aad
ja
jle
ljmp
or
lcall
mov
insb
xrelease
push
pop
mov
xor
lret
rcrb
les
jge
push
inc
inc
inc
add
mov
iret
and
push
je
test
jbe
sbb
jl
mov
jmp
inc
int
int3
out
pusha
jnp
add
push
jl
pop
popf
lcall
inc
mov
loopne
nop
mov
xchg
pop
nop
testb
dec
push
mov
stc
arpl
mov
jne
call
call
cwtl
and
iret
pop
dec
cmp
lods
jle
mov
nop
movsl
jle
das
mov
xchg
les
inc
push
mov
lods
nop
and
inc
shl
aaa
std
jmp
inc
push
out
lcall
cmpl
xor
in
scas
jnp
cld
pop
cs
fcmovu
inc
xchg
mov
sbb
mov
sbb
sub
in
push
sbb
outsl
add
mov
push
in
cmpsb
or
ljmp
or
movsl
xor
mov
enter
gs
add
pop
loopne
fdivrs
add
pop
pushf
cld
pop
lea
add
cli
xor
jmp
movl
pop
lret
test
shlb
ret
inc
bound
test
push
ljmp
das
jno
das
dec
loop
mov
adc
movq
repnz
mov
push
xchg
mov
int
pop
mov
cld
ficoml
mov
mov
aaa
pop
inc
in
ljmp
mov
cwtl
incb
inc
push
push
jp
inc
push
adc
push
clts
gs
loope
iret
movsl
lret
test
and
mov
daa
add
movsb
loopne
fucomip
pop
and
lcall
popw
mov
dec
add
inc
or
mov
pushf
outsl
mov
jecxz
fbstp
pop
sbb
pop
std
or
in
pop
and
cs
mov
jnp
inc
adc
cmp
push
lods
xchg
cmp
call
fxch
mov
aaa
aaa
pop
push
mov
lods
push
jmp
mov
jmp
xchg
mov
pushf
clc
jg
pop
mov
sbb
aam
dec
or
loopne
popa
sbb
out
mov
ja
out
incb
xchg
stc
adc
adc
jns
or
ss
lcall
mov
xlat
lods
jne
outsb
rcrl
mov
das
rcrb
mov
adcl
or
rcrl
out
out
mov
jno
imul
lds
jg
or
or
mov
push
push
movsl
lcall
push
pop
iret
bound
lret
jmp
fdivl
and
test
or
mov
ljmp
xchg
clc
rclb
jl
popf
adc
insl
adc
fwait
testb
mov
incl
js
mov
lea
mov
xor
sbbl
decl
adc
push
or
cmp
aaa
addr16
sti
jge
pop
pop
xlat
cmpsb
pushl
fisttps
insl
inc
pop
push
loop
jns
fnsave
out
jbe
xchg
or
ljmp
stc
lods
les
xchg
fidivrs
repnz
xor
ds
out
out
int3
inc
adc
pop
decl
add
or
fs
jle
movsl
cmc
mov
addr16
add
add
cmp
ljmp
and
xor
cmp
sbb
aam
call
adcl
insb
fistpl
call
adc
arpl
push
xor
mov
mov
leave
lahf
mov
ds
lcall
and
rcl
adc
xor
nop
popa
mov
mov
push
loop
sub
cs
pop
icebp
in
and
ret
sbb
sbb
pop
clc
cmp
ljmp
out
pop
or
xchg
in
lods
fs
int
dec
ljmp
cli
jbe
add
aam
xchg
aad
inc
sar
pusha
int
imul
push
mov
clc
jmp
mov
stc
adc
xor
cmpb
decl
imul
sbb
sub
pop
lret
out
dec
in
jae
adc
xchg
mov
bnd
testb
data16
stos
out
leave
pop
jne
call
add
mov
cmpsl
jno
mov
fisttps
inc
pop
sbb
push
testl
sbb
rcll
jmp
aas
lcall
or
aas
jo
jg
pushl
int
jnp
mov
lret
out
inc
lock
js
sahf
fdivl
ljmp
ja
and
insb
or
push
xchg
stos
sbb
dec
cs
cli
aaa
outsb
xchg
outsb
cwtl
incl
add
repz
xlat
mov
dec
test
adc
insb
test
ja
add
sbb
lcall
pop
fdivl
icebp
push
inc
movsl
cmp
and
dec
cmpsl
mov
mull
cltd
adc
pop
ljmp
aas
adc
inc
dec
out
sub
push
adc
cmpsb
mov
sbb
jne
mov
adc
jmp
xor
ljmp
mov
sti
fldcw
pop
sahf
cld
and
decl
in
stos
dec
or
mov
mov
cmp
rorl
and
jg
icebp
insb
add
pushf
xchg
push
xchg
cs
mov
subb
inc
mov
add
pop
cmc
add
push
xor
out
in
or
hlt
hlt
out
xchg
es
shlb
fsub
scas
sti
stos
mov
and
cli
fisubrs
mov
dec
adc
pop
xchg
fmul
sbb
lea
and
mov
rorw
dec
mov
adc
dec
nop
add
fcomip
pushl
scas
ljmp
add
dec
mov
add
dec
or
mov
mov
cmpsl
lcall
loopne
hlt
lock
and
push
movsb
dec
adc
lds
xorb
jno
jp
jnp
sbb
verw
xor
mov
mov
imul
nop
decl
cmp
test
dec
jb
sub
push
mov
insl
xchg
clc
inc
mov
es
cmp
push
or
ja
xchg
push
fsubs
xor
test
xchg
pop
cwtl
push
fwait
jmp
mov
data16
mov
cmp
enter
call
dec
cmp
lahf
sbb
sti
aad
mov
dec
mov
into
inc
add
add
popa
mov
rcll
lods
jmp
ljmp
push
dec
imul
cs
popf
pop
ss
leave
aad
stos
push
lcall
dec
cmpsl
mov
sub
jge
lcall
add
dec
psubsb
jb
int
jne
cwtl
in
lock
or
xchg
mov
ljmp
push
mov
dec
sub
mov
mov
stc
or
cmp
aaa
out
incl
test
lods
mov
notb
pop
cmp
mov
lcall
pop
and
adc
adc
aaa
mov
mov
mov
movsb
fcomip
call
loopne
mov
pop
inc
scas
cld
mov
ret
loopne
push
daa
add
and
cmp
or
fmuls
jecxz
mov
push
and
adc
cli
out
inc
mov
nop
push
cs
fadds
push
filds
sti
lahf
sarl
int3
mov
jbe
sub
mov
in
int3
pop
and
mov
mov
test
xchg
push
cmpsl
mov
js
scas
sub
sahf
jg
cmpsl
cli
into
dec
out
pop
mov
mov
cltd
dec
pop
mov
adc
mov
imul
sarl
int3
sar
jle
add
popa
test
outsb
or
pop
sti
push
add
cld
jge
int
inc
cmp
add
xor
jp
data16
lcall
inc
cmp
aad
add
mov
inc
testl
adc
push
jmp
fisubrs
add
divb
in
adc
call
icebp
test
sbb
mov
xlat
outsl
cli
incl
lret
ficoml
and
pusha
cltd
xor
cmc
and
pop
loop
jg
sbb
xor
add
pushf
mov
lahf
pop
scas
fisttpll
inc
sbb
mov
fsubrs
or
test
push
in
lods
pop
inc
test
popa
jg
mov
lcall
ds
sarl
fcomi
addr16
lds
sarb
and
push
mov
xchg
push
mov
loope
sub
dec
and
imul
cwtl
jb
ljmp
sar
dec
in
in
sbb
or
lcall
pushl
and
fcomps
outsb
lods
xchg
cmc
xor
dec
std
fcmovnu
push
fstpt
adc
lret
lret
inc
dec
sbb
pop
jg
int3
mov
xlat
cltd
jo
sub
xlat
loopne
cmp
dec
mov
inc
dec
xchg
inc
dec
jle
scas
sub
jg
loop
pushl
hlt
xchg
or
and
stos
pushl
leave
ret
add
mov
and
mov
stc
mov
jge
cmp
jmp
test
cmc
ret
dec
dec
pop
movl
repz
add
scas
in
mov
cld
mov
jmp
imul
notb
rolb
mov
xlat
adc
bound
daa
jmp
cltd
sahf
nop
mov
fildll
repz
inc
jb
and
jb
cwtl
les
jmp
cmp
pushl
std
or
ss
movsb
bound
cmpsb
pop
out
movsl
mov
pusha
xor
fisttps
push
or
xchg
inc
bound
in
inc
cmpsl
push
add
pushf
stc
cmp
outsl
fsubl
and
int
dec
lahf
fsubrl
dec
add
in
leave
push
das
fisubs
call
in
cltd
xchg
pop
into
gs
mov
fsubp
je
add
sub
lcall
add
ljmp
fiadds
iret
fwait
push
idivb
jg
fyl2x
aaa
adc
jae
and
cltd
aam
pop
test
cmpsb
mov
das
shrb
dec
jnp
fstpl
mov
jns
cmp
cmpsl
pop
cmc
cli
jnp
test
lret
lods
scas
decl
add
fwait
mov
sbb
js
inc
stc
mov
cmpsb
dec
cmpsb
fwait
es
js
or
jmp
fcompl
xorl
enter
add
or
pop
xor
jae
push
ljmp
shrb
ljmp
ficompl
bnd
incl
xlat
pop
mov
call
dec
mov
ljmp
pop
jle
xor
mov
adc
lcall
fnstsw
gs
incl
imul
sbb
loop
xchg
int3
add
enter
fisttpl
mov
cmp
cmp
dec
adc
insl
loope
mov
fdivr
jmp
pop
sub
mov
or
xchg
sub
mov
ja
or
ja
decl
sarl
push
jb
gs
xlat
bound
popa
mov
out
fdivr
icebp
and
das
and
scas
outsl
sub
jno
cmp
addb
ret
xchg
fcompl
in
test
lods
subb
lret
rcrl
push
push
or
aam
pushl
dec
ret
lret
pop
out
lea
es
cld
movsb
sub
mov
iret
arpl
dec
mov
dec
push
inc
popf
dec
push
loopne
loop
mov
cmp
loope
jbe
inc
and
mov
jmp
pushl
fcompl
dec
pop
scas
clc
mov
cld
and
xbegin
hlt
iret
sbb
call
cmpb
inc
push
mov
outsl
pusha
loop
imul
push
add
int
lcall
dec
add
lcall
std
push
inc
cmpb
fadd
xchg
decl
push
sbb
sub
mov
pushf
or
push
dec
push
xor
and
bound
dec
sub
mov
movsl
ljmp
inc
pop
loope
xchg
jb
xchg
popa
cmp
xchg
sbb
jae
stos
out
test
pop
xchg
incl
cmp
loopne
mov
pop
push
pop
inc
sub
xchg
jo
and
fldenv
or
sub
or
decl
aas
adc
adcb
pop
mov
xchg
push
jmp
test
fs
cmp
dec
iret
sub
cmp
mov
fisubrs
dec
out
push
into
ds
dec
jae
push
jae
cltd
or
out
lahf
push
pop
jbe
loopne
enter
and
ret
mov
pushl
jmp
shlb
rclb
je
sbb
xchg
stos
jns
shrb
xor
add
movsl
sbb
in
addr16
in
add
push
fists
xchg
and
insb
pop
rclb
rcrb
mov
jnp
or
jmp
and
pushf
add
jg
scas
inc
adc
push
sbb
xor
aam
push
mov
out
aaa
add
ficoml
movsb
insl
rcl
scas
ljmp
cmpsb
idiv
cld
mov
jg
sti
aas
cmp
jo
jle
les
mov
cmp
test
mov
imul
pop
inc
or
data16
mov
int
cmc
mov
movsl
mov
xchg
mov
jecxz
mov
cmp
jmp
int
lods
mov
mov
dec
or
shll
cmp
mov
cmp
xor
in
out
push
pop
push
ljmp
ljmp
das
mov
icebp
lods
or
decl
or
pop
lret
imul
fisubrl
jp
jae
xlat
add
or
ljmp
cmp
fwait
inc
ja
cmp
fdivs
add
pop
mov
lcall
pop
jno
cmp
enter
jecxz,pt
ss
frstor
xchg
jl
xor
mov
sub
mov
call
jae
push
add
aam
inc
sub
mov
mov
aam
lds
push
or
icebp
decl
mov
push
out
xlat
cmc
add
int
pushl
and
dec
int3
mov
fcoml
xor
hlt
aam
mov
xchg
inc
push
mov
sbb
js
jo
push
cmp
adc
sub
inc
js
cli
aam
pushl
arpl
movsb
xchg
jbe
xor
push
and
adc
dec
xchg
jns
sahf
cmp
incl
ss
cmp
cmp
mov
repnz
popa
or
push
adc
ss
ljmp
pushl
pusha
lods
pop
cmpsl
inc
cmp
lret
push
in
cs
decl
xor
int
adc
cmp
or
incl
mov
xor
mov
jns
jnp
jg
pop
negb
and
das
clc
jg
jns
pop
mov
das
divb
jnp
mov
jo
jb
pop
jg
orb
pop
fst
xor
pop
and
xor
dec
adc
jb
jmp
inc
fsubl
or
fmul
pop
cmpsb
stos
lahf
icebp
cmp
xchg
fwait
add
imul
pop
jg
test
push
add
xor
popf
or
jmp
xor
pop
mov
or
aaa
cld
decb
mov
xchg
imul
mov
fstps
ror
sar
ror
adc
ljmp
mov
mov
jmp
mov
pop
push
arpl
inc
jecxz
incl
sub
xchg
push
cmp
xchg
fimuls
push
lods
fnstenv
lea
ja
das
das
adc
jnp
aam
cmp
fisubl
pop
cmp
dec
sbb
or
lcall
push
mov
daa
jnp
adc
lret
test
mov
push
fidivl
xor
jp
push
out
ljmp
push
sub
mov
xchg
ss
pop
mov
fcmovnbe
inc
jg
adc
pop
call
mov
popf
dec
sarl
mov
mov
mov
nop
jmp
sbb
adc
incl
cli
out
push
fcoms
mov
xor
pop
into
cmp
lcall
mov
mov
add
cmp
pop
popf
repz
call
pop
insb
jp
incl
pop
jp
pop
adc
pop
lds
push
outsb
mov
movsb
push
push
fsubrl
inc
add
ljmp
fwait
cmpsb
xor
and
orb
inc
aad
and
xor
jmp
push
adc
loop
push
adc
sbb
push
iret
cmp
jb
lret
push
cmp
inc
mov
push
jno
rolb
mov
inc
push
jl
cld
pushf
cs
inc
and
addr16
mov
test
push
leave
bound
push
arpl
dec
mulb
test
xor
pushf
mov
xchg
incl
push
dec
and
pop
inc
mov
xchg
pop
mov
stos
mov
call
stos
frstor
mov
jl
sub
int
adc
sbb
push
push
call
inc
andb
pop
mov
mov
pop
xchg
pop
in
subb
cld
pop
adc
les
addr16
xor
xor
push
divb
and
pop
lds
xchg
decl
shll
sbb
sbb
cld
push
out
adc
adc
mov
fcmovne
cmp
rcl
sub
push
cmp
repnz
jg
lcall
mov
pmuludq
jns
pop
fisubl
push
and
mov
dec
and
jle
pop
imul
jle
sub
icebp
lcall
cmpsw
das
xchg
ficompl
or
rclb
push
fdivl
jmp
enter
je
xor
outsl
jmp
add
xor
out
mov
decl
xchg
inc
in
test
leave
push
decl
or
xchg
add
ret
inc
adc
dec
insb
jmp
nop
cmp
dec
xor
aad
mov
or
lods
popf
dec
daa
inc
call
aam
scas
or
lcall
lret
jno
insl
xlat
adc
orl
pop
pop
fdivr
call
loop
sub
mov
fwait
mov
pop
adc
jmp
mov
rorl
mov
inc
mov
inc
mov
sbb
mov
xor
pop
aad
pop
movsb
cli
xchg
jecxz
push
mov
shrl
lcall
xor
call
add
sti
out
out
iret
mov
rorl
mov
repz
lcall
outsb
add
dec
mov
ja
das
jns
cmpsl
mov
fs
inc
cmp
mov
mov
nop
pop
add
adc
push
fwait
out
xchg
imul
mov
ljmp
cmp
add
sbb
sbb
add
mov
mov
mov
in
lock
call
mov
mov
add
mov
jmp
xor
adc
push
or
filds
mov
decl
lahf
mov
dec
fistpll
fsubrp
cmp
lret
jmp
fldcw
lcall
test
movsb
pop
jns
push
outsb
out
xchg
out
cmp
mov
aam
pop
sub
pushl
sub
push
push
mov
sbb
pop
pop
outsl
test
rorl
mov
jmp
xchg
outsl
sub
or
mov
cmpsb
out
out
lahf
mov
add
jmp
adc
into
pop
mov
fldcw
and
std
xor
push
aad
sbb
ljmp
pushl
jne
add
es
add
test
jae
adc
or
sbb
into
mov
cmp
or
js
jg
outsb
mov
or
idiv
push
cmp
test
adc
dec
and
call
jne
in
inc
leave
jb
jg
cli
or
cmc
push
clc
imul
les
sbb
jle
shll
andb
mov
icebp
dec
jecxz
out
popa
mov
lcall
dec
jno
rclb
test
out
popa
mov
pop
sbb
stos
cmp
jnp
fcomip
je
mov
or
rcl
fsubrp
mov
mov
pop
jp
adcb
out
cli
subl
push
sub
into
outsl
jp
test
pusha
sub
inc
ret
lcall
add
mov
lock
pop
mov
movsl
mov
mov
dec
sub
xchg
sbb
out
add
mov
mov
stos
pop
mov
les
bound
movsl
int3
les
push
ds
mov
mov
cltd
pushw
divb
mov
andl
mov
dec
ljmp
arpl
jno
jo
adc
mov
das
jl
in
dec
icebp
pop
cli
lret
jg
sbb
sub
jb
jecxz
pop
push
out
dec
or
mov
jmp
pop
pop
fmull
jg
out
sahf
ds
repnz
xchg
imul
int
in
push
pop
mov
fwait
ljmp
cld
in
xchg
aam
xchg
int3
xor
out
pop
not
loope
lcall
int3
bndstx
movsb
sub
inc
cmc
push
xchg
pop
imul
mov
lcall
jns
mov
mov
jmp
jbe
out
or
push
outsb
sub
loope
sub
jecxz
idivl
sub
adc
call
xchg
sub
xor
dec
push
mov
pushf
mov
pop
sarl
mov
ljmp
fiaddl
stos
bound
lret
sbb
fdivrl
mov
mov
push
sbb
lods
sahf
push
hlt
pop
lea
mov
mov
notl
jg
sub
mov
mov
add
mov
and
inc
das
cmp
repnz
movsl
inc
sti
popa
xlat
cli
add
popf
popf
hlt
push
cmp
test
sbb
rol
jbe,pn
pop
jl
scas
adc
test
outsl
into
adc
xchg
jns
out
and
push
xchg
add
andb
rcrl
stos
inc
xchg
pop
cld
lcall
mov
adc
test
sbb
jmp
mov
inc
fcmovbe
and
in
xchg
mov
cmpl
jecxz
cs
mov
sbb
or
pop
rolb
outsb
add
jl
mov
pusha
sbb
in
sub
inc
mov
ljmp
mov
pop
mov
push
cmc
fists
in
push
faddl
mov
and
xchg
mov
jg
inc
pop
hlt
in
push
inc
std
aaa
adc
jmp
mov
scas
rclb
inc
lahf
xchg
sub
push
sbb
lret
jbe
dec
and
call
jle
inc
fdivl
aad
shll
add
aas
xchg
push
fdivr
les
decl
loop
fiaddl
xchg
stos
push
add
sbb
es
mov
mov
xchg
dec
call
mov
js
mov
push
out
and
jmp
aas
shrb
andl
lcall
popl
loopne
test
xchg
fdivrl
jno
dec
xchg
insb
dec
mov
call
xchg
aam
gs
sub
xor
xchg
fwait
mov
mov
inc
ret
mov
xor
scas
cli
mov
push
scas
outsb
pop
fdivrl
dec
pop
sub
jle
adc
mov
incl
lahf
or
loop
fcmovnb
sbb
adc
xchg
mov
dec
jmp
jne
repz
test
mov
mov
jmp
imul
mov
in
scas
and
xchg
outsb
cmp
push
jmp
and
outsl
pop
inc
push
dec
mov
sbb
dec
ljmp
sbbb
imul
aaa
jge
jmp
mov
stos
fwait
in
ds
cmp
dec
lcall
sub
mov
or
loop
mov
sbb
cmp
cmp
or
sbb
pop
adc
and
cli
pop
icebp
cmpl
jmp
call
sbb
xchg
mov
push
mov
inc
in
pop
in
mov
subl
clc
adc
push
xor
push
lcall
add
leave
or
dec
aam
jnp
std
push
cmpsb
test
and
mov
inc
push
arpl
scas
stos
ds
call
push
xor
cmp
mov
pop
fistpl
mov
js
sub
dec
scas
sbb
push
xor
test
or
mov
cmpsl
rorb
sbb
clc
lods
lea
lods
in
jge
and
out
les
in
push
inc
icebp
dec
push
and
ret
leave
ret
xor
dec
cmpsl
ljmp
incl
subl
mov
and
fldl2e
dec
cmpsl
inc
aaa
pop
inc
enter
add
insb
hlt
nop
mov
cs
jmp
aaa
std
mov
pop
xchg
cwtl
cs
pusha
or
cmpsl
icebp
pop
iret
pop
mov
roll
in
push
scas
pushl
out
iret
jge
pop
jo
and
and
inc
mov
xor
jo
adc
add
rolb
jnp
pop
or
lock
add
scas
and
jmp
dec
roll
dec
addr16
icebp
jns
iret
inc
inc
aam
decl
out
mov
mov
iret
push
xor
or
scas
loope
dec
xchg
sbb
inc
mov
sbb
or
aad
xor
pop
call
dec
xor
fldt
pusha
popa
ds
push
xchg
pop
xchg
fucomp
adc
rcrl
push
and
shll
enter
rcll
insl
pop
in
adc
mov
call
ljmp
test
je
mov
adc
mov
ljmp
fimuls
out
mov
daa
and
in
mov
je
mov
jns
sbb
jmp
stos
bnd
xchg
sub
hlt
mov
add
inc
addl
adc
or
cmp
incl
daa
enter
jne
sub
pop
hlt
pop
mov
int3
les
ss
call
xchg
mov
call
ret
jmp
das
movb
add
mov
push
push
arpl
ljmp
cmp
sub
movsl
lcall
push
aam
add
jne
mov
push
or
shll
dec
pop
dec
pushf
xor
sbb
jmp
jecxz
xor
adc
adc
pop
jge
sbb
dec
mov
leave
push
push
test
mov
enter
call
and
sbb
sub
scas
ljmp
imul
inc
xchg
mov
jnp
dec
insb
jecxz
incl
add
xchg
fldt
inc
pop
xchg
nop
shll
ss
jle
jno
add
cmp
cmp
faddl
inc
addr16
mov
imul
call
cltd
push
pop
and
cmp
stos
rolb
pop
cmp
orb
lods
out
push
outsl
in
data16
push
mov
push
mov
mov
pushl
gs
ds
push
dec
push
cwtl
xchg
mov
fmul
pop
repnz
faddl
pushl
mov
fiaddl
cmpsl
fsubrp
aaa
out
test
imul
mov
outsl
clc
jmp
loopne
fwait
enter
xor
inc
mov
push
pop
inc
jge
mov
shll
add
cmp
or
mov
cmp
ds
call
decb
lahf
imul
dec
xor
push
inc
stos
cmpsb
inc
lea
out
divl
shll
push
pop
out
xchg
jmp
push
xchg
sarl
ds
jmp
arpl
adc
fistl
mov
inc
xchg
xchg
into
in
loope
rcll
clc
test
aas
mov
out
cli
fwait
push
adc
rcr
lods
push
jg
popa
pop
adc
mov
push
lock
adc
iret
mov
push
dec
cmp
lds
subb
add
mov
pop
dec
cmp
pushf
ss
sahf
sub
cmpb
dec
call
fisubl
lock
popl
iret
faddp
outsb
jbe
repnz
cli
out
daa
hlt
xor
jmp
rcll
jb
and
mov
std
push
cmp
jae
mov
inc
lcall
inc
dec
int3
shlb
cltd
ror
popf
mov
pop
nop
pop
or
stos
inc
std
hlt
mov
sti
frstpm(287
int
out
js
mov
mov
mov
call
aaa
test
mov
lods
mov
arpl
es
adc
xchg
push
pop
mov
mov
cltd
jmp
in
adc
icebp
scas
shr
fcmovu
pusha
push
ljmp
inc
sub
es
out
xchg
stc
cmp
push
and
cld
lahf
cmpsl
inc
movsb
jbe
in
or
or
mov
mov
cli
incl
les
inc
mov
shrl
fnstcw
sbb
pusha
mov
mov
push
jl
aas
arpl
les
nop
out
cmp
jbe
ljmp
nop
jp
fstl
push
in
xor
icebp
into
jno
lcall
push
fs
pop
iret
rolb
cmp
jl
dec
ud0
dec
ds
jp
mov
mov
nop
loope
inc
stos
cwtl
lock
jecxz
jecxz
xor
call
add
test
pop
stc
adc
outsb
sub
jl
jns
pop
jnp
mov
nop
push
sar
std
out
mov
and
sbb
jae
jg
test
das
inc
call
nop
lods
add
lock
scas
outsl
stos
pop
rclb
cli
cs
jmp
inc
and
sub
pmaxub
daa
mov
xchg
imul
xor
xchg
pop
lcall
jmp
or
mov
outsl
pushf
dec
dec
mov
mov
test
adc
decl
decl
xor
adc
fcomps
inc
adc
inc
gs
decl
iret
js
inc
jb
sarb
jmp
fstpt
movsb
lret
aaa
cld
adc
or
ret
idivb
in
jo
lret
and
push
jbe
cmp
call
in
push
test
pop
loopne
xor
add
xor
dec
les
lcall
shlb
mov
rorb
sbb
mov
imul
xchg
stos
shll
stc
or
jo
dec
cmp
sbb
mov
inc
xchg
mov
sbb
jne
push
cs
fisubrl
xchg
cwtl
inc
sahf
and
xchg
dec
sub
nop
xor
cmpsb
sti
ljmp
int
out
mov
icebp
shrl
hlt
fs
ljmp
and
mov
into
and
ljmp
and
mov
pop
add
mov
push
shrl
iret
add
push
jmp
mov
jl
sub
ds
aam
inc
call
push
andb
and
pop
mov
jns
pop
cmpsb
aad
mov
in
scas
sti
xchg
mov
inc
fimull
push
jo
mov
movsb
xchg
push
insb
and
setb
lds
pop
cld
sbb
push
jmp
inc
fcoml
call
adcl
xchg
pop
das
test
cltd
xchg
inc
shlb
rclb
jle
mov
adc
aas
icebp
leave
jno
lret
jno
inc
push
push
mov
mov
mov
inc
ja
clc
xor
mov
arpl
push
push
roll
inc
loopne
or
fiadds
popf
scas
push
in
sar
incl
jecxz
jge
jmp
dec
push
jl
push
mov
push
jo
aad
pushf
scas
pusha
jmp
andl
adc
iret
sub
mov
mov
cld
mov
dec
test
sbb
xor
dec
push
mov
add
jle
enter
dec
xor
clc
fildll
mov
jbe
adc
decl
outsl
scas
xor
ljmp
rclb
xor
dec
push
and
decl
push
xchg
lods
jle
jl
and
mov
pop
and
in
cltd
mov
or
jo
ljmp
mov
mov
jle
dec
daa
cmc
fwait
sbb
sub
movsb
push
push
out
cwtl
xchg
or
sbb
push
incl
sub
leave
call
pop
out
decl
xchg
lret
aad
arpl
mov
shll
testb
or
and
andb
push
in
jmp
int
xor
lods
std
sub
jmp
movsb
lea
and
adc
inc
mov
jl
jge
jne
cmpsl
mov
jns
fistl
cmp
aaa
jmp
sub
cmp
sub
sar
incl
dec
subl
loope
hlt
repnz
and
or
sbbl
outsb
jmp
ljmp
dec
jle
push
sbb
jnp
push
xor
dec
mov
call
inc
mov
jmp
push
push
imul
aaa
in
jns
cmp
or
ljmp
clc
jmp
repz
and
or
mov
pushf
mov
dec
cs
or
push
fprem
jmp
jecxz
push
jno
cmp
mov
jmp
lcall
ljmp
sarl
cltd
mov
iret
arpl
mov
adc
int
je
lret
fmuls
push
mov
repnz
iret
xor
jmp
dec
into
idivb
cwtl
jae
repz
jo
inc
das
jle
cs
lods
iret
and
test
lods
dec
push
lcall
in
ljmp
mov
aaa
fists
jle
scas
incl
xor
xor
cmpsb
mov
fcompl
add
or
mov
jbe
loopne
in
ret
out
push
pusha
inc
sbb
xor
cmpl
mov
into
fdivs
andb
pop
jo
mov
loop
lcall
xlat
lret
xchg
push
insb
jg
les
xchg
xor
push
repnz
clc
cltd
mov
iret
pop
sub
imul
int3
ret
pop
dec
enter
arpl
pop
in
ljmp
outsl
clc
decl
add
lock
popl
imul
push
inc
pushl
sbb
fcoms
aaa
in
ds
js
setno
cli
imul
lds
sub
jg
jl
mov
mov
inc
aaa
mov
dec
add
ret
mov
dec
jno
divb
cmpsb
xchg
cmp
sub
jmp
sbb
ljmp
stos
pusha
hlt
inc
xlat
jg
nop
mov
cwtl
push
mov
pop
cmpsb
nop
lods
xchg
inc
cmp
inc
add
mov
int3
insl
xor
inc
lock
mov
imul
pop
imul
lret
xor
jmp
bound
add
jge
xor
cmc
pop
dec
and
cmp
sub
mov
outsl
in
pushl
or
lods
loop
and
pop
sbb
fidivrl
imul
sbb
lods
les
stos
and
je
xchg
cs
xor
lcall
jmp
mov
mov
mov
mov
fisubs
and
add
xchg
cmpsb
test
adc
ljmp
insl
mov
dec
jg
scas
push
gs
outsb
ljmp
sarl
out
jl
add
lcall
jbe
push
in
inc
add
jae
ljmp
sbb
jbe
mov
popf
mov
xchg
xchg
add
ljmp
cmp
adc
lds
or
xor
push
fstpl
lahf
xchg
repnz
or
jp
pop
movsl
pusha
js
aam
test
std
jae
mov
mov
hlt
add
je
jns
add
popf
lock
cld
push
push
shrl
leave
sti
cwtl
arpl
jmp
cmc
xchg
lods
mov
loopne
pop
and
sub
mov
ret
cmpsb
outsl
jg
pushl
jae
jb
or
push
ret
flds
mov
jno
mov
ja
mov
loopne
test
dec
cld
stos
test
pop
ds
mov
push
int3
or
scas
jp
mov
mov
mov
mov
mov
mov
leave
int3
sub
into
and
cmp
aas
jl
mov
or
js
push
mov
call
loopne
scas
mov
pop
aaa
data16
insl
dec
dec
stc
popf
adc
dec
jns
push
out
in
cli
mov
out
aad
adc
out
sbb
mov
ret
ljmp
push
xchg
mov
xor
mov
xchg
mov
fisubrl
movsl
mov
pop
jnp
mov
cmp
insb
out
int
push
push
sahf
out
xchg
test
mov
mov
push
push
sti
or
pop
int3
pop
cmc
inc
jmp
push
cltd
sahf
pop
xchg
ljmp
int
dec
les
pop
test
jecxz
mov
jmp
insb
sub
and
fdivrp
in
stos
icebp
out
shlb
incl
mov
mov
ret
sub
mov
xchg
dec
andl
je
lea
aas
mov
lcall
mov
jno
les
test
popa
pop
xor
cmpsb
push
scas
gs
ljmp
xlat
daa
add
incb
xor
jge
stos
idiv
pop
push
xchg
scas
cmpsl
dec
lods
inc
sti
sbb
push
pushl
push
lock
mov
in
daa
or
jmp
cmp
xchg
shlb
lock
aaa
call
repz
mov
in
pop
adc
in
loop
adc
ljmp
xlat
andb
jo
std
push
push
push
dec
vpsubw
loopne
arpl
lock
movswl
cmp
xor
lcall
loopne
xor
cwtl
stos
xchg
aam
pop
and
fwait
scas
mov
inc
std
popf
mov
rcr
cmp
jbe
rolb
pop
sarb
dec
xor
inc
rcl
popf
out
mov
clc
ljmp
or
aam
cmp
adc
decl
jmp
cli
int3
mov
stos
cmp
cmp
mov
sbb
jmp
mov
dec
or
or
mov
neg
dec
pop
lcall
jno
mov
in
scas
xlat
cltd
cmp
adc
inc
rdmsr
add
fadds
pop
lock
xchg
push
dec
daa
gs
pop
adc
gs
bound
mov
out
cmpsb
pop
inc
cs
data16
divb
incl
cltd
test
fadds
lahf
cld
mov
or
cmp
mov
cmpsl
cld
xchg
pop
cmpsl
jno
outsb
or
rcrb
sti
popa
cltd
ljmp
leave
push
pop
lret
incl
mov
decl
mov
pusha
jg
ret
cltd
mov
addr16
pop
ds
pushl
dec
mov
inc
stc
sahf
cmc
stos
push
lret
inc
addl
mov
add
call
and
leave
outsb
add
test
dec
pop
daa
stos
pop
fs
add
ljmp
mov
cli
xchg
popa
fcomps
test
subl
call
cmp
fsubrs
fistpll
mov
push
mov
incl
push
mov
xchg
iret
fldcw
adc
jp
xor
mov
or
jg
sbb
jbe
fcmovb
int3
xchg
cmp
add
mov
push
or
arpl
fmuls
scas
pop
ret
dec
pop
cmpsl
or
lock
in
ljmp
pop
mov
jmp
fdivr
flds
push
aad
push
inc
inc
dec
iret
adc
ja
mov
out
adcl
or
negl
xchg
stc
lahf
dec
push
shr
call
shrb
inc
dec
adc
pop
ljmp
aam
xchg
decl
cmp
dec
inc
aas
pushf
cld
shl
inc
aas
mov
fsubs
add
pop
lock
call
leave
adc
push
and
andl
scas
jmp
jmp
int3
adc
stos
inc
or
or
mov
lods
add
in
cmp
jo
call
std
mov
outsl
rcrl
push
pop
pop
gs
and
iret
out
dec
sbb
jmp
inc
add
movsl
stos
mov
fdivl
ljmp
idiv
lcall
outsb
xchg
out
pop
mov
add
push
inc
sbb
cmp
xchg
in
mov
jmp
jne
cmp
sbb
test
sbb
nop
pop
pushl
dec
lahf
adc
lahf
xor
xchg
jl
decl
mov
scas
shl
jle
cltd
adc
into
push
adc
or
jbe
cmp
insl
adc
dec
jbe
jge
xchg
fcoms
lock
cmpsb
xchg
pop
push
inc
enter
cmp
pushl
insl
pop
test
cmp
mov
outsb
push
sbb
aam
inc
xchg
fucomip
pop
call
repz
into
xchg
ja
sbb
shrl
hlt
ficompl
push
js
in
test
decb
pop
js
mov
mov
adc
fisubs
mov
jl
jp
call
dec
into
cmpb
insb
xchg
push
mov
lret
shrb
repnz
ds
jg
mov
shlb
stos
mov
fsts
mov
mov
pusha
addr16
stos
pop
inc
clc
ljmp
ss
stos
shl
mov
ja
rcl
jnp
mov
jae
inc
inc
ljmp
lcall
dec
and
push
push
and
adc
out
mov
incl
jae
jns,pn
xor
sub
lret
jge
add
cmp
lock
lret
xor
incl
mov
call
pop
xchg
into
mov
jo
jp
pop
repz
leave
arpl
jecxz
aam
mov
mov
lds
mov
addb
call
dec
rorl
das
sub
sub
cli
fwait
cmpsl
mov
xor
cltd
dec
decl
out
push
and
dec
inc
xor
jle
outsl
push
dec
ljmp
int3
or
jg
pop
mov
aaa
in
dec
push
into
push
mov
fisubl
mov
notb
decl
adc
pusha
push
add
mov
push
lret
mov
push
pop
push
pop
arpl
mov
das
cmp
mov
incl
jmp
test
cmp
and
and
push
mov
fwait
imul
popf
arpl
mov
jmp
mov
aas
or
mov
fdivs
jg
xchg
cmpsl
aaa
int3
push
cmc
decl
out
negl
fwait
xor
xchg
fs
xchg
push
sub
mov
push
mov
decl
cmp
cs
loop
sub
and
or
test
cltd
call
cld
pushl
in
push
mov
dec
cmpsl
ret
sub
hlt
xor
push
in
sbb
pushl
mov
adc
fnsave
fmul
mov
fcoml
jmp
pushl
mov
aam
push
lret
xchg
cmc
nop
and
aam
adc
test
not
jl
jo
jbe
test
out
scas
sub
fwait
lea
test
xchg
cmc
push
dec
push
cmp
cli
aas
add
sub
push
popf
in
rolb
cmp
incl
rcrb
out
loope
addr16
mov
jae
outsb
sub
jno
sub
out
aam
call
mov
hlt
sub
lret
mov
cmp
dec
pushl
inc
xchg
imul
add
mov
into
pop
in
inc
in
loop
shr
mov
ficompl
and
les
repnz
mov
mov
testb
sbb
cmp
and
and
bound
dec
in
mov
out
cli
enter
orl
add
lret
insb
repz
xchg
mov
ljmp
mov
mov
clc
pop
test
scas
lcall
loopne
dec
add
incl
into
cli
in
stos
test
insl
xchg
pop
push
pop
pop
cmpsb
push
jl
mov
lret
lods
repz
jl
cld
das
cli
lcall
aas
mov
push
and
popa
cmp
push
add
lea
icebp
call
push
or
mov
pusha
mov
sbb
jmp
push
ds
adc
test
jno
in
sub
imul
inc
push
lahf
add
ds
inc
mov
pop
jno
je
das
js
sbb
xor
mov
cs
dec
sub
mov
loope
js
xor
iret
xchg
daa
cmp
cwtl
jne
popa
addr16
call
cmp
repz
lcall
mov
sbb
mov
jnp
incl
mov
test
rcll
adc
test
or
pop
out
std
jg
xor
out
fstpl
mov
cld
xchg
dec
and
jmp
sarb
pop
inc
cmp
cmp
xor
pusha
xor
sbb
dec
jb
lods
lock
cmp
mov
ficompl
cmc
lret
cmp
int
push
popf
enter
ljmp
call
outsl
sti
outsl
int3
js
data16
test
imul
cmp
xor
ss
popa
push
cmp
nop
sbb
pop
cmp
mov
and
xchg
dec
jb
jl
ds
clc
std
dec
mov
xchg
xor
ljmp
sub
mov
mov
pop
jmp
mov
sub
shr
ds
add
out
pushl
cld
and
mov
bound
cs
mov
jmp
push
iret
fwait
cmp
ljmp
and
cs
mov
out
cmp
mov
sahf
ret
or
push
cwtl
clc
sub
aad
mov
js
cmp
scas
arpl
inc
ljmp
pavgb
add
mov
cmp
xor
insl
and
lcall
mov
mov
insb
lcall
loope
test
pop
lcall
xor
mov
sti
adc
decl
dec
movsb
add
addb
mov
pusha
push
add
fcomp
sbb
mov
call
ljmp
decl
sbb
inc
in
push
ud2
xor
lods
ljmp
jno
pushl
jb
cmpsl
sub
pop
rorb
cmpsl
add
ss
push
in
dec
pusha
mov
adc
in
sub
jo
insl
cmp
in
mov
xor
lods
xor
scas
clc
negb
or
cmove
fcomip
fisttps
mov
jg
xchg
xchg
xchg
rcrb
pushl
xlat
and
addb
aad
in
loope
fcomps
push
jmp
pushl
fadd
loopne
mov
sub
insb
ficomps
insb
js
push
stc
scas
mov
call
jle
sub
sbb
push
dec
sbb
push
decl
xchg
add
cmp
add
or
xchg
push
cmpsl
xor
scas
sub
jmp
movsb
push
dec
cmp
cwtl
stc
cmp
dec
jb
mov
or
and
ljmp
pop
and
leave
in
das
cmp
dec
aam
das
clc
cmp
idivb
sub
or
jmp
rorl
lcall
or
xchg
fidivl
clc
jmp
pop
dec
sbb
cmpsl
xchg
dec
loop
fbstp
filds
fmull
add
testb
lret
call
jle
ret
mov
mov
sbb
jne
out
push
sahf
jmp
push
mov
loop
inc
sbb
fldcw
idiv
jo
aaa
jge
popa
mov
test
cmp
lret
ljmp
ss
aaa
pop
xchg
push
push
mov
xchg
cld
jg
decb
stos
jne
mov
xor
scas
je
or
mov
incl
divb
lock
stc
pop
pop
enter
push
cli
ljmp
lcall
xchg
fwait
addl
jno
inc
push
xor
mov
jmp
push
jbe
push
jb
mov
mov
movsb
adc
mov
dec
call
shll
jmp
and
jne
mov
sub
mov
adc
fistl
or
fnsave
push
sbb
push
sbb
aad
mov
cwtl
jl
dec
or
lret
inc
push
ror
lock
sub
sbb
pop
xor
adc
mov
stos
lret
outsl
ret
xchg
xchg
inc
incl
movl
jge
push
jle
xchg
push
xlat
ja
push
shlb
out
pusha
es
cmp
xchg
bt
clc
and
imul
or
mov
mov
jmp
fcmovb
sub
cltd
lock
lods
inc
iretw
sub
pushf
xchg
push
arpl
lcall
or
inc
pushl
or
lret
pop
jnp
inc
movsb
scas
jno
add
add
mov
mov
jns
fildl
insb
and
fimuls
jmp
jl
inc
xchg
pushl
jno
push
add
xor
adc
fisubs
decl
mov
out
int
and
xchg
out
lock
jp
addr16
paddq
int3
pushf
dec
das
dec
fidivrl
add
lcall
or
mov
out
sbb
push
cmp
lret
dec
call
mov
mov
mov
cld
call
and
pop
xor
or
stos
std
jmp
xor
test
dec
sub
mov
stos
jp
add
dec
sbb
imul
jp
sarb
pushl
or
int
sbb
and
pop
iret
sub
add
popf
jl
popf
addr16
hlt
ljmp
xor
jne
push
cmp
mov
pop
xor
or
aad
scas
push
clc
push
aaa
mov
ljmp
inc
stos
imul
outsb
or
add
mov
mov
ljmp
sub
dec
jno
adc
push
or
pop
cmp
lcall
mov
pop
enter
insb
and
decl
fdivr
jno
inc
daa
mov
push
cli
and
loope
cmp
push
into
repnz
mov
imul
lret
mov
mov
int
icebp
shll
push
mov
jg
ljmp
cli
push
cltd
mov
jae
mov
jl
jge
mov
push
adc
decl
pop
mov
outsl
cmp
or
mov
jmp
ficompl
mov
jge
fsts
lcall
mov
mov
inc
rcrl
adc
incl
xor
insl
cs
out
pop
mov
leave
out
arpl
hlt
mov
clc
dec
xchg
jo
pop
testb
push
lock
sub
pop
lcall
sub
ljmp
leave
push
pop
movsb
xchg
dec
push
push
hlt
call
loopne
divb
lods
dec
or
cmp
mov
and
pop
jb
leave
cli
xchg
sarb
adc
push
sub
xchg
testl
fdivp
int
outsb
mov
xor
cmp
pop
cld
jmp
or
cwtl
fldenv
dec
pushf
pop
adc
xor
sahf
sahf
inc
ljmp
pushl
or
ljmp
dec
loope
rcrl
xchg
int3
add
and
jns
sbb
int
xchg
mov
mov
jns
adc
adc
fmuls
pop
xchg
idiv
jmp
sarl
lods
cmc
shl
daa
daa
ja
jae
outsl
andb
leave
enter
sbb
lcall
push
movsb
mov
xchg
enter
push
pop
mov
adc
aas
inc
xchg
outsb
mov
in
and
iret
rorb
out
mov
mov
dec
pop
cs
mov
mov
decl
inc
mov
test
sub
dec
test
lock
jmp
sahf
push
push
pushf
add
push
cli
adc
xchg
cmp
lock
call
push
mov
dec
in
adc
dec
and
ficomps
mov
sahf
pushf
inc
inc
test
lret
xor
mov
inc
mov
cli
dec
dec
fcomip
fcomip
in
pop
std
push
fisttpll
ds
dec
mov
push
sahf
pushl
iret
pop
push
stos
adc
jecxz
adc
jecxz
or
and
pushf
incl
and
addb
enter
and
sbb
aad
jae
mov
dec
pop
adc
ret
mov
inc
and
and
jne
jg
ror
pop
arpl
sbb
xchg
add
repz
ja
fcmovnu
ljmp
cli
ljmp
ja
mov
inc
lods
insb
mov
dec
lret
mov
gs
dec
pop
jl
rorb
repnz
and
jbe
push
mov
frstor
and
mov
sbb
fcmovnbe
cmp
decl
fstl
xor
jecxz
leave
or
add
ja
or
add
ljmp
test
popl
sub
push
pop
adc
and
clc
rcr
add
mov
cmc
scas
sti
jp
loopne
subl
adcw
inc
das
fs
aad
sub
flds
xor
in
push
sbb
jnp
jnp
pushl
ja
or
sub
xchg
gs
and
mulb
fiaddl
aad
cli
incl
int3
xchg
xor
aam
dec
lea
or
jns
mov
or
mov
xchg
or
xchg
jmp
das
in
jbe
push
xor
push
sub
int3
cmpl
cld
loope
loope
andb
ficompl
push
in
push
push
gs
pop
mov
dec
mov
mov
mov
icebp
loopne
xchg
outsb
pop
cmc
mov
pusha
jmp
pushf
dec
lods
sti
push
fsubp
decl
lcall
js
fcmovu
out
and
pop
sub
mov
sbb
xor
lods
test
out
cli
jbe
xor
mov
mov
clc
sbb
push
lret
or
pushl
dec
adc
or
rcl
scas
fistps
pop
mov
sbb
insl
push
or
mov
in
xchg
ret
dec
lods
pop
pushf
hlt
repnz
faddp
mov
push
fdivp
cs
lcall
and
xrelease
and
ja
fiaddl
mov
jle
jo
test
test
lds
lahf
dec
jns
fs
ljmp
inc
ja
mov
push
jnp
xor
outsl
adc
fsubl
mov
jbe
cmc
sti
sarl
push
outsl
cmpsl
mov
movsb
imul
cmp
je
fcomip
cltd
jp
pop
or
sbb
jno
les
pop
das
inc
dec
xchg
adcl
int3
sbb
lret
movl
or
push
clc
jp
into
mov
cld
adc
jmp
and
ja
test
lret
das
xor
xorb
cmp
jge
dec
hlt
or
stos
pop
decl
dec
xor
sub
loop
loop
sar
jecxz
xchg
fs
hlt
xor
xor
jns
and
xchg
push
push
mov
add
lock
ret
enter
pop
mov
pop
sbb
pushl
nop
xor
gs
mov
shrl
enter
ret
or
daa
aam
arpl
fcomip
incl
mov
or
fidivrl
mov
in
and
and
jno
out
out
clc
jg
push
push
movsb
jmp
add
push
sub
ljmp
ds
loop
jp
xchg
xchg
mov
sub
cmp
sahf
clc
insb
data16
dec
jno
mov
fs
jmp
mov
test
cmp
rcl
xchg
add
cmp
shlb
mov
repnz
fs
sbb
ljmp
mov
test
dec
pop
xchg
cmp
cld
xchg
enter
dec
push
mull
mov
js
cmp
jge
sti
cvtdq2ps
decl
cmp
loop
bound
stos
push
and
xchg
in
sbb
xchg
lret
decl
xlat
mov
push
or
lret
imul
fildl
sub
lahf
jb
incl
int3
push
pop
xchg
sub
mov
fimull
dec
or
ljmp
mov
dec
scas
test
push
jg
xchg
lret
in
mov
cld
lods
scas
push
in
movsl
notb
cmp
out
inc
int
lds
stos
iret
and
ljmp
clc
decl
pop
ret
ds
pop
jg
jecxz
rcrl
push
add
rolb
call
inc
loope
jne
jg
xchg
pop
ret
popf
jmp
out
lahf
jne
aas
stc
stc
std
test
fmul
mov
mov
push
pop
popf
adc
mov
aad
and
rcll
and
push
dec
pushf
jbe
xchg
mov
mov
dec
js
rolb
xchg
lods
scas
leave
sub
push
lock
jmp
notb
or
xchg
pop
das
repnz
or
fdivp
cmp
and
lcall
call
sub
mov
xchg
addr16
fwait
mov
ret
je
xlat
or
cmpsb
scas
notl
cmp
mov
or
mov
mov
add
orl
mov
jge
in
mov
arpl
lea
fistpl
cmp
sahf
dec
cmpsb
mov
inc
sub
xorb
mov
fisttps
add
cmp
dec
mov
and
cld
pushl
or
repz
push
fadd
sub
imul
loopne
jg
or
push
push
jne
aad
lret
rcl
mov
fildll
and
pushl
push
mov
cmc
xchg
je
pushf
fidivl
sub
jno
cmp
xchg
shll
jns
mov
lock
or
xor
xor
sub
xcrypt-ofb
cmpsl
stos
lcall
fidivrl
ljmp
dec
out
or
jle
jle
cmpsb
mov
ljmp
jmp
or
push
or
sbb
icebp
popa
push
out
push
inc
mov
jns
enter
and
dec
dec
sbb
push
mov
pop
fdivr
jge
sub
jo
and
pop
das
sbb
test
insb
test
mov
stc
xchg
fisubrs
jmp
lahf
fwait
cmpsb
xlat
out
cwtl
cwtl
leave
fstp
pop
pop
daa
xchg
add
sti
ret
xchg
decl
pop
iret
xor
fbld
stos
cmc
out
push
ss
sbb
mov
jmp
sbbl
fwait
add
mov
cmp
and
sbb
call
cltd
push
push
cmp
movsl
fwait
push
jl
cmp
lods
sub
mov
scas
mov
test
in
decl
icebp
pop
imul
fstpt
or
stos
in
push
dec
jg
xor
cmp
push
ror
outsb
in
cmpsl
cmp
mov
add
cld
cmp
popa
hlt
ds
dec
cmc
les
pop
xchg
cmc
rcrb
aam
rclb
incl
jg
mov
imul
ds
push
xchg
dec
push
test
in
sbb
jmp
mov
jge
mov
mov
ja
inc
gs
incb
dec
ja
sbb
sbbl
sub
cs
adc
hlt
push
mov
xor
inc
add
inc
movb
xchg
sub
in
sahf
les
xchg
mov
mov
add
pop
ljmp
xchg
jne
sbb
lahf
add
movsbl
outsl
fisubrs
lods
inc
call
xchg
rorl
ljmp
sbbb
adc
cmpb
push
pop
jl
sbb
test
ljmp
shrb
add
push
idivl
fs
pop
xchg
mov
loop
fs
add
movsl
mov
decl
lock
mov
pushf
mov
mov
in
push
mov
std
sub
jl
xor
xchg
jp
mov
mov
and
lcall
push
scas
setne
inc
mov
cmp
notl
adc
xchg
mov
jp
mov
addr16
pop
adc
fimuls
dec
sbb
incl
sub
jo
mov
jb
inc
movsl
ds
or
adc
cmp
aas
hlt
and
cld
lcall
mov
fists
dec
lds
add
fsubl
aad
ljmp
pusha
movsl
adc
jnp
sbb
or
mov
jg
inc
movsb
inc
icebp
inc
cld
fiadds
sarb
lret
jle
sti
xchg
cmp
fsubs
xchg
scas
pop
pushl
cmpsb
pop
imul
in
add
inc
hlt
lock
shll
and
xchg
xchg
xchg
dec
pusha
call
add
stos
jbe
repz
stos
test
adc
xchg
cmp
roll
fmulp
pusha
cld
lcall
lds
arpl
ret
outsl
enter
adc
or
jg
loop
sbb
lea
jl
jbe
xlat
enter
das
sub
cld
inc
clc
decl
aad
jns
pop
out
in
push
and
push
mov
fdivrl
ljmp
sti
popf
sub
rcrb
jg
jecxz,pn
pop
testb
add
ljmp
pop
ficoms
mov
push
add
cmovo
stc
cld
mov
cs
sub
scas
cli
jg
loop
jns
test
adc
outsl
mov
jecxz
adc
cmpsl
movsb
mov
hlt
aas
ja
jne
xlat
add
pop
mov
sub
push
jmp
sbb
pop
and
mov
aam
in
incl
sub
int3
mov
mov
push
ffree
jns
shlb
std
mov
clc
xchg
mov
hlt
fstpt
pop
xchg
decl
inc
xor
outsb
adc
fwait
popa
ljmp
add
std
lea
xor
fldt
adc
mov
sbb
or
push
lahf
pop
sbb
and
decl
inc
fwait
lret
das
and
xchg
das
inc
dec
or
jle
daa
movsl
mov
inc
jecxz
mov
lcall
inc
sub
mov
out
aaa
mov
and
clc
pop
push
xor
mov
inc
mov
mov
mov
leave
div
aaa
xchg
dec
clc
incl
popf
data16
mov
mov
inc
add
in
notb
pop
adc
adc
add
ret
xor
nop
mov
sbb
aad
cs
mov
add
and
push
cmpsl
insb
push
inc
or
cmp
add
add
loopne
idivl
push
stos
addb
inc
jle
cs
stos
jae
bound
imul
pop
push
add
mov
add
push
insb
or
ds
add
push
addb
add
mov
sar
dec
or
add
imul
in
dec
pop
add
ds
in
dec
fs
aaa
mov
adc
dec
dec
call
push
dec
jo
daa
push
inc
add
push
xor
or
xlat
push
dec
gs
xchg
loopne
or
push
outsl
outsl
insb
push
outsb
popa
jo
push
or
adc
push
sub
sub
push
or
dec
dec
jne
cmpsb
xor
js
or
inc
jo
ret
aaa
push
popa
es
push
inc
adc
orl
jns
call
incb
popa
jb
add
jecxz
ret
ficoml
dec
ljmp
inc
add
test
cmpsl
jo
outsb
cmp
xor
jo
or
daa
dec
das
add
inc
jl
loopne
sub
and
xchg
data16
sub
nop
fisttpll
sub
ficomps
outsb
flds
ss
ret
dec
inc
xor
jae
cli
arpl
les
inc
cmp
push
fisubs
fwait
push
add
mov
pop
ja
cld
push
ds
insb
jne
addl
popa
fs
andb
push
xor
or
inc
sbb
fcmovu
sub
fildl
inc
iret
inc
push
pop
cs
mov
pop
sub
sarl
jne
addr16
xchg
subl
xchg
sub
jb
subl
cmp
mov
inc
jae
adc
adc
mov
and
ret
inc
jecxz
lock
xor
dec
cmp
cmp
jae
pop
int
int3
adc
popa
pop
jno
mov
inc
flds
movsl
rclb
push
jo
packuswb
imul
pop
mov
inc
dec
sbb
stos
pop
insl
adc
push
push
ret
ljmp
arpl
pop
add
mov
imul
mov
dec
ja
inc
or
insl
sub
pusha
fs
ss
loope
or
outsl
popw
push
xchg
sub
shlb
sbb
inc
insb
cmp
jmp
popa
and
das
push
mov
dec
jae
pushf
inc
or
add
stos
pop
dec
inc
dec
or
push
into
ret
mov
mov
mov
rorb
push
gs
test
push
jecxz
repz
xchg
lods
aaa
mov
je
ja
mov
inc
inc
jg
hlt
add
pop
push
cmp
push
je
mov
cmp
or
arpl
es
bound
fildl
jg
sbb
test
xchg
fcoms
vpunpcklwd
rcl
or
jle
mov
pop
test
mov
xor
fmul
dec
push
or
frstor
cmp
sbb
scas
mov
inc
lock
xchg
inc
je
add
jp
push
inc
inc
out
sti
shrl
test
push
inc
sbb
lods
and
mov
sub
shlb
dec
jnp
sbb
out
shl
or
clc
fidivrl
mov
add
insb
push
adc
jns
dec
xor
cmp
and
xor
mov
push
xchg
or
jnp,pn
and
inc
mov
push
cmp
xlat
adc
or
or
stc
pushf
push
jne
jo
push
inc
inc
fmuls
push
add
fists
or
stos
gs
jae
xor
mov
jo
and
movsl
sbb
test
cmp
jnp
push
inc
sbb
dec
outsl
jg
add
aaa
sub
mov
cmp
dec
addb
push
outsl
shrb
add
add
cmp
add
movsl
sub
sarb
and
ss
dec
gs
jne
cltd
ror
stos
xchg
or
mov
sub
mov
dec
sub
fs
pop
push
das
push
loop
inc
and
dec
add
sbb
enter
jmp
pop
pop
pusha
mov
popa
push
add
mov
fcomps
or
jge
push
popa
sbb
cmpsl
push
outsb
adc
dec
shr
adc
popa
mov
jno
cmp
dec
ret
pusha
and
xchg
in
sub
dec
cli
pop
inc
cmc
pop
ja
je
and
push
adc
xor
jb
and
ret
jl
inc
in
xor
jo
inc
inc
and
arpl
insl
mov
inc
imul
dec
push
xor
fcomi
test
pop
mov
inc
insb
notl
jle
xor
mov
call
stos
mov
stc
xor
shld
jno
aad
xor
fcoms
aas
ljmp
js
inc
dec
loopne
add
xchg
rcl
nop
sbb
mov
je
add
les
xor
push
add
push
push
xor
push
mov
xchg
cmp
xor
shlb
jne
inc
lock
lock
jo
inc
push
push
adc
push
pop
ja
pop
mov
jns
je
sub
outsb
dec
adc
jnp
ss
rorb
cld
insl
lcall
dec
add
mov
mov
imul
add
pop
shll
adc
mov
fisubrl
inc
push
addb
pop
pushf
dec
inc
rcll
in
inc
sar
add
inc
jb
push
js
shlb
out
inc
xchg
shrb
bound
mov
test
dec
roll
mulb
cmc
das
and
inc
jb
push
jb
inc
jae
pop
pop
inc
sahf
inc
leave
inc
rol
add
imul
iret
push
repz
jo
fs
movsb
push
sbb
add
rclb
push
icebp
mov
mov
adc
imul
push
test
mov
imul
push
mov
or
mov
scas
sbb
and
mov
in
mov
push
adc
mov
sbb
aad
add
sahf
enter
outsl
test
push
or
or
sub
fisttps
inc
pop
pop
xchg
cs
mov
sub
rcr
push
jmp
sbb
and
jb
cmp
je
fcoml
xchg
push
ss
add
push
pop
inc
mov
xchg
add
rcl
push
sbb
ret
lret
mov
add
and
dec
mov
xor
mov
or
shrl
push
mov
fs
dec
sub
cwtl
xor
adc
jne
push
cs
subb
fcompl
add
lea
push
sub
push
mov
enter
mov
push
xchg
push
sub
lods
add
mov
pop
and
sbb
push
test
mov
and
arpl
lret
inc
lds
test
inc
and
aam
adc
or
sbb
testl
push
sbb
lea
test
adc
out
mov
mov
add
jno
ljmp
pop
orl
sbb
cmp
xor
push
lods
cmpsl
fs
int3
lret
xor
inc
add
cmpsl
js
mov
jp
stos
cmp
mov
outsb
sub
outsl
and
aam
sbb
push
lods
add
ret
push
cmpsl
call
add
sub
add
andl
push
xchg
cld
add
in
or
cmovno
lcall
popa
or
jnp
push
imul
jbe
dec
inc
enter
ljmp
popa
sub
pop
pop
xchg
dec
push
movsl
cmp
sbb
xor
out
int3
ror
jno
add
data16
xchg
add
jmp
mov
negl
inc
mov
adc
lock
jp
popf
mov
inc
mov
add
dec
mov
xor
adc
or
or
add
repz
pop
gs
dec
add
add
sbbl
dec
lcall
pop
shr
jne
adcb
or
jmp
loope
outsl
pusha
in
test
inc
and
push
push
mov
mov
mov
dec
pop
add
test
imul
mov
sub
jb
bound
mov
add
push
push
rclb
sarb
out
inc
cs
adc
xchg
add
jb
sarl
out
rcll
pusha
dec
xchg
push
lahf
or
lcall
repz
add
dec
xchg
and
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
