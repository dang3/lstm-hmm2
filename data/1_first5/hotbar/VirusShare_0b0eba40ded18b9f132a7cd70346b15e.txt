divb
in
mov
mov
push
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
and
stc
out
aas
mov
test
je
cmp
add
and
jbe
decl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shll
pop
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
movl
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
int
imul
xchg
scas
adc
mov
add
inc
jne
xor
cmc
sub
sar
inc
je
daa
ret
push
jg
mov
repz
adc
pushl
mov
or
fildl
add
test
icebp
mov
mov
call
pushl
shrb
cmp
fwait
cltd
fildl
mov
ja
divl
mov
add
andl
mov
clc
sbb
pop
push
sub
mov
hlt
cs
adcb
mov
adc
scas
hlt
mov
fcomps
sub
dec
sbb
jns
shlb
in
or
frstors
mov
hlt
or
pop
cmpsl
push
sbb
inc
mov
fwait
popa
xor
push
call
jno
add
out
push
sbb
loopne
pop
pop
outsb
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
sarb
xchg
and
ret
test
push
xchg
mov
call
lcall
dec
and
add
xchg
es
pop
xlat
mov
push
fisttpll
push
test
or
sbb
push
lock
or
ja
aad
jnp
mov
aas
fadd
jae
cmc
jne
cltd
push
pop
pop
push
jno
cmc
jmp
aad
or
push
push
sbb
outsb
or
sub
add
sbb
enter
add
push
mov
mov
aaa
ja
inc
pop
bound
std
pop
sub
lock
push
mov
cmp
add
loopne
or
jge
insl
sbbb
mov
push
lock
xor
mov
pop
ret
push
stos
pop
test
push
pop
jae
into
xor
jge
arpl
pop
inc
sub
fadds
sub
enter
jo
ds
push
xor
in
push
sbbl
jl
jne
pop
xor
lods
inc
test
call
js
mov
cmp
jg
mov
adc
loop
addr16
inc
ret
shll
and
pop
outsl
pop
xchg
dec
add
sbb
mov
sub
push
mov
idiv
loope
sar
xor
cmp
ja
adc
sbb
clc
add
push
push
mov
jmp
pop
scas
sbb
aad
adc
inc
add
jo
add
cmp
ret
push
push
jo
lret
stc
sub
adc
cmc
fsubp
stos
cmp
jle
mov
cmpl
or
push
fsubrp
sub
xor
jge
dec
cmp
outsb
fildl
jmp
cltd
xchg
add
push
test
mov
ret
enter
jg
push
push
outsb
push
hlt
cmp
jl
cmp
jne
mov
incb
add
xor
jbe
mov
call
mov
shll
mov
mov
or
inc
add
adc
lea
mov
nopl
adc
push
xor
fcmovne
pop
hlt
into
mov
aam
push
cmpsl
testl
fdivrs
cmpsl
mov
pop
adc
cld
fsubrs
jp
stos
mov
roll
outsl
or
or
test
jle
cmp
mov
orl
movsl
pop
aas
pushf
inc
add
icebp
sbb
movl
sbb
sub
out
test
repz
push
sarl
lea
cmp
jae
pop
scas
dec
js
sub
adc
aaa
cmp
andl
ret
and
hlt
adcb
adc
dec
js,pn
hlt
jg
adc
movsb
ret
rclb
clc
sbb
jb
orl
or
add
cmpb
add
loope
adc
xor
idiv
arpl
adc
and
addl
fcmovnb
rcr
push
add
push
xor
push
push
push
mov
jge
mov
pushf
pop
mov
shrb
enter
call
add
cmp
fists
cmp
xchg
rorl
outsb
pop
int
les
jle
push
lea
js
pop
in
iret
hlt
ret
pop
cmp
je
or
or
mov
push
push
fdivp
sbb
ljmp
add
jbe
jo
push
or
into
and
add
add
xor
imulb
adc
addr16
dec
cmp
pop
repnz
mov
xor
push
push
clc
lock
jp
enter
push
mov
push
pop
pusha
rep
jae
sub
jno
mov
jns
dec
es
pop
pop
jmp
add
jle
cmp
or
pop
or
and
test
ljmp
push
call
loop
ljmp
pop
xchg
imul
les
add
fcoms
jnp
dec
cmp
je
cmp
aaa
and
sarb
mov
ljmp
mov
jmp
pop
call
mov
mov
mov
pop
arpl
and
and
inc
sub
cmpsb
ret
lret
aaa
scas
shl
xor
outsb
or
pop
pop
or
cmp
jne
ljmp
lcall
sub
jne,pt
push
push
in
daa
ss
push
pusha
adc
mov
add
and
pop
pop
lods
add
adc
mov
mov
or
into
lret
dec
dec
sub
sub
xor
adc
cmp
inc
jl
or
rolb
not
mov
adc
push
cmp
xor
icebp
pop
lds
sub
add
ss
add
stc
push
loope
insb
adc
mov
dec
cwtl
idivl
push
push
and
loopne
mov
add
fucomi
dec
mov
mov
and
jo
test
push
stc
jmp
or
shll
adc
mov
sbb
lcall
push
add
inc
sbb
arpl
or
aam
mov
xor
sbb
xchg
clc
movb
int3
adc
test
in
subb
cmpw
jne
or
mov
jmp
pop
inc
push
push
xor
shrl
scas
sbb
ljmp
mov
add
outsl
pop
cmpsl
std
cmpl
or
es
mov
stc
sub
enter
je
add
dec
jmp
mov
mov
jno
cmp
sub
lock
lock
xor
leave
push
lods
jmp
hlt
mov
mov
loope
and
jo
jg
lea
mov
hlt
or
fwait
mov
add
sti
es
sti
rcrb
mov
addr16
pop
push
mov
inc
inc
subl
push
pmaxub
outsl
decb
mov
lock
test
sbb
xor
repnz
sub
std
push
cld
jno
mov
mull
push
mov
mov
add
dec
add
inc
add
dec
in
add
cmp
inc
incl
fldl
xor
mov
inc
adcb
out
test
nop
mov
cmp
je
push
or
loopne
pop
mov
inc
pushf
add
fcoms
pop
adc
add
pop
cmp
pop
push
xor
pop
je
jecxz
jns
leave
ret
or
mov
adc
pop
leave
inc
mov
movsb
sbb
jbe
push
adc
ds
push
jl
jne
in
sbb
adc
lcall
addb
lcall
lock
cmp
int
rcrb
or
ljmp
push
jbe
jo
mov
adc
sbb
sbb
mov
je
or
sbb
es
dec
cmpsb
into
add
shrb
js
js
fbld
jge
sbb
add
incl
cmp
orl
inc
inc
call
pcmpeqb
push
or
jp
push
sti
lret
mov
in
cmp
dec
xchg
push
jne
xor
or
in
xor
or
mov
out
add
hlt
cmpsl
pop
cltd
mov
cmp
add
mov
push
sbb
push
jp
xchg
or
fs
sahf
negl
inc
add
mov
and
clc
nop
and
jge
jb
int
xor
xchg
push
xchg
rorl
push
hlt
push
sbb
fiadds
mov
pop
je
mov
xor
mov
test
inc
inc
mov
xor
hlt
cmp
mov
popf
aam
pop
enter
cmc
jecxz
xor
mov
ss
push
sub
dec
orb
and
push
or
call
sub
jmp
mov
and
movsbl
addb
jg
fdiv
push
popa
push
sub
jl
enter
incl
xchg
mov
or
sahf
adcl
cs
push
pop
gs
jp
xchg
addr16
into
cmpsb
fisttpll
rclb
hlt
test
inc
pop
push
mov
fsubrl
je
jo
cmp
or
add
mov
dec
sbb
dec
in
enter
inc
pusha
scas
xchg
push
aam
adc
dec
shlb
sti
push
dec
sbb
pop
or
nop
push
fsubl
mov
mov
cmp
outsb
push
addl
xchg
subb
cld
mov
jo
sub
mov
fdivrs
dec
push
in
push
adc
pop
sbb
je
sbb
push
in
pop
push
test
jecxz
sbb
pusha
es
inc
je
inc
sbb
mov
in
and
adc
mov
lock
inc
popf
mov
add
jmp
sub
ret
shrl
add
mov
aas
sub
cmp
loopne
add
pop
test
loopne
push
push
adc
xor
adc
or
inc
add
sbb
je
push
jmp
mov
movsl
add
add
adc
add
mov
sbb
push
add
cmpb
je
mov
ljmp
dec
dec
jne
scas
add
js
xor
fadds
xor
call
dec
add
inc
jg
jbe
push
shr
push
jmp
mov
dec
notb
dec
stc
adc
cmpsl
sbb
test
std
in
js
adc
repnz
inc
shlb
insb
aam
and
jns
scas
fmuls
fsubrl
fs
out
inc
and
add
lea
sbb
dec
mov
mov
mov
or
call
push
cld
mov
pop
add
sbb
pop
sbbl
push
xchg
pop
out
daa
popa
or
mov
leave
les
mov
pop
and
test
aaa
xchg
call
inc
mov
test
inc
cmp
jl
jmp
pop
mov
mov
cmpsb
add
add
jmp
add
inc
cwtl
xor
addb
mov
insb
ret
pop
sub
testb
pop
push
xchg
outsl
movsb
push
xor
add
push
sbb
iret
mov
adc
sbb
push
stos
data16
mov
mov
data16
pop
ret
push
add
ds
jo
jae
pusha
sbb
mov
push
inc
fdivrl
repz
jns
xor
repnz
push
decb
sbb
rolb
outsl
push
pop
insl
pop
mov
jg
enter
sub
mov
or
cmp
loopne
dec
in
push
mov
nop
sbb
pop
mov
mov
jmp
cmp
cmp
xor
push
xor
mov
sti
or
sbb
mov
jmp
push
divb
pop
inc
mov
push
push
cltd
push
loope
loopne
and
adc
push
mov
sub
lds
sbb
loope
or
loopne
dec
sbb
or
mov
xor
sbb
in
lock
mov
cmpl
or
jo
aas
push
mov
cmp
jne
jmp
push
jg
enter
lods
pop
xchg
in
inc
or
cmp
pop
dec
mov
aas
pop
ret
xchg
cmpsl
std
cmp
jb
cmp
ja
movzbl
sub
sbb
inc
fstpt
push
ret
mov
call
sti
je
dec
je
add
push
subl
mov
jbe
push
mov
push
inc
adc
and
or
mov
call
or
shlb
jge
cmpsb
in
xor
pop
adc
cli
das
je
or
mov
cmp
cmp
dec
clc
addr16
je
jb
mov
sbb
add
test
sbbb
or
or
mov
dec
xor
push
push
leave
leave
mov
mov
xorb
and
pushf
cld
cmp
jbe
shlb
adc
pop
add
cmp
add
out
add
jmp
and
adc
mov
inc
pop
dec
hlt
mov
mov
nop
sub
dec
cld
clc
mov
or
repnz
clc
and
out
mov
mov
jb
and
insl
or
test
push
add
dec
in
test
insb
and
pop
sub
jmp
or
push
push
clc
cmp
jne
outsb
hlt
cmpb
loop
and
push
test
sub
rol
js
jb
or
ja
js
rolb
inc
dec
push
mov
or
cmp
xor
shrb
cld
lods
xor
adc
sbb
arpl
sbb
mov
mov
in
push
inc
push
test
fsubs
dec
jmp
mov
aaa
jae
int3
insl
loopne
pop
inc
shrb
sbb
inc
jecxz
add
jmp
pushf
aas
insb
sti
and
xor
loop
and
hlt
cmp
js
mov
test
jne
xor
dec
lock
sub
mov
or
push
popa
incl
cmp
dec
shlb
xor
rcrl
je
repnz
lea
push
xchg
mov
addl
pop
or
sbb
orl
mov
mov
jae
cmp
jg
or
jge
add
and
aaa
aaa
es
sub
sub
and
pop
or
jl
pushl
mov
or
adc
je
lea
cmp
jbe
lea
cmp
jbe
mov
pusha
pop
arpl
pop
inc
lock
dec
add
je,pn
test
jne
pop
adcb
sub
jb
push
and
gs
add
xor
std
mov
push
xor
adc
movb
inc
mov
push
sub
push
push
push
test
enter
pop
rolb
and
jb
push
and
jno
mov
inc
and
mov
je
stos
jmp
adc
mov
add
sbb
mov
orl
sbb
clc
cs
ljmp
movsb
inc
add
add
mov
cmp
or
mov
mov
mov
mov
mov
lea
mov
mov
and
insb
cmp
setne
ret
and
sub
ljmp
rcll
sti
paddd
xor
mov
inc
sahf
sbb
testb
insb
xchg
clc
push
dec
cmpsl
cmp
xchg
lea
sbb
add
jmp
jbe
push
dec
mov
push
insl
xor
cmp
pushf
lret
push
les
or
jle
jnp
lea
push
mov
mul
push
lea
or
out
push
ss
adc
or
mov
xchg
insb
or
mov
jns
pop
lea
test
jnp
repz
sub
enter
pop
leave
adc
push
andl
sub
ret
enter
push
add
fwait
cmp
sbb
dec
mov
movsb
mov
cmpsl
pop
dec
dec
xor
cmc
fists
mov
js
les
mov
es
pop
push
movl
inc
xchg
mov
ss
cmc
xlat
xor
push
xlat
jbe
mov
pop
ret
icebp
mov
movsb
inc
inc
add
sti
xchg
push
mov
bound
jae
inc
adc
push
mov
sub
xchg
push
pushf
push
add
mov
lds
test
pop
dec
scas
shrb
in
or
sbb
pop
mov
push
pushl
push
mov
or
pop
lea
ja
cmp
outsb
push
call
push
pop
push
fnstsw
and
cmpl
inc
add
test
jns
jbe
pop
push
dec
push
xchg
cmp
jb
pop
scas
cltd
sbb
sub
cmp
rcrb
popf
out
and
jbe
mov
aaa
das
push
gs
and
sti
inc
inc
fwait
cmp
add
pop
nop
push
jl
fsubrl
jmp
cmp
sti
test
loope
inc
mov
push
mov
xchg
stos
pop
jnp
imul
dec
add
aam
clc
das
je
or
push
ret
ja
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
and
push
mov
dec
mov
mov
or
arpl
scas
or
mov
icebp
in
clc
mov
icebp
inc
mov
jl
add
pusha
addl
sub
adc
mov
add
add
sahf
mov
mov
push
aaa
clc
dec
std
roll
add
push
add
add
pop
pop
outsl
shrb
cmp
ja
fistps
into
mov
sahf
movmskps
inc
adc
dec
sub
lock
sub
ret
or
sti
pusha
jb
jle
push
mov
test
subb
orl
aas
imul
mov
mov
jo
out
das
push
cmpsb
inc
jne
and
gs
mov
or
push
ljmp
push
mov
loopne
push
dec
push
mov
xor
and
arpl
push
xor
xchg
fadds
popf
test
imul
andb
xchg
add
xchg
xchg
enter
pop
jge
aas
int3
popa
movsl
xchg
fimuls
fdivs
loope
add
pop
frstor
sub
xchg
inc
push
fsubs
pop
xchg
fs
add
lods
xor
push
push
loope
mov
testb
adc
inc
jno
lret
idivl
in
cmp
ja
cmp
cli
push
sub
jge
iret
or
and
out
pop
ljmp
and
gs
fsubr
adcl
ret
cmpl
dec
add
jp
jo
cmp
andl
mov
mov
pop
sbb
insl
jnp
das
ljmp
mov
loopne
into
addl
push
call
sbb
push
add
ficompl
add
sbb
pop
or
or
xchg
jns
adcb
out
jno
jl
inc
je
ret
push
cmp
add
imul
mov
add
inc
mov
psraw
nop
adc
call
jne
fidivrl
cmp
and
add
mov
dec
sbbl
clc
add
dec
out
test
dec
cmp
mov
push
adc
ficoml
pop
repnz
push
insb
xor
push
fisubs
pop
fistpl
dec
cmc
xchg
jne
mov
mov
or
icebp
cmpsl
lods
dec
ds
jo
mov
loopne
fdiv
loopne
cmpsl
mov
jmp
xlat
push
movsl
loope
aas
je
cmp
push
pop
jne
aam
mov
dec
and
jmp
push
enter
pop
jne
pop
call
pmulhw
test
mov
in
xor
cmp
fildll
jmp
sbb
jbe
sub
mov
mov
mov
or
sahf
jo
inc
aam
cmp
pop
lea
fldl
add
je
pop
pop
in
lock
sub
mov
add
je
imul
fwait
and
cwtl
inc
repz
jmp
pusha
lret
into
mov
jae
scas
jg
inc
out
and
add
and
xor
leave
adc
pop
test
das
add
out
inc
mov
in
add
sub
push
dec
je
add
cmpl
orb
pop
cmp
xrelease
testl
mov
push
mov
jb
xor
push
pop
pop
fs
or
push
mov
in
or
insb
cmpb
or
or
ret
push
bound
push
push
popf
rolb
push
jbe
inc
mov
cmp
jmp
pop
pop
loopne
mov
add
loope
xchg
ret
fstpt
add
inc
arpl
mov
xchg
sbb
or
push
jae
lret
loopne
sahf
xchg
pop
cs
push
push
pop
pop
pop
xchg
lret
in
pop
pusha
pusha
mov
cmpsl
sub
adc
or
sub
or
sub
sar
inc
add
push
xchg
pop
or
jle
add
or
pop
inc
dec
movl
adc
js
shr
inc
jle
mov
jno
rorb
les
mov
lods
jno
lods
shl
and
push
mov
push
aaa
in
sub
adc
inc
inc
cmpsl
fldcw
add
je
push
push
movb
cld
inc
xor
push
aaa
jo
sbb
mov
push
or
or
call
add
clc
sub
nop
or
sahf
je
mov
js
loopne
jmp
sub
cli
add
lea
lock
push
push
lea
push
test
int3
pop
stc
adc
je
adc
cmc
sbb
inc
push
or
popa
adc
mov
dec
outsl
mov
rcrb
pop
or
push
rorb
mov
pushl
cmpl
cmp
mov
dec
or
push
add
push
push
push
sahf
orb
mov
jnp
pop
jmp
scas
jmp
test
pop
ret
pushl
push
jns
pop
sbb
negl
xor
xor
or
aas
mov
iret
add
add
mov
jno
cmp
adc
jne
pushl
jle
inc
add
push
mov
cmpsl
aam
sub
sbb
jbe
lock
push
leave
mov
es
cmp
pop
iret
add
test
mov
and
ds
faddl
stos
in
xor
movsl
hlt
in
js
mov
call
xor
testb
les
pusha
bound
mov
cmp
testb
aaa
mov
js
fsubp
push
enter
rclb
in
sub
call
iret
xchg
or
pushf
pop
fcmovb
enter
or
adc
push
loopne
or
or
mov
pop
mov
pop
jno
inc
out
jp
pop
movsb
or
js
sbb
push
cmpsl
mov
stos
or
sahf
cmpsb
add
loop
add
dec
test
mov
clc
mov
andl
hlt
pusha
adc
add
stos
shlb
add
xchg
dec
loopne
shrb
add
fdivrl
xorl
xlat
pushf
push
outsl
iret
mov
fistl
pop
jne
loopne
inc
push
mov
or
cmp
pusha
popa
adc
pop
mov
push
push
pop
cmp
inc
fistps
aaa
jbe
push
and
xlat
jl
pop
lods
jge
cmp
sbb
xor
xor
jl
cmpsl
sbb
pop
cmp
and
pop
popa
mov
mov
loop
jo
mov
sahf
mov
sub
cmp
out
xchg
or
xchg
fdivrl
lret
xchg
lahf
adc
mov
mov
jecxz
clc
mov
fsubrs
add
cld
popf
jg
lahf
sbb
mov
pop
fdivrl
int
mov
rorb
jge
enter
call
cld
sti
add
sub
inc
sub
addl
andl
pop
jo
mov
sub
sbb
lea
roll
ss
add
push
lcall
pop
add
lcall
mov
mov
inc
push
xchg
xorl
cmc
sahf
loopne
xor
lea
push
add
sub
shlb
fimull
push
leave
loope
mov
mov
mov
loope
mov
add
and
mov
jo
push
jae
add
cmp
or
xor
and
cmpb
jg
sub
daa
xor
fidivs
out
add
js
aas
imul
mov
mov
movsb
aas
imul
mov
mov
mov
add
fisttps
dec
sub
mov
sub
pop
pop
pop
shll
pop
sub
in
fbstp
in
out
ffreep
jle
or
push
imul
xor
addl
jle
or
xchg
mov
lods
mov
mov
mov
lea
pusha
mov
cmp
push
mov
inc
fisubrl
cwtl
in
lea
mov
push
leave
test
and
mov
andb
push
or
mov
dec
aam
call
mov
mov
dec
mov
mov
push
lahf
pop
push
push
adcb
xchg
add
adc
xor
xchg
push
add
mov
cmp
cmpl
popf
jo
rcll
or
cmpl
add
xchg
lret
je
insb
scas
aaa
cmp
loopne
and
xor
leave
ret
sti
fs
rorl
add
in
sub
inc
push
inc
popa
in
sub
and
cld
inc
and
xchg
jecxz
jo
das
and
sarb
mov
fs
sub
js
adc
aam
lods
push
movsl
repnz
pushf
movsb
int
aad
jne
sub
cmc
lods
cmp
xchg
add
push
sub
lret
dec
jae
xchg
rorl
adc
jnp
sub
jl
sub
adc
inc
std
pusha
xor
popa
add
in
roll
cs
dec
fldl
pushl
cmp
and
sbb
inc
inc
adc
pop
adc
andb
scas
out
pop
xchg
jne
ja
sbb
add
adc
and
shr
in
pop
movsl
xchg
scas
or
bound
gs
ret
push
mov
and
adc
les
pop
jl
or
test
lahf
cmp
inc
lock
add
aaa
out
sbb
jle
push
das
movsl
mov
mov
fldt
sbb
lods
xchg
ret
pop
inc
and
rcll
rorb
sub
sub
ret
idivl
pop
mov
sub
adc
inc
mov
push
pop
nop
pop
movsl
xor
fs
mov
xor
inc
jo
pop
into
gs
mov
or
inc
mov
icebp
into
scas
xchg
adc
movsb
mov
xor
push
sub
ficoms
pop
pushf
and
repnz
sbbb
mov
mov
mov
xchg
mov
in
jae
adc
repnz
out
and
inc
je
daa
je
scas
adc
mov
ja
jno
cmp
mov
push
push
or
mov
mov
fsubrp
xor
dec
jae
mov
lea
in
adcb
push
push
push
rorl
sub
incl
mov
mov
pop
add
in
movsb
out
mov
mov
in
sbb
or
out
punpckhbw
ret
loope
cmp
cmp
jo
ret
push
add
mov
fadd
pop
push
adc
addb
or
imul
inc
repz
jbe
pushf
adc
leave
and
lret
lock
jmp
dec
sub
push
jo
call
cltd
or
fmuls
ljmp
imul
push
call
inc
inc
in
sbb
mov
xchg
dec
mov
jmp
jmp
aam
jge
cld
shlb
push
push
cld
das
pop
pop
mov
jns
mov
mov
pop
loopne
lock
jns
lock
fidivl
fldt
push
aam
jnp
ds
cmp
jle
or
push
push
and
daa
add
add
stos
push
ljmp
add
fldt
pop
js
inc
fidivl
push
in
sub
int
mov
add
aaa
mov
sbb
jecxz
lods
jo
faddl
dec
and
mov
stos
pusha
stos
movsb
fisttpl
icebp
std
ljmp
test
les
push
sbb
sub
fistpl
fistpl
stc
aaa
les
ret
je
push
mov
and
gs
mov
xchg
dec
leave
mov
xchg
xchg
inc
or
sbb
inc
mov
mov
adc
dec
stos
rclb
nop
push
lock
mov
nop
psubw
xor
lret
lock
xchg
pop
push
or
xchg
mov
xor
and
sahf
sub
cmp
xchg
push
lahf
push
and
bound
popa
aad
comiss
mov
add
pushf
mov
push
xor
ds
inc
xor
mov
jo
fcoml
dec
fdivl
out
jge
out
sahf
je
sbb
dec
mov
pop
cld
mov
repz
subb
adc
push
jo
outsb
adc
movl
shlb
inc
xor
rcl
pusha
and
xchg
or
ss
ret
dec
pushf
push
lret
enter
pushf
sbbb
mov
int3
sbb
push
cmp
int3
dec
inc
enter
sbb
enter
arpl
pusha
arpl
ret
sbb
sbb
sbb
sarb
and
mov
xchg
inc
ds
mov
mov
inc
mov
mov
jle
pusha
sbb
push
mov
pop
push
dec
jmp
ja
sub
mov
xor
dec
and
push
jcxz
push
mov
clc
rcrl
fcoms
inc
inc
adc
mov
loopne
mov
cld
inc
or
dec
pusha
ficoml
push
rorb
push
movsb
aaa
test
or
jne
add
mov
push
xor
sbb
and
cmp
push
push
inc
adc
insb
inc
xchg
jnp
ds
xor
loopne
add
sbb
or
aam
cltd
add
inc
sbb
in
js
pop
fst
mov
and
data16
sub
imul
jbe
movsb
and
push
aaa
adc
dec
push
icebp
jle
push
orl
push
push
mov
test
xchg
pop
hlt
mov
cmpsb
mov
lea
dec
sbb
or
ret
dec
imul
add
and
out
pusha
outsb
pop
adc
das
or
xor
jle
xchg
cmp
jl
add
jmp
xchg
fldenv
js
lods
pop
jne
mov
fcmovne
aas
inc
scas
fs
pop
push
jmp
push
push
aad
xor
shll
mov
adc
test
push
or
inc
xchg
or
xor
andb
cmpsb
fcmovnbe
lea
insl
sub
or
adc
scas
repnz
notl
mov
jb
or
dec
push
or
je
ja
in
lret
or
ret
mov
mov
adc
inc
adc
rol
test
pop
rol
popf
mov
rcrl
add
shr
lds
lcall
fisttpll
cmp
adc
mov
inc
adc
movl
movsb
mov
push
or
inc
data16
sub
push
pusha
insl
sbb
cmp
add
fistpl
xchg
pop
inc
adcl
inc
test
push
ds
add
in
push
sbb
jge
popa
sbb
mov
out
mov
and
pop
cmp
popf
push
sbb
subb
in
cmpb
adc
push
sahf
les
mov
and
ds
push
lods
push
pop
stc
jb
shll
dec
add
sub
aas
imul
adc
clc
add
mov
push
add
push
aam
ret
lcall
je
pop
push
pop
lahf
xchg
dec
cmp
mov
xchg
sub
and
and
jmp
push
pop
jecxz
daa
add
xchg
add
or
add
mov
xor
push
inc
cmp
xchg
pop
outsl
lea
or
out
idiv
sbb
aaa
push
push
pop
push
fs
ds
xlat
jmp
movsl
sub
rcrb
pusha
lock
sub
inc
mov
cld
lock
sbb
shrl
std
push
pop
mov
or
add
pusha
push
pop
cmp
xchg
stos
loope
fildl
push
testl
mov
into
and
bound
out
add
dec
mov
inc
mov
clc
sub
test
es
into
add
add
aad
pushf
std
daa
cmp
sub
loopne
je
aas
incb
xor
lgs
mov
or
add
push
jle
push
es
cltd
test
test
js
sub
icebp
scas
sub
pop
sub
push
ljmp
test
sub
inc
imul
je
jno
cmp
push
add
ret
inc
lret
push
jne
jmp
or
orb
scas
cmp
push
stos
add
or
ljmp
xor
aaa
lds
shll
ss
repnz
add
insb
adc
push
movsb
test
jnp
ljmp
sub
dec
out
cmp
add
mov
push
leave
pop
mov
inc
sbb
nop
xor
cmp
fidivrl
movb
push
add
mov
xor
sbb
adc
xor
adc
push
or
xor
inc
popf
ss
dec
push
push
mov
lahf
mov
mov
aas
push
cmp
and
push
adc
sub
popf
cmp
int3
dec
cmpsb
inc
sbb
and
mov
sub
mov
jg
stos
dec
mov
fsubs
enter
enter
cld
idivl
mov
sbb
or
das
jno
pop
xchg
daa
xor
xor
xchg
sub
cmp
popa
aam
inc
mov
std
loopne
data16
or
pop
shrb
xor
sub
outsl
loopne
shlb
test
jae
popa
nop
add
and
xor
and
inc
sar
pop
mov
aaa
xor
push
out
xchg
push
or
xchg
sbbl
cmp
fldt
movb
pop
rcll
sbb
and
cmc
sub
addr16
sahf
sub
and
sub
mov
and
or
fnstsw
adc
mov
lds
js
pushf
pop
shll
test
inc
test
ret
add
xlat
sbb
insb
popf
fimuls
jl
mov
sub
test
xchg
pushf
ljmpw
pop
xchg
jo
mov
fwait
decl
push
out
mov
add
mov
loope
sub
and
andl
mov
mov
jo
sbb
mov
jo
jb
out
mov
sub
adc
and
sar
std
pusha
sub
or
push
add
je
ret
cmpl
aam
lods
adc
mov
sar
pusha
jne
push
sub
xor
inc
jmp
lret
jne
sub
push
fcompl
jmp
lcall
mov
shll
cwtl
nop
out
or
mov
pushl
jmp
mov
repz
iret
pusha
mov
adc
add
stos
and
pop
sub
mov
mov
sbb
pop
add
inc
mov
fmul
in
cmpsb
faddp
pop
movups
dec
inc
cwtl
pop
popf
movsl
mov
mov
in
loopne
sub
cmp
mov
mov
lock
cmp
jns
cmp
mov
or
add
pop
sbb
inc
out
jo
xchg
jge
fsubs
pop
push
dec
out
lock
fisttpl
add
ljmp
add
jge
insl
push
ffree
loopne
cmpsb
jb
pop
add
or
sub
mov
pop
push
je
popa
jb
test
das
shl
test
push
xor
jo
pop
push
inc
faddl
addb
dec
jns
pop
add
mov
into
call
xchg
push
cmpb
push
cmpsl
push
out
fidivs
or
xchg
cmp
lds
mov
outsl
jbe
add
xor
std
mov
bound
sub
sub
repz
je
call
sarb
pop
sub
mov
fsub
push
out
push
rcrl
inc
out
xchg
je
push
insl
or
mov
mov
iret
rorb
ljmp
ds
loope
leave
punpckhdq
cmp
imul
test
mov
jg
mov
cmpsb
mov
les
or
add
inc
cmpsl
stos
adc
mov
or
xchg
jle
mov
test
loopne
cmpsb
lahf
cmpsb
popf
insl
ds
test
mov
test
and
rclw
dec
je
sub
outsl
xchg
scas
pop
pusha
bound
mov
push
jmp
adc
int
or
mov
mov
in
mov
dec
stc
xlat
mov
add
fmuls
mov
loopne
jo
repz
push
and
imul
lcall
movsb
adc
add
or
push
mov
ja
shrl
lock
iret
data16
push
lock
and
pushf
ljmp
jl
pop
jg
adc
cmp
jle
pusha
inc
push
sbb
xchg
push
push
xchg
pop
insb
mov
inc
mov
jmp
loopne
out
or
jle
cltd
or
mov
add
loope
stos
push
insb
add
fcmovbe
push
add
dec
ret
push
inc
push
fwait
es
mov
or
aaa
cmp
cmp
mov
filds
inc
fbld
jne
push
stc
shlb
inc
loope
xchg
push
daa
cli
push
loopne
pop
add
cmpl
mov
or
mov
mov
adc
ret
mov
inc
icebp
or
mov
push
mov
into
push
jle
dec
inc
leave
setns
adc
add
xchg
jl
or
int3
insl
in
jo
xor
or
xchg
lcall
loope
into
inc
cwtl
dec
jbe
push
add
lods
sahf
dec
test
add
mov
cmpb
and
std
push
xor
dec
stos
and
sahf
sti
lock
js
push
or
mov
mov
xlat
xchg
dec
or
or
shll
icebp
sahf
fadds
push
jnp
mov
in
pop
and
lods
shrb
aad
and
in
fdivr
push
sub
push
push
mov
icebp
jno
push
xchg
imul
dec
in
nop
pop
add
mov
mov
or
inc
ja
sbb
inc
lock
mov
fidivl
fsubr
push
lods
sbb
scas
in
movsb
pop
inc
mov
inc
in
in
mov
cmp
shlb
shlb
push
loopne
add
cmp
in
push
xchg
dec
jp
call
aaa
mov
dec
cld
push
arpl
xchg
and
sbb
ja
push
test
iret
or
lds
jmp
call
push
mov
mov
mov
cwtl
ds
adc
mov
clc
lock
add
add
xchg
mov
adc
sbb
je
mov
and
jmp
inc
adc
sahf
mov
cmpxchg8b
xor
mov
inc
mov
enter
sbb
icebp
addb
mov
jae
push
pop
mov
mov
fs
dec
mov
push
test
cwtl
sarb
stc
sbb
sbb
mov
dec
popf
lahf
imul
or
dec
in
std
out
jne
cmp
je
pushl
call
outsl
mov
mov
call
xor
push
ret
cmp
add
fdivl
mov
xlat
sbbb
xorl
xchg
je
rcrb
push
cltd
popa
fmuls
mov
leave
ljmp
cmpsl
jp
movsl
dec
push
lcall
pop
push
or
jp
push
xor
std
add
enter
out
into
test
add
rcrl
pop
xor
pop
add
push
xor
xor
inc
shlb
clc
xchg
lcall
add
dec
mov
fs
lods
movsb
jle
in
xchg
inc
push
push
fwait
jmp
js
jg
mov
adc
jmp
jmp
push
mov
roll
loopne
pop
pop
out
je
and
sbb
adc
scas
cmp
jmp
rcrb
ja
pop
or
rorb
push
push
test
add
pusha
lea
lock
lock
outsb
jge
pop
jmp
out
addl
push
jl
mov
add
and
xlat
xor
push
pop
jmp
mov
push
pop
inc
imul
pop
enter
push
sti
push
bsr
mov
mov
mov
add
dec
push
push
push
mov
in
in
and
inc
clc
jl
cs
adc
in
sub
cmpb
sti
inc
hlt
lea
cmp
jae
ficompl
fwait
movsb
call
xor
lret
mov
pop
mov
je
add
icebp
mov
pop
jb
push
jle
scas
push
fcompl
imul
add
pop
rcrl
js
fistpll
lods
xchg
add
js
sbb
xor
mull
ret
adc
dec
mov
testb
mov
sub
xor
push
add
mov
add
enter
add
dec
in
cmp
sarl
das
test
xor
jp
icebp
in
xchg
add
int3
add
jle
push
add
aam
cmpsl
cmp
orl
fsubr
out
jbe
xorb
sbb
xchg
repz
cli
pushf
in
leave
js
push
hlt
and
dec
cmp
outsb
xchg
push
sub
inc
jmp
and
xorl
lods
divb
add
lock
push
inc
inc
mov
add
mov
inc
push
pusha
jbe
lock
orl
push
push
jg
add
add
xchg
adc
push
push
dec
movsb
inc
lods
xorl
add
fwait
mov
inc
pop
jne
fistpll
fildl
jl
cmc
fisttpll
adc
push
sar
faddp
mov
pop
ret
lahf
mov
dec
sbb
add
jne
sahf
clc
je
fiaddl
fs
push
dec
stos
clc
push
sbb
dec
fldcw
fisttps
cmp
push
or
jo
or
cmp
daa
cmpsl
test
lcall
mov
inc
add
jns
test
ja
jmp
lea
jmp
or
push
imul
loope
pop
cwtl
jp
test
ret
fldenv
mov
fwait
cltd
in
mov
ret
mov
inc
pop
ficoml
xchg
pop
test
les
pop
popf
mov
mov
hlt
dec
stos
add
adc
lods
stos
cmpsl
pop
in
sbb
pop
mov
add
or
add
mov
jecxz
rcl
mov
add
test
nop
dec
jl
cmp
jns
jg
addr16
or
sub
cmp
sub
aam
cli
add
clc
mov
pop
stos
mov
outsb
xchg
push
jae
jno
dec
xor
and
lahf
push
pop
push
jp
sbb
push
mov
in
adc
inc
rorb
aam
xor
movsb
cmp
je
push
daa
and
dec
aam
push
mov
add
pop
push
es
bound
out
xchg
dec
cmpsb
sub
in
rolb
hlt
pop
push
stos
mov
inc
or
movsl
cmp
test
pop
icebp
and
mov
out
add
cmp
or
xchg
test
adc
pop
sub
data16
cmp
push
jbe
cmp
pop
mov
mov
sbb
xor
rcl
mov
add
lret
addr16
into
aas
insl
mov
jne
sub
push
sbb
adc
inc
dec
xor
add
cmp
xor
pop
inc
add
mov
lods
or
mov
call
cmp
adcb
je
mov
cmp
movb
mov
or
add
jne
out
js
jge
rcrb
movsb
jae
negl
push
adc
adc
outsl
popf
mov
mov
pop
ljmp
filds
addl
ljmp
inc
enter
jbe
das
int
dec
jb
dec
lock
nop
adc
ljmp
xchg
sub
jmp
and
lock
xchg
and
cmp
shr
sbb
xor
inc
cmp
sub
pop
or
sub
insb
loope
or
sahf
or
inc
dec
adc
call
mov
mov
test
cwtl
mov
xchg
inc
add
out
movsl
mov
sbb
xchg
mov
mov
sbb
test
fidivrl
push
daa
sbb
enter
movl
adc
pusha
stc
test
arpl
and
dec
mov
cmp
inc
sub
pop
out
pop
sub
inc
sbb
je
negl
sbb
or
mulb
push
call
jnp
fdiv
ss
js,pt
cmp
fisttpl
ss
iret
or
or
std
xlat
pusha
mov
addb
jbe
repnz
ja
stc
mov
or
shl
aas
icebp
addb
jle
or
or
cwtl
loopne
jo
push
jmp
rolb
imul
mov
mov
imul
or
adc
cmp
jne
lock
xchg
lods
sbb
cwtl
cmp
jne
add
test
xor
add
pop
mov
xchg
inc
push
lods
sub
sub
add
popa
xchg
les
add
sti
stos
adc
adc
pop
add
mov
orb
jns
xchg
xchg
popf
adc
lock
mov
mov
movsb
pop
outsb
jle
sar
daa
ret
sbb
jo
push
pushl
aas
mov
push
mov
sbb
inc
je
lret
cmp
jne
and
cmp
pop
inc
mov
pop
pusha
out
mov
mov
push
pushl
aas
mov
jbe
and
outsl
or
dec
movsl
loopne
aam
pop
add
shl
push
cld
push
mov
outsl
ret
or
or
push
sbb
arpl
inc
add
mov
movsb
popf
xchg
rolb
pusha
roll
inc
cmp
cvttps2pi
jmp
imul
jno
jne
push
loopne
mov
push
test
loopne
add
sbb
mov
je
sbb
push
mov
mov
adc
shrb
inc
adc
adcb
test
int3
mov
imul
adcl
fcoms
sub
inc
movsb
das
add
pop
insl
mov
pop
mov
or
add
add
cmp
insl
push
mov
lea
jbe
mov
push
xchg
push
pop
mov
sub
jecxz
jecxz
pop
add
inc
jecxz
push
in
js
ret
lock
cmp
mov
movsb
cmc
repnz
jns
add
or
movsb
cmp
jae
add
mov
movd
pop
add
dec
adc
test
sub
cmp
jae
dec
add
add
xchg
lret
fldt
rcrb
jno
imul
daa
sarb
add
icebp
jbe
adc
pop
call
push
ljmp
aas
adc
or
mov
mov
loope
dec
jne
pop
pop
sub
js
mov
sub
idiv
loope
int
add
or
pop
and
push
push
cmpsl
mov
and
push
sbb
push
loope
sbb
fs
and
in
ja
dec
sbb
fstps
imul
movsl
movl
sub
lods
sbb
and
and
fwait
sub
stc
insb
inc
sub
xor
lahf
or
mov
xor
fcoms
dec
sti
nop
xor
arpl
lds
xchg
jle
lea
mov
loopne
xchg
pushf
les
pop
mov
push
lea
into
inc
xchg
ret
xchg
mov
mov
aaa
mov
jge
testb
lea
jbe
mov
lret
pop
push
fldt
gs
mov
xchg
inc
pop
and
mov
mov
mov
lock
stos
jnp
nop
mov
das
inc
xchg
je
adcb
jl
out
lcall
das
jmp
cmp
jne
movl
cmp
data16
adc
xor
es
sbb
movsb
jl
adc
int
inc
adc
xor
sbb
sbb
mov
add
cmpsb
sbb
sbb
xchg
shrb
pop
inc
outsb
aam
add
mov
push
jmp
mov
fcmovb
add
sbb
add
xor
push
mov
faddl
cwtl
xor
lea
sahf
or
movb
ja
jg
mov
mov
rolb
and
dec
icebp
push
xchg
insl
or
push
xor
lea
pushf
cmp
loopne
push
jnp
xchg
pop
fmul
or
hlt
lds
jl
sub
sub
cmp
shl
jbe
mov
sbb
xor
je
cmp
pop
inc
lods
std
dec
mov
scas
mov
fdivrp
inc
cmp
andb
mov
sub
sbb
aas
mov
cmp
pop
adc
inc
adc
mov
fcoml
add
movl
jmp
int3
popa
stc
add
sbb
pop
mov
dec
lock
mov
loope
mov
mov
xchg
orb
in
mov
popa
and
aad
loope
orl
jge
xor
cmp
into
or
pop
add
rcll
clc
add
std
pop
push
push
es
jbe
sbb
sub
jno
add
or
pop
or
xchg
int3
sub
jne
cmp
shrl
push
ljmp
mov
jle
imull
cmp
pop
sbb
xchg
orl
sub
ja,pt
ret
pop
lock
jae
cmp
mov
int3
popl
pop
add
add
add
sub
daa
jl
repz
js
mov
or
out
ds
pop
push
cmp
or
int3
mov
scas
fldcw
jb
sti
addb
cmp
push
adc
add
or
push
sbb
pusha
pop
push
pop
sbb
adc
cmpl
push
push
sub
shlb
pushl
jge
or
pusha
scas
test
stos
lahf
fidivs
push
je
or
push
cmpb
mov
jmp
push
jg
mov
cmp
test
pop
xor
outsb
push
pop
fildll
pop
pop
and
lock
ret
rolb
pop
lods
mov
cs
les
dec
decw
add
stc
mov
or
mov
mov
sbb
jle
jb
dec
lock
add
pop
lret
lea
pop
inc
xchg
in
dec
and
pushf
in
xchg
add
aaa
mov
push
jae
cmpl
or
arpl
add
out
jle
jle
mov
cmpsl
cmp
inc
inc
push
pusha
enterw
mov
pusha
cmp
mov
je
sub
cs
iret
call
test
sbb
fmuls
push
push
mov
cmp
add
xchg
movl
mov
adc
adc
jbe
aaa
add
data16
xor
or
adc
and
xor
dec
and
test
cs
lret
ja
or
xor
fnstsw
test
mov
add
mov
decl
fs
mov
mov
push
pop
stos
sub
pop
xor
rolb
outsl
daa
cli
adc
push
loop
sub
mov
add
jge
add
dec
or
stos
repz
mov
scas
lahf
cltd
fidivrl
jl
test
pop
testb
sbb
test
xor
addl
test
adc
pop
lea
aam
out
stc
adc
mov
mov
lea
mov
inc
test
lock
xchg
call
aad
or
idiv
lds
inc
push
inc
dec
adc
roll
push
push
inc
pop
nop
jmp
cmpl
mov
xor
mov
test
or
cmp
lea
xchg
jg
adc
loop
cmp
out
out
mov
rorl
push
or
sbb
jno
add
es
xor
mov
ljmp
test
loopne
and
push
xor
out
lret
sahf
cmpsl
add
ud1
sub
andl
sub
adc
mov
jecxz
fiadds
bound
push
das
cmp
push
cmc
push
sub
push
sub
push
mov
andb
cmove
daa
movsl
pop
andl
push
pop
lods
fsubl
sub
jmp
push
lock
shlb
stos
leave
push
mov
sub
inc
add
pop
sub
inc
push
stos
lock
outsb
lea
mov
sbb
sub
cmpl
inc
sbb
xchg
push
add
xor
ss
mov
dec
aam
push
das
dec
pop
jp
and
cmp
fcomps
xor
push
xor
pushl
sub
xchg
xchg
or
mov
and
aam
lods
sub
jno
lea
scas
in
sbb
push
outsb
xchg
xlat
rclb
dec
add
push
mov
arpl
imul
lea
mov
and
out
pop
or
imul
aam
das
stos
pop
adc
lods
enter
pusha
mov
jmp
xchg
xchg
push
lea
daa
rorl
or
ds
popl
into
lret
js
sub
push
mov
inc
pop
or
xchg
out
ja
jnp
imul
push
add
pop
add
aam
and
push
sbb
fs
jbe
pop
and
pop
in
rorl
cld
test
inc
or
orb
adc
inc
adc
mov
sub
and
and
imul
add
xorl
mov
inc
test
add
push
je
add
dec
mov
shlb
cmpl
add
repz
sbb
xchg
adc
sbbb
in
push
aas
jl
jmp
adcl
and
mov
xor
lea
sbbl
adc
das
ljmp
insb
xlat
mov
ret
je
dec
je
dec
mov
out
sub
jl
es
repz
dec
arpl
scas
xor
push
sub
cmp
je
mov
mov
rcl
lret
xor
jmp
cmpl
or
inc
pop
repz
sub
ds
add
pop
outsb
ljmp
dec
xchg
fsubr
iret
sub
addr16
xchg
test
sub
lret
push
mov
sbb
orl
adc
lahf
ret
jne
add
addr16
hlt
les
xchg
test
xchg
fidivrl
pushf
and
add
ficoms
outsl
push
aam
inc
pop
push
arpl
cld
jno
aam
lcall
rorl
xor
cmp
push
push
sbb
jecxz
pusha
loope
and
jo
std
ret
arpl
stc
fnstsw
push
out
test
push
xchg
xchg
or
rcrb
leave
and
jl
loop
sbb
push
xchg
or
xchg
shll
xor
in
test
inc
mov
sbb
push
nop
add
cmpsb
xchg
pop
icebp
mov
push
cli
push
sahf
push
jb
jbe
test
or
mov
add
cmc
pop
dec
mov
push
andl
mov
fisubrl
and
dec
mov
out
pop
addl
adc
mov
xchg
adc
jnp
dec
pop
jmp
cmp
xchg
or
lret
or
pop
aas
rcll
or
jbe
pushf
out
xor
or
in
xchg
pushf
pushf
ret
xchg
xor
or
mov
xchg
clc
je
push
or
pusha
jg
push
cmp
sbb
dec
rorb
sub
inc
iret
cwtl
pusha
cmp
jle
jg
push
and
hlt
xchg
pop
out
and
or
add
roll
and
inc
or
lock
and
sti
pop
dec
mov
adcb
std
push
push
or
sub
into
inc
lds
jno
pop
mov
jae
lea
sub
push
dec
xlat
pop
or
push
xchg
cs
std
add
sbb
xchg
testb
ljmp
inc
cmc
and
ret
or
mov
or
rcr
xor
sub
mov
pop
push
mov
sarb
fs
or
aam
les
js
addb
mov
test
mov
clc
cmp
jae
cmp
hlt
jmp
sbb
push
mov
dec
mov
fwait
mov
int
cmp
ficoml
or
fnstenv
cmp
cli
or
mov
dec
push
ficompl
shlb
rcll
jo
cmc
mov
int3
lcall
mov
mov
push
lea
pop
push
xchg
xchg
cld
add
insb
lods
test
add
aam
lret
clc
xor
pop
mov
fildl
and
and
push
subb
sbb
sub
cmpl
push
adc
pop
test
adc
push
jno
jl
inc
pusha
xorb
pop
cmp
jbe
or
jne
push
jp
mov
xorl
hlt
jg
loopne
push
in
pusha
cmp
jne
mov
add
xorl
add
jmp
out
jl
imul
push
mov
std
shrl
sbb
fildll
loope
mov
pop
push
enter
rol
dec
sarb
into
mov
push
dec
add
int3
sbb
sbb
jp
jae
jno
or
out
mov
add
or
ss
sub
shrb
imul
idivl
aas
sub
mov
adcl
adc
jmp
sub
aas
push
add
mov
adc
dec
fs
push
or
push
lea
mov
leave
ret
insb
jns
fildl
and
dec
dec
fadds
in
mov
mov
ret
adc
and
jae
cmp
testb
ljmp
data16
leave
xchg
add
adc
mov
sub
popa
movb
push
sub
mov
pop
mov
cmp
adc
jne
sub
push
scas
sub
das
clc
xor
mov
push
mul
seto
neg
or
and
mov
push
les
dec
mov
xchg
ror
cmp
adc
or
pop
jmp
sub
push
test
in
lcall
pop
scas
popf
icebp
xchg
movsb
xor
cs
mov
mov
inc
xchg
negl
push
loop
rorb
pop
out
jecxz
rolb
ret
fisttps
push
mov
inc
pop
push
or
add
and
jbe
in
ss
add
push
mov
cmc
pop
sub
sbb
ds
ficomps
dec
pop
jmp
mov
sub
shll
and
push
sbb
or
out
mov
ja
aas
fisttps
les
hlt
xchg
sarb
and
dec
xor
sub
or
pop
pop
push
push
or
dec
addl
adcb
mov
mov
sbb
jl
repnz
jg
or
xorl
dec
push
sbb
ja
sahf
inc
cmp
xchg
outsb
and
sub
daa
sub
cs
push
xchg
pop
mov
cmp
and
push
jle
or
icebp
dec
lea
call
bound
ficompl
mov
dec
orb
push
leave
inc
es
stc
mov
or
or
cmp
sti
xchg
dec
mov
popf
call
mov
sbb
inc
ret
sbb
push
sbb
dec
sbb
jno
adc
sbb
jmp
jmp
or
adc
jmp
jb
mov
pop
clc
mov
push
cmp
into
js
pop
pop
and
xor
xor
jp
mov
shrb
inc
cmpl
popf
mull
and
mov
and
pop
jl
cmp
imul
mov
xchg
pop
addr16
dec
ss
inc
negb
imul
int
mov
or
outsb
add
mov
xchg
int
jb
sub
add
shrl
cmp
fwait
ljmp
lods
and
or
adc
sub
mov
xchg
hlt
push
in
pop
adc
xchg
lea
hlt
andl
adc
lahf
xor
imul
and
fcoml
pop
decb
xchg
mov
or
add
pop
fs
mov
or
les
push
jno
cmp
mov
mov
lret
cmp
jmp
dec
shr
sarb
aam
inc
or
xorb
cmp
mov
dec
push
mov
adc
aad
shl
shl
and
adc
clc
push
sbb
sbb
stos
out
leave
rolb
mov
mov
jle
push
out
imul
mov
imul
ret
pusha
fildl
nop
pop
pop
pusha
dec
test
pop
mov
inc
xchg
addl
icebp
out
add
or
pop
cmc
cltd
inc
xlat
inc
leave
lea
mov
pop
outsl
lea
aaa
fdiv
mov
imul
xor
add
lret
mov
shlb
push
fldt
ret
add
or
mov
lret
jne
adc
cmp
mov
lea
cmp
or
or
aaa
ds
add
psubusb
dec
adc
jbe
jae
fstps
mov
push
mov
push
mov
xorl
lea
je
push
cmp
andb
sub
sbb
sbb
in
out
mov
flds
pop
lea
jae
pop
mov
pop
sbb
jnp
leave
jmp
mov
ret
and
clc
jmp
pop
fs
sbb
mov
lds
inc
data16
jmp
jae
addr16
ja
pop
adc
test
pop
lsl
add
or
mov
and
hlt
ret
xor
dec
bound
xchg
orl
mov
adc
pushf
sbb
aam
push
out
xor
mov
xchg
push
clc
and
pop
loope
enter
cmp
add
rol
sbb
sbb
xchg
rcrb
pop
mov
xor
mov
inc
or
sub
push
sbb
les
xchg
bound
pop
shrb
and
aas
ljmp
jle
sub
add
xchg
mov
mov
cmp
loop
jnp
adc
mov
xlat
pop
push
or
adc
add
repz
mov
rorb
push
pop
mov
cmpl
ljmp
test
mov
stos
push
pusha
cmpsl
daa
jle
push
push
stos
xchg
sbb
sbb
mov
out
aas
jo
lock
leave
aam
pop
aas
fstpt
jb
adc
pop
stc
inc
dec
jmp
push
mov
je
rolb
popa
add
shr
lods
inc
dec
outsb
and
orl
or
inc
inc
push
cmc
test
dec
jbe
inc
push
push
sbb
les
push
adc
pushl
nop
dec
mov
les
sbb
repz
sti
or
mov
jle
cmc
loopne
cltd
shlb
orb
push
leave
or
lahf
adc
cmpb
je
cmp
jae
inc
out
and
out
push
sbb
xor
clc
mov
stc
decb
fsubl
push
push
push
jle
adc
adc
movb
mov
inc
dec
in
pushf
add
icebp
sub
nop
dec
movsl
sti
fbstp
sub
xchg
xchg
push
sti
add
outsb
lock
divb
cmpsb
add
pop
add
jnp
negl
cmc
dec
in
mov
push
pop
arpl
aam
inc
xor
jbe
pop
pop
xor
jne
and
mov
mov
data16
int
and
xadd
jae
ret
sahf
lret
push
shll
and
inc
sub
pushf
jns
sti
and
jns
mov
push
mov
sbb
and
or
dec
pop
xchg
fdivp
into
cmp
push
dec
les
roll
testl
jo
or
add
ret
clc
shlb
or
pop
imull
cmp
sub
bnd
inc
or
add
je
inc
inc
es
xor
inc
mov
pop
sub
into
and
mov
jmp
sbb
and
js
dec
fnstcw
fmuls
cld
push
and
inc
cmp
arpl
and
push
imul
pop
xchg
cmp
xchg
mov
jno
lea
stos
hlt
or
add
jb
cmp
xor
mov
jb
ret
repnz
mov
in
fiadds
addr16
loope
push
imul
addr16
inc
pop
in
sbb
out
call
out
adc
push
stos
js
push
dec
cmp
psubusw
cmc
dec
call
xor
pop
cmp
cmpsl
and
pushf
or
nop
dec
ja
mov
mov
ret
ja
xchg
out
cwtl
add
lret
cli
mov
or
je
mov
push
jmp
mov
stc
jne
int3
movsl
rolb
clc
jb
int3
cmp
sbb
ret
adcb
sub
or
lret
pop
xorl
jne
ficompl
fs
and
ja
or
push
outsb
clc
iret
push
movsl
pop
fmuls
mov
add
hlt
dec
es
es
mov
mov
adc
lods
push
dec
jns
ja
add
jne
mov
mov
inc
xor
cmp
insb
xor
or
xor
fcomps
add
test
inc
push
adc
cmp
jns
cmp
jbe
sti
push
mov
pop
and
std
or
mov
mov
push
lret
dec
rorb
mov
sub
cmp
test
mov
jmp
add
push
shll
data16
cmpsl
dec
add
pop
js
push
stos
rolb
jo
push
aad
into
adc
add
pusha
dec
mov
sbb
adc
pop
nop
or
push
shrb
cltd
dec
push
dec
mov
aad
dec
push
dec
mov
sbb
inc
mov
mov
je
addr16
pop
ja
push
ret
in
push
lcall
sub
jns
add
or
lods
insb
add
lods
int
imul
movl
adc
bound
sub
add
aad
push
push
rcr
sbbl
xchg
xor
mov
or
outsl
movsb
cmp
cmp
aad
add
xor
xchg
jmp
js
dec
mov
inc
xchg
jmp
cmp
arpl
ja
add
fsubrs
push
cmpsl
test
jo
out
fs
add
call
sbb
flds
insb
push
jo
in
test
xlat
test
shrb
push
xor
imul
les
fstpt
inc
clc
mov
aad
pop
inc
mov
jb
pop
push
cmp
fcomps
shl
sarl
cmpsb
test
inc
jmp
cld
mov
repnz
inc
jae
adc
inc
cmp
and
sbb
cltd
in
push
dec
xchg
sahf
out
dec
or
imull
cmpsl
push
in
and
pop
jmp
sub
cli
cltd
dec
push
push
movsb
test
push
mov
je
and
xlat
data16
dec
mov
or
fwait
hlt
pop
and
dec
mov
nop
aad
mov
addl
out
push
dec
push
loop
test
lods
je
push
xchg
inc
popf
mull
clc
loope
repz
lret
subb
and
add
stos
lock
cmc
pop
add
jae
adc
adc
clc
xchg
dec
sahf
adc
nop
inc
adc
adc
nop
inc
adc
shlb
add
inc
inc
add
daa
inc
adc
mov
mov
add
notb
adc
pop
or
sbb
jge
loop
xchg
mov
mov
iret
mov
bound
sub
shll
add
int3
and
or
lea
inc
cmp
inc
adc
rcll
pusha
mov
adc
leave
gs
mov
xchg
sbb
mov
and
pop
inc
sbb
xchg
sbb
cmp
and
insl
xchg
cmpsb
loope
xchg
mov
mov
ret
push
mov
icebp
rclb
js
clc
add
cmp
ja
std
or
cmp
adc
mov
cmp
popf
cmpl
mov
pop
and
xor
fisttpl
shrl
pop
negl
xchg
movsb
mov
add
add
or
cli
pop
fsubrl
mov
mov
mov
sti
lock
mov
sub
mov
xacquire
xchg
and
data16
out
lret
scas
loopne
sahf
nop
lret
cs
or
sub
dec
je
mov
je
sub
test
fsts
test
std
arpl
fadd
dec
dec
movsb
sub
adc
loop
lock
mov
cmpsl
int
das
xchg
dec
leave
jmp
cmp
jne
push
incl
clc
jmp
push
add
shlb
or
xor
jmp
mov
fwait
inc
loopne
jg
inc
mov
xchg
sbb
mov
in
xchg
mov
sbbb
add
or
ret
dec
roll
ret
cs
jl
push
push
daa
pop
push
js
fildl
bound
and
adc
sub
mov
shl
outsl
pop
inc
clc
fdivrl
cmp
je
cmp
push
jmp
inc
sbb
adc
pop
leave
adc
cli
mov
mov
mov
lock
jmp
sti
movsl
inc
jae
je
xchg
push
and
lock
cmp
jmp
xchg
sbb
mov
ret
mov
xorb
jns
mov
mov
cmp
repz
outsb
or
jmp
mov
mov
add
pushw
and
shl
call
inc
sbb
inc
sbb
xchg
addl
jo
mov
adc
sub
mov
fdivrs
mov
dec
movb
xor
repnz
sahf
sbb
outsl
add
jmp
jg
mov
mov
mov
pop
push
lea
push
orl
shll
lea
clc
mov
dec
cmp
in
cmpsb
add
dec
mov
inc
test
cltd
lahf
bnd
sbbb
and
ja
add
sarl
movl
lea
adc
hlt
sbb
sbb
mov
movsb
push
je
xchg
dec
int3
sbb
pop
std
pop
push
push
push
xor
movl
popf
pop
lcall
cld
adc
int
mov
mov
push
cmpsl
jno
xchg
dec
adc
aad
loopne
xor
cmp
aam
fcmovb
push
add
sbb
jle
add
sub
test
shlb
or
fucomp
test
cmpl
add
mull
arpl
jne
push
pop
dec
pop
lcall
or
or
and
add
fadds
lcall
sbb
add
fsubr
xor
in
push
es
loopne
ret
sbb
in
lods
pushf
push
or
in
loope
cwtl
push
inc
adc
shll
ja
xor
imull
jno
add
aas
testl
mov
dec
pop
aam
cmp
push
push
pop
mov
push
mov
and
out
cmp
jl
sbb
jb
pop
rolb
mov
ljmp
jl
sbb
in
orb
add
int3
adc
add
mov
mov
jbe
rclb
or
xchg
pop
mov
icebp
aam
push
aam
das
in
inc
cs
popf
int3
push
jne
adc
cmpsl
ror
push
and
or
inc
aam
xchg
ljmp
add
jle
jne
adc
sbb
es
add
mov
shl
mov
insl
fstl
sub
pop
movsb
jmp
je
inc
adc
mov
xchg
int3
cmp
jne
push
sub
xor
push
jo
inc
pop
loopne
jo
mov
shlb
aaa
mov
rolb
mov
jo
inc
fimull
mov
pop
mov
call
push
or
std
rorb
sub
cmpb
sub
sub
fisttpl
mov
push
mov
lock
dec
je
sbb
loop
push
sahf
sarl
jge
cld
dec
loope
je
adc
sub
lcall
es
and
daa
dec
dec
in
cmp
imul
add
inc
inc
dec
add
lods
cmpsb
cmp
test
lea
mov
or
rcr
movsl
mov
jecxz
adc
push
in
sub
sarb
and
or
rcrb
push
inc
rclb
neg
sbb
mov
and
xchg
mov
and
pop
lock
test
imul
jb
fwait
cmp
push
push
mov
add
mov
xor
push
mov
jbe
loope
into
neg
sbb
and
push
push
lds
sahf
sub
dec
add
mov
into
testl
mov
push
cli
inc
call
jl
adc
and
lea
into
dec
xchg
fildll
push
adc
sti
dec
lock
pushl
and
add
sbb
shrl
clc
adc
pop
insl
jo
and
sarb
push
mov
cmp
ret
pop
shl
dec
dec
imul
stos
xchg
or
jle
cmpl
jne
pushl
shlb
push
mov
test
pop
xchg
cltd
insl
rclb
fadds
adc
decb
push
push
jno
mov
push
fmuls
and
or
add
lock
std
cmp
cli
adc
fldcw
mov
or
lcall
jo
xchg
testl
sbb
add
mov
adc
push
push
pushf
push
jg
xor
adc
es
xor
icebp
ja
loope
movb
jmp
cmp
jne
int3
clc
adc
jae
fldz
xor
jl,pt
dec
and
movb
pop
mov
sub
push
adc
outsb
aaa
dec
adc
in
sub
or
fdivrs
in
add
adc
or
lahf
pop
testl
dec
or
mov
flds
or
adc
addb
pop
aam
les
push
nop
pop
cmp
iret
push
adc
leave
test
xchg
push
outsb
iret
push
xor
mov
xlat
pop
sbb
or
sub
cmc
test
adcb
xchg
test
mov
fs
insb
xor
rolb
adc
out
int3
mov
sbb
push
push
or
adc
ds
sbb
dec
inc
cmp
add
xchg
cmp
push
repnz
cmpsl
gs
pop
push
push
lret
jl
xchg
addb
sahf
daa
push
jbe
xor
sbb
or
xor
jge
mov
mov
arpl
mov
bound
outsb
add
sub
lcall
inc
pusha
fmull
scas
rclb
push
out
push
popf
dec
insl
push
push
push
aaa
call
mov
fcoml
and
stos
push
jp
aaa
xor
cli
mov
mov
xchg
and
and
inc
add
add
popa
outsb
stc
js
xchg
leave
jae
mov
popa
in
ds
shl
lock
mov
mov
jge
pushf
outsb
int
dec
mov
fmuls
or
call
add
repz
or
adc
ss
test
jmp
mov
pop
xor
inc
or
shl
sbb
push
xchg
xlat
push
adc
push
cmp
add
aas
xchg
shrb
jo
sub
mov
pop
cmp
push
enter
dec
mov
push
jne
in
scas
das
cs
sub
push
push
mov
adc
mov
cmp
push
insb
repz
nop
push
cmp
push
add
dec
xchg
addl
xor
pusha
or
push
mov
push
mov
insb
push
in
or
cmp
push
lret
lods
popa
push
sbb
ror
xchg
sub
push
jecxz
cmp
xor
adc
or
daa
out
push
xor
jb
insl
adc
xor
mov
adc
shr
cmp
mov
aas
mov
cltd
mov
cmp
notb
fcmovnb
aas
mov
dec
adc
sbb
pop
enter
mov
mov
cmp
jge
call
jecxz
mov
idiv
push
mov
push
push
test
push
ret
xor
notl
mov
mov
stos
xor
neg
and
test
jg
mov
sub
cltd
ljmp
adc
outsl
aaa
andl
lods
imul
insl
ret
mov
add
inc
rorb
push
sub
imulb
fstpl
push
pop
incl
lahf
lods
js
sub
push
pop
sub
sbb
jbe
std
lea
cltd
idivl
add
pop
and
inc
sbb
das
sub
rorb
out
fnstsw
dec
fs
or
xchg
arpl
loope
jl
mov
cmp
test
mov
cld
int
in
cmp
and
aas
dec
ret
adc
jl
negl
sub
cmp
pop
sbb
dec
nop
or
out
insb
mov
add
xchg
rcr
inc
hlt
mov
test
jns
mov
clc
ljmp
clc
push
sub
nop
loopne
mov
fdivrp
mov
das
fnstsw
sub
mov
mov
mov
adc
mov
pop
add
les
mov
jmp
into
push
xorl
nop
or
clc
fidivl
jmp
push
xchg
cmp
rolb
sub
cmc
push
pop
mov
mov
out
inc
add
sbb
mov
ret
test
add
mov
test
or
mov
cld
cmp
xchg
iret
adc
dec
adc
pusha
fsubs
cmpsl
je
cmp
push
jbe
gs
bound
fcomps
inc
pop
and
jne
lahf
jmp
out
ljmp
push
mov
pop
mov
inc
inc
ret
xlat
pop
stos
das
cmpsl
cmp
js
roll
mov
or
imul
popf
cltd
add
insb
sbb
aam
add
xor
xor
fs
loope
aaa
xlat
jae
iret
xchg
pop
ret
addr16
fimuls
jne
xor
mov
push
jne
sti
inc
pop
cmpsl
sub
pushf
lods
sbb
outsl
cmp
adc
push
leave
jecxz
cs
push
inc
dec
pop
sbb
aad
mov
std
jo
mov
mov
push
sbb
push
and
pop
and
subl
lea
push
push
ficoml
and
inc
adc
mov
imul
andl
push
setp
insb
jo
or
jae
add
outsl
pop
jg
lcall
sbb
sbbb
add
xchg
leave
insl
xor
test
xor
sbb
lret
mov
lret
dec
shlb
mov
mov
pop
aam
pop
and
or
popf
dec
sbb
jecxz
mov
lds
nop
imul
dec
and
inc
add
nop
cli
and
clc
dec
adc
das
out
fisubl
cmp
or
and
nop
or
and
add
xor
dec
cmp
mov
lds
push
je
imul
add
push
mov
scas
and
bound
test
and
sub
cmp
xor
je
jl
clc
arpl
lea
push
lods
mov
es
cmpb
je
push
fstps
arpl
inc
andl
add
push
les
je
dec
xor
icebp
dec
mov
xchg
jle
hlt
xor
fwait
jno
add
cmp
call
icebp
add
shrl
inc
inc
scas
jge
xchg
xlat
das
push
pop
mov
mov
push
movsl
or
aas
gs
testb
adc
or
test
sbb
sub
adc
jmp
sbb
or
xchg
or
or
out
jae
std
and
pusha
sbb
pop
mov
adc
push
adc
fcmovnbe
jae
push
repnz
mov
push
xor
sub
or
push
push
push
adc
fcmovnbe
add
dec
cmp
ret
scas
mov
cld
jno
or
inc
inc
xor
sub
dec
sub
xchg
sti
xchg
pushf
mov
rorl
call
out
push
pop
rclb
les
loope
dec
sub
filds
andb
shll
jb
jno
mov
es
push
sahf
dec
pop
xor
clc
pop
add
xchg
dec
rolb
fadds
jo
mov
rorl
sub
and
xor
sbb
push
ficoms
adc
loope
fldl
sbb
or
push
sub
out
cmp
rorb
xor
dec
pop
push
or
sbb
xchg
lcall
cltd
push
sub
movsl
cli
add
jns
pop
dec
sbb
mov
mov
push
sbb
push
xchg
sub
and
clc
sbb
pusha
xor
mov
pop
sub
push
mov
loop
push
or
inc
and
pop
fistpl
sti
es
push
cmp
in
popa
fs
mov
les
cmc
xorb
push
fimull
sub
xchg
cmp
or
push
adc
cltd
xchg
pop
push
dec
adc
fwait
inc
mov
mov
jp
adc
shrb
shll
jmp
imul
es
mov
popf
inc
nop
adc
loopne
dec
sub
mov
shll
je
push
adc
xchg
cmp
adc
push
jl
pushl
adc
jmp
or
pop
jne
arpl
dec
cmp
mov
sbb
pop
lahf
icebp
cmovp
test
je
inc
dec
enter
mov
js
pop
pop
jne
dec
mov
jmp
dec
mov
sub
ja
mov
cmp
push
push
dec
dec
add
push
pusha
inc
xor
movsl
sub
sub
mov
push
push
cmpsb
mov
sub
leave
js
imul
cmp
sbbb
mov
push
pusha
jle
in
sbb
sarb
ss
mov
mov
std
iret
push
inc
ret
jle
mov
sarl
cmpl
out
jl
mov
mov
sbb
fdivrl
push
inc
mov
mov
ja
ljmp
in
mov
in
pop
jo
sub
inc
sete
adc
loope
and
je
jecxz
test
les
sbb
mov
cmp
push
int3
pushl
dec
dec
ficoml
out
les
add
scas
sbb
and
arpl
pop
jo
or
mov
ret
adc
jne
into
repz
xor
in
add
aam
xchg
clc
es
xchg
push
out
lock
inc
cmp
pop
adc
loope
and
add
mov
pop
dec
sub
jne
mov
shr
push
arpl
popa
mov
sbbb
hlt
mov
das
outsb
test
arpl
dec
cmp
and
cmp
jmp
pop
add
fcmovu
push
iret
mov
lods
fnsave
aad
or
lods
repz
fmul
sub
cmp
dec
add
or
les
out
insb
sti
add
test
add
repnz
out
sub
outsl
mov
jne
in
mov
in
adc
push
adc
inc
mov
shrb
int3
push
jno
ret
jo
in
adc
mov
or
mov
loope
sbb
repz
in
call
sbbl
and
ror
add
cmpl
xor
or
and
in
mov
xor
add
jle
cmp
add
sbb
idivl
enter
adc
bound
mov
inc
insb
adc
orl
je
or
or
add
ja
fisubl
jl
dec
xchg
push
bound
cmpsl
mov
inc
jg
pop
sbb
mov
gs
or
loopne
arpl
insl
xchg
rorb
push
add
inc
add
hlt
xchg
int3
mov
xor
add
or
add
sub
jbe
rclb
repnz
data16
mov
out
clc
cmp
pop
adc
movb
mov
aas
add
mov
or
lret
xor
adc
add
or
mov
sbb
or
mov
lods
arpl
scas
pop
add
loop
xor
dec
add
mov
clts
into
push
mov
or
push
inc
lcall
adc
xchg
add
add
div
lods
mov
cs
data16
movl
ds
fwait
inc
in
arpl
push
jmp
xor
mov
and
aaa
scas
mov
sub
es
mov
inc
cmp
xchg
mov
inc
shll
loopne
cwtl
add
loope
jo
outsl
pop
out
pop
pushf
jb
sub
stos
pop
cmpsl
mov
mov
xchg
mov
in
cmp
jp
pop
gs
pop
lock
add
sbb
xor
mov
push
adc
test
push
add
out
xor
out
push
inc
dec
or
pop
cmc
mov
test
popl
into
aad
ds
inc
add
sbb
test
adc
outsl
add
sbb
push
call
pop
sub
mov
xchg
pop
call
dec
bound
jge
adc
sbb
xorb
adc
enter
adc
repnz
push
stos
add
int
push
testl
es
push
push
aam
sbb
inc
mov
fwait
adcb
jge
add
mov
pop
lcall
fcoml
loope
pop
mov
pusha
imul
dec
add
and
iret
cmp
jno
cmp
and
or
shrb
mov
inc
sub
icebp
mov
aas
nop
mov
cmpsb
inc
adc
in
cmpsl
cmpsb
push
scas
subl
movsb
adc
lds
mov
adc
mov
sbb
add
sub
add
add
pusha
aaa
add
in
push
loopne
sti
jmp
or
addb
movsl
lret
adc
sub
std
js
cli
push
mov
fwait
loopne
les
add
std
les
js
mov
add
popf
jl
inc
lock
testb
inc
ficoml
add
xchg
lea
sbb
cmpb
xchg
aaa
repz
fs
push
ficompl
push
mov
xor
rcll
push
mov
hlt
data16
es
add
mov
sbb
push
test
leave
rorb
aad
mov
movsb
mov
xchg
out
adcb
sbb
in
pop
add
or
xlat
lods
rdmsr
mov
sarb
cmp
xorl
leave
mov
fiadds
test
mov
outsl
pop
cmpsw
dec
mov
in
dec
mov
and
repz
leave
leave
repnz
fisttpl
fisttpll
or
lods
mov
add
notl
mov
lea
ret
dec
daa
insl
cmp
xchg
fs
sub
mov
mov
mov
jno
testb
mov
popf
imul
xchg
adc
clc
sti
pusha
nop
xchg
and
shrl
push
pop
sti
and
pushl
test
add
push
mov
jae
pop
ret
jns
pop
aad
nop
jb,pt
movsl
jne
mov
andb
in
subl
je
mov
mov
cwtl
nop
out
and
sbb
out
pop
repnz
cmpsl
sbb
xor
or
push
jmp
in
or
sahf
push
jb
sarb
dec
inc
push
mov
nop
and
lahf
aam
mov
mov
add
mov
pop
into
adc
lret
or
loopne
test
loop
cmpsl
leave
lods
pop
mov
mov
outsb
sub
jle
xor
add
mov
mov
jge
popa
jge
jp
popf
movzwl
icebp
and
cmp
pop
and
adc
outsb
cmpsl
fsubrl
scas
add
mov
push
icebp
sub
adc
mov
test
inc
push
jge
ret
dec
jecxz
cli
xor
jbe
push
mov
or
and
push
xchg
add
jbe
push
mov
lods
pop
outsl
dec
mov
mov
scas
mov
outsl
ds
mov
push
ljmp
stos
fs
lock
mov
divl
ret
subb
ret
cmp
mov
in
pop
fdivrs
fucomip
add
test
dec
mov
adcb
gs
push
inc
mov
mov
mov
cmp
movsl
enter
notb
mov
fistpl
inc
lock
pushfw
mov
push
pushf
loopne
in
xchg
scas
stos
out
mov
push
push
mov
sbb
ret
push
out
mov
out
pushl
jl
cmp
pop
pop
mov
mov
movsl
lcall
movsb
xor
lcall
pop
mov
sub
cli
xor
loopne
sub
xchg
adc
lock
shll
ret
mov
push
mov
test
aam
sarb
test
sub
jnp
rcrl
pop
leave
inc
dec
pop
clc
add
mov
inc
jmp
incb
inc
out
test
ss
in
xor
xchg
mov
loope
add
push
dec
cmp
jle
sub
jo
in
add
dec
shrb
dec
mov
icebp
sbb
aam
mov
add
sub
lret
xchg
outsl
sarb
or
loopne
pop
mov
add
scas
xchg
loope
fmuls
andl
popa
mov
inc
loope
ret
adc
or
push
loope
push
mov
loope
insb
push
arpl
das
bound
femms
gs
cmp
pop
fiadds
faddl
mov
pop
pop
mov
mov
dec
jno
jns
les
test
les
sldt
xchg
pushf
xchg
dec
sub
insl
jns
test
mov
mov
out
enter
and
in
pop
imul
push
xchg
andl
enter
jae
xchg
push
mov
push
ljmp
cwtl
push
jne
stos
push
aam
sbb
cmp
lret
pop
adc
lret
lds
ljmp
lods
pusha
mov
push
shl
les
in
js
and
stos
test
enter
das
push
js
xor
add
outsl
inc
ror
pushf
mov
push
daa
fadds
scas
loopne
movb
xchg
xchg
jbe
inc
loopne
rclb
jge
loopne
loope
pop
dec
add
push
and
data16
loopne
adc
push
cmpsb
clc
dec
or
and
xchg
fldenv
mov
inc
cmp
dec
imul
push
push
jb
mov
pop
rcrb
inc
pop
push
dec
inc
pop
sbb
imulb
pop
aam
jbe
push
scas
inc
add
popa
push
cltd
test
sbb
stos
xchg
mov
stos
mov
sbb
stc
sbb
sbb
or
rcrb
clc
bound
jno
cmpl
addl
push
sbb
into
xorb
xor
sub
mov
push
and
pushf
repz
mov
adc
rorb
jae
pop
add
pop
test
push
dec
cmp
push
cmp
and
sbb
jge
and
pusha
inc
push
mov
push
mov
inc
sub
mov
mov
es
ja
cs
sub
mov
sub
jp
negb
fsubrl
mov
inc
pop
imul
cmc
jge
lds
push
mov
cmp
aam
cli
sub
inc
dec
js
in
insb
sub
push
sub
adc
daa
mov
daa
das
ret
rcr
push
frstor
test
xor
and
jge
add
imul
jecxz
imul
fucom
imul
push
rorb
xor
or
jns
mov
jge
loop
sub
in
in
sarb
xor
sub
sub
ja
pop
je
lcall
mov
and
push
jecxz
dec
call
inc
jmp
popf
inc
je
icebp
xor
jp
mov
pop
cltd
mov
mov
ret
loope
loopne
rorb
je
sub
cmp
fcmovnb
and
cmpsl
push
cmp
push
pop
js
jno
cmp
xchg
xor
push
mov
mov
movups
lods
inc
fsub
sbb
push
push
and
shlb
push
in
aam
pop
and
fcomps
wbinvd
test
outsl
ljmp
push
test
and
lock
addb
xchg
cmpsl
or
lock
ss
or
mov
xchg
pop
pop
or
leave
mov
or
pop
test
ss
movsb
xchg
sub
fsubrs
out
pop
fmull
add
sbb
inc
call
cmp
push
roll
mov
andb
jnp
or
arpl
add
mov
cli
jns
mov
in
xchg
cmpl
push
mov
inc
push
push
sbb
cmp
lret
ror
test
sub
fildll
ror
test
mov
nop
mov
inc
push
test
int3
add
push
loop
pop
push
icebp
or
xchg
jo
mov
adc
andl
mull
rorb
xchg
xor
or
pop
dec
or
pop
cmp
fwait
test
and
sbb
pop
cmp
add
push
sub
mov
cmpsl
out
mov
add
xchg
add
and
das
pop
sbb
lock
dec
cltd
roll
repz
mov
push
arpl
or
subl
mov
or
fadd
push
enter
fldenv
push
inc
xlat
mov
sub
leave
or
or
out
inc
test
hlt
inc
dec
adc
jo
clc
loope
je
add
lea
push
sahf
pushl
daa
mov
es
ficomps
mov
pop
stos
js
js
pop
clc
mov
pop
add
add
stc
mov
push
jge
cmp
adcl
mov
fs
imulb
mov
xchg
in
push
push
test
test
rcrb
pusha
aad
aaa
outsl
or
push
ja
repz
dec
push
pop
or
or
push
cmpb
or
jns
inc
cmp
push
jae
rolb
in
mov
xchg
daa
add
sbb
push
clc
or
xchg
pop
sub
inc
pop
adc
out
lcall
inc
jmp
into
dec
ret
lcall
in
dec
cmp
test
adc
sub
shlb
adc
sbb
adc
in
fmuls
or
int3
insb
cmpb
test
jmp
mov
cmpsl
mov
push
adc
shl
jne
xchg
cmp
data16
xchg
sti
lea
imul
inc
xchg
push
bound
cmp
add
int3
jp
jmp
fcmovnu
hlt
mov
lret
cmp
jl
je
mov
hlt
int3
xor
sarl
pop
sub
cmp
jle
cmp
lret
icebp
jne
sub
sbb
je
xor
push
add
sahf
sbb
add
push
xchg
cmp
cwtl
in
jge
out
repnz
out
ds
js
sub
push
or
or
and
sub
sub
dec
jmp
paddsb
push
mov
push
dec
adc
lahf
in
cmc
xchg
sub
adc
sbb
mov
xor
divb
pop
cmpsl
ja
cmp
jmp
mov
cmp
in
xchg
cmp
mov
push
pop
inc
rclb
mov
mov
mov
push
paddusb
cmp
inc
or
sub
or
jne
add
or
ret
movups
ljmp
lret
add
mov
adc
int
roll
adc
ss
add
or
cld
stos
fstps
push
or
inc
or
add
mov
cmpl
test
or
and
lds
mov
inc
cmpl
jb
dec
add
add
aaa
add
dec
add
prefetcht2
and
cmp
js
pop
popa
adc
cmpsb
xchg
sub
xor
clc
pop
rol
dec
lds
or
mov
cmp
xor
pusha
sub
rcrl
mov
xchg
repz
xchg
cmpsl
fsubrl
pushf
mov
add
push
sub
push
xor
or
xor
mov
cmp
mov
aad
popa
sbb
xchg
inc
add
pop
adc
push
push
push
mov
xor
push
push
mov
add
dec
push
into
addb
data16
dec
shl
fisttpl
mov
es
or
add
shlb
jl
pop
jl
jmp
mov
leave
add
nop
sbb
or
in
popf
add
mov
out
push
adc
sahf
or
hlt
push
sub
ret
or
add
cmpb
add
daa
xor
sbb
push
addb
add
adcb
mov
lods
hlt
xor
faddp
jmp
dec
js
push
pop
pop
push
xchg
sbb
ja
add
cli
jmp
inc
or
cmp
push
inc
cmp
rcll
mov
bound
inc
sub
pop
mov
rclb
dec
outsl
sub
scas
xchg
push
add
mov
xlat
lret
mov
adcl
inc
sub
ljmp
sbb
sbb
scas
ret
lock
pop
scas
sbb
lret
jg
jne
adc
cmpb
in
enter
ds
or
pop
inc
add
pop
sub
add
add
negl
sbb
ret
add
mov
mov
inc
mov
add
dec
add
and
shlb
sub
xchg
adc
out
repnz
adc
pusha
outsl
xor
dec
mov
add
mov
jmp
insb
mov
inc
jne
or
fmuls
inc
out
xchg
cmp
cmpsl
in
jecxz
add
or
push
add
test
push
or
push
inc
js
rclb
pop
incl
test
push
bnd
pusha
push
icebp
pop
aaa
icebp
mov
sbb
xchg
loopne
rorb
xchg
adc
dec
pop
cmpsl
dec
jne
ret
and
xor
outsb
push
in
sarb
push
jl
push
sub
cmp
loopne
dec
adcl
lret
push
inc
sbb
into
clc
push
dec
fstpt
push
push
ja
or
sub
jp
out
or
aaa
dec
clc
sahf
ret
push
mov
imul
and
and
inc
push
inc
mov
xchg
bound
loopne
iret
xchg
xchg
loopne
xchg
cmpsl
pop
addb
jbe
dec
shr
mov
neg
push
adc
push
mov
add
mov
js
adc
jne
stos
adc
mov
push
je
inc
jmp
sbb
test
mov
jae
out
lea
inc
in
lods
push
call
push
push
movb
pop
rorb
test
ret
cmc
pop
push
inc
out
push
or
mov
sbb
jl
test
int
jmp
leave
loopne
jb
je
xlat
movl
pusha
js
mov
sub
shl
jnp
jno
xchg
mov
dec
jne
gs
loope
ret
in
int3
add
mov
ret
or
call
jmp
push
push
push
dec
jns
popa
cmc
aad
je
or
sbb
add
jmp
inc
add
mov
pusha
inc
add
push
or
jle
ret
call
push
idivb
mov
pushf
add
sub
jbe
xor
pusha
pop
cmp
adc
mov
lahf
jae
lcall
stos
sbb
je
inc
inc
and
mov
cmpsl
dec
aam
dec
js
jl
subl
cmp
aad
add
push
jbe
and
rcrb
gs
cmc
movl
inc
or
pop
push
rolb
dec
orl
pop
sub
in
sti
in
je
jo
sub
pop
popf
in
dec
dec
outsb
pop
fs
or
sub
in
and
push
test
mov
cltd
inc
push
pop
leave
ret
inc
or
daa
inc
daa
add
repz
sub
pop
ljmp
shrb
test
shll
mov
push
sti
inc
inc
js
inc
sub
outsb
test
sub
std
mov
je
orl
push
test
adc
pop
or
mov
mov
iret
lea
sbb
jmp
cs
mov
pop
loopne
scas
jg
cltd
ret
pop
mov
pop
pop
sub
out
jnp
inc
ss
pop
jo
push
lret
fs
popf
dec
daa
mov
add
lods
insl
cmp
popl
inc
cmp
flds
sahf
nop
xor
popf
pop
and
mov
jbe
dec
xchg
adc
cmp
dec
jmp
lea
mov
cmp
and
and
push
sbb
adc
push
js
shl
jp
sub
sbb
nop
inc
add
and
sub
lds
sahf
push
adc
rcrb
adc
adc
dec
mov
cld
mov
inc
push
cmp
enter
pop
cs
xorl
pop
pop
lock
repz
imul
ret
or
cmp
iret
mov
and
sub
insl
pop
ja
cmp
xchg
arpl
out
int
add
repz
xor
and
adc
cmp
repnz
push
lea
movsb
sbb
fsubr
push
jnp
mov
sub
cmp
push
mov
sbb
scas
in
sbb
inc
xchg
icebp
mov
pop
enter
clc
adc
in
push
push
lea
or
fldcw
shrl
sub
cmp
jp
sbb
andb
sbb
jae
mov
jecxz
in
or
addr16
dec
pop
mov
mov
subl
imul
sbb
jge
dec
shll
gs
dec
push
xchg
out
or
or
enter
arpl
ror
imul
sub
in
mov
iret
cltd
sbb
insl
pop
rolb
lret
out
mov
mov
into
mov
pop
mov
dec
and
inc
or
test
ficoml
les
pop
mov
add
mull
leave
push
add
lock
mov
mov
push
xchg
imul
push
mov
mov
pop
pop
push
outsl
mov
js
out
xor
adc
in
pushf
sbb
pusha
sub
std
pushf
sbb
sbb
in
addr16
sbbl
popa
xor
mov
add
pop
les
push
xor
or
in
sub
pop
or
mov
mov
xchg
pop
aad
enter
mov
xor
adc
sub
in
xor
daa
std
dec
inc
or
test
push
sbb
cmc
and
add
popa
add
ret
dec
adc
into
and
aad
jecxz
jl
mov
cld
adc
mov
adc
movsl
arpl
sub
push
pushl
mov
fwait
xor
repz
cmpsl
sub
cmp
mov
push
mov
adcb
insb
and
dec
adc
adc
fucom
pop
daa
lcall
add
aam
mov
cmp
sub
or
add
mov
fwait
nop
addr16
or
dec
push
adc
push
loopne
movl
pop
rorb
lods
imul
stos
dec
test
push
jmp
loopne
iret
mov
fstpl
adc
dec
lea
js
call
fucomp
mov
cmp
mov
sbb
lea
adc
push
mov
sahf
repz
arpl
pushl
insb
testl
lcall
sub
dec
xchg
hlt
jns
stos
or
loope
popa
inc
inc
push
call
scas
xchg
lea
push
mov
dec
sbb
or
insb
pusha
rcrl
jmp
loopne
movsl
push
pusha
jo
inc
insb
pop
and
jecxz
xchg
cmpb
xchg
push
add
adc
xchg
add
shlb
add
inc
pop
test
and
mov
push
aas
idivb
inc
sub
shl
or
adc
mov
pop
add
ret
in
add
mov
add
out
mov
popa
leave
je
or
cs
sub
add
xor
movsl
movsl
sub
addr16
push
sbb
mov
jb
out
daa
pop
fmuls
mov
out
loop
cmp
add
int3
and
aam
arpl
mov
mov
push
cmp
ss
and
icebp
jbe
lea
rorb
mov
lcall
jbe
jmp
mov
daa
lds
push
adc
mov
sub
cmpsl
xchg
popf
mov
out
inc
lock
xor
xchg
in
scas
jne
xchg
enter
mov
mov
pop
jb
xor
dec
mov
and
pusha
ss
enter
test
push
ljmp
into
or
inc
push
aam
insl
out
sbb
jo
gs
sub
adc
fidivl
push
mov
xor
je
sti
adc
push
cmpb
mov
push
adc
rol
xor
dec
stos
dec
fisttpll
shrb
adc
add
sbb
loope
add
cmp
movsl
jns
xor
shlb
enter
mov
sbb
lea
dec
imul
stc
adc
add
mov
fstpt
jo
dec
jp
into
mov
xor
cltd
sub
mov
xlat
push
adc
jb
ret
xchg
orl
addr16
loop
adc
pop
jnp
test
push
pop
xchg
enter
js
mov
dec
arpl
dec
xchg
or
xor
inc
jecxz
inc
jle
icebp
jne
xor
add
pop
jmp
dec
cmp
cmp
in
cmpb
mov
pop
lret
aam
xor
nop
aaa
in
dec
or
out
jnp
orl
push
push
and
bound
je
sub
or
sbb
and
pop
mov
mov
cmp
jne
call
jae
sarb
loopne
dec
adc
or
pop
xor
int3
jg
cmp
js
cmc
sbbl
push
adc
cltd
pop
mov
add
je
in
mov
andl
loopne
jle
push
push
sbb
jecxz
cmc
add
push
or
cmp
cmp
aas
aad
xchg
gs
cmp
pushf
mov
inc
pop
add
fdivs
ret
push
inc
or
adc
fsubr
aam
out
sar
mov
movsb
and
pop
jp
stc
xor
mov
jmp
mov
adcl
mov
ljmp
out
add
test
hlt
dec
fcoml
cmpsb
push
roll
mov
dec
rcr
fbstp
push
push
push
mov
data16
lcall
add
pusha
dec
cmpsl
addb
dec
adc
push
cmp
roll
xchg
and
imul
cmpsl
adc
rorb
scas
jge
sub
fcompl
xchg
push
pop
adc
pop
pop
ja
pop
stos
cld
pop
pop
inc
xor
enter
mov
adc
pop
cld
das
rorl
incl
jmp
xor
dec
or
sbb
add
or
mov
rolb
nop
cld
ljmp
notb
test
mov
adc
add
enter
sub
mov
or
mov
fcoms
mov
xor
or
dec
and
and
sub
and
ficompl
out
dec
cmp
cld
xchg
xchg
xor
ljmp
add
insb
cmp
dec
es
les
add
pop
outsb
mov
pop
lcall
and
sbb
fcoml
clc
push
push
push
pop
inc
pusha
in
cmp
sahf
dec
xor
or
lock
push
dec
pusha
pop
inc
jecxz
shlb
lea
sbb
sar
ret
ja
dec
out
mov
in
dec
add
or
push
repnz
add
push
stc
xor
push
lea
sbb
and
push
jmp
cmp
mov
clc
jg
cmp
scas
pop
orl
jno
lea
sbb
addr16
lea
mov
or
mov
and
popa
dec
and
pop
imul
xchg
mov
js
pop
xchg
mov
jl
bound
cwtl
or
mov
leave
rcrb
inc
call
sbb
scas
test
add
and
and
stos
mov
fnstcw
mov
xchg
add
xlat
push
dec
push
fadds
or
sbb
push
test
and
inc
lods
xorb
dec
mov
cmc
shlb
les
sbb
push
cmp
test
sbb
xchg
mov
leave
test
dec
movsl
insl
add
cmp
je
lods
call
pop
mov
add
int3
sbb
mov
and
imul
aaa
testl
icebp
mov
rcrb
xor
out
push
cmp
ficoms
out
popa
push
xor
movsb
inc
roll
mov
mov
imul
pushf
jmp
push
in
popf
push
push
jae
sbb
pushf
shll
mov
fisubrs
dec
xlat
scas
sub
popf
lods
ret
jb
adc
sarl
in
mov
aaa
or
call
movl
add
inc
ljmp
dec
or
or
sbb
sub
rep
sub
xchg
fwait
jae
add
or
xorl
add
in
cmp
sbb
xor
inc
cli
call
add
ss
push
mov
inc
jb
out
mov
adc
jno
xchg
cmp
add
jnp
in
push
mov
je
dec
jne
and
xor
mov
adc
add
adc
cmc
lahf
and
xchg
lret
mov
sarl
push
repnz
cmc
aam
adc
sub
fisttpll
cmp
add
jecxz
rcrb
sub
mov
xchg
jge
icebp
data16
pop
andl
loop
pusha
sub
adc
movl
xchg
daa
xor
mov
cmp
jne
mov
lea
cli
jb
mov
or
mov
pushf
or
test
loop
cmp
and
popf
pop
push
mov
ret
inc
pushl
test
mov
mov
mov
push
pop
and
mov
lcall
and
inc
lods
pop
mov
push
ljmp
inc
addb
daa
pop
stos
imul
lock
loope
or
xor
inc
push
push
pop
test
ret
xor
adc
inc
mov
mov
xor
dec
push
clc
aaa
test
cmpsb
adc
or
cmp
pop
rolb
jnp
inc
inc
xor
fmuls
or
call
dec
jmp
popf
dec
repz
les
lahf
fs
add
sbb
adc
xor
cltd
iret
mov
in
or
adc
mov
jl
push
mov
je
push
scas
adc
dec
push
push
adc
mov
adc
inc
rcrl
or
gs
mov
xchg
push
xchg
cld
inc
xor
jmp
dec
pop
insl
ret
or
jbe
les
ljmp
add
dec
jo
dec
jbe
fdivs
adc
pop
call
fstpt
push
and
sub
lret
dec
push
xor
sbb
fs
jmp
dec
adc
lcall
push
adc
pop
das
adc
lock
icebp
bound
scas
adc
mov
sub
push
sub
lds
mov
or
sbb
es
cmp
jge
dec
sahf
or
lcall
inc
cmp
sbb
stos
jl
pop
test
pop
sub
xlat
inc
pop
out
push
sbb
andl
and
rcll
and
mov
movsl
xor
xchg
push
pop
sbb
add
xor
dec
test
push
and
adc
mov
test
lea
call
addl
pop
orb
mov
sbb
sub
aad
mov
shrl
ss
mov
sub
xor
mov
adc
mov
daa
cmp
inc
lret
jno
ja
orl
add
xchg
xchg
push
mov
push
dec
clc
mov
xchg
daa
ss
push
cmpb
je
push
cwtl
pop
push
jmp
popf
sahf
lcall
movsl
dec
loop
push
loopne
push
and
push
add
lods
or
fdivl
inc
lods
cld
js
fistl
outsl
inc
adc
inc
popw
or
cwtl
or
repz
mov
xchg
jle
test
or
sub
lods
mov
je
xchg
cltd
jp
mov
pop
inc
xchg
inc
mov
adc
xchg
lret
shlb
cmp
pop
fistps
jmp
adcb
push
scas
mov
addr16
or
xchg
pop
xor
add
fdivr
in
je
popa
inc
dec
mov
data16
sbb
dec
mov
adc
filds
cltd
pop
loope
fistps
push
jmp
mov
loope
popa
sbb
bound
aaa
pop
xchg
roll
pop
out
movb
add
js
out
testb
mov
sbb
inc
push
je
incl
mov
adc
mov
andb
mov
jle
in
dec
dec
xor
aam
dec
add
inc
cli
dec
inc
or
pushf
sbb
sbb
and
adc
sbb
xorb
sti
call
and
pop
out
sub
lea
fucomip
pushf
xchg
add
adc
xchg
mov
pop
shrb
cmpsb
cwtl
jno
fwait
inc
mov
arpl
pop
sbb
ja
inc
mov
aad
mov
cmp
mov
fidivrl
cmp
cmp
and
mov
fcomps
mov
repz
cmpsl
int
sbb
js
push
pop
pop
pop
std
add
dec
xchg
ss
push
or
adc
cmp
and
fldt
lock
dec
cwtl
push
adc
pusha
test
in
hlt
pop
pop
jno
lods
or
inc
jo
jmp
jae
jns
sub
inc
insb
test
push
aas
push
filds
leave
and
add
aas
jo
test
cli
insb
cmp
pop
xor
xchg
in
pop
or
add
add
cli
cmp
inc
mov
aad
gs
call
scas
aam
cmp
jge
cmp
movsb
xor
sub
cmpsb
mov
insl
ljmp
push
dec
jecxz
inc
adc
sahf
sbb
pop
shlb
movsb
add
pop
and
jl
in
sbb
in
dec
inc
sub
dec
lcall
or
xchg
xchg
add
jecxz
inc
fidivrs
mov
and
sub
push
jo
fldcw
xor
push
xchg
adc
pop
das
inc
sbb
sub
push
inc
addl
sbb
sub
pop
orl
lret
pop
or
and
and
pop
mov
push
sub
and
or
jne
adc
movsb
add
add
sbb
sbb
xor
dec
in
aaa
dec
pop
add
sub
add
xchg
aas
movl
cmpsl
jo
pop
mov
cmp
or
push
sti
push
pushf
push
cmp
dec
andl
jo
push
mov
outsb
pop
notb
popa
xor
insb
inc
pop
push
sub
inc
cmpsb
sub
shlb
shrb
add
movsl
lea
inc
add
cld
pusha
mov
pop
ret
dec
js
pop
sub
xor
jle
daa
daa
leave
lea
jp,pn
leave
or
xor
jp
inc
cmc
mov
jo
aaa
cld
mov
pop
popa
repz
cltd
adcl
dec
and
loopne
mov
mov
and
loope
pop
pop
mov
sarl
out
les
sbb
push
clc
sub
xor
xor
adc
mov
pop
mov
mov
xor
and
shll
jo
or
lret
adc
inc
cs
sbb
loopne
ss
inc
aaa
push
sbb
ss
pop
dec
cmp
je
jmp
leave
mov
mov
lcall
ljmp
enter
mov
sbb
or
cwtl
xlat
dec
mov
lds
fnstcw
xchg
dec
jo
out
pop
cwtl
movsb
xchg
cwtl
outsl
jne
lea
hlt
xchg
cmp
mov
mov
sub
rcrb
inc
loopne
and
ds
cmpsl
and
push
aas
or
jmp
popf
and
push
and
in
dec
mov
js
adc
cmp
fimuls
sub
push
push
es
or
xor
cmpb
jns
pop
scas
add
push
mov
and
xchg
mov
lods
je
dec
cmp
push
adc
pushf
inc
jp
dec
int3
sub
cwtl
or
push
add
jo
lahf
mulb
pop
pop
mov
mov
cmp
std
mov
fs
in
cmp
cmp
jbe
decl
ljmp
pop
lea
add
lea
jb
and
dec
cmp
jne
or
jae
push
lahf
sbb
sahf
into
test
clc
xor
jmp
scas
es
ds
mov
mov
add
push
test
rcrl
push
jne
cwtl
scas
mov
add
iret
lds
and
test
or
adc
mov
pop
xchg
push
push
xchg
call
jg
popa
mov
mov
lods
js
push
incl
mov
dec
lods
or
aaa
call
aam
push
add
cmp
hlt
pop
iret
mov
push
jb
enter
mov
xchg
orl
idiv
sub
and
std
inc
push
lods
cwtl
xor
aad
negb
cmp
cs
jb
int
clc
imulb
inc
dec
ss
scas
sbb
mov
adc
mov
or
insl
outsl
xlat
add
pop
jge
shrb
xchg
testl
xor
adc
pusha
add
or
lods
sub
cmpsl
fcmovnbe
sbbl
imul
mov
push
test
cs
or
xor
adc
sbb
cmp
shl
test
dec
cmp
xchg
inc
push
mov
mov
pop
adc
push
inc
push
sbb
pop
or
inc
lcall
ret
mov
sbbb
inc
pop
in
sbbl
push
test
out
jmp
dec
test
int
inc
and
nop
xlat
int
pusha
sbb
sub
sbb
nop
pop
inc
jb
pop
je
leave
push
xor
sbb
pop
add
orl
leave
and
fs
xlat
cs
iret
mov
push
xor
inc
pop
push
es
sbb
push
jne
ds
cmp
dec
and
and
in
dec
vrsqrtps
mov
lods
or
sub
inc
daa
sti
and
sub
xchg
pop
mov
xchg
imul
and
xchg
es
pop
insl
mov
adc
xchg
sub
and
out
jb
sbb
pop
mov
leave
adc
xchg
sbb
pop
sub
pop
inc
mov
orb
xchg
iret
ljmp
andb
rorl
pop
imul
xchg
xchg
loope
mov
add
test
stos
lock
or
jae
roll
xorl
push
loop
xor
rcrb
pushf
add
cwtl
and
sbb
add
in
sbbb
inc
xchg
push
inc
loop
add
mov
cs
cmp
loope
push
sub
mov
in
and
in
ror
addl
test
sbb
adc
in
add
jno
mov
push
pop
xorl
js
call
mov
stos
sub
fisttps
and
loopne
addb
test
rorb
loop
cmp
insb
repz
or
dec
pushw
fsubs
and
cs
in
mov
adc
xchg
test
or
dec
loopne
test
mov
adc
jle
lods
test
mov
lea
pop
add
ret
xor
fs
push
mov
in
fwait
inc
movsb
jl
fiaddl
add
sub
or
pop
aad
and
and
xorl
cltd
fwait
inc
sub
call
push
std
dec
add
testl
clc
test
xor
pop
pavgw
adc
mov
movsb
fimuls
xchg
int
adc
aam
mov
cmp
jge
mov
xchg
sbb
jo
or
ret
mov
and
outsl
loopne
rol
xchg
xchg
lods
xorl
movsb
adc
dec
mov
loopne
icebp
out
popa
pusha
adcl
fdivrl
sbb
mov
mov
jo
shr
lock
xchg
in
data16
sti
hlt
pop
in
movups
lock
daa
stc
rcl
jne
mov
xchg
pusha
fisttpll
sbb
outsb
data16
mov
into
push
jnp
or
sub
xor
rcl
add
dec
sti
jnp
dec
pop
loope
sbb
and
imul
pop
mov
pop
pusha
and
dec
and
adc
push
cmp
frstor
inc
push
hlt
arpl
jbe
fiaddl
jne
dec
xor
pop
scas
ja
jnp
cltd
mov
inc
out
dec
lock
or
mov
pushf
fcompl
or
mov
or
add
fldl
icebp
inc
xor
mov
rcrb
or
inc
push
aaa
sbb
adc
cmovg
and
sbb
xor
adc
xchg
es
or
mov
movsl
popa
imul
and
and
mul
mov
call
xor
dec
jecxz
push
addb
adc
adc
push
xor
inc
popf
sub
hlt
cld
add
shlb
lods
mov
and
adcb
xchg
jns
sbb
ds
jbe
jb
pop
popa
outsb
rolb
cmp
inc
jne
cmc
mov
cmp
mov
add
mov
mov
adc
lock
xor
dec
push
out
call
sub
fcomps
xchg
or
xor
push
pop
xchg
mov
repz
or
lea
movsl
mov
or
or
or
sbb
pop
sarb
adc
push
sub
arpl
mov
pushf
mov
ss
fildl
mov
enter
mov
xchg
mov
cmp
jl
or
rol
int
and
and
sub
inc
dec
pop
stos
shrl
push
mov
fldenv
add
mov
push
in
mov
jnp
testb
lea
pop
push
push
xor
xchg
sbb
push
dec
add
cmp
dec
imul
ret
stos
push
test
lret
shll
add
push
in
xor
sub
fst
add
mov
lock
sbb
jge
mov
dec
dec
push
inc
cmp
imul
push
cmp
adc
enter
sbb
jmp
mov
xchg
add
and
mov
add
shlb
add
pop
test
and
cmp
loopne
add
add
lock
push
movsl
lea
or
adc
xor
mov
mov
lea
xor
rol
pop
dec
add
and
sbb
adc
sbb
sub
xor
cld
in
cmp
imul
sbb
clc
inc
cli
out
pop
sub
add
fsubr
add
adc
add
pop
push
sahf
stos
mov
popf
adc
inc
lods
push
fimull
cmp
cmp
xor
and
xchg
int
sub
push
or
fcoms
or
sub
sub
adc
sbb
mov
jp
and
cmc
mov
popl
ss
pop
test
pop
inc
and
xchg
push
add
adc
repz
xor
insl
dec
mov
cmp
les
add
ret
sbb
iret
mov
dec
push
jl
xor
xchg
xchg
add
and
push
pop
clc
ja
xor
pop
insb
dec
push
sarb
sub
sub
aaa
push
std
cld
or
jmp
cmp
mov
ss
je
aaa
js
test
cmpsb
adc
adc
rorb
adc
inc
mov
and
les
sub
push
cmpsb
cmp
andb
push
fdivs
pushf
xor
loop
dec
add
dec
int3
xor
stos
xchg
cmp
jle
or
xor
sbb
add
test
dec
adc
push
mov
jmp
push
sbbl
fstl
or
cwtl
cmp
jecxz
add
ds
dec
dec
lret
sbb
je
outsb
xchg
filds
push
mov
xor
cmp
dec
inc
inc
in
dec
dec
inc
mov
inc
dec
data16
xor
pop
dec
aaa
add
push
data16
lock
outsl
insb
fstps
pop
orl
fwait
out
jo
adc
stc
push
ficompl
mov
test
mov
jno
cli
push
movl
xchg
jle
lea
or
xchg
push
lea
add
dec
mov
xor
mov
fidivl
sbb
movb
and
sbb
insb
and
addl
int
add
add
mov
jmp
mov
sub
mov
cmp
adc
mov
cmp
mov
cmp
jmp
push
sbb
ja
or
insb
mov
adc
fsubl
sahf
sbb
and
pushf
inc
sbb
js
mov
add
sub
dec
pusha
pop
push
dec
int
int
add
loopne
es
add
addl
sbb
cli
call
xchg
mov
bound
adc
hlt
out
jnp
fbld
or
push
or
stos
or
call
mov
imul
push
dec
dec
rcrl
lds
mov
and
push
ficomps
push
fisubrl
stc
pop
mov
sbb
call
inc
xchg
adc
scas
fcompl
add
push
in
sbb
push
add
or
pop
sbb
dec
mov
les
lock
pop
add
fidivrs
imul
mov
pop
mov
sti
mov
adc
jne
cmpb
add
xor
or
cltd
hlt
in
out
mov
mov
xchg
add
lock
fwait
movsl
fbstp
push
sub
popf
mov
push
push
mov
xor
mov
adc
cmp
mov
loopnew
mov
std
scas
inc
sbb
dec
insb
leave
in
movsb
jo
xchg
jo
movsl
test
out
mov
pushf
or
adc
inc
repnz
xchg
movb
add
loope
add
push
cld
sbb
fdivs
xlat
xor
mov
adc
adc
pop
in
push
inc
pop
add
lcall
loope
cmp
xor
sub
inc
sub
inc
out
scas
popf
add
or
idivl
add
movsbw
aaa
xor
jns
int
testb
and
or
or
adcb
push
insl
imul
adc
hlt
inc
sub
scas
insl
hlt
push
inc
pop
popl
inc
mov
out
dec
ds
rolb
stos
fstps
jmp
push
sub
sbb
ret
inc
lcall
mov
ss
cmp
push
push
xor
scas
push
loopne
testl
adc
cmp
lock
mov
fwait
cs
pop
ss
sti
sbb
lea
mov
jp
sbb
imul
mov
xchg
sahf
cs
push
pop
test
sbb
inc
out
pushf
lea
add
outsb
loopne
fcomps
sbbl
push
and
sbb
mov
add
xor
inc
sbb
mov
and
cmp
fstl
or
sub
lret
mov
mov
leave
or
mov
pop
push
fsubs
inc
pop
and
push
sbb
lea
push
or
or
mov
stos
shl
ljmp
je
pop
aad
or
lret
xor
push
loopne
arpl
cmp
or
add
imul
in
lods
shrb
or
jecxz
jnp
lahf
je
sub
imul
xchg
xchg
scas
lgs
ds
jle
loopne
pop
xor
and
push
jbe
push
movsl
lahf
clc
push
mov
ret
aam
rolb
mov
xchg
lods
shl
imul
call
popa
fisubl
repz
movsb
mov
rolb
xchg
ret
cmp
pusha
stos
out
lods
and
call
ficoml
sahf
fnstenv
adc
jge
jmp
fidivrl
jnp
cmp
pop
push
ret
pop
cmp
push
in
stc
xchg
adc
inc
mov
mov
cmpsl
dec
sahf
stc
xor
scas
daa
lcall
movl
testb
stos
mov
cmp
fadd
mov
adc
fs
movsb
push
and
lcall
enter
jge
lock
push
insb
push
push
hlt
add
mov
mov
mov
xorb
cs
or
test
pop
xor
xor
jno
jge
inc
jae
inc
push
scas
sarl
cmovno
jne
or
inc
icebp
addl
add
mov
sbb
inc
lea
mov
jle
rcll
aaa
jmp
add
gs
das
icebp
add
inc
cmp
add
add
dec
push
and
lock
mov
or
pop
pop
in
gs
add
cs
jge
add
sub
scas
xlat
fs
outsb
bound
movsl
add
movsl
rcrl
rcll
jno
insb
xorl
dec
popa
inc
shlb
or
jne
sub
cmpsb
add
out
xchg
mov
push
hlt
ds
sub
mov
adc
lret
sub
incl
les
xor
jmp
push
adc
add
push
push
push
push
aas
es
incl
mov
pop
divl
leave
stos
xchg
or
push
jbe
xchg
mov
dec
jne
push
push
mov
adc
push
cmp
jne
pop
mov
jle
mov
add
pushf
xchg
cmp
or
inc
lea
xchg
add
mov
mull
pop
dec
pushf
mov
push
mov
repnz
xchg
nop
aam
insb
mov
or
movsb
push
cwtl
movsl
sub
and
sahf
int3
fildl
cld
jmp
push
aam
mov
sub
xchg
imul
inc
jo
movsl
movsb
pop
sti
xor
mov
inc
cwtl
lcall
orl
fists
pushf
aaa
movsb
not
ljmp
jnp
cld
add
lea
in
js
mov
adc
cmp
mov
test
stc
or
cmp
jne
stos
or
test
xorl
sti
push
sbb
jbe
pop
mov
inc
insb
popf
enter
adc
mov
sbbb
and
sub
jns
dec
fnsave
dec
push
inc
adc
and
cmc
pop
rol
add
idivb
loop
adc
push
and
pop
sub
lea
leave
push
imul
sub
push
dec
sbb
mov
sub
test
imul
enter
add
or
add
push
sub
scas
hlt
enter
or
sub
jbe
jb
jne
adc
mov
jg
push
push
rorl
arpl
dec
push
mov
mov
addr16
repz
pop
inc
mov
pop
cmp
stos
sti
in
mov
push
or
xchg
mov
daa
addb
aam
mov
jo
or
jnp
xchg
mov
and
nop
adc
push
shld
popa
sub
pushf
stc
negl
and
bound
lods
sub
sbb
inc
cmp
movsb
or
mov
push
aaa
add
add
sbb
dec
test
push
outsb
pop
and
mov
xlat
xor
adc
inc
faddl
cmpsl
adc
xchg
rcrl
xchg
repz
or
and
add
in
jae
adc
adc
pop
arpl
and
pop
jge
adc
js
jnp
mov
js
cmp
jb
dec
dec
sti
jne
jmp
and
dec
mov
jnp
jge
scas
push
int3
clc
pop
cs
mov
add
push
adc
in
hlt
jae
add
out
subb
xorl
das
push
sbb
and
mov
ret
jmp
sbb
or
or
icebp
pop
int3
je
ficoml
pop
push
mov
inc
adc
les
test
or
or
mov
bound
xor
fs
xor
xchg
xchg
add
sub
adc
outsb
dec
daa
dec
mov
push
jbe
cmp
je
test
and
sbb
imul
push
test
and
xor
mov
or
js
xchg
dec
cmpsb
add
decb
pop
add
add
in
aas
aad
add
aaa
les
lods
adc
or
lods
or
imul
insl
mov
dec
int
push
sub
ljmp
movsl
lahf
rcll
les
pop
xlat
or
ret
loop
jno
push
rcrl
sub
cmp
roll
loopne
cmp
les
sbb
push
loopne
or
inc
rcrl
push
lret
test
mov
mov
leave
push
cmovo
andl
lea
lret
or
add
aaa
dec
push
gs
mov
popl
dec
and
scas
adc
jl
adc
push
stc
jle
add
cli
std
leave
cmpw
sbb
xchg
jne
add
sub
fiaddl
add
pop
push
add
xorb
stc
imull
xchg
push
je
enter
out
cmp
movsb
and
jns
shll
je
mov
add
fsubrl
jecxz
and
pop
add
sbb
pop
les
punpcklbw
push
cwtl
or
dec
dec
push
sub
jp
decb
clc
push
sub
jmp
jae
mov
lcall
dec
movzwl
fwait
sub
add
pop
or
adc
fists
add
ud1
sbb
adc
push
add
fiaddl
loop
shll
inc
jae
xorl
notl
pusha
in
inc
aaa
ja
push
fs
push
pop
push
or
loopne
xchg
sysret
mov
lret
loopne
pop
and
inc
insb
test
jo
bound
hlt
jne
pop
js
insb
jb
fs
push
std
lock
or
add
pop
enter
push
pop
push
dec
xor
int
int
jo
fcoml
jmp
and
jle
xor
nop
mov
rol
ret
in
fstps
sbb
mul
adc
push
loop
and
je
lds
push
mov
imul
icebp
clc
cmpsb
xor
cmp
add
add
fldenv
int
mov
xlat
add
and
or
andb
and
pusha
sbb
pop
stc
ja
pop
and
mov
daa
nop
inc
inc
pop
xor
xorb
sbb
sub
out
cmpsl
add
ss
xor
je
fcoms
mov
stos
adc
add
leave
pop
jl
mov
mov
push
push
mov
les
or
in
add
std
inc
out
jmp
add
and
sub
or
dec
mov
test
add
arpl
shll
inc
lods
pusha
or
sbb
mov
scas
sbb
stc
sbb
in
sbb
push
sbb
jno
jne
dec
add
sti
stos
and
cld
pop
stos
or
sbb
insb
std
adc
daa
sbb
cmpl
mov
jo
or
and
adc
leave
or
andb
in
fmull
xchg
ret
and
sbb
mov
mov
jl
push
imull
mov
sub
lea
fmuls
fsubl
xchg
lock
jne
add
push
push
and
test
ja
bnd
or
ret
in
subl
push
mov
push
inc
stos
arpl
clc
inc
mov
out
aas
shr
pop
mov
adc
cwtl
in
push
test
lcall
sbb
jbe
loopne
hlt
outsb
and
push
mov
cli
xor
ss
sbb
cwtl
inc
mov
sub
fidivrl
rol
rcl
rol
and
and
pop
addl
sbb
stos
mov
pop
pop
cld
ljmp
xchg
add
inc
xor
cli
push
and
out
lock
adc
lahf
in
addr16
in
and
enter
pop
mov
dec
push
pop
push
cltd
mov
dec
mov
or
dec
jmp
sbb
xchg
mov
inc
push
cmp
test
jae
sub
jb
pop
imul
aaa
jg
cmp
addl
push
popa
pusha
lret
pop
pop
sub
xor
inc
jmp
adc
test
orb
xlat
or
xchg
popf
je
pop
mov
inc
mov
dec
sbb
in
inc
movsb
push
ljmp
jmp
mov
sahf
xchg
test
xchg
dec
push
push
adc
or
xchg
jno
add
mov
xor
ss
add
mov
dec
xor
imul
sbb
sub
nop
and
nop
in
pop
aaa
adc
mov
cmp
and
sbb
sub
inc
push
mov
dec
ljmp
sub
hlt
ret
pop
mov
fldt
add
js
push
nop
out
fisubrl
popa
sbb
mov
mov
push
sub
add
mov
xor
iret
add
sbbl
dec
orb
test
scas
in
mov
repz
and
jne
xchg
sbb
sub
jae
mov
push
sti
sub
sbbl
sbb
and
sub
jbe
pop
fwait
mul
mov
xchg
or
test
push
lcall
lea
out
jns
test
pop
sbb
movsb
xor
adc
xor
pop
clc
xor
insl
repz
sub
sub
jge
ret
xor
cs
test
inc
int3
into
rorb
mov
daa
push
jmp
mov
clc
jb
es
mov
gs
nop
sbb
adc
mov
xor
push
cmp
add
addr16
scas
pop
int
callw
dec
mov
xchg
add
in
fs
enter
adc
dec
pusha
pop
adc
ret
or
dec
in
test
jmp
lret
mov
jmp
rcll
shrb
pop
sbb
cmp
and
sub
pop
js
push
mov
sbb
das
int3
mov
cmp
out
in
outsb
or
test
push
mov
fisubl
mov
sub
add
or
push
push
test
ja
jo
sub
push
xor
fsubs
mov
pop
and
mov
hlt
mov
test
cmp
cmp
xchg
sub
dec
jae
jno
mov
pop
xor
adc
cmp
pop
add
xchg
stos
or
mov
hlt
jmp
push
adc
adc
inc
adc
mov
push
xchg
add
mov
mov
int
add
mov
sbb
into
xchg
subl
xchg
inc
shrl
inc
lcall
jl
xchg
cmpsb
movsl
mov
adc
popa
movsb
mov
dec
test
sub
movsb
xchg
add
or
pop
cmp
jl
and
and
negl
and
addl
mov
nop
outsb
test
or
inc
or
clc
dec
ljmp
pop
fcomp
and
rolb
add
movsl
push
add
sub
adc
add
mulb
pusha
add
add
mov
ds
mulb
pop
lea
clc
imul
dec
push
mov
adc
add
dec
add
inc
push
cwtl
sbb
lea
xlat
add
call
nop
popa
adc
lock
add
xor
inc
push
mov
jb
sub
cltd
xchg
sbb
mov
xor
mov
sbb
xor
and
mov
cs
pop
mov
int3
fiadds
or
xor
mov
test
or
and
add
xor
lahf
add
pop
dec
mov
movsb
push
add
stos
or
or
sarb
add
loop
xor
das
or
fadds
mov
xor
movsl
xor
fimuls
ret
add
in
pop
test
xor
cmp
sbb
into
sbb
cs
rorb
nop
sbb
and
loop
jecxz
call
push
or
repnz
daa
int
jle
dec
push
shlb
bound
xor
addr16
addl
jo
popf
nop
and
xchg
jmp
xchg
or
test
loopne
aas
addr16
pop
aam
add
inc
sahf
ret
repnz
fwait
stos
cs
pop
adc
inc
cmc
dec
mov
pusha
xchg
and
subb
movsl
push
dec
rol
and
jne
cmp
push
xchg
imul
add
xor
negl
test
movsb
sbb
or
test
scas
rcl
xchg
or
sub
pop
imul
sbb
int
lea
jae
push
mov
xor
sbb
xor
adc
xchg
inc
mov
pushf
imul
adc
sub
insb
xor
jo
icebp
in
movsl
sbb
leave
es
mov
lret
and
fwait
mov
gs
pop
jl
fcoms
repnz
or
ss
xchg
sub
fldl
xor
pusha
mov
call
jno
mov
es
jns
push
and
push
jl
jns
add
xchg
add
daa
or
cld
icebp
mov
fadd
sub
stos
in
jge
inc
xchg
repnz
cltd
sub
sbb
movsl
les
sub
insb
popf
shlb
mov
mov
push
test
add
mov
add
aad
pop
rorb
or
test
je
jmp
cmpb
ret
andl
sub
rclb
test
gs
xor
fsubrs
imul
add
shlb
negl
rorl
mov
dec
addb
and
in
pushf
sub
sub
or
xor
push
push
xchg
inc
mov
xor
and
pop
nop
sbb
dec
sbb
xor
push
and
sbb
adc
and
push
dec
and
movsb
mov
in
mov
loopne
pop
or
in
cmp
mov
dec
cmp
or
jecxz
daa
and
adc
mov
push
or
icebp
subl
lock
cmp
ss
fcoml
jns
mov
sub
push
nop
sbb
push
out
mov
fimull
out
and
cmc
push
pop
dec
cld
adc
inc
adc
mov
mov
xchg
sarl
movsb
lods
or
and
dec
push
inc
cmp
push
out
xchg
dec
call
push
adc
push
pop
adc
push
addb
enter
test
dec
andl
push
xor
inc
mov
test
push
pop
mov
push
fsubl
add
sbb
push
and
mov
jbe
leave
push
testl
lods
sub
sbb
inc
dec
clc
adc
xor
cmp
lock
dec
mov
xor
roll
and
add
movzwl
add
sub
pusha
pop
pop
sbb
mov
aam
mov
incl
pop
inc
sbb
push
ret
inc
or
xor
add
mov
imul
mov
ja
jns
sub
daa
jne
or
leave
and
dec
adc
outsl
clc
es
mov
test
push
mov
cmp
je
js
push
mov
xor
mov
mov
dec
xor
lods
or
mov
push
repnz
xchg
jg
xchg
movsl
aas
andl
dec
imul
loop
scas
or
mov
pop
cmpsb
xchg
shlb
pop
and
imul
push
pop
push
jns
fists
psubsw
cmp
sub
mov
dec
add
sarl
loopne,pt
repnz
cmpsb
inc
push
je
push
push
and
dec
sahf
and
ds
jo
icebp
sarl
push
and
push
outsl
loopne
pop
inc
or
inc
fidivs
insl
adc
push
mov
xor
into
xchg
cmpsb
mov
les
inc
sub
xor
outsl
pop
mov
jno
push
mov
aaa
push
jbe
pop
pop
mov
ret
mov
mov
inc
push
xchg
xchg
subl
pushf
pop
add
ficomps
out
xor
outsb
xlat
or
adc
jecxz
das
les
fnstenv
inc
aam
fcomps
jbe
loopne
aam
dec
mov
jae
mov
test
mov
test
orl
inc
lcall
sbb
leave
dec
add
or
jne
imul
add
rorb
xor
xchg
jno
or
sbb
add
fsubrs
adc
pop
sub
mov
es
jmp
data16
je
sub
xorl
das
icebp
push
shlb
dec
xchg
sbb
pop
sub
shll
jno
push
inc
outsb
mov
pop
lock
mov
sbb
push
les
cmc
loop
fbstp
sbb
mov
stos
mov
es
ljmp
push
in
aaa
mov
aaa
or
pushf
ficomps
mov
mov
adc
sbb
push
fists
jmp
cs
sbb
jns
cmp
shrb
inc
jge
push
push
rorb
push
push
fcompl
xor
ljmp
cmp
out
dec
ss
push
ja
outsl
adc
push
movd
push
fildl
or
lock
and
adc
push
inc
ss
insb
jl
jne
cli
jne
push
jno
pop
xor
repnz
xchg
push
and
pop
adc
andl
or
fwait
mov
cs
add
dec
push
push
mov
ljmp
mov
push
jmp
rcrl
aam
mov
jge
mov
jns
push
push
mov
lcall
dec
out
sahf
sbb
enter
int3
and
mov
fnsave
lds
insb
in
and
in
push
cmp
sbb
push
pop
fs
jp
sub
and
jne
lods
jp
aas
jmp
push
imul
int
jns
xchg
and
rclb
andl
sbb
jb
dec
dec
test
and
xchg
out
mov
push
sbb
sar
or
cmp
inc
sbb
imul
sub
dec
test
ss
sub
test
sbb
add
xor
pop
rclb
add
xor
hlt
mov
push
push
dec
push
and
pop
adc
mov
dec
xlat
imul
pop
or
fiaddl
insb
pop
mov
push
roll
xor
xlat
cmpsb
pop
ss
movl
popa
mov
lock
loope
sub
add
push
adc
fsubr
xor
and
jg
dec
test
push
adc
pop
mov
aam
mov
in
add
xchg
je
fsubr
lea
in
push
push
stos
js
jecxz
sub
or
push
das
sub
sbb
sbb
imul
ret
or
push
mov
test
mov
and
das
cmp
push
mov
mov
fisttpl
cmpsl
fisttpll
cmp
insb
add
mov
mov
aad
in
mov
mov
into
xchg
inc
jb
in
and
mov
mov
pop
or
add
test
jo
ja
or
push
js
or
test
jno
into
push
or
loope
lret
mov
sub
bound
inc
xor
enter
sub
xchg
mov
adc
jle
dec
add
stc
or
add
jle
push
das
fcoms
loope
nop
insl
iret
push
sbb
inc
mov
inc
stos
out
cmc
push
push
mov
adc
in
jo
fcomps
sub
inc
adc
loop
fistpll
push
sbb
push
jle
stc
jne
mov
aad
ret
pop
add
push
mov
push
adc
cmpps
ja
or
jle
pusha
add
pop
pop
bound
fldl
dec
in
test
mov
push
jo
ljmp
mov
lods
pop
mov
dec
jnp
cmp
sahf
mov
je
xchg
or
popf
inc
loopne
add
add
or
push
in
adc
push
push
aad
dec
cltd
jb
xor
adc
subl
cltd
xor
sbb
cmp
arpl
push
fld
orl
fwait
push
outsl
stos
dec
lods
sbb
push
in
and
xlat
cwtl
enter
cmpsl
add
dec
sbb
addb
pop
pop
pushf
daa
ficoms
adc
rcr
jb
add
add
or
sub
cld
or
je
mov
or
pop
inc
sub
imul
aam
jg
roll
cmpsl
and
inc
aam
mov
adc
and
push
loopne
in
dec
jne
cmp
dec
mov
jge
or
rorl
lock
test
xor
iret
push
sub
lea
push
test
ret
mov
cmp
daa
mov
insb
sub
jo
push
shrl
xor
mov
ret
pop
add
sbb
and
ret
push
push
push
rol
inc
cmpl
loope
cmpsb
adc
je
movsl
or
xchg
mov
in
mov
bound
fcom
pop
add
lea
pop
subl
mov
dec
mov
xchg
sub
rcr
loopne
mov
std
mov
aam
inc
cmpsl
sub
sbb
sub
sbb
addr16
pop
fnstsw
mov
addl
jno
xor
push
test
in
xchg
xor
dec
push
xor
xchg
add
ss
mov
gs
cmp
push
jnp
mov
pop
roll
add
idivl
push
add
jmp
and
jecxz
sub
call
xchg
add
pop
in
test
push
test
jb
xlat
mov
les
int
popa
in
xchg
or
clc
xchg
out
loopne
push
or
adc
mov
pop
push
push
mov
cltd
popa
adc
imul
add
in
test
mov
fld
sub
outsl
imul
inc
push
adc
cmpsb
pusha
add
jno
adc
dec
jecxz
inc
movl
in
inc
lods
ljmp
dec
imul
cmp
and
sub
add
neg
pop
xor
cmp
dec
push
pop
dec
and
push
xchg
push
pop
mov
into
sbb
mov
adc
ret
cmp
sub
stos
jo
aam
jp
aaa
test
pop
add
cmp
imul
sti
adc
aas
int3
in
stos
or
add
fadds
inc
adc
or
and
loopne
int
or
fsubs
jp
dec
movsl
mov
cmp
jl
dec
xor
xchg
push
fwait
push
lret
xor
imul
mov
ret
cld
mov
dec
insb
add
data16
scas
orl
xchg
xor
adc
in
push
decl
adc
cmp
push
cmp
jle
cmp
jge
jle
jp
push
cmp
cmp
inc
add
pop
adc
push
add
inc
jmp
adc
movl
adc
and
mov
push
mov
cltd
pop
idiv
lock
rol
fisubrl
fs
js,pt
or
adc
inc
add
jecxz
jnp
cmp
ret
mov
mov
push
testb
fnop
mov
into
jns
push
sbb
lock
push
fcmovnbe
mov
repz
push
push
xor
fs
xor
das
xor
addl
je
jns
scas
cs
dec
movsl
or
adc
and
dec
jb
cmp
add
movsb
sub
rcrb
mov
lahf
push
xchg
int3
cmp
int
cmp
push
mov
dec
sub
outsb
inc
push
and
jg
xor
lahf
add
leave
into
pop
insl
loopne
xor
iret
jl
mov
sbbb
inc
inc
dec
fstps
outsb
daa
lds
pop
push
xchg
addl
add
insl
or
enter
or
add
pushf
inc
and
add
inc
push
add
inc
push
push
rorb
dec
add
and
insl
push
dec
mov
je
pushf
jl
out
loopne
stos
outsl
mov
rorl
les
daa
xor
pushf
xchg
push
pop
mov
add
xchg
and
mov
dec
push
sub
insl
in
cmp
push
mov
xchg
mov
cmpsb
dec
push
and
insb
test
sbb
andb
dec
inc
or
rol
jmp
dec
cmpsb
or
jl
push
mov
or
pop
rorb
fcomi
sub
sub
mov
loopne
xor
lods
int3
sbb
rolb
aaa
enter
aaa
sbb
pop
and
sbb
sbb
dec
or
popa
mov
jno
pop
sbb
add
mov
mov
push
sbb
test
cwtl
add
inc
mov
and
cmp
sub
or
add
adcl
ljmp
pop
mov
mov
ret
loope
mov
in
push
push
int3
fdivr
subb
sub
or
jno
sub
jno
push
pop
enter
cmp
pop
and
popf
xchg
sbb
dec
and
mov
adc
or
in
adc
mov
aas
pop
add
adc
or
adc
sahf
mov
sbb
dec
test
and
inc
push
shrl
mov
adc
push
ds
rol
xor
adc
add
jo
mov
mov
shrb
lahf
pop
gs
mov
jno
loope
add
mov
xor
or
ret
test
sbb
push
mov
mov
push
adc
jge
out
in
mov
jae
sbb
sbb
push
int
stc
cs
int3
popa
sbb
sub
fdivs
fs
mov
in
or
rorb
bound
jae
and
adc
cmp
shl
xchg
dec
ret
aam
insl
add
lods
mov
add
call
push
sbb
lcall
or
add
pusha
mov
arpl
or
fadd
mov
push
xchg
repz
sbb
pop
adc
or
leave
adc
adc
icebp
clc
jae
dec
pop
aad
xlat
les
pminsw
je
pop
jo
mov
gs
into
lea
jp
rolb
insl
sbb
push
adc
fdivrs
ret
or
inc
and
jne
in
xor
mov
and
std
test
sbb
mov
lods
test
mov
add
sarl
jbe
lock
hlt
dec
leave
xchg
sbbb
pop
les
xorb
jl
mov
insb
pop
sbb
imul
loop
stos
cmp
jne
sbb
lds
cmp
imull
push
xor
pop
sbb
out
loopne
push
add
xlat
cmp
fildl
mov
inc
and
mov
xorb
push
jne
or
jnp
pop
jbe
pop
repnz
nop
or
sti
cwtl
lock
arpl
cmpsl
sti
add
pop
jns
jg
shll
pop
adc
fwait
lods
popa
push
or
add
push
imul
lods
add
pop
test
add
pusha
push
pop
aaa
xchg
add
notl
adc
stos
add
mov
mov
pop
pop
mov
sub
scas
dec
das
xor
in
int3
cli
iret
jle
ffreep
jecxz
add
jmp
add
fsubl
inc
jl
push
roll
loop
mov
cmp
dec
fcmovu
push
movsb
repnz
pop
ret
and
imul
les
push
pusha
in
imul
mov
or
out
mov
push
xor
jmp
shrb
call
frstor
pop
sar
or
fcompl
fnstsw
test
je
sbb
add
pop
add
iret
cmp
sti
sarb
push
nop
add
jne
inc
sbb
inc
add
fsubrl
mov
push
push
aas
popf
mov
cmpxchg
jge
lods
lods
pop
or
adc
js
jmp
pop
fsub
pop
fsubrp
sub
dec
dec
ss
and
outsl
xchg
divb
push
xchg
loopne
inc
aaa
dec
pop
dec
ds
imul
inc
mov
pusha
pop
mov
scas
mov
test
popf
sub
mov
and
ret
rol
or
in
je
mov
rcrl
addb
stc
jge
fdivl
adc
into
lock
arpl
mov
sarb
insl
nop
add
out
adc
pop
inc
popf
bound
or
ret
ja
push
and
xchg
mov
or
out
rcll
and
dec
movsb
push
dec
pop
xor
lds
shrb
mov
daa
add
ret
mov
xor
jnp
or
mov
bnd
add
or
inc
sti
cmpsb
mov
clc
clc
clc
sbb
movsb
adc
lea
cmp
jb
pop
inc
call
shld
add
sbb
add
cmp
push
push
and
push
push
je
arpl
push
lock
mull
push
leave
adc
mov
push
adc
push
push
pushf
xor
push
into
mov
repnz
pusha
or
or
cli
cmp
add
push
push
sarl
mov
push
add
pop
pop
enter
loop
adc
cs
inc
xchg
and
out
jle
loop
fmuls
mov
testb
pop
push
jne
xchg
and
fbld
push
sti
ja
push
adc
sub
mov
add
movsl
loopne
inc
mov
dec
inc
cmpw
jne
leave
cld
lods
or
and
push
push
push
inc
lock
std
xor
dec
sti
jmp
push
push
jl
mov
loopne
decl
lea
cmp
or
dec
xor
add
leave
out
data16
or
mov
push
push
push
push
sbb
decl
cmp
pop
rorl
push
inc
xchg
clc
orl
and
test
aam
leave
lods
sbb
add
arpl
int3
rcl
lcall
rcrb
xchg
or
xchg
or
jb
loope
inc
mov
or
lret
ret
dec
loope
mov
push
xchg
nop
xor
ja
cltd
mov
dec
ja
mov
jb
jo
mov
and
into
xchg
adc
std
test
es
scas
test
in
aam
cmp
dec
add
or
scas
mov
stos
mov
popf
es
dec
jns
xorl
sub
or
int3
test
xchg
and
mov
out
or
js
mov
movsb
call
adc
xchg
shlb
add
cmp
insb
ret
push
xor
out
mov
cwtl
and
push
sbb
xchg
sbbl
adc
lds
fcmovnb
pop
ret
pop
add
sub
add
mov
movsl
dec
sub
pusha
rolb
xchg
sbb
ret
out
popa
cmp
or
mov
pop
mov
mov
sub
inc
xchg
addr16
sub
or
sub
pop
push
lret
jno
out
or
adc
fildll
in
pushf
adc
or
ret
les
movsl
addl
call
cli
sub
subb
cs
lcall
movl
sbb
jbe
dec
in
fisttpl
push
repnz
cs
pop
push
outsb
pop
add
push
push
jne
inc
or
cmp
jp
adc
pop
push
xorl
or
add
movb
jo
loopne
mov
popa
mov
divb
sub
es
stos
pop
xorl
pop
or
mov
ja
dec
ljmp
xchg
js
pop
or
mov
mov
and
cwtl
adc
pop
xlat
addb
icebp
and
xor
fstpl
adc
jne
push
mov
pop
sub
dec
cmpsb
aam
dec
incb
sbb
ds
stos
cmp
adc
ja
push
adcb
in
pop
stc
or
adc
adc
adc
pop
push
push
push
cmc
pop
fwait
clc
push
xchg
jg
add
pop
jmp
in
rcr
cmp
xor
push
pop
jnp
jge
mov
mov
jmp
push
pop
mov
jmp
push
mov
xor
mov
lea
add
add
aam
test
lods
inc
mov
fildll
jnp
adc
insb
or
adc
rorl
mov
xchg
push
fsubs
cld
andl
dec
mov
push
lock
cmp
sbb
add
sub
adc
pop
repz
xor
jnp
push
pop
cmp
insl
fmul
dec
sub
jnp
adc
cmp
push
dec
loopne
mov
or
sbb
adc
xchg
jl
jl
jnp
lcall
push
fsubl
xor
sbb
testl
adc
push
jge
or
je
es
mov
push
aam
mov
push
xor
sbb
fsubs
push
jle
jo
out
jle
cld
fnstenv
lahf
les
lcall
add
sbb
or
mov
and
subb
xor
inc
push
jns
out
pop
bound
out
sahf
out
xchg
lahf
lret
aad
out
sahf
fucomip
repz
or
cmp
daa
xor
repz
pop
outsl
jns
repz
test
and
iret
fldln2
mov
into
jecxz
aam
sbb
and
repnz
add
mov
pop
fldl
adc
add
leave
outsb
dec
pushf
lcall
dec
popa
add
adc
inc
popa
and
mov
or
add
adc
lret
pusha
stos
cmp
pop
int3
hlt
fisubs
shr
jno
add
push
int
mov
and
jmp
fwait
jmp
jl
mov
dec
adc
fstps
push
pusha
rorb
shll
enter
add
out
fcompl
push
xor
jp
test
inc
fstpl
cli
test
out
push
adc
jmp
arpl
andl
cmp
sti
mov
movsl
shll
popa
add
int3
and
cmp
aas
or
jne
xor
and
mov
pop
push
push
dec
test
pusha
xor
adc
push
es
add
sbb
adc
les
in
out
and
rorb
cmp
vmread
xchg
pop
je
xor
push
cmp
push
cmp
pop
pop
jb
adc
scas
add
pop
add
xchg
xchg
mov
mov
adc
pop
jbe
or
mov
rcr
ss
ret
subb
mov
dec
mov
mov
push
and
movsl
bound
enter
xchg
push
xchg
test
test
insb
orb
cltd
shrb
push
dec
dec
repz
xchg
adc
shlb
decl
xlat
lret
out
and
mov
mov
add
push
bound
repnz
outsb
faddl
xlat
pop
inc
dec
add
adc
inc
out
inc
out
jnp
test
jl
loop
dec
jecxz
or
jmp
arpl
lods
push
mov
adc
jno
mov
add
gs
dec
push
inc
xchg
adc
insl
sbb
sarb
mov
rcr
sarb
mov
jp
xchg
cmp
mov
test
fdecstp
adcb
loop
and
je
dec
sub
and
and
pusha
int3
std
rorb
jecxz
int3
mov
mov
pop
in
mov
xor
mov
hlt
scas
adc
movsb
mov
lret
xor
mov
sub
int3
cmc
cwtl
call
xor
push
movsb
les
push
and
fimull
movsb
je
mov
and
inc
bound
cmp
incl
xlat
mov
xorb
movsb
pop
rorb
pushf
xor
jle
mov
and
fnsave
xor
sbb
imul
imul
sub
jl
cwtl
sub
imul
sub
inc
mov
int3
xor
jg
cmp
lret
lea
lds
mov
into
stos
adc
adc
aaa
lret
add
pop
adc
nop
insl
xlat
movsb
jo
pop
rorb
test
sbb
mov
mov
pop
movsl
std
enter
fisttps
or
dec
js
stos
xchg
rolb
xor
clc
movsb
movsb
bnd
pop
incb
sbb
add
push
mov
jae
inc
or
leave
or
sbb
sbb
and
xor
mov
nop
and
dec
jns
add
movsl
and
dec
lcall
cmp
sub
cmp
addr16
test
xchg
pop
add
iret
loopne
or
push
jmp
andl
xchg
cs
movsl
push
mov
xor
jo
inc
adc
cwtl
in
mov
mov
cmp
xchg
cltd
or
pop
xchg
push
pop
in
cld
orl
scas
jmp
test
cmp
push
xchg
imul
hlt
cmp
jle
pop
add
cmp
int3
jmp
cmp
cmp
scas
mov
mov
cli
sahf
nop
movsb
aas
push
cmpsb
in
ret
push
orb
and
inc
es
inc
cs
aaa
loope
sbb
mov
xchg
jmp
or
inc
aad
or
sbb
inc
or
pop
or
inc
inc
mov
add
addl
pop
lea
jmp
push
inc
outsb
rorb
inc
or
loopne
jne
pop
dec
loope
push
out
and
mov
ret
je
pop
adc
xor
sub
push
sub
jnp
xchg
aam
xlat
mov
shl
enter
pop
or
or
dec
xchg
adc
pop
rcrb
rorb
push
aam
mov
push
stc
xchg
push
pop
dec
xchg
or
inc
sarl
pop
test
jle
push
aam
test
lea
mov
xchg
pop
sbb
ret
jmp
loope
pushf
push
insb
test
aam
outsl
push
mov
rclb
push
cmc
loopne
pushf
outsl
xchg
test
add
in
push
and
cmc
in
sbb
loop
and
lea
sbb
mov
add
nop
hlt
or
push
pop
es
add
sub
arpl
cmp
pop
das
xchg
mov
cmp
in
jo
js
dec
bound
leave
sbb
xchg
jle
xor
sub
pop
add
xchg
adc
inc
xchg
mov
mov
mov
or
xchg
nop
push
sbb
ror
in
in
paddusb
mov
pop
lret
adc
test
pop
add
repnz
cltd
popa
sbb
es
mov
shl
daa
lock
adc
jns
ljmp
push
or
mov
out
mov
push
pop
xchg
push
and
int3
push
je
add
sbb
clc
and
out
push
sbb
mov
lock
and
adc
jl
lods
push
xor
pop
adc
jb
pop
mov
loopne
adc
push
sub
dec
and
dec
jl
cmp
test
push
in
mov
enter
add
inc
sbb
sbb
dec
sbb
mov
rcrb
dec
aam
sbb
xor
pop
pop
and
cltd
sub
sti
adc
pop
xchg
lea
pop
adc
and
imul
and
test
dec
lcall
sbb
inc
int3
nop
sbb
mov
xlat
pushf
sbb
stos
mov
test
or
dec
dec
xor
pusha
push
pop
adc
pop
icebp
jl
or
mov
and
call
or
xchg
cmp
aas
inc
cmpsl
es
ret
je
pusha
test
repnz
out
xor
outsb
ss
jmp
push
lock
push
pop
cmp
pusha
jmp
dec
cwtl
push
int
mov
push
xchg
add
add
data16
test
pop
xlat
fdivrl
push
daa
dec
push
in
mov
negb
call
nop
pop
aaa
push
ret
sub
push
xchg
dec
dec
movsl
out
fsubrs
shrb
sbb
xchg
xchg
push
test
stc
inc
jnp
xlat
outsb
xchg
scas
push
pop
lock
dec
testl
xchg
shlb
adc
leave
xchg
push
out
inc
mov
pop
mov
xor
adc
or
push
in
adc
xor
lock
aas
insb
dec
mov
lea
jo
mov
lock
pop
pushl
add
mov
insb
jo
imul
mov
mov
sub
pusha
add
push
mov
rcrl
xorb
push
mov
mov
push
lods
daa
and
int3
lods
test
cmpsb
sbb
inc
nop
push
xor
enter
adc
and
or
mov
sahf
sub
jl
inc
lcall
daa
mov
es
push
sub
dec
ljmp
mov
jnp
xor
ds
xchg
and
sub
fldl
imull
add
int3
xor
add
and
fnsave
lcall
ret
shrl
adc
xchg
push
paddd
lock
sub
cmp
xchg
daa
dec
es
pop
xchg
insl
and
mov
push
pusha
push
mov
movsb
orl
loope
mov
addr16
jo
pushf
fstps
sbb
test
or
dec
aad
adc
jne
cltd
stos
xor
adc
adc
adc
mov
and
mov
push
mov
add
sbb
mov
paddusb
cmpsl
nop
in
mov
repnz
pop
pushf
push
dec
cmp
bound
mov
loopne
insb
or
and
out
mov
or
add
pop
add
je
mov
gs
mov
jo
xchg
mov
inc
cli
in
push
sub
shll
in
or
xor
jge
lods
mov
cmp
inc
pop
and
cmp
add
test
into
fmuls
push
dec
cs
int
and
shll
js
add
or
test
add
test
loop
rol
mov
push
sbb
cmp
mov
sub
and
subl
rolb
into
sub
ljmp
orb
insb
fnsetpm(287
outsl
pop
cwtl
sub
and
adc
insb
xchg
cli
inc
cmp
or
add
cmp
inc
adc
sarb
sbb
push
add
je
push
adc
nop
test
into
push
enter
xor
jb
mov
push
lods
jg
lahf
cmp
pop
push
lock
addl
addl
leave
call
jo
js
cli
rcrb
adc
insl
jmp
cmp
jbe
sbb
cmp
sarl
inc
clc
ret
jl
push
aaa
sub
lcall
inc
mov
subl
lds
iret
push
pop
adc
inc
loop
jbe
nop
repz
mov
dec
and
cmp
lret
xchg
jp
and
je
mov
dec
shl
fimuls
or
jl
fwait
or
jo
fisubrl
cmpsl
xchg
dec
push
or
movsl
xchg
inc
mov
xchg
es
or
or
push
push
add
add
inc
mov
and
cwtl
in
fldl
sub
js
dec
or
cmp
xor
jmp
push
fmuls
ljmp
fstps
sbb
push
sbb
ljmp
cs
les
xchg
mov
out
add
xor
cmp
pushl
push
mov
mov
pop
mov
lds
push
sub
rorb
cmp
leave
ret
inc
movsl
xor
sub
and
push
ds
xor
mov
imul
inc
mul
neg
mov
cmp
jl
or
paddd
jmp
cmp
add
and
mov
movb
movsbl
shr
mov
and
mov
loope
mov
lds
or
pop
xor
xchg
and
add
xchg
pop
and
and
or
sbb
loopne
sbb
and
cmp
inc
sbb
popf
cmp
or
test
sub
mov
lods
lds
js
cs
inc
push
xchg
jp
test
imul
xor
stos
inc
dec
test
add
push
pop
mov
or
test
loopne
inc
lock
xchg
repnz
mov
incb
add
cmp
je
dec
and
cmpsb
sahf
adc
fmull
or
xchg
cmc
cwtl
shrb
jmp
pop
xor
lods
mov
mov
pusha
enter
pushf
ret
xchg
sub
push
or
cmp
add
movsb
lock
sbb
ss
mov
andl
cmpb
mov
and
enter
push
mov
mov
adc
pop
loop
dec
jmp
imul
rclb
repnz
and
xor
jl
xchg
jb
fmuls
nop
xor
pop
cwtl
pop
cld
and
jmp
cmp
cmp
loop
inc
or
bound
and
popa
mov
ss
repnz
push
and
jmp
repz
jns
mov
inc
adc
lret
lcall
sbb
jno
fsubs
push
xor
gs
adc
jbe
inc
cmp
sar
ja
mov
test
rcrl
sub
add
inc
iret
adc
nop
icebp
pop
adc
push
add
adc
repz
dec
insb
data16
adc
sub
les
adc
and
mov
pop
sub
push
sbb
test
push
push
push
sub
incb
pop
leave
pop
rcrb
inc
iret
xchg
mov
add
aam
push
jmp
inc
and
jne
pop
pop
aad
sub
xor
pop
inc
ljmp
mov
cmp
push
notl
sbb
push
lds
cmp
lods
jne
loopne
add
add
fbstp
dec
push
cmpsb
adc
popl
dec
mov
add
sbb
lahf
or
enter
inc
or
movsb
xchg
jecxz
or
fistl
fistps
negb
call
cmpsb
mov
call
adc
ret
inc
adc
or
add
mov
sbb
je
xlat
ss
cmp
sti
and
or
mov
lock
add
push
sbb
push
inc
sbb
xchg
jno
dec
adcl
sbb
jo
iret
mov
js
push
lock
js
mov
mov
imul
lea
enter
and
out
push
mov
rol
in
add
jmp
sub
add
xchg
sub
push
lods
fisttps
xor
adc
test
adc
in
mov
or
or
add
cmp
xchg
loopne
popa
xchg
and
jne
dec
adc
das
pusha
or
andb
pop
shlb
jo
imul
das
insb
cmpsl
sarb
pop
andl
arpl
inc
and
add
pop
fwait
sub
cmp
in
mov
sub
popf
stos
inc
sub
mov
adc
enter
je
sub
sbb
xor
xchg
sub
jmp
cmp
stos
in
mov
or
xor
inc
push
gs
std
push
je
into
pop
add
add
scas
jae
imul
mov
inc
imul
dec
or
cld
jp
je
mov
xchg
adc
pop
xor
rclb
loopne
dec
push
xor
jne
je
inc
das
push
adcb
cmp
jl
mov
and
clc
adc
cli
hlt
add
add
jo
data16
fmulp
xor
ss
into
iret
test
adc
adcb
mov
outsb
lds
push
inc
in
cmp
xchg
add
adcl
push
popa
sub
or
das
and
push
enter
sub
mov
xor
xor
or
into
inc
xchg
adc
daa
add
ret
rcr
push
outsb
lea
cmp
push
inc
ja
inc
jne
inc
or
maxps
jge
cmp
add
cmp
daa
adc
lock
fdivs
jbe
fs
or
dec
xchg
call
rolb
mov
lock
sbb
inc
xchg
out
imul
or
or
lods
or
ficoml
lods
xor
pop
in
clc
inc
das
je
jge
ljmp
pop
fmuls
nop
jns
inc
xchg
and
fdivl
cs
in
imull
cmp
test
jne
es
mov
xor
jne
jno
ds
inc
push
mov
sbb
or
jno
es
fisttpl
call
je
xor
out
push
sub
pop
adc
mov
lea
addb
mov
sbb
negl
push
icebp
jmp
mov
or
insl
rorb
out
inc
push
hlt
push
cltd
cmpl
adc
in
and
cli
mov
inc
aaa
push
cmp
dec
mov
add
or
pop
or
ds
and
add
pop
inc
add
inc
or
mov
push
and
sub
sub
push
add
inc
push
cmp
pop
add
mov
or
add
mov
xor
orb
popa
mov
enter
push
fldl
call
push
push
sbb
inc
data16
mov
inc
add
out
jne
daa
bnd
adc
sahf
out
stc
hlt
jne
or
jne
or
rorb
adc
inc
pop
lods
jge
push
mov
aad
les
xchg
pop
push
lea
mov
and
mov
dec
push
pop
orl
xchg
push
jl
mov
mov
mov
pop
hlt
lea
or
jnp
in
lea
je
add
data16
mov
add
insl
lret
cs
mov
test
stc
sub
jo
mov
stos
or
sbb
sti
inc
pop
dec
jecxz
xlat
or
inc
lret
aad
int3
int3
pop
lea
mov
push
mov
jae
rcrb
fadds
mov
add
mov
adc
sub
push
jo
neg
loopne
sarb
adc
adc
mov
add
jecxz
cwtl
ret
ss
and
sahf
cmpsl
jae
mov
ss
adc
sub
xchg
imul
or
inc
arpl
adc
gs
sbb
push
shrb
sub
pop
xor
lea
incl
pop
add
dec
pusha
pusha
addl
mov
mov
daa
int
inc
xchg
fs
or
and
jne
jnp
nop
push
mov
xor
fs
fwait
inc
mov
sbb
ficoml
mov
add
jno
xor
adc
dec
push
mov
xlat
test
movsl
adc
out
or
loopne
add
mov
out
fwait
push
jae
mov
jbe
or
or
mov
into
or
push
lahf
mov
inc
subl
fldenv
and
xor
out
loope
jbe
jl
shlb
and
lds
cmp
insl
pop
addr16
movsb
nop
inc
push
dec
mov
push
or
test
pop
xor
mov
int
fstpl
or
mov
pop
ss
push
loop
pop
push
jmp
and
and
rol
push
mov
das
cmp
pop
inc
cmp
inc
lds
enter
mov
rolb
movsb
lea
subl
addl
xchg
xchg
push
sbb
shrb
jno
mov
xchg
xor
sub
ret
pop
inc
add
fldl
pop
push
xchg
pusha
aaa
dec
sti
imul
loope
mov
or
dec
mov
orb
mov
add
fwait
jge
pushf
shll
ss
shlb
loope
mov
push
or
adc
sbb
nop
dec
repz
test
inc
es
sbb
es
xchg
and
adc
xchg
inc
adc
sti
sti
sub
adc
lds
mov
jb
sub
jmp
fadds
dec
enter
sbb
add
outsl
push
adc
lds
adc
or
pop
repnz
xor
mov
add
inc
lcall
rcr
xchg
inc
mov
leave
sbb
mov
and
and
pusha
or
mov
jmp
lcall
icebp
test
cmpb
and
lea
movsb
in
inc
xchg
cs
repnz
xor
dec
shrl
cltd
mov
or
rcl
sbb
xor
movsb
cltd
add
add
sbb
dec
sahf
xorb
adc
dec
aaa
mov
jo
add
adc
ret
add
adc
xor
and
jo
sahf
xchg
inc
or
imul
adc
and
js
scas
dec
add
insl
jae
push
inc
sub
and
mov
arpl
pop
mov
mov
inc
sbb
faddl
add
and
sbb
sbb
seto
add
lock
lock
movsb
cmpsw
push
fs
and
mov
add
mov
movsb
push
sub
mov
add
sahf
or
int3
adc
aam
lea
sub
lods
pop
inc
out
adc
movsb
ffree
in
add
adc
or
mov
jne
xchg
in
add
add
mov
or
out
push
inc
add
jb
popf
inc
cmp
and
shl
int
cmpsl
add
call
shlb
add
sbb
and
dec
inc
xchg
push
mov
adc
push
sub
mov
je
push
mov
xchg
xor
jae
mov
ficoml
adc
dec
cmc
cmpb
xchg
pop
pcmpeqd
push
xchg
insl
addr16
xor
jno
mov
sbb
add
xorl
ja
mov
pusha
jno
test
mov
outsb
mov
cs
push
fldl
lcall
mov
syscall
push
mov
loopne
cs
lods
pop
push
aaa
in
xchg
shll
call
fidivrl
and
jne
mov
mov
sub
dec
inc
add
sbb
aad
lock
fdivrs
xor
bound
xor
jmp
mov
adc
in
dec
ret
in
mov
fdiv
pop
pop
xor
push
mov
sbb
mov
add
jecxz
andb
fidivs
lds
sub
clc
out
cmp
sbb
fwait
push
push
in
cmp
adc
and
ss
mov
rolb
sub
inc
xor
les
out
popf
movsl
or
inc
imul
mov
mov
add
hlt
add
inc
jecxz
and
inc
leave
in
xchg
lea
loop
sbb
stos
jbe
stos
loopne
jge
pop
sbb
call
jmp
pop
cmc
mov
aam
mov
call
or
push
xchg
add
enter
and
lock
add
or
or
add
push
in
or
sahf
add
mov
push
fisttps
add
or
or
aas
jg
adc
repz
stos
and
sbb
mov
int3
in
orb
pop
sbb
push
add
pop
xchg
shlb
and
inc
rolb
mov
addl
imul
adc
test
cmp
daa
inc
push
dec
loopne
jmp
xchg
sub
mov
adc
add
into
push
aas
outsl
xchg
test
push
inc
and
aas
mov
mov
add
loope
pop
or
mov
and
pop
push
outsl
and
jl
mov
lock
jb
movsl
jne
popa
call
stos
or
cmpsl
mov
cmp
je
or
ljmp
xor
add
sbb
sete
adcb
xchg
and
iret
dec
jmp
add
add
js
hlt
jae
movsbl
cld
mov
add
sbb
jle
imul
cmp
in
test
ds
jmp
enter
ret
incl
loopne
dec
inc
mov
inc
or
jecxz
or
add
inc
cmp
jl
decl
mov
cltd
and
add
rcrl
add
add
clc
outsl
jnp
cmp
pop
xor
ss
cmp
ret
and
sbb
inc
jne
rcr
jg
lret
shr
sub
mov
mov
dec
jne
rolb
lock
lcall
pusha
lods
cmpsl
or
cmp
std
mov
adc
and
stc
rorb
cmp
add
xlat
dec
jo
xchg
lea
jb,pn
cwtl
cli
ret
add
orl
adcb
loopne
or
out
popf
aam
add
decl
mov
aas
mov
movsb
mov
fstl
cmp
pop
cli
js
inc
popa
pop
dec
jmp
inc
add
dec
jne
shll
mov
mov
stc
or
sbb
add
repnz
push
ret
or
mov
adc
inc
sbb
enter
sub
cltd
rcr
ss
inc
sbb
imul
out
aaa
arpl
pop
ja
xchg
ret
cmpsl
push
xorl
loope
push
xor
test
dec
in
mov
dec
sahf
mov
pop
sbb
int3
fadds
mov
and
lds
or
repnz
sbb
and
sub
das
or
nop
je
add
ss
cmpb
loopne
in
fists
push
in
aam
cld
adc
push
pop
in
or
push
xor
jp
fxch
pslld
jne
outsb
pop
js
inc
pop
add
pop
jb
jmp
push
mov
jb
add
push
add
imul
push
sbbb
add
push
inc
lcall
mov
and
loop
and
jb
js
pop
aam
lods
cmp
into
das
sbb
push
pop
xor
jns
lret
push
mov
int3
adc
lcall
push
mov
stos
adc
bound
mov
jns
pop
ret
lea
lods
and
or
lret
sbb
lret
xor
int
adc
les
loopne
or
ss
je
xchg
cmp
and
repz
xchg
fbstp
popf
fldt
test
outsb
pop
pop
mov
mov
push
push
adc
dec
test
xor
jecxz
mov
ja
loope
dec
pusha
das
je
addl
dec
and
push
and
lods
fidivl
jo
mov
shl
loop
mov
add
int3
xchg
sbb
add
jmp
popa
fst
push
daa
js
scas
das
mov
or
mov
inc
mov
mov
xor
roll
insb
sbb
in
mov
jo
sbb
jno
mov
push
push
pop
aam
pop
xchg
out
inc
mov
push
push
mov
enter
jmp
mov
daa
adc
add
cs
sbb
push
adc
lcall
mov
pushf
pop
mov
out
aad
loope
cmp
xchg
xchg
int3
int3
or
mov
cs
sbb
cmpxchg
sti
lods
sti
push
pop
cmp
mov
mov
or
shl
je
jne
inc
rorl
ret
call
out
and
cmp
into
imul
mul
mov
inc
xchg
inc
adc
mov
enter
ja
inc
xor
out
add
cmp
add
add
fsubs
dec
aam
cmp
push
ficompl
jo
lahf
cmp
jl
cwtl
loopne
push
fiaddl
cmp
and
add
ror
push
sbb
sbb
sub
daa
movsbl
es
dec
mov
call
ret
mov
xchg
adc
inc
loopne
jmp
fsubr
rcll
mov
xchg
pop
mov
test
sbb
lret
movb
mov
jg
cmpsl
xor
mov
in
inc
rolb
enter
es
add
xchg
shlb
ss
mov
sub
dec
push
fwait
mov
mov
add
mov
adc
push
inc
add
push
dec
and
xchg
sub
lea
stc
mov
cld
mov
push
jecxz
mov
sub
pop
pusha
xor
sahf
orl
mov
push
cmp
and
xor
outsl
mulb
pop
add
repz
pop
xchg
subl
or
rorb
data16
cmp
lock
add
add
jb
in
pop
int
pushl
std
lock
pop
mov
mov
clc
loopne
dec
xlat
pop
mov
or
loopne
sub
push
inc
cmp
int3
loope
and
pop
bound
or
mov
add
mov
push
pop
gs
fmull
out
subb
mov
add
push
sbb
or
sbb
mov
cmp
jl
pop
sbb
inc
mov
idiv
sbb
sarb
sub
push
fbstp
push
incb
mov
add
add
or
mov
lods
inc
fisubl
and
or
icebp
mov
leave
push
xor
mov
inc
call
jne
pop
and
scas
dec
mov
fdivl
stc
fwait
jb
mov
pushl
jae
inc
xchg
stos
pop
mov
adc
xchg
push
cwtl
pop
mov
jecxz
add
lods
xor
or
stos
add
push
adc
fwait
add
in
dec
push
mov
and
out
clc
push
rcll
pop
pop
les
aam
pop
add
hlt
pop
sti
mov
push
enter
pop
inc
xor
scas
ds
pop
clc
lahf
lret
push
scas
and
out
divb
adc
mov
popa
add
xor
add
les
push
xor
dec
ds
or
adc
mov
in
add
sbb
mov
push
or
and
adc
or
sbb
notl
mov
pop
je
in
jno
jmp
lock
arpl
sbb
push
push
and
adcb
nop
add
jmp
add
insl
outsl
leave
and
adc
mov
add
mov
mov
inc
push
nop
xchg
add
add
and
add
in
dec
cmp
add
xchg
or
cltd
add
add
pop
test
and
jecxz
cmp
sub
cli
call
test
js
movl
or
xchg
fldt
xchg
movsl
mov
sub
xor
pushf
push
lret
or
cld
adc
or
insl
dec
in
mov
punpckhbw
inc
cmp
and
dec
test
stos
mov
lds
sbb
sbb
mov
ret
pop
add
popf
aas
jb
add
sub
add
scas
add
adc
mov
push
inc
mov
enter
adc
cld
rcll
rorl
adc
aam
cmp
cmp
push
loope
add
icebp
add
add
les
mov
mov
adcb
mov
and
add
mov
test
jmp
push
xor
mov
icebp
dec
je
or
decl
jno
push
jle
sub
xor
or
adc
icebp
add
lock
xor
fisttpll
mov
aas
inc
xchg
mov
sbb
jbe
fsubl
mov
dec
push
mov
xchg
mov
xchg
outsl
dec
sti
test
dec
dec
cmpl
pop
xchg
push
je
sbb
call
add
jnp
int
shrb
imul
xchg
shlb
pusha
pop
stc
and
cmp
dec
and
aam
or
out
ret
outsl
fdivl
mov
je
roll
adc
mov
sbb
jge
mov
mov
mov
scas
nop
pusha
sub
and
inc
push
adc
cmp
pop
jp
bound
push
push
dec
fwait
and
lret
sbbl
dec
push
stc
mov
xchg
rolb
sarb
cmp
fmull
inc
push
pop
add
fsubrl
fdivl
call
jmp
or
leave
and
push
insb
or
sub
add
add
fcoml
fldenv
pusha
mov
or
push
pop
je
movsl
and
fwait
jge
and
pop
sbb
sub
enter
dec
lahf
and
lret
xor
mov
dec
and
or
adc
addr16
scas
dec
jns
mov
repnz
loope
out
nop
int3
or
jmp
jmp
es
incl
jmp
mov
jb
mov
lock
aad
or
xor
jmp
push
dec
mov
adc
mov
xchg
inc
adc
fidivrl
lret
push
push
push
int3
add
pushw
movsb
or
movsl
sbb
sete
push
and
sbb
imul
jo
repz
push
pushl
xor
rcrb
loope
pop
cmp
push
adc
jge
hlt
sub
cmp
pop
push
sbb
dec
inc
pop
xor
mov
lods
adc
lret
ds
cmpsl
lcall
clc
cmp
sub
bound
pop
pushl
xor
sbb
pop
clc
jne
mov
pop
cmp
adc
lahf
mov
sub
inc
jp
insb
inc
pop
leave
rol
fildll
mov
cld
rcr
test
test
call
repz
popa
mov
lret
mov
push
adc
push
push
call
cmp
sbb
rclb
loopne
shl
pop
mov
xor
mov
mov
jecxz
inc
xchg
push
lods
aaa
fcomps
dec
and
popa
add
add
dec
lret
subb
shll
rclb
jmp
add
push
clc
lods
dec
xchg
shlb
jb
daa
xchg
xor
mov
std
and
jno
xchg
mov
pushf
out
push
mov
mov
outsb
imul
push
test
cltd
in
fdivrs
dec
leave
pop
or
sbb
les
and
arpl
pop
lret
mov
push
xor
xchg
lret
add
add
jl
cs
out
sub
daa
jns
fisttpll
mov
xor
sbb
and
sub
push
jge
jae
rclb
pop
leave
insb
push
insb
sbb
pop
jmp
cmp
subb
cmp
into
adc
adc
xchg
pop
lea
and
in
enter
and
cld
mov
das
das
out
js
adc
or
loopne
ret
lcall
or
pop
sbb
das
sub
test
fists
lea
push
or
mov
sbb
mov
or
mov
add
dec
subl
push
ficoms
dec
xor
pop
lahf
xorb
push
jae
mov
or
add
rcll
dec
mov
or
and
test
imul
shrb
xchg
sub
jo
lcall
sub
and
add
dec
inc
pop
lods
sahf
pop
mov
test
iret
sarb
cmp
cltd
sbbb
cwtl
pop
ror
sahf
and
dec
jp
and
push
sub
and
addl
ret
push
fwait
sbb
movsl
dec
inc
loopne
adc
faddl
imul
jl
adc
roll
push
adc
mov
loopne
inc
out
mov
fstl
mov
mov
sub
adc
jno
cmp
push
dec
rcrb
lahf
mov
jmp
cmp
sbb
cwtl
fstl
jb
fists
lds
cmp
push
outsl
and
call
pop
enter
les
inc
popf
and
xchg
sbb
or
push
pop
fadd
scas
test
inc
pop
add
inc
push
inc
cmp
ss
jb
push
ja
ret
xchg
jb
sbb
cwtl
repnz
loope
add
or
push
test
pop
push
push
insb
fnsave
cs
inc
or
cmp
int3
inc
cmpsl
push
sub
imul
vpackusdw
mov
out
je
lea
ffreep
pushf
mov
inc
push
xor
cmp
pop
jle
inc
xchg
mov
or
or
add
cmc
dec
sti
cmp
push
adc
lods
mov
xor
add
push
xor
cmp
cmp
shll
and
xchg
lahf
cmp
in
xor
popl
mov
je
hlt
xchg
mov
mov
mov
addl
add
sub
cmp
dec
push
fisubl
sbb
movb
jecxz
lea
mov
clc
stc
lahf
orb
clc
push
das
xlat
or
int
sbb
sbb
scas
push
dec
jge
sub
stos
add
mov
pop
push
or
jecxz
adc
lcall
xor
push
adc
push
push
aad
push
and
cmp
lcall
add
jge
dec
mov
fmul
arpl
mov
or
leave
adcl
das
sbb
adc
jb
adc
push
lret
jg
jg
adc
or
popf
push
iret
mov
sbb
mov
sub
shlb
add
pop
movl
shl
test
adc
push
cmp
movb
popa
cmp
ret
push
xchg
es
cmp
lods
andl
push
xchg
xor
arpl
add
icebp
or
imul
add
sub
adc
sub
and
sbb
inc
mov
icebp
mov
and
dec
data16
pop
ror
adc
lods
iret
sub
push
dec
iret
sub
in
dec
insb
faddp
add
out
push
mov
mov
or
dec
insl
addl
sbb
inc
leave
xchg
lcall
sbb
adc
xchg
push
cmpsb
jne
std
inc
or
push
ss
mov
xchg
nop
mov
sbb
imulb
lods
jmp
push
enter
in
fidivrl
dec
and
aam
mov
test
adc
mov
mov
les
jae
idivl
inc
mov
mov
xchg
js
testb
mov
push
inc
push
aam
adc
dec
fisubs
jl
sbbl
sbb
mov
andl
std
sbbl
addr16
add
adc
add
mov
push
pop
mov
dec
rcrl
mov
add
xchg
cli
ret
test
test
test
jl
jo,pn
fimuls
add
lods
test
scas
in
inc
add
aam
lods
incl
adc
addb
sub
or
push
dec
pop
sub
push
int3
mov
and
test
pop
ss
inc
pushf
lock
mov
mov
inc
lods
add
dec
lods
sub
cmp
in
inc
scas
pop
shlb
jne
loop
xor
and
push
rcll
push
add
add
mov
adc
sbb
xchg
nop
jecxz
sub
fisubl
mov
pop
push
pop
lock
jmp
jmp
mov
dec
xor
xchg
insb
or
shl
jg
jmp
adc
push
xchg
nop
xchg
jne
addl
cli
jp
fs
bound
test
xchg
mov
or
and
and
cmp
jbe
add
sub
push
jg
mov
sbb
pop
cmp
jbe
test
orl
push
inc
jmp
push
adc
int3
subl
es
cmp
inc
jle
jp
loopne
cli
inc
mov
sub
dec
inc
mov
sub
mov
sahf
pop
jbe,pn
fdivl
ret
adc
add
out
add
gs
add
xchg
mov
shll
ss
pop
test
adc
jno
lods
xor
fidivl
or
mov
fistpll
jne
cmp
push
mov
sbb
pop
adc
or
cmp
xchg
jmp
xor
or
insb
mov
or
aam
inc
adc
or
dec
mov
es
cmp
add
push
pop
add
mov
sbb
incl
cmp
and
sub
dec
lahf
daa
subl
cmpl
jb
jmp
les
in
push
push
les
fisttpll
or
movsl
push
push
pop
mov
mov
clc
inc
sbb
or
mov
stos
push
sub
in
stos
cltd
cltd
push
or
push
push
push
rorl
inc
icebp
andl
jns
jl
cmp
negb
pop
aas
js
mov
lds
and
mov
fs
test
lock
test
cmp
lret
push
push
mov
fs
adcb
inc
and
jne
and
les
jmp
push
and
and
fstpl
ret
and
rcl
fwait
inc
insl
mov
loope
adc
fcmovb
sbb
subb
mov
sub
add
pop
mov
jno
movsl
xor
pop
adc
add
fstl
ljmp
scas
push
inc
push
rol
aad
pop
xchg
mov
pop
xor
cltd
orb
cmp
push
mov
rolb
jbe
push
cs
or
dec
out
stos
push
sbb
insl
and
sub
adc
cmpsb
push
xchg
mov
pop
mov
jne
xchg
mov
xor
cld
inc
mov
roll
out
xor
aad
dec
add
mov
mov
sub
ja
sbb
addr16
push
push
dec
addw
outsb
cmp
les
aad
out
sbb
into
adcl
mov
sbb
cmp
and
clc
dec
adc
xor
mov
add
aas
test
xor
mov
jb
mov
dec
js
adc
jo
push
xchg
jl
sbb
push
subl
inc
shrl
mov
xor
pushf
data16
mov
xchg
mov
cwtl
xchg
pushf
punpckhbw
cmp
xor
adc
xor
leave
xor
cmp
xor
and
rolb
ret
xor
push
lahf
push
roll
int3
lea
mov
pop
push
rcrb
push
or
inc
pop
sub
mov
sbb
popf
adc
ret
sub
inc
cmp
data16
ljmp
mov
js
mov
addl
stc
push
inc
xchg
sbb
mov
dec
in
shrb
rclb
push
xchg
xchg
add
xor
mov
lds
push
daa
cld
add
sbb
pop
inc
add
sbb
add
adc
dec
push
fs
or
aas
incl
and
mov
loopne
add
add
push
sub
int3
jno
mov
add
dec
add
sub
mov
and
rorl
adc
inc
inc
add
sub
inc
pusha
and
sub
pusha
pop
leave
test
pop
pop
test
inc
inc
and
push
push
push
inc
jl
xchg
xchg
push
push
dec
add
pop
inc
pusha
addl
mov
and
and
adc
pop
ficoms
ret
shrb
jo
adc
das
sbb
xchg
xorb
call
pop
imul
add
add
xor
and
push
popa
xor
das
xchg
pop
lods
add
ret
sbb
add
subb
pop
add
push
dec
dec
sub
or
in
in
dec
dec
add
stos
pop
push
sbb
sbb
lds
adc
cmp
lea
dec
arpl
lock
mov
add
jnp
sbbl
push
cmp
pusha
adc
sbb
dec
fwait
push
mov
cmpsl
aad
add
add
cmc
cmpsl
lds
inc
test
gs
add
xor
jne
daa
adc
scas
clc
or
pushf
out
pusha
mov
sub
cltd
or
adc
cmp
inc
in
loopne
mov
cwtl
inc
loopne
sbb
imul
cltd
inc
or
rorl
out
mov
icebp
je
popf
das
iret
and
dec
adc
inc
cmp
lock
inc
and
push
adc
jl
xchg
in
xchg
call
sti
push
clc
jmp
sub
sbb
adc
rolb
mov
inc
and
sbb
arpl
adc
adc
clc
mov
push
jno
add
and
sbb
cmpsl
mov
fmull
fdivs
sub
mov
jbe
sbb
andl
push
xor
mov
jb
inc
mov
lea
xor
aas
sbb
hlt
mov
push
add
cmp
xchg
mov
fcompl
xchg
or
sub
or
add
addr16
repnz
and
andl
and
lods
mov
inc
mov
mov
fnstcw
lret
rcll
imul
or
add
and
and
or
sbb
add
push
stc
aad
add
adc
xchg
push
and
ja
push
lock
jnp
je
push
data16
dec
and
or
pusha
int3
adcb
lea
pop
jge
cwtl
push
repnz
xchg
imul
repnz
lahf
cwtl
pusha
daa
adc
pop
sub
adc
push
xor
and
add
xchg
es
nop
add
add
jae
inc
pop
addb
xchg
cmpl
xchg
popf
push
roll
jg
pop
pushl
push
pop
add
add
xorl
test
jbe
inc
or
rclb
lock
adc
xor
adc
and
add
lahf
leave
dec
in
aad
clc
clc
lods
adc
push
pop
ret
xorl
dec
test
imul
xor
shrb
lret
aaa
sub
lea
and
cmp
or
scas
inc
xor
imul
lods
push
mov
movsl
push
mov
sub
test
xchg
insl
dec
cmp
mov
mov
adc
mov
loope
add
pop
push
cmp
add
push
cltd
pop
add
popl
adc
mov
fisubl
rolb
clc
jb
or
fisttpll
pop
add
fs
ret
and
sub
test
fwait
test
mov
jae
je
popf
mov
loope
adc
lock
sbb
xchg
sub
mov
adc
jb
adc
mov
sbb
add
cmp
adc
push
out
mov
pop
das
jne
jo
jecxz
adc
mov
jo
addl
xor
and
sbb
std
jo
add
push
shrb
popf
mov
lods
sub
imulb
pop
jne
je
mov
in
bound
dec
add
bound
sbb
mov
repnz
add
addl
pusha
or
scas
js
add
sbb
xor
ja
add
inc
adc
adc
adc
mov
mov
xor
sub
scas
sub
or
movsl
clc
dec
xor
add
dec
out
cmp
loop
add
push
inc
cmpsb
sahf
std
aas
jmp
mov
or
xchg
ss
dec
sbb
jo
jnp
pop
xor
or
cmpl
and
xor
fildl
cmp
cmp
sub
jge
imul
sti
pop
test
adc
lea
sub
dec
inc
scas
or
inc
sub
push
movsb
dec
inc
sub
sub
clc
pop
cmp
dec
inc
and
xor
cmpsl
mov
sbb
add
test
push
imul
inc
cmp
les
sbb
jae
cmp
sub
ret
iret
add
xchg
push
pushf
inc
or
imul
and
cmp
sbb
mov
insl
jmp
loopne,pn
add
xor
testb
add
or
or
adc
and
add
scas
test
add
add
mov
add
data16
inc
mov
imul
adcb
lcall
rolb
or
push
insb
adcl
movsb
mov
call
or
or
sbb
push
sub
or
in
rol
add
repz
add
inc
adc
outsb
mov
push
and
mov
mov
cmp
cmpl
mov
movb
andb
xlat
dec
aaa
pop
push
cmp
orl
cld
sub
loopne
mov
and
mov
add
xlat
push
mov
arpl
mov
or
pop
pop
cli
sbb
lea
mov
add
enter
mov
pop
add
xor
mov
dec
movsl
sarb
int3
int3
fsubl
loop
xor
movd
add
add
push
fcomps
add
or
push
mov
jae
and
add
pop
adc
jmp
dec
mov
lea
sbb
add
mov
enter
mov
sub
decl
outsb
sub
cs
hlt
add
inc
push
adc
das
push
repz
test
sbb
loope
out
sahf
andl
rclb
lea
addl
add
mov
sub
sub
dec
add
enter
add
xchg
das
adc
sti
ret
loope
push
jb
xchg
nop
or
add
cltd
pop
andl
int3
les
fsubrs
sub
adc
and
add
test
add
mov
xchg
das
dec
push
lock
ret
xchg
sub
push
push
mov
pop
xor
pop
inc
data16
cmp
push
std
push
jle
sub
dec
or
mov
push
sub
stos
adc
hlt
clc
add
inc
add
in
inc
xorl
xor
pop
ja
mov
cmp
popf
xor
and
int3
andl
mov
pop
cmp
fstl
xchg
mov
mov
push
push
inc
dec
or
xchg
outsl
cmp
inc
cmpl
bound
jne
adc
xchg
or
das
in
dec
xor
xor
inc
and
dec
dec
jo
adcb
jo
pushf
push
loope
rclb
jbe
jmp
xchg
mov
jae
mov
xor
mov
ret
js
fld
jb
push
popa
pusha
sti
jae
lea
push
sub
sub
xor
push
aad
out
std
mov
pusha
shll
push
adcl
das
shrl
cli
testl
dec
mov
out
ret
mov
sub
add
lods
or
push
xchg
adc
int3
and
add
xor
mov
ret
inc
cmp
lcall
xchg
xchg
sub
iret
loopne
pop
pop
dec
add
cmp
or
and
cmp
xchg
add
test
xchg
adc
adc
incb
push
lods
lock
mov
adc
cmpl
icebp
sub
ret
mov
jecxz
or
je
jne
pushl
sub
scas
mov
jae
inc
jo
nop
fcmovnb
jae
cmp
add
pop
mov
pop
cld
xchg
es
sbb
inc
and
fadds
pop
xchg
sbb
or
fmuls
pop
mov
lahf
mov
dec
and
fisttpll
ret
mov
mov
push
ss
add
lret
imul
sahf
push
add
fistpl
sub
dec
pop
mov
nop
and
std
andb
test
xchg
pusha
lods
adc
rclb
int
dec
add
xchg
gs
sub
sarl
xor
jecxz
mov
loop
pop
bound
or
andl
test
pop
add
pop
or
cmp
dec
adc
add
imul
dec
nop
mov
or
add
jle
and
in
cmp
cmp
push
repnz
sub
js
lds
adc
or
mov
pop
stos
adc
adc
push
out
mov
push
or
push
cmp
inc
mov
test
inc
or
cmp
push
xchg
mov
out
mov
adc
leave
push
test
add
orl
push
jmp
lock
cwtl
xor
shlb
dec
imul
adc
mov
and
stos
int3
pop
mov
xchg
or
call
mov
sti
sub
iret
mov
into
add
xorl
adc
sti
xchg
and
pop
cmpl
popf
xor
dec
std
add
aam
sub
out
push
add
push
call
sub
inc
mov
js
pop
clc
test
je
test
xchg
jmp
or
jo
fsts
add
add
push
jmp
aaa
movsb
movsl
jo
dec
fwait
push
cmpl
push
or
pop
pop
jecxz
std
movsb
das
mov
add
jmp
cmp
aad
jg
or
push
push
lret
pop
std
movsb
dec
js
fdivr
ss
insb
cld
push
sub
sub
jmp
popa
xor
mov
sbb
add
pop
out
nop
dec
push
and
push
jecxz
sbb
fisubs
das
mov
test
shll
sbbl
shlb
movsb
xor
push
add
stos
mov
push
stc
in
or
pop
xchg
rorb
lret
xor
int
fisubrl
sbb
mov
sub
jo
cmp
and
mov
jne
jge
mov
in
inc
orb
dec
mov
sbb
or
int3
xor
mov
adc
pop
inc
sub
idivl
movsl
jo
stc
jmp
lods
stc
inc
xor
pop
add
movl
or
scas
mov
push
rcl
mov
inc
in
pop
pop
inc
mov
ss
inc
lods
adc
roll
jl
daa
or
add
xlat
cmpsl
ja
aas
push
ret
push
mov
and
aas
sbb
sbb
repz
mov
add
adc
cld
insb
xchg
lock
or
mov
dec
fstps
lock
dec
ret
push
push
fs
xor
pop
adc
test
xchg
mov
sub
add
mov
jmp
ret
xchg
and
cs
inc
jmp
lods
out
clc
adc
lods
lods
clc
popa
and
std
ficoml
imul
mov
call
fcoml
js
pop
push
scas
cmpsb
addl
js
jge
mov
sbb
mov
cmp
mov
pop
xchg
cmp
adc
pop
mov
bound
jge
push
add
jl
subl
into
sbb
jns
sbb
gs
mov
jb
push
lea
lea
es
xor
jmp
dec
and
js
or
mov
or
jne
add
test
push
aam
sub
or
sub
push
sub
push
std
fwait
into
xor
push
dec
add
inc
or
mov
add
or
hlt
hlt
shr
jb
cmpb
lock
shrb
and
and
int
and
jo
nop
adc
pop
lcall
cmp
in
jno
inc
mov
mov
add
mov
cmp
and
pop
push
loope
mov
mov
data16
jmp
into
out
push
loope
mov
xor
lock
iret
xor
cld
cmp
jmp
cmp
je
inc
fidivs
push
lock
cmp
outsl
push
rclb
xor
add
push
jbe
xchg
loopne
adc
cmp
jl
mov
inc
mov
imul
sbb
xor
cli
es
rorb
lea
add
mov
mov
sub
inc
sub
dec
dec
rolb
out
sarl
mov
dec
test
and
dec
adc
adc
shlb
inc
add
or
iret
jmp
insb
nop
fistpll
add
push
push
mov
movsb
jle
mov
xchg
addl
mov
xor
jg
xchg
test
push
or
gs
and
in
mov
lods
setb
pop
rorb
fsincos
aad
pop
lock
adc
push
add
sub
pushw
add
inc
dec
and
sbb
and
sbb
sbb
add
sub
sbb
dec
movsl
sub
in
mov
adc
push
aaa
and
dec
in
sbb
push
push
imul
js
push
add
popa
sub
jmp
pop
cmp
xor
addl
out
xchg
lock
mov
sub
xor
loop
or
push
outsb
push
mov
push
shrl
cmp
sbb
js
nop
inc
in
mov
sbb
jmp
enter
or
fsub
loope
cmpsb
out
pop
push
push
lods
cmp
lcall
mov
scas
xor
mov
adc
push
xchg
lock
sahf
sbb
scas
femms
lods
pop
loop
stos
xchg
dec
cmp
stc
out
xor
imul
add
xor
div
test
mov
aaa
rcr
notl
xchg
jne
andb
cmp
popf
aam
cmp
sbb
ss
xor
inc
inc
cmp
int
inc
or
dec
or
pop
mov
jp
mov
jne
mov
xor
cmp
dec
cltd
pop
loop
jo
test
sbb
sub
loop
out
rolb
pop
lahf
push
add
cmp
push
lea
cmp
ljmp
inc
fsubr
add
or
fwait
sbb
xchg
fcoms
pushf
pusha
or
pop
or
mov
mov
daa
dec
inc
xchg
testl
inc
push
xor
orl
test
movsb
inc
sub
mov
add
xor
cmp
sub
inc
jnp
xchg
mov
push
pop
push
push
cmp
ficompl
int3
mov
pop
sti
adc
imul
push
loopne
shrl
sahf
inc
push
sbb
mov
test
scas
flds
test
fbstp
aam
pop
mov
gs
jg
cmp
dec
or
and
xor
inc
pop
popa
mov
push
mov
push
out
rcll
cmp
push
sbb
push
movsl
dec
icebp
cmp
mov
cmpb
dec
hlt
mov
ss
sbb
adc
adc
push
rolb
and
rcrb
mov
mov
pop
push
dec
xorl
cmp
stc
dec
cli
or
pop
sub
sub
add
push
jae
push
add
out
repz
push
je
xor
imul
sbb
dec
insb
jne
clc
es
enter
jne
scas
cld
xor
xor
mov
sbb
cli
jmp
mov
and
pop
or
shrb
cwtl
xor
cmp
je
add
dec
xchg
in
push
or
lret
mov
fs
shl
popa
mov
pop
aam
pushf
mov
or
fsubs
out
cmp
pop
insl
addr16
pop
xchg
sahf
mov
xchg
call
outsb
jnp
push
loop
ret
cmp
push
cmp
inc
sti
arpl
je
rorb
pop
mov
out
push
jb
movsb
or
pop
sbb
sbb
or
cmc
push
loop
outsb
insl
hlt
cmp
loopne
mov
and
sbb
xorb
inc
cmpsb
pusha
mov
jl
test
adc
and
adc
or
filds
jle
lea
mov
inc
loopne
pop
add
or
orb
or
mov
add
js
sub
lahf
repnz
lock
cmp
or
and
mov
inc
adc
shl
and
pop
shr
mov
and
pop
mov
fsubrs
movsb
xor
jnp
dec
push
jb
push
fstpl
push
or
add
aas
fildll
js
dec
fiadds
dec
popa
arpl
mov
cmp
push
sti
sahf
mov
mov
mov
adc
inc
aam
push
pop
pop
jle
dec
shll
push
shll
js
mov
int
test
dec
cmc
es
lret
cwtl
cmp
sti
or
push
sub
cmpsb
pop
jbe
in
testl
scas
push
push
xor
push
xor
sub
mov
adc
and
pop
movb
movsb
sahf
mov
sbb
mov
xor
sbb
xchg
rcl
pusha
aas
jae
fadds
add
mov
sbb
xor
add
jo
push
fs
push
push
pop
xor
cmp
clc
mulb
push
jp
or
test
subl
mov
cmp
or
mov
out
bound
and
pop
es
dec
in
jne
cmp
xchg
xor
inc
jmp
addps
add
lock
add
loopne
mov
jne
cs
insb
insb
jo
or
xchg
mov
cmp
mov
push
iret
add
xor
jne
sbb
mov
daa
lods
pusha
dec
cmp
call
sbb
mov
push
or
aam
mov
xchg
xor
sar
xor
xor
adc
iret
in
push
aad
lahf
add
out
and
pusha
sbbl
pop
sub
test
and
xchg
add
add
pusha
and
pop
push
cmpsb
cmp
or
stc
xor
out
and
das
xorl
mov
inc
sbb
pop
jne
orl
dec
or
mov
imul
dec
pop
dec
test
jo
fbld
or
test
lret
jne
add
das
call
xchg
stc
fldl
sar
lahf
dec
dec
mov
lods
cmp
or
repnz
sahf
fnstcw
add
imul
xor
insl
sub
mov
adc
adc
inc
and
pop
mov
into
adc
data16
or
push
adc
je
xor
push
xor
jb
inc
inc
imul
lcall
mov
push
dec
mov
lock
aas
add
ljmp
js
add
add
invd
mov
mov
repnz
and
gs
mov
or
push
push
inc
and
pop
fidivs
pop
sub
mov
ds
and
jo
xchg
hlt
stos
pusha
cli
out
fidivrs
push
pusha
adc
mov
hlt
lods
pop
sub
push
xchg
mov
mov
stos
sub
rorl
cmovo
cltd
inc
std
cmpsb
or
mov
loope
sub
gs
int3
adc
fsubrl
sti
insl
adc
add
adc
lret
sub
arpl
test
jecxz
shll
insl
test
lods
sub
enter
mov
and
push
mov
push
sub
or
lock
adc
lea
pusha
adc
mov
or
cmp
pushl
and
mov
xchg
fdivp
jp
jno
orb
inc
push
loopne
int3
lock
mov
or
inc
dec
inc
lock
fcoml
push
inc
test
sbb
je
sub
jnp
mov
je
fs
pop
pop
fs
pusha
inc
push
sbb
insb
insb
push
pop
scas
out
movsb
xor
push
mov
sub
sbb
or
js
iret
mov
pushf
cmp
cli
je
popf
add
sbb
xchg
cwtl
push
inc
inc
sbb
adc
push
mov
hlt
sti
push
sub
inc
and
inc
adcb
sbb
or
dec
roll
add
inc
adc
andb
pop
enter
lock
jp
es
mov
jnp
jmp
jmp
jmp
push
fistps
adc
sbb
cmp
addl
jnp
in
push
mov
lret
add
push
and
mov
xchg
popf
sbbb
sub
sub
xor
sub
push
lods
cmp
xor
cld
sub
sahf
push
flds
pop
mov
mov
in
mov
popa
inc
jo
sbb
dec
add
sbb
scas
xor
fs
lods
lods
sub
adc
pop
lock
and
jle
xlat
call
push
and
shll
mov
push
adcb
inc
cmp
mov
push
xchg
jns
in
mov
cmp
jo
popa
add
dec
test
cmp
cs
or
add
das
xor
inc
adc
outsb
les
je
xlat
cmp
test
push
inc
pop
je
dec
pop
or
int
fistl
fidivrs
mov
sub
sub
mov
fwait
sbb
xchg
aaa
sbb
cmp
data16
mov
dec
push
lea
push
pop
cwtl
push
out
rclb
add
sbb
dec
push
or
xor
xor
rorb
lods
and
adc
pop
fcoms
push
imul
adc
gs
add
popa
add
mov
xorb
xchg
icebp
and
jb
clc
jns
pop
cwtl
fcomps
jns
lret
or
xchg
imul
jb
fdiv
add
fmull
cmp
mov
repnz
inc
adc
add
or
add
jo
cmp
stos
cltd
mov
ljmp
cmovo
push
inc
ss
jge
outsb
fs
cmpsb
popa
js
into
in
outsl
pusha
ret
jge
int3
mov
inc
xchg
pop
sbb
sbb
pop
mov
inc
mov
inc
and
or
xchg
adc
or
mov
pop
add
test
xor
ret
push
or
pop
out
or
out
jmp
arpl
or
xchg
push
dec
inc
call
test
pop
adc
lcall
out
xor
mov
adc
cs
cltd
stos
xor
push
test
jbe
lea
and
adc
cli
sub
and
jecxz
and
sbb
cltd
mov
mov
dec
mov
cmp
ja
pop
push
adc
fiadds
mov
mov
cmpl
pop
dec
inc
lods
out
inc
mov
mov
dec
jno
pushf
aad
push
subb
nop
mov
gs
mov
mov
nop
fildl
mov
mov
and
rcrb
adc
inc
pop
sbb
xchg
jp
xor
xor
dec
dec
test
pop
mov
movsl
add
mov
jl
pop
cmovp
and
insb
lea
push
adc
daa
add
and
addb
add
xor
push
cmpsl
mov
pop
out
xchg
or
jb
orl
insl
ret
xor
or
mov
mov
push
add
insb
stos
sbb
add
dec
sbb
fdivp
outsb
ficomps
sub
or
cmc
inc
lret
aas
and
ja
movsl
sub
movsb
jns
pop
dec
and
push
insl
or
movsl
dec
repz
adc
shl
sbb
lea
cmp
les
fsubrs
or
and
xor
add
call
jb
inc
fildll
sub
leave
or
inc
push
jl
and
or
xchg
mov
or
insb
fstpt
adc
inc
js
and
and
sub
adc
loop
and
pop
mov
mov
xor
or
inc
jg
pop
rorl
dec
sti
hlt
lods
xor
jno
push
adc
js
pop
lret
push
or
ds
je
in
cmp
push
ljmp
push
out
pop
xchg
add
jp
sbb
add
or
dec
outsb
or
push
and
pop
call
adc
add
add
enter
cmp
add
or
imul
jb
add
sbb
sub
xor
call
and
push
mov
cmpsl
add
imul
andb
xlat
sbb
mov
fbstp
xchg
sub
mov
xor
push
or
and
push
aam
jbe
push
inc
pusha
and
xchg
cwtl
sarl
pushf
adc
jo
xchg
adc
or
sbb
sbb
xchg
jbe
add
sbb
xchg
jb
mov
jnp
xor
pusha
dec
push
push
fidivl
movsb
jns
ss
inc
xor
dec
xchg
pusha
xor
mov
and
fwait
add
mov
push
pop
enter
add
sbb
cld
adc
js
mov
push
mov
fmuls
add
push
inc
xor
shr
cmp
cmp
add
shrl
dec
or
ljmp
pusha
ss
inc
push
dec
pop
imul
pusha
test
push
fildll
mov
inc
in
jmp
sub
xor
ret
mov
lods
stc
inc
test
js
aas
push
sbb
jmp
pushl
jmp
push
pop
mov
pop
add
push
cmpb
notl
out
jae
dec
push
inc
ds
sub
sbbb
xor
ficompl
pop
mov
popa
mov
mov
sub
mov
jl
andl
mov
out
adc
ret
push
fs
mov
outsb
inc
dec
xor
pop
jae
and
and
jecxz
cmp
int3
in
mov
push
push
adc
gs
scas
popa
stos
jo
inc
xor
cmpsl
shr
adc
fists
movsb
push
mov
and
jbe
jo
or
cmpsl
mov
out
popa
not
lods
push
es
decb
xlat
rclb
jecxz
pusha
pop
movsb
jl
and
xchg
jmp
xchg
loope
loop
sbb
je
push
pop
mov
sub
xor
lock
sbb
pop
jmp
and
in
pop
mov
adc
outsb
js
das
pop
bound
push
cs
xor
inc
push
push
or
jmp
mov
push
xor
inc
jno
lods
or
sub
pop
pop
sub
orl
push
push
xchg
pop
add
sbb
push
sub
bound
pop
aam
mov
add
cmp
cmp
mov
xor
add
mov
testb
je
sbb
mov
push
or
lock
mov
dec
jl
loope
xor
push
sar
sbb
adc
or
inc
pusha
in
inc
push
subl
std
or
rorb
inc
mov
arpl
adc
xchg
lcall
mov
in
cmp
test
sbb
roll
or
xlat
add
or
add
inc
push
jo
out
push
pop
fisttpl
popa
popa
add
sarl
aaa
add
or
add
mov
ret
rcr
xchg
mov
pop
loopne
mov
pop
arpl
mov
incb
pop
add
loopne
jl
test
push
xor
scas
mov
es
jmp
push
cmovle
shrb
mov
mov
data16
push
mov
push
xchg
mov
es
mov
lret
out
neg
movsl
push
inc
cld
adc
sub
push
push
jo
dec
movsb
or
mov
es
lret
push
mov
test
in
push
pop
push
push
push
inc
and
decl
cmp
add
add
sbb
ljmp
xchg
push
stc
mov
push
in
xchg
outsl
mov
push
sub
ret
sub
push
sub
lds
xor
or
add
sbb
pop
cli
jecxz
add
mov
push
push
shlb
addl
aas
movsl
add
xchg
and
xor
lods
fs
mov
xchg
js
add
rolb
xlat
xor
adc
xchg
fdivrs
movsb
stos
dec
mov
or
sub
inc
arpl
xchg
adc
add
aam
adc
cmp
or
jae
sti
and
add
test
adc
inc
outsb
or
inc
movsl
or
aam
dec
test
adc
mov
or
in
clc
push
test
adcb
repnz
cmpsb
pop
sbb
arpl
aaa
or
xor
cmp
gs
mov
cmpsb
sbb
push
mov
dec
mov
outsl
push
or
jae
push
mov
add
js
flds
mov
adc
jae
jno
xor
pop
orl
mov
pop
inc
adc
insb
idivl
dec
rorb
bound
xor
add
push
add
dec
lea
int3
movsb
mov
gs
mov
nop
adc
sbb
xchg
push
call
cmp
nop
mov
sbb
add
test
dec
cmp
sti
mov
sarb
xchg
ds
mov
jp
push
call
xchg
stos
push
push
subl
push
rcrb
cltd
pop
inc
cli
mov
push
test
dec
cwtl
add
add
test
jl
sbb
add
cmp
lods
lcall
pop
int3
and
mov
movb
insl
pushf
or
sbb
stc
add
inc
cmp
insb
shr
inc
add
in
sbb
push
or
ljmp
and
adc
jecxz
clc
add
push
xchg
and
pusha
insb
std
cltd
shlb
xchg
and
dec
or
test
repz
in
cwtl
cwtl
imul
jo
add
fsubs
mov
stos
or
hlt
testb
sbb
gs
sbb
xchg
scas
mov
push
pop
adc
add
loopne
lock
push
in
push
test
pop
jns
adc
shlb
shll
push
mov
out
jno
je
enter
mov
pop
pop
push
push
mov
xor
jno
jo
aam
rolb
cmp
push
sbb
push
fsubrs
adc
jge
rclb
sahf
fdivs
add
sub
imul
pop
out
xor
cltd
enter
ds
loopne
jmp
popf
dec
sub
mov
test
insb
insb
lcall
cli
push
popa
jno
pop
jne
jg
psrld
fdivrs
adc
jg
inc
mov
adc
mov
xchg
xchg
xor
je
loopne
mov
cmp
dec
jne
loopne
add
ss
cwtl
adc
or
into
mov
fldpi
push
push
dec
sbb
pop
mov
ficomps
pop
mov
lea
and
jle
aas
inc
or
add
xor
es
addr16
lods
add
add
cmp
jbe
adc
mov
cmp
iret
sub
mov
cmp
cltd
nop
test
adc
xor
hlt
sti
dec
sbb
dec
xchg
mov
adc
pop
mov
repnz
in
sub
out
sbb
shrb
in
cwtl
insb
xor
mov
adc
mov
daa
dec
clc
push
push
mov
gs
add
cmp
adc
scas
cmp
fsts
add
testb
aaa
popa
inc
in
in
adc
in
lea
out
jo
or
es
push
lcall
sub
push
mov
jns
pop
sbb
adcb
stos
pop
or
inc
mov
or
out
fyl2x
and
add
inc
mov
and
cmp
in
adc
jbe
mov
les
adcb
les
cmc
ficoml
movb
push
xchg
adcb
aam
clc
push
pusha
je
lock
cmp
dec
es
fldenv
enter
dec
mov
test
sbb
inc
pop
ljmp
jp
subb
or
adc
mov
sbb
std
ret
loopne
loop
js
add
cs
sub
add
and
test
sbb
into
test
sbb
pusha
lock
push
pushf
out
int3
out
pop
testl
pop
inc
pop
xchg
lock
xor
in
and
testl
mov
das
inc
jle
xor
or
mov
neg
ret
shl
ret
and
push
adc
mov
je
xchg
and
fcoms
loopne
and
adc
xchg
or
scas
and
jo
push
xchg
xor
and
dec
js
movl
pop
pop
push
push
pop
or
and
or
dec
data16
insb
xor
pop
or
jp
lock
dec
daa
bound
or
add
push
rcrb
testl
xchg
push
loopne
or
mov
or
mov
sub
shrl
add
test
or
push
loope
xchg
js
lock
push
mov
cmp
push
add
imul
mov
push
sbb
and
aad
adc
and
mov
jns
mov
pop
push
aas
mov
xchg
adc
stos
sti
pop
sub
loopne
js
jno
cmpsl
adc
or
lahf
addl
in
daa
and
in
xor
in
aaa
cmp
adc
xor
lea
sub
push
adc
subl
mov
or
lock
pop
ja
add
push
cli
pop
cld
push
adc
dec
es
in
cmp
inc
shl
adc
adc
mov
or
lcall
repnz
fsubs
scas
pop
or
cmp
loop
push
and
nop
movsl
inc
add
fs
jo
out
andl
dec
out
sti
out
cmp
ja
je
or
je
or
sub
sub
sti
das
adc
mov
cmp
outsl
stos
das
in
adc
rorl
or
add
or
jne
sahf
push
arpl
cmp
push
jmp
cmp
sub
cmpsl
push
adc
adc
dec
push
push
cmp
adc
rcrb
mov
or
dec
cmp
adcl
jbe
lcall
movsb
dec
sbb
push
add
or
aam
mov
add
xchg
loop
inc
adc
sub
inc
mov
ds
es
test
dec
pop
js
sub
adc
fsubr
adc
rcll
popa
pop
mov
repnz
mov
call
aad
sub
popa
insl
ljmp
dec
pop
push
ret
mov
xchg
or
jno
pop
dec
je
sub
xchg
mov
out
or
addb
adc
repnz
jmp
addl
adc
mov
test
mov
into
daa
or
ret
push
adc
rorb
das
inc
imul
adc
das
mov
insl
dec
insl
popa
stos
das
out
or
jbe
mov
inc
sbb
and
or
and
push
and
and
add
push
stos
cmp
test
or
lods
pop
and
cmp
or
sbb
stos
js
mov
pop
fsubl
xor
adc
jg
out
je
push
icebp
or
xchg
sar
das
aam
or
fimull
push
xor
mov
xor
int3
adc
dec
push
pop
mov
cmp
push
or
faddl
adc
add
das
push
and
daa
push
or
sti
xor
imul
push
inc
add
push
test
mov
xchg
rcrb
mov
dec
loopne
das
add
cmpl
jae
mov
pop
nop
daa
inc
add
add
add
and
jns
sbb
sbb
fsubr
rolb
scas
in
lret
js
mov
addl
cmp
cs
sub
aam
cmp
js
pop
inc
mov
pop
mov
cmp
add
fcoml
loope
jns
fsubrp
push
xor
cmpb
ret
cmp
push
mov
fsubrs
movsb
push
les
insb
bound
sub
and
mov
scas
mov
xchg
leave
cwtl
adc
jl
mov
pop
cmp
inc
loop
pushf
sarl
adc
or
aam
icebp
lock
jo
mov
cltd
xor
push
xchg
inc
mov
std
inc
add
loope
sbb
mov
iret
and
sbb
add
add
leave
jne
insl
xchg
mov
cmp
fcmove
repz
or
adc
push
cmp
dec
pop
repnz
sbb
inc
sub
mov
je
das
insl
cmpb
xor
es
mov
fisubrs
or
inc
push
test
sbb
sub
mov
les
push
push
faddl
daa
shrb
popf
push
xor
loop
gs
aam
ja
push
lret
mov
add
xchg
jge
lock
jae
movsl
call
sub
clc
test
in
ljmpw
stos
inc
pop
mov
jo
mov
sbb
push
xchg
pop
test
lahf
push
and
xchg
test
outsl
cmpsb
jns
add
dec
je
daa
xorl
fmull
mov
popf
or
std
loopne
add
pop
test
add
rcr
stc
or
mov
mov
rcrb
rclb
and
mov
or
push
push
and
sbb
mov
add
push
sbb
adc
arpl
outsl
add
and
push
cmpsl
or
and
or
dec
pusha
ja
mov
lock
xchg
bound
sahf
dec
push
loop
aas
add
xor
mov
adc
xchg
das
xchg
sbb
sahf
jb
xchg
or
inc
int3
cmpsl
imul
inc
jp
push
xchg
add
or
enter
leave
push
stc
mov
je
rcl
add
in
mov
and
mov
arpl
push
sub
xor
push
pshufw
roll
int
lcall
push
aaa
in
mov
addr16
dec
cmp
hlt
and
inc
push
ret
cld
or
mov
js
sub
movsb
pop
adc
mov
cltd
cld
jle
ret
aaa
sarl
nop
cmp
sbb
leave
ret
jne
mov
and
or
push
mov
pop
mov
mov
pop
lea
or
pop
adc
cmp
jo
push
and
or
mov
inc
pop
rol
sub
lods
out
and
adc
push
pop
inc
xchg
lods
dec
xchg
ret
or
jl
xor
push
mov
adc
call
pusha
xchg
xchg
sub
pop
adc
shlb
push
pop
loope
fs
mov
mov
or
mov
mov
lock
test
ret
xor
data16
fisubs
movsb
or
sub
into
add
das
aaa
addl
cmpsl
xor
insb
fiaddl
cmp
jne
xor
adc
int3
xor
jo
mov
fs
fldt
test
xchg
sbb
call
sbbl
cmpl
cmp
mov
jo
sti
jge
adc
fwait
cs
and
jge
shll
outsl
sarb
sbb
push
inc
inc
cmp
and
push
sbb
jmp
popa
pusha
out
pushf
std
and
adc
cmpsb
sub
add
adc
and
hlt
sbb
daa
pushf
imul
dec
les
pop
test
xchg
cltd
xor
sub
cmp
cmc
add
jle
ljmp
adc
lods
sub
inc
and
fistl
and
notb
testb
sub
sbb
cltd
xor
jle
sbb
inc
fcompl
pop
movsl
das
ror
or
fwait
mov
ficompl
aam
popf
xchg
mov
jl
test
cli
test
paddusb
scas
and
shl
add
stos
push
sub
push
pop
jb
add
sbbl
xor
mov
mov
inc
sub
adc
or
adc
mov
leave
push
adc
sbb
pushf
lods
jbe
int3
sub
xor
dec
sarb
pop
cmp
cmpsl
repnz
pop
xor
jmp
in
addr16
cmp
loope
dec
lods
push
or
movsl
repz
lock
mov
cltd
loope
lock
or
jmp
cmp
fcomp
div
add
imul
arpl
in
mov
mov
add
push
pop
lret
roll
fs
dec
or
inc
add
or
or
daa
cmp
imul
jg
xor
lret
cmp
je
imul
push
mov
popf
or
fcomps
jle
dec
mov
addb
stc
cmpsl
addb
or
sti
and
push
hlt
cmc
mov
aas
shll
push
inc
dec
dec
xchg
sub
je
push
in
push
dec
les
js
or
add
lock
mov
add
mov
cmpsl
xchg
inc
sti
fisubs
cld
jns
mov
jg
sti
adc
mov
dec
sbb
fwait
leave
ljmp
add
ja
rcrb
stos
sub
cmp
cmc
xor
jle
in
inc
xchg
push
xchg
call
data16
mov
pop
mov
shrl
pop
inc
loop
jp
cld
popa
mov
push
dec
mov
imul
jnp
cmp
enter
or
xchg
icebp
mov
pop
shr
adc
stos
and
das
pop
or
push
jb
or
inc
bound
and
cmpsb
mov
sbb
inc
ja
adc
or
cmp
dec
or
je
adc
repz
jge
and
in
sbb
jne
sbb
xchg
sbb
sbb
fwait
inc
and
and
and
cmp
imul
sbb
sub
inc
cmpb
lea
xchg
mov
add
push
or
mov
pop
rcll
nop
jae
xor
mov
xchg
xor
xorb
int
in
cmp
cmp
adc
inc
or
cmp
xor
and
jne
dec
fdivl
xor
add
jp
inc
inc
push
gs
pusha
dec
mov
orl
dec
outsl
push
xor
cwtl
inc
ss
dec
jmp
push
xchg
push
fistpl
push
jp
push
fnstcw
scas
mov
mov
inc
pushf
negl
push
jo
dec
adc
push
fld
dec
cmp
call
mov
and
inc
cwtl
add
daa
cmp
push
adc
in
xchg
and
hlt
mov
push
dec
ret
push
scas
sbb
pop
adc
dec
dec
ss
pop
lods
push
js
sbb
jg
pop
inc
sub
push
data16
addr16
ss
and
push
cmpsl
pushf
adc
movsl
movsl
push
sbb
jo
and
call
xor
push
pop
arpl
jge
cmp
loope
rclb
or
pop
jg
fcmovnu
sbb
push
inc
lea
xchg
or
inc
repnz
cmpsl
dec
fsubrl
ret
imul
xlat
mov
pop
cmp
hlt
cltd
fdivl
enter
in
mov
xor
add
jle
in
push
xchg
inc
dec
pop
lcall
mov
pop
in
push
jge
testb
or
or
stos
popf
cmpl
es
push
mov
aas
bswap
and
loopne
loopne
add
or
and
sub
rcll
in
popa
cmp
jb
stos
mov
incl
jne
cmc
push
rdtsc
repnz
pop
pop
mov
inc
xchg
out
sbb
push
sbb
popf
add
sub
mov
movsb
push
xor
adc
loop
or
add
inc
jl
push
int3
or
jne
movsl
daa
mov
sub
test
call
xor
mov
loopne
jno
imul
imul
in
sbb
push
adc
mov
jne
or
add
mov
adc
loopne
xchg
shlb
shlb
repz
jb
test
insl
movsb
dec
sahf
aam
scas
fcomp
and
ret
aam
fisttps
lahf
xor
loopne
rorl
jge
arpl
test
and
pop
sub
jnp
inc
adc
mov
sahf
add
add
xchg
add
out
adcb
add
push
insl
pusha
fcomps
sbb
xlat
add
inc
pop
adc
dec
or
fwait
xchg
add
pop
cmp
jne
sbb
jl
pop
mov
adc
add
es
pop
xchg
int
and
adcl
xor
testl
jmp
push
jb
adc
or
int3
and
into
rcr
jl
jb
inc
js
or
mov
sti
test
dec
and
push
and
jecxz
jmp
xchg
fdivs
cmp
fsubr
or
sub
and
pop
lret
push
push
call
leave
insl
push
imul
adc
enter
repz
ret
xor
pop
push
inc
push
sub
mov
xchg
inc
mov
mov
xchg
rcrl
clc
sub
jge
repz
js
adc
dec
rorl
mov
dec
jl
adc
loopne
enter
enter
mov
add
pop
outsb
adc
loop
subl
and
je
adc
cmc
add
jecxz,pn
jns
jl
sbb
push
pop
xor
pop
outsl
daa
or
in
xchg
lret
sbb
adc
sub
sbb
add
sub
sub
adcl
add
arpl
push
xor
insb
mov
cmp
mov
ljmp
jbe
add
xor
push
leave
push
xor
jns
xor
jnp
mov
nop
cmp
imul
cmp
jno
call
add
leave
les
add
les
mov
orb
xchg
pop
sub
sar
add
pop
repnz
push
jb
movsb
push
jns
push
and
or
push
or
mov
add
mov
lret
sub
jo
add
mov
sbb
mov
cmp
push
cmp
push
pop
movsb
xchg
lock
jmp
adc
or
and
lret
xchg
rcll
cmpl
sbb
or
sub
add
enter
stos
inc
shrl
or
or
pusha
adc
stos
push
cmp
and
aad
fildl
fs
pop
or
adc
push
and
lock
inc
push
cs
pop
ja
aaa
aas
ja
add
pop
inc
loopne
cmpb
mov
data16
jecxz
ror
mov
dec
and
and
and
movsb
fwait
mov
dec
popa
arpl
sbb
xor
gs
decl
add
shrb
ret
and
push
jb
cmp
sub
fiaddl
inc
loope
jne
es
or
cmp
mov
xor
inc
lret
push
xlat
adcb
lea
mov
jnp
fdiv
push
add
mov
push
push
adc
sub
in
je
daa
inc
xor
data16
or
mov
jb
pop
mov
notb
pop
shlb
mov
and
aam
nop
repnz
add
das
mov
pusha
and
outsl
loopne
or
sub
clc
sub
push
inc
sbb
push
adc
add
iret
mov
dec
sbb
mov
xor
mov
pop
int3
mov
rolb
inc
push
in
mov
inc
cltd
loopne
inc
stos
add
test
enter
hlt
call
dec
push
ficoms
lea
mov
pop
dec
xor
rcrb
xor
add
xor
dec
adc
lahf
pop
sbb
or
fsts
or
cmp
adc
mov
cmp
add
loopne
mov
in
pop
mov
fwait
iret
lods
inc
pop
ret
outsl
aaa
je
rcl
fwait
arpl
shll
addr16
stos
stos
push
dec
xchg
push
inc
imul
mov
inc
ror
cmp
das
inc
testl
rorb
sub
xchg
loope
dec
add
inc
mov
mov
out
fidivrs
mov
test
iret
nop
push
cmp
test
sub
jbe
fdivl
xor
test
xchg
mov
mov
mov
mov
push
xchg
rclb
test
ret
in
cltd
dec
add
cmp
adc
adc
push
cmp
sbb
stos
sti
mov
pusha
or
cltd
adcl
pop
ret
inc
aaa
sbb
in
xor
sbbb
sbb
sub
dec
les
pusha
or
jae
mov
mov
movsl
xor
stos
sbb
les
cmpsl
repz
or
nop
ds
mov
pop
xor
popa
adc
mov
mov
subb
adcb
in
sahf
je
and
aas
lods
or
push
push
pushl
add
xchg
xchg
sub
push
rcll
pop
push
push
fisttpll
push
imul
es
dec
sbb
or
shrl
and
or
pop
sbb
dec
adc
jecxz
roll
xchg
in
stos
cmp
clc
rcll
pop
sbb
std
ljmp
cld
jge
scas
push
call
clc
pop
cwtl
mov
jo
pop
add
sbb
inc
and
lea
dec
jp
fcoms
imul
cmp
jb
xor
sbb
fwait
mov
add
daa
or
popa
call
fwait
es
cmc
leave
mov
int
outsb
cmp
and
sahf
or
push
mov
syscall
inc
push
inc
xor
mov
inc
jno
add
sbb
jge
push
inc
mov
insb
pop
push
sti
jl
test
ss
sahf
jg
ljmp
or
ret
mov
xchg
sbb
loop
cltd
pop
mov
sub
loope
out
push
mov
adc
test
jle
dec
add
jmp
sbb
xchg
call
fldl2t
sub
push
sbb
out
lock
sub
das
test
in
xor
push
lds
movsb
pop
inc
rclb
xchg
ss
sub
jge
aaa
mov
or
or
das
das
sub
xor
xor
mov
xchg
sub
inc
pop
dec
jl
rolb
int3
inc
and
or
shl
nop
lea
add
jg
or
inc
add
mov
lds
in
pop
lret
aas
pop
mov
inc
mov
sarb
dec
push
decl
dec
jno
jne
cli
lcall
bound
lea
out
add
and
cmc
pushf
lea
test
lock
cmp
xor
sbb
add
dec
scas
insl
flds
push
mov
and
cwtl
mov
jnp
inc
push
pop
xchg
or
int
jmp
fs
or
push
fwait
push
inc
ss
sbb
mov
fwait
pop
push
sahf
inc
add
push
mov
add
mov
mov
dec
insb
std
in
adc
jb
arpl
aam
adc
mov
add
mov
push
addb
or
xchg
inc
out
cmp
add
test
icebp
push
jp
and
xor
xchg
sub
mov
and
inc
push
call
stos
dec
sub
adc
or
shlb
and
hlt
xor
or
xor
or
daa
mov
lods
sub
sbb
inc
incb
rorl
xrelease
adc
pop
iret
push
mov
mov
mov
or
sbb
jmp
aaa
mov
jae
int
and
loop
push
jns
sbb
clc
lods
push
mov
mov
adc
pop
pop
push
push
mov
jae
push
mov
xchg
mov
cmpsb
pop
xchg
mov
xlat
push
and
push
mov
push
mov
js
push
sbb
adc
cwtl
or
je
lea
aas
adc
sub
mov
push
inc
xor
imulb
int3
mov
and
push
call
sub
sti
insl
xor
mov
jno
and
cmp
aam
xor
repnz
out
enter
call
jnp
repnz
scas
push
flds
pop
ljmp
adc
lret
mov
add
jnp
mov
adc
push
push
movsl
cmpsl
xchg
mov
rclb
adc
and
sbb
mov
xor
dec
push
push
movsl
push
xor
add
mov
or
xchg
pushf
ret
pusha
push
popa
sbb
adc
and
pop
mov
mov
adc
stos
lea
les
loopne
adc
sub
fs
mov
adc
bound
cmpsl
jbe
push
cli
mov
sub
inc
sar
add
ds
loopne
xor
roll
inc
mov
and
sarb
xchg
in
das
sub
loopne
mov
add
add
push
loopne
push
sbb
loop
and
inc
add
xchg
dec
addb
push
test
sbbb
xor
pop
notb
xor
fwait
mov
ret
pop
jno
lea
subb
addb
inc
mov
adc
add
fimuls
nop
or
in
mov
dec
and
pop
mov
inc
adc
out
popa
sbb
pop
and
sub
or
bound
push
in
mov
inc
xor
imul
test
cmp
mov
scas
inc
cmp
addb
sbb
xor
adc
mov
adc
push
adc
rol
add
aaa
add
or
add
rcrb
cmp
mov
dec
mov
and
bound
ret
sub
jecxz
pusha
xor
in
jbe
sbb
inc
pop
sbb
jo
mov
mov
mov
or
cmp
sbb
ret
sub
add
popa
add
jle
sub
adc
pop
icebp
cs
or
push
mov
dec
mov
rcll
sahf
call
outsl
mov
push
xchg
dec
adc
loope
pop
inc
ret
adc
ud2
and
rol
mov
ljmp
cmp
jecxz
hlt
pop
add
xor
inc
jecxz
push
mov
push
push
pop
or
pop
adc
cmp
lea
leave
cmp
dec
sbb
or
subl
or
mov
push
les
or
pushf
sbb
push
inc
inc
pop
int
or
sbb
push
call
pop
loop
xor
mov
stos
adc
adc
fwait
jnp
mov
orb
mov
imull
add
jne
sub
outsb
shll
sbb
incb
mov
cmp
inc
dec
push
mov
jb
ja
mov
xor
lret
idivb
dec
hlt
jae
or
add
jo
fs
xor
aad
push
add
xchg
push
mov
mov
mov
or
lods
push
rclb
sub
jno
and
adc
rclb
sub
sub
stos
xchg
nop
add
or
mulb
cmp
xor
aaa
sub
xlat
xor
sub
loopne
arpl
mov
aas
pop
and
jo
pusha
or
nop
lea
xchg
dec
sbb
sbb
pop
clc
xchg
subl
xchg
fists
mov
mov
or
cmp
ja
and
sahf
repz
fldt
dec
or
mov
ja
mov
int3
mov
jo
mov
and
adc
or
mov
and
mov
mov
or
push
mov
or
fists
cmp
xchg
xor
mov
fs
sub
xor
jb
mov
pushf
mov
decb
pusha
ljmp
ret
int
push
dec
adc
mov
sub
adc
loopne
jmp
pop
mov
arpl
or
movsl
adcb
cmp
punpckhwd
inc
or
and
jge
gs
dec
int3
shlb
std
push
test
test
out
mov
fwait
mov
inc
aas
add
inc
xchg
loopne
and
pop
enter
in
add
adc
add
nop
es
sub
nop
add
pusha
daa
nop
add
nop
add
mov
sub
jns
movsb
or
in
xor
xor
aad
inc
pop
scas
cmp
leave
xchg
add
inc
push
mov
xor
or
xor
mov
mov
mov
sbb
lea
leave
jmp
or
and
inc
cld
or
out
push
adc
pop
add
sbbl
cmp
adc
fxch
inc
fistps
or
dec
sbb
sbb
inc
sub
push
mov
xchg
or
pop
lods
pusha
sbb
add
lret
lds
or
mov
and
jle
pop
insl
mov
add
hlt
push
js
mov
jo
mov
mov
xchg
cwtl
js
jns
adc
scas
lea
mov
jl
cmpb
dec
xchg
or
frstor
cs
movsb
fldenv
xor
shl
or
push
xor
cmp
fistpl
mov
ds
fimuls
enter
dec
repz
cwtl
xor
loopne
in
imul
cmp
sbb
add
mov
add
in
orb
pop
mov
jbe
push
mov
add
push
and
mov
jbe
daa
or
xchg
xchg
outsl
jo
xchg
jne
add
loopne
mov
arpl
popf
adc
or
mov
in
push
mov
xchg
jl
xchg
mov
mov
sub
lret
lock
cmp
xor
fcoms
push
xchg
xchg
mov
cmp
jne
or
pop
les
aad
loopne
daa
loop
nop
and
hlt
imul
push
sti
fdivrs
lock
adc
jo
mov
mov
add
push
mov
mov
or
scas
xchg
inc
cmp
xchg
push
inc
add
adc
mov
xor
pop
mov
adcl
adc
addb
jbe
or
jbe
pushf
mov
add
dec
les
jne
adc
push
addl
mov
into
push
stc
add
push
cs
xchg
out
dec
xor
jb
adc
pop
jns
add
mov
sbb
cmp
adc
or
jmp
popa
fadd
pop
add
and
mov
push
addr16
inc
gs
ret
mov
pop
dec
add
jne
leave
cmp
sub
xchg
sbb
sub
cltd
aam
jmp
mov
inc
rorb
dec
inc
add
cmp
cltd
lods
sub
xchg
lods
arpl
dec
dec
jle
insb
mov
inc
mov
lock
xlat
sbb
sbb
outsb
add
mov
sbbb
fcmovnb
or
sbb
inc
pop
sbb
fwait
add
or
push
dec
sub
sub
mov
mov
jp
loopne
mov
ret
pop
sahf
aam
mov
rcr
in
lock
inc
stos
call
arpl
push
mov
push
jno
lock
call
jge
cmp
loop
cmp
sti
and
in
jecxz
mov
loopne
xor
pop
push
jmp
and
add
sub
rcrl
je,pt
pop
jge
dec
push
sub
adc
shlb
inc
loop
sbb
dec
jmp
outsl
inc
cli
aam
add
adc
push
leave
rorb
add
pop
stos
inc
mov
mov
addl
sub
in
adc
dec
sub
push
lock
pusha
sbb
adc
adc
sarl
imul
clc
jl
sahf
hlt
adc
cmpb
add
test
jbe
jmp
sub
std
lds
mov
cwtl
push
sbb
push
dec
jo
sbb
cmp
data16
arpl
cmp
and
pop
push
scas
mov
push
push
mov
jo
mov
sbb
cmpsl
cmp
aam
and
fisttpl
push
cwtl
push
sub
pop
cmp
jg
or
add
inc
jge
daa
enter
mov
jp
data16
push
mov
test
pop
and
adc
aas
rol
or
push
add
fidivrs
cmpsb
xchg
pop
push
cli
push
call
xor
faddp
sbbl
or
mov
mov
mov
inc
mov
cmc
add
mov
xor
or
jbe
jb
push
imul
sbb
orb
mov
inc
sub
pop
call
dec
adc
call
inc
mov
iret
clc
movsb
loop
and
adcb
push
jo
mov
in
xor
stos
jp
test
adc
xchg
jecxz
cmp
mov
sub
dec
inc
hlt
inc
sbbb
pusha
inc
stos
out
pop
and
mov
or
adc
ret
dec
outsb
loope
push
cld
xor
mov
mov
mov
xor
sub
daa
loopne
imul
and
and
mov
xor
xor
push
xchg
push
je
shl
mov
movsl
fdivs
mov
dec
rcrb
add
mov
lods
xorb
or
mov
hlt
adc
sbb
lods
imul
pushf
lods
push
mov
incb
mov
pop
shrb
aaa
adc
and
int3
and
les
imul
push
cmp
xchg
and
fmuls
out
jae
mov
add
xchg
loope
push
or
fadd
push
sbb
sbb
movsb
sbb
pusha
push
push
sbb
push
xchg
xor
mov
sbb
shlb
pop
addb
aas
icebp
push
pushf
in
sub
xchg
js
adc
xchg
scas
ja
scas
cmp
inc
jl
cmp
jbe
jne
xchg
pop
pop
push
pop
push
inc
mov
mov
arpl
mov
sbbb
push
stc
push
add
xchg
xor
inc
popa
jns
cwtl
idivb
ds
lock
les
dec
add
jmp
add
int3
or
arpl
dec
dec
mov
hlt
rorb
aam
xchg
test
push
inc
inc
add
push
inc
pop
xchg
mov
xchg
lds
push
pusha
mov
pop
mov
xchg
aam
mov
dec
rcrl
inc
rorb
lahf
je
gs
and
pop
and
repz
test
lods
or
adc
or
ljmp
mov
push
push
adc
les
add
scas
jg
cmp
mov
insb
jo
cs
mov
jmp
sbb
or
insb
push
adc
jnp
add
nop
cmc
shll
daa
dec
sub
sbb
pusha
test
and
in
fwait
mov
add
test
xor
jp
sbb
inc
sub
or
lea
push
loopne
xchg
or
rclb
add
push
mov
loopne
cmp
inc
add
inc
mov
fwait
mov
cmp
mov
xor
jle
pop
dec
mov
add
mov
or
jmp
jecxz
fildl
jle
cmp
pop
in
xor
stos
mov
push
mov
stos
fwait
pop
ss
or
add
cli
test
mov
pop
jge
iret
add
dec
js
in
mov
je
les
dec
sub
mov
cmp
mov
rcrb
test
sub
add
pop
xor
or
pop
data16
sub
xor
js
sbb
sub
mov
sbbb
cmpsl
pop
sahf
dec
orb
add
sbb
clc
in
pop
and
inc
dec
popf
lret
pop
or
call
into
fcoml
push
nop
ret
les
jecxz
lock
xchg
mov
jb
lea
loop
sub
clc
test
pop
lret
lds
stos
xchg
sbb
push
test
les
or
xor
add
mov
cmpsb
test
push
add
jnp
mov
or
rolb
es
loopne
and
ficomps
inc
pushf
inc
imul
pop
or
push
mov
jge
push
das
stc
addl
jmp
cwtl
jmp
adc
mov
cmpl
loopne
movsb
outsl
loop
and
ret
xchg
jbe
test
xchg
lret
xlat
adc
cwtl
sarl
cs
movl
xchg
lods
adc
arpl
adcb
pop
jno
cmpsl
and
das
pop
xchg
mov
stc
lods
ljmp
mov
fwait
add
imul
popf
popa
insb
cmp
out
test
mov
shlb
mov
orl
mov
pop
push
jmp
xor
cmp
movsb
sub
mov
into
mov
mov
and
sub
aaa
jmp
ret
popa
call
je
cmp
and
cmp
sbb
add
adc
lock
jnp
testl
jne
mov
xchg
sub
mov
out
cmp
outsl
push
or
sbb
mov
daa
mov
das
jbe
ss
add
lahf
popf
inc
or
xlat
add
outsb
icebp
or
or
jne
rolb
mov
and
or
or
push
test
jne
inc
adc
jl
repnz
mov
bound
rcpps
rclb
sbb
push
sahf
in
xchg
lods
std
push
lods
bound
xor
das
push
cmp
mov
fdivs
mov
sub
lock
adc
sub
out
mov
fwait
lods
or
push
test
mov
lahf
pusha
sbb
push
mov
or
sbb
cmp
dec
sub
mov
pop
jo
icebp
adc
out
push
or
inc
xlat
nop
push
std
pusha
or
arpl
mov
push
jecxz
in
adcl
rorl
adc
sub
push
movsl
dec
lock
adc
dec
fldcw
roll
xor
loop
leave
cwtl
sub
fildl
xor
in
insl
mov
in
sbb
inc
sbb
stos
adc
push
int3
or
popf
add
xchg
jne
mov
lds
add
sti
fsub
push
sub
mov
sbb
popa
scas
lret
lea
xchg
ret
or
mov
inc
push
add
movzbl
sbb
xchg
mov
xchg
and
add
mov
incl
fistl
sub
push
jl
or
cmp
rorb
adcl
xchg
ss
or
adc
dec
dec
mov
popa
insb
rolb
add
popf
or
push
inc
mov
add
add
inc
xor
test
mov
out
xor
pop
push
mov
push
cmp
mov
push
inc
xchg
dec
push
push
in
push
dec
pop
xor
test
or
fucomi
sub
xchg
ljmp
xor
mov
push
outsl
inc
push
sarl
push
std
dec
imul
sar
test
enter
je
add
aam
inc
js
push
and
cmp
dec
fcomps
jmp
mov
cmp
push
rorb
aad
add
fstpl
test
pop
mov
imul
js
sbb
add
std
lret
shlb
loope
addb
adc
inc
enter
test
add
arpl
outsb
lock
xchg
stc
push
es
loopne
cwtl
adc
mov
push
seta
push
sbb
lds
sti
pop
sbb
movsb
in
fdiv
cmp
mov
dec
inc
hlt
cmpsb
loope
adc
jl
hlt
mov
lds
cmpsb
subb
and
inc
and
mov
cmp
inc
std
fiadds
ds
dec
or
adc
je
data16
cmpb
getsec
cmpl
mov
iret
fisttpl
jg
outsb
adc
xchg
cmp
mov
or
inc
sub
jge
cmp
rclb
push
jle
xchg
push
fcomps
jp
outsb
and
adc
xor
lock
jge
mov
das
push
aam
xor
inc
inc
fildl
jb
jmp
divb
jge
cmpsb
dec
cmp
xchg
dec
mov
mov
shlb
mov
sbb
xor
mov
inc
inc
jmp
inc
jo
add
addr16
and
add
push
lock
data16
inc
pusha
mov
sbb
adc
or
loope
pop
lcall
movsb
add
or
mov
stc
add
lret
jmp
pop
cmpsb
adc
xchg
sbb
jno
xchg
xor
mov
out
lea
mov
loope
pop
sbb
call
mov
lock
mov
xchg
xor
adcl
sahf
sbbb
pop
sarl
movsl
jnp
rcrb
fcoml
add
rclb
data16
or
imul
xor
ja
shl
xchg
enter
test
test
and
je
sahf
sbbl
xchg
stc
add
rolb
leave
cwtl
or
jecxz
xor
jns
push
stos
sub
and
xchg
pop
push
fcomp
sbb
addr16
sub
call
jl
rcrb
imul
popa
aaa
testl
dec
xchg
rorb
out
inc
pop
loopne
in
adc
popa
xor
push
inc
andl
je
je
push
dec
lahf
and
loop
pop
push
xor
jno
dec
push
ljmp
pusha
insb
popa
fiaddl
mov
shrb
jl
enter
orb
rcrb
pop
mov
xchg
icebp
clc
and
jnp
cmp
shlb
and
test
cmp
rolb
xchg
jle
inc
inc
lcall
and
sub
mov
pop
outsl
push
insb
inc
add
test
cmp
dec
jg
adc
xchg
test
flds
or
adc
fwait
test
mov
pop
and
add
sbb
addr16
xchg
xchg
lock
inc
scas
fisttpll
xchg
sub
pusha
sub
push
and
test
cmp
fwait
and
mov
inc
adc
pusha
mov
lret
pop
xchg
inc
cmp
push
cmpsl
fldt
dec
aas
mov
test
dec
adcl
shlb
sub
gs
xchg
cmp
push
testl
pop
hlt
push
into
dec
and
inc
mov
push
and
pop
dec
les
add
sbb
dec
dec
add
dec
test
inc
mov
lcall
xor
test
in
pop
cmp
xchg
pushf
sbb
psubq
test
test
pusha
xchg
mov
sub
jge
stos
push
add
cmp
xorb
sbb
xor
inc
mov
xor
push
xor
or
inc
or
jp
push
es
pop
mov
sbb
addr16
movb
test
or
xchg
dec
sub
mov
clc
subb
mov
xor
pop
cmp
les
mov
mov
call
inc
push
inc
cmp
mov
cmp
add
inc
cmp
insl
sbb
lea
mov
divb
dec
xor
adc
clc
push
or
add
inc
push
or
jb
mov
mov
inc
push
stos
xchg
psadbw
call
cmp
cmp
call
add
aaa
jmp
add
jmp
add
imul
subb
jns
dec
loopne
inc
inc
mov
and
fldl
add
add
faddl
cmp
icebp
push
stc
add
mov
cmp
mov
or
outsl
push
adc
jp
cmp
shlb
mov
iret
and
ja
rorl
ss
shlb
or
fcoml
add
call
add
lds
faddl
dec
xchg
enter
push
jno
test
push
and
cmc
sti
add
push
pop
jae
pusha
xor
and
ret
bound
and
jo
pop
or
mov
mov
mov
cmc
sub
xor
or
or
push
jb
push
pop
add
sub
int3
les
addb
jg
inc
adcl
inc
add
and
stos
fs
mov
je
in
or
pop
mov
and
xchg
add
add
cmp
inc
and
xor
das
jno
nop
sub
stos
inc
ds
movsb
test
inc
xor
pop
int
mov
adc
in
xchg
xchg
adc
shrb
or
add
out
or
add
call
lock
push
jmp
popf
inc
pusha
add
dec
or
jo
cmc
mov
sub
lret
add
aad
cmp
pusha
or
mov
push
mov
mov
pop
sub
sub
and
lret
sarb
dec
loopne
in
push
add
fsts
push
or
repz
leave
jmp
insl
add
adc
push
mov
mov
or
dec
aaa
add
enter
inc
notl
bound
je
xlat
push
jne
arpl
cs
and
jmp
xor
inc
rorl
inc
xchg
or
add
push
or
mov
mov
popa
loopne
adc
cmp
lahf
adc
push
rclb
aam
shl
pop
outsl
pusha
aam
fistl
mov
sbb
push
pusha
insb
adc
rorl
xorb
fisubrs
in
fxch
xor
repz
clc
push
sahf
out
out
aam
adc
xchg
arpl
cmpsb
cmp
dec
testb
cmpb
push
push
and
in
mov
adc
out
and
lcall
or
push
jne
sub
xchg
jge
xchg
sub
sbb
lret
int3
dec
cmp
adc
pop
sub
inc
xor
inc
fdivrs
mov
mov
or
das
arpl
rolb
pop
adc
add
push
sbb
test
loopne
imul
dec
pop
scas
lds
lcall
lods
movl
dec
push
push
xor
xor
subb
xchg
rcl
psubd
push
push
pop
mov
les
pop
insb
adc
aam
mov
cwtl
es
sub
sub
xor
gs
cmp
mov
sbb
das
push
and
adc
addl
lock
movsl
push
inc
mov
push
lahf
or
or
test
pop
push
mov
aam
int
dec
test
mov
mov
mov
sbb
mov
add
mov
adc
test
mov
js
inc
ret
nop
dec
dec
sbb
or
mov
xchg
mov
fdivrs
stc
repnz
lock
lods
mov
mov
jns
push
les
adc
lret
nop
sarb
out
ss
inc
xchg
or
es
mov
push
xlat
jl
addb
jns
dec
addb
mov
mov
dec
pop
add
sub
add
pushl
nop
jno
cld
or
ss
rolb
aam
ljmp
test
sbb
les
and
and
fwait
je
pop
scas
xor
test
enter
xchg
add
dec
jl
and
xor
js
adc
add
add
adc
mov
sti
sub
and
les
add
add
or
mov
adc
call
add
fildl
or
loopne
cmp
addr16
inc
add
or
inc
inc
ret
dec
xor
jg
cmpb
or
jge
jns
jmp
add
pop
xor
and
push
mov
add
inc
jp
or
mov
xlat
pop
jge
dec
and
scas
or
push
push
inc
push
les
push
mov
mov
enter
xor
add
xor
test
imul
push
pop
push
into
test
jecxz
int
push
subl
cmp
dec
xchg
or
int
adc
or
push
and
mov
sbb
lods
mull
xor
mov
adc
pop
rclb
out
test
rolb
pop
ret
and
scas
stc
cmc
cmp
and
in
jae
cmpsb
dec
cmp
xchg
in
loopne
dec
adc
or
es
pop
add
inc
jl
mov
js
imul
mov
jbe
lock
imul
subb
mov
pop
adc
xor
pop
les
cli
jmp
ljmp
mov
jl
mov
inc
mov
lods
lods
repz
pop
inc
xchg
xor
add
fwait
adc
dec
std
adc
mov
inc
repnz
jmp
jmp
inc
push
sbb
add
daa
adc
jne
jne
inc
popf
inc
dec
das
cs
call
lock
pop
in
inc
cmc
sbbb
fwait
nop
gs
inc
xor
loopne
testl
cmp
mov
sub
jge
xchg
push
push
adc
add
jae
dec
or
or
push
ss
mov
cmp
loopne,pn
or
add
nop
sahf
mov
mov
jl
and
rclb
lock
jbe
test
mov
fnstsw
push
jbe
dec
push
push
movsl
mov
faddl
fstl
push
fcomp
push
sub
mov
clc
pop
ss
fsubr
pop
faddp
andl
sbb
ret
and
push
loope
fistl
xchg
add
lds
and
push
int3
imul
mov
aad
or
adc
dec
push
sbb
ret
jmp
mov
xchg
test
sub
xchg
adc
mov
mov
testb
in
rcrb
sbb
sbb
loop
sub
pop
lea
push
or
ret
pop
loope
and
cs
sub
push
test
xchg
inc
cmp
or
lret
jmp
inc
fucomi
sub
enter
mov
cmp
dec
mov
int3
dec
add
clc
mov
jae
push
inc
add
sub
jp
loope
fbstp
sub
stos
sbbb
add
cld
mov
jmp
mov
cmp
jge
adc
addl
push
pop
push
jecxz
out
outsl
fsubrs
jnp
pop
push
xchg
adc
outsb
cwtl
add
jmp
or
icebp
inc
shrl
lods
push
mov
push
push
xlat
sub
dec
pop
jmp
test
mov
mov
popa
pop
add
ret
pop
xchg
adc
jg
adc
or
mov
push
insb
sub
cmpsb
push
clc
jle
add
adc
xor
dec
jns
arpl
mov
adc
lods
inc
jg
pop
and
mov
push
pop
sub
push
rcr
jecxz
mov
pop
sub
les
ret
or
jmp
xchg
call
xor
fimull
addr16
loopne
ja
cmp
addb
rclb
mov
pop
ret
dec
dec
rol
sbb
cmpb
sar
dec
or
jne
cmp
cmp
sbb
leave
pushl
mov
in
arpl
fs
clc
movsl
mov
inc
push
lods
xchg
pop
mov
imul
shlb
inc
cmp
cltd
cmp
xchg
das
adc
add
pop
shrl
pop
push
mov
imul
inc
push
push
rcrb
xchg
jo
add
jge
movsb
dec
sub
lods
or
mov
sbb
dec
ror
rol
cmp
iret
xlat
add
inc
or
sarb
mov
pop
loop
push
aas
adc
mov
pop
mov
adc
add
bound
loop
mov
arpl
mov
push
sbb
les
inc
add
dec
inc
jb
sbb
xchg
orl
stos
faddl
inc
cwtl
xor
jle
je
cltd
dec
xor
mov
cli
inc
dec
sbbl
add
gs
fsubl
jmp
dec
add
daa
pop
cmp
xor
xor
adc
mov
or
adc
lds
leave
adc
dec
push
lcall
push
lds
push
push
cs
ret
test
cmp
and
push
daa
sahf
pop
dec
sub
jge
sub
fwait
xor
hlt
sbb
idivl
popa
cmpsl
rolb
push
lock
adc
mov
sbb
or
cmp
shlb
adc
dec
or
mov
jne
mov
mov
dec
add
mov
pop
jl
sbb
jb
inc
jp
adc
mov
js
and
dec
sti
ljmp
inc
mov
push
mov
mov
xchg
pop
lcall
add
push
ss
sub
in
ficoml
mov
mov
js
xchg
pushf
or
loopne
push
je
xchg
dec
mov
cmp
xchg
lret
das
sbb
pop
adc
dec
push
pushf
jmp
negl
out
ret
mov
jb
sbb
add
add
pop
or
mov
popf
adc
adc
addr16
jae
fdivl
push
lcall
cmpsb
pop
push
dec
leave
xchg
dec
fdivrs
xor
push
loopne
add
in
adc
out
xor
pop
imul
adc
or
add
and
add
js
loopne
dec
mov
inc
or
rolb
jne
loope
xor
push
xchg
sub
push
add
insl
mov
jno
jg
movsl
shrb
push
adc
push
addr16
lcall
dec
jne
or
rcrl
xchg
sbb
adc
or
mov
sbb
out
ss
pop
nop
ret
test
cs
inc
xchg
addl
sbb
psubsb
push
mov
ja
ja
add
and
mov
ret
push
pop
pop
sub
test
add
mov
outsb
addr16
fbstp
xor
js
adc
ja
lahf
push
pavgb
clc
cmp
mov
and
mov
mov
add
pop
fsubl
push
in
inc
sbb
jecxz
shll
fcoml
fs
push
or
push
das
and
jl
pop
rcrl
rcll
pop
adc
xlat
add
mov
pop
je
shll
scas
dec
loopne
or
sbb
cmp
or
dec
call
cmpl
and
mov
push
fiaddl
nop
test
pushf
push
mov
loopne,pt
in
jecxz
xor
mov
daa
daa
fildll
insl
or
imul
stos
jae
or
sbb
dec
jae
sbb
push
in
lock
in
adcb
push
cmp
xor
dec
push
lock
adc
or
lock
add
pop
decb
and
fisttpl
leave
ret
rol
jmp
mov
xchg
cmp
push
cmpxchg
lea
dec
fistps
popa
push
pop
sub
inc
mov
test
add
loopne
jl
rclb
ljmp
xchg
mov
call
sub
push
rolb
cltd
sub
lock
mov
lods
or
sbb
pop
popf
sub
cmp
jae
xchg
inc
push
mov
lods
addl
shlb
dec
add
icebp
clc
in
sbb
cmp
out
incb
or
xchg
movsb
xlat
mov
xor
add
js
cmp
icebp
jne
lcall
sbb
jnp
das
add
cwtl
dec
enter
pop
sbb
pop
pop
repnz
add
add
dec
repz
push
add
std
sbb
or
in
cmp
pop
punpcklwd
popa
inc
add
cmp
cmp
or
jl
movsb
mov
xor
ror
xor
xor
add
loopne
rcll
sub
lock
aam
sbb
inc
dec
xor
xchg
pushf
fwait
sbb
cs
and
add
sbb
inc
inc
or
push
testl
sti
sbb
or
gs
std
lcall
dec
inc
add
aam
aaa
sarb
or
inc
xor
inc
add
movsb
mov
and
movsl
repz
ss
scas
push
data16
pop
push
sbb
ljmp
sub
stc
cmc
inc
hlt
lret
xorb
jnp
dec
ficoms
or
cmc
xor
sub
lods
shlb
add
cmpsl
push
cmp
adc
or
popa
or
pop
pop
add
dec
setg
or
ret
ret
mov
xchg
clc
fwait
mov
sbb
cmp
jge
add
push
push
inc
xchg
jge
sub
xorb
adcb
inc
adc
iret
pop
or
loopne
in
jo
es
in
mov
scas
mov
or
out
adcl
insl
xor
xchg
mov
add
sbb
jecxz
test
loop
or
mov
jno
ret
pop
in
cmp
pop
ja
mov
movsb
and
mov
inc
and
mov
fs
jae
mov
and
xor
aas
xlat
cmp
adc
in
incl
pop
ja
in
fld
dec
loope
ret
aad
and
sub
into
sub
jb
jo
dec
xchg
sbb
adc
push
mov
roll
mov
xor
cmpsb
jmp
push
mov
dec
cmp
dec
mov
sbb
cmpsl
jp
mov
xor
or
jo
mov
lock
mov
inc
sub
or
inc
mov
sbb
jno
and
cwtl
dec
push
iret
pushf
cs
fcoms
fisttpl
and
push
inc
and
cmp
test
in
ror
push
icebp
lods
aas
sti
push
inc
mov
clc
aaa
push
arpl
pop
jb
lods
push
push
lods
add
es
adc
push
aad
test
adc
adc
rclb
int3
fcomps
mov
inc
cmp
fistpll
gs
adc
clc
pop
inc
pop
sub
xchg
sub
sbb
cmp
sbb
movb
fidivrl
mov
mov
xor
sub
add
push
jns
xchg
jge
loop
data16
das
add
cmp
and
adc
dec
xor
xchg
mov
lea
mov
cmp
sub
mov
lret
sub
push
xor
add
cmp
add
in
sub
inc
push
rol
inc
dec
push
xchg
pop
rorb
repz
xor
jbe
jmp
dec
les
adc
iret
sbb
jbe
gs
add
inc
xor
adc
mov
pop
lea
lahf
xchg
lock
push
mov
jmp
in
xor
les
shrb
push
insl
sub
inc
add
add
mov
or
mov
adc
daa
and
and
addb
lret
add
aas
sarb
orb
adc
pusha
xor
adc
fs
jmp
loop
inc
inc
aaa
dec
sub
or
cld
loopne
mov
push
sub
int
xor
pop
enter
cli
std
sub
nop
imul
or
sub
lret
dec
cmp
jl
xor
cmp
inc
jo
sbb
xchg
sahf
adc
in
mov
add
inc
or
outsb
add
and
push
inc
sahf
add
dec
loope
in
and
sbb
or
pushf
call
aam
in
mov
jbe
ja
popf
movb
dec
adc
shlb
hlt
andb
jp
adc
xlat
dec
pop
flds
and
adc
in
add
test
dec
and
mov
cld
test
add
cmp
ja
pushf
mov
adc
or
jle
jo
push
push
push
cli
and
dec
popf
stc
inc
pop
cmp
popa
sub
push
push
adc
mov
adc
ljmp
sahf
push
inc
mov
pop
sbb
pop
adc
shl
loope
mov
loop
adc
cwtl
add
pop
mov
adc
cmp
jb
sbb
and
cmpsb
push
pop
rolb
in
cltd
mov
bound
push
mov
nop
notb
insl
ret
je
sub
lcall
push
ds
and
pop
cmp
jl
fiadds
lret
into
mov
add
push
dec
fdivs
cmp
pop
and
dec
sub
dec
push
cmpb
punpckhbw
jl
shrl
pop
enterw
mov
outsl
popa
dec
cmc
adc
push
mov
push
lret
fistpll
push
mov
cmp
daa
pop
scas
pop
lret
sbb
jl
jmp
or
xor
fadds
or
mov
fldln2
sbb
je
or
jns
pop
add
pop
sbb
cmp
in
jmp
push
sbb
fstpt
jmp
int
stos
lods
leave
loope
xor
jne
and
push
mov
bound
pop
push
xchg
dec
push
jge
mov
ljmp
inc
sub
addr16
pusha
leave
mov
fimull
adc
pop
int
adc
xor
pop
add
test
ret
adc
xor
cmpl
stc
divps
pop
push
pop
sbb
add
cmpsb
std
lods
js
add
movb
jmp
add
cld
fimuls
aas
push
pusha
lock
push
add
add
fs
stos
sub
add
rclb
adc
dec
adc
mov
aaa
push
mov
scas
pop
pop
cmp
cmpsl
and
and
mov
push
jb
dec
xchg
add
insl
jns
xor
push
mov
mov
pop
jle,pn
mov
push
add
loopne
repnz
push
les
imull
cmpb
mov
adc
pop
mov
sbb
xor
je
bound
fdivrs
cmpl
rcrb
iret
push
std
out
movsl
or
pop
insl
popa
les
test
sbb
fcoms
xor
lods
dec
inc
xor
xor
or
scas
sbb
data16
xor
mov
or
scas
cmp
cmp
xor
push
cmp
or
mov
sbb
les
test
aas
jne
xorb
mov
jmp
pop
repz
in
push
mov
jae
adc
inc
mov
pop
in
scas
sub
movsl
cmp
inc
inc
dec
mov
push
or
xor
push
sub
add
push
inc
or
xor
jno
inc
fwait
es
movsb
fidivl
push
pop
fdiv
push
in
and
je
and
add
icebp
repz
cmp
sbb
mov
jmp
push
sub
cmp
jnp
leave
jne
push
jmp
cmp
cmp
notl
adc
bound
inc
xchg
inc
test
cld
rolb
mov
and
mov
dec
cs
inc
xor
sub
out
xchg
lret
and
cmp
and
jp
adc
pushf
xchg
xor
mov
test
add
leavew
ds
mov
repz
mov
stos
mov
mov
push
adc
loop
mov
or
insb
pushf
mov
test
gs
call
xchg
push
pusha
sbbb
adc
in
mov
dec
shlb
fiaddl
mov
mov
test
out
repz
fmul
xchg
mov
xchg
adc
fxch
adc
add
jne
push
push
nop
shlb
orl
hlt
push
dec
sarl
adc
sub
scas
sbb
add
faddl
notb
fistpl
add
negl
or
scas
popw
mov
mov
and
pop
rcll
sarb
adc
sahf
test
int
dec
pop
inc
push
aad
add
add
dec
push
fisubrl
scas
movl
and
and
scas
rcrb
xchg
dec
mov
sbb
or
mov
roll
mov
sub
pop
push
and
mov
sub
hlt
inc
adc
mov
je
sbbb
pop
pusha
mov
xchg
cmovns
jle
sbb
sbb
pop
cmp
icebp
add
push
xchg
mov
mov
mov
xchg
fistpll
lods
xor
jp
in
std
clc
dec
adc
incl
mov
sbb
inc
sub
mov
ja
push
cmc
shrb
fstps
out
mov
jns
jmp
orl
jo
or
or
data16
adcl
dec
push
shll
je
leave
jnp
jmp
aam
imul
xchg
adc
fstpt
inc
jle
loop
sbbb
or
push
push
clc
popa
adc
adc
adc
lea
lods
xchg
daa
xor
outsb
or
pusha
nop
inc
push
or
adcb
and
adc
outsl
loope
jne
mov
jg
cmpl
push
outsb
xor
popf
shrb
sub
pop
xorl
mov
je
imul
sub
mov
dec
daa
add
inc
popa
ret
adc
ds
hlt
fs
fisttpll
xlat
and
inc
sahf
les
pop
push
mov
iret
outsl
fildl
in
idivb
lods
jmp
inc
lahf
mov
aas
xchg
sub
inc
js
cmp
sahf
bound
jl
push
push
push
pop
add
and
cmp
aad
or
out
cmp
sbb
inc
es
hlt
stos
cli
lea
scas
push
or
jmp
loopne
add
outsl
test
sub
test
push
es
pop
in
cmp
dec
mov
in
xchg
pop
fs
filds
mov
push
add
insl
sub
cmp
movsl
mov
lahf
sub
sbb
pop
mov
enter
mov
xchg
aam
test
xor
test
inc
gs
adc
jne
jmp
xchg
outsb
cltd
mov
cld
fldcw
sub
lods
es
rol
mov
inc
pop
dec
aaa
mov
sbb
popf
adc
adcb
je
pusha
aas
jae
clc
cmp
push
bound
cld
push
adc
xor
add
sar
shll
pop
sahf
stos
dec
js
mov
imul
xor
push
push
out
popf
out
xlat
add
cli
lea
jle
les
mov
jle
dec
cmp
jg
cld
sub
lock
lods
mov
icebp
addl
push
or
pop
push
cmp
sub
sar
xor
hlt
shr
incb
popa
out
sub
sub
sub
add
fistpll
push
push
add
push
pop
ret
dec
fsts
or
add
sahf
hlt
adc
dec
sarb
or
iret
shlb
in
test
lret
and
add
jo
inc
add
sbb
jne
xor
sbb
sbb
push
clc
movsl
data16
stos
imul
pushf
addl
inc
mov
xlat
jns
inc
sbb
or
sbb
and
dec
jo
cltd
xor
xchg
or
outsb
adc
add
sbb
addb
sub
inc
call
push
and
fsubrs
push
inc
scas
jne
or
cwtl
adcl
pop
mov
das
xor
call
pop
fldt
add
pop
dec
and
in
sbb
lds
test
mov
jecxz
rclb
jecxz
popa
mov
sbb
lea
jmp
jbe
pop
xor
mov
fdivl
jo
repnz
xchg
dec
scas
in
add
pop
sti
or
push
and
repnz
add
dec
pop
push
adc
lods
jne
fsubs
xchg
icebp
lcall
ret
mov
lea
adc
push
push
fldt
cmpsl
mov
pop
aas
pusha
push
push
push
sahf
addl
aam
push
and
jb
and
and
adc
xor
es
jno
or
test
scas
out
add
imul
xchg
dec
or
rcr
mov
push
push
dec
mov
cli
ss
adc
pushf
add
nop
sub
push
daa
in
bound
inc
dec
mov
push
rcll
push
push
mov
femms
jl
loopne
pop
add
mov
add
add
jb
add
adc
jmp
je
push
pushf
out
adc
imul
je
pusha
or
sub
mov
mov
push
push
inc
push
ret
das
add
adc
nop
sub
and
mov
cmpl
adc
and
lcall
lock
xchg
sbb
lods
fs
jbe
push
in
xor
mov
mov
inc
add
lea
dec
in
xlat
lods
or
and
pop
add
rclb
in
test
pop
cmp
mov
push
push
inc
mov
push
jno
xchg
mov
xchg
xchg
mov
cmp
faddl
call
and
lods
adc
shlb
push
add
mov
inc
sub
add
jo
mov
sub
adcl
hlt
push
jmp
in
push
lea
fs
add
push
and
dec
in
or
sbb
and
cmc
sub
sbb
fs
cli
sbb
push
inc
push
adc
mov
pop
add
jl
adc
push
scas
fsubrs
mov
pushf
rorb
loopne
aas
and
pop
inc
push
push
ja
fadd
dec
fcomps
lret
fsubrl
lods
test
inc
jae
stos
movsb
mov
xor
pop
mov
pop
mov
xor
push
jle
imul
add
negb
adc
ret
out
xchg
out
enter
lods
push
nop
mov
in
stos
push
mov
in
inc
in
les
hlt
mov
jbe
push
cmp
sbb
fsubs
rclb
ret
loop
inc
jbe
cmp
and
idivl
or
cmp
xor
cmp
rcrb
andb
xchg
jne
lods
adc
add
dec
fsubs
sarl
pop
mov
cmp
insb
sub
ja
add
repnz
das
nop
scas
rcrb
push
xor
or
add
fs
xchg
cmp
adc
pop
push
sarl
add
ret
mov
mov
pop
adc
jo
inc
pop
pop
mov
test
repz
xchg
push
push
add
and
jmp
pushl
pop
add
imul
lds
and
movsb
mov
shll
add
movb
test
add
pop
xchg
mov
les
in
inc
shl
jne
push
out
movsb
cmp
stos
ds
lret
nop
push
adc
hlt
shl
jecxz
inc
pop
nop
jns
sbb
cmpsl
stc
mov
xchg
call
rorl
and
fwait
popf
dec
rolb
jle
mov
nop
push
adc
inc
loopne
fmull
enter
mov
push
enter
loopne
dec
cs
push
and
std
popf
push
lods
shl
push
mov
push
dec
sbb
and
movl
inc
adc
movzwl
mov
out
out
pop
jmp
popa
cvttps2pi
or
jl
cmp
daa
gs
sbb
jecxz
pop
mov
sbb
fnstcw
arpl
push
or
inc
xor
push
adc
push
cmp
dec
fdivrs
iret
iret
mov
and
rolb
sub
stos
cmp
pop
adc
adc
pop
mull
cwtl
adc
or
adc
add
mov
xchg
add
sbb
push
mov
test
adc
hlt
or
ds
push
clc
movsb
ret
or
enter
cltd
int3
inc
cmp
adc
mov
jo
das
je
aas
lods
shll
or
add
loopne
cmp
jo
mov
push
repz
mov
jp
mov
cld
daa
sbb
movsb
pop
or
shl
and
lock
adc
ljmp
out
mov
mov
push
mov
call
or
push
adcb
adc
push
pop
pop
mov
sti
or
mov
gs
jne
movsbl
push
pop
lahf
dec
dec
mov
jb
jbe
push
paddb
ficomps
mov
sbb
push
pop
mov
loopne
mov
mov
ds
xorb
lods
lods
mov
xchg
sub
and
mov
and
mov
ret
bound
inc
add
sub
pushf
pop
and
sti
mulb
or
push
dec
mov
cmp
jl
push
inc
pop
and
pop
push
pop
sbbb
or
dec
jne
das
mov
pushf
xor
clc
imul
push
mov
pop
dec
push
jge
mov
cli
adc
cmp
imul
fiadds
ja
add
sbb
pop
xor
mov
fs
ja
xchg
sbb
add
lock
add
leave
leave
dec
pop
cmpsb
or
add
leave
leave
leave
add
out
leave
or
jmp
or
jmp
or
jno
out
out
jmp
push
jmp
por
jmp
out
out
adc
pop
adc
push
adc
dec
adc
dec
out
out
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
out
out
jmp
push
jmp
pop
jmp
and
or
and
nop
and
and
push
pop
test
pop
hlt
inc
sysret
ret
xor
sbb
lea
xchg
and
jl
fistpl
pop
adc
sbb
sub
cmp
out
inc
dec
push
pop
pop
out
sahf
out
insb
jno
sahf
out
sahf
jnp
test
out
cltd
sahf
mov
sahf
out
mov
rol
sarl
rcl
pop
fdivr
fnstcw
add
and
or
or
push
movups
adc
adc
push
pop
sbb
addb
sbb
and
aas
push
fs
in
inc
xchg
add
mov
jecxz
xor
ljmp
sub
mov
inc
nop
dec
add
inc
cmp
pushf
adc
fisubrl
loope
pushf
les
enter
outsb
andl
or
out
js
mov
das
mov
ja
cmp
movsb
push
adc
insb
pop
fwait
and
sahf
loopne
fwait
xorb
ljmp
xor
jb
inc
lea
inc
push
cmp
movsl
mov
inc
sarl
lea
add
or
add
lods
repz
enter
or
sub
adc
or
push
or
js
lods
adc
movsb
cmp
setnp
cmpl
aam
mov
inc
jmp
xchg
addb
gs
xor
push
mov
add
lahf
pop
flds
mov
add
sub
repnz
mov
es
mov
sub
push
dec
shlb
insb
mov
ljmp
add
and
outsl
das
inc
jge
xor
sbb
adc
dec
pusha
cmp
push
jg
and
xor
lea
add
arpl
push
or
movsb
mov
inc
sbb
insb
mov
inc
lret
movsb
push
mov
dec
rcrb
lods
cmp
jbe
mov
loop
push
dec
add
int
adc
out
jge
cwtl
mov
rorb
pop
push
insl
or
push
pop
mov
dec
xchg
loope
mov
ja
lea
imul
repz
hlt
cmp
ja
or
pusha
aaa
outsb
mov
stos
lcall
orb
lock
add
mov
adc
or
pop
jmp
and
dec
push
jb
add
int
rcl
add
clc
jbe
push
or
pusha
cs
xchg
add
pop
mov
push
test
jo
and
test
imul
mov
push
xor
and
sbb
inc
pop
adc
dec
aaa
stos
xchg
shrl
xor
subl
je
adc
pop
or
push
mov
or
and
inc
sbb
jns
incl
adc
sbb
cmp
ja
push
xor
mov
add
sbb
add
sbb
lahf
mov
aad
mov
xchg
mov
out
fists
push
xor
cwtl
dec
dec
mov
adc
iret
cmp
push
sbb
sbb
add
adc
movl
cmp
add
mov
adc
pop
mov
jb
repnz
adc
adc
xor
push
sub
xchg
arpl
lods
xchg
and
inc
cmpxchg
int3
or
jnp
xchg
push
or
mov
sbb
jle
fldenv
inc
add
mov
in
jbe
adc
sbb
push
push
call
ja
adc
xor
jo
cli
testb
jne
lea
cmp
push
or
jne
or
js
cmp
add
sbb
or
insb
push
aad
or
xor
cmpb
mov
mov
dec
cmp
jl
dec
data16
cmp
push
js
imul
pop
sub
sbb
sub
daa
xor
cmp
jmp
and
movzbl
pop
mov
imul
js
out
and
sub
sbb
or
arpl
fs
push
inc
bound
in
mov
ss
ret
xchg
call
xchg
adc
data16
hlt
movl
add
or
sbb
sub
sbb
jp
cmpsl
call
and
sbb
cmp
and
jbe
jbe
push
icebp
test
and
fwait
adc
inc
inc
in
adc
push
rorb
test
adc
or
fadd
push
mov
es
pop
movsb
test
movsb
and
jne
sub
adc
push
adc
cmp
sbb
int3
cld
pop
push
inc
jmp
dec
mov
jge
hlt
dec
in
sub
adc
adc
add
xor
add
in
cmp
enter
cmp
dec
sub
int3
sbb
push
add
arpl
push
lahf
mov
ja
or
jl
sub
and
adc
rolb
or
lret
cmpsb
outsb
xor
scas
int3
mov
and
sbb
sbb
sbb
rorl
add
rorl
and
clc
push
cwtl
cmp
pop
sbb
jmp
push
das
add
dec
or
pop
inc
mov
push
push
insb
xor
clc
sbb
push
add
xchg
mov
jmp
and
mov
adc
xor
cld
add
pop
pop
cmp
sbb
insl
push
std
xchg
les
push
je
jmp
push
push
xor
jmp
clc
test
dec
cmp
fistpl
movsl
push
push
mov
add
test
enter
or
sub
sbb
cmp
addl
push
mov
sbb
sub
sub
or
lods
and
push
adc
push
xor
adc
ret
adc
outsl
mov
fcomi
add
into
dec
mov
pop
clc
mov
lret
pop
cld
mov
jo
je
ss
movl
mov
in
ret
or
cmpsl
int3
push
sbb
shll
and
adc
adc
or
pop
in
lret
nop
sbb
mov
ficoms
mov
dec
push
ret
dec
ret
dec
xorl
push
das
push
jnp
add
hlt
cmpsb
inc
inc
and
inc
in
pop
enterw
dec
push
nop
pop
int
fwait
push
mov
bound
mov
or
sub
mov
es
cmpsl
cli
adc
or
sbb
fsubl
ss
mov
jmp
sub
adc
addl
or
aaa
mov
push
cld
cmpsl
or
sub
loopne
xorb
jmp
cmp
push
inc
in
xchg
lods
adc
xchg
pop
add
mov
inc
mov
insb
xor
or
fimull
inc
jecxz
dec
mov
cmp
xor
imul
cmp
inc
inc
pop
sbb
sbb
bswap
leave
pop
ret
jmp
push
test
or
sub
testb
mov
pop
mov
loope
cmpsl
add
mov
jno
jmp
ja
stc
sbb
cs
sbb
cmpl
fldenv
or
add
mov
cmp
cld
cmpl
mov
cmpsl
push
adc
add
loop
je
add
rorb
lret
xor
cld
sbb
push
pop
push
clc
jo
popf
js
sbb
icebp
dec
lods
je
inc
mov
sbb
call
jo
ljmp
loopne
and
in
je
lea
pusha
clc
mov
xchg
mov
sub
jge
fdivs
inc
push
cmp
push
inc
mov
dec
sub
jmp
ljmp
add
in
punpcklwd
nop
or
mov
adc
jle
mov
cmp
sbb
lret
adc
inc
jle
call
adc
jmp
adc
enter
cmp
jnp
sub
loope
gs
fsubl
jo
ds
and
roll
mov
ret
dec
das
cmpb
mov
and
xchg
lret
mov
inc
sbb
loope
or
ds
lods
test
pop
and
xchg
cld
inc
dec
fiadds
sub
adc
lcall
sbb
dec
shr
mov
xor
push
push
mov
lods
ljmp
jl
ret
xor
je
outsl
sbb
lock
mov
mov
insb
repnz
xlat
lods
push
mov
je
sti
cmp
fdivr
adc
push
imul
xchg
and
mov
pop
jb
push
xor
mov
ss
cmp
leave
mov
cwtl
inc
sbb
cmc
push
out
push
adc
or
out
sub
sbb
xor
xor
movq
psubusw
xor
in
and
imul
mov
jb
xchg
push
mov
sub
xor
sbb
mov
push
xor
xchg
pushf
enter
adc
pop
loop
and
dec
pop
aaa
xor
and
arpl
and
adcb
call
sbb
loopne
and
rorb
adc
sbb
andl
insl
loope
sbb
loopne
fwait
out
lds
sbb
sbb
pop
add
dec
jae
cmp
leave
leave
sbb
arpl
add
ret
push
test
daa
inc
lock
xorl
and
pop
jle
ret
inc
dec
mov
add
shlb
test
fs
call
xchg
adc
in
add
pop
inc
cmp
subl
fisttps
inc
insb
mov
or
rcr
push
arpl
inc
or
sub
mov
ljmp
adc
repz
push
loop
jne
popa
adc
add
cld
mov
fsubrs
dec
dec
sbb
out
fistps
int
cmp
jne
and
dec
sub
add
jmp
in
jmp
dec
cmp
je
cmp
pushf
add
xor
or
push
push
gs
aaa
aaa
inc
mov
fsubl
or
clc
sub
fimull
sbbl
pop
std
and
cmpb
and
mov
mov
xchg
sub
inc
pop
div
jmp
mov
pop
push
lahf
gs
sbb
push
popf
test
push
inc
and
test
pop
mov
or
rclb
or
jo
mov
ficoml
js
sbb
mov
pusha
pop
rclb
xchg
xchg
and
or
mov
xlat
bound
fisttpl
mov
idivb
xorb
je
ds
clc
icebp
repnz
push
cmp
inc
pusha
cmp
lret
inc
cmp
cltd
xchg
xchg
mov
push
in
xchg
les
xor
fsubrs
mov
lea
daa
aaa
dec
cli
xlat
add
adc
icebp
push
cmp
or
sbb
fisubs
push
mov
add
xor
xchg
inc
xchg
repnz
lret
lahf
mov
push
cli
out
gs
or
lock
clc
clc
cld
add
sbb
jae
movl
repz
add
add
xor
lret
add
push
and
out
sub
or
add
dec
je
add
mov
dec
jne
mov
and
dec
or
mov
shr
sbb
clc
jg
or
lret
ljmp
xor
push
and
jne
or
mov
mov
jle
fcoml
mov
sub
inc
inc
sti
in
popf
adc
je
dec
je
push
add
xor
mov
dec
mov
cli
incb
inc
add
jmp
sub
movsb
add
jnp
vsqrtsd
test
je
cmp
jne
sbb
adc
mov
pushf
cmp
rclb
ret
push
or
inc
inc
ja
rcrb
and
inc
jmp
xchg
jmp
jmp
cltd
idiv
sub
adc
inc
inc
imul
hlt
clc
jb
sub
mov
icebp
mov
js
jp
cmp
subl
fdivs
push
add
add
aas
cmp
mov
stc
data16
push
push
or
push
adc
push
push
lock
cmp
je
imul
fistl
fistpl
sbb
jne
jmp
daa
xchg
xor
pop
ficomps
xchg
aad
xor
dec
mov
repnz
jg
or
inc
imul
lcall
lea
push
ds
jne
cs
in
nop
xchg
jl
sub
push
jmp
clc
pop
je
cmp
pop
cmp
je
cmp
jne
jne
mov
sub
cmp
or
fcoml
iret
testb
jb
mov
movsb
add
ret
ret
and
jne
pop
dec
add
mov
dec
mov
js
outsl
jg
jecxz
rolb
sbb
xor
add
xor
enter
into
sub
mov
cmp
xor
cmp
mov
jmp
ds
push
jmp
inc
jl
std
push
pop
outsb
inc
jg
aaa
jle
add
shl
dec
mov
cmp
mov
sub
mov
mov
and
bnd
std
les
outsl
adc
test
or
sbb
xchg
inc
jle
inc
adc
jp
lcall
pop
and
mov
push
lahf
and
pop
call
xor
mov
and
xchg
add
aaa
out
jnp
cmpsb
mov
and
cmp
jl
pusha
mov
jg
aas
add
add
mov
inc
mov
roll
int3
add
cmp
insb
sbbb
orb
sub
loop
add
xor
aaa
mov
pop
stos
push
cmp
cmc
pop
das
mov
xor
xor
fsubs
inc
cmpb
sahf
test
and
add
adc
cmp
add
inc
inc
push
out
jmp
xor
xor
inc
sub
mov
loopne
adc
dec
push
or
pop
jp
adc
cmp
sbb
pop
inc
dec
adc
sub
cmp
cmp
cwtl
pop
data16
dec
addb
xchg
ret
and
inc
cmp
je
cmp
je
pop
jne
std
and
inc
sub
add
push
and
mov
adc
daa
movsb
hlt
clc
push
jbe
push
outsb
nop
sbb
hlt
add
xchg
call
jne
mov
mov
cld
push
gs
push
jmp
pop
push
sub
inc
inc
mov
pop
loopne
sub
jp
je
push
sbb
and
or
shr
mov
adc
and
out
adc
xchg
lock
pop
sbb
sti
call
inc
push
lcall
clc
cmpl
ss
or
jmp
loopne
cwtl
or
adc
mov
sub
inc
mov
add
push
sub
jge
inc
aam
shlb
jecxz
push
cmp
push
push
sbb
js
add
pop
push
add
pop
or
sbbl
add
push
fcmovbe
lcall
push
subb
inc
pusha
push
adc
sbb
jne
jno
xchg
pop
push
or
movsl
cmpsl
or
inc
inc
cmp
pop
add
pop
push
adc
int
push
inc
xor
icebp
jmp
inc
rolb
sbb
loopne
mov
fildl
push
shrb
je
fcomps
sub
mov
imul
in
cmp
jmp
adc
sbb
mov
or
ljmp
decl
adc
inc
jne
mov
movb
js
or
push
aad
fidivl
add
cltd
testb
pushf
jno
and
lret
aaa
daa
inc
or
mov
shlb
xchg
cwtl
call
roll
out
sbb
in
inc
aam
pop
stc
cmp
inc
inc
xchg
dec
mov
xchg
jmp
jmp
icebp
cmp
push
sbb
pusha
mov
push
sub
popf
mov
inc
or
push
mov
repnz
xchg
ds
adc
push
xchg
mov
outsl
test
iret
aas
nop
fs
or
and
jmp
cmpl
add
lods
inc
hlt
push
bound
incb
cmpb
jne
jne
mov
divl
loopne
and
jbe
sbb
xor
add
mov
fnstcw
pop
clc
or
add
outsl
stos
xchg
dec
fwait
mov
aas
add
lods
cmp
jne
xlat
je
push
pop
ror
mov
dec
stos
mov
or
mov
in
dec
xchg
test
sahf
cmp
rcr
mov
and
adc
push
sbb
mov
or
push
jg
inc
lock
and
jne
into
leave
pop
mov
pop
mov
rcl
add
push
adc
arpl
mov
jbe
mov
mov
add
lret
xor
fisttpl
inc
ret
sub
sarl
aam
jp
in
push
push
pop
fnstsw
mov
dec
dec
or
or
out
jne
push
insb
or
mov
xchg
adc
dec
push
loope
and
or
or
adc
or
imul
je
inc
add
and
sbb
cmpl
rcrb
mov
outsb
fadds
je
arpl
bound
fs
pop
mov
sub
mov
jg
mov
imul
xlat
push
mov
arpl
inc
stos
push
sub
adc
sbbb
sbb
inc
outsl
cmp
roll
jl
or
ffreep
pop
pop
test
xor
ss
jmp
xchg
pop
sbb
push
loopne
insb
xchg
cmpsb
add
enter
sub
call
inc
inc
xchg
loop
inc
xlat
sub
xor
addr16
out
jo
sbb
mov
lock
ss
or
push
or
mov
fidivl
inc
fmuls
std
jmp
lods
stos
enter
test
leave
subl
mov
fsubrs
bound
loope
or
sbb
jbe
xchg
dec
adc
push
lcall
inc
xor
cmp
jb
sbb
push
dec
pushl
scas
in
and
add
je
ret
scas
test
push
adc
sbb
push
or
add
cmp
inc
hlt
movl
mov
xchg
das
jmp
xor
inc
ljmp
mov
mov
test
pop
dec
jne
in
jge
mov
leave
inc
je
cmp
stos
mov
lcall
cld
subps
dec
or
cmpb
add
add
dec
pop
inc
mov
lahf
push
inc
pop
pushf
inc
or
push
nop
movsl
xor
addb
adc
subps
push
ret
orl
test
and
fbstp
into
in
nop
mov
or
xor
sti
fnstenv
movsl
adc
jmp
add
inc
cltd
mov
fnsave
and
loopne
mov
or
push
dec
je
dec
addb
insl
xlat
add
leave
arpl
and
sti
mov
sbb
inc
stc
cmp
mov
jge
ja
daa
jne
xor
sti
lods
fwait
jmp
cmp
jne
sbb
add
lea
pusha
cmp
push
jmp
xor
mov
aaa
hlt
in
sarl
bound
aad
insb
fildl
xor
mov
pop
mov
mov
xor
scas
push
pop
and
sbb
push
jmp
sbb
out
js
push
push
ds
dec
aaa
pop
shll
ret
or
fdiv
mov
aaa
mov
stos
in
stos
push
loope
dec
rorl
inc
and
cli
jne
adc
in
cmpsb
std
xor
mov
dec
mov
movsl
sbb
jno
cmp
mov
mov
nop
push
dec
movsl
jb
je
sub
xchg
cmpsb
mov
mov
sub
xor
cmp
and
add
enter
inc
mov
enter
cmp
lods
movsl
mov
push
nop
inc
inc
pop
das
or
lahf
orl
adc
insl
xor
pop
js
mov
push
push
sub
mov
pop
mov
push
and
xor
outsl
lcall
sbb
in
movl
add
lsl
in
rorb
xor
jl
je
pusha
imul
sbb
or
or
xor
inc
add
jmp
pop
mov
mov
idivb
or
cmp
xor
in
mov
movsb
jmp
orb
addb
arpl
inc
or
push
in
sbb
adc
pop
inc
jb
mov
push
popf
add
out
test
jmp
fsubr
mov
pop
hlt
push
or
pushf
clc
je
xchg
cwtl
mov
and
cmp
add
test
inc
icebp
cmp
dec
sub
jb
xchg
adc
je
insl
add
adc
add
inc
scas
and
int3
xchg
lret
push
mov
fidivl
cmp
add
fmul
rcl
loopne
sbb
js
in
cltd
or
test
mov
jg
and
dec
orb
hlt
mov
scas
cmp
fadds
in
dec
add
push
lret
shll
rorl
sub
dec
pop
cltd
xor
sti
pop
inc
fs
rcr
insb
sub
or
sahf
testb
xor
outsb
jno
outsb
mov
sbb
sbb
add
test
xor
jno
lea
rol
jle
push
dec
xor
adc
adc
sarl
sub
mov
das
add
add
pusha
jp
sub
push
mov
pop
outsl
jmp
inc
inc
call
push
add
mov
push
sbb
fs
jecxz
inc
lret
jo
inc
mov
sub
imul
and
mov
push
ret
mov
or
jno
jbe
inc
jbe
jecxz
pusha
cmp
add
cltd
or
or
scas
jmp
sbb
add
pop
int3
xchg
outsl
jae
lcall
dec
stc
cmp
push
add
xchg
inc
jmp
adc
insb
inc
in
jmp
pusha
jecxz
add
lea
inc
scas
adc
push
rorb
or
rcl
xchg
sub
leave
ret
pop
daa
mov
out
fdivs
inc
lcall
ss
push
rorl
cmc
pop
movsl
arpl
adc
cmpb
inc
or
jo
bnd
scas
sub
ja
or
add
adc
outsb
sbb
int
and
pop
outsl
pop
dec
mov
jge
adc
and
bound
dec
adc
cmp
ss
or
sbb
dec
sub
subl
add
lahf
and
push
js
dec
cmc
push
sub
adc
cltd
dec
inc
imul
movb
out
addr16
mov
jae
ret
cmp
jecxz
push
rcll
add
xlat
adc
loopne
push
cmp
cltd
jnp
pusha
dec
aad
test
aam
jnp
xchg
insl
mov
pop
mov
adc
xor
call
std
out
jo
push
jae
cmp
jmp
mov
rcl
sbb
add
push
adc
and
loop
adc
int
xor
push
lcall
jmp
jecxz
cmp
lea
and
bound
sbb
xchg
cs
gs
push
aas
push
jle
add
test
stos
mov
push
adc
xor
xor
pop
add
sub
xchg
jae
jl
inc
dec
pop
inc
fmuls
push
xor
in
icebp
and
or
or
cmp
adc
cld
adc
ja
movzwl
in
pop
mov
or
fdivrs
add
js
xor
pop
jo
dec
pop
jns
scas
shl
inc
push
push
mov
inc
jo
or
pop
jmp
pusha
cmp
inc
andb
push
add
movsl
jg
lret
pop
pop
push
pop
xchg
jmp
sbb
pop
je
mov
jp
bnd
cmp
pop
mov
jmp
pop
and
xor
xor
fs
push
fldcw
add
push
xchg
inc
add
bound
sarb
cli
outsb
jmp
rorb
aam
jnp
or
shr
rep
adc
data16
sbb
adc
fs
dec
sbb
in
adc
pop
jo
mov
sub
pop
and
pop
mov
fwait
scas
stos
pop
jg
inc
jns
and
mov
cmpsl
sub
jne
and
sbb
addb
leave
hlt
lea
outsl
xor
jg
pushf
inc
jae
sbb
xchg
lods
push
adc
xchg
sbb
jnp
inc
mov
push
sarl
and
enter
inc
hlt
add
xchg
loopne
jmp
add
or
add
adc
daa
jmp
aam
jne
xor
push
pushl
shl
or
sub
ret
push
mov
insb
adc
xor
dec
mov
or
xor
inc
add
decl
arpl
loopne
pop
faddl
mov
pop
lret
fcoms
ret
cwtl
xchg
adc
mov
push
cmp
in
xchg
scas
or
dec
loope
call
fisubrl
enter
xor
in
xchg
cltd
adc
cmp
add
inc
jbe
add
add
ret
loop
or
adc
or
adc
testb
sbb
repz
xor
cmc
pushf
inc
movsb
push
mov
outsl
loopne
call
adc
push
aas
pusha
mov
jo
std
loopne
or
mov
arpl
inc
xchg
xor
jo
add
or
cmp
and
pusha
or
cmp
add
xor
aas
pop
cmp
push
jmp
es
in
mov
push
sbb
fisttpll
sub
mov
enter
scas
jge
push
adc
or
stos
pop
inc
jne
pop
lods
gs
xor
sbb
xchg
mov
clc
imull
dec
dec
pop
jge
js
inc
cli
imul
jp
or
movsb
rcrl
sbb
sbb
jnp
sub
fadds
jne
rcr
in
inc
adc
jae
sahf
and
add
ret
out
stos
or
or
aad
sub
in
adc
add
jmp
cmp
cmp
pop
push
or
mov
sbb
xchg
adc
push
push
ds
mov
pop
xor
pop
pop
ret
ret
push
inc
mov
push
inc
nop
mov
dec
cmpsl
jg
lods
outsb
test
push
out
add
loopne
adc
imul
popa
dec
xchg
mov
lahf
push
adc
and
xor
mov
mov
or
and
and
addl
push
jmp
es
add
sbb
jb
adc
adcl
clc
loopne
lret
push
cmpb
shrb
call
push
movl
cmp
clc
test
inc
testl
fisubl
push
mov
lock
pop
inc
aas
jmp
dec
leave
and
xchg
ljmp
adc
inc
movsl
mov
stc
xor
pop
sub
repz
xorb
mov
push
ss
rorb
sar
add
push
cmp
mov
push
mov
test
jne
mov
fnstsw
sub
add
shrb
insl
mov
lods
addr16
sub
mov
jo
pop
subl
enter
push
mov
cmp
jo
pmaddwd
sub
dec
mov
je
es
cmove
dec
scas
or
loopne
std
mov
adc
jbe
sub
rcl
int3
pop
sub
inc
mov
cmp
filds
cmp
inc
jb
or
or
pop
mov
dec
movsl
imul
or
shl
push
pop
sub
pushw
dec
andb
enter
pop
mov
mov
loopne
add
shlb
pop
movsl
mov
sbb
add
sbb
dec
xchg
pop
xor
arpl
test
sub
subl
jnp
lahf
ja
cmc
inc
test
pop
jmp
mov
push
rcl
test
cmp
add
add
rcl
inc
xchg
jno
js
push
loope
push
dec
sub
flds
jp
flds
outsb
push
lock
sar
mov
mov
adc
stos
lret
frstor
cmp
or
jmp
mov
sbb
mov
aaa
repnz
rol
jno
and
sub
push
std
mov
dec
jne
jmp
push
sub
cs
xor
aas
movsl
add
push
dec
je
dec
jne
mov
icebp
xabort
addr16
pop
sahf
xchg
dec
push
mov
dec
pop
lods
aam
jns
add
sub
loopne
das
shrb
sarb
lock
add
xor
add
inc
sbb
fidivrs
jo
push
jne
mov
push
cmp
out
outsb
std
jne
es
jne
mov
adc
push
cmp
negb
sar
ret
movzbl
push
dec
jmp
adc
sahf
lahf
jmp
std
std
jmp
cld
iret
lcall
push
adc
in
adc
es
fiaddl
inc
push
addl
clc
loopne
sbb
or
adcl
pop
dec
insl
leave
or
and
imul
pop
jmp
adc
cmc
loopne
enter
out
xchg
rorb
cmp
adc
push
add
push
pop
inc
mov
mov
or
add
adc
fimull
dec
adc
inc
xor
or
inc
or
pop
pop
pop
cwtl
cmp
mov
dec
adc
push
inc
or
sub
lods
es
sbb
dec
adc
or
pop
shlb
nop
bound
push
or
std
pop
enter
inc
rclb
sbb
fiadds
add
xlat
enter
sbb
dec
shlb
mov
je
mov
cwtl
mov
outsb
stos
or
jg
add
mov
movsb
or
pushf
push
mov
rolb
mov
push
fidivl
mov
enter
cmpl
arpl
ja
mov
out
jmp
dec
sti
cmp
loopne
rcrb
icebp
adc
jb
pusha
das
test
or
sub
and
mov
add
stc
jo
mov
or
ljmp
adc
fcoml
add
pop
pop
sub
call
jmp
filds
cmp
add
push
pop
into
gs
adc
pop
mov
mov
and
dec
aad
mov
jne
push
cmp
add
les
mov
icebp
pop
rcll
push
xor
gs
pop
add
lea
rclb
cld
adc
inc
add
out
lods
test
jl
pusha
dec
jge
jnp
adc
mov
idivb
push
test
or
ret
ror
or
cmp
aad
popa
or
lea
inc
mov
je
add
mov
call
jge
not
and
sub
sub
mov
addb
xchg
adc
or
push
mov
inc
mov
mov
adc
push
pusha
push
test
cwtl
ja
or
pushf
mov
out
push
fiaddl
jmp
idiv
pop
adc
sar
stc
and
mov
inc
je
mov
inc
movb
xor
fsubrs
fstpl
shl
in
cli
or
add
jmp
or
mov
inc
frstor
cmpsb
loope
cltd
fdivrs
push
scas
mov
pop
inc
and
sarb
cmp
jb
mov
jae
ret
je
scas
push
jl
push
lods
jl
add
int3
ds
lea
jno
pushf
ret
shl
push
adc
cld
xlat
test
or
adc
mov
hlt
push
sub
or
in
mov
retw
shl
push
adc
jle
jl
or
divl
lret
add
and
stos
pop
xor
xor
xor
jo
and
inc
add
je
add
test
out
jne
add
adc
dec
mov
out
cmp
je
test
je
cmp
mov
fdivrl
aam
xchg
pop
addr16
outsb
or
inc
lret
cld
xor
loopne
mov
test
lods
push
ror
mov
and
lock
push
jg
in
lods
push
xorb
lock
or
jl
and
lret
cmp
incb
cmpl
pop
sbb
addb
pop
jbe
inc
push
fdivr
cmpl
pop
cwtl
inc
jae
pop
inc
jmp
cmp
jne
jmp
add
add
sub
mov
push
mov
stc
xlat
hlt
in
inc
adc
cmp
enter
dec
or
mov
cmp
je
cmp
and
stc
adc
stos
or
adc
xor
mov
fimull
gs
mov
incb
mov
lret
cmpsb
dec
mov
and
je
loop
es
sbb
sub
mov
dec
dec
push
aam
es
sbb
ja
and
lea
sbb
scas
lret
mov
jne
push
adc
push
add
and
dec
cltd
and
dec
pusha
mov
pop
xor
sbb
push
mov
xor
lods
scas
push
adc
shl
cld
sub
sbb
std
mov
sbb
or
add
jno
dec
xor
or
lock
in
xor
mov
fists
mov
add
or
pop
sub
movsl
cmp
in
pop
cld
imulb
orl
mov
or
rclb
pop
cmp
push
cmp
fists
add
ret
xchg
mov
pop
cwtl
jl
push
sub
aad
or
ja
ret
loope
pop
push
cmp
insb
push
push
mov
and
mov
addr16
data16
shll
sbb
jbe
shll
cmp
jne
cmc
xchg
out
push
mov
xor
or
mov
xor
lret
or
jae
jmp
or
inc
or
sbb
sbb
or
push
or
aas
les
std
xchg
push
dec
push
hlt
inc
js
xor
leave
push
cmp
dec
inc
out
push
jmp
mov
ret
icebp
adc
jl
push
fsub
mov
adc
dec
jae
clc
xor
inc
addr16
adc
pop
push
adc
pop
xlat
pop
adc
or
push
jno
bound
aaa
push
call
pop
lods
icebp
in
repz
sbb
icebp
mov
out
shll
icebp
jecxz
xchg
xchg
lods
iret
adc
iret
xchg
mov
cmpsb
pop
lea
sbb
push
addr16
lret
lods
ficompl
adc
push
jge
sbb
dec
mov
test
or
adc
mov
inc
mov
ja
pop
jbe
lea
adc
sbb
dec
rep
mov
mov
call
lret
adc
sub
pop
movsb
xlat
and
add
and
mov
add
es
out
push
xchg
or
out
adc
cmp
pop
jo
and
push
repz
mov
notl
stos
js
fdivs
or
xchg
test
cmp
cmp
adc
or
sub
hlt
or
mov
mov
pop
mov
out
cmpsl
adc
ret
jo
shrb
xchg
or
fidivl
xchg
cmp
mov
xchg
adc
cmpb
mov
push
loope
and
push
pop
and
adc
les
jmp
movl
xchg
or
cmp
stos
adc
pop
inc
dec
sub
xchg
sbb
adc
repz
shlb
scas
add
push
stos
push
mov
leave
lods
mov
add
xor
std
sub
or
mov
jne
fs
add
cmp
or
movb
xor
pop
shrb
and
jge
lret
and
lds
push
rorl
lea
adcl
into
orl
cmp
or
rorb
xchg
repz
out
push
cmp
dec
mov
add
mov
insb
sbb
xor
ljmp
push
jne
ss
adc
jmp
subl
xor
xor
shrb
out
jae
iret
pusha
add
int3
or
lret
fdivrs
jp
int
mov
adc
jbe
mov
jb
lea
push
adc
or
or
add
cmp
sbbb
pop
adc
test
movb
mov
repnz
push
add
es
or
outsl
push
lock
add
adc
pop
sub
test
out
add
dec
add
or
sub
dec
cmc
or
push
in
daa
outsb
mov
add
jge
pop
jmp
pop
xor
out
fidivl
scas
and
push
loopne
push
loop
arpl
mov
in
jno
inc
pop
std
jne
jne
xor
loop
add
xor
stos
or
cld
jmp
aad
mov
test
and
mov
mov
pop
pop
mov
sub
xchg
add
jmp
pop
repnz
ret
or
ficoml
add
test
add
addl
hlt
push
xchg
cmp
nop
pop
pop
dec
inc
repz
sahf
movsl
mov
add
lret
or
ljmp
scas
in
sub
mov
mov
inc
fs
mov
cmp
add
pop
ficoms
cmp
push
outsb
pop
add
or
sti
mov
rcrb
gs
rcrb
sub
mov
fldz
scas
add
push
or
jmp
aaa
add
and
jmp
add
add
pusha
cmp
je
dec
fisttpl
pop
imul
sbb
jne
ja
mov
mov
sbb
mov
test
clc
cmpl
sbb
outsl
lret
ret
rorb
jg
cmp
fnstcw
or
push
and
mov
imull
mov
lods
pusha
jmp
movq
movaps
sbb
push
enter
shlb
jle
add
push
fidivs
push
add
ror
test
xorb
jl
and
fisubl
repz
or
jg
dec
mov
xchg
ret
adc
inc
push
std
cs
jnp
mov
push
and
mov
in
rcr
mov
add
adc
mov
add
repnz
or
push
mov
add
pop
rcrb
jl
pop
cmp
addps
int
add
cmpsl
mov
cmp
dec
sbb
je
mov
add
inc
lds
adc
filds
cmp
imul
mov
sbb
mov
add
dec
outsb
mov
jne
xor
cmp
mov
add
xor
es
push
add
lds
mov
pop
adc
shrb
adc
mulb
call
adc
xchg
lea
add
inc
lock
inc
push
jne
inc
jge
arpl
adc
loope
fimuls
push
push
movb
orl
addr16
movb
andb
and
xchg
jo
out
cmpsl
enter
push
cmp
int3
inc
rcrb
sub
cld
cmp
in
nop
adc
mov
icebp
movsb
jnp
je
jp
inc
sub
jne
sbb
loope
xorb
imull
dec
popa
and
inc
imul
fisttpll
pop
and
xor
jmp
xor
minps
jo
out
testb
or
lcall
and
cmc
imul
fcomi
push
pop
cmp
pop
inc
inc
push
shl
aas
shll
jno
pushf
push
dec
and
popa
pushl
push
push
data16
adc
cmpsl
xchg
fisttpl
mov
xor
or
inc
dec
loopne
add
aas
ret
mov
xor
bound
push
xchg
pop
pop
pop
push
sub
cmp
push
sub
pop
and
gs
jecxz
mov
mov
dec
push
mov
nop
and
sbb
jns
arpl
adc
add
popa
and
adc
sbb
imul
subb
sbb
iret
and
and
sbb
mov
sub
cmp
mov
pop
jg
jb
in
idivl
arpl
push
sub
adc
lods
ds
imul
shl
or
cmp
fdivr
aas
movsb
out
inc
cmp
jne
inc
cmpb
out
adcb
ffree
xor
mov
inc
inc
and
adc
or
aas
sbb
add
sbb
cmp
pop
jo
test
inc
xor
stos
adc
hlt
arpl
cmp
ret
mov
addr16
ds
dec
mov
add
jne
in
clc
adcb
cmp
xor
adc
stos
or
mov
or
lret
or
fsubrl
pusha
adc
inc
xor
je
sbb
aaa
push
lds
pop
and
loope
scas
dec
jb
data16
xchg
lods
inc
xchg
add
pop
int
and
inc
addr16
xor
add
test
fildl
inc
add
das
sub
cwtl
pop
sbb
data16
mov
sbb
rorb
or
ret
xor
loop
fcompl
mov
rol
jo
cmp
inc
pop
fisttps
jle
mov
arpl
or
dec
push
jo
sub
scas
mov
cmp
pushf
mov
cmp
je
test
or
push
lret
sub
in
mov
jne
push
adc
or
cmp
mov
or
pop
sub
cmpsl
es
sbb
ret
mov
mov
jne
adc
mov
fnstcw
jo
and
push
pushf
or
xchg
adc
daa
incb
inc
cmp
into
and
xor
sahf
or
cmpb
mov
aaa
jmp
xor
pop
ljmp
push
std
outsb
cmp
push
jbe
mov
push
push
fnsave
filds
pop
jne
jge
or
arpl
pop
and
cs
scas
movb
sti
addr16
xor
ja
pop
out
push
pop
sar
mov
mov
enter
jecxz
dec
or
loope
jecxz
mov
push
xchg
inc
pop
or
sub
test
dec
sub
ss
enter
test
movsb
xchg
mov
push
inc
sbb
add
mov
loop
les
jne
pop
push
dec
jmp
sub
mov
push
movsl
add
push
les
xchg
pop
test
pop
xor
ret
jo
add
sti
xor
imul
jns
ret
imul
xlat
add
mov
js
hlt
sbb
sub
stos
push
mov
sbb
insl
ret
roll
movsb
sbb
add
or
enter
jbe
inc
dec
push
rolb
push
xor
repz
dec
shl
ret
and
rcrb
xchg
add
jecxz
add
dec
sbb
dec
fstpt
adc
xlat
out
xor
imul
add
loope
rcll
jl
mov
aam
test
insl
cwtl
or
shrb
in
xchg
sub
in
inc
adc
imul
loopne
in
test
jmp
fldl
je
push
or
mov
scas
incl
mov
addl
inc
decl
cmp
pop
hlt
or
pcmpeqd
and
adc
ljmp
in
test
add
sub
pop
fimuls
jne
adc
inc
xor
sbb
add
ljmp
xor
cmp
aam
push
adc
xlat
adc
dec
loopne
adc
mov
cs
mov
pop
push
adc
sbb
ljmp
rolb
add
ficoms
mov
movsb
hlt
xchg
fdivrl
pusha
pop
icebp
mov
push
repz
adc
or
repnz
or
hlt
add
or
mov
testl
loopne
push
and
xchg
loopne
mov
outsb
adc
insb
rolb
lock
add
js
cmc
aam
sub
cld
pop
in
and
mov
push
in
or
cmp
dec
jbe
and
dec
sbb
sbb
callw
or
jg
mov
sbb
add
shlb
pop
cmp
adc
mov
faddl
adc
clc
adc
sbb
or
cli
rcr
sub
jmp
daa
adc
inc
sbb
sbb
jbe
rorb
popa
jo
or
sbb
setno
imull
or
push
or
mov
push
sbb
add
js
jbe
jmp
sub
dec
push
cmp
sbb
add
push
mov
push
push
fsubrl
mov
mov
lea
test
mov
dec
cmp
pushf
lock
pop
iret
ljmp
push
addr16
clc
jbe
jne
mov
addr16
add
dec
shll
jne
xchg
dec
xor
adc
repnz
rcll
add
dec
mov
and
cmovp
lret
enter
pop
jns
mov
or
add
popf
adc
push
sub
adc
push
add
push
jle
or
xchg
in
movsl
lds
leave
add
ja
inc
push
mov
out
pop
rorb
add
dec
outsb
pop
mov
in
push
jmp
sub
push
mov
adc
push
pop
jmp
cmpsl
jmp
push
stos
fdivs
sbb
push
or
mov
dec
add
ficomps
add
sahf
test
add
jmp
xor
jae
cmp
je
inc
push
sub
adc
ss
add
push
adc
pop
add
out
inc
aam
in
xor
mov
add
add
sub
outsb
sbb
fiaddl
cs
rcll
adc
test
imul
test
adc
add
sub
je
or
sbb
int
dec
and
add
insb
jne
out
iret
mov
pop
jle
xorb
pop
pop
imul
rorb
dec
xchg
xchg
and
dec
je
punpckhwd
xchg
sbb
addr16
cmpb
pop
lods
fisttpl
lret
das
fdivr
loope
jns
xor
out
adc
add
aaa
mov
push
pop
popa
sub
fdivr
xchg
imul
cmp
push
adc
mov
push
sbb
mov
cmp
mov
cmp
lret
push
push
add
cmpsb
mov
jmp
inc
lods
movsl
lcall
push
les
jge
ret
aaa
mov
pop
outsl
sarl
inc
sub
jb
mov
mov
push
inc
cmp
pop
std
idivl
jo
fsts
stc
xchg
clc
push
mov
stc
mov
push
xor
shl
insb
and
notb
imul
add
jmp
insl
in
push
loopne
inc
sub
pop
adc
pop
adc
pop
in
dec
or
pushf
mov
ret
add
roll
cld
cmp
addr16
les
mov
jmp
dec
or
mov
cltd
pop
adc
das
rolb
inc
add
ret
bound
adc
sub
clc
sbb
pop
cltd
ljmp
clc
or
jle
jb
stos
imul
insl
push
cltd
pop
jne
push
dec
pop
sets
push
fisubl
int
push
inc
fcmovne
inc
push
mov
jg
pop
das
in
add
aam
int3
push
push
add
addb
shlb
movsb
lret
inc
dec
loope
jo
add
add
pushf
stos
sub
mov
out
inc
or
jmp
jbe
and
mov
jge
call
jge
loop
xor
lea
aaa
push
inc
xorb
push
xchg
dec
or
sbb
enter
loope
or
mov
push
and
aam
push
das
pop
cmp
mov
push
imul
mov
xchg
mov
mov
cltd
cmp
or
dec
push
ss
icebp
adc
movsb
adc
aam
pop
lret
movsb
sbb
push
movsb
add
add
ret
insb
movups
push
fs
nop
adc
or
jo
orb
test
inc
popf
orl
shll
pop
dec
loop
loope
push
ret
loopne
ret
and
or
pop
pop
mov
adcb
xchg
fnstsw
sbb
stc
and
dec
insb
sub
jp
fisttpl
jmp
loop
mov
add
mov
push
sub
in
push
rorl
xor
scas
sub
mov
fwait
or
mov
imul
inc
loopne
les
jecxz
inc
popa
mov
push
lock
inc
les
push
jmp
pop
mov
mov
and
or
cmp
xlat
repnz
jno
dec
sub
and
sub
fmul
scas
sar
pop
fmull
rorb
inc
adc
mov
adc
les
into
je
movsl
adc
fstpt
mov
and
bound
pop
popa
xchg
pop
repnz
loopne
pop
mov
inc
cmp
xchg
push
ja
ja
int
cmp
xchg
pop
xchg
mov
fcomip
mov
pop
add
push
loope
aam
xchg
mov
and
mov
jno
les
mov
movsl
test
cmp
jge
roll
cmp
cmp
test
mov
test
fcoml
test
adc
out
jle
loopne
dec
pop
pop
jne
out
xchg
test
std
adc
stos
loop
scas
adc
jg
or
rep
jmp
mov
sbb
jb
int
fnstenv
movb
test
lea
or
icebp
jns
jnp
test
adc
inc
push
fs
mov
pop
mov
imul
mov
int3
insl
cmc
movsl
cmp
add
add
mov
sub
jnp
push
imul
jns
int3
push
les
repz
inc
mov
mov
call
iret
repz
lock
hlt
dec
loope
iret
clc
clc
cld
push
inc
pushf
rcrb
add
clc
repz
jmp
int
dec
and
nop
inc
pop
xchg
mov
sti
and
outsb
or
push
lea
jl
cld
push
jo
sub
and
std
cld
out
mov
fcmovne
mov
xchg
daa
outsb
pop
sbb
stc
sub
repz
in
fiaddl
jl
sub
out
add
dec
inc
fcomps
add
nop
dec
dec
addr16
push
xorl
mov
ficomps
or
push
push
pop
pop
jl
out
push
sbb
sahf
out
sbb
sbb
out
sahf
out
adc
or
jns
or
inc
movsb
loop
ficomps
mov
lds
push
push
add
pop
mov
adc
ja
ljmp
or
adc
xchg
xor
inc
cld
cmp
push
adcl
out
push
leave
mov
fmull
jbe
fldenv
testb
jne
pop
icebp
pop
inc
or
sub
mov
aam
sar
ljmp
out
or
mov
mov
dec
testb
jne
push
sbb
sar
imul
sub
inc
and
cmp
inc
adc
imul
ficomps
test
repz
pop
mov
sub
cmp
call
xchg
movsb
sbb
add
push
or
jbe
clc
stos
rorl
jmp
idivb
cmp
cld
ret
cli
movsl
scas
or
jge
fstl
enter
cld
mov
jno
adc
xor
pop
rclb
or
enter
lock
sbb
out
stos
cmpsb
jne
adc
testl
push
pop
in
fs
xor
fs
jle
or
cmp
aam
sub
or
dec
push
or
push
aaa
adc
int3
les
call
inc
xorl
sbbb
daa
sbb
jg
cmpb
lock
adc
daa
icebp
sbb
sbb
rcrl
dec
loope
cmp
and
dec
pop
push
rorb
cld
add
pop
std
movb
jmp
jecxz
fisubrl
xor
sub
std
add
cmpb
add
lret
jmp
lods
xor
or
pop
loopne
mov
sbb
add
adc
roll
rolb
lock
lock
dec
adc
cs
inc
pop
cwtl
sub
addr16
xchg
lock
mov
cmp
xor
xchg
push
push
cs
scas
scas
cmp
mov
testb
je
sub
pop
pop
xor
add
neg
sub
rorl
lret
je
repz
cltd
mov
ljmp
adc
sar
mov
shr
mov
pop
pop
pop
sbb
lods
data16
stc
or
add
loope
jns
pushf
pushf
popl
jbe
jno
mov
pop
test
neg
or
adc
add
mov
jo
stos
es
ret
adc
fldl
bound
sti
mov
dec
and
adc
cmpsl
xor
dec
loop
aam
xor
fdivs
inc
push
sbb
push
leave
jecxz
fsubr
add
cmpsl
xchg
add
mov
andl
dec
out
adc
sbb
pop
push
xor
stc
lods
jl
add
or
std
fcoml
lods
popf
aam
sarb
mov
xchg
clc
or
test
mov
shrb
lock
push
je
push
imul
in
adc
out
adc
and
cmp
push
pop
in
xchg
sbb
insl
push
jne
add
xlat
jbe
mov
inc
out
outsl
mov
mov
push
ret
fldenv
mov
add
and
arpl
add
sub
sub
push
adc
loopne
orl
andb
pop
adcb
pop
clc
or
rorl
dec
or
fwait
imul
test
enter
add
mov
push
add
mov
mov
jne
scas
xor
push
inc
call
inc
xchg
test
cmpsb
push
outsb
dec
or
inc
fsubr
add
nop
pop
push
adc
movsl
test
jbe
push
mov
adc
push
mov
dec
xchg
cs
sbb
fcompl
add
dec
ljmp
jns
mov
lock
enter
xor
xchg
add
mov
xchg
push
push
pop
cmc
and
adc
pop
inc
fsubl
dec
add
push
dec
mov
fnstsw
ss
pop
sbb
or
pusha
arpl
dec
mov
push
mov
je
inc
inc
loopne
mov
add
dec
dec
movsb
dec
jmp
push
dec
push
push
js
lcall
or
jbe
cld
rorb
adc
add
push
jmp
inc
and
jmp
int
dec
test
or
lcall
cmpl
jne
push
cmp
mov
jp
adc
das
nop
popa
add
add
mov
fdivs
add
outsl
push
setnp
cli
adc
cs
lret
gs
mov
ss
mov
jo
inc
in
jne
sub
popf
mov
adc
sub
jno
in
in
shrb
fbld
xchg
call
loopne
lret
push
adc
or
mov
repz
xchg
sar
lahf
lea
das
adc
add
pop
ja
stos
movsbl
andl
sarl
pop
sar
pop
lods
movsb
faddl
sub
sahf
inc
loopne
mov
jb
je
call
rcr
mov
les
lret
mov
xor
add
jl
inc
test
sub
fwait
into
cltd
mov
pop
or
add
mov
add
faddp
or
fs
jle
sti
mov
mov
pop
or
movsbl
adc
push
imul
ret
or
lea
ja
rcrl
int3
in
mov
mov
mov
jb
hlt
pop
sbb
inc
hlt
stc
sub
xor
je
insb
mov
pop
les
test
cmp
ds
into
xlat
mov
dec
pusha
sub
adc
mov
pop
and
js
add
mov
add
add
sbb
xor
movsl
mov
incl
insb
cmp
sbb
imul
lcall
or
xchg
adc
pop
aad
lock
dec
daa
sub
int
pusha
sub
xchg
mov
add
or
sbb
sahf
cmp
je
pop
push
or
sub
sub
ds
mov
mov
inc
adcl
mov
dec
fnstenv
xchg
dec
adc
jge
sbb
je
push
arpl
xchg
pop
fisttpll
mov
aaa
jne
das
mov
jo
and
add
dec
stos
shrb
sti
fmull
das
ret
or
ja
pop
sbb
in
mov
inc
mov
and
adc
dec
je
push
addl
inc
lock
into
push
insl
cmp
mov
ret
loopne
xor
pushf
sub
data16
rorb
shl
dec
sub
sarb
adc
adc
adc
shr
test
int
or
leave
and
mov
pop
add
dec
adc
sbb
mov
mov
inc
lods
xlat
mov
jmp
dec
cmp
mov
xor
mov
je
xchg
sbb
scas
push
and
mov
push
cs
cmp
outsb
jo
jmp
jge
mov
add
insl
rcll
or
je
or
or
shll
test
insl
jp
jns
movsb
je
xor
push
mov
mov
loop
fimuls
stc
test
mov
xchg
lods
jl
xchg
add
or
mov
and
insl
sbb
or
loopne
pop
adc
test
mov
push
add
dec
ficompl
mov
jg
adc
jmp
sub
pop
mov
popa
mov
out
into
icebp
and
pop
push
sbb
mov
cltd
add
xchg
mov
testb
or
push
push
adc
mov
and
adc
and
fisubrs
jmp
push
xchg
sub
inc
jo
inc
ljmp
sbb
mov
scas
ljmp
pop
jne
popf
push
or
push
data16
nop
sbbl
sub
cmpb
jne
xor
inc
stos
movsb
loop
subb
hlt
test
inc
shrl
mov
sbb
pop
dec
xchg
mov
pusha
cld
or
mov
mov
push
inc
daa
add
inc
pushf
cmpb
cmp
stos
push
js
or
mov
mov
ret
pop
in
adc
dec
adc
xor
adc
inc
cld
jmp
or
sub
sub
cltd
or
sbb
shrb
jl
jae
inc
inc
add
shl
fcmovb
dec
sub
pop
fidivs
movsb
add
xchg
cmp
sbb
add
cmp
popf
jno
adc
and
lea
loopne
das
sbb
xchg
push
inc
orb
and
incl
enter
xor
shrb
and
repnz
sahf
add
mov
sub
sub
inc
cmp
jmp
addr16
orb
add
shl
movb
inc
jmp
test
fisubs
mov
jmp
dec
ret
add
or
orb
aas
sar
ret
data16
mov
mov
sub
push
movsb
xor
xor
movsb
test
adc
daa
outsl
inc
and
fcompl
or
xor
in
jle
loop
in
or
cmp
xor
faddp
sbb
test
pop
or
pop
pop
push
fldcw
xchg
xor
add
xor
cmpsb
in
mov
sub
mov
addr16
addl
ds
sbb
int3
test
jle
sub
mov
loope
lret
lcall
daa
sub
nop
rolb
int
fldenv
pop
sub
xor
outsb
push
pusha
adcb
nop
popa
movsl
add
xchg
xor
nop
les
inc
movsl
sbb
mov
mov
cmp
lret
cli
movsb
adc
mov
dec
xor
mov
test
pop
testl
imul
outsb
xchg
push
mov
std
dec
xchg
push
popf
movsl
ss
push
add
nop
mov
movsb
mov
and
or
pop
mov
loopne
add
aas
pop
push
add
movsl
test
aas
xchg
fidivs
fs
push
dec
push
inc
add
clc
mov
jmp
mov
aas
sub
mov
mov
nop
inc
mov
loopne
push
fs
mov
pusha
pop
aas
push
mov
mov
out
cmp
push
lock
add
push
adc
mov
aas
loopne
fimuls
cmp
inc
push
push
push
sub
push
dec
sarb
push
faddl
sbb
cltd
jecxz
sbb
add
pusha
pop
movsl
push
pop
or
push
pop
and
push
mov
pop
and
mov
fmul
push
or
pop
ret
adc
loopne
aas
loop
push
es
mov
jle
jbe
cltd
xchg
or
push
icebp
and
or
and
inc
pop
push
movsb
icebp
aam
push
fisubrl
jmp
shl
outsl
mov
iret
cmp
lahf
std
jp
sbb
daa
clc
mov
pushf
inc
or
and
fcoms
pop
mov
push
mov
fdecstp
inc
imul
ss
nop
in
adc
sbb
icebp
into
sub
push
movsb
fwait
dec
cmp
cmp
sub
xor
jo
jl
rorb
into
add
scas
add
adc
mov
or
gs
mov
pop
call
clc
shr
shrb
and
add
aam
xor
add
ds
mov
lahf
sti
sbb
pushl
insl
and
lahf
xchg
test
jp
add
push
mov
stos
mov
stos
push
fdivrl
inc
clts
cmpl
fneni(8087
insb
jge
adc
jmp
inc
xor
leave
lret
loopne
loopne
loopne
and
pop
shrb
or
sub
jmp
and
movb
xor
xchg
mov
xchg
fisubrs
add
int3
flds
push
pop
sbb
add
sar
push
arpl
xchg
xor
test
or
lock
inc
or
insb
dec
xchg
loopne
mov
loope
add
cmpb
xchg
adc
adc
outsb
dec
call
lahf
addl
add
cmp
pop
inc
or
imul
pusha
sub
and
mov
lret
xor
aas
insl
cli
dec
ss
hlt
lock
sbb
sbb
cwtl
subb
adc
addr16
add
push
lock
sti
xor
std
cmp
mov
push
outsl
out
xor
mov
xor
flds
adc
jbe
sbb
adc
outsb
out
enter
sar
or
sub
arpl
shl
stc
stos
mov
push
and
adc
clc
pusha
push
mov
in
xchg
push
mov
adc
sar
jmp
push
add
jno
fstps
add
pop
test
data16
mov
or
lcall
or
cmp
and
enter
shlb
pop
sti
lret
and
mov
inc
mov
cmc
xchg
imul
jo
pop
ret
shrl
fsubp
or
mov
out
sub
iret
inc
hlt
imulb
psllw
jo
mov
mov
gs
inc
mov
scas
leave
fnstcw
push
mov
pop
push
ret
inc
pop
push
add
xchg
jl
cmp
lret
xchg
mov
sub
lahf
mov
ret
int3
push
js
adc
imul
shrb
js
adc
imul
xor
mov
xchg
test
mov
ljmp
xlat
and
cwtl
inc
adc
loope
leave
xlat
push
dec
pop
xchg
push
push
xor
cmpsl
xchg
or
push
mov
or
sbbb
push
add
xor
push
sbb
or
dec
ret
divb
data16
sbb
jecxz
mov
pop
or
test
cmp
sti
sbbb
or
fwait
fs
dec
xchg
xchg
xor
sbb
mov
movzbl
jle
add
jg
nop
pop
xor
inc
add
mov
daa
xchg
or
hlt
imul
jmp
xchg
add
cmp
int
arpl
push
pop
mov
mov
add
adc
cmpl
and
and
push
rorb
cmpsl
xor
loopne
sub
shrb
sbb
clc
or
sub
xchg
mov
js
imul
xchg
add
aaa
xor
adc
aam
test
push
jmp
daa
pusha
push
jmp
inc
aaa
mov
or
aam
sub
sbb
movzwl
add
in
les
push
enter
nop
push
ficoml
pop
add
cli
cmp
mull
cmp
jbe
loopne
dec
xchg
cs
ja
movsb
inc
popf
sbbb
es
hlt
outsb
adc
imul
test
test
push
fbld
into
pop
shl
ret
push
inc
pop
ja
adc
imul
xchg
sar
mov
xorb
sub
cmpsb
add
test
ja
or
add
rcll
add
mov
or
or
adc
push
pop
xor
pusha
das
leave
jecxz
imul
or
cmp
adc
mov
inc
sahf
daa
sub
inc
rclb
mov
insb
jne
jbe
pop
and
add
sbb
xchg
fwait
xchg
inc
adc
andb
sbb
xor
adc
cmp
dec
inc
daa
daa
daa
daa
cmp
es
stc
push
sbb
in
jl
addl
orb
rcrl
shlb
mov
roll
leave
add
mov
dec
cmp
add
sahf
addb
adc
nop
call
push
sbb
mov
mov
divl
test
mov
push
mov
adc
test
int
inc
sub
inc
mov
or
mov
cmp
push
jb
adc
xchg
addr16
adc
xchg
in
and
orb
add
or
call
xchg
cmpsl
frndint
cmpsl
xchg
jae
cli
mov
mov
movsb
xchg
hlt
mov
stc
pop
mov
jb
add
lret
in
xchg
out
adc
nop
cmp
mov
xchg
mov
mov
adc
add
add
xchg
fwait
push
es
or
sbb
leave
add
repnz
mov
and
call
push
cwtl
lods
xor
pop
pop
dec
ss
or
movb
or
repz
adcb
fcoml
sbbb
cwtl
subb
in
decl
and
fmul
in
sub
dec
mov
sbb
lods
inc
mov
pop
roll
in
add
sti
or
cltd
fs
aam
in
stos
loope
bound
jbe
jl
outsb
add
test
pop
adc
or
lods
jecxz
pop
enter
add
mov
and
push
or
fadds
cmc
fbstp
dec
mov
in
mov
cmp
cmpsl
push
mov
mov
mov
pop
lods
dec
popa
sub
push
call
dec
lcall
adc
adc
mov
lea
push
mov
dec
add
outsl
clc
mov
sub
hlt
cmp
ror
fwait
rcl
push
rcll
pop
sbb
add
cmpsl
shlb
sbb
push
pop
out
rclb
push
dec
mov
jno
dec
mov
mov
dec
add
inc
test
sbb
popf
jnp
cmp
jmp
mov
adcl
mov
fadds
movsb
add
add
add
or
cmp
and
and
jne
sub
add
data16
adc
push
xor
sbb
mov
and
rcl
sbb
xchg
sbb
out
add
add
mov
mov
mull
mov
movsb
je
add
pop
or
inc
shlb
repnz
adc
or
lock
push
in
pop
and
sbb
pop
mov
aas
out
enter
shlb
adc
shr
and
mov
mov
std
mov
into
mov
mov
arpl
adc
mov
cs
bound
push
sbb
push
inc
imul
cmc
aam
nop
cmp
outsl
add
mov
mov
hlt
mov
push
pusha
push
out
aaa
adc
enter
push
sub
outsb
mov
rorl
or
test
popf
mov
inc
lahf
or
or
out
fisubrs
cld
ficoms
push
push
out
or
std
sub
js
cs
fcomps
xor
cmp
aad
or
lcall
sub
mov
mov
decl
orb
mov
enter
or
push
loope
out
daa
bound
mov
add
loop
mov
filds
leave
sub
mov
cmp
decw
sbb
mov
orl
lock
sbb
and
cld
and
xor
sbb
and
shll
adc
or
mov
add
ja
pop
dec
xchg
xchg
lods
jmp
test
int
cmp
nop
mov
push
std
je
jns
jno
fnstsw
xchg
mov
mov
push
test
lods
loopne
mov
shrl
in
mov
adc
cmp
jne
movl
inc
imul
std
jne
shr
fistpl
or
cmp
add
mov
leave
dec
push
push
add
mov
or
or
push
pusha
punpckhbw
popf
stos
jae
scas
popa
dec
addl
mov
pushl
cmp
fidivl
or
enter
jmp
adc
or
fwait
addb
push
and
sbb
scas
into
aaa
inc
jne
mov
rolb
jnp
xchg
pop
cmp
or
push
call
loope
push
push
roll
jne
aam
dec
call
add
imul
leave
inc
or
sub
lea
pushf
aaa
jmp
outsb
enter
iret
ds
mov
push
cmp
inc
add
sbb
ljmp
add
mull
inc
push
jge
add
popa
add
lock
mov
xchg
sub
push
sbb
xor
or
pushf
xchg
lock
inc
negl
jne
mov
dec
xlat
inc
pop
adc
add
adc
xor
es
leave
or
inc
dec
jne
xchg
mov
mov
jmp
add
jo
addr16
jnp
data16
jmp
cmp
fldl
adc
je
lea
pop
loopne
sbb
adc
push
sbb
pop
inc
in
dec
test
push
and
scas
and
xchg
cmpsb
fstpt
add
mov
inc
lahf
inc
add
or
xchg
jae
jne
ret
pop
in
push
dec
aam
push
mov
aam
xor
xlat
xchg
movsl
test
add
cmp
xchg
lods
add
push
add
and
push
insb
or
loope
popfw
jo
lock
add
xchg
inc
pop
sub
jg
out
inc
jmp
xor
dec
sbb
mov
mov
xlat
add
ret
add
sub
ljmp
faddl
jne
fwait
jno
mov
xlat
mov
popf
mov
ds
jmp
and
cmp
push
adc
jp
mov
stos
pop
push
and
in
pusha
and
ret
jo
xorl
sarb
dec
ds
push
sbb
mov
lea
push
int
inc
or
mov
rolb
aaa
cmpl
popa
xchg
adc
xorb
push
push
out
sub
push
cmpsl
shlb
pusha
inc
add
pop
pusha
test
and
jo
andb
test
loopne
add
ret
je
cmp
xor
and
js
pop
pop
sbb
mov
data16
mov
jg
mov
jae
scas
push
sbb
and
jno
inc
inc
sbb
pop
xor
stos
sub
add
movswl
sub
and
nop
mov
rorb
sub
cmp
daa
sbb
in
dec
lea
jg
jp
into
inc
pop
or
imul
cld
pop
das
mov
ret
sub
stos
dec
test
jns
mov
mov
xor
add
mov
mov
loope
push
sub
sbb
add
jne
mov
and
nop
mov
mov
inc
pop
inc
pop
loope
aas
add
add
in
jle
sub
insb
or
add
nop
or
rolb
add
insb
leave
mov
pop
pushl
jmp
pop
push
dec
jb
inc
fwait
adc
adc
jg
js
mov
adc
and
and
in
xchg
jno
and
push
push
sub
test
rorb
lahf
cltd
and
aas
push
scas
jl
sub
push
mov
xchg
lock
movl
push
clc
pop
data16
imul
jo
int
or
lock
dec
add
jg
dec
pop
cmp
xchg
mov
mov
inc
push
mov
add
mov
mov
in
push
bound
mov
add
in
push
imul
dec
dec
nop
and
sbb
pop
shll
fstpt
jl
test
dec
inc
jbe
add
push
push
jl,pt
int3
arpl
push
mov
mov
jnp
mov
add
or
xor
rolb
or
aam
sub
sbb
push
adc
mov
adc
sbb
in
and
roll
sbb
xor
enter
inc
inc
sub
enter
cmp
and
jle
jns,pt
jmp
jmp
push
and
cmpsl
bound
inc
jg
mov
jne
insb
and
pop
cmp
adcl
sbb
jbe
nop
inc
pop
sbb
popf
jecxz
outsb
adc
adc
or
sub
mov
dec
push
mov
and
push
jo
gs
sbb
adc
cmpl
jae
jb
push
es
adc
sub
and
mov
jbe
jge
mov
outsb
clc
dec
push
mov
mov
test
or
xorl
pop
fnstsw
xor
pop
nop
push
mov
pop
xor
pop
pop
aas
xchg
arpl
aaa
pop
push
jne
cmp
stos
inc
lahf
xor
enter
sbb
or
pop
pop
negl
in
dec
sub
ds
push
inc
iret
js
out
lcall
ss
push
jne
out
or
fidivs
and
xorl
dec
xor
lea
sbb
test
lock
call
or
enter
std
addr16
rolb
jne
sub
sbb
nop
inc
ss
xor
outsb
fadd
incb
lret
xor
cmp
xor
int
dec
ret
call
jno
idivb
sbb
mov
xor
jge
into
iret
movsl
or
mov
xchg
out
nop
test
or
cmp
push
lret
mov
pop
dec
cmp
pushf
dec
mov
mov
mov
xchg
pop
mov
ret
fcoml
ret
popa
mov
xor
movsl
dec
dec
jne
xor
pop
or
add
pop
jnp
mov
cmpsl
fcomp
mov
mov
pop
xchg
jp
cmp
icebp
mov
pop
mov
mov
mov
subb
es
xchg
xor
mov
pop
mov
and
push
or
or
or
fstpt
aas
insb
jne
inc
sub
mov
aad
add
mov
pop
and
jb
insl
cld
ss
cmpb
movl
mov
xor
lea
icebp
cmpsb
rclb
add
imul
xor
loope
fnstcw
repnz
mov
andl
scas
push
jbe
sbb
dec
xor
outsb
push
cmp
and
pop
loopne,pt
lea
ljmp
inc
xor
fs
sub
jo
out
test
xor
out
xchg
and
jle,pt
push
or
shr
sbb
sbbb
xor
shl
inc
lea
or
pushf
adc
dec
push
pop
add
imull
pop
adc
or
cwtl
add
inc
xorb
cmp
dec
add
stc
mov
jo
ljmp
push
cmp
or
mov
jecxz
push
ss
mov
xor
mov
cwtl
add
cmp
mov
inc
cld
pop
cmp
xor
push
pusha
add
enter
dec
mov
mov
add
or
jno
or
mov
or
mov
sbbb
arpl
dec
add
addb
cs
adc
insl
adc
gs
xchg
xchg
addr16
add
mov
jl
out
or
std
fs
loopne
loope
and
xor
dec
xorl
js
or
ja
mov
push
adc
imull
sbb
push
test
sbb
jle
push
add
ja
movsb
jne
xor
mov
arpl
test
cmp
mov
cpuid
jle
mov
popa
or
jo
mov
jl
push
jge
popa
pop
mov
ja
mov
or
fidivrl
cmp
add
xor
dec
int
sub
bound
mov
push
mov
imul
mov
dec
insl
insb
mov
insl
mov
xchg
loopne
icebp
out
dec
mov
ret
add
outsb
adc
cmp
cmp
push
inc
daa
add
pusha
cld
xor
inc
add
and
aad
push
mov
mov
ss
xchg
out
ret
sbb
dec
inc
inc
inc
or
mov
dec
mov
or
enter
outsb
ret
in
dec
dec
dec
daa
jle
fistpl
imul
push
lcall
sub
xor
incb
repz
pusha
into
sub
pop
dec
mov
das
data16
sbb
loope
das
aas
dec
cs
pop
clc
shr
das
in
push
pushf
jmp
push
sub
and
pop
mov
add
dec
cwtl
enter
jno
jp
jge
dec
ret
jle
dec
xor
push
sub
sbb
sub
jmp
pusha
adc
and
in
or
cmp
inc
clc
add
test
jne
inc
and
clc
cmp
cld
sbb
push
inc
call
dec
sarb
mov
or
mov
adc
pop
jmp
fwait
cli
xor
fcomi
inc
and
jg
sbb
mov
je
nop
fnstcw
push
push
mov
lret
mov
orb
test
loopne
xorb
sub
enter
cmpsb
dec
and
in
int
mov
pushf
xchg
pop
inc
mov
inc
inc
add
pop
je
pop
xchg
mov
movsb
adc
xlat
add
loope
out
out
pop
adcb
pop
mov
jb
fstpt
mov
es
lret
adc
pop
movsb
pop
fld
dec
and
int3
out
lods
out
lret
push
lret
popf
test
or
lahf
out
pop
int
sbb
push
sbb
mov
jmp
or
push
xchg
stc
movb
or
mov
stc
jno
sub
in
pop
push
hlt
xchg
mov
in
daa
jg
lahf
add
insb
outsb
adc
adcl
adc
jno
dec
bound
or
adc
add
or
test
and
cwtl
xchg
push
jb
adc
push
add
out
cmpl
sbb
lret
jne
xor
push
test
xchg
cmpsl
and
add
or
negl
add
outsb
inc
cltd
cmp
jle
gs
inc
lret
sbb
cltd
test
push
adc
ljmp
inc
add
cmp
add
aam
xchg
add
and
xor
xchg
lahf
sub
sbb
mov
lds
dec
dec
jmp
and
les
dec
lock
xlat
enter
fsubl
idivl
push
push
jo
ljmp
lds
hlt
ret
dec
jns
sub
js
and
es
pop
loope
inc
sbb
mov
test
in
mov
lcall
mov
or
add
clc
call
rolb
mov
shll
cld
cmp
push
lods
and
lods
es
sahf
idivb
clc
lock
insl
pop
or
jb
pusha
lods
and
or
push
hlt
pusha
fwait
popa
stos
dec
mov
add
pop
add
sbb
outsb
adc
pop
lea
xchg
or
lock
test
adc
dec
shrb
das
jno
call
sub
lsl
inc
mov
rcrl
sub
xchg
jmp
add
gs
pop
enter
add
sbb
inc
xchg
mov
jg
ret
sub
jmp
sysenter
aam
insb
sub
or
rclb
out
fisttps
push
lock
mull
fnstsw
xchg
lsl
jmp
push
pop
and
xchg
outsl
mov
jmp
rcr
or
push
div
pop
in
xchg
and
dec
xor
out
jb
out
out
fisttps
cmp
or
cmp
or
xor
and
cld
cmp
lcall
out
sbb
fxch
pop
ret
and
adc
test
in
adc
and
mov
xchg
out
fisttps
mov
or
out
scas
add
cmp
js
aam
jmp
test
push
push
or
sbb
push
mov
sub
out
lods
stos
mov
or
orb
mov
inc
mov
jg
jae
sbb
lea
push
ret
push
xchg
push
lock
inc
xchg
inc
jb
mov
nop
dec
mov
jbe
pop
mov
add
xor
xchg
fistl
scas
popf
mov
stos
rorb
xor
pop
sbb
test
xchg
xchg
imul
pop
aas
cmpl
rcll
fildll
push
add
jnp
incb
cmp
fldt
loopne
daa
jg
fwait
dec
in
xor
xor
add
add
xlat
xor
aas
arpl
fcomps
xchg
push
mov
das
add
aaa
xor
repnz
pusha
enter
fsubl
or
divb
add
push
push
dec
or
sarl
stos
add
mov
into
ljmp
insb
mov
push
add
or
loope
pusha
mov
mov
mov
or
mov
js
sbb
lahf
clc
dec
gs
jbe
mov
xor
adc
cld
inc
add
pop
and
add
mov
mov
loop
sbb
push
add
lret
and
dec
incb
add
add
push
or
test
addb
lret
xor
fisubrs
inc
xor
aaa
movsl
add
push
call
insb
mov
or
arpl
bnd
xchg
idiv
into
lret
mov
mov
arpl
neg
in
jno
xchg
fcompp
mov
stos
mov
inc
sbb
int3
sub
int3
shll
into
das
nop
mov
pop
int
sbb
inc
jbe
pop
dec
add
and
sbb
mov
add
mov
ffree
pusha
add
push
xchg
inc
cld
push
adcl
iret
lret
shl
pop
cmpsb
fstpl
xchg
iret
insb
pop
add
adc
stc
loopne
shlb
fiadds
or
fwait
xchg
jmp
decl
adc
pop
rcll
push
sahf
push
xchg
pop
dec
dec
jns
inc
ret
pop
repnz
pop
inc
fmull
fstl
mov
push
das
push
adc
icebp
lds
xchg
jne
lea
xor
movsb
add
dec
nop
xor
out
cmp
push
inc
push
dec
push
arpl
fnstsw
jnp
outsl
mov
lea
cmp
lods
jb
daa
jl
lahf
dec
adc
adc
mov
fstl
lret
fdivrs
and
ss
mov
test
inc
and
sahf
jle
pop
shlb
out
sbb
inc
xor
fs
inc
adc
push
cltd
jmp
inc
sub
xor
out
std
mov
push
jmp
test
inc
repnz
pop
fucompp
jg
jge
mov
clc
and
ret
and
rcr
jne
push
push
test
jmp
popf
test
testb
pusha
sub
sub
adc
push
adc
mov
pop
cltd
sub
or
or
add
xchg
mov
sbb
test
in
sub
inc
and
add
or
sarb
and
ds
dec
mov
ss
or
nop
cmc
or
lcall
pop
pop
loopne
or
mov
push
jmp
shll
dec
xchg
int3
mov
shrl
xchg
repnz
mov
adcb
add
ds
push
loope
or
pop
add
orb
mov
lds
mov
or
add
add
jecxz
inc
shrb
jecxz
mov
and
jo
mov
sbb
adc
push
adc
mov
inc
xor
push
add
in
in
push
xor
xor
int
inc
mov
mov
cmpsb
nop
sub
jbe
push
in
dec
push
cmp
adc
nop
pushf
xchg
inc
shrb
repz
nop
mov
aad
add
mov
xchg
push
pop
adc
and
push
xchg
push
fxch
dec
cmp
and
cs
cmpb
mov
in
fdivs
and
dec
scas
xor
xchg
add
sbb
jmp
adc
cltd
dec
push
fistl
add
mov
mov
add
xchg
lods
cmp
mov
in
mov
stc
or
jmp
mov
sbb
mov
je
test
add
or
add
jne
push
pop
inc
dec
aad
adc
pop
leave
jne
and
fistl
and
adc
movsb
push
and
sbbb
lods
lods
lods
mov
adc
iret
rorl
rcrb
in
push
add
adc
ficompl
pop
mov
pushf
loope
out
out
ds
loop
lcall
add
shll
push
std
movl
adc
mov
adc
or
inc
das
adc
mov
cwtl
je
rolb
orl
sbb
rorb
xor
ret
mov
or
pop
pop
sub
loope
push
not
push
les
and
sbb
stos
mov
out
push
adc
mov
adc
xlat
xor
test
jmp
xchg
sub
in
out
insl
cwtl
add
push
jg
mov
jnp
mov
mov
lods
dec
jne
pop
mov
xchg
lea
pop
or
testb
xor
mov
cld
push
add
inc
les
push
add
mov
data16
adc
and
add
insl
mov
and
add
or
mov
mov
stos
lea
ret
gs
push
in
fstpt
cli
out
or
je
jmp
dec
mov
sub
ret
adc
xor
sbb
add
jo
lret
mov
sub
outsl
mov
divb
cmc
jne
or
xor
dec
sub
idiv
cmp
je
or
es
fs
call
jmp
add
sub
add
les
mov
push
mov
and
mov
fldpi
stos
bound
data16
test
loop
pop
sbb
mov
inc
std
aas
dec
hlt
mov
test
jne
push
adc
cmp
jno
inc
or
inc
dec
shl
inc
lods
test
dec
addl
ficoms
mov
add
adc
or
or
adc
add
jmp
push
stos
sarl
cs
mov
xchg
subb
movsb
cwtl
pop
fnstcw
leave
jne
cmp
adc
js
add
push
cmp
je
cmp
fmull
cmp
or
out
inc
bound
out
xor
daa
or
subb
cmp
push
rclb
daa
lods
mov
jno
mov
jae
xor
adc
rolb
fcmovnb
inc
add
fisubs
ds
add
pusha
lret
jle
xchg
mov
andl
add
pminsw
stc
mov
fs
xchg
adc
inc
fs
jle
jb
fdivrs
cmp
inc
scas
pop
cmp
lea
mov
popl
repnz
push
cmp
cmp
pop
pop
mov
adc
lea
int3
shrb
or
xor
pop
rcll
pop
push
lahf
add
mov
rol
mov
mov
ja
fsubrl
xchg
mov
add
sbb
and
or
mov
les
stos
sbb
fsubl
or
mov
xorb
xor
adc
xor
add
and
out
cmp
push
fwait
js
add
push
or
inc
push
mov
sbb
jp
cld
in
inc
pop
int
fstps
xchg
jmp
outsl
mov
jbe
pop
andb
es
gs
fidivs
push
and
xor
pop
fmull
mov
test
and
sub
in
cmp
inc
xchg
pop
and
out
push
push
pop
mov
adc
lret
nop
dec
ror
inc
jo
push
pop
adcl
jb
xor
mov
mov
out
add
xor
sbb
sbb
and
pop
popf
xor
add
pop
adc
js
gs
cmp
add
outsl
xchg
xchg
je
or
jne
dec
mov
dec
sbb
or
fisubrl
add
sub
fiaddl
movsl
adc
jl
ss
add
inc
cs
je
cmp
movsb
faddl
push
into
fwait
jne
jmp
or
js
and
cmp
and
cld
push
dec
add
push
pop
jle
in
push
insl
inc
or
outsb
inc
jne
sbb
push
idivb
push
mov
push
aas
push
popa
and
cli
or
xchg
adc
jl
adc
fnstenv
add
xor
dec
std
shlb
mulb
mov
or
push
scas
incb
mov
pop
clc
int3
in
mov
sti
loop
insb
dec
and
pop
test
dec
and
jae
or
aas
lea
add
inc
aam
push
test
daa
orl
andl
pop
mov
call
or
mov
xchg
mov
xchg
pusha
gs
mov
js
push
je
lods
sbb
lock
sub
lea
aaa
hlt
mov
push
or
dec
pop
lds
loop
shlb
popf
out
dec
or
pop
ss
add
call
pop
push
int
shl
std
xchg
mov
nop
in
mov
xlat
daa
mov
or
lock
jg
dec
lock
mov
adc
movb
int
sbb
mov
xchg
pop
dec
inc
or
movb
push
cmp
mov
mov
lret
stos
xor
add
push
add
add
mov
push
mov
mov
fnstsw
mov
fistps
push
clc
add
arpl
fbstp
daa
faddl
add
or
aas
cmp
or
dec
aas
js
rorb
and
into
sub
shll
cmc
test
xor
lds
adc
dec
mov
dec
inc
push
dec
imul
mov
fmuls
or
fs
pop
ret
jp
clc
add
xor
jmp
sbb
rcll
scas
and
mov
add
jo
sbb
dec
cmp
cld
repz
mov
orb
jmp
mov
jmp
lea
jno
cmc
push
cmp
roll
loopne
ds
push
aaa
xor
mov
mov
jne
jmp
or
add
or
je
push
add
movl
stos
mov
push
adc
xchg
test
cs
push
and
cmp
aad
xchg
push
cmp
cmp
or
push
dec
xchg
fildll
aad
dec
out
mov
orps
pop
test
not
mov
push
jp
andb
dec
cltd
adc
xor
cmp
jmp
dec
lock
int
cmpsb
mov
jbe
xor
mov
test
js
xlat
and
adc
or
add
not
push
inc
sbb
or
push
dec
inc
add
mov
out
or
inc
adc
std
aas
sub
ss
idivl
xor
lret
dec
cs
repnz
cmp
inc
adc
jl
ds
out
inc
add
enter
fs
inc
or
sar
dec
jmp
dec
xor
incl
mov
mov
add
dec
cmpsl
inc
jp
scas
xor
addb
xchg
mov
mov
xchg
test
push
jmp
cmpb
inc
inc
scas
sbb
add
shlb
mov
pushf
cmp
ljmp
fimuls
adc
dec
add
add
xchg
jb
mov
add
pop
xchg
rcl
pop
and
inc
data16
pop
dec
adc
mov
cmp
cmp
fnstenv
push
nopl
into
jmp
insl
cmp
jg
or
jmp
push
push
sbb
dec
cmp
dec
ss
pop
and
adc
daa
xchg
jmp
dec
and
mov
ret
mov
or
add
mov
adc
jmp
or
inc
dec
add
ljmp
rclb
xchg
xchg
sbb
add
sbb
insl
dec
aas
jbe
sub
inc
adc
sti
xor
lock
jne
loopne
popf
inc
mov
arpl
pop
or
cmp
mov
or
cmpsb
xor
and
stos
outsb
es
or
push
pop
aas
pop
dec
inc
decb
dec
add
jno
dec
stc
push
pop
pop
frstor
stos
or
inc
cmp
lock
inc
push
pusha
pop
clc
lock
movsl
mov
clc
lock
iret
cmpb
sub
aam
outsl
jecxz
xchg
stc
loopne
pop
lds
daa
or
mov
push
in
ljmp
and
pop
cs
lret
xchg
lods
fdivrs
or
sbb
sbb
decl
mov
mov
jle
sub
out
cmp
add
nop
mov
jo
push
push
subb
hlt
sbb
xchg
ret
inc
push
dec
mov
pusha
push
mov
mov
sub
repz
stos
loopne
or
add
ret
pop
adc
lock
cmpsl
mov
push
adc
imul
adc
ja
dec
fcompl
hlt
sub
cmp
adc
mov
sub
mov
js
popf
mov
fsubr
push
mov
insb
stos
push
push
inc
fmull
ror
mov
fs
pusha
daa
sub
jne
push
imul
jmp
adc
outsl
push
repnz
sbb
adc
mov
movsl
or
imul
fstp
aam
pop
movsl
push
imul
orb
mov
aam
jmp
add
push
or
cld
inc
inc
fidivl
add
push
scas
add
push
mov
pop
add
xor
out
jl
pop
imul
xchg
sub
jg
push
cmp
inc
jmp
bound
cmp
into
punpcklwd
add
push
movsb
fisttpl
xor
push
inc
adc
push
cmp
test
xor
pop
in
pop
mov
das
je
dec
sarl
or
mov
icebp
xor
icebp
xor
cwtl
sahf
adc
or
and
cmp
sub
adc
jo
mov
and
add
sbb
mov
or
xor
xchg
clc
sub
ljmp
jb
das
call
out
push
dec
adc
push
and
lods
jl
lahf
out
push
dec
and
push
jg
outsl
inc
or
jl
idiv
jbe
jle
xor
jg
jg
mov
jg
lea
sbb
stos
jne
lock
in
push
pop
ffreep
lea
lea
inc
out
add
xchg
mov
inc
and
mov
xor
shlb
add
fs
cmp
or
pop
sti
lahf
or
ret
mov
lret
ret
pusha
das
movhps
dec
and
add
out
mov
mov
sbbb
xchg
mov
mov
hlt
pop
mov
lods
mov
jnp
jns
push
add
push
and
mov
xor
push
sbb
aaa
and
cmpps
jge
inc
stc
and
pop
inc
mov
ret
mov
fmuls
out
shl
or
jl
sbb
pusha
or
insb
iret
dec
ret
in
jl
js
mov
into
pop
push
cmc
cmp
sahf
stos
mov
nop
dec
add
sti
dec
sbb
and
jecxz
mov
ja
cmp
aas
out
insb
daa
rcll
mov
es
repnz
sbb
and
sti
subb
and
adc
lea
pop
adc
add
inc
mov
pushl
call
cmp
or
or
rcl
mov
pop
ja
dec
or
loopne
addr16
pop
mov
icebp
inc
mov
bound
inc
push
test
xor
xchg
adc
dec
test
push
repnz
pusha
adc
std
cmp
or
and
or
sub
sbb
cmp
and
push
add
lea
lea
push
mov
cmpsb
or
or
push
jbe
sub
jl
cmp
mov
mov
fs
in
add
add
mov
or
ds
add
mov
cmp
fiadds
loopne
fstpt
imul
icebp
mov
sarl
adc
mov
mov
cmpl
test
mov
jno
push
xor
sbb
pop
loop
mov
adc
jb
ret
add
pop
push
and
sbb
push
inc
cmp
loope,pt
shrl
out
push
push
push
ret
sub
popa
xchg
or
ror
adc
cmpsb
add
or
test
sbb
sbb
or
pusha
xor
add
stos
xchg
orl
xchg
cmp
pop
and
mov
and
pop
jno
mov
add
push
pop
arpl
or
ds
test
add
add
add
xor
mov
pop
inc
pop
dec
pop
bound
outsl
daa
rcl
jecxz
or
andl
out
data16
es
pop
pop
je
pusha
xchg
mov
imul
testb
ds
push
loopne
call
inc
in
push
mov
sbb
outsb
test
adcl
mov
dec
aam
sbb
test
jl
adc
adc
out
rol
sbb
xor
jne
gs
es
xor
adc
cmp
sub
loopne
cmp
popa
jg
xchg
je
into
lods
push
lods
ret
inc
jge
adcb
add
subl
cs
push
lea
lock
inc
mov
test
das
insb
push
flds
adc
hlt
push
push
das
or
movsb
hlt
sbb
sbb
test
push
fs
inc
fsubr
sub
adc
in
test
popf
pushl
and
mov
icebp
sub
xor
das
sbbl
cmp
add
mov
or
or
fs
adc
xlat
pop
inc
mov
mov
push
push
nop
dec
imul
cwtl
or
shll
pushf
mov
cmp
sarl
and
jecxz
and
mov
cmp
orb
sti
add
inc
jmp
push
mov
cs
cmpsb
lods
mov
adc
ja
or
pop
dec
test
and
dec
add
dec
nop
int3
dec
scas
mov
pusha
pop
test
cmp
lock
nop
leave
in
je
push
or
jl
mov
stos
into
incb
rolb
jb
adc
jmp
mov
stos
popf
sub
add
scas
inc
and
push
cmp
cmp
outsl
and
inc
jle
sub
cmp
xchg
test
and
or
bound
aad
cmp
retw
xor
jnp
jo
xor
imull
loop
sbb
adc
sbb
mov
fldt
mov
clc
loopne
shll
jle
idivl
mov
dec
jbe
nop
add
jne
jmp
negl
imul
sbb
mov
cmp
and
mov
xchg
rclb
cmc
fisttpl
leave
pop
push
sub
and
cmp
cmpb
dec
cwtl
mov
mov
adc
sub
cmp
or
pop
inc
mov
lods
sub
mov
and
loopne
je
mov
mov
jge
movsb
nop
mov
mov
movsb
aaa
sbb
cmp
pop
testl
testl
sbb
inc
jmp
je
dec
or
jge
add
clc
cmp
repnz
push
decl
stc
push
adc
jg
cmc
jecxz
ds
inc
jmp
cmp
xor
sbb
sub
dec
mov
dec
mov
cmpsl
test
sti
ljmp
cmp
mov
cwtl
jge
add
mov
pop
push
sbb
out
mov
mov
mov
dec
sub
insb
rol
mov
jbe
push
lahf
dec
call
and
sub
xchg
xor
jne
fsub
adc
and
lods
pop
add
add
call
push
push
loopne
insb
add
pushf
imul
inc
xor
mov
jb
or
or
mov
imul
into
jbe
dec
andb
mov
clc
or
xchg
les
ljmp
and
and
pop
mov
nop
inc
and
xlat
jae
mov
pop
mov
push
push
fstl
mov
mov
pop
lods
xchg
ja
movsb
adcl
nop
scas
inc
lods
lock
dec
fsubrl
int
decl
jp
jne
aam
jle
inc
or
cmp
or
mov
dec
or
pop
dec
xchg
nop
mov
test
lock
and
add
or
insl
mov
push
lea
lcall
add
aas
les
mov
add
bnd
push
pop
add
ret
lock
shlb
pop
cmpl
insl
mov
add
pushf
sub
clc
sbb
sti
jg
mov
es
aaa
adc
popa
sbb
sub
mov
shll
shr
mov
loop
lock
fcoms
ret
lahf
and
pop
mov
dec
inc
and
jns
mov
stos
push
pop
add
add
idivb
add
sahf
push
shrl
popa
pop
sti
inc
loopne
shr
or
mov
sahf
dec
mov
subb
jne
outsb
mov
mov
aam
sub
push
push
pop
mov
inc
pop
add
lock
rcr
ja
or
fiaddl
mov
and
lock
insl
adc
or
or
fisubrl
adc
js
mov
bound
movsl
scas
mov
loope
jl
dec
call
int3
jmp
lods
or
sbb
shll
mov
sub
push
dec
into
jmp
lods
cmp
ds
mov
dec
and
or
int3
and
adc
pop
pop
jne
push
lret
das
sub
test
sbb
in
sbb
movups
or
jo
mov
inc
mov
psubsw
fcoml
dec
sarb
sahf
cmpsl
std
aad
inc
add
push
push
jb
call
iret
shll
arpl
into
cltd
notl
sbbb
mov
sbb
add
testb
js
and
mov
push
push
add
addr16
sub
lods
lods
mov
pop
add
inc
jl
and
pop
add
leave
shlb
sub
pop
dec
push
das
jl
and
push
cmp
pop
in
mov
sbb
adc
or
test
jne
and
sub
fimull
pop
lahf
std
insb
aad
add
push
or
fnstenv
dec
call
stos
ret
inc
add
xor
iret
repz
inc
or
inc
sub
push
out
cmp
fcmovbe
mov
pop
imulb
es
sbb
or
mov
rclb
xchg
jg
lea
push
lcall
sbbb
push
mov
adc
divl
mov
lahf
call
in
movsb
inc
sbb
aas
jne
ret
dec
pop
loop
pusha
pop
je
fstl
pop
inc
dec
add
inc
adc
and
push
sub
out
inc
push
xchg
jle
inc
jo
mov
ror
aaa
sqrtps
testb
pop
jae
or
xor
mov
push
xor
fcomp
stos
fistl
sub
mov
xorb
inc
cli
pop
pop
or
sub
ja
flds
bound
add
cli
shr
les
xor
add
mov
adc
push
or
sbb
insl
cmpsb
inc
lods
mov
inc
lret
lock
jne
sbb
xchg
mov
shr
addr16
push
ficomps
push
adc
mov
jge
jne
lea
and
xchg
in
and
or
test
cmp
fwait
loopne
mov
pop
add
sub
mov
iret
shrb
loope
stc
mov
arpl
test
jns
xor
push
sbb
adcl
jle
and
loopne
sbb
jmp
gs
mov
xchg
adc
push
in
dec
mov
in
xor
adc
or
mov
insb
into
enter
cmp
sbb
xchg
push
lea
cld
das
mov
cmp
leave
sar
or
cmp
mov
add
or
ror
jae
mov
mov
cmp
xchg
subps
add
xor
mov
sbb
and
dec
pop
ret
shrb
cltd
insb
xlat
and
es
mov
lods
add
inc
dec
mov
cmpsl
mov
aam
pusha
jo
inc
aad
icebp
cmpb
push
push
push
add
mov
popf
and
jns
push
sub
xor
jle
xchg
ficomps
mov
nop
stos
addr16
lock
hlt
or
or
fs
js
fadds
sti
jg
rcll
push
hlt
mov
andl
sbb
jle
and
dec
data16
or
lea
and
out
jbe
jo
lret
add
cld
cmp
fsubs
and
dec
sbb
and
loopne
add
adc
sbb
dec
sub
bound
outsb
pop
les
dec
hlt
loopne
or
push
lea
adc
mov
test
ret
std
scas
cmp
push
push
cs
xor
fisubrl
pop
xchg
je
dec
or
sarl
fs
add
mov
ja
mov
cwtl
mulb
mov
add
test
adc
add
call
sbb
xor
clc
add
mov
test
icebp
rol
and
add
imul
daa
sub
jne
push
icebp
and
add
je
xchg
cmp
sbb
pop
sbb
or
inc
sub
fisttps
cmp
dec
dec
mov
mov
inc
dec
lock
mov
sbb
dec
icebp
insb
mov
push
mov
fdivl
mov
mov
std
xchg
lret
xor
sub
out
jl
fs
xor
jae
mov
sub
cli
or
shufps
add
adc
and
adc
lock
adc
rolb
dec
jecxz
jae
dec
add
sub
daa
ret
sub
rolb
pushl
push
and
movsl
pop
mov
jae
in
pop
lock
jns
adc
fiadds
into
fisubl
sbb
mov
pop
data16
adc
xchg
sub
or
insb
sub
mov
dec
push
test
popa
add
mov
pop
loopne
push
movsl
jne
lea
sub
inc
mov
add
shlb
test
movsl
lods
scas
add
push
dec
cmp
lock
inc
sbb
and
push
inc
test
adcl
mov
mov
push
mov
xor
add
push
jo
lret
jmp
pop
pop
mov
pop
mov
movl
stos
and
xchg
aas
push
jae
adc
movsb
mov
adc
ja
xchg
add
lcall
jne
adc
sub
pop
adc
mov
fimuls
shrl
cmp
cmp
je
xor
dec
inc
and
sbb
js
in
sbb
jmp
and
push
and
lahf
mov
dec
pushf
add
call
push
test
test
andb
xorb
adc
or
inc
push
inc
rorb
pop
sbb
jmp
sbb
xor
int3
ret
test
rcll
lds
jb
xchg
out
or
les
or
push
pop
mov
push
push
loope
inc
add
sbb
stos
aas
lea
push
jo
push
push
sub
pop
mov
inc
imul
and
pushf
push
or
pop
clc
pop
xor
mov
and
cmp
cmc
imul
mov
push
adcb
loop
sahf
leave
pop
rorb
pop
xor
ret
addb
lea
cmp
loopne
inc
mov
rorl
mov
jmp
test
push
std
je
scas
movsb
in
enter
jl
jo
and
add
js
jmp
sbb
jb
sub
push
mov
pop
adc
or
test
das
dec
mov
sub
popl
add
fs
adc
adc
lock
push
leave
jo
push
outsl
dec
and
sub
or
sbb
es
and
dec
jae
and
movl
aaa
lea
idivl
mov
add
add
add
pop
sbb
xchg
ret
xor
popf
pop
pop
clc
out
pop
mov
cmp
sub
xor
fcoms
jbe
mov
test
stc
sbb
loopne
jb
sub
and
push
jmp
cltd
xchg
shll
or
mov
dec
les
adc
mov
adc
cmp
xchg
sbb
jno
rol
or
and
rcrl
mov
andl
mov
movsb
mov
cli
mov
daa
or
sbb
jle
cltd
and
cs
cmp
push
pop
cltd
mov
push
jne
push
notl
cmpsb
aas
out
int
xor
pop
jb
mov
aaa
jp
push
pusha
xchg
in
punpckhdq
inc
andl
xor
fwait
or
mov
jmp
mov
push
push
std
mov
mov
adc
adc
ret
xchg
push
pcmpeqw
mov
or
aas
push
or
cmp
test
jb
or
cmp
cltd
dec
mov
adc
negl
inc
adc
in
mov
pop
mov
ds
push
mov
cmp
dec
push
das
or
push
push
icebp
imul
add
dec
add
sbb
in
imul
dec
or
cmp
mov
xchg
fcmovnu
inc
sbb
cmp
mov
dec
cmpb
pop
sub
int3
pop
sbb
jns
or
jne
mov
xchg
push
xor
inc
mov
das
movsl
aad
mov
mov
pop
lret
and
ficompl
mov
out
jb
pcmpeqb
and
dec
je
sti
lds
mov
jo
xchg
out
push
mov
mov
jae
dec
push
jno
or
cmpb
inc
aad
sbb
pop
sub
push
in
xchg
xchg
roll
cld
cwtl
popa
cwtl
imul
mov
sbb
dec
pusha
fiaddl
call
jne
sbb
inc
mov
imul
sbb
or
adc
fsubr
fstp
test
icebp
push
mov
pop
xchg
push
cmp
jmp
cwtl
sbbb
cmp
push
add
sub
push
daa
push
movl
push
gs
dec
int3
jmp
sub
adc
sbb
roll
test
xor
sub
mov
sbb
addl
test
jno
and
mov
lcall
push
xor
lods
adc
xchg
stc
jb
push
fsts
stos
sbb
cmpsb
shrb
call
fstpl
push
xor
xchg
test
ja
or
sti
or
add
nop
jo
adc
pop
push
xor
test
sbb
xor
push
add
inc
and
add
push
dec
sbb
and
and
push
mov
add
shl
pop
xor
es
jmp
dec
into
lock
cmovno
decb
adc
jne
push
aad
int
rcl
pop
shlb
subl
or
xchg
into
pop
imull
xor
aam
nop
lret
and
mov
pop
or
push
das
mov
push
pushf
or
jbe
pop
cmp
push
je
and
inc
jp
clc
and
cmc
push
lcall
es
pop
push
mov
ret
sahf
imulb
add
dec
or
pusha
pop
mov
mov
mov
push
jp
ja
fdivs
psubusb
addl
ret
daa
cmp
mov
or
sub
in
lea
mov
mov
pop
lret
push
inc
xor
mov
stos
out
shr
nop
and
or
stos
pop
std
lcall
and
mov
push
cltd
jecxz
stos
or
adc
ljmp
sbb
sbb
adc
mov
cld
dec
jg
outsb
ljmp
jg
xor
aam
sub
popa
mov
dec
jno
or
push
in
mov
push
and
inc
fstps
fsts
cmp
cmc
push
push
jae
dec
xor
cwtl
sub
data16
push
mov
arpl
cmp
imul
cmp
ss
in
and
sub
loopne
in
xor
cmp
inc
and
inc
bswap
leave
leave
leave
dec
dec
push
push
jb
jb
pop
add
jb
jb
insb
jo
sbbb
jb
jl
es
mov
cltd
fs
mov
xchg
dec
pushf
mov
es
shlb
and
enter
cltd
pusha
sarb
leave
and
loopne
xor
and
call
xchg
dec
lock
clc
xchg
inc
dec
xor
add
add
fiaddl
or
gs
adc
adc
sbb
dec
xor
and
sub
xor
and
xor
dec
shll
inc
gs
cltd
jbe
xchg
dec
dec
mov
xchg
dec
es
pop
pop
adc
daa
cltd
pusha
sbb
or
je
cli
add
jl
add
je
dec
xor
or
mov
mov
xor
sbb
lcall
and
adc
sbb
mov
and
and
rorb
cmp
lods
dec
dec
xor
inc
mov
test
shlb
int
mov
sti
enter
pop
notl
mov
sub
and
add
ret
aas
es
or
inc
or
add
xchg
lcall
sub
dec
insl
in
ret
add
or
aas
adc
jg
adc
leave
jmp
testl
mov
jo
pushf
ss
or
or
inc
adc
sahf
xchg
mov
push
ja
push
movsb
lds
test
sbb
jno
fsubl
inc
inc
mov
leave
mov
adc
add
pop
and
roll
lret
je
popa
xor
gs
mov
imul
loopne
push
sti
jbe
ret
cwtl
aaa
adc
sbb
shl
jp
xor
or
out
or
or
add
loope
push
or
movsl
insl
add
adc
add
aam
pop
xor
arpl
mov
pusha
js
push
ret
lea
or
adc
push
or
sub
xchg
mov
mov
and
pop
notb
in
test
and
inc
cs
mov
and
arpl
mov
jbe
shl
shll
dec
xor
adc
or
add
and
shr
add
and
pop
shr
and
aas
fsubl
lret
and
in
test
add
and
ret
scas
pop
adc
or
cmp
add
test
xlat
bound
jo
shll
and
push
nop
sub
dec
das
call
mov
or
adc
lock
and
mov
outsb
jg
in
and
aaa
jecxz
sbb
add
fsubrl
jmp
xchg
jmp
adc
mov
gs
and
insb
call
cmp
aaa
jge
mov
lea
push
loope
flds
mov
pop
adc
pusha
mov
pusha
loope
pop
sub
xor
or
movsb
sub
fnstsw
pusha
inc
jne
push
pusha
fldl
cmp
std
dec
shlb
xchg
imul
cmovb
inc
or
je
adc
sti
ja
test
out
test
stos
sub
add
dec
inc
sar
repz
das
mov
or
sub
push
and
dec
push
or
or
cmp
and
addb
or
pop
jecxz
xor
sbb
jmp
push
and
or
cmp
adc
imulb
flds
fstps
jmp
fisttpll
scas
mov
xor
cmp
adc
mov
lods
data16
pop
sub
dec
push
ds
inc
cmp
loopne
xchg
adc
xor
test
jb
add
daa
xor
inc
bound
enter
push
aaa
sbb
pop
pop
into
inc
ja
rolb
in
dec
pop
push
dec
jmp
sub
cmp
mov
sub
jmp
sub
push
jbe
lcall
inc
lcall
add
adc
mov
scas
cltd
loop
cltd
pop
fidivl
fs
mov
pop
sarl
inc
fisubrl
shrl
subb
fstpl
idiv
xchg
push
adc
stc
push
jge
insb
sub
repz
mov
mov
in
loopne
mov
enter
cli
repnz
or
pop
sbbb
mov
stos
add
xchg
adc
shrl
mov
inc
inc
jnp
sbbb
loopne
or
jle
push
pop
jmp
pop
add
pop
inc
fsubrl
icebp
add
enter
lcall
cmpsb
mov
or
sub
pop
push
pop
movsl
jno
jb
shll
cmp
adc
jg
sti
in
jnp
mov
mov
lret
pop
fsub
add
ret
repnz
aam
push
icebp
fcmovnb
ljmpw
add
mov
xor
dec
cmp
je
cmp
push
push
pop
lcall
adc
sbb
movsl
jo
cld
sbb
hlt
adc
inc
add
or
and
aam
shll
pushf
sub
cmpsl
and
sbb
and
idiv
test
mov
jmp
jno
mov
addl
fucom
push
add
aad
push
fnsave
into
push
pop
or
jnp
adc
push
jo
push
ret
insl
inc
and
scas
adc
mov
pop
insl
push
mov
ret
outsb
lret
sarb
sbbl
jp
lods
pushl
inc
push
mov
in
or
mov
fs
push
das
adc
out
add
lock
int3
mov
sbb
out
pop
nop
mov
xor
or
fnstsw
add
rcrl
mov
sub
add
ja
pop
andl
mov
iret
dec
mov
or
into
sbb
ret
pop
iret
gs
sahf
sub
add
jecxz
bound
jp
or
mov
popl
jecxz
enter
or
imul
insb
add
mov
mov
and
pop
jo
add
in
xor
mov
dec
pushf
and
bound
aaa
or
je
enter
fld
gs
xlat
fucomp
pop
pop
out
fstpt
out
push
xor
test
cmpsl
push
dec
in
dec
pop
and
mov
sub
mov
int3
adc
gs
or
fwait
cmpsb
in
and
or
push
out
push
ljmp
jne
pop
or
jo
jnp
ret
or
push
and
mov
jmp
sbb
sub
adc
inc
push
push
push
jp
xlat
leave
jb
pusha
dec
ljmp
adc
fstsw
lsl
ret
cld
lret
sbb
loop
fwait
sub
mov
js
sub
sub
not
dec
xor
cmpl
mov
add
inc
or
sub
and
cld
inc
fwait
test
fsubs
inc
mov
out
outsb
fwait
sbb
add
and
or
repnz
sbb
add
lods
movsb
fldpi
xor
cwtl
enter
sbb
jmp
add
inc
je
sbb
xorb
mov
xsaveopt
jecxz
xor
test
add
mov
or
andl
in
aam
pop
pop
jmp
and
xlat
push
and
and
cwtl
imul
imul
add
enter
or
mov
cli
and
and
aas
lock
add
push
mov
js
test
daa
xor
js
test
ret
adc
add
fisubrl
test
stos
je
call
pop
nop
push
add
out
adc
in
or
pop
dec
or
pop
sub
push
push
and
inc
fdivr
jg
int3
inc
fdivrs
dec
or
inc
lea
pop
fsubl
ss
inc
shll
sahf
push
ret
call
loop
rolb
cmpl
cld
shrb
shll
sti
pop
pop
and
mov
out
mov
inc
adc
ss
mov
iret
les
dec
mov
mov
loopne
cmp
jb
cmp
sbb
sub
dec
push
hlt
cmp
mov
jae
xor
lods
pop
sbb
inc
shlb
mov
mov
shl
xor
or
ja,pt
sbb
jge
lea
dec
pop
and
mov
ret
je
inc
mov
pop
outsb
call
or
test
testb
jp
aam
dec
xor
pop
addl
cmp
das
mov
push
loopne
mov
shl
sub
test
push
fdiv
xchg
loopne
pop
popf
sahf
or
mov
ds
lock
es
push
or
jne
shl
xor
mov
test
shll
shl
xchg
loopne,pn
sub
lods
sbb
test
xor
or
sub
jmp
lea
mov
movsb
bound
faddl
jge
or
sbb
test
or
dec
inc
push
or
adcl
loopne
loopne
rcrl
xor
xchg
cli
cs
or
mov
lods
fsubr
pop
pop
push
pop
inc
shrb
push
jb
push
repnz
decb
fidivl
mov
dec
jns
cmp
push
sbb
cmc
adc
fs
loopne
rorb
mov
loopne
dec
mov
movsb
addr16
xchg
cli
sahf
das
cmp
aam
orb
or
shll
add
popa
mov
push
dec
add
jne
push
rorl
andl
movsb
ror
out
dec
je
sub
jl
stos
iret
and
mov
lea
jecxz
or
sub
mov
in
xchg
jge
rorl
cwtl
dec
cmp
inc
sti
lods
shl
test
ljmp
and
pop
lock
int3
roll
pop
push
xchg
scas
lret
jne
and
adc
mov
cs
push
test
xor
cmp
xchg
xor
cli
pop
adc
adc
push
subb
les
in
inc
cmp
and
je
inc
mov
cmp
push
and
push
jp
or
pop
or
mov
mov
test
pop
jne
cmp
movsl
sbb
jb
test
inc
dec
mov
data16
lods
jge
inc
mov
mov
rorl
test
mov
or
stos
adc
lcall
adc
lret
jnp
insb
inc
cs
or
ss
cmp
je
adc
aas
lods
or
out
mov
dec
cmpb
je
mov
sti
decl
jne
dec
mov
inc
inc
mov
int
inc
lock
mov
call
xlat
add
sti
lcall
outsb
call
inc
dec
and
sbb
jmp
xor
loop
jbe
icebp
cmpsl
xor
add
popl
cmpsl
das
mov
mov
pop
aaa
adc
push
add
movsl
pop
fcmovu
adc
jno
movsl
mov
and
fwait
jmp
orl
jne
popf
fists
inc
loope
inc
jo
or
add
test
adc
push
pop
sbb
jge
or
dec
vpmacsswd
cmp
mov
loopne
mov
adc
adc
cmpl
mov
rolb
lea
cmp
cli
xor
sub
pop
lods
cld
mov
inc
or
pop
movsl
scas
mov
add
lods
out
xor
push
jp
jmp
sub
or
lods
add
xchg
dec
fwait
pop
mov
inc
mov
push
adcb
mov
push
sarb
neg
movb
sbb
cltd
push
mov
sbbb
or
clc
xor
data16
add
out
add
sub
push
xor
xor
push
pop
cmp
xor
push
push
add
mov
add
adc
inc
mov
or
clc
and
sbb
mov
or
xchg
jge
xchg
sub
adc
mov
xchg
push
push
push
adc
shlb
enter
cltd
cmp
pop
jae
sub
mov
mov
push
jmp
arpl
das
stc
mov
mov
loope
push
fadd
ss
and
xor
push
dec
pop
into
jge
mov
and
pop
in
adc
xchg
pop
les
jns
xor
mov
enter
add
xchg
add
adc
xchg
push
and
sub
adc
mulb
xor
mov
loopne
imul
or
pushf
paddusb
or
add
jno
pop
xor
cmp
adc
sub
lock
test
enter
js
aad
add
subb
push
insl
sbb
loope
adc
sub
leave
and
ror
mov
add
insb
movb
add
inc
or
je
fnstsw
inc
or
popf
neg
sbb
mov
and
jecxz
adc
jg
push
pop
mov
shll
push
adc
add
xor
xor
sarl
sub
add
adc
in
sub
inc
xor
nop
push
divb
mov
or
rorb
xor
push
mov
lea
jle
or
inc
xorb
push
and
adc
mov
and
mov
sbb
rcrb
cmovle
pop
fadds
mov
lods
push
xor
adc
jb
insl
cld
rorb
hlt
shrd
sbb
mov
cltd
add
or
sbb
clc
cwtl
xor
leave
or
cld
xlat
mov
inc
and
xor
out
xchg
mov
cltd
jp
sub
inc
xchg
nop
cmp
je
test
inc
inc
or
pop
push
jecxz
pop
adc
jl
andl
cwtl
lock
call
in
and
imul
sbb
js
jg
icebp
pop
sub
jb
xor
pop
out
cs
adc
fimull
mov
and
push
hlt
cmp
sbb
add
int3
push
in
lock
mov
sarb
add
outsl
in
or
dec
dec
inc
dec
imul
pop
or
or
into
sub
cmp
das
pop
shll
cmp
ja
sahf
sub
add
xchg
sub
ret
cmp
add
sub
or
movl
jp
fiaddl
lcall
add
jnp
sbb
push
sbb
mov
test
push
lock
sahf
fwait
adc
gs
neg
mov
enter
or
or
mov
aaa
push
lods
pop
mov
add
push
mov
test
push
dec
mov
push
add
js
repnz
je
aad
sub
cmpsl
sub
add
roll
sub
mov
es
sbb
stc
cmp
push
sti
mov
xchg
and
pop
sbbb
jne
push
cmp
das
inc
nop
cmp
shl
inc
dec
sub
pop
sub
jb
stc
idivl
lods
rorl
mov
ljmp
or
out
mov
cld
jl
loopne
jge
inc
or
or
and
inc
decb
add
je
sbb
mov
push
pop
ds
fnstenv
mov
and
or
pop
data16
mov
fwait
fwait
repnz
sbb
push
inc
je
stc
add
dec
xor
xor
ret
sub
pop
mov
sbb
popf
insb
sub
sbb
sub
push
add
cmp
stos
adcb
ss
lock
arpl
cmp
push
pop
add
xor
pushf
pusha
lea
popa
mov
cmp
add
push
imul
cmpb
mov
cmp
fdiv
jp
add
movzbl
xchg
rorl
sub
mov
icebp
dec
jmp
mov
add
sub
pop
push
scas
inc
fstl
sub
cmp
cmpb
negl
inc
add
std
or
test
or
int3
dec
sub
sub
push
or
dec
fdivrl
inc
jmp
adc
xorb
jg
push
les
test
inc
pop
test
xor
popa
xchg
lahf
dec
in
dec
sbb
mov
xor
lahf
xor
push
push
and
inc
lret
inc
cmp
popf
stos
mov
test
and
push
push
xor
dec
push
ljmp
mov
add
sub
push
cmp
sub
ret
or
mov
cmc
push
dec
cs
inc
mov
sbb
adc
mov
bound
mov
mov
cmpl
addb
or
push
subl
push
lret
push
mov
or
mov
dec
dec
loopne
mov
imul
pop
lret
adc
cs
daa
dec
imul
pop
adc
cmp
movsb
jae
mov
movsb
fwait
and
and
pop
push
jge
or
pop
mov
enter
negb
sub
je
dec
je
dec
adcb
jmp
or
jmp
lahf
mov
sahf
pop
addl
pushl
or
add
sub
rolb
sub
sbb
add
aad
daa
sbb
cmp
sahf
or
out
cmc
or
daa
add
aam
adc
daa
add
sbb
lock
push
push
sbb
je
add
cmpsl
dec
add
pop
cmp
sbb
mov
mov
or
mov
pop
pop
popf
int3
inc
mov
mov
jbe
or
call
sub
adc
mov
cmpsl
adcb
enter
fiaddl
mov
inc
sub
sub
xor
mov
movsl
xchg
inc
nop
mov
pop
mov
movb
sbbl
fmuls
sarl
mov
mov
pop
dec
adc
and
sbb
add
xchg
enter
call
add
call
dec
std
pop
out
sbb
lret
dec
popf
or
repz
jg
mov
out
pop
add
or
push
add
shr
or
insb
push
adc
test
and
add
push
outsb
loope
mov
test
or
add
jb
add
mov
add
adc
cmp
jecxz
mov
lods
inc
jbe
add
jl
in
sbb
cmp
xchg
mov
pop
dec
leave
inc
inc
addl
mov
and
inc
fisttpl
cmp
lds
adc
bound
xor
or
jbe
mov
dec
clc
xorb
lcall
stc
rolb
dec
shlb
mov
inc
nop
mov
add
fs
and
add
mov
js
inc
or
jo
sub
sbb
and
pusha
sub
adc
pop
add
cmpsb
dec
movsb
fsubrl
cmp
faddl
adc
xchg
popf
divb
mov
sbb
int
test
add
inc
and
pop
je
mov
out
data16
mov
lret
adc
outsb
adc
xor
mov
sbb
adcb
repz
sbb
je
push
leave
loope
xchg
nop
sub
fwait
push
test
in
nop
xor
pusha
je
jns
lea
repnz
xchg
pop
or
jmp
jno
nop
addl
lret
pop
lret
xchg
insb
in
test
dec
jo
cmp
orl
xor
out
xchg
inc
cmp
insb
test
add
mov
add
decl
insl
ljmp
adc
jo
mov
stos
mov
pusha
sbbb
sub
roll
adc
sarb
push
mov
sbb
add
push
cmpb
or
inc
xor
jle
in
and
ds
mov
clc
pop
dec
lea
lahf
add
mov
aad
repnz
loop
xlat
jno
cwtl
out
add
add
pop
hlt
xor
les
inc
mov
sub
out
add
or
xchg
inc
mov
xor
fsubs
sbb
add
in
sub
push
add
mov
cmp
cmp
lock
mov
sbb
add
call
ss
imul
push
inc
adc
push
jp
inc
stos
lds
call
lock
out
dec
lcall
mov
cmp
jle
inc
call
ja
shlb
xchg
pop
mov
jge
inc
sbb
mov
fwait
inc
xor
fucomi
scas
gs
adc
movsl
jmp
jl
ss
cmpb
je
ss
mov
xor
inc
aam
push
or
xor
aad
or
pop
mov
push
insb
jmp
cmpb
lahf
push
andl
push
ljmp
or
sti
mov
inc
cmp
cld
shlb
loop
ljmp
jmp
mov
jne
cmp
adc
sbb
jmp
dec
add
mov
or
mov
shl
or
or
mov
fcompl
xor
clc
scas
xor
add
add
nop
imul
or
stos
adc
adc
je
insl
or
hlt
cmp
rolb
inc
div
and
adc
jne
std
mov
movsl
xor
add
add
push
lcall
xchg
pushf
push
je
lock
sbb
loopne
popa
hlt
cmp
js
or
andl
in
lret
jge
loopne
jecxz
inc
inc
push
neg
neg
sbb
sub
sbb
sbb
inc
sbb
out
lock
loope
xor
pop
gs
push
push
inc
and
fsts
adc
inc
push
test
sbb
and
and
mov
dec
jns
popa
xchg
or
dec
jne
xchg
lea
jecxz
pop
pop
mov
sub
insl
int3
jae
or
jae
lods
rcl
ljmp
dec
and
shr
sub
adc
lcall
enter
je
neg
cld
lock
je
inc
das
push
pop
xchg
add
and
sub
inc
sbb
mov
inc
orb
mov
pop
sbb
or
adc
hlt
imul
add
ja
hlt
das
push
or
aad
int
into
jbe
jne
inc
aas
aas
pushf
xor
movsl
das
hlt
adc
aas
or
push
aam
stos
and
push
repz
pop
shl
dec
dec
mov
add
cmpl
or
mov
adc
jne
popf
mov
adc
push
cmovb
add
pushl
ror
cs
pop
inc
add
andl
jnp
adc
aaa
dec
sub
cmpsb
in
or
jnp
mov
jns
cmp
jp
cld
mov
pop
cmp
jne
pop
popf
scas
adc
lock
add
fcom
add
adc
ret
or
inc
xchg
lea
mov
xchg
mov
inc
adc
icebp
pop
adc
pop
je
xor
jg
dec
and
jb
cmp
ja
add
cmp
adc
cmp
jne
inc
shll
leave
call
outsb
mov
sbb
mov
je
mov
adc
iret
and
jb
ljmp
and
xor
add
cmp
xchg
aam
sti
aas
into
cmpsb
hlt
push
pop
push
movb
jmp
or
test
inc
push
clc
aaa
sahf
and
adc
iret
cmp
push
adc
push
ret
xchg
mov
adc
xor
pusha
movw
jb
sbb
push
fldl2e
pop
xchg
sbb
out
cwtl
xchg
es
mov
dec
test
sub
jp
mov
cwtl
cmp
dec
and
or
inc
xlat
push
pop
cld
stc
inc
jb
popf
rcll
jae
xchg
and
hlt
push
andl
push
sbb
push
add
es
push
pushf
mov
sarb
dec
add
sbb
jmp
mov
imul
lea
sar
call
mov
insb
pop
fimull
mov
push
jnp
cmpsb
cmpsb
es
ljmp
cwtl
fiadds
mov
ret
andb
inc
call
or
mov
sti
inc
shrb
fsub
pop
and
adc
jbe
push
sbb
adcl
adc
mov
sbb
or
dec
jle
repnz
insl
mov
push
adc
mov
shl
outsl
or
and
lea
inc
pop
and
mov
cmpsl
add
pop
lcall
decb
xchg
test
nop
nop
ja
jge
and
loopne
dec
push
sahf
xchg
iret
insb
sub
inc
call
testl
inc
sub
cmc
mov
or
inc
mov
clc
lods
inc
mov
jne
lea
rolb
lods
xor
fcmovnbe
stos
push
inc
mov
push
lea
sub
xchg
push
test
push
insl
jo
or
insl
sub
movsb
imul
cmp
lods
shll
in
sub
pop
out
data16
mov
mov
or
aaa
dec
imul
lea
pop
adc
push
jo
adc
clc
shll
jo
out
adc
shll
mov
add
or
aas
enter
cmp
rorb
int
jge
sbb
push
lret
push
shrl
mov
or
cmp
pusha
mov
cwtl
out
insl
test
in
lahf
lods
sti
pop
shr
or
mov
dec
mov
int3
insb
sub
filds
ja
dec
and
sbb
repnz
jns
testb
dec
cli
cli
inc
cli
or
sub
int
mov
inc
cmp
fsubs
loopne
cmp
test
bound
adc
outsb
xchg
lahf
add
scas
xchg
mov
dec
mov
mov
push
fidivl
fldenv
enter
fsubs
jecxz
mov
insb
movsl
jmp
mov
dec
xlat
mov
xor
push
mov
dec
iret
xchg
and
popa
add
push
test
cmpsb
imul
loop
ret
push
xchg
mov
sahf
jge
mov
test
das
xchg
push
cmc
xor
daa
cmp
add
push
or
push
adc
jne
fdivrs
pop
xchg
add
jbe
sbb
dec
sub
sbb
add
push
mov
add
test
adc
ret
hlt
push
add
sbb
xchg
lret
fcmovu
mov
ret
das
insl
test
sub
cli
mov
sbb
add
add
add
into
clc
adc
xor
adc
jg
or
xchg
mov
lock
jge
or
dec
add
enter
and
jge
lock
or
cmp
jne
jne
inc
sub
add
inc
jmp
dec
push
mov
pusha
add
sub
xor
sbb
mov
sbb
add
inc
mov
dec
movb
adc
fisubrl
xor
and
or
pop
cmp
sbb
ss
pusha
xchg
push
repnz
adc
mov
pop
inc
rcrl
lcall
and
pushf
jle
inc
imul
sub
imul
call
push
jecxz
loopne
fdivrs
pop
add
out
adc
and
xchg
in
dec
inc
loopne
fisubs
push
pop
add
inc
rol
cld
or
ds
sbb
roll
dec
sub
stos
ljmp
enter
sahf
mov
mov
jae
add
sub
dec
pusha
push
mov
mov
xor
add
add
into
or
mov
inc
inc
les
sub
add
cmp
jmp
sub
cmp
jge
sub
cmpb
mov
push
bound
movb
dec
cmp
add
nop
in
sbb
sub
orb
push
out
inc
mov
adc
mov
dec
inc
in
jp
jne
dec
mov
jb
xchg
dec
mov
push
loope
cmp
in
sub
cs
nop
add
dec
and
add
push
adc
inc
mov
pop
rol
mov
add
rclb
add
add
add
test
mov
mov
stos
lret
test
push
or
push
push
pusha
or
add
or
or
movsl
xchg
add
gs
cmp
push
or
rorb
je,pt
push
ret
imull
adc
mov
es
xor
xor
or
xchg
bound
or
jae
sbb
ret
mov
mov
inc
and
cmp
xor
into
pop
sbb
test
test
pop
and
pop
pop
mov
mov
ret
lds
cmp
or
or
lds
push
xchg
xchg
pop
stos
push
mov
and
xor
cmpsb
rorb
or
add
pop
push
ja
add
fmuls
stos
push
mov
cmp
ss
je
jge
or
cmp
int
adc
xlat
push
pop
out
push
jo
fisubrl
pop
xchg
adc
jne
fbstp
and
mov
ret
enter
push
add
outsb
out
and
push
or
sbb
fcoms
lfs
movsb
loopne
clc
mov
test
sbb
sbb
jnp
add
scas
orl
or
and
addl
call
dec
mov
mov
in
ldmxcsr
clc
push
jl
ficoms
pop
test
adc
imul
add
push
into
mov
mov
pop
sbb
xor
inc
jg
xchg
xchg
out
into
into
into
mov
or
inc
pop
sub
push
pop
sarl
nop
pop
sahf
pop
mov
xchg
push
popf
clc
inc
shlb
or
sbb
and
mov
stos
push
dec
add
push
pop
jbe
pop
lcall
pusha
test
lahf
pop
xchg
out
jno
inc
ficoms
add
icebp
jno
loope
add
es
test
mov
pop
jo
arpl
ret
cltd
and
scas
jo
sbb
pop
or
sub
sbb
mov
es
xchg
jmp
inc
xor
mov
loopne
aad
out
pop
mov
lods
adc
add
adc
fxch
xchg
and
aas
mov
mov
bound
sub
clc
int3
scas
inc
add
into
lret
lret
lock
ficompl
fcomps
lea
rcrl
cmpsb
mov
mov
jl
sbb
cltd
cmp
cltd
lret
push
dec
pop
mov
cmp
cs
sbb
and
mov
adc
repz
sbb
addb
dec
and
popf
and
addr16
je
insl
dec
loop
dec
sub
loope
cmp
sub
fmuls
push
test
fisttps
mov
cmp
jb
cmp
jbe
dec
push
stc
push
jle
in
mov
pushf
sub
loopne
dec
insb
or
rclb
pop
or
pop
xor
or
mov
inc
popl
aam
sbb
ret
jle
fwait
repz
mov
and
mov
cmc
adc
dec
cs
into
les
mov
aam
inc
inc
loopne
pop
mov
pushl
in
mov
add
and
push
push
mov
outsb
cmp
sbb
cmpsb
xor
and
test
and
fmul
sub
rorb
lahf
push
sub
mov
gs
stos
xorl
jb
sahf
mov
dec
cmpsl
cs
xor
xchg
dec
sbb
andb
sub
inc
xor
aam
ljmp
push
shrb
dec
add
lock
xor
daa
cmc
punpckhwd
mov
cmp
sbb
mov
add
sub
in
sub
adcb
test
mov
push
sbb
mov
inc
in
inc
lret
cmpsl
push
mov
add
lret
sub
or
sbb
add
adc
pop
xor
push
loope
aaa
cmp
mov
sbb
sbb
ja
pop
and
outsb
push
push
ret
js
lcall
mov
cmp
pushf
inc
mov
cmp
pop
andl
or
mov
jo
add
push
mov
and
sbb
dec
sbb
dec
in
gs
clc
cli
sti
in
lret
mov
das
test
sbb
in
and
cld
ret
add
movsb
or
cs
outsl
pop
push
shlb
cmp
dec
push
push
lret
fmuls
xor
icebp
roll
loop
enter
jle
add
pop
inc
and
lock
dec
mov
sbb
push
mov
mov
cmpsb
loopne
jmp
dec
fs
adc
xchg
adcl
cmp
or
js
cmpsb
mov
lret
jo
aas
xor
mov
or
sbb
inc
insl
sbb
add
test
adc
pushf
iret
lahf
cmp
push
cmp
push
mov
sub
add
fs
sbb
dec
inc
xchg
jecxz
and
mov
sbb
lods
xor
imul
push
or
jg
scas
sbb
insb
xchg
push
ds
inc
cmp
dec
pop
cmp
jbe
pop
mov
push
rolb
pop
sub
pop
and
mov
pop
dec
add
addb
mov
in
mov
gs
hlt
sbbl
mov
pop
pop
lea
add
push
or
adc
cmc
mov
fcomps
inc
fwait
es
cwtl
popa
subl
jle
jge
jg
les
fmull
adc
shrb
cmpl
pop
dec
je
outsb
dec
sub
xchg
push
xor
iret
sahf
outsb
jmp
inc
mov
ja
test
clc
outsb
leave
push
pusha
xor
movsb
mov
int
test
push
inc
mov
jmp
or
lods
pop
clc
and
xor
cltd
and
lock
imul
in
dec
adc
pop
insb
push
sar
xor
sbb
jns
push
and
lret
add
mov
lods
inc
cwtl
pop
sub
test
pop
rol
dec
jnp
push
shll
and
mov
adc
popa
xchg
push
aas
or
add
add
nop
push
popa
in
std
push
mov
add
imul
test
sub
dec
add
fisubl
xor
pushf
ret
es
movsb
push
adc
test
push
add
rolb
int3
jmp
addl
sbb
jmp
insl
cld
mov
loopne
shrb
xchg
loopne
ss
or
fs
or
sbb
push
hlt
jno
inc
fmull
popa
rorb
xor
inc
cld
ret
add
icebp
or
and
cmp
dec
imul
sar
dec
cwtl
xor
inc
dec
mov
lret
sbb
js
or
jp
or
push
lea
xor
sub
mov
inc
mov
rclb
jbe
dec
sbb
pop
and
xchg
andl
jae
xabort
push
push
xchg
lods
mov
cs
push
xor
xchg
in
movsl
mov
cmpsb
mov
and
hlt
mov
fisubrl
clc
pop
adcb
cmp
int3
rolb
cmpsb
pop
addb
fldcw
push
aam
push
sub
and
cltd
sbb
and
sub
push
mov
imul
or
push
sbb
and
add
ret
cs
data16
or
cltd
movl
push
repnz
cmpsb
addb
sbb
adc
or
ret
gs
testb
rorl
ret
jge
popa
lds
dec
cmp
mov
bound
imul
dec
sarl
fidivrl
gs
les
mov
jmp
adc
cltd
jb
negl
test
dec
inc
imul
add
mov
sub
cmp
movsb
mov
and
cld
mov
mov
sbb
cmp
ja
fistpl
jge
add
push
jle
dec
fst
cwtl
pop
add
mov
jae
popf
shlb
or
mov
or
push
dec
test
jg
adc
lock
adc
lcall
push
push
mov
pop
icebp
cmp
js
rcrb
mov
popa
xor
pop
cmp
aam
into
lock
cmc
xor
sbb
push
jb
pop
push
frstor
mov
pop
add
add
sbb
jb
dec
push
or
sub
dec
jbe
push
test
mov
lods
scas
pop
xchg
inc
lea
and
leave
jp
dec
or
push
filds
and
push
add
pop
fs
mov
sbb
in
pop
mov
fildl
call
sub
loopne
pop
cmp
clc
ret
adc
mov
xor
cwtl
bnd
or
decl
push
dec
cmpl
mov
mov
insl
call
cmp
cmp
jo
je
mov
cmp
ja
cmp
rcrl
push
adc
jl
or
addb
out
int
in
in
sbb
pushf
aaa
movsb
add
and
mov
test
jmp
mull
mov
mov
or
test
and
ret
mov
cmp
or
lods
sub
test
mov
and
inc
sbb
imul
std
movsw
mov
imul
dec
jecxz
stos
and
inc
jbe
lds
movsb
dec
sbb
sub
dec
push
pop
sbb
arpl
leave
in
cmp
mov
sub
int3
jl
add
test
mov
add
add
test
loopne
stc
jg
aas
add
roll
add
dec
sbb
pushf
sbb
inc
mov
xor
jle
inc
inc
imul
fcom
sbb
push
push
add
mov
mov
mov
hlt
pop
jg
movl
push
std
push
pop
jl
testb
or
xchg
xchg
or
cmp
iret
test
add
loopne
adcb
nop
addl
adc
or
adc
or
sbb
test
pop
loopne
ficoms
icebp
sbb
shlb
jle
add
sarb
mov
loope
fdivs
andb
dec
inc
js
xchg
jno
mov
mov
mov
lock
cmc
jmp
sbb
pop
dec
cmp
std
dec
loopne
xor
pop
adc
cmp
jae
adc
cmp
inc
mov
lret
cmp
jg
jbe
add
dec
shl
add
push
xchg
popa
sub
in
clc
lods
adc
pop
adc
fnstenv
popa
jmp
and
inc
cwtl
or
outsb
fmuls
das
inc
lret
adc
inc
orl
jle
cld
dec
push
cltd
adc
mov
xchg
inc
xchg
mov
push
mov
jp
lods
xchg
fisttpl
or
xchg
addr16
mov
and
dec
sti
test
push
or
adc
dec
dec
es
xor
andb
xor
cli
mov
inc
inc
inc
mov
dec
cli
inc
mov
jl
jbe
jae
adc
and
mov
dec
or
adc
ss
js
scas
cmpb
test
je
popf
and
loopne
mov
repnz
pusha
inc
shll
outsl
adc
push
sbb
out
mov
ja
popa
xchg
je
mov
cmpsb
cmp
mov
imul
testb
roll
push
sub
push
dec
sbb
push
or
imul
mov
mov
orb
sar
jae
pusha
shl
pop
adc
adc
cmp
push
sahf
xor
dec
je
dec
jne
push
lods
pshufw
ja
fcoms
jmp
add
mov
xor
add
push
je
nop
out
inc
je
push
mov
fcoml
lret
hlt
pop
inc
or
push
sub
jmp
roll
mov
ror
cli
inc
fildl
imulb
mov
arpl
mov
or
add
or
jns
mov
push
stos
add
mov
xchg
addb
ret
cs
xor
dec
jl
and
popa
sbb
test
lods
push
inc
sbb
dec
pop
pop
hlt
push
xor
fsubl
cli
push
jb
arpl
movsb
xlat
sbb
push
mov
imul
cmpsl
rolb
aaa
jl
clc
mov
push
mov
lahf
or
rcll
or
cwtl
sub
add
and
rcrl
into
add
pop
add
les
adc
jb
jge
mov
test
pop
sbb
or
mov
adc
and
sub
jle
stos
insl
inc
push
jl
enter
mov
and
pop
cmp
ret
inc
repz
xor
imul
das
or
mov
insl
dec
adc
sbb
adc
push
test
mov
leave
lods
pushf
push
cmp
xchg
mov
mov
stc
push
mov
std
hlt
jne
mov
and
or
shll
lods
add
lret
push
dec
mov
mov
fs
je
push
pusha
ficomps
jle
std
mov
xor
movsb
les
sub
lock
inc
lcall
jne
scas
push
adc
or
cmp
hlt
rolb
dec
aas
int3
jg
imul
jno
addb
syscall
es
ret
mov
arpl
adc
push
call
out
lock
xchg
dec
hlt
adc
jne
sub
fcmovnb
jle
out
nop
lea
add
adc
mov
mov
and
mov
fdivrl
jmp
jbe
mov
add
dec
jg
adc
orl
jg
adc
mov
dec
and
fdivrl
xor
xchg
and
add
adc
cmp
loope
sbb
jb
or
cmpsl
push
xor
out
shrl
pop
pushf
and
inc
mov
jno
lds
pop
scas
pop
mov
lock
and
xlat
lret
jns
inc
bound
and
popa
adc
test
gs
dec
test
stos
add
dec
sub
andl
lret
loopne
push
test
pop
sti
insb
add
ja
cmp
test
fstl
jae
jns
and
popa
aas
pop
xchg
mov
add
adc
xlat
je
cmp
adc
cmp
jb
testb
mov
sbb
or
jl
js
sub
jge
push
outsl
add
and
push
ss
and
jb
je
cmp
scas
mov
xor
cmp
jbe
clc
sbb
dec
adc
inc
add
gs
cmpsb
inc
lret
shr
jmp
das
dec
fnsave
insl
aad
pop
int
mov
lahf
or
aam
or
push
mov
and
dec
mov
outsb
sbb
je
fstpl
pop
add
sahf
test
dec
jo
mov
sbb
pop
ret
or
iret
mov
pop
jnp
sub
mov
mov
mov
in
push
ss
ret
or
add
add
fstl
hlt
lods
jecxz
adcl
mov
sbb
push
int
sub
gs
add
jb
add
add
rolb
movsb
add
add
and
aas
inc
rcrb
push
daa
fldz
aaa
jo
add
add
rclb
push
inc
pusha
rolb
sub
add
mov
outsb
dec
lret
mov
mov
add
lcall
andb
je
pop
and
cmp
enter
mov
fildll
ds
push
shl
cmp
jmp
pop
les
and
icebp
aaa
adc
arpl
adc
data16
jmp
cmp
fcomp
punpckldq
ret
and
jbe
fstps
sbb
dec
lods
pusha
jg
xor
mov
pusha
xlat
loopne
pop
test
sbb
or
incl
or
dec
in
sarl
xor
bound
xor
mov
dec
push
cmp
pushf
add
adc
addr16
lock
and
data16
dec
add
mov
xor
push
in
mov
jno
fidivl
ss
mov
mov
clc
and
push
shlb
lret
in
pop
mov
in
jge
xor
clc
or
add
sub
insb
push
fbld
dec
dec
fidivl
sub
push
in
lock
les
jne
pushf
cwtl
mov
test
add
inc
fsub
nop
mov
int3
mov
or
jns
loopne
pop
push
jb
dec
inc
in
js
loop
jl
xor
mov
popa
inc
imul
or
or
xchg
adc
and
or
sbb
fisubrl
pop
fisttpl
add
rorl
call
loopne
filds
nop
sbbl
or
jecxz
dec
in
push
loopne
pusha
pusha
leave
mov
orb
movsb
sub
mov
out
sub
sub
adc
test
adc
pusha
or
or
mov
scas
sbb
sub
dec
add
jnp
and
shlb
dec
in
inc
es
xchg
cmpsb
or
inc
adc
cltd
or
call
pushf
cmp
adc
or
popa
inc
push
sbb
cwtl
jae
nop
and
or
cmpsl
clc
jl
cmp
notl
or
ret
sbb
push
xchg
push
fwait
mov
or
pusha
add
pop
jb
inc
add
mov
dec
sahf
sbb
loope
xorl
jne
push
dec
or
fidivl
insb
and
addl
lcall
mov
dec
imul
lods
imul
das
dec
cs
enter
test
push
adc
fmuls
roll
aam
inc
pminsw
inc
les
shll
add
sarb
movups
inc
nop
lcall
addl
fmuls
je
cmp
mov
dec
mov
adc
cltd
fs
fs
je
jl
and
xchg
add
sbb
cmpsl
mov
xor
adc
mov
xchg
shlb
jecxz
jl
in
sahf
inc
sub
mov
enter
and
mov
sbb
xchg
or
xor
dec
in
mov
in
punpckhdq
sbb
sbb
outsl
shll
lret
das
inc
test
xor
mov
out
mov
pushf
adc
dec
mov
sbb
or
pop
push
cmpsl
sub
mov
sub
mov
and
jl
add
ja
cmp
fcmovu
aam
push
rcrl
or
push
je
cmp
and
aas
nop
cmp
lock
push
adc
nop
jbe
inc
jl
aam
inc
push
data16
or
sbb
je
enter
in
sbb
aam
pop
mov
gs
nop
push
adc
insb
xor
mov
push
xchg
imul
xchg
push
jno
pusha
sti
fcoml
xor
daa
or
xor
or
mov
add
sub
dec
jmp
test
dec
dec
outsl
pop
dec
ss
mov
iret
popa
xchg
inc
sbb
inc
xor
orb
inc
adc
insl
fs
dec
fidivrl
test
data16
mov
dec
scas
jl
jge
mov
subl
pop
fcoml
inc
jno
ret
aas
loopne
xor
pop
in
pop
push
test
pop
inc
xchg
sub
mov
or
in
arpl
cmpsb
imul
shll
sbb
sbb
mov
or
jp
xchg
or
clc
cltd
jne
and
test
or
es
imul
sbb
imul
xchg
and
lds
mov
in
mov
lret
lock
adc
test
push
push
sbb
pop
cmp
test
loopne
add
and
out
xor
xor
ret
dec
sub
xor
sbb
sbb
push
loopne
mov
orb
or
or
mov
ds
mov
popf
add
ret
or
inc
xor
or
sub
repz
aam
lds
push
jmp
push
insl
testl
fsubrl
pop
mov
stos
adc
add
adc
inc
dec
pusha
push
cmp
lds
fildll
test
sti
pop
cwtl
push
fst
ret
or
sub
decb
adc
int3
sbb
test
xchg
push
inc
push
in
fisttpll
sub
stc
es
andb
nop
jb
mov
xor
pop
inc
add
push
dec
jp
cmp
push
jno
jne
xor
jnp
dec
test
ja
pop
fildll
insb
pop
and
mov
add
cwtl
pop
dec
pop
xor
sbbb
aad
in
roll
fwait
and
mov
sti
and
mov
in
test
xorl
nop
xor
movsl
sbb
test
nop
lods
inc
je
fsubl
in
dec
mov
push
or
in
jbe
dec
sahf
in
or
add
or
faddl
and
mov
repnz
xchg
push
nop
inc
mov
mov
mov
push
in
add
cmp
or
cmp
adc
sbb
or
or
enter
aas
sub
xchg
movsb
sti
jns
lahf
sbb
sti
push
nop
inc
cs
mov
cmp
pop
dec
les
jmp
cmp
jno
and
adc
or
test
and
and
in
lret
mov
jne
cli
mov
lock
inc
dec
push
std
test
shlb
and
jo
and
test
nop
std
mov
xor
sbb
leave
and
or
jb
and
and
and
jecxz
xchg
sub
xchg
or
or
fwait
mov
cs
xchg
stos
inc
mov
inc
fadds
mov
pop
or
mov
aam
in
sbb
mov
in
lcall
insl
repnz
es
loope
sarb
sbb
fildll
ret
sbb
add
ror
adc
or
addl
push
sub
leave
mov
bound
sbb
movb
ret
xchg
pop
daa
jecxz
pop
and
cmp
or
dec
adc
sub
and
cmpsb
inc
push
addr16
sub
jb
mov
int
cmp
sub
and
dec
sbb
stos
or
nop
add
nop
or
or
add
or
mov
subb
sub
fstpt
jae
dec
push
arpl
enter
mov
loopne
cmp
lods
std
xor
inc
ret
das
jnp
mov
adc
mov
jae
jno
test
pushf
sub
adc
sub
pop
insl
call
les
in
mov
add
mov
sub
jb
sti
or
andb
pusha
sbb
nop
push
inc
bts
mov
rcrb
xchg
xor
add
shlb
mov
add
arpl
adc
sub
pop
subb
pop
or
push
sub
and
push
mov
add
enter
ret
mov
insl
call
mov
xlat
out
xor
sub
mov
into
ljmp
call
fs
cmp
in
sbb
loopne
pavgb
out
scas
clc
push
cmp
fwait
mov
xchg
pop
or
sub
inc
or
adc
cmp
or
and
cmp
fistl
lss
test
add
fistpl
das
cmp
addb
das
lret
arpl
fcoms
fdivs
jge
stos
mov
inc
cs
push
jne
jle
add
loopnew
andb
inc
sbb
std
lock
xor
sub
xor
jno
sbb
xor
mov
adc
add
call
insl
lock
test
aaa
cmp
pop
or
or
or
or
sub
mov
xor
sbb
sysexit
test
cmp
mov
lods
jno
icebp
arpl
mov
or
or
int3
in
lock
mov
pop
jb
inc
push
fs
cmp
addl
sub
sub
push
lock
xorb
mov
rorb
call
xor
out
and
cwtl
stc
mov
mov
cmp
xor
inc
xchg
jg
dec
lods
arpl
aad
push
pushf
ret
inc
fadds
cmp
aam
das
jmp
or
and
mov
fldenv
les
add
aam
push
in
fiaddl
dec
or
inc
int3
cmpsb
ficompl
pop
aam
mov
fmul
enter
aaa
imul
mov
push
fs
xor
dec
xor
push
test
or
push
rolb
mov
addb
pop
dec
cs
mov
sbb
insb
jae
jns
push
sbb
xlat
ss
mov
jg
inc
add
outsl
inc
jge
pop
xlat
mov
inc
test
jmp
push
imul
push
icebp
sbb
fsub
add
nop
sub
sbb
mov
aam
fcoms
nop
and
dec
aaa
pop
lcall
cmp
cmp
pop
pop
test
mov
lcall
cmp
aaa
or
xchg
sub
sti
movsb
adc
gs
push
or
rorb
adc
popf
push
sub
enter
outsl
cltd
aas
cmp
leave
and
adc
rorb
xchg
test
dec
sbb
popf
out
cmp
pop
add
pop
ja
cli
jae
adc
adc
add
jl
rorl
xor
xlat
sbb
lock
sbb
cmp
cmc
push
pusha
sbb
fdivs
add
push
pop
pop
or
ja
dec
imul
sbb
test
sti
enter
subb
cmp
mov
loope
mov
jns
in
in
in
adc
cmp
jb
pushf
sbb
or
aam
imul
int3
mov
cmp
mov
jno,pn
xchg
insb
inc
leave
add
xchg
add
mov
ret
sar
prefetcht2
add
dec
popf
fwait
std
mov
movsl
inc
sbb
inc
or
adc
add
or
adcb
and
mov
adc
xchg
push
mov
xchg
in
hlt
fcom
testl
or
dec
or
pop
and
ljmp
lock
pop
adc
outsl
mov
jmp
mov
mov
jbe
popa
inc
pushf
ret
jnp
xor
mov
fdivr
roll
notb
popf
ss
xchg
gs
or
adc
loopne
add
inc
mull
ret
icebp
jp
inc
dec
add
xor
pop
mov
add
jne
idivb
in
scas
in
pusha
jne
cmc
cmp
push
enter
adc
mov
or
mov
out
mov
adc
stos
mov
pop
adc
dec
pop
inc
sbb
inc
in
mov
push
push
jns
inc
and
inc
mov
mov
fsubl
stos
add
in
sbb
jo
or
lods
push
dec
mov
add
jne
icebp
and
out
add
jmp
or
jne
aam
rorl
in
call
gs
mov
enter
repz
fs
mov
nop
or
sti
or
aad
cmp
xor
sbb
xchg
and
jae
fcoms
mov
in
or
scas
cmc
adc
jp
xchg
test
mov
cmp
xorb
push
mov
lahf
roll
pop
in
push
add
je
popa
enter
orb
dec
insb
sub
cmp
inc
imul
xchg
arpl
inc
xchg
adc
int3
mov
dec
dec
imul
lods
in
cltd
fmul
movsb
test
fistl
sbb
lods
lods
adc
jb
cmp
adc
movsb
cmp
lock
xchg
jmp
cmpsb
adc
and
rorb
pusha
ret
dec
and
les
rcl
adc
xchg
outsl
call
adc
leave
and
fsubl
stos
mov
xchg
pop
arpl
leave
add
imul
xor
nop
arpl
adc
cwtl
and
insb
test
shlb
addb
movsb
add
repnz
not
adc
popf
loope
rclb
je
ds
daa
shrl
aam
and
dec
sbb
and
mov
mov
add
dec
aam
jno
inc
push
dec
out
adc
jmp
in
cmpl
adc
mov
jo
xor
negl
in
pop
sbb
in
mov
daa
fdivrl
dec
inc
xor
cltd
pop
or
mov
push
mov
lods
in
pop
pop
test
leave
aam
mov
lds
inc
gs
pusha
dec
jno
xor
ret
inc
mulps
int3
int
test
adcl
psubsw
cmp
mov
aas
mov
dec
push
jno
sub
lea
xchg
and
dec
mov
jne
in
cwtl
or
insl
test
push
push
inc
daa
jo
test
push
setnp
adc
les
cmp
or
int3
in
in
xor
mov
push
pop
jo
lods
lods
xchg
add
xchg
inc
cs
dec
or
dec
ds
sbb
jecxz
lods
xchg
inc
xchg
dec
repz
cwtl
mov
pusha
add
js
popf
movsb
mov
add
stos
rclb
nop
pop
dec
cmp
popa
mov
dec
mov
frstor
punpcklbw
movsl
push
and
imul
cs
sti
es
sbb
mov
add
sbb
js
test
push
movsb
adc
inc
jl
mov
es
xchg
xchg
subb
mov
leave
addb
sbb
and
into
in
jns
mov
bound
adc
je
sbb
push
jae
or
je
sub
cmp
cltd
xor
inc
mov
lods
sbb
mov
inc
enter
lods
pushf
inc
enter
mov
mov
test
loopne
xchg
insb
sub
add
adc
nop
inc
mov
jb
pop
aam
xor
fwait
push
in
or
out
add
inc
mov
aaa
cmpsb
adc
push
add
cmpsl
mov
std
out
jne
jge
dec
jecxz
xchg
jno
cmp
xor
sub
inc
jmp
pop
xor
out
test
adc
imul
xchg
test
sbb
jno
sbb
or
jge
mov
adc
rcl
rorb
ret
in
mov
sub
inc
ret
fcompl
jge
aad
repnz
dec
pop
jne
dec
or
or
mov
andb
sti
ljmp
or
das
add
xlat
int
in
sub
test
push
lea
adc
mov
add
clc
pop
cmp
jmp
cwtl
aaa
add
dec
push
leave
mov
test
enter
popa
or
inc
mov
scas
mov
adc
push
pusha
pop
push
sub
and
dec
xor
xchg
dec
xor
and
sbb
dec
xor
and
inc
cmp
leave
and
inc
sub
sbb
push
xor
pop
mov
fdivr
pop
das
dec
mov
mov
test
das
mov
dec
test
cmpsl
shrl
xchg
mov
nop
mov
sbbb
xor
and
push
add
or
push
jo
jno
dec
jne
pop
lahf
cmc
sbbb
test
shrl
in
movsl
or
jne
and
std
stos
pusha
or
insb
pop
jne
xor
mov
inc
in
lods
test
sbb
jne
jno
inc
and
test
and
movsb
insb
or
ficoml
add
adc
pop
push
leave
and
inc
and
gs
pop
or
fldl
lock
int3
out
mov
les
rcl
pop
in
and
aad
loope
clc
pusha
jmp
adc
cmp
sub
pop
pop
adc
ret
push
outsl
fs
inc
bound
inc
sarl
xlat
mov
rorb
pop
stos
pop
aas
dec
dec
push
adc
and
sub
bound
adc
in
and
jne
sub
faddl
in
movsl
or
data16
call
cwtl
xor
jnp
insb
mov
mov
pop
inc
arpl
or
loop
adc
inc
or
mov
ja
sbb
push
clc
ja
mov
jg
popf
mov
xchg
ljmp
add
jo
or
jns
gs
dec
inc
lods
outsb
insl
outsl
test
cmp
fwait
pushf
inc
and
xchg
push
adc
mov
xor
push
inc
sarb
inc
lea
xor
xchg
adc
cmpb
movsb
cmp
or
add
aam
or
mov
sub
sub
addr16
data16
pop
in
mov
push
adc
dec
inc
and
pusha
mov
push
int
in
leave
and
and
adc
in
pop
push
in
sbb
in
orb
nop
push
adc
adc
in
enter
movsb
adc
sti
dec
inc
or
inc
imul
ja
inc
insb
inc
sub
sbb
call
jne
rorl
imul
push
sub
push
rcll
in
jns
push
sub
ror
and
push
pop
cmp
and
adcl
rcl
in
pusha
imul
dec
xchg
and
ss
add
stos
pop
and
daa
add
push
dec
cmovs
mov
imul
addl
mov
push
xor
call
insl
adc
loopne
add
mov
test
mov
in
lock
push
push
aam
or
or
outsb
mov
pop
aam
mov
aam
loopne
fdivrs
xchg
insl
shr
fildll
pop
mov
mov
out
mov
jg
repnz
fistps
movb
mov
pop
mov
loop
push
mov
pusha
ficoml
xchg
lock
xchg
inc
pop
and
inc
or
push
test
pop
xchg
adc
xor
stos
jno
aam
mov
jmp
jge
nop
out
mov
xor
and
fisttpl
xor
fisttpll
jl
dec
push
sub
enter
movsb
lods
mov
enter
int3
arpl
lea
inc
push
in
cwtl
js
xchg
nop
push
call
sbb
fs
mov
das
jb
subb
dec
dec
js
pop
leave
leave
leave
insl
nop
bswap
les
lods
movsb
pushf
outsb
push
xchg
fistl
dec
outsb
push
dec
test
pop
jmp
paddusb
dec
sub
jae
leave
and
push
inc
pushf
pushf
xor
adc
pusha
mov
inc
push
push
jno
outsl
mov
sbb
out
mov
rcrb
test
imul
dec
mov
pop
dec
dec
sub
jecxz
test
mov
adc
lods
leave
adc
in
sbb
dec
pop
dec
push
enter
push
sub
loope
mov
jmp
or
popf
pop
sub
cmp
dec
pop
or
jge
and
cwtl
jne
sbb
xchg
loope
jne
mov
loop
dec
dec
cmp
xchg
sub
jbe
pusha
imul
and
or
sub
dec
dec
outsb
push
add
mov
cwtl
mov
lods
es
mov
mov
mov
insb
outsb
xorb
imul
shlb
xor
jg
shll
test
and
js
insl
dec
shlb
mov
sbb
push
adc
hlt
add
add
mov
mov
push
or
xor
and
push
aaa
cmp
pop
mov
fs
rcrl
fdivs
pop
dec
xor
shll
pop
adc
lret
add
xchg
xor
incb
cltd
mov
pop
mov
or
sub
jbe
push
xorb
or
pop
inc
or
addr16
lahf
enter
sub
adc
mov
jns
arpl
loopne
push
push
jne
call
add
insl
leave
aas
outsl
loopne
jno
adc
call
daa
mov
test
xor
pop
and
mov
orl
xchg
filds
iret
pop
push
xchg
or
adc
sbb
test
add
pop
test
ss
int
shrb
xchg
sbb
xor
fs
push
enter
mov
dec
mov
adc
xor
xchg
or
sub
faddl
stc
movsb
and
mov
inc
mov
mov
movsb
push
cmp
nop
test
jl
xchg
dec
sbb
adc
leave
and
xchg
dec
rcr
ja
dec
mov
or
ror
aas
mov
mov
fs
add
mov
pushf
aad
or
inc
stos
or
mov
mov
ja
sbb
cmp
and
mov
imul
mov
inc
cmc
push
nop
inc
jne
cmp
add
cmp
adcb
mov
imul
sub
mov
repnz
dec
fwait
mov
mov
shrl
cwtl
sbb
or
nop
sub
movsb
cmp
in
pushf
pop
lods
xchg
sbb
inc
or
pop
mov
std
jo
not
push
add
pop
nop
add
adc
cmp
movb
jecxz
add
shlb
sbb
hlt
dec
pop
shll
pop
sub
imul
push
mov
push
and
adc
in
hlt
cltd
cwtl
push
sub
cmp
or
in
jg
insl
cmpsl
in
xlat
push
mov
sti
leave
fists
and
add
adc
mov
add
sbb
sub
or
movsb
les
mov
clc
mov
andl
icebp
sar
xor
xor
lds
sbb
clc
icebp
addl
cltd
sbb
lret
int3
push
rol
daa
xor
xor
mov
lcall
adc
cmp
add
enter
nop
lahf
les
fsubr
call
sub
shrb
mov
inc
add
fwait
loope
fstl
push
aas
add
popf
das
aas
dec
push
fidivs
popf
scas
lcall
lods
fwait
test
sbb
out
push
das
lock
idivl
in
lods
pusha
add
sbb
add
add
sub
pop
fwait
adc
out
xchg
pusha
add
dec
inc
or
movsb
adc
adc
test
jae
xor
enter
xchg
add
rcll
cmp
push
jo
mov
jecxz
cwtl
subl
cmp
and
push
pop
sbb
sbb
mov
mov
push
jb
pusha
testl
mov
cmp
jno
adc
xor
and
mov
insl
inc
mov
in
in
mov
dec
out
mov
lcall
jmp
jne
adc
in
movb
pushf
je
fnstsw
or
addl
shrl
dec
xchg
or
inc
mov
pusha
nop
test
adc
popa
and
lcall
stos
xor
aam
inc
in
inc
insl
adc
fcomi
dec
insl
test
enter
push
xchg
jno
out
xchg
pusha
mov
mov
pop
xor
stos
mov
xor
dec
cmpsb
adc
pop
sbb
js
and
inc
lods
icebp
inc
repnz
pusha
or
sbb
mov
add
insl
cmp
sbb
xor
std
xorl
add
pop
enter
dec
mov
mov
and
add
mov
fwait
in
pusha
pop
cmc
push
insl
mov
call
js
push
xor
xorb
lods
cmp
in
bound
adc
imul
test
and
cmpsl
int
mov
scas
test
cltd
es
xor
nop
cmp
sbb
mov
adc
xor
inc
add
xchg
inc
xchg
inc
add
mov
cmp
xchg
std
fs
and
adcb
cmp
xchg
dec
or
es
or
cmp
movsl
dec
mov
orb
dec
pop
repnz
fs
fimull
cmp
fwait
jl
lret
pushf
sub
adc
in
or
sbb
inc
sub
mov
mov
pop
xchg
bound
and
sbb
xor
fidivl
xchg
and
push
mov
adc
push
pushf
cwtl
inc
mov
sbb
sbb
add
addb
push
ret
pop
lcall
addb
ljmp
inc
lods
lahf
adc
xor
rclb
dec
cmpsb
adc
orb
lods
mov
jge
decb
shrl
or
pusha
mov
mov
loopne
jns
push
or
dec
jo
je
fsubs
lret
mov
adc
and
imul
add
sbb
lods
lea
inc
xchg
in
pop
imul
ss
push
inc
imul
pop
jb
mov
push
push
insl
mov
and
cli
push
sbb
or
xor
in
nop
lret
mov
cs
sbb
add
mov
in
pop
jecxz
lcall
xchg
sub
clc
mov
ljmp
fstpl
subl
mov
fdivrs
movb
pop
cmp
xchg
inc
jnp,pt
xor
push
and
enter
push
mov
lods
sbb
jb
mov
or
and
dec
cmpsb
mov
xchg
xchg
push
and
mov
iret
xor
push
xchg
rcrb
pop
push
sbb
xor
push
mov
neg
mov
sbb
fs
push
adc
and
lcall
movsl
jge
inc
pop
sbb
mov
pusha
insb
push
pop
divb
adc
jge
adcl
push
or
insl
push
push
ja
nop
pop
inc
xor
push
mov
pop
xlat
fists
add
inc
pop
out
cld
adc
testl
sahf
sbb
addb
cwtl
test
mov
sub
mov
cmp
inc
bound
fsin
dec
push
inc
add
roll
fistps
repnz
out
inc
lds
inc
cld
aas
xor
add
mov
or
adc
fisttps
mov
jns
mov
add
orb
jnp
mov
mov
mov
stos
adc
mov
gs
xchg
adc
push
or
cmp
cld
outsl
cmp
adc
lret
pop
mov
add
into
pop
adc
test
dec
dec
repz
push
mov
rorb
dec
and
or
je
test
cld
fadd
inc
pop
push
gs
jb
popa
fs
je
arpl
jne
jb
outsb
je
gs
fcmove
push
jnp
aas
rdpmc
add
smsw
cmpb
rcl
jae
adc
push
and
insb
outsl
arpl
imul
push
sarb
add
insl
adc
decl
or
inc
inc
outsl
jb
js
je
jg
mov
jae
add
or
outsl
add
add
add
ja
sahf
insb
add
jne
xchg
je
imul
fstp
jb
dec
push
add
add
xor
or
mov
and
add
fdivr
push
add
aas
push
add
dec
pop
mov
and
cmp
mov
push
je
and
jae
push
idivl
adc
out
loopne
cmpsl
insl
push
push
or
jae
out
loopne
mov
lret
repz
popa
fstpl
xor
insb
jp
outsl
in
fndisi(8087
or
mov
fsubrp
imul
addr16
and
outsl
pop
rcrb
jmp
jo
mov
in
loopne
dec
lret
stos
insl
sub
push
push
or
pop
imul
fnstsw
inc
push
data16
shll
out
mov
jp
sub
mov
sub
arpl
andb
lahf
popa
push
cmp
jecxz
outsb
inc
arpl
loopne
pop
jnp
jae
daa
dec
jbe
enter
fbstp
outsb
fidivrl
je
adc
sbb
jo
ficomps
jbe
mov
arpl
insl
mov
scas
xor
scas
js
xor
inc
mov
js
sbb
xor
fidivrl
cs
add
das
xor
sub
pop
or
pminub
jg
ds
or
sub
outsl
xchg
lahf
pop
pop
push
sbb
jg
dec
xor
adc
fbstp
adc
adc
push
xor
xor
lods
cmpsb
in
xchg
jb
jne
in
mov
xor
push
bnd
das
pop
jno
jbe
sbb
inc
inc
shrl
ljmp
push
jo
lahf
outsl
aas
push
lods
roll
iret
arpl
sbb
mov
inc
jb
aaa
insl
jno
lahf
cs
imul
add
imul
shll
jnp
sbb
cmpsl
outsl
pop
pop
loopne
subb
das
xchg
mov
daa
mov
pop
in
jno
add
pop
stos
imul
insl
lret
je
scas
cmp
fisubs
adc
jae
subb
pop
pop
jecxz
ret
ja
push
sub
lock
xor
rcl
xchg
add
xchg
or
cmp
loopne
je
repz
adc
das
sbb
adc
adc
push
sbb
sbb
iret
repz
sbbb
sbb
sahf
cmpsl
stc
mov
das
push
lahf
push
imul
lock
jnp
cmpsl
xor
push
jns
jp
iret
sarl
cld
cmp
js
pop
lahf
push
dec
aaa
add
mov
mov
test
sub
sub
push
mov
lock
loope
lret
lret
test
cmp
imul
pandn
ds
mov
fbstp
or
push
fwait
mov
dec
add
sbb
fisttpl
mov
xor
add
add
das
das
inc
pop
sub
mov
shlb
dec
ljmp
das
inc
and
decb
popa
pusha
dec
inc
jmp
imul
je
idivl
xor
repnz
dec
inc
mov
sbb
pusha
daa
mov
ret
mov
daa
outsl
dec
and
inc
jo
pop
inc
das
ss
add
pop
imul
mov
fcmovne
jns
out
out
adc
iret
and
arpl
push
outsb
inc
pop
pop
jp
dec
xlat
mov
and
scas
push
imulb
dec
jne
dec
mov
shll
ds
neg
mov
insl
arpl
mov
jg
sbb
xor
dec
cmp
cmp
add
jnp
sub
dec
and
jns
add
das
ljmp
scas
das
adc
arpl
bound
mov
dec
outsl
jbe
dec
arpl
ds
popa
sbb
jo
sub
addr16
xor
insb
mov
push
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
into
mov
jae
mov
xchg
addr16
fcmove
fdivrl
je
jb
xor
and
jnp
data16
push
gs
sbb
dec
outsl
outsb
and
fdecstp
push
jne
xchg
pop
dec
imul
pushf
inc
aas
add
out
dec
or
jge
dec
jnp
mov
ja
adc
jae
fimuls
adc
popa
insb
outsb
mov
inc
inc
pop
push
and
call
andl
sub
xor
cmc
pushl
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
int
rclb
ljmp
insb
jl
pop
pop
pop
pop
test
bound
gs
sbb
push
insb
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
cmp
sub
mov
sub
xor
push
add
fmull
adc
add
add
add
add
inc
push
push
and
push
pop
outsb
add
xor
cmpsb
sub
and
jnp
jo
add
pusha
push
add
inc
dec
out
into
fiaddl
cmp
add
sbb
movq
pop
loopne
neg
test
filds
orb
jg
jge
sar
lret
jno
icebp
pusha
inc
mov
clc
add
js
ret
movsl
add
xorl
fldl
imul
fs
jb
pop
dec
ja
pop
lock
xor
aas
aas
popa
js
scas
popf
jnp
addl
pop
ds
scas
or
dec
push
addb
pop
rcrl
fimuls
xchg
add
es
adcb
data16
sbb
mov
imul
loope
int3
xor
insb
push
or
cmpsb
jo
add
mov
in
push
outsb
imul
and
inc
loop
or
fldl
mov
imul
and
xchg
add
in
cmp
mov
nop
mov
xchg
xchg
ja
and
mov
mov
sahf
xchg
ror
xchg
or
or
inc
scas
mov
lret
hlt
push
cli
mov
pop
lods
mov
enter
add
jmp
jp
sbb
cmp
push
rcl
pop
sbb
push
inc
sub
pop
ja
xor
dec
sbb
dec
inc
dec
inc
xchg
notl
fs
add
adcl
cs
jae
jmp
mov
xchg
je
outsb
inc
insl
xor
sub
icebp
ss
je
xor
push
mov
jne
daa
pop
lea
repnz
addr16
outsl
js
push
xchg
cs
ljmp
insl
jo
jo
and
and
pop
pop
shlb
aaa
insb
les
dec
imul
or
inc
mov
les
cmp
dec
inc
jb
jns
daa
jnp
fdivs
push
jns
mov
clc
push
pop
pusha
inc
insb
and
arpl
je
or
addr16
xorl
fsubrl
push
jbe
mov
jo
or
jb
and
xor
mov
fwait
xchg
pusha
inc
jbe
push
push
sbb
imulb
push
add
and
xor
pop
jbe
popl
inc
imul
jp
cmp
push
orb
lds
mov
push
inc
daa
mov
test
pusha
lock
mov
shll
outsb
mov
lods
jbe
adc
cmp
sub
pusha
insb
call
inc
les
addr16
subl
js
mov
mov
mov
mov
inc
xor
jbe
push
push
push
push
dec
testl
dec
mov
xlat
dec
push
lods
lea
stos
popa
fisttps
pop
mov
insl
ds
or
jb
push
imul
call
push
lds
jg
sbb
jae
inc
in
rorl
push
xor
add
je
inc
adc
mov
subl
stos
push
jne
push
or
cmp
je
outsl
xchg
daa
cmp
mov
popw
pop
cmp
push
jl
cmp
or
ds
and
out
push
sub
es
ja
out
mov
sub
sub
addr16
mov
add
sub
push
jnp
cmp
or
sbb
das
push
jb
and
and
adc
xchg
ds
aad
mov
jne
stos
addr16
cmp
add
pop
rcr
ss
gs
imul
lock
addr16
dec
sbb
mov
xchg
sahf
inc
pop
sub
jae
inc
jo
sub
pop
jbe
push
out
sub
repz
push
addb
xor
sbb
stc
cmp
adc
add
sub
fiaddl
push
rolb
sahf
out
int3
enter
mov
lods
test
mov
fdivp
aam
ds
nop
mov
jns
repz
mov
mov
sahf
out
je
insb
push
fs
pop
pop
push
push
jns
out
dec
dec
inc
cmp
jl
out
sbb
hlt
sub
iret
repz
shlb
cmpsl
stc
cmp
fsubrl
mov
out
push
sarl
and
call
cmp
mov
in
ds
mov
push
int
mov
or
sub
orb
test
push
jb
dec
bound
ss
sbb
inc
addl
add
ret
push
and
add
ja
sub
sbb
adc
xchg
test
add
cmp
addl
addl
add
dec
add
dec
pop
dec
adc
adc
andl
mov
xor
xchg
das
jle
cmp
addl
mov
call
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
pushl
mov
mov
mov
ret
enter
int3
int
iret
sar
call
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
mov
repz
cmc
div
clc
stc
cli
sti
cld
std
jmp
test
jno
loope
push
stos
addb
ljmp
cmp
loop
popa
and
jg
or
pop
outsb
gs
popa
data16
add
pop
jns
aad
cli
repz
xor
add
ljmp
cwtl
add
push
arpl
mov
fs
sbb
sub
je
xor
mov
shrd
addr16
sub
add
inc
adc
pop
add
push
push
dec
and
xor
push
dec
inc
dec
movsbl
cmove
push
loopne
pop
adc
sub
adc
outsl
mov
into
mov
mov
fidivs
inc
jnp
inc
loop
mov
ds
pop
adc
dec
repz
lret
sbb
jb
jge
arpl
imul
adc
dec
scas
jp
jno
in
fstl
fildll
and
cmp
dec
imul
call
adc
inc
inc
mov
mov
sub
mov
xor
fwait
ss
sbb
pop
jns
ds
xor
fistpll
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
pop
add
call
cmc
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
incl
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
popa
push
or
shll
mov
leave
mov
adc
cld
aas
pop
xchg
dec
add
scas
lods
dec
lock
xor
adc
jg
mov
pop
pop
repnz
fistpl
sub
lret
es
sbb
outsl
loope
add
pop
or
outsb
push
sub
ja
mov
jg
inc
push
scas
pop
inc
mov
outsl
loopne
jo
daa
or
sbbl
fistpl
jmp
sub
mov
xchg
and
lahf
adc
pop
dec
jns
out
mov
ja
pop
and
mov
inc
fwait
imul
outsb
addr16
es
jae
in
add
outsb
lret
fildl
jmp
xlat
test
sub
ficomps
mov
adc
bound
pusha
dec
loopne
jg
aas
fs
pcmpeqw
sti
cmp
mov
popa
daa
inc
fildl
pop
imul
je
jmp
loope,pn
jae
insb
add
je
fstpt
out
shr
xchg
lret
xchg
jb
fists
ret
fildl
inc
jb
add
inc
stos
jae
fs
or
ret
push
movsb
pop
jo
pop
xchg
clc
and
imul
mov
jae
insl
jle
pxor
cmpsl
xchg
sub
sub
jecxz
loope
js
jg
repz
fbstp
pop
out
push
push
push
or
adc
mov
xchg
adc
ret
insb
push
in
cmp
ret
or
stos
jg
mov
sbb
xchg
outsb
icebp
mov
fs
lcall
loope
mov
jmp
add
mov
pusha
js
sub
mov
aad
cmpsl
out
add
jne
dec
jae
xchg
insl
mov
insb
outsl
cmp
mov
pop
lcall
xor
das
addr16
iret
add
xchg
add
cmp
add
mov
gs
lods
gs
fs
sar
arpl
xor
and
fdivrp
ja
xor
xor
push
imul
jp
iret
out
push
adc
inc
push
cs
cmp
jl
out
sub
mov
mov
add
add
add
mov
cmp
jb
shr
push
clc
inc
inc
add
ja
call
das
add
jo
xlat
jecxz
das
inc
jae
jecxz
push
sahf
or
add
ja
ss
jb
rcrb
rcrl
das
ret
jbe
or
fldt
add
push
jo
pop
mov
imul
inc
push
divl
mov
sbb
testl
push
adc
roll
pop
test
loopne
loope
inc
cmp
dec
dec
ficomps
mov
aas
ss
xchg
jo
dec
add
push
pusha
push
sbb
data16
ja
pop
mov
or
add
stos
in
mov
push
pop
mov
mov
push
popl
pop
inc
mov
pusha
addr16
out
mov
addr16
je
lret
inc
outsl
mov
arpl
daa
pop
pop
ja
mov
sbb
push
pop
push
lcall
sub
jne
xor
adc
cli
sbb
cs
inc
ret
pop
pop
cmp
add
or
fiadds
dec
sub
jnp
mov
jl
pop
lahf
add
das
push
stos
mov
fmuls
shrb
pop
sbb
xlat
dec
jnp
add
repnz
in
ficoml
sahf
inc
aas
jle
mov
mov
or
loop,pn
loop
jae
jbe
icebp
xlat
push
arpl
adc
loop
call
lret
and
push
push
roll
mov
inc
ds
fdiv
je
and
bound
out
cmp
inc
pop
testl
xchg
pop
xor
dec
ja
dec
sbb
adc
shlb
out
shll
push
sub
sbb
popa
hlt
xchg
push
ret
shll
cmp
jne
add
dec
pop
pandn
dec
pop
inc
out
repz
cmp
pop
mulb
adc
icebp
sub
mov
rcll
jg
push
jne
addb
dec
adc
push
dec
xchg
subl
push
sub
outsb
or
push
test
out
pop
cmp
mov
jne
or
clc
divl
fistpl
fcmovbe
mov
jnp
pop
and
xor
inc
jno
mov
cmp
pusha
lret
push
mov
outsl
outsl
push
mov
mov
mov
adc
xor
pop
das
xchg
or
fdiv
cs
dec
jecxz
mov
ja
es
xchg
call
out
inc
push
inc
out
inc
das
cmp
imul
shll
mov
sbb
push
xchg
subb
outsl
imul
jo
adc
inc
ss
mov
dec
inc
lea
stos
xlat
xchg
es
je
pop
dec
sbb
outsl
insb
sti
cmp
push
sub
pop
scas
inc
bound
dec
cmpsl
mov
sub
dec
out
pop
pcmpgtd
cmpsl
xchg
inc
arpl
inc
add
cmpsl
pop
outsl
push
aas
and
lcall
out
mov
push
mov
inc
mov
jl
jg
jl
imul
push
and
sbb
addr16
bound
pop
outsb
out
push
das
ja
loopne
push
mov
fs
mov
mov
xchg
fstp
jo
mov
out
fcoml
lds
jl
sbb
imul
into
sbb
insl
push
mov
add
es
divl
outsb
jo
call
pop
arpl
inc
xchg
outsl
subl
mov
mov
or
lahf
outsl
arpl
jns
pop
push
adc
mov
or
inc
mov
jl
mov
mov
imul
push
xchg
jl
insb
cmp
loop
xor
cmp
mov
sbb
mov
daa
inc
addr16
push
outsl
pop
adc
dec
mov
aad
xlat
incl
outsl
orb
xchg
rol
fistpll
clc
arpl
dec
das
in
les
fistpll
pop
jns
mov
jae
out
les
ljmp
pop
or
sbb
pop
enter
fwait
xchg
fists
push
mov
lea
mov
pcmpgtd
aaa
push
movsb
insb
arpl
dec
inc
fmuls
inc
xchg
pop
aaa
das
lods
dec
stos
outsb
popa
inc
aas
popa
pop
ret
ret
das
imul
jbe
js
push
add
rcll
sub
imul
add
cmp
stos
lea
aas
nop
or
shll
cmp
shr
add
xor
mov
push
jae
daa
and
fiadds
popw
fstpl
ficoms
addr16
outsl
icebp
cmp
scas
fimuls
sub
push
push
inc
inc
xchg
xchg
sub
or
dec
ret
lea
out
sub
mov
imul
icebp
dec
outsl
mov
and
lahf
and
icebp
mov
mov
outsl
dec
imul
les
cmpsl
insl
mov
push
mov
mov
xchg
add
int
xor
pushf
ss
js
add
add
mov
push
ret
jg
add
pusha
pop
fadd
imul
mov
pop
mov
and
std
push
int
jl
add
inc
ds
test
ja
in
jge
cmp
ss
es
push
in
push
imul
stc
pop
mov
inc
scas
lds
test
adc
imulb
aas
mov
push
mov
shrl
mov
and
xlat
or
ds
out
push
call
mov
cmp
imul
push
adc
push
inc
pop
idivl
in
sbb
mov
cmp
repz
lret
call
inc
pushf
push
xchg
fistpll
inc
test
das
pop
aaa
dec
push
movsb
pop
js
inc
xlat
iret
icebp
inc
stos
mov
les
pop
iret
jo
jns
mov
adc
add
adc
push
push
jae
arpl
loopne
sub
jno
rcl
sti
scas
jae
ret
pop
aas
iret
popa
jnp
loope
push
and
push
and
popa
outsb
arpl
push
gs
insl
pusha
push
popa
jne
shlb
or
and
dec
bound
ss
xor
mov
mov
cmp
sahf
repz
xor
push
xchg
mov
out
ds
out
adc
inc
imul
aaa
lds
repz
cli
pop
lret
out
sahf
cmpsl
push
pop
jecxz
jno
jge
cmp
mov
mov
dec
adc
mov
popa
cld
out
cmp
gs
and
imul
je
or
jb
sarb
mov
jae
ss
sbb
and
and
mov
arpl
imul
and
and
adc
adc
icebp
cltd
add
and
and
mov
jne
je
ss
cmp
sbb
imul
xor
data16
sar
imul
mov
push
add
add
test
decl
daa
imul
sub
aaa
push
pop
push
shr
daa
repz
daa
inc
push
or
data16
sbb
dec
das
xor
mov
or
insl
dec
pop
xchg
lahf
or
insl
inc
or
or
adc
in
mov
jae
dec
movsb
ss
jmp
rorl
into
scas
mov
add
punpckhwd
out
jnp
xor
jb
inc
outsb
mov
filds
mov
cltd
inc
dec
and
pop
iret
xchg
out
and
stos
push
orb
mov
das
adc
adc
pop
mov
and
and
fs
and
dec
bound
push
mov
scas
loopne
pop
and
outsb
add
ss
js
test
sbb
aaa
dec
adc
xchg
je
data16
xchg
cmp
adc
mov
loopne
jnp
jmp
xchg
mov
xor
outsl
mov
mov
sub
sbb
push
and
mov
inc
mov
cmpsl
js
inc
sbb
push
mov
dec
mov
adc
sysret
dec
cmp
mov
js
xchg
je
jmp
inc
cmp
and
mov
cmp
ficoml
push
sbb
mov
push
or
ljmp
or
inc
call
push
and
dec
and
repz
add
adc
inc
test
sub
stos
sub
lods
testb
iret
gs
push
insl
or
jae
in
pop
ds
repz
cs
add
push
aas
aaa
pop
bound
rclb
popa
xor
daa
sbb
mov
xor
cmpsb
add
pop
push
and
push
hlt
fcomi
pop
cmp
push
cli
cmp
or
aaa
fadds
shrb
outsl
test
addr16
add
adc
add
xchg
mov
ss
mov
nop
xchg
mov
cmpl
lahf
scas
movsl
push
pusha
dec
add
push
inc
jo
pop
inc
aas
inc
push
push
lods
inc
cmp
sbb
je
fiaddl
fildll
inc
bound
adcl
jge
sub
or
dec
ja
loopne
adc
scas
mov
fwait
aad
pop
cwtl
dec
iret
idivl
mov
xchg
shll
inc
popa
insl
test
arpl
dec
xchg
pop
adc
push
outsl
inc
nop
inc
sub
imul
and
xor
jns
lds
push
test
mov
xor
fdivrp
and
cmpsl
push
cs
lcall
orb
jp
mov
fbstp
lahf
iret
mov
push
outsb
out
mov
adc
cmp
sub
inc
pop
insb
insb
push
push
inc
or
dec
sbb
sbbl
aaa
arpl
stos
inc
filds
ljmp
imul
xor
mov
insl
xchg
xor
test
inc
pop
and
lret
arpl
imul
jmp
arpl
add
fists
cmpsl
mov
cmp
cmp
sub
dec
imul
inc
xchg
adc
stos
add
mov
push
aaa
mov
movsb
add
xchg
subl
push
add
pop
and
and
dec
daa
push
clc
xchg
fsubp
mov
loopne
loopne
push
xorb
jne
rcrb
or
es
daa
inc
mov
addb
bound
scas
pop
jbe
cs
xor
cmp
adc
push
xorl
arpl
mov
push
xchg
gs
add
repz
decl
notl
pusha
clc
mov
push
call
mov
push
jle
arpl
imul
loopne
popf
rclb
push
push
movsb
int3
mov
inc
jb
mov
cli
test
or
mov
test
dec
xor
popa
arpl
fs
inc
mov
jp
imul
mov
pop
aaa
xor
in
xor
and
xchg
pxor
andl
pusha
neg
test
lret
jmp
sbb
mov
push
or
pop
adc
sbb
stos
adc
inc
mov
push
ret
lahf
cmp
ss
xlat
popa
xchg
mov
cmp
mov
push
lods
and
mov
add
or
inc
mov
inc
out
sub
push
adc
aaa
push
imul
inc
rcrb
sub
dec
adc
push
and
ret
out
fwait
sbb
or
sub
xchg
sbb
sbb
aas
ja
bound
lcall
sbb
jmp
or
mov
pop
pop
shlb
cmp
or
cs
or
add
cmp
inc
pop
push
jb
clc
jo
xchg
push
mov
ss
aaa
pop
minps
fbld
pop
mov
fdivs
dec
push
add
dec
push
mov
push
dec
and
movsl
xchg
gs
punpckldq
hlt
push
xchg
jbe
jp
inc
pop
jg
xchg
gs
inc
and
iret
aas
cmp
ds
iret
outsl
iret
jp
testl
dec
shll
pop
sub
test
repz
jl
and
add
add
out
out
jecxz
or
mov
sub
xlat
iret
adc
cmp
inc
scas
adc
lahf
out
push
sub
loop
inc
fcomi
cmp
popw
push
push
push
mov
cmpsl
fldcw
pop
insb
pop
add
jl
insb
enter
mov
pop
jmp
popa
jno
xchg
adc
and
inc
mov
jnp
mov
popa
ja
adc
inc
testl
aaa
bound
or
test
adc
push
mov
rcrb
or
mov
pop
pop
ret
xchg
jo
sbb
push
jae
jae
dec
mov
sub
mov
pop
iret
imul
and
pop
scas
add
mov
mov
pop
cmp
nop
iret
jecxz
jo
out
mov
cmp
insl
and
out
ljmp
shll
push
pop
rcll
mov
les
or
scas
aas
aas
adc
fucomi
adc
aaa
out
fildll
and
or
cmp
add
sbb
mov
aas
adc
inc
test
daa
and
cmp
fwait
push
stos
inc
int3
lods
pop
ret
lret
imul
arpl
jg
outsl
repz
ja
jnp
jge
xchg
xchg
test
mov
fs
js
sub
cmp
outsb
sbb
mov
xor
xchg
jle
mov
insl
das
aaa
jb
pop
or
jno
add
mov
xchg
out
push
mov
testl
clc
sub
pop
push
adc
inc
add
rcrl
ss
inc
pop
sahf
push
mov
sub
push
in
imul
rcr
jo
jns
pop
and
fsubrl
xor
dec
and
in
call
dec
scas
inc
hlt
fsts
push
xor
cmpsb
xchg
fsubrs
or
adc
insb
dec
and
aad
in
jb
sub
aam
scas
xchg
test
xchg
mov
xchg
push
leave
xor
rorb
in
and
inc
sub
movsb
scas
xchg
stos
in
add
pop
add
test
pop
xchg
mov
int
leave
push
xor
mov
int3
insb
sbb
push
repnz
lret
jl
pop
and
push
sbb
add
icebp
idiv
mov
rclb
mov
cmp
rclb
mov
dec
adc
and
pop
dec
pop
movsl
cltd
sbb
dec
notl
mov
mov
sub
add
stos
add
sbb
push
inc
shrb
add
inc
jb
xchg
out
iret
dec
or
das
inc
scas
sbb
sub
xor
mov
call
pop
and
les
add
and
test
je
inc
test
push
popa
xor
insl
aam
shl
rep
xchg
dec
sub
rcrl
inc
filds
inc
int
push
imull
mov
aaa
shll
movsl
and
sub
or
mov
push
inc
push
or
insl
xlat
inc
and
sub
or
cltd
or
adc
outsl
scas
adc
stos
addb
dec
es
mov
push
scas
addr16
push
int
xchg
fildll
inc
scas
hlt
push
adc
jg
cmpsl
pop
popa
mov
inc
sub
adc
and
push
jnp
and
push
push
mov
and
or
cmp
rcll
das
or
mov
out
aaa
fildll
iret
aaa
outsl
mov
js
scas
push
or
inc
movl
and
aaa
outsl
jecxz
push
dec
popa
add
lahf
push
mov
adc
scas
add
cmc
xchg
repz
and
jg
andb
push
in
out
mov
add
movsb
or
inc
adc
data16
push
sbb
insb
xchg
inc
nop
push
mov
pop
out
outsl
imul
pop
mov
in
popa
movsl
iret
xchg
jae
and
mov
neg
jb
outsb
add
insb
iret
mov
popa
xor
jecxz
pop
lock
and
mov
lods
mov
jg
fildl
pop
mov
push
pop
or
push
push
mov
cvtpi2ps
andps
push
adc
pand
pusha
and
out
adc
inc
jl
and
jecxz
cwtl
mov
sub
inc
xor
pop
jne
addr16
bound
pop
outsb
hlt
cmp
push
sbb
cs
je
arpl
sbb
lcall
dec
push
adc
popa
xor
addr16
jecxz
faddl
xchg
jmp
add
mov
mov
jae
ss
or
pusha
jmp
bound
jae
js
js
jecxz
outsl
dec
js
xor
loope
cwtl
mov
or
or
loope,pn
jecxz
roll
arpl
and
imul
shl
xor
push
xlat
lahf
rorb
stos
pushl
loope
xchg
fwait
or
sahf
out
sahf
adc
sbb
sahf
out
inc
push
andl
out
sbb
cltd
fldcw
or
xchg
add
pop
push
add
or
adc
mov
add
jns
and
sub
data16
inc
iret
xor
inc
mov
mov
fnstsw
mov
mov
popa
xchg
add
shrb
ret
sub
shrb
lahf
data16
xchg
pop
adc
pop
add
sub
sbb
fwait
int
dec
str
push
cmpsb
scas
fldcw
inc
stc
das
incl
and
add
repz
repnz
mov
ss
cmpsl
push
pop
inc
ds
jns
aam
test
fcomp
repz
shrl
inc
push
arpl
mov
orl
movsb
dec
nop
ljmp
ja
rclb
mov
push
jb
push
add
mov
push
inc
mov
dec
add
imul
das
adc
sbb
inc
aaa
hlt
sbb
test
ja
cmpb
pop
push
pop
mov
inc
fs
sub
ljmp
orl
and
dec
cmp
jecxz
jmp
cs
cmpl
jne
fildl
mov
pop
das
or
idivl
iret
adc
xor
aaa
adcl
jns
mov
aaa
mov
add
inc
sbb
pop
sub
movsb
inc
mov
je
xlat
dec
rcll
push
dec
and
and
insb
xor
idivl
pop
sub
dec
imul
cwtl
and
rcll
lcall
bound
scas
adc
pusha
loopne
fistps
inc
lea
add
jmp
cmp
push
loope
aaa
push
fiaddl
ja
mov
dec
adc
mov
imulb
push
jbe
sbb
pop
jge
push
es
cs
cmp
or
subb
aad
out
and
out
js
imul
mov
bswap
mov
insl
xchg
testl
jb
inc
xchg
cmp
jns
xor
jae
fs
mov
lret
into
xor
sbb
dec
shlb
negl
jnp
inc
mov
or
push
xor
inc
cmp
adc
dec
xchg
je,pn
mov
js
inc
push
stos
jb
pop
mov
jns
dec
mov
bound
out
loopne
xor
xor
push
fisubrs
xor
cs
lret
pop
jl
outsb
jp
ljmp
inc
xchg
ja
retw
mov
push
inc
inc
fidivs
sbb
lcall
les
arpl
fs
inc
mov
loope
addb
push
pop
sbb
dec
dec
daa
divb
out
push
push
mov
cs
shl
add
inc
pop
pop
mov
sbb
dec
ss
outsb
pop
push
pop
mov
daa
dec
jb
das
inc
pop
dec
push
pop
ret
jnp
dec
das
add
and
ja
data16
inc
pop
push
sysexit
mov
pop
jns
dec
cs
sahf
push
outsl
jnp
sub
cli
push
push
insl
sub
mov
mov
insl
mov
inc
mov
ja
xor
push
jp,pt
jp
sahf
notl
ds
subl
sahf
dec
das
xor
lds
jp
pop
outsl
lock
or
xor
mov
outsl
jb
sbb
outsl
imul
pop
and
push
sbb
push
sahf
mov
scas
out
test
or
mov
arpl
or
add
xor
inc
mov
aam
jmp
lock
push
lahf
xor
pop
jnp
and
and
sbb
mov
xchg
out
add
lea
fisttps
push
inc
inc
jne
sbb
adc
shrb
jecxz
bound
nop
xchg
mov
scas
push
or
daa
and
jbe
lods
shlb
or
inc
lret
lret
mov
dec
pop
pop
cmp
aam
sub
shrl
mov
ror
mov
xchg
dec
test
notb
sbbl
inc
inc
lea
sbbl
adc
sbb
sub
cmp
push
stos
scas
testb
xchg
xchg
mov
and
lahf
xchg
xlat
or
push
xor
add
dec
daa
mov
lret
lahf
js
inc
loop
ja
sub
push
or
outsl
int
mov
stos
dec
outsb
icebp
mov
inc
dec
stos
bound
imul
push
addr16
cmpsb
jbe
push
add
cwtl
fldt
mov
fwait
mov
sbb
popa
fs
outsl
or
rol
clc
aas
lock
mov
aas
jnp
inc
pusha
and
push
inc
sub
cmpsl
addb
xchg
inc
lahf
scas
xor
cmp
inc
sbb
sahf
add
pop
or
sbbl
les
pop
sub
xlat
inc
outsb
jbe
lods
xchg
daa
add
adc
scas
add
das
push
sub
fistpll
sub
sti
pop
packsswb
pop
sbb
push
sub
aas
call
pop
sub
inc
sbb
aaa
cmpsl
add
addl
add
jb
jbe
addr16
mov
mov
mov
cmp
movsl
fdivrs
iret
mov
aad
das
and
mov
fwait
test
inc
mov
clc
adc
popa
fldt
push
xor
repz
inc
lods
xchg
dec
arpl
cltd
dec
push
mov
xchg
pop
xchg
mov
sub
inc
mov
mov
jns
addb
add
rcll
cmpsl
push
pop
pop
out
and
inc
mov
jo
mov
push
pcmpgtd
jge
mov
sbb
xchg
loope
imul
scas
in
loopne
leave
xlat
insb
push
jge
fsubrl
imul
dec
rolb
lock
mov
inc
aaa
ss
add
pop
nopl
add
das
shlb
mov
mov
pop
push
jg
push
and
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
std
decl
push
mov
inc
push
insl
ss
adc
cli
mov
sub
std
mov
jae
sbb
mov
sbb
mov
fsin
test
ds
pop
sbb
xor
mov
das
ss
dec
fsubs
sbb
mov
xor
dec
xchg
jecxz
dec
push
pop
mov
pop
adc
je
and
movsb
scas
icebp
xlat
cmp
cmpsb
mov
push
aam
pop
aaa
mov
insl
test
je
mov
out
cmp
push
inc
inc
pop
and
xchg
sub
mov
dec
mov
push
dec
cmp
cmp
inc
sub
pushf
xor
and
daa
iret
and
hlt
cmp
lcall
xchg
out
inc
les
sahf
xchg
out
dec
xchg
inc
outsl
pop
ljmp
mov
xor
lahf
pusha
inc
roll
mov
push
clc
or
xchg
aaa
imul
pusha
sbb
push
sbb
sbb
pop
cli
shrl
repz
gs
movsl
subl
jnp
cmp
ja
cmp
sub
adc
idivl
lcall
addr16
fildl
xor
fisubs
iret
bound
add
jae
or
push
lcall
inc
cwtl
cmp
imul
ljmp
je
bound
imul
add
ret
add
mov
mov
scas
outsl
adc
insl
sbb
push
add
test
add
pop
xchg
inc
sub
cmp
push
xchg
xchg
pusha
insl
push
scas
notl
je
add
sbb
xor
jo
xchg
outsb
mov
nop
pop
inc
dec
popa
jno
inc
mov
lds
add
mov
test
cmc
incl
and
push
add
inc
pop
fistl
push
sbb
and
lea
push
out
pop
dec
jge
sbbl
pop
pop
pop
popa
cmp
dec
gs
xchg
mov
push
cmp
fwait
scas
lods
pop
mov
cmpsb
push
jp
aaa
push
das
je
inc
test
pop
cmpsl
xorb
mov
pop
les
xchg
or
add
push
lods
aaa
dec
inc
dec
roll
add
fimull
repz
scas
jle
pop
in
lcall
pop
add
jge
out
cmpsl
adc
js
mov
pushf
pop
lcall
push
sahf
testl
jns
movsl
push
jle
in
repz
push
pop
mov
xchg
cmp
lods
pop
data16
mov
repnz
push
push
adc
jbe
mov
push
outsb
lcall
fucomi
cmp
cld
adc
push
pop
sysret
mov
mov
aaa
push
pop
imul
fsts
xchg
cmpsl
xlat
insb
das
nop
test
dec
push
sahf
clts
insb
lahf
and
insb
movsb
push
inc
fmulp
data16
cmpsb
int3
loop
jmp
push
push
jl
sarl
divb
pop
jns
iret
sarl
out
fucom
cmc
xor
sahf
pop
xchg
inc
push
sti
mov
mov
and
sahf
aaa
nop
dec
ret
jge
sbb
imul
out
fisubrs
mov
fisubs
testl
lock
nop
insl
pop
stc
insl
iret
repz
jbe
outsb
push
das
inc
push
je
movsb
loope
shrl
outsl
pop
add
jns
negl
cmp
jl
scas
dec
lods
xchg
popa
push
fisttps
cmpsl
jge
and
push
scas
es
pop
jnp
jns
jno
inc
adc
movsl
ss
in
xchg
fwait
push
or
inc
es
mov
ja
sub
filds
das
inc
stos
jo
rcr
lret
pop
lcall
pop
push
add
dec
repz
or
cmp
iret
repz
shlb
push
push
bound
jge
push
xlat
mov
int
imul
rcrb
jl
imul
gs
iret
repz
je
mov
out
lcall
push
push
orb
repz
add
inc
push
jns
out
mov
testb
jg
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
mulb
or
adc
mov
mov
pop
push
test
add
idivb
jg
dec
mov
and
pop
sbb
enter
jg
cmp
adc
or
adc
cld
pusha
or
add
and
in
add
shlb
inc
and
ja
sub
push
xor
std
ds
and
insb
imulb
loope
ja
outsb
outsb
pop
push
adc
test
vmread
xor
jbe
imul
dec
xor
inc
xchg
xor
and
dec
inc
out
pop
pop
test
push
lods
dec
imul
stos
mov
jo
push
gs
pop
mov
ret
push
dec
mov
sub
out
xor
popa
je
mov
sbb
push
lcall
and
loop
scas
pop
inc
mov
loop
fwait
jge
pop
push
ficoml
cs
pop
rolb
jmp
push
jae
jmp
sbb
add
adc
js
push
dec
mov
inc
inc
ljmp
jg
sub
aaa
nop
push
xor
mov
mov
loope
arpl
push
mov
repnz
pop
scas
xlat
add
push
out
xlat
push
jecxz
jmp
jo
push
jo
push
add
mov
inc
or
daa
ret
mov
jno
sbb
xchg
stos
in
jnp
mov
mov
test
mov
jb
xor
xor
clc
inc
pop
outsl
addl
fs
push
arpl
add
lock
movl
repz
push
xor
fisttps
enter
ljmp
daa
ret
stos
xchg
mov
mov
push
and
cmpsl
ljmp
jbe
jo
xor
mov
sbb
add
outsb
push
jnp
xchg
loopne
or
jle
jmp
shlb
dec
cmp
and
mov
rol
and
jb
fwait
lods
mov
jcxz
xchg
add
daa
cmp
or
push
mov
insl
aad
ja
dec
push
idivb
push
push
adc
mov
lock
rsqrtps
loopne
addr16
push
test
pusha
insb
or
gs
pop
mov
scas
xor
pop
movsl
test
push
scas
inc
ljmp
jo
bound
xor
inc
pop
addr16
jnp
xchg
jo
inc
movsl
inc
ja
iret
xor
or
das
das
movsb
jecxz
pop
adc
inc
mov
ja
insl
stos
cmp
mov
das
pop
jg
mov
push
inc
loope
lods
pop
pop
ja
add
mov
jbe
data16
push
scas
outsl
aaa
imul
test
pop
fwait
loope
out
xchg
das
notl
sbb
inc
das
filds
jl
fbld
jb
shll
pop
adc
cwtl
sbbb
divl
das
mov
xor
insl
xchg
ret
sub
stos
inc
ret
and
pop
mov
ret
sbb
and
mov
out
jb
out
jbe
stos
or
pop
push
cmpsl
mov
pop
inc
pop
scas
fcoml
inc
and
xor
hlt
jo
adcb
mov
jo
sbb
cmpsl
add
xchg
pop
mov
inc
push
inc
aas
sbb
jecxz
jne
jae
or
inc
cmp
pop
add
lods
ja
xor
push
inc
mov
dec
inc
xchg
or
inc
aaa
adc
inc
sbb
jp
inc
push
pop
pop
inc
ss
shll
faddp
lds
sbb
push
cmp
add
cmpsl
divb
daa
ret
pop
ret
idiv
pop
dec
loopne
add
inc
xchg
adc
mov
inc
adc
scas
inc
sbb
jns
xadd
or
dec
sbb
cmpsb
lret
int
cmpl
or
je
fisttpll
popa
insl
jo
je
add
addr16
out
std
lea
aas
jo
jae
daa
pop
jno
outsl
xor
inc
mov
insb
inc
sub
pop
mov
xrelease
scas
inc
or
je
jne
or
scas
mov
adc
pop
dec
out
test
mov
inc
mov
xor
insl
mov
dec
pop
inc
mov
sub
je
lea
adc
imul
mov
js
xor
add
fcmovnb
xor
mov
movsb
lahf
mov
aas
and
or
pop
stos
pop
icebp
inc
test
out
sbb
test
sbb
mov
mov
jae
inc
push
mov
push
pop
adc
push
mov
dec
lods
sub
push
add
lock
sbb
adc
fisttps
adc
lods
cmpsl
pop
pop
inc
test
insb
lds
mov
or
sub
push
aam
jns
jb
add
push
iret
jmp
jbe
ret
ret
mov
or
xchg
dec
xlat
sti
mov
outsl
outsb
or
jecxz
js
aaa
inc
insb
cwtl
cvtps2pd
das
push
pop
daa
xchg
test
push
inc
cmp
adc
xchg
sbb
sbb
push
pop
sub
mov
xor
mov
xchg
add
inc
pop
leave
xor
pop
mov
fiadds
jg
ret
mov
add
pop
sub
pop
add
xor
push
add
call
sbb
insb
andl
js
loop
adc
in
or
xor
das
ds
das
sbb
out
pop
add
add
pop
daa
fistps
push
and
push
pop
inc
mov
inc
push
inc
pop
and
or
aas
js
insb
cwtl
dec
mov
pop
push
or
mov
inc
add
les
outsl
pop
adc
add
jge
imul
push
push
mov
inc
popw
push
sbb
ja
push
dec
aaa
push
add
add
aam
incb
mov
add
xorl
cmp
data16
push
add
push
and
xor
inc
lahf
fwait
in
jnp
mov
testl
mov
mov
fldl
push
mov
dec
inc
push
sbb
loop,pt
lret
adc
sarl
cmpsb
inc
push
xlat
das
xchg
add
inc
inc
fdivs
movl
or
pop
add
outsl
inc
icebp
mov
or
cmpsl
push
or
lds
daa
incl
push
enter
dec
mov
jbe
jnp
out
std
xor
push
sbb
xor
sub
jb
rcr
or
push
pop
adc
pop
pop
js
outsl
arpl
popa
add
negb
je
and
and
arpl
mov
fisubrs
push
es
push
inc
fsubrl
add
xchg
and
je
mov
popa
stos
orb
add
out
inc
fcompl
loopne
sub
sub
push
and
mov
lahf
sbb
mov
and
push
push
pop
jbe
add
outsl
fs
gs
jo
or
mov
mov
push
addl
jne
sub
mov
add
or
addr16
and
push
mov
pop
gs
inc
or
mov
insb
jg
negb
popa
push
pop
inc
popa
imul
xor
aaa
mov
outsl
jo
data16
popa
imul
dec
sub
in
jno
xlat
das
mov
sti
mov
or
inc
xadd
sbb
inc
shrd
repnz
loop
movswl
mov
cmp
cmpb
aas
nop
jo
cmovns
pop
pop
pavgb
ret
fildll
pop
or
ud0
push
mov
loopne
dec
stos
mov
inc
test
stc
mov
das
mov
mov
rolb
cld
je
roll
mov
mov
sysexit
push
addr16
adc
add
inc
push
push
push
insb
insb
mov
mov
inc
add
lods
jne
adc
stc
pusha
in
lods
add
daa
movsb
les
fsub
mov
daa
enter
in
mov
and
addb
das
inc
sub
xchg
push
repnz
pop
fs
sarl
imul
or
inc
aaa
or
dec
sub
aam
adc
cmp
or
dec
mov
lock
mov
scas
jg
data16
xchg
adc
add
ret
out
repnz
ret
mov
aad
and
ja
fiaddl
ja
mov
push
icebp
bound
lds
outsl
fsubrl
in
dec
scas
in
data16
add
dec
cmpsl
add
js
mov
les
xchg
cmpsb
pop
push
pushf
cmp
sti
je
popl
xorl
sbb
int3
push
fadds
enter
out
inc
add
pop
rorb
lds
insl
orl
out
sahf
outsl
xchg
cld
push
fs
or
xchg
jo
push
cmp
sarb
lods
lods
out
inc
xchg
outsl
pop
enter
push
mov
pop
decl
mov
inc
push
and
add
mov
dec
mov
daa
push
add
mov
daa
test
addr16
aam
push
enter
in
aad
add
outsl
call
enter
iret
jnp
and
xor
test
dec
iret
ja
pop
inc
sahf
or
je
inc
jno
icebp
inc
enter
pop
leave
jae
outsl
sub
fcoms
call
inc
cs
enter
fistpl
je
addr16
enter
js
xchg
xchg
negl
aam
test
test
mov
mov
add
lahf
push
aaa
in
add
adc
sub
daa
in
addr16
movsb
stc
adc
dec
pop
or
pusha
aaa
ds
dec
in
dec
or
xor
leave
push
movsb
push
mov
inc
scas
subb
daa
xchg
in
nop
out
loopne
clc
mov
loopne
fstpt
repnz
cmp
js
inc
das
fcmovb
pop
mov
xchg
pusha
lret
addr16
and
xlat
dec
hlt
pushf
mov
mov
das
jbe
test
sbb
lock
adc
push
aad
popf
out
fidivs
lahf
or
pop
enter
lret
or
inc
sahf
push
pusha
push
pop
bnd
ja
mov
cmp
mov
mov
es
pop
int3
lahf
mov
or
xor
inc
push
mov
jb
push
lahf
in
jae
insl
cmpsb
daa
lret
sahf
adcb
dec
lahf
xorb
test
loopne
sbbl
ds
fs
out
xor
xchg
sbb
push
inc
int
push
out
pop
popf
outsl
jg
nop
nop
out
nop
je
cwtl
hlt
cs
mov
sahf
or
fsubr
scas
xlat
cmpsl
test
mov
iret
in
into
sub
inc
push
cmp
imul
bound
imul
xchg
add
jns
push
cmpsl
cs
nop
jo
aam
adc
jns
test
cmp
jo
iret
fs
fistps
sub
cmpsl
jo
jl
or
movsb
insb
pop
repnz
jl
int3
movsb
iret
test
rol
nop
iret
jae
shl
jo
cs
cltd
rol
cld
sti
fiadds
cmp
adc
cmpsl
pop
pop
and
cld
jg
add
pop
test
cmp
dec
xor
dec
ja
dec
and
test
enter
add
les
sbb
sub
lahf
stc
push
enter
test
jns
in
push
nop
test
aam
in
nop
test
enter
mov
rcll
rcrb
pop
enter
add
out
cmpsb
dec
rcrb
mov
pop
push
push
cmpsl
jg
test
cmpsl
mov
test
mov
xchg
hlt
add
or
and
xchg
cmpsl
adc
mov
rcrl
fwait
lcall
pop
jnp
mov
dec
lock
daa
addr16
sahf
mov
sbb
pop
ja
iret
inc
stos
clc
pop
dec
in
cld
adc
out
in
pop
push
add
test
push
push
fs
mov
jg
mov
xchg
movsb
mov
orb
xchg
fcoml
clc
or
aas
sub
orb
call
ds
dec
sahf
push
lds
aas
pop
repnz
ja
inc
mov
inc
mov
out
inc
and
push
jl
mov
out
jmp
lahf
movsb
inc
iret
xorl
enter
nop
push
movsb
inc
hlt
pusha
insl
sbbl
inc
cld
aam
lahf
mov
inc
aam
shll
mov
xor
dec
xlat
mov
push
loopne
push
inc
jle
jmp
cmp
push
js
mov
dec
inc
ja
nop
addb
fsubs
cmp
icebp
in
xlat
push
je
and
sbb
push
add
cmp
lahf
mov
ja
rcr
subb
inc
inc
sahf
pop
imul
inc
hlt
rclb
in
inc
rcrb
test
rclb
fnstenv
cmp
dec
and
xor
xchg
push
dec
lods
lods
add
ljmp
rcr
lahf
cs
test
out
push
inc
mov
fcomp
fiaddl
inc
jg
imul
fisubrl
xor
ja
in
pusha
inc
in
fisubrl
cs
jl
int3
inc
in
jl
mov
inc
adc
lods
push
push
mov
and
in
inc
cld
inc
inc
pop
jbe
or
and
iret
cs
loopne
inc
cld
jo
fiaddl
jo
mov
and
inc
cwtl
adc
adc
mov
outsl
push
add
cwtl
inc
jg
test
inc
hlt
add
in
andb
dec
inc
hlt
lahf
sahf
or
pop
call
imul
inc
call
jle
adc
xchg
movsb
mov
sbb
dec
lahf
xchg
lahf
or
cmp
hlt
add
enter
cmp
mov
xor
inc
push
push
lods
sub
ja
pop
enter
test
xchg
test
jae
iret
enter
pop
jb
pop
enter
pop
mov
and
divl
xchg
push
mov
inc
outsl
test
or
aad
mov
push
pop
addr16
dec
movsb
pop
enter
mov
jae
pop
in
cld
fidivl
push
mov
xchg
and
cmp
sbbl
mov
insl
outsl
aas
cmp
xchg
pop
mov
mov
mov
pushf
or
or
fbld
fiaddl
ds
shr
cld
or
pop
and
popl
xchg
dec
dec
cmpl
mov
cltd
pusha
insl
addr16
les
adc
pushf
jo
bound
mov
insl
or
xlat
mov
test
push
push
fndisi(8087
dec
ret
push
lods
push
cmp
xor
xchg
or
inc
nop
or
mov
outsl
ds
outsl
aaa
or
or
mov
inc
dec
daa
push
xor
loop
inc
and
cmp
push
jb
xor
jb
push
sub
lahf
bnd
add
daa
push
adc
sahf
cmpsl
fldcw
jecxz
jmp
mov
mov
loopne
ss
push
pop
mov
repz
cmpsl
cwtl
jl
or
jmp
adc
call
push
out
mov
push
mov
ds
shl
repz
push
cld
in
push
out
lcall
js
js
pushf
pop
outsl
or
pop
jecxz
push
rclb
or
iret
insb
les
add
cmc
push
cmp
test
in
add
enter
popa
ret
call
mov
fdivp
mov
out
testb
mov
imul
and
add
fcmovb
das
jl
jg
dec
xchg
xchg
dec
dec
pop
in
in
dec
outsl
in
hlt
add
inc
shll
das
sbb
sub
xor
dec
mov
or
outsl
add
test
pop
repnz
enter
lods
xchg
pop
jb
mov
in
leave
int3
cmp
out
in
sub
xchg
cmp
adc
decl
lock
out
push
adcb
leave
mov
outsl
out
xor
fstp
xor
sahf
ss
ss
add
mov
fmull
pop
leave
mov
pop
scas
add
outsl
out
mov
xor
jae
pop
jb
mov
movsb
call
xchg
popa
fildll
loop
orl
es
mov
aaa
shr
test
mov
enter
repz
push
lock
je
dec
xchg
mov
xlat
mov
inc
ja
pushl
add
add
sub
sub
adc
inc
dec
sub
dec
xchg
fildll
scas
fs
and
fisubrs
or
inc
or
xor
decl
or
xchg
and
fmuls
fidivs
lock
scas
add
sbb
and
add
add
fdivl
pusha
add
jo
int
add
cmpsl
in
push
mov
ss
out
fdiv
fisubrs
xchg
nop
sub
jmp
hlt
daa
cmp
add
rorb
loopne
xor
pop
pop
push
sbb
mov
lock
sub
jg
inc
mov
push
sub
mov
mov
jnp
ret
nop
pop
sbb
jecxz
mov
repnz
or
ja
in
imull
jbe
dec
sbb
jbe
mov
in
outsl
push
adc
outsl
jg
test
xchg
daa
daa
ret
testl
push
cmp
icebp
push
loopne
out
scas
mov
push
lods
cmpsl
cmp
js
or
int3
popa
ficoml
out
mov
sub
test
pop
fs
add
adcb
out
push
xlat
xor
xchg
dec
outsb
mov
lds
shrb
sbb
xchg
dec
sbb
dec
or
int3
out
push
xor
dec
adc
or
xor
pop
inc
out
add
sarb
mov
outsl
and
ss
repz
leave
add
pushf
add
push
pop
call
or
sbb
pop
or
aaa
mov
aad
cmpsb
xchg
aaa
cmp
push
lds
or
jmp
je
add
scas
mov
cmpsl
mov
pushf
enter
mov
bnd
jecxz
pusha
cwtl
pusha
sub
daa
pop
add
pop
icebp
ja
scas
in
mov
xlat
xchg
faddl
test
jb
mov
leave
add
nop
mov
push
sub
repnz
push
clc
das
outsl
add
push
sub
or
dec
adc
mov
pop
nop
repnz
clc
inc
ds
repnz
and
test
fidivs
test
pusha
pop
leave
lds
insb
insl
and
xlat
add
jo
sahf
iret
mov
aad
daa
lock
mov
or
je
push
jb
add
outsl
mov
and
les
cmp
push
in
lcall
inc
and
hlt
mov
je
jns
inc
xchg
or
mov
aas
add
or
hlt
cmpsl
or
dec
jno
xor
aas
or
dec
daa
in
hlt
mov
push
hlt
dec
sub
outsl
add
mov
in
movsl
dec
iret
test
or
test
in
xchg
add
push
xor
add
add
ret
cmc
incl
cmc
pop
scas
add
rorl
outsl
adc
jbe
pop
leave
add
sbb
lahf
mov
dec
lock
cmp
repz
in
cmp
out
or
add
push
enter
out
jno
sub
addr16
subl
imul
sbb
xor
aaa
sbb
mov
sub
addr16
dec
not
nop
lods
lret
imull
xor
mov
not
fwait
jl
xchg
cwtl
testl
xchg
mov
enter
pop
fsubr
mov
out
pop
enter
clc
inc
testb
cmp
lahf
shlb
iret
mov
ja
in
push
js
in
sub
ja
or
fsubr
jne
daa
addr16
sbb
inc
inc
xor
push
ret
ja
mov
imul
ljmp
fldcw
mov
dec
push
push
jb
jae
lcall
xchg
sarl
xchg
mov
out
cmp
jne
shl
sbb
inc
imul
arpl
cmpsl
stc
or
int
negb
mov
mov
rolb
lea
dec
imul
sahf
xchg
mov
out
imull
sahf
lock
out
out
push
xchg
outsb
push
xchg
jl
xchg
gs
enter
into
idiv
and
sahf
out
lcall
cmp
sarl
and
sahf
cmpsl
stc
xor
sahf
out
out
adc
into
cmp
repz
sets
cmpsl
stc
pop
cltd
dec
mov
and
pop
nop
mov
sti
idivl
out
fwait
dec
je
fwait
jbe
sahf
out
pushf
push
outsb
xchg
rcrb
popf
out
ds
rcll
lock
out
cmp
hlt
xchg
lahf
jecxz
mov
pop
ret
add
out
xchg
mov
push
jns
jns
mov
sti
aaa
mov
ds
rep
pop
jmp
movsl
jae
ss
out
cli
push
int
fucom
int3
adc
mov
roll
test
cmp
fwait
ret
pop
stos
out
out
andb
iret
repz
mov
mov
lcall
pop
fwait
iret
repz
mov
scas
cmp
test
daa
mov
mov
sub
mov
shrl
jecxz
mov
mov
repz
out
mov
mov
repz
inc
outsb
cltd
ljmp
repz
lret
mov
int
loop
mov
repz
out
aad
mov
lcall
mov
sbb
mov
pop
push
rcrb
jl
into
cld
dec
ret
ret
dec
repz
pop
shl
les
sahf
cmpsl
stc
cmp
cmp
jge
jmp
iret
sarl
jno
divl
jl
out
insl
mov
jns
iret
shll
leave
push
mov
inc
lret
lret
in
int3
jl
iret
sarl
pop
int
inc
into
jns
iret
shll
pop
iret
adc
daa
rclb
loopne
rcl
jl
cmpsl
dec
je
adc
pop
out
ds
stos
inc
aam
test
mulb
aad
rolb
sub
aas
pushf
lahf
out
ds
aaa
xchg
into
push
fnstcw
out
repz
xchg
loop
push
fiaddl
out
ds
xchg
jecxz
fistl
int
fmull
out
cmp
aaa
fisubs
in
fisttps
jns
pop
mov
xor
jo
int
imul
pop
jecxz
int
repz
cli
inc
in
out
xor
jmp
jmp
in
push
jno
in
fldcw
out
and
lcall
fnstcw
mov
cli
mov
push
add
stc
int
fld
in
jae
imul
cmp
xor
dec
push
add
das
fmuls
out
mov
nopl
inc
push
aas
xor
sub
aam
aas
test
pop
mov
das
jae
lods
incl
inc
mov
xlat
mov
leave
mov
popa
int3
aaa
mov
in
inc
pop
mov
mov
jp
sti
jnp
inc
cmp
mov
repnz
rorb
and
test
inc
jmp
add
pop
xor
int3
aad
add
xchg
rcrb
cmp
mov
pop
lds
xchg
dec
pop
fwait
in
inc
push
pop
mov
adc
mov
mov
mov
lahf
loop
loop
xor
icebp
inc
sti
mov
jbe
inc
inc
pop
je
shrb
pop
inc
das
mov
inc
push
and
and
push
inc
sub
shl
and
ret
xor
fimull
xchg
dec
dec
data16
mov
in
aad
cmc
ficoml
outsl
ss
jo
daa
mov
incl
fs
push
add
test
jae
push
daa
test
fcoml
add
mov
jns
in
xorl
jno
cmp
adc
jbe
faddl
inc
lock
shll
leave
test
add
add
sub
sub
dec
jo
jns
inc
push
push
push
pop
cmpsl
nop
sbb
ret
jl
mov
xor
add
out
adc
scas
movsb
loopne
mov
dec
sbbl
jmp
dec
pop
mov
leave
addr16
pusha
inc
pusha
out
cmp
cmp
push
out
loope
xchg
xchg
add
leave
and
mov
mov
out
mov
ljmp
popl
mov
scas
jns
aas
orl
mov
mov
jg
adcb
fildl
iret
frstor
lods
and
js
add
daa
pop
insl
xchg
mov
ja
inc
mov
in
mov
sbb
push
roll
addr16
nop
aaa
fdivrs
test
and
xchg
dec
cs
push
out
in
mov
and
adc
in
ds
add
jo
mov
cmpsl
pop
enter
and
scas
hlt
xlat
je
ret
mov
push
movb
mov
je
in
add
testl
xchg
dec
pop
inc
xchg
xchg
jl
stos
inc
adcb
je
mov
pushf
cmp
push
cs
xchg
mov
or
xchg
adc
inc
andb
inc
inc
testl
fnsave
daa
cmp
loope
je
mov
xor
test
mov
pushf
pop
into
out
shlb
inc
aam
add
dec
jg
leave
mov
ja
or
dec
adcl
xlat
fldl
test
add
xchg
jne
jl
mov
xchg
pop
lahf
scas
push
mov
pop
scas
inc
inc
das
mov
sub
repnz
adc
add
iret
into
add
loopne
jmp
addl
out
mov
fisubl
push
xor
mov
leave
and
bound
mov
sbb
addr16
enter
repz
and
scas
dec
jne
mov
dec
push
pop
mov
cld
or
or
or
popw
inc
inc
push
insb
push
cmp
xchg
scas
pop
mov
mov
mov
movsb
fnstsw
mov
in
cmp
ja
cmc
xchg
in
daa
sbb
mov
and
sub
inc
mov
leave
dec
adc
arpl
dec
jae
orl
scas
paddusw
pop
mov
mov
cmpsl
nop
out
pop
ficomps
mov
add
jb
enter
push
jne
jns
add
push
out
sahf
out
or
insb
or
sahf
ja
test
adc
push
sbb
mov
les
iret
daa
cmp
cmpsb
lods
adc
nop
mov
addr16
cmp
add
xor
and
orl
dec
leave
cmpsl
cmp
and
mov
cltd
nop
movsb
nop
mov
mov
jb
nop
nop
aam
loope
and
sbb
dec
or
adc
inc
into
dec
adc
sub
outsl
pop
dec
xchg
aas
dec
adc
and
test
sbb
rcr
cwtl
push
daa
mov
leave
xchg
cmc
cli
inc
add
roll
mov
pusha
iret
adc
xor
je
cmpsl
out
aaa
jb
out
daa
xchg
push
leave
dec
js
add
add
dec
jno
aas
push
add
mov
filds
pop
fcomip
or
repz
mov
push
mov
popf
xchg
or
pop
addb
outsb
dec
jns
popf
or
mov
addr16
shlb
adc
daa
cmp
adc
in
aas
and
xchg
pop
push
and
add
cmp
ja
xchg
push
xchg
inc
mov
fs
jb
adcb
mov
fcoml
ss
jcxz
leave
and
loop
fwait
adcb
adc
push
aaa
and
cmp
xchg
sub
sbb
add
fildll
pop
fistl
adc
jo
jns
jg
adcb
insb
mov
pop
das
mov
xchg
or
in
sbb
inc
cmpsb
xchg
xchg
sbb
add
outsl
sbb
in
sahf
pop
cmpsb
inc
outsb
add
rcrl
insb
sbb
cmp
mov
push
scas
push
add
movsb
jnp
push
xlat
xchg
push
mov
movsb
lea
cmp
lock
add
cmpsl
mov
xor
daa
push
xchg
or
or
aaa
clc
cmp
ja
adc
mov
push
cmp
sbb
cmc
mov
dec
push
daa
sbb
mov
pop
cmp
inc
adcb
adc
add
test
aaa
cmp
or
mov
test
scas
xchg
leave
xchg
mov
ret
add
ret
leave
imul
out
iret
enter
cld
ja
xchg
add
inc
pop
and
xchg
cmp
mov
addr16
pop
cmp
add
cld
sbb
mov
fnsave
lds
cmp
push
enter
pop
sbb
xor
sbb
push
inc
cmp
fcompl
sub
incl
push
call
sbb
push
pop
cwtl
gs
jo
out
sahf
out
add
cmp
pushf
push
test
daa
pop
leave
push
jecxz
cwtl
sbb
nop
inc
fistpll
cmp
push
scas
cmp
jno
daa
adc
jns
xchg
push
lods
mov
xlat
add
pop
jle
mov
ja
adc
movsb
ja
pop
outsb
jmp
xor
enter
push
mov
pop
pop
lcall
pop
inc
lcall
das
addr16
pop
mov
mov
xchg
pushf
pop
and
into
mov
repz
push
fwait
xchg
fwait
adc
push
inc
fwait
call
imul
add
pop
mov
cs
xchg
pop
and
aam
add
pushf
sub
scas
sub
scas
in
mov
scas
sub
and
cltd
loopne
cmpsb
popf
iret
or
adc
mov
fdivl
popf
fbld
and
push
add
mov
movl
mov
iret
je
in
pop
jo
iret
add
cmp
vmwrite
and
and
and
mov
and
test
push
and
and
inc
and
sahf
or
mov
outsl
push
movsl
push
out
insb
outsl
je
pavgb
aas
push
lahf
iret
jae
cmp
add
repnz
stos
mov
and
dec
or
sbb
inc
das
cmpsl
in
jl
das
inc
xchg
das
insb
and
cs
cmpsl
outsl
jl
pushf
xorl
push
ja
repnz
adc
sbb
jmp
lahf
repnz
aas
lahf
dec
lahf
push
lahf
repnz
xchg
xlat
out
cmpsl
jmp
aad
fisttps
adc
and
mov
mov
ja
jae
mov
push
daa
push
jns
jmp
pop
mov
add
in
in
popf
das
cmpsl
push
add
cmp
imul
mov
mov
sub
xchg
push
push
pop
les
sarb
mov
jnp
mov
mov
jb
inc
rcll
js
loopne
mov
mov
mov
ja
mov
leave
add
or
orb
scas
shrb
cmp
cs
push
push
mov
adcb
inc
aaa
sbb
pop
mov
pop
jb
xchg
inc
dec
fildll
push
jb
sub
sub
aas
aaa
lahf
xchg
scas
cmp
daa
lahf
lods
pop
mov
in
cmpsl
enter
lahf
in
and
or
pop
dec
sub
xchg
fisttps
movsb
push
movsb
xchg
out
shll
push
add
daa
fstpl
push
pushf
lret
lods
cmp
cmpsl
xchg
add
out
or
lret
fbstp
dec
aad
loopne
dec
push
mov
pop
or
or
mov
jns
or
enter
out
xor
hlt
ss
movsl
and
sub
and
shrb
push
fstpl
push
mov
cwtl
out
insb
daa
mov
in
orb
addr16
pop
ljmp
or
in
nopl
cmp
iret
pop
dec
pushf
jecxz
repz
cmpsb
jmp
jbe
test
jg
add
out
fistps
out
pop
scas
add
lds
iret
jae
jns
fldt
out
icebp
cmpsl
mov
das
pop
cmpsl
push
or
cmp
enter
push
sub
pop
iret
leave
repz
dec
adc
xchg
cmpsl
adc
sub
mov
push
xchg
push
mull
cs
push
xchg
data16
sub
fmul
out
sub
ss
push
push
pop
push
outsl
gs
out
pop
insl
cs
add
cmp
or
mov
mov
ja
dec
inc
or
stc
push
xchg
cs
dec
fwait
test
test
daa
js
test
test
push
xchg
mov
and
in
jbe
xchg
test
adc
add
cs
and
bswap
cs
sti
inc
fcoml
add
dec
xchg
das
scas
pop
ficoms
out
out
divb
loope
repnz
das
sbb
and
sub
iret
in
insl
testb
dec
andnps
mov
and
push
xlat
loope
adc
xor
pop
sbb
bswap
jg
jmp
dec
outsl
daa
repz
sti
stos
pop
add
or
cwtl
jb
pop
add
push
stos
adc
dec
dec
add
jp
mov
mov
in
xor
jae
into
lods
mov
add
and
xchg
xchg
and
sahf
fwait
xchg
add
push
lods
adc
jle
xchg
lods
pop
lods
ljmp
shlb
push
lods
cmp
popa
lods
fs
mov
icebp
incl
pushl
xor
test
xor
test
test
inc
scas
xchg
scas
lods
inc
stos
movsl
sbb
mov
call
loopne
pusha
addr16
out
lods
in
xchg
xor
and
xor
inc
dec
repnz
leave
add
add
mov
ret
push
daa
into
iret
add
inc
repnz
mov
sbb
clc
xchg
scas
push
jo
pop
xchg
cmp
ja
icebp
in
jne
jge
scas
jmp
andl
outsl
mov
jbe
roll
rcr
setb
loopne
iret
cs
jg
popl
scas
push
scas
xlat
popf
out
pop
push
push
add
xchg
cs
out
jns
add
in
dec
sahf
or
or
jns
out
or
or
sahf
push
jle
adc
xchg
adc
jns
unpckhps
scas
push
mov
clc
jl
mov
inc
xlat
out
cmp
loope
mov
push
add
daa
pushf
das
pop
mov
cvtpi2ps
leave
push
mov
jmp
mov
lods
iret
into
lcall
lock
pmulhuw
pop
das
pop
mov
pop
mov
pushf
pop
mov
addr16
inc
or
leave
mov
inc
aaa
xchg
insl
and
mov
fisubrs
push
adc
ss
aad
add
insb
aaa
xchg
mov
push
mov
js
shll
xorb
fdivl
xchg
cld
lods
and
mov
mov
pop
jo
cmpsl
int
aad
dec
in
in
or
in
in
int
out
or
prefetch
xchg
out
syscall
ss
inc
cmp
push
aas
jnp
pop
repnz
adc
add
pop
or
cmp
into
push
movsb
or
mov
inc
adc
cmp
cmp
popa
inc
test
imull
mov
sbb
popl
push
subps
insb
daa
add
pushf
pushf
test
jo
push
or
cmp
in
cmp
pop
cmp
stos
mov
sub
xchg
ret
xorb
aas
scas
dec
incb
scas
mov
fisubrl
cmp
cmp
nop
pop
pop
lds
fisttps
mov
mov
xchg
out
inc
push
add
aaa
mov
push
add
out
mov
push
iret
jae
mov
orl
xchg
or
add
mov
enter
add
repz
in
mov
push
add
add
cmp
dec
pop
pop
or
repz
or
subb
or
cmp
sbb
or
daa
aam
pop
xchg
add
fdivl
rorb
fisubs
adc
testl
or
fs
je
cmp
fnsave
xchg
sub
dec
ss
xchg
ds
jmp
outsb
iret
inc
lcall
mov
out
jmp
nop
aaa
pop
inc
incl
fnstsw
jns
cmp
cmp
mov
cmp
imul
mov
scas
mov
and
int3
invd
adc
push
mov
les
imulb
ds
pop
iret
pop
xor
insl
addr16
mov
mov
ja,pt
mov
lret
dec
sahf
sbbl
fimull
add
push
cmp
and
add
push
push
daa
clc
ds
insl
mov
notw
ja
pcmpgtd
jl
outsb
rorb
add
push
mov
out
jns
or
xor
stos
scas
add
sahf
fsub
mov
mov
in
outsl
cld
sbb
add
mov
push
lods
aas
in
aas
fs
bound
xor
leave
push
incl
inc
inc
jle
add
cmpsl
or
add
inc
dec
popf
xchg
out
push
rcpps
arpl
fisttpll
out
add
jnp
and
adc
cwtl
sbb
aas
stos
mov
mov
cmpsl
aas
in
fistps
inc
sbb
aas
pop
sbb
xchg
movsb
movsb
nop
fwait
pop
mov
inc
scas
mov
dec
sbb
xor
or
inc
aas
in
xor
adc
filds
leave
enter
push
pop
pop
and
jb
outsb
inc
and
xchg
incl
and
jmp
movsl
mov
btc
in
jbe
enter
jmp
pop
rcr
lahf
inc
and
addb
jg
mov
inc
or
dec
add
shlb
popf
subl
add
jg
add
mov
pop
inc
ja
andb
mov
sahf
jo
lock
pop
leave
and
add
xchg
mov
sahf
pop
add
js
cmp
addr16
xor
imul
movsl
ficoml
ja
ja
dec
dec
cs
jmp
bound
mov
ss
mov
jg
mov
rcll
push
jb
pop
jb
mov
pop
call
xchg
out
psraw
jmp
rclb
mov
in
in
xor
xchg
pop
and
add
sbbl
lsl
mov
lods
cmpsl
aad
dec
dec
mov
das
inc
call
es
cwtl
inc
decl
push
mov
inc
push
fsubrl
je
jl
xchg
xchg
add
add
imul
pop
mov
mov
jns
aam
or
ljmp
push
cmc
pcmpeqb
pushf
pop
cmp
or
outsl
adc
inc
pop
xchg
ds
add
popf
cmp
dec
das
push
lret
mov
daa
pop
data16
loop
ja
das
movd
aas
or
fildl
dec
rcl
mov
repnz
lret
push
shlb
rorl
push
xlat
rcll
shl
cmp
shr
leave
dec
push
daa
push
add
fbstp
mov
cmpsl
mov
scas
xchg
push
lahf
out
fisubrs
pop
mov
dec
je,pt
mov
rcll
pop
jmp
icebp
fisttps
and
ficompl
add
outsl
inc
ret
mov
scas
pop
xchg
cmp
test
bswap
dec
out
mov
mov
ja
negl
pop
cltd
popf
sbb
ret
dec
sbb
testl
enter
dec
loopne
addr16
js
sets
mov
aaa
mov
mov
xchg
cmp
fldt
fdivrl
les
push
pop
add
pop
push
aas
push
mov
xor
iret
les
jns
xchg
dec
push
mulps
add
jb
in
imul
pushf
movsb
in
mov
lahf
mov
iret
push
rorb
enter
addr16
mov
enter
sub
pop
rorl
xor
and
push
ja
in
negb
xlat
gs
jne
jb
sarl
mov
test
pop
ja
fcmovne
leave
lret
rcr
pavgw
and
dec
dec
adc
pop
andb
dec
movhps
xchg
in
dec
jb
pop
xchg
dec
fcmove
leave
in
push
mulps
xchg
xchg
xchg
mov
movsb
mov
pop
lods
mov
repnz
mov
daa
pop
leave
lock
mov
insl
sub
dec
addr16
vphaddbd
mov
ljmp
outsb
daa
pop
sub
pop
pop
and
dec
gs
mov
cwtl
incl
push
xchg
push
mov
mov
out
add
enter
or
enter
dec
adc
push
movsl
xchg
mov
dec
push
jg
push
add
jns
leave
pop
clts
and
mov
xlat
or
pop
shr
scas
pushf
xsha1
cmpsb
dec
push
push
fsubrl
cwtl
dec
loop
in
pmuludq
xchg
daa
mov
les
leave
xchg
xor
movl
jae
push
in
in
push
mov
mov
dec
jbe
in
pop
dec
sub
js
cmp
mov
add
stos
out
and
push
add
add
enter
lret
push
mov
test
lret
mov
ja
in
ja
out
fmull
xchg
sahf
pop
das
ror
jae
jg
movswl
aas
out
in
aad
loopne
idivb
rorl
lret
out
push
push
or
in
in
xor
jnp
sahf
out
adc
adc
outsb
jns
into
test
xor
or
push
pop
lcall
int
pmullw
ja
mov
daa
xchg
shll
and
jne
in
xchg
sub
rdpmc
int3
fildl
cmp
leave
arpl
pop
int3
lahf
rclb
dec
outsl
outsl
mov
aas
pop
movsb
mov
mov
int
fldt
out
das
in
mov
aas
lds
xor
int3
test
jb
aas
aas
sbb
adc
fstpt
icebp
andps
pop
mov
clc
xchg
shrb
fcoml
mov
mov
mov
outsl
ret
outsb
fucom
jns
add
lar
pop
jns
out
fimull
loop
ljmp
cli
lar
into
or
sbb
xor
mov
insb
push
call
adc
into
pop
hlt
mov
outsl
fidivs
push
add
push
add
iret
fimull
sar
sub
outsl
fnstsw
jl
push
inc
invd
call
and
nop
or
unpckhps
ss
jge
jns
push
xlat
inc
push
fisttps
jle
ja
iret
push
iret
push
dec
xchg
icebp
and
call
xor
lahf
pushf
iret
movsb
iret
pop
cmp
inc
lfs
into
int
pop
les
mov
pop
adc
fimuls
mov
lcall
pop
rorb
mov
sahf
pushf
pop
pop
shlb
pop
inc
addr16
sar
jbe
jb
add
ud1
inc
out
out
add
mov
in
mov
int
daa
shrb
jae
negl
push
lahf
rclb
inc
mov
rcr
xlat
or
lea
sti
rolb
rcll
rorl
movsb
sbb
shr
cs
daa
in
and
nop
push
inc
rcr
adc
pop
sbb
daa
inc
mov
push
adc
imul
or
push
pushf
aaa
je,pn
ss
pop
scas
lods
cmp
iret
repnz
fwait
loop
std
or
aas
adc
add
in
push
sub
jg
repz
push
or
push
or
imul
out
sahf
out
push
orl
jns
xchg
adc
sahf
out
mov
out
sahf
out
fsts
in
lret
out
sahf
out
sbb
sbb
jl
sbb
push
adc
adc
adc
pushf
pushf
pushf
pushf
adc
push
or
ss
pop
or
sbb
cmp
pop
shl
mov
push
add
push
inc
add
xchg
nop
jmp
jl
dec
push
daa
mov
nop
fdiv
jae
popf
xchg
out
mov
mov
fwait
aaa
bt
loopne
and
mov
iret
adc
out
in
daa
or
and
or
repnz
rcr
repnz
pop
icebp
outsl
or
aas
test
inc
jg
mov
push
add
aam
or
or
inc
aam
addr16
xchg
mov
jmp
inc
ffree
aam
in
and
aad
in
and
int
fwait
xchg
ja
ja
daa
daa
pop
outsl
ja
pop
xchg
ficoml
pop
xchg
mov
aad
pop
rorl
xchg
or
pop
std
xchg
sub
and
call
xchg
inc
dec
xlat
and
xlat
pop
push
testl
clc
or
loop
daa
xor
lahf
mov
push
lahf
fbld
lfs
in
push
pop
les
push
or
repz
in
or
outsb
repnz
or
fnstcw
xchg
or
adc
in
bound
xlat
cmpsl
daa
xlat
add
xlat
aaa
sbb
ja
cmp
jo
adc
sahf
add
xchg
add
fs
xlat
pop
and
or
push
ja
mul
pusha
push
xchg
push
stos
sar
xchg
in
in
or
aam
in
neg
jbe
in
pmuludq
push
setle
into
lock
decl
pop
or
gs
mov
cmpsl
fdivs
pop
add
add
fs
daa
mov
push
cmpsl
pop
push
push
bound
mov
push
xchg
push
jb
add
orb
dec
xchg
lods
mov
fdivl
sub
divb
mul
incb
push
jg
fldcw
push
imul
aas
arpl
addr16
cmp
push
rorb
fcmovu
jmp
xchg
flds
cmp
test
fs
pushf
or
fidivrl
nop
pop
inc
add
test
lea
loop
push
pop
scas
mov
pop
cs
xor
gs
leave
mov
or
gs
aam
data16
es
xor
mov
pop
or
fcmovnu
pushl
out
int3
sahf
or
push
fisttpl
push
out
lea
jg
fldt
in
push
push
cmp
add
add
cmp
or
or
cmp
xchg
push
addps
push
pusha
fucomi
and
adc
xorl
sub
mov
jmp
inc
jb
leave
scas
mov
xchg
pushf
ljmp
addr16
mov
dec
fdivl
sub
push
jg
fmull
add
jns
add
push
mov
addr16
insb
or
addr16
mov
fcompl
mov
lret
rcrl
push
pushf
pushf
fdivrl
in
cmc
mov
sahf
pushf
incl
mov
daa
and
sub
dec
and
das
push
fstpl
push
xorl
test
mov
aas
push
sbb
lar
inc
out
fstpl
syscall
and
fstpl
bswap
jnp
sub
or
push
add
cvttps2pi
in
mov
decl
enter
mov
pop
adcb
and
sahf
out
push
pop
xchg
add
lcall
imul
dec
test
paddusw
enter
scas
repz
scas
push
js
pop
leave
inc
iret
fildll
push
into
mov
pop
daa
cmp
cmpl
dec
inc
jle
xchg
imul
or
adc
jb
push
cmp
adcb
dec
push
cmpsl
pop
pop
and
push
hlt
jp
xchg
scas
rolb
xchg
dec
imul
push
lock
hlt
and
inc
dec
adc
loopne
addr16
jb
leave
push
dec
hlt
pop
es
mov
cmc
rcl
mov
int
mov
fnstsw
leave
fimuls
add
xchg
out
dec
sahf
out
push
add
jb
rorb
add
add
imull
stos
jno
out
push
loope
push
push
push
repz
je
push
adc
leave
addr16
adc
es
jo
fcmovne
xchg
adc
push
loope
ja
adc
stos
add
xchg
jns
fisttpl
pop
movq
fucom
lods
clts
mov
pop
iret
leave
repz
int
ds
and
jo
clc
loope
int
stos
mov
adc
divb
gs
pusha
punpckhbw
pushl
jno
loop
js
cmpb
xchg
out
and
sub
or
pop
fsub
xor
inc
out
sahf
out
adc
push
adc
movups
nop
dec
dec
dec
outsb
pop
cwtl
mov
in
sbb
je
out
enter
and
ja
fsub
push
and
lock
test
fmull
add
jns
out
movaps
sub
sub
repz
and
sub
xor
cmp
inc
jne
mov
jecxz
xor
insl
push
jecxz
sub
xchg
jae
leave
sarl
xchg
mov
sbb
push
outsl
xor
xchg
outsl
outsl
push
daa
frstor
push
xchg
jecxz
push
ja
je
push
and
jo
mov
leave
rcl
ftst
inc
repnz
jmp
das
cmp
fistl
aas
add
repnz
lahf
push
add
repnz
push
js
pop
xchg
out
mov
xchg
repz
sahf
das
cmpsb
dec
scas
movzbl
ret
push
out
out
adc
iret
repz
adc
adc
in
sahf
out
adc
adc
adc
sub
cmp
inc
sahf
out
sahf
sbb
push
sbb
sahf
out
sbb
jne
out
sahf
out
push
mov
xchg
sahf
out
sahf
and
jns
out
and
jp
out
fbld
ds
in
xor
mov
in
aas
or
fsts
pop
out
daa
out
das
out
aaa
out
aas
out
dec
out
iret
repz
pop
push
and
jo
iret
repz
js
sbbb
cmp
xrelease
repz
sbb
cmp
repz
mov
cmp
repz
adc
adc
roll
jg
xchg
jl
into
mov
jno
stc
enter
aas
and
inc
out
jns
jns
out
out
out
out
pop
jns
insl
out
out
or
mov
inc
mov
mov
int3
out
jb
enter
out
out
out
lea
out
call
out
sahf
sbb
sub
xor
jns
out
inc
sbb
push
out
sahf
out
popa
sbb
jns
js
test
mov
das
mov
mov
jbe
iret
iret
out
fimull
loop
add
dec
cmc
outsl
add
out
sahf
mov
push
adc
adc
mov
adc
adc
sub
xor
repz
adc
or
cmp
dec
or
pop
or
repz
or
jns
cmp
repz
test
cmp
xchg
mov
out
mov
mov
jb
dec
jne
loope
jmp
add
cs
add
sahf
pop
inc
loopne
ljmp
jns
or
and
repnz
cmp
or
jne
ljmp
imul
and
fsubrl
fmull
movsb
aas
lods
pop
mov
mov
les
int3
aam
out
cmp
in
hlt
pxor
or
adc
fmull
daa
sub
xor
das
inc
pushf
pushf
pushf
pushf
dec
push
pop
pusha
iret
repz
pushf
push
xchg
jmp
jmp
mov
addr16
mov
cmp
push
add
xlat
pop
fistps
add
pop
das
out
in
pop
or
adc
or
push
scas
movaps
in
in
push
push
xor
dec
inc
push
adc
js
jns
push
mulps
lahf
adc
mov
cmp
xchg
mov
mov
repz
add
mov
in
or
out
in
sti
outsb
or
in
repnz
pop
sbb
daa
push
rdmsr
cmp
in
jbe
cmovs
push
adc
iret
leave
repz
je
jg
leave
repz
mov
xchg
mov
cmp
mov
shl
cmp
int3
push
xlat
loop
inc
ds
leave
in
clc
and
out
push
pushf
pushf
pushf
fmull
sbb
cmp
push
pop
data16
dec
and
jo
cltd
xchg
xchg
xchg
pop
mov
out
push
add
in
repz
outsb
jecxz
out
cmp
jmp
or
decl
or
leave
leave
enter
pop
pop
cmp
leave
leave
daa
das
aaa
adc
xchg
out
popf
inc
pop
dec
adc
sahf
pop
pop
nopl
fucom
jns
ja
sbb
dec
sbb
lock
jmp
aas
stos
pop
pinsrw
cmp
int3
fsubp
xchg
xor
out
imul
aas
out
push
call
adc
das
sbb
pop
movsb
mov
aas
pop
cmovp
push
push
add
bound
jnp
fists
out
mov
or
mov
push
aam
pop
mov
fsubrp
ljmp
cmp
rep
movhps
adc
adc
repz
cmp
repz
dec
xor
sbb
inc
sbb
repz
dec
sbb
jbe
mov
jg
mov
mov
fistl
stos
subps
imul
je
jg
sub
sub
fdivl
push
sub
push
sub
cmp
repz
shll
fdivp
cmp
xor
xor
xor
in
jns
in
xor
add
ss
adc
sbb
lahf
push
cmp
push
cmp
in
ds
repz
ds
aas
add
inc
adc
mov
iret
repz
xor
dec
inc
ja
popf
cmp
arpl
outsb
dec
jns
nop
aad
sahf
adc
add
repz
lock
pshufw
imul
jnp
mov
scas
add
mov
pmaxub
repz
sub
repz
ds
hlt
cmp
fwait
hlt
pop
sbb
or
or
inc
pop
dec
or
jns
data16
adc
jns
out
adc
cmp
movsl
push
adc
adc
leave
rcrl
fsub
jp
jb
decl
cmc
das
pop
cmc
xchg
out
popw
and
das
push
and
mov
daa
mov
pop
data16
cmp
ss
pop
es
jle
cmc
and
iret
mov
mov
mov
ja
loop
iret
cmp
push
add
push
out
sbb
pop
add
or
leave
repz
sahf
or
cmp
inc
iret
repz
dec
or
or
repz
mov
repnz
push
adc
unpckhps
mov
mov
cmp
sbb
loopne
sbb
xchg
out
jmp
testb
pop
iret
leave
in
ss
pop
pop
nop
and
cmp
repz
and
and
ja
mov
dec
pop
pop
cs
fs
sahf
out
sub
jp
rcll
push
sub
cmpxchg
jns
neg
xor
jg
mov
testl
sahf
testl
and
sub
xor
aas
inc
clc
jg
sbb
cmp
lahf
push
clc
out
cwtl
addl
mov
in
mov
mov
dec
sahf
out
sysret
in
enter
or
or
stc
and
ficoms
push
or
pop
cmp
pop
and
xor
adc
adc
jae
dec
push
adc
adc
outsb
push
jnp
xchg
cmp
sbb
pop
test
sbb
pop
stc
push
pop
loop
lods
sub
cli
iret
add
out
and
out
adc
push
add
punpckhwd
andl
and
sbb
sbbl
mov
push
lahf
popa
push
pop
mov
cli
push
int
cmp
add
mov
leave
cwtl
mov
mov
or
or
or
or
in
cli
adc
add
pop
add
push
sti
outsl
repz
repnz
push
adc
adc
jns
leave
cmp
push
push
push
pop
outsl
repz
jbe
pcmpeqw
sbb
leave
lea
pop
xchg
shrb
sti
outsl
js
repnz
cld
sti
and
lret
pop
paddb
cmp
in
push
pop
pop
wbinvd
daa
mov
cld
aas
aas
push
jbe
cmp
or
aas
cmp
in
gs
push
adc
push
jbe
cmp
adc
adc
jns
out
sbb
jns
sbb
cmp
repz
push
push
ficomps
out
bswap
repz
and
cld
inc
dec
and
pop
std
sub
cmpsb
fisubrs
xor
std
sbb
inc
jle
pop
std
push
push
out
std
jns
ja
dec
test
or
in
movsl
or
repz
rorl
push
mov
pushf
cmp
rcll
fsub
adc
leave
repnz
das
or
pop
iret
cmp
push
sbb
adc
push
repz
repz
sbb
sbb
inc
dec
push
pop
push
jns
mov
fisttps
out
sahf
out
and
and
sahf
movsb
scas
btc
and
lahf
imull
or
ret
incl
xchg
xchg
jmp
inc
mov
lcall
jmp
cmp
push
das
imul
daa
add
aam
mov
cltd
insl
daa
daa
daa
cltd
movsb
scas
pop
sahf
fcmovne
rorl
add
or
jns
or
syscall
push
pop
inc
pushf
or
icebp
decl
fsubrl
shll
das
adc
xor
aas
pushf
cmp
repz
push
pusha
repz
repz
repz
cmp
into
sbb
in
sarl
out
cli
cs
add
adc
sbb
pop
cs
xchg
pop
sbbl
cmp
iret
and
lods
es
daa
ret
sub
psllq
xchg
es
das
sub
sub
in
push
das
cli
xor
popf
jl
add
cs
repz
sahf
xor
es
xor
sahf
fstpt
pop
push
sahf
jbe
jns
in
in
mov
xchg
push
cmp
cmp
inc
jmp
mov
int
rcrb
popf
cmp
lret
mov
paddsw
clc
lsl
cmp
leave
rorl
push
sbb
sahf
ja
popf
xor
cmp
inc
push
adc
out
in
adc
push
adc
ja
popf
subb
setbe
pop
mov
sbb
sahf
xchg
xchg
iret
fsub
push
repnz
cmpsl
jns
std
invd
add
adc
iret
jae
jns
insl
pop
push
and
daa
js
subl
icebp
in
sahf
sub
sahf
test
pop
push
cs
daa
iret
cmp
aas
push
xor
mov
pusha
scas
sahf
xor
mov
paddusb
cmpsb
js
jb
std
imul
fimuls
addl
ret
cmpsb
scas
pop
jg
rcl
lds
lsl
and
push
sbb
add
push
pop
jb
repnz
outsb
or
rcr
ljmp
lar
out
jne
movsl
das
setg
adc
cmp
pop
pop
mov
sub
fs
cmp
test
fstps
and
cltd
nop
inc
xor
pop
xor
je
inc
mov
or
adc
pusha
movl
mov
sbb
xor
mov
mov
inc
adc
xchg
shlb
mov
pop
add
add
aas
inc
push
sbb
inc
sub
add
pop
inc
dec
fiadds
pushw
out
add
xchg
daa
jns
out
push
or
leave
in
in
or
or
or
outsb
mov
scas
or
daa
dec
outsb
aaa
inc
notl
das
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
insl
leave
repz
push
and
jb
in
sbb
pop
andb
cmpb
jns
xchg
addl
pop
inc
call
outsl
mov
into
aas
xlat
pop
sbb
mov
push
and
mov
lds
cs
inc
jae
add
orl
cmpsl
sbb
jl
mov
sbb
orl
add
bound
dec
add
or
pop
pushl
loop
sbbb
add
cmc
pop
movl
add
movsb
pushf
cmp
pusha
cmpb
cmpsb
fisttps
mov
popl
jle
test
shll
mov
inc
jg
pop
mov
pop
inc
mov
iret
mov
inc
sbb
in
call
adc
push
aas
and
ficompl
pop
fisubrl
xor
fcomp
loopne
inc
cltd
mov
jle
jns
add
mov
jns
out
test
jns
insb
fs
dec
inc
cmp
out
xor
sub
and
jns
out
sbb
adc
dec
repz
or
add
and
in
iret
jnp
and
push
aam
int3
sarb
mov
es
js
or
repz
out
fs
pop
push
push
dec
inc
mov
into
out
lret
adc
lock
cmp
repz
int3
mov
repz
cwtl
nop
mov
out
pop
push
stc
mov
adc
add
and
jns
cmpsl
loopne
mov
ljmp
push
pop
and
add
aas
icebp
and
pop
rcrl
inc
add
mov
int
xor
jo
lock
cmp
in
xor
push
pusha
ss
cmp
aas
sbb
stos
popa
inc
or
adc
pop
adc
cwtl
into
push
or
jo
icebp
aam
aam
iret
push
push
push
mov
sbb
dec
add
mov
out
pop
into
inc
sub
add
rcrl
mov
jg
andb
mov
lea
sub
in
pop
add
add
das
push
inc
pop
push
sbbl
insb
outsl
iret
insl
inc
sbb
xchg
pop
xchg
push
into
add
frstor
stc
pop
jg
insb
rolb
negb
stc
pop
out
insb
sbb
add
out
mov
sbb
xchg
es
pushf
es
cmp
mov
inc
push
pop
jns
cmpsl
stc
pusha
cmp
pop
and
out
out
push
mov
repz
movsl
jne
ds
neg
push
pop
adc
inc
and
push
mov
pop
or
cmp
jns
negl
dec
sbb
adc
sub
repz
and
sbb
repz
repz
or
or
add
cld
aaa
es
xor
pushf
lock
sbb
retw
out
pop
imul
movups
xor
lock
cmp
xchg
inc
push
push
out
mov
mov
out
pop
add
cmp
pop
js
jns
jns
mov
repz
iret
fwait
imulb
cmp
xchg
jnp
iret
repz
repnz
dec
das
push
add
add
psubw
loop
pop
mov
inc
ds
cli
or
or
inc
ds
ret
mov
adc
cld
xchg
mov
mov
sbb
into
lcall
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
std
call
sub
mov
popl
cmp
cmpsb
iret
decl
js
mov
loopne
jmp
xchg
test
mov
cmp
inc
mov
lcall
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
jmp
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
jg
fs
push
movsl
mov
popa
sar
mov
fsubs
stc
xchg
clc
repz
mov
subb
fwait
xchg
and
iret
int3
mov
add
int
add
aas
jno
mov
mov
pop
fs
dec
lea
aas
ret
shrl
pushl
mov
inc
sbb
lds
mov
insb
scas
add
aas
xor
jp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
call
inc
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jmp
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmpl
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
call
test
pop
mov
jne
ljmp
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lcall
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
inc
movsb
sbb
frstor
scas
pop
mov
adc
fisubl
push
sub
mov
cli
nop
aas
fcoms
inc
je
inc
inc
push
dec
in
decl
inc
pop
inc
jbe
push
jns
arpl
arpl
je
std
popf
popa
mov
mov
jo
insb
imul
push
inc
jne
mov
jo
inc
jbe
xchg
cmp
dec
lods
outsb
adc
inc
aaa
xor
ret
dec
add
cmp
gs
sbb
dec
inc
fildll
add
mov
aas
leave
add
xchg
dec
sbb
dec
inc
cmp
and
xor
jb
push
or
jnp
insb
push
insb
pop
add
fdivrs
cs
imul
push
pop
pop
push
and
cld
pusha
imul
inc
dec
push
fsts
xor
jb
adc
adcb
inc
test
push
xor
gs
adc
pop
sbb
mov
movsb
data16
adc
inc
lea
subl
dec
pop
mov
inc
push
xchg
xchg
sub
dec
pop
sub
pop
push
call
popf
inc
pusha
mov
ss
push
fs
or
cmp
aas
dec
popa
xor
jbe
adc
jae
pop
adc
sti
imul
xor
inc
out
inc
inc
jns
sub
or
dec
lahf
push
jbe
int
sbb
push
push
cmp
popl
test
jb
cmpsb
mov
addb
inc
cwtl
mov
mov
pop
mov
xchg
dec
dec
fisttpll
adc
lods
mov
dec
jbe
dec
test
leave
mov
xchg
push
add
cmpsb
adc
xchg
int
xchg
bound
inc
cmpsb
dec
iret
jmp
dec
popa
jne
arpl
add
pop
outsl
dec
dec
add
pop
mov
push
lret
push
xor
pop
mov
mov
or
inc
xchg
push
push
push
in
pop
mov
js
cli
dec
push
or
mov
push
outsl
dec
addl
adcl
test
aad
idivl
pop
test
push
notl
imul
mov
cmp
push
jb
and
mov
lds
das
push
xlat
and
inc
push
clc
jp
lock
stos
push
in
jne
push
inc
stos
bound
jg
push
loope
dec
mov
xchg
mov
les
stos
movsl
pop
push
cmpsl
int3
sbb
pusha
out
lds
sub
xchg
sub
push
push
insb
pop
xchg
inc
popl
xchg
push
mov
data16
rolb
cmpsl
and
push
or
andb
ja
sbb
popa
cltd
insb
and
ret
inc
arpl
adc
jne
pop
pop
sbb
les
stc
lahf
sbb
adcl
orl
push
push
dec
sub
xlat
dec
push
inc
push
dec
lahf
inc
or
xchg
or
lods
or
inc
xor
inc
sub
inc
jo
pop
orl
cmp
scas
call
mov
ret
pushf
and
push
push
cmpsl
out
dec
sub
dec
pop
xor
inc
mov
dec
xor
ljmp
add
xchg
jae
sbb
push
sbb
lea
imul
dec
push
pop
push
jne
les
outsl
inc
rorl
adc
add
movl
outsl
addr16
iret
mov
popa
or
addb
pop
cmp
cmp
addr16
xlat
fiaddl
out
jg
or
mov
mov
repz
jl
inc
and
clc
sahf
out
lcall
movsb
and
jns
call
mov
cmpsl
mov
daa
iret
cmp
les
je
daa
iret
and
call
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
decl
movsb
mov
aad
mov
rclb
mov
sub
mov
lcall
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
call
shrb
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
movsl
cli
test
pushl
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
jmp
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
dec
or
sub
mov
push
mov
jl
ljmp
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
pushl
mov
push
movsl
in
lahf
xor
mov
js
stc
lcall
data16
xchg
sbb
push
sub
insb
fs
add
hlt
push
imul
ljmp
popa
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
gs
jmp
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
jg
dec
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
or
leave
jl
fnstsw
add
daa
adc
or
and
test
or
mov
lcall
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
ljmp
cmpl
or
mov
lcall
ljmp
fildl
incl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
pushl
xchg
shlb
add
inc
push
imul
xorb
sbb
mov
rcrb
aam
loopne
rorl
int3
dec
frstor
fistpll
decl
aad
mov
call
xchg
shll
push
repnz
addr16
jmp
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
ljmp
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
sar
pushl
sbb
ret
es
pushf
mov
insl
add
ss
lcall
pop
jb
push
mov
dec
mov
loop
sub
or
mov
call
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
lcall
pop
es
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
decl
adc
sahf
gs
clc
sar
imul
push
js
or
call
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fcos
jmp
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
pushl
xchg
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
incl
sbb
xchg
sub
aaa
mov
or
sbb
jne
add
ds
add
cs
jbe
mov
xchg
adcb
push
pop
outsl
inc
jne
push
add
out
imul
or
and
mov
inc
jne
sbb
pop
inc
mov
dec
inc
js
inc
insl
bound
test
mov
popf
push
rolb
js
fadd
mov
scas
dec
mov
inc
jns
mov
and
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
call
mov
popa
arpl
cmp
arpl
or
xor
bound
pop
xor
popa
add
rcl
inc
jbe
pop
mov
fs
imul
push
dec
inc
or
in
sbb
add
push
fcmovbe
flds
adc
add
int3
dec
xor
jmp
dec
das
fs
test
add
repnz
imul
insb
insb
stos
pop
push
jbe
arpl
jmp
inc
aas
pop
lock
arpl
jle
inc
jecxz
mov
inc
inc
push
jo
test
jl
cs
inc
dec
push
aaa
pop
sbb
insb
popa
jns
jne
jne
pop
dec
insb
loope
sub
adcl
aaa
aas
inc
push
pop
add
rcrb
aas
or
mov
jg
and
jae
sub
pop
xor
pop
ret
pop
inc
aas
dec
or
add
inc
movl
std
push
mov
jo
inc
inc
push
adc
ds
inc
scas
add
call
int
push
dec
dec
push
adc
mov
mov
sbb
sbb
ja
outsb
jne
push
adc
imul
fucomi
pop
ja
add
add
or
pop
pop
push
outsl
add
addr16
push
sbb
pop
jo
pop
data16
pop
sti
pop
inc
cmp
push
mov
cltd
lahf
xor
jmp
out
imul
add
addr16
adc
pop
mov
lahf
dec
aam
dec
jo
rclb
mov
xlat
sbb
and
fists
daa
inc
jb
addl
out
dec
popa
jo
ds
or
add
push
outsl
outsl
test
mov
sti
jbe
jno
lds
and
sub
sub
in
nop
test
pop
cmp
aam
pop
ljmp
xor
sarl
jo
test
xchg
pop
adc
insb
jns
das
aam
xor
js
popa
jb
je
or
push
xchg
push
dec
mov
dec
mov
inc
push
bound
test
daa
mov
dec
addr16
ffreep
mov
dec
ja
mov
pop
jne
fbstp
xor
stos
movsl
inc
adc
ss
sub
inc
popa
cmp
ja
adc
push
pusha
jl
cmp
push
or
loopne
scas
imul
dec
push
testb
mov
add
and
and
outsl
shll
pop
inc
push
adc
dec
in
push
loop
sbb
push
outsb
push
pusha
mov
add
push
daa
aas
pop
inc
and
and
add
mov
push
insl
mov
add
aas
aam
sgdtl
xchg
stos
inc
pop
dec
adc
call
adc
and
mov
jae
sbb
loopne
mov
fwait
loopne
insb
mov
ds
mov
jle
ljmp
adc
push
dec
inc
insb
scas
mov
push
mov
mov
call
pop
add
mov
xlat
sub
mov
mov
inc
subb
mov
inc
test
ljmp
or
dec
and
push
mov
push
xor
incl
daa
icebp
dec
sbb
pop
jns
js
push
pop
es
push
push
and
or
enter
fldl
pushl
cld
xchg
xor
mov
or
xchg
shlb
out
lahf
inc
pop
gs
dec
lcall
mov
or
push
incl
sbb
mov
subb
cmpsl
cltd
mov
adc
cmpsl
loope
and
decl
sub
test
gs
mov
imul
js
fucomip
adc
in
mov
add
push
sub
je,pt
jge
pop
mov
les
mov
jp
cmp
dec
faddl
dec
in
mov
in
lcall
dec
pusha
ss
jno
jl
sbb
cmpsb
fidivrs
hlt
jmp
inc
lret
jge
lcall
cmp
or
idivl
ds
xchg
sbb
add
jecxz
incl
dec
push
adc
mov
mov
and
pop
int
jno
sbb
ljmp
stc
ljmp
iret
cltd
mov
je
jge
lcall
xor
push
into
pop
inc
inc
repnz
lcall
push
loope
pop
xor
sub
movsb
dec
cltd
lahf
ljmp
jp
test
and
sbb
mov
mov
push
inc
call
daa
mov
ret
jns
fs
pop
sbb
mov
adc
pusha
shll
pop
pop
in
xlat
jbe
mov
inc
inc
outsl
sbb
dec
imul
xor
push
xchg
sbb
testb
call
orb
es
jp
or
in
fs
xlat
outsb
ljmp
inc
jb
sahf
cli
dec
mov
inc
mov
mov
ljmp
call
insl
lahf
int3
inc
xchg
pusha
mov
fldt
mov
and
cmpsb
jg
cltd
add
loopne
xor
out
sub
std
jns
adc
xor
adc
mov
mov
lea
js
jle
addr16
jmp
test
xlat
push
fstpt
adc
lret
pop
push
in
xor
es
ljmp
add
adc
fcompl
into
sbb
add
aam
test
lahf
daa
push
mov
jmp
imul
fimuls
push
sbb
cmp
cmp
mov
mov
push
call
jge
pop
int3
fadd
out
add
mov
xchg
mov
rep
push
popa
neg
mov
sar
inc
fistpl
sub
lods
pop
daa
cs
shll
fs
into
in
cltd
aam
test
jg
ja
push
call
lods
js
xor
jge
lret
fisttps
outsb
mov
ljmp
and
mov
adc
and
loop
int
es
stc
dec
rcl
in
push
xchg
push
jl
rorl
shrl
faddl
popf
mov
fisubl
andl
fs
mov
decl
sbb
cwtl
push
ret
bound
loop
movsb
pusha
sub
mov
dec
or
cmpsl
daa
dec
mov
xchg
adc
or
jle
mov
ljmp
adc
push
stc
sbb
push
inc
cmp
in
mov
mov
outsl
mov
fwait
mov
lods
xchg
pushl
mov
dec
add
sub
inc
js
enter
ljmp
mov
call
jne
dec
xor
sub
cmpsb
scas
fchs
mov
mov
jae
mov
mov
jecxz
pop
jo
inc
lea
xchg
mov
inc
loop
scas
pushf
int
loope
ljmp
jo
rol
out
sbb
imul
mov
fcomip
mov
push
mov
jno
pusha
clc
ret
loopne
nop
jmp
sbbb
xchg
xchg
jge
jp
incl
push
insb
stc
push
sub
cli
cmpsb
add
adc
lcall
int3
notb
leave
xchg
mov
jp
mov
xorl
jle
lcall
sbb
push
in
shrl
sti
cmpsb
lods
ret
mov
mov
loope
jo
les
jnp
dec
or
xor
cli
xchg
mov
je
cld
push
adcl
push
les
lds
outsb
sbb
sarl
test
cmp
in
sti
aad
xchg
push
lods
sub
repz
lret
out
and
test
fildl
inc
pop
mov
cmp
sub
jl
pop
adc
pop
and
shl
ljmp
inc
lea
cmpsl
pop
cmp
add
xchg
inc
push
into
imul
cmp
fstps
and
enter
add
xchg
and
aaa
aam
adc
imul
mov
xchg
sbb
push
pop
xorb
es
adc
enter
jmp
mov
push
mov
mov
jbe
inc
ja
or
ja
call
ret
or
mov
lea
in
xchg
test
sbb
mov
cmp
mov
lcall
or
test
xchg
jb
mov
mov
xor
call
cli
fwait
sahf
cltd
and
lock
mov
aam
mov
mov
mov
dec
jbe
lds
sbb
push
pop
cs
lret
outsb
cmpsl
mov
ljmp
jae
push
jae
rcrb
xor
stos
adc
mov
jae
int
or
scas
cli
fistps
add
shll
sub
pop
push
rcr
movsb
insb
jns
jnp
jg
popa
push
xchg
pop
mov
and
jp
stos
insl
inc
sbb
or
jmp
cmp
incl
mov
imul
jne
inc
push
adc
dec
shl
push
pushl
pop
jge
stos
and
enter
add
pop
out
pop
xlat
sbb
dec
data16
xchg
ud0
mov
ret
movsb
sub
shlb
and
pop
sub
pop
ds
call
cltd
pop
jecxz
lahf
roll
sub
push
sbb
mov
sub
xor
lret
test
adc
sbb
incl
movsl
cli
add
xchg
test
sti
inc
or
les
loopne
lods
outsb
clc
push
cltd
push
aas
inc
fwait
inc
xchg
dec
sbb
jecxz
pop
icebp
sbb
add
mov
adc
xor
jl
sbb
in
sub
repz
test
pushl
rcll
cmpsb
in
cmp
outsb
rcl
mov
ficomps
inc
roll
xchg
xchg
or
insl
out
call
iret
push
mov
mov
jg
jge
sbbl
xchg
daa
adc
mov
cmpb
pop
lahf
push
cli
jmp
lcall
mov
dec
std
das
cli
inc
pop
popf
dec
sarl
in
loope
in
jmp
cmp
sahf
stos
out
out
aaa
pop
repnz
dec
jno
lds
add
lods
xchg
cmp
shrb
ljmp
jecxz
mov
mov
in
iret
loop
push
xchg
sub
add
jmp
das
adc
fs
mov
pop
outsb
ret
jle
ret
mov
sbb
fadds
xchg
jno
push
mov
inc
jb
push
pop
adc
fadd
or
mov
xchg
mov
lcall
test
ficoml
jbe
rcll
xchg
repnz
mov
or
inc
dec
mov
fstps
sub
pop
push
cmc
mov
adc
decl
out
scas
in
je
sar
push
cmp
pop
ljmp
dec
pushf
mov
out
movsb
lods
ret
out
nop
or
and
mov
in
pop
andb
adc
lods
adc
incl
repnz
ds
jo
int
mov
sub
pushl
push
lahf
scas
mov
addl
shll
gs
lea
and
sub
xor
stos
pushf
or
mov
fidivs
popf
or
add
lds
pop
inc
or
mov
push
pushl
jmp
stos
add
out
xchg
out
mov
mov
sbb
test
add
xor
mov
loop
jl
dec
adc
fcoms
push
movsl
dec
push
pushl
fcmovbe
imul
in
call
sbb
addl
push
fs
jmp
sbb
lret
test
movsl
push
shlb
xor
sbb
decl
pop
popf
mov
jle
mov
cmp
fs
xor
sahf
arpl
pushl
sub
jae
fwait
mov
popa
pop
out
xchg
mov
push
sub
cmpsb
fidivrs
push
shlb
mov
sbb
pusha
xchg
in
test
pop
jmp
scas
std
push
inc
or
mov
mov
addr16
jge
push
fidivs
ljmp
inc
xchg
jecxz
jp
add
cwtl
sbbb
dec
ja
pushf
lahf
mov
popa
js
ret
fwait
clc
pushl
stos
push
test
icebp
aaa
enter
xorl
das
clc
add
xor
xchg
pop
lea
js
xchg
adcb
pop
std
jb
fxch
jge
push
movsb
loop
push
in
jnp
out
sub
cltd
jg
xor
mov
dec
rcrl
call
or
shrb
mov
rolb
pop
push
mov
fcom
add
cmp
fldl
jmp
int
jno
lods
insl
icebp
leave
pop
insb
repnz
idiv
in
adc
dec
daa
imul
jecxz
bound
mov
lods
fs
test
pusha
adc
and
add
jmp
negb
aaa
outsb
je
push
jmp
aad
mov
mov
fcompl
push
inc
mov
mov
mov
lock
mov
mov
inc
call
pop
loopne
adc
xor
adc
sub
inc
outsl
out
clc
sbb
pop
mov
push
std
incl
xchg
in
cmp
push
add
es
mov
jmp
and
pop
xor
mov
cld
pusha
mov
jle
stos
add
jg
in
ljmp
push
add
mov
in
add
dec
jecxz
xchg
dec
jmp
jg
cs
aad
pop
inc
mov
cmp
jp
lcall
add
mov
jg
cmp
js
sbb
xor
cld
jmp
fucomp
cmp
mov
cli
mov
iret
sti
push
fsubrl
and
test
cmp
ds
mov
lods
fldenv
std
sbb
or
hlt
pop
or
imul
mov
test
pop
sub
into
flds
hlt
push
jae
mov
loopne
lods
mov
stc
pop
fimuls
jno
roll
push
cwtl
push
adc
dec
or
insb
incl
cli
jo
jae
subps
cli
lock
mov
leave
cld
inc
inc
fs
xchg
mov
xchg
dec
fmuls
repnz
es
mov
push
decl
sbb
cmp
push
inc
xchg
push
pop
sarb
lcall
loopne
mov
in
sbb
jmp
shll
out
mov
cmp
aas
pusha
js
mov
pop
xchg
xor
cmp
and
dec
inc
mov
outsb
lock
movsb
incl
xor
sbb
call
dec
pop
std
es
repnz
adc
adc
dec
mov
fidivs
jge
insb
cmp
aam
xlat
pop
es
cmp
xor
dec
push
ds
decl
out
fimull
and
push
rorb
xor
xchg
iret
sub
jae
cmp
call
cld
out
xchg
rorb
pushf
sub
into
cmp
fimuls
inc
inc
jecxz
out
or
sub
xor
outsb
ds
pop
push
cmpb
mov
inc
or
adc
leave
xor
je
adc
les
or
jmp
mov
ljmp
subl
outsb
fwait
or
scas
mov
adc
jmp
or
pop
mov
lret
fscale
in
test
add
adc
mov
insb
in
or
mov
loopne
mov
jo
rolb
bnd
mov
and
fisttpl
mov
imul
sti
jp,pt
add
mov
mov
bnd
decl
insl
mov
dec
dec
arpl
cwtl
popa
loope
push
jns
aam
cmc
lock
jb
pop
jmp
mov
mov
std
ljmp
out
jns
sbb
xchg
inc
int3
or
sub
jl
movsl
scas
fdivr
push
xchg
pop
push
cmc
sub
mov
nop
push
fs
cmc
scas
dec
mov
hlt
lret
cld
mov
inc
mov
xor
fsubrp
ljmp
inc
jg
adcb
push
xchg
and
mov
mov
push
icebp
cmpsl
lret
jg
cmp
test
ja
jl
cmp
daa
sbb
add
jmp
xchg
out
movsb
stc
fsubrl
push
cmp
and
fildl
fwait
push
aaa
icebp
ja
mov
xchg
test
rol
push
shl
pop
pushf
fbstp
ficompl
repnz
mov
dec
int
gs
or
mov
adc
or
cltd
push
mov
lcall
call
adc
add
cmp
es
dec
cli
xor
movsl
inc
inc
call
or
scas
rorb
and
cmp
adc
xchg
mov
test
xchg
ljmp
mov
inc
inc
push
xor
and
xlat
std
dec
pop
push
adc
pop
push
jne
pusha
call
repz
jmp
lret
loope
push
test
cmp
xor
ja
lret
cli
std
imul
add
dec
sub
lods
cmp
test
cltd
pop
addr16
dec
pop
nop
pop
sarl
jg
push
mov
fwait
call
mov
and
bound
pushl
mov
mov
sub
push
adc
jne
js
jge
jbe
adc
lcall
dec
push
repz
mov
sub
xor
lock
dec
ja
push
in
cmp
out
mov
mov
xor
leave
pop
dec
adc
ljmp
dec
fadd
mov
push
aad
cmp
push
push
jb
mov
incl
fcmovnu
push
aam
cmp
jb
xor
cmp
mov
fildl
das
mov
fisubl
pushl
call
popf
pop
clc
cmp
jns
jnp
dec
fwait
in
xor
insb
xlat
cmc
shlb
push
push
les
dec
cs
cmp
adc
repz
lea
hlt
call
inc
scas
out
stc
jge
orl
cmp
rorb
jge
xlat
xor
decl
lcall
dec
push
enter
mov
add
sub
sahf
jle
fwait
sbbb
mov
dec
in
jg
pop
mov
ljmp
ret
leave
ds
imul
push
adc
xchg
decl
jb
aam
stos
pop
and
xor
mov
sarb
jl
daa
ljmp
faddl
pop
fimull
arpl
flds
jl
lcall
sbb
loope
jg
pushl
cmp
gs
mov
das
out
int3
push
add
adc
adc
push
or
jle
and
mov
lea
mov
jmp
mov
or
aad
xchg
inc
push
mov
testb
sub
movsb
sbb
xlat
push
xchg
add
pushf
mov
push
inc
fcomi
mov
scas
bound
fsubl
or
aad
jg
adc
jle
fstpt
pop
stos
cmpsl
dec
jns
hlt
and
rcll
adc
incl
cwtl
cli
mov
movsb
pusha
mov
dec
stc
imul
jmp
mov
mov
sbb
shl
mov
arpl
sbb
inc
push
mov
decl
push
repnz
enter
jb
pop
insl
popa
dec
sbb
rcll
sbb
int3
mov
in
jmp
jo
out
or
nop
add
mov
insl
add
fbstp
mov
incl
fdivr
or
pushf
scas
frstpm(287
das
or
pop
aaa
cmpsl
lds
stos
jne
mov
sbb
test
xor
ret
mov
std
fnsave
decl
loopne
insl
jg
inc
aam
sbb
adc
pop
dec
stc
inc
xor
dec
adc
inc
das
decl
test
lcall
into
std
dec
lods
outsl
cwtl
cmp
sahf
sbb
inc
pushl
push
les
loop
pop
xchg
pusha
ja
adc
inc
subb
cld
out
mov
bound
movsb
ja
sbb
lods
cmp
and
pop
pop
jle
stc
inc
xorl
push
jo
adc
jns
fprem
aad
ljmp
retw
pusha
popf
aas
mov
idiv
call
xchg
call
push
cmp
sub
fnsave
push
out
xor
and
call
fstpt
xchg
push
pop
test
test
enter
inc
jbe
mov
adcl
sub
loopne
ss
cmp
cmp
push
mov
into
inc
adc
das
pop
aam
ljmp
rcrb
and
fcmovb
jg
repnz
mov
push
xor
or
decl
xchg
stos
cwtl
call
pushf
loop
lock
dec
push
mov
lret
call
out
cmp
pop
fnstsw
ret
sbb
or
lret
sub
cmp
xor
or
mov
ja
ficoms
pop
dec
leave
out
mov
movsb
jge
int
and
mov
xchg
rcr
dec
pandn
mov
leave
inc
sub
lods
mov
rcrl
hlt
incl
mov
mov
cltd
shlb
dec
ss
jg
jns
sub
xlat
rolb
pop
arpl
inc
out
iret
imul
scas
ljmp
mov
loope
xchg
nop
lock
dec
mov
xchg
data16
cmpl
cmp
call
or
xchg
cmpsl
gs
mov
sbb
pushl
scas
pop
xor
shlb
adc
jns
pop
jg
enter
jmp
ss
cmpsl
call
std
jmp
cmpsl
inc
popa
mulb
xor
fst
test
sub
cmp
and
test
test
jo
out
xchg
sbbl
push
fldenv
shr
cmp
or
sbb
js
pop
push
arpl
dec
add
std
cmp
pop
imul
fmul
sub
and
pop
outsl
mov
arpl
jmp
in
inc
push
dec
push
mov
fsts
add
decl
lret
adc
cwtl
add
xchg
stos
pop
cmpsb
and
das
mov
mov
lcall
and
repz
lods
jge
mov
sti
out
daa
clc
fisubrs
xchg
xchg
sbb
ljmp
mov
push
sub
movups
dec
test
js
and
jns
inc
ljmp
orb
adc
in
sti
pop
leave
xor
ja
sub
sbb
idivb
jns
adc
ljmp
rorl
aad
push
scas
cmp
mov
mov
fistpll
out
add
movsb
ljmp
les
dec
adc
pop
jns
ret
push
ret
pushl
add
sub
xor
xor
enter
rcr
repnz
mov
fisubrs
cmp
out
push
shr
out
sbb
ret
add
mov
and
adc
fcmovbe
cli
pushl
push
adc
jae
sti
mov
bnd
sti
push
loope
cli
aaa
mov
sub
sbb
sub
pop
call
pop
fisubrs
in
mov
shl
inc
int
push
jne
and
std
xor
popa
scas
push
push
push
aam
jbe
loopne
xchg
bnd
pop
cld
ljmp
mov
xorl
sarb
lret
inc
dec
decl
std
push
mov
inc
pop
push
sbb
xor
test
mov
outsl
aaa
jmp
ljmp
sti
cltd
jecxz
adc
scas
push
add
cmp
mov
imul
jl
adc
lods
xor
popa
and
mov
stos
sarb
cmp
jnp
incl
into
mov
mov
sbb
lds
dec
dec
ja
test
test
and
sub
fistps
pop
inc
idiv
vcvtsd2si
jmp
or
fcompl
push
fildll
pop
aam
out
popa
das
mov
mov
test
push
scas
mov
jg
mov
decl
out
sahf
ss
adc
fdiv
ret
sub
imulb
xchg
push
jg
into
mov
push
ljmp
rorb
stos
sbb
mov
inc
ljmp
cmp
xchg
js
and
push
in
outsb
jb
ljmp
rorb
xchg
cmc
pushl
inc
pop
ss
roll
sbb
out
dec
pop
mov
testl
adc
sbb
jp
test
je
xor
push
mov
andb
imul
mov
int3
imul
xchg
filds
add
rol
roll
or
pushl
jns
fcompl
xlat
xor
xor
into
stc
dec
cltd
popa
jecxz
mov
cmp
push
incl
mov
aaa
idiv
arpl
mov
or
mov
push
push
loopne
add
in
popa
shlb
xchg
cmp
xor
into
js
jno
mov
jg
dec
imul
lret
loopne
ljmp
aad
push
dec
inc
clc
ss
jle
cmp
sub
add
fmuls
mov
sbb
jecxz
jns
jl
or
lcall
jne
jecxz
push
jg
cmp
imulb
or
popa
lret
jmp
pushf
jge
mov
xor
or
ds
loopne
adc
out
inc
fadds
pushl
cld
stc
cmp
cmp
inc
loopne
cmp
mov
mov
sub
repz
push
divb
and
movsl
lcall
xor
mov
mov
ljmp
add
xchg
repz
js
cmpsl
push
xchg
dec
pop
dec
jp,pt
cmp
icebp
jg
stc
mov
jae
push
stos
aaa
push
mov
out
pop
mov
fstp
popa
sbb
add
in
iret
lea
push
jae
ja,pn
std
cmp
xchg
or
push
inc
pushl
dec
shlb
lcall
mov
cmpsb
fs
xor
mov
cmp
idivb
push
and
pushl
pop
push
nop
mov
hlt
pop
add
fistl
push
das
cmp
ljmp
xchg
movsb
nop
ftst
mov
test
adc
push
cmp
orb
mov
cmp
fisttpl
ss
adc
cli
pop
inc
insb
mov
push
push
mov
lret
push
push
mov
notb
sub
mov
add
cmp
nop
adc
add
lret
sbb
jmp
scas
push
add
push
lea
or
test
ret
les
faddp
mov
cmp
lcall
inc
scas
add
mov
jb
imul
cs
decl
stos
or
sbb
fnsave
jns
mov
inc
addl
mov
ss
je
xor
jecxz
push
jne
or
shlb
lret
cli
jmp
fwait
add
inc
clc
lds
sub
insl
sbb
xchg
adc
outsl
sahf
jbe
ljmp
je
xchg
xchg
outsl
jp
sbb
es
cmp
popa
mov
xchg
or
fs
mov
jmp
adc
aam
andl
into
push
adc
inc
testb
shrb
std
mov
push
cltd
call
fildl
sbb
adc
sbb
sbb
jl
pushl
and
ret
testb
lods
inc
push
xor
jle
or
out
clc
pushl
out
std
out
out
int
mov
mov
mov
dec
mov
inc
sub
lods
or
jns
insb
movsl
dec
test
repnz
push
ja
xchg
push
aad
cmpsl
fisubrs
xchg
xor
push
je
imul
out
cli
push
lods
lcall
shrb
push
xchg
gs
fs
adc
add
jmp
or
sarb
lcall
xor
xchg
push
fdivrp
data16
xchg
shll
ror
lcall
movsb
sbb
and
hlt
dec
fs
jae
push
lods
jg
mov
mov
js
sbb
call
psrlq
dec
jb
in
fcmovnu
outsl
mov
jecxz
xor
jmp
stc
aad
icebp
ljmp
or
pop
jbe
bound
iret
lea
cmp
fs
mov
lcall
jmp
lods
jmp
adc
jmp
add
sub
push
adc
imul
cld
decl
xchg
jbe
mov
fsubrs
jb
aaa
add
rcrb
xlat
lds
lcall
fidivrl
frstor
not
or
jle
adc
jns,pt
addb
call
out
fstp
cmp
fwait
jle
sbb
repnz
sbb
gs
dec
dec
leave
sub
mov
mov
arpl
cmp
les
push
pop
lret
insb
sbb
push
sub
push
and
xchg
mov
shl
stc
pushf
cli
mov
adc
cwtl
ljmp
dec
sbb
adc
fwait
aaa
mov
xor
pop
shll
rcrl
shrb
lcall
arpl
inc
fimull
pushf
les
jo
jg
jno
ss
sbb
adc
cmpb
lock
xchg
pop
push
mov
fistpl
jmp
lcall
cld
mov
push
loopne
pop
or
inc
xor
out
icebp
ljmp
mov
push
jp
icebp
push
xchg
aad
jne
jecxz
jecxz
mov
cwtl
add
pushl
insl
sub
test
repz
mov
out
loope
mov
push
xchg
cmp
pushl
mov
add
test
jb
xchg
sub
jl
adc
insl
add
fmuls
jg
push
aaa
or
and
cld
pusha
rcrl
dec
out
in
cwtl
inc
mov
ljmp
mov
adc
sub
add
mov
cld
jno
call
in
incl
xor
jo
mov
aad
or
xor
ljmp
pop
xchg
fldl
mov
out
incl
call
pushf
dec
pushf
push
pop
mov
sub
rolb
incl
mov
fisubrl
test
arpl
inc
mov
add
decl
dec
cmp
popf
int
inc
scas
arpl
mov
arpl
sahf
mov
aaa
sbb
push
push
jns
or
stc
and
xchg
jecxz
mov
jmp
mov
push
sub
mov
jno
mov
pop
mov
lds
dec
aaa
push
out
mov
decl
dec
or
sbb
ljmp
lock
jp
mov
lahf
aad
and
ljmp
add
in
inc
mull
sti
mov
jo,pn
jmp
das
inc
lods
lcall
incl
aas
adc
es
hlt
push
test
add
xor
xchg
les
jp,pt
xchg
fistpl
pushf
or
push
icebp
push
pushf
mov
and
dec
stos
das
jmp
pop
loop
pop
and
sub
lcall
xchg
popf
jae
std
fs
push
les
mov
or
repz
cmp
sbb
jne
dec
data16
loop
jo
jg
push
xor
sbb
xchg
mov
mov
fimull
adc
shl
pushf
out
dec
pop
xchg
inc
ud0
call
cli
fsubl
push
call
ja
int
pushf
mov
mov
sub
mov
cwtl
or
aad
inc
dec
rclb
inc
shrl
ret
or
push
xchg
rcrb
jbe
cmp
incl
int
out
fisubl
push
push
push
popf
in
mov
add
adc
mov
jmp
adc
insl
dec
lret
pop
rcll
inc
nop
aas
js
add
ror
decl
push
int
fs
out
push
jb
sahf
or
mov
sub
inc
xchg
xor
dec
xchg
jmp
sub
mov
movsl
imul
sub
sar
mov
mov
xor
out
add
outsb
aad
adc
les
mov
dec
ljmp
adc
movsl
into
leave
mov
cmove
lds
std
call
xchg
dec
dec
loopne
jns
call
mov
mov
jg
push
pop
inc
inc
mov
inc
pushl
push
cs
pop
ds
jge
jns
xchg
loope
jno
mov
xchg
scas
inc
call
mov
push
or
loope
adc
sbb
popa
and
jmp
xchg
int
lret
mov
mov
or
sub
sahf
jge
test
movsl
push
cmp
cmp
lods
lahf
in
or
shl
mov
fiadds
call
sub
daa
test
cs
lds
std
pop
xor
mov
call
inc
popf
js
stos
xor
push
scas
sub
cld
or
nop
xorb
popf
sar
les
mov
nop
clc
aas
ljmp
out
mov
fistpl
pop
sbb
mov
sub
imul
mov
decl
test
push
mov
sbb
mov
jmp
decl
fiaddl
gs
in
sbb
fldenv
lahf
cmp
dec
sub
jmp
cltd
scas
incl
cld
fsubrp
or
gs
sbb
loop
cs
jg
xchg
icebp
lcall
and
stos
xchg
adc
mov
dec
add
lea
stos
mov
js
dec
pusha
xchg
rorb
fucom
mov
mov
stc
in
cs
lahf
pop
jno
mov
andl
sbb
cld
push
ja
xchg
test
mov
xor
inc
pushf
mov
fdivs
jge
aad
addr16
fldl
loope
lahf
lods
dec
in
ss
cmpsb
addr16
push
jge
and
lcall
pop
enter
or
push
mov
add
outsl
push
sbb
mov
jg
jp
cmp
push
cmc
shrb
lcall
sbb
lods
int
jg
mov
and
int3
aad
cld
sub
mov
cvtdq2ps
in
decl
inc
lock
lcall
repz
mov
sbb
dec
popf
cmpsb
push
cmp
loopne
call
subb
ja
push
mov
fwait
sub
push
push
enter
cs
inc
jg
sbb
out
mov
adc
push
mov
pop
mov
dec
jae
clc
push
mov
push
in
adc
test
xlat
loopne
ror
push
loopne
xchg
lods
je
cwtl
movsb
ljmp
xor
clc
dec
push
je
jne
imul
movsl
lcall
mov
aad
and
pushl
mov
mov
movsl
jnp
sbb
test
test
jmp
popf
xor
sub
sub
mov
add
sti
mov
push
call
pushf
sbb
cmpb
adc
adc
leave
mov
push
shlb
cmp
cmp
rcrb
arpl
mov
lcall
pop
shr
dec
loopne
xor
inc
add
clc
jae
addb
jp
jb
mov
bound
add
sub
push
addr16
inc
adc
jp
cmp
lcall
xchg
cmpsl
push
mov
or
jmp
dec
enter
test
add
or
jmp
repnz
shll
inc
leave
cmp
mov
sarl
ficompl
mov
fdivr
jnp
incl
negl
add
push
jp
je
loop
pop
and
dec
mov
or
mov
cmpsl
jmp
idivb
mov
mov
je
fisttpl
push
dec
cmp
ret
lds
addr16
cmp
jmp
clc
les
push
mov
sbb
mov
fistl
and
pushl
les
adc
push
testl
xchg
movsl
xchg
out
sysret
cs
mov
jmp
mov
in
sbb
jge
out
or
xchg
enter
and
mov
pop
push
add
push
insb
xchg
out
push
cmpsb
pop
enter
lcall
push
inc
mov
pop
dec
mov
cli
mov
dec
lahf
iret
dec
das
fdivr
incl
mov
dec
int
add
xchg
mov
out
mull
xchg
clc
pop
or
xchg
imul
mov
xchg
aas
pop
out
ljmp
test
ljmp
xchg
js
inc
inc
mov
imul
outsb
lock
xchg
mov
mov
pop
mov
inc
xor
shll
and
xchg
scas
rclb
mov
dec
xchg
pusha
mov
jne
mov
scas
mov
arpl
insb
push
mov
jno
pop
xor
inc
mov
sub
cmp
jmp
ret
cmp
lock
dec
sub
insb
std
rorl
rcrl
push
add
mov
fcomip
ljmp
imul
push
les
xchg
test
mov
call
cmp
jmp
pop
mov
sbb
adc
out
or
push
shll
out
imul
dec
fisubrl
testb
call
popa
sbb
jmp
arpl
addr16
fmuls
inc
in
movsl
das
xor
outsl
nop
mov
fisubrl
push
ret
ja
sub
ret
adc
lock
sub
jbe
clc
aaa
jp
pop
ljmp
push
sub
push
popf
xchg
in
push
mov
aaa
pop
outsb
daa
mov
cli
push
xchg
push
mov
inc
pop
push
cwtl
fdivrs
out
add
pusha
jge
inc
pop
or
mov
decl
dec
fs
pop
xchg
insb
lock
jle
jl
fcoml
xchg
sahf
lods
aaa
sbb
inc
xchg
adc
outsb
add
cwtl
hlt
leave
dec
sbb
push
fwait
sar
sbb
clc
or
addr16
mov
outsl
adc
mov
add
rorl
jle
sti
data16
mov
jae
inc
sti
rcrb
ffreep
push
cwtl
pop
outsl
out
ds
mov
cmpsl
std
fidivrl
pop
call
test
pushl
inc
inc
push
push
in
mov
cld
test
xchg
aas
add
lret
adc
scas
sub
decl
nop
cltd
lahf
add
push
js
call
xchg
adc
lods
in
iret
mov
cmp
icebp
cmp
jnp
or
xor
mov
mov
sar
lcall
jl
fwait
xlat
jmp
pusha
inc
cli
push
rcrl
add
jl
ss
incl
xor
add
jno
in
cld
pop
fldl
imul
out
mov
push
enter
decl
aaa
and
filds
flds
xchg
fists
adc
mov
scas
adc
inc
xchg
xchg
gs
mov
cmp
sti
pushl
popf
jecxz
out
fwait
rcr
dec
jns
sahf
adc
xchg
mov
mov
push
mov
inc
sarb
cli
mov
adc
push
pusha
push
cs
pop
mov
pop
scas
mov
xchg
jnp
popa
fidivrl
pop
or
inc
mov
and
aaa
sbb
and
lcall
jecxz
inc
out
lret
bound
jo
mov
and
inc
push
pop
fs
add
jno
xchg
repz
sub
jae
jmp
ss
call
inc
jnp
mov
dec
xchg
adc
mov
rol
dec
or
lcall
or
test
cmp
sub
pop
test
sub
lcall
scas
aas
hlt
cmp
mov
jno
call
cmp
insb
call
inc
out
clc
and
int
jecxz
inc
and
push
call
lods
xor
call
rep
inc
addl
test
or
mov
es
int
sub
fdivrp
fcmove
popf
jmp
xchg
test
fnstenv
xor
movsl
out
cmp
arpl
ljmp
js
mul
and
imul
repz
or
add
adc
call
into
sbb
or
push
cld
ffreep
mov
test
and
scas
mov
mov
in
bound
ljmp
iret
mov
xor
sub
flds
or
sbbl
inc
arpl
call
add
dec
es
add
jmp
faddl
and
xchg
sub
push
out
pusha
jns
lds
pop
pop
loope
adc
rcl
cmp
push
xor
pop
in
dec
push
mov
dec
sbb
mov
jne
aam
outsb
cltd
xchg
ja
iret
das
push
adc
xchg
cs
lcall
lret
xor
dec
push
or
lea
stc
movsl
sub
sti
xlat
test
add
mov
sbb
mov
push
mov
shrl
aam
or
pop
andl
pushl
sbb
mov
repz
xchg
shrl
out
cltd
mov
mov
out
lods
push
cld
cmp
jmp
inc
push
mov
fnstcw
sub
sub
in
sbbl
sbb
hlt
sbb
sbb
mov
ds
xor
cmp
push
mov
sub
scas
sbb
imul
add
jl
dec
xchg
jnp
insb
xchg
and
mov
sbb
imul
nop
vmovd
test
lods
mov
stos
in
sub
push
dec
lcall
call
pop
cmp
or
xchg
push
sbb
jno
ljmp
clc
and
add
addb
sarl
int3
pop
fdivrs
xchg
pop
ja
fisttps
ljmp
ror
cmpsl
shlb
pop
or
sub
js
push
mov
addr16
cli
pop
das
xor
dec
mov
pushf
jp
stos
mov
inc
cwtl
xchg
loope
test
int3
cmpl
pushl
push
cli
pop
fsubl
push
shl
daa
clc
jmp
add
xchg
decl
movsl
dec
and
subb
sbbb
xchg
and
leave
mov
lea
popa
pushl
divb
cwtl
mov
scas
cld
gs
repz
les
aas
sar
cmp
arpl
xchg
stc
push
sbb
jno
cli
lret
fmulp
lcall
push
sar
pop
add
mov
aas
dec
ljmp
in
xor
jne
lcall
xor
leave
sbb
cmp
int
sti
pop
push
div
push
lock
popa
mov
cmp
mov
or
sbb
pop
imul
js
outsl
insb
sub
out
mov
pusha
push
push
cmp
out
pop
pop
jb
dec
inc
cmp
ljmp
cmp
adc
adc
movsl
push
mov
std
dec
call
hlt
outsl
incl
test
es
inc
outsb
das
cmp
push
lahf
std
fs
cmc
inc
inc
inc
adcl
sbb
mov
jecxz
out
sti
lods
shll
add
loop
pop
xlat
notb
hlt
test
scas
decl
ss
sub
and
stc
pop
sti
mov
pop
addb
cmpsl
pop
jno
pushl
cld
call
in
push
mov
pop
inc
rorb
aaa
adc
enter
lcall
out
sub
outsb
jns
cwtl
aam
sub
add
test
mov
das
add
ljmp
jp
fadd
sbb
outsb
and
out
arpl
in
loopne
cmpsl
imul
cmp
sbb
jns
loopne
pushf
cmp
mov
add
cmp
mov
std
mov
les
rcrb
xlat
lcall
jge
mov
cmpsl
call
jne
xchg
mov
lock
inc
cmp
sahf
push
repnz
call
pop
subl
sbb
or
sub
lods
ljmp
push
hlt
lcall
ljmp
loopne
sub
rcr
xchg
test
push
cmp
xchg
incl
dec
inc
vpmuldq
divl
int3
push
pop
mov
clc
jb
lcall
pop
std
in
xor
popf
arpl
jae
js
and
lret
jb
sub
shll
mov
mov
pop
leave
cltd
xor
add
ljmp
lcall
sub
pop
in
shrl
adc
mov
clc
int3
push
push
ljmp
aad
jmp
xor
mov
push
pop
filds
in
dec
mov
mov
push
jg
or
mov
inc
dec
mov
xchg
xchg
or
mov
inc
push
and
addb
sub
arpl
and
subl
hlt
bnd
xchg
push
push
xchg
jecxz
xlat
jle
addr16
fsts
shrl
and
std
jmp
sbb
or
push
pop
out
jnp
sub
popa
loopne
xchg
mov
adc
decl
lock
sarl
xor
dec
push
repnz
push
mov
stc
sbb
lds
cs
mov
xor
cmpsb
cmpsb
jecxz
add
subb
inc
cmp
idivb
call
les
push
mov
out
sub
add
aad
xchg
inc
subl
jnp
bound
call
mov
pop
xchg
xchg
dec
sub
push
mov
lcall
fs
push
dec
push
out
ljmp
mov
cli
xlat
sub
or
mov
xor
lods
jp
addr16
jae
mov
pop
mov
jno
inc
xor
bound
sti
call
pop
cltd
and
lahf
jmp
push
call
inc
lea
sub
ljmp
and
mov
and
mov
dec
cmpsl
ret
daa
adc
aaa
std
ss
mov
mov
pusha
pushf
pop
addb
std
push
pop
aad
dec
test
jecxz
jmp
fwait
xorb
scas
mov
test
mov
mov
push
inc
popf
inc
rcll
xchg
xchg
sub
mov
mov
inc
mov
ss
dec
and
ret
lds
loop
rolb
inc
jp
test
mov
add
mov
div
call
out
sub
xchg
mov
stos
or
inc
add
sbb
pop
dec
sahf
xor
jbe
or
pop
xchg
jg
iret
ss
pop
stos
jbe
jle
xor
jge
mov
add
mov
xchg
push
push
mov
aam
pop
push
or
cmpsb
or
mov
pop
dec
jnp
cwtl
lcallw
or
mov
pop
test
ret
inc
idiv
jge
scas
leave
mov
arpl
jno
leave
pop
sbb
call
push
pop
fnsave
decl
xchg
jns
das
test
jg
cmp
cmp
out
jb
jge
mov
cmp
push
sub
add
stc
jl
sbb
push
mov
mov
adc
inc
aaa
das
cltd
push
mov
sub
fincstp
adc
std
sbb
lcall
fdivl
inc
ret
cs
or
dec
xchg
xor
add
xor
mov
sub
outsl
mov
xchg
inc
test
call
arpl
insl
fists
sbb
dec
mov
and
and
or
je
cld
sbb
aam
jecxz
rcrl
scas
je
lret
decl
inc
push
jle
or
inc
inc
pop
test
and
mov
dec
sub
popf
ljmp
incl
repz
mov
sbbl
outsl
es
jo
cli
mov
mov
pop
pop
pop
cmpsl
ds
jmp
mov
ret
inc
xlat
jns
js
pop
push
pop
add
test
xor
fwait
insl
sub
fsubrs
mov
mov
and
jbe
das
add
decl
rolb
jnp
mov
subb
es
gs
ds
jbe
pop
lcall
xchg
call
sbb
inc
call
pop
mov
scas
movsl
popa
outsl
xor
flds
incl
setb
dec
mov
imul
dec
fsubrl
mov
mov
xchg
cmp
mov
aad
jl
mov
in
imul
mov
jmp
je
mov
mov
flds
cmpsb
ret
sub
dec
fdivp
xchg
lods
sahf
and
in
pop
cmp
mov
scas
loopne
and
call
dec
inc
push
leave
push
jg
dec
jnp
call
jnp
pop
cli
stos
cmp
and
frstpm(287
in
cli
jg
ljmp
cltd
jne
dec
sbb
icebp
decl
outsl
outsb
std
lcall
dec
and
sbb
decl
jg
addr16
and
mov
sub
jmp
pop
pushf
pop
push
sti
xor
jmp
stos
pop
xorb
pop
mov
pop
or
cmp
cs
pop
addl
lcall
aam
and
scas
push
dec
sbb
push
cmpsb
jge
jecxz
cmp
cmp
cmp
ljmp
xor
push
scas
sbb
push
add
icebp
out
mov
out
mov
test
inc
and
aas
adc
incl
inc
cmpb
popa
or
dec
mov
pop
add
in
sahf
inc
or
jbe
xor
test
in
cli
sti
push
andl
repnz
aad
and
rorb
jg
out
push
pop
lods
or
cmc
lds
lods
fwait
mov
jg
sti
push
mov
lock
shl
std
push
aad
data16
ljmp
mov
pushl
frstor
fmull
repz
cwtl
shll
out
sub
cmpsl
push
dec
and
jae
jbe
cmp
call
xor
pop
into
jge
sbb
pop
lcall
leave
and
mov
cmp
je
cs
decl
adc
mov
and
cltd
jmp
cmp
xchg
cmp
lret
enter
xor
xchg
sar
add
dec
fwait
scas
push
in
adc
push
fcomip
lcall
movsb
subl
in
push
out
in
mov
inc
lock
jl
mov
jmp
sub
icebp
and
xchg
lea
rol
add
ljmp
in
and
fisubrl
adc
sti
jle
in
fimuls
sub
xchg
sbb
fwait
sbb
shll
lods
and
mov
in
or
icebp
das
es
cltd
push
outsl
insl
pop
test
xor
xor
call
cmp
mov
jg
xor
pop
dec
sbb
fadds
out
insb
cmp
mov
add
dec
lods
lds
jg
fistpl
pop
xchg
push
lods
dec
cmp
xchg
jnp
or
aam
js
test
cmp
pushl
pop
popa
out
and
fstl
call
mov
sub
jno
daa
sarb
jbe
adc
loope
jns
decl
shlb
out
fs
and
push
je
pop
xor
test
adc
mov
clc
enter
sbb
stos
test
in
enter
std
rorl
adc
pop
inc
fcmove
cmpsl
not
hlt
adc
push
jb
call
sub
cmp
adc
mov
in
pop
inc
jle
mov
cmp
roll
lock
stos
test
insb
jl
fwait
mov
push
pop
push
lcall
stos
out
sahf
sbb
adc
sbb
jno
pusha
mov
fsts
lock
lcall
call
inc
inc
sbbb
jg
push
mov
inc
arpl
sbbb
fwait
insb
pop
mov
xchg
xor
push
in
out
std
stc
cmpsl
cmp
movsl
mov
jno
lcall
ljmp
push
fldenv
push
mov
mov
call
mull
add
xor
arpl
push
jge
loopne
adc
lcall
aas
sub
push
xor
jo
cmpsb
and
push
cmp
data16
mov
inc
mov
jg
cmp
pop
fimull
stos
jl
adc
dec
pusha
test
int3
sub
fadds
decl
cmp
xor
xor
add
push
movl
push
inc
test
pop
push
mov
inc
lods
jns
pop
movb
xor
mov
popf
mov
fs
fldl
jg
mov
push
ss
push
lea
aad
adc
jge
into
inc
testl
ljmp
push
push
push
pop
cmp
andb
out
or
sbb
push
sbb
sub
dec
push
ljmp
pop
pop
jne
mov
incl
nop
cli
int
push
fisubrl
dec
cld
sar
bound
iret
push
js
in
jne
sbb
inc
ljmp
pop
push
dec
test
fildl
sbb
xor
jmp
or
or
mov
ljmp
fldenv
add
adc
mov
leave
sbb
pop
in
dec
sub
rol
decl
ljmp
dec
shr
scas
test
mov
push
sub
imul
pushf
push
cmpl
lods
shll
jg
xchg
test
shlb
lds
inc
out
out
call
out
stos
add
outsl
outsb
nop
mov
imul
sti
out
fwait
mov
push
jmp
pop
xchg
jo
dec
mov
lcall
push
push
push
or
cmpb
mov
in
insl
js
fsubs
out
stos
into
hlt
mov
cmp
int3
sbb
mov
fdiv
pushl
jnp
jg
cmp
push
sti
mov
or
xchg
lcall
lcall
in
dec
fwait
inc
push
lahf
cmp
mov
cmp
jle
mov
scas
decl
mull
ja
dec
inc
mov
adc
jne
loop
clc
call
inc
jbe
fisttps
ds
cmpb
or
std
in
cmp
aam
jp
into
cmp
jmp
dec
popfw
dec
cmp
pop
popa
dec
aas
fistl
xor
inc
out
out
clc
aas
inc
ljmp
lret
jmp
jle
inc
aam
rol
cld
sar
pushl
and
out
xchg
and
test
movsl
fprem
or
stos
mov
mov
ret
fdivrl
lea
loopne
jnp
xchg
idivb
push
and
mov
cmp
int3
out
cwtl
shlb
or
dec
fcoms
repnz
mov
incl
xadd
inc
pop
dec
lret
push
mov
adc
sub
sbb
call
fadd
insl
aas
ret
loope
leave
stc
jae
inc
cltd
jp
pushf
faddp
es
incl
adc
push
imul
in
cltd
push
mov
sub
cld
adc
mov
ljmp
or
roll
xor
scas
test
out
lods
mov
fmuls
mov
lcall
rcl
mov
out
int
pop
or
add
lcall
or
out
xor
incb
dec
dec
fdiv
stc
loope
adc
test
jb
mov
dec
cs
jae
sti
loop
insl
int3
sub
add
into
fnsave
jno
dec
fdivp
nop
sbb
ds
or
loop
cwtl
cmp
stc
jmp
dec
cli
call
mov
cltd
movsb
out
aam
push
push
xchg
jge
jmp
cli
aaa
mov
sahf
popa
push
mov
mov
push
lcall
xchg
mov
aam
sti
and
sbb
inc
aas
daa
push
out
push
jae
mov
ljmp
js
inc
cmpsl
shlb
mov
jnp
or
mov
inc
aam
inc
mov
sbb
dec
fcmove
or
cld
lds
outsw
sbb
jp
or
xor
call
test
jns
and
add
stos
das
dec
sbb
cmp
pop
mov
mov
sub
mov
stos
add
lods
push
scas
xor
cltd
pop
sub
jg
xchg
outsb
pop
or
and
push
xchg
mov
pop
adc
sahf
fisubs
push
mov
ja
insl
rorl
pop
sbb
mov
dec
leave
jg
sub
mov
cmc
fwait
dec
mov
and
lds
dec
sub
decl
aam
jge
push
dec
inc
push
adc
mov
loopne
push
leave
cwtl
shll
ljmp
into
ja
insb
xchg
lods
outsl
push
jmp
and
mov
mov
dec
push
std
fdivr
add
xorl
rcl
inc
mov
mov
mov
call
call
push
push
jae
add
jle
inc
aas
cmp
lahf
js
mov
dec
jg
jle
pusha
xchg
mov
mov
incl
adc
pop
inc
or
jo
repz
outsl
inc
mov
daa
call
outsb
daa
ret
jo
addr16
sbb
mov
inc
push
fwait
sub
or
pop
cmp
inc
fsubs
daa
idivl
mov
imul
insb
add
shl
or
mov
fisubl
sub
sbb
pop
sub
xor
mov
pop
iret
dec
push
adc
adc
decl
push
pop
cmp
jle
cmpl
jmp
sti
push
aas
xor
jmp
dec
mov
into
in
mov
lahf
imulb
icebp
mov
jmp
rcr
push
adc
ret
push
or
or
fsubs
cmp
stc
call
mov
sbb
dec
inc
push
subb
add
insb
sub
mov
lods
cmpsb
xchg
subl
push
lahf
pusha
loope
mov
fcoml
popa
jne
or
pop
cs
outsl
cli
jg
push
push
push
push
jle
cmp
gs
cmpsb
pop
mov
adcb
test
incl
and
leave
fsubrl
ret
push
inc
add
jl
repz
jp
ljmp
mov
sub
mov
lock
pop
mov
and
mov
in
incl
xor
pushf
mov
inc
mov
test
jp
mov
cs
cmp
jg
aam
je
sbbb
dec
cmpb
mov
jae
jbe
lahf
stos
subl
pushl
in
ret
inc
jno
push
adc
mov
ret
mov
sbb
movsl
aam
pushl
test
push
xchg
lods
ffree
lds
inc
aad
add
lret
mov
outsb
andb
lahf
push
xchg
xchg
mov
dec
out
lcall
out
push
and
dec
mov
sub
inc
stos
rorb
insl
xchg
dec
push
or
add
clc
test
xor
call
jp
mov
lret
das
mov
mov
dec
mov
sub
lcall
mov
mov
xchg
daa
adc
mov
push
lret
cmp
clc
inc
adc
adc
popa
mov
xchg
push
rolb
shlb
lret
call
arpl
aaa
mov
xchg
iret
pop
mov
cmp
dec
sbb
test
call
pop
movsb
rclb
inc
pop
mov
add
fwait
and
jg
jp
mov
xchg
sti
adc
nop
orl
push
mov
pop
sub
add
stos
sbb
jg
jb
add
mov
mov
jb
xchg
fcmovu
sbb
shl
xor
fwait
sub
fs
sbb
add
adc
mov
in
inc
outsb
lret
inc
push
call
pop
fldt
and
cmpb
jle
stos
std
cld
ror
jmp
decl
or
cmp
arpl
add
decl
ds
push
insb
in
lods
dec
and
loop
mov
sbbl
or
fdivr
mov
jmp
mov
dec
iret
roll
xor
ret
or
xor
outsb
cmpsl
xchg
cmc
call
pop
pusha
or
popf
adc
inc
sub
adc
mov
lret
or
subl
daa
pop
xchg
clc
fcmovnu
out
mov
cmc
mov
rolb
incl
je
repz
popf
cmp
aas
clc
dec
cmp
push
cmp
popa
das
pop
sub
incl
xchg
mov
les
adc
sti
xor
xchg
jmp
pusha
push
cmp
jp
jp
in
lds
adc
adc
outsb
mov
sub
xor
daa
cld
sar
decl
movsb
fs
pop
xchg
jae
or
inc
xchg
and
sub
jg
rcll
inc
ja
in
mov
or
or
out
out
lret
mov
mov
dec
dec
mov
jmp
xchg
cs
mov
aam
jns
icebp
add
pop
ljmp
in
loop
dec
lahf
or
mov
push
push
nop
out
jmp
lret
mov
mov
fs
test
decl
js
dec
fstl
xchg
mov
dec
pop
pop
int3
stos
push
push
add
pushl
pop
mov
jbe
jl
call
xor
sub
adcb
jnp
lahf
pop
es
jg
add
jo
insb
out
push
arpl
push
pop
aad
dec
dec
or
sub
mov
ljmp
jno
adc
int
pop
das
push
pop
pop
les
mov
call
shrl
fwait
sbb
aad
test
btc
shr
mov
adc
fcoms
call
or
imul
ljmp
push
cmp
inc
test
insb
mov
lea
das
lcall
sbb
jmp
inc
cmpsl
dec
push
adc
and
add
mov
adc
pop
mov
xor
jl
push
inc
fcomip
ljmp
pop
hlt
test
mov
or
sbb
fcmovnb
push
cs
cmp
add
loopne
fiadds
xchg
adc
movsl
push
jg
push
mull
mov
data16
sub
or
jne
inc
aaa
mov
mov
inc
loop
inc
ja
cvttps2pi
jo
dec
in
cli
sarl
lds
inc
lret
push
jb
fcos
incl
mov
pusha
aad
ret
mov
jecxz
shlb
xchg
pop
mov
std
fwait
xchg
shrl
into
mov
addr16
rcll
cli
fwait
dec
ljmp
adc
std
out
enter
popl
push
mov
dec
in
adc
sar
loope
test
sub
cs
pop
push
roll
movsl
sti
aas
bound
jecxz
shll
lcall
mov
dec
push
in
sbb
adc
inc
shll
mov
enter
clc
paddsw
mov
adc
nop
imull
mov
or
test
mov
mov
fildl
cmp
xchg
add
cmp
xchg
jecxz
lcall
outsl
test
push
sarb
mov
inc
negl
jge
mov
adc
lcall
jecxz
jbe
mov
sub
add
test
cwtl
jg
sbb
cmp
pushl
ja
mov
pop
jns
jg
jmp
add
mov
xchg
pushf
test
push
test
incl
andb
mov
mov
inc
arpl
decl
outsb
cmpsl
stc
lods
mov
fnsave
pushl
movsl
scas
aam
call
and
movsl
sub
cmp
push
sub
sbb
mov
pushl
shlb
stos
xor
ja
mov
shlb
jg
aas
xchg
mov
inc
pop
sti
adc
aam
in
pop
sub
cli
out
loopne
xchg
sub
call
pop
push
mov
das
fmuls
movsl
shlb
mov
inc
icebp
cmp
mov
push
push
rcll
inc
pop
clc
ror
aaa
adc
hlt
ficoml
incl
dec
leave
aam
out
rcll
cs
leave
icebp
icebp
sti
sub
cli
leave
jg
decl
mov
pop
incl
rcr
xchg
and
subb
pushl
idivb
rolb
inc
mov
dec
push
clc
adc
rcrb
movsl
divb
pop
fdivs
ficomps
ljmp
adc
inc
lods
jecxz
ret
rcrb
fiaddl
mov
jnp
fcos
lcall
in
ror
pop
repnz
stos
addb
lds
mov
push
shlb
into
test
ljmp
ja
movsl
or
mov
or
xchg
into
fistpll
mov
cmp
adc
xorb
incl
movswl
dec
push
fmul
out
jl
into
shlb
aam
ljmp
jp
and
adc
cmp
lods
repz
daa
in
push
lea
pop
cld
nop
mov
dec
mov
jbe
data16
add
clc
jo
sub
sti
mov
lahf
addr16
sub
jmp
mov
shll
cwtl
fldl
mov
inc
inc
or
pop
cmpsl
icebp
mov
mov
push
sub
ljmp
pusha
leave
dec
push
and
div
mov
sub
rorb
adc
dec
mov
push
jbe
mov
xor
pop
jle
pop
ficomps
test
jl
cmc
ljmp
bound
ljmp
xchg
sbb
xor
xor
fistl
pushl
rorb
out
and
or
lret
insb
divb
movsl
cmpsl
loope
decl
dec
xchg
mov
push
dec
fbstp
dec
ss
mov
adc
call
stc
les
bound
ljmp
jnp
and
jno
xor
mov
incl
stos
pop
pop
lock
jbe
and
sarb
mov
hlt
insl
adc
jge
ljmp
pop
fdivp
fcmovne
add
stc
stos
add
cmp
adcb
scas
cmpb
cld
call
lcall
incl
cwtl
mov
push
sub
dec
ljmp
pusha
ljmp
insl
out
xor
jp
sbb
ja
ret
ljmp
inc
or
xor
push
fsubs
lds
xchg
jb
repz
push
das
mov
push
or
sahf
mov
jne
test
insl
sub
add
daa
pop
dec
incl
int3
rcll
pop
pop
fwait
stos
sbb
shrb
add
pop
je
dec
lods
sub
mov
cmp
inc
js
pushf
dec
enter
xlat
scas
push
jne
call
adc
xchg
repnz
sbb
decl
rcrl
clc
in
jg
and
clc
add
adc
jno
ljmp
jmp
not
es
les
stos
or
aam
into
loopne
jmp
inc
jg
test
xor
jno
loopne
mov
scas
add
sub
lret
push
mov
call
sbb
cli
xchg
aas
and
loop
leave
pop
addl
mov
adc
cwtl
fadds
pushf
inc
dec
leave
xor
mov
xchg
xor
decl
and
xor
xchg
push
fists
stos
mov
add
adc
xchg
and
sub
ljmp
paddd
lret
jbe
pop
adcl
xor
fistpl
cmp
and
dec
or
pop
mov
insb
test
jge
push
pop
idiv
ljmp
dec
lahf
mov
cli
int3
stos
sahf
pop
inc
js
xchg
pop
mov
dec
add
adcb
ljmp
push
jecxz
mov
out
nop
enter
out
mov
fstps
xchg
mov
ljmp
clc
std
cmpl
add
mov
stos
fisubrl
cmp
and
sti
push
fdivrs
ljmp
jnp
arpl
inc
test
lds
test
int
mov
decl
add
cmp
xchg
adc
xor
mov
pop
gs
lods
jmp
lcall
lds
jb
cmp
cmp
lock
leave
mov
decl
add
shll
pop
push
cltd
bound
adc
inc
shll
scas
out
dec
aad
jmp
jecxz
sbb
hlt
lock
sbb
scas
fcompl
insl
mov
cmp
dec
sarl
call
and
xchg
inc
and
mov
mov
insl
pop
je
lret
add
insb
lcall
fwait
pushl
xchg
cmp
cld
jmp
lret
lret
iret
shlb
rorb
jl
daa
mov
jmp
in
cmpsb
call
cmp
add
mov
loope
inc
mov
sbbb
or
test
push
adc
lahf
jae
hlt
cmpsb
decl
test
inc
sub
lods
jg
lcall
mov
sub
pop
mov
sbb
ja
push
ja
ds
jle
and
ja
lcall
dec
into
sub
cmp
or
in
ret
mov
stos
xchg
pop
mov
cmp
mov
insw
xchg
sub
out
incl
xor
adc
pushf
sbb
jae
fwait
iret
aad
lock
cmc
hlt
aaa
and
and
add
incl
pushf
ljmp
mov
pushf
lcall
sbb
push
ret
sti
aad
cmc
pop
je
stos
add
xchg
add
mov
in
mov
test
add
xchg
push
fiadds
fsubp
dec
push
dec
mov
push
std
jp
xchg
or
pop
cwtl
xor
ljmp
add
nop
xor
push
mov
imul
lds
popa
push
xchg
cltd
mov
insb
popf
dec
mov
lea
inc
inc
fisubrl
and
fildl
sti
sub
and
cmpsl
call
xchg
jnp
sarb
lret
mov
lock
mov
sti
ja
cli
pop
xchg
cmpsb
cmp
mov
test
ljmp
xlat
push
mov
sahf
inc
dec
or
mov
stc
out
ljmp
sbb
jge
dec
cmc
in
loop
mov
in
xor
push
daa
loop
stos
hlt
inc
jp
incl
icebp
push
nop
sbb
rcr
movaps
pop
or
std
lret
frstor
jns
enter
in
xor
inc
dec
dec
rclb
xchg
lea
lcall
xor
mov
xor
mov
jns
into
and
lods
stos
out
aas
mov
mov
daa
push
jmp
mov
adc
mov
scas
push
adc
cmpsl
cld
mov
in
cmp
test
lret
cmp
jmp
sub
nop
cmp
decb
push
adc
cli
lahf
fidivs
fld
jo
mov
jmp
push
cs
dec
inc
add
movsl
imul
out
outsb
dec
inc
adc
and
outsb
sbbb
cld
call
push
sub
mov
push
pop
in
xor
xchg
enter
mov
fbld
pop
pop
adc
rcl
push
jnp
cs
adc
insb
test
jo
lret
push
inc
inc
xlat
call
jge
jge
loop
aam
inc
and
call
cmp
test
pop
xor
sub
mov
cmp
rol
dec
mov
and
cmp
lret
add
push
and
push
inc
jb
punpcklbw
xor
fs
jmp
lea
mov
hlt
cmp
shrb
pushf
sub
push
jmp
mov
repz
mov
jo
mov
aam
xchg
test
call
jae
dec
mov
inc
inc
add
pop
div
loop
add
insb
repnz
push
inc
mov
call
mov
test
adc
adc
mov
jmp
xor
into
inc
add
insb
jp
int3
popa
mov
and
xchg
sbb
cmp
mov
ret
push
fisubrl
mov
mov
leave
ds
aas
add
xchg
jmp
insl
mov
cwtl
xor
mov
xorl
inc
cld
xor
loop
in
ljmp
enter
movsl
xor
xor
sbb
pop
fisttpll
xchg
call
in
out
lea
push
imul
jle
mov
mov
sbb
decb
mov
dec
push
iret
sbb
push
test
jns
cmc
and
call
jle
shr
xchg
int3
push
jnp
mov
hlt
pop
xchg
cmp
and
sbb
call
mov
stc
push
scas
dec
repnz
ja
jg
sbb
stc
pop
inc
mov
dec
in
add
lret
sub
lret
mov
loop
aaa
pop
cld
incl
inc
loope
pusha
sub
in
or
mov
decl
insl
sub
test
inc
gs
mov
pop
fdivrl
ret
sahf
clc
pushl
idivl
push
sbb
xlat
mov
or
xor
and
repnz
jno
jp
sub
inc
or
cli
cmp
std
or
out
icebp
pushl
andb
pop
pop
sahf
mov
cltd
mov
into
adc
adcl
inc
add
cmp
idiv
jmp
movsl
fs
dec
mov
in
inc
iret
popa
hlt
jbe
jecxz
enter
incl
sbb
dec
xor
sti
imul
xchg
adc
cwtl
or
loopne
jmp
sti
or
push
stos
sub
push
pop
pextrw
push
je
aas
cwtl
push
movsl
jl
xchg
dec
lea
jns
dec
stc
xor
andb
xchg
xchg
mov
push
mov
push
mov
adc
and
pop
cmp
adc
mov
push
ret
and
decl
jecxz
sarb
mov
sbb
sti
shlb
add
fcoml
xchg
adc
call
sub
mov
sbb
repz
fwait
xor
mov
test
and
cmp
call
sbb
rorl
jl
push
fucomp
mov
push
cmpsl
scas
dec
js
mov
inc
xchg
mov
ret
xchg
xor
pop
adc
mov
mov
out
inc
addl
pushl
lods
or
inc
idiv
ret
mov
popa
xchg
icebp
or
or
insb
fs
out
inc
enter
cmpsb
dec
in
clc
dec
outsb
sub
call
aaa
imul
and
cmpsl
fistps
push
pop
sub
scas
xchg
addr16
mov
ljmp
insl
mov
mov
fs
lahf
int
push
cmpb
lods
cmpsl
xchg
xor
ljmp
and
mov
insb
dec
push
jb
jb
jns
icebp
mov
or
sti
inc
xor
xchg
test
jg
ja
lahf
inc
popf
sbb
inc
fnstcw
and
lret
cmp
and
or
pushl
jns
ds
inc
nop
test
std
lea
jmp
imul
std
pop
sub
incl
add
roll
aaa
jb
outsb
outsl
enter
inc
dec
inc
das
cmpsb
out
mov
mov
lahf
xchg
push
sub
sahf
mov
test
add
jbe
in
shlb
scas
rol
sbb
leave
call
into
xchg
std
jg
add
ljmp
scas
les
sub
mov
test
hlt
adc
xor
mov
inc
xchg
imul
arpl
aad
hlt
sbb
out
ja
scas
cmc
cs
add
mov
decl
inc
push
push
jne
cltd
mov
dec
inc
xchg
popf
fdivl
jecxz
repnz
dec
lods
jge
sub
push
mov
lcall
out
outsl
ss
sbb
sbb
push
mov
xor
mov
loopne
and
mov
insl
fs
outsl
jg
adc
pop
mov
dec
dec
call
pop
rcrl
fstpt
ret
cmpsb
decl
cwtl
jae
popf
ss
mov
daa
push
lret
icebp
lret
push
adc
mov
inc
popf
mov
adc
sub
dec
in
cmp
fsubrl
add
das
cmpsl
add
jmp
and
bswap
cmp
lea
push
outsb
fimull
es
mov
aad
decl
aaa
jp
fxch
ret
lahf
dec
mov
ljmp
test
ret
incl
add
cmp
rol
test
imul
and
mov
xchg
push
cmc
pop
mov
pushf
jae
lahf
and
lret
pusha
pushf
decl
push
in
mov
test
in
pop
lret
xor
or
mov
insl
loop
lcall
mov
sbb
push
ret
popa
sbb
cli
push
pusha
out
int3
vprotw
incl
in
inc
gs
xchg
repnz
imul
rcrl
xchg
pop
test
pop
cmp
call
outsb
mov
inc
out
test
jmp
dec
fdivl
cmp
xchg
mov
lcall
jp
mov
and
xor
ja
shlb
xchg
cmp
aaa
and
je
inc
sarb
stc
push
cmp
das
mov
adc
adc
mov
jecxz
pushl
cld
mov
orl
sbb
pop
cmp
je
inc
ret
loope
pop
cmc
push
mov
mov
push
js
add
sbb
mov
or
divl
pushl
and
imul
into
adc
push
lcall
lcall
sarb
or
cmpsb
xchg
stos
push
dec
cmp
imul
incl
mov
jg
mov
mov
hlt
dec
mov
fwait
mov
pop
fstpt
add
aam
andl
cli
nop
sbb
outsb
or
lds
jne
xor
cli
dec
mov
iret
int
cltd
xchg
push
inc
into
inc
in
clc
mov
xchg
cmp
push
out
fadds
jg
sbb
jle
or
cli
jmp
testb
sbb
jbe
sub
movsl
lea
call
mov
int3
and
aaa
sahf
sbb
je
sbb
jne
int
scas
cli
outsl
push
cld
jmp
imul
pop
add
inc
adc
popa
cld
jmp
adc
adc
test
cmpsl
out
ss
jne
add
inc
ljmp
outsb
cld
rorl
nop
js
pushl
in
scas
xchg
fldl
dec
repnz
test
mov
adc
xor
mov
sub
lds
int3
inc
lock
out
xor
in
ljmp
pop
jp
or
sbb
aas
inc
js
push
stos
and
xor
dec
lret
call
mov
lods
ljmp
jae
leave
add
aad
xchg
mov
jg
incl
hlt
push
nop
sarl
fisttpll
sbb
pusha
std
mov
lock
jg
loopne
push
dec
lods
jp
push
je
mov
xchg
jmp
repz
sar
or
jmp
jno
sbb
jmp
inc
sbb
jecxz
pmaddwd
jo
ljmp
push
lret
mov
pcmpeqb
out
mov
popf
fstpl
decl
pop
rorb
cmp
aam
jns
fdivl
dec
es
movsb
in
adc
xlat
mov
push
mov
out
add
in
out
cmpsl
sub
lock
movsb
mov
sub
repnz
pushl
aaa
mov
ret
aaa
or
bound
insl
lcall
jg
stos
pop
xchg
cmc
push
lds
ret
sub
popa
cmp
cmp
xor
inc
std
in
xchg
xchg
jo
loope
stos
dec
mov
test
imul
sbb
fildll
jmp
inc
mov
mov
lret
iret
nop
push
movsb
rorl
sub
stos
pop
xor
fs
out
test
or
mov
pop
xchg
call
xchg
aad
test
and
adc
or
sub
loop
xchg
aam
mov
loop
or
je
adc
imul
pushl
sub
or
ds
add
shll
xor
iret
imul
faddl
sbb
push
jbe
clc
divl
add
mov
fimull
xor
push
fcomip
incl
and
xor
fstpl
in
sbb
pushf
sbb
inc
cs
call
xchg
sbb
and
or
testl
xor
sbb
cli
adc
sti
jnp
inc
cwtl
aad
les
fisubl
pop
add
xor
std
int3
sbb
test
inc
mov
push
push
sub
jp
adcl
pusha
add
cmp
cmc
mov
jnp
cmp
ds
jle
xor
or
add
ficoml
or
cmp
mov
mov
cmp
int3
xor
mov
push
push
jg
or
lret
sbb
clc
add
stc
pop
in
push
xchg
or
lcall
sub
or
adc
fs
std
push
in
insl
movb
std
sti
test
cmpsl
test
xchg
jl
pushl
shll
dec
aam
mov
push
mov
mov
rorb
adc
rcrl
fwait
jmp
mov
sub
imul
adc
and
testb
scas
add
sub
enter
mov
push
lods
cwtl
addb
aas
sti
incl
js
stc
mov
jno
aam
dec
lret
dec
or
call
adc
dec
js
inc
push
hlt
xor
dec
retw
dec
jne
mov
jne
mov
mov
cs
add
mov
notb
mov
jns
inc
aad
pop
fsts
jmp
ror
loope
mov
loop
frstor
popf
sub
adc
cwtl
fldl
in
daa
ficoml
call
repz
push
mov
fistpl
int3
mov
mov
jbe
xchg
aam
adc
sub
incl
clc
loopne
out
lcall
xor
lret
adc
push
jnp
add
jg
inc
jne
jle
imul
out
and
mov
mov
mov
add
xor
sbbb
or
cwtl
mov
pushl
cmp
sbb
xchg
pop
jne
add
push
stos
jmp
push
ja
mov
incl
rorb
lret
popa
out
hlt
data16
xor
push
rcr
jmp
add
and
aam
aas
mov
xlat
adc
jb
or
jnp
inc
popa
jbe
test
xor
xchg
jne
cmpsl
in
mov
dec
adc
pop
xor
mov
add
dec
sbb
enter
bnd
out
pop
enter
inc
xchg
adc
lcall
dec
and
inc
rolb
push
lret
dec
pushf
mov
test
insl
jle
outsl
jno
add
sub
mov
enter
push
pop
push
js
adc
ljmp
cmpsl
daa
inc
jns,pt
ss
out
pop
cmc
mov
psadbw
mov
dec
stc
jg
ja
xchg
sarl
in
pop
fbld
cmp
adc
gs
ret
mov
out
in
faddl
push
adc
push
push
adc
mov
outsb
repnz
movsl
cmp
insb
incl
rcll
outsl
sub
sbb
xor
lds
inc
and
decb
cld
pushl
frstor
fs
mov
push
or
pusha
cmp
popf
pop
ljmp
jmp
lods
mov
shrl
push
ret
inc
xlat
adc
jb
push
test
pop
aam
and
ljmp
push
lods
std
xchg
inc
jmp
mov
int
xchg
sub
test
call
jge
add
jmp
cmpsl
out
sub
fs
adc
adc
stos
ljmp
pop
imul
mov
hlt
lods
inc
popa
sarl
mov
xchg
pop
and
fs
inc
int
outsl
cmp
mov
mov
shlb
mov
iret
sarb
mov
flds
mov
js
xchg
or
stc
sbb
data16
sbb
jge
es
jg
pop
adc
mov
movsl
cmp
mov
aaa
mov
pop
sbb
pushl
cmp
jae
aad
insb
sar
mov
jl
pushl
dec
jnp
movsl
jnp
xor
dec
nop
loope,pn
in
pop
mov
or
jg
xchg
push
lods
inc
mov
fbld
mov
rol
mov
js
les
outsl
push
icebp
or
inc
sbb
jns
xchg
cmc
int
dec
adc
xor
pushl
aas
push
sub
adc
call
xchg
mov
in
pop
leave
or
dec
loope
ljmp
push
stc
lret
dec
jnp
pop
rolb
pushl
mov
inc
fildll
out
scas
sub
fisubrs
mulb
bound
call
cld
xchg
sub
hlt
idivl
lods
cmc
jb
xor
cmpsl
xchg
cltd
mov
inc
adc
lcall
inc
int3
cmp
or
jmp
cwtl
inc
ret
aam
call
dec
cmp
cltd
dec
je
inc
xor
mov
mov
stos
out
ja
es
imul
push
popf
idivl
adc
push
or
pop
xor
pop
xor
jmp
fcompl
repnz
out
xchg
out
scas
sahf
scas
xchg
mov
mov
pop
insb
xor
mov
inc
in
mov
stc
sbb
ljmp
scas
sbb
jg
aad
xor
inc
clc
xchg
cmp
xchg
ljmp
lret
std
int3
mov
dec
outsb
cmp
stos
mov
pushl
inc
test
repnz
test
fmuls
repnz
adc
test
xchg
push
std
ret
imul
fwait
mov
dec
sub
pop
pop
inc
sbb
call
stos
int
lods
stos
orl
jecxz
inc
inc
inc
in
inc
inc
push
mov
js
pushw
clc
dec
js
push
ret
test
jbe
decl
adc
push
rol
sub
hlt
mov
mov
mov
xor
mov
dec
or
test
and
inc
jmp
popf
sub
call
jae
mov
sti
sbb
xchg
incl
xchg
cld
add
int
adc
xchg
jb
mov
mov
or
jmp
jb
mov
sub
cmp
js
mov
dec
stos
mov
mov
cs
dec
mov
add
mov
pop
je
dec
out
lret
dec
call
dec
and
test
data16
jmp
pop
mov
jno
dec
inc
test
mov
xor
out
lcall
dec
jnp
jbe
and
popa
xchg
sub
ret
or
and
mov
or
addr16
sub
scas
es
mov
scas
dec
push
push
pop
testb
jmp
mov
js
xchg
int3
imul
daa
xchg
xchg
jbe
scas
cli
lcall
scas
xchg
mov
icebp
ljmp
dec
mov
aas
inc
dec
jne
pop
mov
dec
jle
sub
sbb
mov
int3
stos
jecxz
jp
pop
cmp
std
xchg
pop
or
movsb
ljmp
ret
ljmp
cmpsb
lret
rcrl
aas
push
bnd
push
jns
sar
enter
add
add
xchg
mov
sub
push
rcl
in
lcall
cltd
sbb
int
jle
dec
mov
xchg
dec
aam
push
cli
mov
or
clc
push
sbbl
cs
dec
dec
dec
cltd
xor
and
mov
incl
pop
add
jbe
add
lahf
cmp
mov
scas
xchg
inc
or
repnz
dec
idivl
xchg
xor
jmp
daa
and
fistps
pusha
aas
out
inc
pop
sti
jnp
jecxz
ds
inc
loope
sub
add
cmp
push
fsub
enter
mov
fistl
mov
incl
cmp
fidivrs
icebp
fildll
push
adc
or
fcos
push
push
sub
sahf
inc
sub
lcall
add
xchg
lds
incb
mov
jp
jae
into
fcoml
movsl
sub
dec
out
or
ret
test
sar
lcall
xchg
mov
in
call
mov
dec
adc
jg
xorb
adc
out
xchg
je
adc
enter
pushl
cmp
xor
clc
add
and
cwtl
iret
decl
in
popf
or
mov
pop
int3
aaa
ss
jmp
cmc
adc
shll
call
or
es
xchg
dec
pop
sub
int3
lcall
mov
iret
insb
adc
ficompl
lds
lcall
jno
fcmove
repnz
push
jnp
pop
fisubrl
fs
fcomip
cmpsl
mov
icebp
shll
loop
repnz
shll
xor
call
xchg
jge
cmpsb
xchg
arpl
ja
das
cs
push
inc
cmp
fisttpl
scas
adc
pcmpgtb
inc
push
lahf
add
jg
ja
stos
xor
push
negb
xchg
lock
jmp
sarl
or
add
inc
jecxz
pop
mov
inc
les
push
adc
pop
sub
push
sti
mov
ret
orb
xchg
adc
jmp
daa
cmp
jmp
mov
rcll
sahf
movsl
xchg
je
cltd
sbb
rcrb
jl
dec
jo
std
pop
stos
repnz
mov
push
jge
scas
or
mov
jbe
jge
jae
jbe
lock
fdivl
push
xor
jno
outsl
dec
aaa
and
aam
pop
outsl
frstor
lret
adc
xchg
mov
decl
out
adc
js
mov
scas
movsl
icebp
popf
imul
fwait
mov
sbb
push
cmc
gs
or
adc
xor
pop
les
stos
inc
scas
out
mov
ljmp
iret
aas
jle
push
adc
stc
cs
mov
xor
mov
movsl
cmp
inc
push
stos
mov
punpckhdq
sub
and
call
imul
popf
jno
inc
pushl
aam
adc
fldenv
or
pop
xchg
aaa
cli
popa
lds
jecxz
decl
or
push
lahf
js
stc
cld
sahf
push
mov
jmp
out
or
in
push
dec
enter
pop
mov
inc
ja
jbe
lcall
das
aaa
cld
mov
pushl
cld
jmp
mov
jbe
int3
loopne
test
or
push
sub
test
push
call
jecxz
shll
pop
adc
mov
mov
or
and
das
decl
jne
stc
pop
xlat
sahf
mov
mov
mov
test
fs
and
xchg
ret
aaa
sbb
jl
cmpsb
ret
fwait
push
addr16
repz
sub
decl
lods
stos
out
add
inc
sub
xchg
xchg
mov
in
jecxz
sbb
decb
adc
add
xchg
jecxz
fidivrs
lock
xchg
add
das
inc
mov
mov
gs
jl
test
fcoml
mov
pop
sbbl
ljmp
push
mov
aam
and
pop
inc
or
mov
push
lods
xor
mov
xchg
call
cmpsb
adc
jbe
jmp
movsl
sub
sub
in
scas
lahf
mov
jp
aam
jne
jne
pop
call
call
and
imul
mov
in
les
aas
xor
inc
test
jns
jmp
lods
dec
notb
pop
inc
jne
add
in
jnp
ret
xor
mov
das
fs
sub
adc
ret
cli
in
mov
pop
fs
add
cltd
and
mov
das
clc
adc
das
mul
addl
lea
andl
ret
inc
jmp
mov
xor
test
push
leave
mov
fimull
bnd
lret
scas
add
mov
dec
or
sub
push
outsb
mov
aad
jo
sahf
aad
ja
and
pushl
xchg
rcll
mov
mov
mov
cmp
xchg
push
jp
pop
sub
jmp
imul
mov
inc
jnp
xor
out
and
mov
cmp
leave
jle
call
aad
insb
sub
cmc
pop
or
test
mov
iret
lods
or
jg
inc
std
faddl
lahf
ret
xchg
cwtl
xor
mov
ss
pop
or
inc
out
jo
mov
cwtl
das
clc
call
incl
ret
es
mov
ret
inc
popf
xchg
lea
insl
sbb
mov
xor
jno
add
or
or
sbb
daa
mov
out
add
cmp
mov
fidivrl
xor
mov
mov
fcoml
loopne
lcall
mov
lahf
jno
lds
adc
repnz
insb
lds
mov
aad
add
cmp
imul
mov
orb
aas
or
lock
dec
je
pop
jne
mov
test
push
fsubp
hlt
pop
xchg
add
dec
and
lcall
incl
test
pop
mov
leave
enter
in
sbb
xorl
aam
mov
in
inc
mov
xchg
mov
outsb
cli
int
mov
lret
xchg
jo
push
aaa
sub
sbb
incl
sub
mov
sbb
or
mov
dec
outsb
push
icebp
inc
inc
das
cmp
add
lock
outsb
xchg
out
mov
ljmp
loopne
mov
mov
push
jge
popl
iret
and
flds
std
xor
cli
pushl
mov
dec
adc
popa
stc
ftst
andb
xor
add
ljmp
addr16
jg
adc
and
mov
mull
inc
push
outsl
out
incl
cs
cwtl
sbb
xor
xor
pop
into
xchg
inc
fistps
mov
pop
ficomps
mov
cmpsl
add
mov
sahf
mov
stos
sbb
lcall
pop
mov
js
cmp
sub
sub
lcall
mov
mov
adc
mov
mov
pop
pop
loope
iret
mov
pushl
and
dec
call
stos
in
push
nop
stc
imul
mov
std
jle
sub
push
mov
mov
cmp
hlt
sub
cmp
sub
test
xchg
inc
xor
lahf
or
xchg
cmp
test
mov
xchg
pusha
in
xor
repnz
mov
out
fwait
jmp
mov
dec
sbb
mov
jge
incb
pop
pop
jl
xchg
inc
mov
xchg
jb
xchg
rorl
dec
jmp
and
mov
cmpsb
inc
dec
sub
ret
scas
daa
pop
flds
lcall
dec
dec
mov
movsb
mov
lahf
mov
scas
clc
out
loop
loop
test
mov
push
pusha
lods
in
sub
das
shr
add
push
or
adc
popa
js
xchg
pop
lds
jl
and
jo
ss
pop
cmp
fs
xchg
outsl
decl
xor
lds
sti
dec
dec
jnp
fsubs
adc
adc
pushl
jg
jecxz
mov
cmp
movsl
clc
popa
inc
aaa
cmp
fisubrs
jp
xchg
xchg
mov
pop
dec
or
outsl
sub
rclb
and
lret
xchg
mov
mov
pushl
or
sarl
lods
and
out
and
addb
ljmp
xchg
lret
cmpsb
test
push
xor
or
pop
inc
sbb
add
fidivs
inc
cmpl
jle
sub
out
adc
fisubrl
fdivl
lcall
mov
mov
add
xchg
test
jbe
add
mov
call
mov
or
xlat
dec
or
fwait
into
ss
movb
gs
lcall
adc
lods
loope
adc
cmc
dec
adc
or
push
xchg
mov
jo
pop
mov
ljmp
jbe
push
jmp
cmpsb
pop
xchg
orl
out
xor
add
lret
jmp
movsb
addr16
loop
and
pop
add
int3
or
shl
fstps
shrb
shr
popaw
lea
mov
mov
pushf
ret
das
add
int3
mov
mov
call
ds
jp
fnstenv
dec
jnp
xchg
cmp
enter
imul
pop
lcall
imul
mov
lret
xor
cmp
mov
xchg
lds
fiadds
fmul
iret
les
ljmp
pop
ljmp
mov
fucomi
mov
adc
xchg
mov
xor
rolb
cmp
pop
call
push
and
sbb
mov
push
call
or
aad
ret
pop
xchg
sub
sarb
jp
sbb
ljmp
insl
mov
mov
jb
mov
mov
xor
incl
into
dec
and
inc
pop
dec
insl
in
movsb
sti
mov
adc
sub
out
add
lret
cmp
ret
push
xchg
and
sbb
mov
std
mov
adc
sbb
push
dec
iret
bound
ja
xlat
pop
call
jg
daa
xchg
scas
sub
and
ds
xlat
lahf
lea
in
mov
jmp
add
movsb
xor
imul
scas
lods
rolb
mov
jbe
ss
ret
jmp
xchg
ljmp
rorb
aaa
xchg
dec
dec
adc
cmp
movsb
test
xor
push
pop
movsb
mov
enter
cmpsl
add
push
dec
cltd
and
fmul
pop
push
mov
push
dec
loop
and
mov
jne
dec
mov
jle
dec
lret
jge
mov
fwait
cwtl
jle
cld
inc
inc
jnp
xchg
fistps
jmp
or
sub
mov
fcomi
bound
repz
jp
jnp
out
jmp
mov
pop
repz
mov
icebp
pop
movsl
faddp
shlw
ret
cmc
and
call
cmp
scas
mov
iret
enter
imul
xchg
pop
jbe
loop
sarl
push
dec
out
lock
call
xor
je
ljmp
cli
jg
popf
leave
lock
mov
shll
push
mov
movsl
repz
cmc
sar
mov
push
in
ja
std
mov
push
cmp
mov
outsl
movsl
or
pushl
inc
push
lret
imul
js
imulb
lcall
add
lcall
sbb
mov
sbb
nop
inc
ja
test
jmp
ja
adc
and
cmp
pop
fiaddl
lcall
ja
mov
mov
leave
and
movsl
out
std
jg
xchg
inc
out
sub
and
push
mov
mov
push
add
ljmp
sbb
aaa
cmp
fucomip
or
lret
mov
popa
fldl
lcall
fisubl
int
loopne,pn
mov
push
push
or
sub
sub
jns
roll
and
fisubs
xlat
iret
aas
inc
ljmp
push
js
pusha
repz
dec
jl
pushf
out
out
pop
subb
xchg
jmp
mov
sbb
out
aam
and
call
adc
jg
cli
mov
cmpsl
sub
pop
les
stos
mov
pushf
ljmp
mov
jmp
movsl
dec
rclb
and
xor
out
int3
cmp
decl
dec
adcl
jne
xchg
bound
pop
cmp
and
orb
cwtl
pop
jmp
mov
call
pop
aas
dec
loope
fmull
dec
sbb
jbe
or
sbb
cmpsb
incl
mov
loop
and
test
and
pop
jae
fidivrs
mov
arpl
call
rol
movsb
nop
test
lahf
sbb
outsl
push
dec
cmp
sti
pop
xchg
fdivrp
cmp
xor
sbbb
adc
lock
or
shrb
push
mov
sarb
out
arpl
or
xchg
xchg
stc
sub
movsb
sahf
sbb
std
cmp
fcomip
call
jbe
sbb
xchg
shlb
std
adc
mov
inc
movsl
lods
jg
lcall
sub
hlt
in
mov
dec
cli
mov
or
test
cmpsl
sub
inc
inc
or
pop
inc
dec
xor
repnz
test
jg
pop
sbb
loope
mov
test
imul
popa
pop
stos
mov
jmp
xchg
loope
cmpsl
ja
jecxz
repz
shll
rorl
lds
in
mov
jae
decl
out
stc
es
insb
cmc
mov
int3
jecxz
mov
xchg
and
orl
jle
repz
pusha
push
mov
lods
inc
mov
push
sub
or
sbb
sbb
incl
fistps
aam
xor
mov
add
push
fwait
xor
loope
adc
lcall
in
loopne
xor
lahf
pop
jmp
in
jle
jg
xchg
lods
std
push
mov
mov
mov
loopne
nop
add
imul
icebp
jne
inc
pop
add
push
loop
or
test
stc
pop
add
sub
out
sti
out
mov
push
sub
orb
and
scas
cli
jmp
mov
gs
adc
xchg
ficomps
sub
jg
add
fwait
push
div
inc
or
or
mov
adc
cmp
jle
mov
repz
jl
dec
and
jp
mov
cs
stos
insb
ret
clc
lods
daa
xchg
push
filds
sub
xor
daa
fisttpl
push
add
outsl
pop
sbb
es
mov
add
ljmp
inc
pusha
and
push
ss
rclb
fs
cmp
flds
mov
cs
pop
cltd
leave
pop
inc
lret
test
inc
xchg
enter
call
addl
addr16
xor
sub
pop
add
leave
lcall
or
popa
loope
movsl
shrb
cmc
xor
xor
xlat
jmp
jae
and
pushl
out
testl
dec
int3
push
mov
mov
dec
mov
push
mov
inc
pushl
call
mov
or
jo
mov
or
dec
loopne
mov
mov
in
sub
das
add
dec
adc
sarb
sbb
xor
jecxz
mov
lcall
js
bound
rcll
mov
sub
sub
test
rorb
out
stos
cmp
mov
pop
push
xchg
bound
xor
into
add
jmp
les
popa
or
lds
sub
push
cmc
mov
mov
sub
mov
or
andb
call
cmp
imul
loop
sub
scas
dec
cmpsb
mov
aam
mov
lcall
cmpsl
pop
mov
ret
cmp
mov
xchg
ljmp
hlt
dec
xchg
in
jle
icebp
repz
ljmp
push
arpl
and
xchg
mov
dec
adc
in
loopne
clc
test
adc
xchg
xor
pop
mov
mov
xlat
xor
popf
push
xchg
and
ljmp
dec
xchg
out
xchg
mov
xor
and
call
mov
inc
sar
mov
cmp
pop
cmp
inc
fmull
xchg
xchg
cmp
ljmp
pop
insl
loopne
sbb
enter
repz
inc
fsubp
lods
in
cmp
xchg
sbb
das
clc
xorb
clc
cmpsl
xlat
mov
cs
enter
repz
ret
dec
xlat
pop
pop
or
in
mov
or
xor
jnp
and
nop
sbbl
dec
push
js
call
movsb
js
mov
dec
add
jmp
mov
lcall
and
ds
outsb
adc
cmp
wrmsr
mull
call
cmpsl
cli
xor
inc
mov
mov
mov
jl
movsl
xchg
dec
jae
push
jmp
sub
jle
inc
pusha
test
cmp
mov
inc
in
sbb
sbb
pop
pop
xchg
pop
and
cli
adc
jae
mov
jge
outsb
test
inc
cmp
scas
lods
dec
sub
mov
mov
in
jnp
sub
ljmp
mov
dec
dec
fidivrs
jae
int
aas
inc
data16
mov
mov
sbb
and
shll
pop
popa
in
or
addl
sti
repz
dec
push
mov
mov
mov
mov
inc
loope
xor
test
xchg
mov
in
mov
test
aam
and
sbb
adcb
xchg
call
push
lock
sub
xchg
push
push
xchg
jne
inc
repz
pop
xlat
inc
in
dec
adc
test
inc
ss
mov
cmc
xor
pushl
out
inc
mov
incl
mov
ret
aam
mov
lods
or
loop
mov
stos
mov
jb
stos
adc
ljmp
cmpsl
push
push
dec
pop
fcomps
dec
add
pushl
gs
lahf
and
add
sbb
pop
sti
mov
jmp
rcll
ret
lahf
cmp
mov
hlt
pop
add
loopne
mov
enter
clc
push
incl
lods
fwait
jbe
cmp
in
mov
mov
lock
cli
and
add
cmp
outsl
or
stos
lcall
fucomi
lret
push
fmulp
iret
mov
cmp
jmp
jge
jmp
je
test
xor
sbb
mov
jmp
iret
or
inc
push
sbb
mov
jb
lea
push
leave
fcomip
ljmp
in
jle
xchg
and
out
and
out
lods
pop
push
dec
dec
dec
addb
iret
jl
fcompl
repnz
fistl
out
pop
ds
fs
mov
lcall
rolb
mov
add
imul
ds
xchg
icebp
fstpl
sbb
loope
sub
cmp
repnz
jp
int
push
loopne
dec
std
sbb
data16
sbb
imul
vpsubusb
out
jecxz
int3
test
jle
push
je
mov
pop
xchg
cmp
cmp
addr16
sub
adc
movsb
mov
cmp
lcall
or
ds
jbe
pop
cli
out
inc
push
sbb
cmp
aam
shrb
dec
out
sar
call
push
mov
std
mov
addr16
cmp
aas
mov
shrl
pop
cmpsl
add
mov
pop
cmpsb
rcrb
test
inc
jl
mov
cmp
mov
lea
call
rolb
mov
fistps
sub
outsb
ficomps
cwtl
ljmp
jo
paddusw
rcr
mov
pop
or
push
cmp
out
fdivrp
push
scas
call
cmc
daa
inc
stc
pop
xor
ljmp
test
add
fnstcw
lahf
in
pop
jle
lcall
icebp
sbb
add
mov
adc
mov
scas
mov
maxps
mov
xchg
and
xchg
push
mov
out
movsb
lds
ja
incl
daa
xor
fstpl
and
in
xchg
pop
mov
lahf
push
fdivr
push
jmp
jmp
mov
sbb
xchg
pop
mov
fistps
inc
or
cmp
cmp
mov
out
mov
test
scas
lods
jle
sti
xchg
or
adc
and
out
cli
adc
or
cmp
sub
or
insl
imul
jg
mov
and
movsl
add
into
push
arpl
jecxz
lcall
decl
call
and
or
add
fnstsw
popa
jecxz
insb
xor
sub
lock
ljmp
clc
movsb
and
mov
mov
mov
das
icebp
push
or
or
dec
mov
in
popf
cmpsl
push
lods
or
jnp
ret
pusha
or
bsr
daa
push
add
sahf
push
jno
aaa
int3
ret
push
and
icebp
in
in
push
ljmp
mov
add
add
imul
cs
jne
inc
lods
leave
sub
xchg
and
es
pushl
xor
or
push
adc
xor
shr
fdivrl
loop
mov
or
scas
mov
push
lret
mov
jo
mov
jp
aas
fists
jmp
cmp
mull
sub
jno
push
mov
sub
xor
cmp
jmp
cld
add
addr16
aam
fadd
jno
scas
push
decl
add
jb
shl
decl
adc
xchg
shll
cld
mov
js
test
inc
sbb
iret
mov
test
mov
mov
inc
fcomp
mov
cltd
addr16
mov
sub
daa
xor
vminsd
sarb
pop
hlt
decl
enter
fstpt
outsl
inc
cmp
jmp
or
loope
mov
cmp
mov
push
pop
pop
icebp
or
mov
lods
test
lcall
sub
mov
ja
call
cmp
mov
jbe
aam
test
inc
ds
sbb
xor
push
fwait
rclb
xchg
xchg
out
xlat
pop
push
push
xlat
xchg
loopne
arpl
dec
mov
sub
jmp
imul
jns
js
jge
mov
js
in
jnp
mov
test
in
mov
mov
inc
mov
xchg
push
cmpsl
lahf
movsl
aaa
shrl
mov
push
std
incl
dec
add
xor
add
out
dec
cmp
xchg
test
incl
call
and
sbb
dec
hlt
cmp
push
inc
rolb
mov
sbb
cli
mov
sub
push
scas
adc
insl
mov
sub
outsb
mov
incl
jmp
mov
popa
insb
scas
and
sbb
jle
fxch
pop
popf
sub
dec
arpl
xor
push
stc
inc
and
xchg
lret
push
popf
mov
cmpsl
fildll
xchg
inc
push
cmpsb
ss
cmc
mov
ds
lds
les
int
enter
xchg
mov
cmp
mov
adc
ljmp
jnp
jle
add
adc
cmc
jmp
push
push
movsl
jns
inc
fistps
jmp
inc
inc
stos
aaa
adc
and
mov
out
mov
std
pop
add
sti
decl
mov
mov
mov
xor
cld
es
push
ret
jno
sub
cmpsb
decl
inc
rcrl
dec
adc
call
clc
dec
aas
inc
sbb
lcall
lock
add
adc
ret
mov
cmc
int3
mov
addl
mov
scas
add
jae
lret
push
lahf
sbb
int
sub
jbe
jns
cs
decl
lods
mov
sbb
jl
push
cmpsl
shr
dec
sar
lods
sbb
test
test
jg
cmp
cmp
lds
push
push
adc
pop
xor
sub
cmp
lea
incl
cmp
roll
and
or
incl
fwait
ret
rcrl
arpl
add
into
shr
scas
inc
and
std
ljmp
test
dec
outsl
cmp
test
in
cmc
les
mov
pop
popa
outsl
pushl
repz
lds
push
jno
ror
push
std
out
dec
subl
rcl
incl
xchg
sarb
ss
pop
fcoml
subl
cld
and
mov
push
loop
dec
lcall
adc
into
xchg
sub
inc
arpl
outsl
sub
jmp
fstpt
xchg
cmp
imul
xor
mov
pop
mov
cmpsl
cs
call
xchg
cmp
les
aad
test
and
pop
mov
cmp
leave
mov
mov
mov
jmp
xchg
mov
mov
dec
or
imul
jmp
call
and
imul
cmpsl
xchg
scas
jge
jecxz
lcall
orl
xchg
pop
push
pusha
fsubrl
incl
adc
and
cmp
cmpb
mov
push
sbb
jmp
or
psubsw
roll
pop
mov
call
fimuls
iret
add
dec
cmp
cltd
ljmp
dec
fs
push
loopne
sbbb
mov
in
jecxz
das
pushw
outsl
imull
jae
jno
dec
rolb
jg
mov
dec
inc
getsec
fsubl
xchg
xchg
jb
dec
lods
cs
in
jb
pop
pusha
sar
decl
jne
int
pop
mov
sub
jnp
lea
jno
pop
xchg
fwait
loop
sahf
xchg
ds
mov
lods
call
mov
jle
pop
hlt
scas
mov
stos
jle
icebp
ja
jo
add
cmp
in
lock
rcl
jmp
dec
sti
cmp
int3
dec
pop
lcall
add
test
sbb
xchg
lea
lea
fstp
jp
sub
jge
mul
or
jg
call
insb
pop
and
sbb
mov
jns
inc
dec
dec
rorb
movsb
shll
mov
in
mov
dec
fwait
xor
pop
lds
dec
inc
mov
jmp
std
jl
jns,pt
mov
pushf
addl
or
js
scas
mov
das
nop
xchg
pop
or
cld
mov
leave
out
inc
sub
ret
dec
pushf
lods
lds
jge
fxch
jne
call
jno
add
or
jb
add
mov
push
push
jp
cmc
dec
ljmp
fisubl
inc
fwait
shll
test
fsts
push
in
repnz
in
dec
xchg
popa
inc
repnz
invd
test
decb
dec
and
aaa
dec
mov
cmpsb
jecxz
setne
out
cltd
ljmp
stc
adc
xbegin
sbb
mov
dec
jle
lahf
out
mov
scas
mov
cld
xchg
int
pusha
inc
push
shlb
cwtl
std
lcall
ds
lods
dec
or
call
xchg
dec
rcll
into
addr16
and
ja
and
out
jmp
stc
jns
xchg
mov
insl
test
push
fucomp
lahf
adcb
loop
cmpsb
test
inc
mov
push
std
cltd
ret
pop
mov
out
je
xchg
add
xchg
and
jg
sti
cmp
pushf
mov
mov
jno
cmp
mov
std
or
push
cld
outsl
mov
movsb
jl
aaa
aad
and
daa
sub
decl
xchg
pop
lock
stos
and
push
hlt
push
ljmp
fs
rep
sub
mov
mov
fistps
jne
xchg
dec
pushf
pop
ss
out
pop
aam
movsb
setnp
or
out
jne
adc
stos
mov
aas
in
sub
sahf
pop
push
call
lods
cmp
mov
mov
popf
js
iret
fidivs
ss
pop
shlb
in
or
inc
sbb
fs
fcomip
fldenv
or
pusha
or
inc
push
mov
popa
out
cmc
push
scas
je
jmp
leave
faddl
inc
adc
hlt
jo
out
and
call
jno
or
jbe
loop
xor
decl
les
rorl
fprem1
jns
sti
inc
inc
mov
xor
pusha
pop
mov
decl
mov
das
and
das
int3
dec
out
daa
xor
hlt
xor
outsb
es
pushl
jmp
loope
jecxz
pop
push
cld
cli
xorb
in
lods
popf
mov
aam
mov
fsubr
stos
lods
mov
sarl
pop
jmp
add
fidivrl
adc
pushl
pop
rol
push
outsl
cmp
and
int
mov
ds
movl
fwait
movsb
ljmp
fwait
in
push
jo
out
xor
test
iret
test
in
ljmp
mov
call
jo
dec
pop
or
pop
mov
jmp
dec
icebp
out
mov
xchg
mov
jp
jnp
cmp
adc
loope
ljmp
cmp
adc
daa
add
xlat
mov
rclb
mov
sub
jmp
imull
and
inc
and
jmp
mov
inc
inc
push
jg
adc
aad
mov
je
les
lods
jne
cli
mov
sbb
je
pushl
mov
add
push
mov
xchg
or
xchg
arpl
in
aam
cmpsb
in
jmp
sar
aam
adc
pop
mov
cli
adc
push
in
pop
push
xorb
or
dec
sub
loop
inc
mov
xchg
shr
loopne
es
push
dec
outsb
pushf
pop
int
lcall
decl
imul
std
rolb
addb
push
sub
int
in
pop
fwait
in
testl
lret
int3
jp
sbb
inc
or
call
mov
mov
imul
call
push
mov
fstl
sub
and
out
mov
imul
push
push
mov
xchg
adc
cli
pop
jnp
cmp
fwait
dec
cwtl
add
imul
xchg
idiv
incl
and
mov
push
add
lods
push
adc
jmp
scas
mov
dec
cmovns
mov
push
xchg
push
cld
pop
cmp
jl
lcall
add
pop
dec
or
jb
stos
cmpsl
push
xchg
jl
xor
sti
jmp
pop
dec
inc
imul
stos
inc
das
cmp
fidivrs
mov
adc
movlhps
jne
sub
pushl
shrl
orl
dec
add
push
rclb
mov
out
lcall
aam
orl
xlat
push
lahf
inc
jg
add
push
pop
jmp
mov
sbb
loopne
insb
cmp
sarb
xchg
lcall
pushl
xchg
mov
push
jmp
xorl
and
mov
and
jbe
pushl
adc
lahf
pop
push
es
pop
mov
pusha
movsl
lods
push
fwait
jl
popf
jb
iret
rolb
jmp
stc
jecxz
adc
fwait
xchg
iret
dec
dec
leave
jle
push
loope
test
xor
pop
leave
dec
jns
pusha
decl
or
mov
sbb
sarl
and
pop
js
sbb
call
cmp
imull
mov
jo
idiv
sar
mov
aas
inc
lods
jno
jns
sub
jmp
push
ss
cwtl
xchg
nop
mov
inc
loopne
lds
mov
mov
mov
stos
mov
ret
lahf
xchg
dec
mov
test
aad
jne
mov
jne
adc
das
clc
call
movsb
jecxz
jmp
data16
push
es
data16
arpl
cmc
jbe
in
scas
mov
xchg
push
adc
pop
ljmp
jne
or
mov
pop
push
call
mov
cmc
or
sub
stc
out
scas
in
push
push
imull
test
inc
mov
test
cli
je
jg
sbb
inc
push
or
call
pushf
push
push
jl
push
pop
pop
push
lea
int
mov
pop
ljmp
mov
inc
dec
and
int3
loopne
mov
and
add
or
nop
add
add
decl
jge
dec
movsb
push
scas
xchg
cmp
mov
in
lock
mov
lods
mov
xchg
scas
fcoml
jns
mov
dec
push
jge
nopl
and
mov
jmp
jp
jae
sub
xor
add
mov
mov
call
and
lcall
rclb
fcompl
and
decl
dec
pop
or
inc
xchg
sub
inc
mov
aas
xchg
push
cli
sub
xchg
cmpl
scas
inc
sub
pop
les
es
aam
xlat
lcall
rcl
rorb
sti
iret
cs
push
dec
pop
mov
and
imul
lcall
mov
adc
cmp
jo
cs
pop
aas
sub
loopne
adc
jmp
loop
mov
and
sub
rorb
test
mov
lock
cli
dec
arpl
sub
testl
mov
iret
mov
cmp
jg
xor
push
imul
dec
inc
pop
pushf
lods
dec
mov
call
add
cli
enter
popa
mov
ret
xlat
push
mov
out
dec
fwait
sahf
mov
loope
mov
fcomip
lcall
mov
scas
call
sub
push
fwait
jo
pop
mov
je
mov
fimuls
call
cld
dec
in
push
call
fimuls
add
sub
lcall
and
sti
ffreep
pop
adc
out
in
cli
lock
mov
pop
sub
jmp
cli
pushl
gs
sbbb
pop
dec
test
movsb
xchg
adc
cmc
cs
popf
cmpl
mov
dec
jo
insl
or
imul
xor
adc
xor
incl
clc
loopne
addr16
xchg
ret
sbb
push
scas
push
cmc
inc
sbb
pop
mov
cld
adc
lcall
fcom
shll
lods
add
dec
sub
mov
inc
xchg
push
lea
dec
insb
pushl
pop
hlt
mov
sbb
xchg
ror
pop
fstl
sbb
mov
stc
sub
push
mov
pop
lock
inc
mov
push
int3
mov
jp
pop
out
sbb
adc
ret
ljmp
push
mov
xlat
iret
aaa
xor
fs
in
push
cmovg
lcall
jmp
test
lret
out
pop
loopne
cmp
rclb
test
popf
pop
sbb
jg
aaa
mov
cmc
hlt
testb
pop
icebp
jns
fbld
sbb
ror
sbbl
mov
mov
stos
mov
testb
call
lahf
inc
in
adc
leave
aas
inc
enter
aaa
sbb
and
mov
pushl
and
aad
std
push
xchg
dec
mov
lret
jno
lret
pop
les
incl
jmp
imul
jae
shrl
push
or
loop
call
es
insl
dec
and
add
int3
xchg
mov
push
insb
push
call
and
call
cmc
jecxz
fs
dec
sbb
jl
push
loope
mov
mov
pushf
int3
pop
inc
jnp
call
std
cmp
jl
vpsubusw
loopne
in
push
test
mov
decl
sti
push
push
xchg
cmp
adc
cmp
xor
in
loopne
mov
fcomip
push
sbb
sbb
lds
iret
inc
xor
sub
sbb
call
xchg
loopne
in
or
jno
clc
mov
and
push
shrl
bound
xchg
ljmp
clc
dec
or
xor
jae
cmpsb
add
mov
ficoms
lcall
fmulp
repz
int
push
sbb
inc
insl
pusha
mov
mov
std
inc
incb
push
jg
lcall
inc
ret
fcoms
int
mov
scas
or
jmp
jg
adc
ds
add
loope
mov
hlt
push
ret
addr16
add
jmp
test
sbb
push
sub
bound
jmp
add
push
mov
addl
ret
cs
pop
cmpsb
adc
fnsave
cltd
stc
incb
xchg
and
sbb
xchg
jge
fptan
mov
mov
mov
sub
jge
xchg
daa
ds
sahf
aam
cmpsl
sub
pop
xchg
inc
xchg
jg
jp
cmpb
repz
mov
js
mov
imul
sbb
ficomps
lret
scas
pop
fsubr
lods
push
sti
mov
cltd
mov
es
xor
jg
dec
adc
cwtl
call
xchg
dec
cmp
scas
and
fistps
push
xor
decl
push
mov
mov
jg
mov
ret
push
mov
ljmp
cltd
mov
lcall
ljmp
es
inc
gs
mov
mov
pushl
xchg
push
test
outsb
ret
es
in
repz
dec
jg
test
mov
cs
and
push
roll
sbb
sub
jle
xor
loope
aam
cmp
xchg
mov
mov
incl
stc
fdiv
insb
and
bound
jge
je
lret
aad
decl
incb
orl
jmp
hlt
aam
mov
dec
mov
decl
rorl
mov
xchg
loopne
pop
mov
and
hlt
push
cld
sub
out
clc
sbb
int
popf
sub
jle
sbb
mov
or
neg
into
jb
cwtl
dec
call
jmp
incb
movsb
cld
and
pop
pop
shrb
insl
push
call
push
icebp
adc
xchg
outsl
ds
jle
and
ljmp
jmp
test
iret
xor
jo
sub
pop
pop
call
mov
mov
ljmp
inc
inc
mov
jge
mov
mov
push
gs
add
popf
incl
jb
mov
fwait
and
inc
bound
push
push
and
sbb
int3
mov
cmp
incl
mov
mov
stos
push
lcall
adc
into
mov
adc
mov
xor
dec
cmp
and
outsb
fwait
dec
mov
pushf
in
mov
lock
mov
mov
cmp
cwtl
imul
lcall
aas
shl
push
xor
scas
push
mov
clc
mov
cmp
lcall
cmp
clc
arpl
lea
jnp
mov
xor
test
jno
and
ljmp
mov
fldlg2
mov
ljmp
dec
add
mov
rcrb
into
icebp
sahf
out
push
scas
xor
ss
and
cmpsb
movsl
jmp
pop
je
or
ret
lcall
outsl
xor
cld
push
jae
fmul
rep
xor
movsl
stos
lock
dec
xor
daa
movsb
or
jmp
sub
jb
mov
cmp
sbb
sti
cmp
push
cmp
lods
cwtl
mov
iret
lret
ljmp
test
or
bnd
popa
dec
mov
jns
push
mov
lcall
hlt
pop
mov
and
jge
into
data16
test
pop
hlt
push
pop
cmpsb
popf
std
push
popf
xchg
jg
mov
push
lock
mov
inc
and
ja
push
lods
jmp
rolb
ret
mov
cmpl
lcall
loope
inc
pop
sub
or
push
xchg
cmp
fisttps
call
xchg
out
adc
scas
in
inc
movsl
pop
lock
mov
cmpsl
jge
mov
and
movsl
sub
pop
popf
popa
jno
mov
mov
call
push
mull
outsl
ss
data16
shlb
xchg
call
inc
xchg
out
lcall
mov
dec
jmp
jge
dec
inc
arpl
int3
dec
mov
aas
and
or
mov
call
pop
mov
ljmp
sub
jae
adc
out
or
call
inc
fldenv
jg
push
sahf
outsl
in
insb
sbb
hlt
push
mov
stc
sub
incl
lcall
dec
xor
push
mov
mov
lcall
int3
xchg
and
fcoml
dec
loope
test
xchg
and
add
ds
or
xchg
gs
repnz
ljmp
nop
xchg
loope
fwait
into
cld
cmp
movsl
lret
xchg
mov
jge
inc
or
decl
sub
push
push
mov
repz
adc
call
mov
dec
int
cmp
lods
mov
cwtl
repz
xchg
cmp
call
stc
pop
loop
dec
cld
pop
cmc
in
cwtl
and
push
incb
fisttps
cmp
outsb
adc
adc
fists
fs
jo
imul
adcb
and
pop
xchg
push
mov
ss
mov
test
clc
push
aad
imul
sbb
jecxz
xchg
insl
scas
add
pushl
jmp
push
cmp
and
mov
stc
fisubrs
out
popf
outsb
daa
jns
pop
sub
mov
stos
movsb
pop
cmp
mov
sbb
insb
push
or
dec
mov
push
or
fisttpll
loopne
or
in
leave
sbb
in
jne
xchg
sti
pop
pop
mov
out
ljmp
push
cmp
ljmp
sbbb
mov
jp,pt
pop
roll
fxrstor
xlat
insl
pop
add
scas
cmp
sbb
cmp
push
dec
sub
sbb
sbb
lret
xchg
shlb
jno
xor
addr16
add
decl
fsts
push
cmp
imul
cltd
or
incl
pop
pushf
push
icebp
std
daa
test
inc
sbb
jmp
insl
mov
adc
jmp
jmp
rorl
or
mov
mov
shll
dec
add
fcomip
decl
ja
inc
jl
inc
in
aad
mov
subl
cld
inc
lea
negl
das
mov
and
jmp
negb
inc
lcall
pop
hlt
sti
popa
pop
scas
fstps
ret
int
pop
inc
jmp
xchg
testb
dec
push
jmp
cs
enter
and
imul
xchg
lcall
sub
cmc
dec
stos
pushf
pop
mov
lods
mov
xor
jg
mov
mov
cli
cmp
ljmp
in
dec
inc
outsl
mov
push
cld
js
pop
add
jb
in
scas
mov
imul
mov
int3
xor
mov
shrl
insl
add
xchg
fs
cmp
incl
fucom
iret
pop
in
inc
xor
cmpsb
scas
test
fsubp
mov
out
cmpsl
inc
ds
stos
sahf
loope
fcomip
ljmp
divl
outsb
lods
and
ss
popf
dec
fadd
dec
pushl
int
or
out
movsb
jno
or
js
lret
cwtl
add
inc
pop
sbb
jmp
icebp
xor
cmp
shlb
outsl
pushl
decb
fldl
adc
popa
inc
fwait
dec
push
or
add
and
inc
jmp
aas
inc
dec
loopne
lods
cmp
negb
decl
pop
mov
adc
sub
push
aam
incl
stc
push
rclb
sub
in
les
lcall
mov
dec
sub
decl
loopne
outsb
mov
push
xchg
mov
xor
cld
push
mov
add
mov
or
fdivp
arpl
adc
xchg
inc
xor
pushf
movsl
vxorpd
loope
push
and
add
xchg
scas
mov
inc
jns
in
jp
mov
lods
pop
and
je
push
hlt
mov
lret
pop
xchg
and
outsb
aam
in
pop
inc
stos
decl
nop
or
add
sub
pop
pop
cmp
in
je
and
sub
jmp
pushl
call
pop
mov
or
push
push
rcrb
inc
ret
push
insl
lret
jns
sbb
sbb
dec
scas
inc
sbb
xor
in
jg
in
dec
mov
dec
test
incl
jns
jae
test
lahf
les
cld
mov
sub
shlb
mov
push
decl
mov
iret
out
sub
ret
bound
xchg
pop
lds
pushl
shll
jnp
rcrb
cltd
dec
inc
int
std
sub
in
shll
jmp
push
outsl
out
mov
xchg
popf
jle
pop
in
xor
sub
jno
add
mov
ljmp
popa
sbb
lds
fs
mov
aaa
mov
pushl
nop
dec
popa
enter
cltd
or
cmp
loope
jnp
inc
and
pop
stos
mov
sbb
xchg
mov
mov
mov
jo
pop
mov
daa
sbb
shrl
ljmp
imul
cmc
inc
cmp
sub
dec
ss
rclb
xchg
push
dec
lds
adc
add
sbb
jl
dec
jmp
imul
xchg
jl
or
cmpsb
ljmp
daa
sbb
cli
ljmp
adc
xchg
aaa
add
shlb
jle
aas
mov
out
popa
xchg
iret
pop
sahf
pop
fwait
mov
jg
sub
mov
push
rcl
jecxz
adcl
decl
ljmp
adc
ret
inc
shll
js
and
ljmp
pushl
or
jbe
insb
dec
mov
xlat
stos
adc
pop
aad
cmp
mov
incl
push
int
inc
mov
fwait
rcrb
mov
cltd
pop
addr16
jmp
dec
pop
push
je
xchg
das
cmpsl
mov
push
sub
cmp
rolb
call
fwait
addr16
int3
jns
test
and
cwtl
xchg
loopne
push
cmp
cld
stos
pop
rclb
mov
popa
sub
and
mov
cmp
cwtl
int3
arpl
and
into
out
push
nop
fwait
jne
mov
dec
mov
stos
mov
call
xchg
sbb
in
inc
roll
call
xchg
pusha
adc
sbb
inc
decl
imul
lock
inc
jge
call
mov
jle
dec
lahf
adc
js
cltd
bound
pop
repz
or
incl
andb
xor
test
cmp
or
push
jno
pop
push
andl
push
jo
subb
mov
push
aaa
cmp
das
adc
hlt
mov
mov
je
pushl
and
pop
inc
lret
push
jecxz
sbb
outsl
rorb
xchg
dec
in
dec
test
repnz
fidivs
push
arpl
inc
xor
inc
cmp
pop
pop
loopne
scas
xor
sbb
in
mov
idivl
scas
inc
jbe
scas
clc
ljmp
movsb
mov
and
rclb
test
gs
mov
fwait
in
add
decl
je
mov
xor
data16
sub
test
scas
rcr
mov
jmp
cli
popa
jp
outsb
and
mov
fstl
rcll
sub
decl
shr
mov
adc
and
push
jnp
push
mov
sarb
push
mov
scas
ljmp
push
movsw
jnp
xchg
inc
dec
inc
in
lock
mov
inc
jg
dec
push
imul
sbb
push
std
cmp
xor
push
pop
ljmp
imul
lock
incl
cwtl
add
jg
adc
xchg
scas
lods
in
mov
inc
test
lcall
sub
movsl
mull
adc
aas
adc
dec
jle
sub
rorl
pop
jg
inc
and
cmp
sub
mov
push
mov
fbld
shlb
mov
scas
call
out
pop
icebp
divb
xor
inc
sub
enter
push
jg
dec
ret
pusha
add
and
lcall
pop
sbb
push
stc
jmp
add
mov
adc
sub
push
push
mov
sar
call
add
adc
ja
mov
sub
fcmovnu
out
push
das
push
and
inc
ja
in
out
adc
test
js
stos
lea
sbb
shll
mov
int
inc
mov
call
scas
das
mov
ljmp
jmp
jg
jmp
or
push
xorl
js
mov
out
mov
jge
pusha
mov
leave
idiv
or
or
lret
enter
pop
pop
xchg
sbb
cmp
pop
and
inc
xor
sbb
dec
inc
sti
mov
xor
scas
xchg
mov
out
mov
ja
in
cmp
mov
sub
add
mov
lret
mov
xchg
push
pushl
mov
sub
movsb
aam
lds
push
xor
sub
or
test
xchg
dec
rcrl
jecxz
in
xchg
sub
loopne
sbb
sbb
mov
and
mov
cmp
mov
hlt
test
not
enter
or
subl
add
scas
cmp
sub
dec
xchg
xor
outsl
dec
inc
inc
gs
jmp
es
inc
aaa
mov
cld
rep
inc
inc
mov
adc
pop
ret
pushl
test
push
cmp
fisttpll
call
shlb
nop
cli
out
jg
inc
ficoms
add
push
mov
test
add
push
or
shrb
decl
out
cmp
sub
jl
cli
je
shrl
xchg
jp
cmp
pop
inc
xlat
mov
xor
insb
fcomip
lret
js
test
jmp
inc
mov
mov
jo
and
imul
lock
adc
mov
mov
or
push
sub
fwait
xlat
mov
adc
divb
xchg
decl
mov
push
adc
faddl
rcr
bound
into
lret
outsl
add
jp
aas
bnd
cli
inc
or
incl
clc
jle
sbb
pushf
jge
divb
idivl
fcompl
aad
sbb
ljmp
mov
inc
arpl
jo
icebp
in
cwtl
test
das
inc
clc
incl
test
shrl
stos
js
pop
mov
or
dec
sub
and
mov
movsl
fmulp
sbb
and
pop
lahf
jl
aam
push
pop
mov
xor
jmp
fs
jge
push
push
in
xchg
imul
in
and
nop
sub
hlt
dec
movb
and
pop
dec
fsub
sahf
cmp
sbb
std
add
jbe
out
into
in
aam
imul
pop
or
movsl
adc
push
mov
addr16
aad
addr16
outsb
dec
xchg
pop
jge
jmp
ficoml
push
cmpl
adc
shlb
inc
pop
push
sbb
add
jmp
cmp
aam
push
insb
lea
jnp
shlb
dec
mov
push
insl
pop
shrl
mov
mov
sub
or
arpl
ljmp
sbb
pop
and
jl
inc
call
cmpl
push
push
push
or
cmp
out
inc
mov
fs
scas
sub
loopne
jle
subl
jmp
inc
jbe
js
pop
in
push
idivb
loop
mov
in
mov
jp
in
sahf
mov
loope
mov
sub
stc
sbb
std
call
std
loopne
mov
xchg
sbb
sahf
xchg
nop
or
and
imul
lock
xchg
fcomi
push
push
push
fidivs
shlb
xchg
fld
xchg
frstor
aaa
lcall
mov
fnstcw
fstpt
gs
pop
lock
mov
fidivl
imul
pop
in
mov
call
jmp
les
push
adc
iret
push
adc
fbstp
scas
cmp
adc
xor
int3
movsb
mov
call
xor
in
iret
aaa
popf
cmp
push
and
loopne
inc
add
iret
jnp
iret
hlt
rclb
js
mov
call
stos
pushf
or
outsb
push
idiv
pop
cmpsl
ss
sub
dec
in
fwait
xchg
jbe
dec
inc
lds
insl
ret
lds
sbb
dec
es
decl
jnp
xlat
sub
js
iret
inc
call
push
incl
test
sub
mov
jmp
stos
sbb
adc
scas
ret
jmp
ljmp
and
cmp
adc
pop
mov
adc
ret
mov
xchg
pop
mov
das
lcall
iret
pop
pop
shll
pop
push
push
push
sbb
std
aad
imul
call
fsubs
push
cmp
push
test
jecxz
dec
sbb
decl
cmp
fpatan
mov
push
add
or
adc
aam
arpl
outsb
inc
rolb
or
sub
push
cltd
int
pop
and
adc
push
mul
sarl
into
jge
out
jg
imul
test
ss
hlt
pop
incl
dec
aad
mov
push
sahf
lret
dec
lea
js
or
out
xlat
movsl
xchg
cmp
xchg
jmp
enter
jo
dec
dec
insb
push
movsl
mov
jp
push
pop
icebp
incb
dec
sbb
shll
sub
add
loopne
mov
hlt
inc
adc
xchg
sub
ja
mov
ss
rorb
mov
adc
pop
std
mov
lcall
pop
cld
inc
adc
call
loop
dec
sbb
jg
in
shrl
je
sbb
mov
mov
and
stc
js
adc
xor
cmc
out
scas
mov
gs
mov
xlat
jb
lods
loop
and
decl
dec
scas
inc
outsl
jb
mov
into
mov
mov
insl
xor
addr16
or
pop
pop
push
mov
mov
xchg
dec
enter
add
jge
lcall
xchg
sbb
mov
dec
cmc
lcall
loop
push
push
adc
sub
add
js
push
cmpsb
loopne
pop
mov
aaa
or
das
cli
fildll
lret
or
cmc
int
jle
push
and
inc
cmc
cmp
decl
std
leave
mov
sub
arpl
cmp
jno
and
xor
mov
test
mov
pop
andl
pusha
out
sar
scas
and
xor
aaa
pop
decl
sarl
sub
mov
mov
lcall
mov
jns
ffreep
xchg
int3
lods
cli
cli
out
das
jle
and
aas
inc
push
movsb
cmp
mov
mov
pusha
std
divl
dec
jg
lea
lock
jno
cltd
cli
data16
movsl
lcall
sbb
in
test
inc
mov
loop
add
cmpsl
or
test
out
or
psrld
movsl
mov
add
xchg
lret
popa
bnd
clc
movsl
push
ds
inc
decl
add
push
jmp
sub
mov
xor
in
sbb
cmp
out
add
mov
pushf
adc
push
pop
pop
inc
int3
mov
mov
cmpsl
or
inc
and
lds
scas
pusha
pop
push
lods
push
mov
add
lock
mov
xchg
jg
or
cmp
mov
sbb
add
call
jne
pop
mov
fcomip
pushl
fsubs
stos
int3
lcall
aad
mov
jbe
ljmp
adc
pop
pop
sbb
adc
lcall
xchg
and
or
cmc
mov
xor
addr16
test
add
lods
aas
jb
std
jg
jmp
and
mov
loopne
mov
call
out
inc
cmp
ljmp
add
jno
mov
xor
in
cmpsb
xor
push
xchg
push
xchg
add
jns
icebp
jg
cwtl
dec
push
add
adc
jno
clc
sub
stc
inc
jl
sbb
incl
add
mov
je
mov
dec
and
xchg
scas
and
mov
lret
std
adc
push
xchg
ljmp
jge
out
clc
fnsave
pop
into
cmp
or
lcall
or
push
mov
push
out
add
shll
dec
addr16
pop
insl
mov
inc
lds
jmp
mov
lock
cli
jbe
or
cmp
mov
pop
stos
mov
mov
cld
mov
lcall
inc
xchg
cmp
inc
inc
or
out
xor
mov
ret
stos
lods
ja
xchg
incl
jo
rcl
pop
lret
sbb
xchg
or
or
icebp
mov
ljmp
dec
test
sti
lcall
mov
and
repz
mov
in
sub
lahf
loope
inc
push
jge
jg
hlt
scas
lcall
cmp
jns
outsb
cmpsb
cmp
les
cmp
jmp
xor
repnz
add
pop
mov
push
push
leave
inc
insb
fsubs
sbbb
cld
imul
es
mov
mov
adc
add
dec
or
lahf
dec
xchg
mov
mov
xchg
lcall
add
sub
and
inc
mov
xchg
int3
rorb
scas
cli
ljmp
push
cld
data16
ret
dec
sbb
pop
in
ja
bound
orl
xor
addl
bnd
enter
sub
add
push
mov
idiv
ljmp
push
sbb
ret
xchg
cs
cmp
imul
xor
add
push
jmp
xchg
xlat
and
xchg
cmp
lcall
fwait
scas
jmp
pop
outsl
jmp
out
xchg
jns
mov
mov
out
jae
pop
adc
inc
pop
call
jno
pushl
dec
int
mov
cmpsl
adc
mov
sub
mov
cmp
cmpsb
or
sub
jb
or
xchg
fcompl
in
jne
adc
pushl
lock
add
loopne
repnz
ret
lea
loope
sub
ja
cmp
sarb
test
sub
fmull
aas
mov
mov
jmp
int
cmp
shl
js
lcall
subb
call
adc
inc
scas
jbe
test
fcmove
movsl
xorb
rcrb
or
xor
push
mov
sub
lcall
fcompl
dec
jns
call
fdivl
shrb
lret
sbb
inc
inc
add
fldenv
leave
into
cmpsb
das
clc
incl
or
aas
cmp
or
es
jge
into
lods
mov
dec
incl
cmp
sub
inc
pop
cmp
idivl
cmp
pop
or
cmp
decl
xlat
repz
sahf
pop
pushf
fsubrl
xchg
jae
dec
in
lret
test
sub
pushl
jmp
rorl
dec
shll
jl
mov
std
jecxz
ljmp
sar
int
add
inc
insb
bound
pop
jbe
push
cmp
icebp
aaa
repnz
mov
int3
rcl
add
ss
popa
adc
ljmp
sub
inc
sbb
jae
cli
jg
pop
nop
popl
mov
mov
add
scas
mov
inc
jb
pop
and
mov
sahf
adcl
ret
cld
outsb
adc
xlat
pop
dec
gs
pop
hlt
int
or
adc
imul
jnp
in
ds
mov
lds
pushf
aas
sar
call
jp
cli
dec
push
inc
mov
sub
cld
sub
stos
cs
jne
jmp
mov
xchg
or
jno
das
mov
jp
out
inc
sbb
jnp
jbe
jecxz
fwait
dec
cmpsb
jmp
ja
cltd
push
outsl
or
sub
out
icebp
or
push
add
sbbl
jo
into
mov
out
je
loope
lret
dec
mov
xor
cmpsl
sub
or
ja
jae
and
cmp
ja
ljmp
cmp
mov
mov
fwait
es
adc
inc
and
add
cld
ficompl
aam
cltd
mov
cmp
int
loop
add
loop
adc
jmp
sub
mov
mov
jb
aam
pop
xor
and
mov
pop
icebp
clc
in
jae
and
push
dec
cld
fisttpl
movsl
into
inc
pusha
imull
or
aad
call
test
add
imul
ljmp
lret
lods
loopne
push
jg
das
call
cmpsb
fmuls
adc
cmp
out
jne
test
mov
lods
sbb
mov
test
ret
mov
shrb
ljmp
rclb
cmpsl
pushf
pop
or
pop
int3
cmp
jae
and
decl
sbbb
out
insl
jmp
push
decl
mov
xor
ja
mov
in
dec
ss
pushl
inc
add
jmp
add
aam
int3
sbb
lcall
pop
cmpsl
cmp
mov
dec
inc
sub
fcmovnb
adc
jns
mov
pop
cmp
cmp
jl
jno
dec
scas
sub
cmpsb
outsl
push
int3
jns
loopne
xchg
sarl
xor
xlat
incl
enter
cmp
int3
add
repnz
or
jg
or
test
add
jecxz
dec
movsl
mov
cmc
dec
adc
cmp
pushl
push
out
xchg
mov
cmc
fcoms
sub
mov
mov
lcall
mov
push
jp
mov
insb
repnz
pushl
repz
sub
jg
xchg
dec
gs
lea
cs
rorl
pop
and
add
dec
sbb
nop
negl
push
adc
push
fdivrl
inc
add
andb
call
cld
fisubrs
mov
repz
dec
sti
cli
cltd
lea
aam
shrl
add
mov
cld
mov
decl
movsl
mov
add
sarl
jnp
push
dec
insb
ffreep
mov
rcl
ljmp
popf
inc
sub
cmp
push
lock
mov
mov
ja
into
outsl
pop
pushl
or
mov
xor
bts
adc
inc
aas
xchg
or
dec
inc
add
mov
adc
cmp
or
mov
test
clc
decl
jmp
xchg
sub
add
rcll
dec
mov
sbb
jecxz
dec
xor
mov
dec
mov
xchg
dec
lahf
adc
cmp
fdivr
pop
std
pushl
stos
push
add
fidivs
and
inc
sbb
cmp
repnz
flds
test
mov
gs
stos
pop
jnp
sbbb
fiaddl
add
lea
mov
fcoms
fwait
enter
push
stos
ds
andl
addb
or
insl
mov
mov
push
test
data16
jmp
les
cmp
dec
cwtl
mov
or
or
xlat
pop
insb
push
std
call
pop
dec
xor
pop
xor
mov
shl
loop,pt
push
call
scas
stc
pop
pop
icebp
mov
cmp
cs
add
cmp
mov
sarl
ljmp
aam
or
pop
mov
inc
rcr
out
pop
je
add
jne
add
cmc
call
pop
repz
sbb
dec
repnz
pop
fdivrs
ret
ss
fbstp
mov
int
repz
dec
push
sbb
jge
pop
imul
push
mov
insl
test
jmp
dec
ljmp
mov
pop
shlb
nop
and
es
decl
pop
push
or
fdivr
inc
jle
in
adc
sbb
shl
cmc
push
pop
or
mov
sar
decb
sub
dec
fisubrl
ss
fists
cs
or
add
jmp
pop
xchg
scas
and
lds
out
lods
fiaddl
hlt
pop
mov
aas
inc
rcrb
push
jbe
and
mov
int3
mov
xor
out
jmp
ljmp
in
dec
adc
mov
push
push
xor
in
xchg
incl
pop
subl
push
fimull
pushf
imul
fstpl
or
xchg
ljmp
call
bound
xor
push
cmpsb
xchg
aas
pop
add
lret
sbb
or
ficoms
mov
lods
lods
and
xchg
cs
adc
fldl
test
xchg
sbb
pop
movsl
fsubp
sub
dec
das
sub
push
or
jns
sti
cs
ljmp
aas
stos
cmp
jo
and
and
xor
dec
pop
xchg
cmpsl
jae
mov
xor
std
call
cld
dec
insb
add
movsl
in
push
sti
dec
fwait
testb
lcall
mov
andb
push
mov
jns
dec
adc
popf
aam
pop
lock
test
fldz
jle
cmp
pop
push
adc
jg
xchg
jp
cltd
xor
add
mov
jo
test
xor
pop
xchg
mov
dec
mov
mov
sub
repz
xchg
inc
jne
insb
push
cli
push
add
mov
lcall
ds
movsl
ds
mov
xchg
idiv
lcall
ljmp
inc
xchg
mov
mov
das
or
lret
and
ljmp
pop
dec
movsl
ror
xor
insb
sbbb
jmp
cld
jno
jg
mov
sbb
call
jp
ss
in
inc
push
fs
push
stc
lds
lock
ljmp
sbb
test
out
push
add
scas
arpl
popa
pop
adc
clc
aaa
icebp
jmp
incl
xor
cmc
xchg
xchg
lds
rcrl
enter
sbb
loop
sub
lcall
xor
cmp
jmp
std
xor
mov
loope
push
out
xchg
hlt
lcall
mov
out
xor
and
movsl
mov
pop
int
or
cli
dec
pop
je
xor
jg
ljmp
mov
outsl
scas
jno
cwtl
scas
push
fwait
push
add
repz
pop
mov
mov
mov
lea
icebp
mov
inc
mov
stos
push
into
test
in
pusha
loopne
mov
jnp
push
std
pushl
or
jg
stos
inc
push
mov
in
js
mov
xor
pushl
stos
push
xacquire
sub
ret
faddp
inc
std
hlt
mov
push
push
sub
sub
rorl
ret
push
pop
xchg
scas
and
das
fsubr
jbe
ljmp
add
fisubs
lret
lock
pop
adc
adc
sti
rcll
mov
or
inc
jnp
gs
lea
insb
in
and
insl
dec
xlat
mov
pop
lea
mov
dec
xor
xor
sub
jae
ret
or
sbb
pop
jle
mov
scas
dec
stc
fstpt
std
adc
mov
dec
jne
in
pop
push
push
cmp
js
mov
clc
adc
or
jecxz
sahf
inc
mov
jl
cmp
call
cwtl
add
jmp
jb
outsb
dec
push
xor
xor
das
xorb
inc
or
iret
cwtl
in
sub
mov
incl
ds
push
dec
push
jno
ret
lock
pop
les
popl
int3
mov
jg
ret
push
push
fistl
pop
outsb
xchg
dec
je
test
and
rcrb
mov
aad
lcall
lods
das
test
jle
mov
mov
fs
cmp
ljmp
scas
dec
addl
mov
inc
sub
pushl
jl
aas
cmpsb
sub
xor
cmc
fisubrl
ljmp
sbb
hlt
inc
push
xor
or
stos
jecxz
jb
xor
loope
incl
dec
leave
sahf
xchg
xchg
cli
adc
push
xor
xchg
sub
push
inc
imul
fstpl
adc
in
xchg
cmpsl
ja
insl
mov
dec
dec
outsb
push
mov
out
and
push
out
clc
lcall
push
aad
mov
push
adc
in
pushf
sub
movsl
sbb
add
das
nop
out
adc
mov
dec
xchg
push
adc
shrl
push
cs
movsl
lcall
popf
cmpsb
and
pop
dec
sarl
cmpsb
xor
adc
dec
mov
pushl
cmc
xchg
push
sub
xchg
jo
mov
loopne
in
mov
fucomi
incl
pop
jae
addr16
outsb
je
mov
add
repnz
pushl
cmp
stos
loopne
pop
pop
ja
mov
fiadds
movsb
in
mov
inc
or
lock
shlb
ret
pop
repz
fsubrs
mov
cmpsl
shll
pushl
sbb
jbe
test
adc
aam
pop
loopne
cmp
jl
jbe
mov
jne
sub
std
xor
fwait
in
push
loopne
cmp
dec
jae
xchg
sub
cmp
xor
jle
fidivl
nop
popa
das
decl
pusha
mov
jmp
jae
jnp
xchg
int3
insb
xor
pop
add
inc
cmpsl
lods
bound
incl
nop
adc
hlt
subb
add
add
sarb
fwait
or
adc
lret
jmp
adc
xchg
lea
jmp
jnp
pop
das
push
pop
fabs
inc
inc
jb
fs
out
sub
incl
fwait
rcrl
adcb
in
mov
test
sbb
scas
incb
int
add
outsl
cli
pushl
mov
jb
cmp
dec
aad
cld
push
mov
dec
pushl
cmpsb
daa
andb
inc
jmp
lods
push
xorb
jle
pop
xchg
mov
lock
mov
incl
pop
out
ljmp
rorb
push
aas
fcomps
pop
icebp
call
fldl
ret
mov
arpl
add
gs
mov
dec
rorb
insl
fsubr
mov
pop
add
frstor
mov
das
cli
cmpsb
cmp
push
dec
xchg
xor
mov
sti
jo
xchg
push
cmp
call
push
mov
imull
jae
adc
push
pop
fwait
mov
incl
cmpsl
jmp
andl
push
jecxz
fisttpll
mov
dec
data16
jmp
aaa
sub
xchg
mov
jl
in
sub
mov
iret
mov
jne
or
call
mov
lock
gs
cmp
leave
ret
cwtl
lahf
cmp
mov
mov
insb
ret
mov
subl
and
cmp
call
rcrl
jb
bound
lock
ljmp
mov
testb
frstor
cmp
pusha
mov
aaa
loopne
push
lcall
or
push
jmp
xlat
pop
mov
das
or
mov
mov
les
lock
outsl
xchg
sbb
mov
cmpsb
and
out
mov
xchg
std
pushl
dec
dec
inc
cmc
xor
arpl
inc
rolb
dec
jg
jg
push
xchg
cwtl
cmpsb
xor
andl
loop
sbb
packuswb
je
mov
adcb
inc
pop
aaa
mov
icebp
mov
lret
dec
hlt
std
int3
xchg
sub
movsl
push
jns
cwtl
push
or
dec
lcall
xchg
and
lcall
lret
or
mov
lds
push
test
lret
pop
mov
xor
decl
xor
inc
pop
cmp
bound
std
sub
jo
jne
call
mov
sub
cmc
sbb
mov
cwtl
adc
repnz
mov
cmp
pushl
jle
ja
cmpb
add
mov
popf
xor
dec
mov
test
std
mov
mov
std
fld
inc
mov
repnz
outsl
movsb
imul
push
mov
cmp
xchg
mov
aad
fs
imul
loope
lcall
loope
xchg
outsl
jbe
ret
mov
in
je
out
or
loope
js
fcomp
ja
aad
scas
test
jb
jmp
and
lcall
add
test
push
xchg
jecxz
jge
es
fmull
pop
dec
bound
enter
pusha
or
shlb
adc
sub
in
mov
add
jnp
nop
fimuls
xchg
pop
dec
in
jmp
mov
inc
imul
notb
xor
pop
pushf
cmp
cvtps2pi
test
mov
incl
adc
loope
aaa
adc
sti
movsb
cmpb
ficompl
dec
xor
mov
lcall
xchg
outsb
movsb
int
icebp
inc
rol
pop
out
xlat
mov
mov
jbe
mov
lcall
in
or
insb
gs
sbb
jl
inc
cmp
or
icebp
decl
jnp
adc
mov
cwtl
gs
out
dec
sbb
mov
lcall
loop
addr16
jmp
ja
popa
pop
sahf
jmp
adc
adc
ljmp
sahf
push
test
mov
jbe,pn
aaa
xor
push
mov
lcall
incl
sub
gs
insl
cld
mov
out
lds
mov
dec
call
sti
xchg
mov
xor
loope
cld
or
clc
and
cmp
filds
sub
fimull
adc
pop
movsl
xchg
stos
lock
in
cmp
decb
lcall
sub
adc
and
loop
popa
inc
xchg
negb
push
jp
cld
insb
mov
push
mov
aas
add
aam
stos
mov
divb
pushf
ja
sbb
sub
push
xchg
pop
cltd
mov
lcall
pop
and
je
scas
or
cld
fwait
out
mov
jge
sbb
pushl
xor
mov
jmp
daa
insb
je
pop
enter
in
out
push
inc
xchg
jg
rorl
into
push
sahf
shl
xchg
stos
ljmp
aaa
addr16
fisttps
lods
sbb
into
jmp
insb
push
dec
dec
push
push
mov
sub
add
call
xchg
push
jo
mov
imul
fisttpl
std
mov
push
mov
stos
jge
mov
insb
jle
xor
xor
pushl
inc
or
ret
or
push
pop
inc
nop
mov
dec
aad
fstpt
jge
mov
inc
test
xor
in
pop
ret
sbb
sahf
lds
xor
test
in
out
repz
call
imul
stos
rolb
insl
test
stc
xchg
cltd
enter
jge
jno
daa
pusha
jbe
andl
adc
sub
sti
imul
cmp
xor
mov
in
ja
mov
pop
and
das
repnz
repz
mov
incl
adc
aaa
lods
pop
or
pop
loopne
mov
mov
je
jmp
lea
ljmp
sbb
push
lock
enter
mov
enter
adc
in
mov
mov
pop
insb
and
push
add
fimull
out
pop
scas
adc
movsl
xorb
xchg
cltd
mov
jg
inc
xchg
mov
repnz
push
cmp
dec
aad
out
into
jnp
mov
sahf
into
push
mov
cld
call
sbb
mov
or
push
out
mov
jg
pop
les
out
or
jbe
adc
cs
dec
fimull
xor
ret
sarl
out
dec
jo
cmpsl
sbb
push
daa
fs
jge
jg
or
loop
shrb
test
cli
icebp
std
add
xor
mov
inc
jb
lods
and
sub
mov
dec
push
in
pushl
addb
inc
enter
movsb
out
orl
or
pop
pushl
loopw
add
jne
pop
pop
shlb
je
or
mov
popa
ror
enter
dec
imul
pop
xor
shrb
push
add
in
mov
shll
addr16
dec
test
cltd
pop
jmp
mov
jbe
jno
ficomps
xchg
xchg
push
insl
lcall
inc
xor
test
imul
lret
mov
jmp
or
jl
pushf
mov
add
aaa
jmp
mov
jmp
lcall
imul
dec
pop
lea
add
pop
lock
xchg
movsb
es
aad
into
shlb
lea
ds
out
add
dec
push
cld
jmp
ret
mov
jle
jl
jno
cmp
xchg
mov
adc
das
adc
push
subl
imul
mov
jo
add
call
and
xchg
jns
jmp
enter
sti
dec
stos
incl
stc
or
push
add
jb
sbb
sbb
jae
or
xchg
rcrb
aam
pop
cmp
push
je
divb
fistpll
jmp
aad
popf
rep
or
pop
jg
pop
loopne
push
lahf
lahf
xchg
mov
aas
mov
add
ds
pop
inc
fbstp
shll
sbb
mov
mov
call
cmp
add
pushf
cmp
mov
inc
pusha
and
stos
mov
ss
xadd
call
pop
push
hlt
icebp
mov
mov
scas
inc
loope
out
daa
jecxz
cwtl
out
push
mov
mov
xchg
mov
adc
in
in
ja
ds
sbb
cwtl
mov
lock
fadd
nop
ret
pop
insl
adc
adc
mov
jns
call
mov
sbb
and
add
repz
xor
out
sbbl
jmp
cmpsb
mov
mov
out
addr16
cwtl
add
mov
xchg
aad
xchg
xlat
lods
dec
jb
out
arpl
je
sub
into
xchg
sub
int3
add
ret
cmp
or
jg
xchg
fldcw
push
pop
and
out
sub
aad
push
xor
jbe
mov
cwtl
test
xchg
sub
add
in
xchg
shll
push
or
or
mov
jbe
rclb
mov
ret
or
adc
lds
push
push
ficomps
mov
pop
lock
push
lock
out
jecxz
daa
push
jg
and
or
das
dec
jnp
adc
push
xor
incl
mov
jmp
jl
lret
jecxz
imul
int
jmp
outsl
aaa
mov
out
incl
repnz
mov
push
pushf
add
add
stos
sub
or
shl
outsl
adc
insl
in
ret
and
mov
decl
or
cmpsb
into
mov
or
inc
cmp
adc
ret
jbe
ljmp
adc
and
dec
cmc
mov
pushf
push
int3
lcall
fdivs
xorb
jecxz
sub
sbb
ljmp
xor
xor
movsl
dec
shr
jg
inc
ljmp
mov
cmpsl
dec
rorl
mov
dec
sub
fwait
lcall
push
adc
jbe
repnz
sbb
dec
adc
pushl
jo
jge
cld
ja
cmp
lds
or
or
lock
loope
sbb
test
adc
nop
insb
aad
in
dec
imulb
jecxz
in
cmp
insl
nop
or
xor
lock
mov
push
stos
push
dec
push
xchg
fistl
decl
and
bound
stos
pop
lds
rcrl
and
cs
scas
dec
add
pop
jmp
cltd
das
lods
ret
and
out
fbld
mov
cs
cmp
cli
idiv
ljmp
ja
test
das
stos
sub
test
adc
addr16
aas
lcallw
lock
and
mov
xchg
mov
test
xor
pushl
out
inc
rolb
inc
pop
push
arpl
sbb
je
sub
lret
push
vprotd
mov
push
mov
mov
jns
ror
in
xor
and
filds
imul
cld
push
mov
fcompl
hlt
xchg
jg
sbb
fcomps
out
fiaddl
in
std
or
or
out
mov
std
mov
jae
add
aam
ss
add
jg
push
nop
pop
or
sbb
dec
orb
insb
sti
mov
ljmp
fstps
mov
std
jecxz
sub
lcall
cmpsl
xlat
pop
cmp
mov
cli
cmc
aas
cmp
enter
ja
mov
inc
out
into
clc
fadd
pusha
xchg
incb
sbb
filds
adc
inc
stc
ficoms
mov
fneni(8087
hlt
das
pop
xor
loope
jmp
mov
in
mov
fprem
pop
ja
mov
adc
pop
jae
in
arpl
cmp
adc
sar
dec
jb
push
nop
lock
dec
push
int3
rolb
mov
pop
in
and
rolb
icebp
mov
push
lret
rcrb
jg
xor
lock
mov
push
mov
hlt
xchg
in
pop
sbbl
popf
xor
vlddqu
sbb
xor
add
insl
cmp
loop
testb
in
jecxz
jg
or
pusha
cmp
call
call
jp
cmp
jl
ss
cmp
ret
imul
mov
sbb
push
idiv
jecxz
or
inc
mov
in
pop
cli
mov
xor
jo
lret
sub
arpl
sar
ljmp
filds
fisubrl
insb
mov
mov
sub
adc
mov
cs
lcall
pop
dec
cmc
and
sti
lcall
fsubr
ja
push
cmc
prefetcht1
sub
ljmp
aad
jbe
mov
ja
sub
add
xchg
jb
xor
mov
orb
xchg
xchg
inc
add
mov
incl
mov
stos
jae
xor
fistps
pop
cli
lods
add
decl
adc
lds
mov
inc
jo
xlat
repz
arpl
cli
popf
in
scas
es
incl
cmp
movsb
cvtps2pi
and
lock
or
sub
int
pop
sub
adc
jns
iret
nop
sti
xor
jge
push
lods
inc
jg
and
and
and
push
cmp
lret
cli
adc
xchg
popl
aas
add
decl
sbb
mov
mov
push
jmp
mov
mov
fs
inc
mov
jmp
movsl
mov
dec
mov
cld
loop
mov
jp
mov
jg
sarl
cmpsl
daa
scas
sbb
mov
repnz
scas
xor
jnp
dec
jbe
xor
jecxz
into
add
pop
gs
clc
pushl
in
jl
adc
push
jge
ja
adc
mov
add
mov
ljmp
xchg
nop
iret
faddl
pop
std
arpl
jl
sub
bound
sub
lret
mov
mov
push
sbbb
cmp
cld
jmp
popa
cmp
mull
push
rcl
enter
sub
mov
je
dec
xchg
mov
adc
mov
les
mov
sti
lret
pop
movb
sti
insb
popa
loop
mov
lcall
stc
jmp
mov
sahf
in
sub
ss
and
test
mov
sub
iret
push
cmp
mov
call
sbb
cld
push
das
icebp
loopne
mov
mov
pop
jl
mov
mov
push
int
mov
inc
mov
clc
inc
pop
add
pop
leave
xchg
popa
xchg
pop
nop
gs
ja
fs
and
test
or
call
inc
test
cli
xlat
or
ss
lret
push
adc
xchg
nop
xchg
mov
pop
mov
std
inc
pop
mov
push
test
in
repnz
addr16
xchg
test
sbbl
in
xor
lcall
ds
incl
pop
leave
in
push
fbstp
rorb
test
mov
xorl
insb
stc
cmc
jg
jp
fisttps
sub
xchg
or
decl
xchg
inc
and
xchg
fnstcw
push
ljmp
outsl
andl
cmpsl
insl
call
cmp
cltd
lahf
decl
pusha
cmpsb
les
sbb
enter
jle
or
mov
aaa
out
jp
lcall
andl
push
xor
enter
lcall
jmp
xor
inc
sbb
pop
xchg
repnz
lahf
sbb
mov
cltd
add
push
pop
push
fidivs
mov
out
sti
and
hlt
xor
retw
loope
test
push
test
adc
sar
lcall
imul
stos
fisttpll
xchg
push
xchg
or
loop
mov
fcomip
jle
cmp
pushf
adc
mov
clc
cmp
sbb
mov
pop
orb
das
pop
iret
push
mov
aam
or
pop
and
ja
sarb
shlb
cmp
sahf
jne
sbb
and
decl
pop
add
push
pop
push
pop
xchg
dec
xchg
mov
pop
xor
dec
stc
pop
cmp
lcall
jbe
cmp
xchg
mov
fnstcw
jl
outsl
out
sbb
push
inc
leave
push
iret
xor
pop
pushl
shlb
sub
cmp
cli
cmp
and
mov
jbe
ljmp
shrl
lea
mov
mov
mov
out
fcmovbe
push
loope
mov
out
ret
popf
fs
fsubrl
pop
mov
or
push
cs
adc
push
mov
lahf
pop
pop
lea
mov
lds
aad
inc
nop
lcall
out
cmp
arpl
icebp
xchg
pop
jp
icebp
nop
dec
pop
xchg
and
xchg
pusha
pop
xor
xchg
pushl
int3
fisttps
iret
movsl
pop
mov
pusha
fstps
mov
mov
popf
add
push
mov
repz
fsubl
pop
mov
stos
daa
test
fmul
dec
ss
out
mov
aam
leave
fdivl
rcrb
fidivl
jg
push
sub
lods
movsl
stos
push
dec
mov
inc
lods
xchg
adc
ljmp
test
shrb
shll
sbb
in
cmp
repz
jns
inc
push
aaa
imul
inc
cmp
nop
pop
scas
sti
pop
inc
push
scas
inc
xorb
rcrl
sub
xchg
pop
mov
mov
fimuls
lds
shrb
xlat
push
test
call
jno
mov
jae
out
pushf
je
add
out
sbb
push
imul
add
stc
cmp
dec
aaa
jge
push
pop
imul
pushl
js
inc
sub
gs
or
push
jmp
sub
mov
add
ficoms
lea
shlb
cli
scas
inc
xor
cld
gs
lcall
jp
xor
outsb
fimuls
push
ja
mov
ja
jmp
or
sahf
jns
sarl
push
sub
xchg
ret
sub
rolb
adcl
loop
dec
fisubrl
jmp
loopne
ss
cmp
jmp
test
pop
imulb
lahf
sar
ljmp
dec
lret
movsl
push
imul
mov
test
test
sub
int3
clc
testl
incl
dec
popa
jo
mov
xchg
mov
mov
call
cmpps
fistpll
push
mov
mov
and
pandn
lcall
idivl
jle
shrb
std
mov
or
or
movsl
adc
jg
lods
orl
roll
and
ret
sbb
jecxz
iret
mov
mov
mov
pop
sub
dec
scas
dec
pushf
inc
repz
push
rcrl
addr16
hlt
int
mov
pop
mov
or
call
mov
outsl
xor
mov
jmp
rcl
cmp
out
sbb
nop
das
and
pcmpgtb
test
or
insl
sbb
call
pop
dec
shld
mov
push
mov
popa
std
mov
mov
jl
jbe
cli
pushl
scas
sbb
pop
es
push
sbb
addr16
xchg
pop
ljmp
test
lods
decb
std
fs
push
dec
jo
or
jl
std
ljmp
pushf
sbb
pop
mov
xor
mov
dec
xchg
jg
popf
adc
push
and
clc
sub
ljmp
cwtl
repz
lock
or
cmp
cmp
pop
movsl
mov
fmuls
pushl
out
jns
fcoml
sbb
jmp
mov
mov
push
leave
push
cmp
inc
out
or
sub
push
sub
pop
imul
int
decl
adc
mov
or
sbb
movsb
pop
pop
inc
xorb
mov
lods
jnp
dec
sahf
adc
push
adc
outsb
lcall
imul
inc
pusha
xorb
jg
xchg
call
mov
inc
jg
divb
imulb
and
nop
jle
popl
and
mov
pop
xchg
or
in
cmp
ljmp
push
ss
mov
idiv
fwait
int
sub
cmp
inc
outsl
cli
or
imul
lods
leave
repnz
cmpb
xor
loopne
in
add
cmp
mov
inc
sub
inc
dec
dec
and
int
pushl
das
mov
jp
insb
and
movsl
int
push
and
out
mov
mov
stc
out
add
sar
incl
jmp
enter
out
push
roll
xlat
sbb
jl
add
ja
xor
adc
clc
sub
adc
ljmp
jns
incl
rolb
orb
shrl
jmp
add
dec
cli
out
scas
cltd
adc
hlt
movsl
inc
test
aam
mov
or
das
mov
ffree
or
sahf
cmpsb
loopne
sub
popf
dec
fld
pop
pushl
lcall
xlat
cmp
sarl
iret
sub
ja
pop
movsl
push
mov
jae
ljmp
jbe
cmpsb
mov
sbbl
jecxz
push
push
repz
xor
sbb
dec
jg
pop
adc
sub
cmp
mov
cmpsb
mov
push
enter
pushl
cwtl
or
push
movsl
inc
cld
and
stos
xchg
xchg
cli
mov
xorl
jge
dec
fs
adc
and
insb
aas
and
mov
sbbb
pmuludq
push
push
call
inc
pop
jo
call
adc
push
js
mov
test
mov
ljmp
mov
std
xor
scas
hlt
mov
inc
xor
sbb
sti
jo
mov
xor
movsb
in
nop
subb
mov
jo
stos
leave
add
decl
adc
xchg
mov
push
xchg
push
inc
or
jae
fnsave
aas
adc
pushf
sub
outsl
jmp
ljmp
mov
jl
lcall
cmp
nop
xor
jg
xchg
test
filds
outsl
dec
cli
cwtl
ficomps
mov
and
inc
jmp
int
or
mov
or
aad
bound
jge
pop
or
pop
cmc
jg
mov
stos
shlb
sbb
lahf
mov
pop
xor
lcall
dec
push
je
mov
in
repz
and
cmp
mov
lods
fdivr
das
adc
mov
lock
int
idivb
cwtl
pop
jnp
xor
inc
adc
das
add
incl
inc
je
or
pop
int
out
or
mov
sub
repnz
push
push
and
inc
mov
pop
xor
into
fdivrl
loope
mov
jle
mov
movsb
cmp
jo
pop
je
xchg
mov
push
call
in
or
xchg
fsubr
pop
xchg
pushf
adc
lds
mov
stc
subl
lock
and
js
dec
pushf
fcoml
pop
adc
inc
dec
pushl
std
cmpsl
dec
lods
jns
ret
or
jnp
cld
pop
pop
xchg
jl
out
add
xchg
jg
mov
addr16
ja
and
pop
mov
xor
scas
icebp
lods
call
jg
or
push
dec
pop
or
mov
stos
pop
xchg
insl
fldcw
cmp
mov
dec
mov
and
outsb
mov
mov
incl
outsl
les
mov
in
fiaddl
addb
pushf
cmp
pop
out
jmp
mov
inc
or
in
sub
imul
adc
repnz
call
iret
lods
add
and
mov
sub
in
push
push
jne
mov
stos
cmp
pop
sub
or
loope
add
inc
adcl
dec
cmp
incl
ss
daa
pop
dec
fs
dec
xchg
lahf
mov
jecxz
jns
xor
popa
test
push
call
in
popf
jecxz
enter
add
or
cld
outsb
push
dec
adc
xchg
add
dec
xchg
ljmp
inc
je
daa
jns
cmp
outsb
lret
scas
ja
push
je
inc
aad
inc
jne
cli
lcall
popf
cwtl
add
jmp
push
out
ljmp
lock
lcall
add
mov
into
jb
mov
lcall
sbb
xchg
cltd
sar
inc
mov
stc
add
es
aam
sub
aam
pop
in
cmp
imul
ljmp
inc
bound
fisubrs
scas
inc
shl
in
push
cmp
push
xor
in
push
out
xlat
out
pop
pop
mov
mov
pop
insl
scas
sub
pop
cs
into
xlat
mov
out
jg
jmp
and
shrl
adc
jmp
je
pop
adc
mov
cmpsb
inc
fsubl
push
inc
inc
push
dec
addb
jo
es
cmp
mov
jne
lcall
pop
ds
shll
popa
mov
je
mov
ljmp
sub
orb
adc
cmp
mov
jne
xor
inc
inc
mov
lcall
stc
mov
mov
fstps
out
dec
and
mov
lcall
xchg
fwait
xor
jbe
mov
pop
loopne
or
arpl
cmpb
decl
cmc
pop
mov
std
stos
or
ja
fidivrl
cld
dec
push
aam
mov
jb
aam
repz
insl
pop
arpl
pop
test
add
sbb
ret
xchg
dec
icebp
nop
push
jmp
sub
addr16
stc
and
jno
iret
or
out
mov
ja
mov
popa
jbe
jmp
icebp
in
mov
movl
pop
cli
push
les
cmpsb
xchg
popf
das
sbb
push
jg
ljmp
sub
adcl
lahf
decl
mov
in
dec
idiv
incl
sbbb
pusha
scas
mov
ret
pop
stos
popa
add
clc
mov
mov
lcall
sbbb
ret
xor
pop
mov
sub
jge
inc
mov
mov
mov
or
mov
dec
dec
test
xchg
movsb
jle
adc
arpl
cmp
cmp
xor
xchg
addr16
in
xor
jno
ret
cmp
mov
ljmp
jle
ja
jb
outsl
adc
pop
js
mov
outsl
hlt
sbb
aam
push
frstor
cmc
push
xor
cmp
or
push
jb
cmp
ljmp
sbb
sbb
out
cwtl
cwtl
enter
adc
fisttpll
jl
in
mov
out
pop
cld
rcrb
lock
push
push
bound
dec
jb
sub
testb
mov
out
and
test
inc
addl
mov
sbb
mov
popf
imul
and
pop
lods
and
dec
out
sbb
add
shll
mov
shlb
xchg
add
mov
call
lock
les
mov
loop
pop
jb
lahf
mov
ret
sarb
xchg
sub
pop
sub
call
test
stos
add
cmp
pop
or
scas
rol
in
sti
scas
jne
or
clc
hlt
pop
push
jge
inc
sbb
cmp
or
jg
call
cmp
imul
cmp
dec
jmp
out
adc
in
mov
daa
sub
lcall
dec
repz
test
lret
jno
push
dec
pop
jns
sahf
or
xor
loopne
popa
push
arpl
call
lret
sub
cmp
fcos
enter
cs
nop
lret
std
sti
cmp
mov
cmpsb
into
xchg
pop
push
imul
xor
mov
cmpsl
mov
cmp
jecxz
push
xchg
jae
push
das
cld
cmp
add
or
ret
mov
adc
pop
aaa
sbb
jnp
loope
aaa
pop
ljmp
jb
js
mov
sub
and
mov
pop
ss
ljmp
rcrl
add
pop
sbb
dec
call
aad
and
lret
pop
mov
mov
jmp
lds
xor
jmp
adcb
lods
add
sbb
jae
xlat
fidivrs
stos
jne
test
adc
out
test
push
mov
call
push
imul
add
jbe
dec
pop
dec
movsl
pop
aam
push
mov
push
jle
stos
scas
clc
decl
rcrl
ret
jb
out
stos
insl
jg
mov
xchg
adc
std
xor
fidivl
lods
iret
sbb
nop
ficomps
loopne
call
sbb
dec
je
icebp
jecxz
loope
mov
mov
and
pop
lods
sbb
pop
aaa
mov
cmc
mov
mov
xchg
jge
aad
adc
jp
fsubl
ljmp
clc
incl
xchg
lret
out
lock
dec
lock
xor
pop
xchg
cmc
inc
push
add
ljmp
sub
mov
push
mov
iret
cli
fcompl
dec
pop
js
dec
adc
jmp
arpl
push
mov
and
into
sbb
or
adc
mov
push
fcompl
ljmp
mov
fisubrs
jmp
or
or
or
push
arpl
jecxz
mov
sbb
dec
out
aad
iret
test
adc
pop
bound
clc
mov
adcb
add
inc
ja
jbe
sub
jle
and
xchg
gs
sti
stos
icebp
decl
cmpsb
icebp
fisubl
pop
int3
sbb
mov
sbb
ljmp
and
call
lods
divb
mov
xchg
push
je
mov
push
popa
outsl
sbb
fistl
jmp
add
push
dec
add
sub
movsb
aas
xchg
filds
nop
lods
pop
inc
pop
inc
inc
pandn
sbb
lret
cmp
sub
pop
adc
in
and
rcl
stc
and
pushl
ss
mov
pop
pushf
imul
ljmp
das
sbb
in
mov
cmp
das
xchg
stc
pop
shll
decl
pmulhw
pop
xchg
mov
test
es
push
lods
test
mov
ljmp
sbb
loope
lods
adc
lods
repz
pushf
pop
add
in
dec
mov
arpl
lcall
or
dec
cs
xchg
sub
imul
pop
fisttpl
lret
and
mov
decl
loop
cli
jp
fisttps
mov
jnp
dec
out
push
jno
pushl
out
aas
cwtl
pop
mov
test
cmc
test
dec
dec
call
xchg
fsubrp
mov
cli
dec
push
mov
xchg
mov
out
sti
xchg
jmp
imul
fldcw
jg
out
mov
mov
mov
ret
cld
cs
mov
fdivl
incl
pushf
fnstsw
adc
add
cltd
jle
pushf
and
idiv
inc
push
inc
lcall
popf
insl
xor
sbb
adc
mov
fildl
decl
mov
mov
cli
xchg
inc
lea
lret
mov
cmpsl
shlb
xrelease
and
pop
xchg
fucompp
push
dec
dec
adc
mov
data16
pushl
std
mov
add
pop
std
mov
jp
pop
jg
aad
and
add
ljmp
mov
test
adc
sbb
cmc
xchg
jge
in
je
popa
ficoml
arpl
mov
pop
lods
add
mov
imul
push
xchg
gs
jmp
jns
push
mov
jno
inc
cmp
fists
mov
sbb
mov
and
ret
mov
mov
xchg
mov
add
push
lds
decl
ficoms
inc
mov
xor
cmp
add
jb
xor
push
call
decb
cmp
xchg
cmpsl
push
fcmove
call
leave
scas
pop
mov
jns
and
movsl
sti
cld
sub
sub
mov
icebp
add
pop
mov
pushl
xchg
inc
aaa
jp
arpl
std
lret
outsb
repnz
mov
rorb
icebp
loop
pushl
mov
push
cld
outsl
push
rcl
enter
push
ds
cmp
decl
rclb
xchg
sbb
neg
fsubrs
and
inc
fwait
mov
cmp
lcall
xor
push
sbb
jnp
add
movsb
and
mov
jmp
jmp
lea
pop
dec
pop
sbb
in
lods
test
xchg
or
or
jle
addl
call
inc
ja
out
hlt
sub
jo
or
push
pop
out
pop
dec
mov
call
nop
out
push
test
enter
ret
das
jae
std
cmp
add
push
cmpsb
xlat
lods
call
repz
insl
in
sub
sbb
sbb
mov
xchg
incl
push
repz
aad
lahf
cwtl
mov
jno
jns
mov
bound
lcall
jne
xchg
mov
or
or
into
lret
cmpsb
xor
push
iret
push
lods
and
adc
mov
das
xor
clc
outsb
ljmp
jg
ljmp
call
xor
imul
daa
add
ret
push
int
ja
jnp
call
insb
pop
cld
inc
test
jno
jge
jo
loopne
add
and
or
pushl
inc
pop
dec
std
aad
push
fsubl
cmc
loopne
xchg
lret
testb
lahf
fwait
xor
incl
mov
cmp
js
shl
xor
xor
sub
jl
out
mov
mov
pop
dec
std
jo
mov
push
adc
pop
sub
incl
lea
filds
loop
mov
jb
out
lcall
fwait
rclb
jl
push
sub
ret
or
xchg
cmp
pop
adc
fbstp
stos
fwait
test
call
dec
repz
lea
xchg
pop
les
mov
pop
icebp
dec
out
adc
or
mov
movsb
pop
rcl
xorl
push
adc
in
stos
ljmp
xchg
clc
sbb
push
push
lret
in
ss
sub
mov
call
fiadds
addr16
ds
mov
add
pushl
mov
add
inc
adc
shlb
push
lock
push
or
int
mov
jge
shr
rorb
sub
dec
inc
lahf
xchg
outsl
outsl
xor
pop
jg
push
adc
shlb
sahf
out
pop
cmp
ja
xchg
xchg
mov
int
mov
hlt
test
xchg
inc
imul
loope
js
jl
and
dec
fistl
rorl
mov
mov
addb
and
shl
mov
jmp
push
adc
add
cmp
sbbb
fsts
xor
mov
jecxz
jmp
enter
sbb
aas
lahf
jge
cmp
jecxz
jb
clc
dec
lds
mov
popf
incl
arpl
test
out
in
rcl
rorb
cli
mov
push
js
jmp
inc
jg
mov
jno
dec
inc
push
cmp
push
fildll
sub
or
or
pushl
inc
and
fistl
ja
lds
rcrl
sti
lods
icebp
fcoml
adc
xor
jo
int
sub
inc
imul
push
push
out
pop
dec
or
ljmp
aam
pusha
inc
xchg
mov
bound
mov
jg
mov
fdivrl
dec
lret
lock
dec
cld
sub
std
out
jge
cmc
lcall
dec
test
das
and
jno
jg
andb
imul
lcall
loope
mov
xor
clc
or
idiv
ret
mov
outsb
sbb
dec
inc
mov
lea
movsl
sbb
mov
push
xlat
ljmp
movsl
mov
jmp
leave
fstps
cmp
mov
into
int
mov
mov
pop
rcl
mov
jmp
cwtl
dec
fsubrs
inc
jl
mov
or
das
sbb
add
jmp
jns
cmp
les
js
and
pop
cmp
push
cmp
mov
add
push
outsl
std
pushf
cs
ror
pushf
scas
or
cmp
cmp
push
aaa
movsl
push
daa
jne
pop
aaa
jecxz
fisubl
call
sub
cmp
pop
inc
jle
pop
addl
xor
jo
mov
popf
jmp
push
pop
arpl
push
lds
push
mov
add
or
repnz
mov
ret
mov
dec
fucom
inc
icebp
loope
je
jg
xchg
out
mov
ret
lds
jns
aaa
popf
xor
mov
pop
sub
or
movsb
out
xchg
mov
roll
cmp
inc
cmp
lcall
inc
in
push
sbb
mov
mov
sub
pop
mov
jg
lcall
mov
fisubs
xor
imul
mov
ret
mov
pushl
pop
insl
or
push
sahf
pop
xchg
xchg
mov
in
cmp
push
fwait
cmp
lock
push
jg
ja
les
pop
jl
cmp
cltd
sti
mov
iret
xchg
popf
addr16
aaa
cld
jecxz
test
adc
lahf
fimuls
sbb
and
cmp
push
std
fnstenv
or
cmp
ja
dec
scas
lret
ds
sbb
int
cmpsb
inc
sub
pop
jb
out
sub
xchg
mov
and
xchg
sub
mov
stc
dec
dec
pop
xchg
test
push
add
jge
out
js
add
and
test
xor
sub
bound
mov
cmp
xor
inc
lret
aaa
pushl
mov
lahf
mov
popf
push
cmp
popa
inc
cmpsb
add
mov
add
cli
ljmp
andl
xchg
cmp
pop
in
int
ja
subb
inc
fsubrs
pop
mov
mov
sbb
and
adc
push
aad
push
jp
jns
pop
push
mov
out
into
stos
mov
xchg
pusha
scas
out
or
inc
xchg
xlat
xor
rcrl
mov
sbb
xchg
ret
ficoml
shll
std
sub
rorb
jmp
nop
pushf
ret
xchg
mov
fsubs
stc
xor
mov
in
add
bound
ljmp
jmp
fldl
orb
stos
aad
int
or
mov
and
call
pushl
jb
into
add
in
orps
xor
jbe
cmp
add
lret
movsb
stos
sbb
jmp
aad
xor
add
jmp
cmpsl
int
xor
mov
mov
popf
mov
jmp
lea
cltd
pop
mov
adc
gs
dec
or
fmul
adc
lods
jg
insl
in
jo
incl
mov
xchg
add
jl
jl
clc
stos
pop
int
push
outsl
mov
mov
push
mov
push
mov
ljmp
dec
mov
sbb
sub
mov
push
ja
inc
clc
rorb
emms
leave
pop
xor
lods
sub
xchg
mov
add
jbe
push
les
push
and
inc
pop
ss
lods
xlat
or
mov
movsb
mov
xchg
sbb
pop
pop
dec
sub
or
lret
outsl
cmpsb
ret
xor
cmpsb
jge
loope
loope
adc
pop
inc
loop
dec
in
int3
sbb
mov
cmp
gs
mov
push
sbb
pop
out
insb
pop
jo
mov
push
jge
sbb
sbb
frstor
sub
push
push
jmp
lret
mov
push
pop
clc
out
repnz
push
pop
jp
dec
scas
fmulp
ficoms
jne
push
adc
enter
imull
lods
add
aam
outsb
mov
mov
in
pop
jecxz
scas
adc
jne
push
and
mov
sub
sbb
push
add
jg
test
or
mov
cmp
decl
or
mov
jns
push
stc
sub
mov
decl
in
mov
or
xchg
movhps
pop
add
push
mov
xor
pop
pop
sub
lcall
aaa
xor
adc
pusha
inc
shrl
and
mov
pop
xchg
mov
ds
push
ljmp
dec
sub
iret
or
jnp
sarb
xchg
lahf
push
call
pop
jg
adc
dec
or
les
in
into
leave
sti
mov
ja
ds
pop
cwtl
int
leave
incl
out
adc
pusha
lahf
rorl
and
cli
dec
sub
mov
mov
and
call
inc
adc
dec
sub
repnz
sbb
jno
pop
cs
pushf
jmp
inc
dec
xor
lock
add
out
pop
cmp
jmp
xchg
push
lods
ljmp
jg
push
jb
jg
push
outsb
fs
test
popa
out
xchg
jp
inc
fdivr
fbld
std
inc
dec
daa
pop
loope
dec
mov
adc
divb
popf
pop
xor
xor
pushf
dec
js
or
loope
out
add
mov
push
xchg
leave
push
fcoms
jg
add
cli
mov
in
addl
lret
js
mov
mov
dec
sub
adc
outsl
jp
and
add
data16
nop
daa
test
pop
and
inc
mov
push
cmpsl
fmuls
mov
jp
into
xchg
roll
popa
mov
adc
mov
lods
rcl
insb
dec
arpl
into
mov
cltd
or
cld
jp
cltd
mov
jmp
mov
pop
pop
arpl
andl
inc
pop
ja
paddsw
pusha
out
fwait
call
cmpsb
dec
jb
xor
or
call
insl
icebp
fs
in
lret
sbb
fcmovne
fidivrl
cs
xor
dec
ja
and
inc
sub
sahf
mov
movsl
lret
std
sahf
pop
sbb
sub
pop
fisubs
scas
jmp
jmp
cmp
ds
lcall
mov
add
push
jg
fidivl
fwait
hlt
inc
pop
in
adc
lds
xor
push
scas
push
call
pop
fcmovnb
and
ret
adcb
lret
stos
xor
dec
inc
std
mov
jb
adc
xlat
mov
test
xchg
cwtl
call
sbb
or
dec
enter
jl
outsb
int3
xchg
and
jg
xchg
add
loopne
je
add
pop
xorb
push
or
inc
repnz
ffree
push
sahf
call
fwait
je
inc
xorl
aas
jle
cld
insl
clc
xchg
push
gs
je
mov
arpl
jg
pushl
enter
push
xor
push
inc
mov
std
push
push
sbb
and
lret
dec
or
jg
push
xchg
ficomps
jbe
ror
aad
cmp
inc
sbb
pop
fcmovnu
jb
fists
sbb
cmpsb
push
jecxz
mov
sub
push
jle
and
xchg
mov
cmp
decl
xchg
xchg
mov
pop
jo
sub
imul
and
stos
ss
les
stc
mov
sti
cmp
enter
jnp
inc
fistl
fwait
inc
or
movsb
bound
mov
test
mov
fcoml
pusha
adcb
incl
pop
test
xchg
popf
out
in
movsl
cmp
in
loope
test
popf
dec
lock
in
test
inc
scas
popa
and
test
in
xor
ja
push
aam
xchg
add
push
out
pop
cltd
ss
pop
sub
ja
lret
dec
jae
adcl
lcall
hlt
mulb
or
sti
in
fmull
or
into
es
jp
jl
dec
movsb
xchg
ljmp
push
pusha
xchg
in
sbb
ror
dec
out
inc
mov
inc
cmovne
fldt
arpl
mov
ror
int3
adc
mov
mov
out
in
std
mov
mov
ljmp
cmpl
adc
pop
push
xlat
es
negl
jbe
add
fisttps
pop
jl
fwait
mov
shlb
repnz
int3
rolb
mov
inc
test
je
ljmp
mov
mov
cmp
push
ljmp
jmp
icebp
inc
jge
and
div
sti
fidivrl
mov
jl
ljmp
push
inc
fsubl
cmp
lcall
inc
hlt
pop
popf
rol
incl
mov
inc
jge
not
push
inc
lea
cmpsb
das
adc
inc
dec
jb
outsb
sbb
jmp
jo
ret
pop
into
fisttpll
sbb
mov
mov
sub
lcall
mov
adc
aas
push
movsl
daa
and
daa
add
aad
adc
add
mov
sbb
aaa
rcrb
mov
rcl
mov
mov
and
aas
pop
jne
sub
jmp
and
js
sbb
xor
or
in
push
pop
and
dec
sub
jg
mov
cwtl
shrb
or
adc
xlat
dec
push
insl
cwtl
call
das
mov
into
sbb
jb
jmp
xor
mov
and
jg
mov
pushf
mov
xchg
daa
jge
aam
sub
int
js
xor
fisubrl
das
push
es
fsubs
dec
mov
adc
test
std
cmpsb
mov
mov
popa
push
mov
out
mov
iret
lods
ljmp
cmpsb
push
cmp
imul
fdiv
jmp
jl
or
mov
jae
dec
into
cmpsl
out
cmp
or
mov
test
push
lcall
mov
sub
inc
mov
jle
movsb
lock
cmp
adc
lret
mov
jns
inc
call
loopne
fidivrs
xchg
adc
icebp
sti
and
cmp
fidivs
ljmp
mov
or
adc
adc
push
pop
inc
dec
call
add
insl
inc
push
inc
cmp
mov
cld
stos
ds
and
sahf
or
call
mov
sub
add
and
fistl
pop
mov
mov
ja
cld
fs
inc
jns
or
cmp
adc
mov
add
pusha
add
fcomi
cmp
add
add
or
add
or
pop
push
or
or
or
or
or
adc
fwait
add
ficoms
adc
adc
and
or
cmpsb
adc
adc
adc
add
data16
xchg
push
orb
pop
adc
in
pop
lock
inc
add
or
xchg
add
add
adc
add
into
add
and
cwtl
inc
inc
push
xor
add
cmp
add
add
push
adc
pop
and
or
pushl
xor
inc
mov
adc
bound
js
popa
add
test
xchg
sbbl
shll
lods
pop
les
lcall
roll
inc
inc
adc
cmc
out
test
or
lret
mov
mov
xor
add
adc
add
fisubrs
inc
lods
push
adc
pop
popa
jno
stc
add
adc
mov
or
xor
adc
shrl
icebp
mov
addb
loopne
sbb
mov
fiaddl
or
add
incl
or
add
lds
cld
cli
and
jg
jmp
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
sahf
aad
std
movsl
jecxz
cli
pop
mov
filds
stc
or
xchg
jg
or
insb
sub
addr16
out
or
push
push
incl
shlb
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
cmp
call
mov
orb
int3
lcall
mov
outsl
das
sbbb
pop
pop
mov
popl
movb
call
sbb
scas
adc
mov
xor
lods
scas
xchg
test
call
scas
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
outsl
jg
out
and
repz
cmpsb
pop
outsl
icebp
mov
pop
push
das
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
lcall
int
arpl
push
out
or
jg
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
pusha
jg
sarl
xor
hlt
and
xchg
jmp
sbb
mov
mov
out
pop
jb
mov
mov
push
mov
sub
pop
mov
jl
rorl
adc
xlat
gs
jg
hlt
push
add
stc
loope
aad
outsl
jg
mov
sar
andl
aas
icebp
testb
mov
jg
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
lcall
cli
push
inc
sbb
psubsb
jg
subl
jb
adc
push
lock
lods
jp
testb
sbb
jp
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
imul
ljmp
aaa
xchg
in
add
inc
adc
loope
fisttpll
ror
rcrl
cli
push
push
push
idivl
ljmp
dec
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
ret
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
inc
sar
cmp
sti
punpckhbw
cmpsb
orb
mov
push
sarl
inc
push
sub
xchg
pop
clc
pop
hlt
jg
push
lret
movsb
add
lea
jg
jmp
std
xorb
jg
aad
adc
ret
das
pop
pop
mov
mov
insl
pusha
fucom
out
sarb
sbbl
jno
or
sarb
call
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
jmp
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
jns
and
sbb
xchg
jo
and
out
test
jae
push
dec
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
call
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
loopne
ficoms
xchg
or
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
fildl
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jg
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
ljmp
icebp
ja
xor
cmp
xchg
mov
cwtl
pop
xchg
fldcw
jbe
xchg
and
jae
sar
inc
ljmp
jg
mov
sub
aas
stc
add
out
incl
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
mov
jecxz
and
lahf
fmull
enter
jecxz
pop
jmp
xor
pop
mov
sub
mov
in
testb
mov
push
sbb
push
inc
or
pop
ret
cmpsb
push
pop
jg
add
jg
mov
cmp
sub
adc
mov
mov
iret
mov
mov
push
push
sbb
stos
icebp
pop
incb
idiv
rorl
adc
push
inc
jecxz
sbb
sarl
adc
inc
clc
xorl
sbbl
cmp
dec
js
jle
add
mov
fsubrl
add
mov
lock
and
ljmp
push
clc
xchg
pushf
mov
repnz
and
mov
adc
inc
aas
push
rcrl
jge
jg
pop
pop
inc
jb
fistpl
adc
call
jno
int
jg
pop
nop
mov
inc
sti
arpl
daa
std
or
sbb
inc
decl
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
jno
fidivrl
jg
stos
pop
stc
clc
mov
mov
sub
jge
xor
lahf
les
sbb
lcall
sbb
cld
addl
sbb
mov
lahf
outsl
int3
push
lods
movsl
loopne
sbb
pop
pop
pop
test
bound
pop
outsl
xchg
inc
test
in
lock
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
adc
xchg
aad
loop
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
adc
stos
inc
mov
loopne
shrb
rcl
jg
adc
xor
pop
rcrb
dec
mov
gs
pushf
lea
jp
jnp
jecxz
adc
incl
inc
lds
push
pop
adc
imul
or
inc
pop
xor
rorb
mov
lcall
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
loope
mov
into
test
xchg
movsb
insb
or
and
xchg
fidivrs
push
jnp
add
insb
test
aas
repz
mov
outsl
lock
in
jmp
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
out
jne
or
mov
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
hlt
mov
clc
out
rolb
pop
or
or
mov
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
xchg
imul
pop
in
cmp
aaa
push
mov
fidivs
clc
adc
jmp
hlt
pusha
jg
loope
mov
xlat
inc
incl
mov
jg
mov
sub
addr16
loope
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
les
icebp
das
incb
lock
pop
pop
div
cld
negl
or
js
fs
sub
fisubrl
jmp
push
lock
jge
fbstp
out
xchg
cld
paddsw
add
out
icebp
mov
loope
mov
cmpsl
popf
enter
sti
mov
fbstp
and
push
xor
outsl
das
insb
jp
or
out
cmp
inc
inc
adc
call
xor
pop
jg
fcoms
mov
mov
and
xor
adc
call
popf
inc
xchg
dec
or
cs
pop
nop
mov
inc
add
push
pop
aaa
inc
es
fisttps
mov
mov
cld
jg
xchg
fimull
jp
aas
icebp
ret
ror
sbb
aaa
loop
out
sbb
adc
mov
mov
inc
mov
pop
clc
loope
loope
mov
lahf
add
jo
add
xlat
rcrl
je
xchg
fldenv
iret
rolb
jmp
xchg
xchg
lcall
decb
push
pop
gs
fbld
outsl
pop
out
jg
jno
ret
dec
sbb
cmp
sbb
out
inc
push
dec
jge
lcall
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
ret
leave
cmp
jmp
push
cmp
std
mov
daa
jmp
faddl
mov
addb
outsl
mov
push
imul
pop
stc
push
dec
out
fstpt
adc
popf
pop
add
aam
add
add
stc
or
add
push
sti
pop
inc
fs
xor
push
push
push
shll
mov
nop
mov
test
and
add
movsb
pop
jb
rolb
cmp
mov
addr16
jae
mulb
addb
jnp
sahf
or
add
incl
iret
mov
add
ja
jo
mov
jg
add
pop
fwait
xchg
andl
js
add
pop
dec
addb
in
or
adc
pop
mov
mov
dec
adc
scas
mov
psllw
jg
add
setl
scas
repnz
inc
xor
cld
inc
in
or
jnp
xchg
movsl
push
daa
add
repz
xchg
dec
and
cmpsl
push
and
cs
cli
pop
roll
push
movsb
push
movsb
inc
scas
push
into
push
and
stos
push
and
push
test
and
mov
mov
xchg
imul
push
inc
pop
pop
add
stc
pop
lods
push
mov
pop
sbb
add
out
cmpsb
fnstcw
popa
push
add
push
ds
les
push
adc
lcall
fs
mov
insb
or
lret
imul
imul
out
push
sub
lret
mov
mov
cld
addr16
fnstenv
fdivs
pop
stos
pop
dec
sub
dec
stos
mov
add
ss
add
jo
mov
push
mov
jno
add
outsl
push
shll
fidivrl
iret
outsb
or
push
ret
je
fidivrs
push
pop
shr
jge
fisttps
add
fwait
inc
ds
outsl
in
movsb
push
add
mov
sbbl
push
mov
pop
push
arpl
push
push
push
add
jne
push
aam
push
ret
add
sbb
mov
mov
push
pop
dec
add
jbe
push
data16
add
pop
aaa
add
push
push
scas
jns
iret
shlb
lret
stos
aas
jge
mov
inc
ja
push
push
xlat
jne
add
mov
push
fdivs
push
aad
push
xlat
ja
fnsave
jns
push
jp
jp
adc
push
fidivrl
sarl
ja
fnsave
les
je
jmp
mov
ljmp
xchg
in
xchg
sub
mov
cs
xchg
xor
xchg
push
setbe
mov
sbb
mov
ss
aaa
push
cmp
cmp
cwtl
push
cltd
cmp
cmp
pushf
cmp
lahf
push
push
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
sti
pop
mov
mov
push
jecxz
push
negb
in
jg
pop
add
fadd
add
cld
out
out
push
hlt
jns
out
clc
stc
cli
sti
cld
inc
clc
lahf
out
incb
jecxz
arpl
inc
xchg
fldcw
add
jo
imul
insb
add
pop
add
pop
add
xor
data16
enter
mov
add
adc
add
mov
or
or
outsl
or
and
stos
add
test
mov
or
push
sbb
push
pop
pop
adc
adc
xor
lods
pop
stos
cvtdq2ps
lods
pop
mov
mov
insl
cmp
scas
insl
lods
pop
pop
adc
push
scas
lods
push
and
fldcw
sbb
scas
scas
scas
and
subl
inc
and
mov
mov
add
pop
push
mov
push
pusha
cmp
and
xor
lock
test
mov
pop
and
sub
pop
sub
pop
pop
sub
or
sub
daa
in
ret
sub
pop
daa
mov
dec
xor
push
and
mov
into
pop
pop
or
mov
fsubs
add
pop
aaa
cmpsb
insl
lcall
add
mov
pop
xor
pop
lahf
cltd
popf
cltd
or
or
add
mov
cmp
pop
pop
das
push
cs
xor
add
xor
das
fbstp
add
pop
push
cs
dec
inc
das
inc
inc
xor
adc
inc
mov
xor
push
push
popa
jbe
cmp
jl
jge
jno
outsl
add
jmp
pushw
dec
dec
cmpb
jo
mov
inc
xorl
mov
call
popf
pushf
fwait
lcall
mov
mov
xchg
pop
jle
inc
xchg
push
dec
ja
jns
dec
push
bound
js
adc
xor
jne
je
shll
pop
push
push
adc
orb
xchg
or
pop
pop
mov
inc
or
push
inc
pop
dec
jle
xchg
pop
outsl
jns
push
dec
add
push
mov
cmpsb
push
mov
imul
js
xor
xor
ja
push
ja
jb
cs
xor
mov
insl
adc
pop
push
push
add
mov
fstp
jle
and
push
mov
xchg
clc
in
rcrl
pop
push
inc
mov
cmp
mov
sar
subb
sub
xchg
jae
xchg
jp
inc
lahf
stc
mov
mov
aaa
add
xchg
jno
lret
push
bound
mov
mov
mov
mov
inc
pop
iret
cmp
sahf
mov
ret
add
leave
imul
push
test
cmpsb
dec
push
dec
push
movsb
or
insb
inc
jae
add
jb
shll
outsl
pop
xlat
pushf
out
movsb
movsb
push
pop
add
fwait
imul
lcall
jge
insl
outsb
mov
dec
push
add
ja
add
sahf
jbe
fistpl
imul
jge
std
ds
push
add
and
es
js
out
mov
add
mov
shrl
insb
pop
repnz
sarl
push
ds
mov
add
aam
sbb
jg
fiadds
pop
lods
push
shr
out
data16
xor
mov
adc
mov
add
test
xchg
push
loopne
iret
sahf
mov
fstpl
push
jb
out
in
push
jle
or
jecxz
or
fiadds
fnstcw
aad
push
notb
mov
push
fildl
adc
push
adcl
addb
sbb
test
cs
sbb
test
in
mov
push
xchg
aaa
or
out
xchg
in
xchg
lock
sub
dec
add
sub
imulb
lods
fnsave
xor
cwtl
push
cmc
sahf
xor
fbld
es
pushf
cmp
rorb
mov
aam
jle
cmpsl
or
adcb
jo
test
sahf
or
jbe
stos
into
shll
lgs
dec
pop
mov
int
mov
mov
sarb
jmp
mov
ret
cmp
add
addr16
and
add
dec
out
je
or
adc
daa
add
push
enter
or
inc
cld
femms
or
or
fdivrp
sbb
es
push
adc
push
add
pop
jg
add
fcompl
add
sarl
mov
xor
ds
xchg
push
mov
mov
inc
loop
testb
mov
push
add
and
fildll
mov
and
cs
mov
aas
and
pop
imul
aas
xor
or
aas
aas
inc
sahf
sub
cmp
cmp
and
cmp
paddsw
jbe
adcl
incl
jle
cmp
imul
ds
mov
mov
repz
aas
adc
ds
data16
out
mov
decb
test
ror
add
mov
pushl
lds
add
pop
lods
stos
test
cmpsl
cmpsl
cmpsb
std
mov
test
test
test
mov
mov
inc
ret
fidivrl
sub
sub
sub
sub
sti
mov
ss
and
inc
mov
push
push
push
push
push
loopne
call
insb
insb
pop
push
push
pop
push
push
push
imul
das
pop
imul
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
insl
outsl
jmp
xchg
jns
jle
addl
xor
jae
jo
outsb
pushf
sti
lds
loopne
shl
adc
push
addb
add
add
roll
aas
sub
push
push
add
cmc
repz
dec
xor
das
adc
mov
add
call
inc
add
mov
add
mov
mov
push
mov
fnstsw
repnz
insw
fbld
xchg
add
add
mov
add
ret
push
in
sub
es
bound
push
arpl
mov
shll
push
push
dec
lret
js
push
std
jg
xchg
add
mov
mov
test
scas
xchg
js
sti
jmp
mov
out
es
nop
sub
sub
insl
nop
sub
xchg
xor
xchg
xor
xchg
imull
outsb
lcall
leave
jbe
negl
in
fidivrl
shlb
iret
push
lret
loopne
inc
clc
cltd
xlat
push
std
into
sbb
mov
xchg
int3
data16
add
test
jg
jle
jge
adc
adc
add
nop
or
push
dec
dec
dec
decb
dec
add
pop
add
push
dec
or
adc
cmp
mov
mov
or
add
push
adc
enter
add
or
pop
pop
cmovg
in
lcall
and
dec
and
aas
inc
inc
inc
adc
sbb
dec
add
dec
adc
inc
ds
ljmp
cmp
cmp
cmp
daa
and
sbb
call
shlb
and
add
dec
ss
xor
sub
sub
push
add
stos
inc
lods
mov
addb
mov
pop
mov
mov
add
mov
add
fldenv
outsb
mov
push
outsl
add
or
cmp
bound
pop
sbb
or
enter
orb
jbe
lods
dec
xor
incl
sub
mov
jg
xlat
sbb
call
jnp
roll
sysret
inc
xor
or
cmpsb
jg
ds
xchg
cmpsb
pop
stc
sysret
push
and
iret
in
lock
pusha
shl
push
push
add
ja,pn
lock
sbb
aaa
outsl
sub
or
pop
cwtl
test
mov
xchg
or
inc
into
jg
mov
aad
cli
mov
cli
inc
or
pop
and
and
sub
jns
jle
cli
addl
sbb
and
mov
das
sti
mov
mov
loopne
jle
inc
mov
cmp
dec
sti
jg
sbb
mov
mov
sbb
pop
ja
mov
cmpsl
idivb
mov
sbb
cld
jg
add
push
addb
inc
jle
orb
fsubs
jg
add
mov
jg
enter
jg
adcl
sbb
xorl
jg
push
pusha
xchg
incl
addr16
cmp
sub
xor
cmpsb
or
incb
or
data16
cmpsb
or
sub
and
or
cmp
arpl
push
jbe
mov
mov
pop
add
test
jle
and
pusha
fs
sbb
push
inc
xchg
addl
push
jmp
lods
jle
and
imul
addr16
add
jle
mov
sub
dec
pop
and
addr16
add
loop
inc
jbe
adc
ret
scas
data16
adc
mov
gs
add
mov
add
cwtl
mov
inc
push
shlb
ss
pop
in
push
adc
orb
jg
jle
in
sub
ljmp
ficompl
pop
stos
pop
pop
pop
add
pop
pop
pop
pop
insl
leave
inc
add
jle
push
enter
stos
pop
inc
test
inc
enter
mov
jle
sbb
jle
push
dec
xchg
out
sarl
push
mov
mov
push
comiss
daa
push
mov
addr16
pop
push
and
out
push
inc
lea
mov
xor
or
notrack
xchg
ror
scas
dec
je
jle,pt
and
or
into
push
jns
pop
idiv
fnstenv
add
push
jne
pop
fwait
adc
mov
push
jnp
and
push
jp
push
js
and
fcompp
dec
jbe
pop
add
mov
fdivrs
aam
fstps
push
outsb
ds
mov
cs
jle
in
pushf
push
daa
dec
incl
cmpsb
adc
scas
ljmp
jmp
xchg
dec
ja
xchg
or
jns
nop
mov
or
xchg
mov
push
mov
inc
call
sahf
inc
out
mov
xor
push
xchg
fdivl
fistpl
pushf
ds
cmp
cwtd
mov
xchg
xor
xchg
xor
sub
sub
nop
daa
ss
inc
out
xchg
cs
mov
lcall
outsb
ljmp
mov
bound
jg
pop
fnsave
xor
cmp
xor
je
movb
es
and
sbb
pop
cs
push
adc
add
ja
mov
xchg
or
jp
fidivrl
ja
inc
or
divb
mov
add
sub
ja
add
push
orb
loop
and
add
outsl
sbb
inc
cmc
cltd
and
les
outsb
roll
push
sbb
enter
lea
aaa
adc
pusha
popf
push
sar
lcall
and
cmp
lock
cmp
inc
lods
pop
pop
cmp
icebp
mov
xor
in
add
mov
subb
notrack
pusha
or
and
adc
push
mov
push
xchg
divl
push
sbb
xor
dec
cli
push
idiv
push
add
xchg
std
mov
and
add
ss
mov
pop
dec
push
fsubrs
cltd
mov
mov
sub
bound
test
mov
jmp
lahf
or
nop
lcall
std
inc
loopne
insb
out
minps
push
jmp
inc
fstps
or
mov
sti
ud0
gs
and
incl
ljmp
jmp
adc
and
xchg
or
out
or
mov
decl
inc
lcall
inc
int3
cmpsb
jmp
mov
ljmp
xor
cmpsb
test
daa
outsb
decb
mov
sbb
inc
clts
add
mov
mov
lfs
fmul
jle
adc
mov
sti
out
punpckhdq
pop
sub
push
add
dec
incl
pop
xchg
lods
iret
sub
xor
incl
call
adc
sub
xorl
add
mov
daa
outsl
mov
push
std
call
call
decl
stos
inc
popa
push
call
push
add
shll
fsubl
add
incl
cwtl
cmp
jg
movsb
fwait
test
cli
idiv
loop
add
sbb
sub
ljmp
decl
stc
sbb
fcmovbe
insl
fnstenv
jmp
aaa
mov
sbb
mov
mov
or
cmp
roll
dec
jp
nop
jbe
ret
incl
dec
mov
ljmp
lahf
inc
inc
cmpsb
pop
cmp
inc
inc
pop
inc
pop
mov
aaa
push
pop
sahf
movsb
dec
push
out
fwait
int
push
popf
inc
cmpsb
dec
dec
inc
jnp
push
dec
cs
dec
mov
pusha
xchg
cmp
and
out
enter
push
shrb
rcl
outsb
shrb
int
fst
es
push
jb
and
xchg
imulb
push
iret
insl
je
cmpsb
xchg
pop
daa
outsl
pop
imul
dec
cmpsb
push
push
lcall
inc
lcall
dec
dec
dec
pop
add
movsb
es
cmpsb
adc
mov
popf
cmp
aas
decb
lcall
push
inc
push
xchg
mov
xchg
fs
push
aaa
push
lcall
ss
xchg
push
xchg
es
xchg
cmp
xchg
xchg
notb
sub
pushl
xchg
scas
incl
mov
data16
ds
jg
add
push
aad
or
faddl
inc
fstpt
push
jnp
jp
outsb
lcall
or
jl
sbb
movq
es
jbe
int
jle
adc
fidivrl
push
dec
push
dec
repnz
repnz
jae
outsl
mov
jns
push
mov
jnp
jge
hlt
test
imul
jl
cli
int3
outsb
nop
negl
adc
mov
mov
mov
nop
xlat
lods
cmp
iret
mov
int
push
addb
jnp
lahf
dec
es
mov
in
inc
and
orb
hlt
pop
dec
push
dec
in
xchg
out
push
sub
iret
aaa
aam
aaa
out
mov
cli
pushl
test
clc
push
idiv
push
mov
out
jb,pt
sub
jg
mov
icebp
dec
pop
out
push
push
dec
cld
daa
jno
push
adc
fstpt
mov
icebp
xchg
mov
je
daa
jg
mov
adc
enter
loope
xchg
adc
bnd
jp
es
xchg
out
subl
aaa
incb
in
rorb
in
mov
sbb
jg
dec
in
sarb
adc
dec
and
xor
jge
idiv
lea
push
fsub
test
push
inc
push
int3
mov
jle
mov
fisubl
jne
out
jg
arpl
clc
jbe
and
push
pop
push
pop
aam
in
into
push
pop
or
scas
decl
push
xchg
cld
fists
into
lcall
push
jns
shl
sub
mov
jmp
mov
in
sbb
in
sbb
xchg
mov
pushl
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
push
and
aaa
mov
add
ja
inc
or
aas
xlat
push
cmovno
xchg
push
mov
adc
test
lods
dec
add
daa
and
add
add
adc
pop
mov
movsl
push
inc
lahf
mov
and
adc
repnz
iret
test
sub
cmp
scas
pop
into
pop
push
sbb
push
cmpsb
cmp
sbb
push
or
and
or
inc
or
push
sub
xchg
adc
jmp
sub
pop
inc
add
add
xchg
popf
push
mov
add
or
inc
insb
outsl
push
pushf
movsb
mov
scas
add
mov
push
insb
and
or
or
outsl
pop
xor
inc
imul
js
in
test
outsl
outsl
insb
push
push
outsb
popa
jo
push
dec
orb
test
jb
outsb
je
dec
fs
mov
jb
jge
mov
mov
jnp
push
or
jns
add
inc
arpl
push
jp
shlb
mov
sub
mov
imul
jns
sbb
pushf
inc
out
loope
sbb
sbbb
fcmovb
pop
and
push
js
cmp
popa
fildl
in
ja
dec
popa
rcr
insb
xor
outsb
add
sbbl
imul
mov
insl
inc
xor
outsl
or
inc
rorl
dec
or
inc
mov
rolb
jo
inc
sub
push
mov
or
dec
mov
pop
fbld
neg
adcl
call
adc
hlt
pusha
or
hlt
fcoml
insl
rcll
mov
and
mov
cmp
push
outsb
xor
fwait
and
sub
in
sahf
movsb
jo
mov
jbe
or
fidivl
dec
bound
jae
jb
sbb
popw
mov
jbe
xchg
jno
or
jbe
adc
push
cmp
sbb
dec
bound
lret
add
jo
pop
imul
jne
sbb
cs
rorl
pop
xor
push
ss
pop
push
ja
inc
push
push
ja
outsl
imul
pop
fdivs
fs
push
imul
dec
xor
cmp
jbe
inc
jae
adc
sub
push
outsb
lret
cmpsb
out
fsubrl
jecxz
add
cmp
mov
push
pushf
lods
jae
or
maskmovq
negl
sahf
roll
push
sbb
push
xor
lcall
ss
popf
rcll
jl
adc
loopne
rcl
mov
pop
push
inc
mov
stos
jae
out
mov
xor
arpl
das
add
push
jg
int
cmpsb
push
mov
mov
popf
idivb
adc
mov
and
push
sbb
and
out
or
mov
sbb
dec
jae
lock
inc
add
in
test
jecxz
inc
dec
add
inc
iret
pop
test
adc
mov
scas
fsubl
xorb
pop
jb
cmp
ret
mov
je
xor
dec
mov
fiaddl
mov
clc
stos
push
insl
pop
push
es
add
and
fst
adc
inc
pop
xchg
push
in
sub
arpl
mov
or
pop
sub
sti
iret
lods
sbb
jb
push
es
int3
push
int
mov
xchg
mov
sbb
sbb
fadds
and
inc
jne
sub
lahf
cmp
xor
xchg
cmp
xchg
sub
dec
das
popa
shl
jns
mov
outsl
es
xlat
push
ljmp
inc
and
push
sub
lods
jae
pop
test
pop
sub
dec
loope
adc
scas
popl
je
cs
sub
xor
repz
dec
mov
loope
ret
and
ja
popf
repz
mov
loope
and
fisubrl
rcr
adc
mov
lock
iret
jp
cwtl
or
or
les
test
arpl
xchg
dec
jne
jo
sbb
cmc
lds
or
inc
jo
jae
xor
and
mov
aaa
movsl
pop
mov
add
or
scas
loope
popa
dec
pop
repz
aaa
inc
add
add
jae
movl
add
xchg
mov
add
sub
push
lods
cmc
add
std
cmp
inc
push
adc
and
xchg
and
arpl
push
pop
rol
insl
inc
sub
or
adc
mov
xor
xchg
pop
sub
push
movsb
out
mov
lock
mov
jecxz
sub
and
jnp
addr16
push
mov
and
mov
or
pop
imul
lret
ret
loop
inc
jne
neg
push
leave
gs
adcb
das
std
arpl
add
sub
and
mov
dec
lods
xchg
and
inc
sbb
fmull
lods
sbb
ljmp
inc
insb
cmp
rcpps
cs
jb
dec
mov
imul
add
inc
imul
mov
mov
push
sbb
ss
or
sahf
daa
push
in
shlb
jo
push
outsl
fiaddl
outsb
cmp
jp
jge
fwait
pop
arpl
in
jp
out
mov
mov
sub
xor
stos
rorl
dec
pop
pop
mov
sarb
push
sarl
inc
addr16
or
push
and
inc
add
out
or
std
popa
inc
pusha
dec
pop
fidivs
cmp
mov
push
push
pop
xor
inc
lock
mov
adc
or
mov
outsb
inc
push
push
adc
sbb
pop
and
pop
jno,pn
add
outsb
dec
stos
fs
mov
mov
and
mov
mov
in
lret
imul
js
imul
repz
add
pop
add
add
sbb
mov
xor
xchg
movsb
dec
adc
lcall
adc
or
mov
xchg
pop
add
es
loopne
sar
add
inc
xor
jb
cmc
or
add
rolb
or
in
adc
and
in
sub
mov
testb
dec
push
outsb
sub
xchg
test
inc
jo
mov
dec
dec
sbb
mov
sahf
imul
jmp
jge
push
cmp
shr
inc
insb
scas
scas
nop
adc
ja
xchg
dec
stc
add
or
inc
mov
add
xor
or
pop
sub
xchg
les
inc
stos
es
lret
jge
mov
and
adc
lcall
and
push
mov
aam
bound
repnz
popf
addl
shlb
les
xchg
movsl
sbb
mov
sti
imul
xor
xor
and
es
add
ret
push
cs
insb
sub
lods
cwtl
mov
xchg
in
pop
lret
inc
fadds
pop
cmp
outsb
sub
mov
lret
rep
out
mov
decb
rcll
shrl
pop
adc
pop
jo
cltd
pushl
arpl
repz
dec
push
or
pop
fcomps
push
adc
sbb
sub
pop
insb
adc
and
push
cmpsl
inc
pop
sbb
pop
lea
outsb
jbe
sbb
addr16
popa
adc
mov
and
push
mov
sbb
xchg
inc
dec
nop
mov
pop
adc
dec
test
adc
pop
shll
ret
push
rorl
adc
das
xchg
dec
lea
pop
push
mov
outsl
mov
mov
cmpsb
jb
inc
sbb
addl
nop
js
insl
fs
mov
sbb
inc
dec
cwtl
or
inc
xchg
and
cmp
push
out
mov
push
xchg
sbbl
pop
push
jo
mov
push
ret
aas
std
imul
push
jne
add
xor
lahf
jbe
add
ja
mov
mov
pop
lds
mov
mov
aaa
cmc
rolb
xor
jae
mov
sahf
add
xor
or
shrb
or
insl
adc
mov
push
pop
inc
outsl
mov
cmpsl
int3
inc
mov
dec
dec
ja
imul
testl
das
dec
jp
push
pop
push
inc
and
sub
inc
and
inc
rorb
test
dec
sub
fisubrs
ret
push
inc
mov
add
out
fisttpl
out
out
loopne
add
adc
add
mov
insl
push
mov
daa
mov
xor
lock
pop
add
insl
iret
sbb
movsl
jle
cmp
or
adcl
mov
add
lea
add
adc
pop
add
in
push
mov
add
rolb
dec
xor
add
pop
pop
mov
and
add
jl
fwait
xor
or
jb
popa
push
cltd
add
adc
negl
inc
cs
notb
cmp
les
mov
cmp
cwtl
push
dec
rol
xchg
sahf
jae
arpl
xlat
out
sub
xor
rolb
lods
movsb
enter
push
mov
mov
inc
dec
js
mov
xchg
jg
adc
add
xchg
and
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
add
inc
add
