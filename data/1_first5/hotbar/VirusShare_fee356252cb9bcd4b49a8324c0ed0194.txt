fcomp
decl
push
jns
add
mov
or
adc
sub
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
push
push
xor
push
mov
adc
cmc
pop
mov
fisubrs
les
adc
incl
sbb
clc
imul
add
push
mov
push
push
push
xor
je
push
push
push
push
idiv
data16
in
sbb
clc
add
pop
sbb
inc
pop
shlb
nop
jne
pop
pop
pop
lcall
repnz
add
or
inc
or
jle
dec
push
xadd
dec
test
jg
mov
mov
push
mov
mov
call
ret
pop
add
fdivr
inc
push
push
mov
pop
mov
mov
les
insb
and
aaa
cld
ja
mov
push
push
bound
add
movl
outsb
push
mov
std
orl
dec
in
das
xor
out
sub
sbb
push
and
push
jno
into
notl
dec
je
sbb
add
pop
rclb
rclb
jmp
adc
dec
add
jnp
incl
cmpl
jne
push
mull
pop
mov
jmp
lahf
sarl
add
inc
shlb
add
sub
jo
hlt
push
and
enter
in
es
sbb
xor
jb
sbb
push
push
mov
adc
data16
mov
out
and
xor
lret
add
jp
sub
inc
mov
and
fbld
jb
lret
and
mov
pop
jl
or
mov
add
mov
sub
xchg
pandn
cmp
add
popf
push
push
lcall
add
ss
push
sbb
push
sti
push
fcoms
or
mov
unpcklps
into
xchg
push
push
into
loop
nop
pop
nop
or
leave
mov
jbe
mov
cmp
mov
fidivrs
les
add
push
sub
repnz
add
inc
mov
push
push
inc
add
dec
das
sbb
and
push
inc
add
loopne
pusha
inc
and
push
mov
roll
push
aam
xor
mov
push
daa
out
rcrb
lock
aam
xor
enter
push
push
dec
push
mov
lea
jle
pop
in
pop
mov
dec
jl
mov
dec
add
sbb
in
inc
lret
add
nop
mov
inc
xor
not
sbb
adc
pop
sub
cld
clc
shr
push
mov
and
mov
cmpsl
dec
or
xor
lea
filds
jns
cmp
jge
mov
movsb
pop
pop
cmpsb
mov
pop
ret
xor
repz
push
dec
dec
push
sub
push
insb
insl
push
add
push
out
and
jl
cmpsl
movsl
inc
in
les
stos
jecxz
leave
lcall
pop
add
jbe
pop
clc
mov
sub
push
mov
dec
lea
es
push
sub
insb
add
lahf
jmp
add
mov
inc
xor
jne
sbb
push
in
push
int
inc
bnd
add
mov
add
or
xchg
test
ficomps
push
fildll
out
or
add
sbb
lock
in
dec
ret
out
rol
bswap
push
add
call
inc
mov
andb
xchg
ret
jg
cmp
push
push
andl
sub
pop
aas
call
mov
nop
test
jg
sarl
mov
mov
push
inc
ds
pop
cmp
push
in
lds
xor
mov
leave
cmpsl
test
or
and
jmp
or
sbb
iret
xorb
popa
cs
push
lea
push
andb
push
cltd
fistps
ds
xor
jge
or
insb
xchg
push
clc
fstps
faddl
or
out
adc
lock
or
popf
pop
add
pop
mov
jb
sub
mov
pop
sbb
cmp
pop
and
pop
and
dec
js
sub
dec
mov
pop
sbb
cmp
out
mov
pusha
push
push
es
les
push
push
push
and
arpl
push
cmp
pop
push
pusha
sbb
mov
in
sete
test
test
repnz
or
and
xchg
and
into
push
add
mov
push
aad
adc
pop
insb
pop
stos
out
imul
push
jmp
adc
push
mov
pusha
lds
xchg
hlt
or
push
in
jne
mov
rorl
cmp
jne
push
jle
inc
or
sbb
push
adc
and
jecxz
seto
lods
or
and
push
rolb
xchg
adc
jb
adc
push
enter
or
push
sbb
push
dec
cmp
mov
mov
xchg
pop
rcl
sbb
add
push
or
xor
cmpsb
jo
push
ljmp
test
mov
fs
scas
dec
push
cmp
cmpsl
cmp
sbb
pusha
cmpsb
or
mov
dec
sbb
std
and
inc
cmp
in
push
mov
jle
push
cs
mov
loope
pop
sub
cmpsb
mov
data16
aad
sti
mov
jmp
movsb
xchg
icebp
jecxz
jecxz
sbb
cmp
mov
pop
add
sbb
pop
test
or
out
int3
lcall
or
leave
mov
test
imul
sti
add
push
mov
loopne
sbb
push
sbb
cld
mov
jno
add
out
xor
push
rcrl
pusha
mov
imul
shrb
rolb
pop
cmp
mov
adc
push
fildll
jmp
lea
popf
cmp
or
inc
imul
fs
or
movlhps
mov
push
mov
data16
adc
sub
mov
call
cmpl
je
cmpsl
jle
mov
lea
rorl
adc
push
adc
dec
xlat
jle
lcall
cld
mov
lods
cmp
sub
xchg
testl
mov
push
inc
mov
sub
aam
enter
sbb
adc
cmpsb
or
adc
jl
add
adc
adc
das
cltd
ja
sbb
das
insb
or
mov
mov
aas
mov
cmp
and
mov
mov
add
mov
sub
push
adc
imul
sbbl
push
adc
lea
pop
pop
icebp
jns
movsb
lret
test
jl
aad
les
push
push
sbb
in
push
xchg
mov
and
push
sub
inc
movsl
clc
scas
in
int
mov
xorl
sub
in
jg
mov
cli
jmp
cmc
lea
insb
mov
repz
jmp
pop
pop
and
cli
fildl
filds
adc
jne
test
cmp
outsb
out
and
fs
cmp
push
xor
xchg
bound
mov
repnz
imul
cmp
enter
jmp
add
sbb
das
push
and
cmp
jne
mov
andb
sub
pop
test
jl
and
lods
sbb
push
cmp
test
je
sub
cmp
je
push
jne
ljmp
lret
inc
xchg
fisttpll
shlb
mov
mov
cmp
test
mov
add
les
ret
add
mov
add
add
aaa
loopne
lcall
sub
cmp
ss
push
cmp
call
adc
add
pushl
push
call
inc
cmp
jl
xlat
ret
std
adc
push
mov
js
jne
push
mov
cmc
jbe
test
shlb
xor
jle
test
mov
xor
inc
push
dec
mov
ds
js
aaa
adc
cmp
mov
rcll
mov
and
mov
ret
sbb
pushl
movzwl
and
add
je
push
cli
into
mov
jmp
ss
ljmp
ret
push
add
inc
test
jne
sub
push
push
inc
xchg
in
lock
cs
sbbb
adcb
lahf
push
xchg
out
and
aas
push
ja
mov
push
mov
sbb
shlb
mov
popa
outsl
out
lea
fbstp
iret
cmp
jg
inc
movsb
add
sub
jg
jge
xor
mov
cmp
jl
repnz
mov
xchg
insb
pop
pop
ret
mov
pop
xchg
push
pop
adc
inc
nop
leave
or
pop
rcrl
or
lahf
push
ret
shl
jbe
pop
movsl
pop
mov
add
je
jno
pop
or
xchg
loopne
int
adc
lea
lods
shlb
adc
pop
cmp
jo
orb
scas
out
inc
cld
or
mov
sub
test
jge
push
call
mov
xchg
or
fcomi
scas
dec
clc
jle
mov
mov
cmp
pop
xor
fsub
mov
sub
lea
outsb
add
fistl
cmp
mov
cmp
ja
add
jmp
insb
fcoml
add
push
insl
shl
xchg
add
mov
aad
xor
jo
jg
mov
movb
pop
pop
or
addl
or
inc
lock
je
js
push
lahf
and
push
sub
pop
sub
add
inc
movl
jnp
pop
or
aad
adc
cmp
pop
jbe
jno
shll
push
fld
jbe
mov
pop
pop
push
ds
inc
aad
xorb
in
in
jp
cld
add
cld
mov
or
outsl
pop
or
lret
repz
cmp
ja
push
clc
lea
ret
cmp
push
notl
or
pusha
jb
mov
jmp
add
adc
pop
lcall
adc
add
loopne
mov
mov
add
inc
aam
add
push
push
push
js
loop
push
push
loopne
sbb
jne
test
sbb
push
push
lea
sbb
mov
imul
push
xchg
pop
or
or
or
push
insl
add
sbb
pop
repnz
pushf
sarl
mov
jecxz
push
lods
ret
or
cmpsl
shll
pop
std
or
sub
xor
inc
pop
js
mov
aaa
movsb
sub
cmp
je
inc
outsl
jg
cmpl
lea
jl
mov
push
jne
push
js
mov
stos
call
dec
test
push
mov
jle
das
pusha
fsubrs
push
hlt
push
push
mov
fimuls
ret
adc
mov
inc
push
or
inc
or
dec
jo
lock
idivl
pop
adcb
add
out
lds
pop
lahf
ret
push
ficoml
mov
hlt
fs
or
loopne
xchg
lahf
sbb
adc
mov
das
pop
lods
dec
inc
push
ja
adc
out
fndisi(8087
or
xor
cmp
fmuls
fsubrs
ficoms
loope
mov
push
cmp
sbb
or
arpl
pop
push
push
in
mov
sub
or
mov
push
pop
mov
mov
xor
or
mov
sarl
lea
cmp
jge
popa
jp,pn
lea
inc
dec
adc
adc
pusha
and
mov
lea
test
movsl
loop
ret
mov
in
dec
mov
mov
cmp
ret
sti
scas
push
push
loop
pop
jle
mov
jmp
sarl
ret
add
pop
xor
jmp
add
es
ret
sub
movsl
jg
stos
cmp
rorl
adc
push
outsb
js
andl
ret
mov
xor
les
sub
mov
mov
or
add
dec
js
cs
push
jae
jg
cli
sbb
dec
mov
push
or
cwtl
orl
mov
fiaddl
pop
xor
mov
lock
hlt
cmp
lods
and
cli
lret
xorl
lods
pop
dec
sar
rorl
cmp
ret
cmp
rorl
mov
sub
and
jb
push
push
lock
mov
sbb
push
add
sub
pop
or
lea
add
push
push
add
or
mov
sbb
inc
pop
lock
push
jge
jp
inc
pop
pop
push
lock
mov
jbe
jmp
mov
std
pop
or
inc
cmp
jb
mov
push
add
bound
fdivs
pop
pop
pop
mov
lret
ficoms
pop
inc
loope
push
pop
push
pop
repz
sub
ret
mov
or
sub
lcall
lea
push
cli
push
pop
fldenv
lock
insb
adc
pop
xor
mov
jno
mov
pop
pop
sti
fldl
nop
or
clc
shll
mov
xchg
mov
arpl
mov
loop
sbb
cmp
cmp
popf
cwtl
push
jbe
and
or
sbbl
xchg
push
test
push
aam
jecxz
ds
pop
add
cli
rolb
int3
mov
lds
push
push
int
scas
mov
adc
pop
sbb
mov
or
pop
and
sbb
repnz
xor
sti
pop
cmp
loopne
sti
jne
xor
push
push
dec
pop
outsb
or
fucom
push
xlat
push
lea
add
ret
jl
insl
add
fisttps
mov
test
fcoms
mov
aas
mov
enter
or
or
bound
jmp
mov
cmpsl
sbb
aad
adcb
xchg
adc
fidivrl
jg
nop
outsb
leave
and
das
leave
xchg
pop
and
or
sbb
sbb
lock
cmp
or
mov
push
sub
mov
pop
popa
iret
jl
inc
pop
outsb
jae
ret
not
push
and
je
xor
add
ja
fwait
test
and
je
or
scas
or
jge
test
push
inc
push
push
in
add
test
push
ror
push
adc
repnz
push
adc
sub
insb
jne
jl
cmp
in
cmpl
fistpll
jle
lock
data16
jmp
outsl
test
mov
shr
add
jne
inc
mov
add
cmp
out
insb
mov
jle
repz
mov
cmp
inc
pop
and
movzbl
je
or
cld
adc
icebp
ja
je
push
sub
cmp
jne
cmp
cwtl
jecxz
dec
ds
mov
xchg
ds
divb
test
or
or
lock
cmp
sbb
or
movsb
push
inc
dec
adc
mov
mov
daa
or
mov
add
repnz
dec
je
xor
lcall
and
pushf
cmp
dec
mov
and
xchg
sbb
mov
xchg
add
mov
lds
cmp
or
enter
leave
pushf
cmpb
mov
outsb
test
sub
in
rorb
jp
cld
cwtl
push
lea
hlt
mov
and
xor
inc
sbb
adc
sbb
fistps
popf
jns
lds
fdivl
adc
cmp
ljmp
adc
out
movl
sahf
or
mov
stc
das
xchg
mov
scas
sub
sub
sbb
jnp
daa
je
pop
jne
scas
sahf
xlat
lock
sbb
in
sub
xchg
lahf
xor
out
mov
loop
cmp
cmp
repz
sub
mov
sub
xor
pop
and
addb
jae
imul
movsb
fstl
loope
push
adc
and
sahf
in
sahf
in
or
pop
jnp
into
clc
adc
add
adc
xchg
ja
dec
ljmp
call
insl
xchg
sahf
jle
xor
inc
mov
dec
mov
pop
push
lea
push
ficoml
push
add
push
lea
cmp
xchg
push
dec
aam
mov
inc
les
mov
sahf
shrl
sbb
or
mov
pop
cltd
or
movl
or
bound
rorb
stos
xor
jle
lods
cli
push
aad
jl
cmpb
mov
fidivrl
nop
fldt
test
inc
dec
push
call
add
push
push
push
jle
js
std
rcr
cwtl
movl
adcl
pop
mov
fmul
mov
or
inc
mov
inc
addb
cmp
xchg
dec
and
ret
jle
or
push
ljmp
sub
push
cmpsl
pop
movsl
add
xchg
sbb
pop
mov
lock
call
in
and
jecxz
sbb
xchg
call
jb
pop
mov
js
cmp
sbb
out
dec
dec
lret
dec
push
mov
push
aas
lock
add
sub
setne
shrb
loope
push
rorb
push
pop
push
movsb
cmp
xor
push
aas
mov
lods
pop
pop
popl
nop
rcpps
dec
pop
hlt
push
push
push
inc
test
pop
cmp
je
lea
push
add
push
inc
inc
add
pushf
adc
xchg
pushf
push
mov
mov
sahf
pop
mov
xchg
push
ss
call
pusha
xchg
push
cmp
sbb
add
jmp
xor
adc
pop
add
test
mov
jae
ret
adc
xor
jecxz
push
add
push
pop
push
lea
test
adc
mov
std
aaa
data16
push
mov
mov
insb
push
dec
dec
mov
push
push
xor
clc
repz
adc
addb
clc
or
sub
cltd
sub
rcll
add
out
inc
aas
jle
imul
and
jmp
mov
add
sahf
andb
inc
mov
cmp
mov
adc
dec
mov
lret
xor
push
adc
jbe
fadd
push
add
cwtl
push
sbb
push
adc
push
xor
cmp
adc
or
pop
fldl
sbb
fsubl
lock
fstl
popf
xor
push
add
fidivl
xchg
mov
fistps
lcall
pop
icebp
loop
out
cld
call
pusha
adc
iret
jecxz
push
sbb
inc
movsl
push
addb
adc
adc
push
xor
push
frstor
push
rcrb
push
adc
icebp
pop
addb
mov
in
cmc
repz
mov
pop
mov
pop
clc
mov
or
cmp
fidivrs
xchg
cmp
adc
push
jl
lock
xorb
inc
push
inc
jecxz
lods
jg
decl
shlb
movl
int3
jmp
mov
xor
push
push
adc
loope
push
and
push
add
mov
pop
ljmp
lret
push
mov
mov
das
sbb
cmp
push
mov
pop
xlat
loop
pop
push
scas
mov
test
in
cmp
inc
aaa
cmp
je
cmp
roll
aad
lahf
jb
and
aad
sbb
cmp
cld
jg
jmp
pop
in
movl
push
lcall
adc
rcrb
fsubs
push
popa
js
cmp
fldz
fisubrs
jb
dec
fiadds
dec
xchg
xchg
push
cmp
dec
rcll
flds
xor
jle
mov
pop
in
cli
scas
nop
dec
aas
mov
or
jl
add
push
xchg
stos
sbb
sub
pop
xchg
les
incl
jne
bnd
movsl
push
mov
inc
and
jecxz
sbb
into
rol
adcb
or
mov
sbb
pop
push
fstpl
jecxz
and
orb
fucom
inc
lea
imul
repnz
stos
cmp
adc
cmpsl
jo
test
sbb
and
sub
mov
push
xchg
je
add
sub
test
mov
or
cmpsl
ds
and
loopne
dec
ljmp
push
push
sub
subb
jns
push
push
add
test
push
pusha
push
pop
xchg
test
push
adc
nop
cmp
sub
push
push
lea
aam
fcoms
jl
cmp
pop
sub
int3
cmp
xor
push
add
add
flds
js
jmp
inc
jg
cmp
addl
or
push
mov
add
push
je
xor
es
cmp
dec
jo
cmp
mov
xor
mov
dec
add
je
popf
test
add
or
inc
mov
loop
mov
and
stos
adc
sbb
push
push
and
sbb
mov
push
sbb
rcll
je
push
xor
cmpb
dec
mov
stos
push
jb
or
faddl
sub
push
aas
inc
shrb
inc
push
loopne
int3
inc
fldl
fmull
add
shl
push
push
inc
sub
push
adcb
iret
insl
and
lahf
push
mov
adc
popf
andb
inc
cmpsb
xchg
adc
add
scas
add
add
mov
les
dec
sbb
push
push
xchg
sub
add
push
lds
cmp
or
jp
or
sbb
enter
pop
add
mov
or
ds
fbld
inc
push
add
push
mov
add
push
add
push
and
jp
loop
or
sub
dec
sbb
and
or
xor
xchg
es
xchg
or
sahf
jp
add
bswap
push
mov
or
mov
adc
or
xchg
inc
xorl
test
sbb
mov
sub
xchg
push
push
lds
in
js
pop
cmp
sub
cs
cld
add
jp
push
xorb
shll
jge
in
mov
lock
push
stos
js
sbb
pop
cs
sub
push
pop
inc
test
or
adc
cmp
enter
dec
push
mov
mov
stos
jo
mov
dec
push
addb
iret
add
fdivl
enter
js
loopne
add
int
dec
push
hlt
dec
mov
sbb
int3
int3
loope
aam
dec
push
push
push
lods
test
arpl
and
pushf
js
sbb
xor
je
data16
popf
add
lock
mov
sbb
js
push
pop
push
call
movsl
jno
test
test
dec
add
in
xchg
add
enter
adcb
es
add
sub
and
lock
mov
mov
cmp
and
or
or
ljmp
jl
cltd
and
arpl
sar
push
shlb
pop
adc
jl
dec
add
xlat
adc
add
and
mov
mov
dec
bound
imul
sar
sbb
out
decl
add
mov
imul
push
lahf
mov
in
jle
pop
pushf
nop
imul
adc
in
jmp
mov
mov
stc
add
add
adc
push
enter
sarl
lea
sbb
divl
jg
dec
call
push
cmp
jne
push
lea
push
or
das
jnp
dec
xor
fisubrl
or
pop
jmp
scas
fdiv
shr
es
lea
or
mov
loopne
ljmp
in
sbb
sbb
mov
inc
sbb
out
mov
inc
dec
push
dec
push
xchg
rolb
or
inc
add
sub
sub
call
jp
cli
jle
fldz
data16
push
ljmp
cmp
fisubrl
int3
jmp
adc
fstpt
stos
or
cltd
idivl
push
xor
sub
aaa
ds
pushf
cmc
outsb
outsl
sub
sbb
loope
jne
sbb
popf
mov
or
sub
arpl
mov
fidivrs
cmp
notb
cmp
mov
adc
sbb
xchg
sbb
and
and
inc
or
ljmp
lods
pop
lea
cmp
or
iret
out
or
jmp
mov
loopne
jno
pop
fistl
paddd
mov
add
push
or
rorb
sbb
stc
shll
mov
cli
sub
sbb
mov
mov
mov
xchg
adc
inc
push
fcoms
lock
jmp
fbld
push
inc
jl
mov
mov
loope
adc
je
add
addb
std
ds
clc
in
push
pop
movb
adc
mov
leave
adcl
push
sub
and
mov
push
push
mov
shll
xchg
cs
push
add
and
mov
inc
mov
and
mov
loopne
call
xchg
sti
sbb
add
xor
je
mov
xchg
xchg
and
inc
insl
pop
xchg
sub
ja
mov
xor
fistl
xchg
mov
movsl
jno
xchg
xchg
and
add
sarb
inc
lcall
test
or
sub
push
test
sub
sahf
or
jo
aas
add
xchg
sbb
outsl
loopne
pushl
popa
jmp
jecxz
xchg
cmp
inc
jmp
add
or
adc
inc
mov
xchg
enter
xor
sbb
lahf
into
lock
pop
or
fstps
cmp
and
push
or
push
mov
mov
das
orb
add
push
aam
xchg
js
cmp
xchg
inc
cmp
test
ljmp
jg
adc
push
add
push
jo
lock
jae
shrb
inc
jg
ljmp
adc
cltd
pop
lahf
sbb
bound
subl
adc
push
adc
fstp
dec
std
adc
push
push
sbb
ds
rcll
mov
jb
sbb
cmc
enter
sbb
adc
cld
mov
pop
cmp
setl
cmp
lods
out
adc
lea
pop
in
leave
adc
push
mov
or
lcall
sbb
mov
imul
push
cltd
inc
pop
sub
push
mov
push
jb
jg
je
test
and
sbb
movsl
mov
pop
ret
lahf
or
inc
and
add
sbb
and
dec
sub
lods
and
or
add
xor
push
sub
clc
pextrw
les
iret
sub
cmp
setae
lcall
and
add
mov
mov
js
lret
mov
outsb
or
cmp
or
jae
push
hlt
inc
inc
pop
push
push
movsl
jb
add
inc
push
nop
sub
mov
lea
push
adc
cmpsb
call
movsl
push
adc
pop
pop
mov
lahf
rcll
lods
jecxz
jle
mov
mov
push
pop
cmp
push
push
jnp
lcall
hlt
adc
nop
rolb
popf
inc
jg
jbe
push
add
shr
clc
adc
push
push
inc
jo
lret
push
dec
push
dec
or
inc
dec
jns
les
popf
mov
add
lret
xorb
loopne
cltd
mov
cmpl
inc
pushf
out
push
pop
jns
lahf
or
filds
movzbl
xor
adc
or
push
vmread
fnstenv
mov
shl
add
imul
adc
sub
add
xor
inc
scas
xlat
dec
jo
dec
sbb
roll
lahf
int3
hlt
mov
mov
jnp
lds
ds
mov
movl
cmpsl
sub
or
adc
movl
pop
jmp
inc
es
pusha
jmp
prefetcht2
sbb
xor
sbb
xor
pop
adc
lret
mov
mov
and
and
add
add
xor
movsl
cwtl
je
cltd
andl
orb
ret
popa
adc
and
and
push
jbe
and
imul
pop
aam
pop
add
leave
out
sahf
add
or
sbb
sbbb
mov
inc
ljmp
sbb
or
dec
jbe
pusha
push
lea
sbb
and
insb
jns
lock
out
mov
pop
inc
mov
sbb
xchg
jbe
nop
mov
popf
rcr
jl
jo
or
inc
sub
jmp
push
cmp
fnsave
jmp
push
dec
rclb
pop
or
dec
and
shll
sahf
sub
mov
in
shrb
sub
cwtl
push
pusha
mov
lods
gs
repnz
xchg
mov
or
jecxz
leave
es
shrl
mov
je
add
mov
jbe
jne
push
push
push
pushf
shlb
pop
xchg
push
or
push
or
mov
hlt
aaa
fadds
pusha
cmpsb
std
out
sarl
push
or
dec
sahf
dec
in
stc
subb
xchg
push
or
or
add
insl
cmp
jmp
push
dec
cld
shrl
xchg
or
jp
leave
or
dec
xchg
mov
pop
inc
arpl
pop
nop
mov
and
or
inc
pop
sbb
cmp
add
mov
and
lea
inc
and
jl
xchg
push
push
rolb
xor
lret
push
push
lock
xlat
mov
cltd
int3
call
sub
push
or
arpl
ljmp
ds
movl
push
or
je
ss
je
std
mov
jmp
xor
fsubs
inc
enter
sbb
lods
jl
jb
adc
cltd
mov
test
push
fisttpl
add
mov
pop
xor
leave
mov
or
xchg
xchg
leave
lret
push
fwait
in
xor
cmp
and
mov
push
add
jne
adc
mov
sub
loope
or
pushf
pop
xor
cwtl
pop
mov
push
push
pop
ret
xchg
int3
mov
fwait
inc
xchg
and
mov
inc
and
fidivrl
test
add
fiadds
clc
adc
mov
jecxz
add
push
cmp
je
pushf
cld
or
jo
js
cmpsb
ret
mov
shll
add
hlt
je
pusha
out
mov
mov
inc
es
out
data16
pop
movl
jne
cmp
sub
rclb
push
add
js
push
data16
mov
pop
sub
lds
insl
add
rolb
cmc
or
push
mov
rclb
adc
mov
ds
mov
daa
and
add
in
cs
lods
pop
pop
jo
sub
mov
icebp
sahf
pop
adc
into
sub
add
and
or
xchg
inc
mov
jl
cli
ja
dec
jl
mov
adc
lahf
in
cmp
mov
push
add
icebp
and
inc
insb
ss
das
out
dec
sbb
insl
push
in
or
jmp
clc
adc
mov
inc
push
mov
movsl
int
popf
push
adc
jp
dec
xor
roll
leave
jo
loopne
mov
xor
xor
and
inc
ja
mov
enter
lret
push
stos
push
mov
push
iret
pop
add
loop
adc
and
adc
cmp
xor
mov
test
mov
jle
bound
out
ds
int3
add
cltd
push
jns
adc
icebp
or
int3
add
jb
into
jo
movsl
cmp
push
std
stc
cmp
mov
mov
inc
or
or
popa
jmp
das
push
jmp
and
inc
and
xor
in
jge
jne
test
bound
pop
mov
shlb
call
push
sbb
cmpb
push
iret
xchg
lock
mov
adc
add
ljmp
xchg
sub
fldenv
ljmp
movsl
or
push
nop
iret
lahf
add
push
push
lcall
and
inc
cmp
add
add
sahf
sbb
ss
jne
das
push
adc
push
xor
sbb
pop
mov
cwtl
or
adc
push
test
jne
xor
jbe
add
push
push
and
cmp
cmp
or
add
roll
inc
jbe
aam
cltd
xor
lahf
push
xchg
mov
push
in
xchg
push
jge
lahf
push
sbb
adc
cld
dec
inc
push
sub
loopne
cmp
cmp
dec
sub
push
out
movsl
fistl
xor
popa
mov
subb
cmp
adc
inc
test
ficoms
lahf
pop
cmp
pop
or
and
xor
xor
es
jb
mov
cmp
jne
pop
sbb
inc
stos
push
jo
add
mov
jbe
push
into
clc
xor
enter
mov
or
and
pop
add
sbb
pop
shrb
aam
add
push
add
jne
adc
out
or
sub
mov
cmp
bound
xor
jne
mov
loope
xor
dec
and
xchg
and
and
orl
and
stc
push
and
sbb
psubsb
mov
shrl
clc
hlt
jmp
lret
lret
sub
mov
movsb
pop
subl
sub
push
cmp
ljmp
and
mov
xor
mov
ds
dec
and
filds
push
cmp
xor
add
sub
dec
mov
into
cmp
xchg
mov
aam
cmp
xor
sub
cmpsl
repnz
stos
xchg
cmp
push
mov
and
pushf
cmc
add
clc
ret
out
stos
sar
or
jno
mov
push
js
inc
push
and
lea
fidivl
adc
pop
rclb
fsubrl
rorl
and
add
clc
push
adc
enter
jge
push
push
and
push
fwait
cltd
addb
roll
add
sub
push
loope
call
jb
mov
int
dec
ss
shlb
and
xor
add
dec
push
fnsave
std
add
pop
add
xchg
seto
push
or
push
dec
sbb
lock
test
pop
pop
orb
dec
aas
pop
add
lds
adc
nop
xchg
xorl
pop
sub
jns
mov
push
cmovp
ljmp
ret
stos
add
push
repz
cmp
xchg
push
and
mov
push
pop
mov
jno
pop
pusha
add
push
push
enter
push
test
pushf
cltd
or
cld
add
fidivl
pop
add
xchg
and
and
adc
jnp
xor
adc
and
adc
jmp
fs
sbb
xor
fwait
xor
mov
pop
jmp
iret
inc
cmp
push
xor
shrb
add
test
insb
or
testl
mov
sub
lcall
push
xor
adc
or
insl
dec
jge
aad
mov
push
or
or
dec
pop
add
movl
and
sahf
mov
stos
cmp
pusha
and
cltd
dec
sub
dec
cmp
es
imul
and
imul
add
pusha
pop
add
mov
popa
jo
test
rorb
sub
or
rorb
daa
mov
jg
in
sti
xorb
movb
xor
in
outsl
pop
cmpsl
lret
inc
outsl
add
jnp
mov
aad
popf
push
xor
int3
mov
pop
movsb
mov
dec
testl
jle
and
fwait
and
iret
add
or
addr16
mov
and
add
in
push
inc
fs
xor
sub
and
push
xchg
ret
jnp
add
daa
cmc
pop
aad
or
dec
push
ds
test
imul
or
jmp
dec
lods
and
push
arpl
cmp
popa
adc
movsb
and
fsubp
in
sbb
mov
cmp
add
mov
fs
ret
or
sbb
mov
pusha
popf
and
shll
jmp
arpl
jns
sbb
into
je
push
xchg
push
movsl
jp
je
xor
mov
sbb
xchg
ficomps
out
pop
fwait
int
xor
dec
pop
inc
pop
call
mov
inc
push
jo
clc
adc
xchg
insl
and
jo
ljmp
sub
pop
push
pop
pushf
aas
or
push
lea
cmp
sbb
enter
dec
mov
jg
pop
xchg
iret
test
or
xor
dec
loope
mov
rorb
push
xchg
push
pop
cmp
adc
int3
pop
jge
shlb
add
cmpsl
or
inc
or
pop
mov
testb
adc
in
add
sub
mov
add
push
js
jl
push
adc
dec
push
pusha
test
push
into
ja
testl
clc
mov
add
cmp
adc
lds
xlat
cmp
push
inc
outsl
sub
add
mov
xchg
sbb
cmpsl
push
xchg
and
or
xor
sub
pop
pop
mov
add
je
popf
call
lret
or
mov
nop
cmpsb
xor
movsb
lret
add
pop
sti
xchg
insb
xor
adc
jnp
xor
inc
push
sub
lock
adc
adc
or
jno
cmp
xchg
fadd
cmp
sub
nop
mull
push
pop
or
and
push
adc
pop
dec
pop
xlat
adc
nop
cmpsb
jb
adc
test
xchg
sub
cltd
nop
sbb
add
adc
and
stos
push
dec
pusha
adc
ds
pushf
jl
cwtl
fists
dec
or
adc
and
inc
xor
add
adc
sbb
repnz
pop
enter
mov
adc
inc
and
loope
mov
pop
push
jecxz
adc
push
lock
js
adc
das
fstps
adc
shrb
subb
jg
mov
cmp
or
in
sbb
loopne
push
and
xor
add
xorl
xchg
xor
and
mov
push
push
push
cs
jb
pop
add
sbb
fldl2t
mov
std
adc
jns
and
in
or
adc
rclb
add
add
jno
cmpsb
xor
mov
es
adc
loop
push
addr16
pop
aam
add
dec
inc
sbb
test
test
dec
andl
inc
and
push
push
pop
cwtl
or
push
loopnew
add
les
nop
sbb
cmp
in
int3
mov
dec
loopne
cmp
sbb
daa
sbb
inc
mov
repnz
mov
sbb
loop
lods
ja
aad
mov
pushf
inc
jl
nop
in
insb
and
leave
jmp
movsl
nop
inc
pop
ja
xchg
mov
inc
idivl
cltd
cwtl
rclb
pop
rorb
into
call
cmp
mov
aad
xor
pop
gs
lea
cmp
and
pop
je
adc
xchg
lret
xor
xor
push
sub
and
or
dec
dec
in
ds
cmp
imul
and
pop
push
push
adcl
aad
mov
or
push
lock
push
ret
add
insl
cltd
mov
jmp
outsb
jmp
aaa
or
jmp
jecxz
push
mov
mov
cld
into
inc
mov
sbb
cmp
jae
lock
cli
je
mov
pushf
jg
xchg
jb
scas
inc
xor
dec
aaa
add
pusha
sub
xor
xor
pusha
sbb
xchg
or
aad
adc
out
cmp
and
pop
loope
sbb
repz
xor
into
shll
les
inc
push
andb
insb
mov
mov
sub
push
mov
pop
add
and
data16
dec
xor
push
es
adc
adc
js
or
pusha
and
mov
je
pop
out
je
lods
iret
jb
push
pop
frstor
outsl
jo
in
add
add
add
in
inc
out
adc
mov
adc
in
aaa
loopne
lea
pop
stos
and
clc
icebp
decl
sub
sub
or
jge
fsubrs
iret
les
push
mov
push
jmp
or
mov
mov
mov
jg
shl
test
add
into
or
icebp
rclb
push
bound
mov
pop
dec
jne
insb
hlt
xor
repnz
cmpsl
push
addb
jns
movsb
push
stc
jl
sbbb
rolb
aam
jae
xchg
add
inc
mov
or
out
rcll
inc
fwait
mov
add
mov
mov
or
inc
or
or
pop
and
mov
jno
pop
lods
aam
aas
loop
or
inc
add
in
cmp
testl
lea
addb
movsl
mov
push
push
cmp
repnz
in
mov
mov
sbb
push
push
cmp
or
push
xor
test
mov
sar
in
les
mov
cmpsl
jno
sbb
shlb
cltd
call
push
mov
add
shlb
dec
fs
and
fildl
je
mov
mov
and
add
jg
scas
mov
pusha
sbb
push
test
cld
ret
pusha
cmp
adc
add
pop
add
mov
outsl
pusha
add
dec
and
shlb
mov
and
cmc
dec
sbb
xor
xor
dec
jns
test
dec
jae
pusha
or
xchg
mov
or
add
adc
filds
mov
mov
js
sbb
or
movl
push
push
test
addl
mov
stos
xor
mov
xchg
xlat
cwtl
test
jbe
jecxz
xlat
pushf
orb
pop
imul
add
mov
mov
xor
call
push
add
decb
pop
or
mov
or
shlb
lret
adc
hlt
add
sub
inc
hlt
aad
out
jg
xor
jae
or
out
add
cmp
push
mov
lock
xor
cld
mov
and
in
adc
sub
or
push
inc
pusha
pop
cmp
push
xchg
and
push
popa
roll
jp
loope
adc
aas
js
mov
iret
add
mov
orl
ja
sub
lds
mov
jo
sbb
ficoms
sahf
ljmp
jo
ljmp
movb
cmp
outsl
lods
sub
pop
clc
mov
aad
aad
adc
inc
sub
adcb
dec
xor
into
sbb
adc
cmpb
add
sbb
adcl
add
hlt
mov
add
ljmp
push
adc
loope
or
add
in
out
das
mov
jmp
add
bound
addr16
je
push
mov
xor
femms
aad
pusha
lock
sub
push
add
mov
dec
push
imul
add
inc
repnz
ds
xor
jmp
inc
inc
add
movsl
adc
or
andl
pop
dec
stc
sub
mov
jne
mov
faddp
dec
xchg
and
cmpsl
inc
jmp
dec
push
imul
adc
add
mov
rcr
sbb
and
sub
adc
pop
hlt
xor
cmp
je
loopne
inc
mov
into
push
aas
push
push
test
insl
cs
std
inc
nop
jmp
iret
fsubrs
push
cmp
test
push
inc
inc
mov
add
hlt
jmp
mov
stc
cmp
aam
paddq
mov
adc
fcoml
lods
jno
shrl
mov
pushf
dec
sahf
add
and
and
pop
xchg
stos
lods
add
and
push
jmp
mov
in
fdivs
jne
loop
clc
adcl
js
sete
sub
aam
push
push
movsl
mov
sbb
ja
lea
mov
xchg
int3
and
sub
insl
and
pushf
adc
and
sub
and
and
ret
mov
jne
mov
test
ret
mov
stos
jmp
xor
add
push
add
les
push
cmp
xor
add
push
jo
lods
stos
in
cmc
test
or
cmc
mov
xchg
inc
loop
outsl
fsubl
sub
js
inc
add
adc
adc
push
sbb
xor
add
enter
iret
ficomps
xor
fwait
mov
and
push
mov
cmp
or
dec
inc
shl
mov
push
dec
repz
clc
cmp
aas
mov
adc
mov
aam
outsl
adc
pop
or
push
rorl
adc
mov
mov
movsl
pop
std
loopne
lds
shrb
movsl
fdivr
mov
cmp
pusha
insb
sub
sbb
or
lock
lock
or
push
pop
jle
jl
sub
fmuls
or
fcomps
and
xchg
or
xor
insb
pop
or
pop
leave
popa
dec
je
sub
lahf
mov
pop
sbb
fidivrl
test
or
jo
or
push
xor
push
jno
push
or
fwait
movsb
inc
adc
inc
push
mov
sbb
lret
stos
lcall
jle,pt
sbb
or
or
or
dec
leave
push
jno
jmp
mov
hlt
mov
cmp
dec
aaa
push
and
add
cmp
sbb
xchg
adc
adc
stos
call
or
or
cwtl
sbb
or
enter
xor
test
xchg
mov
jo
lods
insb
cmpsb
xor
mov
stc
mov
push
push
icebp
fsubl
and
sbb
lahf
mov
pop
je
push
leave
xorl
lea
mov
enter
adc
sub
imul
pop
push
mov
jno
jns
cmp
pop
inc
outsl
or
test
sbb
jbe
add
sub
inc
testl
dec
divb
out
mov
pop
fmuls
ret
mov
push
sbb
lret
loop
xchg
loope
sub
aas
fldl
ljmp
cmp
and
xchg
push
je
mov
sbb
add
fsubrl
movzwl
xor
ret
xor
pop
jne
or
ljmp
and
mov
ret
cli
pop
dec
mov
dec
loope
xchg
mov
test
je,pn
push
mov
leave
add
sti
das
xor
mov
ret
pop
jb
push
pop
jbe
adc
or
xor
push
dec
or
add
mov
jmp
inc
hlt
cmp
jne
int
test
inc
out
out
or
cmp
mov
sub
push
push
loop
mov
sub
loope
pop
jnp
stc
aaa
testl
jle
mov
cmpb
pop
daa
cli
sti
adc
xchg
sub
sbb
xchg
lds
mov
dec
lea
adc
add
sub
or
dec
cmp
rorl
push
push
imul
ljmp
and
out
pushw
push
inc
sub
jge
mov
cmp
sub
mov
sbb
xor
pushl
mov
in
mov
sub
incb
jg
mov
sbb
sbb
test
bsr
jae
nop
or
fsubrs
insl
out
out
fwait
lods
inc
add
and
movsb
cmp
add
pop
inc
test
sbb
outsl
int
jb
es
mov
mov
mov
sar
bound
dec
lea
pusha
cmpb
push
bts
lahf
add
mov
cmp
push
rclb
adc
mov
sub
jae
loop
push
shr
adc
mov
xor
lret
test
add
push
mov
xchg
insb
iret
mov
orl
cmp
cmp
jge
jecxz
add
cmp
add
lahf
inc
addb
xchg
mov
push
movl
outsl
mov
jno
pop
xlat
mov
cld
sub
push
es
sub
aaa
adc
inc
fcmovnb
adc
sahf
jl
mov
push
jg
push
add
push
or
sub
repz
push
ret
enter
jne
in
bound
pop
cmc
mov
cld
sub
loope
xchg
sub
jecxz
dec
add
pop
call
stos
add
pop
adc
push
hlt
sub
push
test
xor
push
and
and
cmp
or
stc
inc
fisttpl
jo
sbb
xchg
dec
lods
jo,pn
ret
shl
repnz
fstpt
jns
push
test
fwait
xor
repz
xchg
sbb
push
add
jg
pop
dec
repnz
je
sub
nop
adc
mov
sbb
inc
repnz
adc
dec
add
out
and
push
push
lods
push
sbb
roll
push
stc
push
out
push
sbb
push
addr16
sub
inc
insl
push
sbb
inc
jle
pop
mov
ret
or
push
jle
add
add
xorl
jp
rcrl
or
adc
push
outsb
inc
repnz
xchg
scas
sbb
or
add
pop
into
adc
movb
push
es
pop
inc
cmp
into
sbb
jecxz
inc
mov
cmp
fstps
push
test
dec
hlt
pop
inc
js
testb
and
and
adc
cmp
jle
lock
hlt
push
orb
lock
push
sub
or
arpl
push
int3
xor
mov
or
dec
popf
adc
sbb
je
add
push
add
or
lea
add
sahf
cmpsl
push
lea
shr
pop
xchg
rolb
or
orl
scas
push
push
std
cmp
push
outsb
push
add
and
or
xchg
mov
push
add
leave
imul
js
jo
lea
lea
jnp
or
add
fcomps
pop
pop
and
or
push
sbb
ljmp
or
addr16
or
fadds
mov
mov
orb
incb
cltd
seto
jbe
or
adc
xchg
jne
addb
jg
addl
sbb
fidivrs
movsl
push
lcall
rolb
mov
mov
push
scas
loop
jp
sbb
adc
stos
mov
movsb
pop
pop
or
pop
sbb
cmpsb
push
mov
push
pop
push
add
or
add
sub
mov
adc
sbb
int3
test
lea
or
cmp
and
push
cmp
jns
add
outsb
push
sahf
inc
sbb
test
mov
xchg
mov
mov
ljmp
push
push
rorb
sbb
push
inc
loope
inc
lds
jmp
xchg
adc
add
shll
fstl
stos
sub
sub
add
rclb
popf
push
iret
lods
shlb
fdivl
pop
sub
fiaddl
dec
xorl
dec
push
imul
inc
mov
sbb
addb
xor
or
je
addr16
xchg
sub
xor
les
inc
add
add
jno
popa
xlat
mov
xor
sub
adc
add
xlat
add
push
js
push
sub
jmp
ss
sub
lods
aas
scas
bound
jns
cmp
js
cmp
push
and
inc
sbb
push
dec
xor
imul
std
inc
test
dec
add
scas
push
inc
sub
push
add
sub
pop
sub
mov
sbb
outsb
loopne
dec
add
push
cmc
adc
or
xor
or
and
xchg
call
mov
and
xor
pop
aam
xor
jecxz,pn
mov
cmp
sub
inc
mov
sub
adc
aad
pop
sub
ficomps
test
pop
add
int
jecxz
xchg
adc
fdivrl
loope
enter
push
ds
add
mov
xchg
loopne
test
dec
push
push
inc
lods
adc
pusha
pop
lods
inc
push
xor
sti
je
mov
adc
popa
scas
jmp
jmp
mov
xchg
into
add
jno
fwait
sbb
call
cmp
cmp
pop
adc
add
movl
push
std
jge
add
push
push
js
lret
jnp
stos
fldenv
sub
or
sub
add
insb
xor
add
fistpl
sbb
jno
dec
int3
mov
adc
shll
testb
sub
scas
dec
push
add
xor
jne
cmc
aam
cld
cmp
mov
lds
cmc
xor
mov
cmc
mov
sbb
sub
je
loopne
inc
adc
add
fs
pop
nop
lods
push
push
faddl
xlat
dec
and
cmp
push
arpl
push
aad
mov
add
lahf
sahf
sub
es
sub
int
cmp
stos
cmp
and
int3
leave
xor
int3
push
imul
sbb
and
fistpll
dec
insl
or
jp
mov
xor
add
jecxz
mov
mov
pop
jle
pop
jne
ret
mov
pop
dec
or
pop
jns
add
loop
mov
ds
add
lods
imul
lahf
or
lret
sub
add
push
leave
push
lret
xor
fwait
test
sahf
or
loope
sub
or
jne
aaa
and
aaa
jo
add
mov
sbb
add
and
jae
cmp
and
and
jnp
enter
pop
sub
mov
mov
adc
sub
test
aaa
call
stc
and
mov
js
sbb
test
stos
jg
mov
inc
insb
and
bound
pop
sbb
inc
nop
push
dec
mov
jb
dec
sbb
push
adc
inc
imul
add
push
sub
call
mov
mov
push
cltd
dec
add
inc
xor
add
inc
leave
and
add
cmp
test
sub
or
push
push
jle
adc
cmp
push
insl
rcr
test
sbbl
add
leave
add
or
adc
push
dec
enter
pop
and
lock
dec
mov
xchg
dec
pop
push
mov
add
jbe
sbb
push
popa
les
add
icebp
cmc
shrb
inc
in
cmc
movsl
cmpsb
stos
inc
inc
inc
add
add
xor
stos
in
fsubrl
dec
mov
xor
rcll
jl
lock
mov
inc
xchg
lea
lcall
lcall
andb
adc
movsb
insl
sti
roll
punpckhbw
push
sbb
movb
mov
jp
xchg
inc
shll
test
lret
insb
ss
add
cmc
fsubs
fldenv
inc
cmc
and
scas
add
mov
mov
add
mov
mov
js
xor
push
andb
or
pop
and
mov
dec
jl
inc
and
ret
mov
xor
mov
ret
rol
or
int
or
outsb
xor
jno
inc
dec
push
xor
push
mov
inc
mov
movsl
nop
push
rclb
add
inc
push
add
inc
add
sar
sbb
sar
xor
stos
rol
jno
inc
xchg
pop
adc
xchg
cmp
dec
add
sarb
je
and
cmp
mov
adc
mov
sub
xchg
mov
sahf
lahf
or
or
adc
push
and
and
mov
ljmp
or
sbb
test
je
lea
xchg
test
add
rcr
or
sbb
out
cmc
inc
adc
pop
cmp
jb
push
call
js
nop
je
push
decb
imul
sub
ljmp
sti
mov
jo
cmpsb
inc
pop
add
jl
mov
das
mov
mov
mov
sub
imul
add
jnp
or
in
mov
add
push
inc
mov
dec
clc
sub
or
jge
mov
sub
or
push
push
fucomip
scas
cmp
or
fists
and
loopne
ret
push
bound
call
imull
mov
lea
add
pop
push
push
push
push
movl
push
push
push
push
add
test
cmp
add
add
push
movb
mov
rol
xor
mov
fsubr
lds
popl
insb
loop
retw
mov
or
js,pn
jg
xor
mov
sbb
hlt
sub
lcall
push
sub
imul
addl
rcr
and
stc
or
nop
push
cld
scas
xchg
popa
add
dec
jno
jmp
sbb
mov
in
mov
inc
pop
push
pop
jle
inc
push
push
nop
data16
stc
lds
jg
mov
lea
jmp
inc
or
dec
outsl
lcall
inc
push
rorl
ret
rolb
jl
sbb
pop
inc
add
fsub
inc
add
push
push
je
scas
jl
andl
add
push
ret
xchg
or
adc
mov
push
push
mov
enter
or
xchg
inc
cmpsl
mov
loop
push
mov
in
jg
or
out
movl
cmpb
sbb
loope
mov
cmp
push
out
or
add
jnp
js
js
pushf
movzwl
sbb
ret
and
arpl
ret
mov
addr16
push
push
and
jge
push
ds
sbb
push
es
push
adcb
cli
inc
ret
push
cmc
or
mov
sbb
shl
decb
sub
adc
pusha
js
sbb
dec
pop
das
js
xor
subb
sbb
popf
cmp
add
or
clc
cmp
mov
mov
cmp
je
push
sahf
mov
add
pop
or
les
mov
inc
push
xor
sbb
mov
mov
jp
cmp
push
push
inc
mov
scas
xlat
jge
add
sbb
sub
fdivrs
push
sbb
pop
enter
ds
dec
cmpl
addb
mov
xor
negb
cmp
add
loopne
leave
enter
test
fstpl
dec
pop
and
fisubs
jmp
xor
jmp
or
in
or
sub
xor
xchg
add
and
fimull
mov
pop
add
rclb
ret
jl
fisttps
mull
ja
pop
leave
call
mov
lods
sub
mov
fisubs
adc
fsub
lock
push
or
clc
or
sub
jns
lea
push
mov
xor
hlt
es
dec
dec
sub
sub
add
push
jl
and
daa
jle
repnz
pop
mov
mov
inc
pop
lret
or
pop
ret
pushf
xchg
push
daa
lahf
sbb
mov
dec
shll
add
or
adc
pop
mov
push
jmp
scas
or
mov
clc
xor
push
xorb
add
inc
cld
adc
andb
xor
jbe
cmp
ret
aam
push
push
mov
pusha
mov
js
mov
lock
test
sbb
inc
push
jo
add
sbb
dec
shrl
fisttpl
fwait
push
dec
push
outsl
xchg
pop
pop
fnstenv
pop
mov
ja
jnp
cmp
jae
mov
ret
loopne
push
pop
lahf
test
fstpl
roll
fcompl
inc
xchg
or
rcrl
jl
adcb
mov
or
and
dec
add
jmp
cmp
mov
sub
or
sbb
dec
movsl
cmp
and
movl
sbb
mov
jge
and
movb
imul
or
cld
dec
pusha
mov
sub
cld
or
aas
push
xor
jns
lea
jne
push
push
and
mov
push
push
and
add
add
mov
adc
xchg
paddq
jb
push
aaa
push
fsubrs
jae
movsb
cli
mov
pop
sahf
call
mov
clc
and
xlat
testl
imul
mov
out
add
jb
ja
shrb
dec
faddl
cmp
jb
add
dec
add
andb
push
mov
mov
int3
xchg
repnz
hlt
outsb
in
imul
mov
ja
jg
or
adc
movsb
roll
or
stc
and
popf
jo
or
jle
add
pop
jnp
out
push
add
or
or
xor
mov
daa
aas
add
nop
pop
clc
pop
ja
jl
insb
push
and
ret
or
loopne
mov
dec
in
fsubrp
mov
sub
cmp
lahf
movl
jae
push
sbb
mulb
insl
or
mov
pop
stos
lds
push
outsb
xor
cs
fisttpl
or
adc
je
je
outsl
or
jne
mov
inc
je
adc
test
pop
lea
dec
cs
in
aaa
inc
adc
decl
cmp
or
fwait
int
sti
push
test
jmp
es
outsl
xchg
jns
test
and
add
inc
cmp
jbe
lea
lea
mov
fidivrs
add
push
inc
and
clc
pop
loop
xor
mov
pop
mov
mov
pop
fstl
cmpsl
add
sbb
cvttps2pi
xorl
dec
lcall
divl
inc
sub
push
mov
mov
or
sub
adc
and
lods
xor
xchg
shlb
fdivrs
ljmp
jne
or
outsb
mov
sbb
mov
jl
jb
or
adc
sub
fildll
adc
movsb
cmp
enter
ja
inc
push
cmp
fisubl
dec
aas
cmp
jne
mov
cld
push
push
movsb
sbb
sub
mov
mov
xchg
loope
enter
cli
and
add
fld
or
mov
cli
inc
cmp
jb
cmp
ja
pushw
shlb
xor
outsl
fdivrp
jmp
cmp
jb
cmp
ja
and
ljmp
cmp
fwait
xchg
fldcw
rolb
cmp
cmp
push
cmp
add
fdivs
sbb
mov
add
mov
outsl
pop
test
cs
sub
add
jmp
adc
sbb
cwtl
aas
xor
and
lcall
leave
add
mov
je
add
test
stos
jne
ret
push
test
mov
and
mov
fildll
mov
jmp
push
pusha
aas
adc
ret
cmp
jne
adc
dec
test
loopne
call
mov
or
insb
and
xor
loop
jmp
xchg
xchg
lret
cmp
orl
dec
adc
add
adc
and
test
je
sahf
fists
je,pn
test
jne
into
sub
or
add
jmp
cmp
xchg
orl
mov
add
inc
ss
notb
or
mov
lret
mov
jp
movb
jnp
pop
mov
inc
sbb
sbb
inc
dec
outsb
jle
add
and
add
int
ret
int3
mov
adc
in
call
add
jbe
fidivrs
in
pop
ja
ret
fimull
jg
aam
call
inc
repnz
cltd
pop
push
aad
loope
sub
pop
imul
cld
inc
mov
adc
aam
ret
ret
and
mov
rcrb
lods
push
jl
and
jg
cmc
sahf
add
cmpb
sbb
inc
pusha
test
xchg
shrl
repz
sti
ljmp
mov
pop
add
repz
sbbb
sub
je
scas
aam
sti
sti
shrb
push
das
mov
or
mov
mov
imul
mov
jge
mov
inc
and
fcmovbe
pop
cmp
inc
fs
subb
dec
out
add
jg
test
fcomp
inc
fiaddl
push
ret
sub
and
jo
leave
or
cmp
inc
movsl
cmp
aam
test
add
vandnps
mov
sub
or
adc
cmc
ljmp
and
adc
je
cmp
je
lret
or
jecxz
add
push
lock
es
lcall
or
fcompl
cmp
pop
jmp
fadds
dec
push
xor
decl
or
mov
cmp
or
mov
add
sbb
je
add
cmp
je
xchg
add
out
les
inc
addb
add
ja
hlt
mov
into
mov
push
mov
mov
mov
xchg
jmp
xchg
test
cmp
je
push
rcll
sahf
jo
stc
roll
push
xchg
out
out
bound
test
push
out
pop
in
xchg
mov
inc
push
xor
xor
mov
mov
or
mov
je
cmp
jecxz
sbb
pusha
jb
mov
push
js
loop
loopne
mov
aas
sbb
jl
xor
pop
clc
pushf
cmp
je
lea
mov
popa
mov
mov
dec
mov
pusha
lock
mov
pop
movsl
adc
cltd
clc
push
push
lahf
or
stos
mov
add
sbb
or
arpl
adc
mov
lea
inc
testl
nop
mov
adc
adc
les
test
push
or
sub
and
and
out
sub
inc
and
cmp
pop
lahf
addl
addb
incl
add
push
xor
cmpb
xchg
inc
inc
es
loope
and
mov
and
pop
enter
andl
cmp
or
out
push
jg
push
mov
adc
xor
jle
js
movsb
add
sub
and
mov
mov
int
and
testl
mov
mov
push
and
ds
sbb
sbb
cmpsl
and
cmpsb
in
inc
inc
dec
cld
jo
movsb
shrl
adc
sti
aam
sahf
mov
mov
xor
mov
mov
adc
pop
push
fists
cmpsb
pop
cmp
lret
mov
cmp
test
and
xor
movb
jne
test
idivl
lcall
roll
mov
push
mov
inc
add
or
iretw
dec
xor
cmpsb
iret
cmpl
mov
mov
push
inc
push
cmp
add
sbb
stos
pop
mov
or
add
xor
addb
add
push
xor
mov
mov
fidivl
cmp
inc
mov
push
inc
inc
inc
jne
push
mov
and
movb
or
dec
jne
outsl
insb
mov
and
xlat
pop
inc
mov
mov
pop
jbe
roll
inc
xor
pop
ret
xor
push
pop
fcomps
add
push
test
mov
mov
cmp
and
jle
push
popa
jp
and
das
dec
testl
ja
insb
push
arpl
and
xchg
push
lea
movsl
xchg
jb
mov
mov
mov
jmp
lock
cmp
je
mov
jle
or
jne
pusha
sbb
adc
gs
cmp
fwait
pop
iret
adcl
inc
inc
les
clts
mov
jl
lock
mov
jmp
test
jne
les
xchg
adcl
scas
call
lock
add
xchg
fldl
cltd
mov
out
stos
out
mov
add
jae
cmp
or
mov
loopne
inc
lret
inc
mov
int
mov
adc
mov
pop
cmp
rorb
fcomp
incl
xchg
and
in
imul
inc
insb
jne
mov
cli
and
dec
inc
clc
add
cmp
test
or
cmp
xchg
mov
jmp
add
mov
jne
shr
sbb
shrb
pop
not
adc
add
out
sub
loope
mov
lret
and
mov
lods
movl
xor
cmp
xor
decl
mov
add
gs
sbb
mov
je
xchg
sub
and
testb
fucom
pusha
cmp
mov
dec
cmp
mov
fxch
dec
dec
cmp
mov
loop
pushf
push
loop
push
loopne
sbb
or
mov
pusha
mov
jl
mov
fisubrl
xor
xor
xchg
lret
in
cmp
cmp
dec
call
sub
adc
les
arpl
fcoms
cmp
adc
add
addr16
imul
lock
pop
add
or
or
sbb
add
inc
mov
push
insl
popa
outsb
or
and
dec
imul
cmp
mov
shrl
loop
mov
pop
push
push
data16
cmpl
push
fs
mov
and
fimuls
push
add
xchg
inc
ret
sub
lahf
les
add
add
or
push
and
aad
nop
or
imul
dec
sub
jbe
dec
dec
mov
adc
lret
pop
or
ficompl
in
pop
inc
sbb
pop
push
push
add
sub
mov
jo
or
add
lock
add
data16
push
sub
jb
add
push
adc
movsl
in
movsb
cmp
scas
call
sbb
or
fidivrl
pop
cmp
push
push
or
mov
mov
xor
adc
push
ds
sbb
imul
or
icebp
rclb
ljmp
add
mov
cmpb
push
je
sbb
adcb
mov
iret
jle,pn
and
ret
pushf
mov
data16
roll
or
inc
fwait
inc
jne
push
nop
adc
sub
xor
adc
mov
mov
mov
lds
xchg
inc
fisttpl
imul
pop
xchg
cmp
aas
sub
jle
pop
xor
or
into
stos
or
pop
pushf
push
mov
test
loopne
mov
pop
sti
jo
dec
mov
cmp
cld
or
les
sbb
push
dec
popa
cld
xchg
ds
lock
in
sub
js
add
inc
fldt
sub
sahf
xor
mov
rcll
adc
dec
push
aas
sub
into
fimull
nop
sarl
add
cmp
sub
cmp
shl
or
cmp
pop
xor
mov
cmp
leave
enter
ret
loopne
mov
mov
in
inc
lret
xchg
aad
add
mov
jno
cltd
insb
into
xor
loopne
loope
hlt
adc
js
pop
loopne
ret
loopne
sbb
aam
push
add
lcall
cmp
and
adc
bound
xor
add
dec
testl
sbb
push
pusha
sbb
ret
test
mov
xchg
iret
pop
dec
push
test
rclb
loopne
out
jecxz
inc
sbb
mov
pop
fdivrl
shll
mov
adc
mov
jl
adc
pop
xor
jo
xchg
cli
mov
push
cmp
push
sahf
scas
addl
or
pop
sbb
or
rcl
push
inc
lcall
cmp
hlt
cmp
es
hlt
pop
mov
adc
push
fsubrl
and
aad
dec
cmp
ret
xor
xor
add
and
movsl
mov
bound
push
sub
int
xchg
movl
add
add
mov
mov
dec
sbb
jbe
cmp
insb
lcall
lcall
add
lret
repz
mov
inc
in
lahf
es
dec
adc
int3
push
mov
mov
inc
pop
add
inc
andl
mov
lret
rorl
lods
pop
push
into
test
add
pop
and
stc
mov
mov
xchg
add
repnz
or
shl
mov
sub
data16
and
popa
pop
mov
xor
mov
lods
int
pop
outsl
dec
lret
icebp
xor
xor
xor
cmp
mov
jne
dec
or
test
cwtl
sub
or
inc
inc
jnp
or
int3
sbb
lea
mov
hlt
aam
add
clc
mov
hlt
mov
jle
mov
lea
lods
pop
mov
adc
jg
inc
js
push
inc
scas
mov
pop
dec
imul
jmp
mov
mov
and
jb
rclb
shlb
push
push
ficoml
test
add
out
sbb
clc
rclb
push
and
pusha
adc
mov
or
js
add
inc
mov
push
nop
icebp
xor
and
rolb
push
lret
xor
test
adc
cmpsl
mov
enter
nop
sub
and
enter
andb
xchg
dec
xlat
inc
in
or
ret
and
push
mov
xor
cwtl
sbb
adc
test
sub
popf
mov
push
xor
fcoms
cld
fwait
mov
inc
lock
push
pop
xor
test
add
dec
mov
xor
mov
jne
rcrl
ljmp
xchg
inc
outsb
out
add
push
rolb
xor
pop
cmp
xor
push
aam
je
das
push
loopne
jl
cmp
cld
mov
shlb
pop
add
je
add
xchg
cmp
js
lret
jb
add
sub
mov
aad
jbe
jp
adc
xchg
sbb
mov
ret
xchg
cmp
add
dec
xchg
aas
cs
shlb
inc
jae
inc
pop
inc
dec
pop
xor
icebp
inc
sbb
xchg
xor
or
pusha
dec
scas
push
cmp
add
or
rolb
fcomip
push
sbb
cld
jp
jb
inc
push
sub
cmp
push
xor
inc
test
mov
dec
sahf
pop
lahf
add
xor
mov
cmp
jo
xor
sbbb
rorl
mov
push
popa
mov
and
adc
iret
mov
mov
fbstp
sbb
sahf
sbb
aaa
xchg
sub
adc
enter
adc
ja
dec
xchg
popf
and
or
jge
mov
add
fs
aam
push
addr16
dec
or
mov
fnstcw
mov
dec
lods
mov
sete
sbb
jl
cmp
mov
mov
sub
xor
push
mov
cmc
or
ret
ficoms
dec
stos
mov
lahf
pop
push
sub
lds
incl
mov
mov
pop
leave
jae
mov
push
dec
xor
pop
sub
or
pop
jmp
pop
shlb
mov
xchg
push
ret
cwtl
xchg
push
pusha
mov
out
fiaddl
adc
push
stos
jnp
push
and
mov
mov
cmpsb
mov
js
pop
icebp
push
outsb
cmp
int3
lea
enter
push
popl
es
cmpb
mov
dec
in
mov
negl
jnp
inc
and
sbb
xor
scas
stos
and
mov
cmp
out
lcall
popf
out
xor
push
into
push
or
push
dec
jecxz
or
jbe
fstpl
xchg
push
mov
mov
pop
add
adc
cltd
aaa
stc
dec
xchg
xor
jo
loopne
jg
adc
lods
test
popf
lahf
xor
sub
std
test
inc
and
in
and
adc
inc
push
pop
movsl
and
pop
sbb
sbb
xor
pop
pop
add
add
clc
add
sbb
adc
or
adc
add
push
mov
lcall
pop
loopne
xchg
notb
mov
dec
dec
xchg
inc
dec
mov
lods
inc
cmp
out
lret
and
push
cmpsl
and
push
jge
fcomps
in
mov
mov
pop
and
lods
pusha
adc
sbb
ljmp
lcall
dec
xchg
mov
sbb
or
sub
mov
negb
sbb
pop
xchg
adc
xor
cmp
cmp
pop
mov
and
or
loop
ret
cld
pop
test
add
cld
sub
in
pop
rcll
pop
push
push
sbb
mov
das
xor
mov
sbb
adc
and
or
ja
in
addr16
cmpl
push
push
push
adc
add
outsl
push
jno
xchg
mov
add
adcb
add
mov
add
mov
jmp
pop
inc
inc
or
pop
mov
jg
adc
push
sbb
mov
mov
pop
mov
fucomi
in
push
dec
jo
xor
jg
inc
pop
faddl
ja
in
in
xor
inc
insb
movsb
mov
rclb
sete
fchs
lods
in
jae
push
loope
dec
xor
inc
mov
in
or
xchg
sub
jge
cli
add
faddl
pop
xchg
push
pop
xor
daa
pop
arpl
mov
push
xor
mov
es
sbb
aaa
push
sbbb
daa
xchg
imul
cmc
and
daa
mov
stos
out
sub
outsb
das
movsb
xchg
sbb
push
out
sub
fs
dec
and
cltd
lods
mov
out
sub
add
jmp
out
sub
xchg
dec
xchg
btsl
xchg
outsb
jmp
jno
jmp
adc
jo
pop
test
or
js
or
test
xor
and
pushf
push
push
and
adc
aas
mov
ja
enter
out
dec
and
dec
push
add
in
movsb
pop
pop
outsl
sub
dec
fmull
dec
mov
jne
add
sub
lods
mov
sbb
xor
icebp
mov
push
unpckhps
mov
sub
add
fnstenv
daa
iret
sbb
xor
xor
add
add
add
add
lock
mov
lods
mov
outsb
sub
pop
sarb
lock
js
fdivl
cmp
mov
jl
inc
dec
mov
sbb
push
jns
in
or
xor
or
dec
cmp
and
dec
mov
and
sbb
ss
xor
adc
add
pop
adc
shll
adc
inc
fs
push
add
xchg
xchg
sbb
adc
cld
push
loop
es
sbb
mov
mov
mov
rclb
adcb
js
jmp
sub
loope
mov
dec
cmpl
rcr
sub
cmpl
xor
or
xlat
repnz
cmp
into
inc
mov
inc
adc
push
movsl
dec
and
sbb
xor
xor
sbb
fwait
inc
nop
inc
mov
nop
insl
cmp
xor
sub
or
movsb
and
into
inc
movsb
jo
mov
push
adc
mov
daa
popa
leave
es
enter
mov
inc
in
rcrb
jmp
enter
mov
add
or
push
lods
xor
enter
inc
or
and
dec
les
cmpb
imul
sbb
push
cs
loopne
cmpsb
mov
inc
pop
adc
clc
cmp
cmp
cmp
mov
jb
cld
les
mov
inc
cmp
dec
sarb
sbb
enter
cwtl
jb
add
inc
int
popl
out
lret
pop
add
and
add
cwtl
dec
add
cmp
inc
and
push
adc
xor
mov
gs
sbb
or
lea
xchg
add
call
and
and
xorl
lock
mov
repnz
jl
add
out
push
mov
pop
jmp
pop
dec
mov
addl
push
sub
jnp
mov
push
sbb
cmpsb
and
rorb
mov
cltd
dec
sbb
inc
and
add
insb
lahf
sub
push
or
mov
sub
cld
xor
fdivrs
xor
pop
shl
sbb
sub
js
inc
out
les
sbb
jae
dec
add
mov
or
add
or
sbb
ret
ss
sub
push
push
fists
subl
push
xchg
push
pop
and
pop
dec
or
ljmp
push
ret
or
or
movsb
adc
jecxz
pop
pop
je
push
lret
adc
mov
shll
xchg
or
dec
or
fdivr
test
jl
mov
ror
aaa
loope
int
or
fsubs
sub
push
mov
pop
adc
mov
pop
push
int
pop
in
inc
in
and
out
push
leave
repz
adc
xor
xchg
cmp
leave
xor
cmp
inc
leave
xor
inc
xchg
dec
and
js
dec
pop
push
dec
imul
push
je
sbb
xchg
in
jle
lods
push
jns
add
xchg
sub
adc
sub
pop
mov
or
cltd
cmpl
push
adc
mov
add
mov
pop
or
sub
cmp
sahf
pop
or
adc
add
mov
inc
and
pop
mov
push
cltd
shll
add
dec
add
or
push
clc
push
sub
fldcw
push
jl
repnz
out
pop
push
xchg
mov
daa
or
inc
cmpsl
lret
jno
sub
dec
dec
or
adc
xchg
or
and
into
or
add
adc
bound
and
es
xchg
or
push
add
push
cwtl
xchg
sbb
jb
pop
pop
mov
stos
popa
sub
cmp
mov
out
hlt
outsb
dec
pop
cmp
leave
inc
js
jl
xchg
pop
and
add
lods
mov
lods
xlat
ror
fmuls
sub
cmp
xchg
cli
ret
add
mov
push
mov
mov
sbb
jnp
jbe
outsb
setae
xor
and
add
jo
sub
je
hlt
sbb
sahf
or
push
lea
loopne
xorb
cld
cmpl
inc
out
out
dec
pop
adc
xor
rcr
inc
mov
jnp
je
mov
fcmovnu
jbe
jg
das
lea
mov
shrb
dec
call
leave
push
mov
or
jo
or
jge
add
je
decb
pusha
and
call
pop
inc
and
sbb
and
and
call
shr
or
in
andb
cmp
inc
mov
adc
out
cltd
ret
sbb
push
dec
dec
pop
leave
clc
and
ds
in
test
je
and
jecxz
out
jns
pop
sub
in
sbb
popa
push
xor
je
xor
add
pop
enter
sub
mov
lret
add
arpl
push
lock
rclb
mov
push
xchg
mov
add
add
sbb
add
mov
push
test
lret
xor
adc
ljmp
pop
and
outsl
and
in
rclb
or
lods
xchg
mov
movsl
add
mov
loope
movl
push
mov
imul
mov
cmpsl
or
add
cwtl
sbb
jl
sub
sbb
adc
or
aas
jb
and
pop
dec
xchg
push
push
mov
fmul
test
adc
and
add
mov
jp
jnp
sub
mov
and
pop
cmp
aas
cmp
pop
inc
jae
enter
orb
nop
cs
push
gs
sbb
lea
push
adc
mov
push
shrb
xchg
std
nop
adc
mov
cmpsb
shr
adc
test
movsb
jl
pusha
pop
pop
nop
mov
pop
add
pusha
sbb
adc
adc
mov
sub
lds
out
sbb
xchg
insb
mov
xchg
or
cmp
add
cmp
pusha
mov
mov
inc
jecxz
sahf
cmpl
aad
arpl
push
sub
std
ss
es
ret
mov
sbb
cmp
incl
xchg
xor
mov
pop
pop
mov
lods
pop
iret
aas
dec
add
mov
pushf
or
movb
pop
aam
add
xor
cmp
adc
mov
push
adcl
and
std
inc
xchg
or
or
push
add
fcmovnbe
or
xchg
pop
sbb
inc
lret
mov
dec
or
adc
mov
icebp
add
push
push
cmpsl
or
sahf
push
jge
cmp
loop
add
movsb
xchg
lcall
cmp
add
jmp
daa
mov
push
mov
sbb
insl
add
xchg
je
pop
out
pop
add
sub
je
mov
movl
inc
sub
andps
xor
xlat
les
fdivrl
cmpb
adc
repnz
enter
ret
lock
adc
push
cltd
sub
inc
cmp
push
mov
cmp
push
and
fildl
adc
enter
dec
pop
aas
icebp
or
mov
xchg
mov
dec
sub
push
stc
pushl
xchg
xor
xchg
pusha
push
lret
or
or
mov
mov
or
mov
data16
xchg
or
les
imul
pop
mov
or
push
mov
mov
test
rclb
out
lods
cmp
dec
mov
mov
out
mov
add
shll
jbe
and
sbb
popa
mov
and
mov
lret
push
stc
jl
inc
mov
outsl
mov
cmp
lret
or
xor
mov
pop
or
add
pop
aas
or
dec
or
push
xchg
cmp
pop
clc
push
push
push
sub
dec
sbb
enter
nop
loope
enter
or
pop
xor
out
xchg
fcompl
lea
sub
dec
push
push
adc
sub
les
mov
sub
xor
add
rcll
ljmp
sub
xor
subb
cli
fimuls
mov
inc
test
ds
mov
lcall
hlt
adc
or
rorb
pop
clc
sub
jb
jp
cmp
push
cmpsl
pop
dec
xchg
flds
adc
mov
and
cmp
inc
pop
cmp
in
lods
leave
push
ss
cs
push
stos
jne
push
fs
les
lock
mov
or
push
mov
or
push
shl
inc
ljmp
insb
add
adc
push
inc
push
inc
nop
cmp
dec
pop
inc
jb
or
inc
test
nop
pop
and
insl
cmp
lods
loopne
mov
xchg
push
jl
pop
mov
jae
push
insl
out
jbe
sbb
push
push
stc
cs
push
fadds
icebp
sbb
ret
pop
adc
inc
jne
push
jge
movsb
out
inc
cmc
sbb
xchg
mov
sbb
enter
scas
xchg
sbb
jae
xchg
out
xor
sub
fdivrs
add
sar
push
es
xchg
aaa
xchg
pop
outsb
ljmp
mov
fists
push
dec
lahf
add
orl
fwait
stos
xchg
inc
outsb
cmp
xchg
inc
sub
inc
add
loopne
push
cmp
sbb
add
or
enter
ret
cld
flds
iret
mov
insl
fstps
and
adc
roll
adc
sbb
mov
adc
inc
or
sub
and
and
sub
add
fnstsw
pushf
jo
jbe
mov
xchg
dec
repz
mov
addb
scas
mov
lods
jno
rolb
lds
imul
lds
and
add
mov
cmpb
das
and
test
or
es
out
js
mov
je
xchg
mov
add
mov
mov
push
cmpsb
push
add
jecxz
and
cmp
adc
daa
dec
add
push
rcrb
pop
rcl
adc
addr16
dec
lds
mov
rcl
adc
in
inc
mov
and
adcl
ds
dec
rclb
mov
xchg
in
xchg
je
mov
cmp
xor
imul
and
pop
sub
xchg
cmp
ja
push
mov
push
push
and
jb
jg
mov
cmpl
test
dec
add
pop
pop
pushl
notb
jne
mov
and
aaa
mov
jl
jnp
icebp
insl
fisttpl
lods
or
mov
stos
sbb
call
mov
test
push
push
jmp
inc
sub
pop
leave
cmp
and
push
sidtl
push
push
rcr
push
jl
xor
lods
in
mov
inc
dec
mov
sub
sbb
test
ficomps
dec
leave
add
push
iret
pop
fmul
push
jp
fld
gs
in
mov
dec
mov
xchg
test
sbb
das
adc
add
dec
enter
adc
insl
cmc
fldcw
cmpsl
loope
mov
mov
je
cmp
call
adc
mov
lcall
orb
or
aad
or
lock
sbb
enter
cmpsl
cmp
mov
pop
ret
sub
jmp
add
test
or
outsb
xchg
daa
sub
fadds
popa
inc
xchg
dec
pop
add
jae
jne
mov
push
subb
and
aas
and
es
inc
clc
test
xor
clc
or
out
sti
jge
push
pusha
jle
mov
push
data16
jo
repz
inc
cmp
jg
mov
xor
mov
out
or
fcoms
lret
mov
lods
adc
fcomps
inc
cmp
popa
add
mov
cmp
xor
adc
pop
insl
adc
and
push
cmpsb
add
ret
mov
add
lea
push
clc
adc
sbb
mov
inc
subl
adc
cmp
cmp
add
int
vpunpckhdq
adc
mov
push
sbb
dec
in
dec
pop
push
fadds
or
adc
or
add
rcll
mov
jae
test
bound
adc
cmpsb
adc
pop
pop
jmp
andl
xchg
in
iret
dec
es
adc
icebp
rcr
or
mov
inc
dec
sub
call
cmp
imul
out
pop
aad
push
into
push
fucomip
push
or
add
or
add
sbb
lahf
adc
xor
fcomi
cld
sbb
clc
cs
xchg
jne
xchg
je
cmp
mov
sbb
mov
xor
test
xor
xor
out
lar
pop
pop
decb
popf
mov
and
hlt
jo
scas
repz
push
jge
cmpl
push
scas
xchg
into
pop
jp
sahf
or
mov
dec
test
jb
add
cwtl
ja
mov
xor
test
ret
dec
or
pop
movzwl
jb
sub
dec
add
jmp
or
adc
mov
add
lds
and
push
fdivs
push
mov
stos
sub
mov
dec
jmp
pop
gs
jp
xor
cmp
push
xor
lods
ret
pop
pop
push
testb
mov
adc
sbb
adc
inc
sub
ror
mov
push
pop
mov
add
push
adc
ret
ds
dec
sub
cmp
int3
adc
xchg
or
cmc
lea
sub
sar
inc
lea
lea
push
push
jae
rolb
pop
les
adc
cmp
in
stos
pop
cli
jle
inc
and
or
rclb
mov
pop
or
loope
jbe
pusha
cmp
mov
mov
jg
add
fcompl
jb
imul
sahf
adc
mov
in
adc
in
and
xchg
ljmp
clc
call
cmp
inc
hlt
sbb
stos
out
lock
pop
dec
and
pop
adc
adc
outsl
or
xchg
mov
jg
movsb
and
ret
fnstenv
lcall
xchg
js
jge
je
hlt
test
loope
aam
je
mov
les
movsb
mov
repz
adc
jl
mov
xor
mov
add
in
int3
dec
add
ja
or
je
je
add
jle
adc
jne
mov
lea
mov
or
sub
adc
adc
jmp
inc
cld
jne
ja
mov
cmpsl
out
push
sub
push
gs
filds
into
mov
mov
sbb
clc
sub
mov
fs
or
lret
cmpsb
adc
aaa
test
mov
lcall
xor
add
jl
lods
negb
rorl
fimuls
es
add
inc
add
stc
test
je
shl
daa
and
jmp
push
xor
in
jg
loop
jg
sub
adc
pushf
jmp
sub
sbb
dec
pop
inc
and
push
mov
mov
pushf
push
lock
xor
add
or
pushf
push
xchg
adc
lods
and
mov
adc
mov
sbb
outsl
push
sub
push
add
push
mov
pop
inc
mov
and
push
and
int3
repz
lock
push
bound
lds
dec
xchg
push
inc
out
ss
inc
pop
pop
mov
sub
js
add
xor
pop
pusha
outsl
pop
adc
mov
sbb
scas
adc
ret
pusha
dec
sbb
or
mov
leave
pop
cli
cmpsl
inc
add
jl
inc
push
xor
imul
ss
adc
sbb
scas
dec
aaa
or
lret
and
out
mov
enter
in
mov
pop
xor
inc
or
mov
cs
push
fcoms
movsl
sub
lods
imul
cmp
je
xor
jns
subl
inc
or
sub
jmp
lea
in
cmp
xchg
lods
test
in
int3
addb
aam
in
push
jno
jge
and
in
mov
mov
rol
or
jbe
jp
and
jge
dec
in
int
push
and
dec
mov
pusha
div
cmp
mov
mov
ja
cmp
inc
lea
jnp
das
ljmp
ficoms
push
test
test
sbb
mov
adc
loopne
cmp
sbbb
or
insl
testl
push
jmp
cmpb
ret
je
int
std
aam
add
mov
fimull
fdivs
insl
stos
scas
aam
add
push
movsl
jo
add
mov
cwtl
jecxz
mov
and
mov
cmp
jg
mov
push
mov
cmp
jns
or
push
repz
pusha
push
xor
outsb
out
hlt
andl
mov
test
add
mov
jmp
sub
lock
and
sbbb
and
cmp
add
fistpll
and
ljmp
mov
adc
mov
shl
add
inc
add
add
jmp
icebp
push
ficoms
stos
mov
imul
mov
push
mov
mov
into
popa
mov
mov
seto
enter
neg
or
push
adc
pop
cmp
push
and
scas
jle
mov
push
add
js
xor
mov
mov
pop
out
push
out
push
fildl
test
fadds
add
jno
fnstcw
call
sub
push
fildll
adc
and
sub
mov
dec
mov
jbe
mov
inc
cmp
cmp
ja
mov
insb
cmpsb
stos
lcall
add
pxor
inc
and
pop
cmp
xchg
cli
cmovle
dec
or
dec
fsubrs
mov
icebp
inc
sbb
adc
clts
bound
daa
jne
pop
lds
pop
jg
ret
ret
dec
int3
xor
lahf
sub
lds
dec
adc
and
jbe
mov
mov
inc
xchg
sub
pusha
xor
addl
or
je
lock
cmp
mov
push
push
arpl
mov
mov
and
sbb
sbb
sbbl
mov
push
or
jo
xchg
add
mov
aad
mov
pop
xor
inc
sbb
pusha
mov
pop
fldt
nop
inc
push
cmp
lock
cmp
outsb
cmp
imul
fistps
cs
add
cmp
xchg
loop
rclb
lcall
sbb
dec
pushf
in
test
adc
decl
xchg
and
add
sti
jmp
cmpxchg
lea
movl
sub
cld
jo
lret
lea
in
fisubrs
and
pushf
mov
mov
cmpl
je
jmp
mov
lcall
ret
test
jp
jb
and
test
aad
fbstp
xor
jl
fdivl
jne
inc
xor
repz
rolb
ds
pop
incl
std
push
pop
sub
push
cmpl
movsb
sahf
lret
mov
sbb
push
negb
je
pop
push
xor
push
nop
add
pop
lock
lea
or
pop
xor
jecxz
lahf
xlat
loop
push
jmp
inc
dec
shlb
test
test
mov
jg
fiaddl
es
and
pop
popa
ret
sub
jno
add
popf
js
xchg
fs
cli
cmpb
push
lea
pop
add
xchg
orl
sbb
jae
inc
les
xor
int3
or
fadd
clc
pop
jns
movzwl
cmp
je
ljmp
push
push
outsl
sbb
out
adc
xchg
sub
add
pop
in
inc
fwait
xchg
sub
push
push
rcrl
test
dec
mov
imul
or
rolb
jecxz
hlt
lcall
outsl
inc
xchg
addl
sub
adc
sub
mov
xchg
lds
and
imul
and
mov
xor
insl
add
inc
lock
sbb
cld
adc
rolb
inc
xchg
fmul
dec
xchg
sub
sbb
ret
in
and
sub
mov
inc
or
fnsave
cmpb
cmp
sbb
or
pop
add
dec
push
dec
outsb
cwtl
mov
inc
push
lea
sub
and
popa
sbbl
and
jbe
dec
sarb
sub
and
add
push
stos
les
jg
ficompl
or
add
or
sbb
xor
iret
lock
xor
loopne
test
leave
mov
clc
dec
and
fs
add
dec
imulb
shrb
mov
shl
imul
std
push
mov
testb
adc
jns
lret
inc
or
hlt
push
mulb
push
inc
cs
mov
pop
fiadds
fs
xchg
fisubrs
call
xchg
mov
or
je
push
jbe
xor
mov
push
cli
inc
push
cmc
aad
dec
sub
nop
cmp
jne
push
call
jp
xor
lret
add
inc
add
jne
mov
daa
jl
cs
dec
aam
clc
xor
adc
xor
sbb
push
xor
xchg
and
fldenv
mov
mov
fs
shlb
pop
and
xchg
jbe
sub
adc
jge
movsl
out
jae
xor
js
adc
push
cmp
cmp
jae
dec
sbb
jo
shlb
std
pop
add
and
jne
sbb
inc
add
push
adc
call
cltd
dec
repnz
pop
sbb
push
icebp
loopne
cmp
sub
or
push
mov
test
lds
ljmp
in
adc
push
aaa
mov
push
cmp
imul
mov
sbb
std
dec
js
xchg
mov
mov
fs
pop
pop
push
push
adc
inc
adc
jne
push
mov
push
ficompl
sub
je
data16
and
cmpsl
fcoml
mov
mov
jl
imul
xchg
dec
lea
call
mov
cmp
push
stc
pop
mov
je
jmp
jg
inc
cs
push
scas
inc
call
add
test
js
inc
lea
mov
aas
mov
mov
inc
dec
push
jb
nop
adc
adc
adc
movaps
shrb
inc
or
in
mov
and
ret
mov
or
test
lea
cwtl
test
mov
test
pop
in
lea
filds
shlb
pop
cmp
jne
mov
mov
xor
jbe
adc
js
or
jp
xor
mov
push
or
dec
sbb
pop
iret
loop
or
add
addb
add
insl
out
xchg
mov
mov
insl
negl
jle
lea
add
das
and
sub
call
fwait
jmp
lea
test
sbb
sbb
subl
mov
push
in
inc
or
inc
adc
cmp
cmp
clc
or
cld
daa
clc
insl
jno
bound
cmp
jne
dec
pop
mov
inc
pop
xor
add
test
or
pop
call
sbb
jne
int
loopne
aam
mov
movb
sub
xorb
adc
add
dec
loope
sbb
and
xor
js
repz
adc
dec
push
mov
push
shrl
mov
push
jne
push
or
sub
test
sbb
push
adc
jecxz
out
mov
test
mov
mov
inc
sbb
xor
mov
xor
mov
movsl
lea
les
popa
gs
and
adc
dec
jno
pop
mov
mov
sub
lea
push
sub
xor
mov
or
inc
or
cmp
inc
push
popa
or
inc
into
sub
movsb
or
bound
add
roll
sarb
add
lcall
rcll
mov
mov
jg
cltd
xchg
pop
mov
jge
test
inc
clc
mov
ss
cmpsl
jle
sbb
cltd
pusha
js
pop
and
mov
fisttpll
in
xor
and
sbb
xor
into
je
jge
add
into
insb
jle
cmp
dec
cmp
add
xor
stc
jbe
add
adc
mov
sub
mov
das
lea
pop
ret
stos
cli
loope
or
and
je
call
mov
sarb
shlb
add
lcall
push
or
mov
pop
mov
lsl
add
push
pop
ljmp
sbbl
pop
rcrl
iret
xorb
mov
into
mov
push
fisttpl
int
sbb
pop
ret
add
pop
shrb
xor
mov
mov
xchg
jnp
add
fmuls
les
xor
inc
cmp
and
mov
xor
push
lea
mov
sbb
scas
pusha
sub
jmp
dec
add
shl
loope
lea
test
popa
and
xlat
adc
mov
mov
ret
mov
xchg
add
movsb
mov
ret
jae
push
xor
cmp
ja
or
insl
dec
lahf
pop
or
inc
es
ljmp
add
mov
aaa
inc
push
mov
push
push
mov
xor
lcall
jne
add
add
mov
cmc
push
xchg
adc
popf
add
add
lods
push
mov
arpl
cmpb
push
std
push
or
jecxz
mov
sbb
xor
xor
and
mov
jo
pusha
popf
arpl
sub
pop
xchg
inc
adc
push
mov
cld
xor
jo
push
mov
aaa
flds
adc
outsl
repz
pop
pop
or
iret
mov
arpl
pusha
push
movzbl
mov
rolb
inc
cmp
jae
js
xchg
insb
inc
push
push
je
mov
out
dec
or
adc
pop
lcall
adcl
inc
mov
cmp
push
and
shl
mov
cmpb
add
pop
ret
push
jne
loopne
enter
mov
incl
test
cltd
pop
fisttpl
jns
jmp
fnsave
jmp
add
mov
push
sub
dec
inc
inc
mov
xor
add
cld
jno
push
push
movsb
push
xorl
adc
pop
mov
arpl
pop
add
fistps
sub
sbb
in
sub
add
dec
rcrb
lock
push
test
or
fmuls
fmull
inc
mov
fcomps
je
mov
xor
cmpsl
les
test
dec
jg
xlat
mov
jmp
add
lea
xlat
adc
jle
sbb
add
jmp
inc
mov
mov
mov
inc
imul
test
fbld
lea
push
mov
jo
ffree
test
dec
add
add
test
sarl
daa
push
pushf
int
push
adc
and
sbb
xor
adcb
push
inc
cmpb
fcoml
js
mov
inc
jo
sbb
pop
bndldx
dec
and
dec
xorb
loopne
pop
cmp
pusha
cmp
mov
mov
cmp
fcoml
sbb
adc
xor
call
fsubrs
or
loopne
pop
sarb
cmp
je
int
sub
popf
adc
loopne
dec
jmp
push
xor
loope
adc
add
cld
inc
xchg
cmp
jge
mov
xchg
sub
cwtl
movsb
cmp
or
sbb
and
mov
aaa
cmp
mov
insb
jo
mov
sub
xchg
lds
dec
xchg
lret
pop
and
popl
sbb
mov
jo
add
pusha
test
inc
cmp
mov
aam
xchg
inc
imul
in
inc
dec
adcl
push
push
jl
in
test
nop
call
rorl
cmpsl
loopne
rorb
mov
jg
inc
sbbl
push
jns
push
call
push
push
jne
fdivs
cmpl
shlb
adcb
in
push
or
in
repz
andb
xchg
mov
pop
xchg
mov
inc
and
je
and
or
add
sarb
push
xor
jno
in
and
jb
add
pop
dec
or
push
push
movsb
push
ret
lea
sub
imul
push
push
jecxz
data16
mov
jmp
sbb
inc
mov
dec
jg
sub
xor
jnp
dec
sahf
push
mov
mov
cmp
mov
mov
and
push
test
adc
pop
or
ja
jne
rclb
and
or
lret
sbbl
jmp
fsubrs
cmp
add
fs
and
cmc
test
jne
mov
and
mov
and
ret
cmp
out
jb
xchg
jo
fcmovnb
gs
testb
sub
push
mov
mov
xchg
adc
xchg
push
pop
sbb
push
je
jmp
xor
add
roll
test
mov
flds
mov
jmp
pop
push
push
jnp
cmp
pop
sbb
popl
ss
sahf
rorb
add
test
test
add
inc
xchg
push
push
add
and
push
or
pop
insb
dec
loop
dec
fldt
jmp
or
cmp
sub
jle
push
cltd
inc
ljmp
sarb
popf
les
rolb
mov
cmp
imul
int3
adc
js
jns
mov
sub
add
or
jae
popf
outsb
mov
add
cmp
sub
push
cmp
jae
mov
lods
jo
xchg
ret
jmp
jl
insb
add
popa
add
inc
inc
xchg
repnz
xchg
lahf
lock
lea
push
cmpb
jne
cmpb
jne
int3
mov
ffreep
add
sarb
mov
dec
neg
sbb
and
add
sbb
fisttps
xchg
out
pushf
sbb
es
adc
cmp
cmp
cwtl
into
xor
push
add
popa
inc
add
xor
mov
out
and
orb
xchg
inc
push
sbb
imul
add
aaa
das
popl
ret
pop
pop
and
nop
pop
push
gs
jmp
mov
cmpsb
loop
sbb
dec
xor
jmp
xor
addr16
pushf
push
add
mov
or
ljmp
adc
dec
enter
add
loope
mov
daa
aas
push
mov
psubw
es
push
lock
push
sbb
push
sbb
insb
and
mov
inc
pop
mov
jo
push
mov
add
add
adc
jo
into
cmpw
mov
push
or
outsb
jmp
xchg
sub
pop
jnp
sbb
aaa
cmp
fcomps
mov
and
jne
and
mov
mov
bts
xor
es
inc
mov
bound
jmp
lods
sbb
or
cmp
sahf
xchg
xchg
movsb
xchg
lock
jmp
or
xor
add
ret
push
jae
jo
mov
sub
call
pop
push
adc
je
test
jle
ja
insb
push
lea
sbb
adc
lahf
hlt
mul
add
xchg
or
dec
jae
scas
adc
out
adc
testl
rolb
push
adc
add
lock
je
aam
out
lds
inc
jmp
push
and
sbb
sub
movsl
mov
push
mov
test
push
cmp
nop
sbb
add
cmc
add
leave
push
xchg
jb
sub
mov
xchg
pop
push
lea
pusha
leave
push
insl
movsb
sbb
push
subl
xchg
int
mov
mov
decb
out
mov
xor
ja
flds
loop
sub
adc
sub
xchg
jge
mov
push
adc
mov
push
push
push
adcl
fdiv
add
sahf
imulb
movsb
push
or
adc
push
push
mov
mov
int3
jmp
inc
test
je
pop
test
aad
fistl
jmp
in
ret
pop
and
lret
xchg
mov
pop
and
ja
mov
ret
jo
mov
shl
test
cs
jno
lret
hlt
or
xchg
adc
mov
push
and
push
gs
cld
sbb
fdivrs
dec
jmp
scas
sub
mov
lret
fisubrs
mov
adc
or
jle
or
test
mov
outsl
lods
cltd
push
and
and
cmp
mov
clc
leave
push
inc
dec
dec
push
xor
or
test
lods
sbb
mov
orps
xchg
xor
sub
stc
cld
push
push
movsl
or
pop
dec
out
jl
pop
jae
or
pop
xor
add
cmp
lea
addr16
or
or
xlat
sbb
mov
push
clc
jmp
shlb
cmp
in
outsb
cld
push
pop
inc
mov
enter
inc
adc
mov
adc
es
dec
or
or
es
mov
aad
inc
inc
mov
cmp
pop
push
or
push
inc
inc
popa
test
mov
xchg
xchg
or
push
mov
sbb
mov
pop
push
fdiv
pop
sbb
fsubrs
cmp
test
sub
xchg
and
xchg
push
pop
mov
xchg
icebp
and
test
mov
push
add
push
lods
adc
call
lock
push
pop
inc
inc
inc
and
or
pop
and
les
adc
loopne
push
hlt
and
and
and
mov
add
push
mov
add
daa
dec
dec
inc
mov
call
in
aaa
cmp
cmpsb
or
sbb
pop
mov
pop
fcomps
cmp
outsl
call
outsl
add
aaa
inc
fimuls
add
leave
sbb
data16
ja
inc
std
sbb
rorb
je
mov
imul
insb
or
jo
loope
add
call
mov
rcrl
aaa
mov
jbe
push
or
mov
and
and
cmpl
rorb
dec
inc
and
push
loope
test
gs
mov
cli
add
push
xchg
xchg
insl
cmpsb
lock
mov
movb
jle,pn
push
je
shl
mov
hlt
js
xchg
jnp
ficoms
mov
sub
jmp
add
mov
out
adc
push
aaa
test
mov
aaa
lods
adc
cli
insb
jmp
ficoml
rcrb
lods
push
outsb
add
cmp
add
or
pusha
and
lcall
inc
sbb
das
dec
add
push
ds
enter
or
sbbb
mov
sub
adc
inc
outsl
cmp
jae
push
mov
push
and
dec
or
mov
and
adcl
adc
xor
out
les
sbb
adc
cwtl
nop
sub
lock
enter
adc
ljmp
sbb
mov
mov
mov
inc
mov
mov
or
ds
sub
int3
stos
sub
cmp
add
pop
popf
sub
pop
add
mov
pushf
xor
add
and
inc
stos
add
outsb
repz
and
add
sbb
ds
inc
cmp
mov
or
and
shlb
cmp
enter
mov
push
rcrl
mov
mov
xor
inc
jne
xchg
rclb
add
mov
mov
push
pop
hlt
loop
jl,pt
mov
lock
jg
cmpb
jne
inc
inc
xor
dec
or
or
add
mov
and
enter
push
jg
sbb
out
mov
xchg
inc
add
outsl
add
cmpsl
adcb
icebp
or
int
add
push
adc
jae
cmovb
sub
push
outsb
test
adc
enter
pop
xor
push
rcrb
loopne
sub
lods
add
ret
sbb
shl
outsl
into
pop
xor
and
mov
xchg
lret
inc
inc
imul
push
add
rcr
inc
or
mov
dec
sbb
outsb
mov
inc
jb
adc
test
cmp
test
test
ret
jmp
jmp
dec
jmp
test
add
bound
out
push
lea
xor
and
mov
pop
jmp
adc
cmp
rorb
test
push
pop
mov
adc
add
dec
pop
add
push
es
mov
sub
add
jbe
nop
fnsave
sub
push
xchg
push
out
or
incb
pop
push
test
inc
enter
pop
or
fdiv
add
xor
add
mov
pop
enter
jge
addb
or
jne
aas
sub
out
cmp
daa
push
sub
push
lock
stc
cmp
adc
xor
lods
jbe
jno
out
pop
mov
push
movsb
arpl
push
add
mov
and
lea
mov
sub
sub
and
sub
cltd
fs
dec
sbb
sub
loope
movsb
adc
adc
scas
lret
add
pop
push
int
inc
es
xor
xchg
imul
rcrb
lea
pop
mov
and
push
lahf
sbb
push
xchg
xchg
sahf
icebp
test
pusha
and
adc
inc
test
test
push
fsubrs
fmull
addl
push
iret
cmp
jne
cmpl
stos
add
cli
and
std
loop
jmp
mov
add
push
or
jecxz
dec
sub
mov
clc
mov
pop
push
mov
nop
jge
aad
sahf
sbb
imul
loopne
or
pop
loopne
mov
xor
lock
ret
jmp
mov
sbb
pop
fisubs
dec
sbb
das
test
add
jl
test
mov
adc
jae
xchg
add
and
je
movsb
sbb
leave
add
mov
ss
lds
jb
loopne
mov
push
ja
inc
ret
lock
cmp
sbb
ret
pusha
pop
sbb
dec
pusha
es
lcall
sbb
push
in
mov
jmp
mov
iret
sbb
sub
sbb
jl
push
cmp
mov
aas
inc
pushf
inc
dec
jne
sub
jnp
sbb
enter
adc
mov
push
push
dec
push
in
sub
roll
lcall
test
push
sbb
imul
add
push
push
rcr
jns
xor
pop
inc
adc
mov
adc
je
lea
les
jmp
and
sbb
mov
cld
or
aaa
fistpll
call
adc
sub
sub
push
add
sbb
loopne
and
call
cltd
or
and
inc
leave
xor
adc
cmp
xlat
lock
push
adc
add
or
aaa
adc
add
pop
gs
xchg
fs
imul
jae
rorl
insl
sbb
leave
and
into
sbb
add
sbb
sbb
xchg
cmpsl
add
movsb
xchg
jbe
pop
nop
xlat
cmp
incl
dec
inc
sbb
loope
mov
hlt
inc
mov
daa
rcr
pop
aad
adc
inc
cmp
sbb
insl
push
je
or
aaa
dec
loope
xor
xor
mov
and
pop
cmp
outsb
dec
push
into
xchg
push
xchg
mov
inc
mov
adc
jmp
add
push
push
add
push
cwtl
loope
xchg
imul
mov
push
push
lret
sbb
and
orb
rcl
cwtl
add
fiaddl
aas
rclb
push
push
pop
pop
ret
xor
nop
int
inc
xchg
mov
push
xor
pusha
push
scas
sbb
fldcw
dec
cwtl
cmp
or
lret
adc
and
inc
repnz
adc
add
and
jb
and
or
xor
pop
push
and
and
push
fwait
inc
ds
mov
jle
push
push
mov
pop
in
add
sub
dec
mov
add
rcrl
lods
jg
shlb
lds
and
cmp
push
mov
mov
or
sbb
jns
push
adc
pop
jb
dec
mov
ret
xchg
inc
incb
adcl
fwait
nop
dec
dec
test
and
inc
movb
push
xor
cmp
dec
adc
insb
mov
pusha
xor
add
adc
or
cmp
push
inc
jno
adc
add
or
push
and
lock
aaa
mov
or
push
xchg
cwtl
pop
ljmp
jge
andl
rol
mov
sbb
sarb
popf
xor
sub
das
sbb
adc
mov
adc
dec
inc
cld
fldenv
mov
pop
and
lock
inc
cmpl
add
lea
jne
add
dec
call
mov
pop
xchg
add
add
cmp
push
aam
or
scas
mov
scas
repz
mov
pop
int
push
lock
cmp
mov
mov
xchg
and
enter
fwait
mov
jge
inc
loopne
sub
adc
xchg
hlt
mov
sbb
add
push
aam
or
sub
cmpsb
or
add
mov
add
jmp
fildl
lret
or
dec
dec
or
or
push
add
dec
enter
inc
xor
sar
mov
andb
sub
add
mov
sbb
push
test
push
adc
adc
imul
mov
xchg
insl
and
xor
push
lsl
adc
fwait
and
sub
insb
scas
cmpsl
push
sub
push
dec
mov
mov
rorl
jns
int
and
xor
sbb
sbb
cld
adc
cltd
adc
shlb
mov
adc
loopne
mov
jl
jno
test
dec
and
in
mov
jno
and
sbb
mov
sbb
test
and
repz
cwtl
adc
nop
pop
push
enter
adc
clc
and
test
je
cmp
pop
mov
hlt
fs
js
lods
test
ds
dec
rolb
pop
and
xchg
add
fnstenv
inc
or
jb
jne
cmp
aaa
lea
sbb
pop
add
call
inc
loop
add
xor
mov
rclb
ret
push
push
or
pusha
xchg
sbb
add
inc
xlat
xchg
pop
addr16
lea
fwait
or
insl
cmpsb
push
jl
push
dec
cld
push
in
adc
mov
les
mov
or
mov
xchg
mov
xor
data16
adc
fdiv
in
inc
mov
mov
je
in
cmp
int3
ds
or
sub
sub
and
and
mov
cmp
jmp
sbb
sbb
pop
pop
cmp
add
and
and
xchg
lea
add
cmp
scas
mov
jo
sbb
mov
push
mov
mov
movsl
mov
push
push
ret
out
shll
pop
repnz
das
inc
mov
cmp
or
inc
imul
xor
cld
mov
je
jne
mov
outsl
push
mov
jne
mov
nop
popf
cmp
add
sub
sahf
xor
cmp
jo
into
divl
or
into
sub
jmp
aas
andb
movsl
xchg
lret
xor
push
je
loope
xchg
or
fcomps
fsubrs
outsb
push
addl
lods
mov
in
push
in
iret
out
fisttpl
loope
test
mov
sub
pop
dec
or
and
lret
addb
xor
int3
enter
sub
xor
adc
mov
push
ret
sbb
and
pop
or
inc
pushf
adc
xchg
sbb
xchg
cmpsl
mov
push
inc
push
movsb
sbb
subl
in
add
jecxz
lock
sub
orl
jae
mov
inc
aad
push
ljmp
mov
lret
add
mov
inc
fdiv
mov
or
push
xchg
mov
pop
dec
mov
lods
fs
add
xor
or
xchg
aas
and
lcall
mov
mov
data16
loope
adc
jl
adc
je
push
add
cli
or
lods
inc
rcrl
and
pusha
xchg
cs
push
adc
ja
clc
pop
roll
jp
xor
or
push
cmp
xor
add
stos
adc
mov
iret
push
mov
cmp
cmp
sub
popf
sbb
mov
arpl
sbb
dec
add
push
mov
mov
pop
ss
insl
adc
mov
sbb
sbbb
and
pushf
sub
push
add
mov
inc
sbb
imul
add
cmp
jae
sbb
imul
mov
adc
xor
ja
push
push
and
and
sbb
or
sbbb
pop
dec
dec
pop
mov
hlt
sbb
or
shlb
outsb
add
das
xor
pop
jmp
inc
add
cmp
jl
pop
pop
cwtl
std
dec
add
pop
mov
mov
lock
hlt
movsl
flds
or
test
xchg
mov
mov
adc
push
sub
xchg
xlat
pop
mov
inc
cmpsb
push
mov
leave
cwtl
test
mov
mov
add
xor
shl
ret
adc
pop
push
out
aaa
or
cld
mov
mov
fucomip
push
pop
xchg
movsb
mov
push
sbbb
add
lret
in
and
in
lea
ret
roll
add
push
in
add
dec
add
or
sub
mov
and
lea
cmp
xor
inc
add
push
mov
mov
loop,pt
js
pushf
cmp
jne
cmp
popa
lds
jle
rolb
rclb
fadds
mov
es
aaa
sub
jmp
add
cs
add
sti
and
adc
pcmpgtb
lock
inc
pop
or
or
ret
xchg
rorb
shrl
dec
or
cmp
clc
mov
imul
insb
cmp
cmp
mov
pop
or
aam
int
mov
and
pop
jecxz
js
data16
adc
mov
rorl
push
sbb
and
add
adc
sub
cmp
lea
aas
loop
pop
or
lcall
movsb
push
daa
sbb
sets
or
pop
rolb
mov
loop
sbb
out
iret
lods
call
dec
or
rcl
rcrb
das
push
push
mov
test
push
mov
imul
xchg
test
andl
and
jge
sub
inc
hlt
dec
stos
pusha
jnp
adc
es
pop
sub
xchg
in
fcom
imull
mov
bound
xchg
ret
sub
sub
add
ror
sbb
enter
data16
in
fsubrs
sbb
sbb
push
imul
mov
push
add
jle
repz
lret
sub
out
icebp
lret
sbb
add
ret
fsts
pop
mov
add
sbb
ret
mov
add
xchg
sbb
push
mov
push
dec
insb
pop
mov
loop
sbb
mov
in
add
shrb
inc
push
shll
or
xchg
push
call
inc
aad
movsl
sub
cmp
leave
jae
xor
cmp
sbb
adc
and
data16
jmp
and
insb
les
outsl
jecxz
cmp
in
sbb
lcall
mov
dec
fcoml
fmuls
jmp
fs
dec
ficoms
fwait
sti
adc
add
xchg
add
pop
and
add
xchg
mov
mov
sub
dec
adc
add
pusha
popa
adc
sub
dec
scas
es
ja
and
fs
mov
push
mov
add
mov
test
out
movups
or
add
inc
sub
dec
add
lret
sbb
add
nop
push
and
xchg
add
add
sub
dec
cmp
cmp
add
inc
inc
or
inc
push
dec
smsw
test
push
cmp
sub
adc
mov
lea
jmp
mov
mov
pop
rcrb
les
or
inc
xchg
int3
xchg
loopne
in
in
xor
mov
or
jge
jp
and
fsubrs
push
movl
aas
inc
pusha
add
pop
mov
dec
popa
mov
mov
push
jge
jbe
pop
push
and
repnz
xor
cmp
insl
or
xor
aas
popf
je
gs
bound
sbb
mov
jl
sbb
xchg
xor
dec
sbb
pop
xchg
xor
dec
rclb
int3
xor
dec
jae
enter
or
dec
leave
enter
sbb
mov
fsubp
adc
ja
pcmpeqw
inc
data16
push
dec
or
inc
or
imul
data16
xor
xchg
data16
pop
sub
sub
push
and
sub
xchg
and
imul
data16
or
add
imul
adc
or
mov
cmp
xchg
pop
mov
cld
add
add
cmp
add
jno
mov
pop
in
or
and
loope
sub
orb
and
cli
in
sub
pop
and
xor
adc
and
adc
adcb
enter
jmp
aas
dec
cs
sbb
jne
orl
insb
push
add
push
push
popf
and
pop
int
loopne
cmpsl
in
push
ja
lea
push
mov
int3
mov
sub
sbb
push
cmp
pop
pusha
push
cmp
mov
inc
pop
sbb
shlb
sbb
sub
inc
out
cli
insb
or
addb
push
and
enter
sub
insb
and
add
cld
sub
adc
lea
movsl
sub
inc
sub
sub
mov
add
sbb
sbb
push
sbbl
push
std
push
testb
sbb
mov
inc
xchg
movsb
rcrb
mov
add
push
sbbl
push
push
jo
add
push
out
push
in
pop
sbb
aaa
dec
call
std
test
sub
loopne
inc
test
xor
daa
jmp
std
dec
jl
adc
iret
pop
push
mov
imul
test
xchg
cmpsl
mov
in
popf
adc
out
stos
cmpsl
or
pop
imul
pop
cmp
repnz
push
add
sbb
mov
mov
mov
lcall
inc
dec
nop
lret
or
or
push
dec
xchg
test
inc
cmc
cmp
pop
mov
push
or
add
push
dec
sbb
pusha
clc
add
push
test
mov
mov
mov
filds
xchg
ds
je
test
mov
adc
hlt
or
pop
dec
add
and
adc
adc
sub
sub
cmc
mov
add
pop
push
repnz
rcrb
lea
push
push
nop
or
push
and
loop
or
movl
gs
cld
aad
je
mov
adcl
das
pop
add
push
sbb
inc
jbe
dec
or
int
pop
clts
pop
or
mov
movsb
dec
xor
xchg
inc
shrl
lds
lods
xor
adc
or
jno
mov
xlat
and
sub
push
pop
inc
rcr
insb
test
push
shlb
sub
sub
test
dec
push
xor
lret
repz
js
xlat
lods
call
aam
push
loopne
clc
pop
ret
mov
push
mov
sarl
adc
mov
std
push
or
js
addr16
xchg
adc
xchg
shl
xchg
or
mov
fsubl
out
xor
lea
mov
mov
add
sub
add
inc
jmp
adc
mov
cmp
aaa
xchg
xor
dec
fiaddl
pop
call
sbb
lret
or
decl
mov
test
inc
cs
cmp
ljmp
or
pop
adc
or
inc
push
lea
pusha
orb
pop
push
cmpb
js
sti
xchg
lods
movb
rcrb
ret
or
lea
daa
push
loop
dec
jo
adc
cmp
mov
cmp
dec
test
inc
pop
xlat
or
mov
dec
and
sbb
mov
inc
sub
add
pushl
or
sbb
jge
decb
lock
adc
lsl
jmp
mov
and
or
mov
mov
jb
js
mov
mov
js
add
xor
imul
and
lea
dec
push
xchg
shlb
jns
jl
adc
scas
dec
xor
dec
inc
pop
and
mov
pop
pop
pop
fs
cltd
push
pop
add
or
or
inc
repnz
and
push
and
cmpl
adc
insb
mov
nop
out
mov
pop
mov
mov
sbb
dec
rolb
repnz
xor
andl
sub
push
xchg
or
outsb
adc
cmp
cltd
dec
push
pop
mov
mov
xchg
lret
inc
and
jl
lret
adc
enter
cvttps2pi
dec
adc
cs
dec
adc
mov
adc
imul
insb
xchg
shlb
cmp
fs
mov
xchg
cmpsl
cmp
test
nop
pop
jo
adc
pop
xchg
cwtl
xchg
sub
jl
aaa
ja
je
cmp
leave
fidivs
mov
xor
push
inc
out
adc
mov
dec
js
dec
xlat
jo
add
je
push
cmpsb
push
mov
rcrb
inc
dec
dec
pop
xchg
or
inc
iret
add
leave
inc
jb
fs
mov
xchg
inc
xchg
ret
adc
xchg
push
pop
cli
mov
jno
fidivl
popf
mov
movsl
nop
jecxz
mov
jle
sub
bnd
inc
add
lcall
xlat
xchg
mov
xor
mov
jle
int
pop
adc
leave
add
sbb
sahf
jno
sbb
push
outsl
dec
mov
sub
mov
outsb
dec
scas
in
mov
test
or
and
cmp
push
xorb
pop
add
sbb
clc
push
fcmovnb
dec
andl
inc
imul
cmp
pop
sbb
sbb
fwait
sub
aas
jns
xor
fistpll
fs
xlat
push
dec
es
lret
out
sub
sbb
pusha
nop
addr16
es
nop
add
pop
jb
pusha
sti
add
push
mov
pusha
pop
aas
lods
addl
pop
cmp
pop
xchg
pushfw
mov
or
or
mov
mov
jmp
arpl
stos
push
pop
lea
jo,pt
jno
lret
lods
and
cmp
dec
insb
push
add
sub
mov
push
adc
dec
jmp
adc
xchg
or
push
sub
mov
push
pusha
mov
sbb
lods
inc
push
inc
add
dec
or
lods
jno
out
add
stos
dec
adc
imul
mov
fsubrs
push
cs
stos
dec
bnd
dec
add
jmp
dec
cmp
popa
add
xchg
sbb
jno
lock
lods
lock
mov
dec
cmp
add
push
clc
jl
mov
mov
xchg
xchg
push
xchg
testb
je
mov
xor
xchg
nop
jg
push
sti
xorb
daa
adc
arpl
lahf
rcl
imul
sbb
jg
push
add
lret
adc
mov
xchg
aaa
cmp
pop
mov
fcomip
leave
js
jp
inc
dec
cmpsl
mov
test
aad
or
pop
dec
add
fdivrs
xorl
sbb
ret
adc
nop
call
dec
jl
cmc
and
loopne
in
mov
je
or
adc
jns
mov
sub
mov
cmp
adc
xchg
xchg
cmpsl
inc
xor
sub
mov
xor
add
cmp
pop
mov
sub
negb
and
test
pop
jge
mov
cmpsb
cmp
mov
pop
sbb
je
mov
dec
lahf
movsl
or
cmp
push
jbe
ds
scas
andb
add
sbbl
add
rcrl
xor
adc
das
push
pop
add
cmpsb
push
xchg
or
adc
jmp
add
lea
inc
lcall
rolb
es
adc
cmc
xchg
xor
xchg
mov
incl
mov
fiadds
ret
add
jns
rolb
imul
pop
push
push
and
add
sub
dec
arpl
andl
adc
shlb
nop
push
inc
mov
add
push
out
mov
and
pop
sub
mov
push
jmp
push
push
cmpl
xchg
cmp
xchg
push
pop
and
and
add
imul
sub
jno
xor
sbb
cmp
jl
push
jmp
add
xchg
int3
sbb
sub
dec
fdivrl
ljmp
js
in
pop
dec
or
add
pop
daa
add
add
rorb
mov
jecxz
push
mov
xchg
or
sahf
cmp
add
xchg
leave
push
sahf
mov
xor
fisubs
test
dec
cmp
xchg
test
mov
stc
add
sub
rorl
ret
sub
mov
mov
add
lock
dec
push
imul
cmp
push
sbb
inc
cmp
adc
or
jp
adc
jp
jecxz
dec
nop
pop
nop
or
jae
inc
je
sub
stos
adc
cli
xchg
sbb
and
andb
fwait
add
sar
ljmp
mov
or
and
or
int3
mov
add
jo
sub
mov
xchg
jo
addr16
add
adc
lods
or
adc
inc
push
xchg
or
adc
mov
adc
push
push
rcrb
nop
cmp
or
or
adc
leave
test
je
push
xor
loope
rcrl
inc
jg
sbb
and
dec
aas
sub
inc
inc
adc
pop
jb
inc
push
push
and
dec
or
rolb
jnp
adc
pop
inc
outsl
nop
pop
adc
int
sbb
jnp
cs
or
sub
pop
incl
nop
addb
insb
fs
dec
sub
sbb
dec
cs
jae
pop
cmp
jnp
fistpll
add
xor
xchg
lret
xorl
jle
add
xchg
mov
lcall
push
pop
push
test
xchg
adc
dec
scas
inc
dec
cmp
pusha
outsb
adc
out
xchg
jmp
sub
dec
aaa
cmp
and
leave
aam
add
or
push
mov
enter
je
movb
out
pusha
jg
je
add
push
or
dec
xor
cvttps2pi
je
pop
xchg
mov
jns
stc
test
cmp
in
lahf
rcll
push
test
jp
mov
mov
xor
jmp
mov
lret
wrmsr
xor
lods
jmp
pop
or
xchg
xlat
xlat
sub
push
and
mov
cltd
dec
arpl
imul
loop
loop
rorl
dec
add
inc
add
fdiv
and
test
sub
cs
cmp
imul
rolb
and
mov
lea
dec
fs
push
push
pusha
popa
rcrb
pop
or
cli
push
imul
imul
lahf
pop
mov
cmpb
add
pop
negb
push
ss
dec
add
pushf
andb
inc
sub
xchg
and
cld
mov
gs
pop
mov
mov
or
mov
sub
insb
add
mov
insl
dec
fisubs
je
xor
inc
add
fisttpll
pop
sbb
repz
xor
js
add
ret
das
add
pop
mov
pusha
sbb
insl
cmp
push
add
lahf
jb
das
push
push
add
sbb
add
hlt
mov
dec
cld
cmpsb
je
push
gs
push
add
stc
ds
test
imul
cmp
addr16
shlb
inc
inc
add
subl
js
xchg
adc
ret
rcrb
lock
fs
roll
idivb
and
jmp
or
mov
aaa
out
mov
inc
jno
xchg
lods
aaa
mov
adc
dec
ljmp
or
das
inc
leave
mov
inc
push
cltd
outsl
repnz
fs
jg
outsb
push
mov
push
adcl
jns
adc
jae
pop
pushf
and
sbb
pop
lea
shrb
inc
cmp
and
adc
repz
fldcw
xor
test
xor
mov
out
push
and
xor
mov
and
jmp
jno
scas
pop
jnp
pop
mov
push
fcomi
xchg
testb
aam
mov
gs
and
mov
std
mov
cmp
xor
sub
push
push
add
add
outsb
ljmp
cltd
xchg
mov
or
stc
rorb
sub
xchg
lods
in
add
pop
sbb
or
fs
sbb
repz
xchg
inc
and
dec
or
xchg
add
inc
push
xor
stos
adc
xor
or
aam
pusha
cmp
movzbl
or
and
js,pn
mov
sub
arpl
pop
or
push
pop
jb
nop
pop
inc
nop
fs
pop
cs
adcl
and
inc
add
mov
loopne
das
psllq
aam
inc
fisttpl
and
sbb
in
add
in
sbb
or
mov
and
pop
insl
inc
add
je
dec
ljmp
pop
mov
gs
arpl
mov
rclb
adc
cmpb
cmp
add
dec
mov
mov
loop
idivl
ds
add
xor
or
or
movsb
jg
push
pop
fnsave
push
dec
pop
mov
lods
pavgw
cmp
les
adc
lods
inc
arpl
or
sub
subb
cmp
je
push
xor
adc
push
xor
add
dec
mov
and
add
hlt
xor
ficoms
mov
pop
dec
mov
mov
push
jb
jg
loope
sub
lods
cld
sub
mov
dec
add
cmp
sub
cmp
jae
iret
gs
mov
adc
popf
test
je
adc
lock
in
loope
jg
rclb
rol
pop
mov
push
cmp
adc
mov
pushf
xchg
pop
adc
push
push
inc
cli
out
outsl
mov
push
dec
or
icebp
and
push
mov
leave
sub
fstps
inc
mov
mov
add
adc
pop
mov
sub
inc
lds
mov
push
fwait
sbb
and
iret
pop
add
lods
mov
xchg
mov
adc
in
dec
rclb
aam
push
inc
pop
or
xor
dec
add
sbb
inc
and
daa
adc
pop
cmp
jne
cmp
adc
sbb
inc
push
push
sbb
and
xchg
push
ret
addl
push
leave
outsl
adc
dec
dec
mov
pop
push
dec
and
test
and
xor
xor
into
sub
sbb
jle
add
pusha
pushf
setge
test
or
cmpsb
aas
data16
sbb
sbb
outsb
sbb
mov
adc
popa
and
adc
jmp
cmp
jnp
mov
mov
cmp
gs
cmp
out
mov
bound
ret
push
jne
call
inc
pusha
inc
adc
xchg
xchg
enter
push
cmp
xor
jmp
fs
xchg
adc
pop
xchg
mov
cmp
mov
aad
cs
xor
pushf
cmpb
add
lret
adc
stos
call
out
rcl
inc
arpl
and
jle
mov
fcoml
sbb
add
mov
add
sub
add
push
std
pop
and
jne
mov
pop
push
fs
pop
sbb
jl
sarb
jle
inc
repz
xchg
push
push
out
mov
sbb
fcoms
mov
shr
mov
mov
mov
mov
pop
mov
test
mov
movb
lret
stc
xor
mov
popf
mov
jecxz
inc
add
lahf
orb
gs
xchg
push
je
xchg
sub
jmp
popl
mov
daa
push
add
inc
or
aaa
push
add
or
cmpsb
and
mov
sub
dec
cmp
jae
mov
test
andl
ja
icebp
or
cmp
add
push
cmp
test
pop
adc
add
or
rol
orl
push
dec
push
inc
dec
cmp
rorb
dec
std
push
out
sub
inc
lahf
aad
cmp
and
mov
xorl
and
cmp
orb
mov
sbb
inc
xor
add
dec
pusha
lret
jbe
jnp
jnp
xchg
dec
and
mov
adc
sub
xor
add
pop
sub
lods
mov
test
inc
lds
dec
jge
add
add
outsb
add
sbb
or
inc
aas
adc
mov
pop
push
xor
push
call
xchg
sub
aam
jle
repnz
xchg
loopne
pop
inc
xor
imul
push
push
jmp
dec
mov
jo
push
sub
sub
mov
fnstenv
inc
push
inc
sahf
popa
mov
in
ljmp
iret
cmc
mov
sub
jo
sub
cltd
stos
mov
fbld
sbb
push
xchg
subb
test
ret
inc
dec
aam
add
add
adc
mov
push
sbb
fs
cmp
jle
push
pop
sub
mov
xchg
sbb
in
repnz
dec
dec
mov
push
inc
mov
sub
push
ljmp
or
jp
dec
mov
fbstp
out
add
mov
dec
es
sbb
push
stos
add
xchg
sbb
js
mov
imul
xor
add
pop
and
jae
push
mov
mov
and
mov
jp
enter
pop
xchg
clc
sar
push
and
or
push
jne
or
and
add
inc
dec
sub
cmpsb
flds
or
test
jle
jno
add
pop
daa
outsb
sub
jns
fwait
cmpsb
xor
dec
mov
push
into
inc
dec
imul
pusha
sub
inc
pusha
and
jo
mov
je
js
jl
or
push
pop
andb
arpl
xchg
je
and
andb
mov
adc
push
and
push
pop
xchg
mov
das
loopne
sahf
dec
or
nop
insl
inc
add
gs
or
add
mov
push
pop
adcb
mov
push
pop
inc
dec
push
lods
or
and
sub
or
mov
mov
xchg
or
or
jl
push
test
mov
xor
lods
inc
mov
add
xchg
pop
insb
xchg
inc
sarb
pusha
ret
push
dec
ficoml
inc
pop
add
mov
jb
mov
add
add
nop
mov
inc
and
inc
pusha
jmp
adc
adc
sbb
nop
shr
dec
or
or
sub
dec
push
xchg
jo
xchg
and
rcrb
pop
dec
sbb
jno
rorl
xor
add
add
or
jmp
movsb
pop
sbb
cmp
pop
pop
push
jmp
cmp
add
and
add
leave
push
pop
and
and
insl
pusha
sub
push
hlt
push
xor
ret
ja
sub
and
mov
or
movsl
test
mov
mov
xor
stos
mov
xor
jge
cmp
imul
jns
pushf
add
jae
jg
sub
adc
lea
and
adc
jbe
popf
jb
sbb
movsl
inc
addl
pop
fldcw
and
push
rcrb
xchg
mov
mov
movsb
sub
sbb
inc
xor
aad
mov
push
mov
lahf
pusha
dec
inc
call
mov
lea
xchg
push
imul
fmuls
sbb
arpl
cmp
push
rcrl
mov
movsl
or
cs
orb
jb
pusha
push
pusha
cmp
or
pusha
pop
push
xor
adc
inc
fildll
pusha
cmp
push
pop
add
movsl
sbb
inc
dec
mov
push
inc
test
leave
jae
nop
push
dec
sahf
mov
adc
mov
shlb
mov
test
stos
adc
movsb
jb
pop
cmp
pop
fimuls
jns
test
sahf
dec
add
dec
iret
jo
sub
dec
add
ret
adc
test
add
lret
pop
inc
add
jl
sub
cmp
insl
imul
gs
popf
and
cmp
add
xchg
aam
cmpb
mov
mov
test
sbb
ja
fiaddl
call
jp
cld
inc
mov
leave
pop
adcl
push
jle
daa
add
push
test
arpl
aas
ds
orl
push
dec
loopne
add
repnz
je
pop
ret
pusha
mov
add
sarb
sbb
fcmovnu
mov
leave
sub
je
push
jne
lea
push
dec
rcll
xchg
pop
fsubs
popa
push
add
jo
xchg
sbb
push
je
jg
sarl
es
adc
pop
lock
push
mov
pop
mov
insb
andl
mov
adc
cmp
or
lods
bts
ljmp
jne
inc
push
and
sbb
add
add
and
aaa
jle
in
cmp
aam
mov
and
mov
jae
xor
sbb
xchg
dec
sub
add
xchg
and
and
sbb
xchg
daa
push
mov
adcl
sti
arpl
xchg
pop
orl
in
popa
lret
popa
lods
loop
sbbl
cmp
jo
fneni(8087
mov
xor
mov
lcall
stc
adc
add
inc
pop
cmpb
inc
push
mov
cmpb
call
inc
in
sub
sarl
add
cmp
push
sub
push
aaa
mov
call
cmp
mov
mov
xor
inc
sbb
push
dec
popa
dec
jno
cmpsl
mov
roll
roll
mov
add
sysenter
mov
orl
popa
cli
add
mov
jae
adcl
jmp
and
jl
inc
je
push
inc
sbbl
dec
mov
dec
leave
int3
mov
xor
xchg
aam
or
shrl
sbb
shrl
cs
insb
je
dec
mov
mov
xchg
mov
or
cmpsb
orb
mov
sbb
sbb
mov
xchg
xchg
enter
dec
and
push
or
in
adcb
xchg
adc
inc
adc
fcmovb
xor
inc
sbb
mov
fadd
test
outsl
pop
push
push
scas
shrl
xor
pop
in
lahf
push
pop
jo
sbb
pop
je
rorb
dec
in
punpckhbw
repnz
mov
jecxz
push
repz
cmp
rcll
dec
movsb
nop
push
pop
inc
out
in
push
push
test
dec
sbb
imul
ret
pop
jns
mov
and
gs
and
pusha
push
xchg
add
and
push
pop
and
jb
dec
and
mov
push
and
push
loope
mov
and
dec
adc
popa
jge
push
pop
movl
add
adc
sbb
and
push
insb
add
inc
enter
or
inc
inc
add
dec
mov
fmul
mov
popa
add
rcr
andl
add
sbbb
push
cmp
add
enter
sbb
fsubl
inc
xor
jb
inc
daa
insl
mov
push
mov
and
jo
cmpl
les
jno
xchg
cmp
inc
enter
popa
or
sbb
and
outsl
mov
mov
shrb
add
pusha
aam
sarl
push
jmp
and
push
sbb
insb
pusha
adc
dec
xlat
inc
add
xchg
dec
cmp
sub
int
dec
add
add
fcoms
mov
xchg
cltd
imul
dec
adc
mov
pop
adc
jne
testb
je
adc
push
push
or
enter
sub
loope
jo
push
sub
xchg
or
fwait
add
xor
mov
push
or
ret
insb
sti
pop
mov
shll
pusha
test
pop
and
push
xchg
xor
dec
add
iret
notb
inc
and
imul
dec
lods
incb
mov
cmp
js
jbe
in
divl
xor
push
lock
push
mov
lea
cmp
mov
add
mov
mov
fs
push
sbb
push
mov
push
int3
xchg
cmp
leave
sti
sub
mov
bound
xor
push
sahf
mov
sbb
xor
sub
push
or
fucomip
negb
jbe
add
sub
inc
dec
test
or
fmull
jmp
push
hlt
call
call
push
and
xor
cmp
cmp
push
push
adc
mov
sub
xchg
jnp
dec
xor
xchg
test
pop
mov
outsb
stos
and
scas
and
jo
aaa
cmp
or
or
adc
push
xlat
sbb
sub
xor
subl
add
test
cs
rolb
jmp
mov
ss
inc
es
inc
sbb
mov
filds
out
inc
popa
es
inc
fnstenv
add
xchg
insl
or
sub
inc
push
or
push
pop
xor
enter
or
add
inc
orb
cmp
push
adc
shlb
mov
adc
je
arpl
add
arpl
push
push
adc
xchg
add
xorps
inc
pusha
inc
ja
je
lods
add
jl
pop
cmpb
sbb
int
in
das
sub
test
mov
insl
mov
push
pop
cs
ds
pop
arpl
dec
sbb
int3
dec
mov
mov
scas
insb
cmpsl
scas
push
push
add
jns
dec
scas
popa
mov
or
xor
test
and
stc
push
mov
movsb
adc
mov
and
leave
dec
push
scas
and
adc
and
inc
mov
add
enter
push
or
nop
lods
jl
pop
push
dec
sub
xchg
cmp
call
jne
rcrb
cli
ljmp
imul
jbe
out
or
mov
adc
sbb
xchg
imul
ja
lods
insl
sbb
push
loop
sbb
push
pushf
mov
and
add
lds
and
jg
push
mov
mov
clc
dec
inc
sbb
add
push
jecxz
inc
dec
dec
push
or
inc
mov
xor
mov
jb
repnz
inc
add
or
or
and
adc
inc
pusha
outsl
sub
and
test
xor
enter
push
jle
leave
sbb
test
push
stc
push
cltd
outsl
sub
inc
insb
cs
or
sbbb
ret
pushf
aaa
or
cltd
inc
sub
jns
inc
loope
ret
push
daa
stos
in
cmp
je
mov
mov
fs
popa
add
mov
stos
xchg
imul
test
add
xchg
nop
sbbb
sub
fnstenv
xor
cmpsl
adc
insb
add
pusha
pop
and
or
push
mov
mov
jb
and
bound
cmp
xchg
xor
mov
lock
adc
int3
mov
mov
push
push
push
test
xchg
cmpsl
daa
test
push
add
or
je
inc
shlb
jo
cltd
test
adc
inc
xlat
mov
lea
jne
add
mov
cs
xchg
pop
pop
add
push
add
push
inc
pop
push
or
add
orl
fisubl
pop
fisttpll
pusha
sub
mov
sbb
dec
jl
lcall
lea
fs
inc
pop
ror
mov
pop
jb
int3
fdivl
fcompl
push
andb
jnp
or
cmp
js
imul
or
xchg
or
sbb
xor
mov
incl
into
leave
and
and
imul
sub
sub
sbb
xor
in
push
call
pop
cmp
lcall
cmpl
xor
call
and
pusha
mov
xor
and
or
xor
inc
scas
inc
add
inc
xor
imul
push
cmp
stc
mov
loopne
jo
and
bound
mov
or
jnp
or
mov
push
hlt
push
iret
nop
cmpsb
loop
mov
andl
xchg
add
imul
push
outsb
out
test
xchg
call
pushf
sbb
pusha
mov
sub
jb
fidivl
push
push
add
or
jmp
push
stos
in
dec
or
adc
stos
orb
xor
cmp
nop
mov
xor
dec
adc
dec
mov
inc
jl
jbe
rclb
mov
adc
add
mov
dec
adc
mov
pop
push
out
xchg
push
pop
pop
leave
and
into
repz
jne
mov
pop
nop
iret
pop
in
push
xchg
sub
dec
call
inc
sbb
nop
sub
xchg
int3
call
xor
xor
mov
xchg
fcom
push
leave
sbb
and
enter
sbb
push
xchg
sbb
push
rcrb
push
sub
xchg
rcrb
cmpb
push
and
and
mov
cmp
es
enter
fsubrl
enter
add
test
repnz
cmpb
mov
cwtl
lods
inc
mov
xchg
or
subl
or
cs
mov
je
test
pop
pop
rclb
xor
pop
mov
pop
sub
dec
pop
jbe
movsb
cwtl
dec
shll
das
and
and
aam
shlb
cmpsl
inc
mov
cwtl
sbb
insb
sbb
dec
rorl
jg
jl
lods
adc
orb
in
dec
jg
xor
repz
cmp
or
jl
popa
add
inc
jb
jne
push
loop
pop
les
add
popa
or
and
andl
nop
jmp
mov
mov
push
mov
orb
adc
sbb
int
lcall
fistpl
xor
dec
cmp
mov
add
push
xor
cmp
and
rorl
in
outsb
push
orl
xchg
inc
sahf
hlt
inc
cld
inc
pop
in
inc
fcomps
bound
int
inc
hlt
or
inc
sub
adc
sbb
adc
out
adc
imul
inc
es
les
mov
in
mov
out
adc
and
ret
test
test
jb
hlt
stos
add
cmp
movl
rolb
dec
addb
add
xor
inc
movsb
cmpb
aas
lods
push
insl
dec
dec
ds
dec
cmp
dec
cmp
test
repnz
rorb
xor
dec
mov
outsb
push
lock
inc
jge
adc
sahf
inc
lea
popf
sbb
xchg
jo
cwtl
setne
cmp
into
arpl
cmp
xor
lret
or
insl
rorb
xchg
hlt
push
xorb
dec
mov
xchg
jg
mov
leave
pop
movsl
adc
adc
lock
pop
xor
jo
pop
mov
fs
cmp
adcl
nop
mov
push
rclb
xor
push
outsl
jl
imul
xchg
xor
xchg
loope
xchg
push
pushf
pop
jb
enter
add
xor
xchg
add
xchg
das
push
cmp
mov
mov
fcoms
jnp
andb
rolb
notb
xchg
sbb
cwtl
adc
cmp
push
in
pop
dec
push
push
mov
leave
add
in
cmp
outsl
mov
or
add
push
push
push
popl
mov
cli
in
mov
mov
or
pop
les
adc
sbb
sub
mov
push
or
dec
ret
xor
out
inc
or
dec
xchg
fnsave
xor
pop
mov
mov
mov
sbb
dec
sbb
xchg
xor
movsb
lret
dec
mov
cmp
sarb
add
mov
push
cmp
xor
fwait
lods
dec
adc
mov
mov
sub
and
jns
nop
xor
fmuls
inc
xchg
fs
and
lcall
mov
adc
pop
push
call
adc
or
mov
dec
inc
repz
aad
or
mov
or
jp
pop
and
and
inc
lcall
lods
push
mov
dec
mov
pop
adcb
push
add
or
sbb
inc
add
pop
shrb
sbb
fwait
pop
sub
xor
test
sub
inc
push
or
inc
add
mov
inc
push
or
xchg
xor
push
xchg
outsb
rcr
aam
mov
xor
test
sub
mov
es
add
sub
fs
push
and
push
enter
test
or
add
aaa
lea
inc
adc
faddl
adcl
in
lods
mulb
xor
pop
add
mov
rcll
fcompl
pusha
push
or
inc
enter
push
test
push
add
pop
add
push
push
dec
push
insb
ret
pop
mov
sub
xchg
mov
pop
je
es
add
enter
push
fs
cmp
pop
add
mov
aaa
push
xor
int3
or
rolb
fs
ds
dec
lea
jo
mov
mov
add
push
mov
add
or
lret
jb
push
mov
add
push
xchg
inc
push
fcmove
ja
enter
lea
mov
adc
push
sub
jne
and
or
pusha
ret
sbb
je
cli
mov
push
imul
dec
insb
push
das
js
adc
inc
adc
data16
ret
xor
arpl
rclb
pop
jns
in
pusha
and
daa
bound
xchg
dec
mov
xchg
add
dec
and
dec
jae
xor
sub
mov
add
int3
pop
mov
jae
dec
push
xor
cmp
push
popa
xchg
cmp
add
xchg
dec
cmp
popa
push
and
in
lret
xchg
int3
mov
push
adc
lds
aad
test
jge
pop
xor
mov
mov
pop
shl
aad
loopne
or
or
div
push
nop
or
push
rorb
out
push
lods
xchg
and
or
jmp
push
fwait
mov
push
push
cmp
jae
call
and
sub
sbb
mov
pop
mov
lea
mov
pusha
add
fidivrs
inc
jne
mov
imul
dec
incl
test
jmp
test
cmpsl
sbb
inc
sub
mov
add
push
aam
pusha
pop
adc
repnz
out
or
add
jns
add
test
imul
or
and
pop
jnp
or
cwtl
std
inc
jno
push
jmp
push
adc
orb
rorl
inc
jo
push
mov
imul
pop
popa
adc
and
mov
add
sub
pop
sub
stos
orl
push
sub
stos
jne
push
dec
fcoms
adc
mov
jecxz
lahf
dec
test
sub
iret
add
add
pop
loopne
add
filds
push
mov
or
repnz
mov
xchg
ljmp
popf
or
lods
dec
mov
dec
movsl
pop
jo
inc
sbb
mov
mov
push
lock
pop
inc
pop
nop
dec
adc
xchg
jae
cmp
cmpsl
arpl
sbb
xorb
push
imul
adc
and
sbb
and
cmc
and
cli
aam
call
pop
sub
sub
sbb
push
pushf
mov
movsl
fadds
push
pop
sub
and
add
imul
mov
roll
in
or
adc
xchg
or
jmp
outsb
or
push
inc
sahf
sub
imul
ljmp
imul
xchg
xor
push
xor
sub
jecxz
inc
sub
mov
xchg
fimull
mov
ret
cltd
xor
call
pusha
or
push
es
inc
adc
push
fwait
mov
ljmp
nop
pop
adc
int
pop
sub
or
jb
test
and
sbb
cli
cltd
addr16
or
adc
test
nop
stos
lods
inc
jg
or
dec
and
adc
mov
sub
bound
add
test
and
and
insl
dec
sub
push
add
pusha
aaa
lods
push
insl
rcll
nop
push
add
mov
imul
pop
inc
adc
push
inc
adc
and
xor
sbb
lods
arpl
insb
fs
ret
cmpb
pop
orb
xchg
mov
imul
xor
call
push
inc
cmp
jae
mov
cmpsb
add
add
int
pop
sbb
mov
cmp
xchg
add
fdivrl
lret
fcmovb
adc
popa
sti
std
pushl
xor
push
or
in
sti
std
add
or
adc
jle
and
fsts
inc
push
lret
jbe
add
sub
add
shrl
mov
dec
jp
or
insl
xor
xor
ljmp
sub
xorb
ss
sub
fisubl
push
mov
lret
mov
lahf
mov
dec
nop
test
and
sub
push
add
add
or
sbb
add
xor
inc
add
imul
arpl
pusha
mov
jo
xchg
lcall
dec
fwait
xor
cli
cwtl
shlb
leave
pop
adc
sub
and
add
sub
push
add
add
xor
lock
jle
dec
push
in
mov
and
sbb
aam
lods
push
and
xor
xor
fdivs
insb
cmp
bound
out
sahf
push
js
incl
pop
mov
inc
cmp
fs
cs
mov
lods
mov
push
cs
mov
push
sbb
push
faddp
inc
insb
mov
push
or
pop
pop
cmp
imul
dec
jl
xor
adc
jo
or
insl
mov
cmp
cmp
or
pop
insb
sub
inc
leave
and
stc
lahf
cmc
iret
addb
lcall
or
aam
pop
orb
adc
mov
insl
mov
xchg
mov
test
mov
adc
incb
das
fs
sbb
jbe
or
aaa
xchg
dec
dec
enter
in
rcr
jo
fimuls
lea
popf
jg
fiadds
cwtl
in
jbe
test
push
dec
add
xchg
daa
fisubs
add
fcompl
adc
movsl
xchg
adc
test
xor
push
mov
enter
repz
mov
jmp
dec
mov
das
outsb
sbb
mov
popf
xchg
and
jle
test
sbb
fdivrs
cmp
cmp
jns,pn
shr
inc
push
cwtl
ret
inc
hlt
lea
pop
pop
lock
les
or
push
fdiv
add
mov
adcl
shrb
dec
pushf
mov
inc
push
cwtl
dec
or
popf
scas
iret
andl
and
js
testl
adc
stos
push
sbb
in
cmp
jne
andl
push
loopne
mov
jecxz
mov
push
mov
sub
test
xor
ret
pop
lock
sbb
pop
mov
mov
mov
daa
mov
dec
lock
mov
mov
out
push
idiv
fisttps
adc
je
cmp
je
cmp
je
cmp
je
push
mov
mov
mov
adcb
fwait
fucomp
lret
mov
mov
xchg
xor
or
ja
jo
js
sbb
push
out
std
mov
inc
and
dec
inc
mov
inc
and
adc
or
push
adc
cmovbe
and
sbb
je
data16
sub
xchg
mov
mov
icebp
nop
mov
cmp
inc
pop
adc
dec
repz
insb
adc
pop
jbe
aam
fcmove
cwtl
pushf
xor
cmp
cwtl
jne
sub
xor
cmp
into
clc
test
into
enter
pop
rcll
movsb
jecxz
inc
cmp
rol
inc
dec
movsb
push
mov
lock
shrb
test
xor
mov
fsts
pop
das
xchg
xor
mov
push
sbb
nop
scas
lods
mov
sbb
or
and
inc
sbb
out
mov
ss
adc
clc
test
in
mov
mov
imul
push
sti
jne
mov
shll
out
push
adc
in
adc
mov
adc
push
dec
inc
lahf
mov
addl
mov
sbb
inc
leave
mov
mov
in
push
pop
andb
stos
fs
mov
jo
jb
test
jge
into
dec
dec
mov
push
cmpsl
sbb
sbb
xchg
jbe
push
dec
les
movsb
repnz
fwait
loop
cld
psubw
pop
cld
test
mov
imul
inc
je
xor
fadds
fcoms
xchg
sbb
and
data16
imul
inc
adc
dec
and
and
and
push
add
ret
fsubl
pop
add
push
push
in
and
mov
mov
ja
mov
in
add
icebp
mov
mov
nop
sub
arpl
bound
and
add
push
jno
push
aad
mov
pop
xchg
jg
add
rorb
jl
sub
lods
push
rcrb
pop
das
mov
lock
loope
dec
push
fdivrl
nop
push
mov
or
inc
xchg
ret
or
test
jo
inc
rcr
sbb
repz
adc
mov
and
sbb
enter
lcall
xchg
out
adc
adc
adc
adc
and
inc
mov
pushf
icebp
mov
sahf
outsb
push
call
jb
mov
int3
inc
shlb
mov
outsl
inc
pushf
mov
loopne
push
cmpsb
adc
outsl
sub
rclb
mov
dec
inc
sub
and
aam
dec
sub
loop
mov
lret
push
add
pusha
sub
push
jns
ret
and
add
jns
mov
cmc
dec
jge
mov
repz
push
pop
bound
ficompl
dec
push
push
mov
ret
push
xchg
add
jo
nop
and
or
and
call
mov
and
sti
je
mov
inc
stos
shll
rclb
inc
cs
mov
adc
xchg
lea
push
adc
mov
sbb
xor
jnp
or
dec
pushl
aaa
mov
xchg
push
jb
insl
mov
faddl
dec
xchg
shlb
sub
je
sbb
dec
dec
sbb
push
fwait
xor
outsb
pusha
xor
int
cmp
cmp
je
enter
leave
and
dec
add
shll
xchg
loope
xchg
scas
sbb
pop
cmp
inc
xor
or
gs
cmp
mov
push
test
cmc
mov
and
xor
xchg
ret
ret
adc
or
push
add
jge
dec
or
push
cmp
shlb
push
mov
sub
pop
outsl
jl
mov
adc
sub
pusha
and
inc
sub
sub
loope
pop
dec
sub
adc
addl
xor
add
es
sub
add
mov
add
add
inc
inc
repz
or
and
add
lcall
jne
andl
mov
bound
icebp
pop
cmp
lea
cmp
cmpsb
cmp
jp
cmc
or
jl
je
mov
xchg
pop
push
sub
add
fildll
cmp
sbb
and
adc
icebp
push
add
add
nop
add
ret
push
sub
lahf
push
dec
sub
or
loope
dec
arpl
adc
pop
mov
cmp
data16
jo
or
inc
sub
sub
xchg
add
mov
xchg
sti
jmp
sar
mov
popf
jbe
fcoms
stc
push
outsb
insb
test
lcall
leave
fildll
lds
cmp
shlb
mov
mulps
dec
push
lcall
add
nop
movsl
jge
jne
cmp
pop
xor
push
jne
daa
mov
sbb
inc
add
jno
add
push
push
inc
fisttpl
cmpsb
lcall
dec
int
add
or
xchg
loopne
xchg
and
push
xchg
add
xor
daa
xchg
mov
inc
adc
out
imul
and
dec
pop
mov
jno
adc
add
cli
lods
jecxz
jmp
push
sbb
lods
mov
ret
xor
jle
push
and
pop
cs
es
addr16
hlt
mov
push
jo
js
inc
stos
pushf
divb
mov
dec
sbb
pushf
test
rclb
add
dec
mov
sbb
push
adcl
cmp
add
xor
inc
sbb
rcl
mov
adc
push
mov
fsubs
adc
ss
mov
mov
test
add
lods
pop
out
mov
xor
or
mov
push
nop
data16
ret
push
pop
sbbl
pop
cmpl
mov
jmp
sub
push
sub
push
push
push
push
sti
cmp
mov
push
push
inc
add
mov
sbb
inc
adc
mov
dec
cmp
jnp
push
or
mov
jo
outsl
fwait
lea
cmp
in
fiadds
shr
push
mov
clc
inc
inc
mull
adc
cmp
test
xchg
ja
add
inc
shrb
cmovle
dec
pop
je
fcomip
pop
or
jb
or
inc
dec
add
cmc
cmc
adc
add
shr
and
adc
and
ror
mov
or
mov
loop
sbbb
cmpsb
push
in
test
int
stos
add
fcomps
jecxz
loop
rolb
lock
cmp
jb
cmp
rcr
nop
cmp
jmp
inc
jne
sti
mov
sub
jo
and
jnp
sbb
icebp
shlb
jecxz
adc
int3
andl
and
mov
jmp
xlat
mov
or
dec
cmpb
adc
adc
or
inc
push
cld
adc
es
nop
add
ss
add
push
sbb
cmp
aaa
xor
or
aad
mov
xor
test
int3
jg
inc
test
dec
adc
pop
or
mov
int3
sub
das
aas
add
loop
cwtl
stos
lret
adc
add
pop
pop
fwait
inc
scas
dec
in
or
ret
sub
inc
dec
out
push
into
mov
loop
mov
sarl
cs
push
cmp
add
sti
imul
sbb
fs
mov
cmpsl
pop
and
xor
cmp
add
add
gs
sbb
mov
dec
sti
stos
dec
push
add
mov
cmp
and
bound
addr16
add
aas
ljmp
add
dec
mov
add
inc
sbb
cmp
cld
mov
jne
mov
cmpsl
adc
and
idivb
inc
add
xchg
ds
push
sub
js
aas
sbb
push
add
inc
cmp
jo
mov
cmp
dec
sub
ret
jns
mov
mov
rolb
adcl
xor
mov
push
or
scas
adc
mov
stos
movsb
push
cmp
cmp
lret
pop
sbb
fldenv
cmp
sbb
mov
das
cwtl
fbstp
mov
jl
mov
push
clc
inc
push
push
and
push
fsubrs
lods
sbb
hlt
rcll
clc
nop
sahf
into
jle
and
pop
cmp
and
push
das
inc
sub
test
cmp
test
or
outsl
test
neg
add
ds
mov
repz
stos
dec
add
xor
push
mov
xor
sub
fldcw
pop
or
cs
and
movlhps
leave
sbb
es
in
cmp
add
push
rclb
push
mov
in
cmp
push
or
xor
xchg
jmp
and
jl
xor
mov
or
add
and
push
jmp
inc
jnp
inc
int
xor
leave
vshufps
addl
mov
inc
xchg
cmp
jae
addb
cmp
cmp
mov
iret
clc
faddl
ficomps
add
and
add
sub
ja
sub
shrl
push
sbb
mov
add
mov
mov
dec
scas
mov
sbb
inc
mov
xor
sub
inc
sbb
add
push
ret
sub
xchg
into
lea
jl
decl
cmp
jb
sub
jmp
push
dec
movzwl
dec
pop
cmpl
dec
std
adc
ret
lret
clc
mov
mov
push
push
push
or
loopne
adc
cmp
fs
les
pop
push
jb
adc
sbb
les
pop
mov
push
lds
lret
xchg
cmp
in
add
push
repz
push
push
push
rcrl
inc
cmp
lahf
jmp
fs
mov
mov
call
lea
push
or
jmp
inc
aad
leave
sub
jo
iret
test
mov
add
add
inc
sub
sub
mov
sub
les
pop
lret
cmp
lcall
sbb
cwtl
jns
pop
mov
inc
sbb
cmp
ficoms
pop
aas
sub
xchg
lods
loope
push
push
mov
fildll
sub
adc
cmc
jno
adc
xchg
jns
pop
jns
or
xchg
push
mov
pop
push
js
sub
cmp
mov
add
cmp
imul
xor
sub
movsl
lds
and
adc
and
sub
test
sub
aaa
dec
push
pop
cmp
add
xchg
xor
mov
xor
mov
xor
rcrb
lods
sub
mov
test
dec
add
loop
in
and
push
ss
pop
insl
and
adc
adc
sub
das
xor
and
xchg
add
dec
push
lds
xor
enter
cwtl
push
xor
or
inc
fdivrs
push
imul
dec
or
or
pusha
mov
mov
out
sub
fadd
push
sbb
outsl
dec
or
cmp
xor
and
pop
adc
adcb
pop
mov
iret
popa
or
adc
iret
adc
mov
push
xchg
js
mov
push
rorb
push
jb
add
mov
or
inc
testb
push
xor
sub
fs
sub
adc
shlb
and
mov
cmpsb
add
mov
sbb
scas
inc
fisubrl
shrb
subl
rolb
xor
push
cmpb
hlt
sub
jle
add
push
push
adc
out
sbbb
jecxz
loopne
pushl
add
push
mov
cmp
sarb
mov
or
js
push
cltd
inc
inc
leave
or
sahf
fnstcw
out
out
and
or
fwait
adc
xor
push
inc
cmp
adcl
push
dec
leave
push
mov
add
gs
hlt
adc
ja
adc
inc
ljmp
add
repz
adcb
pop
jne
adc
xor
js
mov
sbb
add
repz
sbbb
andb
push
sbb
cs
mov
xor
and
sub
mov
push
mov
and
dec
or
pusha
or
push
or
sbb
stos
pop
fidivl
int3
lahf
mov
das
pop
popf
lret
adc
inc
sub
sbb
adc
xor
inc
inc
adc
or
mov
inc
xchg
add
adc
sub
sbb
and
adc
push
adc
bound
inc
dec
sbb
je
and
in
mov
cld
jbe
test
xor
lret
pusha
push
dec
jecxz
inc
jmp
pop
and
push
xor
or
adc
call
or
adc
into
cmpsl
ficoml
or
pop
jmp
push
dec
xor
push
ret
push
sub
sub
jg
cld
inc
nop
stos
rcrl
xchg
adc
sbb
enter
adc
sbb
test
pop
cmp
or
lahf
orb
push
cmpsb
clc
sub
lahf
dec
sub
jne
test
inc
iret
in
mov
sbb
lock
adc
cmp
jno
repz
jg
pop
add
jbe
fsubrs
shrb
fmuls
push
aas
push
imul
aaa
pop
adc
jg
nop
sub
dec
pusha
jo
dec
or
inc
insb
popa
shlb
xorb
js
and
test
adc
add
pusha
aaa
push
add
cmp
mov
sbb
mov
arpl
cmpl
xor
mov
jb
push
jl
js
and
xor
js
mov
dec
push
add
cmp
xor
imul
and
cmp
jmp
pop
inc
pusha
inc
and
inc
sti
and
pop
jb
push
pop
push
pop
cmp
sub
mov
add
je
jl
dec
js
or
and
push
sub
andb
inc
and
js
xor
sbb
push
sub
movlps
cltd
jo
lcall
pop
lock
xor
jl
js
nop
mov
adc
or
adcl
mov
adcb
lea
je
js
mov
inc
sub
sub
inc
cmp
dec
adc
jns
nop
pop
cmp
and
or
and
inc
dec
dec
sbb
xor
inc
mov
pop
paddw
aad
scas
sahf
inc
mov
xchg
cmp
dec
sub
dec
mov
add
push
cltd
in
push
setne
xchg
dec
mov
adc
jo
inc
mov
adc
xor
jmp
fwait
add
mov
iret
push
and
pusha
add
xor
enter
pop
mov
adc
add
adc
sahf
rol
in
movsl
pop
jae
loopne
and
add
jne
push
pop
cmp
lock
aaa
mov
cmp
and
xor
push
pop
fs
int3
test
pop
or
fld
test
xor
rcrl
sub
cmp
movsb
push
das
mov
xchg
out
push
sbb
sbb
lods
adc
adc
sub
mov
aas
out
pop
outsb
inc
cmp
mov
dec
js
incl
push
orl
nop
aad
xor
cmpsl
pop
ficoml
or
mov
dec
and
nop
push
lret
or
popf
lods
je
adc
adc
inc
inc
sub
addb
push
add
add
mov
test
add
sub
mov
sub
xchg
js
fimuls
sahf
inc
das
jg
inc
mov
outsl
ret
ret
dec
push
add
add
shrb
in
iret
dec
add
dec
and
jno
dec
lock
inc
jecxz
enter
and
and
das
aad
nop
mov
add
roll
adcl
add
inc
ret
mov
xor
inc
jp
jle
sbb
mov
mov
movsl
call
add
adcl
add
je
lods
xor
scas
mov
test
mov
popa
lahf
push
add
add
and
pop
cmp
or
sbb
and
mov
cmpsl
jecxz
cmp
hlt
js
pushf
jne
pop
and
mov
cli
fwait
mov
cmp
fimuls
pop
sub
test
pop
add
xlat
aad
lret
ret
add
mov
mov
add
aaa
jge
cmpl
jl
lea
test
enter
lods
cmpsl
push
mov
and
mov
push
loopne
clc
xorb
cld
dec
mov
add
dec
cmp
inc
push
push
stos
stos
jmp
xrelease
add
pop
fcomps
lea
aam
sub
repz
scas
ret
pop
xchg
adc
or
or
ror
fiaddl
mov
inc
scas
push
sbb
fisttpl
push
fsubl
mov
dec
insb
cmp
ret
push
es
cs
jns
push
or
popa
pusha
sub
jo
pop
pop
dec
call
dec
xchg
mov
adc
pop
mov
dec
mov
out
and
fs
and
loopne
jnp
testb
data16
mov
imul
xchg
adcb
pop
dec
fs
push
pop
pusha
jno
dec
fsubl
push
inc
mov
mov
add
pop
fs
lret
push
aas
pop
push
xchg
scas
inc
es
push
push
sub
inc
push
mov
in
push
loop,pn
xchg
or
mov
les
movl
push
gs
push
mov
dec
and
xor
fisttps
std
mov
and
inc
lahf
xor
add
cmp
mov
fstps
flds
test
stos
fcmovu
add
cmp
mov
shrb
jmp
or
or
out
test
sbb
sub
fmuls
push
cmp
mov
mov
inc
sbb
jae
inc
sbb
pop
adc
lret
jne
or
shrb
rcrl
cmp
rol
add
jnp
adc
outsl
inc
or
push
push
or
adc
test
dec
mov
jl
push
add
push
or
lods
xor
push
add
cmp
cwtl
inc
mov
dec
je
jg
jl
cmp
fidivrl
add
dec
jp
outsl
dec
incl
movb
and
add
sbb
daa
sub
mov
ret
pop
inc
add
add
inc
fdiv
cmp
jmp
jmp
int3
or
push
les
xorl
mov
cwtl
sbb
xchg
pop
xor
add
mov
lea
into
pop
and
mov
adc
ret
push
cmpsl
sub
mov
lods
filds
push
push
and
adc
cmpsb
repz
or
in
inc
xor
mov
lcall
popw
push
call
loopne
adc
mov
in
xor
push
and
les
xchg
mov
jmp
pop
test
jb
aam
add
lods
je
mov
cld
push
lea
mov
sub
or
mov
dec
fmuls
int
pop
leave
fimull
jge
push
dec
inc
ret
push
punpckhdq
pop
int3
push
sbb
cld
loop
orl
sbb
pop
mov
push
dec
mov
js
mov
loope
pop
or
insb
insl
inc
mov
enter
mov
push
cld
mov
cmp
je
sbb
mov
push
pop
mov
clc
xchg
test
cmp
jg
adc
ja
push
aad
lock
testb
mov
jmp
xor
aam
or
adc
dec
inc
fdivr
popf
jg
push
inc
fcomps
push
imul
ret
scas
jg
cmpsb
jnp
add
mov
and
or
dec
sub
inc
sub
jb
pusha
jne
and
js
test
fildll
pushf
fsubrs
dec
ja
push
mov
jne
cld
inc
lock
inc
sbbl
outsl
jge
cmp
add
pop
xchg
sbb
adcl
inc
add
ret
or
or
mov
or
mov
cmpsl
insb
or
pop
push
mov
push
lret
call
hlt
test
cmpsl
mov
fnstcw
push
cmpl
or
inc
add
xor
mov
jbe
loopne
mov
or
mov
fdivr
mov
clc
ret
jnp
mov
scas
dec
add
sbb
int3
jl
test
test
jg
frstor
gs
add
loopne
lea
push
push
sub
push
adc
inc
or
push
in
or
adc
adc
scas
test
or
adc
pop
imul
leave
add
lds
jmp
enter
jecxz
cmpsb
pop
mov
rol
pop
les
js
lods
push
mov
pop
jmp
out
sbb
dec
call
add
jne
clc
call
mov
and
push
insb
mov
lahf
push
jbe
iret
in
pusha
mov
push
incl
je
jmp
jecxz
sbb
xlat
sub
popa
add
push
add
jle
mov
mov
sub
cmp
dec
xchg
adc
push
mov
popa
sbb
inc
and
pop
push
inc
push
adc
in
adcb
mov
test
movl
cmp
and
aas
or
or
push
dec
and
out
jmp
fidivs
enter
inc
or
js
push
pop
rcrb
xchg
add
call
push
cld
or
pusha
popf
sbb
jns
mov
and
fistl
ljmp
loopne
push
in
add
mov
das
pop
jb
xor
pop
in
pop
shlb
out
mov
nopl
fimull
jne
push
lock
rcll
jne
mov
or
es
lock
js
push
aas
pop
je
cmp
cs
cmp
lods
push
inc
int3
cmpsb
or
jnp
jmp
mov
add
push
push
icebp
cli
int3
add
adc
stos
mov
aam
roll
cmp
cmp
in
outsl
sbb
adc
add
or
insl
lock
es
insl
movsb
lock
jb
mov
xchg
cli
js
mul
mov
push
mov
sub
jne
xor
call
loopne
aad
std
push
inc
pop
mov
test
sub
pushf
cmpsl
xor
mov
and
ds
loop
inc
inc
lock
push
cmp
add
xchg
mov
mov
push
jp
or
sub
out
or
push
movl
or
mov
cwtl
ret
popf
pushf
cmpsb
movsb
sub
cmp
cmc
pop
mov
add
shlb
push
push
jne
mov
fsubrs
inc
les
ss
pop
push
push
push
cmp
adc
or
add
adc
xchg
adc
push
mov
mov
dec
mov
ret
shrl
stos
in
jnp
xchg
fxch
fst
or
push
rcl
push
sub
pusha
sub
shl
dec
shr
imul
or
dec
into
jne
jbe
jae
push
loop
push
fisttps
std
lret
inc
bound
mov
adc
add
imul
insb
push
in
dec
add
dec
or
popa
mov
pop
test
stc
sbb
inc
aaa
and
out
push
idivb
pop
call
mov
cld
adc
push
xchg
imul
les
dec
push
xor
mov
jno
cmp
fwait
pop
cs
push
dec
daa
add
mov
inc
adc
pop
inc
jmp
mov
sub
ljmp
loopne
cmp
insb
stos
mov
loop
cld
addb
insb
jb
lods
sbb
mov
jb
shll
sub
or
push
jle
or
ja
inc
test
je
pop
inc
aas
add
je
or
mov
adc
inc
shlb
sub
push
pop
pop
loope
dec
and
mov
add
call
sub
jbe
scas
jbe
jne
insb
pop
push
sbb
mov
mov
out
gs
cwtl
add
jge
movsb
cmc
insb
inc
push
xor
stos
push
addb
or
scas
das
push
mov
pushl
outsl
sahf
ret
mov
mov
test
imul
inc
xor
in
push
sbb
mov
cmp
loopne
adc
jbe
mov
push
jns
adcl
xchg
push
sub
inc
or
fimull
pop
lods
xchg
data16
sbb
lea
aaa
mov
add
push
jge
pop
inc
dec
lret
sbb
enter
add
test
pop
sbb
push
dec
sub
je
and
stos
imul
or
mov
cmp
mov
xchg
add
cltd
add
xchg
jnp
outsb
push
je
arpl
lret
mov
in
pop
call
inc
sub
dec
mov
pushf
mov
loopne
pop
mov
dec
clc
cli
cmp
cmp
ret
rcl
mov
pop
fmuls
and
or
lea
addb
xor
dec
js
data16
inc
lahf
arpl
rol
jl
xor
mov
pop
lock
dec
js
scas
pop
movbe
ficompl
adc
pop
cmp
repz
add
pop
and
sbb
pushl
adc
or
xor
clc
mov
mov
mov
push
lock
sub
xor
or
push
inc
jl
rcll
lret
jb
stos
push
shr
push
arpl
pop
in
out
or
fsubrl
hlt
imul
adc
in
imul
or
insb
mov
dec
xchg
pop
pop
pop
push
fucomp
in
xorl
and
adc
divl
xchg
clc
add
push
mov
mov
sub
divl
pop
push
test
sub
jb
mov
and
sub
push
sub
js
and
rcr
or
pop
pop
lods
mov
rcr
jmp
lock
aam
push
pusha
push
mov
loopne
enter
dec
xor
insl
jne
cs
add
push
jae
arpl
push
jne
push
push
je
inc
or
xchg
out
xor
or
and
jle
xchg
and
mov
into
push
push
inc
inc
in
sub
sbb
cmp
inc
xlat
in
ret
dec
push
jo
ja
lock
popf
pop
cmp
je
mov
xor
cmp
pop
mov
push
inc
or
or
fisubrs
adc
jne
into
dec
aaa
push
sub
xchg
ficoms
push
pcmpeqw
mov
cmp
push
movb
movsl
cwtl
lock
sbb
scas
orl
cmp
push
cmp
xor
inc
sahf
xchg
shrb
je
mov
push
fsubrs
mov
outsl
and
pop
xor
sbb
pop
cmp
lock
sub
push
xor
cmp
push
mov
faddl
xchg
ret
mov
adc
stc
rcrl
aaa
mov
loopne
adc
fcomp
jmp
or
mov
mov
je
cltd
pop
sub
out
mov
adc
add
mull
shrl
inc
mov
push
push
pop
mov
and
ds
fwait
push
arpl
pushf
fisubrs
aaa
jae
adc
sbb
dec
mov
sbb
clc
in
sub
xchg
out
inc
jbe
mov
mov
jle
mov
adc
or
add
cmpsb
imul
imul
test
or
call
popf
lahf
enter
xor
adcl
sti
enter
mov
inc
int3
dec
ficompl
cltd
faddl
xor
addr16
scas
lcall
push
and
pop
les
out
ss
add
xchg
int
adc
add
push
cmp
pop
imul
add
fadds
sbb
or
sbb
add
nop
je
insb
sbb
pusha
stos
sbb
inc
push
lcall
push
cmp
push
rclb
inc
mov
cmp
jne
adc
and
call
dec
cmp
jne
mov
and
push
push
xor
pop
cli
bound
pcmpeqw
testl
or
bound
pop
mov
sub
popa
add
fbld
jmp
cmp
sbb
and
sub
sbb
rcl
mov
or
pop
jmp
ja
and
xor
sbb
jo
dec
stos
or
sbb
jb
leave
lea
movsb
mov
or
push
adc
cmp
dec
inc
das
cld
push
xor
add
bound
faddl
adc
or
movsb
cmp
add
and
dec
mov
ljmp
add
or
add
gs
test
cld
out
int
xchg
pop
jne
lea
add
push
lods
cmp
or
adc
sbb
lret
notb
in
or
ret
inc
sbb
imul
fdivrs
hlt
mov
adc
add
test
mov
je
pop
mov
out
nop
mov
incb
repnz
out
out
addr16
xchg
add
iret
cmp
clc
xchg
jnp
clc
pop
test
inc
xchg
out
lret
sub
rolb
ret
roll
mov
push
shrb
mov
test
jne
stc
lock
sbb
sbb
je
icebp
sti
mov
adc
xor
imul
in
or
mov
je
dec
sub
push
scas
ja
add
cmc
fstps
mov
div
aad
push
nop
aas
or
adc
in
mov
cmp
inc
push
mov
mov
fdivs
lret
clc
or
in
movsl
cmp
or
jmp
cmp
mov
imul
xchg
push
in
or
inc
sbb
push
aaa
lea
dec
dec
lods
ja
sar
or
inc
sub
cmovb
add
and
rolb
push
cmp
arpl
out
movsl
add
jmp
pop
xor
jecxz
pop
push
push
or
loop
mov
inc
icebp
jno
inc
lock
or
cmp
test
decl
xor
mov
or
out
xor
xchg
je
js
dec
xor
push
or
dec
icebp
xor
int
jo
pushl
cld
and
sbb
fimull
dec
xor
int3
cmpsb
shrb
add
dec
out
cmp
notl
add
sbb
adc
sbb
lods
in
mov
push
gs
je
pop
push
sbb
fs
pusha
insb
xchg
xchg
inc
inc
insb
push
or
movsb
aam
jbe
cmp
in
lea
jl
ret
ja
and
shl
or
mov
movzwl
adc
je
cmp
je
mulb
aam
sub
loope
jl
pusha
and
iret
je
xor
sbb
push
mov
push
adc
lds
xchg
inc
pop
xchg
andb
clc
jmp
lea
cmp
out
dec
leave
sbb
push
xor
andps
pop
lcall
into
adc
lock
jnp
xchg
xchg
lock
cmpsl
addb
jmp
rcll
adc
fistpll
add
ret
jns
pop
dec
ss
out
sbb
int
mov
mov
sbb
dec
dec
add
add
push
mov
lods
jnp
into
lea
mov
sub
cs
lods
shl
cltd
push
push
inc
xchg
lods
sub
inc
push
je
adcl
pop
jl
bound
testb
and
add
in
add
orl
test
test
ljmp
sbb
adc
xor
out
scas
sbb
adc
sbb
in
lcall
mov
mov
movsb
fsubrs
push
jge
jne
push
mov
sbb
inc
mov
and
sbb
cs
mov
popa
pop
imul
mov
or
sbb
insb
xchg
call
cltd
fcoml
or
pushf
pop
mov
int
fidivrs
inc
movsb
das
clc
outsb
mov
mov
fwait
jns
and
fs
iret
pop
shll
push
and
dec
dec
rorb
ficoms
xchg
cwtl
push
ret
sub
add
pop
sbb
nop
lea
dec
push
or
out
or
xor
adc
test
dec
popa
rcr
xchg
arpl
bnd
cli
les
out
xchg
mov
int
and
push
lock
pop
repz
push
adc
icebp
inc
scas
add
sub
imul
and
sbb
ret
cmp
das
or
sub
ret
and
inc
loopne
and
gs
cmp
adc
ret
or
or
scas
jbe
incl
inc
xor
cmp
je
addl
ja
add
inc
lahf
mov
ja
jge
sbb
pop
adc
sbb
lea
add
mov
pop
icebp
add
pusha
pop
xchg
cmp
xchg
or
sbb
pushf
mov
ds
push
movsb
inc
push
pop
lods
or
nop
sbb
inc
or
pop
cmp
xchg
push
pop
into
adc
insb
jecxz
lock
js
mov
int3
clc
loopne
cmp
ds
jo
jmp
lods
aam
lret
sub
clc
aad
sar
mov
mov
lea
cmpsb
mov
cmp
cmp
pusha
jno
fistl
fdivs
or
adc
sbb
add
xchg
pop
mov
mov
push
adcb
or
out
pop
or
mov
aad
pop
shlb
sub
mov
add
mov
pop
xchg
pop
pop
test
sbb
pop
in
mov
vpmacssdql
jge
pop
mov
movsl
add
idivb
je
mov
ss
lret
pop
out
adc
cmp
es
out
jo
push
cli
xor
loop
or
mov
cmpsb
incb
cmp
lahf
orb
mov
in
cltd
push
je
test
jb
fs
stos
mov
cmp
ret
fsub
mov
xchg
ljmp
int3
and
lods
pop
aas
mov
add
mov
jne
repnz
dec
pop
sahf
xchg
out
push
push
push
je
push
rolb
lahf
cs
inc
or
adc
cmp
push
arpl
decb
push
sbb
subl
xor
fs
sub
xor
les
cmp
xchg
mov
jo
xchg
adc
sub
inc
dec
or
test
sub
inc
sub
call
sbb
add
and
mov
stos
sbb
cmp
jl
or
test
js
sbb
int3
sbb
mov
sti
and
ljmp
jge
les
and
ret
mov
lods
xchg
js
push
cmpl
test
inc
clc
sbb
pop
js
icebp
xor
push
cmp
ljmp
adc
loopne
push
pop
cmp
mov
addr16
cmp
or
xchg
loope
std
decl
xchg
ja
push
mov
sbb
mov
mov
jp
call
inc
fldl
sahf
dec
push
addl
call
mov
mov
shlb
push
mov
add
nop
push
mov
inc
jmp
mov
cltd
mov
mov
add
mov
xor
orb
and
imulb
mov
and
loope
pop
inc
xchg
fmull
fisttpll
adc
rclb
enter
push
jno
stos
lret
std
push
and
les
ret
in
fbld
in
sub
inc
mov
shrb
mov
aam
ret
dec
jle
xor
xor
or
cs
and
sub
adc
shrd
sbb
cmpl
insl
inc
insb
js
jo
sub
aaa
push
xor
fldl
mov
and
push
push
addl
sub
push
inc
cwtl
test
enter
xor
pop
add
dec
outsl
in
andl
push
add
inc
pop
outsb
or
xlat
mov
jl
clc
push
fidivrl
sbb
inc
jmp
pushl
mov
push
pop
mov
pop
addr16
scas
in
pop
dec
jo
out
ss
mov
inc
pop
xchg
repnz
mov
mov
jo
xor
ret
hlt
pop
ret
shr
dec
aaa
push
inc
idivb
push
push
sbb
ss
sbb
push
mov
add
mov
jl
andl
mov
sbb
pop
shlb
pop
cld
and
sbb
add
inc
or
xor
ret
jecxz
fistpll
inc
jl
dec
xor
pop
sahf
push
xchg
testb
dec
outsb
mov
lea
or
mov
add
and
adc
cmp
jmp
les
test
cmp
xchg
inc
mov
inc
mov
loope
mov
or
out
push
mov
mov
dec
cmp
sbb
xor
or
push
or
inc
test
shrl
adc
sbb
pop
lock
not
shr
pop
add
dec
insb
dec
clc
mov
inc
adc
push
and
in
inc
adc
inc
xor
jg
push
and
fdivs
idivb
mov
addl
iret
shll
pop
orl
fnsave
mul
jp
mov
lock
xchg
pop
xchg
mov
movb
sub
mov
add
add
lods
jnp
bound
nop
xchg
xor
add
aas
lock
ret
testb
push
inc
xchg
or
add
xchg
jno
mov
mov
and
pop
xor
and
xor
push
sbb
or
fnstcw
rclb
xor
pushaw
dec
pop
jo
test
xor
push
mov
out
jb
lret
mov
stc
push
imul
in
shlb
test
movsb
xor
popf
mov
mov
and
in
xor
push
lea
add
into
xor
aaa
add
or
add
sbb
mov
adc
out
xor
mov
test
std
stc
je
add
dec
insb
scas
xchg
inc
push
enter
lret
fbstp
add
movsl
mov
xor
cmp
pusha
daa
pop
xchg
mov
mov
push
mov
or
mov
mov
sub
and
push
push
xor
push
pushf
push
inc
sbb
and
pop
enter
mov
and
add
gs
inc
mov
dec
rclb
pushfw
imul
or
aad
fistpl
dec
rcl
mov
call
mov
sahf
and
mov
sub
dec
mov
adc
dec
push
jo
jmp
xor
fdivs
sbb
push
push
pop
cmp
push
mov
cltd
idiv
mov
mov
cwtl
pop
test
or
dec
add
xchg
adc
or
add
ret
cmp
jne
cmpb
mov
cmp
mov
mov
pop
pushf
mov
dec
stos
imul
popf
add
cwtl
cwtl
lcall
test
xchg
pop
jns
and
fs
cmpsb
push
addl
test
sub
inc
faddl
jl
cmp
je
push
xchg
sub
lock
mov
xor
inc
movsb
adc
mov
add
ret
push
xchg
adc
pushl
imul
outsl
inc
rcl
sbb
test
jle
into
add
or
cmp
movsb
mov
addl
ljmp
mov
sub
movsl
cmp
scas
sub
popl
push
add
mov
stos
loopne
add
or
sarl
ljmp
push
es
and
and
lock
adc
mov
sbb
mov
cmp
cmp
ret
push
or
jae
sub
and
jo
aas
mov
movsb
jb
or
sub
push
ljmp
jbe
mov
in
andl
sarl
push
push
imul
inc
jbe
xor
add
add
sbb
in
xchg
sahf
cmc
in
or
adc
add
ret
adc
sbb
sbb
cmp
cmp
mov
sbb
pop
mov
xor
cmp
loope
cs
inc
loop
mov
mov
mov
mov
and
sbb
sbb
push
pop
and
aas
dec
inc
mov
int
jbe
fmull
pop
adc
js
popf
ret
jmp
cli
push
cld
dec
mov
xchg
clc
call
in
jge
movl
pop
jbe
insb
shr
inc
add
mov
jecxz
insb
dec
xor
sbb
repnz
mov
push
iret
jo
dec
sub
pusha
insb
std
pop
mov
mov
and
fimull
dec
fucom
pop
xchg
loope
cmp
jb
push
mov
jge
test
loopne
mov
lods
lock
cmpsl
inc
adc
bound
clc
inc
popf
mov
mov
sbb
jecxz
pushf
repnz
pop
adc
sub
xlat
jbe
rcr
xchg
jne
add
jns
sub
or
jnp
jge
push
scas
add
sbb
js
cld
lea
push
push
int
adc
inc
xchg
addr16
push
inc
sbb
mov
inc
mov
not
adc
fcmovnb
pop
mov
add
xlat
cmp
push
lcall
add
aas
cmp
pop
jmp
sbb
add
in
out
movsl
addl
insb
cmp
sbb
xchg
ljmp
xor
ud0
mov
sahf
mov
notb
test
andb
mov
push
sub
je
adc
movsb
mov
dec
sub
sbb
or
inc
pop
adc
sbb
add
mov
push
sub
push
pop
mov
lea
or
mov
movsl
and
cmp
mov
or
jecxz
mov
sub
or
loopne
hlt
rorl
jmp
adc
addl
pusha
mov
jo
dec
in
pusha
jb
xor
fnsave
cmp
sub
or
xchg
bound
adc
jmp
int3
push
sbb
or
mov
jo
fimuls
test
pop
stos
adc
sbb
into
jmp
push
push
mov
pop
xchg
xor
mov
stos
pop
mov
inc
loop
jae
push
icebp
mov
inc
dec
dec
or
and
int3
mov
loope
push
scas
push
jns
mov
push
cmp
call
and
nop
lret
aam
lret
int
jl
or
pop
and
movsl
loopne
in
clc
xchg
jo
or
andl
pusha
out
dec
adc
cmp
xor
shll
out
inc
jnp
pop
mov
out
push
jl
pop
test
cld
sub
test
in
loopne
push
add
push
adc
sbb
mov
push
push
add
cmp
add
inc
mov
mull
mov
jns
xchg
fadds
push
sub
sbb
lcall
cmp
mov
dec
jmp
or
loope
adc
xchg
inc
sub
mov
jmp
adc
lret
add
in
mov
adc
xchg
mov
jl
addr16
shll
sbb
out
xchg
shl
inc
mov
testl
rolb
pop
xor
aaa
push
xor
and
xor
xor
or
shrb
mov
cmpsb
add
adc
insl
jne
repnz
xor
mov
xor
pop
or
push
mov
lret
aaa
pusha
dec
mov
les
lock
aam
cmp
jl
movl
mov
cltd
push
in
aas
add
insb
dec
sub
push
xor
lock
xchg
sbb
add
mov
loope
mov
lods
or
lea
pusha
push
gs
inc
xor
dec
fsubs
mov
mov
iret
add
int
jae
cmpl
mov
push
rolb
arpl
pusha
xor
insl
mulb
pop
dec
pop
lods
push
push
mov
and
add
ret
dec
imul
sub
lds
inc
aaa
adc
pop
adc
push
test
lds
lock
mov
sti
sub
hlt
add
xor
movsb
test
test
xchg
dec
in
adcl
rorb
push
cmp
mov
mov
or
dec
repz
push
xor
xchg
mov
pop
inc
push
push
lret
and
in
pop
dec
sbb
sbb
jbe
push
push
add
je
rorb
das
test
dec
mov
dec
add
pop
icebp
xor
ret
div
les
pop
enter
xor
or
cmp
mov
data16
rcr
and
out
ret
outsl
or
dec
mov
jmp
je
or
je
or
sub
xchg
mov
adc
popl
inc
fnstcw
xlat
push
or
cs
jl
add
shl
sub
sbb
lcall
mov
push
jmp
rcrl
jecxz
cmp
adc
movsl
test
xor
inc
cmp
push
inc
movb
cmp
sti
dec
clc
sub
scas
movzwl
dec
cmpsl
mov
mov
jbe
lcall
inc
jmp
push
ljmp
or
sarb
and
gs
add
je
pop
sub
ret
sarl
test
push
or
adc
dec
test
inc
js
push
outsb
test
scas
enter
and
push
push
add
push
sbb
mov
sbb
mov
dec
je
sub
jg
je
sub
push
arpl
adc
add
adc
xlat
push
adc
aad
mov
cmp
or
xchg
fisttpll
push
adc
sub
xchg
and
pop
jno
ds
in
mov
jnp
jnp
dec
pop
arpl
mov
or
sbb
movsb
mov
nop
jns
and
or
out
stos
adc
push
add
test
enter
jns
cmpsl
ror
or
mov
inc
and
push
stos
sbb
sub
sbb
xchg
sub
sub
add
xor
in
sti
je
and
push
and
add
or
inc
popf
dec
xor
ficomps
pusha
xor
push
xchg
fdivs
mov
fcoms
ret
in
mov
and
leave
push
ret
xor
add
mov
outsl
enter
xor
xchg
push
xchg
push
cmp
jmp
pushf
xchg
xchg
push
inc
movsb
imul
jbe
xor
pop
lds
and
and
push
lea
push
leave
inc
repnz
mov
or
mov
adc
in
xor
inc
lcall
out
sbb
call
pop
rolb
xchg
cmpb
call
xchg
ret
cmp
movsl
push
aaa
pop
jge
scas
das
sbb
mov
ret
in
pop
mov
leave
sbb
enter
pop
and
mov
push
mov
shlb
and
push
es
inc
mov
orb
mov
test
lret
movsb
into
jb
mov
mov
call
sub
mov
pop
test
loopne
or
js
or
and
cmp
sub
in
add
scas
mov
mov
sbb
push
jns
rorb
add
pop
rclb
jmp
dec
ficoml
or
popa
or
push
sub
rcrl
inc
push
push
hlt
push
mov
push
mov
outsl
xor
mov
mov
ffreep
jnp
xchg
and
push
mov
jbe
jns
lcall
mov
mov
xor
inc
enter
mov
mov
push
jne
shrb
dec
jle
adcl
in
cltd
dec
rcrl
pop
in
cmp
int3
nop
les
je
into
push
test
out
mov
fcoms
arpl
jo
xlat
sub
daa
subb
push
and
push
cwtl
je
and
pop
addl
or
test
ja
pop
dec
movl
add
or
in
out
nop
mov
add
adc
rcrb
lods
stc
dec
sub
and
mov
cmp
and
jle
xor
or
push
push
xchg
in
lret
xorb
adcl
loop
mov
inc
adc
call
dec
loope
mov
or
push
xchg
out
cmp
xor
xor
push
outsb
pop
add
fildl
inc
rolb
shl
call
sbbl
dec
pop
incl
jo
cld
mov
pop
pop
iret
decl
xchg
or
mov
inc
pop
clc
add
scas
push
cmpsl
orb
iret
dec
mov
pop
jp
pop
xchg
mov
mov
mov
add
xchg
out
stos
mov
lods
lea
rolb
or
xor
dec
pushf
or
insb
add
jecxz
sahf
cmp
sub
adc
in
adc
sarb
mov
cmp
or
or
push
push
xchg
test
push
xchg
pop
dec
inc
pop
pop
rolb
xor
adc
jg
xor
aas
and
jae
mov
push
mov
inc
mov
mov
enter
movaps
or
mov
or
jg
pushf
mov
roll
pop
in
mov
sbbb
jne
es
sub
in
cwtl
mov
dec
or
or
cmp
int
push
fstpt
cmp
mov
ja
sub
xchg
call
pop
cmpl
or
inc
adc
sarl
and
out
dec
or
sub
dec
or
add
jl
cmpsb
rcll
sbb
mov
and
push
inc
adc
add
in
add
mov
imul
in
sub
jecxz
dec
adc
sub
loopne
cmpl
sub
addr16
adc
loop
rol
push
sbb
xor
push
movsl
std
cmp
in
lret
adc
adc
pusha
inc
lods
mov
push
adc
lret
pop
movb
sbb
mov
push
push
sub
dec
add
sub
jle
jge
popa
dec
shl
stos
out
inc
jne
xchg
enter
push
inc
push
dec
nop
lret
mov
ss
pusha
lahf
aam
inc
adc
pop
sbb
mov
cmp
mov
push
in
movsb
push
sub
sub
fs
loope
sub
add
pop
add
sbb
mov
sbb
inc
les
sbb
imulb
repz
sbb
pop
fisubrs
es
rorl
shr
jecxz
jmp
sbb
cmp
pop
sbb
xchg
mov
es
mov
je
cli
add
jo
mov
sub
cli
call
cmp
fsts
adc
xchg
cmpsb
sbb
jnp
add
push
jo
xorb
sub
mov
mov
jns
outsb
cmpsl
popa
cli
mov
push
add
sti
and
add
addb
dec
fcomp
insb
dec
cli
add
pop
je
or
push
cmp
add
call
insl
sub
or
inc
movsb
and
sbb
cld
mov
lret
cmpsb
lock
jbe
cltd
jo
or
and
cmp
push
shlb
in
roll
scas
xchg
sbb
push
sub
cmp
cli
fiadds
xorl
cmp
es
sub
sbb
mov
into
xor
pop
dec
and
jns
and
pushf
push
adc
and
and
cld
pop
les
inc
clc
push
test
sbb
and
repz
pop
mov
call
scas
xchg
inc
sbb
mov
xchg
inc
bound
mov
test
mov
push
movsb
enter
rcrb
add
pop
imul
push
dec
out
add
stc
jl
adc
es
loopne
leave
mov
xchg
add
and
in
xchg
mov
sub
dec
add
cmp
sub
daa
cld
or
in
add
and
xchg
or
orb
dec
add
mov
sub
inc
xlat
push
mov
add
sub
add
lea
or
xchg
add
adc
ds
mov
push
cmp
adc
repnz
xchg
add
xor
sub
jl
pextrw
and
xchg
cmp
sbb
test
or
cmp
add
mov
dec
inc
ret
and
lret
xchg
or
lahf
add
jno
fwait
inc
xchg
or
les
sub
dec
or
or
loope
or
addr16
pop
fnstenv
orb
push
iret
adc
cmp
push
jl
mov
push
clc
dec
mov
add
nop
push
push
mov
in
xor
lahf
rol
mov
add
cmpsl
xchg
jae
fs
mov
dec
test
lcall
js
inc
clc
push
rclb
ljmp
call
jp
test
adc
daa
jp
cltd
push
enter
mov
mov
inc
add
or
sbb
or
and
jmp
xorb
aaa
sub
xchg
scas
cwtl
sub
xor
add
insb
pop
jl
xor
lret
dec
loopne
mov
movsl
outsl
or
mov
sub
mov
push
sbb
or
adc
movsl
sub
cmp
ficoms
sbb
stc
rcll
cwtl
fdivr
sbb
out
push
xlat
mov
testb
fadd
jge
loopne
rolb
jecxz
jo
jno
jae
loopne
lahf
or
scas
sub
cltd
scas
orl
rolb
mov
jl
loopne
mov
js
aam
icebp
loopne
test
stc
lcall
dec
scas
xchg
jbe
pop
in
call
out
and
cmp
aas
mov
push
scas
add
orl
xchg
sbb
in
push
xor
xchg
fsubp
jo
lock
mov
clc
lods
add
ljmp
cmp
out
call
push
lock
repnz
sub
jne
pop
add
push
mov
ss
mov
sahf
or
adc
int3
adc
pushf
pop
or
mov
xchg
mov
xor
mov
xchg
cmc
lcall
int3
or
jne
pop
mov
notb
cmpsl
and
add
add
in
push
add
push
or
mov
ret
enter
movsb
aam
sti
add
test
rolb
sub
jg
in
push
pop
shll
mov
push
rcr
test
pusha
mov
jne
mov
andl
sahf
aam
xchg
addb
xchg
adc
jnp
dec
xlat
insb
add
push
int3
mov
ss
jge
or
in
inc
adc
stos
and
mov
and
or
add
sarb
mov
adc
dec
out
dec
jbe
push
sub
jae
mov
push
add
adc
fstp
adc
jl
cmp
jae
adc
shl
sub
and
out
cmp
jne
pop
adc
add
je
hlt
std
mov
pop
adc
or
mov
mov
jle
loopne
or
push
fwait
test
test
xor
xchg
loope
push
or
sub
mov
ficompl
shl
jl
repnz
mov
enter
cmp
and
xchg
jg
mov
or
outsb
mov
push
xchg
adc
inc
jp
rclb
push
push
stos
and
aad
pop
nop
and
xchg
xorb
dec
or
outsb
bound
shrb
mov
subl
out
xor
or
and
sub
xchg
sbb
fs
inc
or
and
pop
mov
inc
mov
lahf
rcrb
jp
out
fcompl
sbb
sbb
sbb
enter
or
lcall
inc
leave
push
or
or
je
sub
ja
jp
out
jbe
mov
adc
push
int3
xor
notl
imul
sbb
adc
sub
xor
mov
cmpsl
jo
add
lock
jns
ret
jnp
iret
pop
add
sbb
xor
xor
cld
jecxz
movsb
cmp
or
test
ret
push
xchg
test
mov
cmp
jbe
mov
xor
ret
push
xor
push
jns
mov
lds
pop
leave
or
sbb
and
cmp
popa
or
pusha
jb
shll
stos
inc
jno
dec
xchg
aaa
test
dec
cmpsb
dec
dec
and
mov
in
pop
test
cs
push
push
pop
nop
das
inc
xchg
cmp
loopew
push
inc
dec
dec
repz
jle
add
test
dec
repnz
push
cmp
push
hlt
out
lea
add
mov
cmp
push
addl
pop
adc
lock
inc
js
inc
gs
sarb
adc
push
sbb
jo
pop
xchg
or
jae
add
mov
pusha
cmp
adc
mov
test
sub
xchg
movb
or
or
imul
pop
xor
sbb
xchg
fisttpll
inc
addb
push
xchg
cmp
or
outsl
js
cli
inc
push
cmp
jb
cmp
cmp
push
daa
pop
std
xor
inc
jmp
xor
pop
mov
incl
aas
ja
push
push
push
inc
pop
sahf
dec
loope
mov
std
add
mov
ret
push
mov
and
adc
and
aad
je
push
pop
sbb
inc
cmp
push
xor
mov
mov
jle
test
sbb
ja
sbb
int3
adc
mov
test
subb
loopne
adc
js
cwtl
xor
fsubs
and
mov
sbb
mov
cmp
cs
sbb
out
add
or
cmp
inc
mov
add
xchg
xor
adc
push
enter
adc
push
scas
lea
sbb
pop
dec
lea
mov
dec
push
and
mov
push
adc
push
add
stc
xchg
or
add
testb
mov
mov
or
add
adc
sub
lock
cwtl
jne
in
popa
nop
test
mov
or
inc
or
inc
adc
das
leave
adc
dec
call
pop
dec
sbbl
iret
sbb
dec
push
sub
test
rcrb
sub
xchg
and
and
shrd
rcr
shlb
cmc
andl
or
lret
mov
xor
mov
loopne
loopne
pop
pop
adc
push
lock
pop
movsl
inc
push
jecxz
add
push
fcoml
sarb
das
mov
mov
sbb
xor
mov
push
and
rcll
inc
jp
loop
dec
fdivr
pop
cs
add
invd
pop
bound
sbb
mov
xchg
or
cld
cmp
push
pop
mov
rep
mov
push
cmpsb
loopne
push
sti
push
push
jb
push
xor
roll
push
cld
or
add
dec
push
inc
xchg
leave
sbb
bound
addb
daa
dec
mov
push
jge
test
in
pushl
jecxz
xchg
adc
sbb
or
sub
push
cmpsl
inc
inc
xor
add
add
jne
pop
add
sub
add
scas
pushf
and
mov
add
inc
shrb
add
dec
cmp
sbb
push
mov
sbb
ret
andps
inc
add
mov
fmull
pushf
loop
pop
or
jg
rcrb
lods
mov
enter
stos
insl
mov
clc
cmc
fsubs
xchg
cmp
xor
scas
cmp
cmp
clc
roll
movsb
std
add
push
std
ljmp
cld
clc
loop
out
push
out
aam
sbb
sub
lods
lods
mov
insb
or
inc
xchg
repz
mov
jp
and
jl
pop
fldl
add
push
push
fisubrs
sarb
ret
insb
cmp
enter
leave
pop
iret
test
lods
in
stos
cltd
pop
test
clc
jno
mov
loopne
jmp
std
sarb
nop
fadds
lret
movsb
xchg
or
mov
adc
mov
sub
push
xor
into
xchg
pop
sub
aaa
sar
insb
lock
sbb
inc
je
in
jp
imul
mov
enter
pop
cmp
push
mov
pop
mov
loopne
shl
sbb
mov
shlb
lods
jecxz
add
push
pop
push
sti
jl
test
pushf
lods
bound
in
cmp
jg
inc
or
cmp
sub
mov
mov
xor
jns
jge
and
push
aad
and
out
movsl
jle
dec
add
jmp
xor
or
data16
jns
xchg
es
xor
push
xor
add
inc
cmpb
loop
aad
xlat
addr16
ja
mov
inc
pop
mov
fdivrl
sub
sub
pop
pop
push
mov
xchg
cmp
pop
pop
inc
loopne
add
dec
push
dec
xchg
adc
and
add
cmp
ljmp
in
add
jno
inc
add
mov
add
cmpsb
push
negl
sahf
mov
fs
decl
push
cmp
cmp
add
scas
or
aad
and
push
xchg
push
lods
ficoms
lock
or
mov
adc
shlb
jmp
pop
rclb
dec
in
popa
add
aad
iret
xchg
sub
or
ret
ja
adc
or
in
mov
xor
inc
into
inc
pop
push
stc
jp
and
or
add
inc
sbb
mov
adc
or
push
inc
mov
arpl
mov
mov
stc
adc
andl
ljmp
mov
loopne
cmp
or
je
cmp
jae
sub
inc
cmp
repnz
shlb
adc
mov
scas
mov
dec
sub
or
xchg
or
cmp
jmp
ret
adc
inc
sbb
push
ret
ja
xlat
or
sub
xchg
mov
shlb
lahf
dec
int
add
rep
bound
mov
or
adc
jmp
movsl
mov
sub
jae
not
and
roll
sbb
outsl
xor
mov
arpl
and
ret
clc
jne
push
push
push
push
xor
adc
mov
pop
adc
inc
clc
push
pushf
loopne
adc
or
sub
je
inc
sub
add
and
sub
push
xchg
cld
xor
adc
lock
inc
xchg
jo
aam
testb
rorb
push
aas
int3
inc
xchg
pop
mov
cmpl
jle
pop
jne
cs
in
sbb
xor
xor
xor
or
push
sub
pusha
sahf
push
add
push
lock
hlt
adcb
sub
push
mov
pop
insb
pop
dec
mov
inc
hlt
cmp
mov
mov
jmp
mov
jl
aad
test
xorb
cld
sub
add
xor
std
adc
jge
shl
inc
sub
mov
pop
cmp
push
cld
clc
pop
lods
pop
cwtl
shlb
xchg
sub
bnd
push
dec
mov
pop
adc
push
mov
mov
rcll
stos
xchg
xor
adc
mov
sbb
or
and
cmp
sbb
cmpb
dec
push
mov
pop
adc
mov
pop
jne
sti
inc
dec
bound
jno
incl
test
mov
sahf
mov
dec
rclb
or
cmp
adc
xlat
mov
adc
arpl
daa
jmp
push
and
add
or
bound
lods
mov
push
lock
stos
cmp
cmp
xor
cmp
dec
push
fmuls
loopne
mov
lods
wrmsr
sub
bound
bnd
pusha
sub
add
and
mov
sub
or
add
jno
push
ljmp
xor
mov
sbb
hlt
mov
dec
or
test
or
rcrl
add
jl
subb
gs
add
mov
lea
or
pop
xchg
pop
subb
xor
mov
push
jno
jecxz
or
loopne
cld
repz
inc
ret
pop
add
mov
into
call
aad
in
mov
push
leave
adc
enter
xchg
pop
mov
pop
loop
and
mov
adc
adc
int3
adc
adc
mov
shrb
enter
es
jmp
and
push
movb
imul
bound
inc
adc
ss
mov
dec
xchg
add
jle
add
sub
insb
loope
mov
push
adc
add
movsb
or
add
adc
stc
xorl
mov
lods
mov
lock
outsb
cmp
je
xor
shrl
je
out
adc
push
add
rol
add
clc
jbe
or
add
mov
lret
dec
adc
push
pop
inc
mov
inc
aaa
ficompl
jecxz
jo
sahf
faddl
hlt
pop
add
push
in
mov
test
mov
outsl
call
shlb
sbb
jns
test
push
and
xchg
testb
ja
lea
mov
gs
or
fdivp
or
jp
adc
or
movsl
cmp
cmp
pop
pop
jl
pop
popa
loope
jl
adc
loope
jne
lea
inc
sysret
sbb
push
scas
testb
push
ljmp
mov
or
xlat
jbe
call
stc
or
sub
pop
adc
xor
pop
cmp
add
dec
test
xchg
ret
or
rcrb
clc
dec
and
or
pushf
xor
mov
cmp
mov
dec
pop
inc
stos
cli
sbb
enter
arpl
call
dec
add
jne
sub
lea
xchg
imul
sahf
aas
add
push
cmp
jb
rcrl
mov
pop
or
sbb
xchg
pop
jmp
xor
jae
and
push
mov
adc
and
stos
sub
mov
adc
add
and
pop
xlat
jge
std
and
push
shlb
dec
sbb
movsl
out
test
xchg
lea
addr16
es
fs
out
mov
and
pop
les
mov
pop
xchg
xchg
pop
add
fistpll
fbstp
test
sub
cmp
in
jb
stos
pop
lods
lret
jb
sbb
sub
jo
pop
movsl
sti
pop
scas
icebp
adc
daa
or
cmp
fsubrs
cmp
sbb
add
cmp
mov
fisttpl
cmp
cmp
mov
insl
fndisi(8087
arpl
mov
nop
arpl
adc
or
insl
add
and
in
dec
or
push
mov
lahf
jmp
adc
mov
push
or
call
cmpb
pop
xor
movl
cmp
cmp
or
cmpsb
push
push
adc
scas
xorb
in
loopne
add
je
and
nop
jl
mov
add
nop
test
push
pop
rolb
jne
pop
sub
shlb
pcmpgtd
sbb
lods
inc
hlt
stos
and
mov
ja
pop
sbb
and
aas
and
sbbb
pop
sbbb
and
sbb
and
and
mov
les
in
sbb
jb
sbb
sub
cmp
dec
sub
push
cmp
xchg
pop
in
iret
in
das
jmp
push
push
nop
sub
les
inc
push
and
and
add
loopne
divb
or
xor
mov
mov
mov
sti
rcl
dec
jb
xchg
lea
and
mov
push
jmp
add
ss
push
insb
push
add
out
lods
sbb
mov
mov
or
sbb
and
sbb
adc
xchg
test
imul
int3
xor
es
add
or
adcb
data16
jae
add
push
sub
mov
in
dec
cmp
add
adc
add
in
adc
aam
pop
outsl
adc
imul
cli
ja
xor
pop
lcall
push
mov
pop
pop
out
sti
add
adc
sysexit
lds
or
ja
add
adcb
les
push
js
mov
call
vcvtps2dq
in
fdivrl
or
sbb
lea
cltd
insl
pop
push
imul
jae
adc
sbb
add
mov
or
add
int3
jb
jns
and
hlt
js
ds
mov
xchg
pop
adc
pop
mov
into
mov
xchg
fsubrl
cltd
lea
sub
cmp
or
push
inc
xor
inc
add
cmpl
lock
fwait
mov
xor
jne
push
pop
faddl
xor
addl
dec
pop
inc
push
call
js
dec
lock
mulb
out
je
cmp
sbb
ret
add
rolb
das
sub
inc
sahf
mov
inc
movsb
xor
jae
jne
sbb
pop
sbb
sahf
call
cs
roll
jle
cmpl
les
mov
cs
iret
push
push
cmp
adc
fmull
into
mov
mov
cmpb
jae,pn
shrb
rcrb
addl
jg
cmp
push
mov
add
or
mov
ret
cmp
add
xchg
mov
adc
lock
push
jne
add
in
pop
cmp
jle
xor
add
xor
movb
xchg
sarb
enter
dec
cmp
fs
loopne
jg
aas
pop
jbe
sub
int
and
loop
in
orl
loope
enter
mov
imul
cmp
mov
sub
leave
in
test
adc
out
or
push
sub
pop
mov
clc
xchg
jbe
xchg
shlb
dec
or
in
add
push
add
lea
inc
lea
lret
adcb
add
mov
cmp
push
mov
clc
jmp
add
pop
or
cltd
or
push
pop
or
mov
push
rolb
test
or
push
push
jns
ljmp
pushf
mov
or
and
dec
cmp
adc
jmp
movsl
push
lock
jnp
cld
lock
add
mov
mov
or
sbb
jmp
loopne
or
push
popa
dec
jmp
in
sub
xchg
lret
cld
cmp
or
cmp
xor
jmp
pop
repnz
ret
push
cmp
xor
orl
and
int
adc
frstor
call
sbb
or
push
or
xchg
fdivs
lock
std
and
pop
gs
mov
cmpsl
pop
daa
push
aaa
and
or
pop
or
pop
xor
outsl
jne
and
lock
ret
mov
lret
std
add
repz
mov
add
mov
mov
cmp
jl
pop
incb
pop
jle
cmp
push
jp
or
pop
inc
cmp
aas
jmp
mov
outsb
xor
inc
pop
cmp
jg
jge
mov
pop
and
cmp
jl
loope
nop
ljmp
je
cmp
je
jne
pop
push
lods
sbb
orb
daa
je
sbb
sub
sbb
or
jecxz
push
cmp
loop
js
testl
cmpb
jbe
pop
jo
push
add
ds
sbb
sbb
adc
xor
jl,pt
lods
xor
enter
out
xchg
cmp
dec
mov
xor
pop
inc
incl
aas
inc
push
hlt
jge
jbe
aaa
dec
adc
or
imul
testb
sbb
push
and
bound
cmp
fs
loope
jmp
push
iret
inc
add
sub
sub
lock
adc
call
jle
add
mov
mov
test
rolb
jmp
pop
xor
orl
jb
mov
sbb
nop
ret
inc
pop
sar
mov
jle
vpclmulqdq
shl
pop
mov
dec
jo
add
cmp
fsts
pop
mov
xor
push
pop
mov
fisttpl
out
mov
sbb
fbld
or
loopne
insl
call
adc
jb
loopne
clc
loope
inc
mov
xchg
dec
push
aad
leave
ret
scas
nop
pusha
fdivrs
lea
mov
fisubl
aas
pusha
pop
lods
mov
popl
jnp
roll
sbb
ja
xor
jecxz
je
dec
loope
xchg
mov
js
pop
pop
dec
adc
mov
push
sbb
cmc
mov
sbb
sbb
sbb
or
shlb
mov
sahf
or
push
pop
add
iret
repz
pusha
fs
dec
jno
enter
and
cmp
xor
hlt
insb
mov
das
and
dec
int3
lea
sub
les
xor
mov
xchg
xchg
add
fwait
test
cmp
fisttpl
dec
je
adc
loop
push
jne
push
or
lods
out
xor
dec
das
loopne
int3
mov
sub
shlb
or
scas
loope
adc
out
mov
imul
pop
mov
push
inc
jae
adc
lahf
in
loop
xchg
sub
fsubrs
push
not
push
scas
pop
or
loop
rclb
ret
sbb
jecxz
inc
cmp
inc
dec
jle
and
cmp
adc
pusha
jno
cmp
sub
adc
push
sarb
lods
test
adc
jecxz
and
stc
push
sbb
mov
dec
cli
ret
popl
jne
xchg
jbe
jmp
push
nop
push
pmulhuw
jmp
sub
nop
or
and
and
sti
in
pop
xchg
add
or
sarb
push
mov
fucomi
jae
ret
sarl
jmp
lret
jmp
xor
ss
inc
dec
dec
lea
inc
or
rcpps
xor
leave
and
pushf
jnp
jmp
cmc
sbb
mov
lahf
adc
sub
int3
ljmp
adc
adc
xchg
fldt
rdmsr
or
mov
icebp
and
frstor
add
test
sbb
and
pop
cld
in
xor
inc
jne
push
sbb
sti
lea
add
sbb
mov
ds
inc
sub
fsubrl
rorb
and
daa
je
cmp
testb
adc
jg
pop
push
rorb
pop
jle
add
cmp
nop
inc
rol
aaa
xchg
cmp
xchg
pushf
inc
mov
and
and
call
mov
je
push
jle
inc
adc
jne
and
jne
adc
jecxz
in
dec
into
push
pusha
movsb
or
push
pop
mov
adc
mov
sub
push
mov
inc
insb
mov
and
pop
mov
pop
pop
jl
pop
inc
int
add
push
lods
add
jnp
and
push
pushl
or
icebp
and
and
pop
in
jno
or
and
pushf
fdivrs
cltd
mov
aaa
pop
cltd
dec
pop
sbb
sub
push
into
je
std
mov
xchg
xor
fisubrs
cmp
sub
adc
pop
and
int3
mov
xor
jo
and
dec
pusha
mov
adc
fbstp
push
xor
jle
mov
sub
inc
jle
clc
outsb
add
push
mov
jle
repz
ds
pop
outsb
inc
loop
push
or
push
mov
push
cs
sub
push
pop
and
and
inc
hlt
pop
addr16
cli
sub
adc
or
dec
jo
xchg
cmc
jl
cmp
jg
mov
sub
mov
das
mov
cwtl
bound
aas
add
jmp
das
xchg
inc
or
lock
lcall
je
push
movsb
pusha
inc
xor
mov
cmp
adc
or
add
sub
lea
xor
push
mov
mov
and
pop
movsb
cmp
es
dec
js
ja
mov
pop
pop
cmc
fnstsw
dec
adc
shrl
ds
add
mov
popl
adc
or
fnstcw
jb
das
mov
mov
ss
push
jmp
dec
testb
or
mov
data16
pop
fwait
cmp
lcall
shll
cmp
movsl
xchg
jb
sbb
jbe
pop
and
mov
jle
ja
mov
or
jp
mov
adc
ret
arpl
out
xor
jbe
addr16
sbb
jmp
lea
jae
out
jmp
sti
sub
xor
shlb
jecxz
push
sub
loop
test
mov
jmp
dec
ret
jmp
adc
push
rclb
loopne
lea
and
push
or
roll
ljmp
mov
adc
shl
push
mov
dec
cmc
adcb
inc
sub
daa
addb
cmp
push
lret
jae
push
xchg
push
jns
sbb
push
inc
sbb
outsb
mov
divb
test
or
pop
sub
add
movsb
push
shrb
inc
or
and
xor
pop
inc
xor
test
add
add
jns
cmp
sub
push
imul
or
hlt
push
fsubrs
movsl
push
pop
loop
out
cmc
je
fldl
rcll
fstpl
dec
in
insl
mov
ss
pop
inc
jne
adc
lahf
out
stc
adc
jne
push
divb
or
jne
jns
sahf
sbb
cli
jne
or
shll
xor
leave
scas
push
fldz
into
dec
call
andl
imul
adc
addl
adc
lds
imul
and
outsb
mov
push
pop
and
jg
adc
arpl
orl
jnp
fstl
jecxz
scas
mov
jbe
lea
sbb
push
out
cld
pop
add
jnp
dec
imul
jo
cmc
fisttps
jne
mov
sub
ret
ficomps
bound
ljmp
push
lods
pusha
popa
imul
jne
mov
pushl
inc
inc
in
dec
loop
in
ficomps
or
fimuls
sti
movsl
pminub
or
and
xor
pop
mov
dec
adc
jae
adc
and
push
sub
lock
sbb
pusha
imul
andb
or
addb
and
outsb
test
jle
enter
push
jbe
pusha
xchg
push
rsqrtps
cmp
sub
sbb
adc
jge
scas
pop
push
cmp
imul
ljmp
pop
jle
iret
push
cmp
rcll
enter
jecxz
push
sbb
mov
imul
stc
add
rcrb
push
fs
adc
jne
test
cmpsl
and
in
add
xor
pop
or
mov
xchg
lock
mov
xor
loop
lods
addl
clc
dec
push
mov
push
cld
mov
or
or
push
pop
pop
test
adc
popa
rorb
sub
dec
or
mov
xor
vpxorq
push
xor
pop
bound
add
nop
xchg
push
imul
jns
test
xor
cltd
sbb
jno
add
jns
ss
add
inc
shrb
push
mov
les
gs
push
push
stc
ss
pop
fisttpll
int3
shlb
rorb
xor
jo
enter
imul
sub
scas
js
stos
pop
inc
jo
nop
and
loopne
popa
inc
push
imul
call
or
adc
and
adc
push
shlb
jb
int3
enter
jb
jb
mov
jno
lods
test
pop
subl
mov
cli
push
mov
daa
mov
push
addb
push
sub
adc
shrb
add
push
jmp
imul
lods
addl
dec
fidivrs
add
mov
icebp
ret
pusha
or
add
ds
cmp
jle
mov
adc
fidivrl
shlb
mov
cmpsb
mov
icebp
add
and
push
adc
jle
adc
add
cmp
push
fs
add
add
int
lds
cs
and
add
pmaxub
leave
fiaddl
add
cmpsb
cld
cmp
jl
sbbb
aad
cmpsl
pop
dec
and
aam
xor
and
out
xchg
add
push
call
lret
popf
push
cmp
adc
shll
or
xchg
or
or
xor
jns
push
rcl
arpl
mov
cltd
pop
call
xlat
bound
mov
cmp
dec
aas
or
pop
pop
divl
fistl
lcall
dec
add
push
les
test
pop
repz
dec
pop
inc
outsl
mov
xor
pushf
pop
test
insb
add
bound
xchg
sbb
movsl
mov
mov
adc
js
pop
addr16
cmpsl
pushf
push
aas
stos
add
xor
shll
xchg
mov
lock
rclb
jo
inc
cmp
xor
mov
cmp
push
cmp
sahf
add
lock
arpl
mov
mov
xchg
mov
call
sbb
mov
loopne
stc
adc
or
push
cmp
mov
sub
flds
add
call
scas
xchg
add
pop
jle
pop
addr16
shr
lret
arpl
fs
adc
cmp
and
inc
mov
sub
cltd
jne
cmp
mov
loope
jo
cld
adc
pop
push
out
xor
push
dec
push
inc
shl
stos
enter
testl
add
mov
scas
out
jno
dec
mov
sti
daa
mov
lcall
ret
daa
movsl
cli
xor
ja
push
and
in
pop
movsl
iret
jecxz
push
movsl
pop
cmp
pop
gs
add
push
dec
push
lsl
pop
movl
cmova
divl
jp
mov
jecxz
adc
enter
mov
lea
sub
sarb
inc
pusha
je
das
into
xchg
ljmp
outsb
adc
iret
pop
cmp
or
outsb
inc
sbb
inc
dec
clc
dec
and
add
outsb
dec
add
enter
add
add
sub
addb
or
cwtl
pushf
mov
add
push
push
pop
ret
js
call
mov
sbb
adc
enter
adc
mov
or
das
icebp
pop
dec
push
scas
adcb
and
test
pop
push
cmpsl
adc
ffree
xchg
jle
cmc
add
gs
jmp
xchg
adc
sub
imul
pop
xchg
loop
fistpl
xorl
push
stos
adc
jnp
push
jae
popf
in
inc
fwait
test
ret
lahf
xor
lahf
jne
inc
cmp
insl
xchg
nop
fimuls
daa
xchg
adcb
push
dec
xchg
ret
push
mov
test
arpl
xchg
inc
or
lahf
cmc
lahf
pop
mov
add
push
inc
les
xchg
test
aad
mov
push
cmp
movsl
mov
test
push
xor
add
push
nop
punpckhbw
dec
loope
pop
push
scas
push
arpl
or
fistl
ja
xchg
in
lock
adcb
scas
shll
inc
push
and
out
mov
stc
add
les
cs
xor
addb
fldl
inc
je
adc
sbb
mov
in
jl
cs
mov
cmp
mov
leave
dec
jp
sbb
push
insb
jecxz
xor
cmpsl
add
mov
icebp
rcrb
dec
cmp
ss
mov
and
stos
mov
mov
dec
adc
adc
cmpsl
sub
arpl
sub
sbb
sub
mulb
mov
addr16
loop,pt
arpl
and
mov
int
xlat
mov
insb
cmp
jno
xor
push
mov
or
fdivrs
insl
add
jle
sbb
mov
and
scas
sbb
lods
mov
jecxz
jb
xchg
ja
cwtl
push
mov
mov
adc
jle
and
push
sar
call
movb
lods
push
jl
pop
push
aaa
sbb
pop
ret
pushf
push
mov
lock
notb
sub
dec
dec
and
add
jge
push
push
jno
ret
rcll
sahf
adc
iret
push
insl
loopne
cmp
cmp
xchg
cmpsb
push
sub
loop
and
fs
jb
mov
mov
fmull
in
sub
cmp
les
aas
into
cmp
popa
adc
cmpsl
sbb
push
movsl
lock
insb
push
dec
out
dec
aam
dec
adc
jmp
adc
pop
pop
sub
push
mov
lret
adc
mov
add
push
add
push
sub
jbe
leave
xchg
cmpsb
dec
pop
sub
fldl
rcrl
dec
lods
sbb
decb
lea
jnp
subb
subl
fstpt
test
jne
lea
movsb
out
push
jmp
pop
lock
sbb
jne
popf
clc
jno
mov
in
mov
push
mov
pop
outsb
fcoml
sbb
jne
inc
push
dec
and
sarl
cld
out
pop
mov
push
test
pop
js,pn
jp
fldenv
hlt
jp
dec
outsl
outsl
lods
add
dec
add
decb
iret
mov
dec
add
call
es
xor
add
js
nop
daa
jne
loope
mov
inc
mov
push
push
nop
add
pop
push
push
xchg
lock
fsubs
jne
add
dec
stos
mov
lock
pop
daa
test
mov
adcl
lods
loop
clc
or
pushl
sbb
jmp
xchg
pop
and
add
push
add
jne
adc
fimuls
dec
stos
push
cmpsl
xorl
add
je
mov
pop
loopne
and
xchg
add
bnd
or
movsb
add
add
pop
cmp
mov
ja
out
inc
lcall
add
adc
dec
push
xlat
adc
and
cmpsl
push
pushf
sub
xor
stos
or
lods
or
cmpb
mov
or
mov
outsl
or
xor
inc
movsb
imul
cmp
or
and
add
sub
into
jae
mov
cmp
and
cmp
dec
dec
inc
idivb
sbb
or
mov
scas
add
push
xorb
je
jge
and
inc
popf
sub
sub
adc
scas
sbb
push
pop
or
stc
inc
dec
push
push
or
cmp
mov
xorl
adc
pop
and
adc
jb
je
xor
mov
mov
nop
push
shlb
sub
les
repz
subl
pop
push
cmp
push
cmpsl
add
nop
arpl
test
leave
ja
push
xor
dec
sub
push
daa
and
push
rcrb
adc
js
pop
subb
bnd
mov
and
dec
jecxz
in
sti
push
sub
in
lahf
mov
sub
pushf
xor
and
and
push
mov
cmp
sbb
jg
jg
push
push
out
lret
cmp
out
push
insl
and
pop
pop
popf
xchg
lock
insb
pop
pop
ret
mov
adc
ret
adc
and
pop
loopne
das
pop
add
inc
mov
sarb
push
mov
int3
inc
add
or
sbb
out
mov
je
adc
jbe
in
into
mov
sbbb
mov
stos
adc
loope
sub
stc
add
imulb
add
inc
add
sbb
adc
ljmp
push
mov
arpl
sub
pusha
les
jl
add
mov
clc
inc
cmp
inc
inc
pop
pusha
and
ds
inc
add
xor
ljmp
loopne
pop
cs
push
xor
cs
mov
adcb
or
adc
or
out
call
icebp
mov
cmp
sub
lock
arpl
fsubrl
push
sbb
in
ljmp
in
adc
sub
cld
xchg
xchg
mov
je
adc
aas
push
popf
movsl
in
add
pushf
rolb
jnp
add
add
cs
sub
add
jne
insl
add
jne
fld
std
pop
leave
add
fstps
sbb
imul
adc
push
cltd
xchg
and
xchg
insl
or
sub
sti
leave
cwtl
pop
dec
mov
inc
mov
ss
jae
ss
movsl
add
push
and
stos
mov
dec
jl
or
in
cli
fidivs
out
mov
pop
jne
imul
push
clc
dec
arpl
push
cmp
test
ss
call
out
mov
or
or
mov
fstl
mov
mov
lds
inc
loopne
sub
data16
jp
or
push
mov
or
dec
sti
mov
stc
and
sbbl
loop
cli
loope
pop
pushl
and
data16
insb
mov
xchg
sbb
jle,pt
dec
popa
and
rolb
dec
outsb
push
shlb
adc
push
mov
jb
mov
nop
or
xor
insb
or
push
pop
or
and
adc
xor
shll
inc
adc
mov
xchg
inc
xor
pop
add
mov
push
adc
sbb
adc
add
ret
and
mov
ret
test
inc
xor
call
add
cmp
dec
add
jmp
rcr
inc
les
inc
pusha
mov
into
imulb
nop
dec
cmp
in
int3
test
in
imul
adc
pop
and
mov
je
imul
repz
cmp
stc
pop
or
popf
or
sbb
adc
sbb
lods
js
cwtl
mov
inc
mov
add
jno
push
fildl
jo
push
cs
js
bound
adc
dec
ret
mov
sbb
push
mov
sub
or
xchg
jb
imul
inc
stc
hlt
ret
lea
out
sub
jge
xorl
sbb
shll
shl
repnz
js
adc
jg
rcrb
or
and
mov
mov
pop
jl
stos
nop
icebp
jle
add
or
mov
or
cmp
je
cmp
push
test
or
mov
and
cmp
jne
add
mov
mov
cmc
sub
jne
jmp
inc
shlb
pusha
push
inc
ret
push
test
pop
adcb
push
xchg
or
loop
jmp
mov
xchg
jge
in
jmp
push
sub
cmp
shl
push
adc
movsl
cmpb
xor
adc
cmp
je
int
hlt
enter
pop
or
aad
mov
lret
xchg
add
lods
cli
sbb
imul
adc
jl
push
movsl
mov
jg
cmp
and
ja
pop
dec
sub
pop
in
loop
es
fcmovnbe
jmp
push
push
jl
lcall
sub
xchg
arpl
in
or
sbbl
push
fsts
adc
adc
inc
testb
dec
insb
in
mov
ds
sbb
jg
or
and
push
mov
icebp
inc
adc
cld
push
fildl
in
leave
pop
xchg
xor
inc
adc
out
add
add
sbb
pop
test
stos
nop
inc
sbb
fnstsw
mov
xchg
fstpl
fldl
pop
sar
fnstsw
test
je
and
add
fcoms
std
shll
or
sbb
add
arpl
dec
test
bound
inc
aas
out
mov
sbb
fsubrl
push
inc
in
and
sub
mov
sbb
xchg
cmp
push
jmp
inc
jge
pop
add
dec
jns
push
iret
and
mov
gs
and
and
push
mov
pop
xor
push
shlb
add
arpl
adc
cmpsb
imul
pop
dec
je
add
arpl
lea
jns
sub
xor
sbb
lahf
xchg
out
dec
add
inc
jp
sub
andl
and
push
movsb
addr16
negb
push
or
ret
inc
das
dec
nop
stc
push
imul
js
mov
fstpt
pop
out
sbb
pusha
ror
sub
stc
dec
addr16
jne
int3
mov
pop
negl
call
sbb
popf
mov
or
mov
std
cltd
and
xor
mull
jp
and
sbb
xor
sub
mov
mov
xchg
xchg
inc
inc
dec
sbb
and
or
pop
shlb
push
push
push
repnz
adc
dec
or
mov
and
push
push
sub
and
lret
pop
or
es
or
inc
daa
and
adc
sbb
and
push
jne
pop
jns
popf
and
add
push
or
sub
andb
sub
pop
sbb
jecxz
mov
sub
dec
cmpsl
sub
test
sbbb
shlb
push
pop
aam
or
fldenv
mov
or
andl
fs
and
and
add
enter
xor
pushf
ss
dec
xchg
pop
sub
pusha
ficoms
jo
and
lahf
addb
xchg
xchg
stc
fadds
push
bound
sbb
sub
int3
and
xchg
in
sbb
add
mov
push
jbe
cmp
or
push
or
sbb
and
xor
lret
sbb
sub
dec
push
mov
mov
and
pop
and
jne
in
cmp
push
push
daa
xorb
xor
je
fwait
pushf
and
push
or
lods
ljmp
push
jge
mov
outsb
push
or
out
pop
jg
nop
mov
int
jns
testb
sbb
repz
repz
xchg
movsl
iret
repz
mov
fsubr
cli
or
sbb
ds
pusha
jns
out
jno
xchg
movsb
mov
jns
out
xlat
call
repnz
sbb
data16
add
and
cmp
mov
aas
jmp
jne
add
mov
dec
push
add
pop
loopne
add
inc
or
add
and
push
pusha
movsb
pop
adc
das
cmp
inc
std
xchg
and
inc
mov
push
or
scas
cwtl
je
push
lsl
add
sub
cmp
jecxz
fiaddl
add
push
jo
stc
je
add
push
xchg
pop
fcmovbe
xchg
cwtl
popa
add
loope
adc
jo
daa
loop
or
mov
lds
fistl
xchg
sub
int3
ss
sbb
and
push
push
mov
js
push
dec
and
xor
test
fcoms
xchg
lods
adc
push
pop
push
rcll
dec
push
imul
sub
add
adc
inc
rclb
shl
adc
or
push
mov
shr
call
lds
add
and
adc
xor
mov
and
nop
dec
scas
filds
or
ret
push
mov
xchg
in
mov
addr16
popa
sbb
mov
hlt
mov
jp
movsb
xchg
xor
addb
fimull
cltd
pop
sbb
sub
xchg
imul
jle
jo
add
ss
push
arpl
lea
loopne
push
popa
add
add
shl
call
xchg
pop
add
add
jb
out
or
xchg
add
lods
in
add
xchg
outsl
in
in
xor
adc
shlb
inc
rolb
aaa
push
nop
sub
jg
add
lds
ret
out
lock
dec
xor
mov
pop
addr16
inc
cmc
add
mov
out
or
adcb
add
dec
and
scas
jg
cmp
lock
xchg
add
or
inc
adc
sub
and
loopne
repnz
enter
rorl
push
mov
sub
aam
or
add
or
cltd
inc
fwait
or
pop
mov
imul
out
aaa
leave
stos
jne
ret
sub
cmp
pop
push
push
cmp
push
movsl
adcl
add
clc
mov
ret
add
pcmpeqd
and
pop
insb
mov
push
cmp
mov
xchg
push
push
inc
add
mov
cwtl
cmp
sub
dec
adc
push
mov
mov
orb
fwait
push
leave
add
ret
clc
and
add
sub
add
lock
add
xchg
and
mov
addr16
test
call
xchg
push
fdivs
sub
cmp
or
pop
cmpsb
adc
and
and
mov
cmp
sub
psllq
add
or
adc
pop
stos
pop
xchg
add
adc
mov
inc
or
outsb
adc
or
push
add
or
mov
sbb
sub
or
sbb
dec
mov
xchg
xor
push
ret
call
sub
cwtl
inc
cld
adc
test
jg
stos
pusha
jo
jg
shll
inc
add
or
sbb
inc
mov
fcompl
add
pop
mov
sbb
rorl
adc
leave
add
sbb
popf
mov
lcall
sbbb
dec
push
std
ljmp
adc
mov
in
jno
test
adc
adc
fimull
or
add
mov
add
roll
js
add
or
push
push
mov
test
aad
call
and
and
cmp
pushf
sbb
add
insb
xor
ret
sbbb
add
sbbb
inc
add
push
push
or
or
fwait
rorl
xor
xor
mov
adc
and
adc
out
mov
jb
lds
push
ret
addl
sub
in
xor
push
inc
sahf
and
add
add
cltd
ret
or
add
ret
and
xor
add
inc
add
or
stos
add
mov
cmp
adc
sbb
jno
cli
incl
sbb
push
cmp
mov
les
ret
add
push
mov
lds
inc
andb
adc
xor
and
pop
adc
jno
and
add
add
xor
lret
add
and
or
mov
lret
add
jne
push
push
add
add
mov
dec
ss
pushfw
aaa
jo
jnp
je
adc
loope
cmpsl
inc
mov
add
push
push
push
inc
lcall
sahf
push
js
mov
sub
mov
or
test
or
sbb
pop
push
cmpb
add
push
sbb
adc
cmp
movsb
inc
fucomp
or
add
inc
mov
enter
roll
daa
jns
cmc
adc
push
push
in
dec
pop
jmp
int
adc
fsts
daa
out
dec
mov
push
test
cmp
adc
fidivrs
or
bound
push
arpl
gs
add
push
mov
or
popf
fs
imul
mov
sub
sbb
jae
sbb
mov
fbstp
imul
jne
fldl
nop
mov
fwait
mov
add
sahf
or
nopl
or
lret
add
adcb
scas
push
adc
daa
cs
or
stos
mov
out
push
jl
push
loope
push
imul
mov
pop
dec
in
adc
pop
or
pusha
xchg
pop
rorl
inc
gs
or
inc
sub
push
dec
pop
rcrb
lahf
add
call
lock
dec
lahf
xor
add
xor
roll
rorb
loope
fdivrs
dec
mov
sbbb
add
xor
xchg
enter
and
sbb
sbb
jl
loopne
add
aaa
aad
pop
sbb
add
movsb
jbe
xor
loopne
and
or
add
adc
cmp
popf
cwtl
mov
inc
fstl
test
push
push
sub
push
cmpsl
pop
and
pushf
mov
xchg
add
scas
mov
sbb
aam
jge
and
hlt
push
dec
push
add
cmp
movsl
and
sub
sub
xor
pop
call
or
rorl
cmp
jl
adc
inc
push
xchg
stc
jbe
dec
jmp
xor
sti
decl
outsb
mov
xor
sub
cmp
mov
jl
xor
jmp
cmp
jl
or
int
jbe
jle
adc
jle
xor
jle
mov
je
mov
mov
push
add
inc
jmp
movb
mov
or
iret
xor
cltd
pop
idiv
inc
repnz
mov
cmpsl
in
xor
in
cmp
movsb
sbbl
fstps
cwtl
lock
clc
ja
sbb
mov
mov
mov
cmpsl
push
test
out
ret
mov
xchg
test
enter
cmp
mov
outsb
test
xor
jmp
orl
dec
or
gs
notb
inc
push
lock
jnp
lahf
lock
hlt
incb
dec
in
sbb
mov
add
iret
cmp
adc
jae
mov
dec
faddl
cmp
cmp
push
xchg
push
cmp
push
popa
int
sub
les
xor
fwait
imull
enter
pop
iret
mov
xor
push
jmp
add
and
inc
rolb
lea
in
sbb
adc
and
or
in
ljmp
fcom
add
sbb
movsl
rcrl
or
cmp
mov
or
push
xabort
test
fdiv
pop
and
mov
ljmp
scas
inc
sub
pushf
mov
inc
enter
push
jmp
adc
push
xor
stos
mov
lods
adc
pcmpeqd
movb
pusha
cmp
cs
rcr
ret
insl
inc
push
push
pop
inc
pusha
test
pop
pop
xchg
test
daa
mov
out
or
jl
mov
mov
iret
in
popa
out
ficoml
jns
cs
adcb
enter
cs
sbb
push
cltd
adc
ja
dec
sub
call
adc
call
inc
lods
js
aaa
enter
push
sbb
leave
int3
jne
jns
les
push
push
out
es
dec
imul
lcall
ja
sub
and
pusha
rcrb
xor
out
mov
xchg
leave
enter
and
inc
nop
dec
mov
loopne
test
mov
push
in
and
adc
pop
inc
mov
dec
in
mov
xlat
and
es
icebp
or
daa
jns
ret
fwait
cld
rclb
push
sub
pop
testb
xor
int
fisubs
dec
jb
mov
and
dec
nop
pop
cwtl
dec
jb
mov
jb
leave
adc
push
es
lods
bswap
leave
leave
leave
movsb
pushf
xchg
mov
stos
jl
int3
ret
lret
dec
in
mov
jmp
jno
sub
lods
cs
pop
pop
sub
out
jbe
lock
leave
push
scas
add
fdivs
adc
sbb
cld
scas
and
push
in
sbb
divl
jb
inc
add
jp
test
fldl
das
xchg
sti
fadds
es
in
push
rolb
and
loope
push
adc
push
mov
and
out
mov
fisubs
adc
inc
movsb
fmull
add
loopne
jp
je
pop
scas
mov
push
mov
in
or
xor
adc
dec
mov
xchg
pop
arpl
xor
in
ds
fmuls
pop
add
add
push
sbb
pop
dec
cmp
das
jmp
call
add
xor
sti
dec
ja
add
xchg
jne
fsts
jl
lret
sbb
in
jo
jo
cmp
fcoms
daa
push
add
jo
nop
data16
mov
adc
sbb
and
dec
cmc
loopne
stc
or
sbb
into
test
cli
lcall
push
sbb
es
pushf
jg
adc
mov
adc
ss
cmc
mov
and
adc
push
xchg
xchg
fmulp
rolb
xor
and
inc
push
cli
cmpsl
scas
cmp
add
lret
and
push
or
fs
add
and
movsl
and
sbb
sub
pop
pop
jmp
push
fsubrs
push
jecxz
inc
sti
push
pushf
fstl
inc
rcrb
inc
jmp
testl
sub
mov
test
popa
and
xchg
push
cmp
nop
es
inc
rorb
xor
sbb
dec
mov
dec
and
movsb
pusha
adc
sar
popf
outsl
adc
pushf
add
dec
or
ja
mov
xor
or
nop
inc
push
dec
push
movsl
sbb
mov
aas
push
sbbl
sbbl
fisubrs
push
xchg
insb
or
adc
or
dec
addr16
or
cwtl
xor
pop
imul
js
push
and
stc
and
add
inc
in
adc
and
test
sub
and
movsl
hlt
sub
cmp
jbe
and
jb
adc
outsl
test
inc
push
mov
lock
call
out
loopne
cmp
jge
and
lods
mov
fsubrs
cmp
ja
fcomps
pushf
xorb
and
inc
push
push
stos
iret
rcrl
push
ret
shl
cmpsb
clc
jge
or
and
mov
sbb
xor
scas
jb
dec
inc
mov
cmp
shlb
loopne
cli
cmc
xchg
xor
push
xor
into
or
or
and
push
push
jns
hlt
loopne
mov
jl
xchg
cwtl
sbb
add
addr16
jecxz
adc
or
call
xchg
mov
pop
stc
jmp
loop
pop
andb
hlt
dec
sub
or
or
mov
pop
sbb
or
call
pop
fisubl
add
pminub
lahf
cmc
jne
cmp
loopne
push
movsl
stc
xor
sbb
jl
cli
pop
add
dec
or
cmp
ds
or
xor
push
dec
ret
ds
repnz
jno
into
jno
mov
dec
push
fcompl
add
jne
iret
xor
outsl
enter
enter
aam
loopne
pop
push
pop
mov
pop
pop
push
stos
jmp
fisubs
lcall
js
int3
inc
inc
dec
pop
rcll
test
inc
mov
sub
push
add
iret
adc
rcll
pop
shl
scas
sbb
mov
adc
stc
cmc
ljmp
popa
mov
cmpsb
add
inc
pop
cmc
clc
into
sbb
sbb
cltd
dec
and
adc
pushl
mov
sbbl
sbb
cmp
sbb
xor
mov
fs
fcoms
pop
ljmp
fcmovne
fidivs
add
leave
or
ficoms
addl
rclb
push
xchg
fwait
xchg
inc
je
mov
dec
call
pusha
and
dec
das
xorb
test
idivb
cmp
aas
sti
mov
xor
mov
rclb
inc
cmp
jl
cmp
mov
add
jmp
ds
scas
pop
or
mov
bnd
sub
push
xchg
sub
sub
mov
mov
dec
and
pop
rol
xchg
jmp
xor
mov
jbe
push
sbb
daa
popa
jne
or
push
mov
xor
mov
jmp
pop
out
int
stc
cmp
adc
push
in
rorb
jp
rorl
push
scas
pop
insb
cmp
pop
cmp
in
xchg
fsts
fisttpll
loope
cmp
mov
cmp
es
sub
cmp
adc
xchg
repnz
adc
or
dec
sub
adc
fsts
nop
inc
pop
sarl
call
aam
imul
cmp
adc
sub
pop
cmp
loope
rolb
sarb
and
mov
add
arpl
adc
cli
adc
call
sbb
add
test
jmp
je
std
inc
or
in
cmp
xchg
fs
mov
lret
js
movsl
push
jae
pop
mov
ljmp
sbb
in
cmp
sub
sub
add
lods
add
adc
mov
popa
push
push
les
dec
sti
add
mov
adc
pop
rcrl
xor
pop
and
sub
test
mov
test
jne
lods
or
cmpsb
add
push
sbb
fldl
scas
jne
cltd
pushf
add
sti
mov
pop
repnz
scas
clc
push
cmp
rcrb
and
cmpsl
mov
call
cld
mov
add
dec
ja
xchg
mov
mov
mov
lods
jne
mov
call
pop
cltd
or
out
sbb
cwtl
or
loope
cmp
xchg
jno
jle
xchg
inc
subl
and
dec
xchg
push
addb
ds
scas
cmp
or
xchg
sub
jl
xchg
jg
sub
aad
std
fcmovnbe
xchg
xor
mov
inc
div
scas
push
mov
cwtl
push
push
test
adc
adc
jnp
inc
stos
jno
aam
mov
addr16
in
mov
sbb
xor
push
into
lret
add
sahf
push
and
inc
les
cld
loopne
add
lods
andb
dec
mov
xchg
ja
xor
loop
push
push
sub
jae
lea
enter
add
es
or
lea
inc
mov
mov
push
or
loop
or
movsb
mov
push
mov
adc
ss
sti
outsb
dec
or
repz
jbe
mov
mov
mov
lds
pop
fbld
jmp
push
pop
mov
daa
push
and
jmp
and
orl
pop
jmp
jne
in
fadd
arpl
adc
bound
pusha
pop
sbb
mov
sub
ret
in
mov
adcl
xor
ljmp
mov
mov
aas
pop
lret
adc
dec
xchg
in
ret
lods
mov
mov
out
ja
push
add
push
cltd
jb
or
ret
dec
stos
and
stc
mov
xor
cmp
fildl
xchg
notb
xchg
lock
or
addl
pusha
push
pusha
cmc
dec
in
mov
dec
inc
or
push
jo
ds
imull
cwtl
jp
insb
xor
and
inc
cmp
jae
mov
xor
xor
pop
mov
add
jmp
jl
sbb
lret
movsb
adc
xor
mov
pop
incb
jne
test
in
fldl
push
fsubl
mov
es
mov
pop
xchg
push
pop
cmp
pop
fwait
sbb
das
and
mov
adc
je
fnstenv
xchg
pop
dec
push
pop
add
jmp
cmc
xchg
inc
push
leave
inc
push
adc
cmp
lahf
push
sbb
add
push
mov
pop
lods
add
adc
push
sub
fistps
loope
pop
add
sbb
inc
pop
sbb
mov
or
mov
lret
rcrl
mov
jns
sub
inc
pop
jp
cmp
sub
mov
xor
cmp
xor
popa
pusha
dec
xor
xlat
push
xchg
or
and
push
inc
or
add
mov
cmp
xlat
in
and
xchg
out
dec
cmp
dec
dec
out
mov
inc
loop
cmp
mov
pushf
sbb
or
jne
xchg
or
adc
lahf
mov
dec
loopne
xchg
rcrb
pop
or
add
or
and
fs
pop
repz
inc
and
test
movsl
xlat
fstl
and
inc
or
js
adc
jne
or
mov
cmp
xor
lcall
push
test
imul
push
inc
push
in
sub
int
dec
add
inc
inc
aad
and
pop
rcrl
push
mov
cmpsb
fimull
xchg
aad
cmpsl
pop
mov
dec
aas
xor
or
movl
or
cs
add
jmp
adc
jb
popf
pop
and
add
add
xlat
orl
fisttpl
mov
ss
aas
add
mov
movsb
lret
push
sbb
dec
or
movsl
pop
out
xor
das
push
adc
aas
ret
clc
aaa
inc
mov
dec
and
add
pop
daa
add
loope
push
fildll
cmp
in
mov
iret
push
jne
sbb
scas
movsbl
lods
cmpsl
movsl
cmp
gs
mov
or
lods
cmp
outsl
and
dec
and
ss
and
or
pop
shr
in
mov
testb
mov
pop
jge
mov
xor
xorl
inc
rcll
addb
sbb
mov
or
jmp
loopne
xor
or
push
add
enter
into
and
or
addr16
xor
dec
xor
dec
sub
insl
push
sub
cmp
repnz
mov
pop
mov
adc
mov
sub
and
pop
movsl
in
pop
adc
cmp
insb
adc
and
das
lea
mov
sbb
or
stos
mov
adc
xchg
dec
add
lods
imul
inc
mov
inc
fwait
xchg
add
fwait
jo
stos
cmp
xchg
psrad
push
push
mov
sbb
lods
add
popa
adc
inc
adc
in
mov
jae
mov
mov
es
sbb
sti
es
add
inc
movsl
adc
sbb
jno
or
xchg
sub
lahf
push
or
dec
xor
fstps
pop
nop
mov
pop
gs
cmp
scas
or
cmpsl
movsl
in
mov
jo
in
sarl
mov
test
and
sub
je
inc
aam
mov
enter
sbb
ret
mov
xor
lods
daa
dec
cmp
sub
dec
and
ja
add
jl
mov
cmp
out
sbb
rorb
fbstp
leave
adc
push
add
xor
arpl
aad
jp
and
xchg
push
add
adc
push
dec
call
pop
enter
cmpsl
and
dec
adc
add
movl
test
les
pop
add
mov
sub
mov
mov
or
clc
stos
mov
add
rorl
xor
notl
push
dec
es
push
cmp
ja
add
addr16
sbb
cmp
mull
leave
jecxz
stos
adc
jae
sbb
mov
lret
leave
sub
xchg
sub
or
mov
fdivrs
xlat
jl
ret
enter
pop
jbe
filds
dec
pop
sbb
inc
mov
hlt
pop
inc
mov
in
sbb
xchg
je
push
sbb
ret
pop
and
or
sub
or
add
xor
mov
loopne
adc
pusha
subb
dec
and
add
sub
pusha
adc
inc
push
les
xchg
sbb
enter
mov
add
jo
add
push
test
add
adcb
pop
aas
push
subl
mov
inc
shll
mov
movsl
andl
sub
out
popa
adc
movsl
add
gs
jl
jmp
jmp
mov
or
cs
test
cmp
dec
mov
or
or
test
or
dec
inc
mov
adc
dec
push
subl
sub
xchg
mov
and
mov
lret
enter
imul
mov
xor
add
pop
dec
and
aas
xor
out
push
out
lods
cld
sbbb
push
mov
mov
leave
testl
cld
incl
addb
add
shrl
sbb
loopne
xchg
shlb
push
add
push
and
movsl
mov
add
dec
outsb
push
inc
cmpsl
mov
popf
mov
mov
incl
jo
push
xor
fnsave
and
xchg
pop
xchg
jbe
test
inc
cmp
jp
daa
sbbb
nop
fcmove
xchg
movsb
shrb
dec
sar
or
push
xor
or
test
sub
dec
jg
aaa
jnp
nop
or
ds
cmp
andl
in
popa
imul
pop
push
mov
clc
inc
nop
data16
pop
xchg
aas
or
cmp
jg
sbb
cmpsb
in
orb
mov
inc
dec
lods
arpl
int3
add
lea
jo
push
mov
xchg
push
or
mov
dec
int
pop
psllw
ja
imul
adc
dec
rolb
add
sbb
xchg
fsts
in
and
xchg
stos
js
push
sub
cmp
sub
push
add
ss
push
mov
dec
sub
xchg
push
lock
mov
in
cmp
jb
jmp
xchg
cmp
fists
add
xor
les
add
inc
mov
mov
js
pop
mov
mov
mov
gs
or
sbb
add
outsl
xor
flds
mov
movsl
cmc
add
push
push
dec
inc
add
or
dec
add
push
sbb
pop
mov
add
jo
adc
mov
dec
jne
or
xchg
pop
pop
push
das
dec
test
mov
repnz
xchg
insb
jae
push
jbe
cmp
or
loopne
mov
and
or
mov
pop
sbbl
sbb
out
lds
mov
leave
pusha
mov
mov
scas
push
xor
or
decb
inc
pop
cs
push
inc
lods
inc
cwtl
clc
inc
pop
adc
mov
std
cwtl
test
push
call
lock
cld
jb
popf
mov
push
inc
add
call
inc
or
pop
sub
les
shll
bound
push
sarb
cmp
cmp
mov
sbb
push
dec
or
add
jnp
int3
and
hlt
inc
pop
mov
mov
push
pop
mov
leave
dec
add
xor
push
or
add
sahf
pusha
lea
add
cmp
xchg
ss
cmp
cmp
or
add
test
push
push
mov
adc
dec
daa
pushf
lret
testl
imull
faddl
lea
stos
mov
dec
push
div
push
jnp
xor
and
push
fld
push
sbb
pushl
test
cmp
mov
mov
ret
stos
jmp
inc
adc
mov
ret
insl
jnp
pusha
scas
mov
mov
les
cmp
mov
xchg
rcrb
je
cmp
rolb
cmp
sar
sahf
rolb
jmp
popa
fwait
loopne
xor
dec
and
inc
call
fxch
lcall
push
push
add
data16
dec
lea
add
cmpsl
imul
fsubs
lea
mov
or
sbb
iret
in
aas
add
inc
jmp
pushl
adc
cmp
add
pop
dec
addr16
add
and
xor
inc
lods
push
jle
aam
imul
adc
mov
testb
and
test
xchg
aam
fcomps
fimull
out
ret
xchg
shrb
loope
ret
mov
mov
fwait
xor
shrb
sarl
push
or
dec
aas
push
mov
fisubrl
adc
nop
jo
pop
loope
and
loopne
in
cmp
adc
mov
jo
ret
mov
cwtl
loopne
loopne
loopne
mov
sub
xor
jbe
mov
or
add
jmp
mov
call
call
js
sub
leave
ljmp
lods
insl
fdivl
clc
leave
and
mov
xchg
push
and
and
push
inc
ss
sub
jbe
faddl
or
push
push
rorl
popf
outsb
dec
cmc
ljmp
mov
fiaddl
cmpb
cmp
mov
push
sbb
push
adc
fists
pop
incb
aad
loopne
jl
pushl
ljmp
pop
addl
adc
fstl
and
movsb
xor
sbb
ss
cmp
icebp
stc
inc
lock
fistpl
push
out
push
push
inc
adc
insb
add
popf
pop
xor
lock
jbe
push
filds
lcall
or
es
add
push
les
sbb
jns
add
rorl
repnz
cmp
inc
and
cmp
pop
xor
or
mov
add
in
inc
and
popa
mov
cli
adc
sarb
xchg
icebp
ret
push
ljmp
shr
mov
xchg
rolb
cmpsl
xor
push
push
lahf
adc
add
mov
out
push
or
in
dec
movsl
push
test
pop
adcb
loopne
mov
popf
cmp
pop
andb
out
lret
fbstp
ss
add
cld
dec
xchg
cli
inc
add
testb
lods
ljmp
jno
push
adc
push
and
ret
mov
mov
jbe
push
mov
push
pop
ret
xor
pop
aad
jbe
int
dec
add
inc
xchg
mov
pop
pop
jmp
add
pop
jmp
mov
js
shrl
ret
mov
mov
cmp
xor
push
leave
sub
enter
adc
sub
je
pop
cltd
repz
sbb
inc
dec
pop
pop
adc
movl
pop
movsl
and
adc
fs
out
sub
inc
add
outsb
and
fnstsw
subl
xor
add
push
xchg
or
cltd
movsb
fucomi
cmp
mov
adc
add
insl
push
sub
or
les
rorb
push
lock
rol
lret
xchg
dec
in
xchg
lock
push
push
and
mov
idivb
adc
orl
push
in
mov
adc
mov
mov
inc
jb
cld
aam
push
xor
rcrl
dec
leave
loopne
xor
sbb
in
aas
adc
jbe
push
or
fstpt
inc
cs
insl
ret
adc
push
push
mov
push
in
xor
lds
add
push
cmpsl
mov
test
jle
icebp
adc
pop
xchg
into
out
mov
mov
adc
cmpb
push
or
dec
sarb
dec
hlt
jne
mov
push
xor
sar
inc
xchg
in
lods
arpl
sbbl
sbb
jb
xor
iret
nop
or
js
pusha
subl
orl
popf
mov
mov
in
pop
clc
in
lcall
pop
test
loope
test
test
mov
pop
sub
out
mov
stos
adc
xchg
pop
lcall
popa
pusha
les
add
sub
orb
enter
das
lret
rep
out
xor
enter
and
aam
movsl
push
pop
cmp
mov
adc
dec
leave
mov
sub
ror
repz
movb
int
dec
test
mov
cmpsl
cmpsb
push
pushf
jmp
cmc
and
xchg
adc
test
mov
jge
outsl
push
stos
and
mov
cmpl
xor
add
sbb
movsl
out
lea
js
jmp
inc
jne
loopne
sbbb
mov
add
jne
adc
ss
jle
push
jmp
fldl
or
sbb
cmp
stc
pop
mov
test
and
add
jno
test
dec
shlb
adc
sbb
dec
jno
nop
mov
add
add
stos
mov
add
iret
adc
cmp
dec
addl
cmp
cmpsl
ss
sbb
sbb
in
inc
or
sub
scas
jge
push
stos
or
mov
sbbb
bound
jl
pop
cmp
out
pop
mov
mov
aas
jle
mov
or
gs
dec
in
mov
cmp
add
inc
lahf
mov
rcrb
inc
inc
add
fisubrs
mov
or
mov
sub
cmp
fcomps
pop
pushl
mov
xor
shll
das
adc
inc
add
pop
sbb
daa
cmp
ror
dec
sbb
add
repz
fs
inc
cmp
mov
cmp
dec
push
jne
adc
add
popa
or
cmp
and
ret
inc
daa
jb
mov
push
dec
lds
mov
call
aas
push
xor
shr
adc
mov
jae
adc
inc
jnp
aaa
cmp
xlat
mov
aad
sbb
add
push
hlt
xor
mov
es
cmp
lock
xchg
xor
cmp
in
adc
cmp
jl
daa
fnsave
xchg
xchg
push
adc
lods
mov
jne
loopne
fs
add
loopne
adc
sub
ljmp
and
mov
mov
xchg
clc
sub
cmp
mov
testb
cmp
mov
test
fmull
mov
sub
mov
aaa
fwait
jg
dec
rcrl
push
hlt
and
xor
mov
cmp
dec
inc
sbb
push
pop
pop
inc
pop
insb
jbe
scas
sarb
repnz
push
clc
and
pop
xlat
push
imul
or
fcoml
or
jnp
sahf
cmp
sbb
fidivrl
popa
sub
and
sbb
or
or
add
and
push
and
push
iret
addl
pop
je
xor
rolb
test
pusha
punpckhbw
xchg
sbb
push
enter
rcl
mov
or
mov
or
push
add
loopne
mov
mov
cmp
sub
xchg
cmp
adc
rcr
popa
pushf
sarb
data16
add
sahf
mov
push
repz
scas
sbb
lahf
add
in
incb
mov
int
cmp
push
cmc
ss
imul
addb
movsl
rorl
fwait
push
cmp
jbe
mov
call
adc
test
mov
in
mov
mov
into
sahf
loop
vmread
push
and
pop
fimull
js
mov
and
loope
push
repz
mov
pop
dec
pop
or
xchg
push
sub
jl
cli
mov
mov
adc
adc
adc
cmp
out
cmp
insb
std
pop
jp
adc
int3
mov
pop
cmp
dec
movsb
xor
push
xchg
in
and
pop
daa
cmp
cmp
gs
pushf
mov
mov
outsb
hlt
lret
sub
or
mov
fnstsw
adc
aam
jns
push
cmp
xchg
dec
sbb
adc
in
add
push
loopne
add
lods
adc
mov
bound
ljmp
test
hlt
or
push
jle
adc
cmpb
stos
xor
inc
sbb
imul
mov
pop
scas
mov
cmp
dec
outsl
cld
mov
and
add
hlt
fwait
sbb
mov
movsl
movsw
push
loope
add
cld
movsb
mov
or
xchg
dec
or
mov
lahf
adc
ljmp
or
mov
test
jg
out
ffreep
sbbb
push
lea
cmpb
pop
cmpsb
add
hlt
xor
in
test
mov
add
adc
inc
jg
cmp
lret
add
movsbl
xor
repz
ss
push
lods
add
jl
jbe
jb
and
push
cld
je
ret
adc
and
or
sbb
pop
add
mov
dec
mov
and
mov
xchg
cmp
jo
shrl
mov
xor
jge
nop
cli
xor
mov
or
or
subl
or
fs
and
cmp
jl
adc
sbb
movb
mov
pop
xor
ret
ret
inc
sbb
fldl
cmc
ss
or
mov
add
shrl
lock
mov
inc
test
mov
clc
dec
xor
lea
ljmp
mov
nop
sbb
jbe
or
in
movsb
push
add
add
in
in
push
pop
or
jae
jae
or
jnp
or
jbe
jmp
or
jae
push
jmp
por
jmp
adc
pop
jae
jae
adc
push
adc
dec
adc
dec
adc
jae
push
jmp
pop
jmp
sbb
xor
jae
jae
jmp
sbb
es
and
jae
push
jmp
pop
jmp
and
or
cmc
jo
and
add
adc
fimull
push
or
outsl
push
mov
cwtl
aad
loop
out
in
inc
xchg
inc
jg
dec
cmp
repz
pop
data16
jbe
cmp
repz
mov
iret
popf
mov
cmp
repz
rol
iret
repz
repz
fsubp
call
in
repnz
add
push
or
and
add
testb
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
dec
dec
mov
and
or
add
sbb
or
or
inc
pop
addl
repnz
out
pop
fs
bound
add
idivl
mov
js
nop
fstpt
insl
aas
mov
mov
js
xor
mov
jne
pop
fdivs
sub
in
xchg
mov
sbb
xor
xlat
lea
xchg
rcrl
or
add
sbb
lock
sub
mov
mov
stos
push
inc
cmp
jbe
fidivrs
sbb
imulb
push
sbb
sbb
les
daa
or
jo
sarb
pop
icebp
sti
push
rcrb
testl
add
lds
pop
mov
popf
cmp
loope
loope
lods
lock
xor
lret
xor
lods
add
inc
mov
aaa
pop
xor
aad
and
outsb
xor
xchg
sub
pop
push
mov
sub
out
lret
nop
pop
jp
push
inc
enter
xchg
cld
dec
xor
xchg
push
and
sti
add
add
adc
inc
enter
xchg
xchg
or
xor
dec
xor
xchg
pop
cmp
jl
divl
dec
jne
lods
inc
icebp
and
cmp
dec
lret
nop
and
lods
inc
push
ljmp
fstpl
sbb
add
add
add
jmp
add
inc
loop
pop
xor
cmpsb
mov
daa
outsb
or
mov
cmp
imul
dec
repnz
mov
xor
stc
xchg
push
cmp
dec
test
addr16
mov
fmuls
or
jb
mov
or
cmp
xchg
aam
adc
or
jg
loop
cmc
fwait
push
stc
push
adc
rol
loopne
aaa
cli
and
inc
push
sti
popf
hlt
mov
notb
xor
lods
push
ss
push
insb
mov
pushf
xlat
sbbl
add
movsb
popf
inc
in
push
jne
shlb
rclb
loopne
mov
sarb
jne
and
mov
aam
xchg
pop
inc
jmp
scas
insl
or
out
add
sbb
xor
inc
push
aaa
ljmp
xor
mov
inc
mov
es
loopne
sbb
test
inc
add
push
insb
loopne
addr16
gs
push
test
out
sbb
mov
dec
inc
insb
or
mov
cld
push
mov
je
je
xchg
lock
adc
cmp
push
inc
rcrl
pop
jecxz
adcb
clc
adc
cmp
cmp
mov
nop
sub
insb
add
sub
or
jnp
adc
adc
popa
adc
loopne
mov
pop
and
mov
in
cs
xor
mov
popf
adc
add
sub
nop
xor
xchg
push
je
push
ljmp
add
push
cmp
add
add
xor
clc
enter
cmp
or
ss
insl
incb
jo
mov
shlb
add
mov
mov
movb
dec
xor
fldl
lds
pop
mov
or
in
das
cmp
cli
add
jecxz
xchg
mov
xorl
dec
lcall
jmp
les
add
cltd
scas
jbe
push
inc
and
inc
add
lret
cmc
mov
push
push
rorb
enter
cltd
push
popa
int3
sbb
in
shll
enter
dec
lods
dec
stc
mov
insb
mov
rolb
cmp
inc
pop
inc
jecxz
adc
andl
loopne
stos
adc
int
cmp
jbe
mov
sbb
popa
imul
lock
xor
ds
enter
insl
add
andb
jmp
xchg
adc
inc
les
pop
pop
push
repnz
inc
sub
xchg
xchg
dec
fsubs
dec
xor
incb
fdivl
push
add
bnd
nop
cld
mov
mov
loopne
cmp
jo
adc
mov
loop
in
negb
lock
enter
add
loopne
or
and
loopne
push
dec
leave
and
repnz
enter
add
enter
xor
and
add
adc
add
sbb
cmp
les
add
push
push
add
pfrcp
pop
push
je
mov
cltd
push
or
pop
xor
add
push
push
mov
add
adc
movsb
mov
out
mov
pushl
ljmp
ss
and
popf
fnstenv
dec
pop
and
and
sub
jnp
es
in
xchg
pop
jns
sbb
or
fiaddl
add
das
pushf
or
fwait
xlat
push
and
xchg
and
adc
pop
mov
cmp
jbe
nop
jnp
mov
sub
sub
shlb
test
xor
add
test
xchg
stos
shl
add
lods
push
lock
pop
ficoms
movsl
xlat
adc
push
jg
test
shrl
pop
test
ja
ret
xor
pusha
ret
sub
pop
lea
fisttpll
or
js
out
ja
sub
in
add
pop
imul
arpl
add
jle
popf
cmp
cmp
sti
cmp
dec
pushf
push
or
daa
push
mov
stos
cmp
or
add
pop
xor
jae
push
push
xchg
dec
mov
xchg
push
push
stos
pop
ja
ret
fs
in
jmp
pop
jo
fwait
xorb
xor
inc
xchg
fbstp
jp
sbb
or
out
push
jb
push
mov
cmp
inc
pop
push
ljmp
repnz
jmp
mov
jle
pop
jge
dec
cmp
mov
push
pop
jmp
cmp
je
sti
or
adc
fisubl
push
jns
inc
lcall
shlb
leave
dec
imul
ja
mov
cli
sbb
push
adc
xchg
in
or
lcall
lds
pop
adc
lock
cmp
jbe
inc
fs
pushf
and
inc
cmp
sbb
popf
adc
cmp
fildl
cmp
cmp
push
add
icebp
imul
sub
lods
cmpsl
dec
iret
pusha
or
pop
cmovs
daa
in
xor
jl
xorl
insl
sbb
xchg
add
xchg
and
pop
cmpb
and
and
loope
inc
sub
sbb
psraw
push
jl
and
jle
mov
and
sbb
add
inc
mov
adc
mov
dec
rcrb
lcall
xor
mov
sub
shl
pusha
or
sub
pop
xor
ret
cmp
push
mov
or
mov
push
xor
and
or
leave
xchg
xor
sbb
xor
and
adc
lea
dec
inc
shrb
repz
adc
loope
jl
push
inc
pop
sbb
sub
loope
popa
inc
frstor
or
ds
inc
add
outsb
sbb
dec
adc
inc
cmpsb
enter
addb
mov
es
nop
xchg
aas
jo
mov
pushf
mov
xchg
dec
test
cmp
add
fldl
lahf
mov
rcrb
push
les
enter
pop
aam
cltd
movsb
xor
fsub
in
sbb
dec
call
jne
inc
and
cltd
or
push
rcpps
adc
setge
cmpb
adc
lea
push
mov
test
mov
xor
je
sub
jbe
enter
or
push
add
or
jl
sub
pop
popa
repnz
lea
add
inc
subl
or
jno
or
sbbl
fcomi
int3
or
addb
cmp
mov
lods
sub
inc
and
jne
cmp
aaa
adc
pop
jl
jmp
out
push
ret
das
or
enter
loop
hlt
cmp
mov
mov
cmp
je
xchg
dec
clc
and
and
mov
imul
pop
jmp
rol
loope
in
mov
in
mov
and
nop
int3
test
xor
sub
lds
cmp
daa
insb
je
js
xchg
int
adcb
jmp
fwait
das
cltd
dec
lds
or
xchg
xchg
sub
or
cmpsb
call
xor
decl
hlt
push
pop
cmp
jbe
cmp
mov
jmp
cmp
jle
cld
nop
add
es
lock
insl
jmp
mov
pop
adc
hlt
fildll
fistpl
sbb
mov
decb
pop
mov
loopne
outsl
dec
cli
xor
mov
cmp
out
fistps
lock
pop
sub
sub
js
ljmp
cmpb
jp
push
cmp
je
cmp
jne
cmp
xchg
clc
push
inc
pop
inc
push
xchg
push
xchg
dec
jo
cli
sti
sbb
mov
mov
addb
cmp
dec
jg
lock
push
clc
mov
adc
loopne
ljmp
enter
and
sbb
xlat
dec
mov
sub
ret
cmpsl
mov
add
inc
add
or
hlt
adc
push
cltd
sbb
add
and
dec
call
loop
outsb
les
sbb
cs
push
xchg
movsb
push
pop
bound
xchg
add
jmp
call
mov
or
push
add
xor
mov
pop
add
push
jnp
mov
in
daa
dec
fdivrl
ss
mov
mov
add
push
clc
add
sub
sub
call
mov
pop
xor
adc
dec
aas
jne
push
test
mov
adc
cmp
sbb
adc
pop
mov
sbb
mov
mov
fmull
test
dec
loopne
mov
pop
subb
dec
ficoml
into
pop
insl
push
push
imul
call
orl
inc
mov
xor
mov
pop
sbb
jmp
outsb
addb
pusha
or
loop
loope
sbb
push
add
or
or
jne
lds
fldl
xchg
and
shrl
sub
ret
sub
inc
pop
mov
mov
dec
xor
push
inc
pop
test
add
or
push
hlt
inc
add
shrl
mov
insb
mov
or
test
mov
mov
mov
mov
sar
sbb
mov
aad
into
addr16
rol
mov
sbb
mov
dec
sbb
lret
push
repnz
add
pushl
add
enter
popf
add
inc
pop
inc
mov
push
inc
cmovle
add
and
imul
test
jmp
loope
add
jle
sub
mov
mov
sets
je
mov
push
psrlw
repnz
mov
xchg
jge
dec
xchg
dec
push
lahf
pusha
sbb
hlt
jmp
lods
jp
push
dec
cmp
leave
adc
js
jecxz
and
lock
mov
xchg
xchg
xchg
add
mov
or
mov
clc
xchg
and
push
cmp
xor
rcll
inc
sub
lahf
aaa
mov
jbe
in
sub
jmp
call
insl
dec
mov
xor
loope
cltd
stos
inc
jle
or
rcl
mov
cmp
loopne
je
pop
pop
popa
daa
pusha
mov
pop
in
testl
push
pop
inc
sub
push
fcoml
into
xor
or
outsb
dec
rolb
jne
mov
insb
ss
jne
addl
pop
jp
pop
and
aam
adc
cmc
lahf
and
inc
adc
aas
adc
shrb
icebp
pop
inc
mov
outsl
aad
dec
inc
aaa
ja
or
jle
mov
and
aas
xchg
cmp
add
ja
popa
and
mov
lret
and
and
jo
sub
mov
push
mov
or
rcrb
adc
insb
mov
sbb
xchg
or
fimull
and
fwait
inc
xor
test
into
adc
repnz
mov
or
or
sbb
mov
dec
xor
rcr
lods
mov
pop
in
push
jbe
stc
inc
sub
inc
push
fistps
and
fcmovnu
test
inc
sbb
add
mov
fstl
out
cs
jge
push
int3
nop
xchg
xchg
and
push
stos
sub
je
clc
xor
push
push
dec
clc
fidivs
dec
push
sbbb
add
or
adc
faddl
fstl
fldz
fcomp
fnstsw
ret
or
push
cmp
or
int3
pop
fsubr
pop
faddp
je
add
aad
push
insb
testl
adc
cmpsl
fisubs
adc
pop
clc
dec
hlt
xor
rorb
xor
lods
mov
sbb
dec
lock
test
xchg
lock
xchg
mov
cmp
inc
in
clc
ss
add
sbb
jl
fcmovnbe
nop
push
push
in
sub
push
pop
sub
add
push
mov
fistpl
push
mov
mov
in
add
lds
into
add
cld
pop
cmp
insb
test
arpl
xchg
xchg
pop
imul
popf
cltd
or
incb
mov
call
imul
pop
pop
push
fldl
jl
xchg
lock
mov
sub
rclb
mov
int
cmp
shl
fimuls
sbb
rorl
enter
mov
jns
loopne
in
or
cmp
sbb
add
mov
cld
jbe
aaa
arpl
ss
sub
loope
mov
jmp
add
xchg
dec
outsb
stc
or
mov
lret
dec
cmp
sub
sbb
movb
loop
or
ffree
adc
fnop
sbb
negb
ret
pop
push
sub
addr16
xlat
movsb
add
inc
std
fcomps
mov
mov
push
mov
add
mov
pop
test
xchg
fistpl
push
pop
adc
sbb
push
test
or
jnp
inc
xchg
cmpl
arpl
jecxz
and
ret
cli
pop
movsb
inc
in
das
lret
adc
fcmovu
in
push
lret
sub
fldl
sti
inc
gs
pusha
add
add
add
or
aaa
add
lcall
in
and
push
cmp
je
inc
lahf
lret
cli
sbb
jb
pop
ja
cmp
sub
insb
or
dec
pop
xchg
out
lcall
add
push
lock
xchg
pop
xchg
xchg
add
adc
jnp
fmuls
push
add
adc
pusha
ret
mov
ret
gs
testb
jno
inc
adc
jno
mov
push
das
sbb
test
push
iret
clc
and
icebp
test
cmp
adc
mov
je
in
ja
or
in
les
test
jl
or
aas
jo
sbb
dec
in
sub
xchg
movsb
adc
xorl
fs
adc
in
shrb
and
out
dec
addl
push
push
sbb
and
sbb
mov
fucomp
gs
test
inc
pop
push
test
inc
shlb
jl
emms
jge
cmp
scas
xchg
push
shll
js
mov
mov
aam
adc
lods
adc
jae
rcl
sarl
add
or
imul
adc
pop
cmp
ja
pusha
add
adc
fstpt
insl
adc
je,pn
xor
push
jmp
stc
inc
or
cmp
or
fsubr
repz
and
mov
inc
cmp
sbb
sub
mov
leave
push
pop
adc
aam
cwtl
mov
xchg
cmpsb
xchg
int3
int
xchg
jo
pop
lret
arpl
or
sti
adc
repz
cmpb
cmp
jb
xor
sarl
jnp
add
aam
ja
outsb
popa
pop
jbe
or
dec
aas
dec
or
gs
fmull
dec
subb
jl
xchg
incb
cmp
pop
das
sub
mov
stc
or
jp
sub
or
sub
and
and
dec
jbe
outsb
and
out
test
ret
in
je
inc
in
enter
add
push
dec
cltd
test
push
pop
push
sbb
cs
mov
pop
and
pop
mov
loop
pop
daa
mov
push
call
or
shlb
dec
aaa
mov
inc
scas
scas
jmp
popa
and
adc
hlt
mov
inc
aam
mov
in
fdivp
xor
stos
mov
jl
seta
sarb
shlb
jl
add
pop
faddl
arpl
inc
in
inc
push
and
stc
lahf
jb
jle
call
cwtl
add
xlat
flds
movsb
gs
inc
lock
sbb
xor
ret
xchg
imul
xchg
into
ljmp
jne
imull
xchg
xor
inc
sbb
mov
lock
jbe
push
flds
clc
stos
pop
gs
add
jle
out
add
sub
int
rep
adc
call
subb
test
lods
in
mov
shll
push
inc
addb
leave
pop
push
lock
addr16
clc
jno
cli
cmpsl
add
into
les
dec
push
lock
xchg
adc
dec
les
test
push
dec
lods
and
mov
loope
pop
imul
aad
push
test
es
enter
das
lret
dec
push
and
out
arpl
adc
cmc
sub
aam
or
pop
je
cltd
inc
or
cmp
cmp
xor
jb
call
loope
inc
add
cmp
xchg
clc
or
sub
mov
dec
mov
pusha
in
aam
sahf
je
add
xchg
adc
imul
or
sbb
subb
es
dec
mov
cmp
iret
or
mov
push
sub
mov
pop
cs
orb
and
mov
ds
mov
jge
dec
fs
sub
sub
sub
dec
inc
jecxz
cltd
outsl
xlat
std
jmp
push
in
mov
mov
sub
xchg
mov
xchg
sub
mov
call
add
or
xchg
je
inc
enter
in
daa
push
push
jl
dec
sbb
dec
dec
les
sub
inc
fs
jno
ljmp
sbb
xor
ret
xor
aad
loop
mov
jns
push
push
cmp
imul
ret
inc
int3
xor
or
jmp
sbb
popf
add
add
loop
mov
push
or
lcall
pop
add
mov
dec
inc
add
mov
xor
xor
enter
jno
dec
jo
mov
adc
or
pop
pop
push
push
xchg
mov
jae
and
jmp
or
mov
cs
scas
inc
rclb
es
inc
testb
push
jo
dec
call
push
mov
stc
pop
notl
sub
pop
test
mov
fsubs
add
push
dec
imul
add
push
jp
rcrl
mov
cmp
xor
repnz
cltd
sub
add
fildll
add
shlb
xchg
aad
xor
frstor
mov
adc
in
push
add
daa
cmpsl
add
in
dec
and
push
insl
je
xor
out
addb
pop
xor
mov
mov
jle
xchg
xchg
dec
das
movb
push
jg
int3
mov
aam
inc
mov
testb
dec
sub
lea
xor
dec
push
mov
or
loopne
fsubl
ret
test
test
or
pop
adc
incl
out
pop
out
es
xchg
push
push
sub
push
dec
shrb
push
shlb
js
mov
pop
mov
push
sub
hlt
mov
mov
aam
push
pop
mov
push
mov
add
out
mov
inc
mov
or
lret
add
roll
add
scas
pop
hlt
or
or
inc
popa
loope
leave
adc
sbb
repnz
loop
cmp
sbb
enter
adc
in
jbe
dec
or
sbb
pop
lock
xchg
es
pop
lahf
rcr
sti
or
or
test
fcoms
enter
test
push
xor
fs
ret
into
orl
jnp
inc
or
mov
xchg
cmp
add
mov
inc
xor
pop
jo
test
movsl
movsb
and
adc
and
sub
sub
addb
dec
je
or
out
and
ds
pop
inc
sbb
dec
insb
dec
int3
sbbb
shrb
jo
xchg
gs
movl
js
mov
jae
js
movsl
push
sub
push
adc
cmpsl
adc
inc
dec
sub
push
leave
icebp
jmp
cmp
sub
adc
rcrl
movsl
mov
adc
outsl
dec
add
push
add
push
lcall
jb
cld
pop
push
out
push
sbbl
or
movl
inc
push
and
enter
add
adc
dec
mov
pop
sub
pop
insl
dec
lock
cwtl
movsb
int3
or
adc
pop
jmp
cld
and
fwait
cli
in
andb
xchg
dec
in
mov
adc
adc
mov
mov
push
or
movsb
push
stos
hlt
inc
push
arpl
ret
sbb
insb
ret
ljmp
push
sub
xchg
sub
xchg
imul
jnp
dec
jo
sbb
cmp
idivb
mov
or
popa
fdivl
dec
mov
sbb
mov
add
push
push
pushf
and
dec
mov
addl
ss
inc
imul
aam
je
es
push
in
mov
rcll
mov
clc
movsl
or
out
sahf
adc
loopne
outsl
adc
mov
dec
lcall
push
call
lea
or
add
add
jl
mov
sub
add
mov
jns
mov
inc
push
sahf
mov
inc
mov
sub
data16
ret
cmpsl
into
push
js
push
repnz
pop
xchg
push
pop
mov
nop
jmp
push
adc
mov
incb
shlb
and
jl
pop
xor
sbb
pop
test
sub
sub
add
test
and
jns
mov
dec
jmp
iret
jecxz
push
jmp
pusha
jne
fisttps
movb
pop
out
or
add
jp
add
cwtl
or
pop
or
mov
and
xor
rclb
lahf
ja
lods
orl
cmp
lret
jecxz
jne
lods
sub
lock
scas
mov
mov
or
push
mov
sub
test
jl
push
dec
insb
movsb
imul
add
sub
hlt
shlb
cmp
cmp
sub
std
cltd
in
push
je
or
je
enter
nop
shr
arpl
sub
jne
mov
inc
mov
sti
add
mov
lea
xor
push
fs
fiaddl
inc
stos
jns
arpl
lods
enter
push
sahf
mov
mov
jo
push
stc
imul
jo
mov
mov
rcrl
inc
jmp
test
into
aaa
les
mov
jl
jl
jecxz
bound
xor
sub
pop
imul
cmpl
xor
or
pop
cs
nop
push
and
and
jbe
jl
shlb
je
push
movsb
and
arpl
scas
push
mov
xor
mov
mov
mov
lea
pushf
mov
movl
push
ljmp
push
xchg
push
mov
push
js
shll
incl
sbb
mov
mov
aaa
mov
sti
ficoms
mov
in
cld
pop
cmpb
jp
imul
insb
dec
nop
cmp
xor
sub
push
push
aam
xorb
jl
adc
ret
xchg
enter
mov
adc
and
push
add
mov
shl
xor
dec
or
cmpl
aam
ja
std
fcoms
mov
pop
shr
lock
or
push
or
and
and
add
cld
jo
lock
clc
rep
mov
inc
mov
sbb
adc
and
jle
pushf
push
out
jns
dec
or
pop
mov
les
jl
push
in
cmp
das
add
xchg
ja
mov
je
xor
in
xchg
push
lea
or
mov
or
enter
dec
mov
js
jbe
ficoml
mov
push
push
and
fnstsw
xor
pop
inc
pop
cmp
ffree
rorb
mov
sbb
mov
fidivrl
pusha
push
or
adc
sub
imul
aaa
pop
shl
test
pop
sub
xor
or
mov
movsl
pop
pop
in
mov
and
jl
push
mul
test
pop
pop
mov
ljmp
stos
fisubrs
cmp
xor
test
add
jns
pop
jecxz
push
loop
lock
sar
mov
mov
js
pop
sbb
or
in
roll
bound
push
inc
outsb
or
test
adc
sbb
pop
mov
loop
clc
inc
outsl
and
enter
xchg
cltd
adc
mov
push
and
push
push
into
sub
cs
gs
push
push
pop
iret
mov
xchg
dec
rcrb
xor
push
in
pop
out
shrl
sub
or
rcrb
loopne
sbb
sbb
mov
jnp
in
xchg
in
mov
das
int
inc
ds
das
push
lcall
or
mov
les
je
xchg
testb
jo
sub
rorl
add
scas
push
cmp
sti
adc
mov
call
cmp
xor
sub
out
rolb
int3
ret
jp
mov
adcb
rclb
aad
sub
adc
pop
sbb
cs
orl
and
xchg
push
hlt
jnp
stc
sub
push
cmp
push
add
ret
outsl
xor
cs
pop
xor
and
fmull
lret
jl
or
pop
cmp
nop
jne
add
data16
adc
mov
subl
mov
dec
dec
leave
outsb
jp
push
and
pop
mov
inc
push
test
xor
inc
sub
pop
push
leave
dec
cmp
mov
adc
mov
sbb
xchg
or
aaa
cmp
mov
xchg
or
ja
cmp
movsb
mov
data16
xchg
dec
fists
sete
xlat
cmp
ds
sahf
fs
xor
pop
mov
xchg
aam
inc
or
jno
enter
sbb
out
imul
xor
sbb
pop
and
cmp
mov
lods
mov
icebp
and
mov
call
hlt
xchg
loopne
negb
mov
xor
inc
insl
mov
push
mov
mov
cmp
or
cmc
xor
adc
push
dec
call
sti
xor
cmp
jg
mov
mov
fildl
cmp
or
push
add
jecxz
lea
out
clc
pop
cmpsl
mov
sub
adc
pop
hlt
es
ljmp
rolb
adc
addr16
outsb
push
mov
inc
sarb
mov
push
lcall
pop
shrb
std
push
cmp
jne
inc
and
xchg
testl
sub
inc
jecxz
jmp
add
mov
xor
int3
ret
mov
ret
or
xor
outsb
dec
jmp
test
inc
mov
add
xchg
repnz
or
addr16
push
sub
aam
xor
scas
aaa
imul
hlt
cmp
push
pop
and
or
inc
fucomi
pop
add
inc
dec
je
in
loope
sub
sbb
sub
xchg
pop
push
bound
jl
xchg
aam
pop
in
mov
push
es
xor
cs
pop
or
sub
lock
jb
push
cmp
test
fidivl
mov
movsb
sbb
and
ss
pop
addb
inc
mov
fwait
sub
push
lods
mov
aas
sub
frstor
out
cmpb
shll
add
mov
xchg
cli
and
les
jmp
enter
fs
cmp
adc
add
inc
jo
pop
inc
inc
daa
lahf
push
xor
test
mov
push
sbb
mov
dec
clc
or
je
pop
add
inc
fs
add
sub
mov
ljmp
mov
pop
cs
loope
or
sbb
xor
jmp
push
cmc
push
mov
rclb
pop
pop
fdivl
sbb
push
push
mov
or
adc
mov
mov
test
jnp
jg
outsl
mov
hlt
xor
inc
fcomps
out
sbb
pop
mov
add
pslld
add
cmpsl
cltd
in
inc
test
mov
cmp
das
call
sti
add
sbb
xor
aad
ja
scas
das
add
jo
xchg
xchg
xchg
jne
mov
jno
pop
mov
jbe
and
sub
push
dec
add
push
gs
mov
inc
cmp
ficomps
test
pop
sbb
pop
mov
ficomps
sub
ret
cmc
daa
sub
cmp
xchg
fidivs
add
and
cwtl
les
jl
je
insl
or
inc
dec
fisubrl
dec
ss
popf
xor
test
mov
mov
dec
pop
cmp
cmpsl
mov
decb
int3
sub
andb
and
int3
sub
int3
mov
mov
pop
jbe
divb
push
adc
mov
mov
push
mov
aad
and
shlb
call
add
xor
push
ror
int3
jbe
fnstsw
fcomps
jo
add
lahf
pop
adc
test
rcr
mov
cltd
lea
fcompl
add
or
insl
add
pushf
movsl
mov
adc
cltd
pop
pop
mov
clc
jnp
inc
in
cmp
mov
sub
cli
adc
xor
mov
pushl
out
xchg
shlb
cli
shr
xor
test
inc
adc
mov
fwait
push
not
cld
lea
xchg
xlat
movl
fmull
cmp
jbe
add
jmp
add
mov
sbb
jmp
pushf
pop
and
jmp
add
inc
push
out
dec
adc
loope
jl
mov
push
lock
add
pusha
xor
pop
xor
inc
dec
rorb
repnz
dec
add
rorb
les
fimull
aad
cli
push
push
mov
fsubl
sbb
mov
inc
push
test
inc
dec
cmp
inc
inc
adc
imul
add
cmpsb
push
cmp
js
scas
pop
fbld
jne
ss
push
jb
subb
add
jg
dec
aas
scas
cmp
stc
mov
enter
or
push
dec
sbb
inc
xchg
add
and
inc
fwait
sbb
mov
vandpd
xor
xchg
lcall
adc
cmpl
loopne
ret
jmp
int
add
and
xlat
add
xchg
lods
popa
movsl
testl
push
push
pop
sbb
shlb
scas
cmp
shrb
call
and
inc
cmp
es
je
or
mov
sbb
pushl
les
or
pop
gs
rcr
pop
ret
and
adc
pusha
enter
add
dec
lods
jne
fadds
add
push
push
data16
jecxz
lahf
xchg
adc
fiadds
rclb
add
push
or
and
or
jmp
sbb
or
sub
sub
inc
enter
mov
sahf
and
mov
test
js
pusha
fisubs
in
dec
jnp
lock
pop
add
adc
inc
ret
mov
test
aaa
sbb
sbb
rorb
fcoms
test
xor
mov
pop
jne
mov
jmp
mov
pop
or
shl
jp
xchg
cmc
jno
shll
outsl
or
xor
push
adc
pop
dec
dec
xorl
cmp
sub
lea
or
mov
xchg
mov
scas
mov
sub
jl
mov
aam
sbb
cmp
adc
out
mov
je
aas
xchg
fs
sub
mov
dec
adc
add
mov
pop
inc
push
add
xchg
xchg
outsb
inc
xchg
out
in
mov
inc
pop
jmp
leave
movsb
adc
dec
aad
xchg
movsb
rolb
add
mov
mov
sbb
je
fsubrs
add
adc
pop
jne
movsb
adc
sub
dec
lods
adc
mov
cwtl
sahf
pop
int3
sub
into
mov
xchg
in
mov
adc
add
jns
and
pop
and
inc
pop
or
or
test
xchg
adc
sbb
int3
xor
rolb
inc
add
test
test
or
aam
pop
jb
pop
add
push
push
and
mov
cmp
fisttps
push
popa
push
jbe
je
inc
shrl
push
mov
cmpsl
jne
sub
je
inc
mov
adc
lea
outsb
or
das
mov
cmp
shrb
sbb
lods
mov
arpl
aam
xor
nop
andb
sahf
add
test
pop
push
test
mov
mov
lret
lret
dec
xor
daa
movsb
push
xchg
push
cwtl
sub
or
dec
add
mov
xor
fisubl
rolb
cs
fsubl
cmp
push
mov
lahf
push
mov
inc
clc
imul
and
and
push
mov
es
or
jno
les
ret
outsb
inc
xchg
push
or
dec
mov
in
pop
lods
rolb
rolb
pop
mov
mov
dec
add
pop
mov
sub
dec
pop
lahf
movsb
push
js
pop
adc
lods
sbb
jbe
push
push
sbb
scas
and
mov
xor
sarb
cmp
aaa
movsb
mov
daa
jge
sbb
jne
mov
fstl
mov
sub
push
pop
in
insb
mov
mov
lods
addl
or
pop
xchg
scas
hlt
add
dec
pop
enter
pop
ret
inc
adc
add
cmpsb
rorb
cs
scas
add
adc
lods
fucomi
push
sahf
pop
add
in
rorl
sub
jo
add
xor
add
push
adc
into
fisubl
jmp
add
lock
hlt
jbe
cmp
cmc
out
mov
adc
cmp
add
popf
rol
jne
dec
cmp
sub
lret
jmp
sub
xchg
je
aas
ljmp
enter
push
add
addr16
add
xor
adc
mov
and
xchg
ret
lcall
dec
adc
rcll
xchg
fisubrl
cs
bound
sbb
setb
inc
scas
enter
sub
add
mov
adc
enter
daa
push
xchg
leave
mov
xor
ret
ret
xchg
sub
or
aad
inc
call
dec
shlb
xchg
add
dec
repnz
inc
repnz
sub
jnp
dec
popa
int
fcoms
pushl
sub
cmp
jbe
dec
jmp
mov
cmpl
or
and
data16
movsl
cmpl
mov
inc
jmp
repnz
out
inc
loop
mov
rorb
jmp
sbb
nop
movsl
jno
movsl
push
in
push
pop
insl
xchg
xchg
stc
adc
fadds
gs
imul
mov
and
cmpsl
add
mov
lret
jne
push
js
mov
push
lret
pop
fcoml
ja
push
push
lods
and
adc
cmp
or
add
dec
push
adc
xchg
or
inc
sbb
and
push
and
mov
push
inc
xchg
xor
or
aam
lret
rclb
test
jns
movsl
jb
orl
mov
fwait
jb
and
dec
adc
or
and
sub
rcl
xchg
dec
repnz
mov
sbb
in
adcl
and
cli
sar
adc
iret
nop
pop
les
das
sub
add
sub
cmp
xor
push
repnz
outsl
addr16
cmp
fdivrp
mov
sub
sub
inc
lea
push
sub
push
add
inc
jmp
nop
aas
adc
cmc
and
push
adc
pop
jle
and
out
mov
adc
lahf
xchg
dec
jo
das
mov
into
ds
xor
or
adc
je
prefetchw
pop
inc
sbb
mov
and
out
sub
test
pop
xor
cld
xor
adc
imul
repnz
add
ret
adc
add
int3
cmpb
fildl
dec
jl
adc
fldcw
dec
jl
add
adc
data16
imul
cmp
cs
lods
dec
adc
and
push
bound
and
or
mov
add
orb
sbb
orl
jecxz
popa
mov
mov
pop
les
jl
sub
lcall
dec
imul
rcrl
cld
push
pop
add
cmp
dec
cmp
ret
pusha
push
int3
lock
in
mov
rolb
and
push
lret
pop
adc
andl
mov
nop
jge
or
add
or
out
rorb
movsb
mov
insl
pop
test
sar
mov
sahf
jmp
or
fimuls
mov
add
roll
push
and
leave
mov
pop
inc
cs
push
aaa
dec
push
ret
push
int3
fisttps
nop
xchg
add
add
jo
movsl
addb
cld
pop
lea
sub
push
add
gs
xor
pop
mov
movb
stos
mov
dec
addb
imul
fldt
js
gs
and
push
and
push
xlat
xchg
push
lock
inc
or
xlat
pop
cmp
cli
addr16
add
adc
mov
ja
and
mov
mov
sti
movl
mov
add
into
jo
push
and
dec
fdivrl
les
rcrb
ss
xchg
mov
dec
pop
int3
xchg
pop
pop
mov
or
stc
loopne
mov
lret
rol
push
stos
inc
mov
pop
out
jle
push
outsl
push
push
jo
test
dec
dec
loop
aas
adc
sbb
imul
mov
jbe
outsl
in
push
lods
andb
mov
and
add
aaa
stos
fadds
cmc
add
mov
lret
add
mov
jl
dec
loop
push
in
add
fdivr
or
adc
xor
xchg
mov
and
daa
jge
mov
sti
je
push
mov
or
loop
jl
loopne
xor
push
or
adc
sbb
mov
cltd
jmp
push
xchg
or
sbb
xor
clc
scas
loop
in
ret
and
adc
sbb
mov
ror
shl
nop
arpl
inc
jo
insb
mov
shl
xchg
mov
je
push
rcll
in
add
and
js
or
roll
stc
pusha
or
inc
lret
or
idiv
lods
ret
xchg
mov
pop
pusha
push
lods
add
popf
out
jle
je
bound
sahf
or
xor
push
xor
jns
sub
xor
mov
sub
sub
inc
cmp
dec
jne
data16
add
dec
xor
pop
push
out
outsl
int3
call
dec
inc
push
mov
lods
mov
jg
scas
add
lret
call
push
push
inc
fsts
sub
icebp
cmp
xchg
mov
fstl
or
push
push
enter
fisubrl
xor
les
add
int3
into
jp
sbb
push
mov
test
push
push
push
mov
xchg
push
sbb
ret
pusha
pop
inc
jmp
sbb
xlat
mov
mov
subps
sbb
add
lahf
push
mov
loopne
stos
push
cld
aad
push
fstpt
inc
int
in
pop
mov
cmp
push
push
xor
xor
imul
mov
or
orb
fwait
int
mov
hlt
dec
cmc
ret
imul
stos
fcmovbe
xor
sub
inc
stos
in
add
dec
xchg
rcrb
test
adc
lock
push
rcll
enter
orl
inc
sbb
mov
aam
fcom
cmp
addb
cmp
mov
cmp
push
ret
pop
roll
test
push
sbb
jno
add
fcmovnbe
jo
pop
and
push
in
cld
fbstp
mov
dec
pusha
mov
rol
mov
ror
xor
shr
xor
sti
call
rol
mov
rol
xor
shr
xor
add
add
add
mov
iret
sub
mov
fs
lcall
sahf
or
jae
or
and
xor
xor
jle
add
add
aam
sub
jge
mov
add
cwtl
repnz
repz
test
or
add
xor
and
and
fisubl
fiaddl
sbb
xor
lods
test
push
sub
lea
pop
push
or
xlat
sbb
sub
in
rcl
add
add
sub
hlt
add
call
nop
in
rcl
call
call
dec
movsl
stc
data16
cli
mov
rol
xor
jae
rol
out
add
push
xor
xchg
cmpsb
jb
fsub
in
dec
shll
sub
in
aam
sbb
in
lret
in
push
cmp
xchg
push
adc
les
pop
add
fadd
push
sub
call
nop
cmpsb
test
call
in
loopne
cmp
int
add
pop
cmp
cmp
push
rcl
xor
sub
xor
or
int3
inc
int
push
push
add
in
push
xor
adc
and
and
mov
lahf
or
add
and
push
int3
lcall
adc
adc
add
mov
js
pop
inc
inc
jo
ret
push
jo
sub
sbb
fidivrs
leave
xchg
std
xor
jl
dec
adc
push
loop
jle
inc
pop
mov
add
add
pop
sub
jbe
call
fcomi
mov
or
clc
jp
push
and
xor
pop
push
mov
inc
dec
rorl
inc
call
and
cmp
test
aam
mov
xchg
cmpsl
adc
and
stos
adcl
nop
pushf
aam
es
lcall
nop
cmpsb
imul
inc
cmp
shr
rolb
or
cli
xor
stos
sub
sub
jge
shlb
dec
xorb
dec
shll
dec
loopne
call
inc
lahf
jo
add
and
xor
or
int
leave
dec
push
dec
sbb
xor
xor
dec
push
xor
mov
rolb
cmp
add
add
push
pop
cmp
or
nop
sub
sahf
push
add
or
push
or
pop
and
rorb
fs
pusha
mov
pusha
mov
movsl
mov
sbb
pop
rorb
adc
and
roll
loop
in
sbbl
pop
fs
dec
inc
inc
sub
icebp
stc
stc
stc
or
pop
dec
mov
xchg
inc
mov
mulb
dec
and
or
push
cmpsb
imul
fidivs
push
sbb
inc
inc
add
lea
stos
xor
pushf
out
pop
add
sub
mov
out
and
lret
jb
pop
sbb
cmp
inc
aaa
sub
pop
stos
es
fstpt
lea
pop
xor
in
adc
fsqrt
inc
mov
sub
shlb
fidivrs
add
add
rorb
or
or
mov
dec
insl
insl
fstl
jne
int
lea
cmpsb
pop
int3
inc
jae
mov
sub
outsl
xor
scas
add
jle
lea
push
sub
mov
add
or
mov
dec
jne
pop
aam
add
dec
sarb
mov
jl
in
xchg
sub
mov
cmp
jbe
or
fs
in
mov
inc
inc
lea
sub
jae
push
pop
fadds
sub
enter
or
mov
ljmp
fldt
push
mov
outsl
pop
loopne
ror
mov
clc
gs
call
mov
pusha
call
jb
adc
jns
sbb
jbe
lock
aad
xchg
dec
sbb
sbb
cmp
fbstp
adc
inc
add
loop
and
and
sub
movsl
insb
popf
rol
mov
movsl
jecxz
push
repnz
outsl
sbb
pusha
xchg
mov
pop
dec
pop
pop
pop
pop
scas
addb
push
sub
xor
les
cmp
xor
adc
pusha
insl
out
or
and
test
mov
ljmp
push
and
aad
rcll
pop
lcall
in
popf
xchg
loopne
lock
fcmovb
mul
ljmp
and
adc
inc
dec
fisubl
add
dec
add
dec
add
dec
insb
fs
ffree
add
or
sti
dec
aaa
or
int3
xchg
push
clc
adc
push
mov
xchg
dec
jmp
fimuls
pusha
ljmp
add
sub
rcl
xor
and
dec
inc
mov
ss
nop
outsl
pop
ret
adcb
dec
mov
or
adc
imulb
push
and
sub
push
sub
sub
dec
adc
cmpsb
inc
jno
mov
xchg
or
cmp
data16
pusha
test
test
adc
cs
pop
ret
adc
fsubrl
cmp
or
loop
inc
cmp
sub
xchg
add
and
pop
shrb
mov
adc
test
sub
incl
mov
scas
test
mov
xchg
cmp
fisttpl
and
jl
loopne
jle
es
sbb
inc
and
ss
pop
push
or
add
arpl
push
test
inc
lahf
push
and
mov
loopne
and
mov
in
pusha
movl
or
push
ret
add
xor
sub
inc
inc
subb
push
and
repnz
ljmp
jmp
gs
push
test
push
add
ds
push
sbb
enter
test
xchg
jmp
repz
and
mov
and
ljmp
push
cmc
int3
pusha
cmp
shl
dec
mov
nop
mov
leave
sbb
jnp
or
pusha
pop
mov
jbe
mov
repnz
push
jle
push
dec
jnp
sub
jmp
inc
inc
test
lret
lock
loopne
or
or
test
or
testb
xchg
cmp
lods
sbb
loopne
cli
inc
sar
sbb
adc
jae
aad
sub
add
inc
jmp
mov
ret
rcrb
push
add
pushl
movlps
rcr
mov
sti
into
cld
pushf
mov
and
mov
jg
je
cmp
push
push
in
out
fs
push
jo
imul
inc
aad
into
mov
mov
sub
adc
sub
int
xor
lock
xchg
nop
pusha
sub
cli
cmp
rcll
hlt
je
cmp
jbe
jns
test
fs
pop
ret
test
xchg
xor
pop
es
imul
dec
push
bound
xor
and
sub
dec
adc
cmpl
jbe
cmpl
pop
clc
repz
add
or
or
nop
xchg
rolb
movsb
add
lret
mov
mov
arpl
adc
mov
dec
push
pop
push
dec
or
add
les
cmp
pop
jmp
or
dec
add
push
add
sub
push
adc
pop
mov
fsubrl
in
adc
cmp
sbb
cmp
sbb
or
lods
sbbb
rolb
ret
xlat
adc
push
mov
ret
pop
pop
mov
je
add
fsubl
and
mov
jbe
cmpsl
in
mov
push
jo
or
jae
push
xchg
sub
scas
cmp
jmp
inc
add
inc
pop
les
in
data16
push
loopne
pop
dec
mov
scas
jmp
fwait
add
out
out
xor
mov
xor
mov
mov
and
add
push
icebp
jp
movsl
xor
inc
add
dec
or
cwtl
sub
sbb
stos
or
mov
test
jne
jmp
and
ja
xorb
sub
loop
add
push
mov
add
xchg
leave
inc
and
or
scas
hlt
and
andb
xor
sbb
loopne
stos
adc
cmpsb
andl
mov
xorb
jbe
rol
sub
cmp
rorb
add
rcrl
mov
movsb
add
mov
push
cmp
add
mov
ljmp
xchg
xor
fdivrl
jbe
push
je
shlb
call
pusha
loope
pusha
and
push
xchg
push
inc
push
ret
popa
icebp
dec
jle
xchg
lret
and
and
mov
adc
or
sbb
push
daa
push
sbb
mov
jo
adc
cmp
pushf
inc
cmp
je
adc
xchg
mov
dec
aam
xabort
enter
xor
lods
push
das
add
hlt
push
push
dec
ja
repnz
pmulhw
mov
lahf
adc
ret
fsubs
dec
je
inc
add
adc
test
xor
sarl
add
repnz
hlt
outsb
adc
cmp
xor
dec
add
push
fdivrs
xorb
outsl
cmp
adc
adc
lea
mov
push
jl
mov
cmp
jbe
push
add
adc
je
add
cmp
xchg
cld
cld
inc
push
add
sub
pop
rclb
ret
orb
ss
cmp
hlt
push
mov
sti
and
cmp
ja
jae
xor
iret
jb
sbb
sbb
pop
test
loope
jne
xchg
mov
dec
sub
into
mov
inc
mov
xchg
sub
pop
or
xor
out
pop
push
jmp
mov
in
push
js
nop
mov
jb
cld
repnz
dec
cwtl
inc
pop
iret
xchg
pop
test
test
fisubs
sbb
rcrl
test
jbe
hlt
dec
xor
xchg
lahf
mov
hlt
ret
inc
fnstenv
mov
dec
xor
mov
xchg
xor
jmp
out
jns
lods
int3
in
shrb
jmp
mov
scas
test
jno
rorl
and
cmp
clc
shrb
cld
out
and
mov
mov
aad
stos
or
jl
inc
and
out
fldl
lea
cli
fcmovnb
xlat
shrb
lock
adc
sti
insb
imull
adc
sbb
pop
mov
fisttps
mov
jne
pop
push
fidivl
add
jnp
add
incb
stc
imul
mov
xchg
inc
jp
push
or
push
int
cmp
pop
mov
add
add
shrb
ljmp
cmp
je
sub
jge
jle
push
lahf
inc
cmpb
lret
push
and
cs
add
divb
push
inc
cmp
jl
pop
or
nop
test
emms
or
in
jle
shlb
and
inc
lock
test
mov
push
xor
ret
out
sbb
data16
jle
push
sub
or
sbb
mov
loop
sub
add
jl
push
push
jl
mov
or
inc
lcall
adc
xor
stc
mov
das
or
and
nop
dec
movsb
sbb
sub
loope
ret
mov
insb
mov
mov
push
data16
push
fdiv
dec
je
idivb
cmp
mov
inc
in
mov
jmp
lea
adc
lock
imul
clc
comiss
push
sbb
cmp
push
push
mov
in
pop
or
mov
or
or
in
mov
decb
push
loope
and
add
mov
out
mov
shr
shl
add
and
shl
xor
mov
mov
or
movsw
movsb
mov
inc
sub
enter
xor
idivl
jge
dec
mov
cmpsb
push
outsb
sub
rcr
cmp
subb
adc
stos
pusha
movsl
push
imul
sub
out
jae
lds
mov
test
fs
jno
sti
sub
insb
push
dec
mov
sub
rorb
lock
lods
call
lea
loop
ror
jno
mov
cwtl
add
jmp
jne
cmp
pushf
call
add
mov
shll
or
xor
lcall
es
mov
pop
lock
push
sbb
fidivl
ljmp
insb
fs
dec
aas
cmp
stos
xlat
out
lds
sub
xor
mov
sub
and
jp
flds
js
mov
sbb
adc
lea
mov
adc
mov
test
or
add
les
dec
in
pop
pop
adc
mov
ficoms
jae
lcall
inc
and
test
mov
dec
es
imul
les
stc
fs
push
stc
mov
jo
lret
shll
outsb
push
es
mov
adc
dec
mov
mov
dec
and
add
nop
stmxcsr
dec
xchg
add
xor
insl
pushf
sbb
shll
scas
stc
mov
ss
negl
mov
and
enter
repnz
or
in
mov
mov
js
mov
xor
call
das
hlt
sub
or
fnstsw
jecxz
mov
add
gs
lret
jle
mov
or
aam
xchg
push
xor
jge
mov
dec
mov
xor
dec
push
push
dec
mov
push
ret
mov
dec
and
add
sbb
mov
pusha
cmp
loopne
in
aam
push
lods
mov
cmp
sbb
sbb
cmp
jmp
lods
or
bound
fsubs
les
testb
pop
or
lock
mov
add
xchg
xor
insb
clc
cmpsl
mov
push
sbb
nop
negb
mov
popa
and
adc
mov
and
pop
ret
mov
icebp
add
sbb
rclb
bound
pusha
rorb
enter
push
or
sarl
xor
sub
push
nop
insl
add
ss
adc
stc
lods
cmp
inc
xor
stos
cmpsb
push
sub
pop
and
js
push
adc
dec
bound
arpl
jo
in
in
dec
pop
or
out
inc
push
sbb
negb
insl
mov
adc
pop
lods
jns
push
das
and
jecxz
dec
mov
stos
je
sub
mov
repz
test
inc
or
outsl
xor
push
and
sub
inc
mov
or
adc
push
sbb
jl
fimull
and
mov
addr16
push
push
pop
les
mov
push
pop
dec
or
bt
sub
or
sbb
mov
mov
jl
inc
xor
and
cmp
sbb
or
outsl
ret
clc
je
inc
test
mov
cmp
mov
dec
pop
jp
popa
dec
scas
aam
addb
mov
loopne
add
cmpl
mov
daa
das
test
sti
pop
pop
xchg
pop
shrl
out
fcompl
pop
pushf
push
pop
mov
pop
push
push
or
push
sbb
pop
ret
and
push
sbb
pop
xchg
adc
in
cltd
add
fcompl
dec
je
test
incb
add
push
lods
test
push
pop
inc
imul
sub
xbegin
adc
pop
das
lcall
or
mov
and
sbb
push
insl
nop
and
and
fwait
jbe
sub
xor
inc
shrb
xor
cmp
jle
ja
or
pmaxub
mov
add
pop
pushf
dec
fnstsw
in
xchg
ret
das
pop
mov
sub
mov
push
push
inc
sub
fsub
test
push
fwait
jo
push
in
adcb
jge
jo
jo
mov
jmp
or
add
pushf
add
pop
mov
sub
push
scas
imul
mov
push
xor
inc
push
mov
lock
dec
sbb
dec
jo
gs
add
mov
cmpsb
or
push
mov
or
jg
jl
test
add
sbbl
add
jne
add
cmp
jl
mov
cli
ljmp
in
shl
les
pop
dec
add
insb
out
jle
pusha
cld
cs
pop
out
push
add
add
add
cmp
mov
jo
lods
mov
jbe
sarl
sbb
pop
call
adc
testb
je
cmp
mov
add
mov
fsts
test
push
cmp
rol
add
mov
mov
push
adc
ja
cmpsb
pop
add
add
mov
sub
imul
rcr
popa
sub
push
add
sti
jno
pop
add
pop
in
push
push
cmp
incb
push
pop
mov
push
add
push
adc
je
loop
adc
jae
dec
and
out
xchg
mov
lods
mov
ret
or
adc
in
sti
xchg
xor
das
jg
add
or
orl
sahf
add
je
hlt
lret
cmp
aad
cmp
pop
rcrl
mov
stos
jo
lods
sub
and
push
pop
jne
jo
imul
mov
dec
imul
add
mov
pop
mov
icebp
inc
mov
push
ss
lods
loope
push
dec
pop
or
jo
out
ret
outsb
inc
pop
push
add
push
push
sbb
pusha
arpl
je
adc
pop
xorb
xor
xchg
push
cmp
pop
mov
and
scas
rcrl
std
add
mov
jae
ds
or
testb
or
cmp
sbb
or
loopne
loop
sbb
roll
add
cmp
clc
sbb
lea
push
sbb
pop
cltd
mov
mov
sub
enter
sbb
leave
lret
sub
jl
xor
les
pop
std
addr16
sbb
adc
stc
jmp
xchg
xchg
or
dec
xor
lret
mov
imul
sqrtps
pop
xor
xor
pushf
cld
mov
fcoms
and
inc
sbb
enter
cmp
adc
int3
out
std
cwtl
adc
push
aaa
nop
inc
fdivrl
cltd
push
shll
or
push
cmp
out
cmp
shlb
jmp
or
mov
insb
jp
jne
cmp
jl
je
jne
push
test
fs
in
jo
inc
cmp
push
mov
mov
jae
dec
adc
aaa
les
lock
out
lods
cmp
popl
push
test
pop
pop
lods
nop
push
or
mov
and
rcrl
push
cwtl
jb
js
ja
sbb
shlb
mov
cmp
cmp
ja
or
push
sub
xchg
push
push
or
test
loopne
inc
test
rol
mov
and
stos
loopne
cmp
fs
pop
roll
inc
lcall
sbb
inc
push
and
and
xor
sbb
subb
pop
cmp
dec
arpl
gs
imul
or
cmp
outsb
dec
rorl
jno
add
fnstenv
andb
pusha
inc
xchg
outsb
fistps
adc
cmp
push
xchg
and
or
or
xlat
mov
or
or
daa
andb
sbb
test
popa
jb
cmp
add
ja
push
mov
adc
cmp
add
adc
in
jp
ja
xor
add
rolb
andb
arpl
loopne
ljmp
fadd
call
roll
adc
fisttpl
xchg
mov
cltd
sbb
sub
aad
dec
dec
test
push
xchg
push
add
pop
popa
pusha
dec
or
stos
or
add
cmpsl
mov
xchg
fisttpll
mov
and
repz
mov
test
pusha
cmp
mov
jbe
jns
push
pop
stos
push
inc
ds
aad
pop
pop
push
subl
andl
ret
jl
or
adc
mov
push
xchg
mov
insl
jmp
pop
cmp
loop
lods
pop
in
popa
pop
or
stc
adc
dec
pop
dec
in
pop
aad
and
push
xchg
add
add
ja
in
jmp
xchg
scas
xorb
add
in
or
mov
lods
popa
rcll
add
pop
jnp
cmp
mov
jnp
xchg
aaa
xchg
cwtl
add
cmp
fdivrs
data16
jo
mov
pop
xor
addb
fcmovnu
dec
aaa
out
add
ja
add
dec
push
ds
jae
mov
mov
adc
lods
xor
add
in
pcmpgtw
cwtl
sbbl
cmp
bound
inc
je
sar
out
push
sbb
xor
repz
mov
cmp
orb
jo
xor
adc
int3
andl
sahf
in
loopne
cld
scas
testl
fildl
add
xor
mov
push
lods
or
in
cs
mov
push
dec
pushf
adc
clc
cltd
dec
pop
cmc
xchg
fwait
icebp
rol
push
adc
push
or
or
loop
out
jb
mov
pusha
jno
dec
jmp
in
loop
jmp
and
mov
lods
scas
pop
inc
dec
pop
sbb
outsl
ret
add
or
sar
ret
add
jo
add
dec
mov
or
lods
push
js
les
add
inc
cmpsb
dec
mov
jbe
cld
mov
sub
insb
pop
xchg
icebp
or
inc
inc
inc
nop
mov
jb
cmp
das
lock
sbb
outsl
daa
shll
jp
outsb
pop
dec
inc
dec
sub
fcom
or
cmc
inc
fs
jo
cs
je
sub
add
insb
dec
aas
orb
hlt
daa
push
cld
cmp
stos
xor
ret
mov
add
inc
cmp
je
inc
push
jne
ficoms
aad
push
js
inc
arpl
jne
mov
int
fldenv
cmc
daa
mov
push
mov
addr16
push
dec
adc
insb
stos
inc
mov
movsl
or
jne
pop
sbb
xchg
or
pop
je
jmp
or
push
dec
movsb
ret
jno
sub
or
push
out
cmpb
movsb
loop
out
inc
sbb
or
sub
dec
add
mov
xchg
jmp
add
cwtl
push
nop
jmp
xor
addl
icebp
jnp
gs
jnp
mov
inc
cmp
mov
inc
jle
push
sbb
imul
xor
pushf
es
push
mov
jno
cmp
dec
inc
pop
pop
and
mov
je
push
rolb
rorb
inc
add
and
xchg
push
add
test
or
mov
push
clc
and
add
sub
add
loope
dec
xchg
into
mov
sbb
or
mov
mov
fdivrl
popa
mov
jmp
sub
mov
add
xchg
stos
outsb
pusha
push
pop
in
pushf
cmp
cmp
push
inc
imul
push
push
xchg
or
lods
ret
adc
and
cmpsl
and
push
sbbb
ss
add
xor
mov
push
inc
gs
pop
shlb
xor
lea
cmp
pop
push
or
push
jno
insl
and
sarb
xor
in
je
cmp
orl
push
rol
xchg
jno
add
fcoms
xor
dec
shrb
adc
shll
sbb
lods
add
shlb
pushf
jp
movl
sbb
nop
xchg
adc
mov
mov
pmaxsw
jle
rcrb
js
inc
xchg
popa
nop
or
dec
andb
jl
sbb
cmp
dec
add
mov
int3
int3
mov
out
cltd
and
or
scas
pop
pusha
xlat
dec
std
sub
jne
ss
fs
mov
and
clc
jg
fwait
pop
push
outsb
dec
test
mov
movapd
push
clc
aaa
das
mov
jae
xor
jle
xor
cli
rcl
lret
dec
cmc
or
es
lret
or
jg
xor
fldt
into
fstl
jnp
mov
adc
aam
ret
or
mov
adc
cld
mov
mov
fadd
roll
add
mov
mov
jo
mov
int
add
sbb
sub
jns
sbb
xor
orl
mov
addr16
ja
push
inc
and
cmpsl
add
mov
xor
adcl
xor
sub
orl
mov
xchg
adc
push
or
popa
pop
in
jle
pop
stc
and
ss
icebp
push
and
mov
jns
in
jb
jns
pop
or
rolb
sahf
mov
loopne
jno
insb
inc
cltd
inc
call
and
mov
outsb
dec
adc
loope
add
mov
adc
fistps
and
roll
shlb
mov
shlb
push
sbb
adc
mov
sub
pop
pop
cmpsl
js
xchg
test
mov
inc
inc
and
mov
push
xchg
test
addb
pop
jmp
mov
mov
cmp
jne
push
xor
and
cltd
and
fbld
dec
pop
cmp
and
and
mov
add
sbb
loopne
xorb
adc
les
cmpsb
fwait
sbb
icebp
loope
push
sbb
push
test
das
fimuls
jne
popf
mov
add
hlt
ret
pop
ds
lock
dec
cmp
mov
xor
lock
sub
sbb
das
stc
add
jge
xchg
jmp
push
mov
xor
xor
add
push
xchg
inc
imul
sbb
mov
push
push
jmp
adc
adc
jne
inc
push
stos
pop
int
sbb
inc
xor
lcall
add
add
sub
inc
pop
push
pop
mov
push
adc
pop
test
inc
pusha
and
sbb
cmovb
jle
mov
pop
inc
inc
aad
insb
lea
hlt
cmp
mov
outsb
or
add
mov
xchg
out
sbb
adc
lcall
push
lret
cmpsb
cmp
adc
or
xor
out
add
mov
add
mov
sub
mov
pop
adc
and
pop
and
movsl
or
or
cld
imul
mov
mov
scas
rolb
out
imul
sarl
sub
fistpll
ret
jg
shl
shlb
dec
leave
clc
imul
or
inc
pop
cmp
mov
jmp
and
mov
inc
cmp
aam
lret
jne
sbb
icebp
jg
mov
out
adc
push
out
ret
xchg
xadd
push
mov
pop
outsb
movl
push
and
je
cmp
pop
add
push
seta
test
or
xorb
fwait
dec
adc
testb
sbb
or
push
or
inc
hlt
cwtl
and
jae
push
mov
mov
in
rcrl
xchg
cmp
sbb
mov
xchg
cmpsl
and
sub
rcl
or
mov
pop
adc
lods
subb
mov
mov
or
stos
add
inc
cmp
imul
rclb
ja
push
icebp
or
movb
xor
mov
fmuls
xchg
cli
or
add
jmp
or
mov
inc
ds
sbb
insl
inc
subl
cmp
add
jmp
adc
lahf
mov
dec
mov
mov
dec
dec
mov
inc
scas
adc
insb
repnz
ret
adc
test
or
loope
lock
add
lds
sbb
push
in
push
cmp
adc
and
lret
xor
xchg
jb
mov
loop
push
xchg
push
cmp
jb
lea
cmp
mov
faddl
push
cmp
jne
mov
push
cmp
rcr
cmp
jne
es
jne
incl
aam
adc
or
fidivs
lret
ret
adc
push
dec
jmp
iret
iret
repz
jmp
std
std
jmp
cld
cmp
jae
cld
ret
pmaxub
or
adc
xor
mov
push
push
movb
mov
hlt
or
or
mov
das
jle
or
push
ret
or
rolb
pop
testb
andb
mov
or
cmp
test
inc
out
andl
pop
out
or
lahf
aad
or
or
test
pop
push
add
add
or
orl
fiadds
adc
or
xor
inc
test
cmc
mov
daa
jle
enter
add
mov
sbb
into
cld
mov
adc
cmp
jg
mov
add
js
sbb
mov
sbb
xchg
and
das
and
mov
lods
xor
sbb
ret
cmc
jle
push
push
pop
div
jb
mov
add
xor
popa
cs
mov
push
sahf
stos
mov
sahf
sub
pop
adc
push
mov
and
pop
jb
shlb
loop
loopne
xlat
jge
cmp
lea
mov
cmp
adc
stos
adc
repz
and
pop
adc
cmp
jb
mov
jmp
gs
outsl
adc
in
and
call
dec
sub
pop
test
adc
add
sub
sbb
pop
mov
call
leave
sbb
jp
ret
push
insb
or
jl
or
mov
push
mov
cmp
arpl
fstl
roll
shrl
xor
xchg
xor
movsl
push
mov
inc
jmp
cmp
jne
orl
jmp
adc
jne
cmp
mov
inc
fadds
add
jg
and
push
xor
dec
or
xor
pop
xchg
jge
lret
adc
or
adc
test
repz
add
add
lds
js
ljmp
adc
lret
or
idivb
or
mov
jmp
test
mov
jg
dec
sub
cmp
ja,pn
xor
add
cmp
jae
push
or
jb
movsb
outsb
and
add
and
dec
test
push
je
frstor
pop
bound
adc
cld
imul
add
inc
cmc
mov
nop
test
jne
test
jne
push
andl
or
or
sub
jbe
inc
mulb
add
je
fisttps
and
add
add
into
out
or
mov
das
in
pop
stos
mov
rolb
jp
or
mov
pop
aaa
shr
mov
push
xchg
cmp
inc
adc
loop
add
sbb
in
xchg
add
mov
fisubl
sub
sub
add
inc
or
sbbl
mov
data16
jge
add
movsb
icebp
stos
mov
mov
or
or
call
sub
ljmp
jno
or
push
pop
add
mov
iret
data16
push
push
jnp
jne
idivb
mov
or
hlt
xchg
rcrb
sub
inc
lret
adc
adc
rcrb
in
jmp
popf
je
hlt
jl
loope
xor
repnz
or
ds
jmp
testb
or
adc
xor
pop
or
push
mov
jmp
xchg
add
adc
arpl
es
sbb
pop
adc
push
aas
push
repnz
pop
add
xchg
sbb
dec
adc
push
sub
mov
stos
xchg
addl
sbb
int3
mov
cmp
push
jo
add
ja
xor
jmp
cwtl
or
nop
fmul
or
mov
test
cs
jmp
sub
je
add
adc
ret
pop
das
cmp
push
pop
out
push
je
dec
push
mov
dec
inc
dec
jae
fwait
or
sub
dec
addb
dec
adc
and
rorb
sbb
and
pop
loope
dec
or
adc
repz
inc
and
insl
movsl
push
test
mov
add
loopne
je
neg
call
inc
cmp
jb
lea
push
adc
push
pop
dec
ss
sahf
xchg
adc
insb
mov
enter
xor
mov
push
test
jbe
and
dec
or
jl
jl
int
dec
push
mov
decl
and
leave
jne
adc
push
add
cmp
pop
shrb
ret
pusha
adc
pop
pop
and
sub
popa
lods
jno
insb
pop
arpl
xchg
push
push
push
lret
mov
xor
inc
xor
sbb
xor
and
pop
sti
xchg
push
pop
jae
loop
pop
adc
in
pop
add
popa
adc
insb
xchg
and
lods
pop
test
and
xchg
add
daa
loope
call
xor
sbb
ret
and
push
add
mov
inc
incb
insl
and
push
sub
leave
sub
push
lahf
jne
std
add
arpl
cwtl
les
push
push
mov
xchg
cmpsl
mov
add
shrb
adc
or
stc
mov
dec
pop
insl
cmp
inc
loope
pop
lahf
sbb
and
fldenv
into
pop
xchg
mov
insl
cmp
adc
sub
dec
or
ficomps
lea
dec
popa
lds
inc
test
andl
cmpsb
sub
push
sti
gs
jle
push
mov
push
xchg
aad
push
popf
and
incl
adc
adc
dec
roll
dec
cmp
lock
xchg
lock
add
and
adc
inc
rorl
in
xor
repnz
sbb
mov
cld
pop
or
fdivrs
daa
inc
push
or
sub
inc
push
add
mov
inc
mov
jp
pop
je
push
adc
inc
pushf
mov
push
adc
jbe
xor
fisubs
test
cmp
xchg
mov
rcrl
fisubs
popf
sub
add
pop
dec
add
mov
fmuls
jnp
call
sub
push
cmp
addr16
neg
jb
xor
in
sbb
ss
jp
lods
stos
and
xlat
test
sbb
mov
je
cmpsb
fcompl
ret
ret
ret
lock
push
pop
pop
push
mov
adc
mov
movsl
mov
test
xlat
movsl
shlb
xor
in
jecxz
imul
jmp
push
pop
sbb
sub
jbe
pop
xchg
mov
int
insb
add
mov
mov
leave
mov
xor
std
adc
out
and
fistpl
loope
cmp
and
sub
push
jmp
and
push
lock
cmpsb
cwtl
add
xchg
pop
insb
add
sti
test
add
cmp
xorl
mov
sbb
hlt
je
push
jbe
test
aam
xchg
inc
inc
xchg
push
in
lahf
push
mov
mov
inc
xchg
push
and
stc
or
xor
ret
jge
pop
inc
sub
mov
outsl
lock
rorl
shrb
stc
and
pop
or
and
rol
adc
cli
test
in
xchg
lret
pop
adc
ss
push
dec
js
or
cmpsl
into
mov
cmpb
jne
and
or
jmp
xor
pop
sahf
fcoml
jle
mov
outsb
xchg
add
sub
or
and
inc
ret
clc
aaa
mov
mov
jmp
out
jno
enter
and
in
dec
or
enter
cwtl
dec
mov
push
insl
push
push
pop
jle
stos
mov
cmp
je
movzbl
dec
sbb
add
sub
xchg
fiaddl
ret
lea
repz
imul
jo
pop
add
xchg
add
sbb
add
add
jns
add
adc
jmp
add
jns
jno
je
lcall
flds
add
add
mov
push
xchg
xchg
inc
enter
pop
jb
or
in
xor
or
cmp
xchg
dec
or
sub
or
test
or
add
inc
fisubs
mov
mov
push
xor
cmp
ja
lcall
adc
xchg
add
push
pop
adc
fwait
sub
jb
sahf
adc
inc
or
iret
in
repnz
add
adc
push
push
and
add
lea
out
adc
adc
adc
inc
adc
inc
push
nop
push
push
pop
pop
cs
or
sbb
sbb
enter
sbb
sbb
in
cmp
call
adcl
rep
sub
je
pop
sbb
sbb
leave
sbb
jge
sbb
sbb
sbb
and
pop
pop
fs
incl
add
sub
cmp
jae
sub
cmp
xchg
test
fisttps
clc
mov
xchg
das
pushf
mov
cmp
je
lcall
push
in
repnz
lea
push
nop
idivl
sahf
add
jns
out
out
or
jns
push
in
loopne
sbb
call
insl
and
nop
adc
cmp
jmp
adcl
sbb
sub
in
in
ja
rolb
cltd
mov
inc
push
nop
in
sahf
out
out
in
in
jge
sbb
xorl
pop
lock
xor
icebp
and
enter
repnz
pop
push
out
std
repz
dec
in
std
hlt
hlt
rorl
pusha
testb
cmc
inc
inc
sahf
xchg
add
testb
sbb
pop
idivl
insb
nop
cmpsb
repnz
clc
clc
clc
cltd
add
pop
adc
inc
stc
push
nop
out
lock
cli
cli
iret
cmp
push
inc
sti
sbb
stos
cld
leave
sbb
outsl
cld
push
pxor
std
xor
cmp
xor
mov
ret
rcrl
pop
sub
add
in
mov
mov
pop
cmpsb
cmp
es
adc
jecxz
mov
in
in
in
sub
push
icebp
inc
mov
stc
daa
xchg
sti
out
add
movsb
sbb
out
outsb
mov
adc
call
mov
sub
sbb
int
jmp
cltd
and
mov
cli
inc
add
pop
popf
cli
sbb
xchg
cli
out
out
out
cltd
cmp
sbb
push
lock
cli
adc
xchg
push
cli
sbb
jmp
enter
cltd
sar
push
xchg
or
pop
stc
stc
imul
stc
div
xchg
add
jne
pop
fwait
xor
leave
and
out
in
ret
xchg
clc
cmp
and
sti
sti
cltd
mov
cld
inc
cld
adcl
inc
lock
mov
out
cld
add
mov
psubusb
loop
icebp
mul
pop
and
mov
notl
mov
out
fsubs
add
bound
mov
testl
sbb
xchg
imul
ljmp
negb
testb
mov
ret
xchg
les
negb
repnz
testb
movsl
test
cmc
repnz
test
cmc
in
repnz
cmc
jae
push
cmp
mov
dec
cmc
negb
scas
dec
div
jns
and
pop
add
clc
clc
js
push
and
hlt
stc
popa
rclb
cmp
mov
loop
jno
hlt
repnz
pop
jne
push
hlt
loopne
and
das
data16
mov
data16
hlt
idivl
mov
push
sti
lahf
lock
movsl
push
pusha
adc
xor
loope
loope
lcall
jno
es
scas
repz
test
imul
push
jno
inc
repz
cmp
repz
rclb
sbb
xchg
sbb
cmc
mov
xchg
mov
xorl
pop
xchg
sbb
sbb
cmc
and
xchg
mov
and
cmp
xchg
sbb
icebp
push
and
pop
divb
icebp
pop
je
dec
jb
test
xchg
inc
or
cmp
mov
add
or
and
lock
ffree
lock
popf
lock
stc
cmc
xlat
mov
adc
push
lock
xor
sbb
push
lock
test
ss
aaa
xchg
je
fiadds
pop
sbb
call
inc
cmovno
push
add
xchg
add
sbb
add
add
jp
push
jnp
add
rcll
inc
jne
or
xor
rorl
add
sahf
and
add
push
int
das
jmp
lea
fsin
sahf
aas
inc
add
mov
fwait
int
jns
cs
jno,pt
jge
repz
add
inc
out
inc
out
xor
cmp
imul
les
inc
icebp
dec
push
cmpsl
jge
out
inc
cmp
cmpsb
inc
xorb
sarb
inc
cmp
sub
mov
xchg
mov
sahf
pusha
dec
and
add
jnp
or
jle
rolb
push
push
adc
bound
sbbl
in
test
adc
or
je
int
sub
adc
and
xchg
cmpsb
push
fdivl
push
sbb
hlt
push
or
lahf
add
pop
add
sub
lock
add
js
mov
add
pop
add
fs
cmp
add
push
and
mov
rclb
fs
and
or
adc
add
lea
call
test
jo
fistps
mov
js
mov
notb
mov
pop
sub
push
sub
fadds
push
stc
hlt
sub
mov
repnz
or
add
inc
add
mov
test
pop
xchg
and
dec
mov
adc
push
cmpsl
ret
and
push
add
mov
faddl
sbb
mov
mov
adc
pop
add
cmpsl
cld
cmp
mov
ljmp
and
lret
pop
je
rep
mov
dec
or
cmp
ljmp
nop
fdivrs
test
jmp
and
sbb
andl
mov
pop
andl
in
inc
fstpt
dec
jecxz
xchg
ret
adc
mov
in
jno
cmp
adc
mov
daa
inc
call
push
insl
out
add
outsl
inc
jb
pop
pop
inc
xor
fadd
and
inc
lcall
inc
sbb
dec
leave
adc
cmp
push
jmp
jb
xchg
insb
mov
imul
pusha
mov
add
sub
adc
adc
or
jns
sbb
outsl
cmpsb
or
outsb
add
push
roll
roll
sub
push
or
sbb
pop
cmp
pop
and
fmulp
je
rolb
pop
cmovs
cmp
push
cmp
fildl
insb
inc
adc
inc
pop
inc
orl
cmp
pop
and
jmp
rorb
jl
dec
xor
test
fildll
inc
add
sbb
fimull
in
inc
in
dec
jne
jo
sub
loopne
daa
shll
and
add
pop
adc
adc
adc
out
stos
fstps
stc
aad
adc
sbb
lret
rcll
push
push
ss
mov
or
cmp
pop
push
jmp
sbb
sbb
out
jns
mov
dec
mov
lret
es
xor
lcall
inc
cwtl
ja
leave
add
subb
enter
add
inc
pushf
shrl
and
popa
sub
or
orl
pop
pushf
mov
clc
in
sub
or
je
movb
jmp
stos
add
testb
dec
rcll
out
fstpl
add
aaa
cmp
mov
fimuls
loopne
push
dec
jne
icebp
adc
mov
adc
add
call
iret
xor
mov
and
xor
das
jecxz
cmpsl
adc
and
notb
rol
mov
loopne
add
movsb
mov
dec
jp
pop
push
pop
and
or
pop
pop
mov
add
mov
test
pop
push
nop
hlt
dec
sub
movsl
xor
pop
add
adc
cmp
jb
insl
adc
enter
push
imull
dec
fnstcw
lea
push
sbb
pop
mov
inc
add
add
mov
int3
lea
dec
add
sub
push
movl
or
add
out
or
push
push
push
dec
inc
cmp
cmp
jns
mov
mov
call
repz
in
lock
movsb
repz
hlt
clc
clc
cld
sti
and
lock
fnop
cmp
mov
cwtl
lods
and
int
loop
test
shll
outsb
sbb
lea
jl
cld
or
push
jo
and
std
cld
out
adc
lds
neg
fimuls
outsl
mov
mov
adc
pop
nop
and
dec
fwait
sbb
jns
jo
add
out
add
xchg
push
jbe
out
add
cmpsb
and
push
add
nop
dec
dec
addr16
cmp
jno
add
ljmp
mov
push
int3
push
aam
mov
in
hlt
pop
pop
aaa
sbb
cmp
repz
sbb
iret
repz
adc
or
or
sbb
repnz
add
dec
and
sub
cmp
mov
add
nopl
and
jecxz
shlb
xor
push
dec
fmull
mov
mov
incl
inc
decl
jne,pn
pop
pop
popf
xchg
je
fwait
repnz
fcmovne
aam
cmp
xor
jbe
push
cltd
pop
idiv
xchg
jo
ss
push
pusha
or
push
out
in
ja
loopne
dec
mov
mov
xor
decb
enter
cmp
jae
dec
fcompl
adc
call
jbe
and
imul
push
adc
test
hlt
or
scas
sub
clc
pop
jp
jg
mov
cmp
lret
add
test
push
or
sbb
dec
dec
je
xchg
mov
cmpsb
sbb
xchg
insl
je
xor
add
lcall
jbe
xor
pop
decb
push
int
xchg
jno
push
mov
inc
dec
aam
push
imul
sbb
ret
inc
add
mov
filds
xor
jge
mov
pop
push
push
pop
shrb
dec
jae
push
pop
scas
rclb
push
adc
push
pop
nop
inc
mov
stos
xchg
mov
aam
mov
xchg
pop
cmp
cmp
mov
sbb
ja
insl
or
jle
mov
aas
jge
push
push
cltd
pop
idiv
inc
mov
add
ret
mull
push
xchg
inc
out
cmp
dec
bound
add
or
xor
jle
rcr
mov
enter
sbb
and
adc
movsl
mov
ret
jl
mov
sbb
call
or
xchg
mov
sub
sbb
mov
mov
add
dec
add
add
inc
pop
adc
push
insl
incb
inc
jns
adc
cmp
mov
inc
lret
incl
pop
cmp
jno
sar
dec
sbbl
mov
mov
inc
xor
push
push
add
jae
cmp
dec
lds
pushf
push
mov
push
xor
mov
js
jmp
jge
pop
je
sbb
push
add
sti
popa
sar
dec
fbstp
mov
cmp
xchg
fldenv
push
ret
xchg
mov
je
dec
inc
rcr
test
fnsave
shlb
add
lret
push
push
dec
mov
jl
pop
adc
push
popl
or
inc
mov
inc
and
push
xchg
push
mov
inc
mov
out
aaa
subl
inc
dec
pop
repz
movsb
cmp
pop
stc
pop
push
adc
fldt
stos
xchg
inc
jmp
push
shl
inc
push
pushf
mov
popa
dec
xlat
inc
mov
jne
lea
subb
sub
push
je
mov
push
jae
add
xchg
ja
mov
add
shll
adc
loop
clc
sub
push
cld
and
adc
mov
adc
or
mov
push
inc
adc
jnp
out
or
out
call
and
pop
shr
std
pushl
sbbb
cmp
push
xor
rcl
xchg
rorb
dec
mov
push
pop
js
mov
push
mov
push
sub
hlt
dec
js
mov
popa
call
jne
sbb
aam
add
call
inc
jg
or
std
xchg
dec
gs
or
mov
cs
lock
fisubl
mov
inc
inc
cmp
je
xchg
cmp
cli
orb
adc
add
fidivrl
mov
dec
popa
cmpsl
mov
xor
mov
rclb
adc
int
add
mov
imul
incl
fdivr
push
push
mov
push
inc
sbb
add
sbb
pop
sti
inc
dec
inc
ret
pop
sbb
sbb
mov
mov
push
sbb
add
or
xchg
rclb
jmp
dec
call
add
es
sub
push
bound
or
mov
xchg
fcmovnu
lock
ret
lods
dec
jecxz
pop
test
loopne
cmp
and
cmp
je
mov
lock
mov
insl
lock
mov
sbb
pop
add
inc
int
mov
popa
fs
push
pop
lcall
out
push
add
frstor
sub
lods
sbb
dec
movsb
jb
jns
mov
pop
hlt
movb
sbb
mov
adc
clc
test
rcl
pop
add
add
shll
lea
sbb
mov
pop
call
popa
dec
or
mulb
pop
sub
push
jmp
das
pop
cmpsl
add
dec
jmp
dec
sbb
pop
into
xchg
dec
dec
adc
push
push
fiaddl
pop
mov
and
adc
shl
sbb
leave
add
push
sub
push
pop
jns
es
mov
gs
mov
repz
and
or
andb
test
lods
hlt
movsb
pop
ljmp
push
bound
aam
lock
je
push
push
movsl
ljmp
rolb
rolb
mov
movsb
add
jae
and
sbb
cmpb
inc
push
jmp
cmp
add
inc
or
inc
inc
dec
xor
cmp
lcall
fbld
pusha
outsl
inc
ja
or
mov
sub
cltd
pop
lods
jmp
dec
add
push
mov
xor
push
out
adc
les
pop
lock
xor
filds
sbb
pop
adc
mov
inc
int3
nop
push
inc
cmp
inc
push
enter
jo
inc
lcall
dec
push
nop
add
add
inc
std
mov
leave
mov
lahf
pusha
jmp
imul
adc
add
sub
ret
pop
mov
addb
inc
cmc
rep
negb
dec
push
ret
xchg
popa
adc
add
inc
sbb
es
add
loopne
ss
xchg
stc
push
and
out
outsb
mov
mov
fstps
insl
ds
jmp
pop
arpl
xchg
push
sub
gs
fs
sub
loope
inc
mov
and
lcall
mov
js
or
cmp
out
inc
adc
mov
adc
push
ljmp
into
sub
in
cwtl
pusha
cmpsl
roll
jo
test
dec
jl
stos
pop
lret
jbe
js
adc
mov
push
cmpl
cld
nop
push
mov
ret
sbb
add
push
push
inc
andl
xchg
bound
lods
pop
adc
rcrl
lcall
dec
cmp
dec
push
or
xor
adc
sbb
add
arpl
dec
adc
stc
cmp
push
push
int3
jmp
dec
loop
enter
js
pop
sub
or
mov
jmp
mov
xchg
adc
dec
lcall
std
data16
jg
pushf
xchg
and
insb
jmp
push
sub
inc
or
sbb
adc
shl
gs
popa
push
push
mov
push
add
push
jl
push
outsl
sbb
cld
arpl
imul
sub
call
ja
mov
jmp
or
sarb
pop
xchg
bswap
add
rclb
jge
cmp
fiadds
rcr
adc
rolb
lret
mov
sbb
ja
pop
xchg
or
jbe
addl
js
dec
fdiv
call
sbb
cld
fcoml
sbb
or
cmp
mov
jle
repnz
inc
push
aam
adc
lcall
sbb
pop
lods
xchg
push
xchg
cmp
mov
add
shll
cmp
mov
fistpl
rorb
roll
fsubr
shll
hlt
fmuls
jae
inc
sbb
inc
gs
lahf
mov
sar
cmpsb
sub
cmpsl
hlt
pusha
sbb
jmp
pop
fnsave
sub
push
incl
in
mov
or
fs
cmp
mov
adc
and
adc
lods
sub
inc
stos
gs
fadds
add
ffree
or
sub
push
mov
or
ret
dec
rolb
pop
aaa
inc
sbb
mov
lret
insb
push
loopne
dec
call
xchg
cmpb
fisttpl
imul
lahf
daa
notl
xor
and
push
cmp
push
inc
sbb
je
mov
add
iret
xor
push
dec
or
push
lods
mov
inc
mov
push
fs
mov
pop
repz
sti
sbbb
mov
push
lea
dec
xchg
loope
mov
jle
popf
add
call
xchg
rclb
cmpl
add
or
hlt
add
rolb
xchg
pop
inc
lcall
adc
bound
push
push
std
adc
insb
call
dec
aas
push
pop
in
or
pop
or
sbb
hlt
and
dec
shll
je
and
test
or
adc
add
mov
push
push
push
adc
lret
test
sub
xchg
lret
xor
adc
sub
lret
out
iret
cmp
push
or
out
lret
lret
add
adc
popl
add
lods
cmp
add
inc
mov
mov
push
movl
cmp
xor
movsl
test
sarb
fwait
xor
sbb
mov
mov
adc
inc
push
mov
test
and
lock
mov
mov
cmpl
or
cld
sub
or
mov
je
pop
or
dec
mov
in
mov
adc
or
sub
add
daa
mov
inc
sbb
xchg
lret
in
cwtl
rorl
adc
loope
or
and
fmuls
in
stos
add
pop
add
pop
sub
mov
inc
dec
jne
int3
repz
mov
bnd
shlb
lea
add
call
test
in
inc
cmp
fdivrl
cmp
ret
ljmp
pop
mov
movb
insb
ret
out
and
int3
xchg
and
mov
push
sub
lock
or
add
dec
xchg
pusha
xor
cmp
test
ficoml
push
push
ja
adc
aaa
mov
sub
js
lcall
push
add
pop
inc
inc
cld
push
or
and
cld
xchg
orb
mov
mov
movsb
lods
jmp
and
je
and
icebp
xchg
jge
mov
mov
adc
aad
jmp
mov
dec
inc
cwtl
mov
lods
leave
sub
mov
cmp
xor
and
sbb
lret
test
ret
jae
ljmp
jmp
add
cld
xor
dec
ret
inc
mov
adc
mov
jg
insl
pop
mov
ja
inc
add
inc
xchg
inc
push
pop
inc
lods
add
xor
or
dec
clc
xlat
xchg
lahf
and
mov
inc
mov
mov
push
cld
inc
rorb
mov
or
add
pop
fstpl
xchg
into
shll
faddl
jb
jns
inc
cmp
std
jne
loopne
das
sarl
jmp
sub
stos
pop
mov
jmp
mov
sarb
inc
add
inc
and
sbb
mov
add
pop
lea
popa
jp
mov
mov
or
cld
jbe
cmp
or
dec
mov
xor
mov
cs
push
add
xchg
jbe
and
xor
inc
test
inc
shrb
aaa
and
stos
jbe
push
call
movsl
xchg
movsb
stos
in
lea
mov
mov
pop
imul
push
inc
pop
leave
inc
and
ror
dec
in
leave
xor
push
cmp
sub
jg
call
loopne
adcb
cmp
lcall
mov
jne
outsb
jle
pusha
inc
jge
add
jb
mov
push
mov
xchg
inc
out
insl
andl
mov
call
xor
mov
inc
inc
inc
dec
jne
mov
inc
icebp
ds
dec
fisttps
jl
sbb
divb
das
xor
xor
inc
push
mov
inc
dec
std
sahf
adc
jne
cld
test
add
rorl
gs
scas
dec
adcb
test
xor
sbb
mov
aad
adc
mov
orl
adc
bound
add
dec
test
loop
push
dec
push
clc
shll
mov
add
mov
loopne
mov
pop
push
pop
out
add
mov
roll
jbe
inc
adc
xor
es
cmp
mov
cmp
sub
add
dec
test
test
xor
fldl
or
xchg
std
and
fs
push
or
mov
test
add
loopne
idivl
sub
jmp
xor
stos
xorb
jge
mov
add
repz
ret
ss
push
out
or
adc
mov
fwait
ljmp
xchg
add
inc
and
fs
xlat
lret
cmp
std
test
sub
and
pop
movl
mov
xorl
sbb
push
iret
dec
imul
adc
pushl
into
int3
sub
lahf
movsb
jnp
das
adc
data16
mov
sbb
sub
ret
ss
mov
shlb
imul
push
lahf
test
pusha
mov
mov
sub
inc
push
sbb
in
inc
pushl
out
jle
or
into
cmpl
fs
mov
js
pop
cmp
xchg
inc
add
loopne
or
decl
jne
arpl
push
push
sbb
pop
enter
mov
fucomp
push
sbb
mov
lea
test
sub
aaa
cmpl
lea
ret
shld
repz
movsl
sub
or
sub
mov
ret
test
xor
xor
test
push
inc
pop
xor
xor
cmp
adc
rcrb
sbb
push
mov
add
inc
pop
jbe
xchg
fdiv
ret
adc
dec
jle
sbb
jo
fs
pusha
loope
add
ds
pop
sbb
pop
jmp
and
jo
push
ficomps
jno
xor
push
jbe
pop
mov
mov
imul
and
shl
push
cmp
rol
pop
push
lods
add
daa
mov
jp
and
pop
sub
push
jp
push
ss
add
push
shrb
leave
cld
test
repz
pop
ror
cmp
in
xchg
cmp
lock
inc
fisubl
cmp
push
push
push
mov
mov
xor
mov
pop
setg
mov
sub
dec
andb
pop
ljmp
pop
dec
or
add
dec
pushf
cwtl
and
sbb
cmpsb
xchg
fstpt
sbb
push
jo
pusha
pop
add
sub
jne
xor
inc
mov
or
xor
andl
cmpsb
out
sub
insb
cld
mov
and
arpl
push
cmp
outsl
inc
xorb
mov
loope
inc
sub
cli
pop
ret
addr16
inc
ret
dec
push
pop
rolb
sub
enter
xchg
sbb
jbe
pop
jns
pop
das
add
clc
orl
into
or
sbb
shlb
pop
push
xor
and
lahf
es
dec
clc
inc
and
xchg
dec
dec
sub
sub
nop
add
xor
inc
add
nop
add
ret
pop
cmp
int
jne
push
jmp
push
sub
jmp
lahf
mov
shlb
pop
not
pop
mov
adc
test
or
mov
pop
insl
insl
jg
push
push
adc
rolb
sbb
test
test
mov
cwtl
out
and
cmpsl
dec
mov
push
jge
shlb
or
xor
hlt
pop
daa
test
jge
mov
ja
dec
ja
adc
mov
lea
scas
sbbl
mov
inc
mov
pop
pushf
cwtl
mov
inc
loopne
aaa
xor
mov
push
xchg
mov
sub
and
xor
nop
adc
mov
sub
push
xor
jp
movsl
dec
mov
sub
inc
jnp
inc
popf
sbb
mov
dec
mov
or
mov
mov
fcoml
shl
repnz
mov
int3
data16
popf
enter
repnz
movsl
shrb
pop
dec
js
cmc
pop
add
shll
ss
enter
dec
cld
sbb
rcl
in
sub
aam
or
cmp
mov
js
add
fcomps
cmp
test
add
push
pop
popf
test
pop
daa
mov
movsb
js
jmp
sub
shrb
add
xor
mov
add
inc
fsubrs
xchg
mov
mov
es
and
cmp
adc
testb
loop
lret
inc
and
cmp
jnp
lret
xor
mov
push
cwtl
jle
jb
inc
pop
and
imull
in
jg
sbb
push
iret
repz
add
jle
call
or
repz
push
jmp
jg
mov
xorb
xchg
nop
aam
inc
loop
clts
and
enter
sbbb
or
push
test
pushf
movsb
mov
pop
ficomps
or
push
call
cld
sbbb
adc
mov
test
cmp
ss
mov
push
push
lock
test
cmp
outsb
pusha
mov
movl
pusha
push
cld
cli
dec
xor
and
mov
lret
jne
sti
dec
adc
rorl
imul
jns
add
mov
sub
sbb
test
stc
and
cmpsl
mov
loop
shlb
or
icebp
inc
in
adc
call
add
add
and
cmp
and
add
neg
pop
idivl
aas
in
adc
add
mov
mov
dec
mov
daa
loop
xor
daa
fwait
adc
addl
daa
jo
orb
sub
fdivr
push
or
inc
or
je
cmp
pop
icebp
dec
dec
adc
sbb
or
cmp
movsb
jno
or
sub
push
push
jge
jmp
add
inc
add
adc
ret
xchg
cs
data16
or
push
adc
inc
add
mov
and
add
inc
jbe
sbb
or
bound
mov
lock
lea
push
push
or
inc
and
add
dec
test
sbbl
repnz
xchg
mov
pop
jns
inc
loope
testb
mov
enter
ret
sub
je
movl
sub
fmuls
sbb
and
add
and
out
sbb
and
or
lock
xor
adc
jl
ljmp
cmp
mov
daa
xchg
adc
dec
xor
jno
add
cmp
mov
dec
loopne
adc
adc
add
xor
test
add
addr16
cmpsb
lea
inc
sub
sub
mov
lea
inc
cmp
cmc
dec
ss
add
ficompl
mov
cmp
jbe
int
loopne
shl
push
inc
sbb
lock
gs
es
and
hlt
mov
hlt
sbb
inc
incl
and
fstps
sbb
rol
pop
cmp
sub
mov
test
sbb
inc
mov
mov
or
mov
add
lock
or
arpl
stos
push
push
movsb
sub
movsl
or
and
int3
inc
mov
test
sbb
mov
xchg
pop
imul
aam
mov
adc
jbe
push
and
pop
inc
loopne
fcmovnb
loope
ljmp
std
fucom
xor
cmp
jno
jp
stos
std
outsb
cmp
xor
jbe
in
xlat
adc
sub
adc
mov
dec
xchg
push
cmp
cmpb
inc
xchg
push
dec
mov
ljmp
jns
cmpsb
add
ja
or
push
xchg
mov
pop
push
incl
add
inc
pusha
jp
mov
aam
add
and
sbb
adc
xchg
hlt
or
ret
mov
ljmp
sbb
lock
dec
jmp
inc
or
add
sub
je
sbb
inc
sahf
mov
ja
xor
idivl
popf
in
mov
xchg
aam
fadd
fsub
not
pop
cmp
xchg
cmp
push
push
mov
jne
loop
mov
mov
cmpsl
adc
leave
movzwl
jl
loopne
or
xchg
subb
enter
fimuls
jnp
jne
rcrb
lea
es
jbe
cs
ja
mov
movsbl
fst
loopne
js
test
push
clc
add
mov
cmp
cmc
add
mov
jnp
lock
les
xchg
lret
aam
clc
fmul
lods
loop
popa
jl
sub
dec
or
je
or
sub
je
sbb
xchg
int3
pop
addr16
pop
or
add
loope
pop
andl
nop
cli
sub
notb
test
mov
adc
neg
xchg
add
imull
xor
mov
rcr
int3
adc
inc
or
ja
movsl
mov
jns
and
mov
hlt
out
jo
dec
sbb
mov
push
or
inc
insb
je
xor
mov
test
ret
insb
nop
imul
pusha
sub
in
mov
mov
pop
and
pop
or
and
mov
dec
xor
cmp
and
movsl
pop
addr16
int3
add
fs
or
sbb
fwait
imul
lcall
pop
xlat
cmc
test
mov
add
push
jecxz
loope
mov
fs
inc
addr16
or
sbb
out
mov
inc
je
pop
push
or
add
mov
ret
add
hlt
pusha
or
jb
test
jmp
dec
nop
and
sbb
je
push
jae
cmp
test
shl
add
les
xchg
jl
dec
xorb
cmpl
mov
and
or
cmp
in
or
xor
mov
aaa
ljmp
mov
add
jge
push
dec
or
jb
or
inc
inc
js
push
addr16
insl
cmp
out
shlb
xor
negl
lea
mulb
dec
lret
sbb
test
ss
sub
and
pushf
je
in
pop
cli
inc
mov
push
mov
sub
inc
pushl
cmp
xchg
push
add
cmpsl
in
daa
jge
lcall
push
dec
nop
inc
mov
dec
pop
fwait
pop
loope
push
callw
xor
add
lea
iret
sbb
push
sbb
xchg
test
lret
sub
loop
mov
push
adc
das
sbb
je
cmp
je
lock
outsb
test
insl
rcr
xor
enter
bound
fisttps
movsl
lock
je
pop
xchg
jne
add
call
andb
mov
add
push
stos
add
add
into
ret
jg
jne
jle
mov
mov
jne
mov
jmp
cmp
jle
cmp
fnstsw
mov
sbb
loope
pop
mov
sub
add
int
or
mov
sub
scas
fucomp
call
cld
adc
inc
sahf
cmc
mov
fimuls
lea
xor
and
test
js
jecxz
lea
stc
push
movsl
push
pop
test
cmp
sbb
dec
scas
clc
add
jne
and
push
adcl
push
orb
movsb
sub
xorb
cld
decb
mov
std
inc
jp
pop
lds
add
adc
push
sbb
data16
push
or
push
lret
push
out
loop
mov
adc
inc
filds
enter
sbb
inc
push
mov
mov
or
dec
clc
popa
int3
je
cltd
nop
rorb
cmp
pop
jl
mov
repnz
mov
jecxz
nop
pop
fimull
mov
or
sbb
dec
test
pop
mov
or
jne
and
lea
addr16
or
jo
fs
inc
je
mov
cltd
push
jmp
scas
vpunpcklqdq
cmp
xchg
clc
popf
loop
xor
add
mov
dec
jmp
pop
xchg
sub
add
movb
stos
aas
or
cmp
into
cmp
sub
shlb
xor
cmc
push
jmp
mov
cld
and
push
loope
or
lret
inc
int3
jle
and
cmp
js
es
push
je
gs
add
dec
lds
cld
sub
jmp
orb
jmp
test
mov
and
loop
mov
fisubrs
popf
fcoml
or
nop
cmp
shl
push
jp
imull
xchg
xor
fmull
jns
lods
push
dec
adc
push
jbe
dec
pop
mov
fdivs
jnp
xor
cmp
or
pushf
push
jl
mov
rcll
push
jbe
adc
pushf
test
movsl
test
in
lods
add
cmpsb
adc
mov
data16
push
loopne
cmp
jl
mov
add
push
xchg
xchg
insb
inc
and
adc
js
out
movsl
daa
pop
mov
xor
sahf
mov
sub
movsb
cmp
js,pt
xor
cld
in
ret
xor
mov
out
sub
mov
or
out
jns
shll
pop
leave
pop
fidivl
ss
sarb
notb
imul
sbb
lahf
adc
inc
mov
aam
jge
idivb
pop
sbb
sbb
or
push
lea
adc
add
sbb
int
or
testl
test
push
insb
push
add
sbb
or
daa
or
add
or
mov
mov
rcll
mov
add
sbb
push
pop
xor
fdivrl
push
aas
out
popa
sub
in
xor
pop
adc
ret
nop
cmc
xor
dec
dec
clc
sbb
loope
in
fmuls
dec
dec
push
dec
pop
jl
xor
cmp
ss
lahf
ret
outsb
push
jecxz
mov
jmp
push
and
hlt
or
pop
mov
push
adc
daa
pusha
inc
repz
or
or
inc
xor
test
sbb
add
mov
push
add
adc
and
insl
jg
push
mov
or
or
adc
and
jmp
push
or
jb
rol
add
adc
jmp
in
mov
stc
clc
and
jp
sub
sarb
out
jnp
dec
imul
mov
inc
and
mov
cld
lret
add
pushl
push
lea
mov
mov
mov
ds
sbbb
cli
mov
dec
cmp
jbe
push
pop
cli
cmp
jne
jg
add
subb
jae
mov
shr
lea
not
and
lret
cli
mov
add
sbb
lea
dec
loope
loopne
pushf
mov
loopne
pop
pop
add
push
dec
pop
add
addr16
jnp
add
pop
and
push
or
or
jmp
or
cli
pop
clc
and
push
push
sarb
clc
and
sti
add
jp
pop
lods
adc
fimuls
cli
idivl
and
cmp
je
shlb
lret
cmpsb
data16
mov
shr
not
and
add
pop
dec
add
xor
insl
mov
dec
loopne
mov
xor
push
jle
pop
dec
add
gs
cmpsb
push
mov
cmp
loopne
add
push
leave
pop
faddp
mov
cmp
rorl
dec
or
adc
or
dec
pusha
mov
mov
push
mov
fadd
mov
mov
and
lods
push
out
add
pop
mov
jmp
dec
xchg
imul
push
mov
rorl
and
cld
and
es
into
repz
shll
lods
stos
pusha
iret
mov
push
rcrl
sti
loope
add
scas
jp
push
call
aas
gs
js
mov
push
or
cmp
flds
sub
dec
inc
adc
dec
adc
add
and
pushl
inc
adc
mov
mov
push
in
orl
call
fildll
enter
test
cmp
sbb
jl
call
cmp
or
mov
mov
inc
xchg
mov
xor
push
imul
lock
cmpsl
test
cwtl
outsl
push
ja
or
js
add
dec
adc
les
or
sbb
jo
xor
mov
xchg
xor
push
movsb
adc
and
jmp
orl
add
lds
and
mov
mov
xor
aad
jecxz
add
inc
ljmp
mov
xchg
repnz
incb
pop
xorb
testb
dec
jne
or
sti
mov
sub
int
or
inc
popa
mov
lea
dec
jo
cli
ja
sub
shr
push
clc
pop
push
mov
orl
orl
andb
mov
push
out
scas
mov
cld
lock
call
inc
loope
ljmp
add
add
lock
adc
push
pop
or
fs
inc
arpl
cli
mov
mov
lock
nop
dec
inc
jne
or
clc
aad
js
lds
not
and
add
add
sti
or
clc
mov
mov
out
mov
sub
and
pop
mov
rcrb
jb
cld
mov
or
adc
shlb
inc
call
pop
fmuls
add
scas
add
mov
int3
push
pop
xor
mov
pop
inc
add
sbb
clc
rolb
push
cs
es
add
cmp
nop
dec
or
int
add
push
jns
push
nop
jge
sub
add
inc
sub
lods
std
lret
lods
adc
pushf
sar
dec
mov
call
pop
hlt
lea
add
aad
pop
pop
jg
or
mov
shll
pop
adc
lcall
iret
subl
jmp
pop
pop
shl
aaa
js
test
ss
jne
iret
add
ret
xor
out
cmpsb
je
add
and
or
sub
orb
jge
mov
sbb
lds
xor
push
sar
dec
jp
shlb
mov
dec
pop
push
pop
cmp
sbb
adc
mov
dec
je
fisttps
xor
dec
xor
add
fnstenv
in
loopne
dec
ficoms
add
mov
loope
ret
ja
dec
lea
mov
test
mov
ret
adc
push
cmp
lods
sub
into
mov
test
cmp
lods
dec
inc
and
sbbb
mov
jp
insb
sub
lods
pop
and
inc
add
mov
push
push
push
jge
add
shr
adc
cwtl
inc
les
in
or
stos
pop
js
sub
fldcw
push
or
mov
nop
cmp
and
decb
xlat
jne
add
rcr
stos
lods
cmp
jb
push
jne
mov
cli
jae
fnstenv
jmp
jnp
add
shrl
aaa
arpl
test
aaa
orl
sbb
adc
sub
pop
lcall
fcmovnb
das
push
cmp
je
mov
in
cmovbe
mov
and
inc
sub
jl
and
iret
jne
adc
pusha
divl
mov
dec
aam
pushf
xchg
in
mov
out
repz
mov
and
jne
mov
push
pop
or
leave
inc
test
inc
push
pushf
mov
les
sub
icebp
sbb
sub
cld
add
dec
add
xchg
sbb
ror
push
repnz
insb
and
mov
decb
jne
xor
mov
or
sub
dec
mov
lret
pop
pusha
dec
bound
outsb
cs
dec
push
and
cmpsb
imul
and
xor
roll
or
pop
xor
inc
and
or
cmp
cmpsl
bndstx
or
cmp
or
push
or
add
inc
mov
pop
dec
lock
mov
call
jo
js
shrl
and
lods
test
lea
ds
jne
cmp
loope
sbb
mov
and
push
hlt
jo
leave
ficomps
sbb
jmp
negb
sahf
xor
cmp
jge
xor
out
or
xorl
inc
inc
sahf
add
add
pop
or
sbb
xor
jbe
test
or
adc
ret
clc
outsl
cmp
xor
push
mov
add
adc
out
cmpsb
lock
insb
loopne
mov
nop
xlat
mov
pop
push
aas
adc
shlb
dec
mov
add
and
movsl
rorb
jnp
clc
flds
mov
jbe
sbb
pushf
inc
ret
cs
mov
mov
test
pop
test
pop
ret
repnz
sbb
shll
or
fistps
and
cwtl
xchg
inc
add
lahf
xchg
jmp
push
push
movsb
inc
push
dec
add
add
cmp
ret
fisubrl
testb
lahf
pushl
adcl
xor
imul
out
pop
jne
push
in
adc
fldt
pop
rcrl
nop
jo
movsl
mov
adc
mov
mov
clc
sub
movsl
inc
js
push
or
cli
push
xor
adc
push
outsb
xcrypt-ctr
cmpsl
pop
jl
rolb
xchg
mov
and
mov
pop
lahf
insb
int3
push
and
int3
jecxz
imul
mov
inc
je
imul
test
sarb
push
adc
add
shlb
pop
xchg
adc
sbb
dec
ret
sbb
lcall
in
jg
cmpsb
add
inc
jg
shlb
je
cmpl
add
jmp
xchg
rcll
dec
insb
inc
mov
inc
inc
jns
adc
push
sub
roll
xor
jo
xor
int
imul
pop
sub
adcb
lea
dec
hlt
push
add
and
and
pop
xor
push
and
mov
sahf
outsl
mov
pop
lock
jge
jmp
jns
imul
lods
mov
into
je
push
and
loopne
mov
jle
cld
rorl
subb
test
scas
mov
xor
sub
pop
lcall
mov
stc
sbb
roll
loopne
and
movsb
mov
sub
add
xor
mov
sbb
in
lods
or
ret
pop
add
lods
sbb
sbb
xchg
arpl
push
push
xor
jns
pusha
lds
rorb
add
leave
sub
nop
fistl
repnz
sbb
fisubrs
hlt
imul
hlt
icebp
push
nop
inc
sahf
push
inc
pushf
fistps
xor
jne
jp
sbb
pop
and
lods
pop
sbb
jg
adc
and
sbb
inc
or
sbb
inc
adc
or
cmc
movsl
xor
and
loope
adc
and
les
std
xchg
push
stos
orl
int
ret
test
shll
enter
cltd
fcmove
xchg
lret
enter
add
mov
subl
test
aaa
rdmsr
inc
or
call
enter
sub
inc
cs
xor
nop
call
and
pushf
mov
test
xchg
in
scas
dec
outsl
and
call
push
pusha
inc
enter
mov
add
repnz
adc
fimuls
cld
fwait
push
stc
inc
cmp
inc
pop
mov
push
test
lret
add
inc
mov
shll
and
call
pop
in
cwtl
sarb
mov
pop
xor
aam
push
lods
movsb
xor
add
sbb
xchg
cltd
push
add
add
call
inc
in
or
mov
mov
xor
cltd
in
rolb
mov
out
loop
in
sbb
pop
push
inc
in
orb
test
mov
jb
test
mov
mov
icebp
adc
xchg
loop
call
mov
sysret
sub
or
int
aad
aaa
cli
push
jns
pop
andb
cmp
xor
ss
inc
cli
xor
test
aad
daa
cmp
nop
jo
pop
push
dec
lea
cmp
add
cltd
lret
scas
lret
mov
mov
xchg
ret
test
loope
jne
sub
or
movsb
je
sarl
pop
xor
inc
mov
mov
popa
pusha
fwait
and
jo
or
pop
test
push
lods
loopne
xor
cltd
das
mov
testl
sub
lea
xor
push
push
lea
adc
gs
test
popf
shr
lds
mov
clc
popa
test
cmp
jne
inc
loope
int
cmp
and
iret
imul
sub
lds
xor
xorl
movsb
fcmovb
add
jne
mov
nop
sbb
shll
xchg
cmp
pop
fadds
sub
mov
mov
out
add
add
mov
mov
js
add
add
add
pop
mov
sahf
adc
mov
and
cmp
jl
inc
add
pop
inc
add
jne
call
mov
or
lods
ficomps
cld
push
ds
mov
inc
mov
dec
cmp
add
adc
add
das
inc
xor
xor
pop
movsl
mov
not
and
adc
and
mov
cmp
sub
pop
lcall
add
cli
push
cmpsb
imul
mov
les
enter
dec
push
adc
xchg
jno
aam
lret
fcoms
adc
mov
std
inc
lret
je
pop
sbb
jno
lret
jmp
cmpsl
in
mov
rcrl
int
mov
mulb
and
add
jno
je
push
clc
add
insb
inc
fmuls
fimull
outsl
xor
fstpl
push
fldl
or
fldl
or
xorl
aad
jns
inc
insl
fcmovnu
jns
add
push
leave
fnsave
sti
pop
jmp
jo
push
dec
lods
stos
mov
xor
cmp
das
sti
scas
pop
xor
dec
xchg
dec
je
add
ret
xor
sbb
sti
insl
xchg
push
cltd
fnstenv
lcall
outsb
sti
ljmp
cmp
mov
add
sub
or
add
and
addr16
add
inc
test
lock
lret
xchg
adc
repnz
mov
cld
lock
hlt
or
pop
lock
adc
pop
push
imul
cmp
push
push
adc
psrlq
push
lret
fsub
mov
aaa
jne
das
and
inc
lock
lods
and
dec
push
push
push
cmpsl
stc
cmp
pop
outsw
cli
mov
jge
repz
in
push
xchg
lret
std
pusha
imul
adc
sahf
fnstcw
bound
push
or
or
cmp
push
push
dec
xor
push
xor
cli
push
or
jne
ds
xchg
jle
adc
sbb
and
inc
or
scas
and
push
push
xchg
jmp
inc
push
fiaddl
pop
test
fisttpll
mov
push
jmp
test
add
fmull
pop
inc
jp
andl
test
jne
push
push
subl
leave
jle
testb
push
push
add
adc
cmc
push
mov
sbb
and
dec
lods
push
inc
aas
adc
mov
cmpsb
fs
out
sub
fisubrs
sub
sbb
xor
xchg
imul
aad
add
js
adc
push
adc
pop
sub
test
jb
call
push
jmp
xor
leave
lods
std
mov
testb
pop
jno
sbb
pop
pop
mov
dec
xchg
mov
cli
pop
push
cltd
ret
sar
add
mov
lahf
dec
testl
xchg
dec
sbb
pop
cmc
mov
mov
std
lea
testb
add
fstpt
fldln2
dec
cmp
mov
loopne
jge
cs
rolb
jo
add
lock
sub
jl
or
insb
xchg
adc
pop
jb
xchg
lret
mov
lods
push
inc
ret
andl
and
out
rorb
shl
or
xchg
jno
sbb
jne
enter
pop
or
mov
add
enter
sbb
aas
test
iret
mov
cmp
lods
mov
aam
sar
or
iret
and
inc
sahf
je
xor
mov
es
popa
push
test
xor
push
or
inc
movsb
subb
lahf
movsl
adc
cmp
inc
sub
pop
mov
mov
and
cmp
jne
cmpb
insb
lret
testl
inc
xor
mov
xchg
movsl
cmpsb
inc
push
fisubl
push
scas
aad
cmp
push
int
xor
cmpsb
rol
jne
js
or
cmp
fsubs
push
mov
cmpsb
dec
movsb
leave
xor
mov
fimuls
add
lret
enter
andl
repz
jecxz
or
add
lret
mov
repnz
adcb
mov
jl
pop
xor
xchg
add
lret
adc
cld
sti
push
inc
cmp
mov
setge
std
fnstsw
in
mov
mov
testl
fisubrl
stos
mov
cwtl
jecxz
fnsave
xchg
stc
mov
push
adc
imul
cltd
push
orl
sub
push
push
imul
daa
jecxz
jns
daa
mov
sahf
mov
mov
rolb
dec
jns
test
hlt
std
add
or
sub
sarb
xlat
pop
enter
mov
and
imul
cmp
or
pop
divl
outsb
into
je
testl
pop
insb
adc
cmp
fs
in
daa
xchg
lret
cmp
jecxz
dec
sbb
jns
xchg
loopne
insl
cmpsb
pop
or
aaa
subl
lock
fdivr
adc
or
lds
mov
test
das
pop
cmpsl
adc
add
shlb
pop
nop
mov
gs
jl
jmp
mov
call
imul
add
jecxz
repnz
mov
push
inc
xchg
std
push
mov
pop
push
xchg
daa
mov
mov
mov
inc
mov
div
xchg
popf
lret
nop
std
lds
sub
lea
xchg
stos
pop
out
imul
mov
push
pop
imul
cs
mov
int3
hlt
sub
push
push
lods
pusha
xchg
roll
xor
std
mov
mov
test
xlat
pop
imul
jmp
sahf
push
daa
push
xchg
aad
test
adc
push
cmpsb
mov
dec
xor
sbb
adc
jne
cmpsb
jb
inc
inc
adc
stos
popa
dec
pushf
cmp
dec
and
cmp
mov
sbb
pop
nop
xchg
std
xor
popf
imul
xor
jns
std
mov
jp
repz
daa
sbb
mov
popa
dec
push
mov
decl
dec
ds
sub
mov
sub
push
inc
or
ja
ljmp
push
lret
dec
cmc
rcrl
sub
xchg
xchg
pop
lock
xor
push
push
push
jmp
jmp
sbb
jmp
jo
lods
adc
adc
and
int3
cmp
mov
sub
addl
dec
test
lods
lods
in
add
dec
jns
out
jl
lock
dec
adc
adcl
fbstp
into
dec
pop
push
pop
insl
mov
movsb
adc
test
hlt
out
arpl
jae
inc
push
inc
lret
jne
cmp
jo
or
cwtl
cmovge
ds
jne
or
fdivr
clc
xor
inc
das
push
dec
pop
test
jl
je
pushf
xor
or
sub
add
daa
loopne
cmp
xchg
aaa
fsubrl
cmpb
adc
and
nop
and
push
push
mov
dec
repz
pop
mov
xchg
or
and
leave
movsb
test
add
and
mov
inc
adc
cmp
arpl
loopne
mov
push
mov
push
cmp
cmp
dec
pop
jecxz
ja
inc
or
mov
or
mov
in
jo
icebp
mov
int
mov
mov
mov
nop
imul
push
jno
xor
mov
push
rcll
lods
lock
pop
pop
add
mov
sub
xor
arpl
test
in
xor
sbb
jl
movsl
call
leave
call
push
mov
mov
enter
xlat
stos
jb
adc
and
cmp
jno
addr16
les
imulb
popf
enter
stos
push
mov
mov
movsb
jb
ja
sbbl
xchg
push
cltd
stos
xchg
outsl
popa
pushf
inc
and
dec
mov
mov
test
mov
test
cmpsl
inc
push
test
in
push
lcall
mov
test
out
loope
xor
mov
insl
and
pause
fwait
mov
jb
test
push
jmp
cmpsl
add
mov
mov
mov
pop
pop
inc
xor
js
jb
pop
pushf
pop
repz
xchg
mov
or
outsl
xor
scas
pop
mov
dec
add
mov
pop
xor
aaa
movsb
push
movsb
jb
jb
mov
and
mov
dec
dec
das
mov
mov
and
bound
xchg
mov
nop
push
enter
incl
mov
add
mov
nop
or
add
in
lods
or
dec
mov
dec
mov
push
mov
je
movb
sub
cli
scas
adc
popf
dec
mov
orl
add
ret
push
add
pop
test
mov
sub
sbb
push
lret
cmp
fcmovnbe
cs
xchg
pop
push
sbbb
mov
enter
lret
add
fcom
pop
push
mov
adc
rcll
aad
add
xor
rcrb
fidivs
test
or
xor
or
add
mov
adc
mov
mov
js
test
cmp
jo
mov
sbb
jne
push
jno
add
jnp
fsubrs
dec
lahf
xor
int
cmp
mov
push
sbb
dec
into
in
xor
mov
movb
sub
add
pop
dec
aad
push
repnz
bound
jbe
mov
test
stos
mov
xor
lcall
je
cmpsl
mov
sbb
push
pop
cmp
jae
xchg
and
jle
popa
pop
movsl
test
pop
sub
mov
std
push
cld
push
mov
shll
fucomip
stos
bound
test
push
jb
adc
mov
push
cmp
add
into
popa
sub
movsb
cmpsl
and
push
dec
es
out
dec
and
pushl
push
sub
sub
jg
sbb
pushf
xor
adc
aam
push
gs
mov
add
xor
lods
inc
rclb
adc
add
rcr
cwtl
lahf
or
push
adc
inc
sbb
and
clc
cmp
out
int
push
add
je
hlt
daa
clc
inc
push
ret
xor
pushl
testl
cmpsb
jmp
ss
sub
dec
jecxz
push
test
test
cmc
les
scas
mov
jp
xor
inc
popa
bound
andb
ss
or
pop
add
fisttpl
sbb
lds
jecxz
cmp
lock
fs
ja
jp
add
jmp
push
pop
push
push
imul
pushl
shr
rcr
shr
rcr
or
jne
div
pop
dec
adc
jg
outsb
fwait
inc
mul
pop
jb
cmp
or
cmp
or
cmp
sub
xor
or
neg
dec
fcmovu
lret
pop
adc
fxch
sbb
fimull
loopw
add
ja
pop
nop
js
enter
adcb
jne
clc
mov
stc
mov
cli
or
or
push
adc
push
sbb
mov
mov
adc
in
push
and
fldenv
dec
mov
xorb
sub
sub
or
push
aad
sub
xor
pop
pusha
pusha
xchg
add
ret
les
sbb
and
pop
adc
adc
popa
and
push
push
and
dec
or
cld
adc
dec
or
inc
mov
mov
cmpsb
mov
xchg
sete
dec
sbb
xchg
dec
add
shl
fidivrs
jne
lea
push
jno
xor
jb
jae
pop
or
adc
mov
jmp
loop
sub
test
ret
mov
mov
add
dec
inc
sahf
testb
and
xchg
popf
out
adc
dec
cmp
cwtl
push
sbb
mov
xchg
push
sbb
push
pop
mov
inc
inc
push
fnsave
imul
or
inc
jb
mov
ficoml
test
sbb
subb
mov
sub
in
test
push
pop
test
xlat
xchg
add
roll
aaa
stc
cli
aaa
add
int
pop
dec
js
xor
fbld
sub
fidivl
add
add
add
movsb
rorb
jb
in
or
stos
add
cmp
dec
lea
ret
ds
loope
fs
loopne
lods
add
mov
xor
fucomp
ret
movsb
shlb
push
sbb
leave
lods
arpl
loopne
test
inc
cmp
add
cltd
lock
mov
aas
cmp
fsubr
imul
cmp
repz
xchg
pop
hlt
lea
and
cld
add
les
mov
outsb
movsb
loopne
inc
lds
inc
rorl
and
dec
orl
or
adc
jecxz
iret
mov
cmp
or
push
ret
shl
push
adc
test
lret
clc
xchg
ret
stc
xor
inc
iret
xor
mov
mov
ss
push
xor
add
das
push
les
lahf
xorb
inc
insb
mov
push
out
cmp
je
ss
out
and
and
faddl
aam
xchg
ja
mov
pop
addr16
outsb
or
push
test
xchg
cld
pop
ret
push
rcrl
push
push
and
loopne
std
sbb
lds
xor
and
iret
push
mov
jae
or
unpcklps
adcb
sbb
repnz
hlt
hlt
mov
lea
fcompl
pop
cmp
or
out
sub
inc
jmp
push
fildl
add
cmpl
loop
xor
mov
adc
add
lods
push
addl
or
push
movsb
and
mov
adc
or
jp
inc
sti
jb
inc
sub
or
popf
lahf
sub
jne
popa
loopne
inc
jnp
out
loopne
lock
push
cs
pop
dec
les
rclb
cwtl
pop
mov
test
inc
fcoms
pop
adc
movsb
es
test
or
adc
arpl
mov
and
mov
mov
push
inc
imul
or
fimull
add
dec
test
imul
ret
push
push
push
or
fnsave
lea
push
aaa
dec
adc
inc
test
popf
or
outsb
and
mov
pusha
dec
add
shlb
daa
add
test
mov
or
adcb
and
frstor
subl
sbb
inc
add
and
sarl
call
cmp
sbb
mov
addl
xor
pop
cmp
cmp
and
cmp
lea
sbbl
cmp
adc
cmp
xchg
pop
mov
fs
lock
call
push
sbb
into
pusha
and
xchg
or
and
push
push
inc
jg
push
dec
xlat
out
push
cmp
test
cs
icebp
imul
push
sub
loopne
ret
xchg
add
hlt
add
pop
bound
add
push
pop
sub
dec
and
inc
sbb
mov
or
repnz
mov
or
mov
fxch
jne
andl
int
mov
add
push
cld
pusha
pushl
mov
lret
cmp
movsl
sub
cs
jmp
xchg
and
cmp
push
je
dec
je
stos
movsl
mov
mov
mov
xor
jb
mov
xchg
rol
xchg
call
cmp
adc
push
in
inc
mov
and
or
scas
mov
or
je
cmp
decb
jne,pn
sbb
inc
mov
cs
sub
adc
adc
and
mov
mov
sbb
push
push
or
dec
sbb
ss
ja
lock
sbb
push
push
ret
push
dec
jmp
jl
repnz
ret
test
inc
dec
add
aaa
xor
mov
adc
push
adc
fs
jno
xchg
sub
pop
add
sbb
add
cmp
inc
int
mov
mov
xchg
xor
cmpsb
pop
addl
sub
addr16
push
je
shll
jne
mov
js
and
cmp
or
ja
bound
and
cmp
clc
adc
dec
es
fldl
sub
xchg
and
adc
xor
mov
movsb
mov
mov
ja
hlt
popa
jmp
and
jo
imul
and
or
inc
frstor
rcll
dec
ret
and
sbb
mov
call
cmp
cmp
xchg
lock
push
inc
repz
mov
push
mov
in
sahf
in
cmp
xchg
lods
mov
adc
in
push
jmp
popa
xor
or
xor
push
imul
mov
and
jmp
ljmp
aaa
and
adc
daa
or
mov
ret
dec
add
lods
in
lcall
rcl
fsubr
mov
jb
add
add
push
or
in
fcomps
aaa
aad
adc
and
cmp
or
or
xchg
inc
pop
mov
push
cmpsb
inc
mov
adc
sub
mov
or
inc
mov
pop
and
adc
pop
adcb
xchg
add
inc
inc
xor
fcoms
in
loop
ja
cmp
inc
loop
scas
ss
jmp
xor
rclb
adc
add
inc
xchg
inc
inc
inc
pop
je
ficompl
mov
dec
test
jmp
pop
jb
jbe
inc
jl
adc
jmp
inc
dec
stc
add
fiaddl
adc
xor
xchg
inc
mov
add
movsb
inc
loopne
and
cli
cmp
or
mov
inc
mov
sarb
inc
add
sarb
pop
rolb
pop
add
popa
adc
jo
pop
out
cwtl
xchg
test
push
frstor
cmp
outsb
test
insb
inc
ja
xchg
movsb
lds
mov
xorl
fadds
fildll
or
jge
iret
aaa
clc
xchg
mov
stos
mov
jae
test
test
mov
adc
xchg
push
sub
sti
les
mov
jge
push
push
orl
or
and
mov
movsb
cmp
in
fs
inc
mov
and
sbb
inc
adc
and
out
dec
cmp
sub
push
and
inc
jne
rorb
mov
cmp
dec
inc
inc
or
jne
repnz
cmp
push
sar
pusha
sub
sbb
adc
in
das
mov
dec
cmp
shll
pop
clc
sbb
lea
dec
je
cld
flds
xor
scas
rorl
push
adc
add
and
loope
rcrl
mov
or
imulb
out
adc
int
pop
rolb
inc
int3
jo
shr
dec
pop
and
loope
xchg
pusha
mov
push
push
xor
xlat
mov
push
pop
push
dec
or
adc
xchg
sub
or
int
popf
adc
or
or
or
int
mov
push
and
xor
or
or
in
js
sbb
fstpt
mov
inc
daa
imul
mov
mov
pop
push
dec
add
jmp
roll
sbbl
jb
aaa
clc
sub
sbb
and
pop
and
dec
andb
js
mov
add
adc
jbe
dec
or
sar
sarb
jg
popf
xor
aam
dec
adc
dec
and
xchg
adc
adc
dec
jmp
dec
cli
push
mov
push
xchg
cmp
aas
and
mov
add
out
add
and
xchg
mov
inc
add
and
pop
push
adc
lahf
fmul
lcall
hlt
inc
adcl
lock
cmpsb
dec
repz
mov
dec
add
adc
push
xchg
and
ret
rol
dec
nop
into
lds
rol
cmc
push
add
lock
aaa
push
ss
jge
mov
aad
add
loopne
sbb
stos
add
or
je
and
and
add
jl
jb
loope
pusha
notb
test
and
cmpsb
rcr
and
mov
sbb
loopne
mov
test
loop
not
mov
xlat
inc
aam
adc
push
push
xor
mov
lock
shrb
lock
mov
cltd
sbb
lcall
repz
loopne
or
xor
not
push
orl
incl
enter
ficoms
enter
add
cs
pop
xor
xchg
data16
ret
sub
add
inc
int
sbb
dec
jmp
sub
xor
sbb
jg
adc
and
push
push
sub
lea
adc
popa
inc
sbb
dec
add
inc
clc
adc
cli
add
jo
loop
cmp
jle
cmc
inc
dec
roll
lret
sub
mov
xor
je
insb
mov
mov
ja
inc
sub
jge
hlt
rep
movsl
jmp
cs
add
lock
call
adc
repz
ds
mov
or
push
jae
xor
jo
dec
add
sub
in
mov
rcll
rorb
pop
stos
aaa
or
and
push
mov
ret
or
cwtl
pop
sahf
lcall
dec
inc
mov
mov
adc
ficoms
incb
jmp
pushl
add
out
pop
sub
adc
insb
or
xchg
and
pop
lds
cmp
loopne
movl
in
divl
insb
xor
cmpsl
repnz
js
cmp
loopne
jns
mov
adc
test
repz
mov
mov
je
pop
jnp
loop
cmp
pop
mov
cld
sub
pop
adc
mov
outsl
push
push
dec
adc
push
and
fdiv
pop
xor
push
pop
pop
lahf
iret
imull
inc
or
jbe
jle
pushf
movsl
test
jg
pop
sbb
out
sbb
js
adc
hlt
mov
mov
adc
mov
or
sbb
ret
in
push
ret
and
call
and
sbb
cmovg
mov
pop
ja
cmp
shrl
shll
imul
xor
inc
rep
add
jne
jle
adc
push
jno
mov
and
or
inc
dec
jl
push
ret
xchg
jmp
add
mov
pop
negl
push
aam
js
add
aam
hlt
push
sub
shlb
pop
lock
push
inc
or
aam
mov
jno
int
xor
sti
or
lods
mov
sbb
shrl
sub
fisubl
xor
dec
sub
push
dec
enter
push
sub
push
push
pop
cmp
jnp
ss
pop
inc
arpl
or
sbbl
mov
test
dec
mov
stos
int3
or
and
sbb
xchg
pushf
or
xchg
test
add
add
jl
mov
xor
push
push
ret
inc
clc
mov
mov
mov
popf
adc
mov
cmp
pushl
add
adc
mov
jmp
repnz
fldl
inc
rclb
loope
andb
or
sarb
push
mov
test
aam
xor
cmp
cmp
ret
inc
sbb
aad
fwait
lret
aam
fcomp
and
push
push
inc
add
or
push
inc
pop
cltd
sti
call
mov
enter
adc
rorb
mov
sub
jo
lret
mov
stc
adc
inc
add
or
sbb
add
ficompl
fdivrl
jnp
cmp
mov
loop
inc
aam
inc
mov
test
aaa
popf
and
enter
dec
dec
push
rorb
or
add
mov
rolb
xchg
lods
and
xor
cmp
inc
jmp
xor
in
movsl
and
dec
jbe
jne
imul
inc
mov
cmc
aas
sbb
push
mov
or
test
fmull
add
loopne
and
popa
sbb
adc
inc
cmpsb
rcrb
xor
dec
imul
cmp
sbb
sub
xor
and
mov
jne
and
add
xor
mov
leave
mov
cs
or
add
ret
cld
imul
cmp
add
push
sbb
jno
mov
adc
repz
sub
pop
fisubrl
aas
fisubs
push
ljmp
xor
testb
je
pop
sar
testb
je
mov
mov
fidivs
or
test
or
mov
cmpsl
push
cmpl
inc
loopne
sub
or
lret
sub
fadd
dec
andl
pop
inc
and
sbb
cmp
or
jg
push
test
add
xchg
mov
idiv
or
or
cli
cmp
fadds
mov
inc
roll
jnp
gs
rcrb
add
mov
adcb
shlb
push
or
je
cltd
jmp
xchg
adc
or
lea
pop
and
mov
adc
xchg
jmp
sahf
xor
push
in
ret
mov
mov
cmp
push
imul
or
sub
sbb
cmp
mov
dec
adc
push
cmp
jne
xor
inc
insl
dec
jae
and
sbb
add
jge
push
xor
push
push
stos
sbb
cmp
icebp
sbb
test
add
xor
hlt
push
fldl
loopne
xor
or
add
add
ret
jg
inc
popa
outsl
int
add
jne
loopne
nop
jnp
imul
sbb
or
stos
jo
and
bound
push
push
adc
and
sub
sbb
rcrb
push
cli
xor
pop
pop
fs
pop
jl
add
imul
push
sub
mov
leave
xchg
shrb
mov
fstpl
cld
push
mov
fneni(8087
lea
cmp
xor
sub
sub
lea
dec
jl
gs
add
dec
pop
sbb
jae
js
repnz
pop
fsub
mov
ja
sub
mov
loope
fdivs
aaa
inc
and
clc
or
je
and
push
pop
stc
xchg
jp
outsl
mov
mov
pop
cmp
pop
dec
cmp
pop
dec
or
sbb
bound
inc
or
sbb
push
lcall
cld
es
jg
mov
test
shll
dec
or
sub
pop
sbb
or
jcxz
xchg
mov
popa
and
ret
cmpsl
and
add
push
lods
pop
mov
add
rolb
mov
cmp
inc
push
pop
cmp
movsl
and
movsb
ljmp
ret
ds
cmc
mov
loopne
or
mov
jo
aaa
or
xchg
push
cmp
adc
sub
xor
add
mov
js
push
or
cld
sub
and
rclb
sbb
xor
repnz
mov
je
jo
stos
adc
loope
test
xor
ficoml
test
je
int
cltd
aam
push
lock
add
add
aad
xor
push
xlat
push
jae
loopne
push
sbb
je
xchg
je
add
dec
xchg
sbb
addb
imul
cmp
sbb
and
pop
add
orb
xchg
mov
push
jg
push
adc
ja
xor
repnz
push
xor
or
int3
aam
xchg
adc
popa
add
jecxz
mov
rolb
rol
jp
ja
fcoms
and
ds
sbb
cmp
inc
xor
popf
addl
push
add
and
jne
push
daa
loope
push
cmp
xchg
mov
aaa
xchg
icebp
enter
pop
sar
inc
cs
arpl
or
loop
sub
cs
add
jns
pop
lahf
mov
push
je
test
mov
xchg
out
jb
jb
cmpb
lea
in
xor
pop
je
pop
cmc
add
mov
test
push
cmp
lcall
jle
fwait
cld
ret
push
sti
xor
cmp
add
push
cmp
jl
mov
inc
sbb
ss
adc
sub
shrl
or
mov
add
and
ret
mov
dec
addr16
aaa
out
push
ljmp
shlb
movsb
sub
add
mov
cmp
mov
jp
pop
stos
repnz
dec
dec
add
or
jbe
enter
mov
stos
mov
mov
adcb
gs
pop
popf
js
data16
or
pushf
xor
dec
jmp
cmc
lods
mov
mov
mov
adc
xchg
or
sbb
xchg
xlat
jns
jne
fadd
cmc
jle
and
in
rcll
arpl
lods
xchg
cmp
add
adc
add
out
fs
jle
xchg
xor
adc
xor
inc
into
sub
jl
mov
inc
movl
xchg
stc
push
sbb
fldcw
ja
pop
inc
sbb
pop
mov
push
jle
lock
add
xchg
outsl
jne
enter
dec
inc
push
lock
and
mov
sbb
cmp
jl
push
mov
pusha
add
insb
aam
mov
adc
in
pusha
loope
add
jbe
add
lods
ret
cli
push
sbb
decl
mov
dec
jg
jecxz
mov
adc
orl
sub
jne
lret
pop
hlt
cmpsl
loopne
mov
jno
fadds
rolb
xor
xchg
test
cmpsl
add
pop
and
dec
dec
out
jb
mov
pop
mov
out
loop
pop
or
adc
test
push
ljmp
and
test
ja
push
push
dec
or
push
mov
lock
out
mov
es
lret
mov
clc
push
mov
ljmp
add
sub
test
cmp
mov
mov
inc
cmpl
nop
adc
xlat
je
cmp
add
adc
shll
testb
pop
inc
lock
loop
inc
sub
shlb
test
jge
push
jmp
inc
mov
in
mov
test
pop
mov
push
js
cmpl
sub
pop
adc
add
mov
push
or
push
in
push
pop
push
pop
push
or
mov
call
mov
das
xor
out
cmp
mov
add
add
ljmp
mov
cld
ja
test
mov
mov
shrb
fstpl
add
push
call
push
inc
pop
pop
mov
loop
scas
insb
jo
jno
sub
inc
insb
loope
push
push
push
mov
dec
aaa
adc
sbb
pop
sub
sbb
into
je
xchg
cli
adc
incl
pop
jbe
lea
lea
or
add
mov
pushf
repz
adc
paddusb
mov
popl
pop
sbb
imulb
add
mov
inc
inc
xor
pusha
inc
rcrl
and
daa
adc
pop
out
sub
jmp
inc
mov
adc
aam
ror
sbb
sub
jo
or
popw
std
and
xor
pusha
call
pop
roll
pop
roll
cmp
xor
out
lods
mov
jle
push
pop
sbb
cmp
mov
and
mov
nop
sbb
or
add
out
pushf
pushf
mov
or
adc
mov
sbb
jb
jb
sub
xor
jo
jb
cmp
jbe
cmpsb
addl
loopne
in
dec
push
push
pop
cmp
cmp
push
insb
jo
js
add
jl
sbb
and
mov
test
xor
xor
pushf
mov
hlt
imulb
jmp
mov
mov
and
outsl
mov
in
imul
jle
or
call
adc
in
adc
dec
dec
xor
sbb
sbb
int
adc
clc
and
daa
and
xor
sbb
sti
enter
pop
xor
repnz
jne
jo
gs
nop
mov
leave
ret
cmp
rcrb
ret
enter
jne
out
xchg
mov
lret
sbb
inc
or
or
add
add
orb
popa
push
ficoml
xor
jne
push
cmp
push
push
mov
test
sbb
mov
adc
cmp
sub
pop
gs
pop
dec
or
mov
mov
and
jne
in
inc
pop
dec
or
and
push
mov
jmp
sarb
out
inc
xor
add
pop
cmp
mov
das
je
sub
push
push
je
orl
loopne
sahf
ret
aad
leave
aad
repnz
mov
push
add
fmuls
push
sarl
gs
popf
mov
push
orb
int
sbb
jp
ficoms
lcall
sbb
cmp
je
push
push
dec
or
imul
inc
push
dec
and
xlat
test
addl
cmp
dec
xor
sbb
addr16
adc
stos
adc
repz
jmp
jb
dec
add
int3
and
cmp
inc
repz
xor
outsl
adc
push
pop
in
cmp
repnz
fimull
push
or
push
xchg
bound
pop
pop
mov
ret
jl,pt
pop
and
mov
pusha
loopne
dec
mov
fiadds
dec
pop
push
adc
push
inc
ror
and
or
mov
mov
rolb
and
addb
std
call
cmp
mov
loop
mov
sbb
add
add
and
bound
jl
cmp
jb
push
mov
push
sub
rolb
jmp
enter
push
lods
lea
xor
push
add
jle
dec
xor
lods
ljmp
xchg
pop
push
xor
into
mov
xchg
or
adcl
fistpl
fwait
mov
mov
gs
out
lods
inc
pop
mov
fbstp
outsb
inc
or
in
pop
hlt
or
xor
xchg
fbld
cmp
data16
sar
inc
into
daa
jecxz
jl
dec
inc
in
push
push
push
mov
push
flds
sbb
cmp
clc
std
mov
mov
add
sar
mov
or
ret
cmp
or
test
andl
iret
xor
ret
mov
and
ficoml
imul
jns
popf
add
mov
inc
sbb
mov
pop
pop
xor
ljmp
pushl
cmp
pop
mov
jns
mov
test
dec
sub
xor
inc
xor
push
cmp
and
nop
repnz
mov
cmpb
addr16
mov
jmp
cmp
in
lods
mov
test
or
push
xor
push
hlt
mov
sbbb
pushf
sbb
xor
or
xor
cmp
add
cmp
xor
mov
fsubs
push
xchg
cmpsl
cmpsb
ds
js
clc
gs
lcall
rolb
jmp
push
dec
inc
or
dec
pushf
lea
push
push
mov
lea
movb
cmp
pop
pusha
fcoms
push
inc
mov
js
pop
dec
adc
jns
cmp
add
cmp
jle
push
jo
cmpl
mov
int
push
test
jnp
or
push
add
jne
inc
mov
mov
add
lret
add
xor
ret
sub
cmp
shll
add
inc
cmp
push
jmp
inc
xchg
lds
pusha
inc
das
clc
pop
push
je
push
add
sub
or
inc
jmp
jb
dec
loope
les
repnz
dec
add
xchg
sbbb
xor
and
lret
jnp
mov
push
xchg
pop
pop
mov
movsl
aad
sub
xlat
mov
cmp
mov
pop
mov
cmp
cmpsb
aas
movb
inc
mov
mov
adc
shl
lods
sbb
sub
mov
sbb
jmp
cmp
add
or
daa
jmp
sbb
loopne
and
in
and
add
adc
or
cmp
out
inc
inc
lods
push
orl
pop
cmpsb
insl
dec
sti
mov
inc
inc
sbb
or
cmp
mov
in
pushf
bound
pop
add
orb
inc
andl
xchg
dec
dec
stc
pop
xchg
sbb
dec
cmp
add
nop
cmp
rorl
add
sub
and
sbb
addb
test
mov
je
push
xchg
jmp
rcll
data16
mov
std
jno
add
and
fnstsw
inc
in
out
lea
add
push
jo
lret
jmp
or
xchg
js
pop
sti
mov
rorb
jecxz
lea
mov
inc
push
xorb
mov
jns
cltd
sub
mov
fdivrs
jne
ljmp
fidivrl
inc
jne
lods
mov
or
xor
jnp
pusha
das
cmp
mov
inc
add
inc
cmpb
xchg
jecxz
leave
lods
and
sbb
loop
adc
orb
xor
ret
and
add
sub
sbb
and
and
inc
pop
push
and
mov
scas
or
cmc
and
add
sub
and
or
bound
jl
add
sub
or
mov
mov
jmp
xor
mov
xor
pop
adc
test
or
popa
add
xor
and
andl
adc
push
mov
pusha
adc
sub
and
jg
sbb
push
pop
xchg
jmp
ficoml
jno
jge
mov
mov
add
in
push
sbb
fsubr
dec
push
and
mov
dec
and
mov
adc
sub
and
add
mov
pop
inc
inc
in
iret
xor
ret
andb
xchg
cli
sbb
push
mov
or
sbb
jmp
into
in
les
rcrb
aam
addl
inc
aaa
xor
xor
shrl
jne
and
divb
mov
sub
pminsw
dec
or
dec
adc
dec
or
mov
jge
mov
js
int3
pop
mov
lret
ds
out
push
gs
mov
cmp
in
pop
cmp
out
insl
loopne
lods
jg
rclb
add
hlt
adc
fadd
imulb
pop
leave
sub
or
adc
adc
add
rcll
jne
pop
sbb
jbe
sub
pop
adcb
shrd
cld
pop
pop
or
imul
mov
and
cmp
or
pop
mov
add
mov
pop
mov
hlt
dec
lods
add
mov
lcall
push
push
xchg
lock
pop
js
cwtl
clc
outsb
mov
mov
inc
mov
jmp
push
and
fnsave
cmp
shlb
das
pop
adc
js
pop
sbb
adc
add
or
je
inc
jecxz
and
aad
enter
mov
ds
cmp
test
mov
cmp
and
sub
insb
or
test
stos
sarl
dec
loop
dec
sbb
repz
jmp
icebp
iret
les
xor
jecxz
push
mov
loop
jle
mov
push
hlt
movsb
adc
enter
push
add
dec
xor
pop
push
sub
xlat
movsl
cmp
and
pop
add
sbbb
or
cmp
push
sbb
movsb
data16
push
jnp
inc
andl
xor
dec
sub
rclb
inc
push
fistpl
cmp
mov
sub
mov
and
jo
leave
xchg
lods
cmp
subb
or
dec
dec
filds
sub
mov
data16
xor
subb
lea
sub
cltd
nop
dec
push
dec
pop
mov
jno
out
cmp
das
push
loopne
inc
lret
and
out
dec
cmp
jno
mov
dec
test
pop
arpl
stos
sub
add
addl
lret
xchg
sbb
loop
adc
adcl
jmp
push
shll
fwait
scas
xor
dec
clc
int3
cld
dec
mov
divl
xchg
in
repnz
hlt
jo
das
adc
inc
das
ja
xchg
rorl
jl
adc
or
push
or
cs
mov
sub
or
sbb
or
imul
inc
pop
mov
gs
add
dec
cmp
jae
jne
or
inc
adc
data16
inc
cli
or
loope
inc
sub
jno
inc
mov
fsts
or
jp
loope
in
add
add
inc
pop
arpl
adc
test
xchg
mov
dec
or
ror
sub
dec
movsb
or
adc
lea
and
orb
ret
xor
sbb
cwtl
mov
shrb
rolb
jg
jg
xor
push
popf
pushf
pop
sub
je
adc
ds
cmp
stos
iret
adc
ljmp
jle
clc
pop
imull
je
inc
mov
mov
cmp
and
add
mov
lret
inc
call
or
mov
nop
push
clc
cltd
xchg
push
or
decb
push
and
into
pushf
push
mov
dec
add
and
test
and
jb
xchg
and
mov
or
nop
pushf
divb
loope
not
xor
loope
xor
and
pushf
sbb
or
jmp
xchg
fucomi
add
and
arpl
test
outsb
cmp
test
adc
test
mov
roll
xlat
sub
xor
je
loopne
pop
add
je
or
or
pusha
shrb
sub
xchg
fiadds
jbe
sti
ss
adc
lock
and
mov
and
add
aaa
jecxz
imul
jmp
xchg
jmp
movsb
mov
xchg
push
aas
cmp
and
sub
jecxz
jge
add
sbb
loope
out
mov
and
add
fstps
aas
pusha
mov
pusha
lods
mov
pop
sub
dec
and
cmpsb
adc
jecxz
pop
fstp
cmpsb
cmp
ds
pusha
js
cmpsl
push
insl
sti
sbb
mov
cmp
adc
adc
sti
out
lret
add
add
test
or
add
js
testb
mov
dec
je
add
dec
jne
orl
scas
jmp
push
mov
pop
xchg
in
add
pop
testl
out
and
or
jbe
dec
fildl
sbb
jmp
push
and
inc
leave
int
add
adc
or
outsl
inc
flds
fldenv
push
jecxz
push
and
or
sbb
push
std
out
sbb
mov
cmp
mulb
xchg
pop
xor
shrb
fimuls
push
adcb
es
push
jo
jo
ret
xor
lret
dec
out
stc
cmp
inc
or
jo
jmp
push
es
iret
enter
fsubr
cmpsb
test
fcompl
ljmp
fsubrs
les
sub
sub
jmp
pop
jb
pusha
sub
push
or
psubusw
xor
test
int3
adc
div
add
popa
addr16
add
mov
adc
sbb
push
mov
in
adc
lock
into
jbe
or
xadd
fmull
adc
lods
mov
inc
stc
add
js
repnz
push
push
ret
xchg
repnz
hlt
insl
bound
test
lahf
sbb
into
ss
insl
in
sbb
inc
sbb
push
jp
dec
in
jo
lock
loopne
push
loopne
mov
push
or
pop
lds
sahf
jmp
pop
movsb
aam
xchg
push
inc
add
repnz
and
mov
decb
push
and
jbe
lods
add
pop
sub
movl
push
push
add
mov
jg
mov
sbb
pop
test
stos
dec
jmp
or
push
xchg
repz
pop
loopw
rolb
mov
and
mov
add
popa
adc
jg
or
stos
icebp
mov
je
loopne
loop
aam
jl
mov
sbb
mov
sbb
sbb
add
sub
hlt
adc
or
cmp
sub
sub
add
pop
push
inc
or
fldl
xor
jae
push
or
sti
fsubrp
fwait
jno
mov
scas
inc
and
jo
popf
in
pop
add
or
pop
xchg
mov
or
dec
or
sbb
pop
imulb
mov
mov
fsubrl
in
add
pusha
mov
sti
pop
in
les
inc
sbb
mov
in
or
sar
mov
adc
les
xor
int3
add
mov
lcall
js
inc
jnp
adc
adc
add
sbb
data16
cmp
ret
jo
ret
mov
add
sub
pop
test
push
inc
cld
adc
mov
cs
pop
into
mov
shrl
push
rolb
xchg
icebp
lock
or
in
gs
xchg
mov
call
add
ljmp
addl
pop
adc
cmp
add
into
cmp
fsubrs
mov
cmp
or
or
xchg
mov
ret
imul
push
cmp
mov
stos
adc
gs
or
xor
cmp
lock
imul
push
mov
jg
and
pop
call
add
or
push
add
testb
sbb
sub
shr
jp
sbb
loop
pop
sub
dec
add
mov
fstl
push
inc
adc
mov
dec
sbb
fnclex
and
inc
pop
mov
outsl
or
fldcw
push
sbbb
push
mov
fldt
jo
fcmovne
fwait
sahf
adc
enter
sbb
les
xorb
bound
jle
call
jb
jo
mov
or
dec
mov
insb
jg
inc
xor
inc
je
sbb
and
add
ldmxcsr
ffreep
pop
push
xchg
and
jbe
mov
or
cmpsb
adc
mov
mov
out
add
push
mov
push
pop
inc
sbbb
jbe
aaa
or
dec
jmp
mov
xor
jle
sbb
mov
addr16
shlb
adc
pop
in
fwait
pusha
popf
xor
insl
cltd
stos
adc
nop
test
jns
sbbl
das
ja
mov
jnp
enter
add
and
loope
sub
nop
pop
subb
call
imul
adc
and
or
aam
jmp
pop
shrb
aaa
xor
mov
sti
jbe
lret
nop
mov
push
fists
pop
pop
adc
enter
insb
inc
adc
loope
or
enter
in
adc
xchg
test
aad
pop
push
sbb
inc
subl
data16
mov
xor
bound
mov
dec
dec
push
lock
sub
scas
cwtl
dec
shlb
insl
and
dec
push
or
pop
mov
and
dec
add
adc
sub
add
push
daa
cs
mov
pop
test
jne
or
jl
ss
push
and
stos
stos
xchg
xor
or
xlat
and
push
and
push
ret
fdivl
in
lods
mov
and
add
mov
pop
adc
dec
jns
dec
xchg
shl
adc
popa
daa
icebp
lds
lret
loopne
test
std
add
sub
inc
aam
loop
rolb
mov
push
sub
repz
jle
mov
pop
and
mov
out
mov
dec
or
inc
insb
sub
test
jo
xor
xor
repnz
inc
out
nop
or
jb
cmp
xor
insb
sub
mov
adc
pop
adc
repnz
mov
push
decl
push
mov
sarb
push
inc
dec
movsb
pop
fisubs
add
and
or
xchg
cmpsb
les
aaa
xor
inc
mov
fsubl
sti
cmp
dec
dec
stos
inc
adc
rol
dec
add
lar
sahf
xor
dec
xor
cmp
rorl
call
lahf
subl
out
and
push
jge
inc
jmp
not
les
xor
cmp
pop
ds
push
or
jne
shl
test
inc
cmp
mov
jl
add
out
sbb
test
mov
jl
ss
fs
aam
adc
mov
test
popa
pop
pushw
lds
dec
mov
lds
adc
or
leave
adc
or
cmp
mov
sub
sub
cmp
comiss
push
fs
push
pop
xchg
ret
xor
pop
add
and
iret
dec
jns
inc
lock
add
dec
mov
test
xor
push
adc
jae
cmp
out
pop
cmp
imul
mov
shll
jo
jo
jl
pop
andl
add
movsb
dec
xor
lea
and
mov
or
add
sub
add
xor
dec
aas
sbb
sub
shl
add
xchg
adc
test
cmpsl
loopne
add
stc
inc
push
in
adc
fimull
fwait
jp
and
inc
sbb
xchg
add
sbb
gs
dec
pop
add
cld
sub
sbb
in
xchg
cmp
and
fs
add
cmp
push
cs
or
sub
pusha
add
add
cmpb
or
imul
jl
imul
add
mov
add
push
in
xor
push
adc
cmpsb
imul
test
mov
pushf
jmp
fimull
pop
mov
push
enter
mov
push
push
ja
lods
mov
js
or
add
or
jmp
xor
or
xchg
add
je
pop
clc
fildll
cmp
ja
push
dec
jmp
fs
push
mov
cmp
iret
fisubs
enter
inc
loopne
je
bound
mov
scas
pusha
and
mov
fnstcw
sbb
mov
jmp
cmpsl
mov
mov
mov
inc
xchg
pusha
sub
and
call
cmp
jle
std
cmp
jle
cmp
push
xor
xchg
or
jmp
dec
push
mov
gs
sub
xchg
jno
xchg
xor
sub
sarl
fs
xor
jmp
jno
add
sbb
xchg
outsb
cmpsb
or
insb
ss
mov
pop
jge
mov
cmp
test
les
add
stos
dec
sbbb
je
jmp
mov
or
jge
jmp
and
dec
mov
call
lock
and
out
push
sub
mov
or
pop
mull
orl
pop
das
push
lock
or
sub
cmp
sbb
jo
test
mov
je,pn
scas
call
fmuls
jge
mov
mov
fldenv
div
incl
cmpb
jl
incb
dec
mov
cmp
rcr
hlt
pop
push
adc
addb
mov
testb
and
sub
mov
push
adc
or
jecxz
inc
test
out
add
pushf
jmp
push
cwtl
pop
mov
xor
xchg
dec
hlt
pushf
pop
jnp
mov
mov
aaa
ds
arpl
cmp
jge
neg
add
inc
int
adc
sub
ds
xlat
test
cmp
ljmp
sbb
cs
lods
cmp
mov
jge
jle
outsb
ja
mov
xor
jne
or
dec
lahf
adc
inc
loop
rcl
dec
test
pop
adc
dec
pop
push
inc
mov
movsb
add
cli
das
in
test
add
mov
orb
test
mov
pop
popa
add
push
dec
or
sbb
fs
mov
into
mov
mov
ret
and
push
in
and
rorb
out
add
adc
sbb
std
mov
or
or
inc
enter
cld
pop
es
xor
mov
inc
testl
fisttpl
or
jne
test
mov
jne
inc
or
cmp
in
aad
cmp
jne
hlt
int3
add
jne
or
pop
mov
test
pop
inc
rcrl
pop
sub
and
fimull
les
lea
lcall
xchg
or
scas
sbb
cld
pop
dec
out
shl
dec
lock
test
test
data16
imul
insl
mov
pushf
sub
lcall
add
stos
xchg
lods
aaa
lock
dec
test
js
mov
aam
gs
fbld
aam
add
or
shr
rcrl
loop
rcll
das
jmp
pop
mov
jg
or
adc
mov
mov
les
ret
adc
mov
std
jg
inc
jb
shrl
shl
shr
or
or
shl
call
xchg
dec
push
ret
jne
insb
mov
mov
push
push
ja
pop
add
and
and
sub
dec
jge
cmp
mov
pop
add
ficompl
xorb
mov
loopne
in
fiadds
push
call
imulb
fidivl
shlb
pushf
insb
inc
adc
fadd
test
mov
or
ja
orb
dec
insl
add
cmp
sub
add
lret
into
jmp
ret
or
jnp
movsb
dec
and
les
sbb
movsb
int3
and
call
xorb
add
jp
lret
das
sub
add
out
sarl
negb
sub
repnz
movups
fidivs
ret
or
call
cmp
add
mov
mov
lcall
lcall
cs
xchg
cmp
jns
outsb
push
sbb
lods
mov
jl
push
repz
gs
inc
add
or
push
jle
mov
push
pop
jne
cmp
add
mov
inc
mov
mov
mov
or
rorl
sahf
pop
cmp
aad
mov
in
mov
xchg
sub
or
pop
sti
scas
push
xchg
xchg
adc
inc
cs
or
push
adc
ss
gs
or
pushl
rorb
cmp
je
mov
lock
pop
jne
dec
mov
inc
inc
mov
out
cmp
fldz
call
add
dec
or
test
jae
sbb
movsb
push
sub
clc
cmp
rorb
orb
adc
or
xor
cmc
push
dec
mov
mov
mov
xchg
divl
outsl
xchg
popa
adc
and
jmp
and
and
mov
testb
sub
shrb
jge
dec
std
cmp
fdivs
or
cmpb
addl
push
pop
adc
mov
je
test
push
cmpl
out
clc
add
lock
mov
and
or
push
ljmp
movb
js
xchg
hlt
add
js
add
push
ficoml
mov
add
add
popa
jnp
add
add
lcall
and
lret
jmp
sub
add
add
imul
push
rorl
or
mov
mov
pop
inc
out
cs
dec
jns
mov
es
xor
pop
idiv
xor
jne
dec
in
or
add
testb
into
add
mov
popa
mov
push
addr16
push
or
inc
or
sub
inc
or
xor
adcl
jl
aam
jg
sub
insb
push
cwtl
inc
adc
or
ja
add
ret
jbe
lock
dec
adc
jge
ja
sub
sub
adc
lahf
adc
xor
cmp
xor
adc
out
cmp
sbb
je
adc
es
and
and
inc
cwtl
das
cmp
and
jno
and
jle
ljmp
sbb
push
icebp
fs
jge
pop
mov
imul
arpl
iret
in
jmp
or
jo
lcall
push
or
push
push
inc
sub
pop
adc
cmp
addb
mov
lret
lret
test
cmp
add
stc
outsb
adc
mov
lock
pop
push
out
iret
add
dec
cmp
add
enter
pop
sbb
push
lds
sbb
sub
inc
add
ret
mov
push
mov
sbb
add
mov
push
add
inc
cltd
dec
inc
xor
leave
and
add
cmpsb
jle
popf
popa
movb
adc
sbb
test
popf
dec
mov
orl
neg
sbb
sti
pop
cld
shl
mov
jg
ret
daa
xor
or
jne
pop
mov
sahf
ret
jmp
out
jo
fwait
mov
test
movb
inc
sub
xchg
mov
or
xor
sub
mov
mov
gs
adc
sbb
dec
push
movswl
sbb
mov
arpl
dec
or
inc
bound
pop
lock
add
mov
add
dec
movzwl
and
jle
mov
ss
jl
jmp
clc
mov
or
pushl
xchg
stc
inc
add
dec
jmp
addr16
xchg
clc
sub
adc
xchg
xchg
inc
inc
or
rol
call
push
addb
and
cmp
xor
ret
sub
jo
sbb
out
and
call
pop
sbb
js
jg
loop
adc
in
push
sub
or
inc
adc
neg
cmp
mov
lock
xchg
or
lods
filds
jb
xor
jle
nop
cmp
add
jbe
and
mov
lret
cli
mov
add
mov
add
inc
dec
pop
adcb
or
mov
mov
add
adc
mov
adc
jae
stc
mov
dec
push
es
mov
or
xchg
sbb
sbb
inc
push
push
jne
loop
call
jb
pop
rorb
and
sub
xchg
cwtl
inc
sub
dec
push
call
add
lock
inc
sub
mov
call
es
jne
adc
data16
adc
mov
scas
enter
or
cltd
rclb
into
mov
cwtl
sbb
out
addb
and
xor
pop
push
rcrb
jb
inc
repz
cmp
inc
push
push
sub
daa
aam
add
ficoms
dec
xchg
rorb
rorb
and
pop
add
xor
push
push
insl
push
jmp
mov
je
cmp
cld
jl
fisubrs
aas
or
mov
inc
mov
pop
mov
aam
inc
shr
loop
inc
fsubs
sbb
nop
call
jge,pt
fldt
jle
gs
or
pop
data16
lret
ds
out
sub
mov
popa
je
inc
je
dec
lods
in
in
jmp
xor
mov
pop
pop
add
sub
daa
dec
xchg
rolb
mov
loopne
dec
imul
adc
repz
mov
add
das
int
push
adc
call
jne
fmull
shr
add
push
pop
clc
fstps
or
fldenv
inc
push
leave
and
sub
inc
pop
js
pusha
dec
rol
ret
and
nop
xor
xor
mov
fmull
icebp
mov
cmp
dec
loope
fildll
inc
rcrb
call
cmp
and
push
add
dec
popa
rcrb
je
sbb
cmp
lds
sub
aaa
push
push
dec
push
iret
ss
shll
sub
add
hlt
sbb
rorb
cmp
xchg
cmp
les
add
adc
pop
xor
movsl
pop
sbb
push
mov
and
push
push
inc
cmpsl
fs
popf
add
push
lods
pop
mov
aaa
pop
cli
mov
mov
aaa
sub
push
fcmovnu
add
push
cmp
adc
dec
sub
addr16
cs
xchg
xor
fsubr
sub
mov
fisttps
mov
cmpl
xchg
lret
or
push
cmp
or
dec
push
mov
mov
push
aam
scas
sub
pop
pop
call
xchg
shrb
popa
inc
mov
cmp
lret
das
jmp
xor
mov
je
mov
jge
mov
add
pusha
mov
sbb
jl
dec
push
insl
push
inc
cmp
sbb
or
je
lahf
int
lock
shrb
out
pop
cmp
jo
jecxz
inc
mov
mov
es
nop
add
adc
and
lock
rorb
push
push
jmp
or
popf
cmpsb
out
jmp
testb
add
andl
insl
or
or
sbb
and
jne
sub
test
adc
pusha
mov
lock
popf
mov
lahf
xchg
lock
popa
loop
pop
push
sbb
loope
adc
inc
js
or
mov
push
jp
cmpsl
mov
or
or
push
adc
aad
jno
sub
js
sbb
and
inc
cmpl
frstor
add
jecxz
push
sarb
cmpb
push
scas
xor
push
push
mov
cwtl
push
xor
ficomps
cmp
or
add
push
pop
adc
add
lea
jae
dec
jp
out
inc
xrelease
mov
xor
jae
ret
insl
xchg
or
enter
test
cmc
jge
notl
xor
sbb
sbb
sbb
icebp
add
orps
jle
mov
call
sub
mov
lock
fiadds
arpl
add
xor
cmp
xchg
mov
sbb
inc
jmp
popl
leave
and
mov
push
and
cmp
mov
test
lahf
and
je
sub
lea
push
iret
mov
movd
pop
xchg
mov
in
sbb
push
lret
cld
jo
mov
push
lret
leave
xchg
or
xor
pop
jmp
adc
stc
mov
mov
testl
shl
inc
sbb
xorl
mov
push
pop
and
mov
cmp
mov
adc
xor
push
call
sbb
cmc
lods
cld
xor
mov
dec
sbb
cmp
sub
jmp
xchg
popa
push
repnz
xchg
outsb
adc
sysexit
xor
ljmp
inc
jmp
cwtl
loopne
das
lods
sub
mov
jmp
mov
add
or
adc
add
or
sbb
std
data16
xchg
or
push
leave
xchg
or
pop
incl
xor
scas
xchg
sbb
ret
xchg
inc
push
stos
jae
les
lret
mov
push
sub
xchg
adc
xor
xor
adc
pop
lock
push
pop
xor
jmp
pushf
or
cmp
les
adc
mov
xchg
push
cs
and
loop
sbb
adc
nop
cmp
imul
loope
loop
imulb
pop
sub
xchg
sub
mov
adc
add
adc
xor
push
shr
add
or
push
sub
fisttpll
in
shr
shr
or
pop
sti
or
rorb
xlat
bound
scas
push
bound
js
or
sti
in
stos
test
or
mov
cmp
inc
sub
es
int3
cld
push
jne
add
js
inc
xchg
dec
and
xor
ds
pop
les
add
lea
mov
shr
xchg
or
inc
cmp
mov
adc
subb
push
pop
mov
adc
repnz
orb
movsb
sbb
xor
jo
add
out
inc
jbe
mov
mov
and
ss
fucomp
sbbb
imul
push
cli
push
notb
or
shl
andl
adc
aad
fs
push
add
sbb
decl
pop
fsubs
stos
imulb
or
test
sub
push
xchg
lret
je
test
add
push
or
rorl
sub
addl
fdivl
ret
inc
call
sbb
mov
test
adc
cmp
into
sub
mov
push
add
lahf
cmp
add
cmpsl
push
cld
outsb
push
aaa
sub
jne
lods
or
jbe
push
ljmp
and
dec
push
fs
mov
jne
ljmp
shrb
cmp
out
add
mov
add
inc
inc
add
push
add
fld
or
cmp
lret
mov
addb
mov
mov
jg
lock
jl
cmpb
jl
xor
rorb
cmpb
idiv
test
inc
stos
dec
xor
inc
xchg
les
push
mov
stos
push
push
jg
and
dec
inc
push
push
mov
push
push
jo
imul
rorl
cs
inc
adc
fldl2e
imul
cld
aam
mov
or
sub
mov
and
cmp
mov
adc
mov
call
out
aad
cmp
and
adc
or
test
mov
pop
out
add
mov
or
mov
and
fldl
je
mov
pop
jp
or
pop
ljmpw
or
fwait
ret
hlt
pop
push
adc
movsb
test
les
movsw
stos
sub
mov
test
inc
adc
add
pop
jmp
xchg
or
xchg
xchg
sbb
and
loopne
in
push
xor
mov
and
dec
or
cld
pop
std
jge
inc
inc
div
fdiv
fiaddl
fsubp
fisttpll
inc
ss
int3
adc
orl
sbb
stos
mov
fcoms
inc
and
fnstenv
icebp
gs
dec
sbb
adc
adc
in
sbb
and
push
dec
jns
jnp
sbbb
dec
jne
pop
pop
pop
adc
cmp
jae
or
jae
lods
rcl
ljmp
dec
and
shr
test
jg
dec
sub
jmp
adc
not
cld
lock
je
negb
and
ljmp
add
dec
ljmp
and
sahf
pop
sbb
push
inc
pop
add
or
adc
inc
pop
movsb
jle
jne
xchg
ds
out
mov
int
or
into
jbe
jns
xor
adc
inc
cmp
pop
push
jg,pn
lods
dec
mov
add
push
or
adc
push
dec
dec
icebp
das
push
in
les
adc
setle
adc
or
and
xchg
dec
gs
mov
ljmp
cs
testl
inc
outsb
xor
dec
pushl
dec
fidivs
xorl
jg
aam
or
push
mov
adc
jbe
inc
fcmove
jne
sub
testb
and
incl
sub
je
dec
mov
mov
mov
adc
wbinvd
into
es
mov
je
std
jg
sbb
cmp
jb
cmp
ja
add
cmp
pop
dec
cli
out
ret
cmp
jne
push
shll
leave
hlt
mov
mov
nop
sbb
pop
cmp
pop
xchg
insl
and
xlat
dec
add
push
dec
or
push
cmp
xchg
mov
cmp
daa
jmp
push
mov
mov
sbb
xor
ret
jmp
neg
je
iret
js
clc
fisubrl
push
pop
mov
jl
scas
mov
inc
gs
cmp
pop
mull
mov
lods
cmp
jne
adc
push
sub
xor
sbb
in
std
add
xor
ffreep
adc
aad
dec
dec
enter
pop
mov
adc
mov
inc
jg
in
scas
mov
xlat
mov
jno
test
femms
in
xor
dec
pop
mov
sub
xchg
cmp
cmpb
movsl
xchg
xor
andl
adc
add
mov
sti
cltd
es
enter
repz
inc
sbb
or
mov
mov
inc
inc
add
pop
jle
imul
inc
ror
push
rcl
sahf
out
sahf
rcl
aad
xlat
fmuls
jns
fstpt
mov
xchg
nop
data16
negl
sub
adc
data16
mov
sarl
sub
push
enter
or
data16
test
mov
mov
add
push
push
clc
mov
push
add
movl
push
sub
je
test
pop
jp
call
cmp
sbb
push
sbb
push
jnp
push
jns
push
add
popa
add
add
push
lcall
mov
imul
pop
pusha
scas
jmp
ds
mov
lcall
lea
imul
lea
sar
inc
adc
mov
jbe
sbb
sbb
neg
lfs
mov
pusha
loop
inc
xorl
pushf
sub
lock
out
mov
sub
or
lock
xor
or
bound
jp
mov
fildl
pop
or
dec
ret
add
or
lock
sub
ljmp
testl
into
and
lea
pop
adc
les
sbb
jae
xchg
ja
add
sbbb
add
inc
dec
and
pop
mov
aaa
repnz
in
ljmp
loopne
inc
or
fimuls
loope
mov
mov
jne
mov
or
repz
test
rolb
push
mov
stos
popa
enter
loopne
mov
ds
dec
xchg
mov
int
or
cwtl
dec
push
dec
push
mov
movsb
sub
cmp
pop
shr
insb
lret
movsb
sub
inc
xchg
mov
xor
mov
jge
jl
fdivl
and
rorb
sub
jle
inc
test
enter
adc
rolb
sar
loop
fcomps
loopne
cmp
rorb
cmpb
jg
or
cmp
movsl
add
inc
xchg
mov
dec
mov
inc
daa
ss
shrl
jecxz
adc
in
out
xchg
mov
or
dec
sub
push
inc
inc
dec
add
or
test
test
div
cli
enter
cli
inc
cli
div
xchg
add
mov
or
popa
inc
sbb
loopne
mov
push
jnp
sbb
ret
fcoml
adc
push
inc
ret
mov
push
push
clc
jmp
sub
xor
mov
jecxz
clc
mov
push
dec
shl
lcall
sbb
sbb
enter
cmpsl
add
pop
lods
cmp
repnz
pushw
rcl
xor
sub
loop
out
jge
inc
out
inc
xchg
mulb
jb
adc
outsl
sbb
mov
inc
hlt
repnz
xor
in
inc
adc
shl
call
fdivrs
aam
inc
sbb
mov
test
dec
ss
dec
test
push
sub
jl
mov
add
or
call
dec
inc
mov
lea
push
fnstcw
mov
insl
xchg
mov
mov
rolb
into
repz
cltd
add
sub
aas
sbb
adc
negb
negb
and
iret
enter
lock
xchg
lret
out
or
sbb
fs
jge
inc
sbb
loop
lock
jmp
add
movsb
repnz
jne
sbb
in
xchg
fimuls
push
and
mov
adc
push
push
mov
sub
sbb
add
mov
or
inc
add
add
push
nop
fimull
aas
cmp
cmp
push
adc
movsb
jle
out
adc
sbb
mov
sub
sbbb
cmp
mov
sub
or
pop
sub
shll
add
mov
sbb
neg
sbbb
sub
call
and
imul
loopnew
xchg
cmp
pop
add
and
cmp
mov
push
jo
mov
adc
sub
out
lds
xor
and
xchg
mov
repnz
mov
add
sub
into
out
lret
and
into
or
pop
cmp
push
nop
sbb
xchg
movsb
xabort
test
dec
enter
negb
mov
jae
add
test
sahf
jne
aas
add
cmp
shll
into
or
mov
mov
ljmp
jmp
dec
nop
add
decl
add
xor
sbbb
cmp
movb
dec
cmp
in
pushf
mov
add
add
fadds
dec
mov
adc
inc
repnz
inc
lock
jmp
divb
int
decl
mov
adc
lret
or
xor
mov
mov
nop
movsb
jbe
add
xor
negb
enter
or
rcll
test
jp
cmp
adc
or
sub
mov
adc
je
mov
adc
adc
ror
shr
add
cmpsl
outsl
nop
push
or
add
or
pop
pop
scas
add
test
mov
sub
imul
mov
test
xchg
adc
or
enter
jae
test
inc
pop
mov
mov
iret
xor
push
xor
into
pusha
inc
jecxz
push
sub
rcrl
pusha
iret
in
inc
push
mov
ret
ret
or
prefetchw
inc
inc
pop
and
ret
addl
ror
lock
pop
jae
or
or
test
xchg
adc
and
mov
test
push
inc
add
jl
inc
or
mov
leave
pop
pop
dec
pop
add
popf
jmp
or
dec
pop
lahf
push
out
dec
pusha
test
ret
loope
mov
and
mov
inc
jge
cmp
mov
or
sub
popa
pop
lea
dec
and
push
movsb
dec
lcall
sahf
xchg
or
or
inc
sarl
sub
into
xchg
adc
dec
aam
add
mov
add
bound
imul
ss
or
add
cltd
xchg
data16
or
adc
push
add
into
jle
loopne
out
pusha
mov
xor
inc
int3
leave
leave
repz
into
into
into
dec
movsb
jp
enter
inc
aaa
js
outsb
pop
sub
push
pop
nop
pop
xchg
xor
cwtl
pop
mov
movsb
mov
or
pop
dec
mov
pop
add
push
aas
movsb
mov
cmp
pop
lcall
add
ret
rolb
test
repnz
add
add
sub
adc
add
test
and
dec
repz
sbb
je
and
jb
pop
sub
mov
jmp
jmp
lret
ret
xor
testb
push
scas
sbb
aam
add
mov
or
add
mov
fcomps
and
cmp
stos
imul
or
push
cmp
sub
cmp
add
sub
and
jle
xlat
clc
int
xchg
fimuls
adc
sbb
xlat
jle
pusha
cmpsb
js
and
daa
or
and
call
jge
addr16
fidivrl
jl
or
dec
xor
add
adc
push
mov
and
pushf
dec
sbb
inc
loope
aam
xlat
mov
adc
pop
rclb
xchg
pop
cltd
iret
xchg
cmp
sbb
jmp
adc
and
sub
add
add
out
je
cmc
inc
or
push
enter
cmp
outsl
xchg
lret
inc
inc
int3
call
jmp
pop
sbb
rolb
mov
lds
sub
cmp
xchg
jns
jmp
rcrl
icebp
jmp
fwait
push
or
sub
hlt
aam
fbld
mov
cld
adc
faddl
repz
push
rorb
mov
orb
popa
loope
shlb
pop
xchg
lods
rcll
andl
loopne
xchg
cmp
dec
dec
arpl
pop
xor
ss
scas
adc
test
je
mov
dec
push
test
push
xor
mov
out
je
and
xchg
mov
push
push
mov
pop
mov
call
xchg
scas
jge
sbb
or
push
pusha
sbb
shlb
fsubl
fcoml
mov
dec
mov
dec
xchg
lret
in
inc
sbb
clc
dec
dec
and
push
adc
inc
nop
and
jge
lea
addr16
pusha
push
pop
push
or
enter
outsb
jne
shrl
mov
and
xchg
xor
shlb
mov
lods
push
shrl
cmp
push
and
inc
lcall
inc
add
xchg
mov
xor
add
cs
pop
xlat
add
rolb
mov
js
daa
jmp
push
push
xlat
xchg
test
or
jb
pop
test
push
push
pushf
sbb
mov
popa
sar
and
or
pop
mov
push
pop
sbb
pop
loopne
inc
ret
dec
inc
stos
shll
or
push
jne
push
inc
das
mov
movsb
push
out
cmc
outsb
xchg
dec
ror
pop
mov
sti
rorb
push
sub
adc
js
fcomp
or
test
insl
outsb
cs
paddb
mov
test
scas
sub
dec
js
xchg
rolb
lret
cmp
jle
pop
add
or
mov
idivb
dec
cmp
or
and
movsb
adc
pusha
jns
cmp
jo
dec
rcl
insb
std
push
adcl
test
sbb
mov
jg
xor
fs
push
lock
adc
cmp
insb
cld
add
mov
pop
jl
inc
dec
lea
ss
int3
cld
mov
xchg
test
js
push
jb
fisttpl
inc
dec
mov
xchg
nop
dec
jae
fsubs
cmp
jp
movsb
lahf
loopne
jmp
add
dec
js
loop
xor
fisttps
cmp
outsl
push
sub
js
add
add
mov
sbb
inc
js
loop
sbb
sbb
inc
and
cmpl
das
pusha
xor
inc
add
bound
shrb
sub
add
sbb
adc
cmc
lret
add
and
orl
scas
xor
push
and
add
subb
nopl
jb
mov
in
subl
mov
mov
xchg
pop
testb
mov
testb
inc
lock
push
mov
or
cld
sbb
xchg
ja
in
mov
push
sub
add
jecxz
jno
pusha
or
pop
xlat
data16
repnz
adc
pop
js
xorb
daa
push
pop
test
mov
jo
adc
mov
or
jg
cmp
cmc
andl
push
mov
popa
dec
loope
push
in
pop
adc
ficomps
xor
incb
push
scas
mov
scas
mov
sub
hlt
loope
and
adc
fwait
test
in
out
prefetch
ljmp
add
movsl
push
dec
inc
pop
aas
or
enter
pop
cs
mov
loope
rcr
fbstp
jnp
push
ffreep
push
xchg
std
out
and
jmp
fstps
xor
aam
pop
rorb
data16
adc
fmuls
adc
test
rcr
pop
cmpsb
pop
sbb
imul
in
pop
push
sbb
mov
add
or
adc
mov
rcrl
mov
jmp
mov
push
push
inc
xor
or
decb
in
jnp
gs
fdivl
adc
cmpb
and
sbb
mov
fildl
rcll
lds
mov
and
enter
andl
mov
fs
subb
mov
xor
jo
jp
loopne
add
lea
dec
pop
fimull
or
shlb
insl
jb
int3
sub
call
sub
orb
jnp
jo
push
dec
rcll
enter
dec
xor
jb
inc
je
int3
cltd
pop
or
orl
enter
add
or
fsubs
insb
dec
jle
xor
mov
rolb
bnd
add
insb
pop
cld
inc
bound
leave
jb
mov
inc
jle
aas
pushf
inc
xor
add
hlt
stc
xchg
and
adc
es
jne
cmp
add
jb
inc
adc
push
les
xchg
lret
orl
clc
add
shrl
mov
xor
sbb
mov
push
cmp
xchg
sub
rorb
mov
rcr
and
das
or
andl
jns
enter
or
sub
imul
and
jmp
lahf
gs
xor
mov
movsb
les
stos
movb
xchg
in
jg
lret
xchg
sbb
orb
lret
leave
insl
in
movups
fcmovnb
shll
mov
pop
fwait
nop
fwait
cwtl
xorb
add
rorb
xor
in
aad
insl
test
in
lock
in
mov
cmpl
subl
and
enter
pop
push
add
hlt
orl
jbe
dec
cmpsl
scas
sbb
popa
add
in
test
insl
push
pop
mov
jmp
dec
or
cmp
lock
loopne
call
roll
movsl
loope
mov
lods
lods
mov
mov
and
stos
fimull
les
test
sub
fwait
inc
shrb
jbe
xchg
add
and
dec
cmp
or
xchg
dec
xor
adc
and
xor
and
xor
leave
and
cmp
leave
and
dec
inc
dec
fs
xor
push
push
jge
dec
dec
fwait
sbb
add
popf
sbb
les
in
int3
rcrb
es
loopne
lret
pop
enter
hlt
push
xchg
lcall
xchg
dec
push
lock
push
mov
xchg
pop
hlt
add
xchg
pop
mov
mov
scas
add
call
add
push
icebp
push
add
es
xchg
adc
xchg
mov
out
fisubrl
xchg
inc
add
nop
arpl
in
mov
les
aaa
push
gs
mov
bound
dec
mov
mov
loopne
int3
loope
in
fdivrs
notb
mov
mov
ss
and
std
clc
jg
leave
adc
cmpsb
cwtl
sbb
orb
clc
aam
sub
orb
jg
in
jno
pusha
jno
test
je
daa
dec
cmp
rclb
mov
add
mov
test
xchg
xchg
push
lcall
movsl
in
and
adc
lods
ljmp
cmp
push
mov
in
ss
and
jl
call
dec
call
and
test
fsubs
mov
fcoml
testl
jmp
adc
adc
dec
pusha
out
lock
sub
mov
test
jg
gs
leave
enter
fsubl
inc
cld
cmp
ficoml
sbb
lock
and
mov
pop
aas
pop
fisubl
cmc
cld
int3
out
sub
movsb
cmp
add
adc
pop
jo
xchg
lods
pushf
jmp
mov
js
sub
xchg
push
xor
push
sbb
inc
loopne
dec
xor
cmp
fcom
stos
sbb
sbb
fdivrs
and
pushf
fmull
shrd
mov
pushf
pushf
enter
imul
or
and
or
push
pop
repnz
test
sbb
stc
mov
fcmovb
sbb
dec
ret
add
movb
xchg
or
cmp
orb
or
dec
xchg
add
in
out
call
mov
cmc
mov
sub
call
sub
aas
punpckhdq
push
mov
pop
enter
test
and
add
pushf
xchg
or
test
pop
in
lods
sub
ss
inc
fs
fwait
dec
insb
push
int3
xor
adc
inc
adc
lods
rolb
and
xchg
imul
loopne
fsubrl
xor
daa
call
popf
and
mov
fnclex
mov
std
fucom
push
in
or
sti
int
pop
enter
xchg
push
jmp
test
and
inc
mov
in
mov
cmpsl
inc
mov
icebp
fcmovu
icebp
dec
xchg
pop
fildll
mov
dec
jb
pop
pop
xor
adc
pusha
pop
ljmp
dec
jl
lods
rcrb
insl
movsb
in
sub
sub
xor
mov
repnz
dec
push
pop
mov
cltd
pusha
inc
add
shll
je
js
adc
nop
mov
bound
xchg
dec
cmpsb
or
inc
daa
outsl
je
inc
in
mov
and
jl
aad
lods
adc
add
test
outsl
dec
out
cmp
inc
mov
xor
push
loopne
cmp
pop
push
mov
pop
or
or
nop
pop
int3
jmp
lock
dec
cltd
adc
insb
jg
je
adcb
or
pusha
mov
cs
push
clts
lea
mov
adcb
fbstp
pop
hlt
insb
loope
ljmp
cmp
jmp
in
ret
mov
hlt
aas
add
lock
sub
loopne
inc
add
mov
std
jmp
mov
cwtl
fistpll
stos
pop
adc
les
mov
in
xchg
stc
cld
and
nop
or
insb
clc
mov
sub
insl
cmp
shlb
inc
dec
mov
mov
mov
lcall
pop
enter
cmpsl
addl
pushf
push
cmp
or
or
in
inc
or
or
nop
inc
push
or
or
test
aad
in
pusha
mov
in
sub
xorb
mov
aam
test
sub
insl
pop
push
test
mov
or
inc
adc
rcrl
cmp
shlb
sbb
lock
dec
dec
sub
jnp
pop
adc
xor
push
inc
ret
jae
xlat
imul
push
xor
jg
or
call
xchg
in
mov
sub
in
xchg
popf
fsubl
lods
jl
inc
inc
sub
add
sarb
inc
es
gs
sahf
inc
mov
inc
sbb
lcall
stos
movsb
and
xor
jbe
or
popf
cwtl
or
add
adc
push
xchg
lock
adc
and
aam
push
push
and
popa
in
mov
jbe
xor
mov
test
mov
outsl
jno
das
nop
or
fwait
in
subb
jno
inc
add
inc
and
mov
hlt
shrl
adc
test
push
jne
popf
int3
push
pusha
mov
lods
mov
int3
enter
dec
sarb
mov
cwtl
test
pushf
iret
adc
insb
mov
dec
outsl
movsb
popf
dec
add
inc
lcall
mov
leave
enter
outsb
and
mov
inc
add
in
daa
or
movsl
std
rorb
sbb
xor
mov
adc
inc
push
mov
addb
bound
push
fsubl
pop
stos
daa
pop
int3
cs
in
shlb
xchg
andb
mov
je
pop
lods
mov
jne
mov
pop
push
and
rorb
fdivrl
loope
sub
mov
pop
in
stos
sbbb
mov
jne
rcrl
shlb
test
mov
icebp
mov
idiv
and
insb
sub
and
nop
test
xchg
sub
add
test
aam
jg
je
addb
or
sub
in
mov
movsb
jnp
test
nop
in
and
fucomp
lock
cmp
insb
test
mov
push
dec
add
push
xchg
mov
lahf
rorb
aas
xlat
cli
sbb
popf
push
rcr
ret
cmovg
mov
xchg
cltd
cmpb
shrl
add
in
push
and
fdivl
mov
push
es
sbb
or
in
rcll
xor
cs
scas
loopne
pop
cmpl
dec
stos
in
cmp
adc
ret
adc
fsubs
mov
jl
add
int3
jae
nop
arpl
add
sti
movsl
or
leave
and
or
rcrb
mov
lret
arpl
rclb
inc
aam
fidivl
push
and
and
mov
je
xchg
sar
mov
aam
enter
cmp
mov
aam
and
popa
out
xor
fdivs
aas
fmuls
daa
sbb
std
loopne
mov
or
lds
pop
push
leave
xor
lock
dec
mov
mov
push
adc
movsl
or
push
scas
and
adc
pop
scas
inc
adc
pop
test
arpl
mov
popa
inc
fcomp
hlt
mov
inc
cmp
adc
and
das
mov
ror
pop
mov
adc
jns
or
adc
arpl
add
mov
xchg
sti
add
stc
pop
jmp
mov
push
add
insl
mov
das
dec
in
pop
rcrb
orl
dec
pop
stos
in
into
enter
and
and
lret
inc
jp
mov
jne
pushf
popf
cwtl
jl
add
aaa
test
fcoml
push
fcomp
jne
sub
in
int3
cmp
xchg
enter
mov
and
out
ss
inc
mov
mov
xchg
pop
push
ret
ffree
lcall
jg
roll
in
stc
mov
movsb
ss
sub
lahf
rcrb
bsf
push
add
add
in
sub
jg
inc
mov
sub
subb
test
sbb
mov
cs
and
push
roll
sbb
sbb
pop
popf
ret
cmovl
sbb
sbb
adc
bnd
pushf
std
dec
pop
ret
or
cwtl
add
push
or
inc
dec
repnz
out
test
xor
mov
add
xchg
mov
cmp
adc
push
add
jmp
in
lock
pop
mov
cltd
jo
faddl
in
adc
movsb
test
mov
cltd
dec
fdiv
popf
pop
sbb
xor
inc
pop
mov
in
sub
stos
xor
xchg
mov
int
sub
push
les
inc
xchg
adc
in
adcb
pop
pop
inc
pop
push
adc
mov
pop
push
imul
js
push
mov
inc
fisubrl
mov
sub
xchg
shr
mov
pop
mov
lds
push
je
pop
jb
lods
das
ret
les
enter
lock
test
or
and
sub
push
imul
add
add
bound
add
out
add
adc
xorl
xchg
ja
mov
adc
push
pop
push
ljmp
inc
pop
and
in
or
or
cmpl
aam
lcall
adc
cmp
decl
lahf
fs
out
jne
test
leave
cwtl
pop
mov
in
sub
shrl
lods
lods
jge
dec
rclb
jo
lea
rcrb
cmpl
out
pop
int3
cmp
aas
loopne
pop
rclb
rcrb
adc
enter
and
xchg
mov
sbbl
pop
rorb
ret
fnstsw
mov
pop
mov
in
test
mov
inc
shlb
or
sbbb
mov
test
repnz
test
xchg
push
pop
push
stos
inc
in
rclb
sub
mov
rcrl
in
push
mov
aas
pop
mov
jg
push
sub
mov
out
cvtps2pd
roll
rol
fildll
jg
pop
sbb
fmull
mov
xchg
dec
pop
int3
int3
in
adc
fadds
out
insl
adc
adc
enter
mov
ret
cmp
ss
aad
aam
pop
or
test
xchg
mov
dec
pushf
sbb
lods
in
push
and
inc
popa
popa
inc
inc
sbb
mov
setl
cmp
adc
cld
faddl
dec
pop
fst
and
dec
push
sarb
divl
lds
mov
mov
push
test
adc
push
inc
movsb
mov
inc
lods
addr16
or
or
jne
xchg
jle
mov
mov
dec
lods
mov
movsl
shrb
jnp
or
inc
fistpll
lods
lea
xlat
push
bound
pop
xchg
nop
addb
dec
cs
fsubrs
fsubrs
int3
pop
les
mov
mov
les
inc
jae
faddl
jns
enter
add
insl
xor
aaa
fs
sub
mov
sbb
xchg
fisttpl
push
mov
orb
add
mov
add
les
add
pushf
or
fs
shlb
movsb
sbb
or
ret
inc
lods
sahf
push
in
inc
mov
rorl
repnz
pop
jg
iret
inc
add
xor
xchg
adc
aam
fs
sub
std
mov
cs
insl
xchg
imul
jb
ret
fisttps
negl
adc
out
and
pop
push
fidivrs
jo
arpl
mov
adc
insl
cmp
hlt
and
mov
enter
leave
pop
adc
test
xchg
leave
aas
in
das
jmp
mov
adc
adc
fsubr
mov
out
fsubr
out
push
bound
xor
out
loop
mov
dec
xor
add
or
in
test
shll
pop
push
imul
lret
push
insl
cltd
rolb
lock
add
sub
lret
inc
outsb
inc
mov
popf
lock
dec
scas
pusha
mov
jno
fstps
push
sar
in
scas
mov
sti
mov
xor
adc
rorl
cltd
ss
push
andb
mov
xor
dec
cwtl
pusha
sub
push
dec
push
fsubrs
movsb
nop
sub
lock
fdivr
and
enter
cs
mov
fwait
loopne
nop
imul
push
loope
out
arpl
adc
cmpsl
clc
mov
add
mov
into
fsubr
cltd
and
add
popl
in
outsl
xor
std
add
cltd
nop
inc
sti
or
or
fs
adc
sub
jmp
ret
outsl
jb
mov
inc
mov
or
xor
jo
xor
jge
cltd
pop
xchg
and
pop
mov
xchg
add
ret
push
fidivl
std
push
in
push
in
add
fs
xchg
push
add
ja
sub
push
mov
call
rcll
or
out
inc
in
movsb
xor
pop
andl
jns
faddl
dec
push
in
lret
cmpb
leave
aaa
xchg
add
xchg
xlat
push
fdivrl
std
xchg
cmovnp
das
fisttpl
sti
or
xor
packsswb
dec
sbb
sbb
popf
nop
add
out
or
and
je
inc
adc
cmp
rcrb
rorl
pop
roll
aad
inc
fisttps
and
sbb
sub
inc
cld
adc
in
roll
xchg
ss
add
imul
adc
in
add
cltd
mov
inc
inc
or
pusha
test
sbb
clc
xchg
mov
sub
xchg
adc
xor
mov
add
inc
popf
rcl
mov
in
shrb
in
mov
sbb
pop
pusha
jne
and
or
cmpsb
and
or
loopne
adc
enter
stos
pop
lds
loopne
and
enter
aam
lea
icebp
das
bt
lods
aas
mov
test
icebp
pop
rorb
loope
adc
cmovg
sbb
addb
cmp
mov
cmp
ficoml
cmc
mov
test
push
dec
add
push
add
in
or
xlat
repz
xchg
jne
fdivs
or
movsl
pop
test
adc
lds
push
and
push
inc
push
push
and
and
add
inc
xor
call
ss
xchg
sti
nop
addb
sbb
add
clc
fisubrs
mov
lock
mov
loope
push
mov
fistl
decl
and
fwait
cmpb
roll
cmp
pushf
adc
jns
jl
insl
xchg
dec
xor
pop
insb
hlt
pop
dec
xor
and
js
pop
enter
inc
jo
mov
pusha
scas
mov
js
pushf
cwtl
movsb
inc
pusha
fcoms
inc
push
rolb
adc
mov
in
inc
mov
fdivrl
addb
addb
sbb
js
dec
cltd
fs
dec
je
aam
xchg
dec
es
enter
mov
add
mov
jecxz
mov
xchg
cltd
sbb
push
fdivs
xchg
jecxz
mov
adc
push
orl
add
xor
bound
hlt
loopne
lahf
test
es
mov
test
test
push
adc
mov
test
imul
inc
lock
stc
cmp
pop
mov
loopne
loop
inc
aas
aam
pop
push
or
jns
lea
sbb
shl
shrb
mov
nop
mov
mov
pop
daa
add
pop
ret
loope
mov
fcoms
sub
repnz
mov
in
or
popl
mov
loop
cmpsb
jmp
pop
enter
rolb
push
cmp
xor
add
clc
fisttpl
pusha
mov
imul
cmpsl
cltd
int3
and
lock
and
pop
or
test
and
les
push
pop
in
pop
adc
sub
movsl
stos
jecxz
xor
adc
cmp
xchg
inc
mov
or
and
adc
pop
nop
xor
adc
xchg
ret
pop
test
sbb
rolb
out
add
aad
test
jne
mov
aam
dec
nop
mov
pushf
shlb
clc
stc
lock
mov
cld
inc
pop
in
cmp
fcmovne
push
mov
add
push
lock
add
les
adc
add
jo
push
or
in
in
xchg
loop
fisttpll
out
jno
or
cwtl
adc
in
push
insl
popf
xlat
hlt
sbb
out
inc
mov
mov
mov
inc
jbe
adc
lret
jno
fistpll
or
xchg
js
push
loope
or
jl
jle
std
aam
dec
xor
test
dec
pop
sbb
arpl
stc
roll
outsb
fdivrp
mov
leave
and
adc
xchg
xchg
hlt
cli
mov
xor
mov
scas
fs
cmp
enter
dec
cmp
cmp
and
add
adc
js
in
inc
mov
dec
rorb
gs
mov
shrl
and
adc
inc
enter
and
mov
fs
inc
test
mov
sbb
sar
les
cli
adc
xchg
mov
dec
sbb
adc
pop
mov
ss
and
adc
pop
enter
inc
pop
pusha
orb
mov
mov
jo
pop
insb
test
jo
mov
or
and
dec
fs
push
pop
push
in
adcb
or
cwtl
push
and
add
addb
addl
subb
xchg
jmp
rcr
lcall
cmp
mov
mov
jns
pop
add
or
pop
dec
xor
pusha
fnstcw
ret
pushf
push
imul
mov
sub
shll
das
push
repnz
lods
sub
ret
xor
std
pop
mov
sarb
rclb
mov
push
pop
inc
in
fdivl
adc
add
aaa
mov
test
addr16
mov
sub
xchg
dec
idivl
push
inc
jmp
daa
mov
mov
mov
mov
imul
loope
imul
inc
and
push
pop
xchg
xor
push
adc
lea
sti
xor
roll
dec
xor
xor
ret
jl
sbb
aaa
es
mov
sbb
jnp
xor
stos
cmp
xor
loopne
out
adc
add
jns
xchg
sub
inc
push
push
repz
out
adc
and
jnp
ss
mov
rcl
sti
sarl
iret
out
push
fdivrs
lret
adc
add
jae
jbe
shlb
mov
or
fldl
stos
jno
push
push
cwtl
push
inc
mov
repnz
ljmp
add
fistpl
or
jnp
mov
add
flds
and
jnp
or
std
std
jmp
adc
out
leave
ljmp
cmpb
or
xchg
iret
repz
pusha
pop
inc
inc
inc
inc
inc
inc
inc
dec
dec
push
dec
dec
dec
dec
dec
push
push
push
lcall
push
pop
pop
popa
bound
gs
imul
jo
jb
lock
pushl
jne
ja
jns
xor
xor
xor
ss
cmp
sub
daa
adc
mov
sub
adc
or
outsl
cmp
adc
mov
push
faddl
stc
xor
dec
jnp
cmpsl
jge
pop
push
shlb
push
outsl
in
dec
fisttps
je
jb
outsl
arpl
fs
out
sbb
push
dec
cmpl
imul
push
outsl
es
gs
xor
cs
adc
popa
and
push
fsubrs
popa
je
outsl
outsb
push
fcoms
rcrl
xchg
sbb
aas
rdpmc
add
psadbw
jnp
add
pop
sub
mov
and
rolb
inc
outsl
jb
js
je
jb
gs
cmp
dec
lock
insl
add
arpl
outsl
add
add
add
add
push
gs
push
je
mov
jne
jb
mov
outsb
xchg
add
arpl
out
insl
insl
cmp
dec
and
jns
jno
jnp
add
das
das
adc
dec
push
cmp
orb
gs
insl
bound
daa
dec
outsl
fadds
dec
arpl
push
jo
sub
jne
jne
dec
jne
xchg
mov
jl
roll
jb
insb
dec
popa
jb
push
xorl
insb
adc
into
mov
xchg
jae
mov
addr16
push
data16
out
jne
xor
in
int
mov
daa
push
scas
clc
sbb
pushf
insl
aas
lds
and
jbe
out
pop
dec
inc
ds
popa
das
jo
mov
pop
fildll
sub
lock
and
and
enter
mov
pop
sbb
mov
rorb
pop
std
aas
lds
and
sub
sub
cs
push
push
pushl
ds
inc
das
pop
adc
orl
jnp
jge
jg
cmp
inc
test
lds
addr16
and
push
pop
or
jnp
movl
aaa
xor
jae
cs
fs
dec
xchg
jl
mov
inc
inc
mov
fwait
and
xor
insl
and
fldcw
add
jbe
dec
push
push
sbb
pop
mov
fimuls
inc
and
pop
mov
jle
push
xor
sbb
push
jo
imul
push
pop
mov
je,pn
adc
and
mov
in
je
sub
and
fs
add
imul
cs
push
insb
xorb
inc
popa
and
xor
scas
mov
sbb
xor
and
mov
push
xchg
int
aas
xor
or
scas
loopne
dec
mov
lcall
imul
dec
mov
and
or
dec
inc
jnp
imul
push
pop
cmp
xlat
loopne
fs
xchg
mov
add
and
push
add
cmpb
fisubrl
imul
jb
loopne
outsl
data16
aaa
cmpb
mov
addb
das
arpl
jo
subb
push
arpl
insb
or
outsb
mov
stos
in
cmp
inc
xchg
insb
imul
out
xor
int3
or
xor
cmp
push
lcall
mov
or
xor
mull
sarl
sbb
cmpsb
xchg
add
xor
shll
xor
xchg
cmp
pop
dec
xor
inc
add
aaa
inc
popa
push
add
ja
outsl
enter
outsl
ss
mov
jo
cli
jbe
add
test
xchg
push
mov
xor
push
gs
or
lds
xor
out
inc
jle
jb
mov
outsl
push
or
arpl
jb
pushf
ficomps
movl
push
inc
mov
fwait
or
sbbb
das
imul
pop
or
stos
jle
add
rclb
leave
call
insl
imul
cmp
adcl
in
fadd
inc
enter
push
and
push
cmp
pop
mov
sub
push
jae
xor
mov
fsubl
out
mov
test
test
jb
push
loopne
jle
sub
lret
inc
sub
pop
dec
push
jmp
jmp
jo
and
ja
mov
cmp
cwtl
ja
ds
inc
inc
cmp
inc
and
dec
cmp
pushl
lcall
loopne
imul
jg
push
rcrb
das
lret
jno
icebp
pusha
inc
mov
adc
ret
movsl
add
xorl
jae
jae
push
loop
imul
and
cmpsb
gs
popa
dec
es
cmp
enter
popa
sahf
imul
js
jae
je
pop
dec
mov
lock
add
add
xchg
xchg
jecxz
jae
imul
xchg
adc
add
add
adc
add
add
add
add
xor
loopne
scas
mov
aaa
ds
push
pop
hlt
and
mov
pusha
push
js
or
sub
in
out
int3
add
sbb
addb
jnp
test
push
xchg
test
add
mov
mov
daa
push
cmpb
push
fnstcw
mov
and
sub
jb
int3
push
lods
lods
pop
into
jo
add
mov
not
push
stos
int3
js
fbld
push
pop
dec
rorb
sbb
add
lea
xchg
dec
cmp
mov
les
outsl
shl
es
dec
sub
sub
test
dec
pop
pop
pushf
jo
or
and
or
cs
ret
pushf
pop
data16
and
out
push
sti
lock
mov
push
out
mov
jo
xlat
cmp
adc
and
sub
leave
push
leave
and
adc
xorl
orb
pop
add
xchg
sbb
jo
push
add
add
cltd
jbe
add
add
adcb
ja
lcall
pop
test
adc
aaa
mov
add
or
lcall
addl
mov
call
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
pushl
mov
mov
mov
ret
enter
int3
int
iret
rcl
call
rcl
aad
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
sub
jmp
repnz
cmc
div
clc
stc
cli
sti
cld
jb
push
test
roll
jmp
movsb
fsubs
push
xor
sbb
ror
fists
outsl
ja
add
iret
or
push
jae
jb
bound
clc
dec
inc
lea
inc
ss
popa
mov
and
mov
repnz
dec
mov
lea
dec
mov
outsl
js
push
push
inc
movsb
fisubrl
dec
and
into
sahf
insb
gs
mov
dec
mov
push
ljmp
in
dec
imul
pop
jns
inc
mov
imul
add
dec
inc
jb
jns
daa
push
mov
and
pushf
je
mov
test
frstor
addr16
sbb
cmp
outsb
pushw
mov
arpl
sbb
pop
pusha
inc
jbe
mov
push
push
lahf
inc
sbb
and
flds
stos
dec
clc
aas
xchg
es
inc
sti
cmp
push
add
push
and
pop
es
mov
dec
insl
dec
lahf
lock
mov
inc
cwtl
xchg
pop
pop
push
push
jae
cmp
adc
scas
lods
cmp
call
movsl
jae
addr16
subl
mov
sub
gs
mov
xchg
xchg
inc
push
add
push
dec
testl
dec
jnp
xchg
mov
lea
push
fildll
dec
jge
lock
jg
imul
call
bound
jg
or
ret
push
jae
inc
in
imul
and
popa
jl
mov
jg
sub
mov
addr16
jp
scas
mov
xchg
daa
jnp
pop
loope
mov
popw
pop
cmp
dec
jl
cmp
cmp
push
das
in
jmp
sub
inc
jl
push
jle
divl
add
sub
addr16
ds
popa
out
imul
jl
seta
jmp
cmp
shrl
scas
push
cmp
addr16
push
jb
cltd
push
in
das
jo
ss
data16
outsb
lret
lods
test
and
enter
es
jo
sub
push
aam
push
lahf
sub
or
out
lcall
add
loopne
jns
enter
mov
iret
rcrl
les
out
ss
push
movsb
inc
push
xchg
nop
push
mov
test
negb
push
call
ja
adc
les
shrb
iret
inc
jns
jbe
push
das
ds
cmp
sarl
add
inc
cmp
cmp
repz
sub
iret
repz
and
adc
add
repz
repz
mov
cmp
pop
cmp
clc
incb
mov
cwtl
jo
inc
inc
cmpsl
stc
cmp
cmp
add
std
lock
out
sahf
loopne
movsb
jl
sub
dec
repz
in
rcrb
sub
xchg
aam
lcallw
mov
outsb
push
xor
ficoml
add
cmpsl
iret
or
pop
cmpsb
bound
into
sub
mov
aas
sbb
je
jne
jns
or
es
sti
push
ljmp
add
shll
add
sbb
push
mov
mov
divl
pop
inc
push
sbb
dec
inc
dec
xor
lock
dec
dec
push
push
ret
push
dec
inc
dec
add
dec
dec
mov
inc
push
das
adc
sub
adc
or
std
incl
popa
into
mov
mov
incl
jnp
inc
loop
mov
ds
pop
adc
lcall
or
cli
jb
xchg
jge
arpl
cmp
adc
pop
dec
scas
jp
adc
fisubrs
pop
repnz
and
cmp
dec
imul
jg
lret
add
inc
mov
mov
sub
fwait
out
paddsb
ss
sbb
pop
jns
ds
xor
incb
pushl
dec
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
call
sar
xchg
cmp
cmpsb
das
xchg
pop
and
xchg
lret
sahf
clc
push
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
popa
push
or
scas
int
stc
aas
sub
mov
pop
leave
loop
mov
xchg
dec
clc
cmp
scas
lods
cmp
mov
iret
adc
out
mov
pop
pop
repnz
and
xor
and
es
mov
add
mov
iret
pop
stc
mov
or
push
dec
push
push
inc
inc
or
mov
jo
outsb
jbe
and
and
cmp
shrb
inc
jge
push
loope
ds
gs
push
imul
sbbb
aas
iret
repz
dec
push
sub
mov
dec
mov
push
aaa
adc
and
and
pop
inc
ljmp
push
cmp
mov
lcall
push
pop
pop
adc
add
movups
adc
add
cmovb
insl
aam
inc
jno
jb
aas
cmp
sbb
das
ja
aaa
sti
xchg
add
adc
pop
sbb
sub
and
pop
mov
getsec
aaa
sub
and
dec
cmp
adc
pop
es
ja
inc
add
push
and
lods
das
xor
adc
sti
ss
ljmp
das
sbb
dec
or
inc
sub
sti
sahf
loopne
adc
dec
and
inc
push
mov
sti
jmp
xor
adc
push
or
adc
xor
dec
in
or
scas
fwait
ss
and
push
push
dec
add
or
jge
inc
ret
andb
mov
cmp
mov
pop
aad
jle
scas
addr16
cmp
adc
pop
add
add
lea
add
fwait
mov
inc
ds
push
ds
cmpxchg
fnstsw
cmp
inc
ds
fidivs
inc
inc
push
fisubrl
sbb
imul
xor
scas
fucom
pusha
and
dec
push
push
push
int3
inc
sub
in
addl
jle
xor
ja
jg
and
adc
js
sub
lret
push
cmp
push
push
mov
mov
arpl
push
pop
lcall
jb
inc
xchg
adc
inc
cmp
or
and
cmp
push
or
xor
adc
or
adc
rcrl
sub
adc
push
ss
jg
scas
shll
and
and
inc
push
in
icebp
jle
movsl
ss
jnp
call
fs
adc
dec
cwtl
in
push
cmp
pop
xlat
and
push
loopne
lock
mov
xor
xor
out
jo
push
adcb
js
jg
push
mov
shr
fidivrs
fcomip
adc
pop
xor
dec
and
push
testl
pop
scas
ds
push
mov
mov
cmp
jp
cmp
outsl
insl
or
push
lahf
mov
inc
popa
outsb
ret
mov
push
popa
mov
popl
inc
imul
bound
xor
and
loopne
xchg
pusha
push
jo
sahf
lea
push
push
xor
lahf
out
nop
shl
push
push
repz
mov
and
out
mov
push
lock
cmp
mov
mov
xor
pushf
imul
inc
les
add
inc
push
mov
pusha
cmp
add
xlat
lock
daa
cmp
sbb
add
pop
lods
ret
push
js
inc
jbe
sti
popf
stos
ret
mov
adc
es
push
inc
inc
inc
cmc
mov
and
cmp
cmp
sahf
and
mov
sbb
inc
push
dec
cmpsb
pop
mov
cmp
cmp
fcoms
jb
aas
mov
inc
pop
dec
add
or
pop
jb
inc
sbb
add
inc
ds
jno
and
inc
cmp
or
fildll
adcl
ss
sub
adc
cmp
or
jp
dec
pop
and
in
dec
jno
in
out
mov
xor
cmp
xor
inc
ja
ja
xchg
shrb
movhps
xor
ss
ds
jecxz
js
cmp
mov
scas
jge
data16
imul
or
pop
lcall
cwtl
pop
scas
fildl
daa
and
pusha
popa
push
mov
adc
jae
ds
pusha
sub
or
ucomiss
adc
pop
ss
inc
sbb
push
lds
add
push
daa
add
cs
and
jmp
pushf
sahf
adc
das
cltd
dec
in
mov
sub
or
gs
and
pop
ret
inc
xchg
stos
pop
ss
and
mov
pop
adc
adc
push
pop
mov
sub
cld
push
sbb
arpl
add
outsl
cmp
add
xchg
loope
add
push
lcall
ret
daa
stc
and
fmul
outsl
das
ds
pop
cmp
adc
and
and
pop
adc
xor
ja
dec
mov
mov
and
pusha
addr16
call
push
mov
push
push
mov
in
or
add
cmp
daa
in
push
xor
stos
mov
daa
lods
dec
push
pop
int3
loopne
lods
push
pop
adc
sub
mov
adc
xor
outsb
out
aaa
pop
les
pop
and
cmp
cmp
mov
push
scas
dec
inc
das
lds
andl
sbb
adc
pop
shrl
ss
push
ret
adc
push
inc
adc
sub
push
sahf
inc
jecxz
repz
ss
dec
push
andl
dec
ss
mov
repnz
mov
pop
adc
dec
pop
shlb
xchg
mov
inc
cmpsb
mov
or
sub
arpl
and
or
push
js
sbb
scas
bound
inc
daa
test
push
push
sbb
stos
sub
push
sbb
mov
add
adc
or
addl
movsl
add
sub
and
xor
or
ss
pushf
dec
adc
imul
xorb
jo
mov
adc
mov
das
xor
mov
sbb
push
push
adc
rcrl
or
loopne
cmp
out
cmp
dec
ss
mov
and
add
inc
add
lods
js
sub
pusha
shlb
xor
ja
adc
int3
add
xchg
jae
insl
popa
imul
fistpl
push
pop
outsl
jo
pop
clc
in
jge
data16
push
ja
or
push
outsb
and
push
hlt
sahf
out
sahf
push
inc
in
add
in
or
jns
adc
ss
imull
add
adc
aam
add
shl
outsb
pop
cmp
and
add
popf
les
dec
inc
addr16
fs
pop
mov
mov
dec
or
inc
sub
or
cmp
sub
push
mov
mov
adc
or
loop
daa
push
or
xor
ss
or
mov
into
fistpl
ss
pop
dec
sbb
push
inc
adc
dec
adc
or
pop
or
mov
cs
sub
xchg
sub
fwait
push
aaa
and
push
or
adc
push
pusha
addb
mov
into
ds
cltd
ss
es
push
imul
fistl
cmp
rorb
jp
push
add
push
imull
adc
outsb
test
es
aaa
xor
add
or
movsl
or
and
and
push
jl
push
cs
inc
popa
add
mov
jne
add
das
push
ret
xchg
push
push
popa
out
es
outsb
bswap
lods
ljmp
pop
bound
scas
pop
push
rcr
insb
push
je
and
jae
push
shrb
pop
je
add
cwtl
fidivrs
ficomps
push
das
and
xor
js
add
std
push
sbb
add
jae
test
cmc
imul
rcrl
xor
loop
aaa
sub
jecxz
and
push
push
das
xor
xor
dec
cmpb
cltd
add
fiadds
pop
fisubrs
sub
lock
das
sub
push
in
ds
sub
pop
adc
aas
and
dec
test
adc
xor
je
mov
jl
dec
sbb
addr16
jb
or
fmul
xchg
jb
outsl
imul
lahf
push
stc
int
fcmovb
inc
add
add
lock
stos
add
fisubl
pop
jo
push
jmp
mov
cmp
adc
jmp
and
push
cmp
and
adc
adc
dec
ss
cmpsl
lea
das
inc
push
push
inc
sahf
out
pop
jge
push
ss
push
mov
pop
inc
xor
pop
cmp
in
aaa
and
pop
test
and
cmovns
xor
and
inc
inc
into
enter
cmovp
pop
mov
mov
mov
mov
push
das
xor
sub
cmpsb
lret
or
leave
sbb
push
ljmpw
inc
push
bound
enter
test
rcll
inc
ds
push
pop
sub
pop
enter
inc
data16
les
mov
cwtl
pop
pusha
pop
sti
pop
cli
lcall
xlat
dec
inc
sbb
mov
cmp
pushf
push
xlat
push
jg
loope
push
sbb
add
and
add
or
div
fcoml
hlt
or
or
insb
or
cmpsl
inc
cmp
loope
sbb
pop
scas
jg
faddp
add
push
pop
inc
out
out
mov
inc
sub
dec
xor
fisttpll
adc
sub
and
adc
pop
push
xchg
cld
cmpsb
inc
js
adc
xchg
pop
out
jbe
jne
push
cmp
inc
push
sub
ret
dec
inc
push
pop
mov
push
or
les
push
dec
dec
testl
push
rep
lahf
lock
push
add
in
sarl
pop
nop
inc
pop
daa
jo
add
pop
sbb
es
push
loop
es
cmp
jne
pop
push
jo
andb
loopne
mov
fistps
xor
add
cld
sbb
inc
clc
xor
ret
movsl
lea
outsb
adc
or
ss
xor
rolb
aam
sti
es
andb
push
mov
cmp
pop
cmp
sahf
loop
pop
cmp
daa
pop
mov
adc
mov
mov
or
and
in
mov
dec
ja
ret
push
pop
mov
lahf
jecxz
mov
ss
xor
pop
es
movsl
and
das
xor
pusha
fistl
xor
xor
icebp
mov
xor
xor
cmp
comiss
cltd
cmp
xor
cmp
xchg
mov
push
and
repz
sub
xor
fisubs
shlb
xorl
sub
inc
and
mov
insl
xchg
and
aad
pop
es
aaa
add
pushf
jnp
jp
daa
test
jbe
dec
cmp
sub
inc
add
ds
pop
jmp
jne
daa
dec
cmc
stos
icebp
fdivl
jne
daa
inc
or
scas
sahf
or
pop
cmp
sbb
aaa
cmp
add
or
mov
pop
outsb
nop
add
or
ljmp
negl
outsl
ljmp
push
cmp
jg
push
dec
xor
push
add
or
push
add
cmp
cmp
sub
push
push
add
lods
loopne
mov
xor
and
and
cmp
push
inc
daa
jo
subb
and
add
test
xor
sbb
mov
and
lods
fistps
push
push
push
adc
mov
mov
mov
add
ss
dec
fdivrs
pop
inc
cmp
pop
shll
dec
inc
xor
insl
pop
divb
adc
cmp
adc
push
sbb
add
sub
adcl
into
or
imul
repz
xchg
cltd
or
es
insl
cmp
sbb
jb
rol
in
sub
divl
sbb
and
sub
das
sbb
inc
xor
inc
mov
mov
pushf
pop
xor
das
add
mov
pop
aaa
adc
popf
sbb
fs
and
jno
insl
mov
xor
xor
pop
xchg
pop
xor
jno
and
push
divb
inc
push
jae
in
cmpsb
in
sbb
and
in
add
xor
call
push
rcrl
and
pop
insl
shll
adcl
cmp
inc
js
and
sub
cmp
and
jg
aam
push
fucomip
aaa
inc
push
pop
aas
cmp
scas
pusha
lods
ljmp
sub
or
les
pop
sbb
xor
xadd
jge
adc
xor
ficompl
pop
ds
cmpsb
pop
cmp
pop
ret
and
ss
jmp
addb
stos
inc
fnsave
adc
push
orb
ja
pop
jecxz
or
js
mul
mov
outsb
and
pop
sbb
dec
test
repz
daa
and
mov
sbb
xchg
add
mov
movsl
pop
fs
ss
lret
ss
add
aaa
imul
inc
adc
dec
mov
jecxz
fsubr
pop
push
or
adc
adc
sub
xor
inc
aam
push
insb
pop
shrb
xor
and
push
icebp
mov
mov
cmp
or
add
pushl
imulb
je
jo
insb
or
ja
fs
gs
pop
stc
mov
push
push
pop
sub
ss
fsubrs
cmova
lcall
fwait
subl
inc
xchg
push
jo
inc
add
sub
mov
into
notb
push
pusha
xor
xor
fwait
int
xor
ss
push
cmp
adc
out
imull
inc
es
push
nop
insb
out
stc
sahf
mov
push
rolb
push
push
orb
ret
roll
sbb
lds
sub
pop
add
icebp
mov
dec
push
dec
dec
cmp
divb
shlb
mov
mov
filds
sbb
ljmp
mov
ja
call
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
add
test
cmp
mov
xchg
mov
mov
ds
pop
sbb
test
jle
jo
fsubs
lods
cs
pop
sbb
mov
pop
repnz
dec
xchg
pop
shl
dec
push
adc
icebp
test
pop
push
and
xor
cli
cmp
mov
mov
mov
push
sbb
movb
jb
fisubl
pusha
outsl
push
dec
imul
mov
dec
xorb
sub
sub
xor
jae
and
cmp
iret
adc
cmp
and
in
imul
in
rorb
mov
jbe
add
js
cmp
jo
stos
mov
dec
xchg
int3
push
inc
xchg
loop
clc
pop
aaa
xchg
dec
cltd
jnp
cmp
pushl
xor
sub
sub
xor
inc
xor
inc
test
inc
xor
jmp
sub
push
cmp
insb
push
outsb
add
mov
jne
les
js
js
out
sub
jne
add
lcall
jbe
push
jb
test
adc
jo
xlat
bound
ljmp
je
bound
mov
adc
add
sub
inc
mov
pop
adc
subl
and
and
pop
pop
sub
and
fdivs
loop
mov
jge
adc
das
cmp
pop
push
push
jl
push
mov
es
and
fs
add
out
push
sbb
rcrb
das
mov
daa
push
testb
push
dec
xor
jle
decl
xchg
pop
pop
ret
decb
and
push
push
ss
adc
inc
lret
fdivl
jbe
cmp
lcall
adc
or
sub
cld
and
jns
mov
pop
data16
fimull
sub
push
mov
stc
adc
sbb
push
mov
cmp
push
das
pop
adc
add
xchg
jp
push
dec
mov
xchg
add
addr16
xor
iret
pop
inc
sahf
aam
mov
lret
ljmp
idivb
lock
mov
sbb
pop
mov
iret
push
imul
sahf
cmpsl
push
addl
ds
iret
lods
xchg
ret
mov
es
sahf
mov
lcall
outsl
mov
arpl
cmpsb
mov
cmp
stos
mov
das
lock
mov
daa
int
imul
lock
mov
cmp
insb
cmovge
cli
aaa
push
out
xchg
flds
pop
fsubl
enter
or
mov
cmpsl
add
je
mov
imul
push
cmpsb
push
jno
insb
insb
and
push
mov
sbb
inc
shrb
cld
mov
mov
into
add
cmc
lock
js
out
ds
push
cmc
and
pushw
pop
popf
ss
mov
call
cmp
pop
mov
imul
mov
aam
mov
jb
add
aaa
mov
jns
iret
jnp
mov
push
sbb
sti
fsubrp
pop
ja
push
lds
sub
pop
dec
push
ds
repz
scas
enter
sub
shl
add
cmp
shl
mov
push
sub
aaa
pop
mov
fwait
std
jo
fisttps
adc
dec
sarl
push
ss
cwtl
mov
lcall
mov
push
mov
incb
hlt
repz
es
sbb
and
mov
mov
out
lahf
testl
mov
fnstsw
jle
push
addr16
xchg
iret
testb
push
push
outsl
mov
movl
testl
repz
add
pop
jl
stc
cmp
popf
mov
iret
sarl
mov
sahf
cmpsl
stc
cmp
adc
lahf
out
subb
call
and
push
or
aad
pop
dec
sbb
scas
sub
or
sub
adc
stc
add
adc
rcrb
push
push
mov
xor
adc
mov
bound
mov
mov
add
idivb
movsl
and
adc
push
and
nop
aas
in
hlt
pop
sbb
enter
adc
inc
cld
xchg
or
adc
daa
or
pop
push
jo
push
ljmp
mov
mov
pop
adc
mov
out
fildl
popa
scas
aas
inc
push
fstpl
and
insl
daa
inc
in
sti
add
sbb
or
aaa
fisubrl
jo
imul
mov
dec
fisubl
out
cmpb
ret
jae
dec
insl
roll
dec
je,pn
jbe
cmp
pop
push
jnp
push
xorps
cmpsb
push
insb
pop
push
dec
pop
ret
mov
aam
or
push
filds
in
fisttpll
jp
das
push
sarb
mov
outsb
push
inc
imul
into
ror
pop
retw
or
or
dec
or
test
sbb
fsubrl
and
jl
enter
int3
and
enter
push
repz
cmp
push
ds
notl
adc
in
scas
stc
es
insl
jo
es
insb
je
push
lods
cld
std
popa
jo
jae
es
outsl
and
ja
fstps
sub
push
fnsave
jbe
mov
pop
repz
xor
xor
xor
xor
xor
cmp
cmp
mov
xor
xor
cmp
push
add
push
cs
xchg
xor
xchg
adc
or
and
std
ficompl
or
push
push
cmp
add
lock
es
or
mov
push
add
or
jne
mov
mov
sub
or
jle
loop
adc
fwait
cmpsl
test
push
cmp
jp
mov
push
and
xorb
aam
adc
jg
pop
ljmp
bound
idivb
and
jmp
dec
ss
push
rolb
mov
or
add
push
mov
fistpll
pop
inc
dec
cmp
das
popf
popa
mov
pop
xor
cltd
sbb
pop
daa
test
loopew
dec
sti
pop
sbb
and
aas
and
sbbl
adc
xchg
mov
sub
add
enter
sub
lods
rcr
adc
aaa
call
add
int
and
shll
or
mov
sahf
mov
adc
cmp
sub
sbb
push
subb
das
sub
out
pop
push
in
pusha
das
popa
ja
sub
mov
daa
pop
or
and
pushf
inc
dec
popa
in
mov
push
aaa
cmp
add
xchg
rcrb
incl
jae
or
cmp
das
jge
cmp
xor
aad
adc
insb
mov
mov
push
xor
outsl
mov
stos
daa
pop
insb
or
lods
push
or
daa
jge
stos
mov
das
inc
pop
insl
add
aaa
iret
ret
lods
jecxz
ja
sub
inc
jge
ret
lds
fisubl
imul
popa
daa
or
sbb
dec
lods
js
dec
xlat
dec
cmp
out
or
pop
and
and
adc
sbb
pop
xor
inc
mov
ja
adc
rorl
and
fimull
mov
scas
pop
mov
daa
lahf
pop
xor
outsb
adc
outsb
pop
jnp
push
pop
sub
int
lods
inc
adc
addr16
add
jge
pop
mov
cmc
push
pop
add
xor
in
pop
and
es
inc
mov
dec
push
sub
add
js
or
push
clc
add
inc
int
in
das
out
or
push
orb
js
sub
xchg
jl
jl
es
faddp
pop
cmp
imul
lock
sub
cmp
subl
inc
pop
das
orb
sarb
xchg
fsubrs
xchg
insl
ja
mov
pop
popa
inc
jecxz
rcrl
aad
xchg
insb
test
data16
loop
stc
cmp
or
in
daa
and
dec
mov
pop
mov
mov
add
adc
and
xlat
cmp
das
imul
xor
or
es
orb
js
mov
sahf
or
lods
orl
out
xor
or
aas
es
push
adc
jo
jp
packuswb
addr16
push
push
mov
dec
push
dec
aas
jo
push
lret
sub
pop
and
in
xchg
sbb
or
dec
je
xor
inc
jne
es
test
push
or
add
xor
rclb
fbstp
pop
inc
sub
or
lret
pop
adc
xchg
or
adc
shlb
push
cmp
dec
sub
xor
daa
loopne
gs
ds
loopne
mov
and
loopne
sarb
loopne
or
adcl
js
fwait
les
xchg
jbe
test
fisubl
mov
fildl
dec
add
ja
push
dec
adc
push
pop
in
push
idivb
cmp
add
pushf
mov
icebp
enter
push
faddl
orb
lods
fs
cwtl
cmp
imul
mov
movb
das
jb
mov
bound
add
cltd
xchg
cmp
pop
loop
dec
shlb
mov
and
popa
rclb
xchg
fstpt
js
in
dec
rolb
xor
mov
sti
scas
mov
lcall
inc
hlt
adc
gs
inc
shrb
xor
mov
fadds
add
or
xchg
add
adc
inc
and
jp
push
sbb
negl
sbb
dec
aam
dec
adc
loope
push
mov
outsl
testl
push
cwtl
jb
dec
fdivl
jno
xchg
aas
pop
ja
hlt
adc
and
xor
push
jne
mov
fistpll
push
insl
cmpsl
inc
out
movhps
das
cmp
es
and
inc
pop
xchg
nop
out
imul
push
notl
pop
in
test
inc
xlat
push
out
and
loope
push
pop
cmp
repz
and
cmp
repz
andl
sahf
out
add
or
xchg
fwait
int
xor
add
data16
insb
pop
or
adc
int
fidivrs
and
sub
xor
inc
mov
out
fidivrs
mov
mov
mov
insb
mov
shlb
add
test
sub
fwait
int
add
das
or
adc
repz
mov
pop
adc
insb
ss
add
dec
str
mov
cwtl
or
and
das
jmp
pop
adc
add
add
jae
mov
pop
cs
and
fimuls
inc
dec
mov
or
inc
loope
sub
arpl
xor
rcrb
jns
je
pop
inc
or
jo
pushf
sbb
imul
xor
xor
add
fiadds
aaa
sbb
mov
jge
or
pop
js
subb
push
push
add
dec
push
add
into
add
push
pop
adc
or
cmp
xor
pusha
sub
push
push
sbb
das
and
push
pusha
cmp
inc
sbb
jg
test
ds
pop
pop
and
pop
add
pop
push
daa
fnstsw
ljmp
dec
cmp
push
cmp
pop
add
pusha
rorl
lock
sbb
hlt
inc
sbb
add
incl
dec
out
dec
inc
push
push
das
sub
mov
dec
dec
add
pop
sbb
dec
inc
and
xchg
mov
daa
dec
inc
sbb
add
sbb
dec
inc
xor
push
dec
inc
push
pop
pcmpeqd
adc
sub
sbb
push
add
dec
pop
push
sub
pop
pop
or
push
and
les
mov
shlb
ret
adc
add
imul
xor
adcb
add
and
pop
push
cmc
sub
inc
mov
push
adc
add
push
dec
dec
pop
cmp
add
movb
ss
or
pop
sbb
sbb
mov
in
add
sahf
xchg
mov
out
inc
and
xchg
lock
inc
cmp
xchg
stos
pop
pop
pop
les
pop
or
dec
pop
icebp
push
outsl
inc
addb
bound
mov
loopne
sub
dec
loop
pop
rol
sbb
push
xchg
pop
lock
jo
inc
jb
add
jmp
jns
push
push
adc
or
and
push
inc
push
or
dec
call
add
outsl
jmp
push
add
das
dec
push
pop
mov
xchg
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
jg
popa
std
sbb
cwtl
stos
pop
fmuls
and
jge
decl
mov
andb
fwait
rol
fwait
in
inc
mov
ud0
mov
sub
sub
fsubrl
stc
jbe
call
cwtl
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
decl
mov
cmp
sbb
cld
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
call
sbb
mov
call
cltd
test
push
push
jg
inc
movsb
sbb
insb
aaa
push
dec
ja
daa
mov
mov
movsb
sbb
dec
stos
fmuls
jg
dec
pushf
pop
rep
cs
arpl
test
add
mov
mov
jmp
push
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
decl
sbbl
int
pop
dec
push
cmp
jl
pop
inc
pop
inc
cmp
or
inc
je
jno
call
sub
pop
or
push
cmp
cmp
ljmp
ljmp
das
dec
pop
pop
cmp
insb
and
dec
aaa
imul
jae
push
jg
orb
sub
xor
jo
jbe
sub
sub
add
test
xor
ret
cmp
decl
mov
push
or
cmp
inc
add
jl
and
mov
sbb
pop
aam
and
ja
mov
rclb
mov
pop
push
daa
pop
daa
xor
push
or
and
call
or
sub
dec
inc
cmp
jbe
xor
es
aaa
push
xor
inc
add
xchg
fldt
xor
xor
push
inc
add
repz
inc
xor
and
aaa
inc
push
xor
cs
inc
ss
mov
mov
cmovb
pop
ss
cmpsl
ss
test
jg
push
jmp
inc
test
sbb
jl
adc
sub
test
pop
xchg
pop
sbb
mov
pop
outsb
mov
in
addr16
inc
scas
bound
pop
and
xchg
push
mov
adc
fldt
xor
arpl
xchg
rorl
fstps
push
sahf
push
or
push
ds
in
adc
fsubrl
mov
cld
pop
mov
pop
aaa
addb
daa
pushf
mov
outsb
cmp
push
ds
cmp
orb
loopne
mov
adc
test
jmp
sbb
pop
jp
mov
push
and
and
sbb
sbb
dec
ja
xchg
jp
aaa
loope
xor
mov
jbe
push
add
adc
sub
add
jbe
inc
or
pop
add
mov
sbb
add
pop
push
mov
dec
sbb
pop
cmp
mov
push
mov
pop
nop
std
mov
jmp
sbbb
je
and
mov
pop
jns
xchg
fildl
add
sbb
adc
pop
jp
fidivl
pop
push
dec
cmp
pop
pop
cmp
in
addr16
push
adc
test
mov
sbb
adc
inc
outsl
test
sub
das
sahf
cmp
mov
inc
pop
inc
adc
jne
adc
test
adc
add
adc
outsb
xchg
mov
je
xor
js
xor
jae
popa
insl
gs
cmp
adc
cmp
xor
xor
sbb
and
inc
aad
or
psadbw
xor
insl
js
insb
loop
inc
push
aaa
out
jecxz
stos
sbb
or
insb
or
aaa
lcall
push
std
ret
js
mov
add
out
sti
lock
push
dec
pop
and
inc
adc
cmp
xchg
addr16
gs
pop
dec
mov
mov
and
xor
pop
add
ret
or
xor
adcb
and
push
test
xor
fcoml
push
add
push
and
addb
pop
ret
scas
adc
adc
add
push
jae
incl
mov
lds
and
cmpsb
dec
inc
xchg
cmp
shrb
fiaddl
push
stos
pop
fcoml
sbbl
repz
mov
or
fs
push
faddp
pop
das
sbb
lret
add
inc
pop
gs
data16
das
xor
pop
lock
nop
push
or
fcom
fs
jb
mov
pop
push
les
call
jb
pop
inc
pop
push
inc
lock
or
mov
dec
aad
xor
and
mov
dec
fstpt
ja
inc
test
mov
mov
fstpl
jl
sbb
fdivrs
inc
inc
add
adc
xor
nop
jns
fcoms
sbb
add
push
call
call
bound
enter
dec
ljmp
jbe
jo
lret
and
dec
xor
stos
push
outsl
imul
mov
adc
cmc
and
push
syscall
jecxz
inc
add
es
cmpsl
aas
fdivr
pusha
jg
pop
sub
sub
aad
jo
scas
and
adc
pop
sub
pop
cmpsl
test
mov
aas
fisttpll
add
mov
dec
cmp
add
sub
fstpl
xor
push
xchg
sub
mov
and
subps
sub
push
ss
sbb
inc
dec
add
inc
outsl
sbb
ja
aaa
nop
dec
imul
dec
imul
inc
das
mov
sbb
cmpsl
inc
lcall
pop
pop
stos
sbb
push
mov
xor
adcl
gs
mov
and
pop
cmp
aas
inc
adc
push
into
minps
test
and
dec
pop
lcall
dec
pop
mov
pop
movsl
cmp
ret
pop
repz
cs
push
sub
push
push
push
stos
push
xorl
ret
xor
pop
lods
imul
cmpsb
pop
mov
inc
inc
mov
pop
int
push
jo
cmp
and
xchg
les
incb
sub
sub
inc
dec
rcrb
push
lock
mov
sahf
sbb
pop
add
cmp
add
and
cmpsb
jg
aaa
jns
jne
dec
subl
pop
lods
mov
insb
fs
call
dec
and
addr16
popa
lods
lods
cwtl
lcall
test
mov
or
mov
inc
push
punpckhwd
rolb
dec
outsb
push
je
scas
pop
or
push
ja
push
cld
out
sub
push
push
inc
dec
push
inc
pop
push
dec
inc
dec
add
jns
pusha
call
gs
adc
inc
ds
mov
daa
dec
xchg
or
push
dec
jb
mov
add
dec
lret
jne
ds
nop
orb
and
rclb
mov
push
dec
cs
js
sub
out
das
insb
add
add
push
test
jno,pn
add
aaa
pop
xorl
mulb
orl
push
jb
or
sub
loope
imul
or
or
xchg
add
add
xchg
mov
jbe
and
mov
sub
les
adc
enter
sub
push
adc
adc
cmpsb
and
cmp
mov
or
inc
adc
push
adc
and
adc
jno,pn
in
adc
cwtl
or
jnp
cmc
pop
out
ret
sub
daa
sub
ss
es
mov
push
outsb
push
shrl
fisubrl
cmp
cmp
dec
adc
ljmp
insb
inc
and
dec
inc
imul
xlat
out
adc
add
ss
insl
dec
movsl
andb
pop
mov
stos
test
lahf
xlat
outsl
mov
inc
or
pushf
insb
inc
add
rolb
test
mov
cmp
nop
or
pop
icebp
adc
xlat
clc
and
inc
das
in
dec
fnstsw
in
les
orb
xchg
dec
inc
xadd
sbb
inc
pop
mov
cwtl
sar
inc
mov
jge
adc
cmpb
aas
mov
jo
xchg
mov
pop
inc
dec
add
les
cmp
mov
add
mov
adc
push
inc
pop
cmp
inc
sbb
add
test
ds
push
addr16
movsb
xor
daa
add
neg
or
xchg
movsb
cs
mov
add
iret
mov
jmp
cmpsl
ja
lahf
add
repz
daa
test
enter
pop
fsub
test
add
pop
fwait
enter
adc
pop
adc
push
sub
aas
jg
stc
jbe
addr16
outsl
mov
xchg
pop
leave
dec
inc
inc
pop
leave
xchg
pop
cmp
xchg
pop
leave
xchg
sub
xchg
pop
sub
pop
fdiv
jns
notl
or
in
pop
push
rorb
dec
push
loopne
repz
les
js
pop
inc
sahf
in
repz
or
repz
jns
pop
ds
pop
pop
ds
repz
pop
push
inc
sub
pop
ds
repz
pop
jns
int
push
push
and
or
movl
pop
pop
add
mov
xor
xor
fsubrs
cmp
sub
mov
cld
add
iret
xchg
je
sub
mov
add
pop
fdivp
cmp
loopne
push
sarl
jg
pop
in
pusha
ja
mov
or
mov
pop
leave
xor
mov
inc
mov
sub
sub
add
jo
jl
dec
sbb
filds
enter
sub
mov
in
outsl
scas
in
stos
cmp
in
test
outsl
cmp
stos
mov
xchg
pop
pop
dec
insb
xchg
sub
inc
pop
pop
scas
add
sbb
push
vpmacsswd
out
xor
in
dec
mov
pop
in
pushf
xor
xor
pop
dec
shl
xor
jl
inc
pop
pop
scas
or
pushl
out
jb
and
xor
jae
inc
pop
pop
pop
xlat
mov
xor
fildll
mov
xor
fs
sbb
call
or
mov
fcomps
fwait
nop
pop
xor
pop
movsb
push
dec
shl
cmp
nop
fs
mov
add
call
pusha
jg
add
sub
xchg
inc
jg
xchg
sub
ss
push
sub
out
dec
sti
mov
test
fildll
mov
or
fbld
or
push
pop
sahf
and
shrl
pop
mov
jl
push
jo
cmp
scas
insb
and
add
or
out
mov
add
mov
xlat
cmpsl
xor
add
aaa
sbb
jb
aaa
and
outsl
and
faddp
mov
xor
cmp
addr16
ficoms
es
movl
mov
mov
popa
jge
jl
push
push
cmp
sbb
add
xchg
xor
push
mov
dec
mov
in
vprotd
sbb
add
dec
pop
pusha
inc
jbe
push
popa
fidivs
divl
sub
nop
popa
mov
mov
push
outsl
jg
pop
pop
xor
je
push
bound
dec
repz
xor
data16
imul
in
push
lock
push
bound
out
mov
xor
and
or
lods
bound
adc
or
popa
pop
in
pushf
mov
daa
xlat
leave
or
or
xchg
pusha
arpl
sub
in
adc
lahf
xchg
adc
or
pop
mov
add
mov
mov
ret
and
repnz
repnz
add
roll
push
enter
clc
push
push
fs
mov
aad
cmpsb
xchg
aaa
xorb
sbb
add
or
enter
call
or
dec
adc
outsl
outsb
leave
xchg
cmp
add
jns
fcoms
pop
add
push
xchg
test
ss
shlb
test
test
data16
add
or
xchg
nop
mov
jmp
sub
idivb
das
outsl
add
ss
pop
mov
cmpsb
enter
orw
enter
in
data16
inc
dec
cmpsb
nop
add
xchg
in
add
je
inc
add
ret
dec
iret
insb
arpl
xlat
add
iret
daa
dec
xchg
stos
daa
add
push
sub
push
pop
test
push
xor
imul
rep
sbb
push
cmp
mov
ret
push
and
test
les
push
push
push
dec
sub
or
push
fs
imul
add
lcall
aaa
and
imul
scas
push
xchg
popa
adcl
add
or
out
mov
dec
scas
rolb
sub
inc
out
push
addr16
pop
inc
lea
pop
or
cld
addr16
inc
and
or
sub
dec
scas
add
outsl
call
imul
push
push
fwait
and
push
and
push
xor
imul
in
fcomp
dec
xlat
mov
daa
sbb
pop
sub
cwtl
cmpsl
test
notl
subb
push
xor
cmp
aaa
ss
fsubrs
das
or
enter
call
and
outsl
movsb
xor
xchg
dec
scas
pop
push
roll
data16
pop
das
es
lds
enter
out
addr16
aas
pop
out
int
pop
lock
gs
pushw
shrb
cld
int3
iret
repz
ds
loop
sahf
out
lcall
cmp
sarl
cmp
test
mov
dec
repz
out
mov
out
cmp
mov
dec
repz
pop
stos
testb
mov
out
ds
jno
pusha
andl
repz
fs
iret
repz
in
adc
push
popf
je
sarl
stc
cmp
xchg
sahf
cmpsl
stc
cmp
cmp
jno
cmp
repz
sub
cwtl
loopne
sahf
cmpsl
stc
sbb
cwtl
int3
cld
lahf
out
divl
jns
push
test
ds
repz
xchg
in
out
out
imul
jl
push
dec
iret
repz
jbe
jge
movsb
fmuls
int
jns
jle
jb
add
repz
loopne
andb
xor
pop
andb
repz
clc
and
int
jns
call
out
mov
push
jbe
adc
push
ljmp
out
sahf
pusha
xorl
cmpsl
stc
cmp
and
lcall
adc
jns
mov
mov
pop
ds
repz
pop
nop
sar
xchg
ds
repz
push
xchg
ds
imul
imul
cmc
cmp
mov
mov
push
test
iret
repz
sti
cmp
dec
repz
nop
xor
mov
repz
out
add
out
out
xchg
mov
repz
cmp
ss
out
xor
call
fsubp
imul
movsl
push
cmpsl
fnstcw
shll
sarl
fwait
and
out
and
stos
sahf
cmpsl
stc
xor
sub
out
jl
lods
scas
push
lods
nop
fcomp
jge
jge
scas
fiadds
cmc
stos
mov
push
or
push
xlat
inc
mov
mov
adc
push
lahf
out
cmp
fldcw
jns
mov
mov
mov
popa
movsb
pushl
shrb
out
test
sarl
lods
cmpsl
stc
xor
out
ret
ret
inc
iret
sarl
roll
pop
nop
lock
pusha
lret
mov
push
push
rcrl
data16
insb
cmc
iret
mov
ret
rcll
lahf
mov
add
inc
push
add
mov
push
call
fdivrp
jno
jl
daa
frstor
imul
jb
in
xchg
lahf
mov
jmp
rolb
mov
add
mov
imul
add
pop
paddq
mov
repnz
out
xchg
or
adc
shll
cld
adc
xorl
mov
daa
xchg
adc
paddsb
pop
xchg
mov
pop
adc
pop
or
and
cmp
jbe
inc
pop
enter
or
fnsave
pop
mov
mov
dec
out
and
fs
bound
mov
ficompl
aas
mov
frstor
jbe
dec
bound
push
pop
insl
jb
fildll
out
jmp
aas
aaa
mov
adc
inc
xchg
xor
dec
mov
lahf
fxch
shrb
pop
out
fsubrl
ss
pusha
repz
mov
mov
nop
mov
mov
in
jb
fldcw
iret
in
xchg
lock
add
push
ds
cs
call
jmp
iret
mov
aaa
pop
in
jbe
popl
jbe
or
inc
icebp
stc
mov
inc
repnz
nop
aas
rorl
inc
add
frstor
cmpsl
jp
loope,pt
out
lahf
mov
jb
ja
sbb
cli
pop
clc
mov
inc
mov
mov
loop
hlt
adc
adc
int
mov
push
lock
cmp
hlt
inc
inc
jg
dec
pop
jns
inc
pop
dec
iret
pop
insl
and
adc
sbb
pop
and
add
jnp
mov
jns
pop
nop
sub
cs
adc
pusha
inc
inc
pusha
inc
adc
into
repz
add
push
hlt
inc
outsl
cmpsb
arpl
movsb
jns
dec
mov
pop
xor
in
jns
es
mov
jp
aas
pop
ficoml
xor
out
adc
xchg
xchg
cmp
inc
je
fs
stos
or
ret
mov
sbb
fistpll
jp
popf
cmp
add
push
add
fcompl
xchg
jnp
cmp
sbb
and
sub
cs
dec
mov
dec
push
leave
inc
repnz
nop
jp
mov
mov
in
fs
clc
jnp
jnp
jns
jnp
jl
scas
pop
or
sbb
leave
push
jl
jl
mov
enter
scas
loope
cmp
and
dec
and
sbb
mov
push
push
inc
outsl
mov
lahf
xchg
pop
xlat
cmp
add
jge
pop
shlb
pslld
cmpsb
andb
mov
add
dec
in
cmpsl
stos
adc
xor
jle
rcr
and
push
daa
xor
xor
das
inc
dec
mov
test
dec
jb
pop
fmull
sub
jg
dec
and
jg
outsb
inc
cmp
in
outsb
xor
push
add
cmp
repz
add
cmp
push
mov
jmp
or
jo
mov
bound
in
push
les
add
inc
scas
incb
inc
inc
dec
jb
cmpb
mov
mov
in
mov
push
or
loop
fwait
enter
pop
cmp
faddl
inc
outsl
dec
xchg
leave
leave
leave
inc
jne
test
cmpsb
add
and
push
cmp
pushf
pushf
fsubp
out
inc
pop
and
mov
jo
jo
enter
jo
jo
jo
xchg
dec
jb
jo
pop
scas
scas
cmpsl
insb
pop
je
jl
loope
mov
mov
xor
rcll
push
cs
out
out
mov
inc
repnz
out
add
in
jno
sbbl
pop
inc
out
inc
xorl
loop
jmp
je
add
push
mov
nop
xchg
out
movsb
mov
in
cs
in
sbb
push
mov
ja
and
sbb
add
test
xchg
pushf
xchg
lds
test
in
jb
test
jb
test
mov
fcomps
sub
mov
xchg
sbb
add
daa
sub
cmp
jo
jg
xchg
enter
jb
xchg
jb
jb
ss
pushf
fs
xchg
aam
vpmulhuw
in
add
mov
xchg
push
jb
stc
mov
add
adc
out
and
leave
sub
dec
xchg
xchg
xchg
xchg
lahf
punpckhbw
jae
jae
xchg
xchg
xchg
xchg
jae
jae
jae
jae
sahf
out
xchg
jae
push
or
or
jns
out
or
or
or
testl
iret
repz
adc
adc
adc
cmp
repz
cmp
dec
adc
push
push
gs
jae
pop
cmp
sbb
push
js
push
in
mov
xlat
xchg
mov
and
into
inc
jb
push
clc
ja
in
jmp
jg
add
jae
mov
add
add
pop
leave
pop
out
xchg
mov
cmp
and
jbe
mov
mov
xchg
dec
mov
scas
in
push
jb
pop
dec
mov
orb
insb
mov
xchg
jae
je
movsb
mov
push
add
leave
fdiv
mov
xchg
outsb
in
ja
push
dec
ja
adc
ja
ja
add
or
push
add
cmp
inc
call
xor
mov
add
fmull
xchg
cwtl
pusha
call
nop
in
jns
jg
hlt
rol
loope
aaa
rol
cmp
mov
out
adc
rclb
aas
add
and
fldenv
mov
mov
push
xchg
dec
cs
les
cs
mov
xchg
pop
leave
and
xchg
mov
mov
cltd
jns
mov
jb
mov
repnz
or
test
sub
sbb
pop
mov
jp
push
push
repnz
addps
add
sbbl
add
scas
mov
and
pop
push
jb
mov
mov
jnp
mov
das
das
sysenter
jnp
jnp
jnp
jnp
repnz
pusha
xchg
add
leave
mov
xchg
lret
in
and
in
xchg
lea
jo
pop
sub
cmp
mov
mov
or
pushf
push
iret
les
push
inc
pop
or
dec
and
scas
sbb
data16
cmp
cmp
jl
nop
pop
xchg
xchg
xchg
pop
xchg
jl
jl
jl
xchg
xchg
xchg
xchg
jl
jl
jl
jl
xchg
xchg
xchg
xchg
jl
jl
jl
jl
xchg
xchg
xchg
xchg
jl
jl
jl
jge
insl
xchg
xchg
xchg
jge
jge
jge
pop
jb
jb
pi2fd
or
jb
jb
or
or
jb
pop
push
add
jb
add
add
leave
shll
and
inc
jbe
dec
xchg
ja
outsb
adc
out
int3
xchg
lcall
sbb
jo
repz
sti
add
inc
repnz
ja
jo
jle
xchg
out
cmpsl
add
in
ja
push
loopne
xchg
mov
xlat
lea
out
jbe
cmp
bsr
push
stc
icebp
pushf
cmp
int
push
aad
and
jno
or
sbb
add
and
xchg
movaps
xor
inc
mov
cld
push
jae
push
into
jbe
iret
mov
les
iret
nop
push
sets
scas
popf
pushf
mov
enter
pop
or
fnstsw
push
xadd
add
or
aas
mov
mov
pop
pop
xchg
popf
mov
pop
or
scas
ret
es
adc
sub
lock
inc
sbb
sti
das
add
or
sub
out
add
and
pop
add
xchg
xchg
flds
mov
cwtl
xchg
add
jb
fabs
jmp
loopne
jle
stc
add
mov
adc
inc
xchg
outsl
inc
orl
push
sbbl
cmp
je
jg
insb
xchg
xchg
xchg
mov
xchg
xchg
into
ftst
out
mov
push
dec
sahf
push
cli
add
iret
repz
sbb
or
or
or
jns
cmp
or
repnz
data16
add
cmpsl
or
xchg
lret
cwtl
xchg
outsl
adc
mov
iret
jae
fstpl
inc
cmovns
push
push
pop
jbe
cmp
popa
or
pslld
jns
addl
inc
mov
add
mov
das
dec
ds
push
and
and
add
fcompl
adc
and
daa
xor
sub
leave
add
insb
cltd
add
test
in
cltd
loopne
xor
add
mov
add
enter
out
ror
pop
and
nop
fcmovnu
jmp
ljmp
add
push
cmp
adc
xlat
dec
lcall
nop
lcall
mov
test
dec
lcall
lcall
and
outsl
xchg
xchg
xchg
fucomi
enter
out
mov
aas
call
clc
leave
xor
jo
xchg
or
add
push
fidivrs
xchg
add
ret
dec
mov
ds
iret
jae
xchg
enter
cmp
sti
push
xchg
mov
cltd
ja
pusha
inc
xchg
add
in
cmp
xchg
xchg
in
popf
xchg
xchg
xchg
xchg
testl
rcrb
xchg
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
mov
push
mov
push
mov
jle
daa
daa
push
leave
push
popf
mov
daa
daa
ret
jecxz
mov
daa
out
stc
mov
add
enter
fcomps
dec
popf
in
mov
and
adcb
add
pop
cmpsb
xchg
cmp
scas
ja
fcomp
roll
out
adc
pop
push
je
mov
mov
mov
pop
push
cs
out
repnz
outsl
mov
ja
pop
das
fisubl
xlat
lcall
das
fninit
rorb
or
jmp
scas
add
or
sbb
aaa
push
push
iret
js
daa
push
pop
mov
lcall
das
sahf
ja
fidivrl
ljmp
dec
verw
cli
mov
int
sbb
mov
mov
adc
or
repz
sbb
or
or
xchg
xchg
xor
and
pop
mov
add
adc
out
mov
and
xchg
jl
daa
aam
add
das
xchg
out
notl
cmp
lea
in
aaa
xor
in
mov
xchg
inc
repnz
cmp
add
dec
sahf
fcmovne
movsl
lods
out
add
jae
cmp
stc
aas
cs
iret
mov
push
dec
or
cmp
xchg
mov
mov
mov
mov
das
cmp
inc
scas
dec
iret
in
add
daa
fistps
pushf
pushf
cmp
insb
je
mov
repnz
mov
mov
pushf
pushf
pushf
fcompl
or
or
pushf
pushf
pushf
pushf
push
add
pushf
pushf
add
mov
mov
sbb
sbb
sbb
aam
fcompl
in
dec
sahf
outsb
mov
hlt
cld
cmp
repz
add
and
orb
ljmp
mov
aaa
push
movsb
daa
fstpl
jnp
jl
xchg
femms
add
movsb
cmp
ds
adc
out
mov
and
daa
fists
dec
sahf
fcmovne
imul
cmpsl
push
mov
inc
mov
nop
dec
out
fcompl
push
fistpll
pop
pop
pop
iret
lods
jae
scas
pusha
punpckhbw
jo,pn
repz
or
repnz
nop
cwtl
pop
bswap
repz
cmp
test
mov
in
loopne
nop
xchg
pop
mov
xchg
loopne
lock
cmpsb
inc
mov
xchg
xor
cmp
repz
add
add
jns
cmp
push
add
xchg
ficoms
or
cmpsb
nop
iret
mov
test
iret
mov
ror
addl
cmpsl
mov
xchg
dec
push
daa
mov
cmpsl
xchg
decl
dec
jno
add
sahf
fcmovne
adc
outsb
cs
mov
ss
fsubs
add
xlat
push
add
or
cmp
push
jg
test
push
daa
jl
push
or
xchg
cmp
inc
inc
xchg
xchg
repnz
mov
lock
clc
xchg
lock
ja
xchg
xchg
xchg
xchg
das
push
cmp
mov
jb
xchg
xlat
jo
jle
xchg
cmp
cmpsb
ljmp
xchg
push
sbb
pavgb
leave
leave
add
iret
leave
enter
adc
sbb
and
pop
xor
sahf
out
cmp
sahf
out
dec
adc
pop
stos
jmp
mov
xchg
adc
xchg
pushf
xchg
movsb
shrd
repz
mov
mov
mov
pop
mov
enter
stos
fsubrs
in
scas
hlt
pop
mov
fwait
loope
xchg
lahf
or
add
adc
adc
insl
push
fists
iret
mov
jns
bound
add
subl
xchg
pushf
cmp
push
add
mov
and
hlt
leave
mov
pop
xchg
imul
dec
outsl
sub
add
xor
mov
push
push
or
and
outsl
into
push
add
jo
adc
ja
push
and
subb
popf
xchg
add
add
pmulhuw
movsb
fistpl
lar
cs
les
xchg
int
add
in
xchg
or
pop
cmpsb
xchg
sbb
add
iret
repz
sub
xor
add
es
dec
push
push
or
pusha
or
mov
out
jo
js
mov
jns
adc
js
and
xor
mov
xchg
xchg
out
add
hlt
cld
mov
lea
cwtl
daa
mov
ljmp
mov
mov
dec
push
pop
push
xlat
xchg
adc
insl
cwtl
jg
cwtl
jge
dec
sub
repnz
in
inc
pop
nop
xchg
ja
lock
enter
inc
daa
xchg
dec
push
mov
mov
xlat
scas
out
in
adc
adc
lahf
cltd
xor
in
mov
orl
out
imul
jbe
cs
repz
add
xchg
popf
dec
sahf
cltd
or
mov
push
add
in
xchg
mov
jl
daa
pushf
pop
in
mov
lock
cmpsl
clc
cltd
add
push
lcall
sub
repz
cmp
out
inc
lcall
pop
lcall
cmp
or
or
inc
pop
cmp
test
mov
mov
das
loopne
and
xchg
iret
add
push
enter
das
das
pcmpeqd
pop
fwait
pusha
fwait
push
and
add
mov
push
cmpsl
in
jae
xor
or
es
xchg
int
lock
mov
daa
daa
pop
inc
das
aam
insl
daa
daa
daa
ljmp
lds
pop
add
push
mov
pushf
pop
sub
js
daa
daa
daa
pushf
pushf
pushf
pushf
dec
push
xor
inc
inc
pop
sbb
int3
cmc
pop
mov
pop
and
insb
mov
insl
jb
pushf
cmpxchg
mov
pushf
add
cmp
mov
popf
cmp
lret
orl
add
mov
in
jl
cld
inc
push
mov
push
add
aas
out
mov
enter
pop
push
aas
xchg
movsb
mov
js
pop
cwtl
mov
pushf
fmull
mov
xchg
out
pushf
mov
mov
sarb
dec
sahf
pop
in
jecxz
in
cmp
repz
xchg
mov
in
mov
sahf
aaa
sahf
aas
pop
sub
inc
dec
sahf
call
popf
mov
xchg
out
jb
mov
push
and
sahf
mov
mov
filds
jecxz
jmp
lahf
inc
scas
lahf
and
repnz
cs
inc
dec
cmc
repnz
lahf
dec
lahf
mov
xor
xchg
and
jnp
pop
or
push
add
leave
inc
repnz
fabs
sub
or
pop
push
dec
lahf
daa
sbb
push
aaa
sub
mov
sbb
xor
jb
mov
sub
xor
xchg
add
jl
pop
repz
outsl
emms
pop
jg
movsb
fwait
cmp
xchg
lar
notb
jb
mov
xchg
pop
leave
dec
incb
mov
push
mov
rdtsc
mov
mov
fsubl
pop
pop
ja
add
daa
pop
xchg
lcall
push
mov
packuswb
add
inc
pop
and
mov
pop
leave
pushf
push
cvtdq2ps
lods
in
arpl
mov
out
jg
add
mov
fiaddl
pop
xchg
ja
lsl
mov
fsubl
das
in
mov
leave
out
adc
out
push
add
add
out
pop
cmp
outsb
cmp
push
push
pop
pusha
pop
pslld
xchg
xchg
add
scas
push
bnd
js
andb
mov
or
mov
jns
out
pop
mov
cmp
in
rcrb
sbb
loopne
inc
xor
mov
jns
mov
mov
loope
daa
in
mov
repnz
movsb
sbb
push
dec
xchg
and
mov
xorb
mov
cmp
xchg
mov
je
adc
enter
mov
push
movsb
movsb
movsb
movsb
inc
sub
and
pop
movsb
movsl
or
stc
add
or
xor
jle
pop
mov
movsl
fbld
mov
popf
pop
and
test
mov
mov
xchg
addr16
jb
call
movsl
out
xchg
and
cmpsb
adc
sbb
test
sub
stos
outsl
jo
jp
andb
mov
frstpm(287
in
mov
pop
aad
lcall
and
outsl
stos
cmpsb
mov
shlb
fisubl
repnz
out
cli
adc
cmpsl
or
push
dec
cmc
jbe
push
adc
mov
das
sbb
and
push
cmp
dec
repnz
mov
daa
cmp
loopne
cmpsl
cmpsl
mov
fdivrl
xchg
pop
inc
leave
cmp
comiss
mov
outsb
jg
push
add
add
idivl
repz
add
add
aaa
pop
call
clc
cmpsl
sahf
ja
jns
test
test
push
or
dec
arpl
dec
out
push
and
adc
sarb
inc
pop
dec
test
add
add
xchg
mov
test
pop
mov
test
test
ds
push
cmp
mov
dec
insb
inc
pop
jnp
add
arpl
pop
roll
jae
rcrb
mov
out
push
sub
jmp
enter
aas
adc
dec
jb
test
xchg
and
dec
test
test
inc
xchg
popf
pop
and
mov
fmul
mov
mov
stos
imul
add
sbb
jns
inc
cs
dec
add
sahf
push
dec
pop
push
or
in
in
or
outsl
invlpg
cmp
or
cmp
cmp
stos
addr16
fdivl
jb
lods
mov
unpcklps
aaa
pop
mov
lds
pop
stos
aas
xchg
stos
addr16
cmp
stos
clc
xchg
adc
out
cmp
addr16
and
xchg
enter
mov
cmpb
jb
mov
rep
out
sbb
sti
stos
add
jns
adc
cmp
ss
pop
push
rol
lods
lea
and
punpcklbw
dec
sahf
addr16
add
iret
sub
iret
mov
xchg
syscall
cmp
cmp
add
cs
mov
pop
lds
and
shlb
pop
lods
lods
or
and
lods
out
add
mov
lods
popf
cmp
sub
xor
loope
push
jle
lods
dec
lods
aam
adc
lods
sub
and
mov
push
cltd
lods
xadd
lods
pop
mov
into
inc
shrb
test
dec
into
decl
scas
sbb
out
adc
pop
pusha
jb
enter
scas
mov
in
fwait
mov
sahf
out
jo
or
xorb
rorb
fimull
or
push
loop
ljmp
adc
scas
leave
repz
push
scas
push
add
pushf
cmp
leave
inc
dec
push
imul
mov
add
jnp
xchg
leave
leave
leave
leave
mov
in
repz
leave
in
pop
das
jl
repz
leave
call
sahf
fldt
add
xor
daa
iret
cmp
arpl
and
loop
in
push
and
insb
push
loope
aas
lahf
mov
sub
enter
xchg
push
add
add
jb
mov
sub
cs
out
dec
xchg
add
dec
dec
xchg
cmp
stos
mov
mov
mov
xchg
mov
imul
bnd
enter
mov
mov
mov
cltd
sbb
mov
pop
xchg
fs
mov
jbe
jle
in
in
mov
iret
repz
pop
scas
or
or
adc
in
repnz
mov
iret
fidivs
leave
xchg
mov
mov
out
push
cmp
cmp
mov
adc
and
mov
mov
cmovle
lret
lret
lret
push
mov
mov
mov
mov
lret
lret
lret
js
xorb
lret
lret
sahf
mov
mov
mov
mov
aam
lret
mov
mov
mov
pop
pop
pop
loope
in
mov
mov
iret
repz
add
adc
repz
sub
xor
repz
repz
inc
and
repz
and
popa
and
cmp
je
jl
repnz
xrelease
xchg
sub
cvttps2pi
mov
lret
outsb
fucomp
outsb
fcomps
loopne
call
in
add
push
das
add
or
fs
sub
pop
fs
sgdtl
push
loop
popf
pop
fisubs
mov
and
cltd
dec
mov
into
dec
dec
cs
das
enter
sahf
fmull
psubw
mov
dec
dec
dec
dec
inc
pop
jbe
dec
dec
dec
dec
xchg
mov
lds
out
bswap
adc
fstpl
adc
in
pmaddwd
adc
aas
and
mov
pop
das
jge
jb
jns
test
cmp
jae
test
and
repnz
add
icebp
aas
fisubrs
fimuls
daa
out
movhps
dec
daa
push
sub
arpl
leave
repz
cmp
jae
xchg
mov
xor
repnz
iret
xor
push
lods
out
out
out
cmp
inc
mov
inc
mov
mov
incl
push
shrb
leave
in
mov
mov
rorl
mov
mov
mov
inc
jp
mov
xchg
xchg
xchg
push
imul
mov
cmp
jae
ror
xlat
add
loop
clc
add
push
add
xchg
out
and
pop
cmp
jae
cmp
push
pop
adc
repnz
je
jg
repnz
iret
push
xchg
mov
iret
jae
sbb
iret
jae
sbb
iret
jae
in
clc
and
mov
mov
mov
das
mov
adcb
add
rorb
rcrl
out
mov
insl
pavgb
add
and
inc
push
mov
sub
push
add
out
sbb
femms
in
sahf
out
sub
xor
cmp
popf
cmp
inc
push
adc
push
adc
repz
pop
lar
push
aas
jo
jmp
daa
dec
scas
dec
inc
out
rcrl
push
sbb
aam
fistps
cmp
inc
daa
sub
mov
fwait
iret
divps
push
btr
in
pop
pop
lret
mov
jns
out
xlat
notb
mov
iret
in
insl
push
movhps
faddl
cmp
inc
repnz
aad
xchg
fcmovne
jl
jl
mov
xchg
insb
mov
daa
iret
mov
pushf
cmp
leave
out
push
testl
mov
es
iret
in
sub
ja
sbb
dec
leave
repz
xchg
gs
pop
and
add
mov
sets
pop
jo
xchg
shl
outsl
mov
stos
mov
push
sarl
adc
dec
sahf
out
push
es
cs
call
sbb
xlat
xchg
shll
fsubl
jl
jns
daa
movsb
cmpsl
push
mov
iret
xlat
filds
add
fadds
ret
dec
dec
outsb
movlps
ret
ret
xor
inc
lahf
dec
mov
xchg
out
push
pop
fildll
jae
cmp
jne
pop
test
cmp
or
jb
mov
pop
mov
pop
loopne
call
xchg
or
fldcw
addr16
mull
ret
sub
xor
inc
fwait
in
ja
ret
mov
pop
data16
jbe
inc
jb
jle
mov
test
sarl
xchg
iret
leave
leave
push
and
in
cmp
dec
hlt
cld
ret
das
js
ss
sub
les
les
pop
jns
sahf
out
add
inc
add
dec
push
incl
fildl
addr16
incl
sbb
leave
mov
call
les
pop
insl
xchg
add
inc
or
jb
cmp
lds
jb
pushw
add
stc
sub
pop
pop
jp
lds
lds
ds
mov
mov
outsl
xchg
mov
ffreep
pop
cmc
lds
stc
dec
outsl
add
or
push
jns
jns
and
sub
aaa
movb
jns
jns
pop
arpl
outsb
jns
jns
jns
test
pop
lcall
pop
nopl
dec
dec
dec
outsb
aas
sbb
sbb
dec
dec
dec
dec
push
adc
out
mov
mov
xchg
out
rcr
push
xor
mov
xchg
cmp
mov
lahf
xor
psllq
cmp
cmp
or
push
adc
cmp
jnp
cmpsl
push
aas
aas
inc
sahf
out
sahf
dec
inc
push
inc
pusha
inc
repnz
jns
inc
fidivs
cmpl
inc
ret
into
dec
out
fucom
dec
cs
jns
mov
out
cli
syscall
enter
jns
out
sbb
push
daa
daa
mov
xor
inc
push
pop
outsb
repnz
push
dec
dec
sahf
pop
jle
xchg
lahf
lahf
mov
mov
lahf
popa
fcomp
enter
lock
mov
add
push
leave
push
repz
add
leave
push
push
cmp
iret
leave
sub
or
leave
and
mov
test
pop
mov
mov
leave
sarb
push
and
hlt
dec
leave
pop
push
leave
pop
leave
pusha
fmulp
rep
aas
push
ds
jns
out
sbbb
sbb
cwtl
push
sbb
enter
push
dec
call
test
lret
cmp
enter
pop
cmp
add
test
xor
jg
xchg
add
inc
lods
loopne
adc
pushf
push
daa
mov
xchg
mov
cmpsl
fisttpl
add
enter
leave
enter
fcoms
lret
sbb
cmp
loopne
or
lock
push
clc
lret
or
aas
lock
loopne
lret
scas
dec
jb
cwtl
xchg
lret
push
lret
scas
lret
or
xor
out
push
leave
and
js
fildll
ja
mov
daa
stos
mov
test
lret
cs
and
pop
or
jg
out
mov
dec
add
bswap
pop
push
mov
ret
sbb
and
cmp
mov
int3
push
int3
pop
packuswb
jb
jb
jb
mov
sahf
adc
repz
mov
aad
sahf
out
loopne
sbb
sbb
jns
jne
pop
int
or
sbb
in
cmp
push
pop
and
repz
sahf
and
jns
xchg
fisttpl
pop
outsl
outsl
push
daa
and
in
in
test
nop
int
xchg
cmpsb
xchg
int
push
out
lahf
push
add
add
xor
cmp
add
sbb
call
jb
push
into
inc
into
dec
into
jb
fmulp
repz
mov
out
sahf
pop
test
mov
or
into
ss
dec
scas
lret
into
loopne
in
add
jle
iret
repz
loope
iret
or
adc
popf
cmp
sub
jns
out
dec
sbb
dec
sahf
ja
push
fs
pop
outsl
popf
cmp
rorl
and
test
push
and
cmpsb
push
es
nop
in
daa
fidivrs
sahf
push
sub
shrb
fisubrl
xor
iret
pop
sbb
inc
setno
in
sub
das
push
in
push
aaa
jo
push
and
iret
rep
xchg
rcrb
inc
add
mov
aas
insl
pop
xchg
out
sahf
js
orb
cmp
repz
or
add
adc
cmp
pop
sbb
dec
call
jns
sti
push
rcll
push
add
jns
daa
pop
xor
cmp
or
pop
inc
mov
shll
outsb
in
cmp
lahf
jbe
iret
adc
cmp
shll
rcrl
adc
pop
iret
add
and
push
rcl
sarb
ja
outsl
sbb
and
add
add
xor
sarb
cmovnp
leave
push
repnz
out
or
leave
leave
jnp
xchg
ljmp
xchg
fwait
out
cmpsl
mov
mov
rorl
or
shl
cmp
xchg
jae
jmp
call
leave
leave
fwait
sbb
push
or
daa
daa
daa
iret
adc
sub
inc
daa
iret
repz
dec
pop
push
iret
in
in
push
sbb
aas
xchg
iret
repz
sbb
iret
repz
mov
shlb
sbb
repz
in
out
push
aaa
bnd
and
adc
ljmp
sub
lahf
sub
dec
aam
cs
ja
dec
and
push
pop
sbb
lds
pop
aam
lods
aam
aam
sahf
out
ret
int
fcomps
sahf
xchg
out
jecxz
or
stc
aam
mov
femms
or
fucomi
and
inc
sahf
out
sahf
push
adc
adc
jb
dec
jge
fucomi
jbe
aad
das
sahf
dec
aad
iret
jae
mov
mov
mov
and
mov
mov
not
add
in
inc
or
pop
pop
sub
repz
sahf
out
sub
inc
cs
popf
cmp
dec
sub
jbe
mov
xor
leave
in
cmpsb
pop
jp
ss
psrld
out
cmp
dec
sbb
pop
jecxz
orl
add
xchg
lret
mov
push
sbbl
push
add
aas
inc
push
es
inc
sbb
xchg
push
push
lret
scas
pop
inc
xchg
dec
push
or
aaa
dec
aaa
cmp
sarl
push
add
psllq
jae
sbb
cmp
or
or
or
dec
sahf
or
scas
or
imul
daa
adc
adc
cmp
das
and
fucomi
jbe
addr16
das
push
xorps
outsb
imull
push
and
outsb
daa
iret
sbb
push
pop
andb
outsb
mov
jb
cmp
jns
xchg
sub
pop
jo
cmpsl
mov
into
aas
xlat
xor
data16
fldl
add
repz
jae
push
inc
cmp
xor
repz
xor
and
or
sahf
out
ds
call
jns
out
aam
int3
iret
repz
out
rcrb
test
ja
cmp
cwtl
nop
push
mov
je
pusha
push
push
icebp
jns
out
inc
sub
or
sub
adc
pusha
adc
mov
test
mov
mov
adc
inc
add
adc
test
push
inc
int3
mov
sbb
dec
cmp
pop
mov
fsts
adc
mov
add
movsb
add
or
jg
jns
and
minps
sbbl
push
std
pop
shll
cmovo
mov
inc
mov
out
adc
dec
mov
in
call
adc
mov
push
add
mov
xor
fcomp
xchg
mov
fneni(8087
stc
jb
jle
div
xchg
sub
jecxz
outsl
add
into
and
add
fcompl
xor
cvttps2pi
fdivrp
outsb
cli
inc
daa
insb
sub
pop
pmovmskb
add
mov
push
mov
insb
das
aas
pop
add
enter
add
lock
cmp
repz
add
jns
cmpsl
stc
aam
adc
out
push
sbb
sbb
jns
xchg
out
hlt
in
push
sbb
pop
push
cmp
xchg
das
das
sub
test
inc
or
cmp
jnp
js
ljmp
fdivs
int
jecxz
lcall
les
sub
mov
icebp
sahf
icebp
aas
mov
and
mov
test
or
and
or
push
ds
cwtl
jle
xorb
roll
icebp
addr16
push
push
pop
sahf
es
inc
jg
inc
movb
aas
pop
mov
xor
pop
xlat
sti
xchg
mov
xor
fisubrs
scas
cmp
lahf
push
fistl
out
addr16
mulb
add
rorl
add
add
rolb
jb
xchg
es
inc
and
xchg
icebp
dec
push
sbb
sbb
icebp
or
inc
aas
add
and
imul
add
xor
sahf
out
or
ds
mov
iret
in
push
and
idivl
add
push
cld
adc
sahf
loopne
push
hlt
sbb
adc
jns
out
rcrb
enter
out
sahf
pop
mov
jns
out
and
and
push
out
pop
insb
inc
into
test
mov
aam
nop
xor
pop
daa
xor
cld
xorb
inc
cmp
xorl
jg
cmp
jns
out
pop
js
mov
in
repz
repz
xor
add
sub
xor
cmpsb
pop
ja
or
lcall
push
stos
xorb
insb
addr16
add
inc
pop
enter
and
cli
or
or
ret
seto
repnz
adc
in
jl
mov
leave
sbb
into
sbb
sar
decl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
in
incl
inc
stc
mov
adc
mov
decl
js
inc
ljmp
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
jle
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
push
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
lcall
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
jmp
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
pop
sub
jmp
mov
push
pusha
les
jg
lahf
add
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
call
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
incl
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
inc
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
mov
mov
mov
popa
push
pop
sarl
pushl
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
inc
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
pushl
loop
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
sti
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
fisttpl
jg
lahf
into
ror
add
cmpsb
fmuls
incl
pop
stc
stos
sbbb
je
inc
inc
push
lret
nop
dec
jnp
jg
xchg
cmpsl
add
ja
popa
push
out
mov
inc
insl
pop
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
call
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
lcall
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
jmp
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
mov
xor
filds
or
shrl
push
ficoms
call
enter
mov
and
mov
cltd
xchg
mov
mov
or
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
rcrb
mov
mov
movsl
in
lahf
xor
mov
js
stc
decl
lret
xchg
sbb
push
sub
insb
jmp
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
decl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
loope
rorl
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
fistpll
shll
jmp
outsb
xor
mov
sarb
pusha
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
decl
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
call
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
ljmp
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
incl
imul
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
lcall
icebp
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
idiv
decl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
fcomip
shrb
rclb
or
add
mov
das
es
or
sub
mov
add
mov
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
rol
aas
ss
jmp
addr16
jb
push
push
dec
mov
jmp
scas
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
push
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
sar
mov
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
jg
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
stos
dec
push
scas
fcompl
fldenv
filds
pop
lds
aaa
pusha
mov
fidivrs
mov
push
sbb
inc
jmp
mov
xor
call
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
clc
lcall
sub
aaa
mov
or
sbb
add
sub
movsb
push
pop
pop
xor
ljmp
cmp
mov
add
inc
repz
repz
xlat
fcomp
fcmovu
iret
repz
fsubp
jecxz
repz
and
iret
repz
jmp
in
repz
cmc
cmp
repz
idiv
stc
cli
test
repz
cld
daa
adc
add
aas
out
inc
and
or
mov
push
les
inc
inc
push
cmpb
push
dec
bound
cmpsl
movsb
mov
add
bound
inc
mov
sti
int
popa
je
push
cltd
test
aas
and
inc
dec
in
cmpsl
pop
xchg
sub
and
aas
pop
inc
cmp
mov
lcall
xor
aaa
cmp
popa
arpl
cmp
arpl
or
test
xor
xor
xor
sub
inc
jbe
pop
insb
imul
push
insb
gs
add
in
xor
inc
mov
fildl
push
inc
dec
call
lock
sbb
sub
jbe
mov
je
enter
scas
ss
jbe
sbb
dec
int
aas
add
add
sbb
jle
gs
stos
or
mov
adc
push
nop
loop
loop
aaa
addl
push
xchg
test
add
pop
xorl
popa
xchg
cmp
sub
aaa
je
aaa
push
cmpsb
push
fidivrs
inc
push
and
or
add
sbbb
mov
jp
daa
int
mov
inc
aas
inc
jbe
and
pop
inc
inc
push
mov
sbb
inc
pop
idiv
clc
add
inc
inc
inc
add
mov
popa
mov
lret
mov
iret
int
push
dec
cmp
mov
andb
sbb
mov
pop
mov
outsb
jne
push
xchg
pop
insl
inc
popa
mov
push
pop
xor
xor
insl
fwait
cmp
add
int
mov
xchg
into
pop
jo
xchg
adc
pusha
in
dec
inc
cmp
pop
subl
lret
dec
int3
push
adc
outsl
add
lods
dec
pop
mov
mov
lcall
cmp
sbb
pop
movsb
sub
push
xlat
mov
arpl
add
mov
inc
jb
andb
dec
popa
jo
sbb
add
mov
outsl
test
inc
sub
jno
xor
stos
loop
in
jb
pusha
rcrb
in
nop
pusha
lds
inc
push
cmpb
arpl
or
mov
popa
add
out
mov
je
addr16
xchg
shlb
gs
jb
push
jae
inc
stos
xchg
addr16
outsl
arpl
insl
dec
popa
mov
sarl
xlat
inc
push
bound
ja
inc
jbe
cmpsb
outsl
pop
xor
addr16
mov
push
dec
xor
bound
xor
add
inc
add
add
add
insl
adc
or
sub
lods
inc
add
outsl
pop
inc
dec
xchg
mov
dec
outsb
dec
mov
adc
addr16
jo
stos
mov
push
push
sbb
stc
inc
push
inc
dec
pop
bound
inc
je
jmp
arpl
je
testb
pusha
in
insl
or
xchg
sub
push
pop
inc
sub
fistpl
adc
nop
xlat
testl
sub
adc
push
add
sub
jmp
or
add
shrb
jnp
xchg
inc
add
or
jg
addr16
jl
cmc
mov
xchg
push
test
addb
xchg
cmp
lcall
loop
roll
pop
dec
leave
stos
xchg
loopne
xchg
movl
mov
in
in
cwtl
or
je
mov
xor
int3
jge
hlt
sbb
mov
push
xor
add
cli
insb
push
sbb
pop
push
ret
stos
bound
ljmp
cmp
xchg
ds
aam
mov
cmp
dec
pop
stos
in
mov
testb
cwtl
cwtl
icebp
jnp
cmp
movsb
call
insl
andb
sbb
sub
clc
cwtl
cmpsb
icebp
cltd
and
scas
imul
adc
repz
lds
pop
jecxz
mov
pushl
inc
adc
les
dec
or
dec
cmp
shrl
fs
fistl
scas
ud0
ljmp
int
decl
inc
pop
fcom
mov
in
mov
cmp
pop
jl
adc
outsb
sahf
or
mov
xchg
mov
aad
fnstenv
jns
cltd
cmp
das
xchg
sbbl
sbb
dec
mov
into
jge
xor
lret
pop
and
lret
lds
outsl
lcall
aad
rolb
push
movsb
push
sub
add
dec
mov
jg
scas
dec
dec
adc
rclb
jecxz
dec
fisttpl
cmp
ds
mov
mov
loop
lock
scas
cmp
rorb
ja
lods
xchg
mov
cmp
push
in
mulb
hlt
test
fisttps
ret
and
add
xchg
mov
call
fmull
inc
leave
sti
shrb
shlb
xor
adc
xor
iret
jbe
push
pop
push
shl
mov
xchg
daa
inc
imul
xor
rorl
sub
push
popf
cmc
jae
decl
and
leave
xlat
std
jge
test
pusha
divb
mov
bound
mov
sub
out
call
ret
pusha
test
add
and
inc
int3
call
jg
lahf
mov
sti
jbe
out
sbb
push
push
std
xor
jl
leave
mov
pop
sbb
jg
or
jo
loope
and
pop
mov
mov
sbb
leave
out
test
push
js
mov
subl
lods
and
pusha
jae
or
lods
dec
and
enter
cmp
ds
mov
mov
xor
xchg
ljmp
jno
imulb
or
jmp
xchg
jl
outsl
ds
pop
mov
fidivrl
cmp
cli
jmp
mov
jp
subl
pop
leave
sbb
dec
jmp
xchg
nop
sahf
or
ljmp
or
out
fwait
rcr
sarl
jnp
lret
xor
nop
pop
out
mov
fisttps
mov
es
lret
mov
xor
jmp
mov
xor
pop
mov
out
cmp
jecxz
dec
inc
aam
repnz
push
stc
inc
sbb
idiv
jmp
mov
scas
test
ficomps
push
adcl
or
int3
adcb
mov
test
sti
inc
cli
sub
call
scas
rcl
adc
cmp
out
lahf
lea
pusha
stc
pop
ret
ljmp
test
pop
inc
rcrl
fs
xchg
pop
cmp
imul
clc
lcall
sbbb
mov
cmp
negb
shlb
jg
decl
sbb
into
xlat
pusha
mov
xor
ficompl
pusha
fists
ljmp
or
jne
ret
mov
mov
lea
aam
nop
cltd
xchg
xchg
jnp
sti
test
jp
into
out
popa
movsb
push
test
fdivrl
ss
xchg
mov
mov
lods
ss
push
and
jg
aaa
outsl
popa
shlb
sub
lcall
jne
xchg
push
and
pop
in
test
gs
mov
sub
scas
push
mov
gs
mov
cmp
bound
std
jb
mov
sbb
sbb
push
mov
cld
pop
jne
ljmp
ret
or
pop
fmuls
pop
mov
dec
ja
out
out
lds
push
sbb
in
pop
sbb
and
ret
js
mov
mov
adc
push
jns
ret
bound
fstpt
mov
fadd
loop
mov
inc
and
scas
inc
push
cld
sbb
sbb
and
inc
lock
int
xchg
mov
mov
daa
jne
fs
pop
inc
sbb
or
jne
mov
in
pop
xchg
stos
push
adc
pushl
mov
xchg
rolb
jle
scas
mov
loop
ret
push
jne
decb
dec
pop
adc
loopne
sub
daa
fcomps
fcomip
call
xor
test
std
xchg
outsb
arpl
mov
mov
fnstcw
ljmp
imul
js
adc
mov
cltd
jne
stos
sti
lods
ret
insb
lea
cmp
aas
jb
arpl
jle
or
fstpt
scas
loopne
adc
call
push
xor
jecxz,pt
mov
and
dec
mov
iret
jecxz
cli
pushl
imul
clc
jne
cltd
int
arpl
jae
dec
out
nop
add
dec
adcb
popf
fbstp
add
lahf
mov
or
push
jns
call
lcall
lock
sbb
pop
mov
add
push
sahf
xchg
xchg
inc
std
or
inc
sbb
arpl
push
xchg
cld
fisttps
jns
jnp
repnz
jge
cmp
push
jge
mov
pushl
dec
jp
pop
das
adc
and
clc
pop
mov
sub
stc
and
pop
xor
roll
cmp
daa
dec
shr
cwtl
mov
subb
push
sub
into
cmp
cmpsb
movsl
sbb
inc
aad
iret
and
fnstenv
in
add
ljmp
inc
mov
out
movsl
jbe
sbb
mov
sti
xchg
or
inc
add
adcl
ljmp
adc
cmp
test
or
cli
inc
jge
pushf
and
aaa
add
push
sbb
jmp
mov
iret
pop
jo
in
into
sbb
inc
js
mov
ljmp
dec
inc
ds
lret
outsl
inc
testl
mov
fs
lahf
xor
ljmp
shlb
pop
push
pop
popf
mov
aas
shlb
sbb
inc
sub
faddl
pop
and
vmovhps
enter
xchg
call
inc
pause
lret
push
out
sbbl
mov
or
call
aaa
jne
mov
mov
dec
cs
sub
mov
adc
lods
xchg
pop
loop
pushl
cmp
inc
sbb
mov
push
add
inc
out
or
ljmp
rcrl
sbb
lret
fistpl
imul
jns
xchg
fldcw
fsubs
jae
fwait
mov
idiv
mov
adc
divb
stos
call
int3
fiadds
movsb
sub
jp
dec
mov
push
das
sub
sbb
or
ljmp
bound
int3
mov
add
jnp
dec
pop
out
ret
gs
add
and
mov
pop
xchg
cli
stos
pop
sub
push
jmp
loope
cmp
push
fs
inc
movsb
mov
fstp
pop
and
xchg
rclb
mov
lahf
dec
ror
ljmp
dec
xchg
fmulp
pop
stc
enter
hlt
dec
inc
sbb
ja
sar
jle
add
addl
and
fisttpl
dec
lret
dec
ljmp
jg
or
lods
sbb
xor
mov
jnp
xor
jmp
iret
movsl
sub
dec
je
cmp
push
jle
jmp
adc
push
pop
fs
and
stos
mov
jmp
cmp
ljmp
lea
nop
in
jle
testb
lds
mov
leave
adc
ds
mov
decl
stos
aaa
out
sub
xchg
rol
sub
imull
stos
mov
mov
push
xchg
iret
aas
push
fwait
jne
aaa
push
lods
push
sti
fildll
mov
ljmp
std
aaa
stc
jno
jle
xlat
mov
xor
inc
outsl
mov
push
inc
xchg
sbb
repz
incl
in
add
or
sbb
repnz
mov
mov
inc
out
shll
add
mov
or
test
sar
cmp
push
jb
gs
jecxz
sahf
inc
cmp
out
icebp
adc
inc
fucom
repz
ds
mov
cmc
lret
add
icebp
jb
andb
lcall
mov
lock
jp
dec
cltd
dec
scas
lcall
cmp
xchg
xchg
fidivrl
fs
test
push
decl
mov
cmp
push
push
add
insl
icebp
push
sbb
sti
inc
pusha
add
push
leave
cwtl
mov
xor
mov
pop
push
pusha
das
push
lock
out
pusha
push
jo
cmp
rorl
mov
orb
or
in
and
and
cld
xchg
gs
and
dec
lret
data16
call
pop
mov
ret
jne
and
mov
push
dec
cmp
incl
hlt
cmp
pop
sbb
pop
mov
call
out
and
icebp
mov
sub
mov
cmp
outsl
jno
ljmp
push
int3
cmp
jae
je
cmp
mov
repnz
sbb
jnp
or
inc
lret
cli
sub
dec
sub
xchg
xchg
cmpsl
mov
mov
fwait
gs
push
shll
testb
jecxz
mull
pop
cli
fiaddl
lret
std
push
clc
push
jmp
jo
ja
add
fwait
arpl
enter
out
shlb
stos
loope
dec
pushf
sahf
aas
jge
mul
xchg
adc
fdivrs
xor
xor
out
aaa
jmp
and
fcompl
outsl
add
nop
arpl
push
andl
inc
sbb
mov
decl
mov
mov
test
outsl
loopne
cmp
out
call
fstp
pop
subb
xchg
and
cmp
orl
mov
and
aad
leave
inc
hlt
int
sbb
jne
stos
lcall
fisubrs
mov
and
cmp
ret
daa
in
push
test
push
xlat
push
aad
mov
mov
lods
popa
insl
jne
std
jmp
and
push
fsubl
insb
arpl
xor
ss
or
jp
mov
pop
neg
test
stos
add
inc
jo
push
cwtl
cmp
ljmp
pop
nop
test
int
push
cmpsb
in
xor
jg
or
fmuls
scas
insb
dec
ljmp
sbb
mov
cmp
stos
icebp
ljmp
mov
jl
imul
mov
inc
cmp
pushl
jmp
push
sarb
jecxz
add
shl
push
andb
hlt
aas
pop
lods
outsl
jnp
mov
mov
int
fsubrs
loope
xchg
sub
or
xchg
dec
push
pop
sar
and
std
icebp
xor
and
pop
sub
ret
cli
sub
pushl
dec
popf
add
mov
cmp
mov
bound
sbb
jmp
js
hlt
sahf
out
icebp
push
fimull
in
dec
xchg
inc
inc
jle
inc
adc
cmp
adc
incl
fs
jge
cmp
cmp
fldenv
ljmp
testb
mov
clc
mov
outsb
stos
mov
in
aad
xchg
dec
mov
cmp
ljmp
jl
in
pop
inc
dec
rcl
fst
and
inc
stc
mov
nop
iret
mov
dec
adc
push
mov
movsl
bound
xor
cmp
inc
popf
cmc
mov
sbb
push
cs
hlt
decl
sar
and
mov
mov
call
in
and
jg
jle
dec
mov
scas
fmuls
and
lcall
imul
adc
push
cld
fcmove
nop
sub
jb
lret
inc
jo
pop
in
and
or
or
mov
mov
cld
fsubr
sub
push
pop
ljmp
jg
test
popa
sbb
pop
int3
ljmp
popf
xchg
sbb
mov
test
lcall
and
fs
aad
fbld
pop
push
jl
call
jno
fidivrl
mov
movsl
and
decl
sbb
xchg
test
xchg
jo
and
stc
add
hlt
out
jnp,pt
sub
jmp
fisubs
iret
inc
subb
dec
call
call
push
negb
jo
mov
shrb
testb
pop
fisttps
ds
mov
inc
lcall
rorl
push
std
dec
push
jmp
xor
cmp
push
cmpsb
pop
cmp
xor
cmp
inc
aaa
filds
jo
jmp
fwait
mov
cwtl
pop
out
lret
les
out
mov
cmp
das
rcr
daa
out
cmc
pop
push
push
and
cli
mov
mov
sbb
sub
lea
incl
mov
cmc
out
push
dec
sub
rorb
adc
lcall
adc
jge
call
jne
mov
hlt
lahf
push
xchg
push
lock
cltd
cmp
push
orl
cwtl
cmpl
mov
test
icebp
pop
fldcw
jle
mov
prefetchnta
int
sub
movnti
push
pop
xchg
push
popf
mov
sbb
jmp
push
inc
test
or
std
fists
loop
mov
les
push
insl
sbb
into
add
and
sti
mov
ds
ficoml
test
int3
test
ljmp
cmp
mov
or
mov
xchg
add
push
push
and
in
pop
cmc
jmp
dec
jo
xor
mov
cmpb
pop
mov
push
fcomip
das
clc
jns
dec
scas
push
popf
stos
std
hlt
jmp
mov
call
loopne
dec
inc
sub
gs
ss
xchg
in
aaa
add
cmpb
jmp
pop
sbb
push
cmp
cs
inc
cmp
dec
nop
xchg
sbb
sbb
mov
dec
xchg
inc
inc
adc
jmp
test
rorb
jbe
mov
imul
test
push
push
fcmovnu
fdivrs
aaa
test
je
pop
fs
mov
mov
stc
adc
fists
inc
mov
adc
and
cmp
mov
mov
fst
sbb
cmpsl
xchg
cli
push
sub
sub
pushl
pop
sti
pop
adc
jg
aad
cmp
decl
or
mov
jecxz
fsubp
testb
das
ljmp
push
push
xorb
stc
loopne
mov
adc
sahf
shrb
sub
mov
jecxz
xlat
ljmp
mov
js
adc
mov
xchg
add
jmp
loope
mov
roll
or
sti
jge
ljmp
jae
lahf
or
xchg
xor
fbld
xlat
and
and
jg
mov
out
jge
jae
xor
pop
in
incl
popf
and
inc
inc
daa
push
jns
inc
fs
je
add
lcall
into
clc
imul
lock
mov
mov
mov
call
cld
or
movbe
and
rolb
xchg
push
xor
pushl
shrl
test
shl
mov
pushfw
test
push
or
mov
xchg
popf
sub
call
popf
fnstcw
sub
shrb
roll
add
mov
pop
pushf
rcrb
bound
cltd
jle
mov
xchg
add
fwait
xor
sub
cmp
inc
mov
lods
mov
test
lock
sar
lcall
jmp
and
insl
out
sahf
push
add
inc
cmp
lahf
push
and
call
push
jo
movb
xor
movsl
aam
rolb
lcall
sarb
es
add
and
dec
sub
mov
cld
cmp
in
popf
gs
cmpsb
enter
call
push
pop
mov
jns
cs
add
test
or
stos
mov
sbb
mov
inc
jl
clc
popf
out
mov
fsubl
xchg
scas
cmp
mov
push
int
push
jmp
aam
jae
xacquire
and
out
jle
shll
pop
sbb
xchg
jg
jmp
lret
enter
push
scas
fdivrs
notl
inc
and
xor
incl
add
pop
lods
in
push
clc
lret
mov
aam
pop
imul
push
in
or
jp
xchg
repnz
pusha
cmc
jmp
test
lahf
outsb
jle
push
pop
scas
lret
mov
mov
cmpl
sub
cs
dec
aas
out
int
adc
adc
push
dec
jecxz
cmc
decl
ljmp
jle,pt
sbb
and
jae
ja
mov
in
in
scas
pop
sub
jne
xor
cwtl
jg
xor
cld
aas
out
mov
or
rclb
in
cmp
mov
jnp
in
or
push
add
lods
fstpl
dec
xchg
pop
jge
or
jne
daa
mov
push
xchg
sbb
ja
pop
cmc
pop
push
jg
ljmp
dec
push
push
sahf
xchg
ret
jnp
dec
adc
iret
add
inc
jp
outsl
xchg
pop
cmc
mov
sub
shlb
add
mov
rcll
das
or
mov
inc
mov
push
insb
lds
incb
mov
decl
dec
mov
xlat
mov
mov
pushl
mov
mov
movsl
int3
imul
andb
mov
mov
mov
je
js
jl
lods
mov
jge
loope
cmc
lcall
xchg
lds
mov
cld
mov
xor
and
cld
mov
adc
ffreep
xor
dec
std
or
xlat
and
add
shrb
jle
sub
xor
jp
sbb
adc
sub
lret
shll
inc
and
sub
cmp
jg
inc
into
add
dec
push
mov
stos
push
call
xchg
mov
insb
dec
pop
cwtl
fcomi
xor
or
inc
loope
jmp
pop
repnz
jbe
pop
pop
loope
xchg
leave
test
fwait
mov
pop
and
xlat
out
jl
cld
fdivp
mov
pop
pop
andb
cmp
pop
sbb
scas
call
cmpb
mov
daa
out
cmp
iret
ds
jne
sbb
sarb
mov
add
in
sbb
mov
jne
sbb
mov
lea
cmp
xor
add
adc
push
adc
popf
sub
mov
mov
jmp
scas
dec
mov
push
mov
dec
mov
pop
scas
mov
int3
test
mov
idiv
decl
inc
sbb
cmpb
xchg
cli
sub
dec
and
adc
sbb
mov
pushl
xchg
adc
pop
mov
sub
inc
sbbb
push
push
xor
and
lock
or
xor
bnd
int3
fdivr
jg
push
mov
mov
fs
sbb
dec
fdivrp
jl
cwtl
mov
rclb
xlat
dec
scas
push
pop
and
mov
add
mov
mov
mov
shrb
pop
test
fstps
gs
mov
loop
lcall
out
xor
mov
xor
pop
loop
pop
icebp
mov
or
out
adc
mov
dec
bound
fcoms
test
pop
push
push
xchg
aas
xchg
rsqrtps
js
fdivl
inc
inc
leave
cmp
shrl
inc
add
jmp
mov
lahf
add
loop
popa
sbb
sbb
xchg
je
jbe
icebp
decl
mov
movsl
jae
fmull
sub
adc
jbe
xchg
shlb
popf
fmul
fdivrl
addr16
and
call
sub
das
xchg
xor
ret
in
mov
iret
stos
loopne
mov
je
mov
fnstsw
pushl
imul
xor
lock
fiaddl
addr16
xor
inc
pop
fnsave
sti
hlt
loope
inc
cmpsb
mov
sbb
add
lcall
cmp
xchg
mov
push
lret
push
adc
jo
and
or
jmp
sahf
inc
shlb
cs
lcall
pushl
xor
loopne
outsl
xor
xchg
mov
push
inc
call
lods
jno
in
lahf
in
jno
test
fisttps
lahf
aaa
xchg
adc
fs
jecxz
cmp
test
push
outsl
mov
scas
xor
mov
cltd
in
push
movsl
or
je
mov
sbb
pushl
cld
sub
and
fcom
mov
pushw
cwtl
inc
or
pop
or
aas
roll
push
lahf
movq
in
addb
mov
dec
pop
pusha
xor
or
out
cs
nop
es
scas
and
daa
jbe
sbb
sbb
addr16
jle
push
sub
lcall
int3
sarb
roll
jb
movsb
lcall
hlt
int
je
bound
sub
aas
mov
cs
js
mov
jns
cmp
jmp
hlt
pop
push
jb
mov
stc
inc
mov
or
fildll
or
mov
add
mov
and
cmp
decb
jecxz
scas
enter
das
stos
mov
jle
test
iret
pushl
adcb
gs
aam
jo
shll
stos
movsb
cmp
push
hlt
sbb
lcall
push
inc
cmp
push
xorb
pop
je
imul
lods
mov
push
inc
gs
loop
and
js
mov
dec
adc
fcoms
popf
pusha
cltd
and
dec
xor
sbb
decl
add
lds
pop
and
dec
loopne
add
es
inc
adc
mov
popf
cltd
decl
lock
dec
adc
or
into
inc
mov
imull
push
push
lret
lcall
cmc
jbe
cs
mov
jmp
popa
inc
decl
lods
dec
aam
mov
imul
push
fs
mov
ss
aam
adc
mov
lods
cli
push
icebp
scas
decb
test
sbb
call
lea
sbb
arpl
pop
and
cmp
ss
sub
mov
cmpsl
add
jnp
push
decl
insb
adc
or
out
js
jae
mull
aam
mov
mov
clc
jg
cmpsb
bound
out
jb
sub
sub
dec
lahf
pop
push
ljmp
sbb
mov
jp
cmc
imul
stc
mov
jl
lea
cmp
adcl
mov
xor
clc
and
push
loopne
mov
push
repz
daa
add
lcall
mov
jbe
jge
lret
addb
jnp
lods
pop
push
xchg
pop
pushf
sbb
mov
inc
filds
cld
bswap
jmp
xchg
pushl
cld
leave
jo
mov
mov
dec
out
mov
mov
jmp
jnp
call
mov
adc
xor
pushf
leave
fsubr
push
dec
mov
sbb
mov
jns
mov
and
inc
mov
jmp
idivb
lods
gs
add
sar
jmp
jno
or
push
dec
xchg
fisubl
or
and
and
outsl
addb
lcall
ss
and
sub
stos
jecxz
mov
in
mov
lahf
lahf
push
pop
add
push
xchg
scas
mov
sbb
mov
incl
or
test
or
or
dec
cmpsb
ret
mov
mov
pop
push
pushl
lock
cmp
mov
or
and
aas
mov
cltd
orb
pushl
and
in
dec
mov
sbb
xchg
cmpsb
decl
fwait
add
lahf
mov
xchg
cld
out
pop
testl
sub
jecxz
mov
and
jno
xchg
mov
push
test
mov
pshufw
mov
xchg
test
cmp
lods
add
inc
jmp
sub
sbb
test
stos
cmp
fisubs
pushf
xor
subb
lcall
and
idivl
orb
or
mov
cltd
mov
pushl
add
dec
stos
or
stos
mov
outsb
sbb
lret
xor
cmp
pcmpeqb
pop
and
mov
push
inc
popa
cmp
insb
sbb
sbb
icebp
imul
mov
and
out
adc
lea
jae
call
push
xchg
dec
xor
jmp
jns
cmpsl
dec
mov
cmpsb
jbe
push
leave
push
sbb
cs
cwtl
testl
iret
into
sbb
cli
jmp
imul
push
mov
insb
jp
aas
mov
add
dec
pop
add
lcall
mov
jp
mov
push
mov
pcmpgtb
jecxz,pt
fsubl
jg
mov
cmp
push
lret
push
daa
cmp
pop
inc
add
cld
sahf
xchg
xor
fcomip
mov
adc
xor
adc
sahf
lretw
lods
js
xchg
or
pushl
sub
test
or
das
mov
jnp
int
xor
jl
inc
and
stc
in
ret
xchg
rcrb
jbe
sub
adc
mov
addl
push
leave
xlat
out
inc
lcall
lcall
iret
and
mov
repnz
jl
cmpsl
inc
mov
mov
cmp
pusha
lods
clc
inc
or
adc
pop
inc
pop
adc
rcll
pop
sahf
mov
jmp
subb
repz
test
push
xchg
mov
in
call
sbb
out
cli
and
mov
add
loopne
fwait
or
arpl
pop
sbb
mov
push
enter
outsb
gs
sbb
and
sbb
jno
dec
insl
pushf
add
adc
out
xor
fs
lods
sub
push
push
or
add
lcall
dec
mov
inc
test
dec
dec
sti
and
lods
xchg
push
push
mov
out
xchg
pop
add
aad
xlat
dec
ret
xchg
dec
iret
or
int3
mov
fwait
cs
pop
and
out
jl
jmp
shll
sbb
out
xchg
push
out
ret
push
adc
leave
push
into
incl
daa
enter
jmp
es
es
mov
pusha
cmp
xor
out
leave
jb
cmp
out
push
dec
test
inc
push
mov
xor
mov
lods
or
scas
repnz
jmp
jnp
and
icebp
cmp
cmp
rcr
push
sbb
icebp
leave
xlat
pop
popf
lods
mov
pop
mov
jmp
fisttpll
fcompl
ret
popf
shr
mov
stos
sbb
loopne
loop
cld
lock
out
cli
jp
or
xchg
ret
cltd
shll
out
or
shlb
mov
loopne
leave
cli
loopne
cmp
mov
push
int3
clc
add
popa
loope
pop
or
jg
call
ss
std
push
fisubl
nop
loop
popf
pop
xlat
cmpsl
ljmp
stos
inc
stc
mov
sub
mov
xchg
mov
push
in
test
pushl
ret
lods
imul
stos
cwtl
add
jmp
and
sub
push
iret
outsb
mov
jmp
push
fld
add
fadds
dec
js
in
fisubl
aad
xchg
lcall
int
xchg
xlat
push
dec
loop
ljmp
xlat
lds
outsb
xchg
add
rclb
cli
jg
scas
or
and
dec
and
es
loope
jp
decl
loop
jl
insb
aaa
mov
xor
outsb
and
pushl
pusha
ljmp
cltd
ljmp
xchg
xor
cmpsb
loope
mov
or
cmp
dec
cmp
and
shrb
push
xchg
xchg
in
dec
dec
dec
cli
cld
test
call
les
in
pusha
inc
mov
dec
xor
push
xor
rcrl
lcall
and
sub
fsubrl
xchg
sub
ljmp
or
dec
popa
pop
xor
mov
add
pop
aad
pushl
outsb
mov
aad
jne
sub
cmpsb
cmp
cwtl
std
imul
push
or
jg
jb
fdivl
orl
and
sub
filds
push
ret
fldz
clc
lods
and
jge
in
push
pushl
or
mov
mov
xor
mov
lcall
test
in
push
mov
aaa
mov
mov
scas
pop
pop
std
sti
scas
mov
les
cli
push
inc
sbb
bound
jmp
lret
push
cmp
popf
je
mov
shll
scas
cmpsb
mov
cmp
pushl
ret
mov
idivl
xor
or
cmpsl
adc
test
push
dec
dec
fs
adc
ljmp
test
cmp
mov
mov
loope
stos
test
pop
shl
and
sbb
decl
pop
in
ds
adc
inc
sub
xchg
js
insb
mov
xchg
mov
cld
lcall
pop
icebp
mov
adc
adc
jo
push
xor
fs
cli
jne
push
mov
push
ja
cmp
cmpsb
inc
lods
bound
mov
test
pop
movsl
clc
call
lret
sbb
push
insb
or
jmp
les
adc
lret
mov
arpl
push
imul
fsts
sbb
lods
pop
inc
pop
es
call
js
inc
std
popf
addr16
jl
dec
mov
inc
in
mov
xor
jnp
ss
out
mov
sub
push
push
jge
xchg
sub
insl
add
or
fstl
xchg
fwait
decl
inc
xor
mov
fldenv
push
push
int3
sarl
in
pminsw
push
out
push
popa
push
jge
jo
cmp
cmpsl
bound
rolb
xchg
sarb
loope
mov
push
in
lds
lea
jmp
test
sbb
xchg
adc
xchg
sbb
in
testl
incl
movsb
mov
movsb
cli
jns
insw
sbb
pop
push
jl
pop
aaa
xchg
lcall
sbb
adc
sub
jnp
shr
ss
fstpt
in
or
ret
mov
incl
cld
nop
mov
xor
cwtl
jecxz
ffreep
out
cld
test
enter
decl
or
loopne
cltd
inc
out
cmp
out
addr16
in
lahf
pushl
sub
hlt
jmp
pop
push
pushf
pop
sub
inc
clc
pop
sub
fdivp
std
cmp
lahf
xor
aam
and
push
xlat
or
lahf
addr16
shlb
xchg
sar
mov
pop
cltd
int
fcmovu
xchg
push
mov
addr16
or
push
push
mov
cld
in
std
ljmp
mov
aad
cmp
repz
mov
push
xchg
outsb
das
xorl
cld
pop
sbb
jnp
jo
mov
icebp
sar
lcall
push
std
mov
xchg
push
jmp
lea
scas
sub
lds
or
cwtl
mov
cld
mov
lock
lea
sub
push
push
or
push
dec
xchg
mov
jg
xchg
stos
daa
pop
ljmp
fldl
cmc
scas
add
ret
and
xchg
jb
decl
inc
and
cwtl
data16
jae
test
mov
hlt
inc
ljmp
push
imul
loopne
cmpsb
test
mov
sub
je
jnp
decl
lock
push
ljmp
inc
ds
push
lock
inc
mov
mov
test
dec
add
sbb
sub
pop
and
sub
ret
icebp
out
ljmp
inc
sbb
sub
or
popa
jb
mov
or
or
mov
push
pop
and
xor
mov
ljmp
clc
hlt
test
sbb
mov
jno
push
cmp
lock
sub
jg
xchg
outsb
call
mov
mov
into
shl
aam
sub
mov
dec
jmp
test
std
ljmp
sbb
push
mov
mov
ds
xor
lret
fwait
add
repz
movsl
jg
dec
mov
push
scas
push
pop
aas
xchg
inc
into
jg
push
cld
cmp
mov
arpl
cmpl
ficoml
ljmp
mov
scas
dec
mov
mov
mov
add
incl
ds
roll
or
fldl
and
call
jne
in
addr16
rcr
push
adc
sbb
cmp
stos
pcmpgtd
stc
out
clc
mov
fcoml
sbb
mov
pusha
lahf
cmp
and
add
mov
mov
add
clc
gs
add
jmp
pop
fistpll
stos
repnz
aas
mov
mov
lock
jmp
out
mov
mov
xor
aaa
ret
fcompl
pop
iret
imul
adc
jl,pt
scas
jle
mov
fs
lods
decl
clc
push
pop
xlat
pop
adc
sub
sub
aaa
fmuls
scas
incl
sub
add
mov
les
push
pop
lcall
sti
dec
sub
mov
loope
stos
stos
push
call
jbe
push
icebp
stos
adc
loopne
and
jno
ss
ret
push
imul
xchg
hlt
push
add
insb
pop
dec
xlat
les
xor
cmp
scas
mov
test
cli
xchg
les
xchg
fistpll
xor
jns
dec
mov
jno
iret
push
call
les
lcall
jp
jmp
lcall
insl
push
gs
adc
cmpsl
mov
add
repnz
out
or
push
and
and
loopne,pt
mov
jmp
sub
inc
aad
adc
cmp
sub
jne
nop
gs
sbb
mul
xlat
xor
mov
icebp
jl
jl
in
inc
std
inc
out
decl
sbb
cmpsl
dec
inc
dec
pop
sbb
push
movsl
outsb
test
lods
lods
xor
decl
push
arpl
xor
cs
hlt
push
add
ret
cwtl
wbinvd
and
std
pushl
or
cmp
subl
sbb
pop
in
shlb
loope
jg
mov
mov
andl
or
nop
stos
jmp
in
cmpsl
rclb
das
sar
cltd
pop
lret
dec
out
js
push
add
mov
cmc
push
dec
les
daa
inc
pop
testb
jo
fldl
or
add
xor
cmpsl
dec
lods
jmp
in
movsl
sbb
ficomps
test
out
movsl
scas
lock
mov
pop
cltd
and
jecxz
pushl
scas
scas
jb
mov
bound
inc
pusha
jl
add
xor
add
int
xchg
cmpsb
decl
fdivr
dec
lret
jge
imul
jbe
cld
pusha
iret
lret
lret
iret
pop
mov
decl
jo
sti
sub
lock
push
sbb
leave
push
push
mov
push
xor
fcomip
fsubrs
adc
adc
or
cwtl
jp
mov
icebp
jle
leave
daa
bound
out
pop
movsb
push
pop
pop
sbbl
inc
fs
dec
loop
jbe
sub
shrb
mov
test
lcall
cli
pushl
lds
push
jmp
xchg
ja
pop
add
mov
cmp
pop
xchg
int3
inc
pop
insb
pop
jbe
push
fsubrs
inc
fisttpl
int3
scas
sub
push
inc
push
test
jnp
popf
je
mov
inc
cld
jmp
jmp
xchg
lds
sarb
pop
cmpsl
js
xor
cmp
adcl
fs
addr16
in
sbb
pop
push
js
bound
aad
pop
xchg
sub
call
lods
loopne
addr16
and
xor
xchg
pop
aam
cmp
cld
xchg
xlat
mov
cmc
aas
ss
incl
mov
imul
in
xchg
out
rorl
and
lcall
jg
mov
hlt
inc
mov
fmul
adc
lcall
das
std
jo
pop
dec
push
dec
push
adc
nop
clc
das
sar
ljmp
mov
mov
add
test
pushl
out
pop
movsl
mov
mov
sbb
pop
pop
repnz
mov
add
lcall
out
subb
adc
mov
inc
adc
sarl
lahf
sbb
xchg
out
loopne
jnp
xor
dec
mov
mov
fidivrs
push
jge
call
cs
lods
or
sbb
mov
incl
and
xchg
sub
loop
test
sarb
std
lcall
or
sti
leave
mov
sub
inc
xor
call
lcall
in
mov
xor
xchg
mov
cmpsb
push
push
shl
xor
jo
lcall
push
call
xor
pop
int3
add
lods
mov
jp
adc
sbbb
in
into
xchg
adc
dec
out
stos
cmp
sub
cmp
pusha
lret
rcrl
pop
iret
dec
ljmp
das
lea
ljmp
pop
inc
jl
subl
push
lods
jnp
sbb
mov
add
ljmp
and
push
cs
jp
lods
xor
fs
pushf
cld
xchg
xor
adc
inc
out
mov
das
sti
ret
cmp
incl
inc
xchg
adc
mov
dec
ljmp
and
adcl
loopne
test
sbb
inc
adcb
pop
mov
imul
or
sub
js
pushl
idiv
jo
pop
mov
shr
jg
or
test
push
add
incb
fists
stos
rcrl
aas
outsb
pop
pop
inc
mov
ret
jge
inc
mov
cmp
or
dec
fs
call
xorb
sbb
sbb
mov
ret
xchg
lcall
add
jge
adc
jge
cmp
fsubr
insb
loope
xor
mov
std
sbb
xchg
loope
inc
fwait
popa
pop
fs
push
dec
stc
mov
lcall
pushl
xor
out
push
cmp
repz
in
loopne
jmp
outsb
mov
ja
movsl
push
push
xchg
add
push
add
mov
incl
sbb
push
jbe
fstpl
nop
stc
bound
cmp
les
aaa
das
push
in
cs
lcall
xchg
faddl
mov
or
test
inc
out
je
je
in
test
jmp
xchg
add
or
movb
mov
in
aas
push
mov
incl
pop
pop
rolb
mov
sub
imul
pop
and
add
or
fldl
and
jge
jp
jae
rorl
fisttpl
int
nop
jg
or
jg
sahf
push
cltd
shll
nop
ljmp
pop
inc
mov
scas
mov
cwtl
sbb
test
sbb
push
enter
mov
lcall
dec
mov
push
in
fwait
xor
jp
adc
mov
out
mov
ljmp
cld
cs
sub
sbb
hlt
mov
and
pop
sub
cmp
mov
adc
adc
mov
cmp
ret
popf
mov
mov
pop
loop
scas
imul
repz
int3
arpl
xchg
cmp
push
and
cmp
xchg
ljmp
xor
cmp
xchg
dec
jge
decl
in
mul
out
fld1
mov
xchg
in
mov
mov
dec
push
xchg
aam
decl
mov
insl
xchg
ret
pusha
add
inc
push
xchg
aas
xchg
or
dec
mov
jmp
sbb
jmp
cld
push
mov
outsl
pop
inc
mov
inc
xchg
fs
out
jp
dec
jge
iret
sub
ljmp
xchg
out
lret
mov
dec
inc
into
repz
dec
push
sbb
icebp
lcall
insl
or
sbb
xor
inc
ret
sarb
test
cmp
aas
pop
ss
insb
fists
dec
mov
push
or
or
jmp
jmpw
lea
incl
mov
mov
hlt
or
es
in
lea
push
push
call
or
add
add
xor
fdiv
xchg
mov
push
jae
pop
push
dec
pop
pop
sbb
outsl
xchg
in
inc
shlb
mov
push
repnz
or
incl
fs
adc
push
std
repnz
icebp
out
leave
sbbb
mov
pushl
movsl
in
in
pop
or
movsb
push
aam
stc
xchg
mov
mov
ficoms
in
out
adc
hlt
lret
xor
loope
out
mov
fwait
ret
sbb
jb
ljmp
xchg
mov
and
fwait
imul
sarl
cmp
sub
shlb
insl
jmp
xor
sbb
jmp
jg
cs
dec
inc
push
inc
inc
mov
popf
sub
mov
pushl
xor
push
enter
add
push
lret
leave
into
sub
ja
cmp
xchg
in
mov
pusha
mov
and
push
pop
mov
repz
arpl
sti
jb
push
out
addl
call
cmp
inc
rcrb
je
and
mov
in
jg
dec
cmp
insb
xlat
out
clc
call
and
pushf
sbb
sub
and
sbb
fiaddl
cmp
pop
sbb
ljmp
lcall
popf
in
repz
lret
pop
insl
pop
jmp
pop
movl
jmp
into
ljmp
jg
ret
mov
mov
xchg
sbb
cwtl
cmp
iret
pop
test
out
cld
stos
addr16
inc
mov
dec
js
add
cmp
lret
incl
mov
inc
or
adc
mov
insl
jge
cmpsb
jb
into
rcll
push
adc
xor
movsb
inc
pop
xor
or
add
pop
mov
cs
in
mov
enter
aaa
into
add
movsl
cmp
daa
aad
xor
lcall
lcall
push
adc
pop
test
sbb
jns
insl
mov
dec
arpl
xchg
jne
pop
out
sar
mov
push
lahf
add
dec
and
xlat
das
orl
sti
xlat
filds
jmp
int3
mov
test
xchg
movsl
push
add
adc
push
jle
sbb
inc
int3
sub
cmp
dec
out
out
cmpsl
insl
jp
and
add
nop
movsl
or
inc
lds
and
filds
out
and
sub
xchg
dec
call
add
mov
mov
aas
sbb
outsb
fdivs
mov
mov
jp
mov
out
xchg
mov
xor
cwtl
jmp
xchg
call
dec
in
and
push
out
and
pop
adc
std
shlb
std
das
sub
inc
cwtl
fistl
int
inc
mov
shll
xor
lods
xor
pusha
pop
out
rclb
call
sub
ficompl
into
out
in
hlt
xchg
cmp
sbb
cmp
sub
dec
decl
sbb
popf
popa
les
clc
jae
std
add
rorl
adc
xor
jg
push
lea
cwtl
mov
mov
sub
sub
ds
popf
xlat
outsl
jne
ret
decl
push
loopne
popf
pop
ljmp
mov
into
lock
sahf
mov
sbb
decl
sbb
mov
mov
stos
fisubrl
insb
and
sahf
fcomip
in
popf
rolb
xchg
outsl
das
or
and
mov
xor
xchg
adc
jmp
xor
jg
movsl
cltd
mov
jnp
aad
fsubp
lods
mov
add
sub
loop
fs
repnz
sub
daa
add
mov
lret
sbb
cli
or
cwtl
scas
mov
push
mov
fidivl
mov
cmp
ljmp
sarl
sti
xchg
shll
inc
cwtl
das
or
dec
test
loop
xor
dec
subb
xchg
and
mov
scas
mov
xchg
in
push
loopne
lods
cltd
cli
cmp
inc
push
ret
push
xchg
dec
xchg
in
mov
sahf
icebp
std
pop
decl
aam
or
pop
js
pop
dec
jbe
adc
call
std
add
jp
in
xchg
push
inc
cmc
movsl
test
pop
jae
push
leave
test
jge
call
jb
mov
push
mov
jge
out
xor
out
cli
incl
ja
out
cmpsb
add
mov
enter
or
mov
sub
fmull
sbb
decl
xor
cmp
lock
hlt
add
add
das
add
mov
ljmp
pop
subb
add
mov
pcmpeqd
ret
dec
repnz
dec
cli
pop
or
and
mov
xor
lods
repz
shrb
std
inc
outsl
pushl
test
enter
pop
faddl
xlat
aam
mov
push
xchg
mov
divb
inc
mov
add
dec
into
mov
inc
mov
adc
dec
js
pop
imulb
sbb
in
aad
xchg
imul
into
loopne
adc
adcb
lcall
pushf
cmp
sbb
std
ljmp
adc
pop
cltd
hlt
add
inc
lods
push
lret
dec
mov
fdivs
jecxz
or
pop
mov
add
out
lods
pop
dec
repnz
movsb
pushf
stos
stc
ja
jae
ljmp
ret
nop
gs
xor
sub
adc
jne
lods
pushf
mov
cmp
incl
popa
jp
fldl
and
mov
ret
or
pop
mov
cmp
imul
stos
mov
cmp
mov
and
std
mov
call
ljmp
cli
popa
aaa
sub
push
cwtl
or
rolb
lcall
ljmp
mov
mov
test
xor
pmuludq
loope
cli
or
fbld
mov
lcall
inc
jle
or
hlt
imul
ret
jne
lods
sub
jg
cmp
ss
xchg
shrb
jno
pop
pop
aaa
notl
test
jge
test
orb
ljmp
mov
add
inc
bound
daa
pop
loope
out
adc
movsl
xchg
dec
fbstp
inc
mov
sub
or
sub
addr16
movsl
lods
mov
popa
sbb
dec
lods
repnz
in
insl
in
pushl
inc
mov
sub
addr16
and
cmp
xor
and
inc
cmp
imul
pushl
adc
sarl
ds
xchg
in
pop
insl
cmp
adc
hlt
mov
loop
cs
adc
scas
clc
lcall
xchg
in
mov
cmp
mov
cwtl
fcomip
jmp
jmp
orl
cmpsl
cmpsl
lret
add
add
repnz
popa
adc
js
push
cmc
scas
stos
cmc
sbb
stos
lods
out
xchg
outsb
cmp
out
daa
pop
and
mov
ljmp
or
mov
jp
pop
data16
jmp
sub
jae
push
jp
sahf
in
or
cld
inc
mov
arpl
xchg
pop
jo
mov
cmpsb
popf
stos
aad
xchg
cmp
mov
xlat
mov
je
inc
pop
mov
or
cmp
cmc
pop
insl
cmp
pop
hlt
cmpsb
mov
push
cmc
stos
add
mov
fsub
stos
out
adc
push
jb
hlt
sub
xchg
inc
sub
in
jb
inc
push
pop
or
call
cld
les
add
pop
jbe
lret
pop
les
add
xor
or
pushl
xor
fs
mov
je
inc
es
push
mov
inc
je
aam
xchg
inc
add
sti
adcb
es
jmp
lea
mov
pushl
pushl
xchg
add
push
inc
pcmpgtd
push
or
out
outsl
clc
lcall
jae
lahf
jge
fiaddl
lret
bound
mov
xchg
aas
cmpsb
stos
cs
jmp
repz
fs
mov
js
movsb
test
sub
stos
cmp
ret
je
mov
push
aaa
jno
jg
decl
out
mov
jbe
push
rorl
push
jmp
test
scas
lret
push
leave
mov
jmp
movsb
movsb
push
jno
ret
push
cld
push
sti
mov
mov
adc
das
ljmp
mov
addb
mov
rorl
je
fsubs
mov
or
jmp
and
or
adc
cmp
mov
das
cli
pushl
sub
jg
ss
sahf
popa
jno
or
outsb
out
sarb
push
call
in
mov
popf
mov
stos
fmuls
sbb
inc
mov
aas
push
xchg
sbb
sbb
pushl
cwtl
sub
into
jo
sub
outsl
xor
jno
addr16
stos
leave
jp
lock
call
pop
int
popa
sbb
jecxz
jge
xor
es
mov
das
and
outsl
decl
sub
fdivl
lods
icebp
mov
call
mov
adc
cmc
fnsetpm(287
outsb
movsl
fmuls
outsb
mov
mov
cmp
cmp
mov
iret
faddp
add
cmp
iret
mov
cmp
dec
push
mov
hlt
out
xchg
pop
loopne
mov
loope
and
shrb
mov
aaa
lahf
sbb
ljmp
pop
enter
daa
sahf
inc
fldenv
leave
mov
jmp
mov
push
ss
out
mov
insb
pop
push
fcoml
dec
dec
inc
push
lods
lods
dec
ljmp
enter
xchg
add
dec
lcall
jb
fcmovnb
sub
xor
add
lahf
mov
popf
addl
adc
ja
arpl
insl
ljmp
or
cmp
mov
mov
or
dec
jmp
adc
nop
movsl
in
fadds
addr16
xor
test
stos
mov
mov
mov
frstor
pop
aas
lcall
pop
xchg
jbe
out
xchg
iret
bound
or
add
and
mov
xlat
ljmp
push
icebp
dec
fldcw
rcl
adc
divl
dec
in
leave
mov
shrb
lahf
test
dec
stos
or
decl
cmpsl
cmpsb
push
pusha
jae
dec
loop
ret
mov
xor
fdivr
mov
jnp
sbb
jns
or
mov
cld
jb
sbb
mov
nop
xchg
push
stos
dec
sub
fneni(8087
cmpb
incl
test
mov
aad
push
xchg
scas
push
fs
pop
pop
into
jmp
shr
jmp
in
shll
push
cld
push
jmp
xor
test
test
test
ljmp
shlb
mov
arpl
push
xchg
add
xor
addr16
push
cld
pushl
push
xorl
mov
mov
jl
js
call
std
sub
mov
xor
cli
sbb
adc
adc
ds
lcall
adc
cmpsl
stos
or
pop
rcrl
sub
fbld
sub
stc
xlat
bound
incl
mov
cmp
adc
shlb
or
mov
ljmp
push
inc
inc
push
aaa
cltd
mov
lock
xchg
movsb
sbb
arpl
sub
cld
mov
sub
outsl
mov
in
shl
fmull
aad
mov
lret
jle
xlat
push
movl
cmp
cmc
ja
push
clc
lcall
push
jb
in
in
mov
stos
add
test
cmpsb
jno
icebp
fcomip
jmp
repnz
pop
stos
push
and
cmp
lods
or
inc
mov
xlat
cmp
lahf
dec
push
push
inc
movsl
inc
inc
sub
lock
jle
jb
xlat
jle
mov
cmpsl
icebp
stc
shll
mov
or
decl
mov
push
call
rcll
fcom
addl
cmc
loopne
lret
ds
ljmp
mov
sahf
dec
cmpb
ret
sub
mov
imul
dec
mov
outsl
mov
xchg
lods
imul
sub
imul
push
jecxz
fldt
sar
jno
loope
subb
fimull
scas
cwtl
xor
imul
mov
cmpsb
adc
jno
repnz
stc
mov
ds
rol
icebp
test
jg
push
rcl
xchg
jno
dec
pop
push
pop
dec
fsubp
lds
or
jecxz
lret
cmp
jns
jae
push
sub
test
sti
test
push
dec
push
shl
ret
and
nop
cmp
out
sbb
ljmp
lods
pusha
or
fstpl
in
inc
or
mov
inc
push
nop
lcall
lret
jl
js
inc
out
cmpsl
sbb
int
lret
std
jmp
aad
in
mov
and
ret
adc
gs
sbb
ja
outsl
clc
pushl
int
or
enter
or
mov
test
mov
mov
dec
js
idivl
push
fsubl
push
cld
pop
jl
js
xorb
ficoml
rorl
add
push
push
cld
decl
in
scas
popf
mov
sbb
cvttps2pi
mov
adc
adc
scas
jp
push
pop
cmc
dec
mov
fcmove
int3
cwtl
mov
iret
push
in
int3
pusha
inc
mov
adc
add
mov
aaa
fsubp
ja
pop
lret
fbstp
clc
popa
ds
cs
out
add
subps
call
dec
xchg
leave
roll
daa
pop
cwtl
fsqrt
push
lock
fbstp
icebp
mov
dec
jae
xlat
and
testb
mov
xor
enter
pushl
jae
mov
or
mov
fidivrs
fwait
ret
fpatan
nop
and
dec
jbe
jnp
push
jnp
pop
or
inc
mov
or
mov
lods
mov
mov
jb
sahf
push
lds
mov
cmp
inc
push
cmp
clc
incl
cmp
pushf
jge
enter
iret
pop
mov
ljmp
cltd
test
sar
mov
push
lods
ret
aad
mov
dec
inc
shll
jns
mov
lcall
mov
xchg
push
xlat
ds
add
out
xchg
cmp
add
adcb
sti
fucomip
imul
xor
mov
fcomip
jg
repnz
popf
addr16
popf
dec
jp
xlat
mov
cld
sub
iret
dec
mov
pushl
jp
sbb
sbb
into
loop
jl
js
movsl
cmp
push
dec
or
lcall
jmp
mov
and
aas
sahf
movsb
out
cltd
sbb
adc
movsl
and
call
mov
bound
xor
loop
int
imul
shl
or
dec
inc
or
mov
lcall
popf
add
jae
dec
dec
push
xor
out
lods
insl
js
sarl
loopne
mov
decl
xchg
stos
loop
xchg
mov
call
push
mov
mov
out
imul
xchg
clc
push
lret
sti
inc
pop
jmp
inc
lcall
mov
inc
fstpt
inc
pusha
adc
inc
mov
pushl
stc
sar
aaa
cld
xor
dec
lea
sbb
mov
mov
sub
sahf
or
or
and
or
cld
jp
mov
test
test
stc
movsb
cmp
pop
mov
add
mov
rcl
xor
dec
cmp
inc
imul
pushf
cmp
or
nop
xlat
mov
adc
inc
lds
pop
lods
push
jmp
pushl
pop
out
sti
jle
or
add
push
sub
mov
inc
fmulp
incl
pop
adc
jne
mov
aam
icebp
addb
test
hlt
pop
sbb
jmp
xchg
fcoml
pop
pop
incl
mov
add
fdivrl
inc
add
sub
push
inc
inc
aaa
loopne
movsb
sbb
jmp
lods
sub
mov
aaa
mov
xchg
pop
movsb
orb
dec
and
repz
lcall
dec
and
push
jecxz
sub
cmp
push
cmpsb
int
cs
sub
sbb
sbb
jo
pusha
sarb
faddp
out
xor
push
jns
dec
cmp
incl
mov
out
pop
lcall
jno
mov
xor
jle
cmpsb
ljmp
add
insb
inc
mov
cmp
push
out
and
xor
fists
mov
pop
jmp
add
jae
mul
in
imul
je
test
sub
dec
dec
xor
sub
aam
call
in
out
rcll
push
push
mov
mov
shr
test
and
jmp
sub
divb
mov
aas
xchg
lea
cmp
jl
movsl
mov
jb
mov
fwait
add
decl
push
ror
insb
pop
or
scas
loop
add
mov
jg
testb
adc
fsubs
hlt
into
nop
call
lock
fdivp
mov
mulb
cmp
arpl
inc
push
inc
jg
cwtl
cltd
push
pop
mov
mov
ljmp
test
mov
sbbb
orl
xor
dec
adc
clc
decl
jmp
add
or
loopne
push
les
push
jo
aam
pop
add
pushl
cmp
sub
adc
mov
loop
cld
sub
addr16
lret
pop
sahf
adc
arpl
pusha
or
jmp
in
pop
sub
clc
int
data16
pop
mov
mov
and
cmp
cmp
ss
or
cli
fldcw
clc
and
subl
sti
incl
ss
cmpsl
mov
pop
rcll
or
cmpsb
sbb
out
insb
add
or
inc
jg
adc
xchg
aam
mov
pushl
js
jnp
repz
movsl
popa
ret
pop
outsb
sub
mov
inc
sbb
decl
sub
xchg
cmp
data16
test
xchg
jbe
shll
xor
mov
sbbl
into
cli
ret
and
push
sarl
arpl
xlat
xor
pusha
jmp
sahf
adc
or
and
test
pushl
xor
push
mov
inc
sbb
mov
cmc
push
xchg
clc
mov
shl
xchg
push
pop
subl
mov
sub
inc
mov
push
push
sarb
mov
mov
loope
mov
stos
pushf
push
sar
mov
movsb
out
data16
mov
push
adc
out
inc
jns
ss
mov
jl
push
mov
push
add
hlt
test
fiadds
pop
jb
push
js
sti
cltd
mov
clc
call
sbb
imul
cmc
pop
xchg
pop
adc
mov
push
sub
sar
out
mov
inc
sbb
call
xchg
out
in
xor
in
jb
mov
in
test
push
push
addr16
jecxz
call
push
es
lcall
daa
mov
mov
aas
cld
jmp
jo
push
in
mov
sti
jne
into
mov
xchg
out
and
subb
out
xor
aam
orb
pop
pop
or
repnz
pop
jb
inc
arpl
and
daa
and
jle
cli
incl
sarb
shlb
jle
dec
gs
iret
mov
fdivl
das
mov
lods
cmc
push
mov
scas
mov
fwait
jmp
ror
mov
lds
insl
adc
xchg
push
aas
add
sbb
xchg
xor
decl
btc
in
mov
imul
dec
fwait
dec
add
push
in
pop
out
pop
mov
into
loope
ds
lahf
fcoml
pusha
pop
cs
stc
jg
ljmp
mov
psubsw
lods
incl
sub
mov
inc
test
pop
daa
sarl
pop
imul
xlat
pop
xor
jnp
jmp
sbb
push
lret
ljmp
bound
sti
xor
sbb
decl
sub
sbb
xor
test
dec
addr16
pop
fildll
adc
add
pop
loope
adc
mov
lock
jg
test
sbb
jne
push
sti
xchg
aam
bound
pop
cmpsb
cld
js
pushl
xchg
addr16
mov
lea
es
push
add
pusha
lcall
add
lods
and
and
out
add
pushl
arpl
dec
pop
outsb
das
aad
lret
mov
cmp
scas
roll
pop
inc
xchg
mov
mov
ljmp
and
push
and
dec
xchg
testl
mov
js
in
add
cmp
loopne
pop
gs
inc
or
push
iret
jp
add
movsb
shlb
je
mov
int3
inc
andl
xchg
flds
mov
push
jmp
fwait
pop
mov
dec
in
cmp
stc
fcoml
inc
xchg
es
scas
movsb
pushl
pushf
outsl
inc
push
adc
test
cs
xchg
rclb
push
ss
mov
push
jmp
sub
lock
and
mov
outsl
and
push
sub
outsl
out
ret
sbb
push
add
or
mov
ljmp
mov
scas
insl
xor
jecxz
add
jg
xchg
adc
ret
pushf
or
xchg
mov
pushl
stos
push
test
or
pop
mov
dec
push
iret
aam
jmp
movsb
lcall
xor
pop
jno
scas
xchg
adc
in
mov
sbb
mov
insl
pop
sbb
mov
jmp
loope
xchg
mov
push
jecxz
ret
or
lcall
loopne
ds
push
fwait
mov
pop
incl
hlt
stos
scas
add
shlb
jne
in
jb
fadds
call
adc
push
or
cmp
addl
lcall
pop
mov
xor
shl
push
test
mov
decl
xchg
dec
mov
popf
mov
xor
jbe,pn
shrb
arpl
mov
dec
test
xor
movq
pop
scas
lret
push
pusha
loope
popf
test
add
mov
cmp
fcomps
mov
mov
add
adc
loopne
push
xor
ds
inc
arpl
and
cmp
push
clc
inc
mov
out
and
or
lock
cmp
adc
inc
out
stc
cmp
enter
test
push
mov
push
jo
test
jmp
test
les
mov
imulb
sbb
inc
out
test
imul
cld
in
or
lock
fisttps
jg
xchg
outsb
loop
xor
jle
inc
in
ljmp
xchg
ret
mov
cwtl
sub
mov
xlat
xchg
fstl
xor
sub
sti
stos
ficompl
rclb
sub
pusha
ficompl
mov
or
data16
ja
push
fsubs
dec
dec
mov
cld
pushf
imul
sbb
mov
dec
lret
or
and
pop
cmp
repz
adc
loop
mov
test
inc
mov
pushl
in
cmp
pop
inc
ja
ja
call
call
xchg
pop
jmp
sbb
mov
mov
xchg
sub
inc
lret
cltd
popl
sub
bound
xchg
xor
outsl
inc
add
in
cmp
mov
and
mov
sbb
pop
mov
icebp
push
adc
push
arpl
mov
pop
repnz
sbb
cmp
pusha
imul
mov
push
mov
cmp
bound
sahf
ficoms
cs
daa
push
dec
daa
pop
cmc
mov
call
pop
sub
lcall
ret
sar
adc
xlat
sbb
cmpsl
sahf
sbb
xchg
adc
scas
mov
pop
or
xchg
mov
cmp
loope
loop
mov
sar
pushl
mov
mov
mov
subb
push
mov
jg
lcall
or
out
sbb
call
and
mov
sub
sub
pop
xor
data16
fcomip
outsl
pushf
mov
movsb
and
inc
pop
dec
or
mov
jmp
cs
dec
je
pop
add
xchg
sarl
mov
xor
jmp
negl
loopne
loop
mov
rclb
jnp
xlat
insl
adc
mov
pop
and
ljmp
sbb
pop
mov
out
push
fsubrp
rorb
jmp
outsb
and
adc
lea
enter
daa
push
ss
aas
call
and
in
fistl
push
jbe
or
push
dec
dec
lret
jne
cmpsb
xchg
stos
sub
lcall
push
pop
popa
adc
daa
mov
loop
mov
stos
mov
loop
xchg
cmp
test
lahf
cmpsb
test
jne
clc
decl
mov
add
cld
xor
pop
sar
dec
lret
mov
loope
imul
shlb
div
mov
mov
jge
fcmovnbe
adc
sub
inc
aad
lret
mov
sub
adc
cld
lods
stos
pop
insl
xor
aad
sahf
in
adc
lcall
out
sub
pop
js
cli
iret
pop
and
mov
mov
insb
mov
xchg
mov
dec
pop
shlb
sbb
or
fwait
xchg
add
jp
push
ljmp
mov
fmuls
dec
sbb
in
xor
push
pop
test
iret
push
out
jmp
in
jns
xchg
xchg
push
dec
sub
aaa
in
out
cmc
xor
ja
ret
dec
mov
imul
cmp
mov
les
je
sbbb
test
xchg
sbb
cmp
xchg
popf
add
pop
iret
roll
icebp
repz
cmp
cmp
inc
cmp
jns
adc
rcrl
cs
mov
fdivl
imul
fsubl
cmp
je
sub
and
sub
lcall
adc
shrb
imul
mov
sub
adc
rolb
pop
aad
xor
icebp
mov
lods
lods
and
je
aas
mov
gs
stos
dec
sbbb
cmp
lock
mov
adc
add
cmpsb
xchg
addb
mov
rcrl
clc
cld
adc
mov
xchg
out
mov
mov
decl
mov
in
add
pop
mov
mov
and
cmp
out
test
push
push
call
xor
movl
pop
cwtl
push
rorb
push
out
loopne
inc
jl
and
pop
sarb
xor
push
xor
pop
or
nop
leave
andl
jb
pushl
sti
rcl
jmp
aad
clc
shlb
in
add
aad
addr16
push
adc
clc
inc
repz
lcall
cltd
fidivs
insb
sbb
outsl
out
dec
push
adc
mov
ficoms
rcrl
lods
lcall
std
pop
jne
clc
in
test
shrl
dec
push
jl
in
scas
and
bnd
jg
call
call
add
xorb
mov
mov
add
mov
jg
arpl
cmc
ss
scas
mov
jns
ljmp
enter
pop
inc
test
mov
cmp
into
xor
dec
cmp
icebp
call
fistpl
fs
pop
lahf
inc
mov
shll
inc
ud0
decl
mov
daa
sahf
mov
inc
lock
xchg
aam
pop
repz
idivl
sbb
cmp
repz
icebp
int3
out
mov
das
jb
or
test
sub
data16
inc
jmp
decl
aad
cltd
and
ljmp
imul
sbb
incl
jecxz
je
add
lods
ss
pop
clc
arpl
cmc
mov
or
hlt
ljmp
dec
fisubl
and
in
repnz
push
clc
mov
lcall
sbb
jmp
ret
xchg
sub
add
out
in
and
lret
xchg
stc
outsb
pop
test
mov
cld
pop
sub
rcll
push
push
push
nop
insl
xchg
xchg
or
daa
xchg
insb
jmp
jae
cmpsw
sub
enter
or
lcall
mov
lahf
cs
dec
fsts
xchg
pushf
iret
jge
mov
dec
popa
push
icebp
ja,pt
inc
stc
jp
scas
jmp
fdivrp
lcall
pop
xchg
mov
fimuls
mov
hlt
dec
ljmp
notb
adc
ljmp
mov
pusha
xchg
inc
pop
in
jbe
mov
or
adc
out
sub
sub
fcomip
inc
leave
test
fcmovu
xor
fstps
aad
add
dec
push
clc
ret
inc
xor
push
push
dec
cmp
xchg
pop
cmp
cmp
adc
in
mov
aaa
es
in
jbe
cmc
adcl
decl
sub
jnp
fsubrs
pop
cmp
shrl
or
lahf
loopne
lret
inc
jno
cmp
ret
imul
inc
arpl
xchg
lcall
stc
dec
popa
add
mov
cltd
add
movsl
mov
pusha
movsl
jp
fwait
add
pop
dec
in
cli
in
arpl
mov
mov
push
popf
call
cld
mov
cli
adc
adc
sub
lock
mov
decl
cmp
je
gs
adc
bound
je
push
xchg
decl
fmull
add
js
stos
iret
leave
xchg
jl
push
xor
test
lods
mov
mov
decl
test
aas
lea
jae
xchg
xor
xor
xchg
jmp
out
decl
vpunpckhqdq
mov
pop
cmpb
cli
mov
sbb
mov
sub
stc
push
cmc
cmpsb
ljmp
jnp
movsb
std
xor
dec
pop
cli
inc
arpl
pushl
xchg
mov
flds
jecxz
fwait
lods
popa
jno
in
xchg
xor
cmp
mov
jmp
or
in
dec
cmpl
push
outsl
mov
push
jg
adc
cmpsb
aas
cmc
aas
pop
cmp
mov
lahf
leave
cmp
or
pop
fcomps
popa
push
out
pop
pop
mov
outsl
rorb
fdivr
ljmp
sub
or
testb
rcrb
rcll
push
dec
scas
or
sahf
mov
inc
popa
pop
clc
lcall
sub
fiadds
rcrl
inc
popf
cmpsl
push
pushf
lods
cmpsb
or
subb
jb
add
incl
and
mulb
xchg
adc
aaa
pop
mov
dec
push
jge
push
insl
xor
xchg
ficomps
push
jae
pop
cmc
mov
inc
orl
bswap
es
in
call
mov
jmp
inc
fisubl
mov
or
scas
xchg
cmc
and
pop
or
sbb
add
sbb
pushl
shl
sbb
das
push
mov
mov
xchg
xchg
outsl
sub
in
push
ljmp
insl
jno
repz
xor
jne
ret
adc
inc
pop
out
cmp
in
sbb
pushl
push
dec
repnz
ljmp
dec
hlt
pusha
lods
fucomi
cmp
adc
test
xorl
push
inc
pop
mov
icebp
fwait
aas
and
sbb
jnp
mov
imul
shlb
mov
xchg
cmp
inc
dec
scas
push
js
jbe
jecxz
incl
clc
jg
pop
out
mov
mov
scas
sub
ljmp
adc
push
out
mull
addl
mov
cmp
jmp
xor
dec
adcb
lods
es
sub
clc
add
insl
cmp
mov
imul
in
in
push
xchg
out
sub
mov
mov
mov
xchg
pushl
mov
mov
dec
xchg
xor
les
pop
fsubrs
jnp
bound
lcall
xor
repnz
and
jb
or
mov
nop
inc
test
pop
adc
xor
outsl
cli
inc
insl
xlat
and
cmpsl
jge
or
xchg
cmc
mov
and
jl
push
ljmp
into
das
sbb
movb
lret
cmp
push
addl
push
or
dec
out
jno
or
jecxz
mov
aaa
dec
pushf
cli
add
sub
iret
lods
call
mov
sbb
push
inc
add
out
jp
imul
pop
mov
test
repnz
lcall
fstl
inc
xor
jg
fdiv
push
push
mov
jae
jmp
mov
adc
xlat
adc
pop
bound
dec
aaa
in
push
dec
cmp
pop
fimuls
mov
mov
cmp
hlt
fwait
rsqrtps
and
fsubrs
pop
idiv
call
pop
mov
xchg
sbb
iret
push
jno
fucomi
xor
xchg
and
mov
push
mov
adc
cs
in
jns
and
jl
pop
scas
mov
ds
loop
jecxz
hlt
xor
push
fistl
cs
dec
sahf
pushf
dec
lret
insl
jmp
push
lcall
aam
xlat
fstps
cmpsl
xchg
mov
enter
pop
pop
jae
int
flds
es
xchg
insb
cwtl
daa
lds
inc
loop
ss
push
repz
ja,pn
mov
decl
popa
and
sbb
push
xchg
mov
pop
enter
std
or
fisubs
test
scas
cmp
cmp
jl
mov
fisubs
loop
mov
jg
sub
jmp
or
stos
push
hlt
decl
mov
arpl
and
and
lock
push
mov
adc
lcall
xchg
subl
xor
push
mov
call
insb
pusha
sti
fstl
std
lods
mov
and
mov
dec
in
rep
mov
xchg
jge
loope
mov
ja
mov
dec
xchg
subb
int
dec
aaa
stos
in
pop
inc
dec
mov
inc
lods
lods
and
lcall
jmp
pop
cmp
das
dec
jl
xchg
pop
or
aad
test
mov
and
inc
xor
cmp
int3
adc
pop
sti
inc
jno
std
incl
adc
pop
aaa
jbe
enter
dec
out
cmp
jg
icebp
inc
mov
fsubs
cmp
mov
jmp
inc
les
das
das
or
adc
fs
jns
cmp
dec
addr16
inc
pop
pop
jle
shlb
xor
aad
aad
shll
out
cmp
popf
jnp
sub
jmp
imull
into
ds
cmpsb
pop
fmull
lea
andb
insl
out
push
mov
arpl
mov
push
xchg
ret
jns
jae
pop
add
out
ja
pop
lcall
test
outsb
incl
imul
push
mov
aam
sbb
call
jmp
pop
insl
lods
lods
inc
cli
in
mov
aam
out
add
into
xchg
jae
jo
adc
mov
sar
push
lock
push
repnz
leave
and
mov
dec
pushl
test
push
xchg
lea
ss
xchg
into
pop
xor
fdivl
call
scas
inc
mov
cmp
daa
enter
daa
imul
aaa
insb
cli
mov
cmp
lahf
cwtl
inc
mov
add
push
xlat
lcall
ljmp
repnz
ret
xor
inc
int
or
bts
ds
or
ss
cld
xor
ljmp
xor
add
lods
ret
cmpsb
out
clc
pusha
shrb
add
in
mov
jg
or
inc
fcomps
daa
ljmp
push
je
push
lods
stc
xor
push
aaa
cmp
xor
cmpsb
xchg
call
add
rorl
pop
add
movsl
adc
add
test
jg
shlb
rcll
hlt
mull
div
das
and
xchg
jmp
pop
pop
sub
jecxz
jb
mov
or
mov
cmpsl
out
xor
cmp
jae
and
out
notb
dec
adcb
into
jecxz
lods
ljmp
ljmp
cmp
push
dec
mov
hlt
mov
shll
xchg
decl
dec
adc
mov
xchg
xchg
sub
adc
stc
inc
add
jmp
jnp
inc
into
sti
outsb
shrl
test
mov
insb
push
lds
pop
sbb
lods
cmp
popf
stos
and
call
sub
outsb
jo
fcmovne
loopne
sahf
jns
ret
adc
push
xchg
mov
mov
inc
aad
xlat
test
jle
dec
push
repz
mov
int
gs
jecxz
into
outsb
or
in
test
or
inc
mov
mov
out
cli
pushl
ljmp
add
out
pop
pop
in
les
mov
xor
cmp
pushl
repz
jno
cmp
inc
and
jno
jno
loope
insb
mov
hlt
push
nop
xchg
sbb
movsl
popa
int
jae
cs
ffreep
mov
mov
loope
add
sbb
or
dec
sbbl
xor
adc
iret
jb
mov
lock
imul
js
lret
aam
test
hlt
and
rolb
gs
inc
lods
aad
ja
xchg
xchg
mov
mov
inc
sub
nop
jae
test
adc
les
dec
imul
addr16
sub
push
mov
jmp
cld
fdiv
jae
aam
lods
push
xor
test
mov
sti
dec
sub
sbb
inc
xchg
cmp
or
mov
in
xor
mov
mov
mov
jmp
pushaw
push
xchg
adc
ss
push
cwtl
imul
xchg
mov
ljmp
dec
xchg
xchg
and
flds
mov
cmpsl
cmp
and
paddd
loopne
pop
pusha
rcr
sahf
or
loop
cwtl
mov
mov
comiss
std
xchg
cwtl
loope
cmp
push
pop
adcb
mov
cmp
cmpsl
and
insl
cmpsl
call
nop
in
fcoml
es
call
sbb
sub
loop
xor
lods
les
pop
mov
lods
lret
pop
push
jae
in
popa
or
jmp
and
testl
pushl
jp
push
mov
shrl
or
out
or
sub
enter
sbb
outsb
jmp
out
jl
add
mov
sarl
in
jp
mov
es
fsts
mov
xchg
sub
mov
add
add
adc
inc
lahf
subb
decl
insl
movsb
loopne
mov
sahf
xor
xchg
ss
pusha
call
cmpsb
or
hlt
pushl
inc
xchg
adc
push
mov
lret
ss
pop
testl
push
push
and
sar
mov
mov
cmc
loop
jmp
jno
into
or
sarl
sbb
inc
ret
imul
xchg
lret
jg
push
sar
or
out
test
shlb
insl
mov
xor
cmp
xlat
loop
sbb
outsl
jmp
fsub
dec
out
sub
pop
hlt
mov
sbb
adc
ja
rorb
jl
cmp
ja
lahf
dec
adcb
lahf
xchg
outsb
pushf
cltd
push
mov
pop
xchg
dec
add
js
mov
mov
pop
mov
push
ret
icebp
in
mov
loopne
add
out
mov
push
jns,pn
xor
mov
lcall
adc
loop
jcxz
jmp
fisubs
dec
je
icebp
pushl
jle
imul
mov
pop
jo
push
das
rorl
dec
out
pop
lcall
and
mov
mov
mov
jne
xchg
call
lea
mov
decl
cli
test
adc
xchg
notb
pop
lods
sbb
mov
push
call
mov
xchg
popa
sbb
dec
and
mov
ljmp
pop
push
ljmp
pop
cmc
xchg
jecxz
aam
pop
xchg
mov
jg
das
cli
jg
les
ret
sbb
es
mov
ljmp
cltd
push
adc
jmp
sbb
sti
cld
rorb
inc
mov
incl
test
jecxz
fdivrl
push
ds
pusha
xor
jb
add
cmp
sar
pop
insb
push
lds
mov
xchg
fsubl
sahf
mov
mov
adc
mov
xor
daa
xchg
or
sti
mov
xchg
mov
sub
pop
out
test
lcall
xchg
ret
addb
dec
test
jb
call
adc
mov
cmp
xchg
mov
dec
inc
sbb
insb
or
jl
test
dec
sbb
cmp
call
pop
insb
cmpb
sub
fdivl
xchg
jmp
sbbb
shr
es
aad
cmp
test
out
mov
movsl
sbb
mov
lcall
sti
adc
das
xchg
cmp
add
add
mov
jg
cmp
cwtl
mov
rorl
and
mov
jg
sti
daa
jg
in
fbstp
cld
out
adc
and
and
es
cmp
add
sbb
aas
lds
test
add
dec
mov
in
push
jno
shr
out
pop
mov
pop
mov
aam
lcall
sbb
popf
sbb
fistl
in
data16
dec
jp
or
mov
test
jg
sahf
pop
push
mov
lcall
fs
and
jb
divb
pop
aam
imul
call
mov
mov
lea
add
imul
pop
lcall
call
mov
in
shl
gs
stos
add
add
pushl
xlat
mov
xchg
fwait
cmp
mov
sub
pop
pushf
jo
std
sar
cmp
in
sbb
xchg
jnp
in
aam
sbb
fmull
inc
or
decl
push
and
jbe
shll
mov
cmp
std
ficoms
lahf
repz
mov
ljmp
in
jb
xor
into
pop
dec
cmp
daa
lea
pusha
fstps
repz
xchg
cltd
outsl
mov
movsb
lods
pusha
test
in
divb
imul
jns
mov
incl
decl
add
lret
xchg
cwtl
fsubp
and
outsl
mov
adc
repnz
decl
pushf
inc
bound
shlb
call
xchg
fisttpl
jns
mov
mov
xchg
fimuls
mov
mov
fnstenv
sub
test
nop
in
xor
dec
enter
iret
adc
incl
bound
dec
xor
push
push
in
cmp
jmp
inc
cmpb
stos
sub
adc
mov
test
push
fdivrl
stos
inc
adc
dec
sub
add
popa
mov
in
pop
mov
pop
push
xor
jecxz
test
call
sub
std
out
push
lea
inc
cmp
bound
outsl
pop
pop
cli
pop
add
ljmp
or
sbb
add
imul
out
je
iret
adc
movb
push
cmp
cmc
mov
cli
ret
jg
mov
insl
mull
xchg
pushf
std
data16
in
pop
mov
repnz
adc
outsl
fstl
pop
lock
ret
aaa
jbe
mov
dec
mov
sub
cmp
mov
xchg
ljmp
lcall
mov
out
and
add
and
scas
ds
call
bound
call
and
cltd
mov
fisubl
xchg
add
jge
push
pushl
clc
call
sti
cmp
incl
mov
inc
and
shrb
repnz
or
aad
fidivl
movsb
or
pop
aam
pop
inc
and
inc
in
icebp
jle
inc
inc
and
jmp
mov
notb
fwait
js
aas
negl
dec
push
add
fistpl
adc
ljmp
xor
aad
outsb
cmc
mov
into
inc
out
xlat
or
mov
decl
pop
das
pop
psubb
jae
and
dec
daa
stos
dec
mov
mov
es
push
xor
aaa
dec
lret
cwtl
lret
sbb
lcall
mov
push
fdivrl
insl
mov
push
push
cli
add
decl
test
xchg
lods
ss
jle
ja
cmp
out
add
cmp
push
dec
scas
dec
push
test
ja
call
ret
sbb
pop
in
sub
popa
lods
pop
xorb
pushl
push
pop
pop
movsb
nop
mov
adc
add
movsb
daa
jle
inc
data16
mov
mov
mov
in
insl
es
call
in
and
pop
iret
cmp
xchg
pushf
shlb
inc
imul
pop
adc
pushf
ljmp
das
push
imul
fsubs
mov
adc
insl
push
pop
sbbl
xchg
rcrb
loop
outsl
fcmove
sbb
sub
lods
rol
mov
xor
fdiv
or
cmp
jmp
adc
clc
xchg
stos
jg
loop
cmp
arpl
gs
fcomip
incl
or
jo
cmp
mov
addr16
push
pop
mov
jle
std
aad
inc
nop
int
inc
mov
mov
inc
sahf
xor
mov
or
jg
repz
sarl
push
outsb
imul
xchg
nop
add
xchg
movsb
cmpsb
mov
dec
jg
cmp
xchg
movsb
inc
mov
mov
lea
pop
xor
add
call
pop
incl
je
stc
testb
cmp
add
incl
and
dec
dec
xor
imul
imul
movsl
sbb
jne
sub
cmpsb
movsb
ret
or
mov
mov
pop
lret
decl
mov
lock
arpl
push
inc
lods
jne
mov
stos
pop
cld
jmp
mov
pop
push
mov
lds
les
dec
push
lock
ljmp
jns
lock
add
mov
add
mov
push
push
aas
inc
incl
rclb
adc
mov
fsubs
push
jns
repz
stc
dec
jmp
cld
push
je
mov
dec
pop
xlat
int3
imul
xchg
pushl
orb
call
add
das
test
pop
jl
cwtl
out
aas
ret
or
inc
test
loop
push
js
movsb
leave
scas
fbstp
push
out
mov
cwtl
add
ljmp
stos
push
stos
push
cmp
add
jae
mov
fbld
cli
into
cltd
cmp
xor
ljmp
xor
jmp
repz
mov
push
daa
adc
mov
decl
fwait
mov
pop
cmp
xchg
inc
aam
repz
loope
adc
push
lret
adc
imull
push
shlb
ret
mov
jg
jp,pn
mov
lcall
cmp
divb
adc
ss
and
sbb
mov
cmp
cld
ljmp
mov
pop
sbb
out
movlps
in
dec
ficomps
cmp
aad
pushl
data16
or
arpl
fisubrl
inc
call
or
push
js
repnz
pushl
in
lret
jae
fwait
popa
ja
or
jmp
into
inc
and
sub
fildl
lods
or
mov
lret
add
movl
insl
jg
xor
inc
test
lods
jb
out
dec
stc
aaa
in
lahf
mov
mov
pop
jp
jge
dec
push
push
mov
out
pop
cmp
decl
lock
fsubl
cs
inc
sub
int3
repnz
fists
mov
jmp
pop
imul
cli
jmp
ret
sbb
lds
into
popf
cmp
mov
adc
mov
xlat
mov
das
xor
out
inc
std
jp
popa
jmp
sti
imul
jg
movsl
lret
xchg
mov
mov
scas
stos
and
mov
push
jae
data16
in
imul
pop
mov
shrb
xchg
dec
lret
jmp
xlat
jo
mov
out
xchg
test
popa
aas
hlt
fidivs
pop
fsts
and
aaa
cld
inc
jns
mov
pop
aad
or
inc
inc
and
sub
inc
stos
inc
dec
jne
nop
stos
in
ret
cmpb
rolb
mov
loopne
add
and
stos
inc
aas
mov
enter
ljmp
add
add
fidivl
mov
neg
scas
movb
mov
xor
xchg
sahf
fidivrl
imul
enter
or
cltd
test
incl
fstl
mov
inc
seta
dec
subl
push
in
and
jmp
xchg
in
in
notb
push
sub
andl
or
sub
lods
dec
cmp
jbe
dec
cmp
ret
mov
mov
xor
inc
mov
decl
pop
pop
and
clc
shl
push
push
mov
movsb
dec
mov
lcall
bound
iret
cmp
out
mov
test
sbb
and
or
push
jb
sbb
out
xchg
inc
sbb
addr16
cmp
sbb
js
mov
decl
jae
mov
xor
sbb
xorl
cld
and
fcmovne
xchg
lret
stos
fcmove
cs
mov
std
ficomps
icebp
push
pop
stos
in
pop
inc
imul
cmpsl
dec
pop
mov
pushl
arpl
gs
dec
test
lahf
sub
adc
fnstcw
rorb
lock
jmp
mov
popa
xchg
mov
fisubl
mov
sub
or
inc
mov
ucomiss
mov
decl
lret
addr16
mov
mov
fimull
or
pushl
out
push
mov
sub
or
pop
push
fs
xchg
push
xor
imul
scas
cli
incl
repnz
dec
aas
loop
mov
fadd
js
lea
incl
sub
jmp
ftst
push
mov
aad
nop
into
jp
push
or
outsl
sub
data16
jmp
xchg
xlat
dec
sarb
xor
loop
lcall
rorb
ja
fdivrl
nop
cmp
xchg
pushw
scas
add
adc
mov
es
icebp
mov
decl
lahf
jo
shl
or
fisubl
int3
mov
or
out
addr16
cmp
sub
lahf
mov
mov
decl
roll
insb
jne
fdivrl
int
in
mov
lock
aam
pop
push
nop
pop
leave
pushl
sahf
add
dec
in
enter
or
pushl
mov
dec
sbb
jne
repnz
and
push
into
movsb
out
fimull
jbe
ljmp
enter
or
mov
iret
pop
xchg
and
insl
in
scas
scas
fldt
mov
ret
cld
cmp
jecxz
push
addr16
fsubs
call
xchg
xchg
shlb
xchg
push
pop
jecxz
push
xchg
mov
sbb
mov
jb
call
popa
inc
decl
iret
sub
mov
std
stos
imul
orb
or
fld
pop
in
repnz
lcall
pop
pop
cmpsl
xchg
mov
call
or
pop
cmpsl
push
ret
shrb
outsl
ficomps
adc
xchg
xor
or
aam
fcoms
testb
jmp
gs
mov
lods
add
int3
cmp
dec
int
loopne
clc
lcall
leave
jmp
xchg
pop
test
inc
mov
push
mov
mov
decl
add
aas
push
sub
inc
mov
xchg
mov
jmp
cld
cmp
rolb
inc
pop
mov
cmp
mov
add
stos
mov
dec
fwait
push
jg
ds
push
xor
in
jmp
adc
addr16
cmp
mov
inc
sbbb
stc
jle
mov
push
push
jg
lcall
lods
push
xchg
mov
iret
lcall
xchg
shlb
lock
jo
adc
js
shlb
lret
addl
cld
pusha
sbb
xchg
into
dec
cmp
iret
mov
pushl
cmpsb
pop
xor
scas
outsb
mov
rcrl
xchg
jp
pop
imul
xchg
dec
cmp
xchg
push
sub
arpl
jp
mov
into
ficoms
xor
mov
lcall
cmpsb
add
std
vprotd
xor
call
inc
push
pop
xchg
mov
xlat
push
cmp
mov
aas
rolb
arpl
jg
je
jl
ljmp
or
bound
lds
aas
xchg
mov
shl
nop
mov
push
jle
leave
lock
fbstp
lea
dec
fstl
sbbl
hlt
jb
mov
clc
sar
fldl
pusha
sub
stc
push
popf
sti
sbb
xor
inc
xchg
jbe
incl
sahf
ret
test
push
and
jno
and
jmp
dec
sti
push
les
xor
xor
cld
push
dec
add
and
mov
pushl
or
nop
inc
xlat
int
mov
push
mov
add
repz
push
shl
int
test
pop
mov
lcall
sarl
popf
ret
clc
scas
xchg
mov
adc
mov
add
dec
xchg
lcall
test
fisttpll
cmpsb
adc
in
bound
xchg
sub
test
dec
outsb
jmp
in
cli
mov
aad
or
imul
jb
mov
jge
mov
imul
inc
lret
jp
insl
inc
popa
movsb
push
adc
dec
into
in
cmp
std
adc
push
add
mov
in
mov
leave
mov
ret
xchg
out
xchg
push
xor
sub
sar
cs
imul
push
cmp
fcoml
decl
ror
imul
xor
inc
std
xchg
pushf
push
inc
mov
cmpsl
pop
dec
dec
jmp
sbb
xor
ret
cmp
jg
stos
sarl
cmp
and
ja
shrb
mov
aaa
popf
and
inc
mov
daa
sub
pop
cli
insl
fs
push
pushl
pop
mov
into
pop
push
lods
aas
sbb
mov
enter
dec
xchg
xor
dec
shl
decl
mov
icebp
add
xchg
pop
popa
stos
sub
bound
add
lods
or
movsl
or
mov
lret
in
xor
sbb
mov
loopne
add
incl
mov
dec
rcrb
add
loopne
orb
sbb
adc
std
bound
cmp
clc
pop
sti
xchg
mov
sar
jmp
cmpsl
nop
pop
scas
sbb
ljmp
lcall
jmp
je
pop
and
mov
push
push
jle
push
jno
push
shlb
mov
pushf
into
dec
push
jb
imul
pop
gs
adc
arpl
jns
popf
jp
push
mov
add
movb
in
xor
fdivrl
enter
mov
fsubl
adc
aaa
pop
dec
jno
and
adc
std
or
scas
loopne
call
xor
outsb
jge
shll
cmpsb
mov
out
ret
in
rcrl
jmp
mov
sbb
pop
cmpb
test
cli
cmp
mov
call
sub
cmpb
sub
mov
in
jnp
fstps
fucom
shll
jmp
sbb
mov
and
dec
lds
cs
das
mov
fildl
mov
cmp
repz
in
ljmp
push
pop
add
pushl
mov
hlt
adc
push
mov
shrl
in
loopne
cmp
ds
cld
mov
mov
std
dec
movsb
dec
and
std
or
ficoml
incl
outsl
xchg
pushf
mov
pop
jl
out
or
mov
sbb
rclb
adc
pusha
movsl
ljmp
jb
jle
jg
les
sti
cmp
sub
int3
fidivrs
in
cmp
jmp
aaa
aad
xchg
out
cmpsb
fisttps
dec
cmc
inc
jne
sbbb
lds
rol
ljmp
int
inc
xor
fsubl
out
call
dec
aas
mov
jg
cmp
adc
mov
aas
sbb
outsl
pop
jo,pt
dec
or
fnstsw
filds
ret
call
xchg
shlb
shlb
fadds
inc
gs
mov
adc
cmpsb
or
outsl
push
xor
cld
pushw
push
int3
lods
sti
add
call
call
sti
pop
in
in
cmp
dec
xchg
mov
jmp
pop
mov
and
inc
shll
sbb
xor
mov
inc
ja
or
gs
loop
outsb
out
xlat
xor
roll
call
jmp
add
or
lds
push
pop
addr16
faddp
xchg
jmp
adc
and
insl
xor
sub
cmpsb
rorl
lock
int
add
cli
call
jmp
dec
pop
lret
xchg
rolb
out
fs
xorl
dec
inc
xchg
lods
cwtl
test
popf
and
in
adcb
xchg
mov
mov
mov
xchg
xor
pop
mov
cld
push
lret
sbb
iret
insb
xchg
xchg
mov
xchg
dec
lods
sbb
ja
incl
dec
movsb
jg
aas
inc
aad
jl
es
aad
lods
sub
pushl
cld
xchg
loopne
jo
bound
hlt
xorb
icebp
and
lret
cld
adc
call
add
imul
push
inc
outsl
mov
cwtl
fmull
daa
insb
jnp
jmp
mov
in
icebp
aas
mov
int
out
xor
mov
stos
xor
push
insl
mov
ja
sbb
and
push
mov
mov
stos
lcall
enter
adc
inc
daa
or
pop
mov
and
decl
lods
ficomps
mov
jne
cmp
add
mov
imul
mov
mov
decl
sub
inc
test
movsl
mov
jle
inc
xchg
bound
mov
mov
std
pushl
sbb
mov
inc
dec
or
mov
call
in
mov
fiaddl
adc
sub
popf
notl
repz
jecxz
push
cmp
or
js
dec
nop
add
push
or
in
mov
scas
mov
out
sub
ljmp
cs
clc
sbb
pop
stos
mov
icebp
sti
rorl
ds
push
jae
mov
sbb
out
out
bsf
adc
mov
jmp
test
add
add
stos
pushl
and
dec
es
sub
pop
lcall
or
xchg
fidivrs
pop
data16
jmp
jmp
sbb
es
jl
xor
enter
lret
xchg
ja
jle
lahf
add
ljmp
adc
pop
and
fistl
aam
add
cltd
push
push
lods
test
mov
std
push
mov
int3
in
lods
xor
rol
aam
adc
lock
ljmp
out
adc
cmp
call
stc
pop
shl
add
or
fbstp
mov
add
sbbl
add
xchg
out
mov
or
xor
incl
sub
outsb
jo
push
xchg
ret
loope
add
inc
mov
dec
into
sub
pop
sbb
decl
mov
outsl
popf
mov
js
mov
sbb
repz
int3
ljmp
or
jno
pop
lea
xor
jg
mov
xor
ljmp
incl
add
dec
cmp
mov
ret
inc
push
cli
mov
jmp
jmp
outsl
mov
stc
outsb
rcll
stos
fs
imul
movsl
push
push
and
es
call
jno
test
cmp
loope
jo
xchg
xchg
and
test
jge
or
mov
insl
decl
test
je
cmc
mov
xchg
push
dec
adc
repz
inc
imul
cmp
incl
jge
jae
mov
repz
mov
pop
lds
cmpps
or
push
push
out
inc
lods
cmpsb
mov
lods
add
and
test
in
nop
inc
cli
cmpsb
roll
jecxz
sbb
out
push
hlt
lock
hlt
sbb
fwait
and
sbb
loop
iret
sub
xor
stos
lcall
int3
push
jge
adc
xchg
cmp
adc
lods
add
data16
enter
xor
dec
xchg
cs
mov
std
pop
nop
or
stos
add
mov
fcom
addb
mov
jnp
mov
orb
mov
int3
push
rcrb
jns
dec
insb
dec
mov
fninit
jne
scas
mov
dec
pop
mov
add
cs
lods
pop
mov
inc
dec
jg
sbb
jge
inc
arpl
push
je
int3
scas
xor
mov
push
xor
jg
mov
push
xchg
sub
sub
in
jle
cmp
jb
movsl
nop
les
js
ss
sbbl
pusha
push
xor
pop
jbe
dec
addr16
jmp
outsl
inc
xchg
push
es
lea
dec
xchg
out
jne
push
pop
int3
sbb
rol
lcall
push
dec
adc
push
loop
lock
mov
mov
sbb
sbbl
cmp
xchg
ret
sub
idivl
pop
pop
jbe
jg
xchg
mov
mov
in
add
fcomip
mov
push
rcrb
inc
pop
fidivl
add
mov
popf
mov
in
xchg
jne
cmpsb
decl
aaa
and
pushf
je
pop
sub
in
iret
popa
shl
nop
lock
sti
out
aam
call
das
call
mov
pop
fcomp
int3
gs
addr16
pop
pusha
insb
cmp
faddl
shl
inc
mov
popa
stc
lahf
or
cmpsb
aaa
dec
pop
or
xchg
pusha
fidivrs
jp
lock
lcall
xor
mov
xchg
jl
or
adc
jle
xchg
ret
mov
sbb
adc
adc
stos
and
mov
ljmp
sbb
ret
add
push
ret
cmpsb
adc
xchg
cmp
call
mov
add
xchg
les
mov
jnp
mull
xlat
add
ljmp
push
add
bound
push
subl
rcrb
push
and
dec
idivb
incl
flds
popa
fadd
pop
sbb
jmp
add
sub
lcall
sarb
ljmp
sbb
inc
cli
into
clc
mov
mov
dec
je
enter
in
cmp
push
add
mov
ljmp
add
inc
lock
in
cwtl
inc
ds
sbb
scas
sar
test
decl
imul
aad
jp
add
jno
xor
lods
xor
or
dec
xchg
minps
inc
push
fld
in
out
xor
push
js
xor
xor
fbstp
push
cli
inc
test
popf
dec
mov
faddl
xchg
mov
aam
adc
enter
lcall
rolb
inc
lcall
pop
repz
pop
dec
pop
testb
fwait
xchg
sbb
sbb
adc
mov
cmp
pushl
cmp
out
lcall
lahf
mov
dec
or
adc
mov
mov
push
pop
fmuls
add
cltd
jl
fs
or
lcall
in
imul
ds
out
jg
jae
stos
imul
xor
mov
call
fidivl
loope
dec
pop
xchg
dec
add
push
xchg
or
and
bnd
orl
pop
xchg
hlt
decl
xor
sub
cmpsb
out
outsb
and
enter
jg
push
mov
inc
adc
sub
fisubs
insb
aas
jno
xchg
aas
mov
std
in
lret
call
cmp
in
cmp
lods
mov
ds
mov
call
or
lahf
sub
call
fadd
mov
cmp
int
out
stos
xchg
fldt
jb
iret
ss
mov
push
inc
pop
das
and
jecxz
mov
adc
xchg
pusha
sub
add
mov
cmp
xchg
loope
arpl
pop
push
aad
scas
clc
call
test
adc
repz
cwtl
js
adc
push
xor
xor
sahf
das
mov
adc
test
arpl
aaa
pop
mov
repnz
jmp
in
jmp
or
pushf
pop
ja
pusha
outsl
dec
loopne
cmpsl
xchg
rcrl
sbb
pop
mov
inc
fdivr
loopne
pushf
cmpsb
hlt
add
dec
inc
xor
out
rcr
add
fldt
sahf
mov
add
or
pop
pop
push
call
or
or
or
or
or
adc
adc
push
adc
xlat
decb
adc
or
pop
sbb
adc
adc
adc
mov
shrl
add
or
adc
pop
adc
mov
rolb
xor
add
and
add
sahf
add
les
add
cmovae
mov
jb
fbstp
xor
jge
add
add
push
adc
jg
call
pop
and
xor
mov
adc
xor
cmpb
xor
sbb
add
stc
mov
dec
pop
pop
cmp
mov
addr16
pop
or
inc
xchg
and
adc
pop
xor
or
jmp
sbb
pushf
daa
adc
loopne
adc
cld
pop
pop
idivl
ja
adc
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
xor
and
loope
icebp
mov
mov
add
xorb
scas
fiaddl
or
js
cmp
or
cli
sub
rcr
push
ret
incl
jne
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
add
cmp
out
pop
les
cmpb
mov
cmp
xchg
and
cmp
xor
and
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
xchg
jl
xor
mov
add
or
incl
adc
sbb
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
std
sbb
aad
std
movsl
jecxz
pop
mov
sbb
clc
cmpl
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
repnz
xor
call
inc
lock
scas
jle
fcmovnu
clc
cmp
xchg
aad
hlt
jmp
orb
int3
lcall
fs
scas
mov
pop
pop
fbstp
movb
xchg
sbb
scas
adc
mov
xor
lods
ljmp
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
ss
cmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
mov
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
pop
cwtl
int
arpl
push
out
or
push
fcmovnb
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
lcall
mov
jmp
sbb
push
xorb
sar
jg
out
pop
jb
mov
mov
mov
sub
pop
mov
jl
shll
jp
push
gs
jg
hlt
in
in
outsl
call
paddsb
pop
stc
loope
mov
sar
andl
aas
icebp
testb
decl
imul
scas
fadds
in
sub
jbe
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
incl
inc
mov
dec
adc
push
lock
lods
jp
testb
sbb
in
dec
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
sti
decb
xchg
in
add
inc
adc
loope
fisttpll
inc
aaa
dec
outsl
out
aas
std
cli
push
push
push
idivl
cmp
pushl
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
pop
add
push
scas
cmpsb
orb
mov
sti
notb
cmp
js
jmp
xchg
pop
clc
pop
hlt
sub
in
stos
imul
add
lea
jg
gs
lcall
xor
imul
outsl
adc
ret
das
pop
pop
pop
sar
incl
cld
mov
insl
pusha
fucom
out
sarb
sbbl
jno
or
sarb
call
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
ljmp
sbb
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
ljmp
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
lcall
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
mov
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
push
movsl
add
ret
fcmovu
ds
cmpsl
scas
popa
in
pushl
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
call
mov
adc
adc
push
jo
pusha
imul
add
mov
das
adc
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
inc
pop
mov
test
jg
mov
lcall
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
cli
adc
and
lahf
aas
lahf
fnstenv
lret
mov
pop
pop
cld
aas
clc
mov
sub
mov
dec
incb
fisubrl
aas
mov
testb
mov
or
cld
inc
or
pop
jg
add
fildll
mov
jg
mov
aad
test
mov
mov
adc
or
iret
push
jbe
push
sbb
stos
decl
push
std
icebp
pop
incb
jno
adc
push
inc
jecxz
sbb
shl
mov
sbb
mov
lods
loopne
sar
sbbl
rorl
and
cmp
pop
jg
push
push
in
aas
mov
fsubrl
fisubl
cmp
lock
and
add
push
clc
xchg
pushf
mov
das
clc
jmp
repnz
and
mov
adc
inc
aas
push
ret
mov
pop
pop
inc
jb
fistpl
adc
call
mov
pop
nop
mov
inc
sti
arpl
daa
std
loope
jmp
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
insb
icebp
decl
fsubr
fistps
lds
fidivrl
jg
stos
cld
lcall
pop
add
dec
mov
sub
jge
xor
lahf
les
paddsw
jl
xor
inc
and
mov
icebp
call
in
stc
mov
lahf
outsl
int3
push
sbb
cmp
jle
xchg
popa
out
out
or
aas
mov
xchg
inc
test
in
jge
popa
push
test
jbe
mov
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
sub
shl
cld
mov
inc
mov
pop
jg
pop
shrb
rcl
jg
adc
xor
jle
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
jecxz
pushl
adc
inc
lds
push
pop
adc
imul
or
inc
lcall
daa
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
inc
fdivr
dec
sbb
inc
mov
into
test
xchg
movsb
insb
or
jnp
mov
cwtl
inc
mov
insb
cld
jg
inc
test
aas
repz
outsl
lock
in
jmp
stc
out
jmp
aaa
clc
push
std
mov
or
lods
out
jne
or
fisttps
dec
push
mov
fsubrp
dec
sahf
enter
ficoml
sub
faddl
xchg
mov
mov
out
pop
or
or
dec
ss
mov
leave
inc
lods
movsb
or
repnz
mov
cli
daa
pop
and
imul
cmpsl
lret
pop
in
cmp
cld
outsl
incb
mov
pop
lock
jmp
hlt
dec
mov
in
scas
sbb
xlat
inc
aas
mov
jg
mov
mov
addr16
sbb
cld
daa
jp
std
adc
cld
jbe
inc
cltd
or
mov
ret
nop
cmp
das
incb
add
pop
pop
div
cld
idivl
fcomi
add
stc
lahf
loope
jae
jmp
shrl
je
jge
std
scas
bound
jg
stc
add
out
leave
xchg
inc
icebp
mov
loope
mov
cmpsl
popf
sti
sub
mov
ja
push
outsl
das
jge
fwait
dec
das
add
cmpsb
cmp
call
std
add
decb
adc
mov
and
jo
adc
call
jo
testb
iret
or
add
cmp
int
add
push
enter
pop
aaa
std
fisttps
testb
cld
jg
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
aaa
pushf
jecxz
and
adc
mov
mov
cld
push
sub
mov
pop
clc
loope
loope
mov
lahf
inc
push
dec
add
xlat
jmp
in
cwtl
pop
fbstp
xchg
fldenv
iret
movsb
or
xchg
lcall
decb
mov
loop
dec
and
out
jg
jno
ret
xchg
xor
jno
cmp
mov
sbb
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jmp
clc
pop
lds
jmp
std
mov
daa
jmp
faddl
or
inc
push
jae
mov
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
add
xchg
decl
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
sar
ljmp
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
add
push
sti
pop
inc
dec
stos
fs
push
mov
push
cmp
mov
push
popf
int3
pop
iret
and
add
sub
add
aaa
orb
nop
int3
mov
pusha
jg
add
inc
pop
mov
das
and
dec
and
push
ljmp
or
push
mov
popl
push
xor
jnp
xor
lret
addb
inc
mov
jae
bound
imul
cs
add
fidivrs
outsb
imul
fiaddl
add
add
adc
mov
mov
dec
cwtl
shlb
pop
add
add
dec
mov
dec
scas
dec
sub
fwait
insl
push
and
dec
jo
daa
xchg
push
inc
push
mov
gs
call
outsl
outsl
insb
push
push
outsb
popa
jo
push
ret
jne
dec
loope
dec
sbb
mov
inc
movsl
and
aaa
mov
push
or
aaa
cmp
subb
push
mov
gs
movsl
dec
jne
js
popf
or
mov
pop
inc
lea
frstor
dec
push
and
cmp
lea
inc
jns
push
imul
popa
jb
sbb
and
push
es
ljmp
dec
jecxz
sbb
mov
and
or
or
dec
call
ret
and
or
push
cmp
vmcall
int3
int3
cmpsb
icebp
inc
jl
loopne
sub
ftst
dec
outsb
imul
insb
stos
sub
nop
in
cbtw
sub
add
divb
flds
sub
hlt
push
push
pop
dec
inc
xchg
mov
mov
adc
out
or
test
inc
sbb
push
fisubs
mov
pusha
sbb
push
pop
mov
inc
insb
jne
addl
data16
sti
adc
icebp
insl
clc
insl
dec
push
inc
sbb
aam
push
xorb
push
fildl
cmp
inc
push
pop
jbe
ret
mov
or
push
jne
addr16
push
pop
jb
push
xchg
inc
arpl
push
jns
fistpl
or
mov
inc
jae
adc
pop
fcmovnb
int3
inc
push
push
push
xchg
int
or
fs
inc
jecxz
xorb
add
dec
cmp
cmp
jae
sub
xor
mov
pop
inc
flds
sub
mov
push
jo
packuswb
fidivl
mov
inc
dec
sbb
pop
pop
dec
adc
mov
push
dec
leave
push
aas
sbb
jo
ss
stos
mov
adc
or
jl
pop
and
mov
xor
je
dec
roll
sbb
and
mov
mov
pop
pop
and
popw
push
gs
mov
lret
divl
fs
push
inc
xchg
pusha
rol
pop
popa
and
das
mov
cmp
jae
pushf
inc
or
mov
dec
inc
dec
or
inc
mov
or
pop
mov
dec
jb
sub
push
xlat
fs
xchg
lods
xor
je
ja
mov
add
daa
push
cmp
ja
dec
mov
mov
cmp
cmp
and
inc
popa
es
jp
jmp
test
push
fdivs
mov
adc
shrl
sub
orb
jbe
ret
mov
pop
test
mov
or
outsl
flds
jmp
test
and
adc
stos
aad
add
aaa
stos
jns
inc
je
push
and
xlat
fildl
out
sti
or
es
popa
fs
pop
into
mov
sub
pop
ficompl
loope
pop
push
or
rcl
mov
add
shlb
outsl
lods
jb
test
stos
adcb
sbb
cltd
lock
or
cmp
push
xchg
or
mov
out
ret
pop
aaa
or
bound
popa
xlat
inc
dec
pop
sub
sub
push
stc
pushf
push
jne
shlb
inc
fmuls
adc
sub
push
scas
gs
jae
xor
mov
inc
inc
add
test
ret
lds
sbb
out
hlt
jo
mov
inc
fisubrs
imul
stc
add
add
or
fadds
adc
outsl
or
inc
arpl
mov
fwait
adc
sahf
cwtl
rcl
and
jns
jne
je
xchg
and
xchg
movlps
xchg
arpl
or
jp
ds
js
mov
dec
pop
adc
jge
add
jg
addb
jp
movsl
inc
sbb
xor
xchg
and
ficomps
imul
sbb
cmp
mov
aad
popa
sbb
or
sub
or
mov
out
inc
inc
pop
inc
dec
xlat
adc
outsb
lds
and
sbb
idivl
jae
outsl
mov
jb
and
nop
nop
inc
cs
lods
cmp
inc
gs
arpl
pop
sbb
lds
leave
mov
mov
jecxz
pop
mov
js
insl
into
clc
test
inc
insb
jle
cwtl
icebp
enter
pop
inc
sbbb
nop
lcall
inc
jae
jno
aad
or
adcb
xchg
lock
adc
js
inc
add
push
xchg
and
and
roll
sbb
dec
ja
xor
mov
add
in
xchg
out
inc
xchg
inc
out
movsb
xor
imul
and
adc
psrad
adc
pop
outsb
inc
push
push
adc
add
adc
pop
cmp
push
jo
mov
outsb
dec
push
scas
lahf
xchg
jnp
shlb
add
add
mov
mov
adc
xchg
movsb
dec
adc
shll
or
push
adc
mov
add
or
or
mov
sub
fidivs
inc
jb
and
stos
add
add
outsl
mov
sub
bound
dec
push
or
inc
inc
jg
orl
push
jb
inc
fcmovu
add
inc
cs
fcmovu
shll
js
ljmp
repz
jo
push
mov
cwtl
sbb
mov
mov
movb
or
loopne,pt
xchg
mov
adc
imul
push
roll
inc
stos
cs
jmp
push
lret
andb
lods
pop
scas
ret
fimull
mov
icebp
inc
fisubl
in
js
sahf
lret
adc
and
inc
mov
xchg
and
lea
sub
or
jnp
test
mov
rolb
jge
xor
xchg
sub
add
mov
dec
movl
jne
and
xchg
push
jo
mov
gs
xchg
pop
xchg
xchg
add
xor
jge
and
cmp
inc
js
xor
push
sbbb
xchg
paddsw
jge
and
imul
outsb
ja
sub
xchg
ja
sbb
add
jne
cmp
and
cmp
xor
adc
outsl
push
push
insb
sub
popa
imul
lcall
adc
repnz
pextrw
dec
addb
dec
insb
dec
jno
xchg
arpl
jo
jo
and
outsl
inc
jo
dec
popf
cmp
pop
sub
lods
lds
mov
push
dec
sbb
cmc
nop
mov
lds
outsb
shll
adcb
mov
push
or
lds
cmp
mov
lock
fisttps
sbb
pop
outsb
cmp
ss
addr16
and
lods
mov
bound
push
cmp
clc
add
pop
lea
pop
push
or
lods
psrlq
mov
push
jns
fs
mov
outsl
push
sbbl
into
ja
outsb
rorl
lods
pop
jecxz
or
aam
mov
lea
arpl
adc
js
and
iret
or
fsubs
pop
popf
push
push
push
inc
out
adc
vmread
sub
ljmp
pop
scas
xchg
push
lea
xchg
dec
push
or
dec
jae
xchg
sbb
inc
push
pop
loope
or
jl
dec
xchg
push
pop
mov
and
pop
jo
add
jae
imull
int
imul
sbb
adc
pop
and
sub
or
pusha
sub
dec
ret
inc
mov
or
push
mov
sub
add
ss
sub
cmp
jno
cmp
mov
add
in
pop
in
inc
or
stc
cltd
test
fdivl
add
test
nop
push
mov
mov
push
jo
mov
xlat
add
fsubrl
pusha
jb,pn
popa
adc
jnp
imull
push
shlb
dec
mov
roll
ss
psubb
dec
rcrb
idivb
xlat
jo
stos
and
lahf
or
outsb
addl
xchg
and
and
add
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
and
inc
add
insl
inc
add
add
