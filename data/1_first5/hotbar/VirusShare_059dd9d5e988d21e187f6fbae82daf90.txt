divb
in
mov
mov
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
out
divl
jne
mov
or
call
xchg
push
pop
aas
in
adc
and
movl
dec
in
mov
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
pop
pop
mov
das
js
and
call
push
push
rcll
mov
mov
jp,pt
add
fistps
pop
push
push
push
push
xor
mov
push
mov
scas
and
mov
add
jmp
test
jne
pushf
or
push
jle
repz
adc
push
xchg
mov
add
iret
xchg
push
sbb
out
mov
jne
inc
sub
ret
mov
jmp
pushl
ja
cmp
jecxz
ret
lea
or
lock
dec
test
jg
add
pop
xor
sub
push
add
outsb
xchg
scas
adc
jg
filds
mov
add
inc
jne
sub
sar
inc
je
insb
jo
or
ret
push
repz
adc
insl
fists
mov
xor
jnp
xor
clc
mov
mov
mov
call
pushl
mov
cwtl
adcb
sarl
cltd
data16
cmp
jle
mov
andl
sbb
adc
xlat
cwtl
hlt
cs
ja
sbb
adc
xchg
mov
cmpl
add
pop
shr
or
ja
jl
adc
or
or
dec
out
imul
in
sbb
push
push
mov
or
int
push
call
sub
add
xlat
or
pop
arpl
call
ret
add
in
sbb
into
lahf
mov
adc
add
inc
push
sub
or
mov
mov
jbe
ret
ja
enter
or
xchg
adc
xchg
mov
adc
push
pop
lcall
popa
and
add
inc
dec
push
mov
dec
sub
ljmp
sbb
push
sub
add
scas
outsb
push
mov
aas
fadd
jae
push
stos
scas
sti
push
pop
pop
push
jno
pop
scas
dec
imul
add
pop
or
push
push
sbb
push
or
sub
add
mov
pop
cmp
push
mov
pop
aad
jp
aaa
ja
inc
pop
bound
adc
inc
lock
push
mov
cmp
or
rolb
or
sbb
push
clc
jge
insl
cmp
dec
pop
ljmp
push
hlt
mov
xor
mov
pop
ret
push
inc
shrl
pop
jae
cmp
int
inc
sub
inc
clc
ds
subb
or
xchg
daa
pop
push
jo
ss
push
sbb
xchg
or
orl
pop
adc
inc
test
adc
cmp
jg
mov
adc
adc
ret
shll
xorl
sub
fcompl
jmp
xchg
sbb
add
aas
mov
sub
push
mov
sar
push
pushl
cmp
ja
adc
sbb
add
push
mov
sti
add
adc
scas
and
xchg
jo
push
add
or
ret
icebp
cld
clc
sub
cmp
jle
mov
cmpl
or
push
add
loope
jmp
push
cmp
jge
xor
mov
add
pop
cltd
jge
enter
jmp
out
iret
mov
aam
cmp
mov
push
fidivrs
add
push
jne
jb
cmc
sbb
incb
add
xor
jbe
mov
call
jb
add
inc
addb
cmp
or
add
push
push
lea
fwait
mov
or
pop
sti
ficoml
xor
insl
int3
pop
hlt
into
mov
aam
add
cmp
fdivrs
cmpsl
mov
pop
adc
cld
fsubrs
mov
sbb
mov
ret
dec
lods
or
test
jle
cmp
mov
inc
jbe
push
inc
mov
add
pop
ja
sbb
push
mov
test
call
es
jns
sti
pop
fmull
fucomp
loope
mov
inc
jo
in
subl
popf
lock
jp
in
sahf
rorb
fadds
ret
and
adcb
prefetcht2
jbe
pop
and
and
cmp
and
cmp
scas
cmp
push
sar
push
push
adc
sub
in
cmp
jle
mov
out
mov
pushf
cmpl
je
push
cmp
cmp
jae
push
mov
push
cmp
inc
xchg
adc
shlb
pop
lret
add
sub
push
add
jb,pt
pop
add
xchg
pop
sub
fcoms
jnp
ljmp
je
cmp
aaa
cmp
fcoml
push
clc
icebp
negb
fidivs
jmp
xchg
call
add
sub
insb
or
cmpsb
imul
push
popa
cld
pop
xchg
out
cmp
jo
inc
sub
cltd
loop
dec
out
ret
aad
aaa
or
add
pop
pop
or
pop
lods
cli
push
xor
cmp
sub
lea
cmp
jne
push
mov
mov
push
push
add
adc
pusha
push
mov
mov
mov
mov
or
lcall
pop
dec
lret
sub
inc
mov
sarl
sahf
mov
fwait
mov
xor
loope
mov
movl
ja
dec
into
dec
testb
and
repnz
in
xchg
push
lret
add
sbb
ja
adc
mov
nop
xchg
add
mov
mov
lret
pusha
mov
mov
or
lret
xchg
lret
divl
mov
pushf
movsb
add
les
popa
xchg
push
xchg
sbb
jo
mov
push
aas
pop
dec
push
pop
pusha
sbb
repz
add
addl
or
out
lret
lea
pop
push
xor
scas
mov
xchg
pop
out
imul
pop
imul
add
mov
clc
add
push
dec
lret
xchg
js
lock
cmp
popf
lea
push
add
inc
imull
sub
outsb
xor
xchg
cld
mov
jbe
jbe
pusha
sub
nop
mov
leave
jle
jl
push
loopne
scas
push
jecxz
push
call
cltd
or
out
pusha
cmp
push
push
mov
test
inc
cmp
ret
js
sub
cwtl
dec
or
jne
add
shlb
addr16
mov
jno
mov
adc
xchg
fsubs
jo
stos
add
scas
inc
arpl
mov
and
jnp
stc
pusha
out
fdivrs
and
cmp
ret
mov
jecxz
mov
sbb
call
arpl
cs
outsl
mov
xchg
jne
add
or
inc
lea
or
cmpsl
fstps
sub
push
or
roll
or
inc
mov
mov
push
adc
or
sub
jle
inc
mov
xchg
dec
or
lock
cltd
lock
out
fbld
inc
ret
mov
cmpsl
pusha
aaa
ret
insl
adc
xchg
repnz
filds
ret
lea
loopne
push
pop
adc
xor
mov
push
add
test
sub
mov
sbb
mov
push
lock
inc
xor
and
mov
fistpll
js
or
ret
je
dec
je
push
adc
testl
adc
inc
xlat
inc
pop
loop
movsb
call
add
adc
pop
popa
sub
dec
jo
and
pop
add
jle
in
in
push
dec
mov
lahf
inc
jg
push
sub
push
cli
xor
xor
pusha
mov
add
and
sti
das
sti
popa
jl
stc
andl
sbb
sahf
lret
adc
mov
add
rcrb
pop
pop
jbe
lret
pop
fs
mov
rolb
add
xchg
call
stos
outsl
xchg
add
mov
clc
testl
sbb
or
dec
or
sub
or
fcmovu
js
and
adc
pop
add
fdiv
test
in
dec
fcoml
or
pushl
aas
dec
mov
fcomps
sar
inc
pop
xlat
ret
pop
mov
add
or
cmpb
jne
sbb
mov
or
jle
call
sbbb
mov
je
pop
push
clc
sbb
inc
pop
das
adcl
shl
dec
sub
xchg
scas
mov
cmp
jecxz
or
roll
push
sbb
adc
dec
cmpl
aaa
pop
sbb
dec
add
jp
dec
cmp
push
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jns
jne
dec
jns
mov
push
pop
xchg
xor
inc
xchg
movsb
xchg
lret
sub
and
andl
nop
into
or
mov
je
mov
push
icebp
into
scas
mov
and
push
xor
or
jp
and
das
pop
pop
pushf
sub
inc
inc
mov
mov
inc
and
loop
pusha
jmp
in
adc
leave
inc
jae
adc
daa
pop
repnz
sub
je
inc
je
cmp
cltd
sbb
xor
lahf
nop
icebp
std
mov
push
or
mov
xor
add
les
mov
sub
and
push
push
push
fcmovbe
pop
ljmp
lret
shrl
sbb
sbb
dec
incl
jl
cmp
mov
in
dec
xor
mov
in
insb
sarb
mov
clc
stc
shrb
or
pop
jbe
jne
dec
adc
adc
sbb
lods
cmc
test
push
loop
pop
add
sahf
push
xchg
jo
test
int
test
dec
add
push
mov
mov
mov
scas
dec
sti
fisubs
pop
mov
in
and
loope
pop
mov
inc
mov
fiaddl
call
push
mov
pushf
mov
adc
out
mov
lahf
lock
stos
loopne
inc
loop
push
shll
in
sub
cmp
mov
mov
sbb
mov
push
cld
das
cmp
cmp
mov
add
and
movl
jp
lock
fisubl
out
movsb
xor
test
aam
inc
aaa
mov
in
or
jo
popa
cmpl
lea
mov
call
faddl
pop
shlb
in
push
ljmp
mov
jmp
xor
push
pop
js
imul
je
in
sub
divps
and
or
je
mov
or
dec
and
les
je
jecxz
std
dec
sarl
sbb
mov
les
ret
push
sbb
neg
sbb
movsb
jmp
jae
ret
je
arpl
lods
xchg
xor
or
inc
lcall
push
fs
sahf
or
imul
mov
push
dec
cmpsb
in
mov
dec
xor
jns
clc
push
nop
nop
test
push
xor
ud2
je
adc
xchg
or
lods
add
push
mov
into
cmp
dec
outsl
pushf
fs
lea
jecxz
jns
mov
adc
jmp
int3
sub
lock
xor
aas
push
je
sub
sbb
loope
jo
fcoml
dec
out
fwait
mov
repz
je
shlb
scas
and
stc
mov
adc
pop
jae
stos
dec
movsl
test
xchg
inc
lcall
pop
cmp
xchg
fcoms
ret
sbb
movsb
cmp
nop
and
out
mov
int3
sbb
sbb
arpl
int3
xchg
pop
enter
and
enter
and
cmp
out
shl
sbb
xchg
mov
xchg
mov
mov
mov
add
mov
jle
pusha
sbb
and
sbb
jmp
ja
sub
jo
fdivl
scas
das
mov
ret
push
sbb
loopne
cmp
inc
xor
add
adc
mov
loopne
fdivr
adc
jmp
ficoml
xchg
mov
call
add
or
outsb
push
xchg
and
sbb
sub
lods
pop
inc
push
inc
adc
jns
es
ds
es
lret
inc
ds
cmp
out
fistpl
loopne
push
and
sarb
loope
and
and
shl
sbb
adc
mov
lea
xchg
dec
dec
inc
mov
inc
mov
xchg
push
mov
test
xchg
aas
insl
inc
mov
xchg
jns
sbb
pop
ret
and
outsb
pop
jmp
iret
mov
mov
loop
add
pusha
into
push
adc
mov
inc
mov
add
je
or
xchg
cmp
js
add
xor
pop
fs
fldenv
pop
jne
mov
fcmovne
push
xor
push
jmp
fdivs
and
adc
or
dec
push
mov
shll
or
add
outsb
inc
or
adc
xor
push
sbb
das
cld
clc
mov
fstpl
insl
sub
mov
mov
mov
push
scas
daa
pop
jbe
and
jl
mov
or
or
xchg
sbb
and
btc
xchg
pop
in
lret
adcl
pop
call
aaa
adc
clc
adc
sbb
adc
lret
test
loop
movsl
jno
ljmp
sbb
jne
cmp
into
adc
cmc
aaa
jecxz
adc
xor
cmp
sub
mov
adc
push
adc
imul
add
sub
sbb
insb
push
cld
pop
loop
inc
mov
neg
pop
dec
jne
pusha
xor
pop
jnp
daa
pop
sbb
inc
sbb
sbbb
push
or
add
xchg
sbb
popf
mov
sbb
add
sbb
jge
je
mov
mov
les
mov
andb
pop
nopl
mov
pop
stc
or
pop
fs
xchg
ret
testl
mov
push
cmp
je
or
je
xor
push
push
xor
shlb
jecxz
push
jmp
jg
data16
pop
cmp
in
or
repnz
adc
and
test
inc
cmpsb
jecxz
xchg
add
daa
add
or
or
add
bnd
fs
rcll
out
mov
cmp
or
jmp
es
jns
test
aaa
push
cmp
add
push
pop
in
cltd
sbb
test
stos
cmp
mov
iret
cwtl
pusha
cmp
movsl
lock
sub
int3
xor
xchg
and
adc
adc
pop
lret
add
es
jmp
add
sahf
lock
shrb
mov
mov
inc
shl
pop
shlb
sar
mov
and
test
out
push
and
and
push
sahf
rclb
pop
and
or
jo
loopne
lock
cmpsl
and
xchg
cmpsb
std
daa
cmp
rcr
add
mov
je
aas
decb
push
pop
pop
mov
dec
sbbb
orl
sub
cltd
test
test
fidivrs
adcl
fldcw
pop
push
in
inc
push
ljmp
sub
push
adc
test
add
in
inc
lret
ret
test
fldenv
aad
or
mov
push
stos
add
adc
data16
inc
pop
out
pop
xorl
notl
iret
fdivs
mov
adc
test
push
lret
mov
lods
mov
loope
hlt
and
push
loope
fsubs
jne
adc
push
shlb
rcrb
out
and
mov
adc
sarb
mov
lret
xchg
sbb
movsb
sub
mov
cmpsl
xchg
fs
push
add
call
jl
mov
and
inc
out
push
push
sbb
add
xchg
push
pop
fdivrs
cmpsl
test
test
call
push
enter
rcr
popf
clc
cmp
cmc
mov
mov
test
das
sub
ret
shlb
sub
sbb
mov
stc
cmpb
dec
negl
pusha
or
xor
cmp
xchg
cmp
out
jne
jge
pushl
jnp
xchg
inc
fdiv
testb
or
gs
fcmovb
cmpl
movsb
inc
xor
sub
jno
loopne
cmp
and
and
mov
and
xor
stc
dec
dec
xchg
and
xor
push
adc
addl
cld
ret
sbb
inc
stc
add
and
and
inc
mov
sub
add
and
test
sub
data16
and
mov
xchg
hlt
adc
jne
imul
inc
inc
fdivs
ds
xor
mov
pop
dec
rclb
dec
daa
pop
mov
sbb
mov
mov
sbb
cwtl
mov
loopne
out
test
and
pop
imul
mov
je
test
inc
sub
sti
pushf
mov
pop
out
cwtl
js
jge
jge
adc
je
push
adc
loopne
push
push
push
dec
adc
pop
push
xor
in
mov
or
jne
push
addr16
sub
xor
cmp
jne
cmpsl
mov
mov
jmp
cmp
pop
sbb
xor
enter
pusha
cmp
add
push
inc
sbb
mov
jmp
mov
repz
dec
mov
mov
add
sbb
stos
adc
and
and
test
fwait
dec
loop
out
add
ljmp
fadds
pop
push
xchg
in
iret
adc
and
popf
sbb
movsl
mov
in
dec
pushf
jl
loopne,pn
mov
lock
mov
daa
xsha1
cmpsb
iret
cmp
arpl
mov
or
into
or
les
mov
jno
add
loopne
dec
in
or
adc
mov
or
inc
out
pushf
push
push
or
in
cld
jge
sub
shll
jle
fstpt
nop
cmp
jne
or
je
sub
cs
adc
mov
sti
int3
mov
mov
sub
add
push
es
inc
movb
sub
test
pop
jbe
mov
movl
cmpb
push
jne
or
xchg
and
inc
sti
cld
add
push
in
add
mov
adc
sub
call
lahf
je
xchg
sti
je
or
pop
cld
sub
loop
out
inc
out
add
inc
loopne
addl
or
inc
or
mov
mov
or
js
lock
adc
iret
shrb
xchg
fldcw
pop
and
push
sub
xor
jo
sub
dec
pop
push
mov
mov
or
les
or
das
push
inc
int3
add
mov
mov
fcomp
mov
push
mov
loopne
insl
sub
mov
test
add
lock
out
mov
ss
jmp
jge
imul
push
jmp
pop
jae
mov
int3
jmp
push
xchg
mov
in
add
adc
jg
dec
scas
mov
bound
fsub
pop
push
orb
jo
cmp
xchg
sub
das
lock
push
mov
mov
or
push
mov
xor
inc
mov
inc
pop
lock
jle
mov
fwait
mov
push
cld
mov
stos
mov
jl
loop
ret
jle
sarl
ljmp
pop
sbb
pop
add
jl
aas
test
jp
push
fsubl
cmp
je
or
mov
mov
push
mov
clc
pop
js
stos
enter
int3
mov
fwait
push
add
clc
add
mov
pop
movsl
dec
dec
lcall
jmp
imul
jo
sbb
sti
or
in
pop
lea
ds
adcb
pop
jle
into
xchg
loope
sub
shrb
or
sbb
adc
fdivp
push
xor
in
inc
fldenv
xlat
in
rcll
cltd
cmpsb
sahf
imul
push
rcl
push
xchg
dec
xchg
or
insl
pop
rorl
mov
je
cmp
add
ret
aaa
dec
test
push
add
int3
add
xchg
xchg
jge
mov
or
inc
cmp
repnz
cmpsl
in
shlb
add
movsb
ljmp
inc
test
or
or
adc
xlat
nop
dec
pop
and
fdivl
jo
gs
scas
inc
jns
rolb
test
pushl
lds
loop
lods
pop
cld
loopne
subb
icebp
sbb
inc
pop
dec
fcomps
cwtl
or
loope
adc
enter
leave
sbb
cmovl
or
push
or
mov
sbb
fbstp
xor
ret
xor
ret
mov
mov
jp
mov
fcompl
clc
push
mov
inc
in
and
sbb
imul
pusha
sbb
lods
inc
mov
sbb
dec
cmp
dec
pusha
movmskps
pop
xor
mov
sbb
push
call
and
and
pop
orl
mov
cmpb
push
fs
iret
or
add
or
repnz
in
call
push
inc
into
or
jge
out
mov
xchg
stc
orb
subb
out
mov
xchg
mov
test
xor
or
je
xchg
pop
sarl
or
adc
enter
into
xchg
mov
js
sub
adc
sti
mov
pushf
jle
sbb
adc
cmp
add
xor
mov
mov
cmovns
mov
int3
inc
and
lret
out
rclb
sbb
inc
fcoms
lock
loopne
in
mov
aam
xchg
xor
inc
mov
pushl
dec
js
mov
test
cmp
jecxz
dec
testl
or
ret
push
push
inc
aam
leave
bound
movsb
mov
das
mov
arpl
jle
mov
or
arpl
sti
add
mov
pop
data16
loopne
add
push
gs
pop
fsubrs
insl
sbb
sub
push
xor
adc
pop
or
mov
push
mov
and
out
inc
mov
jle
or
lods
inc
push
push
aaa
sarl
push
cmp
jg
mov
mov
jmp
rcr
push
mov
outsb
pop
jns
bound
sbb
enter
pop
pop
and
scas
push
insl
insb
or
or
adc
sbb
xor
cmp
outsb
sub
in
sub
dec
subl
sbb
mov
sbb
pop
xor
cwtl
dec
jg
ret
push
pop
jmp
mov
push
add
xchg
and
rcll
or
hlt
test
adc
add
notb
sub
mov
and
cmp
decl
mov
lea
cmp
jae
mov
incl
aad
in
xchg
xor
inc
add
cmp
mov
mov
int3
call
inc
add
loop
jge
jle
adc
add
xor
inc
cld
imul
add
je
ss
add
push
cmp
jg
and
push
inc
push
and
mov
js
lea
cmp
in
out
out
divb
add
mov
sub
jp
fwait
popa
xor
int3
add
lea
movsb
adc
push
push
jb
sti
add
or
push
push
adc
mov
loop
sub
xchg
add
hlt
inc
add
mov
xchg
or
sub
inc
pusha
sbbl
mov
dec
popl
cmpsl
cmp
jbe
xorb
movsl
shll
and
mov
clc
or
fdivs
and
dec
hlt
jg
in
shrl
lock
push
dec
pop
add
jno
add
mov
or
xor
add
inc
xor
scas
or
int3
scas
sar
mov
xor
jecxz
mov
ds
push
pop
xor
jns
neg
adc
hlt
jl
repz
push
cmp
push
push
fadds
test
jne
lock
ret
sbb
cwtl
test
xor
or
mov
mov
mov
sub
push
xchg
dec
xchg
mov
xchg
mov
mov
lea
fucom
lea
jbe
mov
int3
scas
test
ss
shrl
scas
mov
add
cli
rep
aam
push
push
pop
inc
xor
xor
pop
jmp
enter
and
or
enter
scas
stos
xor
pop
and
push
mov
loopne
jo
or
cmpsl
xor
pop
jae
dec
mov
shll
test
mov
insb
add
cli
inc
push
mov
cmpsb
and
fwait
mov
ljmp
in
and
jae
jb
mov
or
add
xchg
sub
push
in
cs
outsl
clc
scas
fadds
cmp
jne
cmp
je
jbe
movb
ja
cmp
or
and
sbb
add
insb
cmc
mov
xor
mov
andb
push
out
roll
push
mov
or
push
in
rolb
je
inc
sbb
pop
mov
mov
and
loop
lcall
jne
movsl
xchg
insb
jp
or
pop
insl
ljmp
cmp
js
jbe
sbb
jg
lcall
hlt
subb
pop
add
js
iret
std
mov
or
hlt
aam
insl
sub
push
cmp
adc
pushl
mov
inc
roll
jp
jle
leave
orl
loop
cmp
jmp
frstor
lea
add
fs
lock
and
adc
loopne
test
imul
jns
sar
pop
and
adc
clc
add
push
shlb
aam
push
add
sbb
enter
add
fidivrs
and
adc
dec
push
in
jo
rclb
push
popf
add
loop
xor
js
xor
leave
add
fildl
ficoms
pop
inc
dec
sbb
dec
xchg
test
push
mov
add
sub
inc
notl
shlb
sub
addl
add
pop
hlt
sub
sar
fbstp
or
sbb
je
jle
mov
pop
pop
mov
insb
sub
mov
ret
insb
cld
lods
test
cmp
lea
jbe
mov
push
jp
test
test
push
test
or
push
or
in
mov
pop
add
mov
sbb
cli
sbb
inc
jae
add
insl
popf
or
dec
add
pop
inc
mov
mov
or
add
addl
ss
es
inc
loopne
add
adc
or
mov
adc
and
cmp
inc
add
adc
loopne
scas
cmpsb
cmp
lea
shl
mov
xor
mov
scas
mov
rcll
push
cmp
shr
sbbb
das
push
push
outsl
js
push
and
or
sbb
inc
cmp
jl
and
or
out
add
sub
incl
ret
out
xchg
mov
push
lock
pop
fildl
popf
or
pop
add
imul
push
adc
xchg
xchg
inc
leave
inc
xor
pop
adc
int
or
cmp
jmp
adcl
add
sahf
xor
pushf
mov
dec
leave
inc
jo
fnstcw
xchg
xor
or
pop
and
adc
inc
and
add
adc
inc
push
jo
in
pop
push
jo
fdivrp
add
call
push
sbb
push
fadds
cmp
js
add
shll
add
mov
inc
mov
jmp
add
enter
push
and
inc
fsubr
push
and
inc
inc
and
dec
ds
adc
mov
sbb
mov
jno
movsl
rolb
aam
and
pop
leave
push
xorl
insb
cmp
repz
mov
add
adc
adc
sbb
or
fwait
hlt
cmp
movsb
xor
mov
mov
and
lcall
mov
scas
adc
fsts
adc
mov
test
mov
push
clc
loope
sub
xchg
mov
dec
xlat
icebp
inc
lods
xor
lock
dec
loopne
test
popf
or
dec
inc
inc
leave
scas
adcb
jmp
das
xchg
clc
cmp
sub
sbb
dec
mov
add
adc
rorb
inc
sbb
or
and
jb
mov
push
adc
mulb
pop
or
sbb
mov
loopne
xchg
mov
iret
inc
inc
or
xchg
and
push
lods
push
dec
loopne
jns
ret
pop
xchg
sti
cs
adc
addr16
push
mov
leave
gs
imul
or
push
and
push
inc
and
pop
inc
sbb
enter
cmp
and
insl
add
js
push
sub
mov
cmpl
shrl
push
test
lea
add
xchg
ja
fiaddl
adc
and
mov
adc
cmp
popf
cmpl
push
cmp
in
mov
xor
int3
dec
in
shrl
pop
negl
ret
push
mov
add
cmp
add
shrb
or
jbe
sbb
inc
js
aaa
jb
mov
xchg
dec
sub
sub
pop
push
push
adc
pusha
mov
cmp
cmp
bound
sti
or
sub
dec
je
mov
je
sub
sbb
fsts
test
ss
sub
sub
jmp
mov
mov
aaa
push
push
fiadds
sahf
leave
jmp
jmp
pop
add
pop
jne
iret
popa
xchg
mov
jmp
push
add
push
mov
xor
push
jmp
and
dec
inc
loopne
fnstsw
fcomps
xchg
or
pop
push
mov
jg
pushf
call
cltd
mov
mov
in
fdivs
and
push
fistps
popa
or
xor
push
push
daa
pop
jmp
and
pop
into
lea
and
and
sti
arpl
sbb
into
jmp
sti
imul
cmp
je
cmp
pop
inc
jmp
inc
dec
shrl
dec
sbb
leave
adc
cli
imul
jle
mov
sbb
fstpl
imul
jmp
sbb
and
sti
in
fsubrp
sbb
je
pop
push
jmp
xchg
inc
test
scas
and
cmp
fldt
push
jbe
in
es
cmp
repz
imul
inc
dec
decl
or
stc
aad
add
pushw
and
icebp
inc
sbb
inc
sbb
or
pusha
lea
jecxz
pop
mov
add
sub
or
popa
mov
fmuls
xchg
add
fsubp
cmp
sbb
cmp
add
std
mov
mov
pop
repnz
push
pop
push
lea
push
sbb
call
shll
lea
or
lret
dec
cmp
nop
mov
dec
mov
xor
pop
imul
push
jle
add
ja
int3
or
outsb
fcoms
movl
xor
pop
pusha
lret
adcl
imul
push
sbb
push
je
xchg
mov
push
or
pop
push
push
add
jl
inc
xor
add
popf
push
js
stc
xchg
test
sub
cwtl
insb
add
fadds
dec
adc
dec
adc
mov
dec
adc
in
rcrl
add
int3
jno
das
and
ss
ret
and
pop
adcb
test
inc
cltd
call
inc
inc
insb
mov
pop
lock
xchg
fidivl
aas
out
cwtl
or
add
adc
insb
inc
dec
or
jl
pop
jae
dec
lcall
push
mov
dec
xor
shrd
push
in
push
dec
pop
in
inc
pop
ret
lret
in
inc
xchg
inc
or
inc
call
sub
xchg
ret
add
cmp
je
cmp
sub
loopne
push
xor
aad
cmp
push
add
push
cmp
xor
cmp
jl
cmp
fstps
add
imul
inc
adc
inc
jl
sbb
add
jecxz
push
mov
jg
cmp
pop
dec
lret
repz
rclb
add
pop
xchg
pop
mov
jl
inc
push
aam
das
in
nop
inc
jo
pop
inc
sbb
icebp
jmp
roll
pop
cmpsb
xor
aam
xchg
clc
and
fildl
cmp
aam
or
mov
sbb
sti
sub
push
popf
rcr
xchg
pop
fdivr
ret
fsubs
dec
dec
push
mov
dec
rorl
xor
mov
cmp
jne
popa
cmp
push
in
pop
add
mov
xor
adc
divb
iret
je
lea
push
loopne
add
mov
es
jo
cs
das
mov
sbb
cmp
pushl
call
push
or
fistps
loope
mov
mov
shll
les
shrb
les
scas
imul
scas
idiv
lock
div
push
dec
je
dec
dec
icebp
lahf
les
lahf
in
jge
fisubs
sub
sub
in
mov
dec
lock
jmp
sub
int
sbb
in
cmp
push
mov
add
imul
inc
dec
cmp
mov
aam
aam
push
lds
sar
fdiv
lea
in
lea
rep
out
in
mov
movsl
mov
or
mov
rcrl
inc
frstor
shrl
sbb
dec
neg
sbb
insb
and
dec
mov
pop
mov
mov
push
push
in
sbb
lcall
cmp
or
push
test
mov
adc
mov
sub
push
rorb
leave
and
push
mov
in
sahf
sub
sbb
mov
adc
pushf
mov
test
cltd
or
mov
adc
add
inc
and
jno
dec
jg
icebp
push
adc
punpckhdq
inc
call
xchg
cli
fdivr
aaa
and
pop
push
pop
test
inc
push
adc
pop
add
jae
mov
lock
ret
add
idivl
outsl
cli
lods
or
fs
cmpl
jne
pushl
addl
jnp
inc
sbb
push
cs
cmpsb
adc
xorl
popa
outsl
fcoml
in
jmp
sbb
sbb
fmuls
push
or
orl
add
mov
ret
aas
movsl
or
cmp
pop
cmp
je
cmp
scas
add
ja
icebp
sbb
xchg
ret
push
lcall
je
or
mov
add
shll
sub
shll
mov
dec
inc
inc
shll
xor
adc
push
jne
movb
fs
fucomip
jmp
cmp
jne
xchg
movsl
fnstcw
test
jecxz
xor
pop
mov
cmp
push
mov
ret
dec
aas
mov
jecxz
mov
mov
mov
ljmp
sub
xor
and
jge
and
test
xor
std
or
popf
sub
mov
sbb
mov
insl
nop
or
push
sbb
push
es
adc
mov
jns
mov
xor
test
in
lods
nop
pop
cmp
iret
push
adc
add
rorl
pop
push
mov
push
push
add
push
test
scas
iret
push
rorb
or
xchg
movsl
mov
std
int3
ja
inc
rclb
popa
cmpsb
and
movsl
mov
add
push
push
xor
adc
jp,pt
push
or
out
mov
or
or
adc
enter
push
lret
out
ja
jl
xchg
andb
mov
sbb
test
xchg
outsb
dec
jg
push
rcrb
das
cmpb
pop
lcall
aaa
pop
inc
ficomps
xorb
mov
imul
mov
fsubrl
xchg
adc
dec
nop
pop
inc
mov
sbb
xchg
adc
push
push
aaa
movsl
loopne
jae
mov
dec
push
jo
mov
lea
add
jns
adc
add
push
add
jno
fs
inc
negl
popa
mov
dec
ja,pt
rol
cwtl
lea
sbb
addr16
push
lds
and
sub
dec
adc
fsubrs
pop
fmuls
call
addr16
dec
or
enter
xor
mov
adc
or
adc
lea
xchg
das
push
jle
add
loopne
aaa
push
pop
aam
inc
cld
cmp
push
push
mov
push
inc
fdivs
cs
sub
push
sahf
std
aad
push
mov
adc
sbb
stos
mull
push
insb
repz
mov
jmp
fisubrs
add
stos
add
push
cli
or
push
lods
add
mov
shll
insb
push
lret
sahf
shlb
push
call
jmp
lret
push
sbb
pop
cmp
rclb
adcl
sbb
loopne
ret
or
out
push
jno
arpl
test
adc
sbb
and
sarb
andb
mov
divb
test
cltd
mov
lea
jge
cld
negb
rol
or
and
into
sbb
out
pop
mov
mov
fcomip
cmp
jge
adc
idiv
push
mov
push
push
mov
outsb
lea
ds
xor
idiv
sub
in
cli
mov
or
test
jg
adc
ss
push
push
sbb
movsl
sbbl
mov
pusha
scas
mov
pop
push
jbe
mov
jge
add
movsl
inc
push
adc
jecxz
popl
cld
in
or
out
dec
fstpl
push
pop
decl
aam
sti
sub
rcrb
loopne
je
cmp
lea
cltd
idivl
inc
push
into
jp
xor
popa
xor
in
and
js
idivl
popa
jg
fs
lret
jl
movl
adc
test
push
in
adc
mov
cld
ficoms
xchg
in
sbb
stos
mov
inc
incl
jl
out
xor
pop
xchg
sub
cmp
or
jne
imul
insb
mov
std
out
ja
hlt
fildl
mov
test
jns
faddl
inc
sbb
or
mov
fdivrp
mov
mov
mov
mov
mov
add
pop
add
les
imul
add
push
shlb
or
clc
fidivl
jmp
sub
xchg
cli
mov
movl
mov
pop
jne
pop
pop
movb
push
or
jle
sub
mov
test
stos
in
mov
add
mov
add
lret
mov
cmp
inc
lea
sbb
pop
das
cmpsl
je
pop
jne
push
ja
fstl
mov
mov
imul
pop
sub
cmp
dec
or
shrb
dec
fcoml
pop
pop
pop
xchg
xchg
pop
into
pop
leave
neg
pop
dec
int
call
jnp
mov
xor
imul
and
cltd
add
shr
push
shll
repnz
xor
mov
mov
adc
xor
sbb
dec
jns
mov
pop
jne
xor
mov
aam
sbb
inc
jne
sti
mov
adc
movsb
jl
adc
xchg
punpckhdq
leave
pusha
pop
leave
push
xor
xor
jnp
add
ret
std
sub
xchg
lea
push
mov
push
ret
inc
mov
dec
add
and
lea
or
fwait
test
or
pop
movsb
mov
lea
push
push
orb
ret
inc
adc
js
or
inc
sub
rcr
aad
mov
sub
roll
roll
push
jle
jae
add
dec
pop
pop
insl
inc
sub
or
sbb
xchg
pop
bound
in
fs
sbb
xchg
aam
mov
lret
push
lods
subb
lods
jmp
pop
add
stc
push
int3
out
pop
pop
ds
cld
jno
clc
and
inc
ret
mov
and
pop
xchg
int
or
in
and
xchg
sub
mov
jb
aaa
and
mov
pop
mov
and
loopne
les
sbb
push
inc
clc
push
mov
data16
inc
incb
adc
push
add
push
add
sub
sub
clc
setb
test
in
adc
sub
cmp
xchg
je
xor
pop
jl
outsl
dec
adc
data16
push
lea
push
mov
addb
jle
je
push
loope
scas
and
pop
pop
lcall
insl
xchg
addb
add
inc
dec
push
jo
dec
dec
mov
data16
mov
hlt
data16
mov
and
lret
out
or
add
shrl
in
mov
inc
or
das
push
scas
pop
js
mov
loop
mov
and
xchg
imul
incb
mov
inc
test
pop
lock
sub
pop
jmp
jo,pt
jg
push
add
sahf
or
sbb
out
fwait
sub
jg
negl
pusha
sbb
add
and
adc
xor
mov
push
int
or
jmp
test
cltd
cwtl
adc
sub
jmp
out
aam
fcoml
pop
loopne
mov
je
ss
insb
sbb
jns
xchg
add
add
cmp
pop
mov
and
dec
inc
xor
add
xchg
jle
daa
or
or
xchg
mov
loopne
sbb
aam
out
js
sahf
inc
add
lahf
push
das
inc
fdivl
sbb
sbb
push
bound
jmp
xorl
aad
bound
aaa
push
sub
pop
adc
mov
cmpsb
add
or
mov
jb
xchg
mov
out
clc
pop
push
in
sub
ss
dec
sahf
fmuls
addl
jmp
fmuls
xlat
insb
aam
xor
mov
xor
pushl
dec
incl
pop
inc
loopne
int3
add
jne
add
sahf
jae
imul
sub
xchg
lock
jge
les
push
stos
test
dec
gs
jle
push
call
jne
lods
jo
mov
adc
mov
push
mov
and
push
pop
pop
je
stc
test
sbb
pop
test
pushf
test
das
lcall
and
lock
mov
sub
push
or
jnp
sbb
or
cmp
test
movsb
outsl
mov
push
push
outsb
aam
pop
inc
in
and
mov
push
mov
or
xor
adc
and
rcll
cmpsl
adc
popf
adc
mov
push
cmp
jmp
dec
stos
mov
add
in
test
jmp
and
cmp
enter
nop
adc
negl
jne
mov
stc
jo
push
bound
je
clc
loop
sbb
xchg
pop
pushl
lock
mov
mov
jne
sbbb
andl
dec
cmp
mov
jg
mov
sbb
test
sbb
xor
sbb
ja
adc
mov
jmp
dec
mov
sub
imul
and
mov
push
ja
lea
orl
inc
xor
shlb
mov
jle
mov
jmp
leave
js
cmp
jge
mov
mov
mov
cmp
sbbb
fistps
jle
push
inc
imul
mov
and
roll
std
mov
fsubrs
pop
xchg
in
sbb
popf
push
fcomps
fisttpll
or
push
mov
mov
sbb
xor
jne
aam
pop
sbb
push
jl
cld
data16
dec
mov
cmp
in
mov
loope
mov
sub
inc
sete
adc
loope
and
add
sbb
arpl
shrb
stos
push
or
lods
mov
add
insl
aas
or
adc
mov
mov
jge
mov
dec
adc
enter
add
mov
mov
ljmp
dec
shl
shl
dec
add
sbb
push
gs
loope
icebp
cmp
loopne,pt
pop
push
pop
js
add
jo
add
ret
lods
pop
jns
movsl
imul
sti
push
dec
lock
pop
loope
sub
adc
test
mov
call
dec
mov
jl
insb
fs
aad
jo
std
mov
add
cmp
fsts
adc
iret
ss
and
add
inc
call
cmp
push
xchg
push
pop
nop
pop
push
or
jle
cs
xchg
test
add
sub
ss
mov
and
or
mov
outsl
mov
jne
inc
lcall
pop
loop
push
in
adc
lcall
pusha
fmul
in
adc
lods
xchg
enter
ret
xor
popa
lock
in
repz
in
aaa
daa
in
call
xor
lock
and
fdivs
xor
ljmp
pop
jl
arpl
add
mov
and
nop
dec
adc
add
jno
daa
xor
fdiv
dec
enter
or
jle
test
add
mov
mov
xor
bound
add
test
rorl
or
je
jb
pop
jecxz
aam
or
aaa
add
push
bound
cmp
add
push
aam
sub
push
fwait
jae
call
in
aam
bound
arpl
add
jl
xchg
cmp
xor
inc
cld
rorb
mov
mov
hlt
add
enter
cmp
jo
jmp
daa
mov
xor
daa
xor
addb
je
adc
inc
das
js
push
je
add
xchg
lock
or
sub
lock
adc
les
aaa
lods
add
xor
in
jmp
mov
jmp
mov
shll
add
sub
add
push
ja
imul
jne
cs
or
jp
inc
roll
movb
adc
or
sbb
inc
lods
pop
loope
mov
add
jo
insl
pop
push
movb
test
xorb
mov
js
ja
pop
clc
jg
mov
push
adc
cmpsb
add
scas
sbb
aas
or
pop
mov
outsb
ret
inc
in
cli
mov
rolb
fsubl
lds
or
jle
jno
insl
cmp
adc
pop
pusha
pop
mov
js
test
add
cld
jg
push
xor
xor
cmp
je
or
jbe
movzwl
mov
arpl
roll
jne
loop
cmp
cli
loopne
or
push
lea
push
lahf
cld
push
in
pusha
gs
sub
push
or
ss
adc
pop
pop
push
push
inc
adc
subb
shlb
adc
add
xchg
pusha
test
data16
shlb
sbb
cmpsb
nop
add
xchg
push
ffreep
xor
add
cltd
mov
rolb
loop
fwait
mov
jmp
xor
mov
and
push
sbb
and
adc
clc
sbb
xor
jbe
mov
aam
inc
push
push
aas
test
cs
jo
cmpsb
fidivrl
xchg
daa
in
sub
sub
xchg
in
adc
fisubrs
mov
push
leave
ret
xchg
push
sarb
push
test
adcb
jle
icebp
jl
push
sbb
add
cmpsb
add
out
add
mov
xchg
pop
push
pop
loop
or
mov
xchg
clc
fdivrl
addr16
movl
hlt
mov
js
inc
stc
xchg
dec
sub
pop
push
fwait
xchg
xor
sub
dec
inc
jb
lea
push
xor
call
push
les
cmp
stc
outsb
leave
das
insl
push
sub
inc
xchg
cmp
and
sbb
stos
ret
rorb
cld
jns
stos
jb
mov
sbb
and
aaa
loop
or
daa
xchg
add
xchg
xchg
cmp
cmp
or
sub
cmp
mov
mov
aam
adc
js
mov
push
pop
sbb
jbe
cmp
icebp
mov
push
pop
test
aam
fnstcw
jmp
rcrb
sbb
sarl
dec
push
test
aam
adcl
insb
stos
add
mov
mov
in
xchg
mov
mov
insb
push
add
jns
mov
imul
aaa
adc
jns
popa
add
jae
push
daa
inc
imul
pusha
or
ja
daa
cltd
add
pop
das
nop
dec
pop
fimull
adc
push
lret
mov
ret
push
jnp
mov
dec
cmp
xor
std
add
add
push
pop
add
add
cmpb
push
adc
sub
or
mov
ret
inc
test
pop
add
sbb
out
xchg
mov
mov
jge
sbb
inc
pusha
sub
movl
mov
lea
iret
mov
adc
inc
inc
jnp
jge
inc
adc
add
add
pop
adc
mov
jnp
lea
fisubs
int
es
add
dec
pop
and
adc
push
jg
pusha
lock
push
xchg
mov
push
xor
or
sub
orl
rorb
mov
pop
or
int3
xor
adc
test
ficomps
adc
inc
or
clc
cs
leave
push
and
sub
movsl
add
mov
cmp
aas
out
data16
cmp
je
movb
sub
and
rcll
mov
cmpsl
aas
pop
or
test
daa
mov
mov
aad
push
outsb
repz
mov
out
dec
or
pop
push
jmp
push
jge
push
adc
clc
push
setne
fbld
mov
mov
fucom
cltd
pop
add
lahf
cwtl
orb
imul
js
and
stos
lea
or
jo
mov
push
or
inc
imul
push
or
enter
adc
xchg
or
mov
sub
test
test
mov
adc
out
and
inc
xor
adc
mov
fstl
mov
aaa
gs
cmp
mov
iret
repnz
mov
dec
fiaddl
jns
les
mov
cmpl
arpl
faddl
mov
lret
shll
lods
dec
xchg
mov
or
mov
js
scas
mov
roll
inc
aas
pushf
mov
adc
adc
sbb
mov
jo
adc
lret
cmp
sub
aam
mov
add
sti
and
or
cmp
fwait
icebp
and
xchg
dec
mov
fsub
add
cmp
test
pop
enter
inc
mov
mov
or
cmc
add
popa
repz
clc
lret
jne
and
sub
adc
fnsave
pop
sti
in
sub
or
adc
sbb
hlt
nop
sbb
inc
adc
lock
mov
xchg
or
sbb
adc
jl
adc
movsb
cltd
nop
mov
nop
mov
movsl
fiadds
pop
in
add
push
sbb
dec
cmp
mov
incl
and
add
pop
test
dec
mov
xor
test
push
pop
adc
out
cmp
push
int3
les
aam
push
orl
sbb
mov
mov
xor
add
and
pop
mov
loope
mov
rorb
mov
and
mov
pop
pop
mov
ljmp
mov
push
mov
out
lods
les
jo
inc
cmp
cwtl
in
sbb
enter
rorl
push
or
roll
rorl
adcl
neg
push
mov
das
ss
testb
push
mov
inc
cmp
cwtl
add
test
lahf
out
test
fs
outsw
mov
push
xchg
jae
add
repz
mov
pop
dec
je
cmp
ret
subb
loopne
pushf
mov
cmp
xchg
iret
push
jb
add
adcb
pop
loope
or
adc
xchg
mov
mov
fmull
stos
insl
movsl
jbe
and
sub
mov
and
pushfw
mov
push
add
lea
lea
push
push
push
or
scas
enter
jo
push
es
in
incb
fldz
pop
aad
mov
pop
mov
mov
cmp
jno
xchg
inc
cmc
mov
or
pop
loopne
add
and
sub
cli
mov
add
insl
sub
xchg
mov
roll
les
stos
mov
push
aam
add
sbb
orl
sarb
stos
adc
imul
aam
adc
inc
mov
lret
adc
push
adc
mov
add
inc
out
test
test
pop
mov
push
testl
mov
push
add
jno
jmp
ss
loopne
mov
repnz
inc
rclb
outsl
and
push
xchg
jne
add
lea
aas
adc
jnp
fs
loopne
pop
in
mov
lret
cs
jnp
push
outsl
mov
scas
or
enter
movsb
mov
jae
js
aaa
sbb
cmpsl
mov
adc
add
out
jo
inc
lret
rorb
out
movsl
xor
nop
das
bound
fwait
dec
insb
jne
fisttps
pop
mov
fidivs
sbb
jns
fs
imul
add
popa
dec
push
jns
shl
mov
pushf
mov
add
xchg
push
dec
fisubs
jl
loope
add
pop
fistl
sbb
dec
or
andl
xchg
xchg
or
lock
adc
mov
test
jae
daa
cmp
sub
pop
ret
add
orb
shlb
push
add
mov
mov
mov
test
mov
sti
dec
mov
pusha
test
hlt
test
insb
mov
or
stos
xchg
inc
rclb
adc
sbb
push
cmp
outsl
cmp
xchg
mov
outsb
fneni(8087
push
mov
mov
loopne
pop
xor
xchg
and
movl
xchg
push
fdivs
pop
loope
testl
je
mov
aam
sbb
adc
sbb
mov
jle
mov
pop
popa
mul
cmpsl
xchg
mov
cmp
dec
loopne
lahf
insl
je
je
mov
dec
pop
pop
sub
pop
push
inc
aam
cmp
imul
pop
and
sarb
cwtl
sbb
xor
lods
pop
rcll
mov
inc
adc
sbb
sbb
sbb
xor
or
pop
inc
cs
push
jno
mov
mov
notl
cmp
pop
cmp
je
out
or
movsb
push
or
out
adc
ss
and
sbb
inc
movsl
rorb
out
mov
and
jo
lea
arpl
pop
pusha
test
adc
and
and
aam
and
lods
call
das
testb
cmp
mov
push
sub
roll
ja
je
es
pop
sub
sbb
pushf
es
sbb
mov
addr16
sub
sub
ucomiss
push
lcall
stos
test
mov
jge
std
inc
xlat
jp
outsl
dec
loopne
cmp
inc
cs
aam
mov
sbb
inc
xchg
xchg
das
fcoml
sub
adc
sbb
pop
or
push
adc
cmp
int3
xor
jno
jmp
push
mov
out
xor
das
out
push
push
sub
insl
fsubl
and
and
rolb
repz
lds
imul
sub
pop
push
cmp
popf
call
repnz
stos
jle
dec
call
or
pop
xchg
jne
pushf
add
ret
add
loopne
ret
pop
jo
or
pop
loope
mov
mov
inc
mov
sub
adc
or
pop
int
movsl
xchg
lock
push
pop
adc
add
inc
mov
ljmp
push
push
mov
leave
mov
mov
mov
push
and
or
dec
icebp
mov
pushf
lea
pop
and
fadd
jmp
sbb
mov
inc
in
push
ret
add
cmp
mov
xor
out
adc
or
lock
xchg
jns
loop
add
dec
mov
pop
or
rcrb
leave
mov
push
lret
or
fcoms
mov
adcl
mov
ss
pop
ret
ljmp
cmp
xchg
or
cli
jbe
mov
or
or
pop
dec
sub
cmp
ja
fisttpl
rclb
or
into
add
scas
int3
xchg
ret
pop
pop
lret
or
ja
xchg
jl
fstpl
lret
add
int3
push
jae
push
repz
jle
push
add
and
push
mov
es
add
mov
xor
icebp
mov
sbbl
cmp
jae
or
push
popa
mov
ret
pop
nop
mov
xchg
test
mov
pop
push
push
mov
mov
sbb
adc
rorb
scas
add
add
pop
movb
cmpsb
call
push
sub
adc
mov
lcall
loopne
jecxz
add
mov
faddl
pop
sahf
sbb
dec
lret
aas
add
loopne
icebp
add
outsl
rcr
dec
xor
insb
insb
loopne
inc
mov
ljmp
dec
hlt
sub
push
push
xchg
ja
pop
sbb
loopne
sbb
enter
or
add
and
sub
push
jbe
mov
pushf
adcl
loope
fmuls
inc
dec
sbb
scas
and
xor
pmulhuw
fnstenv
mov
pusha
rolb
fdivs
add
inc
test
xchg
mov
or
mov
mov
adc
clc
out
or
fwait
sub
bound
mov
sbb
xchg
test
push
pop
add
lock
pop
repnz
cmc
cmc
mov
repnz
or
dec
in
cmpb
adc
inc
inc
and
cmp
test
nop
pusha
das
cltd
xchg
mov
push
pop
imul
scas
jecxz
sbb
insl
mov
pop
faddp
xchg
xchg
inc
sbb
sarl
inc
lock
iret
xlat
mov
inc
imul
xorb
add
inc
push
cld
cmpb
add
inc
add
insl
mov
push
xchg
add
lods
sbb
mov
pop
rorb
or
fcomp
jmp
je
cmpb
addr16
jmp
mov
jns
push
rclb
cmp
mov
dec
loope
clc
je
rcrl
fistps
loop
lock
mov
push
add
adc
push
inc
push
cmc
dec
xor
push
push
setb
jge
add
xchg
xchg
aam
push
ficompl
mov
sub
cmp
jl
mov
ret
xor
sarl
pop
sub
push
jle
iret
in
sbb
jne
push
jno
push
mov
add
push
lea
push
xor
sub
out
xchg
out
sub
cmp
je
jmp
dec
cmp
mov
cmp
xchg
clc
xchg
mov
movl
adc
push
sar
sbb
test
icebp
jmp
data16
jne
xchg
push
mov
push
xchg
psrlq
jg
inc
mov
fldcw
fisttps
dec
sub
mov
push
dec
or
in
out
adc
add
jmp
aad
aam
xchg
sub
and
push
out
xchg
push
sub
loopne
jmp
or
rolb
adc
movsl
mov
pop
xor
fsubrs
push
ja
test
cmp
movsb
into
and
and
push
ds
cmp
imul
push
dec
add
or
out
das
mov
mov
ljmp
or
aaa
faddl
inc
or
ret
or
mov
pusha
jne
fistpl
mov
imul
inc
and
aas
loopne
sub
je,pt
sbb
jbe
push
mov
mov
cmp
mov
mov
ret
xor
mov
add
inc
or
pop
pushl
scas
mov
mov
rcrb
je
enter
mov
add
push
push
dec
add
inc
lcall
test
push
sub
dec
and
subl
js
lcall
sub
sub
mov
mov
inc
xorl
cmp
dec
jb
add
in
adc
out
aaa
mov
xorb
jno
adc
mov
cwtl
xchg
pop
push
adc
xchg
loop
loopne
or
insb
cmp
xor
loope
mov
and
push
into
ret
dec
pusha
rol
inc
dec
ljmp
cld
daa
jecxz
push
cmp
je
xor
mov
mul
seto
jmp
fbld
neg
or
push
pusha
add
scas
int
dec
push
jmp
cmpsb
xchg
xor
mov
push
xor
test
aas
jbe
scas
push
dec
mov
adc
mov
aad
pop
mov
inc
add
jecxz
xchg
push
sub
inc
or
push
dec
shll
adc
aam
or
and
inc
pop
cmp
adc
andl
or
enter
aam
inc
movsb
roll
fs
adc
inc
xchg
push
mov
jmp
xchg
mov
repz
mov
loopne
cmp
jl
jmp
test
vpackssdw
and
leave
add
nop
inc
or
jmp
jg
cmp
pop
lock
adc
jmp
cmp
je
sbbb
mov
cltd
test
jle
lock
sbb
cmp
jne
je
andl
adc
add
cmp
fwait
and
js
inc
out
jae
mov
mov
adc
fs
loope
faddp
jmp
xchg
std
push
add
pop
push
movsb
xchg
cli
jmp
mov
rcrl
push
ss
jno
cmp
push
inc
cmp
jae
fsubs
add
mov
mov
pop
ret
sub
or
jg
subl
loop
jne
and
jl
nop
rclb
pop
int
loop
push
ss
push
inc
jmp
pop
je
mov
push
xchg
imul
fisubl
sub
lcall
xor
pop
push
add
mov
loopne
xor
je
jno
lock
or
clc
push
mov
push
imul
inc
mov
dec
cmp
rclb
push
je
jg
outsl
ss
jne
jbe
and
ja
rorl
cs
mov
mov
mov
ret
dec
mov
inc
shl
jmp
push
jle
jg
fs
test
dec
jns
mov
cmc
add
fwait
lret
cmp
out
jo
lods
dec
or
clc
dec
pop
in
push
imul
popa
cs
cmp
jle
mov
jmp
mov
or
mov
hlt
cmpsl
fisttpl
push
mov
xchg
inc
sbb
jg
mov
push
push
pop
adc
arpl
adc
dec
in
les
mov
dec
sub
sbb
sub
fs
or
adc
or
inc
and
jno
stos
jmp
daa
out
pusha
add
sub
jge
pusha
add
sbb
sub
xor
or
dec
inc
pop
loop
jo
push
mov
jl
mov
add
pop
shlb
int3
lea
push
xchg
xor
sti
xchg
push
xchg
movsb
jne
and
and
outsb
pop
add
testl
iret
mov
dec
push
test
and
adc
push
push
arpl
dec
clc
pop
in
js
push
sar
mov
popa
sub
iretw
add
imul
imul
cmpsb
ja
ret
or
inc
jp
push
bound
das
add
adc
push
add
push
sub
mov
neg
addl
ret
mov
cli
jp
or
mov
lock
jne
test
push
push
je
inc
jmp
jmp
mov
xor
pop
mov
push
lds
push
popf
or
les
ret
cmp
mov
movl
orl
xchg
add
sub
adc
and
jnp
jp
xchg
cltd
mov
popf
sbb
dec
mov
addb
inc
pop
orl
xchg
xor
dec
mov
andb
add
aaa
jno
dec
adc
or
sbb
cwtl
rcl
or
movsl
push
int3
sub
mov
pop
dec
lock
add
pop
mov
mov
loopne
icebp
inc
add
mov
loopne
pop
sub
or
or
pop
cmp
pop
clc
inc
adc
testb
fisubrs
or
cmp
sbb
pop
add
mov
mov
jmp
push
shl
data16
inc
push
je
inc
aad
push
mov
stos
aam
dec
js
jl
adcl
fidivs
fstps
inc
xchg
adc
pop
dec
jae
push
add
push
xchg
xor
adc
pop
jg
pop
push
add
sbb
pop
push
or
movsl
or
pop
sub
mov
adc
push
pop
popf
in
dec
lahf
mov
fsubrl
or
sub
imul
dec
into
movsb
jmp
adc
push
gs
push
push
hlt
cmp
mov
repz
or
jae
add
add
fsubp
test
mov
pusha
test
sub
daa
xor
pop
push
jge
or
dec
adc
xchg
cmpsb
lods
scas
inc
add
jecxz
rcll
or
push
movsl
mov
push
lea
mov
outsl
sbb
and
bound
xor
inc
in
orl
fwait
dec
mov
andb
cld
repnz
pop
add
push
popf
dec
roll
iret
insl
mov
add
jecxz
shrl
lret
add
shlb
xor
out
mov
mov
dec
inc
jmp
inc
outsb
sub
mov
adc
cld
rcl
lods
out
and
dec
and
sbb
mov
adc
add
dec
cmp
pop
sub
sbb
adc
dec
add
mov
lds
fidivs
and
imul
adc
jl
insl
push
cmp
jbe
lds
add
mov
imul
mov
add
mov
or
xchg
sbb
adc
or
mov
fwait
xor
pop
cmc
xchg
xor
popa
cmp
sbb
or
jbe
in
push
cmc
and
scas
pop
insb
xor
dec
ret
lahf
out
sub
pop
fcom
push
mov
shll
lea
loopne
inc
mov
es
cs
add
sbb
hlt
inc
pop
pop
pop
cld
push
dec
xor
js
mov
movb
fadds
adc
loope
push
cmp
sbb
adc
outsl
sbb
jae
mov
xor
movsl
mov
outsl
and
daa
in
imul
mov
jmp
sbb
xor
jge
pop
sarl
add
dec
push
xchg
outsl
or
or
enter
and
movsb
sub
popf
add
cmp
push
cmpsl
push
adc
push
in
cltd
sbb
insl
faddl
ror
jno
test
mov
loop
mov
xor
cmpl
adcl
loopne
inc
or
cmpsb
dec
push
xchg
fucom
arpl
enter
pop
rcrb
cltd
mov
sbb
add
sub
inc
add
mov
bound
lcall
pop
pop
pop
dec
sahf
add
daa
sbb
mov
sub
lods
mov
test
sbb
jb
mov
int
sbb
cmpsb
dec
stc
inc
lcall
or
iret
ret
sti
faddp
shl
jo
and
dec
sub
push
ret
fldt
loope
or
inc
inc
pop
mulb
lcall
sbb
pop
aad
mov
sub
and
adc
pop
inc
push
and
add
and
std
mov
cmpsl
and
andb
xor
ret
dec
adc
xchg
inc
or
adc
adc
jmp
add
lahf
adc
pop
push
int3
xchg
pop
mov
xor
jbe
shll
or
icebp
and
or
data16
and
adc
add
js
ret
push
dec
adc
dec
pop
inc
incl
pop
and
sbb
enter
mov
push
loopne
and
xchg
inc
mov
mov
cmp
scas
or
sbb
add
outsl
push
push
daa
add
xor
icebp
sub
push
mov
pop
test
mov
add
mov
in
test
sbb
mov
fadd
push
xor
jnp
mov
jb
sub
clc
js
fildll
in
mov
ret
push
fisubs
mov
add
xchg
sbbl
jp
or
jne
adc
push
push
popa
jg
paddd
add
push
addr16
nop
cltd
and
mov
sar
ss
loop
test
xchg
data16
push
add
sub
mov
xchg
mov
sti
mov
insb
or
jecxz
sub
dec
je
xor
push
add
sub
test
insb
mov
cmp
loope
jo
inc
insb
hlt
clc
or
ret
cmpb
mov
xchg
add
call
or
add
mov
pop
cmp
mov
mov
loope
inc
push
cmp
sbb
pop
fsts
lods
pop
dec
std
mov
adc
add
and
push
add
cwtl
inc
mov
es
in
fs
cs
sub
je
rorl
push
test
adc
xchg
inc
loope
push
lods
leave
cmp
push
shlb
or
repnz
xchg
mov
xor
imul
aam
mov
sbbl
jbe
loope
mov
inc
mov
sbb
scas
mov
add
inc
mov
aam
ffree
sbbl
push
iret
mov
jle
je
fmull
popf
mov
out
stos
xor
inc
jnp
popa
adc
pandn
mov
cmp
mov
pop
cmp
addb
xor
dec
insl
insb
add
flds
mov
and
add
mulb
sub
sbb
out
add
idivb
dec
jnp
mov
xlat
or
sbbl
cmp
mov
xchg
inc
cmp
xchg
push
sbbl
dec
pop
push
frstor
mov
add
xchg
add
stos
call
xor
and
out
xor
scas
sub
jl
push
xor
push
add
mov
pushf
add
js
push
cmp
loopne
es
and
insl
xchg
xlat
push
adc
loopne
push
mov
adc
nop
jge
push
push
adc
mov
or
int3
mov
jno
loope
mov
sbb
insl
xor
sub
xor
fdivs
dec
imul
cwtl
jmp
js
jae
pushl
jge
add
pop
in
add
loope
dec
or
out
pusha
xchg
aaa
jnp
orl
push
push
ret
bound
je
shrl
rcrb
push
inc
mov
cmp
or
add
ret
lcall
pop
cwtl
test
cmp
es
dec
dec
out
xor
xchg
daa
shlb
and
mov
cmp
les
loop
shrb
jb
aad
addr16
testb
cmp
in
xor
xor
jle
push
inc
xchg
add
loopne
add
dec
lods
movsl
or
push
icebp
jmp
fdivrs
out
pushf
pop
mov
push
inc
sub
lods
gs
cmp
inc
loopne
pushf
or
mov
les
dec
fdivs
push
and
fsubr
aam
out
rolb
mov
hlt
push
pop
into
jbe
inc
jle
pop
nop
jl
dec
add
sub
pop
dec
lcall
jle
out
add
test
cmc
dec
xor
dec
dec
roll
xchg
cmpsb
jge
rclb
dec
insb
push
push
push
sbb
je
lcall
iret
aas
daa
cmova
sub
jo
cmp
cmp
dec
rorl
cmp
cmp
xchg
add
sub
aas
call
insl
lds
sub
aam
in
or
pop
pushl
xor
pop
ja
inc
mov
inc
xor
enter
xchg
xchg
cmp
das
rorl
incl
cmp
and
adc
push
addb
and
sbb
inc
and
sbb
pop
adc
pusha
cmp
sub
jmp
test
orl
fisubl
mov
xor
and
xchg
mov
sub
dec
sbb
push
call
ror
dec
dec
cmp
mov
xor
ljmp
add
insb
je
mov
mov
mov
or
fistps
loope
cmpb
xlat
sbb
sub
movsb
sbb
sbb
or
inc
pusha
mov
lret
push
rorl
cmp
inc
push
jmp
scas
test
clc
sahf
dec
pusha
cld
mov
inc
jmp
lea
mov
mov
roll
stos
aad
jecxz
insl
and
dec
add
inc
add
push
xchg
mov
aad
sbb
pop
and
rcll
js
call
pop
call
dec
in
jno
lea
lea
cmp
and
sbb
and
imul
and
sub
push
fimuls
mov
insb
daa
or
cmp
stc
dec
jmp
cld
or
jmp
push
je
call
mov
psubsb
mov
subl
fldl
jnp,pt
cmp
mov
xchg
lret
jbe
adc
xchg
jo
mov
mov
mov
xorb
adc
imul
inc
and
out
add
mov
fnsave
in
out
mov
sub
sti
orl
lods
call
adc
or
int3
mov
push
mov
cmp
stc
imul
mov
xor
fadds
movsb
add
mov
inc
dec
out
pop
mov
mov
xchg
andl
dec
aas
mov
clc
fdivr
roll
cmp
aam
dec
ret
mov
jmp
cmp
cmpsb
pusha
or
sahf
dec
mov
leave
jl
jmp
sti
pushf
mov
mov
pop
dec
xlat
scas
sub
popf
jb
mov
ja
push
jmp
or
rorb
scas
push
movl
add
inc
dec
popf
lock
sbb
sbb
inc
cmp
push
sbb
inc
mov
sbb
imul
fwait
subl
jae
repnz
jge
and
add
mov
ret
jnp
sbb
jp
andl
xor
fisttpl
sub
aad
fbstp
fimuls
mov
jno
adc
in
push
or
rorb
push
dec
jne
push
es
jo
mov
clc
adc
enter
push
and
cmc
xor
ret
pop
stc
dec
psadbw
and
aam
ficoml
adc
pop
loopne
in
scas
aaa
cmp
je
xchg
lcall
das
xchg
divb
mov
xchg
mov
or
jge
sub
jle
mov
dec
jae
mov
xchg
daa
xor
pop
push
arpl
dec
mov
lea
dec
push
adc
icebp
out
inc
xchg
ret
outsb
mov
sub
mov
cmp
mov
in
and
ja
xchg
cmp
je
bound
inc
fs
pop
and
mov
cmpps
push
inc
or
ss
dec
sbb
push
mov
xchg
jo
cld
adcl
movsb
add
addl
push
and
mov
lock
jo
xor
push
cmp
inc
je
loop
inc
push
and
push
or
adc
add
sub
ds
je
fwait
mov
push
call
adc
jge
mov
shlb
add
mov
dec
push
mov
sbb
mov
int3
or
call
scas
mov
xlat
cmp
pop
push
xlat
add
fnstcw
test
jo
je
popa
sub
orb
sbb
dec
sbb
push
cmp
mov
push
iret
into
stos
jle
nop
cld
xchg
shr
and
push
je
add
fildll
jns
shrl
jo
daa
andl
imul
add
adc
ret
pop
fcompl
sbb
mov
xchg
pop
sbb
cmp
pusha
mov
push
inc
lcall
lea
sbb
xor
rorl
adc
mov
fdivr
xorb
adc
adc
loop
mov
xchg
xchg
iret
sbb
test
dec
jns
lods
and
xor
jle
bound
push
cmp
cmp
xchg
jbe
push
mov
adc
aaa
movsb
aad
test
xchg
or
into
push
and
cmp
inc
lods
test
sub
xchg
sub
jbe
xor
xor
imul
cmp
jge
push
or
ret
dec
xor
add
push
push
and
sub
adc
pop
inc
and
dec
js
mov
in
not
adc
ret
pop
sbb
dec
add
push
mov
pop
or
jns
xchg
mov
mov
jmp
sbb
dec
movsl
add
insb
adc
sarb
sub
and
cmp
jge
or
mov
or
jno
add
fdivrs
test
bound
roll
sti
sbb
add
imul
sbb
push
ja
xor
or
mov
popf
leave
lret
pop
mov
sar
mov
test
enter
es
shll
mov
mov
adc
or
dec
adc
dec
push
mov
or
fimull
pop
xchg
pusha
xchg
scas
ja
push
lret
adc
fldcw
ss
js
sahf
cmp
fisttpl
pop
jae
repnz
rorl
les
add
daa
lea
push
add
add
out
sbb
push
dec
out
mov
xchg
sbb
rcrl
je
imul
popf
push
adc
js
incb
fsubl
stos
push
xchg
cmpsb
mov
sub
lods
or
fadds
push
fdivrl
aam
inc
adc
call
xor
int
sub
mov
std
gs
daa
imul
mov
mov
xchg
xor
je
cmpl
xor
lret
dec
push
dec
inc
inc
and
jae
lret
sarb
int3
mov
orb
bound
pop
pop
shl
in
push
add
mov
push
jge
xor
pop
testl
inc
dec
jbe
rcrl
xchg
fmull
sub
xor
inc
fistpl
pushf
in
push
mov
lock
test
cmpsb
mov
push
je
xchg
cli
subl
sbb
test
test
sbb
pop
cwtl
adc
adc
js
push
sbb
lock
push
je
incl
inc
sub
jns
and
mov
lods
jns
push
dec
xor
lods
push
cmp
aam
dec
and
inc
sbb
dec
inc
or
cwtl
addl
sbb
pop
push
pop
inc
sub
cli
inc
mov
lea
push
and
arpl
pop
xor
push
lea
cli
pop
in
aaa
sti
sbb
fcom
sbb
cld
pop
adc
std
xchg
sub
xor
lods
mov
addl
je
mov
xlat
sub
push
and
movsb
mov
subl
cmp
daa
leave
mov
add
pop
adcl
mov
test
dec
pop
sbb
dec
mov
fsub
cmp
loopne
rorb
cmp
pusha
pop
pop
cmp
mov
aas
dec
cwtl
sub
add
ds
jmp
mov
or
inc
repnz
adc
fldl
xchg
hlt
push
aas
push
filds
leave
leave
and
cli
insb
cmp
pop
xor
mov
or
or
add
add
mov
mov
aad
gs
call
push
aad
cmp
jge
cmp
movsb
pop
xchg
dec
dec
mov
cmp
mov
cmp
stc
mov
xchg
out
dec
and
jno
and
cmp
imul
jl
shlb
or
insl
outsl
inc
sub
and
adcb
pop
add
rcll
mov
jecxz
xchg
dec
inc
fidivrs
dec
out
pop
scas
loopne
inc
jns
adc
in
or
push
pop
and
inc
xchg
adc
scas
mov
inc
or
xchg
cmp
adc
adc
add
cmpsl
insl
mov
or
mov
add
insb
cmpsb
xor
loopne
sub
fwait
roll
mov
fstps
dec
push
adc
xor
or
dec
in
aaa
dec
pop
add
sub
add
xchg
aas
movl
mov
dec
pop
mov
cmp
or
push
sti
push
pushf
pop
cmp
mov
cmpsl
test
sbb
pop
notb
fsubl
addb
and
push
sub
and
xchg
and
and
jb
orb
push
gs
xor
rolb
mov
or
sub
add
icebp
push
fcmovnbe
jo
int3
js
pop
sub
mov
daa
int
jge
fimuls
jno
or
aaa
sub
nop
stc
mov
pop
and
cld
filds
cltd
adcl
jo
cmp
js
xchg
imul
sub
rolb
lret
popa
loopne
js
dec
nop
out
nop
push
bound
cltd
out
das
adc
adc
and
mov
outsb
and
je
mov
and
lea
fs
add
rolb
xor
and
fwait
cmpl
adcl
pop
pop
test
jo
ss
inc
aaa
sub
or
orl
cltd
fs
jae
mov
int
adc
jno
inc
cmc
cmc
mov
stos
das
in
lret
out
je
bound
dec
loopne
xor
sub
xor
pop
loop
cwtl
movsb
sbb
inc
pusha
outsl
jne
lea
push
pop
pop
orb
push
ret
loope
mov
mov
xor
mov
ficoml
or
icebp
adc
cmp
je
mov
mov
or
ja
push
test
subps
lods
mov
sub
dec
lcall
sbb
imul
jge
test
sub
ja
inc
movsl
add
dec
out
mov
cmp
or
pop
mov
pop
inc
push
and
jns
pusha
imul
cmp
testl
pop
movb
fsub
or
lock
xchg
jle
mov
mov
fmuls
sub
lahf
in
shrl
pusha
mov
bound
cs
add
popf
inc
fldl
inc
pop
mov
fistpll
cltd
jnp
and
loopne
xchg
aad
je
cmpl
jnp
jl
xor
lea
aas
fucomip
lea
xchg
fmull
rcrb
rcll
sahf
xlat
or
lahf
add
inc
call
negb
pusha
popf
or
rolb
adc
imulb
xor
iret
xor
cmp
push
cmp
mov
mov
mov
je
and
std
popa
pop
push
push
test
dec
lea
jo
loop
aad
mov
mov
cli
sub
xor
mov
sub
mov
cmp
mov
lea
or
testl
lods
cwtl
andl
pop
sbb
sub
push
hlt
popa
mov
lret
popf
aad
jne
cwtl
cmp
xchg
add
stos
in
test
mov
adc
sbb
dec
dec
adc
or
xchg
adc
roll
jmp
ss
push
pop
xchg
insl
fistl
jge
lea
lret
and
ja
fldenv
or
mov
mov
jae
mov
popf
or
cs
in
pop
and
jno
and
xchg
lret
mov
ret
outsb
popf
xchg
lea
test
or
mov
and
sbb
push
faddl
push
push
sbb
sbb
xor
lds
adc
rcrb
and
in
sub
aas
inc
xor
pusha
fsubr
lea
mov
and
int
cmp
clc
sbb
push
sbb
daa
loopne
add
add
and
pop
fs
and
test
and
and
sarb
pop
mov
iret
sbb
enter
and
inc
sbb
push
push
jne
push
cmp
xor
es
mov
dec
lds
je
or
xchg
daa
cs
das
lods
xchg
sub
daa
sub
sub
pop
insl
cltd
xchg
and
sub
sub
test
sub
adc
sub
sub
sbb
push
insb
les
adc
mov
stos
mov
jnp
dec
push
push
sbb
or
imul
testb
xor
lods
jae
sub
mov
fwait
mov
or
xchg
iret
add
jle
es
xor
adc
cmovp
sub
push
push
dec
add
xchg
or
or
sarb
testl
xchg
lea
fnstenv
push
adc
or
add
cltd
nop
inc
add
cwtl
mov
or
add
out
out
xchg
push
inc
sahf
hlt
in
cmp
add
pop
hlt
or
ret
test
loop
push
and
sbb
in
out
fld
push
insb
push
push
movl
js
xor
sti
repz
or
or
aaa
and
sbb
xchg
out
in
sbb
mov
lock
ret
in
imul
mov
and
xor
push
jae
xlat
adc
lock
jp
dec
jle
loope
insl
mov
push
add
mov
js
inc
add
into
faddl
jbe
jl
dec
xlat
pop
adc
pop
adc
add
dec
les
cmp
jne
and
cs
or
xor
roll
lock
out
cmp
je
mov
fildl
xor
stos
inc
add
scas
jne
jp
dec
or
mov
dec
scas
test
xor
adc
ds
or
jge
stos
stos
adc
ret
mov
cmp
mov
int3
aaa
loope
daa
push
pop
test
fcom
sbb
ret
fisubs
or
sarb
pop
cmp
je
inc
xlat
adc
lock
xchg
jp
push
cld
xchg
push
lds
fbld
add
mov
dec
or
movsb
rol
push
sbb
add
stc
inc
add
dec
add
ja
mov
push
je
and
int3
in
out
pusha
pop
pop
call
sub
or
xor
jl,pn
or
push
popf
fwait
dec
fmuls
or
fs
inc
sub
movsb
or
add
sti
rol
pop
jbe
je
adc
sub
push
xchg
xor
icebp
inc
lahf
sarl
sub
mov
jo
cwtl
jmp
lods
notb
lea
add
adc
mov
or
xor
aas
les
adc
sbb
cmp
ja
and
icebp
ds
test
fdivrs
je
add
adcb
push
or
or
dec
mov
xor
nop
out
movups
mov
xchg
mov
sbb
aam
sbb
jmp
sub
and
sub
addr16
arpl
loop
adc
punpckhdq
test
ja
scas
mov
xor
mov
jge
mov
mov
cld
mov
fidivrl
hlt
add
aaa
add
xor
xlat
aaa
add
es
sub
push
dec
or
xchg
push
arpl
or
cmp
movl
lcall
cmp
cmp
aad
xor
sbbl
add
adc
jno
negl
and
popf
lods
es
adc
shlb
dec
popa
cmp
imul
imulb
dec
mov
unpckhps
inc
inc
pop
pushf
xor
sbb
ret
cmp
jle
sub
shlb
pavgw
and
adc
pusha
cmp
sub
inc
pop
mov
mov
push
sahf
rolb
insb
ret
rol
es
fs
out
in
in
and
push
je
mov
and
dec
cmp
jns
push
inc
push
pop
inc
jmp
dec
xlat
mov
mov
sub
dec
sub
pop
mov
xor
jne
in
bound
pop
mov
mov
add
cmp
in
or
push
sub
or
xor
cmp
adc
xchg
sbb
in
lds
add
add
and
sbb
stos
mov
out
pop
add
nop
jns
cmp
mov
mov
inc
lcall
pop
movl
and
insb
mov
add
inc
mov
sysret
xor
push
xchg
or
or
or
sub
nop
push
or
add
or
inc
sub
add
mov
gs
lcall
pop
ret
and
sarb
jo
sti
sahf
xor
or
xchg
xchg
dec
inc
push
and
cmp
test
pusha
sbb
push
dec
fsubr
cmp
sar
enter
jae
inc
add
outsb
mov
into
sbb
pop
je
es
loopne
ret
pop
cltd
cmp
aas
sub
fisubs
rdmsr
loope
js
test
pop
cltd
js
jbe
inc
and
dec
inc
les
fsubr
inc
lret
jle
cltd
add
mov
stc
int3
inc
popf
xadd
jo
jmp
and
sub
stc
or
bnd
shrb
dec
sbb
sub
add
push
xor
xor
ss
mov
mov
popf
test
push
shlb
cmp
dec
movups
sbb
mov
popf
add
add
sbb
xacquire
rolb
add
hlt
addb
frstor
ret
not
inc
lods
add
pop
mov
cmpsb
mov
mov
lea
fistl
mov
xor
or
xchg
xchg
inc
or
mov
sbb
cmp
sub
and
or
adcb
insb
sti
loop
add
xchg
lea
and
or
mov
jmp
pop
push
push
orb
adc
pop
inc
pop
andl
adc
rcrl
and
xchg
dec
sbb
mov
xor
jo
loopne
cmp
jmp
fildl
or
xor
inc
add
aad
add
in
fdivs
cld
add
push
inc
adc
or
mov
ret
mov
in
inc
stc
das
clc
mov
push
xor
jns
mov
xor
and
push
xor
rolb
adc
leave
add
xchg
cmp
sbb
inc
mov
ret
dec
mov
lock
inc
inc
mov
dec
pop
xor
adc
push
jmp
bound
adc
pop
adc
cmp
pop
dec
xor
ret
sub
mov
movlps
mov
inc
bound
cmpsl
mov
sti
add
stos
insl
xorb
push
inc
lds
inc
sub
lret
lahf
inc
inc
test
adc
and
dec
sbb
or
cmp
push
xchg
cmp
call
xchg
and
fs
cld
mov
jo
dec
mov
mov
pop
enter
es
push
js
and
cmp
fsubrp
xchg
or
pop
lea
pop
push
push
xor
divl
dec
sbb
push
mov
dec
push
push
cmc
inc
stos
popa
sub
add
test
je
stos
incl
aaa
imul
mov
in
fistl
out
adc
add
xchg
es
and
imul
adc
push
dec
pop
or
add
inc
nop
or
add
test
adc
add
fdiv
fdivl
push
sub
ss
adc
and
dec
lcall
dec
repnz
sbb
enter
in
loope
dec
dec
adc
loop
sbb
jnp
ds
sbb
adc
ss
jmp
jmp
mov
pusha
inc
movsl
jne
push
mov
add
pusha
xor
lock
test
add
mov
aas
cmp
mov
xor
fisttpll
pusha
lret
dec
sbbl
mov
js
sbb
cli
dec
push
cmp
jge
jg
adc
inc
sub
clc
sbb
loope
or
fwait
out
aad
sbb
add
pop
pusha
ret
insl
pop
cmp
push
cmp
mov
sbb
mov
sbb
inc
push
fcmovu
push
addb
js
lea
dec
xor
fs
sbb
sub
push
xor
or
scas
test
lret
add
xor
push
stos
or
rol
add
adc
add
int
fiadds
movsl
js
rcrl
lods
mov
out
add
adc
sahf
and
cs
sarl
add
xchg
adc
stos
mov
pop
hlt
ret
xchg
adc
and
ret
add
push
je
cli
dec
fistpll
add
sbb
mov
sbb
inc
push
adc
int3
dec
inc
xor
or
das
lret
inc
inc
push
mov
add
neg
fldl
push
add
inc
icebp
push
inc
lcall
ret
push
fwait
add
add
pop
jnp
and
aaa
aaa
shlb
aaa
xor
pop
push
fwait
sbb
or
scas
icebp
int3
orl
sub
enter
xlat
popa
stc
push
lcall
out
mull
jmp
movl
cwtl
or
sbb
jbe
movsb
fstpt
lods
sbb
mov
jp
das
icebp
cmp
dec
jmp
push
mov
mov
outsb
mulb
mov
sbb
aas
fxsave
push
jo
addl
and
loop
xchg
adc
out
popf
lods
push
push
xchg
push
fistl
enter
call
rcr
sub
imull
scas
pushf
call
mov
cmp
adc
dec
loope
dec
insb
jo
mov
mov
push
and
jns
xchg
sbb
icebp
or
enter
push
adc
xor
out
add
dec
add
xor
add
sarl
add
mov
nop
adc
test
lret
stc
mov
call
sbb
repz
out
sbb
sbb
mulb
xor
xor
mov
fldl
jns
js
pop
or
sbb
mov
rorb
enter
add
call
sbb
dec
movsl
jns
jg
xlat
inc
push
add
or
mov
pusha
inc
test
mov
add
scas
or
add
enter
shrl
mov
lds
inc
shll
mov
js
mov
mov
lret
test
add
mov
iret
push
cmp
scas
lock
mov
add
add
jl
push
jo
adc
shr
repnz
icebp
or
or
mov
adcb
test
jecxz
xor
fiaddl
sahf
aam
add
or
test
test
pop
push
jns
push
cld
or
jnp
mov
and
out
pop
mov
jge
cmp
mov
test
sbb
sbb
in
inc
into
icebp
cmpsb
aad
or
sbb
in
or
pushl
push
jmp
shlb
aas
jno
push
loope
push
cs
notl
aam
leave
push
dec
rol
mov
sahf
js
push
jno
xchg
push
lods
das
stos
mov
fmulp
inc
ss
sbb
in
or
push
out
jno
dec
xchg
jl
xor
loope
sbb
and
pop
and
and
ljmp
outsb
push
loopne
pop
adc
pushl
sarb
jl
imul
and
lahf
lods
dec
push
sahf
add
orl
movsbw
inc
fsts
pusha
or
jne
out
mov
or
je
adc
fwait
mov
inc
push
pop
add
mov
mov
hlt
push
inc
add
sbb
inc
data16
cmp
ds
pop
rcrl
push
fmull
daa
cmp
sbb
or
pop
jne
loope
sbb
adc
imul
dec
sbb
jmp
jmp
pop
int3
push
add
inc
push
pop
cwtl
xchg
das
push
mov
aam
daa
sbb
ret
mov
and
dec
jg
lea
fdiv
add
in
mov
inc
out
or
out
repnz
xchg
sbb
imul
bnd
cmp
mov
and
aam
int
or
mov
ljmp
mov
out
sub
push
aaa
jg
jmp
das
sub
inc
jb
cmp
xor
xchg
les
or
sub
lds
sbb
shlb
push
and
loopne
pop
cmc
rcr
xchg
loop
and
mov
mov
in
ret
add
insb
fsubs
xor
aaa
push
pop
mov
sub
pop
cmp
sbb
jae
sbb
test
stos
mov
aam
jne
arpl
int3
pop
sbb
push
cltd
test
xchg
pop
sbb
xor
je
stos
std
pusha
mov
mov
push
fiaddl
sti
and
adc
test
mov
adc
fwait
divb
pop
mov
fcomip
les
ret
sub
rcrl
jo
adc
aaa
jp
fists
add
hlt
cmpsb
mov
and
lock
neg
adc
sbbb
fimull
test
push
pop
sub
xchg
or
or
into
into
clc
sub
popa
cmpsb
mov
int
or
mov
ret
cmp
mov
or
add
leave
clc
cmp
and
adc
repz
fnstenv
sub
fs
in
mov
cmc
jnp
je
xor
iret
test
lret
or
in
pushf
inc
adc
arpl
dec
scas
das
dec
fucomip
rcrb
imul
push
add
movl
sbb
push
pop
mov
test
hlt
mov
decl
adc
lcall
mov
mov
movsl
pop
adcb
clc
or
incb
push
or
test
inc
xchg
and
cmp
adc
add
xchg
cmpb
insb
and
jno
xchg
icebp
fld
adc
cmp
out
jg
sti
inc
xor
jne
or
mov
movl
push
adc
push
adc
inc
dec
inc
and
movl
rcl
cmp
xor
shlb
pop
js
insb
pop
xchg
js
sub
leave
push
das
and
int
push
push
test
xor
lods
shll
cmp
lods
or
in
in
adc
sbb
jne
movsl
add
xchg
cwtl
sub
mov
pusha
pop
inc
jns
pusha
or
jecxz
dec
inc
push
orps
pop
xchg
sbb
mov
hlt
inc
inc
ret
sub
sub
mov
push
lods
fwait
aam
clc
sub
xchg
stc
add
incl
sar
push
add
push
push
push
push
popa
in
ret
jle
xor
mov
cmp
ljmp
and
xchg
mov
jmp
cmp
jne
loop
nop
ret
inc
push
jne
andl
adc
mov
ss
movsb
cmp
lcall
dec
push
nop
xor
dec
push
and
test
jo
out
sub
dec
sub
cmp
inc
mov
icebp
cmp
adcl
add
and
mulb
stc
addl
sub
ds
sti
add
js
cmp
movsl
das
scas
jge
jmp
jbe
inc
cwtl
lcall
orl
hlt
adc
jg
call
mov
cli
inc
lea
in
test
mov
lods
fnstsw
mov
pop
cwtl
call
pushf
cmp
jle
scas
imul
add
xor
ja
jp
xchg
xchg
jbe
mov
popf
enter
adc
mov
jnp
adc
jbe
and
arpl
add
inc
adc
cmp
je
ss
cmp
push
mov
mov
mov
nop
sbb
out
xor
insb
nop
es
add
cmp
add
xor
add
lods
imul
enter
shrb
push
push
stos
outsl
xchg
mov
loop
sbbb
cmp
test
imul
push
popa
pushf
push
inc
cmp
fstl
push
pop
outsb
adc
icebp
sub
data16
dec
jmp
sub
jb
cmp
in
push
cmp
lcall
stos
xchg
mov
pcmpgtb
jo
or
jnp
add
fistpll
mov
push
push
push
clc
ret
push
jecxz
mov
sbb
es
fwait
jne
cmp
mov
xchg
iret
sub
lahf
mov
loopne
shll
cs
in
les
outsb
fwait
dec
or
wrmsr
push
stos
mov
add
push
xchg
and
mov
xchg
and
bound
add
fsubs
addr16
inc
imul
push
cmp
loop
std
les
test
dec
std
lods
shlb
pop
and
jne
pop
test
push
jmp
and
dec
mov
lods
aas
jge
scas
push
int3
pop
sbb
pop
and
adc
cmp
push
sub
xor
hlt
jno
add
jmp
fstpl
dec
pop
fsubr
and
icebp
add
add
rorb
cmpsl
insl
sub
sbb
or
pop
int3
je
push
cmp
pop
push
fcoml
in
les
inc
jnp
scas
mov
xor
inc
daa
hlt
aad
sbb
and
sbb
mov
inc
mov
dec
jns
dec
movsl
sub
dec
arpl
jbe
sti
cmp
je
xchg
mov
cmp
test
push
test
ret
arpl
xchg
adc
mov
test
ss
dec
add
and
sbb
jo
pop
xor
les
mov
push
and
mov
push
inc
mov
cmpb
and
into
clc
loope
es
push
repz
cmp
push
mov
movsl
rcll
into
test
popf
loope
gs
jns
in
rcll
and
clc
pusha
mov
jmp
bound
or
test
pop
push
loopne
mov
push
inc
loopne
dec
and
mov
int
ret
cltd
pop
adc
ja
mov
insb
lea
lret
add
and
mov
mov
rclb
out
mov
and
mov
adc
jle
add
cmpw
adc
sbb
cmpb
jbe
shl
sbb
push
pop
add
ss
stos
xor
ljmp
pop
mov
add
sar
add
push
jo
mov
mov
pop
les
adc
pop
jns
or
sbb
and
sbb
lock
cmp
xchg
pop
sbb
pusha
jne
dec
clc
orl
testb
jp
sub
jmp
popf
loope
lcall
xchg
decl
mov
pop
cmpl
push
adc
rorl
repz
xchg
or
andl
jmp
xchg
sbb
add
dec
cmp
sbb
scas
lret
inc
ret
js
jo
les
inc
xor
sub
cmpb
inc
pushf
nop
mov
jecxz
or
dec
es
push
add
sub
cmpsb
jecxz
add
mov
inc
sub
dec
fs
inc
cmp
mov
jb
fs
push
jle
cmp
lods
add
cltd
dec
pop
in
push
mov
xor
stos
data16
jo
jns
imul
and
mov
or
icebp
or
cmp
adc
adc
movsb
add
push
stos
fsubrl
mov
add
and
sub
stc
es
push
pop
fiadds
lea
outsl
inc
mov
adc
mov
movsl
push
mov
scas
lods
in
xor
fsubs
sub
test
add
add
sub
movsb
movsl
or
sub
xor
push
or
adc
pop
lock
and
lods
adc
adc
adc
xor
fcom
xor
cmpsl
fwait
sbb
mov
arpl
inc
dec
inc
iret
mov
mov
inc
lret
ljmp
call
test
push
jmp
sub
push
mov
scas
or
xor
fwait
ret
mov
rcrl
gs
and
fcoms
stc
xchg
dec
and
push
lret
popa
sbb
popa
loope
cld
sbb
jne
or
push
int3
dec
add
popa
or
mov
or
jecxz
cmpsb
or
sbb
jp
lock
cmpl
pop
je
or
push
jmp
arpl
xchg
cs
movsb
aaa
adc
test
dec
adc
mov
stos
mov
enter
add
cltd
and
add
jl
push
or
inc
hlt
add
test
mov
push
push
mov
mov
shrl
jne
test
addr16
mov
cltd
xchg
sbb
or
xchg
xchg
or
test
je
push
rcll
mov
pop
push
ss
daa
xor
aas
stos
test
mov
call
push
and
push
frstor
pop
xor
decl
jns
and
jo
jge
out
std
jmp
les
in
dec
sbb
fcomps
shl
shrb
dec
xor
mov
cmp
imul
sbb
call
or
stc
mov
mov
jmp
dec
mov
cli
dec
push
popa
inc
jns
jmp
and
sbb
lock
adc
lahf
in
cld
sbb
in
in
mov
and
jmp
roll
sub
xchg
dec
lret
daa
mov
mov
dec
mov
jne
or
dec
mov
inc
rclb
adc
jae
sub
push
pushf
clc
xor
push
inc
ja
cltd
idivb
adc
dec
lea
jmp
push
push
das
in
xchg
add
pop
pop
sub
idivl
ret
addl
pop
inc
and
cwtl
adc
nop
jp
fucomip
xchg
mov
in
dec
test
cld
inc
pop
inc
push
test
roll
add
xor
outsb
inc
pop
rcll
inc
daa
sahf
mov
add
bound
inc
add
mov
xchg
xor
repz
mov
adc
insl
cwtl
and
sub
push
sbb
mov
and
adc
inc
sahf
jo
inc
je
xchg
push
cmp
mov
aam
push
mov
dec
clc
inc
ret
dec
xchg
das
push
inc
add
jmp
and
mov
nop
out
inc
inc
jmp
mov
sub
pop
sub
xchg
je
cmp
mov
enter
dec
inc
inc
dec
cmp
jne
shrb
and
add
push
call
sbb
nop
mov
jne
sub
dec
sbb
jno
mov
inc
sub
mov
push
loope
mov
cs
pop
arpl
xor
xor
pop
pop
adc
jp
movsb
xor
push
and
jb
ret
fcoml
jno
loopne
add
add
pusha
or
adc
jge
sti
jecxz
jle
ss
cmc
mov
rorb
mov
mov
ds
jnp
loopne
pusha
add
enter
movsl
arpl
mov
mov
lret
push
inc
adc
repnz
nop
and
and
stos
aad
call
ja
xchg
add
add
addl
jmp
or
out
or
or
aas
cs
dec
dec
shr
dec
lret
push
xchg
add
cmp
xchg
or
loope
and
mov
rcr
jne
ja
push
aas
shlb
in
lds
sbb
inc
nop
in
or
mov
rolb
pusha
mov
enter
cmpsl
xchg
jmp
mov
loop
and
movsl
sub
dec
es
xor
pop
pop
fbld
fsubs
shlb
jl
gs
lahf
jne
cmp
push
and
daa
cmp
out
hlt
mov
push
xor
adc
pop
cmp
xor
out
lods
mov
hlt
mov
enter
sub
or
xor
rclb
mov
bnd
mov
push
loop
mov
push
push
push
test
adc
push
xor
sbb
sbb
add
fstl
int
push
test
push
je
mov
ret
pop
push
push
adc
cmp
jmp
push
jg
shlb
repz
cmp
out
pop
or
mov
pop
add
test
xchg
push
push
out
inc
jo
xor
jg
cmp
pop
arpl
add
and
js
pop
xchg
cmpb
nop
call
leave
and
jmp
cmp
jne
xor
enter
lret
call
xchg
xlat
adc
ss
push
pop
insl
dec
test
cwtl
mov
pop
pop
arpl
ret
pop
mov
dec
fsts
mov
sahf
add
dec
testb
into
push
lock
or
mov
js
adc
and
or
adc
pop
in
pop
or
or
adc
mov
ja
dec
or
xor
fildl
push
sub
mov
fcomps
inc
pop
addb
or
adc
mov
cmp
aam
ja
mov
mov
push
xor
shrl
push
movb
lock
sub
cmp
lods
xchg
jl
add
fs
dec
daa
test
inc
mov
xor
ja
xchg
call
cmpsl
jp
cmpsl
push
lcall
les
sbb
scas
mov
or
adc
dec
inc
sub
jns
adc
ret
jne
dec
sbb
lahf
and
mov
pop
add
mov
roll
adc
and
repnz
inc
adc
cmc
imul
ret
aaa
addr16
loop
aam
or
and
adc
jnp
clc
sub
enter
test
ror
mov
test
mov
mov
push
es
fadds
shl
pop
call
aad
das
mov
imul
inc
cs
aam
loop
pop
adc
aaa
xor
pop
mov
sub
adc
scas
sub
loop
cmp
sub
jle
mov
es
add
push
mov
inc
sub
add
pushf
shrb
lea
and
cmp
xchg
cmp
and
scas
lea
loopne
adc
ss
cmp
sub
pop
aam
sbb
or
shlb
and
mov
jne
out
frstor
loope
repnz
adc
mov
push
and
pop
push
pop
cmpb
push
fsub
xorb
jnp
pop
mov
ret
dec
mov
mov
and
les
add
add
xchg
mov
mov
test
or
lock
push
pusha
movl
les
in
xor
cmp
push
mov
dec
mov
adc
push
adc
subl
mov
sbbl
sbb
or
jecxz
loop
sbbb
cmp
negb
pushf
xchg
aas
enter
dec
add
nop
or
ret
je
jg
jg
add
adc
or
and
nop
and
mov
adc
mov
push
jb
xchg
push
inc
outsb
add
pop
add
and
repz
and
sarl
inc
inc
mov
mov
call
lret
cmp
xlat
shll
cmp
sbb
fists
xchg
fprem
imull
mulb
lret
sbb
rorl
sbb
fistps
or
pop
mov
pop
sub
jmp
jmp
data16
dec
jb
movsl
pop
cmpsl
add
dec
cmp
jno
dec
fwait
and
xchg
mov
sbb
jae
push
lahf
les
push
or
pop
aad
sti
sub
mov
movsl
sbb
sub
or
sbb
inc
or
std
cli
dec
lock
and
ret
stc
push
add
xor
cmp
and
pop
sub
xchg
movsb
inc
sub
adc
es
jns
xlat
pusha
xor
push
aad
ret
pop
sbb
pop
and
movsl
out
popf
cld
icebp
mov
and
push
add
stos
in
repz
or
or
movsl
cmp
add
int3
adc
aam
mov
mov
push
daa
mov
ret
es
mov
or
daa
aas
imul
test
jmp
mov
push
insl
idivl
add
andl
jb
or
adc
mov
andb
movsl
push
or
std
stc
and
rcrl
movsl
add
xchg
sub
rorl
dec
mov
insb
ds
sbb
insl
pushf
push
xchg
nop
mov
sub
clc
sub
push
push
fdivrl
mov
inc
sbb
jne
je
xchg
cmp
push
cwtl
and
and
adc
adc
inc
pop
and
add
dec
rclb
add
cs
std
adcb
test
adc
fadd
add
and
and
sbb
aad
adc
into
adc
jo
mov
or
hlt
lock
popa
ret
sbb
cmp
add
push
fdivrl
inc
stos
movsb
fdivrl
nop
push
inc
imul
arpl
mov
jne
and
mov
mov
incl
xor
or
mov
mov
or
nop
push
inc
andl
ret
sub
ljmp
adc
push
pop
push
xchg
pop
setnp
nop
push
and
push
pop
or
loope
inc
in
or
jno
mov
add
cmp
push
fs
iret
mov
inc
or
push
and
cmp
add
jp
sub
sbb
and
adc
xor
bound
js
push
ss
and
pusha
cwtl
les
roll
and
add
movzwl
add
adc
popa
xor
sbb
pop
or
test
sub
sbb
dec
loope
or
or
xor
pop
jb
dec
mov
xor
movsb
sub
mov
or
daa
punpcklwd
jne
xor
mov
adc
insb
jnp
call
inc
jo
mov
loopne
cltd
push
invd
cmp
cltd
cmp
imulb
into
mov
in
loope
sbb
dec
mov
or
xor
pop
sahf
dec
mov
imul
ljmp
xor
cmp
push
test
pusha
sub
movsl
fstpl
jbe
imul
clc
imul
push
sbb
enter
adc
xor
lea
in
mov
and
adc
loopne
enter
repnz
or
push
into
daa
leave
lods
and
jle
mov
add
jb
icebp
mov
and
inc
or
or
xor
mov
insl
adc
push
adc
add
les
xchg
clc
mov
jno
push
mov
pop
push
pop
adc
push
xchg
pop
mov
mov
dec
xor
mov
and
xor
mov
pushf
add
dec
xchg
pop
jno
sbb
or
jo
cmp
adc
lea
lcall
pop
xorb
xchg
mov
adc
jae
filds
repnz
bound
out
or
xor
sbb
add
inc
lcall
jmp
fwait
add
sbb
and
sbb
xchg
js
push
mov
loopne
cwtl
adcl
inc
jp
aaa
jno
add
xor
jno
adc
adc
xchg
nop
adc
add
sub
push
jl
es
fildl
xlat
jge
or
xor
pusha
enter
cmp
mov
sbb
and
adc
mov
xor
hlt
inc
sub
fldcw
dec
ds
nop
addr16
xor
gs
jno
gs
add
sbb
push
pop
shr
cmp
in
scas
inc
pop
and
fcoml
lea
mov
aaa
rcrl
add
sub
dec
adc
loop
nop
les
pop
jmp
mov
add
loope
xchg
jbe
or
dec
inc
add
loopne
jge
mov
mov
mov
pop
cwtl
sahf
xchg
adc
cmp
inc
push
je
test
ja
xadd
rcl
push
in
aam
stos
and
ret
insl
sbb
movsl
enter
jne
dec
imul
mov
push
or
adcb
and
repz
add
adc
sbb
push
cmp
inc
sbb
outsb
out
sbb
add
pop
push
xchg
add
addr16
push
cmp
add
or
das
pop
cld
cs
or
push
sub
inc
dec
dec
pop
jns
fmuls
add
push
mov
jl
fildll
jne
mov
test
lea
ja
lds
mov
in
sbb
mov
or
je
ss
jp
inc
jge
pop
push
and
stos
xchg
jne
jmp
movsb
imul
xchg
cmpsl
cmc
add
and
pop
xchg
pushf
add
adc
adc
mov
inc
dec
adc
test
mov
inc
and
mov
push
addl
inc
and
inc
pushf
or
xchg
add
test
dec
test
pushf
out
sub
test
sbb
adc
or
jle
cwtl
adc
push
test
add
fnstsw
mov
rclb
push
sbb
ja
xor
cltd
add
pop
hlt
add
es
out
xorl
je
lahf
xor
pop
ds
pop
mov
inc
je
push
inc
adc
sbb
adc
add
jg
mov
pop
sub
sbb
or
fwait
imul
lea
movsl
and
int
adc
call
and
or
sbb
pop
mov
sub
sbb
pusha
sbb
addb
stos
fadds
mov
pop
mov
loope
sub
mov
push
xorl
hlt
cmp
mov
add
mov
and
loopne
or
fstp
cvtdq2ps
and
out
push
pop
sub
xchg
mov
and
inc
pusha
dec
movsl
cmp
xorl
inc
adc
add
test
ret
xor
sbb
js
mov
dec
lods
add
repnz
into
push
xchg
das
push
add
add
mov
xchg
out
add
add
sub
mov
imull
movsb
lea
inc
push
jle
loop
add
jne
das
fcom
insl
sub
add
mov
into
jg
push
add
cmp
pop
ret
insb
mov
pop
pop
test
dec
mov
fstl
aas
je
adc
jne
mov
int
or
cmp
test
gs
cltd
cmovne
and
push
pop
insb
jle
ret
xor
bound
loopne
inc
lods
addl
lret
xor
sbb
push
mov
mov
lods
sub
imul
xchg
or
push
push
inc
mov
sti
add
push
pop
push
push
mov
inc
mov
ret
xchg
ret
add
lock
or
pop
fldcw
test
leave
imul
dec
push
mov
lcall
lret
pusha
mov
rol
mov
pushw
mov
pop
xorb
push
test
xor
sbb
adc
or
fstl
outsb
dec
jnp
mov
lods
dec
xor
call
mov
jmp
push
sub
xor
subb
adc
adc
push
adc
xor
pushf
mov
data16
mov
mov
sub
insb
iret
sub
fcoml
loope
les
pop
xor
pop
jb
iret
push
sub
lea
push
sbb
mov
sub
insb
xchg
and
mov
cmp
cs
hlt
loop
pop
add
loope
or
in
cmp
jge
nop
adc
je
jecxz
xchg
xor
mov
mov
xchg
dec
cmp
adc
xor
cmpsl
cmp
test
lret
sub
outsl
lcall
out
fwait
mov
fisubs
ja
repnz
sbb
lret
adc
sbb
or
popf
daa
mov
adc
cli
cmpsl
and
push
outsb
ss
pop
adc
mov
imul
std
mov
push
xor
xchg
mov
mov
das
pop
sub
stos
pop
xor
inc
int
mov
pop
dec
xchg
sbb
arpl
sub
pop
add
pop
call
mov
inc
adc
repnz
test
push
pop
in
add
mov
and
sub
xchg
or
clc
pop
push
mov
rcll
leave
pop
imul
in
push
test
or
iret
sbb
add
in
inc
lods
fiaddl
inc
xchg
mov
movl
insb
or
ja
inc
popf
adc
das
push
aas
int3
mov
inc
adc
imul
and
add
and
cmp
testb
and
sub
cmp
and
adc
push
cmp
dec
jae
add
push
add
sbb
mov
inc
pop
lcall
arpl
xlat
stos
dec
dec
mov
adc
inc
adc
inc
or
movsl
sub
pop
ret
mov
addr16
cmpsb
rol
pop
cmpb
add
loop
add
das
sbb
mov
jne
fisttpll
push
push
inc
cli
and
fisubrl
int
data16
lea
fsubs
mov
inc
cwtl
stos
imul
call
in
test
fwait
pop
mov
ds
xor
ss
and
add
cmpl
xor
je
push
std
sub
xchg
dec
and
jg
mov
push
cmp
push
cmp
jle
cmp
jp
push
cmp
fisttps
push
cmp
mov
mov
push
add
inc
jmp
cmc
daa
or
push
data16
pop
add
insb
loope
fbstp
or
jg
or
fwait
inc
or
fs
pop
idiv
sbb
fisubrl
add
adc
imul
in
adc
adc
mov
test
mov
cs
rorb
imul
fstps
add
inc
xchg
xor
push
push
hlt
xor
and
jbe
repz
mov
dec
fdivrs
or
pop
insl
enter
popf
lock
sbb
and
je
or
iret
adc
adc
or
adc
xchg
sub
inc
mov
int
je
stos
cmp
push
mov
xor
sub
ds
out
adcb
mov
xchg
lret
add
adc
add
and
sbb
jo
inc
jo
popf
adc
in
dec
sub
ret
imul
pop
sub
push
ret
sbb
adc
or
xorb
insl
add
adc
movsb
or
dec
add
in
addr16
push
ror
dec
leave
add
sbb
dec
pushf
leave
je
out
loopne
pop
pop
jl
outsl
loopne
inc
jl
rorl
daa
cltd
movsl
adc
fistpl
add
push
data16
dec
pop
mov
dec
push
sub
nop
xchg
adc
mov
mov
adc
sbb
sbb
inc
enter
popf
push
push
inc
or
add
and
mov
adc
xchg
inc
leave
gs
xor
and
add
and
ss
enter
aas
sbb
in
push
dec
adc
add
inc
sub
xchg
cmc
jg
push
rcrb
xchg
jecxz
sbb
sbb
sbb
popa
insb
xchg
mov
mov
add
push
fcoms
inc
fwait
aas
inc
mov
es
fcoml
and
mov
outsb
and
cmp
jmp
mov
rcr
fiadds
adcl
ljmp
movsb
and
xor
sbb
cmpsl
pop
adc
arpl
lods
cmpsl
std
cmp
xor
and
lcall
push
pop
push
and
add
and
add
enter
push
add
and
xchg
mov
adc
adc
rolb
mov
or
add
lret
jne
xor
add
add
push
loope
push
adc
loopne
push
mov
xchg
test
adc
sbb
jns
fdivs
push
dec
sbb
and
sbbb
dec
or
push
or
lods
aad
repz
xlat
test
inc
adcb
xchg
mov
out
loopne
ret
sbb
shl
jo
roll
mov
and
sti
cmpsb
push
adc
inc
sbb
adc
jo
jb
add
xchg
icebp
push
cmp
or
add
and
inc
aaa
jl
and
jne
lea
add
pusha
inc
sub
push
out
jmp
cmp
inc
insb
arpl
xchg
dec
adc
test
inc
aas
nop
add
mov
movb
cmpsl
sbbl
imul
add
pop
lods
push
add
aaa
and
fwait
adc
add
xchg
sbb
dec
leave
xchg
fiadds
or
inc
jno
adc
icebp
leave
stos
sbb
mov
xchg
fucomp
sub
or
pminsw
shlb
mov
outsl
mov
cwtl
jp
sbb
add
push
repz
mov
xor
add
dec
aaa
ss
cmc
inc
clc
sbb
and
xchg
or
and
std
inc
fs
pop
inc
and
sbb
add
aam
add
or
push
adc
inc
ror
mov
pop
les
adc
gs
addr16
pop
in
push
popa
stos
in
test
jne
stc
lea
rol
push
pop
cmp
xchg
mov
sbb
pop
add
ret
adc
hlt
pop
fstpt
fildl
add
mov
jo
loope
inc
add
dec
dec
pusha
inc
dec
or
dec
sbb
cmp
pop
xchg
jl
add
repz
pop
push
mov
and
jnp
push
mov
xchg
jg
shl
jg
adc
ret
lods
lods
popa
xor
adc
jmp
inc
mov
sub
pop
pop
add
xor
mov
imul
nop
or
adc
push
aad
push
lea
mov
jb
and
adc
fcmovnb
and
daa
xor
lods
in
and
ffreep
jecxz
add
roll
ret
ret
adc
push
sti
and
insl
pop
push
cmp
ja
add
movl
or
fisubl
andb
push
xor
rcrb
stos
or
out
add
pop
push
mov
popa
negl
pop
loop
pop
mov
outsb
or
sub
xchg
call
je
cltd
fstpl
mov
test
lock
out
inc
je
sbb
call
push
xchg
push
fldl
outsl
xchg
jp
sbb
dec
sbb
sbb
rcr
or
mov
fstpl
mov
mov
mov
sti
lods
std
js
pop
or
adc
js
jmp
pop
fsub
pop
fsubrp
adc
int3
pop
jo
decl
sbb
pop
mov
push
movl
nop
mov
push
add
cmp
lret
pop
jb
scas
sub
mov
mov
adc
xchg
jbe
fimull
shll
roll
jns
stc
jge
or
or
out
or
fidivs
mov
push
pop
call
pusha
mov
pop
into
and
xchg
mov
sbb
dec
iret
jns
push
pop
leave
inc
mov
push
rcr
orl
xchg
jo
and
cmp
pop
test
arpl
sbb
cmovle
sub
andl
adc
add
and
mov
imul
mov
mov
mov
sbb
jnp
mov
data16
xor
add
es
xchg
decb
jb
stos
xor
shld
add
or
test
sbb
lea
push
mov
jns
push
and
popa
imul
je
or
push
mov
push
adc
push
push
inc
inc
inc
pop
add
or
or
cli
loope
adc
data16
push
testb
pop
scas
and
movsb
leave
leave
add
rcr
pop
or
rolb
test
mov
pusha
push
mov
arpl
jne
jbe
and
ja
push
adc
rcrl
xor
or
das
subb
imul
sbb
cmpw
jne
jle
lods
aaa
mov
cld
cmp
stos
cld
mov
push
jge
mov
sbb
pop
xchg
lea
cmp
or
adc
sbb
leave
out
data16
lahf
movsb
imul
push
cwtl
dec
jo
push
push
movzwl
loope
push
dec
inc
xlat
push
dec
in
adc
push
ret
mov
or
add
ja
push
pop
add
add
test
mov
adc
push
sbb
insl
jecxz
fbld
sbb
mov
jle
movsl
andb
aad
lods
adc
mov
cmc
insl
loope
adc
pushw
int
inc
dec
pusha
lret
pop
xchg
add
in
subl
jno
mov
cs
inc
or
popl
aaa
or
push
push
mov
mov
ret
pop
scas
pusha
lea
lds
cmp
mov
adc
shlb
xchg
xchg
add
jb
adc
sbb
jl
lock
xor
nop
pushw
push
push
fiadds
xchg
addr16
adc
add
mov
xchg
imul
xchg
adcb
xchg
or
lds
int3
cmp
je
mov
gs
lret
cli
push
pop
lds
adcl
fsubrs
sbb
cmp
pop
xchg
lods
je
addl
cwtl
push
fisubl
pop
push
xchg
sti
pop
je
out
into
jb
jns
cmp
fcompl
add
mov
das
xorb
and
mov
xchg
xor
mov
lcall
xchg
mov
add
mov
fcom
and
mov
adc
nop
mov
ret
or
sbb
ret
pop
or
inc
imul
or
test
test
mov
mov
sbb
xor
push
bound
outsb
pop
push
push
aas
cmp
adc
and
ret
lods
xor
dec
and
push
dec
sbb
ss
and
je
and
push
adc
cmp
add
ret
cs
orb
or
fstp
push
add
pop
xchg
jo
movsl
movsl
movsb
es
or
les
shll
test
mov
adc
push
ljmp
call
inc
fadds
ret
mov
hlt
shll
orb
test
jge
repnz
jno
mov
sbb
data16
inc
outsl
mov
jecxz
mov
icebp
testl
inc
mov
push
and
jne
dec
jae
and
int3
and
sbb
sbb
ret
aam
adc
test
adc
movsb
jl
mov
or
and
or
fisttpll
adc
adc
dec
call
fsubrs
cld
mov
or
push
mov
add
mov
mov
jmp
in
rcr
cmp
lcall
jmp
mov
dec
add
mov
and
mov
jmp
clc
out
out
jmp
in
scas
push
int
mov
push
jmp
push
adc
and
pop
pop
xchg
jmp
dec
xchg
sbb
les
stc
jl
fists
ja
dec
or
push
add
repz
adc
add
movsb
insl
xchg
mov
sbb
addb
pop
sub
push
sbb
int3
push
aas
add
dec
push
pop
cmp
xchg
xor
movsb
aas
cld
in
and
jne
cmp
dec
daa
jo
ja
xchg
push
mov
jbe
dec
hlt
dec
adc
cmp
jbe
xchg
fs
addr16
jl
cwtl
daa
sbb
dec
movsl
les
inc
pop
sbb
add
dec
test
jbe
or
push
aas
jo
push
sub
adc
imul
jbe
lock
jg
sub
push
aad
movsl
sti
cmpsl
push
adc
push
imul
add
push
iret
repz
mov
cmp
repz
rcr
loope
jns
repz
das
cmp
jns
out
push
popa
insl
ja
out
sahf
orl
mov
repz
out
call
adc
pop
repnz
sub
cmp
jp
insl
push
sbb
xor
aad
sub
stos
dec
cmp
cmpsb
push
mov
add
and
cmp
pop
sbb
addr16
mov
rorl
sub
mov
push
add
add
shll
dec
adc
mov
je
insb
sub
fwait
jmp
jl
mov
sub
mov
lock
pushf
push
jae
mov
push
out
movsb
mov
push
gs
nop
rorl
fcompl
jb
jg
push
nop
faddl
jp
test
add
mov
fsubl
cmp
add
lret
and
shll
ret
mov
xchg
and
pop
dec
sar
dec
pushl
dec
xor
xchg
sti
sahf
xchg
fwait
stos
push
dec
test
add
adc
cmpsl
es
add
jne
sarb
or
add
cmpb
jnp
jo
vmread
mov
mov
push
mov
push
cmpl
sub
push
xchg
dec
jge
add
push
push
mov
adc
bnd
or
shrb
add
and
push
push
mov
mov
xchg
call
push
gs
push
or
mov
sub
sbb
sbb
or
jae
sub
cltd
rorb
bound
adc
adc
and
push
xor
sub
xor
cli
stos
pop
xor
inc
cmp
or
mov
orl
sbb
add
fisubl
faddl
add
fists
lret
test
arpl
lahf
and
or
add
adc
stos
adc
pusha
mov
pop
mov
mov
push
inc
xchg
and
mov
and
push
push
les
inc
rol
sbb
inc
sbb
les
jl
gs
adc
mov
call
and
mov
mov
loop
mov
sub
lods
pusha
dec
sub
outsb
and
pop
xor
add
jl
mov
and
sarb
adc
icebp
push
sbb
mov
ds
push
stos
pop
xor
in
shrl
stos
mov
pop
les
divb
sub
jge
das
jle
negb
push
arpl
adc
sub
xor
add
fiadds
dec
dec
push
jns
xor
xor
cmp
sarb
stc
xor
fwait
xor
and
lcall
enter
lcall
dec
lcall
dec
lcall
dec
lcall
ss
mov
imul
mov
pop
int3
jl
test
hlt
mov
push
cld
mov
shlb
lret
enter
cmp
pop
je
movsb
dec
dec
test
sbb
push
inc
pushf
mov
dec
mov
lock
mov
js
pop
pop
sbb
stos
jb
cmp
dec
sub
movsb
bnd
pop
push
jb
mov
sbb
sbb
jae
and
popa
inc
addr16
orl
int3
sbb
and
mov
add
and
xchg
xchg
jns
sbb
and
ljmp
sub
cmpsl
pushf
addr16
mov
adc
notb
repnz
jmp
js
or
adc
stos
push
inc
cmpl
and
cmp
mov
pop
push
dec
imul
inc
sahf
inc
movsl
out
xchg
or
pop
lock
sbb
orl
pop
rorl
mov
lea
test
rorl
sub
bnd
scas
push
mov
cmp
int3
push
pusha
dec
cmp
inc
mov
cmpsl
pop
jmp
fwait
nop
movsb
aas
pop
test
es
jl
cwtl
test
fwait
push
aas
test
ds
es
in
inc
in
aaa
loope
loope
orl
jmp
or
sbb
adc
rcrb
repnz
inc
mov
movsl
rcll
inc
das
xor
push
inc
push
add
pop
xchg
out
xchg
sub
xchg
jle
adc
jge
movsb
rcrb
lods
movsb
popa
add
and
aaa
dec
jne
pop
pop
test
dec
or
js
add
je
or
scas
or
in
jo
jmp
push
sub
sbb
ss
and
into
jecxz
inc
popa
and
popa
xchg
pop
dec
bound
popf
and
adc
out
xchg
out
add
dec
dec
add
std
repz
jge
test
xchg
lock
int3
ret
xchg
or
add
push
push
push
mov
jp
lods
imull
nop
mov
addr16
fistpl
outsb
xor
xchg
rorb
xchg
adc
pushf
aas
in
shlb
sti
jb
add
xor
sahf
outsl
lds
xor
orb
std
loopne
arpl
sbb
data16
test
inc
call
push
dec
imul
nop
hlt
or
and
jo
and
xchg
fcomps
jecxz
sbb
cmp
cs
ret
dec
iret
mov
sahf
fmull
or
push
rcrb
cmp
mov
mov
jns
jns
pop
mov
imul
in
sub
and
pop
aam
cmp
adc
pop
mov
dec
stc
add
and
mov
sbb
adc
jl
icebp
xor
dec
fistl
enter
adc
test
mov
push
pop
xchg
dec
fidivl
cwtl
sbb
fcoms
je
xchg
notb
dec
sbb
xor
sbb
xor
push
mov
jl
test
sbbb
movsb
pop
mov
pop
push
pop
push
imul
dec
and
ss
jne
pop
addb
leave
int
adcl
lods
inc
sbb
mov
and
es
cmpsl
ja
imul
movsb
lcall
nop
lds
adc
sarb
rclb
test
je
dec
xor
ljmp
mov
cwtl
nop
xorl
cmp
pusha
add
xchg
and
or
or
pop
pusha
push
pop
leave
das
add
fdiv
popa
sub
in
in
movsl
adcl
jae
xor
int
mov
dec
aas
or
push
add
sub
std
mov
mov
xchg
sbb
inc
xchg
jno
add
push
lahf
lock
inc
fadd
push
add
mov
pop
movsl
push
ja
cmp
push
sbb
cwtl
sarl
xor
push
sbb
imul
cmp
inc
setl
pop
les
in
xor
test
mov
push
xchg
pop
jbe
sbb
sub
nop
loopne
mov
push
ljmp
xor
stos
adc
adc
inc
jmp
test
mov
call
or
pop
xor
and
call
stos
jae
ret
adc
fs
adc
int
and
adcl
mov
pushl
movsl
ds
ret
movsl
and
pop
inc
push
pushl
shr
mov
pop
fists
jne
xchg
adc
push
pop
dec
mov
add
js
cmovl
mov
mov
mov
test
cli
andb
sbb
jmp
xchg
jmp
dec
scas
push
push
or
jo
inc
pop
push
mov
loop
dec
fwait
and
cmp
loopne
ss
pop
push
xchg
and
sub
pop
cmpsb
or
push
adc
rorb
xchg
out
movsb
es
or
xlat
sub
add
lods
push
sub
push
jmp
mov
in
add
dec
pop
sub
lods
mov
addr16
je
xlat
sub
add
rolb
xorb
jl
or
aam
jo
into
mov
mov
sub
dec
rolb
pop
push
movsb
repnz
mov
sbbl
and
and
and
and
sbb
out
int3
xchg
pop
xor
push
sbb
sbb
sbb
pop
jb
sbb
adcl
and
rolb
xor
adc
adc
cmp
push
test
loopne,pn
jo
pop
adc
rcrb
mov
xor
or
scas
into
fchs
xchg
ror
push
clc
pop
fisubrl
aam
ss
cs
sbb
pop
ret
or
fcmove
inc
cmp
int
add
xchg
stos
lret
push
movsb
loope
clc
mov
lock
add
xchg
daa
lea
inc
cmp
ret
adc
dec
psadbw
or
dec
mov
sahf
cmp
pop
test
or
popl
dec
push
mov
ret
sahf
jo
cltd
or
dec
shr
mov
hlt
out
xchg
mov
cmp
jbe
sub
mov
sbb
loopne
push
pop
push
jmp
adc
fwait
add
push
rclb
into
mov
lret
mov
inc
pop
jl
fnstenv
movsl
xchg
sub
fs
sahf
xchg
or
cmp
jl
js
cmpsl
movsl
add
cmp
nop
push
es
jg
cmp
push
xchg
pusha
mov
je
push
push
inc
faddl
clc
addr16
bswap
dec
leave
push
das
sub
out
aad
outsb
jb
mov
jg
and
imul
lods
sbb
addl
xchg
pop
and
jl
iret
inc
xchg
or
js
hlt
icebp
fisttps
xor
pop
cmp
loopne
sbb
xlat
jbe
mov
sti
dec
add
xchg
cmp
jne
inc
fs
dec
sub
cmpb
adc
dec
push
hlt
adc
popa
insb
test
push
or
iret
jne
pop
jnp
adc
fiadds
repz
jae
adc
add
nop
cmp
push
mov
iret
je
mov
dec
shll
loope
shr
scas
fld
mov
mov
rclb
je
fstps
test
pop
test
jp
xor
add
adc
pop
out
push
pop
cwtl
test
emms
inc
test
fs
jae
ret
arpl
aaa
xchg
cltd
xlat
aad
dec
or
movsb
inc
ds
imul
mov
push
rcr
jb
adc
inc
outsl
push
daa
pop
push
add
dec
mov
mov
mov
test
push
pusha
or
or
or
push
shrb
imul
pushl
push
jae
faddp
sbb
lds
outsb
mov
loop
int
in
test
add
outsb
add
xor
or
jae
pop
in
or
add
dec
ds
xchg
add
aad
imul
xchg
in
pushl
jmp
cmp
jl
or
dec
int
je
cmp
or
and
mov
movb
movsbl
out
mov
add
xchg
cmp
add
pop
insb
xchg
test
dec
add
jne
pop
adc
test
shlb
fwait
xor
xor
pop
inc
push
mov
bound
cs
inc
sbb
sub
push
add
loopne
and
cmp
fcmovb
mov
daa
out
insb
inc
sub
push
repz
mov
lret
jns
repnz
popa
lcall
adc
add
push
ror
stos
in
add
shlb
sti
or
mov
shrb
rorl
dec
sbb
mov
xor
push
pop
mov
cmp
je
dec
and
or
or
sbb
pop
gs
mov
jmp
ja
push
stos
cmpsb
dec
mov
and
inc
pop
pop
xchg
pop
in
out
jmp
sub
cmp
es
jg
lret
lock
cmp
pop
adc
shrb
lods
in
mov
js
pop
mov
loop
leave
push
add
jns
imul
mov
pop
loop
or
jbe
loope
loopne
add
imul
xchg
xchg
fcoms
add
pop
inc
dec
filds
sub
sub
dec
adc
daa
inc
push
aaa
and
xchg
sbb
add
gs
loope
sbb
inc
mov
push
or
sbb
xor
scas
shll
movb
leave
dec
dec
cwtl
scas
dec
jmp
fcoml
mov
xchg
push
push
lods
cmpsl
mov
sarb
repz
jns
lahf
outsb
sbb
fisttps
xor
push
les
adc
inc
cld
xchg
loopne
fcomps
xchg
inc
test
cmp
pop
jne
cmp
pop
or
add
iret
popf
mov
xchg
mov
mov
inc
aam
mov
dec
inc
movsb
or
sub
popa
nop
xchg
xchg
test
pop
call
mov
movsb
and
sub
mov
jmp
movsb
arpl
or
stos
stos
xchg
add
jmp
loope
pop
mov
shlb
addb
nopl
mov
inc
and
dec
out
and
or
push
inc
fmull
adc
sti
xchg
hlt
call
inc
sbb
jmp
push
jo
push
push
lcall
dec
jge
jmp
movb
ret
lcall
ja
call
lods
aam
lea
leave
bndldx
shlb
dec
ret
jnp
rol
movsb
adcl
xchg
xor
and
mov
mov
add
add
sub
testl
and
sbb
sbb
cmp
popa
xchg
or
and
jmp
das
add
orb
dec
add
out
test
cmp
pop
lods
adc
ret
jp
xor
in
cmpsl
je
stos
mov
std
dec
frstor
xchg
lock
push
dec
push
sub
pop
cmp
fistl
push
sub
xchg
xor
xor
jmp
les
push
pop
je
push
les
das
push
ds
ljmp
mov
aaa
dec
sbb
jmp
nop
or
inc
packsswb
inc
shr
mov
test
add
ss
push
pop
or
jmp
jge
ret
xchg
mov
pusha
push
mov
dec
jg
adc
in
ret
test
dec
ljmp
push
jg
inc
add
jne
je
inc
scas
and
push
push
cmp
jl
push
test
js
nopl
cltd
jle
hlt
add
sub
xchg
lods
jecxz
into
inc
loopne
jmp
xchg
mov
add
out
sub
and
je
movl
rolb
fs
push
enter
xor
mov
xor
xor
pop
insb
loopne
insb
adc
movsb
je
divl
inc
lock
lea
mov
mov
sbb
inc
jne
sub
push
lcall
jo
stos
xchg
add
cmp
daa
orb
in
fmull
add
xchg
rcrb
jl
call
rdtsc
xor
enter
push
or
in
mov
xor
enter
nop
xchg
in
push
dec
clc
inc
das
je
jge
test
xchg
lahf
lea
xor
xor
dec
es
outsl
das
mov
inc
sahf
fsub
sti
cmp
dec
in
cmp
test
shrl
call
fadds
jne
xchg
shll
jl
pop
cli
gs
xchg
sti
mov
sbb
push
add
sub
pop
lods
dec
fistl
sbb
shlb
or
in
push
inc
cmp
jno
cmp
push
lea
xor
sbb
ret
popa
sbb
jecxz
push
or
stos
xchg
xor
out
lret
imul
jmp
jmp
adc
adc
or
cli
std
inc
ds
push
cmp
mov
mov
mov
jle
test
outsl
insb
mov
or
stos
mov
inc
add
inc
or
dec
cmp
dec
notb
and
sbb
sub
pop
add
test
jge
inc
sbb
jno
out
inc
add
mov
and
sbbl
and
mov
xchg
xchg
stos
js
loopne
sbb
orb
clc
mov
inc
data16
cmp
ja
adc
adc
jne
daa
bnd
adc
sahf
lahf
or
jne
or
jne
or
add
mov
mov
test
cwtl
js
pop
mov
or
mov
cli
adc
push
lea
fdivrl
lock
fdivrl
jae
dec
mov
insb
inc
pop
xor
push
jl
lods
mov
les
dec
mov
mov
repnz
lea
pop
lea
and
dec
mov
lcall
or
pop
aam
push
ffree
fsts
mov
adc
fimull
sub
sbb
inc
pushf
inc
mov
dec
pop
addr16
cmc
int3
imul
push
cmc
jae
je
sub
jne
adc
xor
adc
push
lret
imul
adc
or
sub
fcom
loopne
shlb
sti
mov
adc
adc
pop
push
xchg
rorl
sub
fwait
cmp
xor
es
sbb
ss
cwtl
fwait
lock
inc
inc
loopne
nop
shrl
lock
xor
mov
sub
and
orl
incl
pusha
shr
sub
xchg
push
pop
pop
mov
xchg
xchg
xchg
fs
stos
push
mov
push
jne
jl
xor
xor
fs
lock
xor
pushl
out
inc
addr16
mov
mov
mov
arpl
cmp
pop
arpl
xchg
inc
or
adc
push
xor
loopne
data16
pop
cwtl
data16
pop
mov
pusha
jae
adc
loopne
or
ja
inc
not
fmuls
rorb
int3
or
into
inc
or
push
pop
and
test
loop,pn
shl
arpl
add
add
and
dec
das
jns
addr16
iret
add
jno
or
iret
cmp
or
mov
sub
mov
shlb
xchg
inc
fcompl
cmp
int
lods
int
fwait
push
pushl
xchg
jge
mov
adc
sub
xchg
xor
sbb
mov
mov
insl
xchg
sbb
mov
orl
testl
jo
movsl
mov
je
js
es
xchg
dec
test
push
mov
and
cmp
push
xchg
pusha
sbb
jecxz
or
push
dec
jmp
add
mov
mov
test
test
mov
adc
mov
stos
xor
je
adc
cmp
repnz
nop
outsl
nopl
cld
pop
adc
nop
fldln2
in
and
dec
push
cltd
inc
adc
and
jbe
and
lds
enter
sub
fsubl
es
sub
pop
xor
pop
or
dec
es
push
adc
dec
xor
leave
cmp
in
inc
sub
in
and
adc
dec
and
rorl
inc
lea
adc
in
or
or
and
and
shlb
arpl
stc
daa
in
or
sub
xor
nop
cmpsb
aaa
mov
add
rolb
push
lea
aam
mov
add
lret
mov
or
adc
push
xchg
or
rcl
sbb
mov
movsb
cltd
add
add
sbb
sahf
cmpsb
adc
xchg
mov
mov
sti
xor
and
xchg
adc
jl
rcll
hlt
jo
dec
fdivl
or
pop
adc
sub
jle
dec
js
jp
hlt
jg
mov
or
mov
lea
adc
add
xchg
inc
sbb
fcoml
sbb
pop
loope
jne
xor
movsb
mov
test
outsl
mov
jne
movsb
cs
mov
test
mov
sbb
inc
fcmovnbe
and
test
inc
adc
adc
add
pop
or
shlb
ret
iret
test
in
movsb
popf
in
les
or
cmp
jne
sub
in
call
cwtl
add
or
add
repz
das
jb
popa
push
int
inc
sub
add
adcb
lods
dec
int
push
stos
lea
lds
jecxz
mov
cmp
sub
pop
push
lock
fdivl
inc
mov
xor
mov
or
and
loopne
lock
je
imul
adc
mov
and
mov
push
call
and
std
mov
stos
pop
psubusb
push
xchg
add
or
push
sbb
ret
xchg
jne
fadd
xchg
and
mov
sbb
test
mov
clts
scas
add
add
inc
cld
and
fcoml
or
push
add
jne
pop
mov
inc
cmpsl
stos
mov
mov
and
jne
sub
add
jmp
sub
pushf
and
or
adc
mov
sub
adc
sbb
push
xor
bound
xor
arpl
adc
push
dec
call
mov
push
xchg
in
dec
ret
mov
orb
xor
jmp
icebp
add
xchg
mov
das
or
push
push
push
pop
add
inc
enter
lcall
js
sub
dec
cld
pop
push
subb
cmp
adc
stos
cmp
add
jle
jno
mov
add
add
in
mov
mov
scas
mov
loopne,pn
inc
jnp
lea
pop
add
push
inc
fbstp
adc
jecxz
in
mov
inc
fcompl
aad
adc
mov
lds
push
mov
pop
call
cmpsl
das
cltd
pop
jmp
out
je
xchg
push
and
call
adc
fisubrl
pusha
mov
shlb
adc
sub
jne
nop
or
and
out
add
push
add
fdivrs
push
push
fisttps
add
and
scas
gs
out
je
mov
cmp
xchg
popf
mov
push
stc
mov
cmpsb
sahf
push
cmpb
xor
fs
xchg
or
or
rolb
mov
fistpl
or
inc
push
or
xor
push
movsl
shlb
lahf
cmp
add
es
adc
sbb
nop
mov
push
inc
inc
sub
add
push
add
sub
sbb
mov
push
push
aas
pop
push
xchg
stos
adc
in
or
mov
xchg
icebp
add
test
ljmp
das
mov
pop
adc
jo
jb
jno
mov
lret
and
jl
insl
adc
je
movsl
ja
and
xor
or
or
xor
cmp
je
nop
in
mov
adc
rolb
sbb
sete
cmpsb
mov
adc
push
xlat
sbb
jle
cmpb
pop
mov
cmp
add
js
hlt
jae
pop
shrb
rorb
mov
sbb
repz
mov
sbb
or
es
sub
sbb
pop
jmp
mov
push
das
add
lea
and
dec
inc
loopne
jmp
jl
dec
jmp
shl
or
add
inc
cmp
jl
jg
pop
add
jne
add
cltd
adcl
add
sar
add
mov
hlt
clc
xor
mov
sub
cmp
jecxz
sbb
push
std
or
lret
shr
xor
mov
lds
dec
jne
fs
xor
pop
pop
sahf
or
cmp
loopne,pn
cmp
pop
push
lea
bound
stc
sbb
mov
imul
mov
ret
or
mov
lcall
mov
ret
roll
mov
mov
dec
std
sbb
jl
repnz
jle
movsl
mov
mov
inc
mov
mov
mov
cli
js
inc
mov
add
dec
jne
enter
ret
aas
loope
adc
stc
xor
test
mov
aam
repnz
add
aaa
lahf
push
ret
or
pop
adc
xor
adc
jmp
jb
jp
stos
pop
mov
cmp
rolb
or
aam
sbb
jae
pop
jbe
xchg
push
jnp
cmpsl
or
loopne
xor
cmc
in
push
xor
cs
or
int3
fcom
adc
sub
mov
xchg
xor
sbb
or
add
mov
xchg
ret
bound
xor
add
mov
scas
add
pop
push
jmp
mov
cltd
jle
nop
scas
nop
aam
cld
mov
push
push
add
jp
mov
mov
ret
rcrl
pop
pop
pop
enter
pop
add
jmp
cmp
movsb
jmp
in
insb
xor
cmp
inc
mov
add
enter
add
add
jae
mov
cmp
add
lds
add
les
fiaddl
sub
jo
js
inc
push
ret
add
pop
ss
in
mov
jns
push
push
xchg
mov
ror
add
jmp
lods
in
sbb
sbb
dec
jle
adc
pop
xchg
dec
rorb
ret
xor
xor
shl
sahf
cmp
mov
inc
iret
push
lcall
addb
cmp
sub
ds
repnz
hlt
jmp
mov
outsl
popa
dec
pop
inc
cmp
mov
and
dec
mov
addr16
popf
dec
sub
and
or
push
stos
mov
stc
or
ja
dec
push
scas
mov
mov
rcl
pop
rcrb
mov
mov
adc
add
arpl
std
xchg
xorl
je
daa
push
pop
adc
roll
or
push
push
call
popf
adc
pop
leave
ja
insl
adc
aam
scas
pop
sub
movsb
lock
mov
push
xor
aam
inc
mov
scas
dec
mov
push
push
sub
fsubs
cmp
cld
mov
push
jmp
mov
call
dec
inc
add
push
cmc
push
pop
rolb
dec
jae
jns
cmp
xor
add
int3
int3
pop
jno
mov
mov
sbb
jno
cmp
lcall
adc
mov
dec
add
push
sbb
cmpsb
je
test
jecxz
adc
test
pop
fld
shrb
bound
mov
xor
enter
push
jae
jae
xor
inc
add
mov
adc
cmp
and
xchg
sbb
and
xchg
adc
popa
xchg
pop
or
cmp
push
push
pop
dec
out
push
jnp
jo
mov
pop
cmp
fsubrl
cwtl
loopne
adc
jge
mov
add
push
jmp
sbb
cld
in
je
cmp
daa
movsbl
shl
call
ret
mov
mov
test
add
mov
test
bound
sbb
sbb
movb
pop
and
or
xor
nop
lret
add
in
pop
or
mov
xchg
cmp
sarl
and
push
rolb
orl
mov
cmp
roll
lahf
pop
jae
clc
imul
inc
es
das
ds
fs
sub
lea
les
adc
push
pop
cmp
cmpxchg
lock
jnp
pop
jno
sbb
jge
mov
fstps
add
add
mov
dec
rolb
inc
push
push
scas
sarb
mov
or
pop
jmp
sub
inc
and
cmp
stos
ret
shrb
clc
jae
jg
or
mov
loopne
pop
jle
pushl
mov
mov
es
sub
adc
das
jno
lods
shrb
dec
pop
movsb
push
mov
inc
loopne
data16
jl
hlt
mov
or
push
fmull
or
clc
add
mov
add
movzbl
je
filds
mov
inc
mov
mov
cmp
jl
inc
jecxz
inc
dec
clc
addl
ja
mov
sub
push
mov
or
orb
or
mov
add
or
mov
cmc
dec
fisttpl
and
or
xlat
mov
cld
push
leave
push
xor
mov
inc
call
jne
xor
xor
push
mov
adc
les
pushl
cmp
pop
pop
push
mov
mov
test
insb
into
push
jmp
add
cli
imul
xor
push
mov
pop
push
nop
xchg
add
add
xchg
lret
in
or
xchg
icebp
xchg
fs
push
inc
test
mov
sub
ds
fstl
div
jno
mov
mov
cmp
push
gs
and
ja
cmp
xchg
lahf
lret
adc
push
cmp
adc
xor
mov
popa
in
pop
movsl
imul
adc
mov
adc
loopne
xor
jmp
arpl
inc
xor
fisubs
jmp
in
add
jo
adc
mov
or
and
enter
sub
add
mov
and
mov
pop
mov
loop
mov
inc
or
sbb
inc
xchg
xor
test
dec
jo
dec
test
sub
insb
add
aam
cld
decl
enter
iret
jbe
mov
sbb
pushf
adc
jle
mov
or
cld
and
aas
insl
mov
xor
lods
add
xchg
cmc
dec
add
out
mov
fisttpl
jo
xchg
cmpl
cmp
sbb
icebp
jge
stos
jne
push
fsubs
jbe
push
call
push
push
push
cmp
sub
jmp
push
scas
or
mov
hlt
mov
jmp
cmp
and
enter
dec
jae
sbbl
mov
jmp
mov
test
cmc
sub
jae
push
xlat
mov
mov
cmpsl
js
sti
lea
xchg
mov
loop
push
push
xchg
or
add
je
sbb
jl
cmpsb
dec
or
or
and
outsl
sub
cmpsb
leave
loopne
in
mov
into
mov
jnp
xchg
shrl
xchg
push
test
lds
dec
aad
sub
sahf
push
sbbl
sldt
sub
popf
aas
jb
movsl
sub
add
je
xor
add
push
inc
arpl
ds
mov
popf
sbb
add
adc
aad
rcl
and
loope
mov
add
mov
cmp
mov
add
mov
dec
mov
mov
lods
pop
and
mov
pop
shrl
test
jmp
push
iret
loopnew
movsl
jbe
lcall
cmp
add
scas
and
xsaves
pop
xor
xchg
push
cmp
push
and
or
push
mov
push
std
adc
cmp
xchg
jo
aam
enter
ss
ficoml
loopne
mov
nop
push
int3
dec
sti
dec
lods
add
shll
dec
cmpl
pop
xchg
xor
call
sub
scas
add
push
rolb
aam
or
xchg
shrb
and
push
sbb
xor
cmp
jo
sub
je
das
dec
into
adcl
je
fdivs
add
test
arpl
pop
mov
lcall
les
sbbb
pop
lods
push
dec
cmp
push
inc
lock
aam
test
cmpl
adc
lret
jp
fwait
movl
aas
xor
add
mov
inc
daa
push
sbb
and
cmp
fsubrl
fdivl
jbe
pop
stc
adc
inc
add
test
nop
mov
negb
push
insb
or
sub
add
adc
jae
cmpsl
shlb
shlb
jo
bnd
adc
mov
and
inc
shlb
mov
add
popf
mov
xor
inc
ret
pop
adcb
or
pop
insb
push
pop
jo
jae
movsl
fwait
mov
popf
pop
lret
leave
lea
fnstenv
out
or
pop
clc
aam
or
cltd
add
int3
inc
add
imul
lods
mov
mov
sbb
mov
xchg
aad
push
jmp
ret
call
jmp
push
push
pop
loopne
test
mov
sbb
jmp
orb
push
push
xchg
sbb
sub
divb
daa
popa
jne
ret
mov
lahf
imul
imul
insb
bound
fwait
hlt
jg
cmp
pop
cmp
jbe
push
loopne
out
in
jmp
push
pop
push
sbb
jmp
mov
out
or
add
fisubl
nop
or
nop
cmpsl
out
out
out
or
cmp
bound
pop
test
sbb
pop
clc
jne
mov
mov
mov
push
repnz
add
loopne
pop
mov
leave
or
xchg
fucomip
cmp
sub
out
jg
jne
std
fisubrl
or
pusha
jo
cmp
call
jmp
popa
push
push
adc
xchg
insb
das
movsb
push
push
call
cmp
sbb
jl
pop
lea
add
call
jmp
jg
pop
lods
xchg
dec
pop
ds
and
sarb
cmp
jae
movsl
pop
or
xchg
cmp
dec
enter
jbe
add
inc
xlat
insl
sbb
in
mov
add
out
dec
in
lock
adc
push
in
xor
dec
jbe
xchg
mov
fidivrs
popa
loope
push
cmp
xor
inc
xchg
cmp
inc
cmp
jns
movsb
push
or
pop
in
mov
push
mov
xchg
lret
add
add
pop
sbb
or
pop
add
cmp
out
xor
mov
xor
leave
cmpsl
loope
loopne
or
mov
jae
lret
sub
mov
sub
push
enter
cmp
ret
jecxz
icebp
into
adc
or
popa
in
pop
sub
or
mov
push
and
sbb
insb
or
mov
loope
imul
xor
mov
ret
sahf
test
mov
mov
sub
sub
or
fnsave
sub
adc
stc
push
sbb
fwait
addr16
sub
lea
sub
push
ret
push
jo
js
imul
pop
inc
ss
and
sub
xor
sbb
into
loopne
js
xor
jl
movsl
jae
cmp
lcall
inc
fiadds
stos
and
lcall
movsb
lret
inc
push
push
add
sbb
gs
test
push
mov
mov
xchg
fnsave
add
push
push
push
add
popa
add
push
stc
jne
std
add
sub
bound
inc
push
lret
jb
inc
imul
cmp
stos
and
mov
iret
mov
aam
mov
daa
jmp
dec
adc
jge
jne
or
and
jnp
mov
pop
adc
cmpsb
push
push
addr16
xorl
inc
leave
lods
and
xor
daa
test
inc
mov
nop
jo
in
mov
and
sbb
or
fcomps
fnstsw
and
jb
mov
movsb
push
pop
aaa
loope
xchg
aam
fcompl
dec
jnp
push
test
jne
and
dec
movhps
imul
data16
mov
jmp
mov
mov
frstor
sub
ja
add
adc
add
sub
sub
outsb
pop
or
mov
push
addr16
leave
js
cs
inc
filds
jno
lods
or
push
mov
or
inc
add
aaa
insl
in
and
pusha
roll
shl
adc
int3
add
shlb
dec
mov
pushl
sub
push
push
sbb
cmp
xchg
add
push
and
cmp
fadd
ret
das
loopne
mov
jmp
pop
add
ret
xchg
leave
cmp
sahf
sub
xor
sbb
xchg
subb
lea
dec
jo
dec
lret
lcall
mov
push
push
inc
add
pop
stos
or
adc
jo
movsl
adcb
shll
rolb
or
jbe
leave
mov
movb
or
push
int
cmp
jb
cmp
repnz
and
sbb
inc
mov
dec
jae
popa
push
ret
imul
push
add
xchg
pushf
add
aad
inc
mov
add
lahf
mov
push
pop
push
inc
adc
ret
pop
stc
hlt
es
je
scas
add
jmp
aaa
std
mov
js
mov
mov
mov
cli
das
je
jns
outsl
mov
mov
cmp
addr16
je
cmp
jne
mov
sbb
inc
ret
add
pop
dec
lea
negb
jmp
dec
mov
dec
xor
push
cmpsb
mov
and
popa
ljmp
testb
je
testl
scas
inc
sbb
cld
cmp
jbe
push
lea
in
call
or
inc
cmp
je
sub
inc
jmp
inc
and
xchg
cmp
mov
mov
shrb
loop
adc
out
clc
mov
jg
cmpsb
repnz
je
aam
mov
add
adc
into
ret
addb
push
xor
add
cmp
in
test
inc
pop
xchg
sub
cld
inc
xchg
cmp
jne
mov
insb
outsb
hlt
adc
das
test
cli
mov
lock
je
rol
pop
inc
dec
outsb
jb
imul
fdivs
js
sub
push
push
push
nop
adc
jge
and
xchg
or
sti
jp
add
push
push
sarb
xor
imul
push
loop
arpl
and
pop
cmp
popl
ss
mov
movzwl
ljmpw
mov
add
jae
outsb
addl
movl
lock
shl
add
jmp
pushf
aas
insb
sti
and
dec
iret
sub
negb
jns
test
jne
xor
dec
push
cmp
adc
jg
push
call
cmp
push
fsubr
cmp
xor
inc
cmpb
sub
and
lds
xchg
or
int3
sbb
mov
fistl
inc
jg
or
jge
jae
jae
xorb
jle
es
sub
inc
jae
jge
jle
jmp
or
jl
or
adc
jg
test
inc
test
jbe
lea
cmp
outsb
lock
aad
push
hlt
pop
arpl
pop
or
je,pn
test
jne
pop
rclb
cld
jb
rcll
push
or
jae
movb
inc
push
or
sub
mov
and
sbbl
adcb
xchg
data16
jo
testl
ljmp
jge
test
mov
mov
adc
sbb
add
daa
cmp
orb
inc
mov
cmp
lock
enter
push
xor
add
push
mov
lods
xchg
lods
adc
mov
hlt
dec
ret
xchg
out
and
in
xchg
mov
push
mov
shll
repz
insb
repnz
ret
mov
push
es
dec
stos
int3
cmc
mov
icebp
pop
pusha
fiadds
inc
sahf
mov
xchg
jp
adc
pop
test
rcrl
sbb
or
xor
ss
mov
push
cmp
aad
cmp
push
sbb
loopne
movsb
cmp
push
ret
int
xor
or
int
jp
cmp
rcrl
adc
push
mov
cmp
cmp
out
add
pop
rclb
mov
push
popf
je
pop
xlat
out
pop
pop
add
mov
test
mov
push
repz
add
sub
jne
or
xchg
cmp
xchg
and
or
push
add
inc
mov
rol
dec
nop
rcl
pop
cltd
mov
jp
inc
mov
call
sbb
sub
mov
cwtl
ret
cltd
lds
push
decl
push
pop
push
movl
push
adc
dec
or
xor
jo
push
push
lahf
jbe
rol
sub
add
inc
xchg
adc
jle
push
mov
mov
rclb
add
push
enter
add
mov
pop
popf
popf
int
sbb
cmp
ds
xor
push
in
pop
outsb
je
pushl
call
mov
mov
stos
out
pop
pop
lea
outsb
fsubr
jae
shll
mov
push
cmpl
push
cwtl
inc
add
cmp
cmp
psubd
lea
pop
pop
bound
pop
xlat
int3
or
sub
pop
fisttps
adc
pop
xor
xor
jl
and
jbe
mov
jge
push
gs
add
cmpl
inc
sti
inc
inc
fwait
cmp
cld
pop
pop
pop
outsb
adc
nop
push
mov
cmp
mov
in
ds
sbb
adc
out
xchg
mov
xchg
sbb
push
js
xor
dec
push
inc
inc
add
xor
push
fs
sbb
shll
adc
inc
lcall
jo
or
or
popl
and
cld
pop
arpl
push
xchg
icebp
in
clc
mov
mov
mov
add
test
jl
add
pusha
cmpl
push
sbb
inc
push
add
pop
sub
mov
loop
sbb
add
sahf
mov
rcpps
fdivrs
les
add
push
add
fwait
les
leave
add
pop
inc
add
add
test
jg
add
mov
pusha
adc
push
ret
or
sti
pusha
jb
enter
push
mov
xor
add
lods
add
push
adcl
dec
cmc
jbe
inc
mov
xchg
mov
dec
mov
mov
out
sti
and
repnz
push
xchg
pop
mov
mov
push
ss
cmp
sti
into
mov
arpl
dec
jbe
push
push
popf
test
jns
inc
pop
xchg
addl
cmpsl
lret
and
pop
cmpsb
xchg
and
sub
lea
or
dec
mov
loope
fstl
frstor
push
xor
test
inc
pop
xchg
fs
add
xor
push
cli
insb
and
jb
cmc
call
sub
idivb
faddp
or
shrb
es
aam
or
scas
or
int3
shl
enter
call
ret
cmp
clc
add
dec
push
xchg
add
ficoms
mov
sbb
jmp
syscall
ds
cwtl
cmpl
dec
push
xor
xor
mov
add
lret
sbbl
mov
pop
fmul
imul
insl
jnp
das
aam
push
ffree
test
mov
js
mov
into
cmpl
movsb
ficoml
lods
mov
movsl
cmc
push
add
inc
xor
mov
fiaddl
adc
cmpsb
or
xchg
xchg
lods
adc
jno
jl
inc
je
fstps
cmp
mov
push
add
mov
or
jne
jae
add
xor
push
cmp
mov
inc
jp
rclb
stos
fidivs
push
orl
test
test
dec
cmp
jbe
rcrb
push
adc
mov
jo
add
mov
fimuls
jnp
mov
mov
cmc
xchg
jne
mov
pusha
cmp
mov
cmpsl
lods
jl
add
fwait
pop
loopne
fmuls
insl
cwtl
cmpsl
mov
jg
lcall
je
cmp
rclb
pop
jne
aam
pop
inc
cmp
cmpsl
jne
push
imul
jne
or
mov
pop
call
push
jecxz
mov
and
or
insl
in
xor
cmp
fucomip
les
jne
jmp
sbb
xor
xchg
sub
mov
mov
sbb
mov
gs
hlt
mov
jnp
out
fisttpll
jbe
lock
add
je
pop
in
or
pop
in
stc
mov
fs
jmp
sub
repz
outsb
push
div
jmp
pusha
mov
jae
movsb
push
mov
add
ja
sbb
pusha
mov
adc
xchg
mov
sub
decb
adc
adc
inc
lret
addl
loopne
pop
adc
xchg
out
sbb
pop
cmp
pusha
push
shrb
inc
decb
or
or
ret
pop
pop
jle
push
add
je
adc
push
rclb
fucomip
pop
push
clc
std
push
mov
orl
jbe
aas
add
inc
arpl
sub
xchg
xchg
pop
cmp
mov
add
mov
shlb
mov
xlat
push
push
cs
lret
in
push
pop
pop
pop
in
mov
fs
mov
xor
sbb
xor
jae
sub
push
gs
inc
add
sbb
cmp
or
lods
xchg
mov
dec
cld
push
mov
mov
push
les
pop
stos
mov
and
sbb
sbb
jmp
push
cs
add
push
adc
shrl
add
mov
stos
push
sbb
push
or
inc
adc
dec
sub
push
sbb
pop
cltd
frstor
outsb
and
push
push
loopne
push
insb
or
or
cmpsl
mov
mov
pop
xor
leave
xor
pop
jo
cmp
sbb
ljmp
ss
sbb
incl
pop
inc
push
pop
cli
jp
push
pop
jmp
mov
call
aam
je
mov
or
sti
and
add
mov
push
or
mov
and
push
push
fwait
sbb
fstpt
mov
and
lods
test
lock
punpckhdq
hlt
or
push
push
push
xor
sti
es
sti
mov
addr16
subl
in
inc
jae
imull
mov
pop
outsl
inc
dec
std
mov
cmpsl
xchg
inc
cmp
cmp
loope
not
mov
ret
je
lret
jmp
sarb
mov
je
mov
cmp
jne
vpavgb
adc
in
mov
ljmp
add
adc
adc
lret
push
ret
jae
nop
mov
cltd
sbb
and
pop
sbb
pop
fwait
rcrl
mov
push
mov
cmp
and
jno
push
push
push
inc
sbb
xchg
icebp
std
mov
outsb
or
test
into
call
sbb
push
adc
push
cmp
call
lcall
add
adc
call
add
in
xor
mov
cmp
lock
shlb
or
or
push
lret
xchg
jbe
jo
mov
adc
sbb
sbb
mov
je
or
adc
add
cmp
sub
js
bound
addl
add
inc
cmp
adc
or
adc
push
sbb
sub
sbb
fists
push
jmp
cmp
jge
fucom
hlt
sub
inc
loopne
or
out
test
cltd
mov
jecxz
in
je
divb
call
lea
dec
xor
or
push
inc
add
loopne
add
cmp
jmp
jmp
jmp
inc
dec
xor
inc
cmp
int
xchg
rorl
inc
hlt
mov
mov
lock
lock
hlt
adc
outsl
enter
inc
sbb
loop
inc
inc
mov
ljmp
aam
pop
enter
adc
jb
sub
add
pusha
pushl
push
xorl
test
xchg
ljmp
mov
and
add
adcb
push
add
sbb
call
movsl
orl
je
adc
pop
fwait
outsb
insl
mov
inc
jne
addr16
ficoml
adc
test
add
call
shlb
cs
sub
mov
out
adc
push
pop
and
mov
inc
pusha
scas
mov
push
cmpb
jns
jno
rolb
lock
and
icebp
or
push
cmp
cmp
call
scas
and
or
adcb
sub
out
fsub
push
adc
cmpsl
mov
pop
sbb
push
outsb
outsl
or
test
jecxz
sbb
pusha
es
inc
je
ret
mov
jae
bound
adc
movsl
shl
testb
push
sub
loop
inc
mov
push
das
in
sbb
sbb
and
inc
add
dec
push
leave
loopne
rolb
sub
aam
ficoml
adc
jbe
lahf
or
push
jmp
mov
mov
in
fildl
jno
and
sbb
inc
pop
push
gs
adc
dec
dec
mov
or
mov
sbb
add
dec
dec
jne
jns
jnp
les
add
jmp
cmp
in
push
sbb
jg
jbe
push
aas
in
add
mov
jmp
xchg
cmp
test
or
lock
mov
aas
imul
int3
lret
shlb
in
movsl
sbb
outsl
dec
fdivs
inc
lea
fs
adc
pop
push
loopne
mov
xchg
dec
lods
push
sub
sub
inc
aam
shrb
and
out
mov
mov
nop
rcrl
pop
movsb
adc
pop
pushf
fsubrp
push
mov
mov
test
fs
push
mov
adc
fistps
inc
mov
pop
xchg
inc
cmp
jl
jmp
pop
dec
push
add
stos
sbb
rolb
jmp
add
add
cmp
add
aas
mov
leave
jmp
dec
iret
repnz
int3
push
and
clc
xor
cmp
out
imul
jne
adc
mov
jne
push
mov
xor
imul
sbb
dec
bound
jge
and
test
daa
push
dec
lret
sbb
stos
and
stos
cld
int3
add
rcl
adc
add
cmp
inc
push
jmp
cmp
inc
cmpl
inc
push
add
out
mov
and
inc
inc
clc
ret
or
jg
push
adc
cli
faddp
pop
mov
mov
scas
mov
jmp
push
dec
or
loop
mov
mov
pusha
push
cmp
je
int3
or
aas
ret
add
adc
jns
dec
je
sbb
mov
or
hlt
call
out
ljmp
add
jmp
or
sbb
xor
hlt
gs
out
icebp
rolb
inc
daa
or
cmp
inc
flds
inc
adc
cld
es
inc
aas
add
insl
jne
mov
notb
mov
sbb
sbb
add
leave
sub
fisttps
imul
pop
inc
fstpl
or
or
js
push
je
fdivs
adc
mov
and
faddl
sbb
adc
dec
cmp
neg
xor
add
rclb
inc
push
popa
add
andl
cwtl
jle
jne
or
mov
xchg
inc
dec
nop
push
add
push
ds
add
push
push
loopne
out
mov
loope
pop
xchg
aad
test
fidivl
adc
pop
ret
pushl
push
iret
loopne
or
and
pop
sarl
iret
add
addr16
jl
push
imul
inc
cmp
add
lea
mov
and
sub
or
subl
inc
addr16
push
cmp
pop
iret
mov
mov
jne
inc
jge
inc
ja
movsb
mov
xchg
shrb
dec
loopne
mov
sahf
or
dec
bound
orb
cmp
mov
popa
add
inc
sub
mov
sar
or
push
mov
cmp
mov
in
sbbl
xor
scas
sub
jo
cmp
fdiv
mov
bound
daa
mov
xor
xchg
pushf
or
add
mov
stos
aad
loopne
sub
cmpsb
add
sbb
js
cmpsb
or
loop
pop
js
add
jbe
lret
lods
jb
loopne
and
adc
gs
push
lds
or
data16
nop
or
or
imulb
pop
lret
subl
pop
jae
adcb
iret
or
add
and
adc
pop
sbb
dec
scas
push
mov
sarl
pusha
popa
adc
pop
push
mov
sahf
bswap
incl
shl
fists
aaa
ja
push
and
fcomp
ljmp
pop
sbb
push
movsb
or
inc
sbb
in
adc
orb
xor
jmp
dec
sub
or
add
movl
add
jl
mov
xor
push
adc
enter
dec
pop
sbb
xor
cmp
jg
dec
and
jb
test
pop
pop
or
aad
enter
pusha
cmp
ja
sbb
test
pusha
out
and
mov
add
cmp
inc
xor
xor
scas
sbb
jo
jge
or
sbb
test
mov
leave
jbe
sbb
lret
or
roll
ficompl
pop
iret
sub
fnstenv
sub
and
push
stos
in
push
add
xchg
xchg
and
or
push
push
xchg
xor
or
insb
pusha
adc
sbb
push
add
add
cmp
cwtl
les
fisubrl
scas
test
das
sbb
push
fcompl
mov
ja
pop
sbb
or
lret
rcrl
dec
inc
or
sub
xor
xchg
pushf
fs
or
cmpsl
xchg
lods
gs
movl
ljmp
mov
and
add
pop
movl
and
mov
xchg
dec
jmp
dec
jg
mov
aad
subl
xor
sbb
test
add
mulb
bt
or
mov
aaa
icebp
ds
jbe
mov
and
add
push
adc
xor
mov
sbb
divb
mov
mov
push
mov
or
sub
and
add
add
nop
sbb
jo
push
cwtl
add
xchg
sbb
jmp
mov
xor
push
and
mov
inc
cmp
sub
mov
push
lods
xchg
popl
and
push
in
movsb
cmp
xchg
shlb
divb
push
rcrl
int
jge
push
sub
addr16
dec
mov
and
push
gs
cmp
adc
xchg
je
xorl
xchg
jle
adc
subl
addl
mov
rorb
ret
out
insb
pushf
cmpsl
jl
or
xor
inc
aaa
sbb
mov
xorl
nop
jmp
in
push
jge
adc
loopne
ret
inc
lods
xchg
xchg
xchg
nop
fldl
cmp
dec
aas
push
loopne
push
aaa
push
jge
js
xchg
aaa
test
add
pop
mov
xor
mov
mov
adc
imul
pop
and
in
mov
push
je
push
lock
insb
dec
jmp
adc
jne
sbb
and
out
cmpsl
fldl
mov
and
cmp
pop
ss
inc
pushf
andb
or
mov
inc
lods
add
hlt
xor
dec
lods
or
popa
pop
popf
lea
xor
dec
inc
test
push
fsub
and
xor
mov
enter
mov
dec
dec
jns
adcb
aas
fs
push
adc
push
dec
rorb
sub
and
adc
sub
mov
ja
push
repnz
or
pop
jmp
adc
fsubrs
and
and
imul
in
mov
bound
mov
out
sub
mov
and
lock
cmp
sahf
adc
addr16
pop
inc
data16
adc
loopne
inc
lods
inc
jbe
adc
mov
jmp
ret
sbbl
pop
or
lcall
lock
inc
loopne
les
ror
popf
fildll
pop
push
nop
xchg
out
jnp
aam
sahf
pop
jbe,pn
fdivl
ret
and
push
fs
pop
mov
insb
sbb
loopne,pn
cmpsl
je
mov
jo
dec
sbb
jbe
mov
enter
mov
mov
jmp
push
cmp
orl
mov
fistpll
jne
cmp
push
fsubr
sbb
pop
adc
inc
subb
xchg
xchg
xorl
add
pop
xchg
out
and
cs
add
adc
jns
jecxz
push
xchg
mov
cmp
lock
lock
lods
mov
enter
push
sbb
mov
cmpl
fsubs
jmp
mov
cld
adc
jno
mov
addr16
mov
arpl
adc
sbb
mov
mov
aad
xor
scas
sub
dec
dec
loop
cltd
jl
sub
push
xor
in
shlb
lods
push
inc
mov
inc
xor
or
loopne
inc
and
daa
in
lods
mov
or
mov
pushf
add
push
push
fisubl
mov
js
addb
test
push
add
in
sbb
and
jle
xchg
leave
ficoml
fcmovne
inc
and
jne
mov
sbb
outsb
or
pop
push
int
jle
loope
and
imul
push
sbb
push
andl
push
rcrl
rcl
leave
sub
cmp
rcrb
add
roll
punpckhbw
fnstenv
push
imul
pop
mov
push
mov
mov
inc
push
shlb
and
mov
or
mov
inc
testl
jbe
movsl
pop
pop
cmp
cmpsl
push
sub
dec
cmpl
cmp
and
hlt
shl
xor
les
jp
mulb
fdivs
je
hlt
sub
or
push
roll
out
xor
addr16
dec
add
add
js
ret
int3
xchg
xor
pop
mov
sub
sbb
xchg
fs
xor
or
ljmp
sub
push
add
inc
cmp
or
ret
cwtl
adc
lcall
add
or
fildl
or
adc
push
stos
adc
mov
je
test
inc
xor
adc
dec
adc
adc
mov
lods
arpl
out
dec
pop
xchg
mov
loope
or
xchg
jne
test
lret
inc
pop
add
lret
and
ljmp
add
cli
daa
shll
pop
add
sbb
inc
push
outsl
aaa
cmc
leave
clc
jp
cmp
aam
fld
mov
mov
sar
aas
mov
jmp
outsb
add
or
push
cmp
push
jp
jnp
mov
daa
in
cld
or
sbb
adc
xor
popf
dec
xchg
arpl
sbb
mov
clc
xor
popf
xchg
xchg
mov
jae
adc
in
xchg
adc
mov
sbb
adc
leave
and
push
adc
adc
mov
adc
inc
fs
dec
adc
testb
xor
clc
push
push
dec
cmpw
je
cmp
test
xchg
dec
mov
dec
clc
cmpl
push
or
xor
add
or
push
add
in
or
test
adc
add
cmp
pushf
mov
lcall
mov
popf
mov
jae
inc
cmp
jl
mov
cltd
mov
and
das
jmp
cmp
notl
loopne
cmp
sub
cmp
or
in
je
xchg
mov
dec
jnp
dec
xor
mov
nop
push
jnp
int3
lea
in
mov
rcrb
fdivrs
bound
popa
mov
dec
jae
stos
sbb
xchg
dec
cmp
into
sub
js
pushf
out
dec
cmpsl
lods
push
jno
xchg
mov
fs
sbb
stos
mov
push
sub
mov
roll
mov
xor
xor
sbb
cmp
popf
jle
notl
movb
sbb
mov
ret
cmp
lea
pop
decl
rolb
add
std
jg
add
cmpl
push
jne
push
push
jne
shlb
add
je
cmp
leave
mov
mov
cmpsb
mov
add
stos
mov
fstpl
aam
mov
and
mov
inc
or
dec
adc
jnp
lods
jecxz
pop
pop
jmp
xor
dec
or
outsb
ret
mov
mov
dec
cwtl
test
jo
loopne
jnp
adc
movsb
xchg
lods
icebp
mov
ret
insb
call
pop
jne
inc
jne
add
inc
push
jecxz
dec
test
call
rolb
add
loope
dec
sbb
out
popf
lods
hlt
rcll
push
rorb
jb
ss
mov
cld
xor
xor
std
xor
cmp
cmp
into
or
or
add
ja
xchg
clc
jnp
pop
xchg
out
and
pop
cmp
sub
lahf
mov
push
or
and
mov
sub
cmp
fcmovnu
mov
in
repnz
out
neg
ret
add
cs
cmpsb
dec
les
add
out
adc
xchg
das
into
jno
out
push
adc
jmp
pop
lock
insl
cmp
test
mov
sbbb
push
sti
push
adc
ret
xchg
pop
add
mov
sub
mov
and
or
fwait
push
pop
xchg
or
out
movsb
fimull
cli
cmp
popa
movsb
jne
push
and
and
mov
leave
xchg
addl
nop
adc
mov
push
pop
lahf
mov
cmp
rorb
lea
loop
sub
ja
jno
mov
add
into
adc
fbstp
dec
incl
adc
or
repz
test
movsb
cmp
out
outsl
jae
or
scas
push
adc
cli
test
mov
cmp
stos
popa
lea
ret
add
in
pop
push
push
pop
or
jno
mov
inc
push
into
push
cmc
pop
inc
mov
repz
add
inc
jg
dec
inc
dec
adc
roll
push
push
mov
cmpl
mov
xor
mov
jno
cmp
rorb
dec
xchg
mov
add
mov
dec
lret
notb
xchg
lret
pop
rorl
mov
inc
push
into
or
or
sar
add
mov
xor
mov
and
adc
inc
jmp
cmpsb
ljmp
in
psubw
popa
add
stc
lock
fs
add
aaa
les
inc
jp
in
sub
sbb
mov
nop
jmp
sarb
repz
sbb
mov
insb
jne
bound
pop
cmp
ror
ret
sbb
adc
mov
cmpsl
data16
xor
mov
pop
pop
pop
in
xor
mov
mov
shl
js
mov
and
push
push
xchg
mov
push
add
mov
pop
inc
inc
dec
pop
orl
mov
push
cmp
push
scas
repnz
ffree
push
mov
adc
push
lods
add
andl
sub
xor
pop
jbe
or
pop
cmpsb
push
cwtl
sti
cmp
loope
rol
loope
lahf
pop
mov
and
pop
outsl
cmpsb
mov
daa
adc
sub
dec
or
mov
stos
lea
push
pop
xchg
push
dec
into
ds
push
jns
add
dec
inc
insb
sarl
in
arpl
mov
cmp
adc
test
mov
add
and
xchg
push
test
test
xchg
pop
sub
cmc
ret
inc
in
mov
add
stos
andl
xchg
adc
pop
dec
adc
sub
shl
jo
lock
mov
jecxz
les
les
imul
jmp
ja
sbb
add
pop
add
test
icebp
xor
addl
push
and
sbb
out
ror
xor
xor
add
cld
and
add
cmp
adc
les
push
jmp
add
test
popa
inc
push
jb
aam
jle
adc
sbb
loop
push
xor
jmp
mov
or
movb
insb
fld
sub
dec
je
dec
xchg
testl
aaa
sbb
repz
lea
cltd
icebp
ret
mov
imulb
fidivl
sti
mov
add
idiv
test
jae
lea
jmp
cmpl
sub
shll
sub
clc
inc
lock
pop
push
jp
clc
push
mov
cmp
adc
and
das
dec
into
sbb
xor
sbb
jns
jb
inc
or
pop
jmp
xchg
add
push
shl
adc
mov
add
andb
push
sbb
push
adc
movsl
scas
rcrb
pusha
add
push
mov
inc
jmp
xchg
dec
inc
jo
dec
xchg
push
rol
in
sub
insl
sbb
xlat
lcall
cwtl
jb
cmpsb
pop
and
or
mov
jge
adc
pop
orl
shrl
sti
add
sbb
nop
popa
mov
add
push
lret
inc
push
repnz
movsb
ret
mov
fldl
dec
or
mov
sbbl
fisttpll
icebp
or
pop
add
xor
push
rolb
neg
bound
push
ljmp
pop
pop
movsl
push
mov
and
pop
fidivrl
lahf
push
je
mov
movsl
shlb
sbb
rolb
mov
sti
xchg
icebp
js
add
stc
xchg
movsb
jmp
outsb
or
fcoms
test
hlt
push
popa
xchg
and
data16
mov
push
adc
add
or
push
les
xor
add
sbb
cmp
ds
pop
mov
jae
dec
add
daa
shrl
and
inc
add
not
lea
sub
enter
and
nop
and
pop
or
xchg
nop
mov
add
adc
dec
nop
add
test
je
jo
jo
sbb
mov
aam
popf
and
cmp
lret
push
pushf
mov
bound
pushl
push
pop
enter
iret
adc
cs
add
js
jecxz
or
inc
inc
jb
clc
and
mov
push
adc
dec
push
pop
xor
or
mulps
inc
adc
lahf
mov
rolb
sbbb
push
cmp
xorb
imul
add
push
cmp
adc
data16
in
mov
mov
bound
or
je
test
dec
imul
jne
mov
fnstenv
push
push
test
cmp
dec
or
mov
mov
cld
cmp
add
es
push
add
dec
data16
dec
and
sbb
xchg
mov
hlt
hlt
sahf
ret
enter
or
and
popa
sbbl
push
or
pusha
sub
cmp
jae
rclb
fmuls
inc
sbb
fxtract
scas
pusha
je
jne
push
js
fistl
nop
sbbb
cld
loopne
fnstenv
mov
xor
xorb
and
xchg
fdivs
dec
inc
scas
out
mov
inc
ja
push
cmp
pop
push
push
addr16
sub
setg
xchg
lea
adc
pop
cs
testb
pusha
cmp
mov
mov
sahf
jp
sub
neg
sbb
and
bnd
movzwl
push
sub
push
adc
pop
adc
clc
or
jp
mov
je
adc
xchg
and
cmpl
pushl
jnp
inc
pop
mov
ss
rol
fistl
adc
dec
cmp
popl
sbb
jge
add
cmp
jbe
or
jne
fidivrs
mov
cmpsl
shrb
std
xor
jnp
inc
js
mov
cmp
fwait
or
in
mov
and
sbb
cli
dec
jp
jmp
inc
jl
mov
addr16
mov
pop
mov
cmp
add
out
shll
lea
jmp
ds
jo
jns
adc
js
and
imul
dec
ret
cmp
ret
add
inc
add
cwtl
test
and
cli
cwtl
fisttpll
cmc
and
into
sbb
mov
push
js
mov
imul
add
sbb
inc
jecxz
xor
movsb
sub
popa
pop
mov
insb
stc
lods
jo
mov
sub
outsl
mov
mov
fisttpll
outsl
cld
adc
stos
ja
dec
enter
add
cmpb
fadds
add
int
adc
negb
outsl
and
xor
in
jae
andl
in
les
hlt
push
or
pop
jo
mov
cli
cmova
mov
lret
sub
pop
push
or
adc
fistpl
jmp
sbb
lock
add
call
or
and
mov
cld
shll
inc
lods
sub
fbstp
push
rorl
loopne
loop
test
sbb
pop
add
mov
jle
push
call
andl
pop
insb
dec
fists
int3
jp
push
jmp
daa
insb
aam
add
push
or
cmp
adc
jo
inc
cmp
les
dec
test
pop
sbb
aaa
inc
jg
xor
or
cmpl
xor
jae
sbb
xorb
mov
add
cmp
aad
xor
cld
popf
push
xor
sbb
push
repz
pop
pop
or
mov
cwtl
sbb
sub
sbb
inc
adc
outsb
lock
test
add
insl
or
push
insl
ds
pop
movb
iret
mov
xchg
xchg
xor
test
push
xchg
mov
and
inc
cmp
leave
ror
jae
cmp
push
push
and
ds
pusha
sarb
sub
and
pop
loopne
xor
or
scas
mov
mov
jmp
cmp
loopne
jb
push
xor
fadds
jae
das
or
push
push
inc
add
outsl
inc
or
and
jecxz,pn
lock
adc
js
inc
cmp
xorl
or
out
cs
push
sbb
aam
roll
hlt
push
push
mov
lea
add
outsb
xchg
or
jo
push
push
jmp
sub
fadds
addl
jg
pop
push
add
dec
mov
jno
ss
mov
arpl
into
and
popf
test
sub
xlat
inc
loopne
add
into
into
cmp
je
jmp
push
arpl
and
hlt
pop
dec
mov
fnstenv
leave
add
mov
mov
arpl
lea
cvtps2pd
dec
add
xchg
test
sarl
and
jge
dec
mov
in
ds
mov
roll
adc
inc
scas
xor
fs
jge
and
add
add
cmp
xlat
lods
add
clc
call
push
je
orl
cmp
pop
jl
push
sti
loop
xchg
and
mov
repnz
mov
inc
sbb
test
xchg
add
xor
shrl
inc
sub
sub
sbb
inc
sbb
lods
adc
xchg
sbb
and
test
adc
pusha
mov
je
mov
mov
inc
jge
xchg
mov
loope
ja
les
in
std
or
enter
out
push
aam
ja
daa
jno
fcomps
add
and
jo
test
xor
shl
push
inc
mov
cltd
add
add
test
sahf
ret
mov
mov
orb
add
mov
push
pop
lcall
gs
in
jle
push
push
lods
mov
xor
in
mov
xor
mov
or
pop
rcll
xorb
aaa
add
or
aad
cmp
rclb
mov
pop
or
xchg
pop
jae
aaa
push
sti
jb
mov
mov
mov
enter
push
adc
ljmp
shrl
add
xor
outsb
add
push
jnp
mov
cmp
cmp
add
pop
je
dec
adc
lock
popa
push
jae
lea
ja
cmp
aas
or
or
mov
pop
mov
pusha
arpl
pushl
and
stc
push
and
mov
mov
rorl
or
jle
mov
sub
pop
pop
aas
mov
mov
lea
shlb
call
add
out
aam
xor
jae
leave
jmp
push
and
sub
dec
and
dec
ja
push
xchg
and
sbb
adc
mov
adc
add
xchg
mov
dec
pop
imul
cltd
xor
xor
adc
notb
rclb
cld
cmpsb
or
shlb
out
mov
je
fs
fisubrl
adc
into
pushl
adc
roll
sub
lods
push
pop
data16
xchg
das
dec
mov
sub
inc
push
lods
adc
jb
pushf
push
data16
loope
xchg
jne
push
push
pop
xchg
pop
push
lea
cmp
sub
ret
jle
movsl
sub
popf
xor
xchg
pusha
jb
pop
adc
fisttps
mov
nop
and
loopne
cmpsb
adc
add
jecxz
mov
mov
add
xor
push
pusha
push
push
sub
jno
mov
lahf
jg
ret
or
or
pop
mov
clc
mov
mov
mov
lea
ret
inc
jg
dec
or
dec
inc
mov
cmpl
adc
mov
xorl
das
aas
xor
das
in
dec
xor
inc
and
xor
adc
add
fst
insb
xor
adc
sub
sub
jmp
push
inc
jmp
add
dec
add
pushf
jb
bound
or
jl
add
mov
std
incl
jge
jbe
push
es
add
jl
addl
mov
clc
and
lahf
add
outsb
nop
mov
ret
loopne
pop
mov
shl
test
mov
mov
fsubs
cmp
inc
js
mov
in
xchg
dec
ret
push
jae
lea
push
sub
shlb
pushf
decb
mov
ret
push
popf
stos
add
dec
sbb
inc
ja
jbe
add
jge
pop
ret
push
lods
add
ret
test
loop
sbb
in
cmc
loopne
jge
jge
mov
lahf
pop
cld
mov
fdivl
cmpb
xor
fnstenv
pop
shrl
jmp
push
cmp
cmp
sub
mov
mov
mov
adcl
movb
add
mov
lcall
fdivs
aam
push
sahf
pop
clc
xchg
jmp
push
sti
mov
in
cmc
xchg
jo
out
insb
testb
test
call
out
dec
mov
dec
in
add
jbe
sti
sbb
and
mov
push
rcrb
sbb
aam
xchg
js
cmp
mov
xchg
loopne
push
or
push
xchg
scas
std
jl
pusha
hlt
push
lea
out
sbb
int3
test
inc
push
dec
mov
and
pushf
push
xchg
jae
cmp
jns
xor
push
inc
xchg
or
push
cmpb
jmp
push
inc
pminub
or
sub
inc
cmp
insb
into
dec
add
adc
leave
orl
add
sbb
sbb
sbbl
in
loop
popf
mov
mov
fwait
cmp
test
add
lds
jb
imul
ljmp
js
jmp
pop
mov
cmp
sub
add
or
add
es
jecxz
test
lcall
or
and
jb
stos
add
add
add
aam
std
test
pop
inc
std
jno
dec
adc
loopne
test
mov
nop
push
add
dec
movsl
arpl
addr16
in
and
imul
imul
xor
loop
adc
test
out
in
nop
mov
out
push
cmpb
movb
pop
add
sub
add
push
das
or
inc
in
or
lea
pop
subb
mov
sbb
orb
mov
mov
int3
push
adc
ficompl
xchg
jmp
xchg
idivl
sbb
sub
sub
xor
sbbb
dec
mov
loopne
or
daa
fadd
ss
mov
jge
dec
pop
imul
fwait
arpl
addb
jnp
js
or
sbb
cmc
pop
clc
shlb
cmp
ret
ds
ret
dec
stc
clc
dec
cld
enter
mov
pop
pushl
add
scas
inc
pop
aad
adc
pusha
xor
cmp
inc
adcl
push
jmp
ljmp
cld
aas
es
sbb
pop
adc
lret
dec
xor
mov
adc
or
add
shrb
sub
lret
adc
mov
fs
adc
cli
hlt
popa
adc
adc
mov
loopne
add
int3
adc
jbe
jle
adc
in
mov
loope
pop
ret
xor
orl
stos
addl
in
xor
or
mov
dec
sub
in
cli
or
sbb
out
cmp
mov
mov
inc
sbb
push
outsl
mov
sbbb
add
xchg
popa
das
pop
sbb
outsl
mov
sbb
sbb
outsl
xchg
mov
dec
sbb
mov
and
xchg
jno
jl
push
mov
sarb
pusha
dec
test
out
mov
ret
dec
repz
popf
add
push
out
push
fs
or
add
pop
add
xor
test
in
mov
clc
filds
adc
jle
jne
or
mov
cmpsb
and
lea
loopne
inc
movsl
test
sbb
sub
test
pop
add
mov
add
sbb
inc
and
pop
movsl
xor
insl
and
fs
sti
mov
adc
pop
pop
lea
shlb
pop
xor
std
and
xchg
pop
push
sub
loopne
dec
stos
pop
pop
fimuls
cmpl
xchg
sbb
cmp
adc
push
out
mov
lahf
and
or
mov
inc
es
add
in
xchg
push
xor
jl
inc
outsb
lahf
ret
push
inc
xor
add
sub
icebp
mov
lods
dec
sub
xchg
mov
jmp
adc
aas
adc
add
push
jb
mov
aam
out
cmp
xor
or
mov
adc
mov
gs
mov
mov
xor
xor
loop
and
in
popf
and
pop
fwait
cmp
xchg
cmp
mov
es
push
out
mov
aam
xor
pop
call
fs
mov
test
je
test
ss
or
jle
or
jo
push
sub
rorb
pop
push
mov
je
push
jmp
inc
jmp
and
dec
xlat
push
cmpl
push
or
icebp
rorl
std
pop
das
jmp
insl
loopne
inc
cmp
jl
sbbl
das
adc
adc
js
fdivrl
sub
outsl
das
arpl
push
mov
mov
pop
sbb
adc
mov
mov
test
sbb
bound
pop
cmp
xchg
andl
leave
in
sbb
test
sbbb
loope
test
sub
loopne
jle,pn
cld
adc
dec
mov
mov
aam
add
inc
jle
fstps
popa
or
xchg
rcrb
inc
repz
adc
movsl
inc
push
pushf
push
cltd
imul
and
fdivrs
jle
sbb
mov
aaa
jns
cmp
sbb
dec
test
sbb
fwait
jo
call
or
pop
push
dec
sbb
mov
stos
xor
nop
add
cli
sub
push
mov
lea
push
in
inc
inc
aam
jbe
enter
ja
xchg
dec
add
cmpsb
fld
scas
add
das
cmp
fistpll
inc
cmp
ret
push
mov
or
xchg
hlt
and
cmp
in
jae
loope
pushf
cld
push
adc
dec
or
xchg
int
push
es
cmp
sti
gs
xchg
dec
clc
xor
lock
add
lock
lock
ret
jne
outsb
add
sbb
loope
cmp
mov
mov
sbb
push
mov
mov
popa
inc
test
sub
fbstp
xchg
repz
push
aaa
sbb
loopne
push
cli
and
and
and
jge
sbb
cmp
mov
cmp
jl
into
sarl
imul
mov
jne
inc
adc
mov
repz
jecxz
mov
frstor
lods
sbb
cmp
int3
pop
into
sbb
gs
xlat
dec
mov
outsl
push
mov
aam
ljmp
dec
and
pop
jmp
jg
xor
xchg
out
xchg
lock
sub
push
movl
dec
dec
add
inc
or
mov
jp
orb
mov
rolb
mov
xorb
popf
pop
call
repnz
rol
rcr
fcoms
xor
pop
push
loop
jo
dec
push
cmp
add
inc
cmp
push
scas
mov
adc
dec
pop
enter
sbb
loope
pop
mov
push
mov
add
in
loope
rcrl
and
orl
xor
imul
aaa
add
adc
xor
shll
xchg
ficoml
das
outsl
push
xor
add
dec
inc
loopne
sub
fstpl
mov
jl
mov
leave
cs
inc
jo
es
and
aas
lea
cmp
or
ss
aaa
stos
sub
dec
dec
jns
adc
jmp
iret
push
shrb
mov
adc
adc
shlb
pop
outsl
inc
pusha
inc
add
jmp
push
adc
xchg
xchg
ja
add
sbb
sbb
inc
das
test
inc
push
fdivl
fsub
push
pop
dec
in
xor
or
or
add
nop
pusha
mov
sbb
mov
cmp
roll
sahf
or
sbb
xchg
ret
js
je
dec
push
adc
mov
jmp
dec
sbb
sbb
inc
and
cmp
pop
cmp
and
push
sub
sub
push
lds
movsb
call
ret
in
sbb
adc
adc
add
dec
leave
adc
or
pop
mov
adc
sub
addr16
mov
neg
inc
push
xor
add
push
jp
jo
pusha
mov
pushl
cmp
jne
sub
adc
sbb
adcl
roll
adcl
daa
bound
fadd
movsl
jnp
xchg
inc
in
mov
jnp
mov
cltd
lahf
aaa
cmp
roll
rorb
cmpsb
push
push
dec
enter
fadd
dec
xchg
sub
push
mov
repnz
jmp
ret
std
call
ds
in
lods
pop
loop
pop
ror
clc
xor
rorb
popf
out
or
pop
gs
sahf
rolb
rcll
xchg
mov
ret
popf
lock
adc
or
mov
jne
push
fwait
outsl
xchg
loope
leave
js
jne
adc
mov
xchg
data16
mov
jne
or
jne
addr16
jl
inc
std
decl
adc
push
ljmp
fsubrl
cmp
into
mov
cmp
out
xchg
cmp
or
push
lret
addr16
add
fadds
mov
xchg
fcoms
ja
insl
repnz
cld
mulb
mov
push
popa
inc
add
lea
cmp
daa
dec
add
mov
rorb
push
push
out
jmp
movsb
inc
mov
hlt
jae
jle
jne
add
dec
push
jnp
xor
cmp
sub
mov
sub
sbb
push
jge
out
call
cmp
fiaddl
mov
inc
or
lret
jp
mov
test
or
mov
sbb
and
daa
fnstcw
dec
scas
lcall
pop
nop
fbstp
aam
pop
mov
jg
lahf
in
mov
test
pop
push
pop
mov
mov
pop
ret
fmuls
jmp
fisttpll
sub
insl
inc
or
mov
dec
flds
sub
leave
movsl
test
into
inc
loop
inc
dec
aam
daa
adcl
dec
andb
andl
fs
rcrl
mov
sbb
jne
aaa
push
pop
leave
dec
cli
or
pop
sub
sub
jae
sbb
jne
add
push
sahf
inc
push
push
je
xor
outsl
ret
cmp
sbb
dec
insb
jne
sub
adc
ss
jmp
ficompl
mov
inc
and
pop
jo
das
fs
inc
or
cmp
je
aas
in
daa
add
fadds
test
xchg
aaa
jge
add
fsubrs
add
mov
xchg
or
jnp
btl
cli
std
sbb
cmp
jl
or
aaa
mov
dec
mov
fs
cmp
fidivs
push
mov
in
arpl
pop
sbb
in
push
test
mov
hlt
push
push
cmp
jno
pop
xor
or
ja
push
test
push
outsl
add
sub
fdivl
sub
rolb
loop
cwtl
cmp
jne
ds
inc
push
jle
lea
insl
mov
pop
push
sub
mov
mov
sub
pop
lea
aam
inc
addr16
mov
dec
dec
or
or
inc
and
add
pop
popl
fadd
stc
mov
add
outsb
xchg
dec
and
cwtl
jg
or
or
push
dec
outsb
dec
adc
or
pop
dec
or
sub
js
js
inc
sbb
or
pop
daa
pop
add
lcall
adc
xchg
cmp
add
cmpsb
imul
cmpsb
imul
cmp
or
call
pop
xchg
cmpsb
cwtl
push
or
outsb
in
or
mov
mov
add
inc
mov
xor
addr16
scas
sub
pop
rol
mov
mov
adc
and
mov
movb
sbb
and
pushl
data16
jae
fadds
jbe
inc
jl
js
inc
push
fs
insb
push
fs
push
push
fs
push
cmp
xchg
mov
push
ljmp
sub
sbb
fnstenv
inc
xchg
sahf
sbb
dec
sbb
dec
pop
pop
mov
inc
pop
test
and
adc
in
push
jo
test
jno
cmp
outsl
xor
xchg
js
addps
subb
add
add
pop
and
jne
mov
push
cld
test
cmp
test
cli
add
inc
mov
mov
pop
inc
sbb
out
jne
sbb
jb
mov
lcall
inc
sti
sbb
jb
ret
pushl
jb
or
push
xor
shlb
xor
mov
out
mov
xchg
lret
mov
push
mov
mov
sub
subl
inc
add
shl
ret
mov
add
add
cmpsl
loope
imul
add
je
sub
shrl
ja
jne
das
xorl
addl
loopne
mov
mov
and
daa
inc
xchg
dec
adc
imul
ret
add
pop
dec
test
mov
xchg
mov
in
jmp
xlat
add
das
call
dec
stc
fldl
sar
iret
and
ffree
das
add
cmpsl
or
repnz
iret
in
fists
and
imul
sbb
mov
mov
add
mov
stc
push
jne
mov
pop
dec
sbb
dec
jne
into
adc
data16
or
push
adc
je
xor
push
xor
dec
mov
fwait
dec
lahf
sbb
repnz
cld
loopne
aaa
pop
and
dec
mov
inc
push
pop
add
inc
movsl
imul
cmp
sub
or
fidivrl
pop
mov
add
shll
sbb
filds
and
dec
subl
leave
or
test
push
popf
lock
cmp
mov
xchg
aam
mov
jo
cli
out
fidivrs
inc
adc
or
sahf
lods
pop
mov
dec
sbb
mov
stc
add
dec
sbb
rcrl
jp
adc
or
call
or
xchg
cmpl
movsb
sub
add
sbb
pop
xor
popa
aaa
fld
sbb
inc
mov
test
cmp
sub
enter
addb
repnz
sbb
pop
inc
mov
mov
sbb
xor
adc
lea
adc
mov
lahf
fldl
pushf
and
sbb
jno
orb
mov
mov
in
add
lock
push
loopne
sub
jne
or
in
nop
gs
inc
sbb
pop
fs
pusha
pusha
insb
cmp
xor
insb
push
inc
test
out
movsb
xor
sbb
arpl
push
xchg
inc
push
cmp
cli
je
xor
scas
insl
popf
add
or
push
arpl
es
sbb
adc
push
mov
hlt
sti
push
sub
cmpsl
js
fwait
inc
and
ret
jne
adc
dec
roll
add
push
outsb
dec
adc
dec
or
sub
inc
cs
lock
lock
push
enter
ss
jmp
fcompl
push
pop
xor
ret
mov
lret
sbb
push
arpl
push
test
jnp
out
andl
sbb
push
inc
dec
add
add
push
and
mov
or
fsubl
ret
test
jbe
pop
xor
cld
sub
or
pop
pop
mov
jo
ljmp
inc
jo
sbb
or
cmc
sbb
add
add
mov
and
adc
pop
jle
addr16
and
and
jne
sbbb
xchg
dec
inc
sahf
mov
pusha
and
fidivrl
in
insb
pop
push
dec
fucom
push
test
popa
dec
test
mov
popf
jecxz
mov
mov
push
push
inc
mov
es
adc
mov
xor
scas
insl
js
cmp
or
mov
pushf
cwtl
stos
test
mov
mov
cwtl
fisttpll
mov
cltd
or
or
cmpsl
add
push
and
and
push
lea
push
or
fsub
add
push
or
xor
sbb
xchg
dec
cmp
adc
pop
movd
imul
les
sub
add
neg
lret
add
pop
popa
add
and
ret
out
push
enter
movsl
or
mov
and
push
pop
arpl
jmp
imul
hlt
nop
sbb
out
jmp
mov
bound
popa
mov
cmp
push
add
fs
pusha
cs
push
jo
and
fwait
mov
mov
data16
fnstcw
out
sub
outsl
std
push
jecxz
inc
add
jge
int3
xchg
pop
xchg
into
mov
stos
push
sbb
mov
jecxz
or
je
mov
mov
jne
or
xchg
adc
or
inc
insl
xchg
push
mov
les
fs
cmpsl
push
or
pop
out
sbb
inc
push
jmp
repz
pop
fcoms
push
leave
push
jmp
pushf
push
adc
and
cmp
adc
xor
adc
fndisi(8087
cs
adc
mov
lea
sub
sub
and
mov
lock
rclb
data16
sub
in
inc
push
push
push
or
ja
adc
fsubp
fstl
inc
pop
mov
mov
cmpl
pop
lock
mov
xor
sbb
fmuls
dec
movsl
test
jne
icebp
pop
jno
int
and
sahf
add
add
testl
pop
cmp
mov
rcrb
add
mov
pop
fcomp
lcall
xor
xor
mov
pusha
xor
mov
movsl
jbe
and
jl
lcall
clc
ret
loopne
and
push
adc
adc
sub
jg
sbb
xor
filds
push
lods
pop
push
inc
test
adc
or
scas
mov
xor
sahf
lret
ficompl
xchg
out
push
cmp
and
dec
sbb
xor
repnz
fdivp
sub
out
dec
sub
fidivl
and
push
dec
repz
and
cmpsb
lea
das
and
imull
dec
or
in
dec
mov
inc
adc
insl
add
lea
cmp
adc
fwait
add
or
nop
push
aam
insl
mov
inc
or
dec
cwtl
sub
pop
icebp
in
and
or
shlb
push
sahf
fwait
imul
fsubl
pushf
jnp
add
and
mov
lods
or
and
pop
mov
insb
sbb
cwtl
inc
jg
adc
call
jmp
hlt
lods
lret
adc
fdivl
jbe,pt
adc
je
in
cmp
push
mov
ljmp
ret
inc
xchg
add
das
fucomp
inc
jp
push
add
aaa
imul
or
push
orps
and
xor
movsb
add
arpl
add
inc
cmpsb
mov
cmp
push
imul
pop
jb
subb
shll
test
push
nop
subl
add
inc
add
sahf
push
mov
addb
or
push
ss
cmpsl
test
popf
mov
push
xor
mov
or
or
addb
je
jbe
pop
push
cmp
push
mov
pushf
dec
or
call
or
fs
sbb
mov
add
sbb
push
ret
outsb
push
jnp
xor
sub
inc
sub
out
adc
xchg
xor
cmp
xor
nop
xor
xor
or
pop
add
xor
movq
ret
or
add
pmaxub
ret
pop
js
push
shrb
js
imul
push
push
sbb
pop
testb
lret
iret
and
pop
or
dec
lret
outsb
inc
xor
jb
ljmp
jg
testb
loope
jno
pop
mov
xorl
adc
and
mov
inc
in
jmp
orb
nop
dec
push
xorl
test
sbb
inc
cmc
js
aas
jecxz
test
mov
mov
xchg
pop
mov
cmp
aaa
call
lea
ret
sub
out
jae
jge
mov
inc
daa
sub
leave
mov
lahf
dec
cwtl
xchg
test
jae
test
or
dec
pop
pop
mov
push
xchg
and
jge
cs
jl
andl
lods
enter
mov
xchg
mov
ret
mov
or
cltd
les
xchg
inc
jae
leave
and
sahf
adc
or
aam
jecxz
dec
xor
pop
jo
push
push
lea
cmc
adc
insb
movl
add
ljmp
movsl
jbe
inc
cmpsl
fistpll
sbb
jo
cmpsl
sub
and
jno
jl
adc
pop
adc
and
push
enter
cmpsb
sarb
push
scas
pop
add
jl
add
test
and
push
jl
add
xor
je
push
mov
sub
addb
pop
push
sbb
jmp
and
ljmp
mov
push
lds
push
xor
inc
add
fsubs
rorb
loop
and
or
movsb
add
sahf
orl
xchg
pop
xor
xor
xchg
pop
add
add
les
push
ja
bound
mov
and
aam
dec
mov
jne
add
add
or
cmp
add
or
pusha
imul
add
pop
and
xchg
cmp
mov
jl
loope
xor
jg
or
push
fistl
mov
rcr
into
mov
push
xchg
mov
fmulp
enter
leave
pop
adc
lret
push
xchg
cmc
mov
fstl
lods
mov
mov
sbb
rolb
sub
enter
or
inc
xchg
mov
add
inc
push
add
popa
cmp
sarl
aaa
xchg
pop
sbbl
inc
jle
sbb
iret
movsl
push
ja
ret
mov
pop
adc
andl
cmpsl
dec
or
mov
mov
scas
lods
dec
cld
push
test
es
push
jecxz
mov
or
or
jo
pop
rorl
mov
lds
fisubl
mov
mov
or
push
xchg
insb
insb
int
nop
inc
mov
or
je
out
neg
aas
jo
jle
mov
out
jmp
inc
dec
daa
out
push
cmpsb
outsb
fistl
pushf
jmp
mov
pop
insl
cmpb
fmuls
pop
push
push
push
inc
stos
mov
push
jbe
imul
idivl
push
adc
sbb
lds
int
mov
in
push
add
dec
stos
addl
add
cli
ret
push
popa
cs
mov
add
or
mov
movsb
fxch
dec
inc
das
imul
dec
xlat
out
addr16
inc
rcll
stos
addl
aas
movsl
add
lcall
xchg
test
loop
or
rolb
jbe
or
xrelease
xchg
mov
dec
mov
or
cmp
daa
js
arpl
dec
movsl
xlat
pop
add
aam
cmp
pop
mov
push
andl
ret
pop
outsb
movsl
popa
test
sub
ss
adc
mov
xor
or
ret
cmp
or
add
cmp
arpl
push
mov
sub
mov
push
push
lret
sub
outsl
push
inc
xchg
mov
outsl
push
or
jae
leave
push
cmp
insb
dec
add
or
ss
insb
es
and
cwtl
push
in
mov
andl
mov
sbb
pop
je
xor
add
lea
add
add
lcall
notl
cmp
adc
push
cmp
adc
sbb
cmp
jo
loop
jne
icebp
jnp
pop
lods
lock
mov
xor
add
fildll
mov
xchg
fcomp
add
mov
fs
loope
push
test
push
mov
andl
and
aas
fildl
jmp
ret
jbe
mov
jae
mov
int3
and
inc
orb
movb
and
pop
cli
test
pop
adc
inc
insb
shr
xor
xchg
out
inc
add
call
loopne
and
jge
adc
cmp
pusha
sbb
add
hlt
push
sbb
or
pusha
insb
std
sbb
mov
mov
mov
add
fidivl
xor
pop
insl
jge
adc
jae
movsl
pushf
sub
or
hlt
sbb
imul
jmp
xchg
scas
push
push
pop
adc
pop
or
inc
pop
int3
push
test
in
mov
adc
mov
push
mov
sbb
dec
iret
xchg
js
or
jle
push
cmp
lds
xor
jno
test
loop
test
jge
loope,pn
and
jecxz
mov
jno
pop
jnp
mov
pop
sub
addb
jbe
mov
cltd
loop
sub
mov
sub
adc
cmpsl
pop
mov
test
popl
cmpb
and
push
add
aam
pop
inc
scas
out
movb
pop
sub
adc
ret
inc
add
add
pop
enter
cmp
dec
jg
clc
imul
rorb
cwtl
add
js
push
mov
je
push
push
dec
cmpsb
out
jne
adc
arpl
inc
mov
push
lea
jecxz
jg
cmpb
cmp
push
je
push
movb
addr16
xor
adc
cmp
pop
push
fs
roll
nop
push
xor
repz
inc
loopne
push
repz
mov
sub
jne
test
jo
add
dec
sbb
test
das
push
fwait
inc
cmp
pop
pop
or
push
or
shl
push
jno
out
adc
icebp
and
pop
into
pop
inc
clc
rcrl
inc
fldt
mov
pop
cld
sub
sti
xor
cmp
inc
mov
inc
adc
sbb
inc
sbb
imul
adc
out
mov
lea
mov
push
xor
lea
xchg
dec
sbb
jle
adc
int3
lock
or
and
lcall
movsb
loopne
adc
mov
js
movb
jecxz
aas
adc
sbb
out
invd
arpl
mov
jbe
mov
sarl
movsl
mov
mov
nop
fs
stos
loopne
jecxz
repnz
pop
testl
pop
je
cmpsl
or
sbb
dec
es
inc
jbe
repnz
call
or
dec
or
push
rolb
cwtl
push
push
js
pop
xchg
push
ret
adc
cwtl
test
xor
shl
sub
les
js
and
loopne
and
jl
xchg
add
into
mov
sbb
push
mov
lahf
mov
popa
jbe
sarb
add
xchg
lock
mov
testl
lahf
cmp
xor
or
lahf
cmp
xor
mov
rcr
adc
and
cmpsb
add
and
test
or
add
mov
xchg
pop
das
xor
mov
xor
push
sub
pop
daa
insb
js
push
cltd
in
fadd
sbbl
sub
pop
push
push
cmp
push
cmp
push
mulb
adc
xor
dec
js
mov
xchg
outsb
xchg
mov
or
mov
sbb
push
imul
cmp
insl
inc
jmp
andl
insb
loopne
adc
xlat
push
add
inc
xor
adc
mov
lods
and
addb
sub
cwtl
add
sbb
mov
dec
adc
cmp
push
cwtl
add
lret
mov
sahf
imulb
rcl
cmp
rcl
adc
jnp
or
lahf
mov
mov
jno
push
push
stos
sti
jb
addb
add
jno
or
cs
adc
mov
das
in
daa
sub
pop
or
in
jbe
lock
mov
rcr
mov
decl
pop
jae
jl
or
lea
pop
lds
push
push
push
xchg
ss
or
sub
mov
inc
or
or
into
popa
aaa
inc
inc
mov
ds
loope
adc
mov
adc
inc
jo
imul
push
and
lea
in
pop
push
faddl
or
and
cmp
ja
je
or
je
or
sub
dec
incb
adc
cmp
andl
pop
push
or
add
adc
sbb
sahf
nop
ret
sbb
jnp
imul
mov
push
lcall
xor
test
push
adcb
ss
fs
out
sub
ja
ret
insl
adc
and
dec
add
mov
xchg
movsb
call
push
adc
or
xchg
mov
icebp
and
mov
lcall
sub
test
jns
adc
and
inc
adc
or
adc
mov
mov
and
and
sbb
dec
push
outsl
aad
pop
daa
push
pop
or
roll
mov
pop
ret
clc
xchg
ffree
push
inc
push
sub
inc
dec
sub
or
adc
adc
or
fcmovne
xor
in
lds
popf
sub
shll
or
push
adc
adc
adc
push
sub
adc
xchg
add
in
mov
and
adc
or
cmp
mov
add
test
adc
stos
and
or
push
mov
repz
loopne
xchg
imul
push
shll
inc
push
lds
in
add
jecxz
loope
lcall
mov
dec
or
ret
out
adc
loopne
ds
sti
clc
or
dec
mov
pop
rolb
or
push
popa
xor
xor
sub
add
fisubs
pop
loopne
push
mov
push
sub
test
mov
icebp
jb
jp
push
or
dec
mov
arpl
pop
push
pop
sbb
push
xchg
dec
fildl
sbb
mov
dec
xchg
sbbb
xchg
dec
cmp
adc
gs
sbb
in
pop
lcall
cmp
xor
xchg
pushf
inc
push
pop
add
repnz
sub
pop
push
cmpsb
xchg
pop
enter
aaa
mov
call
add
jb
add
idivl
mov
jne
sub
sarl
cmp
js
lods
jbe
ss
aaa
add
fcoml
je
dec
sub
in
push
jnp
ret
or
shl
fiadds
push
ret
pop
cmc
fcomp
xchg
data16
mov
inc
orl
or
addb
mov
inc
test
shll
jl
mov
xchg
js
cmpl
cmpsb
lret
ljmp
sahf
xchg
insb
jo
fmuls
loope
xchg
push
xchg
icebp
xor
dec
adc
inc
or
test
sbb
mov
aas
add
sbb
or
xorb
jns
jg
pushf
scas
std
decl
or
in
xchg
adc
jmp
cmp
pusha
xchg
or
and
popf
adcb
xor
gs
ror
mov
jo
xor
mov
or
push
push
xor
out
dec
inc
adc
test
mov
out
inc
loop
mov
push
test
or
mov
loopne
call
xor
add
fcoml
add
repnz
ds
mov
mov
or
imul
adc
data16
inc
pop
mov
dec
arpl
sbb
push
leave
pop
imul
test
outsl
dec
das
or
inc
and
push
daa
roll
out
cmpsb
mov
cmp
jb
dec
repz
repnz
or
dec
add
mov
lock
cmp
lea
mov
dec
push
push
xorl
xor
push
sub
inc
iret
les
stos
pusha
loop
dec
ret
push
mov
add
dec
pusha
sbb
jns
inc
inc
inc
add
mov
adc
mov
clc
and
mov
int
popa
or
inc
fdiv
dec
std
fld
mov
push
addb
int3
cmpsb
std
inc
cmpsl
sbb
pop
lret
in
mov
outsl
call
adc
pop
push
inc
leave
je
js
cs
rcl
add
pusha
jle
or
jb
cwtl
ljmp
or
xchg
push
sub
sahf
sub
fnclex
add
push
inc
xor
lods
mov
aaa
mov
push
rcrl
in
mov
loopne
dec
cmp
hlt
rcll
inc
add
inc
xor
mov
mov
xor
add
es
orb
fisubl
nop
cmp
sbb
js
scas
add
mov
cs
jge
call
push
sbb
mov
push
xchg
cmp
mov
mov
clc
jle
scas
or
pop
adc
xchg
mov
sub
cmp
ret
add
and
xor
add
out
sbb
aam
lock
rorb
stc
or
xchg
jno
add
mov
cmpsl
jns
xchg
nop
jo
xchg
mov
add
cmp
in
loop
adc
sub
push
pop
sub
and
xchg
adc
cs
xor
mov
or
call
cs
xor
dec
or
jnp
mov
adc
jg
hlt
xor
lahf
popf
cmp
jo
subl
pop
lock
enter
jne
xor
adc
add
lock
les
pop
fldl
mov
xchg
mov
inc
xchg
cmovnp
mov
or
iret
sub
mov
popa
inc
add
les
lock
adc
jge
inc
sbb
or
jl
ds
rolb
pushf
das
push
loopne
out
push
sbb
jmp
popa
pusha
out
pushf
std
and
adc
cmpsb
sub
add
adc
and
sbb
daa
pushf
imul
pop
ret
xor
xor
adc
clc
in
gs
jnp
arpl
cld
or
inc
adc
movsl
adc
push
pusha
popa
and
divb
jno
adc
add
sub
into
jle
call
add
lock
jg
push
adc
jbe
testb
sub
lcall
shlb
aam
adc
dec
loope
pusha
test
mov
in
add
xchg
push
sub
adc
aaa
ret
jle
xor
sbb
push
sbb
das
xchg
dec
pop
cmp
cmp
adc
or
xchg
xorb
and
xorl
push
jae
inc
popf
lods
in
cmpsb
int3
or
lods
add
imul
pop
mov
pop
out
dec
mov
ds
in
sbb
in
cmp
add
cmp
inc
lock
xchg
jmp
lock
jle
jmp
ret
fcomp
inc
jnp
inc
add
cmp
test
jne
dec
pop
cmp
sbb
sbb
pushf
sbb
roll
mov
sub
nop
fbld
or
xchg
outsl
aaa
add
sbb
je
test
push
sbb
adc
push
adc
and
mov
es
ds
shrl
push
xchg
mov
cli
aas
sub
lcall
test
mov
je
je
movsb
outsb
scas
je
cmp
mov
daa
mov
add
cwtl
aas
mov
or
arpl
ficomps
fisubs
cld
mov
popf
pop
sbbl
inc
arpl
xchg
sarl
pusha
xor
inc
pop
lock
leave
call
push
jo
push
add
add
outsb
jmp
cmp
pop
adc
adc
mov
pusha
std
loope
push
data16
dec
pop
mov
loopw
jp
inc
mov
hlt
cld
inc
adc
and
jo
outsb
movsb
daa
pop
jg
adc
push
cld
push
sbb
add
push
in
shl
in
enter
stos
cltd
push
dec
orl
bound
mov
shll
in
sub
pop
mov
insl
dec
or
je
adc
jnp
scas
outsl
xor
push
in
xchg
or
jne
and
xchg
sub
add
in
repnz
hlt
and
jmp
xchg
out
and
sub
xchg
out
adc
push
sub
loopne
or
frndint
push
mov
xchg
cs
movsl
pop
mov
nop
sub
inc
push
adc
out
nop
jb
int3
xor
sahf
inc
mov
sahf
inc
push
xor
cmp
sahf
sbbl
jo
inc
arpl
push
pop
fwait
sarl
xor
inc
inc
push
sahf
arpl
dec
imul
pop
out
add
or
or
insb
xor
pop
sahf
out
dec
jmp
outsl
jl
xchg
dec
xchg
cmpsl
roll
jmp
int
push
imul
or
lcall
insb
pop
mov
pop
das
imul
pop
sbb
mov
loop
enter
xchg
mov
xchg
adc
dec
sub
jne
push
jmp
test
push
mov
add
mov
test
or
sbb
pop
adc
and
jo
stos
movsb
push
push
loop
pop
push
sub
bound
mov
test
pop
jbe
adc
rorb
lret
fcompl
sahf
fldenv
nop
rclb
movsl
push
xchg
mov
jae
pop
sbb
xchg
or
rcll
add
int3
outsb
adc
xor
jmp
adc
inc
sbb
je
mov
fdivrl
jg
cli
sbbl
fstl
or
inc
dec
je
cltd
sti
das
or
sbb
into
or
push
in
add
jp
in
push
xchg
out
push
xchg
call
or
pop
in
cmp
xor
testb
xchg
icebp
mov
or
or
jb
xchg
adc
mov
pop
jg
sub
pop
dec
loopne
loopne
ret
xor
add
cwtl
pop
xor
cmp
and
aaa
rorl
or
mov
mov
incl
jne
cmc
add
sbbl
pop
imul
sbb
clc
sbb
dec
push
sbb
popf
and
adc
add
sub
adc
mov
jne
pusha
hlt
rorb
sbb
pmuludq
add
jno
push
ret
push
sbb
lds
or
mov
adc
and
xchg
and
add
sbb
ja
add
add
push
mov
adc
or
mov
mov
xchg
and
repz
mov
xor
dec
mov
jo
sbb
or
loopne
cmpsb
loopne
xchg
daa
adc
stos
add
std
and
out
push
adc
adc
mov
push
push
add
clc
inc
cmp
lods
jbe
push
out
adc
adc
xor
inc
mov
dec
or
mov
mov
lock
add
clc
jne
pushf
add
sbb
mov
clc
add
rolb
dec
or
ficoml
add
movsb
es
push
sbb
pop
push
pusha
push
xor
test
push
mov
fwait
or
add
or
je
loopne
or
jge
gs
inc
loope
mov
rcr
jl
ds
pop
lret
mov
dec
and
push
and
and
insl
loop
sub
movsl
fsubr
xchg
pop
rcrb
data16
add
push
sbb
inc
les
imul
leave
insl
jg
xchg
dec
enter
mov
adc
sbbb
adc
push
sbb
roll
xchg
inc
imul
clc
sub
mov
sbb
jge
adc
inc
addl
push
and
mov
adc
xchg
cwtl
add
imul
test
xor
pop
and
jnp
loop
bswap
in
pop
je
pop
lds
and
adc
ficoms
jae
mov
mov
addr16
outsl
inc
or
fmuls
jmp
add
mov
jb
sub
or
or
xchg
sub
sub
dec
mov
jge
push
cmpl
pop
mov
add
scas
repz
pusha
movsl
push
mov
cli
cltd
out
das
aaa
mov
cmp
jbe
shll
adc
scas
inc
push
leave
push
xor
orb
xlat
xchg
cmp
imul
imul
mov
inc
mov
add
stos
mov
es
inc
lock
or
add
add
mov
dec
xchg
inc
and
sbb
xchg
adc
add
add
add
and
test
jne
and
dec
dec
stc
add
test
push
lahf
xchg
cli
test
lea
add
mov
jae
sub
cmp
push
cmp
push
pop
push
inc
ret
jmp
and
pop
add
xchg
mov
test
scas
ret
xchg
andb
lcall
push
xlat
or
frstor
add
test
loopne
inc
jne
fildl
fs
mov
pop
dec
sub
and
lock
or
nop
inc
leave
xchg
std
aaa
aas
shlb
add
inc
sub
mov
popaw
sbb
xchg
das
add
mov
andl
jnp
mov
andl
cmp
and
shrb
inc
mov
lcall
add
jnp
rcrb
ret
pop
aad
push
stos
call
loop
mov
ret
shlb
add
pop
aaa
loopne
sub
and
pusha
ss
dec
or
data16
and
cmc
pop
ret
add
or
rcll
aaa
pop
pushl
mov
adc
ret
xchg
pop
nop
add
imul
push
roll
push
push
pusha
adc
or
ss
mov
nop
nop
mov
cmp
push
subb
push
pop
loope
nop
push
inc
cmp
dec
inc
mov
add
push
cmp
test
xchg
mov
lea
mov
cmp
mov
mov
and
dec
arpl
or
ss
xchg
cmp
xchg
or
cmp
push
sub
cmp
add
shrb
add
lea
clc
mov
mov
mov
shr
inc
adc
out
pop
or
xlat
arpl
cmp
dec
stos
push
dec
lcall
xor
add
push
add
and
jae
das
sbb
sub
rorb
lods
push
xchg
loope
dec
add
inc
in
clc
scas
inc
mov
and
inc
mov
hlt
adc
fisttpll
fcoml
pop
les
cmp
enter
rcll
xchg
insb
pop
sbb
jbe
or
dec
fdivl
daa
add
mov
es
push
insb
sbb
adc
dec
subb
lods
insb
push
push
adc
ds
movsl
mov
jle
rep
jo
andl
mov
mov
push
xchg
push
xor
add
inc
xchg
sbb
andl
sbb
or
xor
sbb
jns
mov
xor
dec
dec
pop
enter
push
inc
sahf
ret
and
fistpl
push
jecxz
xchg
or
push
hlt
jp
sarl
sub
fisubl
mov
out
or
pusha
je
push
bnd
add
movsl
lret
jae
je
mov
add
out
or
and
mov
adc
shrl
mov
push
wrmsr
les
add
imul
ret
cmovg
mov
push
mov
hlt
adc
adc
pop
xorb
push
loop
jl
subl
mov
rcr
xchg
pop
inc
cmp
cld
mov
outsl
push
fsubr
pop
cld
sub
pop
roll
rolb
repz
scas
aas
inc
and
jbe
sub
lea
aam
or
push
in
add
punpckhbw
inc
inc
cmp
jb
push
and
movsl
dec
push
pop
leave
jo
cmp
sub
or
lds
leave
nop
popf
add
inc
sbb
cmp
out
mov
adc
pusha
or
sarb
jns
cmp
rolb
sbb
adc
mov
hlt
out
push
add
sub
jl
test
into
xchg
jg
mov
sahf
jg
scas
add
in
sub
mov
sbb
pop
mov
ret
push
push
out
push
cld
fists
sbb
shr
not
sbb
dec
dec
aam
push
mov
gs
imul
popa
jbe
push
es
xor
push
and
or
out
add
xchg
add
sub
imul
cmp
xchg
imul
repz
cmp
inc
inc
inc
cmc
xor
repz
dec
jl
int3
movl
inc
add
daa
dec
push
cmpsl
fiadds
dec
pop
movl
mov
inc
add
xchg
sub
jae
fwait
sub
inc
mov
lea
out
and
decl
jno
jne
jecxz
cmp
bound
bound
xchg
cmp
bound
rcrl
add
je
xchg
mov
push
das
pusha
sbb
xchg
movl
push
mov
pop
es
sub
xor
jbe
jmp
iret
inc
adc
adc
fs
daa
or
xchg
lods
fs
jge
jo
push
adc
push
xlat
or
sbb
mov
gs
sub
in
ret
push
ds
cmp
test
add
enter
bound
js
sbb
rcll
and
lret
shll
jg
jl
cmp
push
mov
dec
movsb
push
mov
push
cmp
cmpsb
rclb
add
dec
and
aam
idivb
dec
sub
or
sbb
push
mov
jp
xchg
sbb
xor
jge
fldl
sub
xor
pop
divl
mov
cmp
mov
icebp
pop
push
sti
rep
or
fnstsw
sub
or
sbb
lea
mov
cmp
and
dec
sub
sbb
data16
loope
arpl
mov
push
sbb
adc
pop
push
shrb
lea
push
push
mov
jae
cmpsb
xlat
push
and
push
mov
xchg
mov
loopne
adc
inc
sub
inc
aaa
sbb
icebp
adc
push
das
adc
sub
inc
pop
adc
adcl
aas
mov
mov
imulb
rol
addb
loop
movsb
js
mov
pop
arpl
push
sub
sbb
sub
test
ret
inc
xchg
into
or
cltd
jle
repnz
mov
mov
push
iret
test
jecxz
sub
mov
aam
jae
cmp
mov
push
push
push
or
push
jns
sbb
imul
ljmp
sbb
push
add
sbbl
mov
hlt
lock
out
sbb
push
mov
push
dec
push
push
push
addr16
mov
mov
or
inc
std
jo
cmp
in
adc
in
dec
or
dec
push
push
scas
ret
mov
ja
xor
xlat
mov
lds
push
lret
mov
cmp
out
mov
icebp
roll
imul
dec
sbb
inc
push
add
dec
and
sarb
xchg
mov
mov
jne
nop
loopne
mov
pop
sbb
sbb
push
imul
fldenv
inc
addr16
cmp
dec
xchg
adc
jo
inc
cmp
mov
jne
jnp
ret
xchg
push
sbb
cld
sub
mov
inc
clc
adc
mov
adc
add
fadds
popa
fisubrs
cmp
and
adcb
pop
add
mov
mov
in
pusha
or
pop
or
ret
push
dec
xor
mov
and
repz
inc
clc
test
cmp
mov
sub
subb
ss
adc
xor
je
dec
rorb
nop
outsl
inc
adc
push
sub
sar
emms
add
lcall
sbbb
jp
cmp
fwait
loopne
dec
sbbb
xor
ret
hlt
and
sub
pusha
xor
cmp
jbe
dec
jb
xor
pop
sbb
scas
jo
or
ja
cmp
jnp
ret
sub
sub
cmp
rcll
mov
mov
out
test
push
dec
mov
xchg
or
call
cmp
cmp
xor
loope
add
adc
push
jmp
add
fisubl
cmp
fistpl
icebp
xchg
mov
fiadds
test
push
dec
pop
jl
je
push
mov
add
cmc
shl
mov
dec
xchg
test
aaa
push
mov
cmpl
rcrl
les
dec
jbe
pop
icebp
ja
inc
lea
pushf
sbb
push
or
add
lock
lock
pop
dec
jmp
inc
mov
pop
enter
add
adc
jg
inc
jmp
dec
ss
mov
sbb
dec
add
jne
sub
outsb
sub
outsb
sar
pop
xor
cltd
mov
pop
cmp
rclb
sub
cmp
jb
jae
push
push
push
or
repz
jmp
dec
hlt
jae
xchg
and
jae
jne
outsb
lret
add
shll
adc
icebp
xor
fistpl
push
adcb
add
es
mov
pop
cmp
clc
sub
sub
stos
rclb
inc
and
ds
sbb
add
dec
jnp
insl
push
xorb
cmp
movsb
aam
cmp
add
nop
sbb
aaa
cmp
test
jno
adc
nop
dec
push
sbb
sbb
sub
dec
subl
ja
adc
xlat
xor
out
daa
or
ja
mov
cmp
add
test
adc
add
enter
lahf
arpl
adc
and
or
adc
lods
dec
es
adc
and
lahf
arpl
dec
mov
pop
adc
and
adc
xchg
lret
add
addb
js
and
dec
repz
or
je
mov
jo
push
ljmp
rcr
cmpsl
jne
mov
lods
out
mov
cmp
or
dec
pop
ret
ret
fwait
add
adc
or
lock
and
test
sub
cltd
aaa
ss
mull
add
stos
pushl
xor
push
dec
adc
out
and
push
and
xchg
mov
outsb
loopne
xchg
or
and
and
nop
sub
adc
sub
nop
sub
nop
es
sub
nop
sub
pusha
daa
nop
sub
nop
sub
mov
sub
cs
pop
push
in
int3
or
jmp
cmp
cmpsb
movsb
in
pop
test
cmp
inc
jl
sub
add
pop
jne
cmp
pop
mov
mov
movsl
lods
sbb
movl
sbb
and
or
in
push
adc
add
ja
in
std
jbe
or
call
or
sbb
adc
sbb
xchg
or
lock
mov
pop
mov
ret
cmpb
rolb
data16
inc
mov
dec
cmp
fdivs
pop
test
jge
test
xlat
sub
or
rcr
pop
sub
add
xor
shlb
adcb
lds
xchg
sarl
or
mov
in
loop
fimuls
enter
aas
fsubrl
loopne
fdivp
xor
in
aam
or
data16
mov
add
jge
push
push
cmp
jo
pop
addb
xchg
add
mov
adc
incb
gs
add
mov
test
or
cmp
jno
sbb
or
cmp
sbb
jno
jg
or
sbb
mov
pop
dec
inc
adc
inc
fsub
pusha
push
lret
aad
lret
mov
jg
out
jne
movsb
aaa
mov
pop
lock
sahf
movsl
adcl
sarb
mov
jne
xlat
ret
bound
jne
ficompl
mov
mov
cmp
mov
and
push
dec
popa
mov
lock
mov
sarl
ja
adc
ds
jmp
push
mov
add
xor
lcall
lcall
push
inc
and
cmp
jle
ja
or
or
push
sub
add
mov
dec
ret
addb
jbe
or
jecxz
jne
bnd
jmp
cmp
movsb
rcrl
pop
fstpl
in
jmp
add
mov
xor
mov
addr16
dec
xor
jb
jmp
pop
or
jmp
or
or
or
int
pop
mov
adc
dec
js
mov
test
addb
sbb
xchg
inc
stc
push
enter
dec
adc
lods
inc
popa
shrl
jecxz
mov
inc
jne
dec
cmp
mov
cwtl
orl
sub
fldl
xchg
je
in
mov
shll
movsb
leave
rorb
mov
sub
sbb
stc
insb
adc
arpl
jnp
or
push
mov
or
cmp
js
roll
sbb
mov
and
pusha
inc
or
jo
insl
or
fisttpl
push
cmp
and
rorb
loopne
jmp
les
or
data16
es
mov
xchg
or
lods
dec
mov
call
lock
inc
push
es
inc
rcr
add
or
push
rcll
push
mov
addb
pop
imul
xor
cwtl
jmp
and
mov
test
jmp
loope
loope
roll
or
out
es
inc
jns
mov
sbb
pop
inc
rol
and
out
stos
mov
pop
fdivr
aam
add
fcoms
mov
stos
pusha
mov
pop
clc
jmp
mov
xchg
mov
mov
insb
sub
inc
sub
jbe
es
loope
or
mov
inc
xchg
push
dec
or
push
pusha
pop
xor
cmp
jl
mov
adc
mov
pop
xor
sub
test
jbe
jmp
js
add
pushf
jae
dec
movsl
sbb
push
pop
pop
add
loope
clc
rolb
mov
mov
sbb
out
and
pop
loopne
scas
stos
sti
or
push
outsl
xchg
fnsave
sub
pop
pop
loopne
test
or
loope
pop
mov
lods
inc
inc
sub
add
jge
add
and
in
pop
add
pop
or
dec
loope
std
repz
leave
rclb
xor
or
mov
xor
sub
add
pop
xor
lea
loop
or
cwtl
jge
or
andl
inc
adc
mov
inc
sbb
push
insl
mov
jl
mov
inc
inc
scas
add
jb
xchg
ljmp
aas
and
push
or
es
push
loopne
rorb
jp
sub
inc
clc
adcb
pushf
clc
xchg
or
lcall
dec
ds
out
in
xchg
mov
mov
push
sub
pop
and
mov
incl
andl
dec
jp
bound
pusha
lods
or
adc
mov
pushl
pop
or
lock
inc
push
mov
daa
nop
loopne
jmp
sbb
xor
or
xor
js
ror
daa
loopne
sub
and
and
js
xor
pop
push
test
cmp
jl
xor
gs
inc
dec
call
fmuls
dec
and
add
push
lcall
inc
mov
movsl
push
loope
mov
loope
add
lods
pop
dec
jae
jb
inc
into
test
incb
mov
pop
shrb
cmp
bound
or
and
and
dec
shlb
mov
movsb
jmp
fadds
out
or
or
cs
and
and
test
push
pusha
sub
sbb
pusha
xchg
xor
rolb
rorb
lock
xor
mulps
stos
mov
xor
scas
setl
cs
or
addr16
inc
arpl
mov
shl
push
xchg
sub
xchg
cmp
xchg
js
mov
xchg
jmp
xor
jbe
fmuls
int
out
jmp
rorb
dec
loopne
loopne
sbb
outsl
push
stc
push
popw
inc
push
xchg
aas
fdivl
jne
xchg
and
inc
cmpsb
cltd
scas
subl
es
or
add
adc
push
jl
arpl
sbb
add
add
sbb
js
add
xchg
mov
push
push
inc
push
sbb
lahf
xchg
pop
add
xchg
daa
imul
lds
shll
loope
mov
or
jbe
and
inc
shlb
push
lahf
pop
mov
nop
mov
add
push
cmp
orl
cmp
clc
dec
sub
fcmovb
cmp
inc
mov
sbb
mov
lea
es
sbb
je
loopne
dec
insb
jmp
cmpl
pushf
push
addl
xchg
enter
inc
or
push
sub
push
adc
jnp
movsl
sub
inc
add
lods
pusha
test
or
push
clc
mov
lea
cmp
aam
push
sbb
inc
cwtl
jne
jne
or
popa
sbb
jp
adc
dec
cmpsb
xchg
or
in
int
rclb
push
push
mov
js
cs
cs
inc
add
push
insb
and
dec
cmp
xor
mov
add
add
aas
cs
push
or
fcomps
js
and
adc
cltd
fisubrl
xlat
pop
push
fsubrl
or
pop
xor
mov
popa
bound
ss
call
test
mov
movb
xchg
hlt
xchg
cmp
loope
mov
fmuls
and
and
data16
insl
sbb
jle
xor
mov
xchg
ljmp
push
add
repnz
xchg
push
add
pop
js
xchg
in
int3
imul
mov
in
inc
or
dec
in
add
jecxz
sub
pop
push
sub
and
mov
call
into
sbb
adc
arpl
les
test
adc
lods
mov
pop
cmp
ljmp
pop
lret
ret
aaa
mov
int3
dec
sub
xor
hlt
ret
enter
push
shlb
rcl
inc
or
arpl
fwait
or
shr
or
pop
fsubrl
add
add
mov
push
inc
mov
lcall
or
push
mov
fiaddl
push
mov
sti
inc
adc
je
adc
je
sub
rcrl
call
ret
push
dec
fidivrl
test
stc
cmp
mov
nop
xchg
rorl
in
pushf
cmpsl
mov
or
popf
dec
sub
mov
sub
cmp
call
out
mov
mov
adc
fdivrl
sub
mov
test
loope
push
dec
and
sbbb
inc
nop
cmpsl
inc
inc
loopne
dec
jp
movsb
rclb
xor
dec
js
test
and
repnz
jmp
in
add
cmpb
fildl
mov
mov
jmp
cmp
add
jle
aaa
je
testl
jne
js
sahf
sti
mov
mov
dec
rorl
jp
dec
mov
push
mov
and
ljmp
movsb
outsl
push
test
xchg
mov
mov
imul
mov
dec
hlt
movsb
lock
jge
sbb
fwait
int
mov
add
lahf
sbbl
div
cmp
and
sbb
xchg
sti
and
lret
out
out
add
into
cld
fwait
mov
adc
inc
loopne
js
in
or
rdtsc
loop
or
daa
adc
insl
test
mov
xchg
add
and
mov
sub
clc
popf
jnp
jns
lods
mov
cmp
add
popf
pop
push
sub
inc
jbe
mov
sbbb
fadd
orl
ret
push
test
fisttps
roll
shlb
add
loop
mov
je
xlat
mov
repz
push
mov
fildl
addr16
dec
inc
je
shrl
mov
add
push
movsl
jmp
std
and
mov
shlb
jp
cwtl
sub
lock
loop
andl
xchg
pusha
sbb
push
push
cli
in
stos
cmp
push
mov
stos
adc
mov
out
sbb
dec
lock
mov
es
add
mov
add
ret
movsb
popa
fsub
add
stos
mov
sbb
dec
lea
cld
nop
pop
dec
xchg
or
mov
add
jnp
xchg
push
out
cmp
sub
mov
cmp
loop
add
mov
cmp
mov
pushl
adc
shrb
adc
jl
pop
test
push
xor
push
insl
loop
inc
das
pop
stos
pop
pop
dec
dec
mov
inc
xor
adc
out
lock
xchg
or
jo
bound
inc
mov
xchg
xchg
add
psraw
xorb
xor
pop
call
int3
xchg
ljmp
fsts
pop
popa
and
pop
sub
jnp
xchg
or
in
cmp
xchg
cmpb
call
push
mov
push
inc
push
stos
add
imul
cmpl
adc
lret
add
ljmp
adc
jmp
outsb
add
add
in
push
mov
add
push
push
lret
add
mov
add
xchg
add
enter
rcrb
paddw
shlb
or
cmpb
cmp
js
or
in
iret
pop
adc
mov
push
push
jmp
outsb
lock
xchg
xor
dec
loopne
inc
adc
xchg
inc
sub
andl
movsb
inc
and
inc
mov
faddl
out
cltd
in
mov
aas
dec
inc
in
jp
hlt
push
js
mov
jo
mov
xchg
xor
push
ss
lods
inc
loopne
adc
cmp
or
clc
sub
cs
std
pop
cmp
je
inc
fsubrl
sub
andl
jmp
ds
je
ljmp
in
or
ret
jg
outsb
adc
in
cmp
or
outsb
add
push
jge
notl
push
jle
xchg
ja
jb
push
or
jp
outsb
push
or
bound
fstl
xor
inc
push
loop
sub
jb
xor
sub
jge
cmpsb
dec
cmp
popf
cmpsl
mov
mov
shlb
pop
orl
or
xor
fidivrs
inc
jmp
inc
jo
add
inc
sahf
cli
addr16
and
add
add
jne
xor
and
iret
add
and
sub
data16
push
cs
ja
movsb
pushf
or
xor
out
lret
jmp
pop
cmpsb
ljmp
and
add
nop
inc
xor
les
xchg
shlb
adc
sbb
insb
bsr
cli
aas
mov
and
hlt
xor
jo
pushf
push
mov
pop
test
inc
rcrb
fcoml
cmc
mov
leave
adcb
add
repnz
fdivl
fnstenv
jl
loop
aam
sub
sub
mov
repnz
add
loopne
fsubrs
shlb
rolb
xor
xchg
enter
subb
push
jns
cmp
push
in
pop
mov
mov
sbb
jecxz
adcb
and
ficoml
sbb
std
rclb
push
les
fmul
andl
push
repnz
test
aad
jnp
jno
lea
jne
jmp
xor
or
adc
pop
aad
mull
xor
rcll
add
lods
into
shlb
je
int3
add
add
mov
add
pop
stos
jl
outsl
cld
sbbl
icebp
sbb
sbb
sub
hlt
test
dec
push
cwtl
sub
xor
mov
add
jp
xor
inc
pop
mov
outsl
mov
mov
dec
test
pop
gs
test
pusha
jb
mov
xor
and
test
rolb
cltd
push
cmpb
dec
mov
es
insb
mov
loopne
add
inc
loopne
xchg
dec
aad
lock
popf
xchg
xor
push
mov
and
pop
add
lahf
mov
mov
mov
jns
mov
pop
cltd
stos
add
push
cmpsl
fcmovnbe
or
cmp
cmpsb
aas
mov
test
movsb
rcll
mov
mov
push
nop
sbb
shll
mov
push
ret
ss
cmp
daa
lods
jbe
jo
push
and
ds
add
mov
into
inc
dec
mov
daa
dec
push
out
int3
std
test
xor
test
inc
gs
pop
cmp
das
das
outsl
mov
shrb
cmpsl
add
aas
popa
adc
sub
mov
testl
or
xlat
fiadds
jmp
mov
xor
shll
movsl
pusha
movsl
inc
jecxz
push
xor
jp
add
sub
push
xlat
and
lds
inc
dec
xchg
dec
arpl
dec
sub
les
fdivs
pop
ficompl
pop
outsl
mov
xlat
rdtsc
or
out
mov
call
popf
sbb
rolb
js
ret
inc
cmp
sarl
lea
mov
imulb
mov
xor
loop
mov
xor
shr
xchg
push
movsl
test
cmp
adc
mov
pop
js
fs
inc
mov
test
decl
outsb
pop
cmp
call
add
aaa
jmp
add
fisubs
pop
sbb
sbb
jbe
outsb
adc
and
dec
loopne
inc
inc
xchg
data16
adc
mov
or
rolb
fsts
stos
or
movsl
aam
insl
and
jl
leave
movups
add
xor
sub
adc
fmulp
popf
dec
loope
inc
and
icebp
in
mov
adc
subb
imul
sub
or
pop
cld
gs
and
xlat
add
add
pop
add
dec
dec
rolb
enter
cli
push
stos
loop
scas
jp
and
xchg
fsubp
fstp
push
pop
or
and
aam
inc
push
movsl
sbb
mov
fadds
sub
pop
mov
rcll
arpl
adc
sbb
or
xchg
adc
adc
test
arpl
dec
xchg
sub
rorl
std
cwtl
jg
inc
or
xor
cli
pushf
sarb
jge
stos
lock
subl
enter
pop
mov
shl
fs
push
add
sbb
fwait
jno
sbb
push
mov
repnz
fldcw
push
adcl
je
mov
xchg
in
loop
pop
and
cmpl
xchg
jno
hlt
scas
and
dec
cmp
in
mov
jmp
sub
popf
xchg
ss
in
je
outsb
popa
xor
int3
inc
adc
ds
cmp
fistpll
sub
movsb
pusha
hlt
add
sub
outsl
call
pusha
repnz
pop
cmp
dec
sub
adc
scas
xchg
hlt
xchg
test
imul
mul
push
push
add
fstl
lock
xchg
insl
flds
and
jne
xchg
xchg
or
lahf
xor
movsb
fildl
roll
incb
aam
xor
sub
aas
dec
lret
je
and
pushl
outsb
inc
jne
jo
and
in
push
into
or
jle
xor
imul
or
and
push
femms
dec
pop
enter
and
popa
mov
or
adc
jmp
rclb
dec
lods
outsl
insl
aam
pusha
pop
push
jp
adc
push
or
cmp
mov
push
adc
test
lret
mov
dec
push
fstps
push
lods
repz
push
pop
out
aam
les
pop
inc
adc
iret
out
push
xor
movsb
testb
xchg
lret
xorl
and
push
je
pop
dec
jb
imul
arpl
enter
test
lret
enter
inc
mov
sub
fistpll
nop
enter
push
inc
add
pop
int3
mov
and
inc
fsubr
mov
pop
in
inc
mov
xchg
cmp
sbb
fucom
jmp
pop
adc
push
push
adc
les
loopne
loopne
nop
dec
pop
fdivrl
pop
mov
add
add
setle
fcomps
push
push
xor
jle
jp
xchg
in
sub
cmp
cli
fiadds
push
push
pop
aas
rep
jo
inc
pop
aad
cmp
xor
lock
ret
cmovno
inc
gs
mov
loopnew
popf
sar
mov
mov
out
and
add
sar
arpl
xchg
hlt
lock
fsubl
mov
fs
orl
adc
jp
ret
pop
xchg
dec
pop
dec
test
or
and
repz
fs
jmp
mov
or
rcll
xchg
dec
add
ja
add
xchg
jecxz
std
into
idivb
mov
or
push
popa
dec
jb,pt
cmc
pop
and
jge
popa
cmp
mov
push
or
push
add
sahf
inc
insl
pop
xor
fldcw
xor
adc
inc
sbb
jne
inc
out
sbb
and
outsb
aaa
jle
push
add
lds
xchg
clc
push
pop
jmp
insl
ja
sbb
add
pop
lret
push
ss
inc
orb
add
mov
test
test
mov
enter
stc
mov
js
push
shrb
lock
movsb
repz
repz
xor
mov
mov
cmp
int3
rcl
cmp
xor
dec
fdivrl
add
fidivrl
mov
shrl
cwtl
pop
mov
push
cmp
or
jns
jp
rolb
andb
mov
or
testb
cli
sbb
mov
cmp
jbe
subb
cmpsl
mov
add
mov
test
xor
and
cmp
jne
add
iret
cmpsb
cwtl
orl
test
push
jl
rolb
enter
or
leave
test
adc
jb
pop
sub
mov
les
add
adc
pop
loopne
cs
into
adc
js
mov
adc
ret
in
push
mov
in
cwtl
inc
dec
roll
xchg
mov
cmp
sbb
loop
std
xchg
and
push
mov
repz
movsl
sarb
cmp
mov
cmp
sub
adc
dec
arpl
cmp
jb
les
push
jo
orb
jmp
xor
lods
insl
bound
mov
testl
inc
stos
push
fucom
push
xchg
jo
pop
sub
mov
or
sub
popa
loopne
jbe
adc
sub
imul
outsb
je
andl
jnp
inc
lods
into
lcall
lret
bound
mov
or
add
out
or
mov
orb
cwtl
js
push
push
add
aam
pushf
push
test
and
lods
cmp
and
insb
lds
jo
and
or
hlt
pop
inc
push
loopne
and
or
sbb
inc
sbb
stos
sarb
mov
decb
adc
mov
xor
mov
push
in
insl
jmp
mov
out
test
outsl
sarl
xor
dec
test
xor
int3
rol
pop
mov
and
inc
sub
xlat
arpl
inc
dec
ja
pop
jno
shrl
push
loop
bound
xor
lods
in
or
or
add
xorl
adc
push
mov
xchg
sub
sbb
mov
fmull
das
mov
xor
pop
mov
lret
push
imul
jecxz
adc
cli
cmpsb
rcrl
jns
inc
ret
jbe
inc
xchg
mov
push
xchg
mov
pop
mov
inc
or
push
pop
in
fistl
xchg
jmp
pop
andl
sbb
int3
adc
sbb
xor
or
push
jle
inc
je
popf
pop
mov
ret
es
or
mov
push
and
pop
in
mov
cmp
sub
cmpb
adc
xor
pop
pop
ja
leave
jne
adc
cli
mov
dec
xor
mov
subl
adcl
xchg
inc
sub
ja
gs
ret
ret
daa
loopne
outsl
jl
orb
sarb
push
mov
out
mov
xchg
push
aad
add
xchg
stc
test
mov
push
jno
test
int3
or
inc
adc
sbb
fwait
jp
fdivs
jne
mov
jmp
xchg
and
jmp
shrl
add
popa
add
jl
cmc
lock
test
xor
mov
icebp
sbb
das
or
movsl
push
push
movsl
add
sti
aaa
mov
inc
hlt
fstl
mov
loopne
ljmp
sbb
inc
clc
pop
fsubr
pop
faddp
andl
test
fstpl
daa
dec
sub
add
or
into
test
cs
jne
mov
sub
xchg
lods
loopne
xchg
mov
ret
dec
or
test
and
xchg
inc
xor
jp
fmulp
ficoms
mov
mov
mov
cwtl
imul
addb
xor
mov
sub
sub
push
mov
pop
fisttps
or
rolb
setnp
add
adc
pop
clc
mov
add
inc
or
es
orb
call
movsb
or
mov
cmp
dec
mov
int3
dec
add
negb
mov
lock
push
add
sub
pop
addb
jne
pop
addr16
ja
sub
pop
add
adc
push
sub
add
jmp
mov
cmp
jge
pop
pop
xchg
adc
roll
mov
xor
sub
loope
add
push
andl
pusha
lds
pop
imull
xchg
add
lea
popf
cmp
add
xchg
inc
add
mov
test
icebp
sub
pop
add
cmp
add
adc
xor
dec
test
pop
filds
mov
shrl
into
inc
add
movl
sub
repnz
mov
or
fmuls
pop
push
dec
or
dec
jecxz
and
mov
xchg
enter
sahf
ss
mov
adc
inc
das
aaa
mov
js
push
inc
in
or
jmp
xor
adc
jl
cmp
mov
adcl
decl
inc
adc
jecxz
jecxz
adc
mov
addr16
inc
jecxz
xchg
mov
inc
es
cld
jno
ljmp
or
lsl
sbb
mov
dec
aad
sbb
aad
inc
pop
enter
add
mov
jecxz
push
add
movsl
pop
mov
sub
popf
cmp
jmp
testb
std
xchg
addr16
aaa
outsb
add
lret
push
xor
xchg
icebp
dec
inc
inc
pop
int3
fwait
and
loop
cmp
stos
xor
and
fisttpl
push
inc
inc
fcoms
js
lahf
shrb
jb
or
sbb
and
add
imul
insl
push
xchg
inc
inc
mov
or
mov
dec
mov
daa
popl
xor
mov
outsl
cmp
lds
dec
dec
cwtl
xchg
xorl
pushf
ret
jmp
mov
push
les
roll
sub
call
and
shrb
sbb
sti
cmpsl
inc
movb
push
add
ret
adc
xor
inc
loop
xor
mov
pop
fnsave
push
jb
push
or
sub
and
das
int
cmp
cmp
mov
sbb
jo
mov
pop
sbb
inc
xchg
and
dec
sbb
in
cld
divb
cmp
xlat
bound
repz
rolb
pop
sub
data16
movsl
test
ds
jp
aad
lcall
add
and
int
jne
mov
mov
push
js
stos
enter
loop
in
out
adc
push
in
pop
or
push
sbb
jnp
dec
push
in
and
xchg
jns
pop
in
or
lods
sub
jecxz
mov
movl
dec
jb
and
orl
imul
leave
and
ret
inc
inc
mov
jp
test
lods
jmp
sahf
pop
dec
mov
sub
out
cmp
mov
add
add
bound
and
inc
add
cmp
movsb
push
adc
add
xor
or
add
clc
dec
imul
popa
test
mov
repz
dec
jbe
pop
sbb
aad
faddl
cmp
xor
inc
mov
mov
icebp
push
or
out
or
push
dec
dec
outsb
pop
xchg
xchg
push
add
sbb
arpl
cli
aam
and
in
cmp
fldcw
sub
and
sub
jle
aam
dec
or
rorl
pop
xlat
xor
loopne
shll
sub
mov
hlt
or
call
adc
data16
add
and
orl
adc
test
pop
cmpl
fisubl
mov
sbb
int3
mov
out
jbe
jne
xor
xor
mov
stos
xor
push
pavgb
fcomps
and
sbb
and
sbb
cmp
inc
fsubs
add
cmpsb
mov
jmp
xor
pop
inc
add
mov
mov
adc
test
sahf
dec
popa
mov
add
cmpsb
je
push
xor
test
cmc
andb
fdivl
dec
lea
pop
je
jo
popa
mov
pop
popfw
or
xor
cmp
dec
rorl
pop
jne
mov
fiadds
iret
sub
xchg
addl
push
pop
push
and
xchg
push
push
cmpsl
inc
mulb
ds
dec
sarb
adcl
jp
push
pusha
gs
jne
pop
insb
arpl
pushf
sub
in
mov
push
in
lock
or
ret
push
push
push
and
sbb
ret
adc
inc
dec
push
into
lock
inc
incb
pusha
das
inc
mov
xchg
mov
jo
jo
adc
add
push
cmpxchg
pop
add
jnp
add
inc
sahf
fwait
in
mov
sbb
lock
stc
rolb
or
and
test
fisubs
adc
push
mov
loopne
mov
cld
lahf
loop
mov
lret
mov
cmpsb
jle
in
roll
fcoms
pop
fsubrs
aam
scas
imul
jo
dec
cmp
leave
adc
mov
arpl
mov
loopne
cmp
mov
or
and
fmuls
xchg
xchg
xor
dec
or
aaa
sbb
push
mov
or
fistps
xchg
cmp
jne
lcall
xorl
or
lret
xor
dec
mov
sahf
push
out
and
sub
bound
cwtl
xor
add
std
leave
inc
test
pop
fnstenv
test
and
enterw
sbb
ss
cmp
mov
mov
clc
jl
or
int
xor
sbb
sarb
dec
sbb
loopne
rcl
lock
dec
leave
sbb
in
push
inc
dec
cmp
xor
sbb
add
add
push
les
add
xchg
cmp
add
jo
or
sti
sbb
or
pop
jmp
xchg
movsl
mov
sarb
or
or
mov
pop
add
mov
sbb
sar
stos
cmp
stc
cmp
xchg
pop
push
sbb
pop
push
push
stos
sahf
pushf
push
sub
bound
je
movsl
lret
push
ss
dec
ficoms
addb
inc
add
or
dec
adc
idivl
or
mov
loop
lahf
rcrl
add
or
dec
adc
pop
sbb
clc
stos
fs
add
push
hlt
jge
inc
adcl
sub
xchg
cmp
rolb
mov
pop
or
xor
sbb
jns
push
cmp
inc
cwtl
popa
out
fisubrs
rcr
mov
and
outsl
dec
in
in
loopne
fwait
cmc
inc
cmp
add
shl
ret
ret
mov
test
pop
or
mov
jae
mov
loopne
sbb
mov
fs
xchg
nop
mov
aad
cmp
pop
mov
lret
in
push
cmp
ret
aad
pusha
insb
imul
sub
dec
mov
sbb
rolb
push
add
std
inc
sbb
xor
mov
push
sbb
inc
fwait
icebp
mov
fsubr
xor
jl
adc
or
jmp
das
shlb
orl
xor
pusha
or
outsb
add
xchg
je
sub
pusha
test
jnp
add
sbb
mov
and
mov
lods
cs
push
xor
movsb
dec
iret
jae
cmp
push
inc
xor
adcb
in
shlb
aas
sti
inc
or
orb
push
cltd
pop
add
aad
pop
push
lret
inc
nop
push
push
cmpsb
into
inc
jne
adc
dec
test
lret
mov
xchg
add
sbb
inc
test
fsubs
dec
or
fs
fistpll
inc
inc
test
push
subb
sub
push
cmp
inc
inc
cmp
sbb
pop
pop
mov
popf
fs
mov
xor
lret
mov
adc
mov
inc
add
in
out
fnstenv
fidivs
out
add
and
sbb
add
nopl
lea
std
xchg
test
mov
lret
sub
push
ljmp
add
lret
outsb
cmp
add
ficomps
cmp
inc
inc
dec
push
dec
loopne
leave
in
sub
push
push
or
iret
icebp
repz
cmp
xchg
shlb
mov
and
add
or
xchg
push
mov
lea
dec
add
cld
mov
fs
mov
cmp
out
or
xchg
rorl
push
mov
sbb
mov
dec
push
push
jnp
xchg
cmc
and
pop
add
sbb
and
aas
xorb
aas
cli
jmp
push
xor
lods
push
rcrb
xchg
or
scas
cmp
mov
cmp
and
push
pop
or
in
xor
std
sub
push
in
xor
or
cmp
xchg
and
jo
ret
cwtl
sahf
popf
sbb
sbbl
and
or
or
lret
orl
dec
mov
add
dec
jb
sub
and
and
add
sbb
iret
xor
add
jge
fwait
imul
test
pop
ja
ss
sub
jecxz
enter
outsl
inc
jae
push
daa
loope
cmpsl
push
inc
lods
sub
jo
cltd
aaa
adcl
inc
jle
and
sbb
inc
mov
sub
xchg
nop
cmp
inc
xlat
adc
adc
or
jp
rorb
push
dec
and
pop
and
jnp
xor
pop
cmp
push
inc
insb
call
mov
arpl
push
dec
add
pop
jbe
mov
sbb
aaa
inc
sbb
repz
pop
in
xor
fcoml
sub
inc
push
sbb
dec
sub
or
inc
sbb
xchg
pop
rolb
push
cltd
lea
adc
ret
fsts
jns
je
sub
or
or
dec
pop
js
and
pop
cmp
jl
xor
lret
into
xor
or
dec
dec
pop
inc
cmp
inc
cmp
mov
test
xor
jo
sub
cmpb
es
into
jl
arpl
in
ja
insb
push
pop
enterw
rorb
sbb
push
cmpsb
dec
mov
and
mov
in
sub
mov
cmp
jecxz
fiadds
jl
gs
loopne
jmp
or
xor
xor
aam
mov
loope
testb
or
jns
pop
imulb
rcrl
push
push
sbb
jb
loope
xchg
je
sub
dec
int
stos
xor
in
mov
outsl
lock
jne
pop
notl
stos
les
mov
or
dec
push
jge
lret
pop
lds
lea
sub
cs
mov
pop
sub
xor
mov
inc
hlt
push
mov
es
sbb
outsl
jno
push
push
add
or
stc
sahf
or
mov
pop
es
pop
and
nop
xor
xchg
js
add
shlb
push
ss
icebp
push
or
mov
outsl
test
or
add
punpckhbw
mov
stos
or
push
clc
and
and
xor
push
arpl
push
mov
test
adc
aad
xor
cmp
subl
and
movb
adc
test
mov
mov
lock
and
inc
add
adc
mov
nop
adc
daa
xor
mov
andb
mov
fcomps
data16
cmpl
sbbl
fdivl
cmpsl
xor
insl
popa
xchg
cwtl
or
jecxz
adc
loopne
rolb
adc
leave
push
sbb
pop
data16
xor
data16
adc
or
inc
xor
push
cmp
and
data16
aam
test
jne
push
mov
jmp
mov
test
mov
ja
stos
movsl
inc
mov
mov
cli
movsl
adc
push
cmp
int3
mov
lea
mov
adc
push
pusha
or
xchg
cmc
adc
pushf
dec
lea
rolb
and
sarl
ss
pop
fdiv
je
rolb
mov
fimull
lock
add
sbb
mov
insl
fdivs
jmp
adc
cmpb
jne
push
jmp
cmp
xchg
movsl
xchg
or
mov
push
and
bound
jp
insl
cmp
xchg
adc
adc
nop
inc
fisubs
test
inc
in
inc
xchg
inc
and
in
mov
and
test
inc
xchg
add
add
stos
mov
mov
scas
inc
cmc
adc
or
or
fdivrl
sbb
mov
mov
adc
les
lcall
jge
sub
jge
adcb
or
inc
insl
inc
mov
adcb
jmp
shlb
fiaddl
mov
mov
add
mov
cmp
mov
add
jecxz
dec
int
scas
add
jne
add
jne
pop
sub
or
sbb
lcall
or
and
add
subb
xor
test
or
xchg
adc
inc
test
mov
pop
mov
pop
adc
lea
ficoms
pop
mov
mov
adc
sarb
adc
sub
dec
ret
mov
adc
push
fiadds
adcl
and
dec
dec
daa
push
jp
mov
mov
xchg
rcrb
mov
mov
jb
pop
sbb
mov
inc
or
pop
mov
inc
mov
cs
xchg
push
mov
push
hlt
and
xchg
push
and
mov
push
addb
jl
or
sbb
out
rorb
jge
loopne
or
fwait
mov
adc
inc
fcomps
dec
sub
loopne
push
push
fistpll
inc
or
loop
in
mov
sti
add
jae
add
insl
in
es
and
mov
or
xchg
jmp
mov
enter
adc
loope
xchg
mov
and
addl
test
jnp
loopne
imul
dec
or
sbb
daa
or
mov
mov
add
into
xchg
jmp
fldl2t
adc
cltd
add
cmp
add
push
or
ds
sub
push
fldenv
es
push
push
in
out
add
and
add
jns
adc
inc
bound
jg
cmpl
popf
rolb
push
pop
adc
pop
or
pop
add
ds
movl
push
mov
fwait
dec
inc
popa
ret
cmpl
lahf
add
push
es
leave
repz
insb
mov
mov
fnstsw
cmpsb
icebp
adc
inc
mov
push
loop
jmp
inc
lahf
mov
incl
movsl
jno
js
cmp
jl
push
push
push
jp
or
repnz
add
jg
test
mov
mov
jbe
push
hlt
stos
cli
lea
loopne
add
imul
insl
mov
loope
xchg
mov
mov
and
pop
xor
inc
loop
xor
xchg
pop
fs
filds
mov
push
add
insl
sub
mov
aas
xchg
inc
jle
mov
lahf
push
repnz
scas
shlb
jae
sub
test
or
push
aaa
into
or
push
in
xlat
popf
fs
insb
jb
sub
pop
push
cltd
movsb
jb
jo
jl
adc
dec
orb
push
sbb
test
fs
shlb
and
aad
inc
sbb
dec
sub
gs
test
and
sbb
inc
xchg
pop
mov
imul
mov
cmp
and
adc
je
pop
aas
add
inc
insl
adc
mov
and
jbe
insl
movsb
call
xor
add
lcall
jge
or
daa
imul
movsb
xchg
fdivr
mov
add
test
dec
jecxz
push
sbb
sbb
lea
jmp
lock
inc
add
mov
inc
xchg
bound
and
xchg
pop
xor
cwtl
jb
iret
and
arpl
test
mov
iret
push
adc
clc
loopne
dec
fsubs
mov
test
lret
notl
inc
xor
dec
pop
push
inc
rorb
push
or
add
add
aas
pusha
loopne
jae
push
push
xor
or
add
add
jb
adc
repnz
aaa
jo
adc
or
out
mov
mov
pop
inc
add
adc
dec
inc
cmc
dec
or
js
or
push
dec
push
cli
sbb
in
ss
adc
xor
loopne
sbb
mov
or
std
jo
sbb
add
shlb
push
mov
test
sbb
push
test
mov
push
add
add
and
mov
rcr
and
call
pop
orl
pusha
inc
add
cwtl
adc
mov
mov
ret
sub
xchg
add
pop
jae
push
inc
sub
adc
loopne
in
xchg
adc
and
ljmp
lock
inc
sbb
pop
push
in
mov
mov
mov
loope
mov
je
lods
pop
rolb
dec
cmp
leave
popf
test
fnstenv
in
pusha
or
inc
push
sarb
aam
jo
mov
leave
xchg
stos
or
in
inc
push
mov
hlt
xchg
iret
dec
ret
adc
push
cmp
push
lret
cmp
sarl
call
subb
dec
or
cmp
xchg
and
cmp
dec
lock
leave
and
call
inc
xchg
mov
add
sub
or
ficoms
fwait
or
push
push
in
push
lea
jb
mov
in
adc
or
jno
jmp
sbb
add
aam
mov
js
cmp
ret
dec
or
data16
shlb
hlt
adc
lret
mov
sbb
sbb
fadd
dec
mov
std
lret
fmull
jno
ljmp
fsubrs
mov
mov
mov
mov
mov
loopne
lds
adc
ret
jne
outsb
push
out
xchg
out
xchg
mov
imul
test
stos
and
dec
sub
dec
sub
lods
mov
jmp
pushf
cmp
xchg
dec
and
adc
lods
and
xchg
cmp
cmp
cs
or
insl
scas
push
cmp
dec
sbb
jecxz
sbb
sub
out
fs
sbb
sbb
test
adc
mov
and
mov
push
jo
out
outsb
scas
nop
fldt
ja
or
and
xor
or
xor
mov
inc
rorb
push
add
in
mov
je
push
jg
mov
inc
jg
xchg
pop
add
pushf
add
pop
push
cwtl
sub
inc
add
pop
mov
pop
xor
pop
add
rcrl
int3
pushl
popa
mov
test
sbb
test
and
out
sub
add
shrb
fisttpll
push
bound
push
andb
or
rep
ds
push
adc
insb
or
mov
addb
inc
cltd
jbe
and
push
jge
int
mov
shr
push
pop
std
inc
shlb
fsubs
sbb
dec
push
or
stos
mov
in
mov
pushf
mov
push
mov
push
enter
add
push
push
push
and
leave
cli
push
lods
shl
mov
cmpsl
or
shrb
mov
cmp
inc
cli
cmp
mov
aam
cwtl
ja
fdivrs
cmp
jmp
push
push
sbb
add
push
jl
fwait
mov
ja
sahf
cmp
jno
jecxz
pop
mov
cmc
adc
mov
add
daa
push
fwait
shrl
jp
cmp
popa
ja
push
iret
iret
mov
pop
or
lret
sbb
sbb
lahf
jbe
adc
adc
jae
ja
adc
add
adc
ret
sbb
cmp
rolb
xor
mov
test
push
popf
hlt
or
mov
sti
cmpb
shlb
leave
enter
int3
insl
loop
jle
cmp
adc
mov
inc
mov
mov
and
add
pop
daa
inc
mov
mov
repz
push
sbb
sbb
movsb
test
or
or
cmp
mov
scas
mov
mov
adc
ljmp
xchg
jb
out
or
dec
push
mov
fsubrp
or
addb
adc
push
cmp
fstl
dec
sarb
mov
mov
xor
jne
movsbl
push
fnstenv
repnz
out
mov
adc
and
je
pusha
loop
shrl
mov
sbb
push
daa
mov
test
cltd
lds
movsb
jbe
add
pusha
sub
clc
lret
mov
sub
xchg
cmpsl
mov
daa
and
adc
lret
and
inc
add
mov
sub
repnz
and
xor
cmp
fimull
jge
out
inc
push
adc
dec
cmp
mov
pop
clc
loope
sub
sbb
sub
push
shl
cli
xor
push
cmpsb
jbe
cmp
pop
das
pop
frstor
lods
cmpsl
test
cli
adc
cmp
add
xchg
hlt
rcll
and
or
lock
pop
sbb
fs
ret
xchg
lea
add
add
pop
jnp
stc
rep
mov
or
pop
add
repz
push
add
jb
add
jb
or
or
jnp
mov
jmp
or
jno
jmp
push
jmp
mov
jmp
adc
pop
adc
pop
adc
push
mov
jmp
adc
dec
adc
aas
mov
jmp
sbb
xor
jmp
mov
jmp
sbb
and
pop
xchg
mov
mov
jmp
and
jp
std
dec
inc
and
and
pop
hlt
inc
bsf
mov
ret
push
dec
cmp
lret
cmp
push
adc
jp
nop
incb
bnd
sahf
out
sahf
mov
sahf
out
mov
out
sahf
out
fucom
out
jns
jnp
icebp
idiv
scas
add
add
out
adc
push
and
sub
pushl
add
add
push
pop
or
and
or
or
push
movups
adc
mov
call
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
or
popa
insl
sub
inc
fdivr
pusha
pop
push
lahf
inc
fcomps
pushf
dec
sbb
int
sub
add
loopne
xor
inc
adc
loopne
fnstcw
sub
xlat
jbe
pushf
les
test
xor
sub
jo
jo
out
aam
ljmp
mov
pop
or
xor
fwait
cwtl
push
jo
fwait
xorb
ljmp
sbb
inc
lea
call
or
dec
or
push
mov
addr16
mov
jo
sub
sarl
daa
enter
loope
push
mov
in
sub
bound
shll
cmp
mov
add
cmpl
je
jle
add
inc
jmp
xchg
xchg
pusha
and
jg
popa
jns
sbb
mov
js
inc
xchg
mov
fstps
xchg
pop
gs
fdivrl
xor
es
cmp
clc
mov
jae
sub
je
test
shlb
fcompl
decl
jmp
inc
or
not
sub
imul
pop
loopne
inc
jmp
cmp
dec
xchg
sub
add
shr
mov
pop
mov
mov
movb
xchg
popa
stos
pop
mov
ret
movl
inc
sbb
jp
xor
sahf
and
sbb
fmuls
loope
std
roll
jge
fsts
dec
sub
or
lea
xchg
push
xchg
inc
mov
das
dec
mov
stc
ja
outsl
call
or
add
lret
repnz
mov
pop
fmull
cmp
dec
sbb
lock
cmp
inc
or
add
xor
and
and
pop
enter
jo
jge
sub
fs
rolb
test
or
mov
push
out
scas
divl
ret
push
subb
cmpl
push
and
out
push
dec
push
popa
add
sbb
cwtl
incb
stos
xchg
push
or
test
mov
insl
mov
je
add
sub
lds
adc
and
mov
aas
and
lock
adc
or
push
inc
or
add
aad
mov
add
push
sbb
add
sbb
js
sahf
xchg
leave
add
jnp
out
push
sbb
push
push
call
dec
sub
or
in
fidivrl
fiaddl
in
and
cwtl
pop
nop
sbb
int3
mov
cmp
sahf
sub
pop
sub
add
inc
xor
movl
adc
adc
and
andb
xchg
add
loope
xor
jnp
iret
stc
in
nop
adc
int3
sbb
lcall
hlt
test
inc
jl
cmp
cs
sbb
jl
fcmovb
rolb
std
andb
jle
mov
jbe
cli
es
lea
cmp
call
push
or
js
sub
test
in
movsl
insb
or
mov
sti
int3
ss
aad
or
pop
lods
das
mov
or
fbstp
jle
dec
cmp
jl
dec
aad
cmp
push
insl
js
je
pop
dec
jae
test
imul
mov
cmp
jae
movzbl
decb
jl
jnp
cs
xor
lods
les
adc
mov
inc
roll
inc
in
lock
mov
add
hlt
mov
int3
movl
data16
lods
add
and
mov
je
jne
pop
repnz
cltd
ja
jmp
test
and
add
ljmp
push
mov
dec
inc
ljmp
enter
cwtl
or
flds
sti
dec
hlt
ret
push
mov
es
es
sbb
lret
js
jne
lea
clc
in
mov
cli
push
push
push
sbb
pop
adcl
xor
movsl
sub
mov
dec
in
push
sbb
js
adc
mov
add
dec
int3
mov
pop
or
cmp
xchg
mov
jle
cmp
jne
mov
mov
inc
lock
int3
inc
adc
and
adc
out
xor
adc
leave
add
sub
popa
xchg
adc
rolb
cmpsl
pop
fnsave
cmp
xor
sbb
sbb
mov
and
cmp
sbb
sub
ret
xchg
cmp
jbe
xor
and
adc
jno
call
add
push
rcr
rcr
sbb
stos
nop
jo
ja
divl
push
ljmp
pop
cltd
push
jmp
push
jmp
mov
hlt
rclb
xor
pop
bound
pop
insl
inc
mov
fnstsw
mov
je
jmp
xor
mov
bound
pop
mov
fs
and
arpl
daa
jne
push
movsb
xor
lret
mov
mov
push
push
enter
sbb
mulb
fwait
push
or
mov
sbb
outsb
inc
push
mov
sbb
sub
mov
mov
shrb
push
aam
bound
or
jg
enter
xor
jge
test
jno
or
jo
sub
xchg
outsb
sbb
lret
mov
lret
je
push
lock
add
xor
ret
add
mov
cmp
or
xchg
rcrb
xchg
and
mov
adc
adc
arpl
mov
out
mov
mov
je
push
push
ret
iret
ret
shl
or
push
and
jnp
xorb
test
inc
in
pop
cmp
orb
push
nop
pop
int
jbe
inc
mov
xchg
add
or
mov
in
push
sbb
or
incl
adc
jne
push
dec
notb
mov
test
inc
cltd
imul
add
and
add
insl
es
dec
imul
jmp
add
push
inc
pusha
adc
jno,pn
xor
icebp
mov
or
xor
or
sbb
lods
imul
cmp
or
jmp
inc
pop
inc
inc
aad
sbb
xor
in
adc
dec
popa
dec
ds
push
or
addl
js
jmp
aad
mov
xor
dec
cmpsl
jno
xchg
and
loop
ds
stc
sbb
cs
jne
inc
xor
dec
cs
je
or
push
push
stos
fwait
xor
clc
jo
cld
cmpl
push
in
xchg
add
or
outsb
xchg
or
xor
pop
mov
xor
pop
adc
mov
in
sbb
leave
jno
xor
lock
xor
cmpsb
jmp
lods
je
cmp
loop
mov
push
hlt
cli
nop
rolb
dec
jl
or
pop
rcr
pop
in
je
shlb
mov
loopne
mov
xor
mov
repz
fdivs
inc
push
mov
inc
push
jg
mov
hlt
imul
sub
aam
xor
pop
jmp
es
stos
cltd
in
les
js
sub
sbb
mov
cmp
add
pop
stc
xor
incl
cs
aam
mov
or
push
sbb
clc
cmp
jnp
sub
ret
ror
adc
push
int3
mov
pop
daa
lahf
inc
mov
adcb
rcl
sub
xchg
jb
js
lret
dec
das
cmp
inc
aam
ds
test
movapd
xchg
inc
popa
in
xor
inc
adcl
shr
lcall
imul
ljmp
mov
sub
enter
inc
adc
sub
xor
rol
dec
jbe
mov
insb
test
or
imul
lds
sti
fisubs
popl
imul
mov
sub
xor
mov
and
xor
pop
leave
xchg
sub
mov
sub
dec
cmp
push
hlt
push
test
and
push
mov
or
out
sub
mov
and
and
push
outsl
mov
jg
mov
xor
and
das
cmp
mov
cmp
push
ret
inc
xchg
add
xchg
rclb
inc
fiadds
test
push
insl
leave
sub
push
xchg
sbb
adc
nop
and
test
les
inc
and
inc
enter
or
cli
hlt
dec
dec
sbb
mov
push
and
and
andl
jmp
cmp
push
cmpsb
jns
xor
sbb
sbb
jno
sbb
pop
add
pop
fcmovne
leave
sbb
sbb
mov
ret
push
adc
gs
int
adc
or
and
icebp
push
cltd
sbb
les
movsl
mov
mov
and
or
push
xor
rclb
inc
mov
and
movsl
iret
lea
push
movsl
adc
cs
jp
pop
inc
fisttpll
enter
inc
rorl
jo
jg
xor
les
leave
fildl
jg
add
popa
adc
dec
loope
mov
aas
cmp
mov
sub
mov
xor
sti
sti
ja
bswap
push
cmp
jne
and
sbb
xchg
jmp
mov
or
cmp
je
mov
fadds
xor
and
pusha
jo
push
xor
fld
dec
aaa
inc
mov
frstor
xchg
popa
addr16
test
nop
xor
inc
sub
inc
mov
mov
mov
or
cwtl
sub
imul
mov
sbbl
sub
inc
fstpl
sbb
inc
pop
lahf
bound
inc
dec
and
push
dec
cwtl
push
sub
rorb
addr16
lock
sub
stc
in
sbb
xor
ret
sub
xchg
jl
lret
lods
arpl
jo
sbb
push
cs
js
movl
or
sbb
out
and
add
jno
mov
mov
push
xorb
je
or
or
sub
repnz
push
cmp
mov
pusha
cmp
mov
xchg
xchg
es
in
xchg
adc
les
add
test
jmp
lea
daa
je
cmp
decl
loop
sub
push
cmp
jge
mov
push
adc
mov
fs
pop
lea
xor
lock
lds
rclb
rclb
roll
lret
lret
jbe
or
lock
clc
clc
cld
sbb
insb
sbb
push
add
add
repnz
push
mov
popa
lcall
pushl
in
dec
je
add
adc
cmp
dec
or
mov
shr
cmp
mov
mov
or
mov
sub
push
xor
sub
adc
and
cmp
lds
sbb
jne
or
mov
cli
or
cli
sub
and
fistps
jnp
je
push
add
dec
or
inc
cmp
xchg
rep
shl
cmp
jmp
sub
movsb
or
jg
push
mov
test
je
cmp
jne
sbb
xchg
sub
jne
adc
rclb
out
fisubrs
add
xor
add
dec
push
ficomps
xorb
inc
jmp
sbb
xchg
sarb
idiv
inc
inc
imul
push
clc
push
sub
sbbb
or
and
dec
sbb
xchg
movsb
jmp
add
add
adc
or
cmp
mov
stc
mov
lods
sub
or
push
adc
push
push
lock
cmp
je
imul
test
jbe
inc
test
jmp
daa
dec
inc
lea
or
inc
outsl
xor
aad
out
sti
int3
xor
repnz
hlt
and
cmp
jae
add
inc
cmc
xchg
push
push
ds
jne
push
jns
push
decb
inc
movsl
adc
incl
je
cmp
pop
cmp
je
cmp
jne
inc
jne
mov
sub
jnp
shll
lods
xlat
or
ret
subb
aad
xor
jb
mov
nop
cmp
mov
cmp
test
add
sub
loop
cmp
jne
movsb
mov
rorb
sub
aas
outsl
add
shrb
push
inc
sbb
add
out
xor
fnsave
jmp
push
jl
or
jg
push
ficompl
mov
jmp
and
push
jmp
sub
aaa
aaa
inc
jl
inc
jg
aaa
push
add
int
fld
out
dec
mov
sub
mov
inc
je
sahf
mov
jle
into
les
outsl
adc
test
mov
inc
xchg
or
jo
xchg
mov
mov
mov
out
inc
fstpl
or
loop
mov
jmp
or
outsb
push
xor
pop
cmp
and
push
pushl
pop
push
mov
inc
cmp
pusha
mov
jg
xlat
cmc
ret
push
sub
shlb
push
or
out
jo
or
cmpb
popf
daa
lcall
or
dec
mov
sub
test
and
aad
dec
jge
gs
pop
das
fimuls
lods
mov
and
cmp
inc
dec
inc
add
mov
ja
adc
cmp
mov
inc
inc
inc
out
jmp
xor
push
and
xchg
jne
sub
xchg
cmc
popa
ljmp
js
fs
pop
sub
std
xor
cmp
xchg
popf
mov
cmp
dec
adcb
pop
fcmovu
and
std
aas
ja
or
je
add
jno
out
adc
cmp
mov
push
and
adc
inc
call
ljmp
adc
shrb
lahf
cld
adc
or
pop
push
sub
jmp
pusha
shr
pop
adc
sub
cmp
xchg
popa
ret
or
pop
mov
js
testb
adc
adc
xor
sbb
or
call
cmp
push
lcall
scas
andl
mov
mov
mov
ja
inc
test
xor
push
or
sub
pop
inc
sub
push
lock
sub
jge
jne
push
xchg
test
shrl
push
repnz
sahf
xchg
scas
push
sbb
pop
push
add
add
jmp
repz
bound
add
cmpl
cmp
xchg
xor
in
ret
inc
adc
jg
inc
and
mov
xorl
xchg
pop
cli
inc
inc
lock
xchg
or
dec
inc
sbb
jne
mov
push
push
adc
int
push
inc
xor
icebp
jmp
inc
rolb
sbb
adc
add
stc
lods
test
and
pushf
adc
imul
cs
jo
jl
xchg
rolb
dec
or
push
mov
adc
push
out
les
push
ret
aas
mov
xchg
shl
movb
push
mov
fidivl
cmpsb
std
xor
orl
push
cmp
jo
cmp
mov
and
jecxz
mov
cmp
dec
dec
push
cltd
sbb
jae
addr16
push
inc
ret
rcl
aam
test
cld
sbb
pop
stc
cmp
mov
push
jg
js
cmp
inc
ds
cmp
lea
and
orl
inc
or
mov
sti
sub
mov
dec
dec
inc
or
outsl
pusha
sub
or
cli
add
loope
inc
jl
jbe
xchg
sub
enter
push
jmp
and
dec
add
pop
push
cmpb
jne
popa
or
outsl
lods
and
out
shll
bound
sbb
outsb
sbb
ror
sub
pop
in
je
clc
sub
mov
push
and
sub
adc
mov
adc
mov
mov
sar
inc
inc
or
mov
or
test
add
add
adc
stc
push
mov
popf
cmp
fbstp
inc
pop
psubb
sahf
adc
sahf
mov
clc
add
add
or
push
lret
or
arpl
xlat
inc
pop
loope
adc
rep
push
addb
rol
test
mov
mov
in
push
inc
push
mov
mov
dec
pop
lret
dec
or
popa
push
jne
jp
pusha
sub
data16
inc
je
adc
or
pop
orl
rolb
or
insb
je,pt
inc
outsb
push
push
jno
or
xchg
dec
cmpsl
sbb
mov
rcrb
jl
xor
orl
mov
cmp
jo
add
int3
inc
sub
fildll
sbb
mov
popf
pop
cmpsb
inc
and
lock
scas
add
arpl
adc
and
xlat
sub
pop
fs
sti
fcmovnbe
pusha
jo
xor
aad
push
jo
lock
lock
or
jno
int
out
push
push
push
mov
movups
pop
test
cmp
cmp
pushf
sbb
xchg
cli
xchg
sub
call
inc
movsl
xchg
shlb
popa
loop
inc
push
sub
push
addr16
pop
inc
test
and
and
sub
and
add
pop
pop
mov
adc
adc
cltd
sub
cwtl
arpl
ljmp
add
stos
leave
aad
add
lret
sahf
sub
lods
bound
push
jae
out
stos
pop
ret
xor
lea
mov
sbb
inc
cmp
jb
es
cmc
push
or
aas
push
lds
jb
mov
fsubs
cmp
shll
test
push
adc
sbb
push
or
add
daa
mov
mov
add
sub
mov
xchg
por
xor
inc
ljmp
mov
mov
test
pop
dec
jne
xlat
xor
mov
leave
inc
je
cmp
stos
mov
inc
divb
jbe
cwtl
or
or
and
cmp
int
mov
inc
push
xor
jle
push
inc
pop
push
xchg
test
jge
mov
pop
mov
cmp
inc
xor
les
cmpl
pop
icebp
imul
or
add
jmp
and
fisttps
fwait
leave
cs
mov
cs
fnstenv
test
pop
jmp
add
inc
cltd
mov
fstl
jg
fldenv
and
loopne
mov
or
orl
add
insl
xlat
add
leave
arpl
and
sti
mov
sbb
inc
stc
cmp
mov
jge
ja
daa
jne
xor
jp
lods
xchg
or
and
sbb
aas
bound
jnp
sub
loope
jmp
xor
adc
pop
ds
adc
fimull
mov
mov
pop
mov
jne
cmp
sub
pop
in
sti
cltd
jne
lods
xchg
sbb
sbb
xchg
adc
and
cmp
sub
push
pop
dec
aaa
movsb
sbb
aad
and
popa
movl
insl
in
stos
push
inc
sub
dec
rolb
mov
cli
jne
adc
in
cmpsb
jmp
adcl
sbb
fcmovnb
shl
add
nop
xchg
lret
or
insb
sub
popf
push
mov
or
mov
mov
cs
mov
add
movsb
cmp
loop
push
shll
je
jbe
inc
inc
pop
ds
das
or
mov
lahf
xchg
sub
xchg
adc
insl
addl
sarl
pop
mov
sub
and
gs
xor
push
sbb
in
mov
add
add
push
pop
or
xor
push
in
mov
jo
clc
jno
push
out
inc
add
divb
adc
popl
or
pop
enter
push
sub
stos
fsubp
mov
movb
or
sbb
push
shl
xor
cmovp
mov
xchg
xchg
arpl
inc
sbbl
enter
adcb
and
in
or
mov
jmp
adc
pop
ds
dec
dec
xor
popf
add
out
loop
cs
fsubr
dec
jae
push
mov
incl
or
xchg
andl
add
ret
adc
jecxz
push
cltd
in
les
adc
nop
mov
pop
or
dec
dec
nop
add
jbe
inc
scas
jo
xchg
mov
dec
jno
lret
fcmove
and
cmp
adc
ficomps
js
loopne
xor
push
test
or
roll
adc
flds
cmp
mov
mov
inc
mov
cmp
lret
pop
jo
and
mov
test
or
pusha
add
loop
mov
jl
into
pop
xor
cmp
pop
imul
xor
out
jge
xor
pop
dec
inc
bound
and
mov
add
cmpsl
pop
push
and
cs
lea
add
add
dec
test
fdivr
mov
loop
sub
fnstcw
add
das
pop
mov
xchg
xor
jmp
push
dec
mov
jmp
mov
push
aam
xor
adc
cmp
or
adc
lods
punpcklbw
push
adc
push
mov
inc
sbb
cmpsb
ja
imul
adc
push
ret
sbb
jge
cmpb
jae
add
cwtl
shrb
jecxz
pusha
cmp
mov
in
mov
push
mov
sub
sbb
add
mov
ljmp
dec
adc
adc
outsb
xor
mov
sbb
test
xor
and
pusha
add
lea
inc
ljmp
or
rolb
je
jno
mov
and
and
inc
sub
icebp
daa
test
or
das
push
and
shll
pop
js
ljmp
decl
mov
movl
pusha
jo
push
sti
or
sub
cmp
or
ret
mov
sub
sbb
int
sbb
cmp
dec
mov
enter
ja
shll
lods
pop
fsubs
jecxz
adc
test
xchg
push
pop
adc
or
aad
je
push
dec
sub
subl
jle
jp
push
adc
je
mov
inc
outsl
dec
loop
dec
adc
icebp
outsb
inc
mov
sbb
jo
xor
cwtl
jge
aas
cmp
shll
data16
ret
sub
cmp
add
lahf
cmp
dec
aam
test
or
jne
sub
pop
mov
dec
and
sub
inc
outsb
add
pop
push
jae
aam
adc
cmp
jmp
aad
sub
cld
xchg
repz
into
test
loop
sub
or
roll
lcall
inc
cmp
mov
fmuls
cs
lret
lea
inc
insb
cmp
cmp
mov
mov
in
in
dec
and
aas
sub
xchg
or
push
mov
sbb
cltd
add
add
int3
mov
and
mov
push
pusha
dec
mov
and
and
mov
cmp
xor
movzwl
push
fidivs
dec
in
inc
sub
sarl
mov
xor
decl
jo
cs
scas
shl
and
outsl
and
jo
or
pop
jmp
sarb
or
or
and
push
mov
adc
pop
cli
lods
push
in
xor
sub
out
movsb
sahf
std
scas
jae
cmp
pop
mov
jmp
cwtl
xor
push
cwtl
pop
pop
fmull
flds
xor
push
test
xchg
add
dec
fildll
popa
cld
rorb
fdivrs
imul
shr
rep
adc
data16
pop
movsl
adc
arpl
and
jb
sbb
or
sbb
pop
add
mov
pop
mov
mov
stos
pop
jg
sub
mov
push
imul
mov
fs
or
jae
cmp
ja
std
sub
data16
push
jecxz
sar
dec
jp
mov
mov
je
ret
fwait
loope,pn
lods
push
rorl
push
jmp
mov
les
mov
xor
jg
test
divl
add
mov
aad
jbe
pop
mov
push
incl
cmpsb
push
je
ds
sbb
or
and
lahf
int3
cltd
cltd
cmp
pop
js
ljmp
sahf
adc
in
mov
ret
out
add
cld
cmp
jae
loopne
push
faddl
call
ret
jg
lret
insl
add
lds
addr16
loop
adc
icebp
shl
addb
test
call
aad
or
aaa
mov
ret
sub
xor
push
mov
loopne
add
jo
or
dec
pop
jno
lds
adc
or
adc
lods
in
push
or
and
cmp
dec
sbb
inc
inc
in
inc
adc
aad
clc
fiadds
mov
jg
jp
cmp
xor
loopne
inc
xchg
xor
sbb
or
loop
mov
inc
ret
or
mov
call
popf
lds
into
cmp
pop
cmp
loope
adc
pop
in
mov
fiadds
xor
sub
jp
adc
or
filds
or
ja
inc
jmp
je
adc
mov
sbb
or
push
dec
fisubl
imull
push
loope
cli
xchg
push
ret
pop
cmp
adc
mov
and
xor
fs
push
add
cld
sbb
or
ljmp
fadds
jo
shll
sub
push
aam
out
push
dec
adc
add
dec
push
add
mov
icebp
mov
jns
dec
popf
nop
cli
inc
adc
ds
adc
add
fdivl
mov
clc
mov
cmpsl
imul
push
mov
cmp
push
mov
add
push
jg
add
pop
ret
ret
lea
sbb
adc
cmp
sub
outsb
lock
jnp
fsts
xchg
adc
pop
dec
pop
imul
adc
pop
dec
push
adc
rclb
es
sub
xchg
jl
mov
sub
mov
fmulp
test
cli
jle
dec
push
jmp
add
sbb
sub
xchg
mov
push
add
xorl
loopne
lret
push
nop/reserved
xchg
ret
jmp
or
lret
fsubl
mov
and
xchg
lea
orb
sbb
ljmp
mov
jbe
test
insl
ficoml
cmp
or
pushf
int3
sub
outsb
ret
icebp
cmp
je
lods
out
inc
mov
inc
add
dec
pop
or
push
loopne
sti
or
mov
xchg
xchg
test
jne
xchg
pop
jp
dec
push
imul
sub
icebp
out
push
scas
xchg
lcall
ret
mov
add
loop
push
inc
add
push
insl
loopne
lea
jne
add
add
pop
mov
inc
pop
sbb
mov
aam
cmp
aad
xchg
pop
xor
xchg
test
push
xor
xchg
mov
mov
pop
ja
shll
add
adc
mov
push
push
sbb
mov
outsb
lret
fnsave
movzbl
jne
push
sub
mov
cmp
jg
sub
je
jle
push
xor
pop
div
and
mov
inc
or
pop
mov
xchg
mov
inc
or
mov
dec
nop
push
pop
adc
ficompl
clc
xchg
push
adc
sahf
add
add
push
aaa
loopne
sbbb
lea
imul
mov
push
jp
push
jl
lret
pop
mov
ja
cs
cmpb
fsubl
xorl
in
popa
jo
gs
inc
push
dec
or
orl
adc
push
sahf
mov
hlt
rolb
js
je
pop
adc
push
xchg
sub
mov
cmp
pop
mov
adc
sub
sub
jne
bound
or
adcl
pop
dec
push
sbb
pusha
stos
cmpsb
jle
les
sbb
das
or
push
pop
jno
lods
sub
push
test
sahf
clc
int3
add
pusha
insl
ljmp
pop
and
fstpt
cmpb
sbbb
jne
fldln2
fwait
pop
sarl
add
and
clc
jg
fs
test
mov
jmp
movq
movaps
out
push
enter
mov
clc
jae
xor
jle
xor
xchg
incb
mov
test
decl
insl
mov
imul
repz
or
jg
dec
mov
das
pop
jg
xchg
ret
adc
jnp
mov
negl
mov
aam
ret
or
insb
adc
ja
movsb
and
lahf
pop
add
in
out
xchg
repnz
roll
jbe
and
dec
add
pop
mov
int
scas
mov
fcmovb
sbb
adc
cmp
dec
inc
hlt
jecxz
popa
insl
and
mov
dec
sub
xor
mov
cmpsb
jge
push
lods
inc
dec
pusha
mov
loope
push
adc
scas
loopne
pusha
ret
iret
rorb
aam
jmp
push
je
pop
mov
outsl
or
sub
adc
lods
ds
inc
sub
adc
clc
ja
mov
mov
clc
sub
loopne
inc
cmp
jle
movsl
orl
xor
mov
inc
inc
and
mov
add
push
or
mov
arpl
pusha
daa
repnz
jmp
sbb
sbb
jmp
mov
push
and
push
inc
dec
or
scas
adc
pushf
jno
mov
sub
js
and
inc
das
xor
mov
sub
in
xchg
sub
hlt
adc
add
push
adc
orb
push
movsb
in
insb
or
pop
dec
out
xor
jb
xorb
jns
sbb
or
sub
dec
pop
sbb
inc
push
adc
in
push
add
mov
movb
mov
les
push
pushf
pop
addr16
sbb
sbb
sbb
xor
add
jecxz
fcoml
mov
rcll
and
rcrb
push
aas
dec
adc
nop
addr16
ficompl
push
je
jp
push
dec
lcall
sti
rclb
pop
in
insb
mov
lret
and
addr16
pop
or
inc
imul
xlat
pop
cmp
jmp
push
insl
jmp
iret
seta
out
iret
ss
mov
or
fidivrs
orl
xchg
shrl
hlt
push
jle
aam
mov
arpl
push
cltd
hlt
lock
pop
and
mov
push
jmp
and
push
and
adc
inc
arpl
adc
shll
arpl
cmp
fs
lods
int3
or
sbb
out
in
imul
out
repz
sahf
popf
or
sbb
out
push
cmp
inc
jb
or
test
lret
movsl
fildl
mov
sub
enter
shlb
stos
mov
push
pushl
mov
popw
pop
pushf
push
mov
jae
enter
add
test
push
imull
dec
xor
ficoml
push
jns
loopne
push
test
adc
sub
lock
arpl
mov
cs
loop
icebp
mov
pop
mov
call
das
ss
mov
aaa
or
push
lret
cmp
pop
cmp
movsb
pop
inc
inc
hlt
push
test
adc
andb
and
cmp
aad
jo
hlt
dec
faddl
sub
out
pop
push
fiadds
cmp
sbb
sub
adc
shll
es
test
or
lret
jne
dec
jmp
rcr
pop
data16
repnz
mov
jne
inc
adc
xlat
aaa
push
lds
mov
push
loope
popl
rcl
cmp
sub
cmp
mov
bound
mov
stos
jne
add
rorb
and
mov
comiss
lock
out
test
inc
stos
or
jb
lret
dec
sub
data16
pop
xchg
sub
adc
fidivs
sub
push
xchg
adcb
fists
mov
fimuls
push
mov
ficompl
aad
call
ss
lret
jae
stos
sbb
mov
xchg
fdivl
add
arpl
das
lock
daa
mov
pop
mov
je
lds
idivl
rcl
cmp
in
cwtl
dec
dec
sbb
pop
fdiv
nop
arpl
jo
jecxz
xchg
andl
jb
or
enter
out
repz
test
push
mov
and
inc
and
jbe
gs
cmp
jb
and
mov
cmpsl
add
add
cmp
sbb
lods
jno
sbb
lcall
pop
mov
les
repnz
jg
popa
jl
fisttpl
dec
push
jbe
sub
push
cmpsb
cli
aaa
pop
cmp
pushf
mov
cmp
fisttpll
into
lea
cmp
and
jmp
in
mov
cmp
jne
push
adc
or
mov
inc
mov
jne
pop
sub
pop
test
sbb
add
andb
jne
or
ds
addb
mov
daa
jl
rcll
int3
or
in
cld
dec
sbb
cmp
cmc
ret
inc
loope
mov
and
rcll
and
mov
push
inc
sub
ljmp
faddl
xor
rorl
mov
call
ds
idivl
ljmp
cmp
icebp
nop
lret
pushf
mov
dec
sar
jne
cli
xor
jl
pop
adc
sarb
xchg
mov
aaa
mov
fbstp
ret
and
ret
inc
in
xchg
cmpsl
pop
or
pop
inc
jl
inc
les
sbb
jge
dec
mov
sub
push
js
repnz
cmp
jne
pop
fcmovbe
ret
or
or
pop
push
or
push
xchg
or
pop
push
mov
xchg
mov
cltd
inc
popl
cmp
mov
cmp
adc
mov
rorb
std
lahf
pop
arpl
xchg
inc
mov
jl
and
subb
lods
xlat
outsb
cs
js
pop
mov
aaa
push
ljmp
adc
jne
adc
jmp
push
rcrb
jmp
sub
jo
mov
in
js
or
pop
fstp
mov
shlb
adc
push
push
test
xchg
and
add
inc
cld
add
shl
add
xchg
mov
mov
inc
fnstsw
inc
es
or
or
mov
adc
sbb
jp
addl
leave
fadds
lock
sbb
cld
jb
jae
adc
push
clc
jbe
add
mov
sbb
and
add
cmp
xchg
dec
dec
add
sub
add
add
jmp
test
jne
test
stos
loopne
clc
cmp
xorl
ja
xchg
lods
cld
jbe
jl
jnp
divb
dec
out
test
and
pushf
pop
ss
push
push
addr16
jae
dec
lret
hlt
idivl
cld
pop
icebp
pop
or
pusha
xor
loop
push
push
push
add
xor
insl
fnstcw
xor
or
add
inc
icebp
adc
add
call
hlt
cmpl
mov
xchg
push
push
shl
insl
xchg
add
roll
and
add
pusha
andl
or
leave
inc
dec
push
rolb
push
inc
repz
test
shl
ret
and
movsb
sbb
lods
cmp
push
mov
pop
pop
mov
cld
add
out
sub
pop
jb
out
or
out
pop
int3
adc
stc
rclb
or
stc
lods
fwait
sub
frstor
js
xor
inc
ror
sbb
mov
sti
les
cmpsl
repnz
lret
xor
daa
dec
jne
mov
push
jmp
push
repnz
mov
test
mov
add
dec
jne
mov
pop
adc
add
push
push
add
pop
xor
lods
add
push
adcl
popa
fdivs
or
testb
sar
jae
lret
scas
outsb
into
ficoml
negl
add
cld
jne
mov
push
mov
std
jne
es
jne
mov
cltd
cmpsl
call
aam
subl
and
daa
and
mov
jns
pop
push
dec
or
adc
jmp
std
enter
push
xor
cld
cld
jmp
fisttpl
adc
in
adc
adc
inc
inc
inc
cltd
clc
inc
pop
fsubr
stos
inc
adc
fdiv
mov
mov
sbb
adc
sbb
mov
leave
inc
test
in
ret
sbb
repnz
and
stos
repz
in
add
inc
loopne
dec
test
scas
insl
loopne
or
dec
inc
add
or
and
add
and
or
inc
push
or
and
movsb
xchg
rolb
pop
orl
xchg
rolb
xchg
push
xchg
icebp
mov
ror
std
add
inc
sbb
in
pop
test
pusha
lods
lds
int
sahf
jg
or
add
add
push
in
jmp
movb
jmp
mov
xor
xchg
clc
mov
iret
je
mov
fmuls
cmp
jg
add
adc
call
mov
cmp
mov
test
push
test
aaa
lea
data16
mov
ja
jae
out
inc
cmp
inc
add
add
lea
or
dec
dec
mov
xchg
and
inc
das
sarl
mov
pop
pop
xchg
jo
and
xorb
pusha
pop
cwtl
pop
pop
js
lods
test
sub
dec
cld
adc
cmp
inc
popa
xchg
sbb
add
fsts
mov
jb
andb
push
inc
dec
imul
sub
outsl
sub
gs
push
fwait
inc
pusha
or
loope
pop
xor
cmp
subb
adc
mov
aaa
inc
in
aaa
xor
cmp
jno
les
out
cmp
loopne
les
mov
int
decb
cmp
or
clc
inc
and
xchg
lock
fistps
test
jg
pop
fmuls
lock
and
sub
or
add
adc
pop
js
mov
sbb
xchg
pop
shrb
call
fwait
push
add
addl
push
dec
jge
ret
add
data16
arpl
pop
mov
push
out
push
or
std
pop
cld
sar
stc
and
mov
inc
je
mov
fists
fmuls
or
addb
clc
test
jmp
or
mov
inc
inc
push
or
cmp
push
scas
mov
fwait
jmp
cmp
mov
inc
cmp
jb
add
shll
icebp
in
and
dec
leave
jl
add
jl
or
and
dec
inc
pusha
sahf
outsb
int3
push
test
sbb
fdiv
mov
adc
mov
adc
add
iret
push
sti
bound
iret
sub
or
ret
shl
push
adc
push
jg
or
jle
xor
add
std
inc
dec
xchg
scas
and
xor
sub
cmpl
roll
lock
push
out
jne
mov
lret
int
and
jp
shr
jns
dec
cmp
je
test
je
add
faddl
aam
xchg
pop
addr16
decb
or
cld
aaa
rolb
sbb
cli
clc
les
jae
adc
push
mov
push
lcall
lahf
fwait
sbb
add
jg
fsubl
sbb
mov
add
pmaddwd
outsb
add
pop
fdivl
inc
call
push
incb
mov
inc
jmp
cmp
jno
mov
sbb
jmp
adc
jne
sub
enter
jp
pop
inc
adc
cmp
sbb
fcoms
sub
jg
mov
cmp
je
cmp
and
lahf
loop
xchg
adc
pop
fmuls
imul
js
or
mov
aam
hlt
aaa
inc
sahf
adc
mov
and
je
mov
adc
lret
sbb
adc
dec
sub
or
and
or
add
les
or
sub
xor
push
lods
and
mov
dec
inc
imul
pop
lea
pop
xor
adc
rcll
push
mov
sbb
adc
mov
mov
in
fcomps
inc
xor
inc
sub
mov
dec
jge
push
loop
lret
out
push
mov
push
mov
je
pop
pop
pop
xor
bound
sub
and
lock
jne
mov
jg
cli
mov
or
add
repz
add
xchg
xor
or
addr16
and
rolb
pop
dec
xor
in
sbbb
xlat
push
xchg
cltd
lds
push
mov
xor
adcl
mov
or
cmp
ret
adc
rcr
or
js
dec
dec
nop
adc
fidivrl
mov
insb
sbb
cmpsl
test
xor
pop
clc
add
loopne
or
xor
push
mov
inc
mov
lea
enter
int
and
outsl
cld
xorb
jb
lea
push
mov
ja
or
adc
sub
pop
cmp
ficoml
loope
adc
lcall
mov
and
in
or
sbb
rorb
pop
or
loop
lock
leave
or
out
add
sbb
adc
cmp
aaa
or
inc
dec
mov
fldl
dec
loop
sbb
jmp
icebp
mov
in
stos
in
or
int3
pop
movsl
xchg
and
add
cmp
dec
inc
call
fsubs
int3
cli
dec
cld
and
mov
sub
in
mov
mov
add
xchg
sub
mov
adc
mov
dec
sbb
jp
add
cmp
or
in
inc
jb
hlt
xor
scas
nop
inc
push
inc
jecxz
inc
pop
test
cltd
sub
add
test
lret
into
add
inc
fdiv
dec
cmp
repnz
mov
inc
shlb
add
pop
xchg
sbb
push
clc
rcrb
cmp
daa
fucomp
inc
pop
shll
in
sbb
rcll
lcall
push
or
push
clc
ljmp
sbb
lods
add
or
add
stos
test
jle
mov
les
pop
jp
in
ja
cmovg
push
xlat
cli
and
push
dec
sub
adc
dec
mov
and
popa
adcb
outsb
outsl
xchg
sub
in
inc
sbb
push
pop
adc
test
in
push
faddl
in
je
push
insb
push
data16
push
mov
addl
jle
sub
or
jne
pop
rorb
mov
jbe
lods
cltd
pop
idiv
decl
mov
loopne
sub
mov
pop
stos
push
jne
rorb
popa
push
mov
pusha
add
xor
adc
rcll
xor
ffreep
push
aas
sub
ficoml
dec
loopne
dec
or
add
cmp
inc
push
imul
mov
sub
sbb
out
les
mov
mov
mov
sbb
adc
push
addb
push
jle
adc
or
repnz
add
adc
clc
lcall
idivb
push
and
xchg
loopne
mov
and
test
inc
add
js
stos
cmpsl
inc
mov
leave
fcoms
lds
sub
xchg
dec
mov
sub
jbe
and
lods
add
addl
scas
xchg
add
out
mov
mov
roll
pop
jmp
adc
add
je
les
cmp
inc
cmp
clc
push
mov
fs
into
add
sbb
adc
inc
je
inc
dec
jbe
shrb
or
popa
fs
or
fbstp
dec
je
add
or
pop
out
lods
test
push
dec
push
or
insl
sbb
jbe
inc
add
sub
push
jbe
ss
inc
and
mov
xchg
out
or
adc
sbb
push
test
jg
out
jo
lea
test
fisubl
push
add
mov
roll
push
fisubrl
lock
jne
mov
add
adcl
and
pop
inc
xor
inc
jne
inc
test
stc
push
jns
fs
mov
add
cmp
and
divb
cmovp
mov
jns
pushf
push
mov
push
mov
shr
enter
lea
push
iret
or
imul
jbe
leave
add
pop
lods
pop
jns
add
jmp
rorb
add
dec
push
ret
inc
sti
xchg
test
push
jmp
sub
and
sub
dec
pop
in
icebp
and
sub
jbe
mov
cmp
or
dec
xor
ret
mov
jmp
cmp
cwtl
add
lods
mov
push
mov
mov
scas
xchg
sub
adcb
mov
inc
sub
pushl
loop
pop
lea
add
sub
mov
test
cs
roll
into
push
push
adc
test
or
fst
fsubrl
add
xor
je
sbb
int
or
dec
and
mov
pop
loop
or
jg
clc
mov
pop
jle
call
mov
cli
or
lea
xchg
in
mov
dec
pop
xor
test
fmull
jns
add
push
arpl
int
add
or
ds
cmp
xor
clc
add
and
push
pop
mov
xor
dec
outsb
dec
mov
push
pop
sub
cmp
cld
cmp
push
xchg
movsl
stos
insb
cmp
scas
sbb
pop
fcomps
mov
in
imul
dec
into
cmp
lret
jnp
jo
push
push
add
sbb
push
inc
movsl
loopne
dec
lods
movsl
stos
sbb
pop
mov
cli
insl
or
cmp
mov
pop
add
sarl
inc
push
jns
push
cmp
push
data16
cli
out
jnp
push
inc
cmp
push
cmp
adc
stc
xchg
clc
push
mov
stc
mov
cli
pop
cltd
rorl
imul
add
pop
lcall
insl
inc
sub
ret
call
xchg
mov
shlb
out
pop
xor
lock
xchg
les
add
hlt
fnsave
or
mov
cltd
pop
inc
mov
inc
aam
out
ja
jno
sbb
jno
adc
and
stos
xlat
je
cld
xchg
lods
xor
in
jb
aad
add
cmp
cwtl
push
in
arpl
push
or
int
push
mov
jg
pop
jb
push
add
aam
movaps
imul
mov
imul
inc
xorb
xchg
xchg
jo
xchg
test
or
lea
shll
and
xchg
mov
adc
mov
pop
orb
pushl
mov
aaa
jb
mov
mov
cwtl
fadds
pop
xchg
add
popa
mov
push
nopl
inc
and
ret
and
sub
mov
shrb
mov
jl
inc
in
or
sub
leave
mov
repz
rcll
dec
pop
xor
rorb
movsb
sbb
mov
mov
jne
inc
cmp
popa
and
or
or
int3
jo
push
push
mov
pop
ret
nop
sub
js
jbe
in
dec
pop
pop
mov
or
push
mov
cmp
inc
cwtl
xlat
xchg
and
xchg
cmp
inc
or
cwtl
inc
add
gs
test
insb
sub
dec
cld
jmp
cmp
movsl
aas
adcb
rclb
xchg
and
inc
push
adc
mov
fmull
cmpsb
add
mov
xchg
ja
or
mov
or
rorl
enter
dec
inc
inc
hlt
mov
lock
imul
push
mov
mov
ja
out
xchg
or
cmp
xlat
lcall
or
sbb
fsubrl
nop
or
ja
loopne
add
mov
push
push
adc
cltd
clc
push
into
je
xor
cmp
fisttpl
and
popa
sbb
iret
jp
pop
les
jne
add
leave
and
jns
mov
and
fs
xchg
xchg
mov
or
mov
scas
add
push
aad
mov
lret
aam
mov
and
push
mov
sub
push
leave
add
sbb
jp
and
imul
test
leave
lret
jge
rorl
out
adc
add
cmp
cmp
jb
lret
lahf
jp
sbb
loopne
and
mov
and
es
loopne
outsl
dec
pop
pop
jne
out
out
test
push
add
jmp
mov
cmp
test
add
cs
out
shll
pop
fs
pusha
nop
maxps
nop
or
clc
jns
mov
pop
int
pop
dec
jle
inc
add
add
repnz
dec
add
dec
pop
jge
add
cmpsb
push
lcall
xchg
mov
inc
push
xor
and
pushf
out
sbb
or
repz
mov
push
call
iret
repz
lock
hlt
clc
mov
repz
cld
ljmp
lock
sbb
xorb
jmp
roll
pop
or
insl
sar
inc
and
push
jbe
sbb
lea
jl
cld
scas
loopne
push
pop
and
std
cld
out
sub
xchg
popa
in
neg
shll
xchg
daa
ja
fs
sub
inc
in
nop
or
idivb
add
mov
add
inc
test
out
push
add
nop
dec
dec
addr16
cmp
popa
sarb
mov
sahf
notl
or
push
test
mov
ror
jecxz
sbb
jns
out
sbb
adc
sahf
out
sahf
adc
or
or
cmp
popa
js
in
or
push
bound
sub
icebp
xchg
xor
push
add
pop
andl
inc
ja
cmp
fisttps
or
or
popl
or
cld
cmp
or
xchg
xor
arpl
or
je
mov
dec
sbb
testb
jne
jp
mov
in
sbb
fs
add
cmp
pop
sahf
add
std
mov
inc
and
jne
push
sbb
test
stc
sbb
mov
ffreep
ss
mov
adc
shrb
dec
dec
imul
fdivrs
dec
mov
nop
adcb
pop
movsb
xor
jae
mov
xchg
push
sbb
dec
pop
popf
push
lock
and
jmp
test
sub
movsl
pop
call
fstl
push
pop
sbb
loope
nop
mov
and
rolb
inc
or
or
mov
dec
or
icebp
addb
mov
cmpsb
fs
iret
fs
or
enter
push
icebp
sbb
cs
pop
adc
aam
push
shll
call
mov
jo
cld
add
orl
mov
cltd
call
or
test
adc
loopne
out
and
sbb
bound
ret
daa
pop
lcall
mov
cmp
mov
and
les
mov
add
jp
pop
std
movb
shll
insb
pop
jmp
mov
leave
sub
mov
inc
mov
mov
push
push
inc
jo
rcll
push
push
fcomps
sub
or
add
sbb
or
inc
repnz
or
adc
adc
ficoms
fs
add
cmp
xchg
xor
lcall
dec
push
jecxz,pn
inc
add
movsb
cmp
xor
add
je
sub
pop
cld
cmpsl
pop
xor
jmp
sub
rorl
lret
je
rep
mov
test
rolb
loope
cmp
les
mov
jl
adc
nop
or
jo
mov
mov
mov
cwtl
or
mov
int
cmp
push
pusha
sub
pop
pushf
repnz
adcl
or
xchg
push
or
insb
mov
movl
out
mov
rolb
adcl
push
call
xor
dec
and
sub
sbb
adc
jb
aam
inc
push
push
cmp
pop
mov
imul
sti
movsb
xchg
adc
add
movsl
xchg
sub
and
pop
add
sub
ds
add
arpl
loopne
fcoml
push
push
xchg
fcomps
int3
repnz
xchg
clc
or
xchg
repnz
movsl
shrb
faddl
add
hlt
mov
jae
fbld
cld
xor
or
jae
push
adc
push
bswap
and
pop
in
xchg
pusha
xchg
clc
jno
insl
push
ror
lret
cld
mov
add
pop
xchg
inc
cwtl
cmc
je
pop
mov
push
add
sbb
add
or
mov
test
push
mov
inc
out
add
push
add
imul
xchg
add
mov
pop
scas
xor
call
std
andl
xchg
mov
data16
adc
pop
sarb
push
out
pop
jae
aam
mov
adc
jbe
push
inc
adcb
pop
call
inc
add
loopne
nop
jl
sbb
mov
pop
inc
fcomps
add
test
or
mov
cmpb
xchg
jp
mov
dec
idivb
and
sbb
in
cmp
repnz
ljmp
jns
popa
adc
bound
adc
insl
xchg
add
rcll
ret
push
and
lock
in
and
inc
fsub
outsl
leave
mov
jmp
mov
into
fnstsw
loopne
daa
push
movsb
dec
jmp
pusha
arpl
ss
leave
mov
hlt
cmpb
push
sub
mov
scas
dec
jmp
add
js
movsb
push
lock
rol
jbe
push
dec
clc
rorb
jl
decb
pop
add
push
jmp
inc
and
and
dec
es
test
jmp
lcall
cmpl
mov
jp
jne
push
cmp
or
iret
das
add
fcoms
or
je
lsl
cmp
mov
xchg
lret
gs
shl
ret
fdivrs
xchg
popf
jne
sub
jmp
je
adc
inc
movsl
insl
push
adc
leave
xchg
call
in
or
xchg
loopne
roll
or
pop
inc
ret
mov
dec
cwtl
sar
add
rcrb
pop
ja
sub
xor
imulb
add
xor
jecxz
mov
pop
lods
movsb
dec
insb
mov
cld
xchg
push
jbe
movsl
jnp
rorb
lea
mov
rcr
clc
loope
pusha
jne
lret
dec
or
je
adc
lcall
cmp
adc
sahf
pushf
pop
or
notb
add
cmpl
or
shll
add
push
sti
mov
adc
cs
sti
test
adc
pop
aas
clc
arpl
pop
imul
lock
ja
movsl
mov
mov
leave
test
pop
orb
jbe
movsl
hlt
hlt
stc
rcr
push
add
push
sbb
mov
or
mov
jmp
insb
into
pusha
sub
scas
pop
ret
sbb
pop
and
fnsave
jne
js
add
movb
inc
xor
sbbl
movsl
jl
inc
movsl
imul
jae
cs
sub
js
push
lcall
roll
int
add
call
pop
cmp
xchg
mov
das
add
sbb
clc
adc
push
sbb
adc
push
or
add
in
ret
mov
or
inc
movsb
dec
shrl
lock
test
lea
ss
sahf
arpl
imull
xor
cmpsl
loope
or
scas
mov
mov
add
push
push
or
dec
and
pop
pop
adc
sbbb
or
nop
add
fsubrl
mov
cmp
sbb
sbb
adc
cmp
pusha
rclb
add
push
pop
subl
shlb
call
or
rorl
mov
jp
loopne
cwtl
sub
cmp
jmp
adc
popa
or
clc
push
add
std
or
cmp
xchg
adc
fdivrl
and
aaa
inc
lods
xlat
mov
cwtl
ds
dec
mov
dec
ret
test
xorb
mov
icebp
sarl
je
call
cmp
jmp
sbb
shlb
sub
inc
inc
loopne
jno
mov
add
or
mov
in
je
int
sbb
or
sub
cmpsb
ss
xchg
insl
and
popa
xor
add
gs
mov
sbb
add
or
xchg
and
adc
add
jne
sbb
jo
lods
xor
adc
test
sbb
add
push
add
scas
aaa
adc
jb
jne
movsb
addr16
mov
ja
fbld
jmp
cmp
jle
popa
mov
clc
adc
and
pop
push
dec
js
or
lea
pop
push
push
adc
test
add
push
rclb
push
insb
push
mov
aam
outsb
pop
mov
inc
addb
and
outsb
and
sbb
xchg
sub
inc
sbb
mov
js
adc
mov
push
jne
dec
and
pop
jne
movsb
jl
adc
push
push
inc
scas
data16
dec
add
or
push
cld
enter
sub
inc
lds
add
js
addl
and
pushf
es
jae
pusha
cld
or
mov
jo
inc
daa
add
cmp
inc
sub
push
arpl
sbb
mov
stos
push
push
into
in
push
pop
test
jecxz
jbe
mov
jb
in
adc
dec
sub
and
adc
nop
inc
cld
jmp
inc
dec
int
or
in
imul
lcall
lret
add
orb
fidivrl
insl
or
shll
jnp
or
sbb
hlt
les
mov
mov
or
dec
call
lea
cmp
das
sbb
mov
sub
push
inc
push
stc
cltd
push
test
or
xor
faddl
pushw
sbb
repnz
sahf
add
out
adc
mov
mov
inc
cmp
ljmp
insl
insb
into
cmpb
add
and
xor
aaa
stos
test
movl
or
andb
std
xor
repnz
sar
ret
iret
imul
std
pcmpgtb
add
int
shrl
movsb
xchg
push
sub
add
and
mov
mov
sub
or
add
ret
sti
in
jle
cmp
js
dec
xor
pop
rolb
add
jg
sub
test
pop
lods
add
cmp
test
sub
out
jnp
cs
inc
aam
adc
jle
push
pusha
lock
aam
sub
pushf
jmp
pop
adc
sahf
mov
jecxz
add
std
or
xor
es
jmp
sub
sahf
pop
int
fldenv
pop
sub
cmpl
insb
mov
add
out
cmpsl
pushf
mov
daa
sbb
les
iret
mov
pop
xlat
inc
sbb
cli
movsb
adc
rorb
cmp
mov
jne
mov
jge
aaa
pop
imull
adc
in
mov
ret
fisubrl
push
imul
add
iret
repz
stos
mov
outsb
add
aas
ja
push
xchg
pop
ja
js
emms
test
or
inc
fs
push
push
andb
rorb
or
out
fsubp
push
aam
les
lods
movsb
aas
sahf
addr16
jmp
mov
js
aas
jns
mov
in
jns
js
add
push
mov
add
and
rclb
aas
jns
neg
mov
inc
push
dec
push
pop
or
out
push
sub
aas
inc
sahf
pushf
push
movsb
add
aas
int3
jb
push
push
test
ret
mov
mov
sarb
push
lret
out
fiadds
cmp
xchg
inc
mov
pop
jnp
call
int3
or
adc
mov
lock
inc
push
es
rorl
movd
or
pop
lahf
dec
hlt
push
add
loope
bnd
push
xchg
nop
add
dec
pop
jecxz
fimull
shll
jbe
pop
lods
outsb
in
pop
pop
sub
lods
call
mov
setns
inc
or
mov
pop
xor
cmp
fmuls
mov
adc
inc
push
jmp
jge
aam
imul
out
push
jne
dec
dec
jp
mov
and
ret
icebp
dec
add
ss
outsb
dec
or
rorl
out
loope
pop
add
roll
and
shlb
enter
int3
aam
sub
ret
ror
mov
push
int3
mov
loop
jp
cmc
pop
call
aad
jge
hlt
sar
push
adc
jo
hlt
sbb
sbb
testb
push
dec
add
mov
dec
in
sbb
pushl
insl
and
mov
call
lahf
and
add
testl
call
sbb
jmp
push
push
faddl
mov
call
adc
je
jns
jmp
inc
loopne
or
add
jl
pop
push
divb
mov
xor
adc
mov
or
jle
sub
out
ds
push
repnz
sub
sbb
hlt
xchg
je
pop
sbb
add
cmpsl
lods
pop
xchg
int3
sbb
or
cwtl
out
and
mov
push
jb
in
and
or
cld
add
push
out
push
add
xor
iret
adc
insb
add
add
cltd
or
lea
pop
and
push
or
xchg
cmpb
fiaddl
mov
ss
addl
cmp
or
pusha
mov
jmp
push
out
push
add
mov
or
rclb
iret
mov
ja
sti
or
add
dec
adc
ss
fmull
xor
jno
sub
sub
lea
arpl
mov
enter
sar
loope
cmpl
adc
mov
and
xchg
and
movsl
pushl
adc
scas
push
adc
mov
cwtl
pop
push
add
cli
shrl
arpl
mov
mov
add
or
mov
fcom
add
inc
cmp
adc
aaa
in
inc
test
pop
sti
lret
and
ret
decl
cmc
jo
jo
in
idivb
push
jb
adc
stos
add
les
inc
ljmp
sub
fs
or
inc
rcrl
scas
test
addr16
mov
inc
js
push
mov
sbb
push
ret
mov
fstl
lret
pop
jl
jmp
fbstp
enter
stos
lods
sub
push
das
cmc
mov
jge
xorb
pushf
dec
cmp
push
lea
inc
jbe
mov
imul
test
popw
or
mov
rcrl
mov
lock
es
std
mov
leave
mov
xlat
add
push
shl
xor
xor
mov
and
scas
xor
inc
loope
in
add
imul
loop
or
push
sbb
or
push
adc
testb
sbb
inc
sbb
push
cld
mov
sbb
fiaddl
sti
sbbb
cld
dec
xchg
xchg
or
push
test
mov
call
adc
jg
sbb
cltd
les
loop
mov
addb
push
cmp
rol
hlt
outsl
jo
add
fcmovu
jmp
cmp
pop
add
mov
push
mov
xor
push
test
or
outsb
stos
cs
and
cli
adc
push
jae
dec
pop
add
sub
rclb
shr
sub
or
sub
or
or
cmc
mov
in
sub
dec
adc
add
xchg
daa
movsb
aaa
xchg
adc
std
pop
xchg
push
cmp
lods
clc
hlt
cwtl
push
jp
arpl
mov
and
or
push
add
shrl
rclb
outsb
dec
jbe
or
rorb
cmc
iret
movzwl
stos
or
les
cs
shrb
sub
pop
add
mov
adc
data16
xor
pop
ja
cwtl
movzbl
outsb
repz
jo
xchg
xchg
imul
cmpb
nop
push
xchg
sub
push
outsl
add
inc
inc
pop
ja
xchg
dec
xor
fcompl
mov
out
dec
aad
cmp
sub
cmpsb
push
popa
ja
or
xchg
clc
push
sub
add
pop
add
sti
add
sbb
mov
cmpsb
xchg
mov
aaa
call
adc
dec
andb
sbbb
jecxz
cmp
nop
imul
mov
pusha
add
js
nop
inc
rcr
cmp
imul
mov
sbb
adc
and
inc
adc
insb
jnp
adc
imul
ss
adc
dec
or
cmp
inc
cmp
daa
es
add
add
add
clc
xlat
in
or
cmp
add
lea
or
xchg
xchg
add
add
add
je
daa
jb
xlat
add
call
push
adc
mov
cmpsb
repnz
js
sbb
add
push
mov
push
movsb
call
test
int3
mov
add
push
cmp
and
in
shrb
mov
iret
dec
shrb
cmp
daa
daa
mov
or
mov
adc
cmp
lcall
nopl
mov
clc
mov
mov
stc
or
jmp
and
in
or
xchg
lret
nop
mov
dec
sbbl
add
cmp
sub
adc
lcall
or
test
in
xor
lret
xchg
dec
scas
xchg
add
call
fcompl
lods
pop
dec
xchg
or
fmuls
rclb
repz
enter
fs
cwtl
pop
xchg
sub
call
aam
enter
cs
xor
imul
add
inc
and
pop
add
fs
arpl
or
in
push
and
add
push
jbe
or
daa
pop
lods
movsb
adc
jecxz
pop
add
test
addl
add
dec
mov
stc
mov
sarb
addb
jbe
into
cs
nop
fwait
rolb
out
or
faddp
lock
push
mov
js
xchg
push
orb
decb
sbb
outsb
xor
xchg
ret
pop
mov
push
xchg
xor
or
nop
orb
rcll
cmp
mov
lods
sub
shlb
mov
mov
or
popa
lahf
add
cmp
rolb
inc
cmp
dec
add
sub
adc
popf
popl
or
jmp
mov
xchg
cmp
cs
pop
sbb
push
ljmp
in
ja
add
add
or
cmp
and
or
add
sub
add
insb
push
lret
xchg
xor
push
nop
sbb
sar
subb
add
xchg
sbb
fidivrl
push
add
add
out
xor
add
jnp
inc
jmp
sub
adc
fidivrs
jb
or
mov
or
sub
adc
mov
test
movsb
xchg
aam
and
xchg
rorl
cmp
add
adc
rcrl
imul
xchg
pop
sub
mov
mov
arpl
adc
ds
or
fcoms
ficoms
add
cli
loopne
sarb
ja
mov
stc
shl
test
cli
movsb
loope
enter
fsubrs
inc
popf
out
and
mov
add
fidivrl
lock
sub
loop
or
xor
xor
or
mov
xor
mov
jbe
loopne
ficoms
popf
pop
push
push
sub
mov
inc
cs
pop
dec
fnsave
inc
cmp
mov
and
pop
shlb
orb
mov
push
cmp
nop
lock
in
mov
adc
mov
fucomp
xchg
cmc
mov
mov
fldl
pop
and
mov
movsb
dec
sti
adc
cli
sbb
and
mov
add
pop
jb
cli
imul
pop
or
lds
clc
mov
push
jbe
adc
insb
into
mov
ret
ja
push
xchg
lcall
sti
push
test
inc
fdivrs
xor
pop
cmp
push
add
inc
mov
cmp
sbb
xchg
mov
mov
shll
insb
push
insb
mov
mov
jecxz
jo
shll
xor
mov
push
movl
jbe
cmc
incb
cmp
std
jne
dec
shll
pop
add
adc
jmp
xchg
add
imul
sbb
push
push
mov
xchg
imul
mov
push
xchg
rcll
cmpl
mov
xor
decl
incb
jb
or
xor
lock
jnp
filds
stc
push
dec
push
and
sub
inc
dec
loop
push
adc
rolb
xor
or
push
call
pop
hlt
leave
mov
cmpsb
add
xchg
fldl
andl
lea
sub
and
movb
xorl
rcrl
push
testl
cmp
inc
cmp
mov
add
ljmp
sub
inc
push
jge
add
jb
mov
cmpb
push
mov
push
mov
add
aas
and
dec
jne
roll
dec
nop
aaa
inc
xchg
sbb
sbb
and
idivb
icebp
mov
inc
jbe
mov
inc
dec
jne
jg
insl
add
scas
stos
mov
jmp
loopne
sbb
pop
mov
jmp
cmp
mov
add
dec
inc
sbb
aam
loopne
sbb
add
xor
stos
push
pop
xchg
je
loop
push
and
xorb
dec
ljmp
and
mov
or
xchg
cmp
out
mov
pop
or
jp
pop
push
sub
ljmp
cmp
stos
arpl
inc
jo
insb
ljmp
add
shrb
add
and
sub
or
or
inc
lock
sbbl
out
pop
mov
sbb
jmp
xor
or
mov
mov
repz
ret
aaa
mov
push
test
out
imul
mov
sbb
dec
push
xlat
mov
popf
jmp
lods
enter
and
jl
rclb
loopne
fwait
xchg
push
test
test
je
std
adc
jle
xchg
rcrb
and
inc
ljmp
ror
test
xor
sbb
mov
aas
stos
cltd
les
cmpl
and
add
cmpl
mov
jnp
test
pop
ret
adc
je
dec
push
andb
loopne
add
adc
mov
xchg
xor
sub
les
sub
and
cld
cmp
mov
je
mov
jo
push
xchg
sbb
pop
adc
cld
cltd
sub
dec
not
pushf
sbb
int3
ljmp
sub
nop
lea
movsb
lods
or
and
subl
add
or
roll
daa
sbb
dec
rcrb
ljmp
push
in
faddl
or
mov
jp
imul
cld
mov
add
dec
test
das
add
jns
dec
add
adc
add
mov
lret
mov
fisttpll
les
addr16
pop
fcoms
pop
jle
pop
or
add
fnstsw
pop
mov
gs
test
pushf
push
mov
sbb
jo
aad
add
or
pusha
sub
mov
insb
leave
cwtl
sti
pop
jmp
mov
mov
insl
loopne
or
clc
ret
or
idivl
dec
add
xchg
pop
sbb
les
hlt
inc
test
dec
imul
inc
je
and
das
adcb
push
inc
or
xor
aas
js
mov
mov
scas
push
jmp
aam
and
adcb
js
inc
movl
inc
or
or
jo
lock
jmp
inc
or
add
jg
ss
or
inc
sbb
out
xor
mov
shrb
xchg
ficoml
bound
out
mov
add
pop
in
push
imul
call
cltd
rcrl
loop
loopne
dec
aad
xor
push
lea
cmp
aas
cmp
push
adc
mov
inc
xchg
ret
loopne
or
test
or
xor
shr
pop
shl
mov
iret
push
adc
lea
jno
inc
and
fadd
imul
nop
add
lds
cmp
dec
je
ret
and
das
xor
adc
jecxz
in
sub
pushf
movsl
dec
lahf
mov
pop
jbe
and
xchg
jmp
loopne
cmp
sarl
rorb
nop
call
mov
jg
lds
adcl
xorl
pop
and
cmpsl
inc
xchg
aaa
inc
mov
xor
cmp
cmp
and
xlat
test
push
daa
inc
or
ljmp
cmp
out
test
push
mov
ja
mov
push
imul
mov
in
and
xor
push
inc
pop
or
enter
pop
jp
loop
jl
lahf
xchg
arpl
mov
add
push
cld
shlb
mov
xchg
sbb
pop
mov
pop
pop
stos
mov
and
lea
shll
dec
fisttps
add
sub
mov
movsl
cmp
add
pop
out
inc
push
sbb
cmp
jle
out
pop
xchg
add
inc
xchg
mov
xchg
mov
orl
mov
rcrl
or
xor
lods
sub
dec
stos
push
inc
dec
mov
add
adc
test
je
rorb
adc
push
fsubrs
mov
push
or
ljmp
push
shll
enter
or
xor
dec
sub
push
insb
test
dec
je
or
mov
scas
sahf
mov
int3
push
cmpsb
mov
into
xor
sbb
add
loop
lods
lods
sub
test
daa
faddl
pop
inc
mov
push
les
je
push
or
test
imul
pop
fsub
sbb
fisubs
or
insb
test
in
dec
and
call
lock
and
mov
lret
into
sbb
add
arpl
out
fstpl
addl
xorl
popa
mov
inc
sbb
jb
fstps
into
das
add
mov
push
dec
adc
cmpsb
add
and
sbb
xor
insl
adc
jmp
adc
jmp
add
mov
pusha
push
push
xchg
jno
cmp
jle
pusha
iret
ljmp
inc
sbb
add
mov
stc
cmpsl
xor
or
xchg
imull
xchg
jmp
cmp
mov
jmp
adc
loope
jb
lods
repz
les
cltd
adc
lds
fmull
fstl
mov
cmp
hlt
xchg
jne
lea
mov
inc
lock
inc
iret
repz
mov
outsb
ja
mov
mov
sbb
out
movsb
lods
push
pushl
mov
pop
mov
pop
push
adc
xchg
xchg
cmpsb
sahf
push
mov
es
aad
into
push
mov
mov
stos
add
inc
add
les
cmp
pop
push
sbb
pusha
push
dec
add
lock
mov
add
cmp
popf
imul
je
push
cltd
jmp
inc
faddl
and
and
sub
popa
push
jmp
test
and
hlt
inc
jp
push
clc
and
ret
and
push
push
test
jmp
jb
and
push
test
cmpsl
and
adc
and
sbb
lock
sub
mov
add
rcrb
adc
test
adc
in
xor
or
ja
push
inc
dec
sub
ret
xchg
inc
push
imul
insb
cmp
or
mov
jo
adcb
adc
push
and
jl
xor
xor
jg
cmp
je
or
lahf
sub
pop
fs
fistpll
mov
sbb
and
mov
sbb
data16
jmp
bound
cmpsl
push
lock
ret
lahf
ret
bound
in
rorl
adc
sahf
sub
gs
mov
popf
fadds
cs
int3
call
sbb
shrb
in
mov
lods
std
inc
shld
pop
push
cmp
cmp
dec
dec
ljmp
movsl
push
dec
mov
sar
jp
push
jp
mov
mov
dec
fwait
or
dec
dec
inc
stc
scas
cmpsl
je
fisttps
pop
sub
lods
jno
idivb
lods
mov
xor
or
mov
fdivrs
aas
mov
into
cmp
gs
cmp
es
shlb
mov
dec
enter
or
das
jnp
lods
fcoml
in
shl
jl
enter
insb
mov
dec
leave
in
jne
jne
or
add
mov
mov
add
mov
sahf
mov
pop
cld
mov
push
lea
mov
cs
mov
xor
adc
call
push
cmpsb
mov
call
mov
or
inc
or
sub
cwtl
sbbl
jne
inc
sub
adc
pop
and
ss
cmpb
in
and
xor
lods
pop
inc
movsl
lahf
inc
insl
xchg
xchg
icebp
pusha
cmp
push
jmp
outsl
loope
rcrl
mov
sub
lahf
mov
push
and
scas
mov
inc
movsb
jp
rcrb
jl
int3
cmpsb
dec
loopne
call
pop
fimuls
scas
jecxz
dec
test
ret
clc
fs
jns
mov
sti
jo
add
push
or
or
adcb
cmc
xor
inc
lea
mov
js
lods
pushf
adc
mov
dec
dec
push
ljmp
sub
sub
cwtl
add
rorb
test
xor
nop
xchg
stc
mov
jo
cld
test
pop
push
add
mov
sbb
or
pop
sahf
lods
mov
jns
xlat
loopne
stos
daa
mov
cwtl
add
jl
pushl
mov
cld
insl
cmp
mov
icebp
push
xchg
add
pop
xchg
pop
sti
movsb
enter
mov
inc
subb
sub
pusha
sbb
mov
or
hlt
pop
xor
adc
lea
jne
push
add
scas
mov
mov
jo
adc
outsl
mov
sub
sahf
pushf
cmp
mov
in
jp
lcall
aaa
and
xor
mov
insl
arpl
jecxz
imul
mov
push
mov
lds
xor
std
inc
filds
notb
shlb
lea
cmpb
popf
mov
fsubrl
xor
cmpl
mov
jae
rolb
mov
pop
mov
mov
mov
in
imul
dec
mov
dec
arpl
and
test
adc
xchg
shll
scas
and
sub
shrb
mov
dec
pop
inc
xchg
shrb
mov
loope
in
xchg
add
jb
lock
dec
mov
sub
add
and
scas
jns
jo
inc
add
sbb
push
xor
loope
jae
mov
push
xchg
ret
sbb
test
push
or
pop
mov
push
fcoml
pop
adc
dec
enter
shlb
adc
xor
jp
cmp
xchg
mov
sub
inc
fwait
push
or
dec
sbb
pop
js
add
adcb
data16
adc
dec
cs
aad
sar
pop
or
nop
jmp
and
test
push
cmc
inc
bswap
enter
je
pop
pop
jge
pop
ret
jle
dec
xor
push
sub
sbb
dec
xor
jmp
sbb
jg
outsl
negl
int3
cmp
mov
jmp
push
and
repz
mov
dec
mov
sbb
inc
jae
adc
fisttps
into
adcl
lods
pusha
sub
add
pop
jmp
pusha
pop
in
addr16
mov
mov
dec
lahf
fstpt
sbb
roll
icebp
mov
je
push
push
mov
inc
call
add
nop
dec
adc
add
lcall
sub
dec
or
rcl
hlt
push
shr
int
and
xchg
mov
pop
mov
dec
and
pusha
mov
pop
and
cmpsl
lock
sub
daa
pop
mov
mov
mov
pop
mov
daa
inc
outsb
lea
adcb
movsl
pop
lret
add
dec
loope
fstps
cmpsl
lods
push
movsl
lods
fsubl
out
xchg
xlat
test
testb
popa
or
push
adc
adc
outsl
mov
push
ds
jne
or
add
mov
sub
iret
pop
inc
adc
push
xchg
xor
movsb
aam
xchg
movsl
mov
xchg
or
xchg
mov
jb
mov
and
jp
lods
pop
xor
repnz
dec
in
push
push
or
mov
lods
sub
out
mov
pop
aam
ret
into
mov
mov
sbb
int3
loope
xor
ja
mov
ret
or
jbe
aaa
sahf
or
jmp
xor
add
add
xchg
arpl
sub
test
movsl
mov
int3
cmp
xlat
scas
mov
xlat
mov
mov
mov
xlat
jge
rorl
xlat
xchg
adc
and
sub
xlat
sbb
jmp
in
sbbl
sbb
int
inc
nop
loope
getsec
add
mov
cltd
inc
cmpsb
test
inc
xchg
adc
ljmp
sbbl
testl
and
mov
in
fistpl
cltd
movsb
repnz
pushf
add
sub
xchg
push
cmp
outsb
or
push
sbb
sahf
pushf
push
cmp
in
fsubrs
arpl
fisttpll
mov
dec
and
cmp
out
add
mov
mov
mov
jb
mov
jb
sbb
mov
mov
mov
int
xchg
mov
inc
je
cmpsl
and
in
or
outsb
add
push
and
and
dec
xorb
fcmovne
jne
iret
lea
arpl
push
jb
leave
iret
movsb
test
push
leave
inc
test
sbb
xchg
pop
outsb
ret
mov
js
or
mov
in
adc
out
jns
fstpt
push
mov
dec
movsl
icebp
nop
mov
inc
ss
addl
or
pop
div
mov
and
mov
inc
add
add
movsl
loopne
ret
je
aaa
or
dec
jo
mov
daa
pop
loopne
or
push
test
sbb
mov
pop
mov
fisttps
pop
push
inc
and
push
sub
push
sbb
out
xor
pop
xor
mov
out
repz
mov
push
jmp
pop
dec
lret
pop
test
mov
jg
mov
or
arpl
dec
dec
mov
aam
sbb
sbb
fs
movsl
dec
shrb
fcomps
andl
jbe
cltd
iret
ss
or
push
in
loop
dec
jmp
loope
dec
ljmp
test
test
jne
push
xchg
adc
adc
and
xchg
dec
adc
imul
dec
popa
push
faddl
das
add
fists
mov
test
negb
in
sbb
out
outsl
rorl
in
jecxz
or
pusha
clc
cmp
cmpsb
shlb
sub
dec
or
rorl
add
add
jo
mov
aaa
sbb
add
or
sbb
loop
jmp
push
pop
or
mov
sbbb
test
inc
loopne
add
adc
jne
mov
neg
stos
cmp
je
cmp
and
cmp
mov
ret
stos
mov
adc
cmc
popf
cwtl
shrb
rcl
add
rcll
stos
rclb
popa
mov
add
cmp
jae
xor
pushf
std
mov
mov
add
popa
std
fsubl
add
popa
loop
outsl
xchg
pop
pusha
mov
and
pusha
and
test
inc
mov
cmp
sti
ljmp
mov
adc
lahf
aas
or
jle
nop
pop
pop
sbb
lret
cmp
xchg
gs
sub
addb
jb
cmp
xchg
push
in
xchg
mov
cmp
pop
pop
jp
mov
pop
mov
adc
rolb
mov
sahf
pop
ret
jl
cmp
arpl
pop
sbb
shlb
or
adc
sbb
sbb
mov
inc
rorb
sbb
sub
or
in
inc
jmp
mov
test
jge
ja
mov
insb
push
clc
cmp
mov
inc
inc
or
push
addb
sbb
aas
adc
popf
jge
or
xor
outsl
mov
jbe
add
gs
sahf
inc
xor
inc
adc
js
aaa
jecxz
dec
orb
loope
mov
add
movsl
xor
push
xlat
insl
ja
out
dec
adc
add
aad
int3
out
mov
mov
in
loope
jbe
sub
and
mov
adc
push
push
push
add
add
lcall
gs
jbe
cwtl
icebp
cmp
enter
or
jne
push
cmp
rorb
dec
adc
adc
jge
cmp
addr16
add
scas
fldl
out
sub
fidivrl
movsl
adc
xor
fidivrs
add
inc
cs
leave
popa
loopne
je
cmp
stos
xlat
mov
push
xchg
or
js
and
pop
or
cld
push
test
jmp
dec
popa
push
pop
out
push
xor
in
test
rcl
cld
add
sbb
rorl
sub
xchg
jnp
mov
and
pop
adc
sub
mov
mov
das
add
jmp
iret
les
xor
xlat
shl
shll
dec
enter
ss
clc
test
xchg
xor
rorl
mov
add
sahf
les
sbb
or
lock
jae
push
and
stos
sbb
jae
lea
cwtl
add
adc
push
dec
ret
das
gs
orl
fisubl
dec
pop
dec
test
loope
xor
repz
sarl
jl
mov
sbb
mov
push
push
je
cltd
call
clc
push
sub
lea
jle
scas
dec
push
fnstenv
xor
loop
int3
andl
std
lahf
mov
dec
in
push
push
pop
push
int
aas
sbb
fadd
mov
nop
mov
dec
js
mov
incl
lock
movw
mov
std
fnstsw
and
xor
outsb
xchg
fs
inc
ds
cld
cmp
jb
push
push
ljmp
inc
call
push
add
xchg
mov
mov
hlt
test
jl
cmp
jge
shl
fs
aas
or
add
aaa
and
xor
nop
pusha
sti
pop
faddl
add
xor
aas
addl
jns
and
das
rorb
and
into
sub
shll
nop
lds
rcrb
adc
add
cmc
jl
cmp
in
fstpt
or
cld
sbbl
push
or
pop
ret
add
shl
add
adc
dec
and
cli
orl
sub
jo
pop
push
cmp
decl
pop
xor
xor
mov
orb
jmp
mov
mov
or
cmc
sub
gs
or
ds
aaa
xor
mov
mov
jne
jmp
or
add
or
je
push
add
movl
sub
add
adc
push
inc
clc
cs
push
sub
idivb
je
dec
mov
or
push
dec
in
aam
push
push
add
aaa
cltd
pop
push
inc
ljmp
pushl
mov
or
mov
hlt
jmp
je
xor
xor
pop
int3
in
nop
clc
sbb
lock
aam
add
dec
out
xor
scas
jmp
mov
cmp
out
mov
add
inc
les
inc
out
shrl
or
mov
dec
sbb
call
xor
orb
or
add
pop
ret
mov
lods
int3
jle
jb
push
sbb
jnp
negb
push
sub
push
lock
jb
mov
int
fs
out
lea
daa
pop
mov
movsl
out
add
fistl
popf
imul
pop
rorb
xor
and
das
inc
xchg
xchg
xor
gs
push
push
jb
pop
sbb
iret
and
addr16
enter
add
jnp
incb
cmp
fldt
loopne
daa
jg
jnp
cmpsb
push
xor
xor
add
fwait
add
mov
addr16
push
fimuls
jge
mov
adc
sub
lret
xchg
xor
cld
xor
cmp
sub
sbb
cmp
aam
adc
enter
mov
bound
add
sub
sbb
dec
wbinvd
mov
mov
iret
jmp
and
mov
pop
adc
movb
or
leave
push
clc
add
inc
mov
rolb
mov
lea
inc
ret
daa
pop
mov
xchg
hlt
div
and
xor
stos
and
push
or
push
lods
js
xchg
add
dec
or
bound
or
mov
lods
push
test
pop
jecxz
xor
add
or
or
cmpsl
jne
pop
inc
pop
dec
leave
xchg
sub
dec
sbb
dec
inc
mov
sub
fcoml
ret
cmp
jle
dec
mov
cmp
push
imul
cmp
hlt
jge
inc
push
sbb
lcall
jne
rol
call
hlt
jl
cli
and
mov
imulb
vpunpckhdq
adc
mov
mov
std
int3
push
adc
jb
shl
aas
xchg
push
add
adc
mov
out
cli
hlt
in
out
pop
jo
dec
fcmovnbe
loopne
dec
rorb
fs
pop
adc
jnp
call
cmp
mov
and
or
rol
mov
mov
jno
movsb
pop
rorl
sti
jle
jns
push
sbb
fmuls
lds
push
xchg
add
aam
sbb
jnp
xor
push
aas
clc
lock
imul
and
and
sbb
mov
or
push
pop
dec
lock
or
mov
or
and
insl
outsb
adc
pop
test
pop
lea
movsl
mov
xchg
inc
adc
xor
outsl
fsubrl
push
hlt
lret
test
jno
fcomps
enter
pop
and
mov
or
add
ret
sub
cmc
test
jmp
pop
push
cmp
shl
and
shr
push
or
jnp
inc
adc
adc
push
lock
mull
out
fisubrl
xchg
lsl
jmp
push
pop
push
push
into
push
cld
out
inc
shr
rcr
shr
rcr
or
mov
repz
dec
in
and
inc
mov
out
jb
out
out
fisttps
cmp
or
cmp
or
xor
and
lahf
xor
or
cmpsb
sub
jbe
hlt
lret
iret
push
leave
sub
mov
xchg
or
sar
mov
adc
dec
mov
jno
adc
push
into
ljmp
and
lahf
inc
imulb
add
sub
xorb
std
jle
sub
out
or
or
sarl
xor
inc
inc
cmpsb
and
add
mov
sbb
cmpb
sbb
mov
ret
ja
enter
jge
add
sub
bound
jo
jge
inc
sub
and
xlat
and
jne
addr16
adc
ds
mov
push
jo
dec
add
sarb
jg
sbb
jmp
insl
or
jmp
or
sbb
hlt
push
cmp
cmp
mov
test
dec
and
and
ret
mov
mov
cld
and
add
dec
adc
ljmp
mov
es
sbb
add
mov
sbb
mov
jmp
inc
adc
pop
pop
adc
xchg
mov
push
enter
sbb
popf
movsl
jnp
pop
dec
push
jmp
inc
cmp
mov
xor
bound
adcb
and
add
dec
es
ds
add
inc
incb
aam
cmovns
dec
aaa
xorl
mov
xchg
jo
xchg
hlt
adc
add
lock
pop
ds
mov
mov
push
jb
mov
enter
mov
inc
dec
ret
loopne
pop
mov
outsb
iret
mov
jp
jmp
scas
rorb
cmp
jl
lret
iret
out
lods
fadds
fwait
adcl
jp
test
out
xor
xorl
or
adc
imull
sbb
xor
jo
push
adc
mov
fcoms
mov
jg
pop
push
dec
mov
mov
sub
mov
or
mov
nop
mov
push
sti
stos
or
pop
and
pusha
xchg
inc
fildll
scas
fs
ret
mov
xchg
test
imul
cld
call
js
cmpsb
cmpsb
adc
cmp
ret
out
arpl
or
xor
mov
inc
outsl
fsubr
push
fistpl
fmuls
cltd
push
cs
mov
push
sub
cld
xor
enter
pusha
jne
and
pop
adc
shrb
pusha
jae
test
adc
pop
cmp
adc
push
or
orl
fdivrs
xorl
lcall
inc
fidivl
push
push
mov
subl
loope
ljmp
imul
xor
pop
inc
mov
jl
cmp
jg
inc
jmp
add
or
fadd
flds
in
mov
imul
lea
push
nop
push
add
cmp
mov
and
into
in
jno
pop
and
je
dec
add
xchg
mov
or
rcll
icebp
cmp
xor
test
or
fsubr
dec
sub
push
xchg
push
adc
and
or
incl
shll
roll
push
or
dec
cmp
leave
dec
loop
cmpsb
loope
shr
je
dec
out
outsb
lods
movq
push
dec
adc
push
and
xor
jg
idiv
jl
outsl
inc
or
jbe
jle
xor
es
jg
jg
jo
mov
std
stos
les
mov
sbb
pop
fists
lea
lea
inc
out
js
and
aad
shll
fiaddl
testb
or
xor
enter
or
ds
ret
mov
bound
shrb
lret
ret
mov
and
sbb
shr
dec
adc
cmp
sar
xchg
loopne
sbb
push
add
inc
inc
adc
lea
daa
adc
mov
call
dec
inc
push
cltd
mov
inc
mov
shlb
push
and
adc
nop
test
enter
fs
sub
and
shll
stc
sbb
pop
stos
cwtl
std
and
pop
inc
mov
ret
dec
in
jmp
out
shl
sbb
sbb
aad
inc
frstor
jl
jns
adc
add
ficompl
scas
jnp
adc
pop
sub
pusha
push
inc
mov
add
jbe
add
jno
add
adc
rcll
mov
orl
mov
inc
and
adc
add
mov
pop
addr16
xchg
sub
inc
test
imul
repz
clc
mov
pop
cmp
or
sub
cmp
insl
rclb
mov
stc
loopne
addr16
pop
insl
rorl
inc
addb
orb
push
adc
pop
test
mov
and
stos
into
std
cwtl
popf
or
and
or
sub
hlt
jo
push
je
ja
inc
sti
xchg
cli
adc
lea
add
divb
pop
mov
or
xchg
mov
xor
pop
jl
btc
and
xor
mov
adc
add
insl
in
or
inc
add
jmp
sbb
fiadds
addr16
add
enter
jp
shrb
adc
js
xor
adc
in
inc
sti
insl
or
mov
dec
and
ss
sub
jno
add
jno
push
or
or
ljmp
jp
in
mov
ljmp
out
cmp
leave
ds
xchg
fimuls
jmp
push
push
sub
es
ds
mov
jnp
enter
movsb
rolb
imul
arpl
icebp
out
in
pop
adc
push
jl
imul
rolb
inc
addb
aad
or
iret
dec
je
outsl
pop
je
test
sbb
mov
mov
push
jnp
add
mov
addl
ljmp
inc
or
add
mov
mov
pop
inc
pop
jp
adc
mov
sbb
je
iret
andl
ds
push
sbb
mov
pop
mov
pop
aam
fiadds
in
je
sub
aaa
mov
inc
ds
cwtl
fldt
add
xor
sbb
or
das
mov
and
mov
jmp
pusha
or
lcall
out
pop
push
cmpb
jo
lret
or
mov
cmp
jnp
pop
loop
lock
inc
adc
add
or
pop
loopne
and
lock
cmp
lods
add
fcoms
cmp
andb
jge
loope
sub
add
and
adc
out
push
lea
push
or
and
testb
pop
imul
das
insb
xor
dec
adc
fnstenv
sbb
test
call
and
aaa
sar
addl
xor
jmp
xor
popf
pushl
leave
mov
out
ret
cmp
cmp
or
push
ss
xchg
mov
push
add
xchg
subl
add
inc
mov
inc
push
push
nop
repnz
imul
test
inc
mov
mov
cmp
dec
pop
daa
test
loope
and
or
lods
mov
cmp
bound
or
xchg
inc
jmp
push
mov
cs
sbb
sbb
xchg
ret
loope
lea
and
add
cs
push
add
cmpsb
add
mov
pop
xchg
push
cmp
clc
add
mov
inc
sub
push
arpl
and
xchg
incb
loopne
sti
jmp
andl
jmp
mov
test
xor
test
sbb
sub
mov
mov
sub
or
cmp
xor
xchg
jmp
popf
shl
dec
push
in
jbe
bound
lahf
imul
jnp
fisttpll
lock
jo
adc
sbb
insb
loope
or
jmp
adc
clc
pop
jge
fdivp
sbb
push
mov
add
jmp
in
nop
add
jne
dec
dec
jae
imul
sbb
in
mov
or
push
pusha
cmp
jmp
and
outsb
mov
rclb
bound
pop
push
sub
adc
orl
pop
add
imulb
addb
stos
push
cmp
mov
lods
sub
pusha
popa
jmp
jg
stos
pusha
and
cmpsl
loopne
je
mov
push
jge
sahf
pusha
loop
es
mov
push
sbb
jo
in
loope
dec
mov
incb
dec
mov
add
sbb
lret
jmp
sub
je
test
or
iret
pop
cwtl
inc
divl
clc
cmp
and
mov
ja
lock
cmp
or
mov
dec
cmc
jecxz
push
push
int3
je
clc
inc
jmp
cmp
pop
xor
fsub
dec
mov
dec
adc
daa
or
push
das
push
shl
pushf
push
fsubrs
cwtl
test
xchg
test
add
mov
pop
push
sbb
test
jo
les
cmp
adc
rcl
stos
sub
lods
add
jnp
jbe
sub
xor
xor
jne
loopne
cmp
lods
cld
or
fsubrp
lods
sarl
add
ret
add
pushf
imul
mov
jb
mov
fadds
add
enter
movsb
into
divb
sbb
out
out
mov
into
mov
roll
mov
mov
sub
and
pop
mov
push
or
sub
aas
into
ja
mov
mov
and
pop
inc
testl
pop
cmp
dec
les
dec
into
fiaddl
jne
cwtl
and
pop
cmp
cld
cltd
xchg
or
inc
adc
jo
pop
mov
or
sub
test
push
pushf
push
push
lea
lcall
add
mov
add
sub
ret
xor
cmp
jb
adc
inc
mov
pop
jns
pop
sbbb
incl
cmpl
insl
mov
negb
jg
in
sbb
push
es
add
sub
mov
jle
or
add
or
fcom
aam
gs
adc
dec
lods
add
or
shr
sbb
mov
push
in
std
mov
jae
bound
or
adc
inc
mov
dec
test
or
into
sbb
mov
add
shrl
shl
shr
or
mov
insb
imul
sahf
dec
mov
jne
outsb
mov
dec
outsb
adc
adc
push
cmp
sub
jne
loop
pop
push
cmp
lock
rcr
fiaddl
sub
jo
mov
fwait
loopne
ljmp
jmp
or
mov
mov
ret
fs
nop
mov
sub
add
and
cltd
jl
dec
int3
int3
jmp
out
jp
jp
or
daa
mov
xchg
dec
push
dec
into
jmp
lods
xchg
cmpsb
jno
pushf
rolb
and
les
inc
lods
add
pushf
sbbb
xorb
lret
mov
xchg
pop
jns
mul
test
sbb
add
pushw
push
movups
les
pop
mov
inc
mov
inc
in
push
js
xchg
xchg
add
jnp
mov
out
faddl
dec
adcb
fstl
push
stc
popf
jo
jecxz
push
adc
rcll
sbb
add
testb
adc
sbb
mov
sarb
subb
nop
clc
lods
lods
sbb
jg
inc
sub
add
cmp
or
push
aaa
and
pop
adc
nop
push
cmp
add
int3
pop
in
ja
lret
adc
and
movsl
jno
cmp
punpcklwd
inc
pop
sub
fistl
inc
jo
jns
sbb
rolb
or
mov
add
repz
cmpsb
test
push
xorl
aas
out
pop
imulb
es
pop
push
sbb
jge
mov
rclb
dec
jg
loope
mov
mov
adc
je
dec
add
lods
pop
xor
popfw
push
push
sub
inc
jne
arpl
jg
pop
je
sti
mov
inc
adc
out
dec
movsl
and
out
inc
sub
iret
lahf
inc
inc
jo
mov
rcl
aaa
and
psadbw
pop
imul
jg
adc
divb
pop
mov
xor
xchg
add
sub
jbe
and
loopne
mov
inc
inc
xorl
ret
jle
fcmovnu
test
push
push
mov
bound
add
and
dec
ja
shr
add
adc
adc
push
sbb
bound
or
adc
pushfw
clc
and
xchg
rcrb
loopne
push
imul
adc
cld
push
or
cmp
mov
jb
adc
jg
jmp
lea
push
andb
adc
into
or
inc
inc
pop
movsb
cli
mov
xchg
mov
xchg
and
add
rcrl
pop
lock
loope
inc
cwtl
xchg
push
sbb
lcall
cmp
sarb
push
loopne
sbb
jmp
push
cmp
xor
cmp
ret
mov
jno
add
add
pop
dec
cmp
or
div
test
test
jmp
mov
popl
call
lea
add
leave
sar
mov
and
mov
add
pop
clc
dec
adc
call
mov
outsb
or
nopl
xor
lock
adc
mov
sub
sbb
insb
mov
mov
pop
xor
ljmp
imul
xor
pop
pusha
popf
jbe
cmc
cmp
cmpb
push
push
cmp
test
xor
loope
push
push
sub
imul
ficomps
mov
and
std
hlt
or
or
fs
lock
mov
add
incl
cmp
push
hlt
mov
andl
cmp
and
jmp
data16
adc
sti
out
in
nop
loope
lret
add
cld
cmp
fsubs
movsl
test
lock
xchg
pop
inc
push
push
xchg
lock
call
jmp
les
inc
outsb
adc
push
dec
hlt
cmp
cwtl
push
fmull
cmp
fwait
jnp
push
imul
or
scas
lea
xor
jnp
faddp
mov
jns
pop
add
xchg
mov
cmp
sbb
insb
mov
add
push
or
sbb
mov
inc
mov
nop
cmp
and
clc
add
xchg
mov
rol
mov
sbb
mov
imul
pop
mov
lds
lock
dec
je
aad
mov
ret
add
fadd
sbb
pop
sbb
call
jb
iret
jmp
mov
mov
inc
mov
sbb
fldt
cmp
dec
mov
xchg
mov
or
lret
ss
loope
pop
adc
cmp
subb
mov
cmp
jne
bts
jno
add
mov
push
adcl
adc
aad
gs
xchg
and
pop
lahf
dec
add
mov
inc
or
ret
sub
enter
mov
insb
pushl
push
or
movsl
pop
lock
or
jae
in
pop
subb
jns
adc
fiadds
into
jg
push
in
sbbl
mov
pop
cwtd
mov
fdivrs
test
movsb
inc
imul
cmpl
add
pop
cmc
push
mov
roll
xor
sbb
lahf
pop
stc
cmp
add
add
jmp
mov
test
popf
test
shrb
push
or
add
sub
adc
es
add
add
popf
and
sbb
and
xchg
jl
xor
sub
push
jo
lret
jmp
cmp
adc
mov
cmp
push
adc
stos
sbb
aas
push
jae
adc
inc
lods
cmp
lret
mov
lcall
jne
adc
sub
xchg
mov
mov
or
jno
xchg
pop
jmp
mov
xor
lahf
dec
xor
or
or
push
addr16
jmp
cmp
inc
pusha
in
lcall
push
test
adc
pop
in
mov
in
or
mov
add
jl
inc
aam
orl
fisubrs
jmp
sbb
ss
pushf
xchg
xor
lahf
lods
iret
and
mov
fwait
test
cmpsb
adc
mov
push
inc
fimuls
and
sbb
dec
pop
int
inc
pop
add
push
movsb
daa
xor
mov
mov
insb
and
aam
pushf
push
or
fcompl
add
faddp
mov
and
cmp
mov
jmp
imul
stc
aam
xchg
push
xchg
jno
mov
jmp
pop
xor
dec
pop
lea
lds
cmp
jle
and
add
push
jmp
test
test
enter
jl
loop
jg
stos
jmp
addl
js
pop
sbb
jl
cmpsl
jmp
fs
and
out
es
add
jp
mov
cltd
jo
add
mov
pop
inc
ljmp
jb
mov
enter
and
or
and
and
cld
cli
adc
push
mov
mov
lds
les
dec
addl
jne
push
dec
jecxz
or
loope
jmp
xor
adc
lods
in
jle
push
jl
sub
and
xchg
ret
push
pop
and
movsl
pop
pop
cwtl
adc
dec
jecxz
cmp
and
pop
add
sbbb
jo
cmp
xchg
data16
test
out
cltd
add
jb
sub
outsl
add
test
fstpt
push
es
clc
ret
sbb
pop
shl
mov
cmc
mov
mov
mov
test
test
inc
dec
test
dec
out
jl
sbb
andl
xchg
mov
xor
pop
xor
mov
push
cmpb
sbb
jmp
or
push
int
or
jne
push
aas
mov
inc
int
xor
pop
dec
adc
or
and
xor
icebp
add
mov
cmp
mov
xor
pop
jg
adc
push
push
xor
mov
jne
or
xchg
dec
fmuls
mov
sbb
sub
push
push
add
jne
cmp
cld
lret
or
cmp
jno
adc
add
ja
or
mov
adc
pop
adcl
dec
arpl
adc
js
jl
cmp
add
cmpb
cmc
int3
push
cmp
icebp
imul
add
mov
push
lcall
adcb
sbb
pop
jl
insb
mov
xor
lock
mov
cmp
jg
cmpb
xorb
add
ror
or
dec
fsubrl
jne
push
clc
push
scas
rcll
jp
hlt
dec
mov
adc
jmp
xchg
xchg
sbbl
sub
add
jmp
nop
sbb
rorb
je
jae
out
dec
imul
mov
push
pop
jl
dec
sbb
test
mov
pusha
push
jno
insl
pop
mov
jo
loopne
fnstsw
sbb
pop
lahf
inc
lret
insl
lods
push
in
and
add
xchg
sahf
cld
cwtl
jae
add
lcall
or
sarl
jne,pn
sbb
inc
fs
insl
paddusw
fcoml
les
sbb
cmp
mov
mov
lods
push
sbb
cli
fsubr
frstor
push
icebp
hlt
adc
xchg
addb
push
loopne
jmp
cwtl
inc
xor
jo
mov
push
add
sub
push
daa
push
adc
clc
adc
xor
orl
add
mov
xchg
inc
cmp
roll
stos
out
xor
cmpl
sub
fmuls
fcoms
pop
mov
or
add
sbb
adc
adc
or
stc
jb
push
flds
mov
or
sub
call
in
push
movsl
and
add
adc
int
popa
clc
and
add
mov
and
sbb
je
xor
sub
lods
push
xor
mov
add
sbb
or
loope
pop
or
rep
or
cmc
je
arpl
mov
mov
ror
lock
add
jne
dec
adc
cmp
cld
mov
jne
mov
sbb
iret
sbb
cwtl
push
or
nop
fidivrl
cli
sbb
xor
jb
cltd
cmp
insb
xchg
push
lods
test
cwtl
adc
cmp
pushf
mov
movsl
in
pop
push
mov
dec
inc
cmp
int
arpl
and
jp
data16
sub
sub
sbb
xor
movsb
cmpsl
xchg
cld
or
imulb
cmp
dec
or
mov
cmp
pop
adc
ljmp
in
ja
inc
movsb
shlb
cwtl
js
pop
fidivrl
fstl
cmp
jae
add
push
sbb
fildl
push
adc
lds
mov
popf
push
icebp
rcll
dec
jne
stos
out
roll
cmp
xlat
or
nop
arpl
ret
sub
cmp
jle
push
adc
add
je
ljmp
outsl
sbb
rol
cmp
test
adc
outsl
cmp
cld
dec
jg
cmp
or
inc
inc
mov
test
lods
push
gs
jb
sahf
loop
jo
push
in
mov
sbb
mov
and
test
adc
fwait
xor
sbb
sbb
push
inc
inc
int
jb
shlb
push
or
in
ss
adc
ss
leave
leave
and
sub
ror
leave
xor
cmp
dec
fwait
push
sbb
inc
inc
setae
push
push
in
in
pop
add
in
in
insb
jo
add
jl
xchg
dec
rcrb
mov
and
xchg
cwtl
xor
and
pushf
mov
dec
test
shlb
enter
xor
sarb
xchg
dec
fsub
in
xchg
dec
es
es
lock
clc
and
pushf
fs
add
add
mov
loopne
add
xor
adc
adc
sbb
cltd
fs
and
sub
fs
dec
xor
cltd
orb
inc
gs
xor
inc
es
dec
mov
and
dec
push
pop
pop
and
dec
xor
pop
jmp
adc
push
stc
cmpsb
push
rorb
cs
pop
or
mov
mov
movsb
xchg
pop
mov
inc
shll
xchg
sub
repnz
adc
adcb
xchg
pop
sbb
xchg
dec
and
xchg
xchg
cmp
jns
lods
inc
mov
and
dec
mov
dec
mov
std
enter
pop
notb
mov
sub
rcrl
push
and
fbld
or
jmp
rolb
mov
bnd
cmp
dec
outsb
rcrl
dec
jmp
cmp
or
adc
mov
ljmp
and
dec
pop
negb
test
and
add
popf
inc
cs
or
bound
shlb
pop
not
xor
loope
xor
and
leave
and
shr
xchg
fcompl
in
shr
and
jo
and
and
scas
aam
js
lock
add
enter
adc
add
test
hlt
mov
xor
xchg
or
or
push
mov
lcall
incb
mov
std
or
jmp
inc
and
mov
fcmovnu
dec
mov
aaa
jecxz
sbb
xor
fwait
out
jmp
xchg
jmp
test
lea
adc
and
stos
jp
or
aaa
jge
je
mov
mov
flds
and
neg
neg
pop
adc
pusha
mov
pusha
loope
pop
sub
xor
push
loopne
call
insl
dec
in
fstp
ds
and
fldl
cmp
cmpsb
xor
cmp
testb
push
cmpsl
repnz
pop
adc
sti
add
or
fists
xor
mov
xor
xor
scas
ret
mov
loope
das
cltd
or
sub
je
jmp
push
and
and
pop
notl
cmp
and
andb
mov
mov
sub
and
or
int
aaa
add
inc
flds
fstps
jmp
fst
adc
pop
lea
aaa
lock
test
adc
orb
fcomi
adc
loop
sub
jmp
sub
scas
adc
xor
or
and
ja
cmp
and
or
and
inc
hlt
pop
dec
push
sub
mov
scas
mov
sbb
fstl
mov
dec
jmp
sub
cmp
mov
sub
jmp
sub
push
push
shr
psubusw
inc
test
into
adc
sbb
sub
lds
ret
mov
jnp
nop
and
rcll
loop
sarl
cli
xchg
test
cwtl
inc
and
hlt
jge
ffree
repz
addl
jmp
add
add
shl
cli
repnz
ss
or
stos
je
fstl
mov
xchg
test
mov
shrl
scas
lock
dec
inc
pop
orl
rcrl
nop
loopne
or
push
push
pop
jmp
pop
push
rolb
jno
lcall
cmpsb
mov
faddl
leave
mov
movsb
or
sbbb
pop
shr
jle
push
add
or
shll
sbb
cmpsb
push
sbb
jle
adc
push
fists
push
repnz
test
add
and
add
sbb
mov
dec
ret
lods
mov
cmp
je
add
jl
xor
add
jge
lods
call
test
rcrl
cld
sbb
hlt
rorb
inc
cmp
and
sub
mov
mov
sbb
out
stos
and
ja
sti
add
or
fstpl
add
in
jmp
jno
out
pop
gs
inc
and
dec
xchg
mov
loopne
inc
mov
xor
fnstsw
or
sub
or
lahf
es
cmc
jo
ret
insl
orl
sub
adc
mov
mov
lock
in
inc
add
add
add
hlt
les
aas
pusha
rcpps
pushl
mov
fcoml
sub
push
das
mov
adc
pop
arpl
mov
add
data16
cmp
notl
loopne
sub
jl
push
jnp
loop
or
add
sbbl
adc
je
loopne
sbb
into
sbb
cmp
sbb
mov
xor
mov
xchg
xchg
sub
call
shll
push
lret
lock
or
imul
decb
mov
add
fsubs
into
pop
xorb
jmp
lods
sbb
test
hlt
pusha
push
inc
lahf
les
push
enter
jge
dec
out
fld
fucomp
pop
flds
ret
lret
pop
out
mov
mov
jne
orl
aad
and
mov
sbb
shll
and
push
or
inc
mov
dec
fisttpl
push
or
push
out
mov
das
fsubs
jne
push
jp
push
or
push
and
imul
fsubrs
sub
push
lret
inc
cmp
push
pop
dec
in
dec
ljmp
popf
fstsw
movswl
mov
loop
inc
fsts
cmp
add
and
rol
xchg
mov
fcoml
fldcw
push
push
mov
loopne
mov
fdivr
fcmovnbe
fwait
ja
or
adc
sbb
imul
or
add
nop
call
movsb
fldpi
xor
in
outsb
std
or
enter
push
icebp
test
jg
inc
je
sbb
scas
and
ss
loopne
movsl
pop
mov
mov
andl
orb
pop
shlb
and
jns
mov
inc
jl
test
js
incb
sub
sbb
add
dec
jo
sub
adcb
add
mov
test
lock
shlb
jbe
mov
inc
movsl
mov
add
das
push
mov
fidivrl
es
outsl
aas
mov
test
cmc
mov
pop
rclb
add
shlb
sarl
or
adc
xor
xor
sub
pop
aaa
addr16
je
mov
pop
mov
cmp
mov
push
sti
jbe
sub
mov
lock
call
repnz
mov
enter
or
add
loope
fists
lods
pop
jno
jge
add
loope
rcrl
cmp
or
test
dec
or
fisubl
imul
dec
push
or
cli
and
dec
add
aas
and
pop
sub
cmovne
rcl
mul
in
adcb
test
jbe
jl
lea
dec
jp
push
fs
xchg
rcr
cmc
lock
stos
jp
pop
pop
sbb
jmp
in
cli
jno
loopne
sub
push
adc
pop
add
adcl
scas
inc
jns
dec
or
fwait
mov
inc
lea
pop
xor
lret
ljmp
push
mov
cli
lret
loop
rolb
cmpl
int3
and
mov
pop
and
mov
out
mov
dec
or
inc
adc
iret
mov
insl
lea
cmp
loopne
subb
pop
cmp
jb
cmp
dec
inc
lahf
jmp
sub
adc
inc
fldt
loopne
xor
jp
test
out
sub
ss
mov
stos
jns
and
rolb
and
pop
mov
sub
push
fdivrl
cmpl
add
xchg
and
scas
push
add
pop
or
loope
inc
or
ljmp
push
dec
xor
cmp
xorb
xor
push
loopne
fmul
shl
add
jg
sub
sub
not
push
add
loopne
pop
popf
jb
mov
and
pop
ds
or
and
aam
out
or
xchg
mov
test
jl
inc
rorl
pusha
pop
sub
loope
add
sbb
mov
or
add
pop
dec
jns
sub
dec
lea
push
shlb
faddl
jno
jmp
adc
dec
rol
add
clc
xchg
out
or
inc
rcrl
dec
xor
mov
or
and
lods
mov
lods
fsubr
xchg
hlt
mov
jb
push
pop
add
inc
repnz
incb
aam
mov
xchg
movsl
loop
jns
cmp
and
jo
hlt
push
aas
mov
shrl
push
xor
inc
cmp
fldl
dec
mov
movsb
arpl
push
aam
mov
adc
cmp
ss
roll
adc
popa
loopne
repnz
sbb
or
clc
ja
sbb
gs
shlb
mov
jl
stos
iret
and
mov
or
sub
rorb
push
rolb
and
xchg
dec
lret
push
fimull
lods
shl
test
cld
ret
pop
pushf
iret
or
or
dec
add
inc
or
push
jp
imul
jne
and
or
mov
adc
or
enter
adc
mov
inc
movsl
repnz
mov
test
dec
cmp
mov
adc
dec
pop
xchg
lea
push
arpl
mov
stos
jae
push
or
or
stos
inc
faddl
std
mov
icebp
cmp
mov
inc
mov
mov
push
inc
mov
mov
shll
subb
push
repz
or
insl
lds
add
pop
stos
adc
xchg
xchg
adc
inc
lods
std
pop
jnp
cmc
or
ss
cmp
je
or
call
cld
aas
out
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
lock
inc
mov
shld
inc
add
call
subb
shll
aaa
pushf
lret
sub
or
sub
into
adc
dec
add
adc
or
inc
mov
xor
push
add
adc
mov
outsb
test
notl
add
adc
inc
inc
lret
les
mov
sbb
fadds
je
jne
xlat
movsl
outsl
dec
mov
or
jo
fdivs
or
add
mov
loopne
sarl
je
inc
add
push
into
rorb
inc
les
sbb
sub
mov
push
jbe
push
aas
xor
orb
imulb
cmp
add
push
or
cld
mov
clc
add
sbb
shlb
add
add
lods
xor
xchg
jmp
sub
add
cmp
je
popf
sbbb
sahf
inc
movsl
push
and
mov
mov
dec
jns
neg
movb
fs
xchg
icebp
or
out
imul
xchg
push
in
add
or
push
add
cs
sbb
add
push
push
sub
jns
lock
push
orl
mov
jmp
pusha
cmp
or
dec
add
dec
iret
ret
jmp
add
lret
leave
or
ret
jge
xchg
sub
adc
bound
mov
outsl
fists
shlb
inc
mov
pop
push
inc
mov
inc
aam
lods
add
push
jmp
xorb
lods
jne
sar
icebp
and
and
push
fadd
sub
shrb
and
xor
stos
inc
fcoml
lret
shl
in
and
lea
xchg
sbb
jbe
adc
push
push
mov
enter
sbb
xchg
sahf
dec
jl
ss
cld
push
and
dec
daa
push
rclb
lret
andl
imul
xchg
incb
pop
test
loope
test
pop
xor
sub
or
or
outsb
pop
daa
aad
cmpb
jbe
sub
add
clc
pop
test
enter
js
subb
cltd
movl
push
popa
xlat
inc
dec
sub
leave
and
add
insb
movb
mov
and
mov
mov
mov
fstpt
mov
icebp
add
lock
ret
es
shll
add
xor
xor
inc
aam
sub
add
cmp
call
xor
scas
and
add
jb
cmpsl
or
shlb
sbb
insb
ja
imul
hlt
nop
dec
xchg
mov
sub
adc
es
push
clc
lods
pushf
pop
xchg
ret
or
sbb
sub
shlb
insb
bound
cmp
lds
dec
fs
cld
add
hlt
shrd
sbb
dec
cmp
pop
inc
jge
sbb
clc
cmpsb
in
mov
jmp
cmp
add
dec
jmp
cmp
ficompl
cmp
and
jl
inc
fs
incb
push
adc
push
sbb
ljmp
or
sbb
push
sbb
push
and
ljmp
sarl
jg
xor
fdivl
xor
jmp
mov
sub
fimull
sbb
loop
jl
xor
jb
jbe
aaa
sub
addr16
add
mov
xchg
orb
mov
or
add
mov
mulb
inc
dec
pop
xchg
xor
sbb
mov
add
jl
or
cmp
rcr
jnp
inc
jo
in
in
ja
cmp
mov
fldl
or
test
sbb
cmpb
cmp
inc
or
std
add
pusha
sbb
movw
adc
jp
fimull
xor
xor
in
idivb
cmp
push
sbb
mov
push
imul
push
inc
sub
add
inc
or
xchg
jns
neg
call
iret
cs
xchg
inc
or
or
inc
cli
ret
aaa
push
lods
mov
add
sbb
mov
adc
pop
push
xchg
fisubl
push
adc
pop
repnz
je
aad
mov
jbe
jl
test
add
rcrl
mov
loopne
mov
addb
push
cmp
adc
out
jae
rcll
addb
fs
push
divb
push
cmp
insb
mov
push
and
sub
xor
roll
mov
cmp
leave
loopne
xor
sbb
insl
lods
push
stos
push
or
test
dec
out
js
jl
xor
cmpsb
sub
inc
or
sub
sub
stc
mov
mov
adc
push
add
popf
jmp
xor
rolb
testb
clc
gs
or
pop
data16
pop
add
sub
insb
fs
inc
popa
je
inc
je
dec
xchg
pop
mov
sbb
pop
std
jmp
cmp
mov
add
adc
add
call
adc
push
jo
mov
push
add
pop
shl
push
ret
push
jge
mov
arpl
ret
pop
cmp
mov
mov
pop
hlt
dec
inc
lods
xlat
sub
inc
mov
and
adc
bnd
cmpb
jne
jnp
sub
push
and
push
xchg
rcrl
push
xor
jle
jmp
adc
adc
bound
sub
add
cmp
jp
push
mov
xchg
cmp
je
push
or
cmp
sbb
mull
fwait
mov
dec
sub
mov
jg
loopne
fbld
lea
inc
jmp
and
push
clc
add
push
loopne
pop
inc
push
les
pushf
shll
and
roll
pop
jne
push
movl
mov
mov
cld
jg
fistl
push
sub
and
leave
subl
jge
dec
jne
mov
push
push
push
leave
inc
ljmp
mov
pop
sub
outsb
das
subl
cmp
push
cmp
dec
insl
jbe
or
ljmp
push
ret
cs
adc
push
push
iret
test
jmp
insl
fwait
push
jg
push
adc
mov
cmpl
sbb
addb
lock
or
push
sbb
rclb
mov
adc
and
loopne
imul
pop
pop
pop
pop
pop
data16
dec
shlb
cmp
xchg
nop
icebp
add
dec
xchg
jb
pop
jb
test
nop
inc
ss
mov
xchg
jne
sub
je
dec
je
and
scas
dec
push
push
jmp
or
jmp
cli
xchg
aam
ljmp
mov
jmp
mov
lcall
xor
dec
jno
ret
fisttps
and
add
sbb
data16
movsb
mov
int3
or
loopne
rclb
xor
jo
and
or
mov
lret
add
xor
dec
xchg
pcmpeqw
adc
mov
aas
and
cmp
je
mov
hlt
ss
inc
mov
outsl
lea
or
inc
add
stos
cmp
fs
inc
stc
and
and
sub
and
mov
xor
loope
ret
push
fimuls
sbb
mov
pop
mov
mov
adcb
fldenv
inc
inc
mov
cltd
pushf
and
cwtl
mov
cs
sbb
add
mov
or
sbb
call
push
mov
rorl
or
sbb
lret
aaa
pop
push
repz
clc
shr
add
or
daa
stos
add
pop
or
mov
push
adc
mov
call
and
add
mov
mov
test
notb
lock
cmp
or
mov
add
movsl
insl
insl
and
leave
inc
jbe
adc
movsl
fldl
jl
in
sbb
cmp
add
dec
pop
add
pusha
rcrl
mov
and
ja
inc
fisttpl
cmp
xchg
pusha
sbb
out
bound
push
push
push
xor
lret
push
jns
into
clc
xorb
jl
add
rolb
jbe
sbb
xor
nop
xchg
inc
test
mov
cltd
cli
out
mov
and
xchg
xor
fs
leave
rcrb
or
push
pop
cli
ficomps
adc
xor
push
xchg
nop
jle
dec
les
mov
sub
cmp
movsb
dec
push
mov
incl
cmpsb
or
xchg
or
mov
pop
je
data16
sub
popf
push
ja
nop
outsb
je
sti
addl
adc
pop
add
push
mov
and
or
je
dec
hlt
adc
fwait
jo
enter
js
loope
push
push
mov
pop
lret
and
rorb
add
or
pop
or
lret
xor
sub
pusha
cltd
xchg
or
pop
bound
int
push
mov
or
iret
xchg
inc
cmp
sub
and
daa
add
fisttps
insl
rcr
orl
push
mov
stos
mov
pusha
sbbb
pop
movsl
punpcklbw
add
popa
movsl
daa
lock
push
add
insl
pusha
mov
pop
jb
scas
inc
mov
add
sbb
scas
add
add
sub
mov
xor
fs
mov
mov
sbb
lret
or
clc
xchg
sbb
sbb
daa
mov
adcb
inc
bound
add
and
cmp
je
add
mov
sub
movsl
loope
ret
faddl
outsb
and
dec
cmp
push
jno
imul
sbb
fildl
ss
push
add
and
add
pop
call
or
jmp
ss
dec
mov
call
ss
adc
imul
inc
dec
push
mov
pop
cltd
inc
outsl
pop
shrb
pop
inc
cmp
dec
add
sub
mov
cmp
jle
inc
and
or
sub
sub
pop
sbb
out
inc
mov
pop
inc
push
xor
mov
mov
js
cmpb
jl
shrb
xor
xor
mov
inc
aam
push
fstl
xchg
add
jne
or
push
pop
push
push
call
aaa
push
mov
loopne
imul
mov
rorb
inc
and
dec
mov
ljmp
mov
jmp
data16
cmp
jne
push
or
xchg
adc
jo
jmp
inc
dec
add
mov
in
aas
add
adc
rorb
push
adc
adc
fprem
out
sti
jmp
std
roll
leave
add
je
mov
pop
loopne
iret
adc
cmp
push
inc
les
or
ret
jge
bound
rolb
movsw
sti
jge
xchg
add
add
add
loopne
lea
mov
and
add
or
and
lea
sbb
or
rclb
mov
jge
inc
inc
testl
neg
sbb
sub
jns
sbb
inc
sbb
aaa
xchg
sbbb
sbb
xchg
adc
sbb
push
push
inc
and
fldenv
fcomi
sbb
xor
dec
sbb
sbb
and
add
jns
xor
fwait
dec
jne
pop
pop
pop
pop
add
or
int3
or
mov
and
lods
rcl
ljmp
dec
and
shr
sub
adc
aas
inc
xorb
idiv
and
jo
fdivr
lock
je
push
js
rclb
cmp
push
sbb
out
sub
into
add
pop
fildll
jae
adc
dec
push
enter
mov
xorl
mov
hlt
das
push
or
aad
and
into
jbe
jne
inc
pop
aas
xorb
movsl
das
hlt
adc
and
aas
shlb
or
push
pusha
mov
xor
add
mov
movsb
outsb
cmp
paddusb
test
sti
in
dec
or
or
push
ret
or
add
xchg
adc
gs
sub
test
shrl
add
imul
fldl
repnz
rolb
cmpsb
imul
jnp
add
adc
cmpsb
je
cltd
movsb
cmp
cld
mov
aam
adc
fcmove
jne
pop
sbb
inc
jmp
push
add
add
ja
pop
loop
das
popa
imul
inc
sbb
add
push
xchg
mov
or
adc
shlb
mov
je
decl
jl
out
push
cmp
ja
add
and
adc
cmp
jne
es
adc
adc
mov
nop
and
inc
jl
pop
pop
je
adc
jmp
adc
lods
orb
cld
cs
sbb
lea
push
and
shlb
test
int
or
fdivr
aas
loop
lods
in
pop
push
movb
jmp
or
pop
nop
scas
and
sbb
sbb
cmp
pusha
sub
push
jl
push
mov
or
push
pusha
movw
jb
add
ss
addl
sub
adcl
into
testb
sbb
cmp
push
add
mov
pop
mov
fdivr
inc
ja
dec
je
or
sub
orb
push
mov
incb
push
add
xchg
out
add
fwait
aam
push
pushf
mov
sarb
dec
push
shr
shr
mov
imul
lea
sar
call
mov
insb
pop
scas
movswl
pop
neg
push
jnp
cmpsb
xchg
push
ljmp
cwtl
fiaddl
add
popf
ss
iret
shl
fldenv
sub
cwtl
inc
adc
jnp
ss
rcrl
mov
rcll
lea
pop
lods
xor
add
jl
mov
test
jl
decl
jle
jo
andl
push
les
pushf
loopne
adc
scas
adc
loop
or
mov
and
and
lea
inc
xor
nop
push
cmpsl
add
into
sahf
loope
mov
ja
and
cli
rcrb
loopne
xor
call
in
ljmp
fs
inc
or
cmp
cmp
mov
rolb
lods
xor
mov
sub
lea
xchg
stos
rclb
mov
test
or
sbb
mov
sahf
push
pop
imul
movsb
push
arpl
sub
dec
mov
data16
xchg
mov
mov
fistl
jne
mov
repnz
and
rorb
mov
lret
add
mov
loope
push
mov
gs
add
shr
or
and
rorb
sbb
pop
mov
or
call
clc
mov
sahf
cmc
add
mov
inc
int3
shrl
loope
shr
or
mov
cli
jmp
xor
imul
xor
mov
dec
and
test
testb
sahf
cmpsl
mov
dec
cli
cli
inc
cli
div
pop
sbb
pop
add
jp
add
mov
loopne
sbb
ret
incl
sahf
les
cli
adc
in
xor
lahf
call
ficoml
sub
sub
jmp
sbb
push
fidivl
fldenv
enter
add
aad
jg
or
rcll
divb
sbb
sbb
lock
lea
push
negl
inc
repnz
pushw
sbb
sbb
clc
out
jge
inc
inc
xchg
jb
popa
test
popf
pop
fcomip
dec
dec
in
aam
movsl
test
adc
adc
jne
sahf
fisttpl
ss
inc
shlb
fmuls
rcrl
aam
int3
movsb
enter
and
jge
add
mov
les
sbb
ljmp
xor
sub
push
pop
fmull
or
push
lret
sub
and
fnstcw
mov
insl
test
cmpsb
arpl
cli
mov
sub
xchg
add
or
xor
add
adc
enter
jg
or
adc
mov
mov
out
or
add
fs
jge
mov
jb
or
pop
nop
movsb
jmp
add
xchg
pop
add
ljmp
and
nop
sbb
ficomps
lret
mov
pusha
add
xor
pop
test
sbb
mov
sbb
push
std
pushl
push
cmp
jle
push
pop
outsb
call
xchg
sub
and
and
or
pop
xchg
push
mov
adc
shl
rcrb
xchg
cli
pop
inc
inc
leave
lods
mov
sahf
mov
clc
mov
adc
neg
and
mov
insl
call
jecxz
imul
loopne
fcoms
in
push
pusha
lea
push
and
mov
push
in
cs
mov
pop
dec
inc
add
add
int
mov
push
sar
sub
ljmp
or
adc
and
cmp
dec
sub
inc
cmpsl
inc
lcall
stos
ljmp
sahf
mov
aam
shlb
add
sub
test
fisttps
push
call
add
add
loopne
inc
sbb
or
mov
inc
ljmp
jmp
orb
dec
ret
hlt
mov
sub
cmp
jge
sub
cmpb
or
mov
lock
dec
cmp
add
dec
ja
jb
add
add
fadds
add
cmp
ret
fidivrs
jne
dec
mov
jb
int
rolb
or
in
jbe
xor
lret
or
loopne
adc
jp
ret
adc
inc
or
pop
imul
add
test
lcall
stc
stos
inc
inc
call
and
add
push
test
ret
or
adcb
or
add
repz
add
stos
adc
or
push
pop
scas
cmp
je
push
ret
sbb
adc
mov
and
push
ret
or
xchg
adc
and
push
sub
add
fimuls
ss
mov
mov
or
pop
cmp
xor
into
pusha
lods
add
rcl
sub
and
pop
pop
bound
pop
cmpps
prefetch
mull
mov
adc
fcomps
push
rolb
push
xor
push
jne
or
or
push
add
add
add
cmpl
push
or
add
mov
pop
jle
lret
pop
or
adc
xlat
push
pop
sub
ja
mov
jle
jne
fs
lahf
out
and
mov
shll
inc
jl
jge
out
and
filds
push
pusha
push
or
scas
clc
sub
cmp
shlb
out
and
jo
clc
mov
lock
je
jnp
or
cmp
scas
orl
adc
sub
subl
add
shl
inc
mov
loopne
sub
pop
or
mov
mov
xor
in
add
or
add
or
xor
mov
adc
xchg
jp
mov
mov
iret
xor
sbb
xor
inc
jg
into
cmp
into
mov
out
test
call
jg
or
xor
pop
sahf
pop
mov
aam
cmp
mov
cmp
and
or
sbb
stos
cmp
movl
mov
or
add
leave
out
jecxz
push
cltd
adc
lock
and
xchg
fildll
pop
test
mov
and
cmp
mov
popf
ret
cwtl
cmp
inc
sub
jmp
mov
mov
pushf
jb
xchg
lret
ljmp
mov
out
dec
jo
ljmp
mov
adc
fnstenv
scas
add
test
add
or
clc
xchg
add
mov
into
lret
dec
gs
mov
mov
sarl
push
jl
test
push
fadds
jge
clc
add
lret
cmp
fs
cmp
jo,pn
or
mov
fimull
push
sbb
dec
adc
or
jno
sbb
jbe
dec
or
sub
loope
cld
mov
into
cmp
je
mov
cld
scas
push
sub
cmp
jb
cmp
jbe
pop
aas
or
sub
jmp
push
jl
movsl
pushf
xchg
loopne
int3
xchg
mov
ljmp
leave
scas
inc
pusha
test
fisubrl
mov
loope
pusha
pop
pop
ja
sbb
inc
adc
repz
or
dec
pop
and
popa
inc
or
inc
popa
test
aam
jp
test
push
add
pop
mov
nop
aas
adc
loopne
xor
js
incl
aad
aam
lds
xor
mov
test
push
aaa
pop
and
xchg
add
xor
fadds
mov
or
add
test
cmpsl
push
pop
lret
xor
cmp
inc
dec
sub
add
iret
adc
dec
sub
daa
or
push
test
jnp
cs
push
cmp
sbb
push
mov
clc
push
xlat
or
ret
hlt
cmp
add
or
pop
xor
fldenv
sub
ret
sar
ficompl
xchg
pop
jmp
push
outsl
push
aas
mov
gs
sbb
adc
and
dec
mov
push
cmpsl
and
stos
sub
and
sbb
adc
adc
inc
test
loope
aaa
jno
dec
cmp
test
add
call
push
outsb
jo
je
ss
ret
push
adc
notb
aad
add
pushf
inc
and
mov
insb
cmp
pop
xor
ret
mov
push
sbb
mov
and
sbb
lds
dec
in
sbb
push
repz
clc
cli
jle
mov
das
jne
jns
out
jg
xor
sub
adc
push
mov
xchg
add
enter
ret
dec
lea
add
add
cmpsl
mov
incb
add
lock
dec
mov
lea
push
mov
jle
dec
cmpsb
loopne
jmp
dec
fs
adc
mov
and
sub
ss
cmp
or
js
orb
sbb
sahf
or
mov
out
xchg
aam
loopne
sbb
inc
insl
push
test
sbb
pushf
iret
pop
cmp
push
cmp
push
mov
sub
add
sbb
dec
rclb
and
and
popa
mov
adc
scas
sbb
fsubrs
or
and
xchg
pop
cmp
jbe
aas
inc
lods
push
push
push
mov
inc
adc
sub
movsl
pop
int3
or
dec
sbb
pusha
sbb
inc
fs
inc
add
ret
sub
cmp
or
mov
add
in
pop
shlb
fcomps
popa
lea
arpl
adc
add
jge
mov
inc
les
jge
rorl
xor
lret
arpl
mov
sub
push
push
sub
dec
imul
sub
push
mov
or
fs
outsb
sub
push
and
cwtl
movsl
dec
in
or
push
add
push
inc
nop
pop
push
jmp
add
mov
les
add
sbb
movsl
or
sub
in
mov
rorl
clc
xor
sbb
pop
pop
push
lcall
adc
mov
jo
fldt
rol
pop
rol
dec
jnp
push
sarl
mov
ja
ret
cmpsl
inc
popa
xchg
push
pop
or
aas
pop
push
xchg
mov
add
jecxz
aam
insb
popf
or
mov
inc
es
dec
or
and
fs
test
dec
add
jbe
bound
push
add
inc
adc
sbb
leave
adc
mov
inc
inc
pop
or
popa
or
xor
sbb
insl
loop
shrb
or
xchg
outsb
or
sbb
sbb
sbb
bound
aas
les
inc
in
add
es
mov
or
ret
add
sub
cmp
pop
mov
add
jle
cld
adc
daa
inc
loop
mov
pop
out
sub
lret
or
rclb
push
rorl
mov
mov
xchg
in
dec
xor
jns
adc
ret
aas
sahf
or
push
and
mov
scas
dec
cmpsb
cmp
push
push
int
xor
fists
push
and
add
pop
sbb
and
movsb
cltd
push
mov
fisubrl
clc
pop
enter
add
iret
mov
jg
xchg
int3
sar
addb
pop
cmp
mov
call
pop
pop
pushf
enter
fwait
mov
add
add
test
xchg
rclb
or
push
fucomip
mov
xor
std
outsw
movl
add
push
xor
arpl
sbb
adc
push
shl
imul
rclb
mov
and
fnstenv
popf
adcl
push
jmp
imul
fidivrl
dec
sub
outsb
mov
fsubrp
sub
popf
rorb
nop
dec
inc
imul
dec
loope
adc
cs
jge
cmp
jle
aas
or
movsl
jge
adc
add
loop
mov
sbb
cmp
ja
inc
fcmovnbe
mov
ljmp
cwtl
xchg
repnz
sbb
lret
outsl
inc
jne
xchg
scas
jo
out
jp
pop
add
push
repnz
dec
test
xchg
pusha
lret
jne
pop
lock
jbe
imul
xchg
icebp
xchg
shr
jne
das
icebp
cmp
push
pop
sub
imul
jecxz
add
loopne
mov
fadds
push
scas
cmpsl
mov
mov
mov
fiadds
adc
xor
lods
add
in
data16
push
repnz
nop
and
dec
push
insl
jne
jb
lea
or
lock
jp
test
js
or
xor
and
push
add
pop
fs
lods
or
or
test
rcrl
or
sub
fcoml
inc
loopne
pop
cmp
cmp
sti
jns
mov
fwait
xchg
and
jle
sbb
mov
fwait
adc
or
dec
cmpl
mov
cltd
pop
jbe
or
imul
cmp
bound
mov
or
shrl
cmp
rorl
mov
mov
cli
mov
shr
sbb
fwait
sarb
cmc
and
jecxz
ds
cltd
testl
rcrl
pop
cmp
mov
movsb
lret
fnsave
push
and
and
push
sti
jne
inc
sbb
sbb
pop
fimull
inc
or
mov
xor
imul
sbb
test
pop
shrb
push
jae
push
hlt
pusha
ret
loopne
leave
int
cmpsl
mov
add
in
push
or
jl
mov
test
push
add
add
adcl
add
or
stc
sbb
mov
loopne
cmp
sbb
xor
fsubrp
sbb
mov
pushf
add
or
out
add
fidivl
push
push
add
dec
repnz
mov
jg
aas
fistpl
fs
pop
jl
or
push
mov
pop
dec
pop
test
fstl
push
mov
dec
loopne
push
xchg
or
sub
cmp
aad
cmpsb
lcall
and
pop
sarb
sbb
les
mov
adc
mov
mov
loope
out
repz
loope
fdivs
add
loop
push
movb
cltd
or
inc
cmpxchg
outsl
andb
imul
or
cld
pop
xor
cmpsb
pop
adc
cmp
jae
loop
ljmp
lret
cmp
jg
out
dec
shrb
dec
rcl
add
xor
dec
cmp
mov
es
inc
adc
sub
cmpsb
jmp
and
inc
jae
push
pop
outsb
fcomps
pop
mov
movsl
push
stos
ds
cmpl
iret
adc
mov
movsl
and
lcall
sbb
mov
sbb
ret
or
dec
sarl
sub
in
nop
xor
sub
andb
adc
or
dec
imul
test
inc
fbld
or
xor
lods
dec
inc
addb
divb
pop
add
repnz
xlat
mov
and
mov
add
adc
es
push
js
incb
pop
mov
pop
je
xor
aam
aaa
add
cmpl
popf
add
sub
jl
std
add
ss
jmp
cmp
or
cltd
mov
xchg
je
mov
cltd
neg
add
cmp
movsl
xor
arpl
add
inc
push
rcrl
dec
dec
sbb
push
ss
cltd
cmp
mov
adc
cli
and
jecxz
or
adc
adc
mov
loope
cmp
leave
dec
lahf
xor
mov
dec
je
dec
jne
push
sbb
orb
jmp
loopne
inc
mov
cmp
adc
cmp
xorb
mov
faddl
jne
push
sub
jmp
daa
ss
aaa
lds
cmp
dec
cli
inc
movsl
mov
in
cs
arpl
mov
xor
shlb
adcb
mov
mov
loopew
add
stc
cs
sbb
aas
xor
push
clc
or
rol
and
or
movsl
push
xchg
lods
cmp
ss
pop
inc
hlt
push
push
jbe
inc
cli
push
jb
dec
dec
sbb
loop
or
cmp
rcrb
jp
je
add
scas
lods
pop
add
mov
add
daa
inc
push
push
mov
cmpb
call
lea
testb
jne
add
xchg
int
and
mov
xchg
mov
loope
mov
arpl
popa
insb
insl
pop
pop
sbb
loopne
mov
add
popa
or
jl
push
push
cmp
out
mov
sbb
and
sbb
push
xor
out
xchg
pushf
das
or
cmp
adc
sbb
adc
roll
xlat
add
test
xchg
loopne
rol
mov
adc
pusha
push
push
mov
xchg
and
fcomp
inc
orb
rcll
or
mov
pop
and
popf
fcompl
fs
scas
mov
lock
jle
sahf
dec
add
jnp
pop
mov
mov
push
adc
dec
add
and
adc
or
or
fmuls
ret
xchg
clc
int
jg
jg
push
and
addb
adc
cmp
cmp
inc
xor
lock
imul
add
cmp
jg
notb
cld
push
mov
and
nop
lea
sbbb
pop
cmp
mov
jbe
add
sub
call
adc
orl
jg
jmp
adc
push
xor
outsb
push
ss
and
and
add
dec
cmp
aam
push
jge
jb
insb
ret
bound
cmpsl
push
cmp
scas
gs
or
jg
lds
adc
jg
jae
scas
shll
sub
push
popa
and
jns
inc
bound
xchg
pop
scas
and
dec
js
mov
test
mov
stos
add
test
jbe
inc
lret
sbb
stos
push
stc
pop
sti
push
mov
and
call
sub
adcl
fidivrl
inc
rclb
aas
cs
outsl
cmp
mov
adc
xlat
je
clc
das
lock
mov
and
cmp
int
mov
inc
cli
xchg
divb
push
adc
inc
add
cmp
or
dec
jne
jge
push
fiadds
jbe
jmp
inc
addl
je
cmp
pop
jg
cmp
cmp
jbe
clc
int3
xor
push
push
or
scas
sub
or
push
mov
xchg
call
fwait
mov
push
and
sbb
jg
or
push
or
mov
and
dec
mov
lods
pop
fisttps
mov
pop
es
mov
mov
subl
pop
cltd
dec
inc
es
iret
std
rcrl
sub
mov
mov
mov
cmp
imul
lret
ret
or
inc
xor
in
frstor
add
popa
and
sbb
pushf
mov
sbb
aaa
mov
mov
lahf
inc
dec
test
add
add
adc
inc
sbb
or
lahf
jne
add
inc
jb
in
add
dec
cmp
mov
scas
std
add
pop
enter
fst
mov
xchg
xor
add
push
push
inc
jmp
cmpsl
aas
pop
pop
inc
pop
inc
sub
xlat
jle
xor
dec
fdivs
aaa
adc
add
ret
js
mov
and
fld
fstps
add
enter
insb
add
popa
pop
or
inc
jl
jmp
jns
fstps
icebp
xor
rolb
mov
xor
ret
sub
das
jbe
imul
add
and
pop
sbb
or
pop
mov
gs
xchg
jecxz
pusha
enter
aaa
mov
leave
inc
or
call
lea
mov
cmpsl
or
sarl
pop
fadds
xor
mov
jg
mov
pop
push
and
or
out
add
lods
pop
pop
pop
and
xchg
out
add
adc
lcall
clc
shl
and
jl
cld
cmp
sub
insl
int
xor
push
sub
in
adc
mov
sti
mov
out
dec
inc
xchg
in
in
mov
lock
add
pop
mov
pop
mov
inc
adc
loopne
int3
mov
cld
add
shlb
and
inc
push
loope
adc
add
xchg
mov
add
mov
ret
pop
mov
fdivrl
addb
arpl
roll
inc
sets
std
lds
shl
push
sti
add
inc
pop
fsub
cmp
ja
cmp
aaa
andl
cvtpi2ps
or
lock
jb
call
fnsave
aad
sub
fstpl
xor
mov
fimull
and
jbe
shl
fimuls
dec
mov
stc
adc
dec
mov
inc
adc
mov
mov
insl
sbb
fdivrp
pop
adc
push
adc
sub
or
jbe
cltd
pop
xor
xchg
push
inc
pop
mov
xor
out
sbb
ja
and
cmpsl
jne
mov
xchg
add
mov
adc
nop
mov
mov
orb
cmpb
lods
pop
dec
push
loopne
or
cs
jecxz
and
enter
add
sub
aam
fisttpll
enter
les
jae
stos
xorl
xchg
cwtl
stos
adc
sbb
in
lods
sbb
ja
lds
lahf
cmp
outsl
jge
es
ficoms
pusha
fs
fs
push
fs
dec
js
add
negb
fmull
lret
call
roll
jnp
repnz
icebp
jge
shr
mov
adc
out
cmp
and
rclb
and
mov
pop
jne
gs
mov
jb
pop
jecxz
lock
mov
divl
xchg
inc
cmp
sub
mov
test
ret
sbb
mov
mov
jl
ds
shlb
pop
in
mov
dec
adc
js
and
add
cmp
lcall
or
sbb
push
icebp
pop
xchg
int3
inc
xor
fldt
jp
mov
clc
in
addl
in
adc
test
or
fistpl
int
fwait
pusha
adc
adc
nop
pop
cwtl
sbb
xor
dec
shll
adc
inc
inc
add
and
daa
or
out
fildl
adc
cmp
ret
push
movsb
popf
adc
lock
fmuls
mov
cmpsb
rolb
or
loopne
inc
jno
aam
insb
push
in
add
fsts
ja
and
dec
lock
jp
stos
test
stos
in
mov
insl
mov
loopne
nop
adc
in
dec
mov
pushf
or
jb
fsubrl
xlat
pop
xor
mov
mov
inc
dec
pop
mov
mov
in
adc
add
inc
xchg
mov
clc
shr
out
sub
xchg
jge
xchg
loop
outsb
cmp
adc
clc
rolb
or
gs
outsb
mov
and
jne
xchg
call
and
add
xor
push
mov
pop
push
dec
ret
adc
cmpsl
xchg
add
sbb
add
or
add
popf
sbb
xlat
es
cmp
shl
mov
fucomip
fdivr
add
dec
adc
adc
adc
push
call
cmpsb
sbb
fisubl
je
sub
adc
fildl
mov
adc
inc
dec
dec
addl
lods
add
add
js
mov
push
sbbl
mov
fidivl
decb
sub
adc
and
mov
push
adc
popf
out
pop
lret
add
ficoml
in
cwtl
out
in
or
cli
fstps
lods
add
inc
add
loopne
subl
cmp
js
nop
fistpll
adc
ja
fistps
xchg
scas
nop
or
popa
inc
mov
inc
movsb
adc
aam
dec
sarb
mov
pop
cmp
aad
in
ret
jne
lock
or
mov
in
cmpsl
and
lock
iret
lock
test
xchg
mov
subl
mov
in
in
call
xor
adc
bswap
mov
inc
icebp
cmp
sbbl
xlat
sbb
in
xlat
and
clc
test
je
nop
sbb
ljmp
lods
loop
mov
push
popf
mov
in
in
xor
jne
xor
mov
addl
outsb
add
add
orb
rol
or
xchg
test
sbb
xor
push
in
shlb
sbb
les
repz
cmp
xlat
adc
and
pause
or
fmull
adc
mov
dec
jmp
test
ret
cmp
push
lcall
xchg
and
mov
and
and
or
xor
in
inc
retw
or
or
or
inc
cs
leave
imul
or
enter
or
and
cmc
cmp
and
int
adc
mov
daa
nop
jo
aad
mov
cmc
lods
add
cltd
inc
mov
cmp
mov
or
sbb
rorb
inc
inc
xchg
frstor
scas
cmp
push
rorl
inc
arpl
fwait
push
and
lds
pushf
sbb
adc
test
mov
cmp
div
inc
sbb
mov
xchg
inc
test
andb
or
and
inc
xchg
add
negl
mov
or
inc
inc
scas
loopne
add
test
loop
pop
cmp
lock
sbb
xlat
adc
jae
clc
dec
ja
shlb
loope
aaa
adc
add
xor
adc
adcb
test
mov
jl
jno
ret
push
lds
and
pop
push
fcmovbe
stos
shlb
push
add
inc
pop
clc
inc
enter
mov
andb
cmp
daa
daa
comiss
scas
bound
pop
mov
mov
push
pop
stc
mov
sbb
cs
call
adc
stc
call
shlb
adc
mov
inc
movsl
imul
subb
ja
test
adc
push
cli
mov
inc
add
cli
rcl
mov
ja
vpsrlvw
sbb
les
dec
pop
enter
in
add
dec
pavgb
mov
fbstp
shlb
sub
std
movsb
sbb
mov
xor
or
pusha
or
add
or
and
mov
pusha
pop
in
dec
adc
jb
adc
adc
std
inc
mov
add
es
loop
sar
clc
jg
add
and
enter
jne
jge
mov
movq
cmp
aad
adc
cs
mov
loopne
mov
icebp
lock
jmp
adc
call
mov
dec
cmp
sarb
push
add
add
or
or
push
push
les
push
or
adc
xor
fptan
test
and
mov
or
adc
stos
adc
xchg
or
cmp
or
sbb
imul
das
jns
mov
add
ljmp
adc
ret
in
dec
cmpsb
mov
pop
adc
mov
sbb
pop
and
and
ret
cmp
add
mov
das
mov
push
rolb
test
cwtl
stc
mov
mov
jae
and
add
mov
or
lock
pusha
je
or
adc
xorb
sbb
dec
xor
sub
dec
es
fiaddl
and
jne
movsb
in
push
or
dec
push
in
movsl
dec
adc
push
pop
pop
inc
int3
xor
jnp
pop
aam
enter
mov
inc
push
dec
dec
mov
push
add
mov
mov
adc
adc
and
pop
inc
les
push
arpl
xor
mov
mov
jne
shrb
les
leave
add
cmp
jge
lcall
or
push
adc
pop
or
cmp
fmuls
enter
push
jmp
aas
jl
aam
in
and
fsubs
add
nop
xchg
test
push
or
add
in
or
subl
jae
jp
adc
mov
mov
unpcklps
jne
mov
fsubs
or
ret
aas
outsl
mov
pop
xchg
addl
lea
mov
mov
call
sub
in
mov
push
loop
jmp
cmc
lcall
mov
xchg
or
leave
and
pushf
mov
test
lods
cmp
mov
aad
mov
xchg
sub
add
jl
jnp
or
xor
test
adc
sbb
insl
mov
mov
aaa
inc
aam
push
imul
xor
lods
insl
pop
aaa
ja
stos
cmc
push
cmp
sarl
enter
adc
movsl
mov
dec
test
mov
test
ret
fnstcw
pushf
add
sbb
leave
push
cmp
call
jb
or
aam
and
xor
shlb
mov
fcoml
pop
lods
dec
sbb
lea
sub
mov
sbb
pop
cmp
inc
lock
add
inc
fldcw
dec
lcall
push
or
cwtl
lds
adc
xchg
lods
adc
mov
pop
or
test
nop
mov
add
ljmp
lahf
ja
popa
add
lock
int
push
xor
push
xchg
push
js
loop
add
ss
pop
jae
add
jns
mov
in
insb
pinsrw
cmp
or
inc
outsb
pop
call
das
and
test
int3
add
inc
aam
in
push
test
inc
fmul
dec
jns
dec
and
xchg
stos
inc
add
pop
mov
in
fs
scas
rclb
out
jnp
popf
cmp
or
pop
or
imul
adc
aad
adc
sub
stos
push
popa
adc
sub
push
jecxz
push
fldcw
subl
ja
and
xor
xor
xchg
jae
sti
or
aad
mov
adc
inc
xor
sbb
add
add
inc
ret
push
cmp
cmc
push
lods
and
push
mov
sub
or
sti
pop
mov
push
dec
adc
test
lock
xor
shr
call
notl
pop
sbb
imul
roll
dec
xorb
xchg
je
leave
adc
and
sub
movsb
pop
mov
pop
mov
xchg
scas
mov
test
fdivs
and
and
push
aam
cwtl
inc
xchg
mov
adc
sbb
sub
in
mov
adc
adc
stos
test
lods
xchg
data16
mov
sub
add
adc
inc
or
and
sub
rorb
xchg
sub
sti
aam
cmp
xchg
push
push
mov
or
sub
mov
or
mov
pop
rclb
jmp
sub
popf
jae
daa
in
inc
pop
cs
dec
rorb
gs
mov
inc
nop
and
mov
xchg
aam
test
loope
inc
mov
repz
adc
enter
lds
test
divl
test
addb
sbb
aas
pop
jno
pop
pusha
mov
lea
aad
add
sbb
mov
xlat
inc
sub
xor
push
add
pop
xlat
lea
aad
add
push
jmp
aad
addb
test
int
lock
cmpl
sub
jne
movhps
les
test
gs
push
jne
jns
unpcklps
aas
cmp
xor
icebp
sbb
and
sbb
cmp
pop
mov
adc
in
jmp
sbb
addb
jae
pop
inc
ret
jns
jmp
rcll
sbb
mov
das
and
dec
or
test
add
sbb
test
scas
ret
jbe,pt
mov
mov
scas
jge
andl
test
popf
movsb
xlat
mov
gs
push
mov
pushf
mov
adc
andb
stos
pop
xchg
push
sub
repnz
push
cmp
sbb
or
test
dec
aam
inc
push
sub
bound
xor
mov
inc
mov
adc
pop
jle
out
add
js
and
inc
addb
mov
push
out
xchg
sbb
jl
cmp
jb
dec
das
ret
adc
sbbb
jl
cmp
push
xor
pop
js
movsb
test
mov
mov
shll
stc
push
sbbl
push
dec
cmp
lods
cld
or
xor
push
and
or
pop
sbb
ret
nop
cmp
es
cmpl
aam
adc
and
push
jb
and
cmp
test
notb
xorb
enter
test
and
inc
mov
jo
or
or
push
cwtl
rcl
fnstenv
imul
or
cmp
sub
pop
in
inc
scas
movsl
pusha
faddl
bound
dec
inc
sti
jno
or
inc
mov
aaa
mov
lea
rol
xor
xchg
mov
ja
imul
or
mov
xchg
repz
loope
or
bound
inc
fstpl
sbb
mov
clc
fwait
and
xor
cwtl
jecxz
cmp
repnz
leave
mov
inc
es
jp
testl
icebp
xchg
add
es
test
mov
push
push
insl
pop
pop
add
adc
leave
mov
push
pusha
adc
xchg
dec
xor
cmp
xchg
dec
xor
and
cmp
orb
xor
sbbb
pop
xor
cli
imul
push
sbb
push
testb
add
and
cmp
aaa
das
add
mov
inc
or
dec
and
sub
xchg
dec
pop
in
sub
inc
or
xor
cmp
xor
bound
add
pop
add
sub
push
inc
jl
dec
jb
or
jne
xor
pop
push
inc
xchg
cwtl
adc
sub
jge
fwait
mov
nop
push
pusha
rcr
lods
add
cwtl
test
sub
in
inc
adc
or
lock
jnp
dec
pushf
dec
mov
loopne
enter
ret
xchg
outsb
adc
cmpsb
ret
int3
arpl
pop
int3
mov
in
rcl
jns
cltd
popa
mov
outsl
in
mov
stos
add
adc
loop
sub
cltd
pop
pop
xchg
dec
cmp
fstpt
and
dec
fs
lock
insl
sbb
rorb
insb
in
popa
push
xor
aas
out
lea
mov
cmp
bound
mov
dec
jbe
test
fdivs
insl
daa
mov
dec
add
insb
lods
cs
pusha
jae
in
bound
ja,pn
xor
sbb
mov
inc
jbe
mov
sub
leave
out
and
mov
pop
push
sbb
pushf
and
adc
and
ret
xor
mov
or
sbb
mov
test
lds
cmp
sub
test
pop
mov
imul
sub
and
mov
mov
es
sub
jo
data16
cmp
dec
mov
stos
out
sbb
test
xor
std
add
add
test
push
roll
cwtl
test
aam
in
xor
mov
cwtl
xor
cmp
push
inc
adc
xchg
in
mov
gs
loop
daa
in
mov
sbb
notl
sub
fimull
enter
jl
test
sbb
shlb
jo
in
int3
addr16
add
xor
jnp
sub
lds
jmp
cwtl
mov
aad
dec
in
jns
lahf
bound
adc
imul
sub
add
cltd
test
push
dec
xchg
xor
add
and
test
rolb
cld
xor
orb
and
ja
pop
xchg
adc
pusha
getsec
test
lods
push
movsl
bound
add
test
and
add
imul
xchg
dec
xor
rcll
inc
or
xor
sbb
push
aam
pop
pop
sbb
scas
lods
jbe
aam
pop
aam
mov
sbb
fbld
or
out
fildll
aam
lods
sbb
or
rclb
pushf
adc
cmp
fs
ret
mov
push
add
adc
test
or
mov
orl
cmp
mov
dec
push
cmp
shll
fisttpll
dec
sub
shrl
or
cmovae
cmp
roll
ret
add
nop
mov
sbb
jb
inc
xchg
js
orb
cwtl
adc
test
mov
push
sbb
adc
push
pushf
add
in
shlb
lods
test
mov
xchg
out
mov
and
dec
jb
pushf
pop
xchg
bswap
cmp
cmp
enter
jb
cmp
test
lds
jb
or
and
pusha
aam
dec
pushf
fmull
test
sbb
test
in
mov
pushf
pushf
shlb
and
sub
mov
shll
iret
js
cmp
test
cmp
in
jmp
leave
aad
out
jl
test
sbb
jno
xchg
add
inc
and
or
pusha
and
pop
shrb
mov
add
pop
sub
in
sbb
or
jge
xor
daa
inc
mov
adcl
pop
les
popa
inc
dec
pop
pop
adc
imul
dec
mov
lea
push
push
or
xor
les
test
xchg
inc
js
dec
sub
inc
and
push
bound
lcall
orb
cmp
xchg
sbb
mov
mov
inc
insb
pop
dec
inc
dec
rolb
push
push
pushf
mov
xor
ja
imul
loope
push
leave
imul
pop
shrd
mov
shrl
jge
jns
cmpl
addr16
cmp
gs
rcl
es
inc
idivl
dec
adc
or
sbb
leave
and
adc
pusha
mull
or
push
dec
jb
movsb
aaa
or
adc
aad
das
sub
dec
ss
push
pop
sub
andl
jbe
dec
xor
lds
add
mov
scas
sub
inc
and
mov
aam
mov
sub
leave
pop
inc
shrb
fldl
mov
stc
rolb
sbb
in
pop
dec
out
invd
shll
or
mov
fsubrs
or
rolb
inc
adc
inc
jmp
fidivrl
leave
ds
dec
or
int3
pop
pcmpgtb
inc
cwtl
pop
xor
sarb
xchg
shll
mov
loope
test
shrb
xchg
sbb
xor
orb
pushf
mov
mov
adc
orb
scas
shrb
xor
xor
stc
les
mov
mov
jno
inc
movsb
test
and
fs
imul
or
es
pushf
xchg
ja
sub
xchg
rcrb
aas
xchg
pop
adc
mov
dec
jb
int3
pushf
mov
scas
popa
sub
inc
sub
aad
jo
leave
jle
sbb
subl
fwait
movsb
inc
imul
leave
xor
push
mov
sahf
mov
repnz
repnz
repz
and
scas
lods
sub
insl
mov
mov
ss
mov
das
and
rcrb
jl
mov
xchg
dec
push
nop
movsb
dec
xchg
ds
mov
imul
sub
or
pop
mov
std
jo
not
push
pop
sbb
sarl
je
jo
lock
sbb
rorb
push
jecxz
leave
dec
test
pop
enter
js
mov
in
in
or
arpl
sub
repnz
cld
sub
push
and
popf
pop
in
lods
adc
fcoml
movsb
sub
cmp
jg
insl
xchg
xchg
xchg
cmc
in
sti
leave
and
ret
fists
inc
es
in
and
inc
sub
sub
push
movsb
or
mov
push
clc
mov
into
push
mov
dec
jb
cltd
add
icebp
shr
inc
shll
or
lds
and
test
leave
cmp
test
mov
xchg
in
int3
rorb
pop
orl
lds
mov
sbb
xchg
adc
sbb
pop
mov
add
bnd
enter
cmpsb
dec
in
fstps
mov
insl
inc
sbb
sub
adc
das
lods
sub
add
pop
dec
into
inc
mov
in
dec
cmp
mov
xchg
adcb
sbb
xor
mov
out
stos
push
xchg
fcompl
fcomp
sbb
sub
push
mov
adc
nop
pop
test
dec
in
jno
jne
lret
cmp
dec
push
cmp
and
mov
adc
and
or
rcrb
pop
pop
xchg
mov
and
orl
or
push
jno
push
inc
mov
test
test
pop
add
sub
or
loope
adc
hlt
or
and
dec
mov
and
ficompl
orl
jge
sbbb
pop
addl
shrl
dec
xor
sbb
or
shlb
leave
fmuls
notl
ret
fwait
in
sbb
adc
jbe
push
cwtl
aam
cmp
or
adc
fiaddl
test
add
sub
addl
scas
push
cmp
adc
loopne
inc
sbb
push
add
fistl
jecxz
icebp
shl
jo
rcpps
scas
or
and
lods
jne
mov
outsl
fdivrs
ret
xor
std
orl
add
pop
inc
dec
ret
push
push
lods
push
jecxz
cmp
rorb
popa
and
add
dec
push
insl
mov
call
mov
je
mov
add
fstpl
dec
out
jbe
dec
cli
inc
adc
inc
cmpsb
lea
test
mov
xchg
sbb
cld
adc
scas
dec
sahf
daa
pop
test
cwtl
sahf
gs
sbb
and
mov
je
cmp
ss
movb
lcall
xor
in
imull
lret
out
mov
arpl
leave
xor
inc
gs
jo
nop
es
in
cmp
and
xchg
lds
adc
adc
mov
inc
sbb
cmp
push
xor
fistpl
mov
imul
mov
fsubl
mov
jns
push
int
mov
jnp
imul
je
lcall
enter
imul
je
xchg
inc
push
mov
xor
inc
jno
xchg
adc
fdivs
insl
ret
inc
in
or
fs
push
ret
leave
adc
adc
imul
lahf
mov
jno
cmpsb
lods
mov
dec
xor
pop
lods
adc
and
mov
icebp
movsb
rorb
mov
mov
popf
adc
clc
lea
or
pop
nop
outsb
adcl
paddq
or
stos
test
loopne
add
push
pop
add
mov
dec
ret
pop
mov
sbb
cmp
enter
outsl
mov
lods
sub
jnp
inc
dec
fwait
aaa
frstor
push
mov
cwtl
add
ljmp
adc
in
hlt
sbb
flds
mov
sub
and
fmull
imul
fnsave
xor
jb
in
sub
jecxz
nop
call
xor
es
dec
mov
shrl
out
out
flds
and
add
std
insb
fsub
pusha
mov
xchg
je
test
mov
ds
je
xchg
xor
dec
popf
and
popf
int3
sbb
fs
ficompl
mov
iret
in
fcmovnbe
sub
fisttpll
repnz
and
ja
scas
and
xchg
fcompl
or
push
push
and
dec
xorb
lret
imull
jmp
add
call
or
sarb
es
xor
arpl
ret
cmpsl
jnp
mov
dec
adc
and
lcall
je
push
or
lock
and
push
iret
scas
jmp
push
jno
pop
mov
stc
mov
mov
add
pop
repz
add
fcomps
das
addr16
push
arpl
loopne
rep
sahf
in
clc
xlat
or
inc
push
cmp
repz
mov
mov
decb
sub
fwait
int
sub
not
or
sub
add
add
fisubrs
cld
es
aas
xor
inc
orb
jnp
mov
add
adc
mov
mov
adc
or
cmp
rclb
cmpl
pushl
mov
add
into
pop
adc
test
and
push
aaa
push
iret
mov
sahf
push
mov
gs
cmp
add
bound
in
xchg
sub
mov
cwtl
push
sub
imulb
cmp
add
incl
sub
xorb
jbe
popa
and
cmpsb
mov
insb
insb
outsl
arpl
imul
pushl
push
je
arpl
jne
jb
outsb
je
add
push
add
pop
mov
adc
outsl
lcall
inc
outsl
jb
js
je
jb
gs
add
notl
outsl
add
add
add
mov
push
jne
les
inc
and
jb
sbb
fldl
dec
push
add
dec
add
addb
jbe
aaa
or
pusha
es
add
inc
xor
inc
push
add
inc
aas
push
add
pop
fidivl
and
push
insl
addl
je
and
jae
out
imul
fisttpl
fs
cmpsw
mov
push
push
or
bound
jns
push
jne
imul
or
jbe
aas
fsubrp
imul
jp
outsl
or
mov
or
gs
fstpl
addr16
and
outsl
jmp
and
add
jne
int
lret
stos
insl
sub
push
imul
and
scas
ja
cmp
pop
fdivrl
push
data16
push
mov
outsb
dec
sub
xchg
ds
jp
ss
sub
js
lcall
sbb
xchg
jecxz
push
inc
arpl
or
inc
daa
dec
jbe
js,pn
sbb
fbstp
outsb
bound
xchg
aaa
adc
sbb
jo
arpl
mov
jo
push
xor
scas
push
lds
sbb
fbld
mov
filds
push
das
jb
mov
xchg
popa
ret
fidivrl
cs
leave
push
xor
xor
nop
andb
xorl
fidivrl
jg
loope
mov
popa
sub
shll
lahf
je
inc
lds
jg
dec
and
sub
iret
fbstp
cs
fbstp
jne
jbe
jb
push
push
data16
pop
inc
sbbb
jg
xlat
xchg
scas
pop
stos
bnd
das
roll
jae
pop
sbb
ljmp
push
jo
lahf
outsl
aas
arpl
sbb
iret
arpl
sbb
mov
xlat
popl
pop
and
aaa
insl
lret
sbb
jecxz
stos
fs
imul
test
pop
rcll
dec
fbld
psubb
popa
leave
xor
add
xchg
push
jmp
mov
pop
add
adc
pop
cltd
idivb
je
scas
cmp
mov
lea
jae
subb
pop
pop
jecxz
push
and
rcrb
dec
addr16
imul
add
add
js
and
enter
enter
sub
pop
mov
in
enter
sub
in
mov
and
jmp
sbb
jb
push
ljmp
and
xchg
and
fdivrs
jns
jp
popa
or
cmp
lcall
lock
add
add
jp
fwait
sbb
out
sub
push
push
mov
sbb
fcmovne
or
pop
ja
pop
mov
pop
mov
imul
arpl
fidivl
push
out
mov
rcrl
sbb
in
cmp
push
xor
jbe
negb
and
jns
add
push
dec
insb
xchg
das
das
and
adc
jbe
ja
or
dec
inc
and
push
sbb
or
dec
inc
jmp
stos
out
adc
je
dec
idivl
and
inc
mov
js
andl
mov
clc
adc
mov
daa
outsl
dec
xor
inc
mov
and
pop
pop
divl
iret
jns
out
out
pushf
fidivs
iret
and
ss
arpl
pop
js
cmp
push
and
outsl
xor
sub
pop
dec
mov
fwait
jbe
addr16
ds
imull
sbb
mov
clc
test
insl
cmp
repz
sub
fs
dec
and
jns
mov
push
das
das
jns
push
dec
push
inc
aas
testb
insl
bound
dec
outsl
jbe
dec
arpl
popa
or
jo
sub
addr16
clc
mov
xor
insb
xchg
outsb
xchg
inc
jo
imul
popa
jb
jg
bound
inc
jae
fnstsw
popa
outsb
adc
xchg
into
mov
outsb
jns
jg
iret
fdivrl
addr16
popa
je
jb
xor
push
push
gs
sbb
into
fdecstp
jnp
outsl
outsb
and
jbe
pushf
jae
dec
inc
aas
add
jge
imul
or
mov
filds
fildll
push
push
mov
push
popa
insb
jne
inc
inc
mov
outsb
mov
adc
and
and
sub
ljmp
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
test
mov
dec
rclb
mov
pop
pop
pop
pop
pop
mov
popa
sbb
jmp
fs
imul
jo
add
jbe
divb
jp
jl
jle
dec
adc
lcall
insb
adc
fs
pop
add
ret
mov
rorb
ljmp
lret
jno
icebp
repz
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
xor
outsl
das
cmp
sarb
daa
push
add
jo
xor
popa
js
addl
test
dec
pop
sbb
out
shl
rol
sub
je
lods
rcrb
add
adc
add
cld
imul
add
and
push
pop
rolb
push
push
add
xor
hlt
and
add
pusha
push
mov
or
cmp
add
sbb
sahf
mov
xchg
push
xchg
test
add
orb
into
in
fnstenv
enter
lret
jb
les
int3
push
jo
add
lds
loopne
xchg
add
mov
imul
outsb
and
push
or
and
pop
pop
pop
mov
adc
and
ss
rorb
add
cmp
lea
mov
nop
xchg
xchg
xor
dec
cs
mov
mov
mov
pop
add
xor
jmp
lret
push
pop
push
cmpsl
hlt
add
lods
push
pop
lods
mov
pop
scas
xlat
repnz
sbb
outsl
sbb
cmp
push
push
inc
fildll
rdtsc
ss
inc
pop
dec
dec
inc
dec
inc
sbb
or
push
nop
fs
je
cs
jae
hlt
jbe
dec
dec
bound
je
outsb
data16
xorb
dec
out
je
xor
push
rclb
jo
pop
lret
aad
jae
mov
outsl
js
push
inc
fdecstp
in
push
and
insl
jo
jo
and
fidivrs
xchg
shlb
aaa
insb
les
dec
imul
mov
outsl
lods
insl
cmp
dec
inc
jb
jns
out
imul
notb
mov
insb
and
mov
outsb
in
and
addr16
sarb
pusha
fsubrl
push
jbe
cld
mov
jmp
or
jb
and
daa
sbb
xchg
pusha
inc
and
pop
pusha
pop
push
jns
inc
ss
lods
jp
mov
mov
pusha
xchg
pushw
popl
cs
mov
cmp
pop
and
push
sbb
xchg
pop
daa
bound
insl
adc
dec
test
pusha
lock
push
outsb
mov
pop
pop
pop
push
push
jae
or
pop
in
cmp
cmp
sub
hlt
clc
addr16
or
mov
das
outsb
gs
mov
add
icebp
jbe
mov
in
adc
inc
push
push
push
push
dec
testl
push
jne
repnz
push
push
ret
push
lods
filds
lea
dec
dec
jge
adc
ds
jle
jb
xor
and
push
imul
mov
jg
inc
adc
adc
in
xchg
or
clc
mov
sbb
bound
push
inc
jg
loop
testb
mov
das
je
outsl
pop
loope
insb
xchg
daa
xchg
mov
ds
jnp
popw
pop
cmp
cmp
repz
fisttpl
ds
and
sub
ret
je
jl
push
addr16
jle
addr16
je
cmp
dec
add
sub
pop
adc
jnp
or
sbb
das
push
jb
call
aaa
and
push
mov
xchg
xchg
fcmovbe
mov
outsb
stos
addr16
push
fstpt
addl
adc
xor
or
pop
shll
pop
mov
int3
lock
dec
sbb
mov
xchg
inc
jo
cmp
and
push
jl
repz
add
cmp
xor
repz
sub
add
clc
add
jns
lock
out
push
push
enter
out
sahf
out
mov
mov
cwtl
xchg
nop
mov
loope
iret
repz
jl
popf
out
add
cmp
jae
pop
aas
mov
pusha
push
pop
pop
repz
repz
push
dec
dec
inc
iret
repz
inc
cmp
xor
sub
iret
repz
adc
add
call
fmul
test
push
dec
sub
call
iret
movsb
jl
push
dec
inc
sahf
int
cmp
adc
cli
cld
in
jns
out
shlb
fidivrs
out
lock
int3
stc
xchg
stc
mov
mov
jg
and
fdivrp
inc
clc
jle
mov
or
cmp
adcl
nop
adc
xlat
es
test
add
fcmovb
push
and
add
add
add
xor
rol
inc
add
loopne
add
add
add
test
pop
mov
add
jnp
outsl
add
in
pop
mov
add
fildll
jle
and
or
addb
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
mov
leave
lret
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
jmp
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
call
xchg
inc
adc
inc
test
call
push
jmp
dec
test
rclb
pop
outsb
sub
je
inc
pop
std
jns
push
shlb
outsb
push
xor
add
loope
push
dec
fidivl
jb
loop
cmpsl
push
arpl
cmp
mov
inc
insb
fs
sbb
fidivrs
jae
mov
or
jg
mov
pcmpgtw
xor
cmp
adc
push
jns
pop
add
push
xor
push
dec
inc
dec
cmovns
add
jmp
sbb
adc
sub
adc
dec
mov
inc
call
rclb
mov
popf
ret
out
xor
jnp
inc
loop
mov
ds
cmp
pusha
pop
adc
clc
lret
sbb
jb
xchg
jge
arpl
cmp
jg
cld
insl
pushl
in
fstl
mov
and
pop
jns
xchg
cmp
dec
imul
lret
add
inc
mov
dec
mov
popf
mov
sub
fwait
ss
sbb
pop
dec
sti
add
ds
xor
incb
int3
dec
dec
xor
dec
popf
lock
decl
out
dec
pushf
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
incl
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
aas
sbb
incl
mov
out
fcoml
mov
or
insb
mov
les
dec
out
leave
ljmp
orb
mov
jle
dec
mov
incl
and
repz
xor
aas
mov
pop
dec
enter
repnz
and
mov
sahf
mov
fcompp
add
pop
dec
push
dec
lds
je
dec
iret
mov
rcrl
dec
daa
data16
push
cld
xchg
fildl
sub
mov
and
jo
xchg
and
dec
cmovg
mov
dec
xchg
pop
and
jmp
adc
or
sti
es
jae
add
out
and
data16
scas
subl
adc
loopne
js
xchg
mov
pop
ret
jg
or
subb
fs
pcmpeqw
jbe
xlat
sti
or
loope
popa
daa
fistl
push
or
daa
je
or
lods
mov
push
or
add
mov
jl
loopne
lret
xchg
ret
pop
xor
sub
testb
test
jae
or
xlat
sbb
sbbl
nop
push
outsl
imul
add
jb
jae
jae
mov
jle
fs
push
push
lods
cmp
pop
sbb
and
loopne
mov
jmp
arpl
repz
out
inc
mov
pop
out
mov
push
sbb
aaa
push
mov
sub
push
hlt
lock
daa
jnp
push
mov
shll
or
ret
jecxz
push
xor
stos
jg
out
outsb
adc
add
sbb
jns
mov
xlat
jg,pn
rol
cmp
mov
cmpsl
xlat
adc
xchg
cmp
xchg
js
sub
sub
stos
aas
cmpsl
out
and
fidivs
inc
sti
out
dec
mov
pop
pop
mov
jbe
adc
dec
push
stos
imul
jo
imul
push
hlt
lahf
es
es
sti
cmp
divl
mov
sbb
cmp
out
or
push
mov
icebp
jmp
or
arpl
movsb
loopne
ret
dec
dec
jmp
cmp
fstpt
js
fdivs
dec
jp
xchg
ja
pop
jecxz
imul
mov
push
in
jno
imul
inc
mov
out
inc
fildll
lahf
out
xlat
addr16
je
adc
push
insl
aaa
insl
aas
arpl
daa
pop
arpl
je
add
daa
jne
jo
mov
push
lret
or
andl
cli
pop
je
fistps
pop
sbb
push
inc
add
jno
cmp
outsl
imul
pop
mov
push
push
sbb
mov
xchg
lret
sub
inc
sub
push
loopew
ss
scas
or
mov
sub
aas
mov
inc
aas
into
jecxz,pt
mov
mov
je
jb
xchg
push
loope
push
add
push
arpl
incl
mov
xchg
dec
popa
xchg
lock
jnp
out
sbb
addb
bound
ja
adc
fisubrs
out
sub
jnp
push
adc
aaa
mov
xchg
pop
xor
stos
test
mov
push
push
dec
outsl
push
sub
push
mov
sub
cmpsb
dec
invd
out
mov
and
mov
jne
add
dec
mov
arpl
pop
aas
dec
imul
xor
pop
inc
ljmp
jecxz
out
mov
pop
push
dec
arpl
jo
mov
roll
outsb
mov
jb
fdivs
push
sub
pop
jo
call
add
icebp
icebp
fnstsw
pop
push
stos
inc
mull
xlat
push
fcmovbe
jae
push
pop
mov
addr16
mov
and
jne
insb
pop
nop
fwait
cmp
jo,pt
lods
sti
ret
outsl
mov
inc
and
aas
jmp
pusha
adc
daa
outsl
inc
jno
sbb
inc
pop
pop
add
xlat
imull
ja
lods
loope
push
fsubl
push
inc
jnp
sbb
idivl
inc
sub
xchg
pop
inc
inc
sbb
sbb
sbb
aad
imul
inc
ss
add
test
push
and
push
loope
jl,pt
je
pop
pop
mov
clc
je
aas
insb
aas
pop
lds
scas
inc
bound
outsl
jo
bound
lret
ja
push
sub
dec
nopl
aas
pop
pop
push
xor
mov
maskmovq
testl
inc
inc
mov
outsb
filds
mov
inc
jl
jl
jno
adc
fisttps
jl
mov
pop
sbb
inc
arpl
lret
sbb
lea
fisubs
bound
adc
sbb
mov
scas
aaa
clc
mov
jl,pn
cmp
mov
jns
jae
bound
out
outsb
jl
push
jecxz
out
push
jecxz
pop
jl
pop
jecxz
out
or
sbb
js
mov
jmp
es
inc
mov
imul
sarl
adc
arpl
dec
sbb
sbb
xchg
out
xor
xchg
imul
rolb
jo
fistps
roll
vmread
add
jmp
add
jl
mov
scas
sub
andb
jl
xchg
sbb
sbb
ret
cmp
push
bnd
out
or
es
shl
arpl
imul
sbb
dec
ljmp
mov
mov
loopne
pusha
roll
sbb
mov
lahf
ficomps
daa
pop
testl
pop
nop
lret
mull
mov
inc
adc
daa
push
sub
stos
mov
mov
aaa
cmp
push
mov
insb
das
out
cli
mov
stos
pop
iret
xorl
cld
mov
divl
or
add
insb
mov
add
xor
jbe
aas
popa
popl
scas
aaa
aaa
movswl
das
addr16
sti
es
cmp
js
add
jno
fists
cmp
mov
loop
adc
push
sub
dec
xor
das
shlb
insb
or
dec
jp
pop
ds
jbe
add
add
pop
jp
pusha
add
inc
inc
gs
rcll
sbb
imul
es
inc
inc
push
push
mov
inc
cmp
pop
outsb
jae,pn
in
mov
les
mov
fadds
sahf
ja
sahf
jg
test
adc
imulb
rcrl
dec
inc
push
mov
cltd
dec
aaa
pop
fldt
cld
dec
pop
and
push
rcrl
push
and
push
xor
repz
mov
mov
subl
jle
mov
iret
repz
mov
popf
fsubrl
cmp
pop
imull
ja
dec
popf
push
pusha
aas
pop
jae
data16
popa
outsl
jo
jns
rcrl
shl
inc
xor
push
jecxz
ret
mov
cmpsb
push
and
arpl
out
fwait
mov
xchg
add
or
aas
out
push
and
xchg
and
loop
arpl
push
gs
insl
pusha
push
popa
jne
or
mov
imul
bound
xor
mov
xchg
sub
and
mov
nop
jbe
add
push
fwait
out
fidivs
mull
iret
repz
push
subb
lahf
push
and
fnstcw
popa
cs
shlb
call
jle
push
mov
out
dec
push
cmp
loopne
pop
pop
xor
js
icebp
aad
jb
jno
je
cmp
fimuls
jo
jb
filds
lods
push
sahf
jb
jb
and
cmp
jae
sbb
and
and
idiv
pop
cmp
and
arpl
xor
cmp
fs
inc
sbb
mov
jl
inc
loop
mov
in
jne
je
ss
cmp
fildl
sbb
imul
sbb
jae
data16
aam
imul
adc
push
movsl
mov
xchg
aas
push
mov
add
pop
jne
xchg
sbb
cmpsl
sub
arpl
in
sub
scas
ja
inc
scas
fdivl
sldt
mov
outsl
js
rcrb
mov
scas
inc
subl
inc
dec
stos
pop
add
or
inc
cli
inc
or
mov
nop
test
insb
push
and
test
aaa
cmpsl
das
and
xor
add
xorb
cli
push
adc
roll
mov
pop
outsb
mov
sub
fcompl
push
add
sbb
ja
xlat
inc
sbb
outsb
cmc
push
jecxz
push
ss
xchg
or
push
and
imul
push
add
pop
pop
mov
mov
ja
icebp
out
and
inc
fs
bound
cmpsb
je
cmp
and
inc
or
ss
imul
push
sti
dec
add
mov
cmp
cmp
test
add
jo
pop
dec
jnp
inc
or
inc
iret
ret
cmpsb
dec
mov
test
sbb
or
ljmp
adc
mov
cli
test
lcall
orl
lods
mov
sti
dec
sub
outsb
adcb
outsl
shlb
pop
pop
repz
sbb
iret
inc
bound
adcl
and
pop
inc
add
fisubrl
push
shll
mov
add
pop
andb
mov
je
pop
mov
sbb
and
xor
mov
add
mov
stos
sub
aaa
frstor
xor
dec
sub
add
packssdw
imul
jp
xchg
imulb
inc
jp
arpl
sbb
add
dec
bound
bound
sbb
and
arpl
shlb
nop
push
inc
outsl
ja
jg
dec
jb
fs
in
push
dec
int3
js
jbe
bound
inc
sahf
iret
push
popa
prefetcht0
jbe
fisubrs
sbb
int3
fwait
inc
and
lret
or
adc
out
ja
lods
mov
add
inc
fwait
mov
imul
xor
adc
add
aam
inc
sbb
aas
push
dec
push
dec
out
inc
mov
or
mov
addr16
movsb
movsl
scas
out
sti
pop
mov
das
pop
ds
or
dec
mov
hlt
push
inc
jg
push
xor
mov
imul
data16
jne
add
adc
test
xchg
stos
imul
pop
addr16
mov
xor
outsl
jo
fwait
add
xorb
bound
push
dec
dec
dec
jp
xchg
out
cmp
dec
cmp
push
lahf
push
lods
adc
xchg
xchg
hlt
dec
imul
cmp
sarl
mov
push
or
lods
js
or
mull
inc
cmp
xchg
add
fistl
loop
cmpsl
push
cs
push
mov
pop
and
mov
ss
xchg
cmp
fwait
ljmp
inc
imul
outsb
jae
sbb
in
sub
inc
or
mov
push
inc
dec
lods
add
mov
push
pop
push
cmpsb
aas
loopne
stos
push
roll
test
jecxz
out
and
pop
call
fldpi
fisttps
data16
adc
xor
lods
cmp
imul
jecxz
imul
xor
cmpsl
dec
and
adcl
mov
lds
outsl
rorb
orb
into
sbb
or
push
and
test
arpl
scas
test
imul
out
cmp
mov
daa
mov
push
outsb
dec
bound
arpl
pop
cmp
dec
pop
cmpsl
mov
ja
ljmp
out
push
stos
jbe
mov
pop
sti
pop
cmpsl
adc
cmp
pusha
jns
sub
push
pop
ss
adc
and
outsl
push
notl
jb
out
push
out
ret
push
inc
arpl
test
mov
xor
add
add
jmp
xor
je
into
fcomps
lahf
dec
xor
fdiv
or
es
fsubp
rolb
outsl
inc
outsl
sub
dec
pop
imul
cmpsl
stos
test
iret
lahf
sub
or
pop
xlat
sbb
je
mov
imul
inc
rclb
fsubs
mov
dec
dec
sub
pop
adc
inc
xchg
arpl
stos
xlat
cmp
popaw
push
xchg
aaa
test
clc
and
mov
add
arpl
imul
sbb
mov
push
xchg
mov
cmpsl
pop
push
inc
mov
add
aaa
xor
es
xor
ucomiss
outsl
push
xor
movl
xor
dec
push
push
mov
popa
ss
add
js
push
dec
mov
push
scas
push
call
push
jg
js
cmpsb
sbb
outsl
stos
lock
lods
adc
lahf
pop
pop
push
test
push
sahf
xor
xor
jecxz
es
cmp
movsl
dec
outsl
pop
pop
rolb
and
inc
pushf
mov
add
or
mov
and
lcall
rclb
out
adc
adc
add
jecxz
ja
pop
pop
xor
test
stos
scas
shrl
aas
ja
test
cmp
jae
or
mov
arpl
out
pop
inc
movsb
dec
adc
adc
insl
rcrb
sub
adc
xchg
scas
mov
cs
mov
loopne
lret
sub
sub
push
mov
pusha
in
imul
dec
xor
jb
hlt
loop
jo
scas
push
push
mov
or
minps
aas
push
andl
jo
push
jle
dec
mov
adcb
repz
xlat
mov
mov
adc
loopew
push
push
mull
inc
mov
and
outsl
aas
outsl
iret
jp
test
outsl
and
jae
rcrb
je
jnp
ret
sbb
sub
scas
cmp
inc
xchg
and
mov
incl
add
sub
inc
imull
adc
pop
cmp
repz
and
cmp
repz
andl
mov
cltd
or
push
push
sahf
xchg
dec
test
push
add
ljmp
fisttpll
mov
add
mul
jns
ss
int
clc
pop
sub
xor
inc
mov
mov
jnp
mov
mov
popa
xchg
add
mov
push
shrb
ret
sub
shlb
data16
or
adc
insl
jo
stc
pop
add
xchg
rclb
ss
push
dec
str
int3
data16
add
inc
stc
das
fstpt
rcll
out
push
loopne
sahf
addr16
inc
popa
mov
ret
std
push
dec
push
push
rep
mov
mov
aam
add
add
popf
addr16
pop
jae
pop
sbb
js
cmp
testl
push
rorl
lds
sbb
adc
mov
js
mov
push
es
pop
dec
pop
bound
xchg
mov
sub
mov
into
mov
or
jp
xor
xchg
bound
and
pop
out
cmpl
sti
push
iret
jae
adc
sarl
lods
dec
imul
dec
sub
addb
lea
popa
pusha
pop
ret
add
das
add
es
pop
aas
sub
xchg
jmp
repz
arpl
cmp
shrb
sub
shll
out
mov
rol
outsl
out
adc
mov
add
pop
lret
aas
sti
mov
das
sbb
pop
cmp
loopne
mov
repz
push
scas
shlb
xor
std
sub
das
and
add
mov
push
shr
leave
dec
adc
adc
pop
mov
iret
test
imul
idivl
aaa
jbe
fimull
andb
jg
jecxz
rcl
sarl
shll
mov
cmp
mov
xor
push
clc
jle
jnp
jge
addr16
in
sbbb
xor
and
fs
push
faddl
add
add
outsb
adc
daa
daa
dec
xchg
jle
popl
outsl
mov
pop
pop
pop
and
or
sub
cs
adc
add
loop
sbb
mov
arpl
bound
mov
ret
pusha
mov
in
xchg
idivb
adc
dec
mov
push
push
into
push
dec
xorl
call
sub
and
or
sub
xchg
scas
mov
stos
sbb
pop
je
scas
xchg
stos
in
sarb
xchg
pushf
dec
stos
fmuls
xor
in
mov
stos
in
imul
inc
test
movsb
leave
push
jb
push
add
lods
xchg
push
cmpsl
mov
sub
aad
cmpsl
or
mov
stos
stos
in
adc
mov
movsl
movsl
adc
push
jb
inc
movsb
shlb
stos
push
fbld
mov
push
push
stos
in
mov
mov
fs
jmp
cmp
stos
mov
jb
pushf
lahf
call
scas
mov
sahf
test
xchg
pushf
push
sahf
pop
lods
push
repnz
fistps
cwtl
leave
cltd
mov
jl
adc
out
pop
and
cmpsb
jg
aas
inc
sbb
or
xor
pop
jo
bound
das
fisttpll
ret
dec
inc
call
cmp
mov
mov
fistl
dec
subl
iret
add
adcb
test
xor
push
ffree
fisubrl
das
pop
push
test
mov
je
dec
pop
inc
and
mov
mov
push
or
ds
dec
sbb
pop
sbb
fldt
push
cmpsl
addl
inc
aaa
mov
aas
mov
orl
setae
push
adc
push
inc
xlat
push
and
sbb
xchg
dec
notb
rcl
das
addr16
xchg
sbb
mov
pop
or
int3
fs
push
scas
addr16
pusha
aad
xchg
fildll
inc
scas
jg
outsl
inc
subl
inc
adc
dec
loopne
jecxz
add
rclb
sub
push
jb
jne
push
mov
loop
adc
mov
sbb
lods
xchg
das
out
pop
bound
mov
filds
jmp
sbb
aaa
outsl
adc
mov
orb
ss
outsl
jecxz
xchg
xor
xchg
dec
pop
or
push
fwait
pop
pop
and
aas
outsl
incl
popa
lods
jbe
mov
pop
mov
rolb
or
out
mov
add
aaa
scas
hlt
dec
sbb
pop
iret
inc
das
ljmp
shll
cmp
dec
popa
adcl
jbe
inc
xchg
cli
adcb
jg
jo
mov
jae
and
loopne
mov
xlat
testl
fisttpl
or
ss
and
rcr
je
inc
daa
sbb
jnp
pop
or
or
sub
inc
and
xorl
xchg
push
inc
add
mov
inc
adcl
cltd
pop
ret
addr16
cmp
inc
xor
pop
jne
addr16
sbb
es
ja
ss
or
je
push
fidivs
dec
sub
inc
fs
inc
or
or
or
lea
jae
jns
divl
les
in
ss
dec
dec
bound
jae
shrl
cwtl
daa
js
outsl
dec
js
sub
popf
xor
divb
xchg
cmp
imul
and
or
lret
sub
iret
and
push
mov
pop
mov
mov
pop
sub
repz
or
and
jns
out
bound
cmp
xchg
ret
cmpsb
repnz
cmp
adc
mov
lea
sahf
mov
lret
pop
pop
and
cmpsl
dec
mov
insb
dec
cmpb
adc
or
jmp
sub
insb
add
xchg
pop
jb
inc
pusha
add
sub
add
mov
dec
push
lcall
scas
outsl
or
pop
insb
adc
pop
test
push
inc
daa
insb
dec
adcb
sub
orl
pop
push
aas
cmp
call
rdmsr
cs
test
sub
adc
jnp
xor
push
xchg
dec
cmovno
das
insb
sub
or
xlat
cmp
loop
xor
and
sarb
xor
lods
shr
mov
lret
mov
add
fiadds
testl
ja
push
push
nop
jbe
fwait
vunpckhps
xchg
push
jae
lea
dec
fistpll
push
adc
sub
mov
pop
pushf
dec
fwait
mov
sbb
mov
xchg
xchg
test
and
mov
ja
dec
es
jnp,pt
call
cs
test
push
rorb
xor
push
ret
out
es
adc
and
xor
insl
xchg
repnz
jnp
mov
cmp
inc
pop
repz
mov
jae
fs
dec
sub
pop
pop
fidivs
jmp
jecxz
pop
negl
inc
out
shlb
or
inc
or
jle
js
xor
scas
xchg
repz
cmp
xchg
cmp
or
out
mov
bnd
ss
push
cmp
push
push
bound
xor
cmp
iret
inc
xor
pop
xchg
lret
jb
sbb
push
cmpsb
xchg
ja
hlt
loope
xor
outsb
sbbl
mov
mov
xor
mov
fidivrs
lcall
out
test
mov
mov
push
or
cmp
mov
lahf
push
out
push
push
mov
popf
negl
js
inc
xor
mov
fiadds
mov
push
es
loope
out
ss
outsb
pop
push
push
xor
dec
lock
inc
pop
dec
es
das
sbb
inc
fbld
data16
inc
pop
push
sysexit
mov
cs
sahf
lret
sahf
push
outsl
push
push
cli
push
push
insl
sub
fidivrs
scas
push
insl
mov
inc
ja,pn
xor
adc
jp,pt
jp
ljmp
xchg
ds
fiaddl
jg
dec
js
push
jl
xor
das
imul
js
outsl
pop
outsl
dec
xor
js
push
into
xor
and
and
sbb
pop
sub
pop
push
fdivrs
loop
push
mov
push
test
mov
outsl
dec
loopne
mov
ret
inc
iret
jnp
cmp
dec
jle
and
shrl
xor
sbb
arpl
inc
inc
fcomi
pop
shrb
pop
inc
bound
ja
mov
xor
stc
mov
and
dec
mov
add
fwait
test
xchg
dec
sbb
jmp
push
inc
and
jmp
insb
cmpl
xchg
inc
shll
inc
inc
xchg
mov
sbb
sahf
xor
arpl
adc
popa
add
scas
imul
repz
xor
lahf
push
addb
dec
popa
jge
loopne
addr16
ja
pop
fwait
lahf
inc
mov
rcrl
fwait
jmp
shll
js
sub
out
outsb
mov
push
mov
cmp
xchg
mov
sbb
push
addr16
pop
or
push
push
lret
sub
mov
loopne
dec
inc
fisubrs
fs
outsl
add
add
inc
adc
mul
adc
xor
ljmp
aaa
pop
adc
cmpsl
imul
push
and
push
fstl
out
dec
cmpsb
xor
out
andl
cli
dec
imul
addr16
arpl
push
mov
xor
mov
jne
loopne
pop
ja
repz
mov
pop
outsb
out
loop
arpl
xor
mov
repz
push
cmpsl
adc
xchg
iret
xchg
out
add
nop
add
pop
repnz
push
mov
jne
jo
arpl
xor
jg
push
cs
pop
ja
xor
xor
push
push
or
out
inc
adc
mov
push
inc
mov
push
lea
jae
adc
adc
jae
mov
xlat
mov
in
push
pop
stos
add
adcl
add
sub
mov
das
lods
mov
pop
shlb
ret
stos
lock
xlat
jmp
js
sbb
sub
mov
sub
jg
inc
pop
inc
cmpsl
add
jmp
sbbl
es
push
fisubl
imul
sti
lods
ljmp
push
insl
push
mov
and
push
inc
fwait
iret
dec
cmp
adc
lock
sti
outsl
popa
fldt
and
xor
mov
ret
mov
xchg
test
inc
pop
mov
bound
and
push
fst
adc
iret
inc
xchg
outsb
jecxz
pop
dec
push
imul
ret
cmp
mov
out
fildll
adc
es
outsb
dec
arpl
cmp
jae
daa
push
sbb
xor
pop
arpl
outsl
cmp
imul
das
repz
outsl
iret
xchg
or
aaa
sub
cmp
mov
mov
jmp
jb
push
ds
push
cmovs
dec
xlat
jle
add
mov
popl
push
dec
add
das
add
data16
cmp
sub
testb
lock
aam
daa
lahf
sub
or
hlt
add
iret
aad
ja
outsb
int
fs
mov
adc
mov
push
shlb
test
mov
dec
mov
adc
adc
jmp
xchg
pop
nop
and
mov
adc
iret
adc
and
mov
add
adc
outsl
inc
dec
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
fsin
filds
cli
mov
sub
sub
mov
mov
sbb
mov
ds
pop
sbb
lahf
in
pop
subb
mov
dec
fsubs
cmc
jmp
sbb
mov
pop
dec
xchg
add
mov
push
pop
adc
jb
mov
pop
push
and
outsb
xor
push
in
or
imul
pop
test
jne
add
or
lods
fbstp
cmpsl
and
xchg
leave
add
push
or
dec
xchg
xchg
dec
cmp
push
inc
sub
sub
adc
vmwrite
je
xor
xor
dec
dec
jb
cmp
inc
les
pop
xor
outsl
popf
addb
inc
or
xor
lahf
adc
pop
inc
mov
js
decl
aaa
call
inc
dec
test
xchg
roll
mov
mov
call
aad
imul
pop
in
cs
ss
cmp
sub
movsl
jnp
inc
adc
inc
push
add
cmp
push
inc
addr16
leave
js
jmp
inc
ss
cmp
loope
das
dec
cmp
lock
inc
popa
testl
test
ja
clc
incl
xchg
imul
cmp
popa
outsb
imul
cwtl
adc
inc
das
and
ficoms
mov
fwait
add
mov
add
aaa
push
add
push
in
inc
sbb
jae
xlat
or
movsl
add
cmp
ret
mov
ret
pop
pop
lods
lea
inc
dec
push
push
scas
mov
mov
mov
pop
xlat
bswap
insl
dec
movsl
mov
xor
outsb
packuswb
mov
sub
pop
iret
mov
push
or
cli
ret
sti
cmpsb
push
jp
jne
inc
call
lock
push
mov
adc
repz
mov
and
out
mov
fimull
xor
sarl
lahf
fimull
mov
test
inc
jmp
dec
pop
ja
pop
aam
push
mov
aaa
bound
pop
xor
mov
addl
dec
sub
lret
pop
mov
inc
outsl
ss
push
pop
or
dec
inc
arpl
stc
add
and
dec
lret
sub
push
in
enter
es
cld
push
dec
adcl
negl
jb
lock
fs
mov
pop
test
cltd
out
mov
inc
mov
mov
inc
sahf
dec
push
xchg
cmpsl
mov
push
add
out
jbe
push
jbe
es
ret
les
add
sbb
nop
add
iret
fstpt
jae
push
and
mov
and
movntq
daa
fdivrl
js
aaa
pop
pop
rorl
pushf
in
andb
out
js
add
push
xor
pop
divl
mov
lahf
cmpsb
mov
fwait
int
inc
and
ja
push
pop
mov
loopne
xor
sub
sbb
cmp
out
inc
addr16
or
pop
jns
fdivp
jns
pop
sbb
fnstenvs
sub
idivl
aaa
iret
imul
daa
dec
xchg
fiadds
cwtl
sub
sti
popa
jns
mov
cmc
jle
jns
inc
ss
outsl
pop
inc
outsl
sahf
cmpsl
mov
js
push
sahf
mov
jl
mov
clc
inc
or
mov
loop
scas
aaa
les
clc
mov
test
aaa
ljmp
adc
jnp
roll
repnz
aaa
ss
out
jnp
cmp
adcb
lret
outsl
mov
push
sbb
mov
push
push
and
adc
dec
mov
mov
xor
push
pop
ss
jnp
inc
mov
push
jo
xor
cmp
rep
xor
push
lea
repz
add
push
jmp
ds
ss
and
rcrl
fisubrs
push
jo
jns
in
cmp
cmp
movsb
repz
out
clc
cmp
cmp
iret
subb
iret
out
mov
cmp
cmp
repz
jno
test
fidivrl
int
or
add
or
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
adc
aaa
mov
add
mov
iret
testb
int
mov
leave
loop
and
push
test
mov
mov
je
jg
dec
mov
int3
push
and
pop
imul
sbb
enter
aas
xchg
pop
enter
repnz
iret
pusha
or
in
pop
adc
add
and
xlat
insb
aaa
test
inc
imul
xor
test
mov
nop
or
push
add
js
orl
in
daa
cld
or
shlb
outsb
outsb
lcall
push
push
js
xor
imul
insl
gs
cmp
and
inc
sub
dec
cmp
push
push
imul
push
stos
imul
mov
cmpsl
loope
add
aaa
sbb
cli
inc
outsl
aam
push
popa
or
push
pusha
or
jg
sbb
test
inc
popw
dec
mov
push
enter
ficoml
cs
decl
mov
fwait
mov
aad
cmpsl
push
cmp
push
pop
sub
inc
sub
mov
mov
pop
mov
xlat
out
push
hlt
lock
addr16
mov
out
push
cs
aaa
outsb
loopne
divb
or
pop
std
adc
outsl
xlat
xchg
pop
pop
daa
mov
inc
rcrb
test
dec
dec
jno
push
mov
pop
inc
push
mov
mov
mov
mov
in
mov
fmuls
dec
test
fs
jecxz
popa
adc
imul
arpl
xor
bsr
dec
sub
jbe
push
cmp
mov
xchg
cmp
xor
mov
fisttpl
bound
dec
lahf
cmp
incl
or
fs
jo
xor
scas
mov
sbb
outsb
push
jnp
rclb
movsl
pop
rol
aas
adc
push
and
xor
scas
inc
js
sub
das
jb
addr16
add
add
lahf
in
stos
add
xor
push
cmp
lods
adc
jo
xlat
dec
sub
aas
sbb
lahf
or
add
dec
add
data16
gs
push
sbb
or
add
xorl
inc
xchg
or
add
mov
cltd
mov
pop
pop
ja
aam
addr16
rcr
mov
sub
pop
aas
jae
mov
andb
push
stos
mov
das
sbb
adc
push
lods
and
emms
imul
xlat
das
pusha
mov
mov
jmp
mov
or
mov
pop
cmp
push
btrl
adcl
mov
imul
mov
and
mov
mov
ja
das
mull
mov
inc
das
iret
adc
dec
xchg
jb
sbb
insb
das
pop
dec
mov
sub
add
pop
das
mov
bound
pop
sbb
loopne
inc
dec
push
pop
inc
jecxz
push
aad
pop
jecxz
test
push
fistpl
int3
or
and
lock
jp
mov
jbe
inc
adc
push
xorl
sbb
and
push
add
push
push
sub
aas
je
mov
adcl
add
push
cmpsl
mov
subl
inc
mov
lds
test
rcll
aas
add
inc
and
dec
add
outsl
bound
sbbb
mov
jmp
jno
ja
add
jo
xor
jg
faddp
ficoml
cmpsb
inc
inc
push
inc
mov
sbb
cmp
dec
pop
mov
inc
cmp
mov
mov
imul
dec
inc
jge
out
imul
data16
xlat
xchg
sbb
push
pop
or
jno
addr16
ss
inc
pop
xor
mov
lahf
inc
dec
mov
xor
dec
add
fdivs
mov
cmpsl
push
jmp
lods
and
jg
xor
fldl
mov
testl
pop
pop
inc
lret
push
test
jg
add
add
jecxz
ret
ja
push
in
das
adc
and
lret
or
es
insl
jo
je
add
std
lea
ds
jo
jae
daa
pop
mov
out
jno
outsl
xor
push
jg
inc
or
stos
pop
xchg
adc
insb
pop
sub
pop
or
pop
cmpsb
jns
je
jne
or
bound
mov
xor
das
dec
out
mov
cmpb
dec
jae
lret
and
popa
push
pop
sahf
movb
mov
mov
adc
pop
push
inc
bound
imul
dec
cmp
push
sbb
scas
pop
inc
add
inc
sti
inc
sbb
jmp
shll
lock
push
pop
test
insl
testl
cmpsl
pop
stos
push
pop
mov
pop
daa
ret
sbbl
jp
and
in
or
push
pop
adc
pop
sub
pop
cltd
inc
add
push
add
push
jmp
push
add
mov
dec
and
xchg
ljmp
dec
fwait
add
or
les
aam
jns
jb
add
push
or
adcl
push
scas
push
inc
outsl
in
into
mov
or
aaa
inc
insb
fsubrs
cmc
push
cmc
sysret
daa
lahf
or
sub
push
jecxz
pop
sbb
jb
out
jnp
lock
push
add
and
outsl
inc
je
cmp
push
dec
inc
dec
push
xchg
add
add
rcll
pop
mov
jg
xor
mov
jae
inc
fwait
add
pop
add
push
add
add
adc
inc
incl
and
fnstsw
and
pop
outsl
mov
out
fidivl
and
ds
das
sbb
rorb
fldcw
daa
daa
push
and
lcall
inc
inc
inc
push
inc
pop
and
or
pop
xchg
cmp
cwtl
scas
sbb
mov
mov
push
and
mov
mov
adc
mov
lods
pop
gs
add
ds
push
popw
rcrb
aaa
vhaddps
int3
adc
fsubs
adc
inc
push
jg
fwait
dec
mov
lock
jl
ret
push
add
sbb
in
and
add
outsb
add
mov
push
pop
sub
test
pusha
mov
lahf
in
cmp
jbe
lret
push
dec
push
sbb
mov
sahf
scas
nop
scas
gs
dec
push
sbb
inc
das
mov
add
movl
clc
ficomps
add
push
mov
mov
mov
out
arpl
cmp
push
shll
mov
incl
in
pop
sub
daa
and
sbb
dec
or
fcompp
or
out
pushf
push
jg
push
or
jb
ja
out
push
imul
inc
outsl
arpl
popa
clc
fistpl
sbb
je
and
and
arpl
push
cmp
cmp
je
add
or
jns
movsb
je
loopne
pop
and
popa
stos
and
xchg
add
jno
or
sub
push
and
in
sarb
loop
dec
inc
mov
int3
pop
pop
and
push
fsubrs
pusha
push
js
outsl
fs
lods
pop
in
jle
insl
jo
jns
iret
inc
mov
add
outsl
insl
scas
inc
mov
jne
pop
or
loop
pop
fiadds
les
lret
xchg
addr16
cmp
and
pop
inc
je
bound
aaa
mov
dec
inc
insb
pop
jbe
ffreep
xchg
mov
inc
inc
into
jno
mov
aaa
xor
in
cmp
push
sahf
dec
sub
or
insb
adc
shll
and
or
fucomip
xchg
dec
inc
xadd
sbb
inc
cmovo
add
inc
mov
cmp
icebp
jbe
ds
jo
maxps
loopne
ret
xor
jp
inc
inc
cmpxchg
add
or
jns
sti
ss
add
sbbb
sbb
cmp
aas
add
pusha
xor
adc
mov
inc
hlt
inc
sbb
mov
push
adc
add
hlt
into
pop
xchg
dec
mov
insl
adc
sahf
pop
inc
repz
pop
push
daa
xchg
mov
daa
xorb
pop
cwtl
xchg
add
xchg
xchg
lods
call
daa
xchg
outsl
clc
push
out
sahf
int
xor
xor
in
pop
jnp
adc
int3
scas
fbld
aam
shl
push
ss
pop
xchg
ss
mov
mov
jbe
add
out
inc
pop
leave
pop
jbe
and
inc
fisubl
enter
enter
das
outsl
xchg
add
adc
sbb
xchg
bound
adc
cmpsl
add
nop
xchg
out
push
xchg
sub
es
lahf
sbb
jecxz
xchg
test
dec
cwtl
loopne
add
cwtl
cmp
sbbl
cmp
jnp
jb
push
and
dec
push
outsl
xchg
xchg
jl
mov
xchg
jl
sbb
mov
xchg
fdivrs
daa
enter
test
cltd
adc
out
sub
inc
daa
inc
rcrb
outsl
xchg
xchg
outsl
pop
daa
adc
xchg
mov
insb
ds
pop
pop
jb
and
movsb
mov
add
xchg
rcrb
cmpsb
insl
outsl
xchg
jl
or
pop
adc
dec
add
cs
orb
cs
int3
lods
aas
movsb
and
outsb
mov
add
sub
outsl
mov
nop
dec
or
jbe
les
adc
dec
dec
loopne
cld
rol
or
adc
inc
mov
push
push
mov
inc
or
and
bound
fwait
jl
mov
shl
xor
out
enter
ja
negb
aas
adc
pushf
sub
push
inc
aas
addr16
cmp
cmp
mov
xchg
sub
mov
mov
int3
rolb
aam
mov
xlat
cltd
popf
add
dec
and
and
fwait
mov
jmp
scas
jns
mov
xlat
dec
pusha
mov
pushf
aas
push
cmp
int3
pop
ret
sahf
int
popf
faddl
in
mov
push
dec
add
int3
rcrb
sahf
sub
cmp
rcrb
hlt
insb
mov
mov
cmp
in
insb
lcall
int3
fmull
cs
lahf
mov
filds
push
jns
imul
in
sahf
or
in
nop
or
nop
or
mov
inc
lods
sar
test
pop
mov
test
in
add
cld
jle
out
fcoms
pusha
je
xlat
pop
add
fwait
out
sahf
sub
cmpb
or
push
clc
mov
notb
clc
sahf
mov
cmpsl
pop
jo
nop
or
js
in
movsl
jg
movsb
mov
jns
lods
pusha
movsb
and
test
hlt
jb
fstpt
mov
lods
add
testb
hlt
pushf
adc
cmpsl
mov
jns
pop
insb
test
jae
dec
mov
jg
cmp
repz
enter
scas
dec
or
mov
lock
and
enter
iret
xchg
stos
ja
jle
das
cmpsl
push
fs
sub
lahf
nop
das
ja
inc
sahf
pop
lahf
mov
mov
fwait
or
call
lea
sti
test
pop
movsb
xor
movsb
add
dec
sahf
inc
push
dec
lahf
test
mov
lahf
inc
test
movsb
inc
test
aam
dec
push
out
movsb
in
clc
orps
cmpsl
enter
aam
movsl
sub
cmp
dec
addr16
cmpsl
cmp
mov
jg
sarb
iret
test
pop
xor
cs
daa
shlb
in
pop
push
cmpsl
shlb
dec
out
test
cmpsb
xor
dec
insl
dec
xor
cmpsl
jg
mov
js
cmpsb
mov
cwtl
imul
out
jae
iret
add
add
push
inc
inc
pop
sub
enter
cwtl
movsl
mov
sub
inc
aas
push
cmpsl
jae
in
and
push
icebp
pop
dec
jo
xchg
aas
pop
enter
cmpsl
jo
push
cmp
repnz
aam
aas
pop
jb
sub
cmpsl
les
ds
test
push
cmp
cmpb
lahf
repnz
enter
js
test
mov
icebp
dec
add
loopne
out
enter
mov
or
add
test
and
lahf
dec
inc
mov
cltd
mov
lahf
cmp
inc
and
test
push
jae
pop
addb
push
mov
lahf
push
or
inc
mov
and
shll
jg
mov
push
inc
sahf
and
ja
cs
inc
loopne
mov
or
sbb
repnz
nop
movsb
mov
pusha
sub
add
or
jbe
lahf
add
mov
push
inc
lock
fistl
jg
pusha
pushf
and
lahf
pusha
inc
repnz
nop
xchg
ja
mov
je
xor
xchg
inc
or
in
rolb
movsl
out
mov
mov
sub
ja
iret
mov
cltd
lock
inc
lods
mov
or
push
add
nop
mov
xchg
ss
hlt
dec
add
in
jbe
inc
arpl
out
popf
lods
inc
push
pop
cmpsb
test
insl
dec
jo
jg
adcb
rorl
add
fbstp
loopne
nop
out
fsubr
cld
or
push
inc
fmuls
out
inc
fdivl
inc
scas
cmp
add
aad
faddl
dec
test
scas
lahf
mov
mov
mov
push
mov
enter
jl
inc
rclb
enter
lahf
xor
shlb
fs
push
scas
and
scas
inc
lahf
push
ja
enter
jl
sbbb
nop
jl
jae
iret
test
pop
enter
ja
ss
aam
adc
jb
xor
jmp
lahf
movsb
daa
pusha
lahf
jo
nop
or
xchg
dec
lahf
pusha
jns
in
xor
rcl
cs
or
pusha
xchg
mov
inc
pop
mov
adc
xchg
outsl
aas
dec
mov
addr16
lods
mov
pop
cwtl
aas
sahf
mov
popl
inc
out
fsubr
mov
inc
pop
enter
xchg
enter
dec
in
data16
mov
push
xor
pop
xchg
outsl
add
fcom
jmp
addb
hlt
jmp
add
enter
jae
in
inc
add
enter
fcmovu
jnp
mov
push
sub
pop
repz
addr16
daa
in
idivb
js
add
jo
bound
xchg
jmp
inc
xlat
mov
inc
sub
fcomi
cmp
mov
fcoms
mov
je
dec
mov
enter
inc
jl
insb
pop
dec
sbb
outsb
jl
xchg
lds
dec
dec
dec
movsb
pop
push
nop
cmpsl
or
dec
jo
scas
movsb
ss
test
pop
xchg
ss
arpl
mov
push
and
adc
ret
aas
pop
adc
ret
lahf
jns
cs
ja
daa
scas
call
mov
dec
inc
in
scas
in
cmp
in
scas
xor
dec
scas
in
and
icebp
xchg
push
pop
add
cmp
sbb
mov
sti
es
cwtl
ss
es
insb
fisubrs
adc
jge
jns
test
jo
xchg
out
enter
mov
fsubp
mov
je
int
insb
sahf
cmp
mov
and
or
setno
push
mov
or
dec
adc
xchg
mov
dec
nop
out
in
xchg
inc
leave
xorb
add
mov
stos
cmp
lahf
or
repz
mov
push
dec
and
out
jo
add
enter
pop
leave
in
add
mov
add
mov
pop
in
ja
pushl
cmp
hlt
jg
pusha
cmp
adc
aaa
and
fs
push
leave
add
lods
push
inc
inc
mov
inc
mov
outsl
inc
outsb
add
inc
and
inc
mov
adc
outsl
add
mov
fistpll
mov
cmp
lods
add
push
mov
xor
ljmp
or
xor
push
mov
mov
lods
and
push
aas
aaa
fisttps
sahf
ja
fs
lods
je
scas
add
or
outsb
mov
out
push
jmp
sub
xchg
out
mov
fldcw
fildll
dec
testl
ret
fmul
out
sti
cmpsb
dec
add
mov
mov
aaa
mov
mov
in
sub
jl
js
rcrb
sub
jle
mov
push
ja
dec
out
shll
out
add
lds
sub
loop
out
ja
int3
push
fcomps
stc
fildll
fbld
jmp
outsl
and
dec
and
mov
fists
push
jbe
push
or
outsb
xchg
outsb
push
jnp
out
dec
ss
sbb
test
pop
xor
mov
cmp
push
mov
js
stos
or
es
idivb
mov
cmp
pop
fs
fbld
leave
mov
add
call
mov
pop
mov
repz
and
push
xlat
push
jg
dec
push
in
dec
cmp
push
scas
call
repnz
aaa
mov
mov
add
out
orl
ja
ja
popf
test
rclb
nop
sub
shrb
ret
xchg
out
mov
movsb
jbe
daa
aaa
or
out
es
ret
fs
lds
shl
mov
push
or
lock
cmpl
orb
scas
bound
nop
mov
pop
and
and
rcr
in
push
ret
add
ss
or
dec
push
stos
adc
cmp
pop
mov
push
ret
xchg
pushf
xchg
push
lds
adcb
pop
ret
add
mov
ret
notl
outsl
and
adc
mov
cmp
mov
cwtl
inc
pusha
scas
ret
jo
loopne
repz
clc
test
mov
xor
jbe
je
adcl
mov
aaa
outsb
in
addr16
jno
outsl
pusha
cmpsb
mov
add
les
add
lock
in
jle
pop
mov
movsb
pop
jg
mov
mov
insl
cmp
jg
add
lds
push
add
sbb
cmp
add
sub
lds
testl
lods
lods
scas
mov
imull
nop
js
aad
aaa
pop
mov
ja
pop
or
aaa
push
cmp
movsl
nop
imul
aaa
add
daa
subb
push
movsb
and
add
pushfw
xlat
addr16
popa
jo
lahf
iret
insb
fcoms
es
sub
xchg
sub
or
cmp
jbe
jnp
mov
push
fs
enter
fdivp
cmp
dec
sub
fadds
mov
mov
or
test
push
or
or
hlt
push
popf
mov
add
imul
outsl
add
or
xchg
bound
fbstp
test
add
inc
cmpsb
or
aad
aaa
enter
aam
leave
pop
dec
pop
scas
mov
outsl
cmp
add
lock
and
sub
dec
xor
push
mov
or
stos
or
mov
mov
cmp
mov
lret
dec
aas
mov
push
sbb
sbb
cmp
movsb
addr16
les
or
pop
push
dec
testl
nop
xlat
fmulp
add
adc
adc
inc
je
dec
inc
lock
push
pusha
aaa
je
adc
nop
nop
enter
mov
and
nop
lods
loopne
in
or
add
and
adc
dec
xchg
inc
mov
rcll
outsl
xchg
fisubl
xor
in
mov
jl
insb
sub
push
inc
xor
push
lods
pop
jns
cmpsl
fnstenv
insb
dec
jo
repz
out
sub
jl
out
lcall
jae
repz
xchg
mov
ja
iret
repz
into
hlt
pshufw
mov
add
repz
repz
xchg
sahf
out
jb
lods
clc
dec
jae
ds
repz
push
push
mov
lahf
out
mov
icebp
or
das
out
ds
repz
shl
pop
ja
push
jp
iret
repz
mov
xor
out
push
lcall
iret
repz
jns
cmpsl
dec
jae
icebp
cmpsl
stc
cmp
pop
jnp
loope
jl
iret
sarl
stos
or
sahf
out
cmp
stc
sbb
inc
push
fucom
jns
leave
push
jg
push
push
sarl
cld
inc
addb
lcall
sbbb
orl
add
jns
out
sub
sti
stc
cmp
repz
xchg
repz
add
adc
cmp
mov
idivl
jns
lock
xor
out
int
mov
repz
iret
repnz
push
mov
imul
outsb
stos
iret
repz
repnz
iret
repz
xchg
or
jns
jns
xchg
mov
pop
xchg
push
push
movsl
insb
ds
out
xchg
movsb
ja
push
xchg
iret
mov
adc
cmp
cmp
xor
push
push
cmpsl
fdivrs
cmpsl
stc
dec
lcall
dec
repz
fwait
adc
pushf
push
repz
out
mov
idivl
iret
in
sahf
arpl
dec
repz
fwait
mov
lcall
xchg
mov
jns
in
xor
jg
sahf
ja
repz
repz
jge
cmpsb
scas
push
lcall
dec
pop
xchg
leave
hlt
daa
test
fidivrs
jp
or
ds
ret
push
stos
xor
iret
shll
adc
lcall
mov
scas
jns
iret
shll
mov
cmp
repz
fnstcw
sub
xor
sarl
xchg
cli
and
mov
ds
push
mov
lcall
into
or
jns
add
sahf
cmpsl
stc
and
pusha
lods
call
iret
shrl
stc
jle
test
aam
mov
repz
out
adc
iret
repz
or
sbb
push
lcall
mov
daa
ss
out
pop
cmpsb
in
test
addr16
fwait
in
shrl
outsl
ror
mov
iret
into
int
jnp
test
and
xor
and
ret
rcr
inc
fsubl
imul
jg
loopne
loop
add
int
out
add
fdivr
add
int3
push
cmc
aas
xchg
int
sbb
sub
das
addr16
sub
adc
lods
nop
push
in
xchg
in
mov
pop
mov
add
mov
popf
push
mov
inc
xor
pop
rclb
sbbb
cmp
push
leave
sarb
aas
jg
push
push
aas
lahf
pushf
push
or
xchg
arpl
push
lahf
jg
xor
cltd
mov
pop
mov
cmpsl
fdiv
dec
pushf
cmpsb
pop
mov
pushf
dec
push
leave
mov
psrlq
testb
ficoml
mov
out
loop
in
outsl
jb
jecxz
in
or
repnz
sub
inc
hlt
adc
mov
sahf
mov
add
imul
aas
and
and
add
adc
cmp
dec
and
jmp
enter
fiadds
insl
add
or
jbe
add
jl
add
jnp
fisubrl
daa
pushf
push
adc
add
mov
movsb
lods
fldt
sbb
testl
lock
xor
or
adc
test
out
xlat
dec
sub
xlat
insb
lds
sti
mov
add
daa
cmovle
mov
add
push
push
adc
pop
jo
je
cmpsl
stos
fadds
nop
xchg
sbb
sub
fistl
aaa
loopne
jg
pop
add
pop
pusha
addr16
xor
popa
or
addr16
out
ja
or
addr16
dec
add
addr16
or
outsb
jmp
sub
inc
add
add
fsubr
shrl
fcomp
daa
clc
scas
pop
aam
insb
scas
cmpsb
sbb
scas
add
and
xchg
je
leave
fbld
xchg
sbb
cmp
fistps
pop
and
ja
dec
mov
jo
je
ficoml
push
pop
add
mov
leave
inc
xor
push
jbe
push
pop
sbb
or
leave
inc
fildl
filds
mov
push
mov
imul
and
mov
in
lds
shll
and
jle
fcoml
sub
faddl
and
pop
pop
in
xchg
and
pop
xor
jo
push
popf
fcompl
gs
call
push
sbb
sbb
push
ror
daa
inc
outsb
mov
xchg
push
xor
fstl
fnsave
or
or
xor
mov
inc
and
out
jmp
xchg
iret
add
iret
ja
in
and
fst
ffree
daa
loopne
nop
pushf
in
pusha
sub
sbb
leave
and
jae
jb
jnp
push
jle
mov
xchg
add
pop
cmpsb
lods
push
pusha
push
or
in
lock
es
faddp
movsb
shrl
in
popf
sub
in
clc
fistps
mov
xor
push
add
mov
popa
dec
jl
data16
leave
and
sub
in
mov
enter
iret
adc
dec
shl
sub
loopne
daa
cmp
loopne
pop
pop
jmp
repz
xchg
dec
dec
adc
bound
loopne
in
das
bound
bound
push
xchg
mov
pop
add
je
jb
jge
lea
inc
bound
leave
leave
in
mov
fsubrs
leave
leave
loopne
lock
in
mulb
sbb
fs
sub
add
inc
mov
mov
arpl
daa
cmp
outsb
jns
arpl
lcall
and
sbb
or
or
or
in
mov
notb
loop
fs
lea
rorb
sub
aas
add
shll
rclb
jge
mov
aas
adc
jecxz
jecxz
daa
inc
scas
xchg
mov
adc
jl
mov
movq
paddd
enter
or
adc
pop
add
sub
aaa
pop
inc
or
sbb
jmp
js
xchg
and
andb
pop
stos
add
adc
cmp
test
in
in
daa
dec
push
cwtl
jo
mov
add
lock
cltd
jle
xchg
dec
dec
in
in
daa
cmp
dec
dec
rorl
daa
pop
in
mov
dec
cmp
push
pop
addr16
jp
and
sbb
add
mov
mov
add
adc
xor
pop
pop
mov
icebp
or
out
aaa
in
daa
xor
jmp
jmp
addr16
movhps
in
and
xchg
cmp
in
mov
add
aas
addr16
inc
push
leave
add
push
movsb
xor
pop
outsl
scas
xchg
pushf
cmp
and
mov
mov
daa
mov
rorl
adc
inc
call
arpl
cmp
adc
push
daa
pop
call
shl
dec
xchg
inc
jo
leave
call
pushf
daa
enter
jb
push
adc
in
add
cmp
xchg
mov
hlt
cmp
popl
and
adc
cmpsl
jmp
fucomi
fs
test
imul
sub
xor
out
in
pop
mov
mov
mov
pop
ljmp
imul
lahf
ljmp
push
mov
add
pushf
mov
mov
movsb
les
dec
test
jmp
mov
daa
sbb
hlt
cmovl
jbe
addr16
fildll
enter
push
add
das
mov
xchg
imul
outsb
out
int3
jg
mov
test
in
add
mov
fsubp
cmp
lsl
pop
adc
jbe
pop
in
xor
jmp
xchg
sub
aad
in
fcmovnb
or
in
add
cmpsl
inc
inc
mov
scas
imul
mov
imul
add
mov
jb
add
xchg
inc
repnz
sub
aas
in
pushf
insb
std
or
fisubs
in
enter
leave
add
cld
jae
cmp
sbb
insb
push
push
inc
inc
loopne
push
mov
add
daa
insl
push
ja
psrld
das
repz
push
dec
pop
adc
out
insl
sub
into
cs
adc
ljmp
aaa
in
xchg
mov
cmp
cwtl
jo
inc
ret
and
dec
and
mov
out
enter
cs
dec
hlt
aaa
and
in
adc
lock
in
push
test
mov
mov
inc
jb
inc
in
sbb
loop
cs
icebp
or
adc
scas
leave
dec
movsl
pop
aas
mov
leave
and
dec
sti
nop
mov
cmova
xor
and
fnstsw
add
jo
push
or
inc
jg
cmp
inc
push
repnz
repnz
pop
mov
decl
repz
jno
or
add
cmp
or
loopne
xchg
outsb
daa
repnz
lock
jbe
push
jnp
adc
sub
push
push
jno
jno
stos
shlb
jno
jb
sti
daa
push
mov
add
cmp
mov
in
in
pop
repz
jb
lds
add
pop
rolb
hlt
push
add
xor
ds
fs
sub
pcmpeqb
repnz
push
add
and
sbb
add
addl
cmpsb
mov
adc
hlt
shlb
xchg
subl
xor
jae
mov
negl
and
ja
inc
ret
pop
add
mov
inc
xlat
jbe
pusha
daa
daa
fists
mov
fistpll
jbe
push
leave
cmc
rolb
push
notb
ljmp
pop
fnstcw
sub
push
xor
xor
sbb
inc
das
dec
add
dec
ja
iret
or
leave
cltd
je
testb
pushf
mov
retw
lods
xchg
sbb
ud0
sub
or
xchg
pop
and
addb
in
pop
and
sbb
orl
imul
sub
sbb
inc
ss
and
sub
add
in
sbbl
mov
add
test
mov
push
adc
fsubrl
fimull
in
addr16
cwtl
push
fbstp
xchg
daa
and
add
ss
and
cmpsl
push
pop
leave
jae
insl
cmpsb
imul
in
add
ljmp
iret
cmp
jns
jg
pop
in
lock
add
and
adc
sbb
ja
add
xor
js
cs
dec
push
or
pop
imul
je
adc
sahf
xor
pop
dec
aaa
cmp
aam
or
push
mov
mov
pop
outsb
das
jns
rdpmc
cmovns
jns
push
pop
add
data16
xchg
jl
imulb
stos
mov
mov
inc
into
sahf
mov
add
dec
fiaddl
or
mov
push
adc
jp
idiv
in
and
jp
cld
pop
iret
jno
sub
imul
or
pushf
add
test
cld
mov
jp
adc
jle
enter
std
cmp
adc
daa
sub
scas
pop
stos
xor
es
xchg
dec
std
std
jnp
je
incl
jnp
add
sahf
jnp
mov
les
test
fisttpl
sbb
mov
add
lgs
jnp
jnp
dec
cmp
xchg
dec
faddp
enter
push
or
inc
mov
sbb
or
mov
jl
mov
jb
push
push
insb
lret
or
cltd
jg
mov
mov
mov
lret
rolb
dec
loop
jl
jmp
movb
pop
jge
jo
mov
in
cmp
push
add
outsl
jge
inc
mov
test
popl
lcall
add
or
dec
pop
out
in
movsb
out
idiv
xchg
sbb
jle
or
jle
pop
aaa
dec
jle
sbb
jb
jle
jle
jle
jle
cmp
lahf
cmpsl
addr16
mov
movsl
add
push
aam
xchg
addb
in
or
push
sbb
jb
push
das
pop
cmp
sbb
or
ss
push
jg
outsl
xor
pop
aas
jg
into
add
rorb
fidivl
sub
and
pop
jg
add
dec
mov
adc
adc
pushl
mov
leave
dec
push
fsubr
in
mov
add
iret
pushf
add
lods
iret
add
loopne
xlat
push
pop
mov
add
testl
dec
inc
fiadds
pop
pop
or
daa
or
xchg
daa
and
aaa
or
or
inc
push
dec
push
adc
mov
adc
ja
adc
jg
xchg
xchg
sbb
data16
dec
mov
int3
jo
mov
cmpsl
aam
filds
add
adc
cmp
adcb
jbe
sub
enter
enter
mov
add
push
popf
pop
and
lock
leave
xchg
adc
add
adcl
roll
push
pop
adc
xorl
inc
xor
int3
out
add
xlat
jbe
push
or
in
loop
test
xlat
test
mov
adc
test
cmp
inc
mov
daa
daa
dec
push
dec
or
pop
xor
enter
or
adc
ss
cmpsl
test
dec
addb
fs
daa
and
jno
mov
daa
jbe
inc
aas
addr16
insl
add
pop
or
loopne
mov
into
push
lock
adc
dec
xchg
dec
pop
adc
dec
add
movb
and
push
shll
insl
test
fadds
adc
andb
lahf
add
mov
add
add
loope
cmp
fwait
cmp
ljmp
daa
orl
sbb
pop
push
and
btrl
cmp
clc
scas
testl
decl
fucomi
add
incl
mov
insb
nop
addl
mov
cltd
ljmp
jns
dec
jmp
shl
in
frstor
sbb
int3
ficompl
add
clc
xchg
enter
push
xor
inc
or
or
insb
pop
or
test
xchg
xchg
add
xchg
and
add
add
jb
xchg
or
and
dec
pop
or
lahf
daa
xchg
imul
cmp
push
or
fs
pushf
fbstp
mov
and
mov
repz
xchg
dec
add
fimuls
out
jl
sbb
xchg
or
out
daa
daa
daa
mov
cmovle
ss
xor
cs
or
jmp
xorl
fimull
addr16
pextrw
jno
inc
sahf
int
aad
or
mov
mov
cmp
decl
dec
fisubl
imul
and
lcall
xchg
pushf
xchg
iret
or
adc
ret
mov
jg
inc
push
or
outsb
daa
and
add
and
and
out
fmuls
push
cmpsl
rorb
or
or
or
mov
mov
cmpsb
pop
sbb
xchg
add
nopl
push
push
push
xor
bound
outsb
daa
fs
xchg
cmp
aaa
push
lods
push
pushf
mov
mov
mov
adcb
pop
fisttps
loop
loopne
pop
add
sub
push
movaps
xchg
xchg
daa
in
out
push
cmp
dec
xor
je
push
addps
or
inc
rorl
jnp
int3
lahf
dec
shll
sahf
mov
mov
lret
cmpsl
xchg
adc
dec
push
clc
mov
icebp
sti
inc
adc
cmp
cmp
cmp
das
je
and
mov
mov
xlat
adc
xchg
scas
mov
mov
adc
adc
in
out
sbb
lea
cs
fs
insb
add
test
xchg
mov
jb
inc
jb
or
xor
xchg
movb
and
add
cmp
inc
xor
cmpsl
push
pusha
xchg
and
xchg
pop
and
lret
shlb
das
fiaddl
loop
cmp
push
aaa
leave
enter
aas
add
inc
fildl
fimull
adc
popf
adcb
adc
decl
in
xchg
daa
loope
in
add
add
repnz
add
nop
add
or
sbb
das
and
ucomiss
pop
pushf
mov
push
inc
cmovg
dec
inc
sbb
call
pxor
lea
xchg
popf
add
inc
dec
add
lods
mov
lcall
int
and
fbld
adc
xchg
leave
enter
or
add
jbe
dec
xlat
cmp
xchg
jnp
bnd
orb
sahf
mov
add
mov
lret
inc
rol
pop
lret
xchg
xchg
or
out
divl
sbb
call
add
cmp
mov
xchg
fisubrl
aas
push
insb
fildll
fisttpll
add
add
repnz
pop
pop
xchg
or
into
dec
xchg
and
or
xchg
jg
pop
adc
fidivrl
pop
push
xchg
sahf
dec
cs
scas
pop
mov
or
or
xlat
or
adc
dec
loope,pn
sub
sbb
sbb
je
outsl
xchg
das
push
aas
and
sub
push
jbe
xchg
mov
dec
push
shufps
negb
pop
outsl
cmpsl
ja
or
cmpsb
lcall
mov
add
jmp
push
add
lds
scas
iret
cwtl
sbb
mov
lahf
sahf
mov
push
sub
add
inc
add
dec
push
mov
xchg
xor
pop
jle
add
xchg
xchg
lret
xchg
sahf
add
cs
roll
in
and
fdiv
cld
push
add
or
sbb
xchg
xchg
mov
xchg
das
push
aaa
aas
inc
sub
or
xchg
dec
add
dec
jb
jb
mov
in
mov
vshufps
daa
daa
daa
aad
in
dec
and
xchg
in
or
movsl
bnd
xchg
addr16
sbb
jns
mov
sbb
inc
xor
cmp
add
xchg
fcmovne
inc
jbe
jbe
mov
cmp
adc
xchg
cmp
leave
out
in
inc
cwtl
movhps
fistps
imul
bnd
dec
pop
dec
add
push
pop
add
and
bound
push
int
popf
in
jb
rcl
jbe
outsb
daa
mov
sub
and
mov
call
mov
aaa
sbb
push
fisttps
das
aaa
rcrb
push
cmpsl
push
movsb
leave
inc
xor
pop
cltd
addr16
mov
xchg
dec
pushf
pushf
lahf
test
outsb
xchg
add
mov
lcall
lcall
rolb
fstpl
inc
push
movsb
add
lcall
stos
add
sbb
ret
shr
dec
fisubl
call
xor
dec
pop
pmulhuw
jbe
fwait
sub
cmovle
cmp
jb
add
outsl
add
cmp
cmp
pop
nop
fwait
or
sahf
mov
push
lret
daa
and
fsub
adc
std
jb
enter
or
sbb
cmp
pop
xor
pop
nop
pop
fcomps
and
unpckhps
leave
mov
data16
rolb
jg
outsb
fisubrl
iret
push
into
pop
xchg
cs
xchg
add
stc
inc
inc
pop
cmp
popf
add
and
daa
mov
sub
sub
popf
xor
xor
inc
inc
push
and
sbb
pop
push
or
dec
outsw
daa
insb
pcmpeqb
lea
and
and
sbb
repz
stc
jge
incb
setle
adc
or
add
mov
in
cwtl
lock
push
and
and
fidivrl
inc
xor
sahf
bound
push
push
jge
push
dec
pop
lahf
push
jnp
inc
mov
mov
xchg
or
out
outsl
mov
sbb
sahf
imull
add
push
loope
xchg
insl
jns
sahf
push
icebp
add
add
xor
lahf
or
push
pop
aas
lahf
in
in
fs
cmp
lahf
inc
dec
mov
leave
enter
pop
data16
insb
jmp
mov
loopne
dec
xchg
jg
add
lretw
rorl
daa
daa
mov
fistpl
jecxz
jmp
sti
mov
and
dec
xor
in
mov
mov
dec
push
mulps
test
and
shld
scas
push
mov
fs
xchg
pop
pushf
add
movsb
call
mov
or
out
xlat
and
inc
mov
loop
in
fbld
frstor
jns
in
lahf
and
cmp
push
outsb
daa
lods
aas
mov
and
fistpll
xor
mov
in
or
es
mov
inc
inc
mov
leave
mov
mov
mov
into
ftst
add
das
inc
mov
add
add
adc
sbb
or
or
cmp
cmp
or
in
xchg
and
jae
jle
mov
sub
adc
push
lahf
adc
stos
push
mov
rcrb
sbb
leave
xchg
and
sbb
sbb
leave
leave
leave
leave
pop
push
adc
leave
adc
adc
test
leave
leave
femms
or
pop
sub
test
adc
nop
sbb
sbb
pop
loope,pn
ja
sub
add
jb
sahf
jmp
adc
jb
frstor
push
mull
push
in
pop
mull
add
movd
mov
inc
repnz
sub
push
sub
daa
pop
lahf
mov
pop
scas
mov
sarl
sub
dec
ljmp
mov
movsb
adc
repnz
std
push
pop
add
sbb
popa
add
jno
jns
dec
adcl
or
lods
leave
inc
repnz
xlat
data16
dec
adc
leave
xlat
fbld
into
movsl
sub
xchg
xchg
dec
sbb
add
mov
sub
and
xchg
addb
movsl
pushf
int3
sahf
pushf
lods
mov
xchg
mov
test
fs
shr
pop
clc
movntps
cmpsb
aas
cmpsb
mov
rcrb
sub
aas
sub
outsl
fsts
pop
data16
in
leave
enter
jle
pop
xchg
in
in
mov
sahf
or
scas
or
out
cmpsb
ret
sub
movb
sub
leave
lret
xchg
xchg
jmp
add
add
cmp
xlat
cmpsl
and
cmp
in
das
cmp
cmovne
add
pop
xchg
and
mov
or
inc
fldcw
xlat
push
sahf
add
mov
add
xchg
daa
and
pop
into
or
and
testl
fsubrs
stc
pop
add
cs
cs
add
sub
enter
add
sbb
leave
dec
jnp
test
push
xor
cmpsb
loope
in
add
in
and
xorb
loopne
inc
int3
ja
xor
rorb
fadds
loopne
pop
inc
push
lahf
das
das
test
jnp
add
out
in
xchg
xchg
ss
aas
mov
daa
mov
pop
cmpl
pushf
movsb
mov
xor
das
out
iret
mov
xchg
pushf
dec
addr16
and
stos
sbb
sub
pop
aas
pop
punpcklbw
insl
mov
xchg
in
imulb
add
mov
mov
xchg
add
push
stos
fwait
nopl
cmp
pop
add
scas
cli
dec
xor
pop
lahf
or
xor
dec
movl
mov
leave
leave
dec
mov
xor
fs
xor
stos
xchg
out
jmp
push
and
jb
enter
add
add
jns
dec
dec
add
or
cmp
push
pop
or
mov
inc
pop
outsb
pcmpeqd
test
pushf
pop
and
mov
in
xor
int3
adc
leave
mov
pop
lods
xchg
mov
and
mov
lods
pop
pop
push
add
jb
jnp
lahf
push
ja
jg
jb
xor
xchg
jb
stos
mov
mov
vpmovmskb
adc
xchg
mov
lods
cli
lods
add
orl
fisttpll
daa
lods
sub
inc
push
xor
loopne
lods
push
jnp
scas
jne
push
addb
cmp
mov
add
inc
sahf
mov
or
daa
and
or
fdivs
test
scas
or
sbb
pushl
sbb
ficomps
ss
add
mov
push
jb
lock
sbb
cmp
outsl
scas
imul
add
jl
popf
nop
invd
das
add
fdivl
aas
xlat
pop
sbb
dec
xor
divb
xchg
or
btc
andb
push
cmp
sbb
mov
mov
cmpsl
les
cmovg
mov
add
pop
mov
mov
ja
xchg
pop
mov
ja
leave
dec
in
addr16
xchg
xchg
adc
pop
add
jns
sbb
inc
add
aaa
mov
in
imulb
mov
lahf
jp
cmpb
in
mov
setb
add
pushf
sbb
add
mov
mov
and
or
ret
enter
pop
adc
lds
mov
pop
addr16
stos
dec
cmp
inc
inc
fidivs
push
add
xchg
xchg
and
push
popa
pusha
in
enter
jns
cmpl
cmp
mov
outsb
mov
cs
lods
lfs
mov
pop
mov
unpcklps
mov
fidivrs
and
or
int3
jnp
pop
push
mov
sahf
mov
in
adc
adc
and
mov
adc
push
in
in
cmp
inc
dec
push
sbb
repnz
sbb
insb
mov
jl
and
and
xchg
pushf
dec
movsb
mov
sub
sub
les
int3
sub
sub
fsubrl
in
in
hlt
je
push
xor
pop
movl
push
pop
ljmp
cmp
mov
dec
incl
and
cmp
subps
add
push
dec
add
pushf
mov
xor
jbe
jne
test
xchg
in
ror
rorl
dec
ror
in
cmp
xchg
cmp
mov
ja
mov
sbb
add
add
sub
pop
ss
outsb
mov
inc
dec
das
push
dec
pop
punpckldq
outsl
push
cwtl
push
adc
jb
test
mov
mov
and
rclb
cmp
in
negb
sbb
and
sbb
sbb
sbb
in
xchg
pop
inc
and
pop
and
sbb
bound
outsl
and
and
xchg
and
sub
jbe
jb
sub
fcmovnbe
jg
lahf
jmp
and
sahf
pushl
and
sbb
in
xchg
push
and
sub
xor
inc
mov
cmp
inc
sbb
push
in
xchg
and
adc
adc
test
and
inc
js
in
dec
mov
mov
stc
jb
sti
testl
mov
add
or
adc
push
or
jb
enter
or
push
or
mov
pop
or
jp
in
xchg
and
mov
jb
adc
adc
enter
int
xlat
sbb
sbb
jb
out
sbb
sbb
add
and
sbb
sub
xor
das
inc
dec
dec
outsl
pop
pusha
sbb
inc
mov
imul
sbb
xchg
in
xchg
and
adc
cltd
sub
adc
cmp
les
int3
paddq
fmull
in
in
or
or
jb
lret
cld
or
sbb
sbb
add
cmp
insb
daa
and
das
xchg
lret
push
mov
cwtl
fsubrl
mov
xchg
fcmovnb
pop
add
push
push
popf
add
movsl
lods
pop
pop
mov
mov
mov
enter
int
aad
fisttpll
popf
mov
in
in
adc
std
fmull
sahf
add
pop
dec
inc
sahf
pushf
daa
xor
cmp
leave
lret
sbb
sbb
addr16
sbb
inc
mov
push
xchg
add
mov
and
rorl
dec
outsb
pand
jmp
daa
daa
inc
dec
sti
mov
xchg
xchg
mov
das
push
adc
xor
pop
outsb
daa
mov
aas
inc
cmovg
pop
dec
dec
dec
dec
outsl
ja
xchg
and
xchg
ret
enter
and
fstl
mov
repnz
out
out
idiv
mov
push
pop
push
pop
and
mov
or
add
dec
inc
inc
dec
push
pop
push
pop
mov
pusha
adc
push
in
cmp
xchg
fsts
mov
add
cmp
enter
add
add
mov
pop
ljmp
cltd
cmp
and
pop
and
cmp
push
cmp
inc
adc
mov
xchg
adc
jne
fisubrs
fwait
pop
mov
mov
and
rcrb
fucom
in
enter
pop
mov
jns
adc
pop
sub
xor
inc
and
dec
dec
outsb
daa
insb
emms
orb
mov
mov
push
xor
cmp
inc
mov
adc
sbb
add
sub
or
cmp
or
pop
addr16
jb
jb
outsl
ja
xchg
jns
jb
xchg
lahf
adc
scas
pop
mov
mov
dec
push
iret
adc
xlat
sbb
cmp
fistps
sbb
and
inc
adc
adc
leave
leave
jecxz
sub
ds
leave
leave
leave
inc
dec
push
pop
dec
xchg
mov
cmp
data16
push
add
cmp
cmpsl
cmp
add
jb
xor
jecxz
fbstp
or
rorl
push
fs
enter
das
or
in
inc
pop
push
jg
pop
punpckhbw
jb
in
leave
jae
adc
mov
jbe
mov
mov
inc
mov
sbb
sbb
daa
and
iret
and
into
into
outsb
mov
pop
bnd
lahf
ret
or
ret
adc
fmull
psrlw
sub
sub
fsts
sub
or
enter
das
sub
xor
and
sbb
xor
push
xor
jb
enter
ss
cmpl
lea
ret
push
cmp
cmp
ret
aas
cmp
and
dec
cmp
aas
enter
insl
js
jae
jb
cltd
inc
movsb
inc
mov
mov
lret
das
dec
loope
paddsb
loope
add
testl
imul
faddl
ja
shlb
mov
mov
push
xor
fs
cmp
inc
outsl
push
dec
add
add
arpl
outsb
pop
jns
or
dec
inc
into
setno
pushf
test
xchg
and
push
into
pand
xor
jb
call
add
cmp
fstps
scas
push
sbb
cltd
cmp
dec
cvtps2pd
jbe
repnz
jb
jg
bswap
in
notb
xchg
mov
cmpsl
es
test
add
push
lidtl
push
add
push
dec
dec
jbe
dec
sbb
cmp
add
pop
add
add
jne
pop
mov
xchg
and
sahf
mov
xchg
and
mov
dec
int
fmuls
enter
in
psubq
movl
fistl
pop
adc
pushf
cmp
cmp
sbb
sbb
inc
sahf
pushf
clc
mov
xchg
and
and
daa
dec
inc
mov
loop
cwtl
nop
and
bswap
add
daa
sbb
and
dec
or
push
mov
dec
enter
add
enter
addl
mov
leave
fwait
mov
lahf
mov
dec
mov
xor
fsubrp
add
repz
iretw
dec
int3
iret
leave
pop
leave
adc
pop
pop
and
dec
sub
push
or
insl
leave
enter
or
or
in
mov
pop
cltd
adc
cmp
mov
aas
rclb
fldenv
and
pop
call
fists
lret
sbb
and
cs
cmp
inc
mov
and
imul
and
iret
mov
out
lret
pop
xorl
sbb
dec
scas
fisttpl
cwtl
push
sub
cmp
test
mov
call
xor
lret
or
unpcklps
inc
mov
inc
or
in
xchg
and
or
jne
jb
or
sbb
mov
push
stos
adc
int3
sahf
mov
fistl
mov
outsl
cld
bswap
pop
sbb
pop
in
mov
xor
push
dec
dec
pop
cmp
lret
push
js
inc
and
das
int3
cltd
dec
daa
inc
mov
push
test
daa
mov
and
shll
psubusw
loope
aas
test
call
int
push
unpcklps
adc
in
idivb
cmp
sbb
pop
push
push
and
js
andb
jg
cmpsl
xchg
xchg
and
int
int
jbe
xchg
mov
fcomip
enter
int
int
add
setno
filds
push
push
or
or
leave
fsts
inc
or
sbb
jb
dec
addps
arpl
outsb
mov
adc
in
in
jbe
jg
lahf
lcall
cmp
sbb
inc
sahf
int3
sahf
ficomps
pop
jmp
stc
jae
bswap
or
adc
outsb
and
es
inc
cmovl
mov
cmpsb
sub
push
cmp
sbb
das
idivb
push
mov
notl
daa
int3
inc
mov
lcall
out
iret
mov
lret
cs
push
xchg
jno
cmpsl
push
add
cmp
int
sub
sub
push
add
add
cmp
or
adc
imul
or
jbe
ds
push
mov
in
fcmovnb
pop
rcll
fcoml
out
stc
jb
repnz
push
pop
pusha
sbb
imul
mov
dec
inc
into
das
xchg
sbb
push
cltd
cmp
das
icebp
rclb
and
push
inc
sahf
mov
es
daa
mov
xchg
and
pusha
pusha
aas
pusha
xchg
xchg
and
sub
flds
xchg
xchg
aas
in
leave
enter
das
mov
pop
testb
lock
or
rdmsr
jnp
jb
or
sub
sbb
aas
dec
scas
inc
push
pusha
xor
xor
in
jnp
femms
cmp
in
in
fs
pop
das
addr16
xchg
xchg
mov
jg
mov
xchg
or
stos
or
ret
das
into
psubusw
xchg
xchg
mov
pop
in
out
cli
adc
aam
leave
enter
adc
in
fs
sbb
dec
orps
leave
enter
outsb
jns
test
fisttpl
and
jbe
in
lcall
mov
rcl
or
mov
repnz
sub
inc
sahf
int3
sahf
lcall
das
daa
mov
and
shll
pop
fsub
xchg
fsts
xor
outsb
mov
das
arpl
outsb
jns
fldt
dec
dec
std
iret
or
push
leave
dec
adc
into
sahf
sub
add
xchg
sbb
jb
popl
dec
pop
push
sbb
pop
or
mov
das
setg
dec
mov
sub
mov
or
jnp
dec
or
pop
mov
jmp
negl
or
sbb
mov
add
nop
mov
lods
adc
xchg
jne
shr
mov
add
adc
or
dec
nop
arpl
push
xorb
xchg
xorb
push
add
jp
pop
stos
inc
adc
dec
xchg
inc
jae
inc
movsl
scas
pop
inc
outsb
dec
jo
rcrb
mov
movl
outsb
xor
out
sahf
out
push
or
or
mov
xchg
or
or
or
jge
push
ja
add
scas
adc
cmp
das
and
jb
inc
push
addr16
das
fsubrl
fistl
push
mov
insl
daa
iret
repz
and
jb
outsb
mov
outsb
pop
andb
cmpb
jns
or
pop
xchg
sub
mov
xor
mov
xlat
sbb
data16
sbb
xchg
nop
mov
mov
adc
adc
xchg
adcb
jmp
add
add
xchg
add
sbb
jmp
scas
adc
mov
pop
stos
nop
sbb
test
faddl
add
movsb
add
fsts
jns
and
cli
mov
loopne
inc
jle
test
shll
mov
inc
mov
pushl
add
mov
sbb
in
mov
mov
push
add
notb
add
fidivl
rcr
fsubp
stc
jb
xor
mov
xchg
jl
js
jo
cmp
repz
fs
push
dec
repz
repz
xor
and
repz
sbb
or
add
cmp
cmp
hlt
lock
cmp
call
repz
sahf
out
sahf
mov
mov
out
test
repz
mov
repz
cmp
sub
sbb
cmp
sti
mov
cld
push
in
fadd
mov
repz
mov
js
sahf
out
jo
push
jns
out
inc
xor
out
ficoms
in
fmul
dec
leave
jp
mov
jo
ja
icebp
jl
push
mov
popa
test
xor
push
xcrypt-ecb
cmpsl
jo
mov
or
rolb
add
sub
divb
incl
dec
sbb
aas
sbb
jbe
mov
ss
adc
lretw
jae
xorb
inc
in
f2xm1
icebp
call
push
mov
mov
inc
push
mov
inc
fdivs
rolb
push
dec
andl
shll
add
adc
add
adc
add
add
add
jg
testb
test
pop
das
insl
add
fldt
iret
or
pop
inc
xchg
pop
and
jae
cs
push
enter
lds
in
sub
jo
xlat
add
add
out
call
testb
adc
add
add
inc
sbb
repnz
and
into
mov
paddq
aas
xor
movaps
das
mov
mov
xchg
and
or
adc
jb
in
enter
adc
adc
or
inc
mov
pop
pop
clc
and
and
and
enter
and
pushf
pop
orl
shll
subl
and
outsb
ret
adc
xor
xchg
cmp
cs
outsl
in
xchg
incl
xorl
fistl
sahf
out
pop
cmp
pop
js
mov
idivb
jns
adc
xor
dec
insl
add
cmp
fwait
cmp
pop
ja
mov
jnp
iret
shl
jae
das
push
dec
insb
mov
add
ds
mov
stc
nop
cli
or
or
ret
jae
hlt
adc
ljmp
jg
mov
leave
sbb
into
sbb
rorl
and
push
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
ljmp
mov
popl
cmp
cmpsb
iret
decl
js
inc
outsl
loopne
decl
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
incl
out
jecxz
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
decl
xchg
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
jmp
mov
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
jmp
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
ljmp
int3
jg
lahf
add
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
call
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
incl
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
dec
cld
inc
mov
aas
xchg
les
jne
int
mov
addr16
dec
lods
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
pushl
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
inc
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
lcall
inc
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ljmp
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
jg
lcall
dec
dec
gs
std
orl
pop
ficomps
frstor
and
mov
add
insl
mov
lods
mov
push
add
and
inc
je
inc
inc
push
dec
inc
test
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
insl
cmp
jg
ljmp
mov
pop
push
inc
dec
stos
insl
jbe
inc
jo
inc
popa
push
outsb
jbe
imul
push
sub
outsl
mov
aas
dec
insb
imul
dec
push
mov
or
and
sub
jno
pop
jnp
popa
push
dec
push
cmpb
loopne
dec
push
nop
push
addb
jo
jb
push
inc
sub
inc
test
inc
shrb
jb
gs
pop
inc
adc
and
push
inc
arpl
add
test
mov
sub
mov
bound
outsl
push
dec
pop
mov
or
xchg
xchg
add
xorb
dec
sub
xchg
or
sub
mov
push
fs
mov
aas
or
addb
xor
xor
daa
dec
jae
mov
inc
jne
push
and
inc
inc
inc
jg
lds
loopne
lahf
push
lods
pop
addl
push
push
cmp
mov
push
mov
je
dec
adc
les
inc
push
and
fimull
in
inc
clc
adc
rcl
sbb
out
dec
push
dec
dec
mov
das
adc
dec
bound
jbe
mov
bound
test
cltd
push
mov
bound
add
int
cmpsb
dec
pop
add
xchg
iret
sub
inc
jmp
outsb
arpl
outsl
pop
mov
add
pop
xlat
xor
sbb
and
lret
push
pop
mov
cmp
mov
push
pop
mov
or
mov
sub
mov
imul
add
sbb
and
pop
push
push
imul
jo
pop
outsl
push
jb
pop
sub
lds
and
das
rolb
push
xlat
push
push
in
and
jp
lock
push
stos
adc
gs
mov
inc
pusha
push
repnz
mov
push
movsl
pop
mov
inc
arpl
push
push
inc
jno
stos
cmpsl
pusha
out
sub
sbb
mov
lds
xchg
insb
and
pop
xchg
add
mov
inc
mov
data16
or
cltd
insb
and
outsl
ja
andb
insb
and
xchg
das
ja
andb
arpl
jne
ret
pop
les
adc
push
adcl
orl
pop
push
dec
std
cmpsl
push
add
push
pop
sub
aad
push
inc
inc
dec
movsb
mov
lods
or
inc
and
mov
nop
jg
mov
or
sub
cmp
lahf
movsb
and
mov
push
push
pushf
and
cmpsl
insl
push
or
sbb
hlt
push
dec
dec
stos
fdivl
push
inc
js
xchg
jae
inc
push
cmpsl
insl
arpl
mov
jbe
xchg
insl
imul
or
push
jne
les
outsl
add
add
mov
pop
insb
insb
scas
dec
outsl
addr16
sbb
cmpsb
iret
mov
push
inc
iret
pop
les
test
sbb
sbb
xlat
push
pusha
adc
dec
jg
xchg
push
push
pusha
dec
xor
xchg
clc
out
sahf
out
enter
shlb
adc
cld
mov
loop
dec
gs
push
pop
add
push
out
push
and
call
xor
ja
popa
push
out
mov
les
hlt
push
xor
jmp
xor
fdivrl
jmp
rclb
mov
sub
jmp
xchg
sbb
mov
repnz
repz
test
ficompl
jmp
mov
push
movl
imul
std
in
leave
mov
add
insb
push
arpl
ud0
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
shrb
or
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
fcompl
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
iret
shld
sub
mov
fbld
or
adc
stos
sbb
data16
inc
fdivl
jno
add
lcall
mov
mov
movsl
in
lahf
xor
dec
jmp
pop
mov
stc
lods
test
call
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
incl
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
decl
fistps
ficoml
gs
aam
pop
popa
mov
into
pop
pushl
add
inc
movsl
fisttps
xchg
fadd
shll
jmp
cld
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
ljmp
adc
mov
and
test
or
mov
popa
into
push
stc
ficomps
lcall
cwtl
shlb
pop
cmp
mov
cmp
lods
insb
mov
in
pushl
loop
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
incl
insl
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
call
mov
add
inc
push
imul
xorb
sbb
push
imul
mov
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
jmp
mov
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
decl
sub
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
mov
outsl
and
xchg
ja
int3
add
mov
das
es
push
mov
or
sub
mov
cmpsl
call
ret
shlb
sbb
lcall
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
lcall
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
lcall
inc
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
mov
scas
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
cld
call
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
sahf
sarb
sub
push
mov
jp
nop
pushl
add
push
sub
mov
or
sbb
mov
mov
sub
scas
cs
dec
pop
mov
mov
ds
fdiv
adc
inc
jne
std
movsl
inc
add
imul
mov
xchg
xlat
lahf
pop
inc
jbe
adc
jns
arpl
arpl
ja
push
in
mov
push
inc
insl
jns
shl
pop
inc
jne
outsl
insl
addr16
dec
mov
xchg
fildl
movsl
or
xlat
aaa
adc
aaa
adc
mov
dec
inc
js
inc
insl
bound
inc
or
push
mov
jo
add
js
mov
dec
orl
jno
notb
pop
inc
cmp
pop
bound
xor
aaa
idiv
cmp
popa
arpl
cmp
arpl
or
xor
shl
bound
popa
shlb
push
inc
jbe
pop
sbb
pop
inc
mov
push
dec
inc
loope
cmp
or
or
sub
sub
fbld
mov
inc
mov
push
into
push
cmpsb
lcall
jne
push
inc
aas
sbb
xor
jle
inc
sbb
and
inc
push
sub
or
getsec
adc
adc
insb
popa
jns
push
mov
mov
popa
xchg
add
aaa
je
aaa
lcall
in
and
cmp
aas
add
insl
or
and
jae
movsb
mov
fidivl
push
xor
inc
aaa
inc
movl
sbb
inc
pop
testl
jo
inc
inc
add
push
ds
push
scas
add
cli
mov
int
push
dec
dec
dec
jo
cmp
rclb
fs
outsb
jne
pop
insl
dec
and
push
xchg
jge
xor
cmp
adc
arpl
add
mov
xor
addr16
push
jns
pop
jo
or
push
inc
imul
aas
std
or
cltd
dec
loopne
push
jbe
je
stc
pusha
add
mov
subb
test
lahf
inc
mov
or
sub
push
pop
xlat
arpl
add
mov
daa
inc
jb
xchg
xor
or
lock
popa
jo
lahf
sbb
outsl
test
mov
jbe
push
jno
jno
push
pop
in
push
dec
xor
pusha
in
nop
test
pop
cmp
xor
arpl
int
adc
cmp
mov
jo
push
xchg
pop
inc
test
insb
jns
das
insl
pop
or
popa
jb
and
aad
fiaddl
nop
adc
insb
adcb
or
iret
loope
add
push
bound
pop
push
shll
arpl
addr16
insl
pop
pop
divl
push
add
dec
inc
sbb
popf
xor
add
mov
test
icebp
addb
add
and
or
pop
adcb
sbb
punpckhwd
cmpsb
jbe
loop
hlt
push
testb
and
push
or
sub
aas
or
outsb
push
cmc
jg
cmc
push
sbb
aaa
pop
aam
gs
fdiv
aaa
push
loop
aaa
pop
add
add
cwtl
inc
add
les
push
add
aas
pop
inc
stos
mov
add
adcb
or
andl
dec
pop
nop
inc
add
or
push
xorl
inc
sbb
pop
mov
int
mov
inc
shlb
sahf
and
xlat
add
and
sbb
je
add
adc
jne
pop
dec
jl
inc
dec
push
and
cs
xor
lods
loop
popa
incl
lea
out
pop
in
bswap
mov
out
ud0
ds
jmp
repnz
in
push
pusha
ljmp
lret
cli
add
dec
pop
push
cld
push
imul
sbb
dec
and
mov
daa
dec
jnp
add
sbb
insb
mov
aam
cmp
add
pop
add
xchg
cmpsb
dec
orl
jnp
clc
add
add
sbb
add
prefetch
lcall
rorb
mov
subb
test
cltd
mov
push
loop
and
push
pusha
push
add
pop
pusha
add
add
test
les
lods
add
mov
jb
dec
enter
and
dec
lret
xchg
add
mov
mov
add
sahf
jae
arpl
dec
ds
jo
out
add
mov
gs
push
dec
addb
repz
inc
popa
jl
les
cmp
mov
adc
sbb
push
cmpsb
jmp
add
mov
or
rorb
push
test
roll
or
dec
cld
sbb
dec
jne
inc
insl
orb
popa
pop
push
xchg
mov
rorl
adc
add
cmp
dec
adc
test
xor
movsl
dec
and
fildll
jno
int3
fucomi
gs
pusha
lods
popa
enter
fidivrs
or
gs
sbbb
call
test
insb
add
data16
ljmp
jnp
pop
inc
add
outsb
mov
lahf
xchg
out
hlt
mov
fsts
cltd
cmp
sahf
mov
add
xor
dec
dec
push
push
push
pop
xor
clc
fwait
loopne
pop
out
add
mov
mov
jmp
push
mov
aad
rcll
sbb
mov
call
nop
fsubrs
pop
call
das
les
mov
imul
mov
nop
cmp
jbe
mov
sub
push
out
call
iret
add
nop
mov
pusha
arpl
sub
xchg
or
xor
pop
ret
mov
jle
mov
mov
push
call
insb
push
xor
add
outsb
mov
pop
mov
clc
pushf
and
imul
test
dec
out
insl
jne
push
inc
imul
add
adc
cwtl
xchg
dec
push
imul
outsb
adc
and
scas
in
inc
dec
cmp
ret
mov
cmp
jne
in
enter
mov
sarl
sub
dec
add
es
shlb
mov
pop
or
push
movsl
add
mov
hlt
cld
add
out
add
sbb
imul
or
mov
adc
push
push
push
mov
sub
push
or
pushf
out
mov
mov
leave
push
fcoml
mov
or
push
loop
jmp
push
push
test
cmp
sub
cmpsl
mov
test
in
adc
je
loope
repz
aas
je
pop
push
cmp
push
dec
mov
nop
sbb
inc
mov
stos
pop
cltd
test
sahf
lea
popa
ret
mov
dec
test
jle
imul
addb
imul
je
inc
ret
fcmovnb
jg
add
movb
dec
adc
add
push
test
push
popa
mov
aam
lea
mov
and
sbb
fdivs
sti
loope
pop
mov
mov
fmuls
jne
orl
in
xchg
lds
adc
sub
int3
in
add
sbb
or
rclb
add
stos
or
mov
insl
iret
insb
dec
inc
pop
xlat
hlt
or
cmp
iret
pop
mov
movsl
mulb
cmpsl
sbb
hlt
mov
jge
xchg
adc
insb
cltd
int
push
aas
adc
xchg
arpl
cmp
scas
fcoml
and
in
pusha
loop
jo
inc
ljmp
imul
pop
je
call
in
mov
push
push
insb
fdiv
sub
and
sub
cmp
adc
sub
cmp
fcoml
xor
hlt
add
or
add
jno
inc
mov
add
sbb
lcall
mov
push
setge
push
lea
jne
loopne
push
mov
jp
push
or
or
inc
or
shlb
pop
mov
clc
in
mov
xchg
sbb
test
sbb
and
rolb
sub
mov
or
out
outsb
push
jnp
int
ss
or
pop
fists
xor
pop
jl
insb
pop
call
adc
cmc
push
ss
out
add
and
add
mov
adc
push
and
and
fwait
add
scas
add
lret
js
and
mov
pusha
inc
push
lret
adc
mov
call
or
sbb
movsl
jecxz
inc
and
mov
cli
jo
inc
push
dec
call
movsl
repnz
or
call
test
dec
xchg
lea
xor
mov
push
and
aam
jo
nop
mov
add
dec
jecxz
sbb
jmp
mov
fwait
mov
test
lock
add
mov
pop
mov
xor
add
lods
mov
inc
insb
mov
lods
lahf
pop
sbb
ja
pop
mov
xchg
testl
push
idiv
fmull
sbb
push
inc
sbb
out
into
pop
in
dec
push
inc
cmpsb
push
dec
or
shrl
add
mov
push
fs
sbb
sbb
mov
outsb
dec
sbb
cs
sahf
or
in
shl
or
jge
sbb
ficoml
xor
push
xor
icebp
inc
psllq
sbb
mov
xchg
aad
cmp
dec
or
add
ret
sub
or
arpl
mov
push
popa
ljmp
mov
dec
loop
cmp
testl
adc
dec
xchg
sbb
cmp
fldcw
sti
mov
pop
lds
and
push
pop
lahf
jecxz
push
mov
or
gs
fdivl
popa
mov
push
shrb
jmp
bound
xchg
or
sar
push
push
hlt
push
inc
cwtl
dec
sub
xchg
cld
push
jns
test
test
mov
addb
fadds
pop
or
clc
ss
lret
adc
ret
stos
cmc
xor
push
mov
fistps
dec
test
and
jne
xor
xchg
sbb
push
sbb
subl
addr16
loop
add
clc
cmp
push
rclb
and
cltd
inc
stos
mov
das
push
push
push
dec
fdiv
rol
jns
hlt
sbb
rorb
out
adc
inc
pop
pop
pusha
push
push
adcl
pop
mov
jp
pop
mov
cs
sub
pop
xchg
movsb
out
add
add
ja
jb
adc
xchg
mov
stc
and
fdivrs
mov
fnstcw
push
jb
call
push
out
sti
int
test
xchg
xlat
rolb
sub
fdivs
xchg
test
add
mov
cs
jmp
push
adc
loop
pop
cmp
sub
fsubrs
and
insl
mov
mov
mov
shlb
add
imul
xchg
add
out
push
cmpsb
ljmp
outsl
mov
cmp
call
xor
in
sub
xor
lock
loop
ret
add
rcrl
je
loope
das
jb
loopne
add
stos
pop
mov
repnz
lea
ret
ds
int3
push
xchg
aas
xor
shll
inc
call
mov
sub
mov
mov
push
fisubrl
mov
mov
lock
adc
pop
mov
pop
mov
lea
lds
enter
movsb
mov
mov
sub
movsl
add
mov
adc
pushf
xchg
int3
and
jg
mov
cwtl
sub
shll
jle
rcll
cmpl
fisubl
inc
mov
pushf
and
in
mov
or
aad
shrb
loope
iret
mov
shlb
push
mov
mov
popa
data16
loope
lock
push
jb
je
ljmp
ljmp
xor
stos
je
pusha
xchg
and
pop
fidivrl
and
and
loopne
jl
sbb
je
mov
add
scas
sbb
call
js
fistpl
or
push
stos
push
and
mov
into
gs
movsb
repnz
adc
in
mov
adc
xchg
pushf
push
add
imul
and
into
rcl
cmpsl
xor
mov
xchg
and
push
loopne
xchg
pop
subl
stos
dec
scas
adc
sbb
cmp
js
mov
jnp
ss
adc
mov
mov
adc
movsl
mov
or
insb
or
and
scas
sbb
adc
adc
xchg
andb
fcomps
push
call
leave
or
and
jecxz
shr
push
adc
dec
sbb
stos
mov
xor
xlat
and
imul
fs
in
push
add
and
jns
pop
or
jmp
enter
inc
inc
fsubrp
jle
jo
dec
sub
push
pop
cltd
stc
xor
xchg
ret
leave
aad
loope
and
incb
mov
sti
repnz
fldenv
in
enter
add
jo
push
or
or
sbbb
pop
jne
xchg
sahf
leave
sub
mov
adc
xchg
lods
mov
fsub
add
mul
jmp
mov
pop
mov
push
adc
stos
bnd
pop
imul
mov
mov
mov
mov
cmp
mov
jne
je
in
arpl
aam
fsub
push
and
loope
insl
fiadds
mov
jge
fadd
iret
add
lea
pop
cmp
addb
imul
or
imul
es
cmpsl
adc
pop
insl
fistpll
push
fists
fimuls
inc
dec
jp
sbb
jne
mov
pop
inc
sbb
jne
lods
lods
push
sbb
mov
ficoms
ret
cmp
xor
sbb
push
popf
punpcklbw
mov
xchg
dec
int3
mov
xor
xchg
cmpsb
adc
jmp
adc
mov
outsb
sbb
inc
test
inc
enter
push
or
je
push
sbb
sahf
jb
out
add
mov
mov
sbb
test
pushf
enter
mov
lods
pop
jns
dec
lods
dec
xlat
push
push
mov
jecxz
repz
test
push
mov
dec
int
ss
push
call
add
loop
push
sbb
dec
adc
cmp
and
adc
add
sbb
add
jne
clc
adc
mov
iret
loop
test
cld
out
mov
arpl
mov
adc
in
inc
pop
dec
xor
in
jne
push
sbb
jo
scas
jns
sub
xchg
pushf
sbb
sbb
ss
cmp
pop
cltd
adc
add
movsb
jl
lcall
push
cld
mov
call
popf
push
mov
es
into
dec
or
ret
ss
mov
dec
inc
inc
and
jno
inc
xchg
add
inc
dec
pop
and
xorb
adc
add
or
je
mov
sub
jmp
adc
or
loopne
outsb
push
or
or
inc
inc
movsb
les
sti
mov
fimull
sbb
xor
stos
inc
fs
mov
fs
add
popa
adc
hlt
lret
xor
sbb
xlat
push
mov
push
cld
lcall
stc
pop
fildll
popf
rorl
push
hlt
xor
adc
test
lds
mov
push
mov
gs
sub
add
mov
mov
xor
lods
cmp
aam
jbe
mov
sbb
xor
xor
xchg
fdivrp
inc
nop
push
add
outsb
sbb
test
dec
mov
jle
jg
cmp
push
loopne
sbb
ja
push
mov
mov
adc
push
inc
add
add
xchg
hlt
repnz
adc
lret
dec
test
hlt
scas
insb
mov
jbe
add
mov
je
bound
jnp
cmp
pop
out
ss
stos
std
jl
and
std
outsl
push
xor
xchg
adcl
xchg
popa
sbb
jo
inc
shr
or
out
inc
cmp
call
sub
enter
mov
jbe
lret
xor
xor
in
adc
push
sahf
cmp
inc
pop
push
sub
lret
dec
pop
dec
adc
std
adc
out
pop
nop
push
ds
mov
cmp
iret
xchg
and
flds
add
cmp
bound
pop
mov
add
cmp
mov
xorb
cmp
insb
pop
or
fcoms
jl
mov
movsl
out
add
sarb
adc
mov
test
mov
or
pop
add
int
sub
out
mov
add
add
orb
ffree
dec
cmp
push
xor
ss
lods
mov
roll
addr16
and
in
loopne
or
sbb
sub
inc
push
push
pop
add
jl
adc
cmp
adc
cmp
jne
sub
xor
hlt
popf
sbb
shll
adc
xor
cld
fcmovnu
and
mov
in
int
push
push
call
pop
jge
pop
sbb
in
es
jo
jne
test
xor
sbb
sbb
xchg
rorb
xor
ret
push
pushf
clc
sub
or
enter
outsl
jne
or
in
std
jmp
or
pushl
add
addb
in
pop
mov
or
jle
or
xor
sbb
loope
mov
mov
pop
lcall
rolb
ljmp
mov
fwait
cmpsb
ds
sub
xchg
mov
test
dec
mov
or
mov
je
in
test
dec
adc
xchg
dec
jno
cmp
xchg
or
jl
pop
leave
push
or
sbb
jg
in
adc
jne
mov
jmp
or
pop
shll
js
or
or
andl
or
popa
add
lahf
dec
cmp
xor
mov
sub
push
jae
mov
push
adcl
xchg
push
addb
jno
inc
push
add
ror
mov
out
pop
aam
in
pop
loope
xchg
ljmp
sbb
lea
shll
cmpsl
clc
bswap
mov
cmp
ss
mov
mov
inc
cltd
cmp
cltd
lock
rcrb
js
mov
mov
ret
loopne
or
or
jbe
mov
mov
cwtl
pop
stos
push
fucomip
pop
fs
cmp
je
cmp
jbe
mov
cmp
xchg
pop
add
mov
nop
shrl
idiv
push
and
std
pop
jbe
test
das
aad
or
jo
jnp
sbb
push
in
mov
test
push
mov
out
hlt
pushf
cli
adc
lea
add
pushf
loop
outsb
es
test
inc
jmp
or
cld
imul
sbb
fwait
add
xchg
test
dec
mov
arpl
ret
mov
lock
jo
andl
paddb
jnp
pusha
enter
jmp
push
mov
inc
mov
call
js
push
sbb
inc
js
cltd
adc
pop
mov
xchg
sbb
push
lds
lods
aad
movsb
jno
pop
inc
adc
push
loopne
adc
add
and
lods
stos
loopne
sti
push
xchg
and
adc
sub
neg
dec
jle
test
push
in
movsl
push
popf
mov
shlb
lds
mov
fs
and
lock
inc
pop
xorb
mov
xchg
aam
xor
sub
push
cmp
jle
push
cmpsb
aam
fwait
leave
stos
in
cwtl
inc
cmp
cld
icebp
jecxz
cwtl
popa
fsubrl
call
push
shll
xor
fisubl
pop
xor
mov
add
ret
scas
ja
scas
mov
lds
push
push
sub
xchg
int3
fildl
sbb
in
add
fadds
or
push
repnz
or
adc
aam
jnp
lods
cs
enter
or
sarl
sub
shrl
and
mov
adcl
mov
jmp
sub
lock
add
xor
mov
dec
jmp
out
sbb
mov
pop
lods
idivl
mov
push
lock
dec
push
hlt
xchg
mov
push
adc
hlt
rep
lret
mov
ss
clc
and
cmp
jns
add
push
sbb
push
pusha
test
je
fst
inc
inc
std
mov
addb
andb
push
ss
subb
ffreep
movsl
jecxz
or
movsb
test
add
sbb
push
xchg
call
jmp
lock
call
dec
sbb
mov
sbb
inc
push
imul
pop
addr16
sbb
shlb
sbb
out
fistpl
dec
cld
jne
into
cmp
push
mov
das
jmp
ss
cmp
jo
add
pop
jae
shll
or
je
xor
dec
decb
enter
outsl
sbbl
mov
aaa
jmp
nop
xor
add
jae
cmc
xor
in
sarl
movb
movsl
cld
lds
mov
mov
and
das
and
push
push
test
dec
setb
push
out
stos
or
aad
pop
xchg
add
movsb
sbb
and
aad
lcall
dec
jl
js
dec
stos
push
push
negb
fistpll
daa
push
dec
xor
lahf
and
fxtract
jmp
pop
xorb
cmp
sbb
inc
or
mov
sbb
cs
pusha
movl
push
cmp
mov
adc
add
mov
or
or
idiv
cmc
pop
xchg
jne
add
push
call
cmp
mov
movsb
jmp
js
sbb
fptan
push
je
and
insb
lret
ljmp
cmc
sbbl
cwtl
jmp
and
int3
or
sbb
jbe
icebp
mov
addb
mov
lret
jle
mov
je
push
stc
sub
xor
or
push
sbb
push
sbb
iret
sbb
jo
or
cmp
cwtl
or
popf
pushf
or
pop
mov
mov
cld
test
pop
ret
and
push
push
inc
mov
jg
sbb
mov
inc
mov
sub
add
lock
push
test
pop
dec
lea
daa
mov
call
or
pusha
pop
gs
mov
icebp
mov
or
pushf
cs
nop
push
sti
push
jl
or
mov
cmp
fadds
dec
jne
movzbl
add
add
or
xor
movsb
gs
les
outsb
adc
jge
pop
push
cmp
jmp
ja
add
nop
sbb
sub
test
jmp
or
ret
in
sidtl
and
adc
cli
sub
into
jno
test
xor
or
and
ja
mov
mov
lea
inc
xor
sbb
jae
inc
pop
rorb
dec
sub
out
or
dec
inc
rolb
lea
xchg
imul
in
outsl
inc
cmc
mov
sub
sub
dec
dec
jge
sub
and
inc
lock
clc
xchg
or
push
push
call
rorb
sub
push
sub
mov
movb
sub
je
xchg
cmp
jne
aad
clc
cmp
mov
je
sbb
dec
and
lahf
xchg
xor
cmpsl
push
aas
enter
ss
jo
push
xchg
rolb
fcmovnb
add
repnz
jecxz
arpl
inc
sbb
mov
mov
sbb
fnstsw
fcmovnb
cli
pop
push
mov
fucomp
push
adc
inc
orl
and
xchg
xor
fildl
les
xor
fldl
sbb
pushf
mov
leave
inc
adc
add
mov
lds
outsl
sub
sbb
sbb
and
adc
pop
fnsave
dec
sbb
insb
sbb
or
push
sbb
and
fst
jmp
adc
inc
rolb
and
or
mov
in
push
pop
popa
pusha
push
enter
nop
dec
pop
call
pusha
mov
mov
xchg
cli
or
or
mov
call
sbb
imul
mov
xor
jmp
cmp
sub
mov
dec
aam
inc
adc
je
jns
cmp
call
and
pop
dec
or
push
jl
pop
int3
pop
fs
hlt
insl
inc
xchg
mov
insl
ljmp
das
jle
fwait
adc
cmp
mov
mov
mov
pop
call
clc
pop
ficompl
pop
jmp
sbb
jp
xchg
or
aaa
je
cmp
jmp
mov
xchg
sbb
ret
aaa
xchg
sbbb
std
mov
xor
lcall
push
into
cmp
xor
jno
dec
dec
jmp
sub
inc
mov
rorb
mov
and
add
sub
xchg
xchg
sbb
je
mov
repnz
sbb
or
adc
cmc
sbb
mov
dec
test
inc
test
mov
and
ja
push
cmp
push
and
inc
fiadds
shlb
sub
aad
pop
push
xchg
push
push
es
cmpsb
out
xchg
add
movsl
push
and
cld
aad
es
into
push
shll
rclb
insl
sbb
dec
push
push
es
inc
lods
lret
xor
push
mov
loop
pop
or
iret
dec
push
mov
or
in
ficomps
arpl
push
xor
nop
push
fwait
xchg
in
mov
sbb
sub
pusha
aam
int3
xor
jbe
push
mull
movsb
xchg
cs
scas
or
imul
mov
lea
push
or
adc
cmp
cli
mov
push
xchg
mov
push
outsl
pop
aaa
pop
aad
mov
mov
xor
test
add
xchg
nop
push
mov
daa
orb
je
inc
inc
addr16
push
in
push
dec
and
xchg
pop
sarb
orb
test
call
dec
call
dec
mov
aaa
and
les
pop
in
adc
addr16
push
xor
sub
dec
sub
sahf
dec
data16
or
cmp
cltd
dec
push
iret
adc
or
lret
call
jl
jmp
add
shrb
jo
daa
or
push
inc
dec
mov
stos
shl
fs
cs
pusha
je
sti
ficoms
je
mov
pushf
es
mov
dec
mov
cmpsl
or
xchg
cmp
jnp
xor
sub
sbb
dec
adc
iret
or
out
clc
xor
sbb
jmp
out
je
out
cli
sbb
outsb
dec
out
adc
ja
and
inc
daa
pop
nop
add
and
lcall
lcall
in
push
out
jnp
inc
mov
or
push
mov
cmp
repz
enter
add
out
sahf
test
cld
or
push
adc
add
xchg
add
pusha
jmp
fs
xchg
xchg
nop
push
mov
and
dec
or
cmpb
xor
adc
loopne
ja
dec
pushf
push
pop
jmp
cmp
je
jb
push
xchg
mov
add
sub
or
testl
lea
test
inc
inc
scas
mov
xor
push
pop
add
sub
in
add
add
sub
jg
fiaddl
jo
cmp
je
xchg
add
enter
mov
pusha
in
test
push
push
add
scas
gs
pop
repnz
inc
or
or
push
sbb
cmp
in
sahf
lret
cld
add
or
subl
or
leave
mov
or
xchg
or
sbb
pop
xchg
or
iret
enter
push
cs
enter
xor
mov
pop
adc
or
sbb
adc
and
adc
adc
adc
push
pop
and
jb
out
adc
adc
adc
push
adc
iret
enter
pop
fisubs
sbb
xchg
sbb
adc
sahf
xchg
sub
fcompl
sbb
pusha
in
mov
fwait
lret
add
je
push
sbb
xor
repnz
ja
sbb
sbb
repnz
pop
lods
lods
pushl
add
add
sub
sbb
push
cmp
xchg
decl
and
lods
pop
sbb
cwtl
insl
cld
popf
xchg
push
in
push
in
imul
jnp
dec
in
rol
adc
in
leave
repz
leave
in
out
pop
enter
out
aaa
jb
cs
sub
call
dec
mov
nop
adc
xchg
inc
scas
in
mov
cmp
cmp
jns
push
jmp
sub
xchg
jmp
push
stos
or
in
in
xchg
enter
aad
in
cmp
mov
jb
iret
out
out
xchg
out
lcall
lock
jb
inc
lock
dec
icebp
cmp
pop
mov
repnz
adc
repz
push
push
jns
std
hlt
hlt
imul
pop
hlt
xchg
std
cmc
cmc
cmp
cmpsl
div
das
nop
xchg
gs
or
imul
scas
in
mov
xchg
sub
cli
cli
add
sti
fdivrp
cld
jle
sbb
push
push
nop
shlb
iret
fwait
xchg
testl
ss
xor
scas
ret
sti
sub
jb
cli
or
sub
or
std
push
nop
xchg
or
fwait
or
jecxz
jecxz
lret
stos
pusha
jecxz
xor
mov
enter
cmp
idivl
mov
and
or
out
sbb
call
mov
jae
and
dec
jmp
scas
ss
jmp
xchg
daa
in
push
and
test
or
jmp
dec
or
push
xor
out
xchg
mov
lock
cmp
cli
or
out
repz
sbb
mov
stc
shll
stos
dec
push
cmp
mov
xor
clc
cltd
pop
repnz
stc
push
stc
movsb
test
stc
sti
sti
jns
push
sbb
xchg
or
cmp
push
lret
sub
clc
mov
in
test
fildll
or
clc
mov
loop
push
xor
loop
arpl
subb
inc
clc
cmp
in
clc
dec
add
stos
or
out
xchg
leave
or
loope
testl
or
jnp
ljmp
mov
notl
sub
nop
pop
testl
inc
mov
mov
pop
repnz
notb
and
inc
scas
ss
inc
repz
push
and
sub
or
xor
adc
cmc
div
jne
repz
dec
xchg
addr16
loope
cmp
sbb
test
cli
cli
subb
xchg
cmp
loope
in
repnz
cli
hlt
roll
pushw
data16
test
push
jo
stos
mov
xchg
gs
push
jnp
dec
loope
loope
jp
pop
pop
and
cvtdq2ps
or
mov
lret
in
pop
das
mov
paddq
add
push
and
repz
xchg
repz
test
insb
repz
repz
or
or
in
push
and
test
in
repnz
or
test
cmp
icebp
icebp
push
in
pop
das
xchg
pop
adc
and
ds
repnz
jb
popa
sbb
add
xchg
cmc
mov
mov
mov
lock
pop
add
pop
cwtl
icebp
or
cs
stc
mov
dec
icebp
xor
movlps
push
adc
or
scas
lock
mov
test
imul
sub
lret
dec
nop
sub
push
sub
stos
test
jge
rclb
loope
mov
xchg
aaa
inc
cmp
cmp
xor
add
adc
mov
lods
mov
add
jne
stc
xor
dec
icebp
dec
add
movsb
xchg
dec
sbb
push
aam
jmp
jmp
and
add
int3
imul
pop
dec
push
nop
push
jns
adc
repz
push
add
adcw
sub
push
cmp
data16
push
repz
mov
mov
rep
sbb
push
push
aad
in
iret
repz
push
dec
outsb
or
xor
jns
movb
xor
movsb
aas
sbb
mov
xchg
movsb
pop
and
lea
inc
cmp
adc
shll
lret
mov
pop
sub
nop
push
cmp
notl
xchg
lods
je
xchg
mov
sbb
jg
fists
pop
xchg
je
push
andb
sbb
jmp
mov
inc
arpl
xor
add
sub
push
xchg
inc
inc
sub
cmp
sbb
mov
add
xlat
pop
adc
inc
jecxz
sbb
pusha
mov
add
sbb
push
mov
add
in
jmp
ret
add
pop
adc
mov
fsubl
call
leave
inc
fwait
adc
mov
sub
pop
insl
adc
ret
sub
adc
inc
xor
or
movsb
movsb
dec
test
dec
cs
inc
dec
jb
movsl
dec
jmp
adc
sbb
dec
js
andl
stos
adc
loop
jecxz
sbb
xor
adc
cmovnp
jmp
aas
cmp
cmp
insl
dec
add
dec
int
jb
push
push
test
addl
adc
call
xor
pop
sbbl
adc
pop
enter
add
add
cwtl
test
pop
xchg
push
add
sub
xor
shl
data16
inc
arpl
arpl
or
dec
xor
and
cmpsl
jo
out
mov
out
sbb
nop
outsb
push
out
adc
xchg
mov
pop
adc
inc
pusha
push
add
sbb
or
push
inc
cmp
pop
out
cltd
test
inc
and
and
adc
cmp
inc
nop
shll
add
push
inc
xchg
add
pop
sbb
mov
leave
mov
push
test
or
icebp
enter
iret
jae
test
loop
test
push
andl
xlat
loop
sub
inc
xor
mov
iret
les
mov
push
fwait
stc
push
jb
andl
mov
pop
leave
add
mov
and
fcomps
and
xchg
push
fwait
adc
es
bound
push
mov
jmp
cmp
sbb
adc
inc
mov
and
mov
xor
nop
out
push
imul
dec
mov
mov
shll
out
pusha
cltd
pusha
adc
aam
inc
mov
push
sbb
add
jl
pushf
pop
and
nop
add
cmpsb
sbb
sbb
daa
or
and
and
xor
and
push
and
and
sbb
in
mov
push
fwait
push
inc
xor
push
fwait
dec
bound
adc
sub
and
dec
fwait
push
inc
push
loopne
ds
or
pusha
or
dec
dec
cmpsl
inc
xor
cmc
add
aam
clc
xor
jmp
mov
pop
mov
out
fs
fwait
andb
cmp
push
push
fwait
nop
mov
dec
hlt
sbb
mov
andl
inc
fwait
or
movsb
js
cmp
fwait
andl
add
and
inc
cmp
nop
int3
rolb
xor
mov
sub
and
and
jecxz
add
pop
outsb
and
test
fwait
test
popf
cmc
adc
fisttpll
aaa
and
loopne
imul
mov
mov
inc
scas
and
mov
mov
xchg
mov
in
jb
inc
nop
cltd
sti
outsb
xchg
pop
inc
cwtl
in
lock
inc
cmp
push
jo
jb
movsl
push
loop
adc
and
data16
imul
add
loope
inc
mov
ss
mov
dec
imul
bound
xlat
jl
out
in
aaa
popa
aas
ss
ret
and
in
pop
mov
xchg
add
add
or
nop
outsl
add
and
inc
outsl
inc
cmp
outsl
inc
fstl
sbb
adc
sbb
adc
fs
nop
outsl
add
dec
sub
xchg
sti
dec
aaa
push
daa
dec
mov
sbb
outsl
xor
xchg
and
movsb
outsl
add
mov
fisubrl
xchg
sahf
xor
mov
xor
push
inc
dec
ja
repz
and
je
repz
cs
mov
ret
or
mov
mov
repz
push
push
sbb
mov
imulb
push
sbb
and
mov
ret
roll
push
loopne
sub
mov
roll
and
push
sbb
dec
mov
push
mov
push
mov
sub
lret
sbb
js
je
loopne
inc
push
sar
mov
aad
sbb
lahf
call
jge
mov
pop
mov
mov
xchg
ljmp
sbb
xor
lcall
dec
negl
in
loope
inc
adc
sbb
mov
inc
stos
lahf
mov
aam
sbb
lret
inc
mov
sbb
je
inc
pop
mov
dec
cmp
pop
mov
sbb
pop
fs
mov
mov
insb
mov
mov
movb
lods
addl
or
sub
sbb
xor
imulb
or
shrb
fstl
pop
mov
mov
rcrb
nop
mov
xlat
ss
pop
or
inc
inc
ja
mov
push
mov
adc
shrb
inc
add
sbb
fs
mov
jno
pop
inc
pop
or
rclb
jne
shlb
dec
pop
xor
dec
mov
dec
orl
xor
cmp
or
aas
push
mov
lret
insl
jo
mov
or
dec
fst
inc
inc
mov
sub
add
or
ja
addl
mov
push
ljmp
adc
jno
sbb
orl
pop
movsl
test
or
fwait
movsl
mov
ds
das
push
sbb
mov
rolb
cmpl
orl
sbb
mov
pop
or
sbb
pop
mov
mov
nop
add
or
mov
ljmp
popa
popa
push
jb
dec
into
mov
sbb
mov
inc
pop
movsl
sub
mov
das
mov
adc
push
sbb
imul
mov
and
call
adc
shl
cmp
out
jne
dec
cmp
aam
cmp
mov
or
dec
sbb
or
pop
sbb
xor
aad
mov
adc
lahf
lock
mov
cmp
jae
test
inc
dec
mov
add
int3
sbb
lock
roll
add
insb
cmp
adc
int
jl
push
in
push
cmp
shlb
add
cmp
mov
fldl
mov
ret
ret
inc
inc
cmpsl
or
mov
pop
or
mov
jbe
jno
or
cmp
cmp
pop
mov
je
imul
mov
inc
adc
repnz
sub
cld
add
sti
lret
outsb
sbb
bndldx
xchg
mov
push
shlb
add
stos
jne
add
sbb
andl
cmp
push
not
sbb
mov
hlt
sbb
ret
cmp
jp
out
and
cmovs
je
adc
les
sbb
mov
sbb
push
mov
js
xchg
dec
stos
or
sahf
xchg
push
jg
bswap
imul
mov
mov
mov
mov
sbb
sbb
xor
cmp
sbb
sbb
inc
push
pop
pop
sbb
sbb
pop
cmp
shlb
cmp
inc
mov
jmp
inc
loope
push
call
popa
push
sbb
lods
cli
leave
sbb
cmp
cmp
cmp
xchg
jo
push
ds
sub
aaa
imul
mov
push
les
movb
daa
imul
mov
mov
inc
adc
mov
in
pop
xchg
xchg
mov
cmp
xlat
or
inc
out
push
mov
dec
inc
inc
gs
dec
cmp
ret
sub
and
mov
push
cmp
lock
push
ret
mov
lea
addl
dec
gs
add
test
stos
ja
pusha
xorl
mov
gs
adc
jl
nop
sub
pop
add
pop
adc
inc
add
and
gs
and
jp
xchg
popa
sbb
add
xchg
xchg
dec
adc
jae
mov
adc
or
rcl
les
push
add
push
push
mov
mov
pop
js
xchg
in
jo
pushf
or
insb
or
pusha
stos
xchg
movsb
mov
pop
jle
or
or
push
and
repz
stc
mov
mov
sarb
push
int
push
dec
jg
add
cmp
push
sbb
push
jg
cmp
test
sbb
fdiv
loop
arpl
das
aam
xchg
ljmp
and
xchg
inc
adcl
push
xchg
mov
pop
push
out
or
and
pop
push
shr
push
jecxz
inc
cmp
or
aam
in
cli
xchg
movsl
push
loopne
mov
fmull
dec
test
or
scas
rorl
outsb
daa
and
shrl
aad
dec
ror
movsb
adc
mov
loopne
roll
subb
subb
shrl
xchg
arpl
inc
addr16
out
or
addr16
pushf
dec
adc
push
js
dec
add
notb
and
mov
inc
lcall
cltd
int
sbb
or
inc
cmp
das
jmp
push
ret
adc
xchg
test
pop
call
fisubs
fisttps
call
sti
dec
addr16
and
inc
mov
or
addr16
cwtl
addr16
mov
dec
addr16
ret
addr16
inc
xchg
ret
aam
into
add
mov
rcrb
xchg
shlb
ja
mov
popa
adcl
rcrb
and
sub
pop
adc
addr16
adc
rorb
mov
fnstcw
add
push
fs
addr16
mov
push
data16
push
mov
xor
loopne
movsb
mov
addr16
and
or
pusha
jmp
mov
imul
mov
jecxz
xchg
cs
call
sbb
gs
fs
cmp
pushf
dec
call
sub
rorb
mov
test
xchg
xchg
push
int3
inc
inc
cmc
andb
xlat
inc
inc
cmc
jno
cmc
inc
pusha
rolb
and
cmc
xor
cmc
dec
and
inc
inc
and
insb
jo
inc
call
jnp
cmc
aaa
and
push
xor
jb
cmc
adc
xchg
shlb
nop
fs
enter
jmp
cmc
mov
enter
adcl
sub
sbb
cmc
aaa
call
daa
cmp
dec
cmc
das
les
push
test
and
jmp
push
mov
sbb
and
inc
jle
push
cmp
adc
add
mov
add
fwait
stc
dec
daa
jb
cli
xchg
movsb
add
incl
jl
je
enter
add
xchg
sbb
xchg
andl
sarb
mov
adc
cmp
mov
loopne
mov
cmp
dec
call
jmp
pusha
addl
pop
or
pop
push
jns
push
cmp
rolb
inc
sub
repz
add
sub
push
or
push
arpl
add
dec
xor
outsb
add
adc
out
pusha
push
add
sub
ljmp
adc
xchg
cmpsl
rolb
push
stos
repnz
cs
mov
fwait
cmp
nop
inc
and
cmp
pop
nop
fimull
inc
mov
jp
mov
inc
call
mulb
out
push
adc
cld
add
fmull
add
mov
xor
test
or
test
movb
pop
and
jp
fcmovnu
mov
add
cmp
inc
jmp
dec
jmp
xor
push
inc
inc
pop
adc
adc
or
add
inc
pop
je
pop
es
xorb
mov
cmpsb
cmp
lods
inc
call
sbb
xchg
jmp
inc
sti
stc
add
mov
jae
loopne
xorb
add
or
rclb
movsbl
mov
pop
and
cmp
leave
or
add
jp
into
call
mov
add
xor
inc
jmp
repz
pop
add
adc
push
xor
inc
popf
pop
pop
push
sbb
sub
cwtl
fistl
sbb
inc
out
in
cmp
mov
inc
mov
lock
mov
xor
pushf
inc
ljmp
fs
imul
call
cmp
aaa
hlt
sbb
dec
add
pop
jb
cmp
inc
mov
lret
fisubrs
jge
pop
fscale
add
push
push
or
inc
jecxz
or
adc
aaa
and
sahf
push
jne
and
inc
mov
cmp
adc
jne
adc
and
pop
and
push
add
ret
push
scas
and
mov
jb
call
dec
cli
sub
xor
ds
xchg
pusha
push
dec
es
fcomip
inc
adc
mov
movsl
out
cmp
pop
scas
push
popl
mov
inc
sub
dec
or
and
cmpsb
xchg
xchg
sbb
add
sbb
pop
add
filds
cmc
add
je
insb
inc
in
jl
inc
int
xchg
mov
add
inc
cmp
ds
in
movnti
inc
pusha
inc
push
fimull
shrl
es
push
outsl
or
jmp
jp
lock
sarb
lock
xor
test
outsb
lret
outsb
sbb
xor
decl
andl
sbb
das
xchg
xor
mov
call
mov
gs
loopne
xorl
xor
aad
mov
rclb
rolb
push
push
inc
jbe
popa
push
xlat
cmc
fists
xor
push
in
add
xchg
and
bt
mov
push
rcrb
mov
call
pusha
sub
mov
xor
ja
push
orl
mov
mov
insb
insb
xchg
sub
jbe
pop
xchg
xchg
pop
add
push
into
cmpsb
pop
addl
mov
xchg
mov
and
jmp
push
call
mov
push
shll
fiadds
je
fdivrl
xor
sbbl
add
or
pop
sarl
negb
jg
pop
and
inc
pop
fnsave
je
sbb
fnsave
je
jg
inc
sbb
sbb
xchg
repnz
ror
xchg
cmovno
inc
inc
push
mov
stos
push
inc
out
inc
mov
and
dec
push
push
jp
mov
mov
mov
add
adc
ficoml
in
ret
or
mov
rcll
mov
sub
or
mov
fbstp
call
bound
jmp
or
adc
rcl
xchg
push
rolb
xor
fs
adc
andl
ss
cmpsb
or
inc
push
nop
mov
pusha
sub
mov
add
insl
call
call
inc
inc
and
sbb
pop
inc
push
dec
adc
nop
rcll
sbb
adc
mov
fwait
mov
push
and
mov
push
or
mov
jle
jb
adc
roll
xor
or
jbe
rorb
pushf
rorb
push
push
push
xor
and
dec
sub
jne
in
mov
and
sub
fcmovbe
sar
hlt
call
daa
pop
pop
mov
mov
dec
call
and
push
ss
or
out
jo
push
test
pop
xchg
mov
xlat
ljmp
lea
je
push
mov
xchg
and
iret
outsl
mov
lods
push
adc
call
call
push
sbb
or
inc
mov
push
inc
and
and
push
mov
orb
inc
pop
cmp
add
and
pop
lock
call
jbe
inc
mov
mov
dec
stos
pop
mov
adc
or
adcb
inc
xchg
mov
push
adc
sub
daa
push
xor
mov
aad
inc
cltd
test
movsl
ret
or
mov
and
jno
into
xchg
sub
push
std
fstl
mov
pushf
es
movsl
mov
and
adc
std
dec
xchg
xchg
shr
lods
dec
movsb
xchg
mov
addr16
mov
jl
ss
dec
imulb
pop
sbb
mov
xor
insb
pop
cmpsl
xor
mov
xor
call
xchg
push
mov
movl
iret
dec
pop
and
addr16
mov
loopne
add
aam
mov
insb
jmp
sub
fimull
ja
mov
aam
pop
lret
shr
push
mov
xlat
test
push
les
hlt
scas
iret
xchg
and
in
adc
mov
adc
mov
in
lds
fs
in
pop
test
push
sub
in
cmp
push
mov
jmp
add
push
sub
dec
mov
cs
in
or
dec
aad
pop
test
lods
in
dec
push
call
nop
mov
add
les
xor
or
rcr
xchg
push
jp
in
adc
ret
lods
outsb
sub
mov
pushf
pop
test
scas
movsb
mov
mov
vmovupd
inc
bound
in
adc
imul
aaa
call
adc
imul
ss
mov
sub
in
sbb
inc
sub
fxch
shrb
fdivrs
sbb
in
std
xor
les
in
ds
adc
inc
sub
ja
in
adc
fcomi
dec
loop
in
jp
push
sub
in
inc
dec
inc
sub
in
mov
adc
in
test
add
in
push
xchg
mov
sbb
or
jmp
push
and
add
and
in
lcall
bound
jb
in
mov
loopne
xchg
in
test
mov
arpl
in
adc
inc
in
push
and
cmp
mov
call
inc
enter
mov
in
mov
outsb
mov
adc
jmp
out
test
test
lahf
jg
adc
xchg
sbb
in
and
adc
or
fs
adc
sbb
adc
imul
sbb
ret
fistpl
dec
shrl
int3
lds
sbb
sub
call
in
xor
mov
outsb
das
push
mov
lds
xlat
in
or
or
ficomps
inc
sub
mov
adc
mov
and
inc
and
ret
push
int
cmp
dec
lret
and
mov
or
mov
mov
xchg
ret
mov
lret
fdivl
or
pop
ret
shrb
sbb
mov
call
or
call
inc
add
aas
sbb
rcrb
aas
test
sbb
add
stc
mov
pop
and
daa
loop
cmp
jno
sub
and
xor
scas
popa
enter
cmp
sbb
pop
dec
dec
pop
xor
outsb
sbbb
aas
sub
stos
sbb
sbb
mov
aas
popa
call
jge
xchg
mov
rsm
aas
fiaddl
pop
push
loop
xor
cmp
or
xchg
call
aas
jae
cwtl
and
fwait
mov
icebp
push
loope
mov
jo
nop
rcrb
fidivs
jns
test
in
push
or
cs
or
pop
jb
lahf
sbb
add
je
repz
add
or
push
push
loope
cmp
shlb
nop
nop
popf
add
or
jns
xchg
fwait
imul
mov
fwait
call
push
fwait
jle
add
push
lcall
shlb
fld
and
pop
adc
inc
testb
fwait
inc
inc
inc
ja
cmp
inc
inc
inc
das
fistpl
aad
fsubp
pop
add
daa
andl
imul
pop
or
insb
dec
pop
mov
dec
inc
push
add
jp
inc
pop
push
and
and
sbbb
inc
jle
orb
pop
dec
inc
add
xchg
pop
inc
pop
mov
pop
enter
push
pop
or
xor
inc
repnz
imul
sbb
pop
movups
mov
push
dec
inc
data16
mov
xchg
pop
rcl
adc
push
push
pop
sub
test
or
adc
call
testl
push
add
div
mov
imul
pop
in
enter
mov
xchg
or
jmp
nop
test
dec
sbb
or
rol
lock
xchg
inc
inc
in
ret
mov
adc
xchg
rolb
inc
cs
ret
dec
enter
push
mov
or
cmpsb
sarb
pusha
cmp
push
and
ret
aas
sbbb
ret
pop
lahf
push
or
ret
push
and
dec
xchg
bound
push
add
add
dec
push
fs
loop
outsl
xchg
nop
test
nop
ret
mov
dec
sub
pop
dec
inc
ret
push
mov
dec
ret
pop
adc
ret
and
jge
dec
ret
je
fstps
or
jo
mov
xchg
or
xchg
stos
pop
and
sub
aaa
and
and
popf
pop
dec
inc
ret
xor
or
in
inc
dec
aam
or
inc
or
aas
add
aaa
unpcklps
das
shlb
stc
push
jge
call
mov
adc
call
xor
clc
lret
xor
repnz
call
cmp
loopne
call
rcrb
and
xchg
das
jg
dec
call
movsb
lods
xchg
das
pop
decb
push
call
pop
call
in
call
push
jne
pop
mov
je
gs
pop
jl
sbb
pop
inc
push
mov
test
xor
xchg
dec
in
es
sbb
cwtl
add
gs
lret
movsb
in
imul
adc
adcb
mov
xchg
out
shlb
xchg
mov
dec
in
jle
jae
push
in
call
in
inc
aam
lock
mov
clc
cmp
xchg
dec
sbb
adc
add
add
leave
or
leave
xchg
out
rcrb
or
loope
adc
pop
sub
sbb
sbb
xchg
lret
and
test
mov
lret
xor
cmp
movsl
jb
push
xchg
push
xchg
push
inc
gs
dec
cmp
pop
mov
push
adc
in
sbb
pop
add
pusha
divl
loopne
and
sub
sbb
and
or
mov
cwtl
out
push
test
les
inc
out
call
in
je
data16
js
mov
sbb
jb
xorb
test
daa
int
push
and
sahf
xor
cli
cmp
call
and
int
test
inc
lods
sahf
adc
pushf
mov
cli
mov
push
ja
pop
dec
mov
and
pop
push
or
xchg
orb
mov
cmpsl
or
movl
loopne
insl
dec
jae
mov
testl
rcrb
insl
jae
push
mov
push
adc
and
sbb
lret
dec
inc
pop
pop
mov
lds
add
jne
fcompl
in
test
pop
xor
add
jmp
adc
shlb
out
or
aam
inc
call
stos
add
dec
xor
or
lods
add
sbb
dec
fsubrs
gs
adcb
xchg
cli
xchg
push
xchg
pop
mov
or
call
push
add
sub
pop
call
mov
jae
inc
aam
pop
sbb
shrl
cmp
xchg
movsb
inc
shlb
test
addb
pop
adc
jmp
hlt
push
mov
sti
xchg
push
dec
sbb
roll
es
adc
jmp
mov
and
mov
cs
xor
or
mov
inc
mov
mov
push
das
sbb
mov
stc
mov
pushf
mov
push
jge
lret
roll
pop
push
or
jb
inc
jno
sbb
inc
nop
mov
add
test
dec
cs
mov
in
mov
adc
or
mov
mov
movsl
add
inc
sbb
inc
fbld
fisubrs
cmpsb
ret
xchg
or
sbb
push
xchg
fs
push
push
sbb
ljmp
aam
mov
stos
cmpsl
push
adc
test
or
test
test
bound
imull
cmp
xchg
or
mov
popl
dec
jnp
jg
pop
insb
xor
test
cmp
sub
inc
aam
test
mov
mov
stos
in
push
pop
mov
les
gs
xor
ffree
dec
xor
push
daa
xor
xchg
xor
sub
dec
pushf
xor
fwait
and
inc
sub
icebp
xchg
xchg
in
je
cs
jge
push
call
dec
dec
aaa
mov
push
xchg
shlb
fdivl
inc
xorb
sub
xor
subb
shlb
mov
add
sub
rorb
subb
jp
xor
ja
xor
rcr
xor
and
ja
daa
xor
call
movsb
je
dec
xor
xchg
add
or
add
cwtl
mov
shl
shlb
mov
movsb
xor
loope
paddsw
shlb
fcompl
sbb
mov
lods
fwait
shlb
dec
add
and
sub
sub
ja
pop
push
fwait
out
rorl
inc
fwait
and
adcb
adc
push
test
sti
call
mov
fwait
test
mov
or
push
fwait
lods
or
inc
movsl
fwait
xor
lods
add
sub
push
cmp
inc
fwait
dec
js
inc
call
push
fwait
dec
jl
mov
sub
mov
and
push
nop
mov
nop
call
mov
xchg
push
shlb
ja
mov
sahf
adc
adc
cmpsb
cmpsl
push
xor
rcrb
jmp
adc
ret
mov
or
mov
ret
mov
or
and
and
pusha
dec
xchg
sub
pusha
lea
test
rolb
loopne
adc
xor
add
jo
mov
inc
inc
jp
or
jno
xchg
repz
sbb
or
adc
mov
inc
mov
and
jmp
push
fldenv
xchg
jae
negl
call
fidivl
lea
xchg
jecxz
and
mov
js
xchg
out
aam
inc
xchg
adc
or
xchg
roll
out
mov
or
cwtl
adc
add
cmpsb
push
ret
popa
pop
mov
xchg
pop
inc
cmp
cmp
movsl
fs
sbb
and
sub
push
mov
or
rcll
xchg
xor
pop
or
xor
xchg
xor
mov
adc
and
shl
je
push
xchg
xchg
mov
loopne
jmp
addb
insb
mov
add
push
jo
sub
notb
adc
sbb
je
sbb
int
out
push
inc
psubsb
dec
push
mov
shrb
mov
or
sub
sbb
fisubs
xchg
jo
and
and
roll
sbb
mov
das
mov
rol
or
add
call
inc
icebp
add
fisttpll
pop
push
je
addb
add
incl
mov
ror
loop
movsb
adc
addl
loopne
mov
pop
and
inc
jb
inc
adc
call
fildl
inc
jo
add
inc
dec
es
das
aaa
pop
xor
inc
or
sub
add
inc
jno
enter
adc
cs
inc
and
pusha
shlb
out
pop
scas
addl
push
pop
mov
inc
jnp
pop
sahf
cmp
pop
mov
pop
dec
push
push
in
adc
pop
jmp
fldl
xchg
adc
dec
loop
dec
nop
mov
add
or
nop
popa
das
mov
test
roll
jnp
addl
pop
mov
roll
mov
or
sub
in
cmp
mov
mov
jecxz
push
adcb
cmp
mov
insb
mov
add
jg
arpl
and
dec
xor
lahf
fs
and
leave
rcrb
push
push
add
fs
sbb
xor
and
movsl
xor
sub
cmp
and
in
enter
mov
rcll
mov
xchg
mov
fwait
enter
push
push
sbb
fs
adc
push
pop
xor
xor
push
sub
add
sbb
cmp
and
push
mov
pop
dec
xor
cmp
pop
pop
mov
loopne
dec
es
out
add
inc
cmp
and
mov
subb
imul
cmp
inc
jmp
xchg
or
mov
rolb
sub
or
arpl
cwtl
mov
sub
mov
out
call
mov
push
dec
dec
neg
mov
fnsave
out
out
pop
pop
fstl
jmp
or
dec
cltd
inc
loope
scas
es
or
insb
movsl
hlt
rclb
adc
sbb
sub
add
scas
or
pushf
jne
fistpl
adc
add
imul
inc
sub
jae
xor
and
sbb
add
sub
stos
add
andl
fwait
repz
adc
insb
outsl
stos
imul
ret
repnz
xlat
fwait
push
mov
sbb
imul
and
jbe
mov
lea
call
xor
cwtl
clc
adc
jb
insl
adc
sub
sub
inc
sub
nop
jge
test
and
fistpl
ret
sti
or
sti
lcall
adc
xlat
ret
mov
push
dec
addr16
and
stos
sub
leave
and
addr16
push
addr16
xchg
xorb
repz
mov
and
cmp
add
repz
add
loope
ss
mov
cmp
cmp
nop
dec
pop
mov
test
js
cltd
cmp
cltd
adc
inc
sbb
mov
cmp
dec
cmp
jo
add
push
sahf
mov
and
mov
dec
push
fwait
push
stos
addr16
xchg
retw
and
rolb
or
out
or
push
mov
addl
cmp
xlat
sub
cli
and
sbb
cmp
sarl
fadd
scas
sahf
repz
repz
push
cmpsl
stc
cmp
sub
or
sbb
imul
mov
pushf
pop
push
lods
push
fdivp
cmp
mov
inc
push
idivb
cmp
movsb
push
push
sahf
out
sahf
xchg
jl
push
inc
ss
fidivrs
je,pt
push
jns
cmp
sbb
repnz
fidivrs
mov
fidivrs
jle
push
pop
into
sbb
incb
add
es
repz
and
loop
sbb
repz
mov
sahf
cmpsl
stc
pusha
sbb
pushf
scas
sarl
lret
or
and
repz
sub
pop
data16
cmp
repz
sahf
lods
mov
out
cmp
decb
ss
inc
movsb
icebp
cmp
shr
jb
in
repz
outsb
jle
sahf
mov
daa
rol
data16
loop
clc
adc
sub
cmp
aaa
je
iret
repz
out
push
push
cmp
adc
cmp
jnp
daa
pop
mov
jbe
add
fldt
jbe
push
cwtl
cmpsl
insl
mov
mov
das
out
iret
dec
test
xor
add
push
jbe
push
scas
test
pop
rol
lahf
test
pop
xchg
inc
xor
daa
jo
dec
dec
adc
pop
pop
rol
movsl
jle
sub
xchg
test
push
sub
sti
fimull
gs
dec
push
dec
ja
jb
sub
push
sub
push
push
ja
fbstp
out
or
xchg
fldenv
daa
js
jb
push
fwait
xor
xor
mov
sub
fistpl
aaa
mov
sbb
mov
rcll
addr16
bound
pop
push
out
xor
inc
or
xor
mov
fisubrs
sub
dec
cmp
pop
or
inc
and
mov
int
imul
and
xor
xor
inc
or
dec
add
mov
jo
arpl
pcmpeqd
cmp
imul
mov
push
outsb
call
outsl
mov
pop
data16
fwait
test
mov
cmp
jnp
fidivl
subb
aas
ret
je
inc
jne
and
arpl
adc
call
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
and
and
pop
inc
insl
or
adc
cmp
xor
xor
jae
mov
dec
imul
test
jae
inc
jne
outsb
je
jecxz
mov
sti
pop
inc
js
add
lret
divb
xor
sub
sub
sub
sar
jg
inc
inc
xor
xor
xor
jge
xor
xor
in
push
cmp
inc
stos
xor
ss
xor
cmp
fdivl
cmp
xor
sbb
outsl
clc
inc
inc
xor
mov
xor
jg
andb
shufps
jnp
jne
test
cltd
leave
orb
cmp
xor
push
xor
or
fbld
inc
push
and
inc
aaa
adc
xor
inc
add
pop
jl
add
and
mov
push
shll
sti
or
inc
push
dec
and
cmp
ss
pushf
push
adc
insl
xor
add
outsl
jo
jne
mov
dec
add
mov
dec
ret
xchg
sub
pop
inc
dec
pusha
or
ss
imul
outsb
dec
and
push
inc
push
xlat
jle
out
inc
out
adc
push
sub
out
jge
out
cmp
in
mov
fs
mov
movd
fsubr
cmpsb
push
hlt
cs
pop
adc
xchg
insb
adc
sbb
xchg
add
jg
rcll
jo
outsl
xor
mov
mov
movsb
inc
je
push
lea
les
mov
lods
push
inc
cmp
add
sbb
sbbb
gs
lret
add
aad
fistpl
push
inc
or
mov
arpl
insb
mov
push
pop
mov
xchg
and
outsb
ret
push
mov
mov
push
es
push
es
and
sbb
cmp
add
or
loope
cmp
insb
or
pop
pop
add
loopne
lret
push
inc
and
data16
cmp
stos
inc
out
push
dec
push
scas
mov
mov
and
inc
push
imul
jmp
push
imul
or
js
daa
scas
in
hlt
push
scas
je
dec
fs
imul
push
xor
xchg
imul
fistpl
test
sbb
das
aaa
dec
movsb
jmp
dec
jae
outsl
push
pop
arpl
or
cs
push
push
push
add
ja
xor
push
shlb
push
mov
and
popa
imul
inc
outsb
popa
ds
sbb
nop
faddl
outsb
pop
add
and
aas
xchg
adcb
adc
data16
add
rolb
mov
add
adcb
and
push
ja
jbe
cmp
sbb
push
dec
rorb
cmpsl
test
xor
out
and
xor
add
adc
push
aas
out
ret
fadds
lahf
out
sahf
adc
orb
or
add
fdiv
xor
mov
das
push
adc
repz
and
push
sbb
imul
sbb
repz
sbb
std
sbb
push
das
out
mov
nop
cld
and
lcall
jns
stc
jp
jns
out
push
cld
fdivr
mov
out
xchg
adc
fwait
cmp
out
les
popa
sub
mov
or
jl
and
scas
push
xor
xchg
and
rcrb
add
popa
mov
pushf
out
ds
cmp
adc
or
popa
add
adc
repz
addr16
cld
or
in
into
repz
int3
les
xor
out
dec
nop
mov
mov
jns
insb
push
cmp
pop
mov
dec
jns
repz
inc
cmp
xor
jns
out
sub
and
sahf
out
sahf
sbb
adc
or
cmp
out
add
cld
or
hlt
repz
repz
iret
repz
movsb
nop
jo
xor
sahf
out
ds
int3
mov
insb
jns
out
inc
sub
adc
repz
repz
push
fcom
les
js
sub
aam
out
lcall
iret
jnp
jl
add
call
cwtl
add
loop
jl
mov
mov
pop
inc
bound
xor
sbb
repz
inc
bound
nop
js
lret
xor
fidivrl
sub
inc
inc
add
adc
shr
mov
cmp
dec
mov
pop
and
sub
adc
xor
adc
sub
adc
cmp
mov
sub
dec
sbb
xor
cs
cli
out
pop
mov
xchg
dec
scas
mov
xor
dec
dec
mov
ja
push
jno
daa
inc
push
jmp
and
dec
movsb
pop
and
mov
or
jae
or
adc
sbb
sti
add
lcall
sbb
js
shrb
mov
add
lcall
shrb
inc
mov
dec
ret
jns
xor
push
xor
cmp
adc
and
add
movl
xorb
mov
cmp
pop
jne
lret
jbe
rcrb
or
push
je
cmp
imul
mov
movsl
dec
ds
imul
pop
jb
pop
push
or
loope
xor
jo,pn
bound
pusha
cmp
xor
jo
jnp
filds
push
insb
das
inc
xlat
lods
dec
push
das
outsl
jl
lods
pop
mov
ja
lahf
pop
lods
or
mov
loopne
leave
jae
add
mov
mov
nop
or
and
jo
sub
mov
dec
push
mov
pop
dec
enter
aas
jg
fmuls
in
push
cmp
insb
xchg
aas
sete
adc
test
jae
ljmp
add
mov
jecxz
in
scas
pop
rcr
addb
cltd
ss
lcall
xchg
mov
push
lret
les
mov
and
inc
or
push
popf
jl
sbb
jo
in
push
aas
sbb
jg
cmpsb
jg
mov
popa
dec
and
or
mov
adc
and
mov
jb,pn
jecxz
enter
pop
dec
push
adc
cmp
sarl
jnp
out
shl
adc
dec
arpl
data16
insb
adc
fs
imull
dec
mov
xor
dec
jecxz
sahf
loopne
daa
imul
ja
leave
sbb
dec
mov
push
push
xor
fcmovbe
mov
jbe
pop
jnp
jmp
add
inc
je
dec
pop
adc
nop
imul
mov
ltr
std
stos
push
jb
push
lcall
sbb
push
and
clc
outsl
dec
insb
add
push
push
add
push
outsl
ja
xor
cmc
xchg
lcall
lret
gs
sub
add
ja
sbb
movsb
and
sbb
rol
dec
inc
repnz
sarl
test
lods
or
in
push
fucomip
cmc
sub
mov
add
mov
push
jb
or
mulb
insb
jae
shrl
arpl
add
outsb
push
add
push
imul
add
push
mov
jae
outsb
iret
mov
push
jae
push
popa
sbb
and
outsl
push
push
call
jb
inc
mov
pop
fmuls
out
adc
cmp
push
jae
inc
addb
push
jno
mov
push
add
and
es
dec
add
pop
rcl
dec
mov
inc
push
mov
push
push
sbb
das
push
mov
dec
or
cmp
push
jo
jb
js
out
fidivrl
imul
xchg
testb
cmpsl
cmp
push
lods
cmpsl
xor
mov
sbb
imulb
xchg
adc
mov
inc
and
pop
jnp
inc
pusha
inc
and
mov
push
inc
sub
and
in
lret
push
cmpsb
xchg
xor
testl
sub
adc
inc
add
adc
push
fbld
jne
ret
fisubs
gs
or
flds
movsb
rolb
fistpl
and
es
pop
push
ret
sarb
cmpsb
mov
dec
inc
dec
sub
cmpsl
jno
push
nop
pop
ds
inc
sub
xor
pop
dec
xor
dec
mov
or
xor
jecxz
cltd
mov
call
sbb
out
mov
fidivrl
and
adc
jecxz
inc
push
call
popf
lea
lahf
outsb
xor
adc
and
or
dec
add
shlb
push
sarl
pop
outsl
sub
dec
mov
shrb
inc
add
stc
add
push
lcall
orb
mov
add
push
dec
dec
dec
bound
pop
pop
pop
add
jns
insl
mov
arpl
lds
mov
lret
fimull
outsl
pushf
dec
sarb
xchg
dec
and
clc
aad
roll
push
adc
add
sbb
cmp
testb
sbb
lock
jecxz
mov
add
xchg
popa
xorb
push
js
loopne
mov
sbb
mul
adc
mov
inc
jmp
sbb
das
push
mov
dec
inc
dec
pop
or
xor
jb
aas
inc
cmc
or
inc
sbb
out
mov
jno
jmp
sbb
xor
xor
mov
jp
mov
pop
jnp
stos
iret
add
jo
add
add
outsl
inc
movsl
rcl
pop
mov
fs
xor
sub
daa
dec
ds
xor
cmpsl
aam
pusha
push
jo
jno
std
mov
add
inc
add
or
mov
in
jmp
or
ljmp
dec
imul
add
mov
int
sbb
lret
xchg
into
out
outsl
cli
mov
fwait
inc
cmpsl
add
push
mov
jo
jo
imul
push
push
test
sub
imul
jns
bound
clc
add
inc
jae
adc
sbb
jmp
push
je
ja
add
jno
outsl
xor
and
add
xor
xchg
sub
out
jno
rol
out
into
insb
lret
pop
mov
sbb
add
cmp
cmp
push
enter
dec
sbb
push
sahf
ret
fbld
lret
fbld
jae,pt
rclb
ficomps
mov
push
popa
sbb
push
std
fwait
xchg
and
push
and
inc
cwtl
insb
adc
jecxz
addb
out
push
pop
in
mov
sbb
jae
lock
and
mov
add
pop
pop
push
insb
push
sbbb
xchg
pusha
idivl
sub
iret
icebp
pop
and
pop
lcall
scas
std
jns
add
inc
mov
mov
add
add
xor
pop
gs
cmp
lods
dec
cmp
inc
xor
sti
fsubrl
push
subl
ret
int3
jo
pusha
out
push
xor
add
pop
hlt
mov
rcrb
push
add
adc
inc
adc
lods
dec
push
mov
rcrb
xchg
adc
out
pop
adc
adc
add
cmp
sarl
lock
iret
repz
mov
out
iret
lods
test
pop
mov
out
xchg
nop
mov
jo
pusha
push
pop
push
iret
repz
inc
cmp
and
sbb
cmpsl
stc
cmp
cld
in
lock
jnp
sub
push
loopne
fcom
cmp
repz
sarb
xrelease
cmp
repz
xor
and
adc
sahf
cmpsl
stc
cmp
cld
in
hlt
in
in
sahf
out
fmul
mov
jns
fwait
pop
xchg
push
mov
js
push
ds
repz
inc
sub
and
or
jmp
sub
ja
inc
ss
adc
adc
push
xchg
dec
xor
divl
jmp
testl
andl
incl
pmuludq
xchg
xchg
adcb
lock
loopne
scas
push
nop
mov
cmp
data16
ja
movsb
andb
aaa
add
pop
add
jp
sub
jbe
add
dec
inc
push
neg
inc
add
mov
jg
fs
inc
dec
pop
addb
inc
mov
mov
lcall
xor
adc
push
scas
push
push
imul
test
arpl
dec
mov
subl
subb
insl
mov
pop
jo
add
in
les
jo
cmp
and
push
adc
and
nop
jne
pop
push
insl
adc
mov
sub
inc
xchg
pop
cmp
insl
jbe,pn
and
scas
outsl
cltd
sbbb
ds
je
rclb
pop
rcrb
insl
mov
jbe
push
arpl
imul
sbb
cmp
fisttpll
pop
and
and
addl
jbe
jb
add
or
imul
mov
popa
insb
into
mov
add
sbbl
push
pop
in
popa
mov
lahf
ds
inc
add
and
mov
inc
pop
pop
adc
in
aam
add
xor
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
pushl
sub
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
pushl
xor
xor
dec
xor
xchg
shll
inc
ss
ss
pushl
add
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
mov
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
decl
cmp
ret
add
push
lock
idivl
call
call
xor
xor
xor
push
xor
xor
pop
lock
js
popf
xor
xor
xor
xor
xor
xor
jmp
jmp
xor
xor
xor
xor
out
xor
loopne
pushl
jge
mov
xor
xor
fidivl
scas
xor
stos
dec
cld
call
xor
jecxz
call
xor
pushl
jno
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
jmp
cli
add
or
loopne
inc
cmp
loopne
jmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
push
cmp
cmp
push
adc
cmp
cmp
cmp
cmp
pop
cmp
nop
hlt
cmp
jae
mov
pushf
cmp
cmp
jo
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
clts
lods
aas
out
jmp
repz
andl
xor
xor
xor
xor
jl
mov
mov
xor
pushl
sub
xor
dec
xor
insb
xor
mov
mov
mov
xor
xor
xor
xor
xor
incl
push
xor
pop
xor
xchg
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
push
aaa
push
sub
ss
clc
lcall
xchg
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
clc
dec
cmp
cmp
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
adc
jbe
pop
cmp
clc
push
or
cmp
pop
xor
push
xor
and
jmp
xor
xor
xor
xor
xor
xor
ret
xor
aas
jg
xor
lcall
clc
xor
xor
test
sar
xor
xor
out
in
xor
scas
clc
xor
ljmp
lods
cmp
pop
lods
cmp
cmp
mov
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
cmp
test
loop
cmp
std
cmp
cmp
push
lcall
and
cmpb
ds
aas
jmp
cmpsb
pusha
outsb
xor
xor
mov
pushl
sbb
xchg
cmp
cmp
mov
mov
mov
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
mov
aas
push
mov
cmpb
aas
sarl
aas
in
out
out
testb
loop
xor
pop
sub
jp
jmp
mov
scas
xor
xor
xor
cmc
jg
or
and
xor
xor
mov
xor
xor
lcall
jge
std
xor
cmpsb
data16
ss
add
or
aaa
and
aaa
loopne,pn
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
sbb
pushl
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
decl
push
mov
cmp
cmp
sbb
push
cmp
inc
clc
clc
pop
cmp
dec
cmp
popa
cmp
cmpb
cmp
jg
jg
stos
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cld
stos
dec
mov
jbe
adc
sub
xor
cmp
pushl
adc
inc
cmp
push
cmp
pop
cmp
jb
js
cmpl
mov
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
mov
ds
push
cmp
jae
mov
cltd
call
cmp
jp
jg
cwtl
ds
ds
jecxz,pt
out
ds
das
aas
cmp
daa
sbb
pushl
aas
mov
movsl
aas
stos
aas
mov
mov
push
shr
fwait
rclb
xor
lcall
sahf
xchg
les
fidivl
in
push
jg
xor
xor
xor
xor
xor
mov
xor
xor
xor
clc
jg
pushl
mov
xor
xor
mov
jl
cmpsl
xor
xor
mov
jno
xchg
xor
xor
xor
cmpsb
pushl
xor
mov
pushf
xor
ret
aaa
xchg
aaa
fwait
sahf
cmpsb
je
jg
mov
bound
scas
cmp
aaa
shrb
cmp
cmp
mov
jmp
data16
dec
pop
decl
mov
push
cmp
jg
in
sbb
xor
or
add
pushl
pop
xor
xor
bound
data16
push
outsb
aaa
jb
jbe
xchg
ja
jg
js
jge
cmp
cmp
cmp
cmp
cmp
cmp
jle
and
mov
cmp
ja
lahf
scas
cs
clc
xor
xchg
aas
push
mov
jg
mov
mov
xor
xor
xor
cmpl
fiadds
aaa
ret
add
jmp
repnz
or
cmp
pop
cmp
jge
clc
jmp
out
cmp
cmp
jbe
xchg
cmp
cmp
cmp
std
fbstp
cmp
cmp
fdivrs
push
aas
jne
rorl
or
mov
fwait
add
mov
shlb
xor
dec
or
repnz
or
aas
xor
divl
pop
xor
fdivr
sar
inc
loop
ss
dec
ss
outsb
notb
ss
pushl
fidivl
in
and
cmp
cmp
cmp
mov
pop
mov
sbb
cmp
mov
push
imul
cmp
test
mov
call
mov
cmp
dec
cmp
cmp
std
lcall
jae
aam
fnstsw
jecxz
imul
mov
cmp
cmp
pop
sarb
adc
cmp
orb
stos
lcall
and
push
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
jne
push
andl
sar
test
xchg
xor
xor
pop
xor
xor
aas
cmp
or
xor
xor
xor
xor
xor
mov
xor
clc
mov
ss
lcall
ds
dec
aaa
pop
aaa
js
mov
stos
decb
lock
fidivl
out
in
aaa
cli
aaa
mov
cmp
mov
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
jbe
cmpl
cmp
cmp
decl
adc
aas
pusha
aas
cmpb
aas
fdivrl
loop
out
out
mov
push
sub
jne
aaa
rorl
cmp
mov
pushl
jne
jg
xchg
xor
xor
xor
pop
cld
pop
daa
pop
hlt
xor
xor
ljmp
jg
adc
adc
sbb
sbb
sub
sub
nop
cmp
mov
jmp
int3
cmp
cmp
cmp
ljmp
push
out
xor
aaa
inc
clc
incl
cmp
inc
xor
xor
lcall
decb
call
xor
int3
mov
xor
xor
decl
or
and
and
sub
sub
xor
fbstp
sarb
inc
cmp
cmp
cmp
sub
xor
fidivs
inc
mov
js
jl
cmpb
cmp
pop
adc
push
mov
push
loope
fmulp
cmp
mov
cmp
cmp
stos
stos
scas
ds
cmp
inc
lock
dec
cld
push
jg
ljmp
pop
stos
sbb
and
and
sub
pop
cmp
cmp
xor
cmp
inc
cmp
jg
xchg
dec
cmp
pop
cmp
cmp
insb
cmp
je
pop
incb
cli
jl
cmpb
push
mov
nop
cld
pop
pop
lcall
mov
aas
inc
loope
jmp
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
sarb
ja
aam
fdivrs
loopne
clc
jbe
push
filds
xor
xchg
xor
xor
xor
pushl
inc
xor
xor
cwtl
xor
xor
xor
xor
es
push
popa
cmpsb
cmp
sbb
fadds
add
xor
pusha
xor
pusha
cmpsb
and
fimuls
xor
jmp
shlb
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
call
mov
clc
ss
add
add
or
or
adc
adc
aas
cli
pop
ret
aaa
and
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
call
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
push
nop
aaa
xchg
aaa
cwtl
into
mov
decl
aaa
mov
mov
aaa
enter
and
and
aaa
fdivs
fcompl
in
jno
inc
pop
out
aaa
hlt
xor
aaa
hlt
add
or
loopne
adc
adc
sbb
cmp
ja
mov
mov
jmp
cmp
pop
sahf
jl
cwtl
cmp
cmp
pop
idiv
sub
cmp
cmp
cmp
cmp
push
cmp
rclb
test
mov
mov
cmp
lods
cmp
mov
cmp
sub
pusha
add
or
jle
jg
mov
jne
call
sahf
repnz
lahf
das
pop
decb
es
add
out
out
out
jmp
adcb
lret
icebp
es
or
pop
mulb
xchg
aaa
adc
sub
or
add
inc
ds
lret
push
addb
lcall
add
ret
push
mov
fiadds
fdivs
push
add
mov
fimuls
sbb
aam
and
add
imul
sub
sub
and
dec
sahf
out
mov
lcall
sahf
add
fists
nop
pop
dec
test
adc
fbld
or
inc
push
dec
xchg
jge
repnz
sub
cmpb
daa
mov
inc
cmp
xlat
sbb
orb
out
fnstenv
or
and
push
shrb
dec
cmpsl
and
out
std
enter
jae
dec
jecxz
jne
cmp
sbb
pop
adc
push
push
ret
jae
sbb
jne
push
mov
jmp
mov
mov
and
push
or
ret
mov
test
push
loopne
adc
lea
jmp
push
push
push
cmp
je
xor
daa
pop
addl
orb
pushl
cmpsb
and
insb
int3
jge
push
or
movb
mov
cmp
sbb
repnz
inc
pop
xchg
and
in
stos
mov
pushl
popa
jg
scas
sbb
mov
and
and
inc
jge
xor
shlb
sbb
sub
pop
inc
push
je
cmp
outsb
sbb
adc
jp
add
pushf
or
xor
bound
mov
outsb
and
or
jb
lea
call
pusha
mov
out
lea
jge
cmp
mov
je
pop
inc
lahf
xchg
fildl
cmpsb
fs
lods
add
adcl
imul
loope
jae
aaa
mov
mov
or
nop
add
adc
lea
push
outsl
inc
jp
push
pop
jb
cmpb
pop
jbe
mov
jp
js
sub
xor
icebp
imull
pop
or
inc
push
push
call
jmp
mov
add
add
roll
enter
pop
add
rclb
jp
das
lahf
fidivs
inc
cmp
andb
call
sub
and
xor
inc
cmp
js
add
mov
sub
call
es
add
test
loop
roll
xchg
call
frstor
and
or
inc
fists
jmp
lret
sarb
or
push
dec
add
mov
adcb
clc
int3
mov
mov
pushl
imul
push
push
loop
pusha
lock
adc
or
adc
cmp
ret
add
add
fmuls
sbb
or
addb
arpl
push
dec
ljmp
sbb
dec
cld
sub
or
jge
jo
data16
lahf
cmp
xchg
or
xchg
ret
add
add
inc
adc
xchg
mov
mov
gs
aad
or
cli
iret
mov
mov
lea
out
fldt
or
add
jge
xchg
add
xor
push
lret
sbb
xchg
inc
hlt
das
add
loope
psubsb
or
or
leave
sub
jbe
mov
or
insb
sub
add
repz
mov
xor
and
js
loopne
fsubr
pusha
xor
aaa
nop
and
loope
ffreep
or
test
sarl
lret
call
push
adc
xchg
js
xor
add
push
xchg
popf
imulb
rorb
push
mov
push
sbb
inc
and
ret
shll
push
movlps
imul
int3
and
loop
adc
pop
add
or
add
adc
pop
pop
hlt
inc
test
shlb
sbb
fmull
or
sarb
sub
adc
dec
jmp
pop
call
mov
orl
or
mov
cmpsl
outsl
adc
cmp
or
or
nop
test
mov
test
xor
rclb
sahf
sbb
add
push
out
or
lock
sbb
jb
sar
jbe
ror
push
sub
jl
pop
xor
ret
add
stos
psubsw
add
sub
dec
inc
or
cs
ror
or
scas
mov
jno
cmpsb
xchg
mov
cli
pop
icebp
lods
xlat
call
add
outsl
js
addl
ja
add
push
hlt
loope
insl
mov
push
ja
sub
sbb
dec
jo
dec
and
add
movsl
adc
or
xchg
fcmovbe
lret
ret
dec
add
pop
push
in
fdivs
jns
sub
add
or
sub
add
adc
pop
push
push
or
loope
sub
xchg
sub
push
adc
rcrb
xchg
das
adc
push
pop
shrb
push
das
adc
pop
aaa
adc
sbb
add
ja
das
and
push
sbb
js
adc
pop
int3
mov
mov
pusha
orl
fwait
and
mov
sbb
jo
mov
xor
jmp
and
das
xor
jmp
mov
cmp
mov
cmp
or
cmpsb
mov
fildl
and
xchg
xchg
pop
test
add
pop
rorb
orl
cmpsb
sub
mov
xacquire
rclb
addl
and
pmaxsw
or
push
arpl
rolb
mov
insb
and
lock
dec
sub
gs
and
in
outsb
or
and
mov
movsl
fwait
mov
pushf
orl
test
xchg
mov
cmp
push
push
mov
sbb
daa
add
daa
pop
inc
jmp
rcll
sub
clc
push
dec
or
pop
pop
movl
add
xorb
xchg
add
fadd
ja
xchg
xor
sbb
jne
ja
sub
mov
add
push
xchg
ret
iret
rorl
push
pop
inc
jp
cwtl
das
adc
mov
mov
ret
and
dec
pop
xchg
in
dec
or
mov
push
andl
leave
mov
or
adc
push
pop
cmp
push
inc
sbb
call
mov
and
call
imul
pop
xor
add
adc
pop
lahf
dec
mov
adc
mov
push
dec
scas
fcoml
dec
mov
pop
adc
in
call
xchg
sub
mov
cmpsl
popf
mov
push
dec
jo
push
call
es
mov
or
xchg
sub
es
adc
push
es
inc
loope
dec
xchg
pop
dec
push
call
divl
arpl
dec
fdivr
mov
dec
or
or
dec
in
ret
push
push
or
dec
adc
cmp
and
adc
or
and
inc
and
stc
inc
inc
or
sbb
mov
sub
inc
inc
jg
mov
push
or
lods
sbbl
or
adc
push
das
or
sbb
adc
or
inc
push
jbe
push
mov
or
sbb
push
xor
repnz
mov
sbb
mov
sub
add
or
cmp
add
inc
mov
dec
push
or
and
imul
xor
mov
adc
inc
outsl
dec
inc
mov
out
dec
mov
andb
fwait
or
aaa
ds
jae,pn
pusha
pop
inc
pop
or
pop
mov
dec
call
pop
leave
cwtl
or
rcll
call
mov
adc
pop
jo
mov
enter
es
jecxz
mov
ss
xchg
adc
pop
xchg
pop
andb
ljmp
jnp,pn
imull
nop
nop
push
adc
rolb
add
hlt
pop
lea
insl
les
cmp
repz
fs
pop
push
dec
inc
pop
mov
pop
imul
add
jmp
cmp
movsb
mov
push
sbb
lret
mov
adc
and
out
in
out
xor
pop
nop
xor
push
push
jl
or
pop
sub
orb
push
shrl
pop
mov
push
sahf
out
push
loopne
lock
add
cs
idivl
push
pop
cmp
int
inc
sub
xor
inc
pop
or
add
dec
fists
sbb
or
sbb
and
sbb
and
rolb
push
jns
adc
jb
jns
sbb
sub
enter
or
inc
inc
daa
cwtl
and
jns
sub
or
dec
movsb
dec
or
inc
pop
pusha
push
test
or
ret
xchg
hlt
push
hlt
test
dec
mov
ret
cmpsl
ret
mov
add
out
xor
cltd
inc
sbb
xor
enter
sub
sub
jb
shrb
sub
sub
sub
cmpsb
imul
push
sbb
movsb
sub
sub
nop
xor
sub
sub
cs
enter
sub
xchg
cmpsb
jns
sub
sub
sub
sub
sub
and
sub
sub
sub
sub
and
or
jne
push
jb
neg
push
cmovns
sbb
or
inc
adc
mov
add
push
aam
jp
fcoml
scas
push
je
mov
mov
and
subl
cmp
je
inc
fistl
push
jge
stc
push
scas
or
push
lret
rolb
ret
insb
push
sahf
sbb
mov
jle
or
adc
inc
adc
inc
psubsb
push
push
movsb
fwait
mov
rolb
call
xchg
sbb
out
inc
inc
sub
and
rolb
mov
inc
adc
ja
call
pop
and
je
inc
sub
rol
inc
jo
ds
lds
push
adc
pop
pop
xchg
in
nop
mov
inc
mov
xchg
pop
mov
cmp
shrd
inc
rol
add
outsb
and
and
inc
aas
and
ja
addb
test
inc
lds
je
addb
mov
cmp
cmp
and
mov
jmp
jb
sub
out
rcl
andb
rclb
cltd
nop
sbbl
mov
sub
nop
add
pop
fisttpll
hlt
dec
sbb
fists
pop
mov
xchg
cmp
jns
mov
and
jns
pop
and
cmp
stos
mov
jge
xor
jns
lahf
dec
fcoms
daa
adc
mov
push
js
adc
and
xor
adc
test
mov
cmp
lcall
mov
or
data16
lock
mov
sbb
and
xchg
jns
andb
jbe
outsl
sbb
in
jns
sbb
daa
mov
adc
pusha
sub
sbb
dec
and
cmpb
sbb
imul
dec
jns
xchg
in
fwait
dec
jns
ljmp
icebp
sbb
mov
push
add
jp
lods
dec
aam
jne
inc
cmpsl
popf
shrb
fbstp
push
mov
or
pop
xchg
adc
xchg
jmp
outsb
cmpsl
push
ja
pop
cmpsl
push
fs
jne
push
rcrl
cmpsl
test
call
les
cmpsl
sbb
inc
outsb
imul
sub
push
push
dec
dec
mov
and
xchg
cmpsl
push
vcvtdq2ps
add
enter
sbb
adc
loop
mov
cmpsl
inc
mov
pop
lcall
push
sub
sbb
cmpsl
les
fbld
mov
cmpsl
test
jne
fsubs
push
ja
jbe
push
scas
inc
mov
ror
dec
call
call
add
daa
loopne
shlb
inc
inc
xchg
pop
mov
lea
inc
sbb
mov
mov
xor
nop
jnp
in
mov
je
adcb
push
mov
inc
ret
mov
pop
test
mov
sbb
mov
adcl
or
mov
ret
mov
test
jne
push
nop
cmpsl
or
mov
sbb
dec
or
pop
ret
mov
pushf
mov
mov
adc
and
inc
movsb
dec
nop
out
inc
cmp
pop
enter
push
cmp
and
push
mov
sbb
icebp
addr16
nop
mov
ja
xchg
repnz
push
jl,pn
mov
into
and
andl
test
inc
movsb
mov
or
mov
inc
dec
nop
outsb
bound
andb
shl
test
mov
nop
fidivs
pop
mov
adc
and
xor
or
imul
mov
mov
into
sti
push
mov
shlb
mov
js
or
push
push
mov
mov
sbb
fs
cmp
fs
cmp
jno
fs
sbb
xchg
dec
nop
dec
or
mov
dec
mov
and
arpl
mov
mov
xor
mov
rcr
mov
mov
mov
stos
mov
and
outsb
es
scas
call
jae
mov
or
jmp
xorb
je
shlb
add
mov
adc
bt
jo
mov
test
aam
scas
sbb
ljmp
into
or
shll
aad
test
and
cmp
mov
insl
lcall
inc
jb
aad
aad
ljmp
in
xor
jb
enter
pop
rcr
adcb
call
into
or
pop
push
gs
fwait
aad
inc
inc
push
cmp
add
inc
cmpsl
or
sub
xchg
inc
push
inc
or
xlat
cwtl
dec
add
cmp
or
shll
in
pushf
sub
add
in
pushf
cmpb
xchg
mov
bound
jmp
je
or
popl
xchg
pop
das
mov
mov
sub
imulb
outsb
xchg
pop
jb
fisttpll
dec
add
mov
inc
ret
add
xor
call
xor
daa
mov
ja
jp
enter
sub
lock
mov
cmp
popf
cmpsl
dec
lock
add
push
inc
jb
jb
push
call
int3
pop
faddl
pop
mov
seto
add
and
fistl
mov
arpl
sub
pusha
in
fs
add
hlt
push
dec
loope
add
cmp
lahf
call
fs
das
shl
xor
pusha
leave
inc
pop
sti
loopne
out
rclb
mov
mov
xchg
fcoml
nop
scas
pop
movsb
xchg
push
mov
sub
adc
cwtl
xchg
xchg
dec
cmpsl
or
xchg
add
fsubrs
jge
push
add
push
cmp
sbb
mov
xor
mov
stc
ret
mov
xchg
dec
mov
mov
leave
mov
xor
xor
push
stc
sub
stc
adc
lret
rcrl
and
mov
stc
stc
xchg
inc
sbb
call
mov
call
mov
adc
xchg
and
sub
cld
mov
fnsave
xlat
mov
jb
mov
ljmp
nop
daa
scas
jmp
movsl
sub
and
fmull
add
bound
jne
pop
xchg
ret
pop
jmp
jmp
jne
out
push
dec
mov
jne
jl
iret
xor
jecxz
sbb
lods
jae
call
cwtl
addr16
mov
aas
mov
or
or
icebp
aas
xor
adc
sbb
adc
xor
iret
xchg
rep
nop
aam
adc
mov
adc
call
sub
inc
insb
xor
sbb
ret
mov
pop
scas
sub
loop
mov
inc
bnd
sbb
test
jle
ret
call
stos
mov
and
fcoms
pop
shl
je
xor
or
cld
push
cs
and
xchg
js
pushf
dec
mull
lret
adc
stos
shll
push
push
roll
xor
and
rorl
shrl
scas
mov
cmp
rcr
fldl
stos
sarb
mov
cmpsl
or
pushf
mov
imul
ljmp
sbb
pop
adc
or
lret
shrl
push
and
jnp
shll
mov
sbb
sbb
add
fld
xor
jb
jne
xchg
flds
bound
shrb
or
sbb
pop
inc
adc
test
cmp
push
push
test
and
push
jo
adc
xchg
lds
pusha
sub
adc
push
mov
sbb
jno
xorl
inc
lahf
repz
popf
mov
adc
hlt
xchg
pushf
mov
pop
fdivl
daa
mov
ret
or
mov
xchg
adcb
inc
pop
or
adc
and
adc
add
pusha
sub
aam
ret
pusha
lahf
adc
or
pop
into
jp
flds
verw
aam
cmp
xchg
roll
fstps
inc
sahf
pushf
sub
sbb
popf
add
lods
adc
dec
lret
loope
movsl
shrb
xor
push
push
pop
add
add
adc
add
imul
cmp
mov
fstpt
shrl
imul
xchg
movsl
movsl
push
adc
das
push
sub
lcall
xchg
outsb
sbb
outsb
pop
sbb
and
adcb
fs
push
inc
rolb
mov
mov
adc
dec
aaa
push
adc
sub
mov
mov
dec
imul
jno
imul
pop
jne
push
call
inc
fstl
adc
adc
sub
lock
mov
bound
adcb
sub
jne
leave
push
aad
dec
sbb
ljmp
rcll
fcoml
push
lret
jmp
adc
jmp
dec
in
test
dec
iret
addr16
aaa
and
dec
in
pop
aad
and
fucompp
sbb
mov
inc
lea
dec
mov
xchg
sbb
test
das
lcall
mov
aad
mov
mov
mov
lds
push
mov
insl
lret
imul
jmp
lds
out
fcmovnb
ffree
push
or
pop
aas
xlat
push
xor
scas
movsb
loope
gs
test
xchg
sbb
cmpsl
pusha
dec
sahf
in
push
jne
lods
inc
loopne
mov
pop
frstor
push
and
xor
negb
lds
aad
inc
pop
aaa
add
test
push
orl
lods
call
outsb
pop
aam
out
xchg
adc
cli
fcoml
pop
push
gs
dec
push
mov
iret
push
call
add
ficompl
xchg
in
mov
jp
pop
push
pop
push
call
sub
fisubs
sub
jmp
sbb
push
dec
sbbl
fsubl
pop
out
insl
xor
mov
cmpsb
outsb
push
pop
lods
sub
cmp
or
xlat
out
add
pop
sarb
adc
adc
lret
xor
aam
hlt
aam
pop
inc
xlat
sub
push
adc
push
and
inc
aaa
test
pop
dec
jecxz
jne
jp
loopne
push
mov
movsl
adc
dec
inc
cmpsl
enter
pop
test
enter
jle
dec
or
jo
in
iret
shlb
xchg
pop
fs
pusha
adc
inc
pop
cs
adc
dec
adc
pop
call
sbb
dec
leave
in
loopne
mov
xchg
leave
jecxz
and
push
or
xchg
mov
lret
pop
xchg
xchg
pop
pop
or
push
bound
pop
mov
inc
xchg
xchg
xchg
xchg
mov
sub
xchg
mov
or
xchg
mov
call
repnz
fdivrs
repnz
mov
mov
mov
repnz
pop
cmp
pop
mov
nop
sbbl
mov
enter
sbb
mov
cld
mov
jb
sbbl
sarb
inc
pop
mov
lods
mov
and
xchg
mov
push
jb
xorl
mov
enter
dec
mov
in
xor
pop
jb
mov
and
cmp
stc
mov
nop
sbbl
mov
enter
mov
lods
mov
pop
cmp
mov
jne
push
pop
mov
push
mov
sbb
and
xor
cmp
test
fmull
or
mov
inc
xor
clc
shll
and
or
mov
shlb
or
xchg
mov
add
jb
int3
and
sbb
int
dec
or
or
mov
and
xor
adc
cmp
xchg
daa
int
or
stc
mov
xor
out
xor
push
xor
dec
cli
cmp
mov
dec
cmp
mov
add
nop
or
lock
inc
daa
add
add
or
inc
addl
in
xor
mov
add
js
and
sbb
sahf
jns
inc
mov
xor
sub
mov
sub
popl
mov
and
dec
enter
shl
sub
push
mov
call
and
dec
leave
mov
lcall
lcall
call
inc
adc
pop
rolb
sbb
test
mov
jg
mov
call
add
push
cwtl
sbb
or
out
fs
pop
add
data16
rcr
cmp
into
adc
enter
sbb
test
pop
xor
dec
out
fs
xchg
push
das
cmp
in
mov
pop
mov
out
hlt
hlt
out
out
adc
mov
out
xor
push
out
cmp
js
mov
mov
xchg
jl
pop
sbb
push
shlb
dec
out
and
mov
fs
jb
xchg
inc
xchg
out
adc
sarb
cmp
out
mov
movsl
sbb
movsl
mov
xchg
outsb
pop
out
pop
sbb
enter
xor
push
out
adc
out
call
inc
out
enter
idiv
mov
xor
jmp
arpl
fldenv
je
xchg
inc
lea
mov
sub
imul
out
mov
mov
jo
rcrb
xchg
cmp
mov
pop
jno
lret
fucompp
mov
fs
mov
fs
nop
out
cmp
out
sub
out
sub
test
in
cmp
push
pop
rorb
into
mov
je
out
in
jbe
mov
pop
out
test
fwait
addb
and
outsb
or
cmp
shlb
push
addl
sub
xchg
shr
xchg
push
shlb
je
in
shl
lcall
push
sbb
adc
insl
or
and
int3
rcll
fdivs
pop
jge
jbe
cld
sub
adc
sub
cmpsl
jno
enter
mov
nop
and
movsl
je
shl
nop
pop
lock
push
jge
push
mov
insl
fdivr
xchg
mov
dec
sbb
xchg
inc
sbb
rorb
jge
adc
rcrb
lock
jno
loope
sbb
xor
sub
subb
adc
dec
loopne
movsl
rcll
cmpl
xor
dec
sbb
pop
lods
dec
xchg
nop
out
and
and
dec
aaa
mov
pop
out
inc
xchg
pop
mov
inc
xchg
mov
out
cmp
fisttpl
and
lret
xor
loopne
movsl
out
add
stos
data16
xchg
cmp
sbb
mov
sarb
ja
popa
nop
test
out
pop
sbb
in
xchg
nop
movsl
leave
xor
jno
fs
std
out
arpl
out
enter
popl
popa
ja
out
sub
push
decb
mov
std
ds
dec
shll
inc
test
xor
enter
adc
lock
popa
fistps
sbb
mov
xchg
pusha
or
add
pop
xor
cmpsb
push
pop
mov
jmp
out
mov
push
pop
sbb
out
nop
movsl
stos
cmc
or
and
scas
out
pop
push
add
add
cmp
out
dec
sbb
adc
nop
movsl
roll
ljmp
inc
out
cltd
lock
add
or
pop
cmp
out
sbb
xchg
nop
movsl
ret
push
repnz
inc
xchg
out
loopne
loopne
sbb
rcrb
out
inc
cmp
jp
add
cmp
out
sbb
push
call
into
cmp
mov
cmp
sahf
int3
cmpsl
push
xchg
nop
mov
addl
inc
sbb
inc
scas
inc
xchg
out
andb
test
test
jg
mov
out
push
sub
pop
sbb
sbb
rclb
movsl
rcll
out
stc
xor
jecxz
movsl
and
lds
mov
jno
inc
sbb
je
out
fimuls
pop
sbb
mov
mulps
mov
xchg
or
jne
loope
adc
nop
and
jb
push
lods
adc
push
pop
out
rcll
mov
hlt
out
cmp
jp
out
mov
loope
xchg
and
out
out
inc
ret
out
out
mov
outsb
and
inc
out
pushf
mov
addl
int3
add
add
pop
push
repz
out
inc
inc
push
repz
cmpsb
push
dec
push
jnp
or
iret
mov
mov
pop
dec
mov
sbb
mov
addb
mov
inc
add
jmp
lock
or
inc
pop
lahf
inc
movsb
mov
push
pop
fmuls
push
addr16
lcall
inc
cwtl
or
cmp
aaa
cwtl
adc
shlb
popf
in
mov
sub
clc
subb
lahf
push
cltd
imul
test
mov
mov
std
pop
or
int3
mov
and
jne
fisttpl
dec
repnz
push
xchg
mov
jbe
jmp
fdivrl
mov
dec
xchg
fistps
cmpsl
push
cs
pusha
jl
out
jo
aam
add
repz
rcll
push
bound
repz
jp
xchg
cmpsb
mov
cmp
out
add
out
push
fs
cwtl
out
sahf
out
mov
fdiv
iret
repz
or
push
sub
dec
pop
cmp
repz
jo
cwtl
scas
imul
lock
stos
and
jns
out
inc
push
pusha
insb
popf
out
sahf
jbe
xchg
movsb
mov
add
gs
fnstenv
cltd
lea
adc
adc
push
int
push
or
mov
sub
mov
movsb
sbb
iret
dec
cli
push
fcoms
sbb
out
imul
cmp
jl
push
lea
mov
mov
inc
insl
inc
punpckhbw
xor
add
add
add
mov
push
mov
or
add
test
fcoml
mov
push
adc
push
adc
int
jns
xchg
sbb
sbb
xchg
jl
repz
sbb
sbb
mov
rcrb
push
pop
sahf
mov
and
and
js
jns
int
jns
jp
cmp
repz
aas
or
pop
push
push
mov
jo
pop
add
nop
inc
inc
cwtl
nop
fwait
ret
popa
add
aas
push
xchg
repz
insb
or
xor
sbb
imul
xchg
hlt
call
aam
enter
out
sarb
out
mov
out
sahf
nop
mov
sahf
out
js
jo
push
fs
pop
pop
push
sahf
out
sahf
push
dec
dec
inc
inc
cmp
sahf
out
cmp
sub
sarl
sbb
or
nop
in
repz
fadd
movsb
test
pop
idivl
add
push
shlb
pop
dec
dec
inc
dec
repz
xor
clc
mov
int3
cmp
repz
test
jns
cmpsl
stc
in
enter
mov
lea
push
add
in
mov
stos
add
mov
push
enter
xor
test
push
inc
push
mov
aaa
xor
push
popa
addr16
push
add
inc
pop
push
cmpsl
or
xor
sub
push
xor
ja
lds
shlb
js
inc
andb
inc
mov
pop
jnp
mov
mov
fistpl
push
and
aas
pop
mov
xchg
pop
add
push
daa
insl
out
jge
and
push
mov
add
lods
inc
add
imul
test
mov
mov
test
xor
pop
push
mov
addr16
fisubl
loopne
ficompl
and
test
lea
mov
add
jb
mov
jb
or
adc
mov
cmp
mov
inc
pop
jge
sbbb
push
pop
or
inc
pusha
jae
push
out
aas
sbb
dec
int
jbe
lahf
add
stos
dec
mov
dec
pop
je
aas
cmp
pop
xor
int3
xchg
pop
adc
cmpsl
push
ljmp
clc
push
dec
shl
int
jno
movups
jg
pop
pop
mul
or
unpcklps
fistpll
cmpsb
mov
xchg
and
mov
push
nop
imul
shr
insb
xchg
jne
mov
mov
movsb
nop
and
aaa
add
aam
inc
in
inc
test
jl
outsb
pop
sti
fiadds
iret
jb
mov
loop
jbe,pn
ud2
jno
lahf
cmpsl
cmp
sub
xchg
movsl
add
and
mov
sub
mov
jle
dec
mov
fiaddl
cmc
adcb
sbb
cld
andb
pop
stos
pop
and
dec
jecxz
aas
out
mov
xchg
outsl
jne
push
push
arpl
xchg
jno
imul
sub
and
loop
sbb
insb
sbb
pop
xor
cmp
xor
adc
pop
inc
ljmp
jecxz
sbb
inc
or
or
sbb
or
sbb
stos
or
mov
and
and
adc
pop
sub
mov
mov
ret
mov
orb
push
call
and
jae
mov
sbb
sbb
push
jmp
sbb
push
shll
aas
push
sbb
add
or
inc
mov
mov
sbb
imul
sbb
add
sub
rcl
insb
lods
mov
push
imul
dec
sbb
sbb
sub
les
aaa
icebp
es
into
leave
add
inc
add
and
push
sbb
sub
lahf
or
inc
pop
sbb
inc
out
xorl
push
pushf
sahf
out
sahf
cwtl
xchg
nop
mov
je
pop
push
pop
dec
iret
repz
inc
inc
cmp
xor
cmp
repz
sub
sbb
ds
repz
add
xchg
hlt
xchg
repz
in
push
in
enter
iret
mov
mov
jecxz
jl
je
cmp
jnp
insb
push
fs
push
dec
mov
iret
repz
inc
push
and
add
in
xchg
iret
repz
push
enter
test
iret
repz
cwtl
nop
mov
js
jo
pop
inc
iret
repz
sahf
cmp
push
adc
lock
out
lcall
gs
out
xchg
insb
pop
add
or
xchg
rclb
sbb
mov
shrl
push
push
les
jno
aad
arpl
add
mov
push
push
ja
jecxz
add
mov
xchg
cs
call
leave
pop
jg
in
pop
test
leave
pop
jbe
adc
xchg
outsb
stos
lcall
cs
mov
or
mov
push
fistpll
sub
push
and
pop
adc
incl
rolb
add
push
and
push
sbb
pop
xor
xor
inc
xor
mov
xor
xor
sahf
xor
rcr
add
jg
xor
xor
xor
aaa
fbstp
arpl
sub
cmp
cmp
cmp
mov
push
cmp
andb
xchg
rorl
cmp
mov
cmp
jecxz
cmp
sahf
fdivrs
bound
cmp
xchg
fwait
popa
loop
cmp
mov
incl
ds
ds
data16
clc
incl
aas
fs
imul
aas
jecxz
call
mov
loopne
stc
and
sub
xor
jecxz
inc
and
lds
out
nop
rorl
loope
out
xor
mov
int
repnz
xor
xor
and
daa
xor
cmp
inc
sbb
pushl
push
xor
xor
jno
ja
lea
xchg
xor
adc
xor
xor
xor
push
test
mov
xchg
xor
xor
adc
sbb
sbb
cld
inc
xor
sub
xor
mov
or
xorb
xor
xor
ss
xor
xor
xor
xor
xor
jg
mov
mov
mov
mov
xor
xor
xor
pusha
cld
pushl
xor
and
sub
insb
ss
xorl
fbld
jecxz
out
push
jp
aaa
cmp
insb
mov
popa
cld
cmp
leave
xchg
jg
jbe
cmp
sbb
sbb
and
and
incl
xor
jp
test
mov
mov
repnz
cmp
pusha
cld
test
pop
dec
cmp
test
stos
push
arpl
jg
lock
mov
ss
dec
cmp
cmp
cmp
add
idivb
cmp
cmp
sbb
mov
add
pop
cmp
mov
add
int3
cmp
ds
mov
outsb
ds
cmp
dec
xchg
cmpsb
lds
repnz
cmp
and
inc
xor
xchg
jno
push
xor
xor
jle
xor
jecxz
push
xor
dec
xor
aam
fiaddl
xor
xor
cmpsl
jl
mov
repz
outsl
test
lret
jecxz
pusha
cmp
add
mov
fs
add
outsb
pop
jecxz
aas
xchg
sub
cmp
inc
js
jle
xchg
push
sar
xchg
cmp
cmp
jecxz
mov
in
adc
call
inc
dec
ss
cmp
mov
push
dec
idivb
xchg
inc
and
cmp
dec
push
and
jne
jnp
subb
push
std
jg
cmp
cmp
adc
cmp
es
in
jmp
pusha
fsubl
ljmp
stos
xchg
xor
inc
jp
mov
insb
cmp
cmp
cmp
cmp
cmp
sub
incl
xchg
and
cmp
push
ds
ds
clc
sbb
ljmp
aas
and
dec
aas
push
aas
or
outsb
xor
fnsave
out
fidivl
test
clc
xor
inc
clc
cmpsb
sbb
daa
loop
jg
mov
pop
lret
xor
xor
xor
sar
fwait
jle
data16
xor
mov
test
jecxz
sbb
cli
xor
adc
fildll
loope
xor
aaa
jnp
pop
ret
mov
or
cmp
inc
adcb
icebp
ret
cmp
xchg
cmp
lret
sub
cmp
mov
mov
pop
cmp
xchg
cmp
inc
sub
jle
pop
cmp
ja
or
cmp
cmp
cmp
cmp
cmp
icebp
dec
push
or
cmp
cmp
and
out
nop
pop
cltd
cmp
cmp
cmp
mov
sbb
aas
sub
pushf
jmp
ret
orb
xor
lock
xor
out
xchg
jno
adc
xor
push
cmpsb
xor
xor
imul
sub
jns
mov
out
push
adc
sbb
das
ss
mov
mov
aaa
xchg
jno
mov
pop
cmp
cld
lea
out
push
mov
lret
cmp
cmp
cmp
lea
mov
fisubl
cmp
jo
jg
cmpsb
cmp
cmp
cmp
test
lahf
cmp
gs
aas
mov
scas
pusha
add
jg
test
cmp
xor
test
xchg
push
xor
bound
fbstp
icebp
push
push
push
roll
push
mov
xchg
mov
hlt
hlt
xor
ss
aaa
fimull
cmp
cmp
cmp
cmp
scas
or
jo
mov
xor
ret
popf
xor
adc
outsb
and
inc
ret
xchg
into
sub
cmp
jb
sub
outsb
mov
lcall
cmp
xor
outsl
xchg
adc
and
out
or
xchg
xor
ja
icebp
add
cwtl
xor
mov
mov
sbb
xchg
mov
or
movsb
jle
call
in
popa
je
pop
hlt
push
add
and
test
stc
int3
out
sub
push
add
mov
xor
push
mov
nop
push
and
mov
mov
fcmovb
xor
int3
xor
push
and
loopne
lret
sub
lock
mov
test
xor
xor
adc
pop
jne
sbb
cmp
inc
xor
incb
sbb
push
xor
xor
icebp
aad
xor
insb
push
je
push
je
mov
xor
cwtl
xor
xor
mov
rol
dec
call
xor
call
xor
add
in
mov
add
jle
jecxz
inc
xchg
cmp
xor
loope
inc
push
push
sbb
shll
xor
add
mov
pop
pop
daa
cwtl
out
fdiv
dec
pop
cmp
cld
stos
xor
xor
inc
xor
xor
pop
loopne
mov
xor
xor
jnp
jecxz
lea
loop
xor
fistps
pop
xor
xor
and
inc
shlb
ficomps
ret
push
and
std
jno
push
fmull
out
xor
xchg
mov
push
dec
xor
data16
sub
pusha
jo
xor
jb
xor
jo
jo
cld
cmp
inc
xchg
dec
xchg
push
call
pop
jl
pop
xor
mov
jo
js
jl
xorb
sub
xor
xor
xor
xchg
rcrb
andl
ficoms
leave
clc
addl
xor
arpl
xchg
mov
jo
nop
ljmp
aam
add
fdivr
mov
dec
inc
dec
inc
cmp
jo
neg
push
clc
add
add
or
jg
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
decb
dec
add
or
pop
sbb
adc
adc
outsb
xlat
push
adc
add
data16
or
mov
add
rolb
or
xchg
add
lods
lret
andb
sahf
add
les
aam
push
add
pop
xchg
mov
sub
push
jb
imul
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
sti
and
bound
js
xor
inc
inc
jne
mov
arpl
adc
sbbl
or
or
adcb
sbb
movsb
xor
push
lahf
add
arpl
scas
pushf
sbb
test
into
add
loopne
add
pop
scas
cmp
fdivr
pop
pop
adc
push
adc
pop
popa
jno
and
adc
add
lods
or
xor
adc
jo
lock
and
or
adc
xorb
scas
fiaddl
or
js
push
sbb
dec
jo
or
fcomip
jg
add
lds
cld
cli
and
mov
inc
jnp
test
cld
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
mov
or
push
stc
or
xchg
jg
or
in
insb
sub
addr16
out
or
push
push
xchg
add
repnz
inc
lock
scas
cld
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
ja
sbb
mov
push
pop
mov
pop
pop
mov
popl
movb
xchg
sbb
sti
ret
scas
adc
mov
xor
lods
scas
xchg
test
aam
and
lcall
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
mov
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
pushl
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
imul
cmp
push
fists
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
add
clc
xchg
jmp
sbb
add
inc
sbb
mov
out
pop
jb
mov
or
push
mov
mov
inc
fwait
sbbb
mov
dec
jp
push
gs
sti
sub
hlt
push
add
stc
loope
mov
sar
andl
stos
jbe
cmp
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jg
movl
clc
jb
adc
push
lock
lods
jp
sti
push
mov
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
jg
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
int
fwait
in
loope
fisttpll
out
aas
std
cli
push
push
push
ljmp
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
ljmp
dec
mov
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
sar
call
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
inc
xor
jmp
push
mov
pop
hlt
lret
movsb
add
jmp
jg
lea
jg
gs
std
xorb
jg
aad
mov
js
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
push
ljmp
jno
or
sarb
std
pop
les
cli
mov
mov
inc
jmp
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
jae
call
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
decl
xchg
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
pop
lock
call
push
movsb
xchg
or
mov
stos
dec
lods
xor
jg,pn
cmpsl
in
andb
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
call
test
mov
mov
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
add
jae
shrb
shlb
out
aas
stc
incl
mov
xchg
jge
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
insl
rol
adc
and
lahf
fmull
enter
testb
mov
mov
pop
mov
sub
in
pop
decl
mov
dec
incb
fisubrl
aas
mov
or
mov
sbb
inc
or
pop
jg
add
push
mov
jg
mov
aad
test
mov
mov
mov
push
jbe
push
sbb
stos
icebp
pop
incb
addl
jno
adc
push
inc
jecxz
sbb
sarl
idivl
clc
xorl
mov
imul
sbb
std
stos
dec
push
in
aas
mov
fsubrl
push
push
and
add
push
clc
xchg
pushf
mov
movswl
push
or
and
mov
adc
inc
aas
push
rorl
jmp
rolb
pop
inc
jb
fistpl
adc
call
call
sti
jno
pop
nop
mov
inc
sti
arpl
daa
std
or
xchg
lcall
incb
popf
push
loop
sbb
or
imul
xor
dec
mov
pushl
fsubr
fistps
lds
fidivrl
jg
stos
icebp
jg
pop
add
dec
mov
sub
jge
xor
lahf
les
aas
mov
repz
sbb
cld
addl
sbb
rol
stc
mov
lahf
outsl
int3
push
sbb
pop
mov
aas
pop
test
bound
pop
outsl
xchg
decl
lock
inc
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
rol
mov
jp
adc
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
adc
stos
decl
loopne
shrb
rcl
jg
adc
xor
pop
rcr
cmp
decl
sub
jmp
lea
jp
jnp
jecxz
adc
incl
ds
pop
adc
imul
or
inc
pop
xor
rorb
ljmp
jmp
xor
subb
iret
mov
lock
inc
cmpsl
enter
mov
into
ret
incl
insb
or
and
xchg
fdivp
mov
insb
test
aas
repz
jle
sar
outsl
lock
in
jmp
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
out
jne
or
cmc
mov
push
mov
fsubrp
dec
sub
lcall
fcmovb
inc
adc
inc
loopne
test
out
rolb
pop
adc
jne
pop
cld
or
dec
ss
jnp
leave
inc
lods
movsb
or
repnz
mov
add
call
outsl
scas
cli
in
cmpsl
lret
pop
in
cmp
jmp
mov
clc
adc
jmp
hlt
dec
mov
inc
sbb
xlat
inc
aas
mov
jg
mov
mov
or
addr16
sbb
cld
daa
jp
std
adc
cltd
aad
ret
leave
mov
ret
nop
cmp
das
incb
lock
jg
pop
pop
div
cld
idivl
fs
aas
adc
loope
jae
jmp
shrl
je
jge
pop
sub
jb
out
xchg
add
out
icebp
mov
xchg
insb
clc
fndisi(8087
fisttps
sti
mov
fbld
es
inc
dec
das
jge
mov
cmpsb
cmp
call
lea
decb
adc
mov
mov
and
call
scas
and
in
loope
mov
or
xchg
inc
add
push
pop
aaa
std
fisttps
dec
inc
sbb
lock
jg
xchg
fimull
ret
ror
cmp
rcrl
aaa
inc
adc
adc
mov
sub
mov
pop
clc
loope
sub
ja
and
dec
add
sbb
rcrl
mov
iret
fdivrl
xchg
lcall
decb
js
pop
imull
sarl
pop
out
xchg
xchg
cld
jno
ret
cmp
arpl
out
inc
incl
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
sbb
imul
dec
outsl
adc
sbb
mov
daa
jmp
faddl
mov
push
jae
outsl
xchg
sub
push
imul
push
lock
stc
push
dec
out
fstpt
mov
enter
repz
pop
add
fsts
dec
adcb
cs
sti
pop
inc
add
inc
mov
nop
mov
lcall
insl
test
and
add
aas
push
xchg
mov
jnp
scas
jmp
and
add
cmp
pop
xchg
loope
dec
pop
flds
xchg
xor
pop
insb
mov
mov
jmp
insb
shl
and
push
iret
iret
pop
mov
mov
ds
outsl
jae
pusha
dec
decl
enter
into
lods
push
mov
or
out
push
pop
movsb
fcomps
decl
pop
mov
ljmp
out
out
scas
pop
ret
push
cmc
ljmp
adc
mov
fdivl
frstor
mov
mov
lcall
outsl
jns
adc
lahf
lock
mov
adc
push
push
adc
and
sbb
or
decl
pop
std
in
int
adc
imul
xlat
xchg
loop
fsubrl
cmp
cmc
pop
jmp
jmp
rclb
lret
daa
mov
xchg
inc
jle
imul
sub
pop
loope
aas
lret
je
add
int3
loop
subb
leave
lds
imul
leave
dec
push
dec
aaa
es
ds
inc
out
pop
mov
mov
pop
shll
cmovno
sub
cld
lret
das
xor
lahf
push
in
subl
cmp
imul
loopne
and
arpl
lahf
mov
in
add
cvtps2pi
gs
in
out
sub
filds
dec
aaa
in
les
xor
mov
add
pop
cmp
mov
in
pusha
sbb
push
mov
lock
mov
jmp
xor
jns
xchg
in
test
aad
hlt
lods
push
sti
pop
cs
cmpsl
xchg
cmp
pop
xchg
pushl
out
into
pop
sbb
clc
cmp
stos
jne
inc
stos
aas
and
clc
je
jno
xchg
scas
orb
scas
arpl
clc
xor
add
jmp
repz
repnz
aam
mov
int
dec
fsubr
cmpsb
sahf
push
insl
pop
push
leave
js
mov
push
ss
test
push
sbb
xlat
stc
pop
into
cmpsb
dec
xor
adc
decl
mov
lock
loopne
add
mov
aam
mov
jg
cmp
lds
orl
repz
in
jl
test
in
jnp
loop
call
sbb
std
lcall
push
ret
mov
sbb
pop
sub
jg
enter
leave
aaa
hlt
xor
data16
loope
imul
jne
or
nop
outsb
jns
daa
outsl
lock
adc
movsl
repnz
lcall
xlat
sbb
inc
xor
repnz
je
in
xor
insl
inc
inc
mov
jo
mov
daa
das
mov
xchg
mov
jae
enter
sub
inc
jecxz
push
test
sub
mov
or
dec
lods
or
js
adc
imul
fs
xchg
mov
mov
inc
mov
aaa
or
insb
xchg
mov
decl
mov
jp
pop
mov
dec
insl
xor
outsb
fnstenv
or
sub
sar
cli
fwait
jnp
andl
call
cmp
ljmp
test
sub
insb
loope
aaa
shlb
orl
rcrl
add
ljmp
flds
cltd
cmp
or
std
xlat
adc
in
pop
xchg
cmp
adc
cmc
or
loope
inc
push
bound
push
mov
mov
sbb
mov
movsb
rcll
addb
incl
xchg
push
xor
xor
mov
lods
enter
pushf
dec
aas
pop
pop
rcr
arpl
pushl
dec
jns
es
cs
xchg
add
push
pop
push
subb
shrl
jmp
cmpsl
or
push
notb
repz
lret
xchg
sahf
and
mov
or
ret
jle
jns
jmp
jno
xor
add
call
lock
out
je
dec
fcomps
jle
int3
bound
addr16
and
mov
and
pop
add
add
pushl
mov
inc
test
mov
test
lcall
mov
add
cli
es
imul
xchg
into
js
call
mov
cmpsb
incl
arpl
ljmp
lcall
es
push
call
and
push
jp
loop
and
sbb
ret
push
incl
dec
out
dec
pop
gs
add
and
sbb
adc
mov
sbb
ljmp
es
mov
fs
mov
or
cmp
fdivrl
fadds
pushl
cwtl
cmp
scas
mov
jl,pn
leave
adc
cli
pop
pop
stc
je
mov
cmp
fs
out
mov
test
mov
jle
jle
test
pushl
mov
rorb
out
test
ss
jg
cmp
mov
xor
jecxz
mov
aas
xchg
xchg
mov
cmp
dec
cld
jmp
cmpsb
pop
mov
movsb
add
out
sbb
adc
mov
sub
fisttpl
repnz
frstor
sub
divl
daa
mov
imulb
xchg
cmp
push
jno
out
mov
push
mov
xchg
test
ljmp
aaa
cwtd
pusha
push
push
dec
aas
mov
xor
aas
push
stc
addr16
scas
fs
lcall
sbbl
clc
mov
mov
xchg
add
ljmp
jo
and
leave
aas
cmp
xlat
outsl
jnp
gs
cmpsl
stc
inc
fdivrl
xchg
dec
lods
lcall
inc
push
int3
add
push
jmp
pushf
incl
or
loop
lods
ds
sub
jns
or
mov
sbb
or
fs
lcall
aas
outsl
sub
fcomp
adc
adc
insl
inc
testb
mov
icebp
pop
shlb
cmp
adc
jb
or
inc
scas
fcom
lods
xor
sbb
xchg
add
xchg
fistpll
ljmp
inc
ret
fildl
test
ljmp
mov
adc
lods
cmpsl
mov
jge
cmp
insl
cmpsl
push
jp
outsl
iret
push
pop
jg
inc
aad
jmp
stos
int3
shrl
pop
aad
inc
lcall
xor
adc
pop
js
jbe
scas
in
xor
dec
loopne
mov
sti
inc
cld
mov
push
mov
mov
ja
sbb
stos
sbb
push
cmp
dec
pop
pop
in
sub
xor
add
push
mov
push
jg
cmp
pop
jbe
mov
and
imul
cmp
jmp
jge
mov
push
aam
push
out
call
jno
rcll
data16
cwtl
mov
or
les
add
out
jne
mov
push
icebp
into
xchg
lcall
incl
loopne
mov
fmulp
insl
iret
in
mov
loopne
int3
call
loopne
daa
inc
dec
jbe
pop
mov
jae
popa
hlt
jg
icebp
push
lcall
decl
mull
in
loop
shlb
scas
ss
sbb
sub
cwtl
mov
call
subb
fildll
dec
jecxz
jo
sbb
jnp
pop
pushl
cltd
imul
cmp
mov
cli
ljmp
sahf
jp
jb
sahf
pusha
lea
xor
or
test
mov
cs
dec
pushf
lods
or
cld
psadbw
push
dec
decl
lock
insb
loop
jp
stos
data16
xchg
fcompl
push
adc
movsb
and
stos
inc
arpl
inc
jl
push
icebp
loop
pop
scas
sbb
popf
xor
xor
cmc
ret
lcall
mov
mov
push
xor
sub
ss
pushl
pop
mov
pop
psubusw
stos
adc
mov
aaa
nop
fidivl
push
xchg
inc
cld
ljmp
ljmp
ret
pushl
mov
mov
sbb
mov
aaa
adc
das
ja
decl
and
or
iret
movsb
in
xor
push
pop
loop
sbb
addr16
and
jg
aaa
addl
cmpsb
mov
arpl
add
aaa
sub
pushl
repnz
int3
fwait
cmpb
and
cmp
daa
imul
flds
dec
mov
fwait
decb
xor
rcl
push
mov
inc
lcall
fcomip
pop
dec
lea
mov
lcall
jne
sbbb
dec
push
and
jg
jl
cmp
add
ret
pop
sbb
xchg
stos
imul
pushl
test
adc
sub
stos
cltd
mov
xchg
inc
cmp
mov
mov
bound
aad
fdivrp
dec
sbb
inc
cmp
mov
incl
mov
adc
fwait
xor
orb
xor
jl
cli
pop
xchg
ljmp
xchg
cmp
orb
ss
aas
pop
pop
mov
lock
enter
pop
ljmp
push
pop
add
addr16
push
cmp
stos
les
je
xor
aas
mov
dec
dec
arpl
jg
repnz
dec
dec
jae
cmp
sbb
cli
push
fidivrl
lcall
addl
out
mov
jp
jle
mov
jmp
jmp
jl
xchg
pop
adc
mov
sbb
addb
call
or
sbbl
inc
push
or
fcomps
xchg
pop
pushl
mov
xor
xlat
sbb
cmp
and
and
out
inc
mov
popf
aad
push
jo
cld
jo
fnstcw
pop
std
lods
fidivrl
or
adc
jg
mov
jge
inc
add
inc
lcall
and
rcll
cli
pop
sub
cwtl
inc
mov
jg
sbb
dec
lret
scas
xchg
icebp
pushl
into
jl
inc
cli
outsl
xchg
imul
and
in
decl
aas
jnp
ud2
push
xorl
addr16
mov
jns
outsl
push
test
mov
xor
aad
cltd
mov
filds
lcall
cmpsl
incl
add
inc
sbb
cltd
or
int
jle
cld
add
cld
aas
mov
mov
cmpsl
xor
jno
imul
sbb
pop
and
adc
notb
pop
pop
xlat
rorl
je
outsb
sbb
arpl
mov
dec
test
iret
pusha
sbbl
int
decl
or
fs
rcrl
pop
loop
clc
mov
outsl
sub
pusha
jmp
fdivrs
out
lcall
xchg
std
add
jne
pop
mov
insl
pop
and
jmp
popw
subl
pushl
or
adc
add
jae
push
xlat
mov
call
dec
test
cmp
es
int3
adc
dec
push
cld
mov
insb
lahf
mov
xchg
incl
ret
ja
or
loope
std
adcl
lcall
xchg
leave
test
decl
mov
fdivrl
xchg
shl
or
push
icebp
pop
orb
call
dec
ljmp
scas
lods
lret
sub
xor
xchg
loopne
fbld
cwtl
cmc
std
cmp
pop
lock
jns
aam
sub
ja
push
cs
mov
sub
lods
mov
and
pop
out
das
jecxz
push
push
fcomps
movsb
push
je
hlt
dec
ret
aad
inc
data16
lcall
xchg
xchg
push
test
lock
hlt
sub
sub
or
out
and
decl
cmp
fs
inc
aam
cmp
pusha
gs
adc
cld
ds
xchg
mov
fwait
enter
mov
out
jmp
jb
cmp
jge
mov
addb
lcall
cli
pop
xchg
dec
sub
in
jmp
jno
push
mov
decl
repz
and
xor
mov
pop
xchg
or
add
add
sub
rcl
pop
and
fsubr
adc
aam
push
inc
sub
aad
scas
inc
inc
or
xor
mov
loopne
xor
rorb
jg
call
lds
popf
and
mov
mov
pop
xor
clc
in
iret
sub
sub
inc
dec
call
pop
xorl
in
in
pop
loop
inc
in
xchg
sub
or
add
mov
sahf
jns
ss
add
mov
dec
mov
jmp
pop
push
xchg
push
add
pusha
incl
sbb
cmp
aaa
add
outsl
inc
jae
sbb
inc
testl
jo
xchg
pop
mov
orb
xor
cld
cmp
ret
sahf
inc
test
jno
jno
outsb
ret
add
cmp
jb
sbb
call
les
mov
xchg
shl
ror
sbb
lds
sarl
ret
data16
int
fs
outsb
push
cmp
fcoml
test
jmp
jg
xchg
das
lret
push
lcall
inc
pop
scas
hlt
fsubrs
xchg
negb
inc
outsb
mov
call
push
push
shll
mov
movsb
xorb
into
int
sbb
arpl
sbb
sbb
jmp
jle
rolb
lods
sbb
pop
sub
mov
jmp
push
sti
add
out
sbbb
call
mov
clc
popl
jo
push
or
in
push
leave
cmp
ljmp
cltd
cmp
rcll
mov
lahf
sub
popa
adc
lods
aam
mov
mov
add
sar
stos
push
sbb
lcall
lea
movsb
imul
jae
fisubs
adc
sub
test
mov
pushf
adc
add
mov
add
fbld
jecxz
cld
lock
dec
test
repz
sub
cmpsl
jno
std
decl
mov
xor
movsb
rolb
jecxz
jge
sbb
lea
inc
push
addr16
push
mov
mov
icebp
mov
cmc
frstor
lock
lcall
cmp
and
jg
shll
shrb
add
stc
addr16
iret
jo
ljmp
pusha
out
fwait
xchg
iret
or
mov
stc
out
xlat
fadds
push
sub
mov
push
imul
jb
xchg
daa
roll
mov
call
jecxz
inc
inc
cltd
sti
ror
std
dec
cld
in
fstpt
in
rorl
cltd
pushl
jmp
jno
inc
pop
into
sbb
loopne
jno
push
nop
inc
mov
lahf
dec
mov
push
xor
pushl
lea
xchg
mov
xchg
outsl
jle
fs
sbb
inc
pusha
in
add
cmc
sub
in
pop
data16
jns
cmp
call
sbb
in
call
push
lret
sti
mov
notl
incl
push
jnp
pop
push
dec
ss
sub
xor
and
mov
xchg
dec
mov
addb
call
and
in
xchg
mov
pop
ljmp
test
or
sbb
lret
popa
jp
xchg
sbb
out
sarb
std
add
mov
jl
ret
sub
mov
loopne
add
or
jbe
test
and
cmp
out
mov
or
dec
insb
push
lret
xor
mov
sub
sbb
in
mov
push
cli
stc
shll
fucomip
pop
cmp
stos
dec
mov
shrl
jg
adc
loopne
push
arpl
int3
or
jle
mov
les
iret
bnd
and
iret
outsl
add
or
popa
lret
ja
ljmp
rorb
sub
mov
xor
jbe
cmp
inc
mov
pop
lret
xor
ljmp
adc
cld
clc
lods
stos
or
stos
pop
gs
jge
dec
fmul
les
cmpsb
sub
scas
ret
stos
push
ljmp
repz
mov
mov
push
out
or
cld
push
outsl
or
fsubrs
jg
add
xor
incl
push
movsl
icebp
ret
int
mov
push
push
add
mov
fsubrl
das
pop
pusha
mov
f2xm1
shrb
adc
xor
loope
in
stc
push
cmpsl
rcrl
mov
or
sbb
call
cmp
cs
jnp
mov
bound
cmp
push
xchg
jge
lods
mov
scas
jbe
pushl
lret
outsb
push
outsb
in
data16
int3
pop
pop
shrl
lret
sbb
and
rolb
or
mov
and
or
xchg
jnp
aam
aas
or
lret
gs
inc
inc
inc
add
test
stos
jns
lcall
cmpsl
mov
mov
inc
arpl
xchg
lret
inc
or
cmp
push
adc
inc
bound
test
in
lds
mov
lret
clc
mov
mov
out
popa
cmpb
ja
push
pop
lods
scas
adc
mov
rclb
cmp
add
iret
loope
call
xchg
lret
in
inc
ja
call
in
mov
mov
mov
inc
jbe
add
push
lock
gs
pop
movl
call
imul
xchg
outsb
or
pusha
test
jg
cmpsl
rorb
sahf
adc
scas
jg
aam
cmpb
add
add
loope
xor
push
jg
mov
jle
xchg
mov
loope
and
stos
out
inc
jp
stos
inc
sub
out
fbstp
rcrb
and
lcall
cmpsb
dec
push
rolb
hlt
scas
sub
loope
xor
inc
pop
in
mov
jb
lcall
pop
or
je
scas
int
fnstenv
fldenvs
loopne
xlat
out
hlt
mov
aas
mov
push
outsb
int3
xchg
sar
fistps
dec
pusha
popa
loop
mov
call
into
jmp
adc
es
and
jl
dec
dec
mov
sti
or
fildl
pop
dec
repz
sub
fisttps
loop
fdivrs
stos
pop
mov
pop
int3
mov
loopne
sub
mov
add
js
clc
call
scas
push
fldl
mov
mov
and
mov
test
xchg
inc
sti
cmp
adcl
and
in
and
movsl
sub
cmpsb
loopne
mov
cmp
xor
inc
cmp
clc
stos
icebp
add
jae
mov
xor
test
jmp
lds
lods
sub
pop
fnstcw
jge
jb
xchg
decl
and
push
sbb
rcrb
es
sbb
xlat
mov
mov
in
cmp
call
test
mov
int
int3
dec
xchg
adc
mov
push
dec
or
incl
leave
insl
pop
add
pop
push
test
adc
scas
jns
fs
fwait
aam
pushl
shll
addr16
mov
ds
xor
adc
test
jg
cmp
mov
push
push
add
and
loope
les
lcall
mov
imul
dec
sub
cmp
mov
out
in
mov
mov
ljmp
out
into
rcr
sti
inc
cmpsb
fdivrl
xchg
or
pop
leave
jae
rclb
lcall
xchg
sbb
push
test
push
mov
push
inc
int
jp
cmc
movsl
in
push
cmp
ljmp
mov
test
or
sub
std
cmpsl
lea
js
cmp
add
ss
jnp
and
fsubl
jmp
inc
fildl
inc
cmp
mov
sbb
es
fistps
mov
or
ficomps
iret
add
aaa
movl
ret
mov
sti
rcr
sbb
push
lret
adc
lods
int3
lods
stc
jg
call
icebp
or
cli
fwait
mov
and
and
sahf
xchg
xchg
scas
clc
ljmp
rcrl
lock
xchg
addr16
test
mov
incl
xchg
addr16
in
arpl
jmp
leave
add
arpl
loope
fsts
bound
jmp
add
push
xor
outsb
mov
mov
outsl
popf
filds
loop
inc
mov
stos
rcr
bnd
ljmp
popa
ljmp
add
sub
popl
inc
das
pop
mov
repnz
notb
jl
andl
mov
scas
fsubrl
mov
shl
cmp
xchg
std
sub
call
imul
mov
mov
push
imul
mov
lcall
in
pop
cwtl
out
fsubrl
lahf
fcmovb
and
or
shll
fneni(8087
aad
jl
popl
xchg
cmc
shr
adc
in
subl
test
xor
out
data16
incl
aad
cmp
mov
jl
cmp
adc
ljmp
inc
in
out
inc
out
pushl
out
lret
or
popa
cltd
scas
jne
gs
in
pusha
out
repnz
leave
push
lahf
xor
in
incl
mov
mov
sbb
adc
fs
mov
daa
pop
mov
xor
adcl
cmp
push
lea
cmp
inc
lcall
orb
les
mov
lcall
add
sarb
pop
cmpsl
jnp
lret
push
jge
adc
mov
incl
nop
adc
or
pushf
sbb
lods
push
loopne
imul
pop
nop
pushl
shr
rorb
insb
std
seta
push
xchg
sar
push
cli
jmp
xchg
or
or
ljmp
adc
pop
test
shrb
xlat
or
stc
lea
std
pushl
mov
je
fistl
shlb
test
cmp
mov
pushl
sbb
or
add
ljmp
cmpsb
movsb
lahf
nop
mov
arpl
je
pop
cmpl
push
xchg
sbb
add
test
icebp
mov
sub
out
mov
jns
xlat
xor
shlb
fnstenv
lcall
and
add
rol
dec
mov
roll
and
test
test
orb
popf
rorl
push
call
std
jg
push
sbb
rcrl
pop
sbb
dec
popf
mov
mov
push
fdivs
fistps
and
xor
adc
pop
lock
jg
imul
jge
pop
ja
xchg
adc
push
arpl
add
loopne
popf
lods
roll
in
and
iret
xchg
clc
setns
xor
and
repnz
inc
lock
les
cmp
loopne
jge
into
imul
je
mov
mov
ljmp
pop
ret
inc
dec
and
ss
xchg
mov
push
lcall
cmpsl
cmp
xchg
jmp
popf
ljmp
hlt
jle,pt
inc
xchg
mov
jecxz
push
mov
jmp
and
jb
fsts
incl
pop
sbb
sub
push
and
cmp
ret
mov
gs
mov
jnp
pop
mov
jmp
cmpsl
jo
mov
int3
repnz
out
lock
jmp
pop
icebp
cmpsl
mov
cmp
inc
ja
add
negb
inc
mov
pushf
pop
xchg
shl
hlt
decl
lahf
andl
rclb
push
dec
imul
decl
aam
adc
outsb
pop
popa
xor
ja
aam
or
sbb
or
in
mov
sar
jg
call
xor
addl
add
pop
mov
pop
adc
incl
dec
cltd
movsl
adc
daa
cmp
aas
cmp
aam
xchg
cmp
cmp
fnstsw
or
dec
adc
cmp
mov
sti
aaa
aam
icebp
push
mov
mov
sahf
subl
enter
push
arpl
shl
inc
fldenv
sub
mov
and
daa
addb
jnp
xchg
jp
paddd
lret
movsl
in
ret
cltd
mov
or
xchg
repnz
popf
call
xor
pop
mov
cmp
mov
les
push
lahf
jge
cmp
in
mov
in
movsb
xchg
pop
js
pop
fcmovnbe
lcall
pop
ret
push
aaa
jle
cmpsb
inc
test
pop
addl
lock
ljmp
push
pop
jg
jmp
cs
pop
push
ja
std
and
rorl
aas
mov
cmp
fidivl
mov
cmp
dec
rcll
add
and
add
push
mov
popa
stc
idiv
sbb
aad
fdivl
test
inc
add
pop
sub
lcall
cmpsl
pop
addr16
push
mov
fcmovbe
xchg
nop
pop
mov
ret
cmpsl
sub
movsb
push
imul
jle
pop
lret
xchg
lcall
cmp
jmp
notl
and
mov
aaa
jl
jge
push
sub
aad
imul
push
push
xlat
dec
outsb
add
insl
jg
push
ds
add
scas
dec
add
cmp
cmpsb
or
inc
int
stos
add
jnp
lock
incl
ss
inc
sbb
mov
insl
mov
push
enter
lcall
pop
push
jg
mov
and
sbb
mov
insl
push
lret
sub
cmp
dec
test
lods
xor
xchg
sbb
push
aam
push
lods
pop
dec
pushl
xor
jbe
aaa
sub
popf
in
xor
mov
cmpsl
xor
repnz
mov
sbb
jb
push
popa
and
or
inc
jle
sub
jmp
jne
out
stc
outsl
add
scas
pop
gs
incl
movswl
pop
mov
iret
xchg
ror
leave
jae
shr
insl
pop
mov
pop
pop
jnp
std
pop
cld
lcall
mov
mov
add
mov
push
dec
in
ds
add
mov
and
mov
call
and
pushf
cld
push
adc
jmp
arpl
loop
mov
loop
incl
loop
dec
bound
sahf
cwtl
add
sub
jns
ret
and
jg
dec
aam
mov
mov
lods
adc
int
pusha
fidivrl
decl
jmp
shlb
jmp
and
pop
fwait
inc
mov
xor
test
call
mov
and
jb
insl
mov
mov
mov
cltd
cmpsl
inc
sub
mov
scas
mov
sub
dec
lcall
jo
sbb
fdivrl
mov
xor
mov
loop
aaa
daa
pop
cmp
sbb
lock
call
incb
stc
hlt
test
loop
sbb
xchg
jmp
inc
in
fcomps
jmp
adc
jecxz
je
mov
fiadds
mov
mov
mov
push
decl
nop
nop
push
add
es
fldenv
int3
adc
gs
xchg
insb
adc
decl
push
fwait
dec
jle
popf
dec
or
xchg
mov
fidivl
mov
dec
popa
xchg
pusha
pop
lcall
decl
add
out
pushl
bound
nop
dec
push
xchg
inc
lds
lret
mov
lods
add
jnp
incl
cmp
call
jle
out
jmp
jbe
in
cld
stc
or
jp
pushl
rorl
sbb
ss
clc
or
adc
or
bnd
ss
sbb
hlt
jmp
dec
test
test
push
clc
and
out
jg
inc
fidivl
mov
call
cmp
jmp
stos
addr16
fimull
jns
sbb
stos
jmp
xor
cwtl
jo
jno
cli
pop
fidivrs
cmp
mov
sub
ljmp
sbb
leave
mov
jl
mov
dec
fs
jne
dec
dec
adc
in
jle
out
sbb
in
in
pavgw
ds
inc
sub
decl
clc
pop
call
sub
ficompl
fimuls
push
in
mov
out
sub
clc
test
out
fldenv
scas
xchg
lods
dec
nop
loop
fsub
pop
mov
mov
std
dec
jo
idiv
ljmp
cltd
mov
mov
dec
fsubl
test
aam
pushf
imul
outsl
xor
pop
sahf
ljmp
pop
inc
fnstenv
scas
fildll
cld
cmc
cmpsb
push
push
add
cmc
loopne
push
push
scas
add
cmp
incl
into
add
loopne
aad
sub
clc
adc
hlt
add
repnz
pushl
das
jle
arpl
add
mov
sbbb
ljmp
outsl
inc
push
cmc
and
fs
add
dec
fisttpll
dec
sub
incl
das
sub
jge
scas
lret
sbb
enter
xchg
or
fucomip
xchg
lock
decl
lds
lret
cmp
or
movsl
sub
sarb
push
aaa
lret
repz
adcl
stos
mov
push
cmpsb
mov
in
sbb
pop
jl
cmpsb
xorb
sbb
xor
in
das
orb
push
and
call
in
and
push
mov
pop
cli
in
inc
repnz
xchg
and
mov
push
cli
aam
jp
out
sbb
cmc
incl
insb
call
push
in
clc
into
cltd
jae
jnp
call
adc
adc
out
imul
dec
daa
faddl
jbe
ret
mov
jg
mov
ljmp
lcall
test
test
pop
and
hlt
jge
enter
jmp
push
mov
loope
push
mov
lcall
incl
in
mulb
jo
les
cmp
pop
hlt
ret
insb
push
mov
dec
lds
data16
inc
cmc
inc
ret
or
mov
sub
inc
xor
cmp
repz
movsb
inc
shll
rolb
ljmp
leave
ljmp
xchg
xlat
xor
clc
rcr
and
sar
incl
jmp
test
sbbl
dec
add
push
add
mov
mov
inc
fs
or
insb
lock
cs
les
add
scas
add
insl
sahf
xor
in
rclb
add
jb
lock
sub
dec
icebp
loop
pop
push
xor
call
aaa
dec
dec
xchg
popf
ss
jb
shlb
dec
imul
out
push
nop
idivl
sbb
cltd
aad
cmp
or
hlt
mov
aam
imul
jecxz
aam
mov
movsb
and
jle
ja
mov
imul
mov
inc
or
cmp
aad
add
and
cmp
stos
mov
popf
repnz
inc
aas
and
dec
jnp
gs
test
cmp
lcall
testb
test
xor
fldt
lock
xor
ljmp
lret
cmc
xchg
iret
stos
jmp
dec
mov
sahf
and
adc
aad
push
arpl
lcall
fstl
dec
dec
repz
jecxz
sub
cmp
or
clc
popf
icebp
pop
mov
bnd
jno
sbb
dec
fstps
xor
inc
pop
mov
xchg
or
into
mov
decl
push
pop
inc
sarl
inc
movaps
sub
aaa
cmc
jmp
mov
ds
mov
add
decl
pop
push
pop
dec
fdivrl
xor
mov
pushl
loope
or
ret
sub
loop
cltd
repz
mov
test
ljmp
ret
les
cs
mov
clc
and
pushl
rcr
jmp
pop
jnp
pop
xchg
jp
je
lds
lcall
mov
dec
call
out
mov
imul
negb
sbb
dec
dec
test
cmp
out
lahf
push
fildll
ss
test
mov
add
adc
sbb
adc
mov
mov
call
dec
pop
or
fimull
dec
ret
jae
xor
fucomi
les
ljmp
and
leave
scas
int3
loop
andb
bound
jnp
in
add
fsubrs
lods
ds
rorb
shrl
mov
out
bound
mov
jecxz
fadds
or
add
call
mov
jae
push
loop
add
in
inc
fs
dec
push
jno
inc
jecxz
dec
dec
sub
jg
mov
sub
das
mov
push
cmp
jecxz
mov
mov
jg
ficomps
sti
sub
pop
or
out
sbb
aam
or
inc
inc
sbb
pop
mov
daa
sub
loopne
stc
repnz
mov
jmp
icebp
lods
inc
push
lods
movaps
faddl
xchg
xor
mov
repz
incl
subl
fists
dec
xorb
or
out
cltd
imul
push
or
je
fwait
stos
sbb
xchg
stc
adc
std
dec
cmp
cmp
incl
xor
dec
push
adc
push
and
push
adc
scas
sub
xchg
inc
inc
dec
mulb
jmp
iret
ss
ret
xchg
cmp
out
jge
scas
movlhps
or
roll
fdivrl
ficoml
call
and
jl
mov
sbbb
or
xchg
mov
cmc
iret
sarb
dec
mov
or
xlat
add
mov
nop
stos
pop
icebp
pushl
add
cmpl
push
ret
call
or
xorb
jp
add
fwait
mov
mov
icebp
mov
add
mov
int
xchg
negb
cltd
xchg
flds
jns
add
pusha
loopne
and
xchg
cld
lahf
repz
faddp
jae
out
clc
jns
dec
pop
and
outsl
or
xor
fs
sub
in
idivl
jmp
and
ljmp
cwtl
aas
sbb
out
das
lods
mov
ror
in
mov
pop
or
decl
or
xchg
jae
mov
jnp
bound
adc
add
and
call
cld
sarl
repz
mov
or
mov
setnp
insb
cld
xchg
sub
fdivl
call
xchg
call
or
jg
mov
pop
notl
dec
xchg
add
cwtl
ss
test
sub
dec
and
jb
fcoms
push
fs
popl
je
pop
adc
test
test
jl
mov
jne
pop
gs
adc
mov
incl
arpl
aas
mov
inc
repnz
enter
push
sub
push
int
mov
ljmp
cld
lds
push
adc
push
pushf
lret
fnstcw
insl
loope
xor
jge
inc
fs
out
out
cmp
sarb
xlat
sbb
mov
es
mov
mov
pop
mov
jne
je
mov
jns
dec
xchg
subb
aam
sbb
sub
jo
mov
jmp
jle
clc
rcrl
fisubs
jle
adc
mov
adc
push
adc
pushl
push
xchg
mov
and
scas
lods
push
scas
out
roll
cmp
cmp
fbstp
gs
fists
stos
jns
fnstenv
dec
cmc
pop
mov
inc
xchg
jae
jb
ljmp
les
outsw
mov
xor
jb
mov
test
adc
mov
xlat
shl
subl
mov
mov
cmpsb
inc
nop
enter
dec
ljmp
cmc
nop
dec
je
cwtl
or
and
js
mov
stos
ds
sar
decl
push
xchg
dec
sbb
mov
xchg
push
loop
fmuls
incl
insb
insb
push
push
outsb
repnz
jnp
xorl
call
fmull
aam
je
lahf
leave
outsl
stos
sti
mov
sbb
pop
arpl
pushl
mov
pushf
xchg
pop
lods
and
sti
push
in
push
pushf
inc
stos
loop
leave
adc
mov
incl
jno
xorl
jl
or
adc
js
test
popa
cld
clc
jp
mov
fucomi
clc
incl
adc
cmp
xchg
sub
notb
inc
push
test
ja
sarb
movsb
jmp
repnz
pop
nop
clc
mov
movsl
mov
mov
sbb
xor
incl
fnstsw
push
mov
jle
inc
mov
test
test
filds
sbb
or
mov
dec
fmul
aam
stos
mov
and
decl
andb
push
jae
pop
dec
mov
mov
jecxz
or
pop
fbld
incl
mov
call
hlt
jno
fpatan
faddl
inc
lds
sub
inc
jp
pop
adc
out
clc
inc
stos
hlt
ds
sub
fcompl
mov
jg
dec
add
decl
outsb
push
popa
cmp
xor
push
ret
aas
jecxz
dec
dec
mov
push
pushf
insb
incl
popf
in
test
cmpb
std
nop
push
out
inc
std
inc
in
cli
pop
jg
inc
push
cmp
shrl
les
jmp
push
push
out
aad
push
popa
push
test
mov
jbe
mov
shlb
pushl
cmp
mov
test
mov
and
dec
dec
mov
jmp
aaa
hlt
mov
shlb
pop
lods
mov
adc
mov
pop
pushf
mov
cmp
cs
xchg
movsb
call
test
lcall
imul
enter
je
shr
push
mov
cmp
hlt
mov
sbb
in
out
lret
push
aas
fistpll
and
or
lcall
fs
cld
or
mov
add
test
adc
dec
mov
aaa
rcrl
imul
andl
dec
sahf
jecxz
cltd
pop
push
imul
jle
in
dec
repnz
mov
mov
push
jmp
adc
aas
gs
mov
xchg
cmp
pop
das
cli
cmp
addb
fwait
mov
adc
mov
je
push
mov
ret
cltd
loope
shll
dec
bound
clc
cmp
jbe
lods
std
and
incl
or
xchg
fcoms
cmp
outsb
in
mov
or
call
pushf
push
sub
lds
insl
into
xchg
pop
enter
int3
inc
sbb
jp
xor
xchg
loop
decl
or
xchg
adc
insl
push
pop
ja
add
lret
mov
xchg
fwait
jnp
call
sbb
into
mov
and
mov
orb
cmp
divl
cmp
leave
mov
pop
push
fs
xchg
push
movsl
push
into
mov
xor
push
sbbb
scas
in
sub
sahf
loop
add
test
xchg
data16
addb
loope
or
notl
out
mov
shl
mov
push
aad
scas
adc
cmp
sbb
xchg
and
jg
pop
mov
dec
imul
xchg
ja
inc
cmp
and
cmpsb
xor
test
jmp
ss
inc
cmp
sub
xor
icebp
or
cmpsb
and
ljmp
jg
and
pop
mov
push
pushf
ljmp
push
inc
adc
data16
xor
incl
outsl
cmp
cs
out
push
cmp
je
in
and
xor
enter
outsb
in
decl
xchg
lods
aaa
jmp
pop
loop
inc
xchg
fcmovb
push
outsl
pushf
sbb
push
dec
fstps
xorb
pop
mov
dec
jge
pop
mov
push
cmpsl
jbe
push
add
xor
ljmp
clc
call
pushf
sbb
inc
gs
shrl
popf
pop
mov
fisttpll
sbb
incl
push
sbb
cmp
fcmovu
jg
mov
xor
mov
add
incl
fisubs
cmpsb
pop
lcall
xchg
aaa
call
add
out
and
jbe
and
xchg
jp
movsl
rcrl
sbb
jg
jmp
loopne
mov
lea
dec
mov
adc
mov
and
cli
add
xor
jmp
lret
mov
xor
ljmp
shlb
mov
pop
fildl
mov
xchg
andb
in
sti
scas
mov
cmp
stos
sub
aaa
mov
pop
xchg
idivb
push
cwtl
push
nop
fs
xchg
addr16
std
pushl
jns
or
xchg
xor
sub
js,pn
stc
shlb
dec
sbb
push
call
adc
call
sub
pop
enter
lret
or
in
jmp
mov
inc
jae
insb
xor
push
ficompl
ljmp
pop
jl
jnp
push
stos
xor
and
inc
call
xchg
or
jg
test
push
and
addr16
mov
aaa
xor
fldl
inc
and
mov
ds
sub
sub
jp
jmp
mov
ficoml
incl
mov
ja
xchg
jg
aam
roll
cmpsb
add
or
or
mov
mov
shrl
fs
push
stos
jecxz
lret
call
int3
and
test
fbld
lahf
push
lcall
jns
inc
xor
fdivrl
testb
enter
outsl
dec
stc
jl
test
inc
inc
xchg
add
adc
lcall
adc
icebp
jno
lods
jecxz
ljmp
mov
cmp
mov
sub
orl
lcall
add
test
inc
insl
mov
add
jmp
les
jge
adc
rolb
pop
faddl
clc
sbb
dec
cmp
fs
sub
call
nop
call
or
cmc
mov
cmp
test
lcall
mov
jmp
dec
scas
add
in
xchg
sub
cmp
inc
daa
enter
jno
jno
sbb
pop
lcall
or
mov
es
xor
mov
subl
mov
iret
mov
jmp
dec
push
jecxz
fdivl
dec
mov
adc
xor
mov
mov
jb
push
enter
pop
jg
popf
or
mov
mov
dec
push
mov
pop
shl
pop
jge
testl
lret
xor
daa
pop
push
add
jp
lods
data16
fidivrs
or
roll
call
mov
ljmp
pushf
dec
clc
gs
cli
clc
dec
mov
dec
iret
mov
jno
fstl
cmp
jle
bound
mov
jge
dec
leave
push
mov
add
int
lds
imul
ljmp
jg
pusha
iret
inc
daa
ss
mov
loope
xchg
or
pop
pop
rorb
cmpsl
scas
movsl
push
in
push
mov
call
test
push
stos
inc
leave
mov
jle
cmp
mov
mov
aaa
test
jo
lret
mov
mov
vprotq
dec
in
cmp
std
cwtl
inc
dec
add
ret
dec
test
and
push
sbb
jg
leave
add
cld
call
pop
pop
gs
in
and
mov
lock
and
popf
pushf
addb
fildll
test
ss
and
sbb
mov
incl
in
push
jp
testl
or
rolb
fiadds
std
ljmp
or
loopne
out
adc
jb
mov
sbbb
cs
add
jmp
dec
sub
fs
sub
xchg
mov
xorb
jmp
ljmp
nop
xor
je
adc
cmp
push
mov
dec
add
xchg
stos
jg
lcall
and
xchg
mov
mov
popf
scas
xchg
imul
fdivs
or
icebp
xor
pusha
es
cmp
or
xchg
pushf
pop
clc
sub
stos
cmp
mov
rcll
ljmp
jnp
pop
imul
decl
fstl
xor
enter
cmp
adc
sub
lret
pusha
cmp
cs
outsb
ret
lods
add
fidivrl
dec
mov
addr16
inc
mov
out
call
jbe
sbb
fidivrl
repnz
cmp
enter
jno
insl
jg
add
cmpsb
dec
jmp
sarl
fcomip
les
fsts
add
insb
ss
dec
notl
jp
paddusb
xchg
js
fstpl
outsl
push
decl
aad
jl
lret
push
push
push
call
jbe
fdivs
jmp
lea
lea
mov
push
mov
cmp
xlat
mov
dec
xchg
and
fs
cli
ljmp
aam
imul
adc
push
mov
xor
addr16
pop
cmp
aad
test
repz
push
jmp
pop
incl
dec
incl
cld
inc
scas
xchg
mov
shlb
inc
dec
imul
xor
outsl
cli
pop
ficoml
inc
jae
xor
rclb
cmp
gs
sub
stos
into
mov
push
jge
add
jo
add
mov
int
loop
jno
inc
hlt
gs
in
aad
pushl
icebp
jmp
pop
lds
dec
aam
mov
testl
cmpsb
in
lret
mov
lock
xor
push
push
pop
js
xchg
jno
orl
decl
and
hlt
add
jge
cltd
hlt
xchg
push
cmc
and
or
dec
icebp
es
les
jmp
cmpsb
lods
mov
mov
mov
adc
fistl
xor
sti
mov
jg
xchg
icebp
push
ljmp
pushf
aad
mov
fwait
pop
dec
xor
mov
xchg
dec
imul
jbe
jae
sbb
push
mov
das
cli
ljmp
xchg
inc
ss
test
jbe
mov
sub
loopne
out
jmp
jmp
loop
dec
pop
dec
int
lds
frstor
pushf
pop
test
out
xor
fcomip
pushl
mov
xchg
ret
leave
into
dec
ret
jle
cmp
mull
pushl
pop
jbe
sub
mov
in
ljmp
sub
stc
inc
inc
loopne
and
cmp
iret
jp
and
mov
fstps
xor
pop
add
inc
fidivl
dec
push
loopne,pt
pushl
jns
mov
xchg
sbb
mov
jg
lret
aad
call
stos
ljmp
xchg
mov
out
mov
push
jg
push
mov
jb
or
cmpsl
inc
lret
xor
and
adc
fldenv
aad
xchg
jg
fstpt
cmp
outsb
lods
divl
ss
bound
dec
and
dec
loopne
xor
pop
mov
mov
mov
mov
sbb
jmp
push
das
and
push
mov
mov
cmp
push
notl
xchg
xlat
scas
push
jmp
shll
mov
out
xchg
push
jae
mov
inc
or
subl
call
and
jae
push
jl
jns
ss
nop
out
cmc
or
arpl
dec
mov
cltd
dec
sub
pop
sub
das
jnp
xchg
mov
pop
dec
jae
out
xchg
int
aas
mov
add
mov
sub
push
cli
xchg
sbb
jne
cwtl
sbb
insb
lcall
cltd
fmul
bndstx
add
popa
pushl
mov
into
sbb
lods
int3
das
inc
and
xchg
xchg
mov
test
pop
cmpsl
mov
pushl
xchg
mov
mov
lcall
mov
int
insb
push
scas
push
jg
inc
imul
jae
jecxz
stos
lahf
push
ja
or
out
pop
cmp
in
mov
dec
ficoms
push
or
int
pop
dec
xchg
xchg
push
pop
aam
mov
xchg
into
inc
sbb
pop
inc
or
pushf
jp
shrl
or
xchg
jmp
movl
mov
jecxz
hlt
pop
sub
push
or
imul
jmp
loope
xor
in
into
add
sbb
or
pop
mov
add
push
rcrl
aas
inc
decl
dec
out
or
jl
jnp
mov
push
loopne
and
es
adcl
fnstenv
jb
test
mov
sbb
stos
stos
inc
cwtl
adc
jg
pushl
adc
mov
jmp
test
out
popf
pusha
inc
rcrb
in
pop
mov
mov
ljmp
clc
push
mov
iret
fmull
jnp
inc
cmp
ds
mov
hlt
jmp
dec
cmpsb
adc
mov
sub
fiaddl
xchg
adc
jno
push
mov
sbb
loop
daa
andb
fchs
cs
sub
xor
or
clc
ljmp
pop
push
rorb
pop
mov
inc
movsb
loope,pt
jb
cld
outsl
add
cld
inc
mov
sahf
and
mov
ljmp
mov
xchg
aad
sbb
mov
in
or
jmp
scas
enter
jb
decb
cwtl
test
aad
fbstp
push
insb
or
mov
inc
aad
jg
ljmp
insb
ret
and
jae
jo
scas
pop
push
int3
mov
jo
xchg
push
lods
mov
scas
iret
xlat
hlt
add
icebp
adc
push
je
mov
icebp
call
scas
dec
iret
and
in
pusha
test
or
mov
cmpsl
es
push
cmp
pop
mov
mov
add
mov
push
pop
cmp
cltd
js
std
cli
push
push
jnp
add
add
push
mov
fistps
add
sbb
sbb
dec
adc
push
cld
add
xor
xchg
pop
stos
inc
je
mov
imul
outsl
cli
decl
fs
jmp
adc
mov
xor
and
incl
std
mov
mov
mov
std
test
mov
mov
sahf
jne
adc
pushl
rcrl
in
in
adc
ljmp
inc
xchg
into
aas
fwait
xchg
inc
decl
mov
dec
xchg
or
jne
int
push
sbb
cld
xlat
faddl
push
es
outsb
push
and
mov
xchg
sub
inc
push
mov
decl
adc
test
adcb
ret
lods
or
mov
add
call
out
push
jae
mov
daa
decl
mov
pushf
outsl
push
pop
test
ja
push
cli
sbb
test
jmp
in
xorl
xlat
xlat
and
out
shll
mov
inc
test
dec
jb
in
fsubrs
sub
sub
es
pop
cmpsb
or
pop
adc
incl
mov
add
adc
icebp
and
das
sar
or
imul
push
shll
push
leave
leave
int
andw
fldl
xlat
adc
sbbl
inc
loopne
xchg
xchg
pop
iret
dec
arpl
popf
daa
test
mov
push
pushl
daa
xchg
ss
inc
int
out
adc
idivb
and
fbstp
mul
sbb
decl
fwait
xchg
data16
add
movsb
sbb
aas
popw
dec
rol
test
jmp
rorl
xor
mov
sahf
lds
outsl
pop
cmc
mov
iret
add
sti
mov
push
sub
fbld
lock
jl
mov
sbb
cmp
daa
repz
xor
push
ret
mov
xchg
fdivrl
mov
jp
aad
mov
enter
ljmp
imul
pop
xor
cmp
and
cmp
nop
int
adc
xchg
push
cmp
incl
ds
fistpll
enter
jo
js
mov
jbe
loop
xchg
dec
fcmovbe
aaa
cltd
movsb
sbb
rcr
mov
lods
adc
test
inc
jno
push
and
movsl
pop
sub
idiv
xor
ret
and
xor
fnsave
mov
incl
movsb
lock
sbb
leave
mov
inc
mov
and
iret
lcall
xchg
imul
mov
js
int
lret
adc
mov
xor
fdivrl
insl
mov
popa
adc
shll
das
jo
cld
incl
subb
int
into
mov
inc
adc
inc
hlt
mov
incl
pushf
push
les
cmpsb
cwtl
imul
paddb
jmp
add
push
pop
pop
test
fisttpl
in
add
pop
loop
sahf
jp
dec
cmp
jmp
mov
pushl
push
cwtl
xchg
mov
lods
ja
push
clc
mov
push
mov
lods
jo
icebp
incl
mov
lret
sub
dec
int
mov
xchg
stc
in
mov
mov
repz
mov
xor
inc
lret
call
sub
pusha
push
mov
and
mov
mov
and
mov
shr
cmp
call
lods
and
je
and
outsl
popa
test
rcrb
shrb
mov
xchg
movsl
in
jl
add
lcall
outsb
mov
fwait
movsl
inc
xor
arpl
jg
imul
adc
movsb
xchg
lcall
pop
mov
sub
fcoms
dec
add
rcll
cld
or
mov
inc
subb
jne
call
or
pop
fimuls
stos
in
imul
out
addr16
push
adc
aas
cld
push
clc
xchg
dec
outsb
js
dec
int3
sbb
rcr
fs
mull
out
into
mov
imul
fwait
mov
jmp
lods
cmc
faddp
or
inc
cs
dec
xchg
stos
push
negl
int
jb
add
cmc
jmp
sub
mov
adc
out
inc
sub
mov
aaa
xchg
ret
pop
mov
xor
mov
imul
mov
jmp
jge
pop
push
mov
xlat
xchg
les
or
repnz
icebp
xor
lcall
lock
stos
mov
jbe
nop
les
push
and
dec
inc
cmpsb
test
mov
cld
add
cmp
test
aad
shlb
mov
inc
insb
cmp
std
inc
cmp
pop
leave
mull
shrb
jge
ret
js
test
adcb
enter
lcall
mov
xor
lods
cmpsl
stos
mov
ljmp
ljmp
movsl
xor
xor
or
sahf
data16
adc
lods
xor
adc
loopne
mov
scas
mov
sbb
in
mov
add
push
stc
add
mov
jg
aad
mov
and
or
mov
push
movsl
jg
sbb
pop
lock
pushl
pop
and
rcll
clc
push
push
cmp
repnz
cmp
ljmp
jnp
sbb
fsubl
outsl
xor
inc
push
jo
mov
aad
call
imul
mov
popa
movsb
mov
out
or
dec
push
roll
mov
xchg
jmp
cmpsb
stos
add
pushl
enter
jbe
push
cmp
in
aad
sbb
mov
sbb
out
clc
lcall
mov
sbb
shl
popa
dec
jnp
sahf
sub
mov
dec
call
rcrl
mov
push
cmc
jbe
fildll
test
xor
das
lods
movsb
hlt
jg
and
pushl
mov
adc
aam
xchg
dec
mov
imul
push
xchg
adc
gs
call
pop
loope
mov
jae
push
outsl
or
prefetcht1
xor
insl
outsb
xchg
push
in
sbb
daa
andl
incb
cmpsb
xchg
out
cltd
imul
inc
es
pop
in
or
inc
outsl
rorl
cltd
imul
mov
fwait
ds
pop
mov
andb
mov
inc
sarl
lods
incl
bound
aad
mov
hlt
pop
shrb
fs
xchg
xchg
dec
mov
and
and
cli
push
outsb
cld
scas
out
pop
lret
mov
mov
sub
loope
sub
jge
sub
sar
jg
mov
mov
lret
mov
xchg
in
aaa
sub
fiadds
jo
xchg
mov
lcall
add
xchg
aad
fldt
cmc
outsb
sti
lcall
adc
imul
into
test
incl
mov
ds
imul
jl
insl
xchg
es
xchg
imul
pushl
pusha
out
in
push
ds
pop
stos
je
outsb
jmp
std
sbb
lods
lock
mov
cmp
add
pusha
div
shll
jecxz
push
push
loope
lcall
mov
adc
scas
pop
pop
sub
arpl
lock
movsb
mov
jg
orb
faddl
pop
pop
outsb
dec
out
xlat
jecxz
mov
jmp
fildll
pop
jne
cmp
mov
jnp
stos
addb
mov
clc
rolb
push
add
jbe
jg
push
sub
fiadds
ret
lds
pop
jg
mov
mov
push
fwait
cmpb
in
jne
pop
gs
leave
adc
adc
jmp
mov
sub
mov
imul
push
xchg
decb
and
enter
jmp
jns
pop
adc
push
inc
loopne,pn
inc
add
sub
sub
jmp
ljmp
mov
or
xchg
aas
fisttps
cwtl
jmp
ret
or
mov
ficoms
stc
jbe
cwtl
scas
push
jecxz
dec
and
push
push
cmp
mov
pop
xor
mov
lret
xor
mov
insb
pop
mov
int
or
jle
adc
cmp
ss
adc
mov
icebp
decl
dec
or
lcall
fildl
iret
fildll
sub
rcrl
xor
mov
dec
shrb
lock
addr16
dec
mov
and
push
xchg
mov
inc
jge
cwtl
jle
dec
jmp
ja
cmp
je
cld
decl
jo
leave
imul
roll
xor
lds
cwtl
pop
sarl
mov
pop
insl
bound
in
and
lock
sar
aad
pop
hlt
decl
repnz
sbb
inc
inc
push
add
scas
mov
cmp
xchg
push
ds
jle
sub
or
lahf
into
sti
call
daa
aas
lods
adc
test
and
xchg
leave
mov
xor
pop
mov
jns
mov
mov
inc
mov
jbe
gs
or
mov
add
clc
add
cmp
or
inc
jmp
in
andl
pushf
andb
jae
push
or
push
fcom
arpl
mov
cwtl
jns
int3
xchg
ja
incl
mov
decl
and
imul
outsb
jb
xchg
add
pop
mov
inc
fcmovbe
or
lret
scas
mov
xchg
pushf
pusha
test
loopne
pushl
imul
adcb
and
cmp
cltd
sub
and
push
cmp
jle
push
ror
cmp
jge
in
pop
cmpsl
mov
dec
mov
cmp
insl
aam
ja
ljmp
jmp
lock
jmp
sahf
sbb
fdivrl
sti
lods
add
inc
lods
je
scas
dec
xor
cmc
imul
mov
fsubrl
clc
js
loope
ljmp
cli
das
mov
sub
lret
test
xchg
or
mov
outsb
sbb
sbb
and
dec
cli
clc
push
xchg
push
and
adc
in
repnz
leave
sarb
inc
mov
jmp
insl
pop
daa
push
mov
shrb
stos
or
es
scas
mov
push
sbb
mov
mov
mov
mov
inc
popf
adc
das
sub
lcall
cld
frstor
incl
inc
outsl
mov
test
fistpl
or
pop
and
and
std
ljmp
lret
jle
jno
int3
imul
add
orb
push
imul
mov
sub
adc
subl
mov
inc
pop
mov
pop
fwait
or
shll
mov
adcl
das
clc
pushl
lds
mov
and
pop
xchg
cld
lahf
or
pop
inc
dec
mov
xchg
gs
mov
loopne
call
movzwl
or
cmp
push
add
ljmp
or
sub
push
data16
adc
mov
repz
adcl
jmp
stc
stos
xchg
popf
outsl
mov
jg
fsubl
pop
imul
scas
clc
cmpsb
ljmp
arpl
outsl
mov
and
adc
jmp
push
in
arpl
mov
mov
mov
sub
push
xor
fcmovnb
sbb
mov
pusha
and
fwait
push
adc
nop
mov
mov
sbb
xchg
sbb
xchg
call
pushl
js
cwtl
xlat
not
imul
test
cmp
sub
mov
cld
sub
jmp
jg
sub
mov
or
subb
dec
ret
dec
pop
jmp
out
aam
nop
sahf
or
sbb
sbb
sahf
dec
mov
addr16
jbe
ljmp
cwtl
sub
dec
icebp
iret
aam
xchg
mov
mov
pop
movl
sub
mov
loope
xchg
test
push
test
pop
pop
test
cld
mov
mov
mov
sahf
repnz
out
sub
rcr
xchg
and
mov
testb
mov
mov
sub
adc
mov
rolb
dec
lock
popl
ljmp
mov
mov
jb
jmp
push
outsl
fdivr
fcomip
pop
popf
cli
icebp
jb
inc
in
dec
lret
mov
xor
test
add
jnp
push
movsl
cwtl
movsl
mov
fucomip
mov
cmp
jno
outsl
xchg
in
adc
inc
pop
dec
lcall
jmp
ds
rcll
out
adc
jle
sub
gs
sti
xchg
call
xchg
adc
mov
or
sbb
inc
or
mov
imull
das
mov
call
and
pop
jne
movsb
xor
enter
mov
lcall
jmp
mov
loope
jp
dec
addr16
add
clc
xor
lcall
call
out
popf
aaa
std
mov
xlat
adc
ret
ss
mov
sbb
mov
jl
loope
in
adc
lcall
inc
arpl
inc
pop
dec
mov
jecxz
rorl
sti
out
mov
decl
pusha
sbb
dec
lods
pop
sbb
push
push
das
xor
fwait
lret
stos
sub
mov
lcall
sahf
fstpl
negl
mov
clc
jg
adc
jbe
dec
inc
inc
push
sar
das
clc
jbe
lods
add
aaa
cmp
cmp
cld
cmp
mov
mov
in
in
outsb
xor
or
push
movsl
inc
pop
inc
inc
out
fs
mov
mov
push
in
xchg
scas
js
lahf
fprem1
sub
jmp
ret
pop
xor
inc
jo
cmpsb
into
sar
pushl
jge
dec
sti
inc
rolb
xor
jle
pop
outsb
pop
and
pop
std
jg
pop
std
dec
gs
lcall
xchg
pop
mov
std
fcoml
std
mov
dec
mov
mov
lods
jg
lret
ljmp
mov
adc
shlb
dec
pop
ljmp
inc
mov
jecxz
stos
fldl
pop
inc
jmp
out
pop
pushl
loopne
hlt
lea
sub
int3
add
loop
xor
call
addr16
mov
iret
arpl
ljmp
xor
mov
in
fstp
cmp
addr16
add
xor
shlb
leave
jbe
ficomps
jmp
lock
jle
cwtl
xor
loopne
mov
xor
xchg
push
aaa
jge
movsl
sbb
hlt
lret
das
jne
jmp
or
sub
inc
inc
push
inc
jbe
gs
loope
adc
ds
outsl
clc
inc
mov
xor
xlat
ret
ljmp
bound
push
in
push
sti
inc
cmp
add
fstps
cwtl
in
in
jo
pop
fwait
int
call
sbbl
std
jg
enter
jg
fsubrs
lods
leave
call
sub
and
in
pop
jge
inc
hlt
cmpsl
sbb
pop
sbb
shlb
fdivl
jmp
mov
mov
out
dec
popf
lahf
es
mov
push
pushl
pop
js
sbb
je
pop
xlat
lea
push
bound
mov
push
call
cmpsb
out
cs
xchg
cmp
lods
hlt
stos
rorl
push
sub
imul
sarb
incl
cld
nop
pushf
sub
dec
lahf
ret
and
inc
adc
enter
bound
pop
add
test
popa
iret
dec
sub
sbb
test
rcl
dec
lds
sbb
and
or
mov
push
inc
iret
enter
in
jl
fstl
push
or
neg
leave
popf
icebp
mov
js
test
mov
repz
push
insb
mov
pop
bound
enter
mov
nop
insb
pop
cli
ljmp
js
xor
push
mov
dec
mov
lods
mov
dec
ljmp
xchg
mov
mov
int
jge
lcall
pushl
mov
jl
stos
into
push
jl
add
outsl
adc
lcall
cwtl
andb
ret
imull
and
push
ds
insl
scas
ljmp
xchg
sbb
inc
jmp
push
and
rorb
icebp
movsl
ja
insl
cld
pushl
fisubrs
mov
stos
dec
fsubl
fistpll
jg
mov
sub
ror
fcmovnbe
and
jae
inc
sub
insl
imul
shrl
cmp
cld
test
mov
jg
sbbb
incl
pusha
push
jg
cmpsb
rorl
inc
int3
arpl
loop
mov
push
arpl
fsin
movsb
ds
sub
fldl
es
in
or
mov
pushl
dec
repz
jns
push
js
push
mov
pop
out
cli
enter
inc
leave
ljmp
testl
incl
lahf
xlat
in
call
mov
push
pop
jbe
roll
inc
mov
pop
lret
shr
mov
fildl
jg
test
dec
stc
inc
sbb
lds
cmp
adc
mov
xchg
pop
mov
test
sahf
jae
decl
mov
jge
lea
mov
imul
call
lahf
pop
outsl
inc
inc
movsl
rorb
mov
mulb
mov
std
jmp
jo
jnp
repz
cs
enter
push
out
test
data16
std
jg
mov
jbe
mov
je
test
jle
and
cmpsl
ficomps
aas
dec
scas
mov
test
xchg
popa
je
xlat
pop
pop
mov
fldcw
and
ljmp
aas
pop
lock
fadd
mov
jl
xchg
cld
sbb
std
ljmp
cmp
inc
fcoml
push
lock
fwait
lcall
jns
push
or
and
ds
sub
xor
test
sbb
lods
xor
fcomip
jns
pop
pop
dec
enter
or
call
aaa
push
and
mov
decl
mov
xlat
pop
stc
in
fisubs
adc
iret
inc
insb
into
das
pop
xchg
xchg
sbb
shll
ljmp
cmovb
pop
stc
mov
mov
ljmp
jg
insl
fstpt
clc
ljmp
pop
mov
mov
enter
arpl
jno
pop
xorl
incl
stc
push
sub
aad
push
or
rclb
jne
das
and
xchg
jg
mov
ss
mov
ds
popf
clc
fmull
jle
shlb
push
mov
sub
stc
movsb
dec
test
xchg
jge
sub
or
insl
movsb
lods
or
jle
dec
rcll
je
cmpsl
jns
shrb
jbe
inc
push
lret
test
sbbl
pushl
hlt
movsb
shl
daa
inc
negb
sub
adc
mov
imul
cmp
cmpsb
adc
xchg
mov
and
addr16
adc
cwtl
inc
adc
pushl
popa
das
push
lods
pop
add
es
or
fstl
sbb
ljmp
out
lock
push
push
xchg
dec
insb
lret
ljmp
jg
adc
imul
fstpl
jo
sahf
mov
jno
jge
xlat
cmpsl
incl
fldenv
sub
push
andl
push
mov
xchg
test
pushl
adc
outsb
cwtl
in
push
rclb
jb
mov
data16
jl
mov
das
fwait
mov
divb
mov
imul
insl
push
cmc
xchg
push
aad
lahf
push
sub
int
sahf
jg
or
out
mov
mov
adc
pushl
sub
cmpb
jmp
mov
dec
jns
int3
xor
fildll
hlt
pusha
lea
push
jno
inc
mov
mov
rcrl
xor
arpl
outsl
and
jg
inc
sbb
fucomip
mov
call
loop
cltd
scas
pop
mov
idivl
xchg
out
sub
fst
sbb
mov
xor
ljmp
clc
clc
and
out
in
or
sub
stos
pop
enter
neg
ja
fistpll
push
into
xchg
cltd
jmp
mov
fcmovbe
add
rorl
cmp
jmp
lock
or
jmp
cs
sub
mov
push
lds
pushl
jmp
sub
arpl
int3
sbb
inc
xchg
les
xchg
push
mov
arpl
xlat
push
in
cmp
push
pop
jp
and
adc
xor
sub
inc
mov
ljmp
cmp
inc
jnp
adc
stos
sbb
jbe
mov
negb
decl
frndint
mov
or
bound
mov
sub
incl
or
pop
lcall
sub
gs
sub
lods
int
dec
add
incl
pop
movsl
jnp
add
daa
jbe
push
lret
xchg
mov
ss
ja
ljmp
fdivrp
mov
push
jno
push
mov
cmp
cmpl
decl
mov
jnp
rol
mov
pop
mulb
and
icebp
push
sbb
outsl
mov
dec
arpl
leave
push
cmpsb
repz
or
cmpsb
movsb
push
jae
push
cwtl
scas
incl
or
and
loop
leave
xchg
stc
bswap
loope
inc
jns
lea
insb
jmp
cwtl
test
lea
cld
pop
xor
outsb
imul
clc
adc
shrb
mov
clc
push
jae
cmp
xchg
xchg
loope
stos
pushf
or
inc
dec
mov
decl
stc
cmpsb
lock
fmuls
sbb
and
pusha
or
xchg
shrb
pop
fcomip
ret
pushf
test
sbb
mov
mov
inc
inc
fistps
cmc
xor
je
mov
icebp
xor
fisttpll
mov
ja
ret
idivb
xchg
or
stos
test
inc
or
dec
jb
xchg
push
ja
mov
fldl
jp
mov
dec
push
pusha
adc
nop
out
stos
icebp
stc
xchg
push
push
js
jmp
int3
outsl
aaa
out
pop
pop
fs
in
push
xchg
xor
int
lcall
mov
xor
add
dec
aas
dec
cmp
test
pushl
jmp
xor
in
pop
xor
xchg
lret
or
or
aad
cmp
jns
mov
cmp
cmpl
or
mov
pop
mov
scas
clc
lcall
loop
loope
in
or
xor
mov
pop
and
ret
call
mov
rcll
lods
and
push
test
out
movsb
push
xchg
push
pop
adc
mov
push
cli
pop
cltd
cmp
add
cmp
decl
jmp
stc
idiv
scas
lcall
leave
or
or
mov
push
adc
jmp
adc
inc
movl
jae
fsubs
and
pop
push
sti
cwtl
enter
cli
lcall
mov
and
popa
adc
lds
iret
fs
test
lods
push
into
gs
xor
sti
lods
dec
adc
xchg
adc
dec
jmp
inc
cmpsl
clc
aas
cld
loopne
in
xchg
pop
or
adc
xchg
sti
repz
cmp
aaa
add
sti
mov
sbb
push
decl
das
lahf
mov
clc
inc
or
jle
dec
stos
int
je
pushl
mov
inc
test
popf
int3
dec
shl
xor
sbb
mov
sbb
fwait
add
jecxz
test
divb
xlat
jbe
push
xchg
inc
flds
ud0
push
dec
xchg
jno
sbb
sub
cltd
jl
xor
lahf
cmp
enter
jmp
cmp
mov
loopne
ja
outsb
lret
inc
xor
push
mov
inc
pop
notl
mov
pushl
ljmp
sub
dec
rol
es
out
cwtl
xchg
mov
loop
loopne
js
pop
jp
leave
pop
jecxz
loope
dec
lds
mov
xor
cmp
sbb
mov
sbb
stos
push
stos
cmpsl
xchg
sub
add
ljmp
lcall
mov
jno
inc
mov
mov
pop
cltd
cmpsl
and
sbbb
movsb
mov
out
push
xchg
std
imul
or
sbb
decl
fmull
push
ficomps
xor
lods
lcall
popa
fdivrs
je
ja
push
cmpsl
aam
lcall
mov
pop
and
xchg
jb
out
push
mov
test
outsl
pop
xor
lcall
jp
mov
mov
inc
sub
iret
mov
and
aaa
or
jp
mov
fmull
dec
das
loop
mov
jmp
mov
xor
clc
decl
inc
mov
sbb
movl
repnz
mov
call
jbe
add
adc
mov
adc
sbb
lods
push
clc
es
lock
les
mov
call
push
fwait
and
stos
lcall
pop
dec
mov
and
sub
outsb
loope
incl
out
adc
call
cmp
test
popf
loop
and
push
decl
adc
jle
inc
out
and
push
fwait
inc
dec
hlt
sbb
mov
mov
inc
addb
add
fistpl
jg
mov
mov
gs
jg
bnd
mov
sti
not
push
mov
adc
mov
pop
test
loop
clc
sub
xor
decl
mov
or
mov
outsb
or
mov
cli
jmp
shll
mov
ja
je
pushl
rol
cld
pop
cltd
jne
cmp
sub
jge
lods
ror
xor
call
and
xor
out
lcall
nop
mov
mov
adc
dec
mov
and
inc
add
or
test
movsb
test
jae
je
mov
addr16
jnp
or
ret
movsb
mov
jmp
incl
lret
push
in
xchg
outsb
das
xchg
pop
mov
out
aas
mov
insb
mov
orl
xchg
pop
push
push
fiaddl
mov
push
mov
push
jo
mov
push
jle
cmp
icebp
mov
xor
ret
mov
cld
push
jge
movsb
insb
loop
push
xchg
hlt
dec
xor
fs
rcll
pop
push
add
outsl
xchg
cmc
int
xlat
and
cmpsl
inc
mov
add
shll
or
in
pushl
xlat
cmp
test
push
fstpt
cmp
cmp
mov
mov
aam
jnp
push
and
push
aaa
fdivrs
and
test
jmp
cmovp
fs
add
andb
ljmp
in
insl
fs
or
push
cmp
sbb
decl
out
sbb
push
adc
daa
fwait
sub
addb
ljmp
mov
call
loop
mov
stc
lods
ljmp
insl
xchg
fwait
xchg
xor
call
jecxz
fstl
sub
fcompl
je
mov
cmpsl
cld
mov
dec
inc
das
es
ljmp
je
call
inc
outsl
xchg
scas
std
sbb
call
iret
and
and
bound
cmpsb
shrb
fnstenv
mov
adc
mov
cmp
sbb
cwtl
cmp
add
out
stc
lahf
jp
mov
xchg
pop
xchg
iret
sbb
inc
cs
fsubr
and
mov
cmp
xchg
imul
inc
in
mov
jns
and
or
pop
or
stos
rclb
incl
insl
iret
addr16
pop
fwait
mov
pop
jmp
dec
xchg
mov
pop
dec
add
sub
and
sbb
cli
cmp
mov
call
lahf
jne
divl
mov
jecxz
sub
dec
push
mov
mov
incl
repnz
mov
popf
mov
mov
pusha
inc
jge
test
mov
ljmp
mov
inc
or
cwtl
jle
into
sbb
lock
rorl
pop
sbb
push
loop
jge
xchg
cmpsb
call
cld
mov
and
dec
xchg
and
rcrl
lret
std
fadds
in
mov
aad
icebp
pop
and
pop
hlt
mov
mov
mov
mov
scas
sub
shll
scas
cs
xchg
mov
lcall
movsl
sahf
rolb
mov
cmp
pop
fildll
or
pop
cmp
cmp
mov
sub
orl
xchg
fwait
jno
sub
jmp
adc
js
aas
mov
mov
sbb
dec
fisttpll
push
aaa
sbb
jno
incl
pushf
xchg
dec
fistps
mov
fmuls
xor
pushl
jo
mov
sbb
inc
dec
rorl
aam
ljmp
mov
notl
mov
lods
shrb
popa
lea
and
shrb
cmp
mov
bndmov
ljmp
mov
pop
xor
dec
push
dec
fwait
mov
sbb
jb
sub
mov
call
jg
inc
jne
mov
jno
mov
pop
and
roll
sbb
call
adc
in
rolb
repnz
push
sub
aam
shll
outsl
icebp
cmp
cmp
mov
and
fwait
jb
imul
scas
movsb
cmpl
call
es
pop
fstpl
fcoms
mov
sbb
inc
inc
cmovl
push
mov
leave
call
ja
int
cmovae
pop
cmc
push
or
scas
cmp
jb
push
push
lds
lahf
pushl
test
fs
ror
leave
inc
cmpb
jnp
bound
push
nop
outsb
icebp
or
and
decl
push
out
pop
faddl
or
inc
and
dec
push
enter
test
sub
les
ret
add
xor
decl
popf
stc
mov
mov
arpl
ja
mov
jge
cmp
push
insl
nop
pop
dec
mov
icebp
mov
call
push
inc
xor
inc
dec
inc
dec
roll
pop
incl
stos
sbb
jmp
adc
jecxz
or
mov
jmp
scas
clc
adc
pop
push
inc
xchg
movb
xchg
mov
sbb
push
sub
les
add
lret
aad
mov
clc
mov
jg
repnz
xor
mov
push
and
fucomip
stos
enter
js
jns
incl
adc
imulb
out
ret
xchg
sub
sub
jmp
dec
sub
sbb
loope
dec
nop
fs
add
xor
fsubs
jg
mov
ret
fwait
arpl
leave
fwait
lods
ror
rcrb
inc
xlat
int
ljmp
jge
xchg
scas
addr16
aam
ja
dec
fidivrl
js
jbe
in
inc
inc
xchg
jg
mov
ljmp
andl
sahf
lret
fs
aad
out
inc
mov
leave
lea
fcomip
push
call
adc
aaa
data16
push
lock
dec
xlat
ss
lock
jg
rcrl
ficoml
es
fistl
adcb
decl
fs
add
push
ljmp
fnstenv
dec
inc
scas
jp
jo
inc
add
loop
decl
mov
pop
subl
sbb
aam
sbb
dec
xchg
push
push
xor
mov
rcrb
push
pop
push
in
pop
push
mov
shl
pop
jp
fcmovb
fcomip
jmp
and
dec
jle
ja
sahf
jno
lcall
xchg
idivb
sbb
sbb
ljmp
les
imul
pop
ljmp
icebp
test
scas
int3
or
das
clc
cmpb
sub
jge
sti
xchg
ficompl
arpl
xchg
mov
add
dec
test
push
test
adc
inc
nop
add
fwait
std
fcoml
jl
inc
fistps
jne
lock
ds
lret
push
add
xlat
cmp
jmp
decl
aad
jge
lds
xor
out
mov
ja
jo
scas
push
insl
sahf
pop
aaa
push
repnz
jge
decl
sub
popf
shrl
loope
jmp
fs
xchg
mov
hlt
pushl
or
testb
sub
xchg
cmc
xchg
sbb
testl
and
cmpsb
test
mov
outsb
test
jbe
inc
sub
push
xchg
xchg
mov
and
or
jne
mov
data16
rorb
loopne
mov
lret
gs
ljmp
sbb
pop
add
or
push
dec
or
dec
xchg
jb
loope
hlt
xchg
pop
loopne
call
filds
cltd
movsb
repnz
stc
js
add
ret
jmp
cs
dec
mov
ret
add
movsb
in
cmp
mov
addr16
jg
sbb
fisubl
mov
pop
or
test
jmp
push
fldcw
push
call
clc
out
mov
scas
setae
jecxz
in
xchg
in
cmp
mov
icebp
mov
and
les
scas
shl
push
sarb
das
add
sbb
decl
inc
dec
jl
rolb
js
mov
mov
push
test
lcall
jge
cmp
lahf
in
mov
sbb
shlb
mov
cmp
xchg
icebp
add
mov
fs
pushf
imul
adc
push
enter
ljmp
pusha
mov
js
mov
pop
push
mov
cmc
add
dec
mov
pop
jo
js
fildl
incl
mov
cmp
xor
mov
pushl
std
repnz
inc
cmp
mov
stos
sbb
xorl
lahf
fdivrp
decl
jecxz
sbb
jg
test
pop
jno
ret
push
std
ja
jle
cmp
decl
in
das
in
pop
cld
lods
mov
leave
add
mov
sbb
aas
inc
cmp
xchg
xor
mov
inc
es
hlt
lods
pop
test
lods
mov
or
cmp
lahf
pushl
inc
mov
dec
jge
je
pop
ret
mov
aas
mov
xchg
jle
mov
or
dec
popa
out
rolb
sub
xchg
cmp
push
adc
movsl
pop
testl
in
jb,pt
loope
insl
lds
xor
pushl
cwtl
sub
push
hlt
mov
sub
pop
jno
sbb
push
inc
lahf
xchg
call
add
push
leave
push
inc
cmpsb
mov
pop
mov
shll
mov
push
lcall
divb
xor
jno
cmpsl
outsl
int
fs
pop
dec
out
mov
fnsave
jg
cld
jmp
stos
iret
popf
mov
adc
aas
jnp
mov
lds
sbb
stos
mov
and
sbb
addb
sti
dec
cmpsb
push
and
bound
cltd
push
mov
mov
cld
lcall
mov
ss
dec
push
jae
mov
test
out
or
repz
mov
add
jecxz
inc
aam
push
inc
xchg
lcall
jb
mov
gs
cmp
cmc
fstps
inc
sub
pop
jae
icebp
shrb
mov
ljmp
add
sub
jmp
mul
jp
inc
pop
dec
and
push
scas
imul
incl
cwtl
mov
in
cmp
mov
xchg
mov
incl
cld
mov
mov
out
ret
push
push
or
adc
stc
lods
pop
mov
das
sar
adc
mov
aam
push
stos
dec
ljmp
fdiv
sbb
jmp
sub
out
xchg
pushf
inc
sbb
int
pop
or
lods
movsl
inc
pop
dec
ss
inc
fcompl
pushl
fimuls
mov
pop
shrb
scas
or
pop
jbe
hlt
repz
in
or
rcrb
inc
lods
fs
out
clc
pop
jae
mov
or
pop
pop
xor
mov
pop
loopne
cmpsb
jno
ljmp
decl
and
outsl
imul
jb
aam
jge
and
cmp
fwait
test
xor
xchg
and
in
ljmp
adcb
decl
add
inc
sarl
sub
out
jecxz
aad
and
sbb
frstor
xchg
test
jmp
int
notl
out
pusha
popf
jl
mov
mov
sar
mov
daa
ds
lods
test
jne
inc
test
mov
insb
je
bound
decl
push
repnz
outsl
sti
leave
sub
add
push
mov
ror
xor
jne
aas
mov
jle
call
int3
stos
xor
xor
ret
je
pop
inc
sub
ljmp
rclb
test
pushf
into
pop
cmp
ficoml
in
cmp
mov
mov
mov
cmc
aaa
or
outsb
js
or
popf
out
lock
dec
cwtl
out
mov
mov
out
mov
jae
pop
mov
adc
xchg
pop
in
sub
and
int3
or
pop
hlt
ljmp
das
cmp
push
fdivrp
sub
mov
jge
push
or
mov
mov
int
pushl
clc
fisttps
cld
push
pop
dec
cli
cld
cmp
std
andb
js
pop
test
inc
outsl
xor
insb
cltd
jnp
xor
pop
sbb
fbld
and
fbstp
fcomip
stos
ror
and
sbb
pcmpeqd
adc
sub
cmp
inc
mov
pop
nop
decl
popa
shl
xchg
jp
pop
add
lret
out
jne
dec
scas
sti
mov
mov
clc
out
arpl
inc
jno
xlat
out
cli
aad
xor
cli
insl
jl
mov
out
cli
jmp
adc
test
add
scas
inc
push
xlat
jecxz
ret
dec
sbb
ja
fs
aaa
leave
stos
adc
fcomps
cwtl
pop
cmpsl
cmp
pusha
dec
aaa
xor
sub
pop
xchg
sub
push
jb
push
lods
ret
imul
mul
xor
mov
ficompl
test
fdivrs
mov
sbb
out
cmp
cmpb
push
icebp
mov
pushl
lods
and
nop
shrb
insl
cmp
cmp
mov
pushf
decl
mov
aas
jo
push
xorb
nopl
push
adc
fists
inc
lock
in
dec
mov
mov
daa
out
lahf
testb
jnp
mov
pushl
pop
dec
and
and
subb
ficoml
cmpsb
fidivrs
sub
fistps
xchg
or
push
clc
mov
dec
outsb
inc
js
xchg
mov
nop
out
clc
jmp
jne
cld
or
stos
scas
mov
sub
in
push
pop
jle
loopne
mov
clc
adc
mov
and
jo
adc
jbe
ljmp
pop
mov
daa
int3
and
imul
xchg
iret
int
xor
lcall
lds
out
push
shll
addr16
iret
inc
lea
scas
mov
cmpl
cs
pushf
mov
push
inc
fbstp
sbb
decl
into
jns
ficoml
push
daa
push
lcall
push
lret
fcomip
xor
pushf
push
enter
out
dec
inc
mov
lods
add
xor
jl
xchg
lcall
fisubl
mov
movsl
ljmp
repnz
aaa
in
leave
push
sti
mov
cltd
scas
or
fildl
inc
xchg
adc
push
lods
loope
jne
and
push
aaa
lods
or
mov
xchg
mov
jbe
xchg
pusha
inc
decl
nop
hlt
ret
pop
lret
jmp
rcrb
or
push
in
sti
fstl
out
clc
add
ljmp
fsubp
pop
lahf
add
xlat
xchg
jmp
dec
mov
gs
loop
aas
das
xchg
pop
fcmovnu
inc
mov
outsb
push
add
jnp
cli
mov
jmp
xchg
push
jg
dec
repz
sbbl
mov
cmp
mov
subl
or
vpsadbw
dec
adc
jmp
sub
movsl
mov
adcb
das
out
clc
ljmp
mov
arpl
adcb
test
ss
sub
mov
fildll
or
cli
mov
daa
push
lods
jl
jp
fcos
call
adc
ret
xor
push
flds
scas
mov
sub
jae
cltd
bound
push
dec
cld
fists
mov
push
pop
notl
and
jnp
mov
add
or
xlat
popa
ljmp
lcall
out
push
lret
je
std
stc
in
and
clc
push
add
pushl
and
sub
cmp
adc
or
je
jle
lods
push
leave
dec
xor
and
outsl
add
decl
sbb
jo
sbb
cmpsl
push
mov
fisttpl
xchg
cmp
push
fisttps
sub
divl
fdivr
out
push
jl
leave
aam
das
xor
in
bound
je
push
sbb
xchg
inc
daa
jb
inc
pop
sub
stc
sbb
pop
movb
mov
movsl
adc
ljmp
xorl
xchg
popf
loopne
cmp
andb
repz
push
popa
pop
xchg
repnz
sub
mov
sub
push
lret
rclb
sbb
clc
add
fistps
mov
xlat
sub
hlt
cmp
lcall
xchg
xlat
inc
stos
jae
loope
dec
out
iret
cmp
insl
movsl
jmp
mov
and
dec
xor
jmp
xchg
out
sbb
add
inc
push
outsw
sub
loop
ss
test
pop
mov
xchg
pop
mov
pop
js
ror
mov
scas
or
loop
inc
out
xchg
pop
ss
inc
mov
jne
or
call
movl
dec
pop
dec
sbb
leave
push
data16
adc
sub
out
jb
arpl
inc
mov
dec
mov
fcompl
rcll
mov
adc
inc
pop
jg
lret
jne
mov
insl
scas
es
aaa
inc
mov
jmp
mov
mov
ds
enter
out
sub
je
mov
pop
icebp
xchg
or
and
pop
cmp
xchg
xchg
or
and
test
pop
ja
add
js
adc
gs
sbb
fucomi
fistpll
mov
cmp
mov
sbb
jecxz
aas
arpl
or
loope
jmp
jmp
std
fstpt
out
dec
cmp
daa
mov
ror
outsb
add
xor
mov
stos
add
inc
leave
pop
push
pop
idivb
push
dec
cltd
jae
decl
fldl
pop
jno
dec
pop
ljmp
lcall
test
test
ljmp
aas
leave
dec
mov
out
mov
out
mov
loop
jl
lods
jno
xor
ljmp
out
cmpsl
push
or
sti
hlt
xor
add
jle
loopne
mov
test
call
ds
in
mov
and
insb
mov
mov
popl
jb
cmp
or
les
adc
pop
repz
out
jb
or
out
pop
add
mov
mov
jg
lcall
adc
imul
popf
jecxz
not
mov
adc
mov
dec
test
mov
xchg
pushl
jmp
adc
xchg
cmp
mov
pop
lods
les
movsb
xadd
sbbl
sbb
incl
inc
ss
loop
stos
lods
test
outsl
and
push
or
pop
loopne
call
pusha
cmp
je
fcoml
loopne
test
imul
mov
movsb
pop
mov
cli
in
lea
test
cmp
mov
test
les
stc
xchg
js
test
pop
aas
call
int3
decl
push
cmp
aaa
fdivl
push
xchg
test
rcr
push
and
lea
add
cmp
call
sar
lcall
pop
les
data16
sub
adcl
mov
mov
cli
iret
lock
add
push
test
xchg
inc
jno
out
xor
add
incl
and
pop
push
imul
icebp
lret
faddl
data16
xor
clc
icebp
hlt
and
lcall
adc
test
inc
int
into
popa
movsl
pop
and
adc
rorl
lcall
lods
mov
push
adc
add
add
push
movb
out
add
jnp
sub
ja
lret
pop
sub
mov
add
sbb
mov
std
aam
test
add
sub
jl
cs
lea
ljmp
jl
std
xor
leave
jg
ljmp
rcll
xchg
and
ret
and
xlat
loopne
fsub
jecxz
fisttpll
cmp
add
push
jne
ss
jg
inc
and
xor
jl
jnp
imul
in
xor
cmp
mov
scas
mov
fdivr
inc
nop
daa
outsl
test
xor
notb
push
push
push
jmp
add
dec
daa
lods
sub
mov
pushf
loopne
bound
lcall
jmp
pop
leave
in
dec
je
mov
dec
and
jno
dec
outsb
repnz
jmp
push
add
insb
ljmp
mov
dec
and
into
add
data16
jno
fcmove
dec
xlat
mov
fldcw
inc
lcall
mov
adc
into
pop
mov
je
jge
push
idivl
pop
inc
out
jae,pn
jmp
icebp
mov
aam
call
jae
mov
fcoms
xor
int
jg
test
pop
cmpsl
adc
cmp
insb
scas
test
ds
sub
lcall
mov
inc
popa
xor
and
and
test
jecxz
sbb
aad
lcall
pop
mov
mov
push
inc
push
js
aas
mov
inc
sbb
inc
sub
jg
fdivrl
outsb
aam
or
daa
jmp
ret
xor
test
aam
mov
pushl
subb
stos
mov
xor
adc
ret
je
pop
cld
incl
cmpsb
and
subb
push
mov
stos
cmp
rcrl
jae
jl
mov
lods
xor
iret
out
jo
ror
mov
inc
cmp
push
rol
cmp
call
xlat
test
push
or
cmp
push
mov
lcall
adc
mov
nop
pop
test
pop
pop
add
push
or
push
mov
js
and
hlt
xlat
jge
cmp
jmp
stos
mov
cmp
inc
test
jno
mov
add
mov
pusha
push
sarl
mov
data16
std
call
and
insl
cmp
lret
push
lods
scas
hlt
push
add
clc
mov
mov
sub
inc
push
mov
negl
mov
iret
pushf
inc
dec
adc
cmc
cmp
mov
popf
xchg
dec
sub
or
xchg
mov
sar
cmp
call
jo
repz
inc
fcoml
pusha
andl
decl
mov
js
mov
ljmp
movsl
pusha
xchg
gs
push
sti
int3
jo
scas
mov
sub
in
inc
or
pusha
int
xor
jg
xchg
jae
dec
mov
lret
sti
out
jmp
jecxz
hlt
jmp
enter
sbb
jmp
inc
mov
ljmp
lcall
add
or
adc
push
push
xchg
inc
repnz
inc
in
lret
sbb
stc
lret
lock
leave
out
lods
xorb
push
mov
fadd
call
xchg
ljmp
sbb
out
nop
dec
add
or
xor
lahf
daa
mov
push
int3
or
jg
sbb
arpl
out
adc
adc
loope
cmp
pop
movsl
mov
pusha
adc
lcall
xor
leave
xchg
pop
cmc
push
cli
xchg
mov
adc
fadd
leave
enter
xor
lea
xlat
mov
cmp
ret
xor
push
ljmp
sub
mov
decl
iret
push
pop
and
adc
daa
or
movsb
cmp
jno
mov
decl
mov
mov
insl
fcmovbe
repnz
jl
xor
cmp
dec
mov
jecxz
rorl
call
adc
dec
pop
cmp
incl
xchg
imul
adc
pop
xor
stc
xor
lea
das
adc
movsb
cwtl
inc
stos
je
ljmp
or
push
movsb
sti
mov
fcomp
rol
arpl
dec
fwait
enter
dec
nop
and
mov
into
mov
test
xorl
cmp
xchg
push
repnz
les
sbb
ret
dec
inc
mov
inc
adc
int
lcall
scas
ljmp
push
lret
xchg
push
add
pop
test
cwtl
imul
mov
cwtl
mov
faddl
cmc
xor
mov
cmp
xchg
into
addl
pop
mov
sbb
dec
mov
sbb
sbb
icebp
or
inc
repnz
or
dec
test
push
push
xchg
jmp
jge
pop
sub
dec
push
repz
ds
mov
push
sbb
adc
sbbl
jecxz
out
fldt
lock
mull
ljmp
add
push
jnp
pop
mov
je
nop
sarb
pop
loopne
daa
cli
and
in
add
std
ljmp
roll
lret
adc
lahf
das
jmp
outsl
out
inc
xor
lcall
shrb
out
cltd
jb
jle
jbe
flds
mov
sbb
add
inc
movsl
xor
lock
jg
or
pop
mov
cli
xchg
mov
insl
out
in
inc
mov
push
xchg
lock
pusha
sub
sti
jmp
mov
popa
xchg
popf
inc
dec
mov
fidivrs
mov
pop
stc
mov
lods
xor
call
mov
lock
add
ss
lahf
mov
scas
int3
dec
cli
xchg
fwait
pop
adc
mov
jbe
imul
lock
sub
inc
mov
sar
popf
xor
call
insl
mov
fdivp
cmc
scas
clc
inc
jne
fisubrs
or
fildl
sub
cmpsb
jae
mov
cmp
gs
loop
xor
lcall
out
mov
jmp
xchg
add
stc
hlt
mov
cld
jmp
lcall
dec
int3
pop
xor
outsb
sbb
mov
pop
mov
pop
inc
sub
adc
incl
push
xchg
sub
sbb
inc
fstps
adc
call
pop
hlt
cmp
mov
sti
jae
mov
mov
addr16
loop
pop
addr16
loope
dec
lcall
data16
movsl
cmp
icebp
push
loop
mov
lods
fwait
fisttps
in
add
cmp
or
push
stos
inc
pop
cltd
xor
xor
ss
xchg
lock
mov
and
mov
pushf
lcall
jmp
mov
pop
mov
in
inc
sub
sbb
call
mov
xor
call
xor
inc
mov
lahf
push
mov
pop
add
ja
movsl
dec
stc
out
and
test
pushl
mov
jp
cmp
ret
hlt
lods
pushf
cmc
sub
aad
push
loop
data16
lcall
xchg
nop
hlt
mov
loop
subb
adc
mov
cwtl
repnz
dec
mov
stos
or
shrb
cmp
ds
mov
jl
incl
jecxz
and
cmp
sub
dec
rcrb
mov
jge
jne
lcall
mov
orb
sub
cld
fcoms
insb
dec
fwait
or
push
push
hlt
decl
mov
sbb
mov
jp
sub
push
sbb
xchg
pop
dec
ret
sub
add
adc
pop
adc
clc
xor
ds
inc
fwait
mov
arpl
fdivrs
addr16
ljmp
lahf
ljmp
sbb
pop
pop
pop
test
sub
incl
fmull
cmp
push
mov
data16
mov
xchg
xchg
in
aad
lock
sub
inc
ljmp
in
cwtl
adc
cmp
repnz
mov
incl
mov
movsl
rcrl
je
fdivrl
inc
pop
add
sbb
pushl
and
adc
xor
xlat
cltd
loopne
cld
cmc
xchg
sti
mov
lds
add
incl
push
xor
cmp
inc
mov
icebp
xor
jmp
cmp
pop
pop
mov
mov
push
in
xchg
dec
mov
test
out
adc
xor
pushl
lret
orb
daa
sbbb
in
push
in
or
dec
cmpsb
incl
and
jb
insb
stc
in
lret
sub
mov
decl
xor
insb
fdivrs
and
aam
xchg
xchg
je
imul
rcrb
jg
push
shll
fildl
les
pop
cmp
xor
or
pxor
dec
jne
jge
lods
aaa
mov
repz
mov
sahf
arpl
in
daa
outsb
imull
out
test
ljmp
or
inc
pop
mov
xchg
sbb
push
daa
decl
dec
xchg
roll
add
mov
or
and
fcom
inc
dec
mov
lods
loopne,pt
out
cli
call
mov
pop
inc
pop
ljmp
jae
mov
cli
jmp
cmp
mov
leave
fldl
bound
std
imul
inc
insb
mov
sub
cmpsl
fstl
mov
sti
mov
jp
clc
mov
sbb
imul
fidivrs
push
mov
fwait
outsl
pusha
stos
dec
dec
adc
dec
leave
inc
mov
jnp
sub
stos
ljmp
pop
sbb
push
sub
push
repz
push
adc
mov
push
out
jb
cld
insb
ja
idivl
jle
pop
loope
incl
and
call
mov
or
add
mov
dec
jb
mull
jne
pusha
lcall
jmp
fimuls
fadds
out
dec
adc
sub
dec
js
ds
cli
maxps
add
jnp
sbb
sub
or
pusha
daa
adc
in
xor
shlb
or
mov
pop
push
cmp
cmp
fcmovnu
call
cmpsl
mov
in
bnd
cmp
xchg
std
add
push
push
repnz
ds
lret
jo
mov
xor
pop
jmp
inc
mov
add
inc
inc
jmp
out
and
adcb
add
or
jmp
in
push
out
xchg
sub
sub
jg
shll
sub
adc
push
sbb
int3
loop
mov
mov
outsb
jo
and
inc
lea
xor
hlt
lcall
add
cli
mov
test
push
cmp
fstpt
push
leave
and
xor
clc
dec
scas
scas
xchg
addr16
popa
or
out
jbe
ja
ds
fs
call
jge
jnp
aad
mov
or
clc
mov
adc
cmp
bound
repnz
and
push
cmp
mov
movb
std
roll
xor
les
mov
pop
sbb
call
repnz
inc
xorb
clc
ss
jbe
jo
or
test
lret
xor
pop
loop
dec
jle
pop
je
mov
inc
push
loope
jg
incl
insb
loopne
mov
cvtps2pi
sbb
xchg
shll
test
xchg
xchg
stos
pop
pop
jmp
push
xchg
out
pop
sarb
inc
and
cwtl
imul
push
mov
mov
sub
or
std
inc
decl
and
insb
push
cmp
cmp
loope
mov
mov
push
mov
or
ljmp
sbb
or
xor
sbb
icebp
dec
mov
es
rclb
mull
insb
pop
sbb
cmp
cmovnp
or
mov
push
fsubs
push
ds
enter
jo
xor
mov
mov
stos
mov
inc
cmp
ror
sahf
cmp
decl
push
fnstsw
call
pusha
sbb
jg
jne
aad
pushl
xchg
mov
stc
cmpl
push
sbb
pop
sub
mov
incl
outsb
jo
or
insb
add
cli
sbb
cld
push
adcl
hlt
das
jmp
and
outsb
rcrl
loope
data16
je
data16
adc
sub
sbbl
popf
pop
cmp
ss
pop
ret
cld
adc
data16
or
pop
ss
add
rep
cwtl
mov
ljmp
xchg
fldenv
outsb
push
xchg
lods
mov
xor
push
mov
mov
mov
mov
and
adc
mov
insb
data16
cwtl
inc
or
je
inc
jl
xor
push
inc
add
es
lcall
push
xchg
and
das
bound
fwait
aas
in
sbb
cltd
fwait
inc
mov
adcb
pop
insl
jae
push
sahf
xchg
or
dec
stos
push
push
test
jge
mov
push
inc
repz
and
out
test
xchg
stos
mov
fnsave
jns
jnp
in
cmp
int3
sub
or
or
add
lahf
fsubrl
aas
jg
jmp
push
pop
cmc
mov
lds
pushf
negb
add
cmp
test
jns
or
call
lods
and
in
sub
xorb
pop
std
dec
fnsave
and
xor
arpl
inc
jae
cltd
lret
inc
aam
shll
mov
mov
add
push
mov
out
es
sbb
push
movsb
xchg
lahf
mov
pop
call
add
dec
ljmp
ljmp
inc
mov
jmp
mov
flds
int
xlat
in
push
aam
cmp
loopne
mov
push
mov
jg
jne
fdivrl
push
and
lea
into
movl
repnz
mov
jmp
lods
out
loop
cwtl
sub
xchg
cli
mov
stos
push
inc
shll
push
das
jmp
popa
xchg
dec
pop
sbb
std
jge
out
sbb
xlat
push
rorl
ret
shl
in
and
incl
std
pushl
cmpb
xor
fmull
dec
or
pop
add
call
sahf
pop
jnp
lock
out
mov
cs
cmp
vsubps
cmpsb
ljmp
das
and
pop
xor
jne
dec
popf
mov
sub
add
leave
mov
pop
jnp
sbb
cmp
inc
xchg
insl
mov
jl
sar
decl
fstpt
pop
sub
cwtl
int3
stc
mov
lea
dec
ficoms
mov
ljmp
fnstcw
mov
loopne
xchg
pop
es
cmp
in
xor
xor
mov
cli
sti
adc
imul
out
cmp
add
addr16
push
ljmp
idiv
ljmp
mov
ja
sbb
pminub
pop
int3
pop
add
jge
lcall
pop
ror
sbb
iret
sar
jne
push
sub
inc
xchg
pop
dec
sbb
adc
lcall
inc
lret
call
add
std
jecxz
sub
dec
stc
dec
clc
movsl
push
mov
push
jmp
or
mov
xchg
mov
xchg
insb
lcall
in
jg
scas
and
pushl
push
mov
ja
cmp
pop
jle
dec
jb
stos
pop
dec
in
test
enter
ljmp
das
push
dec
sub
pop
es
jae
cwtl
fwait
mov
mov
push
push
incl
jo
leave
loop
mov
add
fsubp
movl
clc
lahf
push
in
mov
dec
xor
cld
xchg
iret
dec
loop
fnsave
cld
fiadds
jbe
les
dec
jmp
ret
pushl
xor
clc
pop
js
scas
jle
jne
and
jmp
add
pushl
dec
push
mov
xor
cmpsb
inc
xor
cld
push
xor
clc
call
pop
loope
pop
mov
jecxz
mov
mov
cmp
xchg
jbe
jnp
popf
cmp
out
lock
sbb
sarl
dec
jo
inc
lret
notb
popf
lcall
cmpsl
pop
push
push
push
bound
rcrb
rcrl
jae
call
gs
jle
sahf
pushf
mov
push
cmpsl
adcl
mov
mov
jecxz
xchg
jmp
incl
scas
subb
mov
add
insb
pop
ret
adc
pusha
cwtl
cltd
lahf
ret
aas
xor
mov
add
mov
adc
repnz
paddb
in
mov
incl
and
xchg
sbb
jl
xchg
mov
clc
inc
pushf
outsl
jl
outsl
fiadds
int3
fwait
incl
mov
dec
adc
sub
into
popa
mov
mov
rcrl
pop
call
pushl
mov
jcxz
pop
prefetch
add
loopne
add
or
xchg
std
add
in
cmp
ljmp
xor
dec
push
int
leave
movl
adc
aam
in
cltd
jge
daa
xor
cmpsb
out
clc
lcall
mov
in
mov
mov
dec
jg
push
xchg
push
andb
lahf
jg
mov
call
fsubl
ja
jle
decl
sub
dec
pop
dec
push
inc
adc
push
je
fcomip
push
fwait
and
push
js
cli
mov
jbe
movsb
push
imul
ds
ja
inc
sahf
mov
mov
pushl
shl
lock
mov
rcll
shr
decl
sub
cmc
xchg
mov
neg
cld
into
push
das
jmp
pop
mov
dec
js
mov
push
repnz
jl
das
adc
mov
ljmp
inc
test
faddl
int
dec
push
jnp
xor
pop
adc
mov
or
jge
mov
insl
inc
sub
call
ror
lcall
push
cmp
sub
inc
dec
icebp
lea
leave
and
cmpsl
mov
push
xor
nop
sbb
push
out
addb
inc
stos
call
stos
neg
jb
jmp
iret
or
mov
push
xor
push
mov
mov
pushl
sbb
ret
cs
fisttpl
data16
xor
enter
movsl
push
xchg
lcall
mov
jg
shrl
leave
icebp
xchg
mov
cmp
xchg
xchg
incl
cmp
mov
pushf
je
fistpll
mov
inc
xchg
jmp
pop
popa
or
popf
out
orl
negl
imul
out
xor
push
mov
and
xchg
push
push
dec
mov
lcall
into
popl
mov
dec
int3
sbb
clc
adc
add
and
or
and
movups
dec
call
test
scas
nop
inc
lds
repz
ret
loopne
out
jmp
bound
jnp
stos
js
push
stc
xchg
mov
rcll
and
ljmp
jmp
inc
out
ljmp
and
popf
mov
push
mov
lcall
or
ret
pop
lcall
sbb
and
mov
mov
ror
or
sbb
jmp
pop
jmp
dec
mov
ret
imul
aad
jmp
push
into
sar
ret
pop
mov
rcll
add
and
mov
sub
jg
push
cmp
mov
mov
subb
orb
sub
sub
pop
in
push
xchg
sbb
cmp
xchg
adc
pop
enter
nop
xor
xadd
inc
jecxz
ja
jbe
sbb
push
lds
cmpb
xchg
jnp
push
es
mov
fsubrl
shll
pusha
cmp
adc
adc
bound
faddp
cwtl
test
mov
and
pop
mov
push
xchg
jmp
imul
push
and
mov
inc
xor
lcall
xchg
xor
xchg
sbb
mov
mov
mov
fstpt
mov
xchg
neg
push
lcall
fistpll
ljmp
sbb
and
movsl
ret
int
popf
xchg
hlt
out
pop
in
decb
stc
xchg
sbb
xlat
dec
fmull
push
ja
inc
inc
and
rorl
loope
jnp
scas
fdivr
decl
fs
inc
stc
pop
sahf
cli
pop
push
in
jb
or
or
mov
out
in
test
sub
aad
incl
xor
mov
orl
das
loope
sub
outsb
enter
cld
aaa
std
sbb
lods
xchg
jecxz
mov
cli
mov
adc
cmp
out
jg
cmp
cmp
imul
test
call
inc
push
cld
mov
jno
pushf
dec
jae
xchg
popa
push
sbb
cli
call
push
lahf
push
ja
mov
adcb
sbb
icebp
mov
xor
bound
pop
icebp
jo
jle
sbb
mov
mov
call
or
cld
es
out
stc
flds
fmull
pop
adcl
mov
call
into
pop
nop
add
adc
inc
push
cmp
jecxz
out
ficoml
mov
xchg
push
sbb
xchg
dec
sub
pop
push
lcall
dec
push
lods
leave
mov
cltd
in
pop
out
pop
ret
icebp
xchg
lods
xchg
in
fcomip
jmp
push
push
xchg
xor
push
sarl
adc
xchg
adc
std
dec
cmp
cmp
jnp
call
sbb
es
dec
in
push
jno
pop
or
stos
jmp
cmp
xchg
dec
negb
mov
add
push
decl
out
push
clc
ret
movsb
xorb
int
and
sub
cmp
mov
pop
and
xchg
ljmp
cld
jge
mov
fimuls
into
add
jo
dec
mov
or
mov
sar
xchg
jns
xchg
and
add
hlt
mov
lock
mov
popa
loope
push
mov
data16
dec
pop
out
push
mov
jns
xchg
es
lcall
out
mov
scas
adc
jne
add
sbbl
and
pop
jg
ljmp
out
jl
out
insl
int
dec
addl
stc
bnd
pop
and
adc
and
mov
lock
cmp
xchg
out
rorb
rol
cmp
mov
and
xor
int
xchg
xchg
hlt
pushl
bound
lcall
mov
fcoms
cmp
sahf
and
jb
jmp
dec
sub
decl
mov
in
ret
dec
cmc
add
push
fdivrs
sub
mov
xchg
cwtl
sub
cmc
ljmp
mov
movsl
jmp
sub
cmp
decb
dec
fs
shrl
push
adc
inc
aaa
aam
das
xchg
incl
pop
adc
adc
dec
rorl
in
cmp
fcompl
mov
int
loop
pushl
orb
in
jmp
clc
aaa
fs
fstpt
clc
sar
decl
xor
adc
enter
int
jg
jmp
les
push
movsl
sahf
jnp
fstps
adc
lock
cltd
xchg
or
sbbb
inc
pusha
je,pn
dec
subb
jg
lcall
testb
push
aas
xor
loope
sti
dec
xor
sbb
addb
pop
leave
add
addr16
pop
inc
test
lret
clc
jb
enter
pop
aaa
pop
fidivrl
pop
int3
lcall
decl
popa
inc
mov
sbb
jns
in
aad
enter
stc
scas
lret
add
arpl
mov
cmpsl
xlat
mov
mov
cmp
test
lcall
decl
push
adc
pusha
test
mov
scas
adc
push
mov
jmp
mov
std
test
cmc
in
cmpsb
lret
lret
in
xchg
inc
in
xchg
clc
adc
pop
cld
incl
mov
pop
push
sub
mov
push
xchg
xor
incl
jno
inc
mov
jae
sti
pushl
cmp
fwait
scas
cli
nop
inc
push
pop
sbb
lods
clc
dec
fldenv
dec
or
incl
fnstsw
mov
mov
les
cld
data16
loopne
adc
lahf
aad
pop
out
aas
pop
pop
or
mov
gs
int
out
jecxz
loop
out
mov
inc
lret
add
and
je
and
xchg
push
jecxz
pop
fdivl
pop
flds
das
pushf
dec
cmpsl
clc
in
popa
jg
cli
into
mov
cmpb
pop
mov
cmp
lcall
nop
jle
pop
inc
les
add
pop
add
jg
sbbl
fistl
dec
push
sahf
push
sub
repnz
fistl
sbb
and
pushl
clc
std
inc
mov
xor
les
cmpb
aad
xor
icebp
adc
jmp
sbb
mov
adc
xchg
add
pop
ds
pop
pop
pop
loope
lea
push
push
outsb
jmp
push
sbb
repnz
mov
jmp
loopne
pop
pop
sub
loopne
es
shll
cmp
or
imul
mov
mov
jmp
inc
pop
out
fdivrs
or
insl
fs
clc
decl
cmp
mov
pop
mov
ds
arpl
xor
dec
orl
sub
lea
mov
jecxz
dec
dec
pop
pop
push
dec
pushf
and
or
push
out
mov
fldenv
out
push
fs
stos
sti
imul
je
movsb
jl
push
rorb
cs
xlat
stos
incl
inc
mov
push
cld
fisubs
std
out
in
fdivrs
into
enter
call
in
add
sahf
imul
pushf
repnz
mov
mov
jle
and
adc
jg
mov
mov
dec
mov
in
cmp
mov
repnz
je
call
imul
sub
inc
popf
pop
sub
cmp
pshufw
cmc
mov
jge
mov
sbb
jmp
shrl
push
mov
flds
call
mov
pop
mov
mov
ljmp
mov
xor
or
xor
dec
rol
pop
inc
sbb
fs
adc
jo
ljmp
pop
mov
sub
sub
scas
test
jb
xchg
test
jo
pop
adc
ficomps
add
mov
mov
aam
push
lcall
rolb
lea
or
sub
xchg
loop
addr16
je,pt
sub
cmpsl
arpl
call
fstpt
in
jne
jnp
mov
insl
push
sbb
fsubs
cmp
das
shrb
jl
fiadds
mov
pop
cmc
call
jle
fisttps
cmpsl
int3
cmpsb
cmp
stc
push
popa
pop
in
xchg
fstps
sub
bound
test
cs
cld
mov
les
in
push
sbb
xchg
incl
and
jnp
xor
rorb
or
shrb
jne
xor
pop
into
add
je
sub
in
stc
aas
inc
cmp
xor
pusha
xchg
mov
js
push
mov
adc
sbb
sub
jp
popl
push
adc
mov
xorl
and
sti
aaa
test
std
xchg
mov
mov
jnp
sub
push
stos
or
out
xchg
cmpsb
and
arpl
cmc
sub
outsb
nop
mov
call
xchg
dec
loope
or
mov
fwait
rorb
test
push
pop
pop
cmpsl
aam
cmp
call
loopne
enter
cmp
mov
add
jns
mov
test
test
jge
pushl
mov
mov
jmp
leave
out
push
out
movsl
fdivs
mov
jo
push
enter
mov
mov
movsl
std
cmp
js
xor
cwtl
movb
pop
imull
fs
jmp
adc
gs
sbbl
mov
push
aaa
xchg
cmpsb
or
cs
pushl
fcmovnbe
sbbb
cmpsb
repnz
mov
je
cltd
imul
dec
js
rclb
ds
ljmp
aam
addb
cmp
negl
adc
lcall
aas
out
lea
mov
dec
mov
popf
push
add
pop
xchg
xchg
push
call
sar
jo
xacquire
jnp
imul
add
outsb
outsl
cli
jmp
xlat
mov
sbb
in
sarb
fnstsw
bound
mov
and
lcall
xchg
imul
cmp
in
pushf
scas
sub
jae
popf
repnz
ljmp
ljmp
xchg
pusha
mov
pop
add
nop
inc
test
dec
jo
dec
pop
sub
jle
dec
cmpl
clc
pushl
push
sbb
mov
jb
or
call
roll
pop
jge
fadds
dec
or
ds
test
jmp
jo
or
lret
movsl
mov
push
jne
bound
out
or
negl
push
pushl
lock
inc
add
sub
xor
push
push
push
incb
movsb
in
pushl
cld
push
jecxz
dec
cli
mov
or
push
mov
lds
enter
fwait
test
pop
lret
adc
test
aaa
jae
mov
push
sbb
jo
int3
dec
call
in
nop
xor
in
pop
jnp
mov
cmp
inc
inc
jmp
jecxz
or
iret
outsb
clc
and
mov
shll
lcall
push
fwait
rcr
push
mov
out
mov
lret
push
cmp
and
lea
sbb
mov
jbe
addr16
int3
loopne
xchg
cmpsb
int
aas
lcall
sbbl
hlt
sbb
enter
fsubs
inc
sbb
imul
mov
je
aad
and
in
inc
push
push
inc
outsb
ljmp
ljmp
leave
ret
out
jl
arpl
dec
sub
push
sbb
in
sub
jmp
lahf
jge
ljmp
add
repnz
in
loop
shll
cmp
pushl
std
sub
mov
mov
dec
lds
jo
pop
jbe
call
pop
aad
mov
mov
orl
mov
in
decl
xor
test
mov
stos
sbb
and
jmp
jb
incl
cmp
mov
or
out
push
lret
mov
jnp
adc
mov
movsb
fwait
dec
xor
cs
and
dec
push
pop
add
inc
xor
add
decl
mov
leave
cwtl
pop
test
ljmp
jmp
mov
lds
inc
mulb
movsl
pop
or
incl
sbb
pop
mov
push
insl
mov
and
lcall
lcall
shlb
sbb
pusha
fldenv
fsts
pop
or
gs
inc
xor
rcrb
lods
push
loopne
jecxz
pop
fisubrl
mov
icebp
lcall
pop
icebp
in
mov
mov
in
test
sahf
add
inc
jne
and
or
incl
or
mov
fsubrl
xor
xchg
movsb
int3
movsb
dec
movsb
mov
adc
test
xor
sahf
or
call
jbe
pop
les
loope
add
sbb
orl
adc
push
mov
and
pop
rep
pop
loope
mov
cli
pop
ss
push
aam
mov
stc
push
notl
xor
mov
jo
add
gs
shll
repz
lcall
fisubs
test
incl
and
xchg
in
in
xchg
cmp
pop
in
rclb
into
xchg
xchg
decl
loope
pop
jmp
popa
mov
cmpsb
in
ficoms
jmp
mov
sub
loopne
icebp
mov
cmp
fisttpll
pushl
mov
iret
inc
mov
mov
mov
outsl
int3
add
mov
lcall
sahf
out
daa
mov
js
divb
mov
jno
outsl
cmp
fists
ljmp
push
lods
jb
jge
iret
mov
pushf
repnz
mov
mov
xchg
adc
mov
or
mov
cmpsl
inc
lea
or
ljmp
xchg
push
xchg
sbb
mov
add
mulb
and
xchg
insb
int
icebp
call
push
sbb
mov
sar
inc
add
pusha
xchg
imul
inc
jnp
data16
xor
xor
leave
mov
adcb
adc
jg
jmp
add
imul
sub
xchg
hlt
stc
stos
cli
and
out
not
inc
rep
adc
pushl
or
jle
movl
fdivl
iret
mul
fistpl
xchg
fcmovb
jmp
imul
mov
pop
pushf
push
mov
sbb
es
mov
pop
inc
cmp
xor
adc
lcall
in
xchg
pop
sti
mov
mov
filds
pop
push
xchg
push
pushl
rol
or
lcall
shlb
cmpsb
sub
movsb
pop
int
js
fisttpl
push
ja
lock
dec
inc
xchg
pop
insb
std
sbb
and
scas
push
mov
nop
ds
lcall
xchg
shrb
insb
jp
fildll
jmp
popa
lods
pop
and
jbe
cmp
enter
dec
testb
addb
call
mov
add
dec
mov
pop
jmp
sub
and
call
xchg
pop
push
push
std
mov
aas
insl
mov
adc
or
aam
aaa
aad
ljmp
popf
adcl
scas
insl
pop
fnstenv
insb
and
jge
or
mov
insl
dec
ds
mov
pop
jbe
orl
adc
sbb
push
mov
fcomip
call
repnz
sbb
and
mov
xor
sbb
pushl
add
adcl
int3
mov
data16
xchg
pop
adc
fwait
jecxz
fwait
inc
mov
xchg
incl
mull
push
dec
fistps
popa
test
arpl
mov
lock
sbb
pop
loopne
and
mov
insl
scas
mov
cmp
push
xor
les
mov
pop
lds
mov
pop
test
cs
js
ja
nop
in
cmpsl
cmp
gs
jbe
addb
outsl
or
and
jg
inc
out
cwtl
ljmp
and
ss
mov
ficoms
adc
and
cmp
pop
push
subb
jg
mov
jb
sub
int
pushl
fildll
call
pop
push
inc
dec
lret
mov
push
lret
pop
sub
xchg
je
mov
call
add
movsb
movsb
xor
test
loop
or
fs
ret
jae
fucomi
orl
incl
enter
in
pop
push
js
dec
adc
jg
incl
mov
stos
cltd
ret
clc
cwtl
int
mov
xor
stos
mov
lock
call
faddp
jo
sbb
mov
outsl
stos
fisubrs
lds
out
scas
adc
pop
int3
lahf
mov
xchg
inc
insl
xchg
aas
jae
in
jp
pop
dec
pushl
mov
xor
std
cmc
cmp
in
fdiv
outsl
xlat
pop
jmp
or
adc
out
cmp
in
lahf
je
test
add
repnz
push
jle
incl
sub
sub
xchg
rorl
aas
dec
mov
decl
mov
iret
xor
fstps
xor
imul
jecxz
cmp
add
jle
shlb
or
lods
dec
in
mov
aam
test
rcr
sbb
je
sbb
pushf
dec
test
fdivr
decl
out
pop
adc
push
ss
and
sbb
sub
jmp
push
lods
repz
fldl
fimuls
dec
inc
test
adcl
sti
dec
cld
mov
push
jo
lahf
dec
shl
or
fsub
mov
cli
bound
sbbl
pusha
rclb
dec
cmp
pop
mov
lcall
sub
insl
test
popa
or
push
xchg
lock
mov
cmp
adc
push
and
mov
mov
cmp
push
xor
inc
cmp
es
insl
or
call
out
test
outsb
sub
xchg
in
or
ret
dec
int3
shll
mov
aad
call
ljmp
push
add
push
test
mov
and
aam
repnz
hlt
pushl
nop
mov
adc
ljmp
xchg
xor
std
xchg
xor
ljmp
pusha
inc
out
mov
push
xor
or
shl
xchg
jb
jmp
pop
cli
adc
outsb
repz
jl
sbb
jae
inc
scas
ret
les
test
cmp
xor
mov
pop
mov
add
mov
repnz
jmp
xor
je
push
jle
dec
and
fmull
pop
sbb
lcall
jmp
ljmp
call
in
fildl
cmpsb
mov
mov
pop
in
pop
fs
cmp
decl
cli
jno
fmulp
push
push
popa
jmp
in
icebp
push
leave
in
icebp
out
gs
cmpsb
jg
push
add
adc
mov
aaa
pop
lret
push
dec
add
cs
jmp
xchg
push
jmp
addr16
pop
fldt
mov
cmp
push
cmpb
stos
lcall
sbb
inc
ret
mov
in
arpl
push
jl
cmp
mov
scas
bound
jae
and
aas
das
xor
add
aas
pushl
and
mov
pop
scas
test
cmpsl
jns
mov
adc
xchg
lds
jg
rcl
pop
mov
sub
sbb
mov
or
aas
sub
pop
mov
mov
mov
mov
xchg
dec
sbb
testl
jbe
dec
push
add
ljmp
in
and
out
xor
call
mov
dec
fcmove
data16
lret
das
in
out
pop
add
call
mov
pop
ljmpw
and
mov
out
xchg
adcl
mov
decl
push
sbb
mov
in
cltd
sbb
and
arpl
sbb
jmp
decl
mov
nop
into
add
pop
xchg
mov
xor
aam
decl
jmp
lods
cmpsb
and
mov
xor
call
xorb
adc
arpl
push
in
xchg
fwait
dec
adc
mov
adc
clc
cs
in
cmc
xchg
mov
xchg
pop
dec
xchg
test
adc
xchg
dec
sub
xor
gs
ljmp
ret
mov
iret
mov
lods
sbb
es
sub
pop
hlt
mov
dec
dec
cmpsb
shrb
gs
incl
in
mov
dec
cmpsb
mov
call
popa
stos
push
sub
mov
adc
inc
roll
out
stos
int3
mull
dec
out
xchg
insl
cmp
daa
fbstp
out
ja
add
sub
or
test
cmpsb
dec
xchg
push
test
lock
xlat
add
out
daa
push
cmp
call
xchg
add
fistpll
test
fs
inc
data16
xchg
in
cmp
push
push
xor
hlt
negl
out
icebp
gs
andl
cltd
jb
shll
lcall
mov
cmp
inc
int
mov
push
out
mov
sahf
divb
xchg
and
add
jmp
and
mul
pusha
mov
xchg
pushf
dec
dec
daa
sbbl
ljmp
push
cmp
mov
clc
sbb
insl
lds
shr
cmpsb
popa
inc
sub
fcos
mov
or
aad
or
ja
sub
arpl
scas
mov
lcall
das
stos
xlat
pop
mov
mov
dec
jle
cwtl
clc
maskmovq
fs
sbb
jno
decl
jge
out
push
std
out
dec
push
xorb
test
dec
outsl
cmp
mov
add
aad
mov
dec
pop
aad
inc
mov
loop
sub
enter
incl
pushf
pop
mov
std
push
or
cmpsl
loopne
lea
push
lahf
dec
mov
mov
inc
loopne
xor
jbe
popa
test
jmp
jae
mov
push
sub
dec
dec
sarb
push
mov
and
adc
pop
sub
les
mov
mov
lds
test
rorb
js
daa
push
ficompl
ljmp
xor
shlb
pop
dec
pop
test
lea
notb
fbstp
dec
loop
mov
mov
jno
pop
invd
clc
push
lds
sti
push
loope
icebp
cmp
lret
inc
or
ljmp
out
or
adc
addr16
push
fwait
push
inc
or
pop
stos
xor
xchg
sbb
repz
pushl
jns
sub
mov
movsb
push
add
out
imul
mov
lods
and
xor
cmp
pop
jae
push
subb
and
test
ljmp
push
stc
scas
cmpb
rolb
pushl
js
stc
pop
mov
jae
pop
inc
sub
mov
xchg
cmpsl
add
fwait
ja
cmc
incl
shll
sub
sub
movsb
sti
mov
or
jno
push
mov
lcall
pop
push
cltd
pop
or
jb,pn
clc
xchg
fidivl
jg
imul
scas
lea
repz
int3
aad
outsb
insb
pop
into
sub
push
mov
cwtl
imul
fnstenv
pop
hlt
in
imul
inc
ljmp
sub
jp
imul
je
cmp
call
loope
imul
cmp
xlat
mov
add
sbb
sbb
cmp
aas
inc
sbb
decl
inc
fadds
in
mov
jl
fwait
add
movsl
inc
and
pop
imul
sahf
pop
mov
inc
movsl
repnz
xor
xor
pop
fs
lahf
lcall
sbb
data16
xchg
fcomip
repz
std
pushl
mov
mov
mov
testl
ljmp
sub
mov
movsl
cs
pop
mov
inc
push
jbe
mov
filds
push
insb
lcall
jg
fidivrl
pushf
popf
xor
lret
adc
adc
jbe
hlt
sub
call
xchg
push
jnp
push
cs
add
movsb
adc
jmp
dec
mov
gs
mov
mov
icebp
jae
xchg
jle
jne
jno
pop
xor
xor
iret
push
mov
fistpl
mov
or
or
in
insb
pop
ds
mov
lcall
outsb
into
mul
nop
cmp
fnstsw
xorb
pop
sbb
flds
mov
pusha
inc
int
daa
sbb
pop
mov
xchg
insl
mov
cld
xlat
std
xor
sbb
or
mov
and
mov
gs
mov
xchg
out
aas
lock
cmp
loopne
aas
mov
fdivrs
daa
pop
cmovno
in
jbe
adc
pop
mulb
ljmp
imul
sbb
sub
data16
scas
cli
call
cmc
mov
aas
push
mov
xchg
push
sub
jmp
fdivp
cld
jg
call
mov
mov
dec
lds
fcmovne
jmp
mov
pop
lock
push
mov
push
and
out
stos
mov
adc
into
repnz
test
call
aam
mov
pop
lods
cmp
jno
clc
xor
sbbb
call
loopne
push
call
and
sbb
jae
push
mov
pop
jnp
push
inc
test
shrl
lret
cmpsb
fnstenv
decl
xor
pop
push
cmpsb
lods
nop
stos
mov
adc
mov
mov
pushl
pop
pop
cmpsl
xor
mov
outsl
or
inc
movsb
jge
push
in
cmp
fdiv
pop
std
shr
sub
and
andb
repnz
loop
adc
fcomps
add
xor
das
jl
pusha
aaa
shr
mov
out
adc
mov
decl
pushl
xchg
filds
dec
negb
js
sub
cmp
cmp
adc
mov
cmp
mov
adc
mov
popf
pop
or
in
jecxz
sar
lcall
mov
sbbb
addl
movsb
add
cmc
or
daa
popa
adc
incl
pusha
stos
in
adc
pop
push
adc
jle
loope
pop
mov
jb,pt
cmpsl
mov
pop
icebp
decl
mov
mov
test
sbb
xor
aaa
sahf
jl
aad
dec
or
mov
decl
icebp
ja
loop
jo
xor
mov
xchg
lds
cwtl
out
sub
std
scas
cli
orb
add
mov
xor
pusha
mull
pop
loopne
in
ret
rcll
sbb
push
jp
dec
cmp
cmpsb
scas
clc
inc
notl
or
adc
mov
movl
lret
outsl
cli
lock
sbb
adc
leave
sbb
and
mov
sbb
xchg
pusha
mov
dec
andb
pushf
pushl
lods
xchg
loop
jns
fwait
xchg
sarb
push
sahf
insl
cmp
incl
xchg
repz
or
cli
or
or
mov
add
popf
mov
inc
mov
vldmxcsr
push
and
pop
and
adc
lcall
lahf
sub
sub
movsb
pusha
mov
nop
lea
popa
push
int
out
ds
leave
jg
mov
or
add
add
and
stos
mov
ljmp
mov
fisttpl
mov
jle
iret
dec
test
in
xor
enter
aaa
cld
je
pusha
cmp
int
nop
fcoms
push
js
clc
inc
je
scas
xchg
aaa
int3
lods
call
incl
hlt
xor
lahf
rcrl
cltd
adc
jno
das
decl
xchg
push
and
je
aas
dec
imul
xchg
or
pop
incl
push
push
inc
imul
jp
dec
daa
sub
dec
pop
xchg
mov
cmp
cmp
addb
xor
in
in
jecxz
xchg
lock
mov
lret
cmpsl
sbb
sub
sar
fbld
cmp
sbb
xchg
loope
jno
jp
cmpsl
es
cmp
decl
jbe
sbb
or
ds
jge
fnstenv
mov
mov
ljmp
stos
sbb
icebp
mov
xchg
pop
loope
mov
pop
scas
out
fisttps
es
fldt
arpl
idivl
mov
nop
xchg
std
xchg
xor
enter
adc
insl
pusha
arpl
push
cli
bound
inc
push
scas
lret
repnz
nop
lret
mov
mov
shll
xor
test
insl
cld
push
xchg
xchg
xchg
xchg
into
mov
pop
sbb
cltd
inc
daa
dec
cmp
pop
xchg
into
cmpsl
in
out
xchg
lods
shll
or
xchg
and
mov
mov
push
in
decb
mov
clc
mov
push
inc
hlt
jge
jnp
xor
adc
mov
mov
nop
xor
pop
inc
inc
int3
hlt
cmp
outsl
std
mov
or
decl
je
and
sbb
insl
jp
mov
mov
cltd
jecxz
sub
sub
ljmp
jecxz
mov
mov
int
inc
imul
mov
or
inc
and
loop
call
pop
xor
cmp
and
movsl
pop
add
mov
dec
decl
xlat
jne
ljmp
adcl
push
mov
push
mov
gs
inc
jmp
std
mov
or
xchg
adc
sub
mov
data16
mov
xor
in
xor
jns
jecxz
pop
push
cltd
mov
jbe
sbb
call
push
sbbl
xlat
adc
cmp
in
mov
in
gs
test
mov
or
jg
mov
adcb
and
inc
sbb
mov
jp
fwait
xor
stos
repz
stos
js
sahf
mov
sbb
dec
sbbb
iret
sub
daa
flds
lcall
sbb
add
mov
fiadds
movsb
jp
ljmp
iret
jbe
dec
jl
xor
test
jp
xchg
jmp
push
sbb
adc
jmp
xchg
cmp
ss
jp
cmp
lcall
call
es
dec
dec
mov
jmp
pop
dec
cmp
mov
ljmp
push
jp
lret
aas
cmp
repz
cmp
adc
xor
xchg
push
rcrb
mov
aaa
enter
imul
aad
cmpsl
vpaddw
pop
div
call
sub
adc
in
jo
mov
xlat
imul
sub
in
lcall
enter
scas
cwtl
in
outsw
dec
pop
sub
hlt
clc
dec
cli
mov
and
push
jmp
xchg
popa
jp
push
scas
pop
jbe
lods
pop
jg
dec
jae
push
sbb
outsl
inc
sbb
jnp
fisubl
pop
in
mov
test
sub
ret
aas
adc
dec
lret
jmp
ljmp
cli
jmp
cmp
shl
pop
push
mov
add
cli
in
incl
pop
pop
inc
cltd
fstpt
push
mov
sub
insb
dec
dec
push
add
adc
sbb
cmpl
or
mov
jecxz
frstor
sub
decl
ljmp
inc
bnd
sahf
ret
test
add
or
jmp
adc
test
cmovb
push
pop
rolb
cmc
mov
cmc
sar
jp
ficoms
std
add
sbb
dec
xchg
push
xor
cld
rcr
lods
push
mov
stc
pushf
lcall
dec
jb
sbb
rcll
sbb
into
ret
cmp
cmpsb
jmp
cli
ja
popf
push
jl
pslld
jns
test
clc
rcr
scas
jbe
jge
mov
sbbl
jmp
mov
jno
sbb
fldl
xchg
mov
xchg
sbb
push
movsl
lods
pushl
es
fisttps
mov
outsb
jl
lea
in
mov
out
add
icebp
gs
xor
les
add
xchg
stos
decb
out
mov
or
add
sub
jge
fwait
into
das
lcall
mov
mov
aad
test
ffreep
mov
xchg
dec
add
das
sar
outsl
punpckhdq
out
popa
jg
lahf
shl
dec
les
adc
xor
push
adc
adc
sub
stc
mov
arpl
cld
stos
ret
xchg
cmp
xlat
push
pop
filds
shrb
push
or
or
ret
mov
pop
outsb
add
jne
into
push
inc
adc
cltd
adc
jge
aam
adc
pusha
sbb
jbe
sbb
pop
sub
ror
movsb
loop
and
or
sub
jge
jnp
aas
mov
sub
xor
adcb
ljmp
cmp
inc
outsl
incl
ljmp
and
add
in
jl
jle
mov
inc
or
and
lcall
lods
jecxz
fbld
xchg
mov
xchg
scas
add
out
aad
jp
xor
sub
int3
dec
ljmp
int
mov
xchg
hlt
iret
pop
adc
push
js
outsl
leave
outsl
mov
adc
cld
cmpl
arpl
popf
les
mov
clc
notb
pop
push
es
mov
lds
data16
call
std
xchg
and
add
mov
insw
lcall
push
lcall
pop
cld
xchg
mov
sub
andl
fadds
incl
dec
push
pop
into
and
insl
mov
gs
sub
pop
in
and
call
into
xchg
push
pop
insl
stos
add
and
xchg
nop
xchg
testl
jmp
movsl
dec
cld
push
bound
ja
and
out
out
fwait
cmc
mov
mov
mov
stos
dec
not
xor
cmp
loope
aam
cltd
clc
mov
adc
call
cld
test
lods
rcrl
jge
movsl
loop
dec
mov
fsin
xor
jg
roll
sbb
mov
and
jb
ljmp
jo
imulb
lahf
mov
cmpsl
mov
or
mov
aaa
fdivrl
push
push
dec
mov
push
iret
inc
std
lds
call
cld
xor
push
pop
cmc
push
or
mov
lds
and
push
jb
ljmp
cmp
cmp
outsl
mov
ds
cmp
mov
cli
arpl
sbb
dec
xchg
dec
xchg
mov
cli
and
xchg
jne
mov
call
and
fstpt
ret
sub
fcmovne
aam
enter
or
and
jmp
popf
inc
add
ljmp
add
iret
jge
jge
mov
pop
add
aaa
adc
loop
clc
jl
aam
hlt
test
mov
xor
jg
mov
ljmp
xchg
pop
or
aas
insl
ljmp
ljmp
mov
lods
xchg
cs
sub
clc
mov
dec
sub
xor
cmp
outsb
sbb
shrl
in
je
xor
pop
cwtl
jl
insb
xchg
jns
jnp
mov
mov
getsec
mov
js
pop
fldcw
nop
repz
pushl
xchg
or
movsb
push
push
jmp
jle
in
push
outsb
add
add
bound
jb
push
data16
popf
mov
sbb
outsl
fbstp
xchg
call
add
ret
jmp
mov
mov
push
pop
sbb
push
jp
push
test
lcall
jp
cmpsb
es
push
jno
fdivrl
stc
pop
scas
pminub
sub
repnz
mov
cld
pushf
dec
sbb
addb
push
clc
insb
jmp
nop
cmpsb
or
aaa
mov
fsubrs
shl
mov
in
dec
cmpsb
and
mov
adcb
pop
aaa
mov
lcall
sub
push
sbb
push
call
sar
dec
push
imul
sub
jge
pushf
dec
sub
stos
loop
mov
cmpsl
bound
xorl
les
shll
mov
rcr
inc
or
dec
push
les
pushl
xchg
test
movsb
mov
nop
cmpsl
out
xor
adc
movsb
cmp
jbe
sti
jbe
mov
mov
ja
subb
cmp
call
incl
sub
and
mov
dec
fcoml
cwtl
out
out
dec
mov
and
ljmp
cmc
scas
fstpt
mov
sarb
out
jl
out
addr16
pop
lret
mov
mov
pushl
lret
mov
int3
mov
ret
shlb
and
icebp
push
jge
inc
aam
adc
jg
cmpsl
pop
inc
mov
xchg
inc
push
mov
xor
cmp
xchg
mov
mov
xor
jne
rclb
push
call
xchg
xor
push
pop
shll
sbb
out
cmp
insl
add
jmp
jnp
jle
das
stc
xchg
jne
loope
push
jg
xchg
divb
mov
jp
adc
jmp
push
call
mov
mov
dec
mov
jo
or
dec
in
insb
and
sbb
ljmp
pop
nop
and
or
enter
pushf
cmp
push
cwtl
jnp
jne
into
cmp
call
jmp
mov
push
adc
aad
fcmovbe
push
pop
hlt
jbe
xchg
and
call
ljmp
add
shrl
js
nop
mov
mov
sbb
xor
or
filds
jbe
scas
imul
aaa
hlt
add
ljmp
push
movsb
xchg
cli
dec
lds
jmp
cmp
in
add
decl
and
add
mov
ds
outsl
push
and
ljmp
aaa
sbb
pop
sub
dec
repz
fbstp
push
jnp
test
dec
les
lcall
stos
mov
sti
ror
dec
inc
sbb
pushf
jle
scas
xor
jp
push
and
lcall
mov
pushl
insb
or
lret
lahf
add
call
jmp
inc
xchg
int3
push
jl
xchg
lods
mov
and
flds
fdiv
out
inc
mov
push
push
mov
pop
loop
xor
xor
fists
dec
test
adc
iret
int
add
push
mov
inc
cmp
mov
repz
sub
hlt
dec
and
out
cmc
adc
int3
lods
es
pop
in
cmp
add
push
lcall
sbb
cs
test
cmpl
jle
into
xchg
push
mov
rep
out
sub
pop
daa
in
movsl
cli
decl
xchg
sbb
or
jmp
and
not
sub
sbb
lds
pushf
or
xor
add
call
sti
pop
mov
mov
mov
cmp
push
iret
dec
mov
pop
jnp
pusha
jmp
sub
jnp
cltd
mov
jb
pop
and
fmuls
shll
jmp
movsl
incl
push
fbstp
sub
je
in
cli
outsl
ljmp
movb
jns
cmp
pop
cmp
nop
push
pop
cmp
push
call
jge
subl
in
mov
and
pop
mov
pushf
xchg
and
decl
movsl
or
lahf
inc
cmpsb
std
stos
iret
adc
cli
sbbl
mov
scas
sbb
imul
inc
cmp
or
enter
pushl
cli
test
sub
or
les
loope
call
add
les
rcrb
aas
arpl
imul
repnz
xchg
cltd
fmuls
test
ljmp
cmp
mov
sub
push
imul
push
xor
pop
dec
in
mov
cmovle
push
mov
mov
rol
push
add
add
loop
sub
sub
push
icebp
lret
push
cmp
sub
sbb
mov
int
jl
mov
cmc
outsb
dec
adc
ret
mov
pop
mov
fwait
xchg
fimull
aaa
mov
test
cli
mov
shrb
add
js
cwtl
dec
ljmp
sub
into
jg
and
push
std
fwait
or
xchg
push
jae
out
filds
cli
and
dec
roll
adc
out
test
mov
ret
push
popa
stos
xchg
sbb
mov
incl
mov
mov
das
sub
pop
sti
pop
jns
scas
stc
sub
decl
fldenv
jb
fs
xchg
or
stos
test
xchg
test
sub
mov
aaa
cld
incl
fdivrs
fisttpl
jns
out
dec
daa
stc
fxch
notb
mov
cmp
pop
adc
mov
push
jmp
aas
ret
dec
push
test
idivb
mov
popa
jmp
mov
mov
pop
pop
xlat
imul
sbb
test
ljmp
ljmp
addb
xor
pop
jmp
xchg
lods
mov
xor
daa
and
pop
subb
cmpsl
push
outsl
ss
ljmp
pop
jns
cli
pusha
outsl
and
mov
orb
cld
mov
mov
dec
push
frstor
xchg
pop
cmp
fistpll
cmp
pop
lods
xlat
mov
outsl
lcall
rorl
shrl
loopne
in
or
insl
stos
loopne
lcall
incl
lcall
shrb
xchg
adc
jecxz
iret
or
sahf
call
fcomp
cs
adc
rorb
in
mov
popf
arpl
dec
mov
mov
jae
out
pop
cmp
fistl
mov
push
imul
sub
cmp
push
add
clc
pop
mov
dec
xor
loopne
ret
out
test
lcall
out
out
dec
outsl
sub
sub
lock
jmp
hlt
stc
aam
leave
or
je
add
xchg
in
cli
cltd
cli
sbb
xchg
add
mov
push
stos
add
fprem
das
fdivr
push
dec
rcl
pop
cmc
ljmp
push
or
and
add
push
sbb
cli
imul
or
xchg
dec
mov
jp
cmpsb
push
xor
and
std
insl
jge
mov
in
or
push
inc
sti
cltd
push
enter
mov
mov
testl
dec
jns
add
bound
enter
test
pop
jno
loope
pop
and
lcall
pop
stos
sub
push
and
push
out
and
daa
or
aaa
push
lods
jnp
fcomps
lcall
ljmp
ljmp
mov
sbb
jg
mov
sbbb
es
push
das
sbb
adc
adc
or
lock
fcomip
incl
sub
mov
mov
mov
mov
inc
cmpsb
repnz
decl
decb
cs
adc
or
and
or
das
pop
adc
jmp
jo
fists
imul
or
lods
in
xorl
lcall
rcrl
jmp
insl
aaa
push
sub
int
pop
mov
and
push
das
sub
sti
mov
iret
aad
push
xorb
mov
sbb
or
pop
lds
popa
xor
shll
sub
call
or
and
or
arpl
std
lret
cmp
sarw
fnsave
call
cmp
ljmp
push
add
mov
jae
pop
and
sarl
dec
lcall
pushf
add
sub
push
mov
es
insl
push
jg
mov
psubusw
ss
or
negl
fs
xchg
sbb
pop
incl
ds
into
shll
jnp
in
shl
inc
mov
adc
int
sbb
jns
pop
and
mov
pop
pusha
push
sub
push
pushl
ss
out
or
sti
mov
and
call
decl
jb
mov
loopne
push
or
or
push
cld
mov
dec
outsl
incl
xchg
imul
lahf
js
andb
mov
in
mov
jg
incl
int
repz
and
int3
push
mov
jg
adc
imul
or
add
shlb
repnz
mov
adc
xchg
jno
jmp
or
out
jp
pop
and
push
cltd
xchg
mov
icebp
and
lea
add
lock
inc
cld
lret
ss
scas
and
inc
loope
mov
icebp
gs
mov
fistl
mov
mov
dec
cmpsb
data16
decl
or
sbb
test
jmp
lock
dec
lahf
lock
lret
stos
push
pushl
adc
fstl
cmc
mov
subb
pop
sar
jmp
lret
sbb
push
lahf
fstl
rorl
cmpsb
xchg
jbe
rcll
cmp
incl
fmul
aam
mov
shlb
jnp
pop
sbbl
out
rcll
incl
mov
fwait
gs
xchg
fnstcw
mov
push
loop
jg
xor
faddl
mov
jmp
test
and
xchg
sub
pop
sti
incl
dec
add
and
mov
iret
inc
or
int
dec
ja
push
cld
sar
jg
into
cmp
jle
mov
mov
sahf
dec
push
outsl
inc
int3
insl
push
hlt
les
dec
aaa
mov
jl
sahf
add
xor
data16
sar
call
repz
arpl
repnz
dec
imul
pop
fimull
jl
mov
push
pop
xor
pop
cld
pushl
std
std
sub
mov
repz
mov
fucomip
or
loopne
pop
imul
inc
aam
fisubs
imul
jge
call
outsl
dec
movsl
add
out
xor
fwait
lea
pop
ds
mov
shl
decl
cmp
call
fsubp
adc
jp
inc
adc
test
sub
sub
mov
or
sub
push
xor
test
xchg
loope
mov
sbbb
pushl
popa
dec
push
cltd
jecxz
sub
jmp
jmp
cmp
lea
dec
add
andl
fnstcw
insl
mov
lcall
daa
pop
add
mov
adc
arpl
sbb
arpl
ljmp
adc
xor
loopne
inc
push
stos
cwtl
xor
dec
inc
push
hlt
int3
inc
repnz
dec
jg
insl
or
filds
jecxz
fmull
lret
sub
clc
mov
or
jmp
xchg
imul
sahf
jle
mov
mov
nop
dec
pop
inc
mov
pmaxsw
decl
xchg
sub
and
aas
adc
addr16
fadds
lret
jmp
mov
mov
dec
xor
xor
or
into
jmp
movsl
xchg
call
pop
or
divl
rorl
mov
xchg
mov
stos
insb
fdivr
fwait
incl
push
and
pusha
pop
pop
mov
ret
fcmove
loop
cwtl
pop
decl
xchg
arpl
push
test
mov
and
fisubl
fwait
jecxz
ljmp
xchg
ja
or
rclb
xchg
imul
mov
out
cli
jg
js
call
and
pop
xchg
mov
xchg
and
or
jmp
push
subl
sub
pop
xchg
cmp
je
mov
push
mov
jb
outsl
mov
jg
std
lahf
add
mov
push
push
xlat
xor
ljmp
mov
outsb
or
cmpsl
jb
pop
xchg
aas
nop
test
incl
popf
add
iret
mov
mov
mov
pusha
bound
incl
mov
jb
mov
adc
loop
out
inc
jae
cs
cs
jge
aas
les
jg
jmp
test
xlat
ret
push
leave
dec
js
xor
roll
call
pop
pushf
test
jge
jnp
mov
push
loop
and
icebp
repz
scas
xchg
rolb
dec
lock
aaa
mov
scas
xor
inc
adc
xchg
sbb
insb
mov
fs
incl
sbb
movsb
stc
adc
xor
mov
xchg
add
or
add
ret
cmpsb
rorl
dec
mov
dec
mov
cmc
xchg
and
pushl
add
cmpsb
cmpsl
sub
ljmp
loopne
pop
mov
jmp
inc
adc
fmuls
das
dec
es
push
xor
ds
push
push
dec
lods
data16
xchg
mov
jns
inc
incl
filds
ret
push
mov
and
daa
out
pop
cmp
cli
fcoml
rcrb
ljmp
jmp
pop
lcall
call
jns
popf
aaa
xor
ret
cmp
fnsave
pop
fstpt
jp
push
ljmp
pop
sahf
fadds
jb
push
andl
pop
repnz
fnstsw
call
loope
or
data16
lret
mov
rcl
in
das
pop
xchg
rorb
movsl
mov
ljmp
int
test
loopne
jg
add
scas
jno
fsub
add
mov
mov
jae
incl
idivb
test
xchg
add
push
sub
mov
add
push
mov
into
int3
mov
cmp
pop
cmp
dec
xchg
dec
mov
mov
cli
subb
xor
cmp
sub
dec
inc
popf
mov
test
out
out
loopne
pop
or
push
xor
lcall
icebp
and
cmpsl
mov
pop
in
pop
adc
outsb
push
jbe
into
jns
sub
scas
ljmp
arpl
popf
jbe
or
inc
comiss
roll
xor
sbb
jp
mov
sbb
or
mov
push
inc
sbb
mov
test
sub
and
push
push
cmp
jb
les
enter
push
out
and
ds
jmp
mov
lcall
mov
nop
pop
addr16
xchg
push
jp
or
inc
lods
or
mov
fdivrs
sub
push
sahf
sahf
add
push
jae
jb
cli
add
and
jo
lcall
pop
xor
mov
mov
fistpl
mov
dec
push
stc
pushf
push
in
es
lock
andl
popa
fcmovnbe
add
insb
sbb
sub
adc
mov
stc
lea
test
mov
fstps
jg
and
jbe
sti
xor
jl
call
aad
fidivrl
mov
cld
mov
jo
or
mov
imul
out
push
imul
mov
cld
imul
ret
jmp
mov
cwtl
push
adc
xchg
jl
inc
xchg
inc
lock
pusha
stos
xchg
push
add
dec
rorl
out
ljmp
xchg
movsb
cld
and
sub
jae
xchg
push
inc
push
nop
pop
sub
call
ret
mov
sarb
pop
in
adc
pop
jbe
out
mov
push
and
dec
popa
pop
lahf
cmpsb
mov
repz
jge
mov
or
popl
enter
xor
lcall
movsb
cltd
out
mov
mov
mov
inc
push
sar
decl
xor
inc
int
and
mov
pop
scas
inc
jbe
cs
adc
cmp
decl
dec
jl
pop
or
sbb
stos
and
push
mov
mov
add
icebp
orl
xor
aad
and
sbb
loop
xchg
call
mov
stos
icebp
add
push
mov
call
or
sbb
or
pop
pusha
imul
pop
imull
fsubl
ljmp
and
in
add
outsb
pop
fs
and
xor
cmc
push
sub
mov
decl
arpl
sbb
aas
out
adc
adcb
das
mov
or
pushl
or
das
sbb
xchg
test
movsl
jle
cli
mov
je
ret
push
arpl
pusha
lcall
shl
jb
xor
ja
inc
cmpb
enter
int3
pop
dec
repz
call
in
pushf
jo
sbb
cmpsb
dec
pop
sar
std
movsl
adc
das
pop
add
xchg
sar
aaa
xchg
xchg
jno
hlt
mov
inc
test
call
nop
xchg
add
or
add
setae
lods
jno
mov
out
lret
push
icebp
inc
test
sbb
xchg
mov
out
pushf
pop
data16
sub
mov
xor
call
scas
js
inc
aaa
out
mov
xchg
sarl
sub
push
call
cs
mov
popa
icebp
jo
pop
pop
out
insb
and
in
sbb
js
jae
sub
jmp
mov
adc
add
cltd
jecxz
std
dec
hlt
ljmp
jg
or
mov
mov
icebp
aad
in
or
mov
pop
inc
add
stos
outsb
push
movsb
cli
xlat
fwait
scas
and
inc
lahf
aas
jns
jae
inc
cmp
nop
sbb
jg
ljmp
popa
sub
add
sbb
mov
clc
push
push
rcrl
idiv
sbb
lcall
fldcw
shll
cmp
or
mov
jb
cmp
dec
lods
pop
enter
xor
adc
xchg
fcomip
aad
fnstcw
add
push
push
add
cmp
aam
cmp
dec
pushf
xlat
ljmp
loope
lea
lock
sbb
mov
fsubrl
push
mov
fcos
or
decl
cmp
jge
out
dec
dec
shlb
nop
sbb
sbb
mov
mov
out
mov
xchg
out
imul
lahf
dec
vunpckhpd
ljmp
ja
repnz
lret
or
fnstcw
aad
pushl
je
cmp
pop
push
and
dec
dec
movsb
push
xchg
cmc
push
push
loopne
addr16
pop
gs
sbb
out
hlt
push
cmpsb
and
mov
jno
add
out
cmpsb
push
dec
iret
cmp
dec
push
call
lahf
movsb
dec
repz
iret
in
icebp
divb
mov
mov
aaa
lahf
xor
mov
mov
push
adcb
jo
ljmp
lcall
add
pop
lock
mov
mov
pop
daa
or
sub
add
inc
mov
and
stc
sub
inc
add
arpl
popf
jno
jle
test
ljmp
pop
lds
push
add
adc
je
dec
mov
fsubr
sub
insb
cmp
mov
lahf
push
fidivrl
mov
iret
cltd
enter
movsl
jg
decl
inc
mov
es
nop
pusha
fdivs
ja
fldenv
adc
add
call
pop
rorb
pop
xor
xor
es
and
lea
or
fistpll
test
xlat
ror
cld
movsl
aaa
leave
insb
xor
mov
mov
decl
es
pop
and
push
sub
ljmp
jnp
cli
imul
jmp
mov
pop
fwait
shlb
and
fidivl
std
stc
jb
clc
popf
inc
jo
xor
call
or
cltd
cli
in
xchg
xchg
xchg
dec
stc
lods
ja
or
push
insl
scas
push
xchg
test
cmpsb
or
sub
hlt
pop
cmp
pop
or
jmp
add
pop
sarb
sub
incl
ret
mov
push
lcall
xchg
ljmp
mov
bound
fstpl
enter
ficomps
jb
dec
sub
pop
jmp
cltd
inc
sub
mov
pop
or
jecxz
sbb
xor
push
inc
xchg
jg
dec
call
mov
sub
sbb
push
sbb
mov
push
pop
sarb
icebp
push
out
jp
jns
xor
cmc
das
lret
lret
mov
fidivrl
ljmp
xchg
or
repnz
rcrb
sbbb
es
mov
cmc
stos
call
lods
loop
dec
out
js
push
push
out
insl
sub
jecxz
sbb
jg
ret
outsl
push
xchg
inc
imul
dec
jle
push
cltd
or
das
hlt
aad
jo
lds
or
aad
outsl
jp
pop
pushl
jmp
inc
cmp
jge
xor
sbb
out
shll
test
ljmp
jmp
mov
movsl
xor
inc
sbb
xor
ljmp
ljmp
pushl
je
aas
push
jno
xor
push
xchg
sti
fcoml
les
sbb
lret
add
loope
jmp
inc
fs
push
shlb
cmp
orl
xchg
lret
mov
incl
bound
adcb
jle
notl
call
hlt
inc
int
in
inc
sbb
popa
add
negb
push
imul
mov
insb
shll
decl
add
sub
cmp
xor
out
mov
lret
jmp
and
outsb
repnz
movsl
movsb
adc
lods
mov
push
and
adc
or
xor
add
aaa
pop
dec
and
in
addr16
xchg
dec
sbb
cli
jb
sub
xlat
mov
and
lcall
push
and
sub
xchg
dec
mov
divl
adc
jg
movsl
pop
add
rorb
xchg
mov
xchg
mov
out
mov
ljmp
mov
sub
ljmp
adcl
push
ret
sub
lcall
mov
fisubrl
cwtl
roll
cmp
inc
in
lret
and
lcall
cli
dec
popa
or
or
or
ret
fimuls
mov
out
xor
sub
add
movsl
daa
movsb
jbe
jecxz
data16
mov
jg
pop
loopne
inc
jno
dec
sahf
push
pop
scas
mov
jae
mov
call
inc
mov
outsl
xchg
mov
mulb
adc
imul
mov
xchg
jl
cmp
push
mov
decl
inc
pop
or
daa
adc
loop
test
xchg
jb
arpl
pop
fiaddl
call
mull
call
cld
movsl
and
fldl
cwtl
xchg
das
mov
xchg
decl
sub
stos
enter
fwait
mov
sbb
out
idiv
lcall
fcompl
movsb
ret
je
shrb
dec
ret
in
mull
add
stos
je
scas
cli
pushl
adc
pop
in
xor
dec
popa
loop
add
sub
xor
decl
fmull
mov
fs
cld
cltd
mov
xchg
sub
mov
fidivs
jmp
arpl
pusha
xchg
add
mov
pop
mov
adc
xor
xor
out
icebp
push
mov
add
dec
data16
loope
mov
jo
leave
jmp
jmp
and
subb
std
mov
add
nop
test
pop
arpl
lods
xchg
mov
or
decl
aam
gs
adc
xor
adc
mov
cwtl
cmp
ja
pushl
sbb
sbb
das
idivb
repz
pop
adc
lret
lods
imul
mov
jnp
dec
ret
and
jns
mov
add
pop
or
cli
mov
outsl
bound
out
mov
add
call
mov
cmpsb
ds
call
mov
imul
out
cli
mov
testb
into
jb
fcmovnu
out
mov
sub
jo
jg
cs
mov
and
call
push
mov
push
test
push
out
jmp
inc
cmpsb
fdivr
call
cwtl
mov
jnp
pop
push
call
inc
int
add
aam
or
sbb
repz
push
repnz
cmp
lret
add
jg
call
sbb
in
cli
xchg
dec
bound
scas
mov
inc
fisttpl
subb
dec
push
arpl
cmp
insl
dec
lret
decl
pop
sbb
hlt
jp,pn
fnstsw
mov
add
mov
mov
or
ljmp
and
cltd
push
cmp
mov
dec
push
xchg
pop
int
repz
jo
xchg
jne
enter
pusha
stos
out
mov
adc
addr16
add
jnp
add
or
pop
push
es
xchg
push
cmp
and
fidivs
mov
mov
cld
dec
push
xor
outsb
pop
test
mov
xor
jb
jg
mov
fbld
insb
pusha
or
sbb
outsb
or
bound
sbb
lcall
int3
mov
ror
mov
negl
push
ss
jne
push
movb
call
cli
scas
js
dec
mov
push
xchg
cwtl
in
and
lret
adc
pop
cmp
rcl
add
jne
inc
ljmp
fnsave
mov
sbb
and
decl
mov
in
pop
inc
mov
ss
sbb
push
arpl
cli
inc
ret
mov
gs
pushl
xor
popf
sbb
pop
mov
mov
push
in
pop
int
dec
cmp
add
movsb
call
out
fsubrs
int
test
mov
int
test
and
fldt
adc
lcall
imul
movntps
cmp
mov
adc
call
aam
fs
push
dec
loope
dec
sub
loop
jg
mov
sar
fisttps
mov
push
cmp
and
gs
push
or
cwtl
pop
or
lock
xchg
inc
lea
imul
xor
lcall
pop
fistl
inc
xchg
pop
fdivrp
decl
call
xor
xlat
test
add
inc
rcrl
pop
ljmp
lock
ss
dec
not
add
sbb
push
in
ficompl
sar
pushf
rcrb
pushf
adcl
mov
incb
push
mov
mov
test
sbb
mov
fwait
cltd
pop
filds
mov
pop
xchg
lds
sbb
adc
ljmp
aad
add
pop
cli
cmpsl
inc
clc
dec
mov
cwtl
popf
insl
xchg
pop
pop
stc
andl
pushl
mov
addr16
add
add
stos
xor
call
ljmp
xor
xor
loop
sub
sarl
push
jmp
xchg
pop
test
sbb
push
lahf
xchg
sbb
mov
loope
lcall
add
fsubrs
leave
movsl
pop
mov
loopne
loop
cmp
mov
shrb
cmpsb
sbb
insb
das
aas
sbb
pushl
fidivs
mov
jbe
ffreep
jle
dec
call
inc
dec
gs
fucomi
push
call
xchg
mov
pop
xchg
js
push
mov
and
add
lcall
xor
stos
gs
loope
dec
jl
mov
pop
andb
out
pushl
cld
rcr
sbb
lret
adc
mov
scas
sub
sti
hlt
mov
decl
cmp
xor
and
mov
out
in
imul
adc
mov
es
ljmp
mov
pop
adc
je
dec
cs
dec
push
xchg
sub
call
push
xchg
dec
mov
jmp
cwtl
pop
arpl
pop
or
lods
rorb
fdivr
mov
decl
xchg
js
push
jbe
movsb
or
sub
inc
test
fdivl
xchg
push
xlat
sbb
std
push
jge
fs
and
loopne
sbb
xchg
mulb
mov
incl
cld
add
dec
jbe
add
and
pushf
daa
adc
out
pushl
jne
cmp
sbb
shlb
xlat
out
and
js
jae
mulb
jnp
fs
jecxz
call
or
outsb
push
daa
stos
fisubl
cmpsb
rcrl
ret
mov
adc
sub
dec
jmp
int3
inc
adc
pop
iret
lds
jnp
sti
outsl
adc
adc
ja
inc
jg
std
jge
cwtl
sub
mov
cmp
lods
loop
ja
stc
pop
pop
mov
cwtl
roll
ja
pop
icebp
dec
sarl
cmp
stos
inc
sub
das
gs
ljmp
pop
push
roll
loope
stc
subb
out
jnp
bound
xchg
in
mov
pushf
or
sub
inc
sub
cmp
add
inc
cld
mov
pop
mov
sarb
decl
jle
pop
loope
shlb
and
mov
inc
ljmp
ret
sar
out
inc
out
inc
mov
mov
pop
lret
mov
inc
mov
mov
jne
pop
int
mov
bound
fists
roll
mov
clc
loope
jge
leave
jg
sbb
les
ljmp
rcl
push
xchg
iret
cltd
mov
jnp
xor
xchg
push
movsl
test
pop
dec
push
mov
cmp
fsubs
cld
lret
jo
pop
subb
jmp
sbb
or
inc
pop
andb
in
jp
frstor
call
dec
jo
idivb
and
xlat
std
sbb
jg
sub
jmp
mov
mov
xlat
scas
xchg
nop
mov
loopne
push
adc
call
adc
inc
mov
or
pushf
or
mov
insl
frstor
out
decl
mov
mov
mov
inc
mov
orl
ljmp
scas
jo
mov
stc
add
sub
lcall
xchg
decl
fisttps
xor
inc
push
cmc
pop
sti
or
adc
fiadds
loop
mov
lcall
inc
sbb
xor
lret
testl
popa
mov
mov
lods
adc
jmp
lcall
mov
lret
adc
add
jecxz
pop
jne
sub
in
fcoml
jnp
push
scas
mov
rcr
xchg
pop
xor
push
out
xchg
pop
dec
iret
mov
test
repnz
mov
adc
pushf
sbb
ljmp
bound
sbb
nop
popf
or
int3
stos
insl
xchg
and
mov
push
ljmp
inc
pop
leave
xor
or
insb
cmp
push
push
inc
pop
int
mov
jmp
es
fnstcw
pop
fstpl
add
stos
and
decl
popf
rol
pusha
jo
mov
mov
shll
add
xor
mov
pop
cmp
out
cmp
mov
mov
clc
andb
shl
movsb
incl
add
mov
xor
adc
push
inc
jp
pop
shrb
sub
div
scas
and
cmpsl
movsb
pusha
and
lods
frstor
push
hlt
pop
cmp
dec
inc
and
mov
out
movsb
xchg
add
and
test
push
mov
xchg
lea
xchg
aaa
std
call
pop
xchg
test
inc
pop
cld
ffree
lcall
cmp
jb
mov
ljmp
in
scas
jle
or
adc
icebp
add
cmpsl
das
js,pt
jo
or
pop
ljmp
cmc
lret
mov
add
sbb
lahf
aam
inc
ljmp
out
iret
lcall
mov
aas
xchg
mov
imul
incb
xchg
dec
dec
in
xchg
mov
dec
loopne
idiv
inc
pop
dec
repnz
push
lret
mov
cmp
mov
out
push
test
or
cmc
pushl
pop
xor
inc
xor
out
loopne
add
mov
aam
adc
fists
in
push
push
in
mov
out
pusha
int
aad
xor
and
out
ljmp
jmp
inc
pop
push
mov
sbb
inc
sbb
clc
daa
pusha
cld
test
sbb
push
mov
mov
in
es
pop
pop
mov
mov
outsb
mov
repnz
sar
stos
decl
mov
adc
sub
xor
sbb
decl
and
add
xchg
cmp
mov
hlt
aam
bnd
and
shlb
add
xor
icebp
xor
jo
adc
cmp
cmp
decl
in
mov
adc
push
aaa
mov
scas
jbe
mov
sub
call
mov
pop
lcall
aas
sbb
pop
xor
push
ret
and
in
lcall
daa
test
adc
push
add
loope
movsb
les
dec
jbe
push
pop
sar
dec
sub
mov
xchg
sub
int3
fildll
in
inc
lds
jnp
xor
movsl
decl
outsb
imull
int
lahf
xchg
or
in
in
test
loope
push
pop
adcb
movsl
popa
mov
inc
lret
je
jp
fnsave
enter
inc
push
cmpsl
mov
mov
lcall
adc
fnsave
mov
pop
push
ret
into
sbb
pushf
lds
das
icebp
inc
cmpsl
das
clc
fcomip
xchg
dec
sub
add
dec
int3
sti
out
and
clc
mov
rcl
loop
fbstp
inc
pop
lcall
ret
ljmp
jle
sbb
dec
andl
pop
lds
out
dec
mov
cmp
adc
roll
adc
movsb
pop
cmpsb
pusha
sub
lcall
mov
pop
test
pop
xchg
sbb
pop
mov
mov
in
sub
mov
ljmp
xor
push
enter
dec
int
or
or
movsl
scas
xor
push
xor
icebp
call
fnsave
insl
int
adc
jb
jp
imul
das
cli
pop
mov
push
in
jmp
pop
mov
jmp
mov
dec
dec
cld
xchg
mov
sub
iret
movsb
mov
fwait
jp
repz
shl
fimull
add
in
mov
inc
mov
out
adc
sbb
enter
push
push
imul
inc
fdivr
call
stos
xor
pushf
icebp
fdivrl
out
and
xchg
inc
jecxz
mov
inc
push
push
mov
je
orl
sbb
lahf
pop
xor
incl
jmp
iret
add
adc
pop
mov
mov
push
lret
cmp
lcall
lock
sub
sub
testb
mov
mov
mov
cmpsl
mov
adc
jns
clc
shl
sub
jge
inc
cmpsl
jb
pop
adc
push
or
mov
or
mov
call
sbbl
cmp
push
lret
jmp
or
enter
fsts
arpl
jo
mov
inc
ljmp
outsb
jge
push
sahf
mov
pop
sbb
ss
in
xor
cmp
ljmp
mov
dec
stos
lret
rep
mov
andb
mov
out
decl
ds
inc
pop
mov
mov
and
jno
sbb
stos
pushl
ljmp
sbb
mov
pushf
jbe
jnp
and
jmp
lcall
sbb
inc
xchg
int3
loopne
xor
jp
sahf
sbb
mov
xlat
lret
pop
rcll
mov
aam
mov
xchg
ljmp
ret
jnp
imulb
in
test
xor
xor
rcrb
ja
rcrb
ud0
fsubrs
std
popa
sbb
xchg
jns
loopne
insb
je
cmp
ss
sub
ljmp
mov
insl
sub
sub
push
int3
iret
shlb
mov
dec
addl
clc
fbstp
out
js
sbb
insb
lods
test
mov
pushl
and
mov
add
clc
inc
mov
mov
icebp
mov
ss
ret
movswl
pushl
push
push
sbb
pusha
dec
xor
cmpsl
imul
lcall
int3
fisubs
mov
mov
and
test
inc
jnp
sub
cltd
mov
outsl
pushf
jae
cmc
dec
xchg
sahf
push
in
jnp
cmp
lock
loop
mov
aaa
push
pusha
rcll
stos
and
loop
imul
mov
lods
in
int
icebp
ja
out
xchg
shrb
push
xchg
cmp
cs
push
cmp
push
cmp
hlt
xor
incl
xchg
jp
mov
das
sbb
inc
aaa
dec
lret
cmpsb
lods
mov
dec
sahf
xchg
in
das
sar
mov
daa
mov
in
mov
add
movsb
mov
inc
pop
pushf
jmp
xor
cmpsl
loop
fidivrs
mov
add
mov
jns
adc
paddsw
adc
lcall
cmp
jg
push
pusha
jp
outsl
dec
insl
pop
rcrb
fistpll
jo
pop
ljmp
jg
pop
jmp
lgs
movsb
mov
lea
jge
mov
test
mov
in
int
addr16
dec
jno
pop
lods
mov
mov
push
mov
adc
push
cs
cmp
xor
call
xor
xor
push
hlt
fnsave
jle
jp
stc
dec
loop
lock
cld
push
cld
lcall
cmpsb
mov
adc
inc
xchg
pop
mov
add
dec
push
aaa
mov
lods
inc
sub
add
cmpsl
sbb
adc
jecxz
call
sub
nop
mov
mov
xchg
popf
test
inc
jnp
mov
xor
and
xor
sub
mov
pop
sbb
js
cltd
jg
jmp
cmp
cmp
add
and
push
lock
pop
pop
xor
sti
xchg
fisubrs
call
inc
aad
jbe
and
add
mov
xchg
pop
xor
or
into
clc
mov
dec
cmp
rcrl
pop
scas
lcall
rcll
sbb
jno
cmpsb
in
fwait
push
push
lcall
cmp
popa
jnp
mov
cmc
mov
ja
adc
dec
mov
cmp
jmp
xorl
sti
stos
or
mov
in
stc
xchg
mov
data16
adc
decl
fs
hlt
lea
cli
out
fldcw
xchg
cltd
inc
mov
xchg
adc
inc
pop
mov
test
out
les
dec
inc
add
cld
push
inc
adcl
mov
push
xchg
mov
dec
cmp
add
in
popl
inc
out
movsb
ljmp
sahf
cmp
xor
cmp
cli
out
dec
push
out
shrb
loopne
test
pushl
outsl
mov
cltd
outsl
xchg
test
sub
inc
sub
mov
mov
lcall
incl
adc
mov
out
xchg
js
mov
stc
mov
inc
mov
popf
pushf
out
fcoml
popf
outsl
dec
pop
sub
push
out
call
loopne
pop
test
test
sbb
cmc
jns
adc
xlat
inc
loopne
mov
pop
dec
notrack
lcall
dec
cmp
lods
out
add
or
sti
push
decl
inc
fildll
loope
dec
mov
push
or
scas
je
inc
mov
gs
dec
pusha
xchg
mov
inc
dec
subb
dec
dec
aad
test
sbb
call
pop
lock
mov
loope
jmp
out
xor
sub
dec
mov
mov
adc
leave
adc
stos
xchg
sbbb
lcall
les
jmp
orb
push
pop
in
mov
stos
out
and
push
cs
sub
mov
test
incl
sbb
inc
test
pop
mov
nop
icebp
mov
and
xchg
push
xchg
jle
les
lahf
test
cwtl
sahf
push
xchg
sub
cwtl
sarb
dec
mov
mov
out
inc
inc
xchg
adc
les
push
insb
leave
jno
ljmp
clc
ljmp
insb
xor
xchg
xchg
inc
xor
rorb
jmp
pop
mov
add
shll
lock
popa
fwait
add
repz
ret
add
cmpsb
in
stos
sti
mov
jb
cmp
push
inc
mov
push
sub
pop
inc
sbb
cwtl
and
adc
pop
icebp
or
mov
adc
add
decl
xor
insb
in
fs
adcb
add
movsl
xor
rcrb
pop
mov
incl
js
push
rcrl
jno
daa
pop
lds
aas
cli
cmpsl
cs
dec
inc
pop
test
lcall
mov
das
mov
fsincos
add
mov
adc
or
cltd
aad
adc
inc
adc
inc
cmpsl
lods
sub
xchg
jl
xchg
pushf
sar
decl
mov
loopne
ret
test
push
sub
aam
xchg
xor
loopne
mov
sub
ficoml
sti
adc
pusha
dec
mov
stos
clc
cmp
mov
roll
scas
cmp
and
cltd
repnz
mov
mov
decl
jp
aad
sbb
mov
repz
mov
hlt
mov
and
adc
das
add
loopne
fistps
ret
xchg
nop
mov
clc
dec
sub
mov
xchg
incl
movsl
pop
int
hlt
fistl
pop
fwait
pop
adc
outsb
ljmp
mov
xlat
and
xchg
inc
leave
jmp
xchg
jle
mov
jmp
cmp
cmpsb
mov
cmpsb
test
dec
dec
xchg
in
leave
cmp
xor
fisubrs
and
das
jae
add
inc
and
adc
aas
or
jae
xchg
movsl
xchg
cld
jecxz
xchg
leave
scas
cmpsb
out
js
fcomip
cmp
inc
outsl
and
jecxz
pushf
out
leave
js
addr16
dec
sbb
jg
mov
insl
lods
test
js
lods
bnd
loop
xchg
pop
cli
pop
cli
in
sbb
mov
inc
lea
ljmp
mov
jb
lret
pop
cs
xor
pop
dec
fildll
jg
std
std
dec
jl
les
mov
out
inc
dec
sbb
cmc
call
or
inc
sbb
push
push
stos
lret
pop
inc
mov
pop
lahf
sar
incl
cmp
jl
enter
faddp
cmp
inc
or
ljmp
pusha
rclb
in
mov
jmp
push
and
dec
push
scas
fldenv
gs
jb
aad
stos
in
sub
outsl
push
icebp
sahf
cmpsl
fcomip
mov
into
adc
cmp
loopne
xor
sbbl
jmp
and
rcr
inc
ljmp
xchg
fcomp
mov
in
scas
fsubs
int
fcomip
decl
jno
icebp
adc
sbbl
push
insl
repnz
movl
pop
inc
mov
inc
sub
stos
mov
add
xor
call
mov
lcall
sahf
insb
or
jl
add
push
call
dec
dec
outsl
mov
enter
shll
aaa
stos
loope
decl
iret
xchg
or
jae
je
push
xchg
sub
addb
mov
lcall
jne
or
pushf
jb
fmul
mov
xor
and
sbb
hlt
ljmp
fcomi
xchg
shll
or
or
les
insb
std
xlat
xor
mov
lcall
add
and
shll
cmp
lods
rcrl
loopne
or
adc
push
incl
flds
pop
adcb
dec
inc
sbb
shrl
pop
dec
inc
data16
shlb
inc
mov
mov
test
xchg
fadd
ds
jmp
mov
clc
push
js
jecxz
xchg
push
dec
aas
arpl
inc
rorl
jo
xchg
push
pop
test
jmp
subb
pop
pop
fs
inc
loopne
mov
leave
pop
aad
je
adc
fadd
xor
fistpl
subl
fistpll
nop
in
lods
xchg
shl
lods
jp
or
cli
dec
cmpsl
xlat
cmp
jl
lods
mov
mov
sar
loop
mov
push
adc
stos
gs
icebp
mov
jp
inc
jno
lods
mov
outsl
mov
shrl
stos
mov
fldenv
jmp
call
lds
add
sbb
stc
hlt
bound
xor
sbb
lret
or
cld
call
pop
rcrl
pusha
xchg
push
pop
fstps
pop
jo
fcoml
lcall
and
dec
out
pop
and
adc
stos
aad
insl
or
dec
push
icebp
dec
insb
mov
sbb
std
stos
xor
movsl
and
imull
pop
loope
divl
jmp
shlb
jg
out
sub
push
dec
loop
cmp
pop
call
sbb
adc
and
jle
sub
lcall
mov
sti
out
cwtl
mov
fnstcw
cmpsl
adc
and
pushl
pop
push
mov
insl
ret
inc
cld
or
dec
push
repz
push
lret
stc
pop
mov
mov
pop
mov
jns
dec
mov
mov
push
dec
sub
push
jmp
cmpb
jg
addl
jae
movsb
addr16
jmp
cli
mov
incl
lods
and
mov
lcall
fdivp
ret
mov
movsl
cmp
xor
decl
jle
mov
fildll
lds
loopne
sub
lahf
xor
out
jecxz
shlb
scas
jecxz
or
xchg
push
mov
dec
insl
or
pop
sbb
cmp
xlat
or
add
out
or
push
stos
xor
imul
in
lahf
xchg
mov
mov
outsb
push
cli
pmulhuw
mov
jg
sub
push
mov
lods
jmp
dec
repnz
push
cwtl
addb
insb
lea
lret
movsb
ds
lods
imul
fisubrs
cmp
cmc
cmc
pushl
mov
mov
loop
test
xchg
repz
pop
loope
xor
cmp
fists
fmull
xchg
push
rcll
sub
repnz
das
out
dec
inc
jg
iret
jp
adc
dec
das
adc
push
stc
jmp
xchg
mov
cmp
lds
loopne
pop
fsubrp
jecxz
lret
cmp
ds
push
pop
sar
lcall
xchg
xor
mulb
ret
pop
xor
sbb
fistl
jnp
cmp
xchg
mov
jo
mov
mov
jecxz
mov
mov
add
xor
popa
aam
pusha
mov
cs
clc
xor
les
jmp
ljmp
mov
cmpsb
je
gs
mov
cmc
and
ljmp
dec
test
iret
mov
push
sub
cltd
loop
jle
cmp
lods
lcall
jb
stos
jns
push
push
insl
push
rcll
jae
out
aam
mov
xchg
mov
mov
pushl
arpl
and
pop
fwait
imul
xchg
mov
decb
add
scas
dec
add
call
inc
xchg
rcrb
dec
xchg
sbb
adc
repz
xor
hlt
test
stc
call
sub
sar
add
test
stos
sbb
pop
out
ja
dec
push
fcmove
mov
jmp
dec
mov
inc
lret
mov
xchg
mov
incl
insl
cltd
xor
dec
movsl
out
fnstenv
inc
add
xchg
sti
and
nopl
cwtl
push
lods
inc
pushl
push
addr16
jmp
ror
sub
xchg
gs
popa
cmp
imul
xor
jp
adc
pop
xchg
ljmp
push
push
dec
pop
mov
mov
and
ljmp
pop
ljmp
cmp
mov
add
jge
arpl
cmp
xorb
push
hlt
clc
adc
xor
sbb
lret
jp
dec
decl
pop
out
mov
cmp
push
in
add
call
add
aam
gs
cmp
fdivs
jl
dec
jno
push
mov
out
mov
lds
sti
jmp
mov
clc
jns
imul
pop
lea
dec
inc
jns
push
inc
lcall
sub
cs
cwtl
inc
test
out
fcoml
mov
mov
lcall
cmp
jne
cmp
sub
jno
add
fcmovnu
jmp
rorl
rcrl
xlat
mov
prefetcht2
into
sbb
lahf
test
inc
mov
jmp
cmpsl
lcall
sahf
fucom
es
xor
sbb
xor
jecxz
call
xchg
jnp
jne
jo
sub
test
mov
inc
dec
test
pop
out
shlb
nop
lds
pop
xor
xor
pop
push
out
fidivs
adc
cmpsb
out
add
push
imul
fistpll
shr
jbe
fsubl
data16
in
in
push
nop
insb
push
test
jo
pop
stos
les
jno
js
popa
cmp
sbb
mov
mov
fcos
call
arpl
add
into
pop
hlt
jle
xor
mov
icebp
mov
xor
testl
insl
sti
sbb
enter
xchg
sar
pop
mov
je
cmc
mov
push
mov
ljmp
mov
mov
and
sbb
adc
and
orl
fiadds
lcall
jge
repnz
jg
nop
pop
sub
mov
cmp
adc
lcall
push
aam
add
ss
adcl
pop
pusha
mov
aad
in
in
and
shlb
pop
cmc
pushl
out
mov
push
or
mov
icebp
cmpsl
movsl
aad
iret
scas
sub
pushl
cld
push
jmp
xlat
pop
hlt
jbe
mov
jmp
lahf
in
pushl
cld
xchg
in
ljmp
popf
xchg
push
cmpsb
xchg
mov
jno
call
sub
lcall
or
mov
lret
daa
cmc
subb
mov
outsl
mov
mov
fs
push
pop
push
icebp
incl
inc
test
mov
lea
jno
aaa
out
rcll
jg
fistpll
std
cmp
cs
stos
mov
iret
hlt
bound
imul
fldt
adc
xchg
dec
and
xchg
fwait
jp
push
mov
call
push
leave
stc
mov
push
pop
push
cwtl
add
sub
pop
jb
mov
arpl
mov
jmp
ret
fs
jp
and
xorps
pusha
add
jne
bound
cltd
es
jb
cmp
inc
push
lcall
aas
fisubrs
loopne
mov
fs
std
jmp
insl
fwait
loop
neg
inc
and
jle
adc
sbb
dec
lcall
ljmp
out
lods
int3
lods
movsl
sbb
dec
cli
aam
sbb
push
and
incl
in
fs
mov
ds
in
fstps
aam
andl
cmp
pushf
lea
out
clc
incl
lea
jl
inc
out
dec
xor
and
movsl
cltd
cmc
mov
incl
dec
rcl
adc
fldcw
mov
outsl
out
push
add
ficompl
push
jb
imul
pop
mov
pop
mov
dec
stc
ret
incl
test
cmpsb
out
sub
push
xlat
mov
rcrb
xorb
pushl
jge
ret
popf
lcall
fcmovu
mov
les
idiv
jae,pn
movsb
iret
pushl
sbb
pop
jecxz
aam
aas
pop
outsb
pop
repnz
out
ret
mov
push
flds
cli
adc
xlat
lret
add
inc
xor
out
addr16
mov
xchg
xchg
cwtl
aam
push
push
shlb
fdivs
lahf
mov
xor
popf
xor
call
sbbl
stc
aaa
lock
out
jl
out
mov
outsl
cmp
mov
ja
mov
test
hlt
push
add
mov
clc
jo
xor
jmp
jno
push
insl
or
dec
pusha
int
cmp
jae
stc
adc
loopne
and
xchg
push
sbb
insl
das
cmp
or
decl
xchg
rcrl
sub
adc
push
mov
ljmp
inc
mov
push
jmp
fs
add
sub
imul
mov
pop
lret
xchg
inc
mov
cmp
stos
mov
sbbb
pop
je
xchg
ss
mov
fidivrs
or
iret
push
in
xor
in
xchg
xchg
jg
fidivs
icebp
pushl
inc
ljmp
mov
xchg
add
popa
mov
cli
lcall
std
sub
into
jl
xor
xchg
lret
jecxz
sbb
sbb
gs
sbb
decl
pop
icebp
adc
mov
mov
pop
add
mov
adc
push
pushl
les
jmp
adc
inc
in
mov
out
lcall
pop
inc
adc
pop
mov
pusha
or
xchg
lock
test
imul
out
shr
pushf
xor
clc
push
movsb
das
subb
in
stos
jae
sub
cmp
push
pop
divb
mov
ja
sti
hlt
orl
stc
aam
xor
jb
repz
decl
add
rolb
sbb
movsl
jmp
dec
mov
xchg
inc
push
add
xchg
dec
jecxz
jae
jecxz
shrl
or
mov
fcoml
call
mov
xor
adc
xchg
aaa
shll
stc
lea
mov
lcall
arpl
add
mov
pop
shlb
fwait
and
jmp
test
scas
and
ret
adcb
inc
outsb
movsb
sbb
jne
les
aad
enter
stos
jb
sbb
repz
stos
mov
sub
outsb
cmp
xor
loope
or
movsl
push
cmp
clc
cmpsl
sub
aas
sbbb
dec
jnp
cmpsl
mov
call
loopne
xor
pop
sub
arpl
sub
mov
sub
sbb
ljmp
call
leave
andl
insb
rorb
xchg
mov
inc
push
inc
cs
mov
stos
pop
pop
aad
lods
in
inc
jg
pop
int
ja
add
inc
icebp
sbb
sar
lcall
cld
aaa
sub
popf
nop
stos
or
xchg
inc
into
mov
mov
call
popa
and
ljmp
mov
testl
jge
mov
cmp
push
pop
out
or
or
mov
xor
ret
das
mov
ljmp
mov
and
int3
and
sti
das
popf
mov
sub
or
decl
fidivs
loopne
mov
fnstenv
adc
jb
repz
xor
loope
ljmp
sub
push
sbb
int
cmp
cs
aas
mov
popf
jp
sub
adc
gs
jp
jecxz
mov
les
xor
fimull
mov
lods
popf
cmpsb
sbb
arpl
in
bts
lods
push
stos
mov
and
sarb
jl
cmp
loope
jg
inc
popa
or
psubq
fnstenv
xchg
xchg
cmp
cmc
mov
adc
lcall
jp
jne
imul
dec
push
and
outsb
cltd
and
and
stos
xchg
and
js
jl
decl
pushf
popf
or
mov
jecxz
jno,pt
shlb
mov
enter
inc
sti
out
out
insb
decl
ret
pop
jl
mov
sub
nop
fadds
or
mov
mov
dec
xchg
out
jae
fstps
xor
push
mov
sub
add
sbb
jnp
pushf
std
clc
mov
pushl
pop
cs
sub
mov
push
lret
adc
das
jb
pop
sbb
out
push
add
icebp
iret
jg
jle
js
push
jo
xchg
and
xor
or
pop
fnstcw
movsb
cmpb
inc
fwait
std
inc
jmp
push
jge,pt
jbe
call
add
jne
movsl
hlt
pop
dec
mov
inc
out
sar
pushl
xchg
or
lret
arpl
test
jp
enter
lods
std
decl
mov
into
cmc
jg
mov
adc
stos
outsl
test
gs
scas
push
lcall
dec
mov
push
and
pushl
ss
cli
jb
jb
les
lret
push
ret
and
les
jg
dec
inc
push
jne
inc
arpl
hlt
dec
mov
aad
lret
rorb
mov
and
push
mov
inc
push
inc
xchg
nop
sub
arpl
and
pop
inc
fisttpll
cmp
decl
lods
ret
insb
out
push
ljmp
push
add
out
push
add
jecxz
and
xchg
sub
add
aad
sub
fcomip
out
ja
xchg
in
jno
loopne
xlat
fcmovne
subl
testb
mov
adc
pop
jge
sbb
mov
mov
stos
int
lea
mov
adc
mov
mov
dec
incl
cmp
shlb
push
jae
add
push
inc
je
hlt
icebp
mov
lahf
add
loopne
dec
cs
dec
adc
xchg
adc
std
call
call
andl
sbb
mov
xchg
pusha
push
and
arpl
mov
pop
xor
add
inc
dec
sbb
sbb
hlt
push
mov
das
clc
xchg
in
adc
push
movsl
adc
testb
xchg
jp
test
imul
dec
out
cwtl
sub
cmpsb
xor
es
jno
fcmovnbe
ss
popa
gs
icebp
cmp
and
ljmp
push
sbbl
mov
fstl
aad
add
into
push
lods
ss
clc
ljmp
call
subb
fsubrs
outsl
jmp
incl
orb
flds
push
adc
add
cltd
mov
decl
sub
dec
andl
cltd
fsubrs
sbb
mov
xchg
lods
xor
lcall
dec
cmpsl
into
pop
xchg
enter
mov
dec
fsubrs
js
out
ljmp
pushl
or
mov
mov
pop
pop
es
cmc
daa
in
fwait
pushf
pusha
out
sbb
scas
jnp
out
lret
cmp
cli
lock
xor
movsb
test
ret
lcall
lds
movsl
sahf
nop
stos
and
ficompl
adc
or
mov
ja
out
in
push
xchg
test
xchg
mov
mov
jmp
out
push
push
fisubrl
pop
sbb
inc
cwtl
dec
int
and
xchg
test
int3
insb
inc
mov
inc
lods
cmp
out
popa
xchg
xor
cmp
sti
dec
push
aam
loopne
ret
lock
cmp
mov
pop
vandnpd
sub
enter
mov
imul
cmp
imul
decl
pop
ror
cmp
cmp
cli
and
xchg
xchg
loope
je
mov
ljmp
jbe,pt
inc
mov
lcall
xor
and
sub
movsb
addr16
inc
add
js
call
ljmp
data16
jge
adc
test
clc
pop
cmc
pushl
dec
push
push
pop
movsl
push
push
icebp
adc
xchg
lahf
int3
pushl
pushl
pop
push
cld
jmp
inc
xchg
pop
push
aad
pop
test
jmp
shl
xor
inc
pop
out
movsb
mov
inc
mov
dec
xchg
aaa
sbb
data16
jmp
addr16
jnp
jnp
stos
aas
xor
mov
push
cmp
das
xlat
lods
push
and
movsb
adc
addl
decl
push
cmp
ljmp
ljmp
add
bound
push
pop
xor
fldenv
loopne
dec
jmp
inc
les
pushf
sahf
ficoml
xchg
ljmp
in
pushf
lahf
or
shlb
dec
insb
lret
and
or
fcomp
fsubrp
push
ljmp
imul
pop
bound
xor
leave
fisttpl
addr16
cmp
loope
ljmp
adc
or
test
mov
xchg
add
js
jnp
sub
adcl
push
sbb
adc
mov
stc
jns
and
cmp
cmpsl
push
hlt
dec
add
callw
inc
push
xchg
or
mov
dec
xchg
shll
dec
arpl
call
adc
sbb
daa
jle
push
or
jmp
loopne
popf
das
repz
lock
sbb
ret
lds
jg
ljmp
out
sbbb
cwtl
shll
pop
insb
out
ret
fs
mov
call
sbb
movsb
insb
fsubp
je
fldcw
push
inc
in
stos
xchg
scas
sub
dec
mov
call
mov
cmp
and
push
or
and
or
dec
fcoms
cltd
mov
cli
dec
add
xor
out
dec
ret
out
out
repz
xor
aaa
push
xor
dec
push
call
je
mov
out
mov
or
ret
jl
sbb
jnp
mov
popa
std
mov
repz
adc
mov
jp
sub
jbe
add
jmp
imul
jl
test
and
dec
in
xor
lods
aas
out
js
cld
mov
lcall
mov
inc
cltd
loop
mov
mov
aad
je
push
aaa
mov
je
ljmp
push
mov
mov
xor
fadds
stos
fnstenv
xchg
popf
andl
icebp
cmpsl
mov
xchg
add
or
cmp
addb
add
dec
push
pop
icebp
jmp
mov
pusha
les
jmp
inc
in
add
mov
and
pushf
in
jb
addr16
loop
add
decl
pop
xor
mov
int
scas
int3
mov
lods
in
aas
jns
lcall
into
inc
push
push
mov
mov
cld
ds
shll
icebp
call
cli
adc
mov
dec
mov
cmp
push
mov
das
pop
mov
jge
out
lcall
in
xor
sub
jg
push
mov
pop
or
pop
cmpsb
and
aas
out
scas
cmp
sub
lock
inc
test
sti
jbe
cmp
dec
test
jne
outsb
pusha
pop
mov
loop
push
mov
lods
mov
clc
imul
cli
inc
mov
xchg
stos
dec
iret
mov
push
jle
arpl
pop
pop
insl
jmp
push
fadd
out
add
hlt
cmp
fsubrp
mov
fucomip
mov
mov
dec
lret
add
pop
or
push
enter
outsl
push
js
sub
mov
mov
pop
push
sub
dec
fwait
cmp
jns
mov
jb
pop
das
jg
mov
out
std
xor
hlt
or
adc
in
mov
mov
mov
mov
jmp
xor
lret
rcr
clc
mov
fcomps
jb
add
sub
sub
xchg
decl
push
dec
cmp
mov
push
sbb
xor
or
cmp
jmp
sbb
andl
outsb
xchg
jmp
lcall
decl
cmpl
sub
push
push
je
and
mov
call
inc
or
divb
aas
xchg
sahf
add
sbb
cli
lcall
insb
dec
fwait
add
mov
int
and
or
or
sti
or
jmp
sub
cwtl
inc
lods
xchg
cmp
out
fists
and
movsl
jl
push
add
nop
loope
gs
clc
mov
jmp
jmp
cltd
pop
fistl
rcr
fucomip
pop
sbb
lock
scas
shll
and
mov
jg
in
clc
inc
mov
dec
cmp
jbe
mov
imul
inc
jns
stc
mov
xchg
mov
push
adc
es
cmpsl
ret
lcall
sub
jg
mov
ss
cld
dec
sahf
fldl
stos
mov
rol
sbb
scas
clc
call
pop
push
xor
or
les
lods
ljmp
je
xor
or
cmpsb
fistps
out
pop
nop
dec
nop
test
jbe
mov
or
xor
dec
addb
cwtl
or
jae
je
scas
nop
into
outsb
test
clc
mov
xor
test
and
call
std
data16
jg
incl
mov
je
fdivp
xor
movsb
fsubl
inc
lahf
fsts
jo
cmp
cmp
sbb
dec
aaa
cmp
inc
inc
dec
insl
jne
xor
ljmp
mov
sbb
mov
adc
into
arpl
push
jmp
in
xor
push
daa
scas
mov
ja
lcall
pop
fcom
iret
mov
outsb
les
or
push
xchg
inc
aaa
and
adc
call
dec
sub
int3
and
dec
aaa
stos
push
outsb
jg
and
loopne
call
rcr
sahf
cmp
mov
and
inc
clc
mov
mov
gs
es
call
orl
insl
mov
jne
jns
popf
iret
inc
push
pop
nop
rorb
mov
ljmp
dec
xchg
mov
mov
jg
sub
ja
cmp
xchg
cmp
mov
sub
pop
stos
jmp
mov
or
sbb
inc
jae,pn
iret
mov
mov
lcall
adc
loop
je
sbb
pop
lcall
rcll
adc
or
or
mov
aad
stc
jae
inc
sub
mov
jmp
out
sub
mov
inc
sub
xor
cmc
inc
mov
fdivrl
cmpb
push
inc
mov
test
pop
add
aad
mov
incb
les
sbb
xchg
jmp
add
sti
mov
sbb
lea
xchg
into
out
push
fists
pop
cmp
in
ret
inc
mov
cmp
mov
push
mov
inc
call
std
jp
inc
dec
lret
and
sub
fsts
test
scas
imul
imul
mov
les
in
dec
pop
loop
push
mov
sub
sbb
fisubrl
xchg
divl
mov
add
jo
test
popf
or
pusha
ss
or
incl
xor
inc
sub
inc
and
adc
faddl
sbb
pop
or
xchg
gs
pop
in
fcomip
cmp
and
sbb
or
xor
es
sar
cmp
ljmp
fs
jecxz
pop
pop
add
dec
pop
push
xor
mov
xor
aam
dec
pop
xor
or
mov
adc
insb
out
pop
xchg
fistl
stos
ja
cmp
lcall
lds
inc
mov
insb
ss
cs
adc
xchg
test
sub
fmuls
nop
sbb
sbb
jnp
push
adc
fdivs
clc
rcrl
xor
push
movsl
pushl
add
sti
mov
pop
mov
mov
cmpsb
in
or
bnd
mov
stc
shll
mov
jmp
repnz
cwtl
mov
imul
xor
or
jle
fwait
lods
adc
and
ret
lret
or
decl
mov
pop
and
push
out
lret
xchg
imul
jno
xor
cmp
call
and
aam
xchg
test
cmp
jne
stc
jnp
into
jecxz
mov
adc
cmc
jmp
shl
stc
pop
sub
shlb
xchg
decl
mov
mov
scas
insb
or
daa
lods
dec
in
lea
jns
out
xor
adc
cmpsb
jae
xor
mov
sbb
popf
sbb
xchg
popa
xor
lcall
cmp
jbe
mov
push
or
fwait
in
push
imul
push
jno
stos
pop
mov
test
ljmp
push
dec
lcall
pop
cmp
adc
jnp
mov
out
dec
mov
js
inc
xor
pusha
dec
ficomps
push
fsubr
xchg
jg
sub
mov
mov
hlt
adc
or
pop
les
das
push
mov
es
frstor
jg
cmp
rcll
cltd
add
lock
fwait
stc
xor
jne
jge
inc
cmp
insl
or
push
rcrb
enter
iret
mov
mov
mov
push
push
call
and
adc
mov
jo
sub
cs
cmp
dec
mov
jg
mov
movsl
shr
xor
popf
add
out
mov
dec
test
aad
pushl
fnsave
mov
outsb
push
inc
jb
dec
sahf
dec
adc
sub
jg
jle
lret
imul
sbb
ljmp
into
cmpsb
inc
call
flds
sbb
add
mov
pop
out
cli
pushl
inc
lods
bnd
sub
push
inc
out
cli
sbb
push
cld
or
mul
xor
xor
pop
in
xchg
mov
lods
push
sti
and
or
fcoml
mov
inc
cltd
push
cwtl
mov
jo
mov
dec
xchg
subb
push
out
pop
scas
notl
jg
test
pushl
or
rorl
jle
stos
push
aaa
mov
push
in
gs
scas
addr16
pop
sub
inc
call
loop
pop
test
push
shrl
cmp
jnp
xchg
pop
mov
mov
mov
repnz
cmc
sbb
xor
test
jmp
popf
or
xor
add
mov
out
js
xchg
enter
dec
mov
outsb
cs
jae
lahf
in
xchg
bound
ret
xor
in
lds
and
call
pop
nop
jge
cmp
divl
mov
mov
sbb
adc
dec
jg
jne
mov
sub
mov
cmp
loopne
lcall
hlt
bound
xchg
rcrb
xchg
dec
test
sar
push
mov
daa
cmp
add
push
inc
sub
sbb
sbb
mov
out
mov
frstor
sub
fucomp
stos
jecxz
add
add
call
push
mov
and
aad
sub
repnz
ja
cmp
sub
lcall
mov
lahf
sub
sbb
cmp
mov
mov
mov
push
out
mov
aad
lcall
addr16
and
mov
jmp
jne
push
cmpsb
idivl
mov
sbb
push
xchg
hlt
in
incb
ss
xchg
sti
jo
das
jo
mov
ret
pop
sbb
ds
mov
stc
lea
mov
xchg
movsb
sbb
inc
jbe
addr16
lahf
mov
mov
xchg
xchg
mov
jno
pushl
fisubrl
aad
cltd
mov
pop
mov
lds
jle
jg
adc
incl
loop
fistl
jge
fildll
push
sbb
mov
push
out
adc
fs
xor
cli
in
mov
sbb
and
decl
xor
cs
std
pop
inc
mov
mov
ret
push
push
mov
adc
mov
leave
or
push
mov
ficoml
imulb
ljmp
aad
push
mov
cmc
xchg
or
add
push
cmpsb
push
cmp
dec
shrl
xchg
call
dec
jb
cmc
dec
sar
shlb
icebp
mov
movsl
push
idiv
out
push
es
xchg
decl
dec
adc
jo
stc
es
lret
xchg
adc
adc
lcall
and
sub
jbe
jb
jnp
mov
mov
pop
call
sti
xorb
lods
xchg
dec
adc
fcoml
sti
or
in
push
neg
lock
pop
aad
fwait
push
lcall
xor
inc
jle
xchg
pop
push
or
lret
rorb
aad
or
out
mov
mov
call
std
sub
iret
xor
mov
xor
into
jmp
or
add
mov
ljmp
scas
and
mov
ficomps
cmpsl
jns
lds
dec
add
ljmp
dec
lea
je
cs
pop
movl
cmp
fwait
rcr
inc
xchg
mov
jle
mov
sarl
fisttps
in
lock
push
movhps
jl
mov
dec
push
xchg
jnp
xchg
cli
test
cmpsl
xor
dec
and
add
arpl
inc
mov
cmp
pop
jno
and
adc
cld
push
lds
mov
add
xchg
jle
jbe
push
mov
xchg
cmpb
cld
aad
ljmp
arpl
sahf
or
subl
jecxz
lock
inc
ljmp
fisubs
mov
pop
xor
adc
sbb
rcrl
jae
sar
incl
add
inc
sar
inc
pop
push
inc
sbb
scas
adc
cmp
mov
inc
movsl
inc
pop
xor
les
add
sub
xchg
neg
jbe
jg
sub
or
and
dec
mov
mov
mov
std
mov
lcall
or
sbb
fcomi
aam
jmp
out
xchg
movsl
int3
jnp
push
sbb
les
test
mov
cli
addr16
push
jmp
stos
and
pop
xchg
int
fiaddl
cwtl
in
xor
add
dec
je
fs
incl
jl
test
sbb
lods
pop
adcb
and
subl
loopne
pop
call
test
ljmp
xor
add
inc
test
pop
fnsave
adc
pushl
mov
in
icebp
mov
adc
dec
pop
push
aam
jmp
je
fmul
or
and
icebp
insl
xchg
jecxz
mov
stos
xchg
fwait
mov
sti
push
dec
or
mov
pushf
lcall
sub
lcall
loopne
and
call
addr16
pop
pop
push
ficoms
cmp
jo
ljmp
mov
fcmovb
cmc
scas
int3
jg
xchg
outsb
ljmp
dec
into
push
dec
push
call
jg
pop
jbe
iret
stc
xchg
cmp
rorb
loop
test
andb
pop
or
data16
lret
loope
incl
push
dec
jl
imul
imul
dec
popa
jmp
jns
push
popf
jnp
jg
mov
and
insl
jae
outsl
cmp
push
lret
cmp
daa
mov
out
clc
jmp
inc
icebp
adcl
jnp
push
arpl
cs
inc
lcall
mov
xor
dec
movsl
fucomi
cmp
repnz
movsb
push
push
je
lcall
out
clc
jecxz
or
xor
sti
mov
das
xor
cmp
pop
mov
jg
dec
fldenv
cwtl
add
sbb
movsl
ja
and
mov
or
push
jmp
jp
jne
les
sub
movsl
push
xchg
data16
cmp
pop
gs
jbe
xor
dec
ja
add
pop
cmp
mov
xchg
ljmp
and
scas
cmpsl
push
mov
pushf
dec
stos
inc
ss
sbb
insl
push
cmpsb
or
incl
inc
fadd
in
xor
bound
sahf
icebp
cmp
dec
repnz
out
inc
pop
cmp
ss
dec
mov
jnp
xor
test
and
push
mov
iret
fisttpll
outsb
iret
lcall
pop
sbb
rcrb
adc
sti
xor
sub
add
fdivrp
mov
fsubrp
insl
push
push
inc
ljmp
push
decl
dec
test
pusha
test
jge
jno
pop
sbb
mov
hlt
jmp
sbb
clc
xchg
out
dec
xchg
es
push
add
mov
jns
aaa
cld
outsl
repnz
push
out
lods
cmc
sub
pop
mov
and
adc
cld
mov
xchg
push
or
nop
testb
icebp
pop
adc
adc
movsl
jl
ljmp
rol
ficompl
fidivl
push
jne
fstl
mov
dec
and
rorb
and
xor
ljmp
adc
mov
loope
pop
xchg
push
jl
mov
sbb
inc
xchg
pop
jp
push
ja
mov
mov
sarl
in
and
ret
pop
cld
rclb
and
mov
adc
pop
mov
decl
inc
or
push
sub
jecxz
scas
add
mov
stos
pop
js
adc
mov
inc
dec
lds
cmp
push
mov
test
je
das
adc
pop
cs
imul
lcall
jge
pop
or
xchg
test
pop
sarl
pop
scas
inc
or
out
lds
in
push
call
push
jbe
xchg
mov
sbb
mov
fldt
jg
mov
inc
test
lret
pop
push
cmpb
fcmovnb
ja
jmp
ret
push
jbe
std
and
dec
xchg
mov
push
ficoml
ljmp
sub
inc
jns
mov
and
fldl
jne
jmp
xchg
je
fdiv
or
pusha
imul
daa
inc
out
inc
mov
out
xlat
es
lcall
dec
int
add
cmpsl
push
lods
jno
mov
jo
test
pop
andl
jns
insb
in
inc
shll
ja
aam
sahf
add
jmp
mov
cld
adc
das
adc
or
jecxz
iret
xchg
int3
das
stc
xchg
pushl
ljmp
imul
shlb
push
lcall
pop
sub
lret
xchg
jecxz
enter
incl
enter
loopne
xchg
cld
mov
mov
loopne
les
pushl
popf
push
jp
cmp
popf
pop
pushf
insl
jbe
xchg
adc
xor
aas
lds
call
sbb
cltd
pop
pop
pop
das
sub
jl
ret
out
fucom
es
gs
aaa
aas
fwait
jecxz
cmp
call
ret
xchg
sti
jp
test
sbb
xchg
sub
adc
hlt
sub
xor
lods
jmp
aas
mov
repz
jmp
sub
xchg
fs
scas
adc
xor
adc
insb
sbb
sbb
or
inc
scas
loope
es
pop
filds
pop
outsl
call
addr16
call
inc
mov
xor
adc
pop
or
inc
mov
jge
and
dec
cmp
pop
pop
xchg
jnp
sbb
sbb
out
pushf
pushf
push
mov
pop
lcall
sub
das
and
and
and
inc
mov
test
lcall
push
push
pop
and
insl
ds
mov
loop
sub
fbld
push
lock
mov
adc
xchg
or
stos
movsl
or
and
xor
add
adc
sub
pusha
mov
push
push
dec
jnp
fndisi(8087
cmp
jns
pusha
jle
fnstenv
icebp
jmp
mov
and
adc
sbb
push
or
fs
lea
aam
daa
iret
out
addr16
out
xor
sub
mov
lds
mov
test
mov
call
mov
repz
aas
push
sbb
xchg
loope
and
ljmp
in
int
cmp
sarb
in
cmpsl
add
push
decl
mov
ja
xchg
jne
pop
sub
sbb
lock
fwait
cmpsb
fsub
pusha
ret
popl
cmc
incl
fs
sbb
mov
dec
loope
jle
pop
mov
mov
cld
jg
mov
sbb
lahf
lods
xor
xor
push
loope
filds
mov
cmp
mov
and
pop
xchg
mov
test
call
adc
xchg
jge
lret
inc
aad
jmp
adcl
mov
mov
pop
cmp
jns
mov
data16
insb
pop
adc
mov
lahf
sbb
aaa
cmpsl
fsts
lret
mov
mov
xor
push
idivl
or
clc
nop
cld
lds
xor
sub
es
out
int3
jo
out
cli
cld
and
xor
xor
int
dec
mov
inc
and
ljmp
call
and
xlat
and
sub
es
orb
cmp
jmp
inc
adc
lcall
inc
adc
hlt
fcoms
inc
ss
dec
xchg
xchg
lods
stos
add
sub
sub
mov
incl
adcb
mov
mov
fs
jl
loope
and
call
mov
aaa
add
adc
add
repnz
sar
sub
add
pop
jg
add
and
sub
fildll
divb
mov
dec
adc
mov
rcrb
imulb
xchg
mov
fldenv
clc
lret
dec
pop
js
dec
outsl
frstor
dec
cmp
dec
out
xadd
lods
xor
mov
and
in
lods
jmp
add
in
inc
cmp
mov
in
jmp
fsubs
mov
sbbb
inc
pop
rcl
jmp
cmp
dec
dec
jo
jae
add
incl
mov
mov
shlb
cmc
roll
mov
repnz
xor
mov
rcrl
mov
call
pop
stos
cmp
int3
outsl
call
add
ds
push
pop
scas
test
xchg
ret
jae
dec
pop
jl
repz
ja
cld
inc
lcall
lcall
mov
and
pop
xchg
loope
dec
cmc
in
lcall
lcall
add
xchg
dec
and
test
push
adc
sbb
ficoms
and
ljmp
jp
leave
pop
mov
setnp
mov
or
xchg
adc
adc
cmp
rcrl
pop
cmp
lcall
mov
leave
data16
push
sbb
mov
or
cmp
stos
decb
push
je
ljmp
cmpb
pop
jbe
scas
daa
mov
sbb
pop
inc
aad
jmp
gs
arpl
lods
xchg
jmp
jo
arpl
pop
push
mov
lahf
sbb
mov
jl
das
rclb
lods
mov
arpl
mov
mov
test
outsb
dec
fcomps
pop
jmp
adc
ja
adc
movsl
decl
push
sub
inc
adc
and
lods
mov
sbb
inc
ljmp
sub
adc
out
xchg
sbbl
cwtl
cmp
filds
in
mov
sar
fwait
pop
lock
mov
jge
sbb
xchg
and
cld
test
mov
sub
mov
mov
dec
in
xchg
call
lret
xor
das
sar
scas
or
insb
cmp
outsl
add
scas
lods
pop
mov
jecxz
jp
sub
in
mov
aas
mov
push
les
cmp
cmp
sbb
mov
jg
push
outsb
inc
aam
pop
xchg
cmp
psubd
cmp
cli
rorb
mov
adc
add
cmp
pop
clc
mov
cs
stc
jae
decl
std
imul
test
mov
int3
nop
jno
dec
or
lcall
loope
repz
popa
int3
fcmovnb
shll
mov
xchg
xor
faddl
jne
jecxz
or
fstpt
hlt
shl
sub
add
mov
in
jg
decl
mov
cwtl
je
imul
lcall
pop
cld
inc
popf
aad
xchg
xchg
lret
loop
movsl
add
jmp
sub
pop
jno
loopne
outsl
mov
mov
outsb
ljmp
mov
mov
test
out
push
in
xor
lcall
insb
pushf
push
and
xor
sar
jo
std
mov
lock
jg
daa
mulb
cld
adc
adc
cmp
stos
repnz
sbbl
jmp
cwtl
into
sbb
jp
pop
sarb
es
jbe
jo
aas
mov
sbb
cmpb
push
pop
bound
dec
and
cmp
lock
jmp
fsubs
dec
sub
xchg
repz
mov
cmpl
jns
subl
push
int3
ja
cmpsb
xchg
xchg
outsb
xchg
mov
xor
into
inc
ljmp
cltd
and
push
loope
in
sub
movsb
push
and
sub
pushl
daa
mov
out
push
int3
fnstsw
mov
out
out
pushf
adc
mov
decl
mov
lret
and
lods
in
fsubrp
ds
lcall
xchg
notl
sti
cmp
ret
sbb
cmp
lock
into
pushf
addl
decl
lret
cmpsl
test
cmovb
push
jns
xor
dec
sub
mov
negl
icebp
dec
cmpsl
cmpsl
bsr
jns
dec
pusha
mov
loop
jg
mov
jg
lock
sbb
xchg
rcll
lahf
std
xlat
rclb
add
mov
jnp
rorl
lcall
add
popf
push
pop
inc
fldt
in
xchg
ret
loope
cs
mov
push
lock
pop
pop
movsl
rol
dec
addr16
and
dec
stos
pop
loop
mov
pop
call
lahf
mov
or
pop
pop
mov
and
out
jb
outsb
sub
mov
push
xor
xchg
hlt
mov
cmp
popa
loope
inc
xchg
sub
lcall
or
cmpsb
mov
lods
xor
mov
repnz
xor
incl
or
sbb
fnstcw
nop
mov
jns
into
cmp
in
sbbb
cld
call
aas
sbb
mov
ljmp
adc
incl
add
dec
addl
mov
inc
jg
adc
clc
xor
jp
fisubrs
xchg
jg
loop
mov
ljmp
mov
fs
push
in
ja
inc
aad
imul
pop
cmc
pushf
lret
or
push
movl
ret
inc
pop
dec
sub
xor
and
sub
pushl
pop
cmp
xchg
aas
not
cmp
push
cli
adc
stc
insb
repz
stc
insl
pushl
or
notl
pop
out
enter
out
add
sbb
loope
in
mov
sti
ljmp
das
add
sbbb
inc
clc
adc
cltd
testb
mov
dec
std
std
stos
test
and
and
inc
lcall
add
fsub
out
pusha
pushl
or
popa
sbb
mov
mov
xchg
jns
xchg
cwtl
mov
mov
fs
pushl
jno
call
cmpsl
adc
push
fstpl
xchg
pop
inc
sub
shlb
lcall
pop
mov
pop
repz
mov
aam
lret
xchg
insl
call
cld
cmp
pop
adc
mov
lds
pushl
lea
mov
mov
mov
pop
or
shlb
std
mov
inc
add
xor
scas
rolb
add
mov
push
jecxz
inc
decb
pop
xchg
repz
clc
incl
and
push
lods
xchg
sbb
push
inc
icebp
fucomi
loope
shld
fsubrs
fcomip
outsl
cli
dec
sub
fbstp
cltd
mov
dec
mov
nop
int
xor
add
ljmp
lods
in
pop
mov
jne
mov
jae
into
sbb
cmp
xchg
or
or
daa
sbb
ljmp
cli
rcr
lods
add
stos
negb
jo
in
aaa
lods
dec
repnz
adc
dec
in
sar
dec
xchg
xor
das
or
loopne
xor
pusha
inc
and
cmp
mov
jg
cs
in
daa
inc
jbe
lret
adc
xor
mov
push
inc
aam
roll
jl
pop
out
decl
adc
loop
xchg
lods
je
test
add
jne
aad
ljmp
cmp
fs
sbb
jae
cmp
cmp
or
push
aas
stos
push
xchg
jmp
lret
call
insb
dec
nop
in
lahf
popa
js
pop
jae
sub
xchg
jl
xchg
icebp
je
jecxz
frstor
enter
pushl
lret
mov
iret
add
sbb
xchg
mov
xchg
mov
jge
jl
lock
outsw
mov
inc
or
dec
push
sub
prefetchw
sbb
jmp
inc
xlat
xchg
sub
popf
mov
and
inc
fcompl
or
mov
mov
mov
dec
subb
lahf
jge
out
xlat
in
imul
ffreep
ljmp
cmp
pop
and
lahf
orb
fiaddl
arpl
test
test
in
call
jno
adc
dec
bound
sbb
sub
mov
pop
and
add
lahf
and
std
jmp
xor
dec
je
push
sbb
cmp
stos
adc
data16
mov
jg
movsl
xchg
fsts
call
test
out
or
dec
bnd
les
xchg
cmpsb
sarl
insb
push
ret
jmp
pop
inc
popa
outsl
mov
int
or
in
mov
clc
cs
pop
cmp
pushl
sti
mov
in
pop
arpl
subb
pop
inc
addr16
xor
mov
sbb
lcall
incb
sbb
jecxz
push
maxps
and
sub
push
mov
jbe
xor
incl
ss
mov
in
insl
inc
arpl
push
mov
inc
lret
jo
call
add
gs
out
bound
shrb
data16
repz
fcomip
incl
push
ljmp
and
lea
jp
sbb
decl
shrb
push
mov
push
sub
popa
mov
pop
jno
add
addl
decl
mov
or
mov
sarb
dec
fcmovnb
mov
inc
pop
cld
daa
or
rorb
mov
mov
mov
fwait
mov
cs
cmp
sub
pop
and
clc
jb
lods
push
push
dec
nop
dec
enter
lds
inc
sub
sub
inc
or
jns
lock
decl
pushf
cmpsl
stos
out
mov
aaa
push
jg
int
icebp
or
cmp
add
xchg
idivb
dec
idiv
fcomip
jg
mov
aaa
dec
insb
scas
addr16
out
movsb
js
in
and
xor
dec
loopne
fcompl
cs
lahf
xchg
dec
push
push
ljmp
sbb
leave
xchg
aas
lcall
fistps
lahf
xor
mov
cmpsb
mov
call
jbe
jnp
mov
fmull
gs
adc
das
add
xor
lcall
out
imul
pushf
cmp
ds
cmp
inc
out
cmp
lock
sub
sub
gs
jecxz
ljmp
adc
clc
out
lea
ret
fsts
xor
pop
les
adc
pop
add
lock
fidivs
dec
xchg
jp
enter
popf
mov
pop
pop
mov
ljmp
out
xchg
ljmp
lods
ret
cwtl
xchg
fimull
sub
jg
stos
je
lret
xor
push
adc
mov
icebp
mov
rcrl
lcall
rcl
jecxz
cli
cmp
imul
pop
into
pop
fisubrl
pop
inc
sub
pop
add
jmp
popf
iret
pop
push
in
mov
mov
das
inc
mov
lcall
cwtl
and
inc
sbb
rcrl
or
loope
push
incl
pop
dec
sti
adc
shlb
xor
jnp
pusha
mov
mov
and
pop
sub
mov
push
xorl
or
add
mov
rclb
shlb
or
or
cwtl
lahf
or
jmp
lret
fwait
or
repnz
sbb
ja
daa
shl
mov
sbb
push
icebp
lahf
xor
cmp
mov
mov
adc
cli
lcall
mov
pop
std
decl
cmp
and
movsl
jl
mov
xor
pop
icebp
insb
les
mov
incl
inc
rcrb
cld
stc
jno
xchg
movsb
dec
xchg
icebp
and
sbb
fadd
pushl
cmp
gs
clc
fimull
xor
push
fisttpll
cmpsb
test
jg
divl
dec
xchg
fisubrl
inc
lahf
adc
sbb
int
fnstsw
test
clc
jnp
lahf
lock
mov
arpl
test
fnstsw
out
inc
xchg
mov
aad
mov
ljmp
lock
pop
jb
mov
add
cmp
cmp
outsb
mov
movsb
jns
sub
jle
aam
repnz
out
repz
cltd
or
mov
lods
cmpsl
inc
ficoms
xchg
cld
xadd
repnz
inc
fcmovne
jge
pop
sahf
in
xchg
loop
push
shll
xchg
ja
jmp
xchg
push
sbb
nop
rcr
inc
mov
movsl
cmp
adc
inc
incl
mov
xorb
inc
sahf
jecxz
mov
fisubs
adc
ljmp
lea
std
in
rol
cs
dec
std
pop
jg
adc
push
pop
adc
inc
cmp
sub
call
movsl
aam
adc
roll
cmp
dec
sbb
cmp
arpl
mov
cmp
inc
inc
xor
cmc
and
mov
mov
cmp
decl
fstl
adcl
cmc
cmp
dec
inc
lcall
mov
into
divb
inc
enter
pop
movsl
test
test
and
lcall
mov
call
cs
or
pop
dec
lret
mov
addr16
pushl
sbb
repz
mov
scas
mov
repz
adc
xchg
adc
idiv
jmp
adc
in
enter
fdivl
cld
cmp
icebp
dec
lds
mov
pop
sbb
call
jmp
out
sub
add
pop
xchg
ja
inc
es
ljmp
push
ja
cwtl
push
cltd
out
stos
repnz
bound
addr16
test
icebp
enter
shlb
call
sarl
pop
push
mov
cmp
jecxz
sbb
add
cli
ljmp
mov
jp
push
sub
fnsetpm(287
imul
adc
call
ret
or
insl
xchg
dec
sbb
xor
es
mov
xorb
inc
xchg
ret
inc
shr
decl
jp
xchg
xchg
adc
cld
hlt
int
outsl
adc
pop
mov
xor
jmp
sti
xchg
sahf
mov
ret
mov
sbbb
pop
out
imul
inc
repnz
sbb
sbbl
push
xchg
ret
packsswb
je
mov
push
fs
mov
cmp
inc
test
ret
std
push
dec
test
es
movsb
outsl
cmpsl
cld
dec
int3
hlt
scas
pop
imul
jmp
mov
es
mov
push
icebp
push
lret
mov
mov
sarl
sbb
push
sbb
out
jmp
mov
cmp
add
out
sub
sbbl
add
pop
mov
cmp
call
sbb
jbe
jmp
pop
scas
dec
inc
dec
lods
jle
cmp
sahf
movsl
jmp
aas
imul
outsb
xor
rcrb
cmp
clc
jae
out
mov
jmp
sbb
incl
ss
mov
mov
mov
je
cmp
sub
incl
cmc
jmp
push
daa
pop
bnd
in
and
pop
lcall
in
fcomp
mov
loop
sub
ret
xor
inc
dec
rclb
jmp
push
xor
and
fists
mov
cmc
call
incl
and
xor
inc
in
xor
or
nop
mov
xchg
inc
and
jmp
mov
push
test
ss
ret
aad
add
aaa
xor
das
int
jp
call
addl
dec
rcll
les
mov
ret
sbb
cmp
or
pop
mov
cmp
sbb
pushl
out
lea
dec
shlb
and
push
dec
mov
pusha
push
xchg
or
mov
sahf
dec
addb
sbb
out
popf
gs
testl
repz
inc
adc
decl
andb
adc
lcall
dec
int
sub
pop
lcall
fstpl
pusha
sbb
in
sbb
sbb
clc
add
clc
jnp
gs
add
cmpsl
sbb
sbb
sar
lods
mov
dec
addr16
dec
xlat
addl
xlat
mov
inc
push
fwait
mov
mov
out
push
lcall
cmpsl
pop
ret
fs
mov
hlt
push
imull
jecxz
jnp
add
jecxz
sbb
test
sbb
test
imul
das
and
pop
movzbl
jge
mov
lcall
xchg
mov
add
fists
pop
mov
aam
icebp
incl
pop
push
mov
mov
in
mov
jns
inc
int3
cld
nop
jp
loope
incl
fsubl
xor
mov
cmp
outsb
inc
mov
stos
or
lret
incl
sub
outsb
repnz
es
push
fists
mov
sub
push
jne
test
push
dec
scas
clc
call
popf
jns
decl
push
or
add
lds
xchg
cmc
jge
push
fs
jmp
pop
lds
inc
cs
in
cmp
out
stos
scas
jbe
nop
test
out
or
lret
lcall
lcall
pop
jne
cli
inc
popf
loope
fmull
mov
mov
inc
ret
loope
ljmp
dec
jb
clc
sub
dec
fbld
pop
inc
add
jl
dec
std
es
mov
fsubrp
subb
add
ret
sbb
repnz
inc
out
cwtl
fildll
lds
adc
leave
js
or
cli
out
mov
ficompl
mov
xor
call
dec
mov
add
icebp
xchg
repz
cld
call
or
in
jbe
jae
mov
mov
cld
cmp
out
movl
fcomip
push
sub
pop
mov
xlat
jns
fs
stos
scas
test
aaa
pop
mov
sti
imul
or
data16
outsb
adc
std
jmp
imul
out
inc
jbe
cli
sti
mov
fwait
push
push
sub
jg
fcmovbe
sbb
sbb
pop
cmpsl
push
out
call
sub
stos
rcrb
ficoms
ljmp
jne
movsl
dec
in
sbb
fwait
decl
popa
jne
jo
fisubrl
outsl
mov
xchg
rolb
pushf
pop
sbb
push
dec
stos
push
decl
inc
xchg
jno
push
xor
pop
push
loop
shll
jns
ljmp
cmpsl
adc
jmp
cmp
xor
jmp
call
adc
inc
mov
daa
mov
pop
mov
adc
cmpl
jecxz
and
lret
aam
mov
inc
mov
cld
inc
sbb
adc
jmp
movsl
stc
cmc
jle
xchg
mov
and
bound
testl
ljmp
ja
cmpsl
or
fldcw
cmp
push
repnz
shl
fcomip
xchg
cmpsl
and
push
cmp
dec
fs
arpl
adc
imul
outsl
in
ret
mov
inc
outsb
pushl
pop
dec
or
enter
testl
sbb
add
andb
pop
push
fcomi
into
mov
cwtl
das
out
mov
ljmp
icebp
rcll
mov
cld
outsb
stos
hlt
int3
push
repnz
mov
add
push
cmpsb
fcomps
xor
idivb
pop
cwtl
std
pop
out
daa
cmpl
or
out
fisttps
dec
orl
pushl
pop
sub
xchg
dec
into
fdivs
pop
ja
sti
int
lret
push
adc
in
or
dec
jecxz
mov
lock
int3
push
lahf
and
xor
out
push
or
outsb
aad
movsl
jecxz
pop
out
dec
pop
sahf
test
dec
sbb
faddl
rcr
adc
lods
adc
in
enter
push
inc
out
mov
gs
lret
xchg
fdivr
xorl
xor
lcall
stos
sub
push
pop
add
mov
xchg
stos
xorl
int3
or
inc
adcb
ljmp
in
ss
jmp
cmp
pop
mov
mov
data16
iret
call
or
cltd
lcall
dec
xchg
movsb
imul
adcb
xchg
push
cwtl
push
or
decl
addr16
nop
push
jb
and
loopne
ret
pop
fistps
mov
push
je
mov
enter
jnp
idiv
sub
pop
inc
cmc
or
mov
fsubrl
scas
shrb
in
mov
mov
sbb
insb
repz
lock
pushl
adc
mov
loope
movsb
dec
bound
pop
filds
insl
inc
cltd
cmp
stc
push
xchg
mov
jmp
xchg
pop
cmc
xchg
xor
in
pop
fidivrl
dec
test
in
test
cmp
es
pop
decl
push
jbe
test
xor
xchg
pop
xchg
imul
push
ljmp
lods
jl
pop
mov
jmp
aad
lods
je
xlat
sti
or
xor
enter
xor
pop
jno
push
push
fcmovnu
and
test
or
sub
cwtl
sbb
mov
incl
jecxz
fstpt
fstp
mov
cld
adc
and
sub
jne
inc
adc
decl
scas
cmp
cs
mov
loop
in
adc
mov
add
cltd
cmpsl
sar
incl
lcall
in
in
fmulp
orb
xor
sbb
push
cwtl
dec
cmc
cmp
mov
sub
cmp
pop
out
loop
cmp
orl
cltd
fildll
jns
xchg
pop
rclb
test
mov
ljmp
aas
iret
shl
and
icebp
mov
jg
rorl
jmp
add
bound
adc
dec
adc
sbb
repnz
cmp
add
xchg
pop
call
pop
dec
out
add
xchg
pop
mov
sbb
pop
jle
push
adc
inc
add
mov
fstpt
mov
in
lret
adc
aad
adc
ss
ret
int
mov
dec
adc
in
movsb
mov
lret
lahf
jecxz
jae
fisubrl
mov
fisubrl
decl
xlat
movsl
dec
mov
sbb
jmp
outsb
dec
test
fmull
loop
xor
ljmp
jbe
xchg
cwtl
jns
decl
sarl
and
or
jle
ret
decb
test
ja
loopne
mov
push
bound
mov
inc
call
shrb
xchg
cmp
dec
rcll
pop
rcl
mov
and
out
clc
mull
xor
push
mov
cmp
jge
inc
sti
cmpsb
ja
push
sbb
cmp
pop
xchg
inc
push
mov
inc
sub
mov
jecxz
and
lds
adc
dec
fwait
cld
in
lock
out
clc
xchg
enter
mov
mov
mov
xor
pushl
mov
mov
and
adc
shl
mov
jg
jmp
pushl
call
xchg
add
mov
fcomps
dec
enter
test
mov
imul
stos
clc
lcall
ret
jmp
subb
repz
aam
pop
sbb
pop
ljmp
xchg
mov
sub
push
aad
cli
enter
aad
movsl
or
enter
cli
jo
repz
lods
out
aaa
mov
ljmp
mov
pop
and
mov
inc
push
outsb
in
sahf
imul
fisubrs
or
out
in
sbb
pop
add
pop
mov
in
call
or
lcall
xor
add
and
lea
fwait
in
sub
adc
cmpsb
jmp
stos
into
push
cmp
sub
mov
cmp
aam
cmc
jo
arpl
lods
adc
pushl
loope
je
es
cmp
mov
push
inc
ljmp
jl
mov
mov
repz
cmp
jns
push
repz
outsl
mov
call
cld
push
sbb
pop
sti
xchg
je
add
imul
cmp
daa
mov
jecxz
call
fs
pop
or
xor
lds
mov
ss
dec
xchg
jl
jo
cmp
mov
sub
lock
incl
push
aam
enter
pop
movsb
mov
fstpt
add
mov
lahf
xchg
xchg
enter
ljmp
loope
dec
insb
shll
push
inc
xchg
sub
test
mov
pop
aaa
shl
pop
or
cmpsb
js
xchg
push
cld
jg
cmp
divl
gs
nop
jbe
cmp
inc
push
pushw
and
scas
leave
lret
xchg
enter
jmp
mov
xor
mov
sub
jne
jno
or
mov
das
outsb
inc
ljmp
test
int3
jnp
in
cwtl
imulb
notrack
xchg
adc
sub
jne
push
clc
pusha
inc
adc
loope
mov
xchg
xchg
inc
and
push
js
fbld
inc
pop
out
jne
std
call
mov
dec
xor
pop
and
push
stc
sti
cmp
xor
inc
xor
mov
pop
test
inc
mov
test
pop
aas
mov
inc
mov
adc
jge
fs
and
pop
popa
adc
int
pushl
data16
sub
adc
repnz
cmp
bound
xchg
lcall
test
push
sbb
mov
fcompl
repz
movl
out
clc
or
push
test
test
lret
mov
inc
pop
pop
lods
sbb
push
jg
fistpll
ss
movsl
jg
cmc
pop
addr16
and
jge
mov
lcall
jns
lock
sub
fstpl
mov
dec
inc
pop
dec
sub
lock
mov
cmp
cwtl
mov
cmp
mov
ss
inc
in
bound
out
imul
incl
push
icebp
mov
sarl
push
sarl
jle
sub
call
pop
sar
and
clc
dec
arpl
out
lods
xchg
aam
test
add
mov
ljmp
cmp
div
mov
mov
lcall
xchg
rcrl
aas
add
call
push
pusha
cmp
cwtl
push
mov
dec
mov
fcoml
inc
dec
xchg
jns
adc
jnp
push
inc
outsb
out
jmp
divb
sub
insl
xchg
out
cli
jmp
and
popf
stos
fsubrs
xor
mov
inc
mov
dec
and
icebp
pop
scas
push
jns
stos
pop
inc
loope
leave
pop
shlb
sub
pushl
mov
adc
jo
js
les
rcrl
xor
movsb
arpl
jb
das
incl
cld
jno
push
sarb
movsb
adc
mov
bound
gs
inc
aas
lcall
fwait
cmc
add
insb
or
push
and
xor
sbb
std
push
or
or
xor
sub
sbb
xchg
sub
clc
fnstcw
arpl
pop
jo
es
cld
sbb
or
test
sub
xchg
imul
lcall
mov
cmp
ss
mov
imulb
or
pop
sbb
pop
push
mov
and
sbb
adc
sbb
loop
jne
rclb
fs
movsl
addr16
pushl
rep
subl
loopne
scas
pop
dec
out
leave
pop
sub
inc
inc
adc
jge
shlb
jbe
inc
adc
and
inc
push
mov
xchg
ljmp
sahf
mov
adc
jbe
jnp
rolb
scas
fsts
loopne
in
cmpb
mov
out
scas
dec
lret
sar
pushl
push
ss
pushf
dec
xor
leave
or
mov
sbb
cmp
decl
lock
xor
sub
mov
pop
xlat
mov
incl
mov
lods
ficoms
lods
gs
sbb
cli
jg
aas
dec
sbb
push
push
sbb
xchg
sar
jmp
test
pushf
gs
pop
imulb
insl
mov
sbb
xacquire
mov
test
call
dec
sarb
and
push
mov
mov
cmpb
repnz
out
mov
nop
movsb
loop
cmp
repnz
fadds
test
and
or
xchg
jg
ljmp
push
adc
dec
add
sbb
jecxz
fidivl
lods
stos
pop
add
sbb
cs
dec
adc
js
and
stos
cmp
push
notb
fs
loopne
xor
movsb
push
outsb
mov
ljmp
fidivl
in
sub
add
cmp
lret
and
sub
push
test
aam
into
lock
jo
cmp
test
test
cli
subl
stos
push
rolb
dec
sahf
out
push
mov
sub
imul
cmp
mov
inc
ret
imul
sbb
call
ljmp
jle
pop
cmpl
les
mov
mov
mov
int
cwtl
test
or
pop
jle
loopne
nop
or
popf
pushl
jg
or
out
xor
sbb
pushf
stos
scas
xor
jb
push
push
jne
or
lea
sarb
mov
out
sub
arpl
out
sub
lcall
out
push
pop
sub
fnsave
shlb
xchg
repz
or
mov
int3
adc
cmp
incl
mov
data16
fdivs
movsl
outsb
fstps
out
jle
outsl
mov
xchg
cmpl
push
adc
fisubrs
cmc
jmp
cld
iret
ret
pop
dec
xor
lahf
add
jno
in
mov
ljmp
add
cmc
xor
movsl
xor
adc
scas
mov
push
dec
gs
clc
lcall
jecxz
xor
js
adc
cmpb
lock
out
sub
ret
inc
sbb
mov
notl
sub
cld
cmp
flds
scas
xor
sub
sub
jo
das
sar
cmpb
mov
lea
mov
cmp
sub
mov
sti
enter
into
xchg
popa
bound
mov
sbb
mov
pushl
movsb
mov
mov
mov
cmpsl
ja
adc
mov
jae
pop
push
imul
mov
fisubs
inc
and
push
and
insb
mov
xor
sbb
ljmp
lcall
icebp
or
sub
xor
sti
mov
cmpsl
rclb
pop
je
lcall
ljmp
loope
out
jmp
dec
ret
dec
inc
jb
xchg
pop
push
push
push
mov
xor
sub
add
cmpsb
outsb
cmp
push
cmpsb
bound
sti
adc
cs
out
cmp
mov
push
jne
xor
jno
incl
xchg
pop
push
mov
xchg
int3
fbstp
jle
push
dec
hlt
mov
sbb
push
out
in
scas
jle
mov
decl
ja
cwtl
in
stos
jb
mov
gs
scas
mov
xor
pop
jge
stos
lcall
lahf
and
imul
loop
dec
xchg
fs
ja
mov
jecxz
push
dec
jb
sub
cmp
pushl
dec
push
fs
and
mov
inc
shll
loopne
leave
inc
push
lods
lahf
cmp
les
add
cmpsl
xlat
jno
mov
push
adc
ja
mov
lret
rcll
loopne
insb
mov
push
adc
xchg
popf
mov
xchg
mov
inc
int
mov
jo
lret
incl
add
cmp
dec
push
pop
adc
mov
call
loopne
mov
pop
pushf
jg
hlt
push
sbb
stos
sub
push
leave
inc
add
cmp
sbb
lret
jmp
aam
pop
xor
lcall
rcrb
test
incl
push
test
mull
dec
lahf
push
iret
jae
xchg
lcall
add
adc
or
shlb
push
jae
jl
xor
pop
add
fcomip
pushl
mov
hlt
inc
push
sub
add
xchg
pop
sti
lret
push
mov
lcall
inc
or
lret
outsl
jbe
cwtl
lea
fildll
mov
jo
divl
das
fsubrs
ljmp
push
sub
jbe
or
cwtl
push
mov
repnz
andb
add
test
sti
add
nop
mov
shll
pushl
icebp
scas
push
cmp
insl
adc
push
add
mov
loope
sub
int
rorl
sbbb
or
incl
fsubrl
in
inc
push
movsl
stc
sub
outsl
rorb
xchg
pushl
jl
test
sarl
pop
add
fdivs
aad
loop
cmc
rcrb
mov
dec
push
pop
cli
sub
test
inc
aad
sbbb
inc
jne
push
fstps
frstor
out
ja
test
mov
arpl
daa
inc
in
dec
mov
jg
scas
cli
mov
inc
stos
cmp
xchg
adc
pushw
divb
xchg
inc
out
jp
jmp
mov
ret
insb
out
xor
loop
cmp
sbb
outsl
and
jp
subb
push
popf
pushf
lcall
sbbb
pushl
scas
cmp
sti
cli
pop
dec
inc
cmp
dec
cli
ja
cwtl
mov
dec
jmp
push
push
pop
je
cs
movsb
fnsave
cld
mov
dec
and
in
cmp
incl
stos
bound
gs
icebp
cmpsl
pushf
cmp
inc
roll
mov
dec
push
iret
clc
loopne
aad
fcomip
pop
js
push
or
cmp
call
loop
inc
jae
push
sub
mov
sub
sub
jecxz
dec
stos
inc
and
in
fcompl
and
test
jno
dec
les
stc
stc
xor
lcall
cmp
insl
jb
pop
sub
shrb
fsubl
std
int
aam
loopne
fwait
jecxz
ljmp
sub
leave
mov
jg
cli
xor
test
jo
stc
mov
leave
cmp
into
jp
push
mov
fstps
pop
add
mov
push
inc
jbe
stos
subl
cs
add
inc
arpl
out
std
das
movb
lods
jbe
adc
lcall
aaa
cld
enter
aas
xchg
std
xor
mov
mov
mov
sub
jg
jmp
push
nop
bound
push
sub
movsl
dec
shll
sub
lds
dec
rolb
sar
ljmp
jle
outsb
jo
stos
mov
pop
add
adc
dec
and
pop
das
add
repnz
cli
leave
adc
gs
pop
stos
stos
pop
mov
es
add
inc
inc
pop
movsb
std
pop
incl
cld
incl
push
push
std
cmp
mov
dec
mov
sub
clc
imul
xchg
shll
mov
addb
mov
dec
in
mull
or
test
push
fabs
scas
cli
call
es
xor
jmp
mov
mov
adc
mov
sar
ljmp
outsl
popf
pop
jbe
addr16
orb
fildll
xor
lods
xlat
sbb
test
lcall
adc
sub
mov
mov
aam
lcall
cmp
pop
test
imul
cmpsl
mov
or
xchg
push
pusha
lahf
push
loopne
mov
dec
test
dec
lea
icebp
pop
jae
into
in
jno
int
clc
int3
and
pop
cmp
sbb
inc
arpl
mov
imul
xchg
push
xor
pop
in
fcoml
incl
incl
and
test
sbb
push
pop
cwtl
insl
sbb
xchg
xchg
loopne
mov
ds
jo
mov
ja
push
and
ds
sub
jmp
popa
sub
cmp
call
and
shr
repz
mov
sbb
pop
mov
sbb
or
cmp
call
lods
push
pop
and
repnz
inc
lcall
popf
aad
dec
jecxz
shl
leave
mov
mov
adc
and
jp
dec
insb
xor
call
pop
lcall
pop
cs
data16
pop
fisubrs
push
das
lea
loope
mov
cld
push
ret
mov
leave
sbb
sbb
xchg
jg
mov
xchg
add
outsb
dec
out
fs
call
int3
out
inc
mov
mov
sub
shlb
push
sbb
jmp
out
inc
cmp
or
pop
lcall
pop
push
iret
lods
pop
cmp
pop
cmp
or
loopne
push
aas
leave
pop
in
xchg
call
xchg
xchg
pushl
jg
std
push
sbb
loope
scas
xor
pop
dec
ds
stos
push
adc
ljmp
test
imul
jo
lret
subb
enter
and
fwait
test
push
sbb
int
xlat
inc
push
jmp
test
and
xchg
fsubr
cmovnp
int3
lcall
mov
addr16
fsubr
mov
fcompl
test
xor
into
sbb
lret
push
call
scas
test
fdivrl
add
sub
or
ljmp
mov
std
mov
or
outsl
jne
cmp
push
shll
jae
and
clc
jae
sahf
into
daa
mov
sar
incl
cwtl
cltd
cld
mov
scas
mov
leave
jns
push
push
fs
xchg
mov
add
nop
sahf
pop
pop
aas
jmp
fmuls
imul
ljmp
dec
mov
and
pop
xor
in
dec
sahf
mov
sub
test
xor
or
fstpl
fsubrl
mov
xchg
lods
xchg
adc
dec
or
inc
xor
daa
out
adc
iret
mov
sbb
mov
test
clc
lret
push
decl
addb
inc
divl
fidivrl
rolb
loopne
mov
sbb
in
icebp
decl
insb
xchg
fildl
jbe
add
push
xorl
mov
cld
out
cli
ja
jb
test
sub
cli
test
call
push
and
inc
jecxz
xor
mov
sbbl
insl
movsl
arpl
out
push
cmp
mov
clc
xor
movsb
scas
push
pop
inc
clc
push
cmp
push
imul
in
jecxz
rclb
in
cmpsl
pop
push
xor
cli
or
jne
pop
adc
jg
and
pushl
data16
pop
jge
xchg
adc
fsubrs
pushl
and
fidivrl
es
movsb
add
clc
mov
loop
xchg
iret
cmp
test
cmpsb
outsl
cmp
lcall
rol
in
or
sub
lea
or
rcl
out
flds
inc
jo
into
sbb
aam
mov
mov
test
and
pop
dec
jno
out
test
ljmp
outsl
add
adc
mov
xor
fisubrs
lds
pop
xchg
mov
pop
xor
out
and
pushl
bound
pusha
orl
lahf
gs
test
push
sub
pushl
in
orb
lods
dec
mull
xchg
stos
mov
stos
or
cmp
sbbb
mov
mov
pop
icebp
or
inc
add
lock
leave
imul
loopne
fcoml
test
out
mov
aad
movsb
push
fcmovnbe
push
inc
add
push
adc
and
into
xor
and
es
xchg
add
addb
addb
or
add
dec
mov
incl
and
fisubl
mov
add
insl
sbb
js
push
jg
add
pop
sbb
test
inc
fcoms
ficompl
jg
orb
mov
pop
mov
sub
and
popa
adc
fidivl
lock
sub
scas
cmpsl
adc
aas
bound
push
add
xchg
sahf
mov
daa
add
xchg
dec
and
cmpsl
push
and
push
lcall
push
movsb
inc
scas
push
and
mov
push
and
push
test
and
imul
mov
inc
pop
pop
add
mov
jmp
sbb
add
mov
aaa
int
add
mov
addr16
xchg
jp
adc
cli
mov
arpl
add
imul
outsb
mov
push
sub
lret
mov
js
push
add
imul
mov
stos
pop
stos
mov
lock
jb
ss
add
jo
mov
mov
ret
outsl
push
shll
add
outsl
push
shll
fidivrl
iret
outsb
or
push
ret
je
fsubrp
mov
fidivrl
out
jge
fisttps
add
fwait
inc
mov
jmp
or
movsb
push
add
mov
sbb
shlb
mov
adc
push
push
add
jne
mov
aam
push
ret
add
mov
lods
pop
add
push
pop
dec
add
out
mov
cmp
data16
inc
iret
mov
aaa
add
push
push
shlb
push
lret
stos
aas
add
ja
mov
jge
push
push
xlat
jne
add
push
pushf
pop
pusha
push
aad
push
xlat
ja
aaa
in
add
js
push
jns
push
jp
jp
lds
addr16
push
fidivrl
sarl
ja
lods
pop
mov
fldl
ret
jmp
out
cmpsb
insl
pop
ljmp
xchg
in
xchg
sub
call
xor
xchg
push
setbe
insl
fldl
fisttpl
iret
idivb
push
cwtl
push
cltd
cmp
cmp
pushf
cmp
addr16
push
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
jle
outsb
push
dec
push
mov
push
xlat
add
fcomip
test
movl
out
push
sahf
out
sahf
hlt
clc
stc
cli
sti
cld
adc
out
std
incb
jecxz
arpl
inc
fs
lods
jae
add
imul
int
add
pop
add
pop
add
mov
test
mov
add
sub
push
add
mov
add
add
pop
add
lahf
in
or
test
test
ja
stos
cmpsl
or
push
sbb
aad
pop
pop
adc
adc
imul
add
pop
stos
movzbl
add
mov
imul
insl
lods
pop
pop
adc
outsb
scas
lods
push
and
mov
rclb
sbb
scas
scas
scas
inc
ficomps
scas
sbb
mov
mov
inc
outsb
mov
and
add
xor
mov
push
shll
and
push
and
mov
shll
and
push
push
and
mov
addl
pop
pop
sub
pop
subb
popa
pop
sub
push
and
mov
xchg
pusha
sub
mov
aas
pop
aas
cmp
cmpsb
pop
or
cmp
shll
add
mov
xor
pop
xor
pop
or
or
mov
pop
insl
pop
pop
xor
mov
mov
pop
das
push
cs
xor
add
xor
das
pop
push
push
xor
adc
fistps
cs
dec
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
xchg
jg
jg
jno,pt
add
jmp
pushw
dec
dec
cmpb
jo
mov
inc
xorl
mov
call
popf
pushf
fwait
lcall
mov
mov
xchg
pop
jle
inc
xchg
push
dec
ja
jns
dec
push
bound
js
adc
xor
jne
je
shll
and
cvttps2pi
adc
add
add
bound
outsl
mov
jle
xchg
pop
push
repz
mov
push
mov
cmpsb
push
mov
jle
fisttpl
dec
dec
xor
ja
push
ja
jb
cs
xor
mov
cmp
loop
add
jbe
dec
sbb
jle
and
push
mov
xchg
inc
mov
cmp
mov
inc
add
mov
std
xchg
jae
xchg
jp
inc
push
popf
inc
mov
aaa
add
xchg
jno
imul
add
xchg
jb
bound
mov
mov
lahf
ja
inc
inc
push
sahf
mov
insb
add
ds
outsb
add
xchg
xchg
pop
push
rcr
mov
test
push
dec
push
movsb
jae
add
jb
pop
sub
test
push
mov
push
rorb
int
add
add
lcall
outsb
mov
stos
pop
inc
pop
fmul
ja
sahf
jbe
or
mov
add
popf
imul
stos
push
add
inc
cli
data16
jp
add
js
mov
data16
jns
test
shrl
insb
pop
outsb
push
outsl
add
frstor
ds
fisttpl
outsb
cmpsb
test
jge
push
jg
fiadds
insl
fisttpll
lock
mov
in
mov
mov
out
arpl
push
loopne
mov
sahf
mov
jb
cmp
fcmovne
out
in
push
jle
or
jecxz
or
mov
fnstcw
aad
push
divb
faddl
ds
pop
addb
sbb
test
adc
faddl
in
mov
push
xchg
nop
and
out
xchg
in
xchg
rolb
lock
sub
sub
imulb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
push
lcall
cmpsb
pop
cmp
mov
aam
ret
pop
jle
push
cmpsb
scas
jo
test
sahf
mov
pop
jbe
stos
into
shll
lfs
int
mov
mov
sarb
repz
rcl
mov
push
inc
jp
ret
data16
add
addr16
adc
std
dec
out
je
add
xchg
inc
dec
daa
push
test
add
and
femms
or
or
out
in
mov
or
es
push
adc
push
add
sti
pop
adc
adc
ds
add
xor
pop
mov
xor
ds
loop
mov
mov
mov
mov
mov
push
add
and
mov
mov
loopne
ds
mov
xor
aad
aas
and
lock
mov
xor
or
push
enter
aas
cmp
lret
jae
cmp
cmp
add
mov
sbb
inc
jbe
cmpsl
insl
mov
cmp
inc
jle
adc
jbe
cmp
dec
mov
scas
ds
jle
aas
addr16
ds
xor
dec
inc
popf
test
scas
add
jge
addb
xor
pop
mov
xor
outsl
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
jg
jg
test
mov
sahf
ds
xor
sub
sub
sub
sub
fistl
ss
and
push
inc
inc
inc
mov
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
insl
popf
decl
je
xchg
jns
jle
addl
stos
cli
jno
outsl
outsb
pushf
sti
lds
daa
mov
loopne
shr
and
push
addb
add
add
or
jg
ja
push
push
add
cmc
repz
dec
xor
bound
jae
aas
add
xchg
pop
cmp
test
add
mov
add
lock
mov
push
mov
fnstsw
repnz
jg
aad
scas
xchg
addr16
add
pushf
add
mov
push
pop
push
in
lcall
jge
push
arpl
mov
push
push
ljmp
fsubrs
lret
js
into
xchg
add
mov
fistpll
loopne,pt
test
scas
xchg
js
in
and
out
mov
nop
sub
sub
xchg
push
sub
mov
fsts
nop
sub
xchg
xor
xchg
xor
cmp
outsb
lcall
leave
jbe
div
fisubs
sahf
in
fidivrl
shlb
iret
push
lret
inc
adc
loopne
push
std
into
incb
inc
sub
imul
mov
insb
mov
add
test
jg
jle
jge
inc
inc
add
add
inc
adc
dec
dec
jmp
incl
or
pop
or
add
push
dec
or
adc
cmp
in
outsl
xchg
adc
dec
or
add
push
adc
sar
dec
inc
add
or
pop
pop
cmovg
sti
mov
add
sbb
inc
adc
fscale
dec
inc
inc
inc
adc
sbb
dec
add
dec
adc
inc
ds
inc
add
aas
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
pushl
cs
xor
sub
sub
push
test
rorl
and
insb
fwait
int
add
mov
pusha
mov
add
outsb
mov
push
outsl
add
add
mov
pop
sbb
outsl
loopne
inc
fimuls
adc
cs
jmp
fists
fstpl
inc
sahf
push
jo
outsb
sysret
adc
or
mov
and
pop
stc
sysret
adc
lock
pop
xor
hlt
xorps
jg
ja
mov
outsl
or
addb
sahf
jg
inc
adc
test
test
into
jg
insb
add
mov
cli
test
inc
mov
pop
jg
add
inc
jle
cli
add
adc
push
xchg
jg
pusha
add
mov
inc
lock
pop
das
sti
mov
leave
sar
scas
inc
pop
jo
dec
sti
jg
xor
sbb
jg
sbb
push
add
add
loope
cmpsl
idivb
popa
adc
mov
add
pop
popa
dec
jle
and
std
ja
jg
test
add
jg
je
dec
ret
dec
pop
push
dec
bound
jle
lret
inc
decb
and
push
data16
addl
xor
add
or
decl
sub
lock
sbb
sbb
data16
mov
jo
mov
cltd
incl
addb
mov
jg
mov
fldt
loopne
pop
adc
les
jle
xchg
fnstcw
sub
sbb
add
test
push
jmp
lods
xchg
or
imul
addr16
add
inc
and
xorl
mov
add
or
scas
inc
loopne
inc
jg
jg
xchg
mov
add
addb
jg
incl
pusha
addb
add
inc
jg
decl
sbb
pop
or
mov
jle
mov
fdivrp
cmpsb
ljmp
pop
push
stos
pop
stos
pop
pop
insl
fcmovnb
ficomps
pop
daa
aas
aaa
pop
mov
add
add
js
shrl
aaa
add
xor
push
or
sbb
push
pop
jle
push
dec
xlat
dec
testl
push
mov
popf
mov
daa
inc
insb
fcmovnu
push
arpl
pop
shlb
sbb
push
mov
inc
out
mov
dec
push
dec
lcall
or
inc
incl
ret
xor
scas
dec
notb
inc
push
inc
jle,pt
xor
mov
push
pushl
aam
into
push
fnstenv
into
out
jne
push
push
jne
pop
push
jbe
insl
inc
enter
jnp
push
jp
fildl
dec
jbe
xlat
fdivrs
add
mov
mov
jbe
es
push
popf
push
daa
outsb
ljmp
lcall
iret
dec
lcall
mov
inc
inc
outsb
test
cs
incl
xchg
out
xchg
dec
ja
xchg
and
push
mov
inc
xchg
push
push
data16
mov
jbe
fstps
mov
out
mov
xchg
or
inc
push
pushf
cmp
pushf
ds
cmp
dec
enter
xor
xchg
xor
ja
mov
sub
sub
nop
daa
ss
cs
or
cwtl
aaa
sbb
in
outsb
decl
mov
jg
jg
pop
fnsave
xor
call
inc
loopne
sahf
enterw
push
jbe
ss
cs
add
dec
or
pop
ja
test
xchg
movsb
call
ja
xor
aaa
mov
add
add
mov
test
notl
andb
add
mov
add
test
movsb
and
pop
or
or
push
iret
repz
push
orl
lea
jg
push
fadd
popf
push
imul
dec
repz
cmp
lock
cmp
and
sbb
cmp
icebp
stos
sbb
imul
add
mov
decl
push
inc
subl
pop
idiv
mov
imul
mov
push
sbb
fiadds
mov
xor
xchg
push
idiv
xchg
ja
xchg
or
into
jmp
es
mov
sub
stos
fcmovb
push
add
pop
fidivs
inc
popa
xchg
pop
lcall
or
mov
sub
xchg
daa
cld
pop
fisubrl
mov
das
pop
cld
ljmp
incl
mov
sub
lcall
std
out
adc
ja
mov
or
sbb
sti
je
xor
xchg
sbb
sbbb
lods
das
inc
test
call
decl
sub
inc
sub
lcall
and
decb
cmpsb
jmp
mov
ljmp
xor
cmpsb
test
daa
outsb
decb
mov
sbb
inc
clts
add
mov
mov
lfs
fmul
jle
adc
mov
sti
out
punpckhdq
pop
sub
push
add
dec
incl
pop
xchg
lods
iret
sub
xor
incl
call
adc
sub
xorl
add
mov
daa
outsl
mov
push
std
call
call
decl
stos
inc
popa
push
call
push
add
shll
fsubl
add
incl
cwtl
cmp
jg
movsb
fwait
test
cli
idiv
loop
add
sbb
sub
ljmp
decl
stc
sbb
fcmovbe
insl
fnstenv
jmp
aaa
mov
sbb
mov
mov
or
cmp
roll
dec
jp
nop
jbe
ret
incl
dec
mov
ljmp
lahf
inc
inc
xor
jns
inc
inc
pop
es
mov
aaa
push
pop
sahf
movsb
dec
mov
stos
push
popf
inc
cmpsb
dec
dec
inc
scas
imul
mov
push
addr16
and
fnstcw
out
push
shrb
rcl
outsb
shrb
cltd
movsb
sbb
es
push
jb
in
dec
shl
das
push
iret
insl
out
int3
push
push
pop
daa
outsl
pop
xchg
aam
cltd
imul
leave
xor
push
incl
xchg
stos
cs
ljmp
decl
pop
add
and
int
repnz
jmp
popfw
cmp
aas
xor
insb
push
cwtl
xor
addr16
dec
xchg
push
push
aaa
push
lcall
ss
xchg
push
xchg
es
pop
scas
push
xchg
xchg
aam
mov
mov
dec
dec
push
ljmp
xchg
push
sub
ds
dec
mov
push
add
push
dec
jmp
fcmovbe
js
std
faddl
jge
imulb
push
jnp
jp
or
jl
or
fnsave
fdivrl
jge
jg
std
add
jle
repnz
push
dec
fwait
std
std
fwait
push
dec
repnz
repnz
jae
pop
fidivrl
push
mov
fistpll
jnp
jge
hlt
in
add
int3
outsb
nop
testl
and
sbbb
dec
inc
add
jne
dec
lahf
push
jmp
and
or
cs
sahf
ja
push
addb
jnp
lahf
dec
es
addl
sub
push
in
sysret
jg
and
xchg
out
push
sub
iret
outsb
test
outsb
out
mov
cli
pushl
or
clc
push
idiv
push
outsb
sbb
jb
sub
jg
mov
icebp
dec
pop
fildll
jno
sub
jg
sub
je
daa
jg
mov
sub
xchg
pop
ja
loope
xchg
sub
in
cld
jp
es
xchg
filds
push
jo
incb
out
mov
jg
and
in
sarb
sub
lods
ja
dec
and
nop
sahf
jg
jge
idiv
sbb
test
fsub
pop
jge
jmp
int3
jge
push
and
arpl
fiaddl
nop
fidivrs
arpl
clc
jbe
inc
jp
lods
mov
push
pop
push
pop
test
push
pop
or
scas
call
notrack
inc
mov
jp
int
push
jns
std
das
fcomps
push
jmp
xchg
jmp
mov
push
xchg
outsl
in
ja
mov
loop
adc
xchg
out
sbb
dec
push
lock
mov
lret
jg
out
mov
or
push
mov
ljmp
iret
jle
lahf
stc
inc
or
clts
inc
jo
inc
and
scas
push
and
dec
add
pop
stos
insl
xor
add
or
adc
push
mov
xchg
stos
loope
inc
lahf
lret
push
lock
adc
test
xchg
push
pop
iret
test
mov
pop
push
sbb
push
sbb
xchg
cmpsb
cmp
or
and
ja
inc
or
push
jne
add
jmp
test
add
add
addb
adc
shll
insb
popa
add
add
add
inc
and
insl
jo
arpl
add
popa
push
or
mov
adc
test
sub
mov
and
xchg
xchg
scas
fisubs
pop
mov
sbb
test
ret
xchg
movsb
xchg
daa
push
lahf
into
add
std
paddq
push
popa
ljmp
jb
inc
jecxz
add
xor
iret
pop
push
mov
add
or
sbb
mov
add
push
subl
or
cmc
add
sbb
push
xorl
push
add
ret
add
sub
and
sbb
xor
xor
popa
shlb
pop
mov
xor
jb
lods
mov
add
inc
mov
add
lea
inc
jno
add
add
add
mov
or
or
add
add
xor
sbb
mov
add
pop
jo
inc
inc
jnp
cs
stos
lcall
mov
lahf
push
test
sub
sbb
jno
fdivs
adc
outsl
shrb
jo
xor
dec
xor
ret
xor
and
imul
sub
push
fldcw
fstpl
push
pand
out
sbb
aas
incl
sub
dec
inc
mov
shl
mov
dec
pop
insb
jne
addr16
mov
popf
xor
fwait
add
sbb
rcrb
or
add
insb
popa
and
jne
inc
mov
inc
scas
arpl
and
jbe
add
ss
pop
push
sti
popf
xchg
icebp
or
cwtl
push
mov
xchg
aad
cmp
push
mov
pop
add
push
fcmovnb
add
xchg
mov
fdiv
sbb
sub
in
push
dec
in
dec
mov
sbb
dec
pop
push
lahf
push
mov
mov
mov
cmp
add
adc
and
adc
cmpb
outsl
das
jecxz
add
xchg
ret
pop
pop
adcl
dec
es
add
push
cmp
xor
push
roll
ret
add
lcall
cmp
arpl
imul
sbb
jg
pop
shrl
jge
cmp
adc
js
cmc
mov
inc
ret
inc
xor
adcb
push
add
mov
insl
popa
add
rorl
jnp
jp
or
xchg
push
jmp
jns
in
jae
xor
adc
incl
or
push
dec
sub
mov
push
lods
pop
test
mov
out
int
mov
sub
sbb
adc
pop
pop
outsb
sbb
test
pop
inc
incl
inc
pop
sub
inc
inc
and
pop
inc
add
addr16
add
je
jne
imul
gs
gs
imul
cwtl
cmp
cmp
int3
js
iret
mov
arpl
add
jne
or
adc
sbb
dec
and
xchg
sub
leave
pop
sub
mov
and
push
aad
adc
xor
push
testl
inc
jno
mov
sbb
mov
inc
mov
testl
inc
cmpsl
push
in
pushf
and
fs
xchg
inc
sbb
inc
arpl
mov
inc
dec
inc
insb
push
sub
rcpps
jb
js
or
jb
inc
inc
jno
inc
shll
add
fsts
ds
inc
imul
jge
insb
push
sbb
push
aaa
dec
insb
sahf
daa
push
push
loope
cmpsb
fs
push
outsl
jo
jb
aad
cmp
adc
fwait
jl
mov
dec
inc
jno
add
and
push
add
push
movsl
ret
sub
shll
hlt
cwtl
imul
push
mov
and
push
les
jae
test
std
add
xor
add
xor
ficomps
pop
xor
mov
adc
out
or
ds
inc
jo
sbb
pop
sbb
pop
and
pop
inc
je
insl
dec
outsb
dec
stc
add
mov
cwtl
inc
arpl
push
pop
jnp
jl
int3
loop
pop
add
add
sbb
mov
dec
rcrl
sub
xor
cltd
or
or
push
adc
xor
mov
xchg
test
add
es
enter
cmp
insb
inc
arpl
push
fisttps
xorl
imul
sbb
sbb
popa
es
lret
lods
test
ss
lcall
ret
cmp
push
imul
adc
push
dec
jg
pop
adc
lods
addl
cmp
push
mov
or
mov
adc
sbb
or
xchg
nop
jns
sub
jo
inc
sbb
push
push
dec
in
add
sarb
sbb
and
push
sbb
into
jno
scas
dec
out
xchg
cmp
cmp
dec
mov
je
in
sbb
sub
cld
loope
push
adc
imul
and
inc
test
ret
push
dec
sbb
sub
ud2
outsl
inc
inc
xor
fsubr
xchg
dec
pop
lret
inc
lock
mov
push
hlt
mov
andb
mov
popw
xlat
adc
or
or
test
xor
sarb
addb
xor
inc
mov
enter
out
push
imul
xorb
and
cmp
cmp
mov
push
arpl
mov
pop
pop
sub
cmpsl
adc
rclb
add
push
insb
lret
push
pop
loope
cs
dec
insl
jmp
inc
push
xchg
mov
sub
push
push
xor
or
dec
cld
addr16
adc
arpl
xchg
pop
imul
jne
pop
xor
int3
movsl
lds
push
add
sbb
cwtl
jb
int3
pusha
adc
inc
sbb
fs
mov
cmp
jns
stos
int3
js
cwtl
dec
and
cmp
cmp
icebp
nop
movsl
jg
out
cmc
bound
xchg
cmp
adc
stc
shrl
or
ret
aas
rcrl
sub
sbb
push
pop
dec
pusha
mov
mov
mov
or
loopne
add
out
stos
and
pop
movsl
pop
mov
inc
push
push
inc
sbb
sbb
sub
jmp
lea
pop
push
or
mov
dec
or
cmp
ficomps
out
or
int3
inc
test
imul
push
clc
xchg
jae
xor
jo
or
xchg
aaa
sub
jb
and
sub
inc
and
cmp
test
dec
sub
push
push
or
inc
and
cmp
or
sbb
add
add
adc
call
and
fiaddl
addr16
adc
add
push
add
push
or
or
add
adc
cli
pop
mov
sbb
push
xor
daa
add
jnp
in
push
push
or
push
or
add
sti
fistps
es
push
adc
push
inc
pop
adc
sbb
push
sub
jg
fistpl
push
push
inc
sbb
sbb
cs
or
cmp
sub
or
std
decb
sbb
add
xor
sbb
push
add
sbb
xchg
add
adc
cmp
push
sbb
add
sub
sub
and
sbb
add
or
push
push
fwait
rorl
pop
add
adc
ss
sbb
ds
jg
subps
inc
pop
sbb
push
sub
or
and
jg
in
sbb
or
sbb
add
sub
sbb
lods
add
sbb
fabs
adc
sbb
adc
add
ss
and
and
push
and
push
adc
sbb
push
or
and
sbb
or
or
add
pop
jl
mov
mov
xor
push
cmp
and
sub
adc
mov
ljmp
add
push
pop
or
sahf
loop
adc
wbinvd
adc
or
movq
mov
xchg
and
add
or
daa
add
push
xor
lods
jns
push
xor
or
cmp
daa
aas
sub
jg
ja
and
sub
or
cmp
es
xor
lock
pop
fsubrs
bswap
add
push
xchg
jns
cmpl
adc
call
sub
or
push
lods
adc
adc
or
push
or
pop
aaa
adc
adc
adc
daa
adc
or
xor
clc
ljmp
or
es
mov
xchg
daa
cmp
xor
and
pushl
lods
inc
and
or
add
ljmp
pop
or
xor
or
or
pop
adc
decl
dec
mov
pop
and
or
or
jb
adc
pop
mov
pop
sub
sub
sub
jg
lock
loope
jecxz
ds
shll
repnz
inc
sbb
xor
das
lds
lods
test
add
scas
add
mov
or
inc
pop
and
and
cmpb
push
push
adc
add
adc
sbb
mov
or
cmp
sub
adc
aaa
jo
or
or
call
push
push
sbb
pop
and
or
push
sbb
xchg
jb
xor
ljmp
cli
and
adc
and
addr16
jp
cmp
adc
sub
push
jl
push
dec
add
cmp
incl
adc
lock
add
adc
push
jle
ss
add
or
add
sbbl
icebp
lods
loope
sub
and
lock
or
push
aaa
mov
cli
inc
addr16
xor
mov
outsl
dec
adc
lock
add
hlt
or
fisttpl
in
aaa
je
movsl
push
outsl
cli
stos
fildll
jnp
outsb
add
push
nop
jnp
pop
adc
adc
inc
dec
mov
and
or
dec
xor
sub
add
add
stos
and
push
and
inc
sbb
adc
call
inc
mov
cmpb
or
jb
lcall
xor
sub
incl
cmpsl
or
dec
inc
outsb
fadd
shll
xor
bound
mov
outsb
adc
jg
outsl
clc
mov
clc
add
insl
fmull
and
xor
push
or
lcall
mov
sahf
adc
adc
push
and
add
cmp
call
adc
in
sub
xchg
and
adc
and
adc
decl
dec
xor
or
or
jg
mov
addr16
aas
dec
pop
pop
imul
lods
xor
sub
lock
and
lock
push
aad
inc
testb
inc
push
clc
ljmp
mov
insl
stos
ss
cmp
arpl
adc
cs
icebp
incl
sbb
adc
xor
xor
daa
dec
sbb
stos
cmp
sbb
push
push
sbb
sbb
adc
aaa
and
or
mov
jp
lock
adc
hlt
cwtl
or
jbe
ljmp
adc
cmp
dec
jnp
jne
and
adc
arpl
mov
xchg
xor
inc
and
cli
ljmp
xor
das
adc
lock
add
scas
dec
dec
push
das
enter
sub
pusha
cmp
push
xchg
fldt
sbb
adc
xor
push
pop
pop
and
filds
lock
add
sub
add
inc
jg
adc
push
clc
lcall
push
mov
cmpsb
in
jb
rolb
sbb
and
loopne
sub
push
cmp
sub
shll
pop
pcmpgtb
sbb
xchg
sbb
pop
mov
xor
inc
xor
and
or
mov
ss
add
add
push
or
mov
and
push
pop
sub
out
out
fdivrl
xor
or
adc
and
push
xor
adc
dec
inc
and
pop
mov
push
and
sbb
and
pop
ud0
lods
rorb
das
lret
sarl
sub
aaa
push
cmp
adc
sub
sub
adc
push
xor
stos
mov
push
scas
ja
pop
imul
or
xor
sub
addb
jg
adc
and
ficoms
adc
add
or
or
jp
fisttpl
pop
or
sbb
out
push
push
lea
inc
and
movsl
or
outsb
push
fs
add
ds
sbb
mov
loopne
jae
sub
pop
aad
or
and
adc
ljmp
push
add
lahf
addr16
addl
ret
cli
pop
outsl
and
add
sub
adc
daa
pop
adc
dec
fists
lret
adc
adc
aaa
dec
or
inc
push
and
imull
rcr
lret
jae
sub
push
adc
xchg
daa
cmpb
cmpsb
pop
ficoms
ds
outsb
sbb
inc
inc
jg
idiv
call
popf
and
fistpl
imul
or
dec
pop
cmp
test
or
jbe
divb
sbb
xor
push
dec
ss
add
adc
pop
sbb
add
pushl
lock
add
sbb
addr16
pushf
sbb
nopl
sbb
push
movhps
sbb
sub
or
cmp
xor
or
or
or
fistpll
or
dec
sub
sub
xor
push
or
pop
inc
adc
cmp
inc
inc
clc
decl
add
pusha
mov
js
mov
or
push
fsubl
cld
and
aas
pop
inc
and
scas
clc
rorl
scas
xor
xor
sbb
pop
add
push
push
pop
push
sbb
cmpsb
stos
and
or
push
mov
pop
aaa
sub
mov
and
add
aas
enter
inc
cs
pop
sbb
push
std
jg
sub
sub
adc
lock
std
add
lock
add
ljmp
cli
incl
cmp
lock
sub
lock
popa
jp
add
or
sbbb
sbb
call
cmp
adc
pop
or
and
lcall
adc
adc
sbb
cmp
unpcklps
cmp
push
sub
or
and
inc
icebp
outsb
clc
or
ret
sbb
adc
daa
adc
pop
dec
sub
or
sbb
adc
lcall
xor
aas
adc
push
push
sub
adc
sbb
push
cld
or
pushf
pop
and
mov
mov
dec
test
fmuls
imul
outsb
outsb
inc
adc
lock
xor
push
xchg
pop
sbb
leave
add
and
movlps
pop
sbb
out
std
sbb
iret
add
jne
push
pop
push
jbe
pop
sub
cmp
or
icebp
push
cld
decl
cmp
push
cmp
lret
cmpsb
inc
add
push
cld
sbb
fidivs
sub
lock
add
mov
add
aaa
sub
sbb
add
pop
or
pop
movntps
push
sti
aaa
loopne
pop
adc
mov
adc
mov
sub
xchg
jne
sub
push
sub
movsb
adc
pop
int3
pop
sub
sbb
mov
xchg
or
push
cmp
and
scas
out
movsb
and
adc
sub
xchg
pop
invd
or
daa
push
cs
sub
or
sbb
or
decl
adc
adc
daa
or
dec
prefetch
lock
and
pop
push
xchg
movsl
adc
pop
sub
lock
or
push
sbb
or
out
pop
aad
xor
xor
adc
push
or
adc
jg
xchg
or
adc
add
adc
push
subb
mov
and
wbinvd
decl
out
push
push
xor
inc
adc
sub
scas
xor
sbb
nop
xor
sbb
jg
jmp
sbb
sub
inc
inc
cmp
test
adc
cmp
mov
xor
fistpll
sbb
out
arpl
sbb
inc
adc
and
push
daa
adc
cs
push
les
sbb
adc
rolb
jecxz
notl
or
mov
ss
pop
pop
push
xor
or
das
pop
cmc
aaa
fiadds
cmovno
movsl
or
sbb
sbb
incl
or
xor
inc
mov
mov
sbb
sub
jle
jmp
cmp
ds
aas
push
cmpsb
push
inc
incl
nop
adc
cmp
sub
decl
add
inc
cmp
fcompl
fimull
in
bound
aaa
add
or
sbb
jb
sub
jg
adc
xor
sub
es
and
or
scas
jb
jg
adc
and
sub
or
adc
sbb
pop
sub
data16
sbb
adc
add
andl
xchg
sbb
adc
jne
adc
push
pop
fcomi
outsl
pop
pushf
or
inc
dec
dec
add
repnz
sub
pop
ret
push
dec
mov
lock
push
and
add
leave
and
push
inc
inc
sub
das
sbb
sbb
and
inc
xor
bswap
in
pop
mov
adc
femms
aaa
dec
adc
lcall
adc
aaa
std
scas
xor
aas
adc
adc
pop
cmp
and
sbb
cmpb
dec
pop
sub
xor
adc
or
xor
lea
adc
jle
sbb
jg
test
mov
dec
cmp
pop
adc
pop
adc
call
and
dec
adc
add
adc
sub
cmp
sbb
adc
and
add
inc
dec
adc
sbb
push
dec
pusha
push
and
jb
std
imulb
loop
je
and
pop
or
or
push
inc
pusha
ret
stos
mov
xor
adc
mov
sub
cmp
cmp
jp
or
or
jno
push
loope
or
dec
pop
insl
dec
inc
push
pusha
adc
or
int3
or
or
sti
mov
dec
dec
insb
lock
mov
inc
popa
das
mov
or
pusha
lock
daa
push
arpl
cmp
sbb
sbb
pop
lock
add
dec
cmp
adc
or
nop
iret
ja
jne
ds
adc
andl
xchg
push
inc
fcomip
sbb
ds
sbb
and
push
dec
fmuls
pop
ds
xchg
add
outsb
rorb
xchg
or
add
aas
sbbb
sub
add
jle
dec
or
ss
adc
mov
sub
sbb
inc
or
fcomip
or
adc
push
push
adc
sub
add
mov
popa
push
das
or
and
add
incl
sbb
inc
adc
adc
sub
pop
popa
lahf
pop
sub
mov
and
and
or
inc
es
inc
adc
sub
in
sbb
fcompl
or
inc
inc
cmp
jo
cmp
cmp
mov
pop
cld
jecxz
out
les
add
data16
xor
add
xor
adc
dec
pop
and
call
in
push
aaa
movsb
add
bound
cmp
daa
cmp
and
call
std
adc
sbb
push
and
fildll
mov
or
sub
and
xchg
add
sbb
adc
sbb
sbb
adc
add
push
cmp
pop
add
sub
push
sbb
fdivrl
clc
filds
lcall
sbb
dec
mov
sbb
ja
ja
add
outsb
cmp
sub
sbb
cmp
add
outsb
xor
sar
insb
inc
cmp
mov
fiaddl
sub
mov
fbld
pop
inc
inc
cltd
sbb
pop
xor
adc
stos
loopne
inc
scas
sbb
xor
mov
xchg
push
mov
paddb
inc
mov
dec
or
push
push
pop
adc
pop
or
add
sub
xor
lahf
and
outsb
les
and
push
pcmpgtw
or
lahf
add
jo
jo
add
mov
or
add
sub
mov
arpl
mov
sub
mov
xor
scas
testb
das
jl
add
fldl
push
or
xor
mov
or
jmp
js
data16
sbb
loop
lea
ja
adc
sbb
lock
sbb
inc
ficoml
loope
mov
xchg
add
lock
lock
add
sbb
out
scas
push
sub
push
pop
arpl
dec
std
jg
mov
xor
pop
and
aad
lea
push
data16
fisubl
inc
adc
dec
sub
ljmp
sbbb
or
pop
repnz
lock
fimull
sbb
mov
push
add
lock
js
mov
pop
fmuls
stos
stos
and
or
inc
xchg
notb
add
jg
jmp
sub
adc
or
adc
or
in
pop
sbbl
xor
push
dec
or
and
fidivs
push
fcmove
sbb
loop
lock
inc
loop
xorl
push
or
mov
lcall
into
add
jo,pn
adc
or
or
sbb
adc
xor
mov
pop
fcomp
aam
pop
sbb
and
add
dec
dec
dec
push
ret
js,pn
push
in
ficompl
xor
or
jle
push
sbb
adc
sbb
jp
or
or
push
mov
mov
pop
adc
jo
cltd
push
loopne
xchg
push
and
pusha
xchg
mov
push
sbb
sbb
mov
sub
pop
cmpsb
jbe
push
dec
repz
inc
loope
loope
add
xchg
add
dec
add
sub
wrmsr
dec
add
and
loopne
and
ds
push
ds
inc
fisttpll
adc
je
adc
and
mov
add
aas
cmp
or
or
gs
int3
es
shrb
push
mov
and
and
and
shlb
mov
enter
cltd
shl
fistps
mov
sub
shrb
sbb
clc
pop
adc
or
and
xor
adc
pop
dec
sbb
scas
lcall
cli
rorl
adc
push
or
bound
lock
les
and
xor
add
sbb
ljmp
rcrb
pop
sub
sub
push
add
sbb
cmp
xchg
pop
mov
cli
and
pop
xchg
shlb
push
push
das
mov
adc
mov
adc
movsb
outsb
das
pop
or
pop
push
push
and
cld
fmull
dec
je
push
and
int3
cmp
clc
adc
add
popa
pop
mov
lret
lods
inc
outsb
repnz
std
push
dec
or
sbb
lock
adc
adc
addl
clc
sbb
push
or
jo
insb
dec
lock
dec
or
pop
loopne
add
xchg
mov
add
mov
cwtl
push
mov
hlt
jg
sbb
inc
lock
add
or
adc
or
pop
mov
les
ss
sbb
xor
sbb
push
sub
jg
sbbl
pop
sub
ss
cmp
or
xor
test
push
out
clc
add
mov
mov
sub
sbb
movsl
add
inc
outsl
cmpsb
add
adc
push
enter
cmp
mov
adc
sbb
pop
or
push
adc
and
xor
push
mov
fwait
sub
and
adc
xchg
add
lock
or
add
add
lock
ret
xor
outsl
and
roll
push
sub
xchg
sbb
cmp
jno
imul
sub
inc
or
sbb
pop
sbb
es
sub
dec
dec
push
mov
push
sbb
mov
and
sub
das
adc
push
dec
inc
sbb
and
outsl
xor
sbb
mov
sbb
arpl
xor
and
push
ret
in
mov
adc
cmp
inc
inc
sub
or
push
or
xor
ds
cmp
push
and
and
cmp
cmp
dec
mov
pop
and
je
and
jle
xchg
and
cmp
fildl
pushl
sbbl
pop
pop
shl
xor
inc
lret
sub
loopne
dec
pop
and
xor
dec
xchg
mov
push
push
lret
xchg
cmp
add
and
xor
push
inc
inc
pop
int3
cmp
in
es
jg
inc
aas
dec
jne
and
add
lods
subl
cmp
xor
mov
lock
add
pushf
mov
sub
outsl
decl
dec
xor
cmp
and
cmp
dec
add
cmp
sti
fcmovnu
outsl
ss
xor
cmp
xorl
lock
pop
cmp
arpl
fdivrs
lds
mov
sbb
xchg
lock
xchg
lock
mov
and
aam
lock
push
cmp
adc
xor
or
fldt
cwtl
pop
inc
and
dec
aam
adc
mov
inc
or
sbb
jne
into
push
nop
pusha
or
xchg
jbe
lcall
subb
test
add
sarb
lock
push
push
xlat
adc
mov
test
adc
mov
lock
pop
scas
pop
rcrl
scas
lock
inc
mov
push
add
or
and
push
sub
xchg
mov
lock
mov
insl
push
jo
or
mov
mov
mov
imul
or
or
sahf
add
xorl
cmp
das
andb
jmp
dec
and
xchg
test
mov
adc
or
adc
or
mov
out
fstl
and
daa
adc
adc
jnp
adc
or
push
or
sbb
test
dec
lret
adc
sbb
adc
inc
xor
xor
adc
and
push
and
pop
sbb
mov
jmp
or
sub
pusha
mov
jno
push
sub
mov
jno
cmp
mov
and
dec
mov
adc
mov
dec
pop
call
movsl
push
mov
push
push
xor
mov
stc
leave
cmpb
testl
jo
sbb
lea
and
jo
add
lods
test
sbb
lcall
or
or
and
jge
mov
insb
pusha
adc
data16
xor
cmp
mov
adc
xchg
cmp
or
add
fucomip
mov
add
or
add
cmp
mov
xor
adc
adc
pop
xor
test
fiadds
gs
sub
and
ficoml
or
mov
push
sbb
lret
sub
in
cmc
and
and
lahf
repz
push
mov
insl
jnp
inc
xchg
mov
sub
das
jge
mov
or
and
fisubrl
and
xor
rol
sahf
sub
adc
sub
mov
pcmpeqd
js
insb
mov
mov
movsl
dec
push
dec
add
lods
mov
push
fadds
pop
dec
adc
and
jno
jne
pop
fidivl
pop
jo
out
push
adc
and
jne
insl
aaa
mov
adc
out
push
stos
loope
dec
hlt
andb
fcmovnu
or
loopne
fsubrs
mov
rcrl
dec
pop
ret
aaa
arpl
dec
imul
dec
push
scas
mov
sub
mov
or
adc
or
dec
jg
jmp
or
fildll
jge
jmp
je
aaa
and
pop
fisubrl
cmpsb
adc
mov
out
push
inc
dec
cmp
jbe
pop
idivb
mov
mov
movsl
xchg
push
test
imul
lret
sbb
lea
imul
shrl
sbb
sub
dec
mov
lret
xchg
imul
sbb
sbb
mov
mov
mov
inc
sbb
push
push
add
mov
adc
add
sbb
shll
jno
mov
int3
outsl
adc
pop
mov
inc
or
add
jno
inc
mov
nop
or
mov
or
es
adc
sbb
int3
add
push
add
mov
adcb
insl
add
dec
ret
in
add
js
or
adc
cmpsb
lods
sub
fimuls
sub
sub
xor
mov
add
and
sub
sub
cmp
mov
out
xor
sbb
or
in
popf
dec
ret
or
push
xor
jge
fucomi
pop
add
xor
sbb
xor
mov
pop
jmp
and
and
mov
inc
sbb
pop
inc
and
add
push
int
sbb
sbb
sub
pop
push
js
inc
cmp
adc
nop
test
cs
pop
leave
jo
aad
fbld
dec
ljmp
nop
xchg
dec
pusha
pop
mov
or
inc
decl
jle
out
cmpsl
cmp
sbb
add
jno
sbb
mov
pop
sahf
movb
push
pop
push
lock
lret
push
movsb
add
pop
imul
in
adc
flds
jl
inc
sbb
xchg
add
jnp
notl
ljmp
and
dec
mov
push
outsl
jo
xlat
pop
mov
push
mov
jp
or
mov
or
dec
jo
cmpsb
mov
sub
xchg
and
xchg
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
xchg
inc
add
add
