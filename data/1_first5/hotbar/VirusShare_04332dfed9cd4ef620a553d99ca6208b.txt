divb
in
mov
mov
mov
inc
add
add
out
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
movl
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
inc
push
adc
add
inc
sub
rol
jo
mov
push
mov
xor
push
mov
call
pushl
fwait
mov
enter
push
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
xorw
push
adc
cwtl
or
lock
fcomi
sub
dec
shlb
in
or
loope
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
call
and
cmp
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
mov
xor
test
or
sbb
push
lock
or
inc
scas
stos
imul
dec
out
jge
test
mov
pop
jne
aad
imul
cmpsl
jnp
cmp
data16
mov
dec
pop
push
insl
sbb
pop
cld
add
push
push
push
iret
bound
lds
aaa
jae
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
mov
js
sti
mov
mov
xor
mov
pop
ret
arpl
ret
add
pop
roll
pop
imul
sarl
pop
pop
dec
add
clc
sub
mov
enter
push
push
ss
loopne
jmp
fs
xor
jne
pop
adc
fdivr
mov
adc
jg
mov
adc
int3
adc
adc
ret
shrl
jge
pop
add
lock
pop
outsl
jmp
in
sub
xchg
sbb
push
decl
push
mov
sar
xor
cmp
ja
adc
add
sub
add
push
movsb
inc
xor
adc
nop
xchg
push
jo
addb
add
scas
cmp
loop
lds
iret
jle
mov
cmpl
lds
jle
push
filds
ret
add
jge
std
xlat
mov
sbb
or
jmp
cltd
sub
ja
fcmovb
shr
enter
mov
mov
sub
dec
push
add
cld
sbb
cmp
jl
cmp
jne
pop
mov
inc
pop
mov
mov
mov
push
jbe
mov
hlt
out
jne
rorl
mov
mov
or
adc
push
lea
cmpl
fld
push
xor
into
mov
mov
mov
cmpsl
sub
cmp
cmp
cmpsl
mov
in
scas
xor
fsubrs
mov
jg
cmpsl
rcrl
mov
mov
xchg
or
test
jle
dec
popa
outsl
or
push
call
sahf
mov
add
or
icebp
in
pop
pop
fwait
push
pop
sub
jg
decl
ja
mov
inc
jecxz
jns
mov
loop
pop
mov
inc
addr16
aam
sbb
sub
or
ret
andl
ret
and
mov
adcb
idivb
jmp
hlt
jg
pusha
andb
cmp
sub
mov
notb
hlt
movlhps
hlt
mov
insb
idivl
jle
mov
out
clc
adc
cmpl
je
push
cmp
cmp
jae
addl
sub
mov
or
add
inc
push
sub
jb
pop
add
xchg
pop
std
notb
sub
ret
lea
ljmp
lcall
inc
push
push
push
push
rclb
rcrl
mov
jmp
xchg
jmp
inc
or
addb
mov
pop
es
and
and
inc
sub
jo
cmp
aad
aaa
stos
rcrl
add
or
pop
or
fbld
cmp
push
mov
lea
cmp
jne
push
push
mulb
clc
push
push
adcb
js
push
mov
mov
or
pusha
enter
pop
pop
rclb
iret
rcrl
push
stc
inc
fdivl
cmp
stos
xchg
out
xlat
jge
movl
mov
add
jae
iret
xchg
add
out
add
pop
fstpt
mov
add
mov
sbb
xor
mov
pop
mov
sti
push
or
cwtl
push
push
xchg
out
sti
imul
mov
loopne
in
dec
push
push
cmp
sbb
mov
std
stos
or
adc
je
push
adc
loopne
test
push
sbb
sar
inc
inc
inc
or
or
fildll
lea
dec
push
xor
sbb
pop
mov
xchg
pop
push
jmp
dec
fwait
fs
add
sbb
pop
jae
jae
push
add
les
inc
push
dec
pop
xchg
push
out
or
iret
popf
lea
push
add
push
mov
cmp
outsl
fwait
xor
pop
cmp
sub
mov
ja
sub
mov
and
push
scas
mov
aaa
cmp
push
sbb
addr16
push
cmp
push
inc
cmp
je
call
sub
outsl
sbb
cmp
in
jne
sbb
sbb
in
jp
jecxz
jo
pop
mov
add
into
xor
jb
cmp
repnz
cmc
or
sub
test
fsub
mov
aam
jp
or
mov
mov
mov
jecxz
std
jle
mov
cmp
adc
jge
xor
jno
add
or
inc
lea
or
rcr
lcall
clc
push
or
roll
or
add
adc
or
sub
pusha
mov
cmp
mov
shlb
dec
or
push
or
ds
fisubs
scas
ljmp
or
push
mov
xlat
push
xchg
sbb
fsts
jno
cltd
sbb
icebp
stc
lcall
pushl
push
mov
out
add
jp
sub
mov
sbb
mov
ret
shrl
adc
pop
inc
xlat
add
add
pop
or
or
ret
je
dec
je
ret
jns
sbb
adc
or
adc
and
shll
js
hlt
or
pop
adc
and
iret
jo
mov
rcll
inc
fmuls
ljmp
ljmp
mov
push
add
shr
mov
cli
xor
fadds
mov
xchg
jmp
adc
pusha
pushf
pop
cmc
mov
call
push
xor
cmpsl
xchg
mov
in
aaa
pushf
or
mov
jae
mov
sarb
fisttps
inc
xchg
and
aas
mov
dec
mov
cmp
js
sub
out
sbb
push
sub
or
sub
js
and
fwait
or
fcoms
cmp
popa
add
roll
in
dec
dec
lock
fldl
pushl
dec
in
loopne
out
neg
sbb
inc
inc
pop
xlat
sbbb
mov
mov
or
cmpb
fiadds
sbb
push
cltd
adc
cmpb
jbe
movsl
push
popa
negl
pop
fildll
das
pop
sahf
jmp
sbb
call
or
test
sbb
loopne
xlat
repz
lea
cmp
sbb
adc
aaa
pop
mov
push
lret
mov
push
xchg
xorl
xchg
ret
pop
adc
test
clc
mov
fstpt
aas
pop
mov
xchg
out
cld
cmp
jl
or
dec
jl
mov
push
xor
cmp
sahf
dec
inc
push
fs
or
sbbl
mov
xchg
into
scas
push
pusha
nop
mov
and
xor
sti
xor
pushf
sub
mov
xor
or
daa
inc
fs
xchg
add
jo
mov
push
in
jae
nop
out
cwtl
adc
adc
mov
scas
adc
vdivps
lahf
xlat
lea
push
push
or
mov
xor
sub
xchg
jl
push
inc
subl
or
xchg
xor
rolb
xchg
xchg
cmpsl
stc
sub
jmp
mov
js
dec
jl
dec
in
or
mov
mov
ljmp
divb
fnsave
scas
xor
mov
cmp
call
push
push
pop
inc
lods
jo
loope
add
shlb
mov
or
sbb
outsl
lea
insl
cmpsl
flds
add
in
jl
xor
in
jne
push
mov
mov
pop
repnz
je
or
push
mov
inc
and
add
sub
sbb
xor
loopne
jno
les
mov
pop
pop
add
jne
xchg
inc
jmp
fabs
ret
push
xor
mov
mul
aam
jge
decl
inc
setno
xchg
test
out
add
enter
loopne
movl
lock
mov
mov
push
aaa
cmp
inc
xlat
or
jp
dec
adc
mov
and
shlb
bound
adc
xchg
in
push
and
push
or
ljmp
frstor
add
add
add
fldt
pop
sbbb
in
testb
xchg
in
push
sarb
pop
push
movb
stos
jo
xor
mov
and
mov
adc
jmp
stc
jle
dec
test
mov
pop
push
fldcw
push
pop
jno
idivl
je
push
fimuls
ja
and
cmp
pop
inc
je
or
test
or
xchg
mov
mov
dec
cmc
jo
sbb
imul
enter
add
out
das
lock
push
enter
lods
lods
add
in
fmull
and
or
add
inc
repz
daa
outsl
mov
js
insb
das
loopne
push
mov
dec
cmp
in
cmp
adc
sub
ljmp
sbb
fdivp
cmp
add
out
data16
xchg
jge
out
sti
lock
shlb
cmp
adc
mov
sarb
pop
adc
mov
adc
arpl
movsb
xchg
and
cmp
movsb
xchg
out
mov
adc
fwait
rol
aam
push
test
dec
inc
pushf
pushf
and
ret
mov
mov
xchg
sbb
dec
inc
xchg
xchg
hlt
inc
cmpsb
in
movsb
int3
sbb
int3
in
lret
inc
enter
mov
and
rol
push
repnz
rol
in
lret
cmp
pop
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
aas
add
testl
cwtl
arpl
pop
mov
push
sub
fstp
push
loopne
iret
and
xchg
outsb
inc
sbb
aaa
xchg
add
ret
mov
test
jo
ss
je
sbb
loop
fstp
push
jmp
cs
push
xor
sbb
or
mov
and
add
adc
add
adc
or
in
loopne
add
inc
mov
ret
jle
clc
in
mov
in
andb
je
test
lods
imul
push
push
fisttpll
movsb
and
push
dec
punpckhwd
aaa
adc
dec
scas
je
sti
or
push
divl
test
clc
out
pop
test
sub
fs
shll
pop
sbb
and
insl
or
add
popa
cmpsb
xor
lret
xchg
mov
xchg
or
std
and
pushf
push
adc
adc
ds
ds
add
cmp
or
jl
or
lea
push
leave
aad
lock
jne
fildl
xchg
pop
pop
push
jmp
push
xchg
ret
leave
xor
leave
pop
jmp
adc
adc
jle
imul
test
scas
fadds
xchg
dec
mov
adc
add
ror
sbb
sub
or
sbb
mov
push
push
sbb
daa
pop
jbe
and
jl
mov
sbb
or
cwtl
fs
sub
btc
lret
adcl
in
fildl
mov
inc
test
adc
inc
adc
leave
adcb
jno
shll
sbb
jne
fidivl
es
into
adc
dec
cmc
xor
inc
adc
xchg
dec
mov
push
add
add
cmc
dec
push
inc
mov
call
inc
lret
insl
xchg
pop
push
js
dec
sbb
test
mov
mov
lock
fistpl
jne
jo
or
sbbb
inc
sbb
or
jb
push
cmpsl
scas
cmp
cltd
outsb
clc
popf
jl
in
in
loopne
cmp
pop
add
push
sahf
les
xchg
fbld
add
pop
nopl
xchg
and
popa
pop
xlat
sbb
mov
maskmovq
idivl
imul
loop
clc
add
xlat
outsl
or
je
xor
push
push
or
mov
or
iret
xchg
mov
pushw
mov
nop
or
adc
pop
dec
movsl
and
jecxz
or
scas
mov
add
clc
inc
popw
add
lods
mov
hlt
int3
or
aaa
cmp
jl
xor
and
fstpt
sbb
out
test
hlt
je
pop
sahf
loopne
push
push
pop
ljmp
test
int
inc
pusha
lock
adc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
and
push
xor
sub
push
and
js
lahf
bound
adc
xlat
and
sti
add
pop
sub
cmp
popf
pop
mov
cmpsl
and
xchg
movsb
std
daa
inc
div
fdivrl
and
cwtl
and
je
aas
incb
add
push
or
jo
jmp
fsubrs
push
fdivrs
aam
stc
scas
xchg
sbb
sub
push
sbb
sub
sub
inc
imul
sub
jno
jno
or
ss
inc
stos
inc
dec
inc
lret
ret
test
lret
or
xor
mov
cmpsl
jne
mov
add
add
and
inc
pop
xor
cwtl
push
insb
stos
xor
frstor
ss
pop
insb
adc
repnz
rclb
lods
mov
jo
xchg
and
push
test
add
test
jo
mov
pop
lcall
sbb
adc
jecxz
dec
sub
adc
fcomps
lret
push
push
outsl
xchg
in
test
ficoms
or
sub
add
rclb
in
inc
jo
mov
mov
mov
push
mov
sti
sbb
sbb
mov
pop
fmull
fadds
mov
push
pop
and
or
loopne
add
add
sahf
inc
popf
cmp
or
jmp
dec
cmpsb
inc
das
sub
in
call
stos
dec
enter
mov
add
enter
popw
cs
bound
xchg
add
dec
mov
call
mov
insl
sbb
xlat
push
inc
jb
cmp
cltd
mov
std
fdivs
addl
outsl
inc
xor
pop
out
jmp
mov
in
inc
cmp
inc
mov
mulb
add
or
xchg
stc
pop
call
xor
ficoml
enter
sbb
pop
add
pop
cmp
daa
pop
cmp
cmp
jne
and
test
and
fadds
or
mov
int
or
cmp
ficomps
test
mov
jne
bound
shrb
push
bound
popf
fildl
js
mov
xorl
mov
addr16
punpcklwd
mov
ret
add
fs
jo
fwait
xchg
mov
loop
push
jo
mov
in
and
mov
adc
lods
add
push
je
nop
out
mov
jnp
adc
pop
dec
mov
jge
adc
je
cmp
jge
push
push
jp
mov
mov
add
inc
mov
mov
add
lock
sub
test
pslld
push
sub
call
sub
das
mov
shlb
xchg
adc
inc
in
mov
aas
mov
sub
jmp
cmp
or
shll
dec
enter
xor
pop
add
lock
mov
jmp
mov
stos
lock
jl
push
mov
add
xor
loopne
sub
add
es
scas
push
adc
push
mov
js
pop
lret
cmpb
push
push
movsb
adc
rolb
cmp
mov
cmp
inc
dec
jns
cld
push
or
cmp
sbb
add
mov
daa
sbb
or
movsb
loopne
mov
adc
dec
das
xchg
jbe
jle
xchg
inc
out
or
pop
or
sub
cmp
xchg
mov
add
icebp
les
cmp
pop
in
negb
jne
or
je
sub
das
add
cld
jo
in
sti
loopne
jg
popa
or
int3
cli
jo
inc
hlt
xor
and
lock
faddl
sbb
adc
pop
pop
test
mov
ret
orb
ret
rcr
out
out
jne
or
popa
cmpsl
push
out
xchg
cmp
mov
loop
test
call
call
rolb
sub
arpl
cmp
lahf
je
sub
jmp
push
sbb
rcrl
insb
inc
fsub
push
out
inc
out
test
inc
lock
push
add
xor
mov
mov
imull
cwtl
lods
loope
lds
ret
jno
inc
stos
orl
cmpsb
push
add
push
xor
push
push
or
jg
mov
cmpsb
mov
les
or
test
repnz
cmpsl
mov
rorb
rolb
sbb
fdivr
or
xor
xor
in
rorb
mov
mov
jnp
and
lock
dec
dec
je
sub
jmp
jge
cli
adc
push
inc
push
mov
jmp
lock
mov
jg
or
fwait
mov
xlat
pop
xchg
adc
push
rclb
xchg
icebp
inc
and
inc
inc
inc
insl
sbbb
mov
aad
mov
je
lock
mov
mov
xor
inc
mov
sarl
jl
lods
push
dec
cmp
adcb
push
aaa
fs
push
pavgw
jle
enter
jno
fwait
sbb
push
or
lock
jecxz
push
mov
orb
movl
cmp
loopne
fisttps
cmpsl
or
in
add
sarb
add
inc
sbb
sbb
imul
outsb
fadd
sbb
sbb
xchg
add
jle
ret
scas
pop
lea
add
psubd
in
ret
sub
shlb
out
inc
cmpl
push
push
jne
aaa
or
push
jo
jnp
into
in
inc
xchg
in
jp
lock
stos
xor
cltd
mov
rcrb
test
or
sbb
or
scas
fcmovnbe
mov
insb
mov
cmp
mov
push
fistl
sbb
dec
pushf
in
inc
out
cmp
ds
inc
cmp
cmpl
jne
add
mov
cmp
jle
cmp
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pushf
loopne
mov
mov
jmp
push
pusha
mov
dec
fcomps
shll
push
sti
cwtl
test
aam
fmuls
or
loopne
or
push
mov
inc
loop
cmp
nop
or
push
addb
pop
adc
scas
fdivr
mov
cmp
cli
in
mov
jbe
mov
rorl
or
in
pop
stc
and
scas
in
lret
mov
cmp
inc
mov
scas
sbb
jno
testl
nop
inc
xchg
and
mov
fmuls
test
test
pminub
jb
sbb
lods
ret
push
push
call
and
rorl
cmpb
mov
fs
add
inc
and
addr16
mov
rcll
clc
add
mov
cwtl
lock
jo
out
mov
enter
lds
or
push
jl
add
test
je
push
pusha
mov
pop
or
mov
dec
iret
mov
add
inc
mov
adc
add
dec
push
and
pushf
int3
push
pop
xor
mov
hlt
dec
mov
adc
mov
fcmovnu
into
lods
adc
rclb
sbb
mov
das
das
das
fcoms
fsubrl
adc
mov
mov
lcall
inc
mov
pushl
call
mov
decl
shr
movzbl
push
adc
sbb
xchg
or
ret
push
ret
dec
mov
mov
cmp
in
stos
mov
cmpsl
jmp
sbb
pop
popf
cmp
ret
push
andl
test
insb
sbb
in
xchg
adc
push
gs
pop
xor
mov
sti
push
pop
jb
xor
loopne
pop
or
add
xlat
push
mov
fwait
add
xor
jmp
imul
push
add
push
push
jl
std
daa
mov
cmp
jg
mov
mov
jmp
add
gs
cmp
aaa
lds
pop
fldl
repnz
sbb
mov
inc
pop
adc
mov
mov
aas
mov
dec
jecxz
mov
or
popa
lea
xor
inc
je
aaa
outsb
sub
in
sub
sbb
subl
sbb
push
shlb
and
pop
jg
mov
ret
push
pop
jmp
mov
push
inc
ret
fdivrl
add
ss
arpl
and
cmp
je
cmp
in
add
imul
cmp
adc
test
push
adc
lock
xor
inc
cmp
jae
add
inc
hlt
lea
ja
pop
dec
cmc
add
je
call
push
mov
fildl
js
je
add
fiaddl
insb
sub
fcomps
cmpsb
lock
fnsave
std
or
scas
pop
hlt
add
jl
in
and
lcall
push
lods
ljmp
pop
cmp
jecxz
xor
inc
adc
clc
roll
loop
popf
into
popa
nop
add
mov
rcrl
pop
xor
adc
cli
lea
ljmp
push
push
cld
or
xlat
leave
into
sub
test
xor
out
xchg
add
leave
pop
in
push
mov
mov
mov
mov
adc
mov
aad
inc
js
jb
mov
mov
xchg
cltd
mulb
leave
js
inc
dec
hlt
jg
hlt
or
clc
or
push
sub
pop
pop
push
enter
lock
filds
and
add
inc
ss
mov
cbtw
scas
fdivrs
in
out
push
push
add
fdivs
mov
cli
adc
xchg
sub
jno
fdivp
add
adc
hlt
jl
repz
push
sub
push
in
enter
and
and
xor
ret
or
bound
xchg
popa
pop
add
fwait
mov
cmp
push
xchg
in
test
bound
push
mov
popf
jge
or
sarl
mov
adc
or
stc
push
cmp
push
and
mov
ret
je
mov
fdivrs
mov
jp
mov
sbb
movsl
sbb
test
pop
movsb
push
dec
sbb
ficomps
or
cmp
mov
or
add
icebp
sbb
rolb
test
xor
adc
cmp
fiadds
test
add
mov
movsl
or
sbb
out
aam
fadd
je
push
and
xor
scas
ljmp
insl
hlt
pop
mov
jb
ficompl
and
sub
and
adc
sub
jmp
icebp
jb
clc
push
pop
sbb
fs
jne
cmp
je
add
xor
inc
cmp
jmp
push
push
push
and
and
sbb
mov
ret
shlb
dec
and
xor
imul
or
xchg
rol
ljmp
addl
test
fisubl
adc
jbe
setne
shlb
shll
test
sbb
cmpsl
ljmp
mov
js
lcall
divb
psrad
mov
jnp
stos
pop
add
pop
sub
pop
inc
mov
add
push
push
adc
mov
pushl
movsb
jp
js
push
decl
loop
cmp
or
inc
add
add
jno
or
loope
lock
lock
mov
loopne
xor
adc
jo
adc
sti
mov
lods
jo
xlat
or
xor
inc
fcmovb
dec
pusha
pop
dec
push
call
add
mov
add
adc
arpl
push
jmp
cwtl
or
adcb
push
addr16
sbb
daa
or
popl
add
add
xor
pop
inc
enter
aas
push
xchg
xchg
call
cmp
mov
sub
sar
shr
mov
mov
or
adc
jb
xchg
xchg
clc
mov
enter
jl
add
insb
cld
cmp
lea
jbe
mov
push
call
pop
push
leave
inc
adc
adc
xchg
add
add
push
js
test
movl
in
add
stos
xor
ds
add
les
xor
push
xor
inc
bound
mov
outsl
roll
pusha
or
nop
sub
xlat
jecxz
add
add
test
cmp
and
lea
sbb
adc
lock
push
aad
popf
icebp
rclb
mov
mov
sbb
sti
inc
andb
andl
or
loop
sub
dec
lret
movsl
mov
lods
pop
xor
mov
and
sub
incl
test
push
jae
sub
pushf
mov
fldt
adc
add
cwtl
add
xchg
sbb
xor
add
xlat
push
lds
dec
mov
mov
mov
call
jbe
mov
adcl
jns
mov
or
test
jno
dec
es
lret
cmp
cmp
push
jb
pop
and
adc
les
in
xchg
jno
sub
and
imul
add
mov
and
clc
mov
stos
xor
inc
mov
into
cs
xchg
cmc
add
bound
jmp
add
leave
adcl
roll
enter
sbbb
in
insb
jne
stc
dec
dec
inc
dec
popf
pushf
and
mov
cmp
lea
pop
stc
inc
mov
mov
dec
push
push
pop
cmpsb
pop
or
add
sbb
inc
jbe
nop
and
stos
pop
cli
out
mov
xchg
or
fwait
hlt
and
and
dec
mov
stos
jns
jg
cwtl
push
inc
mov
push
pop
xorl
in
and
jbe
andb
adc
lcall
das
lret
cmp
shl
pop
lods
stos
lock
mov
loopne
pusha
scas
cmp
and
leave
and
clc
cmp
enter
dec
daa
adc
enter
dec
adc
fbstp
push
lea
mov
sub
scas
imul
pop
sbb
xor
sub
or
sbb
xor
dec
cli
pop
ret
mov
dec
mov
xlat
sbb
arpl
subl
dec
push
jge
in
ss
popf
lea
sbb
leave
xchg
adc
out
out
mov
or
mov
inc
xchg
and
and
cmp
sbb
and
ret
ss
xchg
or
mov
cmpsb
push
add
push
mov
xor
test
movsl
notl
inc
push
push
lods
test
dec
xchg
ja
dec
jae
fdivrp
movups
sti
fistl
or
je
cmp
popf
push
jge
inc
pop
sbb
cmp
push
mov
in
in
shrl
pop
negl
sub
cmp
sarb
roll
jle
push
add
sbb
jb
xchg
loop
mov
mov
stos
mov
out
arpl
aam
add
jbe
outsl
xadd
aam
jmp
cmp
sub
sahf
nop
lret
in
jne
sub
add
push
pop
dec
je
into
adc
in
jge
adc
push
push
pop
dec
ss
inc
and
fsubr
adc
mov
sub
mov
rorb
pop
xchg
ror
cmp
adc
jecxz
jne
clc
jg
daa
pop
in
sbb
jmp
push
add
push
mov
decb
push
cmp
push
push
sbb
cmp
loopne
add
xchg
fmull
jp
fnstsw
mov
icebp
xchg
lds
sbb
or
push
sbb
loope
xchg
adc
xor
sbb
repz
push
daa
pop
jmp
and
pusha
push
jle
mov
and
adc
aas
or
mov
pop
jmp
sti
imul
cmp
je
cmp
pop
jmp
inc
dec
shrl
dec
sbb
leave
adc
cli
imul
jle
mov
sbb
fstpl
imul
jmp
sbb
and
jnp
in
arpl
sbb
je
mov
or
xchg
scas
cmp
das
pop
bound
neg
negb
pop
push
insb
push
jg
mov
loopne
adc
sbb
loopne
les
iret
clc
push
insl
sti
lahf
xlat
inc
sbb
mov
mov
add
pushw
and
loopne
in
sub
adc
pusha
lea
shlb
inc
adc
sub
mov
or
movb
add
int3
push
push
or
xchg
xchg
pop
les
jne
xchg
push
dec
push
mov
pop
push
lea
popf
mov
mov
push
push
add
push
lea
pop
cmc
gs
cmp
dec
fidivs
add
dec
mov
sbb
stos
xor
test
cld
lea
lea
movl
xchg
test
inc
cmp
sbb
lds
adc
scas
and
sbb
call
and
and
push
aam
mov
pop
push
push
test
out
add
xchg
add
mov
test
dec
incb
cltd
dec
push
jl
nop
add
jno
jo
mov
bound
or
orb
push
je
add
sub
jle
push
clc
pop
dec
ss
push
inc
and
pop
shlb
add
and
mov
movl
into
add
pop
in
adc
or
out
push
cltd
adc
insb
inc
jl
add
outsb
or
jae
adc
adc
push
repz
lods
inc
fisttpl
out
cmp
dec
call
in
push
inc
test
inc
pop
in
sub
xor
sub
pushf
inc
push
sub
int
iret
shll
cltd
es
push
pop
sub
xor
dec
push
sbb
adc
pop
ret
pop
test
push
push
cmp
jecxz
add
mov
pushf
jl
shlb
in
mov
popa
add
stos
cs
jl
lcall
outsb
fists
mov
ret
js
inc
gs
dec
std
shll
or
mov
pop
mov
popa
aam
push
aam
das
in
push
rcll
stos
inc
les
int3
push
das
cltd
rcrb
add
fcoml
push
dec
fildl
cmp
sbb
loopne,pn
fcomi
inc
add
rorb
sub
pop
fcompl
shlb
ret
mov
mov
add
mov
xor
adc
fnstsw
push
int3
cmp
jne
push
sub
xor
cmp
xchg
adc
clc
js
jg
mov
xor
pop
iret
je
lea
push
outsl
inc
inc
imul
add
mov
jo
clc
add
push
sbb
cmp
ja
pop
pushl
call
push
or
lods
out
add
mov
sahf
mov
es
shrb
les
inc
push
mov
lock
cmc
shr
push
adc
dec
lea
dec
push
push
mov
and
jge
faddp
outsl
pop
jmp
sub
sub
in
dec
jmp
sub
mov
push
sub
in
cmp
push
mov
add
mov
data16
inc
adc
dec
cmp
adc
xor
mov
add
or
push
mov
daa
lock
jge
cmp
dec
push
or
mov
pop
push
in
dec
jecxz
repz
fsubs
add
dec
jg
out
xchg
cmp
ss
add
les
lds
in
and
dec
shll
push
pop
mov
mov
cwtl
inc
push
cmpsb
mov
mov
sub
mov
fdivrs
push
fstps
leave
and
push
push
out
cmp
filds
mov
adc
fdivrp
sahf
test
aaa
enter
testl
dec
mov
mov
js
or
scas
xlat
push
dec
cmp
punpckhdq
xchg
or
iret
in
or
push
xor
div
pop
xchg
adc
loop
pop
pop
fldenv
neg
pop
push
sbb
mov
mov
push
inc
cs
mov
jle
cmpl
jne
pushl
ja
loopne
jnp
sbb
push
push
int
push
adc
xchg
cwtl
popf
fnstenv
cld
adc
loop
dec
dec
jns
test
dec
fisttpll
add
jmp
insl
and
int3
pop
jg
push
dec
inc
cmp
sti
je
cmp
cltd
pushf
in
pop
mov
push
sahf
pop
je
jo
jno
add
js
loopne
orl
inc
inc
lret
ja
and
and
xchg
dec
jg
add
es
xor
aas
incl
jne
movb
jmp
cmp
jecxz
les
popf
movsl
fldz
xor
xchg
cmp
enter
or
xchg
test
mov
dec
aas
mov
sahf
add
lea
cs
and
sub
test
sbb
lock
jge
loop
test
and
test
data16
fimull
popf
sub
mov
mov
push
dec
or
adcb
cwtl
pop
lods
push
fsubl
push
mov
adc
fsubrl
or
pop
cmp
iret
push
adc
enter
roll
pop
jno
notb
push
test
jl
adcb
mov
add
inc
sub
cmpsl
iret
xor
addl
mov
sbb
push
push
mov
push
push
lea
and
fwait
dec
sbb
cmp
push
pop
push
xchg
mov
call
push
lret
repz
sub
daa
push
pop
sbb
mov
xor
movsb
fistl
and
jge
push
xor
jae
int
clc
test
and
mov
jmp
cmp
std
cmc
filds
inc
pusha
fmull
mov
outsb
out
push
add
mov
aaa
movsl
add
popf
pop
mov
push
stos
xchg
cltd
cli
cmp
inc
fiadds
mov
sti
popf
out
andl
scas
mov
xchg
xor
inc
negl
popa
in
sbb
push
mov
inc
push
popa
sbb
int
mov
adc
mov
sub
xor
outsb
add
call
adc
cmpsl
ss
or
xor
or
sbb
pushf
push
mov
xlat
push
adc
lea
icebp
xchg
loopne
cmpb
xor
je
push
pop
pop
sub
pop
push
or
arpl
jne
cs
fadds
push
mov
adc
iret
enter
cmp
push
insb
repz
push
roll
push
or
xchg
sbb
xchg
popa
fmuls
push
icebp
push
ret
or
push
push
xor
call
imul
jmp
sbb
cltd
sub
push
je
push
push
jecxz
and
fadd
adcl
addl
pop
fadds
insl
xor
imul
adc
xor
dec
lret
push
adc
add
jmp
cld
aas
mov
cltd
mov
lea
push
jge
mov
dec
adc
sbb
or
clc
out
mov
add
cmp
jge
mov
int3
or
idiv
push
mov
mov
mov
outsb
lea
dec
ret
xor
idiv
cs
ds
bound
sbb
test
jg
mov
sub
cli
push
out
adc
or
mov
adc
scas
mov
sbb
add
cmc
jge
add
jmp
add
lock
sti
adc
in
or
out
mov
pop
insb
arpl
sub
mov
add
mov
je
pop
sbb
mov
dec
push
into
jp
xor
jo
mov
daa
pusha
js
mov
out
sbb
dec
fs
jl
movl
adc
test
insb
sti
test
mov
lahf
xor
lahf
movsl
negl
pushf
movb
sbb
push
mov
dec
lea
sahf
jl
int3
adc
sub
cmp
or
lcall
insb
mov
mov
fildl
mov
test
jns
faddl
xor
add
xor
rorb
out
ds
mov
sub
mov
pop
cmpsb
fcomip
mov
mov
inc
les
cmp
add
push
lods
mov
cmpb
shl
je
into
clc
fidivl
jmp
push
xchg
out
add
cli
mov
aaa
pop
mov
pop
jne
pop
pop
movb
dec
loopnew
push
dec
outsb
mov
loope
leave
xchg
jp
inc
inc
pop
mov
inc
add
cmpsl
aad
xor
shlb
ljmp
clc
lea
add
and
cmpsl
je
addr16
scas
shlb
je
mov
imul
mov
pop
and
push
pop
arpl
sbb
loopne
sub
dec
out
push
pop
pop
inc
in
push
into
pop
leave
push
cwtl
xchg
pop
js
lds
pusha
mov
sub
or
mov
add
mov
push
and
cltd
add
test
xor
sbb
fcompl
cmp
int
sbb
loope
add
fdivs
pop
iret
addr16
dec
jns
and
cmp
loopne
aaa
mov
inc
jne
sti
mov
adc
mov
push
les
jmp
jecxz
lea
punpckhdq
leave
adc
loope
fldenv
rorb
loopne
cmp
push
dec
jne
mov
lea
push
mov
push
jmp
xchg
pop
pushf
or
inc
in
lea
pop
pop
and
add
or
into
imul
or
dec
or
add
inc
cmp
adc
jnp
jle
adc
andl
pop
adc
sub
mov
or
xor
or
js
jae
add
dec
stc
push
mov
adc
popa
add
pop
enter
mov
pop
leave
add
mov
lahf
cmp
fs
and
int3
pop
push
pop
sbb
stc
into
in
out
pop
popf
addb
ret
mov
jl
mov
inc
pop
inc
ds
or
repnz
inc
push
cmp
roll
das
sbb
cmpb
inc
and
mov
adc
xor
and
pop
jno
pop
dec
adc
ss
cmp
mov
scas
cwtl
pop
lret
mov
push
add
push
mov
pop
cmpb
setb
test
rorb
xor
in
adc
je
xor
dec
adc
data16
add
or
aaa
xorb
add
je
push
fstps
insl
movsb
jmp
negl
imul
incb
push
je
dec
mov
push
adc
test
xchg
hlt
push
fwait
jno
mov
sub
add
mov
add
shrl
inc
inc
scas
sbb
push
in
adcb
int
fwait
mov
jnp
add
es
mov
mov
aaa
xor
mov
push
rolb
jmp
ficompl
add
adc
push
xor
add
inc
div
rorl
jmp
test
mov
sbb
mov
push
pop
push
add
mov
add
in
dec
and
mov
adc
or
add
pop
pop
pop
pop
adc
sbb
sub
loopne
das
inc
xor
loop
lock
into
xchg
leave
or
push
jb
addb
outsl
adcb
js
add
dec
std
jl
aam
int3
js
add
enter
lahf
add
test
and
cld
sub
xor
adc
call
lods
arpl
or
insb
orb
movsl
jge
or
mov
rorb
lock
clc
pop
repnz
repnz
push
in
enter
test
sub
xor
dec
xchg
into
stos
movsl
repnz
cmp
fmuls
add
aam
and
xor
int3
add
fidivrl
add
cwtl
add
pop
shlb
pop
xor
pop
or
mov
push
push
cltd
sub
add
or
or
in
daa
fsub
mov
mov
mov
in
push
outsb
pop
inc
enter
icebp
push
push
and
push
mov
fisttpl
pop
push
jne
xchg
xor
int3
pusha
das
lcall
push
add
push
mov
or
and
ds
jno
cmp
mov
imul
sarb
push
es
jp
push
pop
lds
push
or
push
fdivrs
dec
cmpsl
jae
add
jmp
mov
mov
inc
pop
mov
mov
add
jnp
imul
and
mov
enter
arpl
add
hlt
aad
push
push
lock
push
icebp
insl
or
and
pushl
push
shrb
lret
jmp
out
mov
xor
dec
cmp
mov
sbb
jl
aas
xchg
test
mov
pop
ficompl
mov
xorb
loop
dec
mov
jmp
dec
mov
sub
pop
dec
insb
js
push
mov
mov
lea
xor
add
xor
shlb
call
jle
sar
lcall
cmp
jge
mov
mov
mov
cmp
sbbb
jl
or
cmp
jle
call
jne
inc
mov
push
iret
add
fsubr
sbb
sarb
fcomps
adc
test
nop
mov
aam
jne
and
sbb
push
leave
shlb
enter
cld
dec
mov
cmp
in
mov
adc
in
jo
sub
inc
sete
adc
loope
dec
sbb
mov
xorb
push
xor
and
stos
push
or
popf
iret
adc
pop
popa
cmp
push
xor
push
sub
dec
out
mov
imul
push
pusha
add
mov
dec
pop
adcl
bnd
sbb
xchg
shl
dec
add
ret
jmp
ror
fdivrl
or
push
push
js
cmp
loopne
adcl
subb
jmp
sti
push
dec
lock
add
mov
xorl
rolb
sbb
xchg
into
push
insl
loope
arpl
mov
mov
mov
mov
call
cld
cmp
sub
push
pop
and
out
iret
ss
mov
jp
fadd
or
popf
sub
mov
cmp
daa
push
xchg
push
or
jbe
and
add
gs
jmp
mov
jae
add
fmuls
jb
ja
mov
jne
hlt
inc
mov
push
pop
pop
jo
mov
adc
clc
mov
pop
lods
sbb
fsubl
push
xchg
inc
sbb
and
int
or
in
repz
in
int3
arpl
call
mov
clc
xchg
daa
adc
or
shlb
push
mov
test
stos
and
in
dec
loopne
cmp
lock
sbb
insb
test
enter
or
pop
mov
xchg
jle
jge
sub
pop
in
adc
sbb
sub
das
insb
call
jne
cltd
or
or
mov
mov
pushf
je
jb
xchg
or
aaa
pop
xchg
loopne
loop
jne
mov
je
or
pop
jne
ficoml
clc
clc
sub
mov
or
cmp
sar
lock
push
inc
pop
dec
call
mov
adc
dec
clc
cmp
call
dec
orl
add
dec
dec
mov
pop
clc
lock
xchg
shlb
cmp
clc
lock
cmp
jmp
mov
hlt
mov
out
in
mulb
or
jbe
into
push
push
add
push
outsl
or
and
or
lock
mov
dec
jp
add
add
in
mul
pop
inc
or
mov
hlt
insl
inc
inc
in
jb
sub
fstpt
das
sub
lcall
pop
cbtw
add
nop
jl
loopne
or
call
lods
dec
sub
jmp
clc
stos
shrl
cmp
add
clc
sbb
sbb
pop
imul
mov
inc
call
push
xor
xor
xchg
jle,pn
cmpl
xor
push
outsb
pusha
pop
push
gs
jmp
mov
cmp
call
push
push
adc
xchg
test
mov
or
popw
in
jbe
pop
push
mov
push
in
sbb
mov
adc
pop
mov
sbb
mov
mov
inc
push
mov
add
xor
test
int3
ds
xor
push
push
fisttps
in
cmp
loopne
push
fs
add
xchg
mov
callw
push
orl
mov
daa
enter
idiv
and
rclb
jbe
mov
sbb
xor
add
push
jbe
insl
lods
idivl
cld
mov
add
push
sub
or
inc
adc
xchg
fldln2
loop
mov
ret
xchg
push
inc
pop
adc
push
push
cmp
ss
sub
add
mov
add
mov
sbb
or
sub
ja
out
jle
xchg
pop
pusha
push
setg
add
add
lock
lea
stc
in
pop
jbe
dec
sub
jge
sub
hlt
das
andl
push
mov
and
arpl
dec
xor
inc
jns
inc
xor
push
cmp
cmpsb
mov
mov
push
inc
dec
push
popf
xchg
fcoml
push
mov
stos
jb
aam
rolb
push
das
cmp
rorl
mov
rcll
or
mov
fadd
or
inc
add
push
or
and
push
sahf
add
lock
int3
jmp
mov
jp
loopne
mov
ja
fs
jae
xorb
fstpt
shlb
add
mov
adc
mov
mov
inc
insl
ljmp
add
aam
inc
sbb
xchg
inc
shr
and
push
mov
mov
inc
pop
mov
cmp
push
and
repz
dec
jnp
adc
ljmp
jns
lcall
add
jg
call
lods
xchg
daa
push
adc
push
xor
lea
in
lock
test
dec
cmp
lret
jle
mov
mov
jl,pn
jmp
lock
jg
cmp
cmp
jg
push
add
rolb
aaa
or
cltd
adcb
ss
mov
sbb
or
inc
sub
jge
cmpsl
xor
fnstenv
inc
cmp
cwtl
movl
xchg
and
loopne
jae
cmpsl
cmp
div
test
pop
dec
out
sbb
sarb
lea
sbb
or
ret
adc
push
cmpsl
xchg
fstpt
xchg
mov
jp
sub
sarl
out
add
dec
sbb
fstps
push
add
xor
in
xor
adc
sbb
mov
fistps
mov
sbb
inc
or
lcall
out
sbb
sub
add
push
cmp
aas
and
and
mov
push
pop
dec
mov
lahf
add
out
jo
stos
test
in
jo
inc
cwtl
adc
mov
or
lea
add
rolb
inc
lock
lea
sbb
test
call
jnp
test
push
setne
mov
cmp
int3
addb
dec
rorl
push
pop
dec
push
pop
lahf
cmp
mov
loopne
jecxz
add
sub
inc
xchg
add
insl
push
xchg
loop
faddl
test
lea
nop
inc
or
nop
inc
or
or
ret
not
roll
adc
or
xchg
pop
dec
sub
xchg
fs
pop
popa
fists
or
or
pop
add
sarb
pop
pop
in
and
mov
mov
testb
aaa
push
push
jp
push
xor
xor
inc
sub
jb
mov
add
mov
dec
dec
cmp
aad
adc
aas
rolb
mov
xchg
ljmp
fistl
xchg
push
addr16
fwait
cli
insl
xor
push
add
jb
dec
sbb
incl
ficoms
aas
sub
inc
xchg
adc
dec
js
pop
pop
xchg
outsl
cs
rol
mov
add
fldl
js
or
in
push
hlt
movb
jg
in
lea
loope
xorl
lret
ds
jecxz
pop
stc
sbb
fistps
xchg
mov
pop
sbb
test
js
dec
imul
dec
and
adc
subb
cmp
xor
and
push
push
test
pop
sarb
jne
mov
and
xchg
mov
dec
or
push
fldl
pusha
adc
xchg
adc
push
ret
jmp
or
xor
test
and
jg
xor
cmp
add
movsl
and
lods
mov
dec
mov
in
push
or
rcll
add
push
mov
mov
jle
xor
add
push
int3
mov
cmp
data16
js
in
movzwl
std
mov
pop
pop
mov
and
inc
or
imul
in
out
int3
lods
xor
adc
mov
adc
aam
add
stos
jno
test
inc
sti
push
roll
mov
dec
adc
push
mov
sbb
stos
push
and
mov
adc
dec
xor
add
test
test
cmpsl
push
arpl
pop
callw
add
outsl
mov
jae
loope
stos
mov
cmp
inc
add
cmpb
outsl
loop
movsb
fdivrs
fistps
test
sbb
fists
movsb
push
sbb
out
and
add
mov
mov
jbe
and
push
in
cmp
jae
adc
sbb
pushf
mov
lea
and
mov
add
or
pusha
ljmp
addb
mov
iret
pop
mov
mov
testl
lea
mov
xor
fdivr
xor
sub
xchg
adc
mov
shll
test
cmp
add
rcrl
adc
rcr
jae
fs
xor
sbb
add
in
in
jae
cmc
inc
pop
jnp
stc
dec
ja
mov
mov
aad
and
icebp
mov
add
inc
out
xchg
roll
std
mov
aam
push
cltd
push
loopne
xchg
dec
pop
mov
jmp
ss
dec
or
fs
dec
adc
inc
push
jecxz
popa
add
pop
ja
push
add
inc
and
cwtl
add
fisubl
mov
enter
push
cltd
fistl
mov
mov
and
adc
xchg
cmp
pop
insl
scas
movsb
push
hlt
add
loop
andl
and
or
mov
dec
pop
push
add
fsubrs
bound
call
xchg
cmpsl
pop
push
gs
lods
mov
inc
loop
mov
addl
int
dec
arpl
pusha
jns
mov
add
inc
mov
push
faddp
loopne
movl
fwait
xor
mov
and
int
repz
dec
orl
lock
ror
hlt
mov
xchg
pop
adc
movsb
add
notb
or
rclb
xor
push
loopne
xlat
add
enter
je
xchg
sub
repnz
inc
loopne
pop
cmp
ss
push
lds
sbb
iret
ret
jl
mov
clc
cmp
imul
and
add
shlb
shll
cmp
push
js
fidivrs
xchg
sti
rcr
loopne
mov
add
mov
pusha
pop
pop
add
dec
xchg
and
movl
scas
sub
loope
pop
jp
push
add
lds
and
push
adcb
pop
add
pop
divl
or
mov
cmp
test
push
or
jb
leave
pop
pop
or
mov
push
pop
push
cmp
push
push
in
inc
dec
hlt
je
adc
jmp
push
sbbl
push
cmp
sbb
pop
imul
push
push
adc
sbb
ret
xor
jmp
or
rol
mov
xor
jno
cld
jg
cmc
cmpl
push
push
pop
cmp
je
push
mov
mov
movsb
jno
add
test
ss
imul
or
scas
or
cwtl
data16
xchg
dec
adc
xchg
or
jns
push
inc
jo
and
push
mov
jecxz
push
fs
lea
adcb
add
mov
sbb
and
push
push
mov
push
xchg
mov
es
adc
mov
push
lods
add
icebp
fsubrl
mov
daa
int3
sub
jl
or
and
and
loope
push
mov
das
or
mov
in
dec
cltd
popf
sub
aas
mov
push
mov
das
xchg
std
xor
inc
jns,pn
in
pusha
adc
icebp
insl
sub
or
push
or
pop
push
into
int3
xor
rorb
mov
push
jno
push
push
push
mov
push
sub
das
out
add
shl
or
and
mov
sub
cs
orb
popf
call
adc
inc
cmp
pop
mov
mov
inc
jmp
movsb
subb
push
push
adc
adc
dec
fcomps
fldl
mov
out
aad
fldl
add
outsl
lea
cli
insl
fnstsw
leave
cmp
loop
ret
fcompl
mov
ljmp
leave
mov
jne
mov
mov
add
insl
pushf
inc
lea
xor
adc
fcomps
cmp
mov
movsl
js
pusha
loopne
or
mov
or
lock
or
cmpsl
jmp
add
les
fwait
testb
cwtl
or
leave
mov
mov
cmp
movsb
dec
pop
or
insl
add
xchg
gs
fsubs
aam
add
je
test
pop
sub
sbb
clc
add
jb
and
dec
xorl
or
imul
adc
jae
xchg
in
fisttpl
jge
cmp
scas
int3
lods
push
dec
adc
jg
or
dec
js
mov
int3
push
push
mov
cld
je
fbstp
daa
push
pushw
test
jbe
mov
inc
sub
mov
shlb
ljmp
push
inc
xor
xchg
sub
in
push
push
xlat
pusha
cmpb
pop
push
mov
mov
add
adc
bound
add
cli
add
push
outsl
xchg
lock
dec
hlt
rorb
mov
add
push
sub
mov
pop
lret
repz
mov
ljmp
in
lret
ds
inc
cld
push
sar
xchg
mov
xchg
xor
and
hlt
sub
loopne
es
or
js
push
jo
jno
pop
jb
sbb
push
push
jno
xchg
push
jbe
xchg
mov
or
push
jmp
xchg
push
das
pop
sub
sbbb
enter
and
clc
jl
cmp
ja
add
adc
inc
or
rcll
stos
into
cmp
les
insb
aas
cmp
xchg
clc
out
or
dec
rorl
cmp
into
rorb
mov
push
ret
xchg
das
outsb
push
add
mov
cs
pop
cmc
cmp
push
movzwl
mov
sbbb
sub
push
int3
push
inc
inc
ret
push
pop
xor
mov
cltd
sub
dec
mov
push
add
sub
push
fisttps
sub
aam
sbb
fldl
mov
xorb
inc
lock
shll
nop
mov
pop
sub
inc
arpl
mov
je
or
sub
dec
push
out
pop
sbb
lods
xchg
nop
pop
add
cmpb
push
add
add
push
ret
adc
shlb
and
data16
cmp
insb
cmpb
addr16
jmp
dec
push
cmpsl
sbb
ja
push
arpl
lods
and
mov
dec
loope
clc
je
popl
clc
ds
adc
call
loopne
stc
sub
lea
push
lea
push
inc
push
dec
inc
out
repz
push
cmpsb
imul
ret
xor
lcall
aas
push
cmpsb
dec
lret
cmp
jl
cmp
mov
hlt
int3
xor
sarl
icebp
sub
push
jle
push
add
icebp
jne
mov
int3
negl
add
shrb
add
push
mov
adc
dec
arpl
test
out
lcall
cmp
je
sub
data16
mov
push
in
fstpt
xor
add
fldenv
xchg
test
adc
push
sar
icebp
push
or
pop
jmp
jns
sbb
bound
in
pop
adc
push
mov
lahf
in
xor
arpl
fldcw
shlb
clc
fisttps
js
dec
or
in
xor
out
sub
and
insl
clc
sub
dec
xchg
fcoms
enter
xchg
or
add
dec
xchg
ret
call
pop
and
cmp
pop
ja
pop
gs
loopne
repz
xchg
and
ds
jne
les
xchg
out
lock
xchg
pop
faddl
push
sbb
stos
mov
test
adc
cmp
jl
pop
divl
or
test
add
cmp
aaa
or
xchg
ljmp
jne
fistpl
adc
lock
dec
or
test
push
bound
test
rolb
packsswb
in
mov
inc
shrl
adc
and
adc
lcall
andl
or
adc
cmp
mov
or
adcb
orb
shrl
pushf
inc
lods
mov
insb
jl
cmp
imul
sub
cmp
xchg
sub
jl
jmp
pop
xchg
sbbb
leave
add
dec
decb
data16
mov
in
fisttpll
sub
and
push
addb
or
or
fwait
dec
cmp
je
into
mov
mov
jne
fldl
pop
pop
or
loop
rclb
mov
fadds
mov
aam
pop
cmp
lods
push
stos
pop
jl
faddp
jmp
jl
ret
sbb
shlb
push
push
std
cli
jmp
mov
jno
cmp
push
inc
cmp
jae
add
push
insl
add
pop
insb
cmp
pop
pop
and
xchg
ret
cmpl
mov
fdivs
lea
js
fcmovnb
cmp
aaa
cltd
add
dec
mov
pop
cld
rorb
mov
sub
ljmp
insl
xor
jns
pop
sub
fildl
lret
mov
pop
xchg
xchg
movups
xor
jae
les
jo
jl
or
adc
inc
cmp
or
div
orl
cmp
jbe
dec
and
xchg
fsubrs
or
add
sbb
ret
hlt
insl
aad
les
push
or
dec
sub
lock
dec
sub
mov
hlt
in
test
xchg
xor
mov
cmpb
mov
lret
int
daa
lea
push
xchg
and
cltd
adc
sub
push
out
add
sbb
loopne
and
add
mov
cmp
je
shlb
sbb
and
loope
lret
pop
xchg
or
loop
mov
sti
je
mov
xchg
ret
adc
pusha
shlb
push
pop
lcall
or
xchg
xchg
testb
jl
xor
dec
rcll
mov
lahf
add
mov
sub
js
push
push
movsl
push
fisubs
dec
adc
testb
pop
push
mov
ljmp
fldenv
xor
jp
insl
popa
mov
push
in
jne
test
push
sub
jbe
xchg
sbb
neg
push
test
ret
add
and
add
js
or
out
jne
test
dec
rclb
adc
push
push
je
inc
jmp
mov
or
int
in
add
sub
pusha
mov
test
push
sbb
inc
sub
rclb
int3
and
call
lock
das
pop
sbb
aad
dec
cmpsl
movsl
xchg
ret
sbb
push
iret
mov
mov
dec
inc
outsb
test
fdivp
sub
andl
jnp
jl
add
jne
fsubs
xchg
rcrl
icebp
outsl
mov
or
adc
or
mov
mov
rclb
daa
stc
and
inc
dec
lock
add
movl
jmp
push
inc
add
mov
mov
add
movsb
movsl
roll
inc
adc
mulb
fcomps
jae
mov
cmp
sub
fs
push
cmp
lea
shrl
movsl
adc
adc
or
js
jl
xor
sbb
xor
add
stos
in
popf
xor
dec
inc
inc
inc
adc
push
add
jnp
sub
pop
jg
rcll
pop
fcompl
mov
push
pusha
aas
mov
push
or
xchg
cmp
push
mov
sub
push
je
jo
nop
inc
push
insb
push
pop
dec
in
dec
lahf
or
pop
or
nop
jmp
dec
lods
inc
idivb
leave
ret
cmp
jp
cld
loopne
mov
test
insb
or
test
push
int
test
lea
or
inc
lret
cmp
js
push
ljmp
push
std
xchg
sbb
je
orl
push
inc
mov
or
decb
movsl
sti
lea
mov
je
lret
mov
sbb
xor
jg
pop
ja
pusha
adc
cwtl
insb
xchg
add
push
xchg
push
add
xor
push
pop
gs
repnz
popf
dec
mov
rol
add
aam
sub
orl
shlb
outsb
fwait
ret
inc
push
nop
xor
rcrl
or
mov
mov
sub
stos
or
aam
adc
out
inc
xchg
cld
lea
push
rcl
and
push
shlb
pop
mov
jp
test
js
sub
ja
fcmovbe
sbb
mov
shll
or
sub
xor
add
push
jns
and
adc
movsl
sbb
push
cmp
inc
jbe
push
rcrl
ret
pop
repz
or
punpcklbw
mov
inc
repnz
mov
xlat
ljmp
xor
arpl
cld
out
cmc
inc
cmpsb
mov
sbb
inc
inc
push
xchg
or
push
lea
pop
insb
xor
mov
aas
mov
sub
push
mov
shll
in
sub
leave
lea
jg
cmp
push
adc
cltd
fldl
fmuls
mov
cld
push
dec
xor
js
ret
lea
ret
fadds
push
cmp
add
in
cmp
outsl
sbb
jae
call
xor
test
fldl
cmp
jle
sub
and
in
cmp
fnstenv
xor
in
sahf
js
push
inc
sbb
adc
dec
push
and
mov
dec
popf
add
sbb
add
lea
mov
test
iret
cltd
sbb
inc
nop
or
mov
inc
mov
loop
jg
push
jns
jns
rolb
pop
mov
dec
and
inc
or
mov
cmpsb
ficoml
ret
mov
add
icebp
and
leave
push
add
lock
test
lock
xchg
cmp
push
push
adc
iret
add
lcall
pusha
mov
push
sub
push
add
xor
aaa
daa
mov
and
popf
sbb
sbb
loopne
sub
test
xorl
popf
or
fdivr
faddp
mov
cmpb
nop
push
ret
fisttpl
pop
push
or
mov
clc
sub
rclb
aad
mov
mov
adc
stc
mov
add
dec
xor
and
std
lods
inc
rcl
jno
cmpsl
and
mov
mov
inc
iret
ret
dec
adc
into
and
mov
clc
stos
mov
jmp
push
stos
aas
adc
pop
pop
rorb
js
das
jl
outsl
cld
pushl
mov
cmpsl
mov
and
fistl
adc
add
push
push
js
lahf
mov
and
sub
inc
decb
ffree
mov
pushf
add
inc
add
push
test
push
cmp
sub
xchg
sbb
pop
fs
and
addr16
xchg
sub
adc
out
mov
xor
push
push
fildl
mov
adc
sbb
ljmp
push
aas
fwait
or
je
sub
clc
js
mov
add
mov
je
enter
xchg
cmpsl
insb
hlt
lea
and
sbb
cmp
dec
pop
mov
js
data16
jne
adc
pop
push
or
inc
cmp
add
push
imul
ror
mov
lret
and
lods
xor
sub
or
cli
mov
xor
jno
scas
sbb
and
sbbb
ret
sbb
push
les
sub
lea
xor
lods
test
jmp
add
pop
push
pusha
jo
inc
insb
pop
shll
mov
test
or
mov
pop
add
mov
outsl
imul
mov
inc
pop
adc
clc
xor
push
insl
idivb
push
cmp
jbe
inc
mov
or
std
add
xor
pop
mov
cmc
or
in
pushf
sbb
or
cmpsb
in
or
cs
sub
je
rcll
push
test
adc
insb
and
mov
nop
sahf
and
jnp
add
inc
push
pop
cmp
xchg
sub
scas
ljmp
jmp
shlb
push
xchg
ret
ss
xor
jae
jl
in
das
scas
stos
lea
push
cmp
inc
mov
test
movsb
fstl
or
sub
dec
test
inc
filds
stos
daa
jne
test
adc
jp
mov
imul
pop
ss
add
push
fucom
jae
ret
cld
outsl
mov
clc
inc
push
fwait
popf
mov
dec
or
sbb
mov
enter
pop
dec
fdivs
scas
jmp
call
test
lock
add
add
xchg
push
pop
iret
adc
adcl
test
arpl
mov
mov
and
xorl
aam
pop
shlb
dec
in
nop
and
adc
mov
ret
xor
icebp
pop
shrb
inc
push
lods
push
mov
lock
dec
shlb
xor
insl
and
sbb
fnstenv
mov
xchg
test
adc
dec
les
push
shrb
mov
xchg
enter
and
test
mov
jbe
jno
sbb
leave
xor
scas
js
inc
fdivs
test
popa
sub
test
xchg
test
and
cmpb
push
or
jb
je
mov
cmpsb
jge
sbb
or
out
jnp
orl
push
loopne
jbe
daa
or
bound
ret
inc
je
jb
push
pusha
ror
and
push
inc
pop
cmp
sahf
push
cmp
jne
lahf
movnti
cmp
add
cmp
pop
push
mov
das
or
rorb
int3
dec
sub
push
iret
adc
test
std
loopne
or
jne
cmp
push
shrb
add
and
mov
sub
lahf
cmp
insb
add
pop
mov
andl
pop
push
loop
mov
sub
add
or
sbb
cmp
into
and
aas
xor
lods
gs
cmp
pushf
adc
rorl
outsl
jle
cmp
jae
sbb
sbbb
jno
fsubr
aam
out
add
xor
pop
lea
mov
adc
pop
std
push
pop
leave
shl
loope
xchg
movsb
xor
out
add
je
pop
test
ljmp
mov
jge
cmp
dec
rclb
shrl
jecxz
dec
insb
push
push
push
cmc
repnz
mov
sub
shlb
shll
in
shlb
or
dec
xchg
mov
push
rcll
mov
movsl
jge
rorb
aam
mov
mov
mov
and
inc
adc
cwtl
flds
das
pop
xchg
sbb
loope
jmp
push
lods
stos
lods
inc
push
in
or
or
xor
mov
or
cmpsl
adc
and
xor
xchg
or
and
adc
jge
or
and
andl
mov
mov
cltd
adc
out
lcall
test
imul
sbb
fmull
jecxz
push
inc
dec
cmp
mov
insb
ljmp
add
fsubs
out
les
mov
jmp
sbb
fistps
jo
sub
sbb
fmull
xchg
pop
sbb
push
and
pusha
idivb
push
inc
xor
push
jmp
sub
aam
add
pusha
xor
sub
js
mov
push
in
test
add
ret
cmp
or
orl
repnz
add
push
out
jnp
adc
jns
sbb
inc
cmp
xlat
pop
and
mov
dec
int
in
lock
scas
pop
xlat
dec
call
jno
lea
lea
mov
in
and
adc
pushf
inc
dec
xchg
out
or
adc
jl
inc
jnp
xor
test
cmp
sub
or
jmp
ds
mov
test
lahf
and
cmp
push
andl
lea
sub
pushf
push
imul
push
lret
jbe
mov
or
mov
stc
add
adc
xorb
in
mov
test
std
or
or
xlat
add
paddusb
mov
aaa
js
std
dec
fildl
jp
cmp
je
lods
call
pop
pop
or
and
rcl
cs
rcll
int
add
xor
add
orl
aas
cmpb
lret
shlb
xchg
call
jg
enter
outsb
mov
nop
imul
cmpsl
jmp
mov
xchg
lcall
test
or
mov
add
or
pop
cmp
dec
xlat
scas
push
jle,pt
sub
popf
jb
sbb
movsl
mov
push
and
mov
sub
movl
push
pop
inc
inc
adc
cwtl
inc
mov
fbstp
movsl
mov
jmp
ret
fildll
je
xorl
jae
in
and
add
in
cmp
xlat
cmp
stos
out
call
scas
ja
jmp
aad
std
sahf
test
rcl
aam
aad
adc
les
add
cmp
test
fucomip
xor
dec
push
je
dec
jne
push
jmp
and
adc
sbb
push
cmc
lahf
nop
push
push
ficomps
jp
mov
xchg
add
rcl
push
stc
mov
sub
int3
pop
xorl
repz
ret
add
mov
lock
mov
sbb
mov
xchg
inc
mov
roll
pop
loopne
cld
xor
in
rcrl
xor
mov
mov
lea
adc
insl
or
or
loope
push
sbb
mov
pusha
ret
jmp
lea
cmp
cmp
jecxz,pn
daa
xchg
ss
pop
sub
je
mov
push
push
adc
add
sbb
nop
lock
mov
xchg
cld
add
mov
dec
inc
imul
sbb
popa
inc
sbb
inc
je
dec
test
mov
lock
sub
add
testb
filds
scas
xor
nop
shrl
ds
je
pop
rorb
lahf
add
jge,pn
adc
cmp
jg
popa
inc
int
xor
sub
outsb
lock
xor
mov
or
call
xor
sub
mov
or
push
test
cmpb
xchg
jno
mov
lcall
adc
sub
pop
dec
push
pop
mov
push
lods
adc
xchg
aaa
push
and
dec
or
cld
fisubrl
jmp
cmp
je
aaa
add
movsb
rcll
cmp
ret
dec
movsb
loopne
cld
shrl
mov
xchg
jmp
xor
adc
sti
movsb
and
negl
jo
lea
cmp
mov
fs
insb
bound
add
cmp
incl
inc
adc
xor
in
inc
fnstcw
xchg
iret
test
pop
and
jmp
adc
mov
sbb
dec
lret
jne
sbb
push
inc
inc
cmp
test
mov
pop
adc
pop
mov
mov
xor
inc
and
lret
mov
mov
xchg
nop
cld
dec
jo
inc
push
insl
inc
cltd
jbe
les
ds
test
int
inc
cmp
mov
and
movl
add
inc
adc
add
inc
imul
add
jle
push
pop
int
inc
xchg
mov
mov
adc
add
fs
mov
xchg
pop
sbb
pop
shr
outsl
movsb
ret
adc
mov
adc
mov
nop
sbb
and
ret
fdivrs
ja
jge
js
adc
mov
jno
inc
cmp
jl
add
not
inc
pop
loope
add
out
dec
add
jno
lods
lds
xor
addr16
and
mov
push
xchg
inc
jnp
test
mov
mov
adc
cli
and
mov
mov
xorl
or
dec
adc
test
mov
adc
mov
sub
push
or
push
add
ss
ficomps
aad
sub
mov
jae
jl
mov
inc
les
add
orl
mov
xchg
push
or
dec
jmp
popf
mov
inc
cmp
adcl
std
cmpb
je
push
sbb
add
popf
rcr
push
jae
outsb
xchg
pushf
xchg
or
push
sub
xor
sub
lods
sbb
push
ret
jbe
inc
adc
and
nop
or
sub
es
mov
bswap
imul
adc
fisubrl
add
mov
clc
fimull
xor
mov
jae
xchg
notb
lret
adc
loope
shr
push
lods
repnz
push
add
mov
adcb
xor
inc
dec
sbb
stos
roll
mov
cmp
bound
sbb
cltd
popf
pushf
in
push
sbb
cmpsb
mov
adc
subl
pop
out
addl
movb
adc
iret
dec
je
sarl
ficoms
mov
push
je
incl
ret
cmp
outsb
jns
mov
lcall
inc
dec
sub
aam
dec
and
dec
inc
or
js
xchg
sbb
sbb
pop
fldcw
loope
push
test
cld
inc
iret
lea
push
and
testl
mov
aas
jle
outsl
sub
dec
inc
sbb
aam
clc
sar
pop
adc
sub
xor
pop
sbb
xor
sub
outsl
ja
add
pushf
xlat
and
push
dec
push
pop
mov
dec
sub
xchg
cmp
cmp
bound
sbb
fs
push
jl
cmp
adc
daa
pop
std
or
mov
adc
mov
push
pop
cmp
ljmp
lock
xchg
mov
dec
cwtl
stos
jne,pt
ja
add
push
mov
sbb
outsl
inc
cmp
cmc
jns
xchg
fbstp
das
rcr
push
aas
lahf
cltd
in
filds
aas
es
fisubrl
cli
insb
cmp
and
cs
dec
dec
add
addb
pop
push
jle
ljmp
add
fstps
nop
cmp
movsb
sbb
roll
jo
outsb
xchg
cmp
stc
pop
aam
lgdtl
and
cmpsl
sbb
xchg
ss
and
dec
push
in
sbb
or
insl
sub
pop
andb
adc
xchg
mov
jecxz
outsb
inc
rcll
jecxz
pop
xchg
inc
fidivrs
push
out
pop
or
adc
je
mov
dec
push
xchg
adc
cmpl
addl
loopne
mov
add
and
aaa
fistps
lcall
dec
add
push
sub
psubb
in
sub
adc
push
adc
xor
or
dec
pop
add
sbb
leave
and
pop
add
push
test
pop
faddp
stc
pop
test
and
inc
push
xor
push
sti
push
loope
and
cmpsb
andl
xor
jl
dec
mov
add
arpl
jmp
pop
push
sub
aad
and
mov
pop
push
sbb
xlat
mov
adc
pushl
inc
fisubs
je
pop
ret
dec
or
ds
daa
insl
cmp
daa
sbb
jge
or
aaa
sub
push
inc
mov
jno
sbb
repz
pop
cltd
adcl
jo
cmp
sbb
xchg
or
subl
mov
sbb
and
out
leave
or
dec
sub
adc
sbb
adc
xor
xor
xor
je
mov
mov
loopne
fisubl
xor
and
xor
xchg
push
rorl
popf
add
adc
add
sub
add
ss
inc
aaa
test
sub
lock
and
cmp
int3
mov
xchg
adc
jno
mov
push
stos
test
cmp
mov
loopne
aaa
cwtl
xlat
sahf
sbb
dec
xchg
sub
mov
fnstsw
cwtl
and
add
movsb
outsl
jne
lea
std
icebp
movsl
cmp
mov
xor
mov
mov
pop
or
movsl
sarl
outsl
mov
pop
add
mov
and
push
cmp
or
adc
add
sbb
cmpsb
adc
jns
sub
pop
add
cmp
sub
push
lods
lods
inc
xor
mov
rorl
push
xchg
cmpsb
push
cmpsl
add
cmp
cmp
push
adc
idivl
mov
popf
daa
in
cmp
pop
inc
push
cmp
cmpsb
ds
outsb
adc
andl
xchg
fdivl
pop
pop
and
test
pop
out
jbe
cli
xchg
and
mov
jo
mov
mov
push
pop
cmpsl
pusha
xor
lock
or
add
push
inc
fldl
inc
pop
enter
mov
test
xor
xlat
ljmp
loopne
cmpl
xor
daa
xchg
inc
push
loop
lea
xchg
testb
repz
pop
inc
xchg
stos
shll
adc
mov
shlb
fildl
negb
push
xchg
or
cwtl
dec
dec
in
ss
test
jmp
adcb
xlat
notb
lcall
iret
xor
je
dec
push
dec
or
cmp
gs
cmpsb
js
jl
aad
test
inc
je
and
or
std
popa
mov
stc
lea
aad
lock
add
cwtl
pop
inc
jo
push
inc
or
ret
sbb
iret
outsl
insl
bound
int3
add
les
imul
pop
inc
mull
mov
lret
jb
push
or
fadds
cmp
push
pop
lods
xchg
sbb
fprem1
sbb
xchg
in
divb
mov
hlt
adc
ss
cmpsl
add
adc
cmc
and
adc
aam
pop
mov
pusha
sbbl
bswap
testl
sub
pop
in
push
cmpsb
or
pop
sbbl
ss
adc
xchg
and
mov
adc
test
hlt
cs
mov
icebp
jno
and
push
xor
imul
sub
mov
sarl
fsubp
push
cmp
rorl
push
lods
xor
mov
push
xchg
push
mov
inc
das
lds
dec
add
cmpsl
push
jo
lahf
sbb
ret
mov
movb
into
popf
sbb
jnp
mov
leave
ror
pop
fbld
sbb
sbb
push
sbb
and
inc
pop
in
xor
and
lock
and
lea
mov
inc
push
iret
pop
and
mov
ss
jne
popl
mov
and
movsb
mov
and
scas
sub
cltd
subb
push
xchg
daa
mov
rorl
sub
daa
stc
ret
mov
mov
scas
mov
sub
inc
jb
sbb
je
andb
dec
xchg
in
sbb
icebp
ficompl
insb
pop
mov
push
push
repnz
push
pop
mov
push
push
xchg
jl
fcomps
inc
imul
push
ret
sub
pop
das
and
in
test
push
jae
icebp
dec
and
mov
sub
leave
mov
dec
xorl
push
add
mov
rorb
and
xor
rcl
xor
sbb
push
push
or
lcall
push
movsb
or
lea
faddl
shlb
movsb
jns
push
adc
and
sbb
sbb
dec
xor
add
add
xor
mov
out
add
inc
push
xchg
sub
sahf
push
dec
movsl
aam
pop
cmp
or
loope
or
sbb
loope
push
in
hlt
in
xchg
ss
jp
inc
xchg
test
in
cmc
mov
repz
mov
mov
dec
cmp
mov
and
cs
cmp
in
sub
lock
sbb
mov
in
pop
xchg
icebp
insl
adc
popf
lock
add
inc
mov
outsl
and
mov
rcrb
sbb
mov
sub
pop
in
sub
mov
add
inc
add
into
fcoml
inc
or
sbb
testb
adc
or
adc
outsb
xor
sub
and
stos
jo
andb
in
sbbl
cmp
je
sbb
push
hlt
dec
xchg
icebp
push
cwtl
sub
stos
scas
movsl
rorb
icebp
fwait
sbb
pop
push
pop
push
xor
fs
andb
dec
adc
mov
adc
xor
icebp
sahf
and
aam
adc
adc
les
lmsw
imul
push
push
push
icebp
or
cmp
mov
mov
testl
sbb
inc
mov
or
mov
cmp
je
inc
xlat
adc
test
lret
nop
ret
rolb
lea
je
mov
xor
add
cwtl
cmp
icebp
mov
shll
pop
int3
movsb
imul
mov
mov
cmpsb
jmp
lret
push
inc
jmp
dec
and
inc
mov
in
xor
adc
xor
fmull
or
dec
lods
push
mov
adc
push
pop
cmpsb
xchg
add
dec
aad
push
in
sub
or
les
cmp
enter
xor
je
push
mov
xlat
xchg
xorb
or
mov
mov
add
fisttpll
or
pop
pusha
outsl
fiadds
inc
fisttps
dec
jo
push
pushl
and
sbb
cmpb
ret
shlb
push
cld
push
addb
inc
ljmp
push
inc
mov
push
repnz
out
adc
xor
mov
mov
adc
repnz
es
push
pop
mov
inc
jne
push
loopne
std
pop
mov
sarb
jge
mov
or
imul
pop
add
add
aaa
add
add
and
les
push
push
sub
xchg
push
andl
and
or
movl
add
mov
adc
movsl
out
lds
xor
imull
adc
fisubrs
lea
movsb
mov
aad
adc
xchg
cmp
je
test
push
pop
push
stos
push
push
or
xchg
xor
sarb
jns
xchg
icebp
popf
dec
push
cmp
jle
add
int3
sbb
adc
loop
mov
mov
add
mov
popa
adc
add
cltd
les
in
les
and
adc
or
sahf
cli
and
add
dec
inc
inc
in
mov
movb
rorl
addl
dec
push
inc
jmp
mov
cmp
sub
sahf
bound
xor
adc
lods
inc
fs
mov
enter
les
add
add
icebp
and
jmp
sub
pusha
pop
movsl
loope
dec
inc
mov
mov
jg
sahf
sub
mov
cmp
xor
fs
push
mov
popa
ja
inc
stos
mov
or
pop
inc
sar
repnz
enter
mov
sbb
mov
mov
xchg
rcrb
mov
mov
or
femms
data16
push
xchg
or
call
adc
sub
call
movsb
sbb
add
dec
loope
pop
push
test
or
rcrb
xchg
cmc
inc
fs
dec
in
ja
jecxz
dec
fimull
or
pop
or
loope
fldl
jp
rcrl
mov
movsl
out
inc
adc
fsub
jg
adc
cmp
jle
cld
jae
inc
add
outsb
outsb
mov
sbb
daa
cmp
andb
mov
cmp
pop
mov
pop
add
add
enter
faddl
and
adc
and
pop
mov
lret
mov
sbb
jmp
xor
lock
jno
or
int3
stc
pop
add
adc
xor
sub
stc
in
fistpl
adcb
addr16
inc
ds
inc
push
inc
dec
sub
sbbl
inc
push
les
lea
pushf
gs
xor
push
loop
out
out
add
in
movups
pop
mov
xchg
lret
stc
add
sub
add
lea
mov
jo
shr
xchg
lea
movsl
push
cwtl
movl
jp
pop
add
and
sbb
sbb
dec
and
pusha
cmp
mov
int
sub
pop
or
or
rcrb
mov
movsb
dec
lret
sti
inc
cwtl
jne
push
jmp
and
call
or
lds
push
pop
or
xor
xchg
outsb
test
push
movl
cld
jno
jge
movsb
dec
andl
dec
imul
rcrl
lea
dec
iret
inc
movsl
push
mov
pusha
in
mov
dec
out
xor
pop
rcll
or
int3
mov
icebp
adc
cld
add
sbb
add
dec
aaa
adc
daa
loopne
pop
mov
cmp
sbb
jne
inc
fs
inc
sbb
add
or
and
push
xor
jns
mov
xor
and
sub
dec
cmp
fdivrs
aaa
and
in
xor
pop
test
mov
xchg
inc
inc
mov
nop
dec
push
pop
sbb
push
push
or
cmp
add
cmp
inc
lea
sahf
pop
dec
pusha
popa
inc
ja
pop
movsl
jo
sub
call
adc
or
xor
mov
add
and
lret
popl
add
xchg
xchg
add
xor
jl
std
sbb
mov
pop
icebp
test
test
sub
mov
mov
stos
mov
mov
push
aaa
scas
cmp
shll
loopne
mov
push
mov
cli
ficomps
pop
pop
push
push
xor
dec
mov
or
mov
or
dec
sub
dec
mov
data16
je
sahf
incl
sbb
dec
imul
add
add
push
faddl
pop
add
sub
icebp
inc
cmp
mov
xor
cmp
xor
push
push
movsl
xchg
push
adc
je
sub
or
or
imul
mov
lahf
xor
dec
pop
mov
sub
xchg
pop
cmc
dec
cmp
int
xor
add
and
sub
lcall
dec
bound
push
hlt
dec
sub
dec
jmp
or
mov
sbb
loop
mov
insb
cmc
xor
data16
ja
ds
mov
dec
and
mov
test
adc
js
fbld
cmp
jge
aad
xchg
or
orb
inc
pop
adc
sub
pop
invd
mov
mov
push
lea
fisubl
xchg
loope
mov
or
test
xor
push
fsubrs
push
inc
js
fcmovu
cmp
and
and
fcmovnbe
push
imul
mov
sbb
or
or
xor
or
andl
imul
int
les
adc
fiadds
xchg
push
dec
adc
leave
clc
and
mov
jmp
test
and
add
and
pop
imul
or
xchg
jae
push
push
jnp
les
dec
repnz
or
cwtl
add
add
jle
lret
and
popl
cli
push
stos
orb
add
cld
lcall
xor
add
imul
xchg
sar
das
lret
inc
inc
push
mov
add
outsl
in
inc
cmp
cmp
icebp
movsb
sbb
dec
popa
or
xchg
ret
lods
dec
push
add
sub
push
cmpsb
mov
add
and
inc
jecxz
fstps
pop
jecxz
mov
xchg
ss
add
mov
stc
push
lcall
out
mul
and
jl
adc
sbbl
jo
out
out
xchg
subl
ret
and
xchg
out
mov
lock
call
mov
mov
cld
and
push
testl
jo
pop
lfence
addl
lea
icebp
jmp
push
cmpsl
adc
add
mov
push
mov
call
cmp
adc
mov
jo
mov
cmp
xlat
mov
cmp
dec
rcrl
lock
sbb
js
js
mov
jb
and
stos
in
xor
mov
or
cmova
out
cmpsb
lock
sub
dec
rorb
or
dec
add
rorb
inc
add
inc
jo
jbe
or
pop
xchg
push
inc
and
insb
mov
mov
mov
mov
sbb
sbb
adc
xor
pop
and
gs
mov
insl
repz
fs
add
dec
rorb
add
jae
xchg
xor
jno
sub
nop
sub
dec
cmp
dec
add
mov
clc
mov
dec
enter
fcmovbe
xchg
int
rorl
dec
jnp
mov
andb
and
sbb
cld
or
add
xchg
rcll
and
dec
add
nop
push
in
or
lods
mov
jmp
adc
test
mov
xchg
fisttpl
adc
mov
pop
rclb
push
push
rorl
iret
push
fsincos
push
loopne
sbb
sub
mov
imul
and
xchg
popf
ret
mov
nop
cltd
adc
push
dec
or
pusha
popf
adc
cmpsb
into
jo
leave
into
add
add
int3
add
or
adc
dec
cmp
pop
inc
mov
pusha
pop
push
ja
loopne
daa
xchg
xor
outsb
mov
adc
cmp
add
xchg
shl
adc
cld
mov
repnz
push
push
xor
or
lds
inc
and
xchg
and
push
jecxz
sbb
sub
adc
fnstcw
movsl
sbb
notb
mov
adc
push
adc
nop
push
stos
decl
mov
xor
sti
fldl
js
popa
add
movsbw
mov
jno
jne
lret
jbe
je
or
je
adc
fwait
sbbl
arpl
push
jae
mov
cs
cmp
sub
jnp
mov
hlt
push
inc
pop
mov
rolb
pop
dec
cmp
je
push
lret
mov
loopne
pop
js
je
lret
mov
xchg
lods
cld
adc
nop
inc
mov
pop
imul
movsl
sbb
push
xchg
sti
xor
cmpsb
mov
scas
test
jle
stc
lock
fwait
push
pop
xchg
out
cmpsb
dec
lods
repnz
cmp
xor
mov
push
rolb
adc
add
add
imul
push
xor
mov
gs
xchg
fwait
and
mov
push
sub
xchg
sbb
jns
std
lock
pop
into
gs
pop
lcall
adc
and
inc
mov
push
and
sbb
faddl
out
loop
xchg
mulb
sub
push
call
push
mov
add
test
jo
pop
in
jmp
xchg
adc
mov
ret
mov
dec
ficoml
and
hlt
and
inc
loope
add
jge
jecxz
sarl
imul
push
push
in
sub
jg
sbb
and
xor
or
xor
sbbb
pusha
and
mov
test
insb
cmc
inc
push
call
shlb
cmp
test
pop
cmp
das
push
inc
push
and
test
add
les
mov
and
ds
rcl
repz
dec
sbb
mov
aam
xor
sub
inc
push
mov
mov
lods
mov
or
adc
fcmovbe
sub
cmpsb
or
leave
daa
or
xor
mov
mov
lea
lret
dec
lcall
or
cld
cmp
out
clc
mov
adc
fmull
mov
push
pop
fsubs
pop
jae
dec
jne
push
adc
cmp
xchg
xor
in
push
push
or
daa
sub
and
mov
das
insb
movsl
and
dec
mov
sub
push
add
movl
rorl
lea
addl
xor
mov
clc
add
aas
xchg
sub
movsb
xchg
push
mov
sbb
aaa
addb
pop
les
push
mov
inc
pop
mov
inc
cmp
adc
mov
jae
jae
and
adc
adc
push
and
div
or
dec
jg
addl
mov
movl
add
cmp
test
cmp
dec
inc
pop
inc
mov
or
les
int3
shl
sbb
fs
add
sub
pop
cmp
adc
add
adc
adcb
fbstp
jo
sbb
push
sub
and
jge
fistl
mov
adc
pop
bound
xor
lods
mov
add
add
rcrl
mov
xchg
add
stos
adc
hlt
js
or
adc
push
and
cwtl
jecxz
sub
popa
aaa
dec
cmp
sub
dec
loopne
cs
clc
sub
decl
mov
add
push
push
push
inc
shlb
dec
mov
mov
pop
inc
mov
loopne
std
pop
roll
xchg
mov
push
and
cmp
inc
lret
clc
cmp
cmp
jne
mov
ret
pop
mov
xchg
lahf
int
dec
shrb
or
loope
lcall
push
sub
aaa
mov
nop
mov
das
adc
pop
add
das
mov
sub
cs
xor
cs
sbb
ds
jmp
push
sub
mov
dec
jb
js
cmp
imul
mov
xor
lcall
fidivrl
mov
add
pushf
lea
inc
add
mov
mov
lret
lods
mov
mov
xor
cmp
jle
cmp
js
rcrb
add
xor
rcll
jbe
xchg
js
cwtl
loopne
enter
adc
cmp
lcall
inc
push
rorl
mov
lods
ss
aad
dec
pop
cmp
jl
xor
pushl
xchg
push
aaa
nop
fwait
icebp
push
inc
sub
inc
out
roll
mov
inc
cmpsb
fdivs
js
pop
add
push
inc
pop
add
lock
enter
or
aaa
scas
jo
test
adc
push
xor
inc
mov
or
and
mov
dec
test
inc
mov
fwait
cmp
push
xlat
mov
leave
adc
stos
adc
mov
add
jmp
in
shll
in
mov
dec
adc
cmp
fwait
bound
stos
sti
cmp
inc
jne
inc
fdivrl
cld
clc
jo
or
jnp
add
bnd
adc
xor
roll
icebp
popf
xorb
loopne
cmp
lea
or
xchg
sbbb
ss
push
dec
pushf
xor
lods
jne
xor
push
addl
clc
jge
push
jbe
les
aaa
cmp
jle
leave
or
loop
mov
loop
pop
push
cmpsl
push
sub
mov
test
aaa
mov
cltd
jmp
push
or
dec
xchg
imul
add
mov
mov
stos
test
sbb
enter
les
insl
jne
inc
pop
aad
les
add
stos
je
jge
or
int3
mov
lods
fildll
inc
add
mov
sbb
or
add
lock
pop
xchg
pop
dec
add
sbbl
cmpsl
sub
and
adc
subl
int3
je
push
int3
pop
push
adc
add
push
loop
dec
cld
mov
push
adc
dec
cltd
je
push
xchg
push
jl
roll
add
and
inc
or
or
mov
nop
cmp
mov
inc
jbe
cmp
pop
cmp
xor
sbb
arpl
cmp
cmpsl
mov
imul
mov
and
subl
jo
dec
aas
push
add
adc
mov
ret
dec
mov
adc
cmp
lahf
popf
xchg
jp
mov
cmpsb
cmp
mov
dec
pop
or
pop
bnd
outsl
rol
jp
fst
xchg
into
add
push
lea
into
jno
push
ror
sbb
push
adc
xchg
add
loopne
cmp
andb
push
loopne
or
mov
push
test
test
sarl
push
xchg
xchg
ret
xchg
pop
adc
mov
or
fisubs
imul
add
sbb
xchg
mov
loop
out
mov
mov
mov
push
adc
leave
cmpw
sbb
cmpb
pusha
sub
push
push
cmpsb
in
mov
pop
push
idivb
add
add
sar
fadd
push
je
add
dec
test
xorb
jns
adc
pop
jns
xchg
mov
mov
mov
or
or
fimuls
inc
pop
rolb
and
mov
pusha
es
push
dec
push
xor
jl
sub
rol
jmp
and
lcall
dec
movzwl
jmp
jnp
add
pop
or
popa
enter
inc
xchg
imul
icebp
cmp
adc
les
mov
and
fistps
in
xor
outsl
sbb
xchg
add
ret
pop
push
sbb
aad
pop
sbb
cmpsl
cs
jbe
adc
rol
or
mov
add
incb
cmp
jne
jb
fs
push
push
add
call
dec
pop
push
pop
push
dec
sbb
jo
repnz
lods
inc
shl
and
in
rcll
jle
aam
lock
in
mov
les
pop
adc
sbb
loop
in
and
je
movhps
pushf
push
filds
popf
aam
jae
inc
or
or
add
addl
or
sub
fisttpll
adc
add
icebp
movsl
push
mov
and
adc
push
nop
outsb
dec
cmp
stc
add
or
sbb
cmp
fsubr
sub
mov
xor
aaa
cmpsb
push
push
or
lock
test
xchg
ret
adc
je
add
or
xor
mov
xor
mov
jns
inc
iret
mov
in
and
add
jl
push
shlb
in
add
andl
or
jo
xor
dec
or
add
adc
andl
arpl
rcrl
and
data16
dec
mov
dec
push
cmp
push
sub
cltd
ret
add
sbb
pop
lods
jb
lock
rolb
push
mov
push
pop
dec
daa
mov
pop
lock
adc
jne
jnp
das
inc
mov
and
mov
leave
andb
dec
adc
xchg
in
xchg
ret
fsubrl
cmp
push
lahf
leave
sbb
jl
rcl
pop
jne
adc
aaa
mov
inc
hlt
cs
lock
lea
push
mov
ret
out
mov
mov
mov
jne
imul
dec
movsl
ret
mov
shlb
andb
push
and
and
scas
push
pop
mov
mov
test
cmp
cmp
mov
xor
call
push
or
scas
add
xchg
clc
lcall
ja
nop
xchg
std
dec
loopne
addr16
inc
icebp
jmp
jmp
loopne
arpl
addr16
dec
cmpsb
xchg
jl
add
inc
bound
js
lock
dec
adc
ss
mov
stc
xchg
cld
push
push
mov
js
icebp
sub
inc
jle
and
push
fchs
arpl
cmpl
adc
lahf
in
sub
nop
xchg
and
in
mov
dec
jo
jecxz
dec
in
cmp
adc
and
and
adc
push
inc
punpckhwd
xor
loop
shlb
sub
sub
rclb
aaa
aas
adc
mov
pop
add
cltd
imul
sub
test
ret
pop
jbe
shlb
jo
jmp
adc
pop
jb
les
mov
sub
ljmp
pop
in
pop
or
inc
sub
cmpsl
mov
mov
push
adc
pusha
andl
and
xchg
xor
adc
inc
add
mov
fildl
add
cmp
mov
daa
add
cmpl
or
mov
adc
add
fidivrs
pop
aaa
adc
mov
out
pop
cwtl
cmp
pop
ret
mov
push
mov
dec
jle
add
dec
sub
push
or
rclb
push
adc
inc
sbb
test
sbb
inc
jmp
movsb
dec
in
sub
mov
add
fcomp
cmp
mov
dec
inc
sahf
add
inc
dec
mov
test
jae
jne
repz
and
lock
call
sbb
fcmovbe
and
sub
sbbl
test
test
pop
faddl
and
icebp
mov
inc
xchg
push
pop
cmp
jmp
mov
test
mov
test
dec
push
cli
insb
sub
lea
call
cmc
pusha
dec
and
int3
inc
ds
mov
xchg
add
loopne
loopne
pop
add
pop
jge
sti
adc
fdivl
xchg
sub
add
lea
lock
orl
dec
test
mov
push
and
into
mov
popa
pusha
sbb
inc
pop
mov
push
loopne
movsb
sbb
repz
lods
pushl
pop
movsl
aaa
add
sahf
mov
call
rcl
repz
mov
and
sub
or
jge
outsl
add
dec
adc
repz
adc
or
jmp
aam
xor
push
xor
push
sub
lock
adc
movsb
rolb
es
adc
cld
xor
pusha
jo
fnstcw
add
enter
add
fists
xchg
and
and
jno
push
arpl
or
test
add
loop
mov
jmp
add
mov
adc
add
int
sub
iret
js
adc
xor
pop
or
lea
push
push
mov
sub
add
or
les
fcoml
dec
mov
xor
pop
jae
push
lahf
mov
xor
cld
hlt
xor
and
shr
xor
adc
push
and
shrb
or
push
push
add
repz
add
cs
jb
inc
fwait
lds
and
out
pop
std
incl
mov
mov
cmp
jbe
adc
cmp
jmp
fldt
fisttpl
jg
lods
clc
repz
cmp
out
cmp
icebp
inc
pop
test
mov
add
and
pop
push
ds
push
mov
lret
mov
pusha
add
mov
dec
jo
push
xchg
sbb
xor
divl
push
addr16
js
outsb
sar
scas
clc
int3
sbb
xor
and
jmp
cmp
jne
xor
enter
sarl
fsubr
scas
jmp
ss
ret
add
or
xor
push
push
jb
cmpsl
jmp
cmp
or
aad
loopne
pushf
jne
push
push
and
cmp
js
and
mov
push
xor
seto
fwait
inc
cld
shl
or
push
mov
adc
out
fsts
sub
push
test
cmp
mov
xlat
aas
jbe
in
popa
push
sbb
shl
cmp
push
or
xor
mov
or
cmp
je
mov
xchg
cwtl
sbb
imul
mov
jp
push
lret
xor
outsl
inc
and
mov
mov
dec
addb
or
push
fadds
outsb
mov
inc
add
or
je
insb
mov
fwait
loopne
ret
jbe
inc
cmp
inc
mov
testb
stos
and
sub
dec
ror
clts
or
es
adc
adc
jne
aas
jp
repnz
adc
arpl
decb
adc
insl
mov
enter
xchg
shrb
aaa
aaa
pop
xor
test
frstor
mov
mov
test
sub
mov
leave
jae
adc
dec
xor
adc
adc
cmp
or
pop
add
mov
sub
or
outsb
sbb
repnz
cmp
loopne
xchg
mov
mov
and
push
pop
sbb
inc
dec
sbb
jae
xorl
push
and
inc
les
pusha
into
andl
dec
imul
shrl
and
adc
add
add
inc
or
lock
adc
and
xlat
movb
adc
scas
and
ret
pop
xchg
add
sbb
and
add
or
xchg
das
push
add
enter
add
or
or
ja
fisttpl
test
xlat
fiadds
sub
sub
cwtl
push
int
xchg
dec
arpl
jo
inc
push
inc
lret
lea
scas
adc
and
inc
add
scas
push
jae
jb
lods
sub
imul
and
mov
popa
add
pop
sub
push
shlb
xor
and
mov
pop
or
mov
xor
dec
enter
mov
pushf
add
daa
mov
lods
or
punpckldq
add
xchg
hlt
clc
or
pop
push
sbb
or
xor
ret
mov
arpl
push
push
dec
inc
in
movsb
xor
adc
or
test
dec
dec
mov
or
les
out
pop
mov
loop
xor
sbb
cmc
or
xchg
xor
add
sahf
push
push
inc
negb
push
adc
dec
push
lcall
or
xor
addr16
rol
add
sbb
popa
stos
nop
and
mov
push
cmp
push
stos
or
or
jle
pop
pop
sti
insl
or
or
sarl
inc
shr
push
sbb
sbb
push
ljmp
ret
cmp
adc
sbb
nop
pop
pop
add
fldt
sbb
adcb
mov
movsb
sbb
xchg
cmpb
sbb
mov
iret
add
add
sub
push
sub
pop
mov
pop
pop
cmc
push
cmpsl
pop
lea
pop
aam
adc
pop
cmpsl
cmp
iret
push
dec
fldt
cwtl
pop
inc
movsb
pop
mov
push
loope
push
jg
or
add
je
lea
sti
sub
andl
sbb
mov
add
xlat
lret
and
ret
xchg
fwait
mov
mov
dec
mov
and
loope
fildl
adcl
and
add
mov
xor
xchg
and
sbb
in
inc
je
push
es
or
mov
aad
sbb
add
xchg
inc
mov
icebp
mov
dec
dec
sub
out
ret
dec
push
stos
in
push
or
push
mov
sub
fldcw
xchg
xchg
movl
mov
lods
sub
add
cmp
dec
test
shl
in
jmp
clc
add
arpl
andl
shl
or
jb
adc
mov
gs
xor
sbbb
adc
cmp
std
gs
inc
fidivs
rorl
inc
fisttps
cmp
sbb
negb
adcb
sub
xchg
pusha
outsl
sbb
push
push
xchg
mov
mov
lea
nop
mov
lret
jne
daa
push
inc
or
inc
and
ror
adc
test
dec
and
imul
add
inc
add
push
xlat
pop
pop
or
mov
mov
aam
and
movsb
repz
rclb
andl
xchg
mov
xchg
jo
mov
or
mov
in
popa
ret
sbb
cmp
add
push
xor
inc
lcall
jo
dec
pop
push
pop
bound
out
sbb
and
sbb
mov
popa
push
pop
dec
stc
daa
pop
or
inc
adc
cmp
inc
mov
and
xor
push
call
ficomps
ret
lds
and
pop
mov
xadd
sbb
jge
push
pop
stos
push
xchg
test
dec
inc
mov
push
and
xor
push
lods
outsl
test
mov
aaa
rcll
fs
test
inc
add
sbb
lods
add
push
cmp
push
std
cwtl
pop
inc
mov
sbb
adc
adc
xor
arpl
sbb
and
es
test
rcll
test
loope
add
movzwl
add
or
sbb
insb
xor
mov
sti
and
inc
sbb
mov
or
pushl
rolb
pop
and
xchg
push
movsl
test
fdivrs
sub
daa
jne
adc
xchg
sbb
loop
sbb
or
inc
push
shlb
adc
push
loopne
cmp
insl
sbb
xchg
mov
xor
mov
pop
add
out
add
ja
xor
sub
lahf
inc
insb
insl
jg
or
xor
xlat
cltd
sarb
mov
pusha
sub
movsl
imul
rorl
out
xor
dec
push
xor
shrl
jmp
mov
add
push
mov
mov
gs
cli
add
adcb
in
cmpsb
xor
jns
es
mov
push
cmp
inc
clc
mov
sub
shll
push
jl
or
insl
pop
push
jns
adc
push
adc
add
les
outsb
inc
clc
pop
mov
ret
jno,pt
push
mov
outsl
push
jbe
pop
pop
xlat
ret
mov
mov
adc
xchg
add
mov
test
pop
jno
cmp
sub
push
outsb
xlat
or
loop
pop
das
les
pop
jae
cmp
and
pop
sub
sbb
xchg
aam
dec
mov
lods
and
ret
jae
xchg
push
cwtl
nop
aaa
test
jo
sbb
mov
inc
jo
mov
adc
nop
popa
jp
add
add
jg
adc
sbb
mov
pop
inc
pusha
push
adc
mov
andl
inc
sbb
jmp
ret
adc
mov
je
adc
scas
mov
sub
mov
enter
sub
xor
mov
icebp
push
popa
iret
push
jl
mov
sbb
and
daa
push
mov
push
inc
popa
fmull
jmp
xchg
pushf
jl
imul
jno
lods
loop
fisttps
xor
jmp
stos
mov
popa
inc
es
sbbl
fsubl
push
ss
mov
aaa
rcrl
add
xorb
loope
pop
les
mov
jle
add
daa
loop
xchg
jbe
or
dec
inc
add
loopne
jge
mov
mov
dec
sbb
push
cwtl
sahf
xchg
adc
cmp
inc
push
cmp
add
xadd
push
xchg
pop
stos
and
adc
or
jmp
jne
push
jo
jo
ret
and
xchg
push
and
pop
add
mov
adc
push
add
or
mov
test
push
push
mov
ja
mov
loope
clc
push
adc
jmp
and
rolb
sub
pop
nop
or
dec
mov
add
ss
ficomps
mov
ret
cwtl
inc
fisttps
mov
mov
outsb
in
and
nop
imul
aad
scas
add
push
dec
xchg
jmp
dec
jne
push
cmp
aad
and
ret
cmp
aas
adc
in
xchg
pushf
add
adc
adc
dec
dec
test
and
xchg
out
mov
push
sbb
inc
sti
push
or
cmp
inc
sbb
imul
sub
dec
test
ss
sub
test
sbb
add
adc
addr16
xchg
popa
shrb
lods
add
add
push
sbb
and
xor
mov
inc
mov
pop
hlt
mov
test
adc
nop
int3
xchg
out
push
or
add
cmp
jno
or
loope
popa
mov
je
sbb
adc
mov
and
xchg
push
mov
adc
mov
rorl
mov
movb
jns
add
out
and
imul
test
js
xor
inc
jl
sbb
jl
jmp
adc
sub
sbb
pusha
sbb
inc
or
fcomps
sub
inc
push
test
push
adc
inc
orb
xor
sub
test
push
mov
push
or
inc
mov
jo
pop
pushf
sub
mov
movsl
out
pop
imulb
pop
ljmp
outsb
inc
cltd
iret
and
les
enter
sbb
popa
push
mov
loopne
adc
add
lock
adcl
dec
sbb
xchg
xchg
enter
push
ss
adc
lods
sub
scas
dec
adc
scas
xchg
outsl
inc
mov
es
call
sbb
xchg
stc
loope
insb
add
add
push
pop
pop
nop
loopne
stc
jne
das
pop
xchg
mov
fcomps
jmp
add
testl
lea
or
cwtl
pop
pop
jnp
jecxz
sbb
sub
adc
in
dec
fcmove
push
add
cmp
sidtl
fdiv
mov
ret
push
pop
push
jle
cmp
xchg
mov
faddl
add
lods
jle
mov
mov
movsb
mov
or
outsl
ljmp
loope
mov
je
xchg
or
add
add
add
sub
aam
push
pop
push
push
lcall
pop
lret
cmpl
cmp
lods
inc
and
push
push
push
jo
xor
sub
sbb
mov
jl
mov
xchg
dec
addr16
cltd
push
xchg
icebp
push
fsubp
jb
mov
nop
shl
push
addr16
adc
pop
adc
fwait
movsl
subb
daa
push
add
sub
pop
aaa
or
jns
mov
test
popf
push
inc
lcall
imul
call
shl
adc
orb
mov
ds
push
iret
cmp
ficoml
movsl
cmp
psubsb
outsl
mov
inc
js
test
inc
or
xor
pop
daa
inc
inc
je
enter
cld
aas
mov
iret
push
sub
lea
push
or
sub
mov
mov
daa
adc
adc
popw
jo
and
cs
mov
ret
dec
add
test
and
mov
sbbb
adc
adc
jl
sub
push
lock
sub
flds
cmp
cmpsb
or
fadd
mov
push
inc
push
lock
xchg
subl
mov
mov
push
add
aam
push
lods
fisubs
sbb
mov
call
xchg
inc
adcl
sahf
push
je
popa
adc
adc
pop
fstpl
or
std
out
ss
push
imul
push
test
dec
sbb
push
cld
xor
cmpb
ss
test
mov
imul
push
bound
pop
loopne
arpl
stos
ljmp
js
adc
cmp
sub
lcall
push
test
shr
pop
in
adc
jne
lods
push
or
dec
xchg
or
clc
mov
adcb
cmpsl
or
test
add
pop
test
enter
push
adc
dec
cmp
jb
mov
lret
fsubrs
into
incb
adc
mov
adc
pop
adc
mov
or
inc
adc
mov
mov
fldz
and
add
and
cmp
and
pop
sti
cmpsb
add
sub
pop
xor
cmp
adcb
push
xchg
mov
inc
jmp
rolb
dec
or
push
mov
pop
mov
mov
mov
adc
aam
dec
pop
push
mov
shlb
lcall
jne
cmpsb
jmp
mov
jne
fisttpll
mov
fnstenv
leave
add
add
jnp
fsubs
jo
dec
movsl
mov
subb
call
pop
call
mov
das
sbb
cmpsw
adc
out
mov
cltd
jg
adc
add
jle
push
scas
xorl
sbb
xchg
push
jg
or
and
adc
stc
in
push
cmp
push
cmp
jle
cmp
jp
push
cmp
cmp
add
jge
cmp
mov
mov
push
add
inc
jmp
adc
clc
xchg
and
movw
std
cmc
add
mov
ljmp
sahf
lahf
dec
cs
icebp
lahf
fwait
inc
or
fs
pop
idiv
call
fbld
mov
xor
adc
adc
sub
cmp
jnp
in
test
das
subb
dec
test
jno
dec
add
add
outsb
push
push
or
mov
lea
addr16
dec
sub
orl
test
pop
push
inc
cmp
sub
dec
aaa
jnp
add
dec
movsl
or
repz
adc
or
andl
or
and
pop
pop
sti
pop
int
or
stos
xchg
cmp
push
mov
jo
lods
loope
cmp
outsl
mov
movsb
addr16
add
add
pop
fs
stos
push
insl
iret
or
shrl
rorl
pop
dec
xchg
or
pop
xlat
xor
pop
pop
pop
jns
add
and
mov
insl
or
enter
and
nop
addr16
add
or
fists
push
push
rclb
mov
inc
insl
sub
or
cld
rcrl
pop
mov
and
xchg
dec
lock
movsl
adc
fcmovnu
xchg
pushf
xchg
add
push
icebp
ficoml
data16
adc
adc
sub
adcb
mov
fs
mov
inc
dec
xchg
sbb
test
adc
sbb
dec
sub
shrl
adc
popa
sub
fistpl
push
adc
popa
cli
popa
popa
push
and
sbb
adc
inc
add
shrb
sub
lods
test
loope
sbb
and
mov
and
sbb
pushf
xor
and
sbb
sbb
dec
popa
mov
pop
push
jno
pop
cmpsb
add
test
fisubl
fwait
mov
inc
sbb
stc
add
test
lods
jns
subl
jecxz
or
jnp
sub
sub
lods
fstl
adcl
ljmp
jmp
xor
or
test
or
adc
push
test
push
mov
and
shrb
lcall
sbb
xor
cmp
jo
add
adc
dec
xor
cwtl
xchg
mov
inc
leave
adc
xor
sbb
mov
imul
aas
pop
add
pusha
add
push
shll
adc
add
xchg
sbb
ret
js
adc
test
sub
jae
push
mov
push
icebp
mov
and
jge
lret
sbb
or
adc
loope
sub
push
pop
fwait
loope
dec
push
pop
popl
insb
cwtl
or
out
inc
sahf
inc
and
ret
inc
push
and
xor
sbb
xchg
sbb
and
nop
jne
fcoml
les
xchg
or
push
sub
nop
add
aaa
mov
add
les
lea
test
and
std
sbbb
pop
leave
bound
mov
test
enter
outsl
add
orb
cmpsl
cmpsl
in
push
add
dec
jmp
cmp
add
adc
mov
dec
aaa
jb
pop
pusha
lock
ljmp
leave
xchg
pop
sbb
pop
or
push
enter
icebp
and
and
in
sub
or
pminsw
insb
loop
popf
jbe
jae
in
loop
mov
test
rclb
dec
insb
leave
sub
push
add
int
xor
xor
cmc
cmpsl
and
ja
jo,pn
sbb
jbe
and
add
dec
sar
enter
lods
ja
jns
add
insl
sub
add
add
pushf
aam
push
js
lock
push
push
clc
lret
adc
adc
test
pop
adc
gs
sbb
pop
push
popa
stos
cmp
mov
test
push
sarb
stos
popa
xchg
mov
rcll
sbb
push
add
or
into
adc
pop
fistl
add
inc
xchg
dec
leave
dec
add
dec
mov
sbb
rorb
sub
jne
pusha
js
insb
add
shll
cmp
fs
in
add
pushf
stos
sub
add
cmpsb
add
jnp
test
fnstsw
add
adc
lods
popa
addl
imul
adc
shlb
dec
in
adc
add
and
notl
adc
std
mov
xor
jg
mov
push
loopne
adc
xor
jle
jle
push
jbe
std
es
ffreep
jecxz
add
roll
adc
inc
cwtl
jl
push
pop
pushl
and
dec
dec
or
cmp
movl
dec
or
int
daa
inc
ret
xchg
inc
inc
push
pop
or
icebp
xchg
push
mov
jbe
aaa
je
mov
add
push
mov
mov
xchg
sub
in
jno
loop
andb
sbb
dec
or
xchg
fmuls
jg
jno
dec
sub
add
mov
fcompl
fnstsw
test
je
sbb
add
lahf
dec
repnz
sub
outsl
xchg
jp
sbb
dec
cmp
pop
std
dec
rcr
or
mov
fstpl
mov
push
addr16
pushf
insl
movsl
test
mov
jo
and
out
fstpt
xchg
add
and
loope
fsubrp
pop
xor
dec
push
mov
mov
repz
icebp
and
push
imul
mov
ret
and
mov
xchg
dec
jb
pop
inc
pop
sbb
add
cmpsl
lods
add
lock
pop
sbb
xor
insb
fwait
and
push
mov
inc
mov
mov
sub
dec
fiadds
movsl
jge
mov
cmpsl
push
adc
shll
ljmp
leave
mov
jge
notl
je
into
mov
dec
fs
inc
pusha
pop
and
and
insl
bound
je
xor
sub
shrl
movsl
pop
add
jnp
ja
loopne
xor
push
mov
mov
and
mov
and
fwait
aaa
cmp
sbb
mov
movsb
hlt
andl
mov
mov
adc
loopne
jnp
pop
add
cmp
xor
clc
sub
xor
push
xor
rcrb
cmp
jb
sbb
leave
shld
add
pop
add
xchg
ja
lea
push
push
mov
push
push
je
movsl
mov
push
or
add
push
leave
adc
mov
push
adc
push
push
sub
cmp
in
rorl
push
or
cli
test
push
push
mov
dec
pop
pop
fmul
test
jno
ret
and
mov
mov
pop
or
jno
insb
dec
push
mov
sti
leave
shlb
push
jne
push
push
and
ja
push
fadd
xor
nop
push
lds
sbb
xorb
inc
cmpw
jne
jmp
out
adc
inc
inc
cld
cmp
outsl
inc
loope
dec
push
push
jl
mov
fildll
aas
in
popl
sti
jg
stc
std
mov
add
or
sahf
leave
out
pop
jle
push
data16
mov
jl
push
push
push
pop
push
adc
ret
popa
aas
fidivl
mov
rolb
and
dec
or
arpl
inc
push
ds
jecxz
addb
imul
adc
add
fsubs
mov
jle
add
adcl
ret
fbld
jnp
push
jo
movb
in
in
push
out
dec
pop
and
xchg
frstor
inc
syscall
in
dec
jae
push
fwait
or
cmpsl
push
pop
pop
push
pop
imul
ret
das
lea
cmp
fiaddl
aam
adc
dec
daa
test
mov
jmp
scas
push
push
or
movsb
std
xorl
push
test
gs
in
xor
nop
ljmp
mov
fstpl
pop
addr16
adc
add
lock
adc
int
fcmovu
xchg
push
orl
int3
aaa
mov
jl
mov
or
jge
je
lret
mov
dec
add
adcl
sbb
lods
cmpsb
mov
dec
xor
add
loopne
cwtl
push
xchg
imul
adc
test
outsb
jno
stc
jo
ret
pop
add
sub
mov
ja
cs
xchg
aam
icebp
xchg
pop
lahf
add
add
jno
xor
mov
aaa
mov
mov
mov
pop
mov
add
test
pop
fcoms
pop
fisttps
sub
adc
and
les
test
push
adc
fsubr
addb
cwtl
test
repnz
cmpsl
sarl
and
inc
pop
mov
pop
add
jo
ljmp
dec
or
sti
in
call
mov
sbb
xor
cs
push
add
jne
xchg
adc
pusha
call
or
push
sbb
sub
push
pop
adc
call
sub
loopne
inc
and
ss
int
pop
test
rolb
mov
xchg
es
rol
sub
push
popa
faddl
ja
sbbb
sbb
dec
ss
shll
xor
ss
ljmp
icebp
and
xor
rclb
inc
jg
je
jg
add
add
sub
dec
je
jge
mov
add
sbb
dec
jne
sahf
pushf
mov
jmp
push
jl
mov
push
xchg
or
and
jnp
cld
addb
push
stc
cmp
push
sarl
push
mov
or
push
sub
add
push
jge
lea
lahf
fstps
push
test
jnp
push
sub
push
cmp
adc
in
cwtl
mov
jb
and
push
jl
enter
loopne
jge
add
pop
push
cmp
imul
adc
and
nop
inc
push
jns
jle
cmp
push
cmp
pop
subb
add
lahf
in
inc
mov
inc
fs
inc
push
cmp
cmp
call
sbb
enter
enter
and
or
cwtl
or
mov
lods
bound
jns
out
ror
fsubrp
iret
sarl
cld
push
arpl
sbb
iret
repz
pop
bound
cmp
repz
cmp
mov
rcr
in
out
cmp
clc
add
jns
out
and
xor
dec
pushf
dec
sahf
out
pop
jo
and
test
xchg
push
aaa
xchg
xchg
pop
cmc
stos
in
xor
ljmp
jne
add
add
xor
inc
mov
mov
pop
mov
negl
nop
es
nop
adc
push
and
push
les
adc
cmpb
orl
rol
jno
rorb
imul
xchg
popa
push
popa
add
test
sti
jo
lea
loop
lret
sub
mov
call
push
pop
stc
incl
jg
popa
add
out
fcompl
xchg
test
mov
fmull
xor
ret
add
lods
pop
add
xchg
sub
add
inc
js
xor
es
add
int3
loope
mov
and
les
jl
xlat
cs
dec
test
or
lea
shll
pop
repz
mov
loope
imul
cmpb
jge
ret
pop
push
cmp
andl
push
jp
push
add
cmpsl
scas
add
fisubs
jne
cmpsl
push
in
stc
jg
inc
add
rorb
add
imul
sub
mov
xorl
push
gs
ret
or
lds
dec
imul
xchg
or
sbb
or
call
enter
adcb
shrb
pop
and
adc
ror
xor
ret
decl
push
dec
call
in
inc
cld
movb
inc
cmp
adc
push
add
jecxz
in
add
test
pop
push
adc
xchg
mov
scas
sub
inc
push
or
mov
xchg
mov
push
sbb
xchg
cmc
push
inc
dec
lock
rcll
loope
shll
push
or
lea
mov
pusha
pusha
sahf
xor
mov
out
rcll
loopne
xor
cli
pop
nop
mov
ret
xchg
je
mov
sarb
mov
mov
xchg
mov
int3
cmc
js
pop
xor
dec
add
mov
sub
cld
inc
loop
sarb
movsb
ja
cs
popf
mov
lods
and
xor
inc
jmp
push
negl
fwait
sbb
fisubs
inc
mov
and
fisubrs
sbb
push
cs
inc
mov
xchg
adc
lcall
enter
outsl
xor
xor
xchg
jbe
cs
xor
jle
fadd
xor
icebp
xor
scas
fnsave
xor
dec
jae
jae
enter
jae
jae
insb
jo,pn
jae
jae
jl
cwtl
dec
jae
jae
test
movsb
and
push
je
push
int3
sub
xlat
cmpsb
in
ja
roll
arpl
popf
pushf
sahf
sub
mov
pop
int3
jl
mov
addb
test
addl
lret
cmp
and
test
jno
pop
rolb
test
sbb
mov
incb
out
cmp
dec
or
loop
sub
xchg
js
adc
stos
push
jbe
out
push
mov
adc
adc
decb
imul
imul
gs
add
int3
pop
and
sbb
xchg
push
mov
inc
sbb
and
mov
dec
mov
lcall
xchg
xor
and
sbb
and
fistpl
movsb
adc
iret
adc
repnz
push
adc
sahf
add
xchg
inc
xlat
int
push
sbb
lods
push
fst
and
push
mov
cmp
divb
insb
ret
pop
or
cmp
inc
adcb
rcrl
xchg
cld
enter
addl
nop
imul
cld
test
cmp
rorl
sub
xchg
subb
cmpsl
cmc
sub
cmp
pop
enter
sub
xor
movsb
push
scas
pop
dec
aas
push
sbb
and
adc
lea
test
cmp
dec
inc
in
aaa
xor
lock
or
mov
add
test
daa
cmp
in
push
inc
cmp
sbb
and
inc
add
test
push
push
dec
xorl
jo
rclb
movsb
rorb
jno
inc
push
lods
movsb
xchg
adc
adc
arpl
adc
or
inc
imul
and
adc
mov
outsl
jno
jmp
push
sub
cmpsb
into
jecxz
pusha
aaa
jb
mov
ds
lea
push
pop
dec
rclb
lcall
pop
sarb
cwtl
inc
cmp
and
mov
jl
cmp
dec
xchg
lock
inc
or
cmp
push
mov
push
xchg
ss
or
outsl
pop
lret
and
test
out
insl
mov
mov
inc
add
or
pusha
pop
dec
div
push
push
rol
push
mov
push
das
or
mov
lock
pop
add
jnp
sbb
mov
aam
stc
repz
fiaddl
jo
mov
jae
cmc
xor
movsb
aaa
sbb
loopne
stc
push
movsl
and
inc
call
and
fstl
ss
or
cmp
das
xchg
xor
push
in
into
dec
or
adc
insb
enter
sbb
lea
pop
in
je
cmp
mov
icebp
jmp
add
jns
add
enter
lods
pop
jmp
test
or
nop
xchg
cmp
cmp
call
xchg
xor
rclb
faddl
adc
adc
and
add
dec
adc
xchg
pop
loope
repz
push
fdivrl
and
loopne
stos
addl
cwtl
push
lcall
test
sbb
mov
lods
xor
push
test
enter
jb
lods
sub
dec
push
mov
rcl
push
es
mov
adc
mov
dec
add
rorb
lock
pushf
mov
mov
mov
test
and
pop
rclb
orb
lcall
push
jg
sbb
sbb
movsb
pop
push
sti
cmp
les
mov
in
in
mov
push
in
push
pushf
xchg
mov
xor
test
mov
pop
or
xor
int
or
or
pop
dec
fmull
ret
es
pusha
sub
inc
ret
or
inc
add
or
sub
inc
sbb
je
adc
js
clc
or
mov
xor
add
sub
test
jns
sahf
lret
and
push
in
cltd
mov
xchg
dec
or
cmp
jb
xor
jbe
xchg
dec
xor
cld
dec
in
dec
mov
sub
xlat
jne
cmp
add
neg
jo
mov
mov
push
test
lods
add
jecxz
rcr
and
mov
fdivrl
outsl
or
aad
push
orl
adc
push
divl
lods
or
mov
cmpsl
sbb
and
rorl
pusha
or
pop
push
mov
shr
and
test
or
or
icebp
push
xor
push
mov
into
or
and
push
push
xchg
inc
adc
xorl
adc
aaa
inc
jp
xchg
adc
mov
jecxz
mov
popf
xchg
inc
xchg
cltd
cmp
fsubrl
pop
fwait
nop
mov
shrl
and
pop
sub
xchg
in
lods
xchg
inc
inc
xchg
lods
cmp
fwait
mov
sbb
fnstcw
sbb
add
fmul
jbe
sub
sbb
rcr
enter
leave
pushl
clc
push
add
or
ror
sbb
mov
xchg
cmp
xor
mov
jae
test
pusha
inc
scas
loope
dec
nop
pop
sub
movsb
and
cltd
push
sbb
sbb
sub
roll
and
pop
push
imul
adc
stos
sub
push
fcmovu
jecxz
pop
es
pop
test
fs
dec
jnp
sub
mov
subl
es
pusha
push
sub
imul
insb
or
fdivs
jmp
movsl
pop
cs
daa
ss
mov
cmpsb
fmuls
sahf
pop
sub
dec
lods
addb
mov
adc
dec
in
pop
pushf
rcr
ret
jbe
clc
pop
inc
inc
add
popa
xor
mov
sub
das
not
insl
inc
lcall
and
xor
sub
sub
lods
dec
xor
int
push
sub
fs
and
test
dec
dec
jl
pop
and
int
xor
and
and
xor
push
nop
sbb
and
addb
mov
inc
js
and
les
aam
or
pop
rclb
sbb
add
sahf
adc
push
mov
mov
es
ret
mov
add
orl
pop
les
iret
dec
fs
pop
sbb
mov
shll
aaa
sub
movsb
push
xor
dec
dec
lods
push
icebp
fdivrs
sbb
lds
push
flds
das
inc
push
cmp
je
repz
adc
push
fmull
pop
jecxz
or
pop
pop
sub
add
add
mov
adc
xchg
sbb
aaa
sbb
pop
and
ret
push
and
data16
fistpl
enter
sbb
ljmp
popf
fisubrl
push
cwtl
insl
or
add
add
adcb
sbb
pop
roll
xorb
inc
or
and
je
cmp
popf
and
push
add
push
stos
test
lock
clc
cmp
daa
lea
mov
cs
repnz
and
mov
cmp
inc
add
add
add
pusha
enter
aam
popf
add
std
mov
mov
test
rclb
adc
cmp
xchg
dec
lods
shr
dec
imul
pop
mov
outsb
gs
mov
pop
jg
pop
cmp
jbe
mov
mov
sub
movlps
xor
fs
add
mov
rol
add
sub
jl
faddl
mov
push
adc
inc
inc
xor
repnz
sbb
sbb
fldl
lods
adc
cmp
push
mov
inc
je
mov
push
clc
and
into
hlt
loope
push
jbe
or
dec
nop
ds
and
jb
mov
jg
dec
lret
lahf
jo
rcrl
add
test
dec
imul
sub
xor
ja
aam
jp
test
pop
cmp
add
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
add
cltd
xchg
jb
jl
mov
inc
outsl
sbb
hlt
subl
or
iret
jne
add
pop
lods
inc
inc
repz
fmulp
inc
cmp
jae
inc
adc
cmp
and
je
mov
dec
rcll
pop
add
scas
in
ds
xlat
mov
push
mov
add
jne
or
xchg
lods
xchg
push
sbb
lock
inc
rorl
xor
push
sti
addl
popa
mov
mov
fcmovu
ret
jmp
or
pop
js
or
out
imul
mov
push
sub
aam
sbb
pop
push
lods
adc
mov
sub
add
adcl
xor
inc
test
sbb
sbb
dec
and
cmp
xchg
inc
je
xchg
pop
push
fcompl
pop
test
cmpsb
sbb
jecxz
and
lret
ret
dec
cmc
cwtl
test
cli
sahf
subb
stos
and
inc
add
push
sub
imul
push
jae
sti
jg
cmp
ds
jl
or
je
clc
mov
add
and
mov
add
ljmp
mov
add
pop
dec
add
or
or
pop
rclb
xchg
xchg
scas
xor
sub
ret
push
loop
push
lea
mov
adc
add
push
pop
and
push
mov
hlt
xor
pop
add
cmp
push
mov
dec
push
nop
pop
lahf
lock
dec
call
addl
mov
push
xor
imul
push
xor
pop
cmc
push
rorb
push
inc
sub
inc
lock
xor
inc
mov
cmp
popa
sti
or
je
dec
and
add
gs
push
ret
adc
std
dec
loopne
into
inc
insl
mov
or
call
js
or
lret
imul
add
sub
gs
cmpsl
fisubs
das
loop
mov
pop
add
test
fcomps
sbb
orb
add
xchg
nop
inc
cmpl
push
data16
ja
xchg
ficomps
testb
lret
out
mov
push
add
in
sbb
and
pushf
xchg
bound
adc
mov
mov
xchg
adc
in
in
pop
fsts
jnp
push
xchg
int3
and
and
loopne
mov
mov
in
outsb
xchg
test
lock
push
cs
inc
in
call
inc
or
into
and
ds
ds
ret
pop
lock
movsb
or
xor
xchg
out
or
and
loopne
mov
or
movsb
rorb
repnz
dec
loopne
lock
mov
sbb
shlb
push
pushf
add
bound
pop
adc
dec
dec
add
daa
adc
mov
pushf
add
in
and
inc
int
test
dec
push
dec
inc
lods
and
mov
or
repz
sti
inc
mov
or
clc
aas
cltd
xchg
inc
mov
or
dec
sub
dec
dec
inc
and
sub
xchg
sbbl
add
push
cmp
xchg
jno
dec
sbb
test
jecxz
mov
sbb
mov
mov
push
mov
sub
pushf
es
and
push
dec
or
sbb
fs
add
dec
xor
pop
cmpsl
in
or
lods
cmpsb
loope
xor
add
lock
pop
jecxz
sbb
push
xor
push
cmp
xor
sbb
lods
push
movsl
fst
add
mov
out
adc
addl
dec
dec
testl
test
into
sbb
mov
into
push
or
cmpb
in
xchg
pop
add
mov
add
inc
push
sbb
fbld
inc
cli
jp
pop
cmpl
cld
mov
or
int
mov
gs
call
aas
jg
rclb
out
mov
addb
add
loopne
inc
cltd
cmpsl
movsb
dec
adcb
dec
ret
imul
sbb
sbb
inc
imul
add
dec
adc
fs
ret
fldt
insb
idivb
pop
js
outsl
ljmp
enter
insl
pop
push
mov
mov
pop
enter
sbb
stc
test
pop
mov
cmp
es
xchg
mov
sbb
xor
sub
divl
and
mov
xlat
sub
adc
cmp
xchg
sbb
cmp
cmp
jo
jg
and
jne
lock
and
jmp
loopne
inc
imul
imul
sub
xor
adc
fimull
pop
fisttpll
test
imul
fs
push
dec
pop
cmp
inc
sub
xlat
push
mov
sub
popa
nop
mov
lods
xor
lea
arpl
cmp
je
sub
nop
inc
push
les
xor
push
ljmp
mov
adc
rcr
and
xor
les
cmp
int
xor
in
cmp
push
inc
sbb
mov
sarl
jae
jmp
mov
add
clc
dec
lret
test
or
mov
and
sbb
test
push
mov
dec
push
xor
jne
je
inc
into
cmp
imul
xchg
cmpb
add
sub
pusha
add
cmp
roll
adc
mov
or
mov
push
mov
cmpsb
and
sub
inc
cmpsb
notb
xor
or
mov
mov
xor
xor
mov
rclb
pop
push
lea
mov
dec
mov
mov
adc
in
rclb
dec
pop
mov
or
mov
adc
daa
hlt
or
mov
in
mov
xor
or
mov
xchg
call
lock
mov
fst
lock
mov
or
or
or
or
lods
jnp
lret
repnz
inc
std
xchg
mov
das
je
jge
out
cmp
mov
ret
into
fwait
pop
jnp
das
xchg
jb
mov
inc
xchg
fcoml
adc
idivl
cs
in
cmp
test
jne
es
loopne
clc
jb
mov
jne
jno
in
pusha
pop
push
mov
push
shl
ret
sbb
mov
add
dec
lea
inc
pop
fistpl
and
dec
mov
inc
xor
push
fnsave
sbbb
cmp
leave
pusha
sbb
addr16
sbb
or
mov
popa
imul
fcomps
repz
mov
adc
or
cli
sbb
jle
pop
leave
jp
push
cmp
dec
xor
jo
sbb
jle
test
leave
add
bound
or
inc
add
inc
or
lret
mov
dec
lods
imul
pop
add
xlat
add
sbb
inc
add
aaa
mov
in
test
push
xor
pop
ret
ret
pop
xchg
push
test
pop
xchg
push
enter
cmp
rclb
pop
in
daa
adc
popl
cmpsl
inc
data16
mov
mov
sub
aaa
adc
adc
jne
daa
bnd
repz
mov
jne
or
jne
sub
push
iret
or
push
mov
push
pop
xor
in
shll
inc
pop
mov
fcomp
xchg
aad
adc
cmpsl
or
push
lea
movl
jbe
inc
dec
cmp
inc
sbb
fildll
add
push
jl
mov
lea
fstpl
lea
push
lea
dec
jge
jne
push
dec
aaa
mov
nop
shrb
test
xchg
ret
lea
add
jl
jb
loope
insb
cmpsb
hlt
jl
push
sbb
leave
jle
dec
loope
xlat
adc
addr16
cmc
int3
imul
push
std
jae
out
add
xchg
fadd
jne
sbb
cmp
adc
in
cmp
add
adc
sub
fcom
loopne
sarb
loopne
data16
jb
adc
mov
add
jl
pop
js
jl
cmp
and
inc
imul
ret
xor
mov
inc
loopne
or
sbb
lea
adc
xchg
insl
mov
movsl
rolb
jg
pop
orl
dec
popa
cmp
pusha
test
dec
xor
test
in
sbb
mov
fs
insb
push
fs
push
jne
iret
push
repnz
enter
popa
fs
sbb
ficoml
mov
rcrb
sbb
ret
fwait
mov
mov
and
fisubrs
xchg
push
and
pop
add
or
adc
or
data16
js
mov
clc
or
add
shlb
or
fldl
rorb
int3
or
mov
or
into
inc
subl
mov
sub
sbb
filds
stos
lahf
add
dec
arpl
rcrb
and
cwtl
inc
xor
enter
loopne
movsl
jnp
push
or
cmp
jge
sub
dec
jmp
movsb
hlt
pop
imul
xchg
pushl
gs
jge
sub
sbb
or
lea
ret
add
rcrl
pushf
movsb
loope
pop
mov
aad
xchg
mov
and
in
add
push
xlat
dec
insb
xor
negl
mov
je
or
push
mov
jle
test
in
and
mov
cmpb
sbb
ds
popa
test
mov
ja
cmp
mov
call
cmpl
test
cmp
dec
das
push
hlt
mov
xchg
push
scas
mov
decl
dec
daa
cmp
pop
adc
jnp
sbb
xor
mov
cmp
sbb
and
adc
cmp
subl
and
lds
sub
xor
and
push
sub
and
scas
xchg
pop
xor
push
sbb
lcall
and
daa
adc
inc
rolb
ss
sbb
clc
sti
ja
and
cmp
dec
pop
movb
adc
and
inc
arpl
mov
daa
and
add
sub
xor
fiadds
xchg
cmp
enter
push
lea
ret
mov
sub
jo
inc
stos
popf
inc
mov
orl
push
xor
or
mov
stos
je
insb
and
imul
mov
or
ret
iret
movsb
popf
cmp
mov
andb
popf
adc
or
mov
jo
or
sbb
adc
xchg
pop
outsb
mov
js
sub
jae
jg
je
push
outsb
inc
and
add
outsl
sub
sbb
fcompl
xor
icebp
loopne
sbb
fsubl
add
jne
lock
pop
sbb
adc
in
test
add
data16
mov
xor
sub
int
mov
push
push
push
adc
add
out
jbe
rclb
and
push
les
add
or
pop
pop
dec
cmp
jne
mov
jne
jno
adc
leave
in
in
call
mov
and
sub
mov
mov
cmpsb
adc
stos
hlt
lock
mov
sbb
jge
jecxz
push
mov
push
jb
add
or
dec
inc
push
std
xor
fsubrs
add
adc
inc
je
cmp
jo
arpl
mov
rclb
dec
rorl
ficoml
adc
add
dec
int3
mov
shlb
ja
xchg
mov
mov
pop
imul
mov
pop
xor
ja
xorl
repz
push
add
pop
sub
into
aam
rcll
xchg
shlb
push
inc
addl
bnd
and
les
cmc
je
inc
les
cs
inc
loopne
push
jne
cmp
je
pop
stos
mov
dec
imul
or
jmp
sub
popf
and
or
outsb
xchg
rcll
cld
roll
xor
bound
xor
mov
adc
lret
adc
dec
ret
pusha
cmp
cltd
daa
fdiv
in
mov
test
or
test
cmp
add
ss
sbb
sub
xchg
int3
xor
dec
rcr
xor
cmp
cld
xchg
pop
pop
push
pushl
data16
jge
and
or
clc
jle
cltd
mov
rorb
jecxz
rorb
mov
orb
mov
add
sbbb
sbb
clc
push
inc
pop
or
jecxz
adc
loope
sub
mov
push
adc
subl
pop
call
push
cltd
pop
jmp
out
je
dec
xchg
jp
enter
add
push
xor
lcall
pop
or
pop
adc
jne
dec
int3
movsb
jb
xor
out
add
repz
andb
sahf
inc
pop
repz
push
fisttps
daa
add
xchg
inc
je
mov
movsl
call
scas
push
stc
push
addb
stos
cmpsb
mov
sbb
xor
or
scas
cwtl
shlb
loopne
mov
and
sbb
addr16
adc
movsl
fcmovnbe
sub
push
dec
xor
pop
test
in
add
leave
mov
add
xor
in
xchg
shlb
imul
xchg
add
add
inc
xorl
aas
mov
or
or
in
or
aas
mul
pop
add
stos
add
test
pop
lock
ret
or
les
push
lods
daa
jno
outsb
jo
adcb
and
mov
fs
cmpsb
insl
je
movsl
ja
or
jmp
or
cmp
paddw
roll
adc
rolb
dec
clc
dec
xchg
sbb
xchg
ret
add
es
clc
insb
iret
cmpsb
mov
clc
xor
ds
ret
add
cmp
jne
jae
movsbl
sbb
lcall
xor
lahf
mov
mov
jmp
cmp
mov
ds
jmp
enter
ret
incl
aas
add
add
or
jecxz
or
add
inc
cmp
jl
inc
jecxz
jmp
jge
push
mov
dec
call
loop
add
sar
add
xlat
sub
push
clc
xor
mov
xor
ss
cmp
jecxz
sbb
aas
loope
add
or
adc
adcl
out
xchg
xor
cmpsb
adc
pop
pop
sahf
or
jo
xchg
loopne
jp
sbb
push
aad
push
sub
test
mov
inc
jp
jbe
jmp
add
ret
or
mov
rolb
add
pop
adcb
rclb
add
data16
in
push
jmp
push
cmp
jl
cmpsb
jle
insb
aas
lods
test
mov
mov
jge
push
xchg
cli
js
inc
mov
andl
cli
movb
jne
cmp
ja
addb
rolb
or
repnz
jl
out
add
or
invlpg
adc
jns
jmp
test
pop
inc
cmp
and
adc
or
daa
jae
lret
inc
int
pop
push
lret
sub
fidivl
xor
in
push
xor
cmpsb
divb
stos
mov
iret
add
outsl
pop
sbb
nop
aaa
and
or
inc
data16
repnz
adc
negl
mov
jbe
pop
mov
and
add
nop
popa
test
xor
or
jecxz
pop
cmc
sbbb
jmp
dec
and
pushf
mov
cmp
push
push
aam
mov
mov
jns
cmp
outsb
pop
mov
enter
lock
push
inc
jb
add
push
push
jb
call
cld
add
push
push
sarb
dec
mov
lret
add
or
je
mov
js
jne
test
mov
inc
lods
add
pop
int3
pop
mov
dec
jns
lret
add
int3
jnp
sar
aaa
push
arpl
jle
rcr
test
sub
insb
mov
mov
loope
pop
push
in
or
lret
jl
push
adc
mov
iret
push
inc
dec
push
push
popf
ss
fdivl
dec
mov
lds
add
mov
mov
jge
mov
adc
dec
pop
mov
ret
jp
cmp
cli
and
scas
ret
mov
sbb
dec
pop
gs
push
popf
jo
shrb
push
ljmp
jbe
fisttps
add
and
dec
or
jbe
sbb
mov
shl
test
mov
add
int3
xchg
mov
das
pop
fstpl
lret
je
ja
or
dec
cld
inc
mov
addr16
cwtl
cmp
movsb
cmp
mov
and
imul
jno
enter
or
pop
aam
std
stos
xor
inc
mov
pop
dec
jnp
push
push
arpl
lds
jmp
mov
rcll
add
jo
lcall
pushf
mov
aaa
xchg
xchg
arpl
aaa
aad
loope
cmp
mov
mov
outsl
loop
jb
les
call
or
cmp
clc
sub
fldenv
shl
dec
pop
pop
shlb
or
lods
cmpsl
call
out
lret
test
and
andl
jle
mov
or
and
fidivrl
adc
or
popa
mov
fwait
jecxz
pop
mov
xchg
sub
ret
fs
aam
add
idivb
rclb
push
cs
fcoms
aam
rorb
xlat
andl
cmp
jl
cwtl
loopne
fdivrl
pop
adc
lods
jge
sub
cs
jo
sbb
cs
sub
daa
movsbl
or
add
ss
std
sub
mov
add
mov
daa
push
sub
pop
cli
mov
test
sbb
lret
movb
and
cmpsl
pop
or
cmp
cmp
rolb
mov
lcall
xchg
movl
adc
fsubrs
adc
push
dec
shlb
pop
ret
xchg
dec
push
roll
stos
pop
mov
mov
scas
and
popf
pop
lds
loope
incl
mov
enter
cld
les
ret
outsl
popa
hlt
icebp
xchg
xor
iret
popf
push
les
jge
dec
sbb
xor
dec
es
add
inc
add
cmpb
iret
mov
sub
rolb
inc
ja
push
inc
mov
xor
jecxz
pop
pop
mov
add
cmp
je
pusha
imull
xor
mov
mov
in
mov
mov
clc
pop
add
mov
xchg
inc
push
add
sub
inc
mov
lods
push
sbb
clc
inc
loop
inc
or
xchg
jl
or
mov
lahf
pop
dec
mov
mov
incb
cld
inc
xor
decl
mov
mov
inc
mov
mov
cmp
jl
dec
clc
addl
int
mov
leave
sarb
sub
push
icebp
or
cmpb
mov
mov
add
or
lods
lods
add
push
mov
nop
and
dec
nop
add
or
cld
push
leave
push
subl
cmova
adc
pop
jmp
mov
mov
fwait
test
fmull
into
in
mov
inc
xchg
stos
hlt
mov
insb
into
jecxz
les
pop
add
mov
xor
push
mov
xlat
add
test
lret
in
sbb
pusha
in
enter
in
adc
push
int3
shl
in
sub
inc
sbb
es
pop
adc
inc
sahf
and
inc
push
enter
fisubrs
and
ja
push
ret
push
push
lahf
lret
push
scas
and
inc
adc
push
xlat
mov
mov
mov
push
mov
dec
mov
popa
mov
xor
hlt
shll
xor
and
adc
xchg
add
add
dec
rorl
orl
or
mov
sbb
push
dec
pop
loop
cmp
jge
jmp
mov
sub
sub
mov
jns
add
je
iret
xchg
add
push
fwait
call
mov
roll
jg
mov
ret
lea
cmp
xor
push
pushl
cmp
jbe
mov
sbb
push
mov
push
lods
add
add
xchg
stos
and
leave
or
mov
push
sbb
divb
add
mov
and
push
ds
jo
cmp
ljmp
jl
pop
jne
push
fsubrs
pushf
insl
test
rcll
push
cmp
push
push
pushl
jmp
push
scas
jp
add
mov
rorb
sbb
test
pop
ret
and
mov
orl
daa
sbb
adc
test
mov
mov
cmp
sub
fcomps
mov
xchg
xchg
jns
jo
hlt
adc
lea
mov
xchg
push
push
xchg
dec
repz
pushf
xchg
nop
scas
add
leave
pop
or
sub
or
loopne
aad
add
cmpsb
leave
jne
into
fnsave
roll
and
mov
ljmp
inc
lea
sub
fcomps
mov
fdivl
jb
shlb
xor
add
adc
add
lahf
subl
mov
adc
int
sub
lcall
aam
loop
mov
mov
or
add
and
insb
mov
sbb
mov
scas
push
pusha
mov
jge
dec
mov
rorl
shll
out
test
jmp
push
cmc
push
cwtl
lahf
add
enter
fnstsw
sbb
call
mov
stos
cs
xor
fnstcw
adc
ss
add
in
mov
push
mov
psrlw
push
push
adcl
or
dec
fnsave
sbb
mov
xor
scas
sbb
mov
jmp
dec
scas
scas
cmp
dec
cmpl
lods
ret
shlb
stos
jle
or
add
insb
ss
scas
add
push
aam
push
or
pusha
and
add
mov
stc
mov
shr
xchg
adc
sbb
or
rdmsr
jle
out
fdivl
mov
je
jg
mov
les
aaa
sbb
jge
dec
jbe
adc
mov
xor
scas
mov
das
add
push
and
add
out
mov
mov
fcoms
dec
fwait
movl
aaa
inc
jb
idivl
push
rcl
mov
and
cmp
adc
mov
cmp
pop
fdivl
cmp
add
leave
add
or
sub
add
and
mov
sub
xlat
or
push
pop
je
add
bound
cltd
pop
or
mov
cmp
loope
xor
popf
push
pop
mov
insb
fstl
or
jl
mov
mov
sub
jge
mov
mov
sarb
xchg
pop
fbld
fsubl
fnsave
out
int3
or
jmp
push
pop
cmp
pop
aas
gs
inc
imul
lret
mov
adc
jp
aad
xor
push
jmp
ret
inc
xchg
pop
aas
jmp
push
sbb
and
mov
loopne
aas
lret
dec
or
pop
push
push
push
rolb
mov
cmpb
fcmovne
jne
push
and
cltd
push
jmp
pop
jo
add
scas
scas
push
pushl
jge
iret
shrb
cmp
pop
sub
fdivr
sahf
add
sub
cmp
pop
push
sbb
mov
cmp
pusha
mov
mov
lcall
shrb
nop
data16
and
clc
bound
xor
mov
jne
mov
orb
nop
gs
addr16
inc
pop
leave
sub
push
xchg
rcrl
or
rclb
lret
call
cmp
xchg
mov
cmp
int
jbe
sbb
adc
jo
in
push
call
cmp
sbb
push
jp
jmp
add
inc
call
mov
inc
rorb
js
rcrl
xchg
enter
sub
faddl
addb
shll
jp
testb
add
or
icebp
inc
jle
or
pop
xchg
pusha
xchg
xor
add
add
out
pusha
jo
clc
popa
repz
rcrl
out
pop
jmp
xchg
jb
cmp
mov
adcl
inc
push
leave
pop
cmp
jl
in
or
xor
cmpsb
nop
lcall
xor
lret
xor
add
xchg
lret
sbb
test
sub
daa
and
and
ds
and
xor
jge
jae
inc
mov
cmp
fbstp
pop
jmp
cmp
jge
dec
sub
icebp
into
adc
nop
pop
bound
pop
sub
xchg
addr16
fidivl
adc
or
sahf
mov
push
daa
test
dec
xor
test
arpl
add
sbb
adc
and
das
pusha
loope
movaps
xchg
or
sub
push
cs
or
sbb
addb
pop
pop
mov
movsb
mov
dec
and
rolb
xor
cmp
sub
lds
bnd
add
add
or
ss
inc
adc
mov
dec
cwtl
or
pop
pop
fsubrs
mov
pop
sub
in
sub
ja
add
lods
sarb
mov
mov
add
mov
dec
jne
mov
and
lods
dec
cmp
outsb
shlb
jne
xchg
inc
nop
cld
jg
push
xor
xchg
testl
inc
imul
sub
iret
mov
daa
pop
inc
mov
xor
movsl
mov
and
jnp
mov
pop
adc
adc
inc
adc
scas
and
jne
xchg
inc
test
lret
pop
adc
push
ret
sbb
movsl
push
adc
xchg
dec
call
icebp
popa
popa
jnp
cmp
daa
icebp
lods
jb
mov
xchg
fiaddl
inc
push
jmp
dec
jnp
push
and
test
mov
inc
mov
js
xchg
imul
movsb
ret
fisubrs
shlb
cwtl
fadds
ret
dec
push
mov
mov
mov
insl
subl
cwtl
sub
iret
adc
or
jp
or
fildll
cs
inc
rorb
imul
pop
test
inc
add
aaa
popa
pop
popa
andl
xorl
add
adc
push
stc
pushl
loope
jo
push
add
ret
iret
mov
add
popa
lahf
xchg
dec
fsubrl
and
fcompl
adc
and
jmp
lods
movsb
sub
mov
jmp
add
dec
roll
fildl
lret
or
adc
mov
sub
ret
sbb
sbbb
mov
outsb
mov
lea
iret
mov
popa
rcl
div
sbb
xchg
hlt
push
pop
les
push
push
stos
or
mov
and
push
es
inc
movsl
or
pusha
ficoms
fchs
imul
inc
cmp
jb
dec
cmp
mov
inc
inc
js
xor
aaa
popa
push
ret
imulb
cwtl
enter
and
pop
mov
lcall
mov
stos
or
pop
adc
imul
mov
loopne
stc
mov
icebp
mov
negl
lret
jmp
add
mov
fistpll
scas
mov
mov
filds
or
mov
lock
addr16
je
cmp
jne
mov
sbb
add
or
push
inc
mov
jmp
dec
mov
dec
xor
push
cmpsb
push
jmp
mulb
adc
je
testl
jnp
sbb
cld
cmp
jbe
loopne
pop
add
inc
cmp
je
sub
inc
jmp
inc
and
pop
push
xor
test
mov
cmp
cwtl
orb
clc
mov
in
inc
jo
cmp
mov
dec
sbb
add
adc
add
pushw
fadd
lods
rolb
xor
test
mov
dec
cld
inc
popf
fmuls
pop
cmp
add
sti
cmp
dec
neg
add
cmpb
bound
pop
les
clc
je
cwtl
shrl
fdivr
jb
and
insb
mov
sub
mov
out
inc
or
add
loope
xchg
push
lods
inc
cld
mov
jp
shlb
sbb
pop
mov
pop
xchg
pop
jmp
loopne
jne
inc
in
inc
stos
mov
in
xchg
mov
lds
mov
data16
je
inc
add
jae
xor
add
shrb
ror
add
shl
add
pushf
aas
xchg
movsl
addr16
sti
and
cmpsb
and
or
adc
fs
jne
xor
and
cmp
adc
sub
mov
or
push
outsb
pop
jae
mov
jmp
dec
shlb
imul
cmpsb
sub
adcb
adc
push
das
pusha
shll
call
mov
mov
mov
mov
and
cmp
mov
xor
and
es
mov
jle
sub
and
pop
or
jl
or
adc
ret
pusha
bound
mov
jbe
aam
cmp
jbe
and
out
add
clc
pop
arpl
pop
add
je,pn
test
adc
inc
jne
pop
cmp
std
sub
jb
clc
add
test
cmp
push
xor
xor
lock
jg
jae
movb
inc
sbb
sub
or
and
add
or
pop
xchg
inc
data16
mov
inc
and
push
sbb
fsubr
mov
sub
jmp
mov
push
inc
inc
popl
add
sbb
mov
pop
add
push
lcall
jbe
clc
push
cmpb
dec
pop
sahf
push
mov
rolb
jmp
loope
shlb
inc
call
aam
inc
mov
push
fcom
ret
mov
pop
push
test
es
ret
add
scas
sbb
mov
dec
mov
test
xor
loop
pop
ret
addb
sahf
mov
pop
push
imul
adc
inc
inc
xchg
mov
jg,pn
fistpll
aas
cmp
addl
and
jbe
push
push
fs
cmp
int
cli
jecxz
loopnew,pn
or
jp
test
insb
add
adc
push
mov
loop
add
push
out
add
mov
and
pop
xor
out
ds
mov
das
mov
pusha
xchg
rolb
xor
ret
xor
inc
divb
push
andl
pop
data16
xor
notl
cltd
ss
push
aaa
jp
inc
adc
daa
mov
or
test
jb
in
insl
inc
sbb
iret
ret
cmp
scas
es
pop
push
movl
push
adc
dec
or
push
cld
cmc
pushl
push
lahf
test
xorb
push
add
push
ss
sub
fucomip
adc
inc
xchg
push
mov
mov
sbb
xor
mov
xchg
pop
mov
les
test
push
cmp
popf
sub
xor
add
push
add
outsb
je
pushl
cmp
pop
ja
mov
mov
cmp
outsb
fsubr
cmovnp
mov
adcl
fisubl
roll
add
lcall
pop
psubd
push
pop
fisttps
xchg
and
mov
rcrb
cmp
and
pop
push
inc
fidivl
jl
rcrb
fbld
jbe
popf
mov
das
push
cmpl
stc
gs
add
inc
inc
fwait
cmp
movsb
or
jo
imul
mov
std
xorl
push
cmc
or
mov
push
movsl
xchg
loop
lock
add
xchg
sbb
mov
clc
pop
je
test
dec
xlat
loopne
rcll
jmp
xor
dec
inc
xor
rorl
xchg
insl
bound
sub
lods
xchg
and
push
push
dec
mov
and
cld
pop
shll
ret
or
push
fdivrs
icebp
in
clc
mov
cmpsb
mov
movq
pusha
addl
cmp
sbb
inc
push
in
mov
adc
push
or
add
sahf
sbb
mov
push
aaa
pop
adc
pop
jae
clc
push
add
cmp
push
xor
xchg
add
lods
xor
xorl
fisubrs
push
ret
or
sti
pusha
jb
loopne
mov
decl
sbb
mov
daa
pushw
push
rorb
jecxz
in
mov
mov
xchg
stos
sti
cmp
out
mov
adc
inc
jo
inc
push
add
inc
js
clc
sub
cmovb
sbb
bound
mov
push
movb
push
popf
scas
in
lock
test
xchg
addl
addb
xchg
xchg
add
rcll
rcrl
sub
jle
push
or
pop
mov
loope
fstpl
xor
or
xchg
pop
xchg
jbe
test
xor
sbb
add
ss
push
adc
sbb
and
icebp
leave
repz
faddp
jne
rol
push
loopne
inc
or
push
lea
mov
sahf
push
rcrl
sub
ficomps
cmp
add
add
xchg
and
mov
add
ds
cwtl
mov
mov
dec
push
lods
or
int3
pusha
push
cmp
push
push
lret
xchg
mov
push
jne
dec
aad
ds
cli
xor
insl
jnp
das
in
jmp
cmp
das
js
lret
dec
js
cmpl
outsb
fidivrl
andl
aas
sub
push
fildl
pop
fcmovu
inc
cs
xchg
add
push
idivl
je
fstps
cmp
pop
add
push
inc
mov
or
jne
icebp
jge
fstpl
adc
cmp
sbb
sbb
and
add
jp
add
push
outsl
cmpsl
loope
mov
push
cmpl
inc
push
out
push
shl
dec
cmp
adc
push
fs
rcll
push
mov
inc
add
adc
jnp
pop
mov
pusha
fsubr
cmc
xchg
jne
mov
icebp
cmpsl
and
fnstenv
xchg
fsubs
xchg
xor
xlat
push
mov
je
cmp
push
pop
jne
aam
insb
add
cmpsl
jne
push
cmp
imul
jne
pop
call
sbb
mov
inc
lea
scas
insl
in
jl
push
mov
in
jne
jmp
sbb
mov
outsl
fdivs
adc
loope
mov
iret
and
jne
shr
cmp
pop
lea
fldl
add
je
pop
in
xchg
arpl
subl
mov
add
je
imul
repz
jmp
pusha
mov
int
sub
movsb
push
add
sbb
sub
leave
daa
pop
test
xlat
xchg
mov
repz
sub
decb
adc
cmpl
andb
popf
shlb
xchg
mov
mov
sbb
movsl
or
fs
jo
subps
or
inc
bound
ja
sbb
pop
popa
add
and
fwait
ret
push
add
test
ret
lahf
in
add
push
jle
sbb
std
push
mov
addl
loopne
repz
movsl
aas
add
fsubs
or
inc
arpl
xor
add
xchg
pop
pop
out
push
popa
xchg
sub
loopne
adcb
xchg
xlat
push
push
push
push
cs
lret
in
pop
pop
pop
pusha
adc
pop
pusha
or
cmp
pop
jo
lea
aad
push
loopne
addb
rolb
xor
mov
mov
dec
nop
pop
js
insb
fisttps
dec
and
push
leave
clc
mov
aaa
ds
push
aas
jmp
push
les
lcall
adc
push
adc
push
add
adc
in
push
or
inc
adc
add
adc
xor
push
lahf
ljmp
stos
sub
jle
insb
or
stos
nop
decl
add
daa
mov
xor
mov
je
pop
in
xorb
ljmp
or
xor
or
xchg
js
mov
lret
cli
jp
push
push
aaa
icebp
or
or
scas
stc
sub
enter
or
dec
mov
sti
and
add
and
mov
frstor
or
test
push
pop
gs
loope
jle
lods
push
and
jbe
cmc
lods
sti
sbbb
popf
lock
insb
lods
in
push
xor
sti
es
sti
jo
or
shlb
pop
movsl
cmp
mov
pop
mov
sub
dec
or
iret
adc
popa
test
sbb
ffree
ret
xor
daa
pushf
test
lret
je
xchg
in
cld
outsl
add
push
mov
je
mov
cmp
jne
sbb
add
adc
in
mov
fimull
incl
fstps
adc
adc
xchg
inc
orb
addb
ret
jae
nop
mov
cltd
sbb
and
pop
sbb
aas
cs
pop
dec
cs
push
mov
sub
mov
sbb
pop
add
inc
adc
js
clc
std
xchg
arpl
gs
inc
fcmove
sbb
jbe
push
adc
adc
pop
je
aam
jae
popa
add
lcall
call
add
hlt
cmpsl
lock
cmp
jne
or
call
sub
cmp
inc
enter
adc
movsl
mov
sbb
nop
iret
sti
dec
mov
je
or
daa
mov
or
int3
jae
aad
dec
aas
js
bound
and
pop
mov
adc
add
incl
cmp
sbb
inc
push
push
add
push
jne
mov
lods
sub
pushw
mov
pop
mov
subb
test
mov
imul
das
cltd
hlt
cmpsb
int
cld
sti
outsb
out
cltd
mov
pusha
je
divb
push
cli
insb
adc
imul
push
inc
add
inc
adc
jne
sbb
mov
push
clc
popa
imul
mov
push
xchg
rorl
inc
hlt
add
lock
hlt
dec
cwtl
lock
je
mov
mov
outsl
add
mov
inc
mov
je
jg
hlt
cmp
ljmp
pop
mov
enter
pop
sub
xchg
lcall
and
inc
sbb
mov
iret
mov
dec
jecxz
mov
jg
popa
or
mov
and
cmp
adc
int3
push
xorb
push
sar
push
popa
xchg
or
xlat
lea
add
pop
mov
or
inc
cmpsl
jnp
pop
xchg
mov
jne
addr16
mov
cmpsb
pop
push
rclb
hlt
test
addb
stc
das
je
add
sbb
ret
stos
jle
out
adc
mov
add
pusha
scas
xchg
push
add
cld
jns
add
push
aaa
xor
lock
and
mov
sbb
fsubl
fsubl
and
test
add
or
sbb
adc
sarb
lcall
adc
pop
pusha
imul
mov
dec
pop
push
test
pusha
add
mov
je
adc
leave
and
bound
adc
add
inc
out
pop
adc
clc
jmp
sub
mov
xchg
cli
push
push
push
popa
stos
sbb
and
in
inc
rol
or
xchg
add
imul
mov
adc
and
push
add
scas
cld
add
jo
jo
sub
add
sbb
sbb
mov
orb
gs
inc
xor
xor
stos
pop
pop
sbb
dec
dec
dec
jne
loopne
and
jns
sbb
in
nop
jp
jmp
in
sbb
adc
lds
mov
shr
mov
flds
xchg
cmp
cmpl
push
adc
es
ficoms
int3
jl
out
stc
xor
inc
shlb
and
add
iret
in
fcoms
neg
inc
call
and
loopne
sbb
pop
push
shlb
jnp
xor
mov
pop
jl
repz
push
pop
mov
sub
jo
sub
adc
push
pop
out
xlat
push
insb
mov
ljmp
dec
sub
fs
or
adc
cmc
daa
dec
ret
inc
mov
sar
cmp
jl
jmp
pop
orb
and
sbb
add
gs
movsb
mov
aas
mov
add
repnz
addr16
movl
sbb
sbb
push
xchg
ror
mov
jne
push
test
imul
sbb
dec
sub
jge
and
xchg
add
or
int3
add
mov
add
cmp
push
jmp
add
push
inc
xchg
lods
dec
clc
inc
push
xor
sti
call
jns
and
inc
ds
lret
push
push
xor
adc
mov
jne
jmp
testb
push
adc
in
mov
imul
push
es
add
dec
imul
or
aas
ret
pop
pusha
dec
cmpsb
or
dec
je
xchg
loope
nopl
mov
sbb
push
or
stc
xor
mov
aas
in
sbbb
fs
sbb
call
push
cmpsl
adcl
call
push
dec
mov
rolb
sbb
lods
xchg
adc
inc
call
movsb
notb
scas
add
xlat
mov
or
inc
negl
jae
sbb
popa
pop
leave
cli
imul
stc
cmp
js
fisttps
pop
push
push
js,pn
or
icebp
jle
ja
push
inc
and
adc
push
loopne
ljmp
inc
dec
cmp
in
popf
orb
xchg
aad
mov
xor
andl
pop
jge
add
jle
jne
or
pop
xchg
mov
dec
nop
push
add
cmp
outsl
call
add
xor
mov
or
xlat
movl
inc
sub
iret
jno
ja
cmpsl
mov
add
iret
add
clc
mov
repnz
dec
inc
pop
into
cmp
inc
stos
push
movsl
or
loopne
push
pusha
xchg
mov
cmp
inc
data16
xchg
nop
add
ljmp
pop
iret
mov
mov
dec
cmp
insl
mov
sbb
pop
movsl
lock
dec
loopne
ret
and
stos
or
inc
mov
fstps
andb
pop
or
fisttps
sbb
adc
mov
and
jbe
lret
repz
xor
scas
sub
sbb
xchg
or
loopne
mov
imul
push
inc
push
mov
cld
sbb
mov
and
mov
stos
test
rcrl
shrb
or
jbe
jb
pop
scas
lods
sub
stos
sub
pop
in
adcb
lock
insb
rcll
data16
gs
ds
mov
adc
cmp
cs
subl
sub
adcb
iret
or
adc
pop
adc
fs
cmp
dec
out
pop
add
popa
adc
pop
mov
dec
sahf
dec
in
push
incl
jo
cmp
adc
jbe
push
and
jbe
jp
xlat
mov
push
pop
sbb
sbb
icebp
xchg
gs
sbb
sbb
add
mov
push
pop
cmpb
mov
and
inc
adc
iret
mov
test
adc
xchg
bound
add
push
adc
or
adc
dec
sbb
xor
das
mov
and
or
popf
and
icebp
inc
add
aam
lock
cmp
add
mov
out
gs
push
arpl
add
cmp
lock
dec
jo
dec
movsl
cmp
jnp
push
push
ret
lock
jnp
pop
sub
loope
or
repnz
mov
faddl
push
insb
out
mov
mov
pop
pop
sbb
jns
cmp
or
or
out
adc
cmp
mov
outsb
rcrl
cmp
or
dec
jge
cmpsb
dec
in
fnstsw
outsl
aaa
xor
fs
test
adc
fsubl
rorb
xchg
bound
sbb
adc
out
call
shl
das
push
jge
add
outsb
sbb
dec
xorl
idiv
or
clc
add
push
aam
xchg
and
loopne
cld
test
pop
movl
lods
xchg
dec
adcl
movsl
dec
xchg
addl
dec
cmp
or
and
inc
sbb
push
and
mov
test
orb
inc
les
or
xchg
test
ficomps
inc
sbb
fiaddl
and
fmul
mov
jp
xchg
push
insl
call
sbb
mov
and
loopne
mov
and
sub
shl
mov
fldt
inc
jo
push
dec
cli
lcall
sbb
pop
mov
mov
inc
in
mov
add
sbb
clc
jnp
inc
cmp
inc
or
xchg
fldenv
inc
inc
or
and
sbb
jbe
jbe
negb
push
enter
push
sub
mov
aam
mov
and
push
inc
jp
int
adc
adc
aas
jae
pop
loopne
xchg
scas
push
push
adc
xchg
adcl
les
sbb
xchg
inc
movsb
test
pop
mov
fstl
mov
sbb
mov
or
sbb
sbbl
push
jnp
jo
jmp
jge
adc
je
fildll
sbb
rolb
inc
cmp
int3
push
mov
pop
pop
fwait
lods
repz
push
cmpb
push
add
push
cltd
and
call
mov
data16
lock
xchg
in
lea
push
cmpl
into
push
adc
rol
and
and
or
sahf
subb
pushf
inc
push
cmpl
jne
push
mov
sbb
and
mov
insl
test
insb
and
sbb
pop
ss
pushf
dec
pop
pop
xchg
pusha
push
mov
inc
lods
add
dec
lods
or
fcmovu
push
xor
dec
push
push
lds
sti
push
xor
cmp
test
cmpsb
xchg
dec
cltd
or
shlb
xchg
jb
adcb
or
xor
and
dec
shl
pop
sub
push
movsl
push
mov
insb
or
pop
jmp
adc
push
xchg
add
jne
pusha
xchg
shll
jge
bound
jbe
sbb
and
adc
cmp
lcall
fildll
fcoms
data16
mov
mov
jbe
adc
sub
dec
test
jle
pop
add
clc
icebp
pop
mov
cmp
inc
loopne
outsb
mov
les
add
xor
jnp
pop
jbe
lret
pop
sahf
pop
cs
mov
jbe
fdivl
ret
mov
mov
push
add
data16
xchg
je
xchg
fidivrl
shll
adc
xor
and
mov
sub
mov
mov
orl
mov
cmp
jne
cmpsb
test
or
push
sbb
fsubr
adc
adcb
or
movsb
push
dec
xchg
sbb
insl
test
je
add
mov
addl
adc
and
add
les
cli
or
add
and
dec
mov
fisubrs
push
cmp
fs
and
mov
cmpl
insb
jl
jle
iret
jmp
mov
mov
cwtl
jo
faddl
mov
sbb
add
or
cltd
sbb
inc
fwait
pop
lock
jne
popa
mov
ret
jo
pop
sub
jg
movsb
cltd
cltd
xlat
push
or
mov
lahf
xor
jmp
push
mov
lcall
push
adc
ljmp
mov
jle
sbb
fs
push
js
mov
lock
sbb
mov
lods
daa
and
mov
pop
test
lods
out
aaa
cmc
jge
movsl
in
pop
mov
xchg
jne
inc
loope
adc
popf
mov
mov
push
xchg
mov
and
push
add
in
or
sbb
ret
mov
sbb
shl
or
mov
insl
adc
sub
cmp
rclb
lock
sbb
sub
add
dec
imul
pop
or
out
add
adc
dec
xor
inc
jno
pmaxsw
sarb
aaa
cmp
jb
jnp
adc
mov
inc
push
xlat
dec
add
sahf
jbe
je
mov
xor
sub
xor
or
jp
cmp
mov
push
pop
cwtl
jmp
jae
push
js
jle
ds
xchg
push
pop
mov
sub
add
out
xor
aam
dec
add
add
inc
pop
lret
cwtl
jp
xchg
lea
cmp
mov
lret
sbb
imul
add
adc
xchg
out
mov
push
sbb
jne
int3
mov
cmp
je
push
sub
mov
adc
shr
add
lods
cmp
loop
xchg
movsl
dec
adc
push
xchg
je
test
ret
imul
xor
adc
add
mov
and
popa
pusha
adc
in
out
mov
imul
ds
mov
inc
dec
cmp
rorl
outsl
sub
js
sbb
popa
pusha
sub
aas
mov
aam
mov
enter
adc
jo
xor
pop
enter
dec
es
xor
gs
adc
adc
pop
and
mov
mov
clc
push
push
pop
sub
out
cmp
inc
xor
mov
out
and
ret
add
lods
in
or
xor
test
push
or
mov
pop
stos
fwait
inc
repnz
push
inc
sub
jo
cmp
lods
mov
cmpl
sub
test
cs
mov
mov
mov
inc
and
das
jmp
cmp
jmp
add
jle
jae
cmp
bound
mov
adc
call
add
fmuls
movsb
cmpb
adc
push
in
mov
inc
xchg
movsb
stc
mov
cmp
ljmp
fists
jnp
adc
adc
sub
jo
pushf
out
or
xchg
rorb
cli
push
add
xor
add
sbb
aaa
cmpsb
pushf
imul
jne
leave
popf
dec
adc
movb
pop
mov
addl
sbb
popf
and
sbbb
add
lret
pop
inc
ss
add
lea
sti
or
xchg
repz
push
cmpsb
icebp
pop
xchg
test
jno
jne
pusha
test
dec
fdivrs
push
mov
inc
add
call
bswap
mov
addr16
test
insb
aam
jnp
mov
and
mov
inc
or
xchg
xor
push
pushf
repz
js
int3
mov
sahf
xor
dec
cmp
adc
lea
xchg
push
mov
and
cmpb
out
add
xor
mov
push
movb
xor
pop
jne
pop
into
fisubrs
sbb
mov
mov
rorl
mov
icebp
imul
mov
jge
pop
sti
push
push
cmpl
xor
jno
loope
xor
cmp
cmp
inc
jl
cmp
jg
cmc
outsl
sbb
add
test
jmp
loop
mov
xchg
add
dec
push
je
or
movsb
push
clc
sbb
cmpsl
mov
sub
mov
sbb
insl
sbb
loopne
ficompl
jge
hlt
sbb
ret
add
popa
or
jmp
add
xor
sub
sub
sbb
ret
mov
mov
mov
jb
push
add
cltd
adc
add
push
inc
scas
push
shlb
enter
push
push
add
movl
jle
or
xlat
cmp
add
mov
push
adc
pop
dec
and
popl
jl
mov
test
and
inc
push
or
mov
addl
push
movsl
lahf
insb
cmp
jge
dec
push
mov
mov
mov
push
add
jno
jl
or
int3
jno
jecxz
pop
out
fildll
es
shrb
xor
mov
lcall
mov
lea
shrb
mov
and
addr16
icebp
inc
push
or
inc
out
loope
std
call
repnz
sbbl
jae
pop
dec
jmp
add
aaa
add
mov
inc
test
rolb
push
or
into
xor
ja
push
jg
jb
add
pushf
inc
dec
adc
imul
cld
roll
push
push
mov
cmpl
push
mov
inc
mov
mov
or
sub
or
mov
or
add
dec
or
and
mov
rorl
aas
mov
push
int
inc
jmp
stos
lock
pop
std
and
mov
inc
icebp
sbb
andb
adc
inc
dec
push
pop
inc
jmp
fimuls
sbb
psubw
mov
popa
mov
sub
sub
xchg
add
jmp
mov
std
add
ret
outsb
sub
jo
mov
push
add
dec
and
pop
imul
xchg
pop
push
cmpsb
pop
adc
sbb
or
mov
cli
rcl
cmpl
pop
cmp
pop
cmp
jge
inc
fs
push
pop
xor
or
fs
push
mov
sbb
dec
fisttps
js
inc
push
imul
rclb
orl
jmp
scas
hlt
mov
jns
pop
sbb
lods
mov
mov
adc
push
stos
add
push
loop
int3
andl
lea
lods
insl
dec
inc
mov
mov
cmp
pop
insb
or
and
outsb
dec
mov
cltd
pushf
mov
roll
sub
mov
test
jecxz
xor
shll
test
inc
pusha
lahf
in
mov
push
jns
sub
orb
rcrl
daa
mov
and
adc
inc
xchg
and
adc
add
mov
mov
ljmp
pop
clc
or
dec
cmp
lcall
and
push
xor
sub
cltd
repnz
filds
mov
or
nop
xor
dec
and
pop
jmp
or
outsb
dec
cmp
out
pop
rolb
pop
add
push
jecxz
or
pop
movsb
and
dec
bound
or
lahf
mov
sbb
movsl
add
xchg
movsl
jbe
inc
cmpsl
mov
enter
loope
rcrb
stos
push
push
fmuls
push
push
aad
scas
sub
cmp
inc
js
pusha
mov
add
xor
push
dec
cld
adc
push
imul
mov
jmp
or
push
aas
repz
fs
jmp
movsl
add
adc
ret
lret
or
ret
cmp
mov
or
insb
or
push
rol
sub
je
dec
inc
xchg
ja
xor
les
notb
test
mov
pop
imul
test
rcrb
push
mov
pushf
xor
idiv
jae
lea
jmp
cmpl
sub
shll
mov
push
and
push
test
push
pop
and
aam
scas
movsl
add
mov
jmp
sbb
inc
xchg
xor
in
mov
add
sbb
inc
add
xor
dec
xor
imul
lds
cmp
sub
cld
and
push
flds
aad
lcall
ljmp
add
lret
push
inc
loopne
mov
inc
xchg
ja
mov
push
arpl
xchg
mov
add
jb
cmp
add
inc
add
fwait
sbb
scas
loopne
ja
or
dec
lods
pusha
cmp
adc
inc
inc
xchg
pop
add
xchg
pop
bnd
xchg
cmp
jnp
lea
movsb
inc
stos
xchg
test
mov
scas
out
daa
adc
cmp
dec
jo
xchg
movsb
mov
cmpsl
roll
dec
idiv
loope
cmp
xchg
mov
mov
mov
insb
cltd
jecxz
inc
push
sub
push
icebp
jl
and
push
jno
sti
push
je
cwtl
xchg
test
inc
adc
sbb
mov
loopne
in
iret
xchg
js
cmp
stc
xchg
and
sub
or
mov
cmp
pushl
xchg
test
or
fmull
pop
mov
add
in
fs
push
popw
dec
jb
outsb
int
fimuls
jmp
xor
mov
je
cmp
stos
psadbw
pop
mov
sbb
or
mov
push
addl
mov
sti
je
and
dec
adc
add
xchg
cmc
std
enter
cmp
pop
adc
add
nop
dec
sub
pop
add
je
jp
mov
mov
push
inc
mov
dec
sbb
push
pushf
or
jae
push
xchg
sbb
push
inc
outsl
adc
jl
and
sub
dec
mov
popa
or
popa
jo
adc
xlat
subb
xor
add
in
dec
xchg
testb
adc
les
ffree
jnp
push
push
adc
pop
inc
mov
mov
cmp
dec
or
or
jo
ljmp
cmp
cld
je
test
dec
mov
jns
data16
jne
mov
test
push
push
test
cmp
dec
shrl
xchg
and
cmp
addb
stos
les
pop
mov
repnz
inc
mov
mov
dec
mov
hlt
hlt
iret
popa
in
jns
or
adc
mov
or
pop
cmp
add
add
mov
cmp
call
or
inc
sbb
add
js
jle
mov
loopne
fnstenv
fadd
inc
or
mov
lret
push
cwtl
push
in
cld
fadd
dec
inc
mov
scas
out
test
scas
xlat
or
add
ljmp
inc
inc
in
pop
ljmp
pop
lock
clc
scas
lea
fadds
pop
sahf
lret
in
pop
pusha
push
xchg
adc
or
hlt
neg
sbb
and
bnd
mov
mov
push
sub
push
adc
insb
les
add
mov
add
or
add
movsl
mov
dec
out
inc
jnp
cmp
and
lock
fstpt
cmp
ret
push
je
push
dec
xchg
cmp
mov
sar
ret
rolb
jne
cmp
jbe
or
clc
in
adc
cmpsl
ret
add
jle
xor
mov
ds
data16
test
xchg
popa
jo
call
mov
orb
jno
cld
js
xchg
or
testl
mov
jp
sbb
or
int
cmp
sub
rcrl
or
scas
jne
cmp
loope
sub
pusha
or
adc
lea
adc
dec
xchg
xchg
dec
jg
xchg
push
bsr
add
adc
sbb
xor
sub
dec
rol
jo
or
pop
adc
repz
and
jo
ss
nop
loop
mov
jnp
sbb
pop
les
out
push
test
inc
bound
jno
lret
out
push
lret
xchg
mov
in
out
cmp
cmp
adc
std
mov
push
xchg
and
cmp
dec
or
fildl
das
cmp
out
mov
inc
adc
push
int
adc
mov
push
loopne
mov
cli
jae
andl
leave
ret
mov
and
or
call
pop
or
pusha
ds
jne
inc
add
push
or
lea
incb
int3
sub
cmp
lods
std
int3
cmp
enter
sbb
in
gs
jg
xor
or
cmpl
xor
xchg
push
add
xor
push
mov
loopne
pushf
out
aad
inc
adc
sbb
push
loopne
sbb
pop
xor
xor
and
clc
mov
sub
mov
mov
xor
adc
fisttps
xlat
lret
or
popa
and
mov
movl
xchg
xchg
insb
js
idivl
fistps
inc
cmp
jae
add
dec
mov
push
cmp
or
shrl
cld
push
ret
xor
sub
out
adc
and
pop
mov
xor
cmp
mov
jae
mov
nop
xchg
mov
jo
xor
pop
or
and
addr16
nopl
dec
jp
add
and
aas
dec
lock
cmp
add
or
push
js
jl
cmc
mov
xor
mov
add
xor
cmp
xchg
push
pop
push
popf
or
or
push
mov
sub
out
jb
je
sbb
push
ret
mov
ret
mov
inc
sbb
and
popa
arpl
inc
in
mov
ds
mov
je
addr16
sbb
sbb
mov
add
push
dec
mov
and
and
fstps
cld
adc
jmp
fimuls
inc
jle
cmp
mov
movsl
fsubl
pop
imul
jge
sub
jmp
jmp
packsswb
mov
je
or
xor
rcrl
xor
leave
xor
and
fcmovnb
add
jnp
movsb
mov
cmc
add
and
roll
and
lock
cmp
mov
gs
push
and
pop
xchg
mov
mov
xchg
inc
shrb
and
pop
sub
push
lea
and
or
xchg
inc
sub
dec
xor
add
jo
gs
outsl
push
and
rcr
mov
sbb
insl
je
lret
add
push
mov
outsl
push
std
clc
mov
xor
out
ret
imul
out
push
aam
add
cmp
fdivs
fsubs
popf
sbb
fsubl
sub
cld
adc
jle
dec
mov
mov
push
or
popf
popf
test
adc
mov
roll
xor
and
push
fisttps
movsb
or
pop
fdivrs
cmp
ret
fldenv
push
push
add
sbb
jecxz
pushl
dec
pop
pop
in
mov
mov
mov
mov
or
or
sub
cmp
sbb
mov
in
or
xchg
xor
sti
xor
jae
jb
mov
adc
mov
sbb
mov
jp
pop
lea
filds
sahf
add
outsb
shrl
test
sbb
add
popf
pushf
mov
or
imulb
and
mov
or
sbb
pop
je
dec
adc
loopne
xchg
push
jae
lea
ja
cmpb
sbb
aas
or
or
out
js
sub
addr16
jo
jbe
pushl
pop
xchg
add
stc
fcompl
or
push
sti
mov
add
dec
pop
mov
lea
out
sbb
sbb
push
sub
pop
or
pop
sbb
je
iret
lea
jno
cltd
fs
jae
subb
push
scas
xor
jae
leave
jmp
xchg
mov
sub
dec
and
push
iret
rorb
rclb
lods
orl
add
sbb
cmpsl
xor
jge
mov
mov
dec
xchg
xchg
xor
add
mov
imul
mov
mov
dec
insb
and
mov
dec
cmp
je
mov
push
add
rcll
jae
adc
inc
mov
sub
mov
pop
das
inc
inc
lahf
orb
sub
inc
push
lods
mov
rcl
mov
or
rdmsr
cmpl
cmp
xchg
aaa
lcall
or
mov
cmp
or
pop
adc
fisttps
mov
nop
and
jo
rorl
or
fsub
add
or
add
xor
xor
ret
sbb
insb
xchg
fs
lahf
mov
nop
testb
rol
mov
mov
mov
cli
cmp
push
lea
cmpsl
adc
dec
or
gs
addl
mov
mov
repz
out
pop
gs
cmpsl
add
add
xchg
xor
inc
and
and
movsl
lock
sbb
shrb
push
add
je
jg
iret
adc
inc
sub
inc
jmp
push
xchg
or
add
pop
jmp
les
orl
dec
add
cmp
hlt
imul
jo
jmp
or
dec
pushl
and
cmpsl
add
repnz
rol
sub
mov
mov
and
adc
js
dec
jo
jge
ret
push
jae
lea
push
sub
jne
mov
sbb
ret
push
lsl
pop
stos
filds
or
dec
pop
ret
mov
push
or
dec
ss
sub
cmc
sti
xor
sbb
jge
cmp
pusha
stos
fcompl
cmpb
xor
fnstenv
inc
jmp
push
cmp
push
jb
out
cmp
sub
popa
inc
mov
mov
lea
cmp
adc
lock
dec
mov
enter
test
mov
pop
sbbl
fdivs
sub
movsb
repnz
push
sub
out
push
sti
sbb
add
add
das
lods
mov
out
insb
testb
lods
sub
sub
testb
sub
in
lock
pop
xlat
rorl
ds
shrb
aam
jne
mov
mov
popa
rorb
or
add
out
cld
push
test
test
repnz
lea
ret
push
test
js
pop
lret
popa
sbb
xor
and
in
pop
test
jmp
push
inc
or
and
mov
test
adc
cltd
push
stc
push
setne
jp
shl
cld
or
je
xor
jge
cmp
mov
cmp
lds
inc
sub
lret
ljmp
ds
mov
jo
hlt
fimull
and
push
mov
cmp
sub
sbbl
ds
or
ret
pop
xchg
fs
ss
xor
sbb
and
clc
jne
jno
imul
push
dec
or
imul
jbe
inc
add
test
add
stc
popa
imul
out
and
imul
imul
imul
mov
add
sbb
repz
movsl
pop
dec
js
pop
pop
in
movb
inc
xchg
scas
dec
xor
sbb
inc
or
push
xchg
mov
pop
mov
inc
add
add
pop
stos
mov
clc
adc
aad
mov
gs
add
inc
or
mov
pop
cmp
xchg
jmp
test
pop
jae
push
or
inc
pop
sbb
lret
pop
pop
sbb
call
out
add
add
cmp
or
xlat
xor
cmp
add
sbb
jcxz
imul
lods
mov
nop
xor
jbe
cmp
int3
loop
ret
push
pop
jns
xor
cmpl
or
mov
scas
xor
iret
sub
sub
push
add
sbb
nop
inc
dec
sbbl
fs
shlb
inc
sbb
movsl
adc
add
adc
pop
dec
xor
adc
cmc
cmp
add
add
cmpsb
loope
lret
lods
adc
sbb
jg
pop
add
push
ds
cmc
dec
pop
push
lcall
lahf
inc
mov
mov
inc
jge
inc
pop
cs
adc
inc
arpl
push
and
mov
test
outsl
insl
pop
adc
or
mov
dec
sub
fsqrt
addr16
sbb
push
test
add
fdivs
mov
dec
xor
inc
and
out
push
mov
sbb
mov
xchg
xchg
pop
sahf
xor
mov
push
mov
cmp
push
pop
xchg
pop
mov
lahf
mov
mov
mov
lods
ret
mov
and
push
dec
ja
xchg
push
mov
test
sub
push
push
mov
add
pop
push
xor
jnp
pop
pop
pop
lea
stos
push
clc
addl
adc
jne
lds
jne
push
lea
adc
dec
cwtl
cwtl
ret
ret
push
adcb
mov
icebp
test
add
or
sti
pusha
push
pop
enter
xor
mov
inc
mov
and
sub
adc
fimuls
cmpl
dec
or
adc
adc
push
out
mov
adc
mov
push
or
add
pop
pop
loope
dec
or
push
xchg
pop
mov
lcall
sbb
bound
push
les
loopne
sub
ret
push
jp
jno
in
sub
sbb
xlat
gs
mov
or
adc
and
das
xor
adc
push
lods
jnp
dec
dec
pop
addr16
push
iret
icebp
ficomps
mov
xor
sub
jne
adc
mov
jge
jmp
mov
ss
fiaddl
pushf
inc
adc
pop
fwait
cmp
xchg
cmp
mov
adc
xchg
jno
out
jo
mov
js
push
push
or
pop
pop
and
mov
fmulp
movzwl
test
ss
inc
je
test
xchg
popf
mov
push
jo
xchg
dec
rcll
pop
push
mov
repnz
xchg
sub
or
push
cmpl
push
or
orps
aad
cmp
jmp
pop
add
or
clc
push
push
rcr
insb
cmc
fidivrs
fdivrl
sub
push
rcr
fildl
adc
pop
xchg
mov
popf
add
and
jmp
fs
push
jecxz
lock
clc
loope
xchg
movsl
je
mov
loopne
dec
inc
jb
or
js
and
sbb
adc
xor
push
fstps
fadd
mov
in
pusha
rolb
lahf
pop
mov
dec
jmp
mov
arpl
into
push
and
out
call
pop
jle
mov
inc
jl
cmp
sbb
or
and
in
or
lock
pop
mov
out
aaa
cmp
push
pop
sub
aaa
dec
ja
add
out
pop
or
hlt
inc
rdpmc
leave
inc
stos
or
mov
movsb
mov
mov
jae
insl
loope
push
movsl
daa
lods
sub
outsl
mov
jp
push
mov
icebp
mov
cld
sbb
repz
clc
nop
jae
cld
mov
addr16
push
adc
cld
js
jae
pop
ret
cmp
sti
sbb
xor
pushf
and
and
or
pop
jno
out
push
fwait
int3
jne
test
loope
rcrl
pusha
jbe
jne
mov
sub
pop
fs
push
data16
clc
popa
ds
in
cmpsl
mov
sub
mov
adcb
lods
add
and
jge
mov
add
mov
mov
mov
sarl
scas
cmp
inc
adc
mov
out
pop
jecxz
and
ds
lods
sbb
inc
mov
into
sbb
gs
mov
lea
aam
xchg
mov
mov
and
sub
jg
dec
adc
sub
pushl
sbb
lock
sub
jg
sbb
push
jl
dec
add
inc
or
mov
push
cmp
mov
mov
cmpb
lock
pop
call
ss
insl
clc
scas
dec
in
dec
bound
push
cmpsl
sub
pop
push
dec
push
cmp
pop
sbb
incb
cmp
int
mov
fwait
xchg
cmc
adc
dec
pop
aad
bound
sub
mov
push
enter
into
jmp
mov
out
push
loope
rol
sub
xor
das
add
xor
scas
push
cmp
xor
xor
and
outsl
push
xor
subps
inc
pop
adc
daa
adc
jl
mov
inc
mov
imul
popl
int3
sbb
es
es
dec
mov
lea
pop
ss
adc
sub
dec
push
sarb
mov
or
add
sub
xchg
adc
shlb
inc
add
jmp
out
sbb
add
add
inc
mov
cmp
mov
sbb
in
xor
jg
pop
test
inc
mov
fsubl
xchg
xor
mov
adc
xchg
xchg
or
push
mov
inc
scas
push
cmp
push
xchg
adc
push
mov
je
outsl
adc
imul
cmp
das
sbb
add
sub
mov
push
sub
mov
adc
ljmp
in
sbb
imul
add
mov
gs
pop
insl
push
add
cs
bswap
loope
or
inc
push
xor
loopne
jp
jo
lret
cmc
or
mov
pushl
sub
enter
sbb
lret
push
dec
rclb
cs
add
rol
push
xchg
inc
in
mov
sub
mov
lahf
ja
sbb
cmp
lcall
push
xchg
push
dec
enter
mov
push
jecxz
add
pop
inc
adc
adc
add
mulb
push
lods
pop
loop
pop
adc
and
jmp
hlt
dec
mov
popf
les
xor
test
lret
adc
pop
add
movsl
rcll
jne
and
sub
and
popf
mov
or
and
stc
shlb
xor
jno
and
jne
sub
jne
mov
push
or
jne
adcl
std
jnp
xor
add
out
movsb
ljmp
repnz
lock
fists
lahf
cmp
out
add
mov
lea
and
jo
lret
or
add
clc
pop
or
stc
sbb
or
loopne
ljmp
push
cld
or
test
push
popa
inc
add
js
jecxz
daa
dec
pop
fst
pushf
mov
rorb
push
comiss
fimuls
stc
movsb
jmp
mov
jge
push
add
xor
sarb
sub
and
in
ret
ja
push
push
cmp
fidivl
xor
test
mov
adc
les
outsl
test
js
lods
or
mov
inc
push
sbb
mov
mov
loopne
dec
scas
lcall
inc
cmp
mov
cmp
or
enter
jg
push
loop
mov
call
daa
lea
pop
mov
in
rcll
enter
cmp
push
jmp
mov
dec
sub
insl
add
lret
shll
daa
mov
in
inc
mov
jns
loop
mov
rorl
add
and
and
rclb
andb
mov
cmp
xchg
rolb
inc
jne
dec
cli
or
pop
lcall
sbb
jne
add
mov
jne
push
push
je
xor
lcall
or
sbb
outsb
test
cmp
scas
jg
add
aaa
and
adc
inc
mov
pop
scas
ficoms
and
add
cmp
je
icebp
adc
or
jne
imul
int
mov
xor
fsubs
loopne
sub
and
imul
xchg
or
cli
testb
push
pop
into
fdivrl
jl
mov
rorb
xor
cmpsl
fidivs
js
out
ficoms
sbb
in
xor
arpl
cmc
push
mov
mov
fisubl
faddl
push
test
mov
mov
orb
sub
stc
insb
cld
and
adc
or
lea
jno
adc
sub
mov
jg
aam
push
mov
adc
daa
les
ds
sbb
enter
cli
inc
xchg
jge
dec
or
fwait
sbb
xor
pop
icebp
pop
sbb
cmpb
xor
add
sbb
mov
rcll
movsl
sti
loopne
stos
shrb
sarl
jb
mov
mov
add
andb
andl
dec
dec
add
imul
cmp
push
pusha
cmpsb
imul
add
or
pop
xchg
fsubr
jo
pop
rcrl
cwtl
or
push
jo
push
sti
or
mov
pop
xchg
dec
int3
xchg
shll
xor
addr16
scas
xor
mov
repnz
out
gs
add
loopne
nop
in
jle
movb
adc
mov
sbb
mov
pop
xchg
imul
fadds
sbb
sbb
push
fs
sub
sbb
idiv
add
adc
ss
inc
sub
in
push
inc
xor
dec
out
out
add
mov
push
pop
sbb
mov
icebp
pop
push
adc
push
mov
push
jo
les
mov
sbb
sub
push
sub
pop
adc
jnp
cmp
mov
xor
adcl
inc
fcoml
xchg
mov
jne
mov
push
es
dec
lea
add
xchg
add
stos
cli
xor
cmpb
or
add
add
int3
mov
cmpsb
mov
and
sbb
sarb
mov
push
ret
pushl
dec
mov
jle
push
scas
and
std
xchg
mov
xor
aam
adc
add
negl
repz
push
lahf
jl
dec
adc
dec
and
flds
sub
jl
test
add
shl
ret
or
inc
fimull
xchg
or
and
sub
add
je
das
push
xor
dec
and
das
xorl
mov
je
sub
jne
orl
fsubrp
inc
dec
adc
imul
push
pop
xor
pop
dec
test
jmp
and
xchg
add
test
outsl
pop
xlat
or
adc
das
call
sub
fldl
sar
es
push
lds
add
jle
stc
or
repnz
out
sub
out
add
imul
mov
les
mov
pop
jmp
roll
xchg
stc
push
jne
js
in
lds
mov
ds
jne
cmp
push
jl
sbb
cmp
imul
add
fwait
jl
ja
fwait
pop
inc
sub
hlt
cld
ja
xor
dec
mov
and
cli
sahf
loopne
mov
push
mulb
lock
or
jmp
sbb
int3
cwtl
jl
adc
sbb
into
dec
add
pop
push
push
inc
cmp
shlb
popf
movsl
sbb
mov
mov
or
cli
out
fidivrs
push
adc
add
add
int3
lahf
sbb
outsb
dec
dec
and
lods
aas
add
inc
dec
push
adc
push
push
pop
jns
push
and
pop
and
mov
xor
xorl
pop
xor
fstps
bound
dec
jecxz
lcall
fisubl
cmp
sbb
sub
je
in
push
mov
mov
lock
sbb
lea
xchg
sbb
jnp
jg
bound
pushl
and
pop
out
mov
mov
adc
outsb
or
les
xchg
xchg
inc
inc
lock
lock
jne
or
cmovle
mov
je
mov
or
fs
pusha
enter
insb
insb
push
push
jo
shl
xor
pop
pop
lds
test
adc
xchg
clc
cwtl
push
xchg
imul
pop
cmp
je
popf
add
orb
or
or
and
sub
out
push
loop
cmp
lea
lds
sti
push
sub
inc
and
adc
adc
jmp
push
jne
mov
dec
rcl
inc
xor
cmpsb
movsl
mov
lock
jb
rcll
lock
mov
insb
ljmp
popf
push
test
sbb
adcl
jp
fildll
sbb
lods
fwait
sbb
shlb
cmp
movsl
movswl
in
push
mov
xor
cli
add
add
push
and
rclb
test
sub
sub
xor
sub
mov
sbb
inc
rorl
push
flds
pop
adcl
push
push
test
sbb
je
xchg
mov
aas
adc
pop
dec
imull
cwtl
loopne
test
pop
mov
cmp
lods
push
hlt
adc
jbe
bnd
mov
cmpsl
adcb
and
push
sbb
xor
jns
in
insb
xchg
outsb
jno
test
popa
loope
sti
add
inc
lcall
add
adc
std
jle
or
aas
jne
outsb
fmul
mov
add
add
stos
adc
or
or
cmp
fidivrs
ljmp
mov
lock
cmp
test
out
cmp
mov
insb
xchg
mov
push
out
inc
and
insl
pusha
mov
sub
lret
push
or
rorb
adc
pushf
fcoms
jo
mov
pop
mov
or
fdivl
add
lret
push
dec
popa
int
scas
push
fs
pop
jb
nop
xlat
sbb
mov
fs
arpl
pop
cmp
sbb
add
inc
fiaddl
and
xchg
sarl
inc
cmp
cmp
cmp
inc
cmp
add
jns
addb
cltd
ret
and
data16
movsl
scas
or
aaa
jb
sbb
mov
dec
test
cs
fnstcw
int3
mov
stos
push
js
xchg
and
test
mov
nop
shll
pushf
dec
sbb
stc
fcmovbe
movsb
sete
jmp
mov
andb
orl
lret
push
ret
dec
es
push
pop
aam
pushf
shlb
jmp
dec
in
adc
mov
cltd
push
and
or
pushf
es
loope
jns
sub
push
adc
xor
add
and
adc
jo
movsb
xor
mov
ja
lea
and
inc
push
cli
sub
ret
fwait
pop
fisubs
dec
xor
test
sub
mov
push
push
push
or
push
mov
adc
fiadds
mov
mov
sub
add
int
or
fmuls
loop
pop
mov
sbb
pushf
adc
mov
test
je
push
add
testl
pop
dec
xor
rolb
and
lcall
xor
xor
outsl
adc
dec
pusha
xor
mov
fnsave
or
sysret
sbb
add
sbb
xor
and
push
adc
out
adc
daa
rclb
popl
cmp
lock
xchg
jg
movsb
push
sbb
test
or
int
orl
xor
or
enter
jne
aaa
cmp
and
das
dec
sbb
fdivp
fsubp
push
dec
xor
or
movsl
out
jne
jae
dec
repz
and
lea
push
inc
and
fimuls
cmpsb
divl
push
and
aam
in
adc
add
mov
repnz
pop
ljmp
loope
outsl
push
sub
push
aam
sub
dec
fbld
sub
inc
lcall
inc
jnp
jp
xchg
mov
or
pop
fstpt
adc
inc
js
and
and
sub
adc
loop
and
pop
mov
mov
xor
add
je
cmp
test
int
rorl
sbb
push
adc
push
cmp
push
or
shll
scas
sbb
or
stos
pop
rorb
sub
andb
sar
push
fs
mov
push
cs
das
je
pop
or
pop
lea
push
and
jo
js
ss
arpl
and
xor
cmp
push
add
push
pop
jb
dec
xchg
movsl
loope
test
push
or
dec
xor
call
add
push
mov
push
push
in
add
cmpsl
lods
fs
push
xor
pop
adc
sub
jbe
ljmp
xor
sub
push
or
mov
insb
or
push
jbe
pop
hlt
test
in
xchg
push
mov
xor
adc
add
add
nop
sub
sbb
sarl
or
inc
or
push
jnp
cmpsb
in
imul
enter
ss
leave
inc
sarb
and
and
inc
push
mov
add
bswap
mov
fwait
xchg
cmp
add
mov
icebp
sub
das
dec
adc
js
adc
xor
adc
inc
iret
push
hlt
sub
push
sbb
add
loopne
ffree
std
call
and
cmpb
or
xor
notl
jle
inc
push
dec
pop
fcmovb
cmp
test
sub
inc
push
inc
in
and
sbb
sbb
and
sub
je
xor
aas
fimuls
dec
je
jmp
pushl
mov
rcr
mov
pop
add
push
orb
sub
mov
mov
notl
out
push
inc
xor
cmc
inc
and
test
lea
fwait
dec
add
mov
inc
negb
fwait
scas
sub
mov
jl
andl
mov
mov
push
or
js
out
or
fs
scas
mov
push
pop
cltd
ficoml
jge
pop
cmp
xor
pop
jo
push
cltd
jo
sbb
adc
mov
pop
sbb
ret
xor
cmp
movsl
ffreep
mov
call
nop
jo
out
je
fs
adc
sub
test
dec
sbb
testl
xlat
inc
xor
shl
push
ret
mov
dec
loopne
shl
jl
and
mov
sbb
je
rcrl
loopne
shll
lock
xor
pop
jmp
arpl
ret
inc
ljmp
mov
push
in
clc
bound
xor
inc
mov
cmpsl
fadds
cmp
stc
mov
es
or
lds
mov
xor
push
in
push
pop
lock
pop
sbb
mov
push
insl
push
sub
pop
push
ret
aas
xor
repnz
jne
lock
sub
dec
ja
imul
and
subb
testb
je
jne
cmp
jg
push
enter
or
dec
jl
loope
xor
jne
loopne
push
fistl
lret
jl
inc
inc
xor
adc
jp
clc
sbbb
push
sbb
inc
mov
leave
pop
adc
cltd
fcmovb
or
xorb
mov
leave
cmpsl
inc
add
mov
add
test
adc
xacquire
leave
inc
push
loopne
dec
add
popa
addr16
sbb
movsl
sarl
xchg
sub
or
xor
pop
push
jae
add
loopne
push
push
pop
inc
lock
icebp
arpl
scas
addl
and
es
push
test
lock
add
push
nopl
mov
addr16
lock
mov
push
xlat
repnz
mov
imul
push
xchg
out
mov
and
popa
or
call
out
neg
adc
test
test
scas
sbb
or
mov
es
mov
xlat
dec
fwait
sbb
pop
push
push
push
inc
push
aad
pop
cwtl
imul
cltd
idivl
push
or
push
or
lds
xchg
testl
fdivl
pop
ret
push
push
mov
mov
ds
mov
mov
movsb
vunpckhps
jecxz
xor
out
addr16
inc
lods
out
addl
aas
movsl
add
xchg
and
xor
xchg
outsl
push
mov
mov
xor
sbb
add
testb
repz
or
or
push
bound
aas
or
adc
or
arpl
aad
test
paddb
add
mov
adc
cmp
pop
add
pop
mov
jl
cmpsb
adc
add
pop
clc
stos
mov
and
xor
fstpl
dec
inc
adc
mov
push
mov
jns
adc
adc
cmp
pop
push
cwtl
push
add
jbe
arpl
pop
or
inc
cli
xchg
sub
test
cmpsb
sbb
push
push
outsb
mov
mov
inc
ret
call
or
jae
leave
push
pusha
mov
push
add
or
sbb
jae
orl
or
xchg
out
cwtl
dec
pusha
or
cmp
imul
cld
aas
je
sbb
insb
add
push
add
pop
rolb
add
or
adc
sbb
adc
sub
adc
add
and
push
fs
loopne
pop
jb
jne
icebp
shrb
ja
mov
pop
add
cmc
add
xchg
jg
add
mov
inc
mov
push
fs
add
cmc
add
sbb
and
in
and
and
cmp
out
ret
mov
cmp
pushf
jbe
or
cmpl
ljmp
fld
push
cmp
mov
sbb
pop
adc
xor
shr
xor
xchg
out
inc
add
call
loopne
and
jge
adc
cmp
pusha
sbb
add
hlt
push
sbb
or
pusha
insb
std
inc
adc
mov
mov
add
jno
repz
or
outsl
insl
out
insl
or
cmp
movsl
mov
loop
fs
or
hlt
sbb
pop
loopne
or
sbb
push
gs
bnd
push
push
pop
adc
add
clc
or
repnz
inc
fldl
and
les
cwtl
movsl
bswap
sbb
testb
sbb
ret
mov
push
push
aad
jns
or
or
bound
lock
push
sbb
popa
inc
test
arpl
shll
addb
lods
pop
js
mov
pushf
pop
push
lahf
imul
test
dec
adc
or
cmpsb
pop
out
mov
mov
push
test
add
inc
test
imul
test
pushl
xchg
adc
mov
or
inc
xor
sbb
inc
movsl
xor
je
loop
pop
and
imul
xchg
jne
ss
jl
adc
or
rclb
jl
pop
jae
pop
jmp
push
jnp
stos
and
or
push
pop
mov
icebp
add
lds
dec
xor
jle
add
inc
xor
addb
addr16
sbb
xchg
mov
lods
ret
sbb
pop
jbe
es
mov
push
jne
repz
sub
jo
xor
dec
cmp
or
mov
fsts
adc
dec
jnp
adc
hlt
into
sub
adc
sahf
movsl
xor
xor
push
mov
test
or
jo
xchg
push
mov
adc
cmpsl
jecxz
mov
cmp
nop
cmp
in
cmp
lcall
lea
mov
je
sub
add
and
in
in
lea
bound
outsb
dec
add
sbb
addb
push
sbb
and
push
test
in
and
lcall
movsb
loopne
adc
fisubl
flds
cli
xchg
clc
decl
push
sub
cmp
push
dec
testb
jbe
mov
les
push
idivl
mov
dec
insl
sub
push
xchg
push
ror
repnz
pop
testl
cmp
aas
cmp
dec
es
in
adc
out
call
pop
inc
movlps
movsb
sysexit
mov
leave
pop
xchg
sub
insl
inc
xor
divl
sbb
popa
jo
loop
js
add
cmp
sub
and
mov
push
push
fiadds
test
sbb
ficoms
mov
test
jge
jl
je
add
outsb
mov
jge
test
add
testb
jle
loopne
jle
xor
or
jl
neg
ret
xchg
out
ret
rorl
adc
mov
je
xchg
and
fcoms
loopne
outsb
xchg
adc
adc
add
jo
push
push
push
and
cmp
sbb
andl
into
pop
lods
jmp
pop
pop
push
push
dec
roll
or
dec
dec
pusha
outsl
and
dec
in
bound
add
pop
and
cmp
mov
or
xor
adc
push
rcrb
testl
xorl
lret
lods
call
sub
mov
jbe
and
sub
mov
xchg
loope
aas
adc
imul
cmp
push
add
add
mov
imul
add
rorb
adc
pop
pop
fiadds
adc
inc
mov
mov
xchg
mov
lock
dec
jecxz
cmpsl
jae
mov
cmpsb
or
cwtl
les
add
roll
js
xor
push
lea
xor
mov
ja
xchg
sub
xchg
sub
push
push
inc
imul
or
pop
push
pop
cld
push
cltd
mov
adc
dec
inc
fdivrs
cmp
inc
shl
mov
push
clc
adc
cltd
adc
dec
xchg
cld
push
mov
push
imul
fs
in
pop
jp
cmpsb
jne
ret
outsl
mov
fstpt
and
ja
je
or
je
or
sub
sub
dec
je
das
adc
jge
lahf
add
loopne
or
add
xchg
or
jne
sbb
or
xor
push
jmp
cmp
in
je
push
adc
adc
dec
xor
inc
adc
inc
mov
int3
lds
ret
int3
mov
mov
lcall
shll
xor
push
add
call
mov
or
cwtl
lret
es
jl
sub
popa
jl
test
adc
nop
push
insb
imul
daa
or
mov
repnz
ret
xchg
and
enter
das
add
lds
ljmp
ret
ret
clc
jecxz
push
cmpb
dec
dec
je
sub
inc
dec
sub
or
adc
adc
or
fstpt
in
mov
aaa
popf
sub
daa
or
ret
push
adc
adc
adc
xchg
dec
mov
movsb
xchg
add
insb
adc
push
outsl
dec
pusha
ret
fsts
or
xchg
xchg
push
inc
imul
test
jnp
and
movsb
pushf
and
dec
cmp
adc
jne
push
or
push
call
pop
and
movsb
inc
stos
push
sbb
sbb
push
cmp
mov
dec
or
ret
pusha
mov
ds
icebp
clc
addb
dec
aas
and
push
or
movb
sbb
push
xchg
out
pop
xor
dec
adc
aad
mov
push
jg
dec
sub
je
push
xor
jo
push
or
mov
imul
fcompl
add
les
dec
xchg
xor
dec
mov
cmpl
loop
scas
push
and
jns
pop
inc
add
add
dec
and
push
sbb
sbb
cs
jns
sub
in
inc
inc
scas
dec
in
clc
dec
mov
in
test
lret
iret
icebp
jge
mov
or
aam
sbb
push
js
inc
pop
nop
repnz
mov
cmp
and
fcoml
loope
jns
fsubrp
push
xor
cmpb
ret
cmp
xor
push
and
inc
nop
andl
out
jbe
push
es
mov
ds
mov
sub
loope
fidivrs
xor
adc
sahf
aas
pushf
roll
aam
jno
push
xchg
mov
jo
xlat
in
mov
sub
add
loope
roll
sbb
mov
push
fsubrs
jmp
int
mov
movsb
arpl
stos
std
decl
lret
repz
or
adc
push
cmp
dec
pop
repnz
sbb
adc
shll
fidivl
push
ljmp
movsb
push
jg
sahf
and
pop
adc
push
push
les
mov
divl
or
push
cltd
inc
loop
andl
data16
and
out
jne
mov
mov
pop
cs
xor
sbb
dec
ret
jge
aaa
call
lahf
ds
idivb
inc
or
pop
hlt
or
jne
jl
sbb
adcl
sbb
or
mov
inc
mov
push
sub
shll
outsl
shrl
inc
mov
je
daa
dec
sub
push
dec
loope
fisubl
mov
outsl
or
xchg
pop
fs
pop
mov
inc
cld
js
or
call
adc
push
fiadds
and
dec
lahf
rcrb
sub
xor
push
sub
or
icebp
add
and
cmpsl
push
or
add
or
mov
mov
mov
fstpl
adc
rcll
lock
or
addl
outsl
shlb
cltd
fbstp
incl
sbb
int3
cmpsl
cmc
mov
add
inc
jp
add
cmp
lods
js
mov
pop
push
inc
leave
jl
lods
dec
je
rcl
add
add
subb
jmp
or
jge
or
push
sub
dec
sahf
imul
repz
inc
xor
jp
xor
divps
mov
sbb
dec
cmp
hlt
lock
cmpsb
sub
mov
sbb
je
test
clc
add
pop
dec
inc
daa
enter
outsl
mov
sbb
xor
push
or
loope
add
mov
bound
cwtl
popa
and
mov
add
mov
mov
adcl
or
sbb
add
adc
push
sub
or
out
adc
movups
push
pop
dec
in
movsl
or
shlb
push
cmp
mov
and
jp
add
push
int3
xchg
mov
and
pcmpeqb
sti
mov
lock
sub
pop
cmp
mov
mov
sub
outsb
cmp
or
mov
or
mov
ret
xor
idivl
or
mulb
fimuls
and
adc
lahf
rcll
cmp
mov
cmp
pop
jne
sub
push
push
in
rclb
pop
xchg
fstpt
fcoms
xchg
jne
test
movsb
in
or
and
leave
jp
cmp
add
ret
push
mov
sarl
negl
fmull
dec
sti
or
dec
je
fidivrs
sbb
xchg
cs
das
push
sbb
add
cs
inc
movsl
popf
popa
pusha
pop
iret
mov
sub
add
shrb
and
nop
loop
adc
je
cltd
adc
push
stos
imul
sti
cmp
shrl
in
xor
lcall
push
sub
inc
and
pusha
popa
and
testb
inc
loope
pop
jno
sub
and
into
jle
pop
into
xor
dec
add
mov
in
scas
cmpsb
test
xchg
push
scas
in
or
aam
arpl
cltd
fcoms
sbb
xchg
ret
in
adc
in
and
sub
add
imul
push
push
sbb
lock
inc
inc
popa
push
mov
fildll
ljmp
dec
ret
pop
sub
es
sub
test
or
punpckhdq
in
add
mov
mov
cmpsl
repnz
iret
pop
mov
pop
mov
loope
mov
cmp
movsl
ret
lods
repz
lock
cltd
push
dec
sub
test
cmp
mov
pop
cmp
and
xchg
enter
or
or
popa
hlt
add
push
push
enterw
pop
add
sbb
adc
aaa
test
jge
leave
nop
dec
dec
or
das
inc
and
mov
and
daa
inc
out
or
push
lock
push
adc
je
cmp
je
loopne
and
push
mov
popf
or
push
sbb
dec
mov
dec
jo
mov
dec
adc
jne
sbb
push
or
sti
and
les
mov
pop
daa
push
mov
push
fisttps
repnz
push
dec
call
pop
je
mov
pop
and
movsb
dec
and
nop
lahf
popa
mov
sahf
rolb
or
mov
jp
jp
imul
rcll
es
add
int3
add
shrb
inc
mov
mov
sti
xor
mov
jnp
cmpb
dec
je
sub
push
add
nop
push
pop
mov
decl
dec
jp
cld
rol
add
and
cmc
aaa
push
fsts
inc
lea
jmp
test
popf
std
mov
push
nop
and
fdivrl
stos
cltd
push
cs
addl
ret
andl
push
xchg
and
inc
pop
imul
xorb
out
arpl
mov
lcall
lahf
jne
es
cmp
sbb
mov
or
rorb
rorb
and
xlat
sub
add
jb
sub
dec
ja
into
outsb
xchg
inc
fnstenv
shlb
jae
js
xor
add
inc
scas
loopne
push
adc
ror
jae
dec
xor
dec
xor
pushf
cmp
xor
cmp
adc
hlt
inc
rcrb
cmp
mov
pop
inc
pop
jle
jne
dec
xor
sub
add
and
sbb
inc
dec
sti
and
dec
jmp
push
pop
xor
adc
dec
jmp
push
or
jp
add
das
imul
jns
jle
push
fisubs
iret
in
daa
jb
jae
push
pushf
mov
fdivp
push
xlat
adc
dec
push
addl
dec
clc
jg
fisttpl
call
add
outsb
out
add
inc
and
push
and
push
add
sahf
std
mov
js
or
or
aam
pop
adc
and
dec
out
mov
movsl
push
pop
pop
push
sub
adc
cmp
pop
jbe
lods
nop
or
xor
movsl
movsl
push
sbb
rcrb
sub
rclb
cwtl
jb
inc
pop
arpl
call
cmp
adc
daa
pop
loope
int3
outsb
sbb
and
es
sbb
inc
cmpsl
lea
ret
bnd
popf
jns
xor
adc
addr16
addr16
hlt
cltd
fdivl
enter
in
mov
xor
add
jle
in
push
xchg
inc
dec
pop
lcall
mov
pop
in
push
jge
testb
or
or
mov
fimull
mov
mov
lcall
mov
in
xchg
loopne
repnz
sarl
jb
ret
jbe
push
mov
jne
cmc
sbb
in
push
icebp
and
cltd
std
ljmp
sbb
push
sbb
popf
add
sub
and
mov
or
adc
add
jecxz
push
fs
int3
push
adcb
enter
or
pop
pop
sub
aaa
add
xor
loopne
xchg
dec
mov
rcll
in
int3
add
xchg
push
add
push
lock
push
test
add
push
sub
jae
lret
mov
mov
shl
das
or
gs
cmpsl
jmp
jne
mov
sbb
and
push
or
or
add
dec
int
shl
inc
inc
jnp
int
pop
sahf
je
fmuls
xchg
adc
mov
add
leave
arpl
push
cmp
inc
sub
add
and
inc
lahf
jmp
push
jl
mov
pop
xchg
dec
or
test
pop
add
push
mov
add
cld
cmp
jne
sbb
faddl
add
je
or
add
push
scas
mov
arpl
addl
cmp
mov
insl
adcl
cwtl
pusha
call
or
or
xorl
js
inc
lahf
ja
xchg
push
fninit
call
jb
js
dec
sub
push
and
or
test
xor
inc
pop
jne
scas
fmul
in
inc
push
movsb
mov
jbe
les
lea
sbb
imul
sbb
test
in
jo
mov
les
out
subb
sbb
out
inc
push
jmp
adc
push
xchg
or
xchg
mov
pop
faddl
add
sarl
aam
and
adc
jo
and
lods
in
mov
mov
cmp
adcl
mov
pop
andb
call
loop
dec
mov
lds
and
xchg
nop
or
jno
stos
fadds
ja
mov
xchg
and
test
arpl
mov
dec
cmpsb
adc
push
sub
push
push
jb
sub
push
lods
rclb
lock
popa
mov
push
push
sbb
xorl
das
aad
pop
mov
scas
repz
aaa
andl
mov
dec
notl
jbe
shll
push
leave
add
xor
es
push
in
xchg
cmp
imul
xorb
pop
jno
ficompl
mov
adc
and
lock
xor
enter
sbb
leave
dec
pop
sar
int3
xchg
nop
mov
adc
push
orl
test
mov
adc
mov
adc
stc
add
pop
gs
mov
and
sub
inc
lcall
push
lea
add
mov
cmp
push
arpl
insb
mov
lock
pop
pop
xchg
add
insb
pop
adc
cs
inc
pusha
adc
aad
mov
add
ds
mov
and
int3
cmp
push
lea
roll
mov
push
mov
push
pusha
adc
nop
pop
fistl
xor
adc
pusha
out
sub
sub
pusha
repz
lock
repnz
adc
std
push
in
pop
aaa
aas
ja
push
pop
or
mov
imul
push
push
pop
and
out
clc
and
jne
andl
test
pop
outsl
push
or
pop
inc
arpl
shr
imul
sub
jnp
or
jae
cs
and
jb
pop
xor
sbb
std
xchg
jno
subl
fmuls
and
xchg
repnz
jle
cld
adc
or
fsubrl
fwait
sub
es
push
sub
shrb
push
iret
loopne
xor
les
cmp
push
push
loopne
inc
subb
mov
inc
push
in
mov
rol
push
repnz
popf
stos
add
add
icebp
mov
es
push
mov
push
lea
adc
leave
mov
rcl
loop
cmp
xchg
and
push
sbb
ret
or
pusha
lods
shll
std
sbb
or
jmp
scas
mov
cmp
add
or
inc
jecxz
fimull
leave
sbb
dec
mov
std
xor
hlt
jecxz
shlb
outsl
arpl
stos
xor
imul
push
dec
stos
fcomps
imul
push
ljmp
sbb
inc
testl
outsb
shlb
dec
add
das
xlat
mov
fs
adc
and
jne
dec
lea
mov
xor
add
push
imul
test
cmp
mov
xor
mov
mov
sbb
jne
cmp
xor
or
mov
or
xor
push
adc
add
cmp
js
or
sub
aaa
decl
ret
mov
adcl
cmp
aaa
mov
aaa
and
cltd
sbb
or
xor
or
or
add
mov
sub
loopne
cld
push
pushl
and
and
hlt
pusha
mov
pop
sub
aad
cmp
hlt
jno
push
clc
test
cmp
cmp
pop
and
mov
call
jns
icebp
aam
add
mov
add
xchg
xor
mov
dec
rorl
push
add
sbb
and
ret
or
pop
xchg
test
cmp
mov
push
push
lea
or
ja
fs
shlb
sub
or
mov
adc
xor
xlat
popf
mov
stos
jl
push
clc
shll
dec
call
pop
cmc
cmp
adc
data16
sub
aas
push
mov
insb
sub
fisttpl
jne
roll
jbe
sub
lea
jp
jl
ljmp
push
cmp
cmp
outsl
and
push
bnd
cmp
push
jne
imul
out
leave
nop
cmp
cmp
hlt
mov
cmp
or
inc
jg
and
sbb
lgdtl
xor
loope
dec
popf
xchg
aaa
inc
outsl
push
add
fcmovnu
inc
inc
sti
jl
test
jg
cmp
xorb
ret
mov
xchg
pop
mov
sbb
movsb
inc
clc
push
mov
cmp
negl
shr
not
sbb
sub
lods
mov
mov
test
and
es
xor
push
xchg
test
fs
ja
push
xchg
dec
addr16
and
sub
es
loop
in
das
das
sub
sub
xor
xchg
xchg
xchg
das
cmp
cmpsb
inc
and
cmp
insb
popf
xchg
pop
dec
lods
outsb
xchg
test
add
jecxz
addb
xchg
pop
mov
add
jg
or
inc
add
and
mov
sub
mov
inc
mov
and
sub
mov
outsl
xchg
jne
jmp
jecxz
push
bound
inc
xchg
xor
das
push
xor
push
mov
adc
dec
mov
outsl
sub
xchg
ficoml
sub
mov
in
sub
sarl
push
pop
jns
fsubl
sub
inc
adc
jns
jle
int
test
dec
ss
or
and
sbb
test
js
inc
sub
sbb
push
or
inc
mov
and
dec
loopne
test
dec
cmp
jnp
arpl
cmp
cmc
scas
inc
mov
adc
xor
xchg
xchg
movb
mov
or
shll
add
pusha
jl
cmp
push
incl
mov
mov
xchg
sbbb
inc
loope
dec
add
sub
dec
and
or
idivb
dec
sub
imul
call
in
sahf
mov
jge
je
pop
cmp
testl
or
aad
and
aas
test
inc
sti
rep
repnz
sub
inc
xor
or
sbb
call
sub
jae
and
and
js
push
jae
sbb
fwait
sub
mov
adc
pop
push
daa
fbld
jecxz
xchg
pushf
scas
jae
push
push
mov
cmpsb
xlat
push
and
push
mov
push
imul
stos
pop
loopne
adc
xchg
adc
sub
push
adc
xorl
adc
pop
popa
pop
push
pop
adc
addb
xor
mov
mov
imulb
cmpb
or
data16
iret
es
push
xor
push
test
sub
int3
xor
and
repnz
test
nop
or
adc
rolb
push
iret
test
adc
xor
das
mov
int3
jae
sbb
shlb
lock
mov
push
push
push
jne
inc
popa
mov
cwtl
rcrb
sub
fstl
adc
sbb
pop
subb
sub
push
data16
lock
xchg
cltd
test
inc
mov
push
or
push
push
gs
inc
jecxz
lcall
xor
pop
cs
adc
ljmp
scas
push
push
outsl
push
fmuls
in
gs
xlat
mov
lds
push
lret
mov
cmp
out
xchg
add
add
icebp
addl
roll
push
add
outsb
ljmp
mov
mov
jne
lcall
adc
xchg
bound
adc
rol
imul
pop
mov
loop
and
and
cmp
js
cmp
dec
ss
adc
sbb
in
adcb
adc
mov
mov
loop
push
stos
sub
add
scas
inc
dec
xchg
inc
clc
adc
ret
pop
adc
sbb
and
into
cmp
and
aad
nop
clc
add
xchg
xchg
testb
adc
push
adc
jle
jnp
rol
cmp
pusha
adc
add
dec
loope
adc
inc
out
je
lahf
or
dec
adc
cmp
shll
inc
cmp
xor
sti
xorb
test
loopne
pushf
or
sbb
outsl
dec
mov
sbb
sub
sar
faddp
popf
addb
rcrb
mov
call
mov
int
jo
and
sub
or
mov
es
xor
lods
xlat
jb
xchg
add
push
or
imul
ret
sub
rol
insl
pop
add
sahf
ja
test
mov
xor
adc
cmp
cmp
out
fs
xchg
push
andl
cmp
mov
and
inc
cli
clc
pusha
inc
popf
cs
ret
ret
and
rolb
test
add
add
mov
test
jl
pop
push
das
lret
push
ret
ljmpw
mov
push
push
cmpsl
push
add
sub
or
add
jl
jno
xor
push
mov
inc
or
jle
aad
mov
push
aaa
int3
add
fnsave
adc
pusha
jl
sbb
xor
mov
outsl
dec
pop
or
dec
pop
test
dec
xchg
pop
xchg
adc
adc
stos
ds
jmp
dec
ss
mov
mov
dec
add
jne
sub
outsb
fwait
sbb
sar
jb
pop
cmp
jae
push
mov
jb
mov
xor
lret
sahf
xlat
arpl
jmp
dec
hlt
jae
rolb
nop
mov
jg
cmp
or
pop
repz
inc
faddl
push
icebp
inc
shrb
and
xchg
jl
daa
andl
inc
inc
arpl
mov
fsts
inc
sub
dec
mov
lds
adc
cmpsb
adc
push
fnsave
cli
and
mov
sub
push
sub
add
jne
rcrb
adc
dec
fiaddl
pop
dec
sti
movsb
add
sbb
inc
push
ljmp
enter
adc
adc
cmpb
cmp
nop
dec
es
xchg
sbb
add
push
sbb
push
sub
and
cli
mulps
add
pop
dec
jbe
popa
mov
dec
lods
cmp
sub
js
pop
sbb
call
mov
fwait
inc
sub
shll
jbe
add
xor
fcomps
iret
mov
push
sub
adcl
mov
inc
mov
hlt
ret
subl
outsl
loope
and
mov
jo
push
jmp
and
frstor
filds
mov
xchg
dec
or
or
lahf
arpl
in
inc
push
adc
sub
in
cmp
xchg
adc
addr16
insl
cmp
clc
arpl
sbb
cmp
pop
adc
and
mov
add
sbb
fcoml
or
cs
or
adc
lods
or
jmp
or
pop
mov
outsb
and
jne
push
sub
push
sbb
jne
push
adc
rcrb
add
scas
mov
xchg
rep
mov
sub
adc
inc
xchg
push
push
xor
es
dec
mov
sti
mov
xchg
push
and
lahf
and
and
push
nop
xchg
adc
inc
xor
jg
and
sbb
xchg
jo
xchg
xchg
and
test
or
das
shlb
xor
add
inc
push
in
and
xorb
pop
jne
lods
add
cmp
pop
mov
mov
jp
sbb
xor
leave
fnstsw
ret
xor
xor
or
in
pusha
mov
popa
adc
pop
add
fucomp
mov
add
pop
sbb
call
inc
or
fs
jbe
sbb
add
push
stos
mov
pop
mov
xchg
xor
inc
adc
or
adc
dec
add
mov
mov
fadds
mov
andl
adc
push
mov
sti
insl
sub
mov
lods
mov
sbb
xor
dec
dec
sti
inc
mov
xor
repz
loop
fimuls
rorl
enter
fdivl
mov
shr
aam
mov
mov
js
cmpsb
loopne
dec
insb
xor
sub
cmp
decl
sahf
je
fcomps
mov
mov
xchg
mov
mov
pop
divb
push
test
sub
cltd
ret
sub
or
test
xor
mov
test
sbb
inc
aas
rolb
jg
or
push
mov
pop
add
loop
and
fistpll
ret
and
mov
jne
pop
lock
rcrb
inc
mov
or
adc
sbb
xchg
jne
scas
or
and
jne
jp
leave
push
adc
loopne
sahf
and
cmp
lds
repz
and
pop
sub
lock
das
repnz
out
jae
and
fwait
nop
mov
jno
lock
rolb
cmpsl
xchg
insl
push
lret
push
sub
mov
jno
fdivr
xor
or
ret
cmpsb
push
add
mov
fsubrl
adc
aaa
mov
pusha
sub
or
je
mov
or
bound
popf
in
xchg
xchg
mov
push
cmp
jge
xchg
sbb
test
xor
insb
dec
sub
lds
cmp
adc
or
movsb
or
mov
notl
ret
inc
bound
mov
insb
test
dec
js
nop
lock
pop
pop
fidivs
mov
jns
sbb
push
xchg
lods
ret
sub
or
push
dec
xchg
add
and
xor
ja
jp
push
je
jmp
adc
cmp
jb
lret
add
dec
mov
adc
or
adc
aas
das
insb
mov
dec
sarl
dec
xlat
cmpb
mov
lods
test
xor
lahf
xor
xor
adc
pop
nop
mov
or
push
inc
lcall
mov
js
pusha
scas
push
pop
mov
pop
sbb
sbb
repz
aam
popf
cmp
inc
in
xchg
push
jp
call
sbb
inc
inc
jg
push
adc
pop
pusha
lcall
xchg
or
push
sbb
jnp
mov
adc
ljmp
xor
mov
inc
gs
hlt
test
push
lret
shl
pusha
mov
pop
jnp
test
loopne
adc
adc
xor
pop
inc
adc
mov
cmp
in
cli
aam
add
inc
and
push
fcomps
adcl
push
mov
icebp
into
push
inc
mov
dec
rolb
mov
or
or
xchg
cmp
mov
or
push
popa
mov
lret
mov
mov
adc
sub
in
scas
push
lock
jbe
jmp
lahf
dec
outsl
addb
pusha
or
sub
inc
or
pop
push
fs
inc
add
sbb
sbb
and
pop
test
movl
push
push
add
jo
mov
mov
push
inc
cmpsl
loopne
ret
out
test
and
adc
inc
add
push
xchg
pop
or
dec
rcr
add
std
sbbl
push
aaa
rclb
sbb
loopne
repnz
xor
sub
sub
pusha
idiv
and
xchg
pop
push
push
and
in
fcoms
jmp
push
cmp
stos
adc
mov
inc
sbb
dec
push
adc
fs
divl
fsts
mov
sub
dec
inc
jg
aas
push
add
ret
push
jno
inc
stos
push
shlb
or
mov
inc
and
clc
adcb
loop
adcl
test
jmp
loope
es
stc
pop
popa
push
movsl
and
mov
cltd
pop
pop
mov
pushf
dec
outsl
iret
sub
xorl
scas
xchg
add
mov
dec
pushl
test
jnp
cmp
pusha
es
xor
push
call
test
push
push
pop
inc
sbb
int
loopne
pushf
push
pop
jne
and
jb
mov
xor
out
enter
mov
bound
dec
movsl
aam
xchg
sub
push
add
mov
mov
push
xchg
adc
lods
or
pop
mov
mov
jb
or
jb
movsl
mov
mov
test
add
fldl
pop
and
xor
addl
subl
imul
or
rclb
loope
or
sub
dec
jb
testl
xchg
or
pusha
push
jl
adcl
mov
loope
out
loope
jb
cmp
add
cmp
sbb
or
inc
jno
adc
xchg
or
sti
push
movsb
jb
xor
js
mov
mov
loopne
lret
lods
jg
cmp
jbe
nop
mov
mov
out
outsl
mov
mov
icebp
ret
push
add
ret
cmp
mov
xor
inc
outsl
idivb
int3
das
and
dec
cs
ds
loopne
inc
sbb
les
xchg
sbb
rcl
sub
rcll
lods
add
arpl
or
or
sti
pusha
adc
cmc
pushf
loop
push
adc
or
fwait
lahf
jb
clc
xor
pop
mov
xchg
lds
add
mov
sbb
inc
scas
or
test
cmp
inc
lret
xchg
mov
mov
push
push
leave
push
cmp
movsl
mov
or
mov
add
pushf
mov
mov
xor
push
scas
push
lcall
pop
jne
fs
push
rorl
out
cmpsl
stos
xor
iret
mov
je
xchg
or
test
ljmp
push
andl
xchg
add
shlb
mov
dec
mov
cmp
clc
or
mov
lods
and
or
lea
cmp
rclb
enter
push
push
mov
jo
and
js
add
and
inc
fwait
mov
push
dec
push
fs
psllq
in
xor
cmp
dec
mov
add
or
es
push
clc
stos
push
add
dec
iret
push
rol
jecxz
and
in
mov
mov
and
mov
mov
adc
enter
fistl
scas
pop
cmpl
stos
xchg
nop
mov
add
lret
test
jo
sbb
inc
hlt
dec
and
sub
adc
in
pop
fwait
dec
or
adc
movsl
rcl
lods
shrl
jle
xor
xchg
fwait
cmp
cmpb
add
mov
mov
jno
pushf
stos
xlat
imul
pop
adc
pop
xchg
lahf
lea
lret
fadds
pop
cmp
inc
movsl
test
rcrb
in
adc
ss
call
add
sbb
fdivrp
xchg
xchg
inc
xor
notl
jno
or
enter
or
clc
aas
ss
inc
push
repnz
rolb
loop
mov
cmp
inc
mov
shrb
or
push
lret
rcr
bound
or
fs
sbb
shr
or
rolb
pop
faddl
jo
cmp
inc
xchg
pop
push
lcall
mov
sub
das
test
rcrb
mov
aas
push
rclb
adc
je
cmp
jne
push
pop
sub
insb
xchg
loopne
adcb
adc
test
mov
nop
push
and
xchg
xchg
cwtl
pushf
gs
lcall
and
sarl
mov
mov
rorl
mov
sub
lds
pop
test
inc
mov
sti
cs
ja
popf
mov
inc
movb
ja
movsb
rcrb
fnstcw
std
mov
into
push
dec
sbb
jmp
cmp
cmp
scas
icebp
ret
ror
fidivl
inc
xchg
jo
ret
cltd
adc
sbb
cmp
jle
dec
pop
dec
mov
les
nop
dec
adc
mov
push
test
or
lea
sbb
mov
clc
mov
enter
mov
ljmp
scas
outsl
push
pop
mov
pushf
mov
inc
mov
mov
mov
add
lods
jae
fs
insb
mov
add
inc
shrl
xor
sub
mov
xchg
push
xor
mov
push
enter
push
xor
or
ret
mov
xchg
inc
sbb
mulb
into
add
adc
cmp
stc
and
dec
cmp
add
or
and
lods
sub
or
cmp
inc
addr16
test
inc
stos
adc
xorl
add
js
pop
pop
stos
out
mov
es
cmp
push
pop
cmpsb
roll
push
push
push
jns
dec
fdivrs
cmp
push
push
repz
pop
xor
mov
mov
pop
pop
daa
inc
je
shll
add
xchg
loopne
add
jmp
lahf
mov
nop
das
inc
gs
lods
mov
jno
lock
movsl
insb
xlat
scas
icebp
push
or
xor
mov
sbb
xlat
push
dec
add
add
test
push
inc
clc
sbb
add
cmpsl
jbe
mov
push
add
test
incb
cmp
push
pop
aad
rolb
xchg
xor
push
push
mov
mov
test
xor
cmp
pop
xorb
xorb
jne
and
adc
jnp
hlt
lea
mov
jnp
sub
xor
inc
inc
adc
push
jl
int3
sub
sahf
dec
cwtl
xchg
xchg
cmp
dec
cmp
out
cmpsl
pop
sub
movsl
mov
mov
andw
lock
sub
bound
xor
add
jnp
mov
repnz
and
out
add
pop
push
mov
mov
gs
push
lods
lods
and
dec
addl
gs
sti
sub
fistl
push
mov
add
push
dec
jle
sbb
pop
fsubl
hlt
sbb
pushf
mov
rcll
lods
xlat
iret
hlt
lock
lea
inc
xor
mov
mov
cmp
cmpb
mov
clc
stc
push
cmp
loope,pn
test
cmpl
and
adc
inc
insl
and
dec
inc
lahf
push
jbe
push
idiv
lea
mov
mov
xchg
aaa
fsubl
add
jae
and
aad
call
fistpl
mov
xor
jp
mov
shlb
push
arpl
lret
ret
push
cmpsb
scas
bound
pop
pop
sub
mov
call
test
adc
jbe
or
ret
in
adc
pop
daa
dec
es
je
inc
fs
in
push
add
push
push
in
out
push
sub
and
jns
nop
cltd
pop
fdiv
push
mov
fsubrs
clc
addr16
jge
and
das
call
add
cmp
push
push
add
jne
fadd
sub
jne
dec
lods
insl
or
test
call
leave
loopne
add
inc
fcmovnb
add
test
or
mov
adcb
mov
and
mov
mov
addr16
popf
lcall
sbb
aam
lcall
test
mov
or
push
cmp
jb
or
inc
push
add
orb
jb
popf
pop
mov
push
sub
rolb
cmpsb
inc
push
dec
mov
pop
lock
fsubrl
inc
cmp
mov
mov
lock
mov
add
mov
mov
imul
bound
push
adc
dec
out
test
decb
cmpsl
ss
lods
adc
aaa
add
adc
dec
cmp
loopne
cmp
rol
adc
sbb
nop
lcall
or
sub
pop
xorl
cmp
imul
es
mov
sub
add
or
push
das
pop
jb
inc
xchg
cmp
mov
stos
xor
jp
jp
je
xchg
ljmp
je
data16
sub
xchg
pop
dec
cli
jle
call
cmp
jg
outsb
adc
int
sub
cmp
or
outsb
add
inc
sub
jge
push
jle
cmp
jns
xchg
push
ficompl
jp
outsb
and
mov
bound
sbb
mov
dec
pop
stos
pusha
xor
inc
xchg
fisttpl
jb
jmp
divb
jge
cmpsb
dec
cmp
cmp
xor
mov
sbb
xor
mov
inc
inc
jmp
inc
jo
add
addr16
and
or
cld
lock
cli
iret
add
ret
xchg
pusha
movsl
push
or
cmpb
add
jae
dec
pop
or
movb
ds
jmp
pop
cmpsb
xchg
add
shll
jae
sbb
insl
pop
pop
cmp
fcomps
push
rorl
xchg
push
sbb
test
lret
mov
mov
pushf
movsl
sub
inc
sbb
andl
and
adc
push
mov
scas
add
xlat
imul
cli
sbb
push
sbb
cmp
xchg
lret
mov
xchg
les
aam
in
add
jl
fldcw
adc
add
mov
add
stos
cmp
inc
push
inc
movsb
adc
mov
add
stos
pop
push
push
dec
sbb
jmp
mov
movsb
in
jns
adcb
test
add
mov
adc
push
in
and
jl
rolb
push
imul
xchg
popa
aaa
imull
andl
enter
or
or
popa
add
jo
push
or
and
push
rorb
adc
rorb
int
rclb
divl
jo
cltd
rcl
inc
push
add
rolb
jo
jb
sbb
adc
add
movsb
add
add
nop
cltd
xchg
ret
cli
loopne
arpl
cmp
lea
test
jge
fldl
cmp
jle
inc
inc
js
mov
and
pop
outsl
push
mov
mov
pusha
std
add
mov
xchg
sub
and
sbb
ret
and
pusha
add
lea
popf
xchg
nop
xlat
das
mov
or
mov
insb
lret
jecxz
test
orl
jg
test
xor
pusha
add
xchg
dec
add
jo
mov
fwait
mov
loopne
rolb
pop
xchg
into
inc
add
dec
das
movsl
inc
push
in
add
scas
mov
pop
bound
xor
pusha
imul
pop
or
mov
int3
push
push
add
push
fadd
and
dec
dec
sbb
stos
cmc
sbb
pop
dec
and
xor
lcall
sub
mov
mov
in
xor
jne
ss
jno
inc
inc
adc
je
cltd
test
mov
std
mov
dec
pop
cmp
sub
sub
inc
push
inc
jo
shlb
das
shr
sub
add
push
and
cmp
push
pop
mov
sarb
addr16
sbb
xor
and
dec
pop
dec
cmp
add
add
test
sub
push
push
push
in
cmp
push
cli
ss
and
push
push
add
in
shlb
adcb
and
add
lret
inc
mov
out
sbb
mov
call
dec
test
inc
add
test
testl
cmp
jno
xor
insl
lea
mov
push
dec
xor
loop
inc
xorb
add
shr
add
fcom
sbb
pop
clc
add
jb
not
dec
cmp
out
mov
ret
shr
cmp
xchg
cmp
jbe
add
jmp
add
pop
shlb
aaa
sub
ret
and
dec
hlt
fisttps
dec
loopne
jl
mov
cmp
cmpsl
mov
movsb
scas
or
sub
xchg
adc
js
stos
mov
cmpsl
nop
pop
dec
punpckhbw
push
jnp
sub
repnz
lods
mov
dec
popf
mov
add
ret
mov
pop
ss
out
dec
mov
add
xchg
test
je
or
fsts
dec
jo
push
add
sar
mov
int
mov
imul
rcll
imul
cltd
push
mov
jl
pushf
int
scas
dec
ss
adc
mov
les
sbb
xor
xchg
or
ljmp
jmp
or
fwait
call
jb
pop
add
mov
xor
lods
or
mov
jbe
cwtl
arpl
mov
xchg
cmovs
movsb
inc
dec
xor
shrb
jg
and
stos
clc
xlat
nop
loope
mov
jmp
xor
mov
call
add
lea
jg
loopne
xchg
scas
cmpb
add
mov
push
jns
adc
sbb
xor
jb
lea
insb
fstpl
and
or
jno
push
orl
and
mov
scas
dec
xchg
and
rorb
scas
pusha
les
repnz
xor
mov
mov
push
xor
pop
push
pop
mov
dec
xor
and
push
push
pop
mov
lods
dec
add
testl
mov
arpl
adc
divl
add
cmpl
in
pushf
or
stc
jmp
sbbb
insl
add
adc
adc
or
inc
pusha
and
loope
sub
and
sarl
je
int3
std
cmc
dec
sbb
ss
cmc
popa
jge
je
mov
sbb
pop
push
dec
or
or
or
push
add
shrd
nop
push
or
cmp
mov
movsb
scas
call
or
adc
adc
fwait
test
ljmp
lea
push
dec
xchg
dec
adc
mov
xchg
pop
mov
push
or
repz
pop
faddl
fcoms
mov
adc
daa
xchg
in
inc
add
xlat
add
push
push
les
test
imul
adc
adc
adc
fsubrs
mov
fistps
push
adc
in
add
pop
imul
or
inc
inc
inc
xor
das
aam
sub
imul
jmp
aaa
pop
and
jb
roll
fs
add
add
mov
ds
movsl
mov
movsl
jno
rclb
jmp
mov
filds
push
adc
sub
and
adc
fistl
xor
sub
cld
hlt
xor
push
pop
sub
or
stos
sbb
adc
xor
cmp
insb
mov
or
es
xor
mov
push
faddl
adc
dec
inc
push
test
and
mov
in
xor
sti
jb
je
push
scas
movsl
mov
jecxz
sub
xor
cmp
jno
push
shlb
jnp
ret
pop
adc
es
scas
sub
push
ss
movsb
movsb
repz
add
repz
mov
and
or
jo
outsl
push
add
and
xor
jnp
xchg
push
push
into
idivb
or
mov
or
add
xor
dec
ds
popa
pusha
xchg
sub
outsl
fsubrs
push
sti
push
add
or
mov
imul
ret
lcall
push
inc
and
or
mov
ret
lret
push
add
xchg
cmp
rcrl
inc
je
mov
mov
cli
dec
dec
xchg
push
aaa
push
adc
pop
out
cmp
mov
into
xor
jmp
mov
sub
pop
add
mov
push
sbb
test
outsb
mov
loopne
push
mov
test
lret
test
fistl
or
inc
xor
xor
insl
or
insl
add
in
push
mov
add
loope
popf
insl
insb
xor
adc
repnz
xor
sbb
inc
movsb
mov
loopne
dec
xor
push
testl
inc
or
xchg
lret
xor
xchg
test
arpl
or
push
inc
pop
loopne
sbb
lock
inc
das
push
cmp
push
stos
roll
rorl
ret
test
enter
cmp
fwait
mov
shlb
lea
or
ja
mov
in
mov
clc
push
push
mov
or
inc
es
jmp
mov
scas
xchg
js
adc
adc
pushf
lret
xor
es
push
sub
mov
popf
jo
sub
mov
lcall
out
rclb
inc
add
add
add
xor
sub
pop
outsl
out
add
mov
cmp
inc
sbb
xchg
adc
outsb
aam
push
jns
pop
pop
or
flds
or
xchg
xchg
pop
mov
repz
sbb
rorb
jl
or
mov
bnd
test
dec
push
dec
imul
subb
popa
sub
inc
sti
push
sbb
or
lret
in
mov
std
inc
mov
aam
jl
push
xchg
mov
mov
mov
add
bound
movsl
mov
je
push
aaa
loopne
sub
call
jno
xlat
ss
jle
push
pop
sarl
sbb
cmpsl
push
cmp
lahf
divb
dec
jbe
push
mov
jno
mov
mov
test
in
xlat
lock
jb
stos
pop
pop
xchg
xor
pop
pusha
leave
or
sbb
lret
and
jns
push
and
aaa
xor
insb
jl
jmp
push
in
fldt
jmp
add
les
adc
mov
push
inc
test
xor
js
insl
mov
jecxz
pop
mov
sbb
jl
push
mov
and
cmp
xor
mov
pusha
and
rcrl
adc
jmp
arpl
ss
or
or
inc
or
loop
inc
popa
and
and
add
pop
mov
and
lea
js
notl
inc
inc
dec
mov
mov
jo
inc
test
nop
mov
insb
mov
add
repz
xor
test
mov
inc
mov
mov
and
cli
repnz
push
dec
nop
das
or
movsb
lods
mov
mov
mov
mov
xchg
xchg
xchg
sbb
xor
dec
shlb
cmp
popf
nop
inc
pop
add
roll
cmp
ret
test
push
sbb
jns
mov
orb
in
addr16
inc
xor
clc
push
lock
add
cld
push
jecxz
xchg
sub
in
sbb
mov
shlb
mov
movl
pusha
adc
movsb
pop
gs
push
mov
xchg
jl
xchg
cmpsb
fs
jl
and
jnp
jle
push
and
js
xchg
pusha
xor
xor
xchg
jl
mov
sti
jmp
add
cli
inc
jo
mov
je
lret
dec
ret
mov
xor
les
test
xor
in
push
xor
or
push
fwait
daa
pushf
dec
sbb
rcrb
jmp
jge
je
sbb
les
xchg
and
push
mov
aad
cmp
pushl
or
push
xor
add
les
pop
call
add
pop
mov
sbb
or
bound
leave
add
sbb
inc
popf
add
sbb
push
lock
adc
push
sarl
ret
pushl
cmp
and
or
fnstsw
ret
or
cwtl
test
fildl
xor
movsl
mov
leave
mov
sbb
cmpsb
pop
out
ljmp
and
or
popf
call
mov
addr16
lock
jmp
enter
cmpsb
or
ljmp
loope
adcl
icebp
out
clc
loopne
test
cs
jge
jbe
sub
push
js
mov
xor
rorb
test
cmp
jle
imul
mov
leave
test
in
push
push
cs
pop
push
jmp
xlat
sbb
pop
inc
add
or
xchg
pop
mov
es
push
jge
dec
loopne
pop
icebp
add
mov
daa
jo
or
in
pop
sbb
hlt
push
test
jne
or
lods
je
in
mov
mov
les
adc
stc
sub
mov
xchg
scas
cltd
or
dec
mov
adc
mov
icebp
inc
mov
mov
mov
iret
xlat
lock
xor
add
xlat
inc
shlb
xchg
sbb
jg
add
sub
push
scas
mov
stos
lock
add
mov
cmp
xchg
jmp
pop
cmp
aaa
jg
adc
mov
ja
dec
push
sub
pop
add
sbb
lret
pusha
or
mov
in
add
leave
xor
sub
sahf
stos
stos
adc
push
jecxz
add
jo
lods
xor
pop
loop
mov
cmp
add
ds
cmp
adc
push
push
inc
add
xchg
sub
test
shl
ret
mov
mov
testl
add
jmp
sbb
push
push
dec
movsl
into
cmp
inc
cli
repz
jmp
adc
scas
or
pop
push
or
mov
sbb
imul
mov
sbb
cli
jmp
fldl
fs
pop
and
push
cmp
adc
sbb
incl
movsl
push
push
movsl
jmp
and
mov
push
clc
and
jmp
fcomp
fnstsw
dec
jp
fldl
pop
fsubr
pop
faddp
andl
sbb
mov
icebp
sarb
push
mov
mov
dec
or
in
mov
and
jo
imul
data16
or
arpl
add
adc
add
movl
pop
shrl
out
fdivrs
sub
jne
xor
out
fs
add
sub
sbb
iret
sub
adc
xor
push
or
pop
ss
cvtps2pi
dec
mov
add
push
mov
sbb
xor
jecxz
fsubs
aam
ret
and
xchg
xchg
insb
lds
cmp
mov
int3
dec
xor
or
lock
push
mov
dec
sub
push
lcall
mov
sub
mov
pop
add
mov
add
lock
push
jmp
mov
cmp
jge
and
add
push
xor
mov
or
add
xchg
adc
jmp
pop
lods
jmp
mov
sbb
lds
cmp
popa
popf
bnd
cwtl
imul
jg
pusha
stos
sbb
cmp
sub
mov
pop
pop
loopne
add
or
imul
push
pop
outsb
into
inc
add
xchg
add
or
jns
mov
mov
mov
dec
xchg
adc
dec
pusha
mov
or
dec
bound
pop
aam
xor
mov
mov
bound
lret
stos
mov
imul
mov
jmp
test
add
cmpsb
lock
xchg
ret
push
pop
ret
xor
cmp
cli
decl
inc
adc
or
push
cmpsl
xchg
rcrl
xchg
loopne
stc
in
sahf
dec
jmp
test
adc
jo
or
loopne
mov
call
add
sub
adcb
out
push
in
xor
pop
jle
sub
dec
jmp
in
and
pushw
and
std
nop
clc
test
jg
aaa
lds
and
xor
or
stos
mov
imul
pop
stos
xor
and
jo
jns
push
mov
adc
addb
push
or
rorb
loop
sub
pop
xor
clc
inc
insb
add
mov
and
ret
add
lcall
mov
inc
ljmp
stc
and
mov
shrl
push
ss
xor
or
mov
add
add
movsb
outsb
or
orb
mov
into
or
fstl
nop
push
xchg
unpcklps
push
add
push
dec
sub
jp
ret
mov
lds
cwtl
push
push
or
push
xor
pop
clc
jae
xorb
repz
xchg
pop
dec
pop
and
lock
xor
inc
clc
clc
mov
xchg
cs
cmp
jge
gs
inc
loope
hlt
lahf
adc
push
jb
cs
mov
jns
jg
orl
push
or
outsb
mov
data16
mov
mov
call
enter
sbb
in
push
cmp
push
jmp
jl
mov
scas
xchg
lea
push
xchg
popf
xor
cltd
cmp
lret
in
iret
add
jecxz
test
push
xchg
dec
in
mov
mov
add
imul
daa
pop
push
add
push
js
pop
push
lods
jmp
popa
fstp
adc
ret
mov
add
lret
or
add
int3
fwait
and
mov
sbb
pop
xor
cli
and
add
add
xor
sbb
pop
outsl
push
dec
mov
jbe
aam
mov
leave
push
pushf
dec
mov
push
arpl
adc
mov
adc
lods
xchg
or
mov
adc
add
test
and
xlat
ljmp
lea
jge
push
mov
sbb
pushf
or
dec
pop
dec
push
movb
mov
lock
pop
sbb
shll
cmp
pop
lret
push
lock
cmp
fcomp
adc
or
jge
lock
das
mov
pop
lods
mov
push
xor
loopne
popa
mov
rolb
ss
ljmp
mov
lret
xor
jle
add
and
mov
stos
or
jmp
cmpl
mov
xor
push
inc
fistpll
sbb
inc
mov
sub
fs
pop
push
jne
mov
jae
in
or
mov
pop
xlat
jmp
mov
es
popa
inc
sbb
push
add
test
push
push
sub
popa
sbb
adc
cmp
je
loopne
pop
rcrl
adc
xlat
push
or
inc
xchg
inc
sub
jns
inc
sub
rolb
cmp
sub
sbb
imul
pop
jne
fdivrl
cmp
ss
push
iret
sub
js
sbb
add
inc
pop
push
enter
inc
push
inc
xlat
pop
xor
adc
aam
add
sub
jne
push
push
dec
cs
mov
inc
push
xchg
mov
int
pusha
cmp
push
in
lock
add
push
inc
push
dec
adcl
movsl
jne
or
lock
lret
clc
mov
inc
ds
gs
enter
pop
or
dec
adc
andl
aam
xchg
std
and
jecxz
and
ss
jl
mov
orb
leave
lock
test
repz
arpl
xchg
icebp
push
and
sti
aas
test
daa
rcrb
dec
cmp
imul
movsl
xor
push
in
rolb
out
imul
add
les
cmp
fistl
test
sti
les
adc
in
imul
add
mov
adc
ret
fmuls
xchg
jne
lret
sbb
mov
add
andb
clc
out
cmp
jne
lcall
xorl
add
jb
enter
test
repnz
nop
lock
enter
add
push
add
movsb
jns
std
rorl
addb
cmp
inc
adc
outsb
xchg
mov
cmp
mov
pop
clc
jl
leave
jo
cmpsl
xchg
xor
shlb
sbb
rcrb
loopne
shrb
or
aam
leave
loopne
repnz
inc
push
inc
push
fwait
cmp
orb
add
mov
les
dec
gs
add
enter
add
daa
pushf
xor
sbb
or
clc
repz
lcall
aam
loope
imul
inc
ret
sub
loope
movsb
mov
aam
pop
cmpsb
and
stos
xchg
stc
inc
mov
hlt
data16
pop
ljmp
pop
push
push
test
stc
cmc
xchg
mov
out
sub
fcomps
test
nop
into
das
adc
or
sub
pusha
mov
mov
dec
xchg
movsb
mov
mov
or
jecxz
add
jp
mov
popa
and
fwait
jmp
add
push
push
add
push
hlt
jge
adcl
or
jg
or
pop
pop
pop
jo
jno
jle
pop
scas
stc
pop
or
movsl
or
cmp
in
rcl
sub
add
data16
fcompl
mov
inc
in
dec
lcall
xchg
fwait
xchg
sbb
roll
aam
ret
fdivs
mov
xchg
fsubl
add
aad
mov
sarl
and
fcoms
rcrb
mov
inc
pop
sbb
call
fmuls
add
xchg
pop
lret
insl
xchg
or
daa
sbb
nopl
add
cmp
add
mov
cmp
jmp
push
pusha
mov
in
or
es
sbb
lods
dec
jne
mov
lahf
adc
push
or
pop
and
fbstp
push
dec
je
sub
sbb
inc
fsubrl
sbb
insl
rorb
mov
xor
mov
push
xor
mov
hlt
jmp
jmp
loopne
cmp
xchg
mov
add
jne
aaa
jno
dec
add
cltd
mov
adc
pop
mov
sub
dec
jb
push
adc
dec
inc
push
push
lods
or
xchg
mov
jo
inc
je
and
mov
cli
mov
add
bound
in
xor
jne
pop
pop
inc
jmp
adc
data16
dec
inc
inc
cmp
sbb
rol
pop
push
ret
xchg
in
cmp
mov
mov
cmc
jg
pusha
jae
mov
in
inc
sbb
xchg
jge
loop
data16
out
xchg
jmp
lock
cli
and
lea
push
rclb
pop
cmp
add
sti
arpl
xor
add
aam
in
xor
mov
mov
jl
push
inc
test
dec
push
and
mov
or
dec
add
or
aam
les
fwait
pop
mov
xchg
sbb
inc
and
pop
andl
dec
xchg
dec
mov
xchg
or
pop
adc
adc
lea
js
test
loop
pusha
pop
es
sbb
or
mov
ret
sub
cs
or
or
inc
mov
into
popa
adc
add
lea
sub
xchg
out
add
mov
cmp
adc
push
xor
lock
enter
filds
sub
cmp
push
clc
rorl
hlt
lock
xchg
ss
xor
pop
jb
push
in
cli
std
and
loopne
sub
push
or
xchg
xchg
lret
or
mov
push
sbb
fdivs
sahf
adc
add
pop
xor
mov
sbb
add
les
leave
xor
or
vpaddusb
fistpll
push
add
lret
je
outsb
ljmp
push
popa
leave
pop
data16
ljmp
mov
daa
loope
xchg
and
inc
imul
push
push
inc
aaa
add
mov
jbe
dec
in
ljmp
inc
mov
sar
add
loop
xchg
add
mov
mov
push
pop
aam
add
push
push
inc
mov
sbb
stc
cmp
push
inc
or
inc
mov
add
sub
add
dec
cmc
jbe
xor
inc
mov
cltd
sub
orb
cmpsl
test
aaa
xor
inc
inc
push
add
ds
adc
add
rolb
leave
ret
lock
or
jecxz
pusha
lea
mov
adc
push
xchg
pcmpgtb
and
lcall
nop
orl
or
push
adc
pop
cmp
jl
xor
lret
into
add
dec
pushf
hlt
mov
ja
sbb
sub
dec
push
loopne
push
fiadds
push
jl
fbld
out
shrl
pop
enterw
movsb
pop
sahf
loop
shrl
push
std
jnp
sub
push
pop
je
push
mov
stc
and
adc
js
sbb
ret
jmp
sub
or
xor
and
sti
or
cltd
jo
mov
je
or
jns
pop
sbb
repnz
push
jmp
push
sbb
je
mov
dec
sub
popa
jmp
int
stos
xor
cmp
push
jne
jl
cmp
mov
pop
insb
push
dec
push
jge
lret
xor
push
jno
dec
lea
shrl
jne
loope
sub
sbb
pop
sub
cmp
ds
bound
test
ljmp
arpl
inc
xor
adc
or
adc
or
adc
push
sbb
imul
idivb
add
movb
cmpb
push
jno
es
lea
insb
adc
je
push
adc
add
fs
stos
or
lock
push
clc
mov
and
or
aad
sub
push
mov
and
movsb
icebp
test
push
mov
aad
adc
push
adc
addr16
jg
adc
aas
cwtl
das
add
jle,pn
loopne
add
cmp
mov
aam
lock
aam
pop
stc
xor
xchg
mov
aam
cmpsb
jb
cwtl
pop
pop
jg
cmp
sub
cmpl
in
lock
mov
push
scas
xchg
and
pop
xor
pusha
test
out
popa
out
xchg
lods
les
insb
dec
in
jge
dec
inc
adc
push
inc
stos
adc
jb
push
mov
or
pop
adc
or
push
xor
push
cmp
aam
push
adc
jne
mov
mov
jmp
sbb
push
add
movsl
in
faddl
scas
push
mov
cmp
adc
jae
xchg
out
dec
mov
push
adc
aaa
lock
or
add
push
js
lods
xor
pop
pop
sbb
es
je
test
lret
add
or
sub
inc
rorb
cmp
pop
in
jnp
add
arpl
inc
xchg
or
push
xor
pop
dec
push
add
test
fsubr
add
or
cld
mov
mov
add
xor
aam
pop
dec
add
jle
adc
add
push
pusha
and
push
add
addb
stos
mov
or
das
cmpsb
shl
fmuls
cmc
mov
cltd
and
lods
mov
mov
js
or
mov
mov
mov
adc
fisubl
aaa
or
decl
push
fsubrs
mov
sub
cmp
shlb
and
sbb
test
mov
jb
add
xchg
mov
daa
jge
iret
rcr
pop
scas
dec
add
shlb
test
jne
mov
mov
sbb
dec
jecxz
imul
push
lea
call
sbb
fisttpll
mov
adc
inc
stos
dec
loope
mov
sbb
pop
fwait
fs
jns
fdivs
stos
jmp
or
movsb
dec
mov
scas
or
inc
rolb
mov
push
fs
insl
xchg
test
mov
popf
sti
cwtl
or
mov
adc
stos
in
fisubrl
sub
loope
and
mov
ss
mov
rcrb
test
add
add
push
out
mov
push
sbb
ret
jne
aad
push
mov
loope
fistpl
inc
adc
or
lret
add
mov
or
rcr
das
icebp
add
iret
jge
popf
xor
in
push
sbb
mov
cmp
pop
mov
mov
stos
loopne
mov
inc
adc
or
imul
test
mov
jne
and
mov
xchg
jmp
push
add
icebp
xor
ja
push
mov
ret
jno
ret
mov
lahf
scas
ret
adc
mov
add
pop
aam
xor
add
sub
mov
lods
and
into
xchg
in
jmp
adc
pop
xchg
insb
add
inc
jle
incl
mov
or
clc
and
jecxz
lret
push
out
ret
fidivl
sub
or
enter
add
fwait
int
adc
mov
fmuls
dec
or
jg
cmpl
popf
rolb
adc
outsb
loope
mov
pop
xchg
mov
fcompl
je
imul
add
inc
add
cmpsb
xchg
inc
popa
ret
cmpl
lahf
rorb
sbb
mov
sub
fwait
outsb
and
inc
and
jecxz
scas
ds
and
mov
jmp
mov
ljmp
mov
decl
adc
xchg
cmp
jl
jp
or
push
push
push
filds
mov
lods
rclb
lods
push
insb
loop
and
arpl
mov
mov
sbb
cli
lea
inc
jp
sbb
movsb
and
xlat
sbb
mov
in
mov
mov
loope
or
xchg
hlt
mov
or
das
movsb
imul
push
push
in
jecxz
shrb
push
pop
movl
push
dec
pop
jb
insb
add
lock
cmp
shlb
rcl
jecxz
mov
inc
movsl
ret
inc
dec
add
loopne
mov
aaa
inc
pop
mov
cwtl
sub
ja
push
pop
orl
adc
fimull
scas
sti
jb
push
push
pop
orb
xchg
cwtl
mov
lds
sbb
rolb
xor
lock
mov
add
mov
jb
and
mov
add
cld
mov
inc
or
xor
mov
sub
movsb
sub
out
push
inc
orl
inc
sbb
imul
mov
lcall
xor
jbe
js
add
pop
or
and
add
mov
or
shl
sbb
xchg
sub
test
mov
outsl
or
sbb
lea
jmp
and
adc
or
inc
ret
push
push
cmp
and
push
add
mov
xchg
pop
leave
jae
arpl
ror
lds
pop
dec
push
adc
popa
and
mov
loopne
cmp
inc
gs
jecxz
mov
inc
xor
sar
sbb
in
push
or
push
lcall
pop
jns
outsb
pusha
push
push
xor
or
loopne
sbbb
adc
nop
insl
push
sub
jno
or
cltd
adc
or
pop
adc
or
sbb
dec
sub
push
les
je
xor
add
fisubl
js
and
push
lret
ret
adcl
sarl
adc
xchg
pop
or
insb
jne
daa
in
xchg
and
pop
mov
mov
pop
push
xchg
or
xchg
push
test
xor
push
mov
add
add
push
xor
enter
fsubrs
cmc
out
dec
add
imul
je
pusha
push
add
adc
js
mov
mov
mov
mov
orl
jns
sub
nop
stos
adc
clc
js
mov
and
sub
lret
or
lock
jecxz
test
arpl
mov
mov
outsl
andb
test
sahf
lock
in
push
push
lret
dec
add
dec
iret
lods
dec
loopne
xchg
das
cmpb
inc
sbb
xor
scas
mov
adc
in
mov
push
in
iret
dec
mov
call
mov
pop
push
push
jmp
push
fsubrl
add
dec
aad
movsb
cmp
stos
xchg
cmp
dec
lock
and
call
add
test
dec
mov
mov
adc
ret
push
in
push
lea
inc
push
pushf
mov
adc
cs
inc
jmp
mov
int3
adc
loopne
and
loop
dec
out
and
jb
fdivrl
or
ret
sub
mov
cmpsl
inc
mov
mov
jge
ret
add
sbb
fsubrl
push
sub
inc
inc
fistl
fdivrs
mov
jge
mov
cmp
imul
add
out
adc
ret
out
xchg
out
and
nop
cld
dec
pop
cmp
stos
lea
add
mov
mov
jbe
dec
jmp
fsubs
xchg
adc
adc
test
or
or
or
cmp
shl
cmp
rcrb
jp
sbb
jl
xchg
pop
roll
add
push
push
fcom
sbb
insb
mov
xor
sarl
pop
lods
test
bound
gs
xchg
push
or
in
mov
xchg
les
push
push
xor
or
xor
repnz
aam
mov
dec
rorb
and
xchg
inc
in
adc
ss
stos
dec
or
xor
test
mov
jmp
or
inc
jecxz
movb
cmp
cld
or
and
cmp
cld
fisubrs
outsl
test
int
or
nop
fstpt
sub
lods
push
shll
xorl
add
shrb
xchg
mov
gs
js
mov
adc
ljmp
lods
cmpsb
mov
test
mov
gs
or
and
mov
test
addr16
mov
add
pop
movsl
in
in
daa
fdivs
push
sahf
mov
push
movzwl
xor
mov
addr16
or
pop
jns
pop
std
mov
movl
fucomip
test
mov
mov
mov
imul
or
ljmp
shl
and
push
or
push
shl
push
in
jg
pop
mov
mov
or
mov
mov
dec
nop
aas
dec
xor
push
fs
mov
enter
ss
mov
nop
mov
loopne
xor
and
jle
aam
push
sahf
lret
sbb
adc
in
adc
or
js
add
lret
dec
sbb
cmp
and
push
sbb
shlb
pop
repnz
in
and
enter
clc
push
add
enter
rcl
loope
xchg
mov
int3
inc
cmp
js
xor
mov
in
jne
popa
and
add
cmp
cs
in
inc
iret
mov
nop
repz
loope
rol
push
sbb
mov
sbb
movsb
scas
or
sarb
or
mov
mov
sti
mov
fsubrp
or
inc
xlat
or
jmp
mov
mov
faddl
cmpsb
inc
mov
mov
movsbl
cmp
sub
stos
xor
cmp
jb
jbe
push
paddb
popf
mov
push
push
mov
or
dec
xor
cmp
mov
dec
popa
inc
dec
roll
nop
hlt
inc
pop
and
shlb
int3
dec
push
loopne
pushw
sub
sub
sbb
pop
push
ss
inc
hlt
inc
add
jle
mov
push
loope
rolb
fldcw
dec
mov
xchg
test
dec
fcoml
jl
adc
and
cmp
add
mov
fwait
sub
scas
dec
insb
sub
adc
sbb
in
pop
outsl
mov
cmp
jmp
sbb
fcomps
adc
pop
push
shlb
dec
ja
or
inc
scas
adc
sbb
add
repnz
push
cwtl
hlt
call
in
in
add
push
pop
jae
in
or
or
jnp
or
jbe
jae
jae
jmp
or
por
jae
jae
jmp
adc
pop
adc
push
adc
dec
jae
jae
adc
dec
adc
aas
pop
jmp
jae
jae
sbb
xor
jmp
sbb
es
jae
sbb
and
pop
pop
jmp
subb
jae
jmp
and
adc
adc
mov
test
ret
add
rorl
orb
out
and
test
sti
lock
jecxz
repz
repz
sti
add
or
adc
and
repz
sub
cmp
repz
inc
dec
push
push
iret
repz
pop
pop
imul
js
addb
xchg
xchg
fwait
mov
pop
enter
add
and
or
or
push
movups
call
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
dec
add
movl
pusha
outsb
adc
icebp
jg
popf
dec
inc
orb
and
mov
mov
push
dec
sti
fstpt
xor
lret
imull
loopne
pop
mov
aam
test
in
out
add
pop
add
push
mov
push
sbbb
sbb
xor
or
cmp
lods
cmp
jb
inc
sti
or
cmp
adc
sub
dec
sub
lea
mov
fsubrl
add
lock
daa
lret
inc
test
hlt
pusha
cmp
mov
loop
shll
cmp
add
mov
insl
xchg
shll
mov
mov
jmp
xchg
pop
and
sbb
sbb
iret
mov
call
sub
loop
fcoml
cmp
mov
aam
mov
pop
mov
adc
cmp
je
dec
rclb
cmp
and
jmp
jecxz
mov
mov
dec
nop
inc
jge
mov
inc
mov
mov
add
push
push
xchg
add
xor
test
aaa
push
xchg
push
sbb
pop
push
push
adc
push
xchg
add
xor
push
mov
rol
mov
ror
push
shrl
stos
sti
shr
xor
pushf
sarl
repz
inc
jmp
incb
js
add
dec
adc
iret
or
insl
push
sub
fisttps
and
xor
add
add
div
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
sti
jg
data16
aam
cli
and
and
mov
push
rolb
leave
xor
or
add
fs
fcmovbe
lcall
mov
movsl
or
push
or
xlat
and
mov
into
add
add
dec
roll
call
jb
rcl
call
pusha
mov
push
xor
xchg
subl
sub
ljmp
rol
rcll
add
movsb
imul
fsub
in
test
add
cmpsb
in
aam
xor
dec
in
shl
in
sub
dec
fwait
push
cmp
data16
add
or
cmp
loopne
cwtl
mov
aaa
fadd
xor
call
rorb
add
call
enter
cmp
dec
shll
pop
cmp
aam
jl
pop
xor
mov
jl,pn
or
cmp
cmp
add
shlb
mov
test
and
call
xor
or
add
and
xor
pusha
xor
push
xchg
lock
and
push
mov
jb
mov
jge
push
ret
push
jo
ficoms
or
les
pushf
xor
or
filds
sbb
addl
jne
mov
pop
aaa
dec
jle
lea
lcall
insl
and
ficompl
aas
outsb
lret
push
clc
jl
push
and
add
shlb
and
cmp
xor
fs
call
test
mov
inc
aam
xchg
fisubrl
arpl
add
cli
and
xchg
mov
rcl
cmp
and
call
in
mov
add
cmp
ss
or
push
xor
inc
or
inc
or
cmpsb
sub
dec
loopne
or
loopne
call
or
or
imul
lcall
adc
add
sub
rorb
xor
jo
in
enter
or
add
dec
cmp
inc
int3
push
es
lcall
add
rcrb
sub
push
scas
push
add
or
and
scas
inc
pop
or
in
aam
data16
xchg
and
sub
pushf
mov
rorl
or
push
add
lds
push
adc
fsubl
push
imul
xor
mov
int3
pop
push
mov
dec
inc
mov
inc
push
movsl
mov
add
or
imul
lods
call
and
cmp
push
mov
push
push
shrb
les
dec
xor
out
pop
add
sub
mov
testb
call
lret
jb
imul
cld
lea
mov
pop
pop
mov
pop
xor
sar
arpl
push
int
orb
loop
incl
lods
movsb
cmc
jnp
rorb
or
or
in
clc
lea
test
insl
fidivl
stos
or
sub
pop
pop
sub
loopne
lea
jmp
arpl
lea
push
sub
xchg
out
data16
mov
ljmp
pop
fimull
pop
jne
pop
and
mov
jge
inc
imul
xchg
fidivrl
aaa
jbe
or
fs
sbbl
insl
cmpl
push
jae
push
pop
rolb
fldl
rep
fimuls
mov
loopne
or
mov
push
pop
fdivp
ror
or
jl
mov
hlt
push
shr
xchg
pop
pusha
test
fistps
sub
cmpsb
pop
push
cmp
inc
pushf
call
mov
insl
jg
loopne
sbb
movb
dec
js
ret
movl
test
mov
popa
enter
cmp
jbe
lods
add
sbbl
cmp
sub
jge
mov
pop
xchg
mov
sbb
xchg
clc
push
ds
in
fildl
mov
daa
lea
imul
cmp
ja
add
mov
or
jbe
mov
stos
mov
and
mov
sbb
lock
enter
sbb
add
adc
or
and
pop
in
inc
addl
xchg
and
cmp
mov
pusha
jbe
push
shrb
sti
rcrb
add
pop
mov
push
and
add
pop
pop
popf
and
push
mov
mov
inc
mov
shl
jno
loopne
inc
pop
stos
xchg
icebp
jecxz
popa
test
int
fstps
insl
outsb
je
fwait
push
mov
lock
pop
add
add
xchg
les
lock
insl
push
xchg
dec
in
or
add
mov
pusha
mov
xchg
xchg
pop
rcrl
fstps
sbb
add
sbb
mov
pop
xchg
jne
lretw
out
adc
jae
adc
adc
jmp
mov
xchg
pusha
mov
add
and
adc
push
cltd
mov
rorb
mov
mov
jbe
pop
movsb
nop
lret
xchg
ja
add
mov
sbb
sub
and
and
dec
xchg
mov
add
inc
jne
rorl
cmp
adc
pop
adcl
mov
icebp
mov
loope
cmp
jl
popl
sub
pop
xor
fcom
pop
xor
std
jle
fidivrl
xor
jbe
cli
es
lea
cmp
popa
sti
inc
or
jg
and
or
js
add
sub
or
or
jne
adc
inc
push
aad
lods
das
jp
or
xor
cmpb
stos
jbe
jle
outsl
or
icebp
jl
dec
pushf
sahf
cmp
push
js
sarb
xchg
mov
mov
pusha
and
push
dec
daa
lods
test
stos
inc
ret
jae
movzbl
adc
mov
and
add
inc
js
inc
das
mov
dec
jmp
dec
adc
push
aam
fcomps
add
ss
push
mov
popl
ret
mov
les
inc
and
inc
shll
sbb
sub
xchg
jo
lods
cmp
pop
hlt
lahf
cltd
ja
mov
cmp
test
loopne
sub
mov
sub
mov
clc
push
ret
dec
and
cwtl
inc
bound
xor
xchg
mov
pop
or
add
and
add
and
add
pop
or
outsl
fs
js
jne
adc
push
fsubs
mov
cmc
mulb
psubsb
pop
push
sub
aam
mov
mov
dec
sti
bound
adc
inc
cmpsl
mov
mov
xor
push
dec
dec
sbb
pop
and
popa
xor
and
fiaddl
add
xchg
add
add
fmuls
mov
mov
roll
bound
je
outsl
out
cld
xor
add
sbb
cltd
lock
enter
mov
rolb
or
or
les
adc
mov
add
mov
incb
sbb
add
dec
sub
enter
incl
pop
popa
and
pop
fstpt
dec
and
push
lods
add
jge
push
fsubrl
pop
ja
mov
add
ljmp
push
jmp
outsl
adc
jmp
jle
push
dec
pop
jne
ret
dec
pop
pop
test
idivb
and
fsubrs
data16
sub
je
push
pop
stos
mov
pop
pop
testl
mov
fstpt
arpl
fnstenv
push
sbb
lret
and
ds
push
sub
sbb
xchg
fwait
push
or
imul
mov
sbb
sub
mov
or
aas
or
inc
push
push
ds
push
push
adc
push
aam
mov
test
add
cmp
outsb
push
ret
inc
rcrb
push
repz
out
mov
lock
inc
call
hlt
xchg
inc
dec
inc
mov
shlb
adc
sub
cmp
push
cmp
dec
leave
dec
add
mov
xor
xor
rorb
sub
dec
xorl
dec
inc
dec
cli
push
xchg
sub
push
jno
push
stc
ret
lea
ss
fwait
dec
adc
scas
unpckhps
call
jnp
pop
mov
push
imul
dec
or
test
jae
aad
daa
lods
mov
sbb
sub
sbb
scas
xor
dec
inc
dec
cmp
imul
dec
stos
mov
push
cmp
and
mov
test
cmp
sbb
cmp
adc
mov
sub
imul
xor
shll
cmp
inc
cwtl
je
pop
inc
pop
inc
inc
rorl
pop
or
imul
sub
stc
push
pop
mov
and
loope
jo
add
adc
test
iret
add
cmp
fnstenv
add
lret
shll
ret
sub
dec
mov
pop
fnsave
shrl
push
mov
or
or
cltd
jae
clc
jo
cld
cmpl
push
cmpsl
mov
dec
adc
inc
and
loop
cwtl
lds
xchg
movsl
sahf
les
xorl
add
push
and
jb
and
push
xchg
es
adc
sbb
sbb
mov
data16
enter
adc
shlb
mov
lock
or
fld1
sub
mov
fimull
push
hlt
ss
cmp
push
jbe
xor
xchg
dec
sub
ljmp
ret
jb
cmpsl
in
je
mov
in
add
cmpl
adc
and
dec
sbb
lods
ja
adc
dec
cmp
scas
jae
add
xor
je
clc
ja
adc
ljmp
push
test
hlt
pop
scas
stos
roll
inc
ja
push
mov
ror
sbb
xchg
xorl
call
mov
dec
inc
mov
xor
jmp
mov
wbinvd
lcall
stc
adcl
and
adc
ds
lds
mov
xor
dec
sbb
xor
or
or
cmpsb
xchg
pop
into
mov
mov
push
xor
push
arpl
mov
xlat
lods
mov
dec
dec
ds
repnz
je
sti
sub
and
arpl
fsubs
imul
and
mov
xor
lcall
mov
ss
jns
dec
jnp
mov
push
inc
and
push
push
or
add
and
and
jg
mov
fldenv
jp
lcall
mov
and
push
and
scas
jb
test
rol
xor
add
rcrl
das
pop
pop
lea
nop
adc
add
and
loop
or
dec
add
xorb
jmp
dec
rcll
imul
and
dec
loop
rolb
pushf
mov
in
cld
mov
sbb
sbb
pop
add
pop
and
xor
fcmovne
leave
sbb
xor
int3
xor
movb
dec
jno
pop
data16
inc
push
cltd
or
out
mov
out
popf
pop
shrb
js
jle
jecxz
es
or
lea
pop
popf
insb
imul
or
mov
adc
push
xchg
adc
or
mov
or
and
cmpl
jne
xchg
mov
cmp
fstl
sti
push
dec
cmp
and
mov
addr16
fldl
and
sbb
fsubr
test
and
and
les
add
das
mov
dec
pop
cmp
je
cmp
pop
sbb
dec
bound
xchg
dec
cwtl
sub
dec
inc
leave
xor
jbe
sbb
jge
xchg
popf
mov
and
xchg
cwtl
int
test
fimull
dec
pushf
popl
mov
sbb
and
jle
sub
sbb
add
test
mov
or
aam
inc
fstpl
or
fisubrl
bound
stc
or
push
mov
pop
fidivrs
xor
push
stos
stc
inc
pop
sbb
xor
ret
sub
push
repnz
fwait
arpl
lods
sbb
mov
pop
mov
stos
or
mov
sbb
enter
and
push
loop
jp
mov
insl
push
addb
cs
je
or
mov
repnz
push
inc
pusha
cmp
pop
cmp
jo
fadds
push
push
or
mov
pushf
les
adc
mov
sbbb
mov
std
push
push
rorl
je
cmp
add
fwait
inc
out
sub
push
cmp
jge
mov
pop
adc
inc
ds
inc
lock
lea
icebp
push
aam
pop
js
or
loopne
nop
clc
add
lahf
shlb
sbb
clc
clc
cld
or
and
movl
and
add
xor
lret
add
push
and
out
or
mov
je
add
mov
dec
jne
mov
and
dec
or
mov
shr
sbb
or
lret
ljmp
xor
gs
and
mov
js
lock
mov
adc
outsl
cmpsb
adc
mov
pop
push
jnp
je
push
add
loop
dec
push
and
mov
dec
mov
add
call
sub
in
add
push
add
clc
push
cmp
jne
sbb
adc
mov
pushf
cmp
dec
xor
jnp
add
xor
add
sub
testb
xor
inc
adc
inc
jmp
sbb
lds
sbb
ret
cltd
idiv
inc
inc
imul
addb
ljmp
add
mov
xchg
add
xchg
fwait
addb
push
add
or
cmp
add
mov
cmp
or
mov
adc
push
push
cmp
cmp
cmp
je
cmpsl
inc
xchg
imul
inc
test
jmp
daa
pop
rol
inc
test
push
cmp
shlb
les
scas
inc
or
pop
inc
sub
ljmp
cmp
jae
call
lea
jmp
mov
stc
lcall
arpl
lock
adc
cmp
je
cmp
push
cmp
mov
add
into
and
jb
push
rol
or
inc
bound
mov
dec
adc
das
mov
push
mov
add
fnstcw
movaps
dec
add
popl
loopne
loop
cmp
mov
push
and
sbb
loopne
adc
sub
push
push
insb
dec
add
mov
sbb
call
jl
push
ficompl
or
jg
mov
jmp
and
jb
xor
inc
push
and
mov
in
mov
add
shl
dec
mov
sub
mov
cltd
movsb
mov
out
mov
inc
ss
jg
stc
lret
int
imul
and
adc
cli
outsb
inc
sub
loop
push
rcrl
add
mov
aad
push
es
out
mov
jle
and
add
pushl
insl
push
sarl
sub
inc
cmp
pusha
mov
jg
in
cli
popa
mov
imul
mov
inc
mov
roll
daa
mov
lcall
addr16
dec
mov
jmp
add
mov
ljmp
pop
das
outsl
xchg
inc
movsb
xor
xor
fsubs
inc
cmpb
arpl
pop
pusha
addl
filds
pop
call
out
jmp
xor
mov
les
xor
xor
mov
push
add
pop
dec
add
mov
mov
das
in
ja
pop
ucomiss
jg
push
shrb
dec
cmp
cmp
out
adc
xor
cli
and
and
fwait
mov
cmp
in
je
roll
cmpsb
pcmpeqb
or
and
mov
mov
push
clc
ja
mov
arpl
hlt
add
or
or
jne
mov
mov
sti
imul
faddl
packuswb
imul
je
xor
push
sbb
sub
or
rcrl
shr
xchg
mov
addb
adc
dec
xlat
ret
in
test
sbb
subl
and
push
mov
imul
in
int3
mov
or
dec
imul
cwtl
xchg
mov
test
mov
js
or
sbb
push
fucomip
pop
js
lock
sub
jge
jne
push
add
pop
sub
or
push
sbb
pop
imul
adc
mov
movsl
push
sbb
inc
shlb
je
jo
les
sub
sub
pop
data16
popf
popf
shrb
and
mov
rorb
adc
test
jp
pop
inc
xor
push
adc
data16
or
mov
rolb
mov
xchg
fnsave
mov
xor
mov
mov
adc
es
xchg
subb
push
mov
sbb
jl
popa
mov
push
pusha
pop
sarb
enter
daa
test
rcrb
pop
xchg
mov
push
movb
or
jo
xor
std
dec
imul
inc
incl
cmp
xadd
or
dec
cmp
leave
or
xor
imul
inc
inc
xorps
and
xor
pop
stc
sbb
adc
nop
jnp
xor
add
inc
ds
cmp
dec
ret
popa
xchg
outsb
mov
push
push
popf
mov
movl
or
push
je
lcall
sub
dec
adc
mov
lea
push
outsl
pushf
sub
or
and
inc
cwtl
jmp
jmp
push
and
loopne
inc
mov
add
cmpb
jne
mov
fincstp
mov
sub
jnp
pop
and
sbb
data16
imul
or
dec
ret
sbb
and
inc
popf
notb
add
lods
sub
lcall
mov
es
sub
dec
aad
cmp
dec
push
xchg
inc
aam
push
xchg
mov
es
push
ja
lret
rolb
cmp
inc
xor
inc
sub
pop
sbb
dec
pop
sbb
ja
int3
pusha
add
pop
repnz
jp
shlb
adc
jbe
mov
pop
adc
call
shll
test
or
jmp
or
mov
mov
mov
dec
dec
jbe
push
xchg
inc
cmp
jmp
pop
push
xchg
sub
mov
lcall
xchg
divb
ret
inc
insb
je,pt
inc
add
and
loopne
xchg
shrb
mov
pop
dec
mov
inc
mov
dec
and
pop
cmp
test
cmp
or
leave
dec
out
xor
add
std
lock
clc
push
mov
adc
jbe
adc
cmp
cmp
insb
sarb
addr16
cmp
shll
aad
push
jo
lock
lock
or
sbb
das
aam
in
shlb
adc
xchg
pop
mov
js
inc
mov
loopne
inc
xor
cli
xchg
sub
add
ror
jne
arpl
inc
push
cmp
rcl
mov
addr16
lahf
and
in
pop
and
outsb
test
sbbb
mov
add
pop
inc
or
addr16
aam
imul
leave
add
fcmovb
lret
sahf
gs
sbb
mov
push
jae
cmp
and
xor
in
sbb
test
xor
call
jmp
push
dec
xor
xor
mov
adc
dec
ret
xlat
aam
and
test
sahf
popa
lea
push
push
or
add
mov
adc
hlt
sub
testl
jae
cmp
inc
ljmp
mov
mov
pop
arpl
push
xor
jne
and
lea
and
pop
mov
out
inc
rolb
arpl
rclb
or
push
dec
cld
minps
dec
add
jmp
cmp
std
lcall
push
inc
add
adcl
jg
fcoml
test
mov
dec
sbb
sub
add
sbb
pusha
js
daa
movsb
mov
pusha
and
pop
inc
movq
push
jecxz
add
cmpl
or
jmp
push
adc
mov
or
sbb
xor
xchg
mov
push
mov
ljmp
jne
fimuls
push
add
jnp
xchg
add
or
in
push
mov
add
add
sbb
cli
iret
test
out
add
xorl
fcomps
inc
stc
cmp
out
sbb
inc
fsts
sbb
or
pop
xor
or
and
movsl
add
or
add
push
bound
jg
fldenv
jns
movsl
xor
loop
inc
dec
sbb
jecxz
mov
data16
jp,pt
ror
leave
mov
pusha
sbb
fcmovne
je
mov
lods
add
enter
pop
jne
cmp
sbb
and
cltd
pop
sbb
pop
push
xchg
adc
test
mov
sbbb
push
rcl
xor
cs
pop
sahf
stos
push
lea
sbb
in
shlb
or
inc
mov
mov
cmp
ret
addr16
loope
add
xchg
mov
pop
push
loopne
jle
dec
inc
ss
dec
push
adc
cmc
in
sbb
fdivl
cmc
jno
or
dec
in
lods
invlpg
and
or
cmp
insb
into
subl
rol
pop
dec
mov
mov
lock
gs
cmp
xor
je
dec
mov
mov
push
loopne
sbb
sub
fcmovnbe
xor
xor
add
mov
sbb
lea
pusha
and
jns
in
adc
xor
pop
inc
sahf
or
xor
lock
pop
ret
push
loop
push
jp
ret
bound
mov
sub
mov
imul
push
fmuls
cmp
xchg
add
and
ss
enter
fsubs
js
test
pop
or
dec
fs
insb
repz
xchg
cmpsb
or
movsb
push
or
aaa
pop
out
mov
pop
call
mov
int
in
outsb
popf
cwtl
lock
sub
adc
xor
cmp
test
push
cli
inc
push
and
adc
sbb
adc
or
daa
movb
movl
add
or
mov
xor
and
and
enter
add
shll
adc
or
sbb
pushf
push
test
mov
xlat
pop
add
int3
xchg
pop
push
push
add
mov
sub
aam
loopne
adc
add
push
rcr
enter
push
test
or
dec
sub
fsubl
pusha
xchg
ss
cmp
call
xchg
push
fadds
fadd
and
pop
pop
js
dec
dec
sbb
or
push
arpl
inc
mov
sub
and
sub
or
std
out
mov
lds
pushf
mov
rcll
fwait
test
fbstp
sub
and
fbstp
push
xor
mov
jecxz
mov
es
cwtl
cmp
add
ss
cmpsl
dec
xor
cmpl
sbb
mov
pop
sub
and
test
jle
mov
jmp
cs
pop
sub
dec
test
jmp
inc
inc
call
or
adc
mov
fmuls
jo
inc
and
inc
xchg
imul
incb
ds
das
pop
push
ret
outsl
cltd
les
nop
jge
jecxz
pusha
mov
and
adc
jbe
jne
popa
dec
rorb
and
or
and
pop
add
leave
lds
test
fistpl
jb
bound
push
pop
nop
xchg
inc
ficompl
pusha
add
insb
jl
lea
inc
xor
push
or
popa
stos
push
lret
fistl
or
jbe
and
push
cwtl
or
ds
je
adc
movb
imul
out
jmp
adc
dec
insb
mov
movl
outsl
jo
dec
cmpl
sti
or
or
and
cmp
sub
shlb
mov
add
ja
repz
cmp
mov
fs
out
test
add
inc
or
or
dec
sub
xchg
into
js,pt
push
cli
es
pop
dec
adc
push
pop
pop
mov
adc
xchg
mov
inc
mov
sbb
inc
clc
inc
cmpsl
jo
cld
out
daa
cld
cmp
rcll
movsb
pop
and
aam
or
sbb
mov
add
and
xor
adc
loopne
mov
sbb
loopne,pt
pop
pop
into
inc
jne
pop
push
inc
add
scas
jae
mov
pop
or
sbb
or
sub
rcll
mov
out
jne,pt
xchg
xor
sub
mov
mov
jmp
mov
jecxz
lea
test
or
hlt
lret
dec
pop
dec
mov
dec
xlat
adc
fwait
pop
sbb
insb
adc
sbb
inc
xor
mov
jmp
dec
mov
add
mov
testb
jbe
and
mov
cmp
dec
loopne
ret
loopne
mov
js
push
adc
aaa
je
inc
sub
loopne
jmp
and
mov
arpl
cmpsb
mov
movsl
push
call
dec
sub
and
jl
jp
cld
or
rcrb
cmp
add
xor
push
repz
out
pop
xchg
scas
adc
pop
inc
add
jnp
cmpl
push
and
scas
jae
cmp
pop
xor
fisttpl
xchg
or
adc
orb
push
hlt
sub
fcoml
push
and
adc
pop
add
ret
gs
xchg
loopne
push
pop
mov
inc
rolb
call
or
and
cwtl
inc
shlb
mov
ss
dec
and
pop
ljmp
imul
shr
add
leave
data16
mov
dec
xor
adc
mov
and
cmp
jb
sbb
push
inc
add
fisttps
jmp
popa
adc
fcmovb
jo
pop
mov
xchg
repnz
aaa
cltd
sub
addr16
push
sbb
sti
jb
adc
sub
insb
aam
jmp
jae
cmp
ja
pop
adc
xchg
scas
shlb
cwtl
insb
pushf
loope
lret
or
sbb
lods
xchg
xor
fdivl
bound
aaa
lea
lods
movsl
and
cmp
jnp
clc
pop
loop
adc
or
cli
jmp
inc
ja
push
js
and
add
lds
mov
testb
lcall
adc
cmp
inc
movsl
mov
lock
dec
les
mov
mov
loopne
push
loopne
cmp
insl
loopne
faddl
testl
insb
gs
addr16
and
push
xchg
push
push
cwtl
subb
inc
add
add
push
adc
dec
xchg
adc
xchg
inc
mov
xor
shrl
pop
cmp
inc
dec
test
inc
push
mov
fs
repz
pusha
arpl
adc
imul
or
in
xchg
mov
fiaddl
xor
arpl
sbb
push
and
fcoms
mov
ret
or
cmp
cmpsb
add
or
andb
fcmovbe
aas
pop
cmp
add
cs
in
or
nop
shr
add
adc
sub
mov
ja
inc
jmp
es
lods
gs
les
push
and
imul
cmpsb
mov
in
daa
or
sbb
popa
inc
pop
xorl
sar
dec
ret
insl
xor
pop
jae
sbb
mov
inc
push
mov
add
mov
cld
sbb
cmpb
sub
xchg
and
in
jb
and
outsb
loopne
inc
jno
push
or
dec
xchg
subl
ret
les
popf
pop
jb
cmp
repnz
enter
sub
je
pop
add
jbe
mov
pop
out
mov
pop
in
pop
xchg
push
push
push
mov
test
int
or
push
aaa
ds
jg
cmc
xchg
cmc
pop
dec
sbb
or
mov
out
dec
lret
inc
mov
pop
mov
cmp
movsb
mov
and
stos
imul
xchg
push
and
popa
dec
xor
loopne
push
adc
in
mov
inc
mov
mov
or
sub
hlt
and
jmp
push
addb
add
lds
mov
sarb
cmp
jbe
push
popf
in
add
push
jl
jmp
das
js
pop
adc
lret
movl
xlat
add
inc
jae
inc
inc
or
or
push
mov
test
inc
cwtl
sbbl
push
inc
ret
daa
inc
and
inc
inc
xchg
mov
xor
test
lcall
js
or
or
or
dec
jo
test
mov
xchg
or
adc
sbb
sub
scas
lods
inc
mov
xlat
sub
sub
inc
jo
ljmp
inc
dec
out
push
and
cmp
rorb
loopne
jecxz
jno
mov
in
or
push
bound
xor
data16
xchg
xorb
push
inc
pop
andb
imul
dec
shll
mov
inc
je
cmp
jne
push
mov
out
mov
mov
lret
jne
mov
ds
cmp
push
in
js
in
dec
mov
inc
push
xor
pop
testl
inc
or
inc
sub
ljmp
xchg
jmp
lods
push
dec
or
adc
inc
popf
fidivs
cli
push
adc
popf
dec
jo
sub
or
lea
nop
add
mov
in
mov
xchg
cmpb
mov
andl
into
mov
fisubl
in
fistl
jo
orl
or
add
or
push
movsb
pop
push
adc
jecxz
and
jbe
lahf
xchg
cmp
push
shlb
adc
sub
shrl
or
fidivl
bound
sahf
add
adcl
das
pushf
data16
mov
test
dec
jle
int3
add
rcr
and
add
imul
or
or
push
cmpl
add
cmp
jb
neg
les
sbb
mov
mov
jne
hlt
sarl
add
or
xchg
fsincos
aaa
and
push
rep
mov
dec
ljmp
ret
or
insb
push
icebp
dec
inc
add
shrb
cltd
mov
outsb
mov
sbb
daa
rorl
or
ja
inc
push
push
jne
sub
rep
lea
inc
xor
test
out
mov
aaa
jle
or
add
pop
scas
adc
mov
outsb
aaa
adc
pop
push
pop
and
sbbb
stos
js
mov
fnstcw
xor
and
ljmp
fs
pusha
jmp
xlat
mov
movapd
das
mov
out
clc
jae
xor
jle
xor
cli
shlb
lret
je
cmp
jge
push
jge
repz
or
jg
ljmp
adc
jnp
mov
sub
aam
ret
or
js
je
clc
adc
sbb
fisubrs
ret
mov
lock
mov
mov
shl
pop
enter
scas
int
add
sbb
dec
sahf
repnz
sbb
mov
pushf
push
mov
leave
iret
into
mov
or
movsb
and
std
xchg
add
rolb
pop
add
mov
mov
je
mov
jb
test
mov
lret
mov
lcall
xchg
rol
std
add
cwtl
sbb
rolb
and
mov
push
and
ficoml
dec
pusha
sti
push
dec
subb
add
cmpsl
adc
jg
jb
sbb
cmpsb
add
pop
std
mov
push
sub
shrb
lock
ja
mov
aas
lea
je
adc
push
jne
inc
cmpb
out
addb
fiaddl
pop
jo
mov
inc
inc
into
pushf
and
loope
adc
and
or
mov
cmp
ljmp
push
gs
in
add
into
clc
jmp
mov
sbb
dec
xor
outsb
xchg
mov
dec
xor
pi2fw
add
or
in
fisttpl
leave
mov
dec
bound
adc
mov
mov
dec
dec
jo
jno
adc
xchg
adc
push
fstpl
cmpb
jns
sbbb
aad
jmp
sbb
inc
push
test
inc
aaa
icebp
mov
pushf
fsubs
push
sbb
movb
dec
cmp
sbb
pushf
pop
addr16
sbb
sbb
sbb
sub
xor
sbb
call
test
jb
rcrb
dec
iret
movl
pop
out
mov
xchg
dec
incl
push
frstor
pop
and
jp
cmp
jmp
scas
fwait
add
pand
out
pop
lods
fwait
inc
testb
or
divl
orl
fwait
jmp
push
jb
push
xor
aam
mov
lret
jle
sbb
out
int3
divl
or
scas
pusha
inc
adc
add
xchg
sub
dec
sbb
inc
int3
mov
sbb
clc
sahf
inc
mov
push
add
je
push
or
lock
sub
fdivrl
bound
inc
sub
mov
or
pushf
test
push
pop
dec
inc
mov
dec
jb
push
push
rolb
call
out
lretw
pop
add
mov
je
pop
sarb
and
ret
add
je
jae
sbb
lods
enter
dec
and
pop
out
clc
lods
push
cmp
jns
adc
pop
cmp
add
loopne
jmp
xor
loop
pop
enter
mov
mov
dec
add
rcrb
mov
loopne
movsb
adc
pop
cwtl
add
imul
paddsb
inc
scas
icebp
pop
inc
inc
mov
xor
rolb
out
jne
insl
cmp
add
aad
sbb
icebp
outsb
loop
and
cmp
imul
add
testb
je
inc
mov
cmp
or
testb
es
loope
or
cmp
jne
aaa
aam
les
jb
xor
mov
mov
jne
inc
aaa
push
lds
inc
xchg
fcomps
mov
push
loope
and
je
push
mov
fs
pop
mov
mov
inc
stos
inc
xchg
jge
mov
add
cmp
sbb
and
or
jl
cmp
and
add
pop
jne
call
movsl
test
cld
jg
push
cmp
jb
rep
jmp
cmp
xlat
dec
mov
mov
add
test
lea
sahf
sti
ficoms
or
mov
shrl
pop
sub
data16
or
lods
adc
enter
lea
dec
add
dec
cmpsb
nop
inc
xor
fiadds
mov
or
stc
cmp
repz
sbb
or
cld
gs
jmp
in
inc
in
call
sahf
in
in
lock
hlt
or
clc
cld
popa
clc
and
loopne
fs
add
sbb
jns
cmp
pop
push
fs
imul
xchg
xor
add
jno
fsubs
push
lea
jl
cld
mov
and
std
cld
out
fsubl
push
neg
adc
mov
enter
pop
nop
lock
movups
fiaddl
jl
pop
push
fldcw
out
add
lret
mov
push
out
push
add
outsb
in
xchg
mov
xor
insl
out
mov
jns
fwait
cwtl
mov
or
push
mov
out
mov
sbb
sahf
out
sbb
sbb
out
sahf
out
adc
or
jns
or
inc
xchg
lods
clc
fsubrp
or
push
add
sbb
sub
add
push
inc
pusha
mov
daa
ja
xchg
je
cltd
push
jl
sbb
stos
jae
adc
das
jmp
imul
add
je
sahf
or
jno
jg
sbb
cmp
jae
sub
stos
test
call
xor
cmp
mov
sub
push
mov
or
sbb
dec
iret
sbbb
xor
push
cltd
adc
loopne
subps
cmp
bound
and
cmp
loop
mov
pop
fists
daa
ret
xor
or
iret
adc
mov
cmp
xor
lds
inc
test
enter
cmp
mov
add
mov
cmp
fbld
pop
sub
push
sub
test
mov
jbe,pn
push
btc
mov
cmp
and
or
mov
dec
adc
cltd
pop
lret
sbb
cmp
fs
or
js
loope
pop
fisttpl
jle
inc
sbb
mov
popa
mov
sub
push
dec
push
jbe
sub
pop
mov
jle
cmp
pushf
mov
cmp
pop
push
push
cmp
add
jmp
in
mov
cmp
jne
push
adc
or
add
mov
adc
sbb
and
add
shll
cmp
clc
cmp
lods
ds
inc
test
xchg
push
push
add
inc
movsb
es
and
cs
xor
push
jne
cmp
addr16
hlt
dec
pop
pusha
inc
out
or
xor
mov
cmp
push
inc
pop
ljmp
adc
fnsave
mov
rorl
loop
mov
call
dec
and
fcoms
iret
shrb
pop
mov
adc
pop
movb
lret
loopne
xor
aas
dec
jns
xchg
xlat
pop
mov
shlb
adc
and
fbld
or
fnsave
or
loope
pop
xor
inc
fdivl
add
shll
shlb
xchg
inc
daa
lock
loope
cmp
pop
mov
lea
mov
in
xor
mov
clc
push
push
and
out
jb
add
mov
mov
enter
mov
sub
call
out
xlat
adc
add
pop
lea
sbbb
add
jg
pop
inc
shll
loopne
js
push
and
pop
ljmp
fwait
mov
jmp
push
sub
loopne
dec
inc
out
jl
inc
cmp
jecxz
pop
dec
or
popf
icebp
lds
or
pop
call
sub
mov
adc
push
cs
mov
mov
aaa
pop
sbb
add
push
xchg
or
test
inc
fcoms
sub
fnstsw
sbb
mov
or
mov
adc
sbb
jp
orl
fadds
lock
sbb
cld
jb
jae
inc
ljmp
xor
add
and
and
clc
es
add
sbb
jmp
lods
mov
jo
pop
loopne
adc
jmp
test
jp
mov
clc
cmp
xorl
ja
ret
jbe
inc
in
add
xor
add
and
pushf
pop
or
and
add
imul
pop
es
aam
test
out
pop
pop
or
mov
cmp
add
rcrb
add
or
cmpb
pop
push
rolb
mov
add
inc
xchg
cmp
add
cs
add
push
sbb
add
loopne
pusha
scas
pop
and
xchg
push
adc
hlt
or
jb
jp
push
pop
add
pusha
sbb
xchg
roll
movsl
add
sbb
add
or
insb
sbb
xor
inc
dec
push
iret
rep
fnop
inc
sbb
test
shl
mov
cmp
ret
cwtl
shll
or
mov
cld
xorb
dec
in
inc
cmovae
jno
out
shlb
enter
or
rclb
pusha
mov
inc
es
loopne
frstor
rol
mov
aam
ret
ds
iret
repnz
add
adc
or
js
daa
dec
jne
mov
xchg
jmp
ds
icebp
inc
sub
adc
dec
push
push
ret
dec
jne
mov
fadds
adc
loope
sbb
push
orb
mov
pusha
sti
enter
adc
stos
movsl
std
adc
bound
ret
rolb
cld
push
outsb
into
add
ljmp
sbb
push
cmp
jne
mov
rcr
mov
jne
es
pop
int
int
and
adc
or
mov
jne
add
jb
jmp
push
inc
incl
dec
into
repz
cmp
inc
div
sub
xor
cld
cld
jmp
fldt
adc
in
adc
adc
inc
inc
inc
test
xchg
push
out
pop
mov
pop
mov
repnz
cli
adc
and
push
adc
add
inc
mov
out
dec
subb
dec
sub
and
ljmp
or
pop
inc
loopne
int
xor
or
movl
xor
and
add
and
or
inc
push
or
and
movsb
xchg
mov
pop
orl
in
or
dec
fs
gs
int3
ss
push
ret
mov
pop
add
xlat
push
mov
and
dec
jnp
and
jg
sub
mov
je
mov
rorb
cmp
jg
add
inc
sub
add
scas
cltd
les
je
decl
pinsrw
push
push
push
pushf
mov
mov
call
inc
mov
out
movsb
or
dec
fs
loope
sub
inc
dec
add
lea
pop
mov
inc
push
add
mov
fwait
jmp
inc
mov
pop
mov
mov
sub
and
pop
mov
mov
imul
or
dec
mov
add
mov
add
push
shlb
ficoms
aas
mov
push
rcrb
call
popa
xchg
out
sbb
push
mov
pushf
in
hlt
mov
or
pop
jecxz
sbb
pop
push
insb
adc
xchg
or
adc
add
sub
or
movsb
sbb
fdivs
outsl
sub
ja
add
not
and
sub
shrb
outsb
cmp
or
imull
sbb
inc
clc
sbb
cmp
xorb
mov
lahf
lock
xchg
inc
add
inc
sub
int3
cwtl
cmp
ja
jne
lcall
push
lcall
xchg
jmp
stc
and
mov
xchg
clc
mov
mov
lea
neg
mov
sbb
clc
neg
inc
cli
or
add
jmp
or
mov
inc
inc
push
int
jge
xchg
loope
sbb
scas
cld
fwait
jmp
mov
add
mov
inc
cmp
jb
add
jae
mov
dec
rolb
inc
mov
lods
mov
or
ret
push
jb
or
pop
testb
cld
into
shl
xlat
adc
add
jmp
lcall
jmp
fadds
outsb
outsl
andb
mov
mov
into
and
xor
dec
stc
and
xor
add
iret
xor
jo
and
ljmp
add
out
jne
or
insl
ret
inc
cld
jl
rolb
pop
ss
cmp
je
cmpsl
add
or
add
jns
adc
xchg
pop
movsb
push
imul
std
cld
sbbl
add
les
fidivl
and
out
xor
lock
js
jl
in
mov
call
inc
or
jl
and
lret
aaa
dec
xchg
adc
add
pusha
es
xor
sbb
inc
arpl
add
pop
mov
inc
jmp
cmp
mov
add
add
sub
or
and
stos
mov
adc
cmp
cld
push
xor
popf
push
in
adc
hlt
js
or
mov
adc
in
jne
int3
cmpsl
mov
add
mov
sbb
sbb
lods
adc
mov
test
push
mov
sub
mov
and
je
lret
sbb
push
incb
je
lea
push
sub
shrb
lock
or
cmp
cwtl
sub
add
and
push
mov
sbb
rclb
mov
adc
shl
cld
std
mov
sbb
adc
lds
xchg
sbb
mov
es
xorl
add
subb
jmp
adc
in
ret
push
mov
mov
scas
cmp
adc
xor
jne
test
shl
or
or
inc
mov
dec
jne
fs
add
add
rorb
adc
mov
addb
movsb
aas
es
mov
mov
add
jp
push
popa
push
inc
pop
push
movsb
adc
orl
cmp
add
add
es
dec
pop
mov
call
icebp
sbb
cmpb
adc
notl
pop
xor
adc
ljmp
jne
jbe
add
imul
jno
les
nop
mov
adc
adc
icebp
lea
push
adc
in
mov
js
pop
dec
ss
adc
repnz
enter
inc
jle
xor
mov
mov
mov
mov
imul
and
inc
je
sti
sub
push
pushf
xor
pop
adc
mov
minps
sub
jne
or
pop
fildl
jno
lds
repz
xlat
movsb
mov
mov
cmp
push
dec
inc
enter
popa
xorb
or
push
aaa
in
in
inc
stos
xchg
xchg
push
int3
mov
and
sub
dec
ja
or
out
jmp
mov
test
jbe
push
pop
cli
mov
add
cld
add
mov
jo
dec
aam
stos
push
or
pop
pop
jp
cs
cmp
nop
clc
in
inc
jb
hlt
xchg
insl
movsl
scas
nop
inc
push
inc
jecxz
inc
pop
test
cltd
sub
add
call
add
fdiv
dec
cmp
repnz
mov
inc
shlb
add
daa
fidivs
fcomps
push
clc
rcrb
cmp
or
out
inc
xor
gs
rcrb
cmp
adc
aam
stos
add
push
push
clc
ljmp
sbb
insb
push
dec
loop
or
add
sbb
dec
jle
mov
les
pop
jp
in
ja
btr
outsb
mov
and
push
push
xchg
pusha
dec
jns
add
adcl
dec
shrb
outsb
inc
les
jmp
movl
outsl
int
loopne
jne
dec
clc
in
push
fmull
je
push
insb
push
data16
pop
mov
cmp
pop
addl
jle
dec
xor
or
jne
pop
shrb
in
jo
pcmpeqd
hlt
push
mov
idiv
decl
mov
stos
mov
add
pop
stos
push
jne
and
popa
push
mov
pusha
add
xor
adc
rcll
xor
shrl
sub
ficoml
dec
loopne
dec
addr16
xchg
cmp
push
imul
mov
daa
xchg
mov
inc
in
push
loop
mov
in
add
mov
outsb
loop
xor
push
in
sbb
sub
jle
adc
or
repnz
sahf
out
hlt
add
or
inc
ficoms
test
mov
ret
cli
xchg
loopne
mov
int
lock
rolb
jecxz
add
call
stos
mov
fists
cmpsl
sub
mov
and
sbb
adc
xor
test
xlat
jecxz
cmp
cmp
repnz
aaa
sbb
pushf
iret
inc
adc
push
push
sbb
pop
inc
xor
idiv
adc
setge
add
subl
adc
in
sbb
dec
sbb
popa
dec
ret
hlt
call
sti
aam
jmp
dec
je
add
or
jp
cli
dec
jne
push
pop
jae
push
or
imul
insl
sbb
add
jmp
sub
push
lea
push
cltd
fdivs
or
adc
cmp
push
icebp
fbld
push
ljmp
test
adc
mov
idiv
push
add
cmp
cmp
xchg
in
push
ds
jne
push
jb
addr16
add
dec
orb
mov
por
jmp
xchg
test
adc
cmp
and
sbb
add
cmovp
pop
jns
mov
or
jo
inc
adc
imulb
add
pop
cld
push
dec
jmp
xchg
jbe
orl
leave
add
ja
mov
jmp
rorb
add
dec
jno
jae
push
mov
sub
movsl
push
mov
pmuludq
mov
loopne
sub
push
mov
push
fmuls
inc
push
adc
enter
rol
cmp
sahf
jae
sub
or
or
add
movl
sub
jl
adc
push
sbb
pop
scas
mov
loope
mov
out
jo
ss
cli
xor
lea
sub
fmuls
mov
sbb
mov
add
adc
imul
dec
fstl
ret
rcr
test
adc
clc
shrb
je
or
dec
and
sbb
shl
sti
repz
add
jle
fldl
push
pusha
ss
xor
rorb
jnp
xchg
and
dec
js
sbb
enter
addr16
sbb
loopne
xchg
push
pop
int
add
fs
mov
decl
das
scas
pushl
shl
or
push
add
lcall
pop
jbe
lcall
dec
push
pop
sub
adc
xorb
jge
hlt
cmp
push
dec
push
xor
sub
outsl
mov
jo
xrstor
into
cmp
lret
push
push
add
imul
jmp
inc
lods
push
test
pushf
movsl
stos
sbb
xorb
or
cmp
jecxz
mov
rcr
xchg
cwtl
loopne
add
push
shll
pop
push
push
mov
add
inc
cmp
sti
cmp
adc
stc
xchg
clc
push
mov
stc
mov
sub
cs
cmc
mov
notb
imul
add
sbb
jge
sub
sub
pop
adc
in
cmpsl
je
cmp
arpl
daa
das
adc
sbb
push
subb
cmp
outsb
test
jmp
dec
or
mov
cltd
pop
inc
mov
lds
adc
out
imul
inc
or
clc
sbb
rcrb
mov
xor
push
ljmp
insl
push
popf
add
adc
push
ret
shll
push
mov
and
jg
add
xchg
rol
add
stos
xor
mov
imul
mov
lret
inc
dec
mov
jo
inc
cmp
fiaddl
stos
adc
test
pushf
out
cmc
shr
adc
in
fadd
and
or
dec
cli
push
orb
pushl
lea
lret
mov
mov
mov
fs
cwtl
mov
push
push
insb
xorb
stos
xchg
cmp
cltd
xchg
jnp
mov
inc
sbb
cmp
adc
sbb
in
test
sti
ljmp
pop
movsb
adc
stc
cmpsb
mov
movsb
sbb
inc
sbb
mov
sub
outsl
in
pop
cmpsb
rolb
pop
mov
sbbb
movsb
jb
jge
call
cmp
and
les
jp
adc
imul
dec
cmp
lahf
push
and
jmp
adcb
lret
lcall
jbe
adc
insb
xchg
ficoms
subb
dec
cld
jmp
sbbb
out
mov
mov
sub
and
inc
push
je
fs
loopne
mov
sbb
add
xchg
sbbl
out
lea
cmpb
mov
dec
dec
call
or
inc
push
lock
sbb
adc
popa
daa
insl
loope
jmp
pop
xor
test
xchg
cmpb
mov
or
rcrl
repnz
sub
or
lock
fsubrl
inc
sub
jmp
in
mov
dec
mov
adc
test
jecxz
je
scas
cmp
fisttpl
cmpl
fs
cmp
jl
add
imul
popl
push
mov
inc
aad
xchg
xchg
out
dec
lret
mov
pop
mov
push
aad
mov
daa
and
add
add
lcall
add
mov
sarb
inc
jl
repnz
push
in
adc
xor
mov
mov
lods
dec
push
cmp
fldl
pushf
xchg
mov
and
iret
test
lcall
ud2
sbb
jmp
lds
clc
mov
pop
in
jb
nop
or
pusha
loop,pn
cmp
jo
xchg
push
mov
popa
mov
sub
jmp
jns
mov
push
and
xor
inc
jl
cmp
nop
jmp
mov
or
bound
pushl
movsb
cmp
ret
imul
nop
test
or
cmp
sbb
pop
sbb
cmpl
cmp
pop
inc
icebp
sbb
roll
testb
jne
pop
stc
sbb
or
xchg
mov
add
cli
pop
insb
add
mov
inc
mov
sar
testb
jne
push
sbb
fnstenv
loopne
lea
jge
mov
and
outsb
jne
daa
add
adc
stos
mov
movsb
outsl
pop
mov
test
mov
push
hlt
sbb
lods
addr16
add
sbb
popf
push
mov
cltd
or
jmp
idivb
cmpl
fbstp
dec
test
mov
xchg
pop
jns
orb
inc
mov
xchg
mov
loop
pop
pusha
adc
and
mov
ret
push
add
out
mov
data16
or
dec
testb
movb
or
subb
cmp
test
andl
inc
loopne
test
push
cmp
jo
lcall
fcom
cli
and
sbb
mov
mov
out
adc
mov
rorl
inc
and
add
lods
jo
jb
test
pop
std
movb
jmp
mov
xor
sub
std
add
fmull
rolb
push
push
push
adcb
mov
cmp
loopne
xchg
push
dec
pop
cmp
mov
mov
push
mov
or
or
repnz
ret
sbb
repnz
dec
pop
leave
adc
and
and
nop
mov
in
test
addl
cwtl
out
iret
lret
xchg
xor
mov
lret
lret
or
test
iret
sub
mov
lods
movsb
mov
test
mov
mov
movl
cmp
es
and
dec
stos
inc
sarb
mov
dec
mov
test
loopne
sbb
call
out
cmpsl
cltd
dec
sub
push
aad
pushf
fmull
xor
lock
inc
add
mov
dec
je
shlb
ss
cld
sub
shlb
sbb
jo
movsb
xchg
andl
cmp
movsb
mov
jo
pop
push
xor
in
and
loopne
fsubl
gs
fcomps
int3
das
das
mov
or
test
insl
cmp
das
movsl
shrb
mov
ret
or
pop
add
hlt
fisttps
xor
aaa
dec
cld
xor
mov
adc
adc
and
xchg
xor
insl
push
jne
adc
dec
stos
repnz
jmp
aad
iret
or
in
and
mov
pop
adc
inc
test
mov
pushl
sbb
pop
incl
sbb
int3
inc
xchg
pushf
xor
add
in
adc
movsb
jne
and
push
push
aas
popa
sub
or
dec
or
jne
jp
xchg
xchg
test
cltd
jecxz
mov
push
mov
test
jge
out
mov
mov
adc
or
mov
jbe
push
inc
fisubrs
aam
sub
lock
pusha
notl
pop
inc
jp
mov
pop
mov
pop
divl
movsb
push
push
or
dec
and
cwtl
ss
rcrb
clc
dec
cwtl
lock
push
jne
ret
cmp
and
jns
loopne
add
stc
rolb
sarl
arpl
dec
repnz
push
pop
inc
jecxz
lock
adc
and
das
push
or
push
mov
mov
cmp
inc
xorb
jmp
push
add
pusha
and
and
leave
fstpl
adc
inc
aaa
push
mov
add
sbb
cmp
mov
dec
sub
fstps
pop
mov
or
mov
hlt
fadds
aam
xchg
stc
fidivrl
mov
popf
jne
aaa
inc
cmp
or
or
inc
or
or
or
shrb
in
or
cld
or
pop
mov
sub
add
cmpl
dec
sar
add
mov
loopne
pop
ja
pop
sbb
aaa
cwtl
movsbl
fildll
fcompl
test
push
sbb
pop
sar
pop
sub
lahf
xor
or
and
and
shlb
mov
lea
mov
cs
mov
add
pusha
fisubl
lret
dec
mov
add
mov
xchg
or
ret
and
push
pop
add
jnp
mov
rcll
push
sub
or
mov
adc
cs
cmp
js
mov
adc
clc
arpl
dec
lea
sbbl
ja
movsl
mov
mov
dec
es
adc
adc
movsl
hlt
hlt
stc
and
push
or
inc
insb
push
fdivs
cmpsb
jbe
test
outsl
movaps
ds
push
mov
sub
jbe
sbb
adc
and
in
ss
js
add
jo
imul
xor
pusha
lahf
aam
movsl
nop
incl
fisubl
sbb
imul
outsl
and
xchg
out
adc
movsl
inc
pop
add
and
mov
xchg
mov
lcall
push
sbb
js
sarb
inc
je
pop
push
sti
ds
inc
test
add
xor
mov
inc
sub
or
jp
or
adc
test
lea
arpl
push
call
rorb
aad
ljmp
jnp
add
clc
ds
dec
and
in
lock
push
xchg
or
mov
in
mov
ror
sbb
add
add
adc
push
stos
mov
adc
insl
cmp
cmp
lahf
jl
xor
xor
cmc
add
jmp
pushf
sub
jecxz
cmp
loop
pop
dec
mov
and
push
cmp
movsb
test
mov
push
leave
push
add
aaa
mov
push
mov
lret
lcall
cmc
das
psraw
sti
outsl
lret
jmp
mov
inc
lods
hlt
xor
pop
dec
lods
pop
xchg
adc
dec
outsb
xor
push
stos
mov
je
pop
cmp
in
cmp
pop
ret
out
push
sbb
lcall
jo
push
sbb
and
mov
adc
jmp
mov
outsb
je
arpl
mov
sbb
jo
hlt
je,pt
xor
out
gs
test
pusha
ret
mov
xor
cmp
dec
xchg
daa
sub
adc
xchg
inc
fisttps
mov
sbb
or
and
sahf
mov
cmpsl
shl
cmpsl
add
stos
jp
fcoms
shlb
add
mov
hlt
jmp
cmp
jle
lahf
jecxz
popf
imul
test
pop
push
inc
cmpsl
repnz
sbb
in
cli
or
or
aam
lods
lock
nop
cmp
jmp
pxor
rolb
movsbl
leave
pop
dec
fbstp
popf
lea
xor
or
adc
inc
sub
add
mov
movsl
push
push
push
pushf
inc
scas
popf
mov
sbb
inc
push
push
sbb
sub
inc
jg
mov
lea
aam
mov
jae
imul
cli
mov
jo
mov
push
inc
daa
add
mov
jnp
push
insb
jle
loope
adc
imul
xor
cmp
bound
sub
scas
lock
and
jae
or
push
or
jmp
xchg
sub
cltd
fwait
sub
ficompl
sbb
pop
jl
add
jae
adc
mov
mov
adc
or
jnp
or
sbb
jge
daa
js
les
mov
or
es
ficomps
aaa
popa
lea
or
xor
std
xor
rolb
push
push
push
mov
xor
aas
repnz
sahf
cmpsl
clc
push
push
mov
jmp
sub
xchg
mov
sub
inc
cmp
daa
or
cmpb
je
nop
add
into
shlb
or
sbbb
movsb
adc
sub
mov
insb
add
mov
pop
and
sub
sar
int
sbb
fwait
add
push
mov
or
add
sub
sub
push
push
mov
adc
push
cmp
mov
mov
inc
or
sub
test
jne
jmp
or
push
and
dec
push
fmul
mov
out
xchg
add
ficoms
mov
sub
mov
pop
aam
lahf
push
fwait
lret
lods
or
sub
addr16
lret
pusha
mov
xor
mov
cmp
arpl
fildl
in
rolb
imul
shlb
fadds
stc
sbb
and
xchg
rorb
xor
add
mov
mov
cs
subb
jge
push
lock
rorl
mov
cmp
jl
mov
cmp
gs
cmp
cld
jb
mov
arpl
adc
ret
mov
sbb
popa
sbb
into
mov
add
addr16
mov
lods
jae
inc
mov
pop
rolb
mov
stc
push
jle
lret
test
nop
popa
fwait
int
imul
fisubl
lcall
xorb
or
dec
push
movsl
data16
pusha
dec
insb
add
cmp
gs
or
jo
mov
sti
cmp
or
out
mov
int3
int3
push
or
pop
ret
adc
mov
or
pop
inc
mov
push
jbe
adc
add
test
mov
jle
push
xlat
or
cmp
nop
sub
mov
push
jb
sbb
pop
in
pop
divb
add
test
xor
data16
mov
pop
jno
push
mov
xchg
xchg
sub
and
inc
and
idiv
arpl
or
dec
and
and
xor
mov
inc
add
shll
inc
add
fwait
sub
and
push
pusha
lods
scas
out
hlt
pop
dec
cmpl
cld
ret
bound
mov
pusha
add
out
inc
clc
mov
dec
call
pop
add
rorb
ret
and
cld
jge
dec
push
rolb
test
lahf
sti
push
dec
outsb
in
sbb
pushl
insl
and
out
pop
call
lahf
xchg
test
jp
add
sub
mov
ljmp
cld
push
cmpl
inc
mov
adc
mov
add
out
loopne
push
loopne
loopne
mov
dec
loopne
xchg
js
xor
ljmp
imul
or
xchg
lahf
inc
mov
cwtl
mov
jl
add
pop
or
and
icebp
int
rcrb
wbinvd
and
mov
pop
inc
mov
push
jb
loope
fstl
and
xlat
add
enter
push
popl
xchg
cmc
jbe
add
call
subb
adc
pop
jno
mov
pop
pop
and
push
jo
nop
xorb
push
xor
lock
clc
push
insb
test
pop
push
fldcw
inc
jecxz
stc
movsbl
out
add
aas
xchg
mov
xor
mov
adc
mov
push
dec
xchg
es
ss
nopl
sub
push
fsubr
mov
sbb
enter
sar
sbb
adc
pop
sub
shl
sub
adc
mov
add
stc
mov
movsb
jne
int3
mov
rorl
sti
add
outsb
push
cmp
pop
push
add
movsl
icebp
mov
or
loop
fbld
jl
inc
lcall
xchg
xchg
mov
ret
sbb
push
pop
dec
add
jb
or
loop
stos
add
out
jo
push
add
mov
std
cmc
jo
xor
push
in
pop
imul
nop
lods
push
sub
adc
shll
jo
icebp
pop
add
inc
out
fnstenv
mov
inc
push
fwait
sbb
pop
xchg
sahf
pop
push
ret
fistpl
inc
lret
pop
jl
and
jle
xchg
adc
hlt
sub
pop
mov
insb
int3
push
lret
movsl
mov
imul
movsl
punpckhbw
cmp
sbb
lea
loopne
xchg
frstor
mov
mov
rclb
mov
dec
mov
lock
push
mov
and
test
ret
daa
mov
xor
jb
add
xor
cmpsb
jo
adc
iret
xor
popa
lods
pop
jbe
sbb
pop
lea
sub
sbb
adcb
jle
cld
mov
rcrb
sti
sbbb
and
jle
cld
dec
xchg
inc
mov
jo
sub
xor
js
add
push
call
add
dec
dec
ds
ror
andl
cmp
movsl
add
mov
jo
jmp
cmp
cmp
mov
cmp
add
mov
add
in
jp
push
into
pop
fidivl
addr16
and
and
inc
push
sbbl
mov
cli
lock
shrb
rcl
sub
outsb
add
and
mov
adc
or
xor
icebp
outsb
xlat
imul
adc
add
mov
or
and
add
xor
pop
out
sub
out
push
or
cmp
dec
outsb
inc
pop
adc
push
inc
sahf
or
incl
mov
sub
inc
xor
mov
shrb
call
jbe
js
mov
inc
shlb
inc
shlb
lods
xor
popf
in
lods
clc
imul
bound
sbb
sub
sub
cmpsl
push
stos
loop
fcmove
je
call
sbb
les
adc
jno,pn
sbbb
cmp
jl
bound
js
ret
sbb
pop
mov
xor
xchg
mov
test
mov
aaa
or
outsl
sub
or
aas
je
ja
stc
inc
mov
add
xor
jnp
call
dec
xor
and
shr
mov
fmul
mov
or
jbe
aas
pop
add
fdivs
lea
or
add
mov
ret
add
adc
jbe
cmp
cmp
mov
xor
lret
nop
fstpt
nop
outsl
fnstsw
push
cmp
mov
fisubrs
fistpll
insb
jne
xlat
xor
jp
or
in
pop
mov
pop
and
jg
push
mov
jno
outsb
sub
xor
cmp
cmp
inc
cmp
xor
and
xchg
xchg
out
aam
rclb
in
sbb
mov
sbb
add
xchg
outsl
xor
sbb
push
ljmp
lea
es
lods
mov
sbbb
sbb
leave
mov
sub
mov
iret
outsl
fstps
adc
stc
fcmovne
jo
dec
inc
mov
sbb
lret
nop
mov
movsl
sahf
jne
rcrl
insl
hlt
outsb
sbb
sbb
and
shrb
sbb
mov
mov
popa
adc
sbbb
pop
or
cwtl
and
fidivrs
pop
enter
outsb
and
outsb
in
popa
sbb
je
adc
sub
mov
js
sbb
call
add
jns
ljmp
out
jb
mov
cltd
xor
incb
fimuls
push
movsb
pop
loop
dec
movsl
jp
jne
sti
dec
inc
sub
sub
xor
imul
sub
test
sbb
nop
clc
add
inc
jo
dec
push
mov
negl
imul
push
popf
mov
nop
pushf
jecxz
push
negl
and
loopne
inc
nop
push
scas
idivl
inc
pop
or
jle
or
mov
cltd
pop
xlat
jg
fdiv
jnp
test
pushf
test
enter
sub
jo
or
insl
push
popf
sub
pop
call
je
xchg
outsl
gs
adc
push
inc
inc
jbe
mov
pop
aaa
mov
or
push
testb
sbb
xchg
fsub
lods
inc
push
mov
mov
pop
rcl
push
scas
cmp
dec
push
add
and
mov
mov
and
fs
add
inc
aaa
sbb
in
adc
aam
push
inc
cmpsb
loopne
jb
push
enter
adc
jo
sbb
pop
cmpsb
jmp
enter
loopne
cmpsl
inc
in
sbb
test
daa
pop
in
and
xchg
mov
sub
push
icebp
test
mov
popf
add
mov
sub
cmc
or
adc
fimull
push
lods
lahf
cli
add
cmp
inc
scas
push
cwtl
ss
pop
add
hlt
adc
das
lret
add
and
adc
and
cltd
adc
adc
lret
push
dec
lea
ror
xchg
ret
xlat
gs
in
testb
or
mov
adc
jne
pop
stos
push
loope
pop
sbb
das
mov
testl
insl
ret
cmp
shr
dec
add
test
nop
adc
enter
lods
test
shr
lds
push
mov
adc
cmp
jne
or
mov
popa
adc
or
jne
xchg
or
ret
xchg
push
stos
cmpsb
xor
rclb
enter
jo
sbb
rcrl
add
xchg
push
sbb
lods
jp
push
add
add
in
mov
rcll
mov
sub
ds
or
ja
leave
add
subb
or
lock
or
clc
pop
xor
adc
dec
clc
roll
mov
jmp
aaa
or
shl
insb
test
sbb
pop
sub
mov
mov
inc
out
push
xchg
add
sbb
in
push
cwtl
dec
sub
sbb
nop
lcall
cmpsl
call
outsl
jo
pusha
and
add
adc
hlt
mov
pop
mov
pusha
lahf
mov
cli
in
add
call
push
sub
mov
or
adc
call
mov
rcrl
dec
mov
ficoms
sahf
xchg
fdiv
push
mov
fcompl
sub
mov
lret
push
push
inc
inc
cld
pop
es
cmp
dec
and
incl
add
pop
push
orb
mov
lods
jmp
and
and
and
pop
and
or
xlat
mov
xchg
jp
push
mov
fcos
out
out
mov
cmp
and
mov
and
lea
cli
sbb
adc
cld
jmp
dec
addl
inc
push
sub
sbb
mov
dec
inc
jo
jg
or
add
dec
xchg
rorl
cmc
push
mov
inc
fdivrl
xor
shll
sbb
xstore-rng
cmpsl
inc
loope
cmp
add
nop
mov
cmp
fisubrs
pop
insb
push
cmpb
loop
mov
xchg
pop
mov
xor
nop
sti
scas
push
jne
movl
inc
iret
sbb
sarl
jne
jmp
dec
shll
add
mov
jmp
xchg
rclb
push
mov
add
imul
push
push
push
cmc
stos
push
pusha
xorl
mov
mov
rol
pop
jmp
mov
cmp
into
std
fs
ficompl
je
push
jmp
push
loop
or
dec
rorb
push
ret
imul
xor
rolb
cli
stos
jo,pt
cmp
or
push
call
inc
shlb
addr16
cwtl
sbb
pop
pop
in
rcll
leave
inc
scas
jmp
fwait
add
or
leave
xor
jo
push
aaa
jmp
mov
push
mov
ds
fs
cmpb
inc
cmp
ljmp
add
sti
roll
lret
add
xor
clc
jb
mov
imul
out
inc
and
push
in
dec
xor
adc
dec
and
and
cmp
mov
jne
mov
dec
mov
lods
cltd
frstor
sbb
jle
jnp
or
mov
outsl
leave
or
inc
dec
jne
sbb
stos
mov
jmp
scas
dec
addb
cmp
into
cs
enter
mov
insb
in
xchg
mov
out
movsb
fcomps
mov
pop
xor
jmp
cmp
stos
dec
test
sbb
out
inc
cmp
fsts
push
sub
inc
shlb
lods
addr16
pop
jge
push
add
push
ret
ret
mov
fiadds
or
push
sti
popf
cmp
cmp
inc
jo
insb
ljmp
add
pusha
shll
dec
xchg
into
xchg
fcmovnb
push
or
sbb
pop
xor
clc
add
in
idiv
jle
fmuls
call
or
decb
mov
add
sbb
cmp
inc
jo
insl
adc
pop
sbb
mov
jmp
inc
cmp
xor
cmp
enter
cmpsl
mov
gs
push
lods
cmpl
ljmp
fwait
jb
push
jg
push
and
shl
xchg
arpl
pop
jle
sbb
mov
lea
aas
stos
or
or
les
aaa
cmpl
cmp
mov
ret
adc
pop
je
add
inc
or
sub
pop
dec
cmp
inc
xor
pop
sub
adc
iret
add
adc
xor
icebp
and
sarb
jp
arpl
pop
es
sbb
pop
adc
dec
xor
mov
pop
inc
mov
not
pushf
cltd
negb
lahf
das
adc
dec
rolb
sub
fwait
xchg
insl
insl
fsubrs
ss
and
mov
outsb
mov
xlat
cmp
cwtl
daa
xchg
mov
or
mov
aam
rclb
mov
jg
pop
test
mov
cmp
loope
mov
add
push
shrb
jg
inc
cld
es
pop
cmp
mov
cli
sub
testl
or
sbb
rolb
mov
out
push
mov
daa
mov
cmp
sub
flds
nop
test
push
lock
jle
or
push
sbb
jo
adc
xor
imul
insb
leave
mov
pop
and
mov
jmp
pop
push
dec
jb
leave
es
add
add
push
and
test
or
jae
push
mov
inc
mov
xor
mov
mov
push
pop
xchg
movsb
push
pusha
mov
push
test
mov
jo
adcl
roll
push
mov
xor
data16
inc
push
jo
sbb
cmp
jns
or
int3
mov
js
inc
push
cs
fwait
mov
inc
xchg
inc
mov
push
push
bound
cs
mov
jb
in
push
xor
xor
imul
cmp
xchg
mov
rcrb
js
les
jbe
or
iret
test
daa
cmp
shlb
ds
push
mov
cwtl
ret
loopne
out
sbb
xor
shl
pop
sbb
and
jecxz
push
adc
mov
cwtl
push
push
or
pushf
test
enter
cmp
xor
add
nop
add
mov
nop
dec
pop
cmp
pop
and
jle
sbb
repnz
pop
jmp
push
dec
mov
dec
mov
mov
jbe
and
pop
cmp
ret
adc
xchg
mov
or
push
push
jno
adcl
movsl
mov
or
mov
push
js
sbb
push
jns
bt
les
out
in
mov
xor
jne
or
xor
or
xchg
ds
mov
mov
mov
les
cmp
pop
fwait
cmpsb
and
subl
xchg
pop
sub
and
or
inc
pop
fndisi(8087
sub
pop
fstpl
jge
pop
and
pop
push
inc
inc
push
hlt
jne
cmp
roll
aaa
cmp
or
pop
mov
mov
movsl
nop
int3
mov
jl
mov
fisttps
add
xchg
mov
das
cmc
xchg
ret
ljmp
xor
mov
insl
add
adc
sbb
sbb
mov
aaa
jecxz
hlt
sbb
sbb
or
pop
add
inc
lsl
sbb
or
xor
sbb
aas
and
sub
pxor
push
push
add
sub
jg
inc
jmp
sahf
loop
shr
je
fistpll
jg
dec
movsl
sarb
inc
adc
and
inc
js
sub
mov
dec
jne
and
imul
mov
push
add
jg
adc
divb
pcmpeqb
xor
xchg
jp
xor
sbb
add
jne
ficoms
dec
adcb
inc
inc
cli
pop
pop
ret
popa
and
push
outsb
cmp
bound
add
cli
shr
add
xchg
and
push
xor
incb
lock
daa
in
mov
into
lock
xchg
cmpsb
outsb
adc
push
daa
out
adc
int
fistl
jg
loopne
push
mov
or
shll
enter
adc
or
xchg
mov
mov
or
rolb
xor
movsb
push
add
insb
cmp
pop
push
js
ljmp
add
mov
mov
sbb
push
add
movsb
sub
dec
in
dec
or
test
lods
or
pushf
xorl
jo
add
add
sub
or
faddl
or
int
pushw
call
lock
rcl
xor
jle
xor
sub
add
mov
cmp
xchg
pop
in
and
mov
enter
fadds
cs
push
fidivrs
das
and
imul
dec
add
fildl
sbb
adc
pop
in
mov
adc
pusha
push
push
lahf
sarl
pusha
pop
xor
call
rclb
movsb
cmp
and
dec
xlat
cmp
inc
stc
cmpsl
xor
adc
test
xchg
sti
mov
decl
mov
and
cmp
push
pop
ja
pop
adc
aam
js
and
fmull
fstl
mov
lock
push
adcb
sub
loop
sbb
lea
nop
popf
int3
int3
push
scas
jns
out
mov
out
sahf
out
sub
out
mul
sub
jge
mov
inc
pusha
dec
add
popa
cmp
and
int3
push
mov
push
cmp
nop
dec
jbe
lock
inc
jae
fisubrs
insb
jne
inc
pop
dec
mov
addb
call
sbb
and
inc
jle
mov
inc
push
lea
push
push
push
xchg
inc
faddl
inc
test
enter
or
dec
add
lods
repnz
sub
inc
nop
jbe
fucompp
bound
xchg
and
ret
and
push
push
test
mov
xor
jmp
es
mov
adc
cmp
cld
outsl
mov
mov
idiv
divl
adc
decl
inc
mov
sbb
mov
lea
mov
pop
xor
jne
lea
mov
shrb
mov
cmp
jne
mov
push
mov
shll
fucomip
add
loop
stos
bound
out
xor
sbb
sub
xlat
fmull
es
into
ret
and
es
sub
enter
aad
add
mov
repz
lret
outsb
in
test
mov
std
xchg
pop
enter
std
mov
hlt
inc
jp
lods
std
lret
sbb
jne
movsb
pop
hlt
and
inc
push
mov
nop
xor
add
xchg
je
mov
cmpsl
fwait
mov
rclb
dec
ret
sbb
dec
jno
sbb
leave
ret
mov
adc
cs
loope
fdivrs
mov
mov
mov
in
jnp
adc
mov
stc
add
lcall
adc
aam
addl
xor
aad
leave
mov
filds
enter
sti
loopne
xchg
push
lret
cmpsl
mov
pop
cs
int3
pop
or
add
subl
xor
sub
iret
es
lock
mov
sub
mov
push
jns
notl
xor
push
sub
adc
adc
mov
fsubl
pusha
dec
adc
or
mov
or
add
mov
cmp
inc
loopne
add
sub
pop
das
xlat
scas
aad
pop
and
push
cmpb
mov
add
or
and
cmp
inc
xor
filds
cmp
push
movsl
test
ss
lds
dec
js
pop
push
mov
gs
mov
pusha
lock
mov
imul
fiaddl
rolb
pop
inc
dec
test
in
test
inc
jl
in
sbb
mov
shld
pop
mov
daa
or
and
or
stos
push
xor
aad
adcb
push
scas
jle
out
xchg
iret
cmpsl
mov
add
les
cmp
add
xor
dec
shl
stc
mov
ret
loopne
into
incb
sub
or
dec
cmp
dec
outsb
jg
scas
add
orb
push
je
fcmovb
and
jo
aam
stc
inc
sub
lds
sub
pop
aam
jmp
mov
mov
jnp
sub
jno
je
mov
rolb
imull
or
dec
pop
add
adc
repz
sub
adc
js
xor
adc
repnz
test
jl
and
xchg
push
out
adc
jns
insb
xor
out
addr16
pusha
addl
out
sbb
dec
jo
xor
jns
dec
mov
insl
mov
inc
jns
jecxz
adc
mov
and
inc
outsb
xorb
imul
add
scas
jmp
ret
mov
push
shlb
jne
mov
int3
arpl
mov
jno
push
fnstcw
movsb
push
pop
mov
cmp
cmpsl
es
cmp
xor
test
popa
mov
int
sub
lea
aam
aaa
cwtl
mov
rcrb
mov
dec
fildl
shrb
es
sbb
in
or
sub
outsb
dec
or
test
fisttpl
test
addr16
popl
out
xor
and
aad
faddl
in
test
in
lcall
adc
fadds
neg
ret
cmpsl
or
imul
icebp
icebp
mov
jmp
das
fmull
cltd
mov
repz
mov
mov
fucomi
fldt
sub
fildl
inc
repz
cmp
in
cmpsl
xchg
fadds
sub
frstor
into
cmpb
ficoms
dec
sar
xor
aas
dec
cs
cmpxchg
popf
push
sti
mov
jmp
dec
rolb
push
cmc
shrl
push
jns
add
icebp
dec
sub
xchg
inc
xor
sub
sbb
jmp
call
jnp
dec
int3
mov
mov
sub
mov
loop
inc
sbb
fwait
mov
sbb
jno
pushl
sahf
xchg
or
adc
mov
dec
hlt
cs
jmp
mov
cmpsb
push
mov
mov
sbb
jb
mov
adc
arpl
call
in
jge
xor
sbb
mov
dec
or
sub
push
nop
inc
xorb
test
mov
and
or
popa
add
and
js
push
add
je
xor
adc
sub
mov
adc
daa
adc
ret
mov
fidivrl
xchg
lea
cmp
push
addr16
stos
add
nop
lcall
mov
leave
rolb
stc
push
shrl
jns
mov
testb
dec
addr16
lcall
adc
inc
test
add
or
iret
inc
loope
xchg
outsl
jne
or
outsb
cwtl
movsl
push
mov
sbb
lods
test
xchg
and
mov
mov
subl
aaa
cmpsb
sbb
xchg
fcoms
cmp
mov
mov
mov
mov
pop
sbb
sub
pop
out
rolb
xorps
jmp
ss
dec
xchg
xchg
mov
jmp
in
push
xor
lret
stos
pop
sub
lods
repnz
leave
lock
movsl
mov
sub
pop
add
cmp
movsl
fsubr
pop
ljmp
movsl
scas
movsl
push
mov
scas
adc
outsb
insb
out
cmpsl
into
and
jecxz
cmpsl
aad
pop
jo
dec
cmpsl
xlat
test
lret
mov
pop
and
inc
cmpsl
inc
inc
inc
inc
mov
sub
and
jo
aaa
or
lea
push
xor
stos
xchg
movsb
repnz
push
stos
mov
mov
mov
adc
outsb
sti
es
sbb
inc
scas
dec
inc
call
cmpsl
aad
cmp
cwtl
pop
jno
aad
cmc
push
hlt
lods
outsb
lods
sub
mov
mov
add
repnz
dec
es
movsl
dec
add
movsb
xlat
adc
adc
decb
cld
push
push
aam
int3
sbb
cwtl
cmpsl
mov
cwtl
lods
mov
push
enter
rcll
lods
shrl
mov
xor
cmp
jb
dec
jb
test
leave
leave
mov
stos
movsl
adc
mov
xor
test
nop
add
dec
xchg
nop
arpl
dec
adc
aaa
push
sub
push
enter
xor
pushf
cwtl
sbbb
nop
mov
movsb
xor
mov
nop
nop
pushf
cwtl
inc
dec
cs
mov
nop
mov
shr
shl
popf
int3
mov
mov
sbb
lds
pop
sbb
lahf
out
xchg
jl
push
dec
stos
testb
sbb
divl
jp
mov
insb
adc
aaa
mov
or
les
or
or
xchg
lock
inc
cmp
mov
inc
sub
adc
xor
mov
out
outsb
sub
pop
xor
or
mov
into
inc
or
pop
pop
mov
xor
shrb
pusha
movb
addr16
pop
stos
push
sbb
cld
dec
add
xlat
adc
idiv
mov
test
jmp
dec
xor
aaa
push
jns
add
push
jg
mov
jnp
add
jne
sbb
dec
out
add
jno
pop
mov
lahf
mov
adc
pop
jo
or
cld
nop
in
testb
rclb
cltd
lahf
cmpsb
lock
test
mov
mov
mov
xchg
test
nop
mov
and
jne
adc
and
and
int3
push
sahf
mov
add
or
fnstcw
inc
dec
pop
adcb
jg
subl
pop
je
mov
fwait
pop
outsl
push
push
dec
adc
lock
or
pop
xor
dec
iret
ja
cmp
pop
outsl
inc
or
jbe
je
lahf
pusha
jle
cmpsb
outsl
popf
mov
iret
ja
jo
mov
ja
pop
xor
jne
jo
in
push
pop
ffreep
lea
lea
inc
out
or
push
in
rcr
inc
daa
insb
adc
sbb
insb
add
movsb
pop
mov
add
inc
inc
push
negl
decl
aas
mov
mov
lret
ret
push
div
push
mov
shr
dec
add
add
mov
adc
add
lods
sub
pop
into
andb
cmpsl
add
sbb
fimull
or
mov
push
dec
or
sarl
adc
andl
add
mov
add
or
call
stos
add
jmp
mov
push
jl
fdivs
test
mov
aaa
mov
les
sbb
aas
add
fwait
pop
jne
cmpl
jne
fdivr
fistpll
adc
and
cmp
and
cmp
bound
or
scas
sub
or
adc
xor
inc
rcl
jl
push
cmp
rol
push
mov
sahf
out
add
jl
jae
xor
sar
and
and
call
mov
add
add
inc
loopne
xor
pop
pusha
or
imul
add
fldl
mov
cmp
ljmp
mov
sub
adc
inc
andl
xchg
jle
nop
pop
subl
lret
cmp
lea
sub
xchg
scas
or
cs
mov
aam
xor
pop
mov
xchg
rolb
fs
mov
xor
pop
rcll
or
sahf
pop
cwtl
adc
adc
rclb
test
mov
or
mov
sbb
mov
sub
rcl
adc
call
inc
or
andb
push
pop
add
cwtl
sbb
je
aas
push
fucom
pop
cmp
push
dec
and
mov
xor
mov
xchg
out
movsb
inc
push
out
fadds
mov
in
fdiv
lret
into
mov
gs
jmp
outsl
mov
and
js
mov
pusha
js
hlt
sub
mov
mov
ja
and
jne
incl
dec
and
lods
data16
sbb
jmp
addr16
out
dec
adc
add
mov
fwait
adc
ret
xor
jne
lret
outsb
stos
add
xor
jne
or
push
push
orl
add
mov
inc
data16
ds
gs
cmp
ds
enter
or
jne
dec
mov
mov
and
mov
sahf
jnp
addr16
add
sub
mov
aas
movsl
adc
fisttpl
inc
cs
je
xorb
cmp
stos
jne
jnp
lock
and
inc
and
dec
cld
push
insb
ljmp
or
pop
jle
in
push
push
insl
add
aam
add
sbb
mov
push
mov
and
es
test
or
xor
mov
or
int3
push
xchg
cmpb
jo
shlb
fistpl
push
call
push
incb
jbe
xchg
lea
into
adc
cwtl
insb
pusha
fimuls
push
loopne
mov
pushl
mov
jae
lea
add
xorl
push
cmp
lock
lea
push
xchg
and
mov
shlb
popf
and
or
rorb
mov
je
fwait
hlt
mov
lods
mov
push
sub
lea
push
fsts
out
pop
lea
inc
or
push
cmpsl
out
leave
cwtl
or
gs
pushl
push
pop
push
iret
cmc
dec
push
mov
loop
lea
mov
or
mov
lock
mov
adc
out
jg
movb
xor
dec
fildll
lea
add
int
inc
inc
mov
push
in
out
push
push
imul
adc
sbb
rcrb
loopne
ret
mov
scas
xchg
jl
fidivrs
sbb
movsb
or
push
or
aas
or
add
fimuls
daa
dec
mov
scas
fiadds
add
xor
aas
roll
das
rorb
and
into
sub
into
test
cmp
jb
xor
jl
in
mov
xchg
adc
hlt
jb
sahf
xchg
ret
pop
push
cmpl
sbb
repnz
or
pop
aam
push
or
cld
aaa
cld
cmp
pop
ret
add
xor
jmp
jns
mov
and
dec
shlb
movsb
or
add
dec
sets
mov
stos
xchg
add
je
push
or
repz
outsl
xor
push
orb
jmp
mov
jmp
cmp
loop
lea
xchg
cmc
push
xchg
mov
dec
cs
aaa
xor
scas
insb
jnp
mov
mov
jne
jmp
addl
ss
or
je
push
inc
bound
dec
movl
add
add
adc
out
pop
ret
dec
sub
cmp
shrb
test
dec
cwtl
cwtl
pop
mov
sub
imul
dec
out
mov
fists
pop
test
not
mov
push
in
popa
mov
cld
xor
push
sub
adc
lock
xchg
cmpsl
sub
lock
mov
fwait
adc
and
test
dec
mov
test
adc
dec
les
cs
lock
sbb
loope
ja
mov
xor
orb
ljmp
jle
pop
ret
mov
lods
int3
jle
dec
pusha
push
sbb
jnp
negb
push
sub
push
lock
jb
mov
int
fs
out
lea
daa
pop
mov
movsl
out
add
fistl
popf
imul
rorb
xor
and
das
inc
xchg
xchg
xor
gs
push
push
jb
pop
sbb
iret
and
addr16
enter
add
jnp
incb
cmp
fldt
loopne
daa
jg
jnp
cmpsb
push
xor
xor
add
sub
pop
shrb
add
dec
inc
inc
xor
xchg
es
inc
adc
fidivrl
cmp
jae
lahf
lret
adc
aas
pop
inc
dec
stc
cs
in
dec
dec
cwtl
push
adc
and
mov
pop
in
sti
inc
popa
dec
adc
jo
fnclex
lods
enter
dec
or
xor
mov
lcall
mov
pop
push
sub
adc
ret
js
cmpl
shlb
jne
daa
fiaddl
and
popa
mov
jns
pop
scas
inc
stos
add
push
nop
ret
fisubrs
inc
mov
mov
add
add
add
into
stc
movb
cwtl
add
leave
push
clc
stc
push
inc
cmp
push
lea
cmp
int3
call
enter
adc
and
push
pusha
es
scas
dec
stos
inc
popa
in
adc
cmp
jle
enter
lret
sbb
push
mov
enter
mov
bnd
inc
push
sbb
aaa
sub
pop
and
or
jbe
rcrb
add
sub
sbb
and
add
xchg
push
xchg
inc
pushf
sbb
sti
std
call
cmp
aas
add
hlt
jmp
and
push
in
out
fistpl
xlat
mov
xor
sub
inc
push
subb
or
ret
or
push
xor
test
lods
inc
and
fimuls
adc
push
lret
or
mov
dec
dec
ja
test
mov
test
or
loop
sbb
cmpsl
mov
aas
clc
add
lret
loop
pusha
lods
and
insl
add
jne
or
push
in
dec
cmp
mov
inc
outsb
adc
das
ret
lea
mov
dec
and
sub
add
push
aam
out
loopne
and
jb
sub
add
enter
add
xor
cld
jb
mov
pop
xchg
add
ret
sub
insl
add
jmp
cmpb
rcl
push
negl
ret
xchg
fcoms
or
neg
mov
lock
mull
lsl
jmp
push
pop
push
sub
inc
shr
rcr
shr
rcr
or
mov
repz
dec
pushf
pop
dec
ljmp
out
jb
cmp
or
cmp
or
xor
aas
iret
pusha
shlb
or
fisubl
push
add
lret
jne
fcomp
iret
pop
ret
adc
and
je
dec
push
jmp
jbe
inc
adc
xchg
sbb
mov
sub
cmc
inc
in
cmp
rolb
cwtl
clc
mov
hlt
jbe
xchg
or
and
lret
movb
out
xor
pop
cmp
or
xchg
call
mov
push
dec
inc
fld1
clc
add
sub
aam
hlt
and
adc
inc
mov
fists
inc
and
mov
scas
xlat
mov
pop
add
rorb
lcall
shlb
inc
stos
inc
clc
push
xor
loopne
adcb
push
push
sbb
cmp
sbb
sbb
dec
fcomps
and
adc
or
dec
push
mov
and
add
add
in
aas
fists
je
cwtl
push
push
pop
lret
xchg
xchg
sbb
add
cmp
mov
sub
inc
adc
jo
leave
out
jmp
pop
jne
test
popf
mov
xor
add
pop
inc
cmp
mov
xor
add
addl
inc
sbb
hlt
fiaddl
rcrl
mov
dec
pop
dec
and
mov
and
lods
dec
add
fs
mov
jnp
pop
or
int
xor
mov
inc
nop
test
nop
push
test
cmp
add
lods
and
jl
popa
outsb
mov
arpl
sbb
popf
sub
jb
mov
faddl
fmuls
fistps
jo
mov
pop
clc
dec
cld
popa
cs
decl
lahf
add
cwtl
push
gs
test
jne
xor
outsb
mov
and
loope
daa
xchg
inc
popa
dec
sub
push
xor
mov
and
mov
mov
cmp
mov
jo
cmp
xor
in
and
push
add
mov
or
or
dec
or
cmp
cld
or
in
mov
cmp
loop
or
add
mov
sti
fwait
sub
mov
ret
ret
outsb
outsb
sub
push
push
inc
push
loopne
lret
push
aad
aam
lods
jnp
mov
jne
mov
xchg
push
negb
jmp
adc
outsl
push
push
mov
jae
adc
ret
loope
imul
pop
xorl
dec
mov
adc
lret
push
inc
cmpsb
shr
out
gs
aam
lock
aad
mov
inc
fidivl
iret
jmp
sbb
mov
movb
imul
ja
subb
call
sub
push
lock
cmp
inc
jmp
stos
les
inc
pop
lds
cmp
imul
add
push
inc
mov
jge
aas
sbb
cmp
add
inc
jecxz
in
cwtl
push
sbb
sbb
jmp
dec
je
mov
out
inc
lock
xor
icebp
xor
or
and
add
insb
jne
push
adc
and
or
incl
mov
push
stos
into
mov
sub
enter
adc
test
inc
push
cmp
jge
inc
call
scas
mov
mov
push
and
mov
cwtl
xor
sbb
mov
sub
mull
pop
stc
xor
pop
inc
rclb
xlat
mov
add
and
jo
negb
shl
sbb
lcall
pop
sahf
jl
clc
sbb
mov
and
cmc
fadds
add
mov
mov
aad
adc
mov
aas
add
ja
mov
sub
adc
orl
bound
dec
dec
sub
and
fs
push
push
push
pop
shlb
or
dec
pop
inc
inc
pop
notb
and
arpl
xor
in
pop
cmp
or
popa
sbb
rcl
lock
jmp
xor
stc
loopne
mov
pop
adc
pop
or
sbb
lds
adc
add
push
mov
or
push
fs
or
add
push
mov
mov
cmp
sub
sbb
cmp
xor
cli
adc
lea
lea
mov
or
out
out
andl
mov
push
inc
cmp
sbb
jmp
popl
test
inc
ljmp
mov
pop
xor
jle
enter
js
shrb
add
jb
sub
clc
sarl
mov
pop
mov
pushl
add
jno
push
pop
lock
mov
push
mov
and
sbb
push
push
xor
movsl
ljmp
push
inc
cmp
ds
pusha
clc
aas
imul
sub
out
popa
push
fldt
add
sbb
mov
or
push
loope
pusha
rol
jl
popa
add
sbb
inc
pusha
xorl
add
out
inc
stos
cmpl
and
mov
inc
inc
jne
lcall
add
sub
inc
rolb
pop
or
aas
sub
mov
fadd
les
inc
pop
adc
shl
mov
mov
scas
call
outsl
andl
pushf
rorb
es
xchg
or
aam
sbb
orb
sbb
sub
sub
xor
adcl
push
sbb
dec
add
and
movd
in
loopne
mov
jmp
jg
lcall
adc
lods
subl
xchg
das
xor
push
popf
add
cmp
mov
or
push
inc
adc
sbb
test
int
ds
das
imul
xchg
xor
adc
and
inc
mov
test
mov
or
dec
xor
test
jl
xchg
inc
mov
mov
fmull
das
loop
push
adc
mov
push
jno
add
mov
adc
adc
aaa
mov
xor
ljmp
jmp
mov
cli
popf
pushl
leave
lret
aam
push
pmaddwd
cmp
cwtl
cltd
ret
jo
bound
mov
cmp
jae
in
xlat
inc
sbb
inc
mov
push
push
nop
sub
adc
dec
mov
cwtl
or
add
movsb
mov
adc
cmp
arpl
inc
cld
jl
push
lods
mov
cmp
das
push
or
push
or
fidivl
or
xchg
push
sbb
or
lea
and
pusha
or
push
mov
pop
dec
and
mov
inc
push
push
pusha
cmp
hlt
add
mov
sbb
dec
addr16
jl
incb
dec
mov
movsb
andl
jge
negl
jmp
mov
stos
popf
test
mov
and
cmp
fstps
pop
mov
testl
inc
jle
sub
cmp
xor
cmp
jmp
dec
push
in
jbe
cmp
push
sub
jae
stos
lock
dec
lock
inc
sbb
mov
jae
mov
sub
push
jmp
adc
jnp
push
sarb
jbe
imul
jbe
nop
add
jne
out
dec
or
lahf
jae
imul
sbb
pushf
sub
and
ja
sub
jnp
dec
bound
sti
xchg
lahf
and
cmp
dec
cwtl
inc
jnp
cld
pop
pop
push
and
xor
add
stc
sub
cmp
mov
mov
movsl
jbe
sub
mov
mov
stos
loopne
je
mov
xor
add
data16
loop
mov
shrb
add
in
cmp
dec
mov
jo
repnz
rcrb
mov
jecxz
fldl
inc
inc
xor
dec
or
ret
mov
dec
cmp
and
fsubs
fsubrs
xor
cmpl
jecxz
je
adc
push
push
inc
jmp
cmp
mov
pop
xor
shrb
es
mov
dec
push
or
pop
shl
jne
dec
push
lock
popl
popa
cmp
fsubrs
cwtl
jge
add
lcall
sbb
icebp
inc
jae
test
cmp
fadds
loopne
mov
fildl
push
fcoml
mov
outsb
ja
mov
xor
jne
adc
in
leave
pop
adc
pushf
inc
pop
popl
call
jge
xchg
push
mov
sub
pushf
imul
mov
mov
add
pusha
jge
dec
sbb
cmpb
and
mov
out
inc
add
lret
jne
sti
outsl
call
shll
roll
lods
xchg
lea
nop
inc
ficoml
jae
mov
std
mov
sbb
mov
mov
or
scas
pop
and
inc
testl
out
jne
and
xchg
and
les
out
dec
into
sbb
jne
inc
or
cmp
pushf
and
addr16
inc
fists
add
xchg
nop
int
xor
cwtl
xchg
test
push
mov
add
inc
add
push
pusha
mov
mov
push
xor
cli
sub
pop
sbb
jb
mov
rorl
xchg
push
mov
inc
ja
add
js
subl
sub
lea
jnp
sbb
sbb
sti
jg
push
add
add
aaa
sbb
sub
or
shll
shr
fadd
cmpsb
mov
shr
aas
or
push
lahf
and
mov
into
sub
xchg
jne
dec
sub
inc
mov
sub
add
into
negb
je
jl
ja
cli
shrl
shl
shr
or
mov
js
pop
call
pop
jne
outsb
mov
push
aam
notb
adc
and
fnsave
push
imulb
arpl
pop
add
xchg
add
mov
add
cld
roll
or
or
ficoml
lds
mov
pop
mov
nop
mov
dec
and
adc
int3
int3
jmp
inc
popl
test
or
daa
mov
dec
or
dec
into
jmp
lods
leave
ss
aam
divl
jno
les
pop
and
ficompl
jp
lret
push
mov
jmp
sub
loopne
sbb
add
loop
lret
loop
imul
pop
mov
inc
mov
inc
or
xchg
xchg
add
and
cmp
jl
imul
pop
inc
mov
sarl
aam
or
xchg
mov
outsb
loope
cmp
mov
push
mov
pop
incb
jne
testb
adc
sbb
mov
cmpsb
icebp
jbe
push
push
jb
add
xor
sbb
cmp
aad
add
daa
pop
cmp
sarb
push
int3
outsb
pop
ret
jo
push
xor
rorb
jbe
sub
arpl
mov
mov
fwait
ljmp
sub
or
push
pop
insl
outsl
inc
mov
jb
dec
andl
dec
in
ret
add
xor
adc
shl
or
ret
xchg
dec
aam
mov
ret
cmp
es
cld
mov
subb
inc
js
pop
pusha
xchg
adc
pop
pop
lea
pop
bound
jae
mov
add
out
mov
loop
arpl
xchg
call
test
push
pop
add
in
jnp
insb
cmp
mov
adcl
test
call
jne
sbb
call
stos
out
add
xchg
mov
push
adc
sbb
pop
inc
ds
sub
iret
jmp
sbb
adc
dec
xchg
xor
xchg
adc
push
pop
call
sbb
lds
push
pushl
cs
add
pop
enter
punpcklwd
dec
xor
push
sbb
loopne
or
push
js
std
push
and
jmp
ret
jmp
gs
mov
adc
in
pop
cmpsl
lods
sbb
cld
add
and
mov
cmp
cmp
xor
push
std
push
lcall
cmp
dec
lahf
loope
inc
loope
push
lea
sti
push
iret
add
leave
sar
mov
aas
or
sbbb
testb
sub
pop
and
adc
negl
mov
or
call
stc
xor
scas
addr16
loop
mov
imul
xchg
mov
ljmp
shll
xchg
js
inc
shll
cmp
or
xor
push
push
ds
xor
and
xor
pop
cwtl
xacquire
push
inc
loopne
nop
sti
mov
lock
add
mov
fdivl
sbb
push
add
or
push
xor
push
hlt
mov
andl
sbb
sbb
and
jae
pop
ret
pop
outsl
add
add
inc
push
pop
and
sbb
test
or
mov
xchg
movb
push
sbb
adc
mov
dec
mov
outsb
test
scas
sub
lea
or
add
fmull
loop
jns
cmp
gs
push
inc
rolb
adc
add
add
je
test
notb
mov
pop
add
jno
dec
mov
inc
mov
xor
not
mov
pop
mov
int
push
test
cmp
mov
jno
add
roll
sbb
push
cmp
stos
sub
aaa
test
jne
xor
adc
sub
mov
add
fwait
imul
push
push
jmp
sub
inc
adc
dec
pusha
dec
inc
mov
add
sub
stos
or
out
push
mov
adc
push
sbb
sarb
add
in
mov
dec
xor
mov
sbb
subb
add
xor
push
pop
and
pop
pop
ss
shll
adc
xchg
lret
jle
mov
pop
ret
fs
xor
jae
mov
ffreep
mov
cli
or
shufps
push
fldt
pop
mov
push
addl
and
sub
xchg
ds
inc
icebp
and
out
fnstenv
push
jne
cmp
or
ret
sub
sub
insb
call
add
shl
cwtl
dec
shlb
jbe
fs
pop
jns
clc
dec
sbb
into
jg
or
add
cmp
mov
test
sub
sbb
and
or
and
add
mov
movsl
sub
push
jne
sbb
adc
xchg
inc
rolb
push
cmp
jmp
mov
lock
dec
test
push
mov
and
jmp
enter
lods
and
push
es
andb
test
mov
mov
test
or
mov
jg
jmp
push
mov
and
mov
sbb
pop
xchg
aas
push
jae
adc
inc
lods
cmp
out
sub
mov
addr16
add
adc
sub
das
and
adc
mov
ficoms
adcb
jno
xchg
jp
das
cwtl
inc
je
xor
xchg
int3
test
sbb
cmp
aam
or
jmp
inc
sbb
movsb
inc
mov
rolb
lds
pop
add
push
adc
and
and
jo
gs
pop
test
push
fistl
rorb
sbb
popf
cltd
movb
and
es
enter
adc
push
out
and
cmp
sub
adc
or
mov
in
aam
insb
cmp
add
mov
xchg
notl
pop
jne
add
xlat
pop
les
mov
dec
mov
fs
pushf
push
xchg
pop
inc
cli
mov
pop
pop
cmp
inc
and
jg
add
jns
add
inc
addb
subb
sbb
fisttpll
xor
mov
cwtl
js
cld
add
cmp
loop
inc
mov
jmp
ds
push
pcmpeqb
inc
cmp
incl
aam
and
or
les
shr
or
scas
popa
push
xchg
push
loopne
and
or
mov
add
xchg
push
ljmp
jb
vpmadcsswd
fmuls
inc
lcall
adc
adc
pop
adc
push
xchg
jo
inc
inc
mov
scas
sub
dec
icebp
add
sbb
jno
and
push
dec
xchg
push
dec
jae
mov
lret
xor
inc
push
popa
jge
mov
dec
push
add
add
pop
push
fsub
push
or
xchg
fcoms
push
pop
out
cmpsl
test
cmp
push
sar
jb
cmp
cmp
sbb
dec
sub
inc
stos
test
sbb
cmp
add
fisttpl
jmp
pop
adc
shr
clc
or
pop
shl
mov
pop
adc
mov
mov
adc
sbb
fadd
adc
rorl
andl
int
add
insb
enter
daa
sbb
xor
js
cmpl
and
or
push
pushf
jl
push
pop
cwtl
dec
xor
push
jne
push
aas
out
out
mov
xor
pop
in
pop
movl
test
push
sbb
mov
cld
add
mov
xor
jbe
fidivl
mov
jmp
push
std
push
fwait
test
jne
fadd
and
push
push
jnp
jne
add
xor
pcmpeqw
add
pop
dec
inc
imul
mov
jmp
mov
adc
insl
lea
ficoms
add
pop
cmpl
push
lcall
pushf
or
movsb
cmp
cmp
cmp
inc
icebp
imul
add
mov
or
sbb
pop
popa
faddl
sub
lock
mov
adc
fadd
or
cmpb
pop
fistpll
push
dec
and
or
jne
and
pop
sbb
push
sbb
imul
xor
sarl
push
and
rorl
mov
push
daa
fidivs
jmp
nop
sbbl
sbb
xor
lds
je
jae
mov
xchg
out
popf
or
push
mov
mov
jo
push
push
jno
inc
or
add
jnp
aas
cmp
adc
in
xchg
mov
or
fs
mov
and
rorb
jne,pn
ja
mov
sbb
inc
mov
adc
in
adc
add
pop
mov
sbb
or
stos
fdivrs
adc
dec
lds
push
icebp
push
fwait
xchg
pop
xchg
add
loopne
jmp
cwtl
or
nop
or
inc
add
sub
add
push
adc
dec
movl
and
inc
fmull
jp
loop
push
and
add
cmpl
scas
out
sub
dec
sbb
mov
ret
xor
ja
bound
mov
fs
inc
loop
jno
inc
mov
sbb
fcom
sbb
dec
test
jb
ljmp
sub
inc
stos
sub
call
add
push
inc
adc
sbb
test
or
rcrl
mov
or
adc
cs
push
in
push
cs
daa
push
xor
enter
cmpb
popa
andl
out
pop
adc
jmp
fists
ret
repz
add
adc
icebp
movsl
aam
push
ret
mov
lret
stc
push
arpl
call
push
gs
mov
negl
push
stos
cli
shlb
addb
dec
jmp
xor
pop
mov
mov
cmpsl
jo
cs
lret
cmp
or
subl
outsb
je
inc
sub
clc
ret
sbb
dec
mov
sbb
popa
loop
repnz
clc
and
mov
adc
dec
cld
and
push
pop
cmp
in
mov
jge
mov
ja
mov
or
mov
fdiv
xchg
loope
lahf
daa
inc
test
jle
and
inc
push
mov
and
adc
pop
mov
jne
stos
out
rcrl
inc
add
or
ret
cmpsb
or
push
push
add
les
xchg
cmp
or
xchg
cmp
je
into
enter
iret
and
and
pushf
inc
sbb
adc
aas
jg
cmp
decl
jg
xor
cmp
je
or
jne
jle
jp
jae
aad
in
mov
jb
lock
sbb
cmp
loope
imul
and
and
dec
ret
adc
push
or
jbe
push
xchg
or
in
gs
push
or
fldt
in
sbb
sbb
xchg
xchg
and
sub
adcb
cmp
xchg
mov
inc
cmovs
daa
daa
daa
dec
push
push
pop
leave
leave
leave
add
leave
leave
leave
leave
push
push
add
cltd
movsb
cmp
mov
xchg
cwtl
fs
dec
es
mov
cltd
test
ror
xchg
dec
enter
andb
adc
xchg
fsub
in
and
dec
call
dec
xor
hlt
clc
dec
push
cmp
cld
add
add
imul
or
adc
adc
sbb
dec
xor
and
sub
leave
and
xor
xor
gs
fiaddl
push
xchg
dec
es
push
pop
pop
shrb
fs
sbb
and
jmp
pop
mov
mov
adc
jbe
add
test
and
test
mov
stc
outsb
sbb
mov
xor
push
mov
imul
and
adc
sbb
rorb
sbb
and
int
xor
and
adc
dec
xor
mov
and
test
inc
adc
dec
dec
les
dec
scas
addb
mov
in
mov
pop
icebp
adc
inc
and
loope
lret
mov
movsb
push
push
ret
lcall
icebp
or
and
pushf
push
je
ret
rorb
and
pusha
dec
or
and
ret
clc
sbb
pop
add
xchg
ret
push
fisubs
pop
mov
lcall
ds
and
add
into
and
adc
xchg
xor
scas
orb
not
xor
loope
xor
fcmovne
or
shr
dec
outsb
add
jmp
add
and
test
popa
push
ljmp
add
es
in
test
loop
loope
or
add
aam
aam
mulb
shll
fildl
or
or
and
xor
sub
icebp
addr16
add
fucomp
outsl
sbb
lock
and
mov
and
divb
jl
and
jecxz
sbb
sbb
int
add
or
dec
dec
lea
and
std
shll
sub
aaa
jge
je
std
push
sbb
add
fstps
and
jge
aas
pusha
mov
pusha
loope
pop
sub
xor
cmpsb
adc
adc
adc
cmp
ds
pusha
fldl
pop
cwtl
ljmp
pop
sub
sub
xlat
sub
push
adc
test
add
add
sub
xor
mov
dec
sbb
and
cld
into
add
das
jae
dec
jne
orl
scas
jmp
push
and
mov
stos
ficompl
notl
dec
icebp
sub
out
insb
xorb
les
icebp
lcall
and
or
lods
or
flds
push
sub
sti
fstps
jmp
fisttpll
shlb
cltd
fndisi(8087
movsl
pop
test
inc
push
hlt
adc
jbe
fildl
cmovne
sub
add
jl
mov
push
push
xchg
shll
xor
test
hlt
scas
or
and
mov
call
mov
aaa
sbb
out
mov
mov
add
lock
cmp
sub
sub
jmp
sub
cmp
loopne
sub
psubusw
jge
pusha
movsb
into
adc
xor
dec
or
sbb
sbb
mov
add
inc
and
stos
and
shrb
mov
hlt
and
jge
fstpl
or
repz
lret
add
in
inc
rorl
inc
or
repnz
xorl
mov
mov
je
aam
xchg
mov
cli
shrl
shrl
orl
pop
xchg
push
nop
loopne
or
cmp
pop
jmp
pop
cs
add
adc
js
jno
adc
mov
sbb
xor
push
pop
cwtl
out
add
popa
mov
jle
push
add
push
sarb
sarl
fistps
and
pop
mov
jmp
push
pop
adc
adc
repnz
and
and
add
outsl
add
out
pop
fsubs
inc
cmp
je
les
fmull
pop
cltd
cmpsb
imul
and
hlt
adcl
and
mov
pushf
sub
add
mov
fwait
inc
sbb
out
mov
add
sbb
xor
jp
lahf
test
jmp
jno
leave
adc
and
push
xor
fdivp
push
add
or
xor
enter
insb
ret
aad
push
add
in
sub
xchg
scas
adc
mov
or
and
sub
es
push
mov
add
or
pop
mov
shlb
fadd
push
xchg
or
sbb
mov
push
das
adc
inc
out
int3
mov
int3
arpl
arpl
jne
adc
xor
jl
rorl
rcll
cmp
cltd
les
stos
andl
jo
mov
loopne
jecxz
xchg
add
xor
sbb
dec
adc
mov
sbb
negl
add
roll
or
mov
stos
push
lret
lock
or
cltd
jge
sbb
pushl
fcmovnbe
insb
add
push
mov
xor
into
pop
out
popf
mov
cmp
sbb
add
xchg
ret
ss
mov
cli
push
mov
rcr
pop
xchg
jge
mov
out
mov
andl
xor
test
pmulhw
or
dec
das
fstps
add
aam
xchg
shll
push
or
outsl
lcall
or
push
out
mov
adc
jne
pop
je
ret
cmc
in
add
or
push
and
imul
es
sub
inc
mov
test
xchg
push
pop
dec
ljmp
adc
fnstsw
movswl
mov
test
sbb
loop
inc
fnstenv
and
ror
mov
int
xor
fdivl
xchg
fs
testb
or
push
mov
mov
fldt
fwait
ja
or
adc
sbb
ret
inc
adc
repnz
call
movsb
fldpi
imul
mov
or
adc
add
inc
pop
sti
lret
dec
sbb
xorb
scas
test
mov
cmc
mov
pop
test
pop
xchg
jb
xchg
mov
sub
jmp
and
insl
inc
add
int3
or
and
mov
sbb
jle
test
jg
daa
inc
dec
int
fadds
jo
stos
jne
push
pop
lock
mov
loopne
mov
pop
sbb
adc
addb
ja
lds
test
jne
push
mov
pushf
add
lcall
xchg
add
adc
adc
bnd
imul
and
push
sbbb
mov
cltd
xor
repz
addr16
sti
jbe
inc
mov
fsubrl
test
push
cmp
mov
or
or
loope
and
int
sub
test
and
cmp
dec
scas
scas
and
add
test
push
or
outsb
push
cli
adc
lods
sub
xor
inc
push
mov
les
inc
test
daa
mul
pop
test
out
addb
add
xlat
xor
sub
insb
lock
stos
jp
arpl
stos
pop
pop
pop
push
movsl
push
in
inc
add
jecxz
cmp
dec
mov
push
add
mov
or
adcl
scas
ret
dec
or
inc
lea
pop
sbb
push
shrl
rolb
sbb
stos
and
dec
call
loop
rolb
aas
adc
or
repz
std
and
and
mov
out
insb
lock
mov
inc
adc
iret
xchg
lea
cmp
cli
sub
cmp
jb
cmp
sbb
mov
cmp
push
add
out
mov
push
add
pop
sti
or
sub
adc
adc
cs
sarb
mov
mov
test
sbb
lea
sub
testb
add
xor
xchg
idivl
pop
or
loope
inc
daa
xchg
add
add
push
dec
xor
cmp
xorb
xor
sbb
movsb
push
loopne
mov
shl
lods
inc
cmp
mov
xor
add
mov
and
push
ds
push
or
faddp
scas
and
aam
out
sub
dec
mov
adc
pop
or
dec
xchg
push
fs
sub
loope
add
je
clc
das
adc
lahf
or
xor
pop
dec
lea
push
xor
push
xchg
rcr
inc
lods
js
hlt
cmp
and
dec
outsb
sbb
enter
dec
or
inc
rol
or
lea
cmp
pop
adc
fisttpll
cli
sbb
push
out
jmp
pop
push
push
out
inc
jp
add
icebp
popl
iret
dec
jns
cmp
xor
shl
hlt
loopne
push
mov
aas
mov
mov
fbld
lds
sbb
and
jecxz
cmp
inc
xor
xorl
add
shll
pusha
cmp
mov
cld
cmp
daa
andl
add
adc
jle
lea
shll
into
mov
and
mov
sub
mov
adc
imul
and
shl
test
loope
jecxz
mov
fnstcw
or
cmpsl
fiaddl
pop
lock
add
cwtl
cmp
sahf
push
push
es
lret
dec
clc
pop
lock
and
xor
mov
orb
cmpsb
mov
add
sub
push
push
add
push
cs
subb
andb
mov
dec
adc
sbb
cmp
sbbb
and
xor
lret
pop
dec
scas
mov
lea
shll
mov
cmp
add
outsb
xchg
add
cmpsb
fiadds
mov
js
cmp
testb
mov
rorl
enter
mov
sbb
push
jo
push
or
outsb
pop
xchg
cmp
scas
cmp
xchg
or
ss
cmp
je
dec
or
or
out
mov
dec
add
lcall
add
sbb
sbb
add
or
mov
sub
add
data16
fcompl
fistpll
push
lea
mov
adc
mov
outsb
sub
sbb
or
push
add
jmp
xor
roll
xchg
test
xchg
jbe
sub
add
adc
xchg
idivb
jno
cmpb
add
rol
sbb
fadds
add
and
movsl
or
push
jne
cmpsb
jo
fdivs
or
add
mov
loopne
rcr
ret
push
pop
sbb
sub
mov
lock
les
adc
sub
mov
mov
mov
cmpl
mov
mov
lock
pushf
add
adc
insb
pushf
cld
mov
adc
or
shlb
sbb
add
add
lods
cmc
popf
xchg
lcall
sbb
mov
or
aam
insb
jmp
cmpsb
sbb
inc
dec
sub
das
aaa
sbb
aaa
mov
fadd
inc
add
fs
push
int3
or
cltd
push
enter
rorb
or
xchg
or
add
or
xchg
lcall
pop
or
jo
inc
lea
adc
inc
mov
or
mov
cmp
pop
sub
pusha
inc
je
add
sbb
ret
jmp
xchg
jmp
cmpsl
or
insb
xchg
xchg
sub
adc
dec
ret
fstp
adc
ret
adc
shlb
push
fmul
inc
imul
aam
arpl
and
push
jmp
xorb
jno
out
in
cmp
pop
xor
add
inc
loope
xor
or
add
jl
cmp
jge
adc
mov
and
insb
jl
xor
xchg
cli
mov
add
add
lds
xchg
sahf
inc
loop
jge
adc
cld
push
and
or
dec
test
sub
fimull
andl
test
pop
sub
fdivl
pop
ret
xor
dec
cmc
adc
nop
sbb
daa
xor
jge
add
sub
push
fdiv
aas
test
enter
js
subb
fcompl
mov
push
js
sbb
das
sub
leave
and
add
insb
movb
std
or
xchg
fbld
mov
lods
inc
popf
neg
sbb
movsb
mov
and
es
pop
das
adc
jg
ret
data16
shll
add
xor
xor
dec
inc
popf
subb
lods
daa
or
and
adc
fidivrs
jmp
inc
xor
mov
jb
inc
loope
mov
sbb
cwtl
fisubs
insl
xchg
mov
ja
mov
dec
inc
mov
push
cltd
dec
or
adc
sub
push
clc
sub
rcrl
ret
add
jecxz
dec
inc
xor
sbb
pop
cmp
mov
cld
add
hlt
shrd
sbb
cltd
add
cmp
jge
sbb
clc
dec
leave
or
std
xlat
mov
mov
add
dec
jmp
mov
cld
sub
push
or
rcl
sub
lcall
xchg
insb
xor
sahf
inc
fidivrl
push
ret
mov
lock
shl
dec
push
mul
push
and
imul
sbb
js
jg
jecxz
push
jb
xor
push
into
jnp
jmp
adc
jle
neg
mov
cmp
sarl
fcmovnb
iret
xlat
push
shll
xchg
add
cwtl
jmp
in
lock
inc
adc
test
jl
jg
mov
lret
xchg
dec
inc
dec
sahf
sub
dec
pop
or
or
pushf
dec
shl
sbb
addl
fidivrs
in
orl
jo
icebp
frstor
es
cmp
dec
adc
push
loopne
add
shufps
movl
shrb
inc
sbb
loopne
cmp
jle
in
push
sbb
mov
jmp
lock
enter
xchg
jns
neg
call
lock
cmp
cli
ret
aaa
push
or
add
sbb
dec
and
pusha
push
mov
push
jo
roll
push
repnz
je
or
inc
lock
fnstenv
addb
shll
leave
adc
mov
push
sbb
outsb
cmp
inc
jmp
arpl
sbbb
jne
bound
push
cmp
nop
cmp
mov
xchg
in
push
mov
xor
sub
cmp
pusha
inc
add
leave
xor
enter
sbb
push
push
push
shll
out
dec
out
mov
jl
loopne
jge
clc
and
mov
push
stc
mov
ss
ret
add
popf
jmp
xor
jo
fdivrl
sahf
clc
gs
or
pop
data16
imul
cmpsl
imul
inc
popa
je
inc
je
repnz
mov
mov
xor
xor
pop
sub
add
lcall
movsb
sbb
jp
push
mov
or
in
dec
clc
push
popa
imul
mov
or
mov
pop
roll
add
inc
loope
ret
push
cmp
mov
push
je
dec
ret
sbb
pop
inc
test
jp
test
and
out
mov
shl
ds
push
adc
push
mov
push
pusha
jmp
jp
div
mov
push
xchg
shll
push
xor
data16
hlt
jbe
or
push
popf
cmpb
cmp
cli
jge
mov
adc
sbb
je
add
or
inc
jecxz
cmp
add
add
mov
pop
call
aam
adc
push
test
out
inc
jmp
cmc
cmp
add
fwait
push
adc
dec
inc
add
inc
ljmp
xor
push
cld
jmp
mov
sub
and
and
add
nop
pop
dec
jl
push
push
adc
dec
std
and
mov
inc
ljmp
inc
adc
push
rorb
int
je
sub
mov
movsb
push
sub
push
mov
inc
mov
adc
cltd
xor
jmp
insl
fwait
loopne
lds
sub
cmpl
pop
clc
jo
push
fsubrp
push
or
push
sbb
dec
push
mov
adc
or
push
imul
pop
add
movsb
cs
rclb
jo
cld
add
or
in
fiaddl
jb
pop
inc
cmc
andl
fildll
add
lret
cltd
je
dec
je
dec
push
push
jmp
or
jmp
or
sub
add
test
mov
xchg
orl
pop
adc
push
xchg
out
repz
pop
ret
enter
rcl
js
adc
bts
jecxz
data16
int3
or
add
mov
sub
sub
lods
sarb
iret
xor
loopne
sbb
sbb
adc
aas
cmp
ljmp
mov
movsl
cmpsb
sahf
mov
addl
mov
or
push
fldt
lahf
jbe
or
cld
xchg
push
sbb
gs
rclb
jnp
push
nop
mov
fidivl
into
sub
and
inc
imul
and
inc
lret
jl
mov
movsb
add
or
pop
cmpl
adcb
pop
enter
or
pop
dec
sbb
add
sahf
rcrb
push
call
in
mov
rorl
or
sbb
lret
aam
adc
out
out
clc
shr
add
or
mov
imul
pop
or
mov
push
push
adc
test
sub
xchg
mov
lret
add
mulb
or
add
pop
mov
pop
add
popf
jp
pop
cmp
out
mov
adc
inc
jbe
add
jl
or
rorb
aaa
cmp
or
dec
aaa
and
pop
push
push
mov
or
and
push
and
cmp
xchg
xor
add
add
xor
and
into
clc
cmpb
lea
roll
mov
push
es
std
sub
lock
daa
and
push
or
roll
xor
pusha
cmpsb
and
xchg
or
xor
add
or
rcrb
mov
push
and
andb
loop
loop
sub
mov
jle
cli
jne
mov
sbb
inc
roll
add
cmpsb
or
xchg
or
mov
jp
mov
shll
data16
and
jbe
les
jb
pop
xchg
dec
pop
mov
js
xor
flds
imul
leave
pop
inc
cmpsb
sub
sbb
push
inc
clc
out
loope
fwait
sub
loop
dec
rorl
xor
test
push
xor
add
ret
cmc
xchg
inc
push
addl
lret
sub
mov
testb
push
jo
mov
push
ret
adc
dec
daa
xor
push
cmpb
inc
add
cmp
or
or
mov
jo
outsb
cmp
ja
lods
sub
lds
popa
push
dec
sbb
add
mov
xchg
shlb
mov
and
pop
xchg
rcrb
mov
xchg
mov
pushf
outsl
fs
mov
cmp
fdivrp
lea
mov
clc
push
sbb
xor
or
push
mov
or
mov
mov
fisttps
sbb
xor
jne
add
add
and
cmp
je
add
mov
sub
movsl
loope
les
pop
subb
and
adc
sbb
fildl
ss
push
add
and
add
cmp
and
push
rorb
jmp
push
sbb
dec
mov
call
ss
adc
imul
inc
dec
sub
adc
roll
pop
aad
call
push
cmp
mov
hlt
lcall
sarb
inc
and
call
daa
movsl
jo
aam
pop
cmpsb
fwait
stos
or
mov
test
mov
pop
gs
adc
push
jmp
adc
add
cmp
je
dec
xchg
sub
xor
inc
aam
push
fstl
or
xor
ficoml
shlb
push
jns
push
movb
fwait
add
test
push
dec
orb
ds
mov
cld
inc
sub
cmpsb
pop
cmpsb
sahf
and
ljmp
jmp
jle
adc
lret
mov
mov
jnp
jmp
dec
add
ret
add
adc
rorb
push
addl
mov
pop
fprem
out
roll
leave
add
or
je
mov
iret
adc
adc
pop
or
pop
test
mov
xchg
pop
bound
adc
jne
push
and
hlt
fsubl
sti
pop
faddl
pushf
jo
subb
mov
lret
arpl
pop
sbb
rorl
jo
orb
test
lea
push
dec
add
jg
jg
dec
jge
inc
inc
push
neg
neg
cmp
jnp
fcomps
sbb
inc
ss
shlb
sbb
xchg
fwait
mov
xorl
push
push
or
pop
adc
and
fnstenv
imul
push
jnp
adc
sbb
mov
add
or
jns
mov
dec
jne
pop
pop
pop
aam
shll
adc
xchg
test
lods
rcl
ljmp
shr
sub
cmp
adc
shr
pop
push
idiv
and
maskmovq
cld
lock
je
pop
pusha
or
mov
mov
notl
cmp
addr16
dec
or
fidivrl
pop
add
jae
adc
movsb
into
xor
adc
inc
cli
xor
dec
movsl
es
pop
or
push
or
aad
mov
into
jbe
rclb
aam
aas
xor
scas
je
hlt
dec
and
adcb
add
rorb
adc
add
sbb
rolb
inc
cmp
cmovae
or
call
popa
add
arpl
insl
and
and
adc
mull
pop
xlat
ss
scas
push
jo
add
mov
ljmp
inc
ss
dec
out
aaa
dec
roll
es
cmpsb
jnp
daa
lods
push
movsb
and
je
jp
push
out
cld
mov
add
xchg
enter
pop
adc
inc
jmp
sub
inc
add
js
mov
subl
ret
cmp
add
mov
adcb
push
orb
dec
icebp
or
add
mov
mov
cs
cmpsb
sar
in
pop
je
adc
cli
out
mov
push
cmp
ja
add
cmp
adc
cmp
jne
shll
dec
shll
leave
adc
mov
sbb
add
jl
pop
pop
push
dec
or
je
adc
pusha
and
adc
sbb
dec
push
pop
dec
ljmp
add
mov
int
xor
cmp
jg
test
push
movb
jmp
mov
and
sbb
stos
iret
cmp
test
add
mov
and
mov
negb
pusha
movw
jb
rcrb
test
inc
push
lcall
test
loop
mov
in
ljmp
mov
popa
lods
sti
scas
fcmovb
outsl
test
mov
ds
push
pushf
addl
andl
push
pusha
mov
push
add
cmp
pushf
rcrb
mov
es
imul
std
rcr
call
inc
sub
lock
dec
lea
sar
dec
dec
jmp
inc
into
movswl
xchg
ss
neg
push
es
ljmp
fidivrl
cmp
sub
inc
ret
inc
call
cmp
xorl
push
jae
pop
insb
fs
add
dec
addr16
cwtl
mov
lcall
adc
mov
push
jl
pop
or
dec
ret
push
lcall
mov
adc
jae
in
mov
fcmovu
push
or
and
lea
inc
xor
xor
cmpsl
add
into
sahf
push
mov
dec
adc
les
jae
pop
and
mov
inc
call
in
ljmp
xor
cmp
jle
mov
jne
lea
or
cwtl
rolb
adc
pushf
inc
mov
push
lea
sbb
nop
pushf
test
mov
fcoml
xor
xchg
dec
push
nop
add
add
movsb
sub
or
ret
movsb
xor
inc
insl
pusha
imul
mov
or
int
jl
push
lods
and
cld
sarl
jae
jle
push
jo
adc
clc
shll
sbb
out
adc
rolb
rol
pop
or
push
loope
fldenv
cmp
rorb
sbb
push
lret
movl
mov
or
pop
outsl
and
jle
insl
test
cwtl
shrl
loope
shr
or
mov
jp
or
dec
mov
hlt
mov
imul
filds
and
push
dec
repnz
add
dec
cli
cli
inc
cli
div
sub
sub
imul
and
cmp
test
outsb
dec
bound
and
push
scas
mov
or
mov
fdiv
mov
xor
and
and
ljmp
imul
enter
jb
data16
lock
xor
fmuls
add
pop
fdivl
push
fiadds
or
pushw
sbb
mov
xor
loop
out
jge
sbb
enter
fcoms
jb
inc
jne
pop
adc
lret
dec
in
push
dec
inc
push
aam
daa
adc
jne
outsb
das
cmp
inc
shlb
add
jns
cmp
sub
nop
and
dec
sub
jne
xor
sbb
shlb
dec
push
adc
cmpsb
xor
add
or
mov
sbb
fcmovu
mov
mov
insl
test
je
inc
or
mov
int3
jg
add
xchg
add
idiv
adc
xchg
adc
mov
into
or
adc
xchg
push
push
sbb
mov
out
and
jge
rcll
enter
jb
or
jecxz
jb
jmp
add
repnz
sub
fistpl
fs
movsb
in
nop
sbb
fwait
dec
push
mov
pusha
add
sub
xor
sbb
mov
sbb
add
inc
mov
dec
xchg
cmp
jle
push
pop
outsb
add
incb
sub
mov
or
xchg
lods
pop
cmp
in
xlat
leave
and
pop
cli
pop
inc
pop
rclb
xor
loop
cli
fcoms
xor
fiadds
cmp
imul
pop
mov
mov
imul
call
daa
mov
pusha
lea
push
and
stc
xor
mov
mov
or
loop
in
ficoms
out
pop
sti
je
fidivrl
add
cmp
cld
or
dec
into
or
xor
mov
test
clc
rolb
push
mov
inc
dec
enter
sahf
mov
mov
add
or
mov
sub
test
call
or
add
into
pop
add
cld
or
mov
inc
ljmp
jmp
insl
or
sub
cmp
jge
push
cld
stos
aas
sub
cmpb
or
add
dec
cmp
xlat
aam
inc
dec
add
add
fadds
test
mov
call
ret
jp
jne
dec
xchg
xorb
divb
int
pop
or
out
cmp
in
filds
or
mov
lret
or
add
push
mov
mov
jp
ret
adc
imul
popa
push
lcall
rclb
mov
mov
add
sub
mull
or
push
push
mov
or
sub
imul
jle
xor
pop
jne
or
stos
add
push
pop
scas
je,pt
xor
ret
sbb
adc
mov
push
cld
mov
ret
or
dec
lret
add
xchg
adc
or
orl
ret
addb
mov
iret
and
xchg
out
lret
into
pusha
inc
and
pop
imul
sub
and
pop
pop
mov
xor
pop
cmpps
push
sub
prefetchw
sahf
inc
ret
or
imul
push
lock
push
ficompl
jne
or
or
loopne
xchg
cmpsb
add
add
aad
lret
inc
je
pop
rolb
jnp
mov
out
sbb
or
push
pop
or
add
adc
jnp
sbb
and
mov
ret
ret
test
pop
fmuls
add
shlb
ret
add
dec
ljmp
dec
adc
add
cmc
leave
nop
clc
mov
sbb
sub
or
add
push
push
scas
sbbl
cmpb
mov
addl
xchg
add
test
loopne
mov
xor
sarl
repnz
test
adc
lcall
scas
pop
pushf
sbb
xchg
into
mov
mov
sbb
and
sbb
xchg
xchg
out
inc
jg
into
into
xchg
mov
xchg
into
mov
ja
mov
sub
push
pop
nop
sarl
sahf
pop
mov
aam
pushf
fcoms
clc
shlb
or
sbb
stos
push
sbb
push
adcl
mov
push
lcall
test
out
adc
loope
jo
add
movsb
es
jno
fwait
stos
arpl
negb
test
mov
and
jo
jo
cltd
and
xor
scas
sbb
sub
pop
add
mov
in
daa
xchg
jmp
inc
xor
mov
loopne
aad
out
pop
mov
adcb
jge
sub
sti
adc
fstps
xchg
mov
out
or
mov
popa
pop
enter
fsts
inc
xchg
sbb
push
pop
jbe
inc
lock
scas
add
sbb
rcrl
push
divb
in
hlt
add
mov
ljmp
fldenv
and
or
jo
push
sahf
add
repz
sbb
mov
push
insb
jno
xchg
les
xor
je
sub
sub
loope
test
mov
mov
push
roll
mov
cmp
jb
cmp
jbe
dec
and
ror
in
mov
gs
pushf
xchg
loopne
lds
mov
fisubrl
cmc
pusha
test
stos
mov
ret
or
aam
sbb
aam
gs
jle
mov
adc
gs
inc
or
mov
inc
ret
xchg
adc
pop
aam
mov
adc
sub
push
loopne
cmp
addb
pushl
aam
lds
push
and
push
push
mov
inc
aaa
sbb
pop
and
lock
xor
and
fmul
xor
or
push
push
rclb
push
cmpsl
push
pop
adcb
push
lret
xor
leave
rcrl
cwtl
xchg
jmp
dec
inc
push
inc
adc
aam
ljmp
mov
cmp
cs
push
inc
push
aaa
sbb
add
mov
mov
lea
mov
ret
pop
cmp
add
fsubrl
daa
fnstcw
add
xchg
inc
std
aam
pop
jmp
mov
or
mov
pop
xor
push
add
pop
les
bound
dec
sub
adc
sbb
dec
mov
lahf
stos
mov
loope
aaa
jp
or
jne
or
xor
sbb
call
or
xor
insb
ss
inc
mov
dec
push
outsl
mov
pushf
inc
inc
xor
inc
data16
pop
push
inc
cmp
jnp
dec
loope
add
and
fidivrl
sbb
xchg
sbb
dec
in
shrb
jle
mov
jno
test
sbb
cmp
enter
fadd
rorb
sti
call
push
mov
push
stos
iret
pop
popf
adc
pop
out
sub
dec
lea
stc
addl
das
add
std
mov
pop
pop
add
lock
dec
mov
sbb
shlb
mov
mov
jmp
dec
adc
add
fs
loope
pop
sbb
inc
mov
mull
outsl
jae
ja
sub
xor
or
mov
adc
dec
sbb
jne
leave
inc
insl
push
test
push
iret
mov
pushf
xor
push
mov
sub
add
inc
sbb
mov
je
shrb
sub
dec
hlt
jmp
dec
xor
add
jbe
adc
sbb
sbb
pop
jnp
jecxz
scas
adc
xor
test
jbe
aad
push
jno
test
shrl
lret
pusha
add
lods
mov
rorb
inc
jb
xor
adcb
cmp
push
or
clc
inc
and
add
sub
lea
push
sahf
sub
sti
and
js
push
fcomps
lahf
imul
pop
mov
push
and
nop
cmp
add
cmp
rolb
test
pop
xor
jmp
or
or
cmp
mov
mov
push
push
push
dec
sub
mov
jo
addr16
mov
jl
push
mov
inc
push
push
std
inc
ret
xor
sub
mov
enter
les
les
mov
decl
xchg
pop
add
and
xchg
and
cld
push
xchg
sbb
push
add
add
fadds
loope
push
sar
fsubs
sarb
or
push
and
and
xor
xchg
cmp
pop
sub
inc
arpl
shll
xchg
mov
add
orl
test
mov
adc
add
mov
add
sub
dec
push
mov
xor
roll
cltd
sub
sub
dec
sbb
fisubl
push
push
pushf
ret
es
movsb
jo
inc
mov
push
clc
rclb
lahf
mov
int3
jmp
subl
push
sbb
xchg
add
or
insl
cld
mov
loopne
rcrb
xchg
loopne
ss
or
ja
or
sbb
push
les
inc
pop
popa
adc
fistl
mov
rcrb
add
cmc
or
push
xor
data16
and
add
adc
orb
inc
mov
call
js
or
rcrl
rclb
dec
or
into
inc
mov
in
dec
xor
jns
adc
and
cmp
and
stos
mov
adc
jae
xor
scas
arpl
xchg
jmp
sub
jp
dec
xor
in
imul
stos
and
mov
dec
sub
outsb
insl
clc
pop
or
popf
dec
dec
inc
test
mov
addb
ret
lds
xor
or
fmulp
xor
mov
pop
sub
popa
mov
imul
test
push
xor
fcoms
dec
or
loopne
xchg
adc
movl
add
push
xor
sub
sbb
adc
push
shl
imul
rclb
mov
mov
icebp
inc
push
sahf
adcl
sub
cld
arpl
imul
rorl
fidivrl
out
rol
ja
mov
jmp
jb
daa
lock
jo
push
js
rclb
xchg
jge
cmp
outsl
mov
aas
or
movsl
jge
or
mov
adc
mov
sbb
cmp
ja
shlb
jge
mov
push
xlat
cwtl
movsb
cld
sbb
mov
aam
out
push
inc
pop
xchg
cmp
out
jp
repnz
adc
test
jg
or
lock
imul
lcall
pushf
icebp
mov
call
icebp
cmp
push
pop
shlb
push
shlb
mov
push
cs
inc
push
in
and
mov
cltd
jb
dec
mov
xor
inc
add
loope
icebp
push
push
cmp
push
sub
cmp
inc
pop
add
dec
jb
and
pusha
scas
lea
inc
lock
xchg
enter
push
arpl
pop
adc
jne
testb
testb
repnz
insl
outsb
sub
in
sub
push
inc
aaa
sub
fcoml
inc
loopne
pop
cmp
cmp
sbb
mov
repz
stc
and
nop
xor
decl
cmpsl
aas
xchg
jg
mov
jg
jae
xor
imul
cmp
bound
mov
adc
mov
xor
push
int
sub
cmpl
mov
sti
pushl
jge
out
int
shr
sbb
xorl
test
jmp
mull
in
push
adc
in
cmpsb
jo
mov
inc
xchg
cmp
std
imul
push
and
and
inc
sbb
inc
lea
xor
xchg
adc
jo
js
and
sub
mov
sub
push
jbe
lds
xchg
pushf
sbb
mov
insb
sbb
push
xchg
sub
mov
add
jl
pop
sbb
mov
test
push
add
insl
jmp
push
inc
mov
inc
lock
cmp
add
or
dec
push
fstps
mov
and
push
push
push
add
or
daa
mov
jb
or
adcl
data16
int
incl
inc
adc
pop
jl
and
stos
in
mov
call
push
mov
addr16
rcll
jae
mov
call
or
loop
stos
ss
test
repnz
inc
add
rclb
inc
inc
mov
les
fs
add
mov
mov
shr
aaa
loope
fsubs
insl
cmp
pop
inc
rclb
nop
adc
jnp
push
lods
cmp
fildll
cltd
adc
and
cwtl
ret
cmpl
dec
pushf
pop
adc
pop
jne
jle
inc
or
sbb
mov
lret
cmp
adc
cmp
and
int3
mov
out
pop
xor
cmp
movsb
xor
cmpsl
cmpsb
jmp
and
pop
pop
push
inc
outsb
fcomps
add
mov
aam
rcr
rep
push
jle
cld
mov
push
pop
cmp
ret
lcall
sbb
lods
shll
pop
push
inc
or
addr16
imul
shrl
inc
dec
pop
dec
mov
sbb
dec
or
pop
add
test
xor
inc
inc
push
pop
mov
lea
ds
xorb
ljmp
add
out
repnz
loope
mov
dec
jo
or
xchg
es
fs
dec
cmpsb
popf
and
dec
push
adc
cmpl
inc
sub
inc
pop
fwait
ljmp
cmp
xor
push
sbb
ja
popa
xchg
je
mov
xchg
sbb
jmp
and
nop
imul
aas
sbb
testb
cmp
inc
dec
dec
punpcklbw
notl
adc
std
push
rcll
sub
cmp
mov
mov
adc
xor
leave
push
dec
je
dec
jne
push
cs
rclb
ja
fcoms
or
xor
add
add
out
inc
je
je,pn
adcl
hlt
filds
push
sub
les
aaa
mov
sbb
cmpl
or
mov
pop
icebp
push
dec
je
xchg
jns
lea
mov
xchg
out
bnd
loope
inc
sbb
pop
xor
jecxz
jmp
jmp
cltd
xchg
and
insb
in
xchg
lods
push
push
xchg
add
hlt
push
lock
jb
push
icebp
stos
push
arpl
push
subb
mov
popf
clc
push
lea
mov
inc
push
ss
inc
mov
add
outsl
push
je
cmpb
sub
add
and
add
xchg
pop
pop
fldl
out
insb
sub
clc
cli
dec
cmp
fcmovb
mov
lret
xchg
push
scas
or
xor
pop
sbb
push
xchg
sbb
or
bound
push
fildl
cmp
aad
add
pop
and
sbb
xor
xlat
mov
imul
sbb
adc
sarl
sahf
jecxz
add
xchg
push
rorl
stc
dec
mov
std
hlt
jne
adc
add
push
pop
dec
jmp
mov
sbb
adc
inc
jbe
fs
mov
jle
jl
in
js
dec
add
xor
inc
sbb
cmp
jne
add
add
push
mov
adc
dec
dec
cmp
rolb
xchg
icebp
mov
movsl
add
sbb
je
addb
xor
jno
jbe
test
pop
lret
lock
xor
or
add
cli
and
inc
lock
or
imul
adcl
scas
jle
out
orb
fiaddl
and
mov
and
test
faddl
sbb
retw
add
dec
jg
adc
jp
fnstenv
mov
jno
adc
xchg
movsb
fdivrl
sbb
pop
ret
sbb
and
adc
or
adc
cmp
rclb
jb
or
or
cmpsl
push
lock
cmp
mov
and
divb
pop
pushf
and
xchg
xchg
jne
jae
mov
das
adc
or
inc
test
push
inc
adc
lods
bound
xorb
or
jp
cmpsl
adc
fcoms
jbe
inc
lret
push
test
outsb
stc
pop
sti
sub
add
insb
insb
and
mov
push
mov
add
rclb
ss
aas
push
adc
mov
ret
enter
je
cmp
cmp
jecxz
and
mov
testb
and
loopne
push
testb
add
pusha
or
xlat
in
test
mov
push
push
mov
cwtl
and
jb
mov
push
cmp
jle
xor
cmp
jbe
clc
push
push
or
or
push
cwtl
push
pop
js
push
inc
rcr
xchg
xchg
cmp
xor
insl
mov
cmp
test
add
push
orl
lds
push
shr
lods
test
rcrb
fstpl
pop
jmp
enter
push
sub
dec
scas
push
inc
pop
pop
pop
push
lahf
sub
sub
pusha
push
orb
lods
pushf
adc
popa
stos
ret
mov
ljmp
in
fstl
xchg
popl
xchg
ss
jp
mov
sbb
mov
inc
adc
inc
sbb
mov
add
mov
movsb
cltd
jne
add
push
in
add
mov
mov
daa
stc
pop
enter
add
xor
adc
sbb
sub
add
sub
add
mov
mov
add
test
adc
and
pop
cmp
and
fld
fldcw
xor
fildll
nop
push
xchg
pop
les
fstps
icebp
pop
packsswb
sti
rolb
mov
or
sub
das
fsubs
nop
inc
fidivrl
test
lea
sbb
lods
mov
mov
and
sub
dec
addl
test
incb
or
dec
in
jge
add
mov
xchg
inc
enter
or
or
dec
xchg
add
faddl
sbb
mov
or
insb
mov
dec
sarl
xchg
lock
dec
insb
push
cwtl
pop
adc
nop
mov
jo
aam
or
or
mov
xchg
fistl
in
add
add
pusha
xchg
daa
daa
in
dec
call
or
pusha
bound
pop
movsb
mov
mov
es
cld
inc
fmul
and
push
pop
fwait
xchg
fbstp
add
mov
or
and
cmp
jl
xchg
int3
push
xlat
clc
push
pop
rcrb
and
aad
sub
cmp
mov
xchg
sbb
push
cmp
dec
faddp
add
rcll
enter
inc
push
ret
popf
jb
arpl
add
inc
icebp
fdivs
adc
adc
in
cmc
popa
loopne
in
or
nop
adc
xor
mov
icebp
into
or
rorb
add
sbb
shrl
shll
cwtl
lods
and
mov
push
adc
dec
ret
movsb
inc
fs
inc
cmpsb
mov
adc
ljmp
xchg
sbb
adc
adc
ss
add
and
popa
or
xchg
or
mov
in
xor
pop
inc
xchg
arpl
test
lret
sbb
loopne
leave
setae
cmp
mov
dec
inc
adc
nop
in
jb
arpl
jne
jl
in
jbe
push
js
fdivl
pop
xchg
int3
sub
and
and
in
cmp
add
mov
call
rcl
mov
and
incb
dec
aam
rorb
aaa
pop
mov
pop
popa
cmp
in
shll
mov
loop
lahf
cmp
cli
std
push
jno
pusha
cltd
fs
dec
fs
es
js
add
cltd
jl
ds
xor
sbb
call
mov
adc
loopne
or
add
mov
jo
adc
cmpsb
mov
in
fdivrl
mov
icebp
lret
add
xchg
xor
ret
adc
shr
rcrb
cmp
and
jo
popf
mov
in
sti
gs
push
test
sbb
call
adc
add
imul
rolb
aad
push
stos
jne
cmp
inc
sub
xchg
int
adc
mov
test
mov
imul
mov
and
jl
stos
faddl
popa
js
lods
add
or
lock
push
push
pushf
int3
mov
mov
or
mov
sbb
add
ss
adc
mov
jl
ret
dec
insb
cltd
adc
je
enter
sub
nop
int3
aam
dec
add
inc
cmp
mov
jns
add
adc
cmpsb
shl
mov
lret
mov
pushf
popf
lock
bound
test
cld
or
aam
adc
adc
aam
enter
nop
sbb
call
or
sbb
or
inc
sub
jg
mov
dec
inc
nop
test
cwtl
inc
xchg
das
jo
or
push
fsubrl
scas
aam
push
test
lret
inc
cmp
and
imul
icebp
mov
fs
mov
and
ret
icebp
inc
addb
roll
fsubrs
sbb
int3
sbb
adc
jl
daa
icebp
pushf
iret
push
and
mov
jns,pn
es
mov
or
add
inc
fcoms
clc
cltd
pop
hlt
push
xchg
add
or
add
lret
ret
dec
add
pop
movsb
add
call
inc
rcrl
lcall
bound
sbb
fdivrl
sub
loope
adc
or
inc
mov
xor
dec
fs
lock
xchg
ret
loop
add
adc
mov
shrl
push
or
mov
test
mov
addr16
mov
and
push
cs
adc
mov
mov
scas
outsb
or
inc
sbb
std
in
popa
xor
test
or
scas
push
or
repnz
mov
ja
fbstp
sub
cwtl
and
sbb
in
and
jne
test
and
loopne
sbb
in
mov
lea
or
mov
loope
in
push
xchg
pop
and
inc
fcomp
dec
repz
push
jg,pt
movsl
sbb
imul
mov
jmp
addl
inc
xchg
in
call
mov
pop
andl
es
mov
xlat
adc
mov
adc
or
push
sbb
popa
xchg
sbb
xlat
clc
aad
movd
pop
xchg
nop
sbb
cmp
decb
inc
imul
jne
daa
in
mov
or
out
andb
loopne
or
ror
xchg
fcomp
nop
dec
push
cltd
aam
loopne
sub
cltd
loopne
fdivs
nop
rorl
les
push
leave
or
mov
movsb
sti
xor
xchg
es
sbb
rclb
shll
test
sbb
addr16
jmp
mov
scas
mov
sti
in
mov
daa
jecxz
xchg
mov
pop
in
das
xchg
nop
faddl
mov
or
jb
cmp
lock
test
sub
push
fcoms
call
push
xchg
or
cmp
popf
cmp
fmull
sbb
enter
or
and
and
lock
nop
ret
inc
lock
xor
xor
sbb
mov
adc
mov
movsb
xchg
test
call
mov
aad
or
enter
xlat
mov
shrb
insl
or
pusha
dec
filds
inc
movsb
push
or
push
pop
xor
mov
xor
ror
mov
aaa
adc
imul
mov
aad
jnp
stc
scas
mov
ret
sbb
jecxz
cmp
inc
test
or
and
fwait
jbe
push
or
fmull
push
and
adc
adc
and
orb
push
adc
push
lds
and
jp
add
or
test
adc
sub
xor
xor
je
andl
mov
call
bound
in
pop
aam
fsubrs
sbb
xor
add
dec
enter
and
andb
xor
push
adc
inc
sub
imul
rcrb
mov
inc
fcom
pop
xchg
test
adc
call
jo
in
lock
jno
insb
adc
sub
sti
xor
pop
subb
lds
and
mov
add
mov
xor
test
mov
xlat
and
jbe
ret
in
push
movsb
cmp
das
add
enter
cmpleps
dec
loopne
shrb
daa
adc
scas
in
mov
push
push
mov
push
jmp
mov
loopne
or
pop
inc
cmpsb
movsl
push
mov
outsb
mov
inc
mov
dec
mov
rorl
inc
cmpsb
adc
or
mov
fistl
mov
fildl
js
mov
pushf
xor
cmp
fmull
in
jne
jge
rclb
loope
mov
sbb
rorb
faddl
mov
mov
and
fmuls
mov
xchg
push
sbb
push
inc
mov
push
shlb
pop
or
adc
xchg
or
or
or
and
mov
mov
or
pop
and
xor
mov
and
cmp
cmp
adc
nop
inc
scas
adc
or
push
in
or
jo
or
push
movl
lods
xor
in
or
push
mov
and
addb
dec
add
shlb
adc
stc
aaa
dec
and
pusha
or
inc
ss
pop
aaa
fistl
and
inc
test
cmp
call
pop
shrl
les
sub
int3
pinsrw
or
test
cmp
int3
insl
stos
mov
pop
aam
subb
enter
mov
mov
jg
cmp
in
push
mov
sub
ja
dec
xor
mov
adc
and
mov
sub
inc
insb
add
mov
pusha
xlat
mov
lods
push
inc
jbe
jmp
cmp
lea
fisttpll
dec
in
test
adcl
loopne
jmp
jb
sbb
xchg
test
insb
seta
xchg
pop
xor
cmp
insb
or
insl
stos
lea
mov
mov
int3
mov
unpcklps
aam
ret
cmp
cmpsl
or
cmp
mov
cmp
cmp
cmc
insb
or
cmp
in
pop
loop
cwtl
inc
in
cmp
xchg
cmc
pushf
fwait
mov
xor
cwtl
adc
in
and
mov
inc
adc
fmuls
lods
popf
xor
add
rolb
and
enter
jmp
adc
sub
mov
sub
inc
jno
fisttpl
jmp
mov
ja
sbb
push
and
movsb
inc
sub
fdivr
enter
and
and
shrl
fnstcw
mov
adc
in
dec
push
cmp
and
imul
mov
fnsave
mov
notl
aas
mov
dec
xor
cmp
xchg
mov
inc
les
cmp
ja
aas
mov
mov
sbb
jo
test
aas
inc
and
cmp
adc
xchg
adc
les
push
pop
mov
jmp
adc
or
cwtl
dec
mov
testl
int3
jp
xchg
push
and
xchg
mov
cmc
xchg
push
loopne
jb
adc
pop
cmp
repnz
loopne
addl
or
mov
movsl
and
dec
cmpsl
fdivr
repnz
cmp
add
mov
lahf
das
sbbb
dec
loopne
mov
cmp
cmpsb
and
or
xor
mull
test
pusha
movsl
dec
adc
and
pushf
imul
sbb
pop
out
mov
or
adc
mov
mov
xor
rcrl
inc
cwtl
fs
mov
rol
or
int3
sbb
sbb
add
mov
cmp
or
sbb
in
not
ret
pop
sbb
inc
mov
inc
test
dec
inc
in
rclb
popa
xor
insl
faddl
cmpsb
push
in
sub
mov
inc
fdivr
enter
mov
aad
mov
jo
or
pop
cmpsl
and
call
jb
pusha
addb
insl
fldcw
cmpsl
mov
xor
inc
cmpsb
ljmp
sbb
and
or
xor
jge
inc
sub
pusha
test
lods
xor
shll
cltd
notb
rclb
mov
stos
mov
enter
orb
test
gs
pop
lods
inc
xchg
adc
in
jecxz
jnp
dec
in
mov
mov
pushf
loop
xchg
movsl
les
add
ret
rorb
dec
or
xor
and
adc
jl
sbbl
enter
subb
or
inc
lea
rcl
cmpb
xchg
push
fcmovbe
shrb
sbb
mov
pop
in
int3
gs
not
inc
sub
or
sub
cltd
inc
jns
aaa
mov
daa
in
jg
aam
test
rorb
mov
inc
mov
nop
and
mov
pop
and
gs
add
mov
ja
xor
push
les
je
cmp
sbb
in
icebp
nop
dec
call
aad
mov
jle
pop
test
test
dec
orb
test
xor
aam
sbbb
dec
sub
dec
test
fadds
negl
jno
mov
adc
adc
aam
insl
xor
test
dec
mov
pusha
and
push
mov
mov
je
mov
fiaddl
mov
mov
pop
xchg
push
jne
or
sbb
lds
aas
mov
and
das
shll
lds
test
sub
in
sub
dec
gs
mov
push
add
rclb
gs
in
add
int3
or
leave
mov
lds
xchg
test
test
adc
push
push
mov
pushf
and
sub
ret
jb
fcoms
lea
sub
andb
sarb
mov
movsb
mov
mov
rclb
pop
inc
sbb
inc
push
mov
ret
pop
loope
push
cmp
mov
dec
xor
xor
adc
or
push
or
or
test
mov
mov
adc
pop
stos
cmp
dec
add
pop
andb
and
add
xchg
sbb
inc
adc
int
mov
fidivl
test
sbb
mov
orl
and
mov
dec
test
mov
jnp
fs
mov
push
or
or
mov
add
es
je
pop
mov
rcrb
test
rclb
and
mov
and
mov
lret
add
sub
aad
push
jb
decb
nop
xchg
pop
rcrb
push
mov
sbb
and
rcl
mov
jnp
and
cld
push
jge
inc
sub
fcoms
pop
push
faddl
call
or
push
push
adcb
push
jns
adcb
or
sbb
adc
lods
mov
mov
push
jg
cli
sbb
pop
fsubs
pop
adc
push
inc
inc
nop
push
lret
les
add
leave
pop
pop
cltd
push
enter
jmp
cli
filds
inc
jns
pop
call
and
jno
test
mov
xchg
popa
enter
fadds
mov
push
adc
push
fs
lea
dec
pop
icebp
loopne
jns
cs
dec
test
push
cmp
popa
aam
inc
mov
idivl
or
xor
movsl
in
mov
xchg
dec
push
fsubrs
push
sub
adc
insl
sbb
and
push
push
push
pusha
adc
leave
push
xor
and
sbb
xor
and
inc
cmp
add
xor
push
cltd
fcoms
repnz
cmp
mov
or
xchg
imul
sub
lods
adc
inc
enter
or
jle
push
movsb
test
jp
inc
or
test
cmp
pop
xor
mov
push
leave
mov
sub
mov
mov
xchg
mov
fbld
add
test
cmp
xlat
hlt
pop
xchg
and
inc
in
pop
movsl
in
notb
ret
xor
insb
mov
cmp
lcall
or
sub
aaa
inc
and
mov
pop
mov
push
mov
adc
test
pop
les
pop
imul
test
and
sti
les
pop
sub
mov
iret
ret
pop
dec
cmp
mov
mov
nop
add
fidivrs
sbb
cmpsb
mov
out
repz
cmp
add
inc
test
cltd
pop
inc
enter
mov
mov
inc
int3
int3
mov
les
rcrb
in
bound
rclb
dec
out
mov
pusha
inc
inc
adc
adcb
sub
and
test
pop
pop
adc
push
fbld
and
push
mov
and
lahf
out
cmpsb
xchg
shrb
mov
inc
dec
dec
or
pop
daa
adc
sbb
in
mov
sub
inc
fisttpl
and
add
pop
pop
je
lea
and
xor
rcrl
inc
jnp
or
pop
push
loopne
andb
push
sbb
inc
push
movsl
push
jb
arpl
adcl
addl
inc
xchg
loopne
inc
sbb
add
xchg
ja
xor
mov
sbb
test
addb
andl
mov
push
adc
cmp
mov
push
mov
pop
push
outsl
int3
jmp
push
pop
outsw
xchg
and
add
fs
mov
mov
xor
enter
std
aam
stos
imul
sti
mov
or
in
sub
lds
nop
cwtl
cwtl
and
sbb
rcll
cmp
push
in
daa
pop
push
jge
dec
xchg
js
push
xchg
movsb
adc
sub
insl
lods
lods
in
adc
movl
imul
nop
xchg
or
shll
push
mov
in
dec
and
sub
daa
mov
xchg
push
fsts
in
adc
push
add
jne
add
push
insl
and
mov
cltd
insl
lock
in
lock
scas
pusha
imul
cwtl
mov
loope
xor
or
ja
loopne
enter
mov
sbb
mov
fisttpll
movsb
cmp
mov
mov
jg
mov
adc
sub
ret
gs
imul
insb
movl
lock
insl
adc
xor
fimull
aam
dec
outsb
mov
mov
lds
out
adc
xchg
insl
fildll
dec
sbb
mov
shl
dec
int
sub
rorl
int
hlt
pushf
rcll
int3
jns
jo
ficoml
addl
mov
sbb
xchg
movsb
lock
jns
mov
pop
popa
add
insb
or
in
das
or
and
sbb
fcompl
nop
rorl
rorb
sub
mov
mov
mov
loopne
adc
pushl
push
xchg
sbb
adc
xor
mov
mov
and
sbb
inc
jo
aam
les
nop
add
insl
adcb
push
fs
mov
push
je
jl
push
fs
push
test
fs
inc
push
lods
insb
pushf
sbb
fs
dec
movsb
lods
push
movsb
add
inc
dec
xor
jecxz
adc
and
insb
lods
push
leave
and
dec
mov
xchg
dec
xor
pop
xchg
dec
xor
je
mov
and
mov
leave
and
mov
xchg
dec
adc
fistpl
pop
decb
rcr
insb
jmp
rol
shl
imul
adc
mov
enter
inc
inc
inc
adc
xchg
add
je
pop
cltd
sysenter
push
inc
mov
repz
leave
mov
push
xor
pusha
sub
sbb
mov
test
mov
in
inc
xchg
pushf
movsb
in
inc
push
lods
mov
mov
push
cmp
int3
aam
sbb
insb
lods
push
sub
enter
test
enter
adcb
inc
xchg
arpl
mov
lret
les
popa
and
leave
in
addb
and
cmp
pop
daa
daa
daa
mov
bswap
les
lods
movsb
pushf
xchg
pop
dec
outsb
daa
mov
test
dec
es
sbb
push
adc
in
mov
jo
mov
sti
orb
xlat
push
and
nop
push
bound
push
pop
sub
lods
inc
stos
adcb
lcall
test
cmp
push
test
fcmovnu
add
pop
in
adc
cwtl
movsb
aam
sub
sbb
ret
adc
test
andb
cwtl
sbb
mov
jno
inc
sti
jo
loop
sbb
movsb
pushf
loop
cmp
push
ja
mov
mov
pop
leave
and
in
pop
pusha
add
in
dec
jp
inc
call
movsl
push
lods
sub
icebp
movsb
jge
adc
test
mov
arpl
shl
movsb
pop
pop
in
or
pop
sarb
pop
fisubl
inc
inc
idivl
dec
adc
imul
fs
and
push
pusha
mull
add
or
push
dec
push
nop
mov
test
jns
adc
cmp
in
jae
lcall
pop
sub
mov
imul
popf
dec
inc
xor
sub
adc
cltd
push
lds
imul
pop
adc
push
insl
dec
jo
or
insl
mov
sub
ret
inc
and
sub
shlb
arpl
and
adc
fildl
nop
or
loop
rolb
fadds
int3
inc
pop
insb
aam
rcrb
orl
inc
lock
add
xor
ret
or
cmpsb
std
rolb
loopne
pop
sbb
movsb
add
sbb
dec
sub
mov
and
int3
xchg
ljmp
daa
sbb
sbb
rolb
sbb
xor
and
nop
add
fsts
orb
scas
shrb
xor
xor
stc
les
mov
mov
xor
and
xchg
jl
fs
imul
or
es
pushf
xchg
ja
sub
xchg
rcrb
aas
xchg
pop
adc
mov
dec
jb
int3
pushf
mov
scas
popa
sub
inc
sub
aad
jo
leave
jle
sbb
subl
fwait
movsb
inc
imul
sbb
add
jne
jg
mov
adcb
repnz
repz
enter
sub
fwait
or
mov
dec
insb
mov
das
or
jl
mov
nop
movsb
xchg
movsl
mov
sbb
mov
xchg
adcb
push
mov
std
push
nop
inc
sarl
je
jo
add
sbb
or
cmp
imul
xor
fwait
sbb
in
pop
fisubl
adc
mov
sub
cmp
inc
add
add
repz
ret
sub
in
sti
shll
adc
dec
xor
add
and
push
lods
jbe
sub
push
movsb
or
in
add
sbb
mov
pop
pusha
scas
cltd
add
icebp
mov
xor
or
cltd
clc
inc
inc
push
nop
icebp
addl
inc
in
aaa
xchg
dec
int3
in
sub
popa
mov
or
xchg
or
lds
and
shll
inc
insb
adc
sbb
in
adc
das
scas
ret
sub
movsb
call
sub
pop
mov
sub
or
or
lcall
sub
push
out
pop
dec
ficompl
and
or
imul
push
sub
sbb
mov
and
or
sbb
or
repnz
inc
pop
push
test
jae
xor
mov
adc
sahf
xchg
mov
and
mov
addr16
movsb
and
xor
pop
xchg
ljmp
mov
je
popa
addb
movsl
and
or
mov
xchg
xchg
xchg
add
adc
leave
pop
jecxz
xor
insl
add
inc
movsl
dec
push
in
mov
inc
mov
dec
lea
push
and
add
add
fnstsw
or
inc
mov
notl
pop
xor
in
ret
mov
imul
add
lea
loope
sub
push
test
adc
test
push
sbb
scas
insl
xor
cltd
adc
or
pushf
sub
or
dec
popf
adc
sub
pop
mov
xorb
adc
cltd
fcmovnbe
or
js
icebp
sbb
fdivrl
mov
mov
xor
jno
mov
inc
aas
ret
xor
inc
outsb
std
xorl
adc
fdivl
xor
mov
xor
pop
subl
and
mov
insl
mov
call
lods
add
dec
mov
cmp
nop
sbb
dec
cli
mov
adc
xchg
jbe
ficoml
shlb
jl
mov
shrb
cmpsb
dec
fldt
test
je
nop
cmp
adc
popa
push
insb
or
repz
inc
mov
or
pop
push
mov
jmp
pusha
cmp
js
or
int
cmp
sbb
mov
add
jl
and
inc
push
xor
inc
adc
mov
pop
adc
je
add
shrl
mov
adc
add
inc
test
int
mov
xchg
jnp
stc
bound
xchg
lcall
imul
enter
je
sbb
xchg
mov
ds
xchg
ret
pop
nop
xlat
mov
insl
ret
sub
nop
popa
inc
add
push
nop
and
xchg
dec
test
adc
sub
inc
nop
add
and
jecxz
les
lcall
leave
mov
adc
nop
imul
jge
test
rcll
or
movsb
or
push
xchg
xchg
cmp
mov
cmove
nop
movsl
syscall
inc
push
or
roll
jb
mov
push
fcoml
data16
push
fdivl
pop
sbb
fisubrl
cmp
mov
inc
jmp
lods
mov
mov
inc
mov
cli
and
scas
cltd
lock
cld
inc
cltd
jbe
pop
sbb
pop
xor
pop
clc
sti
pop
fs
cld
in
leave
and
xchg
testl
ds
lahf
mov
jo
or
dec
dec
jb
jb
or
jge
loopne
addb
push
jle
push
sbb
inc
adcb
sbb
movb
or
cmp
fisubrl
sub
repnz
or
sbb
adc
and
dec
in
mov
movsb
add
push
and
adc
jo
sbb
mov
cmp
icebp
xchg
call
les
push
xchg
inc
sbb
xorl
mov
mov
enter
sbb
push
mov
sbb
fmuls
push
js
add
inc
adc
mov
adc
cmp
das
ret
es
or
divb
mov
mov
faddl
or
pop
mov
sub
mov
inc
inc
inc
rolb
cmp
xchg
jmp
mov
xor
jns
cmpsl
stc
mov
mov
out
out
adc
push
inc
pop
ja
std
popa
out
mov
add
push
inc
add
rol
data16
ss
dec
add
jmp
aas
jl
add
mov
push
jmp
xlat
and
push
aas
xor
inc
orb
jnp
mov
add
adc
mov
mov
adc
or
cmp
rclb
cmpl
pushl
mov
add
into
pop
adc
test
dec
push
fiaddl
idivl
out
imul
push
lea
dec
or
imul
adc
aas
push
jnp
inc
xor
fldt
pop
sub
sub
rcr
jg
popa
and
insb
outsl
arpl
imul
jb
sub
popa
arpl
jne
jb
outsb
je
add
jge
push
inc
add
push
insl
adc
in
lcall
inc
outsl
jb
js
je
jb
orl
or
outsl
jl
mov
add
add
jne
les
ja
neg
inc
and
jb
dec
push
add
add
cmp
add
add
or
pop
es
sahf
inc
xor
icebp
fiaddl
inc
push
cmp
popf
inc
loope
push
and
sbb
sub
push
insl
xchg
je
pop
pop
out
push
je
and
jae
dec
fisttpl
xlat
loopne
mov
cmpsl
insl
push
push
xorb
or
bound
fisubl
push
jne
imul
jbe
aas
imul
ds
jp
outsl
or
mov
dec
fs
lret
fidivrs
out
outsl
jmp
jo
sbb
arpl
xor
sub
fwait
stos
insl
sub
push
imul
scas
cmp
jne
inc
sub
data16
scas
loope
outsb
dec
sub
jecxz
insb
jp
sub
insb
lcall
repz
lahf
sbb
xor
push
outsb
inc
imul
arpl
or
sbb
addl
das
cs
icebp
push
cmp
outsb
bound
sub
push
arpl
mov
xor
je
loope
mov
mov
gs
fcoms
das
jb
ret
inc
sbb
fidivrl
cs
add
xor
loope
loopne
outsl
andl
mov
fidivrl
jg
xchg
cmpsl
popa
sub
push
mov
lahf
aaa
jg
jmp
iret
lods
inc
push
pop
fbstp
xchg
dec
fbstp
jne
jbe
jb
jne
stos
aad
jae
jbe
test
xor
fisubrs
js
das
rcrl
pop
or
pop
cmpsl
ss
ljmp
pusha
fwait
stos
lahf
outsl
aas
or
movl
or
push
mov
mov
xlat
aaa
roll
imul
jb
fs
imul
shll
push
jl
popa
jnp
xor
outsl
pop
sub
das
xchg
mov
add
pop
das
mov
sub
xor
jge
je
scas
cmp
mov
jg
sbb
lea
out
pop
push
pop
jecxz
push
push
push
inc
sbb
sub
shlb
xor
dec
addr16
or
inc
int3
add
push
cmp
or
inc
sbbl
iret
repz
adc
das
sbb
adc
adc
push
sbb
sbb
iret
repz
mov
sbb
out
cmpsl
stc
test
sbb
push
das
push
lahf
push
imul
clc
pop
jnp
cmpsl
xor
push
jns
jp
iret
sarl
cld
sbb
incl
dec
aaa
add
mov
mov
test
sub
sub
push
mov
lock
loope
lret
lret
test
cmp
imul
pandn
ds
mov
fbstp
or
push
fwait
mov
dec
add
sbb
fisttpl
mov
xor
add
add
das
das
inc
pop
sub
mov
shlb
dec
ljmp
das
inc
and
decb
popa
pusha
dec
inc
jmp
jl
scas
mov
jns
aas
or
pop
ds
inc
mov
xchg
sbb
ds
push
fcomps
daa
outsl
dec
and
or
pop
inc
das
fcmovnb
push
mov
pop
imul
iret
fcmovnu
ss
imul
out
insl
pop
jo
and
arpl
fcmovb
inc
pop
pop
jp
int
jmp
and
sub
aad
mov
fbld
fcmovnbe
outsb
push
ds
neg
iret
mov
insl
mov
jg
jnp
aas
es
cmp
cmp
add
in
jne
and
adc
add
das
das
icebp
aas
lods
rcll
addr16
push
inc
inc
arpl
bound
out
jle
dec
outsl
jbe
dec
arpl
inc
fiadds
aas
insb
jo
sub
addr16
xor
insb
xchg
pop
jg
push
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
mov
popl
outsb
jns
jg
addr16
popa
je
jb
sti
cltd
mov
adc
jae
jle
fsubrp
push
gs
sbb
dec
outsl
outsb
and
jae
cmp
jbe
inc
js
cmpsl
popf
aas
add
out
dec
or
pop
jnp
mov
jae
testl
inc
push
popa
insb
jne
ret
leave
inc
inc
mov
push
pop
or
lcall
daa
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
out
adc
dec
out
push
push
xor
pop
pop
jg
lea
popa
bound
gs
imul
jg
loope
jo
add
jbe
js
jp
jl
jle
popf
int3
ficoms
dec
adc
lcall
loopne
neg
test
pop
add
orb
jg
jge
sar
lret
jno
icebp
pusha
inc
mov
clc
jl
js
ret
movsl
add
xorl
xchg
and
imul
out
pop
push
cmp
dec
add
dec
dec
cli
gs
xor
popa
js
ljmp
addr16
dec
pop
daa
pop
cltd
mov
outsl
ja
ret
ret
cmp
int3
adc
mov
add
push
add
add
add
xor
cmp
push
add
xor
push
sub
pop
hlt
and
add
in
mov
pusha
adc
js
or
cmp
imull
add
add
addb
int
mov
add
xchg
test
add
outsb
shr
push
orb
jle
push
push
and
ficomps
jb
int3
push
cmp
add
nop
push
cmpsb
inc
jo
xchg
call
ja
and
pop
and
test
mov
xchg
cmp
pop
adc
insl
pusha
cmp
or
add
lea
in
dec
dec
mov
mov
xchg
dec
repnz
mov
sahf
or
cmpsb
adc
mov
cmp
out
ljmp
mov
enter
scas
xlat
jmp
add
sbb
cmp
dec
inc
sub
push
inc
jle
fstp
sub
ss
jmp
dec
inc
cmp
aam
adc
notl
fs
inc
sbb
jae
call
bound
je
outsb
data16
add
mov
out
je
xor
mov
test
jo
pop
lea
mov
outsl
js
push
xchg
cs
pop
leave
push
and
insl
jo
jo
and
and
shlb
aaa
insb
les
dec
imul
or
inc
mov
ficomps
cmp
dec
inc
jb
jns
daa
int
rcll
pop
and
pop
in
jns
mov
insb
and
pusha
dec
fucom
arpl
je
and
fs
pusha
fsubrl
push
jbe
clc
insl
outsl
rorl
outsb
pop
jb
and
shr
insl
xor
push
rorb
shrb
fs
insl
adc
lods
jp
pusha
xchg
or
fstps
fadd
pop
rolb
mov
cmp
push
cs
lds
cmp
or
les
fimull
pusha
push
push
fwait
push
lock
push
outsb
mov
fcomps
push
push
jae
or
dec
loopne
mov
pusha
insb
call
mov
clc
addr16
and
out
push
das
outsb
gs
mov
data16
inc
insb
and
dec
testl
cs
xor
dec
push
lods
jno
xchg
fisttps
addl
insl
jle
jb
inc
or
imul
adc
jg
sbb
fs
inc
sub
fs
xchg
das
sub
or
gs
sbb
popa
lds
inc
jg
sub
lds
push
or
pop
jne
pop
das
je
outsl
xchg
ret
daa
xchg
mov
popw
mov
sahf
negb
push
jl
cmp
or
ds
jmp
push
das
push
sub
loope
out
es
addr16
jle
sahf
jbe
xor
sub
add
add
jae
jl
sub
pop
or
sbb
push
sub
das
push
jb
aaa
jbe
mov
cmp
inc
and
xchg
pop
pop
jne
ret
mov
outsb
stos
addr16
push
jbe
xorb
adc
xor
gs
loope
xor
imul
push
add
cltd
hlt
dec
sbb
sahf
inc
out
imul
fs
jo
sub
inc
push
jl
out
sub
pop
cs
add
cmp
and
lahf
out
sbb
or
sub
sti
mov
push
call
sahf
out
push
aam
int3
enter
lret
dec
mov
lods
test
add
xchg
movsb
outsb
mov
mov
cmp
nop
mov
test
cmpsl
cmp
push
js
jo
jns
out
push
out
sahf
pop
push
push
dec
inc
xor
lahf
out
sub
or
sub
repz
repz
dec
out
ds
and
in
les
jo
fs
xor
out
sub
lock
repz
repz
pop
sub
xchg
repz
in
sub
push
pushf
jo
sub
repz
inc
push
and
adc
sub
pop
sub
lahf
add
in
push
and
and
lcall
pop
fmuls
addl
cmpb
mov
nop
add
add
xchg
lods
stos
push
add
andl
add
add
mov
dec
adc
add
sbb
mov
pop
faddl
jle
xchg
sub
inc
add
test
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
jmp
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
jmp
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
or
loope
and
mov
stos
test
and
pop
stos
add
lcall
gs
xchg
jo
je
inc
pop
shl
mov
outsb
push
xor
add
test
sub
icebp
mov
outsl
dec
arpl
ljmp
aas
sbb
jp
int3
popf
mov
or
std
cmp
push
setl
sub
shr
sahf
add
inc
adc
push
or
jg
dec
and
xor
push
dec
inc
dec
cmovns
data16
cmove
push
adc
sub
push
clc
jo
adc
lock
into
mov
mov
jnp
inc
loop
fsubs
in
outsb
mov
ds
pop
adc
clc
lret
mov
and
sbb
jb
jge
arpl
cmp
mov
jno
in
fstl
mov
and
sahf
jg
xchg
cmp
dec
imul
lret
shr
incl
inc
mov
mov
sub
fwait
repz
ds
sbb
pop
jns
ds
xor
incb
jg
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cld
push
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
ljmp
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
push
dec
mov
out
leave
ljmp
orb
popa
push
or
clc
andb
int
mov
leave
hlt
mov
mov
xchg
dec
add
scas
lods
dec
lock
xor
pop
mov
and
in
pop
pop
repnz
ret
aas
and
es
sbb
add
push
sub
fsubrl
ja
movsb
scas
pop
inc
outsb
out
jne
xlat
dec
loopne
jo
out
subl
or
popa
sbb
add
push
into
mov
xor
mov
mov
das
outsl
jns
lock
xchg
pop
and
dec
dec
aaa
jg
imul
mov
pop
shl
es
jae
jmp
sub
test
jae
xlat
scas
mov
dec
mov
cmpps
cmp
adc
jg
push
call
aaa
pcmpeqw
mov
mov
sti
or
jo
pop
daa
sti
lea
pop
and
je
and
jae
insb
lods
pop
call
mov
sti
jmp
xchg
loope
add
lret
xchg
loop
addr16
addb
testb
sbb
lock
mull
or
les
ja
lahf
test
mov
jae
jae
insl
loope
lock
jle
fs
mov
pusha
in
pop
cmpsl
mov
adc
or
movswl
mull
adc
fistpll
pop
out
sar
mov
mov
loope
and
xchg
insb
daa
jnp
cmpsl
lods
mov
mov
cwtl
ret
jecxz
adc
out
jo
loopne
sbb
pop
jns
rorl
jg,pn
mov
fisubs
mov
push
mull
mov
jmp
call
js
sub
popa
mov
aas
cmpsl
out
push
add
jge
ret
cmp
pop
pop
ret
gs
mov
adc
dec
jb
pop
roll
scas
xor
lahf
fiaddl
es
sti
cmp
divl
mov
daa
pop
rorb
mov
mov
outsb
xchg
inc
arpl
and
fisttpl
loope
fidivrs
xchg
gs
test
jmp
dec
dec
jp
xchg
pop
subb
bound
insb
mov
dec
sub
push
cmp
addr16
jle
mov
addr16
je
xchg
cmp
jge
mov
mov
daa
pop
arpl
movsl
sbb
rolb
gs
jne
test
call
push
ljmp
arpl
rol
mov
pop
inc
shll
inc
add
add
pusha
and
fidivrl
push
sub
ja
aad
pop
or
lret
sub
inc
sub
lods
and
inc
jne
or
and
into
or
jo
add
mov
mov
aas
pop
fmull
jb
push
adc
xorw
pop
incl
arpl
orb
mov
popa
sub
jno
jae
pushw
cmp
add
or
je
les
punpckldq
xchg
hlt
sub
out
out
add
jnp
inc
push
adc
aaa
sbb
xchg
pop
jnp
dec
fwait
test
das
push
cmp
jo
push
jecxz
scas
ljmp
sub
shll
push
cmp
dec
aas
loope,pt
push
jae
pop
daa
jne
push
out
cmp
add
dec
ret
outsl
dec
mov
mov
push
adc
hlt
mov
js
adc
push
addr16
mov
xchg
jne
rol
shl
daa
das
outsb
stos
pop
adc
shll
sub
shrb
outsb
sub
rcr
and
into
out
pop
dec
out
rol
push
fiaddl
bound
jae
jp
jnp
push
pop
mov
addr16
sti
and
fwait
push
sub
xor
mull
dec
sub
inc
jmp
lock
out
arpl
pop
adcl
outsl
jmp
bound
pop
test
pusha
inc
outsl
imul
jb
pop
fidivrl
ret
ja
es
imul
rorl
mov
scas
imul
fdiv
jge
mov
insb
xchg
scas
test
dec
add
push
imul
mov
add
ss
mov
shrl
outsb
xchg
inc
mov
lret
pop
je
mov
dec
por
insb
aas
pop
rcrl
mov
jge
inc
bound
outsl
mov
sbb
pop
sti
ja
pop
mov
mov
cmpsl
xchg
inc
arpl
andl
pop
push
aas
jl
or
testl
adc
mov
mov
inc
xchg
jl
pop
inc
les
maxps
push
dec
aas
imul
adc
sbb
mov
bound
aaa
js
push
das
add
out
push
cmp
mov
adc
scas
jbe
mov
jns
jae
pop
lea
push
adc
scas
jl
pop
js
mov
repz
loop
jmp
es
ja
add
sbb
mov
ljmp
cs
push
setg
arpl
pop
js
and
jno
cmpb
out
insb
sub
loopne
dec
outsl
lret
jl
jo
aaa
inc
hlt
loopne
cmp
mov
mov
xor
sarl
shrl
fisubrs
fs
mov
jmp
adc
xor
push
repnz
mov
repnz
icebp
js
ret
adc
xor
aas
addr16
imul
push
pop
and
call
add
push
sahf
cmp
pop
mov
fstpt
fisttps
cmpsl
mov
daa
inc
cmp
jae
in
cmp
dec
jae
arpl
push
jae
inc
inc
clc
mov
fisttps
mov
mov
icebp
push
push
pop
cli
add
jo
icebp
cmc
mov
jle
ret
incl
scas
ljmp
call
insb
inc
sub
dec
inc
or
sbb
xchg
mov
aaa
aaa
es
das
lods
in
jnp
outsl
das
sarl
cmp
js
mov
pop
mov
push
add
add
cmpsl
push
insb
xor
push
sub
push
sbb
gs
lock
pop
hlt
mov
push
xor
inc
add
in
cmp
lret
cmp
pop
cwtl
fsts
inc
dec
sub
or
push
mov
repz
dec
ds
push
jp
out
cmp
cmp
out
add
cwtl
jns
imul
repz
insl
mov
jno
mov
rcrl
push
pop
jbe
xor
out
inc
pop
mov
add
jge
lds
aas
pop
sub
sub
xchg
pop
push
mov
push
ficoms
jns
movsb
push
mov
mov
call
jnp
pop
sub
fcoml
push
sahf
out
sahf
cmp
dec
loope
out
jns
or
dec
push
outsb
loop
and
pop
mov
and
push
or
lods
test
and
inc
fisubrl
data16
xchg
mov
cmpsb
push
push
add
ss
add
cmovge
popa
nopl
push
jae
fs
and
popa
outsb
arpl
push
gs
insl
pusha
mov
popa
jne
or
and
dec
xlat
mov
lahf
or
xchg
sub
push
mov
shrb
cmp
lea
pop
push
js
jl
jl
iret
repz
xlat
pop
jne
pop
jne
iret
jnp
xsha1
cmpsb
push
mov
mov
cmpsl
stc
sbb
push
cmpsl
imul
iret
xor
bound
addr16
xchg
lea
cmp
aaa
outsl
es
bound
cmp
gs
je
cmp
fwait
push
xor
ds
jo
sbb
out
jb
mov
addr16
and
inc
sbb
and
mov
arpl
arpl
xor
cmp
or
cmp
add
dec
add
and
mov
je
ss
cmp
dec
imul
sbb
jae
data16
aam
imul
lds
mov
or
mov
pop
jne
mov
fwait
push
pop
mov
pop
cmpsl
xchg
jno
dec
mov
ja
inc
stos
or
sub
add
xchg
xchg
in
scas
inc
sbbl
push
adc
pop
inc
sbb
adc
push
sbb
and
sub
aaa
cmpsl
mov
mov
pop
int
js
mov
sub
mov
xor
pop
fwait
outsb
push
sub
and
xor
jp
jnp
loopne
into
push
pop
push
xlat
mov
or
or
imul
inc
xor
mov
dec
mov
sbb
and
cmp
sub
scas
pop
aas
and
and
and
cltd
sub
jle
sbb
and
inc
or
mov
mov
mov
aas
add
xor
dec
push
stos
inc
lcall
outsl
or
movsl
push
or
aad
lods
fstps
xchg
and
andb
mov
ret
hlt
push
inc
pop
dec
jg
outsl
adc
dec
stos
sti
lods
pop
or
iret
sub
addr16
faddl
gs
aaa
scas
addb
iret
test
test
dec
les
mov
sub
xchg
pop
inc
lahf
pop
mov
mov
movl
subb
add
ret
imul
adc
out
popa
push
inc
xchg
mov
add
add
dec
orl
shrb
iret
imul
das
pusha
xor
mov
mov
inc
jp
jno
imul
add
dec
filds
xchg
and
inc
lock
jb
fs
out
and
add
sbb
jbe
jae
inc
daa
xor
ret
mov
scas
add
into
into
xchg
dec
jl
mov
imull
fistpl
mov
add
lcall
inc
fwait
mov
mov
test
in
add
jecxz
adc
jg
aam
inc
dec
aas
push
xor
dec
out
pushl
sbb
or
xchg
aas
iret
add
popa
mov
adcb
push
out
add
mov
rolb
or
test
jg
push
lods
lea
xor
sbb
ljmp
inc
pop
and
or
sub
movhps
xor
addr16
mov
js
outsl
jo
fwait
jp
add
lods
dec
dec
int
jnp
jmp
out
xchg
addr16
movsb
dec
lahf
push
push
pop
repz
dec
xchg
insl
xchg
mov
pop
js
pop
mov
xor
or
adc
iret
dec
jne
testl
ja
ljmp
cmpsl
push
cs
inc
jo
lahf
mov
cmpsb
mov
jge
or
inc
jle
icebp
fsubr
out
sub
imul
outsb
jae
sbb
stos
pop
cmpb
sbb
push
repz
xchg
push
aad
xor
fldl
insl
inc
push
imul
sbb
aad
aas
roll
xor
or
mov
aaa
sbb
sbb
pushf
movsb
lds
ret
lcall
pop
add
jo
pop
adc
push
test
pop
mov
mov
loop
cmp
xchg
cmp
push
cmp
jmp
sub
insb
add
rol
dec
repz
addb
popa
xchg
stos
jmp
and
fistpl
fldt
repz
mov
das
lods
xlat
cmpsl
xchg
adc
lods
xlat
mov
mov
pop
pop
sub
outsb
cmp
lds
ret
ficomps
xchg
xchg
out
cmp
and
sub
fwait
jbe
pop
or
xorl
add
lcall
pop
xchg
bound
mov
jbe
pop
dec
mov
push
inc
fstpt
mov
add
adc
dec
out
cmp
jo
sti
xor
je
push
jo
setg
xor
add
pop
cmp
jbe
cmp
ja
outsl
daa
cmp
jl
pop
ja
arpl
loope
repz
push
lods
push
pop
xlat
sbb
fildll
pop
clc
movsb
xor
xor
inc
mov
pop
adc
or
push
push
xor
adc
xor
add
out
xor
fwait
cs
pop
aad
stos
xchg
xor
xchg
fs
out
add
inc
jne
arpl
fs
cmp
imul
ss
push
jmp
add
push
cmp
faddp
cmp
mov
sarb
xor
leave
adc
imul
das
outsl
dec
dec
ret
inc
dec
add
mov
mov
imul
das
add
dec
or
adc
sub
scas
push
cmp
and
push
mov
push
movq
lcall
push
or
xor
andb
inc
and
insl
lret
cmp
jmp
jo
mov
popa
xchg
pop
and
or
adc
sti
xchg
inc
cwtl
xor
or
jecxz
loopne
loope
mov
push
cmp
add
inc
sbb
rolb
or
cmp
cs
ja
and
rorl
pushl
ret
xchg
arpl
out
pop
adc
rolb
add
fwait
je
pop
sub
xor
scas
push
cs
add
fdivs
lret
sub
sub
or
jnp
sub
inc
es
shld
jb
mov
scas
push
push
mov
add
minps
aas
push
subl
lods
pop
lahf
sbb
inc
jle
dec
mov
loopne
pop
repz
mov
pop
test
adc
push
mull
and
sarb
out
adc
dec
pop
pop
outsl
iret
cli
push
mov
pop
nop
fdivs
dec
add
sub
jnp
popa
xor
or
adc
scas
sbb
fists
cmp
out
aaa
push
addl
mov
push
sahf
out
sahf
pop
sbb
jns
out
push
andl
ffreep
mov
cltd
or
sub
fadds
int
cmpsl
push
enter
adc
or
sub
mov
adc
adc
ss
in
mov
sub
xor
inc
mov
fistpll
adc
mov
mov
mov
outsb
push
popa
xchg
add
shrb
ret
sub
fwait
int
add
das
or
adc
repz
mov
pop
sbb
insb
fistl
lret
str
mov
cwtl
or
and
das
dec
push
daa
loopne
lahf
rcrb
sti
lahf
out
insl
inc
add
push
push
jnp
insb
or
mov
or
dec
xchg
int
mov
adc
adc
cli
adc
out
ds
push
push
mov
xor
pop
jb
and
sbb
inc
out
out
mov
and
fwait
and
and
xor
xchg
testl
bound
push
dec
insb
stos
roll
mov
je
add
dec
fldt
cmp
shrl
mov
jnp
push
adc
mov
jmp
adc
or
jo
push
fists
inc
dec
jae
pop
sub
loop
or
jge
sbb
shll
ret
sbb
outsl
add
das
adc
add
imul
les
add
pop
ss
popa
jmp
mov
mov
lea
loope
imul
xchg
incl
sub
mov
lods
add
sub
fwait
dec
loop
mov
adcb
sti
out
sbb
mov
lea
cmp
iret
lahf
and
movl
lods
scas
aas
loopne
orl
or
dec
xchg
iret
mov
shrl
pop
fneni(8087
popa
push
inc
adc
adc
xlat
and
dec
sub
xchg
push
push
pop
xor
stos
or
arpl
jae
mov
push
jg
mov
outsl
aas
imul
pushf
sahf
mov
scas
sub
testl
pand
mov
inc
push
push
add
and
fs
xor
faddl
das
outsb
sbb
arpl
add
pop
dec
xchg
jg
insl
and
mov
adc
pop
cmp
sbb
jmp
mul
cmpsl
push
push
insl
arpl
shl
mov
ja
repz
roll
pop
mov
in
test
inc
mov
mov
sti
lcall
push
loope
in
int3
jecxz
and
sub
cltd
dec
pop
fsub
mov
stos
in
in
loope
jns
pop
and
stos
sub
add
pop
or
fisubs
push
repnz
fnsave
pop
and
stos
in
cltd
js
pop
and
test
sub
loopne
mov
in
push
jb
dec
xchg
inc
scas
xchg
test
inc
xor
mov
push
add
cltd
dec
pop
mov
pusha
push
leave
stos
in
mov
pop
and
stos
sub
xchg
dec
and
test
enter
scas
xchg
js
fcom
leave
push
xor
xchg
push
call
inc
sbb
je
and
pop
and
stos
add
push
popl
mov
lahf
xor
pop
xchg
adc
inc
pop
rorl
jnp
mov
insl
and
mov
sub
add
adc
inc
sbb
xor
dec
fadds
mov
das
inc
adc
xlat
inc
xor
sbb
adc
push
jmp
push
aas
pop
push
push
sub
or
dec
add
or
popa
aam
aas
dec
movsl
xchg
ss
repz
dec
inc
data16
add
or
mov
inc
aaa
mov
aas
mov
push
xchg
push
adc
xchg
mov
and
shlb
push
pop
inc
jmp
mov
push
xor
nop
push
or
ss
push
cltd
leave
in
push
scas
sbb
aas
xchg
rcrl
neg
scas
add
scas
jg
fimuls
mov
pop
inc
and
add
movsb
daa
cmp
sub
loopne
adc
jp
les
jmp
fldt
or
sbb
pop
or
les
bound
filds
xlat
pop
xor
aaa
outsl
and
mov
addl
xor
adc
add
arpl
lahf
or
add
push
aas
lahf
mov
jmp
das
mov
sarb
pop
addr16
mov
add
and
scas
call
iret
inc
xchg
fwait
lret
daa
push
sbb
inc
inc
jl
or
out
push
pop
lahf
ret
outsl
outsl
push
push
mov
inc
hlt
add
loopne
popa
xor
and
rorb
xlat
pop
add
mov
pop
and
pop
ds
pop
sbb
add
pop
mov
push
out
or
xor
sub
sbb
mov
push
xchg
bound
jge
dec
inc
es
mov
xor
sub
sbb
inc
es
addr16
mov
adc
je
or
je
shrb
les
mov
sbb
mov
mov
add
pop
sbb
mov
es
jae
and
mov
cmpsl
pop
add
add
mov
loope
ja
imul
jnp
add
push
jbe
out
mov
xor
daa
xorl
xchg
ds
xor
cmpb
ja
rcrl
jnp
ss
mov
aaa
int3
fidivs
imul
dec
js
jae
imulb
pop
pop
daa
sbb
xchg
clc
xchg
push
adc
pop
fisttpl
roll
and
sbbb
jne
or
pop
dec
or
mov
jnp
sub
in
inc
pop
inc
push
movsl
push
cltd
push
scas
mov
push
push
pusha
ss
mov
push
call
in
outsb
xor
jnp
loope
repnz
push
ds
push
jl
aas
dec
sti
sbb
fcoml
pushf
push
add
mov
inc
inc
sub
xchg
lds
loopne
mov
jb
push
or
adcl
in
xor
imul
push
push
inc
mov
scas
xchg
insl
das
sti
scas
test
xchg
mov
pusha
loope
pop
xchg
pop
mov
and
push
iret
pop
mov
fistps
pop
mov
sub
pop
inc
mov
or
push
cmp
xor
mov
cs
pop
ljmp
xchg
mov
dec
mov
das
or
fwait
adc
movl
js
dec
and
arpl
mov
arpl
add
stos
outsl
jns
cs
pop
sub
out
fiadds
aaa
pop
movsb
adc
or
or
jo
ret
push
mov
mov
xchg
add
dec
aam
ja
xor
test
dec
sbbl
mov
lret
mov
mov
xchg
jge
mov
sbb
pop
jecxz
mov
mov
outsb
outsb
sub
shr
jmp
push
sahf
push
cs
cmp
cs
xor
insl
repnz
out
es
add
push
push
add
inc
insl
sbb
xlat
rclb
xlat
out
mov
jns
xor
jae
js
inc
mov
sub
into
xor
sbb
pop
pop
dec
pop
fidivrs
shlb
or
inc
or
add
mov
or
xor
fimuls
inc
cmp
xchg
out
mov
dec
or
inc
push
pop
mov
cmpsb
ss
push
dec
mov
loopne
push
bound
xor
xor
fisubrs
repz
cs
cmp
outsb
jb
loop
xorl
push
cmpsb
xchg
ja
retw
rolb
inc
data16
xchg
sarb
lcall
sbb
cs
fs
xor
inc
mov
cmp
xchg
dec
dec
daa
fst
out
cmp
mov
jge,pn
dec
push
out
mov
pop
pop
mov
push
es
ss
pandn
ja
pop
push
push
xor
dec
jb
xchg
jl,pt
inc
pop
dec
es
das
add
loopne
mov
fbld
data16
inc
pop
lock
xor
dec
cs
lock
inc
lock
push
outsl
push
push
cli
push
push
insl
sub
push
neg
jnp
insl
mov
inc
ja,pn
xor
lods
js
mov
push
jp
ds
fstpt
scas
jg
dec
das
ret
jnp
loopne
fisttps
jp
pop
pop
xorl
pop
outsl
dec
xor
js
push
into
xor
pop
adc
imul
test
sub
bound
ret
insl
cmp
shl
inc
stos
xor
jcxz
xor
xor
pusha
lods
movsb
mov
iret
lret
jae
jnp
ret
jnp
add
mov
xor
add
nop
das
add
push
arpl
adc
or
mov
xchg
mov
daa
adc
js
xchg
xor
cmpsb
lods
dec
les
popa
xchg
mov
mov
les
sbb
jae
arpl
nop
es
mov
mov
mov
dec
pop
lcall
pop
addl
test
fwait
das
arpl
mov
mov
pusha
aaa
stos
scas
repz
mov
inc
xchg
add
ljmp
lods
push
add
sub
sbb
mov
inc
mov
lret
and
lret
sub
xor
sbb
sbb
lahf
sbb
mov
sti
shll
mov
and
sbb
rorb
and
daa
sbb
mov
jmp
push
dec
inc
adc
mov
pop
insb
outsl
popa
fs
outsl
lods
shll
lea
sub
jbe
pop
inc
fs
sub
or
pop
sub
pop
imul
notl
js
sub
loope
jle
push
mov
pop
jmp
dec
sub
bound
sbb
gs
sbb
clc
cmc
arpl
add
pop
dec
inc
jb
data16
jmp
repz
pop
pop
aam
xchg
push
pop
outsb
jno
xor
pop
mov
cwtl
xchg
inc
cmpsl
adc
add
push
outsb
jl,pn
movsb
stc
cmp
push
jo
mov
imul
pop
pop
dec
ja
in
ja
ja
cmp
jne
jo
arpl
xor
shlb
xor
jae
pop
xor
movaps
mov
or
xchg
inc
push
sub
pop
mov
mov
cmpsb
or
cs
xor
mov
jbe
lods
or
lahf
mov
and
popf
inc
or
add
fwait
and
das
push
sub
or
rcrl
stos
lock
xlat
jmp
js
pop
fildll
mov
sub
scas
addl
add
jecxz
pop
addl
addr16
cwtl
push
dec
movsl
pop
sti
lods
ljmp
push
insl
push
mov
and
push
inc
fwait
iret
dec
cmp
adc
jo
loope
lahf
popa
fldt
and
xor
mov
repz
xchg
test
inc
pop
mov
mov
aam
xor
call
jnp
dec
aas
jl
stos
inc
scas
addl
sbb
mov
das
mov
daa
iret
fistps
bound
or
outsb
dec
arpl
jae
faddl
int3
daa
jbe
fwait
pop
mov
testb
lcall
jmp
fisubrl
psraw
in
add
aaa
sub
push
fs
xor
movsl
mov
fnsave
sub
pusha
aad
push
pop
adc
ja
outsl
mov
push
paddusw
movsl
sbbb
shr
inc
mov
xlat
push
dec
insl
inc
aas
xchg
addr16
imul
add
imul
loop
or
inc
mov
and
pop
test
cmpsb
push
jmp
and
xchg
fsubrs
xchg
push
lds
inc
pop
les
add
add
pop
shlb
mov
mov
sbb
ljmp
mov
mov
mov
lods
push
lcall
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
jmp
mov
jle
sub
mov
sti
pop
repnz
adc
pop
sbb
xor
fadd
addr16
dec
fsubs
sbb
insb
std
mov
dec
xchg
jecxz
in
bound
rorl
adc
adc
pop
push
and
daa
mov
xchg
push
in
or
test
pop
mov
insl
fs
push
xchg
mov
mov
inc
daa
test
push
push
and
sub
mov
xchg
movsb
loopne
xchg
mov
push
dec
repnz
mov
and
jnp
leave
jae
sub
hlt
fwait
das
mov
in
pop
aam
xchg
out
xor
cmp
movsb
dec
xchg
test
je
outsl
xorb
mov
or
fistps
push
pop
inc
mov
inc
mov
imul
dec
xchg
fmuls
cmp
scas
pop
jnp
pop
daa
je
pop
add
aam
je
jnp
cmp
ss
jge
mov
sub
adc
xchg
ljmp
adc
loopne
inc
addl
loop
cmp
jge
aad
cwtl
adc
jae
dec
add
lock
daa
dec
inc
jmp
xchg
imul
cmp
popa
outsb
imul
add
sbb
das
xchg
pop
mov
movl
pusha
daa
daa
xor
pop
push
push
mov
fdivrs
jae
shrb
test
xlat
pusha
test
mov
pop
mov
pusha
xchg
xlat
push
jo
dec
and
rcr
push
push
scas
mov
mov
cmp
or
jo
pop
bswap
or
mov
inc
xor
jne
addr16
nop
cmpsb
lea
comiss
mov
mov
jne
mov
call
dec
or
mov
xor
out
fistl
push
dec
jae
xlat
mov
outsl
push
jl
arpl
mov
sbb
inc
fisttps
scas
dec
repz
dec
scas
pop
cmpsl
push
sbb
aaa
push
roll
je
add
sbb
mov
sbb
xchg
cli
aas
push
xchg
cwtl
ss
sbb
imul
fs
fldt
imul
xchg
jle
in
repz
es
mov
into
out
xchg
js
push
imulb
push
cmp
mov
pop
dec
pop
xchg
cltd
sbb
adc
std
cltd
xorb
or
push
mov
mov
add
pop
in
xor
sub
mov
loop
imul
cmc
repz
stos
xchg
adc
data16
cs
push
test
ja
xor
sysret
inc
movd
mov
xorb
pop
cmp
fbld
sub
xor
nop
clc
aam
dec
hlt
mov
insl
repz
xchg
xchg
cmpsb
call
jo
mov
call
sahf
mov
cs
repz
cmpsl
int3
lock
inc
sahf
out
inc
inc
dec
pop
setbe
mov
mov
clc
push
inc
addb
xor
sahf
out
daa
xor
aaa
icebp
addl
push
aaa
iret
jnp
ret
mov
push
outsb
push
jle
mov
jns
xlat
clc
or
mov
or
sub
aas
push
push
push
test
mov
ds
push
xor
jns
ret
pop
push
push
and
pop
sub
clc
mov
pop
push
fistps
int
or
dec
out
jns,pn
jnp
ret
push
imul
lods
jnp
and
jbe
adcl
in
stos
dec
cmp
sti
xchg
jns
aas
pop
es
xchg
and
mov
mov
inc
sbb
leave
inc
outsl
lcall
xchg
ficoml
dec
das
jns
out
dec
imul
push
and
in
dec
repz
sahf
inc
sti
lea
jno
repz
dec
jmp
dec
iret
repz
sub
jmp
or
pop
mov
in
push
arpl
repz
xor
jns
out
ja
mov
roll
das
jmp
and
jg
dec
sbb
scas
jg
ja
sub
adc
stc
add
clc
push
iret
adc
adc
push
mov
xor
adc
mov
add
mov
pop
jb
mov
loopne
mov
dec
or
adc
mov
int3
push
and
pop
sbb
enter
adc
stc
repz
or
adc
daa
enter
or
add
push
test
insb
adc
cmp
test
jl
mov
cmp
rcll
std
xlat
add
mov
std
iret
or
dec
push
add
ja
outsb
outsb
inc
mov
xor
push
js
cmpsb
mov
imul
cmp
xor
dec
push
adc
inc
ja
pop
xchg
mov
and
lods
xchg
pop
mov
fisubrl
add
dec
jo
js
rcrb
push
push
dec
pop
inc
outsl
xor
test
je
add
adc
fadds
popl
xchg
cmp
shrb
mov
out
pop
mov
fidivrs
pop
call
jb
pusha
xor
sbb
dec
cmpsl
addb
or
jno
inc
lahf
mov
pop
sub
lods
cltd
out
movsl
adc
cmp
addr16
loop
mov
pop
sbb
cmp
syscall
mov
xchg
jo
fwait
push
jo
inc
mov
mov
xchg
xchg
bound
inc
adc
mov
mov
jecxz
xor
in
mov
fisttps
fiaddl
dec
loope
or
cmpsl
fs
js
pop
dec
pop
jb
add
rcr
pop
xor
testb
ljmp
data16
sahf
add
dec
inc
xchg
test
mov
repz
add
and
mov
push
cmp
and
outsl
dec
icebp
movsb
jae
xor
daa
add
and
fcompl
xor
and
mov
pop
cmpsl
aaa
outsl
dec
addr16
sub
dec
popl
jbe
jo
xor
pop
fucomip
or
dec
bound
outsb
push
jnp
pusha
dec
pop
dec
repz
inc
pusha
gs
sbb
insl
add
jg
adc
cmp
rol
dec
push
jb
addr16
add
scas
push
inc
sub
mov
jmp
imull
push
shlb
push
shll
add
sbb
rol
inc
pop
test
add
testl
push
add
daa
loopne
aam
mov
das
sub
sahf
adc
sub
inc
sti
push
adc
push
push
pop
mov
loopne
cmpb
addr16
arpl
mov
mov
iret
fs
or
das
push
mov
cmp
inc
cmp
sti
push
cmpb
ja
jo
pop
push
xchg
xor
pop
out
add
lret
dec
mov
mov
or
push
sub
pop
pop
dec
mov
mov
mov
out
test
daa
popw
outsl
imul
jne
aaa
xchg
add
xchg
mov
mov
das
testl
outsl
mull
insb
adc
imul
popl
add
pop
dec
add
push
fisttpl
cmp
push
loopne
inc
addl
bound
ret
fidivrs
push
jecxz
out
inc
into
inc
add
adc
push
bound
cs
lahf
imul
add
cmp
out
add
shl
sbb
push
repz
mov
roll
aad
push
dec
loopne
sahf
adc
pop
inc
add
fcmovbe
dec
mov
popa
cmpl
adcl
addl
pop
or
pop
pushf
add
push
pop
outsl
fwait
or
mov
sub
mulb
pop
addr16
mov
inc
inc
push
inc
daa
cs
sub
cmp
dec
push
pop
pop
out
or
adc
push
pop
pop
jno
add
inc
jbe
mov
inc
aaa
push
mov
pop
bound
inc
push
pop
sub
and
lret
mov
dec
lock
fbstp
add
arpl
mov
cmpsl
push
decl
jg
push
ret
and
testl
pop
pop
inc
cmp
es
inc
jns
je
pop
and
outsb
out
mov
or
xchg
lret
outsl
das
adc
and
scas
or
jbe
dec
ja
popa
insl
jo
je
out
outsl
movsb
adc
addr16
jo
jae
daa
pop
ret
pop
jno
outsl
xor
push
out
push
bound
cmp
cwtl
pusha
or
pop
pop
mov
mov
jns
je
jne
or
or
cmp
test
scas
ja
pop
insb
and
dec
jae
inc
adc
or
dec
ss
bound
mov
je
inc
dec
mov
push
inc
add
imul
arpl
sub
mov
iret
jbe
popa
sbb
retw
or
push
push
mov
testl
out
pop
stos
pusha
and
push
loop
sbb
bound
cmp
sti
movsb
push
dec
ret
jae
sub
pop
adc
test
dec
les
mov
push
jmp
jo
push
pop
xchg
push
mov
cmpsl
pop
stos
add
xor
push
xchg
push
push
add
adc
emms
or
sub
jns
jb
sbb
adc
mov
movsl
ret
mov
xlat
mov
out
or
fstpt
js
aaa
inc
insb
ret
xchg
pusha
sysret
daa
les
add
arpl
jnp
adc
push
mov
add
push
pop
decl
xchg
incl
dec
inc
dec
push
xchg
add
add
clc
and
sub
idivl
ret
jbe
add
add
pop
add
or
jb
push
addr16
add
das
decl
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
incl
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
lcall
out
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
pushl
cs
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
mov
test
mov
mov
call
cltd
test
push
push
sar
jmp
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
decl
js
js
test
add
mov
mov
movsb
mull
jno
addr16
decl
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
jno
loop
cmpsl
and
dec
adc
sbb
daa
lods
fisttpll
ds
das
sbb
or
imulb
daa
daa
daa
push
and
out
in
jg
pop
inc
inc
inc
push
inc
pop
and
or
aas
js
insb
in
imul
or
outsb
push
add
inc
pop
imul
pop
gs
in
push
sbb
pop
aas
ds
push
sbbl
popw
push
sbb
aaa
push
cld
shrb
sbb
test
inc
mov
outsl
fisubl
or
cmp
fwait
int
push
lods
mov
inc
cmp
std
outsb
pusha
mov
fsubrp
push
pop
mov
cli
das
aas
inc
inc
xor
fistps
mov
data16
push
adc
call
sbb
std
sub
push
mov
or
cmpsl
jge
mov
push
mov
movsl
and
cmp
es
cmp
add
jecxz
or
icebp
mov
lahf
dec
pop
insb
push
adc
testl
scas
nop
xlat
mov
mov
cmp
xor
paddusw
push
xchg
jne
mov
out
push
pusha
push
dec
jb
xor
mov
out
push
imul
add
inc
clc
out
and
bound
or
push
jnp
push
es
insb
jns
mov
je
and
mov
mov
popa
stos
and
in
xchg
rolb
out
adc
lcall
and
xor
and
lock
int3
and
ret
dec
inc
mov
iret
int3
and
push
push
jle
insl
adc
insl
outsl
fs
gs
jo
jns
lods
pop
in
mov
adc
dec
add
insl
jne
rorb
push
or
loop
add
or
addr16
insb
lret
xchg
cmp
and
insl
inc
xor
jae
inc
insb
mov
jbe
fdivrs
xchg
inc
popa
imul
jle
xor
outsl
jo
test
sahf
dec
sub
sbb
xor
mov
xchg
inc
or
inc
xadd
dec
and
sti
sbb
inc
cmovo
outsb
movswl
cmpb
aas
adc
in
nop
jo
maxps
loopne
ljmp
and
xor
mov
dec
and
mov
imul
add
mov
sbb
outsb
jnp
cwtl
pop
cmp
fsubs
aaa
iret
shlb
mov
enter
fidivs
inc
push
pop
das
inc
add
outsl
pop
iret
js
ja
outsl
insl
lods
mov
and
pop
daa
les
leave
aam
daa
outsl
fnstcw
sbb
daa
mov
inc
sub
fs
mov
mov
inc
dec
fcompl
scas
fisttps
inc
test
ficoml
add
jl
sbb
test
mov
in
add
stos
ja
add
sub
mov
or
outsl
adc
outsl
fiadds
inc
push
dec
in
leave
lds
mov
xor
cwtl
mov
add
fsubl
mov
enter
pop
in
fsubr
in
adc
inc
inc
add
test
and
mov
xor
xor
xchg
dec
outsl
sahf
or
xchg
js
jo
inc
cs
dec
js
in
nop
out
lods
mov
mov
fldt
int3
aas
jns
push
roll
clc
add
fstpt
mov
int3
push
push
pop
push
movsb
das
mov
sub
daa
outsb
xchg
lods
jne
sahf
xor
stos
sarb
addr16
leave
jae
iret
push
aam
lock
aam
mov
faddp
hlt
and
xor
inc
push
nop
fisubrl
dec
aas
ja
inc
sahf
fstps
and
ret
lds
push
dec
outsl
movsb
inc
pop
fiaddl
add
jo
adc
pop
lock
cmp
inc
daa
jle
or
mull
inc
enter
imul
push
loopne
nop
das
pop
fwait
loopne
sbb
imull
jns
les
out
and
add
je
fsubr
dec
in
adc
and
sub
push
sub
add
jo
mov
mov
daa
add
subb
mov
jns
andb
and
in
dec
enter
leave
xor
inc
mov
test
push
xchg
cld
insb
rclb
jl
scas
iret
les
pushl
popl
jbe
out
int3
testl
pop
mov
jl
or
sbb
dec
in
dec
lahf
or
rorb
enter
insb
ror
outsl
insl
xorl
enter
mov
mov
pushf
xor
es
and
or
xor
or
shlb
aaa
and
lahf
pusha
jns
mov
ja
mov
lods
mov
mov
fcoml
cld
mov
fsub
sub
xchg
sub
pop
cmp
push
shl
fsubrl
adc
push
fistpll
or
cmpsl
or
adcb
daa
frstor
nop
out
cmp
in
in
out
clc
scas
cmpsl
cmp
repnz
aam
orl
fisubs
insl
jg
mov
sahf
out
mov
nop
or
adc
jns
loopne
nop
fbstp
in
and
fistps
dec
push
xor
cmpsl
jle
or
cmpsl
and
jns
or
mov
push
cmpsl
js
cs
dec
int3
fdiv
pop
and
bnd
dec
int3
fwait
nop
iret
test
xor
or
inc
push
and
cmpsl
js
idivb
dec
mov
mov
pop
test
lahf
or
in
enter
inc
sahf
aam
enter
nop
clc
adc
and
nop
mov
xor
lahf
clc
movsb
stc
lods
ja
and
fs
jbe
jns
dec
lahf
cs
nop
fs
mov
cs
or
push
mov
js
fadd
adc
cs
jge
sub
xorps
enter
jg
test
insb
push
pop
push
cmpsl
enter
pop
loopne
pop
enter
rcr
loopne
pop
jb
lods
adc
add
push
shll
and
push
and
addr16
lods
out
cmpsl
jg
cmpsb
push
pop
enter
fldenv
and
insb
inc
cmpsl
push
insb
dec
mov
mov
enter
add
mov
or
sbb
lds
or
icebp
cltd
nop
iret
loopne
ficompl
pop
pop
mov
aas
cmpsl
jg
clc
pop
dec
repz
mov
sbbb
push
cmpsl
mov
pop
hlt
add
jb,pt
cmpsb
fs
pop
cmpsl
hlt
fwait
sub
pop
nop
dec
fstpt
pop
sahf
push
lds
aas
pop
repnz
ja
rcrb
mov
ja
lock
addr16
or
ja
mov
fiaddl
rcr
push
imul
mov
inc
jbe
dec
inc
jl
rorl
pop
imul
jbe
iret
add
js
lock
inc
or
dec
enter
fldl
push
push
movsb
insl
sbbl
sahf
outsl
dec
int3
test
addr16
lahf
push
add
int3
inc
ja
test
inc
lock
clc
add
push
lock
test
aam
shrl
ficoms
dec
in
cmp
lahf
dec
inc
dec
and
fidivs
jmp
push
pushf
fdivrp
push
orl
inc
add
mov
jo
in
and
int3
cwtl
sbb
sbb
clc
es
inc
fists
adc
lcall
int
rcr
lahf
int3
xor
adc
add
adc
pop
push
inc
rcl
mov
loopne
push
inc
jg
sarb
xor
loopne
mov
pop
push
dec
inc
ja
stc
dec
mov
pusha
fs
mov
mov
fadds
jns
lods
sub
inc
jo
or
lahf
nop
inc
inc
ds
jb
mov
subl
mov
add
daa
adc
insb
lahf
in
inc
imul
adc
lods
mov
shl
outsl
mov
cmpsl
aam
add
inc
add
inc
adc
lahf
insb
insl
adc
lahf
enter
fs
pusha
jo
jb
pop
fs
mov
iret
test
mov
pop
enter
mov
repnz
adc
pop
enter
lock
sahf
or
inc
jecxz
pusha
jle
or
in
lahf
adc
inc
sahf
or
mov
fisttpll
nop
inc
les
pop
in
jae
pop
enter
sub
in
inc
xchg
outsl
insl
push
lret
inc
outsl
aas
jns
iret
mov
lcall
lds
ror
pop
and
mov
cmp
fdivr
or
or
out
testb
inc
stc
pop
insb
shrb
inc
in
jns
or
clc
imul
add
mov
mov
aad
jl
ror
or
jmp
lock
enter
in
out
add
add
lock
out
pop
add
daa
aas
daa
mov
xor
daa
add
fcoml
mov
scas
mov
push
xlat
mov
dec
dec
repz
push
xor
or
push
push
addb
aas
call
cwtl
xchg
pushl
fiaddl
inc
pushf
ja
loope
fnsave
add
xchg
pop
repnz
dec
aam
insl
and
jg
in
xlat
popaw
adcb
xchg
mov
dec
cmp
dec
push
push
sbb
daa
aas
addr16
xor
pop
add
inc
outsl
ja
dec
daa
sbb
test
dec
dec
scas
in
inc
inc
in
scas
in
xor
scas
in
scas
sub
and
lods
in
add
add
pop
mov
out
xchg
in
icebp
mov
sarl
enter
pop
es
xor
out
push
and
lock
out
mov
mov
clc
out
repz
sti
mov
ds
push
push
adc
in
movsb
mov
xor
push
je
pop
cmp
add
aad
sub
fisubs
mov
push
xchg
pushf
in
dec
aad
orl
int
sub
dec
inc
ss
fildl
xchg
cmpsl
jns
adc
nop
add
mov
nop
jnp
sbb
mov
mov
push
in
sti
fdivrp
push
inc
out
cld
inc
mov
lods
jmp
dec
xchg
ja
and
mov
and
xchg
dec
and
jbe
inc
dec
outsl
xchg
sti
or
leave
inc
sbb
push
loopne
cs
fsubr
fmuls
movsl
dec
outsl
add
and
fs
pushf
inc
jge
adc
in
lcall
dec
in
mov
inc
cmpsb
fistps
leave
cmp
lahf
clc
cmp
pop
and
pop
ret
lods
pop
scas
add
outsl
out
mov
xor
fnstsw
and
fbstp
cmp
add
aam
test
call
sbb
out
scas
add
sbb
ljmp
pusha
and
xor
xor
xchg
in
nop
out
out
out
outsl
xchg
popa
sub
add
sub
or
sub
xor
jbe
into
js
aaa
js
cwtl
repnz
repnz
mov
push
hlt
out
movl
sahf
sbb
lock
leave
add
dec
jg
or
ja
adc
jg
mov
sub
or
mov
or
repnz
cld
fimuls
icebp
outsl
add
mov
fbld
bound
and
mov
fiadds
and
insb
add
cwtl
pop
scas
sbb
push
xor
pop
outsl
js
ret
push
out
dec
fisubs
jae
pusha
cmpsl
or
daa
add
je
orb
cmpsl
in
or
xor
push
aaa
stc
out
pusha
xchg
sub
add
fwait
test
call
and
es
xorb
call
loopne
subb
mov
loope
fimuls
xchg
push
cwtl
aam
jg
push
adc
push
call
addr16
and
xor
aaa
inc
repz
push
xor
pop
sbb
loopne
xchg
mov
ss
js
test
or
repz
mov
pcmpeqd
mov
leave
xchg
lock
outsl
js
in
xchg
outsl
jg
sub
xchg
loop
hlt
jge
jne
daa
testl
cmpsl
jge
scas
push
movsb
clc
push
mov
hlt
scas
mov
testb
and
and
dec
cmpsl
bound
loope
adc
cmc
push
pusha
mov
dec
xlat
or
decl
idivb
add
pop
jne
daa
xlat
or
shl
pushf
xchg
dec
inc
divl
add
test
fdiv
add
fimull
xor
popa
xor
outsl
and
sub
push
mov
xchg
cmp
nop
imulb
mov
divb
subl
stos
pop
nop
divb
call
aaa
sbb
outsl
loopne
and
jecxz
and
pushf
pusha
divl
scas
es
pop
mov
add
mov
call
jg
hlt
ja
loop
fisttpl
sbb
and
jg
in
dec
scas
addr16
add
xchg
or
fs
add
sub
das
and
and
push
jb
jge
mov
inc
aad
lods
aaa
pop
in
jl
sub
sub
pop
cmp
ss
cmp
dec
stc
aaa
add
movsb
or
leave
test
mov
pop
iret
int3
xlat
jo
push
xor
sahf
iret
aad
sub
daa
loopne
xchg
pop
leave
in
pop
cli
daa
or
add
insb
repz
pop
cwtl
push
xchg
add
call
dec
int3
js
or
outsl
mov
xchg
aas
add
decb
cli
cmpsl
sbb
and
mov
decl
xlat
xchg
push
inc
sti
das
outsl
add
or
inc
cs
xchg
movsb
inc
outsb
rclb
push
test
mov
add
cld
push
xchg
mov
pop
andl
push
xor
outsl
out
add
or
inc
lcall
inc
dec
loopne
or
jb
arpl
out
daa
or
add
addb
cmp
std
addr16
or
negb
jl
aas
addr16
fisubs
daa
lods
int
lds
iret
movsb
in
sahf
aam
addr16
gs
in
hlt
std
push
mov
push
dec
divl
mov
push
inc
inc
add
decb
imul
incb
nop
decb
or
rol
pop
repnz
shl
rclb
adc
orl
lahf
fsubl
arpl
clc
out
mov
jl
les
clc
sub
xchg
or
clc
lods
push
mov
addr16
stos
int
shrl
xchg
rolb
push
dec
and
jae
dec
repz
xchg
jbe
iret
repz
in
sub
jns
xchg
mov
cmp
shrl
pop
je
out
jns
out
mov
repz
mulb
mov
stos
rcrl
pop
mov
shl
out
sarl
outsl
daa
mov
push
fsub
jns
out
xor
sti
cmpsl
stc
cmp
push
nop
insb
or
jns
pop
mov
cmp
fs
mov
iret
repz
push
jg
shl
sahf
out
ds
xchg
sub
ret
cmp
repz
es
inc
lea
cmpsl
stc
and
stc
cmp
repz
xchg
mov
sti
push
cwtl
out
sahf
cmpsl
inc
xchg
mov
jl
out
add
xchg
push
andb
iret
shll
cmc
and
lahf
out
testb
push
jge
lcall
ljmp
jns
cli
pusha
lahf
sahf
sarl
cmpsl
stc
pop
mov
repz
out
sbb
jl
out
mov
cld
sarl
movsb
imul
lret
inc
jns
jns
imul
out
push
dec
outsb
call
and
stos
cmpsl
stc
cmp
pop
cltd
aam
stos
inc
out
jl
arpl
lods
iret
sarl
fcomps
scas
push
fdiv
int
imul
lds
lcall
call
sub
ds
sarl
xchg
mov
sbb
andl
lcall
dec
in
out
testl
shlb
mov
cmp
push
mov
lahf
out
xor
sahf
cmpsl
stc
xor
and
dec
xchg
fnstsw
iret
sarl
cmp
lahf
out
inc
mov
sub
push
imul
cld
das
ret
out
out
or
pop
push
xchg
decb
lock
popf
push
out
ds
push
mov
enter
lahf
out
ds
je
repnz
repz
lret
inc
push
mov
out
int3
jle
sbb
popa
sarl
xchg
shr
iret
xchg
out
lcall
mov
repz
mov
sahf
popf
cli
jb
mov
lock
out
ds
sarl
inc
aad
push
mov
cld
aaa
lea
xlat
dec
sahf
out
cmp
mov
lcall
loop
fisubl
int
jns
fisubrl
jl
out
jmp
fsubrl
int
fdivp
sub
jne
lahf
data16
push
in
out
out
inc
jmp
fsubrp
push
in
in
push
or
xor
int
fstps
movsb
movsl
cmc
inc
testb
insb
ss
stc
pop
sti
jecxz
or
int
sbb
xchg
add
add
in
cmp
add
popf
loope
fwait
lahf
int3
nop
push
inc
cs
mov
xchg
cmpl
aas
or
dec
sub
or
mov
mov
xor
mov
daa
out
cmp
aaa
repz
and
int
inc
pop
mov
insl
repnz
es
insl
rcl
jg
adc
inc
leave
xchg
aas
test
cltd
sarb
cmp
test
xor
mov
dec
jecxz
jg
mov
dec
cmp
aas
cmovae
sbb
lds
jbe
sub
jbe
xchg
xor
ljmp
adc
aas
mov
cmp
lahf
out
cmp
mov
orl
lcall
cltd
push
inc
or
ss
and
fcomps
xor
inc
cmp
dec
jg
leave
leave
in
pop
dec
aas
in
out
mov
push
inc
pop
pop
jo
daa
and
sbb
jbe
add
in
je
push
aam
in
add
into
sub
or
movsl
mov
ffreep
jb
jns
adc
and
jbe
pusha
mov
push
lahf
mov
jb
push
sahf
xchg
ja
js
mov
mov
cmp
mov
add
push
sbb
pop
mov
inc
mov
enter
jl
es
jne
stc
add
or
cs
sbb
mov
jmp
inc
xchg
iret
fiadds
pop
inc
leave
addr16
push
mov
shlb
jno
aas
shll
leave
mov
add
hlt
jle
or
je
adc
lahf
icebp
xchg
fisttps
stc
push
ja
inc
repnz
pop
addr16
ja
xchg
fisttps
dec
cs
cmp
mov
xchg
cltd
clc
pop
or
mov
das
xchg
dec
es
or
pop
adc
daa
push
dec
sahf
flds
pop
and
push
enter
mov
and
and
in
mov
divb
push
xchg
mov
fildll
fxch
and
shll
pop
and
xchg
sbb
inc
mov
maxps
or
inc
popf
popa
ja
pusha
xchg
scas
push
dec
cmpsb
adc
jo
pop
xchg
pop
rcrb
daa
mov
add
stos
add
and
fistps
push
fimuls
sbb
sub
inc
testl
fadds
sbb
pop
xchg
mov
mov
pop
sbb
fsubl
adc
fsubrs
scas
insb
add
add
add
sbb
mov
sub
pop
insl
xchg
add
fs
push
pop
leave
and
repz
scas
cmp
mov
mov
into
aad
push
pop
mov
cmpsl
push
mov
xchg
adc
sbb
adc
addr16
mov
mov
push
dec
push
pop
in
xchg
fldt
jo
addr16
and
movsb
stos
jp
pop
daa
fcoms
addr16
popf
and
adc
lcall
pop
add
loop
adc
push
out
movsb
xor
xchg
mov
mov
add
add
mov
cmp
outsb
stos
add
out
pop
jbe
jle
add
dec
dec
dec
mov
dec
jb
sbb
rorl
fwait
dec
in
cmpsl
hlt
cld
dec
mov
add
or
adc
fldz
cs
pop
aaa
push
lea
inc
pop
dec
xorps
imul
jae
mov
mov
mov
xchg
mov
sahf
out
pushf
mov
push
add
fnstsw
fisttps
or
imul
or
or
enter
or
sbb
es
adc
fldt
pop
pusha
punpckhbw
jnp
pop
sahf
movsb
adc
mov
xchg
int
cmp
mov
dec
push
in
dec
dec
sub
mov
in
repz
add
cwtl
push
push
jb
mov
inc
enter
lock
test
cmp
sub
out
sbbl
in
xchg
and
mov
jb
loop
test
orb
nop
push
nop
sub
jo
fiadds
pop
dec
nop
out
pop
scas
mov
out
push
jns
push
sbb
daa
leave
add
pushf
pusha
incl
jne
outsl
stos
cmpsl
mov
out
pushf
ret
add
add
insb
jns
fistl
notl
jnp
pusha
pop
mov
inc
filds
pop
jns
mov
sub
stos
dec
jb
sub
addr16
push
dec
addr16
add
leave
inc
repnz
pop
roll
mov
in
mov
add
add
lahf
cmc
xchg
xchg
dec
sub
xchg
fdivr
sbb
mov
fs
decl
scas
add
js
mov
xor
rorl
pop
push
cmp
ret
xchg
incl
lea
push
lods
xchg
xchg
cmp
sbb
push
pop
iret
daa
jne
popf
xchg
rcr
daa
loop
add
push
add
pop
pop
xchg
xchg
daa
xchg
das
xchg
aaa
adc
scas
xchg
popl
sbb
xchg
xlat
sbbl
adcl
sbb
cs
ficompl
scas
lock
sbb
lcall
mov
into
fs
add
scas
cmp
mov
ja
sbb
xchg
sbb
sbb
in
mov
push
lock
cmpsb
in
enter
test
enter
push
push
fists
push
fnsave
pusha
addr16
jle
mov
and
outsb
xchg
leave
in
mov
ja
pop
jb
fisubs
dec
pop
iret
icebp
rorl
xchg
push
adc
sbb
inc
cmp
fs
pop
add
inc
enter
and
outsl
dec
scas
adc
pop
xchg
add
mov
dec
inc
push
addb
xchg
mov
mov
xchg
ficoms
push
pop
push
push
ja
in
enter
or
sbb
inc
pop
and
xchg
ds
push
jo
cmp
jp
pushl
jbe
push
scas
mov
cwtl
daa
mov
inc
iret
add
xchg
dec
dec
in
mov
xchg
into
xor
sbb
pop
rdpmc
in
outsb
jmp
cmp
faddl
mov
pushl
and
fcmovne
scas
cmpsb
add
mov
nop
push
push
cwtl
jb
orl
pop
call
fstpl
xlat
cs
imul
push
mov
mov
leave
dec
pop
pop
cltd
add
daa
pop
enter
popf
and
sarb
mov
add
jecxz
setae
out
out
cltd
pop
stc
xchg
int
fisttps
hlt
adc
mov
mul
xlat
cmpxchg
mov
push
sbb
dec
nop
inc
mov
add
ss
push
jb
inc
scas
popf
out
push
jns
es
scas
pusha
cmpb
cmp
dec
es
lcall
pushf
aas
pushf
cmp
adc
mov
es
shlb
cmpsl
outsb
sbb
xchg
cmpsl
sbb
adc
and
push
daa
sub
xchg
addr16
daa
mov
ret
inc
lret
in
fnstsw
shll
push
add
lods
jnp
out
add
bswap
sbb
jmp
popf
lahf
or
daa
popf
pop
cmpl
inc
jl
cmpsl
in
adc
sub
je
mov
or
pusha
andb
mov
jle
daa
mov
pop
xchg
push
cmpsl
xchg
xor
scas
mov
movzwl
les
rcr
mov
and
sahf
ljmp
shll
nop
cmp
inc
push
cmpsl
cmpsb
ja
testl
jb
mov
sub
outsb
and
filds
mov
popf
or
mov
xchg
iret
xor
arpl
ja
testb
adc
ljmp
lahf
jns
in
xor
cmp
inc
push
add
cmp
lahf
outsl
or
mov
add
test
cwtl
mov
cs
dec
dec
enter
or
push
aaa
daa
xchg
sti
and
sub
dec
mov
and
push
out
mov
mov
ja
xchg
sbb
xchg
mov
rorb
repnz
jb
jge
leave
leave
inc
dec
ja
mov
fwait
mov
mov
add
inc
sub
push
mov
push
sub
xor
outsb
ja
sub
mov
push
add
fcompl
xchg
cmpsl
push
fs
leave
leave
add
iret
jae
iret
fstpl
in
in
cmc
jbe
in
mov
std
pop
mov
dec
and
sahf
out
jns
inc
dec
add
in
in
dec
bound
insl
js
cmp
or
iret
mov
scas
mov
repnz
out
inc
ds
inc
icebp
mov
sbb
sbb
das
fcmovu
addr16
movsb
fbld
adc
mov
mov
xchg
dec
cmpsb
pop
dec
pushf
movsb
ljmp
or
jae
mov
xorb
lock
jg
insb
jno
xchg
movsb
movsl
das
or
cmpsl
adc
pop
or
mov
mov
cmp
or
movsl
xor
inc
jb
and
jb
ret
movsl
fiaddl
pushf
push
in
movsl
cmc
movsl
std
xchg
sbb
adc
out
add
shll
cmpsb
iret
cmpsb
xchg
cmpsb
fistps
cmc
add
xor
xor
xor
adc
xorl
outsl
js
sbb
xor
and
rol
aaa
pop
adc
daa
cmp
cmpsb
scas
cmpsb
mov
sbb
aaa
or
and
repz
outsb
add
xlat
ret
add
fisttps
push
cmpsl
decl
and
or
cmp
push
pop
lock
add
scas
mov
push
addr16
add
mov
mov
jo
ljmp
fisubs
xor
js
and
pop
test
repnz
test
or
pop
sar
mov
xor
ja
mov
mov
mov
push
add
movl
and
pop
push
and
test
mov
test
cmp
ds
test
lods
jae
pop
push
daa
iret
repz
push
xchg
or
xchg
cmp
mov
leave
imul
dec
cs
stos
call
adc
cmp
leave
and
aaa
jo
into
adc
push
daa
dec
ja
in
inc
jb
mov
sbb
iret
les
dec
stos
ss
xchg
or
out
push
testl
cmp
sub
inc
mov
pop
push
jne
mov
jle
xchg
add
setbe
mov
ror
pop
ja
ja
push
add
xchg
loope
add
jmp
daa
out
lea
or
or
adc
cmp
repz
and
jae
xor
adc
es
repz
push
adc
cmp
jmp
adc
jno
dec
and
sbb
jb
xchg
les
lods
aaa
xlat
lods
pushf
cmp
ss
mov
add
push
cmp
stc
cmp
adc
test
dec
lods
seto
orb
lcall
ret
xchg
mov
jp
scas
aaa
cmp
add
sahf
pushf
cmp
movsb
cmp
jo
pop
cmc
fcompl
jg
add
push
seto
xlat
dec
or
test
mov
fnstsw
or
das
rclb
dec
enter
pop
fs
jns
aas
mov
adc
pop
push
lahf
jp
xor
ret
add
or
sti
inc
popf
cmp
or
push
jae
pushf
fisubs
adc
dec
adc
ja
mov
and
jno
inc
or
enter
cmp
cmp
mov
pop
push
scas
sbb
sbbb
das
out
leave
leave
xor
and
iret
push
dec
cmp
or
pop
jge
jns
outsb
js
sahf
cmp
mov
clc
pop
rorb
pop
inc
popf
inc
mov
in
xchg
roll
fsub
das
push
mov
or
add
js
or
inc
cmp
out
inc
inc
sbb
add
inc
test
mov
add
scas
mov
iret
orb
nop
push
or
iret
repz
or
mov
mov
in
outsl
in
add
sbb
add
repz
add
add
repz
push
pop
arpl
iret
repz
jno
orb
or
out
inc
mov
mov
dec
cmp
int
ja
jl
mov
daa
fildll
mov
mov
jmp
cld
cmp
jbe
aas
ds
filds
mov
and
in
mov
mov
mov
cmp
sub
jl,pt
jne
and
dec
inc
push
xchg
dec
mov
outsb
call
pop
pushl
mov
incl
outsb
pop
enter
movsb
mov
fmull
xchg
mov
adc
xor
iret
mov
xchg
jl
inc
mov
jb
xor
outsb
mov
adc
out
sbb
add
mov
inc
shlb
and
jno
cmp
xchg
lahf
mov
stos
push
outsl
mov
mov
jae
ret
in
pushf
xchg
lock
mov
cmp
mov
sub
push
cmovbe
str
xchg
scas
into
outsl
push
dec
dec
mov
mov
int
loope
mov
or
inc
rolb
mov
shrb
jnp
test
dec
pop
ss
xchg
mov
insb
inc
pushf
inc
push
inc
cmovb
movsl
mov
in
inc
scas
hlt
imul
mov
xchg
daa
adc
sub
clc
add
push
mov
add
fnstsw
jmp
dec
push
out
pop
in
in
outsb
pop
arpl
jae
adc
mov
jnp
or
mov
add
push
addr16
lahf
mov
shll
jbe
mov
in
das
xchg
xor
mov
adc
in
dec
jb
mov
ja
and
shrb
in
xchg
lahf
mov
dec
dec
jb
mov
scas
mov
inc
push
les
rclb
enter
ja
mov
fildl
in
mov
ja
push
in
jns
pop
iret
push
jo
addr16
xchg
das
stos
dec
push
sahf
out
add
add
in
jns
incl
xchg
dec
jb
push
and
jae
add
dec
add
pop
jle
push
cwtl
cmp
mov
xchg
push
inc
data16
mov
outsb
mov
xchg
mov
incl
inc
pop
mov
bound
lsl
out
pop
and
cmpsl
test
xchg
popf
test
xchg
mov
pmaxsw
mov
pop
incb
leave
insl
in
mov
add
mov
cmp
push
pop
repz
cmp
cs
or
cmp
leave
jbe
push
or
outsb
femms
mov
pop
lock
leave
jnp
js
mov
repz
ds
iret
sti
add
mov
dec
adc
int3
cmp
das
movntps
mov
jg
movq
xchg
out
ja
xchg
add
xchg
mov
or
sbb
mov
fistpl
pop
push
adc
fucom
jns
push
sahf
sub
mov
call
sbb
dec
addr16
cmp
mov
xor
imul
mov
fsts
push
notb
push
mov
fcomip
pushf
cmp
sub
add
push
pop
push
pop
push
xor
mov
cs
in
and
paddsb
in
mov
cld
out
add
add
pop
fmull
dec
sbb
xlat
or
aas
push
mov
into
ret
aaa
push
pop
std
mov
push
aas
push
iret
mov
push
push
lods
in
in
mov
bsr
add
int
leave
add
add
jno
leave
clc
add
mov
clc
xchg
push
add
dec
push
iret
pop
in
outsb
frstor
popw
outsb
add
dec
sahf
out
add
mov
xlat
or
cmp
ror
rcrl
fnstenv
mov
cmpsb
fdivrs
sar
addr16
sbb
rcr
xchg
xchg
out
push
bound
out
fmull
jb
xchg
add
add
mov
mov
in
in
call
dec
outsb
xchg
push
pop
movups
dec
mov
js
and
dec
loope
push
sub
mov
iret
lods
cmp
xchg
pop
and
mov
mov
roll
jae
jb
hlt
add
mov
pop
push
daa
daa
ret
out
cltd
mov
push
test
das
mov
jne
in
jge
test
jno
out
xchg
add
iret
jnp
movsl
fiadds
lods
or
xchg
dec
jbe
or
fisttpll
sti
mov
je
and
inc
movups
in
sub
xchg
cmpsb
inc
dec
xchg
outsb
jl
mov
inc
repnz
cmp
mov
idivb
pop
ds
push
sbb
cmp
les
push
iret
repz
add
add
and
cmp
ds
jge
shrb
les
in
jbe
ror
rcl
fsubrs
psubsb
rclb
out
in
sub
sbb
jg
xchg
fcmovne
dec
push
punpcklwd
outsb
xor
jae
lds
test
lea
xchg
out
test
out
dec
dec
sahf
out
add
ftst
into
fimuls
out
cli
syscall
out
adc
in
aas
sbb
mull
or
cmp
inc
ud1
xchg
insb
sub
sub
xor
pop
jp
and
fwait
stos
cwtl
call
test
push
scas
scas
shrl
iret
add
clc
pop
push
das
out
cmp
add
or
das
push
or
cmp
movaps
inc
iret
enter
push
push
jle
adc
adc
dec
cmpsl
pushf
mov
add
mov
sahf
rol
jg
adc
subl
inc
pop
add
cmp
or
daa
cmp
xorl
jnp
cmp
push
push
add
leave
es
fildll
push
iret
ss
mov
inc
enter
xchg
dec
ss
push
add
push
ja
repz
pop
mov
ror
int
aad
pop
enter
and
mov
jb
or
adc
sbb
lgdtl
movaps
cs
shlb
leave
out
out
jo
cmp
insb
add
push
jbe
insl
and
pop
ror
in
cmpsl
imul
in
pop
sub
pop
leave
jecxz
ljmp
pop
ja
lret
cmp
outsl
inc
pop
sahf
test
fisttpll
add
push
jns
out
popw
jno
jl
jns
out
xchg
xchg
or
setle
push
mov
jecxz
jmp
push
and
das
nopl
xor
dec
into
leave
sub
cs
cmpsl
outsb
jmp
ss
clts
bswap
and
or
inc
scas
lret
xchg
out
push
add
addl
pop
inc
repnz
pop
xor
shlb
mov
icebp
add
mov
lods
pop
mov
mov
adc
int3
pop
testl
notrack
cmpb
dec
outsl
push
cmpsl
movntq
fldt
jbe
addl
push
or
testl
dec
sahf
or
sahf
push
out
psubd
add
xor
adc
push
sbb
out
sahf
out
adc
adc
sahf
push
inc
pop
push
sbb
sahf
out
sbb
jae
jb
rorb
sbb
push
adc
adc
adc
jb
jb
adc
push
or
mov
xor
cld
js
cmpsb
add
int
mov
push
mov
push
inc
and
xchg
nop
cmpsb
mov
pop
pushf
push
daa
cmp
push
loope
lahf
icebp
adc
dec
ja
idiv
dec
into
loopne
dec
into
cmpsl
adc
xlat
test
mov
hlt
mov
pushf
test
xchg
pop
out
pop
mov
pop
stc
sarb
xor
incl
xor
jns
dec
into
pop
into
pop
push
ret
ja
filds
mov
mov
cmpsb
lcall
jcxz
jp
pop
dec
push
iret
out
scas
mov
das
push
add
idivl
repz
add
and
enter
xorb
mov
mov
in
scas
adc
dec
dec
mov
pop
repnz
dec
pop
daa
repnz
cmpb
cmp
lods
addr16
call
shl
in
movsl
pushl
scas
and
pop
add
ja
pop
movsb
rorb
rcl
cmp
pop
rcrb
cli
xchg
add
xchg
sbb
ficoml
movsb
xchg
repz
dec
popa
insb
push
add
mov
xchg
push
add
cmp
push
mov
rorl
push
mov
dec
call
enter
cli
add
or
ja
enter
fistps
shlb
pop
push
pop
daa
iret
jmp
sub
xor
or
inc
jns
out
push
or
or
fucom
pop
iret
adc
push
sub
pop
sarb
add
cwtl
dec
jmp
mov
xchg
into
fildll
mov
iret
out
rclb
cmp
add
add
nop
popa
add
gs
push
popa
mov
lret
and
sub
add
shl
popf
cmp
push
add
push
add
push
push
fistps
bound
xchg
cmp
pop
push
push
or
xor
mov
cmpsl
testl
jmp
daa
jl
pop
adc
cmp
fdivrs
fmull
call
push
aad
mov
aam
push
aam
aam
in
mov
pop
stos
mov
in
fs
iret
aam
in
lods
call
inc
repnz
movsb
arpl
and
fisubl
psrlw
push
mov
pop
aad
leave
leave
inc
fwait
push
addr16
mov
leave
inc
jb
shr
xor
hlt
aad
fs
fiadds
movsl
xchg
pop
pop
push
add
sub
pop
das
jb
and
daa
push
xor
roll
gs
cmpsl
out
xor
in
pop
push
gs
outsb
pusha
subb
js
jb
inc
push
jnp
or
mov
cmpsl
lods
xchg
pushf
mov
out
scas
cmp
mov
rcrb
lods
fwait
cmp
pop
add
cmp
iret
or
repnz
sbbb
das
or
push
data16
xchg
addr16
sub
cmp
push
cmp
rcrl
popa
outsl
xchg
push
jo
mov
and
cmp
cmpsb
sbbb
xlat
in
push
jb
aas
pop
fdivrs
jne
fnsave
push
lahf
pxor
push
xchg
fucom
jns
add
clts
push
pushf
pushf
pushf
pushf
pop
push
repz
orb
or
fdivrs
cwtl
xlat
imul
mov
push
ja
mov
ficoms
ja
push
ret
jmp
subb
into
popf
fstpt
outsl
inc
scas
push
pop
dec
daa
loopne
xchg
fstps
push
aas
in
mov
fstps
invd
jnp
fwait
cmp
xchg
or
sbb
cmpsl
aas
pop
vmwrite
push
imul
pop
push
adc
add
mov
mov
mov
cs
push
dec
notb
popf
pop
decl
test
push
cmp
paddusb
mov
in
out
out
or
or
xor
pop
xchg
push
ja
add
out
dec
add
ljmp
mov
mov
adc
enter
xor
push
fldt
cmp
dec
imul
imul
test
cwtl
fsubrl
xchg
mov
leave
leave
inc
ror
hlt
mov
push
fcoml
fmull
cmp
mov
push
fsubrl
insb
fwait
test
test
inc
pop
xchg
mov
pop
push
add
imul
bswap
leave
leave
lods
add
add
add
repz
or
or
cmp
es
adc
adc
mov
fisttpll
es
int3
aam
add
dec
pop
mov
adc
jne
xchg
or
adc
ret
push
xchg
pop
push
mov
psignb
xor
push
dec
aaa
aad
jae
paddusw
fildl
pop
fisttpl
jecxz
fldt
jmp
das
repz
sti
pop
or
cmp
stc
add
fwait
mov
in
lds
push
btr
mov
out
ret
adc
adc
jns
dec
aaa
movups
or
jae
cmp
adc
pop
and
leave
jmp
iret
sbb
nopl
cmp
pop
dec
mov
repnz
and
dec
scas
fwait
cmp
jae
es
sub
cmp
repz
mov
xchg
sub
cmp
repz
sub
sub
iret
cs
mov
adc
lret
fisubrs
clc
insl
nop
sub
adc
ss
xchg
cmpl
inc
pop
shl
in
dec
fsubrl
es
pop
ja
scas
mov
push
cld
push
in
in
xchg
fistps
fbld
sub
ja
xchg
in
call
filds
nop
cwtl
cpuid
stos
and
xchg
add
xchg
or
loopne
xlat
in
out
mov
pop
cld
cmpsl
pop
repz
test
pop
add
femms
or
fcmovne
and
das
cmp
cmovg
out
or
cmp
leave
repz
adc
sahf
cmpsl
fwait
unpcklps
adc
out
fstl
call
sahf
cmc
sbb
loope
bndstx
repz
sbb
sbb
repz
inc
pop
dec
and
repz
pop
and
jne
cmp
repz
and
and
repz
cmp
enter
loope
loope
loope
inc
mov
loope
loop
push
das
mov
xor
ss
inc
loop
popf
popf
popf
pop
dec
loop
push
loop
iret
repz
popf
fistpll
aas
push
daa
mov
cmp
repz
and
cmp
repz
repz
shlb
fistpl
out
bswap
repz
sbb
sahf
out
xchg
jecxz
push
sbb
sbb
out
pop
xor
dec
out
sahf
out
dec
push
dec
pop
sahf
out
sahf
dec
push
ja
test
xlat
dec
sqrtps
pop
push
dec
outsb
fucom
jle
pop
dec
cmovp
out
dec
pop
cmpsl
pop
mov
rep
mov
das
int3
dec
xlat
push
push
loop
inc
das
call
fnstcw
xchg
outsl
in
bound
jno
sub
cmove
repz
add
jne
iret
mov
in
pop
lea
repz
lcall
repz
rorl
fsubp
rorl
in
jb
sahf
out
notb
and
rep
or
adc
push
repz
repz
iret
repz
cmp
dec
sbb
cmp
repz
sbb
ja
cmp
repz
leave
repz
xchg
and
mov
mov
mov
fnstcw
loope
jmp
jns
add
das
pop
out
femms
push
sbb
jns
out
and
adc
adc
adc
xchg
pop
loopne
dec
divps
jns
out
push
or
pop
jne
out
or
jecxz,pn
sahf
push
or
mov
ds
cmp
dec
sahf
inc
mov
fisubs
je
rep
sti
out
js
mov
add
pmaxub
mov
push
add
out
out
movd
cmp
or
sub
xor
xchg
pop
js
or
or
sahf
out
push
rcpps
pop
adc
in
in
imul
adc
cmp
mov
xchg
lahf
cmp
xchg
out
cmpsl
scas
out
sbb
in
and
cwtl
jbe
push
dec
push
adc
mov
call
rdtsc
push
add
popf
fmull
dec
push
das
pop
popa
cmp
cmp
imul
out
mov
xchg
mov
iret
adc
dec
dec
dec
dec
rcr
loopne
xor
dec
lock
xor
jns
jae
or
pop
sbb
inc
and
xor
iret
jmp
aaa
and
ja
pop
jmp
out
add
pop
daa
iret
jae
jg
add
repnz
mov
or
shr
repnz
push
adc
popf
cmp
icebp
psubw
ljmp
adc
ljmp
ljmp
iret
mov
add
add
iret
push
jne
orb
xchg
or
dec
sahf
or
scas
push
mov
pinsrw
adc
fstps
push
jmp
adc
pop
out
outsb
mov
pop
xor
cmp
sbb
sbb
dec
sahf
out
sbb
sahf
out
mov
out
jns
mov
and
dec
xlat
daa
loop
pmulhuw
clc
add
push
sbb
jns
out
cs
das
cmp
dec
icebp
inc
in
outsl
xor
jno
xlat
fnstsw
add
jns
sbbl
add
push
add
and
pop
ret
mov
jns
iret
repz
fsubrp
push
or
shl
lock
rorb
or
daa
daa
adc
and
sahf
out
repnz
pop
cmp
inc
fucom
jns
dec
sbb
sbb
jns
pop
sbb
sbb
push
and
push
leave
mov
lods
leave
leave
leave
leave
mov
iret
mov
dec
out
out
in
push
xchg
fiadds
das
add
scas
enter
cmp
pop
rdpmc
cmp
push
ds
add
dec
push
jmp
outsl
out
fistpll
cmp
repnz
mov
push
or
leave
mov
or
outsb
mov
in
sarl
lahf
jmp
jnp
pop
js
outsb
or
pop
push
push
push
lds
palignr
iret
repz
push
sub
sbb
inc
push
push
mov
in
jbe
push
pop
push
lahf
fsubrl
inc
fists
pop
jae
cmp
sub
sub
repz
fsubrl
push
sub
iret
repz
das
stos
xor
repz
lret
xor
xor
cmp
in
in
sahf
ss
aaa
cmp
lock
cmp
addr16
lahf
lock
sarb
cmp
fdivrs
jecxz
out
iret
xor
stc
scas
add
cmovae
cmp
repz
and
in
jbe
aas
dec
das
push
dec
bound
adc
popf
out
insl
add
add
add
cld
cs
test
dec
jg
es
jge
movsl
adc
mov
mov
in
icebp
mov
add
add
dec
xchg
out
sahf
push
push
out
pop
cli
dec
sahf
aaa
roll
or
fcompl
xor
repz
subss
imul
je
orl
movsb
scas
mov
iret
sbb
rorb
fucomi
insl
jbe
dec
repz
adc
or
ficomps
push
and
cs
repz
inc
dec
repz
jns
mov
repz
fldcw
in
add
pop
cmpl
sahf
outsb
repnz
add
add
testb
or
push
pop
out
in
dec
and
sub
iret
repz
or
fcmovne
repz
jno
jl
adc
es
xrelease
xchg
unpckhps
iret
repz
popf
push
test
mov
sahf
out
cmp
leave
cs
sbb
iret
cmp
ljmp
int3
adc
jns
push
and
insl
jns
out
and
sub
repz
ss
pop
inc
cs
dec
sub
sub
je
iret
sub
setp
shlb
adc
xlat
iret
int
cmc
outsl
cli
cmc
and
testb
btr
sbb
aas
sub
jg
leave
xorb
testb
inc
orl
pop
vprotq
outsb
mov
jns
xchg
xchg
xchg
mov
or
jns
out
or
or
leave
repz
prefetch
or
in
loop
imulb
add
push
testl
negl
xor
pop
repz
mov
inc
sbb
enter
sbb
or
pop
cs
cmp
repz
push
ja
xorb
iret
pop
lea
lcall
and
jns
and
fnsave
fisttpll
pop
scas
inc
sub
add
dec
add
jg
ficomps
xor
sub
aaa
mov
lahf
jg
xlat
mov
test
push
add
out
in
mov
pop
into
pop
adc
jns
cmpsb
ljmp
mov
mov
testl
push
cvttps2pi
fwait
cmp
adc
dec
sahf
ja
cmp
pop
addr16
adc
dec
jge
mov
xchg
sbb
sbb
outsb
sub
dec
push
js
hlt
pop
lods
movsl
jmp
cld
push
pop
cli
pmulhrw
cli
repnz
cli
xor
dec
sahf
outsb
wbinvd
inc
dec
ds
jns
leave
push
pop
push
or
mov
insl
js
orl
push
adc
jns
leave
xchg
fwait
push
adc
adc
stos
mov
rcrl
iret
repz
sbb
sbb
sbb
sahf
ja
cmp
jmp
loope
cmp
pop
outsb
add
or
and
adc
and
enter
sti
push
pop
pop
setle
jns
imul
addl
jle
sti
dec
mov
sahf
or
iret
shrl
lcall
femms
cmp
repz
adc
adc
mov
cmp
nop
das
cmp
cmp
adc
push
sbb
iret
repz
xor
cmp
dec
sbb
leave
repz
sbb
cmp
cmp
orb
mov
iret
repz
xchg
dec
and
leave
repz
es
fs
fdivr
pop
sub
xchg
cmc
orb
push
ret
nop
mov
fs
pop
pop
popf
pop
es
cs
std
insl
in
mov
std
jo
push
cmp
mov
out
cmpsl
leave
leave
leave
shlb
fcmovne
ret
syscall
fdivrs
out
jecxz
out
or
or
fcomip
add
syscall
or
mov
leave
repz
rsqrtps
fs
pop
adc
out
pop
jle
mov
in
sahf
out
pop
in
sbb
test
out
or
cs
jns
and
cmp
pop
and
push
and
mov
ror
repz
es
daa
loope
in
xor
jmp
scas
xchg
pop
inc
das
dec
sahf
out
or
xor
jns
ja
movhps
cs
outsb
daa
iret
cmp
dec
pop
xchg
out
js
sahf
xchg
cmp
stos
lgs
cmp
enter
incb
mov
popf
out
cmpsb
scas
into
btl
leave
repz
rolb
fucomi
das
ss
mov
or
das
push
vmwrite
out
or
or
fucomi
in
dec
das
pop
pcmpgtw
adc
iret
repz
jnp
push
adc
das
test
outsb
daa
iret
repz
loop
sahf
pushf
fcompl
in
cli
add
repnz
sbb
and
iret
in
in
and
out
popf
cmp
xchg
pop
sub
sub
dec
repz
add
pop
cmp
repz
sahf
out
inc
das
push
pop
push
xor
jae
jle
fsubrl
out
sahf
xor
out
psubd
mov
bndstx
pop
pop
mov
inc
sub
pop
inc
add
or
push
add
jnp
xchg
sbb
xlat
outsb
pop
push
fisttps
iret
push
stc
lsl
setb
jnp
add
adc
sub
jb
cmpsl
xor
xchg
push
dec
ret
sbb
and
pop
pusha
insl
loop
adc
push
cmpsl
movsb
cmpl
mov
mov
lret
mov
push
mov
push
add
jbe
xor
test
add
xchg
adcl
and
add
mov
inc
fs
shlb
fnstsw
cmp
mov
cs
inc
push
push
mov
ljmp
and
pop
inc
adc
fdivrs
cs
aaa
sub
aaa
xlat
add
das
sub
inc
jno
mov
or
out
push
or
or
or
imul
daa
in
in
pop
xchg
adc
and
leave
inc
inc
push
addr16
das
push
jo
push
mov
insl
popf
cmp
jae
and
jb
mov
andb
cmpb
in
cmp
leave
in
in
movsb
fbld
in
into
aas
xlat
sbb
data16
and
mov
add
fwait
fadds
add
adcb
push
dec
inc
add
add
sbb
imul
jo
mov
mov
sbb
cmp
testb
add
movsb
add
xchg
pushf
cmp
movsl
sbbl
subb
mov
cmp
inc
xchg
ret
mov
mov
out
adc
or
mov
adc
push
ficompl
sub
sbb
pop
fisubrl
xor
fcomp
loopne
jb
rolb
jle
iret
xor
push
xchg
nop
cmp
repz
mov
rep
pusha
push
dec
inc
iret
repz
cmp
xor
sub
cmp
repz
and
adc
lcall
hlt
in
and
jns
fwait
pop
in
faddl
aam
rcrb
movsb
mov
sarb
bnd
mov
fs
pop
push
sahf
cmpsl
cmp
dec
mov
cmp
sbb
repz
jl
and
aam
mov
mov
mov
sahf
idivl
js
jo
pusha
cmp
out
cmp
and
push
out
lcall
out
ja
mov
xchg
push
pusha
add
icebp
add
orb
add
mov
dec
lock
js
clc
ss
mov
fldenv
add
xor
std
dec
daa
aas
sbb
es
push
inc
xor
orb
jl
xchg
and
cwtl
xchg
xorb
mov
outsl
lock
call
push
mov
push
inc
jg
mov
mov
mov
and
sgdtl
push
adc
xor
es
mov
push
adc
xchg
pop
in
mov
add
fldt
or
testl
das
outsl
pop
adcl
rclb
pop
fistl
js
stc
pop
jg
js
lds
pop
out
lods
add
repnz
out
xor
out
iret
xchg
int
jns
and
and
push
repz
and
sbb
cmp
hlt
and
out
add
fcoms
push
sahf
out
sahf
aam
rorb
or
cmp
pop
inc
sbb
fdivl
cmp
push
xor
cmp
jae
push
push
and
repz
scas
push
and
adc
and
xor
clc
loope
ss
out
pop
imul
adc
xor
push
xor
xchg
cld
xorb
xor
cmp
xorl
fcomi
cmp
adcl
push
pop
js
mov
aam
adc
xor
dec
sahf
out
sti
insl
add
push
pop
ja
cmp
shl
jae
das
and
insb
dec
and
pop
les
pop
mov
pushf
in
add
or
enter
ret
mov
adc
ret
sbb
push
pop
and
jg
mov
mov
ret
inc
and
sahf
mov
sub
lcall
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
outsl
incl
mov
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
incl
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
ljmp
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
call
sbb
mov
or
addl
cmpsl
xchg
cmp
xor
call
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
call
sbbb
xchg
clc
repz
mov
subb
fwait
xchg
and
int3
insb
daa
push
xor
int
add
mov
cmp
or
aas
pop
fs
dec
lea
aas
ret
shrl
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
pushl
cmp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
call
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
filds
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
pushl
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
push
lcall
sbb
adc
lcall
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
push
sahf
out
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
into
ror
add
cmpsb
fmuls
into
add
test
or
add
nop
jl
loopne
inc
xlat
xchg
shrl
inc
inc
je
inc
inc
lcall
add
push
dec
addr16
pop
and
dec
dec
inc
push
xchg
cmc
movsl
testb
aas
jg
xor
in
mov
mov
decl
inc
pop
push
inc
dec
inc
jo
inc
popa
push
outsb
jbe
stos
adc
sub
mov
aas
sbb
insb
imul
insb
mov
cmp
sbb
icebp
push
and
pop
dec
dec
push
inc
dec
push
int3
sahf
cmpb
push
jo
jb
push
test
addb
inc
test
out
dec
inc
gs
gs
and
jle
xchg
inc
ds
adc
inc
arpl
mov
outsl
add
sub
bound
outsl
push
dec
pop
jbe
insl
mov
push
push
xchg
cmpsb
add
xchg
out
orb
push
mov
dec
mov
xchg
or
das
mov
add
push
fs
cmpsl
addb
xor
arpl
daa
jg
dec
xor
dec
jae
imul
xor
sahf
loope
mov
jns
dec
addl
lahf
push
push
les
push
mov
jmp
les
fisubrs
jb
jns
inc
inc
fimull
push
or
insl
rcl
and
inc
sbb
out
das
adc
adc
dec
dec
lds
mov
dec
bound
jbe
dec
and
xchg
push
add
cmpsb
je
xchg
int
xchg
bound
inc
cmpsb
dec
iret
jmp
dec
popa
jne
arpl
add
sub
outsl
dec
dec
add
pop
mov
push
lret
push
xor
pop
mov
mov
or
inc
xchg
push
dec
push
in
pop
mov
js
cli
dec
push
or
mov
push
add
pop
insl
add
dec
test
aad
idivl
pop
test
push
notl
imul
mov
cmp
push
jb
and
mov
lds
das
push
xlat
and
inc
push
clc
jp
lock
stos
push
in
jne
push
inc
stos
bound
jg
push
loope
dec
mov
xchg
push
inc
arpl
push
inc
stos
movsl
pop
push
cmpsl
int3
sbb
pusha
out
lds
sub
xchg
sub
push
push
insb
pop
xchg
inc
popl
iret
lods
mov
data16
rorb
cmpsl
and
push
or
andb
ja
sbb
popa
cltd
insb
and
ret
inc
arpl
adc
jne
pop
pop
sbb
les
stc
lahf
sbb
adcl
orl
push
push
dec
sub
xlat
dec
push
inc
push
dec
lahf
inc
or
xchg
or
lods
or
inc
xor
inc
sub
inc
jo
pop
orl
cmp
scas
call
mov
ret
pushf
and
push
push
cmpsl
out
dec
sub
dec
pop
xor
sub
daa
dec
xor
pusha
jmp
aam
fcompl
mov
inc
movsl
arpl
adc
outsl
adc
outsb
push
pop
loop
add
pop
push
jne
les
add
loopne
push
mov
xor
rcll
outsl
addr16
push
sub
push
xchg
mov
pop
les
push
jecxz
test
inc
sbb
out
cmp
lock
mov
repz
rep
push
xor
out
sahf
out
pushf
test
hlt
jge
dec
xor
les
inc
leave
repz
add
or
cmp
ds
push
and
lahf
lcall
fcompl
jne
add
ljmp
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
lcall
jmp
rclb
mov
sub
mov
sbb
decl
mov
test
ficompl
jmp
mov
hlt
movl
imul
jp
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
outsb
add
call
leave
mov
lods
jecxz
fdivs
jne
dec
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
imul
mov
mov
or
or
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
jg
insl
or
or
mov
cmp
call
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
adc
inc
hlt
or
fnstenv
adc
mov
testb
bound
ficoml
gs
aam
pop
popa
mov
into
push
ljmp
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
lds
inc
cld
fldcw
inc
mov
shlb
ljmp
add
pop
dec
or
cmp
add
daa
adc
or
and
mov
push
mov
outsl
and
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
incl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
dec
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
test
ss
sbb
push
imul
aam
loopne
rorl
dec
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
call
fisttps
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
jmp
add
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
pushl
loop
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
incl
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
decl
xchg
insl
add
ss
jmp
addr16
jb
push
hlt
orb
adc
mov
loop
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
push
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
sar
mov
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
jg
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ja
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
pushl
mov
xor
mov
add
push
xlat
int
push
ficoms
jmp
and
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
push
dec
pop
out
add
sub
add
lods
mov
les
mov
push
xchg
outsl
inc
jne
ds
cmc
push
dec
je
push
insb
imul
xchg
pop
incl
dec
fistps
jbe
push
jns
arpl
bound
in
outsl
arpl
mov
add
sbbb
xchg
sub
pop
inc
jne
outsl
insl
addr16
lods
fldenv
xchg
fildl
lods
xor
xlat
jl
nop
jne
mov
cmc
test
cli
cmp
inc
js
inc
insl
bound
add
or
loopne
jmp
inc
inc
inc
js
mov
popa
or
sbb
ljmp
dec
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
ljmp
cmp
arpl
or
xor
bound
pop
xor
popa
add
xchg
pop
sbb
in
inc
icebp
xor
inc
sbb
fistl
xchg
add
ror
xchg
test
mov
rcl
dec
xor
fbld
pop
or
ss
jbe
in
popa
stos
cmp
or
inc
aas
push
pop
movsb
push
xchg
stos
popa
fs
roll
inc
push
sub
mov
dec
aaa
pop
addl
insb
popa
jns
push
add
ljmp
push
push
nop
pusha
aaa
je
aaa
mov
inc
push
ljmp
jg
ficoml
jae
ret
ljmp
sahf
bound
push
mov
inc
mov
aaa
inc
and
sbb
inc
pop
jnp
adc
or
jae
inc
inc
inc
add
fimull
mov
ds
in
scas
add
mov
iret
int
push
dec
dec
lea
xchg
orl
adc
inc
outsb
jne
mov
xchg
aad
sub
addr16
ss
add
add
or
add
push
pop
aad
ss
push
repz
pop
jo
or
lods
mov
cmp
aas
cli
adc
dec
shlb
sbb
or
xor
outsl
adc
mov
push
lcall
jo
lcall
xor
mov
aad
xlat
mov
inc
add
fists
daa
inc
jb
cmp
adc
sub
push
loope
popa
jo
lahf
xor
nop
aas
push
outsl
outsl
test
mov
in
pop
push
jno
adc
in
push
andl
xchg
add
push
sub
add
pop
test
arpl
aad
adc
push
cmp
mov
jo
cmpsl
xchg
push
pop
push
outsl
inc
xor
shrb
rcl
aad
inc
pusha
push
popa
jb
adc
push
addr16
push
sub
mov
mov
adc
add
das
push
pusha
xor
push
or
push
mov
push
and
aam
les
popf
xor
or
add
sub
aaa
and
or
pop
xor
stc
pop
inc
adcb
scas
pop
add
pusha
addr16
mov
testb
and
mov
ret
push
push
push
xchg
sahf
aas
movl
add
xor
rcrb
push
loop
aaa
jno
inc
je
outsb
cwtl
mov
push
inc
aaa
lds
daa
push
add
mov
mov
and
addb
popa
loopne
mov
adc
pop
adc
or
out
push
push
pusha
dec
pop
nop
pop
dec
xchg
or
repnz
std
clc
or
pop
mov
int
mov
nop
rclb
jo
add
xchg
popa
insl
test
outsl
add
adc
das
xchg
xchg
or
inc
dec
push
and
cs
mov
iret
cmpsb
dec
shrd
popa
incl
lea
xchg
aas
xor
bswap
mov
idiv
std
repz
ud0
jmp
repnz
in
push
pusha
ljmp
lret
xchg
mov
dec
cli
push
cld
push
imul
add
push
inc
es
add
pop
in
mov
loopne
add
or
or
insb
stc
mov
cmp
adc
adc
add
mov
test
mov
decb
inc
sbb
add
popf
or
push
test
ficoml
mov
mov
dec
jae
pop
subb
or
loop
fwait
nop
das
inc
push
pusha
push
add
pop
subb
add
cs
fiadds
les
lods
add
lret
shlb
jb
in
lcall
lret
or
mov
insb
pop
in
dec
or
rcrb
mov
or
test
jb
and
repz
test
push
dec
sbbb
add
xlat
xor
nop
icebp
cmp
test
pop
inc
pop
dec
cmpsb
jmp
xchg
fs
add
mov
decb
rorb
leave
popa
jecxz
add
and
mov
jecxz
movb
pushf
sub
push
bound
std
mov
add
popa
and
fstl
es
push
cmpl
push
paddb
or
jno
int3
fucomi
gs
gs
ret
lret
jmp
jne
jmp
mov
xor
ja
repz
dec
rcr
or
call
fnstcw
test
je
inc
ror
pop
sub
loope
mov
jnp
sbb
inc
jmp
inc
in
add
or
jo
sbb
jb
jo
adcb
enter
addb
push
push
pop
cltd
call
or
int3
inc
fwait
mov
add
sbb
and
xchg
insl
imul
sbb
push
movzbl
or
rcll
test
xchg
ret
sbb
pop
lcall
in
and
cmp
jbe
mov
add
xchg
jp
xor
pop
aad
sbb
nop
xor
stos
out
sub
mov
fildll
addb
push
imul
xor
movsl
mov
arpl
loopne
call
sbbb
push
add
outsb
xor
dec
shrl
jge
rorb
dec
cmp
cmp
add
cmp
outsl
cmp
jne
push
inc
imul
add
adc
add
rolb
push
pop
mov
lds
sti
andb
in
or
dec
and
add
pop
sbb
lock
sarb
sub
inc
adc
or
push
addb
sahf
xor
rorb
mov
mov
test
loop
inc
jl
hlt
cld
add
sti
dec
xor
out
jbe
leave
fs
adc
and
mov
fsts
xor
mov
or
mov
leave
push
xchg
mov
mov
fmull
pop
add
jmp
dec
or
push
pop
mov
dec
leave
pop
sub
leave
pusha
clc
xor
test
je
sahf
loopne
movsb
sbb
push
ret
sub
dec
pop
pop
xchg
dec
mov
pop
cltd
test
sti
lea
mov
add
lock
cmpsl
sub
cltd
jmp
rorl
push
cmp
mov
push
clc
das
jp
aam
je
inc
test
movb
and
dec
adc
add
push
mov
jo
jae
aam
lea
and
sbb
jno
sbb
loope
pop
sbb
imul
jo
or
shlb
add
mov
divl
lock
and
lock
or
cs
rol
lock
loop
insl
test
mov
mov
hlt
loope
push
xor
push
pop
movl
data16
cmc
movsl
mov
lea
dec
jge
in
push
lret
insb
mov
or
aas
adc
popa
and
imul
push
dec
and
aad
stos
cmp
pusha
inc
ljmp
jg
adc
je
call
je
inc
push
push
insb
faddl
add
pmuludq
dec
lahf
push
mov
pop
outsb
or
aam
push
out
mov
xor
push
sbb
enter
add
or
cmp
nop
add
sub
fcompl
inc
jecxz
push
add
sbb
stc
jp
inc
out
push
push
fnstsw
sbb
aas
push
mov
sbb
je
or
inc
or
sub
or
icebp
fnstcw
pop
and
pop
xchg
sbb
js
adc
mov
mov
andl
sbb
fdivr
shr
inc
outsb
push
jnp
and
sbbl
cmp
fwait
jl
subl
mov
inc
pop
call
in
and
push
add
and
push
call
add
test
jl
shll
lods
dec
pop
xchg
and
movsl
add
scas
add
mov
adc
lret
adc
push
ja
pusha
daa
sub
enter
sbb
sbb
dec
movl
mov
out
jle
stc
push
jge
pop
push
call
push
mov
clc
call
jne
xchg
inc
dec
mov
lea
lret
push
or
movsb
xor
pop
cld
daa
nop
rclb
cmpsb
icebp
imul
fists
add
push
test
add
mov
dec
call
lock
mov
dec
adc
call
das
lods
mov
testl
ja
add
jns
mov
xchg
xchg
xchg
sbb
inc
imull
jle
call
in
dec
push
inc
ss
lods
and
je
stos
imul
sub
xchg
push
pushf
in
push
fs
sbb
xchg
je
adc
in
sbb
jnp
mov
or
in
shl
inc
or
push
shrl
xchg
push
aas
hlt
xor
repz
sbb
cmp
imul
aad
fbstp
dec
inc
or
add
ret
sub
test
or
jle
scas
std
mov
push
jecxz
inc
movzbl
scas
cmpsb
or
adcl
daa
push
jno
int3
sbb
xchg
sbb
lea
push
sub
lds
and
mov
push
pop
lahf
mov
movsl
sub
ss
gs
push
in
dec
xor
ljmp
bound
or
lods
lahf
fs
hlt
push
add
mov
push
jns
aaa
xchg
mov
loop
dec
or
dec
jo
mov
icebp
push
movb
add
cmp
xor
or
inc
adc
xor
xor
ds
mov
push
push
sbb
sbb
sbb
ret
push
addr16
loop
fdivr
aaa
add
lret
and
cltd
dec
fisttpl
push
dec
fcompl
sbb
loopne
daa
dec
xor
pop
push
push
int3
call
add
sti
shlb
or
sub
pop
cmc
adc
rolb
mov
jb
add
xchg
int3
and
cmp
stc
loopne
test
and
out
cmp
add
call
adc
xchg
xor
test
fsubr
xchg
adc
je
xchg
ret
sub
xchg
test
in
push
add
push
adc
out
mov
add
enter
add
inc
and
and
and
call
lea
push
fisubs
shr
push
pop
roll
cmp
dec
shll
out
out
repnz
mov
sahf
lea
fstps
into
jae
pop
hlt
fdivrp
xor
fdivr
mov
pop
loop
ret
push
push
dec
push
xor
mov
mov
jecxz
pop
or
mov
mov
push
mov
jl
out
ds
loopne
das
sbb
inc
call
or
mov
int3
or
sti
xchg
mov
mov
dec
jae
xchg
mov
les
pop
aas
jl
adc
pop
mov
pop
sub
mov
adc
mov
int
mov
mov
rep
jle
or
xchg
cmpsb
rep
push
loopne
xchg
xchg
xchg
fs
mov
or
leave
shll
pop
aad
ss
rcll
ss
inc
outsl
mov
and
adc
mov
adc
add
or
jne
dec
lea
sub
or
rep
push
pop
lahf
and
push
inc
inc
rcr
jle
xor
mov
loope
sub
push
or
mov
add
dec
outsl
push
test
push
push
jb
je
ljmp
ljmp
add
popa
xor
dec
shr
cmpl
sbb
je
mov
cmp
scas
sbb
or
fstpt
sub
scas
pop
insb
or
andl
stos
push
xor
pop
adc
xchg
add
ss
shrl
imul
into
xor
fiaddl
mov
xchg
mov
push
adc
pop
shrl
sbb
dec
aas
js
mov
cmp
lret
mov
std
mov
ficoms
or
push
adc
push
add
and
scas
dec
adc
adc
push
pop
sbb
push
xchg
sbb
adc
add
add
call
sbb
jmp
cmc
jbe
xor
pop
dec
pushl
add
adcl
loopne
mov
dec
in
outsl
imul
pop
or
pop
adc
outsb
adc
inc
ficomps
jg
scas
sub
push
stc
divl
cmp
pop
outsb
cmp
nop
dec
in
push
add
xchg
cmp
enter
pusha
or
sub
jno
xchg
jbe
insb
cmp
call
push
leave
dec
and
imul
mov
gs
pushf
popf
insb
or
aam
push
fsub
adc
and
cmp
pop
mov
cmp
mov
out
popf
sbb
setns
mov
test
mov
push
mov
inc
in
mov
and
je
in
in
in
push
sbb
push
mov
jne
jle
and
jge
fcomps
leave
lea
adc
movsb
imul
pop
imul
es
mov
adc
push
xchg
shrb
cmc
push
stos
out
adc
mov
push
inc
sbb
jne
lods
enter
lods
push
cmp
into
xor
pop
fidivrs
push
cwtl
sbb
mov
stos
ds
or
mov
dec
mov
xor
fwait
mov
xchg
cmpsb
adc
jmp
add
into
aam
fcomp
inc
test
hlt
test
inc
enter
xor
fistpll
data16
mov
mov
movswl
enter
cmp
into
mov
test
aad
mov
out
lods
lods
dec
xlat
push
push
mov
dec
aad
push
jecxz
repz
mov
push
jg
hlt
lret
lea
jb
dec
shrb
cwtl
add
fnstenv
ret
and
fimull
int3
test
test
in
andb
sub
pop
cmp
mov
lods
leave
insl
shr
jne
cld
jb
add
dec
stos
sbb
popf
in
sbb
dec
sub
dec
in
jne
xorb
add
sbb
xorb
mov
cmp
inc
pushf
sbb
icebp
or
gs
ljmp
push
add
mov
out
enter
add
inc
stos
sub
push
jl
cld
mov
xor
mov
nop
xchg
push
call
mov
ss
mov
cmp
pop
cmp
cmp
mov
xchg
popa
inc
dec
adc
je
or
or
je
mov
shrd
ret
cmp
adc
or
loopne
addl
in
mov
inc
mov
push
sbb
and
jo
xor
bound
jmp
push
ss
loopne
mov
aad
mov
adc
xor
push
test
out
sbb
pusha
push
flds
cwtl
cli
inc
lcall
rcrl
iret
xlat
cltd
insb
cld
adc
test
add
or
mov
clc
push
mov
add
adc
rorb
scas
push
movsl
jns
lods
jbe
adcl
iret
mov
xor
outsb
orb
adc
mov
mov
pop
addr16
mov
cmp
push
sbb
daa
cmp
adc
mov
mov
mov
push
loopne
int
rolb
hlt
repnz
insl
jns
push
rcll
dec
insb
sbb
inc
inc
xor
fstp
mov
or
shr
pushl
icebp
mov
jnp
mov
fbstp
call
cmp
imul
add
cld
cmp
cli
ret
push
inc
shll
or
call
inc
sbb
popa
mov
aas
mov
jmp
mov
dec
xor
mov
add
inc
adc
xchg
xchg
adc
dec
mov
mov
pop
push
fdivrl
pop
dec
movsb
pop
dec
adc
std
lahf
incb
push
adc
push
push
ds
push
ds
and
out
inc
sbb
lock
jne
jns
add
push
dec
add
or
mov
and
cmc
and
jl
mov
and
adc
sarb
mov
test
test
sub
lods
arpl
lock
pop
add
and
testl
add
dec
or
out
jnp
jmp
les
jl
ljmp
mov
adc
add
add
int3
lods
or
sbb
outsb
hlt
adc
inc
push
push
add
test
mov
daa
sub
cmp
cmp
pop
pop
cmp
push
jne
rclb
bound
popf
mov
and
mov
xor
cwtl
inc
mulb
jecxz
push
mov
push
call
out
pop
ds
pusha
mov
in
jbe
push
adc
jne
xor
push
sbb
rol
xchg
xchg
sarb
and
enter
fsts
jbe
outsl
jne
xor
outsb
in
std
jmp
and
xor
pop
call
inc
jmp
in
mov
or
cmpsb
imull
xchg
sbbl
sarb
rorl
mov
arpl
in
adc
inc
or
ret
movb
cmp
pop
aas
or
icebp
mov
ds
xorb
or
outsb
insb
dec
inc
adc
add
jo
xchg
push
push
add
mov
cmp
repnz
stos
mov
jl
or
jne
mov
jmp
or
shlw
xor
or
or
or
popf
xor
xor
lods
dec
push
xor
popf
lock
xor
or
shlb
mov
and
adcl
add
dec
jecxz
cmp
mov
add
call
push
mov
dec
xchg
or
call
shrb
dec
test
shll
test
iret
mov
cmp
nop
add
call
enter
nop
popl
rcrl
mov
out
aam
inc
mov
mov
xor
mov
lea
mov
mov
stos
fldt
push
fucomip
cmp
je
cmp
jbe
inc
nop
movsb
xchg
jne
mov
loopne
pusha
mov
xlat
adc
nop
clc
push
and
std
cmp
test
xchg
lock
sbb
pushf
cmpb
in
xchg
xor
shrl
hlt
pushf
cli
bound
rclb
push
cmp
movsb
jae
pop
pushf
loop
xor
or
cmp
shr
andl
aaa
loopne
and
or
add
xchg
test
lock
jb
adc
mov
mov
pop
or
sbb
or
mov
add
fwait
jmp
push
hlt
adc
inc
mov
loop
pop
fsubr
jo
push
sbb
ret
cltd
adc
pop
mov
pusha
mov
cmp
call
or
lea
adc
inc
adc
add
xchg
pop
dec
je
lods
stos
loopne
sti
push
add
xchg
je
lock
mov
lea
mov
addb
cmpsb
in
xchg
push
cwtl
loop
push
add
sub
test
das
push
lock
js
pop
push
lea
pop
xchg
push
mov
push
test
enter
jne
xchg
push
sbb
push
pop
imul
xor
push
and
pop
pop
fdivrl
cwtl
popa
fsubrl
call
popa
jecxz
add
fcomps
faddl
push
mov
fsub
xor
pop
ss
scas
sbb
add
lds
push
push
loopne
pushf
int
icebp
sub
shll
push
sete
call
jnp
add
xlat
aas
push
popa
sbb
mov
dec
inc
pop
rcll
sub
push
mulb
mov
jmp
xorl
push
xlat
and
dec
xchg
mov
xchg
jmp
inc
das
lret
sbb
mov
push
lock
dec
push
hlt
xchg
xor
jo
rep
lret
mov
ss
clc
and
cmp
jns
add
push
sbb
push
pusha
test
or
mov
inc
inc
std
mov
andb
andb
xorl
ffreep
movsl
jecxz
or
and
xor
sbb
lahf
ds
jmp
lock
call
dec
sbb
mov
sbb
inc
push
imul
pop
addr16
sbb
lret
ss
sbb
out
fistpl
dec
cld
jne
into
cmp
lock
push
lea
jne
push
sub
jno
pop
and
jae
je
int3
jecxz
aaa
mov
rorl
push
mov
cmp
nop
xor
add
adcl
test
rcrl
sbb
call
jnp
addl
push
mov
push
inc
jmp
dec
setb
aaa
sbb
xchg
pop
xchg
out
jmp
repnz
sbb
cmc
fisubl
jb
movb
inc
lcall
dec
jl
js
imul
lea
push
dec
xor
lahf
and
fxtract
jmp
pop
xorb
cmp
sbb
inc
or
mov
sbb
cs
pusha
movl
push
clc
xor
aaa
adc
add
mov
or
or
idiv
cmc
pop
xchg
jne
add
push
call
cmp
mov
movsb
jmp
js
sbb
fptan
push
je
and
insb
lret
ljmp
cmc
sbbl
cwtl
jmp
and
int3
or
sbb
jbe
icebp
mov
andb
mov
lret
mov
jle
je
push
stc
sub
xor
mov
or
shr
push
jbe
push
sbb
iret
sbb
jo
or
cmp
cwtl
or
popf
pushf
or
xlat
mov
mov
cld
test
je
ret
and
push
push
inc
mov
popa
push
sbb
inc
mov
aad
subl
pop
pusha
ja
cmp
jg
push
dec
lea
push
je
or
pop
gs
mov
orb
xor
sbb
mov
pushf
fnstenv
and
jl
or
mov
cmp
sub
sti
push
fadds
dec
jne
movzbl
add
je
add
push
add
movsb
nop
outsb
andl
add
and
test
push
stos
incl
nop
sbb
sub
mov
jmp
aas
add
pop
or
or
je
jno
in
cli
mov
push
cli
sub
sbb
fildl
or
and
ja
sbb
fistpll
loopne
rorb
xor
inc
pop
shrb
inc
inc
adc
or
and
fs
rolb
xor
xor
imul
mov
imul
pop
inc
jne
loopne
or
and
adc
call
dec
push
cltd
repnz
aaa
rorb
xchg
push
push
call
mov
inc
sub
add
sub
dec
test
dec
dec
xchg
cmp
inc
je
js
inc
pop
clc
cmp
inc
xchg
jne
mov
push
pop
nop
je
pop
pop
aas
dec
pop
fistl
and
mov
jo
xchg
jge
mov
or
shr
aas
mov
call
xor
xchg
adc
pop
inc
inc
orl
sbb
xor
xor
pop
push
adc
xor
push
adc
inc
orl
and
xchg
xor
add
inc
add
out
xor
xor
sbb
pushf
mov
leave
inc
adc
add
mov
xor
sub
add
push
add
xor
aaa
adc
rcrb
xor
inc
add
xor
dec
dec
push
sbb
and
xor
jmp
adc
dec
rolb
and
or
and
sbb
xchg
in
push
pop
popa
pusha
jo
shl
cmpsb
nop
dec
cmpsl
test
mov
pusha
mov
mov
xchg
cli
or
or
mov
call
sbb
imul
mov
xor
jmp
cmp
sub
mov
dec
aam
inc
adc
je
jns
cmp
call
and
pop
dec
or
push
jl
pop
int3
pop
fs
hlt
insl
inc
xchg
mov
or
pop
leave
inc
pop
cmp
adc
cmp
mov
mov
mov
pop
call
clc
jp
pop
lea
pushf
xchg
arpl
int
stos
sbb
xchg
pushl
cmp
jmp
mov
pop
xchg
sbb
out
cmpsb
xor
mov
inc
xchg
xchg
dec
xchg
addr16
test
enter
pop
push
into
cmp
sub
fimull
or
sub
inc
jmp
call
and
loopne
add
push
xlat
popa
pop
xchg
popa
push
fucomp
add
repnz
push
adc
sbb
or
adc
push
loope
movsl
inc
jle
mov
push
pusha
lock
pop
ja
mov
mov
fiadds
sub
inc
push
je
incb
es
popa
xchg
pop
jne
add
movsl
pop
xorl
jns
out
cwtl
orb
rcrl
adc
ja
test
stos
orb
and
ffree
inc
xchg
insb
outsb
iret
dec
icebp
imul
call
xor
pop
xor
lcall
xchg
int3
xchg
js
or
jne
sbb
js
xor
pusha
dec
dec
xor
push
and
and
cs
push
lcall
adc
shll
adc
and
pop
inc
adc
push
push
sbb
push
jns
push
outsl
pop
aaa
sub
and
cmp
movsl
adc
pop
add
int3
and
add
roll
dec
call
or
xchg
pop
rolb
or
xor
rorb
push
inc
fwait
outsb
pop
pop
pop
aaa
and
les
pop
and
loopne
dec
enter
xchg
cwtl
rcrb
inc
sub
cmp
sub
or
cwtl
inc
dec
sub
cwtl
shlb
inc
lret
adc
sar
sahf
lods
lret
call
movsb
add
shl
call
test
push
inc
dec
mov
xor
cs
idivl
push
in
nop
je
mov
or
inc
jb
inc
and
jb
inc
jns
imull
inc
or
push
sub
sbb
je
out
or
lock
add
inc
sbb
inc
cmp
imul
push
je
hlt
xor
adc
pushf
adc
loop
xor
pop
cmpsb
mov
or
dec
ss
test
pop
or
push
imull
mov
test
sahf
out
sahf
mov
ror
jecxz
faddl
fwait
popa
inc
cld
or
push
adc
add
add
int3
add
dec
push
insb
addr16
dec
or
pop
imul
and
pop
mov
mov
and
cmpsl
push
dec
pushf
push
pop
jmp
cmp
je
xlat
insl
add
sub
cs
adc
ret
lea
test
in
xor
push
pop
add
add
in
add
cwtl
rclb
pop
mov
jo,pt
cmp
je
lea
xchg
add
mov
in
add
nop
addr16
gs
pop
out
rcrb
or
or
and
scas
in
mov
and
or
bsf
cmp
xchg
or
ror
xchg
or
mov
push
push
jb
cmp
rdmsr
stos
mov
pop
adc
in
sahf
xchg
or
adc
and
adc
add
add
and
cs
adc
adc
push
adc
pop
leave
push
inc
pop
pop
pop
lcall
out
scas
in
sbb
mov
mov
sbb
inc
scas
mov
mov
sbb
je
push
sbb
out
arpl
jo
xor
xchg
out
xchg
sbb
and
fwait
inc
negb
pop
jne
add
outsb
lcall
clc
add
fidivrl
rcr
add
cmp
xchg
add
and
lods
pop
sbb
cwtl
fisubs
fists
in
imul
rcl
mov
adc
in
in
cmp
xchg
mov
cmp
mov
and
in
sub
call
adc
mov
pmaddwd
jmp
cmp
mov
add
adcl
or
fisubl
dec
in
in
in
xchg
aad
mov
in
cmp
mov
pop
and
out
xchg
out
or
movsb
mov
lock
push
sbb
xchg
dec
icebp
cmp
adc
jnp
or
adc
repz
sahf
cmp
imul
in
xchg
std
cmc
cmc
cmp
cmpsl
div
mov
add
negl
gs
stos
pusha
nop
cmpsb
clc
clc
clc
or
aas
stc
stc
and
mov
add
fwait
lret
sti
fdivrp
cld
cld
je
aaa
mov
insl
cld
push
push
nop
shlb
mov
repnz
sbb
decb
imul
jmp
das
movsb
sbb
shll
xor
lahf
shll
and
push
imul
cmp
adc
jecxz
mov
cld
in
in
mov
cmp
pop
cmp
inc
or
out
or
call
leave
sti
adc
xor
or
push
push
jmp
daa
in
in
repnz
cmp
or
scas
ss
out
out
xchg
mov
test
cmp
add
or
push
imul
pop
nop
stos
xchg
push
cli
stc
adc
imul
mov
pop
push
and
clc
cltd
jb
and
stc
sbb
xor
sti
sti
xchg
aaa
jb
sti
xchg
or
cmp
scas
jbe
mov
int3
pop
adc
or
cmc
inc
dec
mov
shl
stos
cmp
mov
loop
scas
ss
loop
shll
push
and
test
inc
clc
and
dec
dec
add
or
out
out
fdiv
nop
mov
mov
jns
testl
ljmp
jmp
testl
or
hlt
imul
out
xchg
pop
push
lret
or
mul
scas
andb
or
insl
repnz
xchg
inc
repz
in
repnz
or
dec
push
cmp
out
div
push
ja
scas
testb
mov
push
mov
push
stos
xchg
cmp
lcall
das
test
adc
cmc
loope
cmc
add
push
and
hlt
or
xlat
inc
jne
pop
stos
lock
push
jo
stos
adcb
mov
pop
fistl
loope
in
mov
jp
pop
jo
loop
pop
hlt
daa
sbb
sbb
jo
imul
loopne
dec
repz
repz
nop
mov
or
xchg
repz
mov
repz
repz
or
in
cmp
repnz
repnz
repnz
test
cmp
icebp
icebp
pop
xchg
stos
jns
xchg
pop
adc
repnz
repnz
cmc
cmc
xchg
adc
pop
mov
enter
lock
sbb
sub
cwtl
icebp
or
mov
jne
cmp
xor
cmovle
sub
adc
or
aad
pop
mov
test
xchg
cmpsl
icebp
adc
sub
sub
pop
and
push
sub
stos
adc
ffreep
push
inc
insb
loope
aad
pop
aaa
inc
cmp
cmp
iret
add
mov
adc
mov
xor
cs
inc
jne
stc
xor
iret
icebp
dec
add
movsb
xchg
dec
add
inc
leave
cmp
jg
jle
movsb
push
jmp
mov
dec
lods
inc
fsubrs
push
jns
adc
aaa
int
stc
cmp
repnz
add
jl
push
imul
cli
push
repz
int
push
repz
mov
fnstcw
iret
insb
sbb
push
push
aad
in
cmp
gs
dec
outsb
or
dec
add
out
mov
mov
dec
mov
xor
or
inc
pop
dec
or
and
lret
test
sub
sub
aas
xor
rcr
or
xchg
lods
test
and
jle
cmp
xchg
je
jg
fists
push
sub
jmp
xchg
push
or
dec
push
sarl
push
xchg
mov
xchg
push
sbb
jnp
adc
and
sbb
xor
gs
loopne
or
pop
call
jo
xor
add
rorb
jmp
and
pop
add
call
push
repnz
push
or
call
dec
push
fwait
adc
mov
dec
push
lret
adc
xchg
push
movb
adc
sbbb
xor
dec
jb
push
adc
ret
movsl
push
dec
ja
pop
cli
adc
inc
dec
push
js
ja
sbb
pop
xor
stos
adc
push
adc
or
sub
add
adc
cmp
rclb
dec
int
jb
xor
mov
xchg
test
sbb
add
xchg
dec
pop
xor
les
jl
and
inc
push
add
add
and
xchg
pop
xchg
pop
loope
dec
arpl
dec
js
orw
jo
inc
sbb
sbb
stos
adc
andb
or
pushf
ret
mov
adc
test
and
dec
pop
push
mov
adc
push
add
or
add
adc
cs
add
rolb
mov
adc
sbb
je
subl
loopne
xor
mov
xor
add
or
movsl
xchg
mov
adc
mov
mov
fidivl
mov
push
push
movl
cmovb
xlat
mov
sub
sti
dec
nop
int3
cmp
les
loop
mov
jle
mov
inc
push
sarl
es
dec
jo
sahf
inc
mov
fiadds
mov
sbb
repnz
dec
nop
in
xchg
push
mov
dec
in
adc
dec
jb
and
stc
nop
pop
add
mov
jmp
shll
sbb
add
adc
cli
leave
test
in
pop
or
or
pop
xor
pop
dec
inc
arpl
mov
mov
push
sbb
lcall
je
out
or
mov
aam
or
test
je
jbe
jno
pop
and
nop
je
push
andb
andb
inc
mov
xchg
xchg
sub
sbb
movsb
pop
push
leave
and
cld
push
out
add
enter
jecxz
mov
mov
sub
repz
add
push
and
xchg
and
sbb
or
push
test
inc
mov
rclb
pop
dec
nop
outsb
andb
shlb
or
orb
mov
cmp
movsl
test
out
jo
jmp
push
jmp
lods
loope
xor
adcl
add
mov
nop
ret
into
mov
lods
gs
nop
mov
stc
aaa
mov
loopne
fcompl
xchg
dec
dec
inc
lea
ljmp
dec
nop
ds
mov
popl
sbb
push
pop
adcb
dec
insb
dec
dec
pop
mov
inc
mov
inc
mov
push
test
lea
xor
dec
sti
push
aad
popf
push
push
cmp
push
dec
inc
mov
into
cmp
std
lods
mov
xor
leave
lea
mov
xor
add
arpl
and
ds
mov
test
in
sub
sbb
pop
mov
in
nop
fcmovnb
or
pop
xor
inc
xchg
inc
pop
or
and
stc
imul
mov
push
cmp
or
rcrb
test
aaa
cmc
pop
mov
fcom
add
dec
nop
push
inc
test
scas
sub
sub
push
cmpsb
decl
inc
xorb
push
ds
add
xor
dec
mov
mov
dec
fidivl
cmpsl
or
add
fs
mov
xchg
and
pop
fldt
jle
movb
mov
and
push
pop
xor
add
leave
mov
lahf
sub
jmp
mov
out
fsubs
loopne
xor
nop
jb
inc
and
dec
nop
sbb
push
test
sti
bound
data16
data16
loope
push
or
mov
push
subb
daa
or
pusha
push
int
jns
cmp
aas
xor
add
fnstenv
and
movsl
sub
mov
or
cltd
add
and
xor
inc
loopne
or
adc
rcrb
cltd
sbb
or
int3
cltd
add
dec
rolb
dec
cltd
lds
mov
mov
xor
or
inc
or
scas
jb
or
jmp
xchg
mov
and
adc
adc
dec
pop
cwtl
cs
imul
mov
inc
ret
or
mov
push
jl
orb
lret
mov
inc
adc
loope
xchg
mov
sbb
adc
mov
cmp
cwtl
add
push
test
adc
xor
and
cmpsb
mov
xchg
sbbb
int
shll
mov
js
je
loopne
mov
mov
or
adc
rcl
xlat
xor
mov
sbb
lcall
add
je
sbb
outsl
dec
inc
scas
mov
fs
insb
in
loope
xor
ss
mov
orb
aam
sbb
mov
stos
lcall
popf
imul
aad
in
cmp
pop
lcall
or
orl
or
mov
mov
jae
push
dec
inc
dec
sub
inc
leave
loopne
xchg
cmpl
inc
addl
aaa
inc
dec
mov
mov
je
dec
inc
mov
nop
das
dec
aad
mov
ss
dec
inc
mov
mov
rcrb
sbb
in
adc
shrb
xor
lcall
imul
rolb
imul
stos
je
aad
xorl
dec
and
xor
sbb
sbb
fadds
xor
cmp
sub
push
addl
sbb
or
dec
inc
aaa
push
roll
inc
dec
xorl
cmpsb
cmpl
stos
and
jno
and
cmp
test
mov
add
imul
call
lcall
loope
movsl
inc
sub
mov
mov
pushf
push
pusha
and
push
mov
inc
xorl
pop
add
push
dec
inc
subl
adcl
lcall
imul
inc
inc
sbb
sub
sbb
test
cld
sbb
mov
and
sub
call
cmp
cmpl
orl
aam
lcall
inc
jns
fldl
aad
je
sbbl
dec
inc
subl
or
adc
mov
cmp
mov
test
loopne
test
push
rcl
addl
dec
test
insb
or
sbb
bound
add
xchg
jbe
push
stos
mov
pop
mov
pop
and
orl
imul
dec
stos
push
addl
mov
lcall
xor
sbb
adc
mov
pop
sbbl
aad
pop
imul
xorl
in
xor
sub
pop
and
add
sti
lret
call
out
mov
imul
pop
dec
or
cmp
xchg
and
pop
adcl
inc
push
cmpl
arpl
imul
and
out
dec
push
dec
rolb
rcl
jne
les
imul
sbb
push
test
cmp
stos
mov
push
sub
xchg
je
inc
dec
inc
inc
rolb
je
orl
mov
mov
push
rcll
mov
xor
mov
push
mov
inc
jmp
dec
and
pop
lcall
call
adc
mov
popa
jo
ja
cmp
cmp
daa
adc
xchg
add
aad
sub
into
ds
jmp
out
loop
jge
aaa
imul
and
pushf
popf
aaa
dec
in
lods
sub
daa
icebp
mov
repz
cmp
lods
mov
push
ret
mov
xchg
dec
inc
xlat
or
cmp
mov
out
dec
pop
ret
sub
pop
out
inc
push
mov
clc
xchg
xchg
lret
inc
push
cmp
aam
sub
jbe
lods
ret
mov
jmp
fidivs
dec
dec
lahf
shrl
test
ffreep
add
ja
pop
xor
std
mov
outsb
pop
addr16
xchg
pop
int3
add
jl
dec
or
sub
inc
pop
and
fiadds
push
aaa
or
or
push
xor
inc
jnp
or
in
add
xlat
jae
or
lret
sti
imul
pop
xor
or
inc
or
mov
push
sbb
shr
mov
pop
js
inc
pushf
or
movsb
mov
mov
fs
repnz
xchg
test
or
movsb
repz
dec
xchg
movsb
stos
xchg
test
or
sar
mov
mov
pop
test
push
test
inc
add
sbb
notl
dec
push
dec
dec
lods
sbb
sbb
faddl
cmc
loop
jb
jae
popf
dec
mov
shrl
push
cwtl
xchg
inc
sub
push
cmp
inc
dec
push
inc
push
leave
ret
cmpsl
or
out
or
xchg
call
mov
push
shl
rolb
jl
mov
in
jmp
stc
mov
or
push
push
mov
rclb
mov
dec
xlat
dec
mov
xchg
pop
mov
call
xchg
es
sub
adc
cs
fwait
shrl
fadds
xchg
xchg
out
add
imul
dec
adc
push
inc
rorb
xor
popf
dec
push
mov
cli
imulb
jae
push
jl
sbb
dec
in
dec
or
sub
mov
dec
push
movsb
xorl
call
and
jge
rcl
ja
jbe
fimuls
call
adc
jmp
and
inc
mov
repz
movsb
mov
adc
mov
and
sub
aaa
cmc
pusha
mov
add
mov
dec
rcrb
dec
add
rcrb
mov
inc
dec
dec
mov
dec
inc
pop
adc
sub
adc
adc
dec
jnp
add
mov
lahf
xchg
push
add
test
and
jo
push
dec
xor
or
jmp
and
cld
inc
loopne
dec
and
add
dec
jmp
imul
dec
push
mov
nop
mov
dec
clc
adc
fisttpll
movsb
shll
push
add
scas
xchg
sbb
gs
dec
call
shlb
pop
sub
mov
dec
adc
dec
inc
xchg
inc
push
and
rdpmc
xchg
nop
or
adc
inc
ja
pusha
mov
xchg
nop
sbb
adc
in
xor
jo
adc
call
and
aaa
in
xor
jb
and
adc
popa
add
nop
fs
adc
call
mov
sub
mov
mov
adc
pusha
add
or
or
dec
call
cmpsl
cmp
push
test
jmp
les
push
mov
sbb
jae
lea
adc
inc
jle
push
mov
cwtl
adc
add
ljmp
call
xchg
mov
movsb
add
incl
jl
leave
cmp
sahf
xchg
sbb
stos
and
int
pop
lcall
negb
addl
adc
lcall
pop
loopne
ret
lds
mov
sbb
adcl
pusha
addl
pop
push
ja
sub
push
cmpl
pop
inc
sub
jnp
rolb
repz
sub
cmp
and
add
mov
nop
pop
dec
adc
mov
out
push
xchg
mov
and
sub
ljmp
adc
cmp
movsb
inc
pop
adc
push
fwait
add
cs
mov
push
hlt
xlat
push
cmp
pop
aam
mov
inc
mov
sbb
jge
xor
push
inc
call
sbb
push
add
hlt
add
or
jne
mov
pop
jnp
cmp
dec
jge
fisttpll
or
push
movb
lahf
add
lret
insb
push
out
outsl
pop
cmp
add
cmp
inc
jmp
dec
jmp
xor
jb
ret
inc
inc
pop
outsl
mov
adc
inc
inc
pop
je
pop
es
adc
inc
fistps
add
cmpb
mov
push
addl
and
jbe
stc
add
adc
pop
mov
push
push
mov
or
je
loope
lcall
and
or
sarl
leave
or
fistl
jp
into
call
push
test
jmp
add
enter
popa
adc
push
popf
pop
pop
or
cwtl
adc
and
lds
push
sbb
adc
sbb
enter
aas
add
sbb
pusha
popa
pop
test
add
mov
pusha
andb
fiaddl
cmpsb
lock
pop
sub
xchg
rcrl
or
mov
push
add
out
dec
sbb
out
addps
push
lret
sti
lods
fisubrs
jge
push
push
or
mov
je
inc
jecxz
push
ljmp
roll
inc
jmp
cmp
xor
add
mov
push
add
ret
push
sar
inc
push
inc
fidivrl
call
xor
pushf
push
sarb
xor
sub
xchg
xchg
cmc
inc
adc
sub
or
and
mov
dec
or
movsb
fwait
push
dec
imul
imul
add
sbb
and
test
cmc
pop
adc
add
add
push
movsb
icebp
popa
xchg
mov
dec
add
sahf
popa
mov
in
push
test
adc
adc
out
push
or
inc
add
dec
lea
movsl
jnp
xor
orl
xor
repz
mov
mov
popa
mov
inc
lea
xchg
les
inc
sbb
xor
push
xor
mov
or
mov
inc
ds
ljmp
push
xor
gs
jnp
dec
stos
push
xor
or
in
mov
fadds
pop
cs
call
scas
stos
popa
xor
or
dec
jbe
xlat
cmc
fists
adc
inc
sbb
outsl
movsb
cmpsl
xlat
sbb
mov
mov
popa
rcrb
cmpsl
nop
push
dec
pop
dec
inc
aaa
shrb
jmp
and
lahf
daa
dec
adc
push
dec
add
push
lea
fcoml
dec
mov
jb
jge
xchg
insb
dec
xor
sbb
nop
pop
add
pop
add
push
stc
fdivs
ja
xor
aas
rcl
ja
add
popa
jo
dec
sub
fdivl
mov
push
pusha
int3
push
int3
les
or
adc
sbb
faddp
popf
dec
call
mov
mov
jne
pop
lea
xor
orb
xorl
shlb
jmp
xor
dec
pop
and
inc
sub
sbb
popf
inc
outsb
ja
sbb
dec
movsl
add
shll
pop
repnz
rclb
ljmp
xchg
cmpsb
js
or
jp
add
inc
xchg
enter
je
lsl
rorb
and
stos
pop
data16
mov
jle
or
sbb
pop
btr
and
dec
in
jae
jns
dec
inc
push
mov
incl
pop
mov
jno
xor
xchg
lret
pushf
dec
fs
jns
xor
cwtl
add
inc
sbb
shlb
adc
add
mov
mov
or
js
jns
shll
pop
cmp
xor
jns
addb
xor
xor
nop
or
xchg
mov
jp
or
push
xor
add
xchg
adc
push
cmpb
in
xchg
pop
inc
mov
or
fistps
pop
sbb
xor
and
push
jmp
enter
fdivl
xor
lcall
add
and
xor
sub
inc
cs
cmp
roll
add
sub
mov
add
sbb
sbb
mov
pushf
mov
add
out
add
mov
mov
xchg
mov
jge
lea
add
push
inc
icebp
jecxz
movsb
xor
mov
icebp
fildl
je
sbb
cmpsb
sbb
loope
xlat
add
pop
icebp
mov
push
and
push
push
arpl
inc
cs
sbb
jno
and
dec
ret
repnz
adcl
ret
sbb
lret
inc
inc
xchg
xchg
push
inc
dec
adcl
sbb
inc
dec
inc
xor
pop
rol
add
fadds
mov
adc
fwait
pop
nop
scas
rcrl
mov
jmp
test
inc
in
nop
call
cmp
jmp
in
sarl
jle
add
or
sbb
cmp
test
fsubrp
and
sub
cmp
je
sub
mov
pop
pop
sbb
outsl
and
loop
jb
xchg
sbb
jecxz
mov
xchg
test
push
add
or
and
rcrl
and
aam
dec
call
jecxz
xchg
addb
mov
push
xor
or
or
out
and
sub
xchg
dec
adc
xchg
sbb
into
cmpsb
mov
push
dec
call
in
jge
lock
movsl
cmp
pop
and
xchg
adc
adc
test
jbe
xchg
mov
add
in
pop
adc
mov
sbb
imul
dec
aas
adc
inc
rolb
je
sahf
out
rcrb
mov
outsl
mov
mov
xlat
fsubrs
lea
inc
shlb
add
cwtl
sarb
cltd
sbb
add
mov
adc
ds
add
dec
shlb
pop
cmp
cmp
cmp
push
call
xchg
mov
mov
sbb
rolb
add
or
lods
cwtl
sub
rorb
cmp
xchg
call
es
xor
mov
push
shrb
jmp
pop
push
mov
sub
sbb
leave
fstpl
pushf
es
mov
mov
inc
sub
dec
lods
sbb
xchg
and
test
or
adc
push
aam
or
cmp
int3
push
orl
frstor
movsl
cmpsb
jo
push
push
fstps
stos
movl
stos
dec
pop
add
addr16
out
add
push
outsl
add
and
stos
inc
or
mov
jbe
loope
aam
pop
call
movsl
push
stos
dec
hlt
push
mov
cmp
flds
jo
nop
cmp
mov
mov
xor
pop
flds
dec
ret
and
fnstenv
rclb
fsts
stos
cmp
out
call
mov
push
add
aad
into
addb
inc
fsubs
dec
push
call
inc
mov
jo
nop
roll
adc
sbb
adc
push
cmp
mov
ret
lods
aaa
je
rcr
or
adc
inc
inc
fldcw
daa
ljmp
scas
fstps
xor
xor
pop
fldcw
or
aaa
call
adc
scas
pop
dec
ss
mov
movsb
mov
jecxz
cmp
int3
mov
arpl
loope
inc
fnstcw
dec
dec
idivb
cmpsb
mov
fstl
enter
fcomi
mov
mov
pop
or
jp
adc
or
cs
flds
inc
and
adc
or
fldenv
fnstenv
fsts
fstps
and
jbe
mov
test
sbb
jl
arpl
popa
adc
mov
roll
and
adcb
mov
pop
fstps
inc
add
or
mov
pop
and
adc
and
and
aaa
loop
mov
mov
adc
jmp
sbb
mov
jg
mov
fnstenv
andb
xchg
sbb
add
push
lcall
inc
sbb
fldcw
call
mov
out
mov
sub
int3
lds
test
aam
and
sub
jmp
fldcw
mov
pop
and
mov
and
ficomps
inc
sub
xor
cs
in
push
aam
adc
mov
test
inc
test
or
sbb
out
cmp
call
and
cmp
and
mov
add
sbb
or
jb
or
loope
and
mov
dec
xchg
jbe
call
enter
mov
sub
inc
add
test
jbe
rolb
cmp
mov
cmp
into
and
dec
ss
les
loop
sub
inc
mov
fs
nop
mov
sbb
xor
sbb
xchg
or
sub
push
xchg
or
arpl
sbb
dec
repz
loope
or
rcrb
xchg
push
fiaddl
pop
mov
cmp
or
call
sbb
xor
dec
mov
inc
loop
ret
cs
aas
loopne
and
xchg
push
xchg
sarb
call
or
xchg
pop
pop
and
jb
cmp
ss
adc
inc
cs
hlt
scas
fs
popl
and
add
and
ret
push
pop
cmp
loop
shlb
and
popf
and
sti
mov
inc
jecxz
cmc
dec
adc
jns
and
mov
xlat
call
aam
jle
decl
shlb
inc
pushf
bound
loop
mov
in
add
or
cmp
test
fistl
cmp
neg
das
or
inc
andl
dec
jae
adc
cwtl
dec
insb
dec
fs
addr16
pop
xchg
sarb
sbb
mov
dec
ss
sbb
add
aam
jnp
add
and
fnstcw
sahf
mov
enter
test
jnp
sbb
push
jnp
sub
shrb
cwtl
insb
call
jnp
nop
pop
mov
cmp
int
sub
adc
xor
sbb
jnp
call
add
add
test
mull
adc
mov
and
mov
mov
imul
scas
in
ret
pop
in
mov
push
adc
add
decb
inc
push
hlt
xor
shlb
inc
in
ret
test
xchg
pusha
lods
mov
cwtl
nop
dec
sbb
mov
loopne
mov
adc
xor
popa
inc
scas
push
fcoml
push
xchg
mov
stos
loopne
ret
push
and
dec
xchg
test
add
mov
add
jno
mov
jl
bound
call
jp
in
outsl
nop
xor
xchg
ret
mov
popa
inc
sub
dec
sub
dec
enter
mov
mov
aas
dec
sub
movzbl
int3
dec
enter
call
sbb
mov
xor
xor
xchg
stos
sub
or
popa
inc
aaa
xchg
popf
fidivs
out
inc
adc
push
pop
ret
repnz
call
xor
unpcklps
add
daa
call
jl
push
adc
and
adc
call
in
xchg
pop
xor
clc
lret
xor
lock
call
cmp
loopne
call
push
pop
int
inc
call
mov
or
push
call
in
xchg
das
pop
call
fs
repnz
jne
call
or
pop
jl
push
push
ficompl
adc
cmp
in
mov
mov
sbb
push
add
test
movsb
in
fsts
imul
in
mov
xchg
out
adcb
xor
adc
push
cs
dec
jae
push
push
mov
mov
cmp
xor
xchg
dec
in
es
sbb
adc
cmp
add
add
pop
mov
or
leave
gs
loope
sub
adc
sbb
movsl
jb
rcrb
stos
and
sub
mov
jle
jb
pop
sub
push
movsl
pop
inc
push
inc
gs
dec
cmp
xor
dec
in
pop
push
adc
push
cs
pop
or
and
mov
mov
aam
pop
insb
in
sbb
mov
xchg
xchg
data16
mov
push
call
inc
pop
je
data16
daa
insl
adc
js
adc
jb
mov
enter
test
and
or
mov
xor
pop
cmp
enter
inc
test
mov
dec
rcrb
cli
mov
dec
mov
test
mov
movl
push
and
subl
and
xchg
shlb
xchg
je
xchg
xor
aam
lcall
daa
sub
inc
daa
xchg
adc
lods
insb
addb
mov
mov
add
pop
mov
push
add
sbb
subb
mov
adc
sub
inc
add
xor
call
add
dec
jno
dec
dec
sub
jne
and
sbb
mov
jge
inc
aam
pop
push
xor
cmp
sub
cmp
stos
pop
pop
adc
xor
inc
cld
insb
mov
rcrb
mov
inc
pop
ljmp
pop
sbb
pusha
scas
and
das
inc
push
pop
inc
push
pop
rorb
mov
fsubrp
andb
dec
cli
ja
pop
adc
adc
mov
mov
dec
inc
cmpsl
sarb
mov
xor
push
add
mov
sbb
xchg
mov
fsts
mov
rolb
cmp
inc
mov
or
xor
xor
test
push
mov
inc
into
jge
xor
pop
or
in
push
or
pusha
adc
inc
xor
and
xor
add
xor
cmp
or
sbb
xor
repz
pusha
push
and
fs
or
and
jmp
fs
ret
test
sbbl
jne
push
stos
or
xchg
sub
aam
sub
outsb
inc
mov
sub
sub
call
inc
cmp
test
sbb
cmp
mov
ljmp
ss
cli
adc
pop
lds
pop
jecxz
push
in
push
mov
and
mov
sub
xor
pop
or
outsb
cmp
pop
mov
pop
lret
xchg
xchg
push
or
loopne
pop
lods
pushf
xchg
fadd
gs
fwait
and
sub
dec
jbe
xor
je
cs
jo
push
call
mov
fildl
dec
push
out
mov
inc
adcb
roll
xor
pop
mov
xchg
out
cmp
inc
sub
mov
cmp
pop
mov
xor
xor
jmp
adc
dec
pop
add
shl
je
pop
call
xchg
sub
repnz
jns
das
push
cmp
cs
cmp
gs
jmp
cmpsb
add
add
pop
cwtl
mov
sub
xor
pop
and
in
pop
out
cs
lcall
adc
sbb
fwait
shlb
xchg
adc
subb
mov
mov
adc
imul
jns
call
inc
inc
fwait
xchg
adc
pop
xor
inc
inc
cmpsl
adc
lods
fwait
orb
dec
and
ss
and
pop
sbb
fwait
dec
js
jmp
dec
and
xchg
pop
shlb
adc
jne
clc
testb
pop
nop
add
mov
ja
cmpsl
push
je
adc
pop
cmpsl
add
ja
pop
push
xor
sub
jl
dec
sahf
adc
sbb
cmpsl
pop
pop
lea
cmpsl
cwtl
jmp
adc
pop
dec
add
pusha
sub
inc
fisttps
add
inc
xor
leave
push
dec
test
pop
push
insl
xchg
mov
push
xchg
xchg
mov
add
xor
mov
pop
or
mov
mov
or
mov
add
dec
repz
or
in
or
mov
push
dec
pop
addr16
or
jge
adc
dec
addr16
and
mov
popl
jns
jno
mov
negl
call
add
lea
adc
jecxz
xor
sbb
imul
jmp
lods
test
mov
bound
sub
mov
xchg
push
les
mov
xchg
add
lds
je
xchg
nop
cmpsb
sub
cwtl
adc
or
mov
mov
adc
pop
mov
xchg
pop
inc
cmp
push
and
inc
insb
inc
xchg
mov
mov
adc
nop
dec
imul
fadds
or
xchg
mov
push
sbb
aam
mov
add
jmp
arpl
or
push
xchg
stc
gs
retw
push
cld
add
and
and
mov
loop
sbb
in
mov
int
pop
adc
dec
and
jp
push
das
add
rorb
das
test
dec
imul
ret
add
dec
inc
adc
dec
and
and
frstor
mov
daa
mov
mov
popf
pop
add
call
adc
sbb
dec
push
xor
or
inc
nop
push
pop
orb
jmp
movl
into
jle
mov
loopne
push
push
stc
and
jp
cwtl
dec
and
push
push
add
adc
movsb
mov
dec
outsl
andl
push
and
dec
xor
fwait
and
das
xor
mov
adc
or
movsl
enter
adc
or
and
push
out
pop
scas
push
popf
push
je
addb
push
jnp
add
pop
cmp
stos
roll
xor
sbb
fcompl
xchg
adc
sub
xchg
adc
xor
nop
popa
mov
pop
rcll
jo
nop
jo
sbb
pushf
push
je
jnp
dec
ret
loope
mov
mov
pop
cli
cmp
pop
in
dec
and
adc
sbb
adc
clc
pushf
mov
push
out
cmp
push
daa
sub
adc
add
frndint
sahf
je
aam
jg
push
mov
and
addb
test
add
sbb
movsb
xchg
push
add
jmp
push
inc
xlat
rcrb
dec
xor
movsb
inc
inc
push
push
movsl
xor
mov
sbbl
or
mov
cwtl
mov
shll
mov
or
add
mov
add
push
inc
push
pop
push
add
sbb
pusha
inc
inc
inc
push
xchg
push
insb
addb
mov
hlt
cmp
sub
push
out
add
add
or
stos
sahf
sbb
push
add
pop
adc
inc
or
hlt
popl
fistpl
jg
in
and
fwait
jg
cwtl
inc
cmpsb
jmp
sti
jns
or
arpl
in
popf
adc
test
or
pop
je
push
call
cmpsb
fs
mov
fdivrs
jnp
popf
out
pop
pop
fstl
ffree
xor
stos
push
js
sub
inc
gs
pop
insb
movsl
sbb
loop
cld
sbb
and
jb
adc
push
or
push
jne
fistpl
adc
add
mov
adc
lcall
ss
push
push
add
and
mov
sub
gs
add
sti
fwait
repz
adc
in
dec
dec
mov
jo
repnz
xlat
fwait
xlat
sub
loop
jnp
add
mov
dec
out
adc
lea
call
out
adc
adc
jb
insl
adc
nop
fcmovu
inc
push
push
push
lcall
movsl
sbb
pop
fsubl
fistpl
ret
jg
lcall
adc
xlat
ret
push
add
sub
cmpsb
icebp
in
xchg
cmp
out
out
and
adc
inc
nop
scas
mov
out
repz
and
pop
mov
movsb
out
cmp
out
inc
cmp
out
sub
adc
mov
int
in
xchg
cltd
mov
test
dec
mov
movsb
roll
push
nop
inc
push
push
pushf
inc
out
cltd
adcl
inc
mov
add
test
jmp
cmp
inc
movsl
cltd
lock
jmp
nop
and
mov
sbbb
push
mov
mov
xchg
mov
pop
cmp
sarl
add
and
or
sbb
iret
repz
ret
mov
cmp
repz
ds
or
sahf
cmpsl
stc
clc
sbb
aam
push
mov
imul
push
mov
fdivp
clc
push
inc
push
push
sub
push
jns
idivb
push
xchg
jl
fidivrs
out
inc
cmpb
push
push
pop
dec
cmp
sbb
cmp
out
repnz
fmulp
mov
test
mov
ret
into
sbb
jns
jnp
incb
add
es
loop
repz
repz
sbb
cmpsl
stc
cmp
sahf
mov
sbb
out
sahf
mov
iret
sarl
and
pop
repz
repz
nop
sahf
iret
repz
lods
mov
fsubrp
icebp
cmp
cmp
inc
push
shl
push
movsb
out
jb
jle
sahf
jnp
ret
in
mov
daa
rol
loop
clc
adc
repz
data16
push
cmp
aaa
je
fs
push
jnp
ds
cmp
adc
daa
pop
mov
stos
inc
cmp
jbe
add
aaa
push
cwtl
cmpsl
insl
mov
iret
lea
repz
out
xor
push
scas
test
ret
sub
mov
shl
hlt
addb
adc
inc
out
jne
movsl
dec
dec
inc
pop
jle
test
rol
sub
sti
fisubrl
push
or
dec
push
loopne
sbb
je
pop
rclb
push
mov
push
push
ja
adc
adc
cmp
lahf
es
push
insb
cmpsl
js
xor
xchg
stos
daa
xor
or
pop
jae
pusha
inc
or
xor
scas
test
bound
add
out
mov
and
and
cmp
es
dec
cmp
or
das
mov
imul
cmp
bound
or
lock
and
inc
mov
pusha
lds
jb
push
cmpl
and
imul
les
or
sub
mov
stos
outsl
rcr
data16
add
ret
dec
int3
and
das
cmp
mov
addr16
nop
sbb
aaa
aas
ret
je
jmp
das
push
dec
inc
push
push
inc
mov
inc
pop
inc
outsl
outsl
rorb
lret
pop
inc
xor
rcll
sbb
pop
dec
rcrl
push
and
pop
dec
call
sar
imul
dec
jae
inc
jne
std
rcll
outsb
je
jae
inc
js
adc
je
ss
mov
xor
sub
sub
sub
inc
inc
xor
xor
aaa
aaa
xor
xor
jge
xor
xor
inc
xor
mov
idivb
cmp
xor
xor
cmp
fdivl
cmp
xor
clc
inc
inc
xor
cmp
mov
enter
cmp
sets
fs
ret
test
mov
fidivrs
mov
push
lock
push
xor
or
push
mov
sub
inc
aaa
adc
xor
inc
pop
dec
adc
dec
sbb
pop
aad
shlb
popa
xor
dec
mov
std
xchg
fistpll
and
sub
pushf
xor
in
xor
and
dec
dec
outsl
mov
sbb
adc
in
scas
fwait
popa
ret
pop
push
push
dec
hlt
imul
ficoml
pop
push
call
push
cmp
out
inc
out
adc
push
sub
out
cmp
ds
adc
inc
mov
lods
data16
lods
and
loope
cmpsb
push
hlt
iret
or
mov
adc
mov
xchg
add
jg
mov
and
outsl
xor
pop
movsb
fiadds
pop
adc
js
push
lods
insb
jns
push
inc
cmp
sbb
inc
cmp
cmp
sbb
xchg
fwait
insl
xchg
push
shr
mov
dec
pop
mov
add
arpl
insb
mov
les
inc
xchg
and
outsb
ret
adc
pop
lret
adc
sub
and
xor
mov
inc
cmp
add
insb
addb
sahf
push
jbe
pop
pop
add
push
lock
sbb
xor
xchg
sbb
sbb
pusha
push
and
xlat
popa
jae
and
nop
mov
inc
push
imul
imul
mov
imul
scas
scas
je
pop
mov
jp
fs
imul
push
addr16
sbb
repz
lcall
inc
test
dec
aas
pop
fbld
pop
arpl
inc
cs
push
push
mov
cwtl
xlat
push
add
ja
cmp
je
outsb
outsl
jno
inc
or
popa
imul
mov
xor
pusha
mov
outsb
inc
sarb
push
adc
outsl
orb
pop
push
add
add
sub
sub
mov
pop
push
add
add
or
mov
inc
aas
aaa
mov
jo
and
xchg
pushf
add
sbb
push
pusha
and
ret
or
inc
cmpsl
or
dec
push
popa
shrl
xchg
push
loope
adc
cmpsl
fadds
repz
inc
adc
orb
out
jns
iret
or
add
mov
das
scas
xchg
cmpb
das
xchg
adc
xor
out
push
sbb
sbb
sbb
iret
repz
sbb
std
sbb
pop
repz
push
das
push
pop
nop
cld
and
push
and
jns
iret
jae
cld
stc
jp
push
cld
fdivr
pusha
xor
repz
stos
or
addb
mov
out
les
ds
cwtl
xor
aad
xor
test
jb
into
xrelease
ds
cmp
ret
scas
cwtl
xor
mov
popl
dec
repz
push
adc
push
cld
or
in
iret
repz
int3
les
movsb
xor
jl
out
nop
mov
mov
jl
insb
push
fs
pop
mov
cmp
repz
dec
inc
inc
cmp
out
sahf
push
xor
sub
and
sahf
out
and
adc
repz
out
or
cld
or
repz
clc
hlt
call
iret
repz
movsb
nop
jo
jns
iret
repz
lock
int3
mov
jns
out
insb
inc
sub
iret
sarl
or
push
fcom
les
repz
cwtl
js
sub
out
add
add
or
out
sbb
add
call
iret
repz
mov
loop
iret
inc
dec
sbb
pop
adc
inc
jl
test
aaa
mov
dec
adc
lret
sub
adc
jnp
mov
pop
push
inc
dec
cmp
outsl
and
shrl
pusha
xchg
fwait
add
adcb
insl
fiadds
and
mov
mov
dec
pop
mov
xor
push
jo
out
dec
and
adc
adc
xchg
pop
sbb
mov
dec
add
test
ja
pop
push
mov
and
jmp
dec
int
xor
mov
pop
cmpsl
inc
fsubl
jae
shlb
push
xadd
push
and
adc
jnp
jg
js
shrb
mov
pushf
andb
rolb
mov
cmp
cs
out
cltd
xchg
andb
sar
ret
dec
push
inc
push
xor
xchg
cld
inc
inc
mov
pop
subb
jnp
out
mov
inc
cmp
pop
jne
pop
andb
stc
sbb
xchg
xchg
jne
imul
mov
pop
dec
les
ret
arpl
imul
cmp
jo
push
or
xor
bound
stos
cmp
xor
fildll
mov
push
push
insb
das
inc
leave
jmp
xchg
iret
outsl
jl
add
cmpsl
ja
lahf
add
das
add
cmp
xchg
loopne
adc
and
push
mov
dec
test
rorb
adc
data16
in
mov
insb
pop
rolb
in
aas
jg
fsubr
and
aam
cmp
ret
dec
mov
aas
sete
int3
rorl
ljmp
add
es
dec
xlat
jns
pop
shr
repnz
fisttps
push
test
aas
in
setl
lret
out
test
adc
outsl
or
push
popf
jl
in
sub
xor
push
aas
sbb
daa
call
mov
mov
xor
mov
nop
shlb
aam
aas
jno
loopne
vmptrst
enter
sarl
mov
and
or
iret
fcmovnbe
jae
popf
dec
mov
aas
jbe
mov
dec
arpl
adc
aam
outsb
movsl
xor
adc
fs
loopne
jno
jnp
dec
mov
push
sahf
loopne
daa
in
xor
mov
push
dec
mov
insl
pop
les
inc
insl
imul
lods
sub
dec
jnp
or
je
dec
imul
or
jle
ltr
insb
ja
or
and
addr16
or
push
dec
dec
add
dec
cld
mov
push
push
add
push
outsl
ja
xor
cli
dec
sub
jno
in
sub
add
mov
daa
movsb
and
sbb
inc
sbb
dec
inc
repnz
lea
rep
inc
lods
mov
test
adcb
or
inc
xor
xchg
rorl
mov
jo
sbb
in
inc
add
insl
jo
loopne
ja
dec
pop
outsb
push
add
pop
adc
add
push
pop
mov
cli
add
jae
and
add
adc
xor
mov
push
push
and
add
imulb
mov
out
adc
or
movsl
sub
push
inc
sbb
cmp
jl
cmp
dec
add
es
mov
inc
push
mov
and
das
push
mov
or
cmp
push
jo
jb
jns
sti
xor
gs
movsb
sbb
inc
xchg
rcl
add
lods
cmpsl
xor
push
mov
pop
sbb
imulb
push
fcmovb
pop
xor
adc
sarb
and
inc
xlat
lods
mov
cmp
jns
cmpsl
and
inc
rcll
dec
jnp
and
xchg
icebp
mulb
xor
inc
xchg
or
mov
add
fbld
jne
mov
jnp
or
insl
jmp
mov
into
test
aad
addr16
es
pop
push
scas
mov
and
and
push
fiaddl
ds
fs
and
dec
add
data16
dec
icebp
inc
cmp
jno
int3
cs
adc
dec
or
fidivrl
and
push
sbbb
cmpsl
call
fs
inc
lahf
outsb
xor
cmpsl
lea
ret
inc
sub
jne
es
pop
outsl
mov
adc
scas
inc
shlb
add
fiaddl
sub
xor
in
and
mov
aam
xor
xor
dec
dec
pop
addr16
lods
add
inc
jns
rcrl
gs
lds
inc
xchg
shrl
mov
lea
inc
push
outsl
cmp
xchg
mov
roll
add
push
push
pop
aaa
or
sbb
cmp
xchg
aaa
inc
push
lock
fyl2x
rcrb
add
mov
or
inc
out
jb
mov
cmpsb
outsl
and
jo
adcb
arpl
inc
jmp
enter
xchg
cs
inc
js
aaa
dec
inc
dec
pop
or
sub
mov
sbb
and
mov
stos
inc
sbb
shll
inc
jp
scas
cmp
sub
jo
loope
inc
jecxz
sbb
xor
imul
xchg
push
cs
sub
add
push
clc
dec
pusha
push
jo
fiaddl
cmp
add
scas
into
test
je
pop
roll
in
xchg
or
add
cmpsl
ljmp
dec
imul
add
fsub
arpl
fcmove
pop
add
mov
gs
xchg
into
out
mov
inc
cmpsl
add
push
mov
mov
pop
adc
push
push
and
jns
sbb
add
cld
inc
jae
push
sbb
je
ja
cmp
outsl
xor
pushf
add
add
dec
xchg
test
dec
mov
mov
lods
pop
sarb
cs
or
into
insb
sbb
add
int
jle
sub
cmpsb
xor
iret
loope
dec
sbb
and
fistps
rclb
ficomps
mov
push
popa
mov
std
fwait
xchg
and
mov
pop
inc
cwtl
aam
push
jecxz
mov
xor
adc
sbb
and
mov
add
and
pop
pop
push
insb
push
ret
dec
mov
xchg
push
punpcklbw
adc
mov
dec
mov
addb
nop
push
loop
std
jns
sub
imull
test
inc
stos
rolb
mov
loopne
pop
add
dec
add
inc
cmp
imul
sti
fmull
rclb
jns
popa
dec
ss
pusha
jmp
pop
imul
push
and
push
into
jo
or
add
pusha
adc
pop
push
leave
mov
enter
js
pop
push
lcall
cmp
jmp
mov
or
iret
repz
clc
out
lock
enter
out
sahf
mov
lods
test
pop
mov
pushf
cwtl
xchg
nop
mov
cmp
test
push
jns
pop
push
inc
cmp
and
lahf
out
and
cld
in
lock
or
loopne
sahf
out
push
fcom
enter
jns
out
cwtl
mov
out
sahf
push
cmp
sub
sbb
lahf
out
adc
add
in
hlt
repz
repz
in
int3
mov
lods
mov
mov
js
jns
repz
inc
sub
and
and
loopne
push
and
test
mov
pop
sub
scas
addb
push
shlb
mov
dec
and
incl
minps
jo
hlt
out
testl
lock
push
xchg
daa
add
adc
mov
addr16
xor
and
cmove
lret
jbe
or
rolb
sbb
inc
and
ss
mov
add
add
dec
mov
pop
mov
add
shlb
push
or
sub
mov
inc
ret
mov
jne
pop
inc
sub
orl
pop
das
addb
and
xor
add
shlb
pop
add
in
cmp
jo
bound
and
outsb
movsb
outsb
add
adc
xchg
fidivrl
mov
cmp
insl
xor
mov
and
jbe
and
dec
rorb
cmpsl
lahf
inc
adc
mov
xor
xor
ds
je
pusha
pop
pusha
sbb
lret
outsl
jb
imul
sbb
imulb
mov
sbb
cmp
inc
js
and
loopne
sub
and
pop
or
add
jb
jne
ret
js,pt
es
popaw
insb
into
fiaddl
stc
lods
rclb
sti
ss
xor
rcrb
imulb
add
inc
pop
pop
adc
push
adc
les
xor
sbb
jmp
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
xor
movsb
xor
xor
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
incl
xor
sub
inc
ss
ss
es
dec
aaa
push
aaa
mov
dec
dec
aaa
call
aaa
adc
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
ret
sar
add
push
lock
idivl
or
push
add
adc
and
dec
xor
xor
outsb
xor
popf
xor
xor
ljmp
xor
xor
xor
xor
mov
xor
xor
xor
lock
jg
xor
out
xor
xor
xor
xor
xor
xor
jg
fidivl
scas
xor
shlb
jecxz
call
xor
mov
ss
ss
ss
ss
aaa
gs
loopne
sbb
jno
mov
aaa
loopne
add
or
jg
ret
cmp
loopne
jmp
cmp
cmp
cmp
cmp
decl
push
cmp
jl
cmpl
mov
cmp
push
adc
ljmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
jmp
incb
jo,pt
test
mov
aas
push
call
aas
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
xor
xor
xor
xor
pop
xor
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
dec
jmp
xor
xchg
xor
xor
pushl
xor
xor
xor
xor
xor
xor
push
aaa
push
sub
ss
clc
ljmp
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
cld
cmpsb
call
loope
std
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
mov
sbb
pop
sar
cld
push
or
cmp
pop
xor
push
xor
adc
jmp
xor
xor
xor
xor
xor
xor
ret
xor
aas
clc
pop
xor
lcall
clc
xor
xor
jmp
incl
nop
xor
out
in
xor
scas
clc
xor
aaa
arpl
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
cmp
inc
jno
jg
stc
cmp
cmp
cmp
push
loopne
mov
and
cmpb
ds
aas
jmp
xchg
outsb
xor
xor
mov
xor
sbb
xchg
cmp
cmp
mov
mov
fists
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
icebp
mov
cmp
dec
aas
push
mov
adcb
aas
sarl
aas
in
out
out
jo
and
loop
xor
xor
xor
xor
aas
clc
or
scas
xor
xor
xor
loop
xor
xor
mov
js
mov
xor
xor
scas
std
xor
cmpsb
ss
jmp
incl
ss
add
or
aaa
and
cmp
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
incl
or
cmp
xor
pusha
cmp
mov
lods
jecxz
idivb
push
cmp
sbb
push
cmp
inc
cmp
dec
cmp
popa
cmp
aas
cld
jg
cmpb
cmp
push
stos
cmp
cmp
es
aas
or
cmp
cmp
cmp
cmp
cmp
repnz
push
jbe
adc
sub
xor
cmp
cmp
dec
cmp
push
cmp
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fcomip
cmp
cmp
cmp
sbb
cmp
dec
cmp
jmp
addr16
lea
scas
cmp
jg
cwtl
ds
ds
ljmp
data16
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
adc
into
or
push
xor
insl
jmp
push
sahf
xchg
les
fidivl
in
mov
xor
xor
xor
xor
xor
jg
mov
xor
xor
xor
xor
xor
xor
incl
cld
mov
cmpsl
xor
xor
scas
jno
xchg
xor
xor
xor
pop
filds
push
xor
xor
mov
mov
xor
fwait
sahf
cmpsb
mov
sbb
cli
bound
scas
cmp
sbb
loope
or
aaa
cmp
mov
mov
data16
dec
cmp
cmp
cmp
cmp
lods
cmp
mov
jg
jle
push
or
xor
cmp
bound
data16
push
mov
jb
jbe
xchg
ja
js
jge
cmp
cmp
sarb
cmp
cmp
cmp
cmp
jle
mov
cld
mov
cmp
ja
lahf
xor
xchg
aas
push
pop
lock
xchg
mov
insl
xor
mov
xor
mov
stos
xor
push
ss
fiadds
cmpsb
cltd
aaa
mov
ret
aaa
jmp
repnz
fisttps
cmp
cmp
cmp
pop
cmp
jge
mov
cmp
cmp
sbb
cmp
xchg
cmp
cmp
cmp
mov
and
cmp
pushl
cmp
fdivrs
push
aas
jne
mov
scas
mov
jg
mov
fwait
xor
xor
dec
add
push
repnz
aas
xor
jmp
pop
xor
fsub
adc
es
dec
ss
call
xchg
movsb
ss
enter
in
and
cmp
sbbl
cmp
mov
test
jl
dec
ljmp
stos
pop
push
imul
cmp
test
mov
ret
ljmp
cmp
push
cmp
pusha
data16
aam
fnstsw
jecxz
imul
cld
adc
xchg
cmp
cmp
pop
sarb
inc
cmp
cmp
cli
or
pop
and
push
cmpb
cmpsl
ds
test
aad
ds
ret
idivl
add
sbb
addr16
loope
ret
cmp
ret
sbb
pop
loopne
xchg
xor
xor
pop
xor
xor
cmp
or
xor
xor
xor
pop
std
pushl
xor
mov
xor
push
lcall
pushl
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
call
add
cmp
cmp
mov
cmp
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
lcall
insl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
cld
aas
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
rclb
fwait
lock
xor
adc
xor
jae
cs
cli
cmp
jne
jg
xchg
xor
xor
xor
fsubrs
xor
xor
ljmp
aas
push
adc
adc
sbb
sbb
sub
sub
nop
cmp
mov
cmp
int3
cmp
cmp
cmp
ljmp
out
xor
aaa
and
jg
into
cmp
inc
xor
xor
lcall
decb
das
ret
lods
xor
int3
mov
xor
xor
decl
xor
cmp
sub
sub
xor
sarb
inc
cmp
cmp
cmp
sub
xor
fidivs
cmp
jl
cmpb
cmp
sub
lahf
push
mov
stos
jo
fmulp
cmp
mov
cmp
cmp
aad
push
pop
mov
cmp
inc
lock
dec
cld
push
mov
sahf
or
adc
sbb
and
and
clc
add
sub
sub
xor
cmp
inc
cmp
aas
xchg
dec
cmp
pop
cmp
cmp
insb
cmp
mov
cli
jl
cmpb
push
mov
nop
lods
or
cwtl
mov
sub
xor
inc
lock
jg
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
sarb
clc
mov
aas
loopne
clc
jbe
push
out
ret
or
xor
xchg
xor
xor
xor
jmp
inc
xor
xor
cwtl
xor
xor
xor
xor
adc
xor
xor
fbstp
mov
jb
inc
xor
xorb
and
fimuls
xor
call
outsl
ss
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
call
mov
clc
ss
ss
das
sarb
aaa
adc
adc
aaa
sbb
and
and
sub
sub
inc
lcall
pop
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
das
ret
aaa
jo
je
jl
xorb
aaa
mov
nop
aaa
xchg
aaa
mov
into
mov
dec
mov
mov
incl
mov
aaa
enter
shlb
aam
fdivs
fsubl
adc
lock
hlt
xor
xchg
mov
add
or
adc
adc
sbb
cmp
or
cmp
fdivrl
call
mov
cmp
pop
sahf
sti
push
jg
cmp
cmp
cmp
sub
cmp
cmp
cmp
cmp
loopne
add
cmp
je
jl
test
pushl
mov
mov
cmp
mov
mov
cmp
call
push
adc
jmp
sti
andnps
push
movsl
movsb
fs
lret
in
fisttps
lods
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
std
std
repz
aaa
stos
mov
push
lret
aaa
ljmp
gs
faddl
stc
push
aaa
mov
dec
push
adc
out
mov
rclb
mov
push
repz
addb
out
xor
cmpsl
out
add
add
push
add
daa
out
pop
inc
or
test
out
addb
jns
inc
push
push
mov
push
add
insb
in
fisubs
sbb
or
adc
sub
shrb
pusha
sub
cmp
push
pop
rcrb
sbbl
push
out
add
sub
dec
add
inc
lret
mov
mov
daa
ret
sbb
sub
ret
or
scas
aas
inc
mov
addb
dec
mov
mov
fmuls
gs
xchg
add
movsl
lea
dec
ss
ss
sar
sbb
call
fstpl
inc
call
div
shll
jbe
cmp
ret
jae
xor
add
jle
cld
mov
jl
or
incl
jb
hlt
lods
outsl
test
cmpsb
xor
mov
dec
sub
adc
aam
rorl
adc
inc
test
xchg
mov
dec
lret
pop
dec
fs
jbe
call
adc
pop
fadds
int3
rorb
push
pop
aaa
pop
cli
arpl
jp
mov
je
mov
sub
or
and
ret
sub
mov
mov
and
or
testl
push
jne
insb
mov
inc
cli
mov
mov
pop
and
outsl
addb
add
ja
add
nop
xor
sbb
rol
test
add
or
adc
inc
mov
aaa
or
sahf
add
lret
movsb
repz
pop
cmc
mov
mov
call
shr
inc
cmp
jne
inc
pop
addb
mov
test
shr
mov
pop
jmp
push
cmp
call
fwait
dec
cld
xor
int3
fistl
sub
sarl
mov
or
xchg
xchg
mov
inc
or
popf
fxch
or
adc
add
int
pop
push
add
lods
fwait
push
rorl
push
clc
pop
add
dec
cmp
add
push
mov
or
test
dec
inc
loop
sbb
adc
jo
or
jbe
cmp
movsb
dec
cmp
and
inc
or
and
mov
push
jmp
fildl
lea
sbb
pop
clc
fldl
pop
cmp
and
test
adc
sbb
mov
ret
pop
push
xor
push
or
push
test
mov
sahf
and
or
movzbl
mov
pusha
dec
sbb
fnsave
fidivrs
xor
fs
js
jecxz
pop
add
or
xor
push
ja
xor
jbe
fimuls
xchg
inc
push
shl
pavgw
pushl
sub
add
cmp
xchg
or
add
xchg
aad
add
add
test
cmp
popf
mov
pusha
movsl
sub
stos
rclb
pop
lods
fldt
push
lock
dec
sarb
push
fistpl
cmp
cmpsb
cmp
fistpl
loopne
lods
in
cmp
int3
fildl
sbb
pusha
adcl
leave
inc
jo
mov
xor
adc
pushf
adcb
lds
je
cmp
or
fucomi
inc
popa
leave
inc
call
mov
or
jl
adc
loope
pop
enter
or
cltd
icebp
and
lods
push
sub
cmp
or
gs
sub
lds
inc
adc
testl
je
pushf
cmp
test
cmp
sbb
jp
inc
lahf
jmp
addl
inc
aas
outsl
xor
add
adc
aas
jle
lods
push
dec
lret
aas
cmp
jne
cmpsl
gs
and
xchg
aas
dec
loope
adc
mov
xchg
push
push
je
test
add
lods
add
jmp
inc
add
sbb
add
add
aas
or
nop
xor
mov
and
pop
mov
pop
xor
stos
adc
xlat
sub
mov
mov
ds
adc
cmp
out
cmp
adc
mov
push
in
leave
cmp
sbb
inc
and
aaa
scas
mov
jbe
xchg
xor
fcomp
pop
cli
sbb
xchg
sub
dec
sbb
std
pop
push
push
dec
xor
push
jl
jl
dec
mov
adc
adc
mov
fcoms
mov
adc
or
and
cmp
sahf
jbe
xchg
fs
outsl
mov
and
lods
xchg
xchg
aaa
cmp
popa
or
mov
cwtl
cs
and
cmp
jne
test
sbb
jne
je
call
es
add
cmp
mov
adc
pop
ss
xor
push
add
xor
xchg
add
mov
and
cmp
js
push
add
push
fwait
stc
or
inc
sbb
sbb
add
cwtl
insl
add
test
gs
bound
and
sub
fistps
adc
add
gs
outsb
cmpsl
add
cmp
or
lods
sbb
and
in
add
inc
sbb
in
sbb
sbb
sub
dec
or
cmp
add
mov
iret
ljmp
mov
cmp
es
inc
jnp
add
add
push
adc
fldt
sbbb
and
pop
mov
push
adc
inc
fcmovnu
push
sub
inc
pusha
and
jl
pop
leave
mov
mov
cmp
mov
pop
test
sbb
nop
shlb
sbb
sub
fstpt
fcmovb
je
jp
jae
mov
pop
nop
and
cmp
jg
and
cmp
mov
nop
push
and
es
add
aaa
adcb
dec
pop
dec
outsb
and
push
jg
xchg
jns
testl
push
pushf
xchg
gs
dec
inc
imul
add
jmp
xor
mov
movl
and
add
sub
jg
and
out
fstp
xor
pop
nop
inc
push
fs
mov
push
push
jg
mov
push
pop
and
mov
repz
push
lock
cmp
out
push
or
and
add
movl
or
push
in
mov
xlat
mov
cltd
jle
pop
test
in
stc
xor
andb
cltd
push
inc
push
pop
fs
and
daa
and
mov
add
or
inc
fs
ds
xchg
push
stc
adc
mov
jnp
mov
aad
out
mov
repz
inc
shl
stos
xor
loop
jnp
cmpsl
ret
lret
or
pop
mov
decl
or
and
es
add
cs
daa
daa
daa
daa
cmpsb
imul
or
or
shlb
daa
sub
sub
mov
sub
sub
or
add
sub
xor
jae
sub
sub
inc
xorb
cmpsb
imul
test
mov
or
xor
jo
sub
sbb
dec
inc
popa
push
subl
ret
sub
sub
mov
cmp
js
lods
subl
insb
into
inc
inc
sbb
cmp
movsb
imulb
push
jp
gs
push
or
clc
fs
dec
sbb
or
xchg
sbb
addr16
nop
inc
inc
adc
psubsb
cwtl
addr16
inc
mov
push
dec
xchg
sbb
lods
sarb
and
mov
or
adc
push
adc
pop
adc
push
sub
in
pop
es
jle
loop
sub
movhpd
addr16
adc
add
push
cmpb
iret
add
shll
adc
or
sub
adc
jmp
cmp
xchg
test
xor
inc
sub
or
or
inc
inc
out
cmp
cmp
push
nop
inc
add
out
cs
addr16
adc
nop
int
and
mov
push
shlb
and
mov
jp
repnz
mov
mov
js
pop
pop
mov
mov
cld
add
sub
sbb
add
mov
dec
fsubrs
cltd
cwtl
in
loop
pop
push
call
inc
loop
lret
rol
movl
fs
jmp
jno
dec
outsl
fiaddl
roll
mov
xor
mov
or
adc
xor
out
push
cltd
pop
sbbb
sbb
mov
cltd
xchg
sbb
fisttpl
pusha
sub
sbb
and
adc
dec
bound
mov
cltd
adcb
pop
ljmp
mov
ret
mov
and
add
push
cmc
mov
inc
repnz
push
insb
push
jae
pop
adc
inc
jmp
mov
jae
lea
pop
aam
jae
mov
dec
mov
jae
jmp
outsb
pop
mov
popf
adc
ja
push
jne
jae
inc
mov
test
jge
jo
out
and
sub
mov
xchg
mov
add
movsl
and
xchg
aam
mov
pop
inc
mov
and
cmp
pop
rol
enter
loop
mov
jp
adc
pop
bound
bound
mov
stos
jno
jnp
sub
rcrb
mov
jno
insb
push
adcb
dec
popa
fdivs
mov
fisttpll
mov
adc
addr16
or
inc
pop
add
inc
or
leave
inc
push
lds
jne
jno
stos
or
inc
push
adc
loop
bound
mov
pop
adc
pop
adc
pop
adc
cwtl
xor
test
dec
sbb
pop
or
addb
test
or
inc
daa
push
pop
or
sbb
jno
mov
inc
es
popf
out
das
push
xchg
scas
sbb
mov
add
push
daa
or
mov
adc
popf
xorb
or
add
je
pop
adc
icebp
mov
pop
rol
and
movsb
nop
out
add
adc
or
pop
add
pop
pop
test
cs
dec
cld
sub
nop
and
push
adc
and
pop
dec
mulb
inc
jmp
inc
or
pop
and
sub
je
sub
lea
push
les
xorb
sbb
hlt
sahf
and
adc
mov
xor
nop
pop
xchg
pop
imul
and
inc
add
sub
sub
loopne
xor
shlb
pop
mov
inc
xor
rclb
mov
mov
sbb
fs
cmp
fs
pop
inc
dec
addr16
fs
inc
pop
cmp
nop
dec
das
pop
mov
dec
mov
jle
bound
call
mov
cmp
fdivrs
fstl
pop
lds
and
sbb
dec
mul
loop
pop
dec
or
pop
call
sub
sbb
xorl
mov
bt
jo
nop
rolb
jmp
test
inc
cmp
leave
or
cmp
orl
mov
mov
je
jno
cmp
mov
mov
add
cmpl
xor
xor
sub
fistpl
jg
push
xor
push
ja
cmp
sbbb
outsl
cmp
rclb
and
lods
add
xchg
nop
xor
sub
xchg
andl
cmpb
rcll
aas
lcall
fwait
jp
and
sub
pop
dec
ffree
cmpsl
pusha
ss
pop
icebp
sub
int3
fdivl
fwait
cli
or
mov
push
call
add
pop
das
sbb
in
pop
or
xchg
add
pop
int3
pop
repnz
pop
inc
fdivl
aam
push
xchg
fdivrl
pop
lods
lret
call
cmp
dec
pop
xor
or
mov
arpl
mov
dec
adc
push
mov
dec
lock
cmp
inc
das
inc
push
add
mov
jb
jb
mov
jne
push
fcmovne
dec
faddl
pop
popl
mov
ret
pop
sbb
fcmovu
pusha
xor
sbb
loopne
je
xor
lahf
daa
fs
or
clc
mov
sub
jbe
sbb
das
nop
loopne
and
sbb
sub
enter
in
adc
and
xor
adc
add
or
shlb
rolb
mov
sub
data16
push
shr
in
xchg
orb
or
lods
or
imul
sbbb
ljmp
sbb
cltd
loopne
loope
adc
cmp
adc
cltd
and
mov
push
mov
sub
sub
xor
fcoml
aas
je
mov
cltd
pop
ds
mov
push
stc
push
leave
jo
dec
push
cld
push
xchg
push
push
inc
jmp
cwtl
inc
ret
lea
nop
push
cltd
adc
popf
mov
sets
in
fisttpll
xchg
add
mov
inc
ljmp
mov
fsubl
inc
sahf
cld
loope
faddl
lahf
mov
gs
mov
add
repnz
inc
sbb
gs
repnz
add
das
pop
stc
xor
sub
faddl
xor
inc
cmpsl
shlb
insb
cmp
sbb
inc
pushf
cmpb
sub
push
inc
in
call
pushf
push
mov
popa
insb
call
arpl
adc
popa
cmp
icebp
jmp
cmc
stos
fcomi
out
cmpsl
jge
jmp
add
ret
call
dec
pop
jge
ret
movsb
popf
lret
hlt
je
sbb
sub
pop
push
ret
xchg
out
jae
xchg
js
jl
addb
loopne
in
mov
and
jo
xchg
inc
push
mov
pop
leave
and
inc
inc
icebp
push
sub
xor
out
pop
jns
fldenv
sub
or
jl
jl
mov
test
inc
adc
xor
in
sti
pop
out
imul
pushf
inc
pop
adc
or
sbb
out
repnz
inc
or
arpl
cwtl
mov
sbb
sbb
cmp
pop
movsb
jne
sbb
mov
pusha
and
pusha
xor
xchg
fistps
gs
push
je
aam
out
lret
adc
push
xchg
jecxz
cmp
xchg
inc
xchg
push
insl
loop
push
fcoms
push
xor
xchg
pop
fwait
mov
lahf
jae
movsl
xor
xor
cwtl
loop
push
jns
xchg
pushf
mov
imul
xor
mov
cmp
xchg
mov
push
mov
adc
push
push
or
xchg
push
push
add
xchg
or
ss
test
adc
xchg
add
cmp
aam
fptan
in
leave
js
cmp
dec
dec
push
scas
shrl
leave
stos
nop
daa
sbb
shll
mov
inc
sbb
hlt
insb
cmpsl
xchg
or
cmc
rorb
or
xchg
cwtl
add
es
lods
add
push
dec
add
pop
imul
sub
pop
add
test
inc
into
dec
xchg
dec
seta
cmp
mov
mov
adc
dec
dec
xchg
outsb
push
inc
xchg
inc
push
sbb
jns
lds
pop
xor
xchg
movsl
xchg
rcrb
or
ljmp
leave
xchg
mov
es
sub
aam
ret
adc
sbb
cwtl
sub
subb
int3
dec
jmp
call
xchg
mov
leave
rcrb
sub
and
pop
jo
add
fs
les
imul
cmp
adc
adc
inc
push
daa
jb
faddl
add
xchg
push
adc
mov
xor
adc
xor
cmp
or
in
insb
xor
mov
loope
clc
lods
stos
adc
jnp
or
int3
leave
call
pop
and
mov
fmuls
int
push
out
sti
fs
push
in
mov
inc
int3
pop
insb
push
inc
push
int
out
subl
push
cmp
insl
sbb
jge
mov
dec
inc
arpl
imul
fimull
push
inc
cmp
sub
mov
test
push
jb
dec
sahf
in
fisubrl
and
jb
push
adc
nop
or
sbb
mov
mulb
mov
fistl
push
fildl
enter
and
fildl
popa
ftst
cmp
push
cmpb
fucomi
nop
or
lret
cmp
cli
iret
aad
push
or
daa
ret
pop
cmpsl
add
and
fisttpl
adc
mov
or
inc
mov
push
pop
fistpl
shll
loopne
adc
push
dec
sbb
fistl
push
mov
push
and
rcr
sbb
fcmovnu
mov
adcb
xor
loopne
aaa
mov
jns
adc
jno
rcrl
fildl
fldt
call
push
push
xchg
mov
push
or
dec
inc
fisttpl
add
and
xchg
inc
add
out
loope
rorl
push
jle
dec
or
add
sbb
shlb
or
xchg
aaa
lea
and
fildll
adc
or
mov
cmpsl
mov
iret
adc
cli
lock
ror
sbbl
adc
sub
int3
jns
mov
sub
dec
pop
lret
lret
add
mov
mov
lret
lret
sbb
add
cld
mov
in
lret
lret
lret
lret
fdivrl
les
mov
mov
jns
cltd
mov
cmpl
imul
push
mov
and
jns
cmp
nop
sbbl
mov
enter
idivl
in
pop
cmp
mov
jb
sbbl
cmp
inc
push
xchg
mov
sbb
and
jo
gs
nop
orl
mov
enter
and
in
or
inc
push
jb
mov
and
cmp
mov
nop
sbbl
mov
enter
xchg
mov
in
pop
cmp
gs
sbbl
inc
mov
inc
push
cs
sbb
and
or
jb
sub
fidivrs
adc
inc
inc
outsb
daa
das
mov
or
xor
call
mov
or
mov
or
inc
dec
fcmove
inc
adc
adc
adc
sbb
imul
data16
sbb
cli
mov
and
call
sbb
cmp
les
cmp
inc
inc
cmp
dec
mov
cmp
sbb
dec
jl
dec
push
pop
repnz
dec
push
add
arpl
adc
cmpl
push
inc
mov
popa
inc
aam
cmpsb
add
push
inc
in
xor
test
das
stos
inc
add
add
inc
adcl
inc
adc
inc
leave
and
mov
stc
sub
jb
jp
dec
dec
dec
repnz
push
mov
mov
cmp
ret
ret
xchg
push
neg
les
pop
mov
hlt
imul
or
and
icebp
sbb
mov
mov
xor
mov
adc
add
mov
inc
incl
test
aam
or
movsb
mov
mov
mov
xchg
syscall
movsl
sub
push
lea
lret
movsl
sub
stos
outsl
push
xchg
dec
ret
push
xchg
outsb
subb
add
mov
gs
mov
outsl
shrl
mov
push
mov
xchg
and
cmp
xor
xchg
outsl
sub
movsl
outsl
stos
push
xchg
push
jl
sub
movsb
mov
mov
and
xchg
xor
outsl
mov
pop
rcr
push
lret
outsl
push
sbb
sub
cmp
je
xchg
mov
adc
and
add
sub
stos
xchg
outsl
repz
movsl
rcll
outsl
xor
xchg
outsl
int3
sbb
pop
inc
xchg
mov
addr16
outsl
mov
and
pop
pop
gs
shrl
movl
add
jmp
in
inc
push
and
leave
sub
jle
push
xor
imul
dec
imul
iret
scas
imul
mov
and
gs
imul
lcall
imul
sub
es
jne
cmpsl
sub
sbbl
sub
lret
imul
in
mov
xor
and
gs
imul
mov
mov
dec
jbe
ret
shrl
imul
rcrb
imul
pop
jo
lret
dec
xchg
xchg
and
movsl
sti
js
insl
or
movsl
add
fcoml
loop
in
mov
dec
or
cld
fsubr
enter
sbb
cmp
push
call
cmpsl
sub
fcompp
dec
lds
dec
pop
imul
out
call
jno
imul
imul
fisubrs
imul
notl
mov
imul
imul
jnp
adc
mov
xor
xor
imul
dec
or
js
xchg
out
cmp
push
rcll
and
sub
mov
movsl
aad
cmpsl
sub
out
gs
rol
aam
imul
icebp
cmpsl
sub
data16
and
lret
xor
sub
insl
stos
mov
push
cmpsl
sub
adc
lret
imul
je
nop
imul
aad
sbb
rol
lret
imul
cmp
imul
or
adcl
jne
cmc
lock
xor
push
sbb
lret
test
dec
popf
mov
stos
jg
loopne
sub
sbb
xor
cwtl
add
and
xor
cmpsl
sub
sbb
cmpsl
sub
push
push
imul
hlt
cmp
push
add
or
imul
pop
jns
push
xchg
out
cmp
sbb
xchg
inc
cwtl
imul
xchg
jmp
aad
xor
lret
inc
test
shrl
xchg
adc
pushf
outsb
pusha
stos
dec
imul
dec
imul
movsl
imul
sub
xor
gs
xor
mov
push
call
cmp
xchg
mov
out
mov
test
imul
mov
push
shrb
sub
je
push
loop
mov
call
mov
shrb
xchg
pop
push
jp
and
subb
xor
movsb
mov
imul
ret
dec
cmpsl
sub
xor
dec
shrl
mov
mov
repnz
or
or
adc
adc
cmp
fs
pop
jmp
imul
imul
ja
xor
lret
imul
out
mov
pop
icebp
in
cmp
dec
imul
imul
dec
pop
addr16
inc
cmpsl
sub
pop
sub
xlat
inc
adc
faddl
mov
shlb
in
int
cmpb
out
adc
dec
pop
das
orb
cltd
cli
lods
mov
jmp
push
das
nop
mov
pop
das
test
or
mov
mov
ds
lods
in
xor
push
rclb
test
push
sbb
dec
ja
cmpsl
rcll
mov
dec
xchg
pop
push
and
pop
add
xchg
jbe
sbb
dec
push
push
pop
addr16
xchg
cmpsb
cli
sahf
arpl
fldcw
movsl
cmpsb
js
mov
in
adc
and
loopne
push
negb
cmpsl
push
sub
mov
jns
mov
faddl
repz
rcrl
ss
push
iret
repz
pop
outsb
adcb
cmp
fdiv
outsb
or
push
iret
repz
ds
pop
jb
mov
repz
mov
out
jns
cmpsl
stc
push
stos
adc
cs
jns
out
pusha
jbe
test
idivl
mov
push
sbb
jns
out
xor
dec
pop
mov
ja
insb
addb
cmpsb
add
lods
sar
push
adc
aad
pop
ret
mov
push
lea
adc
xor
and
sbb
push
repz
out
mov
repz
add
push
clc
mov
xor
xor
add
les
mov
sbb
add
clc
mov
cmp
xor
mov
sahf
sarb
adc
iret
sarl
das
xchg
sbb
sbb
xchg
js
or
mov
jnp
sahf
pop
mov
and
out
lcall
jns
sarl
jp
cmp
enter
mov
add
xchg
or
leave
or
outsl
adcb
ret
cmp
pop
dec
xchg
repz
xor
cmp
adc
imul
xchg
in
loopne
out
sahf
fstp
ror
enter
out
sarb
out
mov
out
sahf
nop
mov
sahf
out
js
jo
push
fs
pop
pop
push
sahf
out
sahf
push
dec
dec
inc
inc
cmp
sahf
out
cmp
sub
sarl
adc
add
nop
fmul
repz
enter
dec
sub
call
jns
out
pusha
push
dec
inc
xor
xor
out
or
mov
ror
repz
mov
pusha
cmp
lahf
out
lcall
lea
push
add
lock
mov
mov
das
sub
push
push
pop
adc
test
and
inc
pop
adc
fdivr
adc
push
aaa
xor
push
push
add
call
pop
xor
mov
rorb
push
test
mov
inc
enter
pop
shlb
jbe
push
add
dec
xchg
iret
mov
daa
loope
cmpsl
or
push
and
aas
xchg
insb
movsb
xchg
ficoml
icebp
add
sbb
out
xlat
push
mov
pusha
mov
xchg
outsl
sarb
test
mov
imul
pop
cmpb
inc
lcall
shll
jbe
sub
add
mov
mov
adc
add
aas
or
cltd
nop
and
testb
pop
rcr
and
fmuls
cmp
adc
scas
inc
fisttps
nop
sarb
inc
jae
pop
adc
inc
jg
dec
mov
popa
jle
pop
xor
aas
in
dec
enter
push
push
dec
xorb
fwait
cmp
mov
mov
incb
jo
movsb
fisttps
mov
mov
movnti
imul
inc
mov
mov
jo
stc
mov
mov
cmp
dec
lods
fwait
sbb
insb
pop
xor
lds
jecxz
insb
pop
stos
outsb
cs
outsb
lahf
fsts
ds
outsl
gs
int
movsl
add
movsl
pop
mov
or
je
rol
push
mov
movsl
dec
cmpsl
mov
mulb
push
push
xor
xor
and
outsl
jne
xchg
jl
xor
push
push
arpl
cmp
xchg
mov
outsl
and
fisttpl
pop
inc
jb
add
sub
pop
mov
add
mov
movsl
xlat
sbb
inc
xor
outsl
adc
dec
pop
aas
fwait
push
les
inc
pop
lret
xor
out
sub
lret
aaa
mov
fldt
and
mov
rcrl
movsb
sbb
mov
push
mov
mov
inc
ljmp
orl
call
sbb
lcall
sbbb
and
add
pop
or
add
xorl
mov
mov
and
roll
add
movsb
xchg
addb
sti
lahf
mov
mov
sub
addr16
mov
xchg
imul
mov
subl
rcrb
cmp
daa
ret
push
push
aaa
add
ja
add
arpl
lcall
sbb
dec
das
or
test
or
pop
inc
xchg
movsb
xchg
jns
out
jle
pushf
cwtl
xchg
nop
out
sahf
out
test
cmp
repz
pop
push
pop
dec
inc
inc
cmp
cmp
repz
sub
iret
repz
and
sbb
adc
lea
xchg
hlt
xchg
in
push
in
fdivrl
repz
enter
jecxz
iret
repz
mov
push
and
je
insb
push
fs
repz
idivl
dec
mov
push
and
out
jl
adc
in
xchg
push
enter
iret
repz
sahf
idivl
nop
mov
dec
sahf
out
pop
inc
cmp
jns
iret
repz
adc
lock
loopne
out
sahf
out
mov
xchg
insb
mov
adc
adc
out
pop
push
and
push
outsl
retw
jmp
cwtl
inc
xor
mov
neg
mov
ljmp
enter
pop
xor
pop
subb
add
pop
cs
push
lods
pop
js
mov
adcl
enter
pop
js
jbe
outsb
stos
lcall
xchg
cs
ret
movl
fists
mov
aas
xchg
and
adc
rolb
shlb
rcrl
mov
push
fnstenv
sti
mov
sbb
shlb
stos
dec
jl
xor
xor
cmpsb
dec
xor
popf
cmp
ss
ss
nop
ss
push
insl
loop
sub
ss
push
out
test
xorl
aaa
adc
sbb
add
cmp
fstpt
push
cmp
xchg
test
mov
lret
cmp
cmp
cmp
fwait
dec
dec
test
inc
test
jg
cmp
clc
cmp
xor
cmp
cmp
ljmp
mov
mov
ds
ds
faddl
adc
jg
ds
ds
ds
ds
aas
pop
aas
and
sub
xor
aaa
into
fists
push
data16
jbe
jnp
cmpl
movsb
shrl
cld
aas
mov
sarl
div
dec
add
push
xor
jl
xchg
cmpsb
mov
xor
inc
add
xorb
xor
mov
mov
xor
xor
into
das
xor
sarl
xor
cmp
xor
inc
sarb
fmuls
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
mov
jmp
push
xor
dec
mov
ss
mov
clc
test
lods
ss
pushl
sbb
xchg
mov
das
test
add
sub
das
cmp
add
pusha
fmull
ljmp
mov
sub
xor
cmp
ds
cmp
cmp
xorb
pop
cmp
outsl
cmp
mov
shlb
outsb
jo
mov
fdivrp
outsb
cmp
ret
js
cltd
idivb
shrl
icebp
cmp
cmp
dec
push
or
push
outsb
ja
jle
test
push
mov
mov
mov
iret
cmp
cld
cmp
push
ds
ds
inc
inc
xchg
xchg
cs
incl
xchg
xor
xor
xor
xor
fwait
pusha
cld
ret
xor
push
xor
xor
mov
std
xor
xor
xor
xor
inc
lds
xor
xor
pushl
mov
repnz
dec
ss
bound
xorl
ss
es
or
ss
pop
add
clc
ss
ss
aaa
or
push
add
xor
aaa
stos
shrb
dec
adc
sbb
push
and
cmp
push
fisttps
sbb
pop
cmpsb
test
mov
sbb
cmp
incl
ljmp
repz
cmp
cmp
cmp
sbb
sbb
cmp
cmp
pop
push
call
jns
jle
xchg
mov
xchg
fnsave
mov
scas
cmp
or
cmp
push
add
insb
cmp
xor
pushl
cmp
cmp
cmp
cmp
push
push
fs
sbb
push
cltd
xor
insl
sarl
or
shrl
and
aaa
stos
dec
aas
outsb
inc
cmpl
aas
ret
aas
iret
mov
xor
icebp
mov
into
xor
pushl
sarl
lea
xchg
xor
xor
xor
xor
xor
cld
push
xor
xor
in
pop
xor
xor
lds
mov
xor
insb
and
sbb
dec
xor
xor
adc
push
enter
ss
ss
arpl
stos
add
ss
ss
or
aaa
pop
xor
aaa
jne
jle
xor
mov
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
or
decl
aaa
or
cmp
cmp
jg
stos
dec
cmp
arpl
outsb
ret
lret
cmp
cmp
scas
in
inc
pop
mov
inc
or
cmp
and
lret
mov
xchg
icebp
jg
fbstp
divb
data16
mov
ss
xor
xor
xor
xor
xor
movsb
mov
sbb
xor
xor
xor
xor
xor
xor
xor
incl
xor
xlat
xor
ja
mov
pushf
ss
mov
mov
adc
and
xor
xchg
push
jb
loop
cmp
pop
cmp
lcall
loope
cmp
jmp
std
cmp
jg
mov
inc
ds
imul
mov
lret
aas
lods
andl
cmp
push
sbb
sbb
mov
mov
cld
xor
jae
mov
xchg
cli
cmp
cld
ljmp
jo
cmp
dec
cmp
pop
cmp
mov
cmp
xor
xor
xor
clc
dec
xor
xor
xchg
divb
push
push
pop
or
pop
dec
es
xor
inc
sbb
jp
add
arpl
mov
pusha
out
xor
xor
jno
xchg
cmpb
cmp
test
xorb
ret
jle
xor
popa
je
insb
jb
mov
popf
push
bound
lods
push
mov
dec
int3
inc
fdivrl
popa
je
cmp
xor
cmp
call
push
int3
xchg
xor
push
xor
out
xchg
adc
xchg
mov
cmpsb
test
mov
push
orb
loopne
dec
xchg
call
fbld
xor
xor
adc
adc
sbb
sbb
and
xchg
jbe
xor
mov
and
adc
clc
mov
xor
push
pusha
xor
xor
push
push
out
es
sub
lock
xor
xor
sbbl
mov
inc
mov
les
xchg
cmp
xor
xchg
mov
cld
jo
je
js
nop
xlat
shl
push
xchg
xor
sahf
test
push
xor
outsb
jo
sti
sbb
ja
mov
mov
cmp
lock
cmp
mov
mov
fdiv
loopne
pusha
mov
pop
daa
cwtl
out
sar
mov
or
adc
sbb
sub
push
sbb
pop
push
insb
xor
xor
xor
xor
xor
ss
cmpsb
mov
mov
shlb
push
xor
clc
jmp
xorb
xchg
xchg
sbb
add
sbb
pop
push
inc
add
call
xor
xor
adc
fs
add
loop
adc
sar
push
sbb
xor
aam
xor
pop
pop
sub
dec
xor
push
xor
pop
xor
mov
incl
jo
je
js
jl
andb
incl
scas
pushf
xor
xor
xor
xor
xor
xor
xor
into
sub
loopne
shlb
int3
fimull
xor
pop
xor
ret
cmpsb
mov
add
inc
aaa
mov
jecxz
aaa
mov
xor
sbbb
cmp
ds
adc
fdivr
loopne
les
inc
xor
jae
inc
jp
add
add
filds
add
or
pop
pop
push
or
or
or
or
or
and
adc
push
adc
les
or
pop
sbb
adc
adc
adc
add
data16
or
adc
pop
adc
inc
add
icebp
sub
xor
add
sub
add
add
jp
mov
inc
mov
jb
and
cmp
jg
inc
add
push
adc
pop
and
xor
inc
mov
adc
push
shl
and
bound
js
xchg
fs
xor
and
bound
adc
cmpsl
xchg
or
es
mov
adc
and
xchg
imul
or
pusha
dec
adcb
xorb
pushf
into
add
adc
cmp
incl
jmp
adc
push
adc
pop
popa
jno
and
adc
stc
add
or
xor
adc
mov
and
roll
test
sub
scas
fiaddl
or
js
push
orb
or
das
mov
add
lds
cld
cli
and
mov
inc
jnp
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
mov
mov
out
stc
or
xchg
jg
or
inc
repnz
addr16
out
or
push
push
xchg
add
repnz
inc
lock
pushl
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
push
pop
sbb
mov
push
pop
mov
pop
pop
mov
popl
movb
pushl
dec
adc
adc
mov
xor
lods
scas
xchg
test
aam
jmp
outsb
iret
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
imull
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jmp
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
call
jp
push
out
or
cld
push
fcmovnb
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
lcall
mov
jmp
sbb
add
mov
out
pop
jb
mov
or
push
mov
incl
int
inc
fwait
sbbb
mov
dec
jp
push
gs
jg
aas
add
add
stc
loope
mov
sar
andl
outsb
outsl
adc
icebp
testb
mov
jg
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
das
ljmp
dec
subl
jb
adc
push
lock
ljmp
inc
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
cmpl
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
jp
fisttpll
dec
fisttpll
out
aas
std
cli
push
push
mov
jg
cmp
sub
inc
scas
inc
mov
jg
ljmp
je
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
or
cmp
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
sub
cmp
cmp
js
jmp
clc
pop
hlt
lret
movsb
add
ljmp
rorb
gs
std
xorb
jg
pop
loopne
call
outsl
adc
ret
das
pop
pop
pop
shlb
out
sarb
cmp
jno
outsb
lock
or
sarb
std
pop
les
cli
mov
mov
jmp
pop
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
call
push
mov
adc
and
sbb
xchg
jo
and
out
test
ljmp
icebp
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
jmp
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
push
movsb
xchg
or
mov
stos
dec
lods
xor
cs
mov
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
decl
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
incl
imul
add
mov
cmp
xchg
mov
cwtl
jg
xchg
ftst
jbe
xchg
and
add
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
std
les
cli
adc
and
lahf
fdivr
stc
int3
mov
mov
mov
pop
mov
std
loop
shrl
mov
dec
incb
fisubrl
aas
mov
mov
jo
or
cld
inc
or
pop
jg
add
jle
pop
jg
mov
aad
test
mov
mov
adc
or
iret
push
jbe
push
sbb
stos
icebp
pop
std
jg
call
dec
jno
adc
push
inc
jecxz
sbb
sarl
sbb
mov
lods
loopne
and
clc
xorl
mov
imul
mov
push
in
aas
mov
fmull
cmp
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
loope
pop
in
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
fbld
data16
pop
nop
mov
inc
sti
arpl
daa
lock
jg
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
mov
decl
fsubr
fistps
lds
fidivrl
jg
stos
ljmp
ss
add
dec
mov
sub
jge
xor
lahf
les
xchg
ds
sbb
cld
addl
sbb
mov
in
stc
mov
lahf
outsl
int3
push
sbb
idiv
pop
imul
arpl
out
out
outsl
xchg
jg
incb
jge
popa
push
test
jbe
outsb
hlt
sti
fwait
clc
pushl
cld
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
adc
icebp
outsl
js
pop
jg
pop
shrb
rcl
jg
adc
xor
inc
sti
lcall
fisttpl
sub
jmp
lea
jp
jnp
jecxz
jg
add
ds
pop
adc
imul
or
inc
pop
xor
in
inc
nopl
xor
subb
iret
mov
lock
inc
cmpsl
enter
clc
in
pushl
xchg
movsb
insb
or
and
xchg
ficomps
aam
jp
clc
insb
test
aas
repz
clc
fists
sbb
lock
in
jmp
out
sbb
aaa
clc
push
hlt
je
ret
jl
icebp
fs
pop
add
jne
or
cmc
mov
push
mov
and
out
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rolb
aaa
std
insl
out
pop
or
or
dec
ss
outsl
pop
leave
inc
lods
movsb
or
repnz
mov
loope
pop
and
imul
cmpsl
lret
pop
in
cmp
inc
clc
jmp
mov
pop
lock
jmp
hlt
dec
mov
aas
fcomps
xlat
inc
aas
mov
jg
mov
jg
out
or
addr16
sbb
cld
daa
jp
std
adc
clc
in
loopne
cltd
or
mov
ret
nop
cmp
das
incb
add
icebp
scas
lock
pop
pop
div
cld
idivl
fs
pop
add
loope
jae
jmp
shrl
je
jge
sti
pop
lds
jg
stc
add
out
das
xchg
or
fndisi(8087
fisttps
sti
mov
or
ret
cmp
ja
push
leave
outsl
das
jge
aaa
fwait
pop
add
cmpsb
cmp
call
cli
or
data16
decb
adc
mov
and
loope
adc
call
sbb
loopne
popf
dec
or
sar
sbb
cmp
int
add
xor
push
jno
pop
aaa
std
fisttps
mov
sbb
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
out
enter
adc
mov
in
push
jg
sub
mov
pop
clc
loope
loope
mov
lahf
sbb
pop
add
jae
xlat
rorl
je
xchg
fldenv
iret
fcoml
xchg
lcall
decb
cmp
mov
ds
sarl
pop
out
jg
jno
ret
rcll
nop
cmp
call
lock
push
dec
jge
pop
clc
xchg
jmp
aam
sbb
mov
jne
in
sbb
xchg
imul
scas
mov
jmp
std
loopne
add
mov
daa
jmp
faddl
mov
push
adc
outsl
dec
push
pop
add
pop
stc
push
dec
out
fstpt
pop
mov
enter
shrl
inc
dec
cld
add
add
push
sti
pop
inc
enter
add
or
mov
mov
test
and
incl
add
cltd
cwtl
inc
insb
push
lcall
shlb
add
aad
cmpsb
inc
sbb
inc
pop
xor
xlat
or
mov
push
cmpsl
push
fidivl
mov
xchg
or
sar
jle
repnz
mov
adc
pop
mov
enter
push
jle
xchg
daa
and
incl
sbb
sub
sbb
adc
les
pandn
cmp
lcall
leave
lods
cld
and
xor
out
outsl
push
ljmp
bound
xchg
fdiv
dec
orb
fucomi
push
xlat
pushf
mov
fsubrs
jge
cmp
bound
mov
xchg
aam
sbb
lock
cmp
stc
mov
or
push
ljmp
mov
repz
stos
push
pusha
mov
jno
jecxz
sub
jmp
cmp
in
call
fdivl
nop
stc
shrl
ret
sub
sub
out
icebp
data16
rcl
ljmp
lcall
pop
repz
iret
popa
inc
out
into
arpl
mulb
je
aad
test
pushl
adc
outsl
clc
push
mov
xor
incl
mov
decl
pushf
adc
sub
adc
sub
adc
sbb
sti
movsb
push
add
inc
sub
mov
fmull
shl
fimuls
dec
or
mov
jo
pushf
push
insl
js
dec
incl
iret
jo
insl
mov
mov
lahf
shll
aaa
mov
mov
pushl
pop
xchg
jl
lock
hlt
pop
test
dec
ds
xchg
gs
aad
pop
pop
call
insl
cld
lret
sub
adc
inc
pusha
ret
push
mov
hlt
stos
xor
dec
add
lock
xchg
cmp
movsl
push
xchg
mov
pop
inc
sbb
cmp
test
sub
pop
jns
insb
cwtl
mov
push
std
loopne
daa
xchg
jle
add
xchg
push
enter
pushl
adc
inc
push
ret
push
ret
cmp
pop
or
ljmp
push
loopne
dec
mov
cmpsl
cmp
arpl
into
subb
inc
outsb
in
mov
icebp
cmp
sarb
fidivrs
outsb
push
cmp
pop
clc
cmp
cmp
jne
daa
dec
mov
mov
ret
cmp
sub
pop
movsb
ljmp
jmp
mov
push
xchg
insl
push
jae
mov
fmulp
mov
jo
sub
xchg
mov
mov
incl
call
sbb
and
dec
jl
sbb
in
xor
and
pushf
mov
lcall
popf
pop
andl
and
xchg
or
mov
add
sbb
call
push
pop
cmp
lods
xchg
loope
imul
negl
xchg
xchg
xor
pop
aaa
mul
jg
pushl
fwait
and
adc
negb
cltd
mov
pop
ss
lcall
and
sub
jne
push
addl
mov
xchg
in
pop
push
inc
idivb
jge
iret
dec
lret
sbb
aad
repz
call
and
in
jae
jle
arpl
mov
lcall
mov
icebp
dec
inc
pop
aam
mov
int3
xor
xchg
ucomiss
int3
adc
mov
dec
cld
push
pop
jb
into
div
je
out
sbb
loopne
and
sbb
fninit
inc
pop
xchg
push
cmp
add
sahf
push
sbb
lret
dec
ss
das
jmp
rcl
jbe
lea
jmp
cwtl
inc
lret
adc
adc
add
dec
or
mov
decl
push
aam
pop
jmp
loope
mov
rclb
dec
nop
and
mov
fbstp
cld
call
mov
cmpsb
xchg
dec
cli
loope
movsb
into
or
sbb
fcmovu
jp
pushl
pop
mov
lret
dec
stc
pop
add
das
fistpl
push
lahf
mov
incl
jnp
mov
mov
dec
xchg
testl
fs
pop
jg
jmp
lcall
inc
and
mov
xor
pop
or
inc
or
mov
jmp
pop
jl
mov
xor
aam
xchg
fxch
lret
jmp
mov
add
dec
jno,pn
adc
mov
inc
sbb
les
movsl
or
decl
mov
cmp
ljmp
loop
or
enter
mov
sahf
jae
cs
cmp
jge
rcrl
aas
outsl
adc
ljmp
pushf
dec
outsb
xchg
adc
clc
push
lret
xchg
call
dec
clc
js
jno
popf
push
pop
add
push
jge
and
sahf
mulb
cwtl
cmp
lcall
call
mov
stos
inc
lea
cmp
int
addr16
cld
xor
jmp
das
rcrb
jmp
bound
shrl
lds
pop
out
jo
repnz
mov
incl
inc
insl
imul
pop
cmp
xchg
scas
mov
and
and
jmp
pop
pop
or
add
mov
jb
push
out
sub
add
icebp
inc
pop
cmp
xchg
data16
cld
push
rcrb
and
mov
sbb
ret
jg
rolb
pop
cwtl
and
xchg
pop
cmpl
addr16
test
adc
mov
push
cmp
cltd
lcall
test
add
int3
add
push
js
cmp
int
lods
dec
mov
movlps
pop
mov
sub
test
mov
cmp
gs
xlat
loopne
decl
jne
rclb
popf
call
sbb
or
inc
and
dec
call
push
mov
loop
cwtl
dec
out
mov
pop
test
imul
decl
pop
add
jns
inc
add
js
mov
std
idiv
jmp
push
in
sbb
aaa
jne
mov
fldl
ljmp
xchg
jmp
int3
lods
xor
sub
outsb
sub
insb
pop
mov
push
sub
cli
mov
ljmp
mov
ffreep
fldt
or
xor
mov
lret
ret
xchg
sbb
mov
push
scas
mov
js
mov
xchg
push
insl
add
sub
push
jne
mov
add
and
jmp
mov
out
fwait
je
inc
push
pop
fwait
jmp
inc
xor
adc
xchg
mov
das
and
xor
dec
or
xor
nop
xor
sahf
adc
jbe
or
jl
lret
push
test
mov
cmpsl
lahf
cmpsb
lods
push
push
mov
inc
bound
pushf
xor
inc
es
adc
imul
mov
or
fmuls
stc
xor
pop
push
dec
aam
mov
outsl
cli
push
mov
ja
cwtl
xchg
cmpsl
add
adcl
lods
push
fwait
dec
js
jmp
enter
jno
cld
xchg
out
adc
lcall
lret
sti
xor
lcall
add
sbb
outsl
icebp
test
pop
add
icebp
ja
lcall
ret
cltd
sub
sbb
fcmovne
adc
into
xchg
sti
lock
jmp
popf
cli
jns
xchg
lret
gs
popa
lcall
rep
xchg
fxtract
scas
cmpsb
aam
lcall
sub
push
pop
or
pop
xchg
dec
mov
xor
pop
sub
jecxz
jg
sti
daa
mov
inc
push
test
les
outsb
and
mov
jne
popf
jp
mov
or
mov
cmpsb
sbb
mov
leave
mov
mov
adc
mov
test
mov
test
scas
push
and
fnstenv
es
cld
mov
mov
push
pop
mov
test
push
pop
lea
inc
push
cmovs
dec
or
nop
bnd
mov
shlb
mov
std
push
push
pusha
mov
sbb
xorl
pushl
test
lods
xchg
cmp
outsb
orb
mov
and
jno
incl
inc
jns
sbb
mov
sahf
dec
ret
dec
outsl
repnz
sbb
jmp
push
mov
imul
jg
ja
loop
cmc
mov
push
lock
jae
or
insl
insb
xchg
nop
or
fldt
decl
xor
mov
sbb
cld
std
scas
fdivr
lahf
das
lcall
pushl
scas
dec
mov
je
jnp
cmpsb
das
in
sbb
lcall
popf
sarl
mov
cmpsl
movsl
adc
xlat
aad
and
push
mov
mov
fisttpl
cmp
xlat
aas
dec
jmp
sub
or
or
and
jne
in
jb
sub
jl
cld
lcall
xchg
push
sbb
mov
mov
adc
les
lcall
mov
daa
subb
push
push
mov
push
mov
fimuls
ds
aas
lcall
jmp
adc
inc
mov
jl
cmpsb
push
daa
mov
dec
or
lcall
fbld
pop
lcall
pop
fsubp
xchg
mov
je
jmp
adc
sbb
pop
mov
std
mov
push
jle
xchg
mov
cmp
shll
and
je
decl
jne
rorb
adc
and
cmp
push
jecxz
xchg
insl
movsl
sub
xor
test
shll
shlb
fnstcw
repnz
and
cmpsb
mov
push
mov
sub
lcall
push
cmc
arpl
sbb
pop
pop
fdivl
ror
push
repnz
xlat
mov
cmp
scas
fcomip
pushl
les
sbb
fildl
add
pop
lds
ljmp
mov
loopew
inc
mov
and
in
in
sbb
movsl
lcall
lcall
xchg
dec
inc
out
shl
fidivs
cmc
sti
mov
lret
xor
aaa
jno
mov
adc
ljmp
ljmp
adc
test
lcall
xchg
xchg
cwtl
mov
push
and
inc
jne
negb
clc
mov
incl
xchg
std
repz
into
mov
in
pop
rorb
dec
decl
pusha
sbb
jecxz
test
call
incl
cld
xor
cmp
and
rolb
jge
roll
call
int
add
push
xchg
movsb
push
xor
scas
inc
ret
call
mov
xchg
fisttpl
fimull
dec
xor
frstor
scas
cmp
pop
cs
movsl
xchg
cli
inc
incl
cwtl
stos
sub
mov
xor
data16
imul
push
lret
lods
ss
out
ja
mov
cmc
sub
and
dec
insl
dec
mov
adc
repnz
xor
adcl
inc
bound
out
mov
test
cmpsb
pop
jecxz
in
inc
mov
jae
lcall
cmc
jg
sbbb
fdivrl
cmp
xor
fisttps
test
xchg
decl
pushl
push
int
fs
cmpb
dec
out
xchg
cmp
sub
jae
and
out
or
icebp
push
push
cmp
dec
lea
ret
int
xchg
mov
movsl
sbb
mov
push
lcall
jbe
in
repnz
push
jns
andb
sbb
enter
and
mov
lcall
push
jno
cmp
pop
leave
and
icebp
arpl
mov
mov
sbb
cld
arpl
jl
les
mov
jmp
leave
jae
ds
insb
mov
es
add
movsl
jge
pushf
push
xor
lret
sub
pop
loopne
pop
add
pusha
and
jle
test
jg
lods
jmp
cli
jb
mov
adc
push
and
xchg
enter
jp
push
movsl
adc
scas
xor
push
ficompl
cmpb
add
lcall
jo
inc
dec
xchg
inc
pop
sti
xor
enter
dec
leave
add
jg
mov
aam
aad
ficoml
adc
xor
or
xchg
bound
imul
or
jg
incl
imul
xchg
jb
push
loopne
in
mov
ljmp
xchg
clc
in
jge
inc
mov
rorl
push
or
daa
and
aas
push
push
popa
loop,pt
xchg
addr16
dec
aas
mov
loope
add
mov
sbb
mov
rep
fnsave
add
mov
adc
push
mov
inc
data16
clc
insl
jae
mov
std
movsl
call
roll
leave
mov
cmp
out
xchg
xlat
mov
decl
loope
stos
les
sbb
fs
les
pop
cltd
iret
idivl
and
inc
decl
mov
addr16
pop
mov
pop
mov
sbb
outsl
adc
mov
decl
outsl
inc
dec
mov
sbb
push
cmpsb
fldenv
add
aad
leave
fsts
fnstsw
jmp
sub
hlt
je
call
std
out
aas
mov
out
out
sbb
pcmpgtb
roll
dec
rcll
outsb
pop
call
sbb
in
pop
push
mov
ljmp
xchg
outsb
fs
icebp
shrl
and
push
mov
jg
cmc
js
cwtl
das
adc
insb
or
outsb
ret
mov
mov
xchg
jmp
adc
cltd
test
ja
pop
and
push
xchg
sbb
push
pop
int
dec
pop
iret
nop
and
incl
movsl
lods
xchg
mov
movsb
cmpsb
sub
cmc
xchg
decl
bound
lods
mov
mov
sbb
jg
dec
into
inc
es
mov
pop
jae
arpl
or
cmp
das
fisttps
inc
jmp
and
dec
jo
push
out
call
sub
mov
mov
push
adc
push
js
xlat
push
mov
xlat
jg
pop
in
test
adc
pop
pushf
in
cmpsb
xchg
rcrb
push
add
pushl
std
jmp
out
xlat
cmp
jg
and
sbb
popa
in
xchg
push
cs
adc
jge
mov
out
xor
lcall
sahf
jae
outsl
mov
push
push
imul
sub
add
or
xchg
push
pop
jne
xor
cmc
mov
icebp
jmp
pop
dec
mov
and
jns
cmpsb
adc
and
push
inc
push
es
cltd
decl
mov
outsl
pop
jae
jle
out
xchg
rcrb
mov
and
cltd
mov
adc
lcall
dec
pop
faddl
xchg
testb
loopne
scas
dec
clc
mov
inc
andb
call
pop
mov
mov
xchg
push
inc
movsl
or
inc
lea
ljmp
pop
iret
lds
inc
pop
lret
ss
notl
repz
push
cmpsl
push
inc
sti
add
incl
mov
jo
cmc
and
insb
idivl
fisttps
into
pop
jge
out
and
testl
ror
rorb
rol
incl
scas
mov
sub
sub
ficoms
cmp
and
cmpsl
test
xor
dec
rcrl
imul
mov
je
pop
push
outsl
fsubp
mov
push
dec
xchg
pop
mov
xchg
push
mov
add
cmp
sbb
lcall
jae
mov
mov
jecxz
inc
push
gs
mov
pop
icebp
mov
decl
fisubrs
nop
jns
jnp
mov
ret
cmp
iret
push
test
pop
jle
ss
add
jg
or
cs
pop
subl
sbb
jecxz
and
ja
mov
rolb
pop
sahf
xchg
sbb
cmp
pop
xchg
ja
ror
sub
int3
aaa
ret
mov
stos
sbb
xchg
mov
incl
xchg
adc
jl
pop
pushf
test
jbe
arpl
icebp
divl
call
cli
mov
adc
das
and
repnz
dec
xchg
roll
int
in
xor
ret
out
xchg
aad
in
sbb
test
jmp
incl
xchg
xchg
or
ret
xlat
and
aaa
jb
lock
in
nop
cmp
rcll
rcr
clc
adc
jg
xchg
dec
fdivs
dec
pop
pop
cmp
bnd
aad
mov
es
adc
dec
pop
in
imul
repnz
mov
xchg
cmp
enter
jae
in
jp
cmp
lcall
add
mov
testl
fadd
pop
rcll
mov
jne
test
gs
loop
jo
scas
aad
lds
inc
and
movsb
inc
sbb
inc
fwait
push
adc
sub
jno
jl
cmpsl
xor
or
pusha
pop
mov
fisubrl
ljmp
mov
jmp
sbb
jns
pusha
test
xor
xor
dec
lds
sub
mov
xchg
jl
jmp
in
pop
in
dec
js
loop
xor
rcll
pop
out
dec
aas
xchg
sbb
push
pop
mov
idiv
decl
push
jecxz
ja
mov
dec
roll
xchg
leavew
inc
mov
inc
out
or
aam
call
pop
scas
pusha
lods
repnz
mov
loop
jmp
cltd
mov
mov
je
dec
mov
ljmp
ret
subb
jns
mov
mov
pushf
fwait
xchg
clc
inc
insl
sub
jg
jns
outsb
out
js
xchg
jmp
xchg
or
rcl
push
mov
repz
push
jbe
lcall
xor
add
lds
imul
dec
mov
jmp
cmp
xchg
cs
xchg
add
xchg
sub
out
mov
cmpsb
iret
mov
mov
or
pop
nop
clc
dec
jno
xorb
or
sti
and
lcall
xchg
aaa
in
push
cmp
aad
push
je
iret
or
sub
mov
ljmp
leave
inc
xor
push
cmp
push
icebp
cmp
sub
movsl
rcl
cmp
jl
decl
adc
sub
in
xchg
lods
or
xchg
pop
jmp
lcall
leave
clc
or
inc
jnp
ret
push
and
scas
ds
sarl
mov
inc
inc
sbb
roll
dec
pop
jg
lea
std
push
ja
stos
data16
jmp
mov
cmp
int
inc
fwait
mov
andl
mov
adc
jle
cli
and
out
jg
fcmovnu
flds
push
mov
pop
xchg
jae
test
call
cmpsl
test
cli
decl
dec
inc
movsl
test
shll
pause
pop
cmp
lahf
movsl
fcompl
decl
xor
push
push
and
inc
scas
out
test
sbb
scas
cmp
mov
in
sahf
or
push
popa
mov
js
shr
dec
jnp
fcoms
push
jle
fwait
cmc
clc
jmp
cli
fdivr
xchg
hlt
cs
mov
insl
pop
xchg
push
addr16
aas
lret
dec
shrl
out
ljmp
lret
pop
jecxz
daa
test
rcrb
mov
push
mov
fsubs
dec
xchg
ljmp
adc
loope
dec
xor
sbb
fdivrl
sub
mov
mov
out
stc
pushf
jl
push
fildl
sbb
dec
cs
mov
mov
outsb
rcrl
scas
clc
outsb
and
adc
lods
repz
cmc
mov
xchg
fs
mov
jl
push
push
cmp
mov
mov
out
dec
and
fldenv
sub
push
and
add
insb
mov
inc
mov
dec
sarb
jl
test
popf
xor
inc
gs
push
inc
mov
sub
aam
adc
das
push
and
dec
adc
mov
call
js
movsl
hlt
nop
nop
adc
cwtl
in
and
incl
cli
out
push
or
or
pop
mov
sbb
cld
dec
daa
mov
cmp
lea
and
pop
and
cmp
inc
incl
mov
test
cmp
mov
mov
push
push
mov
das
or
sbb
stc
mov
fcoml
jp
pop
mov
ret
call
fsubrl
xor
push
mov
adc
jo
or
gs
in
sarl
fidivl
cmp
clc
cmp
jne
adc
pop
and
decl
dec
pusha
sbb
adc
or
xor
aaa
mov
cltd
cs
jp
adc
mov
pushf
addb
cli
cmp
jge
enter
push
jne
mov
mov
jae
cmp
sarb
sahf
push
mov
mov
int
and
pop
add
decl
or
inc
mov
inc
add
cmp
mov
mov
mov
call
sti
scas
inc
gs
fmull
pop
data16
adc
xchg
cmp
sahf
ret
mov
lcall
mov
popa
fs
gs
mov
loopne
sbb
fistl
adc
mov
lcall
rcll
lods
shl
out
adc
filds
icebp
je
mov
call
lods
out
mov
insl
sbb
arpl
test
jp
push
xor
decl
adc
sub
push
cmp
push
cmp
xchg
push
mov
or
in
insl
xchg
int3
sub
test
sahf
mov
clc
insb
fdivrs
out
adc
cmp
outsl
popa
dec
fs
imul
push
adc
jmp
loopne
bound
cmpsb
clc
into
inc
mov
inc
xor
ret
cmc
add
bnd
arpl
jmp
ljmp
fnstenv
mov
add
xchg
ret
std
into
mov
fdivs
sahf
xchg
mov
addr16
movsl
fldenv
mov
aas
mov
sub
mov
cmpsl
rclb
xor
mov
dec
je
xchg
roll
lock
mov
and
decl
lock
in
xor
scas
or
sub
scas
scas
testb
cmpb
aad
in
or
adc
push
fcomps
repnz
addr16
mov
sub
out
test
mov
in
inc
and
ror
sahf
xchg
mov
sahf
sub
or
push
xor
decl
mov
inc
add
sub
jo
jbe
pop
inc
jae
and
in
mov
iret
and
fnsave
aad
sti
clc
mov
cs
lret
lret
sbb
call
mov
fstpt
xor
out
pop
and
adc
lcall
sbb
sarb
out
fprem
sub
fisubrs
decl
rolw
xchg
addl
int
xchg
jae
xlat
adc
incl
or
pop
mov
push
popa
cwtl
mov
and
lret
jg
pop
and
cmp
jnp
inc
filds
jl
and
das
fistl
lret
mov
filds
stc
repz
pop
mov
shlb
jp
sbb
inc
fucom
lahf
and
xlat
mov
sub
inc
mov
pop
call
dec
movl
pop
fnstsw
out
ljmp
outsl
xor
ja
mov
mov
fwait
xchg
pushf
inc
jp
mov
in
addr16
pop
imul
mov
loop
in
mov
dec
lds
push
fwait
jecxz
nop
into
xor
pop
into
ljmp
fwait
cmpsb
pop
ds
lahf
mov
mov
cmp
mov
and
mov
push
cmp
jb
or
pushl
shr
out
inc
cmp
movsb
mov
inc
iret
adc
push
lock
sbb
decl
sbb
pop
add
es
pop
stos
fs
inc
ret
and
js
mov
pop
cmp
sub
cmpsb
inc
into
cld
ljmp
jg
and
sahf
sbb
decl
arpl
push
ss
dec
shlb
ljmp
xor
jl
adc
mov
dec
ja
pop
in
lahf
popa
leave
add
fcmovu
jmp
gs
mov
pop
push
dec
cs
dec
aas
dec
sahf
mov
push
xchg
rol
adc
cmp
lcall
daa
and
mov
fidivl
jmp
push
push
arpl
push
ljmp
imul
and
sbb
mov
arpl
aam
clc
loope
jmp
dec
outsb
sub
dec
and
repz
repz
xchg
loopne
sub
sbb
cmp
outsb
pop
data16
sub
mov
or
ja
orb
jle
clc
add
fisttps
push
sbb
fisttpl
fs
mull
test
sub
jmp
call
lods
nop
jb
sbbb
inc
fcoms
or
ljmp
ret
in
in
sbbl
aaa
movsb
sbb
sub
popa
in
inc
loopne
lods
sbb
arpl
les
movlps
adc
or
mov
mov
push
jp
xchg
sub
cmp
in
fcomip
cmp
ljmp
mov
scas
jp
xchg
sub
push
jbe
pushl
cwtl
dec
fistpll
push
in
movsl
daa
or
sub
daa
xor
pop
out
int3
sar
stc
lea
pop
sbb
popa
insl
sbb
xchg
addr16
in
push
push
and
loopne
xchg
pop
fucomi
xlat
cld
mov
adc
inc
lods
out
mov
cwtl
or
jl
enter
inc
jg
mulb
lret
mov
mov
pop
dec
adc
mov
jl
or
popf
mov
lods
cmp
clc
mov
lret
cwtl
sub
shl
mov
xchg
inc
adc
pushl
jns
cwtl
cs
daa
xchg
cmpsb
mov
xor
dec
mov
pop
loope,pn
cmp
or
inc
in
int3
scas
or
xor
lock
push
jecxz
lock
bound
mov
lcall
ljmp
cmp
das
gs
sub
cld
cmp
mov
cmpsl
dec
xchg
mov
adc
jne
jmp
xor
pop
sub
and
movsl
pop
cltd
insl
xchg
and
add
jnp
repz
xchg
pushl
or
mov
ss
dec
jmp
js
push
rorl
sbb
nop
cmp
enter
lcall
lret
ret
jge
mov
xchg
add
jbe
inc
out
enter
add
mov
jmp
mulb
dec
push
pushf
or
xlat
daa
ret
push
test
punpckldq
fcmovnb
inc
xorb
lcall
sahf
fidivrl
out
out
into
fs
aad
dec
das
fstpl
ret
fists
adc
mov
out
sti
mov
push
or
loopne
decl
jg
mov
aam
int
push
aam
xchg
jo
movsl
pop
lret
ljmp
push
jmp
dec
ret
out
adc
xchg
xor
and
or
jb
mov
sbb
push
xchg
mov
dec
mov
pop
dec
into
stos
or
incl
and
clc
or
pop
clc
xchg
mulb
jecxz
adc
mov
jmp
push
dec
mov
stos
ret
icebp
mov
es
in
jb
jne
jp
loop
pop
sbb
mov
inc
outsl
vmread
in
pop
aaa
or
sub
stos
adc
lcall
sbb
call
sti
scas
scas
mov
cltd
sub
inc
test
dec
out
jg
or
mov
push
out
icebp
mov
cli
andb
sub
lods
xlat
mov
loopne
push
loop
sbb
decl
jmp
sbb
dec
out
push
jg
loopne
fsubp
lcall
mov
shll
push
adc
cmp
je
movsl
xor
add
pop
push
aad
dec
add
jmp
mov
addb
out
test
lcall
ret
cmpsl
cwtl
pushf
dec
add
fwait
or
sub
mov
sbb
jno
cmp
mov
xor
mov
dec
cld
jmp
cmc
jecxz
jmp
ja
adc
mov
inc
nop
xor
or
pop
cmpsb
push
pop
xchg
mov
mov
jle
aas
and
adc
pushf
insl
shlb
cmp
sub
jae
cmp
cmp
sub
inc
stos
leave
xchg
mov
push
xchg
adc
ljmp
jge
mov
mov
adc
sub
cld
pop
subb
fistps
jo
mov
decl
lret
leave
out
jmp
into
push
xchg
mov
adc
arpl
mov
mov
jbe
dec
lea
shl
stc
mov
sahf
mov
ljmp
jnp
sar
pushl
xor
jmp
add
in
out
nop
popa
mov
xchg
mov
jmp
adc
xor
dec
cmp
fisttps
aam
fsubs
and
adc
mov
incl
sahf
and
dec
or
test
aaa
push
or
insl
dec
bound
adc
call
dec
mov
les
push
inc
inc
lea
add
loop
or
testb
jge
aam
test
cltd
adc
jns
aam
mov
js
dec
pop
mov
dec
or
or
inc
cmp
lods
xor
xor
xor
mov
jno
outsb
ja
mov
mov
loopne
decl
loop
adc
push
scas
adc
sub
mov
xor
adc
aas
mov
lret
adc
std
decl
or
cld
and
movsb
and
jg
jno
bound
mov
mov
scas
test
add
mov
mov
incl
jp
sub
into
lea
mov
flds
lcall
cmpsb
dec
mov
sbb
sahf
mov
xchg
in
push
inc
or
sub
xchg
outsb
mov
mov
iret
out
rorl
mov
ret
out
std
roll
arpl
fbstp
addr16
fucomp
cmpsb
int3
mov
xchg
lods
mov
xor
in
repz
add
dec
pop
and
cmpl
lcall
ret
pop
sbb
pop
outsb
add
cmp
or
jbe
jmp
xchg
call
out
call
xchg
add
jnp
andb
dec
pop
sub
jmp
jmp
lcall
dec
scas
sub
test
mov
js
jmp
test
ja
lock
mov
nop
pop
dec
fs
push
sti
imul
mov
sub
sbb
jle
dec
loop
into
xchg
das
and
pop
cs
incl
in
xor
jge
and
out
adc
add
shll
popf
xlat
sub
jo
mov
lcall
outsb
dec
mov
sahf
data16
aam
cmp
add
lcall
fisttpl
push
push
mov
sbb
adc
pop
xor
scas
lret
xor
insb
and
out
fdivl
imul
push
or
and
fcoml
mov
movsb
push
pop
incl
cld
jnp
adc
push
xchg
sar
test
movsl
mov
movsl
push
int3
shlb
mov
lds
fistpl
aad
in
call
xor
mov
mov
push
adc
xchg
mov
clc
adc
adc
mov
rol
movsl
cmp
ror
sbb
in
js
mov
stos
push
lcall
ret
sahf
in
push
cmpsl
shll
pushl
in
push
stos
lock
add
add
addr16
pop
dec
cmp
xor
pushl
jmp
xchg
sub
pop
add
shrl
sub
cmpsl
dec
rolb
aam
cld
pop
jl
sub
push
cmp
jbe
pop
push
mov
imul
cmp
push
mov
dec
sbb
fildll
push
ja
pop
nop
push
lcall
jmp
sti
neg
mov
jnp
mov
xchg
cmp
js
push
mov
icebp
and
inc
sti
divl
cmp
ret
scas
push
mov
insl
or
psubq
adc
pop
icebp
ljmp
fistps
loope
xchg
xchg
dec
cli
aam
hlt
push
test
mov
mov
mov
nop
lock
ficoml
jecxz
sbb
iret
int
inc
fxch
lret
sarl
push
or
pop
into
add
addb
and
pop
arpl
pop
mov
test
jg
pop
jmp
adc
aas
adc
outsb
mov
das
and
xor
incl
push
jecxz
sahf
sub
push
int
pop
inc
mov
sub
ljmp
sbb
stos
sbb
decl
loope
jbe
add
adc
int
dec
and
inc
xor
mov
lcall
add
fmulp
loopne
xchg
or
rclb
sbb
out
hlt
faddl
mov
add
fnsave
les
loopne
cld
jb
adc
in
mov
pop
pushl
cmc
add
push
inc
mov
adc
aam
xchg
cmp
adcb
lods
cmp
mov
std
orl
cmp
out
cmp
inc
sarb
iret
or
clc
iret
sarb
fisttps
push
push
pop
inc
jmp
pop
pushf
ret
xor
lock
jmp
sbb
stos
sub
cmpsb
or
pop
sar
decl
notb
mov
xchg
pop
or
into
daa
jnp
cld
in
mov
call
push
adcl
cli
cltd
push
aam
xor
repz
cmp
in
imul
mov
decl
fcomip
mov
shlb
push
stos
sub
or
cwtl
iret
push
inc
push
dec
popa
push
stos
mov
out
cli
imul
stos
je
or
or
repz
out
and
fcomip
ja
jle
add
cmp
push
mov
xor
push
cld
cmp
inc
xchg
sub
ljmp
push
jg
push
mov
add
lcall
dec
pop
cmc
push
test
lret
clc
mov
fisubs
icebp
sub
jecxz
adc
decl
loope
xchg
xchg
test
lods
or
cmp
mov
decl
pop
out
lock
mov
stos
mov
pop
lret
xor
sub
orl
xor
push
in
pop
jo
jns
fmull
add
jno
cs
mov
mov
pop
sbb
out
call
mov
jbe
mov
pop
ljmp
cmp
mov
inc
aas
xor
cs
mov
lods
decl
cmp
mov
xchg
push
xchg
dec
cmp
pop
insl
fs
cmp
add
fiadds
lock
mov
pop
jbe
cmpsl
add
jbe
int3
inc
dec
test
ljmp
mov
xor
mov
mov
add
insl
movsl
mov
push
std
clc
daa
mov
jp
xchg
sub
mov
mov
sbb
and
mov
loop
insl
push
stos
cli
push
in
mov
in
fs
adc
mov
sub
xchg
xor
icebp
mov
adc
jl
aad
xor
std
and
jl
pushl
sbb
ficoml
ret
jne
bound
xchg
call
inc
int
jbe
outsl
imul
sarb
in
dec
js
mov
push
pop
xchg
fcomps
dec
out
and
sub
les
or
or
ljmp
decl
and
cmp
loope
xchg
outsb
fistps
cmc
insl
sbb
xchg
es
fldenv
into
idiv
mov
test
xor
mov
xchg
test
int3
xor
sti
cmp
mov
bound
xchg
lcall
pop
adc
mov
adc
leave
mov
inc
jne
xchg
add
je
mov
jmp
stc
xor
bound
sbb
and
cmp
dec
cmpsl
lret
xchg
xchg
sbb
sbb
je
clc
incl
xchg
sbb
pop
ret
sbb
cmp
sub
adc
adc
jmp
incl
loopne
pushf
dec
mov
outsb
insl
and
and
ljmp
rorb
and
lea
and
pop
insb
add
jg
incl
das
mov
pop
cmpsb
bound
es
jg
pslld
or
sbb
das
call
pop
and
dec
pop
and
nop
cltd
jmp
push
jb
jmp
cmpsl
pushf
jg
inc
jle
push
mov
fisttps
jg
sbb
mov
dec
rclb
xor
stos
pop
out
jnp
pop
outsl
loopne
jno
decl
or
sar
pop
fnstcw
iret
aas
ja
mov
sbb
cmpsl
mov
jge
out
in
icebp
nop
jne
mov
sahf
push
push
xchg
aas
lret
pop
outsb
ficomps
dec
mov
push
insb
mov
je
lret
jmp
fimuls
fxch
jno
pop
sbb
cmp
addb
jecxz
sub
xchg
rcll
jl
jg
roll
int
insb
int3
movsl
outsb
cmp
cltd
lods
mov
pushf
call
cli
sub
lods
mov
sahf
cmp
lret
jae
popa
inc
inc
stos
hlt
and
call
xor
std
outsl
lret
in
test
ret
or
lea
mov
insl
out
sub
fisttpl
movsb
cmp
nop
jg
mov
test
xor
lcall
xchg
lods
mov
cwtl
sbb
mov
stos
aad
ja
pushl
call
popl
loop
inc
sti
and
data16
call
data16
xor
in
jnp
mov
mov
fistpl
xchg
popa
mov
movsl
fsubl
imul
cmp
call
cmp
mov
cmp
jmp
push
nop
in
test
call
imul
test
pop
addr16
jp
adc
pop
push
fs
popf
js
mov
jle
mov
gs
scas
pusha
mov
ret
dec
adc
jb
or
aad
push
decl
push
and
ljmp
xlat
rcll
outsl
les
rcrb
ret
adc
fstps
pop
testb
and
gs
loope
sub
arpl
dec
mov
stos
fimuls
mov
push
daa
jb
shll
imul
lea
pop
adc
fbstp
or
pushf
test
dec
xorb
cs
jmp
jnp
mov
gs
ret
xchg
mulb
lret
mov
mov
call
lret
or
int
and
call
jg
out
divb
stc
xchg
xor
lcall
scas
scas
mov
mov
mov
sbb
scas
jo
jae
dec
shl
pop
lock
jg
push
insb
dec
sahf
mov
adcb
mov
test
aad
sbb
lret
adc
or
jns
pushf
dec
std
pop
and
cltd
popa
push
sbb
andb
inc
insl
cli
mov
and
dec
mov
jg
sub
mov
hlt
and
out
leave
cmp
popa
push
lcall
scas
sub
xchg
pop
daa
push
je
sub
jo
sbb
loopne
into
repz
jge
push
stc
cltd
push
jne
sub
push
push
cmpsl
imul
test
or
dec
sub
cld
cmc
in
dec
divl
cmp
daa
sbb
add
jecxz
add
xchg
imul
mov
sub
call
loopne
mov
shll
ret
pop
test
push
xor
mov
incl
inc
mov
dec
ret
pusha
dec
push
fbld
xchg
lcall
jbe
dec
imul
pop
nop
sub
hlt
inc
cmpsl
jo
nop
insl
xor
adcl
xor
decl
fdiv
push
xchg
movsl
xor
fldenv
inc
jae
icebp
or
ss
xchg
lcall
lahf
mov
xor
decl
leave
sub
xchg
adcb
or
nop
jno
mov
enter
es
mov
shll
movsl
mov
or
jg
xlat
ss
mov
outsl
pusha
fcomip
xchg
fiaddl
pop
cs
jp
mov
add
pusha
inc
out
cs
pushl
lods
aaa
subb
mov
mov
loopne
mov
xchg
insb
bound
jmp
ja
ss
add
js
adc
jb
gs
pop
gs
arpl
cmp
decl
in
xlat
or
mov
mov
mov
outsb
cmc
pusha
jns
in
jno
push
mov
add
push
mov
addr16
cwtl
clc
sub
incl
scas
frstor
lock
incl
leave
orl
iret
mov
in
mov
jmp
push
dec
inc
test
adc
push
dec
and
fcoml
scas
cmp
add
mov
or
sbb
cwtl
mov
or
lods
cltd
arpl
frstor
mov
mov
dec
js
movsl
fldcw
xchg
loopne
xor
xor
mov
hlt
xchg
js
leave
push
fsubl
in
push
cmpsb
addr16
inc
int
pushl
out
mov
mov
inc
mov
in
test
inc
jb
xor
push
or
incl
nop
sahf
xor
add
mov
sbbl
xor
mov
incl
fwait
in
inc
lahf
mov
ret
popa
les
enter
loop
xor
xor
sub
xchg
ljmp
sub
enter
cltd
int
xchg
mov
or
js
mov
and
shl
ljmp
popa
imulb
cmp
into
dec
shl
push
dec
jp
jmp
or
and
jb
lods
add
gs
hlt
sbb
jg
cmpsb
xchg
cmp
add
xor
add
push
cmpsb
cwtl
fimuls
fdivs
mov
lcall
jae
lea
push
addr16
jbe
es
icebp
rolb
sbb
and
push
ljmp
inc
adc
xlat
into
fistpl
mov
cmpsb
scas
leave
jmp
addr16
call
cld
sti
cvttps2pi
cmpsl
outsb
shlb
pop
ficoms
mov
in
cld
xchg
cltd
pop
in
decl
xor
push
pusha
rorb
jge
push
xchg
mov
xchg
pushl
bound
stc
aam
mov
in
out
in
xchg
push
out
push
out
dec
int
fadd
mov
mov
inc
popa
mov
fisubrs
jns
mov
push
pop
fldl
les
out
ficoms
js,pn
xchg
movsl
out
ja
jp
and
sti
inc
mov
es
xchg
mov
ja
call
mov
arpl
dec
mov
push
push
aas
push
movsl
lret
mov
inc
add
call
push
adc
pop
xor
mov
lret
jno
rorb
xor
sahf
pop
dec
dec
mov
jno
adc
push
push
adc
movsl
push
xchg
mov
add
les
lahf
arpl
push
aaa
inc
call
lock
aam
or
ja,pn
inc
push
lcall
mov
outsl
std
incl
jne
mov
outsl
sub
into
outsb
icebp
inc
popf
jb
mov
pop
mov
enter
mov
call
notb
sub
pushf
and
loop
sarl
jmp
jb
test
dec
xchg
pop
aas
cmpsb
ja
aad
pop
xchg
leave
loope
xchg
inc
push
jae
stos
xchg
lods
sub
divb
inc
sub
jle
jge
sub
cmp
loop
or
mov
decl
lock
clc
lods
cmpsb
add
hlt
lcall
mov
add
insl
lods
or
pop
and
mov
aaa
popa
xchg
cmp
add
sub
and
gs
lcall
xchg
into
jge
mov
shll
and
mov
xchg
in
jle
out
lahf
lcall
adcb
mov
ret
sub
and
movsl
std
push
push
inc
shl
incl
into
out
nop
push
test
xor
jno
inc
sti
and
cmp
cwtl
dec
adc
decl
stos
enter
shll
xchg
loop
sub
out
andl
sar
ljmp
mov
ds
mov
sub
push
and
repnz
xchg
or
jle
in
popa
adcl
cmp
cmp
adc
mov
or
out
jl
lret
push
adc
xchg
mov
inc
and
stos
jno
icebp
jmp
mov
xchg
sbb
add
mov
or
int3
adc
pop
shl
xchg
stos
mov
xchg
shl
xchg
or
call
andl
mov
les
shrl
jg
out
pop
xor
jg
into
adc
lods
ds
add
fucom
dec
fiadds
iret
pop
sub
pop
pushl
lret
fildll
test
loop
shlb
mov
pop
stc
ret
xchg
ret
daa
push
movsl
clc
jg
sbb
add
in
fisubl
sti
insl
jnp,pn
inc
jecxz
cwtl
ljmp
and
jg
cltd
scas
lret
mov
cmc
outsb
fucomp
or
sub
call
aad
sahf
call
ja
dec
icebp
aad
bound
jnp
push
lods
xchg
inc
ret
push
fs
xorb
pushl
out
mov
movsb
sbb
popa
jecxz
lds
push
mov
pop
mov
call
sbb
cmp
fists
xchg
dec
fsub
add
outsb
or
push
outsl
mov
incl
scas
sarl
flds
xchg
add
pop
fwait
ret
or
jg
in
cmp
scas
dec
inc
mov
rolb
addr16
sbb
inc
xchg
decl
lods
fnstcw
pop
test
movsb
pop
jno
or
shrl
xor
xchg
xchg
fucom
dec
jp
add
pushl
add
mov
incb
in
sub
mul
mov
stos
jg
adc
inc
cmp
mov
pop
pop
in
and
mov
pusha
pushl
mov
mov
xchg
adc
test
jl
jmp
or
loop
jb
and
call
push
icebp
int
ljmp
idivl
out
pushl
inc
xchg
xor
jp
add
adc
popa
insb
pop
leave
jl
mov
jmp
push
lods
mov
sub
pop
out
hlt
int3
add
in
sbbb
add
jg
pop
jmp
lret
loopne
fwait
sbb
into
mov
fsubrs
cld
call
fs
int
hlt
adc
mov
test
or
lcall
inc
mull
pop
out
ljmp
jmp
stos
sbb
inc
aas
outsb
stos
xchg
fistpll
sub
jne
push
loop
mov
mov
xchg
sub
test
enter
pop
stos
ljmp
outsb
pop
mov
aas
mov
arpl
mov
out
mov
gs
testl
lock
push
scas
mov
dec
mov
cmc
out
je
shr
sub
pop
shlb
incl
jae
push
xor
rcll
ja
add
mov
mov
xor
ret
mov
fbstp
xor
les
jl
mov
dec
loopne
inc
mov
ljmp
pop
pop
adc
jo
xor
xor
dec
aaa
inc
adc
movsb
mov
push
sbb
sub
dec
test
decl
mov
push
subb
pop
pushf
push
clc
cmp
jno
scas
push
jl
dec
in
xlat
lret
rorb
call
andb
shrl
mov
xor
sbb
pushl
arpl
frstor
mov
xor
dec
es
scas
scas
loop
loop
xchg
sti
incl
add
mov
aam
lock
fcompl
xchg
popf
shlb
call
shl
cmc
pop
mov
and
cmpsb
shrl
ds
xor
and
push
scas
jne
pop
and
icebp
jle
stos
add
mov
dec
and
fcomps
jo
cli
mov
incl
xchg
aaa
xchg
es
sbb
fcmovbe
inc
into
push
add
jae
inc
inc
call
subl
add
mov
stos
test
jp
xchg
or
dec
dec
loopne
jmp
dec
in
xchg
mov
insl
inc
pop
push
jnp
jmp
int
decl
mov
cli
lcall
adcb
mov
cmp
test
sub
push
pushf
loope
cmp
add
arpl
ljmp
orb
je
sarb
push
mov
lcall
fisubrs
inc
add
iret
popf
inc
stos
xchg
jne
int3
jecxz
sti
pop
js
popf
jo
stos
push
scas
cmc
call
fnstcw
push
mov
add
leave
cmpsb
out
inc
scas
jo
jns
mov
and
pushl
xor
lods
jmp
shl
mov
dec
inc
rorl
ljmp
jle
cmpsb
inc
dec
aas
jno
mov
or
bound
inc
je
or
ljmp
mov
mov
inc
fcomps
outsl
mov
repnz
lds
call
mov
jmp
movsl
ret
std
ljmp
aad
sti
test
push
lcall
add
fdivrl
push
decl
ljmp
jmp
pop
pop
push
es
pop
into
rorl
lcall
sub
sub
mov
ds
pop
pushf
inc
xor
add
int
pushf
out
mov
mov
mov
dec
lcall
test
push
loopne
mov
loopne
lcall
push
inc
mov
fmuls
fistps
adc
mov
dec
dec
pop
xchg
stos
push
push
inc
lods
daa
add
jp
and
or
lods
adc
lods
dec
std
dec
xlat
popa
pop
stos
push
aas
mov
daa
push
dec
icebp
sub
movsb
movb
aaa
pop
popa
mull
call
xchg
add
gs
jge
jae
fmul
mov
sub
hlt
jg
or
sub
out
or
lcall
mov
dec
das
sbb
test
fdivs
insl
out
out
sub
add
add
lock
adc
repnz
xor
adc
sbb
cmp
pop
sub
jb
jne
mov
cmp
sbb
gs
and
jp
std
push
std
insl
ds
aam
adc
add
mov
into
mov
fdivs
cld
call
inc
jns
loop
sti
shrl
mov
inc
lret
dec
stc
mov
sbb
jl
mov
iret
sub
in
in
jno
clc
rclb
mov
dec
imul
nop
or
jp
xchg
inc
in
test
cmp
push
xor
mov
xchg
dec
jp
cmp
cmp
and
fdivl
xchg
pop
negb
cli
mov
loopne
aad
xlat
sbb
aam
icebp
push
pop
and
mov
inc
jae
popa
push
cmc
pop
je
cwtl
in
adc
stc
cmp
gs
fstps
cmc
mov
ljmp
testl
dec
inc
inc
mov
mov
repnz
incl
aas
xchg
push
jl
ss
lea
adc
or
mov
and
adc
jecxz
stos
aaa
push
xchg
xchg
int3
inc
dec
mov
jb
cmp
mov
adc
ljmp
shll
add
push
out
pop
inc
mov
imulb
mov
adc
pop
sbb
jg
xchg
lcall
test
cltd
loope
sub
ret
dec
jge
jo
enter
pop
cltd
mul
mov
cwtl
pusha
out
mov
call
clc
fsubrp
mov
mul
insb
in
xchg
fstpt
jg
rcr
sub
jp
lcall
xor
clc
cmovs
daa
jmp
mov
inc
xor
and
cltd
ret
shll
insl
adc
mov
call
push
cwtl
jmp
stc
or
cmpsb
into
popf
xchg
adc
or
cmp
insl
leave
lcall
clc
stos
sti
adc
stos
ret
andl
sbb
mov
movsl
movsb
jbe
xchg
aad
insl
adc
dec
mov
jo
xchg
loopne
adc
or
and
ficompl
mov
rcrl
adc
rclb
mov
mov
cmp
call
pop
or
add
in
call
lods
jp
xchg
inc
adcb
xchg
jnp
xchg
push
inc
adc
jge
cmpsl
push
mov
xchg
aad
mov
stos
stc
cmpsl
mov
push
rclb
sbbb
push
xor
pushl
mov
clc
sbb
bound
pop
jge
xor
adc
test
inc
jle
ljmp
mov
or
push
clc
mov
xchg
push
fsubrl
lods
orl
or
pop
f2xm1
mov
ljmp
adc
mov
popf
out
incl
xchg
ds
jbe
or
das
xor
xor
int
test
test
call
movsb
fistps
imul
fildll
cs
dec
cwtl
inc
or
roll
pushl
mov
js
js
mov
dec
fdivrl
inc
jecxz
jle
sub
cmpsb
cmc
daa
clc
popa
dec
push
test
pushl
cwtl
mov
nop
pop
push
divb
cwtl
ret
jl
inc
mov
jmp
in
jl
jmp
mov
in
fsubs
inc
sti
out
jecxz
jp
dec
mov
xor
sub
fcoml
mov
aam
jbe
mov
in
push
test
or
decl
lret
test
add
fwait
sbb
ljmp
aaa
push
outsb
inc
test
repnz
add
ss
lcall
push
into
xchg
mov
mov
jl
test
add
xor
cmc
decl
or
lahf
sub
addl
xchg
mov
mov
dec
push
xchg
fwait
mov
imul
movsb
aam
cs
imul
decl
aas
sarl
mov
push
dec
mov
pop
push
fmuls
std
sbb
ljmp
lods
lret
outsl
pop
daa
shlb
xor
rcr
rorl
and
jg
cs
add
mov
lods
fstl
std
in
or
jmp
xchg
adcb
movsl
jbe
and
jo
into
fidivrs
xchg
shlb
lds
jmp
sti
popa
jb
mov
das
mov
stc
pop
sbb
scas
out
cmpsl
fwait
dec
mov
jmp
pushl
xchg
jg
cli
push
pusha
inc
or
test
cmc
lcall
sbb
mov
push
pop
mov
cwtl
fcomip
jmp
push
lds
notl
bound
clc
mov
add
adc
je
and
push
mov
pop
scas
push
lock
push
pop
adc
ljmp
dec
xchg
cmp
outsb
adc
xchg
sarb
mov
leave
mov
insl
adc
or
fmuls
jmp
dec
push
cltd
lods
sbb
jmp
pop
ret
jb
or
inc
jge
fistpl
in
fildll
pusha
scas
lret
sarl
std
mov
mov
mov
push
mov
lods
adc
cmp
in
lcall
sbb
inc
push
xchg
cmp
rcll
jb
mov
icebp
movsb
adc
sbb
iret
adc
mov
mov
xor
inc
jnp
add
jmp
mov
push
adc
and
pop
testb
mov
idiv
ljmp
jle
lcall
push
pop
cmp
xor
mov
pop
in
pop
push
adc
mov
lcall
xor
jg
in
add
sahf
mov
subb
mov
sub
mov
or
jg
and
or
jmp
mov
and
mov
divb
punpcklwd
sub
loop
sar
incl
ja
clc
mov
push
std
mov
pop
pop
inc
jl
pushl
bsf
jne
or
cmp
lahf
xchg
push
adc
cmp
sti
mov
dec
cs
movsb
test
mov
mov
xchg
mov
push
mov
mov
movsb
ljmp
mov
sbb
pop
push
jns
je
adc
pushl
ja
push
sbb
lds
pop
xlat
sub
cmp
pop
inc
cltd
orl
xor
incl
pop
lret
jecxz
cmp
je
and
xchg
gs
xchg
popa
ret
cmpsb
adc
movsb
repnz
sbb
fcompl
scas
cmpsb
add
dec
jg
xor
out
adc
out
repnz
xchg
mov
cmpsl
mov
pop
outsl
outsl
sbb
pop
in
push
mov
imul
push
mov
testl
mov
jecxz
inc
icebp
decl
stos
movsl
cmp
testl
mov
pop
js
ljmp
stc
pop
jmp
test
inc
fisubl
mov
mov
mov
mov
stc
idivb
fimuls
cmp
or
adc
push
and
jae
inc
shl
cmp
leave
loopne
dec
mov
adc
or
lcall
or
arpl
dec
mov
ds
mov
decl
test
popa
in
jp
data16
pushf
fisubs
adc
mov
cmpsb
int3
sbb
movsl
outsl
sub
loopne
inc
cli
push
pop
lret
push
cwtl
in
push
and
jg
out
loop
in
jl
pop
imul
pushf
addl
mov
cmp
mov
sar
dec
pusha
xchg
test
lds
out
cmpsb
adc
je
jae
cmpsl
push
mov
push
lock
mov
decl
jno
mov
push
fs
jmp
jge,pt
ds
fwait
mov
sahf
fdivs
fcmovnu
and
mov
rcl
ljmp
sub
jmp
mov
repnz
shlb
fmull
adc
ljmp
push
cli
call
adc
xor
js
dec
and
add
mov
cmp
pushl
pop
mov
insb
jb
jle
xchg
cmp
pop
sbb
pop
dec
inc
mov
push
fsubrs
xor
movsb
ljmp
test
repz
push
sub
test
mov
sub
in
ljmp
fsubrs
inc
cmp
xor
stc
insb
dec
mov
hlt
add
xchg
je
outsl
push
call
pushl
fisubl
and
or
out
adc
sub
push
jmp
mov
pop
xor
mov
push
push
push
mov
cmp
es
ja
scas
mov
ss
fadds
movb
jmp
movsl
push
mov
inc
adcb
popa
adc
call
mov
stos
aad
mov
movl
lcall
jne
push
inc
xchg
ret
clc
int
xchg
xor
mov
rcrl
fistps
push
mov
push
jle
mov
mov
mov
mov
mov
aad
popa
jg
sub
fldl
fbstp
arpl
xchg
xor
and
mov
cmpsb
push
pop
jnp
fimull
push
arpl
scas
ljmp
and
xor
sub
jo
icebp
xor
add
mov
hlt
adc
mov
xor
xchg
mov
pop
std
ss
lods
call
pop
cld
ss
ljmp
pop
xor
add
push
or
xchg
movsl
es
aam
call
decl
jns
xor
aad
xor
out
jo
scas
xor
mov
test
addb
ret
fiadds
sub
int3
insl
or
inc
clc
cltd
sub
xor
aaa
imulb
xlat
fwait
mov
lcall
pushl
dec
repnz
ret
mov
pop
pop
inc
add
and
sub
lcall
xchg
into
cmpsb
add
insl
incl
lcall
popa
daa
inc
cmp
pop
repz
incl
inc
test
in
test
jcxz
test
adc
mov
shl
jmp
int3
xchg
popf
gs
leave
jmp
xor
and
scas
pop
mov
or
jmp
dec
pop
mov
mov
mov
adcb
adc
shll
imul
lcall
add
cmc
fstpl
jae
and
jne
lret
dec
test
out
mov
or
mov
push
xor
into
jno
push
inc
ljmp
cmp
ljmp
aad
mov
dec
scas
out
cmpsl
push
stos
fs
or
mov
and
rcrb
pushf
lcall
stc
hlt
cltd
cltd
mov
popa
lds
lds
sbb
pop
and
pop
jns
ljmp
stos
jl
inc
hlt
dec
idivb
stos
imul
mov
sbb
pop
push
lcall
xor
mov
mov
dec
fdivrs
leave
out
mov
sub
or
imul
sub
out
push
or
mov
fdivrp
ljmp
add
nop
push
sahf
fldt
fmulp
xor
xchg
movb
inc
dec
int3
mov
sarb
or
mov
lods
or
ljmp
sbb
add
insl
mov
popf
jl
pop
xor
pop
pop
cli
and
decl
sbbb
stos
outsl
xor
mov
call
test
fbld
mov
adc
scas
daa
jb
les
shlb
decl
shl
out
icebp
push
cmpsl
dec
dec
adc
cs
cmpb
leave
cmp
and
ljmp
fisubs
imul
jnp
popf
mov
test
xor
mov
pop
push
and
ds
mov
cmc
mov
dec
inc
popa
mov
imul
das
or
lret
and
dec
subl
inc
inc
aaa
adc
jne
je
sub
cmpsb
pop
dec
cld
sti
clc
mov
enter
ljmp
in
stc
mov
mov
jmp
push
push
push
sbb
and
mov
test
xchg
cmp
iret
pop
fidivs
out
adc
outsb
ret
mov
lret
call
push
loopne
mov
call
xchg
mov
lret
dec
dec
push
movsl
je
sahf
repz
insl
mov
sbbb
mov
in
push
mov
dec
or
add
mov
ja
ret
ret
inc
sub
aad
popa
cmpsl
loopne
pop
call
ret
xchg
cmp
jg
lock
mov
adc
lret
movsl
mov
dec
data16
mov
push
stos
xor
mov
cmp
push
sti
cs
add
pop
cld
ljmp
jecxz
lock
xchg
mov
rcll
jbe
and
test
mov
pusha
jnp
fstps
cmpsb
mov
outsb
dec
ret
cli
or
repz
push
jbe
stos
sbb
icebp
out
mov
insb
outsb
xchg
mov
push
test
push
fmul
cmc
test
adc
xchg
mov
incl
pop
fdivl
in
inc
sbb
shl
jp
jno
mov
lcall
imul
push
xchg
pop
and
out
sub
and
aas
enter
push
pop
popl
decl
repnz
int
inc
or
jmp
xchg
aam
sub
mov
test
pop
mov
sub
pushl
and
jo
rol
xor
pop
add
pop
rclb
incl
sarb
lock
xchg
in
in
les
add
call
jg
gs
dec
std
jnp
or
mov
xchg
xchg
ja
daa
sub
addr16
incl
repnz
mov
inc
mov
ret
stc
cs
push
lock
xorb
lcall
lea
push
lock
push
stos
mov
mov
imul
loopne
jbe
mov
inc
xor
test
xor
jp
add
adc
bound
cmpsb
jmp
dec
and
mov
mov
mov
mov
xchg
mov
pop
lock
jnp
decl
clc
xor
jbe
cli
inc
mov
stos
arpl
aaa
mov
daa
adc
cmp
mov
test
test
hlt
adc
jae
cli
in
pop
addr16
pushl
cmpsb
je
and
or
in
sub
int
cltd
scas
ficomps
xlat
insl
aam
pop
test
inc
popa
mov
jl
xchg
push
cmc
jmp
pop
add
mov
jnp
cs
in
nop
call
fwait
cli
aam
decl
push
adc
stc
icebp
lds
xlat
mov
or
out
push
or
clc
pop
mov
jg
clc
ret
jle
mov
and
push
repnz
jno
leave
lcall
idivb
ljmp
dec
pop
xor
pusha
pop
or
mov
fisttpl
xchg
push
repz
or
jmp
lcall
xchg
add
and
jg
mov
out
outsb
xor
adc
enter
sbb
call
push
add
xor
mov
hlt
pop
loope
stc
cmpsl
out
sbb
cmp
adc
add
sub
push
test
push
js
fs
addr16
ljmp
dec
push
mov
cli
or
frstor
mov
fsubl
sub
fbld
jae
addr16
lea
jl
insb
jne
adc
push
cmp
mov
push
fsub
xchg
scas
fistpl
sub
xlat
push
xchg
jle
mov
scas
xchg
cli
cmp
daa
xchg
iret
cmc
jp
lods
xchg
addb
mov
and
sti
fcoms
int3
out
shll
fldenv
popf
ret
jmp
icebp
add
cli
xchg
inc
fnstenv
xor
daa
in
lock
jg
lock
outsb
cli
arpl
pop
mov
mov
mov
add
addl
dec
pop
xchg
pop
sub
negb
xchg
mov
jg
in
in
xchg
xor
ret
ss
incl
mov
clc
push
push
lods
cmp
out
repz
jo
jnp
lcall
dec
ss
xor
inc
stos
insb
loope
insb
mov
jl
lcall
rorl
pop
cld
decl
push
cmp
out
lods
push
dec
das
sub
gs
hlt
push
mov
jg
pusha
stos
xor
dec
inc
jl
cmp
xchg
jbe
fwait
xor
mov
clc
cmp
xchg
sahf
aaa
in
pop
mov
sbb
xor
leave
adc
insl
mov
add
add
xor
sar
lods
pop
leave
aaa
das
test
cmp
jle
xor
cmp
push
cld
movsl
mov
outsl
inc
icebp
leave
cmpsb
dec
scas
ljmp
scas
push
ret
dec
out
imul
pop
adc
call
jl
arpl
test
pop
cmp
fucomp
insb
into
lret
jb
int3
ja
shll
jp
out
sub
jmp
mov
test
into
and
idivl
popa
clc
mov
sub
dec
movsl
clc
pushl
out
icebp
xor
testb
jg
fimuls
cltd
inc
rcrl
test
xor
pushl
out
xor
xor
leave
mov
mov
insl
fs
jmp
lcall
jle
inc
popf
sub
xor
inc
adc
cmp
jcxz
push
lcall
jmp
mov
xchg
movsl
ret
stos
or
xchg
ss
mov
repnz
mov
adc
incl
push
adc
lret
push
jle
jmp
mov
and
push
stos
pushl
fistpll
mov
repz
push
push
inc
in
ret
icebp
push
adc
ds
xlat
incl
popa
lods
mov
out
jecxz
cld
push
pushf
jo
fisttps
cmc
cmpsl
mov
cli
iret
nop
mov
out
lods
loope
sbb
pop
cmp
std
jbe
jmp
popf
idivb
mov
subl
jmp
hlt
popa
sbb
dec
mov
xchg
rcrb
loop
sbb
aaa
cmpsl
dec
mov
xchg
fcmovne
cmpsb
or
insl
pop
mov
gs
sub
mov
jne
into
push
pop
and
xor
scas
stos
call
mull
ljmp
je
mov
mov
imul
aaa
ljmp
int
mov
push
mov
std
push
imul
mov
loopne
pop
dec
negb
sbb
cmpsb
xorl
adc
mov
or
cmpsl
push
test
ja
mov
jmp
xchg
scas
adc
xor
sbb
enter
mov
sub
scas
sbb
call
clc
mov
dec
cmp
xchg
or
fildl
adc
mov
decl
xchg
jmp
test
lahf
addr16
cmp
je
aam
std
jg
decl
imul
aad
movhps
xchg
icebp
pop
les
movsl
into
jb
mov
dec
clc
ds
pop
or
mov
mov
aas
mov
test
sbb
hlt
int3
inc
jp
cltd
sbb
incl
jecxz
inc
std
and
inc
rcrb
lods
sbb
out
test
push
mov
decl
iret
test
movsb
test
adc
fcompl
mov
jbe
xchg
outsl
nop
insb
xor
lcall
or
out
out
dec
es
lods
call
jnp
mov
ret
adc
pushl
data16
addl
daa
jno
xchg
mov
xor
xor
ljmp
pushw
jne
push
pushf
stos
cmc
jge
std
movb
pop
dec
decl
push
cmp
sbb
out
lret
jne
mov
jns
sub
clc
lods
dec
lods
xchg
sbb
push
cmp
cmp
clc
decl
int
adc
push
aas
shll
jbe
add
dec
or
ss
push
out
pop
hlt
jg
and
fs
jo
jbe
in
shl
cmpsb
enter
movq
ja
ljmp
sbb
subb
pop
addb
sub
scas
jp
lcall
mov
fildll
and
in
adc
out
das
popa
fistps
out
adc
add
pushl
fisttps
push
fcmovnb
inc
rcl
lds
stos
mov
xchg
popa
mov
data16
xor
xchg
xchg
loopne
sub
cmp
cmp
and
jl
leave
test
mov
cmp
or
fidivl
lcall
aaa
pushf
inc
mull
test
jbe
pusha
scas
or
and
pop
xor
imul
and
stc
insb
push
dec
or
pop
out
xchg
divb
or
arpl
inc
cmp
mov
call
jb
push
push
cld
imul
dec
aas
test
cmpl
or
aam
test
daa
in
jmp
and
adc
and
addr16
xlat
fdivrl
lds
adc
mov
sbb
mov
xchg
lret
insb
scas
xor
in
sbb
xor
add
cmp
test
sub
jbe
add
leave
dec
and
repnz
pop
enter
dec
movsb
cmpsb
call
imul
pop
dec
mov
insb
jno
mov
mov
aad
xor
sarb
mov
out
sti
lods
iret
sbb
lcall
jne
xchg
mull
pop
stos
test
loop
xchg
pop
call
and
in
mov
stos
sub
xor
inc
lock
int
outsb
or
push
mov
xchg
sub
test
adc
call
test
nop
mov
outsb
ljmp
or
xor
push
inc
movsl
add
pop
xchg
jmp
filds
mov
clc
pushl
in
ljmp
imul
mull
inc
stc
mov
kxnorw
scas
cmpsb
incl
orb
rcr
clc
pusha
dec
rolb
loopne
lds
sbb
pop
jns
cmp
inc
gs
test
scas
xlat
and
decl
xor
sub
jns
mov
and
int
icebp
stc
sub
ds
cmpsl
mov
ljmp
xchg
std
call
daa
ficomps
adc
add
hlt
sub
inc
cmp
je
pop
lock
ljmp
push
jns
les
cltd
dec
mov
mov
fidivrs
fldz
sbb
fistpll
out
dec
loop
ljmp
fmuls
mov
sub
aam
je
lods
sbb
clc
dec
mov
out
notl
sub
inc
sbb
dec
dec
jmp
xchg
mov
or
pop
push
cmp
cmp
shl
pop
jle
or
decl
adc
stos
pop
sbb
add
push
stc
xchg
loopne
insl
mov
pushl
cld
ret
mov
add
pop
inc
add
cmp
mov
hlt
inc
add
loop
pop
mov
fcomip
inc
test
test
hlt
cs
shll
insl
mov
jmp
insb
sub
inc
sarl
pushl
lods
shlb
pusha
jns
pop
dec
daa
sar
lods
mov
mov
mov
and
jmp
xor
fldl
shl
sub
jne
pop
andb
iret
push
mov
lahf
in
nop
call
cwtl
shl
sbb
cmc
stos
mov
insb
mov
mov
push
pop
movsl
dec
decl
decl
addr16
pop
test
mov
scas
jmp
and
sub
push
fistl
ja
ret
mov
cmp
mov
sarb
jg
sub
movsl
push
xor
mov
mov
jmp
loopne
ljmp
mov
sub
into
push
fwait
xchg
and
cltd
imul
mov
cli
fdivrs
sahf
scas
ret
dec
push
shrl
xchg
add
das
popf
dec
mov
add
call
call
adc
pop
push
xor
jp
lods
pop
sti
add
jns
stos
decl
nop
dec
xor
mov
pop
add
out
and
popw
sysret
decl
orb
out
or
scas
stc
and
test
ljmp
mov
xor
jl
jno
adc
andb
add
xchg
jmp
cld
ficomps
adc
hlt
inc
jge
ss
sbb
pop
bound
cmp
xchg
mov
ljmp
stos
in
or
cld
pushf
xchg
into
cld
out
pop
ja
aas
orl
cmp
ret
jl
jp
lcall
push
addl
xchg
cmp
daa
jnp
adc
loop
inc
push
lods
sub
cs
pop
ret
out
pop
data16
mov
add
jmp
mov
or
lret
outsb
rcl
pop
adc
rolb
cmp
pop
gs
mov
add
xor
int
stos
sbb
pusha
test
cmp
push
jmp
orb
jmp
in
out
jne
mov
stos
mov
outsb
data16
xchg
mov
es
pop
cltd
int
inc
mov
or
call
adc
ja
push
jmp
push
out
jge
lds
dec
adc
incl
fs
jns
mov
fists
lods
fwait
dec
dec
mov
decb
arpl
sbb
dec
call
sar
decl
push
add
outsl
push
pop
inc
and
sbb
stos
imul
out
cli
inc
shll
jge
mov
sbbb
js
mov
incl
xor
sbb
inc
cmp
arpl
fsin
ret
je
inc
pop
notl
incl
call
lods
mov
xchg
inc
test
enter
xor
pop
ja
fldenv
xor
ljmp
pop
xchg
data16
mov
rol
rorl
cld
arpl
inc
push
sub
push
repz
fstl
pop
popf
aam
iret
push
xor
sub
pop
adc
into
lock
js
and
dec
pop
loopne
mov
lcall
lret
ja
fldt
imul
pushl
std
jmp
int3
and
int
dec
cmp
mov
xchg
call
decl
es
imul
pinsrw
add
cmp
inc
inc
and
cli
sbb
dec
cmp
mov
dec
xchg
mov
in
or
data16
mov
jo
and
mov
mov
es
or
dec
stos
insl
pop
push
pop
lfs
mov
cmp
sub
sub
or
mov
push
pop
and
lcall
andb
sbb
jbe
ds
cmp
jg
rorb
je
add
mov
adcl
mov
imul
push
fwait
push
jmp
movsb
test
mov
sub
lahf
xor
xchg
movsl
inc
or
decl
pop
ret
aad
cmp
sbb
dec
bound
mov
xchg
cmp
mov
dec
dec
jle
mov
sub
pop
lret
push
out
mov
insl
lock
cs
jb
jnp
dec
lds
adc
push
jl
test
cmpsb
mov
lods
inc
in
ja
fsubl
repz
popa
aam
sbb
test
cmp
cli
add
jne
pop
shlb
pop
push
in
jmp
clc
lcall
mov
pop
xor
int3
aas
in
push
cmc
mov
stc
push
cmc
pop
mov
add
xchg
mov
shlb
adc
pushf
jg
addr16
insl
sarb
loop
imul
decl
test
add
mov
jb
pusha
mov
jg
push
push
pop
adc
xor
push
xchg
insb
in
jmp
sub
xchg
sar
stos
and
sub
inc
nop
pop
and
push
inc
ljmp
loop
pop
xchg
stos
mov
mov
call
jne
mov
jmp
jo
dec
sbb
adc
sahf
mov
fistps
mov
pusha
cmp
fwait
popa
pop
sbbl
dec
sahf
xor
es
insb
cmp
cmc
or
jl
nop
shrb
je
cmpsl
add
push
test
pop
mov
dec
lret
inc
xlat
mov
pop
test
dec
xchg
push
out
cmp
pop
sysenter
int3
testb
dec
stos
call
rolb
add
repnz
sub
push
fs
daa
add
xor
jl
or
adc
push
sub
cmp
jge
imul
pushl
notb
out
fimull
pop
mov
add
dec
mov
call
cmc
jnp
push
pop
inc
sbb
lock
jb
push
and
mov
incl
cld
aas
or
in
in
shrb
mov
cmpsl
xchg
lods
aad
flds
out
movsl
idivl
push
lods
negl
sti
ret
xor
sti
rclb
rcr
aas
and
jg
cltd
scas
cmp
pushf
insl
push
popa
arpl
jne
xchg
repz
pop
inc
insb
in
rcll
incl
lret
mov
adc
fsubl
scas
mov
push
add
sahf
jl
pop
hlt
jnp
lret
fcoms
popa
pop
mov
lods
jnp
inc
xor
jg
test
and
mov
jne
mov
or
je
inc
cmp
mov
jns
sarl
cmc
xor
push
or
cmp
xchg
add
xor
loope
pop
ret
mov
sti
jle
xor
shll
lcall
sub
xchg
pop
add
hlt
in
inc
cltd
cmpsb
sub
data16
out
inc
insb
xchg
mov
xor
enter
lcall
cli
fnstcw
jo
test
cmp
sbb
aas
xor
adc
std
test
jnp
fisttps
dec
jo
mov
sahf
outsl
cltd
test
or
scas
mov
cmpsl
inc
rolb
incl
in
sub
mov
and
sub
cli
cwtl
xlat
int
fidivl
xchg
xor
fldenv
clc
jmp
ds
jp
jbe
sub
test
ljmp
or
movaps
in
mov
std
sub
js
sub
shr
addl
leave
repnz
data16
sub
and
sbb
rcr
scas
inc
std
js
lcall
dec
jne
add
lcall
or
adcl
and
cld
jno
xor
aad
mov
fcompl
mov
xlat
cs
pushf
mov
aam
cmp
outsb
call
sub
xchg
ss
aam
bound
xor
mov
sub
rcrl
jmp
sahf
imul
sahf
add
ljmp
xchg
sbb
and
dec
jbe
push
in
ds
fisubrl
add
sarb
push
mov
mov
inc
decl
mov
dec
cld
dec
and
outsb
push
adc
xor
pop
pushl
xor
ret
ljmp
mov
test
push
lret
sahf
jnp
push
outsl
imul
pop
inc
call
in
gs
mov
push
lds
in
mov
lds
call
push
in
pop
sub
jo
es
sub
jle
jg
xlat
adc
fisubrs
stc
dec
push
sub
stc
jg
adc
pushf
cmpsl
push
cld
in
jg
inc
int
dec
rolb
pushf
push
out
movb
and
or
mov
mov
push
sub
pusha
cmc
jl
movsl
les
mov
data16
pushl
js
aad
mov
ja
inc
not
sbb
and
mov
jg
out
xor
inc
nop
xchg
jecxz
lcall
inc
flds
mov
les
mov
hlt
test
push
jns
jg
jmp
ret
or
out
push
hlt
insl
cmp
ja
cs
xor
push
ja
jmp
xchg
outsl
dec
jmp
div
push
scas
or
xor
cwtl
inc
das
pusha
mov
jmp
pop
mov
sub
sti
and
cwtl
hlt
adc
and
enter
mov
aaa
cld
jp
dec
aad
es
ret
or
add
jg
call
mov
sti
xchg
bound
xchg
dec
lret
xchg
das
add
lahf
test
aad
adc
jo
ret
call
jne
mov
push
mov
and
push
jns
incl
jns
adc
inc
add
icebp
scas
iret
lods
daa
mov
leave
xlat
into
lcall
cmp
inc
jno
adc
add
int
xchg
in
stos
pop
icebp
jmp
add
xchg
adc
xchg
xchg
jecxz
cmp
incl
hlt
add
sbb
rcrl
xchg
inc
ret
out
aaa
int3
inc
dec
outsl
incb
xor
call
decl
loope
jge
je
fcmovu
xor
in
jmp
minps
aas
push
rorl
ljmp
clc
cmp
mov
mov
stos
and
jecxz
pop
pop
jecxz
pop
mov
xchg
ret
jno
mov
mov
cmp
fildll
sbb
call
stc
jb
adc
jne
pushl
sub
movsl
mov
pop
sbb
or
jg
stos
push
or
lcall
inc
mov
sub
xor
cmp
push
imul
out
js
inc
jo
mov
mov
ja
xchg
xor
pop
jecxz
mov
ja
sahf
fwait
add
dec
mov
push
fiadds
pop
pop
subl
jno
sbb
enter
pop
push
insl
push
fcom
lea
jp
or
test
out
and
mov
push
int
mov
lock
lcall
and
clc
xchg
mov
adc
lahf
out
cmp
stc
inc
aad
jmp
jmp
jecxz
shlb
xchg
pop
xchg
add
mov
sbb
decl
fldt
adc
xlat
pop
push
and
fadds
xchg
outsl
bound
arpl
jg
mov
sub
mov
decb
push
or
inc
pop
cmp
adc
mov
inc
test
xlat
ss
xorb
and
inc
cwtl
cmp
jae
fmull
lahf
out
shll
xchg
stos
jno
je
adc
roll
sbb
iret
add
sbb
cmpsl
jle
divb
int
push
cld
add
xchg
push
adc
lock
aaa
and
test
add
movsl
push
adc
cmc
cmp
add
lret
and
rorb
sti
mov
insl
jne
or
lods
xchg
push
aas
adc
icebp
dec
enter
fdivp
lods
jne
push
scas
mov
dec
ret
mov
pop
adc
call
mov
cmp
outsl
mov
or
fxch
pushl
mov
iret
fucomp
lret
cwtl
mov
pushl
and
adc
sub
idiv
sar
dec
adc
or
jnp
roll
test
in
in
sub
leave
and
ja
xor
mov
and
sbb
add
add
cmp
imul
add
adc
jmp
mov
jle
in
sub
dec
cwtl
dec
xchg
cmpsb
mov
jmp
mov
xlat
cmp
lcall
adc
loop
xor
insb
mov
pop
sbb
iret
pushf
gs
or
andb
fidivrl
mov
cmpl
mov
xlat
pop
mov
orl
mov
clc
pop
popa
test
and
dec
and
ficomps
mov
dec
jl
out
loopne
and
aam
lods
xchg
jmp
cmp
data16
ljmp
clc
ret
or
push
mov
ljmp
mov
and
and
push
loopne
mov
subl
leave
and
pop
mov
in
in
push
xchg
in
cmp
inc
cmp
xor
pushl
leave
fnsave
cmp
xor
std
sub
cli
incl
psrad
push
lcall
leave
in
or
mov
mov
rolb
ljmp
fcmovbe
sub
and
cld
push
fcmovnb
mov
sbb
mov
xchg
loopne
sub
jnp
fcoml
xlat
pushl
rorb
sar
mov
ret
push
test
xor
dec
rcrb
sub
in
push
lea
push
and
pushl
inc
lods
dec
rcrl
cmpsl
clc
bound
ja
inc
out
aam
and
mov
paddusb
adc
or
mov
add
mov
and
sbb
rorl
or
jmp
popa
mov
icebp
cmp
jecxz
mov
ret
sti
sti
push
popf
in
lds
js
push
out
cld
pushl
push
addr16
and
dec
jnp
repz
push
push
inc
inc
mov
lahf
call
pop
cmc
call
sbb
movsb
mov
mov
hlt
cmpsl
iret
cltd
ret
call
insl
jle
cmp
lock
cmp
mov
popa
je
insl
pop
dec
cmp
push
bound
es
jmp
cmp
aaa
mov
loope
ss
hlt
dec
bndldx
push
mov
cmp
lcall
testl
outsl
pop
es
ja
loop
testl
test
mov
mov
push
nop
and
lods
mov
push
arpl
inc
ret
jns
inc
add
push
xor
ljmp
pop
fistpl
test
jns
add
mov
mov
mov
test
pop
adc
out
or
sub
push
dec
and
sbb
push
mov
test
mulb
pop
pop
and
jnp
testb
cmp
mov
icebp
inc
add
addr16
dec
fst
sbb
jle
sbb
mov
iret
mov
xlat
cs
jmp
add
add
push
imul
inc
subl
movsl
push
idiv
jmp
cmpsl
sbb
nop
adc
mov
push
push
cmpsl
sbb
push
rcrb
push
inc
xor
cmp
ljmp
push
lret
leave
cmp
or
jl
lahf
xchg
cmc
ss
pushf
inc
mov
sarb
dec
jo
cld
out
out
es
adc
aaa
clc
hlt
sbb
push
test
or
mov
lcall
ds
repz
stos
push
sahf
in
mov
add
pop
cmp
stos
lret
add
call
xchg
movsl
mov
or
gs
xor
push
dec
imul
dec
out
repnz
sub
pop
jg
test
incl
mov
push
pop
fcoms
jnp
inc
add
call
lock
out
je
xor
cmc
mov
fdivrp
push
add
incl
js
ret
inc
bound
mov
sar
push
in
cmp
dec
loop
cmp
out
mov
cmp
mov
mov
ds
dec
into
dec
pop
addr16
or
ja
dec
dec
pushf
lcall
jmp
push
adc
jge
mov
scas
and
dec
les
mov
or
jb
lret
inc
clc
push
dec
push
lahf
jns
sbb
jg
into
jno
mov
lret
add
inc
add
jmp
hlt
mov
jmp
mov
idivb
push
add
sub
je
lcall
cmp
mov
mov
push
inc
ret
mov
mov
xchg
jl
test
ljmp
sub
in
lds
and
jne
loop
pop
ljmp
xor
cmp
dec
out
fs
lods
jae
test
mov
xchg
jmp
xchg
or
xchg
subl
call
div
fs
les
and
sub
lcall
push
ficomps
mov
neg
mov
add
sub
xchg
imul
scas
cmp
call
leave
mov
pop
ljmp
sbb
mov
call
xchg
fnstcw
fwait
fwait
jbe
adc
push
lods
dec
shrb
aas
dec
sarl
gs
data16
inc
or
stc
lret
xchg
mov
daa
jmp
xchg
mov
movsl
xacquire
out
bound
stc
aaa
xrelease
mov
mov
incl
xlat
sbb
or
xchg
and
loopne
jp
ror
fnstenv
clc
decl
out
push
mov
push
cmp
mov
mov
xchg
mov
scas
cltd
cmc
sub
xchg
fstpt
cmp
dec
rorl
fdivr
mov
push
fnstenv
and
jmp
aaa
sub
jl
or
sbb
mov
inc
js
lock
imul
mov
jns
fs
cmp
int3
jecxz
or
loope
pop
lcall
fwait
pop
lds
je
lcall
sbb
xlat
mov
cmp
repz
mov
jmp
push
cmpsb
movsb
out
adc
sub
adc
inc
push
or
ds
aaa
std
pushl
jo
cmp
cmp
push
jbe
mov
cwtl
cmc
movsb
test
in
call
pop
std
xorb
mov
movsb
jle
in
dec
incb
mov
outsb
xor
mov
call
adc
add
adc
loopne
popf
cmpsl
in
jno
and
mov
xor
lahf
outsl
shlb
jmp
jo,pn
and
shrl
inc
xor
push
loope
dec
lcall
call
push
mov
and
mov
in
fsubs
xchg
outsb
lcall
pushl
and
adc
sub
dec
popf
into
dec
sti
mov
jb
fdivrs
sbb
xchg
jg
aas
mov
repz
cli
pop
in
fidivs
out
push
les
fwait
pop
out
xor
aad
lcall
push
adc
repz
lods
push
hlt
shlb
test
in
push
cld
push
pushf
pop
xchg
mov
jmp
mov
movsb
inc
faddp
in
push
int3
jle
fcomp
into
jle
mov
xchg
loopne
mov
push
in
loopne
fstpl
test
pop
mov
jo
addb
inc
mov
xor
loop
call
dec
enter
mov
lcall
pusha
in
xor
loope
and
fsts
inc
jne
out
aaa
and
pushl
jno
and
adc
mov
or
xor
loop
rclb
incl
add
xchg
loop
das
rol
call
mov
jge
fcmovne
cli
ds
jmp
mov
bound
cmp
sbb
cmp
cmp
dec
xchg
ret
incl
or
lret
xchg
dec
cmpsb
gs
xor
dec
push
dec
incl
mov
addr16
cmp
imulb
sbb
lcall
aad
pop
fstps
stc
adc
dec
adc
mov
sub
lods
lret
mov
jns
test
rolb
test
into
popf
lahf
lretw
and
jnp
mov
fisttpll
loop
xor
cwtl
xor
ret
ficomps
fwait
decl
push
jnp
jle
adc
add
mov
scas
bound
jg
loopne
ror
pushl
nop
ljmp
icebp
and
mov
ljmp
int3
xor
fnsave
cmp
xor
xchg
arpl
mov
jmp
repnz
pop
sbb
jno
add
push
andb
int3
arpl
je
in
pop
pushl
mov
mov
into
xlat
scas
ss
and
clc
xor
out
cmp
call
lods
cmp
cmp
add
or
mov
jns
std
movl
jg
jb
jle
sub
outsl
sbb
fcmovb
inc
cmp
ljmp
sub
or
outsl
sub
inc
int
nop
incl
out
stos
xor
mov
adc
push
out
adc
adcl
incl
cld
decl
pop
dec
sub
mov
pop
lcall
ljmp
stos
ljmp
aam
xor
cmp
xchg
sbb
cwtl
mov
aad
jg
jmp
and
and
push
mov
mov
stc
xor
mov
outsl
rcll
mov
ljmp
fwait
incb
dec
roll
dec
cmp
sbb
jbe
in
sar
xor
pop
cs
incl
and
xor
test
pushf
lods
cmc
icebp
xchg
jl
test
les
pop
cmpsb
lods
sub
sbb
mov
pop
sub
enter
push
pushl
cmp
movsb
push
sub
mov
mov
test
xchg
or
sbb
fisubrl
cmpsb
insb
push
pusha
in
leave
xchg
push
lods
xor
dec
cwtl
jl
out
pop
cmp
and
or
xchg
aas
jecxz
inc
adc
imul
pop
cs
mov
mov
and
pop
mov
fcomip
xchg
dec
mov
lds
mov
push
sub
pop
rcl
enter
pop
sub
jp
xrelease
pop
inc
ljmp
mov
pop
loopne
or
lahf
sub
mov
sbb
mov
jg
iret
mov
jmp
aam
jl
fimull
dec
mov
dec
fadds
and
add
push
pushl
call
sbb
adc
dec
or
mov
loope
sub
or
xlat
cmpsb
adc
jmp
es
adc
ret
aaa
cmp
ljmp
or
and
mov
shlb
pop
xor
and
movsb
push
out
cli
jmp
cmp
and
decl
push
imul
sbb
ljmp
xlat
call
sub
sub
js
mov
or
dec
inc
lock
push
pushl
mov
or
add
cli
hlt
mov
cmp
jg,pt
decl
outsb
sbb
push
pusha
push
scas
popa
test
xor
and
lock
mov
ret
clc
cmp
fcomi
xchg
cmpsl
dec
je
mov
lds
test
and
jmp
xor
out
push
push
stos
decl
push
incl
cmp
ret
or
push
mov
fwait
cmp
stc
pop
adc
sbb
pushl
cld
imul
jbe
arpl
pop
mov
inc
cmpsl
mov
addr16
fildll
call
out
mov
add
dec
icebp
iret
inc
enter
testb
pop
jge
incl
decl
lret
xchg
push
sbb
addl
xlat
repz
mov
fisubl
repnz
adc
loopne
test
test
add
je
or
ljmp
nop
mov
lods
aaa
divb
aaa
cmp
xchg
negl
lcall
into
sbb
ds
in
jne
out
fcomps
int
imul
or
incl
jnp
xor
push
mov
adc
in
xchg
jbe
or
inc
je
cld
xor
and
fs
sbb
in
xor
call
insl
in
jecxz
mov
jnp
pop
pop
or
inc
sub
mov
cli
cld
js,pt
lock
or
mov
fs
dec
mov
lcall
push
dec
dec
hlt
ja
pop
inc
adc
test
fs
mov
lcall
icebp
call
and
inc
pop
cmp
sbb
out
xchg
cli
mov
jmp
leave
lret
inc
movsb
es
xchg
xchg
xlat
adc
push
push
xchg
out
mov
xor
out
cwtl
push
xor
test
fdivs
es
popf
xor
sbb
incl
mov
mov
sub
push
sbbb
sub
cli
adc
sub
incl
add
mov
clc
sub
out
stc
xor
jg
cmpb
cli
jmp
fxch
jo
xor
mov
xor
adc
ret
sbb
mov
addr16
cli
insb
cmp
cld
jle
xlat
ljmp
jae
lock
mov
out
mov
jmp
xchg
jl
lods
push
inc
dec
adc
adc
add
pusha
jg
fs
xchg
push
aad
mov
pop
jge
sahf
movsl
mov
call
xchg
mov
jecxz
fisttpl
cmp
aad
test
inc
xor
xchg
test
sbb
fsubrl
hlt
pop
mov
cmp
lea
lods
mov
mov
je
adcb
in
mov
xchg
push
push
inc
andl
jae
loop
imul
dec
sahf
xor
decl
jecxz
ss
dec
push
or
mov
inc
loope
stos
add
popf
pop
lahf
imul
sar
call
dec
lods
adc
ficomps
jb
push
in
scas
or
dec
xchg
push
inc
sbb
push
lcall
out
cmp
or
ja
lds
xchg
mov
mull
dec
add
xchg
stc
fnstsw
out
mov
cmc
test
fsubrl
lods
imul
xchg
jg
lcall
adc
into
fnstsw
inc
popf
inc
xor
add
dec
jge
push
jp
mov
jmp
or
in
xchg
sbb
clc
sti
in
mov
sub
push
daa
call
xor
dec
jl
mov
adc
call
adc
dec
xchg
imul
cmp
and
in
push
jae
js
add
sub
inc
push
xor
clc
in
push
and
imul
cmp
cmpsl
mov
adc
inc
inc
insb
scas
call
push
cmp
xlat
andb
xchg
movsb
hlt
inc
addr16
incl
sub
cmp
jle
shrb
push
xor
cmpsb
xor
fcoms
std
notl
cld
or
popa
xor
leave
ja
subb
lds
pushl
xchg
cwtl
add
in
and
push
push
xor
dec
stos
cmpl
lcall
sbb
popf
out
and
push
aaa
insb
enter
fwait
scas
xchg
cmp
lret
ja
jmp
fstpt
jno
xor
sbb
mov
incl
push
in
mov
leave
aam
stos
sub
imul
pop
or
imul
je
bound
ljmp
or
pop
push
iret
or
dec
ret
sub
xchg
sti
call
incl
scas
pop
cmp
jo
cltd
lods
pop
mov
repnz
scas
inc
and
mov
mov
dec
icebp
inc
jecxz
sbb
xor
mov
xchg
cmp
popa
mov
sub
stc
imul
aam
or
jl
mov
lret
add
mov
ds
lret
popa
shlb
nop
lods
inc
or
or
movsb
pusha
push
mov
xchg
or
ret
mov
inc
mov
mov
mov
xchg
dec
setnp
decl
cmp
mov
add
shl
stos
xlat
ret
pop
jp
jb
xor
aas
ljmp
xor
mov
dec
fldcw
lods
mov
incl
fistpll
lret
pop
or
jg
decl
mov
cltd
bound
std
xchg
pushf
jecxz
cld
mov
or
test
lret
cmp
cmp
les
mov
sub
mov
in
sub
into
test
adc
xor
cli
rolb
into
repnz
jo
mov
lock
mov
testb
movsl
test
cmp
lcall
out
out
inc
fs
leave
mov
push
sti
push
lods
xchg
ret
xchg
sbb
ljmp
test
dec
sub
repnz
mov
fisttpl
pop
test
fdivl
fsubs
iret
mov
cmp
in
mov
cmpsl
xchg
or
sbb
out
out
outsl
dec
cs
pop
sbb
or
inc
lahf
bound
daa
das
jge
pop
add
lds
lcall
cwtl
cmp
inc
call
push
cmpsb
aad
sarl
mov
sub
push
sbb
roll
xchg
aas
jmp
xor
int
push
loope
fcmovnbe
mov
sbb
pop
mov
sbb
push
lcall
mov
in
mov
cmc
insb
into
mov
sub
mov
push
lock
mov
ljmp
xchg
or
rcrl
test
stc
push
int
fwait
dec
xchg
or
pushf
aaa
jmp
push
dec
mull
aam
sahf
xor
int
shrl
cmp
enter
sub
inc
ljmp
inc
ret
xchg
lods
incl
shrb
xchg
xor
sub
fbld
and
pop
fstp
dec
or
jmp
pop
in
jl
or
jne
ret
adc
pop
sbb
jmp
or
mov
pop
je
cmp
clc
mov
lea
fists
jne
push
xor
je
es
mov
dec
and
add
test
sbb
jg
incl
loop
add
cmpsb
mov
jne
rcr
sbb
out
jno
loopne
push
ljmp
mulb
jge
icebp
dec
lock
es
or
lds
insb
leave
mov
incl
out
mov
mov
mov
lret
mov
push
js
jb
jecxz
call
hlt
jle
mov
mov
fs
mov
jp
stos
in
xor
fdivp
xor
adc
cmpl
call
dec
pop
and
sub
ljmp
adc
sbb
xor
xor
dec
mov
inc
idivl
imul
rclb
dec
mov
daa
cmp
dec
pop
repz
cmpsb
decl
ret
pop
pop
adc
test
pxor
xlat
mov
xor
lods
mov
and
xor
push
cwtl
jge
mov
push
jecxz
and
cmp
mov
fs
call
loopne
xchg
push
rclb
cwtl
lret
fcmovu
lods
jae
lock
addr16
lcall
lcallw
pop
mov
lods
adc
cmp
pop
pop
xor
call
or
arpl
mov
sub
adc
jg
test
mov
test
inc
sti
pop
dec
xchg
stos
and
ret
ja
dec
test
ljmp
les
sbb
jnp
xchg
in
lcall
jne
sbb
jo
ljmp
andb
push
je
aam
mov
jmp
ljmp
or
push
mov
and
adc
mov
in
mov
sti
call
xorb
aas
dec
mov
jbe
jmp
pop
mov
mov
jg
push
rolb
lea
sbb
loopne
aas
in
xlat
dec
leave
inc
scas
sbb
mov
jg
or
movsl
daa
cmp
mov
and
cmpb
lcall
cmp
push
cs
leave
flds
adc
xchg
popf
mov
call
cmp
mov
test
mov
push
stos
jne
or
xor
mov
push
xchg
and
push
inc
hlt
pop
or
fcomip
jmp
shlb
xchg
repz
dec
dec
adc
mov
test
bound
sbb
decl
xor
out
cmpsb
mov
cmp
mov
icebp
insl
mov
jno
pop
pop
std
lcall
add
xchg
mov
test
xchg
pop
mov
incl
lahf
rcr
xlat
sub
and
sbb
idiv
jmp
imul
iret
jecxz
and
pop
es
mov
lea
movsb
dec
addl
lods
fcomps
dec
loop
int3
mov
dec
arpl
dec
stos
jp
imul
jg
dec
sbb
fdivl
fsts
cmp
xor
aaa
add
jp
cmp
jmp
pushl
jmp
mov
pushf
inc
ds
pop
lahf
push
xor
cmpsb
sbb
dec
ud0
call
mov
pop
repnz
xlat
fstpt
hlt
jmp
jns
stos
add
mov
pushl
pop
fidivrs
orb
andb
and
jp
fcomps
push
push
je
sub
stc
data16
dec
popa
std
incl
cltd
jae
fucomp
ret
mov
stos
jg
notb
dec
sahf
fdivr
call
or
enter
xor
sbb
dec
dec
sti
repz
sbb
cmp
sub
mov
mov
mov
pop
cmp
pushl
cltd
fstps
cmp
cwtl
out
out
out
aaa
push
js
cwtl
mov
out
dec
dec
jg
and
sar
ljmp
dec
arpl
pushf
in
fldl
les
xlat
mov
fistpll
insl
lock
test
nop
pushl
pusha
pop
rorl
lods
jno
mov
adc
inc
sbb
out
scas
cli
decl
rcl
jbe
or
push
scas
hlt
cmc
mov
incl
cmp
add
es
push
mov
pop
in
in
fdivr
ljmp
cli
mov
sbb
dec
and
out
idivb
and
lret
call
mov
push
rcr
mov
add
es
mov
pop
insb
int
push
jmp
cmp
stc
push
imulb
mov
inc
fwait
rolb
ljmp
jnp
add
sbb
jmp
add
xchg
dec
jecxz
or
cld
jl
subl
test
mov
jnp
sbb
popf
das
mov
test
ret
pop
je
add
out
xor
ficomps
pop
sti
dec
xchg
cmc
sub
out
pop
leave
xchg
push
sbb
sub
daa
xchg
shl
push
mov
insb
jo
mov
fsubr
sti
mov
xor
arpl
je
or
ss
orb
std
cmp
inc
sub
stos
les
popl
inc
aas
sti
fs
cwtl
xchg
mov
mov
jb
inc
and
xchg
decl
mov
push
adc
outsb
bound
sub
mov
lcall
test
push
addr16
imul
dec
pushf
push
push
call
popf
fcomp
in
loop
sbb
jns
lods
push
in
enter
pop
jmp
decl
or
pushf
xor
jmp
jne
iret
dec
cmp
xlat
loop
mov
decl
xchg
sahf
gs
jle
loopne
shrl
fucom
cmp
dec
jbe
push
and
decl
clc
adc
in
popf
cmp
cmpsb
jp
flds
js
rclb
nop
mov
pop
sub
sub
sbb
inc
repnz
jg
in
push
shl
cmpsb
push
insb
mov
sbb
xor
shl
or
test
pop
hlt
mov
pusha
repnz
int3
mov
sub
mov
and
jne
call
shrl
dec
cmpsl
pop
mov
ss
cwtl
femms
icebp
adc
inc
mov
xchg
jae
mov
sti
testb
jg
pop
and
mov
stc
sbb
idivb
aaa
pop
sub
push
fs
and
push
call
std
mov
addr16
push
and
jns
rcl
xchg
test
jmp
and
jecxz
out
shll
xchg
pop
lods
aad
mov
lea
fiaddl
xor
decl
adc
and
cwtl
push
jae
inc
xor
jl
add
lret
repz
dec
cmc
dec
xor
pop
gs
add
std
push
fisubl
sarl
push
pushl
lock
sub
in
insb
nop
data16
mov
or
push
push
incl
push
adc
dec
scas
inc
xor
push
cmp
cmp
out
shll
loopne
mov
pushl
or
mov
daa
adc
adc
data16
dec
mov
push
add
fwait
pop
decl
repz
jmp
xor
sbb
movsl
pop
pop
idiv
incl
xchg
or
in
or
push
icebp
adc
mov
dec
sbb
mov
mov
test
in
mov
push
sarl
lock
movsb
in
fsubrl
dec
aad
es
xor
jmp
pushl
jae
les
lcall
mov
pushf
dec
sub
xchg
andl
xchg
jmp
out
cmp
and
jns
imul
xchg
adc
cmpsb
mov
xchg
xor
and
lcall
fisubrl
daa
pop
ret
leave
lock
std
lahf
and
add
fildl
clc
jl
lcall
mov
jo
and
fmul
cs
arpl
pop
in
cli
decl
cli
sbb
cmp
test
pop
mov
mov
pushl
mov
cmc
inc
cli
bound
mov
insb
int3
test
and
jns
sarb
mov
mov
pushf
mov
loopne
gs
dec
dec
xchg
sti
jmp
daa
mov
dec
aad
cli
leave
test
jno
pop
mov
pop
sbb
cld
mov
test
icebp
subl
ja
mov
call
jle
aad
cmp
and
xchg
dec
cmp
cld
pop
mov
mov
adc
adc
sti
push
jecxz
std
dec
push
arpl
mov
xchg
ror
outsl
mov
sbb
or
mov
decl
jne
mov
add
sahf
mov
fs
les
add
in
sbb
arpl
push
pop
cmp
lds
mov
sub
jns
and
int3
jae
call
das
xchg
push
test
jae
sarl
adc
cwtl
dec
inc
and
insl
push
adc
mov
add
imulb
adc
mov
sub
xor
cmp
paddsw
test
lcall
adc
in
mov
in
pop
orl
push
movsl
sub
data16
filds
adc
incl
ret
stos
or
leave
cmp
loopne
mov
rorl
xchg
inc
mov
cmp
cmp
sbb
sbb
cmp
in
cli
daa
adc
loope
add
jg
rol
cmp
adc
or
lds
mov
inc
mov
lcall
lret
dec
pop
mov
cmovae
lahf
out
add
or
movsl
in
decl
push
ds
inc
jp
pop
inc
aaa
bnd
dec
subl
jmp
or
cmp
mov
lret
push
cmpsl
mov
sub
clc
and
clc
fs
decl
lock
inc
dec
data16
aad
sbb
inc
insl
add
out
mov
cwtl
pop
mov
sbbb
ljmp
fnstsw
popa
stos
cmp
adc
movsb
push
insb
cwtl
sbb
imul
loope
je
data16
jge
mov
ljmp
ror
xchg
fwait
jmp
sbb
lds
decl
add
push
cli
cmp
push
xchg
xor
cmp
cli
mov
push
xor
pushl
mov
push
fcoml
lret
mov
testl
and
insb
or
cmpb
out
fs
jmp
pop
incb
jb
lahf
xchg
sbb
daa
and
xor
lcall
dec
sub
push
mov
push
movsl
data16
adc
mov
mov
jecxz
xorb
pushl
mov
pop
cltd
bound
lret
xor
dec
insl
repz
add
sbb
std
repz
pop
or
pop
je
and
cwtl
jge
mov
fcomi
jmp
jecxz
inc
imul
cltd
cmpsl
loopne
adc
fsubs
cmp
lods
sti
lds
xchg
sbb
jbe
stos
sub
aam
int
scas
arpl
arpl
mov
and
iret
jne
rcl
jno
add
inc
jp
push
xor
mov
mov
in
aaa
sbb
ljmp
outsl
cmp
stos
jo
mov
cmp
addl
sbb
es
sub
jmp
add
loopne
cmovle
out
ret
pop
ror
push
imul
enter
lcall
mov
xor
addr16
mov
xchg
inc
or
ljmp
dec
adc
outsb
cmc
xchg
and
or
mov
and
fsubr
daa
add
sbb
jne
stos
add
pop
in
sbb
add
out
push
insb
push
adc
add
jno
push
test
fldcw
lea
test
loopne
fs
mov
arpl
or
insl
push
xchg
push
pushl
mov
and
push
fsub
push
stos
pop
in
adc
and
cmc
lods
hlt
test
jg
sub
adc
rol
pop
adc
pop
sbb
sbb
pushl
cld
adc
out
sbb
enter
lcall
or
call
std
xor
jo
mov
out
sbb
ret
dec
mov
add
pushl
jp
sti
lods
push
or
dec
mov
xchg
subl
and
mov
jp
pop
cmp
mov
test
divl
adc
call
and
jmp
xor
ret
aad
fidivs
cli
addl
js
lret
inc
out
sbb
dec
xchg
mov
jne
add
mov
iret
sbb
lahf
add
xorl
jl
xchg
aaa
lods
scas
fadds
xchg
scas
adc
inc
jp
test
aas
cwtl
lds
jmp
mov
gs
aad
sbb
andl
add
or
and
pop
pop
sbb
out
clc
fimuls
test
aaa
inc
sar
dec
cmpl
lock
fcomip
xchg
mov
outsb
add
xchg
mov
es
mov
xchg
push
xlat
scas
add
ss
incl
lock
cmp
sub
and
xlat
aam
decl
outsl
call
cmp
or
lcall
cld
cld
outsb
push
lcall
jae
sti
gs
ret
and
pop
push
ss
adc
ret
flds
test
push
pop
cmp
sbb
mov
bound
sbb
adc
out
xor
and
decl
lods
pop
mov
dec
ja
fidivs
stos
pop
movsl
rorl
jo
leave
ljmp
adc
sub
stos
icebp
pop
add
ret
aas
cs
sub
call
xchg
add
or
push
xchg
pop
add
cld
call
jge
clc
popf
or
push
or
das
pusha
outsl
or
lods
mov
insl
lcall
js
sahf
cmpsb
sarb
addl
xchg
dec
mov
int
pop
xchg
out
sbb
mov
mov
add
daa
push
aaa
add
mov
lods
inc
test
and
aaa
push
shll
and
nop
aaa
xor
ljmp
push
cmpsb
mov
test
jecxz
cmp
loopne
movsl
movsl
pop
das
ljmp
pop
mov
jo
test
adc
xchg
jmp
xor
hlt
cmp
gs
pop
dec
xor
fcoml
nop
mov
pop
scas
in
cmp
jg
push
mov
into
sbb
push
mov
jno
imul
lcall
add
jle
mov
lcall
push
add
loopne
fnstsw
fwait
in
pop
or
xlat
std
mov
jmp
mov
mov
jmp
mov
imul
lahf
lea
push
mov
aam
cmp
incl
push
icebp
mov
jne
out
adc
xchg
aaa
mov
push
cmpsl
cmp
mov
pop
iret
dec
sub
cmp
sbb
divb
outsb
test
add
dec
xor
add
bswap
fisubl
nop
lods
insb
lret
scas
cmp
mov
inc
lahf
sub
jmp
mov
test
dec
mov
notl
add
push
cmp
mov
mulb
adc
bound
enter
dec
repz
lcall
fcoms
mov
push
mov
repz
loop
xor
inc
push
std
cmc
daa
jle
pop
mov
mov
push
test
add
adc
in
mov
ljmp
sbb
ss
xchg
leave
inc
dec
dec
inc
cltd
in
jecxz
adc
mov
xchg
loop
jg
or
out
cmpl
imulb
out
jecxz
js
inc
adc
jecxz
imul
jmp
cld
sbb
arpl
mov
lahf
iret
test
dec
popf
adc
data16
les
sbb
pop
fists
inc
xor
or
sub
xor
fwait
jge
xchg
movsb
loopne
xor
pusha
and
jge
test
incl
jp
push
fwait
cmp
push
dec
add
jecxz
push
imul
or
icebp
fstl
jo
mulb
out
push
mov
incl
sub
fstpl
push
int3
jno
cmp
repz
jge
xor
incl
or
repnz
cmp
pop
push
xchg
mov
jns
incb
je
mov
ljmp
jne
andb
add
xchg
les
inc
cmp
adc
bound
lcall
call
sti
mov
sbb
insb
insl
jg
mov
lcall
pop
cmp
add
std
pop
rolb
dec
inc
or
sub
lcall
and
clc
pop
clc
sbb
imul
xor
sub
dec
daa
cmp
pop
mov
sbb
jnp
movb
into
xlat
or
xchg
fdivl
jmp
add
fstp
hlt
or
cmp
xor
dec
xchg
and
in
in
sub
ud0
incl
fs
push
or
hlt
xchg
popf
jl
jbe
inc
add
pop
or
cmp
pop
jl
stos
add
out
xor
in
aad
xor
pop
push
mov
mov
call
incl
inc
stos
jbe
mov
push
xchg
adcl
cmpb
sbb
paddw
decl
push
sahf
jns
or
and
push
jne
sub
cmp
lds
call
stos
clc
das
push
sbb
mov
fdivp
je
into
das
push
jns
ret
nop
fimuls
inc
mov
push
jae
iret
inc
mov
xor
in
arpl
jmp
xor
xchg
pop
div
jb
pop
dec
hlt
addr16
add
incl
push
sbb
cmp
inc
insl
jo
push
jae
sub
ds
cwtl
pcmpgtb
dec
popf
outsb
ja
out
add
rcl
sub
stc
pop
mov
sbb
pushl
adc
push
mov
or
mov
ss
pop
mov
jle
stos
das
shlb
gs
mov
test
sbb
ljmp
mov
test
popf
or
jmp
les
das
test
jo
adc
jns
imul
dec
adc
xor
out
fldt
fldenv
mov
sbb
ljmp
mov
mov
dec
rorb
sbb
aad
rcrb
movb
pop
loopne
pop
out
lock
cmpsl
int
and
pop
xor
add
jmp
cwtl
cmp
add
pushf
lret
fiaddl
pop
pop
cmp
out
xor
imull
push
call
fcomip
adc
cmp
testl
cs
bound
fs
pushl
jge
ljmp
insb
jns
notl
in
cmp
mov
ret
test
decl
cli
mov
lcall
or
jp
imul
cmp
jmp
fnstenv
in
popl
es
dec
out
pusha
dec
dec
mov
and
push
add
inc
xchg
sub
xchg
in
add
fiadds
and
cli
cmp
imul
addr16
decl
mov
jbe
fdivl
adc
imul
sbb
xor
and
mov
popf
dec
and
mov
mov
push
jle
imul
ret
cmp
mov
in
jno
and
divb
sbb
into
stos
fwait
xchg
sbb
inc
xor
inc
mov
jmp
lret
std
and
lea
out
into
arpl
sbb
add
push
pop
cmp
cmp
adc
jmp
fs
fnstsw
sbb
arpl
push
mov
cltd
decl
xchg
outsl
movsl
lahf
leave
pop
mov
adc
lcall
jl
out
mov
inc
clc
cmpsb
repnz
xor
movsb
out
mov
adc
jmp
dec
ret
incl
push
or
sbb
push
mov
decl
repnz
test
rolb
imulb
popa
or
lretw
test
xor
aam
xlat
sub
mov
ficoml
sbb
dec
jl
ud0
jg
sti
rcrb
mov
sbb
popf
aas
and
add
xor
stc
and
arpl
call
jne
sbb
into
hlt
adc
ficoms
xorl
bound
dec
movsb
inc
addr16
in
jae
and
nop
jmp
test
mov
cs
mov
pop
shlb
mov
js
sub
mov
mov
dec
stc
pop
mov
ljmp
clc
nop
sub
sub
add
jecxz
test
mov
push
outsl
lcall
mov
loopne
lret
adc
and
adc
push
filds
out
pop
call
jp
sbb
dec
add
jnp
in
fisttps
lea
sbb
call
xchg
sahf
fcmovu
inc
lcall
add
push
inc
mov
adcb
or
xchg
xor
inc
push
mov
daa
jmp
push
mov
jecxz
lcall
jle
lret
ljmp
mov
mov
repnz
lret
sahf
mov
fsubs
push
fiaddl
fdivrl
call
inc
dec
lret
pop
data16
jle
add
add
mov
xor
popf
and
xchg
xchg
call
mov
sbb
fildl
stos
mov
arpl
mov
in
jge
jg
push
sub
mov
out
test
push
xlat
jno
pushf
ds
call
fcomp
sub
xchg
sub
inc
adc
inc
movsl
xchg
scas
jecxz
and
call
push
push
mov
dec
clc
xchg
dec
call
and
stos
js
outsb
mov
call
inc
mov
pusha
mov
loopne
pop
lods
sub
mov
and
mov
inc
enter
xchg
jge
aad
lods
in
mov
jbe
test
dec
mov
inc
hlt
fdivl
jmp
adc
lret
pop
mov
insl
xor
ss
jmp
daa
sub
adc
decl
bnd
mov
data16
imul
movsb
pop
pop
sahf
icebp
xor
cmpsb
das
mov
cli
out
pop
push
mov
mov
mov
jno
rcrb
xor
pop
mov
out
je
mov
mov
sub
ljmp
add
jl
mov
push
idivl
mov
lahf
dec
fisttpll
cmp
push
dec
loope
lcall
push
enter
arpl
push
xchg
stc
dec
lret
xchg
out
and
ja
ljmp
pop
fs
repnz
push
push
sbb
jp
pop
jns
das
sub
xchg
lcall
lcall
shl
stc
scas
sub
sbb
inc
push
dec
jo
pop
ret
jbe
in
ljmp
test
add
into
imul
push
data16
test
out
out
clc
mov
and
sahf
out
add
xchg
nop
int
fucomi
and
call
scas
inc
loop
and
jmp
adc
push
ret
aas
in
dec
mov
outsl
adcb
lcall
mov
sbb
cmp
or
mov
incl
hlt
and
adc
adc
xor
push
clc
pop
es
jno
adc
xor
pop
xchg
mov
idivb
mov
dec
ret
repz
lcall
pop
scas
popa
cmpl
add
bound
adc
aas
xchg
shrb
mov
xor
scas
movsl
and
push
cwtl
or
add
inc
inc
call
test
movsb
sub
sub
es
nop
lcall
sbb
pushf
lcall
or
pop
sbb
xor
in
pop
scas
dec
jbe
pushl
stos
shrb
test
add
dec
mov
sbb
add
xchg
jmp
jl
mov
andb
inc
sbb
adc
testl
and
adc
int
add
dec
mov
incl
xchg
pop
inc
mov
xchg
pop
in
mov
aad
adc
pop
push
pop
clc
xchg
imul
push
inc
mov
push
int
pop
push
jle
insl
dec
push
les
mov
jnp
pop
jnp
inc
mov
ljmp
lahf
js
js
test
pop
mov
xchg
jecxz
cs
add
cmpsb
xchg
dec
jmp
push
add
xor
lret
arpl
sbb
dec
pop
in
pop
xor
rorb
dec
int
add
nop
xchg
andb
jno
lcall
add
or
arpl
jge
aas
pop
lcall
imul
fldpi
clc
scas
jo
jo
sarb
cmp
out
inc
mov
add
mov
stos
ljmp
inc
movsl
jae
mov
jns
sub
mov
in
xchg
adc
mov
call
xor
pop
cs
mov
mulb
pop
stos
fstps
sarl
jne
aam
cmp
push
sbb
mov
pusha
bound
mov
dec
xlat
push
xchg
mov
xchg
sbb
call
rclb
mov
jne
sub
cli
mov
shrb
dec
test
cmp
xor
sbb
jns
sbb
mov
sub
jmp
js
mov
jmp
ja
cli
jb
xor
mov
inc
loope
call
add
pop
std
lods
stos
into
fsubs
dec
insb
mov
jno
sbb
movsb
and
sub
lds
das
rclb
cld
fistl
movsl
xor
add
cmp
out
mov
aaa
loop
inc
cmp
es
dec
jb
imul
or
xchg
jg
imul
mov
cmp
and
pop
cmp
and
test
mov
movsb
push
lods
cmp
call
aaa
push
mov
not
sbb
rolb
popa
jmp
addr16
jbe
sahf
mov
incl
jne
push
cwtl
xor
jne
sbb
lahf
jl
adc
nop
in
imul
gs
jnp
pop
mov
lcall
bound
mov
sub
imul
ds
adc
call
jl
mov
cmp
cmpsl
or
dec
adc
mov
decl
pop
sahf
cs
sub
xchg
lcall
inc
int
jmp
inc
xor
incl
and
aam
fcompl
pushf
adc
inc
adcl
mov
fildll
and
jnp
and
imul
sahf
push
and
cli
and
or
jecxz
frndint
mov
lds
sti
sub
sub
incb
pop
cmp
lcall
push
pusha
adc
fs
xchg
pop
cltd
push
add
sub
and
dec
fwait
cmp
inc
or
xor
sub
mov
aam
fisubl
daa
push
mov
jle
pop
jns
int
add
mov
nop
fs
test
iret
dec
daa
sub
std
ljmp
xor
add
cli
xlat
fadd
incb
dec
loop
inc
jp
incl
rcrb
and
gs
stc
fistpl
jp
fldl
pop
insl
adc
popa
daa
or
pushl
out
leave
lods
mov
mov
mov
fcom
xchg
and
mov
gs
sti
sbb
data16
ljmp
popa
mov
push
outsb
inc
lods
pop
decl
pop
lods
int3
and
cmp
pop
sub
rcll
test
std
decl
add
outsl
in
adc
test
dec
arpl
into
and
push
adcl
pushl
dec
sub
push
arpl
insl
pop
int3
cmp
mov
fdivs
mov
mov
shll
pop
stos
fstpt
and
filds
mov
push
add
int3
sub
ljmp
ss
jns
sbb
xchg
push
jbe
ja
jns
out
pusha
xor
jnp
jb
mov
incl
cmp
pop
das
aaa
push
das
out
xor
call
sar
test
gs
sbb
decl
jge
jp
or
jmp
mov
pop
js
inc
xorb
xchg
and
incl
pop
sbbb
adc
ficoms
sub
xchg
int
fdivp
xor
cld
mov
mov
lcall
in
cmp
jno
inc
pop
incl
inc
and
and
lcall
push
push
push
sbb
jle
scas
or
loope
adcb
rcll
in
pushf
and
das
mov
mov
notb
lods
es
fildl
jl
add
jmp
pushl
call
sti
gs
mov
in
or
lahf
lret
aam
cmc
data16
ficoml
stos
pushl
fadd
dec
test
dec
das
addr16
add
and
sbb
and
call
pop
in
aas
push
sub
aas
in
sbb
pop
cmp
cmp
or
mov
in
lret
int
orl
sahf
sbb
sub
jbe
addb
and
shll
add
cld
and
jae
or
push
and
popa
jecxz
inc
or
lock
or
mov
mov
sbb
sub
aad
jo
rep
insl
mov
and
dec
mov
pop
call
push
add
sbb
out
out
xorb
mov
xor
dec
fwait
cmp
cmp
call
cli
xchg
popa
test
push
pop
push
xchg
push
mov
nop
fidivl
add
das
js
pusha
pop
dec
repz
cli
pop
xor
mov
addr16
push
mov
mov
cmpb
inc
jns
and
xchg
incl
mov
cli
lahf
fldt
jp
jge
push
sub
je
adc
sti
test
fcmovu
xchg
pop
cltd
push
lret
jg
cmpsb
xor
loop
jg
mov
loopne
jbe
ss
xor
pop
mov
decl
mov
sub
fmulp
fiaddl
arpl
mov
sub
jnp
push
inc
cwtl
rclb
push
jne
adc
shll
cmp
pop
test
lds
fs
filds
lods
ljmp
les
cmc
xor
xlat
mov
push
lret
lret
jmp
out
and
pushf
pushf
cmp
xchg
jns
add
dec
stc
lahf
dec
ljmpw
int3
icebp
sbb
lret
decl
sbb
mov
sub
jecxz
mov
and
jg
fisttps
mov
insb
mov
and
hlt
and
lret
push
and
sbb
add
xor
call
in
pusha
out
jmp
cmpsb
push
shrb
icebp
fnstcw
popa
mov
cwtl
lahf
mov
ljmp
adc
mov
imul
fscale
into
and
pop
ret
das
jecxz
hlt
add
xlat
cltd
xchg
push
adc
pop
push
jbe
mov
add
inc
dec
sub
push
cmp
inc
jo
ljmp
jmp
xchg
pop
push
out
xchg
jb
and
ret
mov
push
jl
roll
adc
cmp
iret
or
rcl
popf
mov
pop
arpl
mov
jno
enter
aas
push
data16
pushl
xor
sub
out
bound
inc
inc
mov
jne
add
and
incl
push
inc
jno
cmp
aad
mov
or
or
gs
push
fiaddl
aas
popa
mov
aaa
std
add
inc
sub
xchg
cmpsb
pop
push
imul
jno
push
rcrl
add
mov
mov
xchg
cmp
adc
and
and
pop
negb
dec
in
jae
and
fwait
jns
adc
test
in
sbb
or
incl
repnz
sub
inc
or
cmp
mov
sub
pop
adc
bound
ljmp
xor
mov
and
mov
icebp
cltd
mov
mov
xor
outsb
lock
jg
add
fdivrl
and
jmp
ljmp
mov
mov
sub
movsb
jp
out
das
or
jle
stos
jb
pushl
ds
cmp
push
jno
jecxz
push
mov
fsubp
adc
and
sar
jmp
addr16
fisubrs
cmp
xor
xor
bound
or
mov
push
cli
mov
xchg
lcall
ljmp
or
insb
adc
fdivrs
je
dec
adc
jp
insl
ja
aaa
divb
mov
fiaddl
lcall
add
ret
ljmp
incl
push
imul
stos
xadd
pop
xchg
call
jg
out
mov
fcmovnu
nop
out
push
or
test
mov
mov
xor
add
ret
xchg
icebp
mov
pop
jno
movsb
sbb
js
mov
cmpsb
inc
cmp
push
lret
or
int
movsb
fcmovnu
pushf
out
inc
dec
sbb
sub
out
push
cld
mov
and
push
or
pusha
and
insl
in
ficoms
addb
push
cmc
sbb
inc
and
in
std
scas
inc
test
test
lahf
xchg
sbb
orl
pushl
std
lods
call
sub
in
aas
jo
cs
or
sub
mov
sbb
ljmp
mov
cmp
sub
lret
aad
into
cmp
mov
mov
push
and
cmc
pushl
sub
aam
out
aaa
pushf
aad
decb
fcmovnu
into
sub
sbb
iret
movsb
scas
jns
out
xor
lea
das
frstor
push
mov
insb
ja
inc
es
xchg
mov
fstcw
enter
mov
clc
push
cld
jmp
fs
icebp
or
sahf
mov
call
xchg
ret
loopne
aaa
subb
ja
in
mov
rclb
pop
into
iret
xchg
sbb
orb
cmc
xchg
pop
dec
and
clc
stos
sub
xchg
bnd
mov
test
lds
in
test
js
repnz
das
addr16
xor
jmp
sub
lcall
push
fiadds
mov
es
movsb
hlt
cld
clc
mov
xchg
incl
jbe
or
std
in
clc
or
add
xchg
das
cmp
ja
mov
dec
ljmp
sti
andl
pop
sub
loop
leave
sbb
ja
jno
insl
std
push
jo
xchg
ret
mov
lcall
enter
sbb
mov
bound
xchg
pop
les
imull
mov
mov
stos
jmp
loopne
dec
out
xlat
xchg
jmp
pop
xchg
je
cmp
lock
out
fcmovnu
pushl
fmul
outsl
mull
jo
fcoml
fnsave
or
xchg
lock
xchg
jne
jno
iret
push
aad
lock
adc
add
sbb
jnp
push
idiv
rolb
cmp
hlt
fwait
dec
fdivp
idiv
pushl
je
xchg
dec
iret
jne
test
cli
mov
mov
push
jp
sbb
push
or
fldt
push
jp
movsl
pop
adc
nop
or
rcrl
sbb
lcall
sub
les
call
lock
push
xchg
dec
mov
cli
dec
sub
pop
and
leave
in
negb
das
jns
sub
sbb
push
stc
push
mov
int3
mov
out
mov
test
out
push
cmc
dec
sub
arpl
sarb
idiv
lcall
inc
sub
shrb
gs
inc
xchg
mov
sbb
js
out
mov
orb
lea
rcrl
xchg
outsl
inc
popf
jo
mov
and
mov
mov
out
lahf
mov
inc
add
mov
mov
lcall
in
je
popf
aad
pop
lock
sti
imul
pop
add
xchg
mov
push
mov
push
mov
add
in
repnz
cmp
fdivr
cmp
rcrl
or
jmp
and
es
add
scas
adc
dec
push
cwtl
jns
add
int3
jbe
scas
cli
mov
pop
stc
fsts
stc
int3
mov
pop
cli
lods
jl
loopne
jg
xchg
cltd
add
stos
cmpsb
sbb
shl
lds
cmp
cmp
in
mov
rclb
call
js
add
xchg
cmp
xchg
das
clc
lcall
insb
push
enter
mov
and
jae
add
mov
xchg
mov
push
ret
repnz
das
mov
movsl
cmp
test
pop
xlat
roll
mov
xchg
mov
inc
cmp
and
mov
fcmovnb
lods
mov
xor
mov
mov
popf
inc
leave
fcomip
push
sbb
std
test
lods
xchg
push
push
dec
push
mov
xor
fs
mov
imul
xchg
cmp
jecxz,pt
pushl
sbb
push
sbb
ret
dec
sbb
and
out
push
aas
int
test
xchg
out
add
clc
lcall
xor
pop
xchg
mov
cltd
push
push
adc
stos
add
pop
push
jp
movsl
aaa
inc
inc
movsl
call
sbb
sub
and
jae
stos
cli
test
cs
call
cmp
cs
lret
lods
inc
sbb
cs
icebp
cmp
std
stc
cmp
mov
add
in
push
mov
fmull
xorl
lcall
lret
and
dec
jo
and
push
push
repz
dec
test
mov
call
loopne
lds
adc
sbb
xchg
mov
decl
jae
inc
sbb
dec
push
out
inc
movsb
stc
or
in
rcll
repnz
clc
ret
cmp
fisubs
xchg
xchg
cmp
imul
pop
lea
mov
call
push
mov
call
pushf
adc
pop
insl
jmp
fnstenv
cmpsb
nopl
shl
pop
fwait
ljmp
xchg
push
jle
lds
pop
andl
xor
push
lods
pop
cmpsb
cs
fcomip
pushl
repnz
jle
cmp
enter
arpl
pushl
mov
jb
movsl
ss
das
xchg
shll
push
cltd
add
iret
sahf
add
dec
fdivp
pop
push
xchg
pop
lods
xchg
pusha
repnz
sbb
int3
adc
decl
aam
jecxz
jp
cmp
shlb
jge
fldl
xchg
imul
or
std
push
adc
bound
lahf
mov
and
dec
mov
cmc
mov
jg
fwait
jne
xor
sub
les
inc
jg
and
mov
pop
pop
cld
lcall
daa
mov
pushf
bound
scas
xchg
popf
stos
dec
iret
inc
pop
pop
push
and
decl
xchg
mov
sahf
scas
loope
out
gs
pop
xchg
pop
popf
ja
dec
jecxz
call
inc
cmp
jo
aam
jg
xchg
cmp
mov
cmpsl
test
jne
push
jns
out
ret
pop
out
ret
xchg
push
repz
ljmp
and
xor
sbb
idivl
mov
pop
stos
add
enter
sub
push
out
insb
lcall
test
xchg
les
negb
movsb
xor
pusha
cmpsl
js
scas
icebp
pop
decl
out
out
ret
loope
dec
rclb
dec
sub
lcall
mov
mov
jg
les
cwtl
push
mov
out
shlb
sbb
mov
ds
dec
ljmp
incl
mov
mov
cs
jnp
push
mov
lock
xor
pop
and
cmp
sbb
call
fbstp
xor
adc
jnp
fucompp
jmp
cmp
ror
imul
orl
in
mov
dec
jae
notl
sub
ljmp
inc
pop
jle
fwait
xor
subl
stos
mov
addr16
xchg
xor
mov
sbb
pop
nop
jge
leave
push
mov
mov
ficomps
incb
mov
lret
xlat
je
cmp
sbb
orl
dec
lcall
and
clc
or
cmp
cmp
mov
mov
fildll
xor
pushl
lds
mov
cld
sarb
sbb
xchg
arpl
inc
lcall
rcrb
dec
jp
mov
sti
roll
lds
dec
mov
jg
mov
mov
out
mov
xchg
xchg
and
mov
mull
jl
ja
pop
fcomps
dec
leave
sub
inc
in
aas
les
sbb
in
sbbb
pop
hlt
leave
outsb
add
je
fwait
repz
aad
repnz
out
add
add
jl
add
cmp
test
out
mov
jmp
or
cmp
sub
add
das
dec
ret
cmpsb
or
decl
test
pop
xchg
push
push
mov
xor
sub
call
decl
insl
addb
pop
and
sahf
or
push
inc
btc
adc
testl
lcall
cmp
push
adc
lock
pop
popa
mov
and
and
int
das
pop
std
pushl
dec
push
out
xchg
cld
dec
pop
and
and
addb
js
pop
fdivrp
frndint
cs
ds
or
ret
pop
call
mov
fstpt
negb
fcomip
clc
repz
imulb
insb
mov
in
leave
sub
sub
aam
add
xor
jg
mov
sbb
pushf
cmp
push
mov
mov
cmpsl
sbb
data16
jmp
adc
popa
imul
pop
outsb
inc
call
lret
addl
and
sbb
cmpb
inc
fcom
cmp
ljmp
arpl
jge
mov
test
push
adc
lods
jl
jmp
adc
push
incl
xor
in
xchg
imul
lods
in
cmc
jmp
xchg
adc
mov
pop
add
int
jne
lahf
inc
sarl
call
pop
push
jmp
jo
xor
pop
ja
cmpsb
stc
cmpl
ds
jmp
xchg
cmp
cmp
push
push
push
add
mov
scas
popf
inc
xchg
scas
pop
fbld
jbe
in
mov
or
or
enter
loop
sub
mov
int3
mov
sbb
ds
adc
loop
sub
push
xor
aam
mov
xchg
adc
push
rcrb
shr
mov
leave
mov
fidivl
hlt
aaa
xorl
xchg
xor
xchg
aas
lret
xorl
in
std
repnz
pop
pop
aad
in
in
mov
fdivrs
fsub
cmp
test
dec
dec
xlat
or
pop
aas
int
inc
incl
xchg
mov
push
sbb
and
fmulp
adc
icebp
lds
sbb
sbb
prefetch
push
dec
aam
or
add
cld
movsb
sar
fwait
loope
movsl
lea
sti
mov
call
jne
rcll
js
lcall
fcompl
orb
pop
cwtl
mov
jecxz
lods
insb
adc
clc
outsb
push
push
fcmovb
call
push
clc
out
cmc
leave
ljmp
hlt
push
inc
jns
addr16
scas
outsb
pop
dec
push
and
jnp
insb
pop
dec
cld
mov
sub
jb
shl
jne
add
push
imul
lcall
faddl
pop
pop
in
inc
pushf
mov
jnp
mov
fsts
lcall
cmc
xchg
jecxz
mul
daa
popf
ljmp
je
cmp
cmp
insl
jnp
ljmp
xchg
and
movsb
fsubr
loope
decl
cmp
push
mov
cmp
decl
sahf
dec
dec
add
or
insl
jno
jbe
jl
adc
bound
mov
jp
out
pop
xlat
add
test
pop
ds
push
insl
mov
dec
cmp
int3
mov
imul
imul
test
ljmp
inc
push
push
mov
sub
aam
sarb
cmp
leave
push
je
insb
and
sub
clc
ljmp
cmp
scas
mov
jnp
shrl
cld
stos
or
jnp
or
mov
ljmp
xchg
out
inc
cmpl
out
xchg
pop
adc
mov
xchg
test
call
lcall
mov
xor
sub
lcall
add
cmc
and
push
ljmp
adc
mov
ljmp
inc
push
xor
pop
clc
decl
cltd
aaa
mov
adc
push
stos
or
call
jmp
sti
rclb
mov
fiadds
jb
mov
pop
lcall
scas
out
cmp
jmp
mov
adc
xorb
xchg
jmp
insl
insl
mov
das
pusha
mov
test
adc
jg
pushl
arpl
nop
xchg
sahf
xchg
add
and
sti
lret
mov
fwait
lcall
pop
sub
mull
out
cmpsl
xor
pop
and
sbbl
repz
cmp
sbb
stc
sbb
or
xchg
push
mov
adc
inc
jg
fs
shlb
mov
pop
jae
loop
mov
cmc
mov
ljmp
jl
test
mov
pop
packsswb
icebp
sbb
pop
sti
mov
or
xchg
push
stc
test
push
in
lret
lahf
or
push
mov
out
and
mov
das
sar
and
xchg
test
adc
je
mov
mov
into
pop
mov
jg
jmp
call
mov
xchg
mov
mov
dec
mov
mov
adc
test
cmp
add
outsb
int3
clc
notl
lods
or
mov
out
lods
jmp
sahf
mov
mov
and
insl
test
add
loopne
lret
addr16
loope
mov
in
jp
xchg
data16
call
mov
repnz
cwtl
inc
dec
dec
fnsave
fldenv
sbb
jg
pop
fbld
cmpsl
int3
push
ret
add
lods
lcall
pop
fdivrp
mov
inc
loopne
dec
inc
xchg
fimuls
std
movsl
mov
pop
push
sbb
ss
ljmp
xchg
lock
hlt
or
push
test
icebp
xchg
pop
js
stos
inc
ljmp
jnp
jle
ds
adc
scas
movl
cmp
rcrl
mov
pop
pusha
dec
push
ficoml
sti
lods
mov
pop
stc
sar
push
inc
jg
push
test
ljmp
push
mov
jae
inc
lret
sbb
out
repz
outsl
xor
jl
ret
mov
xchg
decb
inc
ss
leave
stos
in
xor
mov
or
push
call
fisttps
push
xchg
inc
mov
sar
test
add
mull
adc
dec
pop
fbstp
push
push
dec
mov
in
aad
and
jnp
jns
in
call
js
add
lods
adc
pop
mov
sarl
sub
lret
mov
scas
testb
push
inc
xchg
out
test
push
in
jmp
shrl
cmp
sbb
icebp
mov
call
add
jae
push
add
pop
sahf
stos
xor
pop
in
cmpsl
fistpl
pushf
pusha
sbbl
mov
inc
sbb
and
cs
call
orb
call
or
dec
xchg
jecxz
test
roll
out
push
xchg
sub
jne
cs
stc
sar
ljmp
std
sbb
mov
jmp
sbb
divl
shr
sti
and
pusha
jg
popa
pop
test
dec
inc
cmp
cltd
sub
repz
push
ss
jns
push
cmp
jb
inc
decl
sub
aas
cld
add
out
push
inc
mov
test
xchg
push
mov
inc
inc
jb
outsb
inc
mov
sar
decl
stos
adc
pop
pop
push
bound
cli
lods
sbb
pop
push
negb
xor
push
decl
dec
xor
push
mov
xor
insl
dec
push
aaa
mov
call
dec
lea
divb
nop
xor
fsts
out
andl
movsb
inc
loopne
fdivr
jmp
cmp
andl
lods
cli
xor
int3
scas
pop
ret
popf
lret
ljmp
gs
add
jmp
inc
sbbb
lods
xor
pushf
outsl
nop
repz
mov
repnz
sahf
in
cltd
mov
mov
dec
loopne
decb
pop
pusha
cmp
push
sub
inc
fwait
pop
out
xorb
call
mov
sarl
xor
scas
mov
lcall
xchg
subb
stc
cli
pop
mov
cmp
pop
inc
cmp
mov
dec
sahf
cli
sub
inc
xchg
clc
jmp
mov
add
push
orl
inc
mov
es
decl
or
push
sub
faddl
lea
mov
mov
call
rolb
in
cmp
xchg
jg
imul
iret
inc
stos
mov
and
ljmp
jmp
push
aas
pop
xor
adc
dec
push
xor
xor
icebp
pushl
lods
pop
repnz
push
jbe
jp
push
shlb
and
aam
cmc
or
cmc
je
out
cmp
fildll
fnstcw
sbb
xorb
sub
xchg
lods
sub
xchg
call
mov
loopne
sbb
sub
rep
cmp
sbb
in
ret
and
jmp
mov
push
in
in
rcrb
ljmp
mov
and
and
and
out
mov
rclb
ljmp
fstpt
pop
das
aam
pop
xchg
lret
cmp
lahf
inc
pusha
cld
aam
cmc
sti
mov
jnp
sti
mov
aas
sahf
and
insb
push
and
add
push
sbb
lahf
outsb
or
inc
lahf
decl
stos
cmp
cmp
mov
in
call
aad
loop
dec
xor
in
pushl
cld
out
push
dec
int3
push
mov
lret
cwtl
jo
add
inc
jns
sbb
jl
pop
xchg
or
hlt
out
jl
mov
fstps
cs
mov
incl
nop
xchg
sahf
pop
inc
inc
push
xor
push
mov
xchg
pop
rcrl
sub
pop
pop
cmp
adc
xor
ss
xchg
pop
fs
ljmp
xchg
mov
or
mov
jp
or
xor
loop
test
xchg
movl
mov
inc
push
cmpsl
mov
sub
std
fildll
test
cmc
bswap
sbb
cmp
sub
mov
jno
jle
shll
push
scas
push
dec
stos
in
sbb
xchg
dec
lret
ja
lcall
insb
in
sub
fwait
dec
and
cs
mov
repnz
inc
das
or
jae
sub
aaa
mov
call
popf
lods
mov
sbb
insl
pop
dec
pop
test
dec
lahf
add
clc
cltd
inc
adc
xchg
stc
mov
jge
cmp
pop
add
les
cltd
stos
testl
or
add
inc
call
push
push
std
pushl
pop
jno
nop
jnp
fistpl
outsb
pop
call
daa
pushf
mov
addr16
mov
bound
outsb
inc
mov
xor
test
jno
lods
mov
loope
jmp
vmptrld
or
sti
pusha
push
inc
jmp
ljmp
jg
aad
mov
or
push
lahf
mov
repz
and
call
call
add
dec
jb
sti
cmpsb
jbe
cmp
repnz
sbb
jg
decl
add
addl
in
push
mov
jle
adc
lcall
mov
mov
or
cmp
sbb
pop
in
jbe
pushl
decl
shll
aam
push
mov
jne
push
mov
or
sti
dec
fnsave
ja
sub
and
sbb
adc
xchg
pusha
mov
jl
incl
loope
je
sarl
jne
mov
xchg
fdivs
add
jmp
outsb
jge
jge
pop
push
xchg
fldl
mov
test
dec
sbb
push
leave
adc
xor
jmp
push
jge
ficomps
xor
or
fwait
lret
stos
pop
or
jno
xchg
in
push
lea
cld
inc
jo
push
cld
jns
cs
mov
insb
lahf
xchg
out
or
pop
std
call
mov
dec
mov
adc
mov
adc
scas
in
adc
addb
xor
push
pop
scas
and
or
out
mov
push
out
jmp
pop
jle
ret
jmp
mov
lods
push
js
mov
mov
cmpsl
outsb
mov
fidivs
mov
xchg
sbb
mov
std
psubsb
inc
or
test
jl
sub
ret
pop
popa
jp
mov
je
or
jnp
and
fdivr
xchg
or
sub
push
mov
in
ljmp
in
or
fldenv
rep
cld
lods
sbb
mov
inc
mov
pushl
bound
icebp
pop
xchg
mov
push
mov
cmpsl
lods
cwtl
imul
stc
adc
aas
movsb
andb
nop
mov
mov
pop
mov
stc
mov
sbbl
pop
ds
adc
xchg
gs
orl
int
arpl
add
and
mov
test
faddl
rorb
ljmp
and
xchg
mov
mov
mov
xchg
adc
xlat
or
aam
in
pop
loopne
decl
jbe
mov
sahf
inc
xchg
fwait
pop
fmull
roll
negb
popf
out
in
xchg
push
fdiv
and
fwait
into
data16
add
add
sub
in
test
andb
rolb
push
sbb
pushl
xchg
insl
mov
lock
lea
in
sahf
popf
rorl
js
pop
rol
aad
mov
adc
mov
mov
lret
je
jp
jge
in
sbb
push
xchg
int
into
and
cmpsb
lock
pushl
sahf
inc
jg
aaa
pop
xlat
add
dec
or
test
mov
cmpsb
je
mov
fbld
xor
movsb
pop
std
sub
arpl
mov
in
sar
ljmp
dec
and
jp
cmp
fidivrl
cwtl
movsb
sub
add
inc
and
lret
pushl
sbb
nop
shlb
test
data16
dec
fistpll
add
mov
mov
sar
decl
pop
adc
mov
adc
lcall
test
es
sahf
xchg
or
cmc
dec
shr
or
call
loopne
ret
lcall
fadds
into
jae
loopne
out
incl
test
cmp
xchg
es
or
mov
out
mov
dec
mov
scas
adc
xor
xor
test
stos
and
xchg
dec
pop
roll
out
cli
jmp
add
out
jns
lahf
lea
les
jecxz
aaa
stc
fs
add
lcall
fldt
xor
mov
and
dec
jb
inc
add
cli
incl
sub
test
int3
cli
lcall
pop
pop
dec
test
jp
in
loope
jg
and
xlat
sub
scas
add
push
or
jmp
mov
hlt
inc
int3
jmp
xor
stc
push
dec
imul
and
jb
push
mov
mov
mov
inc
rorb
push
jl
into
and
fbstp
daa
movsb
mov
test
mov
mov
and
mov
pop
es
xor
xorl
jg
xchg
enter
arpl
lahf
lods
mov
fdiv
icebp
or
lret
lahf
fnstcw
cmc
ljmp
out
mov
sar
xor
stc
notl
inc
rol
popf
js
inc
fwait
cltd
add
jb
and
aas
xor
xchg
ja
push
inc
mov
inc
mov
incl
mov
mov
xor
rcrb
xchg
sub
call
jecxz
in
add
jo
popa
lret
mov
mov
out
mov
pushl
cld
mov
sbb
adc
mov
and
or
inc
lcall
mov
pop
notb
into
ljmp
incl
adc
xchg
je
lods
or
popa
leave
and
and
and
cmp
fs
xchg
push
add
adc
addr16
push
in
out
lds
mov
push
ljmp
xchg
adc
ds
xchg
lods
lods
mulb
sbbb
and
ljmp
xor
pop
mov
cmp
xor
ret
push
pop
sarl
into
dec
push
aam
into
insb
scas
jge
out
ret
pushl
fnsave
mov
in
fmull
rcll
jp
daa
cltd
pop
loopne
addr16
pop
cwtl
mov
in
xor
xchg
sar
dec
xor
push
fiaddl
adc
sbb
fcomip
jns
subl
push
and
dec
cmc
lcall
xchg
punpckhwd
xchg
push
dec
jle
jno
lock
aam
ja
pop
inc
inc
pop
jae
lcall
imul
sbb
xchg
add
icebp
cmc
scas
mov
jno
sar
or
ljmp
jp
cmpsl
jp
inc
pop
loop
stos
xor
in
dec
cli
jns
call
mov
add
ja
je
notl
xchg
sbb
dec
push
jo
fs
call
pop
insl
adc
inc
inc
mov
mov
shr
pop
test
lcall
pop
jl
cmp
fstl
push
and
movsb
adc
ljmp
xchg
lock
and
sub
mov
adc
mov
ret
enter
pop
cmp
scas
push
ret
push
leave
loope
sbb
in
cld
push
and
and
inc
add
ja
lea
mov
or
sbb
fcompl
leave
ljmp
pop
and
mov
push
loope
and
out
sbb
pushf
aam
clc
push
xor
out
ficoms
aas
rcl
mov
jp
scas
imul
lds
je
lcall
sub
sub
or
add
inc
bound
mov
bound
test
pop
fcmovnu
divl
call
cmp
or
inc
scas
test
adc
jbe
pop
cmp
outsl
adc
cmp
lcall
fnsave
call
mov
or
lods
push
inc
add
jecxz
mov
lcall
add
scas
mov
in
fisttpl
adc
cmp
adc
jg
mov
xor
mov
mov
cmp
ljmp
std
jbe
mov
mov
in
test
rcl
push
incl
popf
xchg
xor
sahf
mov
jo
pop
iret
stos
in
sbb
xchg
mov
sub
inc
and
mov
ss
pop
sub
lahf
sbb
aad
mov
enter
decl
out
cwtl
cmc
hlt
pusha
mov
dec
icebp
fdivs
rol
push
andb
pushl
arpl
dec
adc
push
mov
xchg
cmp
xor
sti
push
cld
incl
pop
sbb
cmpsb
mov
fisubl
and
cmc
test
sub
ja
push
adc
mov
sahf
pusha
inc
sbb
xor
rol
test
xchg
xchg
imul
xor
nop
ljmp
inc
shlb
lds
jmp
std
pushf
inc
xchg
jae
xchg
mov
je
jno
add
jg
aas
out
push
inc
jge
fdivrl
or
bound
mov
addb
mov
data16
or
mov
sbb
xor
fdivrl
gs
cli
pushl
out
xchg
leave
fcmove
lods
dec
lock
outsb
lods
lcall
push
fwait
push
je
add
fs
pop
lea
and
xor
lcall
popa
lcall
inc
fscale
test
and
shlb
cli
aas
inc
jp
call
fmuls
movsb
mov
in
cmp
aam
ja
xchg
test
and
push
push
fwait
arpl
test
ljmp
ljmp
fsubrs
push
je
imul
dec
movsb
cmpsl
repz
dec
shlb
mov
mov
inc
cmpsb
clc
pushl
addr16
loopne
push
pop
les
cltd
jae
pop
xchg
test
testl
ljmp
mov
mov
arpl
or
call
test
mov
fsubs
inc
ljmp
test
fcoml
pop
addb
mov
mov
dec
dec
in
dec
jbe
in
dec
mov
sub
pop
xor
lcall
sub
dec
fsubs
loopne
pop
sbb
out
inc
mov
addb
ljmp
xor
scas
addb
sub
cmp
xor
add
mov
mov
adc
ret
push
xchg
arpl
xor
les
sbb
lcall
push
xchg
jg
shrl
incl
in
into
call
xchg
pusha
fmull
scas
movsb
dec
int
inc
mov
stos
cmp
and
cli
loope
fwait
jmp
ljmp
xchg
mov
lahf
ljmp
cmc
pop
pop
leave
lods
add
xchg
popf
adc
ljmp
and
ja
and
push
mov
and
hlt
insb
add
jecxz
sbb
adc
pushl
in
stos
sbb
fdivr
sbb
ljmp
xchg
jb
adc
jmp
mov
pop
cmc
sub
mov
inc
and
imul
call
mov
mov
notb
das
xlat
sub
cmp
or
or
jg
add
inc
or
or
or
mov
pushf
repz
fdivs
xor
jmp
lret
xchg
mov
andl
lds
cmpsl
popf
jge
fcmovnbe
mov
cld
mov
int
push
icebp
mov
mov
aas
mov
pop
icebp
ret
lea
pushl
mov
int
dec
addr16
sbb
cmpsb
lods
pushw
popf
rcrb
push
clc
out
pop
adc
es
fs
incl
jnp
jb
hlt
and
icebp
std
or
xchg
aad
push
dec
pop
xlat
iret
adcb
jmp
int
mov
or
dec
aad
jb
ljmp
cmp
inc
adc
stos
push
push
pop
mov
rcrb
jno
out
push
or
xchg
lcall
ljmp
push
fisubl
dec
das
adcb
lcall
xchg
call
loopne
aam
mov
dec
ret
and
imul
ret
lock
xchg
out
clc
call
movl
xchg
dec
pop
ljmp
test
ljmp
adc
sti
pop
repnz
stc
call
dec
cmpsb
imul
pushf
fdivrl
fsub
loop
imul
mov
incl
into
sub
xor
cmp
xor
xchg
adc
xchg
cwtl
dec
push
xlat
mov
add
push
shrl
pop
xchg
pop
lahf
push
flds
popa
stos
push
inc
js
call
cmpsb
sub
sbb
cmpsl
jnp
shll
int3
cmpsb
jo
cltd
xchg
xchg
pushl
push
fstpl
pop
push
dec
fisubrl
out
mov
loope
cmp
leave
inc
inc
mov
mov
xchg
push
xchg
addl
shll
enter
push
ja
mov
push
inc
pop
das
pusha
adc
fwait
pop
insb
inc
fstp
sub
sub
mov
jl
mov
fisttpl
xchg
sbb
lds
mov
mov
incl
pop
xchg
stc
inc
movsb
sti
subl
bound
mov
pusha
xor
call
std
push
sub
in
ret
iret
jbe
fstpt
call
into
sub
push
sub
insl
dec
ljmp
mov
jne
mov
xchg
mulb
lcall
dec
adc
fwait
dec
arpl
repnz
in
ja
fisubl
addr16
outsl
mov
dec
or
and
mov
stos
and
or
xchg
inc
rcll
rol
fnstcw
adc
imul
mov
mov
insl
jbe
sbb
mov
aaa
icebp
pop
pop
repz
xor
lock
into
cmpsl
xor
call
cld
and
aam
or
dec
out
nop
push
cli
jne
mov
or
push
lcall
in
jb
jge
scas
inc
xchg
mov
mov
mov
mov
pushf
hlt
cmp
dec
lds
push
sub
or
fistpl
fimull
push
xor
jae
lret
mov
sbb
lcall
shrl
dec
and
dec
ss
jl
dec
je
push
ret
fsubrl
cmc
xor
gs
pushl
fbstp
pop
inc
push
int3
es
fcomi
cltd
xchg
lock
js
incl
or
fstpt
adc
ja
jmp
inc
fmul
repz
loope
jmp
leave
xlat
push
faddl
cli
lcall
cli
xlat
or
push
daa
mov
pop
and
pop
imul
jmp
push
jecxz
sub
test
dec
mov
test
jecxz
pushl
cld
xchg
inc
xchg
stos
lock
pop
xchg
daa
js
adc
sub
out
mov
sahf
push
int3
out
inc
sbb
push
iret
lds
mov
lds
xchg
into
xchg
ljmp
push
adc
and
xchg
sbb
ljmp
in
dec
mov
jne
int3
push
pop
mov
sbb
iret
mov
out
xor
mov
ror
inc
or
mov
adc
sbb
jge
push
fimull
fmuls
xchg
mov
test
dec
mov
enter
or
fdivr
fbstp
jge
fstp
insb
sbb
loopne
lcall
xlat
fimull
dec
pop
outsl
xchg
repz
fisttps
repnz
sub
fisubrs
pop
test
mov
aaa
jns
jno
loope
movsl
mov
add
enter
loope
mov
call
mov
test
addr16
xor
jbe
jecxz
cmpsb
mov
loopne
pushl
mov
adc
addr16
adc
xor
sub
cmovge
adc
add
mov
adc
repz
cltd
push
clc
cli
shr
jne
icebp
jnp
dec
mov
pushl
cwtl
mov
data16
fadds
xor
cmp
and
mov
dec
push
in
pushl
mov
prefetchwt1
push
cld
mov
dec
cmc
lea
out
jae
rcr
add
inc
sub
in
adc
in
hlt
outsb
sbb
mov
cltd
cmpsb
js
lcall
in
xchg
shrl
shlb
xchg
pop
mov
rcr
mov
ljmp
pop
icebp
pop
jecxz
inc
xchg
dec
pop
dec
repnz
jne
mov
dec
cmc
pop
test
jecxz
subl
add
inc
std
and
pop
nop
ljmp
outsl
iret
scas
aam
call
pusha
inc
dec
mov
jno
fs
mov
mov
cmc
sarl
call
aad
mov
mov
inc
push
leave
js
sbb
dec
and
sbb
lret
call
dec
aaa
jmp
jb
lea
icebp
test
push
inc
jl
sbb
shl
in
sub
ljmp
push
les
rorb
mov
cmpsb
je
adc
lcall
das
and
jbe
shrl
push
cmp
xor
inc
das
inc
les
cmpsl
jno
int3
or
ficoml
loop
or
or
cmp
mov
cmp
out
ja
mov
push
or
mov
loop
out
lods
xchg
sub
mov
inc
cmpsl
inc
fildll
loope
andl
add
jns
adc
add
das
push
push
jecxz
sbbb
shrb
cmp
inc
pop
idivb
cwtl
or
leave
movd
pushl
std
loop
idivl
movsb
cli
sub
call
sbb
fstpt
sar
ds
push
or
adc
adc
jns
arpl
push
xchg
push
mov
mov
das
in
mov
cmp
cwtl
in
movsl
test
sub
sub
bound
xchg
arpl
mov
or
jle
addr16
in
mov
icebp
jmp
cmp
dec
popf
mov
sub
test
xchg
jmp
and
dec
inc
jle
sti
jp
ljmp
xchg
push
add
xchg
adc
mov
jns
push
push
in
in
dec
cmpsl
cltd
inc
dec
xor
shrb
lcall
xlat
mov
jl
cmp
out
adc
es
pop
jnp
add
jmp
pop
incl
dec
je
pusha
enter
fistpl
jns
xor
pushf
sub
arpl
popa
stos
incl
adc
fidivrl
lds
or
pop
dec
inc
ret
sub
call
cld
clc
jne
or
ret
jge
lds
cld
pop
lods
enter
mov
stos
je
addr16
adc
lcall
sub
clc
lcall
pop
clc
jo
addl
dec
int3
rcrb
lock
sbb
xchg
jmp
vpmacsdqh
push
clc
dec
hlt
out
sub
inc
inc
cmp
ljmp
sub
sarl
jmp
orb
adc
cmp
out
jo
jbe
movb
cmpsb
ret
ljmp
xchg
sub
lock
out
loope
mov
jnp
mov
mov
jg
xor
push
jl
fs
icebp
jle
dec
adc
mov
test
aaa
jb
inc
push
mov
cmp
mov
inc
sti
sub
pop
ss
push
mov
call
cli
or
push
xchg
dec
dec
imul
adc
mov
popa
mov
pop
test
call
pop
in
cmp
jo
or
sti
push
rorl
xchg
cmp
xchg
add
push
xchg
outsb
cltd
out
int
jb
mov
shl
cmp
sti
sbb
int
pop
lds
cmp
cs
mov
jle
movsb
sub
cmp
aaa
ljmp
icebp
outsb
mov
call
loope
loop
xor
jmp
into
int
xchg
mov
lahf
mov
and
cli
call
test
stc
mov
mov
cmp
add
xchg
jbe
jno
cmp
ljmp
xlat
mov
loopne
dec
and
or
js
fists
arpl
or
or
hlt
jns
call
inc
jne
in
cld
mov
xchg
xor
jmp
xchg
cltd
les
sub
ret
sbb
mov
xchg
fcoml
lods
sbb
mulb
aad
push
sbb
mov
push
aas
inc
outsb
ret
in
nop
stos
lret
int
jnp
in
push
mov
out
ljmp
decl
lds
push
fcomp
xchg
decl
call
cwtl
lds
cmp
add
xlat
dec
xchg
xor
push
addr16
jp
fildl
test
test
lods
call
incl
xlat
in
icebp
incb
mov
ljmp
in
and
cmp
sbb
jns
xchg
pop
push
lcall
test
dec
sub
mov
push
inc
xor
sbb
jl
lea
inc
dec
dec
or
call
pop
inc
sarb
mov
fwait
mov
lods
jae
bound
pushl
or
std
arpl
cmp
adc
cmpsl
add
mov
pushl
xor
xor
sub
jp
mov
mov
and
add
decl
in
iret
or
adc
inc
lret
call
push
sub
adc
outsb
in
add
ljmp
es
jbe
inc
sub
ds
ja
dec
or
lcall
decl
mov
daa
mov
jns
and
pop
or
pushl
inc
sbb
xor
xor
cmp
mov
sub
jle
cmp
push
cld
jg
mov
dec
sti
pop
popf
or
mov
lcall
or
sbb
fisubrs
fsubrs
stos
into
jae
movsb
push
cmp
jae
sub
lcall
jae
in
push
and
inc
mov
sbb
mov
mov
mov
xchg
push
xor
das
sti
scas
mov
shll
fldl
mov
pop
mov
and
cmp
xchg
shlb
and
adc
out
stos
mov
dec
push
data16
push
cmpsl
into
dec
jecxz
or
mov
dec
mov
fsubr
fmull
and
mov
dec
sahf
add
jnp
push
pop
lcall
mov
movsl
sbb
call
xchg
or
lock
push
shlb
call
imull
push
out
outsl
mov
inc
cld
mov
dec
add
ljmp
out
rorb
push
push
dec
sbb
or
push
mov
dec
cmp
scas
mov
push
test
jmp
pushf
ds
fistpl
out
pop
cmp
into
aas
fdivrl
xchg
push
imul
cmp
out
outsb
mov
fstps
or
orb
mov
lods
cs
or
adc
cmp
adc
pop
ljmp
sub
sub
repz
cmp
pop
inc
outsl
mov
insl
mov
out
push
fcomip
add
sub
inc
push
cmc
xor
xchg
mov
aaa
fwait
out
sbb
dec
sub
mov
add
mov
mov
ret
sbb
sub
out
jae
mov
lret
cwtl
push
mov
mov
stos
jg
rol
jnp
add
xchg
xor
inc
es
add
inc
pop
jns
aad
orb
xor
xlat
dec
dec
cmpsl
mov
ret
jmp
xor
xchg
stos
mov
jle
inc
clc
or
movsb
fisubl
in
and
add
dec
loope
insl
ret
imul
jmp
cmp
mov
aaa
rcrl
cmp
rcl
das
subl
jo
mov
data16
push
and
hlt
in
push
ljmp
movsl
ds
adc
dec
lds
dec
cld
outsl
mov
stc
add
push
roll
icebp
dec
lea
inc
out
sbb
in
mov
pusha
and
push
fcmovu
loope
sub
decl
sbb
nop
mov
inc
push
cmp
popf
lds
mov
pop
jb
out
ljmp
mov
in
jnp
mov
cld
inc
rorl
clc
pushl
inc
and
or
mov
loop
cmp
xchg
sub
bsr
iret
and
call
std
call
adc
bound
push
sub
xchg
dec
ss
dec
adcl
inc
adc
js
jo
into
and
out
out
out
mov
dec
outsb
add
push
push
jb
lcall
sbb
mov
enter
cmp
mov
mov
push
orl
es
adc
lcall
mul
incb
mov
cmp
cmp
ss
cmp
adc
add
decl
lea
cmpsb
jle
js
dec
stc
ss
dec
cmp
mov
inc
call
call
mov
sbb
ljmp
jg
or
jnp
or
push
in
jmp
out
mov
mov
je
lahf
inc
call
sub
int3
jnp
add
push
sub
push
lret
mov
ja
outsb
test
inc
mov
mov
jp
add
incl
sbb
inc
data16
lods
push
inc
and
pop
inc
mov
sbb
push
inc
decb
jge
sbb
mul
iret
and
call
or
mov
lret
adc
sbb
inc
aam
jg
mov
xor
lcall
lret
inc
jp
xor
pushf
xchg
pop
pop
xchg
xor
and
inc
fisttpl
sub
popf
and
lcall
dec
pop
pushf
addb
push
daa
xchg
add
jb
mov
dec
std
jbe
xor
pop
dec
jb
mov
ljmp
ficoms
dec
stos
pop
mov
addb
xchg
add
sbb
cltd
stos
pushl
out
das
pop
xorl
dec
loop
lahf
int3
aad
push
or
xor
incl
sub
aam
mov
mov
sub
dec
rorb
sub
clc
push
jb
xor
icebp
outsl
mov
call
and
or
mov
mov
inc
dec
mov
movsl
addl
icebp
push
imul
gs
imul
mov
mov
das
push
push
jnp
adc
inc
pop
xor
xchg
xchg
gs
sbb
inc
pusha
xlat
xlat
incl
les
mov
ss
jecxz
xor
std
jo
clc
fimull
cmp
lret
out
in
dec
cmpsb
aas
mov
cwtl
sub
xchg
fisubs
insb
repnz
xlat
push
jnp
sub
sub
pushl
mov
or
pushl
movsb
add
out
push
and
sbb
xchg
dec
out
jle
jae
out
es
xchg
lds
addr16
adc
mov
dec
dec
repnz
sub
jns
mov
pop
std
lcall
xlat
mov
dec
out
test
mov
mov
ljmp
mov
pusha
inc
orb
dec
mov
aam
push
outsb
repz
in
cwtl
dec
testb
push
std
pushl
mov
sarb
loopne
in
adc
leave
add
decl
hlt
incb
roll
int
sbb
pop
je
pop
lahf
fptan
loope
sub
repz
fdivrp
mov
cwtl
or
pop
lock
roll
pop
cmpsl
adc
inc
std
jl
lcall
mov
fs
push
cli
mov
jmp
int
adc
mov
inc
adc
mov
sbb
sub
inc
adc
pop
pop
aas
push
out
and
dec
jae
fstps
xlat
testb
fcmovb
call
sahf
mov
arpl
aad
mov
mov
push
pushl
sub
or
cmp
push
dec
push
lods
addb
or
jmp
mov
iret
ficomps
mov
xchg
stos
or
jmp
sbb
stos
or
and
es
xor
lock
pop
cltd
repnz
incl
fisttps
inc
aaa
movsl
fs
movsb
ds
mov
pushl
aas
mov
out
lock
in
sub
fldl
cli
decl
cmp
mov
stos
inc
jecxz
sub
sub
cmpsl
mov
mov
or
push
pop
sbb
decl
sbb
rclb
addr16
ljmp
cmp
sti
mov
jmp
cld
daa
mov
mov
fcoms
fs
shrb
sub
femms
hlt
sahf
dec
lods
stos
popf
mov
pop
sub
das
cmp
xchg
push
xor
inc
xchg
test
call
push
add
mov
sub
mov
adc
dec
loopne
stc
xor
inc
outsb
and
fscale
enter
incl
testb
ljmp
xor
in
xlat
fistpl
decl
inc
mov
addr16
push
push
push
cmp
pop
jle
popa
loope
mov
or
dec
and
lods
jnp
mov
in
adc
ljmp
pop
fisubl
mov
push
test
shlb
mov
xlat
jmp
int3
mov
out
xor
rcrl
int3
outsb
mov
negl
or
decl
mov
mov
fisubs
cmc
sbb
sub
mov
xlat
out
inc
fildl
mov
dec
jle
xlat
fucomip
addb
pop
push
or
cld
fldt
out
imul
dec
loop
ljmp
jp
js
pushl
pop
push
inc
xor
xor
jg
iret
lcall
inc
insl
or
test
jmp
add
pop
fs
js
imul
xor
sub
xchg
fstpt
xor
hlt
lcall
cmc
pop
cmpsb
xchg
cld
outsb
test
mov
or
mov
ror
or
vunpcklps
sbb
add
out
add
adc
mulb
scas
out
xorb
inc
pop
inc
adc
jne
call
pop
dec
roll
inc
popf
sub
insb
in
xchg
imul
or
pop
pop
in
aam
hlt
je
or
in
add
pop
rorb
icebp
sub
adc
je
inc
push
lret
lcall
push
rorl
insl
mov
cwtl
filds
jns
xor
dec
adc
xchg
bound
dec
ljmp
sahf
aad
sub
lods
add
das
mov
lea
pcmpgtw
jnp
in
lcall
mov
testb
add
push
jp
cmp
out
mov
andb
decl
in
adc
aaa
mov
pop
jg
ret
hlt
jnp
stc
and
sbb
mov
fstpt
cmp
jmp
adc
decl
fs
decl
mov
cmc
outsl
and
cltd
jg
jp
fstpl
gs
pusha
fcoml
jmp
in
pushl
insl
clc
jmp
push
mov
insl
mov
movmskps
es
mov
cmpsl
dec
mov
std
ds
xchg
ss
pop
test
jne
mov
xor
pop
push
adc
adc
into
aad
lcall
outsb
pop
mov
gs
push
ds
push
das
mov
sahf
cltd
arpl
cmp
inc
sub
pop
cmp
xchg
out
mov
mov
mov
xchg
scas
scas
incl
jbe
push
addr16
clc
incl
fistps
stos
dec
lock
xchg
add
out
push
xor
cld
mov
into
inc
stos
repnz
imul
lcall
js
sub
popf
imul
or
roll
repz
out
cli
decl
iret
js,pn
sbb
mov
fbld
cmp
mov
lcall
pop
rcr
mov
jl
xchg
jb
das
xchg
int
aas
cld
and
jg
add
cld
repnz
cmp
out
test
sub
loop
pop
test
cmpsl
jns
pop
loopne
incl
fsts
xchg
stos
push
mov
je
outsb
inc
dec
and
inc
aad
sbb
nop
lret
movsb
popf
inc
mov
push
mov
sub
cmp
add
pop
sbb
xchg
in
popa
fwait
cs
pop
sub
jle
in
add
adc
mov
fwait
pop
pop
pop
inc
ljmp
mov
mov
mov
ss
lea
cmp
shl
xor
inc
and
shl
call
cmp
mov
out
jmp
sysret
std
inc
subl
adc
add
mov
sarl
cmp
add
insb
roll
shll
dec
mov
add
popf
lea
test
hlt
mov
mov
into
popf
jle
cwtl
loope
insb
add
in
push
ljmp
sahf
inc
mov
push
cmp
scas
enter
jae
imul
decl
outsl
clc
into
ja
and
lock
imul
sbb
mov
dec
adc
movsb
fisttpll
dec
mov
adc
lods
int
push
push
xchg
xchg
jbe
pop
jnp
push
ljmp
sbb
bnd
dec
and
lcall
ret
sbb
adc
loopne
xor
adc
pcmpeqw
lods
leave
enter
arpl
jg
add
mov
jmp
mov
dec
mov
mov
fdivr
cmp
mov
fnstcw
pop
lret
pushf
repz
cs
xchg
inc
adc
mov
sub
push
push
jp
fdivl
xchg
popf
insl
je
inc
ror
cmp
push
shlb
popf
xchg
sar
dec
stos
xchg
decl
xor
mov
sbb
in
push
jmp
inc
dec
test
in
cmp
clc
pushl
add
add
stos
mov
adc
decl
int
and
and
fwait
out
inc
in
dec
nop
setnp
mov
lcall
pop
test
cmp
loope
fs
or
and
in
mov
inc
xchg
mov
cmp
cmp
sbb
insl
adc
add
cmp
out
movsl
cmp
or
and
mov
mov
mov
mov
mov
sbb
scas
ljmp
and
sti
bound
fcomps
push
js
cmp
dec
dec
arpl
push
inc
sub
inc
xor
lcall
lret
mov
dec
lods
mov
and
jmp
push
shr
and
sub
push
repnz
outsb
mov
jns
ror
dec
and
shlb
data16
xor
lods
data16
leave
jo
inc
pop
les
sub
fidivrs
in
adc
add
jmp
call
adc
sub
mov
adc
in
mov
jmp
cmp
rorb
sbb
lods
xchg
add
pushf
insl
es
dec
mov
cmc
cmp
sbb
decl
cld
sbb
xor
mov
shrl
mov
pop
sar
pushl
gs
sub
sub
ss
xor
addb
movsb
xlat
loopne
pop
pushf
mov
add
jmp
mov
cmp
jle
cmp
dec
insl
inc
or
mov
fwait
cmp
mov
clc
ss
imul
pushl
popf
cs
xlat
rcrb
dec
cmp
sti
mov
xchg
xlat
pusha
and
stos
out
mov
jecxz
out
mov
popf
xchg
js
cmc
jnp
jl
mov
adc
mov
xchg
inc
daa
xor
sbbb
cmp
and
inc
fisttpl
lods
or
sbbl
pop
cmpl
imul
sbb
nop
inc
pop
lds
mov
cmp
call
mov
loop
mov
mov
and
inc
movsb
lods
mov
and
fs
call
std
repnz
repnz
scas
cmp
xor
clc
lods
outsb
inc
cmp
int3
mov
fcomps
mulb
stos
leave
vcvtps2dq
and
and
and
pop
dec
push
and
inc
in
mov
xchg
mov
push
xor
shll
push
rorb
add
decl
scas
cmp
mov
push
insb
xor
push
or
lcall
jg
adc
loopne
test
jne
sbb
sbbl
push
jg
and
cwtl
ret
ljmp
xor
push
push
fs
cs
mov
lea
lret
shrl
loopne
and
mov
pop
pusha
jmp
ret
cld
or
out
cmpb
mov
add
xor
lock
je
aam
mov
fmuls
ret
jmp
xchg
into
clc
and
inc
popa
mov
loop
insb
aaa
adc
stc
fistl
mov
sahf
push
lds
imul
insl
xchg
mov
lock
outsb
xchg
test
loop
xchg
mov
out
dec
pop
pop
xor
adc
xor
mov
add
push
cmp
shrb
pop
rorl
sbb
scas
out
cmp
pop
pop
fcmovu
fdivl
out
jmp
xchg
adc
in
addb
sti
mov
cmp
fs
jbe
mov
cmpsb
jl
test
in
sbb
rcrb
outsb
adc
push
add
xchg
mov
pusha
sbb
mov
into
xchg
pop
xchg
call
incl
mov
xorl
lods
add
cmc
sbb
sbb
fninit
inc
jne
nop
pushl
push
xchg
pop
inc
and
jae
shlb
jns
adcl
insl
lods
negb
test
decl
insl
lock
jl
push
sbb
sbb
jp
lds
add
cmp
jbe
fildll
incl
add
leave
xor
jg
pop
and
sbb
jl
mov
std
dec
add
dec
inc
lea
push
xlat
ret
mov
mov
adc
inc
xor
mov
scas
mov
addr16
call
xchg
loop,pn
mov
lods
shrl
outsb
xor
push
ljmp
je
stc
jo
jg
fs
xor
inc
xor
jbe
icebp
push
xor
inc
mov
decl
sub
andb
or
sub
mov
jmp
xor
aaa
mov
incl
cld
jecxz
cmpsl
iret
scas
ficompl
pop
adc
fidivs
ret
sub
inc
scas
into
lahf
mov
test
sub
pop
mov
das
push
xchg
repnz
lock
fistl
jge
roll
pusha
sub
ljmp
out
add
pushl
xor
inc
or
gs
pop
dec
pop
ficompl
mov
xor
xor
jns
xor
ljmp
mov
ljmp
enter
imul
sub
popf
fucom
mov
popa
jne
and
sub
push
icebp
mov
mov
cwtl
mov
fiadds
or
fdivl
push
ljmp
inc
jb
mov
add
arpl
add
push
insl
hlt
repz
lcall
lcall
mov
lahf
mov
sbb
mov
jp
test
jmp
popa
into
dec
movsl
fs
xchg
movsl
aaa
pop
loopne
mov
mov
ljmp
lcall
lahf
mov
movsb
jecxz
add
cli
pop
das
std
fisttps
fmuls
lods
fnstenv
sub
dec
pusha
xlat
cli
jns
adc
adc
push
xor
ljmp
mov
loopne
cmp
fisttpll
imul
push
shrl
xor
jmp
mov
jg
lret
test
cld
stc
add
sbb
movsb
mov
and
mov
mov
pop
ret
cs
inc
loop
add
and
sbb
jmp
pop
jmp
xor
jl
sub
insb
xchg
dec
jle
lret
jg
add
cltd
mov
xor
ret
jne
xchg
int3
and
add
scas
jl
cltd
pop
imul
test
scas
adc
and
cmp
out
adc
inc
jno
pushl
pop
fwait
lcall
or
sub
into
lock
pushf
lea
test
test
ljmp
repnz
mov
lods
push
add
mov
decb
ficompl
and
jo
decl
jecxz
insb
subb
fwait
xchg
repnz
rcll
mov
jle
fs
call
pushf
js
fwait
or
inc
es
ret
push
movsl
enter
sub
push
aaa
and
decl
push
xor
xchg
int
inc
or
jb
mov
leave
push
aas
and
jns
subl
jge
or
outsb
add
fisubs
orb
popf
push
inc
stos
dec
fs
fidivl
rol
cmp
inc
in
inc
mov
xor
xchg
jp
pusha
cmp
push
pop
rorb
sub
sbb
cmpsl
in
scas
lret
jg
xlat
xchg
test
bnd
subl
sbb
fldl
aad
jg
or
test
shr
sti
mov
xchg
popf
cld
jmp
dec
into
cmp
daa
lock
push
gs
jmp
inc
les
mov
cmp
cmp
inc
scas
push
lahf
or
scas
pop
orb
in
and
stc
ret
enter
call
mov
nop
roll
mov
push
xor
jg
mov
and
out
and
jns
push
pop
sbb
jnp
or
cmp
loopne
std
jmp
sbb
iret
in
in
or
sub
test
test
aad
cs
push
fucomi
or
imul
mov
jg
jmp
inc
cltd
test
stc
in
mov
and
xchg
pusha
add
cli
incl
jecxz
jns
lea
into
test
enter
mov
jle
mov
pop
pop
notl
sub
add
rorb
rcrl
adc
repnz
xchg
int
or
mov
stos
push
push
mov
push
mov
mov
lret
add
inc
cld
fistpl
stc
hlt
fstl
inc
sbb
sahf
mov
dec
add
dec
daa
cmp
mov
fs
lcall
mov
jbe
mov
mov
shlb
and
out
mov
mov
lret
cmp
aas
or
clc
pushl
clc
negb
mov
neg
xchg
add
xchg
imul
mov
out
icebp
fcmovne
movsl
fildll
xchg
or
or
andl
test
sbb
movsl
adc
leave
adc
sub
jne
test
lods
out
das
sar
push
add
mov
push
xor
adc
call
ja
jnp
push
inc
mov
cld
mov
pop
repnz
int3
loopne
lcall
sub
ds
movsb
fidivrl
cmp
add
flds
lret
jo
lods
jno
call
push
push
mov
adc
jecxz
and
or
jne
jno
std
adc
lcall
arpl
jne
cmp
xlat
cmc
mov
xchg
and
lods
dec
mov
dec
adc
dec
sub
and
fildl
insb
test
pop
jl
call
mov
mov
shrb
push
inc
adc
jmp
mov
dec
jns
daa
pusha
fildl
sub
repz
jo
jno
sbb
icebp
out
movsl
pop
call
sub
sbb
push
cmp
push
insb
inc
sub
loopne
outsl
call
mov
xchg
xor
dec
andb
scas
fdivs
pop
dec
inc
lret
gs
mov
jo
lods
aas
push
jbe
ds
add
ljmp
int3
testb
imul
test
inc
jns
push
sbb
mov
stc
xchg
out
cmpsb
call
add
roll
push
inc
xchg
mov
mov
pop
out
lret
outsb
rolb
sti
js
dec
mov
out
jo
adc
loopne
jbe
mov
cmp
stc
ljmp
ds
shll
cmp
jmp
out
cmpsb
rol
and
daa
aas
lods
jo
lcall
je
stos
mov
addb
leave
mov
into
iret
or
pop
shlb
mov
mov
xchg
fwait
add
adc
cmp
stos
ljmp
ds
push
xchg
icebp
adc
sbb
clc
jmp
out
xor
mov
rcl
lret
adc
popa
rcll
ljmp
into
mov
sbb
int
in
mov
popf
pop
in
xor
fucomip
fs
jno
inc
sub
out
cli
jl
lret
jmp
xchg
sbb
popf
push
popa
push
jle
pop
cmpsb
gs
iret
fmulp
loop
jmp
push
hlt
rol
and
inc
sub
enter
ret
xchg
push
dec
aas
jae
sar
mov
inc
clc
push
pop
fwait
xlat
sti
xchg
stos
or
cmp
out
sbb
insl
imul
stos
inc
ljmp
lahf
js
sub
cmp
jae
jno
in
jmp
imul
mov
jo
test
ja
and
xor
ljmp
inc
arpl
sub
or
dec
xlat
out
pop
dec
xchg
push
and
xchg
incl
jmp
inc
mov
notl
sbb
cmc
int3
cmc
gs
call
call
inc
mov
mov
xor
mov
jmp
pop
pop
imul
push
movsl
sti
cwtl
outsl
sbb
out
dec
out
add
movzbl
ss
jns
or
mov
call
mov
ffree
loopne
add
mov
dec
sbb
fwait
or
cmp
cmp
mov
ja
jns
add
out
lock
xor
dec
stos
jmp
mov
jb
ds
push
push
adc
add
cmpsb
or
idiv
lcall
adc
xor
mov
js
and
loope
or
stc
inc
push
cwtl
imul
lods
mov
adc
inc
jmpw
hlt
mov
jmp
sub
fdivp
push
loopne
in
push
arpl
jle
les
test
bound
imul
ljmp
cli
inc
shll
or
cld
aas
pushl
cld
mov
mov
out
xchg
xor
xchg
pusha
mov
push
int
pop
inc
call
cmp
mov
push
or
xor
repz
add
addr16
push
movsl
icebp
jg
jmp
sub
test
imul
push
jbe
rclb
repz
push
sub
dec
sbbl
cmp
adc
in
faddp
mov
pop
rcr
test
dec
mov
incl
mov
cmp
push
je
adc
xor
mov
lcall
inc
jg
xchg
mov
mov
cmpsb
mov
lret
mov
ss
aas
and
inc
fs
flds
in
and
sub
cltd
adc
and
pop
icebp
pushl
cmpsb
jmp
dec
dec
ja
test
push
sahf
dec
pop
dec
jl
subl
fmul
adc
pop
mov
insb
and
jecxz
decl
lock
jmp
and
add
roll
lret
add
lcall
cmp
xor
mov
pushf
mov
in
test
jmp
pusha
xchg
xchg
inc
bound
jge
popf
mov
nop
lret
aas
cs
jae
xchg
add
mov
decl
adc
sarb
mov
and
scas
cwtl
mov
xorl
call
cld
inc
repnz
int
cs
or
mov
sub
push
and
mov
ljmp
arpl
mov
pop
sbb
fcoml
out
jno
filds
loope
cmc
xchg
and
add
pop
divl
ljmp
xlat
inc
or
data16
pop
jl
push
pushl
movsb
mov
jmp
ja
inc
not
ds
inc
sahf
cmp
std
ljmp
std
lods
push
mov
dec
cmc
loopne
in
jecxz
jle
dec
pop
mov
cld
loop
int3
jne
clc
xchg
mov
xchg
jnp
inc
movb
cmpsl
scas
sbb
cmp
js
mov
adc
pop
xchg
or
out
inc
adc
into
xchg
out
out
test
insb
mov
xchg
mov
cmp
or
ficomps
cli
mov
into
xchg
xchg
or
dec
dec
jge
imul
test
fwait
mov
inc
lods
pop
shlb
shrl
pop
iret
lcall
inc
inc
outsl
and
idiv
mov
mov
lock
stos
out
sub
stos
push
mov
sbb
mov
fidivs
pop
mov
shll
xchg
and
dec
stc
or
test
aam
scas
cli
call
push
mov
jnp
mov
add
sbb
xor
call
push
aam
movsb
pop
xor
js
inc
cld
dec
lods
iret
mov
decl
xchg
mov
cmp
sbb
dec
shll
xor
jnp
mov
xorb
fdivrs
sub
inc
repz
fiaddl
out
and
mov
scas
cs
mov
test
push
mov
int3
xlat
sbb
dec
and
push
and
push
jb
dec
dec
cmp
das
popf
mov
xchg
adc
call
outsl
ljmp
clc
test
fwait
sub
mov
repnz
jmp
cmp
clc
jmp
sub
cli
xchg
mov
sti
xchg
inc
inc
mov
test
call
cwtl
jo
fsubr
repnz
mov
dec
lret
xchg
pop
sbb
repnz
into
decl
add
mov
mov
and
xchg
lea
pop
insb
fsubrs
in
in
mov
and
fisubs
lds
mov
xor
fistpl
push
pop
xrelease
inc
ret
je
mov
xchg
div
push
sar
push
aaa
xor
sub
mov
aaa
std
adc
and
mov
scas
test
call
ret
lahf
pop
stos
addr16
mov
shrb
das
and
adc
pop
cli
pop
or
push
dec
icebp
sbb
push
enter
mov
loop
push
lcall
inc
xor
fisubl
pop
push
fcomps
jne
lret
add
dec
scas
mov
xor
cwtl
jnp
js
call
das
stc
lods
ret
es
fcom
push
xor
enter
aas
sahf
cld
and
push
add
mov
jmp
push
dec
aad
dec
jne
add
addr16
inc
lret
into
pushf
addb
push
iret
ret
adc
sti
ljmp
pop
cld
shlb
sub
loopne
mov
xor
fists
arpl
or
jg
jmp
push
lret
jnp
inc
adc
arpl
push
jecxz
push
js
mov
sti
push
int3
xor
clc
test
je
lret
outsb
dec
add
push
cmp
in
fisubs
add
sbb
icebp
decl
xorb
mov
imul
pusha
loopne
cmpsb
clc
ret
jbe
xchg
imul
cld
call
jo
inc
es
bnd
cli
xor
enter
sub
nop
jae
dec
hlt
and
cli
loope
bnd
ret
jp
jp
pop
lcall
std
insl
mov
cltd
jmp
cmpb
fsubl
mov
mov
imul
mov
adc
icebp
int3
movsb
add
jo
clc
fildll
jns
xchg
dec
and
data16
jnp
pop
out
dec
mov
stc
movl
outsl
into
mov
aas
mov
mov
ret
ljmp
mov
nop
mov
rcr
xchg
add
or
xor
out
fsubrs
je
push
test
call
jnp
dec
inc
enter
xor
mov
enter
sti
enter
sub
negb
mov
notb
pusha
push
andl
in
adc
movsb
arpl
pushl
scas
loope
clc
inc
push
push
popl
cmpsb
and
cmp
popa
ss
std
int
jmp
dec
push
mov
adc
sbb
xchg
rcl
inc
dec
addr16
xor
test
and
incl
jo
hlt
inc
cld
xchg
dec
mov
test
mov
insb
rolb
dec
inc
cmc
call
loopne
lods
inc
fisubrs
add
xchg
fstps
fisttpl
xlat
lcall
mov
dec
cmp
mov
mov
test
data16
popa
stos
pop
dec
or
loopne
jg
aas
inc
adc
sti
aam
cmp
push
les
sbb
adc
loop
mov
dec
lret
mov
or
pop
stc
shll
xor
sbb
push
fdivrs
mov
pushl
jnp
and
into
cld
xchg
push
dec
pop
xorl
jmp
inc
jmp
push
sub
or
push
jmp
test
mov
mov
and
xchg
sub
ret
inc
sub
pop
outsb
sbb
ret
mov
mov
sti
cmpsl
lds
mov
aas
loop
je
pushl
idivl
cmp
jbe
cwtl
imul
push
xchg
data16
call
ficoml
mov
mov
mov
ud0
cld
loope
fisttpll
popf
dec
out
aam
cmp
scas
roll
or
es
incl
insb
out
mov
daa
mov
decl
push
andl
pop
in
ljmp
scas
and
insb
test
mov
pusha
arpl
cli
mov
popa
loopne
fidivl
orb
xchg
lcall
int
cld
lret
add
loop
sub
inc
andl
into
pop
call
fildl
jmp
sbb
xchg
test
pop
out
ds
xchg
fdiv
push
lcall
mov
xlat
pop
rep
push
testb
int3
mov
in
mov
aam
jmp
pushl
es
cmp
dec
sbb
pop
scas
or
cltd
xchg
sti
inc
and
jo
inc
ljmp
mov
decl
stc
xor
subl
or
cmp
pop
jmp
adc
dec
ljmp
mov
mov
outsb
jl
into
cltd
dec
les
das
and
insl
leave
inc
lcall
call
xchg
or
cmp
cmc
rclb
mov
pushl
lds
and
sti
push
cmp
dec
cmpl
lcall
xlat
loopne
fucomi
fimuls
mov
dec
sub
xor
popf
pop
lcall
nop
xchg
or
and
daa
es
push
gs
or
inc
push
sub
ret
push
sahf
jmp
cmc
push
mov
or
mov
inc
mov
or
mov
movsb
ficoms
pushl
inc
outsb
idivb
cld
push
ja
xor
cmp
sbb
inc
cmp
push
mov
jmp
lods
jbe
jg
mov
push
mov
push
aaa
in
push
dec
pushf
jno
add
or
fcoml
pop
jmp
jae
in
mov
lods
mov
pushl
cmp
aad
mov
push
cwtl
rolb
cmp
int
aaa
cmpsb
aam
aad
lcall
clc
jg
sbb
pop
lret
outsb
xor
xchg
inc
rcll
lea
push
inc
les
sbb
int
lea
mov
loope
das
aam
repz
decl
imul
or
lcall
sbb
mov
leave
cmpsb
loopne
mov
mov
inc
into
mov
incl
mov
xlat
pop
xlat
or
and
decl
inc
xchg
ficoml
push
dec
pop
jg
push
cld
xchg
movsb
jecxz
lcall
jmp
jl
mov
mov
std
shrb
es
aad
jmp
incl
and
lock
jno
mov
roll
fs
popf
mov
mov
add
jo
adc
fs
jl
xchg
ds
xchg
ficompl
jnp
fdivr
mov
ds
cmc
jecxz
and
jmp
pop
data16
mov
addr16
jg
mov
ja
jns
lahf
mov
clc
add
ja
stos
push
lcall
inc
sbb
jg
mov
push
jg
sbb
call
sbb
call
sbb
ret
popa
add
stos
mov
negb
xor
lret
je
cld
xor
jbe
fwait
lock
mov
pushl
pop
fldenv
dec
pop
insl
aad
out
mov
mov
sub
shll
outsl
sbb
imulb
dec
xlat
les
cwtl
inc
jl
pop
mov
fucomp
dec
dec
jp
push
fnstenv
inc
shll
add
fwait
lret
lcall
decl
fucom
fidivs
or
ss
pop
aad
leave
scas
dec
icebp
orl
xor
push
mov
jae
decl
out
dec
push
fnstcw
cli
add
sbb
cli
stos
cwtl
cmpsb
fwait
bound
clc
call
cmp
push
cmpb
ret
jg
lcall
jecxz
push
ljmp
inc
push
adc
mov
jnp
lcall
movsl
pop
xchg
jmp
int
out
cmpsl
cli
pop
push
push
orl
cmc
outsl
fdivrs
into
dec
jb
or
push
in
idiv
test
jne
popf
mov
ljmp
test
lods
mov
jmp
push
xchg
sub
outsl
js
inc
mov
mov
into
lret
push
add
mov
aam
inc
pop
and
xchg
xor
pushl
add
jl
mov
pusha
lret
pop
xor
ss
shll
push
movsl
repnz
scas
repz
mov
shlb
pop
jb
mov
imul
jnp
inc
xor
jns
ljmp
inc
mov
arpl
add
mov
stc
add
dec
mov
inc
inc
into
sub
pop
or
sti
das
outsb
js
jo
pop
add
jmp
xor
arpl
push
loop
clc
repnz
lcall
sbb
movsl
fbstp
mov
xchg
fwait
pop
and
loop
add
mov
mov
or
test
sar
push
jnp
pop
and
xor
add
sarb
sbb
repz
fwait
cmc
mov
ljmp
das
hlt
inc
push
pop
jg
push
js
sub
and
cmpl
call
xchg
sbb
add
das
test
jmp
jns
andb
enter
rcrl
rol
cmp
jns
in
lds
test
jb
aad
jl
push
sub
outsb
repnz
xchg
aam
fldl
lcall
ret
cmpsb
jb
aas
or
adc
mov
das
push
mov
sub
mov
incl
push
cmpsb
aad
sub
cwtl
pop
inc
cltd
stos
adc
in
inc
sti
sbb
pop
jae
sbb
mov
mov
add
es
es
iret
xchg
bound
push
ret
fcomps
sbb
das
ljmp
mov
push
mov
nop
mov
ljmp
les
xchg
cld
decl
inc
mov
xor
sub
jbe
push
lea
jg
nop
push
shrb
addr16
pop
outsb
inc
sub
ja
fwait
jmp
pop
sub
pushl
sbb
ret
jne
loope
xchg
pop
mov
lcall
lahf
mov
xor
test
pop
cmc
jmp
imul
js
mov
pushl
jb
sti
inc
adc
cmp
shlb
mov
int
dec
outsl
push
cmp
xchg
dec
sbbb
pop
mov
pop
in
mov
mov
pop
pop
clc
stos
ljmp
and
into
stc
adc
pushf
pop
lcall
fistl
cli
and
inc
insb
or
sbb
into
fwait
sub
scas
xchg
sbb
lahf
cwtl
mov
inc
sub
clc
ljmp
add
sub
xchg
mov
sbb
adc
cli
dec
mov
shrl
ret
adc
outsl
jl
pop
fldt
out
adc
jg
jae
mov
jnp
dec
xor
jns
ss
out
idivb
ja
cltd
xchg
mov
add
call
jnp
xor
and
push
lds
mov
sbb
popa
jmp
int
jno
cld
xchg
les
js
call
cwtl
xchg
xchg
sbb
or
lds
fsts
clc
mov
sbb
inc
rcrl
movl
ljmp
imul
fdivl
insl
jg
repnz
fdivl
push
mov
shrb
call
pmulhw
xor
jmp
das
mov
xchg
cld
jns
dec
add
sub
adc
fisubrs
jb
push
iret
mul
mov
rcrl
mov
sbb
imul
lcall
mov
mov
cld
cmp
push
mov
adc
out
push
mov
call
inc
sbb
xchg
jne
fwait
mov
aaa
mov
and
adc
inc
adc
ja
pop
hlt
arpl
mov
insl
sub
imul
out
lcall
add
jecxz
jle
pop
pop
loop
or
shll
cltd
mov
or
or
push
popf
cmc
mov
jp
dec
dec
leave
cmpsb
pop
inc
pushl
xchg
fcompl
test
pop
mov
stos
jg
shl
test
mov
pop
inc
cmp
xchg
outsb
mov
jae
lcall
cmp
xlat
nop
lods
xor
jns
jo
stos
sbb
pop
iret
dec
xor
popf
mov
loope
push
iret
fdivl
mov
jmp
sub
shll
jl
popf
jnp
jmp
push
push
mov
incl
cld
pop
jnp,pn
in
lret
cmpsb
daa
fs
and
pop
inc
movsb
inc
sub
call
in
sbb
sahf
mov
mov
sub
xor
ret
testb
js
sar
lcall
lds
pop
adc
shr
ds
dec
outsl
xor
xchg
mov
mov
push
inc
call
loopne
sbb
mov
sbb
lock
add
cld
mov
das
pop
mov
sub
or
inc
xchg
incb
adc
es
ja
fistpll
pop
or
jbe
xchg
xor
cwtl
outsb
push
sbb
and
pushl
xor
xchg
mov
pop
mov
xor
and
lds
adc
sti
fcomip
inc
sbb
out
inc
sbb
movsb
inc
mov
sbbb
mov
mov
outsb
jne
sub
ret
call
out
xchg
fxch
add
lcall
jg
adc
insl
cmp
je
xchg
cmpsb
lods
mov
mov
in
cmp
lcall
ret
rclb
adc
stos
mov
xlat
jp
cmc
xchg
stos
or
jnp
ljmp
pop
sbb
mov
outsl
xchg
add
mov
loope
mov
adc
adc
jmp
pop
jne
pop
leave
xchg
stc
adc
mov
test
jbe
xchg
rol
scas
sbb
mov
ljmp
in
mov
insl
and
jmp
leave
je
xchg
scas
sub
adc
aad
jg
pushl
sub
lock
mov
out
xor
mov
adc
fcoml
std
or
outsb
adcb
mov
outsb
mov
or
lret
push
dec
sbb
out
sub
fnstsw
or
mov
movsb
xor
sbb
sub
jge
decl
sbb
mov
xor
push
incl
sub
in
cmpsl
add
decl
xchg
and
in
mov
mov
pushf
imul
inc
cmpsb
shll
add
clc
pop
lds
pop
pop
lahf
shrl
inc
pushf
xchg
xchg
add
sbb
sahf
addr16
loopne
pop
add
or
out
adc
lods
sub
push
nop
pop
and
fwait
ljmp
dec
stos
dec
dec
mov
pop
adc
mov
xchg
pop
pusha
mov
popa
inc
cwtl
neg
shll
adc
in
jmp
lock
and
test
cmp
jmp
mov
fstpl
call
push
out
cmp
jae
idivb
adc
jnp
fidivs
and
inc
test
scas
repnz
and
pop
dec
inc
and
xor
int
cmc
ja
in
push
decl
push
mov
add
dec
xchg
data16
and
scas
je
sbb
jl
sub
aad
pushl
push
test
ds
loopne
lahf
dec
arpl
leave
fldt
or
cmp
in
xchg
mov
test
add
mov
in
push
add
adc
and
aaa
cld
cmp
int
cmc
nop
push
in
roll
mov
push
sar
dec
in
jmp
mov
mov
mov
addr16
or
insb
outsl
mov
cld
jmp
xor
add
pop
cltd
sub
inc
es
daa
add
xlat
jne
jg
test
mov
xchg
mov
stc
cmpsl
inc
imul
pushl
div
mov
aas
or
std
xchg
dec
nop
pushf
mov
or
push
or
incl
or
sbb
cmp
pop
inc
out
cmpsl
cmp
mov
adc
std
outsl
jg
repz
mov
lods
xchg
dec
sub
adc
icebp
mov
call
jle
push
pusha
test
mov
imull
xchg
dec
mov
cmc
ss
xchg
fdivrl
sub
lods
dec
mov
bound
sbb
jno
sarl
dec
push
jne
leave
sbb
and
imul
lds
test
cs
cmpl
or
push
jbe
dec
ljmp
out
mov
loopne
sti
scas
lahf
push
pusha
in
int
lock
mov
insl
dec
pop
xchg
incl
xor
sbb
jno
iret
xor
lock
jg
inc
sub
pop
pop
ljmp
mov
inc
sub
lret
clc
stc
je
js
cli
sti
out
xlat
and
popf
cmp
dec
lret
jb
rclb
pop
mov
and
jb
jge
mov
mov
incl
jb
and
mov
and
pop
mov
sarl
fwait
xor
inc
call
sbb
in
pop
mov
or
out
out
icebp
jmp
subl
mull
mov
repnz
out
fs
sub
fcomip
xchg
pop
addl
cwtl
xchg
dec
jnp
dec
rcll
add
mov
dec
lods
rclb
xor
call
stos
xchg
test
arpl
add
shlb
xchg
adc
ljmp
push
cli
mov
hlt
dec
jb
les
insb
push
jne
sub
mov
mov
push
dec
and
sbb
loope
ror
dec
leave
enter
ds
call
es
cmp
adc
cmp
shrl
mov
or
incl
xchg
cmpl
dec
ret
ret
xlat
cwtl
bound
mov
movsb
shr
hlt
mov
test
call
ljmp
es
std
xchg
or
lock
dec
mov
stos
jle
out
mov
ficoms
out
lcall
loop
ret
pop
inc
fdivp
xor
xchg
decl
rclb
cmp
mov
imul
ss
cmpsl
test
inc
cld
sub
xorb
cwtl
repz
mov
push
jp
lcall
clc
outsb
sarb
je
jno
jmp
inc
xor
pushl
mov
loope
ret
pusha
andb
dec
xor
loop
jle
pop
adc
pushf
int
dec
sub
decl
lcall
loope
daa
aas
notl
sub
jg
in
dec
pop
cld
incl
mov
dec
xchg
add
sbb
push
not
or
or
pop
sbb
cmc
loopne
mov
jo
call
arpl
decl
shl
add
or
push
les
aaa
push
pop
ss
push
rcr
and
fs
and
mov
inc
jae
cli
stc
inc
ljmp
clc
fs
jb
ficomps
rcrb
push
lcall
xchg
daa
ds
xlat
decl
fadds
push
mov
xlat
sub
add
and
lods
inc
pushf
ss
cmp
sbb
call
push
fprem1
stos
ss
int
xor
repnz
dec
movsb
xor
cltd
push
pushl
cld
push
mov
daa
mov
inc
loop
dec
leave
cmpsb
fisubs
decl
lock
adc
cmp
adc
fstpt
sbb
mov
dec
ud0
fimull
fldcw
xchg
jbe
das
pop
xchg
jo
jecxz
movsb
push
stos
jl
stos
icebp
sub
pop
outsl
pushf
dec
lcall
call
lret
dec
icebp
mov
sbb
add
enter
xchg
push
decl
and
jecxz
mov
outsl
dec
imul
pushl
pop
add
ljmp
sahf
push
cmpsb
outsl
push
sysexit
or
push
mov
sub
or
cld
mov
fldenv
push
ljmp
out
cmp
inc
adc
aas
add
mov
movsl
and
or
lock
cld
incl
mov
jo
add
add
movsb
mov
push
push
push
out
push
push
out
mov
test
iret
into
mov
mov
call
dec
xor
sarb
je
das
xlat
enter
and
popf
or
push
cmp
mov
inc
mov
ret
sub
fcomip
mov
mov
jmp
in
addr16
push
int
xlat
lds
lcall
into
or
jmp
push
dec
fdivrs
ljmp
adc
dec
or
pop
sbb
pop
std
andl
iret
test
mov
xor
fnstenv
xchg
fwait
jecxz
clc
sbb
lahf
xor
mov
add
fbstp
add
test
push
push
fsubrl
fwait
cmp
xor
dec
xchg
pop
insl
pop
inc
lcall
cmc
jae
adc
les
push
xor
outsb
in
fcmove
sahf
fsubs
repz
xor
int3
dec
and
nop
leave
cmp
sub
push
js
fistl
xchg
mov
nop
mov
call
mov
arpl
subb
je
pushl
lea
fidivrl
and
jne
jne
lods
int
test
mov
rorb
mov
mov
push
arpl
or
into
dec
jmp
xor
adc
fxch
sbb
jl
add
and
aaa
xchg
dec
push
mov
fs
pop
insl
sbbb
insl
jno
jbe
jbe
mov
insb
push
lcall
pushl
jns
mov
and
popf
imul
fstpt
repnz
xchg
fwait
cs
mov
inc
and
push
lret
pop
test
jge
loop
sub
xchg
cmc
mov
mov
loop
mov
sbb
or
sub
subb
cli
out
xchg
pop
lock
decl
ss
xchg
test
mov
out
jl
aaa
aad
pushl
jmp
jle
imull
mov
in
movsl
push
pop
cmpb
dec
movl
ljmp
clc
out
testb
push
and
sahf
lds
fstp
ja
xchg
mov
stos
incl
fldt
jo
sti
push
aaa
sbb
stos
jg
push
and
cmp
pop
adc
sbb
in
fwait
sbb
je
aam
cld
out
jmp
inc
jnp
adcb
mov
or
decl
enter
lahf
push
mov
and
out
sub
shl
mov
sub
out
push
call
dec
pushf
shll
mov
push
fcompl
aam
inc
repnz
mov
test
fisubrs
sarl
inc
arpl
bound
scas
pop
jo
push
dec
pop
outsb
aas
sub
xor
mov
or
pop
jle
in
lock
stos
repnz
mov
fcompl
jg
mov
lret
aaa
or
dec
sub
xor
call
imul
cmp
rclb
mov
into
test
gs
dec
add
fcomip
std
pop
inc
cwtl
movsb
shll
jl
pusha
pop
cltd
cwtl
mov
aam
inc
pop
fmuls
fisubrl
and
push
test
insl
push
cmp
int
cmp
pop
bound
inc
out
xchg
fsubl
jnp
sub
repz
lret
xchg
test
pop
sub
dec
and
loope
pop
pushf
mov
incl
sbb
mov
jae
data16
cmp
jmp
mov
das
cltd
lcall
push
das
loopne
push
cld
ljmp
or
ret
lock
pop
jo
icebp
add
shll
lcall
mov
xchg
addl
pop
js
or
jp
mov
in
in
xchg
jmp
out
push
pop
pop
push
dec
xchg
xchg
mov
in
aaa
xchg
pop
aad
xor
popf
cmc
add
mov
cmpsb
ss
cmp
int3
lahf
pop
jecxz
arpl
xchg
pushl
addr16
shl
jo
or
mov
jno
push
dec
movd
roll
insl
sub
adc
pop
jmp
incl
sub
test
rcrl
adc
inc
dec
dec
insb
jo
ljmp
xchg
idivb
fildl
mov
leave
scas
sbb
arpl
cmp
out
xchg
cmp
lcall
cwtl
jnp
pop
cmpsb
shl
ds
dec
mov
or
sbb
les
mov
rcl
idiv
or
jno
xchg
loope
sub
pop
mov
cltd
add
sub
fwait
call
dec
jp
imul
lea
leave
fstpt
dec
push
test
sbb
dec
test
xchg
call
sub
or
ds
mov
in
pusha
xchg
or
cmc
sbb
jge
ds
ds
sbb
inc
push
cld
cli
mov
inc
shlb
and
das
nop
imul
fsts
pushw
insb
je
sbb
xchg
fimull
mov
sti
sbb
xchg
ret
das
pop
arpl
into
fisubl
test
incl
imul
mov
jb
mov
shl
cmp
push
sbb
xor
popf
sarl
sub
dec
xor
pop
sbb
sub
dec
adc
pushl
jbe
ja
idivl
cltd
cmpsl
nop
aam
sub
xchg
adc
rolb
lahf
in
sti
jle
mov
pushl
jmp
adc
aas
int3
sbb
mov
mov
pusha
xchg
mov
inc
sub
in
decl
jb
std
addr16
push
out
mov
or
push
mov
jbe
dec
xlat
ficoms
and
add
xchg
out
lahf
popa
ret
int
cld
in
test
push
rorb
into
cld
je
inc
cli
aad
stos
lea
stos
or
jecxz
and
push
out
mov
leave
inc
jno
jmp
call
adc
push
das
pushf
mov
push
add
adc
ljmp
ljmp
jnp
or
mov
add
jg
cli
pop
dec
inc
xor
jo
incl
flds
int
std
xchg
imul
xlat
push
in
mov
loopne
xchg
test
push
pushf
ds
fildll
jo
test
xchg
sbb
mov
push
movsl
call
jge
in
loop
pop
lods
pop
jns
adc
leave
pushaw
cld
popa
les
ret
loopne
enter
lcall
ss
sbbb
movsb
fcoms
stc
sbb
mov
mull
mov
bound
loop
adc
sub
lds
cld
cmc
inc
xor
idiv
pop
mov
adc
bound
imul
lcall
aad
mov
js
add
or
mov
xchg
ret
xchg
jge
mov
jmp
push
cwtl
call
test
xchg
inc
adc
daa
int
pop
mov
push
dec
test
inc
ljmp
cwtl
addr16
jl
push
hlt
ss
jns
inc
jg
cmpsb
adc
jg
ljmp
cmpb
hlt
jmp
ret
mov
push
pushl
xchg
aaa
call
call
dec
aad
cld
jle
andl
mov
fwait
jmp
pop
lock
ret
sarl
ficomps
jg
or
outsl
insl
enter
jns
addl
adc
jmp
data16
incl
gs
addr16
out
sbb
lods
xchg
sub
mov
pop
xchg
xlat
xchg
hlt
lcall
mov
pop
xor
ficoms
ja
or
nop
mov
cmp
jmp
fsubs
icebp
ret
int
shl
aad
push
lods
sbb
je
dec
or
adc
cmc
push
rorb
and
ljmp
stos
ret
scas
mov
push
dec
nop
in
shll
lds
loopne
dec
repnz
dec
push
push
mov
sti
and
sub
jmp
test
push
call
jae
ljmp
fistpll
jg
dec
ja
inc
cwtl
das
call
sbb
pop
pushl
xchg
mov
cwtl
xchg
loopne
pop
xchg
enter
ss
in
mov
adc
call
pusha
orb
adc
scas
imul
cwtl
add
mov
xor
jg
loopne
jmp
js
imul
arpl
push
fnsave
mov
push
inc
inc
cmc
xchg
arpl
mov
mov
das
cli
call
cltd
xor
sub
lahf
out
test
mov
pop
call
lods
xchg
pushf
cs
adc
push
mov
out
dec
jle
dec
call
sarb
jge
jp
push
dec
sbb
lods
repnz
mov
test
andl
mov
pushl
mov
shlb
pushf
arpl
cltd
in
mov
mov
lcall
or
dec
xorl
lcall
xor
or
loop
and
sbb
incl
xchg
add
call
pop
fisubrs
mov
pushl
out
pop
mov
outsb
mov
dec
les
stos
aas
sbb
andl
inc
push
test
pop
insl
lahf
enter
cli
dec
sbb
add
loopne
icebp
lret
sbb
push
or
loop
daa
in
ss
cmp
das
adc
push
inc
inc
xor
push
mov
mov
xlat
mov
and
pop
pop
decl
aas
xor
mov
popa
or
dec
dec
in
pop
jg
clc
pushl
cmp
dec
stc
sbb
insl
mov
xchg
shl
in
lock
push
push
and
ret
dec
jnp
push
or
daa
mov
mov
inc
js
lcall
adc
jne
clc
and
jns
cltd
cmp
in
lods
jmp
mov
clc
fwait
jle
lcall
test
mov
lock
jno
std
dec
scas
loop
out
nop
lret
lcall
ja
fsubrs
out
inc
sbb
mov
jmp
testl
fsubl
lea
xchg
mov
pushl
ss
out
fwait
mov
jecxz
aaa
mov
push
cmp
aam
jmp
pushf
out
loop
push
pushl
jge
push
dec
ret
test
mov
add
xchg
adc
scas
ret
js
call
std
push
out
sub
pop
push
pushf
sbb
dec
addr16
sbb
loopne
xchg
icebp
jnp
jecxz
mov
fildl
jae
mov
add
cmp
mov
mov
xor
cld
das
mov
iret
push
mov
lcall
inc
mov
push
jnp
fcmovu
std
cld
mov
push
data16
outsl
fimull
cmpsb
sbb
xchg
sub
aaa
cmp
xchg
inc
mov
pop
int3
call
cmc
shrl
mov
ja
fadd
stos
mov
lcall
and
aam
add
lds
fsubrs
mov
xchg
mov
adc
decl
cmp
in
and
sbb
inc
stos
ret
icebp
mov
xchg
js
jge
xor
fbld
test
sbb
pop
xlat
mov
mov
incl
push
or
cmp
cli
pop
loope
sti
fdiv
xchg
rorl
cmp
xchg
mov
shll
dec
incl
cmp
andb
pop
push
fstpt
scas
xchg
nop
pop
sbb
cmp
xor
das
and
outsb
fildl
lea
pop
adc
mov
lcall
dec
and
cli
push
fistps
shll
bound
incl
sarb
clc
aad
push
mov
dec
int
xchg
popa
or
and
jl
pop
lods
aaa
and
sub
sbb
push
mov
ljmp
inc
std
xchg
cmp
ljmp
inc
pop
inc
iret
or
test
jne
icebp
push
ljmp
add
add
ret
out
scas
or
decl
fwait
inc
dec
stos
out
fsub
mov
dec
pop
pop
into
or
pop
mov
xchg
inc
nop
mov
ljmp
add
mov
push
mov
mov
scas
iret
sbb
jno
dec
aaa
mov
ljmp
loop
arpl
mov
jne
push
dec
inc
leave
mov
push
adc
sub
aad
test
mov
imul
out
into
sbb
stc
mov
inc
das
bound
pushl
fcoms
cmp
or
pop
aam
xchg
jmp
nop
mov
sbb
call
bound
cmpsb
fdivs
aam
loopne
jmp
aad
shrl
call
aad
push
in
popf
sbb
dec
icebp
setg
sarb
cmpsb
jmp
cmpl
clc
jmp
sub
jp
or
xor
nop
cltd
push
fwait
pop
adc
aad
sbb
mov
lea
negb
leave
pop
sbb
jmp
shrl
add
mov
pushl
or
jle
sub
cmp
je
in
out
xor
jmp
jg
jmp
dec
mov
adc
pop
adc
mov
mov
cmpsb
mov
cmp
xor
call
adc
and
addr16
andb
add
mov
loopne
nop
xchg
fnsave
push
test
push
lds
or
mov
mov
lcall
xor
int3
lods
aaa
inc
dec
add
push
in
aas
cmp
sub
aas
mov
bsf
call
dec
fmuls
and
scas
xchg
jle
and
cld
or
lds
inc
jne
fcmovb
arpl
incl
cld
scas
mov
jle
xor
sub
cs
ja
inc
rcrb
pusha
fwait
mov
es
lret
or
jge
cmp
cmp
mov
das
dec
cs
call
and
arpl
adc
mov
jg
pop
testl
nop
add
incl
xlat
xchg
fldl
mov
pushf
sahf
fisubl
sub
imul
sub
add
cmp
out
test
dec
sbb
inc
sbb
incl
gs
repz
adc
mov
ja
repnz
inc
cmp
jb
ljmp
ljmp
ret
mov
pop
and
mov
ret
mov
call
cmp
or
sub
nop
pop
cmpsl
push
ja
aas
pop
push
xchg
pop
sti
push
add
ljmp
push
fists
pop
mov
and
nop
xchg
mov
jo
ret
incb
jo
mov
jge
clc
jge
mov
cmp
dec
jg
mov
push
imulb
pop
call
bound
les
mov
jcxz
cld
jne
pushf
loope
ljmp
test
mov
cwtl
fcmovnb
dec
ja
xchg
adc
dec
scas
jnp
nop
mov
mov
push
pop
pop
or
cmp
cmp
aam
sbb
pusha
repz
lret
xorl
jmp
shl
and
int
insl
add
add
in
dec
cmp
ja
out
and
cld
sti
in
sub
adc
xor
jbe
adc
jmp
mov
rorb
adc
jbe
mov
push
inc
mov
xchg
lods
jmp
ss
scas
xor
aas
punpcklbw
ljmp
rclb
ret
clc
inc
xchg
xchg
cld
mov
dec
sub
es
lcall
stos
push
mov
les
pop
call
pop
outsb
sahf
fiadds
repnz
pop
jmp
call
adc
popa
nop
test
cmpsb
pop
sub
lcall
jmp
out
xchg
dec
bound
nop
outsl
mov
outsb
aam
test
jmp
xor
icebp
pushl
or
cmp
pushf
cmp
test
push
sbb
test
lret
lret
pop
sub
and
jmp
fs
jl
aad
xchg
or
jg
inc
ficoml
lcall
lcall
test
aas
mov
fcmove
xor
add
add
inc
or
sbb
fxch
dec
ret
fcoml
jnp
fwait
and
call
inc
cmp
pop
mov
out
lock
mov
inc
lret
pushf
fadds
push
jns
sub
int3
adc
ljmp
dec
xor
pop
fs
or
mov
and
dec
pop
and
loop
iret
in
rorl
adc
jmp
das
inc
cmp
das
in
jns
pop
jp
and
fdiv
pusha
push
cs
mov
decl
mov
fcomps
inc
jb
pop
sub
lods
push
arpl
or
cmc
dec
dec
loopne
es
das
jp
or
mov
pop
jge
sub
dec
pop
xchg
frstpm(287
xorb
push
pop
cltd
xor
mov
cmp
dec
jmp
int
into
shl
and
call
and
std
dec
adc
popa
out
sarb
mov
or
rcll
mov
adc
cmc
dec
mov
lods
xchg
scas
ret
dec
insl
fadd
dec
pop
out
sbbb
lea
jp
add
dec
sbb
sti
mov
fdiv
mov
vpsubusw
xchg
sub
incl
call
pop
ret
xorl
mov
jnp
ret
ljmp
into
sub
jbe
lret
shll
jmp
aam
xchg
mov
ret
decl
cltd
mov
add
jnp
inc
int
cli
push
pop
sub
jp
mov
sub
sub
ret
pop
lcall
iret
cli
add
inc
dec
in
xor
jb
fs
mov
aad
and
push
mov
lcall
xchg
xchg
jmp
inc
inc
push
jbe
cmp
mov
mov
mov
mov
sti
scas
xchg
sbb
jo
stc
pop
sbb
add
mov
or
cli
call
sub
pop
sbb
xor
xor
leave
in
sbb
dec
les
ret
int3
inc
addr16
ljmp
leave
pop
orb
decl
ljmp
std
lahf
subl
lcall
movsl
push
stos
into
sarb
xchg
ret
lahf
mov
inc
repz
daa
sbb
decl
mov
pusha
es
mov
add
mov
lods
xchg
jmp
lds
xor
mov
add
stos
dec
or
sub
sbb
pushl
out
rolb
cmp
xchg
aad
inc
ds
pop
jl
icebp
or
mov
adc
jg
das
in
jnp
inc
rcl
fsubl
nop
cld
ljmp
jno
lea
cld
call
cmpsl
insb
inc
insl
mov
cmp
adc
ss
lds
cmp
filds
lret
and
dec
cs
cmpsl
sar
sub
fs
out
js
push
inc
pop
mov
mov
rcrb
notl
push
inc
xor
clc
outsl
cld
cmp
shr
mov
mov
jae
repnz
push
cmp
jmp
mov
sub
call
pop
fwait
xchg
pop
push
insl
mov
rcrb
stc
pop
in
stos
incl
xor
push
mov
push
rol
subl
dec
subb
jl
push
mov
nop
xchg
test
std
xchg
pop
lock
inc
mov
rcrb
push
ret
mov
dec
lock
push
adc
arpl
jecxz
test
jg
mov
rcrb
icebp
out
pop
ss
xchg
cmp
pop
xor
out
ret
dec
stos
in
mov
pop
in
bound
mov
jle
mov
stos
and
call
cmp
cli
cmc
test
in
cmp
mov
faddp
jmp
incl
push
daa
rclb
ds
jne
mov
adc
cmp
mov
cmp
add
incl
pop
scas
add
sub
in
or
test
maxps
sub
pusha
and
ljmp
clc
inc
fs
lret
stos
pop
and
push
push
roll
xor
adc
in
dec
xchg
lcall
push
cmp
call
fbld
jg
jne
scas
test
mov
adc
decl
cmp
fldt
jb
je
lods
jno
stos
xchg
leave
xor
decl
and
filds
add
imull
jno
mov
ret
jne
call
loopne
test
ss
jb
fdivrp
adc
bound
inc
rcrl
lcall
xchg
fldln2
cwtl
sbb
mov
roll
and
xor
mov
movsb
push
jge
call
aaa
xor
jno
mov
scas
pop
loope
or
dec
fsubr
dec
adc
iret
rorb
xor
xor
dec
and
mov
fisttps
scas
mov
repz
jns
mov
inc
or
mov
fwait
fstp
adc
insl
ds
mov
xchg
cltd
push
pop
adc
pop
imul
decl
lock
jmp
movsb
sahf
add
jmp
sbb
mov
cli
push
mov
push
pop
in
repz
ss
adc
xor
mov
cli
sub
fidivrs
or
mov
mov
xor
cmp
incl
loop,pn
jp
in
call
sbb
xor
repz
push
or
jno
push
fnstcw
mov
jno
pushl
std
add
ja
pop
dec
adc
push
repnz
sbbb
push
xor
pushf
dec
cmp
fimull
lcall
push
in
je
inc
jbe
cmp
jae
inc
pop
sarl
ljmp
push
out
fsubl
xchg
or
pushl
adc
fadds
les
pushf
loopne
inc
out
pop
iret
mov
inc
or
adc
jmp
push
rcll
jo
cmpsl
and
jno
sbb
pusha
jge
mov
and
decl
sahf
mov
imul
mov
pushf
pop
fwait
pushf
insl
and
dec
out
clc
and
cltd
sub
incl
xor
rolb
icebp
jl
in
push
xor
push
cmpsb
into
gs
adc
jg
push
sbb
sub
inc
push
sbbb
mov
cwtl
or
or
and
or
pushl
add
test
mov
test
add
pop
iret
out
and
dec
in
and
jg
imul
faddl
arpl
scas
cltd
xor
popf
icebp
add
push
jb
hlt
mov
fsts
aad
imul
sbb
push
sar
mov
add
adc
push
inc
stos
pop
sub
test
cmp
psadbw
call
loopne
pop
test
fcoms
jmp
and
in
xlat
jl
sub
out
sub
jmp
out
push
in
adc
add
push
xor
cmp
mov
mov
fdivs
cltd
pusha
jb
test
aad
shrl
sbb
flds
adc
sbb
inc
nop
push
xor
fyl2xp1
stos
pushl
and
iret
testb
jo
lret
or
mov
int
mov
mov
pop
shlb
push
push
add
mov
imul
dec
loopne
add
lret
jbe
loopne
inc
and
cmp
andb
inc
mov
int
push
or
repnz
inc
sahf
decl
loopne
push
adc
mov
xchg
lods
cmp
popf
ds
rcll
push
cld
call
dec
add
test
add
fimull
ss
flds
pop
jmp
dec
fidivs
pop
or
fisubrs
fdivrl
out
je
sub
dec
aas
and
jmp
jge
xchg
dec
das
xor
loope
xchg
xchg
mov
insl
add
scas
pop
fldt
es
jle
stc
gs
lcall
popa
inc
test
inc
push
gs
pusha
pop
cwtl
data16
ret
test
sub
jge
cmc
mov
xchg
cli
mov
jmp
rclb
lea
lcall
and
cli
orb
fwait
and
clc
mov
popa
int3
sub
mov
or
push
stc
xlat
fwait
sahf
in
fs
xchg
jmp
or
ljmp
cmp
testb
decl
sti
pop
jmp
and
repnz
xor
out
sub
mov
iret
cmp
lcall
lock
xchg
inc
inc
or
int
out
cmp
adc
out
sub
out
popa
or
incl
aas
rclb
adc
cmpsb
pop
adc
sub
cmp
push
popf
inc
xlat
cmp
mov
inc
and
scas
inc
jno
test
stos
cmp
stos
and
enter
jmp
inc
push
inc
jae
imul
mov
adc
inc
sbb
iret
cwtl
decl
sarb
jb
and
mov
cmp
sub
xor
cld
fimuls
and
and
pop
mov
xor
add
pushl
mov
outsb
rol
jp
repz
sbb
cwtl
and
mov
nop
loopne
cmp
shl
in
cmp
ljmp
cltd
push
notb
sbb
sbb
mov
test
inc
int
add
hlt
xchg
pop
movsb
mov
sbb
idiv
sub
jno
mov
inc
rcr
pop
sub
pop
cmc
jo
repnz
aaa
rcll
leave
or
pop
mov
pop
rol
decl
inc
enter
pop
jp
sar
ljmp
fmull
and
jecxz
ja
sbb
fs
popa
rol
dec
ljmp
push
and
ds
sbb
xor
shll
std
sbb
dec
pop
repz
out
popa
repnz
inc
sbbb
ljmp
stc
mov
mov
test
jne
xchg
mov
lcall
sbb
ljmp
push
xchg
cmp
punpckhbw
or
iret
pop
insl
lcall
popa
pop
or
push
scas
out
push
xor
leave
inc
xchg
out
mov
and
pop
in
movsl
jmp
out
outsb
mov
adc
arpl
or
arpl
add
mov
sub
out
xor
outsl
aaa
jg
test
subb
jae
call
addb
xlat
test
iret
aas
pop
lea
mov
call
xor
pop
lcall
pushf
fstpl
es
andb
sbb
ljmp
clc
les
sbb
sbb
pop
mov
imul
mov
push
push
stos
xor
cmpsb
xchg
add
fldl
xor
inc
jnp
or
std
jmp
fcoml
xchg
lcall
iret
push
cmp
mov
jns
cmp
sub
sti
mov
jg
lcall
xlat
dec
rclb
mov
mov
inc
stos
xor
loop
jmp
aaa
pushl
in
jl
or
xchg
lahf
dec
mov
ss
xchg
adc
sbb
xchg
xchg
incl
aam
or
das
icebp
rcrb
or
imul
pop
fcomip
sbb
fwait
mov
inc
mov
fsub
pop
aas
stos
jle
pop
loope
and
fisttpll
push
sbb
popf
sub
pause
dec
int3
ds
mov
add
push
out
rolb
and
test
jle
mov
pushl
stos
fcompl
out
dec
pop
ljmp
jg
push
cmp
idiv
jmp
std
in
into
enter
pusha
test
test
movsb
or
incl
stc
xchg
cmp
adc
mov
add
das
idivb
adc
test
pushl
cmp
ljmp
aas
int3
inc
stc
mov
mov
incl
xor
push
add
hlt
add
sub
add
clc
fcomip
int3
and
mov
mov
repz
sarl
sub
bound
inc
xchg
jmp
adc
imul
int3
and
test
les
pushl
cld
inc
test
fists
cli
pop
and
enter
movl
in
jg
incl
pushf
mov
xchg
fs
dec
dec
out
sub
outsl
mov
inc
arpl
imul
cld
ljmp
pop
mov
popa
imul
add
push
in
adc
lret
shll
aas
cld
lret
pushf
mov
or
mov
ja
ficomps
movsb
fsubr
cmp
jmp
fdivs
add
mov
and
enter
dec
pop
pop
cmc
bound
cmp
pop
shll
mov
test
insb
and
mov
cmp
mov
subb
imulb
or
or
jl
xchg
pusha
pop
mov
fdivr
xchg
mov
jns
push
shll
jb
mov
xor
cmp
imul
jae
cld
inc
mov
decl
in
or
daa
arpl
inc
in
fcoms
test
ljmp
aam
adc
fimull
mov
push
cmp
insl
inc
add
lock
int3
test
insb
sbb
dec
add
test
pop
inc
dec
out
mov
jp
cmc
dec
xor
pop
jno
xchg
jmp
cmpl
cld
sub
inc
ret
cltd
cmp
xchg
xchg
inc
add
xchg
popa
movl
mov
and
inc
xchg
inc
mov
push
pop
das
jecxz
pop
jmp
or
dec
cmp
pop
mov
jnp
in
xor
mov
enter
pop
out
cmp
xchg
cld
adc
scas
adc
jmp
jmp
pop
lcall
adc
mov
xor
mov
cmp
cmpsb
jg
and
cmpsl
gs
jo
lcall
incl
std
sbb
lods
push
std
adc
les
mov
inc
push
pop
jo
inc
shrl
push
mov
decl
add
mov
in
pop
mov
test
push
xchg
lahf
xor
mov
decl
jae
js
jp
inc
ja
jg
xchg
test
in
fsincos
mov
jmp
in
and
or
das
cli
lcall
outsl
icebp
test
cmp
mov
mov
or
lcall
xor
jo
stc
jnp
mov
xchg
dec
pop
cwtl
aas
dec
cmp
add
inc
les
jl
in
mov
fcomip
dec
insl
lret
outsl
mov
pop
loope
in
push
pop
cmp
and
jne
adcb
repz
jg
int3
adc
call
mov
xchg
pop
push
cmpb
leave
xlat
or
ss
pop
aam
dec
or
insl
cmp
adc
sbb
loop
idiv
aaa
jl
cmpb
in
jbe
pop
adc
jne
in
inc
fimull
repnz
incl
shll
xchg
sti
std
cli
cmp
or
aam
xor
incl
cli
movb
push
dec
ficoms
loope
rcrb
push
fstl
stos
mov
ljmp
mov
adc
shr
sub
insb
pop
pushf
and
and
or
fildll
dec
pop
test
lea
stc
call
push
lahf
fnstenv
inc
and
jge
sub
mov
cli
dec
push
xchg
ret
aad
fcmovne
int
call
fisubs
adc
cmp
and
aad
call
cli
or
fldenv
test
loope
pop
pop
repz
js
fs
or
xor
addr16
cmp
or
int
xchg
out
call
jle
jge
xchg
movsb
add
sub
inc
add
jbe
cltd
fwait
insb
sbb
iret
jecxz
cmp
fidivrl
sbb
mov
mov
out
jp
and
mov
add
fs
jns
addr16
cmp
or
outsb
inc
jge
das
daa
cmp
repnz
xor
pop
stc
inc
push
mov
movb
sub
lahf
pop
mov
ja
outsb
jmp
mov
hlt
mov
and
add
fistl
inc
mov
mov
or
lds
rclb
mov
test
xchg
js
test
mov
inc
bound
adc
ret
ret
gs
jmp
sbb
pop
xor
jmp
idivb
inc
inc
mov
jb
cli
roll
inc
clc
cmpsl
jo
lods
mov
add
mov
aas
jmp
loope
testl
dec
lods
pop
lock
insb
push
sarb
dec
adc
cltd
outsl
cli
inc
scas
dec
lret
and
les
lahf
ljmp
imul
call
xchg
loop
mov
sub
xchg
fisubrs
in
dec
pop
sahf
sti
insb
sbb
call
neg
dec
icebp
and
aam
out
sti
iret
ret
dec
fucompp
dec
jns
jnp
sbb
push
hlt
decl
aaa
hlt
sarb
icebp
jg
inc
ss
sub
insb
fadds
ljmp
pop
in
hlt
jne
mov
loop
adc
outsl
xlat
cltd
adc
cmpsl
cmpl
dec
leave
aad
dec
lcall
scas
fwait
pop
push
loopne
ret
cmp
add
stos
inc
mov
ss
movsb
fcoms
ret
clc
mov
pop
sbb
sub
or
icebp
sbb
dec
fildll
call
jg
cwtl
popa
or
cmp
fsubrs
fstl
jne
ja
fdiv
f2xm1
mov
sbb
mov
call
lock
jmp
insl
push
sub
aas
mov
sub
and
fs
jle
jg
mov
nop
stc
or
dec
aas
in
aaa
pusha
jb
test
add
addr16
sub
fsubs
jecxz
jg
mov
outsb
push
aas
jge
adc
lret
xor
mov
call
mov
jl
mov
pop
cmp
jnp
xchg
outsl
jo
das
cwtl
cmp
ljmp
test
loope
and
jne
out
dec
sahf
ss
dec
dec
jmp
in
inc
jmp
ja
shlb
clc
sub
inc
jmp
imul
subl
mov
jmp
add
out
adc
rcll
add
shlb
push
mov
mov
mov
cmp
mov
decl
mov
jbe
jg
mov
mov
inc
push
in
fadd
popf
cmp
dec
mov
mov
jbe
push
push
das
jns
icebp
ja
idiv
js
int3
mov
ja
jnp
sub
and
xor
or
fwait
sbb
mov
fstp
int3
xchg
fwait
and
lret
aad
mov
pop
mov
cld
dec
adc
imul
push
and
ret
dec
mov
adc
scas
sub
cmp
call
pop
inc
adc
sub
inc
and
push
repz
incl
jge
arpl
xchg
pop
mov
imul
lcall
decl
cmpl
cmpsl
add
ret
push
push
mov
dec
dec
xchg
sbb
andb
incl
out
adc
mov
mov
js
addl
add
aaa
call
sub
adc
fs
bound
daa
jns
in
test
pop
call
or
imul
xchg
sbb
lea
jae
sub
sbb
cli
fstpt
cmp
xchg
jno
test
sbb
fs
call
or
ret
bound
dec
pop
adc
and
pushl
cld
mov
mov
xchg
push
fcoml
iret
xor
outsb
addr16
pop
xchg
out
mov
jne
cmpsl
mov
dec
das
ret
mov
mov
xor
dec
lods
cmp
cmp
das
outsl
sub
loop
mov
insb
jl
inc
jmp
mov
fs
mov
push
mov
call
inc
add
xchg
inc
lods
xor
dec
mov
mov
incl
pop
push
aas
push
jmp
mov
xchg
pushf
sub
enter
decl
pushf
push
fldcw
sub
mov
cmp
icebp
fucomi
ds
add
adc
fbld
jle
ja
stos
xchg
js
xor
in
pop
insl
ljmp
jg
and
gs
lcall
and
out
pop
nop
icebp
jge
inc
lret
pushl
bound
jp
ds
addb
into
jo
bound
mov
dec
xor
cld
call
or
lods
dec
outsl
cmp
add
push
sarl
dec
xchg
pusha
daa
sbb
inc
jle,pn
aas
fidivrl
ret
stos
inc
sbb
mov
cld
or
and
xchg
add
and
add
fldcw
dec
push
xor
sti
or
or
lock
in
in
pop
mov
out
and
fstps
aad
push
sbb
inc
cmp
mov
xchg
cmp
adc
mov
fcompp
or
sbb
mov
mov
sub
iret
jmp
pop
dec
jne
sub
decl
sub
repz
loop
adc
aas
and
lret
lret
xchg
mov
or
mov
sbb
add
pop
out
push
imul
mov
or
arpl
mov
fiaddl
mov
jae
lods
loopne
incl
decl
lds
mov
sbb
stc
or
push
sub
fisttpl
dec
paddb
div
dec
add
dec
test
hlt
sub
scas
call
xor
mov
je
mov
clc
sarb
sub
sti
push
sub
or
clc
jmp
sub
adc
add
xchg
fldenv
sarl
mov
jbe
mov
pop
lods
aam
xor
ljmp
push
xor
mov
sub
loopne
call
lcall
rcrl
xor
cld
ret
xchg
mov
sar
scas
mov
push
arpl
mov
mov
mov
ljmp
ljmp
ljmp
adc
js
push
mov
ljmp
clc
jmp
rorb
push
rolb
xor
es
ret
cmpw
jmp
fmull
sahf
xlat
hlt
push
jo
out
mov
negl
and
pushl
pop
jo
jae
test
or
mov
decl
add
dec
scas
insb
fs
lret
jp
push
addr16
and
fisubrs
lcall
inc
adc
fdivs
imul
insb
test
dec
mov
jmp
mov
shlb
les
jne
sbb
fisttpl
pushf
fldcw
and
inc
or
pop
mov
dec
loope
call
xchg
xchg
xchg
mov
outsb
add
fimull
adc
aam
sbb
adc
push
cmp
sub
ljmp
ja
mov
mov
lcall
movsb
fs
mov
mov
call
sub
shll
ljmp
ljmp
mov
arpl
aas
gs
jbe
faddl
and
movsb
mulb
push
push
iret
incl
mov
fistl
ljmp
lcall
sbb
mov
cmp
inc
daa
xorb
lcall
jae
dec
pop
mov
roll
iret
pop
lods
lock
hlt
ljmp
shl
lret
ljmp
jb
aaa
popa
push
xchg
hlt
out
jge,pt
xchg
fadds
ss
addr16
int3
mov
dec
data16
pushl
push
mov
or
fadds
call
push
sbb
ret
jns
mov
or
mov
xor
testb
push
mov
shl
jge
mov
mov
pop
cwtl
data16
push
pop
mov
out
loope
sbb
jp
arpl
std
ljmp
or
dec
loopne
jno
aad
lahf
leave
push
mov
mov
cli
xor
mov
fcos
jge
or
mov
xor
push
jns
pop
xor
jge
sbb
dec
jno
leave
xor
jg
lock
fisubl
xchg
inc
vmovq
dec
call
push
loope
scas
cmp
aam
pop
int
xchg
push
fnstenv
cmpsb
pop
adc
xchg
cmp
incl
lds
and
pop
cwtl
jo
lret
fisubrl
xor
pop
ljmp
adc
mov
lods
cmp
mov
pop
ljmp
out
cmp
pop
or
scas
jl
dec
jp
lds
in
sbb
lret
lcall
cmp
dec
adc
decb
mov
jbe
nopl
ljmp
icebp
xchg
in
adc
inc
cmp
in
jg
sub
inc
lcall
and
insl
dec
lea
jmp
adc
out
insl
jp
dec
dec
or
incl
and
test
pop
int
adc
aam
jmp
repz
push
jnp
push
out
xchg
push
pop
lahf
scas
sub
pop
dec
stos
cltd
xchg
jg
aas
je
repnz
mov
outsl
es
xlat
sbb
es
cmp
xor
ljmp
jbe
popf
in
jb
fmuls
xchg
jle
cmc
jns
inc
xchg
rcr
daa
or
icebp
sub
sar
inc
cmpsb
xlat
mov
fwait
data16
ljmp
mov
push
push
fsubr
ss
dec
mov
cld
ret
push
jg
mov
jmp
pop
adc
test
mov
mov
arpl
pushl
cld
lcall
imul
fidivl
add
jl
pushf
es
fs
pusha
ret
sar
aaa
std
jg
in
cmp
fs
mov
data16
mov
xchg
mov
enter
lcall
or
aaa
stc
pop
add
sub
cs
adc
popf
adc
cmp
mov
fldt
pop
neg
fimull
stos
push
add
shll
pop
rclb
call
or
add
inc
outsl
mov
adc
pop
ficomps
add
xor
sub
ljmp
inc
loopne
lret
jecxz
into
mov
lcall
xchg
push
cmpsb
cmpsb
inc
imul
ret
mov
and
repnz
sbb
ljmp
stc
jae
pop
inc
ja
mov
add
or
mov
ret
pop
sub
xlat
incl
cmpsb
fisttpl
dec
imul
inc
hlt
push
insb
add
xor
mov
and
orb
out
xor
inc
mov
sbb
push
std
fldt
mov
lret
jb
in
adc
xchg
mov
jg
fwait
decl
mov
movsl
in
cmpl
psadbw
out
mov
cld
jmp
cli
ret
aaa
es
cmp
jl
ss
jg
pop
loop
pop
das
and
sbb
pop
fisttps
scas
jmp
inc
vunpckhps
orb
loope
out
mov
pushl
arpl
cmp
movb
adc
cmp
mov
sar
jg
aas
hlt
es
jnp
mov
sub
stos
outsl
add
das
scas
repz
lret
jge
lea
cwtl
add
jle
ja
xchg
or
cmp
jle
jl
push
cmpsl
add
push
insb
fcomi
orl
adc
cmp
incl
xor
insb
mov
jl
sti
imulb
repz
adc
cmp
ljmp
jno
or
mov
lds
and
ficoml
std
jg
lret
mov
mov
sub
mov
fxch
and
jmp
lcall
mov
mov
add
lods
lds
sub
imul
fadds
test
lcall
lods
int
cmpsl
into
in
lea
xor
push
cmp
jg
data16
movl
mov
inc
mov
leave
jae
pop
outsl
shrb
inc
arpl
out
repz
addr16
rorb
in
mov
mov
inc
mov
out
add
sbbl
je
js
mov
pop
jnp
ljmp
xor
sbb
inc
fwait
pop
popa
stc
cmc
pusha
dec
lahf
jl
orl
pushl
fwait
test
pop
jecxz
cld
stc
repnz
fldcw
add
jge
movlhps
mov
je
mov
aas
sbb
addr16
jmp
push
popa
lcall
sbb
lea
out
jns
sub
sub
imul
sar
dec
insb
stos
jmp
push
xor
mov
insl
mov
in
aas
adc
lret
mov
jg
dec
lahf
aad
ljmp
mov
mov
sbb
push
mov
push
or
or
insl
push
dec
push
movsl
icebp
call
arpl
mov
aas
fiaddl
inc
mov
fwait
call
ret
stos
lods
imul
stos
jmp
std
or
fs
mov
nop
ds
lret
xchg
mov
mov
jge
xor
push
popf
jge
shrb
mov
ss
xor
push
cwtl
hlt
fwait
call
mov
xchg
sbb
insl
mov
and
pop
add
negl
xor
add
fucom
ret
mov
xchg
enter
mov
mov
sarl
mov
loope
and
ret
sbb
test
int3
call
ljmp
mov
popf
hlt
jp
add
clc
mov
xor
aad
clc
lcall
cwtl
lret
add
adc
push
ja
mov
pop
xor
mov
xor
cmp
xchg
mov
in
iret
enter
mov
mov
adc
idivl
push
push
and
cmp
pop
cld
mov
sar
or
sbb
jno
jno
add
sub
call
jae
add
scas
pop
or
movsl
data16
loopne
mov
pop
push
dec
push
push
fidivs
dec
mov
aas
and
lret
xchg
fbld
adc
mov
das
add
scas
int
in
adc
mov
in
pusha
in
dec
xchg
lcall
mov
mov
lahf
mov
push
pop
xchg
mul
sub
push
cld
sbb
xchg
jl
cs
cmp
xchg
add
adc
sub
jmp
adc
pop
jnp
pushl
clc
fnstenv
mov
in
sbb
dec
iret
pushl
jb
fiaddl
add
dec
mov
pop
sbb
jle
adc
inc
pushf
sub
call
das
data16
mov
nop
iret
mov
daa
lods
push
in
test
sbb
lcall
dec
adc
dec
push
xchg
mov
aas
mov
repz
lret
sub
and
mov
pushl
jecxz
mov
test
test
mov
push
mov
aas
cmpsb
pop
inc
pop
and
jg
push
mov
jno
jmp
aad
inc
mov
fcoml
data16
inc
fidivrl
scas
call
inc
adc
push
outsl
ljmp
add
inc
pop
repnz
cmp
mov
negb
mov
mov
loopne
inc
fsubs
repz
outsl
testb
jmp
sar
push
hlt
pop
xor
dec
jbe
sub
lcall
mov
sahf
test
mov
pusha
ja
incb
std
out
jmp
dec
imul
hlt
fbld
and
sub
mov
out
cli
lcall
mov
out
fcoms
incl
jge
jmp
sbb
jg
test
adc
or
out
stos
mov
and
lods
cli
push
ds
fisttpl
mov
lods
mov
lock
cmp
inc
std
cmp
int3
incl
push
lds
cmp
stc
or
cmp
stos
push
mov
mov
and
jo
xchg
mov
mov
out
mov
adc
fadds
push
repnz
lods
into
add
mov
jmp
cs
xchg
mov
popa
dec
adc
push
ljmp
daa
int3
dec
mov
cmp
mov
and
xchg
jae
mov
call
arpl
rcl
mov
pusha
and
or
jmp
and
xor
lock
incl
push
sbb
lcall
ljmp
fimull
jle
popa
outsl
nop
icebp
dec
inc
push
dec
bound
ret
std
loop
jmp
scas
sub
rclb
int3
sub
sub
iret
pop
notl
ljmp
mov
call
cmp
add
lret
lods
xchg
lcall
mov
repz
mov
jmp
mov
mov
adc
pop
cmp
repnz
fildll
out
sub
pop
fcomps
jae
cmpsb
cwtl
inc
inc
xchg
js
cmp
fstpl
mov
mov
call
mov
pop
fildl
or
imul
repnz
clc
xchg
mov
movsb
decl
jle
add
xchg
cmp
dec
das
adc
cmp
xor
cmp
mov
and
cmpsb
sub
jbe
push
jo
int
hlt
or
es
fdivp
push
inc
lods
jge
repz
inc
cmp
outsb
inc
mov
inc
aaa
hlt
shr
jne
insl
fstpt
lcall
movsb
iret
inc
mov
xchg
ss
adc
in
xchg
adc
sub
test
push
add
add
aas
cltd
clc
adc
lods
cmp
decl
inc
cmc
jmp
xchg
aas
pusha
mov
lcall
loope
test
imul
cmp
mov
pushl
xchg
adc
pop
jb
jmp
rcl
mov
add
loope
call
les
mov
insb
xor
cltd
cwtl
cs
int3
sbb
lcall
and
es
xchg
or
lods
and
incl
and
push
sub
roll
stos
inc
jecxz,pt
fildl
push
and
loopne
adc
mov
jno
jmp
sbb
mov
lcall
aad
xchg
cld
and
pop
leave
fsubl
cmp
arpl
stos
fildl
sarl
jl
add
arpl
push
and
clc
ljmp
ljmp
adc
ud1
imul
mov
mov
mov
jno
call
cld
lret
scas
mov
out
xor
mov
dec
mov
ljmp
xchg
xlat
int
mov
inc
lock
xor
inc
imul
xor
outsl
aam
popf
push
mov
add
and
mov
cwtl
jge
lahf
mov
call
cmpsl
push
lret
in
lea
aas
mov
cmp
pop
pushf
cmp
fcomps
outsl
push
mov
inc
cmp
mov
inc
into
or
daa
pop
lcall
fbstp
les
push
lods
dec
mov
icebp
addr16
mov
sbbb
mov
decl
mov
adc
sub
pop
push
dec
dec
jge
test
mov
push
jl
rcl
loope
cs
pop
mov
mov
sbbl
cld
arpl
int3
adc
jl
aas
outsb
sub
xor
adc
mov
call
outsb
inc
and
cmpb
jmp
daa
aam
sub
dec
jmp
xchg
aad
jg
shlb
outsb
jbe
or
xchg
popf
stos
jne
aaa
xor
pop
and
pusha
add
push
loop
sbb
outsb
in
inc
testb
add
hlt
insb
imul
subl
mov
hlt
ljmp
jo
mov
incl
jo
iret
dec
scas
mov
fldcw
nop
loop
pop
in
pop
iret
ret
lcall
rcrl
addr16
sbb
sub
test
jg
int3
mov
lods
test
inc
xchg
push
add
xchg
inc
or
cld
adc
mov
jmp
ds
ss
and
adc
aaa
mov
xchg
adc
daa
dec
inc
jo
std
mov
or
xchg
adc
lahf
nop
xchg
dec
jmp
push
jg
cmp
cmpb
loopne
sbb
in
out
mov
add
fld1
mov
les
in
jae
cmp
pop
outsl
or
pop
mov
sbb
hlt
push
scas
loopne
shlb
mov
ds
adc
loop
std
ljmp
mov
cmpsb
jg
jle
or
inc
mov
test
fcomip
ret
xchg
sub
jle
xor
mov
inc
sbb
mov
and
adc
jmp
lret
push
push
xor
aad
popf
sub
mov
stc
stos
dec
sub
adc
or
mov
div
xor
outsl
ljmp
int
fimuls
pop
ljmp
fldenv
jb
mov
repnz
push
pop
icebp
sbb
and
std
out
mov
cmp
sub
mov
jns
pop
inc
xor
sub
jg
inc
push
xchg
lock
sub
jmp
mov
decl
das
mov
mov
roll
outsl
jecxz
push
pop
enter
xchg
shll
cwtl
push
cmpsb
push
and
xor
mov
push
mov
or
call
outsb
inc
es
mov
lods
cld
lds
in
fldenv
mov
sbb
xchg
cmpsb
jle
imul
insb
ss
cwtl
dec
add
cs
pop
les
test
sbb
addb
cmp
call
pop
pop
dec
popa
mov
int3
outsb
loopne
mov
sub
pop
int3
and
lcall
pop
clc
gs
xchg
adc
sbb
loope
sbb
adc
push
out
mov
cli
call
adc
jbe
test
inc
call
loopne
lret
js
push
jae
mov
push
lahf
or
int3
add
mov
ljmp
popf
mov
jle
ja
pop
adc
add
lea
es
decl
sar
push
sarl
and
jno
fistpl
cmp
xchg
call
into
push
sahf
dec
stos
push
ret
cmpsb
pop
dec
jnp
xchg
dec
shll
outsl
dec
mov
movsl
in
aad
sti
fistpl
or
mov
sbb
inc
or
cmpl
mov
mov
cmp
inc
xchg
push
repz
dec
jns
jle
and
dec
ds
mov
push
dec
mov
jg
dec
cmpsl
pop
arpl
mov
movsl
or
frstor
jp
or
mov
pop
out
das
lods
arpl
push
sub
rolb
mov
out
aam
decl
push
sti
mov
pop
nop
dec
loope
xchg
shrb
jge
inc
and
movsb
sbb
ljmp
iret
enter
mov
adc
test
xchg
stos
push
test
mov
jecxz
sub
lcall
scas
push
pop
fstpt
jg
shll
loopne
jmp
aad
decl
cmp
xchg
push
mov
or
xchg
mov
stos
cmp
mov
imull
cmpsb
cs
push
jb
jbe
adcb
pop
call
and
popf
cmp
scas
stos
inc
xchg
movsl
mov
lea
stos
and
je
mov
enter
xchg
scas
sbb
arpl
ret
enter
adc
mov
inc
pop
addr16
mov
in
pop
cwtl
lret
push
xlat
cltd
jnp
add
cmp
jp
ret
pop
out
cli
js
jno
dec
xor
or
sub
adc
inc
mov
xchg
adc
fwait
pop
clc
push
xchg
fsub
arpl
jne
mov
jle
adc
repnz
inc
cmpsb
clc
decl
adc
hlt
and
mov
clc
pushl
add
sub
aam
lods
xor
inc
movsl
and
ljmp
movsb
insl
ret
and
xor
lcall
xchg
ret
mov
jae
xlat
inc
mov
sbb
aad
fld
repz
mov
push
cmp
jbe
imul
idiv
jmp
push
push
or
pusha
pop
int3
inc
push
or
dec
notl
aaa
or
xchg
movsb
jge
notl
inc
fidivs
test
adc
pushl
dec
in
lahf
inc
dec
sbb
inc
lcall
cs
popf
adc
lods
xor
loopne
movsl
retw
incl
cmp
xchg
pop
jne
jge
scas
imul
in
jno
fbld
jg
sbb
enter
push
add
scas
lea
mov
xor
adc
jl
movsb
sub
lcall
mov
push
mov
dec
into
jg
imul
test
jle
or
mov
dec
sub
lcall
shrb
or
imul
js
pop
mov
pop
stos
data16
decl
cmp
and
cmpsl
lret
int
push
rorl
mov
lret
int
sbb
cli
inc
dec
incb
out
dec
xchg
mov
dec
mov
gs
cwtl
xor
or
call
and
sahf
cltd
je
mov
mov
pop
aad
inc
in
lcall
and
mov
add
mov
xor
jae
ljmp
jmp
or
fimull
or
in
lods
lret
cmp
jbe
iret
fidivl
push
leave
pop
xlat
test
clc
imul
cmc
es
xor
mov
pop
ret
mov
xchg
hlt
clc
shll
ljmp
sar
or
sarb
pop
sub
pop
cmp
cmp
loop
das
fs
cmp
push
adc
mov
in
std
js
xchg
or
nop
xchg
stc
adc
imul
std
jmp
push
popa
cli
push
xchg
js
aad
mov
push
dec
xchg
decl
push
aad
mov
and
aam
dec
notl
dec
add
gs
dec
pop
clc
jge
clc
ljmp
or
out
repz
push
xlat
mov
pop
fs
mov
in
inc
pushf
add
and
aaa
push
jae
jo
out
or
and
pop
iret
lock
decl
xchg
pop
addr16
dec
cmp
and
jg
mov
cmp
and
subb
scas
mov
aad
jbe
test
cmp
mov
test
pusha
inc
fistps
inc
bound
sar
pop
dec
movsl
mov
shrl
add
jmp
fisubrl
in
stos
stos
sub
jae
rcrl
incl
adc
sbb
add
cmp
mov
dec
push
loope
dec
popa
xor
mov
pop
popf
js
cmpsb
call
push
xchg
pop
subl
mov
sub
aam
jns
out
jbe
outsl
xchg
mov
sub
pop
cltd
subl
mov
rolb
fs
xchg
insl
pop
dec
add
stc
dec
ss
mov
sub
rcrl
incl
jmp
fsubs
cld
pop
pop
lret
incl
cmp
test
jmp
stos
das
iret
ja
cwtl
or
jns
sbb
mov
or
jbe
mov
push
mov
test
movsb
incl
jmp
inc
adc
cwtl
inc
aad
add
and
loop
lds
mov
sar
jmp
bound
lahf
jo
xchg
sbb
inc
shrb
jo
sbb
fucomi
js
pop
pop
sbb
es
jae
rorl
daa
jno
pop
pop
pop
cmp
pop
outsl
mov
jle
aam
dec
xchg
cwtl
cs
repnz
dec
mov
out
add
lret
or
sarb
bound
aas
adc
leave
sahf
shrb
dec
loope
xchg
pop
js
sahf
ja
push
daa
mov
cmp
dec
out
mov
roll
test
jnp
jb
decl
shll
pusha
add
insb
fwait
ljmp
lea
cmp
mov
call
mov
std
test
mov
cltd
mov
clc
mov
jb
cmp
mov
adc
in
mov
pusha
cmp
jmp
xchg
push
xor
sub
sti
dec
fdivs
sbbb
pop
pop
scas
cvtdq2ps
cli
pop
lahf
fcoml
lock
inc
cli
fsubrs
lcall
push
inc
xchg
cli
lock
or
xor
sbb
decl
cmc
sub
jecxz
cs
loop
pop
push
fadd
in
rolb
cmpl
decl
cwtl
xchg
pop
pop
daa
pop
jg
and
mov
mov
cmp
lcall
daa
cmpsb
ds
ret
push
dec
or
push
hlt
add
push
enter
imul
cld
call
add
rol
xor
push
jns
mov
pushl
mov
ds
arpl
jne
lods
lcall
pushf
push
cmp
ret
fsubp
jnp
cmovb
movsl
filds
lods
xchg
adc
jae
addr16
pop
daa
cwtl
and
and
out
fdivs
jmp
push
push
add
sub
lcall
sub
das
das
lret
loop
mov
xchg
dec
popf
repz
addl
incl
nop
popa
mov
loop
cmpsl
test
cmp
cmc
mov
sub
cwtl
ljmp
sbb
adc
or
int3
loope
addr16
cmpb
and
pushl
cmp
cmp
pop
insb
addr16
das
stos
hlt
cmpsb
fdivrs
and
inc
mov
lcall
push
test
sbb
cmp
test
fmull
xorl
into
orl
ljmp
push
test
push
sub
cltd
xchg
inc
mov
pxor
shll
pop
dec
jecxz
cld
fcomip
xor
add
fdivl
dec
test
xchg
ret
jg
gs
mov
sub
push
decl
inc
loope
sbb
das
cld
fnstcw
add
mov
shrl
bound
cs
push
pop
fs
lcall
jno
out
ret
inc
daa
push
cld
jmp
cwtl
setns
enter
or
outsl
jb
dec
jo
stos
outsb
xchg
jmp
dec
imul
test
fs
pop
mov
inc
mov
gs
dec
call
xchg
add
sbb
mov
xlat
xchg
ret
pushl
push
dec
push
daa
bnd
xor
cld
in
push
jmp
imull
xor
pushl
mov
xor
or
cmpsl
adc
and
or
call
clc
mov
jnp
mov
cs
inc
cmpsl
sbb
stos
dec
aam
call
cwtl
andl
cwtl
sahf
push
scas
lcall
adc
lcall
aad
push
lds
shrl
aaa
inc
pop
dec
pop
js
inc
jo
mov
jb
rolb
jmp
xchg
xor
js
std
xchg
notb
hlt
push
adc
push
test
jnp
mov
mov
popf
cmp
faddl
or
fsub
nop
cmp
ljmp
cmp
inc
movsl
dec
sahf
mov
incl
fwait
rcrb
fidivrs
jbe
movsb
adc
mov
push
jge
jne
add
jmp
jl
fidivl
or
iret
adc
out
data16
mov
fildll
cmp
pop
jecxz
and
pop
or
orb
stc
pop
or
mov
stos
and
enter
jecxz
out
push
dec
sub
adc
pop
push
icebp
adc
int3
fildll
inc
je
jns
xchg
ljmp
add
adc
mov
loop
jl
stos
cmp
fstpt
test
sbb
aam
cmp
dec
sbb
test
clc
sahf
mov
ret
and
sbb
pushl
mov
cltd
pop
movsb
pushf
aam
ja
pop
inc
or
dec
arpl
rclb
adc
call
mov
gs
mov
inc
lods
lahf
lcall
lcall
dec
bound
mov
hlt
int3
int3
sub
or
mov
push
lcall
adc
xor
cwtl
loopne
cld
mov
mov
jae
das
push
mov
mov
outsb
xchg
pushl
test
movsb
int
pusha
jg
push
popa
xchg
mov
cmp
or
call
dec
xor
out
out
cmp
dec
jecxz
push
dec
push
bound
sub
xchg
dec
sbb
out
clc
popf
mov
inc
cmpsb
iret
pusha
inc
mov
jl
cld
pop
fildl
and
movsl
and
mov
arpl
das
or
xchg
lcall
fbld
popf
mov
fs
repnz
push
fstpl
hlt
pop
xchg
int
and
fidivrs
jecxz
loopne
mov
fsubr
sub
jbe
sbb
xchg
imul
pop
xchg
cli
inc
outsb
xchg
out
add
mov
xchg
and
adc
outsb
pop
cwtl
shl
jg
out
push
jg
call
or
lcall
sub
outsb
ds
dec
jl
xchg
mov
fcoml
ficomps
pushf
push
les
mov
sub
inc
dec
xor
idivl
les
inc
add
in
adc
add
add
jmp
lea
pop
mov
mov
rcrl
icebp
or
mov
mov
lcall
clc
aam
mov
pusha
mov
cmp
sbbl
std
idiv
decl
dec
cmp
cld
inc
mov
sahf
das
jnp
cmp
mov
int3
pop
arpl
push
fbld
xor
mov
fwait
push
jg
lods
int3
adc
jbe
push
aam
lcall
es
inc
sbb
fidivrl
cmp
push
xor
cltd
mov
into
mov
dec
stc
lock
mov
subb
sub
aas
sbb
incl
leave
and
cwtl
test
or
mov
xor
pop
xor
cmp
sub
mov
dec
sub
cmp
dec
pop
lea
imul
mov
js
jb
sbb
subl
xlat
jns
lea
jg
jmp
xchg
pusha
shll
jecxz
jb
cmp
mov
orb
daa
and
inc
sub
jmp
xor
inc
pop
imul
pop
cmp
fcmovnu
stc
ljmp
cli
aam
mov
call
mov
movsl
pop
cltd
cmpsb
call
movsl
xchg
negl
pop
enter
clc
int
mov
ret
loope
xchg
call
and
clc
orl
push
mov
mov
out
adc
and
adc
mov
mov
popa
sbb
jl
hlt
daa
dec
mov
cmp
push
inc
into
dec
xor
inc
dec
adc
shl
imul
mov
cli
sub
or
loop
sbbl
jp
add
cmp
xor
sti
pop
xchg
cwtl
or
jnp
and
jns
inc
outsl
mov
ficompl
push
push
inc
mov
dec
jg
sbb
mov
mov
adc
xchg
push
dec
pop
gs
mov
jg
pushl
outsl
in
adc
fst
cld
popa
dec
aad
test
or
loop
ljmp
xor
add
pop
es
add
shl
addr16
leave
sar
cmp
inc
adc
inc
dec
inc
fmull
into
ja
jb
repnz
aas
pop
mov
clc
in
in
add
dec
ret
jecxz
adc
add
lock
add
pop
lods
push
add
aas
lret
loope
rorl
push
mov
cs
sbb
push
push
cltd
ljmp
sarb
out
jge
mov
mov
mov
gs
mov
pushl
jmp
lds
push
in
call
les
scas
jle
sub
movsl
mov
sbb
dec
int
leave
mov
and
mov
inc
fisubl
xchg
out
mov
ja
xchg
jnp
negb
jb
inc
roll
rolb
ljmp
adc
jno
cltd
mov
or
pushf
pop
cmc
or
pop
inc
mov
call
mov
sub
ret
jb
and
pop
inc
mov
popa
xor
movsb
inc
mov
mov
push
dec
jmp
lret
in
sahf
inc
lock
loop
xchg
cltd
push
incl
inc
std
std
leave
add
bswap
and
pop
jl
negl
jmp
mov
fnsave
decl
loop
pushf
movsl
lret
cmpsl
mov
push
dec
cmpsb
mov
inc
cmc
pop
inc
or
cli
pop
fisttpll
incb
fidivrs
pop
sub
mov
mov
inc
or
pushl
adc
out
dec
cmp
lahf
push
dec
jp
mov
lea
pop
fcoml
xor
jnp
jo
mov
mov
lock
setb
fbld
or
decl
push
push
mov
mov
in
adc
cmpsb
idiv
popf
mov
mov
mov
test
push
dec
jae
jge
mov
jg
test
sbb
jmp
sbb
lret
push
test
daa
call
pusha
into
add
xlat
jae
cmpsb
mov
clc
stos
std
stc
popa
nop
addr16
jl
jno
mov
mov
mov
jbe
mov
rcr
mov
lods
adc
or
mov
out
lcall
pop
clc
movsl
lcall
gs
leave
ljmp
iret
xor
ret
clc
inc
mov
pop
push
xor
lock
jmp
and
jle
mov
ret
rcrb
xchg
mov
decl
ss
jge
adc
sarl
adc
out
pushl
imul
dec
xchg
dec
nop
pop
jne
cmp
fcmovnb
xor
lds
loope
mov
call
cmpsl
dec
movsb
push
bnd
inc
shrb
clc
cmp
inc
and
mov
hlt
sub
sar
jmp
sahf
scas
out
or
shrb
rcl
imul
les
lods
lahf
rol
mov
insb
loop
dec
pop
or
movsl
jo
lods
ret
loop
xorb
fcmovnbe
call
cmp
out
ret
push
mov
xchg
lcall
jmp
imul
inc
rcll
gs
pop
pop
fsubrs
hlt
inc
jno
fisttpll
cmp
fwait
js
bound
std
mov
mov
mov
jg
push
insl
inc
sti
xchg
pop
ss
xlat
jp
fwait
inc
or
icebp
sbb
call
xor
adc
inc
push
out
lcall
jae
sbb
sbb
cmp
push
stc
xor
fcomip
pushl
inc
mov
xchg
shrb
orb
xor
out
push
mov
into
push
add
call
sbb
adc
jo
push
fildll
fsts
repz
into
out
cmpl
stc
hlt
hlt
sbb
inc
xchg
sarl
divl
leave
or
sub
psubb
nop
gs
dec
arpl
jne
outsl
movsb
xor
jbe
pop
fildll
in
cs
mov
decl
fwait
addr16
cmp
fmull
hlt
unpckhps
orb
pop
subb
fidivl
pop
movsb
mov
mov
pop
mov
xor
sbb
iret
inc
out
xor
sub
decl
jmp
sbb
mov
mov
mov
ss
mov
mov
pushl
aaa
imul
cwtl
mov
jmp
das
jbe
cmp
fdivrs
lods
fsubrl
lcall
xor
xchg
mov
jl
ja
test
mov
mov
or
je
js
jge
jns
cmp
fisttpl
mov
rolb
fidivs
out
xor
shll
pushl
mov
leave
adc
xchg
sti
iret
push
fwait
pop
mov
xor
and
dec
lods
mov
shrb
in
inc
push
insl
call
ds
inc
push
add
dec
inc
xchg
or
fldenv
or
mov
jnp
xor
inc
dec
lock
notb
mov
jmp
add
ljmp
scas
ficomps
push
jl
mov
push
sti
jne
test
adc
dec
mov
push
push
lcall
push
outsb
ds
jbe
jmp
movsl
and
pop
sub
jmp
push
cmp
lods
repnz
pop
cmc
dec
mov
incl
sbb
fdivp
mov
xor
roll
mov
xchg
xor
or
inc
std
aad
test
les
mov
repz
js
ds
hlt
jecxz
or
clc
decl
jnp
xor
and
lock
and
jg
pop
push
mov
mov
lret
xchg
add
or
fldenv
and
aas
es
idiv
push
out
or
or
cmp
rcrl
test
cmp
inc
inc
pop
xor
mov
test
cmp
sbb
into
fdivr
xor
sub
jne
std
mov
cli
call
cmpsl
sbb
dec
sbb
inc
ret
ret
in
push
pushl
cmp
cmp
and
and
or
js
pop
and
sbb
adcl
xchg
pop
test
mov
cmpsl
pop
sbb
or
cmp
push
xchg
ret
xchg
mov
dec
inc
jle
pop
mov
leave
xchg
out
decl
mov
clc
push
lret
aad
into
pop
in
xchg
mov
sub
inc
jle
mov
call
decl
bound
ja
arpl
shlb
jp
and
jp
shrb
call
add
fildll
mov
outsl
add
and
sti
lods
lret
cltd
sbb
cmp
jmp
je
sbb
xchg
jmp
mov
mov
sbbb
imul
sbb
call
xchg
push
icebp
incl
cmp
imul
int
insb
js
mov
xor
xchg
inc
ljmp
push
sub
mov
std
xchg
and
bound
sbb
insl
adc
enter
jmp
and
in
idiv
popf
lock
jae
loopne
mov
or
mov
pop
nop
shlb
mov
fs
push
sub
testl
xor
lods
add
add
insb
jo
jg
popa
mov
sti
jbe
adc
fistl
aas
sahf
xchg
decl
shlb
and
xor
pop
dec
mov
mov
inc
lods
fwait
test
jo
clc
decl
lcall
flds
es
sub
outsl
clc
out
jl
imul
test
cmp
addr16
lcall
dec
pop
push
cmpsl
js
dec
std
mov
incl
das
test
mov
mov
cmp
jb
adc
ret
nop
mov
push
ret
ret
add
cmp
jg
pop
fstpl
dec
js
xchg
repnz
pop
mull
jae
mov
inc
adc
lock
decl
inc
xlat
push
fdivr
jle
das
mov
aaa
insb
repnz
loopne
or
sub
xchg
xor
inc
cmp
in
pushl
and
jg
ja
inc
mov
repz
inc
lret
movsb
or
sub
mov
out
jg
out
pop
dec
lcall
iret
repz
mov
mov
lcall
pusha
fisttpll
daa
and
mov
jl
xor
in
dec
sbb
popf
adc
cmp
ret
int3
cmp
xor
sbb
cmp
decl
int3
mov
mov
adc
cwtl
iret
pop
leave
sarb
ljmp
sbb
stc
pusha
ja
sbb
dec
xor
repnz
insl
mov
mov
push
lds
popa
xchg
mov
and
jg
int3
fisubl
in
pop
inc
cli
fcompl
xor
loope
inc
jns
mov
insb
pop
push
lods
fnstenv
pop
add
das
mov
or
mov
adc
lods
xchg
sbb
ret
sbb
push
push
aad
sub
enter
movb
mov
dec
xor
and
loopne
outsl
cmp
incl
sub
mov
cltd
in
jae
xor
and
mov
pop
enter
mov
inc
cmpsl
lret
adc
incl
sub
sub
sub
pop
test
sub
lcall
mov
shlb
mov
push
lcall
cmp
fsubl
insl
mov
call
lcall
aas
lret
cmpsb
jle
inc
pop
sbb
decb
pop
call
dec
hlt
out
adc
xlat
jge
adc
ljmp
adc
pop
pop
mov
jae
enter
and
xor
ret
or
jae
decl
sub
cmp
mov
ret
pcmpgtb
push
pop
lcall
fs
add
cmp
fs
sub
inc
or
or
popf
adc
call
bound
addr16
mov
cli
in
insl
dec
cld
int
in
ljmp
addb
pop
addr16
orl
iret
push
mov
xor
fisttps
lahf
xchg
fisubs
adcl
cmp
in
jge
clc
jns
mov
jmp
in
ret
incl
subb
sti
pop
jle
mov
fisttpl
stos
jo
push
mov
adc
imul
add
rorb
inc
in
xchg
sahf
rcl
jmp
dec
scas
xchg
fs
imul
cld
outsl
mov
sbb
ljmp
adc
scas
xchg
rolb
insl
leave
sahf
or
in
js
addr16
outsb
enter
mov
outsl
and
decl
test
push
pop
push
inc
and
and
adc
and
cmp
jle
pop
movsl
mov
pushf
stos
or
flds
add
incl
push
adc
mov
fs
insb
sbb
test
cmp
sarl
enter
cli
decl
imul
movsb
or
adc
es
xchg
add
scas
push
mov
int3
sbb
out
lods
mov
cmpsl
pop
dec
push
shl
into
jmp
cmp
pop
mov
xor
lcall
xchg
ljmp
xor
fisttpll
xor
pop
adc
adc
inc
mov
je
or
cmc
jg
mov
xor
jge
aam
scas
icebp
and
mov
push
rorl
push
vpmullw
and
hlt
stos
mov
jl
std
js
dec
pop
adc
xchg
sbbl
mov
sub
sahf
pop
xchg
sub
cmpsb
xor
ja
test
call
std
incl
and
repz
pop
sub
daa
mov
xor
lcall
out
in
shlb
and
cmp
nop
pop
xor
lea
rclb
jbe
jg
incl
cmp
lods
jns
repnz
xlat
out
sub
icebp
int3
mov
mov
and
testl
inc
scas
hlt
mov
insl
mov
sub
push
sub
loop
fdivr
jmp
repnz
in
jp
mov
mov
add
inc
hlt
xchg
gs
pushl
das
leave
or
test
orb
fs
scas
mov
movsb
xchg
jl
mov
jp
pop
jb
jae
jge
add
push
and
jo
jge
inc
pusha
test
out
faddl
xchg
dec
cmp
sar
in
push
xor
and
cltd
aad
les
sub
jp
pop
nop
xor
mov
add
xchg
dec
fisubs
jecxz
dec
sbb
push
sti
loopne
sub
lods
lods
repnz
pop
shl
ljmp
push
fsub
inc
mov
pop
into
mov
in
pushf
jb
and
imul
nop
sub
lahf
roll
jp
add
imul
sahf
enter
jg
mov
mov
addr16
add
mov
cltd
shll
jecxz
mov
int3
notl
gs
add
jecxz
outsb
dec
loop
jmp
decl
push
out
mov
add
jge
ljmp
dec
fnstsw
cs
jmp
push
mov
fnstsw
inc
js
les
cmpsl
cmp
inc
pop
lret
int
pop
out
jae
jmp
out
decl
sbb
cmp
push
xchg
xor
mov
pop
mov
shll
ljmp
adc
jecxz
mov
mov
in
jne
mov
test
jne
sub
jge
xchg
cwtl
push
pop
out
or
push
push
sti
sbb
jp
ret
xchg
jno
repnz
dec
mov
cld
mov
push
aaa
mov
push
cmpsl
loope
out
sub
rcrb
sub
outsb
test
mov
push
es
fcmovnb
mov
inc
cmp
mov
inc
icebp
mov
decl
bound
pop
divb
adc
xorb
decl
xor
jmp
inc
stc
pop
fnstsw
push
test
sbb
xlat
and
inc
clc
add
mov
int3
mov
sbb
and
movsl
add
int
mov
push
xchg
out
aaa
and
or
dec
pop
xchg
imul
sub
mov
mov
jg
mov
fldenv
adc
pop
jl
mov
dec
or
and
push
mov
lret
lret
dec
andb
notl
mov
std
push
test
decl
inc
ss
imul
das
out
and
les
stos
insb
jo
mov
cs
and
add
daa
mov
shlb
lret
jl
xchg
inc
cwtl
cld
jno
adc
and
mov
mov
lret
fwait
and
xchg
sub
decl
xchg
repnz
mov
popf
addl
stos
mov
sbb
and
decl
sub
ret
or
add
or
cmp
fdivrl
jmp
sub
xchg
repz
ds
bound
add
sbbb
or
jge
mov
incl
xor
test
insb
mov
and
and
mov
sub
repnz
imul
stc
cmp
pop
xor
aaa
movsb
pop
ljmp
mov
cmp
fidivs
xchg
xor
incl
mull
rorl
sbb
jp
inc
sbb
ljmp
mov
jge
xchg
jne
dec
jp
jge
push
sub
mov
mov
mov
repz
jg
push
add
inc
jecxz
mov
movsl
jns
test
cmp
mov
les
hlt
pushl
out
out
sub
inc
insb
dec
dec
sahf
push
int3
ljmp
jg
mov
xlat
xor
rolb
pushf
mov
mov
js
lcall
dec
in
fs
jns
dec
cwtl
aam
in
mov
or
lods
xchg
add
out
cs
cli
int
stos
mov
ja
adc
adc
dec
fwait
in
xor
xor
cmp
pusha
xchg
xchg
push
fcompl
pop
pop
outsl
ret
lds
stc
adc
cmp
jmp
mov
add
lcall
das
pop
imul
pop
popa
cltd
add
jnp
xor
lcall
adc
js
inc
dec
lahf
adc
inc
inc
jecxz
xchg
lods
jge
fbstp
push
mov
int3
pop
xchg
fwait
cmc
and
inc
cs
mov
incl
out
jno
aam
subl
lea
js
dec
push
cld
data16
lcall
dec
xchg
addr16
insb
push
mov
mov
jbe
push
sti
int3
mov
push
out
xor
cmp
scas
or
data16
imul
inc
pop
dec
xchg
std
or
jns
popa
repnz
mov
sbb
pushf
pop
loop
in
add
jmp
pop
out
icebp
std
loope
mov
sbb
sbb
aam
std
call
ds
pop
ds
nop
and
ret
or
adc
ja
divl
sub
inc
jp
call
cwtl
inc
jns
das
mov
inc
test
adc
mov
push
mov
call
add
pop
sbb
mov
push
jecxz
fs
aam
clc
inc
sub
popa
sar
pushl
inc
sbb
cmpsl
psllw
dec
ret
and
clc
cmpsb
clc
leave
adc
mov
pop
pop
ficoml
call
mov
adc
gs
pop
xchg
cmp
xor
into
inc
jge
decl
fmull
dec
cli
mov
pop
mov
sar
jl
xor
mov
xor
sbb
inc
jl
push
push
push
dec
adc
sti
xor
add
or
incl
into
pop
cli
pop
lcall
xchg
lahf
adc
and
push
inc
lods
out
push
lcall
xor
sub
sti
inc
repz
cld
add
add
mov
adc
das
nop
mov
push
insb
ss
push
shlb
out
pop
mov
sbb
sbb
pushl
xchg
daa
mov
in
icebp
imul
repnz
pop
pop
add
pop
push
xorb
pushl
mov
inc
dec
test
adc
fwait
push
fsubs
icebp
cmc
jne
xlat
add
mov
lcall
add
clc
mov
mov
outsl
imul
adc
inc
pop
mov
inc
cld
mov
jbe
sahf
mov
jge
cmpsb
pop
enter
xor
mov
test
pop
add
mov
or
xchg
jmp
out
les
adc
iret
push
repz
cmp
jle
adc
jae
movntq
out
aad
daa
insb
pushl
mov
lret
pushf
rcrb
mov
lcall
leave
and
daa
push
sbb
jmp
cmpsl
in
jae
insb
leave
enter
repnz
mov
xchg
pop
outsl
pop
movsb
dec
scas
cmovl
mov
cmp
inc
and
es
dec
and
std
or
or
sub
jne
cmc
scas
ret
outsl
mov
out
jmp
ret
jmp
ret
cmpsl
in
test
inc
movsb
shrb
sub
movsb
mov
dec
test
test
test
xchg
pop
pop
jb
or
fwait
shr
jae
pushl
mov
jne
xchg
push
out
movsb
not
out
push
mov
pop
ror
mov
in
sub
pushl
sbb
jp
jo
jne
jo
add
std
sbb
mov
xchg
xor
xchg
xchg
inc
es
daa
aam
push
fwait
add
mov
mov
push
dec
out
aas
icebp
shlb
mov
std
pushl
or
jl
cmc
pop
cmp
add
inc
pusha
dec
jge
rcrb
test
idivl
or
jns
pop
jg
mov
xor
adc
mov
aad
sub
int3
xor
mov
sbb
xchg
xor
add
addr16
mov
cmc
or
xchg
jmp
ljmp
mov
dec
fldl
sub
inc
pop
pinsrw
push
xacquire
dec
verw
cwtl
dec
fcmovu
popa
daa
sbb
adc
sub
push
mov
mov
pop
jo
cli
lahf
in
cli
xchg
cmp
fwait
inc
mov
clc
push
sub
pushf
lods
aaa
mov
addb
mov
test
incl
dec
xchg
fistl
stos
xchg
leave
mov
xor
test
stos
dec
repz
js
pushl
add
or
cmp
out
sbb
pop
insl
lcall
test
xorb
pop
cld
push
xchg
push
mov
sub
push
clc
movsb
jns
or
stc
push
xchg
in
loope
idivl
mov
fists
cs
out
jge
mov
adc
insb
mov
sub
push
jmp
test
mov
cmp
lahf
aad
cmp
inc
call
dec
mov
push
pusha
pop
decl
stos
xor
sub
cmc
lcall
pusha
ja
sbb
jecxz
pop
xor
roll
out
dec
aas
insl
adc
cli
ljmp
in
xor
or
inc
inc
notb
push
jg
xchg
jmp
ljmp
mov
jle
out
adc
mov
popf
jnp
xor
mov
cld
cmp
out
cltd
cmp
sub
sub
pushl
push
test
push
in
jo
push
fdivrs
and
xchg
daa
cwtl
cmpsl
incl
ljmp
mov
push
fcomps
fistl
leave
sub
in
mov
ret
jmp
pop
insl
and
lcall
push
test
jge
mov
idiv
lcall
mov
inc
and
add
add
mov
lods
std
pop
cmc
lcall
sahf
scas
nop
mov
pop
dec
shll
mov
pusha
inc
scas
add
dec
in
dec
add
call
fcomip
imul
out
dec
jno
xchg
ficomps
lods
fucompp
mov
idiv
add
rolb
movsb
cmc
mov
add
nop
test
fxch
test
punpcklwd
or
js
mov
xlat
dec
lds
punpcklbw
out
jbe
cs
movsl
mov
sub
stos
cmp
mov
lcall
scas
fs
ds
xor
jle
push
scas
ss
jmp
mov
pop
mov
push
test
inc
sbbb
test
xor
fdivs
dec
mov
dec
adc
je
jge
xor
inc
push
mov
mov
pop
dec
pop
or
cmpsl
push
xchg
stos
mulb
cmp
test
cmp
jmp
mov
dec
sbb
leave
xchg
or
and
pop
or
popa
jge
decl
out
ljmp
lods
movsb
cmpsb
mov
js
out
inc
in
das
xor
clc
pop
and
call
test
mov
mov
incl
out
ror
and
mov
dec
movsl
dec
outsb
pop
fnsave
mov
cltd
add
incl
jo
lock
testb
dec
scas
lcall
ljmp
inc
pop
pushl
rorb
mov
lret
sbb
ret
dec
rcrl
inc
and
sbbl
lcall
xchg
stc
add
pop
lret
call
mov
jl
imul
fcmovu
cltd
push
decl
ljmp
lret
add
xchg
popw
or
pushl
push
das
inc
jge
and
mov
enter
iret
adc
jge
adc
sbb
ljmp
pusha
inc
iret
sub
flds
dec
push
pusha
jbe
inc
test
popf
nop
les
jmp
cmpsb
fistpll
jle
sbb
pusha
sub
popf
sbb
and
mov
mov
lcall
je
lcall
imul
pusha
or
pop
das
cmpsl
cmp
iret
mov
add
mov
push
add
pop
popf
out
dec
sub
mov
add
cmp
imul
add
or
add
incl
sub
stos
add
ja
jo
mov
jg
nop
or
add
pop
test
sarl
add
add
dec
orb
mov
push
inc
test
xchg
cmpsl
adc
roll
scas
jle
dec
lds
jno
jg
mov
lock
mov
dec
and
sub
pusha
or
jno
mov
jnp
xchg
movsl
push
daa
add
xchg
dec
scas
imul
push
and
cs
push
movsb
push
movsb
jle
dec
jge
scas
push
stos
push
and
mov
and
imul
cld
scas
loop
push
inc
pop
pop
add
mov
pop
sbb
mov
mov
sbb
inc
mov
pusha
sbb
mov
sarl
pop
les
push
adc
fs
mov
dec
repz
insb
or
lret
imul
imul
imul
into
mov
jbe
fnstenv
fdivs
mov
stos
pop
fldl
dec
stos
mov
and
fstpt
aam
push
mov
push
mov
insl
shrb
shll
fidivrl
iret
outsb
or
mov
outsb
pop
push
ret
je
fidivrs
out
push
sti
in
cmpb
mov
xorb
ljmp
mov
jg
movsb
push
add
mov
sbbl
push
mov
cmp
arpl
push
push
push
add
jne
int
xor
push
ret
add
fsubp
cmpsl
push
mov
push
pop
dec
add
jbe
push
data16
ficomps
jo
xchg
cs
push
jge
mov
shlb
lret
stos
aas
add
out
mov
push
push
xlat
jne
add
cmpb
aad
push
xlat
ja
js
in
cmpsb
jge
push
jns
push
jp
jp
inc
lods
fsubrs
push
fidivrl
sarl
ja
fldl
les
je
jmp
fstp
mov
ljmp
xchg
in
xchg
sub
fnsave
push
xchg
push
setbe
xor
dec
fisttpl
push
lcall
cwtl
push
cltd
cmp
cmp
pushf
cmp
jge
push
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
lahf
fucomi
fimull
push
mov
push
imulb
incl
movl
out
push
hlt
iret
repz
clc
stc
cli
sti
cld
std
xor
inc
jo
add
mov
jae
int3
data16
add
imul
data16
add
pop
add
pop
add
add
inc
adc
add
sub
add
testl
or
add
lahf
in
ss
or
test
test
add
or
or
sub
pop
adc
add
xor
adc
add
lods
lods
pop
mov
sbb
scas
add
scas
insl
lods
pop
add
outsb
imul
scas
lods
push
and
adc
sbb
add
add
push
scas
pop
sbb
mov
mov
mov
imul
mov
pop
push
add
movsb
mov
push
xor
decl
sbb
and
mov
mov
stos
movsb
mov
pop
mov
dec
adc
sub
pop
sub
mov
stos
in
add
sub
or
pop
daa
mov
das
or
mov
inc
pop
aas
cmp
mov
mov
pop
cmp
mov
cmpsb
add
mov
pop
xor
xor
push
pop
pop
or
or
add
ja
pop
insl
pop
pop
xor
mov
pop
das
push
cs
xor
mov
push
push
xor
das
pop
push
push
xor
adc
pop
push
cs
dec
inc
clc
ljmp
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
addr16
sub
xor
pushw
dec
dec
cmp
jnp
dec
jo
mov
inc
xorl
mov
xchg
xchg
xchg
popf
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
dec
sub
jns
dec
push
bound
js
test
xor
jne
je
shrb
inc
jg
les
nop
xchg
jo
test
cmovb
pop
scas
inc
pop
mov
aas
outsl
dec
outsb
add
push
jle
xchg
pop
clc
jg
iret
sti
mov
push
mov
cmpsb
push
mov
xor
mov
dec
dec
xor
ja
push
ja
jb
cs
xor
mov
sub
imul
push
pop
jbe
dec
sbb
and
mov
out
xchg
jo
push
inc
mov
cmp
aam
dec
loopne
insb
inc
xchg
jae
mov
inc
push
popf
inc
imul
jg
imul
add
xchg
jb
bound
mov
lahf
ja
insl
mov
inc
push
sahf
mov
pushl
add
outsb
add
xchg
xchg
pop
push
test
fdivr
rcr
cmpsb
dec
push
dec
push
movsb
jae
add
jb
shll
pop
sub
mov
push
rorb
add
lcall
int
add
outsb
mov
dec
push
add
ja
or
mov
fistpl
imul
cli
data16
ds
push
add
and
es
js
mov
gs
mov
shrl
insb
pop
outsb
in
cmpsl
jns
outsl
ror
push
ds
insl
fisttpl
jle
add
push
jg
fiadds
call
xchg
out
data16
add
dec
mov
add
test
add
push
loopne
iret
sahf
cmp
add
jb
out
and
xchg
in
push
jle
jecxz
or
fiadds
fnstcw
aad
push
divb
xor
outsl
push
fildl
adc
push
adcl
addb
sbb
test
insb
mov
mov
test
in
mov
push
xchg
nop
and
int
in
push
out
xchg
in
xchg
lock
sub
sub
add
rcrb
scas
outsb
out
xchg
das
push
xchg
fidivl
aaa
repnz
xor
cwtl
push
cmc
sahf
xor
lcall
fwait
cmpsb
pop
cmp
mov
es
aam
jle
push
rolb
mov
test
sahf
inc
pop
or
jbe
stos
into
shll
out
push
lgs
int
mov
mov
sarb
push
rcr
rcl
mov
jmp
data16
add
cmp
dec
dec
cs
dec
out
je
inc
sbb
add
adc
mov
mov
femms
or
or
mov
inc
sbb
es
push
adc
push
add
nop
add
adc
ds
add
enter
mov
adc
sbb
xchg
push
mov
cld
sbb
mov
push
add
and
loopne
ds
push
imul
sub
scas
add
and
insb
xor
iret
adc
cmp
sub
mov
sbb
inc
mov
sub
scas
cmp
inc
jle
ficompl
xor
dec
popf
imull
or
dec
cmpsl
jge
lods
aas
adc
ds
xor
dec
fidivs
cmp
test
mov
ds
divb
xor
pop
mov
clc
std
mov
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
inc
dec
test
mov
mov
ds
xor
sub
sub
sub
sub
jg
mov
and
inc
mov
push
push
push
push
push
imul
push
pop
loopne
sbb
push
push
push
imul
fists
pop
imul
nop
cltd
mov
mov
jmp
xchg
pop
cmp
insl
popf
mov
jge
jns
jns
jle
addl
jb
jae
pushf
pushf
shlb
divl
imul
rolb
pusha
mov
addb
add
add
stc
lea
push
repz
mov
push
xor
mov
jbe
bound
jae
aas
add
incl
xchg
pop
cmp
test
add
mov
add
mov
push
mov
mov
add
cmc
repnz
inc
add
gs
pushf
push
fcmovu
incb
loopne
popf
add
ret
push
in
lcall
or
mov
fs
dec
lret
in
sti
incl
add
mov
mov
add
pushl
add
mov
out
mov
nop
sub
sub
xchg
push
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
es
jbe
negl
fcmove
addr16
insl
fst
es
push
lret
loopne
push
test
adc
std
into
fdivrp
imul
test
int
jg
jle
jge
add
inc
add
jg
inc
xor
dec
dec
dec
dec
dec
add
repnz
pop
or
add
push
dec
or
adc
cmp
adc
fstp
decb
dec
or
add
push
adc
add
and
in
or
pop
pop
cmovg
inc
push
dec
sbb
mov
imul
adc
inc
inc
adc
sbb
std
lahf
fisttpll
add
dec
adc
inc
ds
cmp
cmp
cmp
decl
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
xorl
scas
lods
mov
addb
mov
pop
mov
mov
sbb
ss
add
outsb
mov
and
or
outsl
add
pop
add
in
adc
pop
sbb
mov
cmpsl
sbb
inc
test
and
adc
mov
test
fstpl
incl
add
cmp
mov
es
dec
push
jmp
out
cwtl
cmpsb
pop
stc
sysret
in
loopne
xchg
xchg
lock
hlt
add
push
jg
add
sub
pop
aaa
outsl
pusha
push
add
sahf
aam
push
inc
jg
lahf
or
or
push
into
jg
cli
andb
mov
cli
filds
addl
or
cli
push
bound
and
push
mov
das
orl
jle
sbb
xchg
scas
inc
dec
cmp
mov
sti
jg
xchg
popa
mov
jg
add
xor
jg
pop
and
ja
add
ret
jg
jb
sub
cld
jg
pop
adc
jle
pop
xor
jg
std
les
and
les
test
jg
pusha
add
movq
bound
ret
jg
inc
push
dec
jle
decb
push
lret
jg
or
incl
decl
ljmp
lock
sub
sub
inc
data16
and
add
jmp
lea
addb
sbb
loopne
mov
jbe
les
fildl
add
sub
jle
and
sbb
scas
incl
add
nop
bndldx
and
imul
or
or
add
or
mov
inc
and
add
add
add
addb
data16
push
inc
loopne
jg
inc
and
fsubs
andb
xchg
jg
bound
test
ss
pop
lods
pop
shlb
dec
jg
inc
pop
rolb
jle
pushl
jmp
stos
pop
testb
stos
pop
pop
pop
add
daa
push
aaa
pop
pop
jbe
sub
aaa
cltd
roll
add
adc
mov
jle
sbb
jmp
xor
test
push
dec
xchg
push
out
mov
add
mov
mov
comiss
daa
push
arpl
pop
fldt
pop
push
mov
arpl
out
jp
test
mov
jp
adc
lcall
mov
ljmp
dec
push
test
test
inc
test
push
lcall
dec
out
mov
fnstenv
add
push
jne
cmpsb
ja
ja
push
jbe
test
insl
adc
push
jnp
push
jp
cmp
decb
js
dec
jbe
pop
add
mov
fdivrs
cmp
je
push
outsb
adc
test
ljmp
call
ljmp
inc
int
popf
inc
outsb
ss
pushl
adc
call
adc
mov
mov
and
neg
xchg
adc
mov
aaa
and
pop
jbe
sahf
inc
out
inc
enter
push
xchg
cs
aas
popf
inc
push
pushf
cmp
cmpsb
test
mov
xchg
xor
xchg
xor
sub
call
push
nop
daa
ss
cs
fs
dec
mov
xor
int
xor
call
call
inc
or
mov
daa
aam
std
pop
fnsave
xor
inc
out
push
add
sahf
movb
xor
jbe
ss
bound
mov
push
add
inc
jb
pop
ja
dec
push
mov
movb
xor
rcrl
divb
mov
add
add
jbe
push
inc
jmp
or
xor
and
and
add
inc
subl
nop
cmp
les
or
pop
aas
push
jns
xlat
insl
adc
pop
push
orl
lea
push
xchg
popf
push
imul
mov
jne
lcall
lock
cmp
cmp
and
test
icebp
imul
in
add
mov
add
sbb
mov
pop
idiv
mov
and
mov
dec
add
push
push
sbb
and
hlt
xor
and
mov
xor
hlt
mov
add
mov
incb
add
pop
mov
pop
lcall
or
mov
ds
sub
inc
int3
push
das
pop
cld
jmp
shlb
in
push
inc
dec
js
pop
daa
std
out
or
xchg
btc
or
lcall
or
jo
sub
mov
lds
decl
mov
incl
les
outsb
ljmp
jmp
test
push
call
inc
xor
xor
sub
inc
inc
ret
sbb
or
jmp
sbb
push
xor
xor
scas
jmp
mov
or
mov
nop
mov
mov
inc
xchg
or
mov
xor
push
iret
jle
adc
aad
cltd
mov
inc
loope
adc
test
dec
push
push
incb
dec
add
adcb
pusha
adc
aaa
incl
mov
movsb
xor
mov
lcall
xchg
or
sub
cmp
add
sti
push
std
pushl
adc
push
add
pop
and
or
cld
pop
and
mov
and
in
call
jg
fldl
cli
idiv
loop
sub
roll
decl
decl
dec
and
pop
lret
mov
leave
fcmovbe
pop
pop
inc
cmovs
outsl
push
pop
aaa
mov
push
push
push
shll
icebp
push
mov
roll
dec
jnp
mov
sahf
ret
incl
pushl
fisttpl
ljmp
lahf
inc
in
fcmove
jnp
push
inc
inc
pop
inc
pop
out
ss
mov
movsb
out
fldcw
push
stos
push
popf
inc
cmpsb
dec
dec
inc
imul
mov
fsts
add
and
ss
mov
out
push
shrb
rcl
outsb
shrb
es
push
jb
stc
xor
iret
insl
cmp
xchg
adc
daa
outsl
pop
and
dec
cmpsb
imul
int
push
push
call
inc
ljmp
push
ljmp
movsl
and
dec
in
pop
int
repnz
decl
mov
cmpsb
popfw
cmp
aas
decl
fwait
decb
cwtl
xor
and
push
xchg
push
push
aaa
push
lcall
ss
xchg
push
xchg
es
and
imul
xchg
dec
out
push
sub
lcall
xchg
aam
ljmp
and
ds
sbb
xor
mov
push
add
sarb
aad
or
faddl
cmp
push
push
jnp
jp
or
jl
push
imul
jl
push
jge
mov
jg
es
jbe
adc
fidivrl
push
dec
data16
pushw
dec
repnz
repnz
jae
pop
fidivrl
push
mov
repnz
loope
out
add
in
add
int3
outsb
nop
pusha
push
push
leave
negl
pop
add
inc
push
push
pop
add
sbb
adc
push
adc
or
push
addb
jnp
lahf
dec
es
mov
in
pop
orb
jl
hlt
jg
and
xchg
out
push
sub
iret
out
mov
cli
cmp
aaa
aam
jbe
clc
push
idiv
out
ds
test
inc
sub
jg
mov
icebp
push
dec
mov
dec
pop
cld
loope
out
push
daa
jno
sub
jg
mov
icebp
fistl
xorb
xchg
mov
xchg
ja
bnd
repnz
xchg
cld
jp
sub
adc
in
xchg
aaa
or
out
cmp
jge
and
sbb
in
sar
jg
dec
in
rclb
ja
iret
lock
mov
icebp
test
idiv
push
lcall
je
lea
fsub
pop
push
stos
nop
test
int3
decl
inc
jle
mov
fidivrl
arpl
clc
popa
and
decl
into
and
pop
or
push
xchg
and
pop
dec
inc
ds
lcall
push
pop
sub
mov
push
mov
jmp
mov
in
sbb
in
sbb
xchg
mov
pushl
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
push
and
aaa
mov
add
ja
inc
or
aas
xlat
push
cmovno
ret
push
and
testl
insl
repz
push
pop
pop
dec
loop
ret
or
mov
add
outsb
or
xor
push
inc
lahf
add
xchg
push
lret
adc
mov
fwait
call
dec
sbb
push
rcr
jne
cmp
into
pop
push
sbb
in
ja
add
push
sbb
push
or
imulb
xor
or
inc
or
and
outsb
or
push
stos
mov
and
sub
mov
or
xor
adc
xchg
add
and
add
scas
xchg
mov
add
fisubrs
gs
jo
and
mov
insl
mov
dec
ss
inc
std
and
mov
and
les
push
and
inc
lcall
push
aaa
xchg
and
add
dec
test
add
lock
inc
jmp
lahf
jo
das
lret
cmp
sbb
add
imul
adc
cmpsb
lea
les
aas
add
add
jno
inc
adc
adc
aad
add
add
add
or
mov
inc
lret
adc
mov
inc
lods
add
mov
sub
pop
adc
movsl
sub
iret
insl
pop
popf
in
xlat
mov
rcll
popa
bound
inc
xchg
dec
and
sub
jb
fnsave
add
insl
or
mov
roll
xor
das
mov
mov
mov
gs
icebp
pop
jo
movb
and
dec
mov
add
adc
xchg
testl
arpl
xchg
cmc
add
inc
stos
jno
outsl
shrb
xlat
pusha
fildll
outsb
dec
push
outsl
loop
mov
fidivl
dec
mov
je
cmpsb
lea
push
xchg
bound
insb
lcall
dec
insb
out
inc
imul
sbbl
inc
dec
mov
pop
and
mov
jne
addr16
and
pop
inc
push
inc
adc
rorb
add
inc
inc
mov
mov
lea
jmp
mov
xchg
add
adc
xor
loopne
fiaddl
sub
insl
pop
push
pop
mov
icebp
jne
and
mov
jne
inc
adc
ret
add
pusha
xchg
negb
cmp
jo
je
push
mov
int3
adc
in
xchg
sbb
rol
orl
stos
mov
xchg
dec
inc
inc
adc
sub
inc
adc
jbe
ljmp
mov
xchg
popa
addl
xor
or
dec
sub
sbb
push
mov
push
push
jb
dec
cwtl
insl
movsb
sub
jmp
mov
xchg
cmp
or
mov
fisubl
cmc
jbe
inc
iret
in
add
int
or
xchg
lds
insl
arpl
pop
popa
and
pop
test
out
lds
popa
and
sbb
and
mov
add
rorb
cmp
sub
inc
mov
push
inc
je
sub
pop
xor
mov
sub
push
pop
in
test
loop
push
mov
lods
dec
das
xchg
inc
fcmovb
out
imul
jne
jecxz
push
adc
mov
and
inc
jg
stos
mov
scas
sub
loop
lahf
mov
jecxz
xor
mov
cmc
mov
sub
outsl
jae
lret
aas
loop
outsl
mov
popa
clc
jp
mov
mov
adc
add
push
add
and
movsl
pop
ficomps
inc
bound
mov
ds
arpl
mov
das
aam
add
sub
aas
sub
xchg
pop
sub
mov
mov
push
fcoml
dec
sbb
test
and
aaa
push
pop
imul
xchg
sbb
shrl
arpl
jae
push
imul
jbe
mov
xor
xchg
mov
rcll
push
adc
and
sbb
inc
enter
sbb
rclb
int
sbb
jne
fs
inc
xchg
fs
or
push
popa
cpuid
pusha
aam
push
and
push
jb
ret
dec
inc
inc
xchg
or
fs
mov
sahf
mov
lds
add
fdivs
insb
sahf
popa
push
adc
push
and
add
cld
sub
testl
mov
or
jno
loop
dec
cmp
jl
add
cwtl
add
adc
push
jg
jns
lock
push
and
and
stos
test
les
std
addr16
push
inc
dec
jb
xor
sub
and
addb
mov
addr16
outsb
inc
sbb
jnp
mov
inc
pop
and
roll
je
insl
mov
sbb
std
lea
inc
pop
adc
mov
add
xor
sub
push
push
js
add
xor
mov
pop
add
add
sbb
mov
movsb
cmpsb
imul
or
lcall
adc
imul
push
shrl
es
pop
add
inc
add
mov
xchg
add
pop
addb
and
imul
fisubs
inc
jo
sbb
mov
test
push
stos
daa
nop
es
inc
es
subb
mov
push
push
imul
pushf
ret
pop
pop
add
inc
stos
imul
test
push
fs
in
inc
mov
xor
jno
sbb
add
sbb
fwait
movl
inc
sbb
add
rcll
sarb
add
push
mov
adc
je
mov
mull
dec
pop
lods
dec
mov
inc
inc
or
sbb
scas
int3
nop
push
jge
and
pushf
xor
cwtl
or
push
xor
and
ret
lcall
mov
in
and
jle
sbb
inc
inc
xor
jo
mov
lret
inc
lock
repnz
sub
mov
or
mov
xor
ss
xlat
adc
or
mov
sbb
dec
adc
add
ss
inc
add
lods
lea
push
enter
mov
adc
gs
inc
aaa
outsl
and
call
cmpsl
inc
rcr
jno
lods
outsb
jbe
jle
lods
sbb
popa
jb
es
push
xor
pcmpeqd
dec
insl
dec
inc
ret
and
push
movsl
push
and
sub
push
jns
shl
loopne
daa
dec
cld
addr16
adc
arpl
int3
pop
test
pop
xor
xor
outsb
push
mov
jb
inc
xor
inc
push
insl
popl
xchg
mov
cmp
jns
stos
sbb
sbb
add
inc
cmp
push
out
xlat
mov
xchg
cmp
outsl
or
shll
dec
jg
ss
inc
sub
push
mov
sbb
mov
into
data16
add
add
lahf
add
sahf
out
xchg
push
mov
loop
push
inc
inc
cmp
incl
sub
jp
movsl
fcompl
and
dec
or
cmp
negl
out
sub
dec
dec
ja
xor
xchg
jae
xor
jo
fiaddl
pusha
aaa
sub
sbb
mov
sub
inc
or
xchg
jp
push
cmp
loope
dec
movsl
dec
sub
stc
in
scas
mov
mov
push
push
repz
shlb
insl
add
add
jo
cmp
repnz
data16
or
nop
mov
enter
add
leave
movb
mov
mov
add
movb
dec
dec
mov
addr16
testl
adc
mov
rcrl
xchg
mov
mov
test
and
iret
addl
out
lret
xchg
push
xchg
loope
jp
and
and
ficompl
ficomps
jg
or
lods
test
dec
xchg
incl
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
