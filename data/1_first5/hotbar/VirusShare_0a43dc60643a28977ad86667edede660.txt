divb
in
mov
mov
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
out
divl
jne
mov
or
call
xchg
push
pop
aas
in
adc
and
movl
dec
in
mov
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
pop
pop
mov
das
js
and
call
push
push
rcll
mov
mov
jp,pt
add
fistps
pop
push
push
push
push
xor
mov
push
mov
scas
and
inc
mov
add
jmp
test
jne
pushf
or
push
jle
repz
adc
push
xchg
mov
add
iret
xchg
push
sbb
out
mov
jne
inc
sub
ret
mov
jmp
pushl
ja
cmp
jecxz
ret
lea
or
lock
dec
test
jg
add
pop
xor
sub
push
add
outsb
xchg
add
test
push
pop
inc
push
adc
and
dec
push
fcomi
insl
roll
les
pushl
cltd
push
mov
fistl
dec
mov
mov
mov
call
pushl
mov
cwtl
pop
mov
or
data16
cmpl
mov
movsb
mov
lahf
add
andl
sbb
cld
push
sub
mov
hlt
cs
jo
rcrb
adc
mov
mov
cmp
sbb
sub
dec
rcrb
mov
or
bound
or
scas
hlt
or
pop
cmpsl
lret
mov
sbb
sbb
cmpsb
cmp
lea
or
int
push
call
sub
add
insl
xlat
or
pop
pop
loopne
std
mov
ret
add
in
sbb
into
lahf
mov
adc
inc
loopne
push
sub
or
mov
mov
jbe
ret
ja
enter
or
xchg
adc
jl
inc
cmp
adc
cmp
push
in
popa
and
add
inc
dec
push
mov
aaa
pusha
out
jmp
or
sbb
enter
fisttpl
sahf
add
shr
dec
cmp
je
out
sti
mov
fdivrs
fs
add
pop
push
scas
dec
testl
scas
mov
push
insl
sbb
jl
clc
movl
bound
mov
aaa
jge
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
jg
add
gs
sti
mov
mov
xor
dec
gs
clc
mov
pop
ret
arpl
xchg
pop
mov
jge
arpl
cli
or
mov
dec
add
clc
sub
enter
pusha
xchg
and
in
mov
in
adc
sbb
or
psraw
movsl
push
xorl
fdivrs
mov
cmp
jg
mov
xor
sbb
inc
ret
in
sbb
push
push
adc
adc
pop
cmpsb
sub
mov
push
jmp
cmp
push
mov
sar
dec
lea
push
add
jge
ja
adc
cmp
clc
add
push
mov
lods
jmp
pop
ret
outsb
test
jl
mov
add
stc
clc
icebp
loop
lds
iret
lock
push
std
jle
mov
cmpl
or
push
int3
jmp
incb
sub
sbb
jge
sub
stc
or
or
fisttps
add
pop
cltd
sub
shr
enter
mov
mov
pop
xor
cwtl
pop
les
decb
cmp
jl
cmp
jne
insb
mov
fldt
add
xor
jbe
mov
testl
adc
inc
add
lea
cmp
adc
lea
orl
push
xor
push
jnp
sti
into
mov
aam
cli
cmpsl
bnd
sub
fdivrs
cmpsl
mov
scas
out
fidivl
cld
fsubrs
jl
mov
leave
jge
mov
cmpsb
or
adc
lock
jle
cmp
mov
inc
sahf
loopne
clc
fdivs
jecxz
dec
inc
icebp
add
jo
scas
push
add
xchg
pushl
mov
pop
iret
jmp
push
stc
loop
pop
mov
inc
addr16
cmp
sbb
stos
push
je
push
jbe
daa
xlat
loopne
es
and
push
mov
hlt
adcb
ret
std
jbe
aaa
and
cmp
lods
or
or
mov
xchg
cmp
mov
sar
push
push
adc
cmp
jle
mov
pusha
or
pushf
adcl
clc
add
cmp
cmp
jae
push
cmp
je
adc
sub
mov
andl
ret
add
jb
pop
dec
icebp
dec
push
add
xchg
pop
leave
mov
fcoms
jnp
ljmp
loopne
cmp
mov
or
push
push
push
push
rcrb
or
inc
jno
adc
or
cmpsb
mov
or
imul
and
adc
add
and
inc
sub
imul
adc
mov
in
push
std
add
xor
cmp
push
mov
fildl
sub
jne,pt
push
stos
sbb
lock
push
add
fidivl
in
js
push
mov
mov
or
rorb
je
pop
pop
fdiv
mov
mov
jg
mov
jne
cmp
mov
je
add
fwait
test
in
jo
add
dec
sub
ficoms
mov
pause
lret
xchg
push
lret
add
sbb
mov
pop
inc
fistpl
cwtl
mov
jl
add
mov
sbb
add
mov
push
or
xlat
std
push
mov
js
xchg
mov
filds
rolb
mov
daa
pop
loop
mov
jg
or
je
push
pusha
mov
sbb
clc
push
movl
fildll
cmovl
inc
sub
sbb
sahf
dec
push
xor
mov
mov
ljmp
movsb
dec
add
add
loop
mov
adcb
add
jl
dec
add
paddd
push
add
push
outsb
xlat
jb
jb
xor
push
lcall
sub
nop
inc
icebp
in
fimull
push
scas
dec
sbb
sbb
sbb
jb
call
aad
sarl
dec
cmp
je
xchg
outsl
sub
jne
or
jne
imul
mov
jl
popa
dec
in
jp
mov
nop
test
insl
into
mov
cmp
ljmp
jl
ret
and
aam
negb
or
movsl
mov
std
jle
cmpsb
mov
or
adc
xchg
jecxz
arpl
xor
dec
sahf
outsl
mov
jg
inc
and
lcall
pop
je
outsb
add
or
push
or
sub
inc
mov
ret
mov
mov
sub
jle
mov
mov
push
rorb
lock
out
mov
in
bound
push
insl
jecxz
xchg
pop
lock
int
jno
or
aas
pop
jae
mov
out
decb
adc
xor
icebp
or
mov
mov
inc
sarl
adc
sub
bound
mov
inc
xor
in
or
mov
js
or
ret
je
dec
je
xchg
cmp
adc
or
adc
dec
mov
movsb
call
icebp
xor
or
adc
sub
xchg
clc
push
repnz
mov
aad
in
push
push
call
fsubs
push
sub
adc
shr
fiaddl
and
mov
jg
scas
add
and
jl
cmc
andl
frstor
sub
or
mov
leave
ljmp
lret
pop
fs
pop
je
jae
mov
rcl
add
xchg
pop
jge
pop
call
mov
cld
lock
lret
ljmp
insb
rorl
shll
or
dec
or
xlat
divb
js
and
adc
pop
in
inc
clc
add
xchg
in
dec
fcoml
or
popa
andb
pushl
out
neg
sbb
inc
lock
bound
inc
pop
xlat
andb
idiv
push
lock
test
lea
sbb
mov
data16
pop
movsl
pop
push
fcomp
pop
je
pop
ds
and
xorl
pop
pop
dec
sub
xchg
cmp
pop
js
jecxz
or
ret
pop
push
adc
lahf
cmp
sbb
cmp
jae
adc
aaa
pop
sbb
nop
add
cmp
shll
hlt
jl
ret
pop
adc
mov
mov
push
aas
pop
mov
out
or
dec
jne
mov
push
roll
pop
lcall
xor
xor
nop
xchg
sbb
or
and
push
orl
mov
or
or
or
xor
xor
mov
pop
pop
pushf
sub
mov
ret
fcomps
inc
loopne
pop
inc
loop
pusha
mov
ret
mov
in
jae
adc
repnz
out
sub
inc
je
daa
je
scas
adc
cltd
sbb
stos
lahf
cs
jno
nop
std
mov
push
push
or
mov
mov
sbb
sub
call
sub
push
cmp
ljmp
out
lret
shrl
jne
sbb
sbb
mov
jmp
mov
dec
xor
add
mov
sarb
test
sahf
mov
lea
jne
testb
hlt
jne
xor
xor
ret
rcrb
pop
std
adcb
dec
mov
push
in
or
lea
mov
push
jp
add
push
iret
insl
xor
in
jne
ret
mov
cmp
addr16
jmp
repnz
je
or
loopne
pop
in
mov
js
xlat
loopne
or
xchg
xor
pop
and
les
rol
mov
in
push
in
cmp
jmp
into
lock
ret
push
xor
mov
aaa
sbb
jge
decl
in
ret
imul
cmp
fsubr
out
add
ret
inc
add
add
test
cwtl
add
loopne
shlb
aam
scas
roll
sahf
mov
cmpl
shl
xor
mov
pop
cmp
and
pushl
repnz
add
add
fcmovnu
test
loopne
add
testb
xchg
in
js
sbb
adc
push
lcall
mov
sbb
pop
pop
std
dec
and
xchg
cs
fst
movsb
mov
dec
test
sbb
punpckhwd
pop
push
sbb
fnstsw
fistpl
fistpl
jae
ret
je
arpl
pop
xchg
or
and
nop
outsb
jmp
rcr
ret
mov
nop
mov
inc
lcall
cmp
xchg
sub
or
pop
dec
call
mov
push
xor
maskmovq
divl
dec
div
adc
test
cltd
xchg
lods
lods
add
movsb
sbb
and
or
jno
sahf
fs
in
pop
repz
lods
loopne
je
add
adc
adc
lret
rcll
lock
xor
sub
sbb
mov
add
mov
fidivrl
aas
jbe
out
jge
mov
dec
out
sti
shrb
shlb
mov
cmp
pop
add
add
dec
sbb
fcompl
nop
xchg
mov
rclb
cmp
xchg
adc
xchg
xchg
ret
movsb
pushf
sbb
enter
pushf
cmp
xor
fmuls
xchg
mov
int3
ret
xchg
mov
int3
int3
xchg
xchg
out
sbb
ret
sbb
and
add
xchg
enter
hlt
xchg
cmp
xor
sbb
mov
mov
mov
jmp
sbb
imul
and
xchg
xchg
push
jo
jne
jmp
push
dec
jmp
enter
jne
xor
adc
and
jo
sub
add
sbb
pop
xor
add
mov
inc
loopne
mov
add
or
dec
add
add
adc
push
lock
sub
jae
and
sbb
dec
inc
adc
inc
adc
jnp
daa
pop
and
cmp
mov
mov
lahf
xor
add
jo
in
sbbb
mov
nop
and
push
cli
sbb
cwtl
and
adc
aas
adc
dec
pusha
dec
movsb
and
push
xchg
push
shl
ficoml
push
push
dec
xor
orl
add
mov
icebp
ss
pop
dec
popf
lea
xchg
sbb
pop
mov
adcl
movsl
xchg
mov
mov
dec
jns
fsubs
rclb
daa
lock
out
pop
add
je
lcall
add
je
or
xor
cltd
inc
jl
scas
adcb
add
sti
pop
dec
es
jge
inc
mov
fcmovne
push
push
jecxz
in
push
jmp
enter
sub
adc
or
cmp
shll
mov
and
cmpsl
jg
je
adc
or
adc
mov
das
clc
dec
or
mov
sbb
mov
into
push
sbb
pushf
je
cmp
push
adc
or
dec
jb
or
dec
pop
dec
push
in
lret
adcl
insl
mov
aaa
adc
and
rcrb
scas
scas
and
jb
lret
jns
xorb
insl
movsl
jno
shrl
sbb
jne
fsub
push
adc
cmc
xor
inc
adc
shlb
cld
cmp
push
hlt
sub
mov
dec
push
mov
in
inc
inc
imul
push
pop
sub
push
fwait
mov
lock
mov
fistpl
jne
or
inc
pushf
jl
jo
jmp
sbb
jb
pop
push
xor
popf
in
in
lea
adc
test
jge
je
mov
xchg
mov
inc
fbld
inc
fstpl
push
js
clc
inc
rcl
stc
or
cs
imull
pop
push
add
jle
cmp
je
or
je
xor
push
push
data16
subb
iret
push
test
scas
cmp
push
movsb
pop
cmp
in
xchg
and
and
xchg
jecxz
daa
sbb
sbb
ret
or
add
sbb
sarl
stc
pop
jns
loopne
cwtl
cmp
aaa
xorb
lock
and
fldt
dec
xor
pop
hlt
je
push
jbe
or
push
pop
in
lahf
sbb
test
push
ja
mov
iret
pushf
pusha
jb
adc
lock
je
inc
and
and
adc
call
mov
jne
lods
jmp
add
sahf
loopne
lret
cmp
movsb
ret
xadd
test
shlb
add
into
push
daa
fildll
adc
and
bound
add
sbbl
add
jo
subb
pushf
aam
mov
add
push
xchg
cmpsb
std
daa
out
push
loopne
cmp
mulb
sbb
rolb
mov
push
add
dec
daa
dec
cmp
cltd
test
icebp
fimuls
sbb
jg
mov
int
sti
scas
sub
pop
sub
and
xor
ljmp
sub
push
xor
push
sub
add
add
sbb
ret
inc
lret
ret
test
push
inc
stos
push
lret
or
mov
mov
add
enter
adc
adc
sbb
daa
out
movsl
jp
pop
xor
adc
push
jns
lret
mov
lods
mov
cmp
push
and
test
cmp
jo
add
mov
pop
sbbl
inc
rcrb
sub
sti
clc
sbb
lret
xchg
sbb
dec
adc
ret
cmpsl
xchg
add
sub
mov
jl
mov
orl
mov
jge
dec
push
push
sbb
rol
mov
fdivrl
cmpsl
out
adc
and
loopne
or
inc
sar
adc
mov
and
outsb
or
js
orb
pushf
dec
sub
ret
sub
dec
mov
scas
cmp
enter
pusha
sub
insb
and
das
push
pop
xchg
push
xchg
cmp
inc
out
xchg
sub
pushl
jnp
push
ret
xchg
dec
xlat
cmp
xor
inc
mov
sub
sbb
mov
inc
xor
sub
jno
loopne
sub
shlb
nop
add
sbb
and
stc
pop
cmc
xor
and
xor
push
adc
pop
or
sbb
ret
nop
push
add
mov
and
daa
pop
cmp
cmp
int3
and
pop
and
test
sub
fadds
xor
jmp
in
rorb
sbb
lds
js
lods
pop
mov
les
mov
pusha
out
inc
ljmp
insb
popf
fisttpl
js
mov
and
pop
mov
std
add
and
push
pushl
imul
xchg
fcoml
mov
cmpsb
and
add
jbe
and
iret
ret
push
je
mov
into
addr16
nop
jbe
sti
and
cmp
cmpl
push
fistpll
add
call
inc
push
loopne
mov
adc
xchg
inc
cs
fistpl
jg
cmpsl
add
sub
jne
push
pop
call
pop
pushf
or
mov
pop
cmp
jne
mov
lods
in
movsl
jmp
orb
cmp
push
mov
adc
jl
lds
inc
add
aas
cld
adc
jge
mov
add
dec
xchg
lock
pusha
mov
rolb
stos
push
loopne
inc
and
pusha
pop
shrb
sbb
add
add
inc
or
xor
jge
orb
cwtl
in
orb
mov
out
outsb
lret
push
or
add
in
add
add
dec
loop
cmpl
rclb
add
jo
cmpsl
icebp
or
into
out
out
add
fbld
add
jecxz
aaa
lds
or
in
cmovno
cmc
loopne
inc
out
or
in
or
aam
mov
add
jbe
pop
pop
fldl
cmp
jne
or
je
sub
sbbb
subb
loope
jg
addr16
loopne
mov
sub
add
inc
fadd
or
inc
cltd
dec
cmp
pop
pop
push
push
fstp
pushf
push
out
test
jne
or
xchg
and
inc
sti
cmp
add
mov
adc
sub
call
lahf
je
and
jo
rorl
push
jp
std
mov
pop
xor
fsub
push
out
inc
out
add
dec
orl
or
nop
inc
aaa
fnstenv
imul
jecxz
lds
or
gs
sub
or
lcall
iret
cmp
pop
popf
lret
in
sarb
mov
add
xor
les
or
sub
int3
add
mov
push
fcom
mov
pop
cltd
call
push
in
sub
mov
test
xor
lock
dec
dec
je
sub
jmp
bound
cmpl
je
sub
add
pusha
jmp
adc
xlat
sbb
subb
int3
adc
iret
push
sub
pop
lea
sbb
cmc
push
pop
push
add
xor
sbb
gs
lock
push
adc
lcall
lock
xor
inc
mov
sarl
push
push
invd
cmp
subb
movsl
jmp
push
fs
ret
cmp
jle
shlb
sbb
xor
fistl
mov
xchg
ds
sahf
jne
das
pop
sub
in
paddusb
mov
jle
push
push
xchg
test
sarb
xchg
pop
or
add
push
loopne
add
sbb
push
movsb
xchg
and
jo
stos
sarb
ret
dec
mov
jne
pop
cli
ds
lods
fistpll
xchg
ss
push
xor
cli
add
cmpl
adc
push
lahf
or
cmovne
mov
sbb
into
in
push
add
insl
inc
add
call
mov
test
movsl
or
rclb
orl
fndisi(8087
mov
in
add
mov
mov
push
add
mov
add
add
or
sahf
pop
imulb
shlb
stos
lret
enter
mov
jmp
hlt
popa
cmp
inc
nop
or
or
pop
movsb
mov
push
inc
and
or
in
jno
gs
rolb
scas
mov
mov
in
loopne
pop
cld
loopne
andb
or
push
add
lea
fcomps
and
and
popf
sub
rcrb
or
mov
push
cmove
or
pusha
movl
mov
adc
jo
lods
mov
cmp
cli
in
mov
inc
add
popf
jo
or
movsl
dec
in
in
test
movsl
push
pop
sbb
in
sbb
mov
in
add
jmp
mov
or
mov
pusha
push
add
call
jb
push
sbb
push
call
inc
enter
rcll
adcl
insl
mov
fs
xor
inc
mov
add
adcl
pop
call
push
inc
loopne
je
inc
cld
mov
cwtl
out
mov
mov
or
push
xchg
cmp
aas
xchg
testb
and
mov
and
repnz
insb
adc
xsavec
adc
push
nop
mov
sub
push
jg
and
and
push
pop
dec
lds
xor
mov
push
rcpps
sub
or
sub
lret
out
push
dec
sbb
dec
fcoms
lock
loopne
in
mov
and
xchg
xor
sbb
lock
inc
mov
pushl
push
js
jg
cmp
cmp
ret
shr
movzbl
sbb
mov
ret
push
push
inc
mov
sbb
xor
frstor
cmp
cmp
popa
xor
mov
add
inc
xor
pop
add
push
gs
mov
xor
mov
jecxz
test
jle
icebp
test
xor
les
pop
or
popf
ror
cmc
add
mov
scas
xor
or
add
int
xor
int
lahf
mov
cmp
jg
mov
mov
jmp
xor
xchg
push
leave
enter
pop
sahf
mov
aad
sbb
enter
mov
iret
xchg
push
enter
aas
imul
inc
push
sbb
cmpsl
sub
js
imul
lea
clc
mov
sub
outsb
pop
mov
subl
sbb
scas
add
pop
inc
ret
jecxz
cli
sub
pop
jmp
mov
push
stc
add
sbb
xchg
in
and
mov
push
in
cmp
je
vpaddsw
shrb
cld
jne
xor
cmp
or
mov
cmpb
cmp
cmp
jae
mov
rcrl
inc
hlt
lea
ja
xor
shll
sti
inc
add
test
je
push
mov
adc
lock
inc
add
fiaddl
mov
add
imul
add
js
aaa
dec
jo
in
cmp
jg
xor
push
cmp
push
stos
cmp
mov
roll
out
or
into
popa
nop
fsubrs
push
int3
sub
xor
ss
hlt
cmpsb
adc
cli
lea
ljmp
or
hlt
or
push
test
adc
mov
cmp
stos
clc
lret
jo
in
pop
fcmove
add
mov
mov
pusha
xchg
shll
sub
cmpsl
mov
dec
lahf
inc
js
test
adc
cli
out
mov
cmpsb
hlt
pop
pop
cs
jg
inc
inc
jns
and
dec
sbb
sbb
or
nop
mov
sub
pop
movb
and
xchg
add
xor
add
inc
and
push
cmpsl
icebp
imul
xor
push
sub
adc
or
fmuls
outsb
add
fdivrs
lock
mov
cld
cmp
jl
repz
bound
jmp
repnz
movsl
push
enter
xor
das
inc
cmp
insl
int
sbb
pop
jbe
inc
sbb
mov
mov
pop
or
xchg
dec
js
mov
push
bound
fidivrl
or
shll
mov
adc
push
mov
add
loopne
push
je
mov
mov
ret
je
mov
popf
aaa
mov
jmp
push
mov
push
jecxz
or
dec
xor
fcompl
outsl
loope
or
dec
enter
pop
inc
mov
int3
or
test
sbb
hlt
add
seto
stc
mov
out
mov
jae
dec
mov
adc
mov
insb
add
inc
outsb
mov
push
cs
mov
add
adcl
ljmp
data16
lret
jae
dec
dec
sbb
jb
xor
mov
sbb
adc
sub
mov
in
pop
icebp
adc
mov
fs
jne
cmp
je
sbb
xor
inc
cmp
or
in
sbbb
and
mov
and
lea
je
pop
sbb
mov
mov
push
sbb
push
shlb
xlat
ret
or
add
and
loope
adc
dec
orl
setne
aad
or
movsl
test
xlat
jne
push
pop
mov
push
insl
loopne
cmp
test
js,pt
ljmp
loop
clc
divps
add
bound
aam
or
push
sti
xchg
clc
or
subb
xor
inc
adc
push
roll
js
push
jmp
sub
js
or
inc
in
jmp
mov
clc
andl
lock
popw
sbb
adc
push
mov
jno
pusha
adc
mov
scas
lock
dec
mov
scas
xor
jo
rcl
push
movsb
sub
sarl
sbb
cld
or
nop
push
mov
push
rclb
push
push
aaa
clc
pop
or
popa
xor
pop
sub
mov
and
inc
pop
xor
ds
aas
idivb
movsb
inc
xor
daa
hlt
call
hlt
sub
jle
add
sbb
je
push
push
ret
popa
loope
loope
mov
cld
ror
or
add
insb
cld
cmp
lea
xchg
shr
js
add
push
test
popl
inc
xchg
mov
xchg
mov
sbb
adcl
add
xchg
popf
enter
rcrl
popl
jle
or
push
inc
and
jb
sbb
cmp
rcrw
es
inc
loopne
add
adc
pop
ret
adc
rorl
and
adc
inc
push
sbb
scas
cmpsb
call
in
sbb
sbb
mov
je
or
pusha
cmp
sbb
push
loopne
das
out
and
and
mov
sub
inc
inc
or
jecxz
lods
or
sub
pushl
test
push
fmuls
add
push
pop
push
xorb
push
adcb
xor
in
sbb
imul
aad
in
in
jb
inc
xor
flds
jp
scas
jecxz
or
mov
add
sbb
adcl
test
les
cltd
in
test
test
dec
add
mov
sub
xchg
aaa
movsb
inc
or
add
xlat
push
and
inc
jl
inc
and
inc
inc
push
js
addb
js
inc
repz
push
clc
mov
push
mov
movl
cmp
xchg
rcl
repnz
in
xor
inc
mov
jmp
add
jb
nop
and
test
fmul
mov
xchg
movsb
add
dec
cmovbe
loop
mov
cmp
hlt
mov
cwtl
movsl
and
pop
arpl
mov
inc
or
sub
loopne
repz
pop
hlt
xchg
fsts
and
adc
add
pop
out
addb
and
xchg
adc
pop
stos
and
fwait
jns
push
movsb
inc
jg
adc
out
push
cs
subl
div
and
mov
repnz
lret
aaa
movsb
mov
pop
mov
cmpsb
add
or
pusha
stos
lock
cmc
or
add
inc
inc
leave
and
cmp
push
dec
cltd
dec
sahf
sbb
adc
and
ret
inc
push
inc
ret
jg
sti
test
lea
mov
add
or
and
pop
or
xor
adc
pop
sub
sbb
pop
sub
int3
add
and
sbb
adc
pop
daa
xorl
adc
js
lret
fldz
mov
adc
lods
jne
mov
mov
push
mov
push
inc
insl
movl
and
cmp
sbb
and
ret
inc
inc
cs
add
lea
push
lods
sub
pop
pop
mov
dec
push
jne
enter
sub
add
repnz
sarb
xor
es
adc
sbb
and
stc
adc
cmp
popf
cmpl
lock
ret
cmp
sti
in
mov
shrl
pop
negl
sbb
add
add
cmp
add
push
pop
dec
adc
push
pop
mov
ret
xchg
pop
push
dec
dec
jecxz
lret
push
and
push
mov
pop
ljmp
pop
sub
jne
mov
add
push
pop
dec
je
adc
in
jge
adc
int3
and
fistpll
dec
push
jmp
mov
fistps
dec
jo
gs
out
leave
jmp
mov
jmp
pop
jne
nop
jle
bound
lcall
add
push
mov
xor
inc
cs
and
or
mov
mov
mov
inc
loopne
and
imul
insl
add
pop
push
mov
pop
addr16
mov
inc
dec
pop
mov
mov
mov
loopne
push
aaa
xchg
or
xor
push
push
daa
pop
mov
jo
js
cltd
lea
inc
repz
pop
sub
mov
shlb
jmp
cmp
je
cmp
or
jmp
inc
sbb
leave
adc
cli
outsl
div
push
mov
sbb
fstpl
imul
mov
je
xchg
push
and
and
pop
test
adc
jmp
xchg
lret
pop
sbb
jns
es
dec
jne
cmp
mov
mov
sahf
dec
xor
js
cmp
or
adc
mov
sbb
mov
mov
add
pushw
add
cmpsl
sub
mov
xor
push
pusha
lea
adc
sub
jl
fsubrl
mov
fadds
mulb
insb
dec
movb
pop
jae
mov
sbb
xchg
pop
jge
lods
mov
push
dec
push
mov
repnz
push
pop
push
lea
push
push
push
push
add
push
jge
and
lea
cmp
inc
sbb
add
dec
inc
inc
push
xchg
mov
cld
adc
cltd
lahf
test
jg
movsb
lea
or
fcmovb
pop
pusha
push
add
mov
hlt
or
pop
cmp
insl
imul
sbb
arpl
je
mov
add
dec
lcall
aaa
lods
popa
cmc
pop
push
push
inc
or
shl
out
add
push
lods
mov
jmp
sahf
inc
lods
xchg
jl
repz
ret
cwtl
in
shll
dec
adc
dec
sbb
insb
lcall
pop
xor
into
in
add
sub
mov
jle
cmpsb
xchg
pop
loope
pop
and
pop
push
das
add
inc
insb
dec
aam
daa
gs
xchg
xchg
gs
out
ret
inc
shrb
jne
push
add
inc
push
mov
dec
sbb
inc
jae
mov
rorb
mov
adc
into
and
or
sbb
daa
je
call
pop
in
test
leave
daa
mov
in
daa
cmpsl
and
cmp
fldl
xor
xor
cmp
mov
lea
test
mov
cwtl
rcl
jl
scas
movsb
scas
sbb
add
push
cmp
dec
mov
cmp
jl
xchg
pop
imul
sbb
add
push
lea
jl
sbb
adc
mov
add
les
jbe
pop
cmp
mov
lret
andb
sbb
clc
xchg
pop
mov
loop
inc
push
aam
das
in
xchg
jne
cmp
ret
add
xor
adc
mov
xchg
jb
add
jle
fcmovnb
shr
xchg
sti
or
fdivrl
fdivr
ret
mov
rcll
mov
push
mov
dec
les
mov
cmp
sbb
in
jne
push
sub
xor
pop
rorb
pusha
fdivrs
xchg
xor
add
iret
je
lea
push
loopne
add
mov
or
mov
mov
enter
or
sbb
cmp
pushl
call
push
or
ja
adc
mov
lods
dec
mov
les
shrb
popf
loopne
lcall
ficomps
stos
cmp
mov
lock
dec
cld
daa
icebp
xorl
cmp
lods
ret
lea
outsb
sub
sub
adc
pop
sub
out
sub
in
lcall
mov
add
mov
inc
adc
dec
bound
mov
xor
jno
dec
mov
push
in
add
adc
adc
or
and
rcr
fisubrl
xlat
jle
or
push
add
in
or
fistps
cmp
es
fidivrs
add
mov
dec
pop
mov
push
into
in
shll
dec
dec
cmp
outsl
notl
loop
adcb
push
iret
js
and
cmp
test
mov
jle
sub
pop
mov
fstps
leave
and
push
push
out
mov
sahf
sub
adcb
pushf
mov
mov
mov
test
push
stos
enter
pusha
enter
sub
xlat
popa
mov
add
imul
cmp
punpckhdq
stos
mov
cmp
mov
jmp
pushl
and
mov
inc
pop
push
stos
test
mov
daa
xchg
pop
movaps
shrb
les
add
mov
sub
ret
mov
outsb
jle
cmpl
jne
pushl
nop
jmp
sbb
push
adc
mov
fadds
adc
mov
scas
or
or
mov
fmuls
add
imul
or
cwtl
push
push
inc
cli
xor
and
loope
sti
je
cmp
in
pop
loopne
mov
push
shlb
std
pop
pop
stc
add
stos
stc
mov
add
ja
sbb
add
push
push
lock
shll
xor
sbb
push
jne
movb
fs
fucomip
jmp
cmp
jne
popf
movsl
fnstcw
test
jecxz
xor
push
icebp
xchg
enter
adcb
lahf
addr16
dec
aas
mov
jecxz
scas
xchg
pop
mov
adc
je
xchg
fisubl
xor
andb
and
shr
and
mov
mov
mov
sbb
or
aad
cmpl
fsubl
mov
es
or
push
or
aam
mov
roll
push
adc
enter
jp
add
cltd
add
and
sbb
aam
lods
mov
mov
or
or
mov
std
int3
ja
andl
push
cmpsb
mov
cmp
xor
nop
adc
daa
sbb
push
push
xor
push
push
push
lea
add
cwtl
dec
and
test
test
or
cmp
xchg
sbb
xor
push
push
lret
jl
mov
andb
jbe
movsb
pop
sbb
xor
pop
adc
and
jge
int
push
rcrb
mov
das
test
sub
sub
jmp
inc
fldl
lds
add
push
out
cmp
and
push
pushf
push
push
add
mov
movsl
inc
lock
sub
cli
mov
push
scas
fiadds
lcall
movsl
and
add
fcomp
repnz
jno
sbb
xor
cwtl
negl
popa
in
dec
shlb
ja,pt
lea
pusha
popa
sub
cwtl
mov
lds
and
adc
fmuls
add
add
repz
into
xor
pop
mov
sbb
or
cmc
jmp
sbb
orb
adc
rcll
xchg
xlat
push
adc
lea
clc
ret
icebp
cmpb
xor
je
push
pop
cmp
insl
and
pop
push
sbb
mov
inc
fdivs
cs
sub
push
push
jnp
iret
decb
adc
xor
and
pusha
aad
mov
pop
mov
inc
lock
add
sbb
push
cli
or
push
das
adc
cmp
mov
push
xchg
pusha
insb
push
push
xlat
gs
call
jmp
out
popa
push
sbb
sub
lods
sbb
rclb
and
sub
sbb
mov
out
push
mov
insl
lea
rcrb
mov
xchg
mov
xchg
jle
fidivrl
push
push
mov
add
mov
cltd
mov
incl
lea
mov
div
sar
orl
test
out
fbstp
mov
jge
adc
nop
outsb
mov
idiv
push
mov
push
push
mov
dec
fcompl
dec
ret
xor
idiv
mul
mov
out
pop
sbb
jnp
faddl
jo
push
push
lock
subl
fmuls
lret
aam
mov
scas
push
popa
movsl
jne
inc
dec
jg
fcoms
or
xchg
adc
lock
push
dec
or
jg
std
mov
pop
pusha
push
pop
jge
mov
sbb
sti
sub
clc
je
jbe
std
sbb
lcall
into
and
inc
fnstsw
xor
movsl
jg
fcompl
pusha
js
out
fnstsw
dec
fs
or
xchg
arpl
loope
jl
mov
cmp
test
mov
cld
negl
cli
in
cmp
dec
sbb
dec
lea
jae,pt
sbb
jl
xchg
mov
sub
cmp
or
or
out
jle
pop
imull
into
test
xchg
fildl
mov
not
out
or
add
or
mov
and
fdivrp
mov
sub
mov
out
clc
dec
int3
mov
mov
inc
les
cmp
add
add
mov
clc
insl
into
clc
fidivl
jmp
push
addb
mov
push
pop
mov
pop
jne
pop
pop
cmpsl
xor
mov
dec
ljmp
repnz
sbb
jo
mov
orb
fidivl
imul
clc
mov
and
aam
roll
lea
sbb
pop
das
cmpsl
je
addr16
push
ja
fstl
xchg
je
jbe
imul
pop
and
jne
test
or
dec
pop
mov
push
out
push
pop
pop
into
pop
leave
loope
xchg
xchg
out
lds
cmp
mov
xor
mov
push
adc
push
and
push
lret
mov
cltd
add
jb
shr
mov
repnz
or
adc
int
sbb
mov
mov
loope
pop
iret
addr16
xor
mov
in
lock
xor
mov
inc
jne
mov
aaa
sbb
mov
popf
std
lea
adc
push
jnp
test
leave
pop
xor
sbbb
shll
int
mov
std
sub
or
sbb
inc
mov
arpl
pop
in
fwait
dec
add
lea
pop
or
jne
shrl
or
dec
and
push
push
adc
inc
roll
jbe
xor
andl
lock
sub
pop
cmpsb
jle
imul
mov
add
dec
inc
cmp
xchg
xchg
mov
or
jb
or
dec
scas
sbb
sbb
dec
push
sbb
xchg
cli
jb
mov
push
adc
mov
sbb
lods
jmp
andl
pop
int3
out
pop
popf
jo
jbe
mov
xor
pop
sbb
dec
dec
or
xchg
pop
or
pop
dec
and
cmp
clc
dec
adc
jl
add
mov
mov
add
orb
mov
loopne
and
cmp
gs
push
dec
sub
inc
sbb
sbb
sub
pop
cmpb
push
sub
clc
setb
test
mov
cmp
xor
xor
sub
andl
ds
sub
push
lea
push
lods
aaa
and
icebp
or
mov
je
push
fstps
fisttpl
adc
sbb
dec
shlb
push
dec
les
xchg
inc
dec
or
mov
jecxz
mov
hlt
or
int3
and
sbb
das
mov
incl
lret
shrl
inc
nop
imul
mov
push
pop
xchg
les
push
leave
and
dec
rorb
pop
adc
mov
mov
or
jbe
out
popa
sub
or
pop
jmp
aaa
pop
inc
imul
adc
xorl
in
and
in
int
jmp
test
lret
dec
jl
pop
sti
sub
inc
inc
and
add
in
pop
aaa
push
lock
js
and
not
jne
jp
bound
lock
jle
mov
jecxz
sbb
or
aam
inc
xor
inc
inc
and
adc
xchg
xchg
pushf
sub
addr16
lret
sti
add
jmp
push
dec
lcall
filds
jo
add
mov
add
sbb
xchg
jo
and
sub
fiaddl
adcb
lds
sub
je
stos
xchg
lret
push
add
out
pop
add
sub
dec
xchg
push
fs
loope
pop
clc
pop
push
dec
in
out
enter
leave
xor
or
dec
xchg
es
pop
inc
ss
add
xchg
testl
hlt
aam
cmpsb
aaa
pushl
add
int3
add
or
bound
les
shrb
cmp
movsb
sti
push
sbb
sbb
stos
xchg
lret
mov
push
nop
in
call
cmp
push
stos
cli
mov
in
mov
push
iret
mov
mov
sub
adc
rcrl
push
pop
pop
jl
cld
pop
mov
ljmp
add
dec
sub
nop
lret
adc
pushf
push
or
xchg
push
scas
and
push
push
dec
cmp
lods
in
test
pop
push
push
outsb
mov
jnp
scas
mov
mov
push
xor
popa
les
adc
sbb
cmpsl
mov
push
sbb
adc
mov
mov
dec
stos
mov
mov
add
test
cmp
fsubr
sbb
xchg
mov
nop
idivl
test
push
and
jne
mov
mov
adc
dec
push
sbb
add
xchg
lock
mov
pop
pushl
push
lret
jmp
scas
mov
andl
or
filds
dec
cmp
mov
sbb
and
test
je
in
jae
jp
mov
out
call
stc
loop
dec
mov
mov
xor
and
sub
and
mov
fs
jge
add
add
jbe
xchg
inc
pusha
inc
xor
shll
xchg
sub
aaa
mov
ss
sub
leave
js
cmp
jge
mov
mov
out
std
rorl
pop
or
cmp
jle
jmp
add
call
xor
add
mov
sahf
pop
xchg
out
in
sbb
cltd
xchg
sbb
or
mov
jnp
xchg
mov
xorb
sbb
aam
sbb
xor
push
cld
callw
mov
cmp
in
mov
jl
pop
jo
sub
inc
sete
sbb
loope
and
je
sbb
jb
or
and
stos
push
or
adc
dec
cmp
lcall
xchg
jbe
mov
add
adc
enter
push
mov
add
sub
test
xor
out
movsb
add
sbb
mov
sub
ffreep
pop
lods
jecxz
push
hlt
js
push
sbb
int
pop
pop
je
lcall
mov
add
jne
mov
pop
aam
mov
jbe
call
push
aad
pop
or
push
and
add
iret
fsubrs
push
jge
push
pop
mov
push
iret
ss
mov
test
fsubl
imul
xchg
push
or
cmpsb
mov
fwait
jle
sti
add
roll
stc
inc
roll
ret
inc
outsl
mov
dec
in
popf
push
jne
mov
je
fisttps
adc
dec
clc
mov
pop
xchg
and
or
adc
mov
insl
pop
lock
sbb
in
call
ja
fdiv
xorl
ret
xor
arpl
sbb
mov
mov
stos
and
in
add
or
lcall
lcall
pop
pop
mov
xchg
jle
jge
sub
pop
js
adc
inc
mov
mov
or
push
add
mov
pushf
jae
jno
xchg
or
ss
loopne
bound
stc
enter
xor
jae
or
pop
jne
ficoml
clc
clc
sub
inc
cs
cmp
rolb
cmp
dec
call
ret
xchg
adc
clc
pushl
xor
leave
sub
shrb
pop
inc
lea
add
add
inc
lret
test
sub
lock
aaa
addb
jl
in
in
mov
das
hlt
mov
divl
xchg
sub
add
into
push
push
add
push
outsl
inc
aaa
jo
or
sbb
or
dec
jp
clc
adc
add
in
negb
dec
call
jge
adc
test
inc
in
aas
push
lock
sbbb
aad
shrb
pop
clc
jg
mov
cwtl
add
or
lahf
aam
dec
popf
mov
ja
xchg
inc
push
dec
das
or
lret
cwtl
sub
jbe
or
aaa
xchg
mov
push
or
out
mov
sbb
pop
or
rol
push
push
mov
inc
incl
or
push
xor
xor
icebp
mov
and
jbe
movzwl
in
test
arpl
jo
push
push
jmp
insb
push
cmp
je
lea
push
icebp
mov
push
push
rcll
in
pusha
gs
sbbb
cmp
jbe
pop
push
mov
hlt
test
sbb
jb
mov
pop
mov
inc
sarb
and
data16
xor
inc
lea
push
sbb
pop
pushf
flds
or
addl
jge
clc
nop
pop
jb
inc
mov
stc
mov
mov
push
mov
iret
and
mull
test
mov
jbe
mov
add
inc
push
neg
pop
xor
cld
xchg
add
xor
ja
dec
fisubrl
sub
xchg
pop
adc
shlb
cli
mov
adc
push
pop
mov
aam
shlb
icebp
sbb
lock
cmpsb
add
mov
aas
add
push
roll
jno
test
sub
inc
cmp
out
pop
addr16
movl
dec
pop
jp
cmp
sub
xchg
push
sub
mov
add
hlt
push
mov
cltd
inc
xchg
arpl
dec
xor
mov
push
cmp
cmpsl
rolb
fcoml
jae
push
repnz
addl
mov
jge
mov
xchg
aam
rolb
push
mov
mov
insb
pop
xchg
sbb
or
adc
adc
scas
xchg
movsl
fnstenv
or
add
loopne
decb
int3
jmp
mov
jb
sbb
push
outsl
jbe
fs
adc
dec
or
add
mov
imul
ljmp
inc
jb
subb
aam
insb
cli
sub
push
test
sub
sbb
fs
pop
sbb
inc
pop
mov
jno
xor
aaa
pop
sbb
adc
mov
mov
aas
xor
sbb
or
jg
stos
fldenv
push
adc
cs
sti
add
xlat
push
jnp
mov
adc
and
add
shl
or
jecxz
arpl
loopne
adc
mov
inc
add
cmp
stos
and
adc
xor
xlat
into
pop
jecxz
out
xchg
mov
adc
jle
sbb
pop
shll
inc
sub
movl
push
gs
add
adc
xchg
cli
jb
bndldx
popf
cmpsl
cld
mov
pop
adc
lds
imul
add
js
add
stc
imul
lea
into
push
aaa
imulb
clc
add
xchg
fldenv
rclb
std
dec
sbb
fstps
pop
int3
xor
adc
sbb
fidivrl
enter
sbb
inc
or
lcall
aaa
lcall
adc
int3
push
psubusb
mov
mov
mov
or
test
add
cmpl
or
out
lea
cli
xchg
fimull
or
stc
push
fidivs
jno
iret
nop
lea
popf
sub
cltd
mov
pushfw
push
jmp
or
push
setne
cmpb
cmp
test
lcall
mull
aad
clts
out
aaa
lea
lea
stc
mov
adc
lods
push
or
push
pop
or
adc
and
or
xor
test
dec
imul
inc
sbb
or
testl
out
or
push
dec
or
shrb
or
outsl
pop
mov
jb
mov
and
inc
mov
testb
or
cmp
nop
sub
xchg
mov
je
xor
ret
cmp
mov
dec
xchg
mov
js
or
jnp
movsb
fwait
roll
adc
mov
pop
sbb
mov
in
lods
call
nop
jne
rcll
adc
ja
into
lods
cmpsb
cmp
add
sti
sti
mov
mov
call
push
dec
mov
in
das
push
push
test
pop
jns
jmp
fcompl
mov
mov
cmp
xchg
sub
insl
inc
popa
repz
addr16
inc
xchg
sbbb
sub
adc
imul
in
jmp
movsb
ret
int
sbb
add
adc
inc
inc
push
cld
cs
xchg
or
and
adc
sbb
jl
xchg
inc
or
es
pop
pop
pop
cmp
pop
xor
in
sub
add
addb
sbb
js
fwait
and
xor
leave
xor
jle
dec
js
pop
adc
push
int3
dec
add
adc
push
push
adc
inc
sbb
mov
lret
in
pop
jle
xor
add
cli
jle
add
icebp
push
cmp
movzwl
push
mov
pop
pop
mov
adc
test
scas
jb
mov
adc
inc
and
test
cmp
cwtl
xor
jle
add
shrl
mov
orl
mov
dec
adc
shrd
fsts
jne
mov
mov
mov
iret
rol
xor
out
test
scas
push
arpl
pop
lods
mov
add
push
lock
jo
loopne
orl
loope
xchg
adc
mov
cmp
ret
subb
mov
pushf
mov
cmp
in
xchg
push
adc
lock
ret
adc
xchg
loopne
pop
xor
cli
ret
sub
mov
sbb
jae
int3
lret
pop
sub
pushf
mov
mov
adc
sub
sbbb
push
enter
es
in
aas
mov
pusha
inc
and
popf
and
mov
pop
mov
mov
pop
test
imul
mov
inc
mov
pop
push
cmp
inc
fsubrl
fdivr
or
sub
xchg
push
hlt
loopne
das
roll
ret
icebp
adc
push
mov
push
icebp
and
loop
push
dec
out
xor
sbb
jo
in
out
lea
adc
dec
jbe
loopne
or
aas
jle
xlat
mov
add
inc
out
mov
das
ss
iret
aam
xorl
inc
add
idivl
subb
ss
pop
pop
cwtl
mov
and
les
sbb
notl
mov
ja
iret
aas
cmpb
sub
mov
pop
mov
cmpsl
enter
push
outsl
mov
movsb
push
xchg
jge
or
rolb
fisttpl
sbbl
push
adc
ja
push
lea
inc
lret
daa
mov
sbb
xchg
push
jg
and
push
jb
dec
call
out
xchg
push
gs
fidivs
xchg
fcoms
mov
inc
inc
fcom
or
js
loop
aaa
mov
sldt
xchg
xchg
xchg
ja
pushf
popl
jle
adc
inc
test
push
sahf
mov
loopne
das
or
adc
mov
test
jae
loopne
and
mov
in
lock
mov
push
movsb
mov
cmp
sbb
mov
mov
mov
mov
into
and
lods
cmp
sbb
sub
fs
add
xor
shll
sbb
ja
push
add
jno
jecxz
mov
in
add
loopne
mov
add
loopne
mov
xchg
push
popf
add
add
addb
mov
ret
ret
pop
mov
inc
je
or
and
sbb
repz
dec
icebp
add
mull
and
int
in
icebp
pusha
xor
insl
je
push
cmpsl
xchg
out
and
imul
push
mov
imul
pop
mov
sbb
mov
mov
mov
rcrl
mov
in
inc
adc
sbb
stos
sbb
sbb
popa
mov
pop
insb
sbb
aas
hlt
cli
bound
mov
jne
fisttpll
push
pop
cmp
je
xchg
mov
xchg
stos
or
jmp
or
push
and
imul
and
or
scas
cmp
rclb
add
enter
test
adc
and
sbbl
jge
and
rorl
bound
and
sub
sbb
nop
push
imul
cwtl
sub
add
nop
fsubrl
inc
sub
adc
lcall
or
push
mov
lock
in
jge
sub
jle
pop
jg
loopne
insl
sub
ss
push
cs
aam
mov
popf
mov
test
xor
or
das
jge,pn
loopne
dec
sub
imul
jns
cmp
and
int3
xor
rorb
push
jno
sbb
push
push
push
mov
jge
sub
das
out
bound
shlb
and
mov
lds
cs
orb
popf
call
cmp
cmp
stos
into
add
dec
call
mov
lock
pop
add
add
cmp
add
xor
xor
loope
mov
adc
ja
xchg
je
add
in
pop
and
pop
das
mov
mov
cmova
sbb
mov
shll
or
sbb
adc
sbb
sti
mov
push
sbb
inc
and
and
lea
pop
and
fsubrs
lret
shlb
mov
mov
pop
xor
fwait
out
or
lock
cmp
les
loope
movsb
dec
pop
or
push
or
inc
or
or
jae
js
ss
sbbb
sbbb
ret
add
out
add
test
xor
cli
sbb
ret
push
jbe
mov
movlhps
jnp
or
xor
mov
ja
fisttpl
arpl
adc
push
lret
mov
push
scas
int3
pusha
out
push
pop
xor
xchg
inc
push
xchg
jl
xchg
cmc
pop
movsl
in
push
xchg
es
xchg
aas
fwait
in
pop
adc
and
push
adc
or
mov
push
push
add
pop
subl
hlt
push
inc
enter
enter
jae
xor
daa
or
pusha
cmpb
pop
test
mov
xor
cmpsl
and
add
push
in
cmp
mov
mov
call
dec
cmp
inc
shrd
mov
sub
mov
rclb
mov
cs
lahf
mov
mov
bound
mov
int3
sub
push
notl
ret
dec
hlt
sub
push
arpl
push
or
inc
add
jno
or
rcll
xor
inc
add
mov
leave
mov
popa
sub
cmpb
xchg
dec
pushf
imul
clc
inc
mov
cmp
ja
add
inc
ret
adc
add
inc
pusha
pop
push
xchg
into
outsl
pusha
leave
xor
mov
or
mov
out
or
cmpsb
mov
inc
bound
mov
or
push
int3
lds
fstps
mov
add
repnz
cmc
cmp
decb
mov
or
dec
in
sbbb
push
add
js
int3
push
inc
inc
ret
cmp
jae
addr16
adcb
gs
dec
and
mov
push
jno
movsb
mov
test
inc
outsl
aad
sbb
testb
push
scas
push
jbe
mov
ret
mov
jecxz
push
or
mov
or
int3
cmp
jne
sbb
add
loopne
test
mov
data16
mov
je
cmpb
xor
mov
sbb
ja
dec
loop
xorps
mov
dec
push
out
clc
je
cmp
clc
lcall
cmc
sbb
push
loopne
stc
sub
lea
push
lea
mov
loope
inc
push
test
nop
fs
je
sbb
int3
sbb
ret
sbb
dec
insl
fildll
lret
cmp
jl
cmp
dec
hlt
int3
xor
sarl
pop
sub
lock
inc
mov
cmp
jne
mov
outsl
sbb
push
add
mov
stos
jmp
sti
push
mov
sub
repnz
sbb
xchg
pusha
out
ljmp
sub
jne
and
pushw
push
mov
xchg
imul
dec
sub
ret
test
fstps
sti
rorb
cltd
sub
shll
sub
sarl
push
mov
lahf
push
or
xchg
in
mov
ret
aas
inc
in
sub
lea
out
push
dec
or
in
out
cmpl
or
xor
push
insl
adc
hlt
pop
mov
dec
ja
cmp
adc
mov
jge
pop
fadds
call
xchg
lock
xor
push
or
pop
jo
mov
ja
pop
add
test
stos
stc
xor
push
xor
call
mov
out
lock
sub
add
push
adc
or
jo
test
inc
das
and
divl
add
mov
or
or
ret
or
pop
or
neg
xchg
cs
sub
mov
cmpl
push
push
lods
div
dec
or
data16
mov
inc
addl
jb
mov
fadd
fwait
add
lret
int
pusha
push
pushf
aaa
nop
xor
or
xchg
scas
xchg
cmc
rolb
mov
adc
cmp
iret
addr16
rcrb
repnz
jecxz
pop
mov
sbb
or
pop
sar
mov
jg
loopne
leave
adc
jbe
inc
cmp
push
push
dec
mov
nop
rorl
out
push
add
push
push
xorl
sbb
jmp
dec
or
adc
sub
jno
imul
push
lock
leave
add
fcoml
xchg
xchg
or
in
jno
lock
fdivs
clts
scas
cmp
push
adc
ljmp
jp
mov
mov
das
adc
xor
add
ds
or
daa
add
adc
lds
out
loopne
inc
cwtl
test
and
and
lahf
pop
sub
pop
lods
jmp
jle
das
mov
lods
push
test
je
cli
jmp
mov
loope
pop
fwait
pop
jno
cmp
push
inc
cmp
jae
push
loope
adc
push
sub
cmp
aaa
add
subb
ret
mov
sbb
mov
xchg
mov
mov
sub
jb
cmp
dec
out
inc
pusha
clc
inc
dec
adc
add
clc
ret
xchg
lods
xchg
das
sub
xchg
push
stos
push
insb
sub
or
popa
cli
jmp
jo
push
mov
cmp
je
ret
mov
in
push
cmp
push
mov
push
pop
sti
je
pushf
mov
ret
and
jb
and
int3
sbb
rolb
add
popf
scas
stc
jge
push
sub
lcall
test
or
or
clc
pop
in
movsl
inc
push
ss
sbb
lcall
jecxz
les
dec
push
jp
imul
pop
fmuls
adc
xchg
pop
inc
jp
mov
ss
loopne
xchg
cmpsl
pop
in
add
mov
add
in
or
and
ficoml
add
mov
jmp
pop
out
jne
jbe
jbe
scas
jge
inc
push
push
je
lea
dec
inc
jmp
sbb
enter
pop
jecxz
cltd
aaa
clc
sub
add
mov
push
pop
xchg
adc
sub
ret
or
inc
xor
dec
sub
xchg
sub
sub
test
daa
leave
aas
xchg
jo
lea
or
dec
pop
std
inc
movsb
dec
das
cwtl
pop
push
lahf
and
popf
or
xor
insl
andl
jnp
mov
lret
aaa
jno
sub
repnz
or
sbb
and
jae
cmp
or
jbe
cmc
sub
xorl
lock
and
loopne
fidivrl
or
cmp
ja
std
rolb
and
jae
push
xor
pop
orb
loope
je
pop
inc
adc
negb
sub
cmp
cmp
add
mov
add
icebp
dec
mov
fisubrs
sbb
mov
mov
mov
js
jl
adc
out
or
and
enter
lods
imul
mov
call
push
inc
pop
jg
pop
sti
cmp
mov
push
or
pop
xchg
pop
sub
mov
mov
je
jo
pop
bound
in
dec
dec
into
cs
emms
sub
in
and
dec
pop
or
cmpsl
mov
lock
leave
ret
push
cmpsl
dec
or
repnz
pop
push
pushf
xor
test
test
dec
xor
cmp
js
test
sub
push
daa
je
orl
sbbb
pop
mov
dec
rcll
or
out
lret
push
mov
jbe
jle
mov
mov
in
add
pop
loopne
or
cmpsl
test
movsb
into
inc
in
dec
dec
dec
add
add
repnz
dec
pop
mov
and
add
or
fiaddl
in
addl
pop
fsts
xor
sub
repz
xchg
mov
xchg
sub
repz
lea
push
push
data16
push
shrb
mov
js
or
xor
movsb
and
xchg
sub
mov
rol
add
adc
mov
inc
push
cmp
jne
loop
or
mov
ret
pop
repz
imul
or
loopne
addr16
iret
mov
add
and
pusha
xchg
or
lea
or
cmc
xchg
xor
and
sub
dec
sbb
or
push
cmp
mov
hlt
and
fcom
cmc
dec
or
pop
ret
sub
enter
mov
xor
ror
mov
scas
shll
ljmp
enter
lret
ljmp
cld
push
aaa
add
fimull
or
sub
in
add
cmp
mov
cmp
jp
sbb
or
or
or
mov
sub
sub
data16
sbb
adc
ficomps
icebp
sbb
jge
add
loopne
lcall
popa
jo
mov
pop
push
in
fstps
add
mov
sub
mov
jo
cltd
sbb
mov
inc
mov
movsb
pop
mov
loop
mov
cmp
pop
jns
rolb
mov
and
inc
or
mov
xchg
xchg
test
cmp
scas
and
inc
loop
add
pop
xor
sbb
adc
mov
add
sbbl
dec
push
push
pop
xchg
adc
clc
xchg
cmp
pop
sbb
cmp
xchg
sub
mov
ficoml
pushf
sbb
pusha
outsb
nop
int
sbb
mov
in
addr16
adc
and
xchg
movl
nop
mov
ret
mov
inc
insb
sub
inc
punpckldq
pop
sub
mov
mov
xchg
pop
aad
rclb
sub
and
xchg
inc
mov
jnp
es
add
xor
daa
std
cmp
outsb
subb
loopne
test
inc
add
ret
in
add
and
cmp
or
mov
inc
cmc
daa
stos
cld
jmp
mov
pop
rolb
and
fs
add
das
pushl
jnp
push
mov
push
mov
sbb
push
aam
out
js
clc
adc
sbb
add
cmp
daa
inc
xor
xchg
shr
mov
loopne
test
inc
or
lock
inc
mov
cmp
test
dec
add
jmp
adc
ds
ja
push
push
push
pop
adc
add
push
in
push
pop
adc
test
sarb
dec
sbb
mov
fimuls
push
jge
aas
sbb
mov
sub
clc
js
loop
out
jbe
insl
in
mov
mov
lock
adc
jle
mov
dec
pop
mov
idivb
mov
pop
mov
jne
adc
pop
call
daa
adcl
ror
movsb
mov
imul
push
testb
shll
and
or
movsb
adc
push
add
sbb
imul
push
cli
lds
xlat
enter
jmp
xchg
jle
fadd
ja
sub
lea
xchg
jmp
pusha
lods
pusha
cmp
mov
jo
inc
insb
pop
sub
jp
test
or
xchg
sbb
add
mov
iret
inc
mov
sub
cmp
inc
push
iret
add
test
call
loope
sub
mov
or
imul
add
add
in
push
or
imul
bnd
mov
cmp
xchg
mov
inc
or
loope
notl
sbb
int3
push
ret
insl
adc
push
test
jne
jmp
push
jo
and
jne
in
mov
cmpsb
ret
dec
cmp
add
ljmp
loopne
pop
mov
xor
push
cs
ss
stos
subl
popa
jo
sbb
add
ficomps
in
mov
sbb
andl
mov
mov
xchg
fmull
popf
mov
out
inc
jnp
mov
das
in
sbb
in
cmp
xchg
mov
sbb
lea
add
pop
mov
es
movsb
pop
cld
inc
mov
insb
mov
sub
lcall
sbb
mov
xchg
negb
nop
cmp
mov
xlat
mov
push
fistpl
in
popa
add
jmp
xchg
adc
jp
push
adc
adc
inc
lods
es
inc
pop
mov
inc
lea
add
and
rol
xor
gs
mov
iret
aad
push
stc
fiadds
xor
push
mov
or
into
dec
mov
js
xor
dec
push
cmp
insl
and
mov
xlat
push
adc
mov
nop
and
push
mov
mov
push
adc
mov
loope
add
dec
add
push
dec
xor
xor
mov
xor
lea
and
imul
in
cmpb
ffreep
xor
cs
xor
add
jnp
orl
push
mov
test
push
bound
je
adc
push
fwait
inc
mov
sbb
inc
pop
cmp
movsb
sarb
add
mov
cmp
test
loopne
sub
pop
xor
dec
dec
out
xor
sbb
aas
test
mov
jne
cmp
les
or
mov
add
push
icebp
add
cmp
fcompl
andl
push
push
mov
loope
xchg
pop
push
cltd
jno
adc
push
mov
push
inc
sub
lods
gs
cmp
inc
loopne
pushf
adc
mov
les
dec
fdivs
test
add
fsubr
aam
out
shlb
pop
cmp
jne
out
sub
lods
sarb
dec
pop
mov
adc
pop
std
sub
and
cmc
sub
lock
push
xchg
push
int3
out
add
add
jmp
inc
fmull
and
aas
imul
loopne
rclb
inc
pop
movsb
mov
push
cmc
enter
xchg
sbb
cmp
add
sbb
shll
dec
mov
dec
push
push
or
leave
push
lods
xchg
into
inc
mov
add
sub
ja
test
xor
add
movsl
jge
ret
test
loop
pushl
adc
stc
sbb
sub
pusha
jb
popf
movsl
test
add
xor
das
pop
dec
ret
and
dec
jmp
push
stos
and
jb
adc
inc
pushw
mov
cld
sahf
dec
pop
inc
ljmp
in
inc
inc
pop
adc
adc
pop
inc
cmpsb
dec
enter
and
insl
cmc
les
mov
fcoms
or
and
pusha
inc
xor
add
sbb
fsubrl
pushf
adcb
dec
cmp
sub
sub
lods
popf
hlt
mov
popl
mov
add
lock
mov
jmp
inc
jl
cmp
sbb
sub
xchg
pop
rcrb
fcompl
out
add
and
cmp
in
xor
push
xor
sub
rcrb
cld
sub
xchg
ret
mov
sub
in
jge
mov
add
or
push
in
rclb
ret
dec
add
inc
add
push
jnp
jmp
out
push
lret
adc
cmp
or
pop
rcrl
mov
push
int
aaa
xchg
jecxz
scas
pop
xlat
dec
in
mov
lea
lea
mov
and
push
inc
bound
sub
out
or
push
mov
aad
adc
add
repnz
stc
or
mov
fisttps
pop
icebp
mov
adc
sbb
andl
push
xor
mov
xchg
dec
or
jl
pop
cmp
sbb
jo
shll
push
or
sbb
and
call
lods
subb
fmuls
scas
mov
scas
mov
add
incb
jle
adc
mov
fnsave
scas
jbe
into
mov
mov
cmp
lods
call
pop
or
daa
push
add
test
mov
adc
fwait
cmp
inc
xor
add
aaa
mov
cs
sbbb
and
jno
popa
mov
clc
dec
insl
fdivr
roll
ret
mov
mul
aam
lds
mov
cmpsl
in
xchg
scas
inc
cmp
add
dec
sti
sarb
mov
sti
pushf
mov
pop
cmp
dec
xlat
scas
sub
popf
jb
adc
ja
jmp
xor
mov
jae
movl
stc
cmpsb
inc
test
sahf
adc
lea
out
dec
add
cmp
fadd
rorb
mov
insl
add
add
pop
shll
jge
and
add
xor
ret
rcrl
or
push
jp
addl
mov
push
push
aaa
mov
or
adc
scas
fucomi
xor
jmp
jecxz
mov
xor
dec
push
je
dec
jne
pusha
xlat
test
push
mov
xor
adc
adcb
cs
cld
pop
sbb
rcl
mov
sarl
pop
repnz
aam
popa
fwait
loop
mov
mov
es
or
rcr
pushl
mov
imulb
loope
xchg
jge
test
dec
adc
or
inc
imul
xor
dec
dec
or
mov
pop
jno
adc
lea
cli
jb
adc
or
fiadds
dec
outsb
adc
jmp
lea
in
lret
ja
cmp
xchg
ss
sub
je
mov
dec
orl
add
sbb
pop
mov
xchg
imul
popa
repnz
pop
mov
sbb
push
mov
fs
add
aad
lods
rorl
add
jb
xor
and
cmp
testb
push
cmp
int
pusha
xor
sti
push
icebp
or
out
je
adc
dec
or
mov
jge
adc
es
push
xor
jb
sub
outsb
lock
xor
icebp
int3
or
call
jecxz
sub
sbb
or
push
aaa
cmp
cmpb
outsl
shlb
cltd
sarl
push
cmp
or
sbb
adc
adc
cmp
addb
in
into
cld
push
pop
cmc
arpl
push
je
aaa
cmp
mov
roll
test
dec
cmpsb
add
xor
sub
adc
sub
jo
jbe
jmp
adcb
xchg
pop
sbb
dec
or
xchg
addb
lcall
or
inc
sbb
cmp
xor
add
adc
sub
arpl
xorb
das
and
scas
cmp
fnstcw
rolb
sbb
pop
lods
push
push
xor
jge
in
lods
lods
outsl
bound
push
adc
cmp
mov
mov
fnstenv
outsb
adc
jno
sar
cmp
cmp
push
and
mov
rorl
cmp
or
les
mov
pop
xor
inc
cmp
mov
or
push
or
xchg
adc
faddl
push
lds
push
and
sub
inc
jbe
ds
push
mov
movsb
cmp
dec
pop
cmpsb
xor
dec
add
dec
push
mov
push
mov
pop
ja
into
insb
sub
ret
mull
mov
es
mov
nop
mov
shlb
jg
ja
jge
mov
divb
jp
jno
inc
cmp
jl
push
fimull
insl
test
inc
pop
lcall
dec
add
push
inc
ret
sbb
lds
xor
les
popf
pop
mov
adcl
mov
dec
cld
mov
mov
adc
xor
in
mov
lea
jae
das
mov
jo
insb
dec
imul
sbb
sbb
sub
pop
testb
andl
sub
mov
jmp
aad
or
mov
popf
add
or
fld
out
popf
xchg
add
shlb
sbb
aas
mov
cld
fisubs
inc
cmp
cmpb
je
cmp
mov
xor
popf
leave
ret
mov
dec
sbb
and
push
sub
in
imul
inc
lea
push
ret
jbe
inc
adc
and
nop
or
sub
es
mov
ffreep
imul
xchg
sbb
inc
cli
and
subb
mov
clc
or
jae
inc
test
and
jae
sarb
enter
orb
shr
pop
shr
mov
in
push
add
mov
pop
add
orl
aam
inc
mov
popf
test
cmp
xchg
fmull
sub
das
jl
sub
mov
fs
mov
out
popf
pushf
in
lock
push
mov
loopne
cmpsb
mov
inc
andl
fs
js
mov
int
movb
sbb
ret
inc
out
iret
dec
je
mov
sbb
mov
incl
sub
mov
mov
in
and
mov
bts
xor
aam
dec
push
aam
stos
and
dec
inc
or
cwtl
sbb
sbb
rorb
loopne
push
test
cmp
lea
pop
faddl
int3
cmp
lea
sti
int
xchg
cli
sbb
mov
jae
cld
push
mov
shrb
push
mov
sarb
lods
sub
outsl
ja
clc
mov
xlat
dec
cmp
sub
mov
xchg
and
or
ja
cmp
lds
mov
adc
or
ret
repz
pop
std
adc
in
push
mov
or
jp
sbb
cmp
ja
popf
or
mov
dec
cwtl
stos
ds
mov
jo
or
xchg
mov
outsl
inc
sub
jmp
fisttps
mov
push
fbstp
enter
aas
dec
stos
mov
cli
insb
cmp
inc
pusha
and
sub
xchg
add
add
or
xor
mov
jl
std
lret
push
out
cmp
jge
dec
stos
push
xchg
movsb
mov
jo
pop
xchg
inc
xchg
cmp
test
nop
in
push
and
and
sbb
shlb
add
pop
and
jl
adc
outsl
jb
test
inc
sub
lds
sbb
add
adc
push
mov
dec
outsb
inc
je
sbb
cmp
addr16
out
bound
insl
push
pop
ja
and
mov
je
or
xchg
push
xchg
adc
mov
mov
ljmp
sub
rolb
adc
lret
pop
orl
add
and
and
fisubs
mov
or
pmulhw
push
addr16
pop
fs
fisubs
testl
add
sti
pop
sbb
test
aas
faddp
stc
popa
movl
and
enter
jp
mov
pop
popf
push
loope
fs
out
ret
jo
mov
dec
mov
imul
cltd
mov
rclb
and
and
and
subb
xor
xlat
pushw
movsb
and
mov
icebp
push
int3
js
pop
xchg
mov
cmp
daa
mov
jge
or
add
hlt
pop
aaa
sub
xor
mov
cld
ret
add
pop
cltd
jl
xor
adcl
push
ret
xchg
cmpsb
xchg
js
mov
subl
lds
rorb
dec
nop
out
lret
leave
add
nop
out
das
add
adc
clc
xor
xor
jo
je
mov
cmp
xchg
ss
and
gs
sub
fmull
popf
pop
popf
adc
sub
sbb
push
sub
pushf
and
daa
ret
inc
aaa
ss
and
and
bound
cmp
mov
mov
scas
inc
pop
gs
jno
xchg
stos
adc
and
cwtl
xlat
adcl
sub
lret
cmp
arpl
movsb
outsl
jne
clc
rclb
lea
orb
push
rolb
xchg
push
andl
imul
pop
or
movsl
sarl
outsl
mov
pop
add
mov
and
push
mov
lret
jge
or
mov
jl
shlb
or
rcrb
fs
dec
pop
aaa
xor
orl
sub
pop
add
jae
cmp
push
adc
add
jae
cmp
xlat
jo
imull
push
xor
inc
xor
imul
jmp
adc
jno
jbe
pop
sbb
or
sbb
xor
sub
or
and
cmp
rcr
jb
or
add
add
fldl
inc
jno
cld
cmp
fistpl
fmuls
sahf
mov
insb
push
sub
insl
xchg
cmpl
xor
cs
stc
push
fcmovnbe
lea
xchg
push
or
xchg
cs
rcrl
adc
clc
shlb
fistpl
cmpsb
inc
pop
inc
call
mov
xor
data16
lahf
or
pop
popf
pop
xlat
mov
mov
aaa
sbb
iret
xor
popf
jbe
push
dec
or
and
rorb
jl
sbb
add
jo
push
push
jno
jnp
jle
outsl
lea
aad
mov
mov
ret
or
xchg
lods
clc
cs
or
xor
iret
outsl
dec
dec
add
add
jl
jae
negl
mov
lret
cltd
loope
lea
loope
and
lret
xchg
ret
xchg
pop
in
fadds
repnz
mov
xchg
cwtl
cmp
mov
jmp
xchg
add
xor
divb
mov
jne
aad
mov
dec
adc
xchg
adc
shrl
or
mov
push
pop
pop
jg
mov
testl
in
pop
cs
push
cmpsb
shrl
xchg
or
or
aam
jae
sub
mov
mov
jns
mov
jno
and
push
xor
test
mov
lcall
sarl
fnclex
push
cmp
or
aad
or
push
push
dec
push
dec
insl
cmp
sbb
sbb
mov
and
jl
lcall
sub
insb
mov
out
fcompl
mov
sbb
test
pop
fbld
pushf
fmul
cs
push
sbb
fs
cld
pop
sbb
sbb
test
xor
or
add
mov
enter
fs
iret
adc
sub
and
sbb
mov
jne
pop
sbbl
orl
pop
sub
xor
daa
adc
sub
daa
sub
push
nop
push
sub
and
sub
xchg
push
enter
sub
xchg
inc
push
sub
sub
mov
sub
dec
and
sub
or
insb
add
mov
movsb
jmp
mov
scas
mov
push
push
sbb
dec
sbb
add
inc
jnp
subl
mov
adc
test
push
dec
add
xchg
lcall
jle
dec
xor
cmp
xor
test
test
dec
dec
repz
xor
fcoms
mov
andb
or
mov
imul
lea
aad
fadds
adc
int
mov
and
sbb
dec
dec
xor
sbb
adc
les
scas
out
sbb
add
loope
inc
inc
inc
testl
or
dec
mov
inc
push
or
sbb
fwait
stos
push
test
or
xchg
lea
and
movsl
fs
fsubr
jge
lods
add
test
add
lock
or
add
in
aaa
and
pushf
dec
repz
mov
mov
inc
sub
icebp
sbb
loop
dec
test
mov
or
ret
dec
shlb
dec
sbb
loope
dec
sub
pop
push
push
jl
in
ss
xchg
sbb
andl
push
in
shll
adc
in
add
mov
loopne
sub
sub
cmp
push
out
data16
inc
leave
lock
add
mov
mov
dec
sub
stos
je
push
gs
test
sub
mov
pop
push
xor
inc
test
push
dec
daa
test
adc
dec
or
shlb
dec
push
aam
lahf
add
int3
sbb
xchg
test
or
add
sbb
es
and
ret
lods
or
sbb
call
adc
inc
fbld
cmp
je
mov
xlat
adc
hlt
rcr
push
ret
or
add
cld
cltd
stc
jno
imul
add
push
sbb
dec
cmp
push
arpl
mov
sbbb
loop
mov
test
add
shlb
ret
cs
stc
xor
es
enter
in
jae
std
dec
lods
jp
je
xlat
les
cmp
jmp
outsb
pop
aam
les
pushf
addl
enter
sub
je
stos
mov
sub
dec
imul
push
orb
push
add
mov
ja
shr
push
mov
fistpl
or
fldl
cmp
inc
jp
jecxz
dec
nop
push
pushl
and
push
jmp
mov
inc
fmuls
push
adc
and
sbbb
inc
mov
repz
mov
inc
enter
mov
push
or
and
jnp
aaa
lock
pushf
aaa
int3
sbb
fisttpll
arpl
sub
jno
iret
mov
adc
push
cmpl
jne
push
loopne
sar
pop
pusha
mov
out
cmpl
repnz
mov
imul
roll
add
aaa
add
aaa
add
mov
mov
push
inc
and
insl
fadd
inc
popf
push
andl
sbbb
mov
xor
mov
dec
iret
adc
lds
jge
jecxz
cmpb
lods
pop
adc
xor
aad
adc
dec
xorl
inc
add
adc
xchg
in
mov
inc
aam
popa
adc
lods
sbb
sbb
nop
sub
add
pop
cmp
unpcklps
cs
jne
cmp
adc
push
inc
call
or
mov
mov
adcl
or
cltd
out
in
in
and
push
je
mov
and
dec
cmp
jns
push
inc
dec
push
inc
jmp
add
mov
mov
xchg
bound
loopne
jno
aaa
xor
ret
bound
pop
sub
mov
adc
mov
push
jmp
sub
movl
fld
mov
sbb
mov
inc
sbb
push
pop
add
add
movsb
inc
stos
sbb
mov
nop
inc
sahf
push
std
mov
mov
sbb
jno
and
mov
test
sbb
insb
mov
aam
pop
xor
femms
outsl
arpl
popf
or
dec
nop
pop
std
mov
mov
xor
xchg
jmp
or
and
repnz
mov
into
xchg
fs
push
xor
cmp
fstp
cmp
adc
push
push
mov
push
push
inc
sti
test
push
mov
jnp
add
fs
inc
and
pop
loop
fsub
cmp
jle
cld
jae
inc
add
outsb
mov
shrb
xor
add
pop
cmp
mov
cmp
loopne
testl
sub
jmp
rcrl
test
mov
sidtl
inc
lret
jp
and
adc
cmpsb
orb
jo
ret
int3
nop
stos
and
xadd
stc
cmc
dec
sub
sub
stc
push
add
adc
in
shrb
dec
sbb
sub
add
cmp
pop
les
mov
jne
xor
add
sub
ja
pop
jbe
adc
and
scas
lret
adc
pop
xor
mov
sub
push
and
xor
xchg
shrb
jmp
push
inc
pop
push
inc
test
fadds
cmpsb
add
jle
pop
ret
add
xchg
add
arpl
push
mov
xchg
fistl
ds
or
inc
push
xchg
or
mov
or
add
in
pop
shrl
push
xchg
lea
and
or
pop
mov
outsl
andl
imul
adc
pop
inc
imul
rol
faddl
lea
out
iret
inc
sahf
test
dec
call
dec
dec
dec
in
adc
inc
stc
or
aas
pushf
add
test
xor
push
in
aam
cld
add
pusha
add
dec
push
adc
popf
addb
mov
or
lock
add
mov
sub
lock
xor
inc
push
xor
in
lock
inc
movl
sub
xchg
push
popf
adc
ret
loop
xor
loopne
cmp
mov
pop
xor
adc
push
adc
or
mov
inc
lea
dec
fnstenv
xor
ja
pop
movsl
jo
inc
popf
dec
cmp
sbb
adc
or
xor
mov
push
dec
add
cmpsl
and
add
pop
add
popa
je
inc
add
popa
and
sbb
enter
lds
in
popf
push
jle
mov
scas
xor
sbb
push
scas
push
enter
push
enter
in
cmp
fsubrp
xchg
or
push
lea
pop
push
push
xor
divl
dec
sbb
jbe
push
daa
rcrl
in
aam
inc
sbb
ret
je
sahf
incl
movsl
add
lds
add
mov
leave
push
add
decl
xor
daa
and
ror
and
push
dec
cmp
xchg
mov
inc
inc
sbb
loope
adc
push
or
rclb
lods
push
xlat
lahf
scas
mov
adc
fildll
jns
sub
dec
rorb
cmp
add
xor
add
subl
in
or
jecxz
mov
or
addl
dec
bound
adc
sub
add
pop
call
pushf
test
fildll
in
out
mov
jle
xor
inc
cmp
and
inc
cmp
fnsave
add
adc
sub
subb
js
mov
fistpll
aam
or
inc
test
mov
dec
mov
sub
add
sbb
cli
or
xchg
sarb
cmp
push
pop
jb
mov
or
mov
lea
xor
push
sbb
cmpb
mov
cmp
adc
dec
sbb
int
nop
xor
enter
adc
mov
adc
push
mov
les
data16
push
pop
rol
add
test
mov
cmp
sub
add
xchg
push
inc
push
pop
add
repz
xlat
push
push
sbb
sub
cmc
pop
sahf
sub
je
add
leave
sub
sbb
or
dec
sbb
or
mov
adc
es
lret
add
lods
pop
cmp
jo
pop
or
jae
sahf
push
pop
test
sbb
xchg
fwait
jbe
sbb
les
in
jmp
mov
add
cmp
scas
fisttpll
icebp
push
add
movsb
sbb
or
insb
push
add
pop
push
ret
aaa
mov
shlb
push
fwait
xor
int3
orl
mov
sub
adc
xchg
outsl
movsl
sbb
mov
outsl
dec
adc
push
movl
cwtl
or
add
or
push
cmp
mov
sub
movsb
sbbb
arpl
xchg
pmuludq
inc
in
dec
xlat
loopne
mov
add
and
pop
adc
aas
sbb
push
addl
xor
dec
or
xchg
fistps
lds
insb
dec
jns
push
fldt
call
jne
cmp
push
lea
insl
loope
pop
call
mov
cmp
inc
lcall
jo
rorb
nop
repnz
sahf
sbb
xchg
pop
and
das
jle
jecxz
sub
outsb
or
jbe
test
push
dec
nop
xchg
add
inc
inc
xchg
add
sbb
xor
push
jg
nop
adc
add
dec
or
xor
xchg
mov
insl
hlt
repnz
sbb
and
mov
dec
push
add
cs
ja
cmp
cltd
mov
jg
add
repnz
jle
repz
mov
dec
rorb
pop
or
push
sub
bnd
mov
pop
mov
xor
sub
cmp
nop
sub
mov
push
adc
sub
cmc
mov
jno
add
push
out
or
jo
test
sub
xchg
test
cmp
loop
clc
or
add
pop
add
or
call
inc
or
mov
add
adc
test
movl
mov
mov
push
adc
xchg
int3
arpl
xchg
xchg
or
mov
mov
sub
mov
jge
cmpb
test
cmpsb
dec
mov
fwait
ret
or
mov
adc
adc
mov
imul
pop
dec
pusha
inc
jno
mov
push
cs
xor
leave
push
dec
adc
icebp
movsb
mov
xchg
imul
mov
ss
sbb
dec
inc
sbb
and
js
push
mov
inc
lds
dec
sbb
movsb
push
push
inc
and
lods
pop
pop
fdivrs
aam
add
or
js
push
mov
mov
xchg
xor
aaa
cmc
xchg
decb
shrb
adc
decl
je
mulb
cmp
lahf
add
movsbw
shlb
enter
jno
jne
fisttpl
xchg
je
or
je
adc
sub
or
inc
push
arpl
jecxz
add
mov
inc
pop
cmp
mov
hlt
push
inc
jp
pop
andb
sub
loopne
pop
dec
cmp
adc
aas
cmp
fmull
sbb
in
adc
sbb
fs
rcrb
lcall
adc
push
and
pop
push
inc
xor
mov
icebp
cli
push
jg
xchg
aas
lea
pop
out
add
push
jecxz
add
inc
dec
sahf
das
fwait
push
jge
lods
repnz
mov
push
xor
and
cmp
add
or
cmp
pop
popf
popf
or
adc
jbe
cmp
mov
ficompl
or
xchg
mov
mov
dec
sub
ret
sbb
movsl
xor
adcl
inc
or
repz
fs
and
stos
or
rorl
out
and
push
neg
in
enter
div
sub
in
jo
sub
imul
and
xchg
pushl
push
pop
test
or
push
or
inc
jno
ret
mov
and
imul
inc
or
popa
jge
xlat
add
cmp
dec
pop
sbb
push
jmp
in
push
sbb
inc
push
sbb
aas
sbb
mov
stos
ror
clc
popa
fldcw
dec
xor
test
insb
fwait
test
or
nop
js
and
out
mov
outsl
test
lcall
lock
ret
mov
and
pop
push
inc
cmc
adc
lock
and
clc
je
sbb
mov
cmp
lea
aad
xor
pop
and
mov
dec
cmpsb
or
ret
hlt
leave
and
sub
or
test
sbb
sbb
cmp
cmp
stc
sbb
lcall
es
fsubs
pop
fnstenv
jae
or
in
movsl
cmp
xor
cmp
out
and
out
add
test
xchg
and
dec
mov
mov
sub
xchg
jle
mov
or
mov
add
movl
scas
xchg
pop
mov
mov
gs
test
arpl
push
test
mov
das
retw
or
push
dec
call
mov
mov
mov
or
call
adc
add
mov
insb
and
iret
push
mov
cmc
gs
sub
xor
jne
or
out
xchg
mov
movl
sub
js
dec
sub
inc
adc
rcrb
je
cmpsb
push
jp
cmp
into
int3
sarb
add
cwtl
pop
cltd
add
push
dec
imul
add
push
aam
shll
jl
fnstenv
mov
sub
std
mov
ss
jge
add
sub
mov
push
cmp
bound
movsl
add
movsb
shrl
mov
or
das
xchg
xchg
mov
insb
addl
jecxz
push
push
and
or
sti
mov
hlt
sbb
dec
mov
sub
jle
mov
clc
sub
movsb
stc
sub
push
popf
clc
push
add
push
push
push
push
popa
in
cwtl
jl
jp
xor
mov
pop
cmc
add
ffreep
mov
lea
inc
jne
mov
cli
call
sub
mov
das
inc
mov
cmp
jne
rolb
pusha
ret
xchg
inc
dec
pop
and
pop
out
pop
xchg
push
and
add
and
push
dec
inc
push
dec
dec
xor
sbb
mov
adc
insb
loope
pop
repz
imul
dec
jmp
and
prefetch
xchg
add
or
test
add
cmpb
cmp
lret
dec
fbld
jmp
push
inc
cwtl
imul
pushf
orl
hlt
adc
xchg
pushf
clc
push
test
jg
add
jo
pop
add
xchg
cld
mov
lods
fnstsw
mov
mov
mov
mov
mov
jle
cmp
js
add
xor
cmp
jbe
pop
adc
xchg
cmpb
dec
and
inc
movsb
sbb
jnp
adc
add
jne
dec
sbb
adc
xchg
pop
mov
cmp
insb
mov
xor
sub
ja
pop
adc
roll
dec
mov
add
lds
add
add
push
sub
or
pop
or
enter
pusha
mov
data16
rolb
xor
add
mov
jae
add
add
aaa
push
pop
xor
int3
je
jg
push
popa
pushf
test
sbb
pop
jo
cmp
scas
stos
imul
push
cmp
jb
cmp
cli
jbe
cmp
or
or
push
xchg
inc
jne
cmp
clc
jo
or
jnp
add
xor
mov
pinsrw
push
push
subl
mov
sbb
loop
inc
add
lea
dec
mov
fidivl
and
jg
addl
mov
outsl
mov
push
out
ss
dec
cmpl
push
xor
and
xor
stos
rolb
adcl
push
adc
clc
es
jg
push
push
mov
movsb
or
icebp
xchg
rolb
fadds
xchg
and
push
fcom
mov
adc
mov
pop
lods
adc
mov
cmp
sar
adc
pop
inc
jmp
and
dec
movsb
adc
push
jge
test
movsb
adcb
add
push
icebp
jl
sub
ss
hlt
jae
in
out
dec
xchg
add
movsl
pop
push
pop
shl
rorb
jmp
cmp
pop
js
shlb
adc
roll
or
pop
int3
je
mov
int3
pop
push
mov
xchg
lcall
loopne
jmp
test
notb
insl
je
jp
adc
jnp
mov
add
aaa
test
xchg
dec
imul
push
or
jbe
cmp
push
cmp
je
sbb
or
jge
jno
xchg
mov
pop
ss
xchg
pushf
popf
jnp
inc
mov
and
pusha
ret
inc
cwtl
xor
les
dec
pop
pop
or
mov
mov
cmp
mov
cmp
sbb
jbe
mov
in
pop
mov
or
mov
mov
push
mov
jmp
in
ror
sbb
out
push
fistpll
add
fchs
jmp
test
insb
andb
push
loopne
or
mov
push
mov
test
int
cmc
and
lret
lcall
fldcw
fs
mov
repz
xor
xorl
adc
dec
test
out
mov
mov
adc
mov
push
imul
jg
jle
add
cmpw
sbb
cmpb
mov
rclb
add
mov
add
ss
push
pop
mov
add
shll
je
push
je
cmpb
xchg
mov
js
jbe
adc
pop
jns
inc
fs
andl
rcl
int
add
pushf
enter
inc
insb
mov
jne
add
cmovl
sub
and
add
jmp
mov
sub
dec
movzwl
cmpl
push
adc
rorl
and
movsb
mov
stos
pusha
mov
cmp
aas
cwtl
add
sbb
lret
jmp
sbb
add
xchg
and
fcmovu
xchg
xor
adc
mov
jae
shll
jp
mov
bound
ss
cmp
mov
cmp
push
jp
mov
ss
inc
xchg
adc
mov
lcall
xor
mov
cmp
jne
or
add
push
cmc
ret
shl
cld
lods
add
cltd
dec
pop
and
repnz
xchg
dec
xor
pusha
pop
xor
add
in
xor
push
jle
and
leave
mov
or
js
and
in
lret
push
and
movsb
pop
push
dec
leave
addl
xor
pop
js
xor
inc
pop
push
xor
rclb
jo
adc
sub
ja
or
push
andb
insl
xchg
mov
sbb
stos
xchg
xor
and
adc
lcall
nop
inc
inc
pop
lock
andb
outsb
adc
ss
rol
ds
sub
push
test
mov
aad
mov
push
or
and
pop
inc
iret
mov
or
pop
cmpsb
xchg
pmulhuw
in
add
mov
pop
imul
sub
sbb
inc
bound
mov
xchg
mov
sub
test
ret
es
and
mov
sub
lahf
mov
sti
rclb
stc
gs
data16
dec
and
push
sbb
dec
call
test
push
jns
jne
add
pop
add
pop
inc
add
add
fisubrl
adc
sbb
daa
orb
jns
testl
je
or
jl
fs
mov
arpl
test
hlt
pop
call
mov
in
fdiv
movsl
jo
cmc
loope
push
and
lret
mov
sub
int
jl
and
bsf
hlt
pop
inc
lea
push
xor
add
mov
and
mov
jo
sub
dec
pop
jne
test
mov
nop
push
sub
mov
insb
adc
loopne
outsb
divb
and
test
inc
hlt
int
push
aaa
add
mov
pop
inc
dec
mov
sub
jnp
dec
test
push
frstor
pop
or
decl
jns
shll
push
std
cmc
aaa
mov
sbb
fcomps
sub
imul
sahf
add
icebp
dec
lods
sub
les
cmc
mov
mov
stc
xor
nop
iret
aad
adc
and
cli
pop
test
xchg
dec
jne
xor
test
adc
lahf
in
imul
push
cltd
popf
jecxz
aam
jae
pop
inc
sub
jmp
push
or
lret
and
add
enter
mov
inc
bound
shlb
sub
xchg
adc
xor
push
inc
ja
xchg
and
xor
jmp
push
jb
and
push
das
pop
push
xor
testl
pop
inc
push
xchg
cmp
loope
dec
or
test
ljmp
pop
in
push
ljmp
dec
xor
mov
inc
mov
fisubs
push
js
mov
test
popf
jp
dec
xchg
xor
test
mov
cwtl
xchg
xor
call
add
add
mov
mov
sub
enter
add
dec
repnz
adc
xor
daa
lods
inc
mov
cmp
sbb
xchg
lcall
mov
dec
push
add
sub
push
mov
clc
loope
pop
push
or
popa
enter
sbb
dec
inc
movsb
fisttpl
sub
outsl
rcrb
push
add
mov
mov
inc
add
in
inc
dec
inc
and
sahf
jne
jae
aaa
repz
cld
jne
push
call
sbb
xor
sub
or
mov
mov
and
mov
rcll
loop
fisttpll
xchg
push
test
pop
dec
push
lcall
push
lcall
or
push
sbbb
outsl
cmp
jae
call
adc
lock
and
or
adc
sbb
adc
jmp
or
xchg
xchg
mov
rorb
inc
pop
cmp
and
or
pop
or
faddp
xchg
sbb
adc
mov
rolb
push
clc
std
cmpsl
mov
repnz
call
cwtl
movsl
inc
mov
sub
movsb
out
adc
loopne
jge
xchg
inc
outsl
dec
adc
or
dec
shr
inc
enter
xchg
scas
mov
push
movsl
cmp
and
cmpsl
movsl
rolb
cmpb
pop
arpl
lahf
xchg
or
fadds
sbb
or
es
stos
int3
orl
push
sbb
jnp
cmp
or
jle
call
push
jmp
add
js
or
inc
imul
js
test
inc
sub
ja
push
xchg
or
jl
and
cmp
inc
or
or
and
daa
cmp
repnz
clc
push
xor
sbb
pop
cmp
sub
mov
dec
jae
cmpsb
cld
hlt
xor
loop
and
xor
mov
adc
adc
pop
xchg
mov
xor
les
push
filds
lcall
lods
test
inc
lret
mov
popf
mov
or
or
inc
and
lods
and
pop
or
adc
lods
mov
lods
cmp
jmp
push
jg
lods
cmp
inc
cmp
xorl
lret
mov
pop
and
mov
add
adc
in
sbb
inc
ds
push
sub
cld
sub
decl
jmp
xor
testl
outsb
in
decl
nop
xor
and
jmp
cmp
jne
xor
or
call
sbb
jmp
ss
cmpsl
pusha
jp
rcrb
sbb
sub
cmp
je
lcall
call
seto
neg
or
add
mov
push
loope
repz
mov
mov
loop
xchg
aas
jbe
add
inc
js
lock
shl
push
sbb
lods
shll
stc
or
clc
push
rorb
sub
sti
jne
push
xchg
addl
das
add
push
xor
je
into
jne
push
push
adc
jmp
xchg
pop
cmpsb
fisubrl
btr
ret
mov
cmp
adc
ja
in
lcall
data16
push
pop
or
xor
es
outsl
loop
mov
lret
je
mov
imull
and
and
lods
mov
pushf
es
sbb
push
push
int3
and
inc
ljmp
dec
mov
or
jp
dec
mov
les
xor
jne
dec
ja
es
ss
add
xchg
and
out
lods
dec
and
roll
rorb
jecxz
hlt
dec
mov
push
sub
ret
mov
xor
sub
dec
jns
mov
mov
ds
mov
dec
into
pushf
inc
lods
pop
test
ror
add
pop
decl
and
es
test
incl
pusha
rorb
dec
or
mov
orl
push
insl
or
aas
sbbb
pushf
subl
mov
cli
repnz
sbb
lods
out
mov
lea
and
add
cli
mov
dec
cwtl
sbb
adc
into
repnz
push
les
mov
add
insb
andl
adc
add
sbbb
add
or
flds
fcomp
adc
and
adc
hlt
fisttpl
push
sbb
jae
xchg
and
jno
pop
mov
inc
pop
daa
aam
ret
or
mov
dec
loop
add
dec
notb
jo
clc
or
adc
clc
xchg
mov
ret
roll
popa
xor
sbb
sub
xchg
push
sbb
push
insl
lahf
push
xchg
add
stos
inc
test
or
in
sub
push
inc
xor
push
aad
push
add
adc
lds
and
mov
sbb
mov
cmp
mov
sub
sub
sub
outsb
test
mov
xchg
addl
inc
xor
sub
mov
adc
testl
or
pop
inc
lock
sbbl
or
or
xor
or
mov
popa
mov
push
mov
scas
pusha
and
pushf
sarl
add
mov
and
mov
cld
pushf
lds
add
out
das
in
lret
mov
push
or
xor
or
sbb
fisttpll
adc
add
and
adc
insl
mov
orl
add
xor
adc
mov
cmpsl
add
sbb
ja
arpl
push
rorl
test
add
loop
scas
xor
clc
inc
mov
and
and
scas
cmp
inc
cmc
or
xchg
xor
add
sahf
inc
push
inc
negb
push
adc
dec
cwtl
push
pop
add
jg
dec
add
push
or
cmp
dec
adc
xor
mov
jb
insl
pusha
adc
push
fildl
popa
mov
popa
addr16
pop
adc
mov
je
addr16
lds
mov
ds
outsb
and
sbb
lret
inc
mov
cmp
jecxz
adc
stos
test
xlat
sbb
mov
adc
xor
xchg
sub
movsb
sbb
sarb
aaa
sub
jecxz
or
adc
pop
mov
push
aad
inc
jmp
mov
cmp
leave
sarb
repz
dec
jmp
mov
test
sbb
lahf
les
adc
xchg
and
pop
sti
sub
andl
sbb
sbb
lret
and
fdivs
pop
fwait
mov
add
adcb
adc
lock
insb
lret
and
fimuls
and
push
push
dec
pop
xor
push
and
sbb
xchg
movsb
inc
sub
push
es
pop
cmp
mov
aad
sbb
add
xchg
fists
mov
icebp
mov
dec
pop
sub
mov
in
repz
or
andb
push
mov
sub
fst
cltd
sub
inc
pop
xlat
mov
fldl
add
addr16
dec
loopne
shrb
rol
mov
aas
adc
loope
pop
jge
scas
je
sbb
adcb
push
hlt
clc
add
jb
test
xchg
xor
or
push
les
sar
pop
ss
jl
outsl
add
mov
push
dec
lret
xchg
cmpb
and
ret
xchg
mov
add
sub
jecxz
or
xchg
ficoms
add
es
std
mov
mov
enter
das
sbb
daa
push
sbb
nop
dec
push
and
les
and
cld
add
add
mov
or
mov
sahf
mov
bound
adc
jae
cmpsl
adc
aam
xor
ret
mov
or
mov
cld
pusha
cmp
add
push
scas
adc
dec
dec
mov
sub
inc
mov
sbb
or
or
xor
andb
dec
cld
adc
hlt
adc
mov
mov
pop
adc
nop
lcall
addr16
add
push
pop
das
out
and
xchg
outsl
aaa
inc
adc
push
sbb
mov
pop
test
pop
dec
push
inc
jp
fcmovu
cmp
fsts
and
test
leave
inc
push
push
or
mov
inc
jno
cmp
or
fs
jecxz
lcall
lock
lods
add
popa
call
add
cmp
fstpl
or
data16
shr
push
pop
inc
loope
jo
adc
adc
rol
decl
sbb
roll
lock
mov
movsb
cmpsl
push
sbb
mov
pop
inc
sbb
test
sbb
sub
shlb
sub
shrb
push
cmp
mov
subb
xor
daa
jne
fisubl
adc
daa
movhps
or
mov
loopne
cmp
add
cmp
divb
ja
es
loop
cmpsl
add
dec
mov
xor
nop
bound
imul
and
add
mov
push
push
mov
sub
sbb
push
movsl
imul
and
fnsave
out
enter
push
xor
jmp
adc
cmp
popf
or
and
loopne
enter
mov
add
cmpsb
mov
and
into
pop
jle
cmp
add
mov
clc
push
icebp
inc
pop
and
daa
sbb
jl
or
insl
mov
repnz
adc
push
adc
andl
push
outsb
inc
clc
mov
mov
push
mov
scas
push
pop
adc
xchg
pop
pop
mov
adc
and
ret
and
push
inc
ss
pop
xlat
rol
xchg
pushf
pop
add
adc
scas
add
sbb
sbb
adc
loopne
popa
les
scas
jae
pop
pop
push
pop
nop
dec
cmpb
ret
mov
mov
jae
inc
ds
stos
mov
adc
sub
pop
popa
sbb
xor
sbb
subb
adc
push
out
pop
jb
in
add
sbb
push
add
push
mov
push
adc
fcompl
xchg
andl
jb
orl
movsb
add
adc
fimuls
xchg
scas
adc
add
push
push
mov
es
outsb
xlat
jge
mov
or
xor
bound
inc
icebp
sub
pusha
xchg
sbb
push
mov
sbb
adc
fimull
dec
ds
fsts
dec
jno
gs
sbb
hlt
dec
add
pop
push
pop
rolb
inc
scas
inc
outsl
es
ds
push
cmp
sbb
aaa
mov
sbb
push
xchg
add
mov
sub
ljmp
xor
mov
aaa
jbe
or
es
mov
jns
dec
inc
jle
loope
jge
mov
test
dec
sbb
sahf
xchg
int
push
pop
cwtl
dec
cmp
inc
push
jl
add
ja
xadd
loopne
rorl
test
xor
insl
sbb
in
cmp
push
loope
mov
sbb
pop
lock
movsb
push
or
addb
and
pop
add
mov
adc
pop
push
cmp
lea
or
sbb
test
je
test
push
or
cmp
mov
shr
pop
mov
add
clc
pop
sub
and
rcll
mov
sbbb
jge
fistpll
cli
add
mov
hlt
outsb
sub
adc
out
add
dec
cmp
mov
into
fstpl
repz
push
lds
jae
xchg
push
insl
mov
or
imul
scas
hlt
lods
nop
sarb
push
and
push
dec
mov
jne
xchg
rcrl
jmp
sahf
push
mov
and
sbb
nop
out
adc
call
inc
adc
xor
dec
call
or
leave
push
and
sti
add
ret
xchg
add
xor
movl
cltd
ljmp
pop
js
mov
dec
xor
inc
pop
pusha
stos
add
adc
sbb
pop
aam
stos
cmp
add
xor
push
sbb
cmp
xchg
mov
test
sub
pop
or
popa
xchg
or
cltd
das
ljmp
jne
lock
push
mov
add
push
adc
mov
idivl
push
adc
dec
push
adc
insl
and
xlat
cmp
in
add
clc
adc
and
dec
dec
or
adc
dec
inc
adc
jb
xor
or
sbb
sub
sbb
pusha
sbb
sub
mov
inc
sbb
lea
movsl
mov
rcrb
push
mov
push
lcall
pshufw
adc
fnsave
pop
and
out
cs
sub
mov
js
pop
pop
sbb
mov
xorb
or
push
pop
adc
data16
out
and
push
mov
cmp
lock
mov
out
or
or
sub
test
pop
into
push
and
add
lods
and
xor
pushf
xchg
cmc
pop
adc
adc
jl
addr16
xchg
inc
bsr
or
or
inc
push
mov
stc
jne
das
fsubrs
sub
xchg
aas
push
add
inc
sbb
xor
or
push
jg
push
and
sub
fadds
and
pop
pop
pop
adc
or
mov
hlt
sub
nop
jne
mov
int
scas
add
sub
cmp
je
push
sbb
cmc
push
daa
popa
adc
ret
xorb
bound
inc
add
sti
fsubrs
mov
add
insl
push
aam
or
xchg
or
pop
mov
push
sbb
add
push
pop
push
push
jb
and
or
adc
and
push
pushf
and
lret
fstps
jecxz
rol
xor
fildll
mov
mov
jns
addr16
push
les
mov
push
xchg
mov
mov
cmpsl
mov
mov
sbb
mov
je
push
or
sbb
inc
jge
or
adcb
and
pop
xor
jo
lods
cmc
inc
call
push
mov
add
mov
call
mov
call
nop
mov
leave
xor
add
mov
cmp
test
sub
mov
jg
push
in
pop
xor
iret
push
sub
lea
push
push
js
stc
mov
dec
inc
inc
inc
and
inc
adc
push
loopne
push
and
popa
add
hlt
jb
push
sub
adc
jno
push
jae
mov
dec
pop
test
das
ret
sub
flds
sbb
cmpsb
popa
loopne
fcoml
dec
aam
adc
inc
push
lock
or
mov
adc
push
fisubs
or
arpl
mov
rorl
pop
and
sub
jne
pop
fstpl
xor
ljmp
push
imul
loopne
push
ficompl
rolb
fbld
pop
or
xchg
mov
mov
lds
js
xor
add
cmpsb
sub
mov
das
bound
imul
inc
icebp
call
aas
xchg
cwtl
adc
pop
add
push
jns
repnz
in
adc
mov
loope
xlat
inc
enter
loope
or
mov
test
clc
lock
pop
subl
leave
pop
lahf
and
shrl
push
adc
cmp
jb
and
sbbl
test
scas
movsl
and
lret
movl
adc
sbbb
aas
int3
cwtl
mov
cmc
adc
out
and
aaa
lods
mov
add
and
cmp
and
sub
fidivl
push
or
inc
pop
adc
imul
in
cmp
iret
sbbl
mov
imulb
mov
push
inc
dec
je
movsl
push
loop
xchg
push
cltd
lcall
sub
sbbb
outsl
sub
cld
push
mov
mov
stos
add
loop
mov
lea
lea
fisttpll
sub
mov
pop
nop
adc
inc
loopne
lea
fsubs
pushf
mov
mov
stos
imul
adc
push
mov
inc
test
into
mov
es
mov
scas
and
mov
cmpl
push
jmp
test
fld
sbbb
cmp
jl
lahf
jg
mov
cmp
jle
cmp
jp
push
cmp
cmp
jg
mov
inc
add
add
inc
jmp
test
daa
inc
push
movw
fwait
pop
inc
xchg
and
pop
addr16
push
pop
iret
clc
iret
mov
cltd
pop
idiv
lock
dec
int3
sbb
xbegin
test
inc
mov
pop
pusha
and
jnp
testb
sbb
faddl
cmp
add
sbb
push
hlt
fists
mov
mov
dec
mov
ret
mov
mov
dec
and
xor
sub
jae
insl
lods
cmpsl
test
and
movsl
or
adc
and
adc
or
mov
and
cmp
add
daa
int
test
sbb
lock
aaa
in
repnz
push
or
nop
mov
nop
sub
rol
inc
adc
nop
stos
mov
iret
cmp
and
xchg
xlat
jno
pop
pop
popf
adc
mov
inc
or
fcompl
pop
jmp
and
repz
mov
aam
xor
xor
movsb
or
and
sub
add
jle
rcll
enter
nop
pop
insl
or
addb
inc
adc
xorb
je
pop
jl
outsl
lock
and
adc
mov
add
push
data16
movsb
lods
fcomps
push
sub
inc
enter
mov
mov
or
cmp
sbb
call
sub
or
pop
lcall
pop
nop
or
mov
xor
enter
insl
add
adc
cmp
push
push
add
and
inc
loopne
pop
cmp
inc
sub
xchg
mov
or
and
sbb
sbb
mov
test
mov
pusha
cmpsl
sbb
inc
xchg
inc
fwait
in
shl
aas
inc
inc
and
add
xchg
or
pop
push
adc
mov
or
outsb
and
cmp
leave
adc
push
lock
pop
adcl
ljmp
movsb
cmc
adc
adc
adc
sbb
push
fsubrl
jo
push
test
adc
or
mov
cmp
add
inc
add
popf
adc
sbb
add
xor
adc
leave
dec
cs
adc
adc
orb
sbb
int3
pop
add
hlt
xchg
jmp
push
inc
add
or
nop
xchg
sbb
push
lock
mov
inc
cwtl
sub
addl
inc
in
push
and
inc
jecxz
xor
xchg
lret
gs
lret
and
push
loope
and
mov
popl
pop
xor
mov
ret
cs
jo
and
cwtl
sbb
les
mov
sti
push
sbb
addl
dec
add
pushf
icebp
or
and
ret
add
aaa
in
pop
aaa
jl
and
lea
add
pop
mov
xor
push
leave
jmp
xor
and
test
pop
loop
aas
nop
mov
pop
xor
add
cmpsl
in
movsl
pop
add
fldcw
lds
add
sbb
adc
pop
dec
aaa
adc
mov
ljmp
enter
fiadds
or
inc
adc
adc
icebp
nop
mov
xchg
lods
clc
into
bound
ret
mov
adc
mov
out
mov
lret
insl
cmpb
sub
xor
mov
into
or
ret
pop
cmpsb
sbb
ljmp
and
enter
add
rolb
cltd
or
std
inc
fs
mov
addr16
in
add
aam
add
push
stos
imul
push
mov
imul
rolb
pop
sbb
gs
addr16
jl
notb
stos
cmp
jne
outsb
pop
jbe
stc
lea
rol
popa
subb
pushf
xchg
mov
sbb
or
push
lods
push
add
xlat
jo
loopne
hlt
pop
fildl
fildl
add
push
mov
rorb
xchg
jae
mov
dec
sbb
repnz
add
jb
pop
add
push
add
mov
dec
or
dec
push
shrl
jg
mov
pop
xchg
adc
mov
sub
lods
popa
pushl
push
imul
lods
add
aad
shrb
fimull
xchg
add
mov
mov
hlt
jno
inc
add
rorb
fildl
loopne
inc
or
jo
ret
dec
sar
cmp
je
cmp
jle
push
pop
fbstp
aam
shl
add
sbb
adc
adc
pushl
dec
loop
jnp
cmp
fwait
jle
adc
dec
cmp
pop
sub
jne
fcomps
push
insl
push
mov
mov
xor
fcmovbe
aaa
je
mov
out
add
pop
push
mov
popa
negl
adc
sub
mov
outsb
add
sub
xchg
incl
je
jo
fcompl
fnstsw
test
lock
out
inc
je
sbb
lock
fimull
add
dec
pop
jp
sbb
inc
mov
sbb
and
or
into
fstpl
add
addr16
fistpll
jl
js
pop
or
clc
out
fstpt
xchg
add
int3
and
loope
fsubrp
jb
imul
or
lcall
lock
sarb
pusha
test
imulb
fs
scas
mov
inc
mov
inc
sbb
repz
xchg
vpmacswd
add
jo
cmpsl
rcrl
movsb
popf
je
mov
inc
jo
jns
stc
jge
imul
insl
insl
bound
pop
dec
inc
xchg
or
xchg
js
pop
add
aad
dec
fs
stc
bt
sub
jle
movl
shrl
ret
ja
jo
shl
push
mov
mov
and
popl
divl
ret
adc
sbb
andl
popf
inc
pop
clc
jmp
and
mov
mov
mov
lods
or
add
mov
inc
jae
xor
clc
fwait
add
mov
jo
lock
jb
stos
xor
shld
add
jecxz
sbb
lea
push
push
sub
icebp
cmp
mov
push
push
je
jmp
rorl
clc
or
andps
adc
mov
push
adc
push
push
sbb
mov
popf
cmp
or
or
cli
test
pop
sbb
push
inc
inc
mov
insb
add
pop
pop
ret
jne
enter
insl
sub
mov
push
rcrb
sub
dec
jl
and
shlb
mov
and
testb
push
and
rcrl
adc
push
jl
inc
push
xor
xor
addb
pop
sarb
dec
inc
cmpw
jne
cmc
out
insl
test
and
cmp
mov
mov
push
jge
mov
inc
sbb
lea
cmp
or
pop
add
cmp
out
data16
movsb
imul
jo
fabs
out
jmp
push
sets
dec
inc
aad
adc
push
mov
ret
movsb
lahf
rcrb
insl
in
in
push
cwtl
inc
sbb
aas
inc
es
arpl
inc
push
ds
inc
sbb
pop
mov
adc
add
jne
ret
push
jle
add
push
cmp
addb
or
mov
iret
jnp
jne
cli
hlt
inc
lods
dec
add
dec
pusha
cltd
xchg
add
lea
cmpsl
push
pop
or
movsl
mov
inc
add
jae
dec
or
ret
repz
data16
loopne
mov
ret
pop
sub
scas
mov
rcrl
jb
pop
outsb
inc
stos
push
leave
adc
rcll
jo
jae
shrb
imul
jae
movsb
std
mov
fadds
lock
xchg
xor
sub
cltd
cltd
mov
add
push
test
add
mov
insl
and
pop
sbb
adc
mov
into
aam
gs
rclb
sub
lret
xchg
xor
adc
lock
xchg
gs
or
xchg
lret
insb
adc
hlt
push
dec
leave
lds
in
adc
adc
sbbb
nop
add
pop
je
in
push
addr16
xor
stc
push
pop
ret
pop
lods
and
enter
sbbb
shlb
ds
push
push
pusha
and
or
fst
stos
test
xchg
popa
jo
cli
jno,pt
xor
xor
add
aaa
pop
pop
pop
int
push
test
sub
rol
xchg
add
repz
lret
jno
cli
sti
pop
das
or
mov
ret
push
or
push
adc
inc
insb
testl
fsubrs
ljmp
push
xchg
les
fcmovb
xchg
cmpsb
add
movl
or
adc
mov
lcall
into
mov
inc
push
or
outsb
push
push
sbb
lock
call
popf
push
mov
les
sbb
adc
mov
dec
xchg
aaa
adc
or
inc
pop
add
jne
je
add
mov
and
andl
ja
test
ja
cmpsb
mov
cmp
xchg
dec
xchg
dec
ja
and
inc
insb
jno
jge
xlat
jne
push
add
xor
and
xor
or
adc
jg
je
or
cmpsb
std
fisttpl
ss
je
add
sbb
dec
ja
dec
ljmp
jmp
or
xchg
or
xchg
jmp
or
fadds
insl
push
decb
mov
out
mov
out
sub
jge
or
jmp
or
jmp
ja
ja
add
scas
jge
jmp
or
cwtl
jmp
pop
push
add
out
add
divl
movsl
mov
jns
hlt
push
sbb
inc
push
cmp
dec
or
push
cmp
nop
push
je
mov
loopne
or
enter
cwtl
int3
out
mov
fcoml
push
jbe
out
nop
pop
mov
cld
dec
and
nop
inc
push
cmp
inc
push
cmp
fdiv
xchg
enter
fs
jb
and
and
in
inc
push
push
jo
nop
inc
push
cmp
sbb
push
or
lahf
push
push
test
xchg
adcb
push
and
sbb
repz
cmp
push
movsb
scas
mov
repz
loopne
hlt
jns
out
push
or
sbb
push
out
sahf
out
outsb
js
sahf
out
sahf
mov
jns
out
enter
lock
out
push
add
sbb
leave
repz
sub
inc
dec
pop
xchg
cs
push
scas
push
jg
nop
jp
insb
stos
jo
or
push
inc
fnstsw
push
add
mov
inc
imul
jle
test
fcompl
dec
sub
adc
sbb
sub
or
shll
xchg
enter
ja
lock
or
test
push
lahf
pusha
sar
mov
jmp
jl
mov
lcall
mov
inc
mov
push
enter
xchg
daa
add
out
fcompl
psraw
jmp
pminsw
faddl
push
mov
jmp
lods
pop
fsubl
dec
push
into
mov
jecxz
shll
jae
sbb
mov
mov
pushl
gs
adc
and
mov
pop
and
rolb
or
add
popf
xchg
pusha
in
pop
stc
mov
xchg
dec
mov
divl
cmpb
jge
loope
jb
push
cmp
fwait
rclb
shl
mov
inc
shlb
add
xchg
out
xchg
cli
inc
flds
jo
push
cmpsl
add
lods
jl
adc
or
mov
shlb
xchg
ljmp
rcr
pop
jp
fwait
sbb
gs
or
mov
and
or
mov
mov
pop
dec
fmul
movsb
jne
leave
test
sub
adc
xor
or
mov
and
sbb
sub
std
jp
stos
push
ds
inc
fmull
xor
inc
mov
adc
push
add
jecxz
in
add
test
pop
sub
outsl
nop
mov
pop
cmp
hlt
mov
xor
and
mov
daa
or
xorl
imul
rcll
jge
xchg
loopne
movhps
add
xlat
xchg
enter
push
stc
sbb
adc
mov
add
out
mov
out
sbb
call
cmp
pop
nop
mov
test
movsb
aaa
fstpt
jle
push
dec
mov
pop
rcrl
lds
push
dec
add
mov
push
mov
sub
das
xor
sarb
in
icebp
push
in
mov
push
mov
xor
stos
mov
mov
xor
in
ss
shll
stos
mov
pop
mov
ss
jnp
das
jle
negb
push
pop
dec
or
adc
sub
xor
sub
enter
and
xor
cmp
cwtl
imul
icebp
xor
and
and
mov
fcompl
movsb
mov
movsb
mov
sub
mov
sub
sub
imul
int3
in
xor
adc
ja
ss
mov
popf
mov
gs
jl
sbb
stos
mov
test
jno
aad
xchg
aaa
lret
xchg
ja
or
mov
xlat
in
psubsb
add
pop
sbb
cmp
push
fisttpll
xchg
xchg
pop
push
mov
mov
mov
js
cs
ret
in
nop
jns
xchg
add
test
jae
add
mov
mov
mov
sbb
imul
gs
add
int3
and
pop
add
inc
xor
sbb
or
mov
mov
imul
rorb
pop
and
and
sbb
mov
popf
pushf
pop
push
or
es
xchg
adc
or
or
inc
jmp
add
add
mov
fists
push
mov
cmp
mov
jns
cmp
inc
jo
or
inc
movsl
out
pop
cwtl
xchg
inc
out
sbb
mov
cld
test
cmp
rorl
dec
roll
aad
int3
xchg
adc
and
cmp
lock
and
jp
ds
pop
movsb
pop
xlat
push
aaa
aas
pop
test
mov
and
dec
push
out
aas
jbe
and
adc
cmp
adc
aaa
fucom
lret
jo
mov
nop
mov
es
push
adc
daa
cmp
das
add
inc
lcall
mov
cmp
mov
popa
sub
add
addr16
pop
lea
jecxz
adc
jnp
jno
and
mov
inc
shlb
pop
mov
or
and
popa
dec
adc
inc
adc
mov
sub
adc
sbb
sub
ljmp
daa
stos
mov
bound
icebp
cmpsl
mov
popf
pop
dec
shlb
rcl
int
dec
dec
add
mov
and
push
push
xor
jns
xchg
xor
pusha
into
adc
jle
push
mov
cmp
push
xchg
or
enterw
fidivrs
mov
push
pushf
add
dec
pop
add
xchg
adc
xor
inc
cmp
pushf
addl
and
les
or
shlb
jecxz
push
arpl
adc
lcall
xchg
fnstenv
sahf
push
insl
mov
enter
add
sbb
pop
cmp
xchg
daa
ror
ret
je
sbb
sub
js
scas
xchg
rorb
or
orb
xlat
mov
pop
mov
in
push
cwtl
iret
and
and
inc
mov
push
add
push
adc
inc
cmp
aad
jl
add
popa
mov
inc
es
rclb
sarb
movsl
jns
fisubl
enter
adc
dec
mov
mov
add
xchg
cwtl
pop
shlb
push
push
je
test
stos
aam
sbb
movsb
imul
sbb
jl
dec
movsl
cltd
sbb
and
ret
push
pop
pop
popf
ret
mov
lock
sub
dec
and
jno
test
test
imul
je
or
movsb
ss
xor
inc
testl
inc
sbb
inc
dec
cli
xchg
mov
daa
jmp
rorb
sbb
test
xchg
mov
orl
movb
mov
cmp
lcall
or
nop
inc
pop
pusha
push
cld
and
mov
xchg
in
in
sbb
leave
and
cmp
dec
pushl
sarb
or
xor
xor
aam
mov
push
jmp
addl
jno
es
inc
leave
mov
fdivs
push
push
aam
inc
movsl
xchg
add
addb
adc
pusha
aad
scas
cltd
add
adc
dec
sbb
faddl
loopne
clc
add
mov
push
and
dec
data16
pop
add
call
jns
aaa
push
mov
rcrb
xchg
loopne
insl
test
push
add
or
stos
or
inc
add
push
movsb
or
incl
mov
je
push
das
outsl
mov
inc
clc
gs
inc
fisttps
cmp
add
je
leave
call
jae
ret
adc
addl
jb
ret
leave
in
ret
adc
adc
jbe
movsl
sarb
ret
pop
cmp
inc
stos
pushl
mov
cmc
cmpl
fists
jne
nop
pop
icebp
xor
nop
lods
mov
mov
repnz
js
arpl
rclb
cmp
mov
imul
shlb
push
insb
xchg
push
dec
scas
push
push
inc
test
push
mov
and
inc
int3
cmp
call
pop
push
xchg
and
shlb
in
mov
add
adc
push
mov
mov
cs
or
mov
xor
lods
push
sub
xchg
push
sub
arpl
push
dec
mov
lcall
sahf
add
test
add
rol
mov
ret
ja
popa
xchg
scas
push
cmp
sub
push
rcrb
push
cld
and
dec
add
sbb
daa
mov
jbe
add
jb
mov
and
and
jno
adc
andl
enter
xchg
push
sbbl
sbbl
sbbl
mov
adcb
xchg
adc
adc
sub
add
push
loopne,pn
mov
add
in
scas
jmp
fcoml
push
sbb
or
mov
scas
push
push
sub
sbb
leave
aam
lar
into
cs
and
xor
insl
movsb
jmp
nop
out
flds
jns
lea
mov
ret
add
sub
mov
clc
cmp
mov
lea
popf
push
and
or
cld
arpl
pop
push
cmp
inc
push
jo
lock
dec
cmp
inc
or
test
lds
or
test
jo
dec
push
xor
movsb
and
lea
test
mov
sbb
sub
in
pop
testb
and
jmp
and
adc
sub
test
aam
push
mov
into
or
mov
sti
pop
jl
aad
mov
xor
xor
pop
push
leave
jl
add
test
js
cmp
and
sbb
cmp
cmp
and
or
push
push
clc
xchg
add
pop
sbb
lret
mov
jb
mov
insl
test
lahf
lcall
push
orl
test
and
aaa
movsl
pop
cld
xor
adc
aam
jecxz
xchg
jp
cmp
ficoml
cmp
jbe
mov
testl
mov
jb
xchg
inc
add
add
add
mov
inc
push
push
hlt
subl
or
or
iret
jne
pop
div
and
fiadds
repz
jae
stos
add
cmpsb
inc
add
nop
cmp
cli
or
pop
push
ljmp
dec
sarl
mov
movsb
scas
sarl
and
push
xor
xorl
movsl
mov
cmp
in
adc
ds
adc
jae
jg
sbb
dec
add
xchg
xchg
or
pand
xorb
cwtl
xlat
aad
dec
or
dec
lea
mov
andb
sti
jb
adc
pop
cmpsb
xchg
pop
pop
push
into
nop
jp
test
imul
mov
movsb
in
js
in
subl
push
ret
sbb
xor
fimull
pop
jmp
push
outsl
inc
mov
inc
addr16
xchg
pop
dec
jno
sbbb
in
loop
jns
jns
popa
xchg
fcmovnb
es
orl
je
pop
add
dec
ds
or
adc
imul
xchg
mov
push
sbbb
stc
and
jg
ud0
aaa
aaa
cmp
add
and
mov
movb
movsbl
shr
ljmp
loope
mov
add
pop
dec
add
sbb
aam
jne
pop
lret
push
outsb
movsl
nop
mov
les
outsl
js,pn
pop
or
sbb
add
or
pop
dec
mov
adc
rcrb
dec
sbb
fs
notl
aam
mov
lock
imul
scas
adc
leave
mov
test
test
add
fisubrl
or
sti
pop
pusha
in
dec
out
pop
adc
xchg
arpl
and
lcall
and
je
dec
and
add
cmc
mov
push
push
mov
xchg
cmc
pop
add
xor
jmp
inc
inc
xlat
xchg
shll
mov
sbb
lods
dec
pop
adc
js
jge
dec
mov
or
test
or
enter
je
rclb
xchg
insb
inc
mov
push
in
pushf
jae
jae
and
or
jns
fadd
test
scas
mov
push
in
push
xchg
pop
push
or
lea
fyl2x
add
pop
adc
lock
movsl
dec
pushf
nop
add
push
lea
ret
pop
mov
add
mov
mov
popf
mov
sbb
fadds
mov
sbb
push
subl
hlt
es
or
scas
sahf
inc
pop
sub
clc
aam
dec
rorb
jae
pusha
pop
xchg
lods
ja
jp
push
out
fsubs
repz
loop
push
sbb
iret
or
add
pop
loopne
xor
fisttpll
inc
test
sbb
or
pop
adc
add
in
add
or
pop
iret
test
sbb
push
dec
sbb
mov
and
or
push
orb
xchg
fldl
loop
fistl
fistps
add
pushf
or
pop
call
aad
inc
xchg
push
adc
adc
fnstcw
rolb
jo
dec
fsubs
pop
cmp
aam
xchg
adc
and
popa
rorb
sub
popa
dec
ret
mov
push
hlt
push
inc
sbb
mov
imul
pop
and
jne
out
daa
sbb
push
movsl
jnp
aam
or
ljmp
enter
mov
lods
aam
push
pop
enter
int3
xchg
sub
ja
shrb
add
out
add
xchg
jmp
sub
pop
add
sub
gs
nop
sub
push
enter
pusha
gs
cmp
ret
or
cmp
jecxz
ret
pop
sbb
and
jne
shlb
pusha
push
jmp
adcb
add
movsl
adc
test
mov
mov
cmpsl
je
stos
jne
mov
mov
and
dec
pop
cmp
pop
lods
call
push
sub
imul
add
movsb
push
arpl
cmp
je
loope
xchg
mov
les
sub
fstps
adc
shl
sbb
mov
nop
mov
ret
add
push
in
or
sub
xor
jno
jecxz
in
sbb
dec
cmp
xchg
mov
andl
pop
adc
in
sbb
das
xchg
dec
fidivl
shlb
sub
push
xor
jne
je
inc
cli
cmp
pusha
mov
jp
sarb
adc
jp
hlt
add
sub
mov
xor
stos
push
or
hlt
adc
inc
push
fidivl
mov
les
popf
cmp
jnp
add
sbbl
fcmovbe
addl
push
enter
decb
lret
xor
xor
pop
adc
mov
add
sbb
mov
lea
mov
dec
mov
lods
test
lods
inc
jne
in
orb
pop
adc
xor
and
call
mov
xchg
jbe
or
dec
xchg
call
loopne
mov
test
sbb
mov
ret
imul
pop
lods
xor
lods
aas
aad
addb
fs
scas
das
je
jge
lea
inc
jne
push
bound
ret
ret
jns
outsl
das
adc
and
sahf
fsub
mov
cmp
in
cmp
test
jne
es
shrl
cmp
and
jno
xchg
shll
pop
ljmp
inc
xchg
mov
ret
lods
or
cs
dec
xor
add
xlat
jno
cmp
and
xchg
mov
cmp
cmp
push
lea
inc
jle
xor
pop
ret
push
rorb
mov
sub
imul
mov
adc
and
decl
cli
mov
jno
push
cmp
dec
and
loope
mov
out
jle
test
adc
pop
add
stos
fldl
mov
mov
sbb
notb
icebp
and
cmp
mov
pop
mov
mov
inc
add
mov
jl
jle
pop
push
clc
adc
popf
js
addl
push
push
push
loopne
outsb
addb
fldl
clc
mov
inc
sbb
hlt
cmp
adc
jne
sahf
lahf
ja
daa
bnd
adc
hlt
jne
or
loope
jle
jne
or
push
mov
sub
int
cwtl
push
push
pop
js
pop
pop
cmp
cli
adc
or
mov
ds
inc
dec
xchg
lret
cmp
inc
pop
xor
push
jl
mov
lea
repnz
lea
les
jno
sti
lea
ds
sub
je
out
add
aaa
cmp
inc
push
pop
aam
ret
jnp
nop
out
add
clc
sbb
lahf
mov
add
xchg
inc
mov
sbb
or
xlat
or
jmp
cmp
push
shll
out
lret
fldcw
clc
adc
ds
or
pop
out
addr16
jne
fstl
dec
pop
insb
pop
mov
neg
loopne
shl
lea
lods
sbb
jb
adc
mov
add
test
cli
pop
xor
fsubrl
jnp
inc
ret
jne
push
ss
mov
xchg
xor
inc
loopne
nop
sbbl
push
xchg
xor
jno
insl
mov
test
dec
inc
mov
jmp
orl
incl
pusha
sbb
mov
xchg
test
mov
add
jb
fs
push
jns
and
jne
inc
into
xor
xor
mov
dec
ficoml
mov
add
fwait
mov
mov
mov
fisubs
movsl
pop
dec
jne
pop
lret
inc
xor
test
fnstcw
dec
rclb
mov
insl
jmp
insb
jae
adc
loopne
or
fsubr
push
add
or
rorb
int3
or
inc
je
push
into
inc
or
fcoml
sub
pop
inc
sub
inc
cmpsb
cmp
sbb
scas
or
dec
and
and
mov
sbb
fwait
fs
je
pop
push
or
pop
mov
push
mov
sbb
popa
int
fadd
test
loopne
or
insb
xchg
stos
int
push
pushl
push
and
adc
mov
ret
add
rcrl
pop
movsb
loope
stc
mov
sbb
jge
pushf
xorb
in
cmc
imul
orl
xlat
or
jle
or
xorl
and
sbb
lcall
or
push
xchg
icebp
jae
loop
sbb
sbb
xchg
inc
inc
dec
mov
jmp
mov
mov
movsb
push
test
push
pop
dec
push
xchg
sbb
xor
dec
xor
pop
nop
mov
pop
xor
xor
pop
adc
in
or
adc
mov
les
inc
adc
and
cmp
adc
and
jbe
lds
es
sub
in
sub
pop
daa
pop
pop
xor
push
sbb
sbb
dec
es
xor
nop
lahf
inc
inc
xor
sub
cmp
jne
dec
in
inc
mov
and
add
adc
jmp
mov
test
xlat
and
lret
sbb
sbb
xchg
xor
lds
dec
xlat
shlb
cmpsb
aaa
lret
or
add
pop
push
movsb
push
mov
jae
add
push
sub
and
xchg
dec
pop
loopne
pop
arpl
push
cmpsb
push
xlat
pusha
jno
adc
mov
insb
and
movb
xorl
ret
mov
jl
mov
xor
xchg
xchg
adc
nop
xorb
mov
sub
xor
or
xchg
pop
mov
js
adcl
jae
cs
sub
je
push
xchg
inc
fstpl
add
aam
inc
sbb
cmpsb
add
push
faddl
sti
xchg
sbb
orb
xor
lock
sbb
adc
out
adcb
outsb
jbe
test
mov
mov
add
lret
ret
rorb
sub
jbe
jne
loopne
cli
daa
loopne
xor
mov
push
jbe
pushl
push
add
xor
les
and
jmp
call
je
mov
imul
jno
dec
scas
in
call
cwtl
add
nop
sbb
add
rorb
mov
or
and
in
or
popf
mov
xor
jge
push
push
mov
push
sbb
add
lcall
inc
std
xor
push
or
fld
mov
loopne
js
sbb
pop
sbb
add
or
mov
adc
mov
ficoml
adc
test
jl
push
mov
shl
insl
push
pusha
xor
or
cmc
clts
insl
dec
add
sub
xchg
inc
xchg
pusha
xorl
sbb
fadd
loopne
movsb
mov
mov
addr16
push
jmpw
fsts
xchg
xor
aaa
pop
loopne
movsl
je
cs
dec
rclb
ror
push
jne
pop
stos
mov
inc
fsubs
sub
notl
push
sub
test
incl
bound
aas
sub
stos
cld
or
and
sbb
mov
mov
iret
push
je
jnp
loopne
sarb
xor
jmp
sbb
xchg
push
lret
mov
dec
ret
daa
fsubl
and
repz
movsl
push
pop
movsl
lods
ss
mov
sbb
sti
add
pop
rcrb
cli
and
mov
rcr
jo
add
js
cld
xchg
inc
pop
pop
push
mov
or
cmp
mov
sbb
jle
xor
jns
shrb
mov
dec
mov
shlb
popa
adc
rcrb
inc
push
xor
xchg
push
inc
mov
insb
and
lret
cltd
loope
ret
lea
push
in
lds
cli
loop
sbb
call
jmp
push
add
inc
out
je
mov
push
call
adc
fisubrl
sub
out
les
fdivrl
lret
add
popl
add
or
pusha
test
sub
xchg
adc
lods
lahf
repz
cmpb
sbb
pop
and
adc
pop
je
jg
test
pusha
push
sbb
and
or
jo
pop
cmpsb
lcall
dec
pop
push
hlt
sub
or
push
addl
shrl
add
add
cmc
dec
pusha
inc
imul
test
push
aam
or
in
sbb
inc
add
mov
sbb
inc
addl
or
rol
ret
addb
mov
adcl
pop
push
aas
lret
mov
pop
nop
mov
hlt
aas
mov
in
add
cmp
pop
or
adc
jb
mov
and
jl
js
push
and
mov
je
out
movsl
ja
or
test
xor
cmp
je
aas
mov
dec
or
jb
rolb
sbb
test
and
sete
cmpsb
mov
jle
scas
sub
iret
and
ds
push
add
pop
cmp
jne
jae
movsbl
sbb
inc
lcall
sbb
or
dec
call
cmp
jbe
pop
jmp
inc
lcall
enter
ret
incl
mov
add
or
jecxz
or
add
inc
cmp
mov
jge
js
and
lcall
ret
add
into
scas
push
stos
int3
or
clc
xor
outsl
jnp
pop
ss
cmp
jecxz
sbb
push
jg
addr16
jne
enter
adc
or
or
fs
or
pop
pop
sahf
adc
mov
test
sbb
adc
add
lods
dec
mov
in
pop
inc
add
test
jo
shld
ret
data16
push
pop
inc
adc
roll
sub
cwtl
idivb
push
arpl
insl
push
cmp
jl
in
inc
xchg
jle
insb
aas
mov
mov
sub
cli
js
sar
adc
add
dec
jne
and
add
aas
arpl
push
mov
mov
aam
repnz
cmp
int
add
clc
dec
loop
or
cltd
adc
push
xchg
pop
jmp
xor
inc
popl
pop
pop
shlb
lcall
dec
and
stos
in
mov
addr16
enter
cmpsl
loopne
xor
add
add
jp
sub
int
add
mov
xor
jae
pop
xor
add
sub
mov
mov
repnz
xor
js
sub
outsb
dec
insl
gs
or
add
nop
je
add
jns
das
dec
mov
pop
inc
shrb
or
hlt
and
and
out
test
cld
faddp
shrb
push
push
xchg
ret
fwait
out
fcomps
pop
pop
enter
in
add
cmp
and
add
and
in
push
pop
cmp
cmc
and
xchg
pop
add
fs
pop
push
add
sarb
dec
mov
xchg
arpl
sbb
pop
jle
js
idivb
mov
adc
call
cwtl
pop
ss
jns
loopne
inc
cmp
push
xchg
popf
in
mov
cmp
xor
pop
mov
repz
imul
enter
and
pop
xchg
lea
pop
push
in
or
lret
jl
dec
ret
shrl
adc
mov
iret
jbe
dec
push
push
xchg
mov
sub
cmp
xchg
sti
mov
sub
mov
cmpsb
fbstp
add
fimuls
and
ftst
pop
dec
leave
rcl
jbe
cmp
movl
push
cltd
insl
aad
mov
test
popf
aas
sub
test
push
sbbb
call
dec
add
sbb
push
lahf
je
call
shl
mov
test
mov
pop
lcall
pop
das
xchg
xchg
mov
lret
je
dec
dec
add
dec
adc
les
test
sub
repnz
dec
addr16
insl
adc
dec
cs
mov
xchg
imul
jno
and
test
aam
rorb
inc
mov
cmc
jo
jne
bound
or
push
jmp
and
push
sti
push
cs
rclb
xlat
push
cli
lcall
mov
or
mov
adc
add
adc
pushf
mov
cmp
int3
add
loop
loop
mov
sbb
or
sti
lcall
clc
cmp
rcrl
shr
add
mov
je
dec
fdiv
xorb
adc
dec
mov
ret
push
rcrl
and
mov
movsl
add
inc
push
fcmovb
push
sahf
xchg
sahf
and
movsb
or
ja
mov
xchg
dec
or
or
cmp
jle
lds
out
push
jnp
in
hlt
xchg
and
mov
sarb
add
push
cwtl
loopne
andl
push
out
shl
mov
in
push
push
jbe
je
sbb
cmp
push
arpl
daa
movsbl
shl
call
test
mov
add
mov
push
mov
loopne
jg
sub
dec
out
test
sbb
dec
les
fmul
movb
pop
gs
inc
loope
or
rolb
add
sbb
shlb
cmp
add
mov
inc
mov
leave
dec
push
roll
fwait
pop
ss
js
movsb
push
push
call
stc
mov
and
jne
add
call
icebp
pusha
std
lock
sbbl
xorl
test
cmpsb
or
iret
add
call
les
pushf
daa
or
add
add
or
push
sbb
mov
mov
ds
pop
mov
stos
lods
dec
lock
lcall
test
xchg
jle
int
mov
mov
clc
lock
test
pop
mov
loope
xchg
pop
adc
adc
das
stos
and
std
lock
sbb
inc
cmp
and
xchg
pop
push
dec
mov
xor
adc
mov
clc
add
jg
pop
xor
decl
mov
mov
inc
mov
mov
cmp
push
or
dec
clc
addl
int
mov
cmc
sarb
sub
push
icebp
or
orb
out
lcall
add
insl
xor
mov
nop
and
and
add
cld
push
leave
push
xor
mov
clc
cmp
jne
pop
adc
lea
fwait
jb
pop
or
into
sub
daa
pop
adc
push
sbb
mov
insb
pop
in
ds
push
jb
add
fs
or
mov
das
add
add
iret
jbe
add
in
or
xchg
dec
sub
in
push
push
xor
mov
pop
pop
sub
xchg
scas
fstl
insl
and
mov
inc
sahf
mov
and
fcmovb
cmp
push
enter
xchg
std
and
ja
pushf
data16
dec
call
add
xlat
mov
jno
inc
lods
popa
imul
imul
rorl
xor
mov
inc
xor
ds
in
lods
inc
xor
and
adc
push
inc
mov
add
pop
jno
rorl
xchg
sbb
and
je
inc
pusha
clc
sbb
push
adc
inc
mov
clc
jp
je
in
mov
mov
dec
adc
cmpb
add
sbb
dec
add
jp
dec
xor
ja
adc
cwtl
shrb
mov
stc
sub
ss
lea
cmp
jbe
cmp
jbe
mov
sbb
adc
sub
jle
add
repz
in
popa
mov
mov
xor
sbb
jbe
sub
add
lds
xchg
and
dec
xor
pop
jb
stos
test
fistpl
test
add
inc
icebp
cmp
ret
iret
push
adc
aaa
pop
aad
daa
push
fldcw
pop
popa
and
push
call
push
push
push
cmp
mov
jmp
push
mov
or
cli
inc
out
xchg
pop
xchg
into
je
ret
and
enter
push
popf
sbb
fsts
cwtl
test
mov
jae
inc
jmp
jnp
jnp
shr
js
scas
bound
js
cli
mov
sti
lea
insl
cmp
push
xchg
imul
add
cmpsl
dec
ss
mov
adc
jb
cmpsb
mov
adc
sbb
in
mov
into
das
dec
and
ja
int
and
loope
xor
test
fsubr
jmp
lock
sti
add
iret
xor
xchg
movsl
sub
cmp
add
add
push
dec
xchg
pop
adc
pop
add
jbe
xor
adc
in
adc
ror
xchg
rclb
adc
pusha
pop
sbb
add
icebp
lods
add
nop
adc
fisubl
stos
sub
or
mov
xlat
or
mov
jecxz
ficomps
mov
pop
sub
loopne
shrl
test
cmc
into
push
leave
push
int3
iret
subb
scas
mov
or
jle
push
pop
push
pop
xor
popa
or
or
push
mov
fstl
and
faddl
popf
mov
add
and
push
test
adc
cmpsb
cld
mov
loopne
mov
and
test
mov
loope
mov
push
rolb
xchg
clc
stos
jle
add
sub
mov
or
aas
push
aam
pop
and
push
add
cmp
push
stc
dec
adc
ss
pushf
and
add
pop
nop
push
lea
mov
je
inc
das
or
sbb
mov
jge
fsubs
mov
addr16
or
maxps
adc
int3
mov
push
test
and
mov
inc
cld
adc
dec
mov
sbb
fwait
movl
aas
dec
pop
or
xchg
add
jbe
jmp
inc
sbb
dec
lods
ss
add
js
pop
fdivl
add
inc
add
leave
push
insb
testb
in
or
sub
add
cmpsl
mov
out
cmp
adc
fiaddl
xchg
add
in
pop
pop
rcr
adc
loope
adc
popf
ja
cmpb
or
mov
add
jae
test
rclb
dec
lea
pop
pop
aam
nop
lock
sbb
jmp
adc
gs
sbb
je
daa
add
mov
jb
mov
clc
ds
aad
pop
jmp
push
mov
or
adc
and
dec
mov
adc
call
xchg
loopne
add
iret
xor
pop
push
je
lret
rolb
mov
pop
in
sub
jne
jne
ljmp
lea
imul
loopne
les
push
call
jp
mov
cmp
jbe
fbld
sub
cmp
pop
push
sbb
movsb
dec
sub
mov
adc
or
inc
mov
add
or
cmp
jg
lcall
jmp
cmp
jne
mov
push
cmp
adc
add
iret
loopne
pop
mov
fadds
leave
xchg
jmp
mov
cld
jne
cmpsl
fldenv
call
mull
jmp
or
scas
fwait
push
popa
push
push
adc
mov
call
cmp
sbb
jne
and
in
add
pusha
or
xor
pushf
jg
pop
test
sub
test
mov
aaa
add
add
cmp
cmp
jae
sub
or
add
icebp
mov
dec
jbe
inc
push
mov
aas
popa
bound
int
popa
dec
pop
cmpsl
lods
in
mov
loopne
dec
pop
incl
stos
or
nop
dec
or
or
and
pop
jmp
rcrl
test
cmp
dec
xchg
pop
or
pusha
jl
in
sbb
mov
jl
xchg
adc
mov
dec
sub
add
add
add
shlb
dec
sub
daa
repz
xor
xchg
es
xchg
and
pop
cwtl
sub
shrb
mov
pop
fildll
fdivrs
and
push
cmp
or
mov
icebp
into
adc
and
sub
dec
push
and
dec
insb
or
movsb
fcomp
dec
inc
xchg
adcb
pop
ret
test
mov
les
sbb
aas
push
xchg
or
add
add
loope
or
or
mov
pop
aaa
xchg
adc
andb
ret
dec
subl
sbb
cmpsb
dec
xor
rcll
nop
cmpsl
pop
adc
add
xchg
pusha
enter
and
xchg
pop
and
push
jle
or
ret
lods
mov
ret
cmp
or
sub
arpl
or
mov
add
or
test
daa
add
sbbb
stos
adcb
sub
loop
lods
jne
pop
and
sub
dec
aad
inc
pop
inc
push
push
imul
aam
sub
xor
jmp
loopne
adc
jge
jne
or
and
jnp
scas
xchg
pop
adc
cmpsb
push
push
sub
xorl
inc
mov
adc
test
inc
mov
nop
jo
in
mov
add
sbb
or
fcomps
sarl
adc
jb
mov
mov
stos
xchg
aam
fcompl
dec
jnp
jl
lret
bound
aam
dec
sub
ret
ret
test
mov
rcrb
and
in
ret
fisubs
fcom
inc
outsb
popa
xchg
addb
jne
test
outsb
mov
mov
ja
shlb
gs
mov
or
mov
add
mov
or
xchg
or
push
sbbb
lahf
inc
popf
or
or
int3
ret
inc
orl
push
cmp
or
sbb
sarl
adc
stc
pushl
push
or
or
mov
test
lods
sbb
add
fsubrl
and
jmp
jbe
fsubrl
loopne
mov
jmp
pop
add
stos
call
cltd
xor
fiadds
xor
cmp
jl
ss
mov
cwtl
add
faddl
outsb
mov
lea
iret
xchg
dec
adc
dec
nop
lock
mov
push
dec
mov
push
stos
call
push
adc
sub
movsl
sbb
or
adc
shl
inc
push
rcl
sub
push
fbstp
jb
cmp
inc
mov
dec
sahf
jbe
inc
inc
aaa
popa
xor
ret
loop
mov
in
push
mov
add
push
sbb
ficompl
clc
push
je
loopne
mov
push
push
pop
push
inc
adc
or
jecxz
inc
pop
dec
dec
dec
sbb
icebp
add
mov
jmp
aaa
in
xor
mov
dec
filds
or
mov
cmp
addr16
je
cmp
jne
clc
push
cmp
mov
sbb
add
pop
dec
lea
sahf
negl
or
mov
dec
xor
push
daa
in
mov
sub
inc
adc
je
testl
test
sbb
cld
cmp
jbe
jg
loope
push
lea
loope
cmp
je
adcl
inc
jmp
inc
and
pop
cmp
ficomps
inc
mov
pop
jno
add
or
pop
cwtl
inc
jo
clc
mov
cmp
out
jne
je
aam
mov
or
jb
push
loopne
add
inc
jmp
loop
or
int
xor
xchg
sub
mov
loop
cld
inc
xchg
cmp
add
mov
cmp
outsb
hlt
cmpb
bound
pop
cli
push
inc
rcrb
clc
je
xchg
stos
sbb
jb
inc
fnsave
sbb
ja
js
sub
dec
inc
push
mov
es
pushf
movsb
push
nop
out
jmp
push
cmp
push
sarb
xor
mov
mov
outsb
aas
inc
or
loopne
jne
ss
jno
pop
in
push
pushl
cmp
mov
mov
or
je
inc
add
jae
fneni(8087
and
sarb
shl
add
jmp
pushf
aas
insb
sti
and
cmpsb
and
test
data16
adc
fs
jne
xor
and
lock
sub
push
mov
or
push
ss
adc
cmp
xor
sub
fs
pusha
or
sti
insb
push
call
xchg
or
or
js
int3
push
adc
lret
int3
inc
jg
or
jge
fcompl
jle
es
sub
rcr
outsb
fildll
and
pop
or
jl
or
adc
fisttps
adc
jbe
lea
sbb
cmp
jbe
push
hlt
pop
arpl
and
sbbb
je,pn
test
jne
pop
bound
add
std
sub
jb
sahf
ret
clc
add
mov
xor
adc
movb
inc
xor
xchg
call
xchg
push
mov
pop
sarb
add
mov
add
and
push
dec
dec
add
mov
or
loopne
add
daa
call
and
inc
imul
cmp
lock
inc
ss
rcll
jae
push
mov
adc
popa
add
jo
hlt
mov
mov
mov
xchg
mov
push
push
mov
jnp
xchg
dec
test
inc
ret
adc
or
js
dec
push
inc
daa
inc
repnz
jne
adc
cwtl
xor
xchg
pop
das
loopne
inc
sahf
mov
push
push
push
imul
pause
ret
test
xchg
mov
pop
arpl
ss
mov
jg
sahf
fistpll
in
cmp
mov
mov
test
sbb
mov
inc
int
addr16
dec
and
int
pushf
mov
push
adcl
and
add
orl
shlb
and
popf
out
and
or
jne
and
mov
sbb
cmpsb
mov
cmp
sbb
fs
roll
xchg
cmp
sub
mov
push
andl
sub
push
or
pop
cltd
aaa
jp
sbb
mov
hlt
or
adc
cmp
roll
pop
imul
push
pop
push
jno
sbb
xchg
mov
push
adc
cld
jmp
pop
mov
xor
push
lahf
inc
orb
mov
push
insb
cli
fucomip
adc
incb
push
mov
mov
add
int3
add
add
xor
cmp
or
dec
mov
aas
sbbl
push
popf
int
cmpl
outsl
rorb
xchg
outsb
je
pushl
cmp
orb
mov
and
jnp
outsb
fsubr
jae
pop
push
xor
insb
lods
cmpl
mov
cmp
pop
ljmp
dec
lea
xor
cmp
pop
sub
lcall
inc
xchg
out
cmp
fbld
ficompl
mov
mov
icebp
add
inc
inc
mov
popa
jo
cmp
cld
pop
and
push
into
test
cmp
or
or
out
and
fcoms
movsl
rorl
adc
outsb
cltd
mov
aaa
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
mov
xor
xor
cmp
xor
lea
decl
cmp
xchg
or
inc
push
fdivrs
shl
or
push
sar
gs
lea
sbb
jo
sbb
sbb
inc
push
mov
lock
in
mov
xor
mov
loop
inc
and
stc
je
fdivs
aaa
les
add
aas
mov
pop
add
les
pop
xchg
jns
xor
outsb
shrb
adc
inc
or
pusha
lds
jb
push
mov
dec
gs
lret
adc
roll
pop
sarl
adcl
mov
mov
jge
cmp
xchg
ffree
jmp
and
xor
push
roll
ljmp
sbb
repnz
or
stos
and
push
push
push
clc
dec
cmp
in
es
popf
test
lahf
cmpsl
inc
pop
xchg
addl
addb
xchg
xchg
add
push
pop
dec
sti
popa
push
inc
movsl
es
lea
or
jg
inc
loope
push
fsubrs
fstpl
pusha
dec
leave
xor
pop
or
jb
push
mov
fsubrs
xor
push
jp
adc
add
cmc
daa
iret
lods
mov
and
cmp
movb
sbbl
cmp
xor
mov
xchg
push
cltd
ficomps
dec
clc
dec
add
add
sbb
push
or
jmp
adc
sbb
ds
cwtl
cmpl
dec
push
xor
rcr
fwait
jo
add
lret
test
and
jne
sub
xor
cwtl
jb
jge
adc
add
movl
add
js
scas
into
cmpl
movsb
fidivl
sbb
in
andl
testl
testl
sub
or
andb
rolb
xchg
push
bound
and
push
cmp
mov
add
push
and
or
insl
pusha
jne
adc
push
pop
lahf
inc
adc
cmp
mov
pop
sahf
mov
pop
add
mov
push
xchg
sbb
cli
test
mov
jmp
cmp
adc
sub
dec
sbb
adc
mov
test
and
sbb
adc
mov
ret
jbe
cmc
xchg
jne
mov
icebp
or
lods
fwait
or
loopne
fsubs
mov
dec
xlat
ret
in
cld
out
push
aas
je
cmp
push
pop
jne
les
cwtl
dec
aam
cmpsl
jne
push
fcomi
imul
or
pop
jne
pop
call
sbb
add
xorb
insl
dec
xor
in
xor
push
xchg
cmp
fbstp
jmp
sbb
sub
xor
call
mov
mov
or
inc
hlt
andl
lea
cmp
jo
fldl
add
je
in
lock
in
sub
add
je
sti
push
fs
jmp
div
in
fdivrs
outsb
jmp
pusha
mov
jae
scas
mov
out
sub
and
sbb
xor
pusha
mov
adc
mov
sub
decb
adc
cmpl
andb
adc
addl
adcl
sbb
push
or
fs
cmp
scas
or
inc
faddl
ja
decb
or
or
fwait
ret
push
xchg
jle
push
push
ret
lahf
pcmpeqb
push
mov
cmp
std
push
mov
lcall
xor
repz
movsl
aas
xchg
or
add
inc
arpl
or
mov
test
xchg
sub
pop
add
push
jno
in
xor
push
push
pop
cs
lret
push
pop
pop
pop
pop
mov
pusha
or
call
sbb
pop
sub
popaw
xchg
jae
sub
push
add
add
dec
rcll
ljmp
push
les
mov
push
sti
mov
dec
push
sub
sub
outsb
and
push
aas
das
push
push
rcll
lret
mov
sbb
inc
sbb
adc
pop
or
sbb
xor
adc
ror
adc
lret
mov
sbb
popa
mov
les
je
insb
or
cs
jne
mov
jmp
xor
es
rorl
lock
sbb
ljmp
ficomps
popf
sbb
inc
push
dec
cli
mov
sub
pop
jmp
shr
mov
rcl
aam
je
into
or
pop
mov
jmp
mov
test
xchg
cwtl
xor
push
or
call
cld
mov
lods
test
adc
pop
mov
mov
or
push
xor
sti
es
sti
fcoml
or
dec
rcll
pop
push
mov
mov
xchg
mov
mov
sub
inc
dec
inc
fdivs
mov
mov
sbb
mov
lock
or
ljmp
lret
add
in
and
push
mov
je
mov
cmp
jne
xchg
adcb
adc
in
mov
loopne
inc
jbe
xor
xor
jo
adc
frstor
sbb
mov
jne
cmp
je
push
pop
mov
mov
inc
push
and
add
sbb
pop
push
pop
js
add
sub
sbb
fs
adc
fildl
rcrb
into
sbb
jbe
push
adc
shlb
jne
sub
js
mov
add
adc
call
lcall
insl
jnp
mov
cmp
jne
or
shl
fs
or
fstpt
shrb
dec
jnp
adc
sbb
sbb
mov
je
or
adc
add
cmp
sub
js
bound
xorl
incl
mov
repnz
or
adc
jge
lea
hlt
sub
sbb
xlat
adc
jo
mov
jge
fucom
hlt
sub
inc
loopne
sti
scas
hlt
cmpsl
xchg
test
cltd
mov
jecxz
in
je
divb
call
lea
dec
jle
or
push
inc
add
loopne
add
cmp
jmp
jmp
jmp
inc
dec
mov
push
mov
int
xchg
rorl
inc
hlt
mov
mov
lock
lock
hlt
or
fisubs
test
mov
movsb
jg
outsl
add
add
mov
sbbb
add
push
rcl
pop
int
push
pusha
enter
jb
and
lds
and
scas
daa
cmp
jecxz
mov
push
mov
nop
mov
lock
outsl
mov
and
add
xorb
jnp
push
push
popa
shlb
add
jmp
ja
push
out
movsl
orl
int
and
xlat
mov
xchg
addr16
mov
adc
sbb
push
test
mov
das
je
push
and
add
push
test
dec
add
shr
enter
xchg
push
cmpb
js
gs
jns
mov
push
sub
lock
jnp
ficoml
pop
mov
sub
movsl
lret
or
and
or
sbb
sbb
mov
mov
leave
in
cmp
fsub
imul
push
pop
sbb
outsl
or
sub
repnz
pop
push
test
pusha
es
inc
jo
mov
je
adc
bound
adc
xchg
mov
int3
test
mov
arpl
clc
jmp
sub
test
inc
adc
das
jmp
sub
sbb
or
xchg
add
imul
out
adc
or
and
add
loopne
push
jmp
mov
icebp
add
clc
and
xchg
adc
add
inc
pop
push
dec
or
bound
lods
dec
mov
jmp
or
dec
jne
loopne
add
add
push
jl
sbb
adc
lds
mov
shr
mov
flds
xchg
cmp
lods
inc
test
cltd
lock
dec
imul
int3
movsl
sbb
lret
rolb
xor
in
enter
xor
push
fstps
and
loopne
icebp
xchg
xor
push
icebp
push
jae
sub
sub
and
rolb
fisubs
adc
or
cltd
sbb
push
movsb
xchg
jmp
in
pop
pushf
fsubrp
or
mov
nop
mov
push
fistps
push
mov
daa
inc
mov
adc
jl
jmp
pop
insb
fsubrs
inc
mov
xor
jp
sbb
add
add
in
movsb
xchg
mov
testl
jmp
notb
mov
xor
ficompl
lret
into
jne
lret
test
push
loopne
push
shl
ds
aad
jg
xor
lea
ds
mov
pushf
les
jge
and
lods
cmpsb
adc
ds
rep
xor
jbe
clc
int3
add
aam
subb
lock
or
pusha
aaa
loop
jo
add
clc
inc
push
xor
mov
jns
and
inc
ds
call
test
push
push
xor
inc
lods
or
jmp
push
mov
cmp
add
imul
or
movsb
cmp
int3
or
test
ret
or
ret
pop
pop
adc
aas
sbb
push
ret
dec
sbb
push
sbb
push
jp
pop
nop
in
push
out
fs
jne
mov
lret
dec
adc
mov
xor
out
cmp
sbb
jecxz
inc
inc
mov
ss
push
fmull
std
inc
inc
aad
subb
in
fsubp
xchg
xlat
mov
sbb
or
or
popa
pop
leave
sub
jg
inc
clc
pop
mov
cmp
push
das
loope
fstps
or
fs
add
add
ja
into
add
ljmp
adc
push
fstpt
inc
push
mov
add
add
dec
cmp
repnz
xor
xchg
into
xchg
mov
xor
popa
pop
adc
jge
pusha
shll
or
mov
test
dec
nop
push
add
push
ds
repnz
push
push
loopne
out
mov
fnsave
test
fidivl
adc
adc
iret
in
or
and
pop
sarl
iret
add
addr16
jl
push
repz
inc
cmp
add
inc
loop
aas
and
sub
or
subl
inc
addr16
in
aas
sbb
sarb
iret
mov
mov
jge
xor
mov
mov
js
mov
dec
loopne
xchg
dec
out
mov
xor
cmp
or
cmp
push
push
push
adc
sub
scas
inc
jle
enter
lea
jns
xor
in
or
mov
sub
or
jle
adc
or
data16
mov
out
mov
xchg
hlt
imul
test
fsubrs
dec
popf
add
inc
popa
lods
daa
jmp
jo
jp
aad
add
jb
sub
xchg
pop
loopne
popa
jle
push
jnp
lock
xlat
das
sub
add
jl
push
sub
add
fdivl
dec
subl
push
xchg
test
or
sub
dec
adc
pop
stos
lcall
or
test
add
sub
pusha
popa
adc
pop
test
js
ljmp
adc
ja
push
and
xlat
mov
push
pop
sbb
ss
sbb
sbb
outsl
pop
mov
inc
dec
cmp
loopne
and
pop
movl
cmp
outsb
pop
mov
add
or
iret
push
adc
enter
mov
xor
cmp
and
or
xor
movsb
nop
or
add
push
add
sbb
or
addr16
ljmp
arpl
add
cmp
inc
xor
add
dec
jnp
loope
dec
jns
cltd
rcrl
push
jno
loope
push
mov
mov
pop
xor
imul
daa
mov
mov
fnstcw
sub
sub
jmp
push
ret
push
sub
push
rorl
or
or
mov
and
mov
lock
shlb
outsb
icebp
cmp
sbb
dec
push
daa
divb
dec
scas
outsl
ss
push
push
inc
pop
mov
and
xor
mov
xchg
stos
sbb
xor
or
xchg
out
movsl
adcl
rcrl
sbb
sub
jge
jge
leave
or
add
jl
rorb
movl
or
sbb
popf
mov
and
push
cld
mov
inc
push
and
lea
subl
dec
jnp
popl
daa
inc
cmp
xchg
add
sbb
push
and
inc
sbb
mov
push
out
add
xchg
mov
or
fistpl
mov
xor
cs
and
lcall
divb
outsb
push
jae
inc
mov
jp
clc
out
into
xor
clc
cmp
mov
and
and
sub
or
fmull
cli
xchg
or
ret
fsts
jo
sub
lcall
sbb
jecxz
inc
into
sub
das
pop
dec
cmp
call
mov
test
test
pop
adc
or
and
sahf
push
mov
cmp
xchg
nop
jbe
sbb
mulb
dec
cld
jge
push
sub
lcall
pop
and
call
pop
adc
insl
push
jne
jnp
shlb
in
push
adc
subl
cli
dec
js
sbb
adc
push
in
sbb
and
dec
fcompl
mov
mov
sbb
mov
add
or
sbbl
push
jnp
nop
jmp
jge
adc
pop
sbb
arpl
add
aaa
bound
xchg
push
or
adc
addb
xor
jns
loopne
nop
call
cwtl
repz
ja
xchg
push
mov
xor
mov
add
adc
js
xor
and
in
mov
pop
push
mov
cli
das
push
in
mov
cmpl
jne
adc
arpl
ljmp
dec
test
movsb
cmp
pop
cwtl
cmpsl
lea
mov
pushf
xor
mov
fs
inc
lods
add
jno
cwtl
dec
lods
or
inc
mov
xor
pop
popf
lea
push
push
test
push
xor
xor
mov
xchg
cmp
jge
mov
push
sbb
fs
add
mov
push
sub
movlhps
repnz
sub
movsl
pop
or
out
insl
lock
or
pop
jmp
adc
push
sub
fcoms
xor
imul
out
in
mov
push
sub
xchg
lcall
cmp
fcoml
sbb
fcoms
inc
arpl
int
and
hlt
jmp
inc
jbe
adc
lcall
mov
jle
pop
add
jecxz
adc
cmp
inc
loopne
sub
in
xchg
popf
xchg
pusha
fbld
sub
pop
push
nop
loopne
sub
sbb
pop
jbe,pn
fdivl
ret
mov
test
mov
dec
sbb
je
jbe
loopne
mov
jo
adc
push
pusha
push
dec
push
sbb
movsl
dec
loopne
cmp
outsb
jmp
enter
mov
cmp
pop
push
aam
jne
cmp
push
fsubr
adc
pusha
and
adc
or
cmp
xorl
inc
add
movsb
int
lahf
or
out
test
mov
sub
xor
rcrb
and
add
sub
jne
es
jmp
movsb
inc
incl
and
pop
add
hlt
fcmovnbe
ret
pushf
add
jmp
mov
inc
push
sbb
mov
push
nop
addr16
cmp
outsb
mov
push
test
dec
push
push
pop
test
dec
pop
repz
mov
daa
dec
test
adc
or
sbb
imul
in
arpl
mov
jns
lcall
orl
icebp
mov
and
fs
bound
mov
sbb
push
es
pop
mov
push
test
mov
add
add
jmp
jne
jne
popf
cmp
mov
lods
mov
pop
push
mov
and
or
sbb
cmc
shl
shll
xor
shl
mov
mov
sub
cmp
rcrb
jbe
sub
add
sahf
add
icebp
das
movsb
test
xchg
pop
or
add
fstl
ljmp
stc
push
inc
push
sarb
outsl
jne
jno
cmp
jb
jnp
mov
imul
mov
test
jbe
sub
repnz
mov
cmp
jp
mov
mov
cmp
pop
addr16
sub
pop
jmp
hlt
xchg
scas
xchg
cmp
ds
mov
and
jne
je
hlt
sub
add
pop
enter
xor
roll
add
mov
test
mov
pop
mov
adc
fcomp
popa
aaa
lcall
and
or
or
aam
or
jmp
test
js
mov
sub
sub
andl
add
adc
xor
inc
mov
or
adc
in
push
mov
dec
sbb
push
and
mov
imul
or
adc
test
adc
adc
dec
xor
sub
or
ret
or
out
test
xchg
cmc
shll
lret
add
lods
les
pushl
push
js,pt
cmc
sub
sub
mov
sbb
inc
push
cli
fs
jmp
jne
daa
cld
insb
loop
fwait
mov
mov
testl
aas
sahf
jne
les
pop
add
mov
dec
loope
push
in
sub
pushf
loope
cmp
jge,pt
mov
cld
adc
xor
xlat
arpl
in
into
inc
add
imul
popf
xchg
dec
pop
adc
repnz
dec
xchg
adc
fwait
jb
mov
adc
xchg
dec
sub
adc
adc
adc
adc
xor
and
adc
adc
mov
xchg
inc
clc
push
push
add
and
sbb
loop
cld
inc
aam
out
inc
add
bound
or
les
bound
pusha
jno
out
lods
nop
push
imul
or
inc
fisubs
xchg
adc
lret
pusha
mov
mov
loopne
add
mov
sti
pop
ljmp
jl
inc
and
out
sub
lahf
das
jmp
cmp
mov
sarl
add
cld
cmp
bound
adc
jmp
and
lahf
or
rorb
mov
out
es
addb
in
mov
mov
and
pop
pop
popl
push
xorb
iret
xor
fists
or
out
daa
mov
je
lret
mov
inc
push
add
xor
mov
or
sbb
mov
add
adc
outsb
nop
xor
addr16
xlat
popf
jle
mov
test
mov
jbe
addl
push
sti
por
inc
aad
dec
hlt
inc
inc
setl
inc
lahf
lea
sti
or
add
cltd
popf
push
mov
add
jno
add
dec
test
mov
ja
push
mov
mov
in
jb
sub
pop
mov
sub
test
cli
jnp
mov
and
mov
inc
or
xchg
xor
pop
or
adc
xor
dec
cmp
mov
dec
xorl
fstpt
push
roll
mov
fists
mov
mov
and
pop
aad
inc
xor
mov
sub
mov
push
mov
push
or
out
jmp
mov
mov
mov
test
ljmp
cmp
mov
or
pop
add
ja
push
loop
mov
pop
xchg
ljmp
xchg
add
sbb
dec
push
je
push
in
rorb
mov
adc
shrb
pusha
mov
repnz
clc
push
out
mov
cmpb
push
push
pop
sub
into
leave
ds
inc
adc
inc
and
or
nop
imul
push
jge
mov
dec
pop
inc
xor
add
out
cmpsb
filds
rorb
mov
psllw
loop
aad
inc
data16
adc
jbe
mov
jmp
aad
mov
add
and
fdiv
push
daa
inc
mulb
or
mov
pop
pop
ds
xor
xor
mov
test
mov
jae
pop
jle
pop
jbe
lock
enter
nop
jle
pop
or
dec
out
test
mov
adc
pop
sbb
xchg
xor
out
xchg
and
sbb
lds
and
aam
inc
fcoms
ljmp
rorb
adcb
lds
aaa
add
push
arpl
mov
mov
xor
insl
pusha
add
dec
lcall
mov
aaa
or
jecxz
mov
push
ret
xchg
xchg
inc
pop
roll
push
leave
inc
or
scas
add
cmpsl
popa
sarb
repnz
cmp
cmp
sbb
loopne
mov
fidivs
mov
inc
test
mov
cmp
test
repz
add
movb
push
cld
pop
test
je
push
push
mov
cmpl
push
shlb
mov
faddl
and
loope
test
addb
mov
lret
mov
and
rorl
push
lods
cmp
or
int
jmp
pop
clc
or
stos
ss
push
outsl
and
sbb
pop
inc
in
lcall
psubw
add
inc
lock
gs
sub
nop
leave
ud0
scas
dec
add
adc
rorl
add
test
imull
jne
call
push
in
inc
sbb
enter
and
mov
jne
mov
loop
icebp
pop
xchg
pop
push
shl
movsb
pop
adc
sbb
xor
test
loope
cs
pop
repnz
loope
pop
sub
ret
arpl
test
xor
std
dec
ljmp
int
mov
xchg
xchg
mov
push
movsl
je
xchg
scas
repnz
ja
mov
mov
adc
sarb
sub
lret
daa
outsb
andl
lea
fcmovb
fisubl
sti
dec
adc
cmp
rol
adc
fstpl
add
dec
shll
pushf
mov
scas
sbb
mov
pop
dec
cmp
arpl
cwtl
or
or
div
or
loop
mov
jb
inc
es
inc
dec
sub
and
arpl
or
mov
ja
push
adc
add
sub
sub
cs
lcall
pop
xorb
in
ret
cmp
jne
adc
cmpsb
mov
adc
mov
ss
mov
sti
sub
lret
in
int3
fucomp
into
jo
js
xchg
push
pop
pop
jbe
call
add
lock
mov
add
push
jecxz
inc
xchg
fwait
add
inc
leave
add
pusha
bound
shll
push
add
add
add
add
daa
ficoms
leave
inc
ja
out
lods
popa
inc
push
inc
popa
xchg
adcb
add
sbb
iret
add
imul
dec
sbb
pop
xchg
pop
xor
add
or
adc
or
pop
ja
adc
fcmovne
xchg
mov
repnz
sub
xchg
enter
pusha
nop
fdivr
mov
repz
pusha
xor
sbb
dec
je
dec
minps
push
in
loopne
jmp
jno
and
jb
cmp
cld
inc
rcrb
inc
in
mov
jg
jbe
add
into
jae
lea
jmp
cmpl
lea
cmp
jbe
mov
inc
loop
cld
clc
sbb
and
xchg
mov
jp
rorb
dec
into
add
test
in
imul
pop
sbb
orb
std
cmp
xor
cmp
fs
add
and
mov
push
push
jne
pop
hlt
jb
and
enter
sbb
mov
or
sub
pusha
cmpsb
pop
jo
xchg
ljmp
push
test
mov
popf
mov
adc
rcr
jnp
data16
adc
outsl
push
add
xor
dec
sbb
or
addb
cmovbe
cld
sti
add
sbb
lods
add
pop
add
test
push
repnz
jmp
lods
cmp
pop
test
test
mov
lret
sub
push
in
dec
jmp
insl
mov
in
mov
and
add
js
xchg
dec
sub
cmpb
or
inc
inc
scas
inc
sti
movl
push
je
cwtl
xchg
add
jnp
shr
cmp
rcrl
mov
sbb
xchg
js
add
stc
pop
lret
push
call
or
fsubrs
xorl
jmp
adc
inc
xor
shll
sarl
imul
adc
xchg
pop
dec
out
add
add
add
adc
mov
add
mov
test
sbb
cmp
mov
cmp
pop
and
mov
jmp
and
and
cmc
mov
pop
or
adc
mov
inc
es
add
cmovb
js
adc
cmpl
inc
push
or
pushf
xor
inc
fldl
pushf
adc
test
sar
jae
push
xchg
mov
outsl
or
aaa
adc
aaa
sub
xchg
dec
test
inc
push
pop
testl
test
jb
fidivrl
adc
lahf
movsb
pop
mov
test
ja
out
inc
sub
cmp
cmp
cmp
data16
sbb
insl
pop
jo
jmp
xor
or
je
test
aad
in
push
jns
xchg
clc
jne
mov
jle
addr16
push
test
cmp
dec
or
sub
dec
addl
adc
sub
lods
dec
int
pop
or
xchg
sbb
xchg
and
hlt
hlt
cmp
xchg
stos
jns
or
inc
and
cli
xchg
and
push
mov
add
adc
jae
mov
pushf
inc
sbb
fxtract
jne
shr
sub
test
adc
add
sub
jne
mov
pusha
lods
push
mov
arpl
fadds
sub
fwait
imul
adc
lret
push
cmp
adc
inc
aam
push
in
xchg
clc
jne,pn
lahf
add
mov
jo
fsubrp
sti
cltd
jb
inc
fcomps
mov
pop
pop
adc
push
adc
sbb
fisttps
dec
push
hlt
neg
sbb
and
bnd
push
mov
push
sub
push
adc
sub
mov
in
out
add
mov
or
dec
adc
icebp
add
jne
sbb
movsb
in
jnp
sub
adc
sti
flds
into
push
test
insb
mov
in
scas
sar
dec
cmpl
and
add
cmp
jbe
or
jne
add
mov
idivl
hlt
addr16
hlt
ja
pop
ds
data16
push
fwait
or
xchg
popa
lock
jmp
pop
jl
pusha
adc
mov
jno
cld
andl
mov
adc
sbb
or
jge
pop
cwtl
sbb
push
push
or
loope
xchg
fcmovbe
jne
mov
adc
imul
jmp
and
add
mov
ja
xor
testl
js
int3
xchg
cmp
js
daa
or
xchg
or
nop
pusha
xor
dec
sbb
jmp
clc
repz
mov
and
sub
jnp
ret
jnp
lods
or
arpl
dec
ret
mov
ljmp
push
push
test
adc
cmp
test
in
mov
lea
add
adc
xor
push
adc
jl
or
jp
or
movsl
clc
push
push
rclb
loope
and
pop
ret
add
rclb
aad
and
jmp
loopne
pop
insb
xor
dec
insb
inc
sbb
popf
mov
fisttpl
cmpl
xor
push
mov
and
mov
sti
mov
cs
mov
inc
pop
cmp
ret
fnstenv
cld
adc
adc
mov
pop
fmull
jp
fwait
sbb
pushf
cld
mov
arpl
xchg
add
pop
dec
inc
and
ds
add
xchg
xchg
jne
jp
test
sub
scas
inc
cmp
fnstenv
addr16
rorb
inc
enter
lcall
jo
mov
xor
or
mov
cmp
mov
or
testb
or
add
gs
testb
movsb
aaa
cmp
add
cli
or
mov
fwait
shrb
in
je
cmp
adc
push
rcrl
imul
cs
cld
sbb
mov
push
aas
or
dec
xchg
loop
or
sbb
mov
sub
mov
std
sub
jmp
adc
sbb
lret
jb
and
mov
xor
test
sar
addr16
add
jns
adc
out
ficoml
inc
sbb
and
lea
ds
dec
push
jmp
test
sarb
daa
pop
sbb
sbb
push
leave
xor
add
add
fimuls
or
imul
into
scas
adc
arpl
sbb
std
sub
nop
jle
mov
push
movsl
jae
adc
jnp
xchg
jge
pop
pop
jge
arpl
js
dec
call
xchg
xchg
push
packsswb
test
arpl
fdivl
or
sbb
lock
scas
xor
and
jmp
imul
pop
xlat
je
sahf
jns,pt
addr16
and
push
je
pop
pop
jl
pop
adc
push
and
adc
lds
push
and
pop
mov
and
xorb
lea
adc
push
std
and
subb
mov
movsb
sbb
loopne
push
and
cmp
sbb
rcr
mov
xchg
push
or
dec
insl
je
mov
mov
inc
mov
push
cmp
mov
shl
jne
mov
xchg
cmp
aam
cmp
fcomps
add
mov
rcr
and
pushf
pusha
mov
xor
mov
int3
mov
rorb
lods
sub
or
call
adc
jge
aam
ret
jmp
lea
mov
int
mov
pop
fdivrs
jbe
jbe
cmp
push
pop
mov
pushl
cmp
in
mov
or
push
push
sbb
cmp
fisttps
ret
sarb
ret
mov
xchg
or
xchg
xor
jnp
loop
sti
jb
mov
jae
mov
mov
sub
inc
or
mov
mov
pop
lea
fistps
mov
push
test
sbb
sbb
call
pushf
xor
je
push
ficompl
xor
sub
cmp
dec
scas
mov
pushf
sbb
je
dec
pop
loopne
ret
push
jae
lea
add
add
cmpb
jne
fidivl
test
xchg
mov
jmp
in
lods
idivl
pushl
popa
pop
push
jb
and
iret
daa
xor
add
mov
out
addr16
sbb
push
mov
lods
push
dec
or
mov
ret
xor
shll
lret
cmpsb
or
aam
ret
je
stc
jae
leave
jmp
push
inc
sub
xchg
add
ds
and
mov
push
xchg
xchg
ds
push
pop
dec
insb
movsl
adc
add
mov
fisttps
mov
movsb
loope
add
push
cmpsb
pop
push
sbb
mov
mov
and
fwait
and
mov
je
mov
jo
cmc
adc
push
mov
or
adc
cmp
adc
loopne
cmc
testb
or
dec
and
dec
and
sub
inc
push
lods
adc
imul
pop
jne
and
pop
push
data16
ljmp
jle
movsl
sub
add
lea
popf
mov
ja
pop
cmpsl
ja
imul
dec
jo
mov
and
or
fdivs
adc
dec
or
push
jne
or
add
xor
push
bound
gs
xchg
adc
lahf
mov
mov
stos
add
xor
mov
push
add
mov
fsubr
push
dec
or
ds
loopne
movsl
inc
cmpl
sub
push
cmpsl
adc
pop
scas
xor
cmp
test
xor
sub
lock
data16
sub
cltd
mov
push
cmp
mov
mov
adc
mov
push
push
je
sub
cmp
jmp
and
orl
cmpsl
rcll
clc
std
incl
push
lock
fiadds
cld
fs
lock
jmp
enter
mov
pop
scas
addb
adc
or
mov
daa
bnd
mov
sbb
cmp
pop
bound
dec
ret
push
jae
lea
add
fidivs
push
sub
sbb
call
ret
push
leave
rclb
dec
shlb
and
inc
ja
xor
pop
ret
mov
or
inc
jle
lret
test
sarl
sbb
leave
jle
mov
pusha
push
fdivl
cmpb
mov
cmp
jae
inc
jmp
push
cmp
cmp
sub
adc
lea
push
js
dec
out
faddl
xchg
and
xor
movb
fldl
mov
aad
loopne
lcall
ret
sub
test
add
inc
xchg
faddp
loop
dec
jmp
loope
out
insb
divb
call
fstpl
cmc
dec
in
add
dec
rcrb
cmp
das
movsb
cmp
sub
add
mov
mov
push
jecxz
add
push
cmc
cmpsl
test
cmpsb
negb
lea
enter
xor
jo
xchg
pushf
int3
inc
mov
add
mov
ret
mov
push
aad
xor
push
inc
fistpll
add
inc
ss
cwtl
mov
adc
xchg
imul
sub
shl
fiadds
int
or
je
mov
in
jp
jge
cmp
cmp
ret
jmp
or
push
push
outsl
cld
mov
cmp
jb
inc
bound
ds
pshufw
sub
sub
hlt
mov
inc
or
add
pop
push
mov
es
stos
cmpb
aam
xchg
nop
cmp
and
sahf
dec
mov
clc
mov
sbb
std
cmc
adc
scas
imul
pop
and
into
test
push
adc
xchg
arpl
addr16
jmp
cmpsl
shlb
pop
icebp
sub
add
cwtl
lods
push
test
xchg
lock
in
or
enter
add
and
in
or
add
cs
insb
addl
add
push
mov
ror
sbb
mov
and
sbb
ds
xor
cmp
rolb
jmp
cmc
or
arpl
imul
lods
inc
addb
push
into
dec
adc
or
inc
xor
xchg
xor
jg
jmp
push
std
and
push
or
mov
pusha
fistpl
push
inc
pop
lods
lret
jle
outsb
aad
in
dec
or
or
push
das
popa
sbb
add
add
or
jns
sbb
test
sub
sti
sbb
push
inc
jb
mov
lahf
sbb
sub
jp
icebp
xorl
flds
inc
fwait
add
inc
aas
shl
mov
xchg
addl
movsl
add
testl
sbb
in
xchg
push
or
jbe
cmp
cmp
lret
jle
std
add
pop
jne
pushl
test
or
insl
dec
clc
pushf
mov
pusha
jo
adcl
insl
xchg
mov
jmp
nop
mov
pop
adc
cmp
xchg
mov
push
mov
push
loope
addb
xchg
push
adc
cmp
and
mov
xchg
xor
in
jae
loop
imul
movsl
add
cld
jb
frstor
push
adc
inc
mov
push
add
mov
ficoms
scas
add
adc
inc
sarl
adc
clc
adc
hlt
nop
dec
inc
xor
sub
adc
dec
inc
clc
mov
or
mov
adc
pop
movsb
mov
dec
dec
sub
cmp
push
mov
mov
push
scas
mov
dec
sub
mov
adc
mulb
push
pop
xor
xor
pop
sbb
in
fsubrl
mov
mov
push
lds
mov
mov
rcl
test
mov
and
push
jns
dec
lcall
les
lock
daa
dec
sbb
inc
ret
jge
inc
daa
test
cmpb
or
pop
sub
test
mov
sbb
scas
jle
jne
xchg
mov
mov
sbb
adc
cltd
or
inc
dec
sbb
das
lock
in
mov
add
mov
mov
test
or
sub
pusha
movsl
and
mov
std
fstl
adc
cmp
sub
pop
jno
ja
fimuls
cmpl
add
stos
adc
adc
push
out
mov
push
jg
add
or
jne
push
arpl
or
xor
pop
add
mov
ret
push
add
cmpsb
jno
pusha
scas
add
jae
sub
add
pop
scas
or
jns
adc
dec
iret
push
inc
pop
es
test
mov
negl
jbe
xor
or
notl
or
mov
mov
addl
loop
aaa
out
jl
and
pop
fwait
ret
or
pusha
dec
mov
fs
cmpsb
push
push
out
cmp
pop
sub
mov
rorb
jg
sbb
mov
add
xchg
cli
pop
rcr
push
xchg
or
add
xchg
movsb
push
pop
sub
ss
mov
sub
xchg
dec
dec
jnp
xchg
iret
push
cmpl
or
js
inc
dec
std
and
icebp
shll
decb
call
push
aad
xor
in
adc
js
fsubrl
arpl
xlat
push
adc
sbb
sub
rclb
fisubrs
adc
roll
sbb
xchg
and
leave
in
in
push
jecxz
sbb
xchg
inc
add
jae
jl
js
fistl
mov
and
dec
call
push
outsb
add
push
jecxz
dec
xrelease
fs
add
je
repz
popa
xchg
rcrb
pop
adc
inc
dec
pop
mov
mov
arpl
inc
and
gs
les
add
jle
mov
mov
push
or
push
dec
ret
or
sbb
les
rclb
add
jmp
es
pushf
add
push
sub
ret
xor
subl
add
push
cld
add
jge
inc
into
push
mov
lea
push
lds
stos
enter
ja
inc
or
aaa
movsl
dec
add
daa
cmc
xchg
hlt
and
adcl
add
or
dec
mov
mov
clc
sbb
repz
cmp
push
addr16
push
adc
cld
js
jae
xchg
mov
lock
sbb
xor
sbb
push
test
mov
in
add
movsb
jne
or
out
push
into
add
ljmp
cmp
mov
jo
mov
push
and
mov
popa
or
mov
cmp
les
push
jb
sarb
and
loopne
and
adcb
mov
cmp
sahf
mov
sarl
jl
cmpsb
test
es
cmp
mov
adc
mov
cmp
jecxz
pop
jl
subl
add
cmp
into
sbb
std
inc
add
gs
push
lea
outsl
push
mov
scas
mov
add
dec
and
inc
aam
int
ret
push
xor
push
xchg
xlat
and
and
push
subl
sbb
out
or
dec
add
inc
imul
clc
or
mov
dec
mov
rol
adcl
adc
and
pop
call
repnz
pop
push
cs
fsubrs
xor
loop
push
push
loop
jo
dec
push
cmp
aad
jo
hlt
inc
mov
push
int
mov
inc
fwait
mov
pop
enter
push
sub
adc
mov
push
mov
add
in
loope
rcrl
sub
dec
xor
xor
outsl
add
cmp
mov
je
sub
mov
mov
shrb
push
xor
add
and
orl
dec
ret
adc
mov
imul
pusha
pushf
mov
jb
dec
jg
aas
lea
pop
ss
cmpsb
hlt
sub
jnp
jmp
pop
adc
or
mov
shrb
push
dec
pusha
sti
orl
adc
shlb
inc
add
jmp
fnstcw
adc
test
rorl
faddl
arpl
fdivs
mov
inc
mov
xchg
pusha
test
fsubrl
inc
setb
jl
mov
fucomp
in
add
xchg
or
sbb
js
je
cwtl
js
aam
push
ja
jge,pn
or
or
dec
mov
adc
addl
sub
sbb
call
scas
jmp
xor
mov
into
and
push
inc
mov
imul
dec
push
icebp
push
jne
loopne
lret
cs
es
push
xor
xchg
in
add
xchg
mov
pushl
sub
les
sbb
pop
push
dec
push
rorl
dec
imul
daa
in
pusha
push
andl
xchg
inc
in
sbb
jnp
mov
jno
aaa
lods
pop
loope
adc
xchg
and
push
push
dec
xor
pusha
push
sub
push
mov
pop
inc
adc
sarl
jle
inc
stc
mov
setg
icebp
shrd
push
push
ror
scas
xor
pop
xchg
mov
add
les
test
out
rol
sti
xor
or
jo
sbbb
cmp
xchg
or
push
outsl
xchg
loope
jne
push
push
leave
js
jne
adc
add
jne
or
jne
rcl
jne
or
jne
jl
inc
gs
xchg
dec
mov
push
adc
out
mov
into
sbb
fists
lahf
out
xlat
xchg
cs
jmp
lea
add
outsl
pusha
add
push
or
mov
sbb
mov
insl
repnz
cld
loope
pop
inc
notb
popa
inc
add
cmp
sub
mov
movsl
lods
xchg
xchg
rorb
push
jmp
clc
ja
hlt
xor
out
inc
mov
jge
push
pop
push
jnp
and
xor
cmp
sub
mov
in
fisttpll
xlat
in
mov
mov
in
or
push
adc
fldt
inc
movsl
loopne
into
outsl
jp
or
mov
out
pop
push
sbb
into
into
cmpl
adc
fdivrs
mov
inc
xor
out
pusha
das
adc
aas
and
popl
mov
sar
pop
adc
pop
insb
xchg
mov
push
jmp
jp
js
cmp
jl
and
cmp
sbb
xchg
ficompl
dec
and
int3
repnz
and
add
and
mov
push
push
cmp
or
clc
andl
push
inc
inc
inc
pop
shrl
xchg
push
movb
push
jne
dec
add
xchg
mov
or
pop
sub
sbb
jne
add
jns
xor
push
xor
fdivs
jne
or
sbb
dec
faddl
insb
jne
data16
adc
add
pop
mov
call
jne
jmp
xor
add
imul
in
jo
pop
and
sahf
stos
or
cmp
je
or
in
push
or
adc
add
je
aam
lods
pop
or
fsubs
xchg
ss
jl
mov
lock
aas
call
into
push
inc
in
dec
clc
adc
mov
je
in
sbb
mov
mov
xor
in
xchg
lret
mov
sbb
push
arpl
pop
sbb
in
push
dec
pop
inc
icebp
cli
push
inc
cmp
fsubrs
mov
jns
outsl
shrb
dec
fadd
mov
cwtl
jo
jo
stc
cltd
pop
fadd
and
adc
rol
out
or
or
mov
mov
iret
mov
push
sbb
add
sub
ficompl
or
push
loopne
lods
sbb
jecxz
out
pop
leave
sti
push
shl
insl
adcl
sbb
leave
inc
xorl
mov
dec
add
pop
mov
or
incb
sub
cmp
pop
dec
pusha
movb
daa
pop
sub
andl
stos
sbb
pop
pusha
nop
jle
inc
add
imul
cmp
push
pusha
cmpsb
imul
add
or
cmp
sub
cmpsl
push
cmpsb
cwtl
push
sti
adc
addl
out
add
js
mov
cmpsb
gs
scas
sub
xorl
out
pop
out
cmp
add
loopne
nop
in
jle
movb
dec
fstps
xchg
cwtl
sbb
cmpsl
ret
pushl
imul
nop
add
fadds
sbb
sbb
push
fs
sub
sbb
negb
add
jp
lahf
adc
int
lahf
push
mov
and
dec
and
cmp
out
rolb
ds
pop
sbb
adc
push
mov
aam
jne
lea
mov
xchg
daa
addr16
dec
cmp
addps
adcb
testb
dec
add
test
addr16
add
mov
sbb
jge
shll
clc
xor
pusha
push
fldl
shlb
test
jne
sbb
daa
lods
sbb
cmp
push
and
leave
inc
push
jb
idivb
ret
pushl
daa
mov
sbbb
or
rolb
inc
and
and
shll
xchg
add
dec
inc
sub
and
push
xchg
jbe
pop
add
shl
ret
mov
enter
pusha
and
dec
ret
xchg
fwait
push
je
cmpsb
cmp
xor
jne
mov
aaa
fnsave
addl
jne
cmpl
and
daa
inc
dec
sbb
ja
repnz
inc
and
mov
sti
fbld
or
test
in
jmp
lsl
das
call
dec
stc
fldl
sar
iret
and
ffree
das
add
cmpsl
or
repnz
iret
in
fists
and
mov
inc
xchg
les
in
sub
fnsave
roll
xchg
stc
push
jne
mov
pop
dec
sbb
dec
jne
into
adc
data16
or
push
adc
je
xor
push
xor
dec
mov
fwait
pop
lahf
xchg
aam
arpl
cld
push
js
pop
and
dec
mov
das
push
pop
add
cmc
fldcw
or
js
loop
test
loope
invd
inc
mov
xchg
sbb
call
data16
into
dec
ja
pop
jge
inc
push
push
inc
scas
push
dec
jge
leave
or
setge
mov
push
fwait
mov
insl
cmpsl
or
cli
out
fidivrs
outsb
push
adc
xlat
xchg
cmp
pop
mov
xor
outsb
inc
push
pop
sub
cmp
mov
cmc
add
inc
or
or
xchg
mov
lret
fs
fsubl
sarb
pop
xor
lea
outsl
rcll
ja
dec
or
aad
xchg
sub
pop
dec
je
enter
repnz
push
sub
adcl
outsb
jmp
jb
sbb
lea
dec
push
int3
mov
pop
mull
bound
pushl
cmc
ds
sbb
inc
insb
mov
lock
adc
in
aas
inc
lock
mov
add
jne
or
pop
cmpsl
cmc
mov
je
push
cltd
test
fs
pusha
fs
xchg
inc
insb
insb
push
push
and
add
xor
sub
xor
xchg
push
xchg
inc
jmp
fisttpl
cmp
je
popf
add
push
add
or
push
arpl
imul
cmp
lea
push
icebp
push
insb
sbb
sti
push
sub
inc
and
jmp
push
jne
sbb
roll
or
push
insb
pop
or
jnp
and
cld
nop
in
cwtl
mov
mov
mov
dec
jmp
jecxz
push
push
popa
pusha
jl
xor
les
or
add
mov
movsl
movswl
mov
testl
mov
add
push
and
mov
fildll
adc
sub
sub
xor
cmp
xor
jne
aad
or
clc
flds
pop
sbb
mov
test
or
dec
scas
xor
bound
mov
and
faddl
loop
test
pop
mov
sbb
lret
and
and
pushf
mov
push
jne
adcb
cmp
mov
mov
mov
jns
in
insb
mov
push
test
popa
push
pop
fwait
jecxz
jecxz
mov
es
jmp
test
test
dec
add
jge
pop
mov
je
fcomi
add
jmp
sbbl
fistl
or
fs
cwtl
fidivrs
aad
sub
sub
sbbb
cwtl
jge
je
sbb
add
or
xor
push
and
push
fisttpl
dec
push
lea
inc
mov
push
out
adc
add
lea
dec
pusha
dec
ss
or
sbb
mov
pop
data16
fsubrl
pop
fcoms
cmp
les
out
lds
adc
pop
popa
add
mov
in
rclb
or
sub
clc
pop
arpl
mov
push
imul
ret
sbb
aaa
adc
dec
jb
or
test
and
push
das
rorb
loop
cmp
add
roll
les
add
xchg
loopne
sub
ret
cmp
arpl
fdivs
dec
in
cmpb
inc
notl
jge
pop
cmp
loopne
sbb
inc
addb
mov
add
leave
jbe
and
mov
xor
dec
cli
xchg
adc
or
addb
mov
or
pop
out
cmp
dec
pusha
xor
add
jno
call
dec
inc
inc
popa
push
mov
pushf
loop
sub
out
shlb
push
adc
xor
xor
ficoml
and
lock
xor
fcmovu
test
and
push
sbb
sub
ret
pusha
out
xchg
dec
js
lcall
push
mov
dec
mov
cmp
push
mov
push
adc
fiadds
mov
mov
cmpl
pop
aam
roll
mov
fmuls
lcall
les
dec
cmpl
pop
add
fmull
pop
xor
pop
sub
xor
xor
cmp
push
lcall
lret
fwait
xor
pusha
xor
aaa
int3
add
mov
movsl
add
jl
push
das
bound
mov
dec
mov
mov
or
sbb
and
push
adc
adc
jmp
daa
lock
sbb
cmp
jl
sub
lock
test
lods
jb
subl
mov
xor
cltd
sub
loop
scas
std
xchg
cmp
and
mov
mov
dec
sbb
fdivp
pop
fdivp
outsb
push
movsl
push
sub
mov
jne
ljmp
xor
push
xor
push
cmp
je
or
divl
dec
and
dec
popf
in
adc
inc
mov
jl
repnz
mov
mov
xlat
push
adc
push
sub
mov
xchg
add
std
inc
je
adc
and
or
add
loope
cltd
xchg
fstpt
and
mov
adc
and
stos
sbb
les
mov
mov
fildl
inc
jg
adc
inc
into
test
int
shr
iret
sbb
push
adc
jmp
arpl
fdivl
or
cmp
push
out
dec
jnp
inc
and
out
sahf
xchg
mov
sbb
mov
push
sbb
mov
or
push
and
cmp
add
xor
arpl
push
xchg
pop
push
lcall
or
xlat
mov
imul
and
mov
jg
xor
call
or
jbe
jge
push
mov
popf
jo
cmp
sub
push
sub
push
sub
cmpsl
xor
mov
mov
push
inc
or
push
inc
mov
add
xchg
cwtl
sarl
mov
xchg
adc
or
sbb
sbb
xchg
jbe
add
sbb
xchg
jb
mov
jnp
xor
fs
or
sbb
and
xor
cwtl
xchg
mov
and
pop
adc
adc
xchg
add
fwait
xchg
or
mov
test
mov
mov
dec
adc
cmpsb
push
dec
loopne
mov
in
sahf
push
push
push
test
rcrl
das
push
pushf
push
fcmovne
fsts
cmp
inc
sar
jle
ljmp
pop
ss
add
inc
jno
pop
sub
stc
inc
jo
pop
sub
lock
jmp
mov
imul
out
aaa
push
arpl
lods
stc
inc
cmc
or
aas
mov
jmp
pushl
popf
or
aaa
call
lea
js
pop
dec
ret
sub
mov
out
and
out
dec
push
inc
rorl
or
dec
mov
shlb
xor
mov
inc
negb
popa
bound
xor
mov
jl
inc
inc
lock
andl
adc
call
js
sub
fs
in
cltd
pop
addr16
add
inc
jae
mov
xor
jecxz
call
dec
xor
pop
jo
push
or
sti
push
add
nop
loop
inc
xor
sub
push
fcoml
fbstp
adc
mov
mov
dec
fldl
sbb
fcmovnb
cmp
pop
leave
xchg
dec
adc
andl
rcrl
mov
inc
inc
jl
and
pop
xlat
lret
xor
je
or
adc
sub
popf
mov
sbb
ret
loopne
pop
and
ret
jecxz
adc
adc
icebp
fdiv
jno
bound
xor
pop
inc
jb
inc
push
jne
adc
dec
pop
cwtl
inc
xor
cld
movsb
add
pop
lds
divb
push
inc
push
in
or
pop
add
add
add
push
mov
and
adc
fs
xor
sub
dec
ret
xlat
ja
imul
ret
ret
aaa
pop
testb
je
fdivl
aaa
xchg
cmp
jl
loope
xor
add
pusha
or
adc
lret
jl
inc
je
test
fsubs
xor
mov
lahf
addl
pop
adc
jge
push
loopne
cmc
mov
pop
jae
or
mov
test
mov
and
orl
inc
push
ret
mov
pop
jbe
leave
xor
movsl
sarl
add
add
dec
add
sub
mov
push
push
pop
in
iret
or
or
xchg
sbb
es
adc
dec
cmp
push
out
dec
jl
xchg
jb
push
out
or
or
lock
dec
push
add
mov
mov
xchg
mov
jns
repz
mov
xchg
cltd
cmpsl
mov
call
mov
inc
cld
jle
mov
inc
mov
jmp
mov
sub
nop
or
mov
fiaddl
dec
imul
push
pop
push
pop
mov
inc
jbe
imul
push
outsl
inc
cltd
idivl
push
cli
filds
insb
ja
mov
lea
add
cmc
lods
push
mov
ret
push
pop
lds
pop
sbbl
or
mov
add
scas
xchg
mov
out
and
or
andb
andl
xchg
and
push
leave
aaa
shlb
push
mov
add
pusha
and
mov
add
add
xchg
xchg
fdivs
or
je
jge
mov
jp
js
icebp
adc
add
aam
add
dec
xor
test
mov
sub
add
inc
jge
push
stos
loope
inc
cmp
xor
push
jp
ss
adc
mov
push
jo
fcoms
jns
cs
and
xor
push
adc
stos
jp
inc
sub
scas
xchg
sbb
movsl
fsubrl
mov
xor
icebp
and
push
or
jae
pop
mov
xchg
enter
ret
add
mov
rolb
aam
inc
pop
or
xor
data16
idivl
clc
mov
dec
mov
pop
fs
push
inc
lods
dec
insb
add
mov
outsb
mov
mov
je
jnp
sub
adc
sbb
adc
pop
lret
inc
cmp
adc
fidivrl
pop
sbb
pop
lcall
negl
mov
xor
add
inc
mov
push
iret
imul
push
mov
sub
push
push
test
lret
sbb
lcall
lods
inc
mov
push
fldt
mov
inc
cli
push
sbb
movb
cmpsl
add
and
jge
movl
pop
and
shr
inc
add
out
mull
pusha
push
rorb
or
adc
repnz
add
push
inc
sbb
call
pusha
insb
std
jg
decb
dec
inc
mov
adc
repz
leave
and
stc
and
mov
in
sbb
jae
movsl
mov
loopne
imul
mov
push
sbb
mov
push
push
pop
cmp
pop
cmpsl
adc
inc
lock
dec
add
pop
cmp
inc
jns
mov
inc
lret
push
int
jnp
jno
dec
add
xor
mov
scas
or
push
cmp
adc
insl
xor
orl
mov
sbb
sbb
in
arpl
xorb
fiaddl
mov
popa
lock
jne
jae
rolb
test
jmp
xchg
dec
icebp
fistpll
mov
mov
mov
dec
insb
jns
mov
lods
mov
aam
test
cmpb
add
pushl
fmuls
push
jg
inc
xor
or
outsl
hlt
cs
je
cmpsl
sbb
adc
inc
mov
jno
or
jl
sub
call
add
push
push
imul
loope
inc
mov
pop
mov
fisubrl
lea
mov
and
xor
add
or
add
inc
xor
add
jns
jbe
leave
sti
pop
ret
inc
sbb
loopne
sub
pop
push
mov
xchg
or
inc
dec
add
jo
sbb
mov
adc
sub
gs
push
dec
and
sbb
push
dec
inc
and
push
xchg
or
push
jne
or
pop
inc
jne
lret
push
rcr
push
sarb
sbb
mov
aas
inc
shrl
mov
cmp
test
mov
out
cmp
mov
hlt
fnstenv
push
popa
dec
insb
mov
xorl
jb
sbb
lea
dec
add
pop
sbb
jbe
dec
call
push
test
and
inc
aaa
rcrl
mov
pop
fs
push
inc
or
add
sbb
mov
faddl
sub
xor
jbe
xchg
fs
inc
mov
les
je
aad
cmc
pop
cmp
pop
test
fucomip
pop
push
scas
sub
loopne
pop
testl
and
cmpb
adc
hlt
call
dec
mov
out
inc
mov
or
cmpsb
adc
jle
nop
add
pop
xchg
adc
mov
jo
cmc
aaa
or
or
fisubrs
jle,pt
add
and
dec
sub
mov
adc
into
add
pop
shrb
push
pushf
add
sbb
add
pop
cwtl
fnsave
dec
pop
add
jge
loop
add
pop
push
pop
jle
xor
out
addr16
or
ret
mov
xor
dec
imul
rcll
and
dec
xchg
insl
jne
ret
punpckhwd
adc
add
jo
jo
orl
dec
pop
cwtl
insb
and
testl
movl
pop
pop
push
push
jl
add
xchg
or
dec
xchg
xor
in
mov
or
sbbb
mov
fimuls
mov
cmp
pop
imul
sbb
push
mov
jno
imul
inc
or
testl
xorl
lret
mov
mov
mov
mov
and
cmp
pop
pusha
sub
xorl
inc
lea
aad
inc
and
ds
adc
cmp
mov
cmp
cwtl
add
lret
mov
add
rcl
adc
sbb
and
mov
mov
mov
mov
push
mov
arpl
cmp
jno
lods
push
add
mov
adc
pop
pop
rcr
das
in
daa
xchg
pusha
pusha
loop
in
dec
sbb
addr16
gs
sbb
xor
mov
sub
pop
or
jmp
stos
mov
push
or
sbb
ret
pop
xlat
ja
sub
in
cld
push
sbb
or
ret
loopne
cmpsl
adc
cmp
clc
adc
lahf
adc
xchg
popa
stos
or
lods
mov
push
xchg
pop
sbb
push
jecxz
push
aaa
or
jne
ret
jg
mov
push
scas
cmp
ja
je
or
je
add
outsb
or
sub
mov
xchg
scas
cmp
sarb
add
push
or
ret
cmpl
movsb
xchg
adc
sbb
jl
jne
sahf
addr16
add
xor
cmp
enter
adc
adc
push
xor
inc
mov
imul
or
add
lret
ja
imul
test
test
jbe
mov
popf
clc
cmp
push
mov
and
xor
cwtl
call
mov
push
cmp
sub
sahf
test
es
sub
or
inc
nop
push
push
outsb
mov
or
or
adc
mov
test
xchg
test
imul
inc
push
xorb
mov
or
pushl
icebp
je
pop
ret
push
dec
xchg
adc
imul
addl
mov
loope
or
mov
adc
adc
mov
mov
add
pop
or
push
adc
inc
dec
add
in
add
lret
cs
in
test
cmpsb
xor
and
or
divl
mov
add
push
dec
sbb
shlb
mov
in
and
push
mov
mov
jmp
add
push
add
rorl
dec
or
pop
push
mov
fadds
shll
mov
dec
or
ret
out
je
xor
sarb
idiv
inc
adc
inc
das
xor
sub
fs
ret
insl
add
cmp
and
adc
in
push
pop
fmull
add
push
mov
rcll
test
test
mov
dec
cmpsl
push
jecxz
mov
push
or
cwtl
popw
pop
lcall
xchg
dec
roll
xor
add
mov
xchg
push
xor
adc
bts
inc
pusha
lea
adc
jecxz
push
xor
pop
push
in
add
add
add
cmp
mov
add
dec
pushf
and
sub
add
xor
add
bound
idivl
mov
jne
sub
sarl
cmp
js
lods
jbe
xorb
push
bnd
dec
sub
in
push
jnp
ret
or
shl
fiadds
push
ret
pop
cmc
fcomp
xchg
data16
mov
inc
orl
or
mov
push
je
cwtl
xor
pop
mov
push
ss
mov
loop
rclb
aas
and
movl
aam
movq
pop
nop
dec
jo
das
xchg
pop
adc
in
xchg
push
push
lret
pusha
xchg
dec
adc
mov
sbb
mov
pop
and
lods
or
sbb
enter
sub
out
aas
adc
scas
std
decl
xchg
xlat
pop
sahf
or
adc
push
cmp
ficompl
or
or
xor
adc
or
push
sub
mov
mov
mov
mov
adc
inc
loope
clc
cs
fwait
ds
cmp
sub
jne
mov
daa
ja
xor
push
mov
mov
add
dec
cmc
fdivl
jge
rcrb
das
xor
in
testb
rorb
clc
popa
mov
cmpsl
scas
xchg
data16
inc
cmp
push
arpl
push
jb
movsb
push
ret
sub
cs
outsl
or
xchg
pushf
dec
and
dec
mov
pop
cwtl
push
mov
pop
cmp
push
jb
test
sarl
decb
or
jae
pop
adc
out
sub
imul
das
orb
lods
push
and
sub
loopw
cmp
mov
mov
and
lcall
inc
inc
inc
fcomps
imul
pushf
jo
mov
shrb
jg
cwtl
les
and
mov
mov
fstp
adc
and
int3
cmpsb
push
sub
in
pop
lret
in
scas
push
gs
arpl
cld
mov
push
inc
leave
je
rol
arpl
aam
fcomps
lahf
imul
adc
jb
cwtl
ljmp
or
xchg
push
sub
sahf
sub
fsts
psadbw
repz
inc
xor
push
outsb
int
xor
aaa
divps
popa
jo
aaa
in
mov
and
dec
cmp
hlt
setbe
adc
mov
adc
dec
and
cmp
sbb
add
pop
aaa
mov
ret
aaa
sarl
nop
cmp
sbb
inc
mov
test
mov
out
call
cli
xor
out
sbb
xor
mov
or
pop
adc
or
test
mov
dec
add
push
dec
cmp
cmp
fsubr
pop
lock
movsb
push
stos
rcrb
ret
xor
or
xor
mov
push
mov
cmpsl
lret
test
fs
xor
mov
adc
outsb
adc
in
push
cld
ficompl
mov
and
cs
popa
jbe
or
fsubs
xor
dec
or
js
xchg
stos
or
sub
add
xchg
or
add
dec
movsl
or
outsl
test
pop
jne
xor
adc
gs
and
fstps
or
and
imul
movsl
push
or
or
aad
adc
loope
push
js
je
cwtl
cmp
push
int3
fwait
adc
arpl
sub
sarb
sbb
cltd
call
push
pop
or
inc
xchg
jmp
dec
cmp
std
and
adc
ffree
mov
iret
inc
xor
mov
mov
cmp
int
push
pop
out
sub
test
pop
cmp
add
or
sbb
dec
lret
cmp
cltd
adc
add
fcomp
push
add
cld
jmp
adc
xchg
add
sbb
jmp
ss
and
jnp
sub
mov
jno
sub
jl
or
into
jle
ss
dec
sbb
mov
and
push
aaa
adc
cmp
adc
or
stos
dec
adc
das
push
js
test
and
pop
out
inc
lcall
ror
xor
sbb
push
das
inc
push
sbb
push
inc
das
push
enter
fsubs
add
dec
movsl
pusha
sub
les
push
popa
dec
mov
lcall
nop
pushf
leave
shrl
bound
mov
inc
pushf
lret
mov
pop
cmpsb
cmp
cmp
icebp
in
addr16
xchg
lods
and
lock
test
jecxz
ljmp
mov
icebp
mov
add
fdivr
pop
rcrb
jg
cmp
xchg
icebp
out
xchg
into
inc
mov
nop
adc
roll
push
jg
or
or
sub
js
in
mov
repnz
popa
add
cmpsb
dec
shr
es
cmp
je
inc
stos
das
push
notb
push
mov
popf
loop
xchg
inc
or
add
push
mov
scas
loope
or
push
or
sti
and
push
cli
mov
in
loop
cltd
fisttpll
push
repnz
xchg
hlt
das
adc
pop
je
mov
xchg
or
pop
into
sub
loopne
cwtl
call
add
data16
mov
mov
and
cld
push
popf
inc
sub
inc
fildl
mov
adc
pop
sbb
mov
call
add
rolb
mov
mov
rcrb
das
sub
push
mov
sti
xor
mov
jbe
cmpb
dec
adc
sub
push
add
mov
iret
dec
xor
and
dec
jp
cld
push
mov
and
lcall
push
cld
cmp
or
popf
std
daa
nop
add
shlb
mov
pop
cmc
adc
stos
cltd
push
das
pop
orl
movb
mov
andl
dec
rcrb
adc
xor
pop
stos
pop
mov
out
mov
mov
or
je
adc
es
push
sahf
xor
std
sbb
xchg
cmpsl
pop
jne
and
add
hlt
ljmp
and
cltd
add
subb
xor
add
frndint
sbb
cwtl
rcrb
xchg
dec
mov
sub
jbe
xchg
adc
sbb
add
xor
imul
sbb
cmp
loop
sbb
cmp
inc
mov
sbb
adc
jne
inc
sbb
and
out
jne
adc
repnz
push
add
cmp
cmp
arpl
gs
pusha
dec
je
subb
jl
and
push
xchg
jmp
subb
in
rcrb
sti
lcall
pop
jmp
xchg
insb
sahf
addr16
and
pop
mov
pop
push
dec
xchg
pop
cmc
bound
loope
dec
or
dec
sub
jne
push
mov
or
aas
test
adc
add
add
add
mov
js
aaa
subl
mov
inc
dec
fcomps
repz
cmpsl
and
xchg
cmpsb
push
pop
pop
push
pop
lcall
dec
inc
xor
lods
nop
or
mov
cltd
cmp
movsl
movsl
push
int3
clc
jne
sbb
movsl
jb
pusha
mov
xchg
push
cmp
xchg
or
dec
adc
inc
int3
and
outsb
jmp
adc
and
lea
xchg
or
push
stc
loopne
cmpsl
dec
fdivrl
loope
add
inc
sub
cmp
je
in
ficoms
cltd
fdivl
pop
sbb
call
pop
mov
movsl
lods
sbb
xchg
call
cs
stos
in
lock
in
push
testb
sub
push
sbb
or
rcl
mov
adc
dec
pop
dec
pop
in
in
loopne
loopne
add
xchg
xor
outsl
xor
cmp
rorl
or
push
mov
jne
cmp
push
cltd
cmc
add
pop
imul
xchg
add
dec
lds
push
sbb
popf
nop
mov
in
jne
mov
add
xor
popf
xchg
jg
lahf
jno
or
pop
ljmp
cld
jne
shlb
sub
inc
pop
inc
or
push
fs
xlat
aaa
add
sti
lret
loopne
and
loop
and
pop
in
cwtl
dec
xchg
add
clc
inc
xorb
cmp
lock
shrb
int3
or
lret
add
xor
cmp
xor
add
mov
inc
jo
das
js
addb
aad
xchg
cli
movsl
in
mov
jecxz
jbe
rcl
jecxz,pn
dec
cmpsl
or
xchg
add
dec
push
loopne
cmp
add
sub
push
xchg
cmpsb
in
adc
mov
push
cld
cmp
arpl
push
cmp
fstpl
jbe
push
lahf
pop
and
sbb
lahf
adc
dec
and
hlt
jl
lcall
dec
or
fstl
stc
add
pop
cmp
jne
sbb
jne
lock
and
add
scas
mov
add
imul
lahf
adc
push
xor
xchg
sbb
shr
bound
add
loopne
sub
pusha
stos
or
pop
jge
add
fadds
lahf
ja
call
jg
js
test
dec
sub
push
and
or
dec
dec
or
jmp
icebp
movsb
mov
in
or
add
and
gs
jge
xor
mov
je
lods
test
mov
les
repz
les
mov
lds
jb
push
push
addl
shrb
jecxz
outsb
lret
jns
inc
cmpsl
add
scas
pop
inc
daa
clc
sub
jge
jge
loope
adc
adcl
inc
sbb
nop
cmpsl
and
movsb
cltd
mov
cmp
and
out
imul
loop
xchg
mov
lds
and
stos
fdivrs
sub
outsl
sub
mov
xor
and
das
or
adc
lods
xchg
adc
sub
xor
daa
fstpl
push
inc
jns
xor
pop
mov
or
xchg
push
xor
rcll
or
xchg
dec
mov
in
mov
mov
cmp
jbe
shll
sbb
mov
push
add
and
call
mov
mov
fnstcw
stos
add
or
jno
mov
sbb
mov
dec
lds
add
pop
repnz
adc
mov
sbb
dec
dec
test
xchg
push
pop
add
or
mov
test
jne
dec
insl
sbb
add
test
push
mov
mov
sub
jo
add
mov
sbb
inc
lahf
cmp
push
cmp
push
pop
pop
adc
mov
push
add
pop
and
shlb
test
jecxz
aam
xchg
or
pop
data16
stos
pop
push
fcoml
imul
push
dec
cmpsl
stc
xchg
stos
xor
pusha
adc
stos
mov
or
add
adc
pop
add
or
and
add
cltd
mov
xchg
and
nop
std
aaa
aas
ja
push
decb
pop
xor
inc
int3
mov
test
add
inc
mov
adc
add
fwait
lock
adc
adc
js
jne
andl
mov
mov
loop
push
ljmp
adc
les
jnp
mov
int3
mov
adc
ret
push
stos
call
jo
cld
je
int3
jbe
out
bound
push
jb
pop
aaa
loopne
lret
iret
sbb
scas
sbb
and
add
repnz
xchg
jl
jle
mov
addr16
es
sub
icebp
push
sbbb
push
ret
add
pop
imul
push
dec
gs
push
test
cmp
sub
mov
das
mov
insb
inc
orb
and
adc
pop
add
stos
sar
fcmovne
jo
sub
push
lea
mov
jno
popf
movsl
rol
pop
sbb
adc
add
pop
leave
push
insb
mov
add
or
cmp
sbb
sub
or
add
fs
ror
push
rdtsc
xor
sahf
inc
or
shlb
fs
mov
lds
addr16
jne
dec
stos
fimuls
push
xor
js
lock
jae
cmp
cmpb
push
sub
dec
xchg
dec
add
push
xlat
dec
subl
fisubs
gs
movsl
test
daa
inc
aaa
push
push
push
mov
daa
cli
adc
mov
add
shll
insb
pop
icebp
and
inc
inc
sub
cmp
jb
push
faddl
push
popa
bound
jg
jno
xchg
cmp
push
insb
sbb
popa
adc
sbb
mov
add
cmp
mov
mov
decl
addl
push
stos
dec
inc
pop
ret
sarb
and
nop
add
cltd
sbb
add
add
cmpl
sbb
jp
push
popa
or
imul
ss
in
xorl
call
and
push
hlt
test
imul
adc
in
popf
mov
pop
push
icebp
push
jb
ss
je
jno
pop
rolb
mov
lods
inc
add
push
jne
and
fimuls
xchg
push
mov
push
pop
sbb
add
pop
and
sahf
add
pop
popa
or
das
and
or
jmp
mov
sub
inc
xchg
pop
xor
add
mov
adc
jl
push
pop
mov
mov
dec
jnp
std
ljmp
cld
push
fsubr
push
mov
sub
pop
scas
mov
push
pop
testb
xor
push
das
jae
mov
lea
aas
js
push
fsubrs
inc
inc
cmp
jb
or
sbb
dec
testl
sub
jo
pop
xchg
inc
ret
push
outsl
mov
add
adc
cmp
testb
pop
inc
jnp
shlb
decb
xchg
or
rolb
aaa
das
lret
mov
ds
sbb
inc
mov
in
outsb
inc
sti
jl
test
jae
mov
sahf
jg
jg
loopne
int3
mov
sub
mov
test
cltd
pop
mov
or
adc
dec
clc
push
dec
loop
mov
stos
jle
dec
add
jmp
arpl
jo
inc
push
imul
mov
loop
pop
or
xor
xor
inc
cs
test
js
push
sub
mov
hlt
je
or
cmp
fs
dec
repz
loopne
out
cmpsl
jns
cmpsl
or
sub
inc
lods
cmpsl
jns
pop
dec
jl
int3
cmp
cmp
add
adc
or
and
movl
mov
cmc
or
inc
add
imul
iret
jae
xchg
inc
sub
mov
test
add
test
jne
out
sbb
xor
push
bound
adc
jb
mov
xor
pushf
movsl
icebp
and
push
mov
stc
mov
adc
pusha
in
shlb
xchg
movl
mov
and
jmp
sub
push
addl
xor
jne
jmp
ss
adc
popf
cmpb
icebp
fs
pop
inc
inc
mov
pop
lret
jno
test
add
push
or
push
mov
in
add
gs
cmp
test
or
sti
add
ja
bound
cmp
xchg
subl
jmp
loop
or
jae
mov
mov
mov
xchg
adc
in
and
jmp
idivb
dec
sarl
or
sbb
adc
adc
cmc
repz
xor
jge
je
jge
mov
sub
mov
push
xor
loop
push
mov
rep
fimull
xor
or
add
jns
or
sbb
cmp
jae
fisubrl
mov
add
cmp
andl
pop
xor
dec
jb
adc
pop
push
lods
imul
mov
jae
push
push
mov
cmpsb
xlat
jge
xor
push
and
push
mov
ficomps
dec
adc
push
jo
imul
sub
sub
rcrb
push
jecxz
aas
mov
inc
lock
mov
mov
and
dec
rclb
ja
sub
in
push
xor
sti
xor
sub
or
into
add
mov
nop
adc
pop
adc
lods
adc
iret
test
fildll
mov
jmp
lret
pop
int3
jae
sbb
mov
push
push
push
sub
rorl
adc
sbbb
cmp
out
xor
rolb
add
cltd
cltd
cmpsb
or
hlt
lock
and
jle
dec
mov
push
dec
xor
or
push
mov
or
jle
push
cli
loope
adc
decl
fcomp
xchg
fwait
push
push
fwait
push
pop
test
push
aam
call
and
mov
adc
push
adc
mov
xchg
mov
lcall
xor
rolb
rolb
adc
inc
and
sarb
sub
dec
or
lcall
xorl
dec
mov
push
loope
sbb
pop
add
xor
addr16
or
push
or
or
mov
jle
fnstcw
jp
ret
xchg
lea
fstpt
loop
or
clc
adc
fadds
sbb
movsb
add
inc
push
pop
and
and
jg
and
cmpb
mov
push
and
inc
adc
adc
jnp
dec
add
mov
jo
mov
and
movsl
jg
add
shrl
pop
or
dec
xor
dec
adc
xor
and
pusha
or
jne
jo
mov
lea
sbb
mov
dec
shrb
sar
xor
inc
out
loope
jb
ret
cmp
adc
jg
out
cmp
hlt
and
sub
stos
jecxz
in
dec
push
dec
es
imul
jb
xchg
add
adc
or
inc
sub
jg
cmpsl
loopne
xorl
inc
or
ret
sahf
ja
test
lret
mov
popf
shlb
and
out
ja
and
or
push
xchg
push
adc
insl
cmp
mov
mov
into
adc
sub
cmp
push
lock
shr
xor
pop
les
sbb
fists
adc
sbb
jl
xor
mov
jle
jge
notb
je
push
add
or
in
push
and
adc
cmp
sbb
inc
lea
je
mov
adc
lahf
js
sub
jbe
pop
fisttps
cwtl
in
push
insl
jne
pushf
sbb
test
sbb
fwait
orb
movsl
ret
dec
pop
out
add
mov
lret
adc
inc
jle
inc
in
push
mov
jmp
dec
ss
mov
mov
jne
sub
outsb
sar
call
jp
cmp
rorl
mov
jb
shl
out
dec
jae
ror
push
mov
cmc
ror
es
hlt
jae
stos
movsb
xchg
mov
jg
cmp
cs
push
pop
stc
adc
inc
or
push
icebp
pop
mov
sbb
push
mov
jle
subl
pop
cli
sub
loop
cmp
pop
add
cmp
jo
add
adc
pop
dec
add
mov
or
cltd
push
cltd
xor
inc
arpl
jmp
adcb
gs
in
add
jno
cmp
daa
in
jo
jg
xor
sbb
imul
subl
jne
adc
push
jmp
sub
and
lret
test
or
sbbl
add
nop
inc
outsb
arpl
or
mov
push
cmp
adc
sbb
nop
arpl
mov
es
loop
sbbl
cmp
insb
mov
adc
and
xchg
cmp
xor
and
js
xchg
or
or
movsb
adc
rol
jl
mov
inc
mov
push
into
out
shlb
sub
or
je
and
jmp
dec
pop
mov
dec
mov
orb
pop
pop
sbb
test
mov
sub
or
mov
xor
and
cmpsb
xchg
push
dec
sub
add
fistps
test
ja
aas
and
in
outsb
loopne
leave
dec
cmpsb
fs
and
dec
leave
orb
orb
es
orb
pusha
dec
leave
orb
xchg
dec
leave
cmpb
adc
ja
and
das
jmp
cmp
xor
pop
sarl
push
xor
in
jl
xor
ja
dec
and
xor
or
xor
xor
sub
mov
mov
into
mov
into
leave
jmp
cmp
cld
or
mov
sbb
in
pusha
adc
push
add
ss
add
or
sbb
xor
cltd
call
sbb
pusha
inc
lock
cmp
push
mov
and
mov
adc
rolb
add
dec
call
jne
sbbl
call
orl
mov
aas
xchg
or
jnp
adc
add
sub
adc
ja
shlb
mov
movsb
stos
dec
xchg
lahf
inc
mov
lcall
and
cmpsl
jge
dec
push
enter
dec
jnp
out
xor
loopne
in
aam
add
mov
hlt
mov
xor
and
call
push
cmp
and
pop
mov
hlt
jns
sbb
movsb
mov
mov
pop
js
sbb
xorb
out
int3
push
sbb
xchg
adcb
rolb
push
push
xchg
xchg
cli
sbb
pop
and
jno
adc
rcrb
push
mov
pop
fistl
add
stos
xchg
adc
push
xchg
pop
pop
sub
jne
pop
lock
outsl
jo
pop
nop
add
loopne
adc
rol
lock
popa
fsubl
call
jne
add
imul
mov
icebp
dec
or
ret
fs
es
test
push
xorb
subl
fdivp
xchg
lahf
out
push
add
call
push
mov
into
or
sbb
push
mov
push
pushf
mov
xor
aas
adc
add
and
test
adc
add
jbe
icebp
out
es
or
js
jmp
cmp
call
pop
sbb
adc
sbb
inc
add
mov
out
scas
mov
xor
dec
xor
out
xchg
fsts
pop
or
jmp
or
aam
mov
jecxz
push
add
int
mov
dec
lea
inc
ret
xlat
shrl
adc
sub
add
adc
sbb
adc
add
jno
cmpsb
pop
adc
jne
cmp
or
sub
clc
or
sub
je
lret
push
in
dec
cmp
sub
lods
sbb
insl
adc
sbb
add
insb
mov
out
shlb
inc
dec
sbb
sub
push
sub
or
cwtl
and
xor
or
mov
rclb
cmp
xor
fldl2e
pop
fs
rcrb
aam
popf
cmp
cmc
in
out
mov
dec
mov
movl
ficompl
dec
mov
or
push
sbb
dec
xor
cmc
aam
dec
xor
rcrb
fdivs
sbb
jmp
test
in
push
push
aam
push
inc
xchg
or
leave
rolb
adc
imul
mov
or
cmp
aam
add
push
stos
dec
fcomp
movsl
or
xorl
mov
lahf
in
js
mov
push
insb
sub
add
in
jge
sbb
test
cmp
cwtl
or
adc
or
or
push
xchg
push
push
cmp
jl
mov
adc
jmp
in
clc
push
adc
jbe
jmp
test
ret
inc
or
loope
stos
add
mov
call
imul
cmp
mov
scas
pop
push
outsl
jae
inc
stos
xchg
sarb
fnsave
mov
add
pop
idivb
push
rorl
inc
ret
jge
rorb
jge
mov
jmp
subb
shrb
test
add
cs
and
inc
loopne
pushw
aaa
rclb
sbb
loopne
mov
leave
adc
sub
sub
clc
mov
xchg
pop
push
push
lahf
call
call
push
cmp
stos
adc
mov
inc
sbb
dec
pop
movsl
inc
jl
aam
je
stos
push
scas
add
push
sub
mov
aas
and
push
or
es
push
ljmp
push
js
jle
jo
dec
xor
push
or
sub
xchg
or
xorb
ds
in
lock
cmp
add
add
push
cmpsl
stc
ret
adc
xlat
jecxz
inc
les
dec
sbb
andl
sub
pop
or
jp
ret
lock
jne
dec
inc
daa
nop
loopne
popa
test
out
ljmp
xor
add
int
and
push
daa
loopne
nop
dec
dec
mov
and
xchg
mov
pop
loope
or
push
adc
dec
sub
push
mov
lcall
rclb
test
mov
dec
push
stos
push
xchg
push
clc
mov
pop
mov
inc
dec
imul
jne
sbb
pop
shll
into
fs
sti
push
pop
shrb
loopne
test
inc
test
add
pop
fwait
int3
and
and
es
data16
mov
fmuls
out
xchg
test
sub
pop
inc
decb
leave
add
cwtl
dec
mov
or
xacquire
enter
jl
or
xor
fs
or
aad
add
dec
inc
pushf
rolb
clc
xor
icebp
fwait
push
cmp
cmpsl
sub
js
mov
sbb
rolb
jg
pop
mov
add
xchg
mov
addr16
pop
scas
push
outsl
loopne
sbb
add
add
notl
jno
mov
or
inc
gs
inc
xor
je
cld
and
xchg
jp
cmp
xchg
adc
push
mov
arpl
or
sub
sbb
inc
bsf
sbb
ret
push
or
xor
xchg
dec
mov
xchg
lds
arpl
or
xchg
aam
xor
add
or
push
lahf
pop
adcl
mov
sbb
adc
push
adc
loope
popf
push
add
xchg
call
sbb
mov
imul
xchg
stos
add
mov
xchg
cltd
dec
adc
nop
test
ret
sbb
adc
jnp
push
lahf
movsb
mov
rorl
hlt
mov
aam
adc
sub
or
xchg
xor
jno
dec
cmp
daa
push
and
addb
rclb
push
xchg
adc
das
mov
sbb
and
mov
cmp
mov
dec
in
pop
dec
mov
add
in
lldt
aas
sub
shlb
xor
leave
outsl
sbb
sbb
xlat
mov
test
push
adc
mov
push
mov
adc
mov
lea
ss
pop
xlat
movsl
or
test
inc
iret
add
push
dec
int3
sti
pushf
push
and
movsl
mov
xor
loope
mov
mov
jae
xor
imul
jp
incb
jle
xor
xchg
xchg
out
sbb
bound
test
cmp
mov
sbbb
insb
movsb
pushf
jp
imul
pusha
sub
mov
lea
push
sbb
in
cmp
add
sub
imul
or
call
mov
jnp
pop
stos
les
jl
pop
fsub
xchg
popa
or
jecxz
add
test
jae
cwtl
or
ss
xor
mov
mov
inc
jbe
adc
cmp
es
xor
pop
sbb
dec
push
xchg
mov
fwait
rorb
add
pop
jnp
fsubrs
or
rolb
add
loopne
and
fimuls
inc
testb
nop
shr
or
in
push
mov
sub
das
stc
lock
aam
mov
dec
je
adc
fiaddl
aas
je
sub
call
mov
adc
gs
jp
test
xchg
lret
xlat
cmp
cwtl
pushf
add
pop
and
mov
cmc
mov
sbb
inc
add
sub
pop
mov
inc
push
scas
mov
jp
sub
jns
pushf
xor
mov
xchg
cmp
sbb
out
loope
mov
ficomps
add
movsb
shlb
inc
xchg
xchg
pop
loopne
std
cmp
fld
mov
inc
push
sbb
lods
jmp
scas
xlat
and
fidivl
lea
add
push
xchg
idivl
pop
movsb
add
aaa
inc
addr16
xor
cmp
fld
or
add
pop
mov
push
mov
jmp
push
lret
push
mov
cmp
or
ljmp
movsb
outsl
push
pop
clc
not
lock
ljmp
pop
cmp
dec
xchg
jno
out
fimull
or
rorl
rcrl
idivb
xor
sub
mov
inc
push
inc
or
sar
pop
sbb
ljmp
out
or
shl
lcall
sbb
test
test
lea
or
loopne
shll
addr16
sub
in
cmp
fwait
jns
popa
jnp
cmp
or
add
cmp
or
fmull
rcrb
fimull
or
inc
mov
dec
sub
or
cmpsb
cmpb
push
push
jns
ds
cmpsb
outsl
xlat
push
push
repz
xor
sahf
adc
xchg
lcall
into
loopne
orps
push
ret
push
movsl
and
enter
or
mov
dec
movsl
add
call
sub
adc
andl
mov
call
xchg
daa
outsb
fs
outsl
add
push
les
mov
push
pushf
or
jnp
test
stos
es
inc
adc
xchg
je
mov
jl
sub
pop
pop
iret
cmpsb
mov
xor
push
jb
cmpsb
or
and
cld
ficomps
sub
cmp
or
push
imull
ret
mov
inc
add
loopne
and
inc
or
incl
incl
jge
cmp
pop
inc
inc
inc
jo
mov
decb
popf
daa
outsl
mov
pop
pop
xchg
push
insb
xchg
sub
into
std
mov
test
and
sbb
sbb
jo
lds
sahf
hlt
jge
and
daa
and
icebp
lds
xor
pop
cmpb
or
out
and
rol
xchg
mov
mov
inc
pop
scas
mov
xchg
jnp
in
adc
xor
cmp
adc
je
rcr
push
mov
sub
mov
inc
pminsw
imul
lods
pop
fisttpll
mov
popa
jnp
push
lods
jmp
sahf
sub
or
es
mov
sbb
jae
pop
sbb
and
ret
cltd
add
add
inc
movsb
imul
add
dec
adc
popf
or
or
decb
dec
ret
imul
mov
jno
sbb
aaa
enter
outsb
lock
cmp
xor
push
enter
xchg
enter
out
mov
cmp
out
xor
add
jae
xor
cmp
inc
in
popf
enter
cmp
dec
test
mov
js
mov
enter
or
pop
push
and
adc
repz
inc
popa
std
jmp
nop
add
outsb
ljmp
je
pop
loop
std
dec
jmp
mov
mull
xchg
leave
js
cmp
jg
outsb
adc
insl
fldt
or
outsb
add
push
setle
call
inc
adc
jle
xchg
jnp
adcl
fucom
jp
outsb
and
pop
iret
mov
and
sbb
fs
sbb
lock
cmpb
jb
jmp
or
ja
shr
jge
cmpsb
dec
cmp
or
jp
sbb
sub
sub
cs
inc
jmp
inc
pop
jns
jns
addr16
or
dec
and
jne
pop
add
push
add
lret
inc
xchg
fcmove
insb
or
add
push
or
mov
adc
add
or
sub
lret
jmp
movsl
push
lret
js
cmpsb
lods
test
mov
push
inc
in
dec
add
nop
xor
jl
or
jle
jmp
jl
and
les
fnstenv
jne
aas
test
sti
hlt
and
add
sbb
jmp
add
or
mov
push
mov
jno
aaa
cmc
jl
shl
jne
xchg
add
fdivl
cmpsl
lret
cmc
jl
loop
aam
lret
lods
pop
lods
sub
inc
add
je
or
pop
dec
rcrb
add
lods
movsb
cmp
add
or
push
stos
notb
in
jns
add
cli
push
das
in
lea
adc
fcomp
sbb
ret
jecxz
js
or
jmp
jo
sub
stos
sbb
les
xor
out
ret
andl
jns
sub
repnz
push
inc
jb
in
mov
add
ljmp
mov
fimuls
xchg
leave
xor
mov
imul
mov
idivl
lea
scas
push
mov
sub
lcall
xorb
je
das
stos
std
xor
test
add
jo
mov
xlat
aaa
jno
mov
and
out
dec
push
test
stos
inc
cwtl
sub
pop
xor
filds
jle
inc
fdivs
pop
push
and
pop
outsl
push
adc
mov
mov
jp
insb
test
adc
cwtl
pop
jbe
jp
fnstcw
sti
push
or
inc
lret
adc
sub
mov
jl
das
adcl
mov
mov
insb
nop
adc
les
adc
adc
or
mov
cs
orl
adc
and
pop
pop
and
jmp
invd
cmp
fs
push
cmpsl
fldt
jo
mov
test
loopne
inc
pusha
push
pop
pop
dec
sub
and
mov
andb
pop
ret
insl
cld
iret
cmp
cmc
pop
insl
adc
cmp
shlb
insl
mov
or
stos
cwtl
incl
jne
daa
dec
push
fcompl
xor
test
repnz
gs
pop
cmp
add
aaa
mov
shrb
jmp
or
lods
jns
gs
test
popf
sub
mov
gs
stos
push
add
cmp
mov
mov
xor
pusha
mov
pusha
or
jp
add
jo
es
push
xlat
inc
mov
sub
call
push
mov
push
sbb
mov
xor
pop
jg
add
cmp
adc
xchg
sbb
dec
test
test
dec
lods
test
push
in
sahf
or
inc
cmp
xchg
lock
mov
cmp
je
mov
sbb
dec
xor
loop
xchg
xor
shr
mov
push
movsl
mov
mov
mov
pop
and
xor
jg
adc
pop
cmp
call
add
or
add
jmp
add
lahf
push
aaa
pop
adc
xor
insb
mov
loopne
inc
inc
movsb
and
inc
jbe
jl
sbb
mov
shrl
or
pusha
adcb
pusha
and
dec
decl
jl
subb
pop
add
es
cmp
lock
jne
decb
lret
in
or
and
rolb
ret
imul
jge
pop
or
mov
movb
dec
or
movsl
mov
add
dec
xchg
int3
das
movsl
orl
test
push
inc
adc
fdivr
pop
add
add
sub
mov
enter
sub
mov
jp
adc
mov
sub
or
call
sbb
jb
divl
inc
dec
lret
std
inc
push
xor
enter
cwtl
arpl
inc
orb
repnz
cmp
lret
jge
jge
stos
and
xchg
leave
push
jns
mov
fs
es
push
into
add
xchg
pop
push
mov
xchg
aas
cmpb
add
add
sqrtps
dec
dec
imul
sub
cld
inc
iret
jne
xchg
sub
or
mov
sbb
inc
mov
pushf
xchg
jecxz
jnp
mov
popf
xchg
ret
or
loopne
nop
repz
and
dec
popa
add
sbb
bndldx
cmp
sub
call
add
push
mov
push
and
sub
popf
push
lods
stc
mov
dec
loopne
in
flds
mov
fldl
lock
aam
fucomi
insl
add
push
sub
or
mov
add
jle
or
and
pop
inc
stos
shlb
mov
jne
mov
call
arpl
sub
jo
ss
aam
in
push
xchg
inc
int3
nop
shll
js
fs
push
push
femms
cwtl
mov
push
inc
sbb
push
mov
jmp
adc
loopne
push
adc
jmp
rorb
inc
push
jo
mov
push
cltd
jb
stos
adc
cmpsl
mov
ss
sub
and
lods
ret
pop
cpuid
repz
push
pop
mov
imul
push
test
lret
adc
test
in
inc
lock
imul
push
xchg
mov
mov
inc
test
xchg
mov
in
pop
out
mov
rol
pop
dec
je
xchg
lret
enter
loop
jge
mov
mov
push
loope
jo
lcall
mov
adc
vcomiss
jmp
or
cmp
jne
movsb
data16
jnp
roll
mov
lods
dec
sub
sbb
loopne
dec
rclb
xor
xor
pop
sub
lcall
pop
ss
push
push
xor
adc
ret
and
es
popa
insl
and
push
pop
leave
rep
fcmovb
std
mov
insb
or
int3
sar
cwtl
es
gs
mov
inc
or
xor
scas
mov
inc
je
clc
pop
xchg
jbe
adc
and
push
jno
je
fisttpl
cld
push
aaa
lock
scas
popf
push
sbb
mov
or
cltd
mov
inc
jle
pop
adc
pop
xchg
and
push
call
test
mov
shl
or
xor
jle
and
add
jmp
scas
push
into
idivb
xor
push
mov
dec
xchg
faddl
inc
pop
add
xchg
mov
push
add
dec
nop
sar
pop
push
ret
mov
jne,pn
inc
je
stos
add
pushf
pop
lahf
dec
mov
mov
mov
add
test
scas
dec
or
test
dec
nop
dec
sbb
filds
mov
add
pop
xor
sub
pushf
add
and
enter
stc
mov
cmp
and
jb
push
or
notb
jnp
jo
movsb
mov
mov
mov
mov
xor
les
aam
cmp
xor
dec
fdivrl
add
mov
ror
cwtl
pop
mov
imul
or
inc
mov
sub
and
aam
and
testb
adc
rorl
jge
add
pushl
mov
xchg
cmpsb
shrl
jbe
incl
xorb
insb
lds
xlat
or
inc
sahf
cwtl
orl
and
adc
jl
and
inc
xchg
je
pop
push
or
and
js
js
insl
xor
sub
enter
les
dec
or
add
mov
add
pop
dec
sbb
pop
or
sti
xor
and
fs
adc
adcl
xchg
movsb
push
mov
je
sbb
dec
std
es
jne
push
mov
repz
inc
pop
mov
ret
pop
cmp
scas
xlat
sbbl
ret
nop
out
mov
xor
xor
sub
loopne
adc
mov
lret
push
mull
sbb
or
bound
mov
lret
movsb
xorb
push
les
arpl
jbe
addr16
mov
mov
xor
push
gs
and
cs
mov
push
or
fadds
inc
movsb
gs
pop
mov
adc
fs
push
into
mov
cwtl
sub
push
mov
dec
es
and
cwtl
sub
mov
in
and
mov
sub
clc
outsb
invd
and
jo
repz
leave
test
sub
pmaxsw
loope
and
loopne
clc
cmp
and
inc
push
js
xchg
test
pop
or
lods
lock
imul
mov
roll
in
push
fwait
inc
jge
push
push
jmp
push
sub
sbb
lods
dec
call
push
testb
mov
rcl
push
testb
push
pushl
adc
xor
sti
pop
shlb
adc
adc
mov
and
cmpsl
push
les
lods
mov
sub
pop
jb
mov
adcb
cmp
add
xchg
ljmp
cltd
sub
mov
pop
pushf
xorb
mov
and
mov
jge
pop
mov
iret
push
imul
jecxz
push
xchg
sbb
add
pusha
sub
lcall
dec
and
or
cltd
scas
test
in
filds
test
xchg
jmp
pop
mov
adc
cmpl
jg
push
and
add
mov
repnz
cmp
pusha
or
add
mov
dec
sti
in
repz
jo
cs
add
pop
fnsave
add
fldl
xor
leave
jne
pop
sbb
sub
cli
cltd
pop
lea
mov
and
or
mov
inc
and
dec
dec
and
jle
lods
mov
testl
xchg
ds
lcall
call
xchg
push
aad
je
pop
mov
jo
dec
sbb
repz
and
add
int3
sub
inc
cmp
daa
pop
mov
jmp
imul
jmp
mov
xor
icebp
lock
push
call
mov
push
sbb
mov
movsl
fcmovnu
rolb
sti
inc
hlt
fstl
mov
loopne
std
mov
fldl
pop
fsubr
pop
faddp
andl
sbb
and
or
adc
or
fmull
cs
dec
pop
adc
aaa
mov
and
mov
xchg
lods
das
pop
pop
adc
sbb
data16
mov
lock
push
andl
mov
pop
fdivrs
push
mov
shrl
jmp
clc
xor
jge
imul
mov
sub
sub
mov
or
mov
or
xlat
or
pop
inc
mov
sbb
ret
scas
dec
aam
fistps
pop
flds
add
cmovp
es
inc
out
mov
xor
mov
mov
int3
dec
sbb
fimull
jae
push
add
sub
mov
mov
add
jne
pop
in
sub
popf
icebp
clc
adc
and
ljmp
mov
push
jmp
mov
cmp
jge
das
pop
xchg
and
mov
mov
dec
add
sub
xchg
pop
add
xchg
pop
push
aas
jmp
and
mov
ud0
pop
push
dec
add
in
fucomp
popf
jne
jmp
pop
cmp
rolb
pop
ja
test
pop
add
aad
icebp
jne
push
push
adc
daa
adc
nop
jae
add
je
mov
rorl
fldt
into
inc
add
xchg
add
dec
jns
mov
mov
adc
orb
cmpsb
bound
pop
into
mov
mov
mov
mov
das
aaa
mov
mov
pop
stc
xchg
mov
inc
sbb
jmp
or
adc
int
or
ret
push
in
adcl
push
decl
inc
adc
mov
mov
cltd
or
xchg
pop
jne
xchg
cmpsl
mov
mov
es
mov
clc
mov
fcmove
pop
mov
dec
pop
mov
xchg
jno
sub
xchg
mov
mov
sbb
sbbl
lock
cmc
sbb
sbb
pop
mov
pop
mov
in
sub
or
cmp
push
xor
xlat
sbb
addr16
es
inc
add
dec
outsl
pop
and
add
loope
or
or
push
push
loope
fsubrs
xor
rcr
add
push
mov
push
pushf
push
add
lods
push
add
mov
lcall
add
pusha
rcrl
je
mov
adc
fsubl
adc
mov
loope
push
add
lds
arpl
icebp
mov
xor
or
push
jle
push
sub
add
push
in
sub
rorl
bound
arpl
ret
sub
or
inc
movb
push
add
dec
push
push
mov
push
mov
std
cltd
push
lret
adc
pushf
mov
sbb
xchg
clc
hlt
push
push
push
push
pop
lcall
pop
and
repnz
cs
jnp
aam
bound
repz
gs
add
adc
shrb
sahf
push
inc
pop
inc
adc
xchg
cmp
nop
mov
sbb
dec
leave
test
jne
mov
pushf
lret
movsl
ss
enter
mov
inc
shr
mov
sbb
clc
push
movsl
or
xor
xor
dec
sbb
sbb
test
push
sbb
dec
ja
sub
fmul
rclb
sub
xor
pushf
je
cmp
orl
scas
jne
pop
jmp
inc
inc
mov
sub
cmc
mov
cmp
fnstsw
add
sbb
add
mov
pop
mov
jns
ds
push
adc
and
gs
out
push
jecxz
pop
outsl
arpl
jg
pop
ret
test
leave
sbb
add
jmp
out
adc
sbb
or
inc
adc
rolb
call
mov
scas
aad
jge
lods
in
xor
push
loopne
dec
pop
dec
dec
sbb
add
adc
push
jne,pt
push
arpl
hlt
test
in
cmp
mov
jle
sub
pop
or
dec
mov
movsl
push
stos
jne
or
mov
les
xor
loopne
sbb
iret
test
ret
jp
mov
xor
std
push
mov
jne
and
or
test
push
mov
add
jne
xchg
mov
inc
adc
pop
test
sub
mov
push
mov
mov
les
push
pop
fs
jns
cmp
inc
inc
imul
pop
xlat
jmp
xor
insb
adc
xchg
mov
arpl
adc
sub
cs
test
je
adc
adc
pop
ror
adc
mov
enter
shlb
pop
sbb
les
cmp
fwait
ljmp
pop
aaa
call
fdivrl
or
vunpckhps
sub
add
push
adc
mov
leave
bound
xchg
enter
adc
sahf
into
test
pop
fmuls
dec
xchg
cmpsb
dec
pop
pop
xor
aas
mov
jo
test
cmp
pop
pop
lcall
or
shll
cmp
jecxz
jne
or
lock
mov
fidivs
mov
push
jmp
ror
xchg
inc
mov
and
setl
and
add
leave
jnp
add
dec
dec
movsl
jl
cwtl
mov
repz
loopne
xchg
mov
rol
add
adc
mov
adc
push
mov
outsl
pusha
cmc
sub
lock
mov
mov
sub
cmp
in
mov
lods
mov
pop
rcrl
mov
enter
and
je
push
push
and
sbb
les
test
push
shl
mov
test
jbe
jp
int3
mov
xchg
jo
aaa
add
jne
cmp
mov
pop
icebp
jne
lcall
xchg
adc
add
xchg
loope
notl
adc
pusha
pop
repnz
addb
inc
jo
sar
sbb
and
in
xchg
enter
push
stos
lock
int
ds
xchg
sub
call
jb
mov
mov
adc
xor
inc
dec
sbb
jns
sahf
data16
loopne
loope
cmpsb
movsl
rolb
enter
loopne
inc
push
fs
lret
sbb
in
in
add
pop
enter
add
sub
testl
sti
sbb
inc
push
loope,pt
dec
cmp
sbb
aaa
shrb
sarb
add
lock
mov
jl
in
pop
mov
stc
inc
xor
mov
stc
pop
push
leave
test
pop
pop
push
push
mov
movsl
ljmp
arpl
inc
and
popa
dec
ficoms
xchg
mov
pop
fs
lcall
les
int3
lods
inc
idivl
push
pop
and
cmp
mov
enter
jp
in
and
mov
add
sbb
add
push
push
add
push
hlt
jge
inc
mov
les
sbb
pop
int
sbb
lahf
fadd
lods
push
lods
or
stc
pop
or
or
jo
fmulp
pushf
mov
mov
or
in
sbb
lds
popa
movsb
mov
dec
rep
mov
ds
loopne
mov
or
push
pop
add
sbb
add
sbb
adc
mov
push
pushf
sti
les
add
push
add
repz
dec
sbb
xchg
enter
mov
rcrl
scas
jecxz
fstps
push
jo
rol
pusha
add
arpl
adc
int3
sub
adc
fs
mov
aam
imul
movsb
xor
push
mov
cmpsl
cwtl
push
xlat
mov
arpl
dec
rorb
sub
lahf
mov
inc
fmul
cli
lock
mov
dec
je
sub
push
dec
mov
add
xor
or
or
mov
xor
push
xor
pop
xor
cmp
push
adc
into
les
lea
inc
pop
addb
mov
mov
vmulps
pop
dec
and
jnp
bound
lods
and
or
mov
xchg
popa
inc
mov
or
or
popa
addl
or
lret
push
sbb
inc
jmp
adc
data16
push
dec
in
inc
inc
cmp
sbb
loopne
dec
push
mov
movsl
test
dec
and
loop
rcr
mov
mov
inc
jg
xor
inc
sbb
jns
or
xchg
jge
loop
add
cmp
mov
and
arpl
push
dec
xor
fistps
lea
sub
aas
push
cmc
cmp
jmp
xor
es
pop
add
cmp
sbb
xlat
xor
mov
fidivrl
jns
cmp
inc
inc
dec
push
orl
sbbb
shl
push
push
or
push
outsl
out
jbe
inc
cld
jl
sbb
jbe
lock
cmp
or
or
mov
outsl
pop
lea
movsl
sub
adc
pusha
xchg
icebp
pop
lcall
add
xor
xchg
int
ret
pop
or
pusha
lock
nop
xchg
push
mov
dec
out
mov
and
jne
xor
fidivrs
mov
fsubs
sbb
adc
adc
or
cmp
add
sbb
or
clc
loop
push
cmp
push
mov
int3
inc
xchg
push
push
xchg
int
xor
add
push
in
cli
std
or
or
or
in
cmp
addr16
dec
xor
push
sbb
cmpsb
xor
pop
and
or
add
sub
or
aad
or
shll
add
inc
cmp
jl
and
sbb
sub
std
mov
add
je
insb
xchg
out
movsb
add
sub
adc
fnstcw
rorl
test
repz
imul
clc
inc
inc
sbbb
cmp
fimull
pop
and
mov
sar
add
and
ja
inc
pop
adc
ljmp
lcall
popa
mov
dec
cmp
add
in
push
push
inc
mov
dec
nop
or
sub
orb
rclb
xchg
jbe
fs
mov
pop
xchg
xor
loop
cmpsl
adc
pushf
xor
ss
push
adcl
dec
addl
jo,pt
sbb
mov
pop
sahf
cltd
outsb
cmp
pop
pusha
sub
mov
inc
int3
sahf
add
jns
je
sub
orl
in
jg
lret
js
and
pop
cmp
jl
xor
leave
pop
push
mov
into
rolb
jp
lret
nop
cmp
dec
lock
dec
pop
fisubrs
xor
push
jns
dec
push
cmpb
es
jl
push
insb
push
pop
enterw
jl
sahf
aam
daa
fnsave
std
dec
mov
push
pop
je
in
sub
mov
cmp
jecxz
pop
inc
cmp
xchg
loopne
jmp
or
xor
xor
mov
loope
testb
or
jns
pop
imulb
rcrl
push
dec
sbb
jb
loope
xchg
je
sub
dec
int
stos
xor
in
mov
outsl
lock
jne
pop
notl
stos
les
mov
or
dec
push
jge
lret
pop
lds
lea
sub
cs
mov
pop
sub
xor
mov
rclb
mov
xchg
mov
inc
clc
das
jecxz
or
stc
rcrl
pop
inc
mov
nop
xor
mov
js
add
ss
pop
add
imul
test
aaa
cld
or
cld
push
lock
push
imul
or
lock
es
clc
mov
and
gs
test
and
sbb
jns
je
shl
pop
cmp
andl
sub
inc
or
pop
addr16
leave
push
add
push
lods
mov
mov
loopne
jle
xor
add
stc
bound
and
enter
sub
shll
mov
push
ret
sub
test
in
cmpsl
sti
adc
mov
jg
fldt
xchg
out
mov
push
or
xor
insl
popa
popa
and
pusha
jae
or
in
jge
add
adc
mov
and
cmp
xchg
arpl
sbb
arpl
mov
in
popa
cmp
xor
push
cmp
das
popa
ret
mov
data16
fcoml
jle
aas
jne
data16
jmp
test
fnstsw
stos
movsl
imul
scas
or
test
aas
decb
call
pop
adc
and
fldenv
push
frstor
add
pop
lcall
xor
inc
insb
sbbb
je
insl
loope
or
call
mov
rolb
push
sub
int
fistl
cmp
aad
pop
jne
push
jmp
cmp
ss
xchg
mov
adc
sbb
mov
lock
test
jbe
add
adc
sub
push
inc
in
xor
movsb
sbb
pusha
inc
and
and
rcrb
test
inc
dec
pusha
adc
scas
xchg
pop
lret
loopne
stos
mov
adc
mov
nop
push
push
das
cmpsb
rcr
mov
mov
and
mov
mov
mov
mov
jge
pop
cmpsl
add
mov
jge
aam
add
xor
pusha
sbb
cmp
shl
push
lcall
in
xor
mov
pop
add
into
jae
das
jge
iret
mov
dec
lds
in
jne
add
jne
movsb
sbb
push
pop
and
or
inc
or
movsl
fscale
pop
add
xchg
inc
movsb
subb
scas
std
adc
dec
and
xchg
ret
fdivrl
mov
cmp
fwait
sbb
mov
or
mov
sub
mov
pop
push
jmp
cs
packssdw
mov
sbb
add
adc
or
adc
cmp
mov
add
jp
adc
shrb
popa
add
rorl
mov
cmc
or
and
or
mov
mov
popa
popf
sub
push
sbb
push
lea
ja
mov
dec
sub
and
inc
adc
dec
lods
sub
or
sbb
loopne
xor
adcl
and
sub
and
cmp
and
xchg
xlat
and
pop
insl
push
cmpsl
push
or
stos
loopne
xor
in
and
add
adc
mov
leave
cmp
push
xchg
add
sub
adc
fimull
xchg
jmp
test
test
insl
sub
mov
jne
ret
jno
jns
fcom
dec
lahf
pop
mov
inc
rorl
jmp
or
outsb
adc
or
fs
imul
loopne
popa
sub
lock
rorl
adc
and
pop
mov
popa
jmp
mov
call
and
clc
lret
lock
adc
out
push
rcrb
inc
sbb
or
or
sub
and
jmp
inc
mov
dec
or
jg
cmpl
popf
shrb
or
or
cmc
and
ja
pop
add
add
jl
jl
movl
push
inc
dec
push
cmpl
lahf
sub
xchg
repz
ror
lock
and
pusha
cmp
pusha
add
test
scas
ds
icebp
or
iret
adc
ds
lods
jmp
inc
lahf
insl
add
adc
repz
call
cmp
jl
push
push
push
cmpb
add
mov
or
xor
push
inc
mov
or
sub
daa
xor
inc
mov
cli
lea
mov
mov
insl
bound
push
xchg
mov
mov
inc
or
dec
add
xchg
pop
fs
filds
mov
push
add
jnp
xor
ret
push
das
stc
or
inc
xchg
inc
ds
mov
lahf
push
repnz
xchg
aam
mov
and
cmp
and
jne
ret
add
push
xchg
test
xchg
sub
jbe
jno
sub
pop
push
dec
je
xorb
inc
xchg
mov
es
movsb
lock
sbb
add
inc
cmp
push
push
sub
cwtl
or
sbb
out
out
mov
xchg
test
fsubl
xchg
or
push
test
sbb
mov
push
test
push
and
icebp
inc
pop
es
pop
in
jne
mov
adc
jbe
mov
movsb
add
lods
inc
sub
mov
pop
test
loope
adc
mov
in
or
frstor
pop
loopne
xchg
fdivr
sahf
add
push
test
jecxz
push
sbb
sbb
lea
jmp
lock
ja
inc
add
mov
sahf
iret
dec
or
and
pop
in
add
push
and
pop
xor
cwtl
pop
jb
iret
sub
mov
dec
pop
push
adc
popa
and
mov
loopne
cmp
inc
gs
jecxz
aad
dec
or
inc
xor
sar
fcoml
push
or
push
lret
push
push
push
outsb
pusha
push
push
xor
or
loopne
sbbb
adc
pushf
insl
pushl
jo
adc
adc
or
pop
push
push
enter
sub
test
hlt
dec
or
push
js
rorl
dec
push
cli
add
stos
adc
push
pushf
or
sbb
cs
dec
mov
jle
sbb
add
push
push
roll
test
inc
jb
je
shlb
mov
or
add
add
push
adc
adc
mov
xchg
movsb
ds
or
mov
mov
adc
inc
shl
aaa
jo
test
mov
data16
jae
push
inc
test
test
test
loopne
adc
and
jmp
add
lock
inc
sbb
fcoms
das
mov
enter
mov
lahf
popa
mov
add
in
dec
movsl
movsl
stc
adc
mov
ja
js
in
adc
sbb
orb
xlat
popa
add
adc
push
iret
jo
and
mov
pop
adc
subl
rolb
call
aaa
je
subb
and
imul
cmp
sbb
jns
dec
lock
and
mov
add
mov
jbe
loope
inc
ljmp
nop
and
in
test
sbb
in
addl
adc
inc
frstor
js
mov
push
inc
adc
adc
lret
xchg
adc
jne
rcr
dec
movsl
adcl
fcom
mov
or
fsubrs
jg
nop
cli
xchg
sub
mov
dec
in
fadd
dec
fcoms
lret
fcoml
aas
sbb
mov
cwtl
xor
inc
int
data16
push
push
add
negb
adc
ret
out
xchg
out
mov
push
pop
gs
inc
mov
xchg
stos
sub
xor
les
push
pop
shll
jbe
fsts
movsb
and
adc
or
push
or
and
sbb
and
add
cmp
sarb
icebp
test
push
cmp
xchg
fdivl
test
loope
adc
xor
sarl
pop
loop
nop
mov
push
mov
or
leave
lods
rorb
push
push
xor
or
mov
or
adc
pop
push
shl
inc
add
mov
or
inc
pusha
call
es
inc
adc
cmp
or
cwtl
sub
mov
mov
ror
dec
add
out
imul
cmp
push
cmp
lea
adc
adc
and
shll
fcoml
mov
add
push
shrb
and
jl
aam
sbb
push
pop
push
cwtl
movsb
cmp
stos
mov
nop
push
adc
and
add
inc
lret
mov
sbb
test
mov
xchg
mov
or
mov
and
test
jbe
out
push
mov
mov
xchg
jb,pt
mov
push
mov
push
enter
mov
push
jb
mov
and
shl
mov
mov
mov
cs
movl
test
movzwl
pop
mov
pop
sbb
mov
sbb
add
add
jl
cmp
nop
jecxz
pop
jno
aam
mov
sbb
mov
add
nop
push
cmp
fnsave
and
iret
iret
mov
xchg
rolb
mov
movsl
jl
jge
sbb
adc
dec
imul
incl
inc
cwtl
addb
cmpl
xor
cmp
rolb
movb
push
popf
hlt
or
cmpb
xor
clc
rcl
clc
leave
and
enter
sti
add
mov
imul
mov
popa
popf
xor
and
add
push
movsl
or
mov
add
pop
inc
repz
test
push
shlb
sbb
sbb
movsb
xlat
add
dec
xor
cmp
fst
jle
fcomp
adc
ljmp
or
loopne
add
adc
jmp
cmpb
mov
adc
push
out
fimull
push
out
nop
cmp
fxch
rol
mov
movsbl
dec
xlat
dec
sub
lret
dec
mov
jb
jbe
push
paddb
mov
outsb
push
mov
daa
gs
addb
dec
xor
mov
inc
jge
xor
push
mov
insb
sbb
loopne
sbb
push
jmp
sbb
inc
pop
add
xchg
loope
and
sbb
add
jle
fcomp
daa
movsb
add
andl
cmpl
in
repz
lret
sub
in
mov
dec
cmp
mov
mov
scas
xlat
pop
sub
push
mov
shlb
mov
subb
fldcw
call
sub
jbe
inc
hlt
xor
ds
out
jl
xor
push
xchg
inc
push
push
shrb
hlt
dec
ja
repnz
jg
ficoms
pop
repnz
ss
repnz
pushf
pushf
pushf
pushf
add
pushf
pop
or
or
jnp
outsb
outsb
outsb
or
jmp
or
jno
jmp
push
jmp
outsb
outsb
outsb
outsb
por
jmp
adc
pop
adc
push
outsb
outsb
outsb
outsb
adc
dec
adc
dec
adc
aas
outsb
outsb
outsb
outsb
pop
jmp
sbb
xor
jmp
outsb
outsb
outsb
outsb
sbb
es
and
pop
and
jmp
and
or
adc
and
and
test
sarl
pop
lcall
dec
or
popf
shl
add
add
icebp
lock
sahf
out
sahf
and
dec
jns
out
push
pop
gs
jb
jns
out
jl
xchg
nop
xchg
lcall
jns
mov
mov
out
int3
rcl
aas
js
loopne
ljmp
push
pop
or
and
dec
add
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
cmp
push
ss
inc
xchg
jmp
outsl
add
mov
inc
les
popfw
mov
add
flds
sub
aam
ret
fsubrl
add
push
sub
xor
je
or
rolb
aam
adcl
push
pusha
out
mov
pop
add
sti
pop
dec
mov
lea
cltd
jnp
sbb
mov
mov
decl
test
inc
shl
cmpsl
cmp
inc
xchg
dec
push
or
leave
clc
push
adc
outsl
push
mov
mov
shlb
jne
daa
lret
add
adc
bound
fdivrl
frstor
xchg
jb
clc
popa
jae
xchg
shll
inc
mov
inc
xchg
faddl
rolb
rcrl
sbb
iret
cltd
sub
add
mov
fstps
dec
loopne
push
fcompl
mov
sahf
xchg
push
sub
xchg
popf
adc
and
jmp
cmp
jecxz
xor
inc
jge
xchg
lods
inc
in
cmc
jl
push
add
fidivrl
cmp
leave
adc
shll
ret
push
addb
cli
bndstx
pop
jne
cltd
add
sub
inc
jmp
sub
pop
cltd
pop
sbb
sbb
shr
das
pop
pop
inc
add
xchg
or
add
shll
stos
sbb
ficoms
fcomip
je
addr16
mov
cmp
ss
popa
insl
xchg
in
adc
ds
jle
dec
sub
lea
add
jae
rclb
inc
daa
movsb
jmp
inc
sbb
fwait
and
js,pn
ret
in
push
leave
xor
pop
cmpsl
and
into
lods
in
cmp
jbe
mov
push
jle
sbb
sbb
idivb
mov
sbb
mov
rorb
pop
es
inc
je
out
scas
ds
cltd
leave
idivb
xor
mov
push
or
test
addr16
lret
enter
int3
push
rolb
mov
stos
mov
cmp
dec
dec
xchg
or
sbb
lock
or
inc
or
jae
xor
mov
lcall
insb
push
fs
out
addb
add
jb
ret
push
subb
cmpl
push
and
clc
loope
test
pop
pop
jns
sbbb
andl
nop
mov
inc
or
js
aam
push
or
stos
xchg
mov
test
insl
sub
insb
pusha
lret
insl
fdivrl
push
enter
imull
lds
nop
mov
out
and
lock
popf
add
enter
call
add
mov
mov
xchg
pop
inc
or
adc
sbb
or
fwait
repz
lret
out
push
addl
pop
test
scas
push
xor
pop
mov
add
push
imul
xchg
jl
or
test
in
and
insb
ljmp
push
in
add
and
sub
or
xchg
mov
push
inc
cmovo
repnz
and
lea
mov
and
mov
sbb
adc
jl,pn
dec
inc
sbb
fwait
sub
ret
fcoms
lcall
cmp
fbstp
es
lea
cmp
dec
js
push
pop
jg
and
or
js
and
jl
js
sbb
pop
cmp
aad
or
xor
cmpb
jne
sbbl
outsl
or
icebp
jl
dec
adc
in
out
mov
insl
mov
test
jae
ds
pop
dec
lcall
pushf
jmp
outsl
mov
test
cmp
jae
lar
shlb
fcoml
jge
lea
fwait
adc
js
inc
test
dec
jmp
or
aam
insb
mov
push
inc
in
ss
rcrb
mov
cltd
xor
cmp
and
cmp
dec
sbb
sub
rcrl
cs
mov
mov
jbe
es
and
ret
cmp
add
pop
test
mov
test
add
dec
enter
fwait
pop
insl
dec
test
es
pop
or
add
js
jne
aad
fsubrs
and
clc
gs
and
mov
xor
ficoml
mov
mov
js
dec
push
add
jmp
sbb
pop
sub
jle
and
fcomip
movsb
rcll
mov
mov
jbe
add
pop
xchg
and
add
aaa
addr16
in
pop
or
cltd
sub
popa
mov
inc
stos
inc
push
add
outsb
sbb
lock
test
pop
mov
add
fistpl
push
sbb
sub
add
xchg
adc
or
and
std
test
fistpl
sbb
sbb
cwtl
mov
sub
mov
cli
add
ja
sbb
sbb
push
or
out
imul
rolb
sti
push
jmp
js
jmp
cmp
pop
jle
pop
test
clc
push
jne
inc
dec
pop
pop
xor
insb
and
jns
sub
clc
jbe
and
xor
mov
pop
neg
pop
or
push
and
jne
push
movsb
loopne
pop
pop
push
out
cmp
cmp
mov
enter
cmp
sbb
outsb
imul
push
or
jae
push
mov
jmp
cmp
jmp
adc
sub
or
mov
push
sbb
jg
insl
push
push
inc
mov
or
inc
push
jno
outsb
push
xchg
xor
repz
iret
dec
jae
lea
lock
inc
call
sbb
stos
and
call
cmp
and
cmp
push
cmp
push
ja
push
lds
and
push
cmp
and
pop
orl
ds
ret
pop
inc
les
out
js
mov
loop
scas
cmovl
dec
daa
inc
and
jnp
mov
mov
push
scas
pop
shll
es
jmp
inc
xchg
and
daa
adc
push
mov
push
aaa
getsec
je
xchg
cld
xchg
and
dec
adc
mov
xor
and
mov
test
clc
and
push
ljmp
add
jmp
rolb
push
inc
xrelease
mov
push
add
mov
xor
cmpsb
mov
pushf
int
push
sub
or
cmp
lcall
inc
pop
inc
pop
ret
movsb
inc
inc
rorl
int
and
pusha
cmp
stc
push
add
xchg
mov
sbb
mov
xchg
pushf
lcall
mov
movb
sbb
pop
mov
pop
mov
xor
xor
push
cmp
dec
movsl
in
lods
mov
xchg
cld
cmpl
test
xchg
sbb
adc
out
or
inc
dec
pop
les
dec
dec
cs
rcl
mov
add
xchg
jecxz
daa
push
sbb
push
pop
push
xchg
loope
mov
and
cmpsb
jmp
xchg
call
push
mov
data16
mov
fsubs
mov
and
rcrl
sbb
mov
mov
xor
inc
jmp
outsb
out
cmpsb
ss
push
push
mov
or
test
mov
sub
ljmp
das
je
mov
mov
sub
push
pop
sbb
and
adc
push
ja
dec
mov
test
sbb
ja
aaa
nop
inc
in
push
and
into
inc
jnp
sub
lock
lock
adc
lcall
cmpsl
xchg
jecxz
mov
les
je
xchg
pop
add
mov
xchg
inc
dec
jecxz
push
mov
mov
pop
jecxz
pop
nop
flds
and
xchg
inc
popa
in
or
cmp
ds
xor
cmpsb
pusha
lds
lret
rorb
cmp
xchg
or
dec
xchg
pop
sub
movsb
add
mov
ss
and
dec
dec
push
loope
or
out
dec
push
imul
fdiv
xchg
bound
popl
imul
xor
adc
popa
mov
dec
scas
fs
inc
inc
xor
enter
fiaddl
inc
push
inc
sbb
hlt
push
out
push
adc
or
out
sub
sbb
xor
xor
lds
jg
mov
xor
and
leave
inc
hlt
fsubrs
cmp
push
mov
add
aam
insb
xchg
aaa
pusha
adc
leave
xor
das
add
iret
lea
enter
and
and
nop
adc
fcompl
jno
mov
xor
je
inc
push
ljmp
cmpsb
imul
pusha
stos
dec
jp
mov
add
mov
dec
adc
cmp
fcmovnu
xor
mov
fcmovne
leave
sbb
dec
insl
mov
movb
push
or
inc
mov
push
cltd
mov
xlat
out
mov
mov
pop
pusha
out
sbb
or
jle
add
cmp
or
enter
outsl
jecxz
inc
mov
push
mov
adc
pop
ds
xchg
push
push
inc
fstpl
movsb
mov
vunpckhps
inc
xchg
clc
pop
add
xchg
loope
enter
mov
push
loope
dec
dec
sub
mov
addr16
jbe
arpl
sbb
adc
cmp
fisubs
cmpb
mov
gs
les
fdivrs
pop
cmp
je
cmp
pusha
xor
dec
and
push
inc
pop
xchg
jp
roll
fnstsw
arpl
xchg
adc
outsb
and
fimull
notl
mov
scas
mov
or
cmpb
js
xor
xchg
or
ret
lods
xchg
mov
and
push
jp
or
lea
shll
sbb
inc
bound
pop
xchg
sbb
xlat
push
mov
or
add
or
sbb
imul
cmp
movups
and
ret
and
js
adc
xchg
addr16
mov
xlat
xor
and
testb
aaa
add
movzbl
ret
push
xorb
ret
jle
or
push
lods
rorb
repnz
xorb
cmp
mov
insb
mov
pop
push
shrb
or
les
add
stc
sub
mov
lea
add
inc
cs
shlb
adc
cld
scas
cmpsb
cmp
sub
push
cmp
jge
mov
sbb
inc
inc
les
jmp
fstpt
pop
mov
lods
loop
loopne
push
lret
xor
lahf
shlb
pop
mov
clc
clc
cld
and
mov
inc
add
push
add
add
add
add
jnp
xor
dec
ret
xor
lcall
xor
adc
cmp
dec
or
mov
shr
push
pop
push
dec
loopne
lret
ljmp
xor
sbb
orl
and
mov
aad
andl
push
cli
or
cmpsb
adc
mov
enter
adc
je
dec
test
fidivl
add
out
loop
fcoms
push
loope
out
xchg
repz
inc
add
call
sub
in
add
push
add
clc
push
cmp
jne
sbb
adc
mov
pushf
cmp
cmp
into
adc
jnp
add
xor
add
ret
dec
sbb
fildl
sbb
inc
xor
ret
cltd
idiv
inc
inc
imul
push
clc
jb
imul
cmp
xchg
dec
je
cmpsb
loopne
popa
mov
add
or
cmp
outsl
push
rcll
mov
cmp
or
loopne
xor
push
push
lock
jge
movsb
cmp
je
cmpsl
mov
jbe
push
fidivrl
jmp
daa
pop
out
icebp
hlt
icebp
adc
aaa
sarb
in
clc
jae
mov
mov
pop
outsb
gs
int
mov
jae
sbb
mov
aas
pop
jne
mov
inc
fisttps
jns
sub
mov
je
cmp
loop
xchg
add
cmp
inc
jne
scas
shll
into
and
pop
xchg
add
shl
lods
or
fisubrs
add
cmp
clc
and
cmp
jne
mov
push
push
sub
and
or
std
cmp
jne
mov
dec
cmp
add
incb
add
inc
push
push
and
xchg
jo
xor
or
sub
jmp
jp
jl
or
jg
movsl
std
adc
jmp
popa
data16
jae
push
jmp
inc
jl
inc
jg
aaa
movsb
fucomp
mov
shl
dec
mov
sub
mov
inc
addr16
mov
aaa
adcb
outsl
adc
test
je
imul
and
clc
push
lret
das
sbb
or
loopne
icebp
fs
mov
cmc
loope
mov
sahf
movsl
js
add
push
pushl
sub
xor
mov
jge
incl
jl
pusha
mov
jg
push
cmpsb
jmp
popa
fs
imul
mov
push
jge
mov
add
cmp
lods
ret
lcall
xchg
jbe
dec
sub
out
inc
pop
xchg
aaa
mov
mov
daa
das
jge
push
pop
das
js
mov
movsb
xor
xor
fsubs
inc
cmpb
jge
add
add
mov
idivb
lahf
clc
push
mov
push
out
jmp
xor
inc
ret
and
inc
int3
int3
mov
dec
mov
push
dec
sub
js
aam
scas
sub
pop
mov
jnp
pop
push
adc
cmp
cmp
repz
ret
xor
jno
xor
add
cmc
cmp
lock
ret
daa
jne
cmpsb
pcmpeqb
ss
or
fcmovnbe
das
inc
fnstsw
mov
xor
arpl
xchg
add
icebp
fists
jne
mov
mov
cld
stos
int3
in
cmovno
or
inc
and
lidtl
add
pop
adc
cmp
pop
sub
dec
jne
leave
or
roll
mov
orb
adc
test
lock
sbb
sbb
add
inc
push
xor
shl
lea
push
fcmovu
xchg
add
xchg
cmpsl
call
mov
orb
pushf
inc
test
aas
sbb
push
xorb
jbe
addl
jne
add
js
add
lods
and
push
js
pop
push
add
sub
or
pusha
xchg
ret
inc
inc
ret
pop
data16
adc
mov
adc
sub
and
lods
mov
lea
pop
mov
add
ljmp
imul
subb
icebp
jmp
shlb
rolb
xorb
mov
xchg
adc
repnz
sbb
inc
xchg
sbb
shll
sub
into
adc
or
dec
cmp
jle
or
jl
fadds
in
lcall
sbb
dec
pushf
adc
jae
mov
jne
push
movb
xor
xor
add
cmpsb
jge
jmp
inc
incl
cmp
pop
pop
push
incb
inc
pop
insb
cmp
nop
cmp
pusha
call
movsb
xchg
push
xor
xchg
sti
jnp
push
mov
popa
xor
pop
stc
cmp
xchg
and
inc
nop
add
and
xchg
inc
ds
cmp
outsb
push
jecxz
call
push
lret
popa
lds
mov
adc
js
sub
adc
mov
loopne
cwtl
inc
xchg
outsl
inc
movsl
add
pusha
sub
or
andl
leave
sbbb
sub
pop
repnz
pop
mov
adc
jge
orb
pop
jne
ret
or
mov
pop
imul
test
jmp
push
add
xlat
mov
xor
sbb
pop
dec
ret
pop
in
mov
dec
in
mov
fdivrl
add
lods
sbb
mov
xlat
mov
rcrl
mov
lods
or
dec
cmp
rcll
xchg
aam
push
xchg
test
movsl
pop
xchg
in
mov
lea
addr16
out
fs
rolb
cmp
sub
dec
imull
pop
sahf
sbb
loope
jecxz
jbe
pop
repnz
lret
or
cwtl
jnp
or
arpl
bound
rep
pop
inc
mov
add
and
dec
shrl
lock
mov
add
mov
or
loopne
mov
dec
dec
and
sub
inc
inc
jne
xchg
dec
mov
enter
mov
jae
inc
push
jp
inc
pop
inc
mov
ret
fs
insb
je,pt
jo
or
cmpsb
push
push
mov
jecxz
sbbl
rcrb
add
cmp
push
mov
inc
sbb
inc
xchg
fisttps
xor
or
lods
imul
and
lock
cld
sub
mull
add
add
mov
xchg
jne,pt
xlat
cmp
insb
shlb
lret
push
lock
jo
jo
push
jnp
out
xor
push
dec
rcll
jp
int
jmp
xchg
pop
pop
inc
addr16
push
push
ja
dec
loopne
push
cmpsl
sub
es
xchg
sub
popa
mov
call
inc
cmp
shlb
push
sub
fisubs
and
jmp
xchg
add
imul
je
xchg
outsb
dec
xlat
cwtl
arpl
jle
aam
stos
sub
insl
test
leave
push
mov
sahf
push
sbb
hlt
mov
push
jae
ret
mov
sbb
lock
xor
cmp
jb
jno
aas
push
mov
aad
mov
mov
cmp
lcall
adc
xor
or
add
mov
add
xchg
hlt
cmp
loopne
call
xchg
mov
dec
pop
adc
ljmp
mov
xor
cmc
push
jne
add
jecxz
and
push
test
scas
cmp
pop
dec
adc
loope
andb
addr16
inc
icebp
adc
rclb
cld
minps
cltd
sub
dec
cmpb
inc
xor
pop
mov
inc
push
scas
push
inc
addl
cltd
jg
hlt
mov
pop
fdivrl
mov
and
in
sub
cld
inc
add
inc
ret
mov
push
mov
sub
cmp
sub
cmp
push
fisttps
or
in
sbb
les
and
dec
xchg
iret
movsb
movsl
lods
inc
into
clc
push
add
inc
lds
in
pop
and
and
dec
aas
add
add
mov
inc
add
adc
sbb
test
test
xorl
int3
cmp
aaa
mov
mov
inc
in
mov
pop
xchg
xor
fucomi
aaa
jmp
cmp
jne
sbb
int3
cs
push
bound
pslld
iret
clc
lret
jle
sbb
mov
sbb
adc
inc
out
data16
iret
fstpt
pop
adc
leave
mov
into
je
mov
enter
jmp
ja
jmp
mov
iret
lods
sub
sub
sbb
fldpi
or
pop
or
cmp
xchg
adc
adc
lret
and
lods
sub
sub
mov
push
pop
xchg
in
jmp
push
dec
dec
inc
vcomisd
mov
out
mov
and
ret
addr16
scas
lock
adcl
dec
inc
sbb
imul
cmc
je
outsb
cmp
or
into
sub
insb
fists
mov
int
movsb
push
or
or
xchg
xor
ret
and
adc
or
cmp
adc
lock
mov
push
ja
mov
push
sub
or
sahf
pushf
fstpt
and
push
dec
xor
and
daa
push
xchg
jecxz
scas
lea
jns
in
push
push
rcl
xor
test
cmp
lock
loop
das
jl
add
bound
mov
sbb
sbb
push
sub
add
sbb
gs
xchg
mov
or
sbb
push
mov
mov
push
pop
or
push
mov
repz
addr16
rcrl
or
mov
data16
call
add
xchg
addb
pop
enter
sbb
cmp
out
stos
cmp
test
push
and
add
mov
sbb
imul
jl
push
or
daa
aas
adc
xchg
push
ret
mov
push
or
adc
inc
inc
daa
daa
pop
jb
xchg
inc
inc
jnp
out
add
mov
sub
lahf
and
add
add
cwtl
or
arpl
mov
xlat
push
push
jno
mov
or
xor
punpckhdq
test
adc
test
loopne
mov
adc
push
in
or
lods
adc
arpl
and
mov
adcb
inc
add
xor
xchg
or
add
inc
popa
inc
leave
call
and
inc
jbe
push
or
pop
pop
js
and
ficompl
rolb
and
inc
cmp
pusha
add
loop
inc
cmp
inc
adc
and
imul
mov
dec
inc
lahf
lcall
and
gs
ss
lock
sarl
adc
shrl
fs
sub
sub
xchg
fisttpl
js,pt
and
pushf
mov
adc
call
mov
cmp
sahf
outsb
or
out
and
popa
cmp
cwtl
ficoms
loopne
pusha
inc
loopne
daa
inc
in
pop
push
ret
sbb
idivb
loop
jae
add
cwtl
jecxz
mov
inc
sbb
loopne
ret
ret
divl
or
aaa
inc
and
andl
lods
adc
lods
xchg
xchg
loop
adc
adc
lds
inc
cmova
pop
jmp
mov
sar
rorb
adc
or
popf
adc
push
adc
sub
and
push
subl
je
dec
loop
hlt
adc
and
out
icebp
lahf
xchg
xor
dec
mov
movl
aas
jo
adc
enter
or
or
fisttpll
sub
or
sbb
int
dec
dec
in
adc
mov
ja
fdivr
push
xor
and
loopne
mov
rorb
in
push
fimull
cld
or
sbb
dec
sub
lock
popf
subl
xchg
and
cwtl
adc
and
or
or
fsubrp
fs
addr16
mov
and
jo
mov
ret
mov
call
cwtl
loope
sub
add
fs
cmp
xchg
adc
cmp
sub
cmp
sbbl
pusha
sub
aaa
cmp
inc
jne
pop
push
jae
adc
outsb
jmp
add
mov
pop
cltd
mov
pushf
jo
push
popa
push
inc
loop
mov
xor
xchg
xor
adc
cs
fmuls
or
lea
push
sbb
daa
loopne
mov
and
rcl
inc
xchg
or
int
cmp
pusha
sbb
mov
stos
mov
in
rclb
jge
push
arpl
rol
dec
sub
sti
push
xor
dec
movsl
inc
push
in
or
adc
and
xchg
adcb
fstpt
cmp
jge
in
mov
js
mov
push
inc
sub
loopne
jno
sub
call
arpl
push
shl
pop
pop
mov
mov
push
loopne
jp
pop
jmp
sarb
pushf
jne
repz
push
sub
sbb
push
pop
outsl
dec
ljmp
mov
push
pop
mov
add
inc
insl
test
sub
out
jae
cmp
pop
mov
cmp
jnp
int3
add
pusha
push
fyl2x
movsb
sub
push
jb
outsb
bnd
add
mov
insb
aaa
nop
mov
mov
shl
lcall
mov
ret
rep
adc
data16
xor
divb
inc
jo
cmp
push
pop
adc
jb
mov
xor
les
and
sbb
or
ja
mov
pop
pusha
inc
pop
jg
sub
mov
push
imul
adc
cmpsl
dec
jae
cmp
push
jo
shll
xor
jb
sbb
clc
sti
jg
push
or
loope
decl
lods
and
aam
cmpsb
lcall
push
rorl
or
pop
mov
add
inc
call
cs
jnp
add
or
cli
mov
inc
daa
test
cs
jne
xor
pop
xchg
lds
add
sub
mov
shrb
pushf
adc
pop
js
inc
sbb
or
imul
push
loopne
dec
sarb
insl
loopne
jle
add
out
imul
jg
gs
icebp
sbb
daa
popf
mov
ret
adc
pusha
imul
call
int3
subb
aad
sub
popf
xchg
and
add
jmp
sub
out
and
cmp
push
or
cmp
sbb
adc
je
out
inc
in
es
sbb
repz
jae
ret
je
loopne
add
ljmp
push
push
jg
add
xor
cmp
mov
push
push
inc
insl
sbb
movb
mov
mov
ret
or
cmp
xchg
add
or
std
lds
add
mov
pop
cmp
cmpsb
and
mov
mov
call
xchg
rcll
push
push
mov
xlat
ds
ja
inc
jmp
jns
push
scas
add
iret
sbbb
fs
push
fcmovnbe
clc
imull
movsb
loope
lods
xorb
jbe
cmpsl
add
xor
push
cmp
push
or
fcoms
pshufw
add
addl
sub
push
popa
jb
and
mov
xor
adc
cwtl
out
mov
add
les
fisttps
dec
call
xor
das
sar
xor
fimuls
mov
adcl
pop
push
push
mov
push
push
dec
movsb
push
mov
mov
push
jg
add
dec
jmp
xchg
ret
xchg
mov
xchg
js
cwtl
cmp
add
sub
sub
mov
sub
movsb
scas
or
mov
out
sub
insb
clc
popa
add
jae
adcb
sahf
test
ds
or
popa
dec
push
adc
and
add
in
ds
pushf
inc
mov
daa
jne
outsl
sub
add
or
cmp
or
xor
add
shll
rolb
xchg
lds
inc
push
je
cmp
jbe
push
popf
addb
popa
enter
or
jmp
das
push
lret
pop
mov
sub
adc
adc
scas
flds
add
cltd
nop
sbb
jne
movb
jbe
fwait
clc
xorb
call
inc
icebp
xchg
push
loop
in
call
cwtl
test
adc
push
outsb
js
mov
xchg
xchg
jo
mov
fs
lcall
push
xchg
je
aas
adc
xchg
push
sub
inc
jo
ljmp
add
xor
sbb
cmp
push
push
push
cmp
lock
push
mov
icebp
mov
das
xor
les
sarb
outsl
jmp
mov
pop
push
inc
sbb
push
nop
sub
data16
sbb
test
push
cmp
pop
ja
jg
fwait
dec
shll
mov
sbb
push
inc
out
push
mov
movsb
out
cwtl
mov
cwtl
pop
out
cli
or
sub
mov
mov
cmp
jmp
fildll
cs
pusha
jle
push
xor
pop
div
push
jb
or
nop
sbb
ljmp
xchg
jmp
lods
mov
dec
fcoms
inc
mov
aam
lahf
xor
and
mov
adc
js
pop
jmp
lock
js
cmp
fsubs
sbb
mov
and
cmpsl
jecxz
mov
das
clc
orl
dec
inc
or
cs
out
or
or
add
xchg
mov
sub
cmp
std
cmpsb
imul
adc
sub
sub
jne
or
adc
out
adc
or
dec
add
or
lret
fidivrl
clc
int3
add
xor
inc
int
in
jge
add
imul
pop
cwtl
iret
jb
pop
daa
sarl
loope
jb
std
call
add
stc
cmp
jb
neg
and
je
sub
mov
mull
mov
add
mov
or
rorl
lret
or
add
stos
mov
dec
jnp
lahf
push
ljmp
jae
dec
ljmp
xlat
mov
sbb
leave
adc
repz
cmc
out
mov
inc
sbb
in
push
cmp
jne
sub
stc
xchg
aam
imul
testb
je
xchg
call
jle
push
add
adc
add
push
and
push
sub
cwtl
scas
pop
push
pop
and
int
loop
sbbb
jne
fnstcw
cmp
and
clc
mov
lea
jno
cmp
movq
movaps
mov
enter
mov
aaa
jae
xor
jle
xor
cli
sub
adc
ror
test
decl
xchg
jge
repz
or
jg
ljmp
adc
jnp
mov
pop
mov
mov
aam
ret
or
and
mov
out
xor
pop
add
in
ret
mov
add
pop
out
jmp
std
mov
int
sub
fcmovb
sbb
scas
mov
inc
pop
pop
inc
lds
pushf
push
mov
in
addr16
testb
out
orb
mov
aam
xor
xor
pop
add
pop
loop
add
cld
jb
test
mov
push
es
fdivs
int3
jmp
inc
ficompl
rol
incb
shl
nop
std
cld
std
dec
lods
dec
loopne
hlt
jge
shrl
pop
and
setae
insl
xor
lret
pop
inc
dec
pusha
pop
or
cltd
data16
dec
add
mov
jb
push
decb
ficoms
in
jge
cs
inc
sub
clc
ja
mov
lahf
mov
jbe
cmp
inc
cmp
jne
inc
cmpb
out
orb
add
inc
mov
inc
addr16
inc
lock
and
adc
or
bound
insb
or
mov
jo,pt
daa
mov
sub
ret
xor
adc
jmp
mov
or
mov
and
xchg
je
pop
xor
int3
push
xor
adc
incl
sbbb
xor
xor
leave
mov
xor
lea
adc
mov
adc
dec
jo
icebp
outsb
adc
popf
adc
ss
push
cmpb
jns
xor
mov
cmc
pop
inc
add
or
insb
sub
xchg
mov
dec
addr16
movsb
es
mov
cmpsl
pusha
pop
xchg
pop
push
sbb
movb
arpl
mov
add
in
sbb
sbb
sbb
dec
test
es
or
enter
rcl
push
cmp
dec
lods
inc
xor
cmp
pop
inc
pop
daa
or
cmp
mov
mov
push
je
xchg
int
jp
leave
sti
movsl
data16
mov
or
mov
inc
and
and
test
adc
fldl
pop
cmp
jmp
push
and
jecxz
str
scas
adc
out
mov
mov
pop
mov
or
inc
ljmp
cs
push
pop
mov
and
push
cltd
cmpsl
test
hlt
mov
and
int3
mov
and
mov
push
adc
mov
test
repz
cmp
or
outsl
movsb
aas
pop
aaa
jmp
pop
add
cmp
int3
sbb
cs
out
in
hlt
ja
imul
loopne
mov
lret
push
inc
sub
xchg
cmp
inc
jb
or
pop
scas
fildl
or
sub
or
rol
inc
add
sahf
aas
pushw
add
aam
mov
add
xlat
push
inc
adc
push
jnp
sbb
add
or
stos
je
add
roll
and
mov
arpl
jo
inc
or
test
fidivrl
adc
rorl
pop
dec
pop
rol
lea
loopne
arpl
sub
mov
push
rcl
add
cs
movsb
popf
rolb
adc
rcrl
add
movsb
pop
inc
inc
loope
inc
mov
and
and
push
or
pop
cld
aad
jo
mov
mov
cmp
movsb
xorl
or
scas
or
inc
xor
mov
cmp
les
testb
rol
loope
or
cmp
jne
dec
jmp
or
shl
xchg
mov
shlb
lret
jne
inc
aaa
push
lds
mov
push
mov
sarb
xor
cmp
sub
insl
ljmp
inc
dec
jne
add
jnp
push
and
mov
nop
cmc
insb
mov
push
xor
push
cmp
xor
test
movsb
outsb
daa
cmp
repz
pop
and
mov
pop
pop
jne
mov
ja
sbb
lcall
jb
rep
jmp
mov
sbbb
and
enter
aam
rol
out
mov
nop
es
adc
xor
shr
sub
mov
or
lahf
cltd
push
lods
adc
int3
aaa
mulb
lea
push
dec
add
push
jmp
nop
inc
xor
dec
movsl
cmp
add
fidivs
xchg
mov
je
inc
mov
mov
call
repz
in
lock
xor
clc
cld
popa
clc
pop
adc
mov
ret
loopne
cmp
push
fcomp
inc
test
and
insl
rcrl
jbe
or
sbb
lea
and
fmul
jl
cld
pop
and
std
out
xchg
scas
cld
out
ds
neg
sarl
or
jbe
sub
stc
sub
mov
jo
xchg
mov
xchg
frstor
mov
add
sahf
inc
push
out
push
add
cs
inc
arpl
cmpsb
addr16
mov
jnp
cltd
push
mov
adc
sbb
cmp
repz
xor
inc
push
cmp
repz
ss
sbb
adc
cmp
repz
adc
inc
repnz
or
add
js
negl
or
test
push
add
and
daa
adc
push
inc
and
shrl
jae
cmc
jmp
imul
jl
cmp
call
int3
add
mov
dec
dec
xor
adc
fidivrs
jne
lock
sub
testb
push
lahf
inc
and
inc
leave
push
cmp
push
push
and
xchg
rcll
sbb
sbb
adc
mov
push
xor
push
mov
and
fdivr
inc
bound
and
es
loop,pt
mov
inc
pop
push
xchg
daa
ret
xor
or
xlat
adc
mov
cmp
xor
sub
int
inc
test
enter
inc
ret
int
sub
add
mov
cmp
pop
mov
jmp
nop
cs
mov
mov
adc
xchg
inc
and
btc
cltd
inc
in
dec
mov
cmp
and
fbstp
jno
cmpsl
mov
sbb
or
adc
lcall
pop
rcr
jle
or
cmpsb
loopne
fwait
dec
push
jbe
sub
mov
aaa
xchg
cmp
pushf
mov
cmp
in
inc
arpl
into
lea
cmp
push
lret
sub
out
lds
call
push
adc
or
frstor
or
pop
lcall
jns
add
mov
je
jne
dec
loopne
add
dec
or
xor
add
aaa
in
icebp
adc
and
jle
jne
push
aas
dec
xchg
pop
adc
and
fbld
cs
mov
inc
xor
mov
add
push
andb
je
jbe
cmp
mov
adc
dec
push
stc
mov
sti
sbb
shrb
aas
pop
and
enter
ja
cmp
mov
ja
pop
adc
andb
loop
mov
pop
stc
dec
or
and
or
daa
inc
adc
clc
mov
inc
inc
ret
inc
les
cwtl
dec
xor
add
mov
mov
mov
sbb
jne
pop
dec
and
cs
stc
mov
rorb
xchg
jb
cmp
ds
pushf
push
pop
xchg
pop
imul
or
enter
push
lods
mov
imul
shr
std
adc
sahf
xchg
xchg
test
scas
or
add
jg
loopne
lock
push
push
push
push
lods
ljmp
pop
and
jmp
push
sub
inc
lods
sub
ss
fs
or
in
into
js
int
je
or
mov
xor
fs
pop
gs
xorl
and
ja
add
xchg
fcoms
mov
sub
in
aaa
js
push
or
or
lcall
jp
loopne
popf
nop
repnz
leave
push
sbb
mov
les
cld
jb
movsb
out
jle
clc
jbe
add
adc
stos
and
adc
adc
mov
add
loopne
xchg
popa
jb
pushf
mov
mov
mov
mov
sbb
scas
push
shl
rolb
pop
pusha
lds
lods
cld
jbe
testb
aam
add
je
inc
sarl
mov
pushf
pop
shll
and
mov
pop
or
punpckhdq
cld
out
inc
filds
xor
and
or
leave
test
imull
shlb
ret
xor
cld
cmc
inc
out
inc
inc
cwtl
adc
or
movsl
js
hlt
cmpl
push
add
adc
insl
adc
dec
add
js
mov
add
or
cli
test
or
mov
dec
push
rolb
push
test
push
mov
rol
sub
push
push
lods
cmp
ljmp
lea
clc
or
dec
ret
out
pop
out
xor
inc
jge
add
adc
fldenv
cmp
rclb
push
aaa
adc
frstor
xor
add
inc
rolb
and
out
sbb
mov
add
repnz
add
push
icebp
popl
out
jmp
dec
or
repnz
push
jo
pop
pop
stos
dec
es
jne
mov
ret
xor
dec
cmp
sahf
xchg
stos
push
sarb
pop
xor
enter
int
daa
push
sub
lods
push
in
mov
andb
push
shlb
mov
into
jo
andb
nop
negl
add
in
cmp
jne
mov
push
mov
std
jne
es
jne
pop
mov
cmpsl
call
aam
adcl
and
daa
and
mov
jns
pop
push
dec
or
adc
jmp
std
enter
push
xor
cld
cld
jmp
fisttpl
adc
in
adc
adc
inc
inc
inc
sarb
cmpsl
stos
inc
adc
fdiv
mov
xchg
js
sbb
ret
dec
push
xor
lret
test
cmpb
repnz
and
sub
cmp
sub
or
pop
inc
cmp
mov
lea
adc
push
adc
add
adc
add
ficompl
dec
dec
or
inc
enter
mov
pop
pop
nop
mov
push
cwtl
cmp
dec
and
mov
cmp
add
out
inc
movsb
jp
pop
mov
or
dec
movsl
test
sarl
or
or
or
adc
dec
jge
push
add
fisttps
add
xlat
xchg
add
adc
mov
je
mov
mov
cmp
jg
add
adc
jmp
mov
cmp
mov
mov
push
push
push
push
adc
cmpsl
lea
cmpsb
and
mov
ja
jae
popl
cmovnp
lock
and
lmsw
lea
or
cs
mov
cmpsl
and
inc
or
cmp
push
orl
xorb
pusha
pop
es
pop
js
or
push
in
xorl
dec
popa
xchg
sbb
add
fsts
mov
jb
addb
push
ret
push
xchg
push
inc
adc
orl
fndisi(8087
pop
xorl
mov
das
in
mov
add
repz
mull
add
add
sbb
xchg
cmp
scas
mov
rcrb
cmpsb
push
adc
or
adc
fadd
sub
add
add
fmull
fmuls
lock
and
sub
adc
add
sbb
mov
sbb
lcall
rclb
mov
gs
or
mov
adc
ret
lock
data16
arpl
pop
mov
push
out
push
or
std
pop
mov
incb
mov
inc
je
mov
lea
neg
jg
loop
mov
sbb
or
add
jmp
or
mov
or
loopne
inc
inc
push
mov
or
push
scas
mov
pop
add
mov
outsl
cmp
mov
inc
cmp
jb
jnp
add
cmp
add
int3
cli
cld
dec
mov
pop
pop
ret
and
sub
outsb
fcomps
push
or
adc
lock
mov
push
sub
or
scas
shl
push
scas
sbb
mov
divl
lret
xlat
subb
stc
addl
mov
jo
and
or
xchg
sub
cli
out
or
icebp
mov
pop
inc
movsl
and
push
xor
cmp
je
repnz
jns
xor
adc
or
aam
xchg
pop
addr16
mov
xchg
std
cld
sbb
inc
pusha
popa
add
aaa
adc
xor
or
sbb
lds
mov
add
jg
jmp
mov
add
clc
fsts
ljmp
flds
fdivrl
jecxz
xor
clc
pop
cwtl
inc
pop
mov
inc
jmp
cmp
add
add
add
sub
scas
and
pushf
jg
cmp
adc
cmp
out
xor
dec
push
js
or
and
scas
xchg
adc
in
jne
pop
mov
dec
add
mov
pop
test
lock
hlt
pop
ret
clc
dec
mov
and
je
adc
cmpsl
insb
lret
sbb
mov
xor
adc
and
or
test
or
push
test
push
jbe
push
add
outsb
or
add
push
movsb
and
movsb
in
fisubrl
movsb
push
adc
shl
cld
cltd
sbbb
std
mov
and
adc
sbb
test
inc
xor
or
hlt
push
inc
sub
out
inc
sub
das
imul
add
dec
push
xchg
cs
pop
arpl
push
adc
xchg
imul
clc
shll
jne
mov
inc
lock
mov
inc
mov
jne
adc
push
push
loop
add
iret
in
add
flds
push
and
js
cmpb
and
jp
xlat
fcom
and
xor
add
adc
addl
rcrl
cmpsb
sbb
inc
daa
cmp
dec
or
scas
sbb
push
andb
je
mov
pop
insb
sbb
cmpsl
test
xor
loopne
js
adc
or
cwtl
or
cli
push
and
mov
dec
jno
pop
add
add
jge
mov
nop
je
inc
push
jb
lea
sarl
ja
or
adc
xor
push
pop
cmp
in
inc
cwtl
mov
clc
outsl
fwait
clc
out
mulb
mov
es
cld
or
shrl
push
pushf
xchg
mov
mov
fs
jne
cmp
lods
sbb
fistl
xor
cmp
sbb
or
add
ret
push
xor
mov
mov
pop
inc
inc
in
in
fsts
xorb
push
es
shl
dec
ja
or
mov
or
jmp
mov
lods
pop
outsb
and
outsl
mov
rcrl
out
shrb
add
jmp
mov
xor
loopne
stos
mov
or
push
and
mov
and
push
pop
adc
dec
leave
mov
roll
mov
dec
jmp
adc
arpl
add
inc
fdiv
sub
pop
add
in
sub
mov
mov
inc
rclb
add
xchg
fidivrs
push
sub
or
fcomps
or
sti
or
gs
rcrb
cmp
or
icebp
adc
jne
adc
push
or
pop
cmp
and
jmp
xor
orb
push
or
loopne
daa
and
jle
mov
les
mov
jne
xor
pop
add
xor
test
subb
dec
add
sub
lods
push
cmovbe
pop
push
jge
test
push
add
rorb
sbb
in
inc
cmpsl
mov
dec
adc
push
pusha
pop
or
gs
adc
fwait
cmp
mov
pop
cmp
mov
add
or
jne
pop
das
mov
shlb
mov
jbe
inc
cmc
or
pop
cltd
pop
idiv
mov
mov
adc
pop
push
push
dec
add
punpcklwd
push
test
adc
rcll
xor
addps
and
cs
push
cmc
or
cmp
mov
jbe
test
pop
push
pop
mov
mov
dec
in
aam
add
mov
jae
mov
mov
pusha
sbb
dec
rclb
jns
sub
push
jle
adc
or
repnz
repz
hlt
add
or
rcrl
negb
imulb
xchg
loopne
mov
push
adc
sbb
rolb
aaa
inc
add
call
stos
push
fcoms
clc
jnp
and
sub
orb
mov
adc
xchg
lods
add
addl
push
cli
jp
or
jg
jb
xchg
pushf
mov
push
inc
adcl
inc
loope
je
mov
sub
push
lods
idiv
adc
dec
cmp
sbb
sbb
adc
mov
xchg
popf
inc
je
ss
addl
popa
loopne
daa
loope
call
paddw
jmp
dec
je
add
or
out
pusha
mov
push
or
insl
xor
add
sub
xor
and
push
jmp
add
sub
pop
push
push
les
lea
test
adcb
jge
jmp
add
xor
arpl
xchg
orl
push
lcall
push
jl
push
jne
mov
addr16
add
dec
loopne
bound
or
jne
pop
imul
out
xchg
test
je
fistpl
and
cmovp
pop
jns
mov
or
jo
inc
adc
add
or
sbb
pop
cld
push
dec
jmp
xchg
jbe
orl
leave
add
ja
mov
jmp
rorb
add
dec
pop
jne
punpckhdq
sbb
sub
and
pcmpeqb
icebp
cmp
pop
add
or
push
push
mov
push
fsubrs
cmp
inc
stos
orl
or
scas
jns
jmp
cmp
jae
mov
mov
push
mov
dec
loope
aad
sbb
add
push
add
xchg
sub
mov
loop
pop
or
mov
lea
add
sub
bound
pop
aam
sbb
iret
sub
ja
mov
pop
call
mov
ret
mov
add
xor
push
or
je
or
dec
cmp
mov
and
repz
mov
add
cmp
jle
fdivs
push
and
push
lcall
lea
bnd
push
dec
pop
and
enter
jo
addr16
sbb
dec
imul
add
sbb
or
pushl
pop
shl
sub
push
pop
shlb
inc
dec
sbb
ds
pop
nop
push
outsb
dec
test
pop
sub
adc
jl
sub
add
push
dec
popa
cmp
jo
loopne
xchg
push
into
sbb
imul
cmp
lret
push
mov
add
add
sbb
push
inc
push
or
leave
lods
movsl
stos
sbb
fdivs
insl
or
cmp
daa
lcall
lock
xor
jl
inc
inc
pop
and
data16
mov
inc
cmp
pop
sub
adc
stc
xchg
test
mov
fists
mov
cmc
mov
add
cwtl
jmp
loopne
inc
sub
lret
pop
adc
dec
lds
dec
dec
or
je
ret
or
leave
out
add
cmp
xchg
lret
mov
jmp
loopne
mov
mov
das
rolb
inc
add
xor
mov
adc
sbb
clc
sbb
shrb
sbbb
mov
movsb
mov
push
popf
fsts
mov
push
lods
or
lods
push
repz
icebp
jecxz
mov
push
mov
jg
lock
inc
into
add
aam
enter
rcrl
mov
inc
fdivrs
mov
lret
inc
dec
ss
jo
add
test
pushf
mov
lds
pop
sarl
shrb
cwtl
jge
orb
sbb
mov
pushl
test
adc
aaa
jb
adc
pop
mov
cwtl
ror
push
pop
pop
cwtl
loopne
mov
push
insb
scas
and
jmp
push
and
ss
mov
mov
je
sahf
xor
jl
jge
jnp
add
ljmp
pop
movsb
adc
dec
pop
lret
movsb
sbb
and
xchg
sahf
rclb
mov
fmul
push
shll
adc
fwait
fs
dec
push
or
jo
cmp
in
call
add
and
push
push
push
lods
dec
pop
pusha
cmpsl
sub
jle
cmp
or
xorb
stos
lcall
fadds
push
pop
mov
and
mov
test
fisttpl
jmp
adcb
and
pop
sbb
push
in
push
int3
add
outsb
adc
cmpsb
add
call
mov
and
dec
pushf
ja
or
mov
cmpb
jmp
in
push
dec
call
jbe
sbb
push
lock
add
push
cmpsl
xor
jmp
pop
mov
dec
pop
xor
pop
or
arpl
mov
cmp
xlat
repnz
jle
push
sbb
mov
mov
sar
fwait
add
jmp
fmuls
pop
or
adc
je
insl
out
dec
loope
pop
jne
mov
inc
insb
pushf
fwait
bound
popa
jp
inc
and
das
bound
data16
popa
jns
sub
popa
push
push
xor
aad
dec
xchg
cwtl
mov
mov
int
mov
cmp
push
movsb
push
aad
mov
jnp
ficoms
pushf
inc
adc
nop
adc
inc
jmp
mov
push
gs
fs
or
adc
push
jmp
cs
dec
out
mov
or
push
and
iret
repz
adc
add
cld
sub
mov
lcall
jmp
enter
jmp
ja
or
data16
inc
fcoml
mov
cmp
insb
add
popa
pop
call
sub
les
push
cwtl
mov
mov
jmp
sahf
ret
inc
sahf
in
push
hlt
addr16
or
pop
jns
ret
push
xchg
push
test
mov
fmuls
sti
daa
sub
xchg
std
jge
push
or
je
mov
xchg
popa
cmp
jmp
testb
jne
shr
and
pop
xlat
leave
lea
outsb
loopne
nop
jle
rol
cli
add
aam
pop
mov
or
ja
outsl
xor
pusha
jmp
push
and
jne
push
pop
inc
push
movsl
sbb
stc
xor
loopne
lea
inc
and
cmp
je
or
and
fsts
or
jmp
movsl
bound
pop
call
mov
and
push
pop
popf
pusha
sub
push
mov
cld
aad
or
jmp
test
cmp
jg
jbe
ficompl
mov
in
push
fucom
mulb
xchg
jns
andb
rorb
cmp
aam
xchg
push
lea
mov
ret
inc
icebp
push
loopne
mov
push
or
push
adc
jns
icebp
push
dec
push
inc
pop
lret
lods
loopne
inc
imul
sarl
scas
add
jae
test
andl
inc
loopne
test
pop
push
std
mov
adc
pop
or
movsl
cmp
sbb
xor
xchg
xchg
pop
sarb
lock
sbb
out
inc
enter
test
mov
rcrl
or
enter
es
jle
jb
or
jle
pop
mov
movb
jmp
insl
popa
jecxz
insl
xor
stc
std
add
add
shll
jo
add
test
sbbb
xchg
sbb
sahf
clc
mov
fcomps
or
or
dec
stc
dec
add
repnz
inc
repnz
xor
or
and
and
and
mov
inc
push
imul
dec
les
test
orb
rcr
sbb
adc
sti
mov
mov
or
sarl
jmp
mov
push
lods
repnz
sub
clc
scas
inc
dec
sti
lods
test
add
or
xor
mov
or
inc
mov
inc
mov
daa
js
aam
rcl
rclb
add
mov
adc
je
test
fmull
int3
imul
shl
push
pop
add
loope
aam
int3
xor
xchg
add
mov
xor
movsb
push
ret
pop
aaa
mov
sbb
dec
mov
dec
xor
sbb
jne
sbb
hlt
data16
insb
add
push
dec
pusha
and
xor
push
arpl
lret
loopnew
fcoml
sbb
lret
mov
or
pop
pop
popf
enter
shrb
les
add
push
out
imul
dec
popf
mov
cld
xor
inc
adc
jo
adc
and
in
xchg
xor
clc
jno
insl
dec
stos
push
xchg
insb
repnz
fs
loope
shrb
pop
pushf
sbb
add
xchg
pusha
xor
push
jns
add
jne
pop
lds
cmp
rcr
int3
int3
add
inc
inc
push
in
jne
imul
add
mov
add
fisubs
or
xchg
outsb
jb
mov
cltd
jecxz
lahf
fsubs
test
jge
inc
sbb
rcrb
push
mov
adc
jbe
push
inc
or
test
adc
imul
pusha
lcall
and
movsb
notb
sarb
in
pop
divl
xchg
ds
push
inc
js
ds
mov
adc
dec
pop
mov
mov
in
xchg
pop
pop
pushf
or
adc
adcb
jns
mov
add
jbe
rcrl
mov
arpl
orl
and
xor
add
cmp
and
nop
mov
jmp
push
mov
jbe
fnstsw
and
ret
adc
or
inc
cmp
mov
test
push
jae
cmp
or
jmp
mov
or
sub
ss
dec
orb
sahf
std
jae
cmpl
jne
push
cmp
push
or
das
nop
mov
dec
pop
adcb
adc
mov
cmp
popf
orb
in
mov
in
hlt
fdivrs
jo
cmp
pop
inc
mov
addl
aam
popf
xchg
test
cs
iret
lret
xchg
call
loopne
pop
stos
xchg
cmp
cmpsb
or
or
dec
cmp
sti
jecxz
loopne
pop
lahf
lea
push
pop
ja
mov
movsbl
testb
inc
cmp
test
sbb
push
sar
pop
mov
sub
mov
jp
mov
lahf
call
rcr
jnp
pop
cs
les
lret
stos
xorl
test
push
sub
fldpi
in
aam
into
inc
pushf
pop
or
inc
lret
in
add
addl
sbb
test
or
loop
push
push
or
mov
adc
loopne
js
fdivl
add
adc
shrl
or
lea
ja
lods
shrl
fsubrs
sbb
hlt
hlt
stc
roll
int3
je
or
inc
insb
inc
sub
lock
in
mov
xchg
test
jo
sub
adc
sub
jbe
mov
mov
js
fildl
loopne
add
movb
inc
xor
movsl
cmp
testb
incl
insb
cmp
sbb
imul
mov
pop
pop
pusha
inc
imul
add
or
lock
jb
cmp
dec
pusha
jmp
add
pop
adcl
mov
sub
adc
or
ds
mov
mov
inc
movsb
pop
iret
adc
dec
aad
cmpsl
or
mov
lock
out
jge
push
arpl
testl
xor
outsb
cmpsl
popf
xchg
pop
das
mov
jl
scas
gs
add
icebp
jge
testb
in
popa
or
lret
rcrl
jl
mov
sub
fsubl
rorb
out
add
test
sbb
inc
inc
push
or
mov
jl
xor
push
xor
cmp
int3
pushf
sub
loopne
rorl
shl
dec
mov
mov
ss
add
xor
test
inc
or
sbb
imul
es
dec
or
pop
ret
xor
lods
minps
pop
mov
add
ret
mov
dec
aas
or
xor
dec
pop
cmp
stos
mov
sub
jae
cs
sbb
loope
test
sub
outsb
jo
jmp
or
ret
addr16
shrl
adc
outsb
je
arpl
or
test
insl
shrb
mov
adcl
pop
push
aaa
fbld
cmp
add
sub
dec
xchg
xchg
adc
notb
adc
out
test
mov
mov
push
aad
shl
shl
add
push
add
mov
sbb
std
imul
hlt
jmp
cmp
jle
cmpsl
mov
sub
and
mov
pop
push
xchg
mov
pop
es
add
xor
sub
adc
add
pop
test
push
shr
push
push
insb
cmpsb
fiadds
push
or
mov
and
adc
or
sbb
jnp
mov
sub
inc
sbb
xor
cmp
stos
ret
adc
jecxz
stos
sbb
pop
jne
popf
push
push
push
scas
data16
mov
cmp
call
loop
cs
cmpb
jne
xor
or
je
inc
stos
mov
insl
sbb
sub
sub
lcall
sub
jp
mov
add
bound
sahf
push
arpl
rolb
ja
sub
pop
push
push
push
mov
dec
and
mov
inc
mov
rcll
lock
in
adc
sub
and
cmpsl
sahf
or
popf
or
add
inc
rcrb
mov
lret
sub
or
rorl
fidivrl
sub
xor
pop
xor
xchg
or
sbb
movl
mov
mov
hlt
and
lea
sti
jbe
sbb
pusha
adc
stos
and
inc
push
xchg
add
push
lret
iret
sbb
shll
fwait
pop
adc
clc
repnz
sahf
mov
mov
mov
inc
push
dec
sub
imul
inc
into
addb
cmp
enter
shl
fidivs
cmp
add
inc
jmp
movsb
xor
stos
jmp
dec
loopne
in
test
sub
sar
ret
cmpsl
and
mov
inc
sub
add
sub
outsl
inc
daa
push
movsb
test
mov
test
daa
mov
sub
or
decl
in
or
and
in
jle
cmp
adc
dec
xor
pop
sbb
pusha
add
mov
sbb
and
pop
pop
dec
outsb
jne
and
adc
xor
sbbb
inc
aam
adc
loopne
imulb
jle
aam
data16
scas
inc
mov
dec
pop
sub
and
pop
out
sub
adc
arpl
lcall
push
cmp
test
push
pop
int
fsts
pushf
adc
pop
sub
jae
add
mov
inc
cmpsb
in
std
push
into
inc
aam
xchg
les
mov
neg
movsl
daa
pop
mov
mov
mov
push
cli
movsb
add
loope
adc
mov
mov
cmp
mov
pop
or
testl
and
int
cmp
jo
cmp
out
jno
xchg
cmp
adc
sub
dec
repz
jge
nop
mov
movsb
push
sbb
adc
pop
cmp
cltd
js
sub
or
pop
jp
adc
aam
lods
mov
pop
ret
adc
xchg
test
lcall
leave
or
mov
pop
hlt
cmpsl
repnz
add
aam
fxrstor
dec
xchg
dec
outsb
stos
in
adc
sub
fstl
xor
jmp
push
jl
or
and
mov
sub
or
rolb
ss
add
test
mov
or
adc
rcrl
jb
repnz
jb
mov
jnp
jmp
arpl
faddp
adc
xchg
loopne
cs
in
lods
and
jo
test
daa
inc
mov
outsb
les
cmpsb
test
jecxz
push
mov
ror
pop
jge
inc
jmp
xor
call
jne
lock
jbe
mov
aam
add
pop
sbb
fadds
add
push
cmp
sbb
cs
out
sbb
pushl
insl
and
lahf
and
test
jp
add
push
mov
stos
mov
stos
mov
testl
adc
jns
insl
adcl
add
out
loopne
sub
lock
loopne
mov
icebp
push
jge
subl
inc
cmp
jmp
and
mov
or
or
xchg
lahf
mov
adc
add
push
pop
sbb
mov
aaa
icebp
int
jge
int3
dec
push
clc
insl
xchg
or
cwtl
out
and
pop
adc
pushw
jb
scas
add
cmp
add
pop
add
mov
ss
pop
pop
sub
call
add
pop
sbb
imul
pop
out
and
xchg
addb
mov
shll
push
push
mov
sbb
test
fwait
mov
mov
jle
mov
adc
mov
lock
fdivl
mov
cmp
loopne
sub
sub
lea
sub
insb
sub
or
lods
sub
in
orl
mov
je
movsl
clc
pusha
push
add
in
xchg
push
pop
jl
mov
std
or
pop
push
add
arpl
test
cmp
lock
inc
xor
or
mov
fcoms
inc
sbb
loopne
call
add
jecxz
jbe
bound
outsb
sti
std
and
loopne
adc
lods
popa
cmc
jo
cmp
push
and
jecxz
sub
pop
mov
xorl
scas
sub
xchg
inc
test
fst
pop
out
mov
inc
push
add
push
ret
fstl
sbb
lret
pop
jl
xor
jne
add
sub
int3
push
adc
addb
xchg
addl
mov
mov
sub
mov
mov
jbe
mov
aam
inc
ds
stos
lret
mov
leave
es
sahf
lock
push
mov
or
outsb
xor
loope
sub
ret
xchg
shlb
add
xor
dec
sbb
mov
mov
pop
in
fidivs
scas
test
data16
sbb
lea
mov
and
pop
repz
sti
sbbb
mov
dec
pop
cld
dec
xchg
nop
xor
ret
cmc
ds
sbb
fsubr
call
mov
jg
cwtl
cmp
dec
adc
cmp
and
add
mov
pop
sbb
fucomi
leave
xor
and
cmpb
dec
xchg
xchg
add
cmc
mov
sbbb
sti
push
dec
fldcw
push
xchg
rcrb
inc
inc
dec
daa
or
sub
cmp
aaa
add
sub
and
test
jae
mov
aaa
cmp
dec
adc
loop
mov
andl
jnp
lret
xchg
add
lods
add
std
add
push
pop
xchg
push
jmp
adc
ljmp
and
movsb
push
sub
lods
clc
hlt
mov
xchg
jmp
adc
rorb
mov
cltd
mov
out
add
mov
imul
xor
in
les
xchg
enter
pop
add
push
mov
xor
popf
lcall
sahf
jbe
cli
pop
ja
mov
scas
mov
movzbl
sub
test
es
push
sub
mov
adc
call
xchg
mov
mov
fsubrl
sbb
mov
mov
dec
xor
and
mov
test
adc
mov
push
xchg
imul
mov
or
inc
push
sub
dec
and
jl
xor
mov
mov
mov
dec
mov
scas
and
hlt
adc
mov
xchg
mov
inc
rclb
icebp
outsb
fistpll
insb
jne
jbe
mov
adc
and
xlat
cmpsb
sbb
jnp
xchg
and
inc
cmp
xor
cmp
dec
dec
dec
das
es
mov
and
add
pop
sub
nop
xor
and
leave
pop
mov
ror
enter
sbb
dec
pop
mov
xchg
cli
movsb
xchg
sar
stos
mov
push
lods
cltd
sub
nop
call
push
sbb
mov
sbb
push
test
aad
inc
in
mov
push
fsubr
int3
nop
dec
sub
dec
adc
mov
and
and
call
jecxz
adc
in
pop
mov
fwait
std
add
xchg
addr16
mov
mov
andb
xchg
sub
js
sbb
enter
in
mov
imul
rolb
adc
mov
sub
in
stos
movsl
rcl
mov
lret
repnz
cs
call
test
xchg
mov
adc
and
and
mov
adc
xchg
rolb
pop
lret
pop
xchg
pop
mov
jb
push
lods
enter
repnz
mov
mov
adc
call
fcompl
sbbb
leave
add
fmuls
jb
aad
loopne
nop
repz
movsb
xor
fdivl
cwtl
aam
push
stos
dec
xor
pop
call
aam
enter
enter
nop
imul
sub
xchg
aam
and
lods
xchg
sti
xchg
aam
inc
xor
in
bound
push
ret
outsb
push
jbe
xchg
sub
daa
pop
lods
push
xchg
jp
call
sub
mov
orb
mov
int
pop
fadds
cmc
ffreep
dec
stos
xor
add
push
addl
ror
adc
pusha
sbb
daa
cli
les
xchg
outsb
mov
js
xchg
xor
jg
cwtl
mov
into
lret
mov
mov
pusha
and
sbb
inc
xchg
xor
jne
sbbb
adc
dec
aaa
mov
jne
vmovhps
sbb
jp
mov
fcoml
les
or
xchg
andb
or
sub
mov
daa
orl
movsb
icebp
nop
push
pop
shr
lds
add
jp
or
or
movsl
daa
add
dec
iret
outsl
mov
add
add
add
or
cmp
and
ficomps
movsl
sbb
sbb
adc
sub
mov
cmpsb
xor
rcrb
jo
insl
xchg
icebp
nop
sbb
rcrl
pop
imul
push
sbb
add
jns
mov
mov
mov
rclb
mov
movsb
je
jnp
test
popw
or
andb
ja
in
divb
adc
jo
pusha
lock
mov
xor
fnstenv
enter
gs
adc
add
dec
push
out
adc
rcrl
mov
pop
sub
mov
and
hlt
add
sbb
imul
dec
xor
enter
add
mov
loop
sarb
imul
test
sti
inc
hlt
mov
fcoml
lret
sti
sub
out
and
mov
add
sbb
add
sub
cmp
lods
push
fcoml
xor
call
xor
rcrl
add
loopne
ficoms
popf
pop
push
push
cmp
mov
in
or
mov
inc
int
or
cld
fisttps
jnp
jno
jecxz
fldz
decl
push
sbb
lods
jmp
and
rcrb
inc
ljmp
divl
mov
jo
jmp
lea
out
jle
test
pop
mov
mov
rorb
sbb
mov
es
fisubl
and
fcomp
rorb
dec
jb
dec
addl
add
clc
mov
xorb
mov
sub
sbb
rclb
mov
std
push
stos
add
lret
inc
fdivrl
xor
cltd
dec
sbb
cmp
dec
pop
jno
dec
iret
out
mov
mov
lahf
cmpsb
fldcw
rcll
rol
lods
shll
cmp
pop
or
jne
movl
inc
pop
enter
cmp
std
jne
mov
subb
aaa
add
mov
les
adc
and
push
or
push
adc
fadds
sbb
adc
adc
mov
rolb
ljmp
mov
cmp
into
std
xor
push
jmp
pop
out
movsl
mov
push
repnz
dec
add
and
cmpsl
aaa
inc
cli
and
add
aas
rolb
jnp
ret
jmp
cmp
jbe
roll
xor
pop
inc
inc
push
mov
imul
imul
sarl
outsb
push
subb
or
leave
mov
sub
inc
jmp
mov
mov
cmp
pop
pop
lea
ljmp
jp
lcall
add
jb
mov
adc
movsb
push
or
cmp
inc
pop
adc
loop
jb
push
dec
mov
repz
xchg
sbb
cs
loopne
sbb
jle
fninit
inc
cmp
inc
jbe
mov
push
jle
or
jne
ss
rcrb
stos
mov
jmp
js
add
push
jnp
cmpsl
cmp
iret
adcb
mov
push
es
loopne
add
fwait
sbb
bound
sub
mov
test
xchg
cmp
adc
add
popa
push
and
pop
fsts
aam
je
sarl
inc
cmp
adc
jno
ret
jne
mov
pop
aam
dec
popa
pop
push
adc
push
adc
pop
mov
out
xor
xlat
testb
insb
ljmp
add
jge
addb
push
sub
or
xor
mov
into
mov
out
or
sub
inc
jmp
xor
or
mov
mov
out
add
pusha
sbb
aaa
sbb
cmp
ljmp
adc
ja
pop
fwait
jno
daa
ljmp
xchg
xor
xor
flds
imul
dec
movsl
push
jp
add
mov
js
std
and
dec
fucomp
xchg
rcrb
and
jns
push
rclb
add
es
push
js
sbb
mov
lea
mov
mov
jnp
jl
mov
xor
add
cmpl
ret
or
xchg
pop
ret
adc
testl
sub
dec
mov
xor
jo
sub
xorl
leave
and
popa
add
fcomps
incb
outsl
mov
xorb
mov
pop
sbb
icebp
adc
std
das
int3
pushf
inc
lcall
mov
adc
push
dec
jnp
sbb
sub
xchg
insb
mov
insl
fsubrs
and
ds
test
lock
cmp
in
dec
shr
aam
jle
jg
into
inc
push
faddl
or
imul
adc
pop
cld
inc
add
add
dec
test
aad
jns
or
inc
add
add
push
icebp
pop
xor
adc
inc
outsl
push
sub
cmp
mov
test
cwtl
pop
je
inc
ret
or
ds
mov
inc
mov
xor
in
mov
push
jb
add
xor
or
mov
pop
xchg
ffree
insb
leave
cltd
sti
pop
pop
lcall
mov
push
and
clc
ret
or
ret
mov
mov
pusha
out
les
hlt
inc
test
cmp
insl
out
test
push
push
push
inc
es
xor
aas
mov
scas
push
das
sub
aas
aam
aaa
jo
vmread
addb
clc
sbb
inc
pop
test
add
arpl
xor
cmp
jo
popl
pop
in
insb
or
add
jg
ret
add
or
fwait
out
jne
push
cmpsb
loope
inc
mov
sub
lret
jo
inc
insb
pop
arpl
mov
xor
clc
xor
mov
adc
adc
loopne
cmpsl
dec
jl
dec
jg
or
xchg
and
mov
push
aas
cmp
int3
push
push
add
fwait
inc
aad
push
clc
mov
add
in
sbb
call
ja
pop
clc
iret
push
adc
lea
mov
mov
or
sbb
jb
pop
cmp
inc
mov
jb
dec
pop
cmp
xor
and
pop
pusha
cmp
sbb
jmp
push
mov
test
lahf
ds
pop
or
and
pop
daa
xlat
leave
sarb
adcl
cmpsl
notl
orb
nop
rol
xchg
mov
jg
mov
push
adcl
add
fnstcw
or
fwait
pop
rol
dec
subl
mov
gs
jnp
xor
movsb
cmp
and
scas
push
iret
aam
inc
push
daa
inc
or
aam
add
jbe
or
adc
jo
into
mov
dec
cmc
cmp
mov
mov
and
sub
or
inc
pop
xor
cs
arpl
push
add
jbe
bound
jbe
shlb
cmp
nop
xor
xchg
sbb
xchg
out
pop
mov
dec
adc
mov
adc
clc
xchg
add
sub
push
push
add
loopne
or
test
mov
lods
ja
sub
mov
or
xlat
cmp
outsb
call
jg
hlt
lret
sub
add
sbb
or
and
pop
add
into
in
sub
inc
sub
aas
pxor
push
push
lock
add
cmp
loop
shr
je
sarb
inc
fistpll
jg
push
inc
adc
and
xchg
dec
movsl
xor
pusha
jo
xor
test
shlb
fidivrl
and
add
xchg
mov
je
xor
fldt
add
add
jne
fidivs
adc
sbb
cli
pop
pop
ret
inc
and
ss
sbb
mov
push
mov
bound
add
cli
shr
add
mov
pop
push
and
pop
adc
push
push
daa
jecxz
in
and
pop
mov
xchg
outsb
adc
xchg
cmp
adc
and
push
ficoms
jae
mov
aam
push
fisubs
push
or
shll
enter
imul
cltd
dec
adc
sbb
sub
mov
dec
je
add
cmc
cli
adc
pop
add
push
mov
mov
pop
mov
and
rcrb
push
add
and
in
iret
fdivl
enter
add
mov
mov
dec
push
mov
fsub
inc
ss
mov
sbb
pusha
sbb
je
call
lock
and
mov
lret
into
sbb
add
arpl
out
fstpl
addl
cmp
ja
jl
popa
xchg
mov
inc
sbb
mov
cmp
add
pop
stc
mov
or
sbb
dec
add
and
mov
je
or
add
cmc
clc
jmp
sbb
lock
add
push
cmp
repnz
mov
pusha
iret
inc
sbb
fstpl
xchg
mov
cmc
fmull
stc
rorl
xor
shrl
pop
or
xchg
jmp
decl
cmp
int3
loope
pop
les
mov
mov
and
dec
clc
fstl
mov
lock
pusha
mov
mov
and
pop
mov
sbb
rep
sahf
out
inc
dec
mov
jnp
mov
test
push
outsb
ja
cwtl
ret
pusha
icebp
pop
pop
push
rclb
daa
rolb
fistpl
frstor
mov
cmp
or
jne
mov
jl
add
sti
xchg
addb
sbb
pusha
add
adc
push
inc
inc
add
pop
pop
mov
push
push
cltd
jmp
inc
faddl
test
xchg
and
fnstsw
inc
test
test
rcrb
testb
fdivrs
xchg
and
ret
and
push
push
test
xchg
rorl
subb
sub
fisttps
push
mov
js
rorb
ja
outsl
mov
test
cld
divl
adc
das
dec
call
pop
mov
sbb
inc
jl
add
aas
cmp
and
jle
mov
mov
mov
add
les
mov
push
mov
add
mov
shll
fucomip
stos
bound
add
out
sbb
mov
js
cmp
lds
jb
xchg
lret
gs
fadds
sub
pop
sarb
push
dec
mov
lods
std
mov
inc
pop
movsb
fcoml
jne
lds
movsl
inc
pop
inc
rcl
stos
insb
loope
enter
dec
push
jp
shll
dec
dec
jp
fwait
stc
xchg
imul
jno
idivb
testb
in
pop
xor
dec
or
cmp
xchg
loopne
mov
dec
clc
cmp
dec
cs
sarb
cmp
cmp
and
andb
cmp
lret
or
fdivrl
mov
sub
popa
jl
pushf
popf
xor
lahf
dec
dec
jne
or
pop
add
cmpl
cmpsl
fmuls
lahf
ret
add
mov
jbe
mov
pop
je
mov
sub
loope
mov
pop
clc
mov
arpl
or
mov
xor
cmpsl
je
and
dec
es
int3
int
or
inc
loopne
loope
adc
loopne
lahf
mov
dec
aas
insb
jne
inc
sub
adc
aad
pop
jle
and
shlb
jne
cmpb
mov
add
or
and
cmp
inc
xor
xchg
icebp
dec
push
imul
jmp
push
lcall
stc
push
pushf
leave
mov
andl
scas
push
jecxz
mov
test
mov
push
dec
push
or
mov
pop
or
sbb
adc
scas
sub
popa
cmp
leave
jns
push
fisubrl
aam
loopew
and
rolb
or
push
xor
inc
hlt
sbbb
add
or
cmc
push
inc
lea
push
inc
out
lods
pushf
adc
xor
pusha
dec
push
iret
ret
popa
lods
pop
imull
popa
in
mov
lds
cmp
add
and
xchg
cmp
in
gs
test
out
loope
xchg
sahf
jnp
loopne
dec
cmpsl
or
ret
mov
cmp
jns
daa
mov
cwtl
pop
lock
jbe
lds
mov
cld
int
inc
add
cmp
push
pop
mov
push
scas
jge
jle
pop
enter
mov
inc
ss
dec
jno
mov
frstor
or
mov
or
adc
loopne
add
xor
pop
pop
andl
adc
adc
pop
pop
ret
sub
pop
hlt
add
mov
incb
mov
and
xor
ret
addr16
cmp
jno
mov
rcr
lret
adc
jbe
leave
addb
fisubs
pop
mov
dec
push
add
ja
mov
mov
mov
push
cmp
sbb
cmpl
mov
pusha
rcl
pop
mov
jns
add
jl
pop
mov
gs
rcrb
mov
in
test
sub
repnz
mov
xor
mov
xchg
adc
inc
neg
sub
inc
shlb
inc
imul
inc
nop
inc
pushf
inc
sub
mov
adc
rcll
inc
out
inc
stos
or
sbbb
ret
mov
lds
pop
mov
inc
daa
add
xlat
cmp
push
inc
jo
inc
adc
xchg
icebp
add
push
xor
mov
aas
stos
rorb
lret
jae
scas
push
ret
sbb
inc
inc
inc
inc
stos
or
xchg
dec
inc
adc
outsb
add
pop
ja
adc
in
inc
inc
dec
inc
pop
add
arpl
inc
xlat
xchg
add
imul
mov
test
pop
inc
cmp
pop
mov
sbb
sub
lds
mov
or
pop
push
cmp
add
jmp
push
mov
jmp
dec
les
repnz
cmc
roll
cmpsl
adc
jge
cmpsl
mov
or
jmp
xchg
in
sbb
or
popl
cmp
testl
jne
sbb
mov
dec
mov
mov
add
pop
mov
xor
rol
inc
rol
sbb
sub
add
pop
jmp
fwait
mov
mov
dec
lahf
clc
mov
jecxz
icebp
mov
je
dec
add
mov
sub
mov
and
int3
nop
dec
lcall
sub
pop
dec
or
lcall
int
enter
daa
inc
mov
inc
add
or
or
pushf
rolb
pop
push
pop
add
and
adc
pop
mov
push
mov
mov
enter
lea
lret
clc
mov
lret
push
sub
nop
pop
cmp
test
cmpsb
fsubl
repz
shrl
test
stos
jmp
xchg
stos
sub
jle
add
lock
mov
pop
dec
mov
mov
or
push
xchg
sub
add
leave
data16
imul
lcall
nop
divl
shlb
or
inc
mov
aaa
into
movsl
mov
and
sbb
xchg
stos
mov
aaa
push
xchg
mov
sbb
push
jb
mov
inc
sub
push
mov
or
dec
mov
push
pop
pop
jbe
cmp
imul
dec
sbb
jecxz
or
add
mov
jbe
xor
stc
mov
pop
cmpsb
in
aad
add
loopne
jb
xor
test
mov
aad
movsl
mov
xchg
jns
xlat
scas
aaa
mov
jecxz
xlat
mov
mov
push
xor
jno
dec
xlat
in
adc
adc
and
insb
aam
inc
xlat
and
fnstsw
fnsave
and
and
int
xor
call
fnstenv
test
inc
repnz
inc
push
fldl2e
xor
movsb
ja
sbbl
notl
fildl
cmp
int3
je
lret
inc
fcmovnu
and
int3
es
push
and
and
push
xchg
pop
cmp
fstpt
aaa
int3
push
xchg
dec
daa
mov
outsb
or
xor
xchg
push
aaa
push
and
and
mov
fwait
sahf
add
mov
mov
mov
lods
mov
cs
xorl
mov
xchg
mov
int
xchg
mov
mov
pushf
pushf
mov
sub
mov
cmp
inc
dec
xor
repnz
jno
outsb
or
iret
push
mov
cltd
mov
sub
nop
xchg
lods
lods
lods
cs
rorb
rorb
sub
hlt
dec
stos
sbb
insb
sbb
inc
jns
mov
fnstcw
and
scas
or
div
and
nop
rorb
pop
sahf
cmp
pop
push
xchg
and
addl
push
orl
cld
pop
les
inc
or
pop
pop
add
inc
jnp
add
movb
push
mov
jae
addl
xor
sbb
idiv
mov
out
test
mov
inc
loop
push
loope
pop
movsl
lods
xchg
cwtl
add
push
jg
inc
adc
mov
and
xor
ljmp
mov
mul
rep
inc
loopne
or
mov
movsb
pop
xchg
testb
rolb
lock
cltd
inc
jno
movsb
or
in
lock
lock
cmp
or
mov
push
sbb
or
jo
popa
and
inc
inc
inc
adc
inc
cmp
add
add
inc
pop
or
or
or
daa
rorl
mov
shl
jg
ljmp
gs
std
dec
clc
jl
outsl
push
push
dec
adc
push
and
mov
pop
dec
push
pop
outsl
inc
or
push
jbe
jle
dec
addr16
out
outsl
ja
jo
int3
adc
and
and
mov
pop
dec
in
xor
fildll
mov
jbe
lea
inc
out
mov
rcl
imul
xor
dec
add
sub
enter
pop
fldt
inc
inc
push
negl
ret
mov
adc
shrb
lret
ret
mov
shr
addl
add
or
push
mov
clc
push
add
jae
pop
inc
jo
imul
fsts
out
sub
sub
fists
dec
or
sarl
xchg
push
mov
arpl
cs
mov
mov
stos
add
jmp
mov
cmp
imul
mov
imul
add
jne
cmpl
mov
cmp
cmp
je
cmp
and
cmp
loope
xchg
pop
sub
loope
rol
fucom
popa
push
xchg
mov
push
cmp
arpl
lret
mov
es
add
xor
adc
inc
cmp
rcl
push
mov
xchg
inc
ret
cli
add
fstpl
cld
and
inc
and
jg
loopne
pop
pusha
mov
inc
mov
test
fwait
ret
andl
or
stc
mov
in
es
adc
inc
jb
fmul
cmpl
pop
subl
or
pop
cmp
mov
cmpb
popl
cs
mov
cmp
test
sbb
imul
jmp
rcll
loopne
sbbl
cmp
rorb
mov
and
shll
ja
lods
sbb
mov
sbb
mov
inc
rol
adc
pop
test
xchg
jmp
inc
or
mov
add
sbb
mov
cmp
enter
daa
add
cmpsl
and
push
mov
xor
dec
mov
into
mov
jmp
outsl
mov
mov
and
add
loop
push
inc
sub
icebp
or
shll
mov
mov
jne
incl
rcrb
insb
mov
mov
pop
pop
add
out
dec
mov
add
in
int3
imul
sbb
in
add
inc
inc
sbb
push
scas
mov
mov
aas
adc
xor
into
sbb
and
arpl
mov
mov
lods
movsb
xchg
cld
enter
push
or
jne
dec
cltd
dec
mov
push
shl
cs
dec
clc
fisubrl
add
sub
fidivrl
movsl
ss
sub
jmp
add
jl
push
inc
cs
je
cmp
push
pusha
mov
or
pop
js
and
cmp
add
leave
shrb
ljmp
popa
push
pop
jle
inc
fildl
mov
mov
sbbl
push
cs
mov
mov
popl
test
es
push
cli
daa
or
mov
add
pop
and
cmc
and
movsl
les
xor
icebp
push
pop
cmp
dec
enter
adc
dec
scas
fmuls
sbb
lea
int3
arpl
fimuls
bound
adc
js
loop
ss
jb
jg
test
cmp
lea
add
add
clc
gs
push
lock
imul
mov
orl
insl
and
push
test
loope
xor
js
pop
add
negl
inc
add
push
push
je
cltd
hlt
outsl
sbb
lock
sub
lea
scas
mov
xor
pop
adc
xor
push
or
pop
dec
mov
iret
xchg
add
push
push
pop
push
int
lahf
or
fadd
mov
nop
leave
loopne
jl
mov
pop
and
lock
outsb
fidivrs
movl
add
pop
movb
xor
ficompl
popf
push
jle
jle
movb
push
mov
pop
sub
sbb
lret
pop
movsl
adc
sbb
ficompl
or
push
inc
fidivrs
or
fnstsw
sbb
or
inc
aas
add
fstl
push
addl
pop
mov
mov
lret
faddl
add
xor
rcrb
and
das
rorb
adc
js
add
sub
shll
adc
std
cmc
test
jl
out
nop
fstpt
iret
mov
pop
pop
push
push
mov
test
cwtl
mov
gs
or
sarl
pop
ret
add
xor
jmp
xchg
ja
sub
pusha
scas
mov
sbbb
gs
inc
jo
sbb
dec
jne
stos
mov
mov
repz
sub
xlat
test
push
orb
jmp
pop
clc
sbb
negb
or
and
cmc
cmpsl
loop
mov
rorl
jmp
sub
push
aaa
xor
fistl
mov
jne
jmp
lock
test
aam
adc
daa
cwtl
fcomp
loopne
sub
mov
movl
pushf
out
add
jmp
lods
push
mov
and
leave
pop
idivb
or
mov
outsb
add
dec
push
push
sub
bound
loopne
sbb
mov
inc
mov
adc
or
xor
xchg
mov
mov
sar
xor
pop
sbb
lock
int
paddq
dec
sub
xor
cmp
cli
mov
mov
test
sub
mov
movb
mov
add
fcmovnu
adcl
push
lock
jae
and
pop
mov
adc
mov
repnz
push
sbb
lea
pop
pop
push
sub
push
outsb
jg
mov
cmp
jecxz
or
sub
leave
testl
pop
mov
add
push
cmp
notb
xchg
imul
pop
arpl
jb
xchg
xchg
das
push
push
jb
pop
addr16
aaa
sbb
es
add
push
add
jnp
incb
ss
fs
daa
jg
push
test
adc
jmp
mov
cmp
or
les
inc
mov
fmuls
adc
stos
mov
jecxz
dec
pop
inc
mov
dec
push
js
push
mov
push
popf
pop
pop
or
xor
adc
ficomps
fnclex
dec
sbb
xchg
add
cmp
js
addb
subb
addb
or
cmp
movb
or
mov
push
clc
stc
icebp
jge
or
adc
push
mov
lea
fisttps
push
pop
dec
adc
in
hlt
clc
sbb
xchg
pop
lock
and
test
push
or
lods
ret
sub
add
or
xor
xchg
or
mov
pusha
sub
adc
and
adc
mov
add
pop
xchg
xchg
cmpsl
mov
add
outsb
add
add
sarl
ficoms
add
lret
sbb
test
mov
ficoml
hlt
jge
inc
push
sbb
icebp
fnsave
fdivrs
pop
and
or
js
insl
add
mov
jo
mov
mov
lds
addr16
aad
cmp
std
into
xchg
fs
adc
idivl
push
dec
inc
add
mov
hlt
hlt
jmp
mov
lods
fsub
scas
mov
hlt
in
out
add
test
adc
inc
sti
or
xchg
jno
ret
scas
scas
inc
enter
cmp
xchg
pusha
adc
mov
and
shlb
sub
dec
inc
jns
dec
ja
test
lahf
adc
je
loopne
mov
dec
sub
jmp
jns
dec
jnp
inc
push
aas
clc
lock
mov
add
jb
pusha
lods
and
or
push
movzbl
test
lock
or
addb
inc
pushf
adc
pop
lea
sub
nop
or
adc
rcll
pop
and
sbb
rorb
add
enter
cmp
enter
add
jb
mov
pop
xchg
sbb
add
ret
sub
call
push
pop
or
rolb
push
or
out
jne
xchg
adc
push
lock
mull
or
imul
mov
push
push
inc
shr
rcr
shr
rcr
or
xchg
xchg
cmp
div
pop
dec
fs
mul
pop
jb
cmp
or
cmp
or
fwait
cmpb
adc
stos
test
jle
neg
xchg
lret
scas
sar
iret
pop
ret
adc
inc
inc
inc
and
jl
xchg
pcmpeqd
mov
lret
divl
cli
inc
adc
inc
sar
mov
xchg
inc
in
xor
lea
pop
fisubrs
mov
cwtl
icebp
insl
addr16
or
xchg
or
and
addb
sar
shr
xchg
cmpsl
cmp
xchg
cmc
sahf
call
sahf
stos
or
popa
dec
pushl
jb
testb
bound
jo
mov
jl
jo
inc
in
inc
xor
xlat
mov
adc
mov
mov
jne
xchg
sarb
sbb
push
into
jmp
insl
pusha
add
test
xor
sbb
xor
pop
hlt
jl
insl
inc
orb
clc
loop
nop
sbb
imul
push
dec
and
stos
pop
ret
mov
mov
data16
add
sbb
movq
mov
pop
lret
cmp
jo
add
xchg
js
fiaddl
add
dec
sbb
mov
popf
iret
mov
push
mov
push
dec
paddq
call
inc
cmp
mov
push
movsb
mov
pusha
daa
push
loopne
inc
mov
fadds
dec
inc
decb
dec
test
adc
and
or
mov
add
nop
jg
or
aaa
xor
add
cmpl
inc
ss
aam
enter
xchg
mov
loope
or
pop
pop
outsb
xor
add
and
add
insl
pop
cs
jbe
and
adc
mov
sub
int3
rol
sbb
cli
push
adc
movsb
or
outsb
clc
adc
inc
mov
xchg
icebp
mov
jo
push
test
fwait
mov
xorb
adcb
add
or
dec
mov
mov
loop
mov
adc
sbb
imul
push
add
stos
or
imul
or
loop
inc
arpl
xor
dec
mov
mov
sarb
cmpsb
imul
negb
push
mov
sarb
ret
je
mov
loope
push
sub
sub
ret
jmp
fcmovnu
push
jnp
cmpl
ljmp
scas
cmovle
push
mov
lds
ss
mov
jmp
adc
outsl
push
cmpsl
repnz
adc
adc
or
imul
nop
mov
dec
movsl
shrb
cmpsb
mov
adc
lcall
xchg
aad
nop
aam
mov
xchg
sub
aam
js
inc
fidivl
fucomi
mov
cli
mov
sub
inc
enter
inc
sar
addr16
adc
sbb
jecxz
aam
xor
cmp
inc
jmp
faddp
ret
call
jne
imul
bound
dec
mov
add
cmc
aas
sbb
jl
sub
cmp
cmp
popf
or
push
pop
lea
pusha
cmpl
or
lock
xor
icebp
xor
push
xchg
shlb
outsl
pop
or
push
adc
shl
out
outsb
and
add
cmpsl
add
stos
iret
mov
es
jl
loopne
push
adc
and
sbb
gs
cmp
jge
mov
shrl
jae
shlb
push
and
dec
and
mov
sbb
test
imul
or
and
sbb
adc
stc
sbb
mov
inc
shlb
push
pop
jb
adc
add
movsb
idivb
cli
and
shl
sbb
pushf
xor
add
push
fistpll
and
cmpsb
ljmp
orb
rcrl
or
mov
dec
lcall
sub
loope
ja
rcll
orl
sbb
xchg
adc
fsts
push
or
push
sub
fldcw
loopne
enter
pop
inc
pop
mulb
sbb
repz
sub
loope
andl
enter
xchg
lock
outsb
les
mov
ja
push
pop
mov
stc
loopne
addr16
pop
pusha
mov
and
mov
loop
inc
lods
push
mov
add
rolb
push
mov
add
out
nop
jae
inc
adc
or
and
fisttps
sub
sbb
push
fisubrl
cmp
add
outsb
mov
inc
lea
lea
or
add
aas
pushf
and
cmpl
lods
ret
inc
bound
push
js
ds
add
mov
pop
xor
cmp
push
js
xor
xadd
jge
ror
sub
or
jle
sahf
and
mov
mov
adc
and
pushl
add
popa
mov
jno
push
ss
pop
pop
loop
mov
push
push
mov
sub
mov
shrl
cmp
lock
sbb
ds
pop
push
push
mov
fnstenv
push
ds
es
insb
or
shlb
cmpsb
add
or
xchg
xchg
in
scas
jl
mov
push
popa
unpckhps
or
or
add
scas
fisubrs
stos
aaa
sbb
cmp
and
mov
mov
jne
lcall
push
add
push
pop
test
add
aas
call
or
ss
addb
or
loopne
xor
push
daa
sbb
sbb
ds
mov
inc
rcrb
pusha
pop
pop
dec
sbb
sbb
pop
aad
shl
xchg
add
orb
aaa
pusha
pop
test
or
cmp
push
add
outsb
push
xor
push
insb
mov
movd
and
mov
jmp
pop
lret
incl
rcrl
pop
jo
jl
mov
dec
shl
loopne
and
clc
das
xor
or
mov
gs
rol
loope
mov
loopne
mov
xlat
sti
clc
test
or
adc
lods
jae
add
lea
add
adc
not
adc
outsb
inc
dec
cs
xchg
bound
and
inc
mov
test
das
xchg
push
pop
insl
loopne
push
cmp
xchg
or
sub
mov
adc
sysexit
dec
outsl
cmp
inc
fsubr
das
jo
jmp
int
addr16
pushl
leave
lcall
fistpl
inc
rorb
nop
sub
sub
jl
mov
rolb
push
inc
push
roll
push
mov
xor
rcrl
or
jo
js
mov
cmp
add
fbstp
push
lods
mov
cmp
inc
shll
or
or
jle
jmp
push
mov
cs
push
or
xchg
xchg
cmp
dec
loop
lea
and
roll
call
mov
add
push
pop
test
sarb
hlt
add
jno
push
sub
or
cmpsl
jl
into
incb
repnz
or
xor
fwait
mov
inc
sti
test
stos
popf
add
sub
and
push
out
aaa
pop
cld
mov
das
cwtl
cmp
jle
sub
cmp
clc
pop
xchg
xor
push
jmp
dec
push
mov
dec
pusha
in
jbe
or
cmp
jae
out
ficomps
lds
stos
lock
inc
sbb
sbb
mov
sub
ret
jmp
adc
clc
pop
jge
mov
mov
add
jmp
dec
jae
imul
sbb
jb
cmp
subb
pushf
and
outsb
mov
ja
dec
lea
bound
mov
and
cmp
mov
orl
pop
cs
jl
inc
jnp
stos
mov
xor
popf
push
xor
mov
lods
sub
mov
xchg
inc
stos
loopne
add
add
je
mov
data16
loop
outsb
nop
mov
push
cmpsb
push
shrb
cmp
rcrb
inc
pushf
testl
and
mov
inc
jmp
mov
dec
dec
or
iret
xor
clc
cmp
and
add
jg
and
lea
cmp
or
scas
or
jecxz
push
push
inc
jmp
enter
cmp
pop
xor
ds
dec
mov
dec
inc
or
and
hlt
lret
or
popa
jne
das
add
xor
sub
cs
jge
inc
int
adc
dec
adc
push
inc
sbb
xlat
test
cmp
sti
or
sub
add
cmpsb
into
lods
outsb
mov
add
sub
inc
es
or
mov
adc
push
ret
adc
inc
mov
cmpb
fs
lods
sarl
add
inc
js
pop
mov
mov
sbbl
sbb
mov
jb
aam
add
add
enter
aam
xorb
out
or
xlat
std
xor
jne
mov
roll
push
dec
arpl
insl
dec
pop
add
jae
sar
xor
mov
push
or
xchg
in
mov
mov
xchg
add
loope
and
pop
inc
testl
out
jne
and
dec
adc
ss
repz
jne
inc
or
xchg
test
cmp
cmp
xor
mov
dec
push
dec
adc
nop
jbe
fwait
add
cwtl
xchg
test
push
pushf
insl
pop
sub
jl
lea
lcall
test
mov
adc
clc
popa
add
sub
aaa
rorb
add
cld
mov
movsl
add
lock
incw
cmpl
insl
mov
ss
and
fbld
sbb
sti
jg
add
add
cmpsb
aaa
ret
inc
loop
sub
aam
gs
call
testb
shr
and
or
push
sahf
xchg
jne
sbbl
into
or
adc
ret
jns
mov
outsb
pop
mov
je
das
jo
jl
fcom
insl
fadd
loopne
shr
or
js
pop
sti
mov
sahf
dec
mov
jne
push
mov
mov
mov
push
push
push
inc
cmp
or
add
rcr
mov
xor
adcb
inc
sub
push
out
stos
lds
jmp
or
lods
mov
or
push
and
mov
jne
inc
pop
mov
out
xor
or
jl
dec
int3
int3
jmp
popl
add
daa
mov
and
push
dec
into
jmp
ss
add
mov
rcrb
pop
dec
and
les
fiadds
dec
and
and
sbb
sub
pop
jne
push
lret
das
sub
test
sbb
in
sbb
movups
or
jo
mov
inc
mov
psraw
mov
push
push
mov
fnstcw
faddl
xchg
loop
adc
out
sahf
nop
movsb
std
call
sub
in
test
push
mov
or
add
testb
add
xchg
mov
push
push
shrb
sub
int3
sbb
mov
pop
daa
push
aam
jecxz
mov
mov
sbb
add
pop
add
push
xor
mov
pop
in
lret
sbb
aad
movsl
jno
sbb
jne
stos
popa
sbb
inc
adc
add
jecxz
sbb
dec
push
adc
ret
add
jo
and
mov
sub
test
or
sysret
test
sub
xor
lea
push
sbb
mov
add
adcl
pop
lea
xor
sbb
pop
bound
inc
inc
pushl
int
and
add
mov
push
or
sbb
xor
ret
lea
sbb
test
or
int
add
clc
call
xor
jmp
jmp
sar
push
or
movsb
js
cmp
push
adc
stos
cmp
iret
sbb
adc
pusha
faddl
and
xor
in
xchg
sbb
jnp
mov
test
push
add
shrl
lea
cmovl
loope
inc
cwtl
xchg
push
sbb
mov
es
push
loopne
sbb
jmp
xchg
and
pop
pop
dec
inc
sbb
lods
sub
xlat
cld
add
pop
test
cmp
xor
push
pop
jo
in
test
pop
loope
push
std
jmp
push
dec
lahf
loope
push
lea
add
leave
sbbb
sti
sar
mov
aas
or
loopne
or
testb
dec
adc
pop
or
or
add
jb
cmp
cmc
and
push
lods
lahf
addr16
sbb
imul
sbb
insb
add
jne
dec
pusha
and
dec
clc
icebp
lods
add
inc
pushl
mov
jns
sbb
pop
pusha
cmp
or
xor
push
push
aas
inc
pushf
data16
and
lcall
push
inc
jo
enter
imul
mov
pop
mov
cmp
sbb
push
add
test
fists
mov
mov
mov
andl
fsubrl
test
inc
and
or
lret
add
pop
push
insl
test
mov
test
lock
roll
add
call
pop
out
lock
cs
inc
inc
xlat
ret
test
dec
push
fdivl
inc
add
jnp
sti
inc
cmp
jnp
pusha
enter
imul
add
xor
push
test
jnp
fs
add
fidivl
jl
lea
mov
sbb
add
out
sbb
or
js
loopne
add
mov
sbb
out
add
lds
rol
xchg
movb
int
xor
imul
dec
push
es
mov
test
int3
mov
and
aad
sbb
pop
sbb
out
or
jl
jb
outsl
xchg
in
aam
adc
mov
push
sysenter
sbb
dec
pop
fldt
sarb
addr16
mov
popl
dec
std
ret
inc
or
ss
loope
fs
xor
jae
mov
outsl
popa
mov
cli
or
shufps
stos
sub
push
addl
push
addr16
xchg
lock
lahf
fwait
mov
fisttpll
testl
cmp
add
sub
sub
insb
dec
roll
jne
push
dec
mov
outsl
xchg
pusha
jbe
fs
pop
jns
jne
or
adc
fdivp
mov
stc
cltd
jg
sbb
mov
pop
data16
cmpsl
lods
sub
or
fstps
adc
cmpl
add
push
mov
daa
mov
jne
movsl
jne
lea
push
lods
stc
cmp
add
push
add
shlb
and
pop
pop
add
push
shll
jmp
scas
test
push
orb
jmp
mov
mov
test
or
mov
jg
jmp
push
mov
and
mov
sbb
pop
xchg
aas
push
jae
adc
inc
lods
cmp
out
sub
mov
addr16
add
adc
sub
das
and
adc
mov
ficoms
adcb
jno
xchg
jp
das
cwtl
inc
je
xor
xchg
int3
test
sbb
cmp
aam
or
jmp
and
xchg
shll
cmpsb
inc
mov
cmp
pop
adcl
or
enter
inc
pop
lret
fdivrs
add
or
or
outsb
xlat
add
adc
bndstx
inc
adc
and
daa
xchg
xor
test
add
out
adc
enter
les
pop
mov
test
add
lods
inc
mov
xor
xchg
mov
push
mov
and
bound
xchg
pop
fcompl
or
pop
xor
push
ret
mov
and
mov
or
cmp
mov
xchg
pop
xchg
xor
add
bound
xor
loop
fmul
mov
jmp
xor
lods
inc
scas
lock
dec
add
inc
sub
cmp
ja
xchg
add
push
jmp
test
push
imul
nop
sub
cmp
shlb
into
pop
jmp
addl
js
pop
sbb
inc
pop
jae
or
push
add
cmpsl
popa
push
addb
rolb
mov
xor
testl
hlt
adc
icebp
ljmp
jb
mov
jp
icebp
enter
and
xchg
nop
dec
jae
adc
dec
push
sbbb
sbb
cmp
cmp
imul
leave
test
dec
mov
sbb
push
dec
jae
jmp
dec
xchg
rcrb
cmpl
lods
icebp
add
mov
adc
jl
push
ret
fcoml
pop
jnp
loope
pop
pop
adc
gs
xor
jb
cmp
mov
or
dec
nop
sub
mov
js
inc
sbb
sub
in
jae
mov
fnclex
add
jmp
and
xchg
pushf
mov
subb
cmp
les
mov
mov
or
icebp
shrb
or
xchg
or
sbb
addl
out
add
push
enter
mov
fs
cmpl
pop
add
mov
loopne
inc
or
js
fcoml
outsb
and
pop
cwtl
push
jne
push
jge
mov
out
int
xor
mov
mov
insb
aad
inc
mov
fistpll
rcll
mov
xor
cli
rolb
sbb
push
sub
test
bound
push
jnp
popa
clc
mov
jne
pop
push
pcmpeqw
xchg
mov
add
imul
or
inc
rcl
or
lea
and
jno
ret
lea
ficoms
std
lods
pop
int3
mov
ss
lcall
or
cmp
add
int3
push
cmp
icebp
ss
add
imul
add
in
int
jb
imul
dec
or
daa
mov
sbb
int
xor
sub
pop
rcl
imul
or
lock
cmpb
pop
sub
int3
jnp
jl
push
or
jne
jge
push
js
pop
mov
xor
mov
xor
push
lret
outsl
inc
lret
repnz
or
jmp
nop
das
inc
lods
mov
je
loopne
dec
dec
mull
je
jae
mov
xchg
out
sub
pop
jl
jmp
test
push
jno
fwait
or
add
insl
scas
aas
cmp
push
pop
inc
in
xchg
sub
nop
add
cld
cwtl
pop
mov
mov
dec
idivb
test
inc
pusha
jne,pn
sbb
out
fwait
fs
inc
mov
aaa
fildll
fcoml
les
sbb
or
xchg
cli
mov
xchg
jmp
push
push
icebp
out
adc
add
test
sbb
subb
mov
sbb
xchg
daa
push
adc
or
movl
lea
sbbb
popa
jp
mov
cmp
roll
loop
es
dec
sbb
xor
fwait
mov
popa
ret
dec
bound
mov
or
pop
rcrb
inc
mov
mov
mov
jb
je
test
or
sub
call
jecxz
lahf
push
cltd
rorb
xchg
cmp
or
cmpb
popa
clc
jo
adc
stos
or
hlt
mov
push
cs
jnp
sbb
or
inc
and
imul
out
mov
or
add
jg
addl
aad
imul
xor
adc
add
inc
jl
push
test
mov
push
nop
pop
jp
pop
add
jge
pushf
cmpb
lds
nop
jb
cwtl
add
cmp
fnsave
push
xor
pop
push
mov
push
cwtl
in
sahf
inc
mov
mov
xor
daa
pushf
mov
jmp
cmp
push
je
inc
rcll
daa
add
push
sahf
inc
xor
andl
pusha
sarb
mov
icebp
cld
imulb
mov
in
sub
inc
xor
adc
stos
mov
scas
inc
cs
ja
cwtl
out
imul
push
nop
daa
cmpsb
or
das
mov
jle
add
lret
les
fisttpll
pop
xchg
push
pop
es
stos
out
sarl
pop
add
and
pop
adc
jle
add
mov
orl
bound
mov
cmp
into
and
inc
lahf
pop
jecxz
jle
cmpl
dec
xchg
jae
or
movsb
jne
addr16
mov
adc
enter
cltd
addr16
xor
test
dec
in
and
pusha
popf
cmp
clc
sub
add
sub
or
push
or
daa
daa
daa
or
adc
pushf
fsubrl
ss
pushf
pushf
pushf
pushf
sub
xor
mov
cmp
cmp
inc
inc
cmovs
cmp
push
push
pop
add
dec
pusha
fs
dec
jo
js
in
jns
inc
lcall
adc
dec
xor
and
mov
xchg
cwtl
pushf
leave
and
dec
mov
dec
sahf
mov
es
enter
cltd
fisubl
adc
dec
es
call
in
aam
dec
es
fs
clc
cld
or
enter
or
gs
cmpsb
dec
sbb
adc
xchg
sbb
and
fs
dec
sub
fs
dec
es
cmp
xchg
sub
leave
and
push
dec
mov
and
dec
xor
pusha
stos
push
dec
loope
pop
jg
mov
push
and
cmpb
and
xchg
xor
jle
mov
shll
or
stc
cs
adc
cs
pop
xchg
sbb
sbb
and
and
cmp
cmp
mov
xchg
dec
inc
les
enter
dec
int3
sub
decb
dec
enter
pop
movsb
lods
add
adc
aam
or
ret
decl
xchg
and
movsb
icebp
movsb
push
inc
xchg
or
call
cmp
repz
xor
add
push
and
pusha
dec
or
and
push
or
adc
push
fisubs
pop
mov
dec
add
movsl
or
test
and
add
into
and
adc
xchg
and
in
not
xor
loope
xor
fcmovne
or
shr
dec
outsb
add
jmp
pop
mov
and
push
out
ret
cmp
dec
jge
or
adc
or
pushf
push
addb
mov
clc
sbbl
mov
xor
push
ss
or
mov
loop
mov
jne
dec
cld
cltd
call
add
dec
mov
pop
adc
lock
and
mov
mov
jl
and
jecxz
sbb
sub
mov
jmp
lock
aaa
or
adc
and
xchg
cli
xor
sub
aaa
jge
je
mov
flds
mov
pop
adc
pusha
mov
pusha
loope
pop
sub
xor
or
movsb
sub
fnstsw
pusha
inc
jne
push
pusha
fldl
cmp
notb
mov
mov
ret
cmovb
inc
or
lret
adc
sti
add
dec
jmp
test
js
push
push
mov
inc
pop
das
sub
pop
shl
sub
push
and
rcrb
or
push
jmp
out
and
xorb
rclb
pop
out
xor
lcall
and
or
lods
or
flds
xlat
sub
fstps
jmp
fisttpll
rorb
dec
fndisi(8087
movsl
pop
test
inc
push
hlt
adc
jbe
fildl
pmulhw
pop
sub
jmp
orl
cmp
inc
test
test
cmp
mov
push
inc
call
xchg
xchg
push
aaa
sbb
out
aad
dec
mov
lea
jmp
lock
sub
pop
jbe
pop
sub
jmp
sub
push
in
divb
or
jmp
fldcw
inc
test
into
adc
syscall
leave
xor
scas
cmpsb
sbb
shrb
mov
je
add
jnp
mov
sub
aaa
ret
nop
mov
lea
or
mov
stc
and
hlt
xor
repz
sub
xchg
pop
add
in
inc
shll
xor
dec
add
enter
rclb
add
aam
pop
test
stos
xchg
dec
cld
cli
shrl
jl
orl
sbbb
loopne
stos
cmp
pop
or
push
rolb
adc
adcl
lcall
cmpsb
mov
aaa
rol
or
push
pop
cwtl
sbbb
and
test
adc
jg
sbb
testl
test
pop
lret
add
xor
and
test
enter
add
orl
ret
clc
cmp
and
sub
je
outsb
sbb
loopne
pop
pop
lret
imul
or
sbb
sub
cld
sbb
hlt
pop
xchg
mov
cltd
and
and
sub
shrb
insb
jge
pop
pop
aaa
addr16
jbe
add
pop
fstpl
in
out
add
jmp
jno
adc
into
pop
leave
dec
inc
and
ret
sahf
dec
das
lock
xor
push
or
fisttpll
mov
or
hlt
mov
jo
pop
xchg
push
sub
cmp
and
fwait
dec
mov
in
push
mov
outsb
or
ret
call
jae
fadd
cmpsb
dec
or
add
mov
jbe
push
das
adc
add
rolb
mov
mov
arpl
out
add
and
outsl
xor
or
sbb
jnp
add
dec
add
mov
jne
je
dec
sbb
mov
sbb
dec
lret
into
sbb
mov
xchg
mov
call
clc
xor
sbb
push
shufps
mov
jge
adc
or
sbb
rcll
cltd
and
decb
mov
clc
push
pop
cmpb
add
or
adc
ret
imul
push
enter
or
cli
out
fld
fucomp
pop
fldcw
pop
mull
loopne
out
mov
xor
test
outsl
jne
orl
mov
icebp
das
jns
ficompl
gs
or
shl
fcoms
aam
add
or
jmp
loop
push
out
mov
push
sahf
jge
push
pop
je
aad
xor
push
ficoml
nop
cld
es
adc
push
push
push
movsb
imul
push
sub
aam
loope
ljmp
jo
fstsw
movswl
sbb
loop
or
inc
xor
scas
and
rorb
data16
or
insl
or
inc
jl
fsts
dec
cwtl
or
sub
nop
or
aam
test
fmuls
pop
and
sbb
adc
pop
mov
nop
call
jb
jo
movsb
fldpi
xor
pop
stos
adc
loopne
mov
push
je
sbb
push
inc
scas
xsaveopt
push
inc
adc
aas
cmpsb
cmp
fstpt
inc
mov
and
pop
add
mov
and
loopne
test
or
xchg
ss
and
mov
sbb
lds
incb
add
dec
lcall
test
lock
nop
push
cmpsb
es
mov
or
push
sbb
sahf
adc
mov
xor
or
inc
mov
lcall
cmp
xchg
xchg
imul
add
pop
adcb
cld
jo
ficomps
nop
lret
je
mov
and
pop
push
dec
push
and
sti
xchg
out
xchg
shrl
add
xchg
out
daa
xor
jb
or
or
das
inc
fbstp
push
add
push
push
or
add
loope
cmp
add
pop
std
cmp
add
pushf
pop
pop
inc
cmpsb
dec
or
or
mov
push
test
push
or
outsb
mov
and
aas
dec
loope
inc
test
xlat
cmp
mov
lret
loopne
test
add
add
push
xchg
push
imul
hlt
jbe
stos
pop
pop
or
push
inc
xor
sub
or
jle
sub
mov
or
pop
pop
add
stos
andb
aas
es
ret
dec
or
inc
lea
icebp
push
bound
mov
lret
cs
xorb
push
jg
jnp
pop
ss
loop
rolb
cmpl
add
outsb
out
pop
ficompl
pop
and
mov
out
mov
inc
fistl
adc
iret
jbe,pt
dec
imul
mov
add
pushf
or
or
and
clc
sbb
popf
dec
call
pop
loopne
inc
add
bound
pop
mov
dec
addb
repnz
sahf
jns
or
adc
lock
mov
mov
sqrtps
scas
pop
jge
lea
sub
sub
inc
xchg
cmpl
add
repnz
aad
enter
cmp
stos
mov
cmpb
or
mov
xchg
push
inc
aam
push
or
movsl
cmp
mov
rolb
rcrl
iret
fmul
shl
sub
and
push
fdiv
jp
lea
sub
or
mov
and
push
ds
ret
cmp
scas
and
aam
out
inc
rorl
mov
adc
mov
dec
add
sub
pop
adc
loope
sbb
mov
or
dec
jns
sub
lea
adc
sarb
push
sbb
inc
lods
sbb
inc
jno
jmp
xchg
andl
clc
dec
or
inc
rcrl
aas
xor
push
cli
mov
ds
mov
lods
fsubr
pop
pop
inc
xor
add
add
incb
enter
dec
jns
jo
movsl
cmp
and
shl
sub
push
aas
mov
cmp
dec
arpl
lea
fmull
frstor
mov
dec
movsb
addr16
xchg
inc
xchg
adc
jno
arpl
xchg
loopne
shll
pop
xchg
pop
pop
mov
mov
mov
andl
push
dec
into
out
pop
icebp
pop
add
jl
stos
iret
and
popf
sarl
out
and
mov
inc
mov
jge
or
nop
rolb
dec
lods
shl
test
pop
jle
xchg
dec
dec
or
fildl
mov
loop
pop
lock
cwtl
adc
push
int3
pop
push
push
or
lret
jne
pusha
jo
clc
and
adc
adc
mov
mov
cmpsb
dec
push
adc
push
xchg
pop
add
adc
push
in
inc
sub
movsb
add
dec
je
pop
cmp
or
imul
or
popa
pop
mov
or
sbb
mov
jne
cmp
mov
add
nop
jp
fs
mov
add
fidivl
test
inc
mov
mov
rorl
fisubrl
insb
lods
jp
pop
mov
xchg
add
dec
jo
sub
sbb
mov
mov
cmp
insb
inc
cs
or
ss
clc
jg
sti
cmp
je
or
out
mov
dec
cmpb
je
mov
add
sbb
sbb
add
or
mov
pop
mov
sbb
fwait
and
fcompl
fistpll
xchg
inc
arpl
arpl
leave
inc
inc
outsb
sub
cmpl
pop
or
jmp
xor
mov
lods
sub
cmp
adc
push
and
pop
adc
jbe
outsl
notl
notl
jno
adc
shlb
mov
jle
cmp
cmpsb
add
sbb
fadds
loopne
jne
xlat
adc
fcoml
and
jbe
or
add
sbb
cmp
loop
lret
jg
push
pop
sbb
mov
dec
adc
cmp
cld
clc
add
mov
popf
data16
icebp
aad
lock
sub
sub
inc
incl
jle
mov
cld
inc
cmp
bound
add
jo
lcall
add
lods
jge
and
mov
fiadds
in
sub
mov
and
ljmp
hlt
test
push
mov
add
inc
test
push
neg
movb
popa
cld
bound
push
push
mov
pop
adc
cmpsb
enter
loope
add
pop
rolb
je
cmp
xor
mov
daa
test
insl
in
jns
inc
str
pop
add
add
xor
test
inc
sbb
test
sbb
mov
sub
push
mov
iret
ret
jmp
test
mov
and
in
lock
rcll
ffree
adc
xchg
ret
pop
inc
push
push
adc
shlb
rcll
rol
sbb
inc
jo
push
xor
add
addb
jno
sbb
mov
and
push
sbb
or
fadd
xor
sub
xlat
add
jl
push
icebp
dec
cmp
jge
adc
je
movsb
inc
and
in
xchg
sbb
les
jns
test
cmp
push
adcb
xchg
sahf
pop
ljmp
push
and
cmp
sub
adc
call
ret
imul
push
inc
lea
jae
loope
fcompl
sub
adc
jnp
mov
cmp
xchg
dec
sbb
test
enter
js
aad
add
subb
push
lahf
mov
fists
dec
sub
leave
and
ror
mov
add
insb
movb
scas
and
mov
fnstsw
inc
outsb
inc
popf
neg
sbb
mov
and
lock
pop
pop
mov
shll
ljmp
ljmp
subb
cli
fisubs
inc
in
call
nop
pop
divb
mov
jb
add
mov
or
mov
push
mov
bound
sub
or
cmp
add
adc
faddl
adc
clc
sub
sbb
rcrb
bswap
sub
fsubrs
and
xor
cmp
movsl
fdivl
cs
cld
add
mov
das
or
shrd
sbb
imull
cmp
jge
sbb
pop
add
jl
movsl
clc
cwtl
xor
push
jb
outsb
data16
push
in
inc
and
xor
out
mov
add
cmp
cmp
rorl
mov
incb
push
adc
movsl
lea
insb
jno
or
lock
xor
jo
mov
push
and
insl
xchg
lock
pop
sbb
js
jg
jb
repz
ret
js
fsubr
or
cld
scas
pop
adc
neg
mov
cmp
sarl
lock
push
shll
sar
push
xchg
sub
add
mov
push
lock
stos
adc
sarb
nop
sbb
shrb
mov
jae
ficompl
inc
dec
pop
or
push
dec
sbb
or
orl
dec
dec
pushf
jnp
shll
cmp
in
ja
xor
add
mov
jbe
fistl
ds
add
sbb
data16
cmp
sub
jp
fidivrl
shlb
add
loopne
push
sbb
mov
jmp
lods
add
push
inc
mov
add
out
sub
jns
neg
incl
inc
xchg
inc
or
or
adc
lock
ret
aaa
push
lods
ficomps
or
aas
pusha
addb
push
mov
push
xchg
dec
and
insb
jmp
das
push
inc
lock
fdivs
and
jb
cmp
jbe
jl
sbb
or
push
mov
or
mov
inc
push
add
sbbb
daa
nop
push
divb
push
cmp
mov
push
inc
out
mov
dec
sub
lods
push
jb
stc
test
pusha
sub
sbb
push
push
push
bound
out
out
add
mov
cld
jl
sub
mov
inc
or
add
push
add
push
inc
popa
popf
jmp
xor
jo
adc
addl
gs
scas
fs
or
pop
data16
inc
outsb
lret
imul
popa
je
testb
dec
sbb
adc
add
dec
jmp
pop
push
test
popf
sbb
rclb
dec
loopne
je
mov
xorb
clc
inc
adc
aaa
xor
or
or
mov
add
loope
mov
les
ret
cmp
mov
ljmp
inc
lods
test
out
dec
sub
ds
push
adc
mov
cmpb
jne
xor
mov
cmovo
adc
push
xchg
sar
or
in
cmp
ret
int3
adc
fcomp
jns
add
movsb
push
sbb
mull
jge
mov
cmc
or
sbb
je
mov
idivb
mov
xchg
mov
sbb
add
ljmp
fdivrl
das
lea
rol
add
ds
adc
test
fwait
push
xor
roll
push
mov
adc
xor
push
lret
sbb
sub
and
push
push
data16
jg
cs
push
push
leave
inc
pop
mov
inc
ljmp
subl
mov
cmp
pop
dec
insl
outsb
or
cmp
mov
and
mov
test
inc
mov
iret
test
ret
adc
jg
push
push
xchg
sub
cmpl
pop
clc
add
or
push
sbb
dec
push
mov
adc
xlat
push
add
jne
or
push
mov
pop
out
icebp
gs
shrb
pop
adc
or
enter
and
jo
icebp
jb
jge
or
mov
inc
push
in
negb
ja
sbb
dec
je
dec
push
push
jmp
or
jmp
mov
into
or
lcall
mov
inc
inc
sbb
xchg
je
repz
data16
jmp
xor
sbb
int
or
or
cmp
or
sbb
inc
xor
arpl
cmp
outsl
xor
ficomps
sbb
jne
adc
add
fdivp
and
cmp
je
mov
sbb
fldl2t
mov
outsl
loop
or
or
jmp
jbe
fs
jb
pop
inc
adc
add
and
sub
sarb
mov
inc
sub
xor
sub
inc
movsb
and
test
lods
mov
test
mov
mov
mov
cmp
ret
and
pushf
and
sbb
ret
sbb
xor
and
mov
pusha
xchg
call
dec
mov
rorl
or
sbb
lret
aam
adc
movsb
mov
scas
xchg
jge
shr
add
or
dec
cld
inc
mov
or
mov
push
and
dec
call
and
add
mov
insb
xchg
push
movsl
notb
lock
stc
xchg
mov
mov
cmpsb
jp
cli
fcmovnu
dec
pusha
cmp
leave
inc
jbe
add
lock
mov
sbb
cmp
or
xor
pop
fimuls
ror
and
push
sti
sbb
mov
and
and
rcll
pushf
cmp
xor
ficoms
into
clc
sbbl
lea
inc
in
push
pushfw
xchg
mov
fxch
stos
lods
mov
outsb
lcall
mov
ja
pushf
push
xchg
xchg
lret
mov
mov
es
push
mov
cli
ficomps
adc
push
and
lea
mov
icebp
insl
loop
sub
dec
stos
mov
dec
push
lret
mov
roll
pop
add
pop
call
mov
shll
pushw
shrl
or
sbb
xchg
outsb
xchg
das
sub
sahf
mov
lods
dec
cmp
loop
leave
test
mov
mov
ds
aaa
push
sub
loope
pop
dec
sbb
and
add
fmull
mov
xchg
xchg
addl
cmpsb
and
sbb
pop
jo
adcl
dec
bound
add
loopne
adc
and
ret
insl
adc
insl
mov
ret
and
in
stos
jo
and
shrl
sbb
and
cmp
add
jo
pop
movsl
add
clc
ret
mov
sarb
or
icebp
leave
push
pop
xor
pop
divb
mov
fistpll
outsl
das
insb
das
add
outsl
inc
mov
xchg
mov
in
rcr
sub
and
or
sbb
js
jmp
adc
sbb
xor
mov
dec
inc
pusha
repnz
andb
add
add
pop
je
xor
adc
add
ret
sub
bound
or
andb
fidivl
lret
jbe
sub
sub
jno
add
sub
push
add
jmp
and
cmp
and
pop
in
push
shr
push
sbb
add
call
pusha
push
ljmp
leave
imul
push
sidtl
lcall
call
clc
xor
call
nop
hlt
lcall
inc
and
or
mov
daa
movsl
jo
pop
cmpsb
sbb
fwait
fwait
or
leave
inc
xor
dec
dec
or
and
xchg
adc
cmpb
jl
ss
mov
pushl
cmpb
je
jbe
xor
inc
aam
push
fstl
adc
add
sbb
ficoml
rclb
inc
push
test
jmp
fistl
fwait
add
imul
mov
ds
mov
inc
and
shll
sahf
push
and
ljmp
nop
adc
jne
cmp
jne
xorb
dec
add
mov
add
outsl
ret
into
adc
rorb
push
cltd
pop
rcrl
fprem
out
roll
leave
mov
or
je
mov
iret
add
add
mov
lods
or
cltd
je
test
add
pop
mov
mov
pop
sahf
jne
inc
cmpsl
lahf
xor
movsw
sti
int
rcll
sub
add
mov
mov
or
orb
shl
adc
add
jo
fisttpll
add
push
jg
push
and
in
dec
jge
inc
jnp
jg
inc
push
neg
neg
sbb
sub
mov
sbb
fwait
inc
rcrb
sbb
mov
sbb
pop
jnp
sbb
push
push
inc
and
fsts
cmp
mov
icebp
sbb
sbb
movsb
sbb
sbb
and
and
ror
dec
jns
popa
xchg
add
mov
pop
aam
sub
in
push
adc
lods
rcl
ljmp
dec
and
shr
sub
adc
adc
lock
idiv
and
adc
push
je
neg
cld
lock
je
pop
das
push
pop
enter
repz
adc
xor
jne
out
sub
into
add
pop
pop
lods
cmp
dec
adc
adc
imul
add
aaa
adc
das
push
or
aad
loope
into
jbe
jne
inc
adc
xorb
movsl
das
hlt
adc
and
aas
mov
or
push
popa
mov
xor
add
dec
inc
jae
xor
outsb
out
or
addb
xchg
lcall
lods
dec
fcmovu
mov
test
mov
or
push
mov
call
rcrl
sub
cld
inc
stos
and
dec
add
cmpsb
jnp
testb
adc
cmpsb
je
cld
popf
dec
mov
leave
jne
adc
inc
add
mov
lock
add
pop
pusha
push
push
icebp
sbb
xchg
or
mov
mov
inc
mov
mov
cs
adc
mov
or
mov
je
adc
iret
sti
jg
jl
out
push
cmp
ja
add
cmp
adc
mov
xchg
hlt
cmp
jne
shll
leave
adc
call
sbb
add
jl
pop
pop
xchg
sbb
je
dec
inc
mov
gs
mov
sub
call
rclb
mov
push
test
xchg
aam
data16
aas
cs
aaa
inc
mov
add
jno
ljmp
inc
ja
iret
cmp
scas
xchg
add
test
aaa
xchg
push
adcb
movl
add
jb
add
cmp
or
xchg
inc
pop
xchg
xor
pop
mov
rcl
adc
jp
mov
mov
adc
jmp
jl
inc
jb
mov
sarb
jmp
andb
sbb
insb
cmp
push
add
push
add
jno
add
fwait
mov
xchg
aam
imul
lock
shr
inc
sub
lock
dec
lea
sar
dec
dec
jmp
inc
outsb
movswl
xchg
mov
neg
push
es
mulb
mov
cmp
or
aas
lods
mov
cwtl
sub
xorl
push
dec
imul
and
rorl
dec
cwtl
mov
shrb
pop
push
and
outsb
inc
inc
js
les
decl
das
sbb
jle
repnz
add
int
in
mov
imul
test
and
and
lea
inc
xor
adc
cmpsl
add
into
sahf
orb
adc
cmpsl
movsl
fiaddl
loop
push
lods
loopne
cmp
mov
inc
call
in
ljmp
fs
inc
mov
cmp
mov
and
lea
ss
rolb
push
sahf
inc
mov
or
mov
lea
pushf
sbb
mov
xchg
les
or
movsl
xor
movsb
cmpsl
inc
aaa
lcall
ret
rcr
xchg
movsb
sub
imul
and
push
fnsave
rorb
icebp
jae
cmp
sbb
loope
bound
shll
mov
add
shr
or
and
ds
test
rorb
sbb
push
lret
dec
jmp
jp
inc
lea
loopne
clc
cmp
sub
addr16
mov
mov
int3
shrl
loope
shr
or
mov
jp
or
dec
mov
inc
jp
out
push
jnp
daa
cmp
adc
loope
stc
repnz
div
add
test
div
xchg
pop
nop
ret
xchg
out
subl
and
rcrb
or
xor
daa
mov
adc
or
or
pop
fisubrl
add
push
and
fcoml
xor
and
and
fidivl
mov
insb
lret
xor
cmpsb
mov
dec
rolb
add
xor
mov
sbb
sbb
cmpsb
sub
or
pushw
sbb
loop
pop
cmp
mov
enter
ret
popl
cmp
in
aam
dec
or
jne
cmp
pop
sbb
mov
shlb
fcoms
aam
int3
insb
dec
xchg
pop
jbe
dec
sub
sbb
cmp
adc
shlb
dec
notb
test
rolb
xor
fsubl
or
mov
mov
sbb
fcmovu
mov
pusha
mov
insl
test
popa
cmp
mov
mov
movl
xchg
add
sahf
idiv
adc
xchg
adc
jg
mov
adc
lock
sub
stc
add
mov
lock
or
cmp
jne
push
jns
loopne
ljmp
pop
loopne
sbb
lret
and
pusha
pusha
add
setae
xchg
sbb
sub
mov
roll
movb
stos
xor
adc
pop
outsb
call
xchg
sub
adc
sub
sbb
shl
xchg
inc
xor
rcrb
in
inc
scas
inc
rcrl
mov
neg
and
mov
insl
call
fucomp
imul
call
dec
jbe
jno
fsubs
pop
add
and
mov
push
pop
js
in
fisubs
out
pop
sti
jmp
add
jne
mov
les
xchg
adc
testl
mov
cmpsl
ljmp
mov
add
enter
sahf
mov
mov
shlb
add
sub
test
out
and
mov
addb
mov
lock
inc
ljmp
adc
sub
dec
push
jg
fildl
sub
cmp
jge
sub
cmpb
or
scas
sub
dec
cmp
add
dec
stos
or
jle
incb
sub
orb
pop
xchg
push
pushf
aam
call
sahf
ficoms
jp
jne
dec
mov
jb
int
loopne
add
cmp
adc
in
jbe
cwtl
mov
and
add
push
jo
mov
mov
mov
rcrb
push
mov
add
add
xor
cmpsb
or
adc
and
ret
inc
call
adc
stc
push
mov
mov
sub
popa
loope
push
outsb
or
inc
adc
or
repz
add
push
test
push
or
push
pop
push
xor
fisubrs
ret
sbb
adc
cmp
je
mov
lods
or
push
ret
or
xchg
adc
or
jae
outsl
pop
jnp
test
lret
sub
roll
lret
into
pusha
xlat
dec
inc
inc
inc
fidivrl
inc
lcall
in
sub
jnp
sbb
into
prefetchw
inc
adc
cmpl
shlb
or
loopne
lcall
or
or
add
xchg
rcrl
lret
testb
mov
push
je
lret
pop
or
or
push
pop
cmp
ja
insl
add
adc
xchg
neg
jne
and
mov
jo
ds
dec
jge
aam
mov
out
and
push
or
ret
loop
das
inc
add
lds
nop
adcb
clc
mov
test
xor
shll
or
push
testl
or
adc
sbb
fadds
add
mov
loopne
mov
pop
and
in
xrstor
adcl
ds
test
shufps
adc
or
int3
dec
xor
adc
xchg
call
mov
mov
cmp
fidivrs
sbb
xor
inc
jg
into
hlt
test
pushf
into
into
mov
xor
inc
pop
sub
fsubp
or
pop
sahf
pop
and
or
aam
ljmp
or
sbb
and
xchg
stos
cmp
pop
push
push
and
sbb
push
mov
test
lahf
pop
xchg
out
mov
jecxz
ret
movsb
pop
jo
dec
loop
mov
mov
ret
cltd
and
popf
ret
cwtl
sbb
push
jmp
mov
pop
mov
lret
push
lret
push
xor
xchg
pop
pop
and
shll
adc
fstps
xchg
mov
int
dec
jmp
xchg
push
enter
push
les
clc
xchg
sbb
gs
cwtl
lret
mov
scas
mov
mov
push
sarl
popa
popa
dec
arpl
in
hlt
add
jnp
mov
lret
push
xor
cmp
xor
push
nop
jo,pn
loopne
adcb
add
dec
gs
jno
dec
cmp
test
fcmovnb
je
dec
sub
loope
add
fldt
out
je
mov
repnz
icebp
mov
cmp
jb
cmp
jbe
dec
repnz
jmp
push
rorb
fcoms
pop
mov
test
cmpb
adc
fldl
ret
xchg
orl
out
les
and
add
mov
adc
ret
pop
push
daa
push
scas
mov
cwtl
cmp
test
pop
and
adc
cmp
pushl
pop
filds
push
push
and
fnsave
fistl
mov
pop
and
inc
lret
adc
cmp
int
aam
fmul
adc
addb
push
sub
and
aam
adc
cmp
pop
xor
nop
push
inc
pushf
push
add
dec
xor
adc
js
cmpsl
cs
or
cs
out
inc
push
aaa
sbb
dec
mov
xor
xlat
or
lea
scas
cmp
cmp
loope
daa
in
lcall
ljmp
lock
or
or
pop
out
mov
sub
notl
jp
pop
scas
dec
sub
nop
movsb
adc
mov
in
sub
lahf
inc
xchg
mov
adc
xchg
jbe
add
adc
jg
xor
adc
mov
hlt
call
pop
outsb
loop
shlb
push
push
push
loopne
fldcw
cmp
xor
inc
or
mov
mov
pop
dec
test
or
cmp
xchg
sbb
and
outsb
gs
sbb
mov
adc
in
push
clc
sub
pop
inc
cli
jge
mov
mov
mov
jg
lret
xorl
push
mov
test
rcll
add
daa
call
xor
dec
jno
dec
ret
enter
loopne
loope
js
inc
out
mov
push
add
cmp
nop
cltd
rolb
push
fistpll
mov
loopne
jmp
push
pusha
outsl
sbb
fs
movsb
fists
ss
subl
push
cmpsl
mov
lcall
or
aam
mov
test
inc
push
push
sub
bound
lcall
jg
je
push
cmp
movb
pop
sub
xor
inc
sub
push
les
push
and
pop
pushf
subb
pushl
push
pcmpeqb
jg
push
lds
scas
sbb
mov
sbb
sbb
out
aas
cmp
cmp
jbe
jg
pop
push
push
push
adc
test
iret
imul
or
sub
pop
lods
enter
or
dec
cmp
pusha
sbb
push
mov
cmp
mov
inc
xchg
repnz
addl
inc
pop
cmc
rclb
test
js
add
lret
or
push
sbb
pop
sbb
enter
cmp
mul
into
add
das
cmp
sbb
iret
jo
hlt
add
cwtl
dec
cli
and
sub
sbb
dec
mov
shlb
jne
push
push
push
push
or
out
jmp
rolb
dec
adc
mov
clc
outsb
pop
or
out
enter
xor
lods
inc
sub
in
inc
pop
adcb
cmpsl
scas
and
push
xor
cltd
mov
xorb
push
add
adc
or
ss
sar
xor
sbb
dec
pop
push
and
enter
mov
push
inc
cwtl
pop
sub
mov
ret
pop
rol
ror
push
inc
sub
add
jl
test
movl
out
xor
in
addb
jecxz
aam
mov
xorb
test
lds
sub
cltd
out
fcoml
test
or
sub
push
pushf
mov
add
xchg
mov
mov
leave
int3
jmp
and
insl
rclb
sbb
and
dec
out
mov
arpl
adc
iret
pop
pop
xchg
xchg
rclb
loopne
andl
and
test
add
xchg
xchg
xor
les
mov
pusha
pop
ret
add
jp
or
fnstsw
lods
jno
sbb
push
adc
cs
adc
mov
sub
lret
or
push
xor
loop
or
into
inc
mov
dec
jbe
mov
adc
adc
adc
pop
inc
push
sbb
and
adc
dec
push
inc
adc
add
and
std
fwait
outsl
imul
inc
in
add
xchg
test
mov
hlt
inc
xchg
imul
clc
pop
orl
imul
mov
incl
lock
lds
dec
sti
push
aam
pop
pushf
enter
fidivl
add
push
cwtl
mov
or
mov
push
fisttps
ret
sub
outsb
xor
sti
data16
xor
inc
and
jo
aaa
add
push
adc
or
sbb
hlt
push
mov
inc
js
fisttps
inc
dec
call
int
rcrl
int3
dec
int3
dec
and
arpl
into
mov
imul
fidivrl
out
les
mov
jmp
sbbl
pushf
ret
nop
dec
inc
imul
add
or
orb
jle
aas
or
inc
add
enter
jp
jge
adc
mov
sbb
cmp
ja
lods
ret
jbe
jge
adc
orl
push
xlat
mov
or
sbb
xor
in
mov
push
inc
push
dec
xlat
mov
scas
add
cmp
repnz
xor
testl
pop
lock
xchg
or
icebp
mov
jp
inc
shr
cmp
loope
inc
ja
pop
shlb
popa
icebp
call
aam
into
lock
stos
xlat
shll
mov
pop
sbb
push
mov
sbb
push
push
cmp
jp
sub
iret
xchg
ljmp
mov
jmp
aad
add
inc
lea
mov
aas
leave
jp
loope
and
aaa
push
ret
and
push
jbe
aam
add
pop
repnz
out
or
test
or
pop
dec
inc
jmp
sub
cmp
pop
cmp
cmp
jg
andl
das
xor
mov
mov
mov
sbb
jg
mov
adc
or
sbb
imul
xor
bound
jp
adc
ja
xor
cmc
inc
fsubrl
cmpl
pusha
fwait
or
faddl
and
mov
jmp
dec
mov
insb
add
cltd
and
jae
testl
loopne
or
mov
dec
inc
cmp
pop
imul
popf
inc
adc
and
push
or
jne
inc
sbb
pop
cld
or
xor
push
imul
cmpsb
icebp
push
mov
mov
mov
roll
mov
test
bound
jl
sbb
pop
jae
cmp
addl
rolb
xor
popf
mov
sbbl
fwait
sub
cmp
cld
adcb
add
add
stc
jg
aas
stos
pusha
popa
dec
lods
loop
add
sbb
pushf
sbb
aam
movsb
aaa
lods
arpl
mov
push
push
push
push
add
mov
mov
fildl
or
pop
jg
repz
stos
cli
mov
fs
pop
jl
testb
dec
add
mov
adc
dec
inc
cmp
iret
or
adcb
sub
test
lcall
int3
or
inc
cmpsb
js
adc
or
lret
adc
scas
fs
or
scas
mov
jbe
outsb
sbb
mov
in
adc
aaa
and
inc
clc
xchg
out
dec
push
push
lods
inc
std
pop
inc
es
mov
mov
push
jmp
push
mov
dec
cmpsb
pop
adc
or
inc
or
sbb
push
sbb
lret
cmp
jg
push
dec
rorb
fstl
lock
adc
mov
add
jns
fadd
inc
push
cmpsb
jmp
and
inc
outsb
fcomps
jb
out
pop
mov
rcl
inc
adc
mov
cmp
out
pusha
cld
out
push
pop
cmp
movsl
and
mov
push
mov
rcrb
fisttpl
or
dec
lret
push
inc
mov
pop
add
in
fimull
and
or
dec
cmp
cwtl
jbe
or
adc
cmp
mov
add
or
and
add
add
jb
frstor
loopne
mov
push
stc
repnz
pop
add
xor
call
adc
mov
dec
data16
dec
or
aaa
loope
mov
pop
je
in
or
aam
dec
popa
add
adc
push
daa
add
dec
movsl
jl
mov
pushf
cmp
or
je
or
imul
sbb
mov
cli
rcrb
rcrl
testb
cmpsb
mov
dec
out
push
dec
xlat
call
push
add
mov
lock
sub
and
into
icebp
mov
xchg
adc
lock
leave
dec
out
dec
je
dec
jne
or
push
push
dec
ja
les
rol
push
or
sbb
or
and
adc
aas
sbb
or
inc
sub
add
xor
pushl
call
push
icebp
enter
or
mov
test
fildl
arpl
mov
add
or
add
je
or
pop
dec
cli
mov
loopew
inc
out
add
jl
and
mov
push
push
stos
and
sbb
xor
and
inc
sbb
hlt
push
cli
adc
cmp
push
jb
dec
cwtl
or
push
jae
mov
clc
push
cli
aaa
jl
xlat
inc
sbb
inc
mov
add
sbb
cmpb
xor
outsl
cwtl
sub
add
and
pop
imul
cltd
adc
sub
cmp
les
sbb
mov
add
shrb
push
mov
cwtl
xor
jle
es
push
insb
jl
enter
add
cmpb
shlb
pop
and
hlt
pop
out
xor
pop
fsts
adc
sbb
adc
pop
sbb
ror
mov
jecxz
rorl
stc
push
mov
inc
push
mov
loopne
shlb
and
or
ss
rcll
mov
mov
fwait
cmp
inc
pop
sarb
popl
lock
sbb
push
xchg
les
outsb
adc
sub
inc
cmp
add
add
xchg
scas
or
je
pop
mov
and
dec
mov
int3
jg
enter
jg
add
xchg
jbe
or
sbb
push
pushf
fmuls
or
aam
test
cmp
mov
mov
or
hlt
adc
pop
cld
pop
jle
adc
pusha
out
nop
lea
fcoms
lods
call
and
cmp
pusha
cmp
jge
pushl
ret
add
dec
jg
adc
orl
jg
jmp
adc
dec
xchg
into
jge
stos
mov
lods
pusha
ss
lods
add
es
add
and
test
push
dec
cmp
xchg
or
jb
or
cmpsl
setle
push
inc
scas
gs
inc
pop
aaa
pop
pushf
and
jle
adc
jae
pop
mov
scas
or
pop
and
jns
mov
bound
or
lock
adc
add
add
es
sub
lret
stc
fs
pop
xchg
pop
sti
push
sbb
ja
jecxz
lcall
push
mov
jns
mov
hlt
aas
out
pop
mov
mov
xlat
je
cmp
or
adc
cmp
jb
testb
add
add
cmp
loopne
js
ret
rorb
jge
push
jmp
inc
addr16
sbb
sbbl
je
cmp
sbb
jb
cmp
imul
push
push
or
xchg
pop
dec
in
push
mov
push
adc
call
jmp
das
xor
push
jne
subl
or
mov
and
dec
jmp
adc
mov
loop
push
es
jmp
jmp
shll
push
inc
pop
pop
nop
or
aad
iret
jg
pop
xchg
mov
mov
mov
dec
or
pop
mov
push
lret
ret
gs
or
int3
or
das
inc
stos
dec
in
fnstsw
sbb
leave
hlt
sub
jle
and
sbb
sub
mov
fsts
and
stc
ss
sahf
nop
add
add
add
in
push
scas
dec
or
jg
sub
mov
add
subps
int
in
mov
fldz
aaa
xor
add
push
stos
dec
jne
push
mov
dec
mov
sub
cmp
sub
push
pop
fdivs
aaa
push
dec
push
adc
das
and
je
pop
and
fld
fsts
call
fildll
adc
rcr
outsb
cli
inc
cmp
jmp
cwtl
mov
xor
aaa
and
sbb
add
jle
sub
sbb
fcmovu
cmp
test
cmpsb
sbbb
rolb
pop
mov
cmp
cmp
in
pusha
push
jb
addb
push
jb
jb
or
xchg
adc
xchg
inc
or
dec
in
sarl
mov
inc
mov
add
pop
bound
addl
lret
callw
lock
mov
jno
les
sar
aaa
and
pop
jb
in
push
sti
jns
fsubl
xor
cwtl
sub
sub
mov
imul
add
dec
in
ficompl
xchg
call
inc
push
in
lock
fwait
pop
xor
pop
inc
mov
leave
stos
dec
fimull
insl
mov
fmul
pop
repnz
jne
add
leave
orb
fldt
jb
sub
dec
ret
xchg
fildl
mov
and
repnz
in
sbb
scas
cmp
sbbl
mov
roll
pop
cmp
push
sbb
loopne
inc
or
popf
xor
add
inc
pop
fsubr
icebp
dec
dec
jb
lahf
in
addr16
loopne
dec
xorl
xchg
jbe
aaa
mov
push
adc
dec
ss
addr16
lds
add
call
clc
ficoms
or
ja
sub
dec
imul
adc
jl
push
xor
inc
adc
xchg
pop
mov
mov
test
popa
adc
pop
pop
in
or
add
inc
lods
xor
and
test
mov
jb
cwtl
adc
sbb
fistps
jne
sbb
jmp
outsb
in
xor
mov
jne
imul
jl
push
js
scas
xchg
or
mov
dec
or
int3
and
jne
shlb
mov
call
add
xchg
lock
jl
incb
cmp
inc
adc
or
pop
pop
dec
add
sbb
mov
lods
movsl
xchg
mov
fsubp
lds
cld
outsb
insb
push
jno
pusha
fs
dec
es
cltd
jo
js
adc
fs
pop
sbb
lret
sbbb
adc
push
loop
pop
sbb
sbb
jge
sub
fisubs
and
nop
adc
shrb
mov
enter
out
sub
mov
in
sti
xor
scas
push
push
outsl
jecxz
test
jecxz
imul
shlb
in
fists
and
inc
adc
adc
jno
ret
fs
mov
nop
fadd
mov
inc
adc
les
lock
dec
les
js
lods
add
pop
cmp
orb
stos
add
lock
xchg
or
sbb
in
push
in
mov
xor
add
pop
sti
nop
and
adc
fistpl
xchg
or
insb
xchg
lea
je
enter
cwtl
sbb
int3
aam
mov
in
adc
sbb
fcoms
mulb
pop
dec
gs
cmp
ret
push
movsb
sub
lock
mov
icebp
out
addr16
add
adc
cmpsb
in
aam
call
mov
pushf
pop
add
jbe
and
dec
enter
std
jp
out
jnp
negl
pop
insb
jnp
mov
int
mov
loopne
stos
dec
jl
inc
fdivs
fdivrl
aam
pop
addl
insb
and
imul
in
aam
and
jmp
pop
out
sub
and
dec
mov
push
or
ficoml
or
push
and
inc
jmp
add
ljmp
and
ret
add
leave
xchg
mov
jl,pt
adc
jo
sbb
pop
insl
ret
stos
movsl
push
sub
push
mov
pop
movsb
add
or
mov
add
dec
shrl
vandps
adc
ret
ja
dec
rolb
cmpsb
insb
push
call
jl
lahf
in
mov
popf
bound
xor
jmp
dec
pusha
adc
mov
or
fsts
push
stos
leave
imull
fistl
jg
mov
xor
xor
ret
push
mov
mov
or
sarb
jo
jno
or
add
in
adc
test
out
cmp
or
pusha
jns
movsb
or
add
cmp
inc
xchg
fidivl
adcl
mov
add
cmp
scas
js
xchg
sbb
out
sbb
adc
dec
mov
push
fists
jl
mov
call
dec
inc
pop
aam
dec
cmp
mov
aad
add
fwait
lock
xor
and
mov
in
push
sub
xchg
stos
jl
nop
dec
xor
xor
cmp
nop
popf
xlat
je
lock
cmp
push
loopne
icebp
sbb
leave
in
call
jbe
call
jo
sbb
out
cltd
cmp
add
xlat
cmp
movd
xlat
xacquire
clc
test
and
loopne
sbb
mov
enter
rolb
aam
push
in
in
pop
jo
fmul
xchg
repnz
or
or
dec
or
pop
push
or
jnp
jns
lods
xchg
inc
test
in
jl
sbb
sti
mov
repnz
loope
xchg
mov
xor
xor
orl
inc
faddl
ljmpw
mov
jb
cmp
lock
movsl
enter
sub
fs
aad
hlt
lret
and
push
loopne
aam
sub
push
cmp
xchg
or
or
mov
or
mov
or
or
leave
imul
rol
cmc
insb
int
inc
and
mov
xchg
jo
and
mov
cmc
fsubl
cmp
or
adc
jmp
incl
xor
fcomip
jae
xlat
sbb
fcomp
imul
daa
shrb
aaa
adc
daa
dec
xor
xor
push
les
and
xor
ret
mov
ret
test
movsl
mull
sbb
testl
scas
push
idivl
or
sbb
mov
adc
adc
test
imul
js
iret
movsb
movsb
lods
ret
adc
sub
inc
or
leave
mov
cld
stc
loopne
js
pop
fucomip
jmp
stc
sbb
icebp
mov
ret
stc
call
push
test
add
push
xlat
stos
push
sbb
dec
enter
xor
movsb
adc
push
add
shlb
fmuls
das
rcrb
sbb
mov
dec
push
icebp
mov
imul
in
inc
cli
cmp
insb
adc
sub
xchg
subb
lods
test
push
sub
fcoml
adc
mov
adc
inc
sti
std
pop
mov
call
cmp
lret
sti
mov
gs
sti
hlt
add
fs
add
pavgb
cld
pusha
nop
adc
mov
aam
xor
movsb
outsl
mov
xchg
xlat
push
nop
pop
cld
pushf
in
inc
enter
daa
lock
loope
add
out
or
or
push
fisttpl
or
mov
adc
mov
std
test
incb
mov
test
jmp
pushf
sbb
decb
fstp
jne
adcl
mov
aad
cs
or
aad
or
add
push
call
fstpl
je
xor
pop
call
leave
inc
xor
andb
lea
mov
scas
add
or
les
rclb
mov
je
adc
fildl
adc
pop
repnz
imul
mov
pop
sbb
lock
mov
cmp
or
adc
inc
or
or
adc
add
push
add
mov
cwtl
lods
das
push
or
dec
ret
push
popf
jbe
shl
adc
mov
sbb
sbb
sbb
call
test
mov
into
sbb
mov
or
mov
stc
mov
add
add
cs
cmp
add
mov
insl
mov
or
mov
or
lea
add
xlat
es
add
inc
xor
or
les
mov
scas
int3
pinsrw
cmp
outsl
in
movsl
add
inc
int3
fsubl
maxps
iret
enter
dec
iret
fistpll
inc
mov
push
add
inc
cs
xor
or
xchg
mov
xor
insl
push
inc
imul
and
add
popf
pop
and
insb
testl
pusha
xlat
push
daa
mov
inc
daa
nop
fisttpll
add
pop
sub
push
popf
pop
and
push
xor
fcomp
loopne
cmp
iret
and
aam
xchg
fdivs
cmp
sar
mov
and
loop
add
imul
orb
into
push
jnp
xor
unpcklps
fs
mov
ret
in
stos
add
pop
loope
add
mov
aad
adc
rcr
sub
cmc
mov
aam
adc
idivb
pop
mov
aam
or
cmc
mov
dec
cmpsb
adc
cmpl
lret
pop
pop
test
add
mov
divb
sub
enter
test
sub
cmp
outsl
test
cmpl
sbb
insl
mov
cltd
mov
fiaddl
pop
movsl
ja
pop
outsl
mov
sbb
ljmp
lods
bound
sub
inc
movsl
or
pop
std
fnstcw
jmp
pushf
insb
and
inc
push
and
xchg
or
aam
imul
mov
or
xorl
dec
and
lods
or
gs
push
and
or
jmp
or
push
mov
insl
int
std
stos
xor
ja
sbb
imul
xchg
mov
xchg
or
push
enter
sbb
fisttpll
gs
xlat
prefetcht1
testl
test
repnz
push
cmp
enter
stos
stc
or
shll
adc
lcall
pop
fsub
mul
adc
dec
push
mov
pop
jb
or
cmp
mov
notb
repnz
jo
and
pop
dec
adc
in
dec
xor
sbb
and
incl
das
xor
in
dec
js
pop
and
jnp
loopne
sub
loope
sarl
mov
movsb
and
push
mov
or
cmp
inc
daa
mov
xchg
jne
mov
ret
jecxz
or
cltd
push
pusha
shrl
lods
mov
in
shrb
sbb
and
std
xor
orb
enter
or
aad
pop
lea
ret
jge
clc
jnp
xchg
shll
call
pop
xor
cmpsb
push
mov
sbb
mov
gs
or
mov
mov
sbb
fcmovu
mov
pop
mov
sbb
push
adc
rolb
dec
push
in
adc
adc
or
xorb
xchg
cli
adc
ret
xchg
pop
sub
insb
adc
ja
cwtl
mov
or
insl
loopne
les
lods
in
int3
or
test
fistl
rorl
adc
loopne
add
sub
imul
scas
in
mov
in
sub
mov
push
add
popf
xor
pop
rorb
dec
mov
jmp
dec
negl
mov
cmp
xor
fsts
enter
and
lea
push
cmp
and
jne
inc
lea
insb
call
mov
pop
pop
int3
gs
mov
and
not
mov
adc
and
mov
mov
cs
pop
lea
movsb
movsl
and
mov
mov
les
mov
test
lret
enter
test
mov
rcrb
add
push
cmp
divl
in
xor
enter
test
out
adc
xor
sbb
lock
les
stc
sbb
in
add
sbb
mov
push
pop
adc
dec
xlat
push
nop
adc
lds
sbb
test
stos
push
inc
push
dec
pop
pusha
mov
mov
push
jnp
popa
sbb
and
loopne
movups
sbb
pop
repnz
sbb
pop
insl
mov
pop
adc
aas
or
mov
cltd
sub
pop
jno
sbb
adc
loopne
add
sbb
inc
sbb
xor
jmp
sbb
add
mov
cmpsl
sbb
sub
inc
rclb
pop
aaa
mov
fs
test
or
lret
mov
enter
lods
lods
sub
xor
stos
jle
rolb
sbb
ret
rolb
sbbl
xchg
out
insl
scas
jge
cwtl
or
popf
movsb
data16
je
stos
pushf
mov
and
nop
iret
mov
mov
and
adc
cwtl
mov
mov
push
ljmp
sbb
lods
rcll
push
mov
fcoms
xor
and
push
add
xor
lret
dec
shrb
jbe
js
leave
xor
pusha
mov
addb
push
xor
or
out
mov
xor
jl
and
mov
mov
fdivs
adc
shrl
mov
std
inc
dec
enter
mov
pop
xchg
inc
and
jge
in
or
and
shll
lods
mov
cmp
sub
stc
inc
pushf
pop
orb
lods
in
mov
int3
lret
add
rol
sub
loop
pop
test
sbb
dec
and
mov
cwtl
mov
mov
pop
nop
test
add
cltd
sub
dec
xor
icebp
add
les
xor
inc
xor
pusha
ret
mov
push
and
pop
jp
lea
fs
adc
mov
scas
sbb
shlb
xor
movsb
sbb
fdivr
call
sub
lds
rclb
pop
sbb
call
test
cmpsl
mov
cmpsb
shlb
call
pop
and
dec
jge
mov
mov
xchg
cmp
call
mov
jmp
es
mov
dec
adc
sbb
clc
cmpsb
ss
adc
je,pn
inc
cwtl
dec
js
sbb
rcrb
movsb
jb
mov
jp
idivl
fsubs
std
movsl
xchg
xchg
leave
add
insb
adc
mov
sbbl
adc
adc
dec
push
leave
and
sbb
xor
and
and
and
dec
inc
sub
or
dec
xor
daa
jno
sbb
cli
sub
and
imul
shlb
adc
decl
icebp
call
push
pop
movsb
enter
sub
mov
sub
pop
dec
and
sub
int3
pop
in
and
or
sub
mov
ret
or
adc
or
mov
jno
or
or
jne
lds
std
sbb
or
shlb
add
test
sbb
and
sub
jl
dec
lret
jmp
jb
jb
movsb
mov
lock
ficoml
bound
sub
addr16
jae
inc
int3
fwait
sbb
add
pop
sbb
pop
jb
rcl
xor
adc
mov
or
int
cmp
lea
sub
jbe
pop
pop
adc
push
xchg
fs
inc
ljmp
lods
dec
aas
rorb
dec
or
rorb
mov
mov
pop
out
nop
mov
push
push
test
xorl
lods
sbb
pop
enter
adc
andb
or
je
orb
sbb
add
loopne
inc
and
das
rolb
popa
movsl
out
xor
mov
addl
bound
mov
push
xor
add
cmp
mov
or
mov
and
push
shrl
shll
sbb
fbstp
push
stos
mov
mov
andl
xlat
lds
mov
int3
das
xor
scas
add
xor
jmp
jmp
dec
movb
xchg
cmp
cmp
or
add
aam
or
mov
pop
cwtl
cmpsb
popa
mov
xor
in
xor
jb
adc
cwtl
mov
fisubl
jbe
mov
xor
movsb
sbb
aam
daa
in
jne
inc
movsb
gs
xor
into
idivl
inc
scas
movsl
adc
sbb
adc
sbb
pop
adc
push
test
adc
call
xchg
leave
ret
mov
dec
push
xchg
mov
movsb
pop
cmpsl
mov
hlt
adc
sbb
dec
cmpsb
fsts
xchg
push
ss
or
pop
pop
xor
sbb
cmpsl
adc
cltd
xchg
xor
add
orl
inc
out
es
adc
sbb
in
and
orb
dec
imul
getsec
aam
push
test
and
push
push
shlb
fucomi
enter
jg
mov
cmp
mov
cwtl
inc
ret
xchg
loopne
inc
adc
jbe
lret
out
inc
mov
cmpsl
lock
cmp
add
aam
pop
aad
inc
mov
aam
jbe
ret
mov
aam
mov
shrl
out
mov
cltd
insb
fildll
enter
mov
xor
icebp
mov
add
mov
hlt
pushf
sarl
xchg
jmp
cwtl
jae
aaa
push
int3
les
sbb
repz
add
leave
cmp
fstp
fdivr
jbe
roll
loop
jmp
cmp
nop
sub
push
frstor
mov
dec
sarl
push
sbb
adc
inc
pop
inc
jge
test
shrl
dec
fistpl
jo
and
cmpb
push
cmp
mov
jb
and
or
scas
xor
pushf
sbb
enter
insb
popa
js
subb
xchg
mov
fs
fstpl
jbe
shrd
mov
xchg
sahf
pushf
pushf
fmull
int3
enter
fmull
inc
mov
mov
pushf
pushf
nop
orb
cs
jb
imul
dec
aam
inc
das
imul
sub
pushf
adc
dec
es
pop
repnz
xor
add
dec
lret
inc
mov
iret
jns
add
je
jne
mov
push
out
jl
sbb
sub
inc
fnsave
add
cmp
leave
inc
or
or
pop
rorb
mov
add
or
add
inc
test
addl
or
and
enter
stos
popa
adc
xchg
cs
lods
aam
aam
lods
xchg
addr16
pushw
movsl
mov
lods
or
bound
es
jne
les
popa
sbb
decl
test
dec
test
movsb
mov
jmp
sbb
mov
movsb
in
mov
xor
adcb
mov
add
inc
pusha
jo
mov
movsl
loope
in
xchg
arpl
or
dec
mov
lods
sbb
inc
icebp
jge
pusha
push
mov
arpl
rorb
pop
dec
cmp
sbb
cltd
dec
jno
cmp
xorb
and
dec
rclb
sbb
dec
xor
adc
pusha
imull
dec
cmpsb
or
xchg
in
fwait
xlat
adc
mov
dec
xchg
aad
dec
cmpsb
negb
ss
and
sub
aad
sbb
insb
inc
enter
push
pop
scas
push
nop
sub
pop
pop
adc
inc
xor
rolb
fs
insb
jecxz
xchg
dec
mov
mov
cmpsb
stc
dec
lcall
enter
invd
push
aas
outsl
cs
stos
aam
rcrb
adc
mov
rorb
jmp
psubw
and
test
mov
shr
sub
or
loopne
nop
mov
enter
mov
adc
insl
shll
imul
sbb
pusha
add
or
sbbb
mov
push
and
xchg
andb
mov
fwait
fs
stc
les
dec
dec
mov
mov
mov
xchg
sbb
enter
dec
es
rclb
fs
pushf
xchg
ja
nop
xorb
adc
adc
aas
xchg
xor
adc
mov
enter
pushf
add
loope
sub
push
sbb
jo
pusha
pop
sbb
mov
sbb
xchg
or
mov
mov
mov
mov
push
add
cmp
leave
dec
cmp
repnz
or
repz
sub
jno
adc
push
das
insb
sub
pop
cwtl
das
sbb
xor
pushf
mov
sub
lea
add
xchg
addr16
inc
inc
mov
pusha
mov
mov
mov
jo
sbb
rcr
xor
mov
inc
push
jo
lock
mov
mov
repnz
daa
or
dec
nop
insl
call
xchg
in
loop
xlat
insl
int3
daa
or
or
popf
jbe
sub
repnz
mov
inc
push
and
adc
insl
hlt
cltd
inc
jne
add
inc
jno
repz
insl
push
pop
sbb
xchg
add
adc
add
sub
add
les
xor
sub
clc
mov
cmp
cmp
add
icebp
sar
sbb
cmp
mov
test
mov
cwtl
int3
lea
push
int3
in
sbb
enter
dec
or
mov
push
sbb
rcr
xorb
or
fs
and
iret
fstps
call
and
scas
dec
insl
inc
ljmp
sub
out
sbb
mov
aaa
mov
dec
sub
cmp
mov
lods
movsl
aas
out
sbb
jmp
push
jnp
fdivl
sub
lock
pop
rcll
jnp
jno
cmp
repnz
fbstp
in
mov
adc
dec
cmp
sbb
adc
and
xor
pop
xchg
xchg
or
pop
rclb
push
mov
insb
or
adc
rcrb
inc
mov
adc
test
pop
int
nop
addb
push
adc
loope
dec
mov
fnsave
adc
lods
adc
adc
enter
add
xor
enter
call
mov
pop
dec
add
and
cmpsb
movsl
push
leave
adc
not
mov
sbb
fwait
popl
and
push
push
cwtl
aam
adc
adc
or
inc
sub
or
ljmp
adc
pop
and
cs
loopne
dec
inc
xor
add
push
sbb
sub
imul
pop
repnz
mov
push
jo
xor
inc
mov
inc
xchg
jge
mov
inc
pop
adc
ffreep
xor
std
xorl
inc
sti
pop
xchg
fst
push
test
lea
sbb
dec
seto
push
insl
mov
fisubl
mov
xchg
pop
push
in
xorb
jecxz
cmp
inc
adc
imul
dec
cltd
push
ret
mov
adc
scas
test
xchg
out
sbbl
lods
cmp
pusha
xor
test
je
inc
repnz
adc
xchg
xor
inc
inc
add
xchg
inc
sti
mov
push
lcall
xor
push
andb
cmp
dec
xor
jo
or
sbb
nop
cmp
sbb
mov
and
inc
pop
lds
fs
push
inc
sbb
or
add
pop
and
js
pop
insb
dec
adc
in
or
sbb
inc
sub
mov
xorb
xchg
bound
sbb
sbb
xor
fidivl
xchg
and
fsubl
sbb
push
pushf
nop
inc
test
sbb
sbb
add
mov
ret
leave
shll
addr16
cmc
and
cmpsb
or
mov
dec
mov
sbb
pop
xor
inc
push
adc
dec
es
test
mov
add
insl
pushf
icebp
movsb
mov
sbb
lea
push
test
or
or
pop
js
aam
dec
outsb
pop
shrb
push
pop
inc
lods
pmullw
imul
jne
jo
pop
pop
mov
and
inc
pop
add
lock
push
dec
mov
or
sbb
out
add
sub
dec
or
jnp
aaa
sub
fmulp
rcrb
xchg
push
adc
add
pushf
jbe
fcoms
and
faddl
dec
push
pop
xor
subb
in
mov
nop
call
aaa
cmp
push
and
sub
in
mov
mov
inc
clc
fsub
pusha
mov
or
fcoms
mov
jecxz
nop
out
movsb
repnz
sbb
and
mov
mov
addr16
fcmovnbe
sub
movsb
dec
xchg
and
mov
or
add
mov
scas
pop
push
and
addr16
lret
imull
inc
sbb
fmull
orb
call
or
pop
je
cs
pop
xor
arpl
sarb
dec
adc
xchg
sbbb
pop
push
or
push
push
and
and
and
fucomp
daa
pop
neg
stos
mov
push
xchg
mov
add
jns
test
pop
add
imul
cmpsl
mov
loopne
repz
xlat
xor
pop
outsl
nop
jnp
repz
rcr
push
adc
mov
or
xor
add
jecxz
xchg
outsb
insb
mov
insb
mov
push
shrl
jo
jge
das
dec
es
mov
jmp
mov
push
rolb
clc
jnp
mov
add
repz
adc
mov
rcll
xchg
adc
or
cmp
rclb
cmpl
jns
mov
test
add
nop
add
into
pop
adc
test
and
out
push
push
mov
out
xor
data16
mov
cwtl
sbb
sub
xor
jnp
xchg
adc
add
pop
sub
xorb
cmpsb
bound
and
insb
outsl
arpl
imul
outsb
cmp
xor
sub
je
arpl
jne
jb
outsb
je
add
das
add
push
insl
out
or
push
dec
push
shlb
mov
inc
outsl
jb
js
je
jb
gs
add
or
fcomi
cld
mov
add
add
add
jne
les
scas
pop
mov
push
and
and
push
add
add
or
es
add
inc
in
std
fisubrl
add
add
aas
ja
lds
push
add
pop
dec
add
ja
scas
pop
sub
push
insl
xchg
je
sti
push
sbb
je
and
jae
dec
fisttpl
jge
orl
push
push
xorb
or
bound
cmp
jne
imul
fidivrl
jbe
aas
imul
dec
insb
jp
outsl
or
mov
dec
fs
lret
jnp
mulb
and
outsl
jmp
jo
jbe
cs
dec
lret
stos
or
jae
push
imul
scas
cmp
jne
inc
mov
loop
push
data16
popa
mov
xchg
ds
ret
imul
dec
sub
jnp
mov
lahf
jno
shlb
push
outsb
inc
scas
mov
inc
or
test
jo
daa
dec
jbe
cs
cmp
xor
je
adc
push
arpl
mov
xor
shlb
xor
sub
fbld
or
push
mov
jb
ret
add
mov
adc
xchg
or
cvtps2pd
push
or
push
sub
mov
outsl
xchg
lahf
aaa
jg
cmpsb
mov
ja
iret
mov
sbb
sbb
imul
xor
jne
jbe
jb
jne
test
shll
jbe
adc
pop
stos
js
ds
js
das
rcrl
push
mov
fisubl
push
jo
loopne
insl
stos
lahf
outsl
aas
or
or
iret
arpl
aaa
sbb
fsubrs
dec
pop
loopne
insl
lret
imul
jb
fs
imul
shll
pop
lock
rdtsc
jne
push
cmpsl
outsl
pop
sub
das
xchg
sbb
fisubrl
pop
mov
pop
insl
push
enter
je
scas
cmp
mov
jg
jno
xor
scas
popw
mov
jecxz
push
push
sub
popa
test
shlb
pop
ret
insb
add
add
out
js
and
out
enter
and
adc
adc
enter
jb
adcb
sbb
mov
and
jmp
sbb
stc
repnz
clc
pop
xor
jmp
js
inc
mov
jns
jp
cld
cmpsl
mov
dec
call
aaa
ret
mov
addr16
jbe
fdivs
add
jo
les
fcmovne
or
cmp
mov
cmp
imul
sti
lock
ja
ds
mov
negb
cmpsl
push
fwait
cmp
ja
and
sbb
mov
outsb
fbstp
add
add
mov
jns
add
das
das
and
pop
mov
shlb
dec
ljmp
pop
inc
and
xchg
mov
rorb
ret
ficompl
addr16
idivl
aas
sbb
jl
inc
mov
push
testl
lods
mov
jne
outsl
dec
and
adcb
pop
inc
das
pop
mov
sub
iret
mov
insl
in
jns
out
out
fstpt
loopne
and
arpl
mov
inc
fwait
rcl
jae
push
and
sub
pop
dec
fbld
mov
fstl
pop
neg
iret
lea
pcmpgtb
cmp
cmp
add
jmp
lahf
fs
dec
and
jns
add
das
cld
dec
sti
insl
das
jns
push
dec
push
inc
inc
arpl
bound
sti
mov
mov
dec
arpl
test
je
inc
jne
jne
xor
insb
xchg
lds
push
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
into
mov
xchg
jns
jg
addr16
popa
je
jle
out
jne
xor
and
daa
fbstp
fs
sbb
dec
outsl
outsb
and
jae
mov
jbe
pop
shrl
inc
aas
add
out
dec
or
mov
dec
add
insb
jae
inc
cmpsl
nop
insb
push
push
inc
push
popa
insb
jne
or
pop
inc
inc
mov
pushf
xchg
xor
daa
and
sub
sub
cs
xor
xor
xor
ss
pushl
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
push
push
push
pop
pop
filds
pop
pop
pop
adc
popa
bound
gs
imul
clc
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
daa
mov
inc
dec
adc
lcall
loopne
mov
add
orb
jg
testb
ljmp
lret
jno
icebp
pusha
inc
mov
das
fdivrp
repz
ret
movsl
add
xorl
mov
imul
roll
push
ja
xchg
incb
gs
xor
popa
js
mov
add
dec
pop
or
lods
sbb
out
ret
testb
ret
sub
add
fwait
cmpsb
xchg
push
scas
add
push
mov
sti
push
add
add
add
and
push
pop
test
test
push
add
xor
lcall
add
pusha
push
fstpl
inc
add
or
xor
sbb
mov
addb
addb
mov
imul
and
adcb
pop
daa
push
addr16
mov
push
and
sub
jb
bound
add
mov
add
js
push
outsb
imul
outsb
and
push
or
adc
add
popf
inc
sbb
mov
pushf
cmp
fwait
test
rorb
add
xchg
pushf
cmp
lea
mov
nop
xchg
xchg
cltd
in
xchg
xchg
mov
mov
add
jo
je
popf
scas
mov
stos
shl
hlt
add
lods
mov
lods
push
mov
scas
xlat
imul
push
sbb
aaa
or
pop
sbb
push
push
out
push
ja
inc
sub
dec
inc
pop
dec
dec
inc
dec
mov
mov
inc
adc
notl
filds
je
cs
jae
jp
add
bound
je
outsb
data16
inc
fcomi
out
push
jbe
dec
out
je
xor
in
insl
sub
push
xchg
daa
pop
in
mov
gs
outsl
js
push
inc
insb
sti
inc
repnz
and
insl
jo
jo
and
outsl
pop
pop
ljmp
insb
les
dec
imul
mov
mov
cmp
dec
inc
jb
jns
jae
mov
daa
pop
and
jnp
jns
mov
insb
and
fcoms
in
and
addr16
push
jle
jbe
jle
jo
or
jb
and
mov
fwait
or
jbe
push
mov
mov
push
lahf
fs
insl
add
and
and
lods
jp
pusha
inc
pop
jbe
xchg
pushw
popl
lock
xor
imul
add
lds
push
inc
inc
pop
daa
mov
dec
adc
shll
lock
push
outsb
mov
mov
pop
push
push
jae
or
adc
scas
lods
cmp
call
sub
cmpl
das
outsb
gs
mov
lea
cmp
mov
push
push
push
dec
testl
mov
dec
xor
aam
enter
stos
popa
mov
fisttps
mov
ds
or
sub
sbb
push
imul
lds
or
dec
xchg
inc
rorl
push
sbb
xor
jl
popaw
sbb
pop
mov
inc
jg
sub
jno
pusha
push
or
push
outsl
xchg
lods
jo
aaa
daa
xchg
mov
popw
insl
lahf
cmpsl
cmp
es
or
ds
and
sub
inc
jl
loope
jnp
push
addr16
jle
cmpsl
fnsave
dec
jle
add
negl
sysret
or
sbb
xchg
ret
aaa
sbb
and
push
mov
rorl
xchg
pop
shll
pop
jne
stos
addr16
push
jbe
insl
popf
roll
xor
gs
or
mov
cmpb
dec
sbb
sahf
mov
pop
sub
popa
sub
push
jl
out
sub
jns
add
cmp
xor
iret
mov
sahf
sbb
add
clc
lock
clc
repz
int
push
enter
mov
cmp
mov
lods
test
cwtl
jns
repz
nop
mov
test
addb
js
mov
je
pop
aas
repz
jae
das
pusha
push
pop
pop
push
iret
repz
push
dec
dec
inc
inc
cmp
iret
repz
xor
sub
jns
iret
repz
add
call
out
test
push
sahf
sub
call
iret
repz
push
dec
inc
xor
sahf
int
adc
cli
cld
in
rcr
jns
out
mov
out
lock
neg
jns
int3
stc
xchg
stc
mov
xor
test
mov
fdivrp
inc
clc
jle
mov
mov
add
and
adc
test
mov
add
and
push
mov
addb
push
sbb
add
xchg
sub
inc
or
jbe
addl
imul
push
adc
movl
add
add
mov
jnp
or
jnp
push
pop
fildll
or
cmp
or
test
mov
call
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
pushl
mov
mov
mov
ret
enter
int3
int
iret
rcl
call
rcl
aad
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
test
std
push
repz
cmc
div
clc
stc
cli
sti
cld
std
jmp
or
sub
call
sub
push
test
push
adc
js
popa
data16
add
cmc
pusha
pop
shlb
cmc
out
xor
add
fiaddl
data16
daa
fidivs
add
push
arpl
jecxz
sti
sub
fs
sbb
jns
je
xor
jp
mov
jne
iret
decb
sub
add
inc
adc
mov
dec
and
xor
push
dec
inc
dec
ud0
aaa
repnz
dec
inc
add
adc
sub
adc
nop
mov
inc
cmp
mov
mov
jnp
inc
loop
mov
inc
push
imul
pop
clc
lret
sbb
mov
xchg
jge
arpl
cmp
stc
lds
adc
fisubrs
and
repnz
or
push
cmpsb
iret
lret
add
jmp
inc
inc
mov
mov
sub
fwait
fwait
testl
int
jns
ds
xor
incb
int3
decl
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
decl
pop
and
xchg
lret
sahf
icebp
mov
cld
ss
decl
or
cmp
jle
inc
mov
xchg
push
pop
xchg
sub
pop
mov
jg
mov
jns
mov
dec
test
xor
aas
jle
dec
add
scas
lods
dec
lock
xor
aas
mov
nop
adc
pop
pop
repnz
ret
lahf
and
es
mov
fcompp
add
add
int
fimuls
dec
adc
sub
push
dec
pop
mov
xorb
dec
daa
int3
and
inc
jmp
clc
bswap
or
add
push
into
mov
inc
inc
loopne
xchg
and
xchg
cmovg
jl
out
mov
and
std
adc
or
sbb
mov
outsb
addr16
jo
addr16
es
jae
lret
or
popa
out
and
fistpl
push
data16
scas
adcl
test
roll
xlat
bound
test
jg
adc
add
pcmpeqw
loopne
xlat
sti
or
ret
daa
daa
je
or
cmp
jmp
insb
stos
push
mov
lahf
js
push
add
jmp
xchg
clc
xchg
shlb
xchg
ret
mov
testb
push
push
sub
push
out
xlat
sbb
add
and
aad
outsl
imul
add
jb
jae
jae
js
cmp
insl
jle
fs
sub
cmpsl
mov
and
jmp
ret
outsl
popa
jg
pop
cmp
out
fisttps
pop
out
mov
scas
cmp
push
mov
cmp
mov
loope
insb
daa
jnp
stos
bound
cmpsl
cmp
and
add
les
jae
fsubl
add
les
outsb
xlat
jg,pn
mov
jmp
jne
adc
cmp
push
mov
jae
xchg
js
sub
pop
sub
aas
cmpsl
out
pop
mov
add
mov
cmp
pop
pop
mov
or
loope
adc
stos
scas
jmp
imul
ret
pop
shll
push
es
sti
cmp
divl
aad
sarb
out
and
pop
mov
scas
dec
aaa
xchg
inc
arpl
xchg
nop
xorb
mov
aas
xchg
gs
loope
arpl
dec
jp
xchg
ja
pop
jecxz
cmpsl
sbb
dec
sbb
sbbl
addr16
outsb
pop
lahf
out
xlat
addr16
je
inc
sbb
push
mov
mov
arpl
daa
pop
arpl
rorb
gs
jne
ret
das
xor
and
jo
and
arpl
and
pop
stos
pop
pusha
fdivrs
insl
inc
add
mov
fldt
mov
jnp
stos
xchg
mov
push
push
das
push
xchg
lret
sub
inc
sub
push
adc
test
or
lock
add
mov
sarl
into
ds
pop
das
outsb
mov
je
jb
and
push
add
daa
pop
push
arpl
decl
adc
mov
pop
xchg
inc
push
ret
jae
data16
jb
add
or
xor
add
ja
jmp
out
add
adc
aaa
pop
notb
fiadds
pop
stos
push
out
push
push
pop
mov
push
pop
sbb
bound
and
les
and
testl
dec
pop
aas
dec
imul
rcll
inc
call
mov
out
loop
clc
xchg
js
mov
dec
arpl
pusha
notl
cmp
addb
je
sbb
push
sub
outsb
outsb
sub
and
jle
jmp
push
stos
inc
mull
jae
imul
and
pop
mov
addr16
lret
push
fbstp
and
xchg
fisubrs
push
push
jecxz
push
imul
mov
adc
inc
repz
add
mov
in
dec
aas
inc
sub
cs
fistpll
es
or
xchg
out
jecxz
jne
inc
push
inc
subl
mov
arpl
dec
insb
fidivs
inc
inc
and
sbb
subb
adc
mov
add
ss
mov
iret
mov
push
pop
cs
xchg
daa
psllq
adc
pop
mov
mov
in
or
inc
push
aas
ja
je
insl
xchg
push
sub
push
jmp
lahf
inc
jo
nopl
inc
pop
imul
xor
add
xchg
lahf
mov
outsb
filds
mov
jl
jno
adc
out
pop
jl
mov
imul
in
inc
jae
lret
sbb
lea
fisubs
bound
adc
sbb
ret
out
scas
aaa
clc
mov
cmp
mov
jns
jae
bound
out
outsb
jl
push
repz
out
push
jecxz
outsl
jl
pop
jecxz
out
or
sbb
js
mov
repz
insl
push
mov
imul
sarl
adc
arpl
dec
sbb
sbb
xchg
add
xor
cmpsl
jnp
sub
rolb
jo
fistps
roll
vmread
add
jmp
add
jl
mov
mov
andb
jl
xchg
sbb
sbb
out
addl
push
repnz
or
es
shl
arpl
imul
sbb
dec
sbb
pop
add
pop
push
ja
push
sbb
sub
pop
xchg
mov
out
mov
push
jecxz
pop
sbb
daa
push
imul
jb
sahf
hlt
pop
es
jae
mov
sbb
jae
inc
and
inc
mov
mov
push
sbbb
js
xor
jo
mov
insb
das
negl
popa
push
daa
filds
push
ljmp
je
aaa
push
bound
add
push
fmuls
xchg
fcoms
pop
jbe
inc
jg
push
cmp
js
lret
add
insb
iret
mov
es
or
mov
outsl
movsl
out
sub
ss
xor
aaa
adcl
scas
lahf
shrb
addb
sbb
insb
ss
inc
dec
push
mov
push
inc
add
ljmp
lret
ds
addb
in
fstps
push
lods
es
push
pop
ds
mov
out
rol
or
mov
jg
mov
jnp
test
pop
cmp
mov
pusha
mov
dec
daa
hlt
inc
add
orl
xchg
fsubrs
jb
adc
dec
gs
inc
sbb
mov
dec
or
xor
push
push
inc
insl
fdivp
sahf
loopne
push
ds
es
xor
jns
in
outsl
jg
push
sbbl
mov
jle
mov
outsb
push
iret
rclb
fdivp
pop
aaa
dec
and
sub
ja
aam
jae
ja
and
addl
xor
mov
xor
or
pop
push
fcomi
insb
push
sub
rorb
mull
jne
movhps
xchg
rcrb
and
call
insl
cmp
pusha
push
popa
jne
or
and
or
bound
xor
imul
pop
jle
arpl
cmpsl
js
sahf
adc
popf
push
mov
mov
dec
push
out
adc
jno
lahf
fs
sahf
out
push
sbb
mov
mov
jbe
js
lods
add
dec
dec
fcoml
outsl
cltd
clc
ljmp
jno
inc
sub
jl
ds
out
push
or
jo
jb
scas
jb
in
pushf
mov
cmpb
jae
sbb
ds
incb
and
and
arpl
xor
or
outsl
sti
cmp
fs
adc
les
adc
mov
outsb
push
fdivs
je
ss
cmp
adc
data16
outsl
stos
mov
fsubrs
sbb
ja
adc
aaa
or
cmp
sbb
and
add
xchg
sub
imul
cmpsl
mov
sub
popw
push
scas
ja
fdivl
dec
push
lfs
xchg
lcall
or
inc
rcrb
or
insl
pop
outsl
addr16
inc
or
xlat
mov
cmc
insb
inc
das
push
and
nop
cmp
and
push
cmpsl
add
xchg
pop
push
adc
mov
xlat
push
mov
repnz
pop
outsb
adc
mov
cmpsl
lea
fcompl
push
add
shr
mov
push
push
inc
push
push
insb
mov
or
aad
inc
inc
imul
push
and
pop
pop
mov
lcall
iret
and
inc
fs
jns
cmpsb
out
fdivl
call
fiadds
test
or
xchg
lods
push
or
aaa
dec
add
pop
je
popw
or
movl
dec
mov
sub
aam
mov
mov
sbb
pop
mov
push
adc
lea
xchg
ds
addr16
pop
dec
sub
iret
dec
stos
sub
pop
jmp
sbbl
pop
repz
mov
iret
inc
mov
adcl
rorl
rcrb
es
adc
outsl
lds
pop
mov
sub
cmpsl
add
outsl
loopne
mov
and
mov
scas
mov
mov
cmp
dec
mov
add
add
or
aaa
and
cwtl
sub
jbe
imul
shrl
stos
jae
inc
jp
movsl
mov
lock
call
inc
and
pop
iret
bound
sbb
and
arpl
shlb
nop
push
inc
jg
adc
dec
jb
fs
add
in
push
dec
fdivrl
jbe
bound
inc
sahf
iret
jns
aaa
sbb
sbb
out
xor
ret
andl
repz
cltd
or
xchg
dec
pop
add
bound
lret
add
mov
fldt
test
add
das
adc
jns
and
in
sub
xor
inc
mov
mov
testl
push
popa
xchg
add
mov
shrb
ret
sub
shrb
int
or
adc
fneni(8087
repz
add
xchg
rclb
fldcw
lret
str
lcall
stc
das
incl
call
fwait
test
xchg
call
xor
push
int3
xchg
jb
mov
jg
push
sbb
pop
test
add
repz
xchg
shrb
pop
mov
movsb
pop
fwait
andb
dec
test
roll
shrl
mov
sarb
das
js
loop
aas
push
repnz
dec
ficoms
pop
or
fimull
popa
addr16
pop
loop
add
mov
inc
mov
dec
inc
rolb
out
cmp
inc
outsl
inc
push
inc
cmp
imul
data16
shrb
or
ja
ja
jg
add
pop
xlat
iret
jb
xchg
je
in
aaa
sub
popl
mov
push
inc
ljmp
aam
push
sbb
lods
lods
dec
cmpsl
arpl
add
aaa
popl
mov
push
mov
mov
push
pop
clc
fimull
scas
xchg
xor
jno
pop
push
adc
jb
or
xor
mov
sub
arpl
lock
sbb
and
cmpsl
push
adc
stos
jb
cmpsl
cmpsl
mov
xchg
mov
sarl
fwait
out
fdivs
imul
outsb
jae
sbb
add
scas
inc
or
jno,pt
pop
inc
repz
add
rolb
pop
inc
sbb
push
inc
push
imul
aad
frstor
sbb
sbb
mov
aaa
cmp
xor
in
pop
ret
and
jecxz
jb
js
test
pop
das
sub
imul
or
sbb
and
outsl
loopne
scas
xchg
cmp
loop
dec
pop
roll
ret
mov
add
nop
lcall
sub
ffreep
out
adc
mov
rol
fistpl
mov
fwait
bound
xchg
xchg
pop
loop
sbb
mov
or
mov
inc
outsb
cmp
push
mov
push
in
adc
sub
xlat
jmp
add
shlb
or
mov
sti
insb
test
lods
sub
movsl
adc
jns
pop
xchg
push
divl
mov
jnp
jb
xlat
loop
push
outsl
pop
push
ficoms
mov
cmp
inc
xchg
clc
add
cmp
mov
add
pop
shr
je
lahf
aas
xor
notb
rcrb
cmp
pop
inc
outsl
daa
test
pop
ja
push
pop
iret
imul
mov
mov
cmpsl
pop
test
fildll
xchg
je
sub
fcompl
xor
inc
jg
sbb
xchg
out
dec
dec
sub
cmpsb
iret
mov
fbld
inc
int
pop
add
out
cmp
arpl
stos
cs
xchg
clc
sub
add
push
dec
sbb
imul
ret
mov
je
push
test
mov
mov
js
xor
sub
in
sbb
xor
das
loope,pn
lds
inc
dec
aaa
inc
mov
add
add
ss
add
sbb
loop,pn
sti
xlat
mov
fsubs
dec
ret
push
adc
push
aaa
outsl
push
ljmp
inc
loopne
mov
lahf
outsb
xchg
sarb
cmp
xor
adc
sbb
rol
insl
xchg
inc
mov
adc
vcvtps2dq
xchg
pushf
mov
rorl
push
xchg
push
inc
push
jmp
test
add
popa
ss
xchg
and
dec
mov
inc
inc
stos
adcl
sbb
push
ret
cmp
addr16
stos
scas
dec
pop
cmp
test
ja
and
pop
mov
pop
jae
arpl
push
or
and
pop
rorb
bnd
sub
push
or
push
dec
cmp
int3
scas
mov
mov
mov
mov
iret
sub
imul
inc
mov
pusha
in
es
movlps
popf
lock
sub
lcall
push
mov
or
and
mov
addl
dec
les
jmp
pop
mov
repz
push
mov
stos
push
scas
add
add
testl
dec
dec
gs
call
outsl
iret
jp
fldl
dec
add
push
insb
dec
inc
jp
jnp
xchg
xor
nop
dec
rolb
mov
fistpll
cmp
and
ja
mov
or
out
jne
ficompl
pop
lock
sbb
out
cmp
cmc
jb
jmp
ja
ret
aas
push
push
mov
addr16
pusha
decb
push
in
add
lahf
push
add
movsb
push
ss
out
push
xor
push
jg
pop
icebp
add
out
add
fwait
xlat
pop
fldt
and
and
es
adc
bound
xchg
scas
sub
adc
xor
dec
inc
pop
dec
or
fisubrs
or
popa
mov
lods
dec
sbb
inc
pop
adc
rolb
lret
repz
fbstp
push
movsl
loopne
pop
aam
mov
cmovg
dec
shlb
adc
loope
or
add
adc
imul
cmpsl
mov
bound
mov
sbb
arpl
mov
adc
adc
sub
lcall
call
mov
adcb
mov
add
jg
dec
fistl
fwait
dec
jo
sub
sub
sti
dec
inc
out
sbb
cmpsl
iret
orl
push
adc
les
fildl
and
add
minps
dec
ret
sti
pop
xor
jecxz
mov
xchg
pop
xlat
sub
iret
xchg
dec
outsl
and
push
mov
xor
or
jbe
rcr
stos
cmc
push
jae
push
mov
jecxz
cmp
jmp
sbb
popf
scas
and
inc
pop
jl
out
jnp
jge
popf
mov
sub
push
das
ss
fs
mov
add
outsb
sbb
sbb
daa
aaa
daa
movsb
inc
lahf
lahf
add
out
cmp
mov
sub
insb
xchg
test
add
jmp
jno
mov
push
insl
arpl
push
push
bound
out
ja
pop
pop
arpl
jl
mov
xchg
fstpl
or
pop
or
xor
repnz
leave
test
cld
xchg
pop
and
in
jb
scas
mov
push
push
jb
je
dec
scas
xchg
push
lods
sarb
sub
and
stos
in
sub
stos
cmpsb
test
pushf
push
test
push
leave
push
jb
push
add
dec
dec
and
jnp
pop
cmpsl
or
mov
scas
xchg
stos
fs
sub
push
leave
test
movsb
shlb
pop
and
imulb
mov
push
lods
xchg
push
mov
xchg
pop
mov
scas
stos
in
mov
mov
dec
scas
xchg
mov
push
jb
inc
lahf
call
push
mov
push
jb
mov
pop
inc
leave
stos
stos
fistps
mov
cltd
bound
icebp
and
add
xor
cmp
add
les
push
lea
pop
pop
fcomps
mov
mov
jo
shlb
jmp
mov
or
xchg
fistl
mov
mov
xchg
iret
in
add
dec
pop
das
mov
inc
push
push
or
xlat
push
adc
add
pop
es
test
or
sbb
mov
xor
push
or
dec
sbb
fistps
mov
das
dec
inc
fldt
stos
adcl
inc
push
xor
mov
or
cvtps2pi
adcl
inc
push
inc
xlat
and
out
fisttpll
xchg
mov
rcl
adcb
xchg
add
sti
fs
sbb
push
scas
fisubl
int3
aas
xchg
push
mov
fists
fmuls
inc
addl
fiaddl
pop
pop
inc
sub
aaa
and
pop
adc
push
jb
xor
jp
cmp
jmp
xchg
test
sbb
insl
push
ljmp
bound
mov
out
aaa
fucomip
sub
aaa
lods
sbb
mov
orb
ss
mov
outsl
jecxz
mov
cwtl
add
lahf
lods
xor
aas
dec
add
pop
gs
fwait
add
add
aas
outsl
or
lods
cmc
pushl
mov
jg
aaa
pop
addb
ja
bound
or
scas
push
imul
inc
pop
push
sbb
les
out
icebp
sub
push
push
outsl
mov
jbe
inc
pop
xor
xchg
push
jg
out
pop
ss
imul
jl
push
add
pop
add
mov
popa
xor
sbb
mov
pop
cmp
sbb
cmp
jnp
pop
or
inc
in
or
add
lods
and
ficoms
bound
fnsave
dec
inc
es
nop
inc
or
inc
xor
imul
addr16
out
emms
ret
cmp
jne
addr16
mov
sbb
adc
je
or
push
loop
insl
je
push
les
mov
sbb
mov
mov
add
sub
xchg
mov
jno
imul
pop
les
in
ss
mov
xor
dec
dec
bound
jae
js
jno
add
lock
gs
and
mov
jo
stos
inc
inc
cmp
add
aam
jno
mov
and
stos
rclb
and
repz
inc
aaa
jl
or
out
pop
add
dec
xchg
push
xchg
out
sahf
jb
hlt
xlat
dec
and
push
fstpt
xchg
dec
ret
mov
inc
mov
sub
cmpsb
sahf
dec
dec
in
mov
aaa
rcrb
or
jmp
sub
fwait
addb
bound
xorb
mov
push
add
stos
xchg
fimull
lcall
scas
pop
inc
add
pop
inc
pop
rcrb
pop
and
sbb
pusha
push
scas
pop
sub
mov
or
push
push
das
cmp
xor
xor
pop
ljmp
jnp
dec
mov
inc
xor
or
xlat
cmp
js
dec
sbb
and
mov
arpl
sub
out
addr16
push
add
mov
mov
out
inc
fiadds
pop
adc
dec
pop
jg
addl
fwait
xor
inc
xchg
push
jae
and
fistpll
xor
aaa
inc
aam
mov
or
push
cmpsl
xor
fwait
and
pop
xchg
loopne
mov
mov
xchg
xchg
xorb
dec
insl
lock
sub
loop
sahf
cmp
mov
push
in
cs
cmp
xlat
dec
sbb
ret
out
es
loopne
arpl
push
and
fstl
out
xchg
loop
fidivrs
daa
xchg
inc
xchg
cmp
inc
cmp
jnp
pop
ret
fs
dec
sub
roll
pop
jecxz
pop
mov
dec
shlb
or
inc
loopne
stos
in
inc
jle
js
xor
in
and
ficomps
jg
into
dec
or
out
sbb
cli
inc
push
bnd
ss
push
push
push
fidivl
bound
xor
repz
ret
xor
out
loopne
inc
cs
lret
jb
mov
ret
cmp
push
cmpsb
xchg
ja
jge
js
retw
pop
fwait
sub
pop
pop
inc
data16
xor
mov
lcall
out
sub
inc
inc
mov
xchg
add
dec
daa
in
fisubs
push
mov
out
pop
js
inc
and
out
sbb
inc
pop
pop
mov
push
es
clc
fidivrs
pop
push
push
xor
dec
mov
fs
inc
pop
dec
es
das
pop
out
mov
add
and
or
idivl
push
sysexit
mov
cmpsl
xor
outsl
push
scas
jge
xchg
push
push
insl
sub
neg
jnp
push
insl
mov
inc
ja,pn
xor
jnp
dec
mov
push
jp
fucomi
loope
ds
fiaddl
jg
fimuls
xor
das
sbb
outsl
dec
xor
in
fisttpll
xor
mov
inc
outsl
imul
add
push
dec
pop
dec
jecxz
inc
pop
jecxz
add
loop
pop
xchg
dec
dec
adc
jne
inc
mov
outsl
adc
push
outsb
scas
fwait
insb
movsl
jo
popl
jnp
dec
xchg
sbb
invd
or
xor
mov
pop
add
inc
inc
fcomi
pop
hlt
pop
int
xor
bound
jnp
ja
scas
add
bound
pusha
imull
mov
inc
adc
pop
add
popa
xchg
cs
pop
mov
sti
cwtl
test
mov
and
pop
lret
pusha
lahf
xchg
jno
fs
pop
push
cmpsl
xlat
addl
push
pop
add
addr16
jmp
arpl
pop
shrl
stos
scas
lcall
fs
mov
lret
xor
lahf
push
mov
push
pop
dec
pop
lahf
add
daa
addr16
sbb
inc
mov
jo
add
sbb
inc
dec
pop
sahf
xor
pop
sbb
mov
mov
push
sub
push
shll
imul
sub
mull
xchg
or
pop
xor
mov
push
dec
inc
fisubrs
fs
outsl
inc
cmp
jl
lods
push
add
pop
aas
add
out
or
hlt
adc
push
add
divb
cmpsl
sbb
add
pop
iret
adc
pop
mov
test
add
popa
cs
xchg
outsb
out
dec
movsl
mov
shlb
jb
mov
sub
gs
sbb
pop
scas
arpl
push
jo
xchg
add
jg
arpl
mov
ja
dec
mov
push
ljmp
repz
sub
add
test
out
jae
inc
pushf
add
nop
add
mov
pop
js
push
sarl
and
pop
cmp
jne
jo
arpl
xor
pop
pop
ja
xor
push
add
jo
or
mov
into
popl
pop
push
sbb
je
cmp
xor
cs
jbe
lods
push
mov
add
adcl
add
fiadds
iret
das
push
sub
das
mov
pop
pop
outsl
ret
clc
addl
dec
mov
test
fldpi
fildll
mov
cmpsl
add
out
scas
inc
ret
and
sub
test
mov
adc
dec
sti
and
push
das
mov
ret
stos
das
or
fwait
iret
push
nop
mov
inc
pop
test
jge
outsl
popa
fldt
or
iret
popf
pop
xor
sub
lahf
mov
pop
sub
and
jmp
mov
inc
mov
mov
pop
dec
sysenter
push
xchg
addl
sbb
mov
test
filds
mov
outsb
dec
arpl
jae
lea
sbb
jbe
push
imul
xor
das
add
mov
outsl
sub
xlat
aaa
and
push
les
sbb
mov
sub
stos
pop
movsb
push
out
dec
xlat
add
xlat
mov
push
nopl
inc
fldt
mov
xchg
fiaddl
shlb
push
mull
push
push
xor
pop
lahf
sub
imul
daa
mov
adc
fildl
in
sbb
insb
outsb
push
enter
dec
ss
les
cmp
inc
xorl
faddl
adc
mov
ret
or
nopl
or
jg
and
mov
mov
pop
sbb
pushl
mov
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
push
push
insb
out
pushl
ss
adc
cli
mov
sub
sub
inc
cmp
mov
sbb
mov
ds
imulb
in
pop
sbb
xor
mov
dec
jg
cmp
cs
pop
sbb
mov
ja
cli
dec
pop
dec
xchg
jecxz
dec
push
pop
mov
pop
adc
mov
mov
aad
xchg
push
in
or
xchg
fnstenv
cmc
imul
ss
add
loope
outsl
or
cmpsl
sub
cmp
rorb
dec
cmpsb
popf
in
cmp
pop
push
dec
es
inc
sub
and
mov
add
push
daa
cmp
hlt
xor
cmp
inc
and
cltd
in
dec
mov
dec
dec
rolb
or
mov
xor
stos
and
mov
decl
jp
mov
aaa
dec
ror
push
loope
pop
aam
arpl
jns
xchg
pop
rcl
xor
pop
fstpt
pop
popf
ljmp
or
mov
pop
xor
inc
adc
inc
push
sbb
addr16
cmp
jne
addl
cmp
fs
das
clc
ljmp
notl
add
and
dec
addr16
hlt
ret
imul
pop
int3
or
cmp
popa
outsb
imul
das
cs
or
pop
xchg
nop
inc
add
add
and
daa
fcomps
aaa
insl
mov
call
and
add
push
jae
add
test
popl
daa
popa
aam
bound
popa
aam
xlat
push
pop
inc
andl
pop
dec
push
push
jmp
or
scas
mov
je
add
out
movsl
push
pop
or
mov
xchg
outsb
inc
inc
lods
addr16
inc
push
xlat
aaa
xor
fbstp
push
mov
push
add
inc
add
sarb
push
add
or
clc
sahf
push
ss
lcall
fmuls
out
add
rdpmc
pop
iret
push
add
jb
pop
scas
test
push
dec
in
dec
repz
or
es
ljmp
mov
lcall
inc
shlb
aam
and
dec
punpckhbw
or
test
outsl
add
push
lods
aaa
dec
inc
xchg
cld
orb
test
ficoms
sbb
add
push
fs
jno
insl
cmp
stos
adcb
out
repz
push
outsb
mov
fstps
mov
out
mov
pop
mov
push
mov
repnz
xchg
fmull
repz
push
add
cmp
push
es
ret
mov
push
and
push
jae
insl
jg
jns
int
add
and
push
jo
jbe
fcmovne
mov
xchg
rorb
in
add
push
daa
aaa
pop
rorl
in
jge
cmp
cmpsl
and
jns
testl
pushw
and
mov
test
xchg
cmpsb
pop
mov
insb
and
dec
push
push
and
out
imull
sub
divb
push
stc
sub
sub
cmp
add
push
jno
out
cmp
mov
sbbl
cmp
jp
mov
xchg
faddl
mov
sbbb
mov
fnstcw
push
cs
pop
addr16
pop
repz
in
jo
inc
xchg
push
cmpsb
mov
addr16
add
push
inc
inc
jl
dec
jmp
inc
mov
mov
jecxz
lret
sahf
rclb
aaa
fstl
jp
sti
pop
inc
or
push
pop
xor
jnp
repz
xor
push
jo
neg
and
push
cmp
sbb
out
fsubrp
pop
inc
push
push
push
push
es
mov
add
jnp
js
xchg
pop
subl
pop
mov
cmp
mov
xor
repz
dec
test
in
jns
xor
dec
jecxz
xor
jbe
ss
out
aaa
sbb
push
cmp
xor
ss
push
out
sahf
in
inc
out
cmp
pushf
into
iret
repz
lock
xor
addr16
idivl
and
fwait
out
sar
cmp
daa
inc
mov
jle
mov
mov
repz
sub
push
inc
mov
aad
pop
dec
sbb
daa
push
shrl
adc
jg
xor
rcrb
push
push
mov
xor
adc
fimuls
pop
pop
mov
jbe
aas
fldt
leave
loop
and
push
pop
push
inc
mov
je
inc
cs
mov
and
pop
sbb
test
imul
adc
or
bound
repnz
mov
daa
or
stc
adc
add
scas
or
insb
aaa
or
addr16
and
and
insb
jno
negl
add
fiadds
leave
rcr
or
outsb
lcall
push
push
js
xor
mov
pop
insl
cmovs
xor
sbb
and
dec
xchg
pop
xchg
mov
outsl
xchg
fcmovbe
lods
xchg
fildll
rcrb
stos
cwtl
mov
and
cmpsl
mov
pop
push
dec
lock
push
cli
inc
outsl
aam
push
popa
je
inc
addl
adc
fstpt
xchg
mov
xchg
inc
mov
flds
push
ficoml
lods
mov
fisubrs
pop
lcall
lret
es
push
and
xorb
test
dec
mov
dec
movsl
daa
inc
inc
or
pusha
mov
fmuls
pop
sub
inc
lods
xlat
out
addr16
lahf
push
cmp
push
aaa
xor
mov
js
or
pop
dec
mov
ja
lods
mov
jo
inc
mov
dec
aas
arpl
xchg
das
inc
add
adc
mov
jecxz
xor
testl
popa
or
popa
fdivrs
dec
pop
jb
mov
divl
sub
mov
xor
daa
add
dec
push
and
sysexit
ja
leave
sbb
pop
mov
jmp
push
or
add
jbe
jo
xor
or
aaa
test
outsb
push
jnp
xor
and
fwait
add
test
add
cmpsb
loop
dec
push
lahf
pop
mov
fisubrs
or
addr16
lea
lahf
add
xor
popl
lahf
pop
xchg
cmp
inc
inc
mov
lret
shlb
add
stos
xchg
out
sub
add
mov
gs
rclb
jbe
add
dec
loopne
pop
das
mov
and
inc
add
inc
mov
mov
pop
pop
rcrl
or
push
rcr
mov
testb
push
inc
sub
cmp
dec
pop
mov
jg
emms
pshufw
je
xlat
das
pop
adc
push
xor
sub
iret
inc
jbe
pop
pop
add
inc
loope
pusha
test
sbb
mov
dec
popf
sbb
add
xchg
das
testl
iret
pop
add
lock
jb
das
or
add
insl
pusha
add
shrl
daa
xchg
xchg
inc
rolb
inc
jecxz
addl
pop
adc
inc
add
jmp
and
mov
jbe
inc
sbb
mov
mov
out
les
cmp
mov
loopne
push
push
sub
aas
sbb
or
push
xrelease
push
sbb
lahf
or
test
mov
inc
pusha
stos
aas
push
arpl
pop
push
add
dec
popa
adc
sub
pop
push
addl
fadds
das
pop
pop
add
push
pop
outsl
jmp
clc
mov
sub
mulb
mov
jg
dec
mov
mov
inc
inc
push
inc
mov
scas
sub
cmp
dec
push
push
pop
out
or
pop
out
sarb
pop
sbb
jnp
jle
fimull
pusha
pop
sarb
repnz
aaa
xchg
dec
arpl
mov
mov
mov
xchg
inc
pop
popf
mov
inc
or
mov
dec
add
stos
cmp
cmpsl
push
call
cmpb
jg
jmp
jl
mov
testl
adc
inc
lret
push
add
hlt
inc
jns
je
adcb
enter
xchg
cmp
lret
outsb
jmp
nop
lret
or
jmp
popa
insl
jo
je
add
addr16
sti
sbb
aas
jo
jae
daa
pop
jno
outsl
xor
pushf
sbb
fadds
aas
and
sub
cmpsb
jns
je
movlhps
push
jne
or
decl
add
dec
out
ret
aas
mov
jae
fcoms
cmp
dec
pop
inc
mov
sub
je
popf
js
and
imul
lods
xchg
ret
sbb
pop
das
andb
sti
inc
jmp
data16
fimull
adc
push
negl
push
inc
or
push
stos
pop
sub
ret
bound
mov
sbb
cmovns
jae
push
push
enter
adc
ret
jmp
into
dec
mov
push
mov
stos
jmp
adc
push
dec
cmpsl
inc
inc
and
aad
fistps
ss
push
test
push
add
jns
jb
cmp
push
iret
mov
adcl
andb
dec
xlat
insl
pop
roll
call
or
ljmp
fmuls
add
pop
daa
lahf
sbb
pop
loop,pt
pop
cmpsb
jb
cmp
or
mov
pop
loope
push
add
imul
aam
push
pop
outsl
inc
push
dec
inc
dec
push
xchg
loop
and
xor
pop
ja
andl
fiadds
jg
ret
cmp
jbe
add
and
push
dec
into
add
add
test
jb
mov
add
insb
jnp
and
cmp
lret
outsl
sbb
xor
das
ds
das
sbb
leave
orb
add
pop
daa
cmp
push
and
push
divl
lcall
inc
inc
push
inc
pop
and
or
aas
js
insb
cwtl
imul
ja
and
and
adc
inc
pop
pop
sub
popa
xchg
scas
test
daa
xlat
ds
fmull
push
or
pop
push
and
aaa
push
rorb
int3
std
imul
mov
outsl
xlat
adc
xchg
sahf
push
scas
mov
shlb
add
lea
pop
lahf
outsb
je
bound
sub
push
jno
mov
out
lahf
outsb
mov
fstps
jbe
mov
loopne
cwtl
push
xchg
sbb
fcomp
jnp
scas
mov
add
scas
icebp
sahf
in
mov
sub
pop
xchg
add
jl
sbb
mov
es
addb
mov
out
sbb
clc
fsubrs
push
daa
or
mov
pop
and
jnp
pop
pop
ss
sub
mov
dec
sbb
push
pop
mov
test
or
in
or
ficoms
sbb
jb
ljmp
pop
rolb
les
adc
outsl
arpl
popa
lock
xor
je
and
and
arpl
push
es
or
push
cmp
jns
movsb
je
mov
popa
mov
movsb
outsl
je
mov
popa
stos
inc
fisubl
add
loop
sbb
and
xor
and
inc
cld
sarb
loop
dec
inc
pusha
lahf
cltd
mov
add
jne
mov
or
push
js
outsl
fs
pop
mov
jo
jns
iret
inc
mov
or
sub
outsl
insl
pop
sbbl
jne
pop
sbb
add
or
xchg
or
cmp
and
mov
pop
gs
adc
pop
jbe
mov
jns
insb
mov
inc
inc
into
loop
outsb
mov
xor
fidivrl
pop
xor
gs
fcoms
jnp
adc
or
inc
cld
outsb
xadd
sbb
inc
cmovo
divl
cmpb
aas
vphaddudq
nop
jo
maxps
loopne
pop
dec
add
call
movhps
push
adc
dec
fucomp
adc
xchg
out
das
push
sbbb
sbb
xlat
push
mov
sahf
out
bound
popl
hlt
idivb
add
adc
inc
fiadds
add
insl
adc
shll
daa
xchg
mov
cwtl
xchg
daa
outsl
inc
xchg
pop
insl
stc
jo
es
call
fldt
xor
xor
fstpl
fsubrl
fistps
and
test
pop
and
push
pop
xchg
and
add
es
push
jg
pop
dec
jnp
mov
fisubl
inc
enter
inc
shl
inc
adc
xchg
insl
in
popf
nop
add
xlat
sub
pop
xchg
cmpsl
add
iret
lds
cmp
push
pop
xchg
and
cwtl
lahf
or
test
mov
loopne
add
adcb
mov
xchg
dec
mov
data16
cwtl
inc
dec
js
repnz
outsl
xchg
movsb
jl
pop
and
sbb
test
enter
or
ds
enter
inc
xchg
add
adc
jns
sub
inc
daa
or
xor
fsts
popl
mov
daa
push
movsb
or
and
push
add
mov
ss
jns
lcall
lahf
fdivrs
inc
lahf
or
in
push
int3
mov
es
mov
outsl
mov
sbbl
mov
lock
or
testb
push
adc
nop
cld
cwtl
inc
inc
pop
jne
ficomps
inc
sbb
add
cmp
xchg
or
mov
add
lahf
inc
fisubrs
loopne
mov
out
clc
aas
loopne
nop
int
mov
insl
in
push
inc
aas
addr16
fimuls
push
pushf
adcb
mov
outsl
jae
iret
add
add
fcomp
aam
mov
pop
cltd
popf
add
adc
cmp
xchg
cld
popf
cmp
add
rolb
dec
scas
in
rclb
xlat
dec
jo
test
jnp
xchg
pushf
aas
popl
enter
pop
or
faddl
in
mov
push
dec
add
sbbb
out
test
sarb
jnp
ja
lcall
jl
dec
lahf
repnz
enter
mov
int3
fdivl
jae
pop
mov
pop
sti
es
mov
jae
dec
ja
mov
repnz
insb
jl
and
test
lods
sbbl
cmp
jb
loopne
pop
and
js
mov
test
loopne
pop
fwait
jns
mov
push
cmpsl
pusha
je
rclb
in
sub
pop
repnz
cs
or
stos
je
movsb
popf
nop
out
pusha
clc
mov
filds
xchg
stos
sbb
nop
clc
mov
cmpsl
pop
add
mov
pop
pop
jg
mov
jb
fwait
out
les
add
mov
adc
lods
add
out
test
pushf
and
dec
sahf
out
cmpsl
pop
insb
test
mov
jnp
cmpsl
jg
dec
ss
test
lods
shrb
dec
pushf
jmp
in
js
mov
sbbl
jp
mov
push
and
lahf
mov
movsl
ja
enter
nop
or
enter
out
clc
in
pop
and
mov
add
daa
testb
popf
and
xor
movsb
inc
or
xchg
cmp
dec
lahf
or
imul
inc
sahf
xchg
movsb
push
or
nop
test
movsb
aam
xchg
stos
fisubs
add
aam
movsl
sub
jmp
dec
addr16
cmpsl
jns
imul
xchg
lcall
iret
or
adc
movsl
cmpsb
outsb
and
hlt
addr16
cs
push
cmpsl
rolb
hlt
dec
enter
xor
dec
shll
push
cmpsl
jg
insb
fdivrs
push
cmp
out
mov
cwtl
lahf
nop
xchg
mov
cmp
repnz
inc
movsb
enter
pusha
sub
cmpsl
enter
or
cmpsl
sbb
sub
adc
push
lds
push
cmpsl
movsb
mov
sahf
cmpsb
jo
stos
js
adcb
cmpsl
jo
les
call
mov
ds
sbb
nop
mov
ja
rorb
cs
js
out
cs
shrb
js
cmpb
ja
es
sbb
cmpsl
mov
out
ljmp
aam
dec
inc
ja
andb
dec
pop
inc
test
js
adcb
inc
iret
add
js
or
js
enter
mov
stos
add
sbb
dec
stos
adc
and
push
dec
fistl
add
jg
int3
xchg
mov
lock
inc
sahf
xorb
loop
nop
out
movsb
mov
sub
insb
push
push
push
inc
add
into
inc
clc
push
cmp
stos
or
mov
jbe
jmp
push
lcall
sub
jg
fiaddl
mov
inc
lods
lahf
nop
xchg
and
pop
repnz
inc
cwtl
in
cld
or
mov
xchg
push
inc
movsl
out
inc
cs
int3
jbe
sub
push
sahf
push
xlat
inc
ja
sub
nop
inc
inc
adc
iret
mov
fbld
inc
mov
sahf
hlt
pop
enter
inc
in
repnz
lods
inc
push
pop
cmpsb
test
add
push
ja
add
fisubrs
movsb
sahf
cwtl
fbld
iret
add
fcomp
call
iret
push
fiadds
in
jbe
subb
lahf
in
inc
into
pop
jnp
ja
out
fimuls
push
mov
inc
push
add
mov
lahf
cs
add
fs
out
test
scas
xor
inc
lahf
outsb
imul
mov
or
adcb
jo
or
in
shl
out
cs
mov
dec
enter
and
xor
inc
ja
movsb
adc
jo
dec
iret
test
pusha
inc
mov
enter
rolb
jb
mov
pop
lods
mov
adc
push
outsl
aas
es
push
dec
jbe
cmp
inc
faddp
mov
adc
aas
popl
pop
fmul
daa
orb
add
cs
data16
mov
push
xor
adc
cwtl
inc
xchg
outsl
add
in
imul
add
sbbb
add
add
push
sar
pushw
loopne
nop
enter
or
xchg
enter
xor
mov
and
sub
jns
pop
insl
addr16
fimuls
insb
push
lods
js
jbe
or
xchg
xchg
jmp
cmp
xlat
mov
shll
sahf
outsb
and
mov
fcoms
cmp
movsl
in
mov
mov
in
je
pushl
mov
movsb
or
outsb
jl
bound
push
roll
ret
movsb
pop
data16
cmp
or
movsb
ss
mov
xor
pop
xchg
mov
imul
dec
sbb
popa
or
pop
out
pop
mov
or
jbe
daa
scas
clc
mov
dec
push
jb
push
inc
inc
cmp
xor
push
jb
sub
popa
and
mov
inc
mov
into
jnp
fidivs
sbb
mov
mov
les
ss
es
adc
hlt
mov
out
out
jo
xchg
jns
jae
sahf
mov
sahf
out
fidivrs
pop
cmp
pushf
int
insb
mov
lock
and
or
fsubs
xchg
testl
mov
mov
in
leave
xorb
add
add
add
in
add
dec
xchg
sahf
out
add
enter
add
leave
in
fistpll
rorl
jg
jg
sbb
pop
pushl
push
push
cmp
ja
xchg
fidivrl
sbbl
and
lods
pusha
inc
push
leave
add
mov
idivl
outsl
add
inc
jl
adc
mov
repnz
mov
outsl
add
dec
and
cmp
cmpl
jns
push
mov
or
pop
scas
add
fsubrs
pop
add
enter
fistps
mov
and
push
mov
or
add
jns
or
stos
gs
push
pushl
mov
mov
mov
add
sti
push
dec
divl
fsubl
enter
dec
js
or
aaa
mov
jnp
mov
in
sub
shrb
jl
lahf
mov
lods
jle
ja
mov
push
dec
out
pop
ja
pusha
shll
add
sub
add
out
fimuls
int3
push
fcomp
nop
pop
add
outsl
add
and
and
es
and
test
xlat
aaa
jl
push
fnstsw
push
and
scas
xchg
and
sub
pop
bound
fadds
add
push
pop
xlat
mov
cmp
mov
mov
inc
xor
mov
incl
mov
fs
pop
add
sub
clc
es
dec
movsb
rol
mov
mov
pop
jg
rcr
call
loope
movsb
jg
dec
push
in
les
and
clc
rolb
outsl
popf
aaa
mov
cmp
pop
sbb
mov
ja
fimull
divl
jb
jns
cmp
shlb
pop
shrb
push
push
fildll
bound
mov
in
push
pop
daa
aaa
or
in
insl
rol
push
ret
fs
lds
cmp
xchg
sub
or
lock
xchg
fmuls
movsbl
or
jb
pop
rcr
in
push
dec
and
xchg
or
stos
xchg
xor
xlat
dec
push
xchg
fisubl
xlat
or
jge
nop
dec
les
loopne
jo
push
mov
pop
add
inc
jno
lods
pop
ret
and
push
xor
outsl
add
lods
fs
dec
add
es
iret
mov
cmp
mov
clc
test
dec
add
add
in
pusha
and
ja
insl
xor
aaa
outsb
in
jbe
in
pusha
outsl
pusha
cmpsb
mov
loop
pushf
inc
les
les
repnz
add
imul
test
pop
jg
nop
pop
leave
jnp
jbe
ficoms
jg
add
xchg
dec
lods
add
and
cmpl
sbb
mov
mov
add
fists
ljmp
daa
mov
pop
clc
pop
or
mov
push
cmp
sbb
add
mov
xchg
mov
ja
fs
movsb
xchg
add
pushfw
sbb
push
jnp
addr16
lahf
iret
mov
mov
shlb
sub
add
mov
xchg
cmp
mov
push
fs
enter
dec
sub
cmp
out
fadds
push
mov
or
inc
fidivrs
movl
aaa
or
mov
fiaddl
push
sub
mov
pop
outsl
enter
add
or
push
or
je
dec
pop
repnz
add
add
fimull
add
mov
pop
dec
pop
adcb
and
mov
cmp
add
lock
nop
and
push
popa
dec
inc
rorb
jno
dec
sub
xchg
mov
push
add
ja
push
cmp
sbb
xor
inc
push
imul
das
stos
xor
daa
ljmp
mov
inc
shrl
mov
addr16
les
mov
mull
lahf
incl
jnp
lret
add
adc
or
rcl
call
jae
dec
and
mov
nop
daa
mov
mov
nop
mov
test
int3
add
fdivs
jns
push
int3
inc
push
dec
xchg
inc
imul
mov
push
mov
pop
int
ds
addr16
fisttpl
push
xor
push
std
pop
subb
imul
repz
out
sahf
out
jno
shl
repz
or
push
lcall
add
jp
out
lcall
mov
sarl
jmp
iret
shrl
jae
je
mov
ljmp
sarl
ss
jl
jns
cmpsl
stc
sbb
repz
out
or
pop
cmpl
jns
push
lea
repz
sbb
aaa
push
jg
xor
out
in
sbb
push
imul
jl
mov
cli
pop
jge
int
jle
out
sahf
and
insb
xchg
mov
jge
jg
push
xchg
int
subb
ds
stos
adcb
sbbl
inc
test
fcompl
test
cmp
out
scas
roll
lcall
test
jecxz
mov
cmp
repz
mov
jns
cmpsl
inc
jl
loopne
mov
repz
aaa
jb
hlt
sbb
xchg
rorl
mov
mov
push
int
sub
je
dec
repz
mul
nop
xchg
push
sbb
imul
or
dec
sahf
cmpsl
stc
cmp
or
xor
nop
int
repz
dec
xchg
and
iret
repz
mov
out
inc
out
xchg
aad
es
jl
cmpsl
stc
cmp
and
iret
sarl
xor
cmpsl
stc
inc
popf
insb
mov
sahf
outsb
jns
iret
repz
mov
lahf
pop
mov
ds
repz
dec
js
mov
repz
push
stc
cmp
out
movsb
xchg
mov
sahf
cmpsl
dec
mov
imul
cmpsl
inc
mov
int
test
jbe
les
dec
test
sahf
cmpsl
stc
xor
and
jns
jge
lods
xchg
push
push
enter
int
scas
jmp
out
cmp
adc
outsl
stos
xor
mov
cli
and
xor
mov
mov
lahf
lret
ds
ds
mov
push
flds
aaa
sarl
jp
call
jl
out
mov
inc
out
ds
xchg
rorl
repz
shlb
mov
iret
sarl
mov
mov
out
lcall
pop
sahf
out
cmp
hlt
xor
insb
cmpsl
lcall
fsts
fwait
int
jns
idivb
leave
dec
repz
int3
fcomps
lcall
rolb
push
aam
jae
adc
fcmovne
nop
fsub
mov
filds
iret
push
loopne
dec
jecxz
pop
aam
sahf
out
adc
in
outsl
fwait
add
nopl
sub
push
sub
pop
xor
outsb
mov
dec
getsec
sahf
add
inc
jp
rolb
in
xchg
or
shlb
pop
push
enter
lahf
pop
mov
push
leave
inc
lock
scas
pop
rclb
jb
popf
dec
push
add
add
jge
adc
aas
andb
aas
mov
js
nop
or
leave
outsl
inc
jno
arpl
and
aas
fwait
in
popf
xlat
pop
repz
popf
cmpsb
pop
mov
jns
ret
fbstp
jo
setg
mov
sub
in
mov
pop
das
cmpsl
nop
adc
repnz
imul
jnp
out
aas
add
mov
and
jle
daa
in
cmp
enter
cmove
inc
sub
daa
xchg
add
mov
jl
pop
push
mov
pushf
push
adc
scas
leave
in
dec
push
add
aaa
movsb
mov
adc
lock
dec
mov
shl
push
jl
dec
pop
push
cmpsl
xchg
adc
popa
lahf
dec
aas
xlat
dec
add
and
pop
xlat
insb
fsubrp
and
push
lock
movaps
push
pop
push
bound
xorb
dec
adc
xchg
sub
add
out
aaa
lock
fisttpll
mov
pusha
in
aaa
and
cltd
inc
or
dec
addr16
ja
outsl
push
sub
sbb
inc
add
aad
fdivrs
lods
daa
int3
jae
add
lea
rorl
flds
in
fadds
adc
outsl
fxch
add
in
cmp
pop
xchg
adc
addr16
cmp
mov
pop
dec
cmp
jns
mov
push
add
mov
ficoml
push
call
seta
xchg
shrl
cmp
fistps
adcb
pop
jb
lods
imul
and
notl
xchg
xchg
outsb
or
ljmp
cs
dec
push
fadd
and
add
inc
pop
and
sub
aam
shll
lar
fcompl
fmull
and
cmp
sub
outsl
pop
pushf
in
xchg
ja
sbbb
pusha
cmp
adc
scas
pop
mov
inc
xor
mov
mov
push
xor
push
iret
movsb
daa
aam
faddl
pop
mov
sub
adc
fisttpll
pop
xor
daa
xor
add
imulb
insb
daa
mov
pusha
and
les
push
push
lock
leave
add
filds
push
hlt
stos
in
jne
ficomps
mul
and
mov
fidivs
inc
mov
ret
add
sbb
into
add
add
mov
leave
dec
movsl
cmpsb
icebp
push
mov
xchg
pop
popa
and
addr16
jmp
fildll
jb
dec
sbb
jle
stos
dec
ret
inc
cmpsb
aaa
fists
test
fldt
cmp
fistpll
in
out
mull
sbb
sbb
mov
add
bound
sub
bound
pop
add
cmp
mov
lock
jp
test
xchg
ror
leave
leave
leave
leave
aam
in
jbe
cmp
hlt
loope
arpl
pmulhuw
in
in
pop
cmpsl
arpl
das
das
aaa
add
xchg
out
fs
inc
mov
push
and
xchg
mov
jge
movntq
xchg
sahf
add
pop
inc
mov
mov
or
or
xchg
and
or
aaa
push
cmp
leave
loope
fs
sbb
repnz
sub
dec
cmp
loop
cmpl
xchg
adc
outsl
loop
loop
daa
dec
leave
mov
hlt
scas
push
mov
fisttpl
sub
dec
scas
cs
adcl
das
gs
push
adc
sbb
add
enter
add
ret
dec
aaa
jb
or
or
lcall
lahf
lods
ret
popf
mov
push
xchg
xchg
pop
gs
in
xchg
push
ret
add
test
and
in
daa
in
pop
imul
cs
jl
dec
sbb
xchg
and
push
scas
add
mov
loop
add
pushf
lds
neg
pop
popf
mov
sub
pop
clc
xlat
in
dec
dec
adc
adc
out
cmp
add
mov
insb
cmp
lcall
fs
xchg
addr16
sub
filds
lcall
fisttpl
out
out
daa
mov
dec
dec
or
xchg
shlb
push
in
jno
sahf
add
push
pop
call
test
push
cmpsl
in
out
call
gs
shll
pushf
push
push
lods
add
and
call
lea
stc
imul
or
inc
ja
dec
mov
jmp
xchg
or
push
add
outsl
ja
xor
popf
xorb
dec
dec
push
xchg
ljmp
daa
adc
movsb
or
je
call
pop
pop
xchg
pushf
cmp
jne
cmpsl
ljmp
mov
ss
test
jmp
jmp
sub
adc
and
in
push
je
jbe
insl
emms
addr16
mov
pushf
xor
das
push
cmpsl
mov
mov
sbb
xchg
and
in
loop
out
in
pop
xlat
outsb
daa
imul
adc
xchg
jns
add
ss
push
cmp
push
lcall
mov
scas
mov
mov
fs
pop
inc
decl
or
push
add
pop
out
xchg
pop
rclb
test
sbb
out
icebp
add
add
in
pop
add
add
inc
movsb
cmp
xor
sub
inc
insb
fildll
rorl
out
pop
lcall
add
out
in
inc
test
insl
adc
out
insl
pop
pop
add
inc
adc
dec
addl
shrb
jbe
js
adc
mov
lods
leave
inc
cmp
call
je
outsb
sbb
leave
and
aas
int3
pop
leave
and
mov
outsb
jg
addb
mov
pop
test
shrb
mov
mov
mov
in
dec
in
jno
inc
jb
adc
push
scas
aad
lret
adc
xchg
xchg
add
leave
enter
xor
popf
mov
cmpsl
scas
filds
and
leave
inc
shl
cmp
and
addr16
daa
sub
jl
fsubr
and
fs
mov
outsl
push
add
loop
pop
jg
sbb
leave
push
push
repz
and
pop
push
jnp
scas
push
pop
js
loopne
test
mov
sbb
sub
jb
push
adc
sbb
and
mov
add
cmp
xchg
push
dec
push
or
pop
leave
jecxz
repz
inc
xchg
and
loope
jecxz
cli
das
hlt
test
mov
cmp
xchg
hlt
pop
add
xchg
sbb
daa
btc
enter
psrlq
fiadds
jmp
cmp
add
pop
sbb
jae
hlt
lock
dec
and
cltd
jae
fs
mov
jae
negl
xchg
add
mov
add
es
cmc
cmc
outsb
mov
fstp
leave
roll
pandn
out
lea
je
push
pop
cmp
test
mov
pushl
push
not
xchg
outsl
lcall
movsb
add
and
popf
int3
bswap
ror
or
dec
adc
jne
out
je
orl
xor
jne
minps
in
push
jl
sahf
in
mov
mov
jb
mov
push
in
clc
or
cmp
inc
jbe
push
sub
and
xor
xor
add
jo
jbe
daa
in
inc
jb
mov
mov
leave
imul
daa
ja
add
addr16
pop
insb
dec
out
ja
aaa
test
bound
stc
dec
movsl
or
add
pop
leave
mov
bswap
fstps
pop
js
dec
inc
push
or
adc
sbb
add
mov
cmpsl
push
pop
mov
rolb
cmpsb
push
outsl
mov
inc
sahf
jg
xchg
in
jle
cli
dec
xchg
xchg
mov
js
jg
pop
rolb
fstpt
add
cld
outsl
jns
pushf
mov
pop
push
adc
mov
ds
dec
enter
push
push
pop
push
shrb
leave
jne
adc
mov
cli
mov
outsb
pop
in
push
xchg
insb
repz
xchg
adc
jp
dec
ja
rorb
es
add
rolb
leave
aam
pop
dec
inc
mov
lahf
push
jp
orb
das
xchg
add
leave
dec
subl
imul
add
pop
jnp
mov
push
cmp
daa
data16
and
jnp
xor
add
jbe
add
pop
jnp
xchg
mov
ljmp
cmp
adc
test
pop
daa
xchg
rolb
add
add
popf
mov
sbb
std
std
int3
daa
in
out
push
or
aas
jl
add
and
mov
inc
lods
ljmp
xchg
dec
jl
in
sub
pop
das
jl
jl
shll
jl
cmpsl
fs
jbe
popf
movsl
add
lods
inc
mov
mov
clc
cmp
inc
adc
sub
mov
pop
mov
pop
add
jb
outsl
add
ja
jg
dec
dec
jne
aas
jge
mov
cs
dec
push
add
in
fxch
inc
out
sti
out
jle
add
sbb
jb
adc
sbb
sub
rorb
dec
dec
into
dec
jle
jle
js
sbb
or
in
fisttpl
scas
pop
mov
in
rcr
ljmp
aas
jg
mov
add
and
cwtl
cmp
das
jg
jg
in
xchg
xchg
jg
mov
xchg
mov
or
pop
dec
mov
dec
adc
orb
jmp
xor
xchg
in
adcb
add
and
insb
call
mov
xchg
pushf
fdivl
fsubr
out
mov
add
xchg
imulb
sbbl
cs
xchg
daa
insl
cmp
jno
in
xchg
and
addl
or
cmp
mov
or
or
daa
and
fsts
loope
in
fldl2t
adc
icebp
adc
adc
addb
or
adc
sbb
lea
push
dec
fidivl
insb
das
xorb
push
add
mov
push
add
push
leave
dec
ja
push
add
daa
mov
xor
sub
in
cmp
subl
xchg
out
jb
add
cs
dec
dec
xchg
jl
mulb
filds
in
inc
ja
fcoml
jns
jbe
mov
sbb
out
test
jle
mov
add
cmp
int3
aam
inc
push
cltd
or
in
mov
inc
or
jne
imul
add
fs
push
cmpsl
je
add
aas
push
sti
xchg
repz
add
or
or
jg
jg
outsb
add
enter
xor
shl
pop
and
pop
add
xor
inc
xor
test
add
sub
fiadds
es
or
or
adc
mov
pop
nop
daa
rolb
mov
popf
mov
daa
sbb
jg
jne
lahf
addb
popf
inc
inc
mov
push
cmp
aad
sbb
push
daa
nop
cmp
out
ret
into
pop
push
xor
jbe
pmulhuw
cmc
loope
outsb
push
addr16
call
pop
in
ss
pop
enter
add
arpl
enter
and
sbb
pop
cmp
inc
jmp
xchg
xchg
dec
leave
xor
orb
dec
dec
cs
nop
jbe
xchg
add
addr16
out
mov
add
xchg
push
faddl
in
or
or
or
pop
or
xchg
lret
mov
xchg
add
addl
mov
dec
push
lahf
push
scas
pop
mov
or
or
or
or
iret
xchg
hlt
xchg
or
jl
add
xor
adc
mov
stc
sahf
jne
fisttpl
nop
add
add
add
sbb
jb
jo,pn
xor
in
or
insl
jns
xchg
xchg
enter
mov
push
in
icebp
sub
mov
or
mov
push
or
inc
decl
jb
sbb
or
cmpsl
push
leave
dec
in
push
push
jg
dec
add
andl
jbe
shrl
lock
lods
mov
push
xor
in
lds
int
or
and
lock
adc
mov
jo
sbb
jo
mov
movsb
addr16
fs
daa
push
push
pop
add
xor
insb
add
clts
fcomps
push
sub
jb
xchg
aad
in
pand
xor
lahf
push
dec
sti
ret
clc
outsl
clc
pop
mov
push
mov
push
testl
mov
or
sub
in
cmpsl
fsubl
cld
jo
push
maxps
cmp
es
mov
mov
cwtl
add
mov
lret
pmullw
out
jbe
repnz
push
in
add
std
lea
mov
cmp
mov
lahf
adc
ds
bound
add
imul
insl
js
xchg
mov
cmp
sahf
test
add
out
test
in
xor
es
in
lea
das
xor
mov
xchg
aas
xchg
pop
fs
pop
in
je
adc
fwait
xchg
ja
test
jb
iret
xlat
jg
cmp
popa
push
jg
and
mov
psrlw
mov
push
jb
pop
jb
dec
lods
pop
jo
pop
je
iret
mov
sbb
cmpsl
push
mov
dec
fimull
sub
xchg
add
in
sbb
xchg
ja
setns
in
fs
das
xchg
cmp
cmpsl
lret
in
repnz
xor
jnp
mov
cld
cmpsl
das
nop
pop
cmovs
jb
xor
pop
leave
loopne
pop
adc
sub
mov
xchg
and
push
cmpsb
mov
mov
xchg
mov
rorb
enter
fisttpll
call
sbb
jb
xchg
or
push
adc
pop
and
mov
mov
sbb
addr16
pop
add
fiaddl
dec
push
add
daa
and
jge
pop
lea
add
jg
popf
mov
subl
mov
or
adc
xchg
out
outsl
and
push
inc
add
pop
add
fs
xchg
xchg
and
jl
pop
pusha
in
enter
nop
or
lahf
scas
mov
jns
mov
add
pop
sbb
jnp
cli
xchg
add
prefetch
sbb
push
leave
sub
nop
push
dec
mov
movsb
add
jle
mov
xchg
fistps
add
ret
pop
cmp
lock
and
sub
notl
pop
and
divps
data16
and
add
add
xchg
daa
xchg
mov
or
and
leave
test
sbb
xor
mov
add
in
or
cmp
add
xor
push
sbb
xchg
fsts
daa
das
add
loopne
mov
aaa
aas
cmpsl
xchg
inc
xchg
leave
dec
sbb
cmpsb
push
and
jp
xchg
push
in
xor
movsl
das
sbb
dec
pop
out
xlat
xchg
push
fsubs
repnz
add
lock
pop
xchg
add
or
ja
rorl
setbe
ja
xlat
jmp
cmp
inc
dec
xchg
add
les
ja
xchg
xchg
lret
sbb
mov
test
in
in
sbb
rsqrtps
leave
in
notl
dec
sbb
leave
leave
leave
daa
das
aaa
aas
xchg
xchg
xchg
mov
fsubl
pushf
pushf
mov
jb
jp
mov
lcall
xchg
mov
ds
leave
mov
dec
imul
pop
dec
and
and
sub
fcmove
xor
xchg
and
data16
add
mov
cltd
add
fldl
test
pop
and
movntq
aaa
out
or
fcompl
pop
sbb
push
jg
sub
daa
cmp
enter
cltd
inc
sbb
push
and
adc
ja
leave
in
mov
xchg
pop
and
enter
cmp
lcall
sub
dec
push
push
lcall
lcall
cmp
outsl
lcall
dec
into
add
flds
in
sbb
add
fwait
adc
inc
xchg
push
pop
fwait
cmp
mov
sub
pop
fwait
popa
inc
sahf
mov
add
cmp
out
pop
pop
jo
mov
iret
xlat
shlb
sbb
add
pushf
pop
push
adc
jb
push
add
add
aas
add
dec
push
or
pusha
into
sahf
mov
or
or
dec
dec
inc
fwait
test
adc
mov
mov
int
outsl
fsub
adc
lods
daa
stc
pop
outsl
popf
add
scas
fisttpl
scas
cmpsb
loop
popf
and
addr16
and
popf
test
leave
dec
aaa
in
pop
setne
add
and
mov
pop
mov
ja
repz
add
add
xchg
and
push
pop
or
adc
enter
sbb
and
rdpmc
or
sbb
fimuls
gs
insl
aas
adc
cmp
nop
leave
in
add
lahf
sahf
mov
mov
add
leave
rcr
iret
add
add
and
mov
pusha
daa
mov
setae
xlat
repnz
pop
cmp
inc
pop
inc
push
mov
push
push
or
or
cmp
xchg
lahf
jge
push
aad
and
mov
fistps
mov
xor
add
enter
mov
psubq
sbb
xchg
and
and
aaa
add
add
in
enter
add
push
cmpsl
loope
fs
pop
addr16
and
test
mov
lcall
into
pushf
fsubrl
pop
fimuls
out
test
xor
imulb
fildll
int
and
push
imull
push
mov
pop
inc
fisttpl
push
pop
repnz
fs
insb
add
je
dec
movsl
pop
sub
test
dec
test
test
sarl
cmpsl
xchg
mov
dec
push
cwtl
cmpb
push
daa
lock
es
and
mov
sbb
aas
aaa
xchg
push
xchg
je
inc
push
es
fs
mov
pushf
ja
xchg
and
mov
test
outsl
xchg
add
enter
sahf
test
add
lret
loopne
por
sahf
mov
or
or
and
sub
cmp
inc
adc
pop
adc
and
outsl
adc
cmp
enter
sbb
cmp
cmp
pop
push
adc
adc
adc
cmp
cmp
adc
push
or
push
sub
add
add
add
xchg
push
push
aas
mov
out
dec
aaa
add
add
xchg
pushf
sub
out
sbb
push
cmp
enter
add
add
add
inc
xchg
movsb
dec
daa
popf
mov
sarb
pop
sub
insl
mov
push
push
sub
daa
insl
lahf
leave
dec
jae
jb
jg
ss
dec
xlat
xchg
mov
js
in
test
cmp
in
lock
push
pop
fbld
in
xchg
and
add
add
nop
xor
dec
add
cmp
in
jl
addr16
mov
mov
ss
xchg
cmpsl
scas
into
mov
xchg
xchg
hlt
cld
hlt
fstl
das
cmpsb
cmpsb
das
ja
pushf
pop
and
sub
push
pop
test
add
in
sbb
pop
in
pop
shll
mov
in
shr
fcomps
loopne
sub
leave
das
cmpsl
aad
or
daa
and
adc
sbb
and
mov
xchg
mov
pop
xor
cmp
pop
inc
fsts
dec
or
or
in
fs
arpl
aas
dec
sub
sub
jb
xor
sahf
cmpsb
inc
adcb
out
sub
ja
pushf
fmull
roll
inc
jbe
xchg
add
add
cmp
in
insb
outsl
sub
sbb
sub
cmp
inc
mov
gs
push
add
xchg
daa
and
add
leave
enter
or
xchg
or
outsb
mull
sub
fildll
cmpsb
sub
out
sub
push
push
test
push
test
test
flds
xor
in
loope
icebp
add
cmp
andb
daa
test
test
inc
mov
dec
aad
fstpt
test
lea
jb
xchg
mov
or
hlt
inc
and
fadd
stos
femms
mov
dec
cs
xchg
out
push
xchg
je
mov
xor
ljmp
out
out
add
push
add
inc
stos
enter
add
cld
add
jmp
xchg
test
cmp
dec
mov
aaa
xor
pop
add
jg
xlat
repz
daa
daa
bts
adc
out
inc
and
xor
stos
inc
push
jnp
test
fs
xchg
xchg
out
imul
add
jb
enter
add
in
jbe
aas
sahf
pop
sahf
or
nop
and
push
scas
or
add
adc
cmp
icebp
daa
xor
pop
jb
inc
lods
adc
sbb
xor
xchg
aas
pop
add
xchg
mov
movsb
scas
jb
jnp
mov
mov
push
mov
sbb
cmp
add
xlat
fistps
cmp
cmp
icebp
sti
lods
add
dec
dec
inc
or
and
dec
bound
lods
pop
xor
dec
sbb
jbe
test
pop
lahf
xor
xchg
in
push
lods
mov
pop
and
jb
rcrb
fcmovnu
add
or
jb
in
cld
scas
pop
or
or
jmp
xchg
sysenter
adc
dec
jb
scas
pop
xor
fwait
es
scas
pop
scas
xchg
add
enter
pop
xor
jg
pop
das
add
cs
add
dec
popf
int3
into
das
roll
int3
fnstenv
jo
pop
outsl
out
lcall
xor
daa
sub
es
ds
dec
nop
out
and
push
and
jo
scas
cld
scas
push
scas
push
push
push
pushf
mov
xchg
scas
cmp
push
inc
dec
mov
cmpsl
push
aas
sub
pop
pop
test
mov
ja
rorl
in
ja
cmp
addr16
leave
inc
repnz
add
or
inc
jb
dec
cmp
daa
cmp
in
popl
seta
mov
aaa
jo
imulb
lahf
lret
in
leave
rcr
add
loop
ljmp
push
cli
add
pushf
pushf
add
or
add
or
adc
xchg
adc
adc
pop
adc
enter
mov
mov
mov
push
pop
cmp
outsb
dec
dec
fidivl
xchg
cltd
add
add
add
add
in
enter
or
leave
or
mov
or
hlt
pop
cld
lss
jbe
sbb
or
adc
pcmpgtb
ljmp
push
je
outsw
daa
iret
jg
test
and
das
sub
shrb
dec
sub
push
xor
adc
inc
mov
adc
adc
in
and
push
mov
xchg
xor
in
pushf
movsb
lods
sbb
sbb
int3
push
int3
sahf
mov
in
pushf
mov
paddb
sub
add
or
adc
jb
in
enter
sub
das
sbb
jbe
cmp
cmovl
lods
cmp
outsl
testl
pop
pop
or
mov
es
jecxz
xor
cmp
add
inc
daa
movsb
xor
add
lahf
push
xchg
sub
cltd
lahf
mov
cmp
in
and
mov
mov
cmp
daa
daa
out
arpl
andb
daa
xor
inc
xchg
pushl
xor
divl
enter
jl
pop
xchg
outsl
mov
leave
nop
lcall
or
mov
adc
adc
adc
inc
and
sbb
jb
inc
sbb
pop
sbb
xchg
and
insb
sbb
sbb
in
mov
xchg
and
inc
mov
and
jb
enter
daa
ljmp
cmp
sub
daa
enter
es
jb
inc
and
push
and
and
fs
insb
push
je
cmp
enter
sbb
mov
sbb
in
xchg
adc
adc
adc
or
loopne
call
push
dec
in
cmp
and
or
movzwl
in
xchg
add
push
add
sbb
popa
pop
outsb
or
and
insb
push
mov
xchg
or
enter
push
rorb
adc
sbb
aam
ficoms
call
enter
adc
pop
mov
jb
sbb
sbb
ds
xchg
and
sbb
sbb
jb
insb
pop
jns
orl
xchg
dec
popf
outsl
test
mov
mov
iret
ret
out
into
sbb
pop
loope
lret
xchg
and
adc
sbb
jb
mov
adc
sbb
xchg
and
and
sub
xor
cmp
enter
or
or
inc
mov
pop
insl
push
js
or
leave
xchg
cmp
mov
das
cmpsl
add
push
push
ds
cmp
push
xchg
daa
and
push
in
add
leave
enter
add
adc
pop
push
sbb
sbb
jb
sysexit
adc
mov
adc
mov
cmp
sbb
xchg
push
sbb
sub
les
inc
enter
mov
cmp
jb
ljmp
add
sbb
and
sub
das
in
in
cmp
push
sbb
repnz
arpl
outsb
adc
cmp
xchg
setg
in
jbe
das
scas
mov
repnz
in
iret
xlat
fistps
ljmp
or
and
mov
insl
push
add
inc
daa
and
pop
dec
push
add
xchg
xchg
pop
jo
jo
leave
mov
or
cwtl
push
pop
xchg
leave
mov
pop
mov
rorb
shrb
push
pop
jo
test
xchg
and
mov
add
add
jb
enter
push
inc
pop
dec
sahf
mov
pop
or
jo
or
inc
sahf
int3
pop
mov
push
mov
xchg
fcmovne
enter
adc
xchg
adc
loopne
psadbw
add
or
pop
pop
and
jns
repnz
pop
sahf
mov
pop
and
and
and
test
mov
xchg
daa
mov
rclb
call
leave
lret
das
mov
insb
lret
test
inc
push
dec
add
add
imul
in
jae
jge
jg
in
loopne
xchg
outsb
mov
xor
lods
mov
movswl
jb
jb
iret
xlat
push
cmp
jns
adc
inc
pop
push
in
fadds
pop
dec
push
pop
adc
cmp
sbb
sbb
sbb
aaa
push
aas
dec
and
xchg
out
dec
shlb
xchg
xchg
xchg
xchg
test
xchg
mov
mov
cs
iret
inc
and
scas
or
testl
cmp
add
sbb
inc
mov
xor
pop
dec
or
stc
xchg
cltd
iret
rcrl
or
popf
mov
or
jg
fucomi
jbe
lahf
mov
adc
in
fs
fsts
nopl
repnz
or
sbb
sbb
sbb
inc
mov
push
pop
pop
pop
and
outsb
daa
and
pop
inc
jg
dec
fmull
into
lahf
ret
pop
iret
ret
arpl
and
sub
sub
cmp
enter
sub
and
sbb
xor
xchg
xchg
mov
iret
movsl
xor
mov
in
enter
ret
outsb
cmp
into
mov
test
ret
cmp
cmp
daa
and
aas
mov
in
xchg
daa
fiadds
inc
hlt
inc
divb
repnz
inc
push
sbb
es
ltr
cmp
adc
add
mov
orb
das
dec
and
sbb
test
add
outsb
daa
sub
dec
aas
les
outsl
xchg
and
push
fwait
add
add
leave
enter
aam
psraw
sbb
stc
lds
mov
cmp
inc
in
adc
push
push
adc
pop
dec
outsb
mov
xchg
lahf
rsm
pop
mov
sbb
iret
fmull
out
pop
repnz
dec
into
dec
std
shufps
push
and
es
es
pusha
sbb
repnz
push
pop
imul
mov
mov
imul
add
add
fisttpl
out
jnp
in
or
movl
mov
dec
push
sbb
dec
xor
jbe
cmovnp
pop
push
adc
mov
popa
adc
sbbb
mov
and
sbb
mov
pop
enter
xchg
dec
fisubl
pmulhw
lock
and
push
outsl
adc
nopl
das
daa
sub
cmp
enter
daa
imul
xor
enter
cmpsb
pop
enter
add
add
add
add
jecxz
jmp
aas
jecxz
lret
xor
insl
push
or
outsl
mov
leave
dec
cwtl
leave
test
cmp
xchg
and
pop
inc
dec
add
add
fs
outsl
jp
cmpsl
or
jb
in
or
inc
mov
rcr
psubsw
hlt
adc
repnz
and
dec
lret
ficoms
scas
add
sub
inc
cmp
repnz
cmp
enter
sbb
sbb
mov
pop
orb
inc
mov
and
rorl
std
sahf
mov
mov
push
adc
sbb
dec
adc
mov
sub
and
stc
cs
lret
cmp
dec
inc
mov
add
jp
and
pop
test
xchg
or
enter
or
or
or
iret
lret
inc
mov
sti
adc
or
adc
push
dec
dec
sub
cmovl
and
push
sbb
sbb
push
cmp
outsb
jne
sti
rclb
outsb
xchg
enter
in
jbe
int3
jmp
stc
pop
jnp
jb
int
push
or
adc
aas
sbb
jnp
sbb
or
divb
cmp
inc
cmovg
pop
push
jbe
jb
pop
adc
addr16
fs
jg
lea
xchg
sbb
sbb
xchg
and
xadd
enter
push
leave
dec
stos
fdivr
and
sub
xor
insb
pop
daa
out
lods
push
and
dec
cmp
inc
push
push
pop
pop
data16
jno
jl
or
jb
enter
push
popf
push
adc
mov
mov
ljmp
sbb
sbb
sbb
add
or
and
sbb
pop
cmp
xchg
mov
inc
and
add
sbb
jb
gs
and
xor
xchg
setl
stc
push
push
and
das
les
aaa
lock
push
movsb
notl
sub
jo
daa
mov
push
ljmp
out
add
cmovs
cmp
add
das
dec
mov
mov
daa
shlb
jnp
jnp
mov
xchg
add
add
pushf
cmpsl
mov
bnd
ds
push
enter
or
movsb
jge
aas
push
fsubrp
das
in
leave
fxtract
psrlw
and
pop
sub
sbb
repnz
inc
adc
and
mov
rcll
sbb
out
repnz
xor
std
pop
aas
rcl
inc
pop
pop
arpl
xchg
xchg
daa
and
and
xor
enter
daa
movsl
sub
mov
mov
das
sub
sub
shrl
pop
fdivl
out
cmp
out
out
das
repnz
jo
int
rorl
movlps
push
cmovo
into
fisubrs
pop
cmp
arpl
jns
pop
and
pop
test
cmpsl
xchg
xchg
inc
push
dec
shll
xchg
daa
in
call
mov
lahf
lods
das
mov
cmpps
inc
fisubrs
fimull
in
lock
or
xchg
daa
das
aam
adc
push
in
leave
enter
pop
xor
aas
dec
adc
mov
fcmovne
push
bound
insl
vmread
pop
subl
xchg
sbb
mov
and
mov
xchg
xchg
and
ljmp
xchg
xchg
mov
pop
add
fs
xchg
sub
jnp
xchg
jnp
imul
sub
cmc
add
ud2
das
jns
jnp
push
das
and
pop
sub
xor
jnp
inc
xchg
xor
pushf
push
into
in
mov
mov
mov
iret
push
pop
test
dec
inc
push
js
cmp
fcmovbe
xchg
inc
add
add
or
add
mul
stos
mov
or
fadd
das
setg
jb
movsb
loopne
mov
xlat
pop
call
sub
mov
or
jnp
daa
or
pop
data16
in
dec
jmp
cmpsl
pop
pop
or
sbb
cmpsl
iret
add
js
pop
jge
xor
pop
pop
mov
cwtl
daa
cwtl
xor
xor
daa
adc
inc
out
xchg
jb
push
xorb
iret
adc
pop
iret
cs
inc
push
dec
pop
cmp
lods
xor
shrb
pop
jae
or
push
push
or
aaa
es
ss
add
cs
iret
shrl
sbb
or
out
jb
or
or
or
int
scas
or
daa
jb
adc
push
adc
and
in
jbe
pop
inc
inc
push
fistl
push
xorps
out
mov
jo
jb
pop
fmull
pop
andb
cmpb
fdivrl
addl
repnz
mov
jb
loopne
aas
into
aas
xlat
sbb
and
data16
mov
sub
mov
mov
add
ss
and
addb
mov
xor
and
test
inc
pop
and
inc
push
adc
cld
add
mov
pop
lock
movsb
add
cmpsb
fisttps
mov
movsl
sbbl
cmp
mov
decb
inc
out
in
jbe
pop
inc
mov
iret
mov
in
sbb
in
call
adc
or
inc
xor
pop
ficompl
pop
fisubrl
xor
xchg
in
cmpsl
rcr
fsubp
stc
jb
jle
aas
dec
outsl
xlat
hlt
jl
js
jns
out
jo
push
sahf
pop
push
dec
inc
xor
jns
out
and
adc
fidivs
out
or
repz
push
clc
jns
out
hlt
lock
out
in
int3
pop
repz
mov
cmp
mov
je
sub
or
jne
dec
push
inc
cmp
sub
negl
repnz
push
in
fdivrs
out
les
sahf
out
cmpb
push
cmp
push
dec
inc
xor
add
clc
push
in
cmc
cmp
repz
mov
push
xchg
push
push
icebp
jl
push
adc
jp
dec
add
pusha
es
or
mov
pop
mov
bound
vpshld
insl
mov
push
add
cmp
mov
mov
add
inc
ja
idivl
sbb
and
push
or
or
xchg
loope
mov
imul
add
jae
xorb
icebp
call
push
mov
push
inc
jg
popa
add
push
push
pop
out
xchg
cmpsl
rolb
add
inc
push
or
jg
lcall
inc
xor
cmp
add
mov
mov
pop
int3
insb
sub
outsl
sbb
mov
iret
xchg
into
push
sub
pop
cs
or
loopne
fidivs
xchg
jg
pop
jl
pop
jnp
adcl
sbb
mov
out
xchg
mov
sbb
sbb
enter
pop
add
and
pop
imul
cmp
cmp
adc
xor
mov
sbb
mov
mov
int3
or
adc
pop
and
mov
adc
in
xchg
sbb
push
add
pop
clc
and
sbb
hlt
and
and
and
add
fsubrs
pop
mov
jo
shr
pop
imul
daa
xor
mov
adcb
inc
cmp
xor
es
out
sbb
push
pop
js
jns
xchg
mov
jo
imul
push
clc
insl
add
into
repz
xchg
jns
mov
jae
das
push
dec
xor
lods
loopne
dec
pop
jns
push
pop
mov
pop
repnz
cli
or
or
ret
seto
repnz
adc
in
jl
mov
leave
sbb
into
sbb
sar
decl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
in
incl
inc
stc
mov
adc
mov
decl
js
inc
ljmp
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
jle
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
push
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
lcall
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
jmp
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
mov
dec
std
and
repnz
int3
out
xor
sti
aas
jno
or
mov
pop
fs
dec
lea
push
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
incl
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
lcall
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
call
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
xchg
test
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
ds
jmp
push
int3
and
call
cmp
jp
and
cmp
mov
cmp
inc
std
incl
std
xlat
cmp
mov
sbb
xor
jg
inc
inc
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
jmp
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
inc
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
adc
ficomps
frstor
mov
cmp
adc
pop
xlat
fiadds
inc
adc
pop
repnz
je
inc
inc
push
dec
addr16
jnp
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
jg
mov
dec
or
mov
call
push
inc
dec
inc
jo
inc
mov
data16
push
outsb
jbe
imul
stos
push
sub
outsl
mov
aas
dec
insb
imul
dec
push
adc
int3
pop
push
cmp
lret
xor
jno
dec
push
inc
dec
push
or
sub
addr16
push
inc
inc
inc
inc
rorl
loopne
add
gs
gs
pop
inc
sbb
arpl
mov
adc
rolb
pop
sti
jae
outsl
push
dec
pop
mov
xchg
xchg
xchg
push
sub
out
xorb
mov
addb
shrb
das
sbb
das
sbb
jbe
pop
aas
dec
ret
pusha
push
or
inc
dec
in
inc
and
daa
daa
dec
jae
imul
jne
push
and
inc
inc
inc
jg
inc
jns
push
in
sbb
dec
lahf
push
push
ficompl
push
cmp
popl
in
adc
jb
jns
add
inc
int3
ljmp
mov
insl
inc
orl
out
dec
push
dec
dec
push
imul
add
jbe
imul
push
xchg
push
mov
sub
adc
inc
cmpsb
dec
les
iret
pop
rcrb
xchg
decb
outsb
arpl
outsl
addl
and
push
imul
pop
mov
addb
push
out
push
cmp
cli
loopne
imul
sub
mov
nop
ss
push
sub
testl
mov
addr16
or
jbe
mov
mov
das
add
test
push
clc
push
outsb
or
addr16
movsb
adc
gs
inc
stos
and
xacquire
outsl
push
inc
arpl
push
pop
les
cmpsl
adc
movsb
pusha
out
mov
mov
sbb
xchg
lds
orb
push
mov
and
hlt
outsb
data16
popa
mov
add
subb
insb
and
pop
ja
andb
insb
add
xchg
inc
arpl
pop
pop
inc
sbb
and
push
stc
pop
sbb
add
add
xchg
movsl
cmpsb
sar
cmpsl
push
sbb
scas
xlat
and
aad
dec
lahf
pop
insl
add
dec
lahf
inc
or
pusha
mov
add
mov
add
pop
stos
pop
jb
or
aas
ljmp
lahf
inc
or
fs
arpl
lds
cmp
out
inc
xchg
rcl
adcl
mov
js
lret
fcoms
movsb
inc
lea
xchg
fimull
jle
pusha
ja
insl
imul
jne
shrb
outsl
push
jo
lock
push
rcll
aad
addb
iret
inc
imul
stos
loopne
ret
movsb
adc
mov
xlat
out
add
push
out
jg
xchg
push
repz
xor
xchg
clc
fdivrl
out
enter
fs
fwait
out
adc
cld
mov
sahf
cmpsl
push
pop
mov
add
push
push
sbb
je
lahf
decl
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
lcall
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
incl
push
cwtl
insb
adc
test
fs
std
in
leave
gs
decl
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
jmp
inc
aam
dec
std
test
movsl
cli
test
xor
leave
mov
ljmp
pop
filds
or
shrl
cmp
ficoms
push
xlat
enter
lock
mov
and
mov
cltd
xchg
mov
mov
or
or
call
xchg
adc
stos
sbb
data16
pushl
push
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
stc
mov
xchg
sbb
push
sub
insb
fs
add
jmp
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
push
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
pushl
cld
sti
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
jg
shll
jmp
outsb
xor
mov
sarb
add
in
add
lcall
or
cmp
add
daa
adc
or
and
test
decl
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
call
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
jmp
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
gs
mov
jno
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
stc
stc
out
mov
pop
aad
mov
call
xchg
shll
push
repnz
addr16
shll
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
push
xchg
ja
dec
add
mov
das
es
lds
or
sub
mov
cmpsl
call
inc
xor
shlb
sbb
ret
es
pushf
mov
insl
add
jmp
push
jmp
addr16
jb
push
pop
orb
adc
mov
jnp
sbb
pushl
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
ficompl
int
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
mov
push
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
out
rorb
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
decl
xchg
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
std
mov
sbb
xchg
sub
aaa
mov
or
sbb
pop
xor
add
rcrb
dec
pop
mov
mov
ds
outsl
inc
jne
sti
dec
popl
ja
imul
lods
adc
push
imul
inc
jbe
push
sub
sar
outsb
arpl
arpl
ja
or
inc
insl
jns
sub
pop
inc
jne
outsl
insl
addr16
inc
rorl
cmpsb
xlat
outsl
sub
ret
inc
cmp
push
xor
ja
mov
js
inc
insl
bound
inc
out
adc
push
jo
add
js
jbe
lods
popa
push
dec
orl
jno
in
sub
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
pop
popa
arpl
cmp
arpl
or
xor
xor
pop
xor
popa
or
mov
inc
jbe
pop
sbb
mov
dec
inc
ret
popa
jnp
inc
add
ror
xor
add
sbb
sub
fbld
mov
outsb
imul
push
jbe
mov
add
inc
ljmp
mov
xor
inc
cmp
insb
inc
push
sub
adc
leave
and
sbb
aaa
and
xchg
sbb
out
xchg
insb
popa
jns
push
pusha
lods
inc
sbb
xchg
or
push
dec
cmp
je
aaa
xor
xchg
inc
add
aas
add
fistl
lods
cltd
and
jae
dec
sbb
fists
mov
pop
inc
aas
dec
push
inc
enter
inc
movl
xor
out
popl
mov
es
inc
inc
inc
add
popa
jbe
push
ds
cmp
inc
inc
stos
mov
dec
dec
xchg
loopne
je
xchg
lods
fistpll
enter
outsb
jne
mov
xchg
inc
inc
sti
mov
sub
addr16
ss
add
add
or
add
push
pop
aad
ss
push
repz
pop
jo
or
lods
mov
cmp
aas
cli
adc
dec
shlb
sbb
or
xor
outsl
adc
mov
push
lcall
jo
lcall
xor
push
mov
aad
xlat
mov
inc
add
pop
xchg
cmp
adc
daa
inc
jb
cmp
adc
sub
push
loope
popa
jo
lahf
xor
nop
aas
push
outsl
outsl
test
mov
in
push
push
jno
loop
aam
pop
in
shlb
lds
xchg
pusha
jb
in
nop
test
pop
cmp
push
or
arpl
lcall
mov
jo
shll
pop
mov
clc
push
outsl
insb
jns
das
fstpt
push
popa
jb
inc
sub
mov
stos
inc
mov
nop
adc
insb
add
inc
pop
bswap
ret
cld
inc
push
bound
push
lods
cmpsb
inc
arpl
addr16
fidivrl
lods
or
cmp
xor
add
jnp
jne
sub
jecxz
jg
imull
xor
sub
push
mov
out
add
add
imul
jecxz
push
testb
and
aam
adc
mov
pop
movsb
add
aas
push
sub
movsb
adc
cmp
aaa
add
adc
orb
aaa
mov
mov
jb
add
dec
pop
add
pop
inc
push
push
movsb
add
or
or
inc
dec
and
add
sbb
ss
add
adc
in
sahf
and
add
dec
pop
nop
loop
test
ja
stos
inc
fisubrl
cmp
clc
or
pop
mov
int
mov
add
sbbb
add
sbb
je
add
jne
and
mov
insl
xchg
cs
cmpsb
dec
shrd
sbb
loop
popa
incl
lea
in
bswap
mov
into
jmp
jmp
jmp
repnz
in
push
mov
mov
pusha
ljmp
lret
cli
push
cld
addb
mov
lahf
andb
notb
es
add
dec
in
imul
insb
daa
aam
sub
adc
adc
add
sti
xchg
int3
sub
verr
jns
inc
sbb
add
pop
or
push
test
mov
mov
push
mov
subb
sbb
bound
push
loop
dec
enter
pusha
push
add
sbb
adc
pop
add
cs
cmpb
add
les
lods
add
gs
and
jb
adc
dec
push
mulb
inc
inc
dec
lret
sar
inc
cs
mov
insl
dec
mov
or
rcrb
dec
adc
out
add
out
cltd
and
dec
addb
repnz
push
inc
sbb
xor
cmp
push
flds
adc
jmp
add
das
jle
mov
lea
mov
mov
or
or
dec
jne
jno
pusha
jecxz
ret
js
pop
mov
hlt
mov
adcl
mov
push
popf
lcall
fwait
xor
mov
int3
fucomi
gs
add
rcrb
ja
jne
jmp
and
sub
cmp
rolb
call
test
insb
mov
jmp
mov
sub
inc
add
outsb
mov
xlat
xchg
mov
mov
sub
pop
cltd
cmp
sahf
push
hlt
jl
les
mov
xor
dec
pusha
dec
push
push
pop
xor
cmp
out
je
adc
mov
inc
sbb
push
mov
aad
rcll
sbb
mov
call
nop
fsubrs
call
aas
les
mov
imul
push
mov
cmp
jbe
mov
inc
mov
xchg
dec
popa
push
out
call
icebp
add
nop
xchg
test
pusha
pop
inc
cs
arpl
sub
xchg
or
xchg
adcb
dec
pop
ret
stc
and
divl
xor
movsl
mov
push
call
insb
push
xor
add
outsb
jp
or
jge
mov
clc
pushf
and
imul
test
pop
out
insl
jne
push
inc
imul
add
adc
lcall
pusha
imul
outsb
adc
and
ret
in
inc
dec
sub
ret
mov
cmp
jne
in
fdivs
push
sarl
sub
int
sbb
or
adc
rolb
clc
jl
sub
xchg
cld
add
inc
les
sti
adc
imul
or
mov
adc
push
push
push
mov
sub
push
or
pushf
out
mov
mov
leave
push
fcoml
mov
or
push
or
fstl
dec
or
push
test
cmp
sub
cmpsl
pop
push
clc
xor
sahf
jp
loopne
movsb
je
pop
push
ret
dec
sub
pop
pop
pop
and
nop
sbb
lds
mov
and
sub
aas
cwtl
mov
push
mov
test
push
mov
cmpsb
aam
push
mov
aas
mov
cmp
mov
push
jecxz
call
pop
inc
test
movb
mov
in
dec
adc
add
push
mov
sbb
insl
aam
lea
fs
mov
gs
loope
sub
add
and
lds
push
js
in
mov
je
rcl
shrl
add
and
or
clc
orb
je
xorb
repnz
mov
xlat
hlt
or
mov
jp
sbb
cmpsl
sbb
aaa
push
aam
ljmp
rcl
mov
in
push
sub
jae
aas
adc
xchg
icebp
jne
loopne
push
dec
and
pop
sbb
ljmp
imul
inc
pop
je
call
rcll
inc
push
push
insb
fcoml
sub
call
lahf
push
mov
imul
pop
mov
sbb
fcoml
inc
jno
and
jne
add
inc
add
bound
sbb
movsb
jb
imul
arpl
push
sbb
mov
jbe
push
pop
sbb
ljmp
cmpsb
out
mov
jp
push
or
inc
clc
push
subl
adc
push
gs
push
lahf
pop
xchg
sbb
test
ja
xchg
adcl
pop
rolb
fisttpll
inc
outsb
push
lcall
mov
inc
pop
dec
jl
orl
imul
call
pop
inc
dec
stos
add
and
add
in
add
cmp
xchg
fidivrs
sti
add
addr16
add
int3
sbb
pop
lret
adc
xchg
rcll
xchg
loope
push
dec
sub
enter
test
xchg
pop
clc
add
jo
mov
aad
add
hlt
call
lret
das
xchg
dec
call
call
dec
gs
jne
xchg
lea
xor
mov
lret
sbb
xchg
cmpsb
cmp
push
mov
or
ss
int
sbb
add
into
jnp
les
or
pop
nop
mov
pop
push
fs
imul
pop
sbb
jnp
and
lods
or
mov
or
jmp
mov
stos
xchg
sbb
daa
ja
sbb
push
inc
into
pop
nop
mov
push
inc
xor
je
or
or
dec
aad
add
add
mov
dec
imul
adc
in
sbb
push
je
and
mov
repz
in
shl
or
hlt
ficoml
sub
cmpsb
rolb
xor
mov
jp
clc
sbb
push
movsb
sbb
mov
lea
out
pop
or
add
ret
sub
or
jle
jecxz
push
mov
mov
dec
adc
xchg
idiv
xchg
mov
adc
mov
fimull
pop
test
sbb
fldcw
pop
lret
or
adc
pop
lds
mov
lods
push
pop
lahf
mov
movsl
test
mov
pop
rolb
sub
adc
arpl
push
fisubs
hlt
push
cmp
xchg
cld
push
jns
sti
xor
push
adc
pop
loop
add
and
icebp
push
cmp
jmp
lret
lods
xchg
push
xor
adc
lcall
jbe
add
and
jne
ds
sbb
xlat
lock
push
sbb
sbb
sbb
stos
je
addr16
loop
fdivr
js
mov
dec
cmp
jnp
push
imul
push
dec
fdiv
mov
xchg
cmpb
xchg
inc
pop
pop
pusha
push
add
int3
call
push
je
mov
pop
cmp
mov
cmp
adc
pop
pop
addr16
orb
mov
adcl
stc
and
jne
inc
add
out
push
int
push
jb
call
mov
test
xchg
xlat
shr
dec
mov
inc
cmp
cmp
xchg
mov
xlat
mov
adc
inc
jbe
cmp
sbb
xchg
mov
ret
or
mov
add
mov
xor
daa
shlb
mov
inc
imul
fiadds
aad
dec
shl
ljmp
xor
jl
ss
daa
xlat
call
fiaddl
xor
or
loop
ret
mov
and
xor
and
add
stos
pop
mov
add
jmp
enter
sub
xchg
aas
xor
es
call
mov
jle
push
mov
mov
in
push
adc
and
rcrb
push
adc
pop
jne
pop
xlat
add
lea
andl
dec
in
addb
rep
icebp
cmpb
push
ret
push
mov
sub
jecxz
je
ss
rcll
jnp
mov
cmp
jne
cli
addr16
and
adc
add
xchg
mov
jne
pop
sub
push
mov
mov
aam
push
pop
lahf
fld1
xchg
repnz
shlb
cmp
mov
shlb
orl
loope
lock
jb
sbb
dec
mov
and
ljmp
pop
pop
stos
je
xchg
add
or
nop
or
jle
sti
mov
mov
je
pushf
add
xor
outsl
ret
mov
call
push
sbb
push
dec
xchg
arpl
nop
pop
push
xor
ljmp
pop
cwtl
adc
xchg
pushf
data16
in
lea
imul
cmpsl
imul
divb
lret
jo
xor
push
loopne
pop
xor
cmp
sbb
and
aas
js
mov
inc
cmp
mov
std
xlat
je
fisubrs
ficoms
or
push
adc
push
mov
xchg
insb
or
and
scas
dec
adc
push
leave
pop
push
push
pop
sbb
xchg
sbb
adc
add
add
call
sbb
jmp
cmc
jbe
xor
pop
dec
pushl
add
adcl
loopne
mov
dec
in
outsl
imul
pop
or
pop
adc
outsb
adc
inc
ficomps
jg
scas
sub
push
stc
divl
cmp
jl
mov
int3
in
sbb
xchg
mov
loopne
ds
enter
and
mov
jno
sbb
dec
lds
jbe
insb
loope
mov
push
leave
dec
nop
mov
es
xchg
sbb
or
push
push
fsub
adc
or
mov
cmp
mov
mov
cltd
je
inc
mov
push
mov
mov
pop
and
sbb
mov
je
in
in
in
cmp
mov
sarl
orb
mov
fcomps
cmp
cmp
imul
sbb
imul
es
mulb
test
fistpll
push
fists
mov
scas
aam
or
sbb
jne
add
inc
sbb
jne
lods
or
cmp
faddp
cmp
inc
xor
mov
pusha
movsl
sub
je
dec
popf
mov
xor
loopne
xor
xchg
popa
xchg
cmpsb
adc
jmp
or
mov
rcrb
retw
jne
enter
push
and
js
data16
shr
push
or
or
sbb
cmp
enter
test
aad
mov
dec
in
lods
dec
xlat
push
push
mov
jecxz
mov
sub
push
jg
ss
mov
jb
loop
push
int
cwtl
add
cmp
adc
or
and
add
sbb
add
and
add
nop
adc
push
jne
jl
push
iret
clc
cld
push
test
or
jb
add
adc
out
pop
in
pop
dec
mov
cmp
inc
cmp
subb
adc
scas
jns
xchg
adc
pushf
sbb
mov
sbb
icebp
or
andb
fxch
cmp
push
add
add
out
enter
movsl
call
dec
sti
cld
mov
and
hlt
inc
addr16
clc
es
into
mov
sbbb
ss
inc
and
imul
lret
inc
dec
pop
fstpl
je
or
or
je
mov
dec
test
jmp
adc
or
loopne
outsb
adc
push
sbb
cld
inc
adc
mov
adc
jmp
push
adc
or
mov
lods
cmc
inc
lods
pop
loopne
mov
adc
lods
xchg
xor
sbb
mov
daa
sub
push
cld
lcall
mov
popf
rorl
add
test
out
mov
mov
push
mov
sbb
add
sub
mov
xor
push
push
jne
lods
jbe
filds
xor
mov
nop
push
add
xchg
inc
test
testl
push
mov
adc
push
mov
insl
jge
mov
inc
shlb
rolb
hlt
repnz
rcll
push
push
testb
std
pop
fucomi
xor
nop
or
or
shrl
push
out
pushw
or
jnp
mov
inc
out
ss
stos
std
pop
and
jo
iret
push
xor
and
pusha
adc
cli
sbb
rorb
inc
rol
mov
rorb
mov
mov
add
loopne
or
cmpsl
pop
movsb
repnz
push
add
mov
inc
adc
xchg
setb
adc
pop
push
in
cld
sub
mov
pop
dec
adc
std
adc
push
ds
xor
sbb
das
or
add
push
cmp
bound
fstl
cmp
cmp
push
dec
add
mov
in
test
insl
sbb
pop
in
cmp
fdivrs
imul
push
enter
cmp
jmp
mov
test
cmp
sub
add
pop
add
push
add
fmulp
mov
add
add
orb
jmp
les
xor
inc
jge
lods
mov
or
add
push
push
xchg
push
or
sbb
int3
lea
add
push
push
pusha
lcall
out
testl
xchg
adc
cmp
jae
cmp
push
ret
dec
mov
popf
mov
pop
mov
dec
jmp
jecxz
push
int
lods
sarl
call
gs
ds
jns
or
xchg
in
jbe
ret
bound
aad
xor
push
pop
jbe
cmp
xchg
sbb
sbb
lcall
dec
mov
push
or
enter
sub
ret
jne
xor
je
std
jmp
and
xor
pop
call
inc
jmp
in
imul
sub
js
mov
sahf
push
mov
mov
shlb
into
sarb
sbb
mov
jl
push
adc
inc
xchg
mov
mov
fwait
mov
insb
ljmp
push
andl
dec
ds
or
rorb
test
dec
andb
adc
sbb
add
fidivl
lock
daa
dec
sbb
cmp
jl
pop
lods
sub
sbb
jmp
or
lret
fsubs
andb
push
or
or
lahf
dec
add
andb
push
lret
jnp
sub
adc
mov
sbb
xchg
and
push
inc
leave
push
inc
push
add
cmpsl
pop
aaa
ror
es
aam
in
dec
xchg
ljmp
add
insb
shll
mov
push
push
mov
test
jo
cmp
orl
test
adc
mov
mov
aam
push
mov
lea
pop
add
mov
aaa
push
fucomip
cmp
je
inc
and
push
jbe
movsb
xchg
jne
outsb
mov
subb
clc
push
and
shrl
std
pop
jbe
lea
test
adc
jo
inc
push
in
ds
xchg
sbb
test
or
pushf
cli
adc
lea
add
pushf
loop
outsb
es
test
inc
jmp
or
cld
imul
loop
or
add
xchg
test
lock
jb
adc
mov
mov
pop
or
sbb
or
mov
add
fwait
jmp
push
hlt
adc
inc
mov
loop
pop
fsubr
jo
push
sbb
ret
cltd
adc
pop
mov
pusha
mov
cmp
call
or
sbb
adc
inc
adc
add
xchg
pop
dec
je
lods
stos
loopne
sti
push
add
xchg
je
lock
test
inc
cmp
jle
test
push
out
mov
ljmp
mov
push
lock
js
pop
push
lea
pop
xchg
push
mov
push
test
enter
jne
xchg
push
sbb
push
cmpsl
push
aam
push
dec
push
and
pop
pop
fdivrl
cwtl
popa
fsubrl
call
dec
jecxz
add
shlb
push
mov
fsub
xor
sahf
xchg
pop
scas
sbb
add
lds
push
push
loopne
repnz
push
fdivs
lcall
or
push
pop
dec
mov
sub
aam
cs
popa
sbb
mov
dec
inc
jae
mov
fstps
ret
push
insb
push
mulb
mov
jmp
xorl
adcb
outsl
adc
mov
inc
jmp
rorb
addps
jmp
add
jnp
add
mov
adc
mov
ss
adc
and
cmp
jns
cld
push
stos
mov
pusha
test
dec
lods
fst
jmp
adc
and
add
add
sub
jecxz
testb
xorb
or
dec
xor
loop
xlat
add
push
call
push
pop
mov
sbb
cs
call
mov
jmp
push
imul
pop
addr16
ss
js
pop
sbb
sbb
sbb
jne
into
sbb
out
cmp
jmp
add
push
cmp
jne
push
shll
pop
and
or
je
int3
jecxz
enter
decb
loop
aaa
mov
jmp
enter
nop
xor
add
cmc
loope
jns
icebp
call
and
lds
mov
inc
call
fldenv
pop
pop
cld
push
jecxz
test
setb
push
xchg
out
lcall
repnz
call
call
je
addr16
jb
movb
push
dec
jl
js
mulb
test
and
fistpll
push
dec
xor
fxtract
lahf
and
jmp
pop
xorb
movsb
sbb
jne
inc
or
mov
or
sbb
aaa
pop
cs
xchg
add
add
mov
and
pop
mov
lret
and
xchg
jne
idiv
cmc
sbb
push
call
in
movsb
jmp
cmp
in
js
sbb
fptan
aad
test
or
mov
push
call
call
cwtl
xchg
and
int3
jbe
lods
or
sbb
mov
mov
adcb
jle
rolb
call
sbb
sub
inc
adc
out
push
push
jge
test
add
or
or
mov
mov
cmp
pushf
or
cmp
pop
mov
cld
test
push
and
push
cmp
push
fs
inc
mov
dec
jg
mov
pop
clc
pop
jo
andl
cmp
jg
push
dec
call
add
pop
mov
mov
call
test
lea
sbb
mov
shll
and
and
nop
push
decl
or
push
jl
mov
cmp
fadds
dec
jne
movzbl
add
push
add
add
xor
movsb
nop
adc
fstpt
loopne
imul
test
test
push
popf
jg
stos
incl
dec
dec
ja
nop
sbb
mov
movsl
sub
insl
call
jno
in
scas
or
je
mov
push
cli
sub
sbb
and
ja
lret
cmp
mov
fists
rolb
jae
inc
pop
rorb
sub
add
or
inc
cs
shlb
lea
jmp
and
adc
in
xor
call
mov
mov
inc
dec
mov
sub
and
adc
xchg
push
dec
push
push
std
push
inc
rorb
push
call
sub
dec
aam
aaa
and
xor
sub
sbb
inc
je
aad
push
in
cmp
pop
sbb
in
aas
fstl
mov
movsl
and
aas
enter
push
sbb
shlb
xchg
aas
js
fcmovb
mov
repnz
jecxz
arpl
inc
push
sub
xchg
cli
insl
cmp
ficoml
push
mov
adc
or
je
inc
push
xchg
mov
xchg
xor
fiaddl
test
xor
xchg
add
ja
pushf
mov
sub
je
loopne
push
or
lds
outsl
sub
push
push
adc
pop
xchg
xor
inc
push
dec
push
sbb
and
xchg
shr
push
dec
pop
in
adc
inc
rolb
and
or
mov
in
push
pop
popa
pusha
jo
shl
xchg
dec
addr16
pusha
mov
mov
xchg
cli
or
or
mov
call
sbb
imul
mov
xor
jmp
cmp
sub
mov
dec
aam
inc
adc
je
jns
cmp
call
and
pop
dec
or
push
jl
pop
int3
pop
fs
hlt
insl
inc
xchg
mov
insl
ljmp
das
jle
fwait
adc
cmp
mov
mov
mov
pop
call
clc
pop
ficompl
pop
jmp
inc
jb
xchg
or
aaa
je
cmp
jmp
addb
sbb
ret
aaa
xchg
pop
mov
test
addr16
lcall
push
into
cmp
xor
jno
dec
dec
jmp
sub
inc
mov
rclb
mov
and
subl
push
sub
xchg
xchg
sbb
je
mov
repnz
sbb
or
adc
cmc
or
call
pop
adc
mov
and
ja
push
cmp
push
and
inc
fiadds
shlb
sub
aad
pop
push
xchg
push
push
es
cmpsb
out
xchg
add
movsl
push
and
cld
aad
es
into
push
shll
shlb
int
xchg
xchg
push
push
push
es
mov
call
out
jmp
iret
dec
push
mov
or
in
ficomps
and
cltd
and
push
fwait
xchg
lret
inc
push
inc
int3
xchg
js
sbb
push
push
shrb
pop
outsl
inc
jbe
push
imull
ret
push
enter
xor
sbb
xchg
xchg
push
push
jp
fistpl
loope
push
adc
enter
call
ret
push
outsl
pop
aaa
mov
cmpl
add
shll
call
or
in
je
mov
ja
and
push
push
enter
xchg
pop
shlb
loope
cmp
call
mov
nop
fnstenv
and
les
pop
inc
jno,pn
das
test
movl
test
out
add
sub
mov
dec
sub
nop
popf
addl
jno
lods
lret
call
nop
into
jmp
sub
nop
push
inc
or
push
inc
dec
cmp
fs
cs
pusha
nop
inc
out
out
push
in
nop
je
mov
rolb
nop
sbb
sbb
rolb
inc
or
iret
repz
sbb
or
mov
pop
orl
sbb
jmp
rcl
jns
inc
mov
adc
push
adc
divl
daa
lock
daa
pop
nop
add
and
inc
add
add
inc
inc
outsb
push
inc
repz
or
push
mov
mov
enter
add
inc
inc
inc
out
or
push
adc
bound
rolb
add
xor
push
out
adc
inc
push
or
out
in
or
adc
mov
mov
insb
sbb
mov
add
push
pop
jmp
cmp
je
mov
mov
sbb
repz
lahf
ret
fstpt
cltd
push
test
inc
xor
sahf
xchg
stos
insl
push
pop
add
out
dec
in
add
add
jbe
dec
dec
mov
pop
test
jo,pt
cmp
je
xchg
add
xchg
aaa
jb
mov
cmp
mov
mov
pop
pop
inc
xchg
mov
or
enter
or
add
mov
fisttpll
in
mov
or
mov
dec
or
or
or
jb
pop
and
pop
leave
xor
push
push
setp
add
adc
notb
adc
or
cmp
push
jnp
cmp
enter
int
push
adc
add
adc
sbb
pop
leave
adc
adc
enter
push
pop
enter
pop
pop
and
sbb
xchg
sbb
cmp
sbb
sbb
add
sbb
cmp
cmpsb
repnz
sbb
sahf
push
mov
sbb
pop
push
push
jg
cmp
inc
negb
pop
jne
add
add
popa
jmp
add
push
add
cmp
xchg
jmp
cwtl
xchg
jns
xor
push
in
imul
rcl
repnz
dec
push
ret
in
in
repnz
mov
push
repnz
out
in
fdivl
jne
adcb
adc
push
maskmovq
testl
ljmp
jmp
jmp
dec
pop
lods
call
in
repnz
xor
in
xchg
aad
xor
out
in
cmp
mov
sbb
pop
leave
out
xchg
out
or
nop
out
xorl
lock
dec
icebp
cmp
push
rolb
das
jnp
or
adc
repz
std
jnp
aam
hlt
hlt
imul
cmp
cmc
cmc
cmp
cmpsl
div
mov
or
popa
negl
gs
scas
addb
clc
clc
or
inc
stc
stc
and
dec
sahf
cli
cli
add
outsb
sub
nop
sti
fdivrp
cld
cld
je
mov
push
push
nop
shlb
mov
leave
repz
in
std
sbb
fs
lea
fldl
adc
jle
shll
xchg
push
std
or
or
fwait
or
jecxz
jecxz
push
shll
xchg
xor
sub
in
addl
sbbb
adc
inc
or
out
jb
inc
out
scas
call
cltd
sti
adc
inc
mov
cltd
or
out
jmp
xchg
daa
dec
pop
push
in
cltd
or
daa
or
cli
aad
imul
in
aad
mov
andb
cli
or
aas
repz
add
mov
leave
and
stc
xchg
cmpsb
jb
imul
mov
xchg
clc
in
repnz
cmp
mov
xor
sti
inc
scas
ss
sti
sti
xchg
or
scas
xchg
push
repnz
jmp
mov
cmp
scas
mov
mov
jl
daa
add
sub
aad
imul
shl
add
loope
clc
andb
and
imul
out
pop
push
xchg
push
fdiv
out
mov
negl
lret
imul
ljmp
push
jmp
pop
repnz
notl
mull
hlt
imul
out
push
inc
test
repnz
notb
mov
insl
repnz
repnz
inc
repz
pop
push
loope
testb
sub
test
mov
out
imul
iret
in
mov
dec
loope
cmp
jb
cmp
rcrl
jb
or
and
sbb
cli
hlt
subb
or
xchg
test
add
push
stos
into
jo
adc
push
ret
clc
sti
mov
loope
loope
scas
xchg
stos
jp
movnti
cmp
mov
in
pop
lret
or
pop
repz
setb
aam
mov
lcall
jmp
pop
mov
pop
pop
dec
repz
in
xchg
adc
pop
mov
pop
pop
repnz
repnz
add
or
jb
scas
dec
icebp
icebp
das
xchg
pop
inc
jb
sub
ds
mov
pop
repnz
dec
push
cmc
cmc
mov
icebp
mov
andb
icebp
or
jne
stc
push
and
test
dec
icebp
xor
andb
or
out
lock
mov
xor
ret
add
jmp
repnz
ret
fwait
push
sub
ffreep
push
inc
fcmovbe
dec
push
insb
loope
inc
cmp
cmp
ret
mov
adc
mov
test
inc
add
jne
stc
mov
fld
xor
jmp
xchg
pop
ljmp
xchg
js
and
jmp
dec
or
push
nop
push
jns
xor
cmpsl
xor
or
push
add
dec
adcl
mov
jl
push
jecxz
repz
mov
sahf
jae
insb
sbb
push
push
aad
jns
imul
dec
xchg
gs
dec
outsb
or
mov
jno
inc
mov
xchg
mov
mov
rcrb
mov
jns
mov
cmp
and
sub
or
test
pushf
dec
jmp
sub
lock
adc
lods
jle
and
lcall
push
fists
push
orb
data16
jmp
mov
and
mov
push
xor
add
and
mov
idivl
lock
popf
mov
inc
jecxz
imul
add
pop
mov
lea
or
clc
pop
orb
daa
jl
call
sub
push
add
fildl
jmp
or
xchg
inc
add
push
in
pusha
adcb
fsubrl
call
jmp
je
push
lret
or
pushf
insl
adc
jmp
adc
jno
shlb
insb
push
xchg
and
xor
mov
cmp
adc
popf
inc
fcoml
push
dec
xor
pop
xor
stos
adc
jno
adc
test
adc
hlt
psubsw
cltd
ss
and
add
dec
cmp
dec
add
add
dec
cltd
test
shr
inc
add
inc
jmp
in
inc
inc
add
ret
xchg
pop
xchg
dec
xor
pop
pop
and
scas
test
lea
data16
xorb
adc
inc
mov
xor
ret
adc
mov
fnsave
xchg
mov
aaa
and
adc
leave
pop
rorl
inc
dec
pop
rorl
pusha
push
adc
sbb
or
sbb
int3
ret
adc
inc
xor
adc
xor
in
jns
add
in
inc
dec
aas
add
push
in
pop
mov
test
lods
clc
add
or
push
dec
pop
movsl
xchg
leave
fmull
inc
mov
add
mov
sarl
sbb
jg
cmp
je
xor
shlb
xchg
nop
in
xlat
loop
sub
jmp
push
and
sbb
and
and
sub
add
mov
mov
frstor
fs
pop
and
roll
and
adc
cltd
bound
int
call
add
mov
jmp
push
movsb
fwait
adc
adc
and
and
inc
xor
out
push
sbb
push
mov
mov
and
push
xor
or
out
pusha
add
adc
inc
mov
or
mov
cmp
jl
push
jnp
pop
and
nop
jmp
imul
inc
daa
daa
lea
and
sbb
in
push
push
xor
and
xor
andb
add
and
and
fnstsw
dec
pop
push
dec
sub
lds
adc
sbb
and
repnz
inc
and
and
or
and
xchg
or
je
inc
and
add
aam
lahf
xchg
push
mov
pop
xor
rcrb
nop
inc
inc
cmp
push
shr
and
nop
dec
mov
xor
test
ds
cmp
inc
js
and
and
cmp
mov
and
fnstsw
and
and
cmp
adc
and
push
mov
sub
and
and
nop
push
pop
pop
outsb
daa
and
test
test
insb
pop
xchg
or
add
pop
and
mov
loopne
mov
dec
and
add
mov
and
orl
push
jb
adc
sti
xchg
outsb
xchg
inc
and
lock
or
cmp
add
push
jo
hlt
movsl
dec
push
loop
and
clc
dec
rorl
data16
data16
imul
inc
inc
mov
and
iret
dec
out
or
pusha
push
cmp
in
aaa
popa
aas
xchg
and
xor
mov
movsl
sub
nop
sbb
cs
or
mov
and
cltd
inc
loopne
std
and
inc
adc
fnsave
cltd
cmp
nop
push
adc
cltd
sbb
test
cltd
add
dec
aam
pop
pop
cltd
vorps
aaa
fsubl
dec
mov
pop
hlt
cwtl
loopne
cltd
scas
jb
xor
test
push
xchg
adc
push
ja
sub
and
je
sub
cwtl
mov
and
cs
mov
cmp
or
dec
adc
jl
mov
xchg
adc
jmp
mov
push
sbb
lds
mov
sbb
push
mov
mov
inc
inc
subl
test
cmp
enter
mov
or
xchg
push
sub
push
shrl
cmp
or
mov
inc
mov
adc
call
dec
add
push
icebp
nop
mov
in
xchg
ljmp
dec
dec
testl
adc
in
loope
pop
fldl
mov
mov
sbb
lret
inc
inc
stos
xor
mov
add
je
lods
push
mov
nop
dec
or
mov
sub
pop
sbb
mov
push
push
sbb
sub
rorl
movb
jae
cmp
sbb
leave
loopne
imulb
push
mov
push
push
sbb
mov
adc
or
add
add
mov
nop
mov
ss
inc
ja
add
aam
mov
aas
cmp
adc
pop
sbb
cmp
mov
rorb
mov
sbb
jmp
stos
mov
sbb
addl
dec
sbb
fmul
sub
or
sbb
cmp
sub
push
mov
inc
mov
sbb
jl
mov
mov
xor
rcrb
adc
mov
imul
rcl
fwait
jno
sbb
nop
mov
js
lea
test
addr16
rorb
inc
inc
outsb
popa
call
jmp
mov
rcl
cmpl
sub
push
inc
inc
dec
xor
and
xchg
pusha
mov
mov
dec
add
sub
mov
nop
shr
mov
push
pop
popa
cs
inc
and
lods
into
mov
gs
mov
inc
sbb
sub
sbb
xor
je
es
sbb
cmpsb
push
mov
loop
push
out
xor
dec
cmp
push
sbb
xchg
aam
mov
or
or
dec
mov
rorb
sub
add
or
sysenter
fs
push
sbb
cmp
jae
mov
test
int3
sbb
roll
dec
lock
cmp
or
or
bound
add
ss
out
cmp
inc
inc
out
mov
cmpsl
sbb
ret
or
popf
push
ret
inc
mov
mov
or
dec
cmp
inc
jo
push
je
mov
orl
mov
fisttpll
jmp
xor
cld
add
sti
lret
cmp
out
mov
sbb
addl
cmp
and
push
mov
in
push
mov
sbb
sarb
mov
push
sbb
sbb
lock
scas
ret
jp
out
dec
push
adc
inc
push
or
je
add
je
sbb
pop
xor
xchg
push
mov
mov
js
addl
mov
sbb
xchg
bswap
imul
mov
out
mov
xor
sbb
sbb
sbb
sbb
pop
dec
rcrb
sbb
cmp
inc
lret
lcall
call
adc
loope
dec
push
popa
jo
push
or
cmp
cmp
daa
adc
xchg
mov
push
lods
pop
fdivs
mov
ffree
sub
push
inc
sarb
mov
and
pop
push
dec
gs
icebp
inc
imul
mov
ret
das
mov
push
jno
xchg
mov
xchg
mov
xlat
or
inc
out
push
mov
dec
dec
inc
gs
dec
pop
ret
mov
pop
out
inc
push
sub
sbb
cmp
push
dec
lock
jbe
lods
ret
sub
jmp
enter
adcl
pusha
add
mov
pusha
mov
stos
ja
ja
mov
xor
movntq
gs
add
jl
dec
fs
nop
sub
add
pop
sbb
add
jp
xchg
gs
sbb
or
xchg
enter
add
xlat
adc
xchg
dec
jae
mov
xor
les
shlb
pop
adc
and
mov
xchg
bound
insb
or
cmpsl
lcall
pop
in
or
test
or
in
sbb
push
sub
dec
test
or
repz
js
movsb
jnp
test
push
out
subl
add
xor
test
insb
cmp
push
test
aad
lds
mov
add
cmpsl
das
popf
push
sbb
dec
inc
mov
mov
leave
ret
ljmp
movsb
xor
out
or
call
pop
stos
xchg
push
shr
rolb
jl
loopne
or
in
cli
stc
test
sbb
ret
jg
dec
ret
or
mov
inc
push
jo
test
and
ret
sub
leave
xchg
add
adc
es
nop
push
cwtl
pusha
ret
add
mov
fwait
roll
das
push
loopne
or
pushf
scas
or
enter
cmpsl
loope
jl
inc
stc
push
js
add
notb
and
int
jbe
lcall
stos
xchg
fbld
dec
or
sub
or
mov
push
sbb
call
push
adc
and
jbe
fimuls
call
push
cmpsl
mov
addr16
and
inc
mov
out
add
push
cwtl
dec
addr16
sbb
sub
push
inc
xchg
ret
ret
aam
mov
mov
dec
or
rclb
dec
ja
mov
sbb
popa
out
fistpl
rcrb
mov
pop
push
mov
sbb
jnp
mov
jo
popa
mov
sub
xor
cld
push
sub
add
and
or
jmp
push
mov
imul
mov
movsb
shll
ja
sbb
push
popa
xchg
lahf
pop
dec
call
pop
jo
mov
dec
sub
xorl
inc
jne
and
clts
ja
xor
and
sbb
inc
inc
jne
inc
xor
or
inc
or
and
insb
inc
call
nop
jnp
aaa
jne
and
push
lea
push
adc
jne
nop
shlb
fs
dec
enter
sbb
mov
sub
mov
add
sbb
jne
call
cmp
jne
push
test
les
jne
mov
pop
adc
xchg
sbb
mov
dec
call
mov
add
xchg
mov
call
movsb
mov
cli
add
incl
jl
je
sbb
cmp
sahf
xchg
and
sub
push
aas
xchg
sub
inc
js
loopne
xchg
push
ljmp
pop
mov
cmp
adcl
sahf
dec
call
sbb
or
pop
push
lods
pop
push
jns
push
cmp
xor
rolb
add
mov
out
call
adc
or
fiaddl
adc
adc
test
out
sub
test
mov
lds
adc
add
fwait
add
repnz
push
cld
mov
nop
inc
and
fiadds
jmp
incl
xor
aam
mov
inc
mov
xor
push
inc
call
setl
inc
mov
and
call
add
fsubl
xor
and
or
jne
add
dec
jge
movb
push
mov
out
insb
cmp
xor
sti
fildl
cmp
inc
jmp
dec
jmp
xor
loopne
sbb
push
inc
inc
adc
ret
inc
jmp
inc
inc
inc
cltd
test
pop
je
pop
es
xchg
test
lcall
into
or
xchg
mov
ret
fs
stc
add
das
or
add
xchg
xorb
addl
or
je
addr16
or
cmp
and
cmp
pop
addb
mov
adc
into
call
xor
lcall
je
pop
add
ds
popa
adc
push
popf
pop
pop
dec
dec
nop
fldt
ds
fildll
adc
mov
mov
addr16
sbb
cmp
loopne
inc
notl
mov
mov
mov
dec
add
and
cld
shl
scas
xchg
xlat
mov
cmp
dec
add
inc
shl
cmpsb
jb
cmp
inc
mov
lret
fisubrs
jge
pop
fscale
add
push
push
or
inc
jecxz
or
adc
mov
jne
push
jne
and
dec
inc
fisttps
jmp
cmp
adc
jne
adc
fistps
dec
push
add
ret
push
sar
inc
push
adc
mov
pop
jl
call
xchg
cmp
dec
sub
mov
jo
jns
sub
hlt
dec
outsb
arpl
jo
arpl
cmc
inc
insl
inc
dec
imul
out
cmp
pop
cmpsl
push
add
nop
mov
or
sbb
inc
rorb
fstpl
and
ja
mov
xor
inc
and
inc
add
filds
cmc
add
scas
rolb
or
es
clc
xchg
mov
cmp
add
sahf
in
jmp
les
cmp
mov
out
out
and
sbb
or
jmp
jp
lock
sarb
lock
adc
test
out
lret
sbb
xor
lahf
or
andl
sbb
das
xchg
xor
mov
call
mov
gs
loopne
xorl
xor
aad
mov
shl
ror
xchg
scas
stos
loopne
push
inc
jbe
popa
push
xlat
cmc
fists
sub
fs
push
xlat
sbb
rol
push
push
sbb
test
testl
cmp
dec
mov
daa
xchg
or
testl
scas
gs
out
test
notl
leave
divl
pop
mov
jmp
repz
xchg
and
add
aaa
cltd
bound
sbb
je
or
or
loopne
cwtl
insb
call
mull
push
mov
fldl
pop
lcall
xorb
shrl
pop
rorl
dec
pop
and
inc
mov
popf
inc
pop
inc
mov
fstpl
pop
leave
xchg
cli
sahf
fs
repnz
ror
xchg
wrmsr
fnop
push
inc
mull
pop
aad
sarb
js
divl
push
xor
notl
mov
mov
mov
inc
add
mul
add
cwtl
insb
mull
mov
enter
or
push
test
shll
ljmp
fbstp
fsubs
fbld
ljmp
sub
mov
or
ret
add
gs
enter
sbb
push
mov
xor
notl
sbb
rcrl
sbb
or
testl
or
test
mov
push
sub
and
int3
xor
sbb
mov
divl
inc
dec
idivl
sbb
insl
jb
cwtl
add
cmpsl
or
fdivl
aam
push
mov
sbb
push
pushf
mov
mov
dec
sub
jne
cmp
test
call
orl
adc
dec
shlb
int3
inc
stc
xor
rorb
push
stc
cwtl
insb
call
stc
shl
inc
cmpsb
xchg
es
xor
in
push
fwait
jp
pop
adc
je
cmpsl
stc
cmp
push
mov
outsl
mov
ss
adc
daa
lds
adc
mov
adc
adc
adcl
dec
inc
xchg
mov
adc
daa
adc
adc
loopne
add
mov
push
call
push
mov
in
mov
mov
mov
loopnew
xor
jo
testl
loope
add
adc
sub
daa
push
xor
mov
andb
mov
mov
mov
sbb
mov
xchg
cwtl
scas
scas
push
mov
xor
cs
and
mov
push
sbb
xchg
mov
dec
lods
sbb
xchg
inc
leave
dec
jl
xchg
sbb
mov
push
xor
mov
popf
push
repnz
push
ss
outsb
and
mov
in
scas
push
pop
mov
inc
pop
sbb
mov
mov
pop
mov
add
packuswb
out
cvtdq2ps
aam
mov
testl
sub
movsl
mov
or
es
aam
pop
call
add
xchg
pop
fisttps
mov
mov
mov
cmp
push
sbb
cmp
adc
adc
mov
adc
cmp
cmp
loope
pop
test
loopne
cltd
movsb
pop
stos
cmp
add
inc
mov
dec
mov
and
cs
cmp
sbb
aad
bound
jb
xchg
cmp
loop
mov
dec
push
call
sub
cmp
loope
pop
test
rorl
rclb
sub
rcpps
cmp
mov
cmp
movsb
ljmp
lds
pop
xor
cmp
cltd
mov
scas
adc
subb
arpl
imul
pop
inc
mov
sbb
cmp
int3
mov
cmpsl
cltd
popa
mov
mov
loope
cmp
pop
test
inc
jbe
fadds
mov
xor
scas
mov
jbe
hlt
enter
cmp
call
cs
add
bound
sbb
cmp
mov
popa
movsb
xor
mov
mov
sub
jnp
mov
sbb
push
cmp
adc
and
aam
in
pop
test
add
lcall
sbb
sub
and
adc
and
mov
push
xor
xchg
and
add
push
mov
je
cmp
mov
mov
or
adc
ffreep
mov
adc
rorb
cmp
sbb
repnz
sbb
cmp
inc
cmp
xchg
sbb
add
add
push
popf
sbb
xchg
call
or
sub
dec
sub
fwait
test
int3
lds
rorb
aam
mov
sbb
xor
push
pop
outsb
out
in
lds
cmp
lds
mov
into
add
ficomps
mov
adc
cmp
and
sbb
push
lds
inc
sbb
sub
inc
push
int
call
cmpsl
dec
lret
mov
cmp
cmp
ret
mov
adc
sbb
sbb
pop
fldcw
insb
bound
mov
call
push
sub
mov
scas
dec
xor
mov
add
lds
mov
pop
adc
rcrb
or
rorb
and
mov
cmp
push
or
pop
jbe
call
add
nop
rorl
clc
cmp
cmp
xor
cwtl
cmp
sub
lods
bound
sbb
xor
sbb
xor
or
or
idivb
xchg
mov
fiaddl
pop
xchg
daa
xchg
cmp
or
les
in
call
popa
jae
les
out
mov
mov
dec
cs
aas
sbbl
push
push
jns
test
and
fs
pop
jae
pop
enter
mov
sbb
add
hlt
add
push
jno
nop
push
test
cmp
mov
pop
test
je
sti
mov
insl
sbb
xchg
mov
inc
pop
jae
nop
out
call
test
jle
adc
push
out
shlb
nop
dec
fs
test
push
push
bound
cmp
mov
outsb
adc
outsb
adc
outsb
adc
out
push
neg
or
and
add
gs
cwtl
insb
dec
pop
add
or
jb
jae
rcl
imul
and
push
xor
sbbb
pop
jle
cmp
cmp
ficoml
mov
or
and
adc
ret
dec
lea
adc
rcl
push
fistpl
fistpl
xlat
xchg
xchg
fisttpl
adc
lds
fucomi
mov
fildl
or
movsb
aam
fldt
or
pop
ljmp
push
dec
adc
jno
arpl
inc
xchg
or
in
loope
loopne
pop
loop
pop
in
nop
jns
movsbl
jno
jmp
dec
and
lea
mov
dec
enter
pop
inc
arpl
sub
add
mov
xchg
nop
jnp
loopne
mov
adc
cmpsb
sarb
js
pop
pusha
cmp
lods
inc
adc
aas
add
pop
mov
and
dec
xchg
les
dec
enter
or
jl
and
mov
in
test
outsl
nop
pop
dec
and
mov
inc
adc
sub
push
mov
inc
pop
pop
adc
push
and
pop
psubsb
inc
push
aad
je
fsts
inc
push
jo
cmp
fdivrl
xchg
or
sahf
stos
sub
pop
or
shll
and
pop
xor
call
mov
sub
call
sbb
adc
das
lahf
ljmp
call
mov
repnz
call
sub
add
call
pop
scas
xor
lock
call
fwait
push
test
call
mov
stc
sti
inc
call
mov
stc
repnz
movsb
lods
andps
movsl
pop
call
xchg
das
pop
mov
call
insb
stc
repnz
call
je
gs
pop
sub
jl
call
shr
inc
sbb
cmp
test
mov
nop
sbb
adc
sub
cli
lret
movsb
dec
dec
in
in
fxch
movsl
repnz
les
lods
int3
mov
pop
shlb
xchg
mov
xchg
lret
fdivl
lret
test
test
in
inc
aam
xchg
lret
lock
es
jns
pop
sub
cld
adc
add
add
leave
or
je
out
or
or
loope
adc
mov
mov
mov
stos
and
dec
in
lahf
sub
xor
jae
xchg
dec
in
push
xor
push
push
inc
gs
dec
out
rorb
cs
adc
and
or
pop
add
add
or
jo
pop
and
enter
mov
and
int
jo
xor
sahf
mov
jg
push
call
mov
je
data16
js
movsb
sbb
push
adc
inc
lcall
sbb
cmp
dec
push
and
sbb
cli
cmp
xchg
xchg
mov
sbb
imul
pusha
in
lods
mov
cli
mov
xchg
out
mov
push
mov
mov
add
push
inc
xchg
and
adc
xchg
shlb
xchg
je
rcrb
fs
lcall
sub
mov
sub
lret
insb
adcb
mov
lods
mov
rorl
sbb
or
mov
pop
lret
push
loopw
shlb
add
or
lret
mov
add
inc
mov
insl
add
add
or
insl
sbb
dec
xlat
insl
dec
fsubrs
or
push
cmp
cli
cs
pop
adc
add
inc
cld
push
imul
call
xor
mov
fnsave
mov
add
xor
or
pop
mov
popa
fsubrp
sbbb
mov
sahf
dec
ljmp
xchg
jp
ret
push
mov
sub
mov
sbb
push
or
push
jecxz
xchg
mov
push
inc
pop
mov
add
xor
shrb
addl
or
pop
lcall
rolb
je
ret
stc
mov
mov
or
or
cmpsl
pop
or
adc
adcb
push
or
dec
xchg
mov
out
imul
mov
add
inc
xchg
repz
jp
les
or
or
xchg
bound
or
fs
or
es
jmp
fs
ret
adc
fwait
mov
inc
xor
cmp
adc
inc
xchg
pop
pop
outsb
xchg
sub
fld1
inc
cmp
sbb
dec
lds
jne
cmp
mov
xor
mov
test
xor
cmp
lds
push
in
push
or
out
pop
mov
and
inc
cmp
movsb
fs
xchg
shlb
dec
and
sbb
rclb
mov
add
lods
pushf
xchg
xchg
sbb
mov
mov
dec
leave
dec
lea
fstl
pop
mov
push
call
inc
and
mov
mov
sbb
xorb
cmpsl
add
mov
lods
cmp
cltd
or
and
mov
add
sub
mov
orb
xor
lea
pop
and
pushf
inc
mov
add
xacquire
and
call
pop
rorb
mov
sbb
insb
cmpsb
mov
add
or
shlb
mov
sbb
and
ret
dec
mov
jge
sbb
mov
xchg
xchg
ret
or
adc
stos
lea
je
rorl
push
call
jns
call
sbb
xchg
adc
mov
jmp
adc
sti
lods
pop
xor
sar
xor
xor
push
test
ss
lea
mov
push
sti
test
addl
js
jmp
stos
push
sti
xchg
leave
bound
mov
adc
inc
push
ret
bound
pop
int
nop
mov
test
or
pop
add
ja
dec
add
pop
dec
sahf
adc
bound
cmp
sbbb
ficoml
rcrb
dec
mov
push
nop
push
push
inc
mov
mov
push
pop
and
inc
xor
or
xor
shrb
rcll
lods
test
or
loopne
fldl
xchg
adc
adc
adc
sub
mov
and
jo
adc
out
nop
push
xchg
and
and
mov
rcrb
ret
jge
mov
pusha
xor
gs
xor
inc
pop
lods
mov
mov
bound
mov
lea
lcall
stos
xor
or
and
and
and
orb
testl
imull
or
rolb
add
add
and
dec
xor
add
mov
mov
ret
popa
pop
insl
mov
pop
inc
sub
jno
cmp
pop
nop
inc
or
flds
adc
mov
in
addl
jmp
add
out
sub
jb
rolb
or
aam
mov
push
popa
or
jmp
sub
fnstenv
ret
cld
add
loopne
push
nop
jl
cmp
enter
jge
sub
cmpsb
cld
jb
xor
cmp
int
out
push
push
rolb
and
adc
sub
test
fs
adc
rcl
lea
loope
dec
inc
and
out
mov
mov
hlt
sbb
mov
call
daa
icebp
and
rcrb
fisttpll
lods
push
loope
dec
daa
sub
jbe
dec
andb
ror
add
and
jle
cld
rol
daa
loopne
mov
cmp
cwtl
daa
dec
and
fwait
daa
roll
xchg
daa
or
push
inc
daa
xor
shl
dec
xor
lcall
mov
nop
outsb
or
daa
xchg
rclb
enter
adc
dec
xorb
sub
sub
push
or
test
mov
fstpt
ja
cmp
pop
sbb
pop
mov
dec
fsubrs
xor
pop
jmp
or
xchg
adc
push
xchg
outsb
fistl
mov
adc
sbb
popa
dec
inc
or
mov
pop
shll
outsb
or
xor
mov
pop
sbb
add
leave
mov
pop
in
or
xchg
mov
mov
jecxz
and
xlat
clc
mov
push
out
cmp
adc
pop
push
jp
frndint
sahf
dec
jge
jg
push
mov
and
fs
nop
dec
mov
mov
mov
xchg
leave
shr
ds
add
pop
je
lods
adc
inc
or
push
pop
xor
mov
in
dec
and
or
mov
cwtl
mov
test
inc
cmp
push
in
leave
nop
mov
addl
xchg
and
sub
lahf
mov
fs
xchg
cmp
xchg
inc
xor
out
stos
xchg
inc
push
dec
stos
sahf
sbb
push
push
jne
gs
add
adc
inc
push
jo
sbb
jmp
pop
add
fistpl
inc
jno
fwait
jg
or
mov
mov
or
arpl
push
push
popf
xlat
mov
mov
or
pop
je
inc
dec
dec
testb
jnp
or
nop
xchg
out
mov
mov
out
pop
pop
fstl
sbb
or
stos
fwait
inc
loope
xchg
adc
xor
and
movsl
hlt
cld
sbb
sub
rcrb
imul
jne
fistpl
adc
mov
pop
mov
mov
pop
loope
ss
push
xor
dec
mov
cmp
insl
imul
jne
add
sti
fwait
repz
adc
ficoms
push
jo
repnz
xlat
int
and
push
jnp
es
jae
mov
dec
in
push
loope
mov
mov
adc
xchg
fwait
jge
push
xor
add
call
fwait
adcl
aam
cmp
or
mov
push
fisubl
jecxz
lock
fldl
inc
cmp
ret
adc
cmp
lcall
adc
xlat
ret
and
inc
push
push
add
add
pop
adc
push
or
jmp
inc
sub
xor
movsb
repz
mov
lret
inc
add
add
call
ret
adc
xorl
mov
and
mov
test
xor
cltd
cmp
cltd
and
xor
push
and
mov
cmp
jb
jo
mov
sbb
inc
jmp
or
test
mov
add
or
adc
cmp
mov
addl
repz
cmp
add
and
or
sbb
ret
mov
sahf
out
bound
sub
repz
out
clc
sbb
aam
jns
fcmovnu
push
mov
pushf
pop
push
lods
push
mov
out
clc
push
inc
push
push
sub
repz
jns
nop
movsb
push
push
xchg
jl
repz
fs
inc
cmpb
repz
repz
push
out
ds
sbb
repnz
fmulp
jnp
jns
mov
ret
into
repz
out
sbb
incb
add
es
loop
jns
iret
sbb
sbb
out
sahf
mov
sbb
iret
repz
pushf
scas
lret
sahf
out
cld
or
and
out
sahf
out
data16
nop
sahf
out
sahf
sahf
lods
mov
fsubrp
out
out
jns
push
ss
inc
push
ja
and
jle
repz
data16
sahf
mov
daa
rol
loop
clc
ja
sti
ficoms
imulb
push
cmp
aaa
je
fs
pop
icebp
jns
push
cmp
adc
daa
pop
sbb
push
jbe
add
push
cli
jbe
push
cwtl
cmpsl
insl
mov
iret
pop
sbb
repz
outsl
cwtl
imul
fldcw
les
push
and
push
cmp
pop
daa
cwtl
mov
jo
jne
gs
pop
pop
test
sub
xlat
inc
mov
stos
or
fisttpll
dec
ja
jb
pop
add
mov
outsl
cmpl
clc
xchg
dec
xchg
jno
mov
es
ja
aaa
js
xor
rcll
flds
aaa
outsl
or
jo
mov
pop
fsubs
lret
int3
out
pop
mov
xor
fwait
sub
sub
push
jl
push
dec
cmp
pop
or
das
outsl
push
or
imul
sbbb
mov
xchg
xor
mov
adc
push
stos
dec
jnp
mov
lahf
arpl
bound
fadds
fcom
jno
or
and
inc
and
mov
inc
sbb
jmp
jae
icebp
jo
cs
outsl
adc
mov
daa
add
cmp
inc
dec
jnp
cmp
mov
dec
or
das
jg
arpl
add
cmp
rsm
mov
dec
inc
push
push
inc
push
inc
pop
inc
int3
fwait
rcl
outsl
outsl
add
sbb
inc
sub
push
adc
sbb
pop
dec
aas
in
cmc
and
pop
dec
imul
mov
jae
inc
jne
fdivrs
push
jecxz
inc
js
mov
je
ss
inc
xor
pushl
xor
xor
cmp
sub
inc
inc
xor
xor
mov
mov
xor
jge
xor
xor
inc
xor
xor
ss
pushl
sub
sub
cmp
xor
clc
inc
inc
xor
mov
adc
mov
lret
faddl
jne
test
xor
jo
lret
fidivrs
cmp
add
xor
or
push
loope
and
inc
aaa
adc
xor
inc
pop
dec
add
or
lods
mov
cmp
arpl
push
sbb
inc
push
inc
push
dec
and
fsubrl
cmp
ss
pushf
xor
inc
jno
rolb
dec
outsl
mov
addb
loope
and
sub
mov
ss
push
dec
hlt
imul
ficoml
pop
push
sub
jae
inc
push
inc
out
iret
sarl
xor
sub
out
cmp
in
xor
in
mov
lods
sahf
imul
add
movd
mov
push
into
hlt
outsl
iret
jo
ljmp
xchg
loopne
add
jg
mov
scas
lds
and
outsl
xor
jno
ljmp
push
movsb
inc
je
push
push
insw
int3
lret
push
inc
cmp
adc
mov
sbb
dec
push
in
cmp
sub
jge
mov
fldt
inc
mov
and
imul
sarb
insb
insb
mov
xchg
aaa
xchg
and
outsb
ret
or
mov
test
ss
inc
and
xor
rcrb
cmp
add
insb
arpl
and
pop
xor
imul
imul
pop
and
fnstsw
pusha
push
and
jl
jb
and
or
imul
imul
mov
or
je
dec
xchg
scas
imul
push
jo
jo
test
fildl
dec
fwait
pop
add
sub
sbb
dec
jp
push
cwtl
movsb
jmp
ret
cmc
cmp
arpl
inc
cs
push
push
push
add
ja
fldenv
fildll
adc
pop
xchg
push
popa
imul
add
ds
sbb
fdivl
pop
pop
add
inc
add
mov
mov
and
lock
test
mov
rolb
adc
pusha
sub
xchg
adcb
jg
adc
adc
sti
or
out
pushf
add
sbb
push
add
and
mov
inc
push
cmpsl
add
mov
mov
xchg
mov
adc
adc
fadds
cmp
repz
adc
orb
or
sahf
cmpsl
stc
loopne
adc
sub
mov
das
push
dec
repz
sbb
sbb
sbb
cmpsl
stc
cmp
call
iret
xor
pop
nop
cld
and
sarb
cli
js
jns
stc
iret
repz
jp
push
cld
fdivr
mov
out
mov
mov
test
mov
out
les
mov
and
mov
arpl
xchg
xor
mov
mov
and
ds
cmp
xor
mov
es
add
ds
adc
push
cld
or
in
out
sahf
fmul
les
jno
pushf
push
xchg
call
out
nop
mov
mov
jl
insb
push
iret
pusha
pop
mov
push
sahf
out
dec
inc
inc
cmp
iret
repz
xor
sub
and
cmp
repz
sbb
or
ds
repz
cld
or
out
sahf
out
call
out
sahf
mov
nop
jo
xor
repz
lock
int3
mov
repz
rep
inc
sub
adc
jns
iret
or
push
fcom
les
cwtl
js
sub
cmp
sarl
mov
fwait
loope
sbb
add
call
xor
out
cwtl
jl
dec
daa
dec
sbb
fistpl
xchg
dec
scas
pop
jo
add
pause
mov
mov
les
push
outsb
bound
add
adc
lret
sub
adc
add
adc
inc
dec
cmp
loop
fs
out
adc
or
add
test
out
sarl
pusha
push
jecxz
shll
gs
loop
add
mov
or
arpl
out
cmp
inc
mov
addl
adc
ret
push
ja
mov
jmp
inc
lods
ss
arpl
int
jno
stos
adc
mov
push
inc
add
mov
scas
jbe
sti
add
fbld
sbb
js
shrb
and
mov
pushf
andb
rolb
ret
jns
and
fwait
push
mov
push
xor
xchg
lret
inc
mov
jnp
out
cmp
inc
cmp
mov
add
pop
jne
pop
stc
sbb
sbb
pop
int3
shlb
jmp
add
jne
imul
and
arpl
jg
fmull
pop
outsl
mov
jo
push
or
sub
mov
push
xor
fcmovnu
mov
push
push
insb
das
inc
outsb
jne
subb
fstp
xchg
mov
cmpsl
ja
bound
imul
mov
jg
loopne
or
addr16
push
or
adc
or
adc
inc
scas
inc
push
mov
insb
inc
pop
insb
pusha
pop
sarb
jg
xor
das
fcoms
aam
adc
pop
mov
ss
sete
das
bound
int3
data16
daa
xchg
pop
sarl
jbe
js
in
or
pop
and
xlat
das
jbe
xchg
jns
pop
rcr
cmpb
dec
and
cltd
ss
lcall
sbb
pushf
adc
push
test
adc
push
mov
or
push
popf
addl
jl
in
push
aas
jo
loop
sbb
or
sarl
mov
or
mov
adc
and
adc
enter
loopne
xchg
leave
pop
outsl
jns
iret
fcmovnbe
xor
daa
fidivl
adc
jp
insb
adc
fs
push
sbb
pop
loopne
dec
mov
mov
sahf
loopne
jnp
jns
daa
lock
enter
dec
jecxz
dec
mov
dec
push
mov
dec
lret
xor
fcmovbe
and
push
jmp
add
sarb
inc
and
dec
imul
ret
lcall
out
bound
insb
push
lcall
scas
pop
push
and
gs
dec
dec
add
push
scas
aam
jg
add
push
outsl
ja
xor
jle
cs
lods
add
sub
and
ja
add
push
out
mov
mov
xchg
es
jecxz
and
add
cmp
mov
repnz
outsb
inc
lods
sub
cwtl
neg
ljmp
mov
mov
and
bound
xchg
dec
push
jb
lock
mulb
mov
inc
add
insl
jo
dec
pop
fs
push
add
loope
out
dec
add
xchg
add
push
mov
cli
add
jae
push
and
push
adc
dec
jp
ret
jae
push
sub
adc
dec
jb
inc
mov
push
ret
adc
cmp
adc
shll
push
repz
add
shll
add
leavew
dec
mov
ret
dec
inc
push
mov
pop
das
lcall
dec
or
cmp
jo
std
pop
push
jo
jb
jns
cmpsb
mov
ret
imul
pop
push
adc
jl
je
lods
cmpsl
xor
push
sbb
and
outsb
sbb
movsl
cmp
popa
jge
or
inc
pusha
inc
daa
fs
and
xchg
movsb
popf
and
inc
imul
mov
sbb
xor
stos
enter
ja
andl
fbld
negb
or
lods
gs
push
or
or
test
pop
fnsave
addr16
es
pop
movb
dec
xor
xchg
cmpsb
dec
jmp
test
push
nop
pop
push
mov
push
fs
addr16
mov
dec
xor
dec
pop
push
dec
xor
dec
test
gs
ja
push
adc
jle
sbb
inc
push
call
pop
adc
xchg
inc
callw
xor
ret
fimull
sub
inc
dec
cmpl
aas
das
xor
push
pop
outsl
mov
stos
mov
inc
add
stc
add
sub
mov
orb
insl
rorl
mov
sar
loopne
xor
dec
dec
pop
add
sbb
inc
jns
xchg
fs
adc
mov
lret
inc
sbb
inc
push
outsl
lret
pop
ficompl
dec
xchg
dec
and
roll
push
shlb
cwtl
shlb
sbb
push
mov
int3
or
mov
add
mov
out
add
test
jb
mov
ret
outsl
adcb
arpl
inc
jmp
enter
mov
push
aaa
dec
inc
dec
xchg
fwait
rcr
pop
or
aas
inc
cmc
lret
nop
in
sbb
mov
push
xchg
inc
mov
push
dec
or
inc
jp
fiaddl
pop
mov
stos
iret
add
jo
add
dec
add
add
sahf
movb
adc
jo
sub
push
cmp
adc
movsl
ss
clc
dec
pusha
push
jo
sbb
repz
in
xchg
and
arpl
push
into
pop
roll
in
xchg
lock
or
and
inc
cmp
mov
add
cmp
iret
pop
add
cmpsb
or
xchg
into
out
fcmovbe
add
outsl
inc
cmpsl
add
mov
mov
inc
adcl
jns
movaps
jns
cld
inc
jae
or
ret
add
je
mov
xorb
outsw
xor
sbb
add
mov
lcall
pop
mov
add
out
into
insb
sbb
rcrl
add
sub
pop
push
xor
sbb
shrl
fbld
lret
cltd
jmp
jno
rclb
ficomps
pop
fs
mov
push
popa
out
std
fwait
or
and
clc
cmc
mov
inc
cwtl
aam
push
jecxz
mov
push
pop
add
add
aam
lar
add
pop
imul
test
push
in
adc
mov
push
xchg
push
psllq
xor
popf
cs
mov
jp
add
sbb
icebp
add
sub
and
mov
push
pop
pop
add
dec
add
loop
test
imul
sti
mov
insb
push
fsubrl
sbb
xchg
jbe
addr16
pusha
mov
add
pop
hlt
add
loopne
mov
test
mov
push
inc
push
add
push
inc
xchg
or
daa
push
mov
nop
mov
stos
fsubl
push
adc
add
iret
repz
or
sahf
out
cmp
add
out
lock
enter
jns
out
mov
test
pop
mov
pushf
cwtl
xchg
nop
mov
js
push
out
pop
push
inc
cmp
int
jns
and
sbb
cld
in
lock
call
fsubp
push
fcom
enter
sahf
out
test
mov
jns
out
cmp
sub
int
jns
sbb
or
cld
in
hlt
cmp
repz
in
int3
mov
lods
mov
mov
js
idivl
fs
inc
sub
and
or
jmp
mov
and
test
mov
adc
mov
push
je
repnz
push
mov
adc
xchg
add
sbb
out
testl
lock
push
in
add
data16
add
and
mov
psrlw
lret
jbe
add
xor
push
add
mov
mov
inc
dec
pop
jg
fs
addb
in
inc
dec
pop
mov
add
xor
mov
mov
push
mull
and
dec
jmp
adc
dec
mov
xchg
icebp
and
inc
subl
and
addb
repz
push
pop
jo
andb
pop
add
in
cmp
or
and
adc
outsb
cmp
sub
dec
cmp
test
xor
lcall
jbe,pn
and
lret
add
xor
icebp
jg
xor
ds
je
in
add
mov
xor
lret
add
pop
and
cwtl
shlb
push
gs
imul
inc
loopne
ja
js
and
or
insb
and
pop
or
or
or
jb
jne
xor
addl
jae
popaw
insb
into
cmpsb
sub
stc
das
fmull
sub
sti
ss
sbb
jmp
push
inc
test
out
push
inc
add
inc
pop
pop
adc
ljmp
adc
aam
add
xor
xor
sbb
bound
loopne
lcall
xor
xor
xorb
xor
xor
xor
xor
xor
xor
movsb
xor
xor
lcall
push
xor
xor
xor
xor
xor
xor
dec
xor
xchg
dec
xor
sub
inc
ss
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
cld
out
aaa
std
aaa
adc
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
outsl
clc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
ret
add
popl
cld
push
lock
idivl
or
call
xor
xor
push
xor
xor
js
popf
xor
xor
pushl
and
inc
xor
push
xor
xor
xor
xor
xor
xor
pop
incl
out
xor
xor
xor
xor
xor
xor
fidivl
incl
mov
les
fnsave
out
xor
pop
mov
ss
ss
ss
ss
aaa
sbb
jno
dec
paddd
aaa
loopne
add
or
pushl
sarb
inc
cmp
loopne
jmp
cmp
cmp
cmp
cmp
push
cmp
xchg
lcall
jl
cmpl
mov
cmp
push
adc
cmp
call
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
ljmp
pop
test
jo
test
mov
aas
adc
xor
pusha
cmc
incl
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
aaa
cld
inc
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
jo
xchg
pushl
mov
mov
xor
xor
xor
xor
xor
xor
xor
push
aaa
jmp
sbb
sub
ss
clc
loop
cmp
cmp
cmp
mov
mov
clc
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
or
inc
aas
pop
aas
ja
pusha
inc
popl
xchg
pop
xor
push
pop
cld
xor
cltd
xor
xor
xor
xor
xor
xor
ret
decl
cmpsb
push
xor
xor
lcall
clc
xor
stc
cld
xor
test
mov
mov
nop
xor
out
in
xor
rep
std
sfence
xor
cmp
pop
cld
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
call
pop
jp
cmp
cmp
std
cmp
cmp
decl
sbb
cmp
cmp
xor
adc
aas
jmp
mov
cmp
ss
ss
xchg
cmp
cmp
or
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
call
cmp
cmp
cmp
adc
dec
aas
push
mov
cmpb
aas
shll
aas
lret
aas
in
out
out
jo
and
loop
xor
xor
xor
xor
incl
leave
xor
xor
loop
xor
xor
xor
call
mov
xor
xor
scas
std
xor
cmpsb
data16
outsl
mov
dec
ss
add
or
aaa
and
aaa
dec
aaa
lock
decl
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
lcall
filds
test
popf
cmp
xor
pusha
cmp
mov
cmp
cmp
fistpll
decb
sbb
push
cmp
inc
cmp
dec
cmp
popa
cmp
ret
inc
incl
cmp
cmp
cmp
or
hlt
fstpt
loopne
in
jmp
out
cmp
repnz
mov
adc
sub
xor
cmp
cmp
dec
cmp
push
cmp
insl
cmp
cmp
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
cmp
sbb
cmp
dec
cmp
addr16
pop
mov
xchg
cmp
mov
jp
jg
cwtl
ds
ds
mov
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
cmp
into
or
push
xor
insl
stos
jmp
mov
xchg
les
fidivl
in
lcall
adc
and
sub
cmp
jb
mov
xor
xor
xor
xor
xor
xor
mov
jl
outsl
sar
cmpsl
xor
xor
scas
jno
xchg
xor
xor
xor
fcomip
or
xor
xor
mov
ret
aaa
jmp
jmp
aaa
fwait
sahf
cmpsb
mov
bound
scas
cmp
ss
scas
jp
cmp
fcompl
dec
fbstp
aaa
cmp
mov
mov
call
cmp
cmp
cmp
cmp
dec
rolb
xor
call
push
or
xor
cmp
bound
data16
push
outsb
aaa
jb
lcall
loopne
aaa
xchg
ja
js
jge
cmp
cmp
cmp
cmp
or
ret
cmp
cmp
jle
mov
ret
out
sbb
ds
xor
xchg
aas
push
mov
xor
inc
xor
mov
xor
xor
cmp
ss
ss
fiadds
cld
cltd
aaa
mov
ret
aaa
jmp
repnz
or
cmp
cmp
cmp
pop
cmp
jge
mov
cmp
cmp
jbe
xchg
ljmp
cmp
cmp
cld
cmp
mov
and
cmp
out
jmp
cmp
fdivrs
push
aas
jne
mov
or
push
ss
mov
fwait
xor
xor
dec
or
sub
push
repnz
aas
xor
divl
pop
aas
cli
xchg
mov
fsub
adc
es
dec
ss
outsb
outsl
clc
decl
ss
enter
in
and
cmp
cmp
popa
cmc
cmp
mov
inc
test
pop
sbb
cmp
pop
push
imul
cmp
test
mov
ret
cmp
dec
decl
cld
cmp
cmp
jae
aam
fnstsw
jecxz
imul
mov
cmp
pop
icebp
call
sarb
inc
cmp
cmp
mov
mov
and
push
cmpb
cmpsl
ds
ds
ret
orb
std
idivl
add
sbb
addr16
loope
out
and
xor
xor
incl
push
xor
aad
out
cmp
or
xor
xor
xor
xor
xor
pushl
mov
int
in
xor
xorl
add
xor
ds
pushl
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
jg
pop
mov
cmp
mov
cmp
cmp
cmp
push
clc
outsl
clc
cmp
cmp
cmp
cmp
cmp
cmp
adc
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
pusha
aas
add
test
fdivrl
loop
out
out
pop
rclb
mov
xor
adc
xor
jae
cmp
jne
das
xchg
movsl
jg
xchg
xor
xor
xor
cmp
xor
xor
cmp
mov
jbe
loopne
jmp
xor
sbb
sbb
sub
sub
nop
cmp
mov
mov
enter
sarb
aam
in
ljmp
repz
xor
aaa
and
call
into
cmp
inc
xor
xor
lcall
decb
lods
xor
mov
mov
xor
xor
fbld
xor
xor
cmp
sub
sub
xor
clc
jmp
cmp
cmp
cmp
pop
mov
cmp
fidivs
cmp
inc
cld
cmp
push
mov
push
mov
mov
cmp
mov
cmp
cmp
mov
pop
jge
in
call
dec
cld
push
add
mov
sahf
or
adc
sbb
and
and
sub
sub
aas
rolb
xor
cmp
inc
cmp
clc
jecxz
cmp
pop
cmp
cmp
insb
cmp
je
mov
cmp
cmp
xchg
cwtl
mov
sub
xor
inc
or
pushl
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
shr
xchg
aas
loopne
clc
jbe
push
or
ljmp
cld
shll
pop
bound
clc
xor
xor
inc
xor
decl
xor
cwtl
xor
xor
xor
xor
cmpsb
aaa
loope
or
cmp
mov
or
xor
pusha
xor
pusha
cmpsb
and
fimuls
xor
hlt
aas
std
ss
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
call
mov
clc
ss
add
add
or
or
adc
adc
hlt
call
pushl
sbb
and
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
cld
inc
jg
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
popf
clc
and
nop
aaa
xchg
aaa
cwtl
into
mov
lcall
sbb
aaa
mov
mov
aaa
enter
shlb
aam
xor
icebp
aaa
fdivs
fcompl
in
out
or
loop
aaa
hlt
xor
aaa
hlt
add
or
mov
pop
adc
adc
sbb
cmp
mov
cmp
mov
cmp
pop
loope
cmp
cmp
cmp
cmp
sub
lock
cmp
cmp
cmp
cmp
cmp
push
cmp
jg
scas
lcall
pushf
cmp
test
lods
cmp
cmp
mov
cmp
lods
mov
push
add
call
jb
and
test
add
call
sahf
repnz
ud0
es
add
jmp
cmpb
jl
push
insl
es
icebp
addb
pop
shr
int
daa
mov
dec
bound
push
add
jns
sub
lret
push
sbbb
ds
add
add
std
int
adc
add
push
add
movsl
push
add
mov
pop
fbstp
mov
jae
sbb
pusha
cltd
mov
adcb
imul
int3
sub
sub
and
sahf
out
and
dec
mov
lcall
sahf
add
push
repnz
filds
es
loope
adc
sub
mov
dec
fisttps
mov
and
push
xchg
mov
push
sub
cmp
xchg
pop
test
add
dec
out
fnstcw
les
or
sub
and
dec
cmpsl
sbb
std
enter
out
lock
dec
push
jne
dec
ret
push
shl
andl
in
push
ret
adc
sbb
jne
push
mov
data16
les
or
push
ret
mov
mov
enter
sub
xor
adc
push
sbb
push
rcll
je
xor
addl
lods
dec
sub
mov
xor
or
xchg
push
and
pop
mov
lods
or
inc
dec
iret
pop
xchg
dec
sbb
xorb
out
or
pop
dec
sbb
in
xor
xlat
and
and
xor
jl
sbb
sbb
mov
jle
and
cmp
push
jecxz
inc
jp
add
dec
add
and
push
mov
in
ja
mov
inc
mov
mov
cmp
and
sbb
divl
lea
call
popf
pop
mov
mov
outsb
sub
cmp
xchg
or
add
add
cmp
push
adc
xor
sub
or
jae
push
dec
xchg
xorb
push
or
dec
outsl
mov
adc
lea
push
push
pop
jb
cmpb
or
dec
jne
jp
and
sarb
and
or
inc
andl
push
push
call
add
pop
cltd
jb
mov
ljmp
enter
pop
add
push
dec
and
push
dec
fcmovu
mov
cmp
addb
lret
outsb
and
aas
jmp
dec
xchg
cmp
js
sbb
cmp
inc
xchg
xorb
pusha
testl
nop
lret
test
lock
roll
mov
cmpsb
cld
inc
and
call
inc
jmp
lret
pop
and
push
sbb
and
sti
mov
adc
mov
mov
ljmp
lock
cs
push
ds
sub
adc
adc
add
or
add
andl
xor
add
movsl
mov
push
adc
orb
jl
sub
lea
jg
adc
dec
cld
sub
or
jge
shr
cmp
xchg
or
addl
add
mov
jbe
fmull
subb
orl
lock
call
aad
add
stos
add
mov
and
jmp
inc
lock
fildl
inc
mov
jge
xor
add
push
out
lret
mov
das
add
pop
pop
sbb
jns
leave
inc
or
leave
mov
or
mov
pop
add
popf
ret
sub
into
jnp
sbb
and
fsubr
xchg
lock
pusha
xor
loope
fldl
filds
or
jge
out
call
adc
mov
pop
adc
sub
xor
fidivrl
rorb
push
mov
push
sbb
push
pop
push
jbe
mov
xchg
movaps
add
adc
imul
xchg
fisttps
inc
enter
loop
rcrb
loope
pop
lcall
adc
pop
pusha
sbb
hlt
sub
rorb
outsl
das
dec
loopne
adc
push
loope
or
sarb
dec
adc
lea
push
lea
mov
or
pop
call
add
add
fcomip
push
outsb
or
mov
cmpsl
jl
mov
or
andb
mov
test
mov
cmp
mov
int3
mov
in
cmp
push
ja
out
idivl
xchg
lods
inc
decl
stc
jbe
xchg
sub
push
mov
or
xor
lret
add
mov
push
sbb
pop
mov
push
xchg
xchg
jg
or
lods
shll
xchg
cmpsb
out
cmp
xchg
mov
lods
xlat
call
scas
adc
xor
aaa
loopne
roll
rolb
mov
loope
adc
push
ja
not
push
int3
adc
dec
and
add
mov
adc
or
icebp
push
pushf
cmpsl
jge
dec
add
pop
push
in
not
mov
sub
add
add
mov
inc
int3
push
add
ret
sub
test
xchg
das
jl
lahf
sub
leave
xchg
jo
roll
pop
xor
add
xor
lods
xor
bound
jmp
xor
jmp
xor
in
cmp
xor
pop
int3
mov
adc
dec
pop
notb
push
mov
jo
add
ja
xor
fldl
xor
xor
cmp
xor
cmp
or
fildl
into
adc
or
inc
inc
adc
leave
out
adc
test
enter
nop
adc
pop
xchg
dec
sbb
push
sub
repnz
inc
movb
add
xchg
cmp
add
push
mov
push
sub
rorb
mov
push
mov
add
sub
mov
and
call
pop
dec
adc
out
sub
movsl
pushf
xchg
jne
xchg
adc
inc
adc
loope
xchg
push
inc
adc
jne
mov
jne
mov
and
adcl
push
mov
and
dec
xor
pop
jnp
push
cmp
or
xchg
mov
pusha
addb
sarl
sub
lret
lea
out
scas
outsb
xor
ret
rorl
sbb
mov
pop
das
adc
adc
adc
and
jle
sbb
sbb
jbe
bound
mov
push
jo
xlat
andl
je
int
pop
psubsb
pop
jae
movhps
sbb
testb
call
call
jns
sbb
or
inc
idiv
adc
int3
lar
adc
sbb
ds
cmp
adc
mov
sub
mov
or
lret
cmp
ja
daa
and
orb
dec
aas
in
adc
jo
push
jge
or
inc
pop
call
or
sahf
push
daa
fs
and
je
inc
or
xorps
push
call
adc
mov
daa
ds
gs
mov
adc
push
cmp
or
dec
adc
cmp
and
adc
or
and
inc
and
stc
inc
inc
or
sbb
mov
sub
inc
inc
jg
mov
push
or
lods
sbbl
and
sub
mov
lahf
sbb
adc
or
inc
push
jbe
push
mov
or
sbb
push
xor
repnz
mov
sbb
mov
sub
add
or
cmp
add
inc
mov
dec
push
or
and
imul
xor
mov
adc
inc
outsl
dec
inc
mov
out
dec
mov
andb
fwait
or
aaa
ds
jae,pn
pusha
pop
inc
pop
or
pop
mov
dec
call
pop
leave
cwtl
or
rcll
call
mov
adc
pop
jo
mov
enter
es
jecxz
mov
ss
cmpsl
jae
adc
pop
xchg
pop
andb
ljmp
jnp,pn
imull
nop
nop
push
adc
rolb
add
hlt
pop
lea
insl
les
cmp
repz
fs
pop
push
dec
inc
pop
mov
pop
imul
add
jmp
cmp
movsb
mov
push
sbb
lret
mov
adc
and
out
in
out
xor
pop
nop
xor
push
push
jl
or
pop
sub
orb
push
shrl
pop
mov
push
sahf
out
push
loopne
lock
add
cs
idivl
push
pop
cmp
int
inc
sub
xor
inc
pop
or
sub
cmpsl
push
adc
in
out
xchg
mov
inc
enter
stc
xchg
mov
rolb
push
jns
test
sbb
or
jb
hlt
adc
imul
mov
in
jl
mov
jns
push
mov
push
inc
push
call
ja
pop
pusha
mov
pop
or
pushf
sub
hlt
push
hlt
lds
pop
push
cmpsl
or
pusha
stos
ret
out
aam
adc
cmp
enter
sub
nop
cmpsb
jns
sub
push
xchg
add
dec
rcrl
sub
sub
and
sub
sub
sub
sub
sbb
jae
sub
sub
sub
add
xchg
sub
lcall
sub
cmpsb
imul
rcll
sub
sub
sub
dec
testb
sub
add
xchg
mov
sbb
and
ret
sbb
shl
mov
push
adc
push
mov
cmp
inc
js
inc
jmp
pop
stc
push
scas
or
push
lret
ret
lret
or
sbb
mov
inc
outsb
sub
mov
frstor
call
cmpsl
or
push
jge
bound
sub
and
sub
mov
mov
ja
inc
adc
inc
mov
adc
es
in
sub
push
in
pop
hlt
ds
shl
mov
inc
iret
push
xchg
in
mov
adc
rorb
inc
lds
inc
mov
mov
adc
push
sub
push
je
aas
and
sahf
sub
xchg
mov
push
je
xor
inc
xor
filds
mov
inc
cmp
or
jae
inc
push
jmp
out
adc
ret
call
cmpsb
inc
add
adcb
test
lcall
adc
movsl
fdivp
loopne
inc
ret
pop
mov
mov
mov
mov
test
aaa
leave
cmp
jns
push
or
mov
dec
jns
mov
sub
pop
add
mov
lret
lods
ds
js
roll
fdivl
xchg
jns
xorb
mov
dec
pushf
rorb
outsb
cwtl
jns
sbb
mov
xchg
mov
mov
sbb
jno
jns
sbb
xchg
js
into
daa
jns
and
dec
sbb
and
inc
andb
mov
add
inc
ret
xchg
jns
ljmp
icebp
sbb
and
jns
sub
or
sub
pop
aam
daa
popf
rorb
fbstp
aad
fs
daa
xchg
fidivrs
mov
daa
fcmovu
movsl
enter
jmp
outsb
or
dec
cmpsl
daa
mov
fs
mov
test
test
into
sbbb
addb
dec
mov
dec
gs
or
adc
xchg
inc
cmp
test
mov
xor
clc
or
and
mov
sbb
pop
mov
aam
mov
daa
pop
lcall
ja
pop
aam
daa
sbb
daa
les
add
inc
xchg
daa
mov
test
or
fmuls
mov
mov
xchg
cmp
fiadds
ja
daa
cwtl
dec
mov
mov
push
in
xchg
daa
loopne
adc
and
inc
xor
adc
lret
int
xchg
nop
fisttpl
aaa
and
xchg
stos
mov
mov
mov
mov
inc
mov
xor
dec
call
test
lret
adc
sbb
mov
test
inc
daa
mov
rcrl
das
push
nop
jne
and
aaa
rolb
or
dec
movsb
sbb
cmp
jnp
dec
sti
add
and
mov
mov
mov
and
je
xor
sbb
outsb
xorb
inc
cmp
pop
mov
mov
cs
into
clc
pusha
push
add
mov
mov
inc
jb
enter
add
push
test
inc
mov
or
xorb
inc
mov
movsl
data16
fiaddl
pop
adc
test
xorl
mov
pop
jl
hlt
sahf
mov
adc
sbb
xor
pushf
adc
add
dec
aam
negl
mov
loope
pusha
xorb
shlb
cmp
js
mov
stos
hlt
mov
and
and
cltd
sbb
xor
and
and
cmp
inc
cmp
and
and
sbb
pop
cmp
mov
xorb
and
and
and
dec
nop
mov
jo
mov
cmp
outsl
adc
enter
inc
pop
lds
mov
ret
add
jbe
call
jne
lea
push
flds
cmp
movsb
aad
std
jo
movsb
repz
inc
aam
jns
fstpl
sbb
test
aam
scas
sub
or
jb
aad
aad
jno
pushf
mov
mov
jmp
cmp
imul
pop
scas
or
inc
push
ja
in
xor
pop
movsb
pop
nop
arpl
pop
xor
pop
call
out
outsb
je
push
and
sub
aad
inc
lahf
nop
adc
enter
sub
inc
aad
cld
xchg
push
repnz
xlat
add
cmp
dec
lahf
or
push
sbb
cmpsb
xchg
sarb
mov
lcall
and
or
icebp
sub
ret
xor
sarb
repz
and
mov
sub
hlt
or
and
sub
fwait
in
sbb
fisttpll
adc
lods
mov
shll
xorb
push
nop
mov
adc
mov
mov
lcall
and
push
mov
xchg
sarb
dec
lock
pop
add
and
push
lret
push
pop
pop
adc
pushf
cmpsb
cmc
mov
mov
mov
xchg
dec
and
add
fistpl
psrad
pop
mov
push
rolb
pusha
ds
xchg
pop
jp
pop
hlt
push
dec
loope
and
cmp
lahf
pop
mov
jnp
das
rclb
jnp
sbb
xor
out
sbb
loopne
cmp
xchg
fsubr
jp
sbb
xchg
push
or
inc
jb
stos
xchg
mov
xchg
xchg
inc
cs
jmp
fwait
roll
fmuls
mov
mov
rolb
sar
loopne
clc
adc
mov
adc
jecxz
jmp
stc
ret
push
push
mov
mov
cmp
push
pop
lea
mov
fcoml
loop
icebp
push
aas
stc
xorl
lea
push
stc
stc
data16
xor
in
sbb
push
call
xchg
call
mov
adc
sbb
inc
fstp
setb
das
sbb
adc
fisttpll
in
pushf
xlat
mov
cmpsl
sbb
daa
stc
sub
xor
jns
sub
loop
mov
add
fmull
es
aas
popa
adc
cmpl
mov
jecxz
push
mov
aaa
sbb
sbb
stc
sub
gs
add
fildl
das
pop
jae
enter
adcb
inc
push
jne
sbb
lock
xor
or
and
enter
iret
aam
pop
leave
jns
adc
inc
adc
call
pushf
push
ds
mov
xor
test
sbb
jno
add
pop
sub
inc
bnd
adc
push
ret
call
and
jno
loop
and
or
fdiv
je
xchg
mov
cmp
push
movsl
sti
sbb
ret
xchg
js
jl
xorb
test
sub
shll
addb
mov
shrl
inc
mov
mov
rcr
fst
xor
jl
push
scas
je
jl
mov
mov
shll
dec
push
shrl
cli
mov
ret
adc
shrl
add
and
imul
stc
xor
or
sbb
mov
les
xchg
mov
add
inc
mov
or
xchg
nop
mov
or
hlt
les
push
pop
pusha
xor
mov
inc
cltd
cmp
xorb
pop
pusha
pushf
push
out
inc
xchg
push
fadd
xor
xor
sbb
addl
cmp
repz
inc
sub
mov
jae
pusha
fsubl
xor
pop
or
xor
xchg
or
out
add
xor
adc
adc
or
add
adc
or
add
adc
adc
cmp
in
jp
fldcw
aam
dec
push
xchg
in
roll
fnstenv
in
pop
rcrl
jns
fcomp
rorb
sbb
lods
adc
mov
stos
mov
sub
push
push
adc
sub
adc
push
inc
or
movsl
add
xchg
loopne
movsl
adc
mov
rclb
call
dec
movlps
inc
mov
roll
das
mov
test
lcall
xchg
xchg
int3
xor
outsb
adc
imul
or
push
rclb
push
dec
dec
jns
imul
flds
sub
rorb
add
aam
jp
or
push
call
sub
mov
je
adc
sub
jne
pop
rcl
push
sub
push
pop
repnz
adc
adc
ficompl
in
or
push
sbb
or
cmp
push
xor
faddl
dec
in
add
push
lret
pop
adc
cmpsb
and
ss
push
cmpsb
mov
cmpsl
or
aaa
and
dec
in
push
daa
jp
dec
cmp
sub
movsb
imul
jbe
push
dec
sarb
push
mov
xorl
das
lcall
ficomps
pop
insb
push
add
dec
dec
out
mov
lds
shrl
cmp
add
outsl
pop
mov
cld
dec
vpunpcklqdq
lds
and
sub
lds
outsb
push
inc
mov
pop
popf
addb
mov
inc
loopne
mov
aam
cmp
je
pop
addr16
or
sbbl
aaa
test
fdiv
pop
jmp
jne
call
push
push
aaa
pop
repz
cs
and
or
rorb
cli
jne
mov
sub
xor
cli
mov
pop
or
ret
pop
xchg
in
push
int3
pop
mov
aam
and
pop
push
xchg
sub
mov
sbb
es
jns
pop
pop
cmp
mov
inc
cmp
xor
mov
mov
jo
pop
mov
mov
or
rcrb
test
lods
sub
adc
mov
pop
shlb
pop
mov
jns
adc
cs
lock
push
jmp
push
pop
hlt
aam
mov
sbbl
adc
frstor
enter
push
push
dec
jecxz
loopne
in
or
dec
in
inc
add
loope
pop
test
jle
sbb
mov
iret
rclb
mov
xchg
lea
and
xchg
pop
pop
and
pop
cs
dec
adc
fcoms
pop
call
push
sbb
in
loopne
xchg
add
lea
leave
and
push
mov
pop
add
dec
pop
xchg
pop
pop
orb
mov
xchg
mov
push
mov
xchg
mov
xor
xchg
mov
adc
xchg
mov
lock
call
mov
repnz
mov
repnz
mov
mov
mov
push
pop
cmp
inc
pop
mov
sbbl
ds
push
jb
mov
and
cmp
pop
mov
nop
sbbl
mov
enter
lds
in
pop
cmp
mov
cmpb
enter
mov
sbb
and
ds
pop
jb
sbbl
pop
cmp
inc
stc
mov
sbbl
fdivrs
jb
mov
and
cmp
mov
mov
cmpb
pop
jb
mov
in
pop
cmp
mov
cmp
test
mov
or
idivl
jb
mov
clc
shll
cld
adc
or
sarl
and
scas
mov
cld
xchg
mov
add
int3
dec
ja
adc
gs
dec
xor
or
or
xor
daa
inc
and
das
xor
mov
sbb
dec
sub
cmp
stc
mov
out
push
xor
xor
dec
cli
cmp
dec
jae
ret
mov
dec
sub
add
add
adc
mov
inc
into
aad
jo
and
push
dec
push
rcll
and
mov
test
xor
sub
sub
and
repnz
ljmp
sub
data16
add
sub
push
mov
hlt
imul
dec
push
leave
sti
testl
arpl
pop
scas
aas
inc
daa
inc
fldl
sub
shrb
nop
inc
int3
cmpb
inc
lea
or
mov
add
xchg
inc
imul
imul
mulb
cmp
data16
ss
and
addb
into
dec
movsl
and
mov
or
dec
jmp
and
jo
sbb
addr16
xchg
and
inc
mov
dec
xor
fs
js
mov
dec
mov
fs
test
movsl
add
ljmp
push
dec
and
jb
dec
aam
dec
fbld
dec
leave
shlb
sbb
je
dec
mov
dec
dec
cmpsb
sub
push
xchg
jle
leave
pop
xchg
outsb
pop
xchg
out
cmp
and
loopne
inc
dec
xor
enter
or
inc
test
inc
xchg
decb
inc
mov
jmp
pop
addr16
and
and
inc
cs
or
dec
mov
dec
and
scas
xor
mov
xor
shlb
xchg
add
addl
sub
andb
shrl
dec
inc
xchg
adc
lret
fiaddl
out
mov
int3
xchg
test
orb
fs
mov
sub
cmp
in
enter
cmp
lock
pop
sbb
into
xchg
dec
nop
and
jbe
aam
call
and
add
fs
pop
fs
stos
push
cmpl
dec
sub
jl
je
dec
cmp
fs
add
push
dec
pop
hlt
push
xchg
nop
dec
xor
lock
or
ss
int3
fdiv
loopne
pusha
xlat
mov
cld
sub
ds
cld
sub
cmpsl
dec
xchg
cmp
fs
mov
jle
xchg
push
dec
and
fs
shrb
xchg
xchg
fidivs
dec
dec
sbb
inc
sbb
fs
dec
cmp
fldcw
loope
sbb
xchg
add
inc
xchg
sbb
lods
adc
bound
sbb
enter
xlat
mov
clc
inc
inc
call
ja
dec
dec
sbb
rorb
dec
pop
lods
nop
movsl
ret
jno
and
cld
dec
dec
aaa
mov
xchg
in
cmp
dec
cmp
jecxz
nop
movsl
dec
in
fs
jmp
cmp
dec
add
jmp
xchg
add
cmp
cmp
insl
mov
popa
nop
test
dec
pop
sbb
movsl
xchg
gs
cmp
jns
std
dec
jle
sub
mov
sbb
or
dec
popl
scas
push
pop
dec
sub
push
cmp
sbb
jbe
push
fs
pop
mov
lock
xchg
sahf
jg
xchg
xor
andl
sbb
mov
dec
add
cmc
cmp
out
xor
rorb
xchg
dec
and
sbb
jne
dec
cmc
or
dec
shrb
pop
jns
and
dec
sbb
dec
push
xor
addb
inc
test
ljmp
cltd
loopne
and
dec
xchg
push
rorl
je
stos
inc
dec
repnz
rcrb
and
rcrb
xchg
dec
jb
std
mov
sub
fidivs
adcb
aad
out
inc
dec
jne
and
jne
rorb
sahf
je
nop
movsl
dec
nop
mov
pop
int
dec
or
and
dec
jne
xchg
add
dec
popf
sahf
callw
and
test
pop
and
loopne
and
dec
mov
inc
add
dec
lahf
mov
dec
pop
ret
inc
xchg
dec
stc
adc
mov
xor
je
mov
sbb
xchg
repnz
mov
inc
xchg
outsb
test
jge
dec
add
dec
fimuls
pop
jmp
dec
addr16
mov
loope
in
adc
clc
jb
or
out
lds
dec
xlat
lods
dec
inc
xchg
adc
shl
sub
push
mov
data16
dec
xchg
and
dec
dec
cmp
je
xchg
out
inc
test
rolb
and
sahf
orl
int
into
dec
jb
cmp
and
xchg
out
push
dec
mov
add
test
jmp
or
mov
dec
and
inc
mov
and
xor
orb
xchg
inc
dec
mov
psubusw
jmp
dec
fwait
enter
call
movsb
mov
dec
shlb
pop
outsb
mov
lcall
cmp
push
sahf
data16
cwtl
adc
repnz
lods
popf
in
mov
xor
clc
pop
add
andb
sub
cltd
push
pusha
sub
jp
and
add
movl
sbb
movb
push
stc
mov
xor
shrb
js
mov
cmp
adc
aas
sbb
cmp
repz
pusha
jo
aam
jns
iret
in
add
adc
push
sahf
out
sahf
bound
mov
mov
test
push
xor
jb
repz
test
sahf
cmpsl
stc
cmp
or
push
sub
jns
out
dec
pop
data16
out
sahf
out
scas
loopne
iret
repz
push
stos
and
push
pusha
cmp
repz
jbe
xchg
movsb
xchg
nop
mov
dec
out
repz
repnz
lea
adc
addl
int
xor
andb
out
test
push
fmul
out
int
sbb
aad
outsb
cmp
jl
int
cmp
mov
test
call
push
movb
adc
sbb
add
mov
repz
clc
push
mov
add
repz
test
adc
adc
cmp
jmp
push
adc
xchg
sbb
sbb
cmpsl
stc
call
or
push
lcall
push
pop
sahf
mov
xor
cmpsl
xor
push
and
js
cmp
repz
sbb
add
hlt
call
inc
mov
inc
popa
push
sbb
and
mov
or
jb
pop
adc
aas
out
lea
push
xchg
or
xor
out
sahf
sub
add
xchg
hlt
cmp
repz
aam
repz
repz
mov
mov
movsb
mov
repz
nop
mov
repz
iret
repz
insb
push
cmp
repz
push
dec
dec
inc
repz
repz
cmp
xor
iret
repz
sub
sbb
or
sahf
out
lcall
jmp
out
fs
and
inc
popl
iret
repz
shlb
iret
repz
xor
clc
mov
out
call
repz
out
or
enter
ds
js
xor
rclb
jle
mov
mov
test
pop
add
test
mov
dec
test
pop
add
or
testl
push
inc
push
push
add
xchg
mov
xor
sub
push
xor
dec
enter
ja
push
in
shlb
js
inc
sbb
push
or
push
xchg
add
shll
and
aas
xchg
add
push
daa
and
mov
mov
inc
add
and
mov
insl
add
das
xor
inc
push
pop
pop
adc
jl
xchg
ficompl
mov
xor
test
or
push
mov
enter
and
das
fs
dec
jb
shlb
fsubrs
inc
pop
xchg
sbb
out
dec
xor
cmp
cmp
pop
pop
inc
fisttps
dec
loope
inc
out
aas
sbb
dec
adc
sbb
jg
shll
dec
pop
je
aas
inc
es
cmp
ret
repnz
pop
jo
dec
sbb
add
mov
dec
fstpl
dec
sar
mov
jne
aas
adc
pushw
pop
or
unpcklps
push
lods
lret
xchg
cmp
jl
pop
int3
das
les
xchg
nop
imul
dec
push
fildll
push
mov
push
insl
sbb
lock
aaa
add
aam
mov
adc
in
outsl
jbe
pop
mov
sti
fiadds
iret
push
sbb
or
jbe,pn
ud2
xor
inc
mov
ds
sub
xchg
movsl
add
repz
mov
sub
add
mov
mov
jno
jle
xlat
mov
adcb
dec
scas
cld
andb
pop
push
leave
sbb
sbb
pop
inc
aas
sarl
jne
xor
sbb
imul
mov
and
cltd
insl
and
sub
daa
sbb
push
inc
cmp
inc
sub
adc
jecxz
rorb
or
inc
and
rcrb
ror
push
sub
sub
pop
mov
inc
outsl
or
push
sub
xchg
rcrl
xor
dec
xor
adc
xor
xor
dec
fnsave
inc
push
fcomps
fnsave
inc
inc
arpl
add
adc
arpl
inc
arpl
inc
arpl
inc
cmpsl
push
adc
adc
lea
arpl
inc
xchg
and
add
shll
add
arpl
packsswb
inc
arpl
xor
push
xor
test
lea
arpl
rorl
incl
dec
xchg
shrb
faddp
fwait
cwtl
mov
mov
add
jbe
aad
stos
mov
subl
mov
and
lahf
cwtl
call
incb
xor
xchg
movsb
xchg
idivb
repz
pushf
cwtl
xchg
nop
mov
cmp
repz
pop
sahf
out
ficoms
inc
inc
cmp
jns
out
xor
sub
and
jns
out
sbb
adc
mov
hlt
xchg
in
push
in
fcompl
enter
test
pushf
out
pushf
mov
out
or
push
insb
push
fs
jns
repnz
push
dec
mov
push
and
sahf
out
out
add
in
xchg
push
enter
sahf
out
mov
mov
sahf
out
cmpb
push
cmp
cmp
push
adc
dec
repz
lock
loopne
mov
mov
xchg
insb
pop
mov
mov
adc
pop
push
sub
push
dec
lock
in
lock
xor
xchg
push
test
mov
das
add
mov
imul
mov
or
mov
or
xchg
test
pop
call
inc
mov
jg
in
pop
enter
or
lcall
cs
popa
popa
xor
daa
push
ret
ret
mov
aas
iret
sub
fs
add
add
verr
loopne
xor
mov
mov
call
sub
iret
xor
xor
sahf
xor
xor
xor
xor
xor
aaa
fbstp
and
clc
dec
sbb
cmp
cmp
cmp
notb
cmp
bound
push
xor
mov
decl
sahf
fdivrs
bound
cmp
xchg
mov
cmp
mov
and
pop
lcall
jecxz
data16
aas
fs
imul
aas
jecxz
call
sub
xchg
mov
and
sub
inc
xor
mov
sub
xor
push
shl
loope
sbb
idiv
push
mov
xor
and
daa
xor
cmp
inc
xor
push
xor
imul
xor
icebp
push
ret
clc
lea
xchg
xor
xor
xor
and
out
sbbb
xor
or
jg
xor
adc
sbb
sbb
mov
xor
xor
xor
xorb
xor
push
xor
xor
ss
xor
xor
xor
xor
xor
ljmp
mov
mov
mov
xor
xor
xor
xor
xor
and
sub
mov
mov
xorl
out
push
mov
sbb
aaa
cmp
insb
cmp
xchg
and
adc
lock
sbb
sbb
and
and
sub
xor
jp
idiv
xchg
repnz
cmp
inc
pop
mov
cmp
sbb
cmp
or
outsl
add
dec
cmp
cmp
inc
idivb
cmp
clc
mov
cmp
add
pop
cmp
ret
jbe
cmp
call
mov
cmp
ds
ds
ds
cmp
dec
inc
push
ret
aas
mov
mov
mov
aas
repnz
and
inc
xor
outsb
js
mov
xor
xor
or
xchg
xor
xor
sbb
mov
dec
xor
aam
fimull
xor
popf
xor
dec
xor
cmpsl
repz
xchg
xchg
outsl
test
lret
push
add
ss
pop
aaa
mov
aaa
incl
mov
outsb
pop
xchg
sub
cmp
jg
ret
cmp
js
jle
xchg
ret
push
mov
mov
ret
mov
jl
in
adc
xor
clc
pop
ss
cmp
imul
sbb
xchg
jb
cmp
cmp
fs
pop
ss
xor
jnp
adc
ljmp
cmp
cmp
adc
cmp
enter
es
in
mov
cmp
cmp
ljmp
adc
pushl
xchg
jp
insb
cmp
cmp
cmp
cmp
cmp
mov
fbld
xchg
and
cmp
push
ds
ds
clc
inc
loopne
xor
aas
and
dec
aas
push
aas
or
ss
push
bound
outsb
xor
sbb
popf
fidivl
test
clc
xor
fists
js
daa
loop
jg
mov
inc
sbb
in
cmc
xor
xor
sarb
scas
xor
inc
xor
insl
xor
test
arpl
xor
cli
xor
adc
cmp
loope
xor
aaa
jnp
inc
sbb
aaa
add
or
cmp
xchg
mov
inc
or
push
cmp
xchg
cmp
sbb
sub
cmpsl
sahf
inc
cmp
mov
mov
call
cmp
outsl
ss
sub
mov
cmp
or
cmp
cmp
cmp
cmp
cmp
mov
push
addr16
cmpb
cld
sbb
mov
je
clc
fwait
sbbb
sub
pushf
sbb
inc
icebp
jmp
pusha
outsl
or
js
lock
xor
fnsave
out
test
loop
pop
push
cmpsb
aaa
sub
xor
add
xor
push
pushl
mov
out
push
adc
sbb
das
ss
mov
mov
test
ss
aaa
pop
dec
pop
cmp
mov
mov
lret
cmp
cmp
cmp
inc
xchg
mov
mov
mov
cmp
jg
cmpsb
cmp
cmp
cmp
test
lahf
cmp
jp
aas
mov
scas
pusha
add
ljmp
lahf
sbb
sub
cmp
xor
test
xchg
dec
pop
sub
mov
xor
sub
and
xor
pop
xchg
icebp
fwait
mov
inc
ss
ss
aaa
gs
mov
das
fcmovbe
cmp
cmp
cmp
cmp
scas
jbe
adc
sahf
jo
mov
xor
mov
adc
outsb
and
js
xchg
into
sub
cmp
jb
gs
jnp,pn
mov
int
push
clc
lcall
pusha
or
xor
lock
adc
and
lock
je
jl
sbbb
xor
cmpsl
xchg
or
mov
call
mov
movsb
jle
fnsave
scas
scas
lret
aam
in
mov
pop
hlt
push
fs
shlb
cmp
int3
out
add
scas
push
xchg
jo
js
jl
enter
mov
or
mov
fcmovb
xor
int3
xor
or
out
ljmp
call
shrl
test
xor
xor
adc
stos
sbb
dec
cmp
filds
inc
xor
push
xor
xor
mov
push
ret
orb
jl
nop
rdmsr
push
std
xor
movsb
xor
mov
mov
ret
sarb
fnsave
fsubs
outsb
sbb
xor
or
dec
xor
sahf
add
jle
jp
push
push
xor
push
mov
mov
int3
xor
lock
ret
cmp
dec
add
lret
fmull
mul
pop
daa
cwtl
out
fsubrs
mov
mov
xor
xor
xchg
or
xor
xor
xor
jnp
mov
mov
add
xchg
pop
xor
pusha
xorb
movsb
rol
fs
shlb
loopne
sbb
stos
sbb
cs
or
mov
out
xor
dec
xor
data16
xchg
icebp
add
sub
xor
jb
stos
in
psllq
xor
cld
cmp
inc
orl
push
xchg
dec
xchg
push
lcall
cli
push
jp
xor
xor
xor
xor
xor
xor
xchg
adc
pop
add
xor
addr16
jo
and
test
xchg
lods
and
jg
mov
xchg
xor
add
pop
jo
nop
ljmp
push
xchg
cli
mov
fdivr
add
inc
dec
or
movsb
inc
cmp
rolb
jo
add
add
add
add
or
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
in
fidivrl
movhps
push
adc
adc
adc
add
sub
outsb
fisubl
or
adc
pop
adc
fwait
std
or
inc
add
or
xchg
add
add
adc
jp
dec
add
dec
xor
add
imul
test
add
push
adc
call
pop
and
xor
inc
mov
adc
xor
cmpb
mov
hlt
jne
mov
sub
inc
aaa
adc
inc
pop
sub
icebp
movsb
xor
shl
sub
adc
test
ret
inc
or
xor
lahf
xchg
xor
into
add
adc
mov
ja
adc
add
adc
pop
popa
jno
and
adc
mov
or
mov
lock
loope
icebp
mov
or
push
mov
xorb
scas
inc
addb
js
das
mov
or
or
add
lcall
inc
sbb
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
add
mov
movsl
jecxz
cli
pop
mov
pushl
push
stc
or
xchg
jg
or
insb
sub
addr16
out
or
call
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
mov
incl
or
xor
lcall
mov
push
pop
mov
fistpl
mov
popl
movb
xchg
sbb
scas
adc
mov
pushl
sub
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
outsl
lcall
cmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
inc
or
push
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
jmp
rorl
mov
int
arpl
push
out
or
sub
push
sahf
pop
clc
sti
jg
jno
lock
jg
das
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
sbb
pusha
outsl
xchg
add
mov
or
push
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
sti
in
sbb
stc
loope
mov
sar
andl
aas
icebp
testb
mov
aad
pop
xor
jns
mov
in
repnz
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
ljmp
push
clc
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
dec
sbb
sbb
sbbl
into
andl
aas
loopne
cli
adc
xchg
fnstsw
in
add
inc
adc
loope
fisttpll
out
mov
std
cli
push
push
push
idivl
cmp
mov
incb
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
sub
mov
cmpsb
orb
mov
js
jmp
xchg
pop
clc
pop
hlt
lret
ljmp
dec
movsb
add
lea
jg
gs
std
xorb
std
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
loopne
fucom
out
sarb
sbbl
jno
or
sarb
mov
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
sbb
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
jg
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
lcall
std
aad
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
pushl
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
pop
lock
stos
dec
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
mov
aam
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
decl
mov
adc
adc
push
jo
pusha
imul
add
mov
jg
push
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
add
out
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
adc
adc
pop
cld
addl
adc
and
clc
repnz
cmp
fmull
enter
jecxz
scas
inc
stc
sub
in
pop
mov
sub
mov
dec
incb
fidivl
std
loop
aas
mov
or
cld
inc
or
mov
cmpsb
push
pop
jg
add
jg
mov
pop
mov
test
mov
mov
iret
push
mov
push
push
sbb
stos
icebp
pop
incb
jno
mov
jg
adc
push
inc
jecxz
sbb
sarl
adc
loopne
mov
clc
xorl
paddsw
push
or
add
mov
aas
fsubrl
lock
or
sbbb
mov
add
push
sbb
jne
push
and
mov
adc
loope
xchg
lahf
or
push
rcrl
rolb
pop
bound
aas
fistpl
adc
call
jno
pop
jg
fists
scas
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
call
adc
or
imul
xor
dec
xor
fsubr
fistps
lds
ss
jg
jg
stos
pop
add
ds
cmp
out
fidivrl
xor
lahf
les
sbb
sbb
clc
incl
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
sub
incb
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
cld
jg
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
aad
loop
lahf
mov
or
out
lcall
outsl
ljmp
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
jg
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
jg
sti
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
in
xor
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
clc
jmp
and
xchg
fidivrs
clc
clc
fistps
insb
test
aas
repz
sbb
lock
in
jmp
ret
out
sbb
aaa
clc
push
std
mov
je
icebp
or
mov
lcall
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
std
insl
and
hlt
out
rolb
pop
or
or
outsl
pop
bound
dec
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
mov
xchg
imul
pop
in
cmp
cld
int
mov
fidivs
clc
adc
jmp
pop
inc
clc
jg
dec
mov
xlat
inc
incl
out
clc
aas
aas
mov
jg
mov
sub
addr16
in
idivb
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
icebp
scas
cli
inc
nop
cmp
das
incb
lock
pop
pop
div
cld
testl
sbb
scas
or
loope
jae
jmp
adc
je
jge
fbstp
out
incl
jg
stc
add
out
icebp
mov
loope
mov
cmpsl
jb
das
xchg
popf
sti
mov
fbstp
enter
push
pop
aam
jge
out
cmp
or
test
call
xor
decb
adc
outsl
decb
dec
adc
call
movsb
out
cltd
add
sbb
mov
cmp
int
add
push
pop
aaa
std
sbb
inc
sbb
mov
mov
aas
icebp
ret
rol
enter
sbb
aaa
inc
adc
adc
mov
sub
mov
pop
clc
loope
add
and
dec
add
sub
fidivl
xlat
rcrl
mov
xchg
fldenv
iret
fdivrl
xchg
lcall
cmp
mov
adc
jo
sarl
pop
rclb
cld
jno
ret
fs
add
inc
sbb
call
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
ret
in
sbb
xchg
imul
add
scas
mov
std
mov
daa
jmp
faddl
push
adc
mov
int
popa
lds
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
pop
mov
add
fsts
xor
cmpb
nop
dec
sti
push
cs
pop
inc
add
or
insl
inc
mov
mov
iret
ljmp
add
dec
jp
push
xchg
sub
int3
or
xor
icebp
push
dec
out
cmp
loop
mov
xor
loopne
cltd
inc
lahf
jp
fistpl
mov
dec
std
ljmp
pop
dec
fnstcw
jne
lcall
int3
xorl
pop
addr16
xlat
mov
mov
incl
subb
add
sub
xor
jae
push
pop
stos
decl
test
mov
or
mov
inc
xor
cmc
sbb
fcomip
daa
cli
adc
popa
xor
mov
pushl
loopne
and
cmpsl
outsb
out
sub
mov
or
pop
je
or
push
xor
mov
dec
addr16
sar
lret
test
lock
fiaddl
ljmp
outsb
jno
push
sub
xchg
cmp
jne
xor
lods
test
repz
jb,pt
xchg
adc
jmp
das
fists
cs
js
sub
jae
or
repnz
mov
or
scas
sub
cs
pushl
lods
inc
and
outsl
cmpsb
pop
jl
in
ret
test
inc
or
lahf
inc
push
and
jmp
int3
mov
add
cltd
fcomps
push
jbe
mov
lahf
cmc
inc
sbb
dec
push
sbb
add
adc
mov
sbb
js
inc
adc
cmp
ljmp
fidivs
orb
xor
mov
inc
jl
jnp
lret
add
or
dec
lcall
cmpl
push
outsb
push
out
rclb
mov
push
fwait
and
cltd
dec
mov
adc
mov
es
pusha
stos
leave
dec
cmp
andb
fildll
test
lcall
mov
inc
aam
clc
jmp
cmp
cmp
loope
and
mov
cmp
fimull
mov
mov
mov
mov
adc
cmp
ficoms
popa
outsb
jmp
jmp
mov
or
inc
mov
ret
lcall
and
mov
push
decl
pop
test
sbb
push
and
or
jne
xchg
jns
jp
sbb
adc
call
subl
cmp
mov
fisttps
mov
lret
dec
insb
and
sbb
inc
incl
jnp
movsb
push
mov
mov
dec
imul
icebp
fdivl
mov
push
xchg
mov
out
ljmp
mov
shlb
pop
sub
stos
push
dec
addb
pop
inc
jo
gs
in
mov
dec
add
push
decl
aam
mov
mov
mov
sub
and
add
repnz
call
std
sahf
jbe
std
xor
clc
add
mov
sti
mov
mov
xchg
aaa
lahf
mov
out
cmp
flds
aas
incb
dec
xchg
dec
and
movsl
xlat
in
inc
ficoml
std
in
lea
popl
insl
cmp
pushl
pop
sarb
outsb
mov
push
jl
cwtl
inc
mov
clc
imul
ljmp
out
hlt
andb
notb
cmp
xchg
cmpsb
in
add
sub
or
push
pop
pushl
push
sbb
pop
pop
mov
add
mov
cmp
push
pop
lods
stos
leave
fadds
jmp
push
sti
gs
push
lods
add
bound
js
push
mov
decl
cld
jmp
rcl
xchg
add
aad
loopne
jmp
aam
lods
js
pop
subb
sahf
xchg
and
dec
or
leave
subl
push
mov
pusha
jge
sub
inc
imul
xor
aaa
sbb
lods
dec
jbe
cwtl
in
mov
movsb
ja
mov
sbb
outsb
xchg
pushf
dec
dec
jmp
adc
jmp
mov
in
dec
cmc
or
daa
mov
mov
ja
imul
adc
fildl
mov
dec
xor
repz
outsb
js
cmp
mov
rcr
cld
mov
insb
push
pop
lods
outsl
ljmp
pop
loope
dec
jl
mov
adc
fs
or
les
pop
ds
jg
cmp
push
fistl
mov
ljmp
clc
decl
insl
in
popa
scas
xor
outsl
mov
mov
lods
cmp
inc
rcrb
gs
incl
mov
xor
fcomi
cmp
cli
mov
cmc
in
adc
pushl
xchg
mov
adc
dec
pop
cmpsl
in
jnp
pop
inc
cmp
push
and
jmp
cmp
cmp
gs
sbb
push
insb
fisttps
lahf
popa
push
fwait
and
sub
ljmp
push
xor
xchg
or
push
mov
xor
xchg
repnz
adc
ds
mov
in
cmp
lds
jmp
out
aam
loop
fstl
std
lods
incl
leave
ror
rorb
in
add
incl
iret
out
jp
sbb
push
xchg
shlb
add
mov
adc
mov
in
sub
xchg
mov
cmp
insb
and
inc
fdivr
clc
fidivrs
sub
dec
ja
dec
push
xchg
ds
dec
test
test
iret
xor
lcall
push
push
sub
mov
sub
mov
adc
fidivl
loope
mov
hlt
leave
add
or
inc
sti
add
stc
add
outsb
mov
decl
sbb
xor
cmp
sbb
loope
daa
fdivl
popf
jae
dec
ljmp
incl
jbe
pop
add
and
and
out
jno
call
loopne
push
outsl
lcall
arpl
testl
decl
lock
movsb
enter
cmpsb
out
out
fidivrs
or
or
add
add
pop
sbb
leave
daa
cli
jnp
mov
and
and
add
adc
les
mov
jmp
xchg
out
mov
outsl
data16
sti
bound
pushf
mov
ljmp
bound
iret
jb
mov
mov
jge
mov
push
dec
sbb
decl
mov
ljmp
and
sub
test
shll
jmp
cmc
cmpsb
pop
add
sub
cli
clc
or
test
push
stos
push
sti
popa
int
decl
sub
iret
cmpsb
out
ja
cmp
mov
mov
scas
js
rorb
lock
mov
hlt
insb
and
repz
test
inc
sti
mov
or
xor
lock
movsl
xchg
ret
movsl
in
popa
andb
pop
lret
popa
pop
fsubrs
pop
pop
fidivrs
call
imul
pop
ret
aam
or
mov
adc
mov
mov
clc
decl
popf
inc
push
pop
pushf
js
or
sub
mov
push
pop
push
mov
dec
dec
sti
and
cld
ljmp
nop
inc
pop
ljmp
dec
mov
jo
adc
cli
pop
lcall
outsl
add
jmp
sbb
push
lea
mov
mov
aaa
jge
jg
adc
lock
pushf
pop
mov
adc
xchg
sbbb
pushl
clc
mov
addl
ds
xor
negl
aaa
stos
jmp
nop
pop
in
add
in
xor
jecxz
push
or
and
out
aam
and
fcomps
inc
repnz
xor
lret
push
xor
popa
not
in
ficomps
int3
call
lcall
iret
or
push
fs
cmp
xor
and
repnz
fdivr
fldenv
pop
mov
movhlps
inc
mov
or
push
jb
xor
aas
lods
movsb
iret
movsb
mov
ljmp
je
cmp
bound
pushl
jnp
ja
mov
hlt
xchg
xor
rcrl
pop
cwtl
pusha
rolb
or
cmp
mov
jge
mov
call
pop
xchg
mov
adc
es
sbb
inc
add
inc
call
lcall
fcomp
sbb
jle
ficompl
inc
lea
out
scas
shlb
data16
outsb
ljmp
jle
scas
jmp
xchg
mov
and
push
hlt
xlat
sub
mov
mov
push
pop
dec
adc
ljmp
pop
cmp
into
test
jle
push
inc
jl
cmc
mov
test
lret
cwtl
sub
decl
cltd
pop
lret
mov
pop
jno
mov
fnstsw
push
and
sub
adc
icebp
decl
lds
or
push
out
inc
aam
dec
int
jmp
ljmp
rcr
mov
and
adc
sahf
sub
mov
jecxz
push
pushl
lret
lahf
pusha
js
mov
adc
cld
lcall
fistps
sub
mov
int3
aas
adc
sbb
in
call
add
cmp
adc
add
xchg
enter
jge
mov
sar
incl
insb
aad
js
lds
mov
lock
icebp
clc
imul
arpl
or
jg
sbb
outsb
push
repz
sub
cmp
add
mov
ljmp
sub
push
iret
sub
test
cli
cmp
push
jle
out
adc
fildll
stos
mov
mov
pusha
add
mov
adc
mov
ljmp
aas
loope
add
insb
jae
push
jge
lret
push
leave
lds
sbb
movsl
pop
fisttps
mov
sbb
imul
jecxz
popa
dec
pop
test
nop
test
and
pop
push
sbb
incl
fimuls
fs
cli
mov
mov
popf
ret
mov
lock
lock
in
call
and
outsl
insb
roll
mov
xor
icebp
iret
jne
pop
adc
mov
dec
or
jnp
in
add
sbb
inc
dec
imul
addr16
scas
mov
repnz
and
in
mov
cmp
inc
lcall
bound
pushw
insb
movsl
sahf
aas
repnz
mov
adc
lods
mov
mov
ficoms
and
sub
movsb
mov
and
inc
clc
daa
insl
jge
call
mov
jbe
mov
sub
repnz
arpl
call
sub
mov
decl
mov
cs
dec
jne
stos
inc
and
sub
push
pop
cmp
cmp
fcomip
jmp
incl
inc
pushf
idivb
cwtl
shr
fs
test
aaa
sar
jmp
icebp
xchg
xor
dec
popa
fs
add
shrb
adc
lods
or
loop
jo
and
pushl
or
pop
xor
cmp
outsb
sbb
push
call
mov
rorl
push
pop
ficoml
push
mov
sets
mov
mov
call
and
cmpsb
adc
sti
test
icebp
xchg
in
aam
pop
decb
out
hlt
call
mov
sahf
loop
adc
push
xor
loope
adc
mov
stc
sub
gs
int
ret
push
pusha
rcll
xchg
dec
inc
shl
mov
mov
cmp
shl
call
pop
in
data16
cmp
adc
sbb
sub
in
out
decl
repnz
add
bound
jae
cs
popa
xchg
js
and
movsb
mov
decl
xchg
in
mov
notl
cmp
movsb
je
xor
fstpl
mov
xchg
in
sbbb
sub
push
mov
xchg
ljmp
pop
inc
pop
std
xor
ljmp
adc
xor
inc
std
mov
dec
mov
jg
scas
cli
sar
lcall
mov
sbb
jns
mov
xchg
shlb
add
mov
shrl
aam
xor
fcomip
jmp
dec
insb
mov
gs
or
push
and
push
xor
jg
pop
dec
lcall
orb
pop
add
mov
mov
in
mov
cmp
push
push
arpl
jno
mov
lcall
jge
cmp
or
jns
pop
mov
unpcklps
ret
mov
push
dec
cmpsb
pop
and
decl
test
rolb
inc
int
mov
sahf
sbb
lcall
imul
fcmove
mov
ror
push
inc
enter
jmp
jg
sarb
pop
dec
ljmp
ljmp
add
mov
mov
lods
out
jg
into
dec
test
xchg
iret
push
sub
sub
jae
ljmp
mov
addb
pop
inc
adc
sbb
shlb
dec
outsl
clc
cmp
cmp
jg
gs
lret
shlb
inc
push
stc
push
rolb
mov
popa
mov
out
cld
mov
push
pop
sti
test
mov
pop
mov
bound
pushl
test
sub
ja
mov
pop
add
movsl
jg
enter
xor
call
ret
mov
xor
cs
xchg
filds
xor
and
sub
pop
hlt
decl
jmp
jge
sub
push
test
movsb
mov
cld
dec
pop
sbb
fadd
enter
mov
bound
mov
add
xchg
inc
mov
inc
jg
in
sti
loope
jo
mov
lcall
call
ljmp
cmp
sub
adc
out
mov
xlat
pushl
dec
rcll
lcall
scas
adc
movsl
xchg
mov
imul
dec
mov
pop
cmp
inc
mov
or
in
repnz
pop
lret
outsb
movsw
ljmp
pop
lahf
inc
in
xor
xchg
rorb
cltd
out
addr16
out
pop
xchg
test
stos
dec
push
xor
aas
pop
outsl
mov
dec
repnz
cmp
iret
data16
scas
mov
or
ljmp
fidivrl
jae
insb
sbb
das
jae
in
inc
stc
icebp
fninit
daa
je
sti
jns
xchg
fists
or
aad
mov
push
sub
icebp
mov
add
jae
call
stos
pop
xor
pop
sbb
xor
dec
stos
xlat
in
fs
cmp
repnz
adc
dec
ljmp
mov
lock
push
faddl
dec
push
sahf
ljmp
repz
push
jge
call
je
rclb
and
mov
or
popa
jecxz
ds
cmp
lcall
mov
push
fisubrl
ds
aas
in
or
cli
call
es
pusha
sar
fdiv
mov
ljmp
ret
fs
icebp
lret
rclb
dec
sbb
jle
xchg
sbb
in
ljmp
vmread
lea
lock
mov
xchg
push
mov
adc
ljmp
sarl
mov
pop
jmp
scas
jg
dec
insl
cs
iret
inc
orb
or
gs
cmp
jbe
fdivrp
outsl
cli
pushl
mov
pop
idivl
push
sbb
jmp
loopne
pushf
jno
das
loop
incl
xchg
pop
adc
cmp
les
int
and
shrl
mov
rcr
or
push
repnz
dec
cwtl
stos
cmpsb
cmc
into
add
sarb
add
insb
sbb
or
xchg
and
test
xchg
cmpsl
pushl
push
out
mov
movsl
pop
pop
add
insl
loope
pop
cmpsl
ss
test
pop
or
decl
test
sbb
in
jno
jle
add
xchg
cwtl
outsb
nop
sub
xor
jl
data16
decl
xchg
push
gs
int
cmp
cmp
ljmp
push
cmp
jg
outsb
mov
add
mov
mov
call
add
dec
jbe
xor
dec
and
int
packuswb
arpl
fisubs
add
sub
fsubrl
cld
out
sub
dec
xchg
inc
cmp
or
mov
jp
jmp
out
mov
int
xchg
outsl
movsb
dec
pop
or
sar
mov
mov
push
lcall
push
mov
je
xchg
mov
incl
repnz
inc
pop
sahf
inc
jnp
pop
jp
xchg
adc
xlat
pop
stos
call
mov
ja
ret
mov
decl
popf
xchg
incl
neg
dec
jmp
add
cmp
iret
scas
lret
loop
dec
pop
add
dec
add
adc
sahf
and
or
cli
call
fucomi
lea
movsl
shll
sbbb
inc
push
pop
jae
shll
cmp
lahf
and
jmp
test
mov
lret
xor
mov
push
push
inc
lret
fs
lods
shl
enter
loopne
inc
pop
mov
pop
movsb
add
mov
jnp
addl
enter
call
jnp
mov
pusha
inc
test
je
out
adc
mov
outsb
sbb
pop
jg
dec
decl
pushf
xor
inc
div
arpl
dec
rcll
push
cld
mov
jmp
adc
sub
lcall
mov
dec
jno
bound
xchg
cltd
cmp
jmp
inc
int3
mov
mov
fs
dec
call
sub
xchg
mov
ret
insl
jle
push
inc
stos
gs
fwait
lcall
push
movsl
inc
js
test
jle
imul
mov
js
cld
mov
imul
ja
iret
lret
pusha
sbb
neg
in
jg
lret
cmp
cmp
push
mov
mov
cli
mov
sbb
lods
js
je
or
pushl
push
xchg
fsubrs
addb
test
clc
cmpsb
outsb
dec
pop
fldt
add
imul
ljmp
and
lret
faddl
stos
hlt
mov
and
push
pop
int3
fisttpll
sub
or
aam
sbb
xchg
ss
outsl
fstl
adc
mov
div
inc
std
incl
push
mov
test
mov
out
mov
lea
dec
sti
outsb
sbb
ljmp
xchg
mov
mov
les
or
inc
mov
add
mov
add
jne
subl
inc
jl
lock
call
or
inc
jmp
adc
scas
cmpb
xlat
cmpsb
mov
jo
loopne
push
dec
lods
adc
sub
mov
mov
sub
js
cmpsb
iret
jnp
popf
or
jne
cmpb
loopne
sbb
adc
js
mov
dec
cld
daa
ljmp
stos
inc
sbb
insb
add
insl
dec
pop
or
fsub
lea
xor
mov
lcall
jo
or
push
frndint
and
mov
cmp
loop
jno
mov
decl
adc
sbb
xchg
mov
out
adc
jno
aaa
dec
sbb
ljmp
int
icebp
adc
cltd
hlt
lods
inc
sti
lds
and
xchg
sbb
clc
mov
sub
imul
fwait
xlat
fdivr
ljmp
add
and
xchg
in
icebp
insl
aaa
fsts
cmc
mov
mov
into
lahf
into
mov
pushl
data16
dec
jb
push
ja
pop
pop
loopne
xlat
enter
out
dec
fwait
push
test
out
out
pushl
cmp
dec
cmpsb
xor
sbb
arpl
add
outsl
inc
add
push
mov
sar
or
mov
xchg
inc
adc
mov
jg
sbb
sbb
mov
sbb
mov
jmp
dec
xchg
ljmp
mov
lcall
mov
mov
sub
add
sub
jl
loop
incl
xchg
jnp
xor
jae
daa
xchg
fwait
pop
dec
pusha
stos
xchg
sbb
jmp
fwait
je
sbb
mov
cmp
mov
sarb
inc
inc
icebp
fnstcw
dec
cli
cltd
dec
xchg
cmp
inc
inc
sbb
sbb
push
add
and
mov
pushf
add
adc
lcall
lcall
and
adc
xchg
ret
stos
mov
mov
lcall
inc
dec
or
aaa
ss
mov
xchg
add
xchg
daa
sti
adc
cld
cli
xor
mov
sti
jb
outsl
xor
jp
and
sbb
stos
pop
mov
xchg
repz
cmp
stos
and
in
aad
lret
sbb
ljmp
pop
sti
roll
repz
xchg
push
stc
push
in
cmp
push
cltd
stc
rclb
lcall
inc
pop
ja
inc
mov
enter
push
out
btc
cmp
call
test
icebp
incl
inc
mov
fsubr
pop
insl
jp
push
data16
or
out
ret
cs
das
push
hlt
gs
scas
enter
xchg
cmp
jmp
xor
adc
ljmp
jp
xor
jl
pop
ret
adc
push
gs
jae
cwtl
js
in
jb
jg
std
in
mov
or
xchg
stos
push
push
jge
cmp
or
ljmp
dec
jnp
cli
mov
sbbl
jle
scas
nop
jb
or
pop
xchg
and
jg
out
xor
sbb
leave
sbb
in
mov
mov
push
in
shrl
movsb
xor
fisubs
cmc
dec
sbb
aas
pop
push
lcall
mov
lods
inc
sbb
fldt
call
adc
mov
into
add
mov
stos
icebp
mov
adc
cli
jno
lock
cmp
mov
add
sbb
cmp
or
mov
fildll
fsts
mov
pop
cltd
cmp
xor
jg
nop
or
lcall
insl
outsb
lods
and
out
loop
sub
testl
or
xor
test
ds
nop
addr16
sar
cld
or
in
xor
pop
movsl
aas
lcall
call
add
pop
mov
mov
add
lret
cmc
out
aaa
std
call
inc
iret
cmp
lods
pushf
fcompl
mov
push
adc
sbb
into
jnp
ja
mov
nop
lcall
jmp
adc
fwait
jg
fst
shrb
push
sbb
mov
sub
lods
adc
incl
sub
insb
inc
xor
das
push
iret
push
leave
mov
xchg
incl
dec
in
jnp
loop
push
les
sub
adc
add
lcall
int3
ja
in
popl
lret
add
mov
popa
sub
icebp
push
insl
mov
lods
inc
lret
mov
cmp
lcall
jb
push
lods
lock
decl
and
mov
cmc
push
push
cwtl
mov
xchg
arpl
aaa
repz
mov
jno
jns
ds
adc
adc
mov
push
and
pop
fldl
cmp
jns
outsl
xor
pushl
sub
enter
sbb
pop
inc
ljmp
push
rcr
movsl
fdiv
or
jg
pushl
movsl
es
jno
test
fisubl
rorb
in
mov
decl
cmp
and
or
aam
and
inc
outsl
push
mov
nop
incl
and
add
mov
mov
push
cmp
hlt
inc
pop
ja
loope
or
push
adc
sbb
jbe
ds
call
jmp
cwtl
mov
add
shlb
out
sbb
enter
xchg
pop
mov
ljmp
xor
and
aas
ss
adc
dec
add
xchg
xlat
pusha
jmp
aas
pop
push
inc
push
test
lret
mov
mov
jb
add
outsl
inc
and
xchg
pushl
movsb
out
mov
xchg
test
or
add
nop
pop
or
repz
jmp
hlt
fcos
jmp
mov
push
lahf
jecxz
mov
adc
pop
pop
xchg
jbe
shll
xchg
pop
roll
int3
push
dec
jae
cs
call
jge
lods
or
jecxz
sbb
shll
xlat
rcrb
pop
fcmovb
loopne
mov
mov
movsl
pop
pop
das
out
stc
sahf
fadd
inc
xchg
or
dec
loope
mov
and
pop
stc
push
imul
push
inc
add
es
and
push
in
cmp
sub
cmc
or
call
mov
xchg
cmpsl
pop
sub
pushf
pop
sub
add
pusha
mov
lret
ja
add
push
decl
add
insl
adc
inc
sbb
nop
sub
mov
jne
out
movsb
mov
notl
clc
xchg
or
data16
lods
ja
sbb
in
test
mov
and
cmp
incl
add
faddp
mov
add
mov
insb
push
dec
dec
icebp
push
cld
sbb
lock
ljmp
sarb
xchg
call
call
fcmovnb
and
sub
mov
jbe
cmp
fadd
test
je
nop
ljmp
push
mov
mov
sbb
testb
dec
mov
gs
cmpl
incl
inc
fmul
pop
jg
xor
rcll
popf
adc
mov
or
push
imul
cltd
call
into
dec
pop
or
mov
mov
test
pushl
mov
lret
xchg
lods
inc
push
push
loop
cmp
js
lcall
add
push
add
cs
inc
cwtl
mov
data16
xor
sbb
scas
dec
daa
cmp
jg
mov
leave
leave
lds
dec
mov
fmull
sbb
aas
add
jg
mov
push
std
pop
push
mov
jp
adc
push
frstor
xor
rcrl
ret
arpl
mov
inc
fdiv
out
ds
mov
cmp
pushl
pop
push
ljmp
bound
orb
push
inc
in
jg
mov
pop
fcomip
jmp
and
mov
cmpsl
sbb
cld
fsubrs
pop
sub
inc
mov
ret
call
lock
mov
sub
pop
lods
sbb
cs
xchg
shll
pop
adc
xor
call
sbb
push
outsb
outsl
cmc
jo
add
add
xchg
fwait
mov
jg
mov
mov
bound
es
movaps
add
cs
mov
fistpll
xchg
inc
jb
push
fldl
cmp
mov
xchg
and
jg
rorl
sbb
hlt
push
imul
inc
stc
sti
sahf
jp
dec
sahf
lret
cli
cwtl
nop
cmp
push
adc
lcall
cmpsl
int
jnp
mov
test
inc
jle
push
push
out
jbe
roll
push
mov
popf
or
mov
lret
mov
mov
lcall
in
movntq
mov
mov
andb
es
jns
or
lcall
jge
fidivrl
sub
lock
out
push
shrb
in
sbb
pop
cmp
jl
je
xor
in
jbe
or
into
jg
mov
sti
sbb
shl
mov
repnz
cmp
pop
popa
aas
cs
ja
xchg
sbb
mov
ret
loope
mov
rol
push
inc
add
pop
sar
decl
mov
add
push
pop
insl
inc
lret
pop
add
rcr
cwtl
pop
notb
or
call
or
and
cs
enter
mov
mov
negb
mov
dec
push
sbb
push
and
lret
inc
jmp
push
jp
xor
loope
push
fcoml
in
filds
rorl
pushl
lods
pushf
insb
lock
pop
js
or
xchg
sub
lahf
xor
xchg
scas
xchg
push
pop
inc
call
mov
into
sbb
sub
lret
insl
cli
lcall
lods
sbb
xor
hlt
packsswb
jge
dec
xchg
mov
aaa
mov
es
stc
sbb
aad
ret
fld
adc
sbb
mov
jmp
push
divb
outsb
std
repnz
lods
xchg
jecxz
dec
and
mov
pop
icebp
xor
adc
cltd
decl
lahf
xor
sub
xor
xchg
mov
xchg
std
mov
or
jmp
pop
jmp
shlb
sahf
cmp
out
add
sahf
repnz
jg
aaa
xchg
mov
xchg
cmp
sbb
xor
sahf
xchg
push
sub
lcall
dec
in
inc
int3
lcall
push
shr
inc
jo
push
jle
hlt
add
or
and
xor
jg
or
in
ss
adc
mov
add
mov
push
loopne
bound
pop
cmpsl
clc
ljmp
sbbl
cld
push
xchg
add
popf
inc
sbb
ret
adc
incl
mov
mov
popf
adc
and
cmp
jmp
and
adc
mov
sbb
and
inc
int
inc
fcmovnb
test
pushf
mov
sub
data16
cmpsb
loope
jecxz
cmp
mov
repz
xor
inc
std
dec
fdivrp
dec
adc
mov
xlat
xchg
in
pop
rclb
aaa
xor
push
xchg
mov
outsl
std
xchg
push
jg
es
dec
adc
out
addr16
mov
mov
adc
gs
adc
cld
loope
mov
rcrb
ss
mov
jmp
icebp
push
call
mov
pop
cmpsl
push
imul
sahf
add
pop
loopne
stos
mov
cs
clc
adc
movb
lock
pushl
sbb
idivl
fs
inc
jns
inc
xor
cmp
fidivrl
add
call
pushf
in
and
fisttps
jle
jecxz
cmpsl
inc
test
inc
lods
mov
sti
mov
pop
xor
pop
pusha
mov
add
jne,pt
iret
fstpt
insb
mov
subl
adc
sbb
dec
pusha
ja
je
lcall
mov
lcall
cwtl
mov
fiaddl
jl
adc
mov
xor
push
repz
jmp
outsb
cmp
sbb
in
jp
aas
jl
repnz
adc
jl
mov
push
mov
lock
dec
sub
je
call
aam
cld
aam
hlt
pop
pop
jle,pn
les
fsub
jmp
mov
xorl
push
pop
adc
stc
jo
adc
or
and
or
call
lods
enter
jnp
xchg
add
add
pop
inc
mov
mov
mov
add
or
sub
fsubrl
lcall
test
mov
mov
jge
mov
mov
dec
mov
jb
lcall
mov
mov
jb
jmp
icebp
movsl
jl
push
mov
xchg
insb
cld
pushl
xor
jns
inc
loopw
mov
adc
jg
xlat
jp
dec
rclb
cld
adc
pop
jmp
ret
mov
mov
scas
call
mov
cltd
push
aaa
push
cmpsl
jne
inc
push
jb
push
jbe
jmp
jl
push
lds
loope
dec
or
mov
sub
les
loope
and
jmp
cld
mov
dec
or
cmpsb
aam
clc
xchg
nop
ljmp
xor
mov
cmpsl
decl
xchg
add
mov
jno
aas
push
int3
cmp
pushl
jle
mov
cld
or
in
aaa
cs
gs
lahf
dec
iret
incl
dec
test
in
jbe
insl
popf
popa
add
sbb
pop
roll
and
leave
decl
aas
mov
adc
lret
mov
insl
mov
dec
das
adc
adc
jecxz
lcall
mov
sub
fmull
dec
adc
or
les
cmc
xor
cmp
jle
loopne
xor
push
clc
sub
scas
xor
loopne
xchg
mov
aad
lcall
shll
test
jl
stos
and
lahf
nop
sti
push
roll
call
out
or
adc
mov
mov
stos
xchg
mov
mov
test
aas
xchg
inc
push
int
mov
aad
cmp
in
cltd
incl
leave
stos
clc
xchg
inc
ja
jl
sub
sahf
pop
ss
cmpb
pushl
scas
jns
popf
rclb
xchg
nop
mov
inc
sbb
xor
mov
dec
movsl
mov
pushl
mov
jno
or
cs
sahf
adc
push
out
loopne
xchg
out
das
cmp
xchg
or
out
in
mov
ljmp
fdivrl
xchg
lret
outsl
aad
cmp
adc
jne
ficoms
and
imulb
pop
sub
jmp
add
and
push
xchg
jb
inc
mov
jo
mov
sbb
push
ljmp
adcb
sahf
aaa
mov
fstpt
imul
inc
and
mov
cltd
int
mov
rcl
push
inc
xchg
adc
clc
dec
in
fcomip
int3
fnstsw
andb
out
mov
or
jne
adcb
mov
call
loope
mov
mov
test
shl
dec
cmpsl
jns
lahf
or
cli
cmp
sbb
decl
dec
std
push
rcl
push
or
test
ficomps
push
dec
jae
pop
inc
dec
sub
call
ja
jmp
xchg
imul
sub
or
fildll
fisttpl
push
push
xchg
mov
jg
ja
lcall
popf
rorl
push
pusha
adc
cmp
pushl
iret
xchg
insb
xor
xchg
das
mov
sub
push
or
call
call
sbb
lods
loope
es
aaa
rol
pusha
std
jle
mov
mov
ljmp
jmp
outsl
pop
or
or
repnz
test
pop
push
scas
lcall
pushf
lcall
mov
icebp
cli
sahf
icebp
int
jb
test
push
sti
jae
xor
mov
lcall
notl
arpl
hlt
add
adcl
fnstsw
mov
mov
lahf
std
push
adc
mov
add
xor
rcl
push
dec
inc
pop
push
xchg
xor
call
rolb
push
inc
sti
adcb
xor
aam
cmp
push
sbb
sbb
ljmp
xchg
sbb
out
mov
mov
test
jmp
jmp
sar
shrb
dec
xchg
js
sub
dec
in
cmc
jbe
push
cmpsb
in
xchg
aaa
sbb
popa
jb
mov
add
popa
dec
loope
into
cli
ljmp
jle
nop
push
sbb
jg
dec
inc
outsb
mov
cli
fcompl
mov
out
push
mov
adc
mov
into
lods
inc
and
mov
xor
into
mov
rcrb
ja
jp
ljmp
sub
and
aas
decl
imul
lcall
add
mov
inc
addr16
cli
or
push
jle
jb
out
test
filds
push
fcmovnu
jge
mov
ljmp
sub
sbb
dec
xchg
shrl
insb
faddp
icebp
pop
idiv
outsl
pushl
shll
cltd
mov
xchg
cmp
lcall
fists
cmp
ljmp
insl
je
out
je
push
cld
repz
in
jle
sti
lahf
arpl
xor
mov
xchg
push
call
out
dec
ljmp
scas
xchg
lea
iret
xchg
pop
mov
jmp
sahf
mov
sub
cltd
jno
jge
sbb
aam
push
pop
mov
stc
andl
jo
pushl
lock
adc
mov
or
imul
push
ud0
fcomip
incb
enter
add
adc
cmp
jecxz
xchg
test
call
pop
cwtl
das
push
xchg
fdivl
inc
lahf
inc
das
out
hlt
sbb
sbb
sarb
xchg
fisubrs
jmp
lea
jecxz
in
push
scas
sbb
stc
mov
dec
xchg
xchg
push
fdivp
mov
mov
xor
mov
bound
cli
push
xlat
aas
addr16
or
rcr
arpl
inc
es
mov
cmp
push
xchg
cmp
push
mov
jmp
fucomi
enter
jg
sbb
test
adc
mov
or
arpl
mov
insl
dec
or
sbb
loope
popf
or
out
aas
cmp
mov
iret
mov
mov
jle
sarl
sbb
inc
fnstcw
push
out
pop
and
xchg
pop
incl
mov
adc
pop
xchg
cmp
pmuludq
mov
shl
int3
mov
adcl
sub
popf
push
mov
or
pop
mov
xlat
mov
sarb
cwtl
ljmp
mov
inc
jne
inc
lock
stc
imul
mov
push
inc
in
pop
mov
std
lods
or
push
inc
in
sub
in
mov
loop
pop
ljmp
in
push
pusha
mov
ficoml
cmp
loop
test
out
jge
loop
shrb
fcomps
je
adc
cli
into
dec
xchg
psubq
in
add
stc
push
cmp
cmp
sbb
push
loope
or
mov
lcall
pop
mov
mov
and
out
xor
test
ror
div
movsl
popa
and
ds
inc
pushl
cmc
sbb
inc
fwait
test
jle
inc
pop
movsl
fdiv
pop
lods
lcall
mov
mov
hlt
sub
outsl
repz
test
mov
sbb
fmull
push
push
fs
test
mov
cli
or
jae
lcall
lcall
push
pushf
mov
out
test
cmc
outsb
or
add
cld
ljmp
incl
test
inc
adc
xlat
adc
sub
aaa
cmp
sar
lcall
mov
jno
aad
lahf
and
dec
fsubl
adc
mov
sbb
ljmp
divb
cld
dec
ja
jno
mov
repz
jmp
and
stc
repnz
sar
xor
das
add
jo
inc
mov
jno
xchg
addr16
inc
stc
pop
cld
decl
xor
hlt
adc
sbb
cmpl
mov
lcall
jb
jb
lahf
adc
push
push
jo
in
addr16
jo
leave
popf
out
icebp
decl
dec
cmp
pop
mov
adc
outsl
mov
sub
xlat
lcall
fcoms
xchg
jecxz
mov
loopne
adc
lods
mov
testl
add
push
and
or
js
subb
insb
cmp
sarl
call
sbb
cld
test
rep
pop
mov
fnsave
fstpl
lcall
mov
sbb
aad
jns
jbe
xor
jo,pn
test
sub
test
pop
rolb
xchg
leave
fistpll
mov
cld
andb
ljmp
cli
incl
pop
and
xor
inc
lret
std
repz
push
int3
test
aam
outsl
test
inc
jmp
pop
mov
std
and
jge
sub
push
mov
fildll
jg
arpl
and
xor
outsb
aaa
push
mov
add
cli
sti
jge
push
lcall
jbe
aaa
cld
incl
adc
scas
cmp
push
imul
push
arpl
push
movsb
test
clc
and
sbb
repz
jnp
push
arpl
fsubrl
cmpsb
lcall
jg
fcmovb
or
dec
data16
pop
mov
and
fwait
adc
clc
jp
cmpsb
stc
jno
sub
insl
outsl
daa
or
incl
xchg
ret
jecxz
push
xchg
test
sbb
mov
jae
xor
inc
cld
add
out
adc
pushl
or
paddq
xor
jg
and
push
pop
lock
xlat
mov
int3
std
jae
xchg
pop
pushf
xchg
call
call
sub
push
cs
outsl
sub
setb
out
mov
and
in
inc
push
cld
decl
or
jne
popf
or
ljmp
aas
leave
nop
int3
stos
ljmp
dec
pop
in
lock
xor
mov
xlat
rcrl
push
xchg
jne
fsubrl
pop
cmp
fstpt
movsl
cmpl
scas
xor
clc
out
lret
cltd
pop
movsb
ret
inc
xchg
adc
js
jmp
mov
or
mov
or
hlt
sbb
adc
shll
jne
xor
fisubl
call
mov
cmp
stc
cmp
in
jg
sbbl
cmpsl
lret
sub
xor
mov
pop
push
dec
xchg
lods
cmpsb
aam
mov
iret
test
sbb
ret
adc
cmp
and
imul
add
cmp
adc
aam
js
mov
adcb
pop
add
adc
mov
pop
call
call
mov
inc
imul
xor
mov
push
scas
call
fcomip
jo
inc
sti
or
adc
js
or
push
pop
pop
daa
lret
out
outsl
jmp
incl
mov
rolb
cmp
aaa
or
mov
pop
sub
jg
lret
push
or
or
adc
lcall
cld
mov
push
fcmovnb
cmpsb
mov
inc
cltd
sbb
push
in
out
test
test
cmp
test
pushl
pop
aas
fildl
jmp
push
mov
pmuludq
mov
decl
sarl
sub
push
xchg
in
push
scas
dec
test
mov
icebp
push
ss
test
cmp
jmp
xchg
rcll
shl
stos
rclb
push
pop
pop
pop
cli
incl
and
add
mov
incl
shr
dec
movsb
push
mov
rclb
repz
adc
or
jl
jno
int3
in
inc
jmp
jg
pop
xchg
cmp
mov
fimuls
xchg
pop
mov
xor
test
dec
jmp
mov
into
fcomps
jnp
pop
jge
cmpsb
mov
loopne
mov
decl
cmc
push
ljmp
xor
dec
cmp
xchg
push
sub
out
stc
sbb
xor
insb
cmp
cmpsl
notb
jnp
push
and
inc
and
dec
clc
mov
lcall
call
leave
xor
xchg
jle
mov
movswl
or
jmp
into
loope
dec
xchg
pop
mov
sub
or
pop
ljmp
decl
jno
push
je
adc
das
cs
mov
dec
cmp
push
push
insl
jge
mov
push
lahf
rclb
ljmp
add
pushl
pop
inc
xor
mov
test
pushf
lret
repnz
jb
fbstp
pushl
or
int
xchg
xchg
add
mov
sar
lea
scas
mov
pop
mov
dec
outsl
add
dec
xchg
into
push
dec
ljmp
data16
sbb
jo
xchg
iret
fs
sarl
aas
push
mov
lock
or
push
adc
popf
es
sbbb
jmp
das
std
fmul
aad
inc
ja
jg
inc
cld
inc
aaa
test
ljmp
cmp
decl
das
xor
int3
movsb
mov
cltd
jne
sbb
jo
incl
or
and
call
testb
aad
sub
inc
fdivr
lcall
movsl
push
or
xor
enter
dec
sbb
test
add
lcall
add
xchg
imul
inc
adc
or
jg
mov
je
xchg
movsb
js
xchg
fldz
mov
ss
jmp
jae
xchg
adc
lods
jecxz
out
fwait
cwtl
lahf
repnz
and
mov
pushl
outsl
movsb
push
jns
sbb
ds
fnsave
fildl
jne
nop
loope
sub
popl
repnz
and
pop
mov
mov
arpl
xchg
and
push
xchg
push
incl
enter
inc
push
jnp
icebp
dec
and
adc
mov
decl
or
pop
or
mov
test
rclb
and
rorb
in
adc
lods
jbe
stos
dec
mov
add
incl
jbe
add
jmp
aaa
lea
mov
jle
std
dec
jne
mov
decl
jbe
cmp
fisubs
jl
and
or
and
mov
xchg
lcall
fistl
push
test
ljmp
mov
cmp
sub
mov
ljmp
mov
sbb
inc
pop
dec
mov
repnz
mov
dec
jnp
jecxz
cmpsl
repnz
mov
sub
sbb
sbb
popa
pop
ljmp
incl
xlat
mov
cmpsb
xor
mov
fnstenv
xlat
cmp
jne
mov
cli
out
call
inc
pop
lods
sysret
repz
les
adc
pop
cmp
push
test
jg
jmp
sbb
jecxz
sub
mov
xchg
mov
sbbb
xlat
ljmp
mov
push
mov
and
rol
and
cmc
sahf
shlb
mov
lcall
push
test
or
int
shl
mov
ret
inc
loope
xlat
mov
cmpsl
test
incl
aas
sub
jae
cmc
jge
xchg
int
pop
rorl
loop
sub
cmp
pushl
lods
cwtl
pop
inc
cmp
inc
pop
cs
out
jge
adc
outsl
xchg
push
and
filds
dec
lock
decl
fcomps
mov
add
in
and
lcall
inc
leave
xchg
dec
aad
imul
mov
incl
std
das
shrl
jnp
add
sti
xchg
out
jg
jg
repnz
and
clc
add
fldlg2
iret
lods
xor
not
sbb
incl
cmpsb
xchg
outsb
xchg
jecxz
and
xor
jne
js
cmp
or
ret
dec
adc
incl
out
add
push
and
add
test
jo
fcmovnbe
shlb
lcall
test
data16
out
push
je
pop
mov
test
idiv
adc
inc
jg
call
mov
test
into
rcr
arpl
pop
dec
scas
inc
insl
jae
inc
mov
ljmp
out
pusha
push
xchg
sub
pop
xlat
leave
or
shll
inc
jecxz
ljmpw
mov
xor
aad
out
insb
loopne
in
sarb
sbb
fstpt
add
jmp
lcall
inc
pop
push
sbb
sub
adcb
bswap
sbb
data16
xor
decl
fcmovne
and
cmp
mov
lds
adc
in
cmp
adc
ljmp
sbb
loop
dec
or
aas
xrelease
inc
jbe
testl
or
loop
fadds
int3
push
jns
leave
jecxz
call
ret
inc
sbb
jo
rcrb
pop
cltd
or
aam
js
arpl
cli
in
aaa
aam
repz
cmp
test
rorb
repz
ret
cld
fwait
sub
clc
test
fldt
cli
ljmp
add
pop
cmp
gs
xorl
sar
push
shl
xchg
mov
push
test
dec
lahf
jl
fwait
lret
cmpl
fidivs
adc
out
xor
lcall
jp
fwait
movsb
gs
adc
movsl
sub
std
outsl
cmp
inc
push
subb
jg
fbstp
jle
js
sub
mov
jge
lahf
sub
pop
dec
jb
test
sub
sti
jne
cmp
mov
imul
dec
lret
adc
ljmp
daa
call
lods
cmp
outsb
xor
push
and
pop
xor
outsb
inc
pop
fwait
sbb
mov
mov
xor
jecxz
mov
in
jo
mov
fwait
in
dec
repnz
fldcw
movsl
mov
and
pop
add
or
mov
dec
sbb
sbb
jl
out
cmp
or
cmpsl
jno
dec
mov
mov
jae
mov
and
push
movsl
push
cmpb
mov
nop
xor
sahf
in
outsl
xor
xor
insb
testb
mov
add
cld
in
bound
mov
fsubrp
ret
mov
inc
cmp
scas
pop
bnd
lcall
dec
test
jb
jp
push
sahf
cmp
lcall
test
stos
outsl
int
xor
fistps
fisubs
or
xchg
mov
cltd
or
mov
jl
icebp
es
add
sub
add
into
loope
in
lcall
pop
in
cmc
mov
adc
xchg
cmp
pop
pop
cs
sarl
out
cmpsb
std
call
add
jp
lods
push
outsb
push
es
fisttpll
xor
sub
mul
call
xchg
adc
ja
dec
mov
repz
pop
add
cmp
sbb
incl
shrb
jne
jmp
test
fcomip
or
push
xor
fwait
push
es
lea
rcl
mov
jns
inc
sub
xchg
shrb
ret
sub
repnz
inc
fmuls
cmp
or
push
cmp
stc
lret
sub
pop
ss
xor
xor
jle
and
movsb
xlat
mov
call
xchg
fmuls
jl
leave
cmp
add
pop
and
jmp
pop
mov
mov
jl
lcall
notl
scas
xor
and
mov
aad
sub
inc
loope
jg
jmp
push
jb
negb
cmc
lods
mulb
pusha
faddl
push
outsl
decl
inc
xor
xchg
push
mov
scas
test
pushf
push
iret
fidivrl
mov
push
loope
xchg
pop
mov
sub
insb
and
jbe
je
cs
into
jge
aad
push
icebp
fisubl
daa
in
incl
scas
jnp
or
pop
inc
aam
push
mov
rclb
mov
ds
and
decl
or
aas
xor
in
es
cltd
sub
fisttps
mov
pusha
cltd
jo
imul
push
xor
sbb
mov
clc
inc
icebp
ss
inc
cld
cmpsl
sbb
rorb
jmp
adc
in
or
nop
jle
call
and
repz
pop
cwtl
and
pop
dec
jge
fldl
pop
add
movsb
xor
fidivrs
mov
repz
mov
xchg
shl
nop
ret
aad
decl
insb
and
dec
lds
sbb
xor
pop
pextrw
cmpsb
mov
xor
lcall
fldl
gs
push
fisubrl
gs
adcb
jle
xchg
ret
movsl
pop
jno
add
push
xchg
mov
lock
daa
dec
int
call
decl
lcall
stos
cs
lds
lds
add
fistpll
ret
cmp
data16
mov
ljmp
sbb
cli
cmc
xor
mov
mov
loop
sub
in
cmp
incl
xlat
data16
aad
pop
add
cmpsb
push
ss
adcb
mov
repnz
adc
and
cmp
jp
test
in
mov
sbb
cmp
add
fs
out
clc
ljmp
lock
in
mov
lret
leave
inc
lods
sarl
fildl
mov
jecxz
int
loop
mov
inc
mov
mov
mov
jne
add
and
decl
sti
dec
push
sbb
mov
sti
adc
xchg
sahf
fs
pop
mov
cmpsb
adc
sbb
aas
ja
mov
stos
sub
lock
out
pop
or
imul
mov
ljmp
lea
mov
mov
mov
mov
cmp
sti
ljmp
mov
dec
clc
call
xchg
mov
scas
clc
inc
leave
mov
add
out
cmp
aad
sbb
leave
mov
mov
inc
loope
jle
lcall
sti
movsb
pushl
test
mov
and
aas
or
jg
stos
lret
repz
inc
mov
or
orl
icebp
hlt
or
decl
cmpsl
loope,pt
pusha
sbb
jmp
sbb
adc
pushl
call
sub
and
mulb
aam
or
popa
icebp
outsb
mov
xchg
jmp
es
jbe
adc
jg
jle
scas
cmp
stos
and
xor
pushl
mov
das
add
xor
inc
pusha
imull
cmp
push
aaa
fxch
xor
imul
cmp
xor
movsl
movsl
ffreep
push
aaa
call
push
mov
sbb
aaa
mov
xor
stos
mov
repz
sbb
test
sbb
icebp
decl
aas
adc
mov
push
bound
lea
pop
cmp
jmp
pop
adc
das
hlt
mov
std
or
scas
jnp
jbe
mov
mov
decl
scas
cmp
inc
scas
ljmp
ja
lcall
andl
emms
rorb
push
mov
dec
and
mov
mov
in
xor
hlt
out
and
movsl
dec
push
pop
dec
leave
push
in
jnp
test
aad
mov
add
lcall
lds
dec
hlt
and
pop
push
test
test
out
mov
loop
dec
mov
add
push
dec
xor
dec
outsb
cwtl
sbb
pop
push
ss
leave
push
and
stos
push
jmp
or
leave
das
xchg
jmp
test
cmpsb
mov
or
and
incl
in
jae
addr16
sbbl
aad
jno
popa
cmpsl
cmc
test
mov
add
lcall
or
mov
ja
out
push
dec
in
push
inc
jne
push
fcomip
inc
sbb
and
jl
jae
lret
lret
sub
jmp
bound
mov
mov
pop
add
mov
movsb
dec
dec
lods
scas
cmp
or
popf
and
ljmp
scas
das
and
lret
inc
adc
cmp
xchg
add
jg
sub
ljmp
shlb
mov
xor
cmc
sbb
repnz
pop
in
cmp
mov
adcb
pop
add
ljmp
mov
inc
orb
daa
subb
int
add
mov
ljmp
mov
hlt
jmp
sti
lock
mov
xlat
mov
inc
jmp
daa
loop
or
aaa
cld
mov
xchg
loope
outsl
stos
pop
pop
xor
jle
call
lods
call
lea
jl
mov
lock
js
mov
and
push
outsl
orb
iret
imul
stc
cltd
xchg
icebp
xchg
mov
hlt
lahf
xorl
mov
and
js
repnz
and
add
mov
cmp
jne
loopne
rol
mov
push
and
test
or
sbb
adc
jns
stc
xchg
add
dec
nop
std
add
jle
incl
out
and
push
jp
repz
shr
jge
mov
in
mov
mov
mov
sub
dec
mov
jmp
and
cwtl
xor
inc
ljmp
clc
stc
addr16
loope
mov
fwait
cmp
call
std
push
xchg
aas
stos
dec
jg
ljmp
push
sahf
add
fnstsw
test
in
sub
enter
repnz
xchg
out
mov
incl
xchg
xor
or
xchg
xor
xor
mov
stos
jp
cmp
jne
push
mov
ljmp
mov
fdivrl
mov
int
xor
sbb
push
aaa
add
cmp
add
loopne
pop
mov
inc
insb
push
sub
sub
dec
jno
in
inc
data16
ljmp
dec
aaa
dec
xor
sub
mov
test
jns
mov
aas
jb
stc
incl
cld
push
push
imul
call
xchg
das
mov
push
xor
js
dec
sbb
into
adc
call
mov
jno
add
fidivs
imul
pop
cld
cwtl
pop
test
adc
cwtl
nop
jo
and
scas
movsb
stc
cwtl
dec
xchg
sub
das
clc
incl
shl
add
jmp
adc
sub
xor
pushl
pop
or
ficoml
fdivrs
test
inc
in
sarb
lea
push
fsts
cmp
sub
sbb
xor
stos
shl
jmp
push
cwtl
js
add
repnz
mov
rorb
out
cmp
and
or
or
pop
cld
iret
adc
mov
lcall
push
dec
push
dec
dec
rorb
stos
jae
mov
mov
out
cmpb
mov
xor
gs
inc
adc
pushf
xchg
enter
popl
lods
jae
lcall
popa
pop
mov
fsubrp
sbb
xor
imul
dec
int
shll
lea
ljmp
or
rsm
fnstsw
mov
inc
sub
repz
xor
imul
aad
cmpsb
pusha
add
pop
sahf
push
sbb
push
cmp
xchg
inc
inc
lahf
sub
mov
stos
or
mov
mov
fcompl
sbb
jb
orb
sti
stc
shlb
dec
loopne
pop
cltd
dec
pop
xchg
or
js
mov
stos
hlt
ret
or
decl
jecxz
cmp
pop
jmp
push
je
sbb
xchg
fisubrl
cs
jg
decl
pop
loop
repz
stos
cmp
in
or
fidivrl
mov
popf
add
xchg
decl
outsl
xchg
add
jo
add
adc
in
movsb
lret
cwtl
je
call
fadds
add
or
ds
lcallw
fiadds
roll
in
mov
pop
out
sbb
mov
cltd
jne
inc
pop
pop
aaa
and
mov
hlt
adc
mov
aam
ja
cmpsb
out
mov
or
ja
gs
and
gs
mov
scas
cli
addr16
lcall
pop
sbb
mov
insb
xchg
dec
pop
jno
xor
push
sbb
lcall
dec
sub
pusha
out
scas
ficomps
ja
inc
les
ja
mov
ja
notl
sti
hlt
mov
cmp
mov
mov
or
incl
std
jp
inc
inc
into
les
push
ja
out
cmp
imul
jmp
in
add
inc
sahf
in
sbb
cld
add
sub
sbb
jns
ljmp
outsb
insb
adcl
es
sbb
mov
or
repnz
int3
mov
pop
push
xchg
decl
je
orl
icebp
leave
adc
sub
sub
ljmp
sti
adc
or
push
and
jnp
popf
push
icebp
inc
cmc
xor
mov
call
decl
addr16
and
call
icebp
loopne
jg
and
dec
mov
jmp
and
lret
sti
scas
popf
mov
mov
adc
adcb
push
jns
ret
mov
in
cmp
ljmp
pop
in
mov
rdmsr
insb
ret
push
jp
mov
mov
pop
or
pusha
sub
fldcw
incl
inc
inc
jb
inc
movsb
dec
cmpsb
push
les
push
lcall
sub
movsl
outsl
mov
push
sbb
stos
js
mov
inc
xor
mov
sub
stos
sbb
in
dec
mov
jge
mov
jle
sub
push
lods
fs
xchg
loope
pop
popa
inc
out
and
xchg
mov
enter
nop
mov
in
mov
sbb
cmp
or
out
cwtl
pop
sbb
ljmp
clc
mov
mov
testb
mov
cltd
out
loop
insb
mov
dec
das
ljmp
pop
inc
jmp
inc
stc
out
stos
outsb
xchg
clc
clc
inc
mov
add
nop
inc
ja
and
lret
outsl
rcrb
imul
loop
push
mov
cli
cli
imul
inc
or
sub
nop
aad
adc
push
imul
cmp
sub
les
cmp
dec
gs
inc
loopne
pop
jae
incl
cld
xchg
ds
fld1
lcall
fstp
outsb
adc
aaa
mov
inc
dec
leave
aas
adc
jb
test
sub
or
stos
inc
loopne
cmpsb
popa
lods
add
in
dec
and
aad
lcall
xchg
mov
mov
fdiv
sarl
jns
rcll
insb
arpl
call
stc
push
sub
add
push
rcl
lea
jmp
xchg
lcall
lock
and
sub
add
mov
aam
dec
inc
pop
jnp
push
pop
and
decl
jge
loope
adc
mov
pushl
lea
mov
add
add
pop
push
out
cltd
clc
insl
mov
ljmp
mov
test
dec
mov
pop
shl
or
fdivs
fwait
jg
xchg
mov
jge
out
pushf
es
pop
stos
cmp
jp
sar
incl
cltd
push
insb
inc
and
aaa
inc
xchg
adc
jno
es
xchg
aad
sbb
sbb
cmp
out
mov
enter
out
ret
decl
outsb
imul
xchg
cli
cmp
cmp
cmp
mov
js
std
or
filds
inc
stc
xlat
mov
dec
adc
ds
adc
xchg
xchg
leave
movsb
sub
mov
ja
scas
incl
roll
inc
lret
lret
adc
mov
push
decb
push
lcall
xchg
daa
icebp
pushf
std
mov
mov
insb
movsb
pop
xlat
mov
inc
fsubr
jb
fistpl
loopne
incl
loop
pop
push
test
arpl
dec
or
fnstsw
mov
test
push
cmp
inc
decl
cmp
xor
cmp
sub
mov
rorb
xor
nop
mov
call
and
push
cmpsl
add
insl
push
jne
adc
fwait
xor
shlb
jp
adc
imul
mov
push
mov
and
add
mov
fisttps
jmp
dec
sbb
clc
mov
mov
mov
and
idiv
push
incl
xchg
shlb
pop
stos
test
imul
ret
sub
cmp
mov
jl
adc
mov
pop
int
in
cmp
and
mov
int
decl
je
cli
add
les
inc
and
dec
sbb
aam
pushf
imul
fsubr
jmp
inc
adc
out
jns
movsb
insl
test
inc
int3
cltd
lods
mov
or
iret
push
das
cld
incl
scas
fsubrs
bound
ljmp
scas
aam
lret
popf
mov
or
call
cs
push
add
cld
and
or
aaa
cmp
sub
std
ljmp
xchg
je
sbb
xor
movsl
lock
out
lret
xchg
movb
push
in
jno
cmpsl
lret
jmp
jge
xchg
test
mov
aaa
adc
and
andb
cmp
ljmp
sbb
data16
and
and
lret
imul
hlt
repnz
pushl
inc
clc
xchg
or
gs
aam
mov
inc
and
incl
lcall
cltd
push
pop
mov
xchg
out
push
or
test
fwait
movsb
sbb
hlt
addl
mov
inc
out
xor
or
pop
adc
ljmp
aad
push
sub
add
pop
ljmp
jle
lea
sub
inc
test
decl
or
clc
fmul
sbb
inc
scas
adc
cmpsl
cltd
pusha
jnp
ja
loope
jmp
xorb
inc
aaa
popf
iret
fdivrs
push
xchg
rcl
jno
jo
mov
addr16
push
bound
jg
out
addr16
xlat
xchg
outsb
fisubrs
std
inc
or
mov
pusha
icebp
ss
xor
pop
je
lods
les
imul
pop
adc
lcall
icebp
cmp
mov
mov
stos
mov
test
inc
sub
dec
jmp
jmp
mov
gs
xor
incl
in
scas
mov
ret
sti
ljmp
push
push
mov
mov
xor
adcl
int3
adc
mov
cmp
dec
jno
jl
or
mov
call
cld
sbb
pop
inc
xor
xchg
pop
repz
ljmp
cmp
popa
or
testl
aas
arpl
test
jmp
jle
in
xchg
sbb
frstor
je
sti
pushf
fcmovnb
xchg
inc
cmpsb
sar
movsl
popa
push
ljmp
xor
jmp
lret
mov
dec
aam
push
rcrl
jge
adc
add
leave
and
pop
icebp
xchg
jecxz
in
pop
mov
fcoms
addr16
push
xchg
jecxz
xchg
xor
add
lret
push
outsb
pop
xchg
jg
lcall
dec
sbb
sbb
fs
push
fcoms
pop
jbe
mov
pushf
dec
out
jns
mov
nop
push
push
xchg
stc
push
sbb
or
sub
aam
sbb
jl
ss
int3
or
pop
dec
pop
mov
movsl
mov
push
mov
push
insl
mov
nop
cmpsb
ljmp
rcll
adc
std
aam
jmp
mov
sub
fwait
and
data16
fmuls
adc
and
mov
imul
ja
jg
ds
adc
cmpsb
cmp
mov
test
dec
out
jo
ret
and
enter
and
mov
or
jecxz
cmp
inc
jle
dec
aam
test
mov
rcll
and
xchg
dec
mov
call
or
dec
jne
arpl
lods
sub
xlat
test
lods
mov
or
push
mov
loop
push
adcl
adc
cwtl
sbbb
jmp
insb
mov
jmp
push
adc
int3
mov
stos
out
mov
or
js
cmp
jmp
mov
inc
xor
xor
push
xlat
sub
sarl
add
sbb
cmc
decl
adc
testl
cmp
jmp
sahf
in
cmpsl
sti
movsb
imul
scas
cli
cmp
sub
sub
xor
pop
or
icebp
mov
push
push
out
pop
push
xor
jmp
outsb
and
sti
lods
jl
adc
daa
in
pop
cs
loopne
call
shll
hlt
in
insb
std
dec
mov
xchg
fs
fwait
cli
jbe
repnz
movsl
lods
into
pop
stos
jecxz
clc
call
std
adc
aaa
shrb
pop
cmp
inc
clc
clc
aaa
cld
jg
jbe
pushf
pushf
sbb
push
fdivrl
aas
push
jmp
jmp
inc
push
pop
aad
mov
mov
divl
and
pop
arpl
loop
aas
cmp
lcall
mov
cwtl
clc
rcr
cmp
adc
test
or
jbe
stos
decl
out
jbe
rcrb
cwtl
jnp
pop
jg
notl
std
mull
xor
xor
pop
clc
pop
cld
jns
mov
add
test
fucomi
mov
out
dec
mov
dec
lret
ljmp
jns
pop
test
shrb
cmp
int3
test
inc
sti
loope
add
inc
mov
gs
mov
test
lea
sti
mov
out
pop
aaa
aaa
and
mov
pop
cmc
cmp
lods
or
mov
int3
fbld
xor
test
mov
push
push
pop
cmpsl
cmc
ljmp
xchg
in
daa
bnd
sub
push
sbbb
or
or
inc
hlt
nop
pop
cmpsl
jae
cmp
dec
add
mov
sti
rcr
or
cmp
ret
insl
xor
dec
jl
or
pushl
insb
mov
add
aad
xor
scas
in
pop
push
in
popa
inc
incl
or
sbb
test
ja
pop
ljmp
lods
clc
pop
arpl
jmp
decl
sbb
inc
inc
repz
inc
sbb
fstpl
add
mov
cmpsl
mov
std
mov
mov
push
dec
jmp
or
or
adc
jp
xchg
andl
mov
call
dec
sbb
in
popa
cwtl
jmp
push
sbb
outsl
arpl
out
ret
std
test
lcall
inc
jle
movsl
aaa
movsl
push
fisubrl
es
jmp
sub
dec
sub
lods
ret
add
fistps
outsb
popa
or
test
aas
scas
mov
dec
sub
add
and
sbb
push
xchg
push
nop
fwait
push
pop
push
rep
ja
call
subl
cs
ret
ret
iret
dec
std
adc
mov
sti
sub
ljmp
jne
mov
mov
out
nop
out
dec
cmpsl
insb
pop
fcom
push
add
jmp
addr16
sbb
rcrl
jnp
int
js
sbb
pop
scas
sub
mov
fidivs
insl
into
sbb
push
jns
push
lods
imul
scas
stos
xor
outsl
sbb
or
jg
scas
jo
push
por
fmul
insb
movsl
sub
fildl
push
cmpsl
dec
popa
pushf
xchg
incl
stos
dec
test
cmp
fildll
je
mov
or
push
frstor
cmp
add
xchg
pop
pmaxub
cmp
inc
push
jl
in
popf
ret
sbb
mov
rcll
sbb
in
shr
lcall
mov
cmp
lods
pop
bound
add
sbb
out
call
mov
adc
xor
add
dec
push
jg
xchg
in
call
sarl
ret
aas
rorb
sub
xchg
imul
cmpb
in
lcall
jl
jne
pop
loope
in
push
cli
sbb
xor
pop
shr
jle
mov
repz
into
andl
into
fs
mov
mov
sub
sahf
std
fisttpl
mov
xchg
and
xchg
push
roll
out
add
adc
inc
inc
pop
sahf
cli
ljmp
xlat
ja
orl
pop
shrb
jae
xchg
loopne
pop
pop
out
add
mov
outsb
and
rol
pushf
sahf
gs
mov
pop
cs
call
xor
xchg
sbb
mov
cltd
movsl
daa
inc
sbb
cmc
ljmp
sbb
add
add
sbb
xor
fadds
cmp
add
out
insb
incl
mov
out
orb
iret
mov
or
ret
in
cmp
sub
pop
lock
jmp
aam
push
xchg
jnp
jnp
cmp
mov
mov
fdivrs
adc
test
lcall
mov
int
sbb
adc
stos
in
fistpll
lret
push
popf
jb
inc
out
mulb
mov
aaa
jmp
fdiv
enter
dec
jae
push
xor
inc
or
fdiv
add
push
insb
push
jecxz
push
out
and
jl
sub
bound
lock
push
cwtl
mov
test
add
movsb
stos
imul
dec
leave
and
aam
pop
call
std
movsl
icebp
out
mov
aaa
into
in
adc
hlt
jg
cwtl
hlt
les
div
ljmp
clc
inc
mov
in
pop
push
add
push
push
xchg
mov
mov
sbb
dec
ret
and
mov
mov
scas
sub
xor
icebp
std
in
fcomip
jmp
pop
add
sub
mov
xor
dec
push
sub
incl
aas
mov
fdivp
or
adc
repz
lods
test
aad
xchg
aam
xchg
or
into
ljmp
push
lea
enter
add
mov
mov
mov
jp
sahf
mov
filds
adc
add
ds
push
dec
add
inc
pop
cmp
inc
cmp
mov
pusha
lock
imul
pop
mov
dec
insb
and
cmp
sti
cld
out
shll
std
out
or
aaa
fldt
mov
mov
push
ljmp
pop
mov
pop
mov
sbb
jbe
pop
push
pop
push
pop
addr16
mov
cmp
in
cmpsb
rcrl
pop
mov
mov
leave
jno
aad
jl,pn
in
out
fs
pushl
xchg
js
leave
xor
aad
xchg
repz
ds
push
mov
pop
outsb
pushf
mov
int3
outsb
push
ds
dec
outsl
lock
imul
or
fidivs
cltd
popf
movsb
fimuls
std
imul
repnz
sub
int3
sub
push
and
mov
or
enter
xchg
scas
add
incl
repz
adc
lea
pop
inc
xchg
sub
or
cld
rorl
xor
loope
mov
je
out
xor
xor
and
dec
pop
pop
push
dec
mov
popa
pop
cld
cmpsb
adc
push
add
sub
ljmp
or
sub
mov
clc
or
mov
or
rcll
lcall
loopne
cmpsl
inc
incb
leave
sub
mov
xor
lahf
cwtl
mov
out
mov
lcall
pop
mov
imul
adc
add
mov
jmp
fcmovb
fildll
loop
ret
adc
pop
xchg
mov
xchg
in
pushl
mov
push
je
adc
orl
scas
push
aam
xchg
std
xchg
dec
movhps
cli
lcall
nop
into
xchg
and
fstpt
mov
cmp
mov
and
lods
fdivrl
cli
sub
cmp
in
jmp
jnp
mov
ljmp
in
out
push
sub
mov
in
rcl
fisubl
push
and
jmp
cmp
aam
add
mov
xor
and
stos
mov
pusha
orl
call
subl
cmp
loope
aam
mov
iret
xchg
ds
sub
enter
mov
addb
popa
fisttps
out
xchg
call
je
fsubs
mov
pushl
sbb
test
sub
jge
pmulhuw
jp
clc
imul
inc
jb
outsl
leave
dec
cmp
icebp
lcall
or
cmp
test
stos
mov
lcall
ljmp
xor
xchg
mov
mov
cmpsl
insb
pop
cld
scas
sbb
dec
rolb
pop
hlt
lcall
push
repz
fcmovbe
aas
and
pop
sub
ljmp
adc
iret
addr16
adc
gs
jno
mov
push
js
adc
dec
mov
out
cli
lods
scas
test
inc
adc
sbb
pushf
popf
xchg
dec
sti
dec
shl
and
jmp
dec
inc
cmp
sbb
mov
sub
imul
cmp
scas
daa
insl
xchg
mov
pushl
cli
aaa
ds
inc
push
repnz
cmc
pop
lock
jg
jmp
sti
int3
dec
push
sarl
xchg
scas
sbb
jae
dec
dec
push
mov
mov
aas
mov
sbb
jno
dec
mov
cmp
aaa
adc
sbb
jns
pop
js
and
dec
sahf
ja
sub
pop
or
clc
adc
aas
dec
and
adc
push
dec
aas
sti
jmp
jg
scas
mov
popa
dec
adc
xchg
xchg
scas
decl
scas
fisubl
mov
lock
stos
repz
xchg
mov
push
sub
jne
jne
sub
loope
fucomi
clc
call
cmp
dec
repz
xlat
xor
mov
jg
decl
xchg
lret
pop
xlat
cld
pushf
lods
imul
arpl
ljmp
cmp
xor
in
pop
dec
ja
lock
cmc
popf
jns
mov
ljmp
jno
repz
sbb
psubusw
pop
fisttps
jge
push
push
aam
shlb
mov
pop
mov
inc
lods
loopne
clc
int3
and
in
jecxz
shrb
pop
dec
xchg
jae
insb
cmpsl
push
inc
push
nop
mov
push
sub
bound
push
xchg
cmovns
and
pop
fdivs
jno
cmp
push
and
sbb
inc
lods
aam
fdivrs
mov
jge
jo
mov
ds
in
cli
ret
lods
loope
xchg
xchg
dec
in
ss
fists
decl
mov
lock
inc
mov
mov
pusha
cmc
pop
fnclex
out
adc
in
nop
sub
jmp
adc
mov
out
mov
movsl
adc
mov
mov
addb
pushl
xchg
or
dec
xchg
xchg
rclb
daa
mov
scas
add
orb
insb
mov
movsl
xchg
push
shr
or
lcall
push
stc
imulw
into
ljmp
jmp
cmp
xor
cmp
dec
push
adc
icebp
cmc
pusha
ret
jp
scas
cli
jmp
dec
mov
add
mov
mov
aam
sub
int3
out
cmc
jmp
in
or
xchg
mov
jno
pushl
inc
cmpsb
fwait
stos
sub
lahf
mulb
adcl
add
push
insl
movb
enter
jg
decb
add
push
pop
outsl
je
popf
cmp
fsts
add
decl
rorl
adc
aad
push
adcl
push
std
fst
sub
out
sbb
xor
push
stos
add
mov
push
mov
sbb
in
jnp
insb
sbb
lea
sub
std
jmp
out
imul
stos
cltd
pop
divb
and
arpl
iret
test
les
test
dec
imul
js
or
stos
or
and
enter
push
push
fsubp
pusha
loop
mov
ljmp
jb
movsl
lcall
xlat
sub
inc
test
jno
mov
loope
call
sbb
cmp
js
stos
enter
push
mov
lret
fmull
outsb
sub
loope
mov
and
loopne
and
ljmp
out
jae
cwtl
cmp
add
or
fistpl
add
movsb
jecxz
or
lds
jb
cmpsb
lods
jbe
stc
ret
xchg
cmc
es
rcll
rcll
xchg
pushl
jecxz
imul
scas
mov
stos
pop
mov
lds
dec
fdivr
mov
inc
jle
dec
pop
decl
and
int
mov
xchg
leave
lods
lock
rcll
mov
push
push
leave
or
inc
adc
and
jnp
push
stc
cmc
mov
aas
mov
sbb
or
mov
pusha
mov
cmpsl
shl
dec
rorb
ljmp
adc
xchg
cmp
sub
jmp
mov
roll
ljmp
mov
into
pop
jbe
out
mov
jmp
push
jno
scas
inc
aam
outsl
out
divl
or
or
push
mov
push
inc
xchg
aad
mov
xor
int
subl
mov
lcall
nop
subl
icebp
fcomps
push
aam
jge
scas
or
mov
xor
addr16
incl
orl
arpl
mov
dec
xchg
ljmp
jp
pop
out
decl
sbb
ret
test
mov
push
out
adc
jmp
dec
mov
push
mov
test
add
lahf
xchg
fadds
pop
inc
decl
mov
add
mov
ret
testl
jno
in
xchg
jmp
incb
pop
ja
adc
bound
or
mov
xchg
adc
jnp
push
or
adc
xchg
push
dec
inc
pop
adc
adc
lcall
in
out
ror
push
and
xor
dec
aas
jge
cmp
decl
prefetch
and
aas
push
fs
cs
or
cmp
call
xor
adc
enter
or
jp
inc
jnp
add
scas
push
push
mov
mov
ja
call
xchg
test
push
int
scas
jb
lcall
mov
xchg
xor
popf
ret
repnz
jmp
test
sahf
sbb
mov
adc
filds
cmp
fisttpl
pop
jecxz
mov
ljmp
adc
inc
add
pop
sub
pusha
sub
clc
xchg
and
add
jle
lds
daa
scas
lret
push
cmpsl
pusha
ss
jno
xor
mov
jmp
mov
inc
loopne
xchg
clc
sbb
int
andb
mov
fs
out
clc
mov
push
aad
insb
ret
xchg
adc
push
and
cmp
mov
jge
decl
mov
dec
fs
jle
sahf
shl
cmp
cmp
pop
enter
mov
adc
pop
in
mov
mov
leave
mov
dec
or
mov
decl
pop
mov
sub
out
xchg
push
and
push
fildl
dec
dec
outsb
xor
ljmp
push
mov
aas
imul
and
sbbb
adc
pop
pop
incl
test
rcrb
xor
cwtl
jge
jge
xor
dec
jecxz
push
cltd
jmp
jmp
pop
rcrl
and
mov
roll
or
mov
dec
cli
pop
sbb
clc
sbb
inc
gs
jae
lods
roll
shrb
cld
repz
push
fdivs
ljmp
mov
loop
gs
add
insb
cmp
xchg
cmpsl
mov
mov
out
arpl
ljmp
mov
ret
jnp
idivl
inc
jg
adc
aad
je
adc
fnsave
ret
pop
lcall
jae
je
ret
mov
inc
sti
and
sub
dec
jmp
and
push
pop
test
dec
pop
xor
or
out
jecxz
dec
cwtl
sub
incl
cwtl
and
mov
sti
adc
das
mov
push
xchg
sub
subb
call
xchg
xchg
or
in
mov
xor
push
sbb
mov
sbb
call
xchg
inc
jne
push
inc
cli
cld
fmul
fs
sub
dec
jmp
mov
into
gs
decl
shr
data16
clc
enter
or
push
xlat
fwait
adc
cwtl
bound
sub
sub
jb
ja
aad
lret
popa
fimull
movsl
mov
insb
icebp
mov
pop
mov
lcall
ljmp
out
cwtl
popa
jno
jnp
jno
sti
in
in
sahf
lahf
sahf
shll
scas
fcmove
pop
divl
xorb
imul
fisubrs
cmpsl
sub
lock
push
repnz
pushl
std
scas
and
aas
insb
ficomps
xor
mov
mov
lcall
jmp
sub
sbb
mov
cmpsb
rcr
imul
adcb
cli
mov
call
push
shr
xchg
lods
cwtl
movsl
jecxz
out
mov
ds
mov
sub
sub
clc
sbb
jb
loopne
in
idivl
mov
repz
sub
or
mov
push
scas
dec
push
xchg
ja
shlb
mov
lahf
lcall
addr16
mov
sbb
sbbb
pop
les
call
mov
call
scas
clc
aas
push
mov
ret
lock
pop
mov
stc
arpl
cmp
ljmp
pop
ljmp
sub
sub
outsl
push
mov
sarb
pop
xor
mov
mov
lcall
fstpl
out
gs
or
and
flds
stos
jl
test
ljmp
shrl
adc
test
mov
and
or
lret
jne
push
pop
lahf
mov
hlt
sub
and
add
xbegin
jg
dec
xchg
fildl
cmp
jge
aam
pop
movsl
dec
sbb
mov
xor
xor
outsl
incl
cld
pushl
inc
repnz
push
stos
adc
ret
mov
xchg
stos
fwait
jp
push
jg
ljmp
clc
add
cmp
adc
mov
ja
adc
xchg
jno
sbb
movsl
xor
decl
sub
mov
cli
mov
cmp
sub
lds
mov
mov
cld
pop
mov
clc
inc
pop
lods
scas
bound
jne
mov
lahf
rcl
sbb
mov
incl
in
push
and
into
push
xchg
lret
sub
mov
cmp
incl
pusha
int
inc
mov
ret
pop
pop
mov
mov
mov
fwait
xorb
mov
jmp
cmp
jo
out
rorb
nop
loopne
add
cltd
mov
jg
js
rcll
add
in
fs
cmp
call
std
mov
jmp
ret
outsb
lods
cmp
fisubs
lcall
int
fcmovnb
fcomip
mov
and
iret
popa
dec
movsl
lret
fs
lahf
sbb
mov
pop
sbb
jb
cld
decl
xchg
sti
ja
inc
test
in
push
mov
jo
call
rcl
or
aaa
adc
pop
stc
adc
rorb
pop
mov
lods
mov
cmp
ljmp
into
sbb
sub
mov
and
out
ds
cmp
lcall
cmp
or
pop
loop
in
addr16
pop
pop
call
push
loopne
jg
addr16
mov
push
idivl
subl
call
push
in
xchg
dec
add
ljmp
addr16
and
cld
jns
les
lahf
dec
push
mov
incl
pop
movsb
mov
adcb
les
lods
xor
fiadds
add
incl
cmpsl
sahf
pop
sbb
shrl
je
sbb
scas
sub
cld
and
inc
lahf
mov
mov
adc
jnp
pop
cmp
and
insl
push
adc
xchg
ljmp
xchg
adc
xor
or
cmp
mov
incl
scas
test
cmpsl
mov
lahf
mov
sbb
adc
sbb
pushf
inc
cmp
js
pushf
insl
sub
xor
lods
mov
adc
mov
clc
data16
dec
xchg
scas
cmp
cli
incl
inc
pop
or
popa
and
mov
dec
pop
dec
add
ljmp
sbb
cmp
mov
or
cmp
loop
es
in
je
mov
jg
jmp
sarl
ss
lret
cltd
in
int
jl
jmp
inc
pop
mov
jmp
fcomps
xchg
mov
decl
inc
dec
or
xchg
xchg
dec
movsl
pop
mov
ljmp
fwait
sub
stos
dec
pop
cmpsb
loop
iret
nop
mov
sysret
shll
clc
jge
ret
decl
jmp
mov
data16
scas
add
inc
bound
repnz
fdivs
rorb
add
cs
add
add
jo
lcall
test
decl
xchg
jo
push
pop
lock
push
clc
dec
es
in
sub
fistpll
mov
ljmp
rclb
push
push
xlat
jae
push
call
jmp
cmp
out
mov
scas
mov
lret
mov
test
mov
aad
dec
cmp
jmp
jbe
fbld
fstl
adc
aas
sub
mov
in
xchg
cmp
inc
aam
std
add
xor
loopne
dec
sbb
cs
clc
mov
fnstenv
out
pop
addr16
sbb
decl
fimuls
mov
inc
xchg
fcoms
cwtl
and
aaa
mov
enter
ss
jnp,pn
sub
lea
incl
sub
in
movsl
inc
jle
out
cmpsb
add
in
ja
out
xchg
sbb
push
push
cmp
mov
dec
mov
lahf
sub
incl
sub
or
das
pop
dec
inc
or
push
pushf
xchg
mov
pop
incl
pop
gs
push
shlb
not
outsl
pop
push
push
sub
push
pop
pop
fidivrs
lahf
xchg
insl
inc
bound
ljmp
sub
sub
ret
lea
push
pop
out
leave
sbb
add
mov
mov
mov
ljmp
sbb
loope
pop
add
xor
scas
mov
jnp
cmp
and
fstps
movsb
xor
ljmp
fbstp
mul
test
scas
adc
adc
lds
rol
lcall
sub
mov
cmp
out
xchg
das
shll
in
lret
pop
stos
pusha
jno
push
cld
call
mov
insb
and
test
cltd
xor
cwtl
dec
xchg
pop
jae
lock
and
xlat
dec
ficoml
lcall
add
fidivrl
sbb
sbb
and
xchg
jbe
outsl
popf
mov
xor
inc
loopne
and
into
mov
jbe
dec
pop
bound
mov
push
jle
in
push
div
xchg
push
mov
subl
inc
mov
movsb
push
aaa
subl
shll
sbb
fs
jg
and
dec
jne
dec
adc
jge
int
dec
popf
add
mov
xchg
xlat
mov
sarb
jb
lret
imul
pushl
aam
add
sub
push
mov
insb
mov
movsl
fldl2e
dec
push
fcomip
call
dec
dec
push
ljmp
divl
jp
pop
aas
das
push
stos
pop
cmc
jg
lea
jle
lret
or
lock
imul
sub
scas
pop
lcall
mov
popf
pop
push
fwait
aas
jge
loope
mov
mov
add
ljmp
inc
sub
dec
lret
xchg
jg
out
mov
xor
ja
sahf
sub
sti
jb
daa
sub
pushl
inc
popf
pop
shl
sbb
imul
std
pop
xchg
pop
xchg
dec
cmp
call
fidivl
fcompl
sbb
push
into
push
in
mov
bound
lea
es
popa
inc
ljmp
int
mov
stos
mov
jl
pop
jp
cmpsb
inc
out
or
sbb
push
jg
ljmp
gs
scas
inc
popa
push
je
mov
cmp
stos
lcall
lock
mov
imul
push
xor
mov
ficoms
and
out
mov
fdivp
out
mov
jbe
les
stos
push
jg
push
repz
nop
push
xor
jae
outsb
test
movb
jp
rorl
or
aam
add
addr16
jae
stos
lahf
push
scas
iret
pop
sbb
decl
push
add
adc
cmp
fisubs
xchg
xchg
shl
stos
sbb
or
mov
dec
cmpsb
xchg
xchg
inc
int3
pop
cmp
repz
jbe
popa
add
call
lock
mov
repnz
es
icebp
insb
sahf
xorps
adcl
cmp
jno
adc
cmpsl
and
addb
xor
sub
scas
xor
ljmp
into
fsts
add
orl
daa
sub
push
js
xor
lret
outsb
filds
mov
and
xor
dec
lret
push
pop
lock
jmp
xor
lret
xchg
jno
push
lret
mov
or
mov
mov
fstpl
add
mov
sar
push
cmpsl
imulb
cmp
lods
repz
call
out
sti
jl
arpl
out
out
push
jle
sarl
repnz
mov
push
sub
mov
leave
ljmp
andl
data16
or
mov
jge
sbbl
xchg
ret
pop
shrl
xchg
cmp
mov
lcall
sub
lret
or
mov
add
xor
mov
aad
mov
pop
sbb
incl
cmpsl
jl
cwtl
pop
jbe
popf
loope
orb
shl
adc
adcb
mov
jp
cmp
test
sub
pusha
or
push
ljmp
dec
dec
mov
sub
pop
jmp
or
movsl
mov
xor
mov
push
dec
pop
mov
nop
dec
mov
push
into
shlb
lock
sbb
fst
push
pop
xorb
or
imul
inc
cltd
movsl
xchg
mov
or
lcall
pop
cmpsb
fdivr
cmp
nop
pushf
inc
test
pop
ret
add
decl
pop
movsb
push
out
out
aas
hlt
lcall
cmp
pop
or
xor
jg
cwtl
enter
inc
scas
pushf
lods
jmp
ds
imul
mov
jecxz
inc
dec
repz
decl
inc
lret
rcr
add
pop
out
cld
sub
js
sbb
fndisi(8087
pop
and
rcrb
imul
lcall
mov
daa
mov
or
pop
pop
leave
shrb
or
jbe
movsl
incl
jle
mov
test
xchg
xchg
aaa
into
into
jle
mov
outsb
imul
sbb
lea
mov
test
call
sbb
call
mov
inc
cwtl
mov
daa
sbb
loope
repnz
cmp
mov
sub
xchg
jp
jge
push
test
addb
pop
lock
jp
fadd
sbb
lcall
sbb
jb
lock
popf
rcrb
lea
lcall
je
shl
mov
push
rorb
jg
pop
out
rcrl
dec
inc
dec
and
fdivs
mov
xor
int
mov
pop
push
xor
inc
mov
fwait
int
sbb
mov
push
out
ljmp
mov
inc
mov
add
mov
das
decl
xor
add
dec
pop
inc
dec
mov
xor
xlat
cmp
xchg
fldl
sahf
dec
arpl
mov
repz
adc
mov
ret
popf
mov
in
mov
dec
mov
call
pop
xchg
mov
cmpb
test
adc
or
lcall
iret
xor
xor
fildl
jecxz
dec
and
adc
divl
jmp
incl
fisttps
lret
lock
lods
sbb
adc
dec
mov
mov
loope
mov
jns
ljmp
mov
xor
ja
add
lcall
pusha
outsb
mov
arpl
add
pop
gs
aaa
xlat
out
pop
mov
lcall
sbb
pop
push
fisttps
mov
iret
sbb
and
out
int
inc
mov
ds
lcall
dec
sahf
cmp
or
cmp
sti
xchg
cmpb
sub
xchg
jmp
pop
pop
out
mov
jge
sbb
subb
es
xorl
xor
imul
std
ss
pop
pop
adc
jmp
adc
pcmpeqb
fistpll
repnz
scas
mov
aaa
mov
ss
push
inc
mov
pop
icebp
jmp
sbb
dec
cli
jle
jo
lahf
pop
popa
fimuls
mov
dec
es
jge
andl
xchg
inc
jae
icebp
mov
orb
jns
jmp
incl
rolb
pop
push
movb
shll
mov
pop
mov
or
call
into
lcall
das
int
sti
hlt
lret
sbb
jg
xor
das
sbb
jno
stos
loopne
mov
mov
shrb
movsl
xor
stc
mov
lcall
fidivrl
jmp
movl
dec
sub
jmp
jae
pusha
mov
jp
lods
stc
js
lret
mov
inc
add
cld
dec
mov
fildll
mov
pushf
out
mov
fcoml
push
stc
bound
mov
incl
sahf
xchg
inc
scas
insl
pushf
aaa
mov
cwtl
jmp
out
lcall
incl
push
enter
and
dec
and
jmp
shrl
mov
stos
ffree
xor
mov
imul
fldl
lds
jne
cmp
inc
lcall
incl
inc
icebp
pop
fistpll
outsl
mov
dec
fucomp
cmp
daa
inc
ja
call
xor
rcl
int
cmpb
js
pop
sbb
nop
sub
insl
mov
push
icebp
lcall
movsl
xchg
and
repnz
pop
jns
jno
imul
xor
inc
mov
pop
push
push
cmp
je
xchg
xchg
jo
push
cmp
sbb
and
inc
inc
adcb
int
icebp
or
and
cmp
call
aad
mov
sbb
mov
lea
fsubrs
cli
incl
inc
sbb
lock
or
and
loope
xlat
je
repnz
loopne
or
push
lcall
das
adc
fisubs
add
pop
inc
sbb
loop
sub
in
cmp
lret
mov
push
sbb
aad
push
outsl
xlat
mov
jno
repnz
jnp
movsb
jg
jecxz
dec
arpl
inc
sbb
jo
pop
xchg
outsl
or
push
insl
pop
fmull
fs
jecxz
inc
outsb
subb
mov
sbb
enter
aad
inc
std
in
jmp
rcl
push
incl
cld
ret
arpl
jg
or
ret
or
mov
in
cs
jg
cmp
xor
out
adc
aam
push
mov
or
adc
jae
and
push
out
cld
out
je
out
push
push
cmpb
mov
incl
jg
pop
lret
pop
ljmp
push
rcr
inc
push
sbb
push
pop
add
cld
lods
lds
fs
and
jmp
mov
fdivl
push
cmpsb
pushf
or
loop
ljmp
inc
pop
flds
mov
jo
xchg
inc
mov
outsl
int3
loopne
fisubl
stos
les
mov
mov
ror
jp
cmpsb
hlt
lcall
cmp
shll
cld
nop
test
lods
hlt
mov
sti
repz
incl
and
mov
cld
pop
xchg
dec
cmpb
int3
loop
in
arpl
add
pop
and
lea
sbb
pop
push
lret
cwtl
into
jno
and
dec
stc
fsubs
test
mov
je
mov
pushf
cltd
or
jl
aas
mov
inc
loopne
mov
ds
xchg
movsl
jle
cs
cmp
int3
cmp
inc
fsub
mov
std
out
sub
in
testl
jecxz
loopne
adc
std
pop
inc
or
sbb
push
subl
lock
mov
call
scas
cmp
mov
pop
mov
adc
mov
ficoms
andl
loopne
cmpsl
jmp
add
rcrl
outsb
push
fistpll
mov
aas
xorb
inc
xor
call
ljmp
mov
push
insb
insl
lods
mov
adc
rclb
fisttpll
lods
mov
adc
jb
xor
pop
seta
das
sbb
or
jmp
push
dec
inc
dec
xchg
xor
inc
cs
xchg
xlat
sbb
mov
cmp
lcall
inc
es
and
xchg
sahf
repz
jp
mov
inc
or
adc
xchg
inc
sub
jns
outsl
sbb
bound
xor
xor
aas
mov
repnz
inc
rorb
add
ljmp
ja
comiss
xchg
mov
andl
or
ret
lods
repnz
xchg
loope
fcomip
add
cwtl
cmp
and
mov
cmpsl
call
mov
filds
mov
bound
xchg
cmp
add
mov
lahf
mov
push
xor
push
jle
enter
loopne
jge
and
push
mov
pop
cmpsb
xchg
push
mov
fwait
cld
repnz
rcl
xchg
rcrl
push
push
rclb
nop
ljmp
pop
push
enter
and
push
cmpsl
mov
sahf
mov
dec
sti
out
cltd
adc
dec
lock
insl
enter
mov
adc
xchg
mov
mov
jmp
sub
out
call
adc
lret
jno
dec
xlat
outsl
pop
pop
loope
cmpsb
insb
mov
adc
xchg
incl
jl
lods
nop
pop
ror
loop
ret
sub
rcll
lods
xor
xchg
add
into
fwait
das
lcall
xchg
add
in
dec
xor
fwait
jp
fidivrl
xchg
jno
jg
loop
call
add
jno
roll
mov
popl
jae
cmc
lret
jae
jp
mov
loop
jg
or
mov
shr
mov
inc
fistps
jp
in
mov
jmp
mov
stos
mov
aam
and
or
pop
enter
xor
or
pop
ljmp
push
mov
sbb
push
dec
jno
xchg
sbb
xor
imull
test
insl
inc
pushl
ja
rorl
imul
rclb
sarb
movsl
js
or
inc
ffree
and
call
mov
enter
push
pop
and
dec
jnp
lods
or
movsl
or
outsl
js
pop
mov
ljmp
ss
cmp
imul
mov
mov
adc
jmp
addl
cmp
pop
das
inc
test
in
scas
rorl
shlb
push
sub
jmp
aaa
aad
bound
mov
fmuls
xchg
gs
xchg
xor
mov
xorl
inc
jmp
test
rcll
push
cli
cmc
dec
and
ret
in
adc
mov
and
jmp
pushl
lea
sahf
inc
xchg
ljmp
pop
push
lods
loopne
cld
shll
call
loopne
icebp
stos
dec
rorb
fldl
test
rclb
mov
lcall
sub
push
fcomps
sub
cmp
ljmp
sub
aam
sub
cmp
add
sub
mov
pop
jg
inc
jo
in
mov
dec
pop
shr
mov
insl
ret
shlb
push
dec
ret
incl
sub
sub
mov
pop
and
dec
mov
push
inc
lock
sub
rcr
add
fcmovbe
or
mov
aad
jne
in
xchg
aaa
mov
idivb
sbb
inc
cmp
jns
aad
push
sbb
les
ja
out
xchg
sub
insl
daa
lahf
inc
push
decl
inc
movlps
scas
mov
scas
data16
push
mov
and
fbstp
hlt
lods
mov
shl
pop
mulb
sub
pop
test
cmpsl
jno
inc
fwait
movsl
push
aaa
imul
cmp
pop
jae
pushl
jg
pop
mov
jno
push
push
xor
int3
xchg
push
ror
sbb
out
out
or
pop
jmp
sbb
and
andl
out
aaa
stc
mov
iretw
cmp
push
stos
jmp
adc
inc
xor
pop
xchg
ficomps
subb
fstpt
add
jecxz
call
cmpsl
add
aam
inc
fcom
cmp
xor
mov
sbb
ja
test
outsb
leave
jp
popl
lds
pushl
mov
or
enter
lret
inc
jl
imul
jg
push
mov
lret
push
jns
popf
xchg
int
and
fsubl
add
ljmp
leave
dec
sbbb
xchg
push
add
mov
aas
add
jnp
cmpsb
mov
testl
xor
xchg
pushf
inc
inc
jg
or
adcb
add
loope
dec
jne
cmp
lods
test
lods
jae
and
lret
rorl
lahf
push
arpl
mov
les
mov
or
aas
popf
pop
mov
adc
jl
test
mov
pop
aas
push
les
js
lcall
mov
icebp
adc
jl
negl
sbb
ljmp
lret
popa
push
daa
dec
fildll
sub
fimuls
or
std
jmp
popa
xchg
push
sub
or
mov
cmp
push
aam
fwait
sarb
addr16
mov
aam
popf
dec
sub
jmp
push
xor
ja
sar
call
lcall
ss
cltd
mov
mov
out
sbb
sub
addb
inc
fldpi
test
jbe
stos
mov
mov
scas
mov
lret
pop
ss
mov
pushl
lods
pusha
pop
lods
fwait
inc
cwtl
fisttpl
mov
lret
ljmp
mov
cli
test
je
fidivs
rolb
cld
inc
call
jo
mov
iret
scas
mov
xchg
lcall
dec
loope
jmp
popf
lods
ss
xchg
jbe
mov
lea
cltd
lcall
dec
sub
pop
push
ftst
les
ss
xor
mov
sub
subl
xchg
repz
addr16
inc
add
jmp
jnp
dec
add
popa
es
dec
mov
add
in
add
mov
decl
ja
das
jle
cmp
int
xchg
jae
repnz
pop
jl
cltd
xor
jbe
mov
mov
decl
inc
clc
ret
jecxz
jnp
test
add
leave
fcoms
xchg
std
into
or
push
test
gs
cmc
adc
jmp
pusha
dec
fmull
adc
push
sub
in
scas
cs
jmp
mov
xchg
mov
sub
xchg
mov
or
jmp
aad
ficoms
add
popf
cwtl
lea
rorl
hlt
lcall
jmp
or
insl
movsl
inc
jmp
scas
out
adcl
stc
jl
push
or
lcall
push
adc
push
sti
mov
inc
jo
lret
mov
flds
xlat
cmp
ljmp
sti
mov
shrl
mov
mov
rcrb
jp
mov
or
mov
pop
aam
jle
push
mov
aas
push
popa
inc
xchg
call
xchg
out
fstpl
lret
out
gs
cltd
inc
ret
or
xchg
cmp
repnz
mov
out
mov
and
fidivrs
jns
jecxz
or
std
outsl
cli
incl
or
ret
jle
repz
mov
rcrl
xor
pushl
jno
je
out
dec
stc
jns
arpl
popa
xchg
insl
push
out
pushf
adc
loope
inc
divb
push
fbstp
add
mov
cmc
mov
sbbb
test
jmp
ret
cmpb
fdivl
popf
adc
fcompl
test
lods
inc
mov
in
mov
inc
pop
sub
daa
lock
adc
pusha
jne
cmp
push
ret
fucomp
sti
mov
jg
add
xor
xor
nop
test
inc
call
std
outsl
inc
shrl
add
sbb
hlt
icebp
stos
fisubl
into
fistl
enter
decl
aam
rorb
sub
sub
inc
or
scas
bnd
mov
js
mov
adc
jle
pop
cmp
push
dec
loopne
pop
lret
scas
add
outsl
jae
cmpsl
and
pop
push
loopne
and
lcall
insb
movsl
push
lds
mov
xor
dec
out
push
repnz
out
sbbl
push
lods
js
fscale
mov
jne
outsb
cwtl
lahf
cwtl
cmp
addr16
xor
mov
fmuls
sbb
out
ret
and
add
pop
push
pusha
mov
jg
dec
mov
inc
or
push
xor
bnd
jl
lahf
adc
insl
pushf
imul
lock
in
mov
cmp
add
and
andl
enter
outsl
cli
lcall
test
test
dec
cmp
push
das
in
cwtl
bound
dec
sub
leave
mov
cmpl
dec
jle
lds
adc
pop
in
jmp
mov
jmp
push
dec
or
xchg
cmpsl
gs
js
adc
or
cs
mov
pop
decl
loop
icebp
xchg
repnz
js
out
mov
test
pop
or
lcall
nop
sub
dec
cmp
jne
into
test
mov
mov
inc
nop
sbb
inc
test
cmc
fldenv
out
adc
dec
mov
pushl
sbb
cwtl
inc
dec
jmp
mov
fnsave
idivb
cmp
sarl
sbb
es
std
mov
jb
push
jg
les
push
jae
movsb
jl
test
sbb
or
inc
cltd
jne
cwtl
movsl
loope
mov
lds
fcompl
cmpsb
dec
lret
popf
xchg
sahf
mov
lret
neg
lcall
pushl
xchg
inc
or
out
jnp
or
and
jmp
add
mov
lcall
add
icebp
adc
adc
roll
mov
and
cmp
insl
aam
lcall
test
outsb
lock
adc
jne
xlat
fstl
sub
jo
dec
add
mov
mov
xchg
or
cmp
jnp
mov
dec
repnz
mov
test
rorb
xchg
incl
les
cmp
xchg
pop
daa
ret
scas
jo
push
push
add
ds
ljmp
inc
jnp
jle
xchg
push
imul
adc
fidivrl
ja
into
jns
or
aam
lcall
xlat
les
ljmp
lock
push
cmp
sub
gs
jg
inc
sbb
inc
adc
inc
jns
mov
es
dec
cwtl
mov
jbe
cs
pop
imul
fisubl
add
xor
cmp
inc
icebp
faddl
cmp
jl
stos
sub
pop
jmp
push
addb
scas
push
sub
clc
jmp
inc
aaa
xor
jge
into
xchg
jmp
inc
adc
dec
js
dec
pusha
push
incb
out
lret
xchg
xchg
sbb
addr16
sbb
xchg
ds
or
sub
inc
fadd
pop
cmp
incl
shr
mov
movsl
out
mov
js
xor
test
mov
fcmovnbe
jg
jmp
mov
add
jno
mov
popa
mov
bound
stc
fwait
cmp
jmp
add
mov
in
loope
inc
dec
stos
ds
inc
hlt
push
sbb
jno
pushl
cld
add
aam
imul
push
das
fmull
lods
pop
clc
call
adc
mov
insl
neg
inc
idivb
aam
ljmp
inc
jg
and
dec
stos
push
aad
pop
adc
or
lret
ret
mov
jmp
ret
push
sbb
push
cmp
xchg
les
out
pop
lods
dec
sbb
loopne
inc
pop
mov
pushf
or
pop
leave
add
stos
cwtl
incb
mov
lock
inc
xor
push
jecxz
incl
out
popl
mov
pop
dec
outsb
add
mov
daa
ds
adc
outsl
inc
scas
add
sbb
inc
aas
adc
decb
int3
and
sbb
imul
jl
call
inc
jbe
rcrb
xor
mov
sub
arpl
test
sbb
add
out
adc
pop
bnd
mov
and
pushl
and
push
inc
pushf
cltd
sahf
mov
dec
into
imul
sub
jge
imul
insl
lods
jno
or
sahf
jae
pop
mov
or
mov
out
sbb
lcall
outsl
lret
aad
loop
mov
imul
dec
int
inc
repnz
jmp
addb
out
fsubr
dec
push
xor
ljmp
pushf
incb
add
xor
outsb
int3
inc
pop
arpl
mov
test
cmp
push
das
jp
lds
inc
xchg
pushf
mov
scas
xor
mov
ljmp
dec
jns
fstps
and
xchg
sahf
lods
pop
test
cmp
inc
cmp
leave
or
lret
out
nop
fwait
test
pop
fs
hlt
out
test
and
mov
call
cmp
cmovge
xchg
lahf
jo
dec
pop
cmp
cmp
std
mov
dec
into
or
mov
or
adc
aas
pop
mov
sti
pop
movsl
mov
incl
adc
adc
pop
add
cmp
xchg
cmpsb
iret
xchg
push
inc
jnp
ljmp
gs
imul
movsb
xchg
mov
mov
jg
mov
mov
aaa
popf
rsm
mov
movsl
shll
and
fdivl
jp
pop
push
jb
pop
test
in
mulb
pop
xor
insb
clc
out
jns
add
cmp
inc
fcoms
addr16
dec
lock
rorl
call
cwtl
test
stc
sar
aaa
cltd
mov
imul
push
pusha
xchg
imul
ljmp
clc
ljmp
xchg
mov
jns
mov
rcr
repnz
adc
imul
ljmp
add
push
lcall
jbe
push
pcmpeqw
hlt
aaa
lcall
jb
or
adc
ljmp
sub
test
out
cmp
cltd
pop
stos
mov
ljmp
cltd
jecxz
jb
push
cltd
dec
and
xchg
mov
mov
into
ret
push
imul
cmp
cmp
fwait
incl
out
and
inc
sahf
cwtl
mov
adc
addr16
cmc
sbbl
or
mov
push
out
lcall
or
mov
push
mov
fadd
inc
iret
push
in
mov
scas
ret
incl
xor
add
insl
loop
adc
cmp
inc
mov
dec
pop
arpl
iret
mov
out
leave
test
test
adc
adc
mov
das
push
mov
movsl
cmc
push
ss
push
cmp
sbb
xchg
jo
add
int3
enter
test
fidivs
and
adc
mov
push
scas
outsb
push
mov
mov
cmp
insl
stos
test
insl
mov
adcl
ret
mov
push
jmp
inc
ret
lcall
lea
clc
jae
movsl
loop
lods
and
pushl
xor
or
push
stos
nop
sbb
scas
and
push
xchg
jne
in
ret
data16
mov
stos
fwait
mov
test
push
repnz
jl
into
lods
rclb
xorl
movsb
es
ljmp
mov
push
pop
mov
and
jp
or
lds
mov
mov
fcompl
pushl
inc
faddp
les
inc
xor
dec
sbb
test
aaa
call
push
xchg
mov
outsb
cmp
andnps
cmp
aaa
mov
dec
sbb
sub
fs
jb
incl
inc
adcb
pop
shrb
popl
mov
add
lock
sbb
out
adc
mov
fcomip
lcall
repnz
loope
arpl
shlb
xor
push
xor
sarb
movsl
adc
in
xor
andb
pminsw
test
pop
sbb
loop
stos
mov
dec
repz
xor
or
in
push
mov
xor
sbb
push
jb
mov
cmp
push
hlt
sub
fidivrl
xchg
ja
add
adc
lcall
dec
stos
jo
ljmp
xchg
js
test
jp
xor
mov
cmp
sub
push
push
jne
mov
cltd
lret
out
cmp
push
ss
pop
mov
incl
popf
sti
mov
xlat
jae
adcb
cli
mov
jne
add
mov
add
mov
pushl
adc
rcrl
mov
movsl
jae
inc
mov
not
jne
call
lcall
sub
jp
pop
mov
test
dec
rolb
pusha
loope
fists
mov
decl
idivb
add
scas
add
lret
sbb
sub
pop
js
jl
test
cmp
fmulp
mov
push
icebp
mov
push
cmp
jl
lcall
add
mov
dec
sub
cld
sbb
sub
mov
in
cmp
dec
test
js
push
push
aad
pusha
dec
mov
mov
mov
scas
pop
jbe
jg
decl
jns
sub
rorb
sahf
imulb
rcl
and
mov
loope
cld
in
cmp
add
sbb
jns
lahf
xchg
dec
xor
mov
cmp
movsb
xchg
add
imul
xchg
jnp
out
scas
loope
adc
jg
test
insb
outsl
sahf
mov
cli
inc
sub
jmp
lods
into
add
jg
orl
test
inc
loope
lcall
jg
divb
and
call
ljmp
cmc
pop
dec
push
mov
adc
stos
cltd
cwtl
pop
je
mov
incl
cmp
neg
adc
jl
insl
jl
cmc
insb
aad
aad
adc
in
push
and
decl
bound
push
in
insb
stc
movsb
cs
sahf
dec
mov
add
test
fdivrp
aas
push
das
cli
ljmp
push
inc
push
xchg
int3
lret
fs
and
add
js
xchg
mulb
incl
pop
ja
ret
sarb
inc
sub
sub
cmp
scas
mov
fcomps
dec
pop
jmp
sahf
sub
sbb
scas
add
dec
ss
clc
inc
pop
leave
push
and
mov
aaa
cmp
add
dec
sbb
out
jnp
push
sti
push
push
cld
fcoml
imul
mov
cmp
mov
pop
int
repz
gs
pop
cmp
add
jge
das
cld
mov
mov
call
jmp
je
out
int
hlt
jae
inc
lea
mov
ljmp
decb
ds
push
out
repnz
adc
imul
sti
fwait
add
lret
pop
icebp
jmp
mov
push
daa
xor
inc
push
add
push
leave
add
stos
addr16
and
in
push
test
jmp
bound
sti
nop
push
cld
data16
adc
in
outsl
lret
scas
xchg
dec
std
idiv
sub
std
mov
mov
fs
lods
lcall
stos
xchg
inc
lret
insl
lcall
add
je
mov
mov
insb
lods
call
jmp
inc
outsl
sub
sub
pushf
pop
jno
cmp
incl
pop
sub
xchg
imul
jp
push
subl
ljmp
mov
mov
addr16
and
push
jbe
pop
adc
pop
daa
gs
ljmp
push
or
test
es
fwait
cmp
mov
cmovns
call
push
cmpsl
sbb
jl
stc
test
stos
inc
shl
fucomip
hlt
ds
xchg
sbb
mov
cmp
add
adc
pop
das
decl
loopne
add
icebp
sbb
cmc
lds
rcr
fldcw
mov
decl
inc
out
pop
inc
enter
mov
push
in
testb
inc
sbb
fimuls
loop
shr
std
pushl
sub
hlt
cmp
inc
sub
cmpsb
mov
setl
cld
fiaddl
mov
xchg
inc
andl
je
pop
and
mov
adc
inc
jle
add
call
sub
cmpsb
rcrb
fstps
aas
push
insb
sarl
shll
jb
dec
push
ljmp
lds
adc
lret
mov
cmc
dec
push
dec
pushl
test
decl
mov
add
lahf
mov
push
out
es
test
adc
testb
inc
cmp
mov
cmp
es
mov
test
cmp
pop
daa
fucom
jg
cmp
mov
mov
jg
sbb
push
fists
ret
ja
lret
inc
fwait
js
add
insb
add
xor
sbb
dec
cwtl
mov
xchg
insl
push
inc
pop
cltd
sarl
std
or
push
sbb
add
call
in
ss
test
mov
in
push
fimull
insl
loopne
adc
jmp
push
dec
dec
mov
and
push
subb
mov
ljmp
cli
jmp
fisubl
addl
jnp
cwtl
push
cs
cmp
arpl
call
add
test
pop
sbb
sbb
push
cmpsb
jl
je
das
cmp
dec
dec
gs
jnp
aad
sbb
mov
push
inc
mov
mov
cmp
pop
mov
outsb
insb
dec
jns
adc
or
adc
jle
popa
test
pushl
rorb
pop
mov
xor
lods
jecxz
pop
hlt
jmp
loopne
inc
pop
call
mov
sub
andl
call
fdecstp
mov
pop
push
jo
xor
pop
xchg
jmp
aaa
addb
fs
data16
stos
push
or
xor
popf
mov
xchg
mov
push
jg
test
inc
cmp
arpl
sbb
and
dec
xchg
scas
mov
insb
movsl
inc
and
dec
mov
xlat
subb
xchg
dec
pushf
jno
fnstenv
adc
jne
scas
xchg
mov
outsl
and
mov
sub
je
adc
shrl
or
adc
ss
mov
jmp
push
fmull
mov
jmp
outsl
mov
dec
sbbb
sahf
daa
sub
mov
inc
test
xchg
pop
shlb
mov
int
lock
cld
pop
push
outsl
decl
sarb
pushf
pop
push
fwait
sub
xlat
cmpsb
aad
cmpsb
pop
adc
cld
mov
gs
adc
testb
fbld
frstor
call
xchg
mov
push
insl
mov
lret
mov
cmp
fnstenv
mov
fdivr
cmp
data16
data16
inc
loope
or
sbb
or
cmp
sar
dec
dec
enter
clc
std
mov
sub
lds
cmpsl
ret
es
ds
movsl
stos
lds
test
addr16
cmp
lret
dec
and
out
test
xchg
lods
mov
mov
cmp
sbb
cmp
aaa
cld
ljmp
jl
pop
hlt
pushf
flds
stc
jnp
lods
lret
sti
decl
rol
fs
mov
into
ljmp
sbb
pop
jmp
cltd
decl
les
aam
pop
adc
lahf
fidivrs
xor
mov
aam
xchg
cmp
push
jmp
sahf
mov
fs
fdivs
sub
test
sbb
sub
jmp
clc
push
mov
mov
sbb
test
arpl
xor
and
mov
mov
jnp
inc
stos
xchg
jbe
xchg
cmp
dec
mov
hlt
push
add
call
mov
sbb
dec
push
pop
iret
call
int
ljmp
sahf
fcomip
aas
lds
mov
jmp
pusha
mov
aad
pop
jbe
mov
jmp
addr16
cld
ljmp
sub
adc
pop
pandn
cmp
cltd
sbbl
ja
lods
je
fcmovnbe
xlat
xor
mov
decl
cmp
mov
stc
subb
out
ljmp
and
add
mov
lcall
jecxz
enter
sbbb
mov
test
dec
mov
cmp
cmp
sub
or
push
clc
mov
jg
or
xchg
cmp
jmp
push
dec
aas
cmp
out
hlt
mov
sbb
cmp
mov
sub
fs
inc
sti
mov
call
jp
test
dec
and
pusha
adc
cmp
inc
sbb
cmp
cmp
lcall
stc
pop
test
notl
push
add
push
sbb
into
mov
xor
mov
push
sub
xlat
add
and
mov
ret
jle
call
mov
mov
lret
lcall
icebp
push
gs
pop
sbb
leave
sub
xor
and
adcb
les
outsb
fcomps
std
ljmp
outsb
push
jnp
in
lods
jbe
stos
inc
push
xor
lcall
jae
movb
mov
xor
ja
or
pop
cmp
dec
xor
mov
cmp
hlt
inc
dec
xchg
sbb
xchg
xchg
fcomps
aam
sub
xor
lea
sbb
xchg
imul
and
lret
testb
pop
add
icebp
mov
lret
lcall
or
jecxz
es
sbb
pushl
jg
jecxz
loope
pop
sub
mov
stos
bound
ljmp
inc
js
arpl
push
lcall
lcall
mov
sbb
mov
test
imul
cmp
jns
jns,pn
std
jl
out
xor
xlat
fincstp
add
jne
mov
sub
decl
pushf
jae
push
cmp
inc
lock
inc
dec
dec
xchg
hlt
add
mov
xor
dec
mov
add
daa
in
push
imul
sub
pop
dec
ds
or
xchg
cli
push
lea
cmp
fs
outsb
add
cmp
es
test
xlat
cmpsl
outsl
es
jns
incl
popf
add
bound
mov
int
aam
test
dec
or
xchg
ljmp
mov
mov
cs
jae
imul
jns
mov
out
ss
cmp
sbbb
callw
scas
pop
mov
test
push
popa
lret
push
clc
rclb
xor
xor
movsl
fwait
and
jae
xchg
xchg
les
jg
push
fidivrl
scas
mov
or
rol
jbe
stos
repz
push
push
cld
aaa
push
cmp
jmp
aas
mov
out
push
loope
and
test
jl
stc
mov
jns
jle
xchg
test
xchg
fcoml
mov
sbb
jp
inc
fldcw
and
xchg
jmp
mov
mov
out
lods
inc
test
mov
and
lods
fsts
lock
dec
cmc
mov
dec
sbb
adc
xchg
lea
rcr
cltd
ss
decl
jg
add
cs
rcr
cs
mov
stos
mov
decl
mov
es
dec
in
push
pop
sbb
inc
sbb
imul
adc
call
lods
rcrl
pop
jns
jecxz
xchg
sbb
lods
repz
test
fs
push
adc
mov
js
jecxz
arpl
xchg
ds
jns
fwait
fwait
pop
insb
adcb
cwtl
test
std
jmp
push
mov
into
dec
inc
push
in
loopne
xchg
ficompl
outsb
dec
xchg
aas
jmp
mov
sub
jnp
mul
std
lods
and
gs
xor
inc
mov
out
out
pop
aad
xchg
test
aaa
push
adc
pop
lahf
in
sbb
es
dec
std
adc
lods
mov
insb
fcmovne
sub
xchg
sbb
mov
fmuls
jg
jns
add
mov
hlt
stos
xor
mov
outsl
mov
cld
jmp
sub
adc
subl
push
lcall
pop
dec
mov
fwait
xor
incl
fimull
cmovg
sahf
xchg
push
sbb
push
pop
int
mov
mov
jmp
aaa
mov
pop
scas
cmp
incl
ljmp
das
adc
cmp
lcall
insl
int
aaa
inc
cwtl
or
mov
lahf
push
ja
leave
dec
pop
leave
xchg
int
pop
or
sbb
lcall
pshufw
in
jo
dec
notb
fnstenv
jle
inc
call
cld
sbb
out
loopne
pop
pop
xchg
mov
jg
mov
in
idiv
ljmp
lcall
xchg
jp
dec
mov
pop
sbb
adcl
xchg
inc
scas
add
push
sub
stos
push
in
out
lods
inc
bound
addr16
or
sarl
leave
jb
les
out
aas
xchg
lock
ja
inc
jg
sub
popf
icebp
in
cmp
mov
pushl
sub
pusha
fs
xor
mov
push
cmovae
lahf
nop
dec
pop
dec
fistpll
movsb
outsl
mov
outsl
mov
pop
arpl
push
or
jno
das
cld
mov
dec
js
aad
ja
and
movsb
movsl
repnz
nop
test
call
decl
lock
rcrb
into
xchg
xchg
push
clc
mov
xchg
pop
inc
xchg
and
jmp
addr16
xor
push
stc
xor
cmpsb
fistpll
iret
inc
shl
sbb
cli
stc
test
jmp
inc
push
cmpsl
cwtl
mov
addl
adc
xchg
xor
sbb
add
stos
lea
fistl
out
enter
loopne
sbb
test
dec
jg
mov
pop
mov
test
int
aad
push
pop
xor
push
js
mov
xor
xchg
les
push
adc
stos
ljmp
inc
scas
call
dec
mov
jl
out
mov
scas
dec
or
xchg
fs
sarb
add
call
js
subb
jbe
neg
lods
lcall
and
call
mov
xchg
gs
xchg
cmpsl
ljmp
dec
cli
call
inc
jle
mov
jnp
cwtl
cld
cmp
mov
add
mov
add
jae
cld
ljmp
lods
push
movsl
jmp
shlb
test
or
mov
dec
mov
repnz
fcomip
shl
scas
aas
and
gs
movl
jb
movsl
das
fwait
inc
lods
aad
xchg
sub
es
out
inc
sbb
test
mov
and
call
dec
sub
loop
sub
or
adc
push
je
mov
jg
pushl
aad
adc
xchg
xor
sub
pop
das
xchg
lea
ret
rolb
or
lcall
in
push
movsb
rorb
ret
sub
shll
ret
pop
or
call
call
clc
mov
xor
inc
out
push
jmp
ja
scas
imul
cmpsl
inc
add
dec
mov
pushl
std
lcall
test
push
fstl
into
inc
int
cld
andb
jle
insb
cld
call
incl
loop
mov
xor
xchg
incb
aas
push
lret
ljmp
test
dec
push
jno
or
or
pushf
dec
stc
sbb
xchg
imul
sbb
lods
and
stc
adc
in
ljmp
add
cmp
pop
subl
or
stos
decl
cmpsl
jnp
aam
lret
pop
dec
mov
fstpt
std
add
fs
addr16
mov
ljmp
inc
dec
in
loope
insb
add
mov
mov
pop
sbb
jnp
sar
jmp
pop
pusha
in
pop
and
sbb
addb
stos
pop
ficompl
fsubrl
xchg
les
into
int3
adc
aam
jl
xchg
jge
mov
jle
fiadds
daa
mov
push
mov
rcrl
and
dec
ret
xor
mov
mov
outsb
xor
test
mov
sub
fcomip
xchg
push
inc
adc
aad
sbb
mov
mov
adc
insl
ljmp
inc
gs
dec
mov
insl
dec
out
je
and
pushf
stc
mov
shl
push
movsl
cmp
push
add
decl
iret
add
adc
movsl
xor
outsl
add
scas
mov
jl
fsub
std
cmp
sbb
jecxz
scas
js
pop
inc
loopne
mov
xchg
ljmp
dec
arpl
das
sbb
mov
add
scas
aam
les
or
fdivrp
mov
jmp
ret
ret
call
imull
fstl
bound
jnp
stos
stc
adc
or
xchg
cwtl
push
cwtl
add
cltd
jns
lods
adc
lcall
int3
lds
dec
fcompl
mov
sbb
inc
fld
popa
popf
sbb
xchg
aas
push
mov
adc
mov
popf
decl
or
mov
adc
or
iret
cmpsl
dec
add
outsl
cli
cmp
and
mov
mov
or
inc
testb
mov
and
jge
cmpsb
add
adc
and
dec
scas
mov
inc
sbb
dec
mov
les
dec
mov
sahf
aad
stos
es
fstps
jg
decl
test
push
jecxz
mov
xlat
in
data16
xchg
emms
mov
mov
mov
cmp
cli
xchg
addb
push
pushl
push
scas
dec
inc
pop
into
adc
mov
ss
dec
sbb
cmp
sub
dec
ljmp
insb
aad
or
hlt
cli
gs
xchg
sahf
jmp
inc
and
bound
mov
ret
cmpsl
mov
sbb
pop
stc
and
jg
fs
subl
enter
fisttpl
dec
clc
in
icebp
inc
pushf
fmuls
pop
in
push
movsl
arpl
dec
push
xor
inc
lcall
jb
inc
outsb
clc
push
lods
in
in
mov
rorb
repnz
mov
iret
shrb
cltd
mov
lcall
incl
push
fsubs
xchg
inc
jo
and
ret
push
xor
pop
add
lock
push
repnz
fisubs
loopne
xchg
cmpl
leave
mov
fucomp
mov
enter
test
cmp
pushl
mov
dec
mov
test
sbb
inc
push
orb
ljmp
inc
inc
mov
pop
dec
sbb
repnz
pop
inc
sub
imul
shlb
inc
out
ds
push
das
and
loopne
aam
pushf
push
iret
aas
in
sar
incl
lea
mov
pop
cld
cli
in
pushf
jno
xor
lahf
ljmp
stos
pusha
and
popf
push
mov
inc
bound
push
jnp
test
imul
call
ret
test
push
addb
pop
loopne
pop
xchg
lods
dec
pop
test
je
xor
push
nop
fwait
ret
mov
cmp
add
call
push
jae
jmp
xchg
clc
add
jo
add
xchg
gs
mov
stc
incl
int
out
sahf
xor
loopne
jge
pop
movsl
add
jmp
push
inc
shlb
or
inc
cs
popl
ret
push
jb
daa
mov
mov
mov
pop
mov
std
fsubrp
mov
mov
in
lcall
lret
mov
sbb
mov
mov
add
fidivs
test
clc
test
scas
dec
mov
cmp
cmp
xor
mov
push
adc
sarb
aad
mov
xor
push
cmp
mov
mov
cli
ljmp
lret
pop
pop
out
pop
mov
pop
pop
sub
mov
fxch
loop
clc
jg
and
neg
cmovnp
call
adc
push
ljmp
vmovdqa
addb
bound
cmpsb
xorl
call
call
loopne
xchg
jmp
add
jae
ljmp
and
xor
outsl
jg
and
cmp
jo
and
mov
lret
xchg
push
mov
das
cmp
pusha
cmp
std
adc
ljmp
dec
add
jl
inc
mov
out
pop
int
jle
dec
ljmp
sub
push
adc
test
cld
jns
sub
jmp
sub
mov
mov
or
push
in
pop
in
fwait
test
xor
das
dec
fs
jmp
pushl
mov
cltd
in
fmuls
repz
mov
inc
jne
sbb
and
pop
jl
stc
enter
mov
push
push
pop
int3
inc
movsl
mov
mov
dec
je
fildll
mov
incl
stos
popf
cmp
loop
pop
dec
jmp
out
js
sub
lcall
push
incl
ljmp
push
ret
pop
fsubs
lods
outsb
jbe
fisubs
push
cwtl
mov
jmp
xchg
or
fisttpl
scas
and
cs
push
lcall
hlt
lahf
lret
xorl
mov
mov
insb
sub
add
inc
cmp
cmp
jp
xor
hlt
push
mov
push
mov
pop
xchg
pushl
or
push
jns
call
lea
call
pushf
les
push
mov
inc
cmp
les
mov
or
add
test
add
sbb
pop
inc
dec
xorb
fs
test
push
jae
or
pop
ss
js
rol
icebp
jg
out
cmpb
cmpsb
les
std
incb
fdivl
enter
into
shlb
lods
divl
cli
sti
notl
popf
or
push
mov
int3
hlt
inc
ret
incl
pop
sahf
sbb
cli
jns
int3
jge
mov
xchg
mov
fwait
lods
das
cld
incl
inc
out
mov
stos
stos
cmp
adc
imulb
xchg
pop
hlt
sbb
mov
add
xlat
xchg
inc
idivl
jle
mov
sbb
sti
sub
fcomip
mov
movsb
daa
test
fistps
scas
movsb
push
jl
cmp
sahf
rolb
jmp
ja
pop
aam
fld
mov
add
mov
lea
sub
je
das
jnp
and
pop
push
inc
mov
sub
xor
pushl
in
mov
rcl
in
icebp
hlt
stos
sar
dec
push
ror
or
and
aad
roll
rolb
sub
xor
cs
gs
mov
jbe
lcall
push
movsl
jmp
sub
popf
addb
in
pop
sahf
nop
xor
xchg
mov
out
mov
jmp
in
and
dec
cmpb
inc
in
call
int
aaa
fcomps
add
cmp
cmp
mov
movb
cmpsb
frstor
xchg
aas
adc
call
sarl
aad
pop
in
push
xchg
ret
xchg
mov
mov
and
sti
or
inc
iret
push
pop
mov
mov
roll
in
stos
insl
dec
dec
xor
jnp
xchg
shrb
sbb
sti
lcall
mov
push
mov
cmpsl
pop
div
mov
js
jg
push
lret
das
lods
dec
push
jge
dec
dec
jmp
das
testl
push
mov
orl
movsb
push
sbb
xor
add
cmp
addb
sbb
pushl
jl
mov
adc
mov
inc
and
mov
test
ja
pop
idivb
dec
or
out
out
shlb
jnp
shll
pop
lock
mov
fcoms
aad
jg
ss
ljmp
xchg
cwtl
fmul
popl
hlt
dec
and
mov
sbb
outsb
std
sub
jo
ljmp
xchg
push
in
and
das
dec
test
ljmp
xchg
sub
ret
fists
adc
fimuls
cmp
push
jbe
or
cmp
das
xchg
lahf
jb
and
jp
mov
cmp
jg
ucomiss
fldt
aad
hlt
dec
stos
cs
adc
jns
mov
call
sarb
mov
dec
pop
dec
jo
mov
lcall
aas
pcmpgtw
mov
push
jg
incl
cld
dec
lahf
lds
and
ret
stc
ljmp
test
call
sub
mov
ret
add
adc
mov
icebp
icebp
decl
sub
and
cs
adc
enter
in
into
lcall
adc
cmp
jge
addl
and
dec
pop
jnp
pop
pop
jb
add
jno
mov
mov
icebp
ljmp
mov
daa
adc
add
dec
aas
inc
jg
adc
call
aam
push
sbb
inc
add
add
lds
push
into
inc
enter
mov
repnz
call
push
pushl
lods
mov
test
lods
mov
ficomps
pushl
add
cmc
push
out
xor
ja
movsl
fnstsw
xchg
pop
and
fs
jmp
or
psubsb
jo
pop
lret
test
insl
lcall
scas
xor
das
lcall
xchg
ret
ja,pt
inc
in
push
roll
cmp
scas
sub
cmp
cmc
jns
sbb
jmp
sbb
push
xchg
inc
sbb
fdivrs
cmp
push
rorb
bound
xor
pop
out
in
cmp
insl
inc
mov
ds
ss
mov
inc
dec
push
rcll
into
rclb
adc
sahf
push
mov
jp
ret
sub
cmp
mov
test
push
js
mov
dec
and
adc
inc
jns
ja
mov
sub
lock
je
out
pop
shr
ret
cld
pop
add
lcall
pop
insl
add
stc
rcl
ret
sahf
test
push
mov
and
push
shr
dec
xchg
or
mov
cmp
mov
inc
push
dec
aad
sub
test
out
hlt
jle
insb
adc
mov
sbb
int
or
push
jmp
dec
jnp
sbb
jno
sbb
pushl
cltd
sbb
fadd
std
shrb
or
incl
and
inc
xchg
ss
cmp
add
pop
mov
decl
cmc
xchg
add
cmp
jno
out
adc
push
xchg
dec
xor
mov
ljmp
enter
xchg
push
daa
mov
xchg
inc
and
jo
cmpsb
ret
adc
inc
loopne
mov
incl
xor
mov
mov
sub
xchg
xchg
mov
loopne
aaa
bound
jge
out
test
outsb
outsl
xor
or
out
add
xchg
add
inc
inc
xchg
daa
jge
call
dec
in
iret
jns
inc
repnz
mov
mov
fisttps
hlt
das
ret
aas
pop
jnp
insl
in
pop
mov
dec
pop
mov
insb
cmpl
mov
mov
inc
stos
rolb
ret
mov
or
push
jle
lahf
fisttps
sbb
shlb
pop
mov
fwait
inc
mov
push
mov
xchg
pop
dec
dec
cwtl
sub
xor
outsb
hlt
mov
cmp
adc
cmp
inc
dec
cmp
lea
add
push
sbb
lods
pop
sub
or
sub
mov
or
mov
pop
int
xchg
dec
shl
jmp
clc
sbb
push
stc
pop
pushf
xchg
cld
cmp
popf
das
jg
ljmp
gs
cli
dec
ja
jne
or
cmpl
adc
lods
mov
jp
xchg
xchg
add
call
mov
sub
pushf
dec
pop
mov
jp
xchg
push
lds
inc
lahf
ljmp
pop
jbe
xlat
mov
xlat
push
sti
out
mov
or
mov
pushl
cmpl
icebp
push
in
inc
addl
stc
outsb
cmc
sbb
nop
int3
xchg
mov
ja
jo
mov
loop
repnz
jecxz
sub
rol
mov
adc
dec
stc
adc
test
test
lret
orl
mov
decl
sbbl
nop
mov
mov
xlat
sbb
daa
jae
cmpsb
cli
nop
mov
cmp
out
sarl
ss
mov
rolb
popa
int3
mov
decl
jmp
push
inc
pop
lret
je
pusha
bound
xor
xchg
popf
mov
aam
imul
ljmp
push
xor
lret
sbb
and
lahf
add
repz
inc
js
les
add
pop
outsb
clc
push
adc
lods
pop
sbb
xchg
dec
repz
push
jne
dec
lcall
mov
mov
testl
xlat
jmp
fwait
inc
fcmove
aad
ret
lcall
rol
insb
push
inc
fdivl
dec
mov
clc
push
imul
cmp
cli
subb
xchg
push
adc
pop
sub
ds
dec
repz
mov
decl
lods
xchg
notl
fcomp
daa
inc
inc
repz
je
xchg
jmp
jns
xor
lcall
add
cmp
push
ljmp
jbe
mov
xchg
sub
lret
mov
clc
enter
fistps
ss
add
cmp
outsb
data16
pushf
in
sbb
scas
xchg
jo
xor
data16
mov
inc
inc
aad
push
sub
pushl
sub
in
pop
data16
ss
inc
lock
loope
jg
push
repz
jle
mulb
mov
std
insl
sbb
aas
and
xor
rorb
jb
push
xchg
outsl
pop
mov
cmc
call
out
mov
mov
xchg
sarb
mov
incl
adc
fwait
stc
shl
fucomip
cltd
mov
ss
aas
js
fnstenv
clc
push
cld
call
enter
in
rorl
lock
das
inc
int
aad
pop
incl
je
std
push
imul
ret
aam
mov
push
call
iret
call
pop
cmp
iret
sbb
sbb
jp
popa
fdivrl
test
dec
gs
inc
fdivs
incl
cmp
mov
test
pop
lcall
data16
dec
xchg
xchg
jp
in
pushf
pushl
rorb
push
sub
mov
pop
and
cli
or
stos
xchg
enter
push
fisttpl
scas
fsubs
add
push
ljmp
int3
jl
mov
pushl
lock
test
lods
mov
aas
clc
xchg
ret
push
and
icebp
or
lcall
and
in
adc
aaa
mov
sbb
icebp
mov
adc
aam
ljmp
in
xor
inc
out
hlt
incb
sub
aas
ror
sbb
mov
flds
dec
pushl
mov
adc
in
mov
dec
out
cmp
dec
test
jg
dec
add
xor
sbb
dec
cltd
fwait
adc
inc
clc
lret
andl
stos
test
sub
push
dec
mov
push
pop
and
shlb
push
pop
cmp
and
fidivl
push
push
pop
movsb
cmp
push
shll
fcmovb
pop
roll
insb
mov
shlb
xchg
insl
insl
sub
mov
fcompl
test
pop
cs
sub
xor
push
adc
jp
xchg
lcall
or
xorb
divl
mov
xchg
adc
ljmp
and
jp
add
adcb
inc
cltd
mov
adc
lds
insl
out
push
or
outsb
roll
mov
dec
data16
dec
and
cli
fidivs
adc
int
out
ret
es
cwtl
jge
pop
mov
mov
dec
pushl
or
adc
jnp
jmp
mov
adc
or
lcall
push
leave
cmp
adc
clc
sbb
mov
or
sub
int3
test
jne
xacquire
sti
fisttps
call
nop
rorl
cwtl
imul
push
cmp
mov
fwait
jno
cmp
jnp
ss
inc
nop
stos
repnz
lcall
sub
sbb
cmc
sub
roll
lds
add
arpl
pop
push
xlat
test
iret
cmpsl
in
imul
cmpsb
pop
mov
xchg
add
testb
xchg
movsl
mov
jne
test
or
scas
add
push
sub
arpl
xchg
push
sub
loope
lods
add
inc
ljmp
sub
cmp
xor
ljmp
add
pushf
fmuls
ss
pushl
in
push
mov
mov
sub
pop
outsl
rolb
push
push
pushl
gs
testl
adcl
mov
pop
pop
mov
mov
outsl
loopne
and
addr16
loop
js
mov
dec
mov
fdivr
add
jb
inc
call
push
sbb
enter
pop
ds
mov
in
dec
inc
jns
pop
leave
sub
ror
pusha
jg
repz
xchg
and
and
dec
mov
ss
fisubrs
sbb
popa
jecxz
imul
adc
xor
pop
pop
inc
sub
mov
xchg
adc
test
call
mov
in
cmp
loop
loope
aam
jmp
outsb
or
movsb
cltd
xor
xchg
sub
pop
dec
jl
ljmp
push
sbb
bnd
dec
mov
sbb
aad
int
jp
sbb
cs
jns
and
lcall
xchg
mov
push
add
push
jg
xor
decl
inc
inc
xchg
mov
shr
push
push
inc
mov
push
add
mov
addb
ret
in
mov
or
mov
imull
and
push
xor
mov
jbe
xchg
fcoms
ljmp
sbb
daa
mov
test
icebp
mov
sbb
nop
loopne
pop
loop
push
lret
in
jmp
roll
jb
fwait
mov
mov
je
push
or
or
rcrl
xlat
adc
add
jp
loop
scas
or
hlt
cwtl
xchg
push
fmulp
or
pushl
cli
scas
movsb
xor
int3
dec
lcall
into
push
int3
icebp
call
call
in
push
movsl
add
xlat
push
orb
outsb
loop
dec
sub
and
fisttpll
cli
data16
sub
push
inc
sub
dec
xor
lret
test
aam
pusha
sub
mov
add
lcall
sbb
loope
add
fcoml
dec
xor
mov
in
movsb
push
movsb
call
mov
icebp
sbb
ljmp
subb
gs
repz
dec
sbb
scas
aam
jns
add
shlb
pop
std
ljmp
rorb
pop
pop
fcomip
addr16
push
sub
std
shrl
test
jbe
cmp
push
or
push
fwait
and
mov
rcr
int3
loope
ljmp
mov
mov
sub
dec
and
outsb
lods
outsb
xchg
lods
adc
lcall
sub
pop
cmp
lcall
lock
lcall
lds
mov
rclb
pushf
addb
cs
adc
adc
or
mov
fimull
sub
loopne
mov
jmp
negb
cmp
cmp
shlb
ret
xor
dec
js
or
sub
lds
pushl
clc
jno
sub
sbb
dec
add
mov
mov
add
pushl
insl
sbb
mov
das
xchg
mov
cmp
jnp
lods
mov
popf
sbb
pushf
mov
daa
imul
sbb
fmuls
rol
mov
mov
pop
adc
lahf
inc
aad
fstpt
rcr
pop
inc
rcrb
pop
aaa
ret
fstps
fcoml
mov
sbb
cli
loopne
cmc
ret
push
repz
cltd
test
hlt
sti
push
stc
inc
les
pop
dec
xlat
int3
sbb
inc
push
or
sub
in
loopne
ljmp
mov
or
imul
dec
test
incl
pop
dec
rolb
and
iret
dec
sbb
ljmp
mov
add
adcb
out
push
cmp
scas
fmulp
xchg
mov
leave
sub
push
jbe
ss
sub
jle
mov
dec
jmp
sti
jle
cmp
pop
subb
mov
mov
scas
scas
mov
hlt
and
cmpsl
sub
nop
hlt
arpl
lahf
out
ss
push
cmp
ljmp
subb
lock
push
fistps
jge
mov
xchg
fwait
mov
repz
lcall
and
popl
xchg
sahf
in
lcall
jmp
adc
mov
mov
stos
imull
lods
lds
xor
and
stos
incb
subl
mov
push
fdivrl
or
decb
sbb
inc
adc
inc
shlb
aam
add
cli
call
push
jns
and
mov
jmp
call
dec
or
out
push
or
pop
push
in
mov
scas
jmp
jmp
mov
push
inc
aaa
aam
jb
or
adc
push
imul
jnp
sarl
dec
hlt
outsl
andb
popa
daa
lea
lock
or
adc
adc
in
sarb
loope
sahf
aas
adc
decl
in
mov
adc
in
mov
lock
jno
pop
jle
xchg
out
fsubr
adc
decl
adc
mov
sub
jnp
out
dec
fmul
inc
es
mov
pushl
scas
pushl
mov
add
mul
sbb
in
fcmovu
loope
popf
push
inc
fisttpll
pop
scas
pusha
sti
into
and
sub
test
lock
jmp
or
cs
push
mov
xor
std
add
outsl
ja
rolb
push
cld
bound
sbbl
ljmp
inc
adc
push
fsubl
xor
loope
mov
shrb
jnp
fwait
cld
fdivp
decl
cmp
sub
jg
lock
mov
out
cwtl
fnsave
lcall
jecxz
int3
pop
test
adc
mov
mov
call
pop
ljmp
xabort
add
imul
push
loope
pop
inc
andb
mov
push
mov
mov
or
mov
adc
cld
aam
sub
fisubrl
mov
icebp
jp
jbe
mov
mov
mov
incl
pop
xchg
dec
pop
roll
and
pop
rcr
fwait
ljmp
mov
lcall
xchg
fsin
andb
sbb
mov
lock
mov
call
jmp
and
mov
jg
out
dec
dec
sub
mov
cmp
xor
adc
idiv
decl
and
decl
nop
pop
aas
int3
sbb
push
adc
repnz
decl
inc
adc
mov
cmp
or
ljmp
addr16
xor
nop
mov
jle
jmp
jmp
cltd
imul
enterw
les
and
imul
jmp
jge
leave
sub
dec
repnz
shrb
bound
fsubrs
push
js
ljmp
xchg
push
sbb
jnp
xchg
insb
cmp
out
push
fst
daa
jl
outsb
cli
cmp
fstpt
sub
loope
xchg
jns
loop
icebp
out
int3
lds
push
and
mov
pop
mov
adc
dec
aaa
or
call
xor
jge
inc
mov
inc
dec
mov
mov
xchg
jmp
cwtl
lock
sbb
mov
inc
xchg
cmp
out
out
out
add
mov
rcr
jo
out
inc
pop
dec
loopne
gs
inc
jp
call
jnp
out
lds
xor
popa
adc
mov
cmp
sub
xchg
jecxz
cmp
rolb
sub
xor
pop
sub
inc
and
std
push
pop
jg
test
xchg
es
mov
push
nop
or
mov
ja
inc
jg
cmp
dec
ds
jo
rolb
shl
sub
in
sar
pushl
ja
pop
sub
pop
mov
mov
mov
pop
arpl
js
lods
adc
mov
incl
jl
test
out
pop
lret
push
sbb
xlat
jnp
xor
cli
sub
mov
out
xchg
or
enter
call
shlb
mov
xor
mov
xlat
cmp
jge
jo
jmp
lahf
fsubrs
push
inc
cwtl
dec
jl
or
lret
inc
xchg
dec
clc
push
in
dec
subb
mov
sub
xchg
cwtl
pop
push
aam
fs
lods
lea
fidivrl
in
mov
push
mov
xchg
cmp
pop
push
ljmp
mov
stos
push
out
cltd
jg
loopne
add
test
hlt
sbb
out
and
incl
jl
xor
movsl
dec
mov
pop
fistpll
iret
in
mov
test
sbb
or
iret
jbe
stos
sti
mov
add
xor
or
cmpsl
mov
pop
imul
mov
fcmovne
sbb
loopne
mov
mov
adc
adc
lcall
pop
or
mov
sub
sbb
pusha
lahf
adc
ljmp
and
fcomip
sub
sub
in
xchg
add
jbe
jle
add
push
cmp
jo
pushl
pop
or
ret
ret
push
xchg
jmp
pop
xor
inc
sub
xlat
aad
push
test
mov
loope
insb
into
out
xchg
pop
insb
mov
or
int
decl
mov
popa
mov
aaa
dec
sbb
mov
mov
sbb
cmp
mov
push
add
jl
pop
push
in
xor
mov
sbb
lcall
cmp
mov
dec
notl
leave
insl
mov
ljmp
js
mov
xchg
addr16
sub
fistps
mull
imul
pop
mov
xor
xlat
push
aaa
notl
in
mov
sub
push
hlt
xchg
movsl
cmp
jmp
and
popf
repz
shlb
in
xor
addr16
int
nop
jo
pop
pop
aam
movsb
fcomip
lcall
addb
fistl
add
pop
cmp
jg
jmp
add
xor
sub
jo
xchg
shl
gs
mov
jmp
dec
sub
jge
jecxz
fcompl
lahf
push
sub
andl
xor
stos
rorb
xor
in
cltd
out
shl
incl
push
in
and
add
pop
aas
mov
xchg
int3
push
les
and
xchg
call
test
sbb
fbld
xor
and
mov
call
fisubrl
popf
push
xchg
sbbl
fidivrl
js
jo
pushl
push
vsqrtps
mov
cmpl
imul
test
in
pushl
cmp
les
and
cld
fiadds
push
push
int
xor
aaa
lcall
clc
negb
inc
ds
mull
sbb
inc
loop
mov
push
cmpb
jmp
sbb
xor
sbb
insl
repnz
mov
pop
icebp
popa
sub
or
incl
pop
insb
sbb
jmp
push
jle
dec
test
xor
movsl
je
popw
sti
out
call
std
push
lret
loop
mov
jecxz
movsb
imul
out
dec
jno
dec
jmp
cmc
scas
pushl
lahf
daa
mov
int3
out
inc
shl
adc
sbb
push
test
repz
sti
pushl
dec
lods
dec
jecxz
xor
dec
push
mov
dec
pop
mov
mov
jae
and
sbb
lcall
pop
xor
leave
mov
or
mov
xchg
and
inc
xchg
sub
or
xor
incl
xor
sbb
dec
ds
jge
mov
jno
in
pushf
ljmp
dec
dec
fs
mov
fstpt
fdivl
jno
test
outsb
test
pop
ficoml
sub
mov
incb
pushl
enter
es
pop
sub
jg
daa
stos
pop
out
movsl
std
hlt
cli
fsubrl
sarb
push
fdiv
jg
or
jns
pusha
ja
or
movsb
pusha
and
sub
add
imul
in
pop
jl
cmc
jmp
popa
repz
lea
cld
push
fsubrp
xchg
cs
into
mov
lds
dec
and
test
xchg
rcll
lcall
cli
insl
cli
pop
in
pop
movsb
lds
adc
sub
pusha
jno
inc
lret
ret
mov
inc
ljmp
cmp
cltd
cli
dec
cmpsb
push
pop
outsb
ljmp
jo
ljmp
incl
pop
repnz
pop
adc
pushl
pop
and
add
les
leave
outsl
les
js
ljmp
cmc
call
sarb
out
dec
add
push
push
addr16
sti
clc
call
pop
dec
jb
mov
ret
mov
xchg
addr16
inc
xchg
xor
mov
and
out
cli
dec
pop
xchg
cwtl
jb
dec
mov
fildll
mov
jmp
cmp
pop
cltd
icebp
enter
xchg
push
inc
inc
push
movsb
cmp
lcall
jl
xor
dec
xor
lods
stos
adc
cmp
roll
jns
jg
pushf
les
push
mov
test
fdivrs
xlat
mov
push
push
and
or
test
testb
adc
into
and
aad
add
fiaddl
lcall
jg
nop
insb
outsb
add
cmp
dec
mov
out
jge
pop
push
loope
lcall
not
fsubrs
scas
lret
data16
imul
test
inc
xchg
push
lock
ljmp
jmp
mov
repnz
and
lods
imul
fbld
dec
jmp
mov
and
sbbl
insl
cmp
loope
rorl
xor
ds
cmp
aam
push
ss
loop
lretw
cli
dec
add
pop
imul
imul
incl
xchg
xchg
or
andb
cmp
ds
iret
dec
and
popf
andb
nop
adcb
and
mov
jecxz
add
fisttps
clc
or
pop
shr
push
movsb
jle
movsl
or
jne
repz
scas
jb
mov
leave
push
lcall
pop
pop
orl
cmpsb
ljmp
test
ljmp
loop
out
insl
cmp
jbe
mov
leave
mov
lcall
lcall
fwait
pop
arpl
and
ficoml
out
sbb
pop
mov
decl
adc
push
lcall
lea
imul
fbstp
dec
xor
loop
xor
lcall
pop
test
jns
jp
fadd
xchg
stc
mov
cmp
pop
mov
xlat
incl
pop
adc
inc
mov
call
mov
jo
adc
ja
das
xor
jb
push
push
jns
lahf
pop
pushw
push
pop
and
fstpt
and
cli
pushl
hlt
jns
es
stc
into
push
pop
mov
cmp
ret
sub
bound
leave
je
idiv
push
xor
pop
leave
and
add
mov
or
ljmp
cmc
int
push
lcall
push
loop
pop
sbb
fildll
cmp
pop
je
cmp
mov
nop
sub
incl
cmpsb
mov
lcall
xor
mov
mov
mov
lret
leave
cli
add
cwtl
aas
dec
lcall
fidivrl
addb
jo
and
xor
and
stos
sub
jp
cmp
shrl
jb
test
into
pop
fstpl
out
fcmovnb
cmp
int
gs
mov
inc
push
in
incl
push
pop
inc
jno
call
push
add
divb
xor
cwtl
into
sub
jg
jmp
outsb
push
into
dec
jge
sahf
sub
push
addb
inc
and
pushl
in
push
out
lret
sub
scas
mov
cwtl
jle
or
mov
bound
dec
jne
clc
incl
lock
sbb
sbb
mov
xchg
lods
sbb
and
fcomip
lcall
xor
mov
mov
imul
testb
rcll
sub
cli
clc
pop
inc
adc
rorl
lods
cwtl
sub
repnz
inc
mov
test
leave
pop
xorb
testl
and
pop
cmp
and
ljmp
sbb
aaa
call
cmc
arpl
push
inc
addr16
int
je
xchg
fimull
push
mov
jmp
enter
push
mov
aad
adc
jae
ljmp
cmp
aas
or
and
addl
push
ret
cmpsb
js
orl
pop
and
jbe
cmp
xchg
out
out
es
lcall
pop
cmp
xchg
mov
incl
cltd
std
dec
cmp
repz
movsl
xchg
mov
std
jg
mov
andb
fsubr
add
pushf
orb
cld
addr16
fildl
cmp
inc
outsb
mov
or
cli
sub
lock
pushl
and
inc
lret
sub
lods
pop
xor
pushf
mov
jb
out
test
and
xor
pushl
cld
lahf
aas
ds
mov
in
adc
sti
int3
cmpb
rorl
mov
cld
enter
int
adc
loopne
lret
jne
sbbb
dec
ljmp
adc
cmp
fisubs
inc
call
orps
xchg
shll
lcall
pop
or
out
push
push
cld
sbb
dec
sbb
int3
mov
xor
cmc
push
pop
ja
jmp
and
out
xorl
xor
and
xchg
push
mov
shrl
cs
lcall
cmc
mov
test
sarl
inc
mov
mov
xchg
js
mov
jmp
fst
pushf
fistpll
xchg
pop
sahf
pop
xor
add
gs
std
pop
pop
ret
and
pushl
mov
jmp
orb
insb
enter
push
mov
aaa
int
lcall
xor
dec
shll
sub
test
dec
dec
xchg
repnz
jnp
adc
std
pushl
cmp
fidivl
ret
adc
pop
push
mov
jne
cmp
stos
cltd
adc
sub
ljmp
mov
cmp
jle
aad
jp
scas
inc
sub
ja
cltd
lods
insl
mov
pop
icebp
jmp
cmp
mov
or
sbb
rcll
and
fbstp
decl
repnz
cli
and
pop
lods
adc
xor
pushl
adc
jg
adc
dec
mov
mov
ds
repnz
ljmp
decl
push
ret
push
sbb
bound
aas
jnp
je
cmp
leave
fdivrl
clc
fcmovu
int
or
xlat
inc
pop
lret
push
das
add
push
pushf
imul
fdivr
inc
test
call
xor
cld
add
cwtl
fldt
xor
mov
adc
ljmp
subb
jp
enter
push
pop
cltd
mov
pushf
mov
push
cs
inc
sbb
out
shr
subb
mov
jo
lds
scas
xchg
or
and
into
jle
aaa
incl
xlat
pusha
out
push
push
stos
sbb
lahf
divl
call
adcb
mov
mov
lret
sahf
xor
fiaddl
add
mov
adc
adc
sbb
push
jbe
jmp
jns
mov
mov
inc
fcomip
call
testl
push
dec
leave
js
xchg
pop
nop
iret
dec
cmc
sbb
incl
xor
leave
xchg
icebp
jmp
pop
mov
dec
aas
xchg
cld
jno
icebp
movsl
pop
jbe
xchg
sub
imul
xchg
cmp
mov
roll
sub
add
mov
sub
movsl
insb
mov
incl
jl
fmul
xor
cmp
lods
mov
incl
insb
mov
and
addr16
inc
inc
lcall
call
into
imul
cld
sahf
ss
ja
movsb
call
mov
push
xor
sbb
cmp
jb
mov
jns
sub
sub
dec
inc
and
push
sbb
pop
std
call
pusha
sbb
repz
sub
pop
add
lea
xchg
fnstenv
addr16
pushl
clc
inc
and
adc
iret
xchg
pop
mov
mov
sbbb
push
data16
push
sub
or
dec
sbb
out
test
scas
dec
jmp
cmpsl
sbb
mov
lock
push
gs
lret
lds
pushl
pop
lea
flds
test
das
fwait
or
hlt
mov
cld
pop
js
pop
imulb
test
outsl
xchg
mov
cld
dec
xor
or
fisubrs
enter
jle
lahf
out
lret
and
loopne
stos
jge
xor
mov
call
dec
mov
add
lock
test
decl
push
add
mov
vphaddubw
cmp
jno
mov
les
sub
ljmp
ljmp
mov
jno
je
aaa
pop
in
jg
repz
lods
pushl
std
xor
cmpsl
sti
repz
cli
popa
rclb
loop
lret
xchg
ljmp
dec
or
test
ja
nop
inc
shl
shlb
pop
add
decl
inc
and
imulb
and
and
icebp
js
cmp
xor
add
mov
sbb
mov
inc
sub
popf
or
cmp
mov
outsl
lahf
clc
mov
ljmp
int
hlt
jle
in
jle
add
fwait
incb
in
mov
cld
je
popa
insl
das
adc
fcomip
sub
xor
xchg
pop
mov
lods
inc
and
cmp
in
push
in
pusha
imul
jns
sub
xor
push
jo
jb
pop
or
ja
jb
call
jno
xor
pop
test
popf
push
adc
rcl
add
sahf
popf
cs
inc
jg
ljmp
sub
fsts
xorl
xchg
imul
popa
push
icebp
jle
dec
mov
push
add
add
dec
dec
repz
js
adc
add
xor
subl
and
insl
call
push
push
xor
pop
pop
dec
scas
push
out
stos
adc
push
sub
push
dec
imul
add
aam
pop
jns
dec
xchg
mov
std
repnz
lcall
sti
mov
xor
inc
push
mov
xor
lods
mov
bound
push
out
mov
push
sbb
lcall
cmpl
push
pop
imul
push
roll
popf
mov
frstor
and
ja
das
addr16
movsb
xchg
xor
adc
sbb
arpl
mov
jmp
sub
adc
inc
mov
incl
xor
sbb
and
mov
add
dec
ret
cli
test
or
shrl
scas
mov
and
stos
aam
enter
incl
mov
out
xchg
rcll
mov
push
dec
int
std
mov
pop
arpl
lock
outsl
mov
lahf
cmp
clc
aam
das
rclb
inc
sar
movsb
pop
lods
pop
mov
jo
les
and
xor
mov
lcall
push
pop
lock
jg
ja
stos
sub
add
in
fisubs
jbe
flds
sbb
cli
data16
call
ficoml
into
pop
sub
adc
test
inc
or
nop
and
pop
stos
test
mov
in
push
pusha
pop
or
fxch
daa
push
or
inc
mov
mov
ljmp
push
sub
jmp
push
push
add
dec
dec
pop
lods
call
loopne
andb
cltd
pop
loop
mov
test
hlt
cmp
cmpsb
lcall
xor
iret
insl
sbb
pop
mov
jns
loopne
jne
sbb
in
inc
xchg
fstps
mov
decl
and
mov
ss
push
or
stc
push
les
ficomps
pop
pop
mov
decl
push
xlat
fisubl
inc
mov
lods
sbb
ret
inc
mov
std
adc
fdivrl
mov
cmp
xor
xchg
ret
pop
sbb
cmp
lcall
mov
lret
mov
mov
loop
popa
jbe
or
sbb
incl
inc
push
mov
insb
xlat
psrlq
mov
call
mov
mov
inc
hlt
scas
xchg
or
pop
ja
not
fmuls
mov
sbb
int3
in
xchg
mov
pop
sbb
loop
arpl
jns
ljmp
add
sub
ds
push
sbb
lods
into
ret
xchg
pushl
xchg
mov
cltd
xchg
fsts
fists
fwait
lods
pop
pop
insl
adc
call
lret
je
inc
xor
or
push
jmp
dec
imul
add
je
icebp
shl
xchg
push
and
mov
or
jecxz
scas
cmp
popa
lcall
jge
pop
mov
cltd
pop
sub
cli
mov
fisttps
aas
mov
push
mov
js,pt
pop
xchg
push
push
inc
ret
test
xchg
pop
incl
arpl
je
and
xchg
mov
jmp
pop
adc
adcl
test
inc
mov
add
jmp
decl
push
rorb
das
stc
movsl
es
jb
outsl
cli
lcall
sbb
jge
test
scas
adc
mov
pushl
std
cmpsb
pop
pop
repz
mov
push
xchg
inc
dec
js
and
inc
arpl
pop
aad
std
ss
fiaddl
and
loopne
push
xchg
and
setae
std
ret
mov
aaa
cld
aam
rdmsr
cmp
cmpsl
push
cli
jge,pn
popf
jle
arpl
adc
sbb
lcall
jmp
decl
lock
sbb
test
ret
repz
add
fildll
icebp
insl
or
jmp
pop
and
shlb
push
and
pop
xchg
mov
add
fucomp
or
jmp
mov
je
xor
adc
scas
push
xor
mov
jmp
js
aas
sub
xchg
fcmovbe
lea
ljmp
test
aad
int
inc
in
out
mov
incl
inc
pop
adc
lahf
inc
push
xor
pushl
clc
cmp
xlat
and
mov
lds
clc
out
cld
in
movhps
inc
inc
stc
leave
in
cwtl
push
ljmp
cltd
sub
xor
add
inc
sti
pop
ljmp
enter
push
ds
mov
mov
push
outsl
jnp
push
and
jg
js
lcall
sub
xorb
in
push
leave
das
jo
std
jmp
lods
jno
mov
sbb
mov
pushf
sub
sbb
call
pushf
data16
pop
pop
enter
jno
daa
inc
out
cmp
rcrb
pop
jae
in
std
aam
fldenv
adc
jnp
daa
adc
inc
adc
mov
les
or
pop
out
sub
jmp
push
clc
sti
adc
xchg
mov
add
mov
sub
sahf
leave
fldl
pop
dec
in
cmp
pop
jle
lcall
mov
mov
ljmp
imul
daa
in
nop
stos
pop
lea
mov
int3
mov
gs
dec
jl
cmp
fistpll
rcl
incl
orl
sarl
enter
cmp
call
mov
mov
dec
aad
js
push
xchg
mov
inc
in
lcall
mov
xchg
jp
adc
mov
mul
sahf
mov
lcall
sub
pop
ret
repz
bound
push
mov
pop
fwait
mov
push
add
stos
insl
hlt
mov
inc
mov
or
incl
cld
mov
and
lcall
and
lcall
loop
adc
add
filds
repnz
shll
ljmp
ret
mov
ret
add
imul
imul
lahf
sub
pop
fs
daa
dec
insb
std
jg
subb
xchg
int3
jp
dec
inc
cltd
outsb
cmp
push
mov
mov
ljmp
sti
rclb
sti
push
sub
cli
inc
or
lcall
fs
xor
mov
loopne
cs
testl
js
popa
outsl
jae
xor
outsl
xor
xchg
xchg
hlt
push
push
ja
scas
fstpl
pushl
xchg
loop
sub
mov
xor
cld
in
int3
mov
inc
or
or
add
pop
pushf
xor
insl
bound
xor
mov
decl
mov
ret
mov
jp
pop
dec
ljmp
dec
aaa
or
inc
jg
jmp
sub
ret
movsb
scas
jnp
test
sahf
dec
mov
mov
jmp
movsb
or
mov
sub
fldenv
jb
ljmp
pop
push
outsl
adc
cmp
sub
incl
or
aad
mov
dec
push
sarb
js
mov
int3
movsl
xchg
or
lcall
cltd
or
data16
or
add
adc
inc
ja
jno
sub
mov
das
mov
cltd
scas
call
decl
test
pusha
mov
bound
jae
cld
test
push
loopne
jns
mov
flds
adc
lds
cs
and
sbb
nop
cmp
jg
bound
mov
xchg
mov
out
or
movsl
cmpsl
or
jmp
jb
jmp
mov
xor
in
and
data16
inc
dec
enter
jp
add
mov
jne
sbb
mov
sbb
movsl
mov
out
or
data16
xor
cmpsb
insl
dec
jmp
sahf
mov
int3
jnp
adc
std
shlb
add
push
xchg
lcall
ss
fnstsw
mov
mov
sahf
in
jns
sub
inc
or
lcall
lcall
pop
jmp
xor
movsb
in
mov
daa
icebp
mov
cli
movb
add
decl
ficomps
sahf
in
push
mov
jb
jbe
jle
shl
jo
dec
sbb
sbb
pop
cld
ljmp
cwtl
jmp
xorl
sbb
jmp
data16
test
int
xor
lcall
xchg
lcall
mov
fsubrs
int3
and
popf
and
mov
fistpll
mov
pop
mull
sub
lcall
sbb
lds
cltd
dec
mov
sub
lret
lret
inc
sbb
sbb
cmpsb
imul
ljmp
jno
cmp
cs
push
jno
mov
inc
mov
jbe
push
decl
fisubrs
jg
rcr
jbe
cmc
test
or
es
ret
ljmp
sub
lret
push
sbb
rorl
das
icebp
inc
ljmp
add
mov
sub
mov
add
jb
add
pop
das
pushl
pusha
mov
mov
popf
aaa
ljmp
xor
in
fstl
adc
jmp
jns
mov
pusha
imul
incl
jecxz
inc
fildll
pop
repz
leave
outsl
fisttpl
in
decl
mov
popf
addb
sbb
sahf
lea
xorb
fiadds
xor
movsl
add
xor
in
insb
adc
xchg
adc
clc
adc
xchg
or
das
ljmp
subb
mov
xchg
lds
jb
fnstenv
in
sbb
incl
push
xor
xor
rolb
push
rorb
add
std
add
cmp
enter
xchg
cmp
jg,pn
add
cltd
rcrl
arpl
sbb
jbe
pop
mov
sub
sti
adc
inc
fldl
lds
nop
jp
mov
pusha
je
pop
xchg
and
je
mov
mov
lret
cmp
fistps
jmp
imul
mov
pop
stos
fwait
nop
lret
cmp
outsb
cwtl
mov
pop
cmc
jbe
in
jmp
mov
sbb
pop
and
or
bound
nop
clc
adc
jnp,pn
add
cmp
ljmp
cmp
xor
fmulp
mov
pop
inc
lea
rcll
cld
ljmp
cli
xor
ljmp
out
xchg
xor
aas
gs
xrstors
pop
dec
adc
call
testb
cld
daa
xchg
lcall
rorb
adc
lahf
call
incl
pop
inc
jnp
jbe
aas
sbb
in
adc
cmc
xchg
test
test
jg
lahf
cld
testl
lahf
inc
dec
jno
sti
jne
sbb
mov
push
mov
loope
pop
cmp
adc
push
insl
stos
rolb
jle
jg
inc
insl
add
jo
mov
ljmp
push
shl
pop
cwtl
test
lods
lcall
incl
frstor
or
lock
iret
cmp
daa
stc
sahf
jne
imul
decl
test
cmp
pop
scas
add
ss
test
cmp
in
incl
push
jle
outsb
push
dec
jp
decl
inc
bound
in
decl
mov
fidivrl
pop
mov
push
pop
jl
leave
dec
pop
cmp
jno
pushl
jb
adc
out
mov
jnp
dec
aam
jno
mov
mov
faddl
jp
dec
testl
or
pusha
mov
or
cmpsl
jmp
push
adc
sbb
sar
call
stos
cmpl
xor
imul
imul
in
int
mov
out
adc
jg
notb
lea
cmp
jno
pushf
pusha
in
sub
xor
std
fbld
js
int3
repnz
dec
popa
test
fsubrp
jge
fnstenv
inc
xor
cmpsb
in
mov
popw
insl
mov
clc
cmp
pop
add
mov
aam
ljmp
popf
cmp
das
mov
add
test
ja
arpl
lahf
pusha
mov
mov
jmp
shll
pop
xor
mov
or
xchg
mulb
or
rcrl
dec
fimuls
fwait
sbb
cwtl
jnp
fsubrs
cmp
pushl
or
sti
sub
dec
inc
rcrb
jne
movsl
lahf
jge
popa
inc
and
sbb
jmp
call
imul
sahf
sbb
mov
mov
fcomip
decl
insl
cs
xchg
pop
insl
lcall
inc
lods
mov
mov
ret
decl
and
mov
cmp
aad
sbb
out
push
mov
in
movsl
rclb
je
add
repnz
sub
imul
fimuls
adc
int
push
jae
nop
jne
sub
xlat
imul
lahf
popf
sub
iret
pop
lret
xchg
cmp
into
ljmp
add
mov
xchg
inc
push
jmp
sahf
and
dec
dec
pushf
xchg
scas
ret
lret
scas
jns
xchg
aad
cmp
jno
cli
outsl
imul
iret
ljmp
imul
ds
or
dec
leave
out
jo
add
ljmp
ds
xchg
cmp
decl
sub
lds
pop
cmp
xor
sti
pushf
jmp
sub
or
mov
mov
jmp
mov
int
je
insl
mov
out
fisttpll
push
fwait
cmpsl
test
loopne
mov
subl
std
shlb
fbstp
add
sahf
mov
pop
xchg
lods
mov
xor
fidivrs
inc
pop
fcomps
push
xchg
stc
jmp
pop
repnz
nop
cmp
sub
loopne
ss
push
sub
xlat
inc
mov
in
mov
test
fs
lahf
scas
mov
fisttpl
insl
ficompl
push
mov
insl
test
aaa
icebp
fcomps
lods
mov
and
ss
xchg
divl
jle
jb
cmpsb
in
pop
mov
add
mov
fidivrs
mov
lods
insb
mov
jg
lcall
jmp
jo
mov
inc
int3
push
in
mov
lcall
pushf
and
js
test
xchg
cmp
dec
lods
dec
arpl
mov
xchg
push
stos
push
sbb
std
mov
or
push
addr16
push
sub
ret
pop
pop
sub
ja
icebp
loop
clc
pop
out
push
ret
push
pushl
das
jle
icebp
mov
mov
lds
sbb
repnz
and
xor
decl
hlt
inc
add
xlat
add
xor
nop
imul
push
mov
push
ljmp
test
and
xchg
fisttps
cltd
dec
aad
or
pop
les
cmp
lcall
jae
shl
mov
stos
mov
addr16
mov
and
hlt
cmp
push
cmp
lcall
sbb
aaa
aas
pop
fs
iret
sbb
mov
lods
mov
sbb
xor
and
jb
sbb
dec
in
pushf
add
fmulp
inc
ret
ljmp
lea
out
cs
js
xor
shll
sbb
fwait
rcl
jae
jp
and
push
imul
adc
cli
sub
gs
cmpsl
aad
sbbl
ret
push
testb
aad
mov
mov
ljmp
cwtl
cmc
jp
ret
mov
sub
ret
pop
loopne
cmpsl
cmpb
sub
sub
out
lea
xchg
xchg
mov
mov
jle
push
jbe
sub
push
push
jg
into
mov
nop
push
sbb
arpl
lock
mov
push
cmp
jbe
pop
loope
cmp
cltd
ds
push
pop
jo
mov
xchg
jmp
shlb
mov
movsb
repnz
jae
jo
sbb
lcall
adc
jg
outsl
pop
arpl
cltd
outsb
aad
cmp
push
bound
xchg
xor
add
push
push
jg
pop
push
ret
cwtl
lods
clc
xchg
adc
mov
test
test
adc
ljmp
cmc
xor
das
inc
xchg
cltd
sub
add
inc
sub
mov
xchg
adc
ljmp
bound
popf
test
aam
cmp
fstpt
mov
push
pop
rorb
faddl
fstps
pop
mov
inc
and
xchg
pop
shlb
incl
mov
xchg
aaa
out
mov
es
and
aad
jno
cmp
fcomip
out
xchg
cmpsb
out
int3
mov
xor
lret
or
into
in
aas
hlt
mov
jle
call
sbb
out
sbb
dec
inc
pop
stos
lcall
push
cmp
mov
call
call
adc
inc
and
cld
icebp
test
xor
das
sar
or
mov
pushf
dec
and
jl
xor
sub
sbb
xchg
add
sbb
sub
add
or
xchg
pop
adc
jle
mov
inc
rolb
pushl
insb
push
insb
in
es
sbb
into
pop
jle
repnz
mov
xchg
mov
rcrb
fildll
arpl
jae
push
fsubl
movl
sbb
sbb
testl
inc
aas
inc
mov
negl
lcall
cmpl
push
loope
xchg
jmp
mov
cmp
ss
pop
pop
daa
mov
iret
xchg
pop
push
dec
ljmp
ljmp
test
push
cs
inc
es
dec
mov
aam
test
pop
out
call
pushf
sbb
out
sbb
mov
and
jno
mov
mov
stos
pop
add
les
imul
call
jp
dec
xor
fstps
or
jno
lds
movsb
lods
mov
push
mov
cld
adcb
mov
out
bound
cwtl
sub
push
sub
out
jg
cmc
cmp
rcrl
shlb
add
cmc
cmpsl
subl
mov
mov
gs
or
cmp
or
orb
xchg
lret
push
std
push
add
mov
test
xorb
cmp
mov
test
ret
add
or
scas
imul
sbb
and
out
out
mov
jo
xchg
shl
into
jns
jge
into
stos
inc
lods
lds
push
cmp
scas
and
xchg
mov
cli
dec
lret
mov
sub
rol
out
movsb
ret
lock
or
rcr
mov
jmp
dec
inc
sbb
add
add
jne
inc
lock
mov
scas
cmp
and
es
sub
subb
pushl
jne
enter
test
fmull
mov
jge
pop
in
ss
data16
cltd
dec
and
ret
sbbb
call
adc
bound
fdivl
aas
movsl
xchg
add
repnz
pop
jb
dec
imul
call
mov
or
or
mov
push
mov
in
pop
cld
ljmp
lcall
pop
mov
paddq
and
mov
xchg
cmp
je
inc
push
cld
ljmp
movsb
and
push
decl
in
inc
in
mov
push
cltd
daa
inc
jl
add
pop
add
lcall
jmp
orb
lods
test
jnp
mov
sub
outsb
add
push
sbb
fistps
pop
pop
lcall
imul
xchg
mov
movsb
adc
and
lcall
lock
mov
mov
out
outsb
inc
idivb
or
stos
fwait
mov
decl
xchg
push
repz
xor
fidivrs
scas
int3
icebp
push
mov
mov
stos
incl
lret
mov
scas
push
inc
ss
xchg
adc
bound
repnz
push
inc
test
test
cmp
cmp
jmp
xor
ja
push
and
mov
add
jmp
adc
clc
aaa
pop
fmull
jmp
and
xor
icebp
xchg
mov
sub
fimull
sbb
popa
jmp
and
mov
adc
jb
enter
fnstsw
xchg
cli
outsl
jle
cmp
imul
adc
push
out
mov
inc
incl
notl
in
frstor
repnz
std
cld
mov
dec
popf
add
int3
adc
mov
jecxz
movsb
mov
pop
icebp
dec
aam
mov
push
movsl
cmpl
inc
hlt
push
shl
cmc
fistps
mov
inc
mov
test
outsb
sbbb
xor
call
xor
pop
mov
adc
push
or
shl
lock
clc
mov
ljmp
ficomps
mov
mov
out
test
test
scas
and
pop
push
testl
jmp
in
inc
fdivrs
in
lods
fcoml
jmp
mov
movsb
popa
call
jb
jns
movsb
push
push
xchg
lahf
ret
mov
scas
mov
lcall
cld
push
xor
mov
movl
enter
aam
jo
lcall
rorb
insl
or
gs
test
incl
sub
push
mov
lods
loop
dec
push
inc
mov
sub
xor
fcomip
das
addr16
cmp
movsb
enter
xor
scas
adc
fstpt
mov
lcall
adc
mov
lods
and
pop
push
push
fistpl
out
pop
cmpsb
loopne
lcall
fwait
icebp
stc
ss
cmpsb
sbb
mov
out
jge
inc
das
jmp
and
hlt
jl
movsl
stc
adc
in
je
xlat
xchg
int3
dec
jmp
arpl
xor
lcall
xor
lret
out
or
jecxz
ret
push
mov
add
ret
jo
pushl
pop
xor
sbb
test
aas
xchg
xchg
jg
cmp
mov
and
fsubr
xor
mov
sti
nop
jb
outsl
mov
std
cs
stos
fsubr
fld
dec
cld
repz
out
clc
adc
mov
sub
push
sub
out
jne
outsb
jp
push
pop
jno
jg
sub
es
lock
sbb
jbe
fidivrs
je
insl
ljmp
fiaddl
pop
xchg
adc
lret
xor
push
sub
pushf
adc
loopne
rcll
pushf
ljmp
jmp
jecxz
jg
jb
adc
inc
pushf
xchg
mov
popf
or
mov
imul
rcrb
jle
pop
mov
jae
popf
orl
clc
fcomps
pop
add
or
xchg
loopne
mov
bound
icebp
inc
adc
call
mov
arpl
addr16
outsl
scas
mov
push
dec
sbb
ljmp
jmp
mov
xor
xsha256
cmpsb
shrl
fldt
shlb
iret
mov
daa
jge,pt
mov
addr16
mov
dec
aam
push
lock
aaa
test
pop
std
inc
or
cmp
pop
dec
pushl
xor
mov
vmovaps
in
je
jecxz
add
movsb
test
jns
aam
out
cltd
out
out
ftst
repz
loop
fdivrl
xor
jno
mov
xchg
mov
pushf
pop
cmp
pop
jge
ds
incl
sbb
popa
xchg
and
or
jb
sub
int
fwait
pop
ja
mov
incl
stc
lret
dec
jmp
or
bound
push
mov
xchg
cld
incl
pop
pop
dec
out
jmp
outsl
movsl
mov
dec
hlt
push
adc
roll
xchg
jg
lea
or
decl
sbb
adc
das
or
out
stos
fldt
mov
mov
xchg
incl
xchg
fidivs
ds
adc
jns
xchg
xchg
ja
les
and
call
pop
sbb
jb
or
xchg
sar
pusha
into
xchg
andl
dec
int
jg
decl
imul
mov
mov
int
sbb
pop
faddp
sar
ljmp
adc
mov
pop
mov
xor
ljmp
cli
decl
ret
dec
adc
cmpsb
xchg
push
add
int
lcall
pushl
insb
mov
push
mov
sub
int3
insb
xor
inc
pop
test
out
mov
jbe
std
popa
out
jl
lcall
data16
stc
and
scas
stos
push
xor
pop
test
push
xchg
xchg
cmc
cli
ja
pop
lret
dec
push
fisubrl
cmp
mov
sbb
ljmp
or
cmp
arpl
rolb
mov
in
mov
repnz
xchg
jge
xor
fcmovbe
and
sbb
nop
hlt
ljmp
sub
hlt
je
in
repz
pop
pop
push
in
dec
adc
xor
dec
fwait
adc
push
sub
xchg
cmp
imulb
lcall
xlat
lds
add
iret
lods
mov
hlt
jno
loope
jg
gs
mov
mov
pop
aad
out
out
movsb
loope
adc
lret
iret
mov
in
icebp
cs
inc
xchg
jmp
testb
ret
xor
jnp
mov
ja
and
jns
fisttpl
dec
mov
push
in
stos
jg
jecxz
imul
xchg
sbb
std
mov
jge
cmpsb
dec
lods
or
xchg
test
ljmp
std
jge
imul
test
cmp
sbb
mov
sbb
ljmp
and
dec
lcall
shr
pop
jo
jmp
cltd
fmull
clc
xor
jno
dec
aad
sbb
mov
ljmp
rcrb
pop
inc
xor
jle
pop
dec
pop
fldl2e
jbe
xor
cld
cld
test
das
push
jg
add
in
lcall
sub
arpl
lock
mov
dec
call
push
ret
daa
mov
insl
push
jno
inc
pop
fwait
and
fmull
jg
jmp
mov
add
push
add
movsl
adc
push
pop
fadds
rol
insl
repnz
sub
mov
ljmp
fcmovnb
flds
xchg
int
push
into
ljmp
clc
dec
xchg
subb
into
fisttpl
sbb
dec
pop
jle
out
jg
push
push
ss
dec
ljmp
lock
jle
shlb
lcall
std
xchg
jno
pop
cltd
in
int
ljmp
es
sub
inc
pushf
and
movsb
cmpsl
lahf
xchg
or
pushf
pop
inc
push
movsl
fbld
outsb
ds
mov
hlt
loop
sbb
xchg
pop
xchg
call
cmc
mov
inc
sub
repz
pop
xor
mov
jo
imul
mov
push
jbe
iret
adc
mov
insb
insb
sbb
or
sbb
sahf
js
in
adcl
loopne
mov
add
push
fucom
aam
cmp
test
pop
push
test
push
xlat
xchg
shr
jne
fcomip
lcall
aaa
mov
xchg
ret
xchg
dec
cmpsb
adc
aas
add
lcall
pushf
cmpb
mov
out
inc
sbb
hlt
cmp
inc
and
insb
mov
popa
sarb
lahf
adc
ss
in
incl
std
pop
inc
sub
scas
out
cmpsl
ss
sahf
mov
jb
cmpsl
jno
aam
and
add
enter
jle
jne
test
repz
leave
xor
fsubr
xor
inc
fidivrl
in
mov
add
xchg
push
mov
sbb
mov
cwtl
test
fistps
xchg
and
in
jp
repz
fst
or
add
add
call
jl
mov
push
mov
jnp
fdivrp
dec
mov
xchg
xchg
xor
push
pop
shr
xchg
inc
aas
sti
ljmp
cmp
push
xchg
ljmp
cltd
lods
repz
pushf
and
je
fst
call
cld
rol
ja
push
stos
inc
lret
adc
popf
in
dec
jne
sbb
mov
adc
inc
pop
std
call
rcl
adc
push
xor
and
scas
stos
sub
lahf
sarl
outsl
clc
sbb
dec
xor
pavgw
inc
mov
ret
std
mov
cli
xlat
jbe
push
scas
aam
mov
mov
xchg
or
scas
and
test
xor
xor
sbb
cld
xchg
cmp
xor
movl
dec
or
jg
and
pop
jge
push
jb
push
dec
cmc
jno
lcall
push
sahf
pop
mov
popf
jnp
or
rclb
xchg
daa
push
pop
jb
adc
dec
dec
jb
call
sub
test
pop
setbe
push
icebp
and
mov
aad
decb
mov
push
mov
mov
ljmp
ljmp
inc
pop
jmp
sub
push
adc
pop
stos
scas
sti
dec
fwait
dec
std
incl
cld
mov
inc
out
out
je
into
ds
xor
inc
push
xor
mov
mov
mov
repnz
push
jno
inc
aas
gs
test
ljmp
orb
andl
into
fsub
sti
es
mov
jge
call
hlt
sar
lcall
enter
mov
mov
dec
inc
mov
cmp
jmp
add
leave
iret
dec
and
sub
lds
add
or
push
sarb
cmp
arpl
or
fcoms
cli
lcall
push
aaa
rorl
stos
push
mov
or
add
rorb
push
adc
test
pop
std
push
adc
out
push
mov
mov
and
inc
ljmp
sbb
pop
and
jge
adc
aaa
lea
ret
pop
orb
pop
cld
imul
daa
decl
orl
jae
outsl
adc
mov
fstpl
mov
pop
std
jmp
cmp
mov
adc
pop
ss
call
sarl
stos
pushl
out
mov
mov
xchg
mov
mov
or
decl
mov
cmc
pop
ret
fstp
out
and
iret
pop
mov
push
test
int
pop
test
out
and
pop
outsb
stos
dec
xchg
inc
inc
mov
fildl
hlt
cs
push
dec
push
jl
mov
addl
and
addb
inc
dec
fs
scas
mov
inc
xor
dec
ljmp
push
mov
mov
lds
lock
jp
repz
mov
mov
mov
hlt
ljmp
push
mov
cmpsb
fdivrp
fistps
das
pop
xchg
outsb
push
out
ljmp
sbb
test
decl
and
mov
pop
cmpb
mov
mov
in
mov
scas
sbb
dec
ret
dec
adc
and
cld
jno
pop
ss
lret
stc
pop
xor
jo
stc
mov
add
out
addr16
outsb
es
mov
aaa
cmpsb
xchg
repz
cs
sbb
xchg
mov
shrb
xchg
call
push
add
cmp
mov
cmp
ss
fisubl
or
scas
cld
insb
adc
arpl
jp
sbb
ss
dec
imul
or
cmpsb
decl
into
enter
imul
sti
sahf
push
aam
rorb
jp
inc
adc
sbb
test
scas
mov
sub
mov
clc
jbe
jle
movsl
les
ja
push
sub
xor
sar
ljmp
repnz
pop
orl
adc
sbb
pushf
dec
sbb
mov
xor
jg
out
jbe
jae
pop
sub
cmp
pushl
inc
or
loope
jae
xchg
scas
xchg
cmp
mov
xchg
sub
call
and
dec
xchg
call
cltd
inc
dec
push
cmp
out
xor
iret
push
ja
mov
dec
outsb
jae
add
sbb
addr16
loopne
or
repz
push
inc
incb
fsubrl
decl
popa
push
cmp
lds
daa
ljmp
outsl
sbb
cmp
dec
cmovbe
add
sbb
les
scas
and
push
sub
push
sar
incl
push
test
aas
inc
pop
push
inc
pop
cltd
xchg
scas
add
push
push
or
pop
decl
push
mull
cmp
xchg
test
push
pushf
xor
xchg
call
xor
push
daa
lret
mov
fcoml
cs
sbb
cmp
or
pop
sbb
call
jle
xor
test
movsl
cmpsl
adcb
mulb
mov
gs
clc
stc
cld
decl
mov
movsl
push
sbb
mov
test
call
je
cmpsb
cmp
xchg
adcl
lods
pop
dec
cmp
shll
xchg
xor
out
cli
fucomip
cmp
lods
outsb
fstps
aas
jp
lock
xor
into
mov
cmpb
sbb
push
jg
out
pop
imul
and
jmp
xchg
jns
xchg
pushl
hlt
cli
cmp
aas
push
xchg
dec
mov
rorl
adc
jno
icebp
aad
scas
adc
pushl
inc
repz
test
dec
lock
mull
jno
mov
sbb
cmpsb
nop
stos
sub
ljmp
sti
jp
add
adc
mov
inc
sbb
fmull
subl
decl
cmp
dec
push
es
lahf
mov
jmp
jle
jno
cltd
pop
hlt
imul
not
hlt
sbbb
jnp
loop
jg
incl
xchg
xor
mov
and
sbb
je
lea
jg
pushl
pop
enter
adc
dec
iret
out
or
leave
add
adc
cld
sub
cmpsl
out
or
in
outsb
push
ljmp
ret
ret
fdivs
test
or
sbb
insl
cmp
mov
imul
pop
xor
mov
xor
out
mov
and
push
mulb
mov
and
push
or
aaa
mov
int
das
repnz
in
inc
push
adc
mov
pop
fstps
pushf
fs
mov
insl
pusha
jo
call
cmp
je
mov
inc
cmp
cmp
mov
in
jns
stos
jno
pop
outsl
ret
aaa
dec
mov
jp
daa
dec
rclb
adc
sbb
mov
ds
movb
ss
sub
push
mov
mov
out
mov
fldl
in
fwait
test
sbb
std
stc
clc
push
push
arpl
cmp
and
mov
push
mov
and
lcall
mov
clc
lcall
outsl
lods
fbstp
mov
inc
faddl
pop
push
shrb
or
outsb
test
stc
cmpsl
outsb
push
inc
fucomip
cmp
pusha
and
cltd
jnp
push
incb
sbb
ficomps
cmp
mov
hlt
lret
xor
daa
jp
mov
les
push
mov
loopne
cltd
fsubl
xchg
jg
or
sbb
clc
es
orb
test
scas
cltd
aam
in
test
rorb
repnz
cld
xchg
mov
aaa
cs
cmp
mov
push
les
mov
jne
xchg
stc
cld
jnp
sub
adc
decl
push
xlat
mov
and
clc
in
mov
sub
outsl
movsb
out
mov
or
adc
std
xor
fdivrp
push
cltd
clc
stc
push
adc
jecxz
stos
out
push
cmpsb
push
dec
inc
js
mov
in
and
jo
ljmp
filds
mov
stos
inc
movsb
movsl
mov
mov
ss
mov
cmpsl
push
xlat
daa
fsubrs
aaa
jo
pusha
xchg
inc
lcall
out
inc
hlt
stos
ljmp
pusha
inc
dec
pushfw
push
push
xchg
cmp
add
sub
and
pop
push
cmpsl
xor
jmp
mov
mov
xlat
xor
adc
jo
dec
xchg
mov
call
sbb
mov
fcmovb
ror
xor
and
mov
stos
cld
das
cli
fidivl
jge
jg
pop
mov
mov
repz
repnz
aaa
decl
sub
idivb
pop
mov
shl
rcr
ljmp
dec
cmp
and
daa
inc
jle
addr16
jmp
and
fld
add
jns
lods
jnp
jmp
mov
ret
int
inc
gs
jnp
jle
mov
cmp
shll
sti
mov
decl
sbb
mov
aad
xchg
mov
aaa
es
fimuls
int3
pushf
icebp
std
mov
mov
incl
mov
test
xchg
sbb
rcll
jle
jbe
mov
cld
data16
mov
mov
mov
fs
jg
incl
pop
adc
cwtl
cs
fwait
push
rcrl
dec
dec
stos
cli
aam
rolb
xchg
std
pop
fcoms
add
aad
stos
lret
lahf
insb
xchg
mov
imul
xor
or
mov
mov
add
or
shlb
decl
adc
or
jnp
je
iret
mov
cld
testb
repnz
fstps
mov
mov
mov
rolb
jae
stc
adc
sub
icebp
and
cmp
adc
inc
repz
mov
jae
test
adc
js
iret
cmpsl
enter
outsb
sub
enter
xchg
add
pushl
popa
jno
mov
jmp
stos
pop
daa
or
fmulp
out
inc
inc
xchg
pop
jb
ljmp
or
repz
cmpsb
push
test
pop
pop
sahf
xor
repz
sbb
dec
push
rcl
ljmp
xor
repz
cwtl
jb
ja
jecxz
inc
dec
sbb
pop
xlat
sbbl
icebp
jbe
call
je
add
inc
inc
lcall
leave
fsts
in
and
std
cld
mov
das
cli
lcall
popa
dec
stos
or
std
gs
loop
sub
mov
mov
jns
out
mov
or
movsb
xor
aam
rcrb
inc
pop
mov
ret
lahf
ljmp
hlt
cwtl
lds
lds
sbb
lods
or
push
add
push
mov
sub
jmp
daa
xlat
push
rcrl
jecxz
or
mov
mov
fcomps
testb
test
cltd
push
cmpb
cmp
fmull
scas
adc
adc
mov
inc
xor
rcll
sar
mov
push
cmp
lahf
pop
jp
push
cmpb
clc
sbb
sub
push
repnz
cld
pushl
jo
or
lahf
test
jno
subl
adc
dec
ds
ficomps
fcmovnu
fs
pop
mov
fdivp
in
sbb
mov
test
in
pushl
aam
ds
inc
shr
push
je
stc
imul
lahf
decb
bound
and
adc
call
mov
adcb
stos
push
into
xchg
pushf
mov
out
or
push
out
sub
jg
je
mov
xchg
pop
xor
and
bound
call
and
adc
xchg
mov
es
fnstcw
sbb
call
iret
or
aas
push
ljmp
mov
addr16
cs
and
fwait
pop
fistl
push
or
out
call
jmp
mov
mov
mov
sub
mov
jle
ss
inc
cmpsb
inc
dec
cltd
movsl
xchg
cmp
or
jge
ljmp
stc
xlat
mov
mov
lret
in
cmp
enter
or
loop
xchg
and
push
rcr
cmpsl
mov
sti
loope
cmp
mov
jg
jne
lds
mov
js
push
cmp
incl
sbb
mov
sub
leave
inc
lahf
dec
push
sbb
pop
push
mov
decl
push
cmp
movb
pop
inc
nop
xor
cld
test
gs
or
pop
cld
pop
mov
mov
insb
xor
mov
ds
scas
fs
cs
cmp
decb
adc
mov
push
xchg
out
cmp
in
mov
shrl
pop
insl
push
pusha
addr16
mov
mov
push
pop
cs
jnp
lcall
mov
inc
mov
xor
lret
xor
or
adc
and
ljmp
pop
sub
movsb
adc
pop
fwait
xchg
and
mov
test
js
or
lcall
lods
and
aad
bound
cmp
inc
jmp
adc
dec
paddusw
into
mov
jmp
das
test
sub
jns
rcrl
and
sar
xor
imul
icebp
out
mov
inc
jl
inc
xchg
jl
test
ljmp
fistpll
or
cmp
es
pop
mov
shl
push
outsl
lahf
decl
incl
ljmp
movsl
jmp
and
jle
dec
int
add
or
or
int
insb
lcall
sbbb
pop
push
adc
repz
mov
ret
mov
ljmp
add
scas
movsb
sub
testb
push
lret
in
xchg
clc
jp
dec
add
out
ficoml
add
pop
gs
inc
stos
pop
lahf
pop
pop
pop
lcall
aas
lods
adc
cmp
in
add
xchg
push
jmp
pop
xchg
dec
xor
outsl
sbb
cmpsb
sub
pop
incl
add
sub
popf
test
xchg
xchg
aam
rcrb
cmp
incl
xchg
dec
shl
jo
mov
or
fmuls
cmp
lret
lcall
aam
or
pushf
std
pop
les
cmp
lret
sbb
mov
andb
mov
repz
or
mov
and
mov
std
pushf
xchg
ret
loopne
dec
sub
jp
xor
cmp
push
sub
dec
jbe
xchg
push
outsb
xor
pop
push
sbb
adc
xchg
mov
add
imul
arpl
and
loop
cld
out
pop
add
adc
pop
nop
loope
jbe
lods
and
sar
aaa
push
jge
dec
dec
push
xor
xor
xchg
sub
rclb
sub
or
mov
xor
jo
push
loop
add
and
ljmp
xor
pop
outsb
pop
and
jno
outsb
dec
push
push
add
jae
push
add
cs
decl
ss
sub
enter
sbb
and
andl
lea
lods
clc
out
add
pop
outsb
fbstp
incl
insl
test
pop
inc
stc
andl
pushl
aam
mov
push
mov
dec
test
mov
movsb
xchg
dec
rcr
lods
push
fnsave
call
sub
mov
arpl
in
cltd
lods
pop
fdivp
nop
lret
pop
mov
ffree
insb
mov
pop
dec
sbb
xor
dec
icebp
and
pop
lret
ljmp
test
sub
lcall
lock
sub
cmp
js
push
lcall
cwtl
adc
jae
sbb
mov
rcr
add
loop
adc
outsl
sbb
nop
aad
xlat
mov
lcall
decl
xor
pop
fdivl
pop
xchg
xchg
pusha
clc
test
mov
xlat
inc
adc
jecxz
decl
inc
mov
or
mov
mov
das
call
jp
std
mov
inc
sub
xchg
push
imul
fmulp
je
in
mov
mov
call
adc
out
aaa
jle
scas
ljmp
sti
jle
xor
ja
fildll
mov
sbb
or
mul
mov
jo
xchg
mov
xchg
or
xor
jl
insb
and
in
ljmp
cltd
mov
enter
cltd
sbb
pop
jmp
xchg
mov
rcrb
or
clc
ljmp
mov
jl
outsb
cwtl
fwait
test
ja
jns
adc
aaa
cmp
xor
sbb
insl
mov
xchg
lcall
lret
sub
cli
in
imul
pop
xorl
imul
lea
int
decl
rcrl
mov
mov
nop
ret
ret
pop
or
int3
xor
in
decl
and
rorl
xchg
push
into
out
dec
inc
shll
clc
aad
scas
sar
clc
fwait
loop
lods
fs
add
lods
les
ja
inc
mov
test
jb
lock
fcmovb
cltd
mov
push
fdivrs
ljmp
sbb
jecxz
dec
sahf
pop
push
sub
test
lds
stos
loope
decl
shll
fdivl
sbb
movsb
loope
jecxz
mov
or
mov
lret
ljmp
sub
ds
test
fwait
pop
sub
pushl
sbb
addl
scas
daa
mov
and
pop
jb
adc
xor
std
call
push
push
sbb
pop
inc
inc
sbb
shrl
sbb
int
pop
imul
enter
mov
fldt
js
cmp
mov
test
cmpsb
sbb
fbld
outsb
test
call
cmp
rorl
add
ret
int3
inc
mov
and
lds
xchg
lcall
sbb
imul
fwait
mov
sti
mov
outsl
sub
outsl
aad
ror
ljmp
cli
mov
or
add
adc
mov
movsl
stc
xor
jo
decl
daa
sub
jle
loop
or
xor
pop
cld
dec
xor
call
out
mov
out
jecxz
test
iret
popa
adc
lret
push
sbb
xor
aad
decl
xor
bswap
or
lahf
inc
sub
sub
jmp
push
lock
fs
loopne
jle
ljmp
sbb
cli
cmp
out
push
xchg
fisttps
xchg
push
mov
or
jae
jg
test
pop
adc
lcall
std
pop
xchg
mov
pushl
rolb
push
pop
jge
pop
stc
sbb
adc
and
ds
cmc
mov
loop
pushl
jp
stos
int
add
adc
push
mov
enter
inc
xchg
lods
push
mov
sub
fsubrl
mov
out
push
enter
into
mov
gs
es
xchg
sbb
mov
out
shr
imul
push
fisttps
std
fwait
mov
in
std
fstpl
xlat
fldenv
mov
arpl
lret
icebp
add
sub
movl
adc
mov
adc
mov
rorl
sbb
aas
outsb
jmp
jg
fcoms
push
push
adc
push
mov
arpl
repnz
mov
pushl
mov
ss
dec
cmpsb
push
out
xchg
aaa
jno
fsubr
jb
cmp
sbb
daa
lods
xchg
sub
ljmp
mov
add
xchg
mov
lcall
rolb
mov
xchg
inc
movsl
adc
imul
lcall
mov
sbbl
mov
mov
push
or
push
adc
xor
xor
stc
stos
mov
ret
cmpl
jg
outsb
js
je
xchg
xchg
rolb
jb
ret
and
jo
jbe
call
addl
cmp
mov
mov
push
int
lret
sbb
xchg
rorl
ljmp
pop
push
push
sub
cmp
sub
out
jl
addb
jecxz
lcall
fstpl
mov
xchg
clc
out
sub
pushf
fwait
int
addr16
mov
mov
jge
movsb
adc
xlat
mov
pop
mov
mov
pop
mov
call
mov
daa
inc
mov
mov
divl
inc
lods
jp
cmp
lock
add
aas
jmp
add
icebp
and
adc
sub
lea
icebp
pop
inc
mov
jg
mov
adc
sahf
loope
das
push
and
addr16
xor
shr
test
loopne
shlb
pop
sbb
sub
mov
test
xchg
incl
lods
inc
pop
loope
inc
xor
aad
insb
adc
mov
push
iret
xchg
dec
xor
pop
scas
jge
and
push
or
outsl
pop
lods
out
repz
insb
movsl
iret
stos
or
pushl
pop
push
cmp
xchg
sbb
push
clc
arpl
cmc
incl
nop
dec
inc
nop
fsubp
jbe
add
add
pop
xchg
cs
sub
out
push
jg
adc
push
or
sbb
xchg
sub
adc
pop
sbb
in
cmpsb
or
xor
jne
cli
decl
or
roll
jg
sti
and
or
imul
pushl
cs
mov
inc
mov
and
mov
fstpt
in
mov
ljmp
iret
int
inc
mov
lock
addr16
jne
pop
dec
mov
jp
mov
imul
aaa
popa
fucompp
in
dec
adc
insl
add
rclb
and
push
sub
jg
dec
add
or
pop
inc
es
fwait
mov
test
call
movsb
and
cmp
push
iret
and
adc
mov
xchg
adc
repz
cmp
out
out
mov
out
movsl
outsl
fmuls
out
inc
and
gs
adc
jp
daa
push
shll
repz
arpl
filds
in
adc
popa
pop
fs
jmp
repnz
cmp
ja
decl
jecxz
popa
inc
xchg
xchg
mov
dec
cmpsl
push
dec
test
imul
lret
dec
jnp
add
test
add
decl
jb
sub
or
pop
add
call
xor
sub
push
in
cmp
mov
mov
iret
or
decl
pop
test
lock
sbb
shrb
push
sar
add
mov
push
std
insb
or
mov
cmp
stos
cli
ljmp
sbb
mov
pop
dec
or
shl
ss
shrl
in
and
ljmp
fisubrl
aas
mov
fs
in
out
pop
out
mov
add
out
out
repnz
pop
hlt
ljmp
adc
lahf
fwait
ss
pop
in
or
adc
fbld
int3
add
out
ja
hlt
inc
decb
adc
sub
decl
out
add
and
repz
js
mov
jge
add
pop
push
jnp
test
imul
mov
xchg
es
dec
inc
cmp
push
cmpsl
mov
push
in
xor
jmp
jne
push
lahf
sbb
inc
cmc
dec
dec
std
adc
rcrb
jge
int
xchg
mov
fildll
call
xchg
xor
gs
mov
out
push
les
lods
xchg
decl
and
std
mov
or
inc
cmp
push
aaa
pop
mov
es
fdivr
lcall
hlt
jbe
outsl
cmpsl
inc
jp
xchg
leave
jge
lret
cli
stos
stc
iret
mov
cmp
int
and
test
inc
inc
xor
out
out
pop
ss
mov
lret
in
fstpt
movsb
sbb
decl
jo
fidivl
out
or
cmpsl
sbb
loopne
test
cmpsl
mov
inc
jmp
dec
push
hlt
cmp
jp
xor
adc
cltd
xchg
lret
imul
xor
lock
ljmp
ja
mov
in
insl
add
mov
mov
dec
dec
fsub
dec
ret
jp
test
inc
push
rcrl
sub
inc
push
out
out
cmp
sbb
hlt
mov
outsb
mov
cwtl
push
pop
push
sbb
cmp
enter
pop
push
data16
jg
mov
cli
aam
pop
iret
fisubl
xchg
mov
adc
rclb
mov
inc
jecxz
ror
insl
and
mov
in
push
and
xor
mov
clc
pushl
lods
mov
iret
mov
fwait
xor
mov
and
mov
test
loopne
jecxz
in
test
les
mov
bound
xchg
cmpsb
int
call
xor
mov
cmp
sti
nop
or
add
adc
in
pop
out
ficomps
jmp
jo
outsb
out
bnd
orl
push
push
push
jbe
stos
xchg
ss
dec
inc
pop
fdivl
push
orl
je
push
push
jle
ljmp
sbb
aas
enter
or
jl
daa
scas
out
rcll
add
mov
cmpsb
fsts
lea
movsb
fwait
sti
sbb
mov
sbb
xchg
jecxz
jmp
jp
clc
icebp
fstl
mov
faddl
fstps
jmp
aam
push
cmpsb
lea
push
adc
aas
sbb
test
mov
mov
lds
push
mov
xchg
sub
stos
mov
sub
dec
jl
pop
xchg
or
repnz
incl
inc
jg
sbb
xor
inc
and
cld
cmp
fcomp
sbb
loope
mov
pop
popl
pushl
cld
sub
cltd
inc
mov
dec
pusha
cmc
daa
and
imul
xor
cs
mov
iret
jmp
rcr
test
insl
push
sub
pushf
pop
cli
call
inc
sbb
cmp
outsb
das
push
cli
in
push
dec
mov
xchg
mov
call
mov
ds
or
mov
push
or
call
push
test
lods
jo
ret
ret
jmp
add
fcmovbe
dec
mov
lahf
jb
push
into
pop
pop
std
fdivrl
sub
out
dec
sbb
js
int3
icebp
in
mov
dec
xabort
cmp
jmp
repnz
frstor
movsl
xor
xor
adc
xlat
jl
cmpsb
and
pop
xlat
add
jl
or
fnstcw
out
adc
lcall
sub
ficoml
push
ret
mov
cmp
clc
test
test
shll
call
push
imul
push
mov
xor
jae
mov
xchg
stos
gs
jmp
pop
mov
sub
jae
push
and
push
xchg
aad
out
daa
insl
fld
mov
mov
cli
ss
clc
repnz
jnp
xlat
test
stos
fbld
adc
mov
xor
icebp
jg
incl
mov
jns
fidivs
lret
cltd
sahf
les
enter
mov
push
cmp
pop
sub
xor
or
sbb
inc
adc
mov
cs
sub
xor
ret
cmp
push
inc
cmp
pop
push
fcoms
xor
aaa
pop
and
int
fsubrl
xor
decl
mov
xor
cltd
dec
cmp
inc
imul
ljmp
pop
es
add
sub
inc
into
xor
movsl
shrl
repnz
ljmp
push
imul
cmp
mov
dec
lods
mov
sarl
mov
ljmp
push
jae
hlt
repz
add
inc
xlat
jg
aad
adc
std
pushf
movsl
mov
pushl
in
push
and
sub
js
mov
rcl
jnp
insl
xchg
mov
nop
cmp
icebp
cli
popa
xchg
es
mov
mov
dec
sub
les
push
leave
lds
sub
cmp
into
out
clc
xchg
lret
cwtl
out
cwtl
repz
dec
out
xor
or
xchg
rcll
jle
fcomip
push
into
pop
pop
push
pop
sbb
or
adc
push
sub
decb
or
push
pop
cmc
aaa
sub
and
mov
sbb
cs
jg
addb
ljmp
mov
addl
or
push
fsubrl
sti
inc
or
jmp
cmpsb
test
dec
sub
push
mov
mov
mov
dec
add
pop
inc
xchg
js
ljmp
xchg
sti
sub
ret
call
mov
dec
cld
push
mov
scas
mov
lahf
jge
mov
inc
cmp
sub
sub
call
add
into
jne
arpl
sub
insl
fcmovnu
push
idivl
call
pop
in
lods
lods
daa
lods
adc
add
push
sbb
rolb
mov
test
into
arpl
and
out
pop
daa
pop
insb
ljmp
pusha
adc
or
incl
out
add
dec
xchg
lea
insl
sbb
xchg
mov
dec
push
and
pusha
movsb
jg
dec
sub
outsl
sbb
dec
test
and
or
into
in
xchg
rcrl
push
fistpll
call
mov
push
inc
jl
lods
cmp
xlat
or
or
add
jno
mov
je
and
cmp
jmp
inc
nop
mov
push
jns
jge
cmp
xchg
jge
and
shrl
adc
adc
cli
scas
jno
xchg
jle
cmpsb
icebp
pop
cmpsb
cmpsb
xor
inc
mov
pop
sbb
jnp
mov
imul
jmp
pusha
cltd
rclb
mov
mov
movsb
mov
int
scas
stos
pop
mov
out
cli
adc
cmp
ror
test
inc
adc
pop
adc
pushl
leave
out
adc
jle
cmp
gs
mov
push
add
pushf
xor
stc
lock
add
rep
int
jle
mov
push
mov
pushl
mov
xchg
addr16
mov
out
pop
aam
mov
loope
adc
ret
xabort
add
xchg
lods
push
cltd
pop
mov
or
jmp
cmp
jne
ss
outsl
jg
incl
loope
push
je
push
jno
dec
push
repz
mov
cwtl
decl
adc
jmp
jp
aas
push
into
push
test
ret
or
sub
je
std
pop
fistps
incl
imull
jg
sub
arpl
aas
into
sub
dec
das
testl
movsl
add
aaa
push
stos
sub
stos
sub
div
or
jecxz
xor
fisubl
shrl
stos
push
pushl
leave
imul
jnp
xor
bound
clc
test
arpl
int3
bound
push
add
scas
or
out
dec
inc
pop
push
pop
out
repz
lcall
xor
in
and
sbb
cmpsl
pop
inc
mov
fs
pushl
repz
movsb
inc
cmc
sub
cmpsb
enter
imul
sahf
adc
jmp
jae
pop
pcmpeqb
and
in
cwtl
shll
mov
push
shll
sbb
pop
clc
ljmp
mov
jns
xchg
jae
std
jo
shlb
pop
lock
add
mov
cmp
mov
pop
mov
call
mov
les
inc
scas
lods
cmpsb
jg
or
loopne
lods
push
lods
les
pop
mov
out
sbb
incl
out
hlt
aad
add
sub
fmuls
decl
push
sub
adc
stos
rcrl
ljmp
lret
pop
jp
loope
push
cli
loope
into
in
jnp
lods
icebp
xchg
mov
mov
jmp
pop
jp
test
lret
sbb
fisubl
divb
sub
pusha
or
and
clc
mov
pop
loopne
out
adc
inc
ds
pop
sbb
stos
mov
lcall
negb
stos
push
cmp
dec
movsb
fisubrs
mov
mov
filds
or
fs
mov
push
mov
adc
sub
mov
test
fmuls
mov
roll
scas
push
into
aas
test
clc
inc
ds
pop
mov
cmpsb
das
cmpsl
and
fildl
add
inc
pop
aaa
adc
sub
ds
out
cli
int
mov
mov
lahf
mov
dec
mov
jno
fimull
lock
sub
rolb
dec
pop
fisttpll
shll
decl
and
scas
sahf
mov
inc
cmp
or
daa
fdivrs
fnstcw
mov
call
iret
dec
std
test
bound
xchg
ss
pop
pushl
xchg
xor
fwait
ja
mov
sbb
cmp
sahf
sub
sub
dec
jb,pt
dec
push
push
sbb
jns
adc
imul
cmp
iret
adc
shr
adc
push
and
decl
in
dec
pop
or
int
dec
loopne
pop
rcrl
out
nop
std
cmp
bswap
hlt
or
push
insb
jae
cmp
and
sub
mov
mov
fisubs
xor
je
cmp
imul
inc
decl
mov
decl
dec
add
mov
xchg
int
mov
add
hlt
mov
cld
arpl
xor
ljmp
push
push
mov
pusha
sbb
dec
inc
or
mov
xor
stos
cld
pop
or
out
repnz
nop
sub
addb
pushf
adc
mov
jmp
rorl
xchg
daa
cmc
or
lods
arpl
inc
mov
out
hlt
movsb
out
addr16
rolb
cli
jnp
pushf
sarl
imul
insl
sub
mov
xchg
jecxz
xor
mov
push
adc
js
push
mov
cmp
int3
push
dec
sub
xchg
jg
iret
jnp
push
dec
mov
addr16
sar
or
and
inc
fsts
or
and
stc
pop
mov
add
push
in
push
sbb
mov
jbe
mov
push
push
adc
das
cli
cmpsb
enter
xchg
in
mov
in
orb
in
mov
lock
decl
int
mov
push
cmc
loop
and
out
int3
mulb
mov
lcall
mov
mov
loopne
mov
cmp
lods
stos
popa
cmp
in
in
in
mov
inc
inc
xor
mov
cmp
loope
sbbl
mov
decl
mov
mov
leave
in
sbb
dec
call
xchg
sbb
icebp
or
jg
or
in
ss
mov
mov
mov
lcall
arpl
cmp
imul
adc
xchg
loope
in
call
cmp
fadds
add
addb
xchg
popa
loop
cmpb
dec
pushf
cwtl
aaa
adc
push
gs
ljmp
mov
fs
adc
inc
shl
pop
out
pop
jb
arpl
decl
or
js
outsb
push
aam
repz
das
inc
mov
loop,pn
fsubs
call
sahf
test
sub
xor
rcll
loop
loopne
ret
out
testb
test
cmp
bound
push
ss
ljmp
pusha
rclb
pop
insb
xchg
or
xchg
cmc
dec
or
das
mov
call
insb
pop
pop
jns
lea
jg
inc
pusha
es
out
int
cwtl
das
dec
stos
xchg
jp
xor
and
clc
inc
jo
push
mov
mov
and
cmpsb
or
decl
cs
fistl
movsl
pop
jo
push
push
mov
add
adc
incl
mov
add
push
push
into
pop
inc
dec
cmp
inc
sbb
or
sub
sub
shrb
mov
ret
mov
mov
mov
mov
sbb
adc
incl
jo
popf
daa
adc
dec
dec
into
mov
stc
out
pop
out
sub
mov
cmc
jmp
push
mov
pop
sti
xchg
pop
sarl
adc
and
mov
cli
incl
js
paddsb
inc
sbb
mov
mov
jmp
int3
repz
xor
cmp
enter
in
adc
data16
lcall
push
setp
scas
or
call
sub
and
push
and
or
testb
call
pop
mov
xor
mov
movsb
jp
mov
sub
test
xchg
shl
cmp
jmp
jg
call
addb
mov
and
add
inc
sbb
shl
push
xor
push
mov
in
push
xchg
jmp
xchg
iret
insb
add
insl
dec
pusha
sbb
jne
cld
sar
push
mov
sub
je
dec
fstpl
xchg
add
push
mov
xorb
loopne
jg
push
arpl
subb
pop
jge
jae
xlat
xchg
cmp
dec
jecxz
mov
lret
je
inc
pop
mov
jnp
sbb
aaa
add
and
loope
popa
add
iret
ja
movsl
cmp
fstl
test
sbb
add
cmpsb
call
jge
call
out
arpl
xor
push
pop
mov
inc
daa
cli
in
xlat
decl
inc
shlb
dec
push
lods
mov
mov
mov
push
mov
cld
ljmp
repz
cli
leave
inc
push
pushf
xchg
mov
and
out
out
cmp
add
incl
and
leave
mov
sub
ljmp
aaa
lock
call
fists
ror
cltd
mov
pop
push
jp
pop
sub
jecxz
xor
stos
pop
mov
movsb
cmp
incl
push
ljmp
xchg
sbb
jge
pop
jecxz
outsl
popa
sahf
mov
ljmp
rorl
inc
fs
in
fiaddl
repz
jecxz
xchg
and
aaa
pop
mov
pushl
jge
xor
movsl
cmp
inc
jno
jnp
or
lcall
xchg
faddl
cmp
icebp
ret
in
or
in
nop
icebp
xchg
stc
xchg
inc
mov
cld
sub
decl
or
jle
ds
inc
mov
or
pop
ret
lds
rcr
ret
f2xm1
sbbb
cmpl
or
orb
mov
cmp
and
fcomip
incl
aam
cltd
add
iret
xor
fwait
xchg
mov
push
insb
cmc
push
pop
sbbl
lcall
cli
xchg
sbb
hlt
sub
cmp
ja
gs
inc
mov
fimull
pop
sarl
xor
sahf
dec
mov
push
jle
xchg
shll
mov
incl
stos
stos
mov
push
adc
rcl
nop
lods
rclb
jmp
jl
jp
popf
adc
jmp
xchg
pop
dec
repz
sub
pop
jl
mov
and
pop
mov
push
adc
pop
xor
loopne
push
fisttpll
cld
dec
jnp
add
jmp
cmp
aam
sbb
and
pushf
out
pusha
sti
ss
sti
pop
hlt
and
cld
enter
stos
in
shrb
mov
mov
jo
cmp
call
jns
adc
dec
xchg
push
fs
sub
dec
mov
popa
mov
inc
xchg
pushl
jp
dec
enter
push
cli
cmc
clc
nop
mov
fdivrs
dec
mov
push
pop
sub
jmp
icebp
and
jne
add
dec
int
xor
sbb
out
inc
cmc
int3
and
ret
ljmp
rcrb
sbb
dec
scas
dec
mov
pop
int
ret
test
pop
or
jl
mov
or
xor
or
mov
jmp
out
ljmp
hlt
inc
jmp
call
out
lea
daa
scas
jg
cli
outsb
enter
out
inc
cmp
repnz
sbb
or
xor
lcall
test
pop
mov
dec
lret
sysexit
jnp
sbb
sti
rcr
xor
jp
mov
ljmp
repz
mov
xchg
or
or
mov
and
in
add
aaa
outsb
mov
cli
dec
mov
lcall
leave
mov
adc
lret
adc
jecxz
jbe
adc
nop
dec
xor
pop
fs
outsl
xchg
sbb
js
push
out
loop
popa
loop
iret
mov
jo
cltd
or
mov
pop
push
xor
flds
mov
aam
arpl
shll
popa
popf
test
pop
jmp
arpl
sahf
rolb
or
fnstsw
in
sub
cmpsl
sbb
mov
jg
mov
fimull
xchg
sbb
jns
cmp
ja
or
stc
pop
push
add
inc
dec
dec
fcoms
iret
clc
stc
ss
xchg
idiv
lcall
push
into
insl
sub
inc
mov
hlt
push
sub
out
andl
cmp
mov
pop
sbbl
stos
or
je
js
ret
ret
cli
std
push
mov
cmpsb
push
bound
and
les
adc
call
mulb
sub
xlat
movsl
push
in
cmpsl
pop
int
xchg
and
push
decl
cmp
out
jp
into
les
fisubrl
iret
aam
in
lret
adc
pusha
dec
fcos
jmp
dec
call
shrl
jp
mov
inc
pandn
jmp
xchg
sub
add
cli
inc
and
sbb
fistps
scas
fdivrs
or
es
mov
icebp
push
or
xchg
cld
xor
push
adc
stos
add
mov
xchg
mov
xchg
sbb
je
test
xor
in
inc
or
mov
lcall
sbb
pop
repnz
add
enter
sub
mov
fcmovbe
je
addl
cmpsl
sbb
mov
mov
push
push
movsb
add
push
rol
inc
fs
subl
imul
and
dec
pop
jnp
pop
pushf
roll
outsl
sub
call
adc
lret
lahf
jne
fdivrp
idiv
int
es
dec
jb
cmpb
mov
xchg
in
xchg
add
fwait
incl
add
mov
lret
and
dec
pushf
scas
out
mov
into
shl
cmp
xchg
pop
pop
cs
loopne
xor
pop
cmc
mov
or
xchg
int
rcl
adc
or
jmp
jecxz
stc
mov
iretw
dec
aas
in
sub
inc
in
cmp
daa
decl
jo
lret
fsubp
rcll
into
scas
sti
in
daa
scas
aaa
in
or
lock
call
cmpsl
cli
xchg
fcmovb
mov
ret
pusha
push
lock
js
clc
insl
loopne
ljmp
mov
pushl
cwtl
mov
sub
xor
add
xor
push
sti
mov
jnp
lcall
cs
fildll
loope
es
mov
cmpsb
fimuls
subl
in
hlt
pop
gs
decl
lret
hlt
cmc
xchg
inc
jmp
xchg
incl
es
push
mov
mov
mov
inc
enter
mov
xchg
pop
lahf
xchg
fstpt
mov
or
daa
xchg
loope
repnz
cmp
test
inc
bound
shlb
fcmovne
mov
mov
dec
ljmp
incb
and
push
int3
mov
lcall
push
loopne
lock
decl
adc
out
jo
jg
subl
ljmp
leave
ljmp
cltd
mov
int3
ja
repnz
mov
punpckldq
or
aaa
lea
jno
jg
sub
push
in
cmp
push
fisttps
push
and
push
mov
xchg
lcall
jns
mov
xchg
insl
std
xor
and
pop
xor
lret
add
outsb
mov
dec
call
adc
mov
loope
add
mul
call
adc
adc
scas
enter
sbb
mov
inc
lcall
ret
inc
sbbb
js
out
sub
pop
decb
mov
push
cwtl
test
test
adc
add
and
jmp
addps
fisttps
mov
jb
cmpsb
and
mov
inc
repnz
mov
popf
inc
jl
aas
jp
sbb
aam
lcall
pop
cmp
loopne
daa
sysret
aad
insb
pusha
in
add
aaa
das
stos
mov
jg
or
arpl
fsubl
movl
aam
inc
jo
or
sbb
incl
pop
dec
dec
int3
std
outsl
sub
pop
or
sub
cmpsb
xchg
ljmp
jbe
push
movsb
fisttpll
neg
push
daa
xchg
and
mov
lcall
iret
leave
pop
out
sbb
cmpsb
mov
mov
sbb
sub
fildl
cmp
dec
add
aad
fwait
aad
movsl
push
lds
inc
out
mov
pop
fwait
hlt
adc
pop
es
jmp
pushf
mov
mov
cli
shrl
mov
rolb
or
cld
decl
jo
add
mov
pusha
test
jo
cmc
je
in
movsl
test
incl
mov
sub
dec
dec
adc
jmp
lods
pop
pop
jg
pop
daa
outsl
pop
cmp
push
hlt
sbb
sub
cmpsb
test
ds
push
push
fidivrl
outsl
int
decl
out
ds
mov
inc
and
sub
in
insb
mov
mov
idiv
incl
jnp
mov
and
leave
scas
imul
mov
jbe
push
sub
cwtl
mov
fistpl
or
dec
mov
aas
shlb
pop
add
insb
sbb
xchg
cmpsb
mov
test
jbe
push
xchg
push
xchg
sarb
xchg
fcoml
inc
in
sbb
int
pushl
pop
push
sbb
lea
or
lock
pop
int
adc
outsl
faddp
xor
test
xchg
mov
jg
movsl
jmp
push
int
pop
mov
cmc
and
xor
jp
aas
aaa
cmp
std
pop
jle
sbb
cli
mov
fsubrs
dec
in
nop
scas
cli
decl
dec
pop
loop
fwait
pop
xor
push
jo
or
orb
mov
fnstenv
cs
pop
stos
das
shlb
loopne
inc
cwtl
repnz
fmull
jmp
sbb
fwait
pop
decl
jle
cmpsb
push
and
dec
lret
aaa
sub
test
test
mov
aaa
cmp
mov
fcomip
loopne
mov
data16
pusha
in
xor
outsl
adcl
xor
inc
dec
rcrl
in
gs
push
dec
push
jo
push
fcomps
scas
andl
jmp
push
cmpsl
push
push
sahf
xchg
mov
mov
es
adc
inc
call
scas
icebp
scas
ror
sub
cmpsb
loopne
pop
mov
mov
clc
pop
daa
inc
adc
mov
clc
fidivrl
out
or
inc
xorb
rcr
jp
xlat
leave
sbb
cmp
sar
lcall
pusha
dec
repz
mov
xchg
outsl
inc
dec
jp
jae
push
repz
mov
pushl
dec
loope
xchg
inc
xchg
ljmp
insl
hlt
outsl
dec
lcall
pop
stc
enter
decl
lock
mov
cmpsb
push
arpl
jne
mov
inc
jmp
sub
into
in
decl
mov
int3
push
ss
mov
rcrb
int
mov
sbb
ljmp
aad
insl
rorb
mov
add
jb
sbb
dec
mov
sub
aas
cmove
cmpsb
enter
dec
cmp
cmpsb
fstps
call
push
stc
mov
ja
leave
mov
add
std
mov
int3
test
xor
jno
or
ljmp
sbb
add
or
adc
test
jo
hlt
js
push
in
jmp
cmpsl
addr16
pushl
std
lods
out
in
nop
les
icebp
pushf
pop
in
arpl
or
ds
test
dec
mov
in
adc
xorl
hlt
and
clc
cmc
push
pusha
push
cmp
fnstsw
call
xchg
dec
sahf
mov
cli
mov
dec
aaa
out
xchg
sahf
movsl
sub
fisttpl
push
pop
gs
adc
in
xchg
mov
sub
jp
inc
imul
mov
cmc
xlat
adc
mov
sbb
cld
xlat
xor
add
mov
inc
and
shlb
adcl
lcall
push
adc
pop
test
xor
lret
aad
in
dec
aas
scas
xchg
dec
pop
cmc
dec
fs
xor
push
out
int3
lods
popf
frstor
ljmp
mov
adc
add
mov
jmp
aaa
sub
aas
mov
push
fcos
call
sub
outsl
xchg
mov
xchg
xchg
stos
jns
cmp
les
dec
push
and
incl
inc
lea
addr16
mov
and
and
adc
jl
push
clc
pop
jp
mov
ljmp
shl
fnstcw
xchg
jo
pop
ficomps
call
rcrb
ljmp
xchg
sbb
movsb
cmc
jbe
jg
hlt
mov
mov
and
popa
or
aad
jmp
nop
mov
into
fstpl
mov
push
jno
dec
add
notl
jmp
out
clc
sbb
mul
movb
cmc
push
cltd
sbb
mov
out
clc
pop
mov
in
jle
jmp
nop
lret
mov
mov
stos
clc
bnd
cld
pop
loopne
loopne
adc
daa
pushf
xchg
stos
mov
into
int3
fmull
push
test
jnp
ret
call
add
mov
and
sub
or
decl
push
cmp
dec
sub
negl
out
xor
sarl
call
sub
xchg
pop
incl
stos
or
push
push
sub
adc
jg
xchg
push
cmp
pop
mov
fsubr
mov
add
sbb
dec
sti
fistps
out
pop
mov
in
cmc
flds
sub
pusha
add
inc
test
inc
popa
jge
adc
pop
or
std
cmp
repz
dec
sub
jnp
lret
push
ljmp
rorl
inc
add
mov
out
addr16
jle
lcall
call
mov
adc
test
sbb
popa
lock
add
je
ja
out
mov
out
add
shll
lcall
mul
test
not
jbe
sti
jl
mov
sahf
icebp
test
pushf
rcrl
lock
std
decl
loopne
out
ds
lret
push
xor
push
push
flds
lcall
movsb
pop
mov
movsl
push
mull
sub
sub
pushl
mov
in
push
mov
mov
ljmp
jbe
repz
pushl
mov
or
mov
jp
cld
shll
xchg
ljmp
push
sbb
sarl
add
fisttps
xorl
dec
test
xchg
add
jno
je
pushf
outsb
jo
lahf
xchg
cmpsl
pusha
ds
adc
ljmp
push
imul
xchg
ja
sbb
push
ret
retw
lcall
adc
lret
fucom
jno
gs
mov
icebp
push
lock
cs
fisttpl
push
add
mov
push
jbe
dec
dec
jns
mov
sub
inc
imul
jbe
mov
dec
idivl
ss
mov
add
and
inc
dec
xchg
pop
loope
xchg
pop
shll
and
test
pop
cmp
arpl
push
push
mov
arpl
mov
fwait
and
fadd
add
or
inc
push
shrl
push
or
mov
lcall
add
mov
jnp
pop
std
fistpll
addr16
gs
call
mov
repz
mov
jecxz
dec
mov
je
jmp
call
rcr
dec
pop
mov
movb
xor
cs
loope
jns
pop
mov
cltd
cs
out
xchg
jle
xchg
std
jbe
fldl
mov
test
mov
xor
mov
lcall
inc
mov
sub
loopne
cmc
dec
in
or
pop
and
push
sbbl
sar
ljmp
mov
movsb
dec
cmp
inc
pop
into
add
lret
mov
and
inc
fldl
frstor
mov
in
rcrl
jecxz
lock
repz
mov
push
add
shlb
dec
jl
scas
out
lcall
pop
js
add
jmp
mov
scas
xor
ja
push
ja
les
test
pop
frstor
inc
adc
int
std
je
loop
dec
jb
mov
push
lods
and
jmp
jb
xadd
ret
clts
int
and
adc
add
lahf
imul
mov
xchg
pop
inc
mov
imul
jg
dec
xchg
pusha
repz
aas
repz
insl
push
push
adc
push
jmp
cmpsl
xor
fistps
andl
adc
push
mov
add
inc
fisubl
push
daa
xchg
jp
mov
fsts
sub
or
pushl
push
andb
cmpsb
xchg
repz
scas
push
pop
popf
inc
ror
mov
jae
data16
jmp
xor
dec
cmpsl
inc
outsb
sub
cltd
dec
dec
fisubrs
cld
aam
out
xor
call
or
xor
cs
in
js
push
or
fildl
stc
arpl
or
xchg
icebp
xor
sbb
mov
xchg
xor
cmc
mov
incl
sbb
pop
mov
out
insb
mov
les
rcrb
mov
xchg
sub
xor
aad
lret
sahf
jmp
sub
xchg
adc
jg
stos
hlt
js
pop
stos
push
adc
pop
lods
xor
fucomi
cltd
push
cmp
loop
add
jbe
push
inc
lds
pusha
add
xchg
inc
cmp
jecxz
adcb
lcall
sub
stos
addr16
jae
dec
mov
pop
xor
push
push
adc
rcl
xor
shl
or
sahf
ja
jmp
push
pop
dec
mov
push
movsb
pusha
mov
cld
sbb
mov
mov
cwtl
outsb
push
int
clc
jb,pn
call
call
cmc
xchg
sbb
cmp
je
cmpsb
push
push
xchg
push
rol
and
insl
jg
fbstp
hlt
sub
lcall
or
arpl
adc
sti
roll
fpatan
aad
mov
and
push
decl
adc
pop
sub
xor
fildll
cld
sti
xchg
imul
dec
cmp
sar
ljmp
dec
or
adc
jg
cmp
jg
movsb
insb
dec
adc
into
xchg
sbb
dec
sub
ja
jno
dec
fwait
adc
scas
sub
dec
mov
je
mov
inc
daa
mov
subl
pop
push
mov
fcoml
in
data16
mov
faddl
ljmp
fbld
mov
aam
js
adc
mov
les
ret
cmpsb
dec
mov
call
mov
jbe
mov
dec
les
fldenv
sbb
call
test
cmp
dec
lds
mov
aad
xlat
or
mov
loop
xor
mov
mov
xor
push
negl
clc
outsb
cmp
pushl
cmp
mov
dec
adc
movnti
sbb
adc
and
inc
mov
mov
lcall
cmp
loop
lret
pop
adc
loop
call
subb
jle
push
sbb
popa
pop
cli
pop
insl
shll
frstor
jg
mov
pushf
jl
push
movsb
xchg
mov
mov
arpl
pop
out
test
push
call
fdivrs
pop
lods
cmp
mov
outsl
movb
ljmp
mov
pop
jbe
xor
paddsb
mov
push
inc
pop
pop
rcr
lcall
jb
push
ds
push
imul
ljmp
jbe
lea
lcall
ret
mov
in
xorb
cwtl
and
notl
lret
sub
call
cs
out
sbb
add
sarl
inc
fbstp
ljmp
mov
push
test
sahf
ret
cmp
out
repz
mov
push
push
out
mov
fprem
lret
into
loop
sub
jmp
in
icebp
and
out
mov
bound
scas
in
push
je
fidivrl
add
aad
push
xchg
jge
int
jle
jmp
mov
out
xchg
jbe
mov
add
shlb
cmp
inc
pushf
popa
arpl
call
nop
adc
fwait
pop
xor
lock
push
xchg
or
mov
pop
sub
inc
in
fsubl
cltd
data16
mov
icebp
scas
add
mov
out
xchg
ja
scas
scas
sbb
andb
testl
push
adc
test
jmp
shl
mov
test
add
inc
adc
out
cmpsl
lods
mov
ret
inc
jmp
add
pop
jmp
movsb
std
cmp
cmp
in
mov
jecxz
popa
inc
pop
loopne
mov
adc
jmp
std
out
inc
test
jecxz
pop
cmp
pop
dec
mov
int3
sub
aad
cltd
out
push
mov
loop
fwait
jno
sti
es
sbb
incl
insb
dec
ljmp
sub
xor
pop
sbb
test
loope
mov
lahf
jb
dec
push
ret
mov
adc
sbb
out
sub
dec
leave
push
stc
cmpsb
ljmp
pop
and
popa
js
insl
add
test
dec
mov
lcall
fsubs
add
inc
mov
xor
inc
pushf
add
fstpt
mov
pop
push
insb
pop
add
arpl
cmp
icebp
inc
das
lock
lods
dec
out
pusha
hlt
ja
aad
add
mov
inc
decl
in
stos
fisttpl
loop
mov
fldt
xchg
popa
mov
jg
idivb
pushf
loopne
fabs
clc
cmpsb
push
sbb
mov
and
sub
dec
rcrb
mov
and
stos
inc
sahf
movsb
push
fs
mov
pop
cmp
insl
shrl
orl
es
sbb
popa
test
push
mov
mov
sbb
mov
sti
pop
push
lcall
mov
sahf
fisttps
inc
mov
lret
repz
mov
pop
sub
pop
xchg
mov
mov
mov
in
sahf
mov
mov
lock
xchg
sub
push
movsb
sbb
and
xor
cmpsb
andl
and
fistpl
cmp
aas
pop
lcall
mov
mov
cmc
cmp
stos
ss
xor
inc
dec
rcl
lods
xlat
out
cli
nop
and
scas
pushf
or
leave
call
sub
adc
cmpsb
lods
ficoml
call
lds
xor
imul
pop
pop
mov
jmp
test
and
mov
shlb
pop
lcall
jb
sbb
jmp
lds
mov
das
leave
mov
ds
clc
mov
out
js
call
loope
cmp
out
in
jecxz
sub
push
fwait
pop
subl
mov
out
cli
ja
dec
add
cmc
push
cmp
je
inc
fisubl
and
sub
sbb
jmp
test
xchg
movsb
movsb
ret
shrl
mov
shlb
decl
loopne
adc
pop
jo
cmp
ljmp
push
test
and
mov
and
mov
jp
and
xchg
cld
call
adc
pop
mov
loop
or
fmuls
movsl
loope
les
jl
dec
loop
cli
pushl
mov
leave
addr16
ja
mov
mov
out
loop
jnp
aaa
ret
dec
ficomps
mov
sub
das
inc
mov
or
lods
jp
inc
je
xchg
loop
pushf
mov
cld
mov
mov
scas
jg
icebp
hlt
pop
cwtl
call
pushf
shll
push
cmpsb
mov
xor
dec
jecxz
inc
and
rolb
cmp
sbb
out
sar
mov
lds
mov
xchg
or
orb
outsl
int3
decl
mov
ror
mov
mov
je
jmp
repnz
mov
or
cwtl
test
push
mov
xchg
es
fadds
ret
pop
xor
decl
add
adc
mov
fidivs
mov
fucomip
mov
jae
bound
add
cmp
aam
insb
ds
dec
inc
adc
icebp
iret
std
or
cmp
stos
std
test
jne
loop
xchg
xchg
fxch
mov
movsl
jbe
jo
rorl
test
stos
jb
adc
aaa
call
rol
sub
mov
outsl
jl
xor
loop
fwait
adc
in
lods
mov
call
test
add
ja
cmp
scas
popa
jnp
loope
repnz
test
loopne
in
jno
cmpsl
or
dec
mov
xchg
add
mov
mov
rorl
mov
mov
mov
jmp
fbld
dec
jg
push
xchg
insb
lret
pop
jp
lret
mov
cmpsl
fdivs
call
pop
mov
popf
push
mov
and
inc
dec
mov
adc
sub
cmpsb
inc
fldpi
insl
sbb
or
faddl
dec
jle
sub
pop
sar
dec
repnz
je
testb
dec
stos
xor
addr16
nop
pop
repz
loopne
push
sbb
push
mov
iret
js
ja
jbe
dec
mov
jl
sbb
test
test
cmp
movsb
jns
mov
iret
fdivr
decl
outsb
cli
in
aas
outsl
leave
push
or
jmp
mov
imul
jg
ljmp
nop
jae
inc
add
shl
scas
jo
add
ret
cli
insl
jns
dec
loope
insb
loop,pn
scas
inc
call
push
jo
jmp
jl
nop
lahf
daa
mov
fimuls
pushf
pushf
jno
cmp
xor
mov
jmp
push
incl
imul
cld
into
out
xchg
cld
stc
in
dec
aad
dec
mov
call
mov
movb
add
mov
cmpsl
dec
shl
dec
clc
ljmp
fwait
inc
lods
inc
add
popf
jecxz
pop
std
mov
daa
cmpsl
cld
out
test
xor
aad
xchg
mov
push
lock
dec
pop
call
cli
call
sub
fdivl
leave
mov
jns
push
fnstsw
cmp
imul
mov
cmp
cmp
gs
mov
out
mov
adc
jmp
pop
lret
fs
leave
mov
push
xor
dec
stos
xchg
ja
test
test
aad
aaa
in
shll
je,pt
adc
in
outsb
xchg
aad
scas
push
cli
or
dec
inc
std
hlt
roll
and
test
stc
add
sub
jmp
xchg
fmuls
lock
fldcw
jecxz
xchg
out
pushf
insl
mov
loop
ret
xchg
addr16
inc
lds
inc
cmpsb
xchg
push
xchg
xor
lret
lcall
sbb
je
mov
loopne
fbld
jle
out
sbb
aad
inc
jno
outsl
or
push
xchg
xchg
lods
clc
sbb
popa
jns
out
push
lahf
push
lret
sbb
xchg
mov
in
inc
jg
cmp
dec
xchg
sahf
mulb
movsb
call
je
or
fistps
frstor
cs
jle
pop
mov
incl
xorl
shl
cmp
mov
mov
xchg
pushf
xchg
push
lcall
fisubs
int3
es
test
fcompl
xchg
and
scas
push
sub
call
inc
int3
pop
add
cvtps2pd
outsb
sbb
movsl
xchg
jle
loop
or
imul
iret
sbb
aaa
mov
aas
loopne
test
jl
adc
mov
xor
call
test
cmp
into
sbb
jbe
pop
or
sti
sub
cmp
mov
mov
dec
roll
hlt
sbb
add
lcall
cmp
popf
sti
adc
movsl
cmp
subl
adc
mov
xchg
xor
les
mov
repnz
adc
dec
pop
push
rclb
mov
jp
or
ljmp
call
insl
aaa
pop
jbe
bound
xchg
pop
xchg
jb
push
mov
lods
aam
call
popf
mov
cmpl
xchg
movsb
adc
push
vprotd
push
cmpsb
call
std
sub
push
scas
pushf
and
or
cmp
pusha
in
fwait
adc
pop
pop
jg
ljmp
test
sbb
loop
adc
nop
fldenv
mov
fldt
lea
xor
push
rolb
in
mov
mov
clc
xor
les
jg
or
pushf
test
jecxz
mov
enter
jno
xchg
ljmp
popa
in
xlat
test
or
pushl
insb
in
andw
decb
cmpsl
loope
pop
push
mov
inc
jnp
call
incb
fistpll
in
pop
inc
xor
xor
movsb
push
clc
pop
movsb
outsl
shlb
dec
sub
sub
in
lods
mov
ss
add
test
and
sbb
call
int
pushf
in
mov
aam
xor
or
icebp
xor
cmp
pop
jp
fwait
loopne
push
aad
ljmp
jecxz
push
adc
imul
enter
mov
adc
repz
mov
out
adc
cmpl
add
addl
mov
sahf
push
repnz
sbb
fcoml
mov
movsb
fnstsw
sahf
out
lcall
rcrb
icebp
sbb
sarl
loop
pusha
adc
pushf
pop
lods
lock
ljmp
xchg
popf
xchg
out
cmp
xchg
ret
inc
xchg
repz
aaa
sub
add
cmpsl
rcrb
or
push
mov
inc
insb
jo
sbb
sahf
dec
mov
cmp
popa
add
push
test
cmpsl
mov
sti
ljmp
jmp
add
stos
xchg
xchg
cmp
insl
and
sti
hlt
cmp
ljmp
mov
xor
adc
sub
inc
cmp
cmc
sub
ljmp
sahf
in
xchg
shrl
lahf
xchg
into
push
test
fs
ljmp
jnp
mov
icebp
add
or
stc
icebp
notb
jno
mov
pushl
pop
and
ror
xchg
lock
mov
loop
sbb
push
lcall
filds
lods
and
push
push
xchg
sahf
test
scas
and
cmp
dec
mov
insb
dec
out
call
clc
ret
lret
dec
pop
xor
fdivrp
mov
mov
push
mov
jmp
adc
add
leave
jns
push
pop
jno
iret
push
pop
es
aas
rcrb
push
mov
lcall
sub
sub
repz
jmp
les
or
fldl
add
fcmovbe
push
push
out
xchg
popf
fadds
ljmp
into
es
test
sbbl
sbb
std
cmp
jno
pop
fs
pop
xchg
mov
or
lret
ljmp
mov
mov
lahf
stc
out
add
pop
inc
jae
xchg
icebp
sar
pop
or
aad
leave
inc
xchg
add
xchg
aam
ret
ret
dec
mov
cmp
clc
out
sub
add
aad
daa
int
rcrb
mov
jmp
insl
lea
sbb
pop
inc
sub
jmp
int3
inc
es
or
stos
push
adc
rolb
fst
cmc
leave
cli
ljmp
cmp
or
in
into
sbb
movsb
aaa
in
pushl
loopne
fdivl
xor
cmc
jp
cmp
stc
iret
in
fimuls
stc
jb
jle
jg
sub
aas
push
mov
int
mov
decl
scas
mov
dec
xor
xchg
out
test
scas
cmp
out
jb
cwtl
rclb
pushl
cmp
testb
adc
adc
mov
mov
mov
movsb
fidivrs
ficoml
enter
add
cmp
mov
repnz
lcall
mov
movsb
test
fwait
jae
push
int3
or
push
scas
push
fstpt
cs
lcall
xchg
lahf
and
nop
js
mov
mov
add
decl
leave
xchg
dec
lcall
stc
xchg
insl
and
test
out
ljmp
test
jp
insb
mov
pop
add
fcoms
mov
sub
jg
cmpsl
arpl
jl
lahf
outsl
lret
or
pushw
adc
and
call
add
dec
loop
cmp
mov
mov
inc
enter
outsb
pop
xchg
fwait
cmc
pop
inc
mov
cmp
push
xchg
lcall
sub
sbb
jg
jg
loop
xor
jle
xchg
aaa
mov
inc
push
into
add
aaa
mov
add
mov
lcall
pop
test
lret
je
out
enter
imul
mov
hlt
decl
arpl
adc
jnp
or
ss
int3
rcr
clc
std
incl
push
repz
lock
orb
cld
push
inc
int3
je
test
pusha
pop
lds
imul
fsubrs
cmc
fisubl
lcall
out
xor
stos
cld
test
mov
mov
outsb
jmp
sub
mov
and
add
jg
adc
mov
ljmp
or
adc
repz
mov
into
xchg
mov
rorb
dec
aam
ret
call
cli
xchg
jbe
xor
mov
imul
adc
adc
out
jg
test
fsubrp
mov
into
in
push
or
lcall
aam
cmp
lret
stc
xchg
in
into
lds
scas
notl
or
mov
ret
fsubrl
incl
aas
mov
imul
sbb
repnz
mov
out
jns
mov
mov
fsub
xchg
lods
push
mov
movsb
and
shll
sahf
sub
dec
hlt
push
xchg
jge
lods
dec
cmp
cmp
imul
aad
addr16
push
lea
sub
pop
fbstp
and
dec
pop
int3
std
mov
lret
in
into
push
or
movsl
sbb
pop
cmp
out
lret
sbb
out
cmp
ret
arpl
into
lea
hlt
fbstp
pop
imul
pop
dec
push
popa
ljmp
lods
fs
mov
dec
idiv
shrl
and
fcomip
xchg
in
dec
mov
data16
aas
mov
incl
dec
ss
sti
sub
or
cli
xor
add
xchg
push
or
inc
ror
mov
xchg
ljmp
xchg
xor
add
nop
das
shr
dec
ds
ljmp
lcall
xchg
sbb
cmpsl
fnsave
popf
stos
movl
test
fcomip
incl
lret
mov
jo
loop
jg
in
sub
mov
arpl
mov
and
outsb
dec
jno
mov
jg
adc
flds
fstps
mov
int3
push
cld
cwtl
enter
xor
mov
test
xchg
stos
xchg
add
fcomip
ljmp
xor
pop
mov
push
and
mov
movsb
push
pop
jle
out
hlt
mov
int
mov
hlt
mov
xchg
fldenv
fwait
lcall
out
stc
pusha
mov
mov
lock
mov
sbb
mov
pop
inc
repnz
clc
jmp
mov
lods
scas
imulb
movsb
xor
in
pushl
cmpsb
sbb
or
aad
pop
or
shrb
pop
cmpb
mov
into
aam
loop
mov
test
push
das
mov
pushl
repz
es
pop
js
mov
les
insb
test
hlt
hlt
jle
ljmp
lea
jbe
lea
loop
mov
sti
sbb
mov
push
out
jno
jmp
add
pop
mov
cmpb
cmc
sbb
xchg
leave
xchg
insl
data16
ljmp
xchg
mov
int
inc
cwtl
cli
inc
mov
in
pop
mov
xor
leave
decl
je
pop
js
pop
mov
fsubrs
mov
ds
mov
ljmp
andb
fsub
xchg
dec
out
lock
adc
lock
sub
dec
fcoms
call
inc
cmpb
pop
cs
jae
roll
pop
bound
inc
mov
pushl
test
repz
in
outsl
mov
mov
les
dec
lods
xchg
out
mov
jno
inc
inc
and
jl
ljmp
lock
in
stos
movsl
or
jp
lock
testl
dec
test
jne
insl
lcall
in
inc
inc
cmp
jg
loope
push
mov
imul
pop
or
emms
lods
and
adc
mov
cmp
decl
test
nop
jmp
inc
test
and
out
mov
inc
dec
imul
enter
das
inc
push
fsts
pop
mov
cs
xchg
clc
int3
or
cld
ljmp
inc
pop
adc
lret
inc
xchg
and
aaa
fld
dec
bound
outsl
mov
or
aaa
jbe
xor
and
dec
in
dec
daa
movsb
dec
and
call
jge
shl
inc
sub
out
bound
mov
push
pushl
rorb
pop
push
push
jl
mov
ss
repz
pop
insb
out
outsl
out
sub
mov
pop
out
dec
xchg
cmp
add
cmp
popa
popf
lret
xchg
sbb
pushl
push
xchg
mov
or
dec
push
add
mov
popf
xchg
add
cwtl
xor
dec
ror
xor
add
inc
fistpl
push
aam
mov
or
repnz
pushl
xchg
mov
cmp
add
mov
xchg
scas
push
cmp
sbb
xorb
decl
fdivp
dec
mov
xchg
outsb
iret
cli
lcall
div
xchg
iret
adc
or
mov
pop
pop
test
sbb
fs
adc
mov
dec
and
jne
pop
lods
or
call
inc
insb
insl
push
mov
inc
inc
or
sbb
push
mov
call
outsb
pop
imul
in
test
dec
in
mov
dec
or
push
data16
mov
enter
imul
and
loopne
or
pop
aad
xchg
pushf
xchg
inc
xorl
ljmp
test
or
inc
les
ljmp
push
aas
cmp
sbbb
addb
or
pusha
and
add
and
loop
out
stos
cmpb
addb
or
jae
negb
or
add
or
fidivl
nop
daa
jo
mov
jg
add
pop
add
clc
pop
push
jb
lods
jg
inc
cld
mov
popa
add
add
dec
orb
test
lahf
pop
push
adc
inc
mov
sub
adc
and
scas
push
mov
xchg
ucomiss
add
nopl
scas
dec
pop
sahf
dec
test
pusha
or
xchg
decl
add
xchg
movsl
push
daa
add
data16
add
es
push
scas
fildll
push
movsb
inc
scas
push
and
stos
push
and
idiv
jbe
push
test
and
imul
push
inc
pop
inc
xchg
mov
lods
push
mov
stc
sbb
mov
sbb
add
mov
pusha
sbb
flds
mov
adc
or
enter
out
ljmp
or
or
lret
imul
imul
addr16
negb
add
mov
mov
jbe
mov
mov
jae
mov
sbb
sahf
stos
pop
stos
mov
inc
jb
movsb
aam
cld
mov
mov
push
shll
add
outsl
push
shll
fidivrl
fistl
iret
outsb
or
push
ret
je
je
mov
out
jge
fisttps
add
cmpsb
out
jbe
mov
in
movsb
push
add
mov
insl
in
stc
mov
shlb
mov
imul
push
push
push
add
jne
push
dec
mov
push
ret
add
mov
rcrl
push
pop
dec
add
loopne
cmp
push
add
mov
aaa
add
push
push
shlb
addr16
lcall
add
ja
ja
fnsave
push
xlat
jne
add
ja
push
shlb
add
xlat
ja
js
push
lock
jns
push
jp
jp
inc
push
fidivrl
pop
mov
out
sarl
ja
fldl
pop
push
push
push
out
add
nop
ljmp
push
xchg
sub
xchg
in
xchg
sub
mov
xor
xchg
push
setbe
xor
mov
xchg
dec
fisttpl
push
lcall
cwtl
push
cltd
cmp
cmp
pushf
cmp
sti
lock
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
lahf
mov
mov
mov
mov
push
imulb
sar
fadd
add
cld
out
out
push
hlt
sahf
out
sahf
clc
stc
cli
sti
cld
std
imul
add
mov
jae
xor
add
popa
push
add
fwait
int
add
pop
add
pop
add
add
in
lds
mov
fistpll
add
add
or
mov
or
outsl
or
or
repnz
stos
test
test
or
aam
pop
or
or
pop
pop
adc
adc
lods
outsb
push
rcrb
push
lods
lods
popf
lods
dec
rcrb
pop
push
scas
fcmovnu
stos
mov
scas
scas
insl
lods
pop
pop
adc
mov
add
sbb
push
pop
scas
sbb
scas
scas
scas
and
sbb
nop
fwait
and
mov
mov
push
inc
push
xorl
pushf
sub
sbb
lock
xchg
push
xor
mov
and
and
outsl
push
and
mov
fwait
and
pop
sub
mov
cld
test
pop
sub
popa
and
mov
add
es
fimuls
pop
aas
cmp
mov
push
dec
pop
cmp
push
mov
cmp
cmpsb
add
mov
pop
xor
insl
insl
push
pop
pop
or
or
add
out
addr16
insl
pop
pop
xor
mov
pop
das
push
cs
xor
in
std
mov
add
xor
das
pop
push
push
xor
adc
pop
push
cs
incl
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jl
pop
sub
cld
jno
jmp
xor
pushw
dec
dec
cmpb
jo
mov
inc
xorl
lcall
sahf
mov
pushf
fwait
lcall
mov
cld
out
mov
sub
dec
ja
jns
dec
push
bound
mov
adc
xor
jne
addb
je
jg
inc
shrb
sub
sbb
and
add
or
pop
adc
outsl
dec
jle
xchg
out
jg
pop
push
dec
add
push
mov
cmpsb
push
std
fidivl
sub
js
xor
xor
ja
push
ja
jb
cs
dec
xor
mov
add
jae
outsl
sti
jbe
dec
sbb
and
mov
xchg
mov
mov
pop
jo
push
inc
mov
cmp
mov
inc
add
or
enter
xchg
jp
inc
push
popf
inc
jle
pushl
xchg
jno
lret
push
bound
mov
aas
out
cmp
mov
inc
push
sahf
mov
incl
mov
add
outsb
add
xchg
xchg
pop
push
test
cmpsb
mov
cmpsl
mov
movsb
jae
add
jb
shll
das
pop
push
mov
push
rorb
add
lcall
fwait
testl
into
dec
mov
add
ja
sahf
adc
jg
jbe
fistpl
imul
xchg
xchg
int3
imulb
and
testb
mov
data16
shrl
repz
outsb
push
outsl
ror
fs
mov
jge
push
jg
fiadds
call
add
mov
add
jle
and
cmpsb
mov
add
test
add
loopne
iret
sahf
jae
jnp
mov
jb
out
insb
push
std
jbe
jg
jle
or
jecxz
or
push
aad
push
divb
fildl
adc
push
mov
pop
addb
fwait
mov
sbbl
test
test
sbb
test
into
mov
mov
push
xchg
nop
and
out
xchg
add
in
xchg
lock
sub
sub
divb
xor
push
xchg
repnz
xor
subl
sahf
xor
lcall
fdivrs
pushf
cmp
lock
imul
cmpsb
scas
jo
test
sahf
mov
sbb
shrb
roll
push
lgs
int
mov
mov
out
jl
insl
sarb
sarl
push
movsb
mov
into
add
addr16
hlt
adc
push
dec
out
inc
movsb
xchg
lods
je
dec
daa
and
sub
add
mov
femms
or
das
in
or
or
es
push
adc
add
push
add
add
ds
add
cld
mov
mov
mov
xor
ds
xchg
push
mov
pop
pop
sbb
mov
pop
sbb
push
add
and
loopne
int
mov
ds
mov
aas
and
xor
xor
repnz
push
adc
aas
aas
cmp
adc
add
repnz
add
lods
addb
inc
inc
mov
inc
cmp
out
and
dec
mov
dec
aas
adc
ds
xor
dec
jge
arpl
test
mov
pop
cmp
ds
add
mov
lcall
pop
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
mov
movsb
movsl
mov
lcall
add
sub
sub
sub
add
dec
and
inc
mov
ds
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
call
mov
mov
nop
test
insl
popf
mov
je
xchg
jns
jle
addl
jo
outsb
pushf
sub
stos
cwtl
sti
lds
xlat
or
push
rolb
push
sti
or
mov
incl
adc
loopne
out
or
repz
jl
push
add
cmc
repz
dec
xor
aas
add
sti
mov
add
add
mov
add
mov
or
mov
fnstsw
repnz
sti
fistpll
xchg
addr16
add
pushf
add
mov
push
jns
imul
bound
push
arpl
mov
or
or
push
push
dec
lret
js
into
xchg
mov
add
mov
mov
test
scas
xchg
js
in
and
pop
inc
rolb
out
jmp
sub
mov
push
xchg
push
sub
nop
sub
xchg
mov
ficoms
es
mov
jle
jbe
negl
fcmove
fst
test
lret
loopne
push
std
push
adc
divl
fwait
lods
adc
xchg
add
test
jg
jle
adc
insb
add
leave
adc
push
enter
dec
dec
dec
dec
dec
dec
add
pop
sti
pop
in
add
push
dec
or
adc
cmp
adc
dec
or
add
dec
push
adc
add
or
pop
pop
lods
stc
cmpb
inc
push
dec
sbb
lahf
xchg
jne
sbb
inc
inc
inc
adc
pushl
dec
dec
add
dec
adc
inc
ds
cmp
cmp
cmp
and
daa
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
or
push
push
lods
mov
fwait
mov
mov
mov
add
ss
ss
add
outsb
add
mov
outsl
add
mov
adc
pop
sbb
mov
cmpsl
sbb
inc
test
and
adc
mov
test
fstpl
incl
add
cmp
mov
es
dec
push
jmp
out
cwtl
cmpsb
pop
stc
sysret
in
loopne
xchg
xchg
lock
hlt
add
push
jg
add
sub
pop
aaa
outsl
pusha
push
add
sahf
push
pusha
push
inc
jg
addr16
push
mov
into
shrl
jg
cli
pop
inc
adc
pop
cli
xchg
ret
pop
jg
pop
add
addr16
mov
mov
pop
sbb
mov
pop
add
pop
das
sti
mov
push
cs
jle
andb
adc
sti
jg
loopne
fistpl
xchg
inc
test
jg
jg
or
pop
or
stos
mov
cwtl
idivb
cld
pop
add
or
jle
loopne
pop
les
adc
or
adc
jg
jg
or
mov
sub
jle
add
sbb
andb
sub
add
jmp
adc
stos
xor
decl
add
mov
mov
inc
data16
mov
fdivrp
add
mov
add
xchg
or
and
push
jbe
adc
test
push
test
sbb
sbb
mov
jle
lret
imul
and
adc
mov
addr16
xor
mov
adc
je
or
add
and
add
sbb
and
scas
data16
add
orl
jg
lods
or
cmpsb
incl
or
jg
xor
movb
cs
cs
fldcw
cmpsb
ljmp
jnp
mov
pop
add
daa
mov
insl
sbb
aaa
pop
pop
mov
pop
jle
int3
loopne
dec
add
or
test
mov
jle
sbb
call
cwtl
adc
dec
xchg
push
ja
cmp
bound
add
mov
comiss
daa
push
arpl
or
mov
arpl
out
cmp
decl
dec
or
pop
pushf
push
xor
ljmp
dec
inc
inc
dec
sbb
jle,pt
jle
aam
xor
into
ja
xchg
push
push
fnstenv
add
push
and
cmp
jbe
inc
xchg
mov
out
push
jnp
push
jp
popf
insl
adc
push
js
dec
jbe
pop
add
aaa
bound
mov
mov
popf
adc
or
popf
ljmp
decl
jne
iret
jle
dec
jmp
outsb
ss
mov
call
or
fildl
fiadds
int
pop
lahf
mov
push
mov
fwait
adc
jbe
sahf
inc
out
and
mov
xchg
cs
aas
popf
inc
push
pushf
cmp
roll
cmp
mov
mov
xchg
xor
xchg
xor
sub
fisubrs
nop
sub
nop
daa
ss
cs
mov
cmp
mov
xor
data16
call
ljmp
xchg
mov
xor
push
cmp
pushf
push
inc
sahf
or
lcall
sub
cs
add
test
ja
sahf
sbb
adc
xchg
adc
push
in
movb
ja
push
jg
xchg
aaa
mov
add
and
mov
add
sbb
nop
fmuls
xorb
xorb
js
add
outsl
add
dec
adc
or
inc
aas
jns
mov
push
adc
pop
push
orl
lea
iret
sbb
imul
xchg
inc
and
cmp
lock
cmp
pop
icebp
adc
xor
in
add
mov
aam
jne
decl
or
add
xchg
cmp
jmp
xchg
adc
push
push
test
jnp
push
push
mov
xor
adc
push
idiv
xchg
push
sub
add
into
movl
mov
sub
sbb
bound
add
pop
sti
sub
lcall
or
mov
popa
sti
dec
shrb
xchg
daa
cld
pop
fildl
cld
pushl
jmp
mov
add
std
out
and
adc
adc
lcall
or
ret
xor
movups
pop
adc
test
push
call
inc
mov
adc
pop
call
call
lret
test
sahf
sub
or
test
int
decb
cmpsb
call
mov
push
lcallw
sub
sbb
scas
jmp
dec
sahf
fwait
outsb
decb
mov
inc
or
jmp
push
add
outsb
inc
inc
test
fidivl
inc
jle
adc
adc
sti
out
sysenter
xor
incb
pop
sbbl
inc
orb
jae
sub
iret
call
incl
or
xlat
cltd
inc
sbb
decl
sub
pop
lcall
mov
aaa
sti
push
std
pushl
dec
fildl
out
adc
push
pusha
add
mov
addb
push
xor
add
call
jg
and
dec
out
cli
pop
rorb
idiv
loop
sbb
dec
arpl
sub
incl
decl
jmp
fwait
cld
or
incl
fcmovbe
pop
divb
xorps
push
test
mov
out
push
shll
sarl
add
ret
jmp
push
adc
mov
ljmp
lahf
inc
inc
push
inc
imul
popf
inc
pop
inc
pop
mov
arpl
sahf
movsb
dec
push
stos
push
and
sahf
int
inc
cmpsb
dec
dec
inc
popf
mov
dec
mov
and
adc
dec
push
out
push
shrb
repz
outsb
shll
dec
lret
xchg
push
push
jb
dec
xchg
das
xor
das
push
iret
insl
fs
outsl
pop
imul
push
push
push
xchg
stos
and
ljmp
jmp
lcall
sbb
pop
add
repnz
push
jmp
mov
movsb
outsl
pushf
cmp
aas
decb
cwtl
xor
int
pop
lahf
push
inc
push
xchg
mov
sahf
dec
push
push
aaa
push
lcall
cltd
movsb
xchg
push
xchg
es
xchg
xchg
xchg
notb
sub
dec
push
xchg
pushl
xor
data16
fimuls
sbb
add
or
pop
and
test
inc
fstpt
push
jnp
sarl
mov
or
push
jl
or
ss
jbe
jl
push
jge
jg
es
outsl
data16
jle
repnz
push
dec
push
dec
repnz
rep
div
repnz
jae
pop
fidivrl
push
mov
jnp
pop
ret
jg
jge
hlt
in
add
int3
outsb
nop
negl
or
inc
mov
stc
sbbb
xor
outsb
aad
lahf
push
adc
adc
lods
pop
sbbl
out
add
cmpb
stc
decl
dec
es
addl
orb
mov
inc
and
xchg
out
push
sub
iret
out
jns
mov
pushl
clc
push
div
popa
sub
stc
push
jb
sub
jg
mov
sahf
icebp
dec
pop
cld
out
jle
mov
jno
sub
jg
mov
icebp
scas
mov
or
jg
nop
cld
fldl
fidivs
mov
xchg
cld
jp
shll
xchg
aaa
and
dec
incb
out
xchg
enter
jg
dec
mov
xchg
loopne
sarb
xchg
and
jge
movsb
or
decl
insb
movsb
sub
push
fsub
pop
push
test
sub
jp
adc
mov
fidivrl
arpl
clc
mov
test
decl
pop
ja
jmp
push
pop
cmp
mov
xchg
ds
lcall
mov
jns
mov
cltd
int
mov
in
sbb
in
sbb
xchg
mov
pop
test
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
rorb
cwtl
or
add
mov
jge
idivl
or
dec
xlat
push
cmovno
mov
xchg
jae
dec
sub
push
or
sbb
les
add
pop
sub
push
inc
add
xchg
lret
adc
call
fsts
adc
sub
out
inc
lods
std
out
insb
mov
or
push
movsb
push
or
and
ficomps
inc
or
push
aad
add
incl
or
mov
adc
adc
or
add
lods
push
xor
ret
add
push
xchg
add
inc
push
gs
jo
add
add
cmp
and
or
lret
mov
push
mov
dec
and
mov
sbb
xchg
scas
jnp
add
add
dec
test
adc
or
movsb
mov
inc
jmp
fdivs
das
fnstsw
push
mov
sbb
add
imul
sti
es
sub
sbb
or
add
inc
inc
jno
xor
or
or
imul
add
mov
cmc
add
push
or
sbb
cmp
xchg
push
add
add
add
mov
and
insl
pop
sbb
mov
and
jne
popa
shlb
in
sub
xlat
xor
jb
mov
and
imul
mov
sbb
nop
filds
mov
bound
mov
inc
pop
mov
movb
pop
jo
test
repz
out
test
and
mov
push
test
arpl
jno
pusha
fists
outsl
shrb
jo
xor
dec
shlb
loop
and
cmpsl
mov
xor
pop
sub
sbb
fwait
ljmp
pop
pop
dec
insb
out
imul
adcl
sub
sbb
in
mov
cmp
insb
jne
addr16
in
pop
and
popf
push
sub
mov
inc
sbb
inc
or
mov
lea
imul
jno
mov
imul
xor
inc
fidivl
sbb
popf
xchg
and
pusha
push
mov
aad
cmp
mov
pop
add
xchg
adc
notb
pusha
sbb
mov
jo
je
push
dec
in
and
mov
xchg
sbb
orl
mov
push
mov
xchg
cmp
inc
adc
and
push
mov
and
dec
outsl
pavgw
adc
push
push
fwait
popa
pop
adcl
dec
cltd
add
or
inc
cmp
xor
cmpsb
xchg
mov
or
pop
and
and
cmc
jbe
cmp
arpl
pop
lods
shll
xchg
and
xchg
jge
add
jae
inc
mov
pop
jbe
mov
mov
mov
aad
dec
rcrb
add
fsubr
push
mov
inc
sub
in
xor
and
mov
adc
jo
jae
xor
add
mov
xor
dec
push
stos
sbb
push
lods
pop
test
push
mov
leave
ss
mov
inc
imul
xor
jge
insb
pop
mov
pop
sbb
pop
inc
incl
inc
add
test
pop
sbb
sahf
popa
adc
je
jne
inc
cmpsl
test
pop
xchg
gs
add
and
cmpsl
adc
add
pop
in
fxch
js
cmp
arpl
mov
or
push
aam
add
xchg
xchg
loopne
gs
pop
sub
push
pop
mov
and
cmpsb
mov
subl
cmc
sbb
fildl
cmpsb
jno
lcall
cltd
pop
arpl
fiadds
inc
push
insl
sti
or
and
mov
sbb
addr16
mov
cmp
lea
in
ds
inc
dec
inc
insb
js
cwtl
cmp
arpl
adc
test
push
jb
inc
inc
jno
pop
add
outsl
cmp
inc
imul
testl
dec
insb
sahf
daa
push
pop
test
lcall
inc
jb
push
or
cmpsb
adc
fwait
push
lock
inc
stc
adc
mov
cmpsb
xor
jae
sbb
push
sarl
into
sub
cwtl
imul
push
sbb
mov
data16
push
les
int3
inc
mov
rclb
jge
xor
imul
and
jne
outsb
inc
mov
lods
sbb
pop
popa
mov
ficomps
pop
jb
clc
fwait
inc
je
insl
dec
outsb
dec
stc
add
lcall
sub
xor
in
insl
repz
loop
pop
add
add
sbb
mov
xor
xchg
movsb
dec
adc
shll
push
adc
or
mov
roll
add
es
and
insb
inc
mov
pop
fisttps
pop
pop
fiaddl
and
or
mov
jbe
in
call
jo
sbb
test
fidivs
stos
daa
imul
ret
call
pusha
cwtl
pop
sarb
jg
pop
push
insb
mov
test
inc
insb
scas
nop
sub
push
cmp
push
ret
test
adc
inc
mov
sbb
add
sub
xchg
inc
out
lods
les
inc
sbb
movsb
sbb
jo
sarb
jo
and
jno
popa
test
adc
hlt
mov
xchg
mull
dec
add
je
jbe
inc
in
sbb
scas
int3
nop
push
jge
test
sbb
pushf
xor
cwtl
or
xor
and
ret
lcall
mov
in
and
jle
sbb
inc
inc
xor
jo
mov
lret
inc
lock
repnz
sub
mov
add
mov
xor
popw
xlat
adc
or
and
xor
mov
mov
add
lods
lea
push
enter
mov
adc
gs
xorb
and
call
cmpsl
inc
rcrl
ret
mov
test
cmpsl
adc
inc
inc
inc
push
js
or
push
insb
lret
push
jge
pop
mov
aad
insl
movsb
mov
push
push
sub
adc
sbb
shll
xor
dec
cld
addr16
adc
arpl
test
pop
xor
xor
aas
outsb
push
mov
jb
inc
xor
inc
push
insl
popl
xchg
mov
cmp
jns
stos
sbb
jecxz
cwtl
dec
and
hlt
cwtl
add
inc
cmp
push
out
xlat
mov
xchg
cmp
add
shll
dec
jg
ss
inc
sub
push
mov
sbb
mov
into
bound
test
mov
add
sahf
out
xchg
push
mov
jb
inc
push
push
inc
sbb
insl
xchg
sbb
add
sub
lods
pop
ss
push
or
xor
mov
imul
outsl
out
inc
sub
xor
xchg
imul
shll
add
aaa
das
movsb
pop
inc
sub
sub
add
rcl
cmp
push
cmp
adc
movsl
dec
sub
push
push
or
inc
and
cmp
or
sbb
add
add
rcll
mov
adc
mov
pop
push
cmp
push
and
adc
add
push
add
push
add
std
or
or
add
adc
and
outsl
jg
or
push
sub
mov
mov
and
or
push
or
adc
std
mov
popf
es
push
adc
push
inc
pop
adc
sbb
push
sub
push
mov
push
inc
sbb
sbb
cs
or
xor
and
lea
bndldx
xor
push
add
xor
sbb
push
add
sbb
xchg
add
adc
cmp
push
sbb
add
mov
jl
sub
and
cs
or
fistpll
fcomps
or
or
add
adc
ss
idiv
outsl
lcall
subps
inc
pop
sbb
push
sub
or
and
std
daa
pop
or
or
sbb
add
sub
sbb
lods
add
cmp
push
adc
adc
sbb
adc
shll
loop
and
and
xor
sbbb
push
and
mov
push
or
xor
or
or
or
add
pop
jl
mov
mov
xor
push
cmp
and
sub
adc
mov
ljmp
add
pop
pusha
fistl
shlb
adc
or
mov
movhps
pop
jbe
xchg
and
add
or
daa
add
xor
adc
xor
or
cmp
daa
aas
sub
outsl
ljmp
aas
and
sub
or
cmp
es
xor
dec
sbb
sti
push
fdivrs
das
push
bswap
add
or
das
adc
jnp
push
xchg
adc
or
push
push
lods
adc
adc
or
push
or
pop
aaa
adc
adc
adc
daa
adc
or
lcall
xor
push
sbb
and
es
mov
xchg
daa
cmp
xor
and
push
or
inc
and
or
add
mov
and
or
cmp
or
pop
dec
adc
or
lea
cld
lcall
and
and
or
or
jb
adc
pop
hlt
out
call
sub
sub
jg
lock
ja
push
int3
ds
shll
repnz
inc
sbb
xor
das
clc
mov
lock
lock
or
dec
sub
sbb
lock
scas
ret
push
push
push
adc
add
adc
mov
pop
cmp
sub
push
or
bound
jo
or
or
mov
sbb
xor
and
aas
push
sbb
xchg
jb
jg
pushl
cmp
cmp
adc
sub
xor
jp
cmp
cs
fistps
sub
lock
add
cmp
incl
adc
lock
sbb
add
lahf
jle
idivb
lock
add
cmp
sub
or
jg
push
adc
mov
unpckhps
sbb
cmp
mov
hlt
inc
addr16
xor
mov
outsl
dec
adc
lock
add
icebp
out
inc
lea
sub
fisttpl
out
je
movsl
rcll
cmpsb
push
sub
outsb
add
push
mov
pop
adc
or
aaa
cld
jg
mov
adc
xor
imulb
lock
push
push
and
inc
sbb
adc
call
push
cld
cmp
inc
mov
add
push
ljmp
enter
push
sub
and
cmpsl
or
dec
inc
popa
sti
pop
icebp
outsb
fadd
rcrl
xor
bound
adc
mov
jg
clc
add
insl
fmull
and
xor
fcos
sbb
push
or
cmp
adc
adc
movzbl
push
and
push
fcoms
psubsb
sub
ljmp
adc
sbb
xor
adc
push
mov
mov
push
lock
or
or
add
inc
addr16
aas
dec
pop
pop
imul
lods
xor
sub
es
xchg
add
pop
pop
adc
add
ds
scas
adc
andb
jno
sub
outsl
stos
aaa
insb
pop
das
sarb
sbb
sbb
adc
inc
pop
sbb
mov
push
and
pop
xor
xor
daa
inc
sbb
femms
push
dec
aam
lcall
cmp
pop
adc
aaa
and
or
aaa
push
sbb
sbb
adc
hlt
cwtl
or
adc
cmp
xchg
push
and
adc
arpl
mov
xchg
xor
inc
and
mov
fcomip
sbb
adc
adc
lock
add
paddsw
in
sub
adc
push
push
xchg
push
sbb
adc
xor
push
pop
pop
and
dec
adc
add
sub
add
inc
jg
adc
ljmp
or
rolb
sbb
mov
jno
push
push
push
add
mov
cmpl
sub
sub
mov
fildl
and
xlat
sub
xchg
decl
cwtl
jle
adc
push
inc
cmp
inc
daa
insb
ss
cs
rorl
xor
and
add
push
or
add
push
xor
push
out
adc
fdivl
xor
outsb
or
xor
and
push
in
insb
adc
dec
inc
and
and
lahf
add
cmp
dec
pop
ud2
loopne
outsl
push
adc
lret
in
mulps
pop
cs
push
cmp
adc
sbb
or
adc
push
xor
out
cli
ljmp
cmpsb
mov
push
jne
dec
sbb
daa
inc
adc
push
or
sub
sub
sbb
pop
add
add
out
sbb
add
sbb
out
push
push
xor
inc
and
movsl
or
lcall
pop
lock
sti
add
sbb
sbb
dec
add
loopne
jae
mov
mov
lock
add
dec
fidivrs
sub
add
inc
push
sbb
adc
ja
jge
es
add
sbb
adc
daa
pop
adc
ljmp
xchg
adc
aaa
dec
or
inc
push
and
rcr
push
or
lock
push
adc
xchg
daa
cmpb
cmpsb
pop
fcoml
ds
insb
sbb
inc
inc
jg
ljmp
fistpl
imul
or
dec
pop
cmp
test
or
testl
dec
in
sbb
xor
push
dec
ss
add
adc
pop
sbb
scas
sbb
lock
add
sbb
addr16
pushf
sbb
sub
pushl
mov
xchg
cmp
add
sbb
sub
or
fucomip
push
and
lock
or
or
dec
sub
sub
ljmp
xor
push
or
pop
inc
adc
cmp
inc
inc
push
sbb
add
pusha
ret
lock
lock
mov
or
icebp
aas
scas
mov
pop
inc
and
aas
scas
xor
idiv
pop
cs
sbb
pop
add
push
push
pop
push
sbb
das
rorb
push
scas
or
es
hlt
outsl
add
aas
enter
inc
cs
pop
sbb
sbb
sub
adc
cli
xchg
adc
lock
std
add
lock
add
add
pop
or
add
lock
popa
jl
add
or
sbbb
sbb
das
jle
xor
cmp
es
mov
pop
and
lcall
push
sbb
cmp
unpcklps
lock
lcall
cmp
push
sub
or
and
inc
or
ret
sbb
mov
adc
daa
adc
or
or
mov
push
or
sbb
xor
aas
adc
push
push
sub
adc
loopne
jg
pop
sbb
pop
xor
and
mov
mov
mov
dec
test
out
imul
outsb
mov
ljmp
mov
xchg
pop
sbb
leave
add
movlps
pop
mov
add
inc
add
jb
pop
sub
jg
sbb
or
dec
push
cs
fs
lahf
dec
pop
hlt
sbb
push
inc
add
pop
xor
add
es
fwait
mov
add
and
add
push
dec
ljmp
xor
pop
or
or
movntps
push
pop
adc
adc
push
and
xchg
loop
mov
ret
or
jne
sub
adc
js
jg
movsb
adc
pop
int3
pop
sub
sbb
inc
push
push
inc
or
pop
cli
ljmp
pop
dec
cmp
and
das
adc
sub
mov
pop
invd
or
daa
push
cs
sub
or
push
mov
icebp
or
or
adc
pop
daa
or
dec
prefetch
lock
and
pop
insb
cli
jmp
adc
pop
sub
pusha
push
sbb
or
pop
and
adc
sub
push
adc
adc
xchg
xor
xchg
or
adc
add
fisttps
adc
push
subb
lock
add
and
wbinvd
push
add
unpckhps
adc
inc
adc
pushl
jbe
scas
xor
sbb
nop
pop
or
mov
sub
inc
inc
inc
cmp
test
adc
cmp
mov
xor
out
or
popa
pop
sbb
cli
arpl
sbb
inc
adc
and
adc
and
sbb
inc
cmp
pusha
insb
pop
xchg
ljmp
adc
adc
or
adc
or
cwtl
leave
fidivs
push
xor
inc
mov
outsl
test
loop
sub
inc
xor
mov
or
xor
push
xor
test
or
xor
inc
add
outsb
imul
or
pusha
roll
and
das
xchg
cmp
ds
aas
push
add
push
inc
pusha
push
pushf
adc
pavgb
mov
loopne
inc
push
pop
dec
sbb
cmp
fisubrs
and
bound
cwtl
loopne
ret
or
sbb
jo
mov
pop
je
or
sub
es
and
or
xor
or
push
sub
lret
icebp
ljmp
or
adc
sbb
pop
sub
data16
pop
add
bound
movsl
cmp
push
lock
sbb
clc
rcll
adc
push
push
sub
dec
mov
add
repnz
sub
xchg
sbb
and
mov
cmc
test
repnz
and
add
or
jg
xor
push
push
inc
inc
sub
das
sbb
outsl
sub
sbb
and
xor
bswap
test
cmp
adc
adc
push
sub
push
aaa
dec
adc
cwtl
pop
sar
outsl
fwait
inc
or
push
mov
pop
pop
cmp
and
outsl
adc
pop
inc
sub
or
dec
pop
sub
xor
stos
incl
sub
or
cmp
push
sbb
pop
or
cmp
adc
cmp
and
pop
adc
pop
adc
or
add
mov
adc
sub
cmp
rclb
pop
sub
lock
add
inc
dec
adc
sbb
push
adc
push
or
imul
and
jb
in
jbe
and
stos
mov
xor
or
push
inc
xchg
or
or
add
pushl
ret
adcb
and
cmp
cmp
jp
outsl
adc
or
inc
or
pop
arpl
inc
push
pusha
adc
mov
sbb
inc
fmuls
or
xchg
push
std
arpl
insb
bnd
or
pop
inc
push
sbb
arpl
test
cmp
loope
arpl
pop
dec
sbb
sbb
lcall
lock
add
dec
cmp
adc
or
bndldx
inc
or
xchg
jg
adc
andl
xchg
sbb
jbe
ds
sbb
and
push
dec
fmuls
pop
ds
rorb
xchg
or
rolb
loopne
add
dec
xchg
lock
add
or
adc
mov
xor
shll
cmp
aam
inc
or
or
push
adc
andb
cli
add
nop
aaa
popa
push
das
or
and
jg
testb
adc
fiadds
sub
sub
ret
jg
lcall
lahf
pop
sub
mov
adc
and
and
pop
inc
adc
inc
cmp
or
ret
call
adc
and
cmp
data16
cmp
xlat
insl
or
loop
add
movd
pop
push
sbbb
daa
mov
lds
or
add
inc
xor
adc
dec
pop
and
lcall
push
aaa
test
adc
cmp
daa
inc
dec
pop
mov
adc
sbb
pop
cld
mov
imul
mov
or
sub
and
inc
pop
adc
sbb
pop
cmp
mov
div
adc
add
push
cmp
jb
sub
mov
mov
and
add
lcall
sbb
jg
push
dec
nop
dec
and
or
outsl
dec
dec
sub
push
sub
lcall
sbb
cmp
add
outsb
xor
pop
mov
mov
cld
dec
and
sysexit
cmp
je
dec
mov
or
push
fadds
xor
out
es
nop
sbb
xor
and
pop
mov
mov
invd
pop
or
sbb
push
inc
inc
sbb
pop
adc
pop
or
xor
mov
pop
loopne
outsb
les
push
pcmpgtw
or
lahf
add
in
cmpsb
cmpsb
jo
pmaxsw
or
sahf
aaa
push
xchg
or
add
dec
sbb
mov
sub
adc
xor
lock
das
jl
add
sbb
xchg
cmp
aam
es
pop
loope
push
xor
pop
sub
sub
jo
cmp
outsb
add
fldl
mov
or
or
sub
or
push
lock
add
and
and
or
pop
sbb
sarb
pop
sbb
lock
sbb
mov
push
mov
pop
lea
in
push
lock
lock
add
insl
jb
jmp
pop
and
aad
lea
xchg
add
lret
add
cltd
push
cmpsb
adc
or
mov
cmp
lock
insb
sub
pop
add
lock
js
xchg
minps
or
or
adc
mov
push
adc
or
sbb
mov
or
dec
xor
adc
daa
arpl
or
pop
push
dec
or
and
dec
shll
int3
sbb
loop
lock
inc
push
cmpsb
sub
xor
or
add
jle
dec
fwait
cmp
add
cmp
mov
or
or
and
xor
outsl
pop
je
or
push
or
add
sbb
dec
dec
dec
push
ret
js,pn
push
cwtl
int3
add
popf
add
or
adc
ret
das
shlb
push
sub
sbb
jp
or
or
cmp
sbbl
push
push
shll
push
and
xorb
and
sbb
adc
sbb
imul
and
sub
cmp
sub
std
sbb
add
jmp
sbb
cwtl
clc
lahf
icebp
loope
es
lcall
sub
lock
lock
sub
and
push
ds
imul
xor
sbb
dec
adc
and
sbb
aas
cmp
jmp
adc
sbb
or
push
dec
ja
inc
cmpsb
inc
push
into
sub
push
mov
shrl
and
add
into
arpl
pusha
sub
add
jg
lock
cltd
shl
les
lock
add
mov
clc
sbb
pop
sbb
adc
jecxz
fwait
push
add
or
and
xor
cwtl
in
push
sbb
cmpsb
sahf
add
adc
adc
ret
xor
push
das
dec
or
bound
lock
sbb
dec
dec
xor
add
add
decl
bound
xor
lcall
xchg
pop
mov
jmp
jmp
xchg
fcmovbe
xor
popfw
ss
and
loope
das
mov
add
or
pop
push
push
and
sbb
faddl
and
push
dec
push
popa
push
mov
push
inc
outsb
out
push
inc
or
cmpsl
cwtl
or
cmp
sbb
mov
jmp
adc
adc
cmp
movsb
sbb
push
or
jo
insb
dec
lock
std
or
dec
or
push
xchg
mov
add
mov
cwtl
push
mov
mov
add
lock
add
or
pop
mov
hlt
adc
or
push
xor
xor
sbb
sbb
xor
pop
sub
ss
cmp
or
outsl
pop
test
out
clc
add
mov
jl
sub
sbb
xor
add
mov
rcll
or
cmp
pop
mov
call
jg
pop
or
push
adc
and
xor
push
mov
and
adc
mov
mov
les
lock
das
add
lock
add
ss
ja
xchg
pusha
jb
and
outsb
test
add
cmp
sbb
rol
push
sbb
sbb
pop
adc
sti
out
push
sub
dec
dec
push
mov
xchg
push
sub
jle
sub
fcmovnu
loope
das
inc
mov
pop
pop
and
and
mov
arpl
xchg
sub
dec
and
in
mov
adc
cmp
inc
inc
sub
or
or
xor
ds
clc
mov
or
inc
push
and
cmp
cmp
jge
cmp
cmp
cmp
das
je
jp
jle
xchg
and
cmp
sub
orl
mov
sub
dec
pop
pop
shl
xor
sub
sub
push
ds
incl
sbb
dec
pop
dec
push
push
push
and
jl
xchg
cmp
movsl
xor
mov
xorb
arpl
inc
inc
pop
lret
ret
mov
aas
dec
jne
and
add
lods
subl
push
pop
dec
mov
lock
add
mov
mov
sub
xor
cmp
and
inc
cmp
dec
cmp
mov
and
mov
push
inc
sub
xorl
lock
aaa
cmp
add
mov
push
add
push
sti
loop
aaa
push
sbb
xchg
lock
aaa
rclb
cmp
subb
into
aam
lock
push
add
adc
loop
mov
jae
add
dec
aam
lods
dec
rclb
insb
xchg
add
pushf
test
test
inc
ss
or
pop
aad
in
jl
pop
inc
lock
add
push
push
and
shll
jb
scas
or
push
push
xor
xor
insb
sbb
cmpsb
inc
pop
add
data16
push
add
add
sub
test
les
aam
arpl
dec
cs
jns
cmc
lock
mov
push
mov
add
mov
sub
bound
cmp
sahf
add
sbb
decl
hlt
add
or
add
xor
mov
dec
add
or
scas
data16
adc
in
jne
testl
or
mov
das
push
or
sbb
test
dec
lret
adc
and
adc
adcb
inc
add
pop
icebp
add
mov
and
dec
inc
jno
test
dec
orl
inc
iret
jae
add
push
imul
adc
ss
in
pusha
cmp
adc
and
sub
mov
test
xchg
and
inc
xlat
pop
fisttpl
adc
push
sbb
popa
adc
lods
pusha
inc
mov
stc
in
sub
iret
std
divl
xchg
addb
jae
icebp
xchg
inc
xor
add
shrb
mov
pushf
stc
out
sbb
sbb
add
or
out
imul
insb
pusha
adc
data16
xor
sti
sub
adc
and
or
add
add
or
add
jle
fistl
aaa
cmp
sub
adc
or
out
pop
xor
cmp
jae
fwait
mov
insl
out
sub
imul
cmp
jbe
jbe
cmp
adc
gs
testl
sbb
mov
movsl
outsl
push
popf
les
and
scas
mov
xchg
insl
and
pop
sbb
cmpsb
or
and
xor
or
dec
mov
dec
ret
xchg
test
jnp
stos
xchg
sysret
sbb
pop
test
popf
shrl
jmp
or
test
and
add
push
or
inc
mov
pop
or
add
and
daa
pop
ret
call
adc
and
lock
pop
lea
adc
push
dec
outsl
mov
or
inc
pop
pop
adc
adc
jno
ja
sub
push
or
push
add
xchg
stos
or
jns
mov
sbb
xlat
stos
sbb
insl
xor
arpl
fildl
jmp
dec
bound
mov
and
lods
stc
mov
sbb
xor
sahf
movl
ja
sbb
icebp
arpl
sbb
leave
xor
cs
push
adc
lret
push
xchg
add
sub
and
add
mov
xchg
mov
sub
cmp
cmp
and
push
lods
mov
jge
and
lods
pusha
fists
or
push
mov
sarl
and
dec
sub
add
jnp
in
fisubrl
sbb
adc
adc
adc
outsl
jb
add
adc
scas
push
or
adc
add
shrl
inc
xor
pop
and
pop
lahf
lock
add
adc
sbb
faddl
test
sub
adc
pusha
ret
push
mov
in
add
js
lds
imul
push
in
xchg
xor
add
cmp
sub
sub
xor
dec
add
and
sub
sub
cmp
xor
sbb
insb
cmp
or
or
into
ficomps
push
xor
pop
add
xor
fsubs
cltd
xor
pop
and
and
and
inc
sbb
out
jmp
enter
sub
push
sbb
imul
sub
pop
push
jbe
inc
cmp
adc
test
or
insb
fsubrl
add
mov
add
out
add
add
out
and
lock
jle
mov
or
inc
adc
or
pop
pop
push
add
add
pop
add
inc
repnz
or
adcl
rol
dec
push
sbb
add
rcll
pop
dec
xchg
add
pusha
and
push
cmp
or
add
pop
jbe
xor
push
dec
xlat
out
push
sbb
xor
mov
pop
xchg
dec
cmp
pop
mov
push
or
dec
fidivs
jo
sub
fstpt
xor
popf
insb
and
xchg
add
add
xchg
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
xchg
inc
add
add
