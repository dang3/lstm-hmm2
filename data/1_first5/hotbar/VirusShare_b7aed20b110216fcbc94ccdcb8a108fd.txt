std
insl
push
mov
mov
mov
and
add
add
imul
jne
add
call
test
jne
pop
ret
push
push
sbb
lock
je
aas
mov
dec
adc
movb
fistpll
push
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
mov
pop
mov
call
push
mov
das
js
gs
add
sbb
daa
or
add
shrb
les
inc
rclb
addr16
push
sub
arpl
adc
mov
push
push
push
mov
push
into
pushf
or
xor
jmp
jmp
stos
adc
push
push
sahf
jp
push
jge
fldt
inc
mov
test
ds
jmp
pushl
jg
shlb
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
in
outsl
in
call
ljmp
scas
push
mov
andl
sbb
ljmp
pop
adc
jge
in
jae
lea
emms
inc
cld
aaa
mov
fwait
adc
push
repz
cmpsl
lods
or
push
push
in
loopne
movb
inc
mov
nop
idivb
shl
add
add
call
mov
cmpl
jne
mov
mov
lret
rcr
jl
push
mov
mov
xchg
jbe
sbb
pop
pop
push
push
and
jbe
in
in
jb
lock
cs
loop
jbe
loopne
adc
jns
pop
movsb
xor
dec
sbb
mov
push
mov
mov
push
cwtl
in
enter
push
lock
sar
and
add
outsl
mov
push
push
idivb
mov
push
push
push
lods
push
pop
inc
loopne
outsl
add
fdiv
fistpl
fisttpl
ret
add
jae
or
test
je
pop
add
pop
mov
push
adc
punpckhbw
sub
loopne
push
imul
push
push
rolb
sbb
mov
test
sbb
add
cmp
in
pusha
les
cmpsb
jae
or
in
push
cmp
stc
loopne
out
pop
pop
sub
sahf
or
xor
insl
xchg
cmpsb
call
clc
aas
gs
js
in
push
push
outsb
hlt
mov
in
inc
inc
mov
mov
push
mov
pop
jge
sahf
mull
push
or
cmp
inc
inc
imul
jb
mov
pop
dec
shll
xor
push
add
mov
data16
and
xchg
pop
sbb
cmpb
aad
jbe
aad
stc
lcall
and
andl
jl
jl
sub
sub
je
push
mov
add
push
xor
add
mov
mov
cwtl
and
jo
sub
sbb
add
push
jnp
jb
or
out
push
adc
add
sbb
xchg
loopne
push
test
push
push
add
jbe
push
xor
pop
cmpb
mov
sub
jnp
repnz
sbb
pop
push
and
lahf
getsec
out
add
addl
movlps
icebp
xor
js
push
mov
imul
sub
or
jb
push
push
and
inc
pop
or
jl
pop
push
mov
inc
add
sti
aad
sub
pop
adc
or
loopne
jnp
call
dec
push
cmp
shll
dec
stos
add
push
das
loopne
xor
shlb
sub
stc
je
sbb
or
shl
cmp
and
pop
nop
and
repz
mov
mov
mov
mov
lock
cmp
adc
mov
mov
int3
push
mov
clc
loope
cltd
mov
dec
push
insb
in
xchg
loope
in
push
sbb
xor
sbb
loop
xchg
adcl
je
xchg
xor
dec
daa
sbb
icebp
inc
sub
push
fidivs
push
icebp
xor
sub
xor
sub
push
adc
xchg
xor
xlat
frstor
enter
adc
inc
and
push
add
and
sbb
insb
push
or
add
repnz
adc
pop
aas
and
sbb
punpckhbw
push
enter
pop
mov
push
int
sbb
inc
fnsave
mov
in
and
push
xor
xchg
sbb
jmp
sbb
enter
leave
repz
push
aad
xor
mov
les
mov
pop
mov
mov
mov
xchg
sbb
and
push
push
test
pop
test
ret
mov
mov
scas
mov
test
push
mov
inc
sbb
push
push
push
adc
je
jmp
testb
mov
std
and
or
mov
notl
mov
in
ret
ficompl
and
xor
and
mov
lcall
xor
push
test
xorb
jle
movsl
cltd
mov
push
and
aaa
shlb
and
mov
mov
xchg
pusha
rclb
mov
mov
pushf
inc
or
clc
push
add
jle
sbb
je
mov
mov
lea
fistl
push
mov
aaa
je
nop
sub
aas
sub
cmp
cli
mov
dec
insl
lea
jno
insl
mov
inc
sbb
or
mov
das
add
jne
mov
dec
sub
mov
adcb
cmp
or
imul
mov
fwait
and
xor
or
mov
push
arpl
mov
cltd
adc
xchg
cmp
js
and
stos
xor
out
mov
xchg
cmc
push
stc
or
test
daa
push
adc
xchg
iret
mov
cmpsl
xor
bound
xor
pushw
pop
mov
ret
push
mov
fsubrs
jbe
shlb
pushf
ficoml
xor
insl
pushl
dec
mov
push
add
sub
fidivrs
clc
inc
lock
jne
pop
mov
sub
loopne
xchg
dec
push
adc
fdivr
push
mov
sub
dec
pushl
pop
in
adc
adc
ficoms
adc
mov
pop
xlat
test
fnstenv
mov
lds
ljmp
push
push
push
mov
cmp
sub
push
push
jg
fisttps
sub
call
mov
test
jne
fs
inc
cmp
mov
aam
ds
pop
push
push
insl
popa
sbb
pop
jmp
cmp
fsubrs
test
fisubrs
js
mov
ret
add
and
loope
icebp
mov
push
inc
sbb
sbb
ffreep
mov
bound
and
fisttps
or
jmp
ljmp
roll
or
jmp
sub
dec
push
andl
sbb
jge
xchg
mov
cmp
jl
std
and
push
mov
cmp
pusha
adc
dec
lock
adc
pop
ret
push
data16
push
shl
or
fcmovnu
in
push
push
push
dec
pop
mov
and
mov
pop
ja
pushf
pop
push
cs
aaa
add
dec
inc
aam
push
mov
ficompl
sub
pop
js
sub
pop
cmp
mov
jge
fchs
mov
jmp
inc
or
test
outsl
cmp
add
sub
adc
call
lea
push
mov
adc
divl
add
loopne
lock
mov
addr16
jl
or
mov
inc
leave
ret
mov
loope
icebp
cmp
cmp
push
add
or
outsb
push
sti
jge
cmp
std
cli
out
mov
dec
mov
jmp
fwait
add
xchg
push
mov
jg
and
jne
mov
fcmovnb
loopne
jmp
xchg
in
cmpl
push
repnz
inc
repz
push
ja
das
pop
lock
pushl
cmp
jmp
xchg
pusha
or
fwait
pop
popaw
faddl
pop
pop
pop
bound
add
loop
jle
pop
inc
rorb
and
push
or
xor
je
add
js
lods
shl
mov
mov
faddl
insl
push
push
mov
jge
outsl
mov
xchg
divb
push
push
sarl
sub
xchg
inc
push
jno
push
push
push
mov
xchg
pop
inc
pop
pop
movsl
mov
hlt
lods
aam
loopne
je
test
ret
fcompl
int
mov
das
icebp
pop
cmp
lahf
push
ds
add
add
inc
xorl
addl
sti
jecxz
sub
sub
push
leave
adc
cmp
cld
pop
jl
in
aaa
js
out
adc
into
je
cmpl
pop
bnd
mov
cmp
jne
push
push
imul
dec
int
jl
pop
jmp
in
stos
push
push
pop
dec
ds
mov
dec
dec
dec
xor
push
inc
sub
pop
lods
sub
inc
or
dec
or
jge
jmp
or
aaa
fidivrl
outsb
or
jg
inc
fimuls
movb
lods
cmp
xor
test
mov
cltd
adc
cmp
stc
aaa
xchg
inc
inc
or
shlb
adc
ret
popa
mov
cmpsb
sbb
mov
add
and
jbe
pop
and
and
es
add
jl
lds
adc
test
sti
jmp
cmp
mov
call
outsl
adc
aas
dec
aam
or
sbb
push
lds
cmpsb
push
inc
inc
pop
pop
add
mov
pop
pushf
mov
ds
push
mov
in
xchg
adc
and
ss
push
adc
lods
adc
sbb
ret
inc
testb
or
push
pop
cmp
inc
add
stos
adc
mov
addb
xchg
mov
xor
loope
push
cmpl
jle
push
daa
xor
jge
mov
outsl
push
add
ret
ret
shlb
xor
dec
or
out
sub
lea
cmp
mov
incb
add
xor
add
outsb
jo
inc
add
or
loope
stos
int
push
inc
adc
jecxz
insb
push
pop
push
jmp
ljmp
pusha
fimuls
jge
dec
jle
scas
push
push
pop
push
or
cmpsb
rorb
xchg
orl
ret
cmpl
notb
jmp
vhsubps
out
mov
sarb
cmp
xchg
jo
xlat
sahf
xor
les
xor
add
inc
mov
js
mov
daa
or
rolb
in
mov
push
inc
loope
push
pop
fldt
popa
fistps
jmp
outsb
cmp
xlat
aam
clc
or
lock
lea
push
mov
pop
sbb
jmp
mov
mov
iret
fs
movl
or
adc
sbb
es
je
fs
daa
scas
push
mov
idivb
data16
adc
jno
andl
shlb
aas
pop
loopne
sbb
mov
push
sbb
pop
and
sbb
ret
inc
aam
call
ficompl
sub
cmp
add
inc
push
scas
pop
lret
add
jl
in
or
or
or
rcrl
xchg
scas
mov
push
push
icebp
and
inc
fists
mov
lods
mov
push
and
and
and
stc
mov
sbb
push
sbb
sbb
sbb
ret
sub
push
das
cmp
pusha
pop
loop
sub
jo
adc
xchg
popa
pop
pop
xorl
std
cmpsb
ret
push
dec
fimull
xor
or
mov
adc
pop
dec
mov
lods
dec
or
enter
cmp
sarb
loop
xchg
or
jl
sti
sbb
and
stc
adc
cmp
popf
cmpl
stc
jne
lds
pop
sbb
jo
hlt
mov
jg
shrl
pop
testl
sub
js
shrl
je
jb
jmp
xchg
adc
pop
mov
xchg
sbb
pop
adc
push
sub
add
push
push
mov
push
incb
mov
sahf
lods
lret
and
jmp
sub
fisubrs
pop
dec
je
inc
adc
in
jge
adc
or
mov
dec
cmp
cld
inc
inc
mov
sti
mov
imulb
iret
ret
int
jp
repz
mov
je
rolb
or
stc
or
ret
aas
push
inc
add
add
mov
scas
adc
test
mov
sub
mov
xchg
adc
out
adc
mov
mov
or
in
lock
sbb
mov
mov
loope
pop
jle
and
push
or
push
aad
std
lea
pop
pushl
js
push
fsubrl
pop
daa
adc
pop
or
call
inc
sbb
adc
jg
cli
jmp
cmp
je
cmp
and
lcall
sbb
leave
adc
adc
out
notl
fldz
andl
or
cmp
rcr
insl
sub
sbb
and
jmp
and
jmp
data16
sbb
mov
lcall
sub
cmp
shrl
sub
xchg
into
flds
sub
cmpsl
sub
mov
aaa
mov
xor
xor
repz
mov
movhps
push
pusha
aaa
outsl
dec
adc
sbb
or
or
pushaw
iret
iret
clc
movb
in
repnz
push
or
adc
dec
scas
mov
mov
jge
dec
push
dec
mov
test
lea
push
lea
push
adcl
mov
mov
dec
cmp
and
mov
fs
les
scas
adc
or
in
cmc
and
xchg
movsl
jge
mov
pop
cmp
std
jnp
fcomps
push
xchg
ja
push
sbb
xchg
sahf
mov
testb
jbe
jp
adc
jo
xchg
xchg
xchg
xchg
call
inc
notb
and
ja
ja
mov
cwtl
movl
lret
aad
nop
push
test
mov
loopne
ljmp
jmp
jge
nop
imul
inc
out
ret
mov
outsl
lock
mov
sub
arpl
mov
sbb
mov
pop
or
jl
push
mov
js
lcall
adc
jne
jmp
lock
dec
dec
rclb
not
and
add
mov
push
mov
mov
mov
mulb
jecxz
shl
imul
and
ficoml
cmp
nop
cmp
push
push
push
mov
icebp
xchg
aas
das
push
push
push
js
test
nop
push
mov
dec
imul
test
jp
pop
dec
adcb
add
insb
shlb
mov
mov
insl
and
cmp
je
mov
jo
mov
xchg
hlt
lea
mov
mov
mov
sbb
push
sub
dec
push
push
cli
clc
pop
or
loopne
pusha
adc
fwait
jecxz
sub
sub
hlt
outsl
lock
sub
push
xor
mov
popf
scas
std
pushl
mov
adc
dec
adc
xchg
cmp
lea
or
negl
mov
pop
cld
je
dec
call
cltd
sub
sar
add
out
imul
in
mov
add
mov
inc
adc
dec
sbb
cmp
pop
leave
lds
mov
push
ret
inc
xchg
lock
inc
cwtl
pop
rclb
mov
sub
push
mov
ljmp
lds
jl
pop
push
and
sub
xor
divb
and
push
rcrb
dec
mov
fists
inc
js
adc
ljmp
mov
sbb
and
and
daa
incb
repz
pop
aaa
lret
andl
pushl
outsb
fwait
cmpsb
imul
dec
or
push
lahf
push
insb
nop
push
xchg
jns
mov
or
jo
sub
cs
lea
sub
neg
sbb
and
test
aas
enter
mov
or
data16
in
mov
jmp
pusha
ljmp
add
mov
repz
sbb
mov
je
push
mov
push
js
filds
jmp
pushl
and
jp
push
add
adc
and
mov
daa
sbb
inc
mov
mov
cmp
cmpl
je
cmpl
mov
dec
je
in
push
ret
sbb
mov
pop
jmp
add
jmp
mov
ds
xchg
andl
push
pop
push
leave
or
pop
mov
mov
pop
lods
popa
pop
ret
mov
push
movsl
add
add
test
jecxz
sub
cmp
hlt
movb
add
lock
pop
cltd
negl
fldz
bound
es
sbb
mov
loope
fcoml
aas
mov
and
adc
jno
out
pop
pushf
cmp
cs
incl
insl
cmp
test
push
test
inc
jge
gs
mov
and
popf
push
xlat
pop
addr16
adc
xor
push
mov
inc
test
and
pop
cmp
and
pop
lea
inc
dec
push
lahf
cs
cmp
pop
xchg
in
mov
sub
adc
cmp
out
test
ret
lahf
fldcw
cmp
mov
shrb
xor
and
push
sub
or
pop
shll
or
movl
shl
lret
add
jl
add
adcl
lret
xor
nop
inc
enter
push
cs
jo
sub
rcll
lea
lods
ds
je
add
push
cmpsb
dec
loope
sbb
or
popf
lods
sub
shll
inc
sahf
xchg
ja
addb
xor
mov
inc
cwtl
cmpl
pop
push
xor
test
lock
mov
adc
inc
sub
repnz
sub
int
xchg
inc
imul
ret
inc
pusha
fmull
jo
push
cs
loopne
push
xor
inc
loopne
mov
pop
push
cmp
sub
xchg
stos
loopne
lock
ret
inc
add
movsl
pusha
es
pop
or
in
or
into
rcrl
push
sub
popa
rorb
cld
shll
dec
lahf
fisttps
push
js
mov
shll
pushf
and
push
jl
jle
pushf
mov
loop
and
sbb
arpl
dec
push
add
ljmp
add
dec
aaa
mov
sarl
dec
adc
xlat
stos
fcoms
pop
dec
dec
or
sbb
sbb
es
or
adc
js
ret
cmp
in
jns
das
and
mov
adc
or
in
or
mov
mov
sbb
addb
push
adc
pop
xchg
or
cld
je
cli
cmp
insl
cmpb
mov
je
cwtl
pop
sub
cmp
jp
lock
mov
jmp
stc
mov
cltd
pop
xor
jmp
push
push
cmp
cmp
xchg
enter
cmp
and
orl
nop
push
mov
xchg
mov
pop
inc
sarb
mov
push
push
cmpb
loopne
push
js
out
fcoms
call
xor
jo
jno
fisttpll
push
outsl
and
sbb
cmp
xchg
xor
pop
cmp
out
js
mov
fdiv
nop
cltd
clc
andb
sbb
je
ss
mov
cwtl
sbb
rolb
in
loopne
fwait
sbb
cmp
and
mov
pop
push
and
add
sar
push
xchg
rclw
adc
jl
dec
inc
sbb
pop
fiadds
lock
cmp
and
mov
fcomip
sti
push
cmp
scas
rcrb
dec
jmp
xor
aaa
sti
mov
call
dec
jp
mov
std
test
jg
mov
cmp
push
jbe
add
out
adc
jmp
fnstsw
insb
cmpsl
int
xchg
mov
pushf
pop
jp
dec
in
mov
fsts
sbbl
repz
mov
or
out
jg
sarl
pusha
push
ljmp
hlt
outsl
clc
popl
test
pop
lea
cltd
push
div
shl
mov
mov
xor
movsl
shl
daa
pusha
jl
fidivs
into
mov
mov
movl
adc
test
mov
test
or
jbe
lahf
xor
inc
sbb
sbb
and
lods
lea
clc
add
ds
inc
pop
xchg
imul
cmp
or
sub
jge
jmp
mov
pop
hlt
fstpt
hlt
pusha
or
add
nop
and
pop
decl
sub
xor
mov
fdivrp
mov
dec
sub
mov
mov
add
pop
add
fsubp
or
xchg
pop
pop
push
js
out
add
inc
mov
mov
cmpb
or
clc
fidivl
jmp
sub
xor
outsb
mov
mov
push
push
stos
sahf
lods
jmp
jne
add
or
jl
dec
jmp
dec
mov
aad
cmp
mov
lea
cmp
or
hlt
inc
push
aad
aam
push
adc
add
loope
and
dec
mov
jne
push
jbe
mov
je
je
xchg
popa
push
push
push
inc
pop
and
jne
jle
sbb
add
jle
add
push
push
push
pop
sti
adc
sbb
xchg
pop
xchg
dec
cld
sub
add
and
fdivrs
int
and
push
std
movsb
andb
xor
pop
mov
or
mov
pusha
sbb
jne
mov
xchg
pop
jne
rcll
adc
mov
pushf
in
std
lea
push
leave
pushf
sub
push
inc
xchg
jo
fldl
push
or
mov
mov
icebp
lea
push
mov
push
ret
cmp
sub
adc
jns
pop
cmp
mov
shrl
dec
adc
out
mov
push
sbb
lods
or
or
jnp
sbb
mov
pop
pop
adc
add
ret
push
or
push
jg
popa
push
add
adc
loope
xchg
sbb
adc
mov
fs
por
loopne
pop
add
stc
mov
xor
push
in
jg
ret
mov
mov
dec
push
mov
fiaddl
pop
push
mov
xor
xchg
jne
jge
orl
mov
pop
xchg
and
nop
sub
arpl
or
adc
loopne
jno
mov
mov
push
xor
jo
dec
adc
xor
pop
push
pop
cmp
push
out
cwtl
add
clc
setb
test
jne
mov
imul
sub
sar
xor
and
add
andl
lea
push
rcll
xchg
mov
scas
out
mov
sub
pop
jg
sbb
aam
mov
pop
pop
icebp
inc
mov
nop
lock
hlt
mov
xorl
imul
push
addr16
pop
mov
sbb
nop
imul
push
inc
cmp
push
cmp
xchg
adc
fs
orl
lcall
sub
js
push
lcall
lret
movsl
into
push
pop
cmpsb
pop
mov
mov
cmp
leave
adc
push
add
test
push
lret
int
sbb
jmp
int3
movsl
cs
mov
cli
sub
clc
or
or
aaa
mov
or
je
and
je
cmp
out
pop
lahf
inc
mov
or
fcoms
pop
ffreep
inc
mov
xlat
xchg
pop
add
lahf
out
leave
rolb
shlb
and
or
add
clc
fwait
movl
scas
je
fs
jmp
in
fmull
lock
inc
mov
movsl
and
ja
test
popa
or
pop
mov
pop
pop
add
inc
add
ljmp
push
rcll
or
mov
aad
and
subb
xchg
ret
test
je
fwait
mov
mov
sub
lret
mov
push
push
cmpsl
or
lods
sbb
mov
jmp
ffreep
sub
mov
enter
out
inc
or
mov
xor
push
jecxz
sub
jg
inc
addl
xchg
mov
js
dec
pop
and
sbb
mov
cltd
dec
and
jb
sbb
mov
add
cmpsl
mov
add
sbb
and
and
test
xchg
or
imul
or
fsubs
bound
xchg
cwtl
mov
aam
lock
int
iret
inc
xor
mov
inc
insl
call
das
out
clc
outsl
dec
repz
jmp
push
mov
decl
in
mov
call
cmp
aad
push
pop
bound
or
dec
dec
clc
pop
int
lea
shl
push
push
or
sbb
sbb
inc
dec
xlat
pop
push
jbe
or
push
xor
xor
mov
push
push
cwtl
mov
dec
pop
or
outsl
bound
push
loop
mov
or
add
sub
out
test
mov
sub
cmp
mov
stos
adc
push
sbb
pop
or
adc
push
or
out
and
add
insb
xor
push
insl
movsb
nop
and
add
pop
daa
add
and
pop
ds
mov
jne
push
test
pop
push
orl
pusha
enter
scas
add
rcr
jmp
jnp
cmpsb
cs
in
popf
inc
bound
or
jge
inc
add
add
add
pop
nop
add
lea
xor
and
add
lock
add
js
movsb
add
push
dec
sbb
ret
cmp
stos
aam
call
sbb
outsb
sbbb
adc
ret
int3
orb
mov
stos
icebp
imul
xchg
adc
nop
cld
shrb
fdivs
and
shl
daa
add
add
loope
cmp
movsb
psubd
fdiv
push
loopne
mov
in
fdivl
les
adc
nop
jbe
movups
jge
jl
bound
cmp
xor
in
adc
sbb
aam
in
mov
mov
xchg
call
mov
test
js
mov
jmp
mov
dec
jo
cmc
adc
scas
adc
faddl
fdivl
adc
rcl
and
pop
addr16
or
dec
add
mov
jb
ja
fadds
adc
xor
in
cltd
ffree
sub
push
sbb
cmp
lods
cmpsb
adc
cmp
aam
add
scas
rolb
pop
add
push
jno
in
push
insb
in
insb
test
push
xor
bnd
xor
inc
and
popf
fsubp
insl
xor
je
jne
sub
cmp
movsl
cmp
pushf
pop
push
in
push
push
sub
je
lahf
push
addl
add
jge
cs
notl
or
in
pop
push
mov
sub
push
sahf
and
cmpsl
mov
shrb
sbb
mov
pop
dec
insb
and
mov
jo
jb
cs
add
mov
bound
adc
and
pop
into
sti
jo
mov
adc
mov
aas
fsubr
dec
shll
ror
cmpsb
mov
js
and
and
push
pop
push
fs
loopne
add
nop
pop
stc
sbb
cmp
sbb
mov
pop
loopne
xor
movsb
inc
adc
cmp
repnz
sbbl
stos
imulb
sbb
add
rcrb
push
sahf
addl
lcall
in
xor
push
loope
sti
or
ret
push
add
in
int3
push
iret
scas
shrb
push
cmpsl
push
mov
push
push
je
les
sbbb
jecxz
add
lea
push
rcrb
movsb
adc
pop
adc
cmove
sub
mov
mov
push
push
and
fcmovb
mov
orl
hlt
and
xchg
popa
rolb
and
cwtl
and
lahf
push
adc
lahf
adc
daa
jp
cmp
loope
cmpsb
and
orl
push
adc
cmovbe
and
sbb
loopne
das
test
rclb
push
sub
lds
in
dec
pop
pop
xor
les
jb
add
aaa
js
and
add
inc
and
sti
xlat
cmp
jge
lock
rorb
dec
sub
call
mov
add
jo
fiadds
lcall
daa
sahf
dec
test
sldt
pop
push
ds
inc
push
push
sub
jne
cld
fcoms
sbb
dec
pop
and
dec
push
bts
call
push
insb
sub
mov
enter
mov
add
sub
jae
add
sub
sarb
inc
fiadds
add
jecxz
xor
cs
cli
push
or
push
sbb
jb
sbbb
sbb
and
xchg
push
mov
xchg
cld
test
fildl
cmpl
jne
ds
adc
in
aas
push
sbb
pusha
adc
mov
xor
sbb
cmpsb
shlb
or
xor
dec
mov
decl
std
shlb
add
jmp
xor
add
clc
lss
je
mov
jmp
xor
dec
mov
mov
leave
popf
das
js
lods
jno
adc
leave
clc
dec
imul
insl
push
adc
mov
adc
xor
sbbl
mov
lret
enter
outsl
les
incl
nop
pop
xor
in
insb
push
mov
push
lds
xor
into
dec
dec
lahf
mov
outsl
sti
inc
inc
fisubrs
loope
mov
jle
mov
cmpsl
ret
xor
or
xor
dec
emms
cmp
movsb
and
jnp
mov
popf
imull
test
adc
mov
push
sbb
test
lock
xor
cmp
jle
lahf
mov
add
dec
pop
mov
jle
xlat
cmp
cmp
cli
insl
in
mov
mov
jmp
mov
mov
mov
push
cltd
add
lret
sub
mov
pop
rcrb
outsl
lea
adc
das
cmpsl
fcompl
xchg
das
mov
addr16
dec
mov
push
or
or
outsl
jbe
in
dec
outsl
testb
pand
dec
add
repnz
cltd
mov
xchg
cmp
sahf
pop
mov
or
push
sbb
inc
lock
or
lock
inc
pop
pop
xchg
movsb
xor
sbb
xchg
adc
sub
pusha
pop
xchg
xor
testb
out
cmp
std
add
subb
mov
add
or
in
cmp
or
or
add
sti
xchg
xor
ja
and
mov
pop
inc
dec
or
push
js
ja
les
les
dec
or
fs
fisubrs
add
int3
call
call
loope
sbb
call
xchg
jecxz
lds
and
and
and
jns
pop
fcmovnb
and
repnz
push
xor
clc
inc
xor
mov
inc
js
mov
sbb
jmp
and
or
pushf
shrl
out
mov
sbb
mov
cld
dec
int
inc
in
int
adc
inc
cltd
mov
int3
and
pop
xorb
jg
ffreep
pop
mov
or
iret
repz
adc
adc
push
or
or
fildl
inc
fsts
decb
push
dec
and
inc
add
adc
repnz
add
push
mov
or
jl
xchg
dec
xor
jno
testl
xlat
or
mov
ds
ljmp
adc
cmp
or
push
jle
int
cmp
pop
fwait
movsb
gs
push
fcomps
pop
inc
mov
xchg
mov
movsb
stos
lock
sub
movsb
push
scas
loopne
in
dec
gs
daa
or
stos
adc
xchg
aam
or
les
and
repnz
dec
inc
xchg
push
jp
mov
inc
adc
xor
inc
jp
iret
sub
adc
sbb
out
sub
mov
and
or
testl
icebp
out
daa
xchg
dec
sbb
jne
cmp
push
jecxz
adc
push
sbbl
jge
fisubs
mov
sub
cmp
and
pop
adc
pop
sub
out
sub
xor
push
jns
sbb
sub
fimuls
addr16
int3
xchg
and
add
movsb
pop
or
jne
sub
pop
mov
jl
roll
adc
scas
and
pop
sub
or
cld
push
ficoms
insl
xchg
cmp
and
sbb
imul
idivl
jge
pop
pop
pop
jo
add
add
fadds
lds
sbb
leave
mov
inc
inc
mov
jp
nop
out
mov
das
pop
mov
lods
cmp
pop
popa
sbb
add
inc
mov
adc
jns
pop
pusha
sbb
lods
sub
je
dec
add
test
mov
push
push
mov
push
mov
rcl
mov
test
outsl
adc
lcall
xor
push
xchg
push
js
fidivl
or
es
push
dec
test
adc
xchg
pop
mov
xor
icebp
dec
out
jecxz
jl,pt
sbb
adc
cmp
and
call
mov
loope
aad
xor
ds
or
mov
add
and
pop
mov
pop
sbb
fsub
imul
rclb
pusha
add
pusha
jns
data16
sbb
pop
pop
out
add
cs
pop
push
inc
push
dec
push
cmp
jo
cmp
mov
movsb
or
leave
mov
test
add
mov
jbe
into
mov
aad
push
or
adc
fs
xor
sar
or
mov
sbb
push
and
mov
out
mov
pop
jg
jl
push
nop
and
lea
and
push
sbb
pop
mov
fidivrs
mov
lock
mov
je
inc
testb
mov
mov
cs
test
or
push
cmc
xchg
imul
xorl
push
add
sub
push
push
jle
in
sbb
or
or
inc
sahf
pop
add
cs
and
mov
or
inc
push
or
adc
and
sarb
notl
lock
arpl
adc
xor
or
add
call
push
and
pop
or
inc
bound
push
cmpb
test
dec
add
push
rclb
cmp
lret
jb
test
movsl
repz
setne
mov
mov
je
loopne
pop
repz
sti
aas
push
push
jns
popf
mov
ss
or
adc
hlt
into
sbb
jne
push
push
push
push
push
adc
sbb
jmp
sub
adc
cmpsl
cmp
adc
dec
xor
pop
ret
jo
sub
push
mov
fisubrl
daa
push
mov
xor
mov
dec
cmp
and
sub
mov
pop
rcrb
divb
mov
pushl
and
xchg
jb
jne
push
push
adc
or
xchg
xchg
lock
sbb
add
mov
imul
outsl
adc
cmpb
hlt
cli
jnp
test
push
mov
test
xchg
fwait
push
sbb
sbb
push
dec
xor
pop
sbb
mov
jno
dec
mov
push
add
and
add
rcll
std
sub
jge
lret
cli
add
mov
xor
or
clc
add
push
frstor
xchg
imul
test
mov
pop
inc
push
nopl
outsl
lods
add
or
or
insb
and
sbb
and
add
scas
stos
xor
inc
movsb
imul
and
test
mov
push
cmpsl
push
fadds
dec
jne
shl
add
in
mov
int3
sbb
es
sti
fs
adc
out
test
les
mov
push
pop
es
stos
repnz
and
jmp
cmpsb
scas
xchg
xor
fcmove
mov
pop
stos
das
or
sbb
rolb
fs
push
scas
repz
lea
scas
mov
mov
push
xor
adcl
imul
mov
adc
into
notb
xchg
addr16
add
mov
in
pop
cmp
jle
xor
adc
and
mov
filds
adc
mov
and
adc
cmp
or
or
xchg
adc
jo
test
scas
sbb
pop
movsl
test
xor
cmp
or
add
shrl
push
add
jmp
leave
push
cli
or
cld
repnz
ret
sub
cld
mov
and
icebp
icebp
mov
cli
or
or
push
push
add
add
sbb
mov
push
pop
lods
xor
inc
fs
clc
jb
repz
add
jle
pop
adc
arpl
cli
into
inc
xchg
into
movsb
mov
xor
icebp
cmpsl
mov
shl
xor
add
leave
xchg
mov
push
and
test
sti
push
stos
cmp
jbe
xacquire
loopne
dec
jno
mov
add
lea
aas
push
inc
add
out
cmp
inc
mov
decb
clc
add
sub
lds
pop
sbb
jp
push
adc
daa
and
lods
adc
dec
add
ror
ret
addl
arpl
add
jmp
pop
push
sub
sarb
fwait
sbb
movsb
into
cmpsb
cmp
inc
mov
mov
lret
stos
popa
cmp
into
lock
aad
push
adc
shll
sbb
or
jg
incb
clc
cmp
jae
push
je
mov
fcomps
shl
and
daa
xor
add
push
push
in
add
mov
stos
cli
out
push
mov
cmp
dec
hlt
jge
enter
xchg
jmp
ss
mov
outsb
and
movsb
push
xchg
in
jnp
aas
jecxz
jecxz
jmp
les
ljmp
hlt
scas
xor
pushf
or
insb
lock
jecxz
and
push
cmp
jg
loope
shr
push
sbb
sub
jge
sub
jmp
mov
adc
test
mov
hlt
mov
push
lea
sub
xorb
cs
scas
pop
nop
stos
mov
sub
push
sti
push
or
or
jl
xor
adc
lock
nop
or
sub
push
clc
push
push
aas
nop
mov
inc
and
inc
add
fsubrl
add
cmp
inc
or
sub
cld
push
sbb
ret
mov
adc
jle
jg
cli
es
mov
inc
pop
mov
fdivl
adc
dec
test
inc
mov
sub
mov
add
mov
sbb
inc
cmp
cwtl
sub
fdivr
cmp
push
inc
mov
mov
jbe
in
fmul
add
idivl
fsubrs
and
mov
jo
dec
push
cmp
sbb
data16
sahf
push
mov
push
ret
mov
aam
and
sub
cltd
sbb
pop
and
dec
adc
or
mov
in
mov
add
push
pop
lods
and
movsb
lcall
add
sbb
and
mov
cmp
cli
or
push
lock
andl
or
lock
add
movsb
jb
lea
daa
ljmp
jo
outsl
jecxz
mov
mov
fimuls
mov
mov
mov
or
andb
add
lahf
inc
mov
clc
mov
jne
int
jns
repz
cmp
push
ret
add
xor
inc
mov
cmp
in
mov
push
cmp
outsb
push
mov
dec
add
mov
outsb
or
add
jp
xchg
adc
jb
mov
outsb
inc
pop
adc
inc
out
or
dec
push
xchg
in
push
jbe
push
lods
mov
push
xchg
fs
out
ret
adc
adc
mov
ret
or
addr16
cmp
xor
or
inc
cli
pop
jg
test
mov
inc
call
mov
test
mov
xor
fs
mov
add
inc
jb
mov
jne
jmp
xorl
addr16
mov
scas
test
imul
xor
pop
aam
sbb
ret
lock
inc
mov
ss
orb
jp
shl
mov
adc
or
pop
pop
test
pop
xor
sub
ret
dec
inc
push
adc
cmpsb
cmp
jmp
push
jl
rorb
add
push
sti
adc
xor
sbb
push
sbb
lahf
sbb
adc
push
data16
loope
in
dec
in
shrb
outsb
lock
jl
pop
daa
dec
lcall
xchg
insb
add
cli
gs
cmp
pusha
mov
insl
sub
sbb
push
xor
push
es
lock
adc
dec
mov
cmpb
pop
sarb
mov
fldl
lock
cwtl
adc
or
int
call
fistpl
cltd
aad
ret
js
xchg
fmuls
sbb
push
or
out
pop
enter
or
aad
pop
add
outsb
inc
jne
sbb
jne
jmp
fbstp
je
sub
adc
fildll
fbld
enter
adc
popf
mov
adc
mov
es
mov
sahf
sub
xor
push
sbb
jmp
dec
adc
mov
test
xchg
sbb
or
loope
and
or
ret
mov
mov
ret
jmp
fistpl
fistps
arpl
cli
and
push
into
sbb
nop
pop
in
dec
or
sub
dec
add
pop
dec
add
cs
in
xchg
cmc
mov
sahf
mov
and
jmp
push
push
insl
subb
int3
pop
ja
sub
lods
mov
push
push
outsl
cmp
add
pop
adc
repz
or
sbb
or
or
in
push
adc
push
push
jb
clc
jbe
adc
jne
shrl
add
push
orl
add
add
shl
pop
adc
call
fisubrs
shlb
add
cmc
inc
xchg
lock
xchg
test
sbb
mov
add
mov
pop
mov
mov
scas
jecxz
pop
jmp
xor
xchg
or
and
loopne
fucomp
push
out
loope
mov
add
cmp
movsb
loopne
push
dec
adc
sbb
and
or
inc
sub
mov
adc
add
cmp
testb
negl
and
in
je
sbb
jp
push
and
ret
cmc
sub
sub
jle
mov
adc
movl
aas
insb
adcb
jge
js
lods
jp
xor
cmpl
loope
inc
out
cld
jmp
sub
adc
push
arpl
in
insb
pop
sbb
iret
je
loopne
loopne
add
in
shlb
dec
mov
sbb
sbb
fisubs
addr16
or
sub
pop
inc
fisubs
xor
push
push
inc
shl
add
push
sub
xor
pop
cmpsb
sbb
push
sub
inc
mov
xchg
pushf
sbb
or
nop
or
push
enter
mov
cmp
add
pop
popf
lea
lds
lock
or
cmp
rorl
mov
mov
lahf
add
nop
pop
push
test
add
add
or
inc
sahf
add
add
gs
push
inc
mov
aaa
ja
adc
aam
dec
out
test
add
inc
and
or
stos
mov
cmp
cmp
push
notb
jmp
mov
sub
in
sti
clc
jne
xor
push
push
inc
adc
es
xchg
cld
cld
fdivrl
push
sub
mov
xchg
add
xchg
addl
cli
clc
mov
mov
mov
es
or
sbb
or
push
add
fiaddl
push
mov
cld
sub
mov
imul
jo
fimuls
loopne
jg
adc
cmpsb
nop
fiaddl
lock
call
loop
imul
jmp
add
push
sub
sub
add
or
iret
push
push
add
push
xlat
push
fstps
fadd
or
mov
out
movb
sub
add
mov
jp
stos
sbb
or
addl
pusha
rolb
xchg
inc
pop
pop
pop
push
arpl
dec
rorb
mov
push
sbb
add
or
rolb
cmp
insl
sbb
mov
xchg
add
add
arpl
int
push
das
add
hlt
and
movsb
test
out
dec
push
in
inc
or
add
incl
nop
push
mov
push
call
ret
or
lock
shlb
cmp
je
sbb
push
inc
cmp
adc
pusha
movzwl
aad
cmp
xchg
push
dec
mov
into
pop
and
mov
jp
mov
ss
jle
mov
push
mov
push
movsb
sub
xchg
pop
push
outsl
sub
lcall
mov
cmc
mov
jl
push
push
int
shl
sub
repz
test
mov
sub
mov
or
cs
sub
xchg
daa
inc
inc
or
mov
mov
cmp
je
sbb
clc
push
lea
push
dec
aam
jbe
andb
adc
clc
push
sbb
push
sti
pop
pop
or
adc
cmp
aas
sarb
loop
mov
ud0
push
aas
push
adc
pop
inc
xchg
pop
rolb
and
inc
dec
insl
imul
fisubs
push
clc
add
in
shl
push
in
inc
lods
inc
mov
mov
in
mov
neg
push
andl
hlt
test
cli
fldl
or
push
loope
in
shlb
add
je
sbb
sub
mull
test
ja
xchg
push
test
movsl
lahf
cmp
push
push
xor
push
push
cmp
je
fcmovu
push
push
rorb
or
test
fiadds
push
mov
and
das
sub
cmp
je
push
push
aas
lret
dec
mov
xor
push
xchg
outsb
and
mov
jmp
dec
ss
mov
fdiv
mov
add
dec
int
xor
add
aam
mov
push
test
lock
repnz
xchg
or
mov
or
xchg
sahf
into
dec
sbb
in
incb
addr16
dec
sbb
push
and
add
add
cmp
shlb
aas
push
jae
xchg
dec
cmpl
je
ret
stos
jecxz
insb
pop
or
and
sub
loope
adc
mov
loop
adc
add
jb
pop
sahf
cmp
or
ss
dec
in
ret
dec
jmp
jns
shl
rcrl
push
and
jb
fistpll
js
lea
in
cmp
je
cmp
je
cmp
jne
add
cmpsb
mov
in
xchg
ja
cmc
je
dec
mov
add
push
mov
gs
or
fwait
loop
mov
outsb
pop
mov
cmp
xor
pop
cmp
adc
mov
pop
clc
pop
add
sbbl
cld
sti
push
add
add
xor
enter
sub
jne,pt
xchg
and
repnz
add
xor
jl
push
mov
mov
or
push
jns
jnp
stc
test
subb
add
jl
ds
mov
sbb
pop
pop
jmp
sub
ret
xor
add
inc
mov
adc
icebp
mov
cmp
jb
cmp
ja
fadds
xor
dec
inc
inc
aaa
popa
xchg
lcall
call
or
je
add
push
sbb
xchg
mov
add
pop
mov
int3
roll
inc
adc
and
dec
xor
popl
in
lahf
dec
pop
sbb
ret
jmp
jge
cmpsb
in
jle
loopne
xor
filds
pushl
jae
push
cmp
gs
je
cmp
jne
mov
sbb
pop
xlat
cmp
add
push
dec
inc
lock
mov
sahf
testl
push
movsb
jne
jmp
testb
sub
and
inc
sbb
cli
cmp
jbe
aam
pop
add
movsl
mov
cmp
fs
dec
inc
jmp
inc
and
or
jne
xor
sub
ret
add
sbb
pop
or
repz
das
cmp
test
je
mov
lea
dec
movsb
sahf
clc
mov
daa
mov
in
inc
pusha
jnp
xor
inc
cmpl
inc
push
sti
cmp
notb
cmp
push
mov
leave
insb
jno
clc
je
fs
insl
adc
movb
cmp
or
ja
cmpsl
mov
shrb
enter
in
ret
in
movsl
xchg
cld
add
push
cmp
ds
and
loopne
sub
cmpsb
inc
sub
popa
loop
or
out
jne
mov
add
lock
mov
outsl
test
mov
pushw
insl
mov
and
jb
cmp
rol
shl
add
jmp
cwtl
aas
mov
mov
inc
orl
or
dec
insb
es
fs
jne
xor
and
push
test
fdivs
mov
or
add
rcll
incl
jae
mov
jmp
dec
shlb
cld
adc
test
sub
lea
jo
jecxz
cld
cmpsl
call
jecxz
es
rolb
jle
adc
jg
or
jge
fsubrl
push
aaa
or
jle
es
sub
lods
mov
fildll
and
pop
cmp
jl
pop
jle
pusha
or
inc
fwait
cli
inc
test
jbe
jp
jb
pop
cwtl
aas
jle
push
adc
and
or
je,pn
test
jne
je
adc
mov
xchg
je
outsl
dec
mov
and
add
popf
hlt
pop
dec
jl
in
push
sub
push
sbb
or
inc
add
and
jno
mov
call
and
je
adc
mov
sahf
inc
jno
mov
push
mov
icebp
js
add
jp
inc
es
mov
push
or
insb
add
push
movl
sub
add
sub
mov
shlb
and
inc
pushw
cmpsb
insl
push
push
adc
jne
aad
mov
add
and
lret
les
sbb
mov
jne
add
add
mov
jno
jo
xchg
outsb
lea
fidivs
inc
mov
outsb
jo
jmp
push
inc
lea
adc
inc
daa
mov
add
pop
jb
aas
push
mov
sbbl
cmp
mov
stos
push
mov
loopne
daa
and
inc
out
or
xchg
rcrb
mov
pop
cwtl
xor
mov
jmp
lock
pop
jmp
daa
mov
add
inc
mov
push
push
popa
dec
lcall
mov
fsubr
loopne
insl
and
sub
loope
test
fmuls
adc
sti
mov
mov
inc
test
or
or
pop
mov
push
push
shlb
dec
add
arpl
and
inc
mov
cmp
or
movb
aam
test
lock
xor
pop
mov
dec
lods
adc
inc
or
ljmp
inc
cmp
xor
jl
add
cmp
stc
mov
cmp
inc
out
mov
push
movsl
arpl
inc
sahf
push
mov
fdiv
and
popa
hlt
xor
out
add
inc
xchg
xchg
add
cwtl
add
or
call
push
icebp
inc
dec
lds
sbb
push
dec
sub
sti
pusha
sbbl
fnsave
cs
js
loopne
or
dec
in
out
inc
fisttpl
lea
pop
sub
int3
hlt
inc
add
pushl
dec
mov
insl
mov
lods
dec
mov
add
push
mov
sub
loop
movsl
call
popa
dec
enter
xor
push
mov
lahf
jne
pushf
pushf
xchg
mov
addl
mov
lea
or
aam
pop
xchg
mov
or
jne
iret
mov
push
leave
mov
dec
rorl
or
and
cmp
nop
and
or
xchg
nop
pop
stos
test
and
gs
mov
or
call
mov
popa
push
dec
inc
jne
mov
dec
sarl
rorb
aam
hlt
or
sbb
cld
loope
mov
add
shl
cmp
lods
cmp
call
clc
sbb
push
rolb
in
loope
aad
out
and
jne
insl
cli
push
rclb
push
push
fdivl
jne
fucomip
add
jbe
lods
cmp
jnp
das
movl
cmp
das
bound
cmp
fs
cmpl
or
cmp
aad
or
imul
fcomp
pop
ret
sbb
jmp
icebp
dec
cli
sbb
je
ret
lds
add
inc
mov
inc
inc
inc
xchg
in
loope
jge
pop
test
or
and
aaa
sbb
adcb
xchg
js
dec
pop
adc
iret
adc
push
mov
imul
in
test
xchg
lret
push
push
dec
shrl
in
sbb
push
call
xor
jbe
and
aaa
subl
mov
inc
pushl
pop
hlt
jmp
jmp
pop
inc
cmp
je
lea
cmpb
cmp
jne
add
pinsrw
jne
push
loopne
adc
cmp
mov
mov
inc
call
fld1
jp
cmp
lock
data16
mov
jne
movsb
out
cs
iret
push
adc
sbb
ret
lods
cmp
das
movsl
insb
jl
add
jo
and
jecxz
add
fidivrl
and
or
and
cmpb
enter
xor
das
ret
sub
nop
jmp
inc
push
sbb
dec
fucomi
adc
pop
sbb
std
ret
xchg
adc
std
add
ret
enter
mov
mov
adc
add
int
dec
pusha
or
mov
jne
das
dec
loope
iret
test
add
xrelease
dec
or
ds
lret
in
cmp
inc
mov
xor
in
cmpsb
sub
xor
mov
pushf
sbb
push
push
sbb
add
inc
adc
push
push
jl
mov
cmc
push
das
mov
sti
add
adcl
and
mov
loopne
mov
inc
cmp
jbe
sub
ja
and
int
xor
push
fadds
mov
sub
xchg
lret
in
xor
xor
cmp
pop
cmp
filds
cmp
push
sbb
pop
ret
dec
or
jge
fwait
aam
pop
addb
fs
add
hlt
sub
ss
rolb
xor
cld
push
orb
mov
push
andb
push
xor
or
js
push
jnp
jb
jge
aam
les
dec
shr
pop
and
or
aas
cmpsl
in
push
push
cmpsb
xor
clc
sub
add
aas
cmp
popf
js
jo
inc
sahf
insl
pusha
int3
mov
pop
mov
je
mov
ret
incl
or
sub
in
dec
bound
add
loopne
insl
add
int
or
add
pop
inc
dec
movl
pushf
cmp
js
or
mov
push
mov
cmp
inc
inc
ret
imul
cld
test
pusha
lods
mov
cltd
cmp
push
inc
lcall
cmp
popa
pop
lcall
pop
js
lods
aas
or
xor
clc
popf
jg
adc
out
jne
push
dec
imul
mov
andl
je
mov
jmp
lcall
hlt
cmp
add
aad
adcl
ficompl
je
adc
mov
call
add
fucomi
ud0
add
stos
add
cli
inc
cmc
pop
mov
lea
mov
faddl
inc
and
xor
shll
push
arpl
lock
mov
bound
lea
mov
daa
clc
and
cmp
mov
mov
daa
push
sbb
inc
jbe
rclb
xorb
imul
hlt
in
in
adc
and
cli
mov
push
mov
in
out
sbb
ret
cmpsl
in
out
xchg
mov
lock
iret
dec
xor
subb
mov
cmp
shrl
mov
sbb
push
adc
test
dec
mov
push
lock
add
call
pop
daa
fsubs
repz
xor
lcall
or
bound
mov
cmp
call
inc
mov
ret
in
mov
or
cmp
andl
cmpsl
sbbl
cmpsb
sub
inc
mov
pop
pop
mov
mov
shlb
iret
and
loopne
xor
adc
mov
fst
xorl
imul
or
inc
or
push
hlt
cltd
inc
test
pop
popa
adc
pop
or
xor
loope
scas
dec
add
mov
sbb
adc
sub
call
xor
stc
cwtl
pop
sbb
int
subl
subl
outsl
sarb
inc
jmp
pop
mov
mov
mov
or
ror
sbb
xlat
xor
mov
add
push
adc
dec
sbb
mov
add
push
xor
cmp
and
aam
enter
inc
dec
pop
sub
dec
js
popf
imul
mov
fsubr
movl
fidivrs
jae
aaa
test
and
scas
std
pop
jmp
pusha
mov
or
adc
aas
push
push
mov
adc
jb
das
push
and
rorl
cmpl
loop
dec
xor
adc
enter
mov
movl
add
cli
pushf
xor
push
test
es
dec
adc
sub
lock
mull
call
les
pusha
inc
mov
and
add
loope
cmp
inc
inc
or
movsb
andl
out
mov
arpl
les
clc
divl
and
cs
lea
push
fadds
or
cmp
mov
inc
mov
shlb
or
push
mov
mov
in
mov
push
push
rclb
gs
imul
jcxz
shrb
hlt
mov
mov
andl
xor
loopne
pop
push
ds
cmp
scas
int3
popf
adc
or
or
orb
mov
rcrb
mov
inc
push
xchg
xchg
mov
adc
cmp
push
je
clc
xchg
cmpsl
sub
lret
jle
cwtl
dec
push
jle
cs
adc
fwait
add
mov
in
or
add
pop
sbb
pushf
popf
addb
xor
lahf
mov
movsl
adc
inc
jb
mov
jo
add
or
stos
lock
js
xor
push
add
popa
jnp
pusha
push
and
cmp
dec
pop
push
insl
pop
pop
sahf
cmpsl
js
pop
push
or
rorb
mov
popf
add
xchg
push
ret
pop
je
push
pop
cmp
xchg
add
aaa
test
and
push
lods
call
pop
pop
mov
or
sbb
sub
or
adc
push
mov
dec
cmp
inc
ja
add
mov
mov
pop
xchg
dec
pop
nop
push
push
pop
pusha
xor
and
push
fwait
dec
mov
lock
pop
dec
xor
scas
mov
int3
push
dec
adc
and
mov
inc
dec
inc
push
flds
pop
pop
push
add
mov
pop
gs
fsubs
in
mov
pop
ret
dec
jbe
movsb
and
stc
popa
fstl
test
lock
mov
pop
neg
pop
or
xor
test
fsub
mov
mulb
enter
or
pop
mov
sub
nop
imul
and
xchg
sub
subl
xor
aas
adc
or
inc
div
loope
in
add
negb
fisttpll
imul
push
movsl
jmp
hlt
cmc
cli
std
adc
mov
clc
pop
imul
pop
mov
aad
sbb
pop
inc
mov
xchg
sbb
push
push
inc
xor
ljmp
or
and
and
push
test
jb
push
enter
cmpsb
jbe
icebp
pop
adc
pop
outsl
adc
sbb
pop
sub
shl
hlt
mov
mov
aam
push
rcll
and
dec
imull
fbstp
pop
pop
adc
or
jno
mov
lods
mov
add
orl
or
or
or
icebp
test
mov
pop
dec
fstpt
push
sbb
addl
in
xchg
or
xchg
xchg
and
lcall
push
adc
mov
xor
xor
adc
loop
push
mov
sbb
ud2
ljmp
xor
or
test
sub
ret
jge
or
popa
xor
add
inc
add
inc
clc
inc
aas
iret
xchg
rcrb
push
dec
dec
pop
jbe
lea
dec
clc
sbb
sbb
push
push
sbb
sbb
shlb
jne
sub
cmp
mov
inc
and
and
mov
inc
sbb
dec
dec
es
lods
lret
and
and
repnz
sub
dec
jns
fs
push
pop
and
subps
sbbb
inc
adc
loopne
and
fsubrs
mov
cmp
pop
push
and
jl
pop
inc
sbb
jle
out
cmpsb
pop
ret
and
push
pop
lods
insl
nop
insb
iret
xor
fbld
cmpsb
mull
push
lcall
outsl
xchg
push
sbb
mov
push
jmp
xor
pop
push
dec
aad
hlt
sub
pop
addl
pop
cmpps
inc
and
subb
add
loope
sub
pop
sub
and
test
and
cmc
and
xor
adc
sbb
xchg
push
mov
adc
ss
daa
cmp
out
sub
xchg
fnstcw
and
sub
scas
sub
dec
test
jle
lods
icebp
cmp
pop
jae
andl
sbb
filds
imul
mov
adcb
cmp
jle
cs
aam
add
or
and
in
xor
clc
add
sub
add
inc
in
test
add
mov
pushf
pop
xchg
or
add
jl
negl
cmpsl
xor
mov
lods
mov
sbb
loop
xor
mov
sbb
shlb
cs
and
rclb
and
mov
sbb
xor
adc
arpl
fadds
or
mov
and
test
fistpll
cmp
jne
mov
jmp
pop
pushf
roll
repz
das
popf
mov
pop
push
add
fildll
sub
aas
sbb
and
jns
push
sub
add
sbb
cmp
xorb
imul
push
or
cmp
repz
sti
clc
or
leave
ret
aas
push
lods
leave
ret
std
das
push
bound
push
push
push
inc
add
insb
pop
add
sub
push
or
inc
filds
pop
outsb
jp
xchg
inc
jg
mov
pop
mov
dec
push
pop
cmp
add
aad
add
add
test
jl
out
pop
rclb
dec
mov
push
push
dec
dec
adc
rcll
call
rcl
mov
dec
popf
movb
pop
das
pop
jb
imul
sub
fisttps
push
xchg
filds
jne
cmp
push
or
adc
iret
negl
into
push
add
popa
ss
mov
rolb
xchg
fdivrs
or
sbb
sbb
cmp
jo
xchg
arpl
sbb
jge
stos
divl
pushf
imul
bound
shll
pop
and
ds
ljmp
add
sub
stc
enter
aam
push
jns
insl
add
add
sbb
aam
add
test
call
loopne
xor
mov
call
pop
xor
es
dec
stc
ljmp
in
fadds
pop
popf
mov
ret
xchg
pop
popa
lret
push
repnz
or
out
adc
fstps
xor
pmaxsw
into
sysenter
mov
int
cmpl
cmp
sbb
mov
test
inc
enter
fs
xor
ficoms
or
popa
dec
pop
adc
dec
xchg
daa
ljmp
lods
add
inc
mov
fdivr
mov
or
jae
sub
adc
clts
scas
jmp
sub
push
push
or
shl
pop
stos
aad
mov
mov
xchg
imul
adc
jp
mov
bound
sbb
mov
sub
fnstsw
sarb
mov
xchg
jle
xor
sbb
sbb
js
xor
or
lea
inc
outsl
add
pusha
or
inc
clc
pop
sbb
loopne
fcomps
inc
aam
shrb
repnz
pop
shlb
mov
lret
bound
aaa
pop
shlb
mov
mov
inc
fdivl
fistpl
xchg
add
in
dec
mov
cmpsb
jo
add
repnz
or
or
add
inc
rcrl
add
mov
inc
shll
push
sahf
pushf
cmp
push
adc
into
pop
cmp
inc
add
out
pop
pop
jae
mov
jl
or
je
out
adc
push
xchg
mov
call
push
or
inc
fiaddl
xchg
pop
shr
push
es
sub
cmp
outsl
xor
push
int
js
xchg
mov
fdivr
shrl
sub
subl
jcxz
lcall
xor
inc
push
mov
mov
or
push
jle
out
movsl
cmp
sahf
dec
push
adc
daa
mov
jl
or
jmp
and
jmp
rcl
push
xor
shlb
or
jnp
adc
jmp
sbb
fcmove
and
mov
int
inc
insb
out
add
ret
mov
rcrb
test
xor
call
sub
bound
sub
push
add
adc
inc
add
popa
subb
push
js
shll
inc
xor
add
add
cmpl
adc
sub
pop
shrl
dec
xor
jne
push
nop
movsb
mov
fs
inc
movsl
lahf
insb
jb
inc
movsl
add
icebp
xchg
push
in
inc
pop
xchg
pusha
insl
inc
push
mov
adc
pop
jl
add
stc
or
test
sub
add
push
inc
fs
pop
fimull
icebp
cmp
mov
js
jmp
scas
push
jecxz
call
pop
jle
jmp
jge
movzbl
push
cmp
sbb
push
add
push
imul
pop
insb
aaa
mov
je
xor
mov
sub
ficoms
loopne
shrb
fildl
lods
stos
dec
nop
fimuls
je
sub
mov
int
cmp
push
jmp
push
les
jmp
add
push
xor
sub
mov
movsb
jg
icebp
pop
pcmpgtd
push
add
cmpsl
pop
push
lea
push
inc
push
lret
movb
testl
imul
cmp
sbb
adc
xor
test
dec
mov
pop
or
add
inc
aaa
cltd
mov
adc
into
xlat
fsubrs
xor
repz
sub
cmpsl
jb
sub
cmp
pop
sub
push
or
add
or
add
pop
and
rclb
dec
andl
or
or
pop
jge
jb
dec
pop
aam
aas
mov
cmc
adc
xchg
add
xorb
call
pop
dec
int
push
daa
arpl
sbb
dec
or
mov
popf
je
add
push
push
push
fidivrl
jmp
pop
cmp
mov
lock
and
je
xor
inc
cmp
adc
xchg
push
push
push
and
into
shrb
push
pusha
ror
shll
jle
cmp
fimull
and
jge
or
push
push
ss
div
and
jmp
mov
insb
inc
test
arpl
mov
shrb
imul
sbbl
cmpb
mov
sbb
adc
or
hlt
imul
lahf
aas
mov
sbb
rcl
lret
sbb
dec
aaa
rorb
test
xchg
fwait
inc
xchg
call
pushf
cmp
cmp
jbe
cmp
jbe
mov
sbb
add
mov
cld
jno
add
push
mov
pop
mov
mov
enter
divb
jmp
mov
dec
fdivl
cmp
lret
cmp
loop
jle
fdivr
adc
cmp
orl
enter
aas
adc
jge
lea
jo
mov
adc
lea
pop
ret
jle
mov
xorl
fcmovnb
adcl
test
es
push
add
imul
inc
roll
inc
cmpsb
mov
xchg
bound
sub
pop
pop
mov
outsb
add
je
push
xlat
cmpsb
mov
dec
dec
lahf
lock
cmpsb
xor
dec
or
stos
insl
xor
stc
fdivrs
cmp
mov
add
cmc
pop
rol
jne
mov
mov
loop
xor
sub
push
sbb
and
sbb
test
and
jmp
out
sar
and
leave
test
jb
ret
cwtl
sbb
and
push
mov
out
inc
jbe
xor
push
inc
and
and
mov
and
mov
fs
dec
push
fsubrs
orl
push
insb
dec
lahf
inc
popf
aaa
fsubrl
lock
mov
xor
test
sbb
push
imulb
jbe
jecxz
mov
mov
inc
cmp
jb
pushl
pop
adc
sbb
cmpsb
lea
cmc
add
flds
push
movsb
sub
pop
or
lods
ds
imul
dec
sbb
sbb
test
push
inc
push
mov
adc
cmpsb
movl
sbb
and
sub
sti
sub
or
fstps
popf
jg
fwait
inc
xchg
insl
mov
cmpsb
std
inc
lods
mov
mov
add
cltd
je
negb
sahf
out
fcom
jae
dec
notl
pop
or
mov
push
js
or
mov
icebp
add
mov
pop
icebp
icebp
cld
push
mov
mov
in
cmp
test
mov
jecxz
mul
jo
dec
sub
movsl
pop
or
lea
js
xor
inc
roll
adc
push
in
shrb
stc
and
sbb
rorb
adc
pop
fdivrl
mov
into
les
fmull
clc
pop
sbb
jl
inc
out
push
and
pop
sub
popa
es
pop
cld
cmp
push
loopne
orb
push
ljmp
repz
sbbl
push
sbb
or
mov
je
xchg
dec
jno
mov
mov
mov
add
push
ret
out
inc
pushl
push
sbb
cltd
cmp
xchg
pop
cmp
jne
punpckhdq
sbb
js
mov
cmp
cmp
xorl
js
jb
mov
mov
mov
movsb
mov
dec
jp
sahf
divl
leave
mov
loopew
xchg
push
pop
pushf
dec
jbe
pop
inc
stos
or
lea
pop
scas
cmp
rorb
xor
fsubrs
xchg
or
cmp
jnp
xorb
loope
lea
ljmp
nop
loopne
mov
mov
push
xchg
ret
mov
mov
and
rclb
mov
out
insb
and
jmp
aaa
int3
jo
imul
mov
mov
inc
lahf
repnz
and
jno
and
imul
arpl
xchg
and
testl
mov
lahf
sub
arpl
xor
jg
cmp
cmp
into
lock
pop
add
ja
testb
insl
sub
pop
loope
loop
bound
sub
push
je
and
push
push
add
lods
test
jnp
or
repnz
out
mov
cmpb
ret
cmp
sub
pop
and
add
mov
pop
lock
or
push
jmp
xchg
test
jl
lods
mov
cmp
jge
jl
into
adc
or
or
or
add
pop
fiadds
or
lret
jge
pop
sbb
and
cmp
ja
mov
movzwl
sub
dec
and
adc
mov
insb
adc
or
dec
or
inc
jnp
sbb
pop
push
push
or
adc
mov
dec
clc
dec
loopne
incb
mov
lds
addr16
push
push
aas
les
mov
sub
add
rcrb
vxorps
mov
mov
pop
push
mov
push
xchg
out
mov
movl
in
push
xchg
pop
inc
add
pop
pop
imul
dec
adc
ret
fnstcw
and
jne
pop
pop
fwait
adc
mov
inc
daa
testb
sub
push
mov
push
jo
and
lods
rolb
mov
ret
je
aam
clc
aad
cmp
jbe
push
xor
je
aas
inc
pop
cs
mov
or
and
lods
mov
outsb
or
stos
ret
push
fmuls
rolb
pop
addl
add
adc
push
sub
lods
int
loope
outsb
push
sub
dec
and
mov
jge
in
inc
adc
mov
xor
pop
movsb
cwtl
rolb
ret
push
mov
adc
arpl
cmp
jae
xor
or
or
jne
pushl
dec
pusha
cmp
pop
add
dec
add
and
jg
and
jp
mov
leave
lods
push
adc
or
jmp
stos
xor
cmp
popf
sbb
xorb
or
mov
popf
adc
mov
cltd
js
clc
lock
mov
and
js
testb
sub
mov
sbb
in
int3
in
adc
mov
add
pop
and
jo
pop
in
pop
dec
insl
fldt
in
add
push
mov
enter
xor
test
test
stc
cmp
mov
int3
clc
loopne
fcom
in
icebp
mov
or
dec
cld
aad
inc
adc
notl
add
mov
ret
sti
mov
fdivrl
dec
sti
fwait
xor
test
inc
mov
jmp
adc
pop
xchg
push
leave
push
inc
pop
pop
add
push
cmp
mov
push
add
jae
fcoms
sbb
orl
xor
or
test
pop
or
and
inc
mov
push
fcoms
ljmp
push
or
cmp
pop
cmp
pop
fmuls
mov
pop
push
dec
insb
mov
mov
in
and
pop
mov
and
cmp
xchg
xor
mov
mov
mov
mov
aas
xchg
mov
cmp
xchg
pop
out
mov
lea
mov
jp
movb
imul
jecxz
es
add
or
pop
dec
sbb
or
sub
add
jp
mov
add
mov
jmp
inc
hlt
mov
and
inc
mov
jl
call
test
rorl
push
pop
mov
rorb
mov
sarl
int
cld
jg
mov
imulb
pop
dec
inc
cmp
and
js
mov
jnp
lods
inc
or
nop
cmp
imul
jmp
sahf
in
cmc
push
mov
ss
jne
mov
movsb
or
inc
xchg
pop
rolb
xlat
xchg
int3
mov
mov
movsb
mov
shrl
movsb
mov
or
and
add
inc
popf
out
push
mov
fildl
fadds
push
mov
outsl
imul
jle
jo
inc
push
divl
adc
jbe
inc
cmp
call
mov
pop
push
loope
stc
jo
pop
sbb
lret
shll
aam
or
mov
pop
cmp
je
mov
repnz
mov
mov
and
jl
cmp
out
adc
pushf
fstpt
addr16
and
fs
jmp
ret
and
sbb
movsl
pop
dec
paddsb
aaa
push
lret
jne
add
in
rcll
aas
push
lods
mov
hlt
push
cmp
je
dec
dec
sbb
inc
scas
pop
or
js
jmp
push
lea
orl
add
sub
pop
orb
call
int3
adc
mov
stc
mov
cmp
jae
lea
jmp
cmpl
cmc
int
inc
inc
cmp
jbe
sahf
in
inc
push
shlb
fidivs
clc
or
clc
sub
lret
fimuls
stos
cmp
shrb
fmull
leave
adc
sub
rcrb
lds
mov
push
mov
in
xchg
scas
jne
inc
ljmp
cmp
mov
mov
andb
orb
xchg
bound
testl
sub
jno
inc
popa
adc
into
add
add
cmp
push
jno
add
mov
int3
pusha
sub
pop
popa
mov
sbb
pop
add
fs
shl
in
push
sbb
insb
cmp
movsl
or
rolb
xchg
bound
enter
jns
movsl
les
pop
add
xchg
adc
sbb
mov
test
xchg
jo
ret
aam
xor
cmp
mov
roll
add
push
xchg
mov
pop
inc
lcall
sub
or
push
push
cld
sahf
pop
call
lahf
ja
or
sbb
inc
inc
mov
enter
je
add
pop
in
inc
loopne
adc
xchg
push
sub
xor
pop
loopne
or
test
push
xchg
jbe
jbe
jmp
adc
xor
lret
pop
sbb
push
or
adc
test
push
sbb
push
cmp
scas
ss
fsub
inc
pop
orl
lods
cld
fisubrs
or
dec
xorl
xchg
mov
adc
lock
push
mov
or
xor
and
mov
mov
popf
adc
or
jne
xchg
orb
xor
adc
pop
xchg
pop
or
xchg
add
nop
dec
xor
adc
sar
or
aam
jns
pop
cmp
add
cmpsb
pop
or
cmpsl
push
cli
inc
les
and
icebp
imul
lock
lahf
jno
jge
repz
or
mov
ds
jnp
cmp
ljmp
pop
pop
and
dec
aam
cmp
push
into
dec
fcmovu
sub
inc
jns
dec
dec
clc
jne
mov
jle
addr16
push
test
cmp
dec
or
sub
sahf
adc
lea
out
cmp
dec
sub
mov
push
enter
sub
int
daa
xchg
sbb
xchg
lret
clc
hlt
hlt
test
or
mov
pop
pop
mov
xor
dec
xor
fidivrl
cmp
jae
fadds
adc
mov
lret
je
push
adc
hlt
jne
push
js
pop
scas
pusha
dec
fistl
cld
loopne
fnstenv
xor
lods
push
mov
mov
push
xchg
or
mov
movsb
sbb
lock
mov
pop
cld
clc
pushl
cmp
bound
push
lret
aam
std
add
icebp
adc
mov
data16
or
xor
sar
jmp
fiadds
add
cmp
push
mov
jmp
hlt
and
iret
je
inc
mov
mov
xchg
or
add
mov
xchg
mov
jb
push
lea
nop
dec
mov
xchg
in
push
add
cwtl
adc
cmp
xchg
adc
scas
test
ret
ftst
xor
jle
xchg
add
in
pushf
imul
rcl
sbb
stos
push
shlb
push
mov
mov
rorl
ret
ret
cmpl
imul
adc
xchg
pop
adc
mov
lock
dec
hlt
pop
movsb
inc
xchg
shlb
pop
data16
lea
xor
add
lret
fnstsw
in
pushf
fldl
inc
jne
mov
test
jmp
add
xchg
aaa
jno
mov
and
inc
add
repnz
mov
clc
out
fstpt
fistpll
adc
push
loopne
sub
lods
push
sahf
mov
test
or
push
jae
cltd
bound
push
pop
scas
mov
xchg
mov
or
mov
jns
mov
pop
outsl
sub
leave
aaa
loope
xor
mov
dec
sub
je
orb
test
add
xchg
pop
ljmp
aad
or
jle
mov
push
jp
dec
or
mov
or
pop
mul
seto
in
sub
enter
adc
pop
mov
push
lret
mov
rol
out
or
inc
ret
loopne
jecxz
or
or
loop
xor
mov
or
aam
fwait
xchg
lea
mov
mov
pop
mov
in
incl
lret
add
lret
jge
ret
push
mov
in
jne
cmpb
or
cwtl
cli
jbe
or
pop
test
les
add
sbb
mov
fidivs
pop
js
pop
sbb
adc
call
mov
add
add
fwait
insb
shll
fwait
pop
dec
roll
imul
jge
ss
inc
repz
xchg
ss
pop
or
pop
sbb
addl
jno
mov
xorb
inc
test
jmp
push
pusha
test
add
xorb
adc
push
cmp
mov
xchg
and
test
sarl
cmpb
outsl
fsubr
je
mov
adc
cmpl
enter
outsl
es
jmp
mov
mov
mov
push
mov
mov
or
add
mov
jnp
mov
sub
aas
jbe
mov
pop
mov
pop
movsl
imul
insl
sub
mov
sbbb
and
add
shl
adc
jns
jmp
fstpt
call
dec
stos
mov
lret
jnp
lods
add
xor
or
mov
dec
push
jbe
jb
addr16
jmp
pop
jnp
pop
andl
push
mov
pop
jo
sbb
jo
clc
and
lahf
test
mov
or
jb
loop
add
ret
add
pop
add
addl
mov
in
je
sbb
cmpl
inc
sbb
inc
stos
mov
xchg
cmp
dec
push
sbb
jmp
aaa
lahf
fidivl
aaa
push
adc
movb
dec
push
mov
enter
lea
sahf
mov
xchg
sbb
add
cmp
das
push
add
add
adc
push
mov
jb
jg
and
add
dec
inc
mov
movsb
loopne
push
sub
sbb
int3
sub
jl
and
and
jmp
xchg
stos
int
jp
push
sbb
daa
mov
mov
enter
mov
outsl
mov
pop
sbb
or
mov
jecxz
adc
mov
mov
pusha
mov
inc
xchg
call
xor
sbb
adc
pop
inc
or
cmp
adc
in
jns
ss
in
in
jl
cmp
jmp
jmp
mov
push
movsb
or
shl
adc
enter
inc
jl
sub
lcall
call
and
add
clc
add
clc
jno
or
add
add
icebp
or
adc
cmp
repz
sbb
add
sbbl
sti
xor
xchg
sub
aas
and
test
or
add
adc
jle
and
xor
lea
fldcw
popf
rol
test
jmp
push
fcoms
and
loop
or
nop
test
pop
xchg
jbe
imul
repz
pushl
xchg
xchg
in
xchg
and
push
ret
jno
add
add
bound
dec
adcl
jb
test
pop
push
and
rorl
xchg
jno
fisubrs
mov
push
jle
cmp
insb
in
imul
adc
xor
test
imul
in
push
mov
pop
and
sahf
push
mov
testb
mov
cmp
jb
sbb
fimull
xchg
mov
roll
int
lahf
mov
push
dec
add
fimuls
je
das
mov
jbe
in
and
inc
jmp
cmp
insb
loope
js
fadds
dec
andl
jecxz
fdivs
imulb
mov
pop
mov
fistps
or
je
dec
adc
push
roll
lea
jns
jle
inc
push
lea
push
lds
testl
imul
in
aas
mov
push
lcall
loope
in
rclb
addr16
aas
cmp
jmp
movb
mov
ret
jae
sub
loopne
pop
adc
cs
adc
ljmp
dec
mov
cmc
sub
das
test
mov
cmc
push
inc
push
aad
cmpsl
shrl
fstpt
fstpt
xchg
cwtl
loop
dec
dec
outsl
incb
loope
fiadds
pop
xor
ss
pop
mov
or
sti
enter
addb
call
jb
xor
dec
jg
push
add
xchg
jle
sub
xor
int
cltd
adcb
int3
add
shl
pop
or
add
add
cld
jb,pn
es
or
adc
cld
pop
insl
enter
cwtl
scas
sub
cmpsb
loopne
cmp
inc
nop
or
add
add
stos
cmp
sbb
add
push
pusha
lea
movsl
push
jmp
mov
xor
and
test
cmp
mov
mov
push
cmpl
cmpl
fs
adc
adc
dec
mov
mov
or
sub
sbb
or
sahf
clc
mov
mov
xchg
add
fucompp
xor
icebp
ret
fisttps
rorb
dec
adcb
xchg
sub
or
mov
stos
lds
add
mov
push
pop
pushl
jmp
pop
add
mov
fdivl
jle
out
cmp
dec
push
inc
sysret
clc
push
cld
mov
fcoml
mov
mov
inc
mov
add
push
testb
push
ss
aas
bnd
mov
in
mov
das
repnz
cmpb
ret
push
jae
inc
mov
lea
push
sub
sbb
mov
sub
stos
cs
inc
xor
push
add
dec
outsb
xchg
or
jmp
or
mov
cmc
imul
sbb
mov
test
push
rcl
std
add
push
cmp
jae
inc
jmp
push
or
pop
jecxz
mov
sti
sub
mov
stos
and
gs
ret
sub
std
out
test
add
pop
dec
fcom
cmp
out
sub
mov
mov
xchg
inc
into
or
int
pop
jne
and
sub
andb
mov
test
push
push
mov
xor
test
in
lods
pushf
and
inc
dec
xor
outsb
xor
add
lds
push
cmp
xchg
adc
push
pop
lods
sti
dec
rcrl
sbb
pop
in
pop
pop
leave
out
movsb
and
or
jl
mov
pop
or
dec
xor
mov
mov
lret
insl
dec
cmp
jae
jb
jns
mov
push
push
dec
dec
or
cmp
sub
jbe
sub
dec
jo
fisubrl
add
je
mov
test
sbb
adc
ja
cmpb
fisttpll
mov
lock
sbb
fisubrl
mov
xchg
lret
inc
mov
cmpb
fadds
cli
inc
add
data16
lods
mov
and
push
pop
push
inc
pusha
sti
sbb
adc
es
dec
rcl
fmull
adc
and
divb
mov
aaa
jmp
mov
adc
shlb
lea
or
adc
ret
add
dec
mov
pop
js
or
sbb
jbe
mov
mov
bound
or
cmp
roll
push
add
arpl
cmpsb
imul
xor
movb
rcrb
sub
insb
dec
andb
push
fistps
sbb
js
push
hlt
xor
cmp
lret
inc
sbb
mov
fldl
add
push
mull
xor
lahf
xor
cli
movsl
test
aam
mov
pop
sub
cmp
ja
lea
outsl
and
addr16
aaa
add
jmp
mov
shl
and
cli
decl
lret
lea
jl
mov
mov
mov
pop
ffree
scas
rorb
icebp
mov
mov
adc
jg
ret
jne
jmp
cmp
daa
js
lret
mov
arpl
add
aad
add
loope
dec
insl
sub
hlt
dec
mov
dec
mov
outsl
mov
test
adc
xor
sub
inc
sbb
pop
mov
shl
or
pop
fcmove
xorl
sub
sub
jne
lock
dec
lock
sub
aas
sbb
sarl
ret
clc
es
and
vmovsd
insb
dec
cmc
lods
mov
inc
add
comiss
jns
cmc
push
mov
mov
in
sub
enter
adc
mov
rcl
adc
and
or
imul
mov
jne
jle
sub
movsb
xorb
adc
jp
aam
push
mov
push
lock
or
cwtl
and
lock
test
push
pop
cmpsb
movl
push
add
lahf
aad
fsubl
mov
or
sbb
and
or
add
sbb
sub
xchg
fdivl
inc
lods
addr16
loopne
jne
loopne
jbe
push
hlt
adc
aas
xor
ljmp
push
push
jg
or
nopl
mov
push
adc
or
or
sarb
js
jne
and
shlb
je
and
inc
xor
sbb
popa
add
or
push
or
fcompl
bnd
jle
arpl
xchg
dec
add
and
or
and
lods
xor
std
xor
es
sub
les
rolb
aad
lods
xor
and
out
in
adc
xor
loope,pn
clc
jmp
mov
xchg
cmp
pop
dec
arpl
bound
loop
xor
fmulp
loope
add
cmp
ss
movsb
add
sub
cmp
mov
mov
jle
sbbl
mov
or
push
or
scas
pop
ret
mov
jecxz
cmp
jae
xlat
rol
mov
sub
sbb
adcb
sbb
sub
lock
push
pop
cmpl
les
cmc
push
inc
aam
sahf
push
test
push
fldt
cmpsb
ss
in
adc
push
mov
aas
and
stos
and
call
sti
cmp
arpl
push
push
xchg
in
lock
cmp
bound
bound
std
push
ret
xchg
pop
jmp
ret
jle
mov
aam
jo
dec
and
jmp
lea
jg
push
je
push
push
es
or
inc
loop
add
jnp
mov
pushf
int3
and
mov
jge
jbe
cwtl
pop
jnp
roll
pop
push
and
cmp
add
and
jo
cs
sbb
sub
add
cmpl
dec
adc
sti
mov
and
mov
xor
pop
lret
sbb
adc
mov
or
and
stos
jle
cmp
popa
cmp
lods
xorb
dec
push
lock
and
sbb
nop
imull
jle
dec
inc
lea
mov
mov
or
jge
push
fistpl
leave
lds
inc
ficompl
out
dec
jl
dec
sub
ret
scas
add
ljmp
or
fisubrs
sub
cmp
imul
fwait
icebp
mov
sub
pop
call
fisttps
push
push
cwtl
mov
add
sub
dec
shll
jnp
pop
xor
push
adc
sbb
pop
nop
jbe
lret
mov
pop
rcrb
sbbl
adc
sbb
xchg
mov
lock
jge
jp
add
andb
adc
lods
mov
sub
stc
jno
sub
xchg
xor
cmp
and
sahf
or
stos
call
adcl
jl
mov
outsl
xchg
and
jns
xchg
sbb
adc
or
rclb
mov
dec
sub
mov
sbb
inc
cmp
out
cwtl
push
lea
add
test
call
cmp
ret
xorl
mov
and
xchg
orl
nop
adc
add
cmp
shrb
push
sbb
sbb
add
shl
jmp
fcoml
sub
add
mov
bound
fbstp
add
inc
sbb
sub
call
mov
loope
inc
xor
arpl
addr16
das
shrb
and
cmp
push
sub
jmp
pop
aad
sub
stos
cmp
lahf
sub
scas
sbb
test
mov
adc
and
clc
push
mov
out
add
lods
or
jl
mov
shrb
call
mov
aaa
pushf
hlt
lret
bound
test
jle
adc
add
pop
lods
push
mov
and
out
mov
test
mov
roll
loopne
mov
shrb
xchg
stos
jecxz
lock
cltd
cmp
test
xchg
mov
sbb
sbb
jbe
adc
push
jns
adcb
cmp
cwtl
rcll
pop
fsubs
or
jmp
test
inc
pushf
mov
call
cltd
shrb
sbb
adc
jmp
inc
enter
dec
xor
dec
lea
inc
rclb
add
pop
sub
cmp
or
add
pop
mov
popf
mov
mull
inc
pushfw
mov
and
mov
cmpsb
lar
imul
jp
mov
mov
popf
push
mov
jbe
ss
pop
xor
mov
fld1
or
scas
inc
xchg
pushf
sub
shlb
dec
fists
push
ljmp
mov
mov
ret
les
ret
push
lea
pop
pop
ret
push
sub
sub
mov
push
je
clc
adc
sbb
add
dec
adc
xchg
fwait
cmp
mov
std
lods
ret
test
or
lock
popf
xor
je
jmp
lods
lret
inc
xchg
dec
daa
ret
mov
fs
or
rcrb
mov
inc
es
cmp
je
cmp
cmp
jl
jno
or
int3
jo
popf
jg
add
push
dec
ficompl
mov
adc
inc
adc
cmp
int
dec
je
daa
xor
inc
lea
cwtl
mov
cmpps
push
sar
xchg
movsb
xor
xor
sub
or
xchg
mov
sub
clc
cltd
je
xchg
push
mov
sub
lods
pop
fimuls
jo
scas
sti
or
ret
cmpl
jge
mov
das
mov
mov
or
aaa
int3
fmull
movsl
cmpsb
enter
cmpsb
imul
push
sbb
loopne
push
add
sub
xchg
or
push
and
sbb
adc
test
xchg
testb
adc
add
ja
shll
adc
cmp
sbb
in
dec
dec
and
sti
cvttps2pi
cmp
dec
cmpsb
add
imul
mov
push
push
leave
int3
mov
stos
movsl
and
mov
and
cmp
inc
sbb
or
mov
mov
leave
add
fs
adc
mov
repnz
sub
test
or
outsb
sbb
in
movsl
adc
add
loop
push
cmpb
ret
mov
nop
inc
and
notb
call
push
and
in
mov
pusha
push
push
jo
dec
adc
sti
xor
mov
out
aad
and
sub
mov
lea
sub
cmp
pop
dec
mov
inc
dec
sahf
cld
push
pop
xchg
dec
add
clc
jg
aam
enter
push
cmp
jb
mov
xor
adc
xchg
add
sub
mov
jmp
imul
sub
lret
dec
in
cmp
dec
cmp
sub
cmp
jo
add
rolb
xor
hlt
add
lock
pop
leave
je
inc
or
mov
inc
daa
pop
pop
rcrb
push
mulb
je,pn
push
outsb
rolb
inc
loop
jle
sub
sbb
ret
fs
jmp
xchg
cli
cs
mov
mov
in
mov
inc
mov
and
sbb
mov
xchg
aaa
ficomps
test
ljmp
adc
mov
in
jle
mov
or
ret
inc
adc
mov
pop
adc
clc
mov
test
sbb
js
xlat
or
sub
sti
or
or
or
sub
cwtl
call
mov
lahf
sbb
adc
mov
rolb
lea
and
inc
arpl
mov
dec
orl
repnz
push
arpl
orb
adc
call
cmp
dec
and
popf
outsb
pop
orb
movsl
loopne
or
fsubl
imul
test
fdivrl
movsl
sub
push
adc
je
nop
inc
or
or
loopne
lahf
sbb
mov
mov
push
jae
aad
mov
stos
add
hlt
inc
jne
dec
aaa
mov
jo
or
sbb
lock
and
adc
pushf
jecxz
sarb
fildl
xor
mov
xor
and
or
mov
arpl
mov
push
jmp
mov
sar
add
mov
cwtl
iret
test
cwtl
add
test
pop
xchg
or
push
insb
pop
test
daa
sbb
sbb
loopne
or
pop
or
xchg
add
jl
shld
scas
inc
inc
mov
jecxz
aas
xchg
addb
roll
les
jae
nop
ja
adc
es
adc
hlt
jmp
fwait
jg
data16
pop
mov
pop
mov
mov
push
sbb
loopne
inc
inc
sbb
sub
jmp
es
xor
jb
mov
sub
into
insb
mov
fsubl
push
add
mov
clc
dec
sub
xor
sub
xor
or
pop
xor
fstps
in
test
cmp
mov
jmp
out
and
stos
lods
lea
jne
insb
and
scas
push
mov
push
mov
add
push
cmp
lret
movsb
add
daa
xchg
xchg
pop
xor
xor
test
or
movsb
jb
cmp
inc
or
dec
push
fs
and
push
pop
cli
out
jp
sbb
mov
inc
call
les
int3
lods
pop
int3
inc
cs
jnp
adc
pop
push
or
sahf
fsubrl
dec
fmuls
div
das
data16
sbb
sahf
in
popa
cwtl
dec
movsb
enter
sarb
or
pop
push
dec
mov
lods
inc
jae
dec
sbb
cld
mov
push
xor
add
ror
enter
add
rolb
lock
or
xchg
jbe
adc
xorb
nop
mov
jnp
fs
nop
inc
push
cmp
inc
push
cmp
cmp
push
cmp
nop
sub
and
cmp
nop
inc
adc
or
mov
push
or
adc
lds
add
dec
fisttpll
subb
jne
sub
cld
push
jecxz
mov
xchg
adc
or
push
adcb
cmpsb
xor
fimull
pushf
or
or
push
mov
jmp
lea
dec
es
push
add
pop
mov
pusha
mov
and
xor
or
cld
pop
sub
add
add
ljmp
push
and
stos
xchg
nop
imul
push
sbbb
adc
xchg
lea
xor
ja
fs
or
mov
rclb
pop
sbb
inc
cs
push
sbb
cmp
ja
inc
push
pushl
push
insb
or
sbb
and
xor
jge
adc
loope
jo,pn
popa
ja
sbb
jg
outsb
movsb
ljmp
loopne
inc
or
imul
lea
xchg
adc
adc
pop
jo
loop
rclb
xchg
add
push
je
cmp
push
aad
mov
push
inc
push
dec
push
pop
add
daa
dec
es
or
add
sbb
jns
push
sub
addb
lods
mov
or
pop
cwtl
pusha
and
push
xchg
xchg
dec
xor
mov
push
mov
lcall
test
fwait
inc
out
push
insb
or
popf
push
rcrl
rol
cmp
xchg
mov
aam
imul
pop
lea
mov
out
add
daa
or
lods
mov
icebp
mov
add
out
xchg
test
hlt
ss
inc
cmp
xor
add
in
cld
push
pusha
push
pop
mov
cmp
lcall
and
add
xchg
pusha
js
mov
mov
lcall
repz
test
cld
or
fcoml
push
loop
push
les
negl
add
ret
cltd
pop
sbb
xchg
popa
jbe
adc
jecxz
std
hlt
insl
or
mov
xchg
fcmovb
mov
adc
dec
js
mov
push
dec
les
cmp
sti
xchg
das
data16
cltd
xor
push
mov
push
test
xchg
or
scas
mov
adc
sub
xchg
cmp
sub
lods
mov
les
ret
aam
cmpb
lock
add
movb
hlt
xor
pusha
sar
xchg
sahf
push
and
mov
sub
mov
insb
jns
cmp
inc
cld
sub
ret
sti
repz
je
call
push
cmp
jae
push
imul
jmp
mov
std
test
dec
pop
xchg
adc
sbb
add
sarb
mov
mov
dec
ret
addl
loopne
call
into
movl
xchg
push
insb
add
push
add
sbb
repz
enter
mov
xor
addb
adc
xchg
fxam
xchg
push
xchg
test
jns
and
or
pop
rcrb
fcomps
aam
mov
inc
dec
mov
aad
test
and
add
shrb
pop
shlb
imul
andl
fstpt
mov
jl
inc
jmp
loope
mov
rorb
lahf
mov
add
fdiv
pusha
push
cmpsl
aaa
or
movsb
cwtl
push
sub
cld
arpl
inc
xchg
or
stc
inc
sbb
mov
lds
push
bndstx
cmp
xor
or
jmp
leave
dec
mov
mov
decl
sub
cmp
loop
clc
orb
addps
test
pop
bnd
ja
jmp
cmc
dec
push
and
sbb
jp
addl
push
push
dec
dec
sbb
loopne
and
sub
xchg
sub
push
or
pop
sub
js
in
or
push
rcrb
call
xor
jg
rclb
sub
push
mov
addr16
cmp
pusha
imul
in
mov
ljmp
jnp
dec
cmp
aas
pop
mov
xor
jne
push
movsb
inc
movb
popa
add
popf
fcoms
or
lcall
sbb
jae
adc
and
dec
shrl
dec
leave
outsb
push
cwtl
daa
adc
adc
xor
adc
or
daa
pop
aas
push
inc
adc
or
or
or
push
mov
mov
loope
pusha
loopne
test
cmpsb
xor
push
xor
fdivrs
mov
and
fsubs
xchg
sub
leave
adc
or
repnz
aam
xchg
fdivrl
or
and
add
xor
shlb
outsb
or
mov
dec
outsl
sub
cs
mov
enter
cmp
outsb
jbe
scas
inc
fadds
or
mov
nop
jo
dec
mov
rcll
into
in
cmc
mov
sbb
push
mov
mov
pop
mov
xor
mov
lock
jg
jno
popa
pop
sbb
sub
cltd
stc
mov
orl
scas
lods
in
aad
fiadds
subb
rcrl
call
push
test
testl
mov
push
ficoms
das
js
rcll
and
sbb
das
pop
add
mov
inc
aaa
leave
inc
aam
mov
fpatan
xor
loope
pop
cmc
stos
or
mov
xor
ret
in
movsl
mov
add
call
iret
sbb
out
cmovnp
cmc
lods
sahf
sub
push
int
jns
jp
xor
fnstenv
or
mov
inc
mov
xor
jmp
enter
movsl
enter
xor
mov
imul
sbb
adc
lock
mov
std
subl
add
mov
test
out
add
nop
or
or
rolb
test
decb
xor
mov
adc
mov
mov
loopne
call
loop
mov
push
mov
dec
loope
push
jo
cld
pop
and
sbb
mov
sub
sub
push
add
mov
leave
xchg
pop
shlb
mov
jne
add
inc
rclb
out
aam
push
mov
sub
adc
movsb
add
pop
dec
or
sahf
loop
xor
cltd
adc
test
ret
rcrb
pop
enter
nop
testl
dec
shll
leave
in
call
movzbl
jmp
test
jnp
dec
repz
pop
push
enter
push
icebp
fs
inc
sub
and
inc
add
sub
push
clc
stc
cld
mov
and
adc
fsubrs
add
sahf
test
stos
or
push
add
dec
jne
jbe
push
or
push
pop
pop
and
push
or
pop
sub
and
inc
mov
xchg
lahf
push
fcoml
dec
rcrb
add
push
shlb
mov
push
push
push
add
dec
test
call
sub
inc
test
movsl
xchg
lods
ret
sub
jae
cltd
mov
push
call
jbe
mov
test
getsec
cmp
ss
gs
std
mov
aam
or
jmp
inc
into
sar
cmp
je
add
pop
out
add
rcrl
or
cmp
mov
ja
add
xor
jge
in
xor
jmp
je
ss
jbe
pop
and
push
lret
push
push
xchg
push
push
push
mov
hlt
pop
sub
mov
loope
mov
and
repz
mov
cmp
test
add
push
mov
stos
hlt
or
and
aas
sbb
or
cmp
and
je
mull
andl
js
sbb
add
pop
dec
test
cwtl
xorl
add
stc
push
xor
outsl
aaa
dec
sbb
mov
add
xchg
jp
add
orl
rcrb
cmp
add
inc
adc
cmp
jmp
mov
ret
jnp
loop
mov
dec
push
jle
jne
dec
adc
js
xor
push
aaa
xlat
xor
adc
fcom
lock
imul
jmp
mov
mov
test
inc
jbe
fistpl
pop
add
push
jmp
cmp
pop
add
cwtl
sbb
lds
jle
lea
cmc
ds
sbb
and
xor
push
insl
dec
xor
mov
xor
cmp
or
inc
lods
sub
mov
in
mov
dec
xchg
or
adc
dec
mov
in
mov
add
push
add
mov
or
mov
ja
push
imul
and
sub
mov
or
inc
or
inc
mov
icebp
insb
or
and
pop
mov
cmp
testb
cmp
pop
and
mov
push
xor
push
outsb
adc
push
mov
sahf
leave
sub
int3
and
jecxz
adc
pop
pop
popf
sub
inc
add
rclb
sbb
jecxz
add
in
mov
inc
adc
mov
and
or
adc
jae
pop
sub
pop
faddl
cmp
je
mov
mov
add
adc
fsubrs
mov
ds
push
dec
pop
and
mov
aas
cld
out
xchg
sbb
xchg
push
jl
rclb
dec
sub
or
mov
add
shll
push
push
lret
xor
pusha
cmp
gs
pop
push
dec
push
jns
xor
sub
js
jb
mov
jb
test
jne
or
imul
and
inc
outsl
insl
cmp
push
sub
inc
movb
movsl
cltd
data16
adc
xchg
push
inc
test
sub
dec
sbb
ret
push
ret
les
pop
xor
cmp
jae
add
jl
add
push
inc
in
lret
xchg
dec
sub
pusha
rorb
add
lret
mov
pop
pop
sub
fistps
in
popa
leave
cmpb
dec
push
xor
je
fs
cmp
loop
push
adc
mov
dec
sbb
rcrb
push
ds
and
insb
sbbl
or
adc
jne
push
mov
mov
adc
test
insb
push
pushl
add
daa
adc
xor
adc
mov
push
iret
inc
arpl
loopne
inc
sbb
mov
movsl
pop
mov
gs
inc
dec
adc
js
jnp
ds
mov
cmp
add
inc
inc
mov
jg
push
or
lea
mov
sbb
aam
push
mov
mov
faddl
sbb
or
push
int3
push
xchg
push
xor
xchg
stos
or
inc
test
test
push
or
xor
inc
xor
cmpsb
mov
loopne
xor
xor
adc
rclb
sbb
pop
push
and
rolb
inc
aas
fnstsw
or
jne
hlt
shlb
mov
xchg
jbe
push
leave
add
mov
and
loopne
push
ficoml
stc
cmpsl
cmpb
or
lret
andl
mov
jb
or
gs
and
or
fisubrl
fdivr
or
js
jne
cltd
pandn
jge
loopne
sbb
mov
pop
inc
pushf
jle
ss
push
jle
js
jmp
push
mov
lahf
test
cmp
in
mov
add
mov
insb
je
jae
lret
inc
lea
daa
and
push
sub
cmp
pop
inc
decl
xchg
xchg
aam
bound
cmp
loop
or
add
call
sbb
dec
subb
shrb
add
lds
bound
jle
pop
or
inc
lret
sub
pop
jne
js
cmp
addr16
popa
or
jne
cmpl
mov
adc
xchg
push
or
jl
pushl
inc
push
lods
adc
mov
push
and
or
fisttps
and
mov
or
aas
sbb
test
pop
dec
rclb
adc
inc
incl
pop
xor
jns
daa
add
dec
adc
and
fildll
push
push
sbb
or
ficoms
movsb
xor
pusha
pop
pop
cli
rclb
mov
out
adc
inc
sub
pop
in
in
push
xor
cwtl
xchg
push
and
nopl
sub
test
add
adc
test
inc
inc
add
pushf
cmp
dec
movsb
shlb
mov
pop
subb
cmpsb
inc
fmuls
addb
jo
imul
jo
adc
adc
adc
cmp
movl
jnp
jmp
mov
sub
jne
add
out
jb
out
adc
cld
pop
mov
cmp
push
imul
sbb
adc
shll
sbb
enter
push
bound
nop
sbb
cltd
mov
iret
jecxz
sbb
mov
dec
es
xlat
fnstcw
jb
and
mov
lods
and
mov
or
add
mov
movsl
and
xchg
popa
decl
rcrb
mov
aad
mov
xor
cmp
dec
out
inc
push
xchg
faddl
ja
mov
jnp
lds
mov
lahf
or
sub
jnp
mov
xor
add
rorl
adc
jmp
pop
sbb
addr16
pusha
test
sub
jmp
and
aad
test
adc
and
test
add
movsl
xchg
sbb
cmp
stc
cs
out
add
scas
jge
cmpl
push
adc
and
sbb
xchg
insl
dec
sbb
sub
pop
inc
add
paddusb
mov
in
notl
mov
jnp
test
nop
mov
push
mov
bound
fldl
sarb
inc
jo
cmpb
shr
add
movsb
and
sub
cs
loope
or
xchg
iret
insl
test
jb
mov
or
xchg
imul
lds
out
f2xm1
add
leave
out
mov
cmp
adc
fisttps
mov
cmpsl
xor
or
mov
mov
ret
and
xchg
pop
mov
vmread
into
cmpl
mov
mov
push
test
mov
mov
test
addb
jae
fs
pop
icebp
xor
in
dec
in
adc
adc
jl
mov
shrb
sbb
cmpl
lret
or
in
mov
push
lret
jl
movsb
jb
pop
pop
push
push
repnz
and
test
orb
outsl
xchg
sub
jl
sbb
lcall
cltd
push
lds
cld
and
jb
jle
cmp
jno
adc
sbb
push
mov
fsubrs
mov
push
jb
and
adc
push
sbb
mov
cmp
and
rclb
aaa
fst
pop
dec
dec
sahf
and
sub
add
xlat
and
sub
dec
sbb
xchg
xor
lret
lea
in
pop
xor
cli
repz
int3
push
aas
jne
mov
adc
sub
sbb
xchg
cmc
add
xor
sbb
mov
cli
pop
mov
and
pop
leave
or
xchg
add
and
out
inc
add
jbe
scas
adcb
ja
stos
add
hlt
dec
jl
das
scas
rcl
call
lret
or
xchg
dec
js
mov
jne
jecxz
push
mov
jo
adc
add
fwait
jo
inc
clc
xchg
inc
push
mov
stos
sub
pop
outsl
nop
add
leave
or
pushf
push
sarl
out
mov
mov
dec
mov
push
cmp
push
push
push
mov
movsb
mov
adc
dec
sbb
call
sub
inc
loope
ret
jo
jl
mov
je
sbb
sbb
ret
cmp
mov
movsl
mov
aad
loope
pop
js
lret
stos
push
xchg
and
aad
and
jl
xlat
push
jp
and
rorb
push
fisttpl
adc
js
iret
fsubp
and
sub
pop
mov
enter
mov
or
mov
dec
mov
lret
or
or
pop
mov
add
mov
pop
or
lret
and
inc
push
loop
test
xchg
cmpsl
sbb
enter
repz
push
rorl
cmp
fcoms
mov
pop
in
adc
int3
cltd
insl
enter
loopne
call
xor
pusha
inc
lock
je
pop
stc
inc
loope
mov
adc
cmp
cmp
push
cwtl
insl
enter
enter
mov
sbb
jae
jo
aam
sbb
add
gs
test
add
mov
xor
sbb
xchg
or
sbb
lahf
fbstp
add
xor
and
popf
fnstenv
cwtl
adc
subb
jmp
push
out
inc
mov
pop
ret
fs
jo
mov
sub
and
mov
jbe
je
mov
jl
es
cmpsb
sbb
in
les
xor
xlat
js,pn
adcb
pop
cmp
pop
adc
cmp
inc
cmpsb
jo
pop
push
inc
cmp
push
nop
mov
or
fs
rcrb
or
lock
cmp
arpl
daa
and
pop
sub
bound
adc
jb
dec
adc
data16
outsl
pop
jmp
push
sbb
dec
add
pop
sub
inc
cmp
cmpsb
and
and
fisubrs
jmp
mov
dec
ljmp
xorb
and
fcomps
fisubl
or
fwait
or
stc
inc
xchg
or
es
cmp
jno
cmp
pop
mov
or
xor
or
les
xchg
xchg
jg
adc
rcll
and
xor
nop
seto
test
psubw
in
movsb
adc
mov
xchg
push
pop
lret
les
das
and
xchg
out
sub
pop
in
mov
push
sub
testl
mov
pop
xor
movsb
sbb
std
in
mov
sub
aad
cmp
pop
mov
leave
adc
mov
rcrl
cmp
or
xor
cmp
xor
scas
rolb
hlt
mov
cs
xchg
fwait
dec
das
xchg
xor
xlat
sbb
cld
push
push
sub
lea
shlb
pop
lock
mov
jbe
test
sub
push
pop
jb
pop
dec
inc
insb
loope
daa
movsb
pop
mov
xor
out
xor
daa
inc
popa
rclb
icebp
or
xor
cmp
out
daa
es
orb
xor
sbb
cwtl
mov
or
pop
cmpsl
adc
shrl
sub
in
mov
ss
xchg
xor
and
pop
add
hlt
jl
push
cmp
and
cwtl
inc
stc
jmp
jb
xor
repz
push
mov
enter
or
xchg
aaa
sbb
push
mov
mov
mov
loop
call
add
pusha
arpl
popf
cmp
enter
cmp
sbb
vpmacssww
push
dec
adc
sbb
nop
xchg
add
xor
loop
es
adc
mov
rclb
mov
cmp
test
push
lret
or
fistps
cmp
inc
mov
pop
sbb
adc
out
and
xchg
iret
or
sbb
sub
cmp
xor
push
and
and
lahf
add
jno
shll
notl
mov
and
ficompl
or
movb
ljmp
pushf
mov
sub
iret
cmp
subl
ja
sub
leave
inc
jns
push
sbb
adc
add
call
mov
xor
jmp
test
add
add
and
add
incb
xchg
inc
inc
sub
sarl
xchg
xor
jl
js
mov
push
push
lea
and
push
jge
aaa
sbb
inc
inc
rorb
adc
pop
repnz
pop
inc
in
or
dec
xchg
cs
push
pop
push
mov
cmpsb
push
push
adc
dec
dec
sahf
pushf
and
sub
lcall
lds
bound
sbb
mov
decb
mov
inc
push
lods
or
mov
pop
ds
and
and
pop
mov
inc
push
data16
xor
ljmp
xor
xchg
mov
push
mov
cli
test
popa
or
push
imul
jp
mov
and
add
roll
xchg
aaa
test
test
jne
and
lds
aas
aaa
add
cmp
pop
and
push
add
push
pushl
aaa
pushl
test
in
sub
sarb
dec
mov
xchg
imul
sub
imul
daa
das
fucomp
add
lods
push
cmovge
mov
movsb
pop
cmp
adc
add
pop
pop
das
cmc
lods
adc
inc
pop
rcll
and
and
sbb
pop
adc
enter
addr16
daa
add
pop
or
sub
sbb
push
or
and
dec
pop
add
or
scas
and
addl
data16
jae
mov
push
addb
inc
ficompl
ss
mov
push
fdivrs
and
rorb
andb
les
push
or
inc
adc
pusha
nop
fs
and
imul
lods
cltd
loope
xchg
adc
dec
inc
push
cld
adc
mov
shrl
sub
adc
push
stos
or
bound
rcrb
push
xchg
addr16
push
or
sbb
jmp
lods
xor
adcl
jae
fdivr
loopne
pop
xchg
mov
enter
sbb
fdivrl
sbbb
test
sub
cs
rdmsr
sbb
push
sbb
sub
sub
mov
or
mov
or
mov
repnz
add
cmp
movsl
push
pop
fcoml
sbb
and
mov
fsubs
or
sub
insb
jecxz
subb
sub
sub
call
sub
push
lods
push
cmp
imul
jbe
or
fs
mov
or
ficoml
push
rcll
lahf
aad
dec
out
add
or
pop
mov
or
inc
or
rolb
adc
lea
cmpsb
and
cmp
stos
popa
sub
inc
orl
rcll
pop
loopne
cmpsl
ret
inc
add
repnz
xor
lock
or
ss
dec
mov
les
xor
aaa
mov
ss
std
cmp
popa
lret
mov
add
cmp
cwtl
mov
cmp
cmp
pushf
adc
ret
shl
sbb
add
jae
push
pop
add
std
cmp
inc
push
jbe
jmp
sbb
in
push
in
mov
push
xor
cmp
or
dec
pop
add
leave
and
pusha
xchg
push
or
leave
mov
lret
fwait
shrl
xor
push
push
adc
or
pop
push
das
mov
xchg
int
ja
push
ds
jmp
dec
or
inc
push
dec
or
inc
out
hlt
pop
push
sub
mov
adc
ret
pop
cmp
xchg
jl
inc
push
xchg
xchg
sbb
pop
insl
jae
lea
jne
popa
in
dec
sbb
mov
addr16
jb
xor
inc
insl
push
icebp
movsl
add
cltd
adc
out
imul
andb
shll
push
xchg
and
jp
int3
adcl
mov
icebp
cmc
lods
xchg
cmp
jno
pop
jle
add
andl
mov
xchg
fldt
adc
ffree
push
mov
jb
mov
lret
xchg
dec
dec
daa
xchg
mov
mov
xor
pop
test
and
lods
outsb
xor
rcrl
pushf
ss
mov
cld
or
xor
pop
packssdw
xor
cmp
rcrb
dec
inc
pop
orb
jae
push
sub
dec
test
enter
sub
dec
and
lds
mov
and
popf
fiaddl
fistpl
out
loope
xchg
outsb
mov
movsl
bswap
iret
sbb
je
jns
sub
in
hlt
jle
sub
jne
sbb
jecxz
ljmp
cmp
in
cmpsl
push
and
push
adc
and
jbe
sub
movsb
cmp
and
push
mov
add
aam
pop
push
out
cld
pop
mov
cmpb
aam
lock
and
enter
sbb
xor
dec
loope
lods
std
icebp
mov
xchg
push
lea
aaa
sbb
in
in
push
test
test
adc
adc
out
inc
int3
sahf
cmp
lcall
shlb
shrb
orl
fcom
mov
lea
test
or
mov
fs
push
mov
js
add
add
adc
aam
add
dec
adc
adc
push
mov
movl
push
sub
jp
mov
jnp
inc
dec
jmp
test
jl
cmp
and
push
shlb
push
dec
push
js
pop
sbb
cmpsb
dec
push
lods
xor
xor
mov
mov
sub
xlat
movsb
xchg
jp
pop
call
insl
out
test
jae
xchg
cmpl
xor
in
inc
movsb
jbe
xor
mov
iret
sysenter
add
or
push
aam
lock
cld
adc
jo
add
push
mov
fdivrs
jg
jmp
adc
and
push
mov
out
or
push
cmp
arpl
fisubrl
out
mov
enter
js
addl
adc
mov
xor
cltd
in
dec
dec
dec
cmp
adc
jp
call
or
pop
push
shlb
inc
lods
pop
stos
and
hlt
bound
adc
adc
add
push
and
out
pop
test
push
mov
dec
add
adc
push
add
mov
add
dec
pop
loope
stos
ficompl
xchg
add
cmc
arpl
cltd
pop
jge
sahf
jne
popf
stos
lock
addr16
in
xor
adc
call
sub
pop
das
add
and
aam
xor
lahf
sbb
insb
bound
xchg
sbb
lret
dec
xchg
scas
and
mov
inc
inc
sub
or
adc
je
push
mov
or
adc
add
popf
jbe
loopne
adc
fdivl
sahf
or
pop
pop
sub
adc
mov
enter
add
push
outsl
movsb
mov
mov
sbb
add
cmp
push
shlb
xor
ds
dec
mov
sub
dec
inc
push
sbb
cmc
mov
add
jae
sbb
add
pop
push
movsl
or
pusha
add
jo
pop
xchg
call
fstps
mov
mov
lcall
or
add
xor
adc
sub
lock
andb
push
and
mov
ljmp
loopne
xor
loopne
test
pop
inc
pop
jnp
add
cmp
daa
fs
dec
mov
xor
cs
cmpl
sub
push
inc
mov
add
inc
popl
cmp
inc
xor
xchg
hlt
dec
xor
movl
leave
in
adc
push
imul
jne
xlat
mov
dec
insb
sub
inc
lcall
jo
sahf
popf
scas
mov
lea
add
mov
and
mov
dec
dec
nop
dec
rcrl
pop
add
loopne
or
push
jo
mov
fisttpll
incb
movsl
mov
jmp
sbb
xchg
sbb
rclb
cs
mov
xchg
push
push
shr
inc
push
jmp
xchg
and
push
xchg
mov
push
inc
jnp
sub
jmp
into
inc
push
mov
hlt
popa
cmp
cli
mov
mov
arpl
scas
add
repnz
pop
test
arpl
cwtl
pop
cld
shll
jno
test
adc
mov
and
push
mov
xor
add
add
sbb
mov
loopne
movsl
mov
mov
and
out
mov
sbb
add
inc
insl
mov
mov
ror
and
int3
cmp
enter
xor
inc
lods
push
xchg
pop
push
cmp
std
js
add
adc
mov
jp
aam
pop
arpl
and
fsubrp
push
sub
jg
dec
add
adc
add
outsb
mov
outsb
subl
jne
pop
out
aaa
sbb
in
and
repz
jmp
je
cmp
je
cmp
je
cmp
je
push
inc
cmp
mov
imul
adcb
inc
iret
fidivrs
sbb
or
pop
inc
pop
pop
pcmpgtw
loopne
pop
jl
je
and
inc
cmpsl
xchg
mov
inc
js
push
push
mov
mov
mov
xchg
fs
cmp
stc
adc
xor
cwtl
xor
lock
iret
pop
in
loopne
xchg
inc
inc
ficomps
int3
adc
push
rcrb
outsb
inc
enter
xor
sbb
add
lea
or
inc
dec
loopne
sbb
push
icebp
leave
imul
loopne
sub
mov
mov
jp
sbb
aad
adc
ret
jge
icebp
add
sub
cld
sub
dec
xor
shl
insl
loopne
arpl
mov
addb
sbb
mov
dec
popa
pop
pop
add
dec
hlt
incb
xchg
hlt
sbbl
popf
xor
mov
add
shlb
fsubrl
rolb
jecxz
iret
addb
imul
and
add
arpl
nop
clc
pop
fucom
nop
and
sub
and
push
ret
dec
add
fcmovnu
movsl
dec
adcb
decl
fisubrs
add
icebp
adc
inc
out
push
outsl
pop
es
orb
adc
dec
pop
jb
movsl
into
push
pushl
push
in
push
add
fnstsw
add
xchg
xor
push
xchg
rclb
aad
dec
xchg
jb
test
dec
sub
pop
enter
sub
xchg
and
xor
xchg
sbb
hlt
daa
loopne
pop
or
test
pop
sbb
ds
inc
mov
adc
or
or
add
test
insb
lods
addr16
add
pop
loope
insl
gs
psrld
daa
jne
mov
inc
add
xchg
mov
fwait
js
and
xchg
inc
imul
inc
sub
sbb
into
push
and
mov
xchg
negl
flds
inc
addl
dec
mov
testb
xor
test
jp
mov
enter
sarb
adc
xor
clc
dec
aam
mov
cmp
je
sub
mov
mov
xor
stc
loop
mov
or
fadds
mov
mov
jle
pop
xchg
inc
addb
rclb
add
mov
jbe
ds
js
sbb
mov
push
push
int3
or
dec
fnstsw
cmp
mov
adc
adc
xor
and
push
mov
adc
add
and
dec
sub
jne
or
and
mov
cmp
mov
push
rcrb
arpl
add
inc
cmp
dec
cmp
ljmp
inc
hlt
rorb
xchg
mov
or
or
or
or
xor
xchg
xchg
cmp
loopne
mov
mov
decl
movsl
add
mov
out
push
push
or
mov
inc
pusha
xchg
push
mov
push
mov
xor
adc
pusha
and
clc
mov
sub
sub
test
testb
pop
sbb
sar
movsb
push
incl
clc
push
add
jo
adc
jmp
sbb
inc
insl
and
pop
or
pop
aad
push
lahf
and
cmp
dec
in
jne
cmp
jne
add
test
jmp
ficoml
mov
movsl
adc
arpl
push
jmp
push
pop
mov
inc
inc
stos
xchg
push
lea
shrl
test
test
or
in
ret
orb
cli
or
pushl
sti
movsb
xor
mov
adc
sbb
or
lret
jmp
pop
lcall
cmc
adc
cli
jmp
or
push
xchg
mov
or
inc
mov
jecxz
add
inc
dec
add
mov
adcb
sbb
push
clc
adc
jbe
out
cmp
adc
jno
bnd
loope
sbb
decl
xor
insb
dec
mov
ds
mov
cmp
jb
cmp
sti
scas
sti
or
adcb
push
inc
jne
pop
mov
sub
jo
or
jnp
cmc
lock
repz
push
inc
test
inc
cmp
shrb
add
inc
inc
jl
add
inc
xor
xorl
pop
aas
jns
test
mov
push
ret
push
test
push
pop
lcall
test
mov
btcl
push
lock
fisttpll
sub
sbb
ljmp
push
lea
adc
add
mov
sbb
dec
push
adc
mov
push
popf
mov
push
mov
and
nop
jp
lds
sbb
xchg
out
sbb
mov
jno
mov
push
imul
add
xor
xchg
ds
mov
dec
or
jecxz
pop
pop
repnz
sbb
arpl
add
and
repz
les
mov
sbb
andb
add
aam
jge
add
jmp
push
add
cmp
xor
push
push
pop
leave
push
fldenv
push
notl
stc
outsb
sbb
imul
dec
inc
sbb
rcrb
xchg
std
pop
test
mov
dec
mov
sbb
dec
sbb
sub
push
fdivs
lock
dec
fadds
sub
ret
add
push
inc
adc
in
xchg
sahf
and
cmp
movsb
mov
inc
push
dec
xor
rcrb
int3
imul
xor
push
mov
test
sbb
aas
imul
test
adc
adc
ss
fiadds
xor
lahf
call
add
mov
lds
loop
call
ja
es
push
in
add
add
inc
gs
cmp
cmp
aas
mov
xchg
pop
dec
inc
dec
or
stos
test
and
sbb
rcrb
pop
mov
cwtl
lcall
pop
or
lods
mov
in
xchg
fwait
cmp
inc
jp
sub
and
sub
adc
mov
sub
insb
and
add
movsl
or
add
mov
cs
movzwl
or
je
mov
sbb
adc
pushf
adc
adc
push
push
sub
add
jo
xchg
fstps
les
pusha
jo
dec
or
cmp
out
iret
xchg
xchg
int3
hlt
or
dec
sarb
daa
cmp
sub
inc
push
loope
fdivs
push
push
fstl
inc
adc
cmp
out
cmp
test
jl
sub
xchg
call
jns
push
sahf
sub
lock
mov
bound
jbe
cs
or
push
lock
or
pop
ret
and
lods
jge
fiaddl
loopne
in
rolb
ret
and
add
movl
jge
sbb
dec
je
dec
daa
adc
cmp
mov
sub
jo
jle
and
rorl
sbb
add
and
adc
lock
mov
lods
and
aam
lods
test
add
sub
pop
cltd
or
in
or
aas
rcll
test
lock
orl
or
aam
nop
jns
adc
bound
xorb
dec
push
push
push
sub
dec
xor
dec
pop
jne
enter
test
testl
mov
out
lods
and
sbb
mov
inc
mov
and
mov
xor
mov
pop
mov
or
mov
sti
xor
pop
inc
adc
pop
enter
lret
inc
fimuls
jecxz
adc
cmp
mov
pop
addb
sbb
rcl
pop
jmp
pop
cmp
adc
or
adc
inc
pop
je
or
cs
repz
sbb
or
pop
pop
repnz
sbb
in
sub
pushf
adc
mov
aas
and
mov
and
xchg
scas
les
inc
xchg
cmp
push
inc
sub
add
jle
sub
aaa
and
out
in
out
ret
mov
adc
mov
push
xchg
adc
lret
add
dec
shr
out
or
mov
xor
and
subb
add
dec
xor
test
xor
dec
es
into
clc
adc
push
dec
mov
in
jecxz
xor
in
inc
rcl
add
loopne
and
stos
scas
fadds
mov
std
call
es
sar
ss
popf
sbb
mov
add
push
test
sub
dec
jb
or
fistpll
xchg
hlt
mov
rcll
in
mov
sti
xchg
and
aam
mov
add
and
push
movsl
es
fyl2xp1
loopne
nop
out
push
push
test
in
call
cltd
cwtl
loopne
adc
xor
sbb
test
push
push
push
loop
cld
sbb
enter
push
lock
jmp
dec
sub
add
stos
test
mov
xor
pushf
data16
int
mov
and
inc
mov
add
inc
add
shlb
out
pusha
sbb
mov
pop
sub
cmp
pop
das
jmp
out
movsb
fsts
push
pusha
ss
fs
and
fs
sub
mov
sbbb
push
mov
adc
pop
add
pop
pop
cmp
adc
popa
lea
or
addr16
out
sbb
jae
mov
inc
imul
sbb
push
imul
push
rcl
xchg
arpl
sub
jae
aaa
adc
sub
pop
inc
sti
ja
dec
sub
pusha
sub
sub
repnz
sbb
sub
jns
aam
ja
adc
sub
mov
rorl
inc
out
mov
jge
pop
sub
aaa
insb
jle
pop
stos
sub
hlt
add
add
push
popl
test
neg
pop
fildl
xchg
loopne
lods
xchg
fs
cs
xor
push
loopne
aam
inc
pop
mov
lea
xor
push
movb
pop
or
cmpsl
push
xorl
aam
cli
or
jge
dec
gs
jns
pop
add
mov
ljmp
in
push
xchg
gs
dec
clc
ds
mov
pusha
popf
mov
jecxz
pop
lcall
adc
lret
push
paddusb
cmp
call
mov
sbb
xor
push
xor
fmuls
scas
add
jg
je
jne
test
sbb
lea
pop
les
jmp
push
xchg
test
jnp
bound
add
adc
lret
mov
xchg
lods
cwtl
mov
add
cmpb
inc
ficomps
sub
and
add
negl
inc
clc
movb
push
mov
aas
xchg
sub
cmp
pop
jl
pop
je
push
cwtl
rcll
push
pop
in
adc
inc
fdivl
mov
ficoml
cmp
lret
pop
adc
xchg
push
ljmp
nop
cmpsb
call
test
cmp
inc
dec
push
mov
ret
pop
sbb
aad
dec
lea
insb
mov
push
pop
pop
inc
jne
cmp
int
and
jecxz
push
sti
sbb
mov
clc
or
pop
mov
test
ret
ret
test
hlt
out
jnp
roll
or
rcrl
sbb
inc
inc
je
pop
or
dec
adc
movsl
lock
xor
rolb
xchg
pop
cmpsb
pushf
push
push
or
sub
push
rorl
or
andb
add
add
xor
and
jmp
mov
jo
jne
xor
inc
lret
out
xchg
mov
stos
push
mov
js
enter
mov
cmp
jns
mov
sbb
jmp
or
es
les
cmp
cmpsb
push
pop
popa
lret
mov
and
xor
or
xor
cmp
je
idivl
mov
mov
pop
mov
xor
test
mov
dec
cld
push
jge
or
mov
jne
xchg
enter
rclb
gs
test
test
leave
pop
inc
ret
push
pop
cmp
pop
repnz
or
adc
test
lods
mov
test
or
sub
add
sbb
or
das
nop
fcoml
inc
imul
fsubs
popa
jle
in
push
mov
adc
andl
sub
sbb
adc
adc
inc
xchg
adcb
loope
pop
aad
sub
aad
call
add
fstp
ret
push
fwait
mov
lock
adcb
sub
int
push
or
jne
dec
dec
sbb
test
ficompl
addr16
inc
mov
jl
cmp
mov
jg
adc
sbb
lods
add
jp
push
xchg
jg
jg
mov
jmp
mov
add
mov
and
ret
aad
cwtl
outsl
cmp
enter
int3
pop
push
ret
jl
or
push
leave
and
or
add
adc
bound
arpl
cmp
adc
dec
add
push
shll
sub
mov
enter
jb
pop
push
stos
adc
mov
ret
inc
mov
or
ficomps
mov
xchg
mov
cmp
push
test
mov
cmc
pop
cwtl
and
into
jl
or
mov
loope
shrb
push
dec
inc
and
push
addb
pop
int3
push
fisubl
jo
pop
cld
repnz
xchg
and
test
sbb
pop
lods
inc
divl
or
stos
push
sub
xorb
push
xchg
fimuls
in
xor
cmpsl
mov
jo
inc
filds
xor
and
pop
add
cmpl
jmp
inc
add
arpl
push
cmp
insb
icebp
mov
mov
mov
leave
ret
out
pop
push
mov
lcall
sbb
enter
dec
adc
jne,pt
cmpl
iret
or
js
inc
jecxz
lock
xchg
popa
pop
les
in
shlb
push
es
clc
and
jno
mov
sbb
lods
mov
or
iret
int3
cmpb
test
mov
add
scas
add
test
adc
je
jl
jl
stos
or
int3
add
dec
mov
xor
sbb
cmp
test
and
pop
and
lret
ja
or
jecxz
sbb
rcrb
fcom
rol
add
mov
push
add
xchg
inc
imul
cmp
fs
mov
xor
mov
jo
mov
sub
mov
idivb
lahf
popf
in
pusha
pop
pop
mov
cmp
je
jmp
outsb
inc
adc
sub
popa
mov
and
ss
jle
sub
push
mov
in
call
dec
inc
dec
ret
sbb
and
or
add
xlat
add
add
lret
adcb
lret
push
xor
push
pusha
push
int3
mov
xchg
pop
xor
xor
std
xor
into
or
inc
jl
ja
or
push
movsb
je
adc
insl
mov
sub
call
xchg
and
in
loopne
sbb
or
testb
jne
hlt
or
push
rorb
pop
das
add
aam
inc
push
pop
in
dec
sarb
jne
pop
in
xchg
push
jl
push
lock
addr16
push
pop
or
xor
es
add
jno
test
push
add
out
sbbl
push
push
adc
mov
dec
insl
ljmp
in
sub
loopne
push
mov
mov
mov
sbb
mov
mov
dec
inc
pusha
std
dec
cmpsb
mov
jl
subl
je
or
adc
xchg
push
and
lcall
inc
lods
inc
je
jo
push
ret
call
xor
dec
jb
mov
outsb
add
push
mov
sbb
jecxz
aam
cli
and
mov
lds
push
xor
lock
sti
and
repnz
inc
sbb
add
cmpl
and
xchg
or
inc
mov
and
xchg
icebp
or
cmp
das
fisubrs
lock
sub
push
mov
cmp
mov
dec
add
inc
or
mov
cwtl
nop
cmpsb
cwtl
sub
scas
lahf
or
add
popf
sarb
add
imul
sub
je
pop
ss
pop
movsl
cmp
adc
add
xchg
and
mov
push
push
les
push
adc
notb
movsb
pop
mov
ret
ror
pushf
mov
push
and
cmpsl
jge
int
fst
or
push
rorl
adc
inc
dec
rcrb
push
jmp
sub
dec
ret
push
push
fsubr
in
dec
aad
add
push
push
inc
cmp
aam
jne
call
cmp
cld
sub
testl
mov
add
ljmp
add
pop
mov
add
xchg
out
push
sbb
jge
mov
bound
cmpsb
sub
rorb
pop
inc
push
jb
jne
or
jmp
cmp
movsl
pop
adc
push
pop
cmp
mov
inc
enter
xor
mov
sub
push
fcompl
loop
cld
fmull
mov
xchg
bound
push
pop
xor
pop
int3
test
rol
sbb
adc
inc
add
add
push
pop
inc
pop
and
add
add
jmp
add
mov
cmp
leave
movb
adc
jl
test
and
or
mov
adc
adc
add
cmp
jbe
mov
scas
scas
faddl
pop
sbb
mov
add
movsb
pop
mov
add
pop
ret
clts
adc
pop
lods
in
flds
xor
push
xchg
aad
sbb
mov
cmp
ret
or
push
mov
stos
xchg
push
dec
inc
push
sbb
pusha
add
add
mov
adc
sbb
mov
cmp
adc
jp
sahf
or
inc
adc
pop
cmp
push
cmp
fimull
sbb
push
ret
shrb
sbb
adc
xorb
inc
mov
cmpsb
push
imul
xor
push
sub
repnz
nop
sbb
les
ljmp
nop
loopne
lock
aam
add
jne
pop
inc
lret
mov
out
cmpb
mov
mov
xor
test
cmp
jb
sbb
jl
adc
jae
push
add
push
rolb
test
and
pushf
repnz
inc
cmpsl
imul
cld
inc
xor
lahf
add
mov
lahf
inc
pop
jge
push
sub
mov
jg
mov
fdivs
sub
sbb
or
xchg
sub
fmul
pusha
cmp
cmp
movsl
cmp
push
jbe
nop
xchg
mov
jmp
or
mov
mov
mov
sbb
add
add
out
sbb
cmp
popf
je
pop
xor
in
add
loope
mov
xor
dec
jmp
mov
leave
add
sbb
pop
js
xchg
adc
adc
stos
push
in
xchg
push
push
add
dec
inc
popf
mov
dec
shll
push
insb
lock
push
or
cmp
pop
push
sbb
inc
push
mov
pop
mov
jmp
sbb
bound
mov
scas
sub
add
pusha
push
clc
xor
addr16
adc
mov
xor
scas
and
or
subl
xor
add
aam
add
lock
popf
jmp
add
fnsave
lahf
popf
jae
inc
in
push
xchg
push
adc
ficompl
pop
push
shrb
push
hlt
mov
add
call
sbb
add
mov
ret
in
test
cmp
inc
or
jae
jl
add
jae
arpl
sahf
out
dec
push
je
inc
lret
repz
cmp
or
in
insb
jne
or
cmp
push
push
mov
inc
sbb
cmp
mov
add
mov
popf
pop
call
sub
cmp
pop
shrb
mov
mov
or
or
jo
sub
test
nop
icebp
sbb
movsl
cmp
add
xchg
sub
sbb
add
loope
xchg
xchg
jmp
push
iret
dec
sub
pop
xchg
pop
loop
lcall
pop
lea
cmp
jl
lea
je
pop
stos
dec
cmp
hlt
push
jo
inc
outsl
lods
pop
sub
ja
inc
sbb
push
mov
push
push
out
xor
xor
push
jb
shlb
dec
sbb
add
push
test
jae
call
jmp
add
clc
sbb
stos
push
add
stc
pop
and
push
mov
cwtl
or
dec
loopne
adc
or
cmp
mov
mov
mov
outsb
jge
and
dec
mull
xchg
fadd
fwait
add
movsb
add
mov
mov
mov
mov
aas
xchg
pop
cmp
out
mov
sbb
fstl
sbb
adc
add
push
inc
mov
ja
mov
cli
or
inc
and
imul
cmpsb
imul
or
jl
mov
and
jle
mov
jnp
or
movsb
sti
or
xchg
inc
mov
sub
inc
mov
cmpsb
lea
scas
sub
cmp
pop
pop
imul
adc
add
loopne
add
ljmp
mov
xor
or
loope
sub
push
fadds
sbb
and
xor
jo
xor
add
and
xor
pusha
push
shlb
xor
add
pop
ret
inc
xor
jecxz
pop
and
xchg
stos
and
sub
sbb
mov
ficoms
clc
adc
and
pop
pusha
adc
ljmp
test
push
pop
push
xor
ds
test
jno
dec
pcmpeqw
or
dec
or
adc
jne
jl
int3
mov
add
sub
mov
dec
adc
fbstp
lret
pop
imul
sbb
pop
addb
sbb
push
lret
or
xchg
add
push
ja
arpl
jne
mov
inc
jo
inc
shll
mov
jle
fadd
jmp
push
cmp
sbb
lcall
popf
inc
or
andb
add
xchg
push
jne
daa
add
push
mov
enter
mov
mov
lock
insb
sbb
jb
inc
ret
pop
mov
inc
lcall
rol
ljmp
add
xchg
add
xor
jmp
insl
cmpsl
pop
jne
lea
inc
call
or
cmp
push
outsb
sbb
addr16
notb
fstl
rolb
jg
sbbb
sub
add
test
add
in
mov
je
mov
pop
repnz
out
add
xchg
pushf
fcmove
cmp
adcl
pop
in
stc
pop
mov
add
imul
cmp
add
xchg
out
add
mov
mov
sub
mov
movb
cmp
sbb
clc
push
stc
je
icebp
sti
mov
adc
xor
imul
in
inc
lahf
sub
jne
jecxz
jne
sub
add
jnp
cwtl
lods
push
add
pop
test
iret
js
adc
testb
or
adc
rcl
cmp
xor
xchg
jno
jns
inc
push
mov
jne
lret
in
loopne
pusha
clc
mov
adc
jg
loop
jmp
cmp
dec
scas
or
jno
cwtl
xor
loopne
dec
xchg
sbb
jg
das
inc
pusha
jp
sub
jl
or
push
adc
movl
lods
dec
adc
xchg
add
jp
add
adc
mov
or
adc
and
pop
xor
sub
fdivs
jecxz
mov
test
add
mov
or
mov
xchg
or
cmpsb
push
jl
adc
xchg
insl
mov
lock
sub
mov
mov
pushf
pop
jmp
or
add
fnstcw
push
and
adc
testl
sbb
sub
test
or
adc
sarl
xchg
and
aaa
or
sbb
lods
xor
push
outsl
mov
je
nop
pop
sub
sbb
fs
insb
insb
push
push
aam
cs
push
popa
insb
mov
xchg
insl
ljmp
cmp
je
notb
bound
push
cmp
sbb
sbb
fdivs
ss
push
sub
lahf
loop
xchg
inc
pop
xchg
jmp
lea
pop
fmull
nop
mov
sarb
inc
sub
push
add
lock
adc
lock
cmpsl
ds
roll
jecxz
stc
out
lods
in
push
adc
mov
and
sbb
ret
jp
dec
ss
int
mov
ja
push
sub
mov
pop
cmpsb
mov
cmc
lea
popa
mov
cs
mov
pop
cltd
arpl
inc
xchg
lock
addr16
aas
leave
inc
repnz
dec
popf
orl
mov
xor
testb
and
push
ljmp
scas
and
and
dec
clc
ret
xlat
test
je
test
ljmp
add
sub
jmp
and
and
jle
mov
adc
push
sbb
jns
and
pop
adc
loopne
inc
inc
push
jge
jne
add
popa
mov
adc
inc
mov
sbb
cs
or
popa
pop
insb
jmp
sbb
adc
jo
dec
jnp
push
xor
xchg
fsubl
in
fimull
xchg
stos
or
or
in
outsb
xchg
mov
cwtl
fidivrs
add
movsb
push
test
sub
pusha
sbb
je
sbb
adc
cmp
push
in
loopne
mov
lea
cwtl
mov
add
or
pop
aam
mov
push
lret
push
or
sbb
lcall
or
fcoms
clc
and
and
rcrb
pop
sbb
in
mov
xchg
fs
sub
sub
rolb
rcll
lods
movsb
lock
mov
imul
push
pusha
xchg
ficomps
adc
ja
fmul
inc
icebp
dec
jmp
std
mov
mov
arpl
push
pop
cmp
je
out
pusha
loopne
push
aad
push
and
lods
outsl
xor
cmp
je
or
xchg
loopne
add
inc
cmp
imul
mov
pop
adc
sbb
jg
adc
test
push
cmpb
test
test
mov
ret
pop
rcll
push
pop
pusha
pop
aas
inc
jmp
sbb
mov
adc
and
pusha
fadds
or
push
pop
inc
or
push
and
fadds
cmp
fistl
into
and
fsub
adc
lds
in
cmp
ds
loope
jnp
push
xchg
lret
jl
or
inc
verr
sbb
dec
push
adc
rol
sbb
or
jecxz
loope
mov
and
add
out
xchg
inc
fsubr
lock
add
add
or
inc
lds
jle
add
jbe
clc
popa
mov
ja
cbtw
shrb
adc
push
jp
xchg
sbb
in
jl
add
loop
xor
pop
xchg
xchg
mov
fdivl
mov
cld
mov
aam
sbb
jo
or
adc
lds
jo
push
cli
or
mov
push
xchg
sahf
cmp
push
xchg
popa
adcb
cwtl
bound
and
outsb
stos
adc
jecxz
das
inc
cmp
or
dec
add
push
push
add
aaa
aas
fdivrs
cmpsl
rolb
and
adc
mov
mov
jne
dec
sarl
add
in
imul
fs
and
je
or
push
mov
imul
lea
pop
cli
add
push
push
std
test
xchg
sub
jle
push
pop
jb
pop
push
add
push
sub
cmp
and
mov
je
xchg
adc
inc
dec
or
inc
jne
xchg
push
push
cmp
repz
sub
imul
add
push
outsl
adc
cmp
aad
cmp
and
popa
add
push
inc
sbb
cmp
cmp
or
setno
daa
mov
jmp
mov
addb
popa
rcrl
add
clc
jno
lcall
xor
call
rorb
cmp
retw
inc
clc
jmp
inc
in
push
pop
sub
test
mov
inc
rcll
xor
cwtl
mov
decl
xchg
fidivrs
push
xor
bswap
int
repz
mov
aad
ret
mov
inc
mov
ret
sub
movsl
mov
add
jp
rcrl
adc
push
and
aam
test
mov
pop
sub
push
scas
test
icebp
sub
rorb
jecxz
sbb
push
or
jo
push
sbb
loopne
in
and
dec
xchg
fimuls
add
push
jb
pop
dec
je
add
sub
insb
int
imul
or
xor
mov
seto
jle
nop
in
neg
sbb
push
cmp
ret
enter
cmp
and
js
je
lcall
add
jo
push
push
cmpl
pop
push
mov
call
xor
or
insb
ret
fisttpll
lods
sbb
mov
xchg
sub
fwait
xor
rorb
dec
jg
andl
add
call
or
mov
inc
jo
fimull
or
jae
mov
push
cmc
mov
jp
aam
repnz
lea
adc
push
sub
jge
ss
push
inc
das
xchg
add
jb
fsubrl
mov
sar
ret
pop
pop
pop
pop
jge
sbb
jns
dec
add
mov
add
mov
jl
andl
movsb
push
in
adc
jl
add
and
xor
int
add
or
adc
mov
loop
and
or
int3
in
mov
push
xchg
dec
outsb
mov
cmp
js
rcll
push
sbb
mov
scas
dec
adcl
adc
aad
sahf
lds
and
xor
pop
loop
mov
imul
mov
adc
test
push
mov
out
add
jl
dec
cmp
or
jl
or
mov
sub
adc
xor
pop
push
in
shr
pop
arpl
dec
insb
mov
dec
adc
pop
jns
in
clc
inc
push
inc
adc
inc
dec
sub
fadds
xor
or
mov
add
sub
shr
pop
orl
mul
add
push
mov
dec
push
xlat
jbe
orl
sub
or
je
incb
adc
or
mov
cmp
jne
fisubrs
sub
dec
mov
imul
pop
fiadds
testb
mov
add
xchg
adcl
js
mov
and
addb
add
or
xlat
push
sbb
orl
mov
dec
pop
mov
push
fsubl
push
mov
mov
aam
loopne
lret
movsb
mov
lahf
sbb
test
shlb
add
addl
jp
jo
jbe
add
and
cmp
or
cmp
aaa
add
test
add
jp
aaa
in
out
out
xor
mov
ret
mov
test
lea
cmpsl
dec
pop
xor
stos
pop
fnsave
ret
fisttps
mov
clc
add
lods
cmp
jne
or
cmp
pop
mov
push
and
lods
je
mov
cmp
stos
pop
les
push
mov
inc
jo
inc
addl
mov
push
fs
pop
nop
jmp
sbb
sbb
mov
push
xor
lods
ret
push
pushf
xchg
inc
xlat
adc
int
or
aad
test
sbb
or
adc
add
inc
ljmp
test
loopne
movsl
mov
pop
push
bound
stos
sbb
roll
adc
pop
mov
jl
cld
mov
ret
jmp
repnz
inc
ficoml
fwait
out
fisubl
jmp
nop
push
push
lea
pop
xor
mov
subb
insb
bound
inc
push
rcr
sub
dec
push
jnp
mov
or
mov
les
int3
push
add
mov
xchg
dec
xor
dec
in
dec
pop
add
test
aas
mov
xor
addr16
xor
or
cmp
sbb
sub
add
out
and
lods
sbb
sub
addl
enter
loop
rorb
js
xor
in
add
inc
mov
movsb
adc
call
js
inc
cmpsb
daa
add
or
dec
pop
dec
sub
adc
es
std
sarb
pushf
stos
add
jmp
arpl
mov
jle
clc
inc
or
mov
jo
add
or
loop
js
sbb
shlb
push
ds
mov
lods
ss
inc
adc
mov
xor
push
lods
cli
or
in
inc
inc
test
ss
adc
cmpsb
push
xor
outsl
clc
xor
cmp
push
sub
sbb
fstl
mov
push
push
xor
movsl
ret
push
or
jae
movsb
xor
add
fsubrs
gs
jne
inc
xor
xchg
test
data16
mull
fistpll
outsb
stos
add
insb
add
push
adc
pop
jle
loope
loopne
xor
add
adc
adc
sbb
xchg
sahf
cmc
ja
or
jge
adc
inc
jb
cs
cltd
pop
cmpsl
add
loopne
cmp
jne
sub
fcomp
pop
lret
pop
lcall
inc
xor
jle
lcall
push
push
mov
inc
inc
inc
push
xor
add
movsl
cmpsl
cmp
pop
and
aas
xlat
cmpsl
and
jbe
call
mov
cmpl
mov
push
cld
gs
push
cmp
push
movb
idiv
add
jge
movl
shr
inc
add
mov
push
fimuls
lock
orb
ds
adc
sbb
ss
sbb
mov
fimull
jecxz
in
push
imul
bound
push
stos
test
cmpb
rcrl
es
and
push
shr
clc
and
dec
mov
je
push
hlt
repz
jle
cmpsl
jl
pop
adc
inc
hlt
push
cmpsb
sub
jne
loopne
and
mov
divb
je
lcall
mov
dec
cmp
mov
int
and
push
add
mov
or
push
sbb
xor
xor
sbb
shrb
cmp
push
cmp
jo
hlt
fisubl
out
adc
jns
add
adc
push
mov
out
movsl
addl
ret
movsl
insb
sbb
loope
lea
cmp
test
pushl
sarl
add
cmp
add
inc
inc
cmovbe
loop
test
popa
push
cmp
cmp
xor
je
sub
in
inc
pop
dec
sub
pop
push
loopne
xchg
add
rcll
sub
movsb
add
xorb
gs
add
push
push
push
jbe
jp
sbb
pop
mov
sbb
jnp
pop
mov
fldenv
repnz
inc
aaa
jbe
xchg
pop
nop
or
jno
fmull
mov
mov
add
mov
dec
xchg
testl
push
jo
xchg
mov
xor
pop
push
aas
sbb
and
cmp
insl
test
cmp
jnp
jmp
jmp
movsb
or
adc
push
fnstenv
cs
cmpb
lret
lahf
mov
mov
push
sbb
pop
mov
into
je
pop
clc
xor
xchg
js
xchg
dec
mov
ljmp
das
pop
push
sbb
les
xor
lea
addb
mov
dec
in
lods
loopne
push
push
push
movb
push
push
push
ja
push
call
and
popa
xchg
in
and
or
jo
mov
and
xchg
pop
or
or
fsubrs
ret
lea
pop
cmp
push
jle
in
lahf
mov
push
jnp
mov
stos
dec
inc
cmp
xchg
mov
mov
vfrczss
pop
testl
push
je
xchg
andl
sahf
sub
mov
dec
or
arpl
dec
fisttpll
or
ljmp
or
sub
sbb
dec
aaa
sbb
or
jmp
or
ds
faddl
dec
insl
dec
mov
push
xor
addb
fs
push
pushf
out
cmc
pop
fildl
mov
int
je
jno,pt
sub
sbb
out
mov
pop
loopne
add
loopne
or
test
xor
jbe
aad
mov
push
sbb
mov
xor
rcr
jne
dec
lret
int
and
and
adc
adc
ret
fisubl
or
push
jl
push
inc
mov
lods
jae
push
push
mov
in
pop
mov
mov
sbb
sbbl
sub
sbb
push
je
aas
les
jo
cltd
shlb
in
xor
xchg
jne
sub
push
inc
mov
xchg
push
sub
sbb
push
gs
fwait
mov
addb
xor
clc
testl
pop
push
jae
cmp
fimuls
mov
push
add
adc
rol
or
in
mov
xor
into
fimull
lods
push
bound
push
idivb
mov
xor
xchg
shrb
adc
or
aaa
adc
add
icebp
dec
lds
sti
sub
xor
inc
rorb
mov
or
shrb
es
xchg
mov
pop
in
popa
and
mov
out
ss
push
xor
push
mov
loopne
inc
insl
rolb
in
pop
sbb
and
cld
adc
push
adcl
sub
add
pop
shl
inc
les
adc
add
divb
cmp
mov
mov
pop
inc
pop
add
push
adcb
pushf
mov
mov
lods
pop
andl
lret
mov
nop
sti
dec
ja
je
or
je
lods
or
sub
xchg
scas
add
inc
push
cmc
movsl
cmp
or
add
test
lcall
cs
clc
outsb
mov
sti
push
je
push
adc
dec
movsl
stc
jbe
adc
and
cmp
push
mov
lds
push
jne
shlb
add
pushf
jbe
sbb
jnp
call
clc
push
mov
js
in
mov
ret
and
adc
daa
inc
sti
in
cmpb
rorl
gs
add
adc
mov
call
rorl
xorl
loope
rol
adcb
rclb
and
lea
add
icebp
lret
add
andl
sub
mov
movsl
mov
or
je
sub
add
xchg
pushf
in
cmp
push
lea
add
nop
adc
int3
or
in
sub
testb
js
xchg
fisttpll
push
adc
inc
xchg
mov
nop
outsb
add
add
aas
ljmp
push
mov
or
jecxz
sub
movl
push
or
or
test
mov
xchg
push
call
rol
outsl
pop
sahf
rol
add
xor
mov
sub
adc
fsubrl
nop
add
fimull
push
fcomps
inc
sub
loop
and
push
sub
push
inc
push
inc
push
push
or
dec
ljmp
shrb
push
fsubrs
push
call
add
test
dec
mov
xor
inc
cmp
fcomp
repnz
xor
push
push
addr16
inc
and
testb
lcall
cmp
jmp
mov
xchg
inc
cmp
jne
or
out
ret
lea
mov
insb
cmp
stc
add
fdivl
and
sarb
xchg
jmp
nop
addb
or
inc
adc
scas
out
gs
ljmp
jp
leave
jecxz
inc
mov
sub
mov
xor
push
leave
ret
ret
dec
sarl
rorb
lahf
dec
push
lcall
pop
lcall
incl
dec
repz
push
test
repz
add
gs
movsl
pusha
nop
xchg
pop
jge
xchg
push
outsb
loopne
ja
rclb
and
lcall
xchg
add
aam
jb
push
xchg
aam
fmull
sbb
jb
cmp
push
nop
cmpsl
leave
xor
jp
aad
clc
aaa
sbb
aas
test
pop
xchg
add
push
ret
shlb
fs
hlt
cmp
and
mov
cmp
shll
add
clc
inc
shr
rorb
or
adc
ret
xor
sbb
mov
push
adc
xchg
jl,pt
push
leave
mov
fstpt
sbb
or
pop
daa
xchg
mov
idivl
pop
jbe
fisubl
mov
sbb
sbb
push
sub
xchg
rcrb
cwtl
pushf
popa
push
dec
inc
movsb
adc
mov
adc
and
mov
ret
xchg
xor
mov
sbb
jmp
mov
popf
adc
sbb
push
ret
pusha
int
sbb
push
sar
push
test
inc
push
dec
hlt
aaa
dec
cmp
jmp
out
xor
fisubrs
adc
pusha
mov
xor
cmp
les
lods
cs
lea
fildl
mov
daa
jp
sbbb
movl
xor
int3
out
movsb
inc
push
jne
add
or
es
xchg
mov
cmp
lahf
dec
in
sub
inc
lret
les
sbb
pop
popa
add
outsl
cwtl
mov
pop
mov
jo
xchg
xchg
pop
sub
sub
dec
push
and
sub
aam
or
add
je
and
test
mov
std
loopne
adc
movl
add
pop
inc
jge
or
cmp
pop
adc
test
mov
sbb
dec
pop
test
and
cmp
xor
or
or
push
mov
aam
fcomp
mov
lods
mov
icebp
xor
ljmp
jo
or
fcmovnb
or
jbe
test
sub
xor
xor
xor
pop
cld
dec
in
xor
shll
mov
clc
sub
push
pop
add
xchg
fdivr
xchg
pop
jb
in
pusha
decl
shrl
inc
inc
inc
pusha
ret
sub
push
mov
sbb
sti
test
popa
dec
and
xor
mov
push
mov
js
dec
add
dec
mov
xchg
lock
fadd
aas
push
jno
or
mov
les
ja
neg
sbb
mov
or
or
push
sbb
out
add
dec
sbbb
push
loopne
push
js
mov
push
aam
and
pop
jl
iret
fmull
jmp
call
clc
adc
inc
push
push
out
and
mov
das
cmp
adc
test
add
sub
aam
in
neg
pop
shlb
in
adc
es
cwtl
inc
mov
das
lock
or
cmp
jne
adc
jg
xchg
or
adc
addb
jg
adc
iret
notl
jo
cmp
xchg
in
add
dec
out
or
pop
jg
inc
aam
sar
je
inc
or
push
ret
and
test
jnp
lds
add
inc
push
sbb
lods
xchg
inc
and
lock
and
pop
in
push
cld
dec
jmp
adc
lods
dec
sbb
inc
adc
jno
mov
pop
sbb
addl
inc
inc
push
mov
mov
push
call
js
adc
les
fcoms
jae
jo
outsl
retw
lock
sti
dec
sbb
enter
jl
mov
or
mov
mov
out
in
mov
pop
jmp
or
and
push
test
lea
adc
rclb
shlb
xor
popf
xor
imul
mov
xor
xor
and
mov
loope
xchg
adc
loopne
mov
push
hlt
jge
rolb
mov
mov
jge
ss
or
imul
ss
sbbl
jp
push
in
push
movsb
mov
adc
mov
fs
sbbb
pop
loopne
pop
les
cwtl
imul
push
pop
cli
sbb
or
and
xor
les
cmp
sbb
mov
repz
pop
fidivs
sbb
jmp
or
aaa
stos
sbb
jge
cmp
pop
or
lcall
adc
mov
mov
add
add
je
stos
iret
pushw
push
adcb
int3
xlat
jnp
add
jnp
mov
int
fs
je
cmp
push
mov
jge
cmp
push
mov
push
mov
imul
bound
data16
fwait
add
lock
sti
add
imul
inc
dec
dec
dec
hlt
add
xchg
stc
fucomp
pop
je
or
push
cmp
push
cmc
andl
mov
pop
add
mov
and
cld
xor
mov
xchg
jp
stos
mov
xchg
inc
pop
xor
leave
decl
cmpsb
dec
adc
inc
xchg
lods
rorb
mov
push
or
subb
and
jmp
sbb
loopne
in
push
add
dec
push
add
hlt
adc
and
sarb
je
lock
mov
and
lea
push
add
or
and
sbb
cmp
fisttps
mov
pop
push
mov
addl
sbb
dec
cmpsl
jb
ret
xchg
lret
add
mov
pop
push
adc
test
fisttpl
dec
or
je
adc
and
adc
cs
enter
sbb
sbb
jb
xchg
out
pusha
call
jb
adc
sbb
mov
dec
sub
hlt
test
and
stc
insb
add
xchg
or
and
sub
push
sahf
popl
push
sar
add
lea
jg
push
ja
test
ljmp
or
xchg
stc
xor
and
push
sub
push
and
cld
aas
shll
pop
xor
push
test
push
leave
xchg
cmp
jb
xchg
out
aad
sub
cmp
stc
enter
push
nop
mov
inc
and
out
cmp
or
or
lahf
or
inc
xchg
or
das
xor
pop
lods
dec
nop
orl
add
xchg
mov
jae
xor
test
or
push
and
in
les
jns
cmc
dec
jmp
push
int3
and
loopne
nop
and
clc
daa
xor
mov
and
in
mov
nop
mov
lcall
mov
fstpt
add
xor
enter
das
mov
inc
dec
sub
xchg
adc
pcmpeqw
push
bound
push
scas
jo
cmp
adc
sbb
push
add
or
lcall
and
jo
stos
mov
cmpb
adc
icebp
inc
jno
add
scas
je
jbe
inc
mov
cmpsl
inc
add
shlb
dec
mov
add
mov
xchg
ja,pt
clc
fistps
or
fbstp
push
push
push
push
add
int3
js
arpl
add
pop
arpl
addl
ljmp
dec
cmp
jl
and
push
adc
mov
add
add
inc
repnz
data16
jb
into
jbe
push
push
rclb
pop
xor
sub
adc
call
jnp
jae
mov
add
imull
shl
pop
cmp
push
jne
jns
movsl
adcb
add
test
je
ss
jne
mov
movl
jmp
push
ret
xchg
and
sbb
sti
pop
push
mov
sbb
adc
ja
sbb
nop
sub
enter
loopne
push
and
or
jge
jo
rcrb
jge
sarb
js
mov
in
ficoms
add
xchg
divps
test
jl
cmp
sbb
and
aam
jmp
mov
push
mov
inc
push
fisubrl
jge
push
flds
push
mov
mov
mov
sub
std
inc
leave
mov
cmp
and
cmp
mov
pavgb
mov
lods
pusha
dec
sub
or
scas
pop
push
fsubl
lret
jb
fcomps
test
add
push
dec
add
push
insl
jmp
sbb
mov
cmc
repz
ja
jmp
push
sub
aad
push
ret
jns
push
mov
nop
dec
enter
push
insb
call
imul
sti
xchg
jo
sarl
lock
jns
shrb
test
sarb
adc
dec
scas
add
cmp
dec
mov
jge
les
adc
scas
cltd
out
sub
shll
push
leave
push
add
push
xor
xor
dec
xorb
fldt
pop
insl
cmp
xchg
jo
push
lock
push
dec
mov
add
add
add
xchg
mov
rorl
pop
test
push
dec
and
adc
mov
test
add
mov
sbbl
test
lds
cmpsl
movsb
or
clc
push
shll
cmp
jbe
mov
cmp
push
inc
add
push
and
push
jmp
inc
jns
lea
leave
inc
sarb
adc
sbb
xchg
subl
pop
jbe
push
lea
in
push
adc
dec
lods
jl
popa
inc
pop
inc
out
dec
pop
nop
inc
push
mov
jno
inc
mov
sbb
pop
pusha
jo
xchg
or
or
dec
dec
xor
or
aam
pushf
pop
mov
xchg
pop
mov
cmp
jge
pop
push
dec
aaa
cmp
push
lcall
pop
mov
loop
inc
outsb
mov
test
add
mov
cmp
sbb
pop
mov
push
add
push
shlb
hlt
ss
xlat
testl
inc
adc
cld
push
jle
adc
imul
jne
jmp
subb
inc
or
cmp
mov
std
cmp
icebp
push
jp
jne
andl
gs
push
xor
pusha
or
add
xchg
test
cmp
jg
ret
mov
inc
cs
or
add
cltd
int3
pop
mov
pusha
add
push
pop
enter
jo
dec
lea
push
sbb
mov
mov
inc
or
push
adc
push
mov
xchg
loope
dec
push
or
pusha
xorl
bound
xor
add
ds
jno
xor
sub
jp
fdivs
fldenv
lret
in
cmp
daa
inc
sbb
adc
add
adc
pop
ret
aam
sysret
or
mov
ret
gs
imul
push
sbb
xchg
inc
dec
push
or
cmc
inc
mov
pop
or
xor
dec
add
pop
or
push
pop
push
fstpt
scas
cli
fisubrs
dec
jmp
inc
mov
or
jne
xchg
aas
dec
or
push
add
lea
cmpb
push
rol
sub
or
lods
lds
fs
pop
sbb
xchg
inc
inc
pushf
mov
es
sub
test
and
inc
int3
dec
adc
add
and
mov
clc
pop
jbe
outsb
or
mov
push
fdivs
add
cmp
cmp
pop
cmp
mov
jg
sub
add
test
nop
sbb
popf
adc
cmp
mov
dec
test
adc
adcb
adc
fildll
or
push
and
sbb
push
push
xor
test
lret
xor
and
loopne
sub
fs
add
hlt
push
push
adc
les
pop
sarb
adc
cltd
sbb
andps
mov
and
add
ret
popf
dec
sub
loopne
lock
sbb
je
je
mov
push
pop
sub
stos
lahf
or
clc
push
repz
cmp
or
outsb
push
clc
roll
movsb
std
add
ljmp
cld
clc
repnz
sahf
add
call
sub
ss
mov
inc
xchg
mov
js
repz
sbb
out
lea
ret
push
push
mov
mov
std
push
cmp
and
mov
aaa
int3
dec
dec
and
xchg
xor
mov
jmp
loope
pop
cwtl
add
add
mov
dec
lods
clc
mov
mov
pop
mov
cld
push
xor
in
jmp
inc
je
xor
inc
mov
inc
mov
push
je
xchg
mov
cltd
push
leave
jbe
push
lcall
or
or
inc
pushf
fcomps
loopne
inc
push
fsubrs
push
pop
mov
jl
test
adc
jb
adc
rorb
or
ret
in
add
mov
movsl
lock
insl
sbb
jge
jnp
xchg
insb
mov
inc
jle
test
jg
dec
add
jmp
sub
push
aas
inc
sbb
fnstenv
out
or
push
roll
push
xor
xor
stos
clc
mov
ljmp
sub
fiaddl
sub
das
das
sub
xor
xor
cmp
xchg
xchg
xchg
xchg
xor
inc
pusha
dec
test
push
add
rorb
and
je
add
inc
add
push
sub
mov
sbb
jle
insb
lahf
xchg
cmp
add
decl
cmp
sbb
add
jnp
arpl
adc
xchg
adc
lods
fimuls
xor
enter
je
mov
mov
inc
pop
jge
adc
and
sbb
cmc
jb
adc
inc
sub
icebp
pop
out
jbe
out
jge
adc
mov
inc
push
xor
and
add
into
cmc
insb
lahf
subb
cmp
inc
and
add
adc
stos
mov
lret
push
add
pop
loopne
mov
mov
rclb
inc
pushf
cltd
movsl
sbb
add
aad
sbb
sbb
out
je
ret
je
xor
cmp
movsl
test
dec
cmp
out
adc
cmp
adc
leave
dec
jno
in
or
mov
adc
adc
xchg
hlt
add
xchg
insl
xchg
sahf
xchg
cmp
xor
test
jbe
jne
pop
cmp
dec
loope
clc
sub
lahf
repnz
dec
pop
lea
fwait
jge
sti
rep
bound
dec
pop
or
adc
jmp
sub
jae
xor
or
shlb
add
pushf
push
mov
arpl
pop
add
jnp
and
jne
pop
or
pop
xor
popf
cltd
push
stc
jae
push
push
mov
cld
xor
push
mov
loop
loopne
adc
push
lock
sti
sub
data16
inc
sub
or
mov
push
adc
ficoms
xor
cmp
fld
mov
xor
jbe
inc
xchg
push
mov
push
ja
outsl
and
stos
cmp
rolb
xor
test
fstps
clc
sbb
data16
push
sub
push
jle
hlt
add
mov
fiadds
mov
popa
fdivrs
mov
popa
mov
xor
dec
or
push
inc
iret
jecxz
and
sub
rcrb
adc
xor
mov
fisubrl
mov
inc
add
mov
push
mov
rol
clc
mov
fldt
das
mov
push
lret
add
loopne
jl
jnp
pop
adc
push
push
icebp
mov
call
dec
push
adc
adc
imul
cmpsb
sbb
call
push
adc
add
rcrb
orb
mov
mov
xor
les
pop
jns
fdivrl
and
pop
pop
adc
jno
incl
sub
push
mov
dec
shrb
stos
cwtl
push
in
cs
xlat
mov
adc
arpl
lods
repz
and
add
or
lock
clc
sbb
andb
mov
xor
or
and
sarb
dec
inc
popa
aas
imul
lods
ret
add
bound
lock
pop
scas
push
jge
sbb
mov
sub
or
add
jno
scas
push
mov
lock
jmp
jge
je
aad
and
data16
testl
and
pop
cltd
sub
add
inc
jo
pop
and
shrb
stos
loop
icebp
cmp
ret
xor
ret
frndint
cmp
imul
mov
sbb
dec
mov
hlt
adc
or
xchg
in
dec
mov
addr16
push
test
pop
sahf
add
pop
orb
mov
jle
dec
loopne
testb
inc
sbb
adc
dec
dec
and
adc
add
call
sub
orb
andl
jle
testb
sub
push
movsl
push
add
cmp
jl
jo
xchg
xchg
sbb
insb
loope
insl
sbb
mov
adc
sarl
in
mov
or
cmp
cmp
push
ret
rorb
or
xorb
or
xor
jmp
or
dec
call
out
adc
jp
rol
add
clc
jbe
or
add
hlt
hlt
push
mov
jmp
shll
inc
jecxz
in
xchg
sub
jecxz
and
test
inc
add
push
repz
mov
roll
jns
mov
or
icebp
sbb
cmpsl
push
pop
lea
insl
and
in
inc
push
shrb
inc
or
cmpl
push
lea
mov
fiadds
sbb
lock
mov
fcmovu
into
cmp
movsl
and
mov
sub
cmp
enter
push
pop
hlt
jl
pop
in
pop
pop
mov
pusha
lea
add
imul
lods
add
cmp
testb
inc
add
sbb
inc
push
or
push
push
sti
out
dec
shll
inc
or
pop
jns
jge
leave
in
je
jo
rcrb
sbb
or
scas
mov
rol
add
or
rol
xor
pop
xor
inc
pusha
sub
pushf
xor
and
push
testb
std
sbb
push
mov
jmp
dec
ss
arpl
dec
add
dec
cmc
push
mov
cwtl
outsb
sar
sub
jp
cmp
add
incb
push
cmp
jb
into
xchg
call
mov
pop
or
or
or
push
mov
clc
jae
adc
add
xchg
sub
and
es
mov
add
mov
jge
dec
iret
lret
cmp
arpl
into
jmp
inc
mov
adc
push
sub
sub
lahf
imul
sbb
inc
and
lods
dec
movsl
pop
sub
cmp
test
pop
cmpsl
aam
xchg
add
dec
mov
cs
pushf
mov
lock
and
je
out
mov
sbb
daa
or
nop
arpl
cmp
nop
dec
aad
add
adc
mov
insb
daa
lret
arpl
int
jb
or
dec
or
addb
and
push
or
mov
sub
fldt
fists
mov
cmp
fsubl
call
int
inc
fmuls
add
add
std
icebp
add
aas
addb
insb
sarl
in
or
inc
xorl
push
pop
pop
jne
push
xor
xor
leave
jnp
je
pusha
test
and
jmp
add
cltd
sub
jg
adc
or
out
mov
and
pusha
adc
fmuls
cmp
ss
pop
cltd
pop
pop
stos
push
mov
mov
andb
pop
int3
lret
nop
mov
and
add
nop
add
call
and
and
enter
and
add
push
enter
sub
enter
sub
add
add
or
xchg
or
fs
das
scas
sbb
aas
jmp
push
push
inc
xor
jo
sub
push
jne
add
pop
mov
mov
test
enter
addr16
lea
fcmovnbe
push
inc
and
lret
leave
cld
or
jmp
push
lret
rol
mov
push
add
cmpsb
insb
jns
mov
sarl
or
sbb
pop
adc
pop
pop
mov
xchg
clc
movsb
jecxz
mov
mov
pop
add
movl
xor
or
add
push
or
pusha
jns
dec
jne
adc
lea
add
or
sub
adc
xor
gs
mov
pop
pop
inc
jecxz
xor
inc
mov
call
call
sbb
add
vmovntdq
stos
inc
inc
mov
pop
or
gs
into
xchg
iret
sub
or
int3
out
stc
test
inc
lock
mov
mov
lods
and
and
ret
mov
push
cmp
sbb
cmpxchg
pushw
mov
shlb
or
cmp
nop
push
pop
int
loopne
jecxz
add
pop
add
mov
dec
loopne
ret
leave
dec
cli
pop
adc
lock
lock
nopl
gs
pop
adc
mov
cmp
add
push
push
sbb
inc
outsl
je
dec
pop
andl
testl
mulb
es
and
xor
in
js
imul
sahf
stos
lods
mov
push
lods
xor
inc
push
push
xor
addb
ja
jne
test
orb
xchg
cld
mov
add
fisttps
or
pop
orb
pop
js
sbb
xor
push
add
add
or
sbb
adc
jne
adc
jne
xor
xor
mov
push
sbb
lret
or
push
add
loop
test
jmp
imul
stos
and
inc
jmp
or
out
cmc
fwait
and
mov
lock
unpcklps
sbb
cs
pop
lock
ljmp
pushf
test
xor
out
or
fisttpl
jle
popa
pop
fisubrs
bound
cmp
cmp
sbb
lock
inc
cmpsl
add
and
sbb
call
fwait
ds
and
in
lods
adcb
loopne
mov
jo
sub
or
je
lret
mov
or
and
outsl
testb
add
ds
sub
push
sub
mov
xchg
arpl
stc
xchg
dec
mov
or
pusha
push
add
push
jne
and
sbb
or
pop
push
stc
test
fsubrl
or
pop
pop
sbb
in
or
loopne
jmp
push
and
and
stc
xor
rol
call
and
jo
js
fldl
push
mov
shrl
sub
cltd
pop
test
aas
pop
bound
nop
and
pop
and
cli
add
clc
xor
add
dec
sub
pusha
test
jo
mov
pop
std
nop
movsb
jb
xchg
lahf
cmpb
or
stos
in
dec
or
jge
jno
push
adc
or
sahf
mov
mov
xchg
scas
sbb
add
test
sbb
insb
adc
pop
mov
inc
je
inc
and
sbb
add
jl
cmp
jle
add
out
adc
popa
push
jp
or
pop
xor
mov
ds
mov
inc
jg
add
cmpsb
cmp
mov
mov
sbb
xor
je
cmp
sub
mov
je
jne
pop
xchg
mov
lcall
iret
and
mov
pop
cltd
sbb
inc
test
or
ret
add
dec
inc
add
mov
pop
repz
xchg
jmp
test
mov
cmp
jl
xor
or
sbb
mov
mov
jl
add
add
call
add
ja
popa
in
mov
sub
xor
rcrb
xchg
lret
cmpsb
jge
inc
mov
dec
lock
jo
xchg
cmpsl
push
mov
cmp
ret
outsl
rorb
mov
js
loop
mov
outsl
or
daa
dec
inc
out
dec
mov
test
dec
or
xchg
xchg
push
andb
or
cmp
dec
mov
lret
mov
in
or
lods
xchg
loopne
mov
push
cwtl
in
clc
roll
push
sbb
mov
push
pop
pop
pop
jp
or
sub
sbbl
pushf
aaa
push
adc
cmp
xor
shlb
call
pop
xlat
clc
sbb
or
mov
xor
cmpsb
push
lea
push
loopne
lcall
bound
pop
test
jp
pop
adc
and
pusha
mov
inc
inc
xchg
push
scas
or
or
pushf
or
adc
into
inc
test
xchg
sbb
push
mov
insl
loopne
jge
add
iret
sbb
or
push
pop
pop
and
pusha
fs
push
jge
js
and
cmp
lea
jno
ret
scas
mov
out
lea
sub
insb
jmp
inc
sbb
test
add
sbb
and
test
add
popf
add
in
and
inc
test
adc
add
jo
or
adc
push
filds
es
shll
fcmovbe
push
fisubrs
sub
cmp
loopne
stos
mov
int
dec
cmpl
inc
popf
mov
mov
cmp
and
or
inc
inc
adc
xor
in
pop
sub
sbb
jne
nop
pop
rclb
ret
sub
pop
cmp
inc
cmpb
jmp
inc
aam
adc
test
jno
inc
push
outsl
cmp
rol
enter
mov
flds
popa
mov
jne
push
xor
sub
xor
add
and
push
lock
ds
jbe
jmp
outsl
por
mov
and
add
pusha
or
sub
add
fwait
adc
ret
pop
push
stc
mov
jmp
inc
pop
pop
cmp
jne
jmp
gs
outsb
pop
xor
into
test
lea
lods
or
addr16
xchg
fnsave
xchg
and
movsb
adc
stos
das
xor
stos
and
dec
dec
inc
sub
add
mov
je
dec
or
push
cmpsl
and
xchg
je
or
jbe
sarl
xchg
xchg
mov
mov
lahf
es
push
add
test
inc
xor
icebp
sahf
fcoml
push
hlt
xorb
xlat
in
mov
and
icebp
pop
cmp
leave
or
mov
clc
and
add
pop
cmp
sbbb
adc
jg
pop
push
hlt
test
lods
push
scas
cmpsl
xchg
inc
adc
inc
ret
test
and
popf
shlb
xor
je
sti
sahf
mov
jle
dec
add
and
sbb
pusha
cld
jl
adc
push
sub
insb
mov
insb
jbe
push
repnz
and
mov
or
adc
fldenv
orl
cmp
insb
addr16
fsubrl
xor
or
sub
sbb
and
sub
pop
xchg
cmp
sub
imul
jae
and
mov
jecxz
in
push
adc
or
stos
cmpb
sahf
or
sbb
mov
in
fcomps
inc
loope
add
push
jge
cmp
mov
mov
push
pop
sbb
bound
add
lods
stos
sbb
xor
push
mov
mov
jecxz
adc
or
push
gs
add
lea
push
xchg
sub
sub
push
sub
xchg
pop
pop
push
add
mov
sbb
daa
add
out
push
rolb
notb
jg
mov
mov
jae
out
and
pusha
pop
loope
ret
jmp
mov
jo
movl
jo
lcall
sub
xor
sub
cmp
cld
xchg
mov
stc
sub
lea
add
mov
sub
adcl
sbb
sub
dec
adc
mov
and
arpl
andb
mov
imul
clc
push
push
adc
call
mov
mov
loopne
push
or
jmp
dec
inc
add
or
insb
add
or
add
xchg
and
push
cmpsl
add
push
dec
sahf
inc
add
mov
outsb
ja
mov
and
rolb
inc
icebp
retw
mov
in
add
sbb
repz
cwtl
adc
ret
jmp
nop
sbb
fsubrs
test
loope
xchg
adc
daa
std
inc
sahf
inc
add
push
addb
addl
and
or
mov
and
shrl
sahf
push
lea
inc
and
nop
and
or
jo
adc
mov
in
push
adc
fst
pop
test
out
add
stos
push
pop
pop
mov
movsb
loop
add
push
pushl
jae
pop
sahf
push
xchg
or
push
inc
sbb
cmp
div
je
into
xor
ds
clc
xor
es
incl
and
inc
pop
mov
pop
xor
dec
lds
nop
pop
negl
sub
or
sub
mov
call
mov
mov
adc
push
pop
je
fldl
inc
lahf
mov
jnp
fstpl
dec
in
mov
repz
sub
aaa
adc
adc
jne
cmp
iret
iret
push
divb
or
jne
or
jne
or
cld
jmp
out
lret
andl
je
test
mov
mov
pop
dec
movd
enter
cld
and
push
push
aas
inc
loop
out
mov
pop
pop
je
xchg
ret
loope
subl
adc
jecxz
xor
add
sub
mov
or
sbb
xlat
pop
xchg
jo
push
rorb
cmp
adc
lahf
jg
sbb
add
movsl
mov
push
daa
mov
or
test
sbb
or
jbe
sub
mov
lock
mov
push
rcrb
andb
les
xchg
pmaxub
sub
fildll
push
or
in
inc
inc
sbb
sub
rol
mov
clc
dec
push
cmp
or
fcompl
jb
push
inc
jmp
fwait
jl
nop
push
add
and
push
jbe
hlt
pop
shll
sub
xchg
and
popf
xor
nop
inc
lock
pop
fisubrl
stos
pop
and
mov
sub
add
rolb
mov
adc
sbb
or
cmp
mov
or
or
inc
cld
inc
sahf
pop
add
pop
push
adc
sub
add
push
push
and
mov
push
pop
repnz
sbbl
jl
push
push
fcomps
and
mov
dec
inc
inc
addl
and
or
adc
mov
ja
or
out
mov
push
test
lcall
int3
test
or
adc
les
out
cld
xchg
imul
push
xor
cltd
adc
add
insb
mov
mov
shrb
push
enter
pop
enter
pop
fldl
lea
mov
rorb
lods
cltd
rclb
into
xor
imul
or
mov
adc
inc
jo
loopne
popa
adc
arpl
xor
iret
vmovaps
adc
and
pop
imul
mov
mov
adc
mov
sub
sub
and
cwtl
and
xor
pop
xor
cmpl
leave
xor
call
push
loope
lods
arpl
jle
pop
xchg
fisubs
addl
mov
pop
push
jmp
ret
cli
or
fcmovnb
shlb
aam
jae
mov
imul
icebp
daa
pop
fistpl
dec
into
push
bound
clc
pop
cmp
in
fdivp
pusha
cmp
adc
sbb
push
add
xor
je
popa
cmp
cwtl
loopne
clts
les
in
ss
push
cmp
fidivs
cmc
sbb
push
inc
xor
mov
and
stos
inc
sub
sahf
and
pop
xchg
subl
lldt
add
push
and
shrb
push
cli
loopne
sub
bound
mov
and
xchg
dec
push
int3
adc
je
adc
push
out
adc
in
and
sub
imul
fcmovnbe
xchg
rclb
in
xorl
inc
les
ret
cmp
shrl
in
lds
pop
in
add
mov
out
stos
or
jmp
sbb
adc
dec
sarb
cs
inc
shlb
sub
inc
add
cmp
popa
add
sbb
dec
aaa
pop
and
mov
adc
adc
flds
sarb
jne
xor
sub
push
sub
fs
mov
or
ss
sub
pushl
mov
dec
adc
loope
clc
sahf
cld
inc
add
fidivrl
push
and
inc
shrb
or
sub
enter
cwtl
test
xchg
mov
or
xor
push
and
das
pop
fwait
and
inc
clc
sub
add
cmp
jg
in
pop
jbe
mov
cltd
nop
add
pop
popf
dec
add
inc
or
cmp
mov
clc
dec
or
add
in
jo
or
daa
add
push
lea
and
fmulp
loope
je
push
add
fldt
xor
xchg
add
movb
adc
add
jae
adc
pushf
and
enter
inc
aaa
push
dec
adc
daa
adcl
cmc
dec
test
mov
xor
ret
push
sbb
pop
fs
mov
sbbb
lock
pop
xor
or
xor
imul
jnp
aad
fwait
dec
mov
adcb
stc
or
mov
add
pushf
sarl
js
push
fcoms
mov
adc
push
push
sbb
addr16
push
sbb
dec
or
cwtl
stos
test
inc
xor
sub
es
das
push
jl
lds
mov
mov
xor
add
clc
xlat
stc
add
rorl
test
popa
add
sbb
xor
lcall
or
test
push
movsl
and
movsl
stos
push
popf
inc
sub
or
mov
xchg
inc
inc
and
rolb
jnp
push
mov
movsl
add
movsl
mov
and
test
push
mov
insl
push
movsl
popf
mull
xor
adc
xor
cmc
mov
and
push
mov
das
inc
shr
adc
push
std
movsl
insl
jo
jnp
stos
dec
cmpsb
push
nop
pop
cmp
dec
pop
data16
or
mov
or
pop
punpckhbw
add
adc
xchg
xchg
xor
or
mov
cmp
test
fldl
push
movsl
xchg
loop
sub
leave
scas
cmp
lock
lock
inc
sbb
pop
mov
lcall
aas
imul
sbb
jne
sbb
inc
xor
push
stos
mov
loope
sahf
mov
aam
repnz
and
aad
aad
sbb
or
cltd
out
dec
aaa
push
lret
jl
push
and
xchg
or
add
mov
aaa
fldcw
pop
jne
cmp
mov
add
inc
push
jp
inc
add
mov
in
mov
push
mov
fwait
dec
xor
xchg
cmp
loop
sbb
mov
and
scas
dec
push
loopne
and
inc
jecxz
push
push
sar
adc
testl
test
mov
push
mov
pushl
cmpsl
rolb
out
push
cwtl
add
scas
stos
push
and
and
int3
pusha
sbb
addr16
cmp
mov
add
jg
push
inc
sti
aad
mov
shrl
mov
and
mov
mov
add
add
ret
dec
dec
movsb
inc
stos
add
add
hlt
jne
adc
mov
adc
and
fistpll
adc
add
sbb
lock
lea
imul
adc
fwait
add
cmp
aas
aam
xor
daa
test
dec
lea
pop
stos
dec
scas
dec
push
mov
jo
packuswb
insb
iret
xchg
mov
fcoms
jo
inc
mov
cmp
push
push
icebp
add
sbb
sbb
fisubrl
lods
outsb
inc
out
cmc
inc
mov
sub
xchg
scas
dec
ja
pop
mov
ljmp
ficompl
push
das
inc
ljmp
and
jne
outsb
or
push
push
and
test
adc
or
cld
xor
sbb
cltd
mov
jg
cmp
and
adc
and
sub
test
popa
pushf
jne
xor
cwtl
xor
js
jns
inc
std
push
and
sub
push
mov
popa
popf
gs
pop
lods
push
scas
mov
pop
sbb
addl
mov
adc
sub
jnp
xchg
push
repnz
dec
call
inc
je
repnz
je
adc
xor
jl
mov
add
dec
sub
inc
out
adc
in
movb
inc
adc
mov
inc
mov
hlt
jnp
into
pop
mov
adc
jmp
sbb
stc
in
test
mov
lock
andl
or
pushl
push
int
jo
jne
mov
jo
addb
nop
add
lods
cmpsl
xchg
add
test
mov
and
and
mov
xor
xchg
pop
mov
adc
dec
add
dec
sub
push
test
sub
jne
cltd
rolb
out
inc
push
or
stos
add
mov
js
xor
add
pop
std
inc
mov
dec
lods
or
xchg
sbb
sbb
pushf
pop
pop
xor
hlt
mov
lods
or
ss
inc
or
cs
pop
enter
push
jb
xchg
xchg
or
sbb
repnz
addl
xor
adc
and
and
inc
mov
dec
mov
dec
call
sub
sub
pop
sub
cltd
mov
push
je
adc
inc
pop
push
xchg
sbb
jbe
xchg
mov
inc
sbb
outsb
outsb
cmp
and
pop
cmc
sbb
pop
push
inc
adc
pop
or
adc
mov
inc
scas
sub
loopne
jo
or
pop
gs
pop
test
or
add
cmpsl
mov
les
xor
fbld
je
or
add
adc
cmc
insl
xchg
out
and
and
arpl
xchg
and
lcall
adc
inc
push
add
cmpl
imul
sub
imul
es
jb
loopne
daa
and
daa
or
sbb
dec
xchg
push
fs
jno
mov
push
cli
inc
pop
cmp
dec
cmp
mov
ja
adc
mov
insb
imul
cmpsb
cmp
imul
inc
js
mov
xor
push
or
test
andb
out
sarl
mov
mov
sub
sub
jne
sub
lcall
adcb
imul
or
cs
cmpsl
xchg
nop
cmp
pop
movsl
add
lods
mov
cld
jnp
and
orl
nop
dec
mov
mov
adc
pop
or
or
cs
adc
mov
fld
into
ja
inc
inc
incl
addl
pop
adcl
add
dec
out
in
addr16
dec
and
sbb
or
hlt
add
pop
sti
dec
add
sub
jo
out
xlat
int3
and
pusha
sub
jbe
add
popa
in
mov
movl
movsb
adc
iret
push
sbb
stc
setl
and
iret
std
adcb
or
mov
cmp
sbb
mov
pop
cmpl
in
adc
inc
add
ja
mov
in
sbb
repnz
sub
sbb
ss
dec
mov
or
push
xorb
sbb
push
in
mov
js
xor
pop
sahf
nop
pop
enter
push
and
inc
inc
inc
dec
jmp
and
lock
and
or
dec
js
sbb
add
push
xor
push
std
xor
enter
hlt
or
andl
sub
shll
or
add
or
sbb
lock
and
ret
sbb
add
push
aam
jae
fs
or
faddl
add
sub
xchg
enter
mov
xor
data16
adcb
pop
es
mov
inc
mov
mov
cmp
testb
mov
or
shl
adc
sub
mov
xor
outsl
cmpsb
subb
aas
xchg
adc
xchg
mov
adc
push
inc
sbb
push
cwtl
insb
jae
xchg
stos
push
fsubs
loope
jmp
mov
std
std
inc
es
in
idiv
movups
pop
and
jl
pop
mov
push
sti
jmp
imul
pop
or
ret
pop
xchg
push
pop
push
icebp
xchg
mov
nop
push
push
das
aam
or
push
cmp
je
cmp
scas
adc
dec
sbb
push
mov
andb
add
loop
cmc
pop
loopne
mov
scas
dec
and
jne
jmp
pop
push
mov
cmp
add
add
outsl
cmp
mov
inc
adc
dec
cld
xor
pop
iret
adc
mov
roll
xor
push
fcmovu
inc
jl
mov
popa
sahf
fstpl
fldl
shl
loopne
les
adc
push
or
popf
fs
mov
xchg
xor
mov
mov
xorb
js
or
fcomps
fsubrl
shrb
fs
and
or
jae
rcr
out
out
cmp
sbb
xchg
and
pop
fsub
pop
fsubrp
adcl
nop
into
mov
lahf
xor
das
jg
jns
adc
add
and
xchg
insl
imul
scas
add
out
sub
subl
dec
je
add
es
jp
aam
add
in
lcall
in
add
out
sahf
dec
ss
shrb
push
push
stc
xchg
mov
ret
sub
add
push
arpl
fidivl
pop
fisttpl
stc
pop
inc
inc
fnsave
roll
sub
mov
mov
cwtl
out
stos
mov
das
sbb
and
sbb
mov
sub
push
in
out
loope
cs
fimull
in
jp
repz
fidivs
push
and
sbb
pop
mov
lea
ja
repz
and
add
cmp
in
mov
and
adc
xor
xchg
push
adc
fimuls
jns
adc
or
stos
jl
repz
and
adc
and
lret
repnz
in
lds
lods
inc
push
pop
repnz
fisubl
and
sbb
xor
stc
cld
nop
in
push
xchg
sub
in
movaps
cmp
xchg
add
subl
and
mov
and
push
cld
nop
dec
push
push
push
sahf
sub
push
das
jns
push
push
push
xchg
or
mov
loop
iret
push
sub
stc
dec
repnz
cld
inc
adc
inc
xor
outsb
xchg
pop
xchg
and
inc
xor
sahf
pop
repnz
in
fs
or
sub
jne
repz
or
outsl
pop
adc
cvtps2pd
cld
mov
jo
inc
xor
cwtl
jne
dec
sahf
pop
repnz
movsb
sbb
fstps
mov
adc
jp
aam
test
je
ds
stc
icebp
dec
or
clc
inc
sub
inc
addl
sbb
and
push
cwtl
or
pushf
dec
inc
push
jecxz
add
imul
dec
add
sbb
adc
and
cmp
repz
mov
repz
loopne
push
sub
out
sahf
out
pop
insl
jle
sahf
out
sahf
mov
cmc
cmp
sarl
pop
sub
dec
repz
repz
insb
jge
lahf
pop
repnz
mov
shl
jecxz
enter
iret
inc
gs
add
pusha
and
add
adc
loopne
lock
andl
in
roll
das
adc
and
inc
and
and
adc
inc
adc
mov
mov
dec
mov
xor
add
push
cmovae
fbld
fld
sub
inc
mov
mov
xor
mov
pop
bound
xor
cmp
bound
mov
nop
inc
push
rcrb
adc
and
sbb
bound
ss
dec
pop
daa
loopne
daa
inc
mov
push
or
int
xchg
cmp
add
push
or
sbb
shrl
into
cmp
adc
es
add
sbb
mov
dec
adc
cmpsl
nop
rorl
inc
rorl
dec
js
adc
push
adc
enter
addl
and
adc
inc
push
xchg
rorl
push
sub
aam
leave
inc
inc
stos
sbb
add
or
cmp
out
add
decb
adc
icebp
mov
adc
ret
sbb
fs
or
je
outsl
push
dec
sbb
adc
jl
inc
add
inc
sub
cltd
fimull
sbb
jnp
or
pop
jp
jl
subps
sbb
cmpsl
arpl
in
je
lock
popa
xchg
lret
call
arpl
insl
enter
cmp
mov
pusha
addl
push
nop
inc
test
loope
lock
push
bound
or
add
das
dec
adc
rcll
add
ss
xchg
sbb
stos
add
ss
sbb
test
mov
mov
add
sub
push
add
mov
leave
rclb
nop
das
or
jge
nop
or
ret
sub
xor
shll
push
sub
pop
or
or
add
jne
add
loopne
test
scas
aad
push
sbb
das
sub
xchg
mov
lock
in
rcpps
xor
sub
test
call
dec
and
sub
rol
add
jmp
push
push
mov
shll
inc
test
or
adc
sbb
les
sbb
int
lds
push
stos
cmpsl
mov
mov
fstps
dec
adc
in
sahf
lock
lock
dec
stos
and
scas
push
mov
in
add
adc
mov
sub
sbb
sub
stos
pop
push
xor
in
ret
icebp
add
in
sbb
int
repz
add
lar
das
adc
adc
add
add
out
adc
adc
inc
or
je
push
cmp
or
or
inc
or
add
or
fildl
loopne
std
or
leave
inc
mov
mov
sbb
test
mov
enter
das
xor
loope
test
nop
and
addr16
mov
stos
mov
mov
adc
repz
xor
invd
cmp
hlt
mov
shlb
add
and
pop
scas
xchg
mov
and
dec
and
mov
xchg
add
rcl
imul
sbb
popf
dec
adc
xchg
jae
pop
mov
nop
adc
mov
sub
mov
mov
jp
mov
aam
leave
or
mov
dec
add
jg
pusha
and
adc
or
xchg
push
pop
pop
lods
and
sbb
pop
add
das
enter
sbb
push
or
daa
adc
add
xor
add
sbb
pop
enter
and
adc
or
xor
push
rorl
call
ss
or
xchg
and
or
lret
mov
jo
sub
movsb
sub
xor
adc
in
icebp
adc
mov
flds
and
push
mov
lret
scas
sub
xchg
push
xor
sub
jno
add
push
or
jo
push
xor
jno
inc
inc
or
xchg
mov
add
mov
mov
in
push
xor
add
in
cmp
add
lret
inc
or
das
add
mov
ljmp
or
arpl
imul
xchg
clc
arpl
xor
mov
push
clc
cmp
mov
push
mov
xor
mov
cmp
jge
lods
loope,pn
out
jbe
sbb
fstl
pop
mov
mov
push
add
mov
shll
inc
mov
cmpl
sub
sbb
add
jecxz
or
dec
jge
jge
cmc
je
push
mov
in
or
or
inc
scas
and
mov
adc
cltd
pop
addl
push
ja
push
and
mov
test
lret
es
adc
sbb
sbb
stc
jo
or
xchg
lock
mov
xor
push
je
data16
dec
icebp
pop
in
add
lret
inc
dec
pop
sub
sbb
mov
add
ret
pop
mov
rcr
clc
pop
int
and
movsl
pop
adc
popf
sub
push
jne
fldl
ss
push
push
xor
testb
js
inc
std
fstl
out
push
sbb
dec
inc
or
push
xor
sbb
jp
add
or
pop
scas
inc
dec
xor
sbb
jo
xchg
push
dec
lods
add
ss
push
add
sub
sub
push
pop
mov
pop
xor
xchg
stos
or
push
adc
or
push
inc
add
sbb
jp
stos
sub
mov
xchg
cmp
jne
cmp
xchg
adc
insb
hlt
fwait
std
mov
sbb
sbbb
inc
loopne
or
shrb
lds
add
lea
jmp
xchg
cmc
pmaxub
xchg
push
outsb
stos
fldcw
push
loopne
popl
test
adc
loopne
fildl
dec
js
pop
inc
push
or
sbb
repz
dec
popa
dec
add
push
push
mov
cs
iret
xchg
cmc
lret
fdivl
inc
lds
subb
fwait
or
stos
call
iret
add
ljmp
leave
add
ret
and
mov
arpl
push
aam
pop
push
mov
sahf
jle
mov
pusha
xchg
shrb
decb
adc
jl
xor
jmp
cmp
jl
or
sbb
popa
idivl
mov
cmp
cmp
je
mov
mov
push
incl
incl
inc
jmp
movb
mov
push
pop
cltd
idiv
mov
mov
in
scas
mov
ljmp
sub
mov
jno
les
cld
cmpsl
pop
mov
push
mov
mov
sub
orl
pop
adc
movb
imul
ret
lods
bound
call
ds
lret
rolb
in
in
sahf
dec
testl
sbb
into
inc
or
lea
cmp
mov
lods
sub
cmp
daa
cmp
sub
and
jg
das
push
push
push
sub
jo
icebp
cmovno
lcall
shlb
test
sbb
dec
in
les
scas
add
adcb
xor
mov
leave
dec
mov
mov
push
or
mov
add
cmc
lea
push
mov
in
mov
jne
cs
or
push
daa
int
lahf
sub
int
ret
mov
jb
rcll
and
aam
lahf
dec
mov
repnz
fcoms
adc
lock
pushf
movsl
stos
jl
adc
mov
rcll
js
add
push
xor
dec
inc
dec
pop
test
das
dec
mov
or
mov
xor
cld
dec
or
and
adc
cmc
mov
add
jb
mov
daa
movsb
mov
aam
mov
enter
jbe
call
add
aas
jns
push
pop
push
xor
and
push
sbb
jnp
pusha
cltd
les
push
dec
lahf
or
les
xchg
fidivs
insb
mov
sbb
mov
xor
mov
test
fsubr
nop
in
dec
inc
push
fdivrs
jbe
mov
fmuls
loopne
movsb
cwtl
and
fmulp
xor
xchg
xchg
xchg
xchg
test
aam
fwait
xchg
xchg
out
mov
and
and
push
mov
iret
shll
outsl
sbb
jecxz
out
iret
ss
and
loope
dec
in
fldl
push
xchg
mov
jns
or
test
scas
or
sbb
push
jge
push
add
shll
sbb
and
test
mov
pusha
cwtl
dec
pop
xor
adcl
pop
xchg
leave
xor
sbb
js
sarb
cmp
dec
xor
mov
pushf
ss
and
xchg
mov
jl
enter
dec
mov
mov
cmp
dec
call
push
sbb
xchg
outsb
loopne
and
jge
lret
adc
xor
imul
dec
arpl
popf
jecxz
pop
fadd
idivb
aaa
clc
sbb
dec
mov
shlb
sub
sbb
scas
sub
int3
jge
push
test
loopne
daa
aas
cmp
pop
enter
sbb
lea
pop
movsb
xor
movsb
fmull
add
sahf
add
int
mov
jl
sub
and
mov
jo
xchg
mov
push
push
loope
jecxz
pop
cmp
bswap
lock
pusha
inc
fadds
inc
cmp
jecxz
js
and
add
dec
inc
lcall
adcl
popa
add
je
push
sbb
cwtl
dec
lret
dec
in
bound
dec
or
repnz
xchg
aam
push
push
or
test
cmp
clc
dec
or
mov
fxch
or
test
push
daa
push
dec
pop
pop
daa
ss
pop
cltd
and
je
mov
xor
jb
and
cmpxchg
scas
inc
pop
cmp
sti
mov
xor
or
and
xor
and
lods
xchg
shr
sub
loop
and
pop
test
jg
in
or
xor
xchg
arpl
adc
sbb
or
aas
lcall
pop
jmp
mov
pop
in
push
or
sahf
xor
scas
je
sahf
inc
es
sub
sarb
jp
sub
ss
sub
lcall
icebp
push
mov
sub
jp
cmp
sbb
add
prefetchnta
and
popa
xchg
je
push
jl
mov
and
aam
push
push
cmp
pop
jo
jmp
adc
push
out
rolb
pushf
xor
gs
imul
adc
jmp
test
loope
xchg
xchg
scas
movsb
mov
xchg
call
repnz
mov
inc
jp
aad
in
mov
push
and
in
sbb
sbb
rcll
cmp
icebp
or
add
mov
mov
push
pop
adc
and
js
cmp
mov
mov
sti
jge
outsl
test
sub
cmp
ja
pusha
adc
sbb
pop
pushw
inc
inc
into
adc
inc
out
adc
rol
and
inc
pusha
in
and
rcr
add
mov
clc
add
ds
icebp
inc
inc
hlt
adc
add
cmp
add
mov
jae
cmp
loopne
pop
add
int3
movsl
pop
rolb
sbb
add
inc
and
insl
or
dec
jle
fadds
inc
aam
repnz
xor
mov
mov
jns
cli
test
fcompl
jae
lods
aam
sahf
jg
add
or
movsb
and
xor
inc
or
imul
xchg
rolb
xor
rcl
xchg
jge
add
mov
xor
loopne
and
sbb
cmp
cli
or
outsb
cld
out
and
add
cli
mov
add
aaa
test
cmpsl
adc
je
jecxz
loop
lcall
lret
push
xor
inc
test
and
fsub
or
adc
push
pop
fiaddl
sub
aam
sbb
fmul
and
adc
cwtl
pusha
or
sbb
fcomip
shlb
pop
mov
cmp
sub
adc
jmp
cld
adc
in
and
xor
popa
lock
sbb
cmp
xchg
out
cmp
push
and
lods
imul
or
add
aad
sar
rcr
adc
cmp
movsb
and
push
mov
mov
in
add
adc
pop
loop
and
add
adc
mov
nop
outsl
fbstp
dec
shrb
sbb
inc
loope
sbb
fsubrs
ret
mov
adc
cmpsl
push
mov
inc
aaa
lcall
sete
fmuls
and
inc
cmp
sub
push
pop
in
add
in
adc
push
jge
fmuls
aam
test
inc
aas
popa
adcb
fdivrs
adc
or
sub
and
sub
push
or
les
mov
jne
ja
loop
mov
mov
ljmp
test
cmp
adc
lea
rorl
cmp
jb
cmp
push
cmp
lret
push
dec
cmp
cmp
in
cmp
es
xchg
lahf
push
scas
sbb
adc
cmp
mov
adc
pop
add
dec
adc
sub
sbb
jne
xor
push
add
add
inc
enter
inc
fsubrs
xor
dec
jno
pop
pop
jb
xchg
in
hlt
add
repnz
popf
movb
inc
cltd
or
jle
aaa
inc
inc
cmp
shlb
mov
test
sar
adc
es
inc
jmp
sbb
fstps
rcrl
cmp
sarb
jbe
pavgb
and
adcl
pop
jns
add
fwait
or
stc
and
or
or
and
or
xor
add
sbb
or
jne
cmp
lods
cli
inc
add
jo
inc
imul
mov
in
add
push
cltd
lcall
xor
or
add
jo
lcall
sbb
loopne
fwait
in
fstl
nop
pop
and
jge
push
jmp
cmpl
add
add
sbb
mov
and
ffreep
inc
mov
xor
and
mov
xchg
lds
nop
shl
or
sbb
or
jne
lea
cmpsb
out
imul
pop
sub
pop
imul
aam
inc
jp
js
es
dec
cs
inc
das
pop
or
sub
add
jge
adcb
fsubs
int3
lds
bound
test
adc
cli
add
sarb
mov
dec
popa
sbb
fdivs
adc
aam
push
fwait
adc
loopne
cmp
adc
push
push
nop
nop
aam
adc
sub
adc
pop
push
dec
and
stc
xchg
xor
jo
dec
push
daa
ljmp
add
pop
mov
leave
and
gs
cmp
nop
nop
movsl
xor
mov
ja
mov
push
push
popf
push
or
movsl
inc
lcall
int3
adc
movsb
dec
es
or
dec
sti
cmp
imul
test
mov
arpl
lea
mov
or
add
aam
sbb
push
mov
sbb
fs
out
pop
shlb
inc
adc
sub
xor
pop
aam
imul
mov
arpl
push
sbb
dec
mov
sub
sbb
mov
aaa
scas
or
push
push
and
daa
push
cs
add
stos
pusha
or
sub
imul
lock
jne
cmp
popa
push
xlat
dec
pusha
ljmp
out
push
add
push
jo
aaa
pop
in
enter
push
mov
jne
pop
fcompl
add
push
add
jbe
jb
or
cmpsb
mov
nop
cmp
sbb
icebp
fwait
mov
mov
cmp
ds
adc
push
or
add
add
cmc
dec
jl
pushf
add
in
dec
xchg
or
pop
push
dec
inc
sub
cmp
adc
and
jae
mov
fisubs
adc
pop
mov
jg
xor
ret
mov
std
dec
add
xchg
int
mov
inc
out
out
jne
or
pop
in
xchg
cli
push
fcoml
xchg
icebp
inc
fs
sbb
mov
push
push
pop
hlt
cltd
addr16
push
xchg
sub
add
pop
cmp
inc
dec
xchg
shll
pop
test
and
push
jo
add
in
leave
ret
sub
sbb
out
pop
test
sarb
movsl
push
sbb
cmc
sbbl
add
mov
xchg
push
sti
xchg
movsb
sbb
ds
or
insl
mov
push
ret
pop
add
mov
jp
pop
testl
pushf
dec
pop
adc
andl
test
add
and
xchg
xchg
xor
in
xor
inc
add
out
nop
mov
push
cmp
add
in
movsl
lcall
cmp
lcall
es
mov
cmp
jno
or
xor
pop
and
pop
cmp
mov
add
or
mov
movsl
cmp
jo
or
add
add
lods
decb
push
into
and
ds
and
add
xor
mov
sbbb
add
push
sub
or
pop
ljmp
pop
sub
je
pop
or
test
popa
jge
xor
in
dec
adc
add
or
insb
loope
inc
mov
mov
ja
and
nop
dec
inc
cmp
adc
push
dec
addb
mov
fimull
cs
pop
dec
jbe
cmp
and
adc
push
cmp
lock
pop
and
ja
sbb
lret
lret
rcrl
hlt
xorl
pusha
pop
add
orl
ret
cmpsl
mov
mov
out
mov
sbb
rcll
sub
inc
cmp
popf
pop
inc
pop
cmp
sub
push
cli
sbb
cmp
add
call
setge
dec
and
add
rolb
inc
mov
sbb
add
test
add
jbe
js
movsbl
mov
sub
jp
dec
dec
jns
or
insb
add
inc
mov
push
gs
in
and
loopne
scas
cwtl
fsubrl
or
pusha
nop
and
or
cli
roll
pusha
add
inc
adc
leave
add
xchg
inc
je
jg
xor
mov
incl
adc
xchg
mov
or
mov
mov
or
pop
pop
push
xchg
xlat
sahf
popa
push
pop
push
aad
dec
add
inc
pop
xor
sub
cmovo
inc
cld
icebp
cmp
dec
adc
ds
sbb
out
dec
mov
push
lds
add
push
shll
mov
mov
mov
inc
lods
ror
shr
push
adcb
ret
adc
adc
or
ret
sti
add
cmc
out
test
sub
loopne
and
and
xor
jno
and
aad
mov
aam
test
sub
lods
add
push
pop
arpl
cltd
in
punpckhbw
sub
push
and
xchg
and
pop
or
std
imul
jne
test
push
sarl
roll
xlat
popa
fdivrl
inc
sbb
cmp
cmp
bound
sub
movsl
mov
mov
ja
mov
aam
rclb
mov
es
adc
cwtl
mov
fsubrl
xchg
sbb
pushf
sbb
and
pop
je
add
sub
cmp
jl
imul
cmp
ljmp
popf
xorb
inc
push
imul
mov
jmp
sub
push
jmp
jecxz
cmp
pop
dec
adc
sbb
test
sub
cmp
test
popa
inc
scas
mov
and
pop
aaa
jo
imul
push
mov
xchg
add
jb
jo
and
popa
and
mov
adc
inc
sahf
insb
and
lds
push
xlat
std
and
jne
inc
stc
mov
loopne
pop
and
pushw
xor
xchg
adc
in
and
sub
add
push
in
xor
mov
mov
arpl
dec
je
inc
mov
jns
daa
andb
sub
jl
mov
fsubs
sub
cmp
rclb
lea
mov
jmp
mov
scas
je
mov
lock
or
leave
mov
sub
sbb
add
adc
xor
mov
daa
pop
roll
dec
sbb
fwait
sub
adcl
aad
xchg
sbb
adc
add
xor
jo
lods
dec
push
rclb
inc
orb
and
jbe
leave
dec
enter
mov
orb
mov
dec
aad
je
adc
or
dec
sbbl
xchg
movsb
mov
mov
add
xchg
popa
lods
sbb
aam
push
dec
cld
inc
movsb
shl
xor
pop
add
cli
push
jb
jmp
dec
inc
bound
adc
push
xor
out
loopne
pop
in
je
xchg
or
mov
orb
add
ljmp
xchg
loop
sub
push
je
clc
push
loope
inc
jl
cmc
mov
xchg
xchg
pop
adc
add
jne
or
cmp
je
jb
fnstenv
sarb
lods
repz
lcall
leave
push
adc
jecxz
adc
pop
mov
enter
jl
lock
xchg
nop
mov
adc
rcrb
xchg
add
push
and
mov
pop
leave
inc
mov
test
inc
mov
and
fldl
push
aas
xor
sbb
mov
aaa
andb
mov
movb
divl
repnz
cmp
pop
test
sbb
in
insb
dec
andb
push
push
adc
decl
pop
and
add
ljmp
xchg
push
cmp
or
add
push
sbb
dec
mov
fcmovb
rclb
pop
xor
inc
and
cmpxchg
adc
and
ja
or
xchg
mov
and
lock
daa
ja
lea
call
into
pop
xchg
int
imul
insl
mov
sub
dec
pop
pxor
or
ja
rorl
dec
cmp
shrl
dec
dec
jmp
xabort
push
int3
popa
pop
rclb
cmp
les
stos
sbb
js
push
pop
clc
inc
test
cmp
or
movsl
xchg
or
lea
inc
rorb
xchg
into
lock
mov
cmp
jb
jmp
xchg
cmp
lds
shll
push
or
ret
dec
mov
out
rorl
sahf
adc
cmpb
push
or
xchg
ret
inc
out
jecxz
rcll
adc
jns
jb
lret
xor
adc
push
inc
out
and
adc
mov
or
sbb
mov
pop
push
dec
outsl
sbb
shr
cmp
jl
or
xchg
ffree
mov
js
xchg
push
das
dec
test
mov
lret
es
add
lret
xchg
add
or
popa
mov
and
dec
add
fildl
sub
dec
fmuls
mov
ret
and
adc
adc
and
jbe
inc
cmp
lea
rcrb
cmpsb
adc
mov
inc
add
and
and
or
and
cld
fs
or
scas
aam
mov
adc
mull
mov
test
pop
xor
test
and
fisttpll
push
dec
and
push
ja
pop
call
or
pop
inc
xchg
addr16
pop
imul
dec
aad
daa
cmpsl
es
mov
push
dec
and
aam
inc
popa
fmull
adc
mov
and
push
xchg
std
adc
in
lahf
or
shlb
faddl
lea
cmp
cwtl
loopne
push
or
adc
xchg
add
xor
adc
add
pop
shlb
mov
loopne
lahf
lahf
lret
test
mov
cmp
lea
inc
loop
inc
cmp
pop
or
jp
test
xor
loopne
bound
dec
jnp
lcall
les
das
xorl
pop
mov
inc
scas
cmpl
adc
sahf
pop
adc
frstor
fistpll
int
popf
inc
call
arpl
cmp
dec
adc
sub
pop
lea
jl
mov
test
imul
add
popa
push
xor
cmpb
adc
pop
cmc
incl
test
pop
stos
sbb
fdivl
xchg
push
xor
sti
add
fdivl
aam
jge
pop
stos
add
insb
les
jo
dec
or
aam
scas
jb
fisttps
mov
cmp
inc
mov
adc
xchg
jge
sub
jbe
and
dec
push
or
mov
sub
in
mov
popf
mov
pop
pop
add
pushf
jae
sub
es
lcall
and
and
or
or
addr16
arpl
inc
and
fildll
dec
lods
and
jnp
dec
adc
jl
call
pop
mov
test
shr
movsb
mov
aad
push
lret
sarb
jg
fwait
adc
mov
test
in
sbb
xchg
cmp
xor
pushf
outsb
inc
cmp
dec
adc
push
adc
imul
mov
cmp
and
adc
pop
or
cmp
je
enter
sbb
pusha
fs
mov
or
adc
xor
adc
sub
pop
sub
jl
pushl
pop
fstpt
adc
and
mov
daa
sub
mov
add
dec
out
xchg
mov
aam
sti
lock
add
xchg
sub
outsb
mov
push
cwtl
push
push
out
push
push
inc
xchg
mov
test
jo
popf
rolb
push
pop
sahf
cmp
sbb
lock
rorb
sbb
inc
shlb
dec
adc
xor
fiadds
es
mov
les
mov
push
dec
and
mov
cltd
int3
dec
adc
adc
pusha
xor
sbbl
adc
cmpsb
push
add
push
pop
andb
adc
dec
or
test
and
jg
mov
push
push
adc
nop
movzbl
or
in
in
jmp
lods
fcoml
call
push
in
in
sub
push
xor
test
and
adc
stos
adc
sbb
jmp
push
inc
xor
ss
mov
push
dec
mov
adc
and
test
cmp
cmp
rorb
bound
mov
int
mov
pop
dec
pop
add
in
add
jae
into
xchg
pusha
inc
rcll
xchg
data16
dec
push
es
sbb
xchg
andl
mov
push
pop
cmp
add
lea
jo
sub
mov
mov
or
sub
cmp
dec
dec
ficomps
push
push
int3
add
dec
add
add
push
sub
es
dec
insl
inc
sbb
and
jne
add
dec
mov
sbb
daa
inc
inc
push
and
jmp
jbe
leave
sbb
xor
jl
jb
fcomip
subl
lods
or
adc
pop
ret
fbstp
jecxz
leave
adc
int
push
mov
push
stos
cmp
mov
cmpb
jecxz
shl
popa
pop
adc
sbb
push
xchg
sbb
nop
xchg
dec
rol
mov
sbb
mov
mov
clc
cmp
adc
out
sbb
or
mov
or
adc
add
xchg
shlb
mov
mov
fwait
mov
push
sub
inc
mov
sti
test
int
lock
pop
pusha
icebp
or
ss
cltd
cmp
cmp
ret
and
adc
pop
ljmp
or
cmp
push
and
dec
lret
lea
xlat
cmp
add
inc
mov
push
or
xchg
cmp
mov
aam
call
inc
xor
aaa
mov
lcall
jnp
test
pop
fs
icebp
add
rep
xchg
jbe
lret
popa
std
ss
and
fsubs
enter
xor
jo
push
add
push
cmp
sub
scas
fcom
movb
push
fiadds
lea
push
das
pusha
rorl
fistpl
dec
loop
and
jmp
insl
mov
imul
bound
cmpl
cltd
mov
rcr
sbbl
loopne
lea
gs
sub
dec
add
and
and
push
pusha
mov
xchg
jge
jmp
ja
je
pusha
fidivrs
sahf
popf
inc
xchg
fldpi
sub
mov
jle
mov
andl
pushf
ficoms
add
lds
inc
inc
clc
sub
xchg
loopne
push
adc
enter
push
mov
add
xor
dec
dec
add
fldt
mov
out
dec
mov
add
dec
jmp
xorb
sub
addr16
out
ljmp
adc
sub
inc
push
or
push
movsl
add
add
add
orl
mov
cmp
icebp
sub
je
mov
shl
aam
stc
add
frstor
fcom
add
push
neg
pop
sbb
dec
pop
clc
adc
pop
push
cltd
add
push
mov
jecxz
push
loopne
cmp
jmp
add
lods
mov
div
arpl
in
call
bound
fidivrl
hlt
sub
sarb
sub
jecxz
xchg
sbb
inc
or
pusha
add
les
mov
inc
add
pop
les
mov
add
jne
dec
adc
xor
ret
add
pop
sarl
push
flds
mov
push
xor
sarl
lcall
add
js
mov
es
jp
sbb
push
xchg
nop
lret
loopne
and
mov
es
mov
ja
dec
fadds
cmp
ljmp
adc
jmp
subl
adc
pop
sub
or
adc
and
mov
aam
mov
push
and
xor
test
pop
lock
add
adc
pop
lahf
nop
pop
add
insl
lcall
jbe
enter
xchg
add
or
cmp
or
jns
xchg
jl
mov
dec
dec
sbb
rcrb
adc
push
push
push
push
call
cmp
inc
jns
add
push
xchg
add
push
gs
xchg
test
cmpsb
mov
lods
imul
jg
push
mov
mov
jae
push
rcrb
add
add
icebp
or
xchg
pop
insl
cmp
outsl
lcall
or
jae
loopne
push
mov
cmp
or
clc
and
call
movsl
pop
sub
gs
push
adc
adcl
and
sbb
xchg
xchg
cmp
jne
jmp
sarl
popf
outsl
adc
stc
dec
inc
nop
pop
lock
add
in
fcompl
sbb
cwtl
and
ss
imul
addb
movsl
sarl
jge
mov
mov
ror
xchg
call
adc
mov
jmp
lret
sub
mov
push
push
vmread
xchg
enter
outsb
pop
mov
outsl
pop
and
or
insl
shl
push
jl
push
mov
pop
dec
mov
jmp
lock
push
movzwl
inc
mov
fistpl
addl
push
jl
cmp
loope
jnp
subb
mov
rorl
mov
add
push
xchg
pusha
leave
mov
ret
pop
inc
stos
outsb
mov
lret
sti
adc
mov
mov
and
mov
mov
push
cmp
push
ds
into
adc
adc
in
add
dec
cli
push
loopne
add
cmpsl
push
adc
push
scas
dec
les
or
xor
xchg
push
loop
hlt
or
or
cmpb
mov
mov
mov
test
inc
cmp
and
int3
std
and
repnz
dec
outsl
cld
mov
rcll
add
hlt
fwait
sbb
mov
movsl
movsw
push
loope
add
cld
movsb
mov
es
rol
or
mov
shr
mov
aas
int3
mov
inc
mov
adc
mov
push
jmp
lea
cmpb
or
rclb
xor
jg
push
sbb
mov
mov
sub
cmp
mov
mov
les
push
push
dec
add
stc
push
in
adc
and
push
cld
je
and
push
add
mov
movsl
scas
mov
and
mov
sbb
sahf
xchg
sbb
imul
xchg
outsl
loope
fmuls
add
mov
push
adc
lret
dec
loop
jge
or
fs
jp
sub
cmp
jl
adc
sbb
test
lahf
xor
mov
sbb
inc
dec
pop
cmp
mov
paddb
ss
adc
pop
adc
stos
xor
stos
and
xchg
sub
inc
test
clc
das
mov
sahf
dec
ja
ss
inc
add
push
inc
sbb
xchg
or
in
and
movb
add
daa
daa
daa
add
daa
pop
or
or
jnp
or
jbe
jmp
or
fwait
fwait
fwait
fwait
por
jmp
adc
pop
adc
fwait
fwait
fwait
fwait
push
adc
dec
adc
dec
adc
fwait
fwait
fwait
fwait
aas
pop
jmp
sbb
xor
jmp
fwait
fwait
fwait
sub
jmp
sbb
and
fwait
fwait
fwait
fwait
pop
pop
jmp
and
or
jmp
stos
xchg
fimull
push
inc
loopne
data16
push
mov
adc
fs
pop
xchg
out
setp
push
mov
sahf
leave
rcr
loope
icebp
cmp
out
stc
incb
xchg
or
adc
sbb
es
repz
sub
xor
iret
repz
dec
push
pop
pop
repz
repz
jno
iret
mov
add
and
or
or
decl
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
mov
cld
repz
sbb
in
dec
loop
sbb
or
jmp
enter
add
xor
or
or
jno
sub
mov
inc
mov
ret
ret
mov
sbb
mov
ret
add
adc
inc
pop
push
push
mov
push
mov
out
jbe
mov
sbb
rol
and
lcall
sahf
lock
cmp
aaa
mov
mov
jle
inc
cmp
jbe
dec
addr16
add
and
cmc
fs
ljmp
pop
popl
mov
jge
filds
cs
clc
nop
jmp
inc
pop
or
inc
pop
pop
push
or
fnstsw
adc
gs
dec
in
jne
add
inc
sub
sbb
dec
sub
aaa
enter
loop
sub
sub
dec
and
cmp
cmc
sub
add
inc
dec
inc
je
stos
fistpl
inc
pop
push
dec
dec
dec
nop
push
cs
and
push
adc
push
sahf
aas
xchg
push
dec
sbb
inc
cs
pop
mov
test
mov
enter
jle
and
or
enter
push
xchg
inc
mov
mov
lcall
popf
cmpsl
mov
add
mov
push
add
pop
pushf
shr
lret
dec
subl
jb
and
pop
mov
mov
test
or
clc
fwait
mov
cmpsb
dec
mov
loope
sub
bound
inc
xchg
lock
mov
movl
add
into
xor
bound
loop
mov
push
pushl
lea
cmp
jp
push
fnstsw
xor
sub
test
push
andl
int
dec
add
test
sahf
add
push
push
sbbb
ds
loopne
or
icebp
add
aad
sub
ret
jge
cmp
pushf
mov
add
mov
fnsave
and
inc
jne
jno
jge
in
clc
xor
push
data16
xchg
movsb
mov
inc
push
jo
outsl
xchg
cmp
mov
int
dec
loope
fcoml
mov
sbb
mov
jge
sbb
dec
push
push
call
mov
je
dec
sahf
enter
push
lahf
cld
ss
lret
lock
jbe
or
je
xchg
clc
clc
in
push
pop
rol
into
xor
or
into
xor
adc
add
sub
add
and
inc
dec
cmp
xchg
or
xor
inc
not
vphsubwd
insb
or
enter
loope
cmp
mov
mov
mov
in
js
mov
mov
loop
adc
les
adc
dec
inc
lock
imul
mov
mov
je
sbb
sbb
xchg
sub
xor
add
cltd
or
or
jle
and
inc
sbb
loope
add
mov
cs
or
lcall
cmp
test
lret
cli
sbb
inc
mov
mov
repz
add
jmp
movsb
mov
mov
mov
rorb
cmc
cs
jnp
cmc
add
dec
or
loopne
data16
mov
test
out
add
lcall
in
loopne
mov
imul
testb
or
adc
dec
bound
jbe
icebp
xorl
lods
push
test
dec
jbe
mov
cmp
repz
jno
push
sub
cmp
jne
adc
les
shlb
and
cltd
or
xchg
adc
cmp
sub
inc
imul
mov
sarl
push
das
inc
enter
jns
ret
add
sbbb
inc
out
bnd
push
ss
into
push
sub
add
incl
mov
loope
cwtl
push
cmpsl
cs
sbb
xchg
out
ss
add
cmp
loopne
inc
fidivrs
mov
push
push
mov
dec
ds
dec
repz
les
push
add
imul
imul
or
notl
xchg
xchg
dec
inc
int3
or
add
rorl
mov
sbb
dec
and
in
adc
scas
aad
push
adc
push
pop
cmpsl
or
mov
add
popa
mov
pop
mov
cs
sub
cmpsb
and
pop
repnz
fnstsw
cmp
mov
mov
or
lret
ret
inc
nop
lret
add
cmp
sti
mov
or
jp
and
push
sub
stc
repz
or
push
cli
or
mov
daa
push
jecxz
movsb
push
popa
mov
push
mov
dec
add
gs
pop
jo
xchg
mov
and
rorb
shlb
testb
xchg
sbb
jmp
mov
pop
dec
repz
pop
push
cmp
xchg
addl
ret
popf
jno
fcoml
sbb
lea
fsubrs
ret
add
jb
sbb
inc
lock
jno
sub
add
adc
mov
jmp
sub
or
lods
xchg
jnp
imul
cmp
test
orb
pop
and
or
xorl
repnz
cmp
push
aam
mov
xor
xchg
or
dec
bound
dec
sbb
inc
lret
add
dec
jmp
aam
call
pop
jl
inc
mov
in
cmp
bound
add
xchg
or
xchg
and
pop
inc
jb
dec
shr
dec
mov
test
add
pop
scas
adc
aas
and
sub
mov
lods
pop
gs
pop
jle
js
iret
mov
mov
insb
cmp
jne
js
jmp
cmp
je
mov
test
in
inc
inc
cmp
jl
rcl
mov
mov
or
nop
sbb
test
aam
inc
std
jae
insb
std
add
cmp
in
or
add
mov
xchg
add
lock
push
xlat
test
mov
xor
mov
orb
cmc
dec
add
push
add
dec
cld
enter
je
push
test
pop
daa
call
sub
sbbl
mov
insb
das
cmp
xchg
sbb
or
mov
and
pop
inc
add
pop
js
lahf
addr16
add
pop
mov
mov
lea
mov
mov
jmp
scas
and
dec
stc
mov
mov
cltd
add
inc
ficompl
push
sahf
sub
mov
pop
xchg
xor
pusha
ret
adc
icebp
or
xchg
pusha
or
in
mov
ror
and
sbb
test
xor
fstps
jns
and
xor
lods
sarl
nopl
sub
adc
cmpsl
xor
or
dec
and
or
mov
inc
lret
lret
push
outsb
push
push
push
ficoms
adc
sbb
or
ds
mov
icebp
inc
add
push
inc
push
mov
mov
dec
mov
push
lret
clc
pop
sbb
cld
add
in
add
or
dec
movb
adc
enter
sbb
lahf
and
xor
sub
xchg
xor
cmp
nop
outsb
xchg
lret
dec
js
mov
les
dec
xchg
mov
insb
sub
and
seto
fs
xchg
push
or
mov
mov
push
cmp
xchg
test
and
filds
orl
xchg
je
repnz
and
or
outsb
or
or
push
cmp
jl
sub
xchg
and
inc
mov
cmp
je
dec
idivb
lea
or
and
popf
push
and
clc
icebp
xchg
xor
sbbb
divl
std
jmp
lods
sub
mov
and
and
push
pop
jl
jmp
inc
or
xchg
out
push
out
xchg
mov
sti
or
mov
dec
sahf
mov
rol
cmp
sti
and
jbe
inc
mulb
jge
and
pop
data16
jo
bnd
jmp
rcrl
mov
and
xor
in
shll
sbb
bswap
inc
and
daa
insb
je
sarl
js
movsb
loopne
mov
sbb
push
push
mov
xchg
fwait
xchg
imul
sub
or
test
mov
call
stc
lods
or
push
push
icebp
cmp
cmpb
jge
adc
sti
jge
inc
push
hlt
cmp
jl
sbb
pop
xlat
jle
ret
sbb
les
mov
mov
pop
mov
or
dec
cmpsb
jnp
lret
mov
sahf
sbb
cmp
ret
pop
add
pop
push
add
jo
pop
and
scas
or
xor
movsb
sahf
js
add
pop
and
push
adc
inc
mov
xchg
inc
xchg
pop
ret
ret
outsb
add
mov
cmp
loope
jmp
jb
dec
mov
ljmp
sub
pop
add
dec
clc
dec
jne
pop
pop
leave
adc
jl
rorb
push
lret
push
imul
or
push
iret
add
mov
push
es
popa
cmp
dec
data16
jl
dec
and
inc
and
inc
sub
fs
inc
stc
jl
hlt
mov
insb
jl
sub
sub
cmpsl
in
insb
stos
jge
mov
sbb
dec
in
repnz
and
sbb
shll
pop
lret
mov
xor
cmp
clc
test
push
jne
lock
pop
clc
adc
jne
sub
jbe
add
cmpsl
mov
dec
movsl
adc
adc
inc
mov
loopne
mov
loopne
push
jg
push
cmp
lock
aaa
jns
je
inc
mov
imul
call
loopne
push
jne
pop
es
shl
xor
ret
mov
jmp
sub
add
inc
or
lcall
loop
push
rorl
push
inc
fbstp
xlat
gs
inc
xor
test
add
push
mov
inc
pop
test
adc
imul
or
iret
mov
leave
and
add
add
sbb
push
adc
mov
adc
lcall
loope
scas
cltd
or
cmp
adc
push
jns
jmp
scas
add
pop
add
aas
mov
adc
push
push
sub
inc
sbb
sbb
outsl
xchg
jne
bound
inc
adc
xchg
lods
outsb
or
and
add
inc
pop
pushl
push
sbb
aaa
fnstcw
icebp
outsl
push
cmp
cmp
fadds
adc
and
rclb
sbb
mov
decl
mov
es
pop
sub
lods
and
mov
pop
dec
or
and
mov
pop
pop
add
cmp
repnz
xchg
daa
xchg
testl
or
and
shl
xor
mov
lds
cmc
sub
cmp
jl
sbb
sub
std
jne
aas
frstor
cmc
aam
jl
pop
mov
scas
popa
insl
lea
jbe
lea
mov
pop
jge
lock
test
stos
popf
or
add
or
inc
imul
jmp
mov
add
xor
pop
push
dec
aam
jg
fs
push
xor
inc
rorb
cltd
xchg
into
inc
out
scas
jno
add
xchg
or
push
push
jo
dec
mov
std
stos
cmpl
lahf
sarb
and
gs
lods
inc
inc
dec
ss
call
out
int
shlb
arpl
test
int
pusha
push
and
and
jmp
inc
pop
lret
and
enter
mov
push
push
aaa
cmpsl
xchg
outsb
mov
rol
dec
mov
lahf
add
mov
pop
xor
and
rcll
pop
xor
push
pop
push
popa
xorl
test
push
push
shrb
pop
loopne
repnz
mov
ret
push
lret
sub
lea
mov
pop
imul
xor
add
in
push
push
cmp
pusha
and
sbb
sub
xchg
cmp
lock
insb
sbb
leave
adcb
incl
push
les
push
push
nop
push
and
and
xchg
jns
fs
inc
movsb
imul
mov
xor
orl
mov
or
jmp
pop
bound
call
fldz
fcomp
fnstsw
xchg
imul
sbb
pop
faddp
cmp
push
sub
push
test
xchg
or
inc
or
rcll
mov
xor
inc
add
cvttsd2si
push
mov
pop
es
pop
hlt
xlat
hlt
pop
hlt
push
pop
cli
inc
jl
cmp
nop
dec
ret
push
lea
hlt
fldl
dec
scas
jmp
loop
adc
scas
jne
leave
xchg
jmp
add
mov
push
icebp
dec
sbb
das
cmpsl
jnp
setns
and
sbb
std
dec
pop
movl
pop
movsb
aas
lcall
fldl
sbb
inc
sahf
and
rcrl
lea
gs
nop
sub
sarb
xor
je
or
je
xchg
mov
mov
push
test
hlt
dec
jecxz
aad
inc
mov
sub
fadds
pop
adc
or
enter
pop
dec
fsubl
push
inc
cmp
psubsw
add
push
out
test
jp
mov
loope
dec
cmc
mov
mov
mov
in
loop
fimuls
enter
aas
fsubrl
loopne
mov
imul
jo
add
lahf
inc
push
ret
push
cmpsb
lods
gs
cs
xor
std
call
mov
hlt
adc
stos
xchg
mov
subl
pushf
lret
sub
ds
mov
pop
dec
push
mov
nop
sarb
rcr
ss
sbb
xlat
dec
or
mov
lods
enter
test
movsb
add
inc
or
mov
fisttpll
out
les
jne
xchg
inc
jmp
mov
fmull
dec
ja
push
in
adc
pop
add
rolb
cmpsl
fs
out
jno
faddl
cmp
rolb
jno
lcall
sbb
and
roll
lock
push
sti
ss
mov
jge
sti
ss
js
and
ss
std
movsl
mov
or
sub
add
add
sub
orb
sbb
or
aaa
add
subb
popa
push
aam
dec
bound
aam
inc
test
fdivrl
add
push
push
sub
int3
or
dec
pop
jb
jns
movsl
hlt
adc
or
adc
mov
mov
lock
lods
adc
inc
cmpsl
rcrl
imul
push
pusha
xor
pop
loopne
stc
add
cmp
push
or
cmpsb
and
ja
sbb
das
xchg
lret
addr16
jo
or
or
lret
iret
pop
mov
mov
mov
shlb
scas
or
mov
test
add
rolb
add
add
sbb
adc
push
fs
or
sbb
mov
sbb
dec
or
or
jns
adc
js
jne
inc
pop
push
test
inc
test
jg
jge
cmp
cwtl
and
xor
int3
adc
or
mov
rcrl
insl
or
inc
add
jo
loope
pop
sbb
pusha
adcb
push
leave
cmp
adc
aam
fisubl
loope
clc
xor
sbb
cmpsb
lock
push
dec
add
push
inc
dec
les
cmp
repnz
ds
add
fld
lds
jno
lret
ja
or
addr16
jno
xor
aam
add
fadd
mov
dec
out
or
push
lods
push
sub
loope
fmull
loopne
in
mov
inc
imul
fcoml
shrl
sbb
adc
scas
inc
cmp
jb
push
jg
and
scas
push
lea
outsb
jne
push
dec
push
out
imul
xchg
push
push
inc
es
cmpsl
mov
adc
mov
xchg
inc
movsb
into
rorb
cmp
pop
add
pop
ljmp
or
shlb
mov
daa
inc
test
popa
jne
scas
fisttps
jns
and
mov
ret
lods
mov
call
inc
push
push
fs
ss
roll
xor
or
fdivrs
pop
add
adc
sub
mov
pop
or
jo
dec
jns
add
inc
cmpsb
sarb
fcoml
add
pop
push
lea
xor
push
mov
mov
inc
sahf
xor
xor
mov
dec
paddsw
rcll
jbe
and
sub
xor
iret
lods
pop
and
mov
push
insl
xchg
push
add
and
es
mov
or
dec
xchg
sub
sbb
mov
jle
cmpsl
push
sbb
xchg
mov
push
lods
fadds
leave
test
or
cmp
js
and
repnz
xor
addl
icebp
fmull
in
orb
cmpsb
xor
insl
cmpb
xchg
pop
enter
push
sbb
pushf
lahf
push
mov
push
dec
ja
mov
mov
xchg
in
pop
mov
int3
lcall
call
adc
fstps
pop
inc
and
xchg
or
aad
pop
insl
and
push
sbb
aaa
mov
sbbl
sbb
rcr
sbb
nop
bound
xchg
dec
aam
ret
inc
nop
xchg
mov
faddl
adcb
push
xchg
in
and
mov
pop
inc
or
pop
mov
bound
push
pushf
jo
xor
call
loope
incl
movsl
add
orl
out
jnp
imul
pop
xor
push
push
xchg
or
adc
ret
scas
inc
fcmovnbe
inc
jbe
rcll
cwtl
xchg
push
sbb
sub
cmp
int3
adc
push
mov
repz
jb
cmp
lods
push
mov
add
pop
mov
lret
xchg
jge
dec
inc
or
movsb
shll
inc
mov
divl
jo
dec
pop
ja
out
mov
jne
mov
outsl
add
jmp
inc
add
push
push
add
sub
pop
inc
jns
lret
inc
pop
push
adc
ret
mov
and
or
inc
imul
sti
dec
ljmp
cwtl
dec
loope
push
push
movsl
and
xchg
rol
rorl
cmp
in
divb
rcrb
test
add
mov
iret
sbb
add
mov
shll
jns
adc
xchg
ret
jnp
sti
popa
sub
inc
add
and
push
test
popa
xchg
pushf
mov
loope
test
arpl
xchg
ja
adc
jns
or
fiaddl
mov
xchg
pop
lret
add
scas
loopne
inc
mov
ficoms
mov
mov
nop
or
jo
aaa
nop
xchg
cmpb
mov
adc
mov
push
jl
adc
and
mov
inc
sbb
movsl
shl
adc
loopne
or
hlt
cmp
jmp
xlat
mov
push
mov
fdivrs
add
or
aaa
jae
nop
add
sahf
sbbb
pop
xchg
in
sub
xorl
push
in
call
push
adc
test
push
or
sub
inc
stc
or
xor
mov
mov
incb
add
mov
int
xor
add
lret
ds
pop
inc
mov
add
jge
jae
testb
dec
push
inc
insb
pop
clc
fsubrs
pop
fdivrl
inc
push
or
les
add
mov
test
pop
push
stos
xchg
imul
out
and
call
lods
arpl
js
or
pusha
inc
sub
xlat
add
sub
mov
pop
rclb
lea
xchg
and
inc
push
mov
or
es
push
adc
add
lret
add
add
sub
add
adc
push
imul
sbb
push
xor
mov
mov
dec
add
sub
pusha
xchg
push
inc
pop
xchg
xchg
and
gs
inc
and
xor
mov
push
mov
cmpsl
push
lret
mov
mov
xchg
dec
xor
mov
ret
mov
cmpsl
shr
adc
fildl
je
sub
mov
ret
andb
in
lahf
and
nop
dec
pusha
pop
add
rcll
dec
mov
inc
in
and
sub
loopne
cmp
and
cmp
inc
xchg
mov
sbb
inc
rol
pop
xor
pop
dec
loop
lods
pusha
pop
inc
jo
add
jecxz
pusha
and
add
jo
add
mov
clc
dec
mov
js
push
xor
addb
sub
call
adc
sbb
jecxz
ret
negb
xchg
jmp
cmp
sub
out
sbb
sub
adc
pushf
jl
aad
fwait
pop
add
push
or
pop
pop
xor
inc
pop
push
in
cwtl
push
adc
push
addl
sub
ficoms
test
add
out
scas
mov
cli
incb
push
inc
mov
lods
sbb
inc
imul
mov
enter
push
ret
xchg
cmpsl
jle
lds
jmp
or
mov
ja
or
arpl
insl
sub
push
jle
inc
fisttps
adc
mov
lahf
ljmp
cmpsl
gs
xchg
shll
jo
sbb
in
xchg
cmp
cmc
dec
popf
test
icebp
andl
mov
mov
sbbb
pop
push
mov
jne
loopne
dec
rolb
in
fs
ret
dec
enter
rorb
je
xor
xor
ss
mov
add
mov
push
pop
dec
je
fiaddl
imul
add
push
mov
clc
hlt
ja
cmc
ret
mov
inc
sub
xor
or
lods
sub
xchg
adc
cmp
enter
cmp
xchg
popf
inc
in
and
pop
and
sbb
jns
out
xlat
test
stc
mov
bound
xbegin
dec
iret
xchg
gs
mov
adc
lock
cli
cmp
sahf
xor
jle
mov
movzbl
cs
cmp
addl
insl
cmpsl
add
jge
mov
and
push
jl
mov
lods
pop
and
das
pop
test
sub
stc
or
mov
adc
jne
and
cmp
andl
jge
cmp
inc
dec
add
mov
dec
push
add
push
je
rcrb
test
adc
scas
cmp
test
ret
rol
inc
sbbb
in
dec
and
and
jle
mov
stos
dec
or
add
fimull
inc
mov
sbb
xlat
hlt
or
dec
icebp
or
cmpsb
jb
inc
mov
hlt
hlt
adc
ret
aaa
incb
inc
aam
cmp
fldl
je
or
sti
std
rcl
je
mov
sub
jne
mov
lea
xchg
fs
mov
pushf
jne
mov
lea
adc
jnp
push
nop
sbb
pushf
and
pop
or
or
test
cmp
fimull
push
scas
add
out
scas
test
mov
and
pop
lea
add
pop
aaa
or
sahf
fs
adc
insb
sub
adc
jns
jl
or
insb
pop
add
sub
int
adc
mov
dec
out
subb
mov
inc
inc
cmp
pop
and
sbb
lods
fs
out
or
movl
pop
mov
mov
fdivp
pop
mov
lea
mov
pop
and
mov
push
ljmp
mov
xchg
mov
push
sub
mov
mov
loop
fcmovnbe
cmp
popf
adc
cmpsl
loopne
mov
cltd
or
mov
xor
mov
pop
mov
in
cld
sbb
mov
ds
xchg
mov
adc
jo
enter
movsl
pushf
and
insl
enter
add
addr16
push
mov
std
add
cmp
loop
testl
and
cmc
data16
jae
imul
subl
cmp
test
jne
rcrl
insb
dec
sti
add
enter
int
jo
movsl
std
or
mov
xorb
in
and
std
or
sbb
cld
clc
or
mov
sahf
faddl
std
mov
adc
xor
ds
cli
ja
or
rolb
roll
clc
add
or
push
add
mov
push
lea
mov
jnp
adc
movsl
mov
and
mov
pushf
or
mov
lea
or
mov
jbe
fimuls
cltd
push
push
and
pushl
pop
mov
clc
sti
inc
pop
cmp
rorb
cmp
sbb
lods
iret
je
mov
sbb
adc
int
mov
xchg
icebp
imul
push
notl
divl
pop
or
pop
or
pop
xor
insb
inc
xor
aaa
arpl
loope
dec
imul
pop
push
nop
pop
fbld
jl
push
repz
jbe
test
jb
add
mov
jp
cmp
insb
inc
inc
xchg
and
aaa
nop
fistpl
test
jge
cmp
jecxz
xor
lea
movl
mov
xor
bound
popa
xor
or
ret
pop
jg
xor
xchg
xor
sub
mov
mov
inc
sbb
pop
outsl
jns
jnp
sbb
out
sbb
out
inc
or
and
cs
xor
mov
je
push
cmp
sbb
repnz
aad
and
in
add
pop
mov
mov
mov
and
rclb
cmp
push
sbb
jg
push
push
clc
add
pop
das
push
jbe
and
test
adc
into
icebp
test
enter
pop
insb
jnp
mov
test
repnz
arpl
xor
mov
imul
push
dec
ss
pop
call
leave
jae
add
mov
mov
into
loopne
and
mov
xchg
cwtl
inc
shrl
je
call
add
cmpsl
mov
rclb
das
inc
mov
xchg
pop
repnz
test
sbb
test
or
ja
mov
mov
aaa
inc
orb
cmp
xor
dec
ss
pop
lret
fisubs
loopne
leave
cmpsl
adcl
addr16
or
push
fcoml
jp
dec
dec
movsb
pop
int
sub
in
pop
sub
repz
xor
inc
adc
or
loopne
ds
or
ja
xchg
in
dec
leave
adc
or
fs
insb
and
xchg
dec
mov
and
or
add
jbe
and
loopne
mov
xor
pop
mov
jg
int
or
or
inc
popa
js
adc
clc
mov
xorl
or
aas
lret
bound
ror
testb
addr16
jbe
sub
adcl
addb
cmp
dec
xchg
adc
fidivrl
cmp
jne
cmp
mov
jl
and
xor
sbb
je
and
js
data16
fdivr
popf
inc
addr16
sub
rorl
or
push
or
push
add
insl
sub
lea
jmp
mov
jne
out
pop
cmp
in
pusha
aaa
mov
call
mov
jb
sbb
jne
test
adc
xchg
sarb
adc
mov
ret
cmp
mov
sti
imul
bound
shll
inc
inc
inc
dec
sub
jmp
inc
fs
sub
rcrb
cmp
imul
bound
sbb
xchg
daa
and
repnz
jmp
or
mov
test
loopne
popf
fimull
fildll
xor
imull
test
test
dec
jge
push
pop
xorb
pop
push
jns
pop
dec
and
addl
and
and
mov
pop
movsl
movsl
jo
and
push
movsb
xchg
push
in
pop
or
popa
cmpsl
aam
pop
in
mov
repnz
ss
add
pop
rcrl
je
push
mov
mov
sub
fcoms
sub
in
aam
mov
inc
cli
andb
lret
inc
push
xchg
call
imul
lods
cwtl
or
sub
fdivl
xor
add
cs
or
fmull
add
pop
les
enter
sbb
push
stos
jnp
in
aam
adcb
daa
jo
or
jmp
les
je
pop
lods
add
push
push
dec
clc
xor
je
adc
test
add
lea
jle
mov
fisubrs
mov
pop
enter
and
adc
xor
inc
cmp
adc
rclb
pop
mov
shlb
mov
aaa
xor
outsl
pop
push
sbb
mov
add
adc
pop
xor
mov
push
mov
sub
les
mov
sbbl
inc
push
pop
jge
repz
inc
jge
push
xor
or
das
test
cmove
inc
cmc
fistps
xor
clc
add
repnz
cmc
and
clc
repz
fldenv
dec
xor
xlat
fdivl
test
mov
sti
dec
pop
cmp
add
aam
les
adc
filds
mov
icebp
push
mov
xlat
xor
aad
test
cmp
out
cmp
mov
fs
jmp
adc
sub
mov
pop
test
dec
mov
jmp
dec
repz
iret
lcall
ret
jne
jbe
imul
push
insb
inc
loop
and
jle
lret
inc
sbb
je
inc
imul
sbb
add
test
pop
enter
push
xchg
lds
loopne
cmp
jmp
rcll
iret
sbb
inc
add
add
sar
mov
xor
shr
xor
jo
fsubl
jb
pushf
sbb
lock
not
loop
test
fwait
push
movl
fmull
cmp
jbe
add
jmp
add
out
movsl
shll
jo
or
and
push
test
pop
add
inc
lods
push
shlb
adc
xchg
add
add
stc
dec
inc
and
push
cld
jae
inc
je
mov
jb
adc
outsb
loope
sbb
sub
add
pop
push
out
fadds
test
mov
bound
pop
and
sbb
mov
jl
sarb
adc
cli
rorl
rcrb
out
lods
daa
sahf
icebp
sub
in
movb
jno
iret
jne
popl
add
jb
cwtl
mov
je
mov
nop
mov
enter
dec
and
out
fadd
push
xchg
mov
inc
jnp
popf
mov
outsb
cld
inc
fiaddl
repnz
adc
mov
lods
or
loope
xor
or
cmp
or
mov
idiv
adc
cli
popf
rcrb
shrl
or
out
aam
mov
push
repnz
orl
ja
sbb
and
shlb
mov
xchg
cmc
or
es
out
xchg
sbb
rclb
arpl
pop
and
int3
pop
xor
subb
std
adc
cltd
xor
fnstcw
xor
jnp
stc
add
pop
adc
push
sbb
andb
push
lods
ficomps
push
popa
xchg
or
jmp
mov
negl
mov
mov
add
push
or
and
or
pop
and
xchg
add
loopne
inc
cmp
sub
push
pop
js
fldt
mov
aad
push
ja
dec
mov
sbb
and
inc
xchg
and
mov
cmp
stc
in
xor
pop
dec
mov
test
jo
add
mov
ds
xor
or
das
test
pop
push
dec
pop
or
gs
enter
mov
pop
push
fcmovb
inc
or
mov
mov
and
sub
fldenv
loope
ret
mov
mov
cwtl
jp
push
adc
adc
xchg
dec
mov
add
pusha
cmp
sub
fisttpll
mov
sub
clc
xor
adc
das
je
dec
cwtl
push
pop
jb
ret
stos
jo
mov
cmp
pop
adc
test
add
mov
cmp
daa
arpl
daa
iret
enter
les
sbbb
repnz
clc
and
test
shlb
mov
dec
subl
fisttps
vunpckhps
jmp
push
xor
ret
cs
sub
adc
js
sbb
xchg
aad
inc
lret
test
pop
sbb
in
and
sbb
stc
cmp
xchg
rcrl
add
dec
sahf
cs
push
pop
dec
repnz
in
dec
dec
enter
lock
jns
mov
test
xor
dec
push
rorl
sbb
sbb
and
xor
and
into
scas
xor
jns
sahf
xchg
sbb
sti
imul
adc
mov
pusha
push
mov
mov
adc
mov
jne
insl
or
sahf
ret
cs
iret
sbb
nop
daa
ss
in
lods
pop
xchg
push
cwtl
sub
mov
dec
push
or
sub
pop
cwtl
or
in
xchg
mov
movsb
push
and
xchg
ja
test
pop
add
test
sub
sub
mov
xor
mov
push
das
es
mov
mov
mov
fwait
jl
dec
pop
and
les
lods
mov
subb
int3
pop
ja
rolb
je
shlb
insl
adc
scas
pop
jne
out
pop
dec
pop
les
sbb
sub
push
sbb
ss
rcrb
push
jbe
push
push
pop
pusha
loop
inc
adc
adc
subb
jle
add
pop
add
fnstenv
nop
cmp
mov
fildl
mov
push
sbb
add
inc
pop
aaa
mov
and
in
sub
push
sahf
pushf
sbb
rolb
loopne
xchg
or
add
push
add
xor
or
cmp
pop
mov
jecxz
add
sbb
scas
sbb
adc
mov
psubsb
test
inc
push
and
inc
rcll
arpl
sbb
mov
push
push
dec
test
addl
sbb
sbb
pop
mov
cmp
jle
push
push
sahf
lret
test
push
pop
add
and
fs
and
test
or
add
insl
add
add
lods
or
arpl
sbb
xchg
mov
inc
aam
xchg
in
rclb
movsl
push
test
or
fisubl
ret
lock
fdivr
aaa
push
inc
push
addb
adc
push
or
mov
cs
and
mov
adc
inc
pop
mov
adc
and
and
jecxz
push
push
or
pop
and
add
outsb
adc
and
pusha
leave
in
xchg
stos
dec
inc
jbe
adc
sub
adc
jge
pop
push
cmp
bound
push
scas
js
lods
cmp
je
jbe
inc
mov
sti
stos
jb
ja
dec
je
or
jle
cli
imul
mov
shr
mov
jb
or
jae
pop
pop
nop
lcall
nop
pop
mov
pop
out
nop
jcxz
dec
push
in
push
pop
push
mov
lods
repz
jge
mov
xor
jmp
lahf
sub
adc
jne
or
movsb
push
out
add
push
fstpl
and
and
or
xor
popa
aaa
fbstp
mov
inc
call
dec
lock
adc
sub
add
or
sub
push
adc
pop
pop
push
test
inc
cmpsb
sub
loope
pop
loopne
dec
loop
fildl
roll
iret
mov
jnp
mov
lds
or
push
insl
dec
add
or
cli
adc
call
pop
mov
inc
dec
jmp
sub
mov
ret
xor
push
test
mov
and
nop
inc
pop
mov
add
dec
adc
inc
pop
shlb
add
es
shll
clc
sarb
pop
clc
push
lock
hlt
xor
inc
jge
aas
sub
push
cmp
loop
lret
inc
loopne
push
add
push
les
mov
pushl
movb
sbb
mov
cmc
pop
insl
gs
subb
xor
adc
xor
jns
inc
xor
add
inc
arpl
orl
add
xchg
xchg
or
ret
out
jl
pop
add
dec
add
out
sbb
mov
mov
fsubl
stos
mov
scas
pop
and
push
sub
push
mov
cmpsl
add
jecxz
push
pop
push
sbb
int3
pop
test
or
adc
gs
mov
sub
mov
in
or
mov
js
mov
rolb
and
dec
rcll
pop
clc
sub
push
add
or
adc
add
cmp
pop
mov
or
mov
fidivrs
loop
icebp
and
add
ja
mov
and
sbb
fisubrs
aaa
arpl
pop
nop
adcb
jbe
clc
ja
das
mov
inc
mov
cwtl
push
xchg
sub
push
mov
sti
add
sbb
add
ret
je
loopne
add
and
aam
nop
mov
and
in
sub
jmp
sarl
or
jno
dec
pop
inc
cld
sub
cmp
push
or
in
dec
add
xor
push
jns
adc
repnz
pop
mov
or
decl
and
and
inc
or
sbb
dec
jae
dec
push
movb
add
lock
sub
or
dec
sub
push
mov
out
jecxz
jg
and
add
jge
adc
cmp
add
add
push
hlt
mov
jl
sbb
and
adc
push
movsb
popa
inc
add
lahf
rcrb
pop
or
jmp
sbb
test
pop
pushf
les
pop
ret
shlb
add
push
push
jle,pn
pop
mov
out
ljmp
jmp
call
mov
out
sbb
pop
push
outsl
push
out
inc
push
fsts
dec
adc
pop
fisubrl
dec
in
push
inc
add
cmp
cmpb
fs
add
in
push
hlt
pusha
mov
push
pushl
stos
sbb
pusha
add
data16
ss
lds
jl
push
push
inc
mov
xchg
test
or
adc
and
push
push
inc
push
push
hlt
clc
dec
jge
adc
push
sub
push
or
adc
daa
cltd
jmp
push
lret
add
inc
dec
scas
ret
adc
sub
out
jg
dec
jl
les
add
pop
push
inc
add
or
adc
or
insb
enter
or
inc
in
add
je
dec
cmp
push
pusha
or
xchg
and
dec
adc
call
inc
nop
shlb
mov
inc
je
mov
les
fadds
cmp
pop
call
push
aaa
test
add
addb
adc
jbe
insl
sub
call
or
dec
inc
dec
rol
push
mov
jmp
repnz
outsb
sbb
xchg
ss
xor
pop
xor
dec
sbb
inc
xor
and
push
mov
adc
jge
adc
push
add
jecxz
jmp
xchg
xchg
cmpsl
outsl
mov
adc
or
ror
adc
cwtl
inc
roll
fwait
pusha
loope
or
aas
lods
inc
imul
adc
or
pop
or
add
or
sub
add
leave
push
loop
aam
in
sub
push
mov
inc
push
loopne
xchg
push
jecxz
xor
int
test
xchg
pop
in
pop
mov
pop
inc
loop
pusha
mov
clc
imul
lret
push
pop
xor
fsub
rolb
dec
xlat
fsubrs
ret
imul
xchg
sub
mov
lods
int3
mov
mov
rorl
enter
jne
outsb
dec
pusha
jns
rcl
lea
repz
inc
lea
mov
or
mov
or
js
and
sbb
mov
push
add
dec
or
xchg
dec
add
or
or
jge
cli
push
in
outsb
adc
aad
mov
dec
pusha
mov
rol
mov
ror
xor
shr
sub
idivb
inc
jnp
xor
shr
icebp
add
add
add
mov
lahf
addb
or
mov
push
or
and
xor
add
add
aam
sub
push
stos
sbb
push
xor
aas
pop
mov
into
ljmp
add
xor
shrb
fiaddl
cltd
xchg
aaa
jo
cmp
mov
repnz
push
sub
dec
movsl
sarb
or
notb
not
ret
rcl
add
add
shll
xor
fmuls
add
rcl
scas
loopne
enter
xor
sub
inc
push
xor
ljmp
shll
push
rol
out
add
push
xor
pop
dec
fcomp
loopne
xor
jae
mov
in
aam
lret
call
bound
cmp
jns
punpckldq
push
cmp
sbb
add
les
xor
adc
mov
xor
rol
mov
call
lcall
xor
dec
in
in
loopne
rorl
cmp
pop
cmp
pusha
and
in
xorl
xor
or
int3
aam
mov
or
imul
and
out
iret
or
mov
into
add
and
es
shrb
pop
add
mov
mov
addb
push
ret
push
jo
ficoms
add
mov
mov
inc
fistps
repz
adc
push
loop
mov
sti
rcrl
add
add
pop
jbe
cmpsb
shlb
fisubl
pop
insb
add
and
add
gs
lcall
mov
in
sarb
int3
popl
lret
inc
mov
ret
fcoms
or
cli
stos
adcb
aam
aaa
cmp
shll
and
inc
in
and
call
fstps
add
push
or
push
cli
xor
xor
lcall
dec
inc
imul
sub
xchg
pop
lahf
jo
add
push
orb
push
xor
add
dec
lcall
push
xchg
pop
mov
push
add
or
adc
cmp
and
push
push
pop
add
dec
cmpb
xchg
or
fcomps
sbb
push
mov
push
add
xadd
or
inc
lcall
nop
pop
pop
sbb
imul
and
pusha
xchg
xchg
pop
mov
adcb
dec
jno
arpl
fs
adcl
in
xchg
cmpsb
imul
stc
cmp
stc
mov
adc
inc
dec
mov
sub
dec
negb
imul
loopne
out
pop
gs
or
and
add
or
movsl
and
cmp
sbb
push
dec
out
loope
or
aas
pop
add
sub
mov
dec
add
inc
filds
cs
push
pop
xor
inc
aaa
sub
add
sub
add
in
sahf
dec
pop
xor
add
test
enter
adcb
add
sarb
and
or
jnp
mov
jne
jns
movsb
mov
ja
incb
cmpsb
mov
sub
shll
stos
jne
or
adc
add
sub
jl
sub
out
mov
add
out
mov
or
mov
dec
jne
pop
adc
dec
in
mov
add
mov
idiv
test
jl
sub
mov
cmp
jbe
or
rcll
fs
push
pop
adc
or
sub
jae
push
pop
fadds
out
pushf
xchg
pusha
rep
or
mov
aad
shrl
push
pop
loopne
inc
out
fcomip
ror
mov
notl
arpl
adc
mov
and
xor
popf
adc
test
push
mov
aam
inc
nop
ja
sbb
mov
dec
adc
add
daa
jecxz
fmull
arpl
lea
push
inc
fwait
mov
mov
xor
sti
or
in
cli
pop
push
pushf
aas
ss
sbb
inc
mov
sbb
xor
sbb
add
shrl
lods
or
sub
jecxz
loope
xor
rolb
or
or
inc
test
push
add
lea
in
jae
mov
loope
and
test
daa
in
mov
add
dec
add
adc
cs
xor
add
xchg
ss
xchg
icebp
cmp
dec
dec
xor
sbb
loopne
and
rorb
push
jle
ret
cmp
or
fcmovnu
or
pusha
ljmp
imul
add
sub
and
inc
in
inc
cmp
mov
cmp
pop
ret
dec
sbb
out
xchg
dec
push
adc
sub
dec
es
sub
out
cmp
sub
popl
cs
clc
adc
push
cmp
mov
pusha
push
mov
loopne
jnp
loope
sbb
cmc
mov
pop
cmp
loopne
cmp
sub
cmp
adc
mov
sti
lcall
std
add
pop
add
loope
sub
push
jb
or
dec
jae
mov
dec
jle
and
push
sbb
fimull
bound
jecxz
adc
call
adc
add
inc
sbb
push
push
dec
ret
shll
in
jo
or
aaa
cld
add
repnz
or
sti
orl
add
pop
add
ljmp
push
xchg
add
cmp
mov
and
push
cmpsl
mov
lahf
icebp
pop
inc
mov
fimull
mov
or
repz
dec
adc
push
test
mov
dec
push
dec
shll
mov
and
mov
and
iret
scas
jnp
xorb
adc
push
push
stos
jae
add
or
inc
test
adc
add
add
or
xor
outsb
jge
mov
pop
inc
inc
pop
addr16
adcb
xor
mov
or
or
testb
sub
add
pusha
dec
mov
leave
pop
ljmp
adc
or
inc
mov
and
and
jmp
ret
or
out
adc
push
mov
pushl
ret
add
jbe
test
sub
lods
in
stc
or
inc
mov
inc
mov
inc
or
dec
and
je
push
push
ret
inc
xor
sbb
mov
push
or
pop
shll
out
sub
mov
and
dec
ret
jbe
test
data16
fildll
fcoms
inc
std
pop
xor
js
jno
pop
cmp
cmc
loopne
xor
daa
es
and
fmull
sbb
adc
xchg
sub
movsl
adc
fwait
mov
in
jb
and
push
cmpb
dec
ss
jge
xchg
xlat
pop
push
jbe
xorl
pop
hlt
out
push
js
sbb
or
lahf
pop
stc
out
cs
push
push
addl
mov
test
jbe
mov
outsb
jae
ret
insb
mov
cmp
icebp
divb
xchg
adc
cmp
cmp
fimull
pop
jne
inc
jb
xchg
sub
add
dec
in
xchg
xchg
cmp
adc
ret
xor
add
sub
pop
push
mov
mov
push
push
test
mov
dec
repnz
add
lods
in
push
or
add
popa
test
mov
iret
mov
push
mov
sbb
fwait
or
push
jae
push
xor
jp
sarl
jb
jmp
into
jbe
stc
cmc
rclb
ds
inc
fmull
stos
sti
xchg
sbb
add
aam
enter
adc
mov
in
xchg
fidivl
cmp
and
mov
push
sbb
push
pop
xchg
and
sub
add
fdivr
movl
leave
add
mov
int3
sahf
ljmp
jne
add
and
test
push
push
movsl
lea
mov
push
xchg
push
and
pop
xchg
inc
mov
dec
push
add
pop
dec
inc
and
jne
sti
push
mov
and
sub
or
add
outsb
and
daa
adc
dec
mov
pop
add
add
add
sub
cmp
dec
mov
add
roll
out
movsl
pop
adc
movsl
movsb
push
int3
inc
jno
pop
cli
push
push
or
adc
xchg
cmp
push
addb
or
mov
mov
wrmsr
fcoml
fiadds
dec
bound
sub
ljmp
sahf
xchg
jbe
push
push
cld
cltd
jle
scas
xchg
jmp
pop
pushl
push
add
pop
or
popf
adc
sahf
lret
xor
sub
adc
xchg
mov
or
sub
clc
push
xor
imul
sbb
or
mov
push
sbb
repz
cli
mov
andl
andl
dec
push
adc
jb
shlb
enter
hlt
pop
test
aad
cmpl
je
cmp
push
push
test
inc
lds
inc
adc
sbb
clc
push
mov
push
sbb
dec
mov
cmp
mov
jns
inc
lds
dec
addl
inc
andb
inc
negl
aaa
inc
aas
addr16
and
bound
stc
ja
add
pop
cli
ja
ss
cmp
jb
lfs
push
mov
inc
mov
jns
jp
xor
cmp
sahf
data16
add
pop
ja
fmull
pop
or
pop
push
ret
cmpsb
mov
mov
add
xchg
lahf
lock
das
dec
push
loop
or
adc
addl
lods
sub
ret
dec
lahf
mov
fdivr
dec
xor
mov
jnp
mov
mov
gs
mov
dec
cmpsb
lock
xor
pop
ret
int3
lret
movsl
sub
test
outsl
cmp
enter
mov
clc
or
add
add
and
add
add
or
inc
loope
shrb
stc
and
out
xor
mov
mov
fstpl
fwait
clc
or
sbb
cmp
fucomp
fisttpll
mov
sub
mov
rcll
jo
sub
adc
sbb
pop
cwtl
mov
inc
dec
mov
push
ficoms
incb
repz
xchg
mov
jnp
enter
adc
xor
iret
adc
hlt
pop
pop
dec
add
add
push
aaa
imul
cmp
sub
je
pushl
inc
mov
push
or
pop
push
adc
fdivrl
and
cmp
jl
pop
mov
fsubr
inc
insl
xchg
ja
stos
jle
shlb
push
xor
roll
and
xchg
test
adc
jmp
add
inc
xor
flds
fistpl
or
jle
add
sub
jnp
xor
mov
fcomps
push
das
or
push
push
jl
adc
and
add
cmp
cltd
xor
lds
adcb
sbb
adcl
adc
fsubs
sbb
mov
mov
popa
jnp
cmp
cmp
movb
nop
js
insb
push
movntps
comiss
inc
das
mov
lcall
mov
xor
mov
hlt
orl
xor
or
push
mov
push
in
add
loope
lcall
add
add
mov
enter
shl
add
fisttps
loope
shl
xor
mov
mov
fidivrl
and
fsubl
movsb
mov
aam
adc
jne
cli
mov
adc
adc
cmp
rcll
incl
and
or
pop
add
sub
cmp
sbb
push
dec
test
add
jecxz
or
adc
iret
nop
mov
sub
push
jge
sbb
xor
test
push
sar
pop
or
test
add
and
inc
inc
cmp
cli
ret
lret
js
lods
clc
push
mov
nop
and
pop
hlt
mov
jl
and
rcrl
lcall
iret
rcl
or
add
popf
sbb
xchg
or
adc
jle
cmp
push
xchg
pop
push
sti
cmp
and
sub
mov
icebp
cmp
andb
aam
sbb
and
popf
adc
sbb
mov
mov
pop
add
push
xor
mov
or
add
xor
pusha
or
idiv
cltd
pop
insb
xchg
jae
xchg
pop
fistps
adc
imul
xchg
xchg
and
mov
push
dec
mov
ficoms
pusha
adc
xchg
adc
adc
mov
outsl
pop
ja
ja
cmp
dec
add
ficoml
mov
xor
jo
mov
or
or
clc
fs
shlb
inc
xor
int
rorb
outsb
push
les
mov
sub
adc
cld
popa
fwait
cmc
push
lods
push
pusha
stos
into
jl
push
cmp
mov
jmp
push
js
jbe
mov
push
arpl
jmp
das
mov
inc
cwtl
mov
int
nop
mov
clc
lret
cmp
arpl
loop
dec
adc
or
aam
inc
xchg
inc
fs
pop
dec
push
sbb
in
mov
shrl
push
ret
adc
sub
cmp
sbb
sub
pusha
cmp
lock
stos
in
aam
mov
dec
cmp
mov
xor
repnz
lds
shl
inc
jnp
mov
mov
or
lret
add
xchg
xor
test
sti
rcrl
mov
sbb
and
dec
and
adc
inc
pop
mov
movsl
jo
popa
or
pop
jmp
pusha
sbb
rorb
lea
fs
andb
adc
sub
pop
ret
sbb
or
mov
adc
mov
dec
xchg
sub
fsubrl
in
push
and
mov
orl
or
xchg
ret
mov
lea
ficomps
or
in
outsb
in
or
push
inc
sub
jmp
dec
sbb
int
and
imul
and
mov
aaa
popl
inc
or
sbb
push
jecxz
and
rolb
mov
cmpsl
cli
aam
adc
mov
cmpsb
cmp
ret
lods
rcl
xor
jo
mov
addr16
add
imul
dec
mull
push
rorb
outsl
mov
sub
imull
pop
repnz
sbb
sbb
pop
push
mov
mov
test
xor
inc
dec
add
cli
and
or
das
or
jmp
cmp
pusha
pop
scas
inc
mov
dec
pop
jp
movsl
mov
mov
packsswb
cmpxchg
cmpl
sub
daa
fdivr
mov
sbb
sti
pop
push
out
cmp
pop
mov
mov
ds
push
fwait
push
push
push
adc
and
jmp
cmc
cwtl
push
cmpsb
xchg
pop
sbbb
xor
inc
fcompl
fnsave
adc
incb
lods
test
adc
sbb
sbb
adc
sbb
loop
or
loopne
pop
inc
cmp
add
sub
ret
or
out
mov
aas
xor
out
cmp
jle
add
sub
and
inc
cmp
aas
adc
mov
sbb
inc
cmp
in
into
dec
cmp
sbb
jo
imul
jne
cmp
sub
pop
dec
xor
insb
movsl
rorb
or
xor
stos
xor
ret
pop
jmp
jne
xrelease
sbb
in
add
clc
pop
push
arpl
jo
stos
shl
dec
insb
mov
or
hlt
push
insb
inc
sbb
ret
nop
or
jo
or
fadd
jle
ret
cmp
rcll
push
or
or
pop
repz
add
jo
jne
addl
mov
or
inc
add
popa
sbb
jmp
xchg
xchg
js
cmp
jb
mov
sbb
pop
sub
adc
lret
jne
and
adc
mov
push
xor
dec
adc
xor
subb
in
jo
sub
sbb
cmp
je
hlt
enter
adc
mov
cli
shrb
mov
sbb
adc
push
add
push
cmp
mov
jmp
sub
ficomps
sub
cmp
jne
push
adc
add
add
mov
sub
adc
pusha
je
adc
cltd
lret
xchg
xchg
xchg
add
push
xor
dec
xor
subl
add
push
adc
ss
loopne
shlb
dec
and
out
jmp
ss
xlat
call
ret
dec
ret
adcl
lea
jne
jg
or
loopne
dec
adc
sub
or
cmp
inc
mov
shlb
imul
movsb
and
push
pop
lea
lods
xor
je
xchg
push
push
mov
out
dec
or
leave
or
add
ret
icebp
inc
mov
ljmp
inc
jno
jnp
test
in
push
push
add
push
lcall
mov
mulb
mov
xorb
sub
pop
mov
cmp
scas
rcrl
std
add
mov
out
mov
rorl
sbb
mov
cmp
sbb
or
sbb
dec
roll
add
cmp
inc
lock
dec
call
and
test
xchg
dec
adc
rcll
enter
add
lret
cmp
jne
data16
mov
adc
adc
sub
cmp
sbb
or
sbb
jmp
push
and
adc
xor
mov
and
mov
inc
mov
sbb
sbb
int3
jmp
std
cwtl
nop
inc
mov
add
push
mov
popa
outsl
sub
cmp
xchg
fstpt
xchg
push
jge
pop
pop
push
inc
ds
rolb
aas
fcomip
cmpl
inc
push
popf
inc
pop
xchg
dec
aam
sub
mov
push
mov
popf
stos
push
shlb
std
sbb
iret
jne
dec
mov
les
pushf
insl
ja
lods
cmp
loopne
lock
hlt
adc
test
xchg
lcall
xor
add
sbb
xor
sub
idivl
adc
clc
and
ja
sbb
dec
inc
loope
jo
sub
sub
add
jne
call
and
sbb
jmp
push
or
ds
mov
pop
pusha
shlb
adc
pop
add
mov
pop
jle
fwait
mov
je
repnz
out
ds
and
xchg
xchg
sbb
add
rclb
sub
stos
xor
and
xchg
sub
insl
hlt
jmp
dec
fcompl
cmpsl
ret
int3
add
cmp
negl
jle
mov
add
and
jne
add
cld
or
movsb
and
add
add
sbb
mov
xor
pop
add
or
xorl
jb
test
mov
pop
lcall
push
je
jmp
lret
dec
push
flds
cwtl
sbb
std
cld
and
pop
mov
adc
mov
and
imul
mov
add
cmp
inc
rorb
jae
adcl
sbb
out
or
pop
sbb
mov
fiaddl
inc
popa
ja
jmp
fmull
pusha
stc
pushf
xor
xchg
inc
or
dec
adc
pop
and
mov
xchg
mov
adc
in
xor
cld
in
pusha
fisttpll
cmpl
sub
ljmp
pop
loopne
adc
dec
lods
test
push
addl
cmp
xchg
fisttpl
sub
int
cli
aad
cmp
sbb
outsl
adc
push
xorl
add
fisubs
popa
roll
dec
loop
orb
mov
test
andb
pop
jle
jmp
add
pop
jns
or
jmp
pop
ss
pop
pop
int3
push
mov
sub
push
pop
inc
ret
in
or
cmp
mov
mov
jmp
fistpll
dec
jmp
aas
pop
shrb
dec
insl
cmp
xchg
or
adc
pop
or
dec
dec
pop
insl
sbb
sbb
jmp
add
ds
xchg
pop
ja
in
xorb
jmp
mov
pop
mov
call
add
xor
in
push
out
leave
mov
aad
mov
sbb
xor
test
push
cmpsb
xor
adc
popa
jo
pop
andl
jnp
nop
addb
fucomi
xchg
out
add
ja
sbb
dec
push
jo,pt
add
jae
lahf
adc
add
loop
mov
mov
pop
int
sahf
fisubl
pop
sub
sub
sti
add
jmp
cmpsb
pop
mov
push
add
imull
xor
sub
push
movsl
aas
inc
es
xchg
and
mov
adc
xor
sbb
ret
sti
or
jo
mov
sub
enter
sbb
push
mov
mov
popf
icebp
xor
adc
pop
imul
dec
sub
out
jb
cmpsl
inc
rclb
daa
jmp
xchg
push
add
in
push
push
jge
scas
pop
cmp
xchg
popa
dec
inc
or
inc
std
je
inc
sbb
add
mov
shlb
and
mov
push
jmp
nop
adc
scas
ljmp
jbe
add
mov
jns
rorb
xor
inc
inc
inc
jo
mov
jb
cmp
dec
push
cmp
shll
lock
cmpsl
popa
les
rolb
clc
test
and
sub
inc
mov
xor
push
mov
cmp
pop
xor
es
cmp
push
sarb
mov
push
push
mov
adc
and
inc
mov
fisubrs
mov
jbe
test
push
sbb
jmp
push
dec
int
adc
loopne
dec
lock
dec
adc
sub
lods
xor
and
sbb
in
jne
je
jmp
or
push
jmp
sub
or
and
push
xor
mov
inc
sbb
out
bswap
add
cmp
and
jmp
cmp
inc
mov
xor
icebp
fisubrs
icebp
and
shll
cmp
xor
mov
or
and
pushf
es
outsb
cmp
push
mov
dec
inc
pop
pop
push
add
and
adcb
gs
xchg
mov
scas
xor
and
fwait
add
test
and
and
scas
push
or
loope
adc
pop
pop
cmp
arpl
cmpsl
les
push
cmp
cmp
mov
dec
insb
add
jmp
dec
inc
cmpsl
add
stos
scas
pusha
jb
push
pop
in
adc
pop
lahf
pushf
push
popf
jl
dec
les
push
push
out
adc
adc
or
or
cmpsl
cmpsl
and
push
fildl
dec
add
and
and
jne
pop
test
jl
inc
jp
cmp
cmp
push
sbb
add
rcrl
cmp
sub
inc
pop
pop
sarb
test
cmpsl
cs
ja
lock
push
mov
jo
add
push
addr16
ret
xor
dec
sbb
jno
mov
xor
mov
cmp
cmp
imul
insb
add
jns
lcall
or
frstor
xor
testl
rcrb
js
aaa
dec
test
dec
add
shrb
pop
dec
nop
jo
mov
mov
jecxz
fdivrs
and
and
jmp
push
dec
clc
dec
or
scas
or
pop
pop
cmc
cmp
jne
fnstcw
mov
insl
push
and
clc
jg
fs
test
movd
movapd
push
clc
jae
fdivrl
shlb
add
lret
inc
aad
cmpsb
je
mov
or
push
lret
or
jg
push
jg
pop
loop
ret
adc
jnp
mov
mov
decb
adc
push
or
stc
cmc
add
adc
add
mov
ja
repnz
roll
add
sahf
add
pop
jo
addps
int
idivl
fldl
sbb
sbb
inc
pop
inc
and
leave
dec
aas
imul
xchg
adc
or
jo
nop
or
scas
adc
xor
inc
mov
push
mov
add
roll
movsb
adc
aam
pop
xor
mov
dec
push
push
ret
jge
mov
push
loop
dec
jge
jge
lret
pop
pop
and
test
imul
xchg
jb
pop
and
clc
and
adc
cmp
jb
neg
push
mov
cmpl
outsl
xchg
sub
jne
adc
or
rorl
lret
or
push
rep
mov
loopne
mov
dec
ljmp
pop
and
into
int3
dec
mov
arpl
inc
push
int
xchg
dec
fdivl
aaa
or
pusha
clc
jb
push
sbb
push
pop
and
pop
popa
mov
pop
pop
scas
push
mov
aas
sbb
inc
adc
or
rep
jmp
jmp
in
nop
sub
cmp
jb
insl
add
xor
dec
fnstcw
lea
cwtl
aaa
sub
push
push
sub
or
pop
cmpsb
fnstenv
add
add
fiaddl
mov
dec
add
movl
pushf
inc
add
add
sti
out
push
loopne
fcom
enter
jns
mov
mov
call
call
into
repz
hlt
hlt
clc
clc
cld
insb
mov
lret
add
fnstcw
jmp
and
sbb
pop
shll
push
sti
and
vpunpcklwd
xor
jl
cld
or
or
and
std
cld
out
mov
inc
scas
adc
push
xchg
daa
outsb
pop
sbb
stc
sub
ficoms
add
fiaddl
jl
pop
push
fldcw
out
add
lret
mov
push
out
push
add
outsb
in
xchg
mov
imul
push
mov
mov
or
push
fs
mov
jl
xchg
cmp
sbb
cmp
repz
sbb
iret
repz
adc
or
or
sbb
repnz
add
dec
mov
mov
aaa
mov
add
punpckldq
dec
loopne
jne
inc
push
and
and
or
and
cmp
mov
in
adc
je
sub
ljmp
fwait
jno
lcall
stos
or
add
mov
test
adc
add
push
add
push
pop
ja
sbb
mov
inc
shlb
push
mov
jmp
jp
je
mov
push
jmp
rorl
sahf
mov
data16
sarb
pop
xlat
fnstenv
lds
loop
sbb
nop
pop
add
pop
sub
mov
dec
je
cmp
mov
dec
js
sbb
je,pn
cmpsl
fimull
xor
and
or
sbb
call
movb
jne
popf
fldcw
and
xor
and
lock
inc
inc
pop
inc
aaa
pop
sub
push
fcomi
arpl
outsl
adc
dec
sub
add
iret
jne
xchg
jmp
push
sub
dec
sahf
test
fcom
inc
mov
add
push
jo
or
xchg
inc
push
xchg
aas
mov
stos
or
pushl
adc
adc
inc
cmp
jne
inc
cmp
ds
inc
sbb
push
sub
sbbl
push
push
adc
fadds
out
and
pusha
jmp
sub
inc
je
add
mov
cmp
inc
inc
cmp
add
cmp
inc
push
sub
xchg
test
dec
cmp
es
adc
cmp
ret
dec
mov
aam
xchg
shrb
pop
or
stos
add
lock
sub
ret
out
add
and
cs
es
out
or
scas
inc
hlt
cmp
mov
mov
cs
stos
add
enter
adc
sarl
sub
add
ret
fdivp
out
xchg
shl
shlb
dec
leave
sbb
cmp
or
or
inc
pop
cmp
mov
mov
push
movsb
push
rol
mov
inc
cmp
aam
lret
jne
sbb
pop
rolb
jg
inc
ret
xchg
lock
jnp
mov
push
movsb
mov
lods
jmp
jnp
mov
movl
sbb
sbb
cltd
inc
mov
seta
and
rclb
and
fbstp
or
pop
out
testb
ret
cmpl
or
mov
jnp
push
push
mov
adc
lods
sbbl
mov
sbb
orl
and
and
lods
pusha
or
jecxz
jge
dec
xchg
jno
lods
daa
movsb
adc
and
mov
push
or
ja
xchg
outsb
gs
or
mov
sub
dec
pop
jle
loop
inc
and
rorb
ja
loop
cli
mov
movb
jl
ret
jno
fmuls
imul
jmp
or
push
ds
mov
inc
ds
mov
cmp
jb
cmpsb
std
fstpt
sub
add
jmp
mov
dec
mov
mov
dec
dec
mov
inc
cmp
jb
mov
ret
adc
and
xor
aam
dec
mov
test
cs
enter
push
fcomps
popa
cmp
jmp
dec
or
inc
cld
lcall
dec
fbstp
popf
push
cmp
jb
lea
sub
or
mov
fisttps
sbb
addb
jne
mov
aaa
dec
jae
push
cmp
jne
es
jne
and
repz
adc
or
sub
mov
inc
lcall
dec
jmp
adc
jmp
std
std
jmp
out
sahf
xor
cld
ret
pmaxub
mov
js
adc
adc
jnp
push
stos
push
jb
push
push
movb
adc
sub
jmp
stc
hlt
or
adc
shlb
jle
pop
subb
add
fcoml
inc
or
testb
push
les
add
pop
shrb
jo
scas
mov
xor
mov
into
jae
pop
inc
mov
aad
push
insl
cmp
stos
std
or
or
mov
cmpsb
xchg
sub
aaa
and
xor
adc
push
loopne
and
push
lock
pop
or
and
jne
mov
xor
pushf
stos
add
add
mov
add
into
and
cmc
cli
out
dec
or
jg
add
mov
mov
dec
xor
adc
inc
sahf
mov
push
popa
gs
and
and
repz
jae
adc
stos
fidivrs
push
pop
jle
push
push
pop
testl
daa
push
adc
cmpsb
or
push
push
jne
or
lods
insb
push
dec
pop
pop
sub
pop
adc
push
xchg
aam
mov
loope
les
dec
jns
sbb
push
sub
loope
add
arpl
pop
jp
call
scas
adc
and
xor
int
sbb
sbb
xor
cmp
stos
shlb
call
repz
adc
adc
loope
add
iret
add
mov
sub
cltd
push
cmp
adc
ja
push
xchg
add
and
push
mov
mov
adc
jle
mov
xlat
pop
pop
ljmp
inc
ffree
jns
gs
xor
pop
xor
cmp
jne
orl
jmp
adc
jne
mov
nop
fimull
addb
push
inc
sarb
adc
cmp
inc
cmp
or
orl
ja
mov
insb
adc
pop
jne
dec
add
sbb
add
lds
lock
or
test
dec
clc
sbb
mov
jmp
cmpb
xchg
fidivs
lret
sub
cmp
ja,pn
xor
pop
mov
dec
adc
sbb
loope
sbb
xor
sbb
mov
and
dec
pusha
addr16
je
push
ss
aam
xchg
pop
cld
insb
and
sbb
inc
cmc
mov
nop
test
jne
test
jne
push
or
scas
inc
xorl
in
lds
jne
jbe
inc
mulb
clc
scas
je
cltd
mov
sub
pop
movb
into
jae
mov
mov
das
in
bound
test
jl,pn
inc
xor
imul
add
xchg
pop
jg
jmp
push
mov
cmp
or
and
je
test
sub
pushf
inc
inc
popa
add
loopne
stc
mov
cmp
les
sub
lea
data16
ret
clc
stos
mov
shr
rolb
mov
mov
pop
sub
shrb
jo
or
jmp
push
mov
out
loopne
mov
jne
testb
call
jmp
rcrb
enter
adc
adc
adc
sarb
rclb
and
mov
inc
inc
cbtw
testb
mov
dec
and
shl
adc
cwtl
je
hlt
cmp
aam
push
icebp
loope
jl
scas
les
aam
inc
xor
inc
mov
lods
inc
add
mov
lret
add
jmp
jle
xchg
or
and
sub
ds
push
aas
mov
pop
push
jmp
cmp
test
scas
sbb
mov
dec
in
sbb
lock
sbb
push
dec
push
movsb
ret
pop
mov
inc
lea
int3
decb
stos
adc
and
fs
call
and
pusha
inc
inc
and
push
dec
ret
pop
cmp
add
test
cmp
lock
jbe
flds
or
pop
jae
fwait
or
sub
dec
addb
ret
inc
mov
dec
rorb
inc
mov
and
xchg
adc
fidivs
sub
test
fists
xchg
push
inc
add
jg
cs
int3
add
loopne
je
inc
cmp
jb
or
div
lea
push
adc
js
movsb
jbe
dec
ss
add
movsl
test
enter
iret
inc
mov
mov
and
mov
and
mov
daa
push
mov
inc
dec
sub
mov
xlat
jne
push
out
cmp
sub
insb
sbb
sub
cmpsb
test
nop
sbbb
rolb
shll
or
dec
enter
rolb
shlb
mov
inc
mov
dec
or
lcall
jcxz
push
adc
sub
das
xchg
subl
and
push
sub
sbb
add
cwtl
sbb
loope
push
shlb
call
jge
or
dec
and
mov
loop
mov
inc
incb
sub
adc
mov
sub
std
add
or
inc
mov
dec
lods
push
or
ss
imul
or
adc
or
stc
xlat
rorl
pushf
clc
sti
pop
adc
cmpsb
pop
lahf
sbb
loopne
push
adc
in
repz
stos
frstor
add
sahf
movsl
lcall
fidivrs
repz
test
inc
data16
je
jle
jae
insl
push
cltd
lods
fwait
jle
push
pop
and
xchg
aad
push
popf
test
decl
push
jg
cwtl
or
sub
xor
push
imul
pusha
jb
pop
add
jno
icebp
jmp
fiadds
inc
rorl
in
xor
testl
push
icebp
scas
jnp
pop
or
and
fdiv
pop
sub
xchg
xchg
mov
sti
dec
pop
inc
push
mov
pop
and
jecxz,pt
pop
popa
add
je
push
adc
shlb
and
add
ljmp
sbb
mov
out
mov
xorl
sub
popf
addr16
dec
fcmovbe
mov
fmuls
and
imul
sub
push
lret
cmc
in
std
outsb
mov
je
sbb
ss
jp
mov
xlat
test
out
pop
or
je
cmpsb
fdivrl
fsubrp
lahf
push
push
cld
mov
lock
in
and
xchg
xor
inc
jno
sub
rcll
cmpl
adc
adc
sub
mov
mov
cwtl
mov
push
pop
sbb
test
out
stos
and
out
test
mov
mov
in
push
jnp
cli
sub
out
push
out
and
pushf
cwtl
sbb
fstpt
add
or
ret
xor
add
add
or
mov
adc
mov
cmp
push
repz
adc
cmp
and
add
jne
cmp
mov
nop
sbb
rcrl
add
xchg
mov
imul
add
mov
pop
inc
and
imulb
add
xor
aad
pop
fisttpll
jmp
mov
sarl
mov
inc
push
arpl
repnz
push
pminsw
xor
xor
ret
sub
pop
mov
add
cmp
cmpl
mov
sbb
lds
cld
mov
adc
mov
adc
pop
cmp
orb
in
lahf
or
jg
sbb
add
and
dec
ret
xorb
mov
ret
sbb
pop
lahf
call
dec
and
mov
push
mov
and
or
and
and
loope
paddb
push
inc
out
test
add
dec
jb
enter
push
adc
mov
or
pop
pusha
inc
aad
add
rolb
xor
popa
or
mov
into
inc
push
jle
inc
loop
les
push
push
outsb
gs
loope
jae
in
out
jmp
cmpsb
push
and
pop
add
out
push
or
sub
popf
pmulhw
cwtl
dec
sti
inc
cltd
and
and
fs
idiv
dec
mov
cmp
je
movzbl
add
sub
je
fidivrl
lahf
ret
lea
repz
imul
jo
pop
add
enter
add
daa
push
repnz
add
adc
jmp
add
aaa
dec
lock
je
lcall
flds
add
mov
push
push
inc
enter
pop
push
pop
jb
mov
or
or
xchg
add
or
in
cmp
or
cmp
sahf
xchg
pop
or
loop
inc
fisubs
lcall
add
cmpb
push
ja
adc
nopl
push
add
push
lcall
fwait
jb
sahf
xchg
sub
adc
in
repnz
ds
add
iret
adc
ret
sbb
out
rclb
lcall
adc
push
nop
adcl
push
push
pop
int
or
xor
sbb
add
sbb
inc
ficomps
inc
sbb
add
adcl
push
outsb
sub
sbb
je
inc
sbb
repz
sbb
xor
cmp
and
push
push
inc
push
pop
loop
add
add
add
sub
cmp
fwait
push
add
clc
dec
aam
add
cmp
xchg
loop
mov
jle
aad
repz
cmpsb
in
push
in
jno
lret
lcall
rol
lea
in
dec
repnz
cmp
add
mov
ret
dec
sahf
out
push
jbe
aaa
add
call
imul
dec
cwtl
jmp
inc
jmp
mov
or
sbb
dec
push
jns
out
in
in
mov
cltd
mov
enter
sahf
out
out
and
and
jge
sbb
sbb
lock
addr16
xor
icebp
add
push
pslld
nop
out
out
std
repz
std
cmp
hlt
rorl
pusha
hlt
mov
in
fwait
mov
repnz
div
inc
enter
idivl
cmp
xor
std
clc
clc
clc
cltd
pop
enter
stc
inc
stc
lock
cmp
cld
cli
cli
iret
in
jb
sti
sbb
stos
cld
dec
fmulp
dec
cld
cld
je
cld
push
bsf
add
xchg
ss
xor
repnz
xchg
sbb
adc
or
push
cmpsl
add
sub
add
sbb
lahf
lcall
sbb
pop
cmpsb
pop
mov
xorl
add
pop
std
sti
in
in
insl
push
in
icebp
inc
mov
stc
daa
xchg
sti
rolb
test
sbb
out
jns
xor
dec
sti
and
and
sbb
pop
jmp
jmp
and
in
add
xchg
pop
leave
mov
and
adc
out
out
mov
cltd
push
lock
and
das
cli
push
cli
xor
inc
add
jmp
cmp
xor
sar
leave
add
stc
lret
and
jns
lcall
mov
xor
add
stc
les
cmp
lret
sti
sti
cltd
cmpb
scas
mov
jb
or
jl
sbb
cmc
dec
dec
and
or
sub
mov
fnstsw
jne
icebp
mul
pop
shl
bound
and
test
mov
out
out
les
out
pop
repnz
mull
mull
sti
imul
ljmp
mul
inc
repnz
notb
mov
insb
out
in
pop
xchg
out
jno
notb
leave
and
in
rcll
cs
repnz
inc
pop
lret
mov
pop
xchg
cmc
and
pop
jns
lcall
jns
pop
out
fwait
and
jns
inc
clc
clc
jecxz
repnz
jmp
popa
cmp
xchg
cmpsb
cli
cli
jno
and
jne
adc
xchg
pop
push
hlt
sbb
das
pushw
data16
mov
cmpsl
xlat
hlt
idivl
jo
sti
cs
add
pop
lcall
loope
loope
xor
loope
repz
inc
repnz
push
cmp
mov
imul
dec
in
inc
repz
adc
andl
jb
pusha
leave
push
sbb
xchg
cmpsb
jmp
mov
mov
xchg
repnz
mov
jo
sbb
out
in
cmc
inc
xlat
mov
and
add
cmpl
mov
loope
sbb
rclb
js
divb
inc
repnz
pop
repnz
shlb
sub
cmp
sbbl
pop
pop
jb
lock
lock
pop
add
sbb
mov
jne
das
mov
xorl
xlat
and
mov
and
pop
and
test
xchg
movsb
pop
js
ret
movsb
in
or
ret
cmp
or
ret
cmovno
enter
push
add
add
fmuls
add
push
jnp
xor
or
mov
dec
add
xchg
mov
sahf
and
jmp
ss
or
jg
ficoms
pop
and
pop
pop
inc
fnstenv
fwait
in
add
pop
fs
fstpl
mov
mov
arpl
addr16
sub
out
mov
lret
data16
out
das
bndstx
pop
sahf
data16
sbbb
lods
gs
out
fcomip
std
push
push
mov
out
or
pushf
mov
mov
mov
mov
push
or
xchg
jne
and
std
lcall
mov
jge
push
xchg
push
test
pop
mov
push
pop
cmp
cmp
and
or
or
push
dec
fbld
fistpll
fdivs
mov
testb
repz
push
or
sub
aas
adc
lods
sub
repnz
loop
lret
add
lea
pop
sub
test
inc
add
push
or
or
into
out
testb
int3
rclb
in
inc
jae
adc
pop
jo
push
mov
in
push
adc
push
enter
cld
add
sbb
jne
insl
mov
xchg
adc
cmp
inc
pop
inc
jb
pop
movsb
mov
mov
pop
mov
inc
inc
inc
pop
ja
add
pusha
cmp
enter
pop
packsswb
fists
xlat
imul
fisubs
pop
inc
in
iret
js
in
inc
sub
adc
add
cmp
and
test
and
ds
je
add
roll
sub
inc
push
addl
into
enter
add
aaa
lock
cmp
adc
andb
lock
push
cmp
pop
inc
push
push
stos
movsb
ja
sub
hlt
add
mov
jmp
mov
hlt
add
add
dec
jne
jo
test
xor
inc
rorl
lcall
data16
adc
adc
stc
aad
sub
lret
out
adc
jne
mov
cmp
inc
inc
cmp
sbb
xor
out
jns
mov
jg
popa
out
dec
mov
push
push
mov
or
lcall
pop
mov
ja
and
mov
scas
pop
and
adc
pop
add
jno
out
pop
dec
jecxz
fmull
ret
add
inc
xor
outsl
or
add
add
clc
in
sub
or
je
xchg
ret
roll
shr
stos
add
testb
incb
cmpsl
pusha
or
sahf
add
mov
or
rcrl
test
adc
dec
jne
add
mov
mov
inc
and
adc
adc
mov
add
popf
shl
iret
sbb
pusha
push
cmpsb
xchg
xorw
das
arpl
repnz
push
dec
push
mov
mov
incl
inc
decl
jne,pn
xor
loope
xor
repnz
jg
aad
cmp
mov
jbe
push
cltd
pop
idiv
mov
mov
or
sub
inc
in
ja
mov
mov
xor
xor
outsl
xchg
test
jmp
cmp
jae
dec
cmp
add
inc
lret
mov
jbe
les
push
dec
and
or
push
jmp
fwait
out
inc
adc
cmc
cs
adc
movsb
pop
out
flds
jg
add
mov
dec
sbb
add
dec
gs
call
or
in
mov
or
dec
dec
je
push
push
jne
and
outsb
adc
incb
arpl
xchg
out
negl
or
int
aaa
loopne
mov
inc
gs
imul
inc
add
arpl
and
xchg
cltd
loopne
sti
idiv
mov
xor
add
dec
cltd
cmpsb
sti
or
jp
push
adc
lods
mov
pop
shll
stos
dec
mov
orl
jmp
cmp
jle
sub
sub
insl
or
sar
push
aas
jge
fldenv
add
pop
idiv
mov
sti
xor
xchg
inc
out
cmp
lods
fldt
jmp
mov
adc
xchg
and
or
jnp
push
loopne
rcrl
sbb
bound
adc
fs
jbe
insl
pop
fcmove
movsl
mov
sbb
pop
mov
or
je
insb
aaa
shlb
sub
sbb
sbb
sbb
jae
mov
cs
sbb
or
and
and
inc
ret
testl
call
loop
mov
ret
icebp
xchg
cmp
jmp
inc
insl
gs
and
jae
popf
push
pushf
loop
je
pushf
push
mov
sbbl
loope
aas
fdivp
inc
push
jmp
jge
pop
je
sbb
aas
push
enter
fs
in
jle
push
jmp
jno
mov
inc
gs
mov
shl
movsl
call
je
dec
inc
mov
rorl
rcr
inc
stos
sbbb
xor
push
pop
inc
xchg
or
shrb
push
and
cmp
aad
or
mov
out
aaa
subl
inc
mov
jl
test
pop
push
adc
mov
rorl
jg
mov
pushf
sbb
add
das
mov
andb
int
sub
push
je
nop
mov
es
push
movsb
xchg
pop
mulb
cmpl
xor
jge
jecxz
fwait
icebp
add
push
push
clc
mov
push
add
idivl
je
inc
adc
or
adc
jns
out
call
mov
sarl
sbb
pushl
lahf
add
ljmp
fadd
dec
xchg
rorb
jg
icebp
mov
push
pop
addl
dec
rolb
hlt
dec
js
push
cmp
push
loop
adc
lods
mov
rorb
mov
add
jl
mov
push
inc
jg
jne
les
xchg
sbb
enter
subb
pusha
cmp
clc
mov
inc
inc
cmp
je
xchg
mov
mov
sbb
adc
add
dec
push
inc
fidivrl
dec
je
sbb
xchg
push
and
dec
test
mov
mov
or
das
xchg
mov
incl
fadds
out
inc
clc
jl
mov
push
inc
sbb
ljmp
rcll
or
insl
imul
je
mov
sbb
or
xchg
dec
inc
add
push
stc
jb
adc
add
int3
les
inc
adc
dec
sub
adc
ljmp
sub
mov
addr16
test
jbe
aas
lock
test
cmp
mov
lahf
pop
cmp
je
mov
mov
adc
shll
lods
rcr
cld
inc
or
add
push
nop
or
mov
int
xor
sbb
fs
pop
add
sub
add
frstor
mov
push
fimuls
dec
movsb
jb
jns
sub
hlt
xor
inc
sbb
inc
cmp
mov
or
fiaddl
lock
mov
add
ja
mov
popa
bound
ds
jne,pt
jmp
dec
or
data16
in
inc
push
jmp
das
dec
jmp
or
sbb
xchg
into
push
popa
cmp
mov
and
shlb
pop
out
push
stos
shrb
jecxz
or
ret
sbb
sbb
les
jns
lea
cmpsl
cltd
push
fiadds
mov
aam
adc
cmp
xchg
jge
mov
and
imul
cs
xorl
inc
sub
cmp
or
lretw
cld
jnp
jmp
shlb
add
pop
push
cmp
ja
sarl
das
or
inc
inc
outsb
add
pop
mov
pop
push
inc
ja
or
or
add
sub
cltd
cmpsb
jne
ret
jnp
push
mov
xor
push
lret
xor
pop
imul
sarl
inc
jmp
aas
dec
or
or
jb
cmpsb
shrb
jns
xchg
filds
or
sbbl
jne
add
mov
add
add
aam
popf
and
fbld
pop
fldz
mov
xor
adc
and
movsb
and
in
mov
inc
xor
push
roll
clc
divb
dec
hlt
add
add
test
lds
pop
loopne
cmp
cmp
inc
not
dec
push
mov
test
cmpsl
negl
cmp
cld
jmp
pop
arpl
lret
pop
pop
xchg
push
jno
cwtl
push
fimull
push
push
jp
and
mov
add
shlb
ja
std
and
inc
add
lea
fs
mov
or
divb
dec
add
inc
sbb
xor
into
es
xor
popa
idiv
xchg
outsl
add
or
into
dec
lock
out
inc
mov
outsb
jbe
js
adc
cmp
incb
mov
jecxz
dec
stc
rclb
aad
push
and
or
cs
mov
shrl
insl
or
call
sbb
and
jmp
lods
xchg
sbb
js
insl
clc
pop
sbb
mov
sahf
enter
and
rcrb
cmp
jmp
adc
push
aam
pushf
enter
fs
pop
sub
jb
mov
jmp
mov
cmpsb
imul
dec
cld
loope
add
pop
sahf
std
data16
pop
out
add
and
or
dec
insb
loop
gs
mov
adc
rcrb
and
and
loope
fcom
loope
repnz
pop
sbb
push
cltd
scas
je
sbb
cld
arpl
imul
xchg
fidivrl
imul
pusha
sub
call
fsubrs
adc
xor
dec
test
add
or
gs
mov
or
jge
cli
inc
mov
sbb
adc
adc
mov
out
js
daa
insb
clc
push
mov
fstpt
push
jle
jp
mov
mov
inc
sarb
dec
pop
cmp
sub
jle
bnd
inc
fisttpll
lock
jg,pt
adc
pop
lods
popf
jnp
mov
lcall
xchg
cmp
enter
mov
and
pop
xor
shlb
roll
call
cmpsb
orl
fadds
in
addb
call
inc
adc
pop
sbb
das
dec
sbb
sub
sub
sbb
rorl
incl
or
and
sub
mov
mov
xor
dec
test
aam
and
add
inc
or
add
lret
rcrb
arpl
rolb
jno
faddl
mov
dec
imul
push
paddsb
out
out
into
add
or
push
add
lock
inc
scas
ljmp
call
sbb
dec
or
or
add
iret
xor
push
dec
or
pop
fisttpll
lods
pop
jo
inc
mov
sarb
sbb
mov
js
or
sti
sbbb
mov
outsb
lea
dec
xchg
xchg
or
js
pop
es
mov
push
cwtl
xlat
add
xor
inc
jg
pop
fdivr
inc
rclb
into
lea
ror
addb
nop
rclb
jo
leave
call
shlb
cmp
jne
cmpl
sbb
test
cs
push
mov
call
icebp
dec
or
or
mov
rorl
add
and
pop
test
or
mov
or
lock
outsb
push
inc
push
adc
icebp
test
sub
mov
or
lret
adc
sub
lret
out
mov
sbb
out
lret
and
popl
repz
lods
cmp
add
inc
into
mov
jbe
test
push
movl
cmp
xor
pop
pop
mov
sarb
lahf
adc
jb
lcall
jge
fmul
adc
sub
fcmovb
xchg
mov
sub
dec
inc
test
loopne
cmp
cmp
and
inc
sub
iret
movb
movsb
je
gs
or
imul
adc
or
ret
mov
or
arpl
dec
dec
loop
mov
jge
rol
xchg
add
shrl
cld
dec
or
shl
or
adc
add
sub
mov
pop
add
testl
daa
or
pop
repnz
rorb
test
movsb
dec
pop
test
inc
cmpb
adc
mov
or
lock
mov
out
sti
and
mov
and
fisubs
out
sub
orb
call
and
or
adc
insb
inc
or
adc
cmp
test
ja
cmp
cld
ficoml
push
push
pop
nop
jno
insl
loopne
icebp
xorb
sub
push
cmp
and
cld
add
mov
addr16
and
sub
out
dec
jb
orb
outsb
cmp
adc
and
je
and
dec
fldenv
int3
or
test
xor
addl
mov
lahf
movsb
aaa
inc
mov
mov
or
rorb
ja
lret
dec
sti
aas
roll
cmp
push
and
and
push
add
inc
rolb
xchg
je
fwait
pop
pop
popa
repnz
or
push
push
jo
jg
push
add
mov
add
jo
sbb
mov
xchg
inc
mov
pop
lret
clc
xor
sbbb
mov
mov
cmp
adc
cmp
insb
push
cld
sbbb
jo
ja
jmp
pusha
test
test
or
imul
push
mov
mov
cmpsb
and
cmp
push
in
repnz
inc
cmp
std
jne
fcoml
fldt
stos
enter
xor
jmp
out
add
adc
jge
push
push
inc
mov
jnp
je
and
xor
stos
dec
mov
popa
loop
dec
shlb
lock
out
xchg
or
in
hlt
adc
imul
cs
mov
push
add
stos
jae
and
xor
scas
sub
pop
push
inc
rolb
ljmp
jae
cmp
jbe
cs
jmp
jne
mov
test
js
and
pop
leave
or
xor
dec
jno
hlt
imul
mov
sub
into
sub
pop
mov
fs
andb
cmp
adc
mov
inc
fadd
outsb
or
outsb
incl
das
or
jge
add
jb
mov
xor
rcl
movl
out
das
and
mov
mov
inc
mov
inc
pop
cmp
dec
jne
mov
inc
jne
js,pt
jl
sbb
adc
divb
xchg
js
jo
les
push
mov
inc
dec
jne
mov
movsb
mov
decb
nop
add
hlt
gs
sub
loop
jnp
test
xor
test
loopne
xchg
push
add
cld
mov
loopne
adc
and
jbe
pop
mov
pop
push
cwtl
dec
and
lcall
lods
and
mov
cmp
jge
inc
sub
xor
ja
loope,pt
add
mov
in
xchg
cmp
inc
adc
imul
push
popf
cmp
int3
cmp
fiaddl
insb
ljmp
dec
lock
out
insl
mov
mov
mov
imul
push
inc
inc
adc
dec
loopne
or
pop
sub
xorb
add
mov
add
dec
testl
int
bound
ret
ss
push
out
arpl
mov
xchg
jno
stos
push
out
sbb
jnp
jmp
and
add
cltd
fldl
cmp
test
push
lahf
jmp
leave
cmpl
ret
jg
jns
pop
movl
mov
or
in
sbb
les
in
mov
pop
adc
lods
in
sbb
loop
xor
ds
lods
cltd
mov
push
int
das
adc
mov
sub
testb
mov
rcrb
and
dec
pop
cwtl
rclb
idiv
mov
aam
pop
cmp
xor
hlt
push
shrb
lock
pushl
out
jle
or
pushf
add
push
cmpl
add
insb
aaa
lock
pop
cmp
mov
aaa
adc
decl
jne
mov
xor
nop
push
xchg
mov
fstl
push
sbb
mov
lea
in
xchg
and
aaa
cmpl
sbb
ret
cmovs
mov
movsl
sub
or
jo
xor
push
xor
sbb
ficoms
dec
xor
je
push
mov
lret
call
jge
ret
test
push
jbe
daa
lods
pusha
fcmovbe
test
test
lock
orl
dec
sbb
jo
loope
mov
and
dec
shl
ds
xor
jle
jmp
push
dec
and
dec
ficomps
jno
xor
inc
fcompl
rclb
xorl
shl
push
cmp
sarb
add
daa
mov
dec
aas
and
pop
add
xchg
ja
sbb
cli
or
add
ss
loopne
mov
add
sbb
test
int3
into
fwait
xchg
jne
cmpsl
out
call
outsl
sbb
cwtl
cmp
arpl
lods
imul
push
mov
out
xor
mov
les
loop
mov
sub
test
pop
adc
ljmp
shrl
inc
inc
scas
xchg
mov
cwtl
and
sbb
ret
xchg
lret
insb
push
push
xchg
xchg
add
xchg
mov
or
inc
mov
add
rolb
xchg
and
inc
jb
and
cmpsb
insb
dec
aam
jecxz
mov
jg
sbb
pop
jmp
cmp
outsl
test
adc
mov
add
sub
or
and
dec
outsb
add
ljmp
and
imul
pushf
aad
gs
pop
jecxz
dec
shrb
jmp
mov
xor
not
movsb
dec
out
dec
imul
push
insb
loop
xor
ret
lods
xchg
or
clc
repz
xor
cmp
dec
ret
add
and
clc
jne
daa
jle
pop
sbb
push
sub
xor
jmp
adc
jbe
push
push
jnp
push
jge
rcll
adc
je
jle
or
sbb
subl
push
addb
mov
mov
pushf
fsubrs
mov
outsl
jle
pushf
cwtl
xchg
pushf
dec
popf
into
mov
mov
into
dec
xchg
es
adc
lods
cmpsb
and
daa
test
mov
jno
int3
fdivs
mov
xchg
inc
xorl
sub
mov
xchg
out
mov
gs
cwtl
mov
xor
fstps
jb
xlat
loopne
push
xchg
mov
sub
and
jne
mov
loope
fwait
hlt
push
mov
sub
inc
and
andl
loopne
lea
rorl
popf
sbb
mov
dec
mov
or
mov
mov
fcoml
shl
repnz
mov
int3
data16
popf
enter
repnz
movsl
shrb
fildl
rclb
jle
shll
ss
enter
dec
cld
sbb
rcl
in
sub
aam
or
cmp
mov
js
es
mov
lahf
lea
push
mov
ljmp
pop
popf
test
pop
xchg
mov
movsb
js
jmp
sub
rolb
pop
adc
add
notb
aad
add
add
ret
js
and
icebp
mov
es
or
or
mov
mov
dec
and
mov
negl
push
clc
xchg
mov
mov
pushf
orb
xchg
mov
jns
fs
xchg
out
pop
or
push
inc
cmp
sub
sbb
sub
push
mov
add
pushf
xchg
mov
add
add
adc
cmp
pusha
cwtl
or
cltd
pop
mov
enter
mov
mov
push
int3
aam
in
pusha
adc
negl
or
adc
sbb
sub
xor
shll
xchg
inc
imul
cmpsb
sbb
test
cmp
cs
push
push
call
adc
cmp
pusha
jmp
lods
js
mov
pushf
lcall
xor
inc
ret
cli
dec
scas
push
mov
testb
repz
inc
rorl
jge
inc
mov
adc
test
push
movsb
lret
test
scas
dec
mov
add
stos
test
hlt
loop
les
cmpsb
and
adc
aas
adc
and
add
add
and
inc
test
cmc
cmc
jmp
xchg
idivl
lock
lea
mov
lret
mov
int3
hlt
mov
cwtl
push
shr
stc
and
or
adc
addl
out
lahf
cli
mov
lret
or
inc
or
cmp
enter
jnp
dec
pop
fcmovnb
fsts
cmpsl
jge
or
xorl
out
jl
or
push
push
pop
xor
movl
mov
jmp
sbb
adc
arpl
cmp
and
jne
rolb
adc
and
xor
add
sbbb
inc
jbe
push
xor
xchg
pusha
mov
xor
lock
adc
mov
push
cmp
cli
inc
cmpsl
pop
aad
popa
outsl
cmpsl
inc
xchg
outsb
cmp
add
adc
lea
xchg
or
adc
mov
cmp
push
sub
fisttps
loopne
cmp
andl
out
ffree
or
xchg
sub
clc
mov
js
mov
mov
push
mov
sub
add
mov
xchg
shll
adc
in
inc
lock
jnp
addl
and
addb
mov
adc
jno
jno
pusha
xor
jge
cmp
mov
mov
or
add
dec
clc
mov
xchg
xchg
add
daa
jmp
fmull
mov
jg
mov
or
inc
stos
mov
pop
push
push
add
inc
das
ss
push
lret
imul
add
push
inc
pusha
or
arpl
xor
mov
xchg
mov
dec
jne
or
incl
and
movsl
jno
xor
in
add
jecxz
insl
pusha
shrb
adc
popa
inc
or
mov
mov
pop
test
inc
sbb
xor
push
dec
push
clc
xchg
rorb
or
xor
dec
ss
sub
adc
mov
lock
mov
lods
mov
jbe
push
inc
scas
mov
push
call
adc
insl
in
or
inc
outsb
cld
sahf
adc
sbb
loopne
jle
adc
pop
divl
in
mov
inc
lds
ret
inc
add
dec
xchg
xor
add
jle
push
push
jne
sarl
dec
ljmp
jns
and
movsb
inc
sbb
push
filds
xchg
sub
pop
out
cli
add
in
adc
and
add
insb
dec
dec
sub
and
loope
fs
or
and
les
add
sbb
mov
and
or
or
push
scas
loopne
mov
pop
push
mov
icebp
sub
lret
imul
push
mov
nop
xchg
dec
lods
cmpl
pop
adcb
out
adc
and
je
mov
pop
xor
cmp
pop
sti
rorb
popf
in
xchg
lret
gs
fdiv
sarl
cmp
bound
in
push
jne
add
mov
mov
into
popa
je
addr16
fwait
imul
movzwl
test
in
or
call
adc
push
pop
test
dec
add
sbb
imul
pop
ja
or
movsbl
clc
out
ss
sbb
sar
pop
mov
movsb
push
xchg
pop
jl
mov
inc
pushf
lea
push
sbb
aam
pushf
lret
in
clc
fsubs
inc
jae
clc
lret
decb
add
ljmp
je
sbb
pushf
lret
and
push
pop
add
jnp
mov
int
inc
xchg
push
in
add
mov
adc
out
cmp
mov
pop
and
orl
lea
mov
mov
ja
movsl
mov
mov
sahf
dec
enter
or
adc
movsl
hlt
hlt
stc
out
mov
cwtl
je
or
inc
insb
je
and
sbb
mov
test
outsb
loope
insb
cmp
in
sbb
sub
adc
jnp
loop
and
pop
or
xor
mov
movb
dec
xor
repnz
movsl
jg
jmp
cltd
sbb
imul
lcall
pushf
data16
loope
xlat
je
test
jge
mov
mov
push
jbe
jbe
pop
cmp
adc
ja
dec
mov
sbb
jle
inc
je
jne
out
pop
push
or
add
ds
mov
movsl
push
cld
cmp
lock
push
dec
nop
and
and
into
testl
xchg
mov
lock
add
negl
dec
and
in
and
add
sbb
sub
outsb
imulb
es
sub
inc
mov
cmpsb
pop
push
or
clc
stos
mov
add
push
insl
cmp
cmpsb
lret
xchg
xchg
or
adcl
notb
lret
shrl
mov
outsb
pushf
add
cmp
pushf
movsl
cmp
pop
test
sti
mov
fucomip
mov
push
mov
pushl
repz
push
ficompl
sbb
sarl
lcall
mov
inc
mov
add
mov
cmp
xor
add
lcall
imul
mov
jle
cmp
dec
mov
test
insb
cli
add
add
into
mov
adc
jmp
push
je
cmp
je
test
dec
sbb
enter
inc
pop
int3
add
xor
jo
ss
test
mov
add
jo
push
movsb
dec
or
mov
adc
into
insb
rcrl
jecxz
in
xor
cmpb
add
push
add
ret
cwtl
dec
jne
addr16
mov
mov
jmp
cmp
jle
insl
lock
out
cmpl
js
and
lds
or
cmpb
and
xor
adc
pusha
aam
mov
adc
jne
sub
inc
sbb
mov
mov
fsubl
jecxz
lea
stc
lcall
pop
xchg
cwtl
inc
pop
cmp
sub
nop
xor
ds
inc
xchg
mov
push
adcl
xchg
push
jne
inc
sbb
jae
sub
out
addr16
decb
mov
test
dec
pushf
mov
adc
shll
pop
data16
push
sub
adc
inc
cmp
scas
jne
push
sbb
add
int3
adc
add
cmpsb
jmp
out
or
mov
push
clc
dec
dec
js
dec
sub
or
jae
sub
fsubrs
jecxz
nop
sbb
mov
pop
jge
inc
sbb
dec
test
pop
mov
or
jne
and
ficomps
testl
adc
inc
push
aas
cmp
and
cmp
insb
add
cmp
push
nop
xchg
clc
sahf
add
clc
bswap
mov
dec
jmp
pop
xchg
sub
dec
icebp
add
je
lock
cmp
cmp
addr16
inc
dec
shlb
xor
ss
outsl
nop
push
mov
loope
mov
cmp
or
xchg
mov
ret
repz
insb
jb
adcl
gs
push
movsb
rorl
int3
clc
add
sub
sub
push
test
inc
xchg
mov
cmpsb
and
pop
lds
jb
cltd
sub
sub
pop
and
inc
shl
push
jp
dec
out
pop
cmp
cmp
lea
pop
aad
or
adc
push
jbe
jo
or
dec
sbbl
jne
add
mov
jno
aaa
cmp
mov
lock
push
lcall
push
sub
popa
jle
sbb
leave
cmp
lods
add
cmpsb
pop
lret
and
or
push
and
or
jl
testl
push
mov
jecxz
jle
outsl
movsl
daa
pop
mov
inc
mov
in
sub
movsb
cmp
nop
iret
mov
daa
sub
xor
xchg
pop
lods
inc
mov
hlt
mov
mov
iret
push
addr16
mov
add
pop
rorb
xor
sbb
sub
add
mov
rcrb
idivb
push
adc
insb
sbb
push
push
cmp
push
inc
mov
out
lods
sbb
pop
mov
ret
addl
lcall
mov
push
mov
adc
or
jb
push
leave
add
cmp
fcoml
cmpsb
cltd
mov
jne
push
aas
out
mov
adc
dec
xor
sub
jo
in
jle
lret
sub
movsb
jge
test
add
ljmp
das
mov
js
xor
cmp
sub
jmp
push
mov
test
pop
jne
sbb
rorb
jmp
push
addr16
jo
cmp
xor
nopl
inc
sbb
pop
bound
jmp
or
popf
repz
push
rorb
test
push
lock
inc
xchg
aas
in
mov
lcall
adc
enter
sub
or
jb
popa
je
ret
loopne
xor
pop
jns
cld
adc
sub
inc
pop
add
aam
cmp
jb
ret
mov
inc
and
sbb
dec
or
sbb
cmpsb
push
jbe
xor
xor
adc
cld
call
mov
sar
dec
cmp
jbe
push
pop
sbb
cmp
jne
orb
mov
mov
shr
lea
not
and
decb
jne
add
sbb
lea
xor
mov
adcb
jbe
add
add
pop
and
or
ret
cmc
xlat
dec
push
jecxz
mov
dec
adc
shlb
and
sti
add
push
mov
dec
push
pop
cmp
jecxz
pop
stos
stos
fimuls
and
js
cmp
push
sbb
mov
data16
mov
sub
shr
not
and
xor
and
xor
sbb
loopne
mov
xor
cltd
jle
pop
dec
add
js
cltd
xchg
mov
add
adc
xchg
outsl
mov
out
mov
pop
dec
or
add
add
sub
inc
mov
mov
cld
mov
ds
push
or
pop
mov
das
dec
or
jmp
dec
adc
cmp
mov
or
or
roll
test
xor
jp
adc
inc
enter
and
test
cwtl
inc
sbb
fdivr
es
loope
add
scas
jp
push
inc
sti
divb
or
sbb
test
andl
iret
push
decb
adc
inc
dec
xor
and
pushl
push
push
sarb
push
mov
add
inc
adcl
call
fildll
enter
test
adc
test
inc
negl
sub
cmp
or
faddp
std
cmp
mov
inc
lods
mov
pushf
pop
mov
pushf
lock
xor
adc
outsl
push
fistpll
movl
addl
xor
les
xor
inc
sti
inc
adc
dec
rsm
mov
push
xchg
sub
insl
cmp
adc
fwait
orl
incl
pop
mov
pop
push
in
xchg
push
scas
mov
add
rolb
mov
lock
repnz
rorb
pop
pop
dec
data16
add
or
xor
xor
mov
mov
mov
notb
or
inc
jns
popa
mov
xor
adc
mov
mov
inc
sub
shr
lds
clc
sbbb
xchg
in
adc
test
mov
push
push
fnstsw
inc
cld
lock
call
dec
jne
pop
or
push
je
clc
add
xchg
xchg
or
sahf
sub
sub
fs
call
push
inc
inc
mov
pop
call
cmp
jne
or
lds
jecxz
and
not
and
les
or
adc
jo
and
mov
inc
lcall
orl
icebp
add
push
mov
test
mov
xchg
flds
xorb
stc
add
add
stc
int3
push
pop
sbb
lock
pop
inc
stc
pop
or
test
add
es
add
cmp
nop
dec
or
sti
dec
push
sbb
jns
sub
add
pop
adc
movsl
adc
pop
sti
xchg
adc
xor
fstl
pop
and
pop
fmull
cltd
cmp
jle
lcall
pop
pop
push
xor
in
pop
adc
lcall
add
js
mov
jmp
aaa
js
pusha
test
loopne
imul
pop
adc
xchg
test
inc
mov
and
lods
push
mov
sub
jl
push
inc
jnp
adc
or
mov
mov
pop
dec
inc
dec
insb
pop
xor
push
sar
dec
and
jp
movsb
pop
mov
xchg
cmp
punpcklwd
xor
cmp
fdivrs
mov
fistps
sub
orl
cmp
ja
ja
sbb
rclb
dec
ficoms
add
mov
sahf
cmpsb
adc
dec
lea
mov
fcompl
mov
jns
push
mov
imul
xchg
dec
in
cmp
setb
xor
jns
dec
movsb
or
sbbb
ja
nop
mov
loope
dec
xlat
imul
add
lock
push
inc
cmp
push
push
push
jge
sub
scas
es
out
adc
and
and
or
ret
shrl
mov
nop
cmp
and
decb
xlat
ret
inc
pusha
subl
mov
call
sbb
lahf
or
fnstenv
jmp
jnp
add
in
in
lock
aaa
arpl
mov
cmp
pop
test
push
xor
mov
inc
add
aam
pushl
outsb
mov
sbb
and
mov
mov
dec
pop
iret
jne
push
jno
mov
and
repnz
push
scas
pop
pop
movsl
add
out
rep
jnp
pop
dec
mov
and
jne
mov
push
xor
and
leave
inc
test
inc
push
pushf
push
cmp
jno
or
out
icebp
sbb
or
and
push
pop
xchg
sbb
shrl
sahf
addl
jl
sar
stos
mov
pcmpeqw
int3
dec
das
pop
adc
and
jmp
jp
mov
pop
pusha
dec
bound
fwait
or
mov
imul
xchg
or
xor
sarl
mov
or
pop
mov
enter
sub
jge
cmpsl
popl
push
subb
cld
or
push
or
enter
mov
or
sub
ljmp
adc
pop
insl
xor
shrl
jbe
lods
test
lea
ds
jne
cmp
into
push
sbb
mov
inc
add
cmp
mov
xchg
repnz
xor
mul
cmp
loopne
sbb
adc
jb
or
xorl
lock
roll
and
inc
mov
pop
and
jg
sti
call
out
push
mov
push
push
mov
test
outsl
rclb
jns
mov
fdivrl
add
jle
and
es
add
orl
xchg
loopne
test
inc
inc
cmp
cmp
dec
fadds
add
push
mov
add
and
adc
bnd
test
inc
push
adc
push
add
popa
xchg
mov
push
sbb
and
add
pop
aas
mov
xor
dec
mov
cmp
push
inc
or
mov
lahf
pushl
adcl
push
mov
clc
in
pop
je
out
pop
jne
push
in
adc
adc
pop
insl
mov
sbb
sbb
pop
mov
fwait
js
jl
mov
fiadds
push
or
pop
punpcklbw
adc
sbb
mulb
inc
fisubs
je
ficompl
pop
fisttpl
lahf
insb
int3
push
pop
mov
icebp
xchg
les
addl
rolb
test
add
or
push
jmp
mov
insb
js
call
inc
dec
jne
daa
fmull
test
into
sub
xor
inc
push
jg
lods
and
nop
pusha
jns
test
add
jbe
stc
add
cmpsb
sahf
jo
or
popf
call
es
aam
test
xor
xor
mov
mov
adc
add
push
jmp
xchg
dec
jae
jl
or
int3
test
push
add
je
dec
loopnew
add
cmp
mov
xchg
and
movzbl
shlb
test
enter
xlat
and
pop
lcall
xor
ja
push
mov
pop
dec
mov
push
int
jmp
sub
adc
adc
std
cmp
cmp
push
mov
fisttpl
pop
add
pop
xor
sbb
xchg
arpl
stc
fsubrl
mov
rol
jge
fs
push
mov
jo
and
cs
xor
iret
rorb
mov
and
jne
xlat
xor
jp
or
cmp
mov
pop
and
jb
rorb
jg
adc
inc
fidivrs
xor
xor
adc
cmp
or
push
lcall
les
sub
inc
pop
std
lcall
ret
sarb
ret
in
shll
lea
jb
mov
sub
nop
call
push
sbb
mov
rcl
aam
push
lock
push
sbb
xor
push
int3
lahf
call
movsl
mov
leave
enter
and
nop
push
and
in
mov
neg
push
sahf
xchg
xchg
lret
and
or
or
xor
xchg
call
loopne
xchg
mov
orl
fimuls
iret
out
push
cld
mov
stc
loopne
fsubs
adc
test
andb
movsb
nop
sub
mov
loopne
mov
hlt
xchg
xchg
push
lods
push
cltd
xchg
or
shrb
xchg
mov
add
add
call
mov
leave
addl
mov
pop
orl
jb
rolb
xchg
in
push
nop
or
inc
xchg
test
pop
push
cmp
test
jle
clc
mov
data16
and
je
xchg
pop
mov
sysret
adc
cmc
or
data16
data16
rclb
mov
gs
mov
sub
and
adc
fists
arpl
cmp
mov
jg
xchg
xor
sub
mov
dec
lret
dec
loope
ret
mov
daa
clc
push
xor
stos
xchg
xchg
stos
leave
add
or
fwait
rcr
adc
xor
andb
movsb
adc
mov
push
shll
or
scas
js
push
lods
lock
sbb
xor
mov
sub
rcll
mov
lcall
fisubs
adc
rcl
jmp
mov
fstpt
xor
testb
or
fidivrl
movsl
or
outsb
fsubs
push
adc
ret
add
or
in
jne
popf
outsb
jecxz
add
hlt
stc
mov
ljmp
push
cs
adcb
add
nop
jmp
cmp
adc
ret
pop
lods
xchg
or
cmp
ror
cld
fldl
and
not
and
push
ljmp
ret
xchg
ds
jae
add
xor
sub
in
xor
clc
add
cli
sti
cld
jmp
mov
shlb
xchg
xorb
push
fs
adc
cmpsb
pop
pop
mov
je
pop
cmp
clc
add
fdivrl
sub
sbb
dec
sbb
push
add
add
and
pop
je
dec
je
push
or
or
lds
pop
inc
fmul
lret
js
xchg
fldl
cli
data16
sti
pop
loopne
fldl
or
fldl
or
sbb
rorb
mov
fidivrl
jns
inc
lcall
push
leave
pop
jmp
jo
outsl
mov
jbe
rorl
mov
xor
xlat
das
cmp
dec
sti
scas
xchg
dec
je
add
and
sbb
adc
fnstenv
lcall
xchg
popf
out
push
sbb
mov
mov
sub
or
add
and
addr16
add
inc
test
lock
lret
xchg
adc
int
push
lret
jmpw
idivl
jmp
adc
pop
xchg
pop
push
call
push
push
mov
cld
nop
shl
push
daa
sbb
jne
das
and
inc
sub
mov
add
out
mov
push
push
daa
mov
jns
jnp
xor
push
testl
mov
and
je
pusha
sub
dec
inc
and
pushf
or
push
mov
lock
push
fildll
add
out
clc
jne
ds
bound
sub
mov
pop
push
inc
testb
add
jb
push
xchg
adc
ficomps
add
cmp
push
push
jmp
test
push
cli
clc
push
fmull
loopne
in
std
out
jp
cmp
test
jne
push
push
cmpl
out
outsb
cmp
inc
dec
push
and
add
cs
js
mov
cld
mov
add
and
push
lock
add
popa
cmp
add
adc
mov
xor
out
mov
aad
and
mov
call
in
or
int3
add
sarb
push
inc
lods
mov
sub
and
lock
loopne
cld
scas
pop
mov
cmp
clc
mov
pop
rol
add
fstpl
outsb
gs
add
jne
dec
sbb
jg
adc
pop
sar
lea
ret
ret
and
scas
dec
add
xchg
pushw
adc
sub
ds
mov
pop
inc
inc
movsl
sub
and
mov
push
std
push
or
test
pop
ja
adc
or
les
mov
leave
xchg
std
lods
sbb
mov
xor
in
imul
push
jecxz
pushf
enter
vmovaps
daa
dec
dec
push
pop
or
lret
and
orl
dec
cmp
jg
cmp
notb
hlt
es
or
add
stc
xor
mov
mov
lods
es
mov
call
mov
push
or
inc
subl
lahf
sub
sub
jne
inc
sub
jb
or
aad
pop
and
fidivrl
jne
push
filds
sbb
xor
pop
inc
jne
cmp
inc
xor
push
movsl
cld
inc
imul
fidivrs
push
int
lcall
js
pushf
cmpsb
shlb
sbb
repnz
mov
scas
ret
mov
mov
mov
pop
jns
dec
mov
xchg
lock
movsb
lret
sbb
inc
push
pop
call
jns
repnz
addr16
mov
adc
dec
or
pop
rclb
push
mov
popf
lea
cmp
aas
gs
in
mov
mov
or
inc
gs
inc
icebp
cwtl
add
or
jne
xor
cwtl
xchg
mov
jnp
mov
enter
adc
mov
cmp
mov
fldcw
outsb
mov
push
fcmovbe
jns
daa
loopne
xlat
loopne
out
add
mov
sub
cmp
hlt
std
loopne
daa
sti
mov
pop
enter
mov
addl
sub
jno
or
je
mov
pop
adc
sbb
je
test
subb
dec
add
movsb
or
outsl
in
movsb
sti
dec
sahf
pushf
push
jecxz
xor
inc
subb
mov
in
outsl
lock
aaa
addr16
cltd
xlat
das
lock
fdivr
mov
adc
ret
out
pop
mov
and
rcr
jg
fadds
notb
shlb
jb
mov
gs
jl
jmp
mov
call
bound
fadd
push
repnz
sbb
mov
std
push
sub
push
push
lret
loop
jge
mulb
fmull
imul
fidivs
sub
lea
fnstsw
dec
xchg
out
imul
mov
xor
mov
push
aam
xor
daa
jle
inc
cmpsl
cltd
icebp
push
mov
xchg
ds
sbb
mov
out
xor
std
pop
repz
stos
out
imul
jmp
push
stos
push
jbe
test
in
xor
loop
jle
iret
dec
push
lret
shl
xor
roll
adc
mov
inc
inc
adc
lds
cmpsl
adc
cmp
mov
mov
std
call
inc
lock
xor
inc
imul
test
mov
std
shlb
arpl
mov
out
push
mov
popa
mov
lret
fdivrp
or
es
cs
cmp
stos
mov
sub
jnp
hlt
test
pop
dec
out
add
movsb
cmc
shll
lret
lock
xor
push
mov
mov
sub
sub
or
cmp
sbb
jge
int3
mov
cmp
mov
addl
enter
cmp
push
div
enter
popf
jns
lock
sub
jae
dec
cmpl
pushfw
inc
fbstp
bound
cmpsl
add
push
movsb
adc
fidivrs
clc
add
inc
push
inc
lret
jne
cmp
sub
cmovge
addr16
push
or
pop
out
enter
push
dec
pop
xchg
and
je
xchg
push
and
cmp
loopne
in
std
std
loope
lods
and
in
sub
xchg
test
xchg
aaa
fsubrl
pop
movsb
bound
xor
mov
shl
sahf
cmpsl
stc
mov
push
mov
mov
out
pop
xor
xchg
lock
sub
mov
iret
dec
js
pop
rcll
adc
fisttpl
push
sbb
aas
xor
jecxz
push
aad
pop
leave
mov
xchg
dec
sub
push
inc
mov
jb
mov
cmp
cwtl
in
mov
loopne
sub
or
aad
add
iret
aad
push
xlat
adc
sub
cmp
ja
and
cmp
push
add
icebp
or
lock
xor
pop
repz
in
jl
adc
ds
mov
xchg
int3
lock
inc
ret
sub
cmc
dec
dec
push
push
inc
push
lock
repz
lea
pop
add
test
xor
imul
repz
inc
sahf
das
test
daa
iret
xchg
es
mov
cmc
aad
and
in
aad
lret
mov
or
adc
and
sbb
aad
xchg
xchg
xchg
out
sub
int3
les
pushf
xchg
mov
push
sahf
xchg
or
push
fnsave
add
enter
in
jb
aad
ljmp
sbbl
push
or
and
movsb
xor
dec
push
iret
or
jns
shrl
sbbl
or
shll
mov
cmp
mov
pop
std
rcrl
cmc
loope
xor
and
mov
cmc
sbb
inc
repnz
test
or
insb
decb
cld
shrb
pop
imul
inc
inc
lods
in
loope
insl
stc
pushf
sbb
divl
xchg
pushf
nop
pop
arpl
and
mov
xor
stc
lea
mov
ds
mov
dec
in
imul
dec
or
xor
add
shl
pushf
movsb
nop
sbb
add
and
dec
call
adc
adc
incl
cs
xchg
stos
inc
scas
mov
xchg
pushf
nop
nop
nop
cltd
add
lods
cmp
cmp
aad
lret
and
clc
test
dec
push
dec
pop
je
movsb
data16
jmp
sti
mov
outsb
aaa
mov
fldl
xchg
push
out
lcall
mov
enter
ss
je
sub
xchg
enter
mov
sti
mov
xor
nop
sbb
jg
adc
sub
inc
push
pusha
mov
lea
xchg
test
insb
lods
and
cltd
inc
into
fnsave
cli
sub
or
jg
je
and
mov
lret
orb
mov
or
inc
sub
push
js
add
test
jge
dec
jmp
stos
ss
test
or
cli
pop
movsl
lock
push
add
jl
push
push
dec
xchg
adc
adc
sub
mov
pusha
push
or
add
outsl
push
push
dec
adc
push
and
icebp
jl
xchg
lret
pop
outsl
inc
or
movsl
repnz
jbe
jle
sbb
popa
push
lcall
int
fsubl
hlt
js
sbb
mov
sahf
inc
xor
enter
xor
adc
clc
or
and
dec
test
adc
fsubl
and
call
es
nop/reserved
xlat
xchg
sub
ja
cs
cmpsb
mov
mov
add
sub
adc
lcall
mov
es
fs
sbb
adc
adc
ss
rol
fisubs
jp
or
mov
fldenv
daa
jmp
pop
xor
xchg
gs
insb
repz
test
sub
cwtl
push
insl
leave
cmp
loopne
loopne
and
les
leave
pop
insl
add
jne
dec
arpl
adc
or
add
fldenv
jl
icebp
ret
inc
jl
stos
divl
xchg
clc
add
or
ja
and
aaa
leave
or
pop
cld
cmp
imul
push
mov
sbb
cmp
fisttps
sub
push
and
push
push
mov
and
sarl
jae
nop
pop
sub
addb
data16
and
xchg
ds
jl
and
inc
mov
pop
xchg
push
sar
cld
push
mov
or
xlat
icebp
pop
pusha
outsl
mov
test
je
divl
adc
xor
cmp
je
aaa
mov
sbb
test
mov
and
jle
popa
add
mov
and
mov
push
pop
cli
push
mov
and
stos
bound
mov
insb
mov
loope
cmp
orb
pop
les
dec
outsl
stos
popf
inc
cs
add
shlb
jg
js
sub
orl
pop
subb
mov
jg
mov
in
and
adc
xor
and
jns
add
or
inc
adcb
inc
and
subl
or
sbb
and
cmp
inc
or
add
je
push
push
stc
in
daa
clc
inc
push
inc
sbb
jae
push
cwtl
inc
testl
insb
jl
add
in
imull
sbbb
push
jbe
or
or
dec
iret
mov
jae
push
xchg
xchg
xchg
into
or
ficoms
push
or
mov
push
mull
xchg
push
inc
insb
ud0
push
pop
push
push
inc
shr
rcr
shr
rcr
or
out
sti
leave
jne
div
pop
dec
adc
inc
mul
pop
jb
lret
mov
jb
cmp
or
xor
and
aas
iret
insb
pop
adc
or
ficoml
mov
lret
iret
xor
and
sub
inc
add
cmpsb
jbe
xorl
adc
lds
jnp
jmp
mov
clc
mov
movb
mov
and
clc
movb
popf
mov
mov
push
imul
adc
loope
adc
mov
stos
push
and
pop
jg
sahf
push
and
sub
add
sbb
or
add
testb
lods
sub
lret
adc
or
sbb
stos
adc
mov
jge
repz
sub
dec
inc
dec
std
adc
dec
lods
leave
sbb
sbb
popa
pop
mov
cmp
out
dec
imul
in
je
add
sbb
dec
js
and
pop
mov
pop
cmp
inc
pop
dec
sbb
cmp
mov
inc
cmp
sbb
enter
jle
jne
lea
jb
mov
sbb
pusha
jno
test
lods
and
jae
push
sub
test
fcomps
jne
in
jg
or
jbe
lea
xchg
fldcw
fs
adc
mov
and
mov
loope
jne
mov
repnz
add
push
add
pop
into
les
cmp
push
mov
and
jnp
cld
sbb
subb
mov
push
adc
sub
push
fwait
add
add
inc
fs
shrl
stc
mov
adc
outsl
lret
je
xor
and
flds
sar
add
rorb
add
pop
dec
in
movsb
sbb
adc
mov
add
push
push
or
push
outsb
xor
add
or
dec
clc
and
jge
in
and
mov
adc
sub
push
mov
xor
js
adc
add
xchg
sahf
ret
hlt
xor
jge
inc
cmp
push
mov
jo
test
mov
js
jmp
pop
loopne
and
push
repnz
lea
and
nop
pop
mov
les
mov
pop
negb
popa
fcomps
test
dec
xchg
sahf
daa
jb
or
mov
mov
add
or
cld
iret
xchg
pop
add
or
pop
xor
das
mov
adc
add
loopne
xor
ret
icebp
inc
in
inc
sbb
xor
jo
and
or
and
push
inc
adc
subl
out
ret
inc
xor
push
out
cmp
je
adc
test
ss
and
sti
jns
adc
xchg
pop
addr16
sbb
inc
outsb
or
cld
ret
sbb
mov
and
repnz
and
adc
jmp
inc
std
sbb
xor
mov
jp
in
adcl
add
sub
cmp
jl
push
push
add
or
pushf
js
jmp
icebp
sub
lret
dec
rol
hlt
adc
xorb
mov
jle
cmp
cmp
jb
fadds
ret
inc
fistpll
mov
fmull
outsl
scas
inc
cmp
roll
lret
inc
inc
dec
sbb
lods
insl
pop
pop
mov
pop
jne
push
push
mov
bound
xorb
push
push
dec
lea
sbb
lea
jle
dec
or
or
hlt
cs
jb
inc
sub
or
cmp
shlb
mov
sbb
imul
fdiv
inc
mov
cs
push
mov
push
sbb
daa
push
xor
jmp
and
pop
and
pushf
add
imul
adc
xchg
cmp
dec
cmc
add
movsb
fwait
jbe
addl
and
ja
push
pop
mov
adc
push
lret
je
mov
imul
or
fiaddl
lret
push
out
mov
ret
xor
and
sub
arpl
inc
adc
pop
scas
shl
adc
mov
jmp
insb
mov
sub
aaa
and
mov
jo
xchg
in
pop
add
add
test
jmp
lock
or
imul
in
pop
and
andl
cmp
or
loopne
add
rcrb
sub
cmp
gs
sbbl
pop
orl
or
ds
mov
sbbb
popl
push
cmp
push
aaa
jp
fs
inc
lock
dec
or
or
int3
loop
mov
mov
sub
dec
or
pusha
int
push
inc
gs
xchg
push
push
icebp
imul
mov
adcl
ret
inc
roll
hlt
add
pop
sub
test
xchg
cmp
enter
inc
dec
lods
push
dec
cmovge
repz
pop
mov
push
or
jne
flds
jne
out
mov
pop
mov
mov
mov
pop
mov
add
pop
xchg
aas
leave
cld
je
mov
dec
je
cmp
scas
mov
push
mov
pop
dec
or
ret
or
mov
jge
adc
sti
inc
out
cmp
les
push
in
rclb
adc
jmp
fwait
or
je
out
pop
mov
dec
mov
mov
jne,pn
ja
mov
sbb
inc
mov
popa
sub
adc
and
push
jbe
sbb
mov
xchg
mov
daa
test
and
gs
mov
sbb
push
or
imul
int3
and
pop
add
dec
sbb
pop
aam
push
adc
fs
outsb
sbb
and
mov
mov
sbb
xor
push
dec
jo
sbb
das
mov
or
and
or
ljmp
push
dec
jmp
pop
mov
add
inc
mov
jne
cmpl
sbb
lret
sbb
and
cmp
jbe
push
aas
sar
scas
push
pusha
pusha
or
cmp
addr16
dec
jnp
mov
cmovno
test
cmp
jo
ja
inc
test
xor
adc
cmp
mov
jmp
push
pop
inc
jns
pusha
pusha
mov
jp
sub
and
mov
daa
outsl
jmp
inc
decb
xchg
icebp
push
ljmp
jmp
and
in
fnstcw
outsb
dec
adcl
popa
xor
cmpsl
mov
xor
cmp
dec
adc
sarb
gs
add
enter
add
mov
daa
pop
inc
popa
mov
or
add
imul
push
sub
stc
cmp
and
mov
inc
jb
cltd
mov
add
adc
fdivs
lods
mov
mov
inc
and
cmp
pop
mov
cmpsb
rorb
pop
mov
push
mov
mov
adc
add
lcall
or
mov
and
xor
add
and
notl
push
or
xchg
add
inc
ljmp
sahf
or
jge
stos
ja
or
aad
cmp
ss
jmp
xor
adc
rcrb
inc
inc
popa
cwtl
dec
cmp
incl
rorb
add
inc
pop
je
pop
es
popf
dec
sahf
jb
je
mov
and
or
xor
and
sub
adc
add
es
inc
push
mov
or
pop
pop
dec
call
and
cmp
and
inc
mov
mov
jns
fcmovu
add
xor
inc
pop
ljmp
mov
xchg
sub
push
ljmp
cwtl
scas
sub
sbb
cld
cmp
push
mov
sbb
inc
mov
mov
sub
push
adc
push
mov
or
jo
jmp
lea
jle
aas
jae
mov
add
dec
shl
verw
lock
rclb
pop
xchg
jge
mov
orl
or
rcr
push
push
add
sqrtps
jle
dec
push
lret
les
add
clc
pop
and
adc
jo
xchg
gs
push
mov
adc
into
ss
jne
cmp
dec
inc
inc
or
jne
repnz
clc
or
push
sar
jo
add
hlt
movb
arpl
pop
adc
hlt
rcll
jecxz
dec
dec
jb
stos
add
cld
gs
push
jge
bound
cwtl
ret
jmp
sbb
rorb
sbb
addb
jmp
ret
mov
inc
sti
or
into
les
xor
pusha
lock
or
insb
fnstenv
lock
xor
cld
push
push
aaa
pusha
sub
pushf
xchg
push
pop
push
inc
add
dec
add
cmpps
mov
or
mov
xorb
orb
or
or
fidivl
or
cmp
loope
aaa
xchg
inc
mov
in
adc
aam
jge
pushf
push
into
sbbl
inc
aam
loop
xchg
movsb
pop
add
jl
or
and
pop
pop
and
jb
aaa
clc
sub
addl
les
andb
js
mov
add
adc
jbe
inc
adc
sar
sarb
jg
popf
ss
adc
or
adc
dec
cli
cmp
jo
push
mov
dec
or
push
sbb
push
movsl
test
cmp
mov
add
or
pop
shl
add
or
imul
jbe
or
jno
inc
arpl
inc
or
inc
adcl
jmp
repz
or
addl
pop
in
inc
ficompl
andl
testb
xor
shl
inc
and
lods
inc
mov
cmc
adc
mov
shrl
push
push
cmpsl
adcb
adc
sub
sbb
push
add
loop
mov
add
loope
pop
sbbl
notb
imul
mov
sbb
out
mov
rolb
or
mov
fs
out
push
xlat
cs
push
out
or
xor
cmp
jns
push
shlb
fs
movsb
mov
test
mov
jmp
test
adc
loopne
or
mov
div
push
rcrl
add
enter
jnp
enter
add
adc
jb
rcrl
fadd
das
dec
add
ret
sub
adc
jmp
sub
jmp
ljmp
gs
xor
push
or
nop
bound
idivl
insb
cmc
mov
push
mov
test
sub
int3
or
or
mov
adc
cmp
dec
or
add
jmp
pushl
add
repz
push
jae
sub
mov
dec
and
add
pop
sub
mov
or
nop
mov
enter
dec
inc
mov
js
jl
subb
pop
test
jns
inc
nop
adc
xchg
dec
lock
inc
mov
adc
js
je
pop
or
ficoml
mov
test
dec
sbb
pop
xchg
push
aaa
jne
add
data16
xchg
and
jb
outsb
mov
nop
sub
pusha
cmp
int3
icebp
mov
shll
rol
sbb
add
test
push
add
add
loopne
pop
pop
push
mov
imul
icebp
orl
pop
xchg
pop
push
fmuls
je
loopne
pusha
mov
sub
out
decl
roll
pushf
or
loop
dec
dec
popf
dec
les
jle
ds
mov
and
push
push
es
jl
add
or
inc
dec
dec
lods
pop
mov
test
push
pop
outsb
daa
pushf
lret
cmp
jg
push
popa
adc
pop
cs
mov
lret
push
std
xchg
test
xchg
or
in
mov
pushf
sbb
jmp
sub
cmp
ret
inc
jbe
data16
sbb
sub
sub
fsubr
push
and
xchg
out
push
imull
jl,pt
or
int3
jg
xlat
sti
scas
sti
arpl
cmp
jne
sub
adc
outsl
jo
xor
mov
in
jae
adc
mov
imul
std
imul
fmull
fcomp
or
hlt
mov
aam
add
jg
push
push
push
mov
aaa
leave
or
mov
enter
sub
or
inc
push
pop
imul
xor
loope
jmp
adc
inc
jmp
scas
jbe
call
jbe
jne
imul
add
add
sbb
jge
aas
sbb
nop
mov
adc
sub
inc
cmpl
movsb
fadds
jb
pop
adc
mov
mov
js
mov
mov
adc
mov
imul
idivb
xor
push
ja
cld
sar
fisubl
add
cmpsl
ja
xchg
mov
mov
test
mov
cmp
add
or
mov
add
addr16
push
inc
cmpsb
mov
movl
sbb
and
sub
sub
inc
pop
pop
sub
nop
je
xor
lea
scas
pusha
pop
pop
adc
push
cmp
lock
add
je
testb
je
mov
adc
ja
sbb
in
sub
or
mov
dec
add
jo
dec
dec
inc
loopne
mov
dec
or
sub
mov
pop
and
and
jle
sbb
pop
mov
scas
inc
cmp
jg
sub
pop
out
push
add
push
or
test
cmp
test
cmp
jl
sub
dec
rcrb
and
xor
add
iret
adc
xlat
fwait
imul
je
add
cltd
xorb
and
pusha
mov
and
or
adc
lret
fdivr
sub
push
in
push
push
add
ret
sub
push
xor
das
adc
and
and
inc
pop
mov
inc
sbb
cmp
or
test
adc
mov
cwtl
dec
dec
ds
arpl
mov
stos
add
adc
and
aaa
adc
clc
lods
dec
shrb
mov
inc
or
xchg
adcl
sbb
sbb
add
sub
lock
push
jl
push
dec
loopne
pop
les
add
add
js
push
sub
push
and
sti
aas
add
lret
out
xchg
rolb
add
sbb
xor
sbb
and
bound
xor
push
adc
mov
idivb
xchg
or
pop
jg
xor
fs
pop
jl
mov
mov
xchg
push
sub
lds
fdivl
leave
xchg
or
fstl
sbb
fneni(8087
test
inc
sbb
sbb
test
roll
int3
or
add
inc
pop
push
les
outsl
lcall
lea
lret
mov
aaa
mov
jbe
cmp
aaa
inc
inc
push
or
or
jo
jp
in
jmp
mov
dec
sbb
gs
pop
cmp
cwtl
pop
dec
or
jle
ja
inc
or
sbb
sub
shll
jle
aad
add
dec
shlb
mov
mov
xor
lods
bswap
mov
adc
push
add
cmc
andl
or
xor
cld
or
aam
xchg
sub
rolb
jle
cmp
aaa
cmp
inc
push
lret
out
movsl
and
jge
push
mov
ja
lods
sahf
add
clc
rolb
inc
sub
sbb
jle
test
in
mov
pop
cmp
adc
or
andb
lock
les
inc
stos
cld
or
cld
cmp
add
inc
out
pushl
js
iret
mov
and
repnz
xchg
scas
jns
and
mov
xor
xor
adc
popf
sub
cld
lret
pusha
popa
or
je
mov
and
pop
shr
and
cmpl
push
loopne
push
out
jl
pop
mov
pushf
cmp
or
je
out
mov
xchg
je
mov
sbb
cmp
cmp
jecxz
mov
iret
shl
add
add
aaa
inc
mov
or
push
lods
inc
test
stc
cmp
xchg
xchg
mov
cmpsb
pop
call
out
mov
adc
mov
sti
imul
call
mov
movsb
ja
fcoms
or
xor
inc
xor
cmpsl
xchg
loope
adc
fwait
pop
jbe
sub
mov
xchg
repnz
and
jne
mov
icebp
enter
je
cli
inc
sbbb
or
stc
iret
sub
add
shll
mov
inc
test
mov
repnz
out
pop
mov
cmpb
lea
pop
je
pop
inc
sbb
insl
mov
inc
push
imul
xchg
or
lcall
sbb
push
cmp
out
jb
outsl
and
jge
cmp
jae
push
cmp
jl
mov
inc
insb
shrb
dec
adc
addl
je
inc
jle
pop
lock
jne
clc
push
mov
or
into
std
jl
movsl
mov
push
ljmp
mov
sub
jg
pop
adc
inc
add
mov
cmc
inc
inc
data16
in
dec
dec
or
push
dec
xor
enter
icebp
stos
xchg
pop
mov
ds
mov
jp
int
sbb
add
lretw
pop
das
or
xor
dec
sbb
adc
lods
mov
js
or
xchg
mov
or
inc
addb
xlat
jns
cmc
jle
hlt
jne
jmp
frstpm(287
or
rcll
jl
cmp
sahf
and
pop
stc
or
dec
push
pop
jle
xchg
push
push
xor
inc
mov
pushf
adc
jecxz
mov
and
add
fidivl
xchg
cmp
sub
jl
aam
mov
jecxz
rclb
push
jle
add
test
mov
mov
jp
inc
push
lock
push
mov
push
adcl
or
stos
jo
jl
test
add
shll
jle
aam
repnz
and
pusha
jbe
add
loopne
insl
pop
test
sbb
dec
in
xor
dec
jg
adc
sub
xchg
mov
call
lret
pop
hlt
jecxz
inc
jmp
loopne
lret
sbb
or
shr
add
movsb
adc
mov
or
xchg
pop
scas
pop
test
rcll
pop
std
jb
inc
or
pop
loope
cmp
test
cwtl
mov
xor
cmp
testl
repnz
adc
push
insb
cmp
adc
lock
dec
andl
es
cmc
sub
xor
sub
mov
push
ljmp
and
bound
inc
inc
xor
mov
jo
jo
out
mov
mov
mov
call
je
cmp
adc
jecxz
es
cmp
jb
testb
push
add
add
repnz
dec
sub
add
out
gs
movsb
mov
movb
and
es
sbb
jns
jb
cmp
mov
push
push
or
adc
sub
in
push
cwtl
inc
mov
inc
push
jae
fists
pop
das
xor
and
outsl
jo
clc
shl
push
out
adc
mov
mov
cld
mov
sub
rcrb
fstpl
addl
jle
add
sub
pop
pop
enter
mov
ret
push
dec
or
inc
push
push
mov
xchg
std
and
cmp
mov
pop
sub
addb
sbb
jg
in
mov
je
xchg
cli
adc
jbe
lea
lea
test
ficompl
or
in
add
jno
shr
int3
cmp
fcompl
jbe
repz
mov
mov
popl
push
push
in
add
cld
push
xchg
mov
mov
mov
pop
call
push
cmpsb
xor
and
or
negb
out
and
add
sub
imul
push
add
pop
dec
sub
push
mov
mov
xor
push
call
pop
xor
ljmp
jecxz
cmp
leave
xor
out
mov
mov
jnp
stos
pop
inc
mov
jbe
rcrl
push
add
or
outsb
lret
addl
adc
cmp
and
and
cmp
cmp
sub
xor
xor
cmp
cmp
inc
jb
cmp
inc
inc
cmovs
jb
push
push
pop
add
pushf
pusha
fs
pushf
jo
js
fidivl
xor
cltd
fs
dec
mov
xchg
cwtl
pushf
xchg
dec
es
mov
or
sub
push
sub
ficoml
or
lock
sub
hlt
and
mov
mov
jle
or
clc
enter
adc
cld
adc
sbb
sbb
or
roll
test
mov
sub
andb
mov
dec
lret
pop
sub
cltd
imul
out
rcl
add
dec
jne
inc
loop
imul
pop
or
jmp
push
mov
gs
pop
add
mov
and
inc
loopne
fiaddl
fstpl
cmp
aam
xor
dec
sbb
push
adc
outsb
es
scas
insb
loopne
in
push
repz
cmc
push
add
mov
aam
repnz
mov
pusha
inc
add
xchg
inc
call
mov
loope
js
addr16
dec
jecxz
jne
lea
and
xchg
pop
xchg
dec
inc
movsb
fbld
jecxz
inc
call
cmp
push
cmp
add
or
nop
iret
push
push
das
cmp
push
push
je
ja
jno
aam
shl
sbb
sub
rorb
dec
cmp
jp
add
fmuls
in
pop
shlb
push
popf
fistl
int3
sbb
pop
adc
test
js
pusha
in
dec
push
push
sbb
add
cmp
pop
je
push
pushf
insl
imul
cmp
and
push
cmp
pop
xchg
add
add
push
add
dec
js
push
addr16
fadds
les
fistl
adc
jns
lret
add
add
fcomps
and
or
push
push
xor
in
sarb
ret
int
mov
xor
adc
ret
mov
adc
xor
lods
add
sbb
jbe
cmpsl
testl
adc
test
push
addr16
iret
adc
sbb
or
xchg
jp
mov
andb
movsl
add
push
popf
or
mov
mov
mov
outsb
or
adc
sub
inc
inc
mov
mov
adc
idiv
push
clc
or
mov
and
cmp
add
ret
jp
pop
lea
xor
mov
movsbl
and
adc
pop
mov
adcl
pop
mov
pop
push
inc
add
xchg
bound
adc
jmp
push
fcmovnb
mov
jmp
fwait
mov
jp
pop
sub
adcl
add
add
dec
sub
bound
fsub
pop
out
adc
add
xor
cmp
scas
push
or
std
adc
stc
jecxz
subb
push
or
cmp
adc
pop
inc
inc
ret
and
out
mov
or
sar
mov
or
popa
pop
sbb
cld
divl
jne
call
iret
les
adc
rclb
cmp
insb
adc
add
xor
pop
inc
sbb
sbb
insb
jb
ljmp
add
push
inc
pushl
mov
sbb
inc
jns
je
mov
mov
and
repnz
pop
addl
pop
push
xchg
sbb
jns
sbb
mov
outsb
pop
pop
inc
adc
mov
pop
cmp
add
in
lods
mov
xchg
decl
adc
push
hlt
mov
cmp
rorb
test
jmp
ljmp
mov
fdivs
cmp
fsubs
icebp
adc
inc
push
xchg
sbb
mov
shrl
adc
sbb
daa
xchg
or
add
jo
pop
xchg
push
es
add
out
inc
loop
lods
jnp
xor
cmp
pusha
xchg
sbb
xchg
cmp
inc
cmp
dec
sub
push
xchg
icebp
dec
sub
or
sarl
cmp
test
mov
or
add
test
push
or
push
add
jo
inc
mov
sbb
hlt
aaa
sbb
cmp
jne
movzwl
or
cmp
ds
rcrl
jno
push
sbb
out
inc
int
add
jmp
sub
and
lret
push
icebp
addb
je
clc
jns
out
fcomps
pushl
adcb
add
clc
jb
sarl
push
mov
inc
mov
sbb
dec
xchg
mov
sbbb
dec
pop
test
push
repz
and
jmp
mov
sbb
andl
xchg
cmc
aaa
rclb
jae
shr
fisttpll
mov
inc
cmp
cmpsb
aas
mov
or
adc
inc
fcoms
mov
fdivrs
sub
dec
push
mov
pop
inc
add
and
daa
jmp
jecxz
rorb
incl
xchg
imul
mov
icebp
int3
add
inc
cmp
scas
dec
xchg
rclb
inc
lods
push
andl
pop
mov
inc
inc
sbb
or
and
mov
sub
add
enter
aas
mov
add
xchg
dec
dec
stc
cmp
xchg
cmp
add
adc
into
xchg
push
xchg
sub
xchg
pop
cltd
or
mov
inc
push
imul
jmp
scas
sub
fstps
out
fs
std
inc
dec
pusha
xchg
jno
cli
or
ret
sub
push
leave
inc
test
out
je
add
jmp
or
js
repz
jns
rolb
lea
xorb
sub
push
push
cltd
sub
mov
fdivrs
jne
ljmp
and
inc
stos
insb
sub
jne
divl
fidivrs
fdiv
or
xor
inc
jp
cmpb
popa
jb
insb
mov
jg
cs
or
cmp
and
andl
sbb
adc
pop
js
sbb
je
aaa
add
or
or
js
add
sub
roll
xchg
sbb
scas
cs
test
inc
clc
mov
scas
inc
clc
or
outsl
push
add
adc
add
pop
ja
out
xor
dec
adc
popa
add
jmp
or
mov
adc
and
add
in
sbb
mov
push
fimull
add
inc
dec
cli
fstpt
xor
adc
add
add
jge
jecxz
add
cmc
jae
addr16
mov
push
and
mov
nop
adc
outsb
dec
pushf
fldenv
repnz
mov
shll
ret
aas
out
int
pop
ljmp
mov
inc
pop
or
pop
push
or
mov
insb
out
add
mov
inc
jg
rcl
adc
aas
adc
ljmp
mov
lock
add
and
sbb
sub
and
cmp
sub
dec
or
loope
push
fsubrs
add
pop
mov
xor
lods
lret
push
loop
mov
loop
sub
gs
push
fisttps
pop
cmp
lods
jg
xor
pushf
insl
jl
in
push
add
stos
jge
addr16
pop
inc
test
sub
test
dec
adc
faddp
sarb
push
icebp
inc
bound
cltd
lret
mov
mov
mov
pop
adcb
push
pop
sarl
lods
pop
lods
pop
pop
pop
and
pop
jbe
inc
and
jg
add
mov
add
clc
je
xor
add
dec
dec
into
lcall
lock
lock
clc
add
mov
cmp
push
fidivrl
sbb
pop
insb
sbb
push
push
and
lea
cmp
shlb
das
sbb
test
add
js
pop
sbb
int
push
push
add
ja
movsb
push
popa
add
sbb
pop
adc
push
inc
jecxz
clc
add
and
adc
adc
cmp
mov
mov
inc
sub
push
bound
test
lret
jae
call
out
dec
lock
and
inc
jmp
icebp
xor
dec
push
movsb
push
jecxz
int3
mov
sbb
jle
mov
xorb
xchg
ret
push
pavgb
pop
mov
jb
cmp
out
sbbb
xor
sbb
sbb
jnp
fisubrs
adc
push
cmp
stc
rol
push
push
fisttpl
inc
sub
cmp
mov
inc
icebp
sarb
dec
pop
loope
sbb
push
pushf
mov
xor
mov
or
into
xchg
nop
or
or
int3
pop
xlat
or
subb
lea
sub
jb
dec
push
dec
loop
xchg
xchg
negb
sbb
mov
das
push
and
out
inc
aam
inc
add
inc
pushf
dec
or
sbb
ds
inc
sbb
mov
pop
mov
aaa
into
les
and
xor
push
mulb
in
dec
enter
jbe
jbe
mov
adc
insb
cld
pusha
and
dec
cmp
sbb
in
or
das
adc
inc
dec
push
jmp
into
jl
push
inc
sbb
les
mov
test
jmp
or
test
sub
or
cmp
stc
inc
lods
mov
mov
and
jne
or
or
inc
les
and
xchg
xor
jnp
popa
daa
lods
addr16
and
roll
in
nop
icebp
jne
and
xor
inc
les
ror
clc
xchg
rolb
xor
jmp
sub
cmpsb
sub
add
lcall
push
shld
pop
outsb
sti
mov
xor
pop
sub
je
push
popf
ds
cmp
call
sahf
and
pop
negl
pop
add
add
push
outsb
arpl
adc
es
loope
add
sahf
out
fisttps
or
or
rcll
sub
dec
and
nop
repnz
mov
sti
or
xchg
test
and
pop
mov
or
or
nop
mov
fisttps
add
shll
dec
xor
adc
or
add
and
shr
add
xchg
fildl
add
and
and
and
lock
test
adc
push
in
add
adc
test
xor
out
fildl
pop
jno
lret
sbb
andl
dec
or
sub
inc
jmp
pop
clc
incb
in
or
adc
lock
and
mov
mov
dec
fisubl
jl
and
jecxz
cmpsb
mov
add
or
cmp
adc
pop
dec
std
push
and
sub
sarl
je
sbb
loope
popa
faddl
adc
add
dec
add
out
ds
pusha
mov
pusha
loope
pop
sub
push
mov
test
inc
jecxz
and
in
fstp
ds
popf
cmp
sbb
insb
loop
addr16
inc
testb
push
es
adc
pop
jns
dec
sti
add
add
test
test
cld
xor
mov
sbb
push
test
repz
or
cld
push
mov
orl
xchg
in
mov
stos
mov
std
sub
pop
testl
dec
fistpl
or
xorb
sbb
sahf
jbe
es
push
and
inc
add
adc
leave
jnp
inc
flds
add
fstpl
push
or
push
push
cmpb
sbb
cmp
ret
inc
dec
xchg
cwtl
cmp
push
cmp
mulb
lds
neg
and
outsb
insl
adc
adcb
adc
shlb
ret
xor
lret
pop
out
add
mov
aam
xchg
push
leave
jp
inc
aaa
sbb
dec
out
push
ficoms
stos
pop
aaa
neg
and
les
sub
sub
sbbl
mov
psubusw
dec
test
int3
adc
inc
push
jg
hlt
add
fcomps
jnp
jp
clc
ss
ret
ret
pop
in
mov
call
stc
into
jbe
test
loopne
or
or
rcr
mov
inc
int
jo
mov
repnz
gs
add
enter
push
inc
xchg
movb
mov
sbb
xchg
dec
into
pop
not
insl
in
add
inc
pop
loop
orl
mov
lock
jle
loope
pushf
or
jmp
pop
js
mov
movsb
lods
in
and
sbb
mov
adc
and
jp
sub
and
out
inc
adc
jbe
jle
push
pop
outsb
mov
add
and
mov
add
add
or
or
out
jmp
pop
rclb
mov
int
scas
and
mov
and
add
jae
inc
xor
lds
lods
dec
pop
add
out
push
add
icebp
add
or
xor
imul
push
inc
jnp
add
adc
or
and
pop
sub
and
pop
dec
pop
pusha
out
sbb
shll
add
das
in
sti
pop
incb
jno
or
inc
and
mov
test
pop
add
mov
ret
orl
addr16
sbb
add
dec
and
add
cmp
mov
mov
fsubr
in
xor
xor
add
add
nop
dec
or
addb
lea
push
or
mov
rcr
dec
xchg
and
gs
xor
adc
add
dec
pop
nop
add
push
out
int3
popa
and
mov
jns
jb
fnstsw
inc
test
popf
adc
lods
mov
mov
pusha
data16
pop
std
adc
mov
imul
pop
cld
mov
add
or
jge
sub
jmp
sbb
cs
rcll
or
sahf
push
pop
lods
dec
sub
shl
jne
cs
or
gs
je
and
add
mov
cmpsl
pushf
inc
fsubl
ljmp
adc
xchg
push
popa
mov
add
into
das
fldenv
ret
dec
mov
das
pop
in
std
pop
cwtl
and
xor
test
cvtpi2ps
or
mov
mov
icebp
sbb
shll
inc
push
das
mov
inc
add
fidivs
push
out
mov
bsf
jne
mov
loopne
push
in
sbb
xor
push
add
addr16
sbb
sub
shr
ror
fsubl
loop
pop
sub
dec
sub
fwait
popa
aad
push
fstsw
mov
loop
and
and
cwtl
add
jl
and
xor
notb
fldcw
push
push
mov
clc
adc
fldt
lock
fwait
int3
and
fwait
sbb
aam
daa
js
and
jle
call
xor
jmp
repnz
adc
jns
push
and
shll
dec
sbb
and
ldmxcsr
push
or
sub
jle
jb
mov
inc
fsubr
or
mov
xchg
dec
ret
repz
mulb
sub
mov
daa
cmp
push
dec
jge
jbe
insl
jmp
test
mov
pop
pusha
lods
ret
fidivrs
shlb
add
ud2
in
shrl
pusha
cmpsl
js
pop
and
insl
push
and
dec
mov
cmpsb
inc
data16
stc
mov
jle
es
push
jnp
add
xor
mov
mov
dec
enter
adc
add
add
sbb
rcll
gs
sub
mov
sbb
inc
rol
or
mov
xchg
cmpl
call
and
adc
enter
shll
outsb
aaa
add
loope
or
xorl
mov
pop
xor
stos
mov
cmpsb
rorl
push
shlb
jmp
dec
cmpw
inc
inc
fdiv
movsb
ret
bound
cmp
cmpsl
int
lahf
nop
xchg
mov
mov
and
loopne
push
mov
push
or
test
and
pop
out
sub
push
sub
cmp
cs
mov
pop
test
jne
or
jl
push
enter
sub
stos
outsl
add
test
out
add
aam
loope
adc
xor
jo
fbld
rcrl
inc
imul
dec
jns
dec
xchg
loopne
lea
pop
ret
mov
shl
mov
pop
sti
pop
xchg
push
add
loop
rolb
dec
ja
add
repz
int
outsb
inc
push
cltd
insb
pop
and
mov
out
mov
hlt
or
inc
insb
sub
dec
int3
dec
mov
mov
add
test
sahf
scas
test
jb
cmp
sbb
lahf
imul
cmp
or
mov
bnd
incb
jae
dec
mov
rorb
insb
push
mov
sarb
shlb
and
add
mov
mov
push
add
hlt
fadds
aad
ljmp
xchg
orb
dec
stos
inc
sub
pushf
sub
popa
rsm
test
rclb
xor
cmp
ret
fcoms
mov
movsl
xor
or
lock
and
push
cld
not
outsb
pop
adc
in
popf
je
mov
pop
ds
push
or
inc
mov
lock
and
sub
test
shl
mov
jl
cltd
sbb
xchg
mov
xchg
test
inc
les
popa
push
sbb
pop
in
mov
sbb
shlb
adc
push
ljmpw
lcall
lret
loop
dec
add
cli
cmovg
int3
push
mov
pop
push
sub
pop
add
push
icebp
pop
lcall
inc
lock
lock
or
sbb
sbb
loope
loopne
dec
es
mov
sbb
jecxz
cmp
imul
mov
movsb
adc
and
sbb
ja
dec
cmpl
gs
aad
shrb
movsb
out
mov
outsl
xchg
mov
out
and
pop
add
jle
lods
cld
inc
lcall
rorl
sub
test
scas
shl
out
add
add
or
add
inc
adc
xchg
nop
cld
loop
stc
and
xchg
aam
add
xchg
enter
xor
xchg
push
push
repnz
or
adc
sbb
and
nop
and
mov
adc
adc
and
cmp
mov
and
hlt
mov
and
push
imul
dec
add
es
pusha
mov
xor
push
adc
into
mov
or
mov
push
cmpsb
add
movsb
mov
cmp
xchg
ljmp
mov
orl
mov
aad
dec
and
in
or
jne
inc
jmp
mov
sub
or
xchg
add
lds
mov
int3
mov
sub
cmp
ja
adc
test
push
dec
jmp
fs
fisubrl
cwtl
mov
add
pop
jmp
callw
sbb
adc
cmp
or
scas
ljmp
jmp
andl
js
adc
jmp
cmpsl
mov
push
dec
push
or
lods
push
sub
push
daa
add
and
mov
cmp
jle
adc
push
xor
jg
orl
push
shll
push
jbe
lds
mov
cmp
fs
hlt
push
jmp
mov
popf
xor
loop
sbb
mov
ret
xchg
xchg
sbb
push
sbb
mov
pop
cmp
in
fdivp
test
nop
add
jne
lret
sti
lods
xchg
dec
dec
jae
imul
sbb
nop
or
imul
sub
outsb
mov
call
decb
jae
sti
pop
push
sub
rorb
cmp
in
orl
mov
fisttpll
pop
mov
test
ret
daa
or
sub
cmp
mov
pop
shlb
stos
sub
mov
aaa
shr
pushl
mov
shll
test
add
fsts
or
pop
cmp
sbb
ret
mov
add
inc
testl
hlt
inc
xor
fdivp
pop
push
dec
addl
jmp
cld
push
sbb
and
bound
fldt
sub
stc
push
adc
lahf
mov
jecxz
add
int3
push
adc
push
cwtl
pop
mov
push
pop
xor
inc
adc
hlt
jne
jmp
dec
dec
pushf
xor
test
incl
sub
jge
neg
add
mov
orb
movsb
sub
cmp
dec
les
cmp
adc
mov
sbb
ret
popl
enter
mov
sbb
jle
jne
jns
sbb
lods
adc
inc
out
dec
test
dec
cld
add
cli
push
jne
imul
mov
sbbl
rorl
push
mov
orb
test
mov
pop
je
sub
mov
or
mov
sbb
xor
push
xor
push
xor
and
and
and
push
in
and
rorb
out
xchg
and
ja
out
std
mov
or
or
inc
enter
pop
es
xor
mov
inc
testl
fistl
or
jne
test
mov
jne
inc
or
cmp
in
int
cmp
jne
hlt
int3
add
jne
mov
mov
test
pop
inc
rcrl
pop
ret
nop
cmpsb
push
lea
or
mov
or
adc
add
sub
xor
repz
add
icebp
dec
lock
and
pushw
mov
fldcw
add
sahf
sub
sub
int
stc
jg
add
mov
mov
rorb
sub
nop
shll
hlt
pop
or
out
lods
add
or
shr
add
rcll
loopne
out
mov
jg
dec
icebp
xchg
jne
dec
sub
aad
fmull
adc
fwait
lods
aaa
popa
mov
ss
fcoms
shrl
shl
shr
or
mov
sahf
dec
add
jne
insb
mov
or
test
mov
and
lcall
loope
ret
mov
and
jge,pt
cmp
add
fimull
jnp
cmpsb
sbb
sar
pop
or
and
in
fiadds
push
call
or
scas
fidivl
icebp
vmovq
jb
mov
fmull
pop
nop
dec
ja
sub
inc
ret
dec
add
cmp
add
inc
sub
icebp
jmp
push
push
into
jmp
scas
push
pop
negl
dec
and
push
jo
sbb
movsb
int3
and
cmp
int3
xchg
add
push
lret
das
faddl
add
negb
in
sbb
movups
loope
cltd
and
ret
or
push
je
lods
call
xchg
xchg
add
addl
add
inc
push
cmpsl
stc
cmp
xorb
cmpsl
stc
mov
inc
lods
push
or
lods
xchg
lods
mov
fcmovu
push
aad
out
inc
loope
jmp
inc
add
sti
test
pop
jne
inc
mov
cmp
add
push
hlt
sub
scas
inc
mov
mov
push
mov
rorl
dec
pop
cmp
test
push
push
adc
push
or
xchg
scas
cmp
mov
cmp
insb
inc
cs
or
ss
mov
gs
or
out
mov
dec
std
decl
incb
mov
cmp
pop
jne
dec
mov
inc
inc
mov
or
aad
mul
pop
add
rcr
scas
fcompl
add
mov
arpl
sbb
fists
les
mov
or
add
adc
or
lahf
mov
std
cmc
dec
add
pop
push
sub
jnp
and
dec
rolb
notl
pop
jno
mov
inc
jbe
xor
andb
xor
or
add
add
inc
jnp
mov
inc
fnsave
xlat
mov
sarb
or
add
adc
adc
dec
or
push
push
pop
je
psubb
cmpsl
lahf
push
cmpl
out
clc
add
mov
inc
fbld
cmpl
mov
sbb
add
jle
inc
shll
add
push
fidivrl
cs
add
add
je
cmp
pushf
sbb
loop
add
lcall
jmp
sub
add
xchg
adc
pop
xor
rcrb
call
mov
pop
inc
dec
inc
out
inc
push
cs
add
sub
lret
in
pop
idiv
xor
push
or
xchg
or
sub
add
jmp
lea
push
push
pop
lods
adc
ret
dec
mov
sub
mov
inc
or
daa
cltd
clc
shl
push
das
inc
add
pop
and
insb
push
and
sbb
jmp
lea
js
data16
fmuls
pop
lcall
sub
adc
jo
add
lahf
adc
ja
cmp
xor
call
xchg
add
pop
inc
es
adcb
push
dec
inc
call
sub
or
std
add
push
mov
and
jle
xor
lcall
xor
pop
cwtl
imul
jge
sbb
mov
jmp
dec
xchg
fldl2t
call
in
inc
mov
jge
bound
imul
and
fcoml
lea
pop
pop
add
jle
adc
lret
lret
or
cmpl
stos
xchg
xor
fadd
aas
add
inc
jmp
loop,pt
pop
mov
enter
push
or
push
lds
inc
mov
icebp
testb
xor
push
inc
or
add
fists
xlat
or
sbb
inc
xor
cmp
loope
add
mov
mov
and
popf
adc
cmpsl
cmp
dec
fwait
pop
fdiv
bound
jecxz
mov
add
decl
xor
or
jne
pop
cmp
sub
rcll
sahf
add
mov
or
xor
adc
movb
into
inc
xor
xor
adc
popa
mov
mov
ja
sub
int3
xchg
and
adcb
dec
or
push
movswl
les
jecxz
pop
push
fsubl
add
cmp
add
push
mov
cld
add
dec
shrd
push
dec
cmpsb
adc
jle
cmp
add
imull
sbb
clc
sbb
pop
pop
mov
or
cmp
cs
inc
add
dec
jmp
xchg
or
in
clc
sub
or
cmp
or
mov
incb
push
sub
push
or
xor
add
jle
lcall
or
jo
sarb
dec
and
add
mov
sarl
jg
jl
lds
inc
jmp
cmp
fidivrl
rolb
dec
aam
jl
cmpsb
hlt
jns
xor
jb
add
jns
xor
mov
lock
mov
cs
mov
or
jg
lods
jb
outsl
in
imul
iret
xchg
imul
jb
or
sbb
imul
jo
mov
pop
inc
test
stc
mov
add
xor
es
stos
lds
xor
je
int
shll
movsb
sbb
jne
loop
ret
add
jb
lock
inc
mov
mov
and
sub
jb
pop
xchg
add
inc
cwtl
or
or
xchg
sub
xchg
daa
jp
adc
sarb
mov
and
addl
push
sub
cs
push
mov
mov
imul
xor
daa
pushf
ficompl
rol
xchg
push
xchg
adc
xor
inc
mov
pop
or
add
je
dec
ds
xchg
push
shl
jne
add
inc
data16
jp
mov
adc
cmp
lea
or
push
xchg
mov
stos
sub
adc
push
add
jmp
insl
cmp
mov
cld
jl
xchg
fimuls
or
add
or
mov
inc
shr
fsubs
sbb
sbb
call
jge,pt
fldt
nop
jle
gs
or
pop
data16
push
ds
out
lea
inc
stos
inc
popa
je
inc
je
repnz
mov
data16
xor
inc
jmp
add
adc
shll
pusha
scas
bound
stos
or
cmp
push
sub
sti
adc
test
lcall
call
lods
std
call
dec
add
push
pop
clc
fstps
or
sub
fucomip
push
push
inc
push
rcrb
rcll
add
mov
add
adc
decb
sbb
or
adc
ds
cmp
push
outsl
je
fsts
inc
push
inc
bound
push
ja
cmc
inc
cltd
or
jmp
arpl
mov
cmpb
jne
jp
sbb
and
push
pop
sub
inc
adcl
add
hlt
adc
dec
dec
das
stos
mov
hlt
push
jp
cmp
fmull
dec
mov
push
jo
pop
call
lahf
dec
imul
lahf
cmpsl
mov
xor
push
sub
and
pushf
mov
add
ret
push
pusha
mov
dec
pop
push
xor
xchg
xor
mov
shll
dec
fwait
pop
sub
push
cmp
sub
add
das
int
jl
cs
inc
mov
addl
mov
mov
mov
xor
xchg
rcr
mov
cmpl
out
mov
push
or
push
mov
push
mov
loop
insb
adc
sub
cli
inc
imul
pop
pop
call
sbb
fs
aad
cmp
lret
or
ja
jmp
je
mov
mov
jbe
jge
outsl
inc
mov
pop
push
adc
xor
testb
test
sarb
aas
int
lock
mov
mov
jl
cmp
inc
add
jecxz,pn
icebp
mov
xor
in
nop
add
and
lahf
mov
xor
rolb
sbb
mov
pushw
jmp
or
jmp
testb
je
push
ljmp
or
orb
negl
in
arpl
and
sub
aad
cmp
jne
cmp
adc
push
pop
fs
cmpsl
cmp
loopne
test
adc
rorb
add
push
mov
mov
adc
xchg
add
push
mov
cmpsl
mov
or
popa
xor
arpl
adcb
push
insl
aad
dec
movsl
movsl
jbe
in
scas
ret
sub
dec
jnp
cwtl
adc
add
xor
jo
mov
dec
add
push
adc
xor
push
or
adc
test
mov
add
hlt
fxch
add
cmp
or
mov
add
push
and
imul
movl
pop
pop
dec
sbb
xlat
add
loopne
cmp
adcb
adc
sbb
sbb
lcall
jg
xor
iret
sbb
add
call
sub
jle
or
and
rolb
hlt
pushl
cmp
bnd
clc
sbb
inc
jmp
addl
cwtl
es
sbb
adc
cwtl
stos
or
jle
sbb
cmp
inc
test
es
sub
sub
sub
push
cmp
sets
outsl
add
inc
xchg
or
pop
mov
adc
pop
test
cld
dec
jl
jo
dec
mov
sbb
xchg
xor
jbe
lea
jmp
adc
cmp
mov
mov
inc
in
adc
repz
jb
cmc
lods
pop
adc
inc
inc
loopne
mov
push
xchg
push
ret
fsubl
movsb
push
sbb
test
icebp
adc
pop
mov
push
sbb
lods
cld
sub
cltd
mov
mov
dec
movsb
cmp
shlb
das
sub
jmp
fs
or
xchg
rorb
fucom
or
popf
fildl
test
pop
jno
test
adc
or
nop
or
fimuls
nop
adc
and
movzwl
sub
sbb
and
sub
dec
lea
es
pop
incl
mov
xor
mov
test
xchg
push
add
lret
stos
sbb
xor
insb
mov
adc
js
jo
inc
mov
arpl
push
inc
fldl
out
pop
xor
jmp
out
int3
mov
sti
and
inc
mov
cmpl
and
lds
cmp
and
jno
adc
je
mov
inc
sbb
mov
add
cmp
xor
daa
sub
lret
decl
dec
cmp
lea
or
es
add
out
pop
add
or
dec
test
fcmovb
jmp
shr
or
mov
int3
imul
testb
or
bound
scas
push
cld
add
sar
in
stos
mov
cmp
sbb
inc
pusha
lock
fildl
mov
movsl
fldt
add
in
push
je
push
adc
fnstcw
sub
sub
popf
pop
adc
inc
dec
add
lea
sbb
or
mov
shr
cmp
mov
icebp
or
fimuls
add
push
jp
adc
or
cltd
repnz
rcll
mov
mov
inc
xor
enter
mov
jb
stc
out
incb
inc
jbe
mov
pop
and
lods
rcll
call
adc
push
cli
and
adc
iret
rcll
mov
mov
adc
xor
and
aad
test
push
add
notrack
adc
js
cmp
or
test
test
jge
jp
adc
data16
imul
add
ret
inc
rcl
movsb
cmp
je
and
or
fimull
mov
fstl
lods
sbb
push
add
cmp
add
jbe
enter
add
add
call
dec
mov
adc
sub
inc
cli
mov
cmc
sub
push
adc
shrb
xchg
out
insl
call
push
jle
inc
add
fld
insl
stos
push
ja
les
and
or
pop
cmp
pop
mov
add
xor
dec
cmp
lock
mov
sbb
aas
xor
cmpb
inc
stos
nop
shl
insb
xor
inc
xchg
adc
rolb
adc
bound
mov
push
mov
push
push
and
test
inc
adc
sarl
fldln2
and
imul
mov
mov
sub
and
orb
add
mov
in
add
dec
add
out
aad
stc
and
enter
jo
pop
adc
into
adc
das
push
sub
push
fcmovu
add
shll
add
je
mov
dec
jo
or
pop
les
ret
dec
mov
or
pop
pop
sub
push
sbb
ret
jne
movsw
mov
adc
rorb
sub
add
hlt
jo
xchg
or
repnz
leave
jmp
xor
scas
pop
push
sbb
inc
mov
in
psubd
sub
inc
inc
div
iret
mov
fiaddl
sbb
sbb
and
mov
sbb
and
xchg
push
sbb
adc
sbb
push
adc
out
push
inc
and
fldenv
xchg
dec
rcll
or
lret
enter
sbb
or
pushf
fisubrl
in
push
or
pop
pop
fnsave
outsb
jae
lds
jae
lods
rcl
ljmp
jge
loope
shr
test
stc
pop
addr16
mov
jmp
mov
not
cld
lock
je
test
cli
dec
jb
or
add
fists
mov
fwait
mov
test
xor
rcrb
pop
add
dec
dec
scas
mov
adc
push
aaa
hlt
inc
es
xchg
mov
ljmp
push
jp
je
push
or
into
jbe
jns
cmp
dec
adc
popa
aam
sub
push
dec
out
mov
push
in
aam
push
pop
pop
das
push
sbb
lret
sbb
setle
inc
inc
rcll
push
lods
adc
pop
and
test
jle
jb
mov
test
mov
and
sbb
sahf
cs
int3
push
xor
cld
and
dec
pushl
pop
mov
ss
jg
push
ds
adc
and
ret
jne
sub
aam
mov
fadd
das
cmpsb
call
or
je
mov
mov
mov
mov
out
es
mov
push
or
les
mov
jg
pushl
cmp
ja
add
cmp
adc
cmp
jne
sbb
xor
adc
mov
xor
idivl
pop
add
test
cmc
aam
in
push
mov
ret
ja
jmp
mov
pop
lahf
mov
dec
aaa
push
pop
pop
push
pop
mov
sbb
incb
jmp
neg
pop
stos
pop
arpl
push
pop
sbb
outsl
dec
dec
sub
jne
mov
aad
xchg
pop
dec
push
xor
or
pop
imul
mov
sbb
add
test
jbe
mov
aaa
inc
pusha
adc
ja
push
adc
in
jmp
enter
mov
rorb
jg
jge
test
scas
pop
add
mov
lret
sarb
push
mov
rorl
pop
inc
dec
dec
dec
push
sub
xor
cmp
movsl
xchg
xor
andl
adc
add
mov
sti
cltd
pusha
sub
pop
pop
addl
popf
inc
sbb
or
inc
push
inc
inc
mov
mov
mov
pop
jle
mov
add
jo
int3
push
shl
cmp
repz
aam
mov
cmp
xlat
fcomp
fstpt
mov
pop
nop
data16
sti
iret
add
movb
jmp
or
pop
sub
roll
into
or
sub
mov
incb
push
mov
mov
or
adc
dec
push
add
push
inc
push
add
aas
jne
mov
push
add
add
je
test
inc
test
jmp
icebp
adc
jo
or
push
xor
add
repz
pusha
push
fwait
test
rclb
pop
adc
push
pop
sarb
jo
pop
fs
imul
dec
scas
jmp
sbb
inc
mov
lcall
lea
imul
lea
sar
inc
add
pusha
mov
data16
add
neg
into
inc
push
xlat
lret
pusha
loop
rolb
aaa
lock
scas
and
sub
or
adc
sti
out
xorb
sub
add
add
jb
inc
jbe
sbb
mov
or
movb
adc
ljmp
pop
lock
loope
into
and
lea
pop
sbb
int
adc
jae
add
ja
sbbb
add
pop
mov
inc
mull
repnz
pmulhuw
ljmp
loopne
inc
or
into
xchg
mov
push
xor
and
jnp
popa
shll
rolb
push
mov
fsqrt
outsb
sbb
lea
dec
xchg
mov
or
or
dec
push
push
add
movsl
or
ret
popa
pop
sahf
shll
cmpsb
jns
addl
mov
jge
jl
cmpsb
imul
and
rorb
loope
add
jle
and
sub
jno
or
shll
rolb
shrb
mov
cmp
mov
or
push
push
push
lret
int
addb
inc
inc
imul
inc
daa
mov
inc
lods
ss
shrl
insl
adc
pop
in
out
xchg
mov
and
inc
jecxz
lret
dec
jns
test
lock
repnz
repz
push
push
cli
cli
inc
cli
testb
or
ljmp
call
mov
fcoml
add
adc
inc
ret
ret
or
sub
and
leave
mov
fnstenv
dec
dec
cmp
xchg
mov
mov
dec
rolb
loope
xchg
mov
cmp
dec
cmpsl
add
pusha
insl
jno
lods
lcall
push
sub
loop
rcl
xor
out
jge
and
inc
out
mulb
add
cmp
inc
test
rcll
adc
xor
jae
rcll
into
or
jne
sub
cmp
ss
inc
test
xchg
and
jge
mov
adc
lods
dec
orl
jno
xor
call
hlt
adc
cmp
cld
lea
fisubl
lcall
test
and
pop
insl
pop
inc
mov
lods
lods
rolb
cltd
add
sbb
clc
sbb
xchg
add
sbb
jb
inc
sbb
sbb
sbb
xor
enter
lock
inc
mov
stc
jge
xchg
sbb
mov
dec
leave
pop
jmp
add
jne
add
in
test
sub
fwait
mov
into
mov
adc
je
cwtl
sub
sub
in
and
scas
adc
inc
add
inc
mov
push
add
clc
btr
push
nop
cmp
cmp
shll
test
jle
out
adc
in
dec
andb
dec
push
jb
shr
dec
dec
pop
dec
pop
add
or
mov
shll
cmp
jne
sbb
neg
and
js
sub
call
jl
mov
and
js
mov
add
and
push
mov
jecxz
adc
push
into
je
sub
out
cmpsb
clc
loope
push
sti
and
xchg
push
cmc
lahf
push
lock
mov
add
sti
push
movsl
insb
sub
into
out
enter
add
or
sub
push
pop
ret
jbe
lret
movsb
xabort
mov
adc
dec
enter
cmp
mov
and
dec
int3
mull
sahf
jne
push
and
out
cmp
outsb
into
jbe
mov
inc
xchg
inc
lahf
testb
nop
dec
mov
stos
aas
std
add
xor
inc
cmpb
or
add
dec
cmp
and
mov
repnz
sub
incb
sub
orb
jp
xchg
mov
repnz
mov
jp
jne
dec
mov
test
jb
int
pushf
adc
push
inc
ret
and
add
push
pop
xor
jbe
ret
adc
or
sub
test
and
pop
jp
mov
lcall
or
sub
mov
adc
je
ljmp
adc
ror
shr
add
cmpsl
outsl
nop
push
or
add
or
pop
pop
scas
add
xchg
sbb
dec
adc
ss
rcrb
xor
xchg
dec
lret
push
xor
adc
or
cmpl
ret
addb
mov
iret
and
xchg
out
lret
into
pusha
inc
xor
jmp
mov
and
pop
pop
add
int3
push
inc
mov
ret
cmp
mov
cmp
xor
lods
inc
push
pop
imul
or
or
jo
dec
push
add
add
inc
or
add
shll
je
dec
mov
or
xchg
jp
pop
lahf
push
add
and
and
cmp
xor
mov
mov
inc
jge
push
movb
mov
pop
cmc
inc
into
add
cmp
and
cld
cld
cltd
pusha
inc
mov
adc
out
sbb
inc
stos
jg
adc
and
xchg
or
cwtl
into
xchg
sub
aam
out
loop
nop
mov
mov
cmp
pop
test
divb
into
or
add
or
sbb
sbb
add
push
loopne
mov
mov
pmaxub
xor
inc
jg
into
cmc
test
pushf
into
into
mov
cmp
inc
pop
sub
push
lock
outsl
lock
nop
pop
cwtl
pop
ja
sub
cmpb
icebp
and
or
pop
add
es
nop
aas
mov
sbb
ja
outsb
mov
test
lahf
pop
test
inc
sahf
xchg
add
or
adc
add
sbb
std
into
and
imul
scas
push
imul
or
sub
jmp
lret
leave
dec
in
lret
cwtl
ret
lods
xchg
push
xor
xchg
adc
cmp
push
scas
cltd
flds
sbb
push
sbb
push
dec
xchg
sbbb
loopne
shll
push
xchg
subb
lret
mov
ljmp
cmp
push
or
dec
sub
cmp
jmp
jle
xchg
andb
ret
fisubs
inc
orl
push
add
push
daa
or
and
inc
jg
add
jge
addr16
lret
lret
ljmp
xor
icebp
flds
push
mov
inc
push
nop
dec
sbb
jbe
adc
xlat
mov
xchg
cltd
test
mov
sbb
jmp
adc
push
sub
jb
add
inc
or
out
je
mov
call
adc
mov
cmp
jbe
inc
inc
int3
xchg
and
imul
jmp
pop
sbb
jo
and
fiadds
imul
fwait
negl
or
xchg
loope
into
mov
dec
jl
push
cltd
push
sbb
push
cmp
sbb
js
loope
movsl
cmp
add
rolb
repz
push
push
sbb
add
push
and
mov
movsl
cld
lods
test
sbb
inc
jo
js
fs
push
pusha
insl
loopne
rcrb
mov
scas
fldl
mov
cmpb
pushl
repnz
pop
in
pop
xchg
inc
test
push
xor
mov
out
je
and
call
fcoms
cs
cmp
cwtl
pop
mov
nop
out
nop
xlat
and
sbb
int3
adcb
sbb
push
and
test
cli
shlb
arpl
mov
fcoml
pusha
inc
xchg
adc
sahf
fstps
dec
inc
sbb
inc
pop
xchg
dec
clc
jg
sbbb
jge
lea
jae
lret
or
or
pop
push
imul
adc
or
xchg
adc
and
call
sbb
inc
and
imul
add
mov
push
add
bound
inc
outsl
aas
inc
setp
sub
or
add
lds
jmp
push
push
xlat
cmp
inc
sub
sbb
jbe
adc
xchg
sub
adc
jns
or
jmp
xor
mov
mov
hlt
or
mov
push
jne
push
inc
jo
push
mov
lods
movsb
addr16
xchg
nop
insl
jmp
ror
push
xchg
jo
or
cmpb
mov
fisubrl
sub
inc
push
and
inc
int3
sbb
xor
jo
or
mov
and
push
sbb
insl
addb
test
mov
xor
inc
shlb
clc
mov
inc
test
or
or
and
pusha
jns
cmp
dec
sbb
dec
rcrl
push
clc
in
or
test
cwtl
and
je
mov
jg
xor
retw
call
mov
add
xchg
push
movsb
ss
lock
push
cmp
test
lea
frstor
inc
jno
int3
jns
add
in
adc
outsb
add
mov
jbe
lock
dec
mov
lret
ds
jae
fsubs
js
cmp
jmp
dec
loop
add
dec
scas
xchg
fisttps
xchg
sub
or
js
cli
mov
rorl
mov
pop
lahf
xchg
mov
push
sbb
inc
test
cmc
inc
rcrl
imul
push
das
push
mov
push
pop
cli
xchg
sub
sub
add
inc
cli
ss
mov
jbe
jb
icebp
popa
lcall
mov
jo
and
mov
data16
inc
hlt
xor
add
mov
subl
in
push
adc
push
mov
out
push
testb
xorb
inc
ds
push
mov
mov
sub
mov
aad
mov
dec
mov
adc
cli
xor
add
xor
dec
pop
adc
pop
pop
subb
mov
jo
mov
scas
adc
scas
adc
inc
push
jo
sbb
addl
jle
jg
data16
push
test
push
sub
or
jne
pop
inc
das
mov
mov
adc
mov
and
repnz
inc
xchg
rclb
pop
mov
jmp
dec
sub
or
xor
cvttsd2si
mov
inc
xchg
pop
sbb
je
pop
push
and
fld
add
sbb
aas
dec
cmp
fsubrp
test
jns
fstps
mov
xor
add
add
fucomi
sub
das
fcomp
adc
rcr
mov
ret
fstps
mov
dec
xchg
sbb
je
and
mov
icebp
mov
push
add
mov
icebp
dec
cmp
dec
in
iret
mov
popf
and
gs
sub
fdivr
pop
cmp
mov
faddl
adc
es
insl
nop
popa
push
cmp
dec
enter
mov
mov
xchg
je
aad
nop
mov
push
mov
lock
xchg
popa
sub
cwtl
pushf
xchg
fwait
clc
dec
add
test
inc
push
in
lock
or
mov
jne
mov
inc
lock
add
adc
jb
mov
call
fcoms
test
push
inc
xor
testb
add
pop
fmul
aas
es
cmp
aaa
add
dec
pushf
mov
xor
dec
lea
and
adc
es
jne
cmp
aaa
cwtl
jae
dec
jb
inc
adc
push
dec
jl
lret
dec
dec
aaa
push
les
ljmp
add
xor
sti
push
add
sub
pop
dec
cmp
enter
loopne
out
and
subb
adc
sbb
insb
fwait
in
mov
and
sub
lret
nop
and
mov
bound
push
pop
xor
insb
inc
cmp
call
and
xor
les
test
leave
mov
jge
nop
fsubl
in
movups
aam
pushf
in
les
fadds
jb
inc
lcall
insl
add
jb
mov
ss
push
jb
call
stos
inc
cmp
scas
push
mov
and
pop
hlt
add
cmp
shll
rclb
stos
ja
and
jb
ds
lods
js
lods
andb
add
sbb
push
sbb
jecxz
xchg
insl
push
add
mov
cmp
xor
lock
fs
cmp
les
cmp
loopne
push
icebp
repz
fcompl
es
dec
sbb
aam
enter
mov
call
xchg
push
xchg
cmp
inc
out
shrb
dec
fdivs
inc
adcb
dec
adc
es
lods
scas
sub
xchg
dec
xor
cmp
xchg
dec
es
inc
dec
insb
inc
es
fs
xor
add
dec
cmp
add
inc
mov
les
enter
in
rcl
adc
sti
xchg
inc
cmp
xchg
lock
cmpsb
fs
xor
dec
pop
push
pop
popf
xlat
xor
in
das
pop
dec
shll
fs
aam
in
or
dec
jb
outsb
adc
xchg
inc
fwait
aam
xor
cmp
test
jns
inc
sbb
inc
mov
add
or
in
aad
call
push
adcb
push
inc
add
incl
lds
fisubl
adc
arpl
mov
cltd
movsl
adc
andb
sbb
js
loopne
inc
pop
pop
rorb
popa
leave
mov
sbb
scas
in
inc
xchg
dec
push
sub
adc
jb
mov
or
sub
call
cmpsb
sbb
call
in
sub
sub
fdivs
or
inc
or
sub
add
fwait
out
and
or
pop
bound
movq
mov
fs
or
aam
or
pushf
xorb
cmc
dec
push
and
cli
cmp
sbb
js
cmp
mov
or
xor
out
sub
loopne
imul
rclb
push
mov
push
xchg
dec
clc
out
popf
xor
scas
jne
in
sbb
sub
popf
adc
jno
repnz
fcom
daa
andb
fcompl
or
xchg
xlat
xchg
adc
test
lods
mov
leave
leave
leave
mov
mov
leave
enter
lcall
xchg
dec
adc
sub
lahf
xlat
arpl
inc
clc
cmp
adc
push
adc
shrb
lahf
enter
sub
inc
or
cld
lahf
mov
cmpsb
shl
scas
fsubrs
pusha
xchg
sbb
mov
push
fwait
insb
push
scas
fcoml
or
das
popa
push
jecxz
cmp
mov
adc
jo
cmp
mov
jg
jbe
gs
push
mov
pop
mov
adc
int3
das
unpcklps
mov
sbb
aad
and
movsl
popa
push
push
mov
jno
fsubl
pop
and
pop
aas
icebp
stos
rclb
jb
inc
pop
inc
je
sub
push
sti
pop
push
adc
mov
push
or
pushf
cmp
shlb
loop
or
jno
shlb
dec
mov
add
test
pop
xor
fwait
in
mov
pusha
cltd
fwait
in
dec
fs
mov
add
outsb
dec
jl
adc
scas
mov
sbb
outsl
mov
mov
cmp
fsubl
or
add
inc
fwait
mov
das
adc
or
or
inc
mov
inc
test
cmpsb
ret
pusha
xor
lret
jno
cmpsb
imul
push
orl
jp
cmc
dec
cmpsl
dec
mov
xor
or
sahf
cmp
dec
and
cmp
add
xchg
imul
add
push
shll
in
cmpsl
test
popa
jne
sbb
jmp
lds
sub
jg
mov
cmovl
stos
add
rorb
stos
fucomip
outsl
sub
in
fs
call
sub
push
cmp
fs
pop
push
jne
stos
push
popa
add
pop
or
popa
inc
push
mov
push
cmp
nop
or
or
xchg
in
inc
or
push
push
jo
or
and
add
call
inc
ja
stos
arpl
add
push
mov
or
stc
push
and
mov
or
shlb
add
cmp
adc
faddl
ds
ret
test
je
jns
xlat
clc
stos
leave
adc
and
sbb
fdivrl
jl
or
dec
fstpl
cmp
les
in
and
inc
cs
add
cli
push
mov
insb
scas
clc
add
sahf
cwtl
movsb
adc
fists
mov
std
sub
in
scas
das
lds
in
aaa
xchg
lock
je
and
aam
shrb
sbb
inc
arpl
xchg
subl
gs
imul
lcall
or
sbb
aam
out
or
or
scas
scas
adc
scas
pop
adc
xor
mov
xor
add
fcmovnbe
movsb
dec
push
mov
xchg
fcmovnb
rorl
xchg
xchg
sarb
mov
cwtl
insb
sub
nop
dec
jmp
movsb
pop
shlb
add
xor
cmc
test
and
inc
icebp
push
mov
xor
das
xchg
sbb
inc
push
rol
ret
cmpsl
std
shlb
loopne
push
mov
xor
push
mov
xchg
nop
xor
inc
divl
mov
mov
mov
add
mov
call
mov
or
inc
inc
and
fadd
insl
jmp
add
in
mov
lds
xor
push
xchg
test
adcb
mov
push
xor
or
adcb
rcll
std
mov
cmp
jns
adc
dec
stos
insb
jmp
mov
nop
fadd
mov
sbb
shll
xchg
lcall
push
imul
rol
mov
aas
punpcklwd
cmpsb
fcom
push
rorb
mov
xlat
fsubrl
mov
cmpsb
mov
sbb
mov
pop
mov
repz
fcom
add
stc
movsb
shr
rorb
or
outsl
ret
test
inc
lret
lret
sub
inc
or
sub
ror
out
push
sub
ret
xor
fadd
xchg
std
xchg
ret
jae
inc
jb
aaa
in
movsl
or
adc
int
adc
test
mov
insl
sub
or
test
scas
and
aam
fsubl
jae
std
add
mov
and
int3
inc
xchg
xchg
sbb
aam
enter
sbb
aam
or
add
sub
inc
pop
lods
es
call
pop
in
mov
fmuls
add
stos
inc
mov
push
add
push
hlt
mov
shll
push
test
or
inc
add
ss
int3
bound
cs
mov
mov
mov
inc
cmpl
out
sub
nop
les
add
ret
inc
sbb
mov
jno
icebp
add
repz
fsubl
or
jno
dec
pop
mov
movsb
shl
fldt
mov
add
test
jne
movsb
into
fnsave
mov
dec
and
mov
in
lock
aaa
lock
pop
mov
mov
aam
push
loopne
xlat
push
mov
cmp
mov
popa
ret
shlb
daa
push
movsb
add
inc
test
mov
test
shrl
movsl
adc
push
xor
sub
rcrb
add
mov
mov
test
mov
sub
pushf
std
imul
adc
or
inc
mov
xchg
insb
in
xor
xchg
test
cwtl
xchg
inc
push
cmp
bound
shll
and
sbb
inc
enter
ret
xchg
mov
ret
push
je
daa
iret
jno
bound
inc
lock
inc
add
sti
test
cwtl
ret
popa
pop
ret
test
ret
jl
ret
mov
addr16
in
adc
push
sti
rol
mov
sbb
shll
push
xor
inc
sub
jge
movl
les
jecxz
xchg
push
rolb
lods
cmp
lds
mov
shlb
and
inc
clc
lds
mov
enter
fcoms
sub
inc
les
jno
aad
adc
dec
adc
or
xor
and
ret
or
and
dec
pop
insl
imul
add
lret
fs
out
call
inc
xchg
loope
sub
pusha
out
stc
pop
loopne
out
inc
inc
out
enter
cwtl
inc
mov
or
enter
and
mov
cmp
mov
mov
cltd
or
xor
inc
push
mov
xor
enter
test
pop
lcall
mov
or
leave
fmul
pop
inc
ret
lret
inc
pop
xchg
das
minps
or
xor
or
int
xchg
sbb
loopne
cmp
setnp
adc
push
inc
and
add
push
and
mov
das
ret
jns
xor
fimull
es
in
xor
stos
aad
push
pop
jno
or
dec
and
adc
jl
xor
jg
int3
loopne
inc
sbb
in
inc
sub
fsubrs
push
int
and
or
sub
jbe
inc
xchg
adc
sahf
jecxz
int
les
inc
iret
in
adc
pusha
sub
imul
mov
sbb
add
cmpsb
int3
in
or
scas
adc
or
sbb
lcall
leave
dec
inc
lahf
shlb
mov
mov
cwtl
mov
fldt
push
pop
dec
push
push
js
pop
dec
jl
xchg
inc
sub
mov
stos
mov
sbb
inc
lcall
xchg
or
sub
and
out
pop
sbb
fbld
jl
inc
leave
jae
mov
sbb
cmpl
jns
dec
pop
cmp
add
dec
sbbb
std
jne
in
add
or
add
xchg
stos
mov
or
and
out
orl
dec
and
or
and
dec
and
shlb
and
cmp
pop
or
jno
out
std
scas
in
sbb
out
out
jl
ret
adc
or
addb
sub
test
scas
cwtl
inc
cmp
fnstenv
adc
aaa
push
xchg
adc
mov
and
mov
movsb
adc
sub
sbb
ret
lea
xchg
pusha
xor
mov
fs
loope
nop
cltd
test
stos
jo
xor
sarl
sbbb
inc
pop
nop
and
dec
cwtl
pusha
mov
inc
test
push
adc
mov
icebp
adc
in
test
ret
call
add
and
add
movsl
xchg
sarb
test
mov
xor
andl
mov
mov
fdivs
cltd
nop
inc
push
adc
and
push
fists
jae
adc
and
mov
in
jge
add
aam
lret
adc
aam
leave
xorb
add
or
cmp
jno
push
add
or
out
sbb
fistpll
add
add
inc
pop
mov
adcb
aam
add
decb
cmp
xchg
test
test
sbb
enter
fildl
inc
call
mov
sub
or
sbb
sub
movsl
cmp
sbb
xlat
cmp
daa
call
cmp
scas
and
fs
das
fcomps
loop
inc
sbb
arpl
ficompl
push
repnz
push
sbb
or
dec
adc
mov
push
sbb
mov
mov
lods
xchg
cmp
xor
sub
arpl
cmp
out
incb
sbb
or
dec
push
ret
roll
sbb
push
pop
cmpsl
pop
pop
aas
rcrb
adcb
in
adc
ficoml
mov
push
inc
or
insl
inc
adc
mov
pushf
mov
sbb
fcoms
out
test
xor
call
cmp
sub
aam
or
nop
push
sbb
aam
sub
sbb
cmpsb
ficompl
xorb
or
lds
pop
xchg
jne
dec
movsl
xchg
mov
arpl
add
ffreep
dec
inc
add
ss
and
fsub
inc
mov
or
loopne
dec
leave
and
mov
les
loope
add
call
add
and
loope
or
adc
nopl
jnp
inc
cmp
aam
fidivl
sbb
in
in
leave
and
pushf
adc
or
imul
bound
dec
in
adc
xchg
stos
insl
or
inc
clc
scas
add
inc
fsub
adc
or
sub
sub
and
shlb
insb
mov
push
inc
sbb
insl
xchg
and
scas
xchg
adc
dec
fbstp
sbb
call
in
cmp
xor
jl
fcmovb
pop
mov
rcrl
sub
push
adc
nop
sub
adc
push
jnp
and
je
and
stos
in
es
ficompl
fs
dec
cwtl
pusha
jo
xchg
dec
mov
xor
and
pop
mov
xor
orb
dec
clc
inc
jo
je
lea
fs
mov
pusha
aas
adc
pop
jo
xchg
sub
cmp
pop
inc
add
sbb
pop
in
pusha
adc
or
push
pop
test
lds
scas
mov
sbb
inc
mov
inc
mov
std
fmull
imul
jno
in
sub
xchg
push
jmp
call
and
push
sub
mov
fists
outsl
test
jmp
mov
lock
xor
xor
pop
les
scas
in
ljmp
mov
test
mov
sbb
add
popf
cltd
rorb
in
adc
add
mov
rcr
push
stos
test
fcomps
nop
lret
mov
sub
and
or
push
push
leave
mov
stos
mov
and
and
fmull
sbb
repnz
cltd
mov
test
adc
dec
add
cmpsl
mov
sbb
sbb
adc
fcompl
sbbb
mov
sahf
in
pushf
lock
jmp
push
addl
pusha
push
clc
inc
lock
test
hlt
push
cmc
dec
pop
adc
cmp
in
int3
or
sub
xor
push
inc
adc
push
xorl
je
pop
out
mov
pop
in
pop
shrl
subb
loopne
lock
stos
aaa
iret
aam
mov
jnp
push
cmpb
popa
nop
inc
imul
mov
jne
xor
push
mov
mov
rcl
xchg
sbb
inc
pop
pop
sbb
jmp
jne
shll
pushf
pushf
test
fnsetpm(287
xor
adc
rorl
xchg
shrl
dec
int
imul
mov
fisubl
adc
shlb
scas
pusha
sub
mov
pop
adc
cmpsb
mov
add
je
and
lea
fadds
push
icebp
dec
adc
inc
pop
insl
cmpsb
shrl
aad
dec
cmp
nop
jl
inc
sbb
inc
fdivrl
add
inc
fcompl
push
mov
dec
ret
xor
cmp
mov
push
shrl
nop
sbb
sbb
nop
cld
movsl
pop
aam
outsb
lret
cmpsb
push
in
dec
notb
imul
rol
cmpb
pop
dec
xlat
dec
xchg
popa
adc
xchg
mov
or
and
or
mov
pop
sub
and
inc
add
add
jnp
mov
pusha
or
lahf
pop
sti
lods
test
adc
sub
push
and
inc
sbb
test
sub
sub
sub
and
jbe
add
imul
sbb
cmp
add
nop
xor
stc
outsb
rcrb
dec
pop
into
loop
jae
mov
dec
and
gs
cmp
in
popa
add
add
mov
add
sub
fs
push
outsb
add
cmpsl
cmp
cmp
or
inc
sbb
adc
add
pop
sahf
mov
inc
add
push
cmp
out
outsb
test
loop
pop
cs
js
xchg
pop
lahf
scas
cmp
lret
fdivr
aas
jmp
push
mov
int3
ja
inc
add
mov
out
testl
sub
inc
lcall
inc
mov
mov
ljmp
add
fistpl
or
jnp
pop
repnz
mov
add
and
sar
jmp
inc
xchg
sub
rcll
mov
mov
jns
mov
into
adc
mov
iret
repz
inc
cmp
sub
mov
add
inc
dec
dec
test
and
dec
dec
dec
dec
dec
dec
push
mov
sub
pop
pop
popa
bound
gs
imul
jo
jb
lock
pushl
jne
ja
jns
xor
xor
xor
ss
cmp
sub
daa
adc
mov
sub
adc
or
outsl
cmp
adc
mov
push
mov
cmpsb
loopne
jnp
cmpsl
stc
scas
push
insl
adc
push
jnp
push
outsl
in
dec
mov
je
jb
outsl
arpl
fs
out
sbb
push
dec
cmpl
imul
push
outsl
es
gs
xor
cs
adc
popa
and
adc
cmp
je
outsl
outsb
add
gs
xor
fcmove
push
cmp
aas
rdpmc
add
smsw
testl
aas
inc
insl
mov
cmpsb
ljmp
je
jb
gs
cmp
mov
outsl
add
add
add
add
je
push
jb
xor
popa
mov
popa
jb
mov
inc
imul
dec
xor
xor
sti
and
cmp
idiv
sub
dec
and
jns
add
das
add
adc
push
dec
push
inc
inc
gs
insl
mull
xchg
daa
dec
outsl
jbe
dec
arpl
ja
mov
push
jo
sub
addr16
dec
jne
stc
push
push
jnp
push
mov
inc
jo
imul
jb
push
inc
out
mov
mov
jae
cmp
jg
int3
fstl
jne
xor
lock
and
daa
push
scas
jle
fstps
adc
and
jae
cmp
jbe
inc
adc
push
popa
das
jo
or
push
sbb
sbb
lock
pop
nop
inc
ud0
dec
test
arpl
pop
inc
adc
inc
mov
mov
imul
sub
sub
sub
cs
movsl
cmp
cmp
ds
inc
push
adc
mov
std
sub
jge
jg
cmp
in
shrb
cs
and
imul
js
push
pop
or
adc
clc
pusha
pop
pop
push
inc
insb
jae
stc
lcall
mov
inc
inc
or
pop
insb
mov
jo
insl
and
jb
jbe
dec
push
mov
mov
or
dec
dec
inc
sbb
in
dec
dec
inc
and
add
xor
sbb
push
mov
jo
insb
imul
insl
sub
mov
je,pn
jo
popa
fldt
sub
push
insb
lock
fs
scas
int3
in
mov
mov
push
insb
xorb
mov
jnp
inc
popa
and
daa
mov
jne
xlat
push
outsb
addr16
xor
and
insl
push
xchg
insl
inc
cs
xor
addb
mov
mov
adc
insl
les
out
outsb
and
mov
and
negb
mov
sbb
scas
sarl
es
push
jne
bound
push
sub
ucomiss
dec
in
ds
loopne
sbb
fidivrl
add
dec
loopne
outsl
mov
dec
pusha
push
sbb
daa
sub
xchg
addb
das
arpl
cmp
arpl
adc
loopne
dec
popa
sub
fnstenv
xor
inc
xchg
push
push
sbb
insb
imul
mov
int3
or
push
or
js
lcall
fs
sbb
jnp
lds
mull
push
push
fistps
or
cmpsb
cs
push
out
or
aaa
xor
xlat
shll
hlt
add
pusha
pusha
pop
dec
add
into
sahf
dec
dec
aaa
ja
imul
jae
fs
inc
psubd
add
inc
inc
dec
imull
push
mov
sbb
das
mov
mov
lds
fisttpll
jae
jle
outsl
push
or
cmp
cmp
in
bound
cmp
mov
or
ljmp
imul
js
mov
outsb
popa
pop
or
test
inc
jno
rolb
or
std
push
push
leave
nop
inc
inc
push
shrl
jbe
mov
adc
nop
pop
sub
mov
and
and
pop
push
outsb
add
cmp
addr16
jne
lret
scas
xor
fdivrl
jo
sub
pop
mov
pusha
stos
xor
push
sub
lret
inc
sub
xlat
and
jmp
outsb
aad
cmp
push
and
cmp
cwtl
pop
fsubr
ja
ds
inc
inc
and
dec
fldln2
mov
and
jg
lcall
js
imul
dec
sub
rol
das
lret
jno
std
aas
incl
icebp
pusha
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
data16
jo
imul
outsb
das
aad
popa
dec
add
xor
xchg
fisttps
jg
js
jae
mov
addr16
dec
pop
add
add
xlat
adc
imul
mov
jnp
xchg
adc
adc
add
add
add
add
in
adc
pop
pop
or
aaa
ds
push
pop
hlt
and
jns
mov
or
pusha
add
js
or
sub
std
fcmovnu
cltd
add
sbb
addb
imul
in
rolb
xchg
test
add
xor
adcb
pop
daa
push
cmpb
push
mov
iretw
and
sub
jb
int3
push
pop
pop
into
jo
add
loopne
mov
ljmp
int
push
pop
dec
rorb
sbb
add
lea
and
nop
xchg
pop
jb
xchg
xchg
xchg
lock
mov
mov
push
or
xor
xchg
push
inc
ds
pop
pop
dec
cmp
test
and
loope
adc
cmp
loope
adc
data16
jl
cmp
or
hlt
ficomps
add
nop
fwait
and
sub
cmp
dec
dec
add
test
cmp
xchg
dec
cs
adc
add
mov
addb
sbb
add
add
add
add
mov
inc
add
aaa
or
cmp
add
push
adc
out
and
pushl
addl
mov
xchg
xchg
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
inc
adc
idiv
stc
cli
sti
cld
std
inc
inc
movsb
adc
sub
call
pop
sbb
add
xchg
push
sbb
push
pop
jg
xor
ja
inc
cs
jae
jb
push
call
dec
stos
inc
sbb
ja
ss
popa
mov
bnd
mov
daa
pop
lea
dec
mov
popa
addr16
outsl
js
push
push
inc
push
mov
es
dec
and
insb
gs
mov
mov
jne
dec
mov
daa
add
insb
outsl
aas
lret
scas
in
dec
imul
mov
imul
ds
and
inc
jb
test
insb
jns
daa
pop
enter
mov
jo
mov
sbb
lcall
addr16
cmp
outsb
adcb
pushw
mov
inc
movsl
jns
imul
pusha
inc
jbe
push
rorb
jns
sbb
shlb
lret
push
clc
popl
test
clc
mov
pusha
gs
stos
loopne
and
or
test
mov
cwtl
xchg
pop
pop
pop
push
push
jae
insl
mov
jp
aas
cmp
mov
shrb
imul
xor
outsb
gs
mov
data16
xchg
xchg
les
push
push
push
dec
testl
aam
cwtl
repnz
mov
fcmovb
cmp
mov
arpl
xchg
mov
imul
mov
fistpll
xchg
inc
outsl
jae
pop
cmp
in
xchg
jg
addr16
shlb
adcl
push
pop
aaa
mov
pusha
push
or
aad
sbb
je
outsl
xchg
or
arpl
daa
xchg
mov
data16
jns
arpl
pop
cmp
cmp
add
idivl
xor
sub
fldcw
es
jle
sub
sub
dec
fstpt
sub
sub
push
jp
or
cmp
jmp
mov
repz
cmp
lret
roll
pop
pop
cwtl
into
xor
lods
jb
sbb
push
jb
imul
jo
ss
lret
add
xor
lods
sbb
push
xor
in
and
es
jo
jo
inc
out
mov
jl
sarl
lahf
sub
or
inc
add
clc
adc
iret
repz
loopne
enter
cmp
fnstcw
dec
adc
push
in
imul
push
xchg
sahf
idivl
nop
push
mov
ds
repz
adc
insb
push
fldcw
js
fs
scas
fdivp
sahf
out
push
pusha
pusha
push
pop
pop
push
push
fidivrs
repz
push
cmp
push
dec
push
dec
ss
repz
jns
cmp
xor
iret
repz
sub
and
adc
sahf
cmpsl
stc
cmp
hlt
paddusb
mov
pushf
jl
cmp
sahf
out
idiv
push
inc
push
mov
sahf
out
inc
inc
cmp
add
cmp
repz
or
out
cmp
jl
sub
in
ret
out
sahf
rcrb
adc
or
mov
shlb
jns
push
xor
mov
jb
add
adc
pop
push
push
lret
jae
fs
sbb
ljmp
push
shrd
sub
add
pop
loope
add
jle
push
insb
cmp
inc
inc
dec
jae
mov
test
mov
push
out
sbb
dec
inc
dec
xor
inc
dec
dec
xor
idiv
dec
push
push
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
out
push
das
adc
sub
adc
jg
std
incl
popa
into
mov
mov
adc
outsb
mov
ds
inc
adc
pop
inc
pop
clc
lret
sbb
repnz
aas
jnp
jg
jge
arpl
cmp
adc
dec
scas
jp
outsl
sti
pop
jno
in
fstl
mov
and
enter
cmp
dec
imul
lret
add
inc
lcall
or
push
test
sub
fwait
ss
outsl
ficomps
fcomps
int
jns
ds
xor
incb
int3
dec
dec
pushl
jns
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
ljmp
adcb
adc
xchg
icebp
mov
cld
or
hlt
loope
jmp
cmp
jle
inc
mov
xchg
push
pop
mov
ds
dec
clc
cmp
scas
lods
jb
xor
inc
incb
mov
pop
and
es
fcomps
cmpl
add
mov
das
adc
dec
push
push
adc
or
outsb
jbe
call
and
mov
das
inc
std
mov
or
iret
jae
aaa
sbb
push
dec
push
ljmp
into
mov
push
inc
inc
pop
adc
pop
mov
cs
cmp
pop
pop
inc
inc
or
inc
pop
dec
cmp
sti
lcall
push
or
es
or
add
push
dec
inc
xor
ret
fistpl
dec
inc
inc
and
jno
fwait
jge
jle
push
cmp
pop
inc
pop
inc
xchg
add
or
mov
pop
xor
sub
and
dec
inc
sub
mov
or
es
aas
or
push
push
and
push
add
and
jge
std
mov
ret
inc
xor
ljmp
aaa
lds
pop
or
sub
push
add
sti
sub
and
pop
push
pop
or
lock
cmp
add
sbb
and
push
or
movaps
or
sub
adc
sbb
insl
ret
andb
cmp
es
mov
mov
pop
aad
pop
push
add
xor
pop
and
je
lea
xor
add
fwait
cmp
pop
pop
pop
adc
inc
mov
in
sarb
push
cmp
or
cmp
fidivs
push
cs
cmp
das
sbb
imul
aaa
cmp
cmp
pop
adc
inc
sub
in
addl
jle
xor
ja
jg
sub
ss
push
and
js
sub
dec
cmp
ficoms
cmp
xor
push
mov
jb
fstl
jp
sbb
and
lea
push
gs
xchg
add
cmp
mov
or
sub
push
inc
add
or
pop
and
sub
dec
pop
mov
add
and
icebp
movq
ds
or
movsl
pop
dec
ljmp
xor
sub
adc
dec
nop
dec
cwtl
in
fimuls
xchg
pop
adc
repz
out
push
jns
lcall
ds
jo
repz
mov
fcomip
ds
outsl
jg
push
add
adc
and
daa
or
out
in
out
es
sub
test
hlt
es
pop
ss
push
mov
inc
and
push
es
adc
push
popa
push
outsl
insl
mov
inc
popa
outsb
lods
add
pop
add
jmp
xchg
jns
test
out
enter
inc
imul
bound
xor
fcomi
push
push
or
cli
cmp
cmp
jns
out
push
jo
mov
movsb
ds
push
ljmp
sahf
out
pop
gs
out
jl
mov
mov
lahf
shlb
sub
test
dec
pop
or
sub
cmp
and
les
loop
lds
xor
pusha
cmp
scas
cs
push
mov
pop
add
sub
inc
cmp
xor
ss
adc
js
scas
push
push
jnp
jbe
mov
add
pop
lock
push
pop
pop
add
sub
nop
ss
mov
sahf
sub
push
push
idivb
push
or
push
fcoms
fistpl
jmp
daa
in
mov
push
push
add
jb
push
inc
pop
sub
sarl
insb
push
push
inc
push
rol
and
daa
cmp
push
fildll
sbb
sub
pop
pusha
sub
pusha
inc
negl
sbb
dec
or
in
sub
daa
inc
and
sub
xor
push
push
mov
mov
test
push
aaa
out
ja,pn
clc
rclb
cmpsb
inc
fs
xor
and
xor
out
sysret
sbb
pop
pop
pop
xor
pop
inc
add
pop
scas
jge
fs
rorl
hlt
outsb
scas
xor
dec
pop
jo
pop
mov
subl
xor
or
fwait
ret
popa
add
adc
pop
cmp
int
push
fs
add
xor
out
push
das
push
mov
cs
pop
push
pop
cmpb
push
inc
cld
jbe
icebp
cmp
inc
cltd
and
jnp
rorl
pop
or
lret
into
ss
and
push
xchg
outsb
sbbb
dec
and
out
jo
in
push
or
jle
in
inc
lret
das
mov
xor
adc
out
loop
dec
inc
jmp
xor
add
xchg
mov
sub
dec
push
jb
loop
adc
icebp
and
fmul
outsl
das
ds
pop
xor
xchg
xor
inc
xor
inc
and
pop
adc
xor
ja
and
mov
jae
and
pusha
addr16
call
inc
jle
xchg
adc
push
push
cmp
filds
or
xchg
out
cmpsl
or
and
lds
xor
push
xchg
in
test
push
lods
adc
adc
sbbb
inc
and
adc
mov
pop
xor
ret
leave
dec
xor
xchg
push
and
cmp
mov
cmc
das
xor
aas
xchg
inc
inc
popf
jne
push
insb
sbb
in
pop
cwtl
push
sub
add
add
cmp
dec
int
add
push
sbb
ret
and
jbe
xchg
jbe
ss
dec
adc
movsl
mulb
pop
lret
adc
pusha
mov
lret
mov
fisubs
push
and
mov
pop
int
push
push
mov
pop
mov
pop
or
sub
xor
bound
cmp
mov
push
rcrb
shlb
inc
xchg
inc
mov
jo
daa
test
pop
or
mov
push
push
cmp
or
pop
xor
loopne
scas
inc
and
cmc
pop
rcll
inc
and
or
icebp
pop
ja
sbb
sub
lods
push
daa
pop
xor
xor
sbb
cmp
push
xor
pushf
push
or
pop
fdivr
push
pusha
pop
or
inc
cmp
push
inc
push
jg
out
scas
pop
push
adc
inc
aas
pop
or
adc
pop
or
cmp
or
jnp
sbb
sbb
push
insl
jbe
inc
add
jp
rorl
js
sub
ss
pushf
add
and
pusha
rcr
data16
insl
popa
fisttps
repz
je
jo
out
inc
out
es
outsl
jo
push
data16
and
cmp
test
inc
ficomps
out
xor
push
push
ds
cwtl
stc
cmp
repz
nop
add
frstor
ja
mov
cmp
and
add
cmovl
outsb
or
inc
jnp
cmp
je
sub
stos
ljmp
das
aas
sub
push
sbb
mov
push
aas
adc
xorb
pop
fcoms
push
and
sub
pop
pop
or
push
lret
push
dec
pop
add
push
dec
add
inc
ret
xor
xor
fs
arpl
pop
sub
xchg
lods
pop
lds
mov
pop
jge
or
adc
cmp
add
jp
mov
mov
popa
pop
cmp
add
push
popa
ret
push
fistl
sub
rorb
push
sbb
scas
mov
mov
clc
aaa
and
add
sub
movsl
cli
push
and
push
outsl
and
push
jl
push
push
pop
pop
and
cwtl
or
aaa
push
pop
int3
mov
inc
push
pop
adc
fcmovnb
and
push
sti
add
push
dec
les
loop
inc
jae
gs
push
jo
loop
hlt
cmp
fsubrl
cs
push
das
xor
jbe
fsubs
jae
stc
pop
sbb
inc
das
das
shr
je
or
shr
inc
addr16
xchg
addr16
sub
cs
je
jno
mov
push
popa
popa
push
jle
push
arpl
mov
cmp
xchg
jb
daa
outsl
cmp
imul
pop
scas
ss
notl
out
fstl
cltd
sub
scas
sysret
inc
add
rorb
pop
xor
jecxz
adc
pop
xor
add
pop
xchg
pop
hlt
negb
sub
pop
adc
pop
add
mov
nop
pop
pop
xchg
add
divb
cmp
add
es
pop
sub
inc
pshufw
out
inc
add
jbe
or
inc
and
mov
test
pop
int3
cmp
jle
pop
outsl
mov
mov
inc
xor
jecxz
loope
xchg
and
in
lock
adc
sub
xorl
pop
cwtl
or
daa
and
dec
push
push
enter
pop
fnclex
cwtl
or
inc
pop
inc
dec
and
inc
dec
loopne
sbb
cs
or
mov
jecxz
repnz
faddl
push
dec
faddl
sub
mov
ss
xchg
ds
pusha
js
sub
jbe
daa
dec
pop
pop
add
inc
push
pop
jecxz
cmp
mov
jp
inc
pop
mov
dec
testb
cmpsl
inc
cmp
pop
and
lods
cmp
fld
js
into
mov
sbb
adc
adc
stos
inc
or
loopne
das
pop
add
pop
inc
push
xchg
cs
push
push
or
fisubs
inc
popf
and
push
inc
das
sub
xor
inc
call
dec
imull
lds
pop
cli
out
adc
push
je
call
lds
sub
push
cmp
xor
data16
loopne
loope
mov
mov
fldenv
sbb
daa
or
mov
cmp
rcrb
int3
mov
loop
push
push
ss
push
jo
mov
jmp
rorl
mov
inc
daa
rcrb
dec
sub
inc
or
movsl
jge
xchg
inc
or
adc
and
inc
into
rolb
addr16
subb
rcll
call
or
sbb
fs
sub
xor
xor
dec
adc
fcoms
and
xlat
adc
xchg
aam
imul
enter
pop
loopne
inc
cmp
jbe
jl
pop
xchg
dec
inc
es
pop
xchg
jge
ss
cmp
and
xchg
insb
or
cmpsl
loopne
leave
cmp
adc
paddsb
dec
cmp
in
and
inc
daa
pop
test
or
stos
xor
imul
cmp
cwtl
sbb
flds
ficompl
sub
mov
or
inc
mov
lods
sbb
xchg
and
and
pop
xor
jnp
cmp
push
cmp
das
mov
sbb
cmp
push
loope
andl
outsb
fistpl
and
and
js
aas
daa
dec
sub
or
inc
xchg
ss
stc
or
add
cld
pop
push
int3
or
push
mov
or
subb
imul
negl
inc
inc
jge
aas
and
sub
push
sbb
sub
mov
push
adc
adc
xor
cmovs
andnps
int3
aas
inc
inc
and
pop
sbb
xchg
je
cmp
xchg
xor
add
xchg
pop
sub
sub
fmull
cmp
pop
fwait
ss
xor
push
sbb
sahf
adc
push
lods
icebp
dec
aas
add
inc
mov
out
pop
js
jbe
or
pop
xor
pop
push
adc
addl
and
jnp
xor
adc
or
inc
fdivs
stos
unpckhps
in
push
push
aaa
adc
movsl
and
popl
imull
rorb
sbb
push
mov
fnstcw
cmp
jge
loopne
adc
pop
and
push
cmp
cmp
add
pop
cmp
cmp
jns
sbb
cmp
pop
jnp
mov
adc
xor
inc
mov
and
inc
and
dec
mov
jmp
call
xchg
cs
sub
xchg
es
push
stos
inc
in
push
mov
aas
cmp
xor
mov
pop
inc
lds
mov
std
and
mov
adc
and
sub
pop
shlb
pop
dec
pusha
cmp
push
jb
cltd
adc
mov
in
dec
ret
insl
or
or
inc
xchg
xchg
fistpl
fldl
sub
mov
nopl
fistl
in
fistpl
xor
inc
mov
xor
or
call
movsl
es
insb
xor
sbb
fdivrl
and
inc
movsl
or
inc
cwtl
rcrl
insb
cmp
imul
addr16
xor
cs
dec
sub
cmpsb
shll
dec
fldcw
xchg
les
mov
xor
lcall
cmpsl
xchg
loop
dec
xchg
add
pop
ds
rcr
or
in
rorl
sbb
adc
and
cmp
mov
out
das
jg
or
mov
in
aas
add
pop
daa
dec
mov
jnp
jno
sbb
pop
repnz
insl
or
daa
rorl
push
or
inc
imul
cmp
scas
xchg
ds
push
inc
ss
xor
sbb
mov
stos
dec
daa
sub
jo
dec
add
sbb
mov
ds
int3
jnp
inc
sub
dec
pop
jae
movsl
pop
ss
mov
add
inc
dec
push
inc
adc
and
add
add
xor
or
add
xor
push
mov
sbb
das
negl
test
icebp
pop
mov
pop
aaa
mov
xor
pop
ret
xor
lcall
loope
xor
sub
insb
fcompl
data16
fs
imul
cmp
or
pop
jne
mov
push
filds
sbb
leave
inc
mov
dec
frndint
xchg
mov
decl
add
push
and
cmpsl
lahf
push
push
sub
xchg
dec
mov
jl
pop
std
pop
and
push
lahf
out
lcall
pop
fwait
int
xor
repnz
loope
ds
bound
jmp
inc
push
imul
inc
movb
mov
xchg
cwtl
das
xor
ret
popf
inc
add
aaa
shlb
mov
mov
jmp
lcall
negl
push
and
mov
add
adc
mov
mov
sti
ljmp
jb
push
push
mov
inc
push
insl
ss
adc
cli
mov
mov
fldt
cmp
mov
or
sti
mov
ds
pop
sbb
xor
pusha
pushl
fsubs
sbb
test
xor
dec
xchg
pop
shl
dec
push
mov
add
pop
adc
adc
pop
push
and
xor
aaa
xor
movsb
inc
fidivrl
and
nop
and
dec
xor
and
mov
pop
push
cmp
jb
insl
js
mov
outsl
jns
lea
outsb
dec
sahf
imul
pop
in
cmp
aam
les
and
movsb
xor
xchg
jae
pushf
cmp
test
je
daa
iret
leave
inc
fs
push
adc
iret
inc
dec
xor
mov
je
inc
js
cmp
mov
add
lock
cmpsb
dec
pop
aam
or
test
out
or
sub
push
push
dec
leave
jnp
cmp
ss
cmp
xor
sub
sub
xchg
mov
inc
inc
pop
xor
add
andb
adc
pop
mov
imul
das
js
mov
shrb
inc
ret
sub
jbe
push
or
xor
lret
clc
lret
pop
pop
bound
je
bound
mov
add
cs
push
loopne
imull
add
mov
addl
cmpsl
fcomps
or
jg
ja
sub
inc
and
subb
push
mov
push
push
out
push
jl
out
inc
or
xor
insb
adc
lods
xorl
in
insl
xor
iret
shll
dec
inc
inc
stos
shlb
adc
inc
adc
push
outsb
js
sarb
or
pop
pop
daa
jg
xchg
or
cmp
es
ss
jnp
pop
adc
dec
push
or
push
and
mov
xor
inc
jns
mov
pop
inc
adc
push
fiaddl
add
lods
push
xlat
mov
cli
mov
xor
movb
add
cmpsl
add
jp
es
enter
xor
fs
dec
shll
add
js
pushf
sub
inc
fldl
dec
scas
adc
cmpsl
jge
int
fsub
flds
mov
lods
int
jnp
out
add
mov
xor
sti
cmp
ficompl
sub
sti
xor
xor
stc
fcompl
mov
ja
data16
dec
mov
int
fwait
pop
hlt
jbe
outsb
int
push
push
insb
ss
hlt
inc
jae
bnd
lret
scas
stc
mov
cs
jne
xchg
push
idivl
pop
xor
test
pop
insb
or
pop
sbb
sarl
or
sbb
cmpsl
inc
out
imul
dec
ficompl
fnstcw
pop
aam
and
cmc
pop
push
mov
xchg
int
cmpsb
push
addr16
arpl
lock
repz
cs
push
mov
jns
jge
mov
jle
js
xor
mov
sub
ds
shlb
lcall
adc
cmp
push
push
mov
aaa
imul
push
sub
subl
inc
fwait
pop
cmpsl
fwait
imul
xlat
push
jmp
cmp
out
adc
sbbb
cmpsl
mov
add
test
fadds
aaa
fistps
xlat
int
cmp
stos
jp
or
sahf
sub
mov
ss
negl
push
daa
cwtl
les
shlb
test
mov
stos
movsb
es
fld
xor
in
repz
sahf
das
lcall
out
sahf
push
mov
hlt
cmp
sarl
jae
lahf
mov
mov
outsl
mov
shll
mov
cmp
popa
jnp
lcall
sti
and
jns
xchg
mov
cmc
repz
repz
inc
insb
xchg
repz
out
xchg
sbb
repz
xchg
sahf
out
lcall
cld
mov
and
jg
dec
sbb
scas
sub
push
out
cs
adc
stc
add
or
out
adc
adc
push
mov
xor
adc
sti
pop
mov
pop
mov
scas
int
lds
mulb
ds
loop
and
push
pop
dec
aam
fmuls
mov
imul
int3
push
and
pop
sbb
enter
cld
cmp
adc
or
adc
repnz
or
add
push
mov
fimull
cltd
push
les
inc
sub
inc
fidivl
stos
outsb
push
push
jae
adc
iret
aas
inc
int
psrad
mov
inc
fldl
push
or
or
aaa
push
pop
gs
cmp
jae
fisubl
mov
das
push
jae
insl
mov
add
dec
push
push
fst
je,pn
push
ljmp
cmpsb
dec
add
push
lret
aad
or
pop
push
pop
jmp
mov
jns
push
rcr
cmp
das
push
ret
cmp
outsb
push
inc
imul
push
pop
retw
pop
test
inc
dec
or
nop
dec
js
dec
mov
ja
sbb
and
mov
jnp
or
add
jp
aaa
aam
repnz
cmp
push
cmp
or
das
adc
mov
cmp
pop
insb
je
push
addr16
jo
in
jnp
mov
jne
and
aas
cmpb
sub
sub
push
cmpsb
mov
cmp
xor
xor
xor
data16
jle
xor
cmp
cmp
cmp
cmp
xchg
and
outsl
divb
xor
cmp
push
add
ss
jbe
or
jno
daa
adc
push
add
cmp
out
and
dec
or
add
mov
adc
or
inc
adc
cmp
mov
clc
dec
ret
mov
dec
xor
adc
pop
dec
push
push
das
push
jbe
cmp
sbb
cli
out
pop
inc
or
pop
pop
inc
inc
and
jmp
dec
mov
dec
xchg
inc
mulb
sbb
push
sbb
adcb
inc
sbb
sbb
add
imul
inc
or
sti
push
pop
sbb
test
inc
xor
cmp
sub
dec
xor
dec
cmp
daa
push
popa
ffreep
inc
xor
pop
cmp
fldenv
scas
aaa
inc
fcoms
lock
jnp
jno
fdivs
popa
pop
sub
adc
pusha
pop
jbe
pop
dec
inc
daa
sbb
clc
pop
mov
rolb
movsl
sti
push
into
push
mov
inc
test
out
and
jmp
fldt
xor
pop
bound
xchg
cmp
sti
pop
ss
das
sub
push
sbb
fcoms
add
pop
inc
daa
shlb
sub
daa
fcoms
sahf
fcom
or
and
mov
inc
jmp
xor
xor
icebp
sub
mov
cmp
sbb
and
iret
test
addr16
push
jbe
xor
sbb
lods
daa
sbb
insl
and
mov
stos
pop
jno
shlb
sbb
push
pop
daa
lods
daa
jge
adc
ret
sbb
push
das
divl
push
sub
push
iret
jmp
mov
lock
xor
or
push
jno
mov
mov
imul
popa
daa
pop
sub
add
push
das
dec
fisubl
adc
or
push
cwtl
pop
push
inc
sbb
pop
aaa
daa
movsb
arpl
les
push
ja
mov
or
mov
aaa
adc
das
mov
outsl
pop
pop
mov
pop
cltd
daa
sbb
xchg
outsb
ficoml
orb
fmulp
pop
addr16
stos
adc
jg
jno
sbbb
dec
push
or
arpl
adc
frstor
and
mov
pop
imul
insl
shll
data16
add
lea
dec
jl
lods
and
inc
and
and
inc
pusha
inc
out
js
jl
or
je
jl
pop
and
imul
xorb
fsubrl
fbld
inc
push
inc
jo
cmp
imul
dec
js
adc
inc
ja
outsb
cmpsl
call
jl
mov
adc
push
dec
sbb
cmpl
in
inc
test
adc
pop
pop
ds
mov
sbb
and
daa
cwtl
subb
das
das
ss
pop
sub
pop
ret
push
push
xchg
xchg
push
xchg
mov
lock
push
and
or
cwtl
pop
adc
xor
or
es
hlt
sbb
adc
test
cmp
push
adc
lock
les
imulb
push
testb
adc
and
jbe
insb
pop
mov
or
mov
sbb
sbb
pop
and
stos
pop
jno
push
pop
popa
loopne
pushf
xor
fcmovnbe
hlt
cmp
pop
adc
pop
sub
fcmovnb
test
negl
inc
aam
jo
sahf
fwait
xor
mov
or
dec
jg
mov
or
and
dec
leave
xor
cmp
push
jecxz
and
inc
pop
xlat
mov
call
fadds
inc
xchg
adc
adc
mov
insb
sbbb
xchg
mov
lods
cltd
jbe
gs
push
andb
pop
push
cmp
clc
repnz
push
fldl
sbb
push
or
pop
push
ljmp
xor
cmp
outsb
les
mov
push
ds
adc
sbb
pop
es
add
xor
xor
and
jb
cmpsl
aad
xor
fdivl
inc
pusha
test
jb
sbbb
xchg
sbb
loop
push
mov
arpl
lret
loopne,pn
mov
inc
sbb
dec
rcrb
addb
inc
or
pop
outsb
imul
fneni(8087
data16
inc
inc
cwtl
or
inc
or
fsubrs
xchg
push
push
xor
mov
and
sub
and
hlt
xchg
jo
ljmp
jae
sbb
push
sub
inc
rcrb
xor
aam
and
js
inc
dec
test
stc
add
jb
jno
mov
jno
ds
ja
fldl
cmp
add
inc
sub
loope
test
cmp
imul
popf
and
pop
ljmp
pusha
nop
jecxz
or
push
add
inc
rorl
mov
lods
inc
sbb
pop
adc
or
push
mov
popa
adc
pop
repz
repz
iret
repz
push
andl
repz
add
or
xchg
add
add
add
fwait
int
mov
or
adc
sbb
jnp
and
sub
xor
inc
mov
mov
gs
mov
mov
data16
shlb
add
test
sub
fldcw
add
or
adc
fwait
int
and
add
add
fldcw
dec
str
int
cwtl
or
and
das
incl
mov
arpl
sub
clts
pop
pop
cs
and
fisubs
mov
pop
add
mov
test
sub
mov
lea
fwait
pop
pop
jg
imul
fisttpll
movsb
push
xor
xor
xor
add
add
dec
or
repnz
idiv
or
push
or
adc
loopne
or
add
or
aas
cld
fistpll
adc
push
pop
add
or
cmp
or
push
pushl
push
or
aas
push
or
inc
add
or
push
inc
or
dec
std
ja
sub
pop
nopl
xor
mov
ljmp
pop
pop
pop
or
daa
xor
and
sbb
pop
cmp
push
xor
push
sbb
push
xor
mov
push
or
or
pop
xor
push
sbb
adcl
ss
fwait
in
in
pop
and
mov
push
pop
pop
push
inc
push
sub
xchg
mov
call
pop
cmp
sbb
es
xor
and
pop
inc
sbb
sub
inc
ljmp
xchg
pop
pop
pop
adc
xor
inc
and
dec
push
xor
pop
test
adc
int3
orb
cmp
daa
arpl
jnp
add
push
mov
push
push
orb
dec
lds
cmpsl
push
mov
daa
dec
daa
push
dec
add
pop
daa
dec
push
sub
mov
dec
aad
push
cwtl
mov
push
loop
adc
lds
cmp
ss
xadd
out
daa
inc
sbb
xor
push
inc
and
pop
cmp
mov
jmp
xchg
push
push
dec
in
push
outsl
inc
push
add
dec
and
mov
and
rclb
push
and
inc
les
or
xor
mov
ljmp
add
push
adc
pop
loop
in
push
push
inc
push
dec
inc
dec
push
dec
sldt
outsl
mov
dec
test
push
pop
cwtl
das
mov
inc
pushl
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
incl
and
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
pushl
test
daa
add
repz
movb
aad
arpl
push
sub
adc
or
lcall
cs
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
data16
lcall
test
mov
mov
call
cltd
test
push
push
shll
pushl
push
dec
ja
daa
mov
mov
movsb
sbb
dec
stos
fmuls
lret
rep
out
cli
cs
arpl
test
add
mov
mov
movsb
idiv
jmp
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
inc
cld
flds
pop
dec
push
pop
inc
inc
and
je
pop
inc
cmp
or
pop
dec
dec
or
cmp
ljmp
js
aaa
outsb
push
xor
inc
push
dec
imul
xor
das
sar
imul
data16
les
sub
sub
pop
popa
sub
jmp
ja
inc
push
pop
xor
push
daa
sub
pop
into
push
clc
jg
pop
or
dec
push
xor
daa
daa
sub
pop
adc
jbe
sub
inc
sbb
sbb
stc
sbb
sub
mov
pop
lahf
fstp
and
fucomp
fnstenv
pop
daa
push
and
or
jmp
ljmp
orl
and
out
fimuls
aaa
push
xor
inc
add
xor
popf
cmpsb
push
xor
push
inc
add
inc
mov
inc
inc
xor
and
aaa
inc
push
inc
pop
mov
in
cs
inc
ss
cmovb
imul
pop
ss
cmpsl
ss
adc
pop
dec
pop
and
rclb
mov
add
sbb
lods
push
enter
inc
pusha
jb
add
xor
jecxz
add
daa
cs
in
pop
js
cld
scas
bound
pop
lahf
cmp
inc
dec
push
jb
cmp
inc
sub
pusha
fcoml
inc
lock
shr
lcall
inc
data16
push
addr16
cmp
mov
or
test
inc
adc
pop
add
inc
or
adc
push
xor
push
cmp
pop
pop
sub
adc
rorl
loopne
int
dec
or
xor
jb
outsb
and
inc
mov
faddl
mov
mov
pop
sbb
mov
xchg
dec
mov
les
push
sbb
mov
push
int3
mov
mov
sub
add
sbb
or
adc
pop
adc
sub
cld
sbb
push
cmp
inc
dec
pop
mov
xor
lds
push
mov
inc
jmp
jge
inc
inc
sbb
and
sub
jns
xchg
add
pop
push
push
popf
mov
mov
cwtl
adc
rorb
pop
xchg
jmp
fcmovu
adc
ret
daa
mov
cmpl
js
inc
in
fcmovne
pop
inc
mov
adc
ret
shrb
in
push
adc
push
cs
xchg
sahf
cmp
xchg
inc
pop
int3
mov
sub
iret
push
xchg
push
popf
sub
adc
test
push
or
or
fstps
je
xor
mov
js
xor
jae
popa
insl
lods
jo
into
cmp
je
inc
push
or
out
and
sub
into
inc
aad
cmp
xor
insl
loop
cs
dec
aad
inc
mov
les
outsl
insb
dec
push
popa
je
gs
insl
js
cmpl
pop
pop
push
push
push
push
push
adc
notb
inc
add
adc
daa
push
sbb
pop
add
mov
je
test
xor
xor
mov
add
pop
sub
xchg
lret
xchg
push
dec
xchg
pop
adc
add
cli
add
add
inc
sub
fs
mov
xor
inc
cmp
mov
push
sbb
les
xorl
xchg
movb
dec
ds
sbb
loopne
inc
sbb
or
mov
jge
sub
mov
aaa
daa
daa
add
inc
nop
pop
or
push
add
popa
dec
cli
add
mov
pop
push
ja
jb
pop
cld
pop
xor
pop
movsl
jae
inc
jne
xchg
adcl
sbb
xor
cmp
push
fstpt
pop
pop
push
push
mov
test
roll
jg
inc
daa
test
push
negb
cmp
adc
ret
daa
fimuls
sbb
sub
mov
pop
dec
enter
ret
sbb
nop
nop
cli
test
jo
iret
test
push
leave
or
add
stos
push
outsl
imul
push
dec
test
pop
push
pop
add
mov
mov
push
cmp
push
inc
mov
iret
pushf
and
xor
scas
inc
push
or
xor
sub
sub
or
aas
mov
dec
cmp
push
aaa
data16
pop
pop
inc
arpl
inc
mov
push
mov
les
pop
data16
jmp
lods
push
pop
mov
pop
std
inc
outsl
mov
test
ror
add
rolb
and
xchg
mov
pop
adc
subb
sub
dec
sbb
cmpsb
cs
imul
subl
testb
mov
ljmp
xchg
pop
jp
outsl
mov
sub
stos
movsl
sbb
pop
inc
jle
mov
mov
pop
dec
pop
movsl
jmp
lods
in
insl
dec
pop
repz
cs
je
insb
popl
mov
xor
xor
in
int3
xor
in
xor
mov
orb
sub
push
jge
add
sub
inc
sub
ret
push
loope
add
sub
inc
dec
ficompl
lock
adc
pop
inc
and
inc
ficomps
add
cmp
cmp
and
test
cmpsb
dec
out
pop
aaa
subb
jmp
lcall
mov
filds
sub
jb
push
pop
or
dec
and
lods
cwtl
cltd
call
int3
test
jae
in
or
or
mov
inc
push
punpckhwd
inc
outsl
and
je
scas
jl
push
insb
pop
cmpsl
insb
std
out
sub
xchg
push
push
inc
dec
push
inc
pop
push
dec
inc
dec
jns
pusha
jne
pop
push
adc
or
dec
rcrl
fwait
pop
daa
popf
loopne
rorl
jb
sub
lock
inc
loop
sbb
pop
inc
adc
adcl
out
lret
adc
inc
sub
rcrl
inc
add
lock
or
fisubl
rolb
jns
jb
test
pop
push
adc
push
repnz
xor
push
loope
add
or
or
add
pop
cmp
sarb
mov
adc
add
aas
and
xor
jp
add
test
jb
add
adc
cli
add
ss
add
mov
dec
and
add
xlat
and
mov
psraw
cmp
or
or
cmc
es
call
push
xor
ja
sub
lret
push
pop
enter
lret
sub
pop
mov
push
or
or
adc
or
stos
pop
sub
cs
adc
inc
dec
outsl
push
pop
xlat
mov
mov
icebp
or
pop
mov
sub
inc
sbb
or
pop
adcb
and
aad
jnp
xlat
outsl
or
jmp
fdivrl
push
lea
les
mov
ret
push
ud1
mov
mov
cmp
mov
inc
and
xchg
orb
xchg
cltd
lods
mov
shll
cmc
inc
pop
adc
mov
inc
cmovo
ds
adc
cmpb
aas
adc
nop
jo
maxps
add
add
int
cmp
test
sub
inc
pop
popa
outsb
jnp
cmp
aas
add
ficompl
addr16
movsb
mov
daa
add
nop
xchg
lods
jmp
repnz
movsb
add
iret
imul
add
jns
jl
add
daa
mov
mov
data16
and
xchg
push
shll
mov
push
daa
fistps
insb
push
sbb
dec
xchg
int3
lcall
daa
dec
leave
xchg
pop
leave
inc
inc
cmp
pop
xor
sub
pop
leave
xchg
sub
jb
leave
add
mov
in
es
cwtl
inc
sbb
dec
jo
int
imul
test
mov
push
in
and
add
imul
mov
sarl
dec
hlt
insb
fmuls
cmp
repz
imul
repz
push
test
xor
jns
imul
push
and
add
out
es
xchg
loop
cmp
adc
out
dec
inc
test
aas
jp
xor
fistpll
in
add
imul
sub
mov
add
mov
and
cmpb
cwtl
fsubs
out
jp
sub
testb
add
les
ja
movsb
mov
jb
mov
pop
leave
adc
xchg
pop
cmp
outsl
je
scas
fs
jns
clc
sub
js
mov
ret
push
lock
mov
xchg
push
xor
adc
out
mov
and
xor
sub
outsl
add
jbe
ret
fistpll
xor
cmp
jnp
fcoms
pushf
imul
lcall
and
push
rcrl
outsl
out
pushf
pushf
pop
leave
and
xchg
out
mov
fiadds
mov
xchg
popa
sub
scas
add
insb
mov
ljmp
add
xor
cs
dec
xor
sbb
jns
shrb
enter
sub
xor
push
cmp
in
je
xchg
pop
iret
xchg
xor
outsb
adc
sbb
mov
xchg
cmp
aam
or
out
mov
cld
push
cmp
je
jo
fs
mov
or
sub
add
push
or
sub
sbb
pop
sub
out
xchg
jl
and
outsb
xor
outsl
add
and
inc
outsb
push
js
and
sbb
sub
and
add
push
js
pop
or
sub
add
movsb
outsl
out
jecxz
shll
call
cs
cmpsl
pusha
call
push
aaa
ja
aad
jo
mov
dec
mov
outsl
fs
je
xor
jl
add
sub
movl
das
cmpsb
lahf
mov
iret
lcall
in
jno
push
js
jno
idivb
inc
jno
mov
testb
xchg
push
mov
sub
xchg
sbb
ret
xchg
mov
fidivs
and
nop
sub
testl
sub
insb
inc
loopne
push
push
lods
sbb
stos
outsl
jg
add
jb
daa
testl
push
adc
push
je
test
sahf
jbe
clc
shlb
cmp
add
iret
push
xchg
jo
seto
or
mov
xor
in
jb
jb
or
sbbb
or
jb
xor
daa
add
or
xchg
push
lock
jne
je
and
adc
mov
push
pop
int3
jae
and
testl
dec
loopne
add
add
scas
and
je
cmp
pop
sbbb
cs
je
rorl
or
and
add
rorl
cld
outsl
jecxz
or
addr16
xor
inc
jne
jne
jbe
je
mov
cs
mov
xchg
jg
add
xchg
sub
mov
xchg
out
add
jbe
and
xlat
push
adc
add
ds
jb
inc
dec
jbe
push
lods
add
enter
sub
jbe
jnp
dec
push
mov
outsl
add
dec
ficoms
inc
mov
inc
cmpsb
or
test
jecxz
ja
ja
push
sub
and
add
in
andl
cmpsb
addb
dec
cs
lods
mov
popa
imul
popa
roll
scas
mov
push
out
cmp
daa
or
dec
scas
in
add
mov
or
push
je
repz
jbe
push
enter
xchg
fsubrp
cmp
sub
or
xchg
js
js
sub
jns
jae
pushf
xor
or
jns
xchg
int
adc
and
in
lods
add
or
jb
sub
fbstp
and
mov
add
add
push
repnz
lock
out
jp
addr16
adcb
leave
mov
push
dec
outsl
out
mov
and
add
fcomp
inc
out
lahf
addr16
mov
or
cmp
dec
outsb
iret
test
daa
or
test
inc
jnp
push
push
xchg
push
pusha
das
pop
fwait
and
xor
lods
in
testb
lods
xlat
mov
daa
xor
mov
cmpsl
call
sub
dec
xchg
cmp
inc
or
aad
mov
sbb
ja
fiaddl
ja
outsl
sub
mov
outsl
lods
xor
push
repnz
movsb
inc
cmp
filds
pop
fdivs
lods
das
pop
lock
push
jbe
mov
aas
movl
ss
out
cmpb
pop
sbb
or
lret
push
ror
repz
addl
repz
sti
and
repz
movsl
rcr
sub
imul
mov
dec
xchg
xor
iret
repz
and
sahf
out
lods
sar
sbb
dec
pusha
movsl
lret
mov
jns
jl
lret
movb
sarl
subb
stc
cmp
test
lock
sahf
test
push
outsl
repz
out
lock
ds
lahf
ret
xchg
push
mov
stc
or
imul
repz
leave
cmp
pop
jg
cmp
out
xor
xchg
repz
cmpsl
jbe
outsl
xchg
stos
fdiv
jns
out
cwtl
movsl
shr
cltd
cmpsl
stc
cmp
arpl
iret
sarl
aad
fwait
dec
jecxz
iret
repz
pushf
or
lahf
out
ds
push
lahf
repz
repz
loopne
mov
imul
mov
jns
dec
test
sbb
ret
movsl
jle
stc
xor
cmc
sbb
in
repz
test
test
aad
test
out
stos
push
cwtl
mov
ds
rcll
shrl
out
pop
lods
mov
cmp
out
ds
scas
push
xchg
into
or
repz
cmpsl
ret
dec
mov
idivl
out
mov
mov
adc
jns
cmpsb
adc
out
in
mov
xorl
mov
loopne
mov
pop
mov
mov
iret
repz
in
btl
fwait
dec
repz
mov
mov
repz
inc
mov
stc
mov
push
ds
jl
lds
movl
int
leave
aad
lret
out
cmp
add
pop
jns
jns
cmp
push
out
cmp
idivl
into
into
into
ror
push
imul
xchg
shr
shrl
sbb
imul
iret
cmp
scas
ja
idivb
aaa
fisubs
add
out
xor
xorl
ror
dec
addl
add
push
add
fimull
pop
and
andb
ja
dec
ja
add
inc
repnz
add
sub
ficoml
mov
sub
pop
dec
daa
inc
aas
pop
enter
sarb
inc
int3
icebp
sbb
mov
ja
push
sub
jb
xor
bsf
ja
push
in
ja
and
adc
aas
shlb
nop
and
jbe
inc
pop
enter
jnp
test
push
xchg
into
rcll
pop
jo
je
sub
xchg
jg
mov
sbb
loopne
inc
pop
out
fmuls
fmuls
mov
inc
lods
mov
aad
jge
cmpl
pop
enter
mov
mov
lahf
repnz
es
iret
shr
xor
ss
aas
mov
adc
incl
aas
mov
inc
enter
inc
aas
xchg
add
shrb
or
pop
fidivrs
inc
outsb
mov
pop
inc
aam
fldl
inc
sub
cmc
stos
mov
cmc
insb
pop
aaa
pop
mov
add
dec
ja
daa
fmull
mov
insb
push
fmuls
push
dec
fimull
fimuls
cmp
mov
jae
ja,pt
xchg
push
jl
cmpsl
lahf
cwtl
xchg
test
int3
stos
sbb
add
aas
outsl
test
cmp
ss
pushf
push
pop
incl
jg
pop
add
pop
inc
iret
fimull
xchg
and
and
adc
je
es
jae
sbb
sti
push
xchg
les
cmpsl
inc
mov
sahf
add
and
mov
dec
je
rclb
in
mov
cmp
sbb
mov
fdivrl
in
cmp
push
cld
ret
test
scas
push
sub
xchg
xchg
push
daa
popf
out
jg
add
xchg
cmp
xchg
ja
jb
inc
mov
xchg
and
ja
mov
daa
cmp
and
les
jo
pushf
pop
je
testb
xchg
push
mov
mov
in
sbb
push
inc
outsl
fnstenv
in
xchg
xlat
sbb
clc
sub
or
out
mov
jl
mov
push
mov
mov
leave
inc
jb
and
sub
xchg
sub
adc
mov
repnz
in
nop
lock
leave
and
cmp
pop
aad
aas
loopne
jmp
out
fstpl
testb
dec
test
add
sahf
out
sahf
add
sub
or
test
or
mov
jbe
xchg
movsb
mov
in
xchg
mov
jl
test
add
dec
in
mov
or
adc
mov
test
iret
insl
out
xchg
adc
jb
enter
xchg
sub
in
sbb
xchg
xchg
mov
jne
xchg
xchg
xchg
jge
in
xchg
xchg
mov
xchg
xchg
enter
nop
fwait
in
into
inc
sti
lsl
cmp
mov
add
pop
leave
xor
xchg
mov
push
jle
adc
xchg
ds
out
add
add
das
pusha
xchg
out
movsb
push
inc
pushf
xchg
mov
mov
rcl
inc
mov
jne
inc
cld
mov
in
or
insb
xor
push
push
jmp
inc
xor
add
mov
xchg
pushf
xchg
daa
cmp
xchg
fcoms
xlat
clc
jg
insl
and
xchg
in
push
pop
sbbl
fwait
in
cmp
leave
inc
mov
push
mov
mov
mov
cmpsl
push
mov
cmp
pop
mov
xchg
test
lea
cmpsl
in
leave
xor
outsb
sahf
mov
xchg
iret
cwtl
xchg
adc
pop
add
das
pop
loope
decl
mov
das
das
das
das
sub
dec
mov
cs
das
push
mov
imul
iret
repz
jbe
orl
repz
or
cmp
popcnt
ret
adc
repz
into
adc
adc
adc
out
cmp
adc
js
out
pop
push
sbb
jb
add
testb
pop
aad
arpl
cs
sub
cmp
ret
push
leave
test
mov
push
mov
enter
fbstp
mov
mov
xchg
call
cmpsl
cmp
sahf
or
sbb
and
shll
inc
inc
pop
push
xchg
jo
adc
dec
cs
mov
insb
je
addr16
mov
mov
mov
adc
out
mov
mov
jmp
sbb
fidivrl
cwtl
push
dec
add
repnz
pop
ror
inc
incb
xchg
icebp
cs
mov
add
daa
cwtl
add
push
mov
jge
mov
test
imull
mov
mov
out
inc
aas
add
inc
push
cltd
mov
lea
inc
call
pushf
cltd
sbb
fs
repnz
mov
leave
inc
jb
lahf
dec
loopne
ljmp
daa
jns
movsb
mov
xchg
cmp
sbb
mov
adc
add
daa
and
pop
xor
xchg
pop
fwait
add
fcoms
loopne
mov
nop
adc
addr16
iret
ds
mov
insb
xchg
adc
sub
mov
enter
jo
pusha
pushf
sbbb
mov
loope
nop
repnz
std
nop
or
adc
sbb
repnz
xchg
dec
xchg
insl
pcmpeqw
jge
popf
scas
push
cmp
outsb
pop
jl
popl
sbb
cmp
sub
mov
cmpsl
stc
xchg
add
add
xchg
xchg
xchg
xchg
xchg
xor
cmp
inc
xchg
dec
xchg
xchg
xchg
xchg
xchg
push
xchg
pop
xchg
fs
insb
xchg
xchg
xchg
xchg
xchg
je
jl
test
xchg
xchg
xchg
xchg
pushf
xchg
movsb
xchg
lods
jb
insl
xchg
xchg
mov
femms
jb
jb
or
jb
jb
or
push
jb
jb
add
popa
jb
add
cs
fildl
sahf
xlat
loopw
out
jo
fisubrs
cld
or
and
sub
sub
xchg
pop
push
hlt
xchg
inc
mov
leave
xchg
adc
and
daa
mov
ss
addr16
in
hlt
insl
jbe
xchg
aas
or
iret
cmp
adc
push
sbb
push
or
xor
cmp
nop
xor
push
xlat
mov
push
ja
leave
sbb
lcall
in
orb
aad
movsb
and
in
leave
dec
ja
in
cmc
std
dec
xchg
addr16
out
or
sbb
popf
out
and
push
rcpps
add
cmp
inc
das
pop
popf
xchg
js
jbe
aas
rolb
jnp
inc
movsb
cmpsb
pop
pop
mov
jns
fmul
push
dec
es
adc
daa
push
and
pop
xchg
pusha
xchg
push
leave
jo
mov
xchg
xchg
mov
mov
pop
les
add
daa
iret
repz
add
je
jecxz
in
cmp
mov
dec
pop
xchg
insb
push
sub
xor
outsb
and
cmp
das
pop
xchg
imul
leave
jae
mov
daa
daa
daa
daa
int3
xlat
loop
outsl
stos
daa
daa
clc
add
cmp
repz
or
das
repz
repz
or
out
or
push
or
cltd
inc
setb
jb
push
int3
addr16
rcll
jmp
mov
sub
jae
pop
inc
push
dec
push
in
repnz
pop
gs
inc
ss
cmc
jne
ja
cmp
cwtl
ja
cwtl
pop
and
sbb
xchg
add
shr
nop
movsl
les
daa
hlt
inc
repnz
inc
cmp
repnz
cmpsb
sub
dec
cmpsb
in
jb
fstpt
push
leave
xchg
movsb
cmpsb
test
mov
in
das
adc
pop
and
fcomp
sub
xor
jns
sahf
cmp
and
pop
in
xchg
adc
cmp
cmpsl
jg
mov
mov
pushf
jl
insb
cmpsl
scas
mov
repnz
cltd
pop
xchg
repnz
cltd
stos
cltd
les
aam
daa
test
enter
div
incl
lcall
pop
lcall
andb
das
lcall
adc
inc
test
lcall
jge
test
fcomps
mov
in
cmp
xchg
test
lock
push
fwait
ja
push
lret
and
dec
cmp
leave
jae
mov
mov
pop
sbbb
mov
lods
fwait
mov
ret
jno
mov
or
shrb
decl
pushf
pop
adc
das
das
das
das
pop
pushf
sub
das
das
das
dec
pushf
push
pushf
popa
pushf
outsl
pushf
mov
pushf
stos
xchg
xchg
push
add
xchg
xchg
xchg
xchg
mov
shll
out
std
out
or
daa
xchg
pop
pop
enter
cs
and
popf
cmp
pushl
popf
push
je
jl
repnz
test
pushf
mov
cmpsl
add
fcoms
sbb
leave
xchg
adc
sahf
cmp
mov
dec
imul
lds
loope
outsb
jge
int
inc
shlb
test
iret
sarb
in
clc
push
ja
lahf
inc
or
mov
lahf
outsb
mov
in
push
xchg
add
pop
lahf
fs
aaa
jns
insl
insb
das
je
or
sub
sete
das
dec
lods
mov
sbbb
and
iret
add
scas
push
mov
mov
repnz
daa
pop
push
pop
addr16
mov
leave
leave
inc
jl
xchg
xchg
mov
ja
mov
enter
add
mov
cmp
sbb
jb
out
xor
dec
sahf
ja
push
add
dec
adc
bound
jb
dec
jo,pt
fists
popf
add
jb
mov
lret
lret
lret
xlat
pop
aad
frstor
lret
lret
in
mov
ud2
cmp
cmp
or
or
cmp
cmp
push
add
cmp
add
add
sahf
out
sbb
adc
jns
out
push
sub
cmp
mov
inc
dec
icebp
cmp
repz
and
sbb
mov
repnz
add
rcrb
in
sbb
mov
mov
lar
add
fwait
js
sub
in
mov
jb
cmp
inc
cmpsl
push
in
repnz
andl
mov
fwait
sub
leave
xchg
mov
jb
mov
in
iret
jae
out
cli
add
sahf
fsts
movsb
iret
or
cmp
push
push
add
inc
jbe
pop
movsb
outsl
rclb
das
stos
cld
inc
pop
or
gs
pop
mov
adc
mov
xchg
scas
lcall
pop
stos
pop
mov
mov
push
popf
mov
mov
iret
in
in
lock
clc
movsb
mov
lahf
mov
mov
hlt
xchg
xor
pop
pop
pop
or
movsl
xor
pop
cmp
repnz
xchg
ja
mov
xchg
fildl
jmp
mov
flds
out
in
adc
iret
add
cmp
inc
cmovns
push
in
jns
add
popa
imul
or
in
xchg
pop
cltd
or
pushf
cmp
repz
pushf
cmp
repz
xchg
cmp
adc
in
mov
cmp
unpckhps
iret
repz
sbb
pop
xchg
jg
in
push
mov
adcl
or
mov
scas
pop
es
jae
fbld
insl
add
daa
stc
loop
mov
cmpsl
enter
dec
push
dec
cmpsl
and
xchg
lret
rorl
adc
test
or
mov
push
mov
test
es
dec
mov
fisttps
pop
xchg
sub
pop
sbb
ja
push
or
pop
cmp
inc
data16
add
sub
jo
repz
cmp
ret
in
xor
add
out
lock
test
sbb
lar
and
in
or
leave
jae
ds
test
xchg
cmp
xchg
repnz
mov
dec
sahf
outsb
sysret
mov
pop
jns
add
pop
sarl
or
stos
mov
out
loope
mov
add
jb
test
test
into
mov
repz
dec
add
cmp
push
stos
pop
stos
gs
mov
mov
nop
pop
push
xchg
aaa
rorb
sbb
fcoml
push
iret
sub
shll
fiadds
dec
popa
jns
cld
inc
out
test
or
push
out
mov
dec
or
and
push
add
mov
dec
stos
pop
or
addb
mov
leave
leave
add
jnp
inc
mov
xchg
stos
out
stos
pop
shrl
sti
in
loopne
clc
push
add
leave
leave
add
or
leave
out
cli
add
lods
cmp
repnz
xor
cmp
repz
inc
or
repz
push
or
push
cmp
push
jle
jle
pushf
in
xchg
lods
xchg
lods
lahf
lods
inc
mov
inc
lods
jne
in
push
cmc
sub
dec
outsl
lods
das
repnz
cmp
lods
dec
push
pop
push
lods
inc
jbe
repnz
imul
dec
and
mov
inc
outsl
lods
daa
daa
daa
pop
das
mov
daa
daa
mov
pop
push
pop
lea
repnz
fnsave
bnd
scas
in
lods
cmovle
movsb
mov
scas
rclb
scas
xor
aas
cmp
ja
mov
daa
aam
pop
or
xchg
das
pop
pop
data16
pop
jbe
jle
loop
jl
lahf
adc
inc
push
mov
dec
or
mov
ret
insl
mov
pop
push
jb
mov
mov
xchg
fildl
in
ds
xchg
xchg
in
in
hlt
scas
cld
scas
mov
daa
scas
stc
int3
fiadds
pop
aaa
scas
xchg
shl
and
jnp
in
fisttpll
add
dec
sahf
push
mov
daa
daa
mov
fcmovne
inc
in
hlt
ja
dec
dec
imul
xchg
jb
push
daa
mov
mov
dec
mov
pop
lldt
lret
lret
pop
dec
push
xorb
sbb
xchg
mov
mov
mov
mov
or
sarb
mov
inc
xchg
mov
mov
test
mov
dec
sahf
pop
sbb
mov
add
ret
jo
outsb
daa
daa
js
js
iret
repz
nop
xchg
movsb
add
push
in
cwtl
push
lret
shll
cmp
ja
scas
adc
and
cmp
push
ret
ficompl
mov
inc
mov
jl
cmp
pop
outsl
ja
leave
inc
jb
mov
jmp
mov
bswap
xchg
add
and
or
and
inc
les
leave
jae
aas
ja
je
adc
lar
mov
test
push
sahf
lsl
outsl
ret
les
rcll
shr
fnstenv
jmp
loope
lidtl
add
leave
repz
jmp
lret
inc
dec
mov
mov
fnstcw
sub
dec
fcoml
xchg
and
ret
inc
lds
lds
outsb
addb
mov
dec
push
daa
dec
leave
stos
lcall
nop
xchg
int
sbb
dec
jb
jns
out
jp,pn
das
adc
push
add
lcall
xchg
cmpsl
pop
stos
mov
fistpll
daa
mov
fnsave
shll
xlat
mov
sbb
and
sub
cmp
push
pop
push
movsb
repz
add
jne
out
or
dec
mov
push
xchg
cmp
leave
rorl
in
in
jbe
iret
loope
icebp
pop
sbb
mov
mov
fnsave
pop
clts
add
mov
in
imul
mov
mov
mov
sahf
frstpm(287
xor
dec
sahf
xchg
out
push
adc
popa
push
data16
jns
jno
jns
pop
sbb
nop
jl
adc
out
es
enter
hlt
and
jo
mov
mov
loopne
outsl
sub
dec
mov
mov
ja
daa
repnz
cli
mov
jnp
inc
add
adc
dec
sbb
in
xchg
xchg
mov
mov
push
or
cmp
fisttpll
or
adc
in
mov
leave
gs
mov
fwait
in
jne
jge
lret
leave
leave
leave
mov
pop
sbb
add
enter
outsl
pop
or
rol
sahf
mov
or
sbb
pop
add
mov
adc
int
xchg
or
rolb
push
mov
cmpsl
pop
xchg
and
sti
add
cmp
adc
leave
jae
jmp
add
outsb
mov
jp
incl
loopne
and
jns
out
mov
add
out
add
out
dec
xorl
or
lret
cmp
inc
pop
lsl
cltd
dec
ds
int3
jne
xchg
iret
jae
add
jbe
mov
and
test
int3
inc
and
int
and
mov
iret
rcrl
pop
cmp
inc
mov
dec
dec
mov
in
sub
iret
fsubrl
fildl
pop
popf
iret
movsl
je
out
lods
push
push
mov
add
sbb
pushf
add
push
mov
repnz
call
cmp
clc
xchg
repz
push
add
out
daa
and
or
or
out
jns
xor
cmp
jae
mov
punpckhbw
sub
mov
xchg
push
fidivrs
iret
jae
xchg
scas
mov
mov
add
into
movntq
mov
mov
pop
mov
pop
push
fisttps
mov
jo
xor
pop
in
cmp
mov
xchg
pop
fs
xchg
xchg
xchg
xchg
lea
enter
mov
xchg
fisttpl
test
jns
stos
adc
daa
daa
mov
bswap
jmp
iret
cmp
pop
push
sbb
jb
mov
fcoms
push
add
js
pop
xor
cwtl
mov
pop
mov
xchg
jb
cmp
jmp
jb
pop
mov
cmpsb
jmp
xchg
mov
dec
mov
pop
mov
dec
dec
dec
inc
jp
xchg
movsb
fs
fdivl
in
in
loopne
lock
in
popa
test
outsl
or
and
sbb
out
and
sub
fwait
push
lcall
cld
or
add
call
dec
xor
pusha
sar
xchg
js
mov
add
push
fcoml
pop
push
pop
xchg
fwait
xchg
pop
xchg
fistpl
nop
ror
xchg
xchg
xchg
rcr
loopne
call
xchg
xchg
sar
push
rorl
push
xchg
xchg
xchg
xchg
rcrl
shrl
ss
xchg
xchg
xchg
sarl
inc
rcll
xchg
xchg
lahf
test
pop
shll
out
xchg
xchg
roll
sahf
out
sahf
pop
popf
and
out
and
jns
out
and
out
sahf
daa
jmp
cmp
bnd
pop
ret
nopl
pushf
pop
cs
pop
ret
fstl
roll
out
leave
call
pop
repnz
add
das
insl
ret
daa
cmp
mov
in
xchg
ret
mov
pushf
je
leave
pop
sgdtl
pop
push
leave
out
or
aad
enter
cld
add
or
xchg
xchg
xchg
fistl
sub
xchg
xchg
js
stos
mov
xchg
xchg
xchg
lret
jmp
iret
jae
cmp
les
movups
sbb
jbe
cmp
and
pop
inc
sahf
out
in
andl
dec
mov
mov
sahf
pushf
out
lds
repz
and
push
and
iret
leave
repz
popa
es
sub
sbb
mov
in
dec
sahf
sub
jns
in
aad
fstpl
xor
in
lds
jns
pushl
nop
aad
in
in
cs
ss
xlat
and
in
and
add
xchg
iret
mov
and
xchg
jmp
in
in
stc
addr16
addr16
insl
in
sbb
xor
and
mov
pusha
daa
daa
iret
cmp
add
mov
iret
repz
xchg
add
dec
outsb
pop
mov
repz
ud2
popf
call
pop
enter
sahf
xchg
out
pop
sbb
xchg
out
jns
dec
push
push
out
jns
pop
sbb
sbb
cmp
jne
orb
xchg
mov
ret
xchg
out
ret
xchg
cwtl
push
leave
jo
push
cmc
add
mov
cmpsl
and
into
lahf
sub
cs
jns
xchg
inc
inc
push
dec
pop
out
sahf
xchg
push
pop
or
outsb
repnz
or
in
scas
push
sahf
test
leave
xchg
aas
iret
cmp
popf
push
adc
sahf
out
lar
inc
jo
sbb
int
jno
add
out
xchg
int
dec
sbb
enter
nop
leave
iret
fwait
jmp
or
adc
add
pop
leave
and
ljmp
lret
dec
sahf
out
xchg
add
pop
arpl
jae
fnsave
push
insb
dec
outsb
daa
pop
xchg
sahf
scas
inc
repnz
fcoml
xchg
fcmovne
fabs
psubsw
call
xchg
or
inc
lret
repnz
sub
add
out
jbe
cmove
push
lret
in
jns
or
dec
test
in
xchg
cmp
mov
mov
ret
clc
in
dec
outsb
daa
in
pmaddwd
xchg
enter
xchg
int3
sub
push
pop
dec
jb
int3
sbb
in
mov
push
outsl
pop
packsswb
add
dec
sahf
out
add
addl
push
hlt
in
xchg
int3
jg
fstpl
mov
popf
pushf
fisubs
outsb
jecxz
add
jg
sub
int
sbb
xchg
daa
pop
cmp
xchg
dec
push
xchg
out
jns
pop
add
jg,pn
add
xchg
lahf
pop
cmpsl
add
sahf
mov
pop
mov
jb
stos
jg
fucomip
repnz
add
in
cli
filds
into
push
cs
dec
sahf
out
pop
sbb
and
and
insb
ja
xor
decl
xorb
xchg
pop
addr16
into
pushf
cmp
xor
xchg
add
leave
leave
inc
repnz
cwtl
mov
test
mov
fs
jecxz
jmp
or
lsl
decl
iret
iret
mov
call
jae
popa
filds
and
cmp
xchg
xchg
test
mov
movsb
lods
dec
cs
out
mov
in
or
out
and
ret
fists
rcrb
sarb
and
xchg
es
or
loop
push
jae
jle
mov
add
outsb
repnz
syscall
lahf
push
xchg
xchg
xchg
dec
sahf
stos
shlb
xchg
xchg
xchg
xchg
rcl
shl
shr
shl
cld
movsb
mov
rolb
rcrl
rcrl
mov
sarl
roll
mov
pop
shll
jo
mov
roll
shrl
mov
sarl
xchg
xchg
sbb
xchg
xchg
xchg
sbb
pop
push
jns
xchg
xchg
adc
out
in
rcr
jmp
sahf
xor
xor
shlb
adc
xor
and
xor
ss
aaa
dec
sahf
out
sahf
cmp
bound
insl
jns
out
cmp
subl
sahf
out
ds
movsb
inc
out
fucom
scas
cmovb
mov
xchg
fildl
iret
repz
inc
icebp
dec
cld
dec
pop
daa
mov
xchg
rcll
sbb
repnz
ds
dec
cmovle
sahf
push
push
pop
push
repz
addr16
adc
mov
outsl
pop
jb
inc
leave
loop
ror
leave
shll
rcr
pop
into
cmp
enter
roll
aam
aam
inc
mov
aam
aam
aam
aas
jecxz
xchg
aam
aam
aam
pop
aam
in
das
arpl
iret
outsb
aam
aam
lea
test
aam
push
adc
movsl
push
mov
mov
jns
sbb
sbb
out
sahf
out
out
repnz
std
push
outsb
or
adc
iret
repz
push
and
aas
jbe
repnz
dec
push
pusha
das
jns
sahf
out
sub
sub
dec
sahf
out
sub
iret
rep
das
mov
iret
ret
xor
fstps
in
mov
out
out
cli
syscall
iret
jae
sahf
adc
push
sbb
cmp
iret
jae
cmp
xor
cmp
cmp
inc
push
minps
repz
leave
push
xchg
pop
iret
leave
mov
dec
and
fcom
mov
pop
clc
mov
or
xlat
cmp
mov
xor
fildl
sbb
xlat
inc
xlat
dec
pop
outsb
daa
scas
add
push
pop
pop
arpl
sbb
add
in
inc
rcr
and
daa
pushf
xchg
xchg
and
dec
cmpsl
xchg
mov
xlat
pop
cmp
in
leave
pop
clts
rcr
jns
cmp
loope
icebp
sahf
or
out
stc
or
mov
and
sub
pop
sahf
out
pop
push
add
inc
add
push
fcomp
push
and
in
in
in
xchg
lahf
cmpsl
mov
pop
and
pop
int3
lret
fsubrl
daa
loopne
pop
jmp
test
int3
sahf
add
pop
pop
or
repz
or
mov
pop
fs
out
cmp
adc
seto
repz
sahf
push
mov
push
sbb
sbb
repz
sbb
sbb
xchg
out
fwait
nopl
repz
cmp
mov
pop
sub
xor
iret
repz
daa
push
popa
das
insb
ficoml
sub
jns
sbb
fcmovu
neg
dec
pop
sahf
pop
push
add
ds
movsb
scas
ficompl
out
iret
or
dec
and
adc
sbb
xchg
xchg
and
dec
repnz
fistpl
pop
jp
mov
outsb
syscall
or
in
fistl
fistl
pop
jle
jns
xchg
fcmovnbe
fcmovnu
push
adc
sahf
push
repz
fmull
adc
sbb
pop
movhps
push
push
xor
jns
push
and
push
and
out
daa
insb
push
and
sahf
out
adc
sbb
fsubrl
fmull
pop
mov
add
sub
mov
in
sub
cmpsl
js
loope
pop
in
fdiv
repz
outsl
pop
add
push
add
pushf
cmp
sbb
and
pop
or
cmp
cmp
inc
add
mov
ja
pop
mov
cmc
jg
neg
xchg
setge
in
daa
test
add
cmp
or
add
jg
and
das
aas
outsl
cmc
fldl
fimuls
or
and
sub
adc
pushf
dec
ds
out
pop
fisubs
jns
out
inc
outsl
push
das
ja
jg
rcll
xchg
xsha256
cmpsb
xchg
iret
in
lahf
fisttps
adc
ret
dec
dec
lret
add
ja
jns
loop
iret
repnz
jae
dec
sahf
pop
cli
or
fisttps
adc
jns
sub
pop
cmp
leave
repz
cmp
dec
adc
jns
fistpl
pusha
lahf
push
pop
pop
sahf
sbb
scas
ror
repnz
nop
fistps
sbb
stos
pop
mov
push
fistps
xlat
fisttps
inc
mov
add
cmp
push
push
or
and
cmp
repnz
into
loopne
or
jb
mov
pop
data16
cmp
jae
adc
es
adc
movhps
test
fcmovne
repz
sbb
jns
aam
fistps
sbb
nopl
pop
stc
pop
cmp
in
mov
push
push
and
pushf
cmp
repz
and
leave
repz
dec
pop
sub
sahf
out
outsb
sub
test
iret
cmp
push
xor
lcall
jns
fdivl
loope
xchg
jl
fistpll
nop
lock
mov
adc
aam
movsl
or
xchg
mov
adc
inc
push
sbb
int
div
pop
aas
inc
push
sti
push
sbb
aas
dec
and
cmp
aaa
subl
out
repnz
sahf
out
sahf
sbb
in
in
jns
or
or
outsb
mov
leave
or
adc
fucom
frstor
adc
adc
and
pop
inc
inc
push
addr16
fucomi
jbe
das
push
xorps
in
sahf
subl
jo
jb
jbe
in
push
pop
andb
cmpb
mov
xchg
push
sub
mov
fsubrl
cmp
sbb
sub
dec
sbb
mov
add
stc
repz
dec
testb
cmp
iret
repz
xor
sub
sbb
cmpsl
stc
cmp
clc
clc
in
call
jns
aam
iret
jnp
out
enter
mov
cmp
mov
jns
out
xorb
out
sahf
out
dec
inc
sub
cmpb
add
push
mov
cli
mov
adc
push
insb
mov
nop
lret
add
cmpsb
xchg
add
stc
std
inc
movsl
nop
loop
xlat
adc
mov
fsts
cld
inc
push
add
movsb
add
scas
jl
in
cmpsb
fisttps
mov
cld
inc
jle
push
push
std
pop
test
shll
dec
sbbb
stc
lcall
iret
mov
in
call
ja
jle
adc
push
ficompl
mov
cmpsl
in
fidivl
rcr
fsubp
stc
jb
jle
call
inc
daa
inc
xor
mov
or
inc
mov
add
push
and
xor
or
icebp
out
jp
cmp
inc
aaa
push
push
pusha
imul
add
popa
pop
das
mov
add
jg
fimuls
lcall
push
or
or
adc
adc
repz
movsb
adc
out
cmp
sbb
std
sbb
test
push
repz
out
pop
fdivr
and
and
mov
push
jns
jp
push
repz
lcall
idivb
mov
cmpsb
aas
rcrb
push
fcomps
dec
push
add
add
aaa
inc
sbb
pop
pop
js
mul
adc
adcb
push
inc
or
push
cwtl
cmpb
fstps
jae
xorb
rolb
mov
rcpps
inc
dec
divl
adc
push
push
xchg
aaa
push
insb
pop
aas
pop
daa
sbb
push
negl
push
cmpsb
fisubl
outsl
scas
cmp
jg
stc
mov
add
xchg
cs
push
out
fcoms
sub
push
out
inc
inc
dec
sbb
cmp
inc
push
dec
xchg
es
iret
repz
sbb
sbb
in
cmp
or
inc
or
out
jns
dec
and
adc
xor
repz
or
ds
iret
call
adc
and
push
or
add
push
cld
adc
pop
loopne
push
hlt
sbb
cmp
repz
enter
cmp
repz
mov
repz
mov
lods
and
ljmp
jo
mov
mov
inc
out
xor
mov
cs
cld
xorb
inc
cmp
xorl
pop
cmp
out
push
pop
js
mov
sti
cmp
out
adc
xor
add
mov
pop
ja
adcl
dec
das
stos
dec
popf
out
dec
insb
xchg
jnp
jmp
das
mov
add
cli
or
or
in
jl
ret
mov
adc
stc
and
and
sbb
into
sbb
inc
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
sti
incl
add
inc
stc
mov
adc
mov
decl
js
jg
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
loope
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
pushl
mov
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
decl
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
lcall
pop
cmpsb
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
dec
pop
fldl
xchg
and
and
add
mov
aas
jno
or
mov
pop
fs
dec
lea
aas
inc
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
pushl
xchg
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
decl
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
jmp
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
in
adc
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
incl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
call
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
pushl
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
jmp
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
xor
std
jmp
sbb
gs
std
orl
pop
ficomps
frstor
in
add
pop
pop
push
mov
inc
pop
cmp
sbb
jnp
ljmp
push
cmpsl
add
ja
popa
push
out
mov
decl
cltd
sbb
insl
pop
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
call
xchg
sub
mov
sub
mov
sbb
dec
jno
repz
mov
sbb
in
insl
push
mov
hlt
movl
imul
std
in
leave
jmp
dec
pop
add
insb
push
arpl
psubd
or
outsb
cmp
imul
cld
jmp
shl
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
fistpll
jne
filds
or
shrl
push
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
add
and
or
adc
stos
sbb
data16
inc
fdivl
jno
fildl
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
fildll
in
or
mov
cmp
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
incl
sbb
hlt
or
fnstenv
adc
mov
mov
bound
lcall
ficoml
gs
aam
pop
popa
mov
into
pop
cmp
mov
inc
ljmp
adc
ret
movsb
sti
hlt
shrl
imul
mov
jmp
sarb
add
in
add
pop
dec
or
cmp
add
daa
adc
decl
mov
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
shlb
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
pushl
je
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
adc
ljmp
test
push
or
push
in
decl
xchg
daa
scas
fs
lcall
shlb
add
inc
push
imul
xorb
sbb
incl
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
scas
decl
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
cli
out
mov
jns
imul
andl
shrb
rclb
or
clc
dec
add
mov
das
es
lds
or
add
push
pop
cmpsl
call
ret
shlb
scas
ficomps
ret
lcall
pushf
mov
insl
add
ss
jmp
addr16
jb
mov
mov
loop
sub
or
mov
xchg
or
call
in
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
fcomip
mov
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
mov
clc
sar
imul
push
js
or
push
addl
test
add
popa
cmpsl
notl
pusha
rorb
imul
jg
push
scas
fcompl
fldenv
filds
add
ljmp
lds
mov
jmp
xor
repnz
lret
mov
cmpsb
mov
aaa
mov
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
add
ljmp
outsl
sub
mov
or
sbb
add
sub
es
call
fcoms
mov
push
cmp
or
jg
aad
push
xlat
fdiv
cmp
repz
fcmovnu
fstpl
iret
fsubp
jecxz
in
cmp
repz
iret
repz
in
repz
cmc
div
cmp
repz
stc
cli
sti
cld
lea
outsb
pop
adc
aas
rorb
hlt
add
inc
lahf
mov
adcb
push
call
inc
inc
push
dec
fcomps
movsl
cld
jbe
inc
pop
pop
sbb
bound
or
enter
popa
je
push
mov
inc
in
fistpll
and
bound
xchg
dec
cmp
pushl
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
cmp
xor
xor
bound
notb
jbe
pop
insb
lret
mov
cmpsb
fs
jo
sbb
imul
dec
inc
push
outsl
dec
sub
push
inc
push
add
pop
push
cltd
mov
icebp
popa
imul
fs
sub
fdivs
ss
and
lret
dec
and
ret
jbe
icebp
roll
jle
gs
test
dec
icebp
mov
pop
pusha
cmpsb
xor
aaa
cli
mov
inc
xor
insb
popa
jns
cmp
cmp
insb
sub
and
rclb
movq
jge
pusha
pop
xor
add
cltd
and
jae
adc
int
dec
mov
pop
pop
inc
aas
mov
mov
fwait
lea
mov
inc
es
inc
dec
inc
pop
je
jo
cmp
add
ds
mov
scas
add
std
call
int
push
dec
push
adc
sbb
xor
cmpsb
dec
mov
sbb
sbb
ja
outsb
jne
push
push
xchg
popa
popa
mov
dec
jge
addr16
pop
ja
add
add
or
fcomps
outsl
add
addr16
clc
xchg
popf
pusha
insl
fmulp
pop
jo
jge
push
add
pop
pop
inc
cmp
push
rorl
aaa
push
mov
fcoml
or
mov
subb
mov
lahf
bound
mov
mov
push
sbb
mov
sbb
and
add
inc
jb
cmp
test
popa
jo
sub
cmpsl
lahf
add
rcl
push
outsl
outsl
test
mov
add
mov
or
jno
mov
in
add
andl
xchg
nop
test
add
out
inc
adc
arpl
xchg
mov
or
push
push
add
outsl
insb
jns
stos
add
mov
push
jnp
pop
insl
xchg
gs
inc
outsl
arpl
adc
mov
notb
xchg
iret
inc
push
bound
ja
jge
ficoml
jbe
xor
mov
pusha
jg
push
dec
adc
cwtl
xor
pop
iret
lods
jmp
mov
inc
orb
repz
adcl
dec
and
sahf
pusha
sbb
mov
dec
jle
lods
xor
and
inc
and
add
daa
pop
adc
jo
outsb
rclb
call
push
inc
dec
pop
mov
je
jns
arpl
je
push
lcall
push
pusha
mov
aaa
inc
jne
push
or
add
sbb
fildl
or
push
add
dec
push
add
add
xor
adcb
pop
pop
and
push
add
push
dec
adc
shlb
dec
inc
push
call
lret
or
pop
je
stos
dec
lcall
loope
lret
adc
sbb
or
jmp
lcall
loope
fwait
popf
out
ljmp
call
cmp
ljmp
add
mov
leave
leave
rorl
ds
out
lods
sbb
push
add
mov
jmp
int
orb
mov
mov
xchg
outsb
mov
std
mov
out
cs
mov
ja
aam
pop
sbb
fcoms
sbb
add
call
jge
mov
cmpsb
sahf
inc
pop
adc
push
in
in
lea
pop
jg
pop
sbb
pop
jmp
jge
cmp
imull
xchg
sti
sub
jg
stc
cmp
je
decl
ljmp
pop
rcll
fcom
mov
stos
shll
out
fwait
mov
sub
sti
insb
mov
mov
xor
iret
hlt
mov
jb
or
mov
xchg
pop
sahf
cmpl
xchg
sbb
adc
pop
cmp
call
hlt
xchg
std
cmp
scas
or
cmp
clc
sbb
xor
rcll
incl
bound
fdivrl
imul
lcall
pusha
cmp
push
push
shll
sbb
test
fcmovne
jnp
mov
pop
xor
decl
seta
sbb
push
adc
xchg
adc
scas
in
inc
imul
shlb
jns
push
int3
idivb
arpl
ror
inc
mov
xlat
pop
clc
bound
xorb
cmpsl
outsl
push
pop
aam
ljmp
xchg
fidivrs
repz
pushf
push
sbb
imul
sti
dec
sub
incl
cs
sub
cmp
dec
push
fstps
xor
loop
cwtl
ret
lcall
xchg
ss
cmp
or
outsl
adc
jle
pop
xchg
xchg
and
jecxz
ret
sub
mov
fiaddl
fs
inc
mov
pop
add
cmp
das
js
dec
xor
pushl
nop
hlt
pop
mov
ss
add
popf
shlb
inc
int
in
or
inc
lcall
mov
ret
stos
and
fbstp
dec
pop
inc
int3
mov
dec
pushf
rclb
movsl
leave
es
decl
aas
mov
xorb
aad
in
mov
outsb
jne,pt
inc
dec
mov
lcall
stos
imulb
aaa
fdivrs
ret
fstl
xchg
mov
mov
add
pushl
out
or
jae
sub
sbb
or
xchg
pop
add
pop
cmp
mov
inc
xchg
push
push
movsl
popa
pop
jp
stc
cli
enter
out
aaa
cmc
xchg
icebp
push
jo
xchg
sbb
imul
aam
aaa
repz
imul
jno
and
pusha
dec
loope
test
call
sbb
out
adc
xchg
ja
cmp
aam
sbb
mov
in
xchg
roll
inc
and
les
and
popa
popf
sahf
mov
xchg
push
xor
add
pop
xchg
mov
dec
call
push
add
cmp
pop
add
mov
adc
insl
xchg
xchg
or
jmp
ljmp
ficoml
out
or
cli
jecxz
mov
xchg
lea
dec
cmpsl
pushl
sbb
jbe
mov
cmp
jb
mov
rcr
cs
cwtl
clc
jg
jmp
and
out
or
mov
out
push
fucomi
fsubrs
pop
mov
sub
test
xor
jp
rorl
jle
inc
es
decl
ss
xchg
sub
cmp
outsb
cmpsb
adc
fadds
push
shl
cltd
or
lcall
sbb
ficomps
mov
cmp
testb
adc
ja
or
mov
fs
ljmp
jp
clc
sbb
stos
sbb
mov
lcall
mov
add
das
dec
sahf
rcrl
fstl
cmpsb
addr16
cmp
or
push
in
fbstp
lret
shlb
mov
fnsave
xor
and
push
mov
rorb
push
ljmp
mov
cli
inc
cmp
and
int
movsl
xor
in
sti
push
jae
jmp
cmp
out
in
xchg
inc
xchg
hlt
ret
adc
lock
nop
cmpsl
mov
aaa
std
call
push
test
daa
ljmp
cmpsl
add
call
shrb
scas
adc
test
sub
inc
and
call
xchg
mov
lods
outsb
pop
jns
xchg
notl
lods
mov
inc
sub
mul
dec
push
xchg
adc
jmp
daa
les
xchg
sub
push
ret
xorb
add
add
pop
fwait
push
sbb
pushl
sub
pop
loop
lea
mov
icebp
mov
or
jmp
sub
jge
add
or
xor
rclb
adc
jg
addr16
mov
imul
mov
push
xor
icebp
pop
pushf
aam
stos
jno
decl
cs
jg
adc
sbb
inc
dec
adc
cmp
xor
pop
cmpb
divb
mov
jp
cmp
and
decl
mov
and
inc
push
cmp
adc
addr16
cmp
mov
and
ljmp
or
loope
inc
packsswb
push
sub
jg
add
mov
dec
and
insb
sub
ljmp
add
sbb
addr16
in
fisttpl
mov
lock
insl
insb
ljmp
sarb
xlat
or
pop
sbb
imul
mov
stos
or
or
repz
lock
data16
scas
mov
mov
push
and
mov
push
repz
xchg
lret
cwtl
inc
clc
cmp
jg
out
cmp
cld
adc
pop
shll
cli
sbb
xchg
jmp
aad
outsb
jbe
out
mov
std
sub
and
pop
inc
aaa
imul
inc
and
add
xor
ljmp
ficoms
insb
inc
cld
xor
push
ljmp
jnp
les
arpl
push
cmp
mov
ljmp
dec
sbb
push
push
and
mov
jae
pop
icebp
pop
xor
jge
negl
push
mov
sbb
repz
cmc
adc
scas
ficoml
and
push
arpl
cs
add
hlt
inc
fcmovnu
ljmp
movsb
mov
or
xchg
pusha
pop
pop
sub
js
push
mov
jmp
jnp
aam
ljmp
testl
add
push
std
fbstp
cmp
mov
dec
ja
xchg
mov
pop
test
cmp
push
sub
sbb
xor
loop
movsb
xor
fnstcw
sbb
jmp
push
js
leave
mov
jl
sub
ja
pushl
fldl
movsb
add
aad
mov
mov
push
pusha
lods
fsts
in
aaa
add
hlt
aas
cmpsb
lcall
jmp
push
pop
inc
jo
fs
mov
jne
jnp
adcb
adc
stos
test
or
xchg
loopne
adc
out
arpl
lcall
loop
cwtl
fisubl
xlat
cmp
fstl
lret
fistl
outsl
pop
movb
xor
ja
lahf
cmp
jno
mov
inc
dec
ljmp
adc
mul
mov
aad
movsl
inc
repnz
sub
cmp
jmp
cs
movsb
jmp
addr16
pop
js
nop
and
mulb
cs
not
jmp
push
inc
out
lock
int
in
test
mov
sbb
fbld
ret
sbb
mov
jp
call
fistl
mov
jno
test
push
test
push
xor
cwtl
push
aas
scas
cmp
lret
mov
jo
hlt
sbb
popf
pop
sub
decl
rcll
jae
movsl
and
insl
sub
mov
ljmp
add
in
push
adc
neg
adc
dec
dec
mov
push
mov
out
fistpll
in
stc
fildll
fldpi
xlat
cmpsl
mov
lea
mov
scas
pushf
out
call
ds
jno
jb
sub
sub
add
dec
pop
xchg
nop
inc
inc
mov
rep
cs
jg
inc
inc
test
jle
out
adc
jo
popf
mov
mov
std
lock
jp
xchg
int
push
fisubrs
idivl
sub
mov
mov
mov
clc
ffreep
shr
mov
loopne
and
mov
hlt
mov
mov
ret
mov
mov
push
arpl
fidivrs
push
jmp
jl
xorl
rcll
dec
sbb
jg
loop
in
xor
jns
pop
lret
sbb
xchg
or
cltd
jnp
jmp
xchg
sub
mov
cltd
out
jecxz
adc
ja
xchg
or
stc
push
jno
pushl
das
ljmp
and
jg
test
mov
dec
repnz
subl
sub
das
rcr
add
ret
pop
sti
fadds
jg,pn
mov
stos
pop
xchg
cmp
and
jo
jo
hlt
pop
hlt
data16
ljmp
iret
jmp
call
subl
aam
scas
shlb
aad
and
decl
insl
fstp
int3
dec
push
mov
imul
idiv
cmpl
pop
mov
add
aas
xchg
inc
add
or
ja
incl
add
arpl
arpl
fsubrs
outsb
adc
mov
push
stc
incb
out
mov
insw
jno
and
clc
cwtl
xor
adc
fdivs
loopne
js
cld
xor
mov
ss
cwtl
add
sbb
jg
inc
mov
pop
jb
sbb
xchg
mov
push
cwtl
adc
aaa
xor
daa
mov
mov
sub
inc
pop
and
pop
jle
lods
push
inc
into
adc
xor
cmp
decl
outsl
add
adc
adc
and
mov
test
fcoms
dec
dec
xlat
pop
cwtl
insl
stc
incl
scas
xchg
shrl
rolb
call
pop
fstps
adc
dec
cmp
pushl
push
movsb
mov
data16
sub
dec
imul
decb
lods
jge
pop
cmc
call
aam
ret
push
iret
fidivrs
adc
ficoml
pop
pop
es
inc
push
icebp
call
clc
xchg
push
sar
adc
inc
xlat
outsl
cs
addr16
lcall
sbbl
in
out
and
push
inc
mov
jae
shrb
jbe
in
incl
mov
imul
outsl
arpl
add
dec
jo
xor
mov
mov
pushl
dec
sbb
and
addr16
sarl
xchg
clc
jmp
leave
jecxz
call
jle
shll
fistpl
iret
rol
setae
mov
scas
cwtl
icebp
inc
and
mov
lea
pop
or
xchg
icebp
lds
inc
dec
jnp
outsb
iret
scas
sbb
jp
ror
sub
xchg
mov
adc
xor
dec
jmp
dec
sub
jo
popf
xchg
sarl
sbb
pop
dec
and
cmc
lods
fdivs
pushf
pop
loopne
jmp
ss
xor
dec
imul
dec
xchg
mov
in
rorb
ljmp
leave
icebp
int3
ret
add
loope
test
popl
pop
jbe
jmp
test
jge
out
cmp
inc
sub
fcmovbe
xchg
mov
ret
jmp
out
outsl
jp
mov
out
flds
cmp
ljmp
enter
adc
mov
fildl
mov
lds
fwait
pop
cmp
xor
fs
nop
jmp
lea
scas
loopne
xchg
dec
ret
mov
push
cmpsl
xor
fstpt
bound
adc
gs
cmp
psllw
out
mov
int3
cwtl
and
clc
push
push
daa
icebp
xchg
sub
aad
inc
jno
sbb
rcll
call
sbb
dec
out
divl
scas
divl
outsl
sbb
push
add
js
repz
sahf
pop
add
xlat
inc
sub
mov
ret
pop
stos
out
pushl
in
push
ss
rorl
inc
jle
xlat
sub
inc
mov
mov
or
ljmp
sbb
pusha
and
adc
mov
hlt
push
push
cld
call
loope
add
pop
scas
add
mov
inc
cmpb
ljmp
decl
shll
sub
jnp
and
stos
cltd
mov
sub
mov
mov
mov
hlt
jae
xchg
leave
cwtl
push
cmp
aaa
repnz
insb
jg
repnz
xchg
insb
lret
push
and
daa
imul
or
test
bound
jg
and
leave
lret
jo
jg
pop
repz
inc
add
jb
arpl
jl
pop
inc
out
fadds
lods
incl
pop
adcl
dec
insb
daa
mov
or
popa
pop
mov
sahf
enter
call
mov
clc
sub
shll
stos
loope
or
sbb
cmc
stc
shll
jno
inc
sbb
ljmp
rcrl
lock
xchg
dec
icebp
pop
sub
test
inc
dec
lcall
dec
adc
cmp
push
sbb
or
jl
popa
adc
test
adc
mov
scas
repnz
inc
or
ret
sub
mov
out
pop
push
and
and
cs
ljmp
sub
push
adc
adc
loope
mov
sub
jmp
fs
adc
cmpsb
outsl
sbb
icebp
jo
jmp
aam
dec
mov
pusha
push
or
mulb
ljmp
add
lods
dec
pop
bound
mov
inc
fisubs
pop
inc
dec
sbb
ret
push
pop
cmp
lcall
incb
mov
loop
push
lret
movsl
jg
mov
loope
fwait
jle
aas
mov
xchg
imul
jp
cmp
scas
push
into
or
stos
sbb
lock
int3
xchg
repnz
lcall
jb
lret
or
jl
fisubrl
clc
xlat
xchg
in
addr16
pushl
lret
into
cwtl
or
and
rcr
andl
jl
mov
mov
lcall
mov
cmp
jmp
test
and
sub
aam
or
sahf
icebp
mov
mov
repz
pusha
adc
cmp
cld
decl
out
or
xor
push
add
orl
call
cs
dec
fwait
test
pop
xor
sbb
lds
cmc
and
adc
lret
clc
and
insb
sub
pextrw
push
dec
fsubrp
xchg
in
notl
inc
in
mov
inc
fidivl
popa
inc
js
add
push
sahf
cmpsl
sti
push
pop
incl
pop
dec
jne
adc
int
dec
fidivs
cmpsl
imul
aaa
push
jle
stos
dec
dec
push
sti
add
fbstp
ret
cld
dec
inc
jae
dec
mov
in
shll
pop
inc
les
cmp
out
lods
ret
cmpsb
or
dec
subl
bound
fcmove
mov
mov
ret
sbb
jg
push
jb
and
cmp
fistps
aas
lret
test
add
pushl
decl
mov
adc
xor
adc
push
nop
sbb
xchg
stos
add
sarl
mov
ljmpw
and
fistps
jge
or
push
test
subl
dec
push
jg
push
iret
sbb
loop
cmc
mov
pusha
jle
scas
and
ds
inc
rcl
cmp
or
lds
mov
andb
adc
insl
bound
jmp
cmc
push
imul
pop
and
arpl
add
pop
push
push
cmpl
fnsave
inc
fsubrs
test
or
daa
pop
sub
jge
imul
mov
and
jbe,pt
inc
imul
sbb
pop
inc
ret
fwait
dec
xchg
or
ljmp
int3
mov
in
add
push
movsb
jo
outsb
jb
out
push
incl
and
cmp
xchg
lods
push
mov
push
jne
subb
mov
xchg
stc
xor
and
adcb
or
rcr
arpl
out
cli
xor
dec
mov
imul
fld
int3
sbbl
pop
lods
out
mov
push
and
les
or
and
lcall
push
or
pop
adc
test
sbb
decl
test
xor
fneni(8087
stos
sbb
adc
lods
test
fcomps
ljmp
mov
repz
sti
fldt
push
mov
cmpsl
pop
test
push
cs
ljmp
jns
or
imul
sub
sub
sbb
cmp
jmp
pop
push
gs
ret
loope
push
adc
push
mov
mov
sbb
out
clc
in
loopne
push
add
jmp
add
adc
popl
or
cmp
hlt
mov
cmp
push
sub
pushf
cmpsl
xor
call
outsb
daa
sbb
mov
addr16
and
adcl
and
adc
loop
icebp
push
mov
lcall
push
data16
pusha
inc
test
sub
sbb
jo
inc
ljmp
jo
dec
idivl
inc
mov
dec
pop
inc
add
scas
mov
jl
test
add
mov
gs
lcall
lock
cmpsb
in
inc
stc
hlt
addr16
mov
jg
addr16
cmp
sbb
xchg
ja
mov
lods
outsb
xchg
fcom
dec
xorl
pop
cmp
out
cmp
int3
sub
adc
sbbl
out
bound
dec
shlb
out
ss
mov
shrl
mov
pop
fs
inc
clc
enter
mov
sub
and
leave
sub
hlt
divl
pop
bound
and
xchg
mov
adc
pop
subb
loopne
add
inc
jl
iret
cltd
mov
pop
sbb
xor
fucom
mov
incl
mov
sbb
add
daa
stos
sbb
cmc
lcall
pop
shrl
pushl
les
loope
std
pop
fsubrp
aam
and
inc
fsubl
imul
cwtl
adc
lods
or
call
scas
ja
and
xor
rclb
fnstenv
dec
pushf
push
dec
push
ljmp
cwtl
ss
jns
popl
in
je
or
ret
fbstp
fimull
fldenv
mov
pop
cmp
in
int3
in
lods
push
popa
jno
in
dec
sbb
mov
fwait
subl
jo
cmp
rcr
xor
movsl
mov
lods
loopne
xchg
dec
xchg
inc
dec
or
decl
mov
and
add
sub
push
or
incl
jnp
sahf
es
or
mov
add
mov
mov
inc
mov
shlb
filds
xchg
push
mov
or
jb
mov
pop
bound
jnp
mov
imul
js
lea
and
or
mov
mov
mov
mov
sbb
fiaddl
arpl
mov
lret
cld
pop
lods
push
popf
es
xchg
inc
mov
push
hlt
pop
icebp
nop
stos
mov
les
push
into
decl
jg
push
shr
jns
mov
sub
pop
xor
inc
xchg
push
push
jl
incl
sbb
adc
aam
pop
mov
mov
push
das
imul
mov
push
std
mov
dec
std
cmp
dec
xor
mov
xchg
xchg
mov
les
xor
popf
leave
mov
add
jae
pushf
repz
sub
int
pop
fwait
cmpsl
pop
adc
push
mov
lea
test
scas
ss
jb
lea
dec
lds
jno
notl
ljmp
inc
mov
test
cld
loopne
pop
add
ja
or
fdivrl
out
cli
push
mov
lods
pop
fstpl
loopne
adc
add
adc
mov
jmp
xchg
jg
and
and
arpl
xchg
xchg
jmp
flds
bound
fcomip
add
gs
mov
jbe
cld
in
add
inc
or
jbe
enter
xchg
fadd
mov
in
and
dec
xchg
jle
jmp
ljmp
mov
fcmovnb
cmc
pop
loopne
popa
mov
cmpsl
sbb
push
das
mov
bound
repnz
arpl
mov
cmp
xchg
xchg
sbb
jnp
jmp
xor
shl
adc
sub
xor
in
xchg
xchg
in
jg
popa
les
std
xor
insl
sub
incb
cmp
loopne
imul
and
push
adc
popa
popa
subb
push
ljmp
decl
lds
dec
daa
movsb
and
push
movsl
iret
lods
iret
dec
cmp
dec
inc
cli
cs
mov
inc
jle
test
pushl
jmp
add
daa
jecxz
cwtl
dec
mov
aaa
and
mov
xchg
sub
ljmp
clc
fists
lret
and
test
nop
mov
mov
or
loope
push
jae
push
inc
out
in
mov
dec
mov
mov
add
ljmp
test
das
out
mov
insl
testb
or
dec
cwtl
popf
mov
incl
pop
push
dec
movb
mov
shlb
sbb
aas
push
mov
add
pop
push
lock
dec
aam
andb
insl
popf
push
lahf
sbb
in
out
jns
decl
cwtl
scas
andl
std
adc
into
mov
fs
inc
fdiv
cld
xor
lock
pushl
sbb
rclb
mov
test
lret
imul
incl
dec
xchg
cmp
jl
pusha
dec
ret
jns
pop
jns
pop
jmp
add
or
flds
js
push
mov
cmp
inc
push
dec
ss
cmp
adc
mov
inc
adc
pusha
jp
mov
cmp
decl
cmp
or
dec
jmp
pusha
or
inc
data16
sbb
jbe
mov
ret
xchg
or
sub
sub
push
cwtl
inc
dec
incl
inc
jb
test
mov
xor
add
imul
decl
das
inc
lret
fcmovb
xchg
cmpsb
pusha
sub
add
imul
jmp
push
push
sbbb
insb
mov
adc
jl
xchg
ljmp
xchg
cwtl
push
je
js
lds
daa
cld
cmpsb
jmp
nop
ss
lods
inc
pop
repnz
pop
scas
inc
scas
lret
fsubrs
lds
jl
jg
pop
mov
cmp
jbe
ljmp
movl
push
dec
fcmovbe
imul
add
pop
and
mov
add
dec
or
in
push
sbb
mov
cmp
movsb
adc
sarb
add
xchg
cmp
dec
sbb
adc
call
push
stos
repnz
jo
jecxz
xlat
cltd
in
sbb
jg
cwtl
aam
add
mov
add
inc
shlb
cmc
cmp
sub
insl
loop
xchg
sbbb
ljmp
cli
jne
push
or
push
cmp
jmp
popa
sbb
lahf
push
std
inc
fxch
push
divb
mov
dec
lods
push
stos
faddl
clc
inc
dec
ret
jle
sub
pop
mov
div
sub
xchg
or
inc
dec
jp
xor
insb
lahf
inc
lcall
pusha
inc
push
sub
fwait
out
sbb
mov
or
addr16
pop
mov
in
test
mov
lcall
in
pop
fisubrs
popa
rclb
lret
fsubr
je
ret
enter
pop
dec
dec
pop
sti
lret
sti
decl
add
js
mov
pop
ds
xchg
outsb
stos
or
jg
pop
mov
pusha
stc
out
aad
inc
sub
fwait
rorl
sub
mov
inc
or
lret
mov
mov
sti
imul
xlat
fucom
and
xchg
push
jo
out
ret
test
mov
mov
orl
leave
lods
or
pop
fs
jmp
push
pushf
insl
or
xorb
jl
sbb
psrad
or
inc
repnz
cmp
ljmp
out
loopne,pn
pushf
push
cli
inc
inc
and
jns
lret
add
xor
sub
scas
clc
jmp
jbe
xchg
and
cli
int3
jl
xchg
shrl
mov
lcall
adc
sub
loopne
in
sarl
xlat
jl
cmpsl
loope
insb
stos
fbstp
push
ficompl
jmp
into
sbb
andb
push
enter
cmp
inc
jg
je
movsl
stos
dec
xchg
pushf
mov
aaa
mov
mov
shlb
push
daa
xchg
jp
in
push
xor
xchg
push
xlat
fisttps
sbb
jmp
push
xor
push
fsubrs
cmc
cmp
mov
mov
cwtl
in
or
pop
aaa
or
lcall
js
lock
push
mov
xor
jmp
cmp
call
mov
cli
cmp
jmp
push
dec
adc
or
pop
cli
mov
pop
test
add
mov
mull
push
mov
pushf
sub
inc
jl
xor
sub
lea
mov
and
dec
push
ret
fcomip
out
call
and
sub
push
sbb
jb
or
or
ss
sub
push
push
ljmp
roll
dec
mov
mov
mov
aad
rolb
aas
shlb
push
out
in
sub
jae
sbb
imul
dec
maskmovq
divl
add
clc
push
sbb
data16
mov
data16
jmp
pushl
flds
cltd
mov
jle
bound
xchg
cld
mov
mov
push
fcmovb
std
dec
nop
xchg
les
push
int
add
mov
jg
push
xchg
mov
ds
sub
pop
xchg
add
sti
call
adc
xchg
sti
or
jns
lret
icebp
sbb
add
pop
cltd
sbb
lcall
push
pop
mov
xchg
pop
fwait
jl
cmp
cmpsb
fidivs
popa
xor
es
push
icebp
dec
mov
and
jnp
jne
xor
add
stc
cli
fdivrp
xlat
and
push
aad
icebp
jnp
jb
les
add
call
sub
pop
movb
push
gs
adc
in
movsl
movsb
mov
sbb
and
nop
popf
cmp
insb
inc
dec
decl
cwtl
sahf
mov
sahf
fistpll
sub
int
int3
pop
sub
cmovae
dec
jge
inc
stos
push
inc
xchg
pop
ret
fsubs
xor
sub
hlt
call
in
sub
out
xchg
aas
icebp
in
stc
dec
out
or
mov
cmpsl
cwtl
add
dec
cli
jmp
xchg
or
das
rorb
push
cmp
jmp
scas
jge
incl
xchg
mov
shlb
xchg
int
lret
lcall
pop
jg
sbb
ret
jl
lods
fdivs
xor
adc
cltd
dec
movsb
sbb
loope
ljmp
xchg
pop
je
mov
push
stos
call
stos
add
cld
popa
mov
mov
dec
jmp
mov
push
mov
into
dec
stc
jbe
push
aas
pop
mov
jl
adc
lsl
push
shll
rcll
shl
jbe
ds
ds
cmpsb
pop
xchg
sub
roll
push
cwtl
sub
call
push
dec
inc
or
insb
insl
inc
inc
movsb
stc
cmp
aas
fsts
scas
and
add
in
ljmp
decl
dec
bound
fwait
aas
scas
int
hlt
xchg
push
mov
jecxz
test
lcall
in
and
call
dec
enter
mov
mov
mov
sub
das
push
cwtl
jl
dec
xchg
in
loope
iret
orb
nop
rol
mov
push
push
jl
xor
mov
push
dec
push
int3
in
jbe
mov
add
incl
xchg
pop
movsb
and
je
pop
mov
fcomip
inc
xor
movsl
stos
pop
outsl
clc
in
pusha
add
std
pop
push
rorb
mov
mov
xor
cmpsb
ret
imul
mov
outsb
jecxz
sbb
mov
mov
mov
cwtl
sub
pop
idiv
lcall
inc
jmp
xchg
and
ror
sub
ljmp
cmc
sbb
inc
pusha
jne
mov
lcall
sub
jmp
sub
fimull
cs
push
push
in
out
push
cmp
dec
fmuls
push
sub
cmpsb
ljmp
in
jge
jns
and
mov
leave
mov
ljmp
call
data16
pop
or
mul
mov
lods
es
lret
mov
push
pop
dec
xchg
sbb
mov
fwait
sub
sbb
stos
pusha
xchg
mov
test
shll
pushl
sbb
dec
cmp
test
fadds
adc
mov
dec
aad
sub
push
pop
mov
cmp
dec
imul
pushl
push
or
ljmp
lret
xor
cmp
popf
cmpsl
ficompl
lock
sarb
fcoml
ljmp
jl
testl
out
adc
pushf
push
push
jmp
std
cmp
or
or
negl
mov
pop
aam
mov
int
push
dec
mov
decl
lods
les
sbb
and
xchg
cmp
xchg
jno
dec
add
pushl
fdivrp
push
lcall
xchg
mov
fldt
sarb
lret
bound
decl
lock
push
pop
fiaddl
das
pop
mov
adc
and
xchg
sbb
daa
mov
pop
out
ljmp
jno
call
fwait
and
push
push
cld
or
fcomip
mov
push
inc
push
mov
lods
sub
outsb
push
in
inc
int3
and
push
leave
sbb
idiv
decl
xchg
jae
popa
jmp
orb
aad
mov
clc
je
lea
mov
test
mov
xchg
push
stos
push
mov
lock
cmp
and
push
mov
and
ljmp
jb
jae
in
fcoml
mov
and
shrl
pop
ja
sub
lcall
add
mov
xchg
js
stc
mov
jp
mov
sub
jae
push
repz
pushl
mov
mov
inc
aad
shrd
aaa
mov
push
hlt
in
negb
jp
stos
cmp
ljmp
xchg
inc
mov
test
test
cmpsl
push
xor
addr16
repnz
push
xorl
jecxz
rcrl
arpl
in
out
cmp
call
sbb
mov
inc
and
add
mov
dec
loopne
clc
xchg
sub
dec
ljmp
std
jne
clc
push
repz
xchg
negl
dec
shll
in
push
lods
jbe
decl
and
xchg
das
lods
test
test
imul
mov
add
sbb
pushl
cwtl
lods
popa
jbe
push
xor
jle
xchg
dec
dec
adc
or
clc
dec
sarb
sub
or
rcrb
or
insb
xchg
jno
ljmp
cmp
add
fistps
lea
adc
loope
jmp
aaa
cmpsb
sbb
adc
pusha
jle
mov
call
scas
movsl
sarl
sar
ljmp
push
jbe
mov
imul
xchg
jnp
lea
andb
jg
int
movsl
ficoms
outsb
lret
sub
stos
mov
push
out
mov
jne
dec
mulb
call
jae
add
sbb
subb
adc
dec
push
mov
cmp
jg
pushf
jne
and
inc
out
stc
mov
or
ja
cmc
cmp
adc
imul
xor
add
test
fs
rcrb
jmp
icebp
mov
movsb
adc
sub
lcall
mov
out
sbb
push
sti
pop
clc
outsl
jbe
in
xor
into
jns
mov
scas
fdivrs
pusha
cmpsb
jp
pop
push
adcb
aaa
ret
clc
jle
xchg
movb
adc
xor
lcall
dec
xorl
xor
mov
popf
jns
into
mov
loop
decl
push
or
xor
sub
jle
dec
stos
mov
mov
test
ds
mov
cmpsb
outsl
addb
jmp
test
jmp
insl
xchg
rcrb
icebp
aad
setns
clc
shll
stos
inc
cmpsl
fdivl
loop
test
in
or
aad
sarb
pushl
inc
imul
test
and
incl
enter
xor
mov
xor
ljmp
cmpsl
out
xor
and
je
cmpsb
inc
pusha
push
inc
xor
cltd
ja
sub
or
decl
cli
movsl
loope
mov
fidivs
mov
loopne
sti
cmpsl
xlat
sarl
incl
mov
int3
fnstsw
ret
or
mov
incl
or
jmp
xor
dec
lds
out
xchg
xlat
repnz
pop
jl
dec
fisttps
lods
adc
cltd
sti
and
cmp
ds
incl
loop
aad
lret
lcall
dec
mov
lds
lcall
jl
ljmp
popa
jge
sub
pushf
sub
or
incl
dec
aas
mov
add
mov
xor
jecxz
pusha
mov
and
mov
push
pusha
or
lcall
add
mov
ljmp
fisttps
xorb
in
es
loopne
sbb
jnp
call
les
mov
into
es
mov
mov
inc
into
or
and
xchg
fldcw
cmc
into
cwtl
mov
outsl
push
and
pop
lahf
movsl
dec
add
add
lret
insl
sti
out
outsl
mov
or
pop
test
decl
and
hlt
movsb
mov
fsts
mov
out
mov
scas
pop
fsubs
sub
call
pop
pop
sbb
sbb
cmp
arpl
or
bound
mov
clc
call
std
decl
sbb
push
lahf
cmp
imul
sar
pushl
and
or
fucomp
fs
xchg
data16
cmp
sub
jg
stos
add
mov
dec
cmp
xor
xchg
pop
outsl
das
sub
sbb
mov
xor
jnp
add
fisubrl
mov
test
stc
mov
pop
jl
movsb
push
gs
mov
jg
test
cld
jmp
mov
nop
mov
test
cltd
jge
pop
bound
out
and
mov
xchg
mov
jne
roll
pop
jb
filds
xor
ljmp
inc
fdivrs
aam
jae
adc
pop
fdivrs
jo
sbb
pop
add
jp
jl
mul
cmp
mov
das
inc
xchg
cmp
stos
shl
mov
pop
es
xchg
andl
call
loop
aam
stc
in
add
repnz
push
ss
movsl
mov
and
inc
mov
mov
xchg
fstpt
incl
mov
test
xor
das
and
pusha
insl
or
aam
mov
push
fstpt
xchg
addr16
jns
add
push
jae
jl
sbb
sbb
add
repnz
xchg
lock
data16
jg
xchg
pushf
mov
sbb
test
lods
mov
das
sar
ss
lcall
xchg
dec
dec
sbbb
out
jmp
lds
jge
xor
roll
dec
adc
iret
mov
fcoml
movsb
into
sbb
jns
sub
add
loopne
arpl
in
imul
jmp
add
xor
mov
sbb
cli
mov
jg
xor
lods
fs
int3
imul
cli
cmp
sahf
push
movsb
or
pop
je
mov
daa
lods
jne
dec
ror
push
popf
xchg
sbb
lods
jmp
bound
shr
jbe
insl
mov
inc
push
loopne
and
or
mov
out
cmpb
repz
clc
pop
movsb
inc
in
mov
loope
push
test
nop
xchg
add
add
scas
ss
cmc
stos
jl
test
or
xchg
call
mov
outsb
pop
adc
movl
and
fsub
dec
lods
pop
fistl
jg
sti
sbb
push
inc
hlt
loop
cs
adc
mov
test
pushf
pop
std
sub
shl
jg
decl
xchg
in
f2xm1
ja
rcr
push
scas
ret
aam
cmp
xor
xlat
push
out
sbb
inc
pop
incl
aam
loop
out
ja
inc
in
jecxz
mov
lcall
add
xchg
or
jp
scas
lds
mov
cmp
scas
push
mov
iret
test
lret
clc
call
xor
xchg
cmp
mov
movsb
jmp
rorl
add
pop
lret
fists
imul
imul
cmc
adc
nop
cmp
fs
fists
insb
cmp
xor
pushf
sub
out
mov
hlt
jg
and
mov
pop
pusha
jecxz
mov
test
push
adc
fisttps
dec
lcall
repz
jecxz
xchg
jp
mov
mov
leave
inc
lcall
incl
mov
ss
inc
stc
lock
testl
loope
dec
or
mulb
decl
push
or
cli
vcvttps2dq
jmp
scas
add
adc
mov
call
or
jge
mov
xchg
adcl
xor
mov
incl
repnz
mov
sahf
loop
out
scas
mov
xor
loope
lret
and
out
sub
inc
mov
or
cmp
xchg
mov
jle
cmc
mov
adc
dec
pop
xor
js
dec
jle
jmp
mov
test
mov
popa
mov
sbb
mov
movsl
or
cli
mov
jae
int
push
push
xlat
push
lods
lds
in
lret
pop
pop
mov
call
add
incl
lcall
push
cmp
int3
xorb
ds
pop
enter
inc
xchg
inc
adc
out
xchg
push
mov
mov
xchg
mov
out
movsl
cmp
add
cmp
movl
out
orb
lea
sahf
subb
dec
shlb
pop
imul
test
xor
loop
aad
imul
mov
shrl
dec
dec
add
mov
jp
fstpl
test
mov
lcall
cmp
popa
cmp
mov
addr16
insl
jbe
mov
out
push
pop
stos
add
rolb
hlt
std
mov
mov
xorb
imul
lods
mov
pushl
inc
jne
scas
stos
test
js
jbe
dec
pushf
int3
and
das
pushf
aad
lret
aaa
mov
cs
daa
cmp
push
jbe
into
fists
push
inc
outsb
in
add
inc
pop
xchg
mov
jne
arpl
sarb
aas
into
nop
lcall
outsb
and
xchg
pop
and
mov
outsl
ljmp
imull
aad
arpl
pushl
fcomps
insl
int
xchg
and
sbb
psrlq
cmp
sub
loopne
cmc
jmp
cmp
fstl
sub
insl
std
add
xchg
pop
mov
jns
fildll
movsb
add
jo
adc
add
arpl
out
sbb
jmp
mov
adc
or
leave
xchg
daa
rcr
enter
mov
xchg
clc
or
sbb
scas
je
jmp
pop
jmp
lcall
lret
mov
or
and
mov
jp
dec
je
sbb
loopne
push
out
inc
in
inc
or
movsl
bound
and
jg
add
enter
push
sbb
in
out
rolb
sti
clc
push
call
mov
ja
push
imul
xchg
cmc
lret
mov
mov
inc
lds
cmpsb
lds
adc
loopne
in
incl
sbb
repz
shlb
imul
jmp
or
jl
arpl
cmpsl
cmp
out
fwait
pop
jo
popf
push
mov
insl
or
out
sbb
out
xchg
insl
int3
scas
ret
pusha
mov
leave
mov
cli
cmp
scas
sub
cli
jns
stos
lods
xor
mov
push
out
out
int3
sub
jb
cmc
inc
hlt
test
mull
call
aam
sbb
scas
jo
cs
add
pop
add
pop
in
push
cmpsl
inc
test
movsl
jno
ljmp
sti
sbb
fs
call
test
mov
or
push
jae
aad
call
and
dec
int
clc
stos
jecxz
fcoml
mov
test
and
cld
mov
and
dec
lock
dec
insl
xor
decl
sbbb
shl
jp
stc
sub
rol
gs
lds
outsl
mov
decl
rorb
cmp
mov
sbb
icebp
pushl
aas
add
roll
xchg
pop
aas
mov
daa
jp
dec
repz
mov
les
pop
cld
addb
and
jo
out
test
mov
ss
pop
call
jns
jecxz
xor
cltd
lock
in
sub
mov
out
sbbb
pushl
out
sub
lods
cwtl
xor
cltd
scas
call
movsl
mov
pop
loope
cld
pushl
xor
mov
sub
xchg
imul
movsb
pushl
mov
add
call
fisttps
mov
mov
daa
fldcw
decl
add
scas
sub
outsl
loopne
sub
jle
jmp
push
push
ljmp
inc
lock
cmpsb
scas
xchg
mov
push
adc
cltd
in
mov
xor
frstor
aas
inc
pop
dec
push
adc
int
jne
sti
nop
push
xchg
add
es
dec
push
sbb
shlb
jg
sbb
mov
leave
mov
pop
mulb
dec
mov
cmp
lcall
mov
jno
rclb
sub
stc
mov
decl
inc
add
inc
aas
ss
incb
add
mov
lahf
xchg
setge
push
jmp
adc
aaa
cvttps2pi
hlt
xor
mov
loope
aad
jno
mov
inc
lret
cmp
pop
icebp
loope
mov
mov
sbb
fwait
mov
std
jno
xlat
push
sbb
test
ljmp
sbb
ror
mov
insb
das
xchg
leave
xor
sub
in
testb
cmp
mov
sub
fdiv
lret
and
insb
lea
push
jle
adcb
or
pop
cmc
cld
loope
jmp
or
movb
repnz
push
sti
or
sub
add
push
dec
aam
xchg
sbb
test
adc
lods
and
push
jb
mov
enter
jmp
sbb
outsl
popa
subl
hlt
cmp
in
dec
lds
xor
fldenv
mov
jp
pop
stos
aaa
fldt
adc
popf
popf
xor
mov
mov
jo
in
push
fistpl
sbb
cmp
xchg
call
faddl
mov
cmp
mul
jle
ror
into
addr16
fs
pop
cmc
lcall
inc
inc
inc
jb
mov
or
call
int
jmp
cmp
adc
and
inc
loop
lret
sub
adc
and
and
call
cmp
sbb
ljmp
mov
lock
cmp
sbb
dec
pop
movsl
sub
sar
push
dec
into
aas
into
arpl
and
push
sub
jmp
shll
push
rcrb
sbb
pushf
clc
adc
in
daa
sbb
dec
ffree
lret
mov
and
js
inc
enter
ret
movsb
xor
adc
pop
dec
xchg
mov
incl
xchg
in
xchg
outsb
sar
add
xchg
rcrb
jo
mulb
movsl
push
imul
push
xor
cmp
xchg
jmp
mov
or
iret
mov
inc
ret
xor
loopne
mov
dec
ror
adc
push
xchg
test
popf
mov
test
test
hlt
decl
nop
xchg
mov
insl
clc
jo
add
inc
and
movsb
add
xchg
leave
mov
hlt
fwait
jmp
loope
cmpsl
ret
xchg
cmc
dec
jmp
mov
mov
push
fstps
sub
iret
push
jl
mov
mov
jg
incl
ret
mov
test
mov
inc
lods
sub
pop
mov
test
push
xor
decl
lcall
nop
scas
rep
popf
sbb
aas
sub
mov
cmpl
call
lret
push
jle
cmpsl
or
pop
sbb
movsl
inc
mov
ror
rep
sub
push
rclb
dec
pushl
addr16
pop
and
arpl
std
popf
push
movl
and
pop
cmp
fld
jmp
push
xor
int3
mov
dec
mov
ljmp
jge
cs
aam
sub
loope
loopne
add
xchg
test
lret
push
ljmp
incb
push
mov
mov
insl
notl
leave
jnp
movsb
out
sub
scas
mov
mov
call
or
in
call
loopne
push
stos
idiv
pop
mov
movsl
mov
adc
insl
jge
push
push
test
aaa
mov
les
xor
inc
lcall
arpl
data16
push
inc
or
mov
jbe
es
std
jg
or
push
push
or
lcall
cwtl
xchg
or
ljmp
pop
mov
jl
ljmp
and
ljmp
xchg
xor
out
jecxz
lock
call
mov
adc
add
stos
data16
ss
add
push
hlt
adcl
ret
dec
lcall
jno
push
dec
rcl
cmpsb
or
mov
aaa
orb
adc
pop
loop
mov
xor
fsubrp
pop
andb
jo
in
inc
push
push
out
incl
clc
pop
xor
mov
in
out
push
rorb
adc
mov
loopne
push
jg
cmp
push
push
sub
or
divb
ljmp
arpl
push
and
jbe
loopne
dec
stc
loopne
xor
xchg
dec
jecxz
test
sub
inc
call
pushl
bound
out
cmpsl
dec
cmpsl
cs
lods
sub
cmpsb
or
popa
cli
call
ljmp
jns
loopne
jp
add
aad
xchg
xor
stos
lods
mov
jg
nop
lods
push
mov
jle
sbb
test
push
daa
add
call
cmpsl
sarb
loope
push
and
fcoml
and
pop
fcoms
mov
std
pop
push
enter
shl
bound
inc
mov
and
lcall
mov
inc
es
gs
popf
cmp
imul
mov
inc
add
in
lcall
xchg
shll
push
dec
pushf
adc
lahf
shrl
in
xchg
inc
cmp
pushl
mov
mov
add
and
jo
jmp
incl
test
jnp
call
inc
dec
les
xchg
mov
decl
sbb
inc
jge
fiadds
cmpsl
lahf
dec
popa
mov
xor
cmp
decl
mov
jb
testb
push
test
rorl
push
test
loope
mov
fmull
pushf
popa
leave
imul
call
jl
stos
jbe
and
inc
sahf
jnp
test
dec
add
inc
fwait
xor
incl
mov
aam
mov
fwait
loope
sbb
ja
incl
js
and
sbb
aad
pop
lret
mov
xchg
incl
add
fisubrs
cmp
incl
ret
xor
mov
lcall
push
dec
frstor
ds
adc
ljmp
imull
in
mov
js
pop
iret
jecxz
jnp
fldcw
sub
dec
out
add
or
cmp
notl
fucomi
mov
in
xchg
fdivl
iret
aas
mov
sbb
push
daa
gs
pop
jne
add
popa
add
cmp
pop
icebp
pop
hlt
mov
xor
ljmp
or
in
enter
jecxz
pushl
into
in
jbe
or
and
fwait
lret
inc
repz
test
mov
add
shl
mov
in
int
dec
les
cwtl
push
lock
call
icebp
jmp
cld
pop
std
mov
lcall
mov
ljmp
call
out
fsub
test
push
arpl
mov
jg
xor
xor
or
mov
dec
das
sar
or
int
sub
push
sbb
fdivs
cmp
fimuls
or
fadd
jb
scas
loop
sti
pop
pop
dec
pushf
ja
aam
mov
movsl
xor
xchg
mov
popf
es
clc
call
lret
lds
fisubl
sbb
scas
jle
pushl
dec
in
xchg
cmpsl
pextrw
cli
lds
adc
xchg
ja
pop
lods
pop
clc
jmp
xchg
fildl
add
mov
test
pop
mov
fcomi
pushf
push
pusha
pop
cld
mov
jg
scas
push
fcomps
outsl
movb
outsl
test
fsubl
jg
loop
ret
xchg
mov
dec
movsb
mov
adc
dec
inc
or
aas
daa
int
outsl
test
add
sahf
insl
fwait
hlt
push
cmpsb
out
and
push
push
std
adc
pushl
mov
jo
or
lods
cmp
xor
mov
mov
popa
daa
xchg
cmc
add
decl
fildll
divb
insl
ss
insb
lods
movsl
loop
pop
inc
fsubrl
js
daa
cmp
jg
mov
xchg
mov
lods
mov
xor
les
js
jmp
push
add
ljmp
popf
scas
jg
imul
or
ljmp
lret
or
pop
or
idivl
call
or
xor
sti
ds
les
mov
xor
mov
push
push
jbe
aam
mov
mov
call
movsl
xchg
es
xchg
repnz
cmp
and
call
icebp
pop
push
ret
and
arpl
fidivl
test
sbb
mov
fidivl
popl
fistps
xchg
push
push
idivb
pushl
sub
testb
movsb
sti
mov
jmp
jmp
inc
out
mov
insl
dec
icebp
push
cs
fistpll
aad
mov
add
adc
jmp
sub
aad
adc
data16
data16
jmp
mov
fwait
popf
mov
das
sar
or
test
pop
dec
out
and
pop
add
mov
pushl
arpl
sub
mov
repnz
mov
cmp
jno
fadds
lcall
jnp
dec
push
incl
movsl
int
cli
popa
stos
or
push
mov
mov
xchg
fldt
lcall
push
rolb
add
adc
out
sub
dec
dec
adc
incl
pop
add
rclb
mov
or
inc
dec
addr16
sar
incl
gs
andb
mov
cmp
push
jecxz
mov
out
clc
call
jne
push
and
push
adc
inc
jge
scas
adc
pop
nop
inc
popa
pop
loopne
lcall
xor
pop
je
movsb
insl
cmp
ret
push
cli
clc
or
cmovae
ljmp
mov
subb
sub
mov
push
xchg
mov
in
loop
push
insb
mov
mov
xlat
xlat
popf
pop
or
insb
pop
mov
xchg
sub
incl
jmp
test
and
jg
mov
in
loopne
mov
cmpsl
test
sub
xchg
aad
sub
ret
aaa
push
pop
decl
cmpsl
or
mov
cmp
mov
or
push
cmp
or
mov
gs
mov
ret
dec
inc
lcall
lret
in
out
push
lahf
sbb
addb
outsl
mov
lcall
fmull
mov
fsubp
xor
mov
mov
mov
jno
adc
or
mov
or
fldl
es
jne
das
mov
jo
imul
outsb
lock
fcmovbe
addb
mul
movsl
xchg
sbb
add
repnz
aam
adc
xor
jmp
dec
push
pop
push
lods
and
pop
xchg
xor
rorb
xchg
push
dec
mov
push
inc
sub
xlat
lock
jg
fcomip
ds
in
jg
and
jmp
shll
lock
jmp
pop
xor
cmp
imul
call
sbb
jg
pop
movsb
dec
lret
addr16
mov
xor
lret
jmp
mov
lods
lahf
inc
addl
loopne
push
pushl
xorl
imul
mov
add
xchg
and
clc
call
cld
gs
and
add
xor
sbb
adc
pusha
push
orb
dec
mov
mov
adc
add
mov
and
fisubrs
iret
pop
div
cmp
cmp
lcall
fimuls
cld
adc
ret
xchg
push
inc
xor
add
mov
mov
jmp
sbb
pop
mov
fstps
mov
sbb
rorl
aaa
in
mov
jmp
cmp
ret
iret
lods
pop
jnp
inc
and
jae
xor
push
sub
incl
add
in
not
lods
dec
data16
outsb
and
int3
xchg
adc
addr16
sbb
jbe,pt
negl
cwtl
test
lea
lcall
mov
outsb
aad
cvtpi2ps
mov
push
or
data16
pop
xor
lcall
adc
enter
hlt
orl
cmp
gs
lods
jge
and
mov
lahf
fwait
cli
incl
ret
int3
rcrl
je
xchg
fildll
xchg
jl
rol
ljmp
mov
push
push
cli
sub
movsl
pop
sbb
lret
cs
lcall
js
subb
in
ret
inc
xor
std
inc
scas
xchg
adcb
scas
in
enter
mov
sti
add
sbb
test
pop
std
fiaddl
sahf
movsl
movsl
call
ljmp
push
mov
insb
enter
fbld
xchg
xchg
ljmp
push
inc
out
mov
sbb
inc
mov
call
fs
adc
sbb
mov
xchg
jmp
movsl
mov
lds
push
fcomip
jmp
inc
sti
fwait
dec
test
cmp
push
dec
add
into
lret
pop
jmp
add
push
fimuls
xchg
sbb
push
push
xchg
mov
cmp
imul
daa
aaa
std
decl
add
cmp
sub
pop
dec
les
pushf
or
ljmp
daa
cltd
xlat
cld
xor
aas
push
enter
or
adc
jmp
jl
cmp
add
add
loope
pushl
jo
add
xor
dec
pop
or
sub
and
mov
push
shr
jmp
arpl
dec
push
sub
fbld
or
cmp
jno
lcall
dec
mov
mov
out
mov
xchg
adc
fs
adc
lods
push
add
aad
ss
ret
lahf
jmp
cmp
dec
add
inc
inc
xor
push
xchg
pushf
imulb
dec
arpl
pop
iret
loop
push
mov
sbb
sub
mov
loopne
andb
frstor
cmp
inc
cli
sbb
or
les
xchg
push
push
mov
xchg
cwtl
lcall
cmp
mov
icebp
push
inc
test
lock
push
scas
call
pop
adc
dec
dec
lahf
cmp
mov
in
cld
xor
jl
divb
div
popa
insb
adc
dec
stos
insl
cmpsb
pop
sbb
out
sahf
icebp
out
xlat
es
mov
xlat
jnp
add
rorl
cmpsl
loopne
sbb
push
leave
jg
test
notl
jmp
cmp
adc
lcall
out
scas
mov
and
push
pop
jg
pushl
push
jp
lock
mov
and
xor
jp
mov
idiv
pushl
mov
fcoms
xchg
shll
fstpl
sahf
jmp
xchg
pushl
decb
mov
push
mov
add
mov
addb
clc
adc
lcall
push
push
xor
inc
fs
push
shlb
js
loopne
call
add
xchg
cmc
xchg
mov
push
mov
popf
or
outsb
loopne
xchg
lods
pushf
lods
cmc
lcall
xchg
and
bound
and
fisttpll
in
lds
in
imul
ret
lcall
inc
movsb
fsubrs
gs
sbb
sbb
jge
loope
push
mov
or
test
push
cmp
mov
movsb
cs
and
adc
ljmp
test
call
inc
or
jno
sub
imul
xchg
lret
das
and
xchg
std
mov
aam
jg
ljmp
in
iret
shll
pop
sub
pop
test
pop
fcomip
jmp
fisttpll
mov
out
push
mov
xor
mov
jno
sbb
inc
cmp
out
mov
pop
stos
loope
fsubrp
sub
getsec
jp
push
call
mov
adc
jns
jge
pushf
aam
mov
outsl
and
push
decl
cmp
arpl
xchg
clc
shrl
arpl
xchg
in
xor
ud0
decl
popa
push
repz
mov
icebp
or
aas
std
ss
pop
or
incb
incl
add
fucomip
scas
shrb
push
dec
jae
lea
pusha
push
decl
mov
icebp
ss
jg
jbe
cmpb
stc
stos
jo
js
icebp
sbb
call
add
addl
sbb
loopne
mov
adc
jmp
les
loop
rolb
xor
in
scas
shr
push
pop
add
ljmp
adcb
add
iret
mov
xchg
dec
ret
add
cmp
sti
inc
or
cwtl
add
pusha
mov
mov
cwtl
xlat
cmp
jle
xchg
leave
push
mov
ja
jmp
xor
cli
fdivrl
cmpsb
cld
in
mov
mov
cs
test
cvtps2pd
decl
call
mov
sub
enter
xchg
test
shlb
cmp
ret
in
push
add
push
jae
sub
nop
adc
jbe
punpckhdq
adc
in
jg
pushl
fs
push
xchg
mov
mov
and
addl
jne
insb
inc
addb
decl
mov
and
in
aas
mov
cmp
rcrb
inc
dec
mov
lea
movd
imul
mov
xor
out
and
mov
aad
adc
mov
mov
js
adc
decl
ret
inc
mov
movsb
out
insl
ljmp
cli
adc
pop
callw
dec
xor
mov
dec
mov
sbb
xchg
insb
pop
enter
jg
xchg
pop
dec
or
aam
lea
popf
leave
sub
ljmp
jle
shlb
jmp
xchg
xchg
cmp
mov
aaa
call
incl
mov
xchg
xchg
jmp
test
test
loop
cmc
out
cmpsb
cmp
pop
fsts
xchg
pop
bound
cli
call
push
sub
das
sub
mov
jl
pop
ljmp
and
mov
call
cli
into
inc
test
push
shl
out
daa
jg
ret
push
std
decl
iret
mov
and
fadd
repz
sub
loopne
and
call
dec
loope
xor
push
xchg
shl
mov
shlb
adc
jl
pop
fcomip
scas
clc
adc
sub
dec
mov
scas
movsb
les
out
push
xor
cld
out
mov
pop
stos
in
pop
jg
jb
in
xor
jg
cmpsb
pop
or
add
dec
in
pop
shrb
xor
xchg
lods
mov
call
pop
int
in
movsb
pop
rcr
inc
push
js
pop
or
inc
aam
lods
lcall
ds
jle
jg
mov
scas
and
adc
fs
stos
test
ret
jecxz
js
decl
lret
push
inc
das
dec
sub
xorb
xchg
jnp
pushl
inc
out
xor
es
sub
stos
dec
sbb
and
xchg
call
cmp
mov
decl
rep
xor
mov
cmp
pop
push
test
mov
mov
xchg
mov
in
adc
mov
jg
sbb
stc
out
mov
sub
mov
popa
pop
pop
das
xchg
decl
lock
push
xor
rolb
nop
addb
das
mov
mov
scas
cli
call
dec
adc
stos
sub
sti
mov
pop
aas
mov
mov
push
sbb
add
push
int
ss
ds
dec
or
and
rcrl
fcompl
mov
push
push
test
mov
outsl
pusha
mov
sbb
pushl
icebp
push
les
nop
stos
popa
jecxz
lods
fs
ds
inc
cmc
or
dec
lods
mov
jns
daa
decl
inc
ljmp
jmp
sbb
test
inc
imul
aaa
insl
ljmp
addl
lods
rcrb
or
test
popf
xor
inc
xchg
out
jne
cmovnp
fildll
scas
push
xor
jnp
cmp
or
jp
test
es
sti
jg
nop
mov
cwtl
pushf
add
sbb
repnz
in
outsl
mov
mov
mov
adc
cs
in
out
or
cmp
lret
out
clc
incl
mov
call
push
out
and
xchg
sbb
sbb
push
push
push
mov
pop
inc
call
push
sbb
xchg
pushl
pop
shlb
mov
insl
fdivrs
shr
call
jbe
test
jmp
jg
xlat
mov
push
xchg
add
inc
adc
dec
pop
sub
cli
inc
xchg
xchg
or
stos
jmp
test
repz
push
push
jmp
ljmp
enter
sub
xchg
jbe
fadds
or
or
add
scas
leave
push
rcl
inc
and
pop
enter
mov
cmpl
fcomip
mov
inc
js
sti
int3
fsubl
scas
cmpsl
mov
std
leave
mov
in
incl
mov
xor
mov
movsl
adc
push
fsubrp
cmc
jae
mov
cmp
imul
cmp
jp
sub
rcrb
and
jl
in
adc
or
mov
popf
mov
ds
lret
das
dec
dec
es
scas
cld
cli
ds
loope
cli
jl
sbb
cmp
hlt
out
adc
mov
js
mov
jae
add
jmp
sub
mov
js
iret
xchg
dec
es
xchg
lds
inc
push
xchg
mov
inc
push
aaa
aas
loop
aas
dec
pop
loopne
cmp
fxch
xlat
dec
mov
test
dec
dec
and
negb
lds
inc
mov
jg
add
insb
and
add
cmp
dec
fnstsw
call
sub
call
ljmp
mov
sahf
dec
fwait
jae
test
stos
sbb
outsl
adc
loop
fstl
nop
mov
pushl
test
push
imul
mov
ljmp
enter
rclb
loopne
sub
xor
sub
inc
shl
jae
test
fstpl
mov
sahf
nop
std
cld
shlb
dec
mov
pop
mov
mov
cmp
ljmp
jnp
mov
adc
cmp
or
ror
mov
daa
jne
fcoml
ljmp
ret
xor
lods
dec
inc
jl
push
sub
rcll
ljmp
fnstenv
add
pop
arpl
pop
mov
test
or
clc
add
into
xchg
jae
leave
inc
jmp
or
mov
and
fucomip
xchg
jge
sahf
mov
fs
pop
call
ljmp
fisubrs
or
cmc
pop
add
mov
jmp
test
inc
loopne
addr16
mov
call
ret
les
in
sbb
mov
xchg
dec
and
incl
out
stc
fsub
jmp
int3
and
mov
inc
insl
mov
lods
int
mov
scas
leave
call
aad
add
pusha
mov
insb
mov
icebp
or
or
pushl
call
add
or
and
int
push
clc
mov
xlat
and
dec
cmpsl
adc
pushl
cli
mov
cmp
leave
pop
scas
popf
addr16
push
cld
push
pop
and
out
js
call
mov
dec
and
mull
in
repz
in
push
pop
fiadds
faddl
or
dec
stos
pop
mov
in
mov
lret
ficoms
adc
call
scas
xchg
and
push
out
das
jbe
mov
jb
mov
pop
outsb
push
push
incl
movsb
sub
or
daa
xor
lahf
daa
int3
jge
jecxz
cmc
pop
cwtl
divl
fwait
jmp
xchg
stos
clc
int
out
fsubrl
mov
jl
test
sbb
call
jbe
xor
sub
mov
jae
cmp
incl
pop
pop
in
scas
ja
jns
leave
ret
cld
insl
cmc
scas
add
dec
jg
and
popa
dec
xchg
add
add
fprem1
add
fstpt
sbb
sar
pusha
iret
jno
mov
rol
mov
movsb
sbb
into
jmp
xchg
in
push
jmp
or
mov
cmp
jle
jno
out
mov
std
inc
pop
mov
lret
mul
mov
mov
jp
mov
or
insb
mov
add
add
adc
xchg
fmuls
mov
mov
out
adc
adc
dec
mov
xchg
jmp
aaa
inc
push
lea
insl
adc
lcall
lds
pop
clc
fs
push
push
or
lcall
push
std
push
imul
mov
sahf
fs
in
les
in
mov
cmp
jle
mov
mov
adc
data16
xlat
pushf
jns
mov
popf
fs
cmc
or
sub
pop
xor
test
pop
js
and
dec
lret
or
mov
in
aad
insl
loope
adc
shlb
mov
es
in
pushl
add
cwtl
outsl
dec
and
xchg
shrl
mov
mov
pushl
scas
adc
xchg
pushf
jge
loop
cmp
icebp
lret
fmulp
jp
and
scas
jne
ljmp
and
sub
fnstcw
pop
das
cld
hlt
aaa
clc
in
mov
je
movsb
std
ss
sbb
decl
cmp
mov
nop
mov
lret
sbb
push
add
lcall
dec
xor
mov
jg
sbb
jb
cmpsb
cmpsl
jle
hlt
jo
jae
popa
jp
orl
or
pop
pushl
sti
adc
lods
mov
pop
mov
rclb
adc
nop
lock
jns
or
dec
movsl
jecxz
push
in
lds
sub
frndint
call
ljmp
sar
stc
and
pop
fcomps
scas
mov
and
and
in
mov
xor
jecxz
mov
es
out
int3
xchg
adc
jno
ss
mov
mov
icebp
jbe
xchg
xor
mov
or
mov
jmp
sbb
stc
add
ljmp
clc
fcomps
cmpsb
insl
or
inc
push
xchg
fdivr
dec
mov
sub
fsubrl
push
push
ljmp
js
loop
jecxz
fs
ret
sahf
pop
ljmp
sbb
test
lcall
outsb
add
enter
xor
mov
loope
pop
lahf
mov
mov
add
test
and
and
or
sub
cwtl
out
xor
xchg
in
jne
out
dec
sub
sti
arpl
pushl
loopne
sub
fldl
push
jno
push
lods
or
mov
lds
xchg
je
hlt
mov
loopne
inc
ss
jbe
inc
test
test
lds
test
sub
nop
ret
and
dec
iret
hlt
inc
lods
xor
and
pushl
idivb
mov
aad
fisubrl
mov
sbb
fcompl
les
cli
pushl
gs
sti
xor
adc
pop
cmp
mov
push
ds
sub
call
lea
test
jg
sbb
cmpsl
xor
addr16
movsl
push
lds
push
pop
orl
call
loope
lds
loopne
imul
sti
loopne
inc
jecxz
push
aad
jb
jecxz
dec
xchg
gs
iret
push
xlat
xor
dec
push
cmpsl
jae
jb
mov
mov
mov
fwait
loop
sbb
cmc
jno
adc
mov
push
lcall
mov
mov
scas
pop
push
add
icebp
shlb
in
mov
loopne
add
ljmp
cwtl
xchg
cmpl
xor
add
xor
push
jle
inc
xchg
incl
adc
sbb
es
arpl
sbb
inc
out
mul
or
fwait
mov
dec
out
cs
lds
popf
dec
daa
arpl
arpl
fnstsw
ss
fcomip
in
push
ds
fildl
notl
out
stos
ret
mov
lcall
jb
xor
xor
cli
rcll
stc
and
pop
insl
js
add
ljmp
mov
lods
or
cmp
scas
js
rorb
clc
xchg
adc
mov
jmp
dec
icebp
test
rcll
inc
rorl
lds
add
mov
xchg
mov
push
pusha
scas
mov
mov
lahf
sub
mov
ljmp
xor
push
and
sbb
ds
cld
xchg
lret
pop
rol
pop
ljmp
inc
inc
jo
jmp
fstl
ss
jmp
lods
inc
sub
adc
adc
fstpt
fistps
jns
cli
fcompl
lea
mov
fnsave
clc
jle
popa
scas
add
cmp
in
xchg
sub
mov
jge
decl
pushl
jb
jge
mov
push
dec
jge
add
mov
pop
inc
arpl
xor
xchg
inc
stos
lods
add
xchg
pushf
and
lret
fsubp
cmp
jne
xor
xchg
xor
fcmovnb
cmp
fimuls
mov
cmp
push
lcall
ret
jo
push
inc
pop
xchg
icebp
dec
jns
icebp
and
pusha
sub
push
out
fwait
in
filds
stc
test
call
add
test
jne
xchg
popa
outsl
inc
xchg
adc
xchg
dec
sbb
js
enter
jge
lods
fdivrl
cmovno
and
in
lods
push
mov
dec
inc
push
adc
jecxz
xchg
jns
sbb
xor
jmp
push
addr16
scas
dec
out
jae
mov
sub
or
xadd
pop
pushf
mov
outsl
push
pop
cmp
repz
outsb
jae
sbb
popa
push
mov
jae
movsb
mov
mov
cmp
xchg
aad
adc
pop
push
ja
mov
clc
rorl
add
xchg
push
ret
mov
sti
jmp
js
jno
sub
inc
cld
mov
enter
mov
fistpll
bound
popf
int
cmp
or
inc
outsb
movsl
mov
movl
shl
mov
adc
rcrl
enter
cli
pop
sbb
push
pushf
iret
xchg
out
lcall
fildl
je
rol
xchg
adc
cld
cld
mov
jle
adc
xor
das
mov
in
pop
int3
out
jmp
cltd
pop
divb
sbb
rcr
lcall
das
inc
push
mov
sub
mov
ret
dec
xchg
shlb
fwait
rorb
lcall
int3
cmp
mov
cmpsb
inc
out
xlat
fcomip
lcall
cmc
push
scas
add
push
mov
fimuls
mov
ds
and
mov
loope
sub
and
incb
mov
mov
sbb
mov
loopne
and
jb
repnz
mov
scas
roll
aaa
cld
cmp
dec
cmpb
jmp
std
daa
add
xchg
jb
roll
xchg
pop
xor
lcall
pushf
orl
das
dec
fstp
push
in
jno
sub
mov
xchg
icebp
dec
jb
addr16
loope
sbb
mov
lcall
xchg
pushf
aaa
adc
hlt
mov
imul
xor
cmp
inc
mov
push
pushf
popf
mov
fnclex
inc
lcall
pop
out
mov
movsb
loop
and
lret
jbe
mov
ss
jns
jg
lcall
stc
mov
cld
out
mov
pop
cmpsb
out
roll
push
cs
or
lods
xchg
mov
pop
jno
outsl
call
test
mov
int
test
popf
cmpb
push
add
cmpsb
xchg
decl
sbb
mov
xchg
cli
pop
cmc
stc
repz
sub
jb
scas
jmp
lock
jg
mov
xchg
mov
sbbl
sbb
jb
lret
pop
and
idivl
sbb
incl
mov
es
loope
mov
sub
lcall
push
fdivs
add
adc
imul
aas
cmp
sbb
dec
mov
or
movsb
jbe
sub
push
nop
insl
in
lret
sbb
loope
jmp
and
xchg
mov
cmp
push
je
sub
mov
in
aas
xchg
mov
pop
push
jle
js
lock
ret
push
stos
jmp
out
push
arpl
paddb
popl
push
sbb
out
or
ljmp
cli
and
lods
pusha
aas
dec
mov
dec
imul
or
push
jge
decl
lcall
nop
sbb
cmc
lea
mov
scas
or
incl
mov
loop
das
hlt
lock
cmc
fucomp
lret
xchg
adc
dec
xor
adc
mov
je
dec
pop
leave
hlt
lret
pop
xor
cmp
decl
in
inc
cmp
cmp
add
or
cld
push
xor
out
mov
jns
add
cld
out
ret
into
in
mov
lock
inc
sbb
jnp
loopne
pop
jle
outsl
cli
call
aas
pop
sub
push
movsl
clc
insl
mov
subb
or
lods
sub
jmp
mov
mov
aaa
lret
push
xchg
mov
incl
push
clc
addr16
pushl
sub
mul
push
mov
popf
sbbl
xchg
repnz
xacquire
lret
lea
push
xor
lcall
push
xchg
push
mov
mov
pusha
scas
test
push
dec
jae
stos
notb
cmc
ds
sbb
mov
lcall
js
loop
xchg
sarl
pop
sbb
or
xor
jnp
roll
xchg
xchg
add
scas
mulps
push
gs
cmp
cmp
jp
gs
mov
or
dec
mov
ffreep
mov
sbb
add
repz
cs
push
inc
jg
bsf
mov
fsubrs
enter
ret
inc
rcll
jg
lcall
leave
scas
xchg
mov
and
inc
sub
or
sti
or
add
ljmp
mov
pop
cmp
mov
mov
add
inc
xchg
cmp
or
pushl
popa
lods
icebp
sti
pop
mov
fnstsw
das
pop
push
dec
pop
idivb
lea
cli
adc
ja
pop
adcb
nop
jmp
mov
mov
clc
call
inc
jle
mov
or
orb
mov
pop
or
bound
movsl
test
gs
call
out
mov
pop
mov
sahf
dec
fcmove
sarl
xlat
lea
fisubs
push
fisubrs
push
mov
adc
inc
pop
mov
je
imul
mov
pop
and
repz
pop
inc
push
jg
mov
cmp
push
outsb
and
divb
dec
mov
dec
mov
jecxz
cmpsl
mov
gs
jg
sub
ds
fldl
ficoms
push
sar
aam
sbb
hlt
dec
rcrb
movsb
decl
lret
mov
or
push
xlat
test
pop
js
stos
pop
lods
pushf
es
dec
cld
jae
mov
incl
xchg
inc
imul
scas
and
insb
mov
xchg
inc
jl
test
icebp
in
dec
xchg
out
repz
mov
mov
ljmp
stos
aad
test
iret
xchg
xchg
test
out
cli
mov
push
test
mov
loope
call
mov
ljmp
inc
test
outsb
mov
pop
jl
dec
repz
lds
into
stc
mov
cli
lock
push
cltd
cmpsl
push
lods
mov
sub
mov
stos
add
mov
out
cmp
cmp
outsb
push
repnz
jmp
jle
jns
scas
out
and
push
mov
sub
adc
inc
mov
repz
stos
ljmp
mov
fnstenv
movsl
out
and
lcall
in
sbb
adc
ret
sub
lcall
ljmp
cwtl
pop
cmp
inc
sarb
cmp
jecxz
shl
fdivrl
aaa
push
clc
call
xor
and
xchg
aad
xchg
xchg
fnsave
dec
mov
xor
push
fdivrs
fidivrs
lret
sub
enter
lcall
or
js
pop
jo
pop
cmp
pop
push
xor
xor
or
pushl
outsl
or
xchg
jg
inc
data16
int
sbb
incl
stc
xchg
mov
mov
lret
xchg
mov
mov
mov
inc
jmp
cmpsb
aas
pop
mov
iret
add
push
ja
mov
jbe
pop
lret
add
jmp
jmp
pop
repz
jg
hlt
idiv
fcoml
pusha
leave
sub
mov
adc
jg
lock
pop
mov
int
xchg
push
ljmp
xchg
sbb
adc
cmp
loop
test
mov
je
shll
lock
mov
xchg
lock
jns
cmp
jmp
test
sbb
mov
sbb
lock
jmp
pop
push
and
test
aam
nop
sbb
adc
xchg
jo
out
dec
dec
push
mov
push
lods
xor
ficomps
sbb
je
mov
imul
cld
mov
decl
mov
scas
out
mov
gs
out
in
fcompl
adc
loop
inc
cltd
cmp
js,pn
call
jae
xor
cmp
lcall
inc
cmc
pop
mov
adc
out
mov
mov
jecxz
sub
cmp
lock
lock
xor
dec
and
iret
pop
cmpb
dec
mov
pop
jbe
fcoml
imul
xor
sub
mov
lret
ljmp
lcall
lahf
adc
in
mov
cltd
pusha
in
sbb
inc
adcb
xor
ds
xor
lds
neg
decl
mov
les
fdivr
pop
popa
dec
or
into
xchg
sarl
icebp
dec
ljmp
mov
xchg
mov
sbb
bound
into
and
xor
aam
addr16
pushl
mov
scas
dec
out
mov
jecxz
cmp
inc
jle
push
xchg
fs
mov
pop
mov
and
iret
stos
jle
popf
push
jp
inc
xor
movsb
call
lds
xor
jo
jnp
ljmp
cwtl
inc
leave
cmp
cwtl
xor
jnp
mov
test
mov
lods
mov
fs
mov
mov
inc
outsl
adc
clc
mov
dec
out
xchg
dec
hlt
nop
inc
inc
pop
out
add
repnz
addb
xor
ljmp
inc
mov
incl
push
movsl
fs
lret
mov
inc
test
or
in
mov
fnstsw
and
repnz
xchg
inc
and
fdivp
testb
jmp
rcr
call
push
mov
dec
adc
mov
stos
stos
movsl
sub
dec
mov
pushl
cwtl
dec
fiadds
adc
inc
pushf
xchg
jnp
mov
outsb
mov
and
dec
jnp
mov
leave
rorb
dec
or
xchg
xchg
fstpl
push
subb
mov
push
call
or
in
adc
fsub
pop
xchg
jo
ja
gs
enter
cmp
outsb
cli
scas
cli
jp
imul
loop
dec
push
adc
and
aam
stos
jmp
cmc
aad
jae
pop
mov
xlat
jle
arpl
jmp
movsl
jnp
cmp
sub
sub
rcrl
xor
outsl
je
dec
jne
scas
incl
adcb
mov
aaa
dec
loopne
push
fdivs
out
jg
iret
fcoms
jg
mov
inc
adc
inc
pusha
in
push
pusha
das
xchg
test
movsl
push
mov
mov
lcall
decl
jo
mov
mov
mov
cmp
adc
cli
push
leave
imul
ljmp
xorl
mov
outsb
cltd
lods
cmp
mov
and
jo
adc
adc
loope
je
pop
loop
aad
mov
cltd
daa
xorb
or
dec
push
and
and
jns
jbe
or
adc
and
or
loop
lock
jmp
jmp
negb
cmpsb
pop
cmp
pushf
ds
or
xor
dec
shl
cwtl
and
pop
shrl
lcall
sub
cltd
int3
shlb
and
add
push
fistl
cmp
adc
cmc
cld
xor
out
jmp
popf
aaa
and
ja
lods
loop
mov
xchg
dec
mov
jo
or
stos
lcall
and
mov
call
icebp
ja
sbb
and
fbld
scas
pop
xor
stos
add
pushf
leave
jmp
das
pop
testb
fwait
inc
filds
int
pop
sbb
push
mov
lock
bound
add
cltd
add
xor
fwait
jg
and
pop
cmpsl
imul
fisubl
es
fimuls
pop
cmpsb
and
cli
stos
pop
ficomps
cld
in
sub
sub
push
ja
inc
mov
stos
lahf
xchg
mov
push
mov
scas
or
leave
or
in
sar
decl
push
sti
in
dec
out
xchg
pop
outsl
cmp
jg
stos
push
add
jg
leave
loopne
daa
sub
lods
in
pusha
dec
xorl
loope
jns
adc
inc
xchg
lods
out
xor
dec
push
inc
fwait
xor
ds
arpl
iret
hlt
pop
xchg
mov
fldenv
dec
sar
call
add
mov
adc
test
filds
mov
test
jno
mov
sar
cmp
xor
jmp
adc
jns
test
mov
rorl
mov
pop
push
xchg
inc
dec
incl
inc
sbb
in
ljmp
or
lcall
xchg
cld
dec
push
shll
and
xchg
pop
test
mov
sub
incl
or
mov
ds
mov
xor
aaa
xor
pop
mov
cltd
or
jmp
mov
dec
pop
mov
adc
in
dec
test
addb
cld
mov
incl
ficoms
sub
sub
decl
inc
fdivrs
push
adc
out
cli
mov
enter
ficomps
add
push
fsts
movaps
popa
xchg
jb
push
andl
mov
inc
pop
and
jg
sbb
dec
int3
sar
pop
fistps
pop
insl
stos
add
insb
ds
ret
jae
mov
mov
mov
icebp
scas
jle
cmp
inc
mov
inc
mov
jae
jle
jnp
pop
and
sbb
stos
xchg
sarb
mov
xchg
mov
sub
jmp
mov
daa
push
cld
mov
lahf
jnp
jmp
sbb
cmp
mov
dec
mov
add
add
dec
dec
scas
jb
daa
sbb
imul
push
cmpsb
mov
call
push
notb
jge
dec
sbb
and
wrmsr
inc
mov
or
call
ret
mov
lods
mov
adc
aaa
jl
mov
mov
pop
arpl
or
ds
in
stos
insl
dec
movsb
inc
es
shlb
sub
pop
shl
pop
dec
outsl
lods
inc
or
mov
test
pop
movsb
je
int3
ss
pushl
lcall
addr16
fcomp
pusha
mov
cmp
push
pop
ljmp
sbb
cmc
test
add
mov
cmp
repz
jns
test
xor
cmp
jmp
ret
std
scas
jg
es
outsl
movsl
inc
out
orl
int
mov
lock
test
mov
fdivl
lret
imul
adc
cld
push
mov
push
js
cwtl
daa
cmp
ret
das
push
or
daa
out
xlat
mov
fimuls
xchg
jo
xchg
sub
xchg
cld
push
xor
loope
pop
mov
rcl
jecxz
jmp
fwait
in
mov
inc
push
fidivrs
push
sub
stos
cmp
scas
test
fcomip
clc
mov
sbb
ret
fstpl
lcall
fdivr
or
and
stc
stc
lret
ret
insl
pop
xchg
and
ljmp
mov
cmp
fiaddl
jb
incl
mov
test
out
xor
repnz
loope
lcall
loope
mov
jecxz
cli
xor
and
inc
push
rclb
sbb
ret
mov
xchg
std
aaa
shrl
pop
ljmp
cli
xchg
jle
out
lahf
enter
inc
aas
xchg
cmpl
mul
add
push
mov
nop
jne
mov
das
test
data16
imul
dec
cmpsb
fidivrl
jmp
mov
int
lahf
or
adc
imulb
and
cmpsl
lods
mov
lea
loop
std
cltd
xchg
xor
aaa
cs
es
cmp
insl
lcall
or
aas
fdivrs
cs
mov
push
icebp
jmp
push
cld
sub
pushf
xchg
sahf
daa
jmp
xchg
fprem1
fistpl
push
push
sub
push
jmp
pop
jo
cmp
pop
dec
out
jbe
mov
or
dec
divl
jae
lods
lds
insl
int3
std
xor
inc
mov
pop
outsl
clc
fdivrs
pop
ror
adc
outsb
mov
jle
dec
loopne
or
in
ret
cmp
pop
lret
adc
pop
aam
notl
mov
jnp
and
cmc
jmp
std
lea
incl
mov
mov
adc
xor
and
and
or
mov
incl
mov
test
aam
jbe
pop
shrb
sub
xor
mov
mov
jle
ret
cld
loopne
psubusb
test
push
inc
cmp
clc
bound
sub
fdivrs
pop
sbb
out
jecxz
pop
push
push
dec
sbb
testb
cltd
das
mov
orb
ret
push
aad
sbb
ficompl
xor
mov
xor
or
cmp
fs
test
cmpsl
xchg
and
pushl
push
lods
add
or
sub
clc
sahf
das
fisttps
xor
jg
xor
ljmp
dec
lea
outsl
adc
cmp
aas
add
loope
dec
adc
xchg
sub
sar
decl
jp
rcrl
scas
bnd
jmp
imul
cwtl
insb
xor
jg
mov
jnp
test
xchg
xor
test
xor
outsb
cs
fistps
xchg
mov
cld
decl
pop
cli
xchg
fcmovnb
xchg
fwait
negb
and
mov
negb
mov
pop
inc
sub
fisubrl
push
imul
sub
rcl
mov
int3
jmp
sbb
jg
push
adc
stos
jmp
aam
xor
adc
iret
xor
lcall
leave
inc
mov
mov
int
xor
stc
adc
mov
ds
ret
scas
jbe
xchg
ret
cmp
mov
addl
shlb
pop
mov
stc
cmpsl
lds
push
jno
add
test
les
loopne
cmp
xchg
dec
fcmovnbe
mov
repnz
lock
ss
add
dec
les
cwtl
and
mov
pop
or
and
cmp
out
lock
std
xor
call
rorb
fdivr
push
lcall
and
clc
inc
and
fstps
jns
mov
jle
push
inc
hlt
scas
xchg
dec
jnp
add
jb
mov
cmp
jmp
mov
enter
mov
adc
sbb
je
out
out
sbb
ljmp
imul
cmp
leave
es
lcall
cmp
pop
in
jmp
es
fisttps
sti
sbb
ljmp
jl
mov
lcall
mov
fdivr
loopne
sub
sbb
add
pusha
add
fnsetpm(287
add
add
in
fbstp
add
add
or
pop
pop
push
or
or
arpl
or
or
adc
adc
adc
xlat
dec
sub
pop
sbb
adc
adc
adc
mov
shrl
add
or
adc
pop
adc
cltd
insl
loopne
inc
add
adc
mov
add
add
adc
add
add
adc
mov
jb
or
xor
imul
ds
jg
movsb
add
push
adc
pop
and
xor
inc
mov
adc
push
shl
and
bound
js
add
lret
and
mov
sub
daa
adc
inc
popa
add
orl
push
sbb
fldcw
ss
xor
rcrb
mov
add
subl
push
or
or
ja
adc
push
adc
fwait
outsl
incb
pop
popa
jno
and
adc
xchg
mov
lock
shrl
icebp
mov
add
mov
push
xor
or
roll
or
mov
rcr
push
ret
xchg
and
sub
std
cmpsb
xor
aas
fs
sbb
pop
fdivrl
add
mov
mov
loopne
mov
fprem
push
push
adc
loope
mov
cmp
orb
out
cmp
xor
call
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
push
add
xchg
pusha
sti
pop
inc
leave
add
sub
pop
lcall
add
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
fisubrl
lcall
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
pop
mov
xor
push
stc
or
xchg
jg
jmp
or
insb
sub
addr16
out
or
push
push
xchg
add
repnz
incl
jbe
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
push
aaa
cmp
mov
scas
mov
pop
pop
mov
popl
movb
decl
sti
ret
scas
adc
mov
xor
lods
scas
xchg
test
call
scas
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
decl
dec
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
mov
jp
push
out
or
push
sahf
pop
clc
sti
jg
lea
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
sti
cld
cltd
inc
sbb
ret
scas
in
mov
mov
out
pop
jb
mov
mov
mov
sub
loope
fwait
sbbb
mov
dec
jp
push
gs
in
outsl
jmp
add
stc
loope
mov
sar
andl
aas
icebp
testb
mov
ljmp
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
sbb
mov
dec
adc
push
lock
lods
jp
testb
inc
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
mov
ljmp
adc
aaa
xchg
in
add
inc
adc
loope
aaa
dec
outsl
mov
or
icebp
aas
std
cli
push
push
push
idivl
pushl
sub
inc
scas
inc
mov
jg
je,pn
sub
mov
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
add
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
pop
xor
jmp
in
stos
imul
hlt
sub
movsb
add
lahf
scas
decl
gs
std
xorb
jg
aad
adc
add
pushl
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
outsb
ljmp
sarb
std
pop
les
cli
ss
dec
xchg
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
call
sub
mov
push
mov
adc
and
sbb
xchg
jo
and
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
sar
decl
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
decl
outsl
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
sbbb
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
decl
push
jo
pusha
imul
add
mov
cmp
xchg
mov
push
fcmovnu
loop
pop
xchg
ftst
jbe
xchg
and
pushl
inc
out
jae
shrb
shlb
out
aas
stc
add
out
jmp
cmp
call
adc
pop
cld
addl
scas
les
cli
adc
and
lahf
fdivrl
mov
push
enter
jecxz
scas
sub
in
pop
mov
hlt
sub
mov
dec
incb
fisubrl
aas
mov
in
pop
fsubrl
push
inc
or
pop
jg
add
mov
jae
cmp
sub
adc
mov
mov
adc
or
iret
push
jbe
push
pop
jle
into
icebp
pop
incb
jno
adc
jg
jg
jl
jecxz
sbb
sarl
adc
loopne
in
pusha
repnz
sar
adc
lahf
xor
mov
push
cmp
dec
push
in
aas
mov
sahf
cmpl
imul
push
and
jg
or
push
clc
xchg
pop
cld
jg
pushf
mov
repnz
and
mov
adc
pop
in
loope
inc
aas
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
pop
lock
data16
pop
nop
mov
call
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
push
aas
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
jg
das
ss
stos
pop
add
dec
mov
sub
jge
jbe
ds
xor
lahf
les
sbb
sbb
cld
addl
clc
incl
in
stc
mov
lahf
outsl
int3
push
sbb
pop
imul
pop
test
bound
xchg
cmpsl
out
outsl
xchg
inc
test
in
jge
popa
push
test
aaa
cld
jg
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
and
daa
out
lcall
icebp
push
cld
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
call
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
decl
inc
lds
push
pop
adc
imul
or
lcall
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
mov
lcall
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
lock
insb
test
mov
repz
outsl
lock
in
jmp
stc
out
mov
clc
push
hlt
je
ret
jl
icebp
fs
pop
add
jne
or
cmc
mov
push
mov
and
out
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rolb
aaa
std
insl
out
pop
or
or
dec
ss
outsl
pop
leave
inc
lods
movsb
or
repnz
mov
loope
pop
and
imul
cmpsl
lret
pop
in
cmp
inc
clc
jmp
mov
pop
lock
jmp
hlt
dec
mov
aas
fcomps
xlat
inc
aas
mov
jg
mov
jg
out
or
addr16
sbb
cld
daa
jp
std
adc
clc
in
loopne
cltd
or
mov
ret
nop
cmp
das
incb
add
icebp
scas
lock
pop
pop
div
cld
idivl
fs
pop
add
loope
jae
jmp
shrl
je
jge
sti
pop
lds
jg
stc
add
out
das
xchg
or
fndisi(8087
fisttps
sti
mov
or
ret
cmp
ja
push
leave
outsl
das
jge
aaa
fwait
pop
add
cmpsb
cmp
call
cli
or
data16
decb
adc
mov
and
loope
adc
call
loope
in
add
incb
in
cmp
int
add
push
pop
nop
or
dec
lock
or
mov
mov
jle
icebp
ret
ror
sbb
aaa
cmp
cmp
adc
shrb
clc
stos
sub
mov
pop
clc
loope
loope
mov
lahf
mov
sub
dec
add
xlat
jmp
mov
and
fmull
cld
pop
cmp
cmp
repz
sbb
pop
gs
lds
dec
sarl
pop
out
jg
jno
ret
jmp
cmp
inc
sti
andb
out
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
sbb
mov
ds
inc
mov
in
sbb
xchg
imul
jmp
or
mov
std
mov
daa
jmp
faddl
sbb
xchg
aaa
inc
test
sar
ljmp
lock
stc
push
dec
out
fstpt
mov
enter
add
lcall
jl
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
jmp
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
add
std
adc
push
sti
pop
inc
dec
push
leave
dec
lods
push
mov
push
cmp
xchg
push
iret
and
add
jecxz
push
addl
popa
pop
orb
nop
das
test
cmpsl
and
adc
mov
push
fildll
or
sbbb
dec
add
bnd
jo
jnp
lret
addb
inc
cs
or
adc
je
cld
outsb
dec
ja
and
jne
jo
imul
mov
jp
ds
fadds
add
sub
test
xor
dec
call
loopne
pusha
shlb
adcb
mov
dec
cmpsb
xchg
fwait
sub
add
addb
daa
sbb
out
imul
push
std
in
fstpt
push
outsl
outsl
insb
push
push
outsb
popa
jo
push
ret
adc
xchg
gs
sbb
mov
mov
and
pop
push
or
cmp
or
cmp
inc
clc
stos
insb
push
and
dec
jne
js
arpl
inc
and
ficompl
scas
pop
inc
lea
in
hlt
push
popa
adc
dec
shrb
cmp
jns
hlt
outsb
aaa
xchg
push
imul
adc
cmp
dec
add
jbe
dec
mov
out
mov
insl
bound
pushf
sub
xchg
jo
mov
int3
insb
cmp
inc
jl
loopne
dec
push
int3
and
dec
outsb
imul
dec
mov
ds
outsb
xchg
cwtl
sub
iret
dec
adc
out
pusha
popa
aas
flds
sub
inc
push
insb
imul
jae
adc
dec
mov
inc
inc
push
pusha
cmp
push
fisubs
add
popf
mov
mov
mov
pop
ds
insb
jne
mov
sarl
inc
jne
xchg
mov
xchg
mov
dec
push
inc
in
insl
adc
jo
inc
push
fildl
inc
iret
inc
adc
loopne
out
aas
test
mov
popa
addr16
rolb
fisubrs
lds
inc
or
rcrb
gs
outsb
addr16
das
push
jns
xchg
cmp
addr16
add
mov
push
push
insb
cmp
cmp
fmuls
xchg
mov
mov
xor
idivl
rcll
mov
xor
sbb
insb
pop
inc
mov
add
packuswb
mov
sbb
pop
cmp
sub
sbb
mov
jne
nop
stos
push
dec
arpl
xchg
ja
adc
xchg
mov
pop
in
mov
pop
rcrb
push
popa
inc
in
or
shll
adcl
fisubrl
pop
push
gs
fisubl
stos
insb
orl
ficoml
inc
xchg
push
jne
jge
ret
adc
cmp
sbb
fidivrl
jae
enter
cmp
xchg
dec
inc
adc
jb
mov
or
pop
jo
rcrb
dec
jb
sbbl
div
sbb
fs
lods
xor
je
ja
mov
add
mov
rcll
and
mov
pop
shll
sbb
loop
arpl
es
mov
ret
subl
sbb
push
pusha
push
and
addr16
rcl
or
adc
outsl
jns
int
add
cs
push
jmp
bound
or
pop
pop
lods
lods
jmp
mov
adc
inc
inc
ss
mov
dec
mov
jge
sbb
sub
sub
fiadds
sbb
insl
adc
or
push
es
mov
sub
or
push
or
outsl
loope
xchg
adc
xorl
cmpsl
adc
push
pusha
shlb
push
or
add
dec
iret
push
test
or
sub
std
push
addl
or
cmc
push
jo
jae
mov
cmp
paddsw
test
popf
xor
insb
cmp
sahf
mov
inc
seta
pushf
jge
lea
mov
inc
fld
xor
jo
loopne
inc
mov
in
nop
outsl
add
out
sbb
jmp
sbb
fadds
pusha
icebp
xchg
pop
inc
arpl
sbb
inc
sub
rorl
dec
gs
sahf
add
add
xor
test
fs
andb
movsb
ljmp
fs
jns
inc
loopne
add
jnp
xor
sbb
cmc
push
pusha
ret
sbb
addr16
and
fcompl
popf
and
testl
mov
cmp
mov
adc
sub
mov
nop
insl
pop
out
dec
lock
adc
outsb
loope
inc
mov
fcomps
push
popf
mov
je
and
push
outsl
xchg
inc
jb
and
or
rep
nop
inc
sbbb
das
inc
inc
orl
fdivrs
xor
cmpsl
imul
aam
incl
mov
pushf
icebp
jno
js
insb
push
inc
insb
jle
xchg
aad
out
pop
imul
sub
subb
push
xor
je
jae
jno
in
movb
push
xchg
or
adc
sbb
inc
lock
and
xor
sbb
push
mov
push
les
inc
xchg
movsl
andl
jmp
xor
xor
push
pop
xor
sub
push
not
addr16
enter
mov
push
push
adc
and
and
mov
sbb
jnp
or
dec
outsb
dec
push
popa
or
movsb
scas
adc
mov
cmpsl
ss
loop
pop
add
add
mov
cmpsb
xor
sub
dec
imul
imul
push
or
add
adc
in
and
jecxz
loopne
icebp
pop
xor
xor
add
add
jl
sub
in
bound
or
bound
add
inc
jb
add
insb
inc
jae
sahf
leave
xchg
fcmovu
fiaddl
daa
inc
sbb
jmp
repz
pop
sub
sbb
movb
adc
xchg
test
pop
mov
mov
xor
inc
je
and
adc
add
lods
mov
push
lret
int3
add
pop
ficompl
test
push
jae
test
fisubl
sbb
lods
push
aad
sahf
enter
or
adc
xchg
xchg
and
test
jge
add
sub
lret
loop
insb
pop
out
std
imul
into
jb
lea
jo
dec
adc
pushf
pusha
jp
insb
pop
push
adc
sbb
inc
cs
imul
sub
sbb
sbb
and
push
cs
lods
and
cmp
adc
sub
add
js
sub
adc
jne
add
sbb
dec
int3
outsb
push
push
adc
fnstcw
roll
insb
adc
cwtl
fistpl
repnz
sbb
cmc
jno
insl
lods
pusha
shl
dec
xor
ret
arpl
jg
popa
inc
cmp
cltd
dec
mov
push
mov
jecxz
sub
imul
mov
xchg
dec
arpl
roll
les
outsb
shrl
int3
lods
mov
inc
jbe
push
gs
subl
mov
popa
and
test
push
jmp
loope
adc
scas
push
leave
test
in
pop
aad
clc
add
pop
push
lods
sub
iret
jns
pop
push
sub
jg
loop
shr
mov
call
jg
outsl
push
jecxz
mov
dec
xchg
or
pop
mov
xchg
lods
pop
cmc
xchg
mov
shl
or
in
and
or
add
or
repz
ja
daa
sahf
imul
adc
ss
ljmp
push
pop
xchg
dec
push
sub
dec
jae
push
loop
out
or
jno
addr16
xchg
jne
sub
insb
mov
gs
je
add
jmp
or
mov
popa
sbb
inc
adc
sarb
aaa
or
push
inc
mov
add
push
add
popa
test
add
xor
dec
mov
push
hlt
or
cmp
imul
fisubrs
pop
cmp
icebp
xchg
push
adcb
xchg
jbe
prefetch
repnz
aas
sbb
jo
add
cwtl
insb
xorl
pop
dec
pusha
add
push
jl,pn
pop
aam
and
xchg
mov
and
jb
pop
outsb
push
dec
popa
cmpsb
ds
add
push
fiaddl
out
jge
push
out
inc
cs
pusha
push
rcr
insb
mov
dec
sub
cli
add
cmp
jo
lcall
ss
pop
clc
jg
adc
add
dec
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
inc
add
add
